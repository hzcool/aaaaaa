[
    {
        "content": "PS\uff1a\u8fd9\u53ea\u662f\u4e2a\u66f4\u65b0\u554a\uff0c\u6c42\u7ba1\u7406\u5458\u7ed9\u4e2a\u901a\u8fc7\n\n$update:2019-3-6$\n\n\u4e4b\u524d\u8bf4\u7684\u8bdd\u5f88\u591a\u5730\u65b9\u6bd4\u8f83\u6a21\u7cca\uff0c\u91cd\u65b0\u7ec4\u7ec7\u4e00\u4e0b\u8bed\u8a00\uff0c\u6539\u6210\u4e86\u66f4\u6613\u7406\u89e3\u7684\u63cf\u8ff0\u65b9\u5f0f\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u7ed9\u4e2a\u901a\u8fc7\\\u6258\u816e\n\n-----\n\n\u4e00\u9053\u9898\u610f\u6e05\u6670\u7684\u6811\u5f62DP\u6a21\u677f\u9898\uff0c\u4e0d\u4f1a\u6811\u5f62DP\u7684\u53ef\u4ee5\u53bb\u770b\u6211\u7684\u535a\u5ba2[**\u6811\u5f62DP\u5165\u95e8\u8be6\u89e3**](https://www.cnblogs.com/hanruyun/p/9788170.html)\n\n\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u9690\u542b\u7684\u6761\u4ef6\uff0c\u5f53\u67d0\u6761\u8fb9\u88ab\u4fdd\u7559\u4e0b\u6765\u65f6\uff0c\u4ece\u6839\u8282\u70b9\u5230\u8fd9\u6761\u8fb9\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\u4e5f\u90fd\u5fc5\u987b\u4fdd\u7559\u4e0b\u6765\n\n\u8bbe$f[u][i]$\u8868\u793a$u$\u7684\u5b50\u6811\u4e0a\u4fdd\u7559$i$\u6761\u8fb9\uff0c\u81f3\u591a\u4fdd\u7559\u7684\u82f9\u679c\u6570\u76ee\n\n\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5c31\u663e\u800c\u6613\u89c1\u4e86\n\n$f[u][i]=max(f[u][i],f[u][i-j-1]+f[v][j]+e[i].w)(~1 \\le i \\le min(q,sz[u]),0 \\le j \\le min(sz[v],i-1)~)$\n\n$u$\u8868\u793a\u5f53\u524d\u8282\u70b9\uff0c$v$\u662f$u$\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c$sz[u]$\u8868\u793a$u$\u7684\u5b50\u6811\u4e0a\u7684\u8fb9\u6570\uff0cq\u5c31\u662f\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u6700\u591a\u4fdd\u7559\u8fb9\u6570\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u65b9\u7a0b\u5462\uff1f\n\n\u9996\u5148\uff0c\u4e3a\u4ec0\u4e48\u662f$f[u][i-j-1]$\u800c\u4e0d\u662f$f[u][i-j]$\uff1f\n\n\u4e3a\u524d\u6587\u63d0\u5230\u4e86\uff0c\u4fdd\u7559\u4e00\u6761\u8fb9\u5fc5\u987b\u4fdd\u7559\u4ece\u6839\u8282\u70b9\u5230\u8fd9\u6761\u8fb9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8fb9\uff0c\u90a3\u4e48\u5982\u679c\u4f60\u60f3\u4ece$u$\u7684\u5b50\u8282\u70b9$v$\u7684\u5b50\u6811\u4e0a\u7559\u8fb9\u7684\u8bdd\uff0c\u4e5f\u8981\u7559\u4e0b$u,v$\u4e4b\u95f4\u7684\u8fde\u8fb9\n\n\u90a3\u4e48\u53d6\u503c\u8303\u56f4$k$\u4e3a\u4ec0\u4e48\u8981\u5c0f\u4e8e\u7b49\u4e8e$i-1$\u800c\u4e0d\u662f$i$\u5462\uff1f\n\n\u540c\u4e0a\uff0c\u56e0\u4e3a\u8981\u4fdd\u7559$u,v$\u8fde\u8fb9\n\n\u5bf9\u4e86\uff0c\u522b\u5fd8\u4e86$i,j$\u8981\u5012\u5e8f\u679a\u4e3e\u56e0\u4e3a\u8fd9\u662f$01$\u80cc\u5305\n\n\u4e0b\u653e\u4ee3\u7801\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cctype>\n#define ll long long\n#define gc getchar\n#define maxn 105\nusing namespace std;\n\ninline ll read(){\n\tll a=0;int f=0;char p=gc();\n\twhile(!isdigit(p)){f|=p=='-';p=gc();}\n\twhile(isdigit(p)){a=(a<<3)+(a<<1)+(p^48);p=gc();}\n\treturn f?-a:a;\n}int n,m,f[maxn][maxn];\n\nstruct ahaha{\n\tint w,to,next;\n}e[maxn<<1];int tot,head[maxn];\ninline void add(int u,int v,int w){\n\te[tot]={w,v,head[u]};head[u]=tot++;\n}\n\nint sz[maxn];\nvoid dfs(int u,int fa){\n\tfor(int i=head[u];~i;i=e[i].next){\n\t\tint v=e[i].to;if(v==fa)continue;\n\t\tdfs(v,u);sz[u]+=sz[v]+1;\n\t\tfor(int j=min(sz[u],m);j;--j)\n\t\t\tfor(int k=min(sz[v],j-1);k>=0;--k)\n\t\t\t\tf[u][j]=max(f[u][j],f[u][j-k-1]+f[v][k]+e[i].w);\n\t}\n}\n\nint main(){memset(head,-1,sizeof head);\n\tn=read();m=read();\n\tfor(int i=1;i<n;++i){\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w);add(v,u,w);\n\t}\n\tdfs(1,-1);\n\tprintf(\"%d\\n\",f[1][m]);\n\treturn 0;\n}\n```\n\n\u5982\u679c\u6709\u4e0d\u660e\u767d\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u79c1\u4fe1\u5411\u6211\u63d0\u95ee\uff0c\u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\uff0c\u8bf7\u70b9\u4e2a\u8d5e\u5427\n\n## \u611f\u8c22\u89c2\u770b \u8bf7\u52ff\u6284\u88ad",
        "postTime": 1528162131,
        "uid": 34530,
        "name": "\u5b50\u8c26\u3002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "- ## \u524d\u8a00\n\n\u672c\u849f\u84bb\u521d\u6b21\u63a5\u89e6\u6811\u5f62$dp$\uff0c\u4e0d\u662f\u5f88\u61c2DALAO\u4eec\u628a\u6811\u679d\u4e0a\u82f9\u679c\u8f6c\u5316\u4e3a\u7ed3\u70b9\u4e0a\u82f9\u679c\u7684\u505a\u6cd5\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6c83\u4e5f\u4e0d\u77e5\u9053DALAO\u4eec\u600e\u4e48\u628a$3$\u4e2a\u65b9\u7a0b\u5408\u5728\u4e00\u8d77\u7684\u3002\u6211\u53ea\u597d\u53d1\u4e00\u7bc7\u9898\u89e3\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u849f\u84bb\u505a\u6cd5\uff0c\u987a\u4fbf\u5e2e\u52a9\u4e00\u4e0b\u6709\u540c\u6837\u56f0\u60d1\u7684\u7ae5\u978bqaq\u3002\n\n- ## \u601d\u8def\n\n\u8fd9\u9053\u9898\u6b63\u89e3\u662f\u6811\u5f62$dp$\uff0c\u8fd8\u7b97\u4e00\u9053\u6bd4\u8f83\u57fa\u7840\u7684\u6811\u5f62$dp$\u5427\u3002\n\n\u89c2\u5bdf\u9898\u76ee\u6761\u4ef6\uff0c\u6211\u4eec\u5f97\u77e5\uff0c\u81f3\u5c11\u9700\u8981\u4fdd\u7559$q$\u6761\u6811\u679d\u3002\n\n\u90a3\u4e48\uff0c\u6811\u679d\u7684\u4fdd\u7559\u6761\u6570\u662f\u8981\u4e00\u5b9a\u8981\u52a0\u5165\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u3002\u52a0\u4e0a\u6211\u4eec\u8981\u5728\u626b\u6574\u68f5\u6811\u65f6\u5fc5\u987b\u5f97\u77e5\u7684\u7ed3\u70b9\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u53ef\u4ee5\u5b9a\u4e49\u8fd9\u4e48\u4e00\u4e2a\u4e8c\u7ef4$dp$\u6570\u7ec4\u3002\n\n**\u5b9a\u4e49$dp[maxn][maxm]$\u6570\u7ec4\uff0c$dp[i][j]$\u8868\u793a\u4e3a\uff0c\u5f53\u524d\u7ed3\u70b9\u4e3a$i$\uff0c\u4fdd\u7559\u6811\u679d\u6761\u6570\u4e3a$j$\u7684\u60c5\u51b5\u4e0b\uff0c\u6240\u7559\u4e0b\u82f9\u679c\u6570\u7684\u6700\u5927\u503c\u3002**\n\n\u65e2\u7136\u8fd9\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u90a3\u4e48\u6211\u4eec\u81ea\u7136\u8fd8\u8981\u7ef4\u62a4\u4e0b\u9762\u8fd9\u4e48\u51e0\u4e2a\u503c\uff1a\n\n- $ls[x],rs[x]$ \u5206\u522b\u8868\u793a$x$\u7684\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u7ed3\u70b9\n\n- $la[x],ra[x]$ \u5206\u522b\u8868\u793a\u8fde\u5411\u5de6\u53f3\u513f\u5b50\u7684\u6811\u679d\u4e0a\u7684\u82f9\u679c \n\n**\u8fd9\u56db\u4e2a\u503c\u5747\u53ef\u4ee5\u5728\u9012\u5f52\u5efa\u6811\u7684\u65f6\u5019\u6c42\u5f97\u3002\u6211\u4eec\u73b0\u5728\u8981\u7528\u8fd9\u56db\u4e2a\u503c\u5199\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002**\n\n\u9996\u5148\u6765\u770b\u51e0\u4e2a\u7279\u6b8a\u60c5\u51b5\uff1a\n\n- $1$\u3001\u5f53 $ls[i]==0$ && $rs[i]==0$ \uff0c\u6b64\u65f6\uff0c\u8fd9\u4e2a\u7ed3\u70b9\u6ca1\u6709\u5de6\u53f3\u513f\u5b50\u3002\u8fd9\u4ee3\u8868\u8fd9\u662f\u53f6\u5b50\u7ed3\u70b9\u3002\u53f6\u5b50\u8282\u70b9\u56fa\u7136\u662f\u6ca1\u6709\u8fde\u5411\u513f\u5b50\u7684\u6811\u679d\u7684\uff08\u56e0\u4e3a\u5b83\u513f\u5b50\u90fd\u6ca1\u6709\uff09\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de$0$ \u3002\n\n- $2$\u3001\u5f53 $j == 0$ \uff0c\u8bf4\u660e\u4fdd\u7559\u6811\u679d\u6761\u6570\u4e3a$0$\uff0c\u4e5f\u5c31\u662f\u4e0d\u4fdd\u7559\u6811\u679d\u3002\u6811\u679d\u90fd\u4e0d\u4fdd\u7559\uff0c\u82f9\u679c\u81ea\u7136\u4e5f\u6ca1\u6709\uff0c\u6240\u4ee5\u4e5f\u662f\u8fd4\u56de$0$\n\n**\u7136\u540e\u5c31\u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e86\u3002**\n\n\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a\u4e2d\u95f4\u91cf $k$ \u3002**\u8fd9\u4e2a $k$ \u4ee3\u8868\u4e3a\u6211\u4eec\u7ed9\u5de6\u513f\u5b50\u5206\u914d\u7684\u6811\u679d\u6570**\u3002\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5176\u5b9e\u5c31\u662f\u7ed9\u5de6\u8fb9\u7684\u5b50\u6811\u7684\u6811\u679d\u4e0d\u80fd\u8d85\u8fc7 $k$\u6761 \u7684\u610f\u601d\u3002**\u4e5f\u5c31\u662f\u4ee4\u5de6\u5b50\u6811\u7684\u6811\u679d\u6570\u6700\u591a\u4e3a$k$\u3002**\n\n**\u6211\u4eec\u4ee4\u5de6\u5b50\u6811\u7684\u6811\u679d\u6570\u6700\u591a\u4e3a$k$\uff0c\u53f3\u5b50\u6811\u7684\u6811\u679d\u6570\u663e\u7136\u6700\u591a\u4e3a$j-k$\u3002** \u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7c97\u7565\u7684\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$dp[i][j] = max(dp[ls(i)][k-1] + dp[rs(i)][j - k-1] + la[i] + ra[i])$\n\n**\u8fd9\u91cc\u6709\u4e9b\u4eba\u6ce8\u610f\u5230\u4e86\uff0c\u8f6c\u79fb\u65b9\u7a0b\u91cc\u5199\u5206\u914d\u6570\u5206\u522b\u662f$k-1$\u548c$j-k-1$\uff0c\u800c\u975e$k$\u548c$j-k$\u3002\u8fd9\u662f\u56e0\u4e3a\u5f80\u5de6\u53f3\u513f\u5b50\u65b9\u5411\u8d70\uff0c\u4f60\u8fd8\u8981\u518d\u8d70\u8fc7\u4e00\u6761\u6811\u679d\u624d\u80fd\u5230\u8fbe\u513f\u5b50\u7ed3\u70b9\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5206\u914d\u6570\u662f\u6bd4\u539f\u6765\u5c11$1$\u7684**\n\n\u4f46\u662f\u4e14\u6162\uff0c\u6211\u4eec\u770b\u4f3c\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u8fd9\u91cc\u5374\u5206\u4e86$2$\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\u3002\n\n- $1$\u3001\u82e5$k==0$\uff0c\u6b64\u65f6$k-1==-1$\uff0c\u8fd9\u4ee3\u8868\u6211\u4eec\u6839\u672c\u4e0d\u53ef\u80fd\u5f80\u5de6\u513f\u5b50\u65b9\u5411\u8d70\uff08\u8d70\u4e86\u7684\u8bdd\u6211\u4eec\u5c31\u8981\u4e8f\u8fb9\u4e86\uff09\u3002\u6240\u4ee5\u4e0d\u80fd\u52a0\u4e0a$la[i]$\u3002\n\n- $2$\u3001\u82e5$k==j$\uff0c\u6b64\u65f6$j-k-1==-1$\uff0c\u540c\u6837\uff0c\u8fd9\u4ee3\u8868\u6211\u4eec\u4e0d\u4f1a\u8d70\u5411\u53f3\u513f\u5b50\u3002\u6240\u4ee5\u4e0d\u80fd\u52a0\u4e0a$ra[i]$\u3002\n\n**\u6240\u4ee5\uff0c\u6700\u540e\u6700\u7ec8\u7684\u8f6c\u79fb\u65b9\u7a0b\u5b9e\u9645\u4e0a\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\uff1a**\n\n\n- $dp[rs[i]][j-1] + ra[i] ~~~ (k=0)$\n\n- $dp[ls[i]][j-1] + la[i] ~~~ (k=j)$\n\n- $dp[ls[i]][k-1] + dp[rs[i]][j - k-1] + la[i] + ra[i] ~~~ (k \\ne0,k\\ne j)$\n\n\n\n\u5f53\u7136\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u662f\u76f4\u63a5\u5199\u4e0a\u53bb\u7684\u3002\u7531\u4e8e\u8981\u4e0d\u65ad\u9009\u53d6\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c**\u6240\u4ee5\u4e0a\u8ff0\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u9012\u5f52\u5b8c\u6210\u7684\u3002**\n\n\u8fd9\u5c31\u662f\u6700\u4e3b\u8981\u7684\u90e8\u5206\u4e86\u3002\n\n- ## $Code$\n\n\u4e3b\u8981\u7684\u8f6c\u79fb\u65b9\u7a0b\u6211\u89c9\u5f97\u5e94\u8be5\u662f\u8bb2\u6e05\u695a\u4e86\u3002\u5173\u4e8e\u5efa\u6811\u7684\u95ee\u9898\uff0c\u4ee3\u7801\u6ce8\u91ca\u91cc\u6709\u8be6\u7ec6\u7684\u89e3\u7b54\u3002\n\n\u6240\u4ee5\u76f4\u63a5\u770b\u4ee3\u7801\u5427$qaq$\n\n```cpp\n#include <bits/stdc++.h>\n#define mian main\n#define QWQ puts(\"QWQ\");\n#define inf 0x3f3f3f3f\n#define maxn 1005\n#define maxm 105\n\nusing namespace std;\n\nint n, q, ls[maxm], rs[maxm], la[maxm], ra[maxm];\n//n,q\u5982\u9898\uff0cls[x],rs[x]\u4ee3\u8868x\u7684\u5de6\u53f3\u513f\u5b50\uff0cla[x],ra[x]\u4ee3\u8868\u8fde\u5411\u5de6\u53f3\u513f\u5b50\u7684\u8fb9\u4e0a\u7684\u82f9\u679c \nint dp[maxn][maxm]; \nint head[maxn], nxt[maxn], to[maxn], val[maxn], cnt;//\u8fd9\u662f\u4e00\u5806\u5efa\u8fb9\u8981\u7528\u7684\u4e1c\u897fqaq \n\nvoid add_edge(int u, int v, int w)//\u90bb\u63a5\u94fe\u8868\u5efa\u8fb9..\u8c8c\u4f3c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684 \n{\n\tnxt[++ cnt] = head[u];\n\thead[u] = cnt;\n\tto[cnt] = v;\n\tval[cnt] = w;\n}\n\nvoid build(int x, int fa)//x,fa\u5206\u522b\u662f\u5f53\u524d\u8282\u70b9\u548c\u7236\u4eb2\u8282\u70b9,\u6b64\u51fd\u6570\u4e3a\u5efa\u6811 \n{\n\tint g = 0;//g\u662f\u8ba1\u6570\u5668\uff0c\u7528\u6765\u5206\u914d\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\uff0c\u4e0b\u9762\u6709\u89e3\u91ca\n\tfor(int i = head[x]; i; i = nxt[i])\n\t{\n\t\tint y = to[i];\n\t\tif(y != fa)//\u5982\u679c\u4e0d\u4e3a\u7236\u8282\u70b9\uff0c\u5c31\u4e00\u5b9a\u4e3a\u513f\u5b50\u8282\u70b9 \n\t\t{\n\t\t\tg ++;\n\t\t\tif(g == 1) ls[x] = y, la[x] = val[i];//g==1\u5206\u914d\u5230\u5de6\u513f\u5b50\u3002\u987a\u4fbf\u5904\u7406\u8fb9\u6743 \n\t\t\telse rs[x] = y, ra[x] = val[i];//g==2\u8bf4\u660e\u5de6\u513f\u5b50\u5206\u914d\u8fc7\u4e86\uff0c\u5206\u914d\u5230\u53f3\u513f\u5b50 \n\t\t\tbuild(y, x);//\u5411\u4e0b\u9012\u5f52\u5efa\u6811 \n\t\t}\n\t}\n}\n\nint _find(int i, int j) //dp[i][j]\u4ee5i\u4e3a\u6839\uff0c\u4fdd\u7559j\u4e2a\u6811\u679d\u7684\u6700\u5927\u503c\n{\n\tif(ls[i] == 0 && rs[i] == 0) return 0;//\u65e0\u5de6\u53f3\u513f\u5b50\u8bf4\u660e\u4e3a\u53f6\u5b50\uff0c\u53f6\u5b50\u6ca1\u6709\u513f\u5b50\u6811\u679d\u3002 \n\tif(j == 0) return 0;//\u4e00\u4e2a\u6811\u679d\u90fd\u4e0d\u5206\u914d\uff0c\u4e5f\u5c31\u6ca1\u6709\u82f9\u679c\u4e86\u3002 \n\tif(dp[i][j] > 0) return dp[i][j];//\u4e00\u4e2a\u4f18\u5316\u526a\u679d\uff1a\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u66f4\u65b0\u8fc7\u4e86\u5c31\u76f4\u63a5\u8fd4\u56de\u3002 \n\tfor(int k = 0; k <= j; k ++)//\u679a\u4e3e\u7ed9\u5de6\u513f\u5b50\u5206\u914d\u7684\u6811\u679d\u6570k\uff0c\u7ed9\u53f3\u513f\u5b50\u5206\u914d\u7684\u5373\u4e3a j-k\u3002 \n\t{\n\t\tif(k == 0) dp[i][j] = max(dp[i][j], _find(rs[i], j - 1) + ra[i]);//k==0\uff0c\u76f8\u5f53\u4e8e\u5168\u7ed9\u53f3\u513f\u5b50\u5206\u914d \n\t\telse if(k == j) dp[i][j] = max(dp[i][j], _find(ls[i], j - 1) + la[i]);//k==j\uff0c\u76f8\u5f53\u4e8e\u5168\u7ed9\u5de6\u513f\u5b50\u5206\u914d \n\t\tdp[i][j] = max(dp[i][j], _find(ls[i], k - 1) + _find(rs[i], j - k - 1) + la[i] + ra[i]);\n\t\t//\u8fd9\u79cd\u60c5\u51b5\u4e24\u8fb9\u5747\u6709\u5206\u914d\u3002\n\t\t//\u7531\u4e8e\u8d70\u5230\u513f\u5b50\u7ed3\u70b9\u90fd\u9700\u8981\u7ecf\u8fc7\u4e00\u6761\u6811\u679d\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5206\u914d\u6570\u90fd\u8981-1\u3002 \n\t}\n\treturn dp[i][j];\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &q);\n\tfor(int i = 1; i <= n - 1; i ++)\n\t{\n\t\tint ui, vi, wi;\n\t\tscanf(\"%d%d%d\", &ui, &vi, &wi);\n\t\tadd_edge(ui, vi, wi);\n\t\tadd_edge(vi, ui, wi);//\u5efa\u65e0\u5411\u8fb9 \n\t}\n\tbuild(1, 0);//\u5efa\u6811 \n\tprintf(\"%d\", _find(1, q));//\u8f93\u51fa \n\treturn 0;\n}\n```\n~~\u7801\u5b57\u4e0d\u6613\uff0c\u6084\u6084\u8981\u4e2a\u8d5e\u6ca1\u5173\u7cfb\u5427~~\n\n",
        "postTime": 1570758224,
        "uid": 133426,
        "name": "stone_juice\u77f3\u6c41",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P2015)  \n$\\mathcal{}$\n**  \n\t\u8fd9\u9898\u662f\u6211\u5728\u67d0\u5965\u8d5b\u4e00\u672c\u901a\uff08\u63d0\u9ad8\u7bc7\uff09\u2014\u2014\u6811\u5f62DP\u4e2d\u7684\u7b2c\u4e00\u9053\u4f8b\u9898\uff0c\u62b1\u7740\u8bd5\u4e00\u8bd5\u7684\u5fc3\u6001\uff0c\u672c\u849f\u84bb\u5c1d\u8bd5\u4e86\u8fd9\u9053\u9898\u3002~~\u5728\u8fc7\u4e86n\u5c0f\u65f6\u540e\uff0c\u7ec8\u4e8e\u505a\u51fa\u4e86\u8fd9\u9898~~  \n    ~~\u4ee5\u4e0a\u7eaf\u5c5e\u626f\u6de1~~\n**  \n### \u5207\u5165\u6b63\u9898\uff1a\n  \u9996\u5148\uff0c\u6211\u4eec\u4ed4\u7ec6\u770b\u4e00\u4e0b\u9898\u76ee\uff0c\u53ef\u4ee5\u53d1\u73b0\u2014\u2014\u8fd9\u662f\u4e00\u68f5\u6811\u5440\uff01\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u6811\u4e0aDP\u3002  \n   \u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u8bbe\u7f6e\u72b6\u6001\u5462\uff1f\n   ![](https://cdn.luogu.com.cn/upload/pic/52119.png)  \n   \u89c2\u770b\u4e0a\u9762\u8fd9\u5f20\u4e11\u964b\u7684\u56fe\uff0c\u7ea2\u8272\u7684\u6570\u5b57\u8868\u793a\u8fd9\u6761\u6811\u679d\u6240\u6709\u7684\u82f9\u679c\u6570\u91cf\u3002  \n   **\u6211\u4eec\u6709\u6ca1\u6709\u4e86\u4e00\u4e9b\u7075\u611f\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u6211\u5728\u6765\u7ed9\u4e00\u4e9b\u63d0\u793a**  \n### **\u8fd9\u9053\u9898\u7684\u51b3\u7b56**\n#### 1.\u4fdd\u7559\u8fd9\u6839\u6811\u679d\uff0c\u83b7\u5f97\u5b83\u7684\u82f9\u679c\u6570  \n#### 2.\u4e0d\u4fdd\u7559\u8fd9\u6839\u6811\u679d  \n**So\uff0c\u6211\u4eec\u7684\u72b6\u6001\u6709\u4e00\u7ef4\u662f\u6811\u679d\u7684\u6570\u91cf**  \n** \u90a3\u8fd8\u6709\u4ec0\u4e48\u548c\u72b6\u6001\u76f8\u5173\u7684\u53d8\u91cf\u5462\uff1f\u6ca1\u9519\uff0c\u4ee5\u7b2ci\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811  \n\uff08\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e00\u68f5\u5927\u7684\u5b50\u6811\u5206\u6210\u82e5\u5e72\u4e2a\u5b50\u6811\u7684\u503c\u6765\u6c42\u51fa\uff09\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u7684\u72b6\u6001\u5c31\u51fa\u6765\u4e86\uff0c\u8bbe$f[i][j]$\u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u8282\u70b9\u4fdd\u5b58 $j$ \u6839\u6811\u679d\u7684\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u82f9\u679c\u6570**  \n\u90a3\u4e48,$f[i][j]=max(f[i][j],f[left][j]+e[left].apple+f[right][k-j]+e[right].apple)$  \n\u4f46\u662f\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u662f\u6709\u95ee\u9898\u7684,$Why???$  \n**\u6211\u4eec\u6765\u4ed4\u7ec6\u770b\u4e00\u4e0b\u65b9\u7a0b\uff0c$left$\u8868\u793a$i$\u8282\u70b9\u7684\u5de6\u513f\u5b50,$right$\u8868\u793a$i$\u7684\u53f3\u513f\u5b50,$e[i].apple$\u8868\u793a\u7b2ci\u6761\u6811\u679d\u7684\u82f9\u679c\u6570\uff0c\u770b\u4e0a\u53bb\u6ca1\u6bdb\u75c5\u3002\u4f46\u662f\uff0c\u6211\u4eec\u7ed3\u5408\u4ee5\u4e0b\u4e0a\u9762\u4e11\u964b\u7684\u56fe\uff0c\u518d\u6765\u770b\u4e00\u4e0b**  \n\u5f53 $i=3$\u65f6\uff0c$f[i][1]=20$\uff0c$f[i][2]=40$\uff0c\u4f46\u662f\uff0c\u5f53 $i=1$\u65f6\uff0c\u6211\u4eec\u5982\u679c\u7ed9 $3$\u53f7\u8282\u70b9\u5206\u914d\u4e24\u6839\u6811\u679d\uff0c\u90a3\u4e48\u5b83\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u503c\uff0c40\uff0c\u4e5f\u5c31\u662f\u8bf4 $f[1][2]=40$\uff0c\u4e0d\u5bf9\u554a\uff01\u5982\u679c\u6211\u4eec\u7ed9\u4e863\u53f7\u8282\u70b92\u6839\u6811\u679d\uff0c\u90a3\u4e481\u53f7\u8282\u70b9\u5c31\u6ca1\u6709\u4e0e3\u53f7\u8282\u70b9\u76f8\u8fde\u7684\u6811\u679d\uff0c\u90a3\u4e48\u6839\u672c\u5c31\u4e0d\u53ef\u80fd\u6709 $40$\u4e2a\u82f9\u679c\u5440\uff08\u5982\u679c\u4e0d\u80fd\u7406\u89e3\uff0c\u53ef\u4ee5\u8fd9\u4e48\u60f3\u8c61\uff0c\u867d\u7136\u7136\u6bcf\u6761\u6811\u679d\u4e0a\u90fd\u6709\u53ef\u4ee5\u83b7\u5f97\u5230\u7684 $apple$,\u4f46\u662f\u5982\u679c\u4f60\u6ca1\u6709\u653e\u5230 $1$\u53f7\u8282\u70b9\uff0c\u8fd9\u4e9b\u82f9\u679c\u5c31\u90fd\u4e0d\u662f\u4f60\u7684\uff09\uff01  \n\u56de\u5230\u8f6c\u79fb\u65b9\u7a0b\u91cc\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u76f4\u63a5\u5206\u914d\u7ed9\u4e86 $left$\u8282\u70b9\u548c $right$\u8282\u70b9 $j$\u6839\u6811\u679d\u548c $i-j$\u6839\u6811\u679d, $but$\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u8003\u8651 $left$\u8282\u70b9\u548c $i$\u8282\u70b9\u4e4b\u95f4\u76f8\u8fde\u7684\u6811\u679d, $right$\u8282\u70b9\u4e5f\u662f\u4e00\u6837\u7684\uff0c$So,$\u6211\u4eec\u5f97\u5c06\u8f6c\u79fb\u65b9\u7a0b\u6539\u4e00\u4e0b  \n$f[i][j]=max(f[i][j],f[left][j-1]+e[left].apple+f[right][k-j-1]+e[right].apple$\n\u597d\u4e86\u73b0\u5728\u7684\u5c31\u5e94\u8be5\u5bf9\u4e86\uff0c\u6211\u4eec\u628a\u7ec6\u8282\u7559\u5728\u7a0b\u5e8f\u91cc\u9762  \n$\\mathcal{Code:}$  \n```\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nstruct node\n{\n    int t; //\u8fd9\u6761\u8fb9\u901a\u5411\u7684\u8282\u70b9\n    int apple; //\u7b2ci\u6761\u6811\u679d\u7684\u82f9\u679c\u6570\n    int next; //\u7b2ci\u6761\u8fb9\u7684\u4e0b\u4e00\u6761\u8fb9\n};\nnode e[2*101];\nint dp[101][101];\nint head[101],n,q,tot=0;\nvoid add(int x,int y,int z)  //\u90bb\u63a5\u8868\u5b58\u6570\n{\n    e[++tot].t=y;\n    e[tot].apple=z;\n    e[tot].next=head[x];\n    head[x]=tot;\n}\nvoid dfs(int f,int fa,int apple) //\u9012\u5f52\u904d\u5386\u8fd9\u68f5\u6811\n{\n    int son[101]={0},cnt=0; //son[1]\u8868\u793af\u7684\u5de6\u513f\u5b50\u5728\u7b2c\u51e0\u6761\u8fb9,son[2]\u8868\u793af\u7684\u53f3\u513f\u5b50\u5728\u7b2c\u51e0\u6761\u8fb9\n    bool flag=false;\n    for(int xun=head[f];xun;xun=e[xun].next)\n    {\n        if(e[xun].t!=fa)\n        {\n        \tflag=true;\n            son[++cnt]=xun;\n            dfs(e[xun].t,f,e[xun].apple);\n        }\n    }\n    if(!flag) //\u5982\u679c\u6ca1\u6709\u513f\u5b50\uff0c\u8bf4\u660e\u5b83\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u76f4\u63a5\u56de\u6eaf\n    {\n        return;\n    }\n    for(int i=1;i<=q;i++) //DP\u90e8\u5206\n    {\n        for(int j=0;j<=i;j++)\n        {\n        \tint t1=0;\n        \tif(j-1>=0) t1+=e[son[1]].apple;  //j-1>=0\u8868\u793a\u5206\u914d\u7ed9\u4e86\u5de6\u513f\u5b50\u4e0ei\u8282\u70b9\u7684\u4e00\u6761\u76f8\u8fde\u7684\u6811\u679d\n        \tif(i-j-1>=0) t1+=e[son[2]].apple;//i-j-1>=0\u8868\u793a\u5206\u914d\u7ed9\u4e86\u53f3\u513f\u5b50\u4e0ei\u8282\u70b9\u7684\u4e00\u6761\u76f8\u8fde\u7684\u6811\u679d\n        \tif(j!=0)\n         \t\tdp[f][i]=max(dp[f][i],dp[e[son[1]].t][j-1]+t1+dp[e[son[2]].t][i-j-1]);  //j!=0\uff0c\u8868\u793a\u4e24\u4e2a\u513f\u5b50\u90fd\u5206\u914d\u4e86\n         \telse //j==0\uff0c\u8868\u793a\u53ea\u5206\u914d\u7ed9\u4e86\u53f3\u513f\u5b50\u6811\u679d\n         \t\tdp[f][i]=max(dp[f][i],dp[e[son[2]].t][i-j-1]+t1);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&q);\n    for(int i=1;i<=n-1;i++)\n    {\n        int x,y,z;\n        scanf(\"%d %d %d\",&x,&y,&z);\n        add(x,y,z);\n        add(y,x,z);\n    }\n    dfs(1,0,0);\n    printf(\"%d\",dp[1][q]); //\u56e0\u4e3a\u6700\u7ec8\u6211\u4eec\u8981\u6c42\u7684\u82f9\u679c\u6570\u662f\u4ee51\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u4fdd\u7559q\u6839\u6811\u679d\u7684\u6700\u5927\u82f9\u679c\u6570\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u7ed3\u679c\u7b49\u4e8edp[1][q]\n    return 0;\n}\n```\n### \u8c22\u8c22\u89c2\u770b\uff0c\u5982\u679c\u672c\u9898\u89e3\u6709\u4ec0\u4e48\u4e0d\u5bf9\u7684\u5730\u65b9\u6216\u6709\u4ec0\u4e48\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u8bf7\u79c1\u4fe1\u672c\u4eba\uff08~~\u53cd\u6b63\u6211\u4e5f\u662f\u8fd9\u4e48\u8fc7\u6765\u7684~~\uff09",
        "postTime": 1550410027,
        "uid": 101042,
        "name": "zhz\u5c0f\u849f\u84bb",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "##  \u524d\u8a00\uff1a1 \u6811\u5f62\u52a8\u5f52\n\n  \u6811\u5f62\u52a8\u5f52\u5c31\u662f\u5728\u6811\u4e0a\u7684\u52a8\u5f52\uff0c\u6811\u5f62\u52a8\u5f52\u4e00\u822c\u662f\u4f9d\u8d56\u4e8edfs\u7684\uff0c\u6839\u636e\u52a8\u5f52\u7684\u540e\u6548\u6027\uff0c\u7236\u8282\u70b9\u7684\u72b6\u6001\u4e00\u822c\u90fd\u4f9d\u8d56\u5b50\u8282\u70b9\u7684\u72b6\u6001\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8f6c\u79fb\u800c\u6765\uff0c\u800c\u6bcf\u4e00\u4e2a\u7236\u8282\u70b9\u7684\u5b69\u5b50\u7684\u6570\u91cf\u4e0d\u5b9a\uff0c\u8fd9\u5c31\u5f88\u96be\u4ee5\u5bfb\u5e38\u7684\u9012\u63a8\u5f0f\u901a\u8fc7\u51e0\u4e2afor\u89e3\u51b3\u6389\uff0c\u800c\u6811\u8fd9\u79cd\u4e1c\u897f\u5b83\u7684\u904d\u5386\u672c\u8eab\u5c31\u4f9d\u8d56\u4e8edfs\uff0c\u53ef\u4ee5\u8bf4\u662f\u6bd4\u8f83\u66b4\u529b\u7684\u6253\u6cd5\u4e86!\n  \n  \u5dee\u4e0d\u591a\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\uff1a\n  \n  \u5148\u5b58\u56fe\uff0c\u4ee5dfs\u8fdb\u53bb\u627e\u5230\u53f6\u8282\u70b9\uff0c\u5148\u5904\u7406\u53f6\u8282\u70b9\u7684\u4fe1\u606f\u518d\u4e00\u5c42\u5c42\u5411\u7236\u8282\u70b9\u63a8\u8fdb\uff0c\u6839\u636e\u9898\u610f\u8fdb\u884c\u9009\u62e9\u5217\u51fa\u8f6c\u79fb\u65b9\u7a0b\n  ```\nvoid dfs(int nx){\n    f[nx][0]=0;\n    f[nx][1]=val[nx];\n    for(int i=0;i<son[nx].size();i++){\n        int ny=son[nx][i];\n        dfs(ny);\n        f[nx][0]+=max(f[ny][0],f[ny][1]);\n        f[nx][1]+=f[ny][0];\n    }\n}\n```\n\n  \n  \u8fd9\u91cc\u662f\u4e00\u9053\u6811\u5f62DP\u7684\u7ecf\u5178\u9898\uff0c\u65b0\u624b\u6700\u597d\u5148\u6253\u6253\u8fd9\u4e2a\n  \n  \n  \u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a\n  [https://www.luogu.org/problemnew/show/P1352](https://www.luogu.org/problemnew/show/P1352)\n  \n## \u524d\u8a00\uff1a2 \u6811\u5f62\u80cc\u5305\n\u6811\u5f62\u80cc\u5305\u5c31\u662f\u539f\u59cb\u7684\u6811\u4e0a\u52a8\u5f52+\u80cc\u5305\uff0c\u4e00\u822c\u7528\u6765\u5904\u7406\u4ee5\u4e00\u68f5\u6811\u4e2d\u9009\u591a\u5c11\u70b9\u4e3a\u6269\u5c55\u7684\u4e00\u7c7b\u9898\uff0c\u57fa\u672c\u505a\u6cd5\u4e0e\u6811\u4e0adp\u65e0\u5f02\uff0c\u4e0d\u8fc7\u5728\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e2d\u4f1a\u7528\u5230\u80cc\u5305\u7684\u601d\u60f3\u3002\n\n\n\u5b83\u57fa\u672c\u4e0a\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\uff1a\n\n\n\u5b58\u56fe\uff08\u770b\u4e2a\u4eba\u559c\u597d\u5427\uff0c\u6211\u6bd4\u8f83\u4e60\u60ef\u90bb\u63a5\u8868\uff09\uff0c\u7136\u540edfs\u8fdb\u53bb\u8865\u5168\u5b50\u8282\u70b9\u7684\u4fe1\u606f\uff0cf\u6570\u7ec4\u7684\u610f\u601d\u662f\u4ee5fa\u4e3a\u4e2d\u8f6c\u70b9\uff0c\u627e\u51fafa\u5f80\u4e0b\u7684\u53ef\u53d61~j\u4e2a\u70b9\u65f6\u5404\u81ea\u7684\u6700\u5927\u6536\u76ca\u3002\n\n```\nvoid dfs(int fa){\n\tfor(int i=0;i<son[fa].size();i++){\n\t\tint ny=son[fa][i];\n\t\tdfs(ny);\n\t\tfor(int j=m+1;j>=1;j--){\n\t\t\tfor(int k=j-1;k>=1;k--){\n\t\t\t\tf[fa][j]=max(f[fa][j],f[fa][j-k]+f[ny][k]);\n\t\t\t}\n\t\t} \n\t}\n}\n\n```\n\n\u8fd9\u9053\u9898\u4e0ep2014\u9664\u4e86\u7ec6\u8282\u7684\u5904\u7406\u5916\u5927\u4f53\u601d\u8def\u4e00\u6837\uff0c\u90fd\u53ef\u4ee5\u7b97\u662f\u6811\u5f62\u80cc\u5305\u7684\u677f\u5b50\u9898\u4e86\uff0c\u8fd9\u91cc\u7ed9\u51fap2014\u7684\u94fe\u63a5\n\n\n\u9009\u8bfe\n[https://www.luogu.org/problemnew/show/P2014](https://www.luogu.org/problemnew/show/P2014)\n\n## \u67d0\u67d0\u82f9\u679c\u6811\n\n\u505a\u9898\u7684\u601d\u8def\u5e94\u8be5\u662f\u9996\u5148\u4ece\u51fa\u9898\u4eba\u5343\u5947\u767e\u602a\u7684\u9898\u76ee\u63cf\u8ff0\u4e2d\u62bd\u79bb\u51fa\u5b83\u7684\u672c\u8d28\uff0c\n\u7136\u540e\u6211\u4eec\u5c31\u53d1\u73b0\u4e86\n\n\n#### 1\u8fd9\u662f\u4e2a\u4e8c\u53c9\u6811\n#### 2 n\u548cq\u7684\u8303\u56f4\u4e0d\u5927\n\uff08~~\u5f53\u7136\u8fd9\u90fd\u662f\u5e9f\u8bdd~~\uff09\n\n#### \u5206\u6790\u9898\u610f\uff1a\u4ece\u6811\u6839\u5f80\u4e0b\u627eq\u6761\u8fb9\u4f7f\u5f97\u6700\u540e\u5f97\u5230\u7684\u82f9\u679c\u6570\u6700\u591a\uff0c\u6700\u540e\u5f97\u5230\u7684\u8fd8\u5f97\u662f\u4e2a\u5b8c\u6574\u7684\u6811\n\n\n#### \u601d\u8def\u76f8\u540c\uff1a\u4ece\u53f6\u8282\u70b9\u5411\u4e0a\u7ffb\uff0c\u6bcf\u4e00\u4e2a\u70b9\u627e\u51fa\u4ee5\u5b83\u4e3a\u6839\u8282\u70b9\u76841~q\u7684\u6700\u5927\u5229\u76ca\uff0c\u9664\u53f6\u8282\u70b9\u5916\uff0c\u56e0\u4e3a\u7236\u8282\u70b9\u4e0d\u53ef\u80fd\u53ea\u4ece\u4e00\u4e2a\u5b50\u8282\u70b9\u90a3\u91cc\u8981q-1\u6761\u8fb9\uff08\u8fde\u63a5\u7236\u3001\u5b50\u8282\u70b9\u8fd8\u6709\u4e00\u6761\u8fb9\uff09\uff0c\u6240\u4ee5\u5c31\u7528\u5230\u4e86\u80cc\u5305\u7684\u601d\u60f3\u3002\u5176\u5b9e\u6709\u79cd\u968f\u673a\u642d\u914d\u7684\u611f\u89c9\uff0c\u7236\u8282\u70b9\u7684\u5927\u513f\u5b50\u8981m\u6761\u8fb9\uff0c\u5c0f\u513f\u5b50\u8981w\u6761\u8fb9\uff0c\u81ea\u5df1\u7559q-m-w-1\u6761\u7528\u6765\u8fde\u63a5\u6839\u8282\u70b9\u6c42\u6700\u5927\u3002\n\n\nval\u4fdd\u5b58\u5b50\u3001\u7236\u8fb9\u7684\u82f9\u679c\u6570\uff0c\u6240\u4ee5f[x][j-k-1]\u4e2d\uff0c\u7236\u8282\u70b9\u81ea\u5df1\u7559\u7684\u53ef\u7528\u8fb9-1\u3002\n\n```\n\t\tfor(int j=q;j>=1;j--){\n\t\t\tfor(int k=j-1;k>=0;k--){\n\t\t\t\tf[x][j]=max(f[x][j],val[x][ny]+f[ny][k]+f[x][j-k-1]);\n\t\t\t}\n\t\t}\n```\n\u8fd9\u91cc\u6709\u51e0\u4e2a\u70b9\u9700\u8981\u6ce8\u610f\uff1a\n\n#### 1\u8fd9\u91cc\u6ce8\u610f\u82f9\u679c\u662f\u957f\u5230\u8fb9\u4e0a\u7684\uff0c\u4f46\u6211\u4eec\u5b58\u7684f\u6570\u7ec4\u662f\u5b58\u7684\u70b9\u3002\u8fd9\u91cc\u53ef\u4ee5\u628a\u8fb9\u4e0a\u7684\u82f9\u679c\u76f4\u63a5\u7ed9\u8fd9\u6761\u8fb9\u8fde\u63a5\u7684\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u4e00\u6761\u8fb9\u8fde2\u4e2a\u70b9\uff0c\u5982\u679c\u53d6\u5219\u4e24\u4e2a\u70b9\u90fd\u8981\uff0c\u4e0d\u53d6\u5b50\u8282\u70b9\u4e00\u5b9a\u4e0d\u8981\u4f46\u7236\u8282\u70b9\u8fd8\u6709\u53ef\u80fd\u4f5c\u4e3a\u522b\u4eba\u7684\u5b50\u70b9\u88ab\u7528\u3002\n\n#### 2\u8f93\u5165\u7684\u8fb9\u5b50\u3001\u7236\u5173\u7cfb\u672a\u7ed9\uff0c\u9700\u8981\u53cc\u5411\u5b58\u4f46\u904d\u5386\u65f6\u8981\u7279\u5224\u3002\uff08\u82f9\u679c\u6570\u4e5f\u8981\u5b58\u4e24\u904d\uff09\n\n#### 3\u8fd8\u6709\u5c31\u662f\u521a\u624d\u6240\u8bf4\u7684\u7236\u8282\u70b9-1\u7684\u95ee\u9898\u4e86\n\n\n\u7ed9\u4e00\u4e0b\u4ee3\u7801\n```\n#include <iostream>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n\nvector <int> son[109];\nint  n,q;\nint f[109][109],val[109][109],used[109];\n\nvoid dfs(int x){\n\tused[x]=1;//\u9632\u6b62\u6b7b\u5faa\u73af\u505a\u7684\u6807\u8bb0\t\t\n\tfor(int i=0;i<son[x].size();i++){\n\t\tint ny=son[x][i];\n\t\tif(used[ny]==1)\tcontinue;//\u5982\u679c\u6807\u8bb0\u8fc7\u5219\u4ee3\u8868\u8fd9\u662f\u5b83\u7684\u7236\u8282\u70b9\uff0c\u76f4\u63a5\u8df3\u8fc7\n\t\tused[ny]=1;\n\t\tdfs(ny);\n\t\tfor(int j=q;j>=1;j--){\n\t\t\tfor(int k=j-1;k>=0;k--){\n\t\t\t\tf[x][j]=max(f[x][j],val[x][ny]+f[ny][k]+f[x][j-k-1]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<n;i++){\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tval[a][b]=c;//\u56e0\u4e3a\u4e0d\u77e5\u9053\u5173\u7cfb\u5b58\u7684\u4e24\u6b21\u4ef7\u503c\uff08\u4f46\u53ea\u4f1a\u7528\u5230\u4e00\u4e2a\uff09\n\t\tval[b][a]=c;\n\t\tson[a].push_back(b);\n\t\tson[b].push_back(a);\n\t}\n\tdfs(1);\n\tprintf(\"%d\",f[1][q]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1559978911,
        "uid": 143445,
        "name": "sy_zmq_001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "# \u6811\uff01\uff01\uff01\n#### \u8fd9\u662f\u4e00\u9053\u6bd4\u8f83\u9002\u5408\u521d\u5b66\u6811\u5f62DP\u7684\u4eba\u505a\u7684\u9898\uff08~~\u672c\u849f\u84bb\u695e\u662f\u505a\u4e86\u4e00\u4e0b\u5348\u5728\u505a\u51fa\u6765~~\uff09\n**\u672c\u9898\u7528\u6811\u5f62DP\u5c31\u53ef\u4ee5\u8f83~~\u8f7b\u677e~~\u7684\u505a\u51fa\u6765\uff0c\u4f46\u6709\u51e0\u4e2a\u95ee\u9898**\n\n**1.\u8f93\u5165\u65f6\u4e0d\u77e5\u9053\u8c01\u662f\u7236\u7ed3\u70b9\uff0c\u8c01\u662f\u5b50\u7ed3\u70b9**\n\n\u8fd9\u65f6\u5019\u5c31\u5e94\u8be5\u53cc\u5411\u5b58\u503c\uff0c\u628a\u4e24\u4e2a\u70b9\u5206\u522b\u4f5c\u4e3a\u7236\u7ed3\u70b9\u7684\u60c5\u51b5\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u4f46\u662f**\u6ce8\u610fDP\u65f6\u7279\u5224\u7236\u3001\u5b50\u7ed3\u70b9**\n\n**2.\u72b6\u6001\u7684\u8f6c\u79fb**\n\n\u8fd9\u91cc\u76f4\u63a5\u5c31\u628a\u52a8\u6001\u65b9\u7a0b\u5199\u51fa\u6765\u81ea\u5df1\u770b \n\ndp[ i ][ j ] = max(dp[ i ][ j ] , dp[ son ][ k ] + dp[ i ][ j-son-1 ] + w[ i ][ son ])\n\n**\u4e0b\u9762\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u5177\u4f53\u5173\u952e\u90e8\u5206\u6709\u6ce8\u91ca**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint son[105][105],f[105][105];\nint n,m,w[105][105],cnt[105],vis[105];\n\nvoid dfs(int k)\n{\n\tvis[k]=1;// \u6bcf\u6b21\u5faa\u73af\u65f6\uff0c\u7ed9\u7236\u7ed3\u70b9\u4e00\u4e2a\u6807\u8bb0\uff0c\u9632\u6b62\u65e0\u9650\u5faa\u73af \n\tfor(int i=1;i<=cnt[k];i++)\n\t{\n\t\tint ny=son[k][i];// \u7ed9 ny \u8d4b\u4e0a k \u7ed3\u70b9\u7684\u7b2c i \u4e2a \u5b50\u7ed3\u70b9 \n\t\tif(vis[ny]==1)continue;// \u5982\u679c ny \u662f k \u7684 \u7236\u7ed3\u70b9\uff0c\u76f4\u63a5\u8df3\u8fc7\u5faa\u73af \n\t\tvis[ny]=1;\n\t\tdfs(ny);// \u4ee5  ny \u4e3a \u7236\u7ed3\u70b9 \u8fdb\u884c\u641c\u7d22 \n\t\tfor(int j=m;j>=1;j--) //\u9006\u5e8f\u679a\u4e3e\u5f53\u524d\u53ef\u4ee5\u9009\u7684\u6811\u679d\u6839\u6570 \n\t\t\tfor(int g=j-1;g>=0;g--) //\u9006\u5e8f\u679a\u4e3e\u7559\u7ed9 \u5b50\u7ed3\u70b9 \u7684\u6811\u679d\u6839\u6570 \n\t\t\t{\n\t\t\t\tf[k][j]=max(f[k][j],f[ny][g]+f[k][j-g-1]+w[k][ny]);\n\t\t\t\t// f[ny][g] \u8868\u793a\u4ee5 ny \u4e3a \u5b50\u7ed3\u70b9 \u53ef\u4ee5\u9009 g \u6761\u8fb9\n\t\t\t\t// f[k][j-g-1] \u8868\u793a\u5269\u4f59\u7ed9 k \u7ed3\u70b9\u7684 \u5144\u5f1f\u7ed3\u70b9 j-g-1 \u6761\u8fb9\n\t\t\t\t// w[k][ny] \u8868\u793a k \u7ed3\u70b9\u548c ny \u7ed3\u70b9\u4e4b\u95f4\u7684\u82f9\u679c\u6570  \n\t\t\t}\n\t}\n\treturn;\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tw[x][y]=w[y][x]=z;//\u56e0\u4e3a\u4e0d\u77e5\u9053 \u7236\u7ed3\u70b9 \u548c \u5b50\u7ed3\u70b9\u5206\u522b\u662f\u8c01\uff0c\u6240\u4ee5\u540c\u65f6\u5b58\u503c \n\t\tson[x][++cnt[x]]=y;// \u6bcf\u8f93\u5165\u4e00\u6b21 \u5f53\u524d\u7ed3\u70b9\uff0c\u8be5\u8282\u70b9\u7684\u513f\u5b50\u6570\u5c31 + 1 \n\t\tson[y][++cnt[y]]=x;\n\t}\n\tdfs(1);\n\tcout<<f[1][m]<<endl;//\u8f93\u51fa\u4e00 1 \u4e3a\u6839\uff0c\u9009\u4e86 m \u6761\u8fb9\u7684\u6811 \n}\n```\n\n",
        "postTime": 1569144306,
        "uid": 224229,
        "name": "Caicz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u4e3b\u8981\u601d\u8def\uff1a\u6811\u5f62dp+\u80cc\u5305\u3002\u5728\u201c\u4e8c\u53c9xx\u6811\u201d+\u201c\u4fdd\u7559q\u6839\u6811\u679d\u201d\u7684\u6761\u4ef6\u4e0b\u8fd9\u4e2a\u601d\u8def\u5e94\u8be5\u5f88\u5bb9\u6613\u5f62\u6210\u3002\n\n\n\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1adp[i][j]=max(dp[i][j],dp[v][k]+dp[i][j-k]);\n\n\u89e3\u91ca\uff1adp[i][j]\u8868\u793a\u9009\u62e9\u4e86i\u53f7\u70b9\u540e\u4fdd\u7559i\u4e0b\u65b9\u7684j-1\uff08j\u5305\u542b\u4e86i\u53f7\u8282\u70b9\u4e0a\u65b9\u7684\u90a3\u4e00\u6761\u8fb9--\u4e3a\u4ec0\u4e48\uff1f\u82e5\u8981\u9009\u62e9\u4fdd\u7559i\u8282\u70b9\u4e0ei\u8282\u70b9\u4ee5\u4e0b\u7684\u6811\u679d\uff0c\u663e\u7136\u5fc5\u987b\u4fdd\u7559i\u70b9\u4e0a\u65b9\u4e0e\u6839\u8282\u70b9\u76f8\u8fde\u7684\u6811\u679d\uff09\u6839\u6811\u679d\u6240\u80fd\u4fdd\u7559\u7684\u6700\u5927\u82f9\u679c\u6811\u3002\n\n\n\u987a\u4fbf\u63d0\u4e00\u53e5\u6ca1\u6709\u4eba\u89c9\u5f97\u8fd9\u9053\u9898\u548c2014\u9009\u8bfe\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u5417\uff1f\u6b22\u8fce\u540c\u6b65\u98df\u7528\uff1ahttps://www.luogu.org/problemnew/show/2014\n\n\u81ea\u8ba4\u4e3a\u4ee3\u7801\u7b80\u6d01\u6e05\u6670\uff0c\u5176\u4ed6\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801~\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 200\nint n,q,cnp=1,cnt=1,head[maxn],dp[maxn][maxn];\nstruct xxx\n{\n    int to,last,co,u;\n}T[maxn];\nint read()\n{\n    int x=0,k=1;\n    char c;\n    c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')k=-1;c=getchar();}\n    while(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n    return x*k;\n}\nvoid init()\n{\n    for(int i=1;i<=n;i++)head[i]=-1;\n}\nvoid addT(int u,int v,int w)\n{\n    T[cnp].to=v;\n    T[cnp].last=head[u];\n    T[cnp].u=u;\n    T[cnp].co=w;\n    head[u]=cnp++;\n}\nvoid work(int u,int fa)\n{\n    for(int i=head[u];i!=-1;i=T[i].last)\n    {\n         int v=T[i].to;\n         if(v==fa)continue;\n         dp[v][1]=T[i].co;\n        work(v,u);\n        for(int j=q;j>=1;j--)\n            for(int k=0;k<=j;k++)\n                if((k!=j&&j!=1)||u==1)dp[u][j]=max(dp[u][j],dp[v][k]+dp[u][j-k]);//\u4e00\u4e2a\u5bf91\u53f7\u8282\u70b9\u7684\u7279\u5224\uff1a\u53ea\u67091\u53f7\u8282\u70b9\u4e0d\u5b58\u5728\u5728\u5b83\u4e0a\u65b9\u7684\u8fb9\n     }\n}\nint main()\n{\n    n=read(),q=read();\n    init();\n    for(int i=1;i<n;i++)\n    {\n        int x=read(),y=read(),z=read();\n        addT(x,y,z);\n        addT(y,x,z);\n    }\n    work(1,0);\n    printf(\"%d\",dp[1][q]);\n    return 0;\n}\n```",
        "postTime": 1509801187,
        "uid": 47135,
        "name": "Twilight_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u5e94\u8be5\u7b97\u662f\u6811\u5f62dp\u7684\u5165\u95e8\u9898\u4e86\u5427...\n\n\u4e0a\u8bfe\u7684\u65f6\u5019\u76f4\u63a5\u628a\u4ee3\u7801\u6284\u4e0b\u6765\u6539\u4e86\u6539\u540d\u5b57\uff0c\u56de\u5bb6\u53c8\u4e71\u641e\u534a\u5929\u7ec8\u4e8e\u7406\u89e3\u8fd9\u79cd\u505a\u6cd5\u3002\n\n\u6811\u5f62dp\uff0c\u5c31\u662f\u5728\uff08\u4e8c\u53c9\uff09\u6811\u4e0a~~\u641e~~\u505adp\u3002\n\n\u56e0\u4e3a\u8fd9\u9898\u4fdd\u8bc1\u8f93\u5165\u4e3a\u4e8c\u53c9\u6811\uff08\u8fd9\u79cd\u505a\u6cd5\u597d\u50cfn\u53c9\u6570\u4e5f\u53ef\u4ee5\uff09\uff0c\u6240\u4ee5\u4f1a\u65b9\u4fbf\u4e00\u4e9b\u3002\n\n\u6211\u4eec\u5b9a\u4e49dp[i][j]\u4e3a\u4fdd\u7559\u4e86i\u53f7\u8282\u70b9\u548cj\u6761\u8fb9\u65f6\u6700\u5927\u4fdd\u7559apple\u6570\u3002\n\n\u4e3a\u4e86\u7ed9\u5927\u5bb6~~\u63d0\u795e\u9192\u8111~~\u5de9\u56fa\u57fa\u7840\uff0c\u6211\u4eec\u91cd\u590d\u4e00\u4e0b\u4ee5\u4e0a\u5b9a\u4e49\u3002\n\n\n\n#### \u6211\u4eec\u5b9a\u4e49dp[i][j]\u4e3a\u4fdd\u7559\u4e86i\u53f7\u8282\u70b9\u548cj\u6761\u8fb9\u65f6\u6700\u5927\u4fdd\u7559apple\u6570\u3002\n\n\uff08\u5212\u91cd\u70b9\uff01~~\u505a\u7b14\u8bb0\uff01~~\uff09\n\n\u53ef\u5f97dp[1][m]\u5373\u4e3a\u7b54\u6848\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b...\u4e0d\u592a\u597d\u60f3\u3002\u5f53\u65f6\u8bfe\u4e0a\u5b8c\u5168\u662f\u61f5\u903c\u7684\u72b6\u6001\u3002\n\n\n\n\u679a\u4e3e\u5b50\u8282\u70b9nxt\uff0c\u8ba1\u7b97\u8fd9\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8fb9\u7684\u4e2a\u6570d\n\n\u8bbe\u5f53\u524d\u8282\u70b9\u4e3anow\uff0c\u5df2\u7ecf\u679a\u4e3e\u5230\u4e86\u8282\u70b9nxt\uff0c\u5171\u7edf\u8ba1\u4e86sum\u6761\u8fb9\uff0c\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\ndp[now][j]=max(dp[now][j],dp[now][j-k]+dp[nxt][k-1]+w[now][nxt])\n\n(1<=j<=min(d,m),1<=k<=min(d,j),w[now][nxt]\u4ee3\u8868\u8282\u70b9i\u5230j\u7684\u8fb9\u7684\u6743\u503c)\n\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u89e3\u91ca\u8fd9\u4e2a\u65b9\u7a0b\u3002\n\n\u9996\u5148\uff0c\u53bbmax\u662f\u5fc5\u7136\u3002\n\ndp[now][j-k]\uff0c\u4e3a\u4ec0\u4e48\u662fj-k\u5462\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u679a\u4e3e\u4e86\u5b50\u6811\u7684\u8fb9\u6570k\uff0c\u603b\u8fb9\u6570j\u3002\n\n\u65e2\u7136\u6211\u4eec\u7684\u5b50\u6811\u5df2\u7ecf\u5360\u53bb\u4e86k\u6761\u8fb9\uff0c\u7559\u7ed9\u5269\u4f59\u8fb9\u7684\u6570\u91cf\u81ea\u7136\u53ea\u5269j-k\u6761\u4e86\u3002\n\n\n\n\u63a5\u4e0b\u6765\u662f\u8fd9\u4e2adp[nxt][k-1]\uff0c\u4e3a\u4ec0\u4e48\u662fk-1\uff1f\n\n\u8fd9\u91cc\u6211\u4eec\u5e94\u8be5\u5c06k\u5177\u4f53\u5b9a\u4e49\u4e00\u4e0b\u3002\n\nj\u5b9a\u4e49\u4e3a\uff1a\u76ee\u524d\u8282\u70b9now\u4fdd\u7559\u7684\u8fb9\u6570\uff0c\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\nk\u8981\u600e\u4e48\u5b9a\u4e49\u5462\uff1f\n\n\u60f3\u4e00\u60f3\uff1a\n\n\n\nk\uff1anxt\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559\u7684\u8fb9\u6570\u518d+1(nxt\u5230now\u8fd9\u6761\u8fb9)\n\n\u56e0\u4e3a\u6211\u4eec\u7684nxt\u8282\u70b9\u7684\u5b50\u6811\u7684\u8fb9\u6570\u53ea\u6709k-1\u6761\uff0c\u6240\u4ee5dp\u6570\u7ec4\u7684\u7b2c\u4e8c\u7ef4\u5c31\u662f[k-1]\n\n\n\n\u6700\u540e\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e0aw[now][nxt]?\n\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b\uff0cdp[now][j-k]\u4e2d\u6709j-k\u6761\u8fb9\uff0cdp[nxt][k-1]\u6709k-1\u6761\u8fb9\u3002\n\n\u4e24\u6570\u76f8\u52a0\uff0c\u6211\u4eec\u6709j-1\u6761\u8fb9\u3002\u4e3a\u4ec0\u4e48\u8fd8\u5dee\u4e00\u6761\u8fb9\uff1f\n\n\u5c31\u662fnow~nxt\u8fd9\u6761\u8fb9\u3002\n\n\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528dp[now][j-k]+dp[nxt][k]?\n\n\u56e0\u4e3anxt\u5b50\u6811\u5e76\u6ca1\u6709k\u6761\u8fb9......\n\n\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5b8c\u6210\u4e86\u8fd9\u4e2adp\u65b9\u7a0b\u7684\u89e3\u6790\u3002\n\n\uff08\u5efa\u6811\u65b9\u5f0f\uff1f\u4f60\u8981\u7528\u90bb\u63a5\u77e9\u9635\u90fd\u884c\u554a\u3002\uff09\n\nmain code\uff1a\n\n\n```cpp\n    int dfs(int now,int fa)\n    {\n        int d=0;\n        for(int i=head[now];i;i=e[i].l)\n        {\n            int nxt=e[i].t,ow=e[i].v;//nxt\u4e3a\u4e0b\u4e00\u4e2a\u679a\u4e3e\u7684\u5b50\u6811\uff0cow\u4e3a\u5f53\u524d\u8282\u70b9\u4e0enxt\u7684\u8fb9\u7684\u6743\u503c\n            if(nxt==fa)continue;//\u5982\u679c\u627e\u5230\u7236\u8282\u70b9\u5219\u8df3\u8fc7\n            d+=dfs(nxt,now)+1;//\u8ba1\u7b97\u4ee5now\u4e3a\u6839\u7684\u6811\u6709\u51e0\u6761\u8fb9\n            for(int j=min(d,m);j;--j)//\u5f53\u524d\u8282\u70b9\u7559j\u6761\u8fb9\n                for(int k=min(d,j);k;--k)//\u5f53\u524d\u5b50\u6811\u7559k-1\u6761\u8fb9\uff0c\u52a0\u4e0a\u4e24\u70b9\u6240\u8fde\u7684\u4e00\u8fb9\n                    dp[now][j]=max(dp[now][j],dp[now][j-k]+dp[nxt][k-1]+ow);\n            //\u5b50\u6811\u7559k-1\u6761\u8fb9\uff0c\u5f53\u524d\u8282\u70b9\u8fd8\u80fd\u518d\u7559j-k\u6761\u8fb9\uff0c\u8fd8\u6709\u5f53\u524d\u8282\u70b9\u4e0e\u679a\u4e3e\u7684\u8282\u70b9\u8fb9\u7684\u6743\u503c\n        }\n        return d;\n}\n```\n\n# #UPD1 (2019/3/16)  \n\u73b0\u5728\u91cd\u65b0\u590d\u4e60\u6811dp\u53d1\u73b0\u6253\u9519\u4e86\u3002\u3002\u3002  \n```dp[i][j]```\u4ee3\u8868\u7684\u5c31\u662f\u4ee5$i$\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u4fdd\u7559$j$\u6761\u8fb9\u7684\u7b54\u6848  \n\u8f6c\u79fb\u65b9\u7a0b\u4e3a```dp[i][j]=max{dp[son][k]+dp[i][siz-k-1]+v[k][son]}```   \n```son\u4e3ai\u7684\u5b50\u8282\u70b9,siz\u4e3a \u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u6240\u5305\u542b\u7684\u8fb9\u6570```  \n```0<=k<siz```",
        "postTime": 1514029376,
        "uid": 44534,
        "name": "Kirisame_Marisa_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\n$f[i][j]$ \u8868\u2f70\u4ee5i\u8282\u70b9\u4e3a\u6839\uff0c\u4fdd\u7559j\u4e2a\u6811\u679d\u6700\u591a\u7559\u4e0b\n\u591a\u5c11\u4e2a\u82f9\u679c\u3002\n\u53ea\u7ed9\u5de6\u2f09\u2f26\uff1a$f[i][j]=f[lson[i]][j-1]+vlson[i]$\n\u53ea\u7ed9\u53f3\u2f09\u2f26\uff1a$f[i][j]=f[rson[i]][j-1]+vrson[i]$\n\u90fd\u5206\u2f00\u70b9\uff1a$f[i][j]=max(f[lson[i]][k]+f[rson[i]][j-k-2]+vlson[i],vrson[i]). 0<=k<=j-2$.\n\n\ncode\u53ca\u6ce8\u91ca\u5728[\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/83018645)",
        "postTime": 1539262346,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u6700\u8fd1\u6811\u4e0a\u5206\u7ec4\u80cc\u5305\u4e5f\u505a\u4e86\u597d\u51e0\u9053\u4e86\uff0c\u53d1\u4e2a\u535a\u5ba2\u8bb0\u5f55\u4e00\u4e0b\u3002  \n\u8fd9\u662f\u4e00\u9053\u5f88\u5178\u578b\u7684\u6811\u4e0a\u5206\u7ec4\u80cc\u5305\u6a21\u677f\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u7279\u522b\uff0c\u56e0\u4e3a\u4ed6\u7684\u6743\u503c\u4e0d\u662f\u5728\u70b9\u4e0a\uff0c\u800c\u662f\u5728\u8fb9\u4e0a\u3002  \n\u6240\u4ee5\u5c31\u7528f[i][j]\u6765\u8868\u793a\u4ee5i\u4e3a\u6839\u8282\u70b9\uff0c\u62d3\u5c55j\u6761\u8fb9\u6240\u80fd\u53d6\u5230\u7684\u6700\u591a\u7684\u82f9\u679c\u6570\uff0c\u53ef\u4ee5\u63a8\u51fadp\u65b9\u7a0bdp[u][j]=max(dp[u][j],dp[u][j-k-1]+dp[v][k]+W)\uff0c\u5176\u4e2dv\u662fu\u7684\u5b50\u8282\u70b9\uff0cW\u662f\u8fb9u->v\u4e0a\u7684\u82f9\u679c\u6811\u3002  \n\u5148\u7528\u4e00\u904ddfs\u6c42\u51fa\u6bcf\u4e2a\u70b9\u4e0b\u7684\u8fb9\u6570\n```\nint dfs(int u,int fa)\n{\n    int v;\n    for(int i=0;i<edge[u].size();i++)\n    {\n        v=edge[u][i];\n        if(v!=fa)\n        {\n            sum[u]+=dfs(v,u);\n        }\n    }\n    if(!sum[u])return 1;\n    else return sum[u]+1;\n}\n```\n\u7136\u540e\u5c31\u662f\u6811\u4e0a\u5206\u7ec4\u80cc\u5305\u7684\u4e3b\u8981\u601d\u60f3\uff0c\u901a\u8fc701\u80cc\u5305\u7528\u5b50\u8282\u70b9\u6765\u66f4\u65b0\u7236\u8282\u70b9\u7684dp\u503c,y=\u7528\u6eda\u52a8\u6570\u7ec4\u538b\u6389\u4e00\u7ef4\n```\nfor(int j=q;j>=1;j--)\n{\n   for(int k=0;k<j&&k<=sum[u];k++)\n   {\n      dp[u][j]=max(dp[u][j],dp[u][j-k-1]+dp[v][k]+W);\n   }\n}\n```\n\u8981\u6ce8\u610f\u56e0\u4e3a\u7236\u8282\u70b9\u5230\u5b50\u8282\u70b9\u8fd8\u8981\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u662fdp[u][j-k-1]  \n\u8d34\u4e0a\u5b8c\u6574\u4ee3\u7801```\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nvector <int> edge[110];\nvector <int> w[110];\nint n,q,dp[110][110],sum[110];\nint dfs(int u,int fa)\n{\n    int v;\n    for(int i=0;i<edge[u].size();i++)\n    {\n        v=edge[u][i];\n        if(v!=fa)\n        {\n            sum[u]+=dfs(v,u);\n        }\n    }\n    if(!sum[u])return 1;\n    else return sum[u]+1;\n}\nbool solve(int u,int fa)\n{\n    int v,W;\n    bool bo;\n    for(int i=0;i<edge[u].size();i++)\n    {\n        v=edge[u][i];\n        W=w[u][i];\n        if(v!=fa)\n        {\n            bo=1;\n            solve(v,u);\n            //dp[v][1]=max(dp[v][1],W);\n            //for(int j=sum[u];j>=1;j--)\n            //dp[u][j]=max(dp[u][j],dp[u][j-1]+W);\n            for(int j=q;j>=1;j--)\n            {\n                for(int k=0;k<j&&k<=sum[u];k++)\n                {\n                    dp[u][j]=max(dp[u][j],dp[u][j-k-1]+dp[v][k]+W);\n                }\n            }\n        }\n    }\n    return bo;\n}\nint main()\n{\n    cin>>n>>q;\n    int x,y,z;\n    for(int i=1;i<n;i++)\n    {\n        cin>>x>>y>>z;\n        edge[x].push_back(y);\n        w[x].push_back(z);\n        edge[y].push_back(x);\n        w[y].push_back(z);\n    }\n    dfs(1,1);\n    solve(1,1);\n    int ans=0;\n    //for(int i=1;i<=n;i++)\n    //ans=max(ans,dp[i][q]);\n    cout<<dp[1][q];\n    return 0;\n}\n```\n\n\n",
        "postTime": 1551149559,
        "uid": 86830,
        "name": "\u4e2d\u4e8c\u75c5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "## \u6628\u5929jr\u6211\u7ffb\u4e866\u9875\u9898\u89e3\n## \u4e5f\u6ca1\u6709\u770b\u5230\u540e\u5e8f\u904d\u5386\u5199\u7684\u6811\u5f62\u4f9d\u8d56\u80cc\u5305\n### ~~\u4eca\u5929\u6211\u5c31\u6765\u6c34\u4e00\u7bc7\u9898\u89e3~~\n\n\n\n------------\n\n\n\u6211\u4eec\u8003\u8651\u6811\u5f62dp\u7684\u540e\u5e8f\u904d\u5386\u4f18\u5316\n\n\u540e\u5e8f\u904d\u5386\u4e2d\u7f16\u53f7\u7531\u5c0f\u5230\u5927\u4f9d\u6b21\u662f\u5de6\u5b50\u6811\uff0c\u53f3\u5b50\u6811\uff0c\u6839\n\n\u540c\u4e00\u68f5\u6811\u4e00\u5b9a\u4fdd\u8bc1\u6839\u8282\u70b9\u662f\u8fd9\u68f5\u6811\u6700\u540e\u7684\u7f16\u53f7\n\n\u6211\u4eec\u8bbedfn[cnt]=x\u6570\u7ec4\u8868\u793a\u540e\u5e8f\u904d\u5386\u7684\u7b2ccnt\u4e2a\u7f16\u53f7\u662f\u8282\u70b9x\n\nsize[x]\u8868\u793ax\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\n\nval[x]\u8868\u793a\u8282\u70b9x\u7684\u6570\u503c\uff08\u9884\u5904\u7406\u904d\u5386\u6811\u65f6\u628a\u8fb9\u6743\u8f6c\u5316\u4e3a\u70b9\u6743\uff0c\u628a\u9898\u610f\u4fdd\u7559q\u4e2a\u6811\u679d\u8f6c\u53d8\u4e3a\u4fdd\u7559q+1\u4e2a\u8282\u70b9\uff09\n\ndp[i][j] \u8868\u793a\u5f53\u524ddp\u5230\u7684\u540e\u5e8f\u904d\u5386\u7f16\u53f7\u4e3ai\uff0c\u4fdd\u7559j\u4e2a\u8282\u70b9\uff08\u4ee3\u7801\u4e2d\u5f53\u4f5c\u8282\u70b9 \u5904\u7406\uff09\u65f6\uff0c\u6240\u5269\u82f9\u679c\u7684\u6700\u5927\u503c\n\n\u5f53\u9009\u53d6\u8282\u70b9dfn[i]\u65f6\uff0cdp[i]\u663e\u7136\u53ef\u4ee5\u4ecedp[i-1]\u8f6c\u79fb\u800c\u6765\n\n\u53ef\u5f97\u65b9\u7a0bdp[i][j]=max(dp[i-size[dfn[i]]][j]\uff0cdp[i-1][j-1]+val[dfn[i]]);\n\n\u5f53\u4e0d\u9009\u53d6\u8282\u70b9dfn[i]\u65f6\uff0c\u4ee3\u8868\u6574\u4e2a\u5b50\u6811\u90fd\u4e0d\u9009\uff0c\u76f4\u63a5\u4ecedp[i-size[dfn[i]]]\u590d\u5236\u8fc7\u6765\n\n\u53ef\u5f97\u65b9\u7a0bdp[i][j]=max(dp[i][j]\uff0cdp[i-size[dfn[i]]][j]);\n\n~~\u8fd9\u53ea\u662f\u4e2a\u666e\u904d\u7684\u8f6c\u79fb\u65b9\u6cd5\uff0c\u800c\u6b64\u9898\u8fc7\u6c34\u770b\u4e0b\u9762\u4ee3\u7801\u597d\u4e86~~\n\n\u653e\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N = 255 ;\nstruct Tree {\n    int nxt,to,dist;\n}e[N];\nint\thead[N],tot=0;\ninline void add(int from,int to,int dist) {\n    e[++tot].to=to; e[tot].dist=dist;\n    e[tot].nxt=head[from]; head[from]=tot;\n}\nint dp[N][N],val[N],size[N],dfn[N];\nint n,q,cnt=0;\nvoid dfs(int x,int fa) {\n    size[x]=1;\n    for(int i=head[x];i;i=e[i].nxt) {\n        int y=e[i].to;\n        if(y==fa) continue ;\n        val[y]=e[i].dist;//\u628a\u8fb9\u6743\u7684\u8f6c\u5316\u4e3a\u70b9\u6743\uff0c\u4fbf\u4e8edp\n        dfs(y,x);\n        size[x]+=size[y];\n    }\n    dfn[++cnt]=x;//\u540e\u5e8f\u904d\u5386\uff08\u5de6\u5b50\u6811->\u53f3\u5b50\u6811->\u6839\uff09\u5e94\u8be5\u90fd\u80fd\u770b\u61c2qwq\n}\nint main() {\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<n;++i) {\n        int x,y,d;\n        scanf(\"%d%d%d\",&x,&y,&d);\n        add(x,y,d); add(y,x,d);//\u6811\u662f\u8981\u52a0\u53cc\u5411\u8fb9\u7684\n    }\n    q++; //\u4fdd\u7559q\u4e2a\u679d\u6761=\u4fdd\u7559q+1\u4e2a\u8282\u70b9\uff08\u5305\u62ec\u4e86\u6839\u8282\u70b9\uff09\n    val[1]=0;  dfs(1,0); \n    for(int i=1;i<=cnt;++i) \n        for(int S=q;S>=0;S--) {\n            if(S>=1) \n                dp[i][S]=max(dp[i-size[dfn[i]]][S],dp[i-1][S-1]+val[dfn[i]]);\n            //\u8003\u8651dfn[i]\u9009\u8fd8\u662f\u4e0d\u9009\n            else dp[i][S]=max(dp[i][S],dp[i-size[dfn[i]]][S]);//\u4e0d\u9009dfn[i]\u5c31\u76f4\u63a5\u4ece\u4e0a\u4e00\u68f5\u6811\u7684\u72b6\u6001\u8f6c\u6765\n        }\n        printf(\"%d\",dp[cnt][q]);\n    return 0;\n}\n```\n\u5176\u5b9e\u6211\u539f\u4ee3\u7801\u5199\u9ebb\u70e6\u4e86\uff0c\u5927\u5bb6\u81ea\u5df1\u4f53\u4f1a\uff0c\u8fd9\u9053\u9898\u5176\u5b9edp\u65b9\u7a0b\u8fd9\u6837\u5199\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u5176\u4ed6\u9898\u5c31\u4e0d\u4e00\u5b9a\u4e86\uff0c\u56e0\u4e3a\u5728\u5176\u4ed6\u9898\u76ee\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u4f53\u79ef\u53ef\u80fd\u4e0d\u5b9a\uff0c\u6240\u4ee5\u5fc5\u987b\u5224\u65ad\n\n```cpp\nfor(int i=1;i<=cnt;++i) \n        for(int S=q;S>=1;S--) \n            dp[i][S]=max(dp[i-size[dfn[i]]][S],dp[i-1][S-1]+val[dfn[i]]);\n```\n",
        "postTime": 1561712459,
        "uid": 101001,
        "name": "\u79bb\u964c\u00b4\u00a2\u7b19\u6b4c\u10e6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "### \u4eca\u5929\u8bb2\u4e86\u6811\u5f62dp\uff0c\u6b63\u597d\u5728luogu\u4e0a\u770b\u5230\u8fd9\u9053\u9898\uff0c\u4ed4\u7ec6\u4e00\u770b\uff0c~~\u8fd9\u4e0d\u662f\u677f\u9898\u5417~~\uff08\u6ed1\u7a3d\uff09\u3002\n\n**\u54b3\u54b3\uff0c\u5f3a\u884c\u5207\u5165\u6b63\u9898**\n\n\u9996\u5148\uff0c\u6211\u4eec\u6839\u636e\u6837\u4f8b\u753b\u51fa\u4e00\u5f20\u65e0\u6bd4\u4e11\u964b\u7684\u56fe\uff1a\n![](https://s2.ax1x.com/2019/08/24/msIzmq.png)\n\n**\u73b0\u5728\u6211\u4eec\u51cf\u53bb1\u7684\u53f3\u679d\u5c31\u5f97\u5230\u4e86\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a**\n![](https://s2.ax1x.com/2019/08/24/msoIgJ.png)\n\n**\u5982\u679c\u51cf\u53bb1\u7684\u5de6\u679d\uff1a**\n![](https://s2.ax1x.com/2019/08/24/msozgH.png)\n\n**\u5982\u679c\u4fdd\u75591\u7684\u5de6\u53f3\u679d\uff0c\u5de6\u5b50\u6811\u4fdd\u7559$x$\u6761\uff0c\u53f3\u5b50\u6811\u4fdd\u7559$y$\u6761\uff0c\u4f7f\u5f97$x+y+2=M$**\n![](https://s2.ax1x.com/2019/08/24/msTRsA.png)\n\n**\u7531\u6b64\u53ef\u4ee5\u63a8\u51fa\uff1a\u5bf9\u4e8e\u4efb\u610f\u5b50\u6811\uff0c\u82e5\u8981\u4fdd\u7559\u5176$M$\u6761\u679d\uff0c\u5747\u53ef\u6309\u51cf\u6389\u5de6\u679d\uff0c\u51cf\u6389\u53f3\u679d\uff08\u526a\u540e\u5224\u65ad\u5269\u4e0b\u7684\u679d\u6570\u662f\u5426\u7b49\u4e8e$M$\uff09\u548c\u5c06\u5de6\u53f3\u5b50\u6811\u5206\u4e3a\u4e24\u90e8\u5206\uff08\u5373\u4e0a\u56fe\u7ea2\u8272\u533a\u57df\uff09\uff0c\u5206\u522b\u4fdd\u7559$X$\u548c$Y$\u6761\u8fb9\uff0c\u4f7f\u5f97$X+Y+2=M$\n\u6765\u8fdb\u884c\u8ba8\u8bba\u3002**\n\n## \u65e2\u7136\u662f\u6811\u5f62dp\uff0c\u90a3\u5c31\u6309dp\u7684\u5957\u8def\u6765\u5206\u6790\uff1a\n\n\u9996\u5148\u4e00\u904ddfs\u5efa\u597d\u4e8c\u53c9\u6811\n\n\u9636\u6bb5\uff1a\u4f9d\u6b21\u8ba8\u8bba\u4ee5\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\n\n\u72b6\u6001\uff1a\u8bbef[x][y]\u8868\u793a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u5171\u4fdd\u7559y\u6761\u6811\u679d\u7684\u6700\u5927\u82f9\u679c\u6570\n\n\u51b3\u7b56\uff1a\u526a\u6389x\u7684\u5de6\u679d\uff0c\u8fd8\u662f\u526a\u6389\u53f3\u679d\uff0c\u8fd8\u662f\u4fdd\u7559\u5de6\u53f3\u679d\u3002\n```\n\u65b9\u7a0b\uff1af[x][y]=max{\n\t            f[left[x]][y-1]+a[x][left[x]]//\u526a\u53f3\u679d\n                    f[right[x]][y-1]+a[x][right[x]]//\u526a\u5de6\u679d\n                    f[left[x]][k]+f[right[x]][y-2-k]+a[x][left[x]]+a[x][right[x]]//\u90fd\u4e0d\u526a\n\t\t}\n ```\n\u8fb9\u754c\u6761\u4ef6\uff1a1$\\leq$x$\\leq$n 1$\\leq$y$\\leq$m 0$\\leq$k$\\leq$y-2\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n$m^2$\uff09\n\n### \u4f46\u662f\u4e0a\u9762\u65b9\u7a0b\u592a\u590d\u6742\uff0c~~\u61d2\u7684\u5199~~\uff0c\u6240\u4ee5\u6211\u4eec\u6362\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\uff1a \n\n## $<center>\u8fb9\u6743\u4e0b\u653e\u70b9\u6743$\n\n![](https://s2.ax1x.com/2019/08/24/msbDI0.png)\n\n\n**\u72b6\u6001**\uff1a\u8bbe$f[x][y]$\u8868\u793a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u5171\u4fdd\u7559$y$\u4e2a\u8282\u70b9\u7684\u6700\u5927\u82f9\u679c\u6570\n\n**\u51b3\u7b56**\uff1a$x$\u7684\u5de6\u53f3\u4e24\u68f5\u5b50\u6811\u5206\u522b\u4fdd\u7559\u591a\u5c11\u4e2a\u8282\u70b9\n\n**\u65b9\u7a0b**\uff1a$f[x][y]= max${ $f[left[x]][k]+f[right[x]][y-1-k]+v[x]$ }\n$(0\\leq$$k<y)$\n\n**$f[left[x]][k]$\u8868\u793a$x$\u7684\u5de6\u5b50\u6811\u4fdd\u7559$k$\u4e2a\u8282\u70b9\u7684\u6700\u4f18\u503c**\n\n**$f[right[x]][y-1-k]$\u8868\u793a$x$\u7684\u53f3\u5b50\u6811\u4fdd\u7559$y-1-k$\u4e2a\u8282\u70b9\u7684\u6700\u4f18\u503c**\n       \n**\u6700\u540e\u7b54\u6848\u4e3a**:$f[1][m+1]$\n\n**\u7136\u540e\u5176\u4f59\u90e8\u5206\u540c\u4e0a**\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,q,f[105][105];\nint Last[105],End[205],Next[205],len[205],tot;\nbool vis[105];\nstruct node{\n\tint l,r;\n}tree[105];\nvoid cb(int x,int y,int k){\u94fe\u5f0f\u524d\u5411\u661f\n\tEnd[++tot]=y;\n\tNext[tot]=Last[x];\n\tlen[tot]=k;\n\tLast[x]=tot;\n}\nvoid dfs(int x){\u6df1\u641c\u5efa\u6811\n\tvis[x]=true;\u6807\u8bb0\u4e3a\u5df2\u7ecf\u641c\u8fc7\n\tfor(int i=Last[x];i;i=Next[i]){\n\t\tint y=End[i];\n\t\tif(!vis[y]){\n\t\t\tif(!tree[x].l)\u8bb0\u5f55\u513f\u5b50\u8282\u70b9\n\t\t\t\ttree[x].l=y;\n\t\t\telse\n\t\t\t\ttree[x].r=y;\n\t\t\tf[y][1]=len[i];\n\t\t\tdfs(y);\n\t\t}\n\t}\n}\nint tree_dp(int x,int y){\n\tif(f[x][y])\u8bb0\u5fc6\u5316\u641c\u7d22\n\t\treturn f[x][y];\n\tif(x==0)\n\t\treturn 0;\n\tint maxn=0;\n\tfor(int k=0;k<y;k++){\n\t\tint orz=tree_dp(tree[x].l,k);\n\t\tint sto=tree_dp(tree[x].r,y-k-1);\n\t\tmaxn=max(maxn,orz+sto+f[x][1]);\n\t}\n\tf[x][y]=maxn;\n\treturn f[x][y];\n}\nint main(){\n\tscanf(\"%d %d\",&n,&q);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y,k;\n\t\tscanf(\"%d %d %d\",&x,&y,&k);\n\t\tcb(x,y,k);\n\t\tcb(y,x,k);\n\t}\n\tdfs(1);\n\tprintf(\"%d\",tree_dp(1,q+1));\u56e0\u4e3a\u662f\u8fb9\u6743\u4e0b\u653e\u70b9\u6743\uff0c\u6240\u4ee5\u662fq+1\n\treturn 0;\n}\n```\n\n# $<center> \u6811\u5f62dp \u5c0f\u7ed3$\n  \n## \u6811\u5f62\u52a8\u6001\u89c4\u5212\u5c31\u662f\u5728\u201c\u6811\u201d\u7684\u6570\u636e\u7ed3\u6784\u4e0a\u7684\u52a8\u6001\u89c4\u5212\n  \n**\u9636\u6bb5\uff1a\u4ee5\u6bcf\u8282\u70b9\u6240\u4ee3\u8868\u7684\u5b50\u6811\u4f5c\u4e3a\u4e00\u4e2a\u9636\u6bb5\u3002**\n  \n**\u72b6\u6001\uff1a\u4ee5\u6bcf\u68f5\u5b50\u6811\u7684\u6700\u4f18\u503c\u4f5c\u4e3a\u72b6\u6001**\n  \n**\u51b3\u7b56\uff1a\u5f53\u524d\u8282\u70b9\u7684\u6700\u4f18\u503c\u7531\u5176\u5b50\u8282\u70b9\u4ee3\u8868\u7684\u5b50\u6811\u7684\u6700\u4f18\u503c\u9009\u62e9\u800c\u6765**\n  \n**\u5b9e\u73b0\uff1a\u9012\u5f52\u7a0b\u5e8f\u5b9e\u73b0DP\uff08\u8bb0\u5fc6\u5316\u641c\u7d22\uff09**\n  \n  ## $<center> \u8c22\u8c22\u89c2\u770b$",
        "postTime": 1566617002,
        "uid": 156001,
        "name": "TheAutumnGlory",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "~~\u6211\u597d\u96be\u554a~~\n\n##### \u849f\u84bb\u4e4b\u89e3\u5de8\u4f6c\u8bf7\u7565\n\u6811\u72b6dp\u672c\u8d28\uff1a\n\n\uff08\u6811\u72b6dp\u4e3b\u8981\u662f\u80cc\u5305\u95ee\u9898\u8fd9\u91cc\u7528\u80cc\u5305\u95ee\u9898\u8fdb\u884c\u7b80\u8ff0\uff09\n\n1.\u901a\u5e38\u800c\u8a00\u5728\u5199\u52a8\u89c4\u7684\u65f6\u5019\u5c24\u5176\u662f\u80cc\u5305\u6211\u4eec\u53d1\u81ea\u5185\u5fc3\u7684\u65e0\u610f\u8bc6\u7684\u8ba4\u4e3a\u8fd9\u662f\u7ebf\u6027\u7684\u800c\u5f80\u5f80dp\u5c31\u662f\u5efa\u7acb\u5728\u7ebf\u6027\u7684\u57fa\u7840\u4e0a\u5b58\u5728\u7684\n\n2.\u6811\u72b6dp\u5c31\u662f\u5c06\u4e00\u4e2a\u7ebf\u6027\u7684dp\u7684\u64cd\u4f5c\u987a\u5e8f\u8fdb\u884c\u4e86\u6539\u7f16\u5f80\u5f80\u6539\u53d8\u6210\u4e3a\u4e86\u4e00\u4e2a\u987a\u5e8f\u6784\u6210\u6811\u7684\u6837\u5b50\n\n\u603b\u7ed3\uff1a\u6811\u72b6dp\u5c31\u662f\u5c06\u666e\u901adp\u7684\u64cd\u4f5c\u987a\u5e8f\u6539\u53d8\u5f62\u6210\u7684\u672c\u8eab\u4e00\u822c\u4e0d\u5177\u6709\u7279\u6b8a\u7684\u6027\u8d28\n\n#### \u9898\u89e3\u601d\u8def\uff1a\n\u6309\u4e0a\u6587\u6240\u8ff0\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u6df1\u641c\u7684\u904d\u5386\u5230\u6bcf\u4e00\u4e2a\u8282\u70b9\u4ee5\u5176\u672c\u8eab\u4f5c\u4e3a\u4e00\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\u5f97\u51fa\u8be5\u70b9\u4ed8\u51fa\u4ee3\u4ef7\u4e3a\uff080-min(q,tree[i].size))\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u5f88\u5178\u578b\u7684\u80cc\u5305\u95ee\u9898\n\n\n\u8f6c\u79fb\u65b9\u7a0b\n\ndp[u][j]=max(dp[u][j],dp[u][j-k-1]+dp[v][k]+e[u][i].w);\n\n###### code\uff1a\n```\n#include<stdio.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nint n,q,dp[110][110],cnt[110]={};\nstruct edge\n{\n\tint w,e;\n}t;\nvector<edge>e[220];\nvoid dfs(int u,int p)\n{\n\tfor(int i=0;i<e[u].size();i++)\n\t{\n\t\tint v=e[u][i].e;\n\t\tif(v==p)\n\t\tcontinue;\n\t\tdfs(v,u);\n        //\u4e0d\u65ad\u904d\u5386\u5230\u65e0\u6cd5\u7ee7\u7eed\u5f53\u524d\u8282\u70b9\u4e3a\u7b2c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u8fd4\u56de\n\t\tcnt[u]+=cnt[v]+1;\n        //cnt\u4e3a\u4ee5\u8be5\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\n        //\u666e\u901a\u80cc\u5305\n\t\tfor(int j=min(cnt[u],q);j;j--)\n\t\t{\n\t\t\tfor(int k=min(j-1,cnt[v]);k>=0;k--)\n\t\t\t{\n\t\t\t\tdp[u][j]=max(dp[u][j],dp[u][j-k-1]+dp[v][k]+e[u][i].w);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y,w;\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tt.e=y,t.w=w;\n\t\te[x].push_back(t);\n\t\tt.e=x;\n\t\te[y].push_back(t);\n        //\u52a0\u8fb9\n\t}\n\tdfs(1,0);\n\tprintf(\"%d\",dp[1][q]);\n\treturn 0;\n } \n```\nrp++\n\n\n\u5de8\u4f6c\u4e0e\u5b66\u4e60\u515a\u53ef\u64a4\u79bb\n\n\n~~\u4e66\u63a5\u4e0a\u6587~~\n\u6211\u597d\u96be\u554a\u624d\u4e0a\u9ad8\u4e00\n\n\u88ab\u6559\u7ec3\u7b2c\u4e00\u8282\u8bfe\u53eb\u53bb\u8bf4\n\n\u8ba9\u6211\u7ed9\u5404\u4f4d\u5de8\u4f6c\u8bb2\u8bb2\u6811\u72b6dp\n\n\u770b\u770b\u6211\u7684\u80fd\u529b\u6211\u597d\u96be\u554a",
        "postTime": 1574591351,
        "uid": 133383,
        "name": "0104154308_f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u849f\u84bb\u5199\u7684\u7b2c\u4e00\u4e2a\u6811\u4e0adp+\u80cc\u5305\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u601d\u8def\u8fd8\u662f\u5f88\u660e\u786e\u7684\uff0c\u6211\u4eec\u8bbe\u8ba1\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n`f[i][j][k]`\u4ee3\u8868\u4ee5`i`\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5df2\u7ecf\u8003\u8651\u4e86\u524d`j`\u4e2a\u7ed3\u70b9\uff0c\u9009\u62e9\u4e86`k`\u6761\u8fb9\u65f6\u5019\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u5176\u5b9e\u5c31\u6bd4\u8f83\u663e\u7136\u4e86\uff0c\u6211\u4eec\u5bf9\u5de6\u53f3\u5b50\u6811\u5206\u522b\u8fdb\u884c\u8f6c\u79fb\u3002\n\n`f[i][j][k] = max(f[i][j][k] , f[i][j - 1][k - l - 1] + f[son][son\u7684\u5927\u5c0f][l] + e[i].w);`\n\n\u4e3a\u4ec0\u4e48\u662f`k - l - 1`\uff1f\n\n\u8fd9\u4e2a\u5176\u5b9e\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u6211\u4eec\u4ece\u5f53\u524d\u8282\u70b9\u5230\u5b50\u6811\u7684\u90a3\u6761\u8fb9\u662f\u4e0d\u53ef\u4ee5\u53bb\u6389\u7684\uff0c\u4e0d\u7136\u7684\u8bdd\u4ed6\u7684\u5b50\u6811\u5c31\u88ab\u5207\u65ad\u4e86\uff0c\u4e5f\u5c31\u65e0\u6cd5\u8f6c\u79fb\u8fc7\u6765\u4e86\u3002\n\n\u6211\u4eec\u76f4\u63a5\u5bf9\u8fd9\u4e2a\u4e09\u7ef4\u7684\u65b9\u7a0b\u8fdb\u884c\u8f6c\u79fb\uff0c\u6216\u8bb8\u80fdAC\u3002\uff08\u6211\u6ca1\u8bd5\u8fc7\uff09\n\n\u6211\u4eec\u518d\u4ed4\u7ec6\u770b\u770b\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u6709\u70b9\u7c7b\u4f3c\u4e8e\u80cc\u5305\u7684\u8f6c\u79fb\uff1f\u90a3\u662f\u5426\u53ef\u4ee5\u7528\u80cc\u5305\u7684\u601d\u60f3\u6765\u4f18\u5316\u5b83\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u6211\u4eec\u6bcf\u6b21\u5bf9`f[i][j][k]`\u8fdb\u884c\u8f6c\u79fb\u65f6\uff0c\u662f\u8981\u7528\u5230\u4e0a\u4e00\u5c42\u7684`f[i][j-1][k]`\u7684\u6570\u636e\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9`k`\u8fdb\u884c\u5012\u5e8f\u679a\u4e3e\uff0c\u7c7b\u4f3c\u4e8e01\u80cc\u5305\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u628a\u4e2d\u95f4\u7684$j$\u7ed9\u641e\u4e0b\u53bb\u4e86\u3002\n\n\u56e0\u6b64\u6211\u4eec\u7684\u8f6c\u79fb\u65b9\u7a0b\u53d1\u751f\u4e86\u53d8\u5316\uff1a\n\n`f[i][k] = max(f[i][k] , f[i][k - l - 1] + f[son][l] + e[i].w);`\n\n\u5012\u5e8f\u679a\u4e3e$k$\uff0c$l$~~\u968f\u610f~~\u679a\u4e3e\u5373\u53ef.\n//\u5176\u5b9e\u4ee3\u7801\u4e2dk\u5bf9\u5e94\u7684\u662fj\uff0cl\u5bf9\u5e94\u7684\u662fk\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 500;\n\nstruct Edge {\n\tint to , nxt , w;\n}e[N];\n\nint head[N] , cnt , n , q , root = 1 , ind[N] , out[N];\n\nvoid add(int u , int v , int w) {\n\te[++cnt].w = w;\n\te[cnt].to = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nint a[N] , size[N] , f[N][N];\nvoid dfs1(int now , int fa) {\n\tsize[now] = 1;\n\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\tint v = e[i].to , w = e[i].w;\n\t\tif(v == fa) continue;\n\t\ta[v] = w;\n\t\tdfs1(v , now);\n\t\tsize[now] += size[v];\n\t}\n}\n\nvoid dfs2(int now , int fa) {\n\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif(v == fa) continue;\n\t\tdfs2(v , now);\n\t\tfor(int j = size[now] ; j >= 1 ; j --) {\n\t\t\tfor(int k = 0 ; k <= min(j - 1, size[v]) ; k ++) {\n\t\t\t\tf[now][j] = max(f[now][j] , f[now][j - k - 1] + f[v][k] + e[i].w);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main () {\n\tscanf(\"%d %d\" , &n , &q); \n\tfor(int i = 1 ; i < n ; ++ i) {\n\t\tint u , v , w;\n\t\tscanf(\"%d %d %d\" , &u , &v , &w);\n\t\tadd(u , v , w); add(v , u , w);\n\t}\n\tdfs1(root , root);\n\tdfs2(root , root);\n\tprintf(\"%d\" , f[root][q]);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1571818965,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u6811\u5f62DP\u7684\u5165\u95e8\u9898+\u6811\u5f6201\u80cc\u5305\n\n\u63a5\u4e0b\u6765\u662f\u6b63\u6587\n------------\n\u8fd8\u662fDP\uff0c\u53ea\u4e0d\u8fc7\u5230\u6811\u4e0a\u53bb\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u8981\u53bb\u5bfb\u627e\u7684\u4ecd\u662f\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n\u4ee5\u672c\u9898\u4e3a\u4f8b\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f\uff0c\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u4fdd\u7559q\u6761\u8fb9\uff0c\u4f7f\u5f97\u53ef\u4ee5\u53d6\u5f97\u7684\u8fb9\u6743\u503c\u6700\u5927\n\n\u8fd9\u9898\u4e00\u770b\u5c31\u4e0d\u80fd\u76f4\u63a5\u4ece\u6839\u8282\u70b9\u66b4\u529bdfs\u554a\uff0c100%TLE\n\n\u6240\u4ee5\u6211\u4eec\u4f1a\u60f3\u5230DP\n\n\u4f46\u662f\u600e\u4e48DP\u5462\uff1f\n\n------------\nDP\u4e4b\u672c\uff1a\u627e\u72b6\u6001\n\n\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5f88\u96be\uff0c\u6240\u4ee5\u8003\u8651\u4ece\u5b50\u6811\u63a8\u5230\u6839\u8282\u70b9\n\n\u521d\u6b65\u5f97\u51fa\uff1a$dp[u]$\u8868\u793a\u4ee5u\u4e3a\u6839\u8282\u70b9\u65f6\u80fd\u5f97\u5230\u7684\u6700\u5927\u7684\u8fb9\u6743\u503c\n\n\n------------\n\u4f46\u662f\u5f88\u660e\u663e\u8fd9\u70b9\u6839\u672c\u4e0d\u591f\uff0c\u4e0d\u8fd8\u6709\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\u5417?\n\n\u90a3\u5c31\u662f\u5f53\u524d\u8be5\u70b9\u5df2\u7ecf\u4f7f\u7528\u7684\u8fb9\u6570\n\n **\u6240\u4ee5\u6211\u4eec\u627e\u5230\u4e86\u72b6\u6001\u7684\u7b2c\u4e8c\u7ef4:\u5f53\u524d\u6839\u8282\u70b9\u5df2\u7ecf\u5305\u542b\u7684\u6240\u6709\u8fb9\u6570$j$**\n\n**\u6700\u7ec8\u5f97\u51fa\u672c\u9898\u7684\u72b6\u6001$dp[u][j]$**\n\n\n------------\n\u63a5\u4e0b\u6765\u662f\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u5bfb\u627e\n\n\n------------\n\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u53ea\u80fd\u53d6\u4e00\u6b21\uff0c\u53d6\u540e\u4f1a\u5bf9\u603b\u7684\u7ed3\u679c\u9020\u6210\u5f71\u54cd\uff0c\u662f\u4e0d\u662f\u611f\u89c9\u633a\u719f\u6089\uff0c\u662f\u7684\uff0c**01\u80cc\u5305\uff01**~~\u5b66\u5230\u8fd9\u4e86\u4e0d\u4f1a01\u80cc\u5305\u90fd\u4e0d\u77e5\u9053\u662f\u5565\u5427~~(\u5982\u679c01\u80cc\u5305\u73b0\u5728\u8fd8\u4e0d\u4f1a\uff0c\u8bf7\u51fa\u95e8[\u53f3\u8f6c](https://www.cnblogs.com/zyacmer/p/9961710.html))\n\n\n------------\n\u5230\u4e86\u8fd9\u91cc\uff0c\u4f60\u662f\u4e0d\u662f\u5bf9AC\u8fd9\u9898\u5df2\u7ecf\u6709\u4e86\u4fe1\u5fc3\uff1f\n\n\n------------\n\u6700\u540e\uff0c\u8d34\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4ee5\u53ca\u89e3\u91ca\uff1a\n**$dp[u][j]=max(dp[u][j],dp[u][j-1-k]+dp[v[i]][k]+w[i])$**\n**$dp[u][j]$\uff1a\u6839\u8282\u70b9\u4e3au\u65f6\uff0c\u53d6j\u6761\u8fb9\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u8fb9\u6743\u503c**\n**$0<j<=min$($q$,$u$\u8fd9\u70b9\u6240\u6709\u7684\u8fb9\u7684\u603b\u6570)**\n**$0<=k<=min$(\u4e0e$u$\u76f8\u8fde\u7684\u8be5\u70b9\u6240\u6709\u7684\u8fb9\u7684\u603b\u6570\uff0c$j-1$)**\\\n**$i$\u4e3a\u5f53\u524d\u5df2\u7ecf\u679a\u4e3e\u5230\u54ea\u6761\u8fb9(\u90bb\u63a5\u8868\u5efa\u8fb9)**\n\n\n------------\n### \u7ec6\u8282\u65b9\u9762\uff1a\n1.\u672c\u9898\u6c42\u89e3\u7b54\u6848\u9700\u8981\u7528\u5230\u8fb9\u6743\u503c\uff0c\u5e94\u7528\u90bb\u63a5\u8868\u5efa\u56fe\n\n2.\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u91cc\u7528$j-1-k$\u800c\u4e0d\u662f$j-k$\u662f\u56e0\u4e3a\uff1a\u5b50\u6811\u548c\u8be5\u6839\u8282\u70b9\u4e4b\u95f4\u5fc5\u987b\u6709\u8fb9\u76f8\u8fde(\u672c\u9898\u7684\u9690\u85cf\u6761\u4ef6)\uff0c$k$\u7684\u8303\u56f4\u4e3a$0$~$j-1$\u540c\u7406(~~\u6bd5\u7adf\u8fd9\u662f\u6811\u597d\u5427~~)\n\n**3.\u4e00\u5b9a\u8981\u53cc\u5411\u5efa\u8fb9\uff0c\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u5e94\u8be5\u7236\u8282\u70b9\u5b50\u8282\u70b9\u90fd\u662f\u4e92\u76f8\u53ef\u8fbe\u7684(~~\u53c8\u4e0d\u662f\u56fe\u8bba\u9898~~)**\n\n4.\u8fb9\u754c\u6761\u4ef6\uff1a\u8fd9\u4e2a\u5c31\u4e0e\u4e0a\u9762\u7684\u53cc\u5411\u5efa\u8fb9\u6709\u5173\u4e86,**\u5982\u679c\u8be5\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u662f\u5b83\u7684\u7236\u4eb2**\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u91cc\u5df2\u7ecf\u662f\u5b50\u8282\u70b9\uff0c\u4e0d\u80fd\u7ee7\u7eed\u5f80\u4e0b\u9012\u63a8\uff08\u513f\u5b50\u4e0d\u80fd\u56de\u63a8\u7236\u4eb2\uff0c\u5426\u5219\u4f1a**\u6b7b\u5faa\u73af**\uff09\uff08continue\u7684\u539f\u56e0\u4e5f\u662f\u53cc\u5411\u5efa\u8fb9\uff0c\u8be5\u8282\u70b9\u53ef\u80fd\u8fd8\u6709\u5b69\u5b50\uff0c\u4f46\u5982\u679c\u4e0e\u5b83\u76f8\u8fde\u7684\u7b2c\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u8282\u70b9\u5374\u662f\u5b83\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u5c31\u4e0d\u80fd\u9012\u63a8\uff0c\u6240\u4ee5continue\u6389**\u8fd9\u4e00\u6761\u8fb9**\uff09\uff08\u81f3\u4e8e$i!=-1$\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0c\u90bb\u63a5\u8868\u57fa\u7840\uff09\n\n\n------------\n## \u6700\u540e\uff0c\u4e0a\u4ee3\u7801(\u4ee3\u7801\u91cc\u8fd8\u4f1a\u6709\u4e00\u4e9b\u89e3\u91ca)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint fir[2000],nxt[2000],v[2000],w[2000],tot;\nvoid add(int a,int b,int c){//\u90bb\u63a5\u8868\u5efa\u56fe\n\ttot++;\n\tnxt[tot]=fir[a];\n\tfir[a]=tot;\n\tv[tot]=b;\n\tw[tot]=c;\n}\nint n,q,bian[2000],dp[200][2000];//bian\u6570\u7ec4\u6307\u7684\u662f\u5728bian[i](\u7b2ci\u4e2a\u8282\u70b9)\u5305\u542b\u6240\u6709\u5b50\u6811\u5171\u8fde\u63a5\u4e86\u591a\u5c11\u6761\u8fb9\nvoid dp1(int u,int father){//father\u6307\u7684\u662fu\u7531\u54ea\u4e2a\u8282\u70b9\u9012\u63a8\u800c\u6765\n\tfor(int i=fir[u];i!=-1;i=nxt[i]){//\u90bb\u63a5\u8868\u57fa\u7840\uff1a\u679a\u4e3e\u4e0eu\u76f8\u8fde\u7684\u8fb9i\n\t\tif(v[i]==father) continue;//\u5b50\u8282\u70b9\u4e0d\u80fd\u9012\u63a8\u5230\u7236\u4eb2\u8282\u70b9\n\t\tdp1(v[i],u);//\u7ee7\u7eed\u9012\u5f52\n\t\tbian[u]+=bian[v[i]]+1;//v[i]\u4e3au\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u5b83\u4eec\u4e4b\u95f4\u81f3\u5c11\u8981\u6709\u4e00\u6761\u8fb9\u76f8\u8fde\uff0cu\u53ef\u80fd\u4e0d\u6b62v[i]\u8fd9\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u5e94\u8be5\u7528++\n\t\tfor(int j=min(bian[u],q);j>0;j--){//j\u4e3a\u76ee\u524du\u7528\u4e86\u51e0\u6761\u8fb9\uff0cj\u65e2\u4e0d\u80fd\u8d85\u8fc7\u8981\u53d6\u7684\u8fb9\u7684\u603b\u6570\uff0c\u4e5f\u4e0d\u80fd\u8d85\u8fc7u\u6240\u6709\u7684\u8fb9\u7684\u603b\u6570\n\t\t\tfor(int k=min(bian[v[i]],j-1);k>=0;k--){//u\u548cv[i]\u4e4b\u95f4\u81f3\u5c11\u8981\u6709\u4e00\u6761\u8fb9\u7528\u4e8e\u8fde\u63a5\n\t\t\t\tdp[u][j]=max(dp[u][j],dp[u][j-1-k]+dp[v[i]][k]+w[i]);//w[i]\uff1au\u548cv[i]\u4e4b\u95f4\u8fde\u63a5\u7684\u8fb9\u7684\u8fb9\u6743\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tmemset(fir,-1,sizeof(fir));\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<n;i++){\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd(a,b,c);//\u53cc\u5411\u5efa\u8fb9\n\t\tadd(b,a,c);\n\t}\n\tdp1(1,-1);//father\u4e00\u5f00\u59cb\u4e3a-1\u7684\u539f\u56e0\uff1a1\u662f\u6839\u8282\u70b9\uff0c\u4e0d\u53ef\u80fd\u6709\u7236\u4eb2\uff0c\u8be5\u9898\u4e2d\u65e0\u8d1f\u6570\u8282\u70b9\uff0c\u6545\u53d6-1\n\tprintf(\"%d\",dp[1][q]);//q\u4e3a\u5e94\u53d6\u591a\u5c11\u6761\u8fb9\n\treturn 0;\n}\n```\n### \u5b8c\u7ed3\u6492\u82b1\u82b1^-^",
        "postTime": 1563543456,
        "uid": 171709,
        "name": "\u8fd9\u8c01\u9876\u5f97\u4f4f\u554a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u4e00\u4e2a\u6811\u679d\uff0c\u6211\u4eec\u8003\u8651\u53d6\u6216\u4e0d\u53d6\n\n\u5bf9\u4e8e\u4e00\u4e2a\u88ab\u53d6\u4e86\u7684\u6811\u679d\uff0c\u8981\u60f3\u83b7\u5f97\u4ed6\u7684\u82f9\u679c\uff0c\u5c31\u8981\u4fdd\u8bc1\u8be5\u8fb9\u5230\u8ddf\u7684\u8def\u5f84\u4e0a\u6ca1\u6709\u6811\u679d\u88ab\u526a\u6389  \n\u6211\u4eec\u8003\u8651 $f[x][i]$ \u4e3a\u4ee5\u8282\u70b9 $x$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u4fdd\u7559 $i$ \u6839\u6811\u679d\u540e\u80fd\u83b7\u5f97\u7684\u6700\u5927\u82f9\u679c\u6570\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a dfs \u5230\u7684 $x$\uff0c\u6211\u4eec\u679a\u4e3e $i,j$\uff0c\u5b83\u4eec\u5206\u522b\u4e3a \u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559\u7684\u8fb9\u6570\uff0c\u548c\u5de6\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559\u7684\u8fb9\u6570\u3002\u5219\uff0c\u4ee5\u53f3\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559\u7684\u8fb9\u6570\u5c31\u662f $i-j$\n\n\u4f46\u662f\uff0c\u4e3a\u4e86\u80fd\u4fdd\u7559\u4f4f\u5de6\u53f3\u5b50\u6811\u4e2d\u7684\u82f9\u679c\uff0c\u6839\u4e00\u5b9a\u8fd8\u8981\u5411\u5de6\u53f3\u513f\u5b50\u8fde\u8fb9\uff0c\u6240\u4ee5\u5de6\u53f3\u5b50\u6811**\u5185\u90e8**\u8fd8\u80fd\u7528\u7684\u8fb9\u5c31\u662f\u6709$j-1$ \u548c $i-j-1$\u4e86\n\n\u8fd9\u6837\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5c31\u51fa\u6765\u4e86\uff1a\n$f[x][i]=max(f[lc][j-1]+w(x,lc)+f[rc][i-j-1]+w(x,lc))$  \n\u5176\u4e2d $lc,rc$ \u5206\u522b\u4e3a $x$ \u7684\u5de6\u53f3\u513f\u5b50\uff0c$w(x,y)$ \u4e3a\u8fde\u63a5\u70b9 $x,y$ \u7684\u8fb9\u4e0a\u7684\u82f9\u679c\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\nusing namespace std;\nconst int Maxn=110,inf=0x3f3f3f3f;\nstruct edge{\n\tint v,len;\n};\nint n,m;\nvector <edge> e[Maxn];\nint f[Maxn][Maxn];\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nvoid dfs(int x,int fa)\n{\n\tint lc=0,rc; // \u5de6\u53f3\u513f\u5b50\n\tint v1,v2; // \u8fde\u5411\u5de6\u53f3\u513f\u5b50\u7684\u8fb9\u6743\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i].v;\n\t\tif(y==fa)continue;\n\t\tif(lc)rc=y,v2=e[x][i].len;\n\t\telse lc=y,v1=e[x][i].len;\n\t\tdfs(y,x);\n\t}\n\tif(!lc)return; // \u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u76f4\u63a5\u9000\u51fa\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tfor(int j=0;j<=i;++j)\n\t\t{\n\t\t\tint tmp=0; // \u50a8\u5b58\u662f\u5426\u6709\u5411\u5de6\u53f3\u513f\u5b50\u8fde\u8fb9\n\t\t\tif(j>=1)tmp+=v1; //\u5982\u679c\u6709\u7ed9\u5de6\u53f3\u513f\u5b50\u5206\u914d\u8fb9\uff0c\u80af\u5b9a\u8981\u4f18\u5148\u5c06\u6839\u4e0e\u5de6\u53f3\u513f\u5b50\u8fde\u8d77\u6765\n\t\t\tif(i-j>=1)tmp+=v2; // \u4e0e\u4e0a\u540c\u7406\n\t\t\t\n\t\t\tf[x][i]=max(f[x][i],f[lc][j-1]+f[rc][i-j-1]+tmp);\n\t\t}\n\t}\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tn=read(),m=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint x=read(),y=read(),c=read();\n\t\te[x].push_back(edge{y,c});\n\t\te[y].push_back(edge{x,c});\n\t}\n\tdfs(1,0);\n\t\n\tprintf(\"%d\\n\",f[1][m]);\n\t\n\treturn 0;\n}\n```\n\n**\u6709\u4e0d\u61c2\u7684\u5730\u65b9\u53ef\u4ee5\u79c1\u4fe1\u6211\uff0c\u6211\u7ecf\u5e38\u5728\u7ebf**",
        "postTime": 1578966443,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "# \u5206\u6790\uff08\u4e3b\u8981\u5b58\u5728\u4e09\u4e2a\u95ee\u9898\uff09\uff1a\n## 1.\u9996\u5148\u8f93\u5165\u7684\u65f6\u5019\u6ca1\u6709\u6807\u660e\u8c01\u662f\u7236\u8282\u70b9\uff0c\u8c01\u662f\u5b50\u8282\u70b9\uff1b\n \u5982\u4f55\u89e3\u51b3\uff1f\u9996\u5148\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u7b2c\u4e8c\u6b21\u8f93\u5165\u540c\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\uff0c\u5c31\u4ea4\u6362\u7236\u5b50\u5173\u7cfb\uff1a\n```cpp\n\t\tint baba,erzi,k;\n\t\tcin>>baba>>erzi>>k;\n\t\tif(father[erzi])\n\t\t{\n\t\t\tint t=baba;\n\t\t\tbaba=erzi;\n\t\t\terzi=t;\n\t\t}\n```\n## 2.\u5982\u4f55\u8f6c\u5316\u4e8c\u53c9\u6811\uff08\u5173\u952e\uff09\n \u6b64\u4e8c\u53c9\u6811\u975e\u5f7c\u4e8c\u53c9\u6811\u2014\u2014\u2014\u2014\u6211\u4eec\u5e94\u8be5\u5c06\u5b83\u8f6c\u5316\u4e3a\u201c\u5de6\u513f\u5b50\uff0c\u53f3\u5144\u5f1f\u201d\u7684\u4e8c\u53c9\u6811\uff08\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4e0d\u8f6c\u5316\u96be\u4ee5\u8bbf\u95ee\u5144\u5f1f\u8282\u70b9\uff1b\u8f6c\u5316\u540e\u65b9\u4fbf\u5f88\u591a\uff0c\u4fbf\u4e8e\u679a\u4e3e\u60c5\u51b5\uff0c\u8be6\u89c13\uff09\n```cpp\n\t\tif(last[baba]==0) l[baba]=erzi;\n\t\telse r[last[baba]]=erzi;\n\t\tlast[baba]=erzi;\n```\n## 3.\u6700\u540e\uff0c\u4f5c\u4e3a\u6811\u5f62dp\uff0cdp\u5f53\u7136\u6700\u6838\u5fc3\u5566\n#### \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b*\uff1a\n```cpp\n\tfor(int i=0;i<b;i++)\n\t{\n\t\tf[a][b]=max(f[a][b],work(l[a],i)+work(r[a],b-i-1)+w[a]);\n        //w\u5373\u8fd9\u4e2a\u679d\u6761\u7684\u4ef7\u503c\uff0c\u6211\u4eec\u5b58\u50a8\u4e00\u4e2a\u8282\u70b9\u65f6\u540c\u65f6\u5b58\u50a8\u5b83\u4e0e\u7236\u8282\u70b9\u8fde\u63a5\u679d\u6761\u7684\u4ef7\u503c\uff1b\n           //f[a][b]\u5373\u7b2ca\u4e2a\u8282\u70b9\u8fd8\u53ef\u4ee5\u4fdd\u7559b\u4e2a\u679d\u6761\u65f6\u80fd\u5f97\u7684\u6700\u5927\u82f9\u679c\u6570,\u5b83\u7684\u503c\u7b49\u4e8e\u513f\u5b50\u6700\u5927\u503c+\u5144\u5f1f\u6700\u5927\u503c+\u52a0\u81ea\u8eab\u4ef7\u503c\n\t}\n```\n\n### \u4e8e\u662f\uff0c\u4e00\u9053\u6811\u5f62dp~~\u6c34\u9898~~\u5c31\u505a\u597d\u4e86qwq\n\u9644AC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint l[105],r[105],n,q,last[105],w[105],f[105][105],vis[105][105],father[105],m,ans;//f[a][b]\u8868\u793a\u7b2ca\u4e2a\u8282\u70b9\u8fd8\u53ef\u4ee5\u4fdd\u7559b\u4e2a\u679d\u6761\u65f6\u80fd\u5f97\u7684\u6700\u5927\u82f9\u679c\u6570\n//l[i]\u5373i\u7684\u5de6\u513f\u5b50\uff0cr[i]\u540c\u7406 \nint work(int a,int b)//a\u4e2a\u8282\u70b9\u4fdd\u7559b\u4e2a\u679d\u6761\u65f6\u80fd\u5f97\u7684\u6700\u5927\u82f9\u679c\u6570\n{\n\tif(vis[a][b]==1)\n\treturn f[a][b];\n\tvis[a][b]=1;\n\tf[a][b]=work(r[a],b); //f[a][b]\u5c31\u7b49\u4e8e\u5b83\u513f\u5b50\u4fdd\u7559b\u4e2a\u679d\u6761\u6240\u5f97\u6700\u5927\u82f9\u679c\u6570(\u7c7b\u4f3c\u4e8e\u521d\u59cb\u5316)\n\tfor(int i=0;i<b;i++)\n\t{\n\t\tf[a][b]=max(f[a][b],work(l[a],i)+work(r[a],b-i-1)+w[a]);//\u679a\u4e3e\u6bd4\u8f83\uff1a\u513f\u5b50\u7559i\u6839\u679d\u6761\uff0c\u81ea\u5df1\u7559\u4e00\u6839\u679d\u6761\uff0c\u6240\u4ee5\u5144\u5f1f\u7559b-i-1\u6839\u679d\u6761 \n\t}\n\treturn f[a][b];\n}\nint main()\n{\n\tcin>>n>>q;\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint baba,erzi,k;\n\t\tcin>>baba>>erzi>>k;//\u987e\u540d\u601d\u4e49\n\t\tif(father[erzi])//\u5982\u679c\u513f\u5b50\u6709\u7238\u7238\u4e86\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u8f93\u5165\u7684\u4e3a\u513f\u5b50\uff0c\u7b2c\u4e8c\u4e2a\u8f93\u5165\u7684\u4e3a\u7238\u7238 \n\t\t{\n\t\t\tint t=baba;\n\t\t\tbaba=erzi;\n\t\t\terzi=t;\n\t\t}\n\t\tw[erzi]=k; \n\t\tfather[erzi]=1;\n\t\tif(last[baba]==0) l[baba]=erzi;\n\t\telse r[last[baba]]=erzi;\n\t\tlast[baba]=erzi;\n\t} \n\tcout<<work(l[1],q);//\u4e00\u53f7\u8282\u70b9\u6ca1\u6709\u5144\u5f1f\uff0c\u8f93\u51fa\u513f\u5b50\u5373\u53ef\n\treturn 0;\n}\n```\n",
        "postTime": 1572611557,
        "uid": 224346,
        "name": "SKTTIFaker",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2015)\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6811\u5f62DP\u7c7b\u578b\u7684\u9898(\u6765\u81ea\u84dd\u4e66)\uff0c\u6211\u6765\u82df\u4e00\u4e2a\u84dd\u4e66\u4e0a\u7684\u505a\u6cd5\u3002\n\n\u7531\u9898\u53ef\u77e5\uff0c\u9700\u8981\u4fdd\u7559\u7684\u6811\u679d\u6570\u91cf\u4e3a $Q$ \u6761\uff0c\u5373\u4fdd\u7559$j=Q+1$\u4e2a\u3002\u6811\u6839\u5fc5\u987b\u4fdd\u7559\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u5206\u4e09\u79cd\u60c5\u51b5\u6765\u8ba8\u8bba\u4fdd\u7559\u82f9\u679c\u7684\u6700\u5927\u6570\u91cf\u3002\n\n1. \u6811\u6839\u7684\u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u5168\u4fdd\u7559\u53f3\u5b50\u6811\uff0c\u53f3\u5b50\u6811\u4e2d\u4fdd\u7559$j-1$\u4e2a\u7ed3\u70b9\u3002\n2. \u6811\u6839\u7684\u53f3\u5b50\u6811\u4e3a\u7a7a\uff0c\u5168\u4fdd\u7559\u5de6\u5b50\u6811\uff0c\u5de6\u5b50\u6811\u4e2d\u4fdd\u7559$j-1$\u4e2a\u7ed3\u70b9\u3002\n3. \u6811\u6839\u7684\u4e24\u68f5\u5b50\u6811\u90fd\u4e3a\u975e\u7a7a\uff0c\u8bbe\u5de6\u5b50\u6811\u4fdd\u7559$k$\u4e2a\u7ed3\u70b9\uff0c\u5219\u53f3\u5b50\u6811\u4fdd\u7559$j-k-1$\u4e2a\u7ed3\u70b9\u3002\n\n \n\u8981\u5f97\u5230\u4fdd\u7559\u6811\u6839\u65f6\u7684\u82f9\u679c\u6700\u5927\u6570\u91cf\uff0c\u53ea\u9700\u8981\u6c42\u4e0a\u8ff0\u4e09\u4e2a\u65b9\u6848\u7684\u6700\u5927\u503c\u3002\n\n\u8bbe\u6811\u6839\u4e3a$i$\uff0c\u5de6\u513f\u5b50\u4e3a$l_{i}$\uff0c\u53f3\u513f\u5b50\u4e3a$r_{i}$\uff0c\u5bf9\u4e8e $ 1 $ \u65b9\u6848\uff0c\u82e5\u8981\u53d6\u5f97\u8be5\u65b9\u6848\u7684\u6700\u5927\u503c\uff0c\u5219\u9700\u53d6\u5f97\u4ee5$r_{i}$\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559$j-1$\u4e2a\u7ed3\u70b9\u7684\u6700\u5927\u503c\u3002\n\n\u8fd9\u65f6\uff0c\u540c\u6837\u5177\u6709\u4e0a\u8ff0\u4e09\u79cd\u65b9\u6848\u3002$2$ \u548c $3$ \u65b9\u6848\u540c\u7406\u3002\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u8be5\u95ee\u9898\u5177\u6709\u660e\u663e\u7684\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\uff0c\u6bcf\u4e2a\u95ee\u9898\u90fd\u4e0e\u5de6\u53f3\u513f\u5b50\u7ed3\u70b9\u6709\u5173\u7cfb\uff0c\u4f46\u4e0d\u4e0e\u5b59\u5b50\u7ed3\u70b9\u53d1\u751f\u5173\u7cfb\uff0c\u5177\u5907\u65e0\u540e\u6548\u6027\uff1b\u4e14\u8ba1\u7b97\u65b9\u6848\u65f6\uff0c\u641c\u7d22\u5b50\u7ed3\u6784\u65f6\u5177\u5907\u91cd\u53e0\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528DP\u89e3\u51b3\u3002\n\n\u4e0b\u9762\u5f00\u59cb\u641e\u4e8b\uff1a\n\n\u9636\u6bb5\u548c\u72b6\u6001\uff1a$f_{i,j}$ \uff1a\u8868\u793a\u4ee5 $i $ \u4e3a\u6839\u7684\u6811\u4e0a\u4fdd\u7559 $j$ \u4e2a\u7ed3\u70b9\u7684\u6700\u5927\u6743\u503c\u548c\u3002\u8bbe$l_{i} $ \uff0c$r_{i}$\u5206\u522b\u5b58\u50a8$i$\u7ed3\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$f_{i,j} = max(f_{l_{i},k}+f_{r_{i},j-k-1}+a_{i})$ $(0<=k<=j-1)$\u3002\n\n\u521d\u59cb\u5316\uff1a$f_{i,j}=0 $  $(j=0)$\uff1b\n        $f_{i,j}=a_{i}$    ($j!=0$ \u4e14  $l_{i}=0$ \u4e14 $r_{i}=0$).\n \nAns $ = $ $f_{1,Q+1}$\u3002\n\n\u4e0b\u9762\u732e\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxa = 105;\nint n,q,i,j;\nint l[maxa],r[maxa],f[maxa][maxa]={0},map[maxa][maxa],a[maxa];\nvoid maketree(int v){\n\tfor(int i=1;i<=n;i++)\n\tif(map[v][i]>=0){\n\t\tl[v]=i;\n\t\ta[i]=map[v][i];\n\t\tmap[v][i]=map[i][v]=-1;\n\t\tmaketree(i);\n\t\tbreak;\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(map[v][i]>=0){\n\t\tr[v]=i;\n\t\ta[i]=map[v][i];\n\t\tmap[v][i]=map[i][v]=-1;\n\t\tmaketree(i);\n\t\tbreak;\n\t}\n}\nint dp(int i,int j){\n\tif(j==0)return 0;\n\tif((l[i]==0)&&(r[i]==0))return a[i];\n\tif(f[i][j]>0)return f[i][j];\n\tfor(int k=0;k<=j-1;k++)\n\tf[i][j]=max(f[i][j],dp(l[i],k)+dp(r[i],j-k-1)+a[i]);\n\treturn f[i][j];\n}\nint main(){\n\tint x,y,z;\n\tscanf(\"%d%d\",&n,&q);\n\tq++;\n\tfor(i=1;i<=n;i++)\n\tfor(j=1;j<=n;j++)map[i][j]=-1;\n\tfor(i=1;i<=n-1;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tmap[x][y]=map[y][x]=z;\n\t}\n\tmaketree(1);\n\tprintf(\"%d\\n\",dp(1,q));\n\treturn 0;\n}\n```\n\n\u9003.........",
        "postTime": 1538054545,
        "uid": 55050,
        "name": "\u6700\u559c\u6b22saber\u4e86",
        "ccfLevel": 0,
        "title": "P2015 \u4e8c\u53c9\u82f9\u679c\u6811"
    },
    {
        "content": "\n### \u9898\u76ee\u63cf\u8ff0\n\n\u6709\u4e00\u68f5\u82f9\u679c\u6811\uff0c\u5982\u679c\u6811\u679d\u6709\u5206\u53c9\uff0c\u4e00\u5b9a\u662f\u52062\u53c9\uff08\u5c31\u662f\u8bf4\u6ca1\u6709\u53ea\u67091\u4e2a\u513f\u5b50\u7684\u7ed3\u70b9\uff09\n\n\u8fd9\u68f5\u6811\u5171\u6709N\u4e2a\u7ed3\u70b9\uff08\u53f6\u5b50\u70b9\u6216\u8005\u6811\u679d\u5206\u53c9\u70b9\uff09\uff0c\u7f16\u53f7\u4e3a1-N,\u6811\u6839\u7f16\u53f7\u4e00\u5b9a\u662f1\u3002\n\n\u6211\u4eec\u7528\u4e00\u6839\u6811\u679d\u4e24\u7aef\u8fde\u63a5\u7684\u7ed3\u70b9\u7684\u7f16\u53f7\u6765\u63cf\u8ff0\u4e00\u6839\u6811\u679d\u7684\u4f4d\u7f6e\u3002\u4e0b\u9762\u662f\u4e00\u9897\u67094\u4e2a\u6811\u679d\u7684\u6811\n\n    2   5\n     \\ / \n      3   4\n       \\ /\n        1\n\n\u73b0\u5728\u8fd9\u9897\u6811\u679d\u6761\u592a\u591a\u4e86\uff0c\u9700\u8981\u526a\u679d\u3002\u4f46\u662f\u4e00\u4e9b\u6811\u679d\u4e0a\u957f\u6709\u82f9\u679c\u3002\n\n\u7ed9\u5b9a\u9700\u8981\u4fdd\u7559\u7684\u6811\u679d\u6570\u91cf\uff0c\u6c42\u51fa\u6700\u591a\u80fd\u7559\u4f4f\u591a\u5c11\u82f9\u679c\u3002\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c1\u884c2\u4e2a\u6570\uff0cN\u548cQ(1<=Q<= N,1<N<=100)\u3002\n\nN\u8868\u793a\u6811\u7684\u7ed3\u70b9\u6570\uff0cQ\u8868\u793a\u8981\u4fdd\u7559\u7684\u6811\u679d\u6570\u91cf\u3002\u63a5\u4e0b\u6765N-1\u884c\u63cf\u8ff0\u6811\u679d\u7684\u4fe1\u606f\u3002\n\n\u6bcf\u884c3\u4e2a\u6574\u6570\uff0c\u524d\u4e24\u4e2a\u662f\u5b83\u8fde\u63a5\u7684\u7ed3\u70b9\u7684\u7f16\u53f7\u3002\u7b2c3\u4e2a\u6570\u662f\u8fd9\u6839\u6811\u679d\u4e0a\u82f9\u679c\u7684\u6570\u91cf\u3002\n\n\u6bcf\u6839\u6811\u679d\u4e0a\u7684\u82f9\u679c\u4e0d\u8d85\u8fc730000\u4e2a\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u4e00\u4e2a\u6570\uff0c\u6700\u591a\u80fd\u7559\u4f4f\u7684\u82f9\u679c\u7684\u6570\u91cf\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n#### \u8f93\u5165\u6837\u4f8b#1\uff1a\n\n5 2\n1 3 1\n1 4 10\n2 3 20\n3 5 20\n\n#### \u8f93\u51fa\u6837\u4f8b#1\uff1a\n\n21\n\n\u5728\u6811\u4e2d\u9009\u62e9\u4e00\u5b9a\u6570\u76ee\u7684\u8fb9\u4f7f\u8fb9\u6743\u548c\u6700\u5927\uff0c\u663e\u7136\u662f\u4e00\u4e2a\u6811\u5f62\u80cc\u5305\uff0c\u4f46\u662f\u56e0\u4e3a\u4e0d\u4f1a\u641e\u8fb9\u7684\u80cc\u5305\uff0c\u6240\u4ee5\u673a\u667a\uff08~~\u50bb\u7f3a~~\uff09\u7684\u6211\u5c31\u82b1\u4e86\u4e00\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u5efa\u4e86\u4e00\u68f5\u65b0\u6811\uff0c\u628a\u8fb9\u90fd\u641e\u6210\u4e86\u70b9\uff0cGG\uff1b\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nconst int maxn=200;\nll n,si[maxn],head1[maxn],head2[maxn],ap[maxn];\nll num1,num2,q,cnt;  \nll f[maxn][maxn];  //f[i][j]\u8868\u793a\u5728\u8282\u70b9\u9009\u62e9j\u4e2a\u8282\u70b9\u7684\u6700\u5927\u503c\nstruct E{\n\tint nxt,to,dis;\n} edge[maxn<<1],edg[maxn<<1];\nvoid add1(int from,int to,int dis)\n{\n\tedge[++num1].to=to;\n\tedge[num1].nxt=head1[from];\n\tedge[num1].dis=dis;\n\thead1[from]=num1;\n}\nvoid add2(int from,int to)\n{\n\tedg[++num2].to=to;\n\tedg[num2].nxt=head2[from];\n\tedg[num2].dis=from;\n\thead2[from]=num2;\n}\nvoid build(int fa,int x,int cur)  //emm~~,sx\n{\n\tfor(int i=head1[x];i;i=edge[i].nxt)\n\t{\n\t\tint xx=edge[i].to;\n\t\tif(xx==fa) continue;\n        add2(cur,++cnt);\n\t\tap[cnt]=edge[i].dis;\n\t\t//cout<<x<<' '<<xx<<' '<<cnt<<endl;\n\t\tbuild(x,xx,cnt);\n\t}\n}\nvoid dfs(int x)\n{\n\tint temp=1;   //\u5b50\u6811\u7684\u5927\u5c0f\n\tf[x][1]=ap[x];  //\u521d\u59cb\u5316\n  for(int i=head2[x];i;i=edg[i].nxt)\n    {\n  \t  int xx=edg[i].to;\n  \t  temp+=dfs(xx);  //dfs\u5411\u4e0b\u6c42\u5b50\u6811\u5927\u5c0f\u5e76\u5c06\u4e0b\u5c42\u5904\u7406\u597d\n  \t  for(int j=temp;j>0;j--)\n  \t   for(int k=0;k<=temp;k++)\n  \t    if(j-k>=1)    //\u679a\u4e3e\u5b50\u6811\u8282\u70b9\u4e24\u4fa7\u5206\u522b\u7684\u8d21\u732e\n  \t     f[x][j]=max(f[x][j],f[x][j-k]+f[xx][k]);\n    }\t\n  \treturn temp;\n}\nint main()\n{\n   scanf(\"%lld%lld\",&n,&q);\n   for(int i=1;i<n;i++)\n   {\n   \t int a,b,c;\n   \t scanf(\"%d%d%d\",&a,&b,&c);\n   \t add1(a,b,c);\n   \t add1(b,a,c);\n   }\n   for(int i=1;i<=n;i++) si[i]=1;\n   cnt=1;  build(0,1,1);\n   dfs(1);\n   cout<<f[1][q+1]<<endl;\n    //q+1\u662f\u56e0\u4e3a\u5c06\u6839\u8282\u70b9\u8bbe\u4e3a\u4e86\u5728\u539f\u56fe\u4e2d\u5e76\u4e0d\u5b58\u5728\u76840->1\u8fd9\u6761\u8fb9\nreturn 0;\n}\n\n```\n",
        "postTime": 1555126908,
        "uid": 105124,
        "name": "\u67f3\u9038\u541b",
        "ccfLevel": 0,
        "title": "\u4e8c\u53c9\u82f9\u679c\u6811"
    },
    {
        "content": "\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u89e3\u91ca\u90fd\u5728\u4ee3\u7801\u4e2d\n```cpp\n#include<bits/stdc++.h>\n#define N 100\nusing namespace std;\nbool check_line[N][N],vis[N];\nint line_apple[N][N],dp[N][N],sum[N];\nint n,q,ans,root_sum;\n\nstruct Node{\n\tint l,r;\n}son[N];\n\nvoid build_tree(int fa)\n{\n\tbool flag=0;//\u6807\u8bb0\u5de6\u513f\u5b50\u8282\u70b9\u662f\u5426\u88ab\u6807\u8bb0\u8fc7\n\tfor(int i=2;i<=n;i++)\n\t{//\u56e0\u4e3a1\u5df2\u7ecf\u88ab\u9ed8\u8ba4\u4e3a\u6839\u8282\u70b9\u4e86\uff0c\u6240\u4ee5\u641c\u7d22\u513f\u5b50\u65f6\u5e94\u8be5\u4ece2\u5f00\u59cb\n\t\tif(!check_line[fa][i]) continue;//\u5982\u679cfa\u8282\u70b9\u5230i\u6ca1\u6709\u8fb9\u76f4\u63a5\u8df3\u8fc7\n\t\tif(vis[i]) continue; //\u5982\u679ci\u53f7\u8282\u70b9\u6807\u8bb0\u8fc7\uff0c\u76f4\u63a5\u8df3\u8fc7\n\t\tvis[i]=true;\n\t\tif(!flag)\n\t\t{//\u5de6\u513f\u5b50\u6ca1\u6709\u63a5\u4e1c\u897f\uff0c\u90a3\u5c31\u5148\u5f80\u5de6\u513f\u5b50\u4e0a\u52a0\u4e0a\u4e1c\u897f\n\t\t\tson[fa].l=i;\n\t\t\tsum[i]=line_apple[fa][i];//\u5c06\u82f9\u679c\u5b58\u5728\u513f\u5b50\u8282\u70b9\u4e0a\n\t\t\tflag=true;\n\t\t}\n\t\telse\n\t\t{//\u5de6\u513f\u5b50\u4e0a\u6709\u4e86\u4e1c\u897f\uff0c\u90a3\u4e48\u53ea\u80fd\u5f80\u53f3\u513f\u5b50\u4e0a\u63a5\n\t\t\tson[fa].r=i;\n\t\t\tsum[i]=line_apple[fa][i];\n\t\t}\n\t\tbuild_tree(i);\n\t}\n}\n\nint dfs(int fa,int k)//\u7236\u4eb2\u8282\u70b9\u548c\u6b64\u7236\u4eb2\u8282\u70b9\u4e0b\u4fdd\u7559\u7684\u8282\u70b9\u6570\n{\n\tif(k==0) return 0;//\u7236\u4eb2\u8282\u70b9\u4e0b\u5982\u679c\u6ca1\u6709\u6570\uff0c\u5219\u8868\u793a\u8fd9\u68f5\u6811\u4e0b\u6ca1\u6709\u82f9\u679c\n\tif(son[fa].l==0&&son[fa].r==0) return sum[fa];\n\t//\u5982\u679c\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u4e0a\u90fd\u6ca1\u6709\u82f9\u679c\uff0c\u90a3\u4e48\u8868\u793a\u53ea\u6709\u7236\u4eb2\u8282\u70b9\u4e0a\u6709\u82f9\u679c\n\tif(dp[fa][k]!=0) return dp[fa][k];//\u8fd9\u53e5\u5fc5\u987b\u8981\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\n\tfor(int i=0;i<k;i++)\n\t{//dp\u627e\u5230\u6700\u5927\u7684\u82f9\u679c\u6570\n\t\tdp[fa][k]=max(dp[fa][k],dfs(son[fa].l,i)+dfs(son[fa].r,k-i-1)+sum[fa]);\n\t}//\u5982\u679c\u4e0b\u9762\u63a5\u7684\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u52a0\u7236\u4eb2\u8282\u70b9\u7684\u82f9\u679c\u66f4\u5927\uff0c\u5219\u66f4\u65b0dp[fa][k]\n\treturn dp[fa][k];\n}\n\nint main()\n{\n\tcin>>n>>q;//n\u4e2a\u8282\u70b9\uff0c\u4fdd\u7559q\u6761\u8fb9\n\troot_sum=q+1;//\u5373\u4fdd\u7559q+1\u4e2a\u8282\u70b9\n\tfor(int i=1;i<=n-1;i++)\n\t{//\u56e0\u4e3a\u4e3a\u4e8c\u53c9\u6570\uff0c\u6240\u4ee5\u53ea\u6709n-1\u6761\u8fb9\n\t\tint u,v,w;\n\t\tcin>>u>>v>>w;\n\t\tline_apple[u][v]=w;//u\u5230v\u6761\u8fb9\u4e0aw\u4e2a\u82f9\u679c\n\t\tcheck_line[u][v]=true;//\u8868\u793au\u5230v\u6709\u82f9\u679c\n\t}//\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\n\tvis[1]=true;//\u56e0\u4e3a\u6839\u8282\u70b9\u9ed8\u8ba4\u4e3a1\uff0c\u6240\u4ee5\u6807\u8bb01\u53f7\u8282\u70b9\n\tbuild_tree(1);//\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5efa\u6811//\u591a\u53c9\u6811\u8f6c\u4e8c\u53c9\u6811\u7684\u601d\u60f3\n\tans=dfs(1,root_sum);//\u5f00\u59cb\u6df1\u641c//\u4ece\u8282\u70b91\u5f00\u59cb\u641c\uff0c\u4fdd\u7559d\u4e2a\u70b9\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n\u672c\u9898\u662f\u7ec3dp\u7684\u4e00\u4e2a\u597d\u9898\uff0c\u6211\u7684\u601d\u60f3\u6700\u4e3b\u8981\u662f\u591a\u53c9\u8f6c\u4e8c\u53c9\n\n\u4e0d\u8fc7\u672c\u9898\u7528\u90bb\u63a5\u8868\u5b58\u56fe\u4f1a\u66f4\u52a0\u4f18\u5316\uff0c\u4f46\u6211\u4e2a\u4eba\u8ba4\u4e3a\u90bb\u63a5\u77e9\u9635\u66f4\u597d\u7406\u89e3",
        "postTime": 1553407727,
        "uid": 103309,
        "name": "HYR2018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u4e0d\u9519\u7684**\u6811\u5f62dp**\u9898\uff0c\u62ff\u6765\u7ed9\u65b0\u624b\u7ec3\u4e60\u662f\u6700\u597d\u4e0d\u8fc7\u7684\u3002\n\n\u8fdb\u5165\u6b63\u9898\uff0c\u8fd9\u9053\u9898\u7684\u8981\u6c42\u5c31\u662f\u8ba9\u6211\u4eec\u5bf9\u6811\u8fdb\u884c\u5220\u8fb9\uff0c\u5728\u4fdd\u8bc1\u6574\u68f5\u6811\u8054\u901a\u7684\u60c5\u51b5\u4e0b\u628a\u6811\u7684\u8fb9\u5220\u5230\u76ee\u6807\u6570\u3002\n\n\u56de\u5fc6\u4e00\u4e0b\u6811\u7684\u7279\u70b9\uff0c\u4e00\u68f5\u6811\u662f\u7531n\u4e2a\u70b9\u548c(n-1)\u6761\u8fb9\u6784\u6210\u7684\uff0c\u9898\u76ee\u4e2d\u8ba9\u6211\u4eec\u4fdd\u7559q\u6761\u8fb9\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8ba9\u6211\u4eec\u4fdd\u7559(q+1)\u4e2a\u70b9\uff0c\u5e76\u4fdd\u8bc1\u8fd9\u4e9b\u70b9\u662f\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u505a\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u628a\u8fb9\u6743\u8f6c\u5230\u70b9\u6743\u4e0a\uff0c\u7136\u540e\u5f00\u59cb\u5220\u70b9\uff0c\u6700\u540e\u7b97\u4fdd\u7559\u7684\u70b9\u7684\u70b9\u6743\u4e4b\u548c\u5c31\u597d\u4e86\uff01\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u9053\u9898\u662f\u6839\u7684\u5b50\u7ed3\u70b9\u4f20\u9012\u4fe1\u606f\u7ed9\u6839\u8282\u70b9\uff0c\u4e4b\u540e\u7531\u6839\u5f97\u51fa\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u9012\u5f52\u65b9\u5411\u5c31\u662f\uff1a**\u53f6\u2192\u6839**\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u53f6\u7ed3\u70b9i\uff0c\u82e5\u8981\u6c42\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559j\u4e2a\u7ed3\u70b9\uff0c\u5b9e\u9645\u4e0a\u5c31\u662fi\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u603b\u5171\u4fdd\u7559(j-1)\u4e2a\u7ed3\u70b9\uff0c\u53ef\u80fd\u662f\u5de6\u5b50\u6811\u4e0d\u4fdd\u7559\u7ed3\u70b9\uff0c\u53f3\u5b50\u6811\u4fdd\u7559(j-1)\u4e2a\u7ed3\u70b9\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u5de6\u5b50\u6811\u4fdd\u75591\u4e2a\u7ed3\u70b9\uff0c\u53f3\u5b50\u6811\u4fdd\u7559(j-2)\u4e2a\u7ed3\u70b9\u2026\u2026\uff0c\u662f\u4e0d\u662f\u770b\u5230\u8fd9\u91cc\u81ea\u5df1\u5c31\u60f3\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e86\uff1f\n\nf[i][j]\u8868\u793a**\u4ee5i\u4e3a\u6839\u7684\u6811\u4e0a\u4fdd\u7559j\u4e2a\u7ed3\u70b9\u7684\u6700\u5927\u6743\u503c\u548c**,ch[i][0]\u8868\u793ai\u7684\u5de6\u513f\u5b50\uff0cch[i][1]\u8868\u793ai\u7684\u53f3\u513f\u5b50\uff0ca[i]\u8868\u793ai\u7684\u70b9\u6743\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\nf[i][j]=max(f[i][j],f[ch[i][0]][k]+f[ch[i][1]][j-k-1]+a[i])(k\u2208[0,j-1])\n\n\u90a3\u4e48\u6211\u8fd9\u91cc\u662f\u4f7f\u7528\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u8be6\u7ec6\u5185\u5bb9\u8bf7\u770b\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,q,head[110],cnt,f[110][110],tot[110],a[110],ch[110][3];\nstruct node\n{\n\tint nxt,v,dis;\n}e[500];\nvoid add(int u,int v,int dis)\n{\n\te[++cnt].nxt=head[u];\n\te[cnt].v=v;\n\te[cnt].dis=dis;\n\thead[u]=cnt;\n}\nvoid build(int u,int fa)\n{\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa)continue;//\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u9632\u6b62\u4ece\u513f\u5b50\u53c8\u904d\u5386\u56de\u7236\u4eb2 \n\t\tch[u][tot[u]++]=v;//\u5b58\u513f\u5b50 \n\t\ta[v]=e[i].dis;//\u8fb9\u6743\u8f6c\u70b9\u6743 \n\t\tbuild(v,u);//\u9012\u5f52\u5efa\u6811 \n\t}\n}\nint mdfs(int i,int j)\n{\n\tif(j==0)return 0;//\u5047\u8bbe\u8981\u4fdd\u75590\u4e2a\u7ed3\u70b9\uff0c\u90a3\u4e48\u80af\u5b9a\u5c31\u662f\u6743\u503c\u548c\u4e3a0\u5566 \n\tif(ch[i][0]==0&&ch[i][1]==0)return a[i];//\u5982\u679c\u8fd9\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u53f6\u5b50\u7ed3\u70b9\u7684\u6743\u503c\u5c31ok \n\tif(f[i][j])return f[i][j];//\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u8bf4\u660ef[i][j]\u5df2\u88ab\u8ba1\u7b97\u8fc7 \n\tfor(int k=0;k<j;k++)\n\t\tf[i][j]=max(f[i][j],mdfs(ch[i][0],k)+mdfs(ch[i][1],j-k-1)+a[i]);//\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \n\treturn f[i][j];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);//\u8981\u6ce8\u610f\u65e0\u5411\u56fe\u8981add\u4e24\u6b21\n\t}//\u8fd9\u91cc\u662f\u7b80\u5355\u7684\u90bb\u63a5\u8868\u5b58\u56fe \n\tbuild(1,0);//\u8fd9\u91cc\u5c31\u662f\u5f00\u59cb\u5efa\u4e8c\u53c9\u6811\u4e86 \n\tprintf(\"%d\\n\",mdfs(1,q+1));//\u8bb0\u5fc6\u5316\u641c\u7d22 \n\treturn 0;\n}\n```\n\u5982\u679c\u770b\u61c2\u4e86\u522b\u5fd8\u4e86\u7ed9\u672c\u849f\u84bb\u70b9\u4e2a\u8d5e~\uff0c\u770b\u4e0d\u61c2\u6216\u9898\u89e3\u6709\u5565\u95ee\u9898\u4e5f\u53ef\u4ee5\u79c1\u4fe1\u8054\u7cfb\u6211~",
        "postTime": 1533025276,
        "uid": 101559,
        "name": "llldx03",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5f88**\u795e\u5947**\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u6837\u4f8b\u8fc7\u4e0d\u4e86\u4e0d\u662f\u5f88\u61c2\uff08\u4f46\u662f\u53ef\u4ee5\u8fc7\uff09\uff0c\u8def\u8fc7\u5927\u4f6c\u5e2e\u6211\u770b\u770b\u3002\n\n\u4e00\u773c\u770b\u51fa\u6811\u5f62dp\n\n\u5148\u5efa\u6811\n\n\u518d\u6df1\u641c\n\nf[i][j] i\u662f\u5f53\u524d\u8282\u70b9\uff0cj\u662f\u8fd8\u5269\u591a\u5c11\u9700\u8981\u7559\u7684\u679d\u5e72\n\n\u628a\u6811\u679d\u4e0a\u7684\u82f9\u679c\u653e\u5728\u8282\u70b9\u4e0a\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u534a\u5206\u949f\u60f3\u51fa\n\n**f[i][j]=max(f[i][j],f[tree[i].l][k]+f[tree[i].r][j-k-1]+tree[i].v);**\n\n**K=0~j-1**\n\n\u4ee3\u7801\u5728\u4e0b\u9762\uff0c\u5927\u5bb6\u81ea\u5df1\u770b\u5427\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\nusing namespace std;\nint N,Q,x,y,z,father[150][3],pingguo[150],f[150][150];\nint dfs(int root,int j)//root\u4e3a\u5f53\u524d\u8282\u70b9\uff0cj\u4e3a\u4f59\u4e0b\u7684\u679d\u5e72 \n{\n    if(j==0)f[root][j]=0;//\u5224\u65ad\u679d\u5e72\u662f\u5426\u7528\u5b8c \n    else\n    if(father[root][0]==0)//\u5224\u65ad\u662f\u5426\u4e3a\u53f6\u8282\u70b9 \n    f[root][j]=pingguo[root];//\u662f\u5c31\u6536\u82f9\u679c \n    else\n    for(int i=0;i<j;i++)\n    {\n            if(f[father[root][1]][i]==0)//\u5224\u65ad\u5de6\u5b50\u6811\u6709\u6ca1\u6709\u503c \n            dfs(father[root][1],i);\n            if(f[father[root][2]][j-i-1]==0)//\u5224\u65ad\u53f3\u5b57\u6570\u6709\u6ca1\u6709\u503c \n            dfs(father[root][2],j-i-1);\n            f[root][j]=max(f[root][j],f[father[root][1]][i]+f[father[root][2]][j-i-1]+pingguo[root]);//\u8fd9\u4e2a\u8010\u5fc3\u70b9\u770b\u5427\uff0c\u6211\u5c31\u4e0dbb\u4e86 \n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&N,&Q);\n    for(int i=1;i<=N-1;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z); \n        father[x][0]++;//0\u5217\u5b58\u6709\u51e0\u4e2a\u5b50\u8282\u70b9 \n        father[x][father[x][0]]=y;//\u6839\u636e\u6709\u51e0\u4e2a\u5b50\u8282\u70b9\u5b58\u5b50\u8282\u70b9\u7f16\u53f7 \n        pingguo[y]=z;//\u5b58\u82f9\u679c\u5728\u5b50\u8282\u70b9\u4e0a \n    }\n    dfs(1,Q+1);//Q+1\u5f88\u7cbe\u9ad3 \n    printf(\"%d\",f[1][Q+1]);\n    return 0;\n}\n```",
        "postTime": 1509271930,
        "uid": 46702,
        "name": "AnChun999",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "#### **\u5148\u6765\u5206\u6790\u9898\u76ee**\n\n\u7531\u9898\u610f\u53ef\u77e5\uff0c\u9700\u8981\u4fdd\u7559\u7684\u6811\u679d\u4e3aQ\uff0c\u6240\u4ee5\u7559\u4e0b\u7684\u70b9\u4e3aQ+1,\u6811\u6839\u5fc5\u987b\u4fdd\u7559\uff0c\u53ef\u4ee5\u52063\u79cd\u60c5\u51b5\u8ba8\u8bba\u4fdd\u7559\u82f9\u679c\u7684\u6700\u5927\u4fdd\u7559\u6570\u91cf\uff1a\n\n1\uff0c\u6811\u6839\u7684\u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u53f3\u5b50\u6811\u4fdd\u7559Q\u4e2a\u70b9\u3002\n\n2\uff0c\u6811\u6839\u7684\u53f3\u5b50\u6811\u4e3a\u7a7a\uff0c\u5de6\u5b50\u6811\u4fdd\u7559Q\u4e2a\u70b9\u3002\n\n3\uff0c\u6811\u6839\u7684\u5de6\u53f3\u5b50\u6811\u90fd\u6709\u70b9\uff0c\u8bbe\u5de6\u5b50\u6811\u53d6k\u4e2a\u70b9\uff0c\u5219\u53f3\u5b50\u6811\u53d6Q-k\u4e2a\u70b9\u3002\n\n\u8bbe\u6811\u6839\u4e3ai\uff0c\u6811\u6839\u7684\u5de6\u513f\u5b50\u4e3al[i]\uff0c\u53f3\u513f\u5b50\u4e3ar[i]\uff0c\u6b64\u9898\u6709\u660e\u663e\u7684\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\uff0c\u6bcf\u4e2a\u95ee\u9898\u90fd\u53ea\u4e0e\u5de6\u53f3\u513f\u5b50\u6709\u5173\uff0c\u4e0e\u5b59\u5b50\u65e0\u5173\uff0c\u5e76\u4e14\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u539f\u5219\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\n\n\u6211\u4eec\u8bbef[i][j]\u8868\u793a\u4ee5i\u4e3a\u6839\u8282\u70b9\u7684\u6811\u4e0a\u4fdd\u7559j\u4e2a\u70b9\u7684\u6700\u5927\u6743\u503c\u3002l[i]\uff0cr[i]\uff0c\u5206\u522b\u5b58i\u7684\u5de6\u53f3\u513f\u5b50\u3002\n\n\n\u53ef\u5f97\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a:\n\nf[i][j]=max(f[i][j],f[l[i]][k]+f[r[i]][j-k-1]+a[i])\n\n\u8d34\u4ee3\u7801\n\n```c\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<cstdio>\nusing namespace std;\n#define N 105\nint f[N][N],mapp[N][N],r[N],l[N],n,m,q;\nint x,y,z;\nint a[N];\n\ninline void maketree(int v)\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(mapp[v][i]>=0)\n\t\t{\n\t\t\tl[v]=i;a[i]=mapp[v][i];\n\t\t\tmapp[v][i]=-1;\n\t\t\tmapp[i][v]=-1;\n\t\t\tmaketree(i);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(mapp[v][i]>=0)\n\t\t{\n\t\t\tr[v]=i;a[i]=mapp[v][i];\n\t\t\tmapp[i][v]=mapp[v][i]=-1;\n\t\t\tmaketree(i);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\ninline int dp(int i,int j)\n{\n\tif(j==0)return 0;\n\tif(l[i]==0&&r[i]==0)return a[i];\n\tif(f[i][j]>0)return f[i][j];\n\tfor(int k=0;k<=j-1;k++)\n\tf[i][j]=max(f[i][j],dp(l[i],k)+dp(r[i],j-k-1)+a[i]);\n\treturn f[i][j];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);q++;\n\tmemset(mapp,-1,sizeof(mapp));\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tmapp[x][y]=z;mapp[y][x]=z;\n\t}\n\tmaketree(1);\n\tprintf(\"%d\\n\",dp(1,q));\n\treturn 0;\n}\n```\n",
        "postTime": 1565249205,
        "uid": 111294,
        "name": "xcyy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u840c\u65b0\u5199\u7684\u9898\u89e3\uff0c\u5e94\u8be5\u5bf9\u840c\u65b0\u66f4\u53cb\u597d\u5427\u3002~~\u6bd5\u7adf\u9ad8\u7aef\u64cd\u4f5c\u6211\u4e5f\u5b66\u4e0d\u6765~~\n\n\u8fd9\u4e00\u9053\u9898\u975e\u5e38\u9002\u5408\u7406\u89e3\u6811\u5f62DP+\u80cc\u5305\u8fd9\u4e00\u7c7b\u578b\u7684\u9898\uff0c~~\u56e0\u4e3a\u849f\u84bb\u7684\u6211\u5728\u8fd9\u91cc\u5361\u4e86\u4e09\u5929~~\n\n### \u524d\u7f6e\u77e5\u8bc6\uff1a\u90bb\u63a5\u8868\n\n\u6211\u5f53\u521d\u56fe\u7701\u4e8b\u6ca1\u5b66\u90bb\u63a5\u8868\uff0c\u7ed3\u679c\u5728\u8fd9\u91cc\u4ed8\u51fa\u4e86\u8840\u7684\u4ee3\u4ef7\u3002\u3002\u3002**\u90bb\u63a5\u8868\u9002\u5408\u7528\u7ed3\u6784\u4f53\u8868\u793a\uff0c\u56e0\u4e3a\u5b83\u5c31\u662f\u7531\u4e00\u4e2a\u4f5c\u7528\u7b49\u540c\u4e8e\u6307\u9488\u7684\u6570\u7ec4\u548c\u8bb8\u591a\u4ee3\u8868\u8fb9\uff08\u70b9\uff09\u7684\u8282\u70b9\u6784\u6210\u7684\u3002\uff08\u5173\u952e\u662f\u8fd9\u6837\u5199\u4e0d\u5bb9\u6613\u8ff7\uff09\u5c31\u50cf\u8fd9\u6837\uff1a**\n\n```cpp\nstruct mmp\t\t//\u76f8\u5f53\u4e8e\u4e00\u4e2a\u8282\u70b9\n{\n\tint xnext;\t//\u5144\u5f1f\u8282\u70b9\u7684\u4e0b\u6807\uff08\u5c31\u662f\u5144\u5f1f\u8282\u70b9\u7684\u7ed3\u6784\u4f53\u7684\u4e0b\u6807\uff09\t\n\tint to;\t\t//\u8fb9\u6307\u5411\u7684\u7ec8\u70b9\uff08\u56fe\u4e2d\u7684\u771f\u5b9e\u70b9\uff09\n\tint val;\t//\u8fb9\u6743\n}hp[202];\t\t//\u5b9a\u4e49\u4e86202\u4e2a\u8282\u70b9\uff0c\u4e0b\u68070~201\nint xfirst[202];\t//xfirst[\u771f\u5b9e\u70b9\u7f16\u53f7]=\u5b50\u8282\u70b9\u7684\u7ed3\u6784\u4f53\u7684\u4e0b\u6807\n```\n\u65e2\u7136\u662f\u65e0\u5411\u56fe\uff0c\u90a3\u5c31\u8981\u5b58\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9\uff0c\u6211\u662f\u8fd9\u6837\u5b58\u7684\uff1a\n\n```cpp\nscanf(\"%d%d\",&z.n,&z.q);\nfor(int k=1;k<z.n;k++)\n{\n\tint a,b,c,i=2*k;\n\tscanf(\"%d%d%d\",&a,&b,&c);\n\thp[i].xnext=xfirst[a];\n\txfirst[a]=i;\n\thp[i].to=b;\n\thp[i].val=c;\n\ti++;\t\t\t//i++\u540e\u4e0a\u4e0b\u51e0\u4e4e\u4e0d\u53d8\uff0c\u4e0d\u4ea6\u8bf4\u4e4e\uff1f\n\thp[i].xnext=xfirst[b];\n\txfirst[b]=i;\n\thp[i].to=a;\n\thp[i].val=c;\n}\n```\n\n\u4ece\u8f93\u5165\u6211\u4eec\u4e5f\u80fd\u770b\u5230\uff0chp[i]\u4e2d\u8fd9\u4e2ai\u5c31\u662f\u4e00\u4e2a**\u7528\u6765\u5b9a\u4f4d\u7684**\u4e0b\u6807\uff0c\u800cxfirst\u6570\u7ec4\u548chp[i].xnext\u5219\u662f\u5206\u522b\u63d0\u4f9b**\u5b69\u5b50\u4e0b\u6807**\u548c**\u5144\u5f1f\u4e0b\u6807**\u7684\u5de5\u5177\uff0c\u4e00\u4e2a\u4e32\u4e00\u4e2a\u5730\u628a\u4e00\u4e2a\u70b9\u6240\u6709\u7684\u5b69\u5b50\u5168\u90fd\u8054\u7cfb\u4e86\u8d77\u6765\uff0c\u4e5f\u6b63\u662f\u8fd9\u6837\uff0c\u904d\u5386\u7684\u65f6\u5019\u5c31\u6bd4\u8f83\u8212\u670d\u4e86\uff1a\n\n```cpp\nfor(int i=xfirst[t];i;i=hp[i].xnext)\n//i\u662f\u5b58\u50a8\u5b50\u8282\u70b9\u7684\u7ed3\u6784\u4f53\u7684\u4e0b\u6807\uff0c\u4e00\u4e2a\u4e32\u4e00\u4e2a\u76f4\u5230\u6ca1\u6709\uff0c\u4e00\u4e2a\u70b9\u7684\u5b50\u8282\u70b9\u4e5f\u5c31\u904d\u5386\u5b8c\u4e86\u3002\n```\n\n### \u89e3\u51b3\u95ee\u9898\uff1a\n\n\uff08\u8fd9\u6bb5\u8bdd\u5168\u662f\u81ea\u5df1\u7406\u89e3\uff09\nDP\u7684\u4e09\u8981\u7d20\u662f\u4ec0\u4e48\uff1f\u9636\u6bb5\u3001\u72b6\u6001\u3001\u51b3\u7b56\uff0c\u4ece\u5927\u5230\u5c0f\u4f9d\u6b21\u5faa\u73af\u3002\u6811\u4e0aDP\u9636\u6bb5\u57fa\u672c\u662f\u904d\u5386\u5b50\u6811\uff08\u5927\u5c0f\u7531\u5c0f\u5230\u5927\uff09\uff0c\u72b6\u6001\u5f80\u5f80\u662f\u4f60\u7684\u9009\u62e9\u9020\u6210\u7684\u5f71\u54cd\uff0c\u51b3\u7b56\u5219\u662f\u4f60\u7684\u9009\u62e9\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\uff1a\u5f53\u6240\u6709\u5b50\u8282\u70b9\u5728\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u503c\u90fd\u786e\u5b9a\u7684\u65f6\u5019\uff0c\u6839\u8282\u70b9\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u503c\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002\n\n\u7b80\u800c\u8a00\u4e4b\uff1a\u5b50\u8282\u70b9\u6240\u6709\u60c5\u51b5\uff08\u72b6\u6001\uff09\u5b8c\u5168\u5df2\u77e5\u65f6\u6839\u8282\u70b9\u7684\u72b6\u6001\u5c31\u53ef\u4ee5\u63a8\u51fa\u6765\u4e86\u3002\u6240\u4ee5\u8981**\u540e\u5e8f\u904d\u5386**\u5b83\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid dfs(int t)\t\t//\u6839\u8282\u70b9t\u5373\u662f\u9636\u6bb5\u6807\u5fd7\n{\n\t//f[i][j]=\u4ee5\u7b2ci\u4e2a\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u53d6j\u4e2a\u65f6\u7684\u6700\u5927\u503c \n\tfor(int i=xfirst[t];i;i=hp[i].xnext)\n\t{\n\t\tif(visited[hp[i].to])continue;\t//\u8fd9\u662f\u7528\u6765\u9012\u5f52\u7684\uff08\u5224\u91cd\uff09\n\t\tvisited[hp[i].to]=1;\t\t//\u8fd9\u4e5f\u662f\u7528\u6765\u9012\u5f52\u7684\uff08\u6807\u8bb0\uff0c\u5df2\u904d\u5386\uff09 \n\t\tdfs(hp[i].to);\t\t\t//\u8fd9\u5f53\u7136\u662f\u7528\u6765\u9012\u5f52\u7684 \n\t\t//j\u679a\u4e3e\u6839\u8282\u70b9\u53ef\u80fd\u4f1a\u5f97\u5230\u7684\u6811\u679d\u7684\u6570\u91cf\n\t\t//j==0\u65f6f[t][j]\u5fc5\u4e3a\u96f6\uff0c\u4e0d\u5fc5\u679a\u4e3e \n\t\tfor(int j=z.n;j>0;j--) \n\t\t{\n\t\t\t//k\u7528\u6765\u679a\u4e3e\uff08\u4e0a\u4e00\u68f5\uff09\u5b50\u6811\u53ef\u80fd\u4f1a\u5f97\u5230\u7684\u6811\u679d\u7684\u6570\u91cf\n\t\t\t//k==j-1\u65f6\u5f53\u524d\u5b50\u6811\u4ecd\u7136\u83b7\u5f97\u4e86\u8fde\u5411\u6839\u8282\u70b9\u7684\u4e00\u4e2a\u6811\u679d\n\t\t\t//\u800c\u201c\u629b\u5f03\u201d\u5f53\u524d\u5b50\u6811\u7684\u72b6\u6001\u5df2\u7ecf\u5305\u542b\u5728\u521d\u59cb\u7684f[t][j]\u4e2d\u4e86 \n\t\t\tfor(int k=j-1;k>=0;k--)\n\t\t\t{\n\t\t\t\tf[t][j]=max(f[t][j],f[t][k]+f[hp[i].to][j-k-1]+hp[i].val);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\nf[t]\u6570\u7ec4\u5305\u542b\u4e86t\u4e3a\u6839\u65f6\u5df2\u904d\u5386\u5b50\u8282\u70b9\u6240\u80fd\u63d0\u4f9b\u7684\u6700\u5927\u503c\uff0c\u6bcf\u4e2a\u5b50\u8282\u70b9\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6709\u4e00\u5806\u72b6\u6001\u7684\u7269\u54c1\uff0c\u6309\u716701\u80cc\u5305\u7406\u89e3\u5373\u53ef\u3002\u7528\u6837\u4f8b\u6d4b\u8bd5\u8fc7\uff0cj,k\u7684\u904d\u5386\u987a\u5e8f\u597d\u50cf\u6ca1\u6709\u5f71\u54cd\u3002\u3002\u3002\n\n\u5efa\u8bae\u5927\u5bb6\u591a\u5199\u5199\u9898\u89e3\u3001\u535a\u5ba2\uff0c\u52a0\u6df1\u8bb0\u5fc6\u548c\u7406\u89e3\u3002~~\u7136\u800c\u6211\u672c\u8eab\u5c31\u5bf9\u8fd9\u9053A\u4e86\u4e09\u5929\u624d\u8fc7\u7684\u9898\u5370\u8c61\u6df1\u523b~~\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct xyem\n{\n\tint n,q;\n}z;\nstruct mmp\t\t\t\t//\u76f8\u5f53\u4e8e\u4e00\u4e2a\u8282\u70b9 \n{\n\tint xnext;\t\t//\u7f16\u7801\u7684\u4e0b\u4e00\u4e2a\t\n\tint to;\t\t\t//\u8fb9\u6307\u5411\u7684\u7ec8\u70b9\n\tint val;\t\t//\u8fb9\u6743\n}hp[202];\nint xfirst[202];\nint visited[101];\nint f[202][202];\nvoid dfs(int t)\n{\n\t//f[i][j]=\u4ee5\u7b2ci\u4e2a\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u53d6j\u4e2a\u65f6\u7684\u6700\u5927\u503c \n\tfor(int i=xfirst[t];i;i=hp[i].xnext)\n\t{\n\t\tif(visited[hp[i].to])continue;\t//\u8fd9\u662f\u7528\u6765\u9012\u5f52\u7684 \n\t\tvisited[hp[i].to]=1;\t\t\t//\u8fd9\u4e5f\u662f\u7528\u6765\u9012\u5f52\u7684 \n\t\tdfs(hp[i].to);\t\t\t\t\t//\u8fd9\u5f53\u7136\u662f\u7528\u6765\u9012\u5f52\u7684 \n\t\t//j\u679a\u4e3e\u6839\u8282\u70b9\u53ef\u80fd\u4f1a\u5f97\u5230\u7684\u6811\u679d\u7684\u6570\u91cf\n\t\t//j==0\u65f6f[t][j]\u5fc5\u4e3a\u96f6\uff0c\u4e0d\u5fc5\u679a\u4e3e \n\t\tfor(int j=z.n;j>0;j--) \n\t\t{\n\t\t\t//k\u7528\u6765\u679a\u4e3e\uff08\u4e0a\u4e00\u68f5\uff09\u5b50\u6811\u53ef\u80fd\u4f1a\u5f97\u5230\u7684\u6811\u679d\u7684\u6570\u91cf\n\t\t\t//k==-1\u65f6\u690e\u9f3b\u575d\u6811\u4ecd\u7136\u83b7\u5f97\u4e86\u8fde\u5411\u6839\u8282\u70b9\u7684\u4e00\u4e2a\u6811\u679d\n\t\t\t//\u800c\u201c\u629b\u5f03\u201d\u5f53\u524d\u5b50\u6811\u7684\u72b6\u6001\u5df2\u7ecf\u5305\u542b\u5728\u521d\u59cb\u7684f[t][j]\u4e2d\u4e86 \n\t\t\tfor(int k=j-1;k>=0;k--)\n\t\t\t{\n\t\t\t\tf[t][j]=max(f[t][j],f[t][k]+f[hp[i].to][j-k-1]+hp[i].val);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&z.n,&z.q);\n\tfor(int k=1;k<z.n;k++)\n\t{\n\t\tint a,b,c,i=2*k;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\thp[i].xnext=xfirst[a];\n\t\txfirst[a]=i;\n\t\thp[i].to=b;\n\t\thp[i].val=c;\n\t\ti++;\n\t\thp[i].xnext=xfirst[b];\n\t\txfirst[b]=i;\n\t\thp[i].to=a;\n\t\thp[i].val=c;\n\t}\n\tvisited[1]=1;\n\tdfs(1);\n\tprintf(\"%d\",f[1][z.q]);\n\treturn 0;\n}\n```\n",
        "postTime": 1563617057,
        "uid": 207353,
        "name": "\u5c0f\u6837\u513f\u9e23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u5c31\u6309\u7167\u4e00\u672c\u901a\u4e0a\u9762\u6765\uff0c\u5f88\u5bb9\u6613\u61c2\u7684\n\n\u9700\u8981\u4fdd\u7559Q\u4e2a\u6811\u679d\uff0c\u5219\u4fdd\u7559j=Q+1\u4e2a\u8282\u70b9\n\n\u5206\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1.\u6811\u6839\u7684\u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u5168\u90e8\u4fdd\u7559\u53f3\u5b50\u6811\uff0c\u5219\u5de6\u5b50\u6811\u4e0d\u8fde\u6839\u5219\u4fdd\u7559j-1\u4e2a\u8282\u70b9\n\n2.\u6811\u6839\u7684\u53f3\u5b50\u6811\u4e3a\u7a7a\uff0c\u5168\u90e8\u4fdd\u7559\u5de6\u5b50\u6811\uff0c\u5219\u53f3\u5b50\u6811\u4e0d\u8fde\u6839\u5219\u4fdd\u7559j-1\u4e2a\u8282\u70b9\n\n3.\u4e24\u68f5\u5b50\u6811\u90fd\u4e0d\u4e3a\u7a7a\uff0c\u8bbe\u5de6\u5b50\u6811\u4fdd\u7559k\u4e2a\u70b9\uff0c\u53f3\u5b50\u6811\u5219\u4fdd\u7559j-k-1\u4e2a\u70b9\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a\nf[i][j]=max{f[l[i]][k]+f[r[i]][j-k-1]+a[i]}\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(register int i=(a);i<=(b);i++)\n#define don(i,a,b) for(register int i=(a);i>=(b);i--)\n#define ll long long\nusing namespace std;\nconst int maxn=1e2+10;\nconst int maxm=1e3+10;\nint n,q;\nint mapp[maxm][maxm],f[maxm][maxn],a[maxn],r[maxn],l[maxn];\n\ntemplate <class t> inline void read(t &x)\n{\n\tint f=1;x=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=10*x+ch-'0';ch=getchar();}\n\tx*=f;\n}\n\ntemplate <class t> inline void write(t x) \n{\n\tif(x<0) {putchar('-');x=~x+1;}\n\tif(x>9) write(x/10);\n\tputchar(x%10+48);\n}\n/*--------------------------------------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------------------------------------*/\n\nvoid biludtree(int root)\n{\n\trep(i,1,n) {\n\t\tif(mapp[root][i]>=0) {//\u5efa\u5de6\u5b50\u6811\n\t\t\tl[root]=i;\n\t\t\ta[i]=mapp[root][i];\n\t\t\tmapp[root][i]=mapp[i][root]=-1;//\u6253\u6807\u8bb0\n\t\t\tbiludtree(i);\n\t\t\tbreak;\n\t\t}\n\t}\n\trep(i,1,n) {\n\t\tif(mapp[root][i]>=0) {//\u5efa\u53f3\u5b50\u6811\n\t\t\tr[root]=i;\n\t\t\ta[i]=mapp[root][i];\n\t\t\tmapp[root][i]=mapp[i][root]=-1;\n\t\t\tbiludtree(i);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nvoid readdata()\n{\n\tmemset(f,false,sizeof(f));\n\tmemset(mapp,-1,sizeof(mapp));\n\tread(n),read(q);\n\tq++;\n\trep(i,1,n-1) {\n\t\tint x,y,z;\n\t\tread(x),read(y),read(z);\n\t\tmapp[x][y]=z;\n\t\tmapp[y][x]=z;\n\t}\n}\n\ninline int dp(int i,int j)\n{\n\tif(j==0) return 0;\n\tif(l[i]==0 && r[i]==0) return a[i];\n\tif(f[i][j]>0) return f[i][j];//\u8bb0\u5fc6\u5316\u641c\u7d22\n\trep(k,0,j-1) {\n\t\tf[i][j]=max(f[i][j],dp(l[i],k)+dp(r[i],j-k-1)+a[i]);\n\t}\n\treturn f[i][j];\n}\n\nvoid work()\n{\n\tbiludtree(1);\n\tint ans=dp(1,q);\n\twrite(ans);\n\tprintf(\"\\n\");\n}\n\nint main()\n{\n\t//freopen(\"input.txt\",\"r\",stdin);\n\treaddata();\n\twork();\n\treturn 0;\n}\n```\n\u6c42\u8fc7\uff01\uff01\uff01\uff01\uff01~~\u867d\u7136\u662f\u770b\u7684\u4e00\u672c\u901a~~\n",
        "postTime": 1558691461,
        "uid": 109416,
        "name": "\u98ce\u8bf4\u6211\u6d3b\u4e86",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "## \u6811\u4e0a\u80cc\u5305\n\u4e00\u9053\u5f88**\u663e\u7136**\u7684\u6811\u4e0a\u80cc\u5305\uff1f**\uff08\u6ca1\u770b\u51fa\u6765\uff09**\n\n\u4f9d\u636e\u5927\u6982\u662f\u53ef\u4ee5\u628a\u4fdd\u7559\u7684\u6811\u679d\u6570\u770b\u4f5c\u4f53\u79ef\uff0c\u628a\u82f9\u679c\u7684\u6570\u91cf\u770b\u4f5c\u4ef7\u503c\u3002\n\n\u7531\u8d2a\u5fc3\u53ef\u77e5\u5982\u679c\u4fdd\u7559\u4e86\u5b50\u6811\u4e0a\u7684\u8fb9\uff0c\u90a3\u4e48\u7236\u8282\u70b9\u5230\u8be5\u5b50\u6811\u7684\u8fb9\u4e5f\u4f1a\u88ab\u4fdd\u7559\u3002\u800c\u82e5\u7236\u8282\u70b9\u5230\u8be5\u5b50\u6811\u6ca1\u6709\u8fb9\uff0cf\u503c\u4e3a0\uff0c\u5c31\u662f\u521d\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5904\u7406\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u4fdd\u7559\u7236\u8282\u70b9\u5230\u8be5\u5b50\u6811\u7684\u8fb9\n\n\u7531\u4e8e\u662f01\u80cc\u5305\uff0c\u5012\u53d9\u679a\u4e3e\u5373\u53ef\n\n\u9898\u76ee\u5982\u4e0b\uff1a\n[\u4e8c\u53c9\u82f9\u679c\u6811](https://www.luogu.org/problemnew/show/P2015)\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\n#define go(i,a,b) for(int i=(a);i<=(b);++(i))\n#define com(i,a,b) for(int i=(a);i>=(b);--(i))\n#define mem(a,b) memset((a),(b),sizeof(a))\n#define inf 0x3f3f3f3f\n#define fin freopen(\"input.txt\",\"r\",stdin)\n#define fout freopen(\"output.txt\",\"w\",stdout)\ntypedef long long ll;\nconst int maxn=110;\nint cnt=0,f[maxn][maxn],head[maxn],siz[maxn],q;\nstruct edge{\n    int nxt,v,w;\n}e[maxn*2];\nvoid add(int u,int v,int w){\n    e[cnt]=(edge){head[u],v,w};\n    head[u]=cnt++;\n}\nvoid read(int &x){\n    int f=1;char s=getchar();x=0;\n    while(!isdigit(s)){\n    \tif(s=='-') f=-1;s=getchar();\n    }\n    while(isdigit(s)){\n   \t\tx=(x<<3)+(x<<1)+s-'0';s=getchar();\n    }\n    x*=f;\n}//\u8bfb\u5165\u4f18\u5316\n\nvoid dp(int u,int fa){\n    for(int i=head[u];i+1;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;if(v==fa) continue;\n        dp(v,u);\n        siz[u]+=siz[v]+1;\n        for(int j=min(q,siz[u]);j;j--){\n        \tfor(int k=min(siz[v],j-1);k>=0;k--){\n        \t\tf[u][j]=max(f[u][j],f[u][j-k-1]+f[v][k]+w);\n            }\n        }\n    }\n    return;\n}\n\nsigned main()\n{\n    //fin;\n    int n;read(n),read(q);\n    mem(head,-1);\n    int x,y,w;\n    go(i,1,n-1){\n        read(x),read(y),read(w);\n        add(x,y,w),add(y,x,w);\n    }\n    dp(1,0);\n    printf(\"%d\",f[1][q]);\n    return 0;\n}\n```\n",
        "postTime": 1558531366,
        "uid": 109434,
        "name": "\u98ce\u968f\u9010\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u663e\u7136\u662f\u4e00\u9053\u6811\u5f62DP\u7684\u9898\u2026\u2026\n\n\u5f53\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u7ed3\u70b9\u540e\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1\u3001\u8fd9\u662f\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u30022\u3001\u8fd9\u662f\u4e00\u4e2a\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u7236\u4eb2\u7ed3\u70b9\u3002\n\n**\u6211\u4eec\u8003\u8651\u4ee5\u8be5\u7ed3\u70b9\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5728\u4fdd\u7559\u6811\u679d\u6570\u91cf\u4e00\u5b9a\u65f6\uff0c\u80fd\u4fdd\u7559\u4e0b\u6765\u7684\u82f9\u679c\u6700\u591a\u6709\u591a\u5c11\u3002**\n\n\u5bf9\u4e8e\u60c5\u51b51\uff0c\u663e\u7136\u8be5\u503c\u4e3a0\uff08\u6ca1\u6709\u6811\u679d\uff09\u3002\n\n\u5bf9\u4e8e\u60c5\u51b52\uff0c\u6211\u4eec\u5206\u4e09\u79cd\u9009\u62e9\uff1a\n\n\t1\u3001\u53ea\u9009\u62e9\u5de6\u5b50\u6811\n    2\u3001\u53ea\u9009\u62e9\u53f3\u5b50\u6811\n    3\u3001\u65e2\u9009\u62e9\u5de6\u5b50\u6811\u53c8\u9009\u62e9\u53f3\u5b50\u6811\n\n\u5f53\u7136\uff0c\u5728\u9009\u62e9\u5b50\u6811\u7684\u540c\u65f6\uff0c**\u6211\u4eec\u5fc5\u987b\u9009\u62e9\u8be5\u7ed3\u70b9\u5230\u8be5\u5b50\u7ed3\u70b9\u7684\u6811\u679d**\u3002\n\n**\u6211\u4eec\u5b9a\u4e49dp[ i ][ j ]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u4fdd\u7559j\u4e2a\u6811\u679d\uff0c\u80fd\u4fdd\u7559\u591a\u5c11\u82f9\u679c\u3002**\n\n\u90a3\u4e48\uff0c\n\n\tif(\u8fd9\u662f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9)dp[i][j]=0;\n    else dp[i][j]=min{\n    \tdp[i\u7684\u5de6\u513f\u5b50][j-1]+\u5230i\u7684\u5de6\u513f\u5b50\u7684\u6811\u679d\u7684\u82f9\u679c\u6570,\n    \tdp[i\u7684\u53f3\u513f\u5b50][j-1]+\u5230i\u7684\u53f3\u513f\u5b50\u7684\u6811\u679d\u7684\u82f9\u679c\u6570,\n    \tdp[i\u7684\u5de6\u513f\u5b50][k]+dp[i\u7684\u53f3\u513f\u5b50][j-2-k]\n    \t+\u5230i\u7684\u5de6\u513f\u5b50\u7684\u6811\u679d\u7684\u82f9\u679c\u6570+\u5230i\u7684\u53f3\u513f\u5b50\u7684\u6811\u679d\u7684\u82f9\u679c\u6570\n    \t(0<=k<=j-2)\n    }\n\n\u8fd9\u9053\u9898\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\n\n1\u3001\u8bfb\u5165\u8fb9\uff0c\u5efa\u6811\u3002\n\n2\u3001\u4ece1\u5f00\u59cb\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n\uff08\u7ec6\u8282\u770b\u4ee3\u7801\uff09\n\nCode:\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\ninline void re(int &x)\n{\n\tx=0;bool flag=false;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tflag= c=='-';\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<1)+(x<<3)+(c^'0');\n\t\tc=getchar();\n\t}\n\tif(flag)x=-x;\n\treturn ;\n}\nstruct Edge{\n\tint v,c,nxt;\n}e[220];int tot;\nint first[220];\nstruct Node{\n\tint l,r;\n\tint lc,rc;\n\tbool is_fa;\n\tint siz;\n}a[110];\nint n,q;\nvoid build(int u,int v,int c)\n{\n\te[++tot]=(Edge){v,c,first[u]};\n\tfirst[u]=tot;\n\treturn ;\n}\nbool book[110];\nvoid build_a_tree(int k)//build a tree\n{\n\tbook[k]=true;\n\tfor(int i=first[k];i;i=e[i].nxt)\n\t\tif(!book[e[i].v]){\n\t\t\ta[k].is_fa=true;\n\t\t\tif(!a[k].l)a[k].l=e[i].v,a[k].lc=e[i].c;\n\t\t\telse a[k].r=e[i].v,a[k].rc=e[i].c;\n\t\t\tbuild_a_tree(e[i].v);\n\t\t\ta[k].siz+=a[e[i].v].siz;\n\t\t}\n\ta[k].siz++;\n\treturn ;\n}\nint dp[110][110];\nint dfs(int k,int m)\n{\n\tif(m==0)return 0;\n\tif(dp[k][m])return dp[k][m];\n\tif(!a[k].is_fa)return 0;//leaf\n\tdp[k][m]=max(dfs(a[k].l,m-1)+a[k].lc,dfs(a[k].r,m-1)+a[k].rc);//1 2\n\tfor(int i=0;i<=m-2;i++)\n\t\tdp[k][m]=max(dp[k][m],dfs(a[k].l,i)+a[k].lc+dfs(a[k].r,m-2-i)+a[k].rc);//3\n\treturn dp[k][m];\n}\nint main()\n{\n\tre(n);re(q);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v,c;\n\t\tre(u);re(v);re(c);\n\t\tbuild(u,v,c);\n\t\tbuild(v,u,c);\n\t}\n\tbuild_a_tree(1);//build the tree\n\tprintf(\"%d\\n\",dfs(1,q));\n\treturn 0;\n}\n```\n\u7136\u540e\u5c31~~\u8f7b\u677e~~AC\u4e86\n\n\u65f6\u7a7a\u590d\u6742\u5ea6...\n\nO(n*q^2) O(n*q)\n\n**\u5982\u679c\u4e0d\u5bf9\uff0c\u8bf7\u5728\u8ba8\u8bba\u533a\u53d1\u5e16\u2026\u2026**",
        "postTime": 1527226743,
        "uid": 54475,
        "name": "\u732a\u8111\u5b50",
        "ccfLevel": 10,
        "title": "P2015 \u4e8c\u53c9\u82f9\u679c\u6811"
    },
    {
        "content": "```cpp\n//\u6811\u5f62DP\n#include<cstdio>\n#include<cstring>\nint next[5001],pre[5001],last[5001],apple[5001],dp[5001][5001],n,m,tot=0;\n```\n/\\*\ndp[i][j]\u8868\u793a\u8282\u70b9i\u4fdd\u7559j\u4e2a\u679d\u6761\u7684\u6240\u5269\u82f9\u679c\u6700\u5927\u503c\n\napple[i]\u8868\u793a\u7b2ci\u6761\u8fb9\u4e0a\u7684\u82f9\u679c\u6570\n\nnext,pre,last\u662f\u7528\u6765\u5efa\u8fb9\u7684\u6570\u7ec4\n\ntot\u6765\u7edf\u8ba1\u8fb9\u7684\u5e8f\u53f7\n\n\\*/\n```cpp\nint minn(int x,int y)\n{\n    return x<y?x:y;\n}\nint maxx(int x,int y)\n{\n    return x>y?x:y;\n}\nvoid jl(int u,int v,int w)\n{\n    tot++;\n    next[tot]=v;\n    pre[tot]=last[u];\n    last[u]=tot;\n    apple[tot]=w;\n}\nint dfs(int u,int father)\n{\n    int ans=0;//ans\u8868\u793au\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6570\u76ee\n    for(int i=last[u];i!=0;i=pre[i])\n    {\n        int v=next[i],value=apple[i];\n        if(v==father) continue;//\u5982\u679c\u4e0b\u4e00\u4e2a\u76f8\u90bb\u8282\u70b9\u5c31\u662f\u7236\u8282\u70b9\uff0c\u5219\u8bc1\u660e\u5230\u5e95\u5c42\u4e86\uff0c\u5f00\u59cb\u9012\u5f52\u7236\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\n        ans+=dfs(v,u)+1;//\u9012\u5f52\u5230\u6700\u4e0a\u5c42\u7684\u6839\u8282\u70b91\n        for(int j=minn(ans,m);j>=1;j--)//\u56e0\u4e3a\u6709\u9650\u5236\u679d\u6761\u7684\u6570\u76ee\uff0c\u53d6\u4e2amin\n        {\n            for(int k=minn(j,ans);k>=1;k--)\n                dp[u][j]=maxx(dp[u][j],dp[u][j-k]+dp[v][k-1]+value);\n```\n/\\*\n\u5bf9\u4e8eu\u8282\u70b9\u4e0b\u7684\u5b50\u8282\u70b9j\uff0c\u5bf9j\u4fdd\u7559\u591a\u5c11\u679d\u6761\u6700\u4f18\u8fdb\u884cdp\n\n\u5728\u8fd9\u91cc\u597d\u597d\u8bf4\u660e\u4e0b\uff0c\u56e0\u4e3a\u5efa\u6811\u662f\u6211\u4eec\u662f\u6309\u7167\u9012\u5f52\u5efa\u7684\u6811\u3002\n\n\u8fdb\u884c\u6bd4\u8f83\u65f6\uff0cdp[u][j]\u90fd\u662f\u524d\u9762\u9009\u62e9\u9664i\u5916\u7684\u5b50\u8282\u70b9\u5f97\u5230\u7684\u6700\u4f18\u89e3\u7ed3\u679c\n\n\u6240\u4ee5dp\u7684\u65f6\u5019\u4e0d\u53ef\u80fd\u91cd\u590d\u6216\u8005\u6f0f\u6389\u67d0\u8282\u70b9\n\n\\*/\n```cpp\n        }\n    }\n    return ans;\n}\nint main()\n{\n    memset(last,0,sizeof(last));\n    memset(next,0,sizeof(next));\n    memset(pre,0,sizeof(pre));\n    memset(dp,0,sizeof(dp));\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<n;++i)\n    {\n        int x,y,z;\n        scanf(\"%d %d %d\",&x,&y,&z);\n        jl(x,y,z);\n        jl(y,x,z);\n    }\n    dfs(1,0);\n    printf(\"%d\",dp[1][m]);\n}\n```",
        "postTime": 1489913626,
        "uid": 31955,
        "name": "Mark_ZZY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "```cpp\n//\u5c06\u6811\u679d\u4e0a\u7684\u82f9\u679c\u5e73\u79fb\u5411\u5b50\u8282\u70b9\n//\u5728\u6839\u8282\u70b9\u4e0b\u521b\u9020\u4e00\u4e2a\u865a\u62df\u6811\u679d\uff0c\u4f7f\u6811\u679d\u6570=\u8282\u70b9\u6570\ntype\n  tree=record\n    l,r,data:longint;\n  end;\nvar\n  a:array[0..110]of tree;\n  b,f:array[0..110,0..110]of longint;\n  z:array[0..110]of boolean;\n  n,q,x,y,i,j,t:longint;\nprocedure mt(k:longint);//maketree \u521b\u5efa\u4e8c\u53c9\u6811\nvar\n  i:longint;\nbegin\n  z[k]:=true;\n  for i:=1 to n do\n    if not z[i] and (b[k,i]>-1) then\n    begin\n      if a[k].l=0 then a[k].l:=i//\u4fdd\u5b58\u4e3a\u5de6\u5b50\u6811\n      else a[k].r:=i;//\u4fdd\u5b58\u4e3a\u53f3\u5b50\u6811\n      a[i].data:=b[k,i];//\u8bb0\u5f55\u82f9\u679c\u6570\n      mt(i);//\u6df1\u641c\n    end;\nend;\nfunction dp(n,q:longint):longint;//\u8bb0\u5fc6\u5316\u641c\u7d22\nvar\n  i,max,t:longint;\nbegin\n  max:=0;\n  if (n=0) or (q=0) then exit(0);//\u8fb9\u754c\n  if f[n,q]=-1 then//\u672a\u8ba1\u7b97\n  begin\n    for i:=0 to q-1 do//\u679a\u4e3e\u5de6\u5b50\u6811\u679d\u6761\u6570\u91cf\n    begin\n      t:=dp(a[n].l,i)+dp(a[n].r,q-1-i);\n      if t>max then max:=t;\n    end;\n    f[n,q]:=max+a[n].data;\n  end;\n  exit(f[n,q]);\nend;\nbegin\n  fillchar(b,sizeof(b),255);\n  fillchar(f,sizeof(f),255);\n  readln(n,q);\n  for i:=1 to n-1 do\n  begin\n    readln(x,y,t);\n    b[x,y]:=t;\n    b[y,x]:=t;\n  end;\n  mt(1);\n  writeln(dp(1,q+1));\nend.\n\n```",
        "postTime": 1472021757,
        "uid": 22270,
        "name": "ghd123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u4e2a\u7ecf\u5178\u7684\u6811\u5f62DP\uff0c\u6211\u4eec\u7528$f[i][j]$\u8868\u793a\u5728\u7b2ci\u4e2a\u70b9\u540e\u9762\u9009j\u6761\u8fb9\u80fd\u53d6\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u5219\u6709\n\n### $f[i][j] = max(f[i][j], f[i][j-k-1] + f[v][k] + w[edge])$\n(v\u4e3ai\u7684\u5b50\u8282\u70b9,w[edge]\u4e3ai\u5230v\u8fd9\u6761\u8fb9\u4e0a\u7684\u82f9\u679c\u3002\u6ce8\u610f\u5230\u9009\u4e86v\u5c31\u5fc5\u987b\u9009u->i\u8fd9\u8fd9\u6761\u8fb9\uff0c\u6240\u4ee5\u662ff[i][j-k-1])\n\n## \u4f46\u662f\uff0c\u8fd9\u90fd\u4e0d\u662f\u6211\u8981\u8bb2\u7684\u91cd\u70b9\n\n\u5982\u679c\u4f60\u76f4\u63a5\u6309\u7167\u8fd9\u4e2a\u601d\u8defDP\u662f23\u5206\u7684\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f~~\u56e0\u4e3a\u6211\u592a\u5f31\u4e86~~ \u7ffb\u4e86\u7ffb\u9898\u89e3\u90fd\u6ca1\u6709\u5c06\u8fd9\u4e2a\u95ee\u9898\u7684\u3002\u90a3\u5c31\u662f\u8981\u5012\u5e8f\u679a\u4e3ej\u548ck\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u5047\u8bbe\u4f60\u5148\u7528dp[2][3]\u628adp[1][3]\u6c42\u51fa\u6765\u4e86\uff0c\u8fd9\u65f6\u4f60\u6c42\u5230\u4e86dp[1][6]\uff0c\u4f60\u53d1\u73b0\u4ed6\u53ef\u4ee5\u4ecedp[v][3]\u8f6c\u79fb\u8fc7\u6765\uff0c\u4e8e\u662f\u4f60\u6109\u5feb\u7684\u8fd9\u4e48\u505a\u4e86\u3002\u4f46\u5c31\u662f\u8fd9\u91cc\u51fa\u4e86\u95ee\u9898\u3002\u4f60\u524d\u9762\u5df2\u7ecf\u7528\u8fc7\u4e00\u6b21\u8fd9\u4e09\u6761\u8fb9\u4e86\uff0c\u8f6c\u79fb\u4e0d\u5c31\u662f\u76f8\u5f53\u4e8e\u518d\u628a\u8fd9\u4e09\u6761\u8fb9\u7528\u4e00\u904d\u5417\uff1f\u8fd9\u5c31\u53d8\u6210\u4e86\u5b8c\u5168\u80cc\u5305\u4e86\u3002\u800c\u5982\u679c\u4f60\u7528\u5012\u5e8f\u5219\u5c31\u6ca1\u6709\u8fd9\u4e9b\u95ee\u9898\u4e86\u3002\u56e0\u4e3a\u5f53\u4f60\u6c42dp[1][6]\u65f6\u90a3\u4e09\u6761\u8fb9\u8fd8\u6ca1\u6709\u88ab\u4f7f\u7528\u8fc7\uff0cdp[1][3]\u8981\u4e48\u8fd8\u6ca1\u6709\u6c42\u8981\u4e48\u5c31\u662f\u5176\u4ed6\u7684v\u8f6c\u79fb\u8fc7\u6765\u7684\u3002\n\n\u8bf4\u76f4\u63a5\u70b9\u5c31\u662f\u987a\u5e8f\u679a\u4e3e\u662f\u5b8c\u5168\u80cc\u5305\uff0c\u5012\u5e8f\u679a\u4e3e\u662f01\u80cc\u5305\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nconst int maxn = 1001;\nusing namespace std;\nstruct edge{\n    int v, w, nxt;\n}e[maxn];\nint n, q, cnt, h[maxn], siz[maxn], f[maxn][maxn];\nvoid add(int u, int v, int w){\n    e[++cnt].v = v; e[cnt].w = w;\n    e[cnt].nxt = h[u]; h[u] = cnt;\n}\nvoid DFS(int x, int fa){\n    for(int i=h[x]; i; i=e[i].nxt){\n        int v = e[i].v;\n        if(v == fa) continue;\n        DFS(v, x); siz[x] += (siz[v]+1);\n        for(int j=siz[x]; j>=0; j--){\n            for(int k=min(siz[v], j-1); k>=0; k--){\n                f[x][j] = max(f[x][j], f[x][j-k-1] + f[v][k] + e[i].w);\n            }\n        }\n    }\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin >> n >> q;\n    int x, y, w;\n    for(int i=1; i<n; i++){\n        cin >> x >> y >> w;\n        add(x, y, w); add(y, x, w);\n    }\n    DFS(1, 0);\n    cout << f[1][q];\n}\n//f[u][j] = max(f[u][j], f[u][j-k-1] + f[v][k] + e[i].w)\n```",
        "postTime": 1537720515,
        "uid": 30066,
        "name": "Jianuo_Zhu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "[\u8d2a\u73a9\u84dd\u6708----\u4f60\u6ca1\u6709van\u8fc7\u7684\u5168\u65b0\u7248\u672c\uff0c\u66f4\u543c\u7684\u9605\u8bfb\u4f53\u9a8c\u8bf7\u70b9\u51fb](https://www.cnblogs.com/wlzs1432/p/9277905.html)\n\n\u5f88\u663e\u7136\u7684\u6811\u5f62DP\u3002\n\n\u7559\u4e0bQ\u4e2a\u6811\u679d\uff0c\u5c31\u662f\u7559\u4e0bQ+1\u4e2a\u8282\u70b9\u3002\n\n\u5bf9\u4e8e\u4e00\u68f5\u6709x\u4e2a\u8282\u70b9\u7684\u5b50\u6811\uff1a\n\n1.\u5168\u526a\u5b8c\n\n2.\u6ca1\u6709\u5168\u526a\u5b8c\uff1a\u8fd9\u662f\u4e00\u5b9a\u8981\u7559\u4e0b\u6839\u8282\u70b9(\u5047\u8bbe\u5b83\u4e3ai\uff09\uff0c\u5047\u8bbe\u5728\u5de6\u5b50\u6811\u4e2d\u7559\u4e0bk\u5404\u8282\u70b9\uff0c\u53f3\u5b50\u6811\u5c31\u7559\u4e0b\u4e86\u5269\u4e0b\u7684x-k-1\u4e2a\u8282\u70b9\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[i][j]=max(f[i][j],f[lc][k]+f[rc][x-k-1]+a[i])\n\n\u5176\u4e2df[i][j]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559k\u4e2a\u8282\u70b9\uff0ca[i]\u8868\u793a\u4fdd\u7559i\u540e\u76f4\u63a5\u5f71\u54cd\u5230\u7684\u82f9\u679c\u6811\u3002\n\n\u4ee3\u7801\u5199\u7684\u5f88\u5947\u602a\n```cpp\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define MAXN 310\n\ninline int read()\n{\n    int f=1,x=0;\n    char ch;\n    do\n    {\n        ch=getchar();\n        if(ch=='-') f=-1;\n    }while(ch<'0'||ch>'9');\n    do\n    {\n        x=(x<<3)+(x<<1)+ch-'0';\n        ch=getchar();\n    }while(ch>='0'&&ch<='9');\n    return f*x;\n}\n\nstruct node\n{\n    int to;\n    int val;\n};\n\nvector<node>son[MAXN];\nint n,q;\nint x,y,z;\nint f[MAXN][MAXN];\n\ninline int dp(int i,int j,int fa,int w)\n{\n    if(j==0) return 0;\n    if(son[i].size()==1) return son[i][0].val;\n    if(f[i][j]!=0) return f[i][j];\n    int v1=0,v2=1;\n    if(son[i][v1].to==fa) v1=2;\n    else if(son[i][v2].to==fa) v2=2;\n    for(int k=0;k<=j-1;k++)\n         f[i][j]=max(f[i][j],dp(son[i][v1].to,k,i,son[i][v1].val)+dp(son[i][v2].to,j-k-1,i,son[i][v2].val)+w);\n    return f[i][j];\n}\n\nint main()\n{\n    n=read(),q=read();\n    for(int i=1;i<n;i++){\n        x=read(),y=read(),z=read();\n        son[x].push_back(node{y,z});\n        son[y].push_back(node{x,z});\n    }\n    printf(\"%d\\n\",dp(1,q+1,0,0));\n} \n```",
        "postTime": 1530956582,
        "uid": 37408,
        "name": "Randyhoads",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n    int x,y,d,next;\n}a[210];int len,last[110];\nvoid ins(int x,int y,int d)//\u5efa\u7acb\u8fb9 \n{\n    len++;\n    a[len].x=x;a[len].y=y;a[len].d=d;\n    a[len].next=last[x];last[x]=len;\n}\nstruct trnode\n{\n    int l,r;//\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\uff0c\u8868\u793a\u6839\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\n    trnode(){l=r=0;}//\u4e00\u5f00\u59cb\u662f\u6ca1\u6709\u7684\uff0c\u521d\u59cb\u53160\n}tr[110];\nint f[110][110];//f[i][j]\u8868\u793a\u7b2ci\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4fdd\u7559j\u4e2a\u70b9\u80fd\u4fdd\u969c\u7684\u6700\u5927\u503c\nint n,k;\nbool bk[110];//bk[i]\u8868\u793ai\u8fd9\u4e2a\u70b9\u662f\u5426\u88ab\u641c\u8fc7 \nvoid dfs(int x)//\u641c\u7d22\u7b2cx\u4e2a\u70b9\n{\n    for(int k=last[x];k;k=a[k].next)\n    {\n        int y=a[k].y;\n        if(bk[y]==true)//\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u5c31\u8fdb\u6765\n        {\n            bk[y]=false;\n            f[y][1]=a[k].d;//\u4fdd\u7559\u81ea\u5df1\u4e00\u4e2a\u70b9\u7684\u6700\u5927\u503c\n            if(tr[x].l==0) tr[x].l=y;//\u5982\u679cx\u7684\u5de6\u5b69\u5b50\u6ca1\u6709\u4eba \n            else           tr[x].r=y;//\u4e0d\u7136\u5c31\u662f\u53f3\u5b69\u5b50\n            dfs(y);//\u8ba9y\u8bbf\u95ee\u81ea\u5df1\u7684\u4eb2\u670b\u597d\u53cb \n        }\n    }\n}\nint treedp(int x,int kk)//\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559kk\u4e2a\u70b9\n{\n    if(x==0) return 0;//\u6ca1\u67090\u8282\u70b9\n    if(f[x][kk]!=-1) return f[x][kk];//\u8bb0\u5fc6\u5316\u641c\u7d22\n    int maxx=0; \n    for(int i=0;i<kk;i++)//\u81ea\u5df1\u8981\u4fdd\u7559\n    {\n        int ls,rs;\n        ls=i;rs=kk-1-i;//\u5de6\u8fb9\u7559i\u4e2a\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u53f3\u8fb9\u7684\n        int tpl=treedp(tr[x].l,ls);//\u5de6\u8fb9\u7684\u6700\u5927\u503c \n        int tpr=treedp(tr[x].r,rs);//\u53f3\u8fb9\u7684\u6700\u5927\u503c \n        maxx=max(maxx,tpl+tpr+f[x][1]);//\u66f4\u65b0\u81ea\u5df1\u7684\u6700\u5927\u503c\n    }\n    f[x][kk]=maxx;//\u5b58\u50a8\u526a\u7eb8\n    return maxx;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    len=0;memset(last,0,sizeof(last));\n    int x,y,c;\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&c);\n        ins(x,y,c);//\u53cc\u5411\u8fb9 \n        ins(y,x,c);\n    }\n    memset(bk,true,sizeof(bk));//\u521d\u59cb\u5316 \n    memset(f,-1,sizeof(f));\n    bk[1]=false;dfs(1);\n    for(int i=1;i<=n;i++) f[i][0]=0;//\u6bcf\u4e2a\u70b9\u4e0d\u4fdd\u7559\u81ea\u7136\u6ca1\u6709\u554a\n    f[1][1]=0;//\u7b2c\u4e00\u4e2a\u70b9\u53ea\u7559\u4e0b\u4e00\u4e2a\u70b9\u4e5f\u662f\u6ca1\u6709\u7684\n    printf(\"%d\\n\",treedp(1,k+1));//k\u6761\u8fb9\uff0ck+1\u4e2a\u70b9\n    return 0;\n}\n```",
        "postTime": 1522298772,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u6811\u5f62dp\n\n\u6027\u8d28\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\u7684\u51b3\u7b56\u5c31\u662f\u5728\u5de6\u5b50\u6811\u4e0a\u7559i\u6761\u8fb9\uff0c\u5728\u53f3\u5b50\u6811\u4e0a\u7559j\u6761\u8fb9\u3002\n\n\u9650\u5236\uff0ci\uff0cj>=0\uff0ci+j=q,\u4e14\u9009\u62e9\u7684\u8fb9\u4e2d\u81f3\u5c11\u6709\u4e00\u6761\u548c\u6839\u8282\u70b9\u76f8\u8fde\u3002(q\u662f\u5b50\u95ee\u9898\u7684q\uff0c\u5c31\u662f\u8bf4\u603b\u5171\u9009\u51e0\u4e2a\uff09\n\n\u5b9a\u4e49\uff1a\u6211\u4eec\u5b9a\u4e49dp[i][j]\u8868\u793a\u51b3\u7b56\u4ee5i\u4e3a\u6839\u7684\u4e8c\u53c9\u6811\uff0c\u5728**###\u8be5**\u4e8c\u53c9\u6811\u4e0a\u9700\u8981\u9009\u62e9j\u6761\u8fb9\u4f7f\u5f97\u9650\u5236\u6210\u7acb\n\ndp[i][j]\u7684\u503c\u8868\u793a\u5728\u8be5\u65b9\u6848\u4e0b\u7684\u6700\u5927\u6536\u76ca\u3002\n\n\u5b9a\u4e49s[i][0]\u4e3a\u5de6\u5b69\u5b50\uff0cs[i][1]\u4e3a\u53f3\u5b69\u5b50\u3002\u5b9a\u4e49k[i][0]\u4e3a\u94fe\u63a5\u5de6\u5b69\u5b50\u7684\u8fb9\u6743\uff0ck[i][1]\u4e3a\u94fe\u63a5\u53f3\u5b69\u5b50\u7684\u8fb9\u6743\u3002\n\n\u8f6c\u79fb\uff0c\u66b4\u529b\u679a\u4e3e\u5728\u5de6\u5b50\u6811\u9009\u4e86\u51e0\u6761\u8fb9\uff0c\u90a3\u4e48\u53f3\u5b50\u6811\u5c31\u8981\u9009q-i-1\u4e2a(\u4e3a\u4ec0\u4e48\u51cf\u4e00\u89c1\u4e0b\u6587)\n\n\u7136\u540e\u8bb0\u5fc6\u5316\u641c\u7d22\u5373\u53ef\u3002\n\n\u597d\u4e86\u6211\u4eec\u53d1\u73b0\u4e0a\u8ff0\u8f6c\u79fb\u5e76\u6ca1\u6709\u6ee1\u8db3\u9650\u5236\u4e2d\u7684\u201c\u9009\u62e9\u7684\u8fb9\u4e2d\u81f3\u5c11\u6709\u4e00\u6761\u548c\u6839\u8282\u70b9\u76f8\u8fde\u201d\u8fd9\u4e2a\u6761\u4ef6\n\n\u90a3\u4e48\u6211\u4eec\u4ece\u9009\u7684\u8fb9\u4e2d\u9884\u75591\u4e2a\u6216\u4e24\u4e2a\u8fb9\u7ed9\u548c\u6839\u8282\u70b9\u76f8\u8fde\u7684\u8fb9\u7528\uff0c\n\n\u4e00\u4e2a\u5c31\u662f\u5f7b\u5e95\u4e0d\u9009\u4e00\u4fa7\u7684\u5b50\u6811\uff0c\u4e24\u4e2a\u5c31\u662f\u4e24\u4fa7\u5b50\u6811\u90fd\u9009\uff0c\u54ea\u6015\u6709\u4e00\u4e2a\u9009\u96f6\u4e2a\n\n\\_\uff08\u8bf7\u53cd\u590d\u9605\u8bfb\u72b6\u6001\u5b9a\u4e49\uff0c\u4e0d\u9009\u8fd9\u4e2a\u5b50\u6811\u548c\u8fd9\u4e2a\u5b50\u6811\u4e0a\u9009\u4e860\u6761\u8fb9\u662f\u6709\u5dee\u522b\u7684\uff01\uff01\uff01\uff09\\_\n\n\u8fd9\u6837\u7684\u8bdd\u65b9\u7a0b\u5c31\u662f\n\ndp[i][j]=max(dp[i][j],dfs(s[i][0],j-1+k[i][0])),\n\ndp[i][j]=max(dp[i][j],dfs(s[i][0],p-1)+dfs(s[i][1],j-p-1)+k[i][0]+k[i][1])(1<=p<=j-1),\n\ndp[i][j]=max(dp[i][j],dfs(s[i][1],j-1+k[i][1])\n\n\u8fb9\u754c\u6761\u4ef6\uff1a\u4e0d\u9700\u8981~\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nstruct data\n{\n    int v;int next;int val;\n}edge[220];int cnt;int alist[110];\nvoid add(int u,int v,int val)\n{\n    edge[++cnt].v=v;\n    edge[cnt].val=val;\n    edge[cnt].next=alist[u];\n    alist[u]=cnt;\n    return;\n}\nbool book[110];\nint dp[110][110];\nint k[110][2];\nint s[110][2];\nvoid dfs(int x)//dfs\u9884\u5904\u7406\u5b69\u5b50\u548c\u5b69\u5b50\u7684\u8fb9\u6743\n{\n    book[x]=true;int p=0;\n    int next=alist[x];\n    while(next)\n    {\n        int v=edge[next].v;\n        int val=edge[next].val;\n        if(book[v]==false)\n        {        \n            dfs(v);\n            s[x][p]=v;k[x][p]=val;p++;\n        }\n        next=edge[next].next;\n    }\n    return;\n}\nint dfs1(int x,int ban)//\u989d\u8fd9\u91ccban\u662f\u8981\u7559\u4e0b\u591a\u5c11\u8fb9\uff0c\u4e00\u5f00\u59cb\u53d8\u91cf\u540d\u8d77\u9519\u4e86\u5c31\u61d2\u5f97\u6539\u4e86\n{\n    if(dp[x][ban]!=0)//\u8bb0\u5fc6\u5316\n    return dp[x][ban];\n    if(ban==0)//\u5982\u679c\u9009\u96f6\u4e2areturn 0\n    {\n        dp[x][ban]=0;\n        return dp[x][ban];\n    }\n    if(s[x][0]==0||s[x][1]==0)//\u5982\u679c\u6ca1\u6709\u5b69\u5b50return 0\n    {\n        return 0;\n    }\n    dp[x][ban]=dfs1(s[x][0],ban-1)+k[x][0];//\u72b6\u6001\u8f6c\u79fb\n    for(int i=1;i<=ban-1;i++)\n    {\n        dp[x][ban]=max(dp[x][ban],\n        dfs1(s[x][0],i-1)+dfs1(s[x][1],ban-i-1)+k[x][0]+k[x][1]);\n    }\n    dp[x][ban]=max(dp[x][ban],dfs1(s[x][1],ban-1)+k[x][1]);\n    return dp[x][ban];\n}\nint n;int q;\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<n;i++)\n    {\n        int u;int v;int val;\n        scanf(\"%d%d%d\",&u,&v,&val);\n        add(u,v,val);add(v,u,val);\n    }    \n    dfs(1);\n    dfs1(1,q);\n    printf(\"%d\",dp[1][q]);\n    return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n\n```",
        "postTime": 1509454934,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u535a\u5ba2[\u94fe\u63a5](http://www.cnblogs.com/cellular-automaton/p/7573779.html)\u3002\n\n\n\u8bbef[i][j][k]\u8868\u793a\u7ed9\u4ee5i\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5206\u914dj\u6761\u53ef\u4fdd\u7559\u7684\u6811\u679d\u540d\u989d\u7684\u65f6\u5019\uff0c\u72b6\u6001\u4e3ak\u65f6\u80fd\u4fdd\u7559\u7684\u6700\u591a\u82f9\u679c\u3002\n\nk\u6709\u4e09\u79cd\u60c5\u51b5\u3002\n\nk=1\uff1a\u6211\u53ea\u8003\u8651\u5b50\u6811\u7684\u5de6\u53c9\uff0c\u4e0d\u8003\u8651\u5b50\u6811\u7684\u53f3\u53c9\uff0c\u6b64\u65f6\u5b50\u6811\u80fd\u4fdd\u7559\u7684\u6700\u591a\u7684\u82f9\u679c\u3002\n\nk=2\uff1a\u6211\u53ea\u8003\u8651\u5b50\u6811\u7684\u53f3\u53c9\uff0c\u4e0d\u8003\u8651\u5b50\u6811\u7684\u5de6\u53c9\uff0c\u6b64\u65f6\u5b50\u6811\u80fd\u4fdd\u7559\u7684\u6700\u591a\u7684\u82f9\u679c\u3002\n\nk=3\uff1a\u6211\u65e2\u8003\u8651\u5b50\u6811\u7684\u5de6\u53c9\uff0c\u53c8\u8003\u8651\u5b50\u6811\u7684\u53f3\u53c9\uff0c\u6b64\u65f6\u5b50\u6811\u80fd\u4fdd\u7559\u7684\u6700\u591a\u7684\u82f9\u679c\u3002\n\n\u8fd9\u6837\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u51fa\u6765\u4e86\u3002\n\nf[i][j][1]=max(f[i][j][1],f[leftson[i]][j-1][3]+val[i][leftson[i]])\n\nf[i][j][2]=max(f[i][j][2],f[rightson[i]][j-1][3]+val[i][rightson[i]])\n\nf[i][j][3]=max(f[i][j][3],f[i][v][1]+f[i][j-v][2])   \u5176\u4e2dv\u4ece0\u5230j\u679a\u4e3e\u3002\n\n\u6700\u540ef[1][q][3]\u5c31\u662f\u6700\u7ec8\u7684\u7b54\u6848\u3002\n\n\u6ce8\u610f\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\u6211\u56e0\u4e3a\u8fd9\u4e2aT\u4e86\u56db\u6b21\u3002\n\n  ```cpp\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\nusing namespace std;\ninline long long read(){\n    long long num=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-')    f=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        num=num\\*10+ch-'0';\n        ch=getchar();\n    }\n    return num\\*f;\n}\n\nstruct Edge{\n    int next,to,val;\n}edge[100010];\nint head[100010],num;\nint father[100010];\nint size[100010];\ninline void add(int from,int to,int val){\n    edge[++num]=(Edge){head[from],to,val};\n    head[from]=num;\n}\n\nvoid find(int x,int fa){\n    father[x]=fa;\n    size[x]=1;\n    for(int i=head[x];i;i=edge[i].next){\n        int to=edge[i].to;\n        if(to!=fa){\n            find(to,x);\n            size[x]+=size[to];\n        }\n    }\n}\n\nint f[103][103][4];\n\nvoid dfs(int x,int s){\n    if(size[x]==1||f[x][s][3])    return;\n    int cnt=0;\n    for(int i=head[x];i;i=edge[i].next){\n        int to=edge[i].to;\n        if(to==father[x])    continue;\n        cnt++;\n        for(int v=0;v<size[to]&&v<s;++v){\n            dfs(to,v);\n            f[x][v+1][cnt]=f[to][v][3]+edge[i].val;\n        }\n    }\n    for(int v=0;v<=s;++v)\n        f[x][s][3]=max(f[x][s][3],f[x][v][1]+f[x][s-v][2]);\n    return;\n}\n\nint main(){\n    int n=read(),q=read();\n    for(int i=1;i<n;++i){\n        int from=read(),to=read(),val=read();\n        add(from,to,val);\n        add(to,from,val);\n    }\n    find(1,1);\n    dfs(1,q);\n    printf(\"%d\",f[1][q][3]);\n    return 0;\n}",
        "postTime": 1506049304,
        "uid": 25815,
        "name": "\u5c01\u766b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u6811\u5f62DP+\u8bb0\u5fc6\u5316+\u94fe\u5f0f\u524d\u5411\u661f\u6765\u505a\uff08\u6709\u70b9\u592alow\u4e86\u5417\uff1f\uff09\uff08\u4e8c\u53c9\u6811\u7528\u524d\u5411\u661f\uff1f\u6ca1\u5fc5\u8981\u5427\uff09\n\n\u5177\u4f53\u601d\u60f3\u548c\u505a\u6cd5\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nint head[500];\nstruct Edge\n{\n    int z;\n    int gs;\n    int nexty;\n    Edge(){gs=0;}\n}edge[1000];\nint cnt=0;\nint visit[500]={0};\nint f[200][200][200]={0};\ninline void _add(int a,int b,int c)//\u5efa\u8fb9\u51fd\u6570\n{\n    cnt++;\n    edge[cnt].z=b;\n    edge[cnt].gs=c;\n    edge[cnt].nexty=head[a];\n    head[a]=cnt;\n}\nint dfs(int root,int bh,int hs)//DP\u51fd\u6570\uff0c\u7528dfs\u5b9e\u73b0\uff08root\uff1a\u5f53\u524d\u6839\u8282\u70b9\uff1bbh\uff1a\u5f53\u524d\u8fb9cnt\u7f16\u53f7\uff1bhs\uff1a\u8fd8\u8981\u5728\u8fd9\u4e2a\uff08\u5b50\uff09\u6811\u4e0a\u4fdd\u7559\u591a\u5c11\u6761\u53d8\uff09\n{\n    if(visit[root])return 0;//\u6709\u53ef\u80fd\u8fb9\u5bfc\u5230\u5b83\u7684\u7236\u8282\u70b9\uff0c\u6240\u4ee5\u52a0\u4e2a\u5224\u91cd\uff0c\u907f\u514d\u6b7b\u5faa\u73af\n    if(f[root][bh][hs]!=0)return f[root][bh][hs];//\u8bb0\u5fc6\u5316\u641c\u7d22\uff08\u7531\u4e8e\u6211\u7684\u849f\u84bb\uff0c\u5f00\u4e863\u7ef4\u6570\u7ec4\uff0c\u5176\u5b9e\u53ea\u89812\u7ef4\u5c31\u591f\u4e86\uff09\n    if(hs==-1)return f[root][bh][hs]=0;//\u8fb9\u754c-1\uff1a\u4e0d\u9700\u8981\u52a0\u8fb9\uff0c\u76f4\u63a5\u8fd4\u56de0\n    if(hs==0)return f[root][bh][hs]=edge[bh].gs;//\u8fb9\u754c0\uff1a\u5b50\u6811\u4e2d\u65e0\u9700\u52a0\u8fb9\uff0c\u800c\u9700\u8981\u53d6\u7236\u8282\u70b9\u8fde\u63a5\u5b83\u7684\u8fb9\n    int za,zb;//\u5b58root\u6811\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\n    int a,b;\n    za=zb=1;//\u6709\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u8d4b\u521d\u59cb\u503c\u4e3a1\uff0c\u641c\u7d22\u56e0\u91cd\u590d\u4f1a\u81ea\u52a8\u8fd4\u56de0\uff0c\u4e0d\u5f71\u54cd\u7b54\u6848\n    int maxn=0;\n    for(int now=head[root];now!=-1;now=edge[now].nexty)//\u524d\u5411\u661f\u904d\u5386\u8fb9\n    if(!visit[edge[now].z])za==1?za=now:zb=now;\n    if(za==1)return f[root][bh][hs]=edge[bh].gs;//\u82e5\u65e0\u5b50\u8282\u70b9\uff0c\u5219\u540c\u8fb9\u754c0\u7684\u60c5\u51b5\n    for(int i=0;i<=hs;i++)//\u53ef\u80fd\u7684\u5de6\u53f3\u5b50\u6811\u4fdd\u7559\u8fb9\u6570\u60c5\u51b5\n    {\n        visit[root]=true;\n        a=dfs(edge[za].z,za,i-1);\n        b=dfs(edge[zb].z,zb,hs-i-1);//\u91cd\u70b9\uff1a\u53d6a-1\uff0chs-i-1\u2014\u2014\u51cf\u4e00\u8868\u793a\u8bf4\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u5df2\u53d6edge[zb]\uff0c\u6240\u4ee5-1\u3002\n//        visit[root]=false;\n        maxn=max(maxn,a+b+edge[bh].gs);\n    }\n    return f[root][bh][hs]=maxn; \n}\nint main()\n{\n    int n,q;\n    int a,b,c;\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d\",&n,&q);\n    for(int i=0;i<n-1;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        _add(a,b,c);\n        _add(b,a,c);//\u524d\u5411\u661f\u5efa\u8fb9\uff08\u7531\u4e8e\u662f\u6709\u5411\u8fb9\uff0c\u6240\u4ee5\u8981\u4e24\u5411\u5efa\u8fb9\uff09\n    }\n    printf(\"%d\",dfs(1,0,q));\n    return 0;\n}\n```",
        "postTime": 1502626211,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "/\\* \u6b64\u9898\u56e0\u4e3a\u6c42\u6700\u5927\u7684\u82f9\u679c\u6570\u91cf\uff0c\u4e00\u5b9a\u4f7f\u7528\u6811\u5f62\u52a8\u6001\u89c4\u5212\uff0c\u5426\u5219\u8d85\u65f6\uff01\uff08\u6216\u8005\u8bf4\u662f\u6811\u5f62\u4f9d\u8d56\u80cc\u5305\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u6765\u8bf4\uff0c\u5b83\u7684\u5b58\u5728\u4e0e\u5426\u90fd\u662f\u5173\u7cfb\u5230\u4ed6\u4e0b\u8fb9\u7684\u82f9\u679c\u6570\u91cf\u7684\uff0c\u9898\u76ee\u8981\u6c42\u6700\u540e\u662f\u7559\u4e0b\u51e0\u6761\u679d\uff0c\u90a3\u4e48\u5982\u679c\u4e0d\u8981\u8fd9\u4e2a\u70b9\u7684\u5de6\u5b50\u6811\u7684\u8bdd\uff0c\u4ed6\u53f3\u5b50\u6811\u7684\u5c31\u53ef\u4ee5\u7559k-1\u6761\u8fb9\uff0c\u56e0\u4e3a\u8981\u629b\u53bb\u8fd9\u4e2a\u70b9\u548c\u53f3\u5b50\u6811\u70b9\u7684\u8fb9\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u6709\u4e24\u4e2a\u72b6\u6001\uff0c\u8981\u5de6\u5b50\u6811\u6216\u8981\u53f3\u5b50\u6811\uff0c\u8fd8\u6709\u4e00\u4e2a\u72b6\u6001\u5c31\u662f\u4e24\u8fb9\u90fd\u8981\uff0c\u90a3\u4e48\u5206\u7ed9\u5de6\u5b50\u6811\u7684\u8fb9\u4e3ai\uff0c\u5206\u7ed9\u53f3\u5b50\u6811\u7684\u8fb9\u4e3ak-2-i\uff0cfor i=1 to k-2 do\u3002\u4ece\u8fd9\u91cc\u627e\u4e00\u4e2a\u6700\u5927\u503c\u548c\u4e0a\u4e24\u4e2a\u72b6\u6001\u6bd4\u6c42\u51fa\u6700\u5927\u5c31\u662f\u8fd9\u4e2a\u70b9\u7684\u6700\u4f18\u503c\u3002\n\n\u8fd9\u9053\u9898\u8fd8\u5e94\u8be5\u6ce8\u610f\u5efa\u6811\uff0c\u56e0\u4e3a\u53f3\u4e0d\u4e00\u5b9a\u662f\u5de6\u7684\u5b69\u5b50\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0bf[x][j]=max(f[x][j],f[x][j-k]+f[s][k-1]+jz[x][i]);\\*/\n\n```cpp\n#includde<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nvector<int> jz[200],b[200];\nint q,n,f[200][200]={};\nint work(int x,int y)\n{\n  int son=0;\n  for(int i=0;i<b[x].size();i++)\n  {\n    int s=b[x][i];//\u70b9u\u7684\u513f\u5b50\u7ed3\u70b9 \n    if(s==y) continue;\n    son+=(work(s,x)+1);//\u6570\u641c\u5230\u7684\u7ed3\u70b9\uff08\u591a\u52a0\u4e00\u4e2a\u70b9\uff09 \n    for(int j=min(son,q);j>0;j--)//j\u4ee3\u8868\u4fdd\u7559\u7684\u6811\u679d\u6570 \n      for(int k=min(j,q);k>0;k--)\n        f[x][j]=max(f[x][j],f[x][j-k]+f[s][k-1]+jz[x][i]);//\u7a0b\u5e8f\u6838\u5fc3\uff1a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n  }\n  return son;\n}\nint main() \n{\n  int i,j,k,l;\n  cin>>n>>q;\n  for(i=1;i<n;i++)\n  {\n    cin>>j>>k>>l;\n    b[j].push_back(k);\n    b[k].push_back(j);//\u6784\u9020\u8fb9 \n    jz[j].push_back(l);\n    jz[k].push_back(l);//\u5b58\u4ef7\u503c \n  }\n  work(1,1);\n  cout<<f[1][q]<<endl;\n  return 0;\n}\n```",
        "postTime": 1500378499,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8be1\u5f02\u306e\u7801\u98ce\n\ndfs+dp\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\nint N,M;\nstruct Node{\n    int d,v;\n    Node(){}\n    Node(int dd,int vv):d(dd),v(vv){}\n};\nvector < vector<Node> > G;\nint dp[110][110];\nint visited[110];\nint dfsDP(int son,int father){\n    int ans = 0;\n    for (int i = 0; i < G[son].size();i++) {\n        int nNode = G[son][i].d;\n        if(nNode == father)\n            continue;\n        ans += dfsDP(nNode,son) + 1;                //\u5148\u641c\n        for (int j = min(M,ans) ;j >= 0; --j) {          //\u4e00\u5b9a\u8981\u9006\u7740\u5faa\u73af~\n            for (int k = j; k > 0; --k) {\n                dp[son][j] = max(dp[son][j],dp[son][j-k] + dp[nNode][k-1] + G[son][i].v);            //\u8f6c\u79fb\u65b9\u7a0b\u5728\u524d\u9762\n            }\n        }\n    }\n    return ans;\n}\nint main() {\n    cin >> N >> M;\n    G.clear();\n    G.resize(N+10);\n    for (int i = 1; i < N; ++i) {\n        int s,d,v;\n        cin >> s >> d >> v;\n        G[s].push_back(Node(d,v));\n        G[d].push_back(Node(s,v));\n    }\n    dfsDP(1,-1);\n    cout << dp[1][M] << endl;\n    return 0;\n}\n```",
        "postTime": 1481894260,
        "uid": 9087,
        "name": "fl_334",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u5178\u578b\u7684\u6811\u5f62DP\u9898\u3002      \n\u6211\u4eec\u53d1\u73b0\u6839\u636e\u8fb9\u8fdb\u884c\u5904\u7406\u5341\u5206\u7684\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u7559\u4e0bq\u6761\u8fb9\u5316\u4e3a\u7559\u4e0bq+1\u4e2a\u70b9\u3002      \n\u6211\u4eec\u6765\u8fc7\u4e00\u904d\u7b97\u6cd5\u6d41\u7a0b:      \n\u9996\u5148\u662f\u4e00\u904daddedge\u6dfb\u52a0\u53cc\u5411\u8fb9\uff1a     \n```cpp\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint x,y,w;\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\taddedge(x,y,w);\n\t\taddedge(y,x,w);\n\t}\n```\n\u7136\u540e\u6211\u4eecdfs\u4e00\u904d:     \n```\nvoid dfs(int u,int fa)\n{\n\tfor(int i=head[u];i!=-1;i=t[i].next)\n\t{\n\t\tint v=t[i].to;\n\t\tif(v!=fa)\n\t\t{\n```\n\u6211\u4eec\u5148(\u4ece\u6839\u5f00\u59cb)\u5f00\u59cb\u8fdb\u884c\u6811\u7684\u904d\u5386\uff0c\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u5de5\u4f5c:                \n1.\u5b58\u50a8\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u4e0e\u53f3\u5b69\u5b50(\u91cd\u65b0\u5efa\u7acb\u4e00\u9897\u4e8c\u53c9\u6811):   \n```cpp\n\t\t\tif(!lc[u])lc[u]=v;\n\t\t\telse rc[u]=v;\n```\n2.\u628a\u8fb9\u6743\u5316\u4e3a\u70b9\u6743\uff1a    \n\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\u5b9e\u73b0\u8fd9\u4e2a\u8fc7\u7a0b   \n\u2460:\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u662f\u5176\u6240\u6709\u8fde\u51fa\u53bb\u7684\u8fb9(\u9664\u4e86\u5230\u5b83\u7236\u4eb2\u7684\u90a3\u4e00\u6761)\u7684\u8fb9\u6743\u548c\uff1a\n```cpp\n\t\t\ta[u]+=t[i].weight;\n```\n\u2461:\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u662f\u5176\u7236\u4eb2\u6307\u5411\u5b83\u7684\u8fb9\u6743:\n```cpp\n\t\t\ta[v]=t[i].weight;\n```\n\u5728\u8fd9\u91cc\u6211\u4eec\u91c7\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u3002      \n3.\u7ee7\u7eeddfs\u8fc7\u7a0b:\n```cpp\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n}\n```\n\u6700\u540e\u662fdp\u8fc7\u7a0b:      \n\u6211\u4eec\u7528```f[u][k]```\u6765\u8868\u793a\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u4fdd\u7559k\u4e2a\u70b9\u7684\u72b6\u6001\u3002        \n\u63a8\u7b97\u51fa\u8fb9\u754c\u6761\u4ef6:\n```cpp\n\tf[i][0]=0;\n\tf[u(u\u4e3a\u53f6\u8282\u70b9)][k]=a[u];\n```\n\u6211\u4eec\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u5b9e\u73b0dp\u8fc7\u7a0b:      \n\u9996\u5148\u662f\u8fb9\u754c\u6761\u4ef6\u4ee5\u53ca\u8bb0\u5fc6\u5316:      \n```cpp\n    if(f[u][k])return f[u][k];\n    if(!lc[u]&&!rc[u]&&k!=1)return 0;\n    if(!lc[u]&&!rc[u]&&k==1)return a[u];\n```\n\u7136\u540e\u662f\u53ea\u6709\u5de6\u5b50\u6811\u7684\u60c5\u51b5\uff1a\n```cpp\n\telse if(lc[u]&&!rc[u])return solve(lc[u],k-1)+a[lc[u]];\n```\n\u5728\u8fdb\u884c\u4e0b\u4e00\u6b65\u524d\uff0c\u6211\u4eec\u5148\u5199\u51fa\u8f6c\u79fb\u65b9\u7a0b:\n```cpp\nf[u][k]=max{res,solve(lc[u],i)+solve(rc[u],k-i-1)+a[u]}(i\u2208{0-k-1});\n```\n\u4e8e\u662f\u5f97\u5b8c\u6574dp\u8fc7\u7a0b:      \n```cpp\nint solve(int u,int k)\n{\n    if(f[u][k])return f[u][k];\n    if(!lc[u]&&!rc[u]&&k!=1)return 0;\n    if(!lc[u]&&!rc[u]&&k==1)return a[u];\n    else if(lc[u]&&!rc[u])return solve(lc[u],k-1)+a[lc[u]];\n    else\n    {\n        int res=0;\n        for(int i=0;i<k;i++)res=max(res,solve(lc[u],i)+solve(rc[u],k-i-1)+a[u]);\n        f[u][k]=res;\n        return res;\n    }\n}\n```\n\u6700\u540e```printf(\"%d\",solve(1,m+1));```\u5c31\u597d\u4e86\u3002   \n\u5b8c\u6574\u4ee3\u7801:       \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<climits>\n#include<ctime>\n#include<algorithm>\n#include<complex>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<vector>\n#define INF 0x3f3f3f3f\n#define ll long long\nusing namespace std;\nstruct edge\n{\n\tint to,next,weight;\n}t[220];\nint lc[110];\nint rc[110];\nint a[110];\nint cnt(0);\nint head[110];\nint f[110][110];\nint n,m;\nvoid addedge(int xi,int yi,int wi)\n{\n\tt[cnt].to=yi;\n\tt[cnt].next=head[xi];\n\tt[cnt].weight=wi;\n\thead[xi]=cnt++;\n}\nint solve(int u,int k)\n{\n    if(f[u][k])return f[u][k];\n    if(!lc[u]&&!rc[u]&&k!=1)return 0;\n    if(!lc[u]&&!rc[u]&&k==1)return a[u];\n    else if(lc[u]&&!rc[u])return solve(lc[u],k-1)+a[lc[u]];\n    else\n    {\n        int res=0;\n        for(int i=0;i<k;i++)res=max(res,solve(lc[u],i)+solve(rc[u],k-i-1)+a[u]);\n        f[u][k]=res;\n        return res;\n    }\n}\nvoid dfs(int u,int fa)\n{\n\tfor(int i=head[u];i!=-1;i=t[i].next)\n\t{\n\t\tint v=t[i].to;\n\t\tif(v!=fa)\n\t\t{\n\t\t\tif(!lc[u])lc[u]=v;\n\t\t\telse rc[u]=v;\n\t\t\ta[v]=t[i].weight;\n\t\t\tdfs(v,u);\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint x,y,w;\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\taddedge(x,y,w);\n\t\taddedge(y,x,w);\n\t}\n\tfor(int i=1;i<=n;i++)f[i][0]=0;\n\tdfs(1,0);\n\tprintf(\"%d\",solve(1,m+1));\n\treturn 0;\n}\n\n```\n",
        "postTime": 1543238284,
        "uid": 105496,
        "name": "KevinYu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ea\u8981\u5c06\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u6c42\u51fa\u6765\u5373\u53ef\uff0c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5982\u4e0b\u6240\u793a\uff1a\n\n\u2235f [ i ] [ j ] = max { f [ l [ i ] ] [ k ] + f [ r [ i ] ] [ j - m - 1 ] + a [ i ] } ( 0 <= m <= j-1 ) \u3002\n\n\u2234 \u521d\u59cb\u5316\uff1af [ i ] [ j ] = 0; ( j = 0 )\n\nf [ i ] [ j ] = a [ i ] (j != 0  &&  l [ i ] = 0 && r [ i ] = 0)\n\n\u2234 ans = f [ 1 ] [ q + 1 ]\u3002\n\n\u8fd9\u91cc\u662f\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=105;\nint n,q,l[maxn],r[maxn],f[maxn][maxn]={0},Map[maxn][maxn],a[maxn];\nvoid tree(int v)\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(Map[v][i]>=0)\n\t\t{\n\t\t\tl[v]=i;\n\t\t\ta[i]=Map[v][i];\n\t\t\tMap[v][i]=-1;\n\t\t\tMap[i][v]=-1;\n\t\t\ttree(i);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(Map[v][i]>=0)\n\t\t{\n\t\t\tr[v]=i;\n\t\t\ta[i]=Map[v][i];\n\t\t\tMap[v][i]=-1;\n\t\t\tMap[i][v]=-1;\n\t\t\ttree(i);\n\t\t\tbreak;\n\t\t}\n\t}\n}\nint dp(int i,int j)\n{\n\tif(j==0)\treturn 0;\n\tif(l[i]==0 && r[i]==0)\treturn a[i];\n\tif(f[i][j]>0)\treturn f[i][j];\n\tfor(int m=0;m<=j-1;m++)\n\t{\n\t\tf[i][j]=max(f[i][j],dp(l[i],m)+dp(r[i],j-m-1)+a[i]);\n\t}\n\treturn f[i][j];\n}\nint main()\n{\n\tint x,y,z;\n\tcin>>n>>q;\n\tq=q+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tMap[i][j]=-1;\n\t\t}\n\t}\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tcin>>x>>y>>z;\n\t\tMap[x][y]=z;\n\t\tMap[y][x]=z;\n\t}\n\ttree(1);\n\tint ans=dp(1,q);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1532787278,
        "uid": 49473,
        "name": "xtx2004",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u628a\u8fb9\u6743\u8f6c\u5316\u4e3a\u70b9\u6743\u6765\u505a\uff0c\u7136\u540edp\u627e\u51fa\u6df1\u5ea6\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\u679a\u4e3e\u4e00\u4e2aj\u662f\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u9009\u4e86\u51e0\u4e2a\u70b9\u3002\u4ee5u\u4e3a\u6839\uff0cu\u662f\u4e00\u5b9a\u8981\u9009\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4ece\u4ed6\u7684\u5b50\u6811\u4e2d\u9009\u51faj-1\u4e2a\u70b9\uff0c\u679a\u4e3e\u4ece\u5de6\u5b50\u6811\u4e2d\u9009\u4e86k\u4e2a\u70b9\u6765\u66f4\u65b0\u72b6\u6001\u3002\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\n\n\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=205;\nint head[MAXN],cnt=0;\nstruct edge{\n    int to,next,w;\n}e[MAXN<<1];\ninline void add(int u,int v,int w){e[++cnt]=(edge){v,head[u],w},head[u]=cnt;}\nint n,m,tem1,tem2,tem3,dw[MAXN],size[MAXN],dp[MAXN][MAXN],lson[MAXN<<5],rson[MAXN<<5]; //\u5f00\u591f\u5927\u5c0f \nvoid dfs1(int u,int fa){\n    size[u]=1;\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dw[v]=e[i].w;\n        if(!lson[u])lson[u]=v;\n        else rson[u]=v;\n        dfs1(v,u);\n        size[u]+=size[v];\n    }\n}\n//dp[i][j]=max(dp[i][j],dp[lson][j-1-k]+dp[rson][k]+w[i])   0<=k<=j-1   \u72b6\u6001\u8f6c\u79fb \nvoid dfs2(int u,int fa){\n    for(int i=head[u];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs2(v,u);\n        for(int j=2;j<=size[u];j++){\n            for(int k=0;k<=j-1;k++){\n                dp[u][j]=max(dp[u][j],dp[lson[u]][j-1-k]+dp[rson[u]][k]+dw[u]);//\u8f6c\u79fb \n            }\n        }\n    }\n}\nint main(){\n    memset(dw,0,sizeof(dw));\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<n;i++){\n        scanf(\"%d%d%d\",&tem1,&tem2,&tem3);\n        add(tem1,tem2,tem3);\n        add(tem2,tem1,tem3);\n    }\n    dfs1(1,1);//\u9884\u5904\u7406 \n    for(int i=1;i<=n;i++){\n        dp[i][1]=dw[i];\n    }\n    dfs2(1,1);\n    printf(\"%d\",dp[1][m+1]);\n    return 0;\n} \n\n```",
        "postTime": 1510056224,
        "uid": 55704,
        "name": "luoyue123",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2015 \u3010\u4e8c\u53c9\u82f9\u679c\u6811\u3011"
    }
]