[
    {
        "content": "\u8fd9\u662f\u6211\u8fd9\u4e2a\u5c0f\u849f\u84bb\u7b2c\u4e00\u6b21\u6572\u6b27\u62c9\u56de\u8def\uff0c\u4e8e\u662f\u53c2\u7167\u4e86\u4e00\u6ce2\u9898\u89e3\u3002\u540c\u65f6\u4e5f\u53d1\u73b0\u597d\u50cf\u5c31\u6ca1\u6709\u9898\u89e3\u5224\u65ad\u4e86\u56fe\u662f\u5426\u8054\u901a\u3002\u56e0\u6b64\u5728\u8fd9\u91cc\u547c\u5401\u4e00\u4e0b\uff0c\u52a0\u5f3a\u4e00\u4e0b\u6570\u636e\u597d\u5427\u3002\n\n\u601d\u8def\u5c31\u4e0d\u4f1a\u8bf4\u4e86\u5427\uff0c\u6bcf\u8bfb\u5165\u4e24\u4e2a\u5b57\u6bcd\u5c31\u7ed9\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u8fde\u4e00\u6761\u65e0\u5411\u8fb9\uff0c\u8dd1\u4e00\u8fb9\u6b27\u62c9\u56de\u8def\u5c31\u884c\u4e86\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\uff08\u6b27\u62c9\u56de\u8def\u6211\u4e3b\u8981\u662f\u53c2\u7167\u4e86\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u7136\u540e\u5224\u65ad\u56fe\u662f\u5426\u8054\u901a\u6211\u7528\u4e86\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e86\u4e00\u4e0b\u3002\uff09\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\ninline int read(){\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n\treturn s*w; \n}\nconst int N=257;\nint G[N][N],depth[N],n,cnt,hen,f[N],sum[N];\nchar tmp[N],rb[N*N]; \ninline void dfs(int x){\n\tfor(res i=0;i<N;i++)\n\t\tif(G[x][i])G[x][i]=G[i][x]=0,dfs(i);\n\trb[n--]=x;\n}\ninline int find(int x){\n\tif(f[x]!=x)f[x]=find(f[x]);\n\treturn f[x];\n}\nint main(){\n\tn=read();\n\tfor(res i=0;i<N;i++)f[i]=i;\n\tfor(res i=1;i<=n;i++){\n\t\tscanf(\"%s\",tmp);\n\t\tG[tmp[0]][tmp[1]]=G[tmp[1]][tmp[0]]=1;\n\t\tint fx=find(tmp[0]),fy=find(tmp[1]);\n\t\tf[fx]=fy;\n        depth[tmp[0]]++;\n        depth[tmp[1]]++;\n\t}\n\tint ans=0;\n\tfor(res i=0;i<N;i++)if(f[i]==i&&depth[i])ans++;\n\tif(ans!=1){puts(\"No Solution\");return 0;}\n\tfor(res i=0;i<N;i++)\n\t\tif(depth[i]&1){\n\t\t    cnt++;\n\t\t\tif(!hen)hen=i;\n\t\t}\n\tif(!hen)\n\t    for(res i=0;i<N;i++)\n\t\t    if(depth[i]){hen=i;break;}\n\tif(cnt&&cnt!=2){puts(\"No Solution\");return 0;}\n\tdfs(hen);\n\tputs(rb);\n\treturn 0;\n}\n```",
        "postTime": 1525696407,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "LG P1341\u65e0\u5e8f\u5b57\u6bcd\u5bf9"
    },
    {
        "content": " # ~~\u6a21\u677f~~\n ## \u8fd9\u4e2a\u9898\u6253\u6b27\u62c9\u8def\u5c31\u884c\u4e86\n \n### \u5f88\u591adalao\u4eec\u90fd\u662f\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u7684\u8fde\u901a\n### \u5728\u6b64\u4ecb\u7ecd\u4e00\u79cd\u7a0d\u5fae\u5de7\u5999\u4e00\u70b9\u7684\u65b9\u6cd5\n```\n\u5148\u5206\u6790\u4e00\u4e0b\u95ee\u9898\n\n\u7ed9\u5b9an\u4e2a\u5404\u4e0d\u76f8\u540c\u7684\u65e0\u5e8f\u5b57\u6bcd\u5bf9\uff08\u533a\u5206\u5927\u5c0f\u5199\uff0c\u65e0\u5e8f\u5373\u5b57\u6bcd\u5bf9\u4e2d\u7684\u4e24\u4e2a\n\n\u5b57\u6bcd\u53ef\u4ee5\u4f4d\u7f6e\u98a0\u5012\uff09\u3002\u8bf7\u6784\u9020\u4e00\u4e2a\u6709n+1\u4e2a\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\n\n\u5bf9\u90fd\u5728\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u3002\n\n\n\u8fd9\u91cc\u5c31\u53ef\u4ee5\u53d1\u73b0\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u627e\u6b27\u62c9\u8def\uff0c\u9996\u5148\u6bcf\u4e2a\u5b57\u7b26\u5c31\u662f\u4ee3\u8868\u7684\u56fe\u4e2d\u7684\u67d0\u4e00\u4e2a\u70b9\uff0c\u5e95\u4e0b\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0c\n\u5c31\u4ee3\u8868\u4e24\u70b9\u4e4b\u95f4\u6709\u8fde\u901a\uff0c\n\u6784\u9020\u5b57\u7b26\u4e32\u5c31\u662f\u5728\u627e\u8f93\u51fa\u4e00\u7b14\u753b\u56de\u8def\uff0c\u660e\u767d\u8fd9\u4e2a\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n```\n\n### \u5177\u4f53\u770b\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\nconst int maxn=10000+10;\nint n,m,dis[maxn][maxn],s1=maxn,ans;//dis\u662f\u7528\u6765\u5b58\u4e24\u70b9\u7684\u8fde\u63a5\nchar ru[maxn],a[maxn];//ru\u5b58\u5ea6\u6570\uff0ca\u5b58\u8def\u5f84\nvoid out(){//\u5199\u4e86\u4e2a\u8f93\u51fa\u51fd\u6570\n    for(int i=ans;i>=1;i--)\n    printf(\"%c\",a[i]);\n    cout<<endl;\n}\nvoid find(int i){//\u5f00\u59cb\u627e\u6b27\u62c9\u8def\uff0ci\u8868\u793a\u627e\u7684\u5f53\u524d\u8fd9\u4e2a\u70b9\n        for(int j=1;j<=150;j++)//\u6700\u5927\u7684\u5c0f\u5199z\u662f\u80af\u5b9a\u6ca1\u8d85\u8fc7150\u7684\uff0c\u6240\u4ee5\u679a\u4e3e\u70b9\u5faa\u73af\u5230150\u5c31\u884c\u4e86\n            if(dis[i][j]>0){//\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u6709\u8fde\u901a\n            dis[i][j]--;//\u6bc1\u56fe\u5927\u6cd5\u597d\n            dis[j][i]--;\n            find(j);//\u641c\u7d22\u4e0b\u4e00\u4e2a\u70b9\n        }\n    a[++ans]=i;//\u8bb0\u5f55\u8def\u5f84\n    return ;\n}\nint main(){\n    cin>>m;\n    for(int i=1;i<=m;i++)\n    {\n        string s;\n        cin>>s;//\u8fd9\u91cc\u6211\u662f\u91c7\u7528string\u5904\u7406\u7684\uff0cchar\u4e5f\u884c\u4e0d\u5f71\u54cd\n        dis[s[0]][s[1]]++;//\u8bb0\u5f55\u8def\u5f84\uff0c\u6570\u7ec4\u7b2c\u4e00\u7ef4\u8868\u793a\u5f53\u524d\u7684\u70b9\uff0c\u4e0e\u7b2c\u4e8c\u7ef4\u7684\u70b9\u6709\uff0c\u8fde\u63a5\n        dis[s[1]][s[0]]++;\n        ru[s[0]]++;//\u8bb0\u5f55\u5ea6\u6570\n        ru[s[1]]++;\n     } \n     int cnt=0,h=0;//\u5f00\u59cb\u627e\u70b9\n    for(int i=1;i<=150;i++)//\u5728\u627e\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\n        if(ru[i]&1){\n            cnt++;\n            if(!h)h=i;\n        }\n    if(!h)//\u627e\u4e0d\u5230\u5947\u70b9\uff0c\u5c31\u662f\u53e6\u5916\u627e\u70b9\n        for(int i=0;i<150;i++)\n            if(ru[i]){h=i;break;}\n    if(cnt&&cnt!=2){\n    \tcout<<\"No Solution\";\n    \treturn 0;\n    }\n    find(h);\n    if(ans<m+1){//\u8fd9\u5c31\u662f\u6211\u4e4b\u524d\u6240\u8bf4\u7684\u5de7\u5999\u4e00\u70b9\u7684\u65b9\u6cd5\uff0c\u5b9e\u9645\u4e0a\u53ea\u8981\u641c\u5b8c\u4ee5\u540e\u5224\u65ad\u4e00\u4e0b\uff0c\u70b9\u6570\u662f\u4e0d\u662f\u76f8\u7b49\u5c31\u884c\u4e86\uff0c\u56e0\u4e3am\u7ec4\u8fde\u8fb9\uff0c\u5fc5\u6709m+1\u4e2a\u70b9\uff0c\u524d\u63d0\u662f\u4e0d\u91cd\u590d\n    \tcout<<\"No Solution\";\n    \treturn 0;\n    }\n    out();//\u8f93\u51fa\n    return 0;//\u5b8c\u7ed3\u6563\u82b1\n}\n```\n\n## \u8c22\u8c22\u7ba1\u7406\u5458\u767e\u5fd9\u4e4b\u4e2d\u6765\u5ba1\u6838\u8fd9\u7bc7\u9898\u89e3\uff0c\u5982\u6709\u95ee\u9898\uff0c\u8bf7\u7ba1\u7406\u5458\u5927\u5927\u548c\u5927\u5bb6\u65a7\u6b63\uff0c\u8c22\u8c22\n# \u6700\u540e\u795d\u5927\u5bb6\n# AK NOIP 2018\n",
        "postTime": 1542280624,
        "uid": 41302,
        "name": "Obito",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "## \u6765\u81ea\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff01\uff01\uff01\uff01\n\u9996\u5148\u4e00\u770b\u9898\uff0c\u6ca1\u601d\u8def\uff0c\u70b9\u5f00\u9898\u89e3\uff0cdalao\u4eec\u90fd\u8bf4\u662f\u6b27\u62c9\u56de\u8def\u677f\u5b50\u3010~~\u6b27\u62c9\u56de\u8def\u662f\u4ec0\u4e48\uff1f\uff1f\uff1f\uff1f~~\u3011\n\u4e8e\u662f\u82b1\u4e86\u534a\u4e0a\u5348\u641e\u61c2\u4e86\u6b27\u62c9\u56de\u8def\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff0c\u6210\u529f\u4e00\u904d\u8fc7\u3002\n\u8fd9\u7bc7\u9898\u89e3\u4f1a\u6bd4\u8f83\u8be6\u7ec6\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u7ed9\u50cf\u6211\u8fd9\u6837\u7684\u849f\u84bb\u51c6\u5907\u7684\u3002\n\n\u5f88\u591a\u601d\u60f3\u90fd\u662f\u4ece\u4e4b\u524d\u5927\u4f6c\u4eec\u7684\u9898\u89e3\u4e2d\u5f97\u6765\u7684\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u662f\u4e4b\u524ddalao\u4eec\u7684\u9898\u89e3\u7684\u4e00\u70b9\u8865\u5145\u5427\u3002\n\n\n------------\n\n\u9996\u5148\u662f\u9898\u610f\u3002\n \n\u6b27\u62c9\u8def\u5f84\uff1a\u5728\u4e00\u4e2a\u56fe\u4e2d\uff0c\u7531i\u70b9\u51fa\u53d1\uff0c\u5c06\u6bcf\u4e2a\u8fb9\u904d\u5386\u4e00\u6b21\u6700\u7ec8\u5230\u8fbej\u70b9\u7684\u4e00\u6761\u8def\u5f84\u3002 \n\n\u6b27\u62c9\u56de\u8def\uff1ai=j\u65f6\u7684\u6b27\u62c9\u8def\u5f84\u3002\n\n\u56e0\u4e3a\u8981\u6c42\u7b54\u6848\u957f\u5ea6\u4e3an+1\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u7684\u9898\u610f\u53ef\u4ee5\u8f6c\u5316\u6210\uff0c\u7ed9\u51fa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u6761\u6b27\u62c9\u56de\u8def/\u8def\u5f84\u3002\n\n\u6240\u4ee5\u5efa\u56fe\uff0c\u5c31\u662f\u5728\u6bcf\u4e00\u7ec4\u5b57\u6bcd\u5bf9\u4e4b\u95f4\u8fde\u65e0\u5411\u8fb9\u3002\n\n------------\n\u53c2\u7167\u4e00\u697c\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u8fd9\u9898\u5e94\u8be5\u8981\u5224\u65ad\u662f\u5426\u8054\u901a\u7684\u3010~~\u867d\u7136\u4e0d\u5224\u65ad\u4e5f\u80fdAC~~\u3011\uff0c\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u662f\u4e2a\u8fde\u901a\u56fe\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u5b57\u6bcd\u90fd\u53ea\u6709\u4e00\u4e2a\u7956\u5b97\u3002\u5982\u679c\u4e0d\u662f\u8fde\u901a\u56fe\uff0c\u76f4\u63a5\u8f93\u51faNo Solution\n\n------------\n\u7136\u540e\u5c31\u662f\u600e\u4e48\u6c42\u6b27\u62c9\u56de\u8def/\u8def\u5f84\u4e86\u3002\n\n\u9996\u5148\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u6b27\u62c9\u56de\u8def/\u8def\u5f84\u3002\n\n\u600e\u4e48\u5224\u65ad\u5462\u3002\u2192\u53c2\u7167\u6b64\u535a\u5ba2(https://blog.csdn.net/qq_34454069/article/details/77779300)\n\n\u5728\u65e0\u5411\u56fe\u4e2d\n\n\u5224\u65ad\u6b27\u62c9\u56de\u8def\uff0c\u53ea\u8981\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u5747\u4e3a\u5076\u6570\u5373\u53ef\u3002\n\n\u5224\u65ad\u6b27\u62c9\u8def\u5f84\uff0c\u5982\u679c\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u5c31\u4f1a\u5b58\u5728\u4e00\u6761\u4ece\u8fd9\u4e24\u4e2a\u4e2d\u7684\u4e00\u4e2a\u5230\u8fbe\u53e6\u4e00\u4e2a\u7684\u6b27\u62c9\u8def\u5f84\u3002 \n\n\u6240\u4ee5\u5728\u8f93\u5165\u662f\u5b58\u50a8\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u3002\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5373\u6ca1\u6709\u6b27\u62c9\u56de\u8def/\u8def\u5f84\uff0c\u5c31\u76f4\u63a5\u8f93\u51faNo Solution\u3002\n\n\u5982\u679c\u5b58\u5728\u6b27\u62c9\u8def\u5f84\uff0c\u76f4\u63a5\u628a\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u90a3\u4e2a\u6709\u5947\u6570\u5ea6\u6570\u7684\u70b9\u5f53\u505a\u8d77\u70b9\uff0c\u8fdb\u884cdfs\u3002\n\n\u5982\u679c\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u5c31\u9009\u62e9\u4e00\u4e2a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u70b9\u5f53\u505a\u8d77\u70b9\uff0c\u8fdb\u884cdfs\u3002\n\n------------\ndfs\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u4e0d\u505c\u5730\u627e\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u8fb9\u3002\u5176\u4e2d\u6709\u4e00\u4e2a\u5730\u65b9\u6211\u60f3\u4e86\u4e00\u4f1a\u624d\u660e\u767d\u3010~~dalao\u8bf7\u81ea\u89c9\u8df3\u8fc7~~\u3011\n\u5c31\u662f\u8def\u5f84\u8981\u5012\u7740\u5b58\uff0c\u662f\u56e0\u4e3a\u5b58\u50a8\u662f\u5728\u56de\u6eaf\u7684\u65f6\u5019\u505a\u7684\uff0c\u6240\u4ee5\u8981\u4ece\u540e\u5f80\u524d\u5b58\u3010\u8fd9\u4e48\u7b80\u5355\u7684\u95ee\u9898\u53ef\u80fd\u4e5f\u5c31\u6211\u4f1a\u60f3\u4e0d\u660e\u767d\u3002\u3002\u3002\u3011\n\n\n------------\n\u6700\u540e\u4e00\u4e9b\u5c0f\u7684\u70b9\u3002\n\n\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\u5c31\u53ef\u4ee5\uff0c\u4e14\u770b\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\n\n\u6211\u76f4\u63a5\u5f00\u7684\u662f125*125\uff0c\u56e0\u4e3aASCII\u7801\u8868\u91cc\u9762z\u662f122\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u5b57\u7b26\u5f53\u4e0b\u6807\u3002\u770bdalao\u7684\u4ee3\u7801\u662f257\uff0c\u4f9d\u7136\u60f3\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u3002\n\n\u7136\u540en\u7684\u8303\u56f4\u662f\u770b\u8ba8\u8bba\u91cc\u9762\u8bf4\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u53ef\u4ee5\u4e0e51\u4e2a\u5b57\u7b26\u76f8\u8fde\uff0c\u6240\u4ee5\u4e3a 52*51/2\uff0c\u6240\u4ee5\u6211\u7b54\u6848\u6570\u7ec4\u5f00\u4e861330\uff1b\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint n,head;\nchar a[2];\nint b[130][130];//\u5b58\u56fe\nint deg[130],fa[130];//deg\u5b58\u50a8\u5ea6\u6570\uff0cfa\u5b58\u50a8\u7236\u4eb2\uff0c\u7528\u6765\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u8054\u901a\nchar ans[1330];//\u7a0d\u5927\u4e8e51*52/2\nint find(int x)\n{\n\tif(fa[x]==x)return x;\n\treturn fa[x]=find(fa[x]);\n}\nvoid dfs(int x)//\u627e\u6b27\u62c9\u56de\u8def/\u8def\u5f84\n{\n\tfor(int i=64;i<=125;i++)\n\t  if(b[x][i])\n\t  {\n\t  \tb[x][i]=b[i][x]=0;\n\t  \tdfs(i);\n\t  }\n\tans[n--]=x;//\u56e0\u4e3a\u662f\u56de\u6eaf\u7684\u65f6\u5019\u5b58\uff0c\u6240\u4ee5\u5012\u7740\u5b58\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=64;i<=125;i++)fa[i]=i;\n    //A\u5728ASCII\u7801\u8868\u91cc\u4e3a65\uff0cz\u4e3a122\uff0c\u6240\u4ee564~125\u5c31\u8db3\u591f\u4e86\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a;\n\t\tb[a[0]][a[1]]=b[a[1]][a[0]]=1;\n\t\tdeg[a[0]]++;\n\t\tdeg[a[1]]++;\n\t\tint xx=find(a[0]),yy=find(a[1]);\n\t\tfa[xx]=yy;\n\t}\n\tint cnt=0;\n\tfor(int i=64;i<=125;i++)\n\t  if(fa[i]==i&&deg[i])cnt++;//\u7956\u5b97\u7ed3\u70b9\n\tif(cnt!=1){cout<<\"No Solution\"<<endl;return 0;}//\u5982\u679c\u4e0d\u662f\u8fde\u901a\u56fe\n\tcnt=0;\n\thead=0;\n\tfor(int i=64;i<=125;i++)\n\t{\n\t\tif(deg[i]&1)\n\t\t{\n\t\t\tcnt++;\n\t\t\tif(head==0)head=i;//\u987a\u9053\u5b58\u50a8\u8d77\u70b9\n\t\t}\n\t}\n\tif(cnt&&cnt!=2){cout<<\"No Solution\"<<endl;return 0;}\n    //\u5982\u679c\u6709\u5947\u6570\u5ea6\u6570\u7684\u70b9\uff0c\u5e76\u4e14\u4e0d\u662f\u4e24\u4e2a\uff0c\u8bf4\u660e\u4e0d\u5b58\u5728\u6b27\u62c9\u56de\u8def/\u8def\u5f84\n    if(head==0)//\u5982\u679c\u662f\u6b27\u62c9\u56de\u8def\n      for(int i=64;i<=125;i++)\n        if(deg[i]){head=i;break;}//\u627e\u6b27\u62c9\u56de\u8def\u7684\u8d77\u70b9\n    dfs(head);\n    cout<<ans;\n    return 0;\n} \n```\n\n\u6700\u540e\u5410\u69fd\uff0c\u5199\u9898\u89e3\u597d\u9ebb\u70e6\u3002\u3002\u3002\n\n\u3010\u4f46\u662f\u5f88\u6709\u6536\u83b7\u3011\n\n\u5982\u679c\u6709\u4e0d\u6e05\u695a\u6216\u8005\u9519\u8bef\u7684\u5730\u65b9\u6b22\u8fce\u79c1\u4fe1~~",
        "postTime": 1539847578,
        "uid": 27059,
        "name": "\u5317\u65b9\u6709\u5c0f\u4ed9\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u672c\u4eba\u7b2c\u4e00\u6b21\u5199\u6b27\u62c9\u56de\u8def\u7684\u9898\uff0c\u8c03\u8bd5\u5f88\u4e45\u7ec8\u4e8e\u5199\u51fa\u6765\u4e86\uff0c\u6545\u53d1\u4e00\u7bc7\u9898\u89e3\u6765\u548c\u5927\u5bb6\u4ea4\u6d41\u4e00\u4e0b\n\n\u9996\u5148\u63a8\u8350\u4e00\u4e0b[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.org/blog/foreverlasting/ti-xie-wu-xu-zi-mu-dui)\uff0c\u611f\u8c22\u4f5c\u8005 @[$\\color{red}\\text{foreverlastnig}$](https://www.luogu.org/space/show?uid=32878) \u5927\u4f6c\u7684\u5e2e\u52a9\n\n\u6211\u6765\u8865\u5145\u8bf4\u660e\u4e00\u4e0b\u81ea\u5df1\u5173\u4e8e`rb[n--]=x;`\u7684\u4e00\u4e9b\u7406\u89e3\n\n\u53ef\u80fd\u5f88\u591a\u4eba\u50cf\u6211\u4e00\u6837\uff0c\u8ba4\u4e3a\u8fd9\u79cd\u5728\u51fd\u6570\u7ed3\u675f\u65f6\u9006\u5e8f\u50a8\u5b58\u548c\u5728\u51fd\u6570\u5f00\u59cb\u65f6\u987a\u5e8f\u50a8\u5b58\u65f6\u4e00\u6837\u7684\uff0c\u4e8e\u662f\u5c31\u91c7\u7528\u4e86\u540e\u8005\uff0c\u7ed3\u679c\u63d0\u4ea450\u5206\uff0c\u4e0b\u8f7d\u4e86\u6570\u636e\uff0c\u770b\u5230\u4e86\u5f62\u5982$xx$\u8fd9\u6837\u7684\u5b57\u6bcd\u5bf9\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u5904\u7406\u3002\u4e0b\u9762\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6211\u8d34\u4e00\u4e0b\u5bfb\u627e\u6b27\u62c9\u8def\u7684\u9012\u5f52\u4ee3\u7801\uff1a\n\n50pts:\n```cpp\nvoid circuit(char u)\n{\n    ans+=u;\n    for(int i=0;i<g[u].size();i++)\n    {\n        char v=g[u][i];\n        if(!vis[u][v])\n        {\n            vis[u][v]=vis[v][u]=true;\n            circuit(v);\n        }\n    }\n}\n```\n100pts:\n```\nvoid circuit(char u)\n{\n    for(int i=0;i<g[u].size();i++)\n    {\n        char v=g[u][i];\n        if(!vis[u][v])\n        {\n            vis[u][v]=vis[v][u]=true;\n            circuit(v);\n        }\n    }\n    ans[n--]=u;\n}\n```\n\u5176\u4e2d$ans$\u662f\u4e00\u4e2a`string`\u7c7b\u7684\u7528\u6765\u50a8\u5b58\u7b54\u6848\u7684\u53d8\u91cf\n\n\u53ef\u4ee5\u53d1\u73b0\u533a\u522b\u5c31\u5982\u4e0a\u6587\u6240\u8a00\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u4e0d\u540c\u5462\uff1f\n\n\u770b\u4e00\u4e0b\u8fd9\u7ec4\u6570\u636e\n```\ninput:\n5\nxx\nxa\naa\nab\nbx\noutput 50pts:\naabxax\noutput 100pts:\naabxxa\n```\n\u600e\u4e48\u56de\u4e8b\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c50pts\u4ee3\u7801\u4f1a\u8d2a\u5fc3\u5730\u6311\u8f83\u5c0f\u7ed3\u70b9\u8bbf\u95ee\uff0c\u5f53\u8bbf\u95ee\u5230\u5012\u6570\u7b2c\u4e09\u4e2a\u5b57\u6bcd$x$\u65f6\uff0c\u4f1a\u6beb\u4e0d\u72b9\u8c6b\u5730\u524d\u5f80$a$\uff0c\u800c\u4e0d\u7ba1\u8fd9\u6837\u505a\u662f\u5426\u80fd\u904d\u5386\u5b8c\uff0c\u56e0\u6b64\u8d70\u5230$a$\u65e0\u8def\u53ef\u8d70\u4e86\uff0c\u53c8\u56de\u5230$x$\u904d\u5386\u53e6\u5916\u4e00\u4e2a$x$\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u7684\u7b54\u6848\n\n\u800c100pts\u4ee3\u7801\u7684\u597d\u5904\u5728\u4e8e\uff0c\u5b83\u662f\u5728\u904d\u5386\u7ed3\u675f\u540e\u5c06\u8be5\u7ed3\u70b9\u9006\u5e8f\u5b58\u5165\u7b54\u6848\u4e2d\uff0c\u8fd9\u5c31\u4fdd\u8bc1\u4e86\u65e0\u8def\u53ef\u8d70\u7684\u8282\u70b9$a$\u4e00\u5b9a\u662f\u8be5\u5e8f\u5217\u7684\u7ed3\u5c3e\uff08\u56e0\u4e3a\u5982\u679c\u8be5\u7ed3\u70b9\u8fd8\u80fd\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5b83\u5c31\u4e00\u5b9a\u5728\u90a3\u4e9b\u80fd\u7ee7\u7eed\u8bbf\u95ee\u7684\u70b9\u7684\u524d\u9762\uff09\uff0c\u7136\u540e\u56de\u5230\u5012\u6570\u7b2c\u4e09\u4e2a\u5b57\u6bcd$x$\u5bfb\u627e\u4e0b\u4e00\u4e2a$x$\u8bbf\u95ee\u3002\u6b64\u5904\u4e0d\u7528\u62c5\u5fc3$x$\u662f\u5426\u4e5f\u662f\u4e00\u4e2a\u7ed3\u5c3e\uff08\u90a3\u6837\u5c31\u65e0\u89e3\u4e86\uff09\uff0c\u56e0\u4e3a\u901a\u8fc7\u9012\u5f52\u524d\u7684\u5224\u65ad\uff0c\u8fd9\u5f20\u56fe\u4e2d\u4e00\u5b9a\u5b58\u5728\u6b27\u62c9\u8def\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u7ec8\u70b9\n\n\u8d34\u51fa\u6211\u56e0\u4e3aSTL\u800c\u5e38\u6570\u5f88\u5927\u7684\u4ee3\u7801\u5427\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#include<vector>\n#include<map>\nusing namespace std;\nconst int N=300;\ntypedef map<char,vector<char> > graph;\ngraph g;\nint n;\nbool vis[N][N];\nchar f[N],ans[N];\nchar find_(char p)\n{\n    if(f[p]==p) return p;\n    return f[p]=find_(f[p]);\n}\nvoid union_(char p1,char p2)\n{\n    char f1=find_(p1);\n    char f2=find_(p2);\n    f[f1]=f2;\n}\nvoid circuit(char u)\n{\n    for(int i=0;i<g[u].size();i++)\n    {\n        char v=g[u][i];\n        if(!vis[u][v])\n        {\n            vis[u][v]=vis[v][u]=true;\n            circuit(v);\n        }\n    }\n    ans[n--]=u;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(char c='a';c<='z';c++) f[c]=c;\n    for(char c='A';c<='Z';c++) f[c]=c;\n    for(int i=1;i<=n;i++)\n    {\n        char u,v;\n        while(!isalpha(u=getchar()));\n        while(!isalpha(v=getchar()));\n        g[u].push_back(v);\n        g[v].push_back(u);\n        union_(u,v);\n    }\n    for(graph::iterator it=g.begin();it!=g.end();it++)\n    {\n        sort(it->second.begin(),it->second.end());\n    }\n    int cnt=0;\n    char bz=find_(g.begin()->first);\n    for(graph::iterator it=g.begin();it!=g.end();it++)\n    {\n        if(bz!=find_(it->first)) cnt++;\n    }\n    if(cnt)\n    {\n        puts(\"No Solution\");\n        return 0;\n    }\n    cnt=0;\n    for(graph::iterator it=g.begin();it!=g.end();it++)\n    {\n        if(it->second.size()&1)\tcnt++;\n    }\n    if(cnt==1 || cnt>2)\n    {\n        puts(\"No Solution\");\n        return 0;\n    }\n    if(!cnt)\n    {\n        circuit(g.begin()->first);\n    }\n    else\n    {\n        for(graph::iterator it=g.begin();it!=g.end();it++)\n        {\n            if(it->second.size()&1)\n            {\n                circuit(it->first);\n                break;\n            }\n        }\n    }\n    printf(\"%s\",ans);\n    return 0;\n}\n```\n\n**\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u6307\u51fa\u4e0d\u8db3**",
        "postTime": 1553784547,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u4f7f\u7528\u7b97\u6cd5\uff1a[Hierholzer\u7b97\u6cd5](https://en.wikipedia.org/wiki/Eulerian\\_path#Hierholzer's\\_algorithm)\u3002\n\n\u505a\u6cd5\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u901a\u8fc7dfs\u7ed3\u675f\u65f6\u95f4\u6233\u6765\u6784\u9020\u4e32\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\u3002\n\n\n```cpp\n#include <cstdio>\n#define maxn 257\nint G[maxn][maxn]; // \u56fe\nint deg[maxn]; // \u5ea6\nchar tmp[maxn]; \nchar res[maxn * maxn]; // \u7ed3\u679c\nint n;\nvoid dfs(int i) { \n    for(int j = 0; j < maxn; j++) {\n        if(G[i][j]) {\n            G[i][j] = G[j][i] = 0; // \u5220\u8fb9\n            dfs(j);\n        }\n    }\n    res[n--] = i; // \u8bb0\u5f55\n}\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 0; i < n; i++) {\n        scanf(\"%s\", tmp);\n        G[tmp[0]][tmp[1]] = G[tmp[1]][tmp[0]] = 1;\n        deg[tmp[0]]++;\n        deg[tmp[1]]++;\n    }\n    char fir = 0, cnt = 0;\n    for(int i = 0; i < maxn; i++) { // \u8ba1\u7b97\u5ea6\u6570\u60c5\u51b5\n        if(deg[i] & 1) {\n            cnt++;\n            if(!fir) fir = i;\n        }\n    }\n    if(!fir) for(int i = 0; i < maxn; i++) if(deg[i]) {fir = i; break;}\n    if(cnt && cnt != 2) return puts(\"No Solution\"), 0; // \u5224\u65ad\u65e0\u89e3\n    dfs(fir);\n    puts(res);\n    return 0;\n}\n```",
        "postTime": 1516109007,
        "uid": 21421,
        "name": "pantw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u6b27\u62c9\u8def~\n\n\u56fe\u7684\u8bb0\u5f55\u53ea\u7528\u4e86\u4e00\u4e2abool\u53d8\u91cfb\u6765\u8bb0\u5f55\uff0c\u6ca1\u6709\u7528vector\u3002\n\n\u5224\u65ad\u6b27\u62c9\u8def\u7684\u540c\u65f6\u5c31\u80fd\u8bb0\u5f55\u7b54\u6848\uff0c\u4e0d\u9700\u8981\u5355\u72ec\u5224\u65ad~\n\n\u5b57\u7b26\u4e32\u662f\u4ece0\u8f93\u5165\u7684~\u603b\u662f\u8bb0\u4e0d\u4f4f\u5450~[\u60b2\u4f24]\n\n\u4e0d\u5f97\u4e0d\u8bf4\u6b27\u62c9\u8def\u592a\u795e\u5947\u4e86~\n\n\uff08A\u5230z\u4e4b\u95f4\u8fd8\u6709\u5176\u4ed6\u5b57\u7b26\uff0c\u6240\u4ee5\u4e00\u5171\u662f58\u4e2a~\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\nint a[106],c[10006],du[101],n,x,y,\n    k=0xfffffff,tot;\nbool b[106][106];\nchar s[2];\nint min(int u,int v) {\n\treturn u<v ? u:v;\n}\nvoid dfs(int u) {\n\tfor(int i=0; i<58; i++)/*A\u5230z\u4e4b\u95f4\u8fd8\u6709\u4e00\u4e9b\u5b57\u7b26\uff0c\u603b\u517158\u4e2a*/ {\n\t\tif(b[u][i]) {\n\t\t\tb[u][i]=b[i][u]=0;\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tc[++tot]=u;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++)\t{\n\t\tscanf(\"%s\",&s);\n\t\tx=s[0]-'A';\n\t\ty=s[1]-'A';/*\u5b57\u7b26\u4e32\u4ece\u96f6\u5f00\u59cb\u8bfb\u5165*/\n\t\tk=min(k,min(x,y));\n\t\tb[x][y]=b[y][x]=1;\n\t\tdu[x]++;\n\t\tdu[y]++;\n\t}\n\tfor(int i=0; i<58; i++)\n\t\tif(du[i]%2==1)\n\t\t\ta[++a[0]]=i;\n\tif(a[0]==0) dfs(k);\n\telse if(a[0]==2) dfs(a[1]);\n\telse\t{\n\t\tprintf(\"No Solution\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=tot; i>=1; i--)\n\t\tprintf(\"%c\",c[i]+'A');\n\treturn 0;\n}\n\n\n```",
        "postTime": 1540016211,
        "uid": 122943,
        "name": "ynzzr",
        "ccfLevel": 0,
        "title": "\u65e0\u5e8f\u5b57\u6bcd\u5bf9"
    },
    {
        "content": "# \u6b27\u62c9\u56de\u8def\n\u597d\u5427\uff0c\u8fd9\u867d\u7136\u662f\u4e00\u9053\u51e0\u4e4e\u662f\u6b27\u62c9\u56de\u8def\u677f\u5b50\u7684\u9898\u76ee\uff0c\u4f46\u662f\u7531\u4e8e\u7275\u626f\u5230\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u8fd8\u662f\u6709\u4e00\u4e9b\u5c0f\u5751\u7684\u7ec6\u8282\uff08\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86\uff09\n\n\u9996\u5148\uff0c\u6b27\u62c9\u8def\u662f\u6307\u56fe\u662f\u8fde\u901a\u7684\u800c\u4e14\u6709\u4e14\u53ea\u6709\u4e24\u4e2a\u5947\u70b9\u3002\u800c\u6b27\u62c9\u56de\u8def\u5219\u662f\u67090\u4e2a\u5947\u70b9\uff0c\u6240\u4ee5\u5728\u4ee3\u7801\u4e2d\u9700\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u5047\u5982\u666e\u901a\u7684\u90a3\u4e48\u65e0\u6240\u8c13\uff0c\u4f46\u662f\u9898\u76ee\u8981\u6c42\u5b57\u5178\u5e8f\u8f93\u51fa\n```cpp\nif(du[i]%2==1) //\u627e\u6b27\u62c9\u8def\u6700\u5c0f\u8d77\u70b9 \n\t{\n\t    s=min(s,i),cnt++;\n\t}\n\tif(cnt!=0&&cnt!=2) //\u5047\u5982\u65e2\u4e0d\u662f\u6b27\u62c9\u8def\u4e5f\u4e0d\u662f\u6b27\u62c9\u56de\u8def \n\t{\n\t    cout<<\"No Solution\"<<endl;\n\t    return 0;\n\t}\n\tif(cnt == 0)//\u5982\u679c\u662f\u6b27\u62c9\u56de\u8def\uff0c\u90a3\u6b64\u65f6s\u8fd8\u662fmaxn\uff0c\u6240\u4ee5\u9700\u8981\u518d\u5224\u65ad\u4e00\u4e0b \n    for(int i=1;i<=52;i++) if(du[i]) {\n        s = i;\n        break;\n    }\n```\n\u63a5\u4e0b\u6765\u53ef\u4ee5\u628a\u5b57\u7b26\u8f6c\u5316\u6210\u6570\u5b57\u6765\u7b80\u5316\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5**i-'A'+1**,\u56e0\u4e3a\u540c\u65f6\u6709\u5927\u5c0f\u5199\uff0c\u6240\u4ee5\u8981\u5206\u5f00\u5904\u7406\uff08\u8fd9\u91cc\u5751\u4e86\u6211\u534a\u5929\uff0c\u6211\u624d\u77e5\u9053ASCII\u7801\u8868\u91cc\u5927\u5199\u4e0e\u5c0f\u5199\u5b57\u6bcd\u4e4b\u95f4\u8fd8\u9694\u7740\u51e0\u4e2a\u7b26\u53f7\uff09\n```\nint pan(char x)\n{\n\tif(x <= 'z' && x >= 'a') return x - 'a' + 27;\n    else return x - 'A' + 1;\n}\n```\n\u6700\u540e\u8fd9\u9053\u9898\u4fdd\u5b58\u6570\u636e\u662f\u53ef\u4ee5\u7528vector\u6bd4\u8f83\u65b9\u4fbf\u800c\u4e14\u4e0d\u4f1a\u7206\uff0c\u5047\u5982\u7528\u6570\u7ec4\u7684\u8bdd\uff0c\u4e00\u5b9a\u8981\u5f00\u5927\u4e00\u70b9\uff0c\u5426\u5219\u7b2c\u5341\u4e2a\u70b9\u4f1aWA \u7136\u540e\u5c31\u662f\u5b8c\u6574\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2000;\nint e[maxn][maxn]={0},du[maxn]={0},lu[maxn],s=0x3f3f3f3f,cnt=0,pos=0,n;\nint pan(char x)\n{\n\tif(x <= 'z' && x >= 'a') return x - 'a' + 27;\n    else return x - 'A' + 1;\n}\nint pan2(char x)\n{\n\tif(x <= 26) return 'A' + x - 1;\n    return 'a' + x - 27;\n}\nvoid dfs(int x)\n{\n\tfor(int y=1;y<=52;y++)\n\t{\n\t\tif(e[x][y]==1)\n\t\t{\n\t\t\te[x][y]=e[y][x]=0;\n\t\t\tdfs(y);\n\t\t}\n\t}\n\tlu[++pos]=x;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tchar x,y;\n\t\tcin>>x>>y;\n\t\tdu[pan(x)]++,du[pan(y)]++;\n\t\te[pan(x)][pan(y)]=e[pan(y)][pan(x)]=1;\n\t}\n\tfor(int i=1;i<=52;i++)\n\tif(du[i]%2==1) //\u627e\u6b27\u62c9\u8def\u6700\u5c0f\u8d77\u70b9 \n\t{\n\t    s=min(s,i),cnt++;\n\t}\n\tif(cnt!=0&&cnt!=2) //\u5047\u5982\u65e2\u4e0d\u662f\u6b27\u62c9\u8def\u4e5f\u4e0d\u662f\u6b27\u62c9\u56de\u8def \n\t{\n\t    cout<<\"No Solution\"<<endl;\n\t    return 0;\n\t}\n\tif(cnt == 0)//\u5982\u679c\u662f\u6b27\u62c9\u56de\u8def\uff0c\u90a3\u6b64\u65f6s\u8fd8\u662fmaxn\uff0c\u6240\u4ee5\u9700\u8981\u518d\u5224\u65ad\u4e00\u4e0b \n    for(int i=1;i<=52;i++) if(du[i]) {\n        s = i;\n        break;\n    }\n\tdfs(s);\n\tfor(int i=pos;i>=1;i--)\n\tprintf(\"%c\",pan2(lu[i]));\n\t\n\treturn 0;\n}\n```",
        "postTime": 1517991049,
        "uid": 50976,
        "name": "songhn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": " _ \u5982\u679c\u5bf9\u4e8e\u6b27\u62c9\u8def\u5f84\u8fd8\u6709\u4e0d\u592a\u6e05\u6670\u7684\u540c\u5b66\u53ef\u4ee5\u5148\u9605\u6b64\u9875\uff1a_ \n \n###  **_ \u6b27\u62c9\u56de\u8def\u53ca\u5176\u76f8\u5173_ **\n \n**\u5b9a\u4e49\uff1a**\n\n\uff11.\u8fd9\u4e2a\u95ee\u9898\u4e3b\u8981\u5f15\u4f38\u81ea\u4e00\u4e2a\u53e4\u8001\u7684\u95ee\u9898\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u4e0a\u767e\u5ea6\u767e\u79d1\u4e0a\u627e\u3002\u901a\u4fd7\u800c\u8a00\uff0c\u5c31\u662f\u4e00\u4e2a\u4e00\u7b14\u5212\u95ee\u9898\u3002\n\n\uff12.\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u4e00\u6b21\u4e14\u4ec5\u6b64\u4e00\u6b21\u7684\u4e00\u6761\u56de\u8defcalled\u6b27\u62c9\u56de\u8def\u3002||\u7ed9\u5b9a\u4e00\u4e2a\u56fe\uff0c\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u4e00\u6b21\u4e14\u4ec5\u6b64\u4e00\u6b21\u7684\u8def\u5f84callde\u6b27\u62c9\u8def\u5f84\u3002\n\n\uff13.\u6b27\u62c9\u56fe\uff1a\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u56fe\u3002\u534a\u6b27\u62c9\u56fe\uff1a\u5b58\u5728\u6b27\u62c9\u8def\u5f84\uff0c\u4e14\u4e0d\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u56fe\u3002\n\u8054\u7cfb\uff1a\n\n\u636e\u67d0\u5de8\u5f31\u800c\u8a00\uff0c\u6b27\u62c9\u56de\u8def\u5c5e\u4e8e\u6b27\u62c9\u8def\u5f84\uff0c\u800c\u6b27\u62c9\u8def\u5f84\u8981\u6c42\u8fdc\u6bd4\u6b27\u62c9\u56de\u8def\u8981\u6c42\u4f4e\u3002\n\n**\u89c4\u5f8b\uff06\u6027\u8d28\uff1a**\n\n\u5bf9 _\u65e0\u5411\u56fe_ \u800c\u8a00\uff1a\n\n\uff11.\u5b9a\u7406\u4e00\uff1a\u82e5\u56fe\u4e3a\u6b27\u62c9\u56fe\uff0c\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u5ea6\u6570\u4e3a\u5076\u6570\u4e14\u8054\u901a\u3002\n\n\u8bc1\u660e\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u65e2\u53ef\u4ee5\u8fdb\u4e5f\u53ef\u4ee5\u51fa\uff0c\u6240\u4ee5\u7edd\u5bf9\u662f\u53ef\u4ee5\u505a\u5230\u6b27\u62c9\u8def\u5f84\u7684\u3002\n\n\u7531\u6b64\uff0c\u53ef\u4ee5\u5f15\u7533\u81f3\u5bf9\u4e8e\u6b27\u62c9\u56de\u8def\u7684\u6c42\u89e3\u7b97\u6cd5\uff1a\u82e5\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u5219\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u51fa\u53d1\u5411\u4efb\u610f\u4e0e\u5176\u76f8\u8fde\u7684\u70b9\u9012\u5f52\u641c\u7d22\uff0c\u90fd\u662f\u53ef\u4ee5\u904d\u5386\u56de\u5230\u8d77\u70b9\u7684\u3002\n\n\u4e0d\u4ec5\u5982\u6b64\uff0c\u8fd8\u53ef\u4ee5\u5f15\u7533\u51fa\u4e00\u4e2a\u8bc1\u660e\u534a\u6b27\u62c9\u56fe\u7684\u63a8\u8bba\uff1a\n\n\u63a8\u8bba\u4e00\uff1a\u82e5\u56fe\u4e3a\u534a\u6b27\u62c9\u56fe\uff0c\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u6709\u4e24\u70b9\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u5176\u4ed6\u70b9\u5ea6\u6570\u7686\u4e3a\u5076\u6570\u4e14\u8054\u901a\u3002\n\n\u5bf9\u4e8e _\u6709\u5411\u56fe_ \u800c\u8a00\uff1a\n\n\uff12.\u5b9a\u7406\u4e8c\uff1a\u6709\u5411\u56fe\u4e3a\u6b27\u62c9\u56fe\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u57fa\u56fe\u8054\u901a\uff0c\u4e14\u6240\u6709\u70b9\u7684\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6\u5373\u53ef\u3002\uff08\u6ce8\u610f\u533a\u522b\uff09\uff1b\n\n\u63a8\u8bba\u4e8c\uff1a\u6709\u5411\u56fe\u4e3a\u534a\u6b27\u62c9\u56fe\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u4e2d\u4e00\u4e2a\u9876\u70b9\u7684\u5165\u5ea6\u5c11\u4e8e\u51fa\u5ea6\uff11\uff0c\u800c\u53e6\u4e00\u70b9\u51fa\u5ea6\u5c11\u4e8e\u5165\u5ea6\uff11\uff0c\u57fa\u56fe\u8054\u901a\u65f6\u3002\n\n\u77e5\u9053\u4e86\u5b9a\u7406\u8fd8\u9700\u8981\u4e86\u89e3\u4e00\u4e9b\u6027\u8d28\u624d\u53ef\u4ee5\u6c42\u89e3\u6b27\u62c9\u56de\u8def\uff1a\n\n\u6027\u8d28\u4e00\uff1a\u5f53c\u662f\u56fe\u4e2d\u4e00\u4e2a\u7b80\u5355\u56de\u8def\uff0c\u6b64\u56de\u8def\u5220\u53bb\uff0c\u7559\u4e0b\u7684\u56fe\u7684\u5404\u6781\u5927\u8054\u901a\u5b50\u56fe\u90fd\u5b58\u5728\u4e00\u6761\u6b27\u62c9\u56de\u8def\u3002\uff08\u663e\u7136\uff0c\u7528\u70b9\u5c06\u5404\u8054\u901a\u5b50\u56fe\u8fde\u63a5\uff0c\u624d\u80fd\u5f62\u6210\u6b27\u62c9\u56de\u8def\u3002\uff09\n\n\u6027\u8d28\u4e8c\uff1a\u5f53\uff231\uff232\u662f\u4e24\u4e2a\u7b80\u5355\u56de\u8def\uff0c\u65e0\u8fb9\u76f8\u4ea4\uff0c\u4ec5\u6709\u4e00\u70b9\u516c\u5171\uff0c\u53ef\u4ee5\u5c06\u5176\u5408\u5e76\u6210\u53e6\u4e00\u4e2a\u7b80\u5355\u56de\u8def\u3002\n\n### \u518d\u8d34\u4e0a\u6b64\u9898\uff1a\n[\u7cd6\u679c](https://www.luogu.org/problemnew/show/P1341#sub)\n### \u601d\u8def\uff1a\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u88f8\u7684\u6b27\u62c9\u8def\u5f84\u7684\u9898\u76ee\uff0c\u5bf9\u4e8e\u6b64\u9898\uff0c\u6211\u4eec\u8981\u5c06\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5316\u6210\u4e00\u4e2a\u70b9\u6765\u770b\u5f85\uff0c\u6bcf\u6b21\u7ed9\u51fa\u7684\u5173\u7cfb\u90fd\u53ef\u4ee5\u505a\u4e3a\u4e00\u6761\u8fb9\u6765\u770b\u5f85\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u6c42\u67d0\u4e00\u4e2a\u5c06\u6240\u6709\u5173\u7cfb\u6ee1\u8db3\u7684\u6392\u5217\uff0c\u5c31\u662f\u5728\u6784\u9020\u56fe\u4e2d\u627e\u5230\u4e00\u6761\u6b27\u62c9\u8def\u5f84\u3002\n\n\u628a\u5b83\u4f5c\u4e3a\u534a\u6b27\u62c9\u56fe\u6765\u770b\u5f85\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5bf9\u5b83\u7684\u5b58\u5728\u6027\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u4e24\u4e2a\u4ee5\u4e0a\u5165\u5ea6\u4e3a\u4e00\u7684\u70b9\uff0c\u90a3\u4e48\u6beb\u65e0\u7591\u95ee\u6b64\u56fe\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u8f93\u51fa\"No Solution\" \u5373\u53ef\u3002\n\n\u6211\u4eec\u8fd8\u8981\u8003\u8651\u51e0\u79cd\u60c5\u51b5\uff0c\u9996\u5148\uff0c\u53ef\u80fd\u4e0d\u5b58\u5728\u5165\u5ea6\u4e3a\u4e00\u7684\u70b9\uff0c\u90a3\u4e48\u6784\u6210\u6b27\u62c9\u56fe\uff0c\u4e5f\u7b26\u5408\u8981\u6c42\u3002\u5176\u6b21\uff0c\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u70b9\u5165\u5ea6\u4e3a\u4e00\uff0c\u4e5f\u662f\u4e0d\u7b26\u5408\u7684\u3002\u8fd9\u70b9\u9700\u8981\u7279\u5224\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u5bb9\u6613\u8ba9\u4eba\u60f3\u5230\u7684\u5c31\u662f\u6df1\u641c\uff0c\u4f46\u8fd8\u6709\u8bb8\u591a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\uff11.\u5bf9\u4e8e\u5b57\u6bcd\u7684\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5230map\u5b58\uff0c\u4e00\u4e2a\u5b58\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7f16\u53f7\uff0c\u53e6\u4e00\u4e2a\u5b58\u6bcf\u4e2a\u7f16\u53f7\u5bf9\u5e94\u5b57\u6bcd\uff0c\u6ce8\u610f\u5b58\u56fe\u3002\uff08\u67d0\u9f9a\u59d3\u5927\u4f6c\u6307\u70b9\uff09\uff1b\n\uff12.\u641c\u7d22\u8981\u6ce8\u610f\u56de\u6eaf\uff0c\u5c3d\u91cf\u5728\u6bcf\u4e00\u4e2a\u641c\u7d22\u6811\u7684\u5c42\u4e0a\u4fdd\u7559\u6bcf\u4e00\u6b65\u7684\u6570\u636e\uff1b\n\uff13.\u6b64\u9898\u60c5\u51b5\u8f83\u591a\u8981\u8fdb\u884c\u7ec6\u81f4\u8ba8\u8bba\uff08\u4e0d\u8981\u5b66\u6211\uff09\uff1b\n\uff14.\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\uff0c\u8981\u6309\u5b57\u5178\u5e8f\u5904\u7406\uff08\u6b64\u65f6\u9f9a\u59d3\u5927\u4f6c\u53c8\u51fa\u573a\uff09\u5148\u5c06\u8fb9\u6309\u5b57\u6bcd\u5e8f\u5217\u6392\u597d\uff0c\u518d\u5efa\u56fe\uff08\u4e5f\u53ef\u4e0d\u5efa),\u904d\u5386\u5b57\u6bcd\u9009\u62e9\u5f00\u7aef\u5373\u53ef\uff0c\u9884\u8bbe\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff0c\u6bcf\u884c\u4e00\u6b65\u52a0\u4e0a\u5373\u53ef\u3002\n\n\u8d34\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=1e+5;\nint n, cnt, t, start, end, step;\nint head[N], next[N], to[N], w[N];\nint du[N];\nstring s;\nbool vis[N];\nstruct node{\n    int to,from,p;\n}edge[N];\nmap<int,char>letter;\nmap<char,int>num;\nbool cmp(const node&a,const node&b){\n    return a.to > b.to;\n}\nvoid add(int u, int v, int p){\n    next[++t] = head[u];\n    to[t] = v;\n    w[t] = p;\n    head[u] = t;\n    ++du[u];\n}\n\nvoid dfs(int x, int step, string s){\n    if(!x) return ;\n    s+=letter[x];\n    if(step == n + 1){\n        if(x == end||end == 0){\n            cout << s;\n            exit(0);\n        }//\u7ec6\u8282\u3002\n        return ;\n    }\n    for(int i = head[x]; i; i = next[i]){\n        if(!vis[w[i]]&&!vis[w[i]^1]){\n            vis[w[i]] = 1;\n            dfs(to[i], ++step, s);//\u4e5f\u53ef\u4ee5\u5199\u6210step+1;\u53ef\u4ee5\u51cf\u5c11\u56de\u6eaf\u3002\n            vis[w[i]]=0;\n            step--;//\u6ce8\u610f\u56de\u6eaf\u3002\n        }\n    }\n}\t\t\t\n\nint main(){\n    //freopen(\"unorder.in\", \"r\", stdin);\n    //freopen(\"unorder.out\", \"w\", stdout);\n    scanf(\"%d\", &n);\n    char a, b;\n    for(int i = 0; i <= 25; i++){\n        num[i +'A'] = i + 1, letter[i + 1] = i +'A';\n        num[i +'a'] = i + 27,letter[i + 27] = i +'a';\n    }//\u6ce8\u610f\u6b64\u5904\u9f9a\u5f0f\u5904\u7406\u3002\n    for(int i = 1; i <= n; i++){\n        cin >> a >> b;\n        edge[++cnt] = (node){num[a], num[b], i<<1};\n        edge[++cnt] = (node){num[b], num[a], i<<1|1};//\u6253\u4e0a\u6807\u8bb0\uff0c\u53ef\u4ee5\u6709\u76ca\u4e8e\u4e4b\u540e\u7684\u5224\u65ad\uff0c\u662f\u4e0d\u662f\u5f88\u5de7\u5999\u554a\uff0c\u53ef\u60dc\u4e0d\u662f\u6211\u60f3\u7684\u3002\n    }\n    sort(edge + 1, edge + cnt + 1, cmp);\n    for(int i =1; i <= cnt; i++){\n        add(edge[i].from, edge[i].to, edge[i].p);\n    }\n    for(int i = 1;i <= 52; i++){\n        if(du[i] & 1){\n            if(!start) start=i;\n            else if(!end) end=i;\n            else{\n                printf(\"No Solution\");\n                return 0;\n            }\n        }\n    }//\u7279\u5224\uff0c\u82e5\u6ca1\u6709\uff0c\u5219\u968f\u673a\u627e\u7b2c\u4e00\u4e2a\u5165\u5ea6\u4e3a\u4e8c\u5373\u53ef\u3002\n    if(!start){\n        for(int i = 1; i <= 52; i++){\n            if(du[i]){\n                start=i;\n                break;\n            }\n        }\n    }\n    s=\"\";\n    dfs(start, step+1, s);\n    printf(\"No Solution\");\n    return 0;\n}\t\n\n```",
        "postTime": 1541301334,
        "uid": 125880,
        "name": "PJone",
        "ccfLevel": 0,
        "title": "\u6b27\u62c9\u8def\u5f84\uff06\u65e0\u5e8f\u5b57\u7b26\u5bf9"
    },
    {
        "content": "# DFS\n\u672c\u9898\u5f88\u660e\u663e\u662f\u627e\u4e00\u6761**ASCII\u7801\u6700\u5c0f\u7684\u6b27\u62c9\u56de\u8def**\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u81ea\u7136\u76f8\u5230\u7528DFS\u3002~~\uff08\u867d\u7136\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u5199\u6b27\u62c9\u56de\u8def\uff09~~\n\n\u6570\u636e\u8303\u56f4\u662f\u663e\u800c\u6613\u89c1\u7684\u2014\u2014\u2014\u2014\u4ece'A'-'z'\uff0c\u517152\u4e2a\u5b57\u6bcd\uff0c\u6240\u4ee5\u6211~~\u5077\u61d2~~\u5199\u4e86\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635~~\uff08\u6ed1\u7a3d\uff09~~\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u5177\u4f53\u770b\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nint g['z' + 10]['z' + 10];\nbool vis['z' + 10];\nint n, head = 0x3f3f3f3f;\nstack<int> s;\nstack<int> ans;\nbool dfs(int u)\n{\n\ts.push(u);//\u6211\u592a\u61d2\u4e86\uff0c\u76f4\u63a5\u7528\u6808\u5012\u7740\u5b58\n\tif (!g[u][0])//\u5982\u679c\u8fd9\u4e2a\u70b9\u65e0\u6cd5\u7ee7\u7eed\u6269\u5c55\uff0c\u90a3\u4e48\u5c31\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u904d\u5386\u6240\u6709\u70b9\n\t{\n\t\tbool flag = true;\n\t\tfor (int i = 'A'; i <= 'z'; i++)\n\t\t{\n\t\t\tif (i == u) continue;\n\t\t\tif (vis[i]) flag = ((g[i][0] == 0) && flag);//\u5982\u679c\u8fd9\u4e2a\u70b9\u8bfb\u5165\u65f6\u51fa\u73b0\u8fc7\uff0c\u5c31\u5224\u65ad\u8fd9\u4e2a\u70b9\u6709\u6ca1\u6709\u904d\u5386\u5230\n\t\t}\n\t\tif (!flag) s.pop();\n\t\treturn flag;\n\t}\n\tfor (int v = 'A'; v <= 'z'; v++)\n\t\tif (g[u][v])\n\t\t{\n\t\t\tg[u][v] = g[v][u] = 0;\n\t\t\tg[v][0]--;\n\t\t\tg[u][0]--;//\u5220\u8fb9\n\t\t\tif (dfs(v)) return true;//\u627e\u5230\u89e3\uff0c\u8fd4\u56de\n\t\t\telse//\u6062\u590d\u8fd9\u6761\u8fb9\n\t\t\t{\n\t\t\t\tg[u][v] = g[v][u] = 1;\n\t\t\t\tg[v][0]++;\n\t\t\t\tg[u][0]++;\n\t\t\t}\n\t\t}\n\ts.pop();//\u5982\u679c\u6ca1\u627e\u5230\u89e3\uff0c\u51fa\u6808\n\treturn false;\n}\nint main()\n{\n\tios::sync_with_stdio;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tchar u, v;\n\t\tcin >> u >> v;\n\t\tg[u][v] = g[v][u] = 1;\n\t\t//\u8bb0\u5f55\u8fb9\n\t\tg[u][0]++;\n\t\tg[v][0]++;\n\t\t//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u7684\u5ea6\n\t\tvis[u] = vis[v] = 1;//\u8bb0\u5f55\u8fd9\u4e24\u4e2a\u70b9\u51fa\u73b0\u8fc7\n\t\thead = min(head, min((int)u, (int)v));//\u627eASCII\u7801\u6700\u5c0f\u7684\u5b57\u6bcd\n\t}\n\tfor (int i = 'A'; i <= 'z'; i++)\n\t\tif (g[i][0] & 1)//\u5982\u679c\u6b27\u62c9\u56de\u8def\u6709\u5947\u70b9\uff0c\u5fc5\u5b9a\u6709\u4e24\u4e2a\uff0c\u90a3\u4e48\u53ea\u8981\u627e\u5230\u4e00\u4e2a\u5c31\u628a\u5b83\u4f5c\u4e3a\u8d77\u70b9\n\t\t{\n\t\t\thead = i;\n\t\t\tbreak;\n\t\t}\n\tdfs(head);//\u6df1\u641c\n\twhile (!s.empty())//\u5c06\u6808\u4e2d\u7684\u5143\u7d20\u653e\u5165\u53e6\u4e00\u4e2a\u6808\uff0c\u8fd9\u6837\u987a\u5e8f\u5c31\u5bf9\u4e86\n\t{\n\t\tans.push(s.top());\n\t\ts.pop();\n\t}\n\tif (ans.empty())//\u5982\u679c\u6808\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u8bf4\u660e\u6ca1\u627e\u5230\u6b27\u62c9\u56de\u8def\n\t{\n\t\tputs(\"No Solution\");\n\t\treturn 0;\n\t}\n\twhile (!ans.empty())//\u8f93\u51fa\u7b54\u6848\n\t{\n\t\tcout << (char)ans.top();//\u6211\u662f\u628a\u5b57\u7b26\u5f53\u6574\u5f62\u5b58\u7684\uff0c\u6240\u4ee5\u8f93\u51fa\u65f6\u8981\u5f3a\u5236\u8f6c\u6362\u6210\u5b57\u7b26\n\t\tans.pop();\n\t}\n\tcout << endl;\n\t//system(\"pause\");\n\treturn 0;\n}\n```\n## P.S. \n'Z'\u548c'a'\u4e4b\u95f4\u7684\u51e0\u4e2a\u5b57\u7b26\u4e0d\u7528\u7ba1\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e4b\u95f4\u6839\u672c\u6ca1\u6709\u8fb9",
        "postTime": 1534426351,
        "uid": 25906,
        "name": "Rey_HR",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "### $0.$ \u5206\u6790\n\u5b57\u7b26\u4e32\u9996\u7b49\u4e8e\u5c3e\uff0c\u957f\u5ea6\u7b49\u4e8e\u5b57\u6bcd\u5bf9\u6570\u52a0\u4e00\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u90fd\u8981\u7528\u4e0a\uff0c\u5f88\u660e\u663e\u5bf9\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u4e2d\u7684\u4e24\u4e2a\u5b57\u6bcd\u5efa\u8fb9\u627e\u6b27\u62c9\u56de\u8def\uff0c\u4fd7\u79f0\u4e00\u7b14\u753b\uff08~~\u8be5\u6b7b\u7684\u8001\u6b27\u62c9~~\n\n### $1.$ [\u5b9a\u4e49](https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/10036484?fr=aladdin)\n\n### $2.$ \u5224\u5b9a\n\u5bf9\u4e8e\u65e0\u5411\u56fe\uff1a\u5982\u679c\u6240\u6709\u70b9\u7684\u5ea6\u6570\u5747\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u4e2a\u6b27\u62c9\u56fe\uff0c\u56e0\u4e3a\u628a\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u548c\u5165\u5ea6\u5206\u914d\u76f8\u7b49\u4e4b\u540e\u4e00\u5b9a\u4f1a\u56de\u5230\u521d\u59cb\u79bb\u5f00\u7684\u8d77\u70b9\uff1b\u5982\u679c\u4ec5\u6709\u4e24\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u4e2a\u534a\u6b27\u62c9\u56fe\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u70b9\u591a\u51fa\u6765\u7684\u4e00\u4e2a\u5ea6\u6570\u521a\u597d\u88ab\u5206\u914d\u6210\u51fa\u5ea6\u548c\u5165\u5ea6\uff0c\u5373\u4e3a\u8d77\u70b9\u7684\u7ec8\u70b9\uff0c\u5b83\u4eec\u662f\u4e0d\u76f8\u540c\u7684\uff1b\u5426\u5219\u5b83\u4ec0\u4e48\u90fd\u4e0d\u662f\u6ed1\u7a3d\u3002\n\n\u5bf9\u4e8e\u6709\u5411\u56fe\u662f\u7c7b\u4f3c\u7684\uff0c\u51fa\u5ea6\u548c\u5165\u5ea6\u5df2\u7ecf\u7ed9\u4f60\u5206\u914d\u597d\u4e86\u9e2d\u3002\n\n### $3.$ \u5bfb\u627e\n- \u8d77\u70b9\u548c\u7ec8\u70b9\n\n\u5982\u679c\u662f\u6b27\u62c9\u56fe\u968f\u4fbf\uff0c\u534a\u6b27\u62c9\u56fe\u627e\u51fa\u4e24\u4e2a\u7279\u6b8a\u70b9\uff08\u6709\u5411\u56fe\u662f\u4e24\u8005\uff0c\u65e0\u5411\u56fe\u4e24\u8005\u53ef\u4ee5\u4e92\u6362\uff09\u3002\n\n- \u8def\u5f84\n\n\u8fdb\u884c$dfs$\uff0c\u53ef\u884c\u5c31\u8d70\uff0c\u8fd8\u9700\u63a2\u8ba8\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u6700\u540e\u53bb\u5b58\uff0c\u5012\u5e8f\u8f93\u51fa\uff1f\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e86\u4e00\u4e2a\u76f4\u63a5\u5b58\u7684\u53cd\u4f8b\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/67063.png)\n\n\u5047\u5b9a\u6211\u4eec\u4ece\u5de6\u4e0a\u89d2\u7684\u70b9\u51fa\u53d1\uff0c\u5148\u5411\u53f3\u8d70\uff0c\u5728\u5411\u5de6\u4e0b\u8d70\u3002\u5f53\u6211\u4eec\u6765\u5230\u6709\u81ea\u73af\u7684\u70b9\u65f6\uff0c\u5c31\u51fa\u73b0\u6bdb\u75c5\u4e86\u3002\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u4e00\u662f\u76f4\u63a5\u56de\u5230\u8d77\u70b9\uff0c\u867d\u7136\u4e5f\u6784\u6210\u4e86\u4e00\u4e2a\u6b27\u62c9\u5b50\u56fe\uff0c\u4f46\u662f\u5e76\u4e0d\u80fd\u8fbe\u5230\u6211\u4eec\u7684\u8981\u6c42\uff0c\u6240\u4ee5\u5fc5\u987b\u5148\u7ed5\u7740\u81ea\u73af\u8d70\u5b8c\u518d\u56de\u5230\u8d77\u70b9\u3002\u52a0\u4e4b\u6211\u4eec\u80af\u5b9a\u5f97\u6309\u7167\u5b57\u5178\u5e8f\u9009\u62e9\uff0c\u5f88\u5927\u6982\u7387\u4f1a\u8d70\u9519\u3002\n\n\u4ed4\u7ec6\u89c2\u5bdf\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u70b9\u80af\u5b9a\u8fde\u63a5\u7740\u82e5\u5e72\u4e2a\u73af\uff0c\u8fd9\u4e9b\u73af\u4e2d\u5206\u6210\u4e09\u79cd\uff1a\u904d\u5386\u5b8c\u7684\u3001\u6ca1\u904d\u5386\u8fc7\u7684\u3001\u904d\u5386\u4e86\u4e00\u90e8\u5206\u7684\u3002\u9664\u53bb\u904d\u5386\u5b8c\u7684\uff0c\u8981\u8dd1\u51fa\u6b63\u786e\u7684\u8def\u5f84\uff0c\u6211\u4eec\u5e94\u8be5\u5148\u9009\u62e9\u6ca1\u6709\u904d\u5386\u8fc7\u7684\uff0c\u6700\u540e\u518d\u8fdb\u5165\u904d\u5386\u4e86\u4e00\u90e8\u5206\u7684\u6b7b\u80e1\u540c\uff08\u51fa\u4e0d\u6765\uff09\u3002\n\n\u8bb0\u5f55\u4e0b\u6765\u975e\u5e38\u4e0d\u53ef\u505a\u7684\u6837\u5b50\uff0c\u8003\u8651\u5230\u7ec8\u70b9\u4e00\u5b9a\u5728\u904d\u5386\u4e86\u4e00\u90e8\u5206\u7684\u73af\u4e2d\uff08\u6211\u4eec\u662f\u4ece\u90a3\u91cc\u6765\u7684\uff09\uff0c\u6211\u4eec\u4e4b\u524d\u7684\u8def\u5f84\u53c8\u4e00\u5b9a\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u9006\u63a8\u5462\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u8d70\u8fdb\u6b7b\u80e1\u540c\u65f6\uff0c\u4e0d\u8981\u5148\u8bb0\u5f55\u7b54\u6848\uff0c\u4ee5\u6b7b\u80e1\u540c\u4e3a\u8d77\u70b9\u518d\u5411\u5916\u8d70\uff0c\u904d\u5386\u5b8c\u5269\u4e0b\u7684\u73af\u540e\uff0c\u6309\u7167\u539f\u8def\u8fd4\u56de\u4e0d\u5c31\u884c\u4e86\u5417\uff1f\n\n\u7406\u4e00\u4e0b\u601d\u8def\uff0c\u5f53\u4e00\u4e2a\u70b9\u6ca1\u6709\u8def\u53ef\u4ee5\u8d70\u65f6\uff0c\u624d\u52a0\u5165\u6808\uff08\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u4ece\u5927\u5230\u5c0f\u60f3\u4e0d\u7528\u6808\u662f\u4f1a\u5bfc\u81f4\u7b2c\u4e00\u4f4d\u51fa\u9519\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4f4d\u5b57\u6bcd\u5b58\u5728\u4e8e\u5934\u548c\u5c3e\uff0c\u5934\u8981\u6700\u5c0f\uff0c\u800c\u4f60\u8003\u8651\u5230\u7684\u662f\u8981\u540e\u9762\u7684\u6700\u5927\uff0c\u4f1a\u5c06\u5934\u5c3e\u7f6e\u4e3a\u6700\u5927\uff0c\u4ece\u800c\u4e27\u5931\u4e86\u6700\u91cd\u8981\u7684\u90e8\u5206\uff09\u4e2d\u3002\n\n\u6709\u5411\u56fe\u975e\u5e38\u76f8\u4f3c\u5c31\u4e0d\u8bf4\u4e86\u3002\n\n\u81f3\u4e8e\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u7384\u5b66\uff0c\u7b97\u4e86\u4e00\u4e0b$52*52=2704$\n\n\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u601d\u7ef4\u4e0d\u7b80\u5355\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\u0398(n)$~\n\n***code:***\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 123\n#define For(i,x,y)for(i=x;i<=y;i++)\nstring str;\nbool g[N][N];\nint deg[N],cnt;\nvoid dfs(int u)\n{\n    int i;\n    For(i,65,122)\n    if(g[u][i])\n    {\n        cnt++;\n        g[u][i]=g[i][u]=0;\n        //\u8bb0\u5f97\u6e05\u7a7a\u7684\u662f\u65e0\u5411\u8def\u5f84\n        dfs(i);\n    }\n    str=char(u)+str;\n    //\u5012\u5e8f\n}\n//\u6b27\u62c9\u56de\u8def\nvoid no()\n{\n    cout<<\"No Solution\";\n    exit(0);\n}\n//\u65e0\u89e3\nint main()\n{\n    char x,y;\n    int n,i,j,num=0;\n    cin>>n;\n    For(i,1,n)\n    {\n        For(j,0,1)getchar();\n        x=getchar();\n        y=getchar();\n        g[int(x)][int(y)]=g[int(y)][int(x)]=1;\n        //\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\n        deg[int(x)]++;\n        deg[int(y)]++;\n        //\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\n    }\n    For(i,65,122)\n    if(deg[i]&1)num++;\n    if(num&&num!=2)no();\n    //\u6027\u8d28\n    For(i,65,122)\n    if((num&&deg[i]&1)||(!num&&deg[i]))break;\n    //\u5bfb\u627e\u51fa\u53d1\u70b9\n    dfs(i);\n    if(cnt<n)no();\n    else cout<<str;\n    return 0;\n}\n```\n>\u611f\u8c22\u89c2\u770b\uff01",
        "postTime": 1564583401,
        "uid": 161675,
        "name": "\u68ee\u5c9b\u5e06\u9ad8",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u7531\u8fd9\u9053\u9898\uff0c\u6211\u624d\u53bb\u5b66\u4e60\u4e86\u4e00\u4e0b\u6b27\u62c9\u56de\u8def/\u6b27\u62c9\u8def\u3002\u3002\u3002\u5176\u5b9e\u53ea\u8981\u7b26\u5408\u4e24\u8005\u4e4b\u4e00\u5c31\u80fd\u591f\u8f93\u51fa\u3002\u6b27\u62c9\u8def\u5c31\u662f\u6211\u4eec\u5c0f\u5965\u91cc\u5b66\u7684\u4e00\u7b14\u753b\u95ee\u9898\uff0c\u5982\u679c\u51fa\u8fb9\u4e2a\u6570\u4e3a\u5947\u6570\u4e2a\u7684\u6570\u91cf\u4e3a0\u62162\u5c31\u662f\uff0c\u5b83\u5305\u542b\u4e86\u6b27\u62c9\u56de\u8def\uff0c\u56e0\u4e3a\u6b27\u62c9\u56de\u8def\u5c31\u662f\u6570\u91cf\u4e3a0\u65f6\uff0c\u80fd\u591f\u8d70\u4e00\u5708\u540e\u518d\u56de\u5230\u51fa\u53d1\u70b9\u3002\u5bf9\u4e8e\u8f93\u5165\u7684\u4e24\u4e2a\u5b57\u7b26\uff0c\u5c31\u5bf9\u4ed6\u4eec\u8fde\u4e00\u6761\u65e0\u5411\u8fb9\u3002\u56e0\u4e3a\u8981\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u4eceASCLL\u7801\u5c0f\u7684\u5f00\u59cb\uff0c\u8fd9\u9053\u9898\u9700\u8981\u628a\u5927\u5c0f\u5199\u5b57\u6bcd\u6539\u6210\u6570\u5b57\uff0c\u5373\u79bb\u6563\u5316\u3002\u800c\u4e14\u5982\u679c\u53ea\u6709\u5076\u70b9\uff0c\u90a3\u4e48\u5c31\u4ece\u51fa\u73b0\u7684\u6700\u5c0fASCLL\u7801\u5f00\u59cb\u3002\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,x,y,in[50000],stack[50000],top,cnt,id;\nbool e[100][100];\nchar s[10];\ninline int calc(char x)\n{\n\tif (x>='A'&&x<='Z') return x-'A'+1;\n\tif (x>='a'&&x<='z') return x-'a'+27;\n}\ninline char chr(int x)\n{\n\tif (x>=1&&x<=26) return x+'A'-1;\n\treturn x+'a'-27;\n}\ninline void dfs(int u)\n{\n\tfor (int i=1; i<=55; i++)\n\tif (e[u][i])\n\t{\n\t\te[u][i]=e[i][u]=0;\n\t\tdfs(i);\n\t}\n\tstack[++top]=u;//\u5012\u7740\u5b58\uff0c\u5012\u7740\u8f93\u51fa\u2193\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tx=calc(s[0]),y=calc(s[1]);\n\t\tin[x]++;in[y]++;\n\t\te[x][y]=e[y][x]=1; \n\t}\n\tfor (int i=1; i<=55; i++)\n\tif (in[i]%2==1)\n\t{\n\t\tcnt++;\n\t\tif (!id) id=i;\n\t}\n\tif (cnt!=0&&cnt!=2) return printf(\"No Solution\\n\"),0;\n\tif (cnt==0)\n\tfor (int i=1; i<=55; i++)\n\tif (in[i]) {id=i;break;}\n\tdfs(id);\n\tfor (int i=top; i>=1; i--)\n\tputchar(chr(stack[i]));\n\treturn 0;\n}\n```",
        "postTime": 1541136448,
        "uid": 43103,
        "name": "Tanktt",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u9996\u5148\u7ffb\u8bd1\u4e00\u4e0b\u9898\u9762\u5427\u3002\n\n>    \u7ed9\u5b9an\u6761\u65e0\u5411\u8fb9\uff0c\u8bd5\u6784\u9020\u4e00\u6761\u8def\u5f84\u6070\u597d\u7ecf\u8fc7\u6bcf\u6761\u8fb9\uff11\u6b21\u3002\n\n>    \u5982\u679c\u53ef\u4ee5\u6784\u9020\uff0c\u8f93\u51fa\u9014\u5f84\u7684\u70b9\u7684\u7f16\u53f7\uff08\u591a\u89e3\u5219\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u89e3\uff09\u3002\n\n>    \u5426\u5219\u8f93\u51faNo Solution\u3002\n\n\u5176\u5b9e\u60f3\u660e\u767d\u6240\u8c13\u7684\u5b57\u6bcd\u5bf9\u53ea\u662f\u65e0\u5411\u8fb9\u7684\u8bdd\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u5f88\u6e05\u6670\u7684\u6b27\u62c9\u8def\u5f84\u4e86\u3002\n\n>\u2014\u2014\u4ee5\u4e0b\u6765\u81ea[\u6b27\u62c9\u56de\u8def\u8def\u5f84\u6c42\u89e3 - STILLxjy - CSDN\u535a\u5ba2](https://blog.csdn.net/stillxjy/article/details/51956183)\u2014\u2014\n\n>    Hierholzer \u7b97\u6cd5\uff1a\n    \u53e6\u4e00\u79cd\u8ba1\u7b97\u6b27\u62c9\u8def\u7684\u7b97\u6cd5\u662f Hierholzer \u7b97\u6cd5\u3002\u8fd9\u79cd\u7b97\u6cd5\u662f\u57fa\u4e8e\u8fd9\u6837\u7684\u89c2\u5bdf\uff1a\n    \n>![](https://i.loli.net/2018/09/30/5bb0436ae37ac.png)\n\n>    \u5728\u624b\u52a8\u5bfb\u627e\u6b27\u62c9\u8def\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4ece\u70b9 4 \u5f00\u59cb\uff0c\u4e00\u7b14\u5212\u5230\u8fbe\u4e86\u70b9 5\uff0c\u5f62\u6210\u8def\u5f84 4-5-2-3-6-5\u3002\u6b64\u65f6\u6211\u4eec\u628a\u8fd9\u6761\u8def\u5f84\u53bb\u6389\uff0c\u5219\u5269\u4e0b\u4e09\u6761\u8fb9\uff0c2-4-1-2 \u53ef\u4ee5\u4e00\u7b14\u753b\u51fa\u3002\n\n>    \u8fd9\u4e24\u6761\u8def\u5f84\u5728\u70b9 2 \u6709\u4ea4\u63a5\u5904\uff08\u5176\u5b9e\u70b9 4 \u4e5f\u662f\u4e00\u6837\u7684\uff09\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u7b14\u753b\u51fa\u7ea2\u8272\u8f68\u8ff9\u5230\u8fbe\u70b9 2 \u7684\u65f6\u5019\uff0c\u4e00\u7b14\u753b\u51fa\u9ec4\u8272\u8f68\u8ff9\uff0c\u518d\u56de\u5230\u70b9 2\uff0c\u628a\u5269\u4e0b\u7684\u7ea2\u8272\u8f68\u8ff9\u753b\u5b8c\u3002\n\n>    \u7531\u4e8e\u660e\u663e\u7684\u51fa\u6808\u5165\u6808\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u7528 DFS \u6765\u63cf\u8ff0\u3002\n    \u5982\u679c\u60f3\u770b\u5f97\u66f4\u4ed4\u7ec6\u4e00\u70b9\uff0c\u4e0b\u9762\u662f\u4ece\u70b9 4 \u5f00\u59cb\u5230\u70b9 5 \u7ed3\u675f\u7684 DFS \u8fc7\u7a0b\uff0c\u5176\u4e2d + \u4ee3\u8868\u5165\u6808\uff0c- \u4ee3\u8868\u51fa\u6808\u3002\n    4+ 5+ 2+ 3+ 6+ 5+ 5- 6- 3- 1+ 4+ 2+ 2- 4- 1- 2- 5- 4-\n    \u6211\u4eec\u628a\u6240\u6709\u51fa\u6808\u7684\u8bb0\u5f55\u8fde\u63a5\u8d77\u6765\uff0c\u5f97\u5230\n    5-6-3-2-4-1-2-5-4\n\n>    \u8bf8\u4f4d\u770b\u5b98\u53ef\u4ee5\u81ea\u5df1\u518d\u9009\u4e00\u6761\u8def\u5f84\u5c1d\u8bd5\u4e00\u4e0b\u3002\u4e0d\u8fc7\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8d77\u59cb\u70b9\u7684\u9009\u62e9\u548c Fleury \u8981\u6c42\u7684\u4e00\u6837\u3002\n    \u8fd9\u4e2a\u7b97\u6cd5\u660e\u663e\u8981\u6bd4 Fleury \u9ad8\u6548\uff0c\u5b83\u4e0d\u7528\u5224\u65ad\u6bcf\u6761\u8fb9\u662f\u5426\u662f\u4e00\u4e2a\u6865\u3002\n\n\u7136\u540e\u5c31\u5957Hierholzer\u7684\u677f\u5b50\u5c31\u597d\u5566\u3002\n\n~~\uff08\u5b9e\u5728\u6ca1\u61c2\u600e\u4e48\u201c\u8ba1\u7b97\u5f97\u5230\u201dn\u7684\u89c4\u6a21\uff0c\u597d\u5728\u4e0d\u7528\u8fd9\u4e2a\u6761\u4ef6QAQ~~\n```\n 1 /*\n 2     qwerta\n 3     P1341 \u65e0\u5e8f\u5b57\u6bcd\u5bf9\n 4     Accepted\n 5     100\n 6     \u4ee3\u7801 C++\uff0c1.46KB\n 7     \u63d0\u4ea4\u65f6\u95f4 2018-09-30 11:11:47\n 8     \u8017\u65f6/\u5185\u5b58\n 9     28ms, 1052KB\n10 */\n11 #include<algorithm>\n12 #include<iostream>\n13 #include<cstdio>\n14 #include<stack>\n15 using namespace std;\n16 int g[253][253];\n17 int d[253];//\u5ea6\u6570\n18 stack<int>st;//\u8fd9\u4e2a\u662f\u8bb0\u5f55\u6808\uff0c\u4e0d\u662f\u641c\u7d22\u6808\uff01    \n19 void dfs(int x)//dfs\u627e\u70b9\n20 {\n21     for(int j='A';j<='z';++j)//\u8fd9\u6837\u5faa\u73af\u5c31\u53ef\u4ee5\u4fdd\u6301\u5b57\u5178\u5e8f\u6700\u5c0f\u5566\n22     if(g[x][j])\n23     {\n24         g[x][j]--;\n25         g[j][x]--;//\u53cd\u5411\u8fb9\u4e5f\u8981\u5220\n26         dfs(j);//\u7ee7\u7eed\u9012\u5f52\n27     }\n28     st.push(x);//\u51fa\u6808\u7684\u65f6\u5019\u8bb0\u5f55\u4e0b\u6765\n29     return;\n30 }\n31 int fa[257];//\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u662f\u5426\u6709\u591a\u4e2a\u8054\u901a\u5757\n32 int fifa(int x)\n33 {\n34     if(fa[x]==x)return x;\n35     return fa[x]=fifa(fa[x]);\n36 }\n37 int main()\n38 {\n39     //freopen(\"a.in\",\"r\",stdin);\n40     ios::sync_with_stdio(false);\n41     cin.tie(false),cout.tie(false);//\u5173\u95ed\u540c\u6b65\u6d41\uff08cin\u4f34\u4fa3\n42     int n;\n43     cin>>n;\n44     for(int i='A';i<='z';++i)//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n45     fa[i]=i;\n46     for(int i=1;i<=n;++i)\n47     {\n48         char x,y;\n49         cin>>x>>y;\n50         g[x][y]++;\n51         g[y][x]++;//\u4e34\u63a5\u77e9\u9635\u5b58\u8fb9\n52         d[x]++;\n53         d[y]++;//\u5ea6\u6570\uff0b\uff0b\n54         int u=fifa(x),v=fifa(y);\n55         if(u!=v)fa[u]=v;//\u7ef4\u62a4\u5e76\u67e5\u96c6\n56     }\n57     //\u5224\u5b9a\u662f\u5426\u6709\u89e3\n58     int num=0;\n59     for(int i='A';i<='z';++i)\n60     if(d[i]%2==1)num++;\n61     if(num!=0&&num!=2){cout<<\"No Solution\";return 0;}\n62     int tag=0;\n63     for(int i='A';i<='z';++i)\n64     if(d[i])\n65     {\n66         if(!tag)tag=i;\n67         else if(fifa(tag)!=fifa(i)){cout<<\"No Solution\";return 0;}\n68     }\n69     //\u627e\u662f\u5426\u6709\u5947\u70b9\n70     int s=-1;\n71     for(int i='A';i<='z';++i)\n72     if(d[i]%2==1){s=i;break;}\n73     if(s==-1)//\u5982\u679c\u6ca1\u6709\u5947\u70b9\u5c31\u627eAscII\u6700\u5c0f\u7684\u70b9\n74       for(int i='A';i<='z';++i)\n75       if(d[i]){s=i;break;}\n76     dfs(s);//\u9012\u5f52\u627e\u70b9\n77     while(!st.empty())\n78     {\n79         cout<<(char)st.top();\n80         st.pop();\n81     }//\u8f93\u51fa\n82     return 0;\n83 }\n```",
        "postTime": 1538277649,
        "uid": 48681,
        "name": "qwerta",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u6b27\u62c9\u8def\u95ee\u9898\uff0c\u628a\u6bcf\u4e24\u4e2a\u70b9\u95f4\u52a0\u4e00\u4e2a\u65e0\u5411\u8fb9\uff0c\u5224\u65ad\u6bcf\u4e2a\u70b9\u7684\u5ea6\u662f\u5426\u4e3a\u5076\u6570\uff08\u6b27\u62c9\u56de\u8def\uff09\uff0c\u6216\u8005\u6709\u4e24\u4e2a\u70b9\u662f\u5947\u6570\uff08\u6b27\u62c9\u8def\u5f84\uff09\u3002\u7136\u540e\u627e\u5230\u6b27\u62c9\u8def\u5f84\u7684\u8d77\u70b9\u6216\u56de\u8def\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u70b9\uff0c\u5f00\u59cbdfs\u3002\n\n\n```cpp\n#include<cstdlib>\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<vector>\nusing namespace std;\nint n;\nint du[60];//\u50a8\u5b58\u6bcf\u4e2a\u70b9\u7684\u5ea6 \nchar s[3];\nstruct node\n{\n    int now,id;//\u73b0\u5728\u7684\u70b9\uff0c\u7f16\u53f7 \n};\nvector<node> g[60];//\u56fe \nvector<int> eg;//\u8f93\u51fa \nbool vis[10010],vis1[60];//\u5efa\u56fe\uff0c\u8f93\u51fa \nvoid dfs(int a)\n{\n    for(int j=0;j<g[a].size();j++)\n    {\n        if(vis1[g[a][j].id]==1)continue;\n        vis1[g[a][j].id]=1;\n        dfs(g[a][j].now);\n    }\n    eg.push_back(a);\n}\nbool compare(node aa,node bb){return aa.now<bb.now;}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",s);\n        int a=s[0]-'A'+1;\n        int b=s[1]-'A'+1;\n        du[a]++;\n        du[b]++;\n        g[a].push_back((node){b,i});\n        g[b].push_back((node){a,i});\n        vis[a]=1;\n        vis[b]=1;\n    }\n    for(int i=1;i<60;i++)//\u5b57\u5178\u5e8f\u6392\u5e8f\n    sort(g[i].begin(),g[i].end(),compare);\n    int cnt=0;\n    for(int i=1;i<60;i++)if(du[i]%2==1)cnt++;\n//    for(int i=1;i<60;i++)printf(\"%d \",du[i]);\n//    printf(\"\\n%d\\n\",cnt);\n    if(cnt==1||cnt>2){printf(\"No Solution\");return 0;}//\u4e0d\u662f\u6b27\u62c9\u8def\u5c31\u662f\u65e0\u89e3\n    else \n    {\n        int start;\n        for(int i=1;i<60;i++)//\u6b27\u62c9\u56de\u8def \n        if(vis[i]==1)//\u6b27\u62c9\u56de\u8def\u5c31\u4efb\u9009\u4e00\u70b9\n        {\n            start=i;\n            break;\n        }\n        for(int i=1;i<60;i++)//\u6b27\u62c9\u8def\u5f84\u9009\u8d77\u70b9\n        if(du[i]%2==1)\n        {\n            start=i;\n            break;\n        }\n        dfs(start);\n    }\n    for(int i=eg.size()-1;i>=0;i--)//\u56e0\u4e3a\u662fdfs\u6240\u4ee5\u5012\u53d9\n    printf(\"%c\",eg[i]-1+'A');\n    return 0;\n} \n\n```",
        "postTime": 1504491146,
        "uid": 26000,
        "name": "\u6960\u5c71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u4e00\u6b21\u6027A\u4e86..\u83ab\u540d\u5174\u594b,\u6765\u4e00\u53d1\u9898\u89e3\n\n\u8fd9\u4e2a\u9898\u5c31\u662f\u6b27\u62c9\u56de\u8def/\u901a\u8def\u7684\u9898\n\n\u53ef\u80fd\u662f\u548c\u56de\u8def,,\u4e5f\u53ef\u80fd\u53ea\u662f\u901a\u8def\n\n\u8fd9\u53d6\u51b3\u4e8e\u5ea6\u6570\u5947\u6570\u7684\u70b9\u7684\u4e2a\u6570\n\n0 \u56de\u8def\n\n2 \u901a\u8def\n\n>=3 \u65e0\u89e3\nfor\u5faa\u73af\u4e00\u904d,\u8bb0\u5f55\u6700\u5c0f\u7684\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u7684\u7f16\u53f7a\n\n\u5982\u679c\u6ca1\u6709\u90a3\u4e48\u5c31\u5c06a=minueed\uff08\u6309\u5b57\u5178\u5e8f\u51fa\u73b0\u7684\u6700\u5c0f\u7684\u5b57\u6bcd\uff09\n\n\u7136\u540e\u6c42\u4e00\u904d\u6b27\u62c9\u56de\u8def\n\n\u7528\u7684\u9759\u6001\u94fe\u8868\uff08\u94fe\u5f0f\u524d\u5411\u661f\uff09\n\n\u6240\u4ee5\u6c42\u6b27\u62c9\u8def\u7684\u65f6\u5019\u6709\u70b9\u9ebb\u70e6\n\n\u56e0\u4e3a\u662f\u8981\u8981\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u5728\u6c42\u89e3\u4e4b\u524d\u5bf9\u70b9\u7684\u987a\u5e8f\u6392\u4e2a\u5e8f\n\n\u6211\u4eec\u5c31\u7528\u4ed6\u5728\u5b57\u5178\u5e8f\u4e2d\u7684\u987a\u5e8f\u4ee3\u8868\u8fd9\u4e2a\u70b9\u7684\u987a\u5e8f\u5efa\u7acb\u4e00\u4e2a\u56fe\n\n\u56fe\u4e2d\u7684\u70b9\u5f53\u7136\u5c31\u662f52\u62c9\n\n\u4e0d\u591a\n\u6240\u4ee5\u6211\u5199\u4e2a\u4e00\u4e2a\u4f3c\u4e4e\u662f\u552f\u4e00\u4e00\u4e2a\u4e0d\u662f0ms\u7684AC\u4ee3\u7801\uff08\u54ce\uff09\n\n\u9664\u4e86\u5efa\u56fe\u4ee5\u5916\u2026\u2026\u6b27\u62c9\u56de\u8def\u57fa\u672c\u4e0a\u5c31\u662f\u5957\u6a21\u677f\u641e\u5b9a\u4e86\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue> \n#include<algorithm>\n#define maxn 100005\n```\nclass node\n{\npublic:\n\n    int x,y;\n\n}t[maxn]; \n\nclass side\n\n{\npublic:\n\n    \n```cpp\n    int from,to,next,last;\n}edge[maxn];\nint head[maxn],len,ansi,ans[maxn];\nint indegree[maxn];\nbool visit[maxn*2];\nbool cmp(int a,int b){return edge[a].to<edge[b].to;}\nbool alpha[60];\nusing namespace std;\nvoid ins(int x,int y)\n{\n    indegree[y]++;\n    edge[++len].from=x;\n    edge[len].to=y;\n    edge[len].next=head[x];\n    head[x]=len;\n}\nvoid eulor(int now)\n{\n    int temp_k[101],sum=0;\n    for(int k=head[now];k;k=edge[k].next)\n    {\n        temp_k[sum++]=k;\n    }\n    sort(temp_k,temp_k+sum,cmp);\n    for(int i=0;i<sum;i++)\n    {\n        int k=temp_k[i];\n        if(!visit[k])\n        {\n            visit[k]=true;\n            if(k%2==1)visit[k+1]=true;\n            else visit[k-1]=true;\n            eulor(edge[k].to);\n            ans[ansi++]=k;\n        }\n    }\n}\nint main()\n{\n    int n,m,min_used=100,max_used=-10;      //\u7528\u5230\u7684\u6700\u5927\u5b57\u6bcd\u548c\u6700\u5c0f\u5b57\u6bcd \n    cin>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        char tx,ty;\n        cin>>tx>>ty;\n        x=tx-'A'+1;\n        y=ty-'A'+1;\n        ins(x,y);                          //\u5efa\u56fe \n        ins(y,x);\n        n=max(n,max(x,y));\n        min_used=min(min_used,min(x,y));        //\u8bb0\u5f55\u6700\u5927/\u6700\u5c0f\u7684\u70b9\u7684\u7f16\u53f7 \n        max_used=max(max_used,max(x,y));\n        alpha[x]=1;alpha[y]=1;                 //\u6807\u8bb0,\u8fd9\u4e2a\u5b57\u6bcd\u51fa\u73b0\u8fc7 \n    }\n    int num_indegree=0,min_eulor=max_used;     \n    for(int i=min_used;i<=max_used;i++)\n    {\n        if(alpha[i])\n        {\n            if(indegree[i]==0)\n            {\n                cout<<\"No Solution\";\n                return 0;\n            }\n            if(indegree[i]%2==1)\n            {\n                num_indegree++;\n                min_eulor=min(min_eulor,i);\n            }\n            if(num_indegree>=3)\n            {\n                cout<<\"No Solution\";\n                return 0;\n            }\n        }\n    }\n    if(num_indegree==0)min_eulor=min_used;\n    eulor(min_eulor);\n    for(int i=ansi-1;i>=0;--i)\n    cout<<char(edge[ans[i]].from+'A'-1);\n    cout<<char(edge[ans[0]].to+'A'-1);\n}\n```\n\u83ab\u540dAC..",
        "postTime": 1503396461,
        "uid": 36507,
        "name": "shijunfeng00",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cdset\u7684\u505a\u6cd5 set\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u4f1a\u81ea\u52a8\u5bf9\u96c6\u5408\u5185\u5143\u7d20\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5e76\u81ea\u52a8\u53bb\u91cd \u5982\u679c\u4e0d\u9700\u8981\u53bb\u91cd\u7684\u8bdd\u53ef\u4ee5\u7528multiset \u8fd9\u6837\u7528\u8d77\u6765\u5c31\u5f88\u8212\u670d\u4e86 \u5176\u4f59\u7684\u5c31\u662f\u6b27\u62c9\u56de\u8def\u7684\u677f\u5b50 \u5177\u4f53\u770b\u4ee3\u7801\u5427\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<set>\nusing namespace std;\nset<int> que;\nmultiset<int>mp[100];\nint n,m,ds[100],s=-1,e=-1,at;\nchar ans[100];\nvoid dfs(int u)\n{\n\tset<int>::iterator it;\n\tfor (it=mp[u].begin();it!=mp[u].end();it=mp[u].begin())\n\t{\n\t\tint v=*it;\n\t\tmp[u].erase(it);\n\t\tmp[v].erase(mp[v].find(u));\n\t\tdfs(v);\n\t}\n\tans[at++]=u+'A';\n}\nint main()\n{\n\tcin>>m;\n\tfor (int i=0;i<m;i++)\n\t{\n\t\tchar a,b;\n\t\tcin>>a>>b;\n\t\tds[a-'A']++;ds[b-'A']++;\n\t\tmp[a-'A'].insert(b-'A');\n\t\tmp[b-'A'].insert(a-'A');\n\t\tque.insert(a-'A');que.insert(b-'A');\n\t}\n\tfor (set<int>::iterator it=que.begin();it!=que.end();it++)\n\t{\n\t\tint x=*it;\n\t\tif (ds[x]%2==1)\n\t\t{\n\t\t\tif (s==-1) s=x;\n\t\t\telse if (e==-1) e=x;\n\t\t\telse {\n\t\t\t\tcout<<\"No Solution\"<<endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tif (s==-1) s=*que.begin();\n\tdfs(s);\n\tfor (int i=at-1;i>=0;i--) cout<<ans[i];\n}\n```",
        "postTime": 1541644447,
        "uid": 97509,
        "name": "SS_Yi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u5c06\u5b57\u6bcd\u8f6c\u5316\u6210\u70b9\uff0c\u6bcf\u4e00\u5bf9\u5b57\u6bcd\u7ec4\u4e4b\u95f4\u8fde\u70b9\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u627e\u6b27\u62c9\u8def\u5f84\u3002\u6ce8\u610f\u51e0\u70b9\uff1a\n\n1.\u5b57\u5178\u5e8f\n\n2.\u5224\u65ad\u662f\u5426\u6709\u6b27\u62c9\u8def\u5f84\uff0c\u53ef\u4ee5\u6839\u636e\u5b9a\u4e49\uff0c\u6b27\u62c9\u8def\u5f84\u4e2d\u6ca1\u6709\u6216\u6709\u4e24\u4e2a\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\u3002\n\n3.\u5224\u65ad\u662f\u6b27\u62c9\u8def\u7ecf\u8fd8\u662f\u6b27\u62c9\u56de\u8def\u3002\n\n\u51e0\u4e4e\u662f\u5f88\u88f8\u7684\u6b27\u62c9\u8def\u5f84\u7684\u9898\u76ee\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int maxn = 600;\nint n,inn[maxn],cnt=0;//inn\u8868\u793a\u5ea6\u6570\nint s[maxn];\nint cxt[maxn][maxn];\nstring S = \"No Solution\";\ninline int judge(char x)\n{\n    if(x <= 'z' && x >= 'a') return x - 'a' + 27;\n    else return x - 'A' + 1;\n}\ninline char print(int x)\n{\n    if(x <= 26) return 'A' + x - 1;\n    return 'a' + x - 27;\n}\ninline void addedge(int u,int v)\n{\n    ++inn[u];++inn[v];\n    cxt[u][v] = cxt[v][u] = 1;\n}\nvoid Eular(int x)\n{\n    for(int i=1;i<=52;i++) if(cxt[x][i]) {\n        cxt[x][i]=cxt[i][x]=0;\n        Eular(i);\n    }\n    s[++cnt] = x;//\u8bb0\u5f55\u8def\u5f84 \n}\nint main()\n{\n    cin>>n;\n    char a,b;\n    char ch[5]; \n    for(register int i=1;i<=n;i++) {\n//      cin>>a>>b;\n        scanf(\"%s\",ch);\n        addedge(judge(ch[0]),judge(ch[1]));\n    }\n    int p = 0x7fffffff;\n    for(register int i=1;i<=52;i++)//\u627e\u5230\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u6b27\u62c9\u56de\u8def\u7684\u8d77\u70b9 \n        if(inn[i]&1) {//\u6b27\u62c9\u8def\u5f84\u8d77\u70b9 \n            p = min(p,i);\n            ++cnt;\n        }\n    if(cnt != 0 && cnt != 2) {//\u4e0d\u662f\u6b27\u62c9\u8def\u7ecf\u6216\u6b27\u62c9\u73af \n        cout<<S;\n        return 0;\n    }\n    if(cnt == 0)//\u6b27\u62c9\u73af\uff0c\u627e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8d77\u70b9 \n    for(int i=1;i<=52;i++) if(inn[i]) {\n        p = i;\n        break;\n    }\n    cnt = 0;\n    Eular(p);//\u627e\u6b27\u62c9\u8def\u5f84\n    for(int i=cnt;i>=1;--i) printf(\"%c\",print(s[i]));//\u9006\u5e8f\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1509956739,
        "uid": 17326,
        "name": "\u6797\u5fd7\u6770",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u597d\u96be\n\n\u4e00\u5f00\u59cb\u627e\u5230\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u70b9\u5c31\u53bb\u641c\u7d22\n\n\u7ed3\u679cwa\u4e86\n\n\u540e\u6765\u4e00\u60f3\u56e0\u4e3a\u5e8f\u5217\u957f\u5ea6n+1\n\n\u56e0\u6b64\u4e00\u5b9a\u662f\u6b27\u62c9\u56de\u8def\u6216\u8005\u901a\u8def\n\n\u5982\u679c\u5165\u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u7684\u4e2a\u6570\u4e3a2\u5373\u4e3a\u6b27\u62c9\u901a\u8def\n\n\u5165\u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u4e3a0\u4e3a\u6b27\u62c9\u56de\u8def\n\n\u5176\u4ed6\u65e0\u89e3\n\n\u56e0\u4e3a\u6b27\u62c9\u8def\u662fdfs\u9006\u5e8f\u7684\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5dfs\u65f6\u6309\u7167\u5b57\u5178\u5e8f\u5c0f\u7684\u5f00\u59cb\u641c\u7d22\n\n\u641c\u5b8c\u7684\u60c5\u51b5\u662f\u5b57\u5178\u5e8f\u4ece\u5927\u5230\u4e0b\n\n\u56e0\u4e3aa->b\u4e3a\u6b27\u62c9\u8def,\u4e00\u5b9a\u6709b->a\u4e3a\u6b27\u62c9\u8def\n\n\u628a\u5e8f\u5217\u53cd\u8fc7\u6765\u8f93\u51fa\u5373\u53ef\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#define re register\nstd::vector<int>    ans;\nint n,g[65][65],d[65];\nchar str[5];\ninline char tochar(int x)\n{\n    if(x>=1 && x<=26)\n        return x-1+'A';\n    else    return x-27+'a';\n}\ninline int getnum(char ch)\n{\n    if(ch>='A' && ch<='Z')\n        return ch-'A'+1;\n    else    return 27+ch-'a';\n}\ninline void dfs(int now)\n{\n    for(re int i=1;i<=52;i++)\n    {\n        if(g[now][i])\n        {\n            g[now][i]=g[i][now]=0;\n            dfs(i);\n        }\n    }\n    ans.push_back(now);\n}\nint main()\n{\n    int cnt=0,u1=1e9+7,u2=1e9+7;\n    scanf(\"%d\",&n);\n    for(re int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",str);\n        int u=getnum(str[0]),v=getnum(str[1]);\n        g[u][v]=g[v][u]=1;\n        d[u]++;d[v]++;\n    }\n    for(re int i=1;i<=52;i++)\n    {\n        if(d[i]&1)\n        {\n            cnt++;\n            u1=std::min(u1,i);\n        }\n        else\n        {\n            if(d[i]!=0)        u2=std::min(u2,i);\n        }\n    }\n    if(cnt!=0 && cnt!=2)\n    {\n        printf(\"No Solution\\n\");\n        return 0;\n    }\n    if(!cnt)    dfs(u2);\n    else    dfs(u1);\n    reverse(ans.begin(),ans.end());\n    for(int i=0;i<ans.size();i++)\n        printf(\"%c\",tochar(ans[i]));\n    return 0;\n}\n```",
        "postTime": 1502372875,
        "uid": 44250,
        "name": "Zzh20011004",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\uff1a\u7ed9\u5b9an\u6761\u8fb9\uff0c\u6bcf\u6761\u8fb9\u8fde\u63a5\u4e24\u4e2a\u5b57\u6bcd\uff0c\u6c42\u4e00\u6761\u7ecf\u8fc7\u6240\u6709\u8fb9\u7684\u8def\u5f84\u3002\n\n\u89e3\u9898\u601d\u8def\uff1a\u770b\u6e05\u8fd9\u9053\u9898\u7684\u672c\u8d28\u4e4b\u540e\uff0c\u8fd9\u9898\u662f\u9053\u5178\u578b\u7684\u6c42\u6b27\u62c9\u8def\u5f84\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u6765\u719f\u7ec3\u6b27\u62c9\u8def\u5f84\u7684\u7b97\u6cd5\u3002\n\n{\n\u7ed9\u51fa\u5b57\u6bcd\u5bf9\u5efa\u7acb\u65e0\u5411\u56fe\u6c42\u662f\u5426\u5b58\u5728\u6b27\u62c9\u8def\u7ecf\uff0c\n\n\u5982\u679c\u6709dfs\u6c42\u51fa\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u6b27\u62c9\u8def\u5f84\n\n```cpp\n}\nuses math;\nvar n,i,x,y,k,tot:longint;\n    b:array[0..106,0..106]of boolean;\n    c,du,a:array[0..10006]of longint;\n    s:string;\nprocedure dfs(u:longint);\nvar i:longint;\nbegin\n for i:=0 to 58 do \n  if b[u,i] then begin //\u56fe\u4e2d\u6709\u6570\u5b57\u4e3ai\u8fd9\u6837\u7684\u70b9\n   b[u,i]:=false;\n   b[i,u]:=false; //\u904d\u5386\u5b8c\u6210\n   dfs(i);//\u5f80\u4e0bdfs\n  end;\n  inc(tot);\n  c[tot]:=u;//\u56de\u6eaf\u52a0\u8d77\u6765\nend;\nbegin\n readln(n);\n k:=maxlongint;\n fillchar(b,sizeof(b),false);\n fillchar(du,sizeof(du),0);\n fillchar(a,sizeof(a),0);\n for i:=1 to n do begin\n  readln(s);\n  x:=ord(s[1])-ord('A');\n  y:=ord(s[2])-ord('A');//\u5b57\u6bcd\u6620\u5c04\u5230\u6570\n  k:=min(k,min(x,y));//\u56fe\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u70b9\u4e3ak\uff08\u4e0d\u4fdd\u8bc1\u5165\u5ea6mod 2 =1\uff09\n  b[x,y]:=true;\n  b[y,x]:=true; //\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\n  inc(du[x]);\n  inc(du[y]);//\u5165\u5ea6++\n end;\n for i:=0 to 58 do\n  if du[i] mod 2=1 then begin //\u5982\u679c\u67d0\u4e00\u70b9\u7684\u5165\u5ea6\u4e3a\u5947\u6570\n   inc(a[0]);a[a[0]]:=i; //\u628a\u6539\u70b9\u52a0\u5165a\u5e8f\u5217a[0]\u662f\u6709\u51e0\u4e2a\u8fd9\u6837\u7684\u70b9\n  end;\n if a[0]=0 then begin dfs(k); end //\u6ca1\u6709\u5947\u70b9\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5f00\u59cbdfs\n else\n  if a[0]=2 then dfs(a[1])//\u4e24\u4e2a\u5947\u70b9\u4ece\u5b57\u5178\u5e8f\u5c0f\u7684\u4e00\u4e2a\u5f00\u59cb\uff08\u904d\u53860-58\uff09\n else//\u5426\u5219\u591a\u4e8e3\u4e2a\u5947\u70b9\u6216\u8005\u67091\u4e2a\u5947\u70b9\u5c31\u4e0d\u53ef\u80fd\n begin\n  writeln('No Solution');\n  halt;\n end;\n for i:=tot downto 1 do write(chr(c[i]+ord('A')));//\u6253\u5370\n writeln;\nend.\n```",
        "postTime": 1502107867,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u591a\u7ed9C\u515a\u4e00\u70b9\u7231\n\n\u628a\u4e24\u4e2a\u5b57\u6bcd\u62c6\u6210\u4e24\u4e2a\u9876\u70b9 \u7136\u540e\u6784\u9020\u4e00\u4e2a\u65e0\u5411\u56fe \uff0c\u8fd9\u6837\u6839\u636e\u6b27\u62c9\u56de\u8def \u5f53\u4e00\u4e2a\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570\u65f6 \u7eaf\u5728\u6b27\u62c9\u73af \u800c\u53ea\u67092\u4e2a\u5947\u6570\u5ea6\u6570\u65f6\uff0c\u5b58\u5728\u6b27\u62c9\u8def\u5f84 \u56e0\u6b64\u5148\u9a8c\u8bc1\u4e00\u4e0b\u7136\u540edfs \u8fd9\u91cc\u4e3a\u4e86\u50a8\u5b58\u7b54\u6848\u6211\u7528\u4e86\u53cc\u7aef\u961f\u5217\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u7528 \u5077\u70b9\u61d2\uff0c\u81f3\u4e8e\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u8bdd \u62cd\u4e00\u4e0b\u5e8f\u5c31\u597d\u4e86 \u800c\u5982\u679c\u4f60\u7528 vector\u7684\u8bdd \u76f4\u63a5\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff08\u6211\u5c31\u662f\u8fd9\u4e48\u505a\u7684\uff09\uff0c\u800c\u5982\u679c\u4f60\u7528\u94fe\u8868\u7684\u53f7 \u9700\u8981\u9996\u5b57\u6bcd\u4ece\u5c0f\u5230\u5927 \u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u4ece\u5927\u5230\u5c0f\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<vector>\n#include<stack>\n#include<algorithm>\n#include<cstdlib>\n#include<queue>\n#define maxn 3000\n#define PB(a)   push_back(a)\nusing namespace std;\ndeque<char>ans;\nvector<int >son[102];\nint n,in[maxn],checked[maxn],vis[maxn][maxn];\nstruct cur_word{\n    int a,b,nu;\n    bool operator<(const cur_word r)const{\n        return a==r.a?b<=r.b:a<=r.a;\n    }\n}word[2*maxn];\nvoid dfs(int u,int deep){\n    ans.push_back(u+'A');\n    if(deep==n+1){\n        int gg=0;\n        while(!ans.empty()){\n            char x=ans.front();\n            printf(\"%c\",x);\n            ans.pop_front();\n        }\n        exit(0);\n    }\n    for(int i=0;i<son[u].size();i++){\n        int y=son[u][i];\n        if(!vis[u][y]&&!vis[y][u]){\n            vis[u][y]=1;\n            dfs(y,deep+1);\n            vis[u][y]=0;\n        }\n    }\n    ans.pop_back();\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        char s[3];\n        scanf(\"%s\",s);\n        int a=s[0]-'A',b=s[1]-'A';\n        in[b]++,in[a]++;\n        word[i].a=a,word[i].b=b;\n        word[i+n].a=b,word[i+n].b=a;\n    }\n    sort(word+1,word+2*n+1);\n    int ccnt=0,start2=-1,start0=-1;\n    for(int i=1;i<=2*n;i++){\n        int x=word[i].a ,y=word[i].b;\n        son[x].PB(y);\n        son[y].PB(x);\n        if((in[x])%2&&!checked[x]){\n            checked[x]=1,ccnt++;\n            if(start0==-1)start0=x;\n        }\n        if(in[x]==2&&start2==-1)start2=x;\n    }\n    if(ccnt!=0&&ccnt!=2){\n        printf(\"No Solution\");\n        exit(0);\n    }\n    if(ccnt==2)dfs(start0,1);\n    if(ccnt ==0)dfs(start2,1);\n    return 0;\n}\n```",
        "postTime": 1465718138,
        "uid": 18431,
        "name": "intruder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "# \u9898\u76ee\u4f20\u9001[P1341](https://www.luogu.org/problem/P1341)\n## \u6b27\u62c9\u8def\n- \u6b27\u62c9\u5b9a\u7406 \u65e0\u5411\u56fe\u6b27\u62c9\u56de\u8def\u4e2d\u6240\u6709\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570\uff0c\u6709\u5411\u56fe\u6709\u4e24\u4e2a\u5947\u6570\u70b9\n- $dfs$\u505a\u6cd5\uff0c\u5148\u6839\u636e\u6b27\u62c9\u5b9a\u7406\uff0c\u5224\u65ad\u662f\u6b27\u62c9\u56de\u8def\u8fd8\u662f\u534a\u6b27\u62c9\u56fe\uff0c\u6b27\u62c9\u56de\u8def\u76f4\u63a5\u4ece\u6700\u5c0f\u7684$A$\u5f00\u59cb\u641c\uff0c\u534a\u6b27\u62c9\u56fe\u4ece\u5947\u6570\u5ea6\u70b9\u5f00\u59cb\u641c\u3002\n- \u8d70\u5230\u90fd\u88ab\u6807\u8bb0\u540e\u56de\u6eaf\uff0c\u8bb0\u5f55\u70b9\uff0c\u5012\u5e8f\u8f93\u51fa\u5c31\u662f\u6b27\u62c9\u56de\u8def\n## \u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,x,y,minn=2000,cnt,res;\nchar a,b;\nint e[100][100],t[100],d[100],now[100];\nvoid dfs(int x){\n\tfor(int i=0;i<58;i++)\n\t  if(e[x][i]){\n\t  \te[x][i]=e[i][x]=0;\n\t  \tdfs(i);\n\t  }\n\tt[++cnt]=x;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a>>b;\n\t\tx=a-'A';\n\t\ty=b-'A';\t\n\t\te[x][y]=1;e[y][x]=1;\n\t\td[x]++;d[y]++;\n\t\tminn=min(minn,min(x,y));\n\t}\n\tfor(int i=0;i<58;i++)\n\t  if(d[i]%2) now[++res]=i;\n\tif(res==0) dfs(minn);\n\telse if(res==2) dfs(now[1]);\n\telse {\n\t\tprintf(\"No Solution\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=cnt;i>=1;i--)\n\t  printf(\"%c\",t[i]+'A');\n\treturn 0;\n} \n```",
        "postTime": 1566566679,
        "uid": 54987,
        "name": "Vimin",
        "ccfLevel": 4,
        "title": "P1341\u65e0\u5e8f\u5b57\u6bcd\u5bf9"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u53d8\u578b\u7684\u6b27\u62c9\u56de\u8def\u3002\n\n\u4e5f\u5c31\u662f\uff1a**\u5c06\u6570\u5b57\u8868\u793a\u7684\u70b9\u6362\u6210\u4e86\u5b57\u6bcd**\n\n\u6240\u4ee5\u53ea\u8981**\u5c06\u5b57\u6bcd\u5f53\u6210\u6570\u5b57\u7406\u89e3**\uff0c\u5c31\u6ca1\u4ec0\u4e48\u96be\u5ea6\u4e86\uff1b\n\n\u6240\u4ee5\u6211\u5199\u4e86\u4e2a\u8fd9\u4e2a\uff1a\n## \u683c\u5f0f\u5316\n```\nvoid format(){\n\tif(a>='a'&&a<='z') i = a-'a'+27;\n\telse if(a>='A'&&a<='Z') i = a-'A'+1;\n\t\n\tif(b>='a'&&b<='z') j = b-'a'+27;\n\telse if(b>='A'&&b<='Z') j = b-'A'+1;\n}\n```\n\u5199\u8fd9\u4e2a\u7684\u539f\u56e0\u662f\uff1a\u6211\u4e0d\u60f3\u628a\u6570\u7ec4\u5f00\u5927\uff08\u867d\u7136\u53ef\u4ee5\u5f00\u90a3\u4e48\u5927\uff09\n\n\u7ecf\u8fc7\u8fd9\u4e00\u756a\u683c\u5f0f\u5316\u540e\uff0c\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u7684\u5b57\u6bcd\u90fd\u88ab\u8f6c\u6362\u6210\u4e861~56\u7684\u6570\u5b57\n\n**\u7136\u540e\u5c31\u5f88\u68d2~~~**\n\n\u7136\u540e\u6572\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\u2014\u2014\n\n\u53d1\u73b0\u7ed9\u81ea\u5df1\u6316\u4e86\u4e00\u4e2a\u5751\uff1a\n\n\u8f93\u51fa\u597d\u50cf\u4e5f\u8981\u683c\u5f0f\u5316\u3002\u3002\u3002\u3002\u3002\u3002\n```\nvoid print(){\n\tchar t;\n\tif(point < n+1){\n\t\tcout<<\"No Solution\";\n\t\treturn;\n\t}\n\tfor(int o = point;o>=1;o--){\n\t\tif(path[o]>=1&&path[o]<=26) t = path[o]+'A'-1;\n\t\telse if(path[o]>=27&&path[o]<=52) t = path[o]+'a'-27;\n\t\tcout<<t;\n\t}\n}\n```\n**\u7136\u540e\u53c8\u5f88\u68d2~~~**\n\n\u4e0a\u5168\u4ee3\u7801+\u6ce8\u91ca----->\n```\n#include<iostream>\nusing namespace std;  //\u89e3\u5c01\u5370\u4e4b\u672f\n\nconst int maxx = 53;  //26 + 26 + 1 = 53\n\nint n,g[maxx][maxx],du[maxx],path[1000],i,j,start,cnt,point;\n//\u76f8\u90bb\u6570\uff0c\u56fe\uff0c\u5ea6\uff0c\u6b27\u62c9\u56de\u8def\uff0c\u683c\u5f0f\u5316\u5bf9\u5e94\u7684\u4e24\u4e2a\u6570\u5b57\uff0c\u8d77\u70b9\uff0c\u6b27\u62c9\u56de\u8def\u6307\u9488\nchar a,b;\n//\u4e24\u4e2a\u5b57\u6bcd\nvoid format(){\n//\u4f20\u5165\u5b57\u6bcda,b\n\tif(a>='a'&&a<='z') i = a-'a'+27;    //\u5982\u679c\u662fa~z\uff0c\u51cf\u53bb\u2018a'\u540e\u52a0\u4e0a1+26\uff0c\u8fd9\u662f\u56e0\u4e3aascll\u7801\u4e2d\u5c0f\u5199\u5728\u5927\u5199\u7684\u540e\u9762\n\telse if(a>='A'&&a<='Z') i = a-'A'+1;\n\t\n\tif(b>='a'&&b<='z') j = b-'a'+27;\t//\u540c\u7406\n\telse if(b>='A'&&b<='Z') j = b-'A'+1;\n}\nvoid search(int m){\n\tfor(int n=1;n<=maxx;n++){\n\t\tif(g[m][n]){\n\t\t\tg[m][n]--;\n\t\t\tg[n][m]--;\n\t\t\tsearch(n);\n\t\t}\n\t}\n\tpath[++point] = m;\n\treturn;\n    \n   //\u6709\u8da3\u7684\u4e00\u7b14\u753b\n}\nvoid print(){\n\tchar t;\n\tif(point < n+1){  //\u8fd9\u662f\u4e00\u4e2a\u5c0f\u70b9\u5b50\uff0c\u56e0\u4e3a\u70b9\u6570\u548c\u8fb9\u6570+1\u8981\u76f8\u7b49\n\t\tcout<<\"No Solution\";\n\t\treturn;\n\t}\n\tfor(int o = point;o>=1;o--){\n\t\tif(path[o]>=1&&path[o]<=26) t = path[o]+'A'-1;\n\t\telse if(path[o]>=27&&path[o]<=52) t = path[o]+'a'-27;\n\t\tcout<<t;\n\t}\n   //\u81ea\u5df1\u6316\u7684\u5751\u81ea\u5df1\u586b\n}\nint main(){\n\tcin>>n;\n\tfor(int o = 1;o<=n;o++){\n\t\tcin>>a>>b;\n\t\tformat();\n\t\tg[i][j]++;\n\t\tg[j][i]++;\n\t\tdu[i]++;\n\t\tdu[j]++;\n\t}\n\tfor(int o =1;o<=maxx;o++){\n\t\tif(du[o]%2){\n\t\t\tcnt++;\n\t\t\tif(!start) start=o;\n\t\t}\n\t}\n   //\u627e\u5947\u6570\u5ea6\u7684\u70b9\n\tif(!start){//\u6ca1\u627e\u5230\u3002\u3002\u3002\u3002\u3002\u3002\n\t\tfor(int o = 0;o<maxx;o++){\n\t\t\tif(du[o]){\n\t\t\t\tstart = o;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n      //\u968f\u4fbf\u627e\u4e2a\u5076\u6570\u70b9\n\t}\n\tif(cnt && cnt!=2){//\u5982\u679c\u5947\u6570\u70b9\u4e0d\u662f\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\n    //\uff08\u6b27\u62c9\u8def\u5f84\u7684\u7ed3\u8bba\uff0c\u53ef\u4ee5\u81ea\u884c\u5b66\u4e60[\u6b27\u62c9\u56de\u8def](https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E5%9B%9E%E8%B7%AF/10036484?fr=aladdin)\uff09\n\t\tcout<<\"No Solution\";\n\t\treturn 0;\n\t}\n\tsearch(start); //\u73a9\u73a9\u4e00\u7b14\u753b\n\tprint(); //\u586b\u5751\n\treturn 0; //\u5c01\u5370\n}\n```\n\n\n## \u603b\u7ed3\n\u672c\u7a0b\u5e8f\u6700\u5927\u7684\u4eae\u70b9\u5c31\u662f\u5751\n\n\u5c06\u5b57\u6bcd\u8f6c\u6362\u6210\u4e861~56\u7684\u6570\u5b57\n\n\u5176\u5b83\u90fd\u5f88\u6b63\u5e38\n\n\u8c22\u8c22\u5927\u5bb6\n\n\u8fdf\u5230\u7684\u513f\u7ae5\u8282\u5feb\u4e50~",
        "postTime": 1559448801,
        "uid": 160877,
        "name": "Leo_Jiang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "# P1341 \u65e0\u5e8f\u5b57\u6bcd\u5bf9 \u9898\u89e3\n\n## 1. \u601d\u8def\u548c\u7b97\u6cd5\n\n### 1. \u6b27\u62c9\u8def Hierholzer \u7b97\u6cd5\n\n#### 1. \u6b27\u62c9\u8def\u3001\u6b27\u62c9\u56de\u8def\n\n\u5982\u679c\u56fe\u4e2d\u7684\u4e00\u6761\u8def\u5f84\u5305\u62ec\u6bcf\u4e2a\u8fb9\u6070\u597d\u4e00\u6b21\uff0c\u5219\u8be5\u8def\u5f84\u79f0\u4e3a\u6b27\u62c9\u8def\u5f84\u3002\n\n\u5982\u679c\u6b27\u62c9\u8def\u5f84\u662f\u4e00\u6761\u56de\u8def\uff0c\u5219\u79f0\u4e3a\u6b27\u62c9\u56de\u8def\u3002\n\n#### 2. \u6b27\u62c9\u8def\u5b58\u5728\u6027\u7684\u5224\u5b9a\uff1a\n\n\u56fe\u8fde\u901a\uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\u56fe\u6240\u6709\u9876\u70b9\u7684\u5ea6\u6570\uff08\u8fb9\u6570\uff09\u4e3a\u5076\u6570\uff0c\u6216\u8005\u9664\u4e86\u4e24\u4e2a\u5ea6\u6570\u4e3a\u5947\u6570\u5916\u5176\u4f59\u7684\u5168\u662f\u5076\u6570\u3002\n\n#### 3. Hierholzer \u7b97\u6cd5\u601d\u60f3\n\n\u901a\u8fc7\u9012\u5f52\u5bfb\u627e\u4e0e\u67d0\u4e00\u70b9\u76f8\u8fde\u7684\u8fb9\uff0c\u5220\u9664\u6b64\u8fb9\uff0c\u518d\u4ee5\u6b64\u8fb9\u7684\u7ec8\u70b9\u8fdb\u884c\u9012\u5f52\uff0c\u5c06\u5df2\u7ecf\u904d\u5386\u7684\u70b9\u52a0\u5165\u7b54\u6848\u5e8f\u5217\u4e2d\uff0c\u518d\u5012\u5e8f\u8f93\u51fa\u7b54\u6848\u961f\u5217\u3002\n\n\u5c31\u76f8\u5f53\u4e8e\u9010\u6b65\u63d2\u5165\u8fb9\uff0c\u5224\u65ad\u56fe\u7684\u6bcf\u4e00\u4e2a\u8fb9\u662f\u5426\u7528\u5230\u3002\n\n### 2. \u672c\u9898\u601d\u8def\n\n\u672c\u9898\u53ef\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u5b57\u7b26\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u8981\u6c42\u5728\u4e00\u8d77\u7684\u5b57\u7b26\u4e32\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u5373\u53ef\u770b\u4f5c\u662f\u6c42\u6b64\u56fe\u7684\u6b27\u62c9\u8def\u3002\n\n## 2. \u4ee3\u7801\u5b9e\u73b0\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nunsigned short int a[60][60];//\u56fe\nunsigned short int d[60];//\u5ea6\u6570\nunsigned short int way[1800];\n//\u8bb0\u5f55\u7b54\u6848\u7684\u5e8f\u5217\uff0c\u5f00\u5927\u70b9\u4fdd\u9669\nunsigned short int n,from,to,s,maxl=0,minl=60;\nunsigned short int cnt;\nchar b,c;\nvoid find(unsigned short int i)\n//Hierholzer\u7b97\u6cd5\u7684\u9012\u5f52\n{\n    unsigned short int j;\n    for(j=minl;j<=maxl;j++)//\u627e\u8fb9\n    {\n        if(a[i][j]>0)\n        {\n            a[i][j]--;\n            a[j][i]--;\n            find(j);//\u9012\u5f52\n        }\n    }\n    cnt++;\n    way[cnt]=i;//\u8bb0\u5f55\u7b54\u6848\u5e8f\u5217\n    return;\n}\nunsigned short int maxi(unsigned short int x,unsigned short int y)\n//\u624b\u5199\u6700\u5927\u51fd\u6570\n{\n    return x>y?x:y;\n}\nunsigned short int mini(unsigned short int x,unsigned short int y)\n//\u624b\u5199\u6700\u5c0f\u51fd\u6570\n{\n    return x<y?x:y;\n}\nint main()\n{\n    unsigned short int i,t=0;\n    bool f;\n    scanf(\"%hd\",&n);\n    for(i=1;i<=n;i++)\n    {\n    \tcin>>b>>c;\n        b-=64;\n        c-=64;\n        unsigned short int e=(int)b,f=(int)c;\n        a[e][f]++;\n\t\ta[f][e]++;\n        d[e]++;\n        d[f]++;\n        //\u5c06\u5b57\u7b26\u8f6c\u4e3a\u6570\u5b57\u5f53\u4f5c\u70b9\u7684\u5e8f\u53f7\n        maxl=maxi(maxl,maxi(e,f));\n        minl=mini(minl,mini(e,f));\n        //\u5bfb\u627e\u6700\u5927\u3001\u6700\u5c0f\u5e8f\u53f7\n    }\n    cnt=0;\n    s=minl;\n    for(i=minl;i<=maxl;i++)\n    {\n        //\u5224\u65ad\u5947\u6570\u5ea6\u7684\u70b9\n        if(d[i]%2==1)\n        {\n            if(f==0)\n            {\n            \ts=i;\n            \tf=1;\n            }\n            t++;\n        }\n    }\n    if(t>2)\n    //\u6b27\u62c9\u8def\u5b58\u5728\u6027\u7684\u5224\u5b9a\n    {\n    \tprintf(\"No Solution\");\n    \treturn 0;\n\t}\n    find(s);\n    if(cnt<n+1)\n    //\u82e5\u7b54\u6848\u5e8f\u5217\u4e2d\u6ca1\u6709n+1\u4e2a\u5143\u7d20\uff0c\u5219\u6b64\u56fe\u4e0d\u5b58\u5728\u6b27\u62c9\u8def\n    {\n    \tprintf(\"No Solution\");\n    \treturn 0;\n    }\n    for(i=cnt;i>0;i--)\n    {\n    \tway[i]+=64;\n        printf(\"%c\",way[i]);\n        //\u5012\u5e8f\u8f93\u51fa\n    }\n    return 0;\n}\n```\n\n\u8bc4\u6d4b\u7ed3\u679c\n\nAccepted  100 \n\n\u7528\u65f6: 29ms / \u5185\u5b58: 820KB",
        "postTime": 1559300261,
        "uid": 158626,
        "name": "lzcjoe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u6b64\u9898\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002\n\n\u5bf9\u4e8e\u9898\u76ee\u7684\u610f\u601d\u8fd8\u662f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u3002\u5bf9\u4e8e\u7ed9\u51fa\u7684\u8981\u6c42\uff0c\u53ca\u65f6\u5c06\u5b57\u6bcd\u4e4b\u95f4\u8fde\u8fb9\u5373\u53ef\uff08\u6784\u56fe\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff09\n\n\u4e4b\u540e\u9898\u76ee\u662f\u8981\u6c42\u7684\u662f\u6ee1\u8db3\u6240\u6709\u8981\u6c42\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002\u7531\u4e8e\u662f\u8981\u6c42\u6ee1\u8db3\u6240\u6709\u6761\u4ef6\uff0c\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u8981\u8d70\u8fc7\u6240\u6709\u8fb9\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\u3002\n\n\u4e4b\u540e\u6ce8\u610f\u5408\u6cd5\u5224\u65ad\u5373\u53ef\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\n\n\u3010accepted code\u3011\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n;\nint vhash[1100][1100];\nint tot=0;\nint vis[11000];\nint gin[11000];\n\nvoid readp(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        string st;\n        cin>>st;\n        int x,y;\n        x=st[0];y=st[1];\n        vis[st[0]]=1;\n        vis[st[1]]=1;\n        vhash[x][y]++;vhash[y][x]++;\n        gin[x]++;\n        gin[y]++;\n    }\n}\n\nint ans[11100],cnt=0;\n\nvoid dfs(int pos){\n    for(int i='A';i<='Z';i++)\n    if(vhash[i][pos]>0){\n        vhash[i][pos]--;//\u5220\u8fb9\u5927\u6cd5\u597d\n        vhash[pos][i]--;\n        dfs(i);\n    }\n    for(int i='a';i<='z';i++)\n    if(vhash[i][pos]>0){\n        vhash[i][pos]--;\n        vhash[pos][i]--;\n        dfs(i);\n    }\n    ans[++cnt]=pos;\n}\n\nvoid work(){\n    int tip=-1;\n    int qt=0;\n    for(int i='A';i<='Z';i++)\n    if(vis[i]==1){\n        if(gin[i]%2!=0)qt++;\n        if(tip==-1)tip=i;\n        if(gin[tip]%2==0&&gin[i]%2!=0){\n            tip=i;\n        }\n    }//\u4e24\u8005\u6548\u679c\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u662f\u4e24\u4e2a\u5206\u5f00\u7684\u89e3\u96c6\n    for(int i='a';i<='z';i++)\n    if(vis[i]==1){\n        if(gin[i]%2!=0)qt++;\n        if(tip==-1)tip=i;\n        if(gin[tip]%2==0&&gin[i]%2!=0){\n            tip=i;\n        }\n    }\n    \n    dfs(tip);\n    //\u5224\u65adit is very important \n    if(qt&&qt!=2)cout<<\"No Solution\"<<endl;\n    else if(cnt<n+1)cout<<\"No Solution\"<<endl;\n    else {\n        for(int i=cnt;i>=1;i--)\n        cout<<char(ans[i]);\n        cout<<endl;\n    }\n}\n\nint main(){\n    readp();\n    work();\n    return 0;\n}\n```\n\n\u6700\u540e\u611f\u8c22\u7ba1\u7406\u5458\u767e\u5fd9\u4e4b\u4e2d\uff0c\u5ba1\u6838\u6b64\u9898\u89e3\uff0c\u671b\u7ba1\u7406\u5458dalao \u65a7\u6b63\n\n",
        "postTime": 1543852939,
        "uid": 25193,
        "name": "glimmer",
        "ccfLevel": 0,
        "title": "P1341 \u65e0\u5e8f\u5b57\u6bcd\u5bf9"
    },
    {
        "content": "\u672c\u9898\u5728\u5224\u65ad\u6b27\u62c9\u56de\u8def\u7684\u65f6\u5019\u76f8\u5bf9\u5bb9\u6613\uff0c\u5224\u65ad\u6b27\u62c9\u8def\u7684\u65f6\u5019\u8981\u5224\u65ad\u4e00\u4e0b\u56fe\u662f\u5426\u8fde\u901a\uff0c\u5426\u5219\u65e0\u6cd5\u904d\u5386\u5b8c\u6574\u5f20\u56fe\u3002\n\n\u8fd9\u91cc\u5728\u5224\u65ad\u56fe\u662f\u5426\u8fde\u901a\u7684\u65f6\u5019\uff0c\u6211\u9009\u62e9\u4f7f\u7528\u5272\u8fb9\u6765\u5224\u65ad\u3002\u6bcf\u6b21**\u78b0\u5230\u5947\u6570\u4e2a\u5ea6\u70b9\u7684\u7aef\u70b9\u65f6\u5c31\u5224\u65ad\u4e00\u6b21\u5272\u8fb9**\uff0c\u5982\u679c\u8be5\u8fb9\u662f\u5272\u8fb9\u800c\u4e14\u4e0d\u662f\u6700\u540e\u4e00\u6761\u8fb9\u7684\u8bdd\uff0c\u90a3\u5c31\u5148\u4e0d\u8f93\u51fa\u3002\n\n\u5728\u9009\u62e9\u56fe\u7684\u5b58\u50a8\u65b9\u5f0f\u4e0a\uff0c\u6211\u9009\u62e9\u90bb\u63a5\u77e9\u9635\u30021\u662f\u9700\u8981\u5b57\u5178\u5e8f\u8f93\u51fa\u8fd8\u6709\u5220\u9664\u8fb9\u7684\u65f6\u5019\u76f8\u5bf9\u5bb9\u6613\uff0c2\u662f\u6570\u636e\u91cf\u4e0d\u662f\u5f88\u5927\u90bb\u63a5\u77e9\u9635\u4e5f\u4e0d\u4f1aT\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<string>\n#include<cstring>\nusing namespace std;\n\nint edge[53][53];  //\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u8fd8\u662f\u90bb\u63a5\u77e9\u9635\u65b9\u4fbf\nint dudian[53];\nint n;\nbool gebian[53][53];\nint num[53], low[53];\n\nvoid dfs(int father, int node)  //\u7236\u7ed3\u70b9\u548c\u5b50\u8282\u70b9\uff0c\u627e\u5272\u8fb9\n{\n    num[node] = num[father] + 1;  //\u521d\u59cb\u5316\n    low[node] = num[node];  //\u6700\u591a\u80fd\u8bbf\u95ee\u5230\u81ea\u5df1\n    for (int i = 1; i <= 52; i++)\n    {\n        if (edge[node][i])\n        {\n            if (!num[i])\n            {\n                //child++;\n                dfs(node, i);\n                low[node] = min(low[node], low[i]);\n            }\n            else\n            {\n                if (i != father)\n                {\n                    low[node] = min(low[node], num[i]);\n                }\n            }\n        }\n    }\n    if (low[node] > num[father])\n    {\n        gebian[father][node] = gebian[node][father] = 1;\n    }\n}\n\nint Hash(char c)\n{\n    if (isupper(c))\n    {\n        return c - 'A' + 1;\n    }\n    else if (islower(c))\n    {\n        return c - 'a' + 27;\n    }\n    return 0;\n}\n\nchar anti_Hash(int i)\n{\n    if (i < 27)\n    {\n        return i + 'A' - 1;\n    }\n    else\n    {\n        return i + 'a' - 27;\n    }\n}\n\nvoid oula(int start)  //\u6b27\u62c9\u8def\u5c31\u662f\u4e00\u7b14\u753b\u95ee\u9898\n{\n    cout << anti_Hash(start);\n    for (int i = 0; i < n; i++)  //n\u6761\u8fb9\n    {\n        if (edge[start][start] && dudian[start] == 1)\n            //\u76f8\u540c\u70b9\u7684\u60c5\u51b5\u8981\u7279\u5224\uff0c\u5426\u5219\u53ef\u80fd\u56de\u4e0d\u6765\n            //\u8981\u5728\u5ea6\u70b9\u6570\u4e3a1\u7684\u60c5\u51b5\u4e0b\u7279\u5224\n        {\n            cout << anti_Hash(start);\n            edge[start][start] = 0;\n            continue;\n        }\n        for (int j = 1; j <= 52; j++)\n        {\n            if (edge[start][j])\n            {\n                if (dudian[start] == 1)  //\u5272\u8fb9\u4e5f\u80fd\u8f93\u51fa\uff0c\u5148\u5224\u65ad\u5ea6\u70b9\u662f\u5426\u4e3a1\n                {\n                    if (start != j)\n                    {\n                        dudian[start]--;\n                        dudian[j]--;\n                    }\n                    edge[start][j] = edge[j][start] = 0;\n                    start = j;\n                    cout << anti_Hash(start);\n                    break;\n                }\n                if (dudian[start] % 2 == 1)  \n                    //\u5ea6\u70b9\u662f\u5947\u6570\u8981\u91cd\u65b0\u5224\u65ad\u4e00\u4e0b\u5272\u8fb9\uff0c\u6709\u4e9b\u53ef\u80fd\u53d8\u6210\u5272\u8fb9\u4e86\n                {\n                    memset(num, 0, sizeof(int) * 53);\n                    num[start] = low[start] = 1;\n                    dfs(start, j);  //\u53ea\u4f1a\u4ece\u975e\u5272\u8fb9\u53d8\u6210\u5272\u8fb9\n                }\n                if (gebian[start][j] == 0)  //\u5272\u8fb9\u60c5\u51b5\u4e0d\u80fd\u62d3\u5c55\uff0c\u8981\u7559\u5230\u6700\u540e\u62d3\u5c55\n                {\n                    if (start != j)\n                    {\n                        dudian[start]--;\n                        dudian[j]--;\n                    }\n                    edge[start][j] = edge[j][start] = 0;\n                    start = j;\n                    cout << anti_Hash(start);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvoid oulahui(int start)  //\u6b27\u62c9\u8def\u5c31\u662f\u4e00\u7b14\u753b\u95ee\u9898\n{\n    cout << anti_Hash(start);\n    for (int i = 0; i < n; i++)  //n\u6761\u8fb9\n    {\n        for (int j = 1; j <= 52; j++)\n        {\n            if (edge[start][start] && dudian[start] == 1)\n                //\u76f8\u540c\u70b9\u7684\u60c5\u51b5\u8981\u7279\u5224\uff0c\u5426\u5219\u53ef\u80fd\u56de\u4e0d\u6765\n                //\u8981\u5728\u5ea6\u70b9\u6570\u4e3a1\u7684\u60c5\u51b5\u4e0b\u7279\u5224\n            {\n                cout << anti_Hash(start);\n                edge[start][start] = 0;\n                break;\n            }\n            if (edge[start][j])\n            {\n                if (start != j)\n                {\n                    dudian[start]--;\n                    dudian[j]--;\n                }\n                edge[start][j] = edge[j][start] = 0;\n                start = j;\n                cout << anti_Hash(start);\n                break;\n            }\n        }\n    }\n}\n\nint main()  //\u6b27\u62c9\u8def\u7684\u60c5\u51b5\u4e0b\u8981\u5224\u65ad\u5272\u8fb9\n{\n    string s;\n    int u, v;\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n    {\n        cin >> s;\n        u = Hash(s[0]), v = Hash(s[1]);\n        if (u != v)  //\u76f8\u540c\u70b9\u7684\u60c5\u51b5\u7279\u5224\n        {\n            dudian[u]++;  //\u5ea6\u70b9+1\n            dudian[v]++;\n        }\n        edge[u][v] = edge[v][u] = 1;\n    }\n    int count = 0;\n    for (int i = 1; i <= 52; i++)  //\u5224\u65ad\u5ea6\u70b9\u6570\u4e3a\u5947\u70b9\u7684\u70b9\u7684\u4e2a\u6570\n    {\n        if (dudian[i] % 2 != 0)\n        {\n            count++;\n        }\n    }\n    if (count != 0 && count != 2)  //\u4e0d\u6ee1\u8db3\u6b27\u62c9\u8def\u6761\u4ef6\uff0c0\u4e2a\u5947\u70b9\u624d\u662f\u56de\u8def\n    {\n        cout << \"No Solution\" << endl;\n        return 0;\n    }\n    int start_alpha = 0;\n    if (count == 0)\n    {\n        for (int i = 1; i <= 52; i++)\n        {\n            if (dudian[i])\n            {\n                start_alpha = i;\n                oulahui(i);\n                break;\n            }\n        }\n    }\n    else\n    {\n        for (int i = 1; i <= 52; i++)\n        {\n            if (dudian[i] % 2 == 1)\n            {\n                start_alpha = i;\n                oula(i);\n                break;\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1541058150,
        "uid": 103829,
        "name": "MrBlack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u4eca\u5929\u5b9e\u5728\u662f\u592a\u7d2f\u4e86\u3002\u3002\u3002\n\n\u8d76\u300a\u5802\u5409\u8bc3\u5fb7\u300b\u3002\u3002\u3002\uff08\u6de6\uff01\uff01\uff01\uff09\n\n\u628a\u6628\u5929\u7684\u6ca1\u5e72\u6389\u7684\u84dd\u9898\u5e72\u6389\u4e86\uff0c?\uff0c\u6c34\u5e73\u53c8\u4e0b\u964d\u4e86\u3002\u3002\u3002\n\n------------\n\u9898\u76ee\uff1a[ P1341 \u65e0\u5e8f\u5b57\u6bcd\u5bf9](https://www.luogu.org/problemnew/show/P1341)\n\n\u4e00\u9053\u6709\u70b9\u5c0f\u70e6\u7684\u6b27\u62c9\u56de\u8def\u9898\u3002\n\n\n------------\n\u601d\u8def\u5982\u4e0b\uff1a\n\t\n    1. \u5b58\u56fe\u5efa\u8bae\u4f7f\u7528\u8fde\u63a5\u77e9\u9635\uff08\u94fe\u5f0f\u524d\u5411\u661f\u7092\u70e6\uff0c\u83ab\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\uff09\n    2. \u6570\u636e\u5904\u7406\u662f\u5173\u952e\u70b9\uff0c\u6211\u7684\u8f6c\u6362\u5f88\u88f8\uff1a\n            A-1 B-2...Z-26 a-27...z-52\n       \u7c97\u66b4\u6709\u6548\n    3. \u5224\u65ad\u56fe\u662f\u5426\u4e3a\u4e00\u4e2a\u5b58\u5728\u6b27\u62c9\u8def\u7684\u56fe\uff0c\u5206\u4e24\u7c7b\uff1a\n    \t\ta\uff09\u4e0d\u5728\u4e00\u5f20\u56fe\u91cc\uff0c\u5e76\u67e5\u96c6\u3002\n            b\uff09\u5947\u8282\u70b9\u6570\u4e0d\u662f0\u62162\u3002\n    4. \u627e\u8d77\u70b9\uff1a\n    \t\ta)\u5b58\u5728\u5947\u8282\u70b9\uff0c\u53d6\u6700\u5c0f\u3002\n            b\uff09\u4e0d\u5b58\u5728\u5947\u8282\u70b9\uff0c\u76f4\u63a5\u627e\u6700\u5c0f\u3002\n    5. \u63a5\u4e0b\u6765\u5c31\u4e71\u641edfs\u5427\u3002\n    \n\n------------\n\n```cpp\n#include<bits/stdc++.h>\n#define Maxn 54\n#define Maxm 10000\n\nusing namespace std;\n\n//\u53d8\u5316\uff0c\u5c06\u5b57\u6bcd\u8f6c\u6210\u6570\u5b57\u987a\u5e8f\uff0c\u4fbf\u4e8e\u5904\u7406\nint change(char a){\n\tif(a>='A' && a<='Z')\n\t\treturn (a-'A'+1);\n\t\n\tif(a>='a'&&a<='z'){\n\t\treturn (a-'a'+1+26);\n\t}\n\t\n}\nchar uch(int a){\n\tchar now;\n\tif(a>=1&&a<=26)\n\t\tnow='A'+a-1;\n\tif(a>=27&&a<=52)\n\t\tnow='a'+(a-26)-1;\n\treturn now;\n}\n\nint Map[Maxn][Maxn];\nint du[Maxn];\n\n//\u5e76\u67e5\u96c6\nint fa[Maxn]; \nint find(int a){\n\tif(fa[a]!=a)\n\t\tfa[a]=find(fa[a]);\n\treturn fa[a];\n}\nvoid add(int a,int b){fa[find(a)]=find(b); return;}\n\n//DFS\nint vis[Maxn][Maxn];\nint ans[Maxm];\nint n;\nvoid print(){\n\tfor(int i=1;i<=n+1;i++)\n\t\tcout<<uch(ans[i]);\n}\nvoid dfs(int now,int cnt){\n\t\n\tans[cnt]=now;\n\tbool flag=true;\n\tif(cnt==n+1){\n\t\tprint();\n\t\texit(0);\n\t}\n\tfor(int i=1;i<=52;i++){\n\t\tif(Map[now][i]==1&&vis[now][i]==0){\n\t\t\tflag=false;\n\t\t\tvis[now][i]=1; vis[i][now]=1;\n\t\t\tdfs(i,cnt+1);\n\t\t\tvis[now][i]=0; vis[i][now]=0;\n\t\t}\n\t}\n\t\n}\n\nint main(){\n\t\n\t//init\n\tfor(int i=1;i<=52;i++)\n\t\tfa[i]=i;\n\t\n\t\n\tcin>>n;\n\t\n\tfor(int i=1;i<=n;i++){\n\t\tchar x1,x2; cin>>x1>>x2;\n\t\tint a1,a2; a1=change(x1); a2=change(x2);\n\t\tMap[a1][a2]=1; Map[a2][a1]=1;\n\t\tdu[a1]++; du[a2]++;\n\t\tadd(a1,a2);\n\t}\n\t\n    //\u5224\u65ad\u662f\u5426\u662f\u4e00\u5f20\u56fe \n\tint root_num=0;\n\tfor(int i=1;i<=52;i++)\n\t\tif(du[i]!=0&&fa[i]==i)\n\t\t\troot_num++;\n\tif(root_num!=1){\n\t\tcout<<\"No Solution\";\n\t\treturn 0;\n\t}\n\t\n\t//\u5947\u8282\u70b9\n\tint st=-1;//\u5f00\u59cb\u7684\u8282\u70b9\n\tint ji_num=0;\n\tfor(int i=1;i<=52;i++)\n\t\tif(du[i]!=0&&du[i]%2==1){\n\t\t\tji_num++;\n\t\t\tif(st==-1)\n\t\t\t\tst=i;\n\t\t}\n\tif(!(ji_num==0||ji_num==2)){\n\t\tcout<<\"No Solution\";//\u6b27\u62c9\u56fe\u89c4\u5f8b\n\t\treturn 0;\n\t}\n\t//\u5076\u8282\u70b9\n\tif(st==-1){\n\t\tfor(int i=1;i<=52;i++)\n\t\t\tif(du[i]!=0){\n\t\t\t\tst=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\t\n\tdfs(st,1);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1539878998,
        "uid": 29304,
        "name": "DYI_ZJZGC",
        "ccfLevel": 0,
        "title": "10.18\u65e5\u5fd7"
    },
    {
        "content": "### \u5f88STL\u7684\u9898\u89e3\n\u60f3\u6cd5\u4f3c\u4e4e\u8ddf\u522b\u4eba\u4e0d\u5927\u4e00\u6837\uff0c\u6211\u4e0d\u559c\u6b22\u5728char\u548cint\u4e4b\u95f4\u6362\u6765\u6362\u53bb\uff0c\u6240\u4ee5\u9009\u62e9\u4e86\n```cpp\nmap<char, vector<int> > G;\n```\n\n  \n  \u81f3\u4e8e\u5b57\u5178\u5e8f\uff0c\u8fd9\u4e2asort\u4e00\u4e0b\u5c31ok\u3002\n \n \u5176\u4ed6\u7684\u5c31\u662f\u5e38\u89c4dfs\uff0c\u7279\u522b\u6ce8\u610f\u4e00\u5b9a\u8981**\u7528\u6808\u8bb0\u5f55\u5012\u5e8f\u8f93\u51fa**\u3002\u4e0d\u7136\u53ea\u6709\u4e00\u534a\u5206\u6570\u3002\n \n \u4f3c\u4e4e\u6709\u4eba\u95ee\u9053\uff1a\u4e3a\u4ec0\u4e48\u8981**\u7528\u6808\u8bb0\u5f55\u5012\u5e8f\u8f93\u51fa**\uff1f\uff1f\n \uff08dalao\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u672c\u6bb5\uff09\n \n \u6211\u5728\u8fd9\u91cc\u7b80\u5355\u800c\u5f62\u8c61\u5730\u89e3\u7b54\u4e00\u4e0b\uff1a\n \n \u4e3e\u4e2a\u4f8b\u5b50\uff1a\n ![](https://cdn.luogu.com.cn/upload/pic/34963.png)\n \n \u5c31\u8fd9\u4e2a\u56fe\u2191\n \n \u663e\u7136\uff0c\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u70b9\u5ea6\u6570\u4e3a\u5947\uff0c\u53ef\u4ee5\u201c\u4e00\u7b14\u753b\u201d\u3002\u6211\u4eec\u5728\u641c\u7d22\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u6837\u5199\uff1a\n ```cpp\nvoid dfs(char u)\n{\n\tcout<<u;//\u5148\u8f93\u51fa\n\tfor (vector<int>::iterator it = G[u].begin(); it != G[u].end(); it++)\n\t{\n\t\tchar now = *it;\n\t\tif (!vis[u][now])\n\t\t{\n\t\t\tvis[u][now] = 1;\n\t\t\tvis[now][u] = 1;\n\t\t\tdfs(now);\n\t\t}\n\t}\n\t\n}\n```\n\n\u90a3\u5c31\u53ea\u670950\u5206\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e0a\u9762\u6240\u8bf4\u7684\u56fe\u8be5dfs\u7684\u8f93\u51fa\u662f\uff1a\n\nCABDC\n\n\u800c\u6b63\u89e3\u662fCCABD\n\n\u8fd9\u5c31\u8981\u4f7f\u7528\u8fd9\u79cd**\u7528\u6808\u8bb0\u5f55\u5012\u5e8f\u8f93\u51fa**\u7684\u65b9\u5f0f\u4e86\u3002\n\n\u89c2\u5bdf\u4e0a\u9762\u9519\u8bef\u7684\u8f93\u51fa\uff0c\u53d1\u73b0\u672c\u8be5\u7acb\u5373\u8f93\u51fa\u7684C\u88ab\u6ede\u540e\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2aC**\u65e9\u8be5\u8f93\u51fa**\u4e86\u3002\u4e5f\u5c31\u662f\u8bf4\u3002\u6211\u4eec\u5e94\u8be5\u4fdd\u8bc1\u4e00\u4e2a\u70b9\u5728\u8f93\u51fa\u4e4b\u524d**\u786e\u4fdd\u4e4b\u524d\u7684\u6240\u6709\u70b9\u5df2\u7ecf\u8f93\u51fa\u8fc7\u4e86**\u3002\u6240\u4ee5\u8bf4\u8f93\u51fa\u7684\u64cd\u4f5c\u8981\u653e\u5728\u6700\u540e\uff0c\u8003\u8651\u5230\u987a\u5e8f\u95ee\u9898\u5e94\u8be5\u5012\u5e8f\u8f93\u51fa\uff0c\u5806\u4e2a\u6808\u5c31\u884c\u4e86\u3002\n \n \n \u4e0b\u9762\u662fAC\u4ee3\u7801\u3002\n \u6570~~\u636e\u4e0d\u591f\u5f3a\uff0c\u5077\u4e2a\u61d2\u5c31\u4e0d\u5224\u65ad\u56fe\u7684\u8fde\u901a\u6027\u4e86\u3002~~\n ```cpp\n// P1341.cpp: \u5b9a\u4e49\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002\n//\n\n#include \"stdafx.h\"\n#include <bits/stdc++.h>\nusing namespace std;\nmap<char, vector<int> > G;\nmap<char, int> cnt;\nbool vis[200][200];\nstack<char> sta;\nint n, ed;\n\n\nvoid dfs(char u)\n{\n\tfor (vector<int>::iterator it = G[u].begin(); it != G[u].end(); it++)\n\t{\n\t\tchar now = *it;\n\t\tif (!vis[u][now])\n\t\t{\n\t\t\tvis[u][now] = 1;\n\t\t\tvis[now][u] = 1;\n\t\t\tdfs(now);\n\t\t}\n\t}\n\tsta.push(u);\n}\nbool cmp(char i, char j)\n{\n\treturn int(i) < int(j);\n}\nint main()\n{\n\tcin >> n;\n\tbool flag = 0;\n\tchar c = getchar(), q = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tstring s;\n\t\tcin >> s;\n\t\tG[s[0]].push_back(s[1]);\n\t\tG[s[1]].push_back(s[0]);\n\t\tcnt[s[0]]++;\n\t\tcnt[s[1]]++;\n\t}\n\tint od = 0, x1 = 0, x2 = 0, c1 = 0, c2 = 0;\n\tfor (map<char, int>::iterator it = cnt.begin(); it != cnt.end(); it++)\n\t{\n        //\u4fdd\u8bc1\u4e00\u4e0b\u5b57\u5178\u5e8f\u2193\n\t\tsort(G[it->first].begin(), G[it->first].end(), cmp);\n\t\tif (it->second % 2 != 0)\n\t\t{\n\t\t\tod++;//\u8bb0\u5f55\u5947\u6570\u70b9\u7684\u4e2a\u6570\n            //\u2193\u5982\u679c\u5b58\u5728\u5947\u6570\u70b9\uff0c\u90a3\u4e48\u8fd9\u4fe9\u70b9\u5c31\u662f\u8def\u5f84\u7684\u4e00\u59cb\u4e00\u672b\u4e86\n            //\u8bb0\u5f55\u4e0b\u6765\n\t\t\tif (x1)x2 = it->second, c2 = it->first;\n\t\t\telse x1 = it->second, c1 = it->first;\n\t\t}\n\t}\n\tif (od != 2 && od != 0)\n\t{\n\t\tcout << \"No Solution\";\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tchar minst = 'z';\n\t\tfor (map<char, vector<int> >::iterator it = G.begin(); it != G.end(); it++)\n\t\t{\n\t\t\tif (minst > it->first)minst = it->first;\n\t\t}\n\t\tif (od == 2)\n\t\t{\n\t\t\tminst = min(c1, c2);\n\t\t}\n\t\tdfs(minst);//\u641c\n\t}\n\twhile (!sta.empty())\n\t{\n\t\tcout << sta.top();\n\t\tsta.pop();\n\t}\n\treturn 0;\n}\n\n\n```\n ",
        "postTime": 1538146327,
        "uid": 68987,
        "name": "kion",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u4f1a\u5bf9Hierholzer\u6cd5\u8fdb\u884c\u89e3\u91ca\u3002\n\nstep1\uff1a40\u5206\u5fc5\u987b\u5206\uff08\u66b4\u529b\uff09\n------------\n\n\n\u5206\u6790\u9898\u76ee\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u662f\u4e00\u4e2a\u8981\u8868\u8fbe\u4e8b\u4ef6\uff0c\u800c\u9898\u76ee\u8981\u6c42\u5b83\u4eec\u521a\u597d\u9996\u4f4d\u76f8\u63a5\uff0c\u9996\u5148\u8981\u660e\u767d\u8fd9\u662f\u4e00\u4e2a\u4e8b\u4ef6\u5728\u8fb9\u4e0a\u7684\u56fe\uff0c\u4e8e\u662f\u5c06\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u5bf9\u8fde\u6210\u8fb9\u6765\u8868\u793a\u3002\n\t\n\u5373\u9898\u76ee\u8981\u6c42\u6bcf\u4e00\u6761\u8fb9 \u7ecf\u8fc7\u4e14\u53ea\u7ecf\u8fc7\u4e00\u6b21\n\n\nstep2\uff1a\u89e3\u51b3\u7ecf\u8fc7\u4e14\u53ea\u7ecf\u8fc7\u4e00\u6b21\u6bcf\u4e00\u6761\u8fb9\n------------\n\n\u6b63\u89e3\u4e0d\u9700\u8981\u7684\u66b4\u529b\u7b97\u6cd5\uff08\u4f46\u662f\u770b\u61c2\u9898\u89e3\u9700\u8981\uff09\uff1a\n------------\n\n\t\n\u7ef4\u62a4vis[ ][ ]\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u6761\u8fb9\uff08\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\uff09\u662f\u5426\u88ab\u8bbf\u95ee\uff08\u9700\u8981\u9000\u6808\u65f6\u6d88\u9664\u6807\u8bb0\uff09\uff0c\n\n\u679a\u4e3e\u8d77\u70b9\u8fdb\u884cdfs\uff0c\u76f4\u5230\u521a\u597d\u8d70\u5b8c\u6bcf\u4e00\u6761\u8fb9\u4e3a\u6b62\u3002\n\n\n\u6b63\u89e3\u90e8\u5206\uff1aHierholzer\n------------\n\n*\u6b27\u62c9\u56de\u8def/\u6b27\u62c9\u8def\u5f84 \u7684\u5b9a\u7406\uff1a\n\n1\uff0c\u4e00\u4e2a\u65e0\u5411\u56fe\u4e3a\u6b27\u62c9\u56fe\uff08\u6709\u6b27\u62c9\u56de\u8def\uff09\uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\u56fe\u6240\u6709\u9876\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570,\u4e14\u8be5\u56fe\u662f\u8fde\u901a\u56fe\u3002\uff08\u53ef\u5012\u63a8\uff0c\u5145\u8981\uff09\n\n2\uff0c\u4e00\u4e2a\u65e0\u5411\u56fe\u4e3a\u534a\u6b27\u62c9\u56fe\uff08\u6709\u6b27\u62c9\u8def\u5f84\uff09\uff0c\u5f53\u4e14\u4ec5\u5f53\u8be5\u56fe\u9664\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u4e24\u4e2a\u9876\u70b9\u7684\u5ea6\u4e3a\u5947\u6570\uff0c\u5176\u4f59\u6240\u6709\u9876\u70b9\u5ea6\u6570\u90fd\u4e3a\u5076\u6570,\u4e14\u8be5\u56fe\u662f\u8fde\u901a\u56fe\u3002\uff08\u53ef\u5012\u63a8\uff0c\u5145\u8981\uff09\n\n\n\nHierholzer\u5176\u5b9e\u662f\u4ece\u57fa\u672c\u7684dfs\u51fa\u53d1\uff0c\u6211\u4eec\u89c2\u5bdf\u4e0b\u9762\u4e00\u4e2a\u56fe\uff0c\u5047\u5982\u662f\u66b4\u529bdfs\u6211\u4eec\u5f88\u6709\u53ef\u80fd\u4f1a\u641c\u91cd\u590d\u7684\u8def\u5f84\uff0c\u6bd4\u5982\uff1a\n\n1 ->2 ->3 ->4 ->5 ->6 ->1 (\u4e0d\u53ef\u884c\uff0c\u56de\u6eaf\u81f32)\n\n.........->7 ->8 ->9 ->2 ->3 ->4 ->5 ->6 ->1 (\u53ef\u884c)\n\n\u6211\u4eec\u53d1\u73b0\u5176\u4e2d\u5b58\u5728\u7684\u4e00\u4e2a\u5c0f\u6b27\u62c9\u56de\u8def\u7684\u5b58\u5728\uff0c\u4f7f\u5f97\u6211\u4eec\u4e0d\u5f97\u4e0d\u56de\u6eaf\uff0c\u5bfc\u81f4 3------>1 \u7684\u90e8\u5206\u91cd\u590d\u641c\u7d22\uff08\u6570\u636e\u5927\u4e86\u5c31\u6076\u5fc3\u4e86\uff09\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u53ea\u8981\u5c06\u7ea2\u8272\u548c\u84dd\u8272\u4e24\u4e2a\u56de\u8def\u5957\u8d77\u6765\uff0c\u5c31\u662f\u6b27\u62c9\u56de\u8def\u4e86\uff01\n\n\u4e0b\u9762\u6211\u4eec\u89c2\u5bdf \u70b92 \u7684\u66b4\u529b\u641c\u7d22\uff0c \u5982\u679c\u4e0d\u6d88\u9664vis\u6807\u8bb0\uff0c\u65e0\u8bba\u600e\u4e48\u641c\u7d22\uff0c\u201c2->7->8->2\u201d \u5b83\u7684\u9000\u6808\u987a\u5e8f\u7684\u5012\u5e8f\u603b\u662f\u63a5\u5728\u201c2->3--->1\u201d\u4e4b\u540e\u7684\u3002(\u8bf4\u767d\u4e86\uff0c\u8be5\u4e0e\u70b9\u76f8\u5173\uff0c\u4e14\u8fd8\u6ca1\u8d70\u8fc7\u7684\u56de\u8def\u5728\u662f\u4e00\u8d77\u7684\uff09\n\n\u4e8e\u662fHierholzer\u6cb9\u7136\u800c\u751f\uff1a\n```cpp\ndfs(\u8282\u70b9)\n{\n\t\u679a\u4e3e\u4e0b\u4e00\u6761\u8fb9-->\u5220\u9664\u8fd9\u6761\u8fb9+dsf\uff08\u8fd9\u6761\u8fb9\uff09\n    \u9000\u6808\u65f6\u5c06\u8282\u70b9\u538b\u5165 \u7b54\u6848\u6808\n}\n ```  \n \u6ce8\u610f\u9000\u6808\u65f6\u4e0d\u80fd\u6062\u590d\u8fb9\uff0c\u6240\u4ee5\u76f4\u63a5\u5220\u9664\u8fd9\u6761\u8fb9\u5c31\u597d\u4e86\n \n\n![Euler](https://cdn.luogu.com.cn/upload/pic/32959.png )\n\n*\u6b27\u62c9\u8def\u5f84\uff1a\u5982\u679c\u56feG\u4e2d\u7684\u4e00\u4e2a\u8def\u5f84\u5305\u62ec\u6bcf\u4e2a\u8fb9\u6070\u597d\u4e00\u6b21\uff0c\u5219\u8be5\u8def\u5f84\u79f0\u4e3a\u6b27\u62c9\u8def\u5f84\n\n*\u6b27\u62c9\u56de\u8def\uff1a\u5982\u679c\u4e00\u4e2a\u56de\u8def\u662f\u6b27\u62c9\u8def\u5f84\uff0c\u5219\u79f0\u4e3a\u6b27\u62c9\u56de\u8def\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<stack>\nusing namespace std;\n\nint num;\nbool graph[103][103];\nint du[103];\nstack <int> ans;\n\nint read(){\n    char ch=getchar();\n    while( !( ('a'<=ch && ch<='z') || ('A'<=ch && ch<='Z') ) ) ch=getchar();\n    return ch-50;\t//\u5c06\u5b57\u6bcd\u6620\u5c04\u52301--100\n}\n\n//\u6838\u5fc3\u7b97\u6cd5\uff1a\nvoid eu_dfs(int pos)\n{\n    for(int i=1; i<=100; i++)\n        if( graph[pos][i] ) {\n            graph[pos][i]=false;\n            graph[i][pos]=false; //!\n            eu_dfs(i);\n        }\n    \n    ans.push(pos);\n}\n\nint main()\n{\n    int i,j;\n    scanf(\"%d\",&num);\n    \n    int v1, v2;\n    for(i=1; i<=num; i++)\n    {\n        v1=read();\n        v2=read();\n        du[v1]++;\n        du[v2]++;\n        graph[v1][v2]=true;\n        graph[v2][v1]=true;\n    }\n    \n    //\u5b9a\u7406\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\n    int num_ji=0, sta=-1;\n    for(i=1; i<=100; i++)\n        if( du[i]&1 ) {\n            num_ji++;\n            if(sta==-1) sta=i;\t\n        }\n    \n    if( num_ji>2 || num_ji==1 ) {\n        printf(\"No Solution\"); \n        return 0;\n    } \n    \n    if(sta==-1) //\u662f\u6b27\u62c9\u56de\u8def\uff0c\u627e\u8d77\u70b9\n        for(i=1; i<=100; i++) \n            if(du[i]) {\n                sta=i;\n                break;\n            }\n    \n    eu_dfs(sta);\n    \n    int sym;\n\tif( ans.size()!=num+1 ) {\t//\u5224\u65ad\u8fde\u901a\u6027\uff08*\u5173\u4e8e\uff09\n        printf(\"No Solution\"); \n        return 0;\n    } \n    \n    while( !ans.empty() ){\n        sym=ans.top();\n        ans.pop();\n        printf(\"%c\",50+sym);\n    }\n        \n    return 0;\n} \n\n\n```\n\n*\u5173\u4e8e\u5224\u65ad\u8fde\u901a\u6027\u7684\u5224\u65ad\n------------\n\u6d1b\u8c37\u6570\u636e\u6c34\uff0c\u7ed9\u5927\u5bb6\u52a0\u4e00\u7ec4\u6570\u636e\n```cpp\n4\naZ\ntZ\nXt\nCC\n```",
        "postTime": 1536995279,
        "uid": 59989,
        "name": "jtzhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u4ee5\u4e0b\u662f\u672c\u849f\u84bb\u5bf9\u8fd9\u4e2a\u9898\u76ee\u7684\u7406\u89e3\uff0c\u5e0c\u671b\u5bf9\u5404\u4f4d\u6709\u6240\u5e2e\u52a9\u3002\n\n- \u628a\u5b57\u6bcd\u5bf9\u7684\u5173\u7cfb\u62bd\u8c61\u6210\u65e0\u5411\u8fb9\u7684\u5173\u7cfb\uff0c\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u5efa\u7acb\u4e00\u4e2a\u5bf9\u5e94\u6570\u5b57\u7684\u6620\u5c04\u3002\n\n- \u628a\u521a\u624d\u62bd\u8c61\u51fa\u6765\u7684\u56fe\u5f62\u753b\u51fa\u6765\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u9898\u76ee\u8f6c\u5316\u6210\u4e86\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u56fe\uff0c\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u80fd\u5426\u5b8c\u6210\u5bf9\u672c\u56fe\u6240\u6709\u7684\u8fb9\u7684\u904d\u5386\u7684\u95ee\u9898\u3002\n\n- \u6240\u4ee5\u6211\u4eec\u8003\u8651\u6c42\u6b27\u62c9\u8def\u5f84\uff0c\u4e0d\u4e86\u89e3\u8bf7\u63d0\u524d\u767e\u5ea6\u76f8\u5173\u6982\u5ff5\uff0c\u672c\u9898\u76ee\u53ea\u9700\u8981\u4e86\u89e3\u6b27\u62c9\u8def\u5f84\u548c\u6b27\u62c9\u56de\u8def\u7684\u6982\u5ff5\u5c31\u53ef\u4ee5\u53e3\u80e1\u51fa\u6765\uff0c\u4e0d\u4e00\u5b9a\u975e\u8981\u80cc\u4e0b\u6765\u6a21\u677f\u3002\n\n- \u5728\u6c42\u6b27\u62c9\u8def\u5f84\u7684\u65f6\u5019\u6ce8\u610f\u4ee5\u4e0b\u90e8\u5206\uff1a\n\t- \u6ce8\u610f\u5224\u65ad\u9898\u76ee\u7ed9\u51fa\u56fe\u5f62\u7684\u8fde\u901a\u6027\n    \n    - \u5229\u7528\u6b27\u62c9\u8def\u5f84\u7684\u539f\u7406\u5224\u65adeven\u70b9\u7684\u4e2a\u6570\u5c31\u53ef\u4ee5\u5224\u65ad\u672c\u9898\u76ee\u662f\u5426\u6709\u89e3\n    \n    - \u5bf9\u6b27\u62c9\u8def\u5f84\u548c\u6b27\u62c9\u56de\u8def\u7684\u60c5\u51b5\u5e94\u8be5\u5206\u7c7b\u8ba8\u8bba\n\n- \u5982\u679c\u5bf9\u6b27\u62c9\u8def\u5f84\u548cdfs\u5199\u7684\u4e0d\u719f\u7ec3\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u5185\u5bb9\uff1a\n\t\n    - \u4ece\u5c0f\u5230\u5927\u904d\u5386\u8fde\u63a5\u5b57\u7b26\uff0c\u5229\u7528\u8d2a\u5fc3\u7684\u539f\u7406\u6784\u9020\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u60c5\u51b5\u3002\n    \n    - \u7531\u4e8e\u4e0a\u9762\u8fd9\u4e00\u70b9\uff0c\u6240\u4ee5dfs\u4e2d\u6bcf\u4e00\u6b65\u90fd\u4e0d\u6298\u8fd4\uff0c\u5efa\u8bae\u8ba4\u771f\u8003\u8651\u4e00\u4e0b\u5982\u4f55\u5b9e\u73b0\u3002\n\n- \u8bb0\u5f55\u7b54\u6848\u975e\u5e38\u5173\u952e\uff0c\u5728\u5199\u9898\u76ee\u4ee5\u524d\u8bf7\u4ed4\u7ec6\u8003\u8651\u3002\u4e3a\u4e86\u4fdd\u8bc1\u9898\u76ee\u4e2d\u5bf9\u5b57\u5178\u5e8f\u7684\u8981\u6c42\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u5229\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5bf9\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u7684\u5b57\u7b26\u8fdb\u884c\u904d\u5386\u641c\u8fb9\uff0c\u4ece\u800c\u4fdd\u8bc1\u6700\u540e\uff08\u9000\u6808\uff09\u7684\u65f6\u5019\u8bb0\u5f55\u7684\u90fd\u662f\u6700\u7ec8\u7b54\u6848\u3002\n\n- \u672c\u9898\u76ee\u6ca1\u6709\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u539f\u56e0\u8bf7\u81ea\u884c\u601d\u8003\u3002\n\n\u5982\u679c\u4f60\u73b0\u5728\u627e\u5230\u4e86\u601d\u8def\uff0c\u5f3a\u70c8\u5efa\u8bae\u5148\u4e0d\u8981\u770b\u4ee3\u7801\uff0c\u81ea\u884c\u5b9e\u73b0\u3002\u8fd9\u4e2a\u9898\u76ee\u601d\u8def\u4e0d\u662f\u975e\u5e38\u96be\uff0c\u4f46\u5bf9debug\u80fd\u529b\u8981\u6c42\u8fd8\u662f\u5f88\u9ad8\u7684\uff01\u795d\u73a9\u5f97\u5f00\u5fc3\uff01\n\n\u90a3\u4e48\u672c\u849f\u84bb\u5c31\u53ea\u8d34\u6838\u5fc3\u4ee3\u7801\u4e86qwq\uff1a\n```cpp\nvoid euler(int x){//x\u8868\u793a\u76ee\u524d\u6240\u5904\u4f4d\u7f6e\n    for(int i=0;i<255;i++){\n    //\u8fd9\u91cc\u662f\u672c\u4eba\u61d2\u7701\u4e8b\uff0c\u5982\u679c\u597d\u597d\u5efa\u7acb\u6620\u5c04\u53ea\u9700\u898152\u4e2a\u5b57\u7b26\u5c31OK\n    \tif(mp[x][i]>0){//\u5982\u679c\u8fd9\u4e2a\u8fb9\u53ef\u9009\n    \t\tmp[x][i]--;//\u5220\u9664\u8fd9\u4e2a\u8fb9\uff0c\u907f\u514d\u6298\u8fd4\n            mp[i][x]--;\n            euler(i);//\u5411\u4e0b\u4e00\u5c42\u8fdb\u53d1\n        }\n    }\n    res[cnt--]=x;//\u9000\u6808\u65f6\u8bb0\u5f55\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u51fd\u6570\u52a0\u4e00\u4e2adeep\u628a\u5b83\u5199\u5728if\u91cc\u9762\u3002\n    //\u8fd9\u91cc\u672c\u4ebacnt\u521d\u59cb\u4e3an\n}\n```\n",
        "postTime": 1536845156,
        "uid": 58698,
        "name": "Nativ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    },
    {
        "content": "\u9996\u5148\u770b\u9898\u76ee\u8981\u6c42\uff0c\u8981\u6c42\u7528n+1\u4e2a\u5b57\u7b26\u8868\u793a\u51fan\u4e2a\u5b57\u6bcd\u5bf9\uff08\u65e0\u5e8f\uff09  \n\u90a3\u4e48\u4ed4\u7ec6\u60f3\u4e00\u4e0b\uff0c\u9996\u5c3e\u76f8\u63a5\u4e5f\u5c31\u662f\u4e00\u4e2a\u73af  \n\u8003\u8651n\u4e2a\u5b57\u6bcd\u5bf9\u5c31\u76f8\u5f53\u4e8en\u6761\u8fb9\uff0c\u5b57\u6bcd\u76f8\u5f53\u4e8e\u70b9\n\u800c\u53c8\u4e0d\u91cd\u590d\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f  \n\u5bf9\uff0c\u6b27\u62c9\u8def\uff08\u6b27\u62c9\u56de\u8def\uff09  \n\n\u6211\u4eec\u5728\u5b57\u6bcd\u5bf9\u4e4b\u95f4\u5efa\u65e0\u5411\u8fb9\uff0c\u7136\u540e\u6c42\u6b27\u62c9\u8def\uff08\u6b27\u62c9\u56de\u8def\uff09\uff0c\u5c31\u662f\u7b54\u6848   \n\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u6c42\u6b27\u62c9\u8def\uff08\u6b27\u62c9\u56de\u8def\uff09\u7684\u9996\u8981\u6761\u4ef6\u662f\u8fd9\u4e2a\u56fe\u5df2\u77e5\u662f\u6b27\u62c9\u56fe   \n\u5bf9\u4e8e\u5224\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u5373\u8fd9\u4e2a\u56fe\u4e0d\u662f\u6b27\u62c9\u56fe\u3002  \n[\u4ee3\u7801](http://www.cnblogs.com/adelalove/p/8502664.html)",
        "postTime": 1520075047,
        "uid": 36397,
        "name": "\u6c89\u8fb0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1341 \u3010\u65e0\u5e8f\u5b57\u6bcd\u5bf9\u3011"
    }
]