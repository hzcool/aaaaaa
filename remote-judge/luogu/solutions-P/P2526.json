[
    {
        "content": "### \u53c8\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u6c34\u9898\u3002\n\n### \u8fd9\u9898\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5efa\u56fe\u4ee5\u53ca\u8f93\u51fa\u65b9\u6848\u3002\n\n### \u6839\u636e\u9898\u610f\u5f97\u77e5\uff0c\u6bcf\u6b21\u72d7\u5728\u4e3b\u4eba\u76f8\u9047\u4e4b\u524d\u6700\u591a\u53bb\u4e00\u4e2a\u666f\u70b9\u3002\u90a3\u6211\u4eec\u4e0d\u59a8\u679a\u4e3e\u6240\u6709\u7684\u666f\u70b9\uff0c\u5224\u65ad\u72d7\u4ece\u4e0a\u4e00\u4e2a\u76f8\u9047\u70b9\u51fa\u53d1\uff0c\u7ecf\u8fc7\u8fd9\u4e2a\u666f\u70b9\uff0c\u6700\u540e\u662f\u5426\u6bd4\u4e3b\u4eba\u5148\u5230\u8fbe\u4e0b\u4e00\u4e2a\u76f8\u9047\u70b9\u3002\n\n### \u5982\u679c\u5148\u5230\u8fbe\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u4e0b\u4e00\u4e2a\u76f8\u9047\u70b9\u4e0e\u8fd9\u4e2a\u666f\u70b9\u8fde\u4e00\u6761\u8fb9\u3002\n\n### \u5efa\u56fe\u4e4b\u540e\uff0c\u6211\u4eec\u53ea\u8981\u7528\u6700\u5927\u6d41\u6c42\u51fa\u6700\u5927\u5339\u914d\u5e76\u52a0\u4e0aN\u5c31\u662f\u7b2c\u4e00\u4e2a\u7b54\u6848\u4e86\uff0cDinic\u6700\u5927\u6d41\u677f\u5b50\u4e0d\u8bb2\u3002\n\n### \u90a3\u4e48\u7b54\u6848\u7684\u7b2c\u4e8c\u884c\u600e\u4e48\u6c42\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u5148\u8f93\u51fa\u6bcf\u4e2a\u76f8\u9047\u70b9\u5750\u6807\uff0c\u7136\u540e\u5faa\u73af\u6bcf\u4e2a\u4e0e\u5b83\u76f8\u8fde\u7684\u666f\u70b9\uff0c\u5224\u65ad\u8fd9\u6761\u8fb9\u7684\u6d41\u91cf\u662f\u5426\u4e3a0\uff0c\u5982\u679c\u662f\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u76f8\u9047\u70b9\u4e0e\u666f\u70b9\u5339\u914d\u4e0a\u4e86\uff0c\u8f93\u51fa\u666f\u70b9\u7684\u5750\u6807\u3002\n\n## \u65e0\u6bd4\u4e11\u964b\u7684\u4ee3\u7801:\n\n ```cpp\n#include <iostream>\n#include <queue>\n#include <cstring>\n#include <cmath>\nusing namespace std;\nstruct map{ //\u7ed3\u6784\u4f53\u5b58\u5750\u6807 \n\tint x,y;\n};\nmap a[1010],b[1010];//\u76f8\u9047\u70b9\u5750\u6807\u4ee5\u53ca\u666f\u70b9\u5750\u6807 \nconst int MAX=0x7fffffff;\nint dis[1001000];\nint n,m,s,t;\nint head[600100],net[600100],to[600100],cap[600100];//\u524d\u5411\u661f\u5b58\u56fe \nint cnt=1;\nvoid add(int x,int y,int c)//\u6700\u5927\u6d41\u5efa\u8fb9 \n{\n    to[++cnt]=y;\n    cap[cnt]=c;\n    net[cnt]=head[x];\n    head[x]=cnt;\n    to[++cnt]=x;\n    cap[cnt]=0;\n    net[cnt]=head[y];\n    head[y]=cnt;\n}\nint BFS()//Dinic\u6700\u5927\u6d41\u677f\u5b50 \n{\n     memset(dis,0,sizeof(dis));\n     dis[s]=1;\n     queue<int>q;\n     q.push(s);\n     while(!q.empty())\n     {\n        int v=q.front();\n        q.pop();\n        for(int i=head[v];i;i=net[i])\n        {\n            if(dis[to[i]]==0&&cap[i]>0)\n            {\n                dis[to[i]]=dis[v]+1; \n                q.push(to[i]);\n            }\n        }\n\n     }\n     if(dis[t]>0) return 1;\n     return 0;\n}\nint find(int x,int low)\n{\n    int a=0;\n    if(x==t)return low;\n    int sum=0;\n    for(int i=head[x];i;i=net[i])\n    {\n        if(dis[to[i]]==dis[x]+1&&cap[i]!=0&&(a=find(to[i],min(low,cap[i]))))\n        {\n            cap[i]-=a;\n            cap[i^1]+=a;\n            low-=a;\n            sum+=a;\n            if(low==0)\n            break;\n        }\n    }  \n    return sum;\n}\ndouble js(map a,map b)//\u6c42\u51fa\u4e24\u70b9\u8ddd\u79bb \n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\nint main()\n{\n\tint n;\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tcin>>a[i].x>>a[i].y;\n\t}\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tcin>>b[i].x>>b[i].y;\n\t}\n\ts=0,t=n+m+1;//\u6e90\u70b9\u4e3a0\uff0c\u6c47\u70b9\u4e3an+m+1 \n\tfor(int i=2; i<=n; i++)\n\t{\n\t\tadd(s,i,1);//\u5c06\u6e90\u70b9\u8fde\u63a5\u6240\u6709\u76f8\u9047\u70b9 \n\t\tfor(int j=1; j<=m; j++)\n\t\t{\n\t\t\tif(i==2) add(n+j,t,1);//\u5c06\u6240\u6709\u666f\u70b9\u8fde\u63a5\u6c47\u70b9 \n\t\t\tif(js(a[i],a[i-1])>(js(a[i-1],b[j])+js(b[j],a[i]))/2.0)//\u5982\u679c\u72d7\u4ece\u4e0a\u4e00\u4e2a\u76f8\u9047\u70b9\u51fa\u53d1\uff0c\u7ecf\u8fc7\u8fd9\u4e2a\u666f\u70b9\uff0c\u6700\u540e\u6bd4\u4e3b\u4eba\u5148\u5230\u8fbe\u8fd9\u4e2a\u76f8\u9047\u70b9 \n\t\t\t{\n\t\t\t\tadd(i,n+j,1);//\u5c06\u8fd9\u4e2a\u76f8\u9047\u70b9\u8fde\u63a5\u8fd9\u4e2a\u666f\u70b9 \n\t\t\t}\n\t\t}\n\t}\n\tint ans=0,tans=0;\n\twhile(BFS())\n    {\n          while(tans=find(s,0x7fffffff)) ans+=tans;\n    }\n    cout<<ans+n<<endl;//\u8f93\u51fa\u7b2c\u4e00\u4e2a\u7b54\u6848\uff0c \n    cout<<a[1].x<<' '<<a[1].y<<' ';//\u7b2c\u4e00\u4e2a\u76f8\u9047\u70b9\u8981\u5148\u8f93\u51fa \n    for(int i=2; i<=n; i++)\n    {\n    \tfor(int j=head[i]; j; j=net[j])\n    \tif(!cap[j]&&to[j]!=s)//\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u666f\u70b9\u4e14\u8fb9\u6d41\u91cf\u4e3a0 \n    \t{\n    \t\tcout<<b[to[j]-n].x<<' '<<b[to[j]-n].y<<' ';//\u8f93\u51fa\u666f\u70b9\u5750\u6807 \n\t\t\tbreak; \n    \t}\n    \tcout<<a[i].x<<' '<<a[i].y<<' ';//\u8f93\u51fa\u76f8\u9047\u70b9\u5750\u6807 \n    }\n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1535811328,
        "uid": 42443,
        "name": "06ray",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2526 \u3010[SHOI2001]\u5c0f\u72d7\u6563\u6b65\u3011"
    },
    {
        "content": "[P2526 [SHOI2001]\u5c0f\u72d7\u6563\u6b65](https://www.luogu.com.cn/problem/P2526)\n\n## \u5206\u6790\n\n\u8003\u8651\u5c06\u666f\u70b9\u548c Grant \u7684\u8def\u5206\u5f00\uff0c\u72d7\u7684\u8def\u7ebf\u6784\u6210\u4e8c\u5206\u56fe\u3002\n\nGrant \u7684\u8def\u7ebf\u662f\u56fa\u5b9a\u7684\uff0c\u72d7\u53ea\u8981\u5728\u4ed6\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u666f\u70b9\u524d\u80fd\u5230\u5c31\u884c\u3002\n\n\u6ce8\u610f\u5373\u4f7f\u72d7\u5148\u5230\uff0c\u4e5f\u8981\u7b49\u5230 Grant \u6765\u4e4b\u540e\u624d\u80fd\u53bb\u4e0b\u4e00\u4e2a\u666f\u70b9\u3002\n\n\u5c06 Grant \u7684\u8def\u5f84\u4f5c\u4e3a\u5de6\u90e8\u70b9\uff0c\u666f\u70b9\u4f5c\u4e3a\u53f3\u90e8\u70b9\u3002\n\n\u72d7\u7684\u901f\u5ea6\u662f Grant \u7684\u4e24\u500d\uff0c\u6240\u4ee5\u5728\u72d7\u5728\u4e09\u70b9\u95f4\u79fb\u52a8\u7684\u8def\u7a0b\u5982\u679c\u6bd4 Grant \u5728\u4e24\u70b9\u95f4\u79fb\u52a8\u7684\u8def\u7a0b\u7684\u4e24\u500d\u8fd8\u957f\uff0c\u8fd9\u6761\u8fb9\u5c31\u4e0d\u80fd\u8fde\u3002\n\n\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u8dd1\u5308\u7259\u5229\u7b97\u6cd5\u5373\u53ef\uff0c\u5339\u914d\u6210\u529f\u540e\u8bb0\u5f55\u6bcf\u4e2a\u5de6\u90e8\u70b9\u5339\u914d\u7684\u53f3\u90e8\u70b9\u4f5c\u4e3a\u7b54\u6848\u8f93\u51fa\u3002\n\n\u7136\u540e\u597d\u50cf\u8f93\u5165\u7684\u5750\u6807\u9ed8\u8ba4\u662f\u6574\u6570\u3002\u6211\u4e25\u8c28\u70b9\u7528 double \u5b58\u4e86\u3002\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nint m,ans[110],match[110];\nbool vis[110],e[110][110];\nstruct node {double x,y;} grant[110],doge[110];\n\nbool dfs(int u)\n{\n\tfor(int i=1;i<=m;i++)\n\t\tif(e[u][i] && !vis[i])\n\t\t{\n\t\t\tvis[i]=true;\n\t\t\tif(!match[i] || dfs(match[i])) {match[i]=u; ans[u]=i; return true;}\n\t\t}\n\treturn false;\n}\n\ninline double get_dist(const node &a,const node &b)\n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\n\nint main()\n{\n// \tfreopen(\"work.in\",\"r\",stdin); freopen(\"work.out\",\"w\",stdout);\n\tint n,cnt=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf%lf\",&grant[i].x,&grant[i].y);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%lf%lf\",&doge[i].x,&doge[i].y);\n\t\tfor(int j=1;j<n;j++)\n\t\t\tif(2.0*get_dist(grant[j],grant[j+1]) >= get_dist(grant[j],doge[i])+get_dist(doge[i],grant[j+1]))\n\t\t\t\te[j][i]=true;\t\n\t}\n\t\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++) vis[j]=false;\n\t\tif(dfs(i) && ++cnt == m) break ;\n\t}\n\t\n\tprintf(\"%d\\n\",n+cnt);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%.0lf %.0lf \",grant[i].x,grant[i].y);\n\t\tif(ans[i]) printf(\"%.0lf %.0lf \",doge[ans[i]].x,doge[ans[i]].y);\n\t}\n// \tfclose(stdin); fclose(stdout);\n\treturn 0;\n}\n```\n\n\u611f\u8c22\u9605\u8bfb\uff01\u5e0c\u671b\u80fd\u5bf9\u60a8\u6709\u5e2e\u52a9\uff01",
        "postTime": 1629183913,
        "uid": 240191,
        "name": "MY\uff08\u4e00\u540d\u849f\u84bb\uff09",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2526 \u3010[SHOI2001]\u5c0f\u72d7\u6563\u6b65\u3011"
    },
    {
        "content": "## [P2526 [SHOI2001]\u5c0f\u72d7\u6563\u6b65](https://www.luogu.org/problemnew/show/P2526)\n\n\u51fd\u6570\u540d\u7528\u4e86distance\uff0c\u8df3\u51fa\u4e00\u5768\u5947\u602a\u7684\u7f16\u8bd1\u4fe1\u606f\n\n![](https://cdn.luogu.com.cn/upload/pic/50369.png )\n\n![](https://cdn.luogu.com.cn/upload/pic/50372.png )\n\u624d\u77e5\u9053 **distance** \u662f\u5173\u952e\u5b57\uff08\u660e\u660e\u4e4b\u524d\u7528\u8fc7\u6b38\uff09\n\n---\n\u8fd9\u9053\u9898\u76f8\u5f53\u9b3c\u755c\n\n\u66b4\u529b\u53ea\u8981O(nm)\n\n\u76f4\u63a5\u82df\u523085\u5206\uff08\u771f\u80a5\uff09\n\n\u7136\u540e\u770b\u8ba8\u8bba\u91cc\u6709\u4eba\u8bf4\u666f\u70b9\u4e0d\u80fd\u91cd\u590d\u8d70\uff0c\u4e0d\u7136\u53ea\u670985\n\n\u672c\u6765\u8fd8\u60f3\u4e0d\u5230\u6b63\u89e3\u7684\uff0c\u6253\u4e86\u4e00\u904d\u66b4\u529b\u540e\u624d\u53d7\u5230\u542f\u53d1\n\n\u6240\u4ee5\u8bf4**\u60f3\u4e0d\u5230\u6b63\u89e3\u5c31\u6700\u597d\u628a\u6700\u4f18\u79c0\u7684\u66b4\u529b\u6253\u51fa\u6765**\uff0c\u8bf4\u4e0d\u5b9a\u5c31\u8305\u585e\u987f\u5f00\u4e86\n\n---\n\n## \u5148\u770b\u770b\u66b4\u529b\uff08\u6bd5\u7adf85\uff09\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u679a\u4e3e\u6bcf\u6bb5\u4e3b\u4eba\u8d70\u7684\u8def\uff0c\u518d\u679a\u4e3e\u6bcf\u4e2a\u504f\u7231\u666f\u70b9\uff0c\u53ea\u8981\u7b26\u5408\u5c31\u8f93\u51fa\n\n\uff08\u8fd9\u91cc\u6ca1\u7528iostream\uff0c\u6545\u53ef\u4ee5\u7528distance\uff09\n\n```cpp\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int N=100+5;\nint x[N<<1],y[N<<1];\ndouble dis[N<<1][N<<1];\nint sta[N<<1],top,n,m; \n\ninline double distance(const int i,const int j){\n    return sqrt(pow(1.*x[i]-x[j],2.)+pow(1.*y[i]-y[j],2.));\n} \n\nint main(){\n    scanf(\"%d %d\\n\",&n,&m);\n    for(int i=1;i<=n+m;++i)scanf(\"%d %d\",x+i,y+i); //\u4e00\u8d77\u8bfb\u4e86\n    for(int i=1;i<=n+m;++i)for(int j=i+1;j<=n+m;++j)dis[i][j]=dis[j][i]=distance(i,j);//\u9884\u5904\u7406\u8ddd\u79bb\n    for(int i=1;i<n;++i){\n        int ind=-1;\n        sta[++top]=i;\n        for(int j=1;j<=m;++j){\n            if(dis[i][j+n]+dis[j+n][i+1]<=2*dis[i][i+1]){//\u8dd1\u7684\u8d62\n                ind=j+n;\n        \t\tsta[++top]=j+n;\n                break;\n            }\n        }\n    }\n    sta[++top]=n;\n    printf(\"%d\\n\",top);\n    for(int i=1;i<=top;++i)printf(\"%d %d \",x[sta[i]],y[sta[i]]);\n    return 0;\n}\n```\n\n## \u95ee\u9898\u5728\u54ea\uff1f\n\n\u7136\u9e45\u5c0f\u72d7\u53ef\u80fd\u91cd\u590d\u8bbf\u95ee\u4e00\u4e2a\u666f\u70b9\n\n\u5982\u679c\u4ec5\u4ec5\u662f\u8fd9\u6837\u8fd8\u597d\u8bf4\uff0c\u52a0\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u8d70\u8fc7\u666f\u70b9\u5c31\u884c\u4e86\n\n\u53ef\u662f\u4e00\u4e2a\u666f\u70b9\u8fd8\u53ef\u80fd\u5339\u914d\u591a\u6bb5\u8def\n\n\u5982\u679c\u4e4b\u524d\u5c31\u88ab\u5339\u914d\uff0c\u540e\u9762\u7684\u53ef\u80fd\u5c31\u6ca1\u6cd5\u5339\u914d\u4e86\n\n\u4e4b\u524d\u5339\u914d\u7684\u8981\u5728\u6709\u5339\u914d\u7684\u57fa\u7840\u4e0a\u6362\u4e00\u4e2a\u9009\u62e9\uff0c\u628a\u8fd9\u4e2a\u666f\u70b9\u8ba9\u7ed9\u540e\u9762\u6709\u9700\u8981\u7684\u8def\u5f84\n\n\u6240\u4ee5\u8981\u6c42\u8def\u5f84\u4e0e\u666f\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u5339\u914d\n\n\u8fd9\u91cc\u7528dinic\uff0c\u5308\u7259\u5229\u4e5f\u884c\n\n\u5efa\u5efa\u56fe\uff0c\u8dd1\u8dd1\u6d41\u5c31\u884c\u4e86\u5566\n\n```cpp\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<queue>\nusing namespace std;\nconst int N=100+5;\nconst int E=30000;\nconst int inf=0x7ffffff;\nint coox[N<<1],cooy[N<<1],hea[N<<1],to[E],nex[E],val[E],tot=1,n,m,dep[N<<1],s,t;\ndouble dis[N<<1][N<<1];\n\ninline void add_edge(const int x,const int y,const int w){\n//printf(\"%d --> %d(%d)\\n\",x,y,w);\n    to[++tot]=y,nex[tot]=hea[x],hea[x]=tot,val[tot]=w;\n}\n\ninline double dist(const int i,const int j){\n    return sqrt((coox[i]-coox[j])*(coox[i]-coox[j])+(cooy[i]-cooy[j])*(cooy[i]-cooy[j]));\n} \n\nqueue<int> que;\ninline bool bfs(){\n    memset(dep,0,sizeof(dep));\n    dep[s]=1;\n    while(que.size())que.pop();\n    que.push(s);\n    int x;\n    while(que.size()){\n        x=que.front();que.pop();\n        for(int i=hea[x];i;i=nex[i]){\n            int y=to[i];\n            if(val[i]&&!dep[y]){\n                dep[y]=dep[x]+1;\n                if(y==t)return true;\n                que.push(y);\n            }\n        }\n    }\n    return false;\n}\n\nint dfs(int x,const int flow){\n    if(x==t)return flow;\n    int rest=flow,k;\n    for(int i=hea[x];i&&rest;i=nex[i]){\n        int y=to[i];\n        if(val[i]&&dep[y]==dep[x]+1){\n            k=dfs(y,min(rest,val[i]));\n            if(k==0)dep[y]=0;\n            val[i]-=k;\n            val[i^1]+=k;\n            rest-=k;\n        }\n    }\n    return flow-rest;\n}\n\ninline int dinic(){\n    int maxflow=0,flow;\n    while(bfs())while(flow=dfs(s,inf))maxflow+=flow;\n    return maxflow;\n}\n\nint main(){\n    scanf(\"%d %d\\n\",&n,&m);\n    s=n+m+1,t=s+1;\n    for(int i=1;i<=n+m;++i)scanf(\"%d %d\",coox+i,cooy+i); \n    for(int i=1;i<=n+m;++i)for(int j=i+1;j<=n+m;++j)dis[i][j]=dis[j][i]=dist(i,j);\n    for(int i=1;i<n;++i)add_edge(s,i,1),add_edge(i,s,0);\n    for(int i=1;i<=m;++i)add_edge(i+n,t,1),add_edge(t,i+n,0);\n    for(int i=1;i<n;++i){\n        for(int j=1;j<=m;++j){\n            if(dis[i][j+n]+dis[j+n][i+1]<2*dis[i][i+1]){\n                add_edge(i,j+n,1);\n                add_edge(j+n,i,0);\n            }\n        }\n    }\n    printf(\"%d\\n\",dinic()+n);\n    for(int i=1;i<n;++i){\n        printf(\"%d %d \",coox[i],cooy[i]);\n        for(int j=hea[i];j;j=nex[j]){\n            if(to[j]!=s&&val[j]==0){\n                printf(\"%d %d \",coox[to[j]],cooy[to[j]]);\n                break;\n            }\n        }\n    }\n    printf(\"%d %d\\n\",coox[n],cooy[n]);\n    return 0;\n}\n        \n```",
        "postTime": 1548820883,
        "uid": 106642,
        "name": "Ajsoabk",
        "ccfLevel": 0,
        "title": "P2526 [SHOI2001]\u5c0f\u72d7\u6563\u6b65"
    },
    {
        "content": "\u5176\u5b9e\u5750\u6807\u7cfb\u548c\u8fd9\u4e2a\u9898\u7684\u6027\u8d28\u5173\u7cfb\u4e0d\u5927\uff0c\u6bcf\u6b21\u4e3b\u4eba\u548c\u72d7\u5728 $(x_i,y_i)$ \u7684\u65f6\u5019\uff0c\u72d7\u53ef\u4ee5\u53bb\u4e00\u4e2a\u666f\u70b9 $(xx_j,yy_j)$\uff0c\u7136\u540e\u518d\u53bb\u5230 $(x_{i+1},y_{i+1})$ \u548c\u4e3b\u4eba\u56de\u5408\u3002\u90a3\u4e48\u5b83\u53ef\u4ee5\u5230\u7684\u524d\u63d0\u5c31\u662f\u5f53\u5b83\u4ee5\u6700\u5feb\u901f\u5ea6\uff0c\u4e5f\u5c31\u662f\u4e3b\u4eba\u901f\u5ea6\u7684 $2$ \u500d\uff0c\u53ef\u4ee5\u8d70\u5b8c $(x_i,y_i)$ \u5230 $(xx_j,yy_j)$ \u8def\u7a0b\u52a0\u4e0a $(x_{i+1},y_{i+1})$ \u5230 $(xx_j,yy_j)$ \u7684\u8def\u7a0b\u3002\u72d7\u548c\u4e3b\u4eba\u7528\u7684\u65f6\u95f4\u76f8\u540c\uff0c\u72d7\u901f\u5ea6\u6700\u5feb\u4e3a\u4e3b\u4eba\u7684 $2$ \u500d\uff0c\u90a3\u4e48\u5c31\u662f\u8bf4\u72d7\u7684\u8def\u7a0b $dis(i,j)+dis(i+1,j)$ \u6700\u5927\u4e3a\u4e3b\u4eba\u8def\u7a0b $dis(i,i+1)$ \u7684 $2$ \u500d\u3002\u6211\u4eec\u5c06\u4ece $(x_i,y_i)$ \u5230 $(x_{i+1},y_{i+1})$ \u7684\u65f6\u95f4\u6bb5\u770b\u6210\u5de6\u90e8\u70b9\uff0c\u666f\u70b9\u770b\u4f5c\u53f3\u90e8\u70b9\uff0c\u5982\u679c\u4ece $(x_i,y_i)$ \u5230 $(x_{i+1},y_{i+1})$ \u7684\u65f6\u95f4\u6bb5\u72d7\u53ef\u4ee5\u5230\u666f\u70b9 $j$\uff0c\u6211\u4eec\u628a $i$ \u5230 $j$ \u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u6700\u5927\u5339\u914d\u3002\u6ee1\u8db3\u70b9\u96c6\u5185\u65e0\u8fde\u8fb9\u5e76\u4e14\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002\n\n\u4f60\u95ee\u6211\u8f93\u51fa\u65b9\u6848\uff1f\u5229\u7528\u4e00\u4e0b $match$ \u6570\u7ec4\uff0c\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u76f4\u63a5\u66b4\u529b\u90fd\u53ef\u4ee5\u3002$match_j=i$ \u8868\u793a\u666f\u70b9 $j$ \u5728\u65f6\u95f4\u6bb5 $i$ \u65f6\u8d70\u8fc7\u4e86\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4 $dy_i$ \u8868\u793a\u65f6\u95f4\u6bb5 $i$ \u53bb\u7684\u666f\u70b9\uff0c\u5982\u679c\u662f $0$ \u5219\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u6ca1\u53bb\u666f\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u5728\u8f93\u51fa\u8def\u5f84\u7684\u65f6\u5019\uff0c\u5982\u679c $dy_i$ \u6709\u503c\u5c31\u8f93\u51fa $xx_{dy_i}$ \u548c $yy_{dy_i}$\u3002\n\n\u8bb0\u5f97\u8f93\u51fa\u7ecf\u8fc7\u7684\u70b9\u6570\u65f6\uff0c\u8bb0\u4f4f\u7ecf\u8fc7\u7684\u70b9\u6570\u5176\u5b9e\u662f\u7ecf\u8fc7\u7684\u6700\u5927\u666f\u70b9\u6570 $ans$ \u52a0\u4e0a $n$ \u4e2a\u56de\u5408\u70b9\uff0c\u522b\u641e\u9519\u4e86\u3002\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 105;\nint n, m, x[N], y[N], match[N], vis[N], ans, px[N], py[N], dy[N];\nvector <int> G[N];\n\nbool hungary(int u, int cl) {\n    for (int v : G[u]) {\n        if(vis[v] == cl) continue;\n        vis[v] = cl;\n        if(!match[v] || hungary(match[v], cl)) return match[v] = u, 1;\n    }\n    return 0;\n}\n\ndouble dist(int ax, int ay, int bx, int by) { return sqrt((ax - bx) * (ax - bx) + (ay - by) * (ay - by));}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; ++i) scanf(\"%d%d\", &x[i], &y[i]);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tint xx, yy; scanf(\"%d%d\", &xx, &yy); px[i] = xx, py[i] = yy;\n\t\tfor (int j = 1; j < n; ++j) {\n\t\t\tdouble a = 2.0 * dist(x[j], y[j], x[j + 1], y[j + 1]);\n\t\t\tdouble b = dist(xx, yy, x[j], y[j]) + dist(xx, yy, x[j + 1], y[j + 1]);\n\t\t\tif(a >= b) G[j].emplace_back(i);\n\t\t}\n\t}\n\tfor (int i = 1; i < n; ++i) ans += hungary(i, i);\n\tprintf(\"%d\\n\", ans + n);\n\tfor (int i = 1; i <= m; ++i) {\n\t\tif(match[i]) dy[match[i]] = i;\n\t}\n\tfor (int i = 1; i < n; ++i) {\n\t\tprintf(\"%d %d \", x[i], y[i]);\n\t\tif(dy[i] != 0) printf(\"%d %d \", px[dy[i]], py[dy[i]]);\n\t}\n\tprintf(\"%d %d\\n\", x[n], y[n]);\n\treturn 0;\n}\n```",
        "postTime": 1676121820,
        "uid": 483928,
        "name": "Ziqqurat",
        "ccfLevel": 5,
        "title": "P2526 \u9898\u89e3"
    },
    {
        "content": "\u6211\u5bfb\u601d\u7740\u7f51\u7edc\u6d4124\u9898\u5febrush\u5b8c\u4e86\uff0c\u6765\u6478\u4e2a\u7f51\u7edc\u6d41\u7ec3\u624b\n\n\u7136\u540e\u5c31\u505a\u5230\u8fd9\u4e2a\u9898\n\n\u54a6\uff0c\u4e8c\u5206\u56fe\uff1f\n\n\u601d\u8003\u7528\u4ec0\u4e48\u5339\u914d\u4ec0\u4e48\u3002\n\n\u7136\u540e......\u600e\u4e48\u8fd9\u4e48\u6c34\uff0c\u8bf4\u597d\u7684\u7d2b\u9898\u5462\uff1f\uff1f\n___\n\u4ee5\u4e0a\u5e9f\u8bdd\n\n\u8003\u8651\u628a\u4e3b\u4eba\u6bcf\u4e00\u6bb5\u4f4d\u79fb\u4f5c\u4e3a\u5de6\u90e8\u70b9\uff0c\u628a\u5c0f\u72d7\u611f\u5174\u8da3\u7684\u666f\u70b9\u4f5c\u4e3a\u53f3\u90e8\u70b9\n\n\u8bbe\u4e3b\u4eba\u67d0\u6bb5\u4f4d\u79fb\u4e3a$i->j$\uff0c\u5c0f\u72d7\u611f\u5174\u8da3\u7684\u666f\u70b9\u4e4b\u4e00\u4e3ax\n\n\u90a3\u4e48\u5f53$i->x->j$\u7684\u65f6\u95f4\u5c0f\u4e8e\u7b49\u4e8e\u4e8c\u500d$i->j$\u7684\u65f6\u95f4\u65f6\uff0c\u8be5\u6bb5\u4f4d\u79fb\u4fbf\u80fd\u548c$x$\u5339\u914d\n\n\u5927\u529b\u5308\u7259\u5229\u5c31\u884c\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint N,M,ans;\nconst int maxn=1005;\nstruct coord{\n\tint x,y;\n\tcoord(int x=0,int y=0):\n\t\tx(x),y(y){}\n}A[maxn],B[maxn];\nvector<int>G[maxn<<2];\nint vis[maxn],match[maxn];\nvector<int>path[maxn];\ndouble Calc(coord a,coord b){\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\nbool dfs(int u){\n\tif(vis[u])\n\t\treturn false;\n\tvis[u]=1;\n\tfor(int i=0;i<G[u].size();i++){\n\t\tint v=G[u][i];\n\t\tif(!match[v]||dfs(match[v])){\n\t\t\tmatch[v]=u;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tios::sync_with_stdio(false);\n\tcin>>N>>M;\n\tfor(int i=1,x,y;i<=N;i++){\n\t\tcin>>x>>y;\n\t\tA[i]=coord(x,y);\n\t}\n\tfor(int i=1,x,y;i<=M;i++){\n\t\tcin>>x>>y;\n\t\tB[i]=coord(x,y);\n\t}\n\tfor(int i=1;i<N;i++){\n\t\tdouble t1=Calc(A[i],A[i+1]);\n\t\tfor(int j=1;j<=M;j++){\n\t\t\tdouble t2=Calc(A[i],B[j])+Calc(B[j],A[i+1]);\n\t\t\tif(t1*2<t2)\n\t\t\t\tcontinue;//\u8d76\u4e0d\u56de\u6765\u4e86 \n\t\t\tG[i].push_back(j+N);\n\t\t\tG[j+N].push_back(i);\n\t\t}\n\t}\n\tfor(int i=1;i<N;i++){\n\t\tmemset(vis,0,sizeof(vis));\n\t\tans+=dfs(i);\n\t}\n\tcout<<N+ans<<endl;\n\tfor(int i=1;i<=M;i++)\n\t\tpath[match[i+N]].push_back(i);\n\tfor(int i=1;i<=N;i++){\n\t\tcout<<A[i].x<<\" \"<<A[i].y<<\" \";\n\t\tif(path[i].size())\n\t\t\tcout<<B[path[i][0]].x<<\" \"<<B[path[i][0]].y<<\" \";\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1568898037,
        "uid": 109396,
        "name": "Uniecho1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2526 \u3010[SHOI2001]\u5c0f\u72d7\u6563\u6b65\u3011"
    },
    {
        "content": "# ~~**\u4e00\u9053\u4e8c\u5206\u56fe\u7684\u5c0f\u9898**~~\n\n\n------------\n\n\n\u548c\u5f88\u591a\u7f51\u7edc\u6d41\u9898\u662f\u4e00\u6837\u7684\uff0c\u96be\u70b9\u5c31\u5728\u5efa\u56fe\u4e0a\u3002\n\n\u7531\u4e8e**\u72d7\u72d7\u6bcf\u6b21\u4e0e\u4e3b\u4eba\u76f8\u9047\u4e4b\u524d\u6700\u591a\u53ea\u53bb\u4e00\u4e2a\u666f\u70b9**\uff0c\u6240\u4ee5\u8bf4\u660e\u76f8\u90bb\u7684\u4e3b\u4eba\u8def\u5f84\u7684\u70b9\u90fd\u53ea\u80fd\u5939\u4e00\u4e2a\u666f\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u666f\u70b9\u53eb\u505a\u524d\u9762\u7684\u8def\u5f84\u7684\u70b9\u7684\u4e0b\u4e00\u4e2a\u666f\u70b9\uff0c\u79f0\u4f5c\u4e00\u4e2a\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u8def\u5f84\u4e0a\u7684\u70b9\u6700\u591a\u5339\u914d\u4e00\u4e2a\u666f\u70b9\uff08\u8fd9\u91cc\u6240\u8bf4\u7684\u8def\u5f84\u90fd\u662f\u6307\u4e3b\u4eba\u884c\u8d70\u7684\u8def\u5f84\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u672c\u9898\u6539\u6210\u4e00\u9053\u4e8c\u5206\u56fe\u5339\u914d\u7684\u9898\u4e86\u3002\u5efa\u56fe\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n\u5bf9\u4e8e\u8def\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9&nbsp;&nbsp;$S_i$\uff0c\u6211\u4eec\u66b4\u529b\u679a\u4e3e\u6240\u6709\u666f\u70b9&nbsp;  $V_j$\uff0c\u5982\u679c**\u4e8c\u500d\u7684**&nbsp;$S_i$&nbsp;\u5230&nbsp;$S_{i+1}$&nbsp;\u7684\u8ddd\u79bb\u5927\u4e8e&nbsp;\u00a0$S_i$&nbsp;\u00a0\u5230&nbsp;\u00a0$V_j$&nbsp;\u00a0\u4e0e&nbsp;\u00a0$V_j$&nbsp;\u00a0\u5230&nbsp;\u00a0$S_{i+1}$&nbsp;\u00a0\u8ddd\u79bb\u548c\uff0c\u8bf4\u660e\u72d7\u72d7\u53ef&nbsp;\u00a0$S_i$&nbsp;\u00a0\u5230\u4ee5\u5728&nbsp;\u00a0$S_i$&nbsp;\u00a0\u5230\u548c&nbsp;\u00a0$S_{i+1}$&nbsp;\u00a0\u4e2d\u95f4\u53bb\u4e00\u8d9f&nbsp;\u00a0$V_j$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8fde\u4e00\u6761&nbsp;\u00a0$S_i$ &nbsp;\u5230&nbsp;$V_j$&nbsp;\u5bb9\u91cf\u4e3a&nbsp;$1$&nbsp;\u7684\u8fb9\uff0c\u5efa\u5b8c\u4e8c\u5206\u56fe\u4e4b\u540e\u7531\u6e90\u70b9\u5411\u6240\u6709\u8def\u5f84\u4e0a\u7684\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a&nbsp; _$1$_ &nbsp;\u7684\u8fb9\uff0c\u7531\u6240\u6709\u666f\u70b9\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a&nbsp; _$1$_ &nbsp;\u7684\u8fb9\uff0c\u8dd1 &nbsp;**dinic** &nbsp;\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8f93\u51fa\u8def\u5f84\u7684\u8bdd\u5c31\u662f\u6b63\u5e38\u7684\u4e8c\u5206\u56fe\u65b9\u6848\u8f93\u51fa\uff0c\u5148\u6309\u7167\u8def\u5f84\u987a\u5e8f\u8f93\u51fa\uff0c\u7136\u540e\u770b\u770b\u8fd9\u4e2a\u8def\u5f84\u4e0a\u7684\u70b9\u6709\u6ca1\u6709\u5411\u666f\u70b9\u8fde\u51fa\u4e00\u6761\u6d41\u91cf\u662f\u6ee1\u7684\u8fb9\uff08\u4e5f\u5c31\u662f\u6b8b\u7559\u7f51\u7edc\u662f\u7a7a\u7684\u8fb9\uff09\uff0c\u5982\u679c\u7a7a\u4e86\u8bf4\u660e\u8fde\u5411\u7684\u70b9\u5c31\u662f\u72d7\u72d7\u53bb\u5411\u7684\u666f\u70b9\u3002\n\n**~~\uff08EK\u7b97\u6cd5\u5e94\u8be5\u4e5f\u53ef\u4ee5\u8fc7\uff0c\u56e0\u4e3a\u6570\u636e\u91cf\u8fd8\u662f\u6bd4\u8f83\u5c0f\u7684\uff09~~**\n\n\u6700\u540e\u9644\u4e0a\u4e2a\u4ee3\u7801~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=500;\nconst int M=25000;\nconst int INF=1e8;\nstruct Nodeee{\n\tint x;\n\tint y;\n}pathman[120];\nstruct Nodee{\n\tint x;\n\tint y;\n}like[120];\nint n,m,S,T;\nstruct Node{\n\tint ne;\n\tint ve;\n\tint f;\n}edge[M];\nint head[N],idx;\nvoid clear(){\n\tmemset(head,-1,sizeof(head));\n\tidx=0;\n}\nvoid added(int x,int y,int f){\n\tedge[idx].ne=head[x];\n\tedge[idx].ve=y;\n\tedge[idx].f=f;\n\thead[x]=idx;\n\tidx++;\n\tedge[idx].ne=head[y];\n\tedge[idx].ve=x;\n\tedge[idx].f=0;\n\thead[y]=idx;\n\tidx++;\n}\nint q[N];\nint d[N];\nint cur[N];\nbool bfs(){\n\tint hh=0,tt=0;\n\tmemset(d,-1,sizeof(d));\n\tq[0]=S;\n\td[S]=1;\n\tcur[S]=head[S];\n\twhile(hh<=tt){\n\t\t//cout<<hh<<\" \"<<tt<<endl;\n\t\tint t=q[hh++];\n\t\tfor(int i=head[t];i!=-1;i=edge[i].ne){\n\t\t\tint ver=edge[i].ve;\n\t\t\tif(d[ver]==-1&&edge[i].f){\n\t\t\t\td[ver]=d[t]+1;\n\t\t\t\tcur[ver]=head[ver];\n\t\t\t\tif(ver==T) return true;\n\t\t\t\tq[++tt]=ver;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint find(int u,int limit){\n\tif(u==T) return limit;\n\telse{\n\t\tint flow=0;\n\t\tfor(int i=cur[u];i!=-1&&flow<limit;i=edge[i].ne){\n\t\t\tcur[u]=i;\n\t\t\tint ver=edge[i].ve;\n\t\t\tif(d[ver]==d[u]+1&&edge[i].f){\n\t\t\t\tint t=find(ver,min(edge[i].f,limit-flow));\n\t\t\t\tif(!t) d[ver]=-1;\n\t\t\t\telse{\n\t\t\t\t\tedge[i].f-=t;\n\t\t\t\t\tedge[i^1].f+=t;\n\t\t\t\t\tflow+=t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn flow;\n\t}\n}\nint dinic(){\n\tint r=0;\n\tint flow;\n\twhile(bfs()){\n\t\twhile(flow=find(S,INF)){\n\t\t\tr+=flow;\n\t\t}\n\t}\n\treturn r;\n}\ndouble sd(double x1,double x2,double y_1,double y_2){\n\treturn sqrt((x1-x2)*(x1-x2)+(y_1-y_2)*(y_1-y_2));\n}\nint main(){\n\tclear();\n\tcin>>n>>m;\n\tS=0;\n\tT=n+m+1;\n\tfor(int i=1;i<=n;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tpathman[i].x=x;\n\t\tpathman[i].y=y;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t    like[i].x=x;\n\t    like[i].y=y;\n\t}\n\tfor(int i=1;i<=n-1;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tdouble x1=pathman[i].x;\n\t\t\tdouble x2=pathman[i+1].x;\n\t\t\tdouble x3=like[j].x;\n\t\t\tdouble y_1=pathman[i].y;\n\t\t\tdouble y_2=pathman[i+1].y;\n\t\t\tdouble y_3=like[j].y;\n\t\t\tdouble len1=2.0*sd(x1,x2,y_1,y_2);\n\t\t\tdouble len2=sd(x1,x3,y_1,y_3)+sd(x2,x3,y_2,y_3);\n\t\t\tif(len1>=len2){\n\t\t\t//\tcout<<i<<\" \"<<j<<\" \"<<endl;\n\t\t\t\tadded(i,j+n,1);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tadded(S,i,1);\n\t}\n\tfor(int j=1;j<=m;j++){\n\t\tadded(j+n,T,1);\n\t}\n\tcout<<dinic()+n<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tcout<<pathman[i].x<<\" \"<<pathman[i].y<<\" \";\n\t\tfor(int j=head[i];j!=-1;j=edge[j].ne){\n\t\t\tif(edge[j].f==0&&edge[j].ve>=n+1&&edge[j].ve<=n+m){\n\t\t\t\tint ver=edge[j].ve-n;\n\t\t\t\tcout<<like[ver].x<<\" \"<<like[ver].y<<\" \";\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n} \n\n```\n\n~~\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u7f51\u7edc\u6d41\u9898\u89e3~~\n\n%%%%%\u5f20\u632f\u5b87charlie\u5927\u795e\n",
        "postTime": 1670475801,
        "uid": 195318,
        "name": "wlty",
        "ccfLevel": 0,
        "title": "P2526\u5c0f\u72d7\u6563\u6b65\u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n$\\rm Grant$ \u559c\u6b22\u5e26\u7740\u4ed6\u7684\u5c0f\u72d7 $\\rm Pandog$ \u6563\u6b65\u3002$\\rm Grant$ \u4ee5\u4e00\u5b9a\u7684\u901f\u5ea6\u6cbf\u7740\u56fa\u5b9a\u8def\u7ebf\u8d70\uff0c\u8be5\u8def\u7ebf\u53ef\u80fd\u81ea\u4ea4\u3002$\\rm Pandog$ \u559c\u6b22\u6e38\u89c8\u6cbf\u9014\u7684\u666f\u70b9\uff0c\u4e0d\u8fc7\u4f1a\u5728\u7ed9\u5b9a\u7684 $n$ \u4e2a\u70b9\u548c\u4e3b\u4eba\u76f8\u9047\u3002\u5c0f\u72d7\u548c\u4e3b\u4eba\u540c\u65f6\u4ece  $(X_1,Y_1)$ \u70b9\u51fa\u53d1\uff0c\u5e76\u540c\u65f6\u5728 $(X_n,Y_n)$ \u70b9\u6c47\u5408\u3002\u5c0f\u72d7\u7684\u901f\u5ea6 **\u6700\u5feb** \u662f $\\rm Grant$ \u7684\u4e24\u500d\u3002\u5f53\u4e3b\u4eba\u4ece\u4e00\u4e2a\u70b9\u4ee5\u76f4\u7ebf\u8d70\u5411\u53e6\u4e00\u4e2a\u70b9\u65f6\uff0c$\\rm Pandog$ \u8dd1\u5411\u4e00\u4e2a\u5b83\u611f\u5174\u8da3\u7684\u666f\u70b9\u3002$\\rm Pandog$ \u6bcf\u6b21\u4e0e\u4e3b\u4eba\u76f8\u9047\u4e4b\u524d\u6700\u591a\u53ea\u53bb\u4e00\u4e2a\u666f\u70b9\u3002\n\n\u4f60\u73b0\u5728\u7684\u4efb\u52a1\u662f\uff1a\u4e3a $\\rm Pandog$ \u5bfb\u627e\u4e00\u6761\u8def\u7ebf\uff08\u6709\u53ef\u80fd\u4e0e\u4e3b\u4eba\u7684\u8def\u7ebf\u90e8\u5206\u76f8\u540c\uff09\uff0c\u4f7f\u5b83\u80fd\u591f\u6e38\u89c8\u6700\u591a\u7684\u666f\u70b9\uff0c\u5e76\u80fd\u591f\u51c6\u65f6\u4e0e\u4e3b\u4eba\u5728\u7ed9\u5b9a\u5730\u70b9\u76f8\u9047\u6216\u8005\u6c47\u5408\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u4e0d\u59a8\u4ee4 $\\rm Grant$ \u8d70\u8fc7\u7684\u70b9\u4e3a\u5de6\u90e8\u70b9\uff0c$\\rm Pandog$ \u80fd\u591f\u6e38\u89c8\u7684\u666f\u70b9\u4e3a\u53f3\u90e8\u70b9\u3002\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u8003\u8651\u5982\u4f55\u8fde\u8fb9\uff1a\n\n\u56e0\u4e3a $\\rm Pandog$ \u8981\u5728 $\\rm Grant$ \u5230\u4e0b\u4e00\u4e2a\u5730\u70b9\u4e4b\u524d\u8d76\u5230\u4e0b\u4e00\u4e2a\u5730\u70b9\uff0c\u6240\u4ee5\u5982\u679c $\\rm Grant$ \u7ecf\u8fc7\u4e24\u4e2a\u76f8\u9047\u5730\u70b9 $j,j+1$ \u4e4b\u95f4\u7684\u8ddd\u79bb\u7684\u65f6\u95f4\u8d85\u8fc7\u4e86 $\\rm Pandog$ \u4ece $j$ \u5230\u666f\u70b9 $i$ \u518d\u5230 $j+1$ \u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fde\u8fb9 $<j,i>$\u3002\n\n--------\n\n\u63a5\u4e0b\u6765\u8dd1\u4e00\u904d\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u4e8c\u5206\u56fe\u5339\u914d\u5373\u53ef\u3002\n\n\u5173\u4e8e\u8f93\u51fa\u65b9\u6848\u7684\u89e3\u51b3\u529e\u6cd5\uff1a\u8dd1\u5308\u7259\u5229\u7b97\u6cd5\u65f6\u53e6\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u5de6\u90e8\u70b9\u5728\u53f3\u90e8\u70b9\u4e2d\u7684\u5339\u914d\u7684\u70b9\u7684\u7f16\u53f7\u3002\n\n# \u4ee3\u7801\n\n```cpp\n// Problem: P2526 [SHOI2001]\u5c0f\u72d7\u6563\u6b65\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P2526\n// Memory Limit: 125 MB\n// Time Limit: 1000 ms\n// Date:2022-06-14 21:26\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <cmath>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline double double_read() {\n\t\tlong long ret = 0,w = 1,aft = 0,dot = 0,num = 0;\n\t\tchar ch = getchar();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif (ch == '-') w = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch) || ch == '.') {\n\t\t\tif (ch == '.') {\n\t\t\t\tdot = 1;\n\t\t\t} else if (dot == 0) {\n\t\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\t} else {\n\t\t\t\taft = (aft << 3) + (aft << 1) + ch - '0';\n\t\t\t\tnum ++;\n\t\t\t}\n\t\t\tch = getchar();\n\t\t}\n\t\treturn (pow(0.1,num) * aft + ret) * w;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int N = 105;\nstruct Node {\n\tdouble x,y;\n} node[N],path[N];\nstruct Graph {\n\tint v,nxt;\n} gra[N * N];\nint head[N],matl[N],matr[N],vis[N];\nint n,m,idx,nowidx;\ninline double dist(Node x,Node y) {\n\treturn sqrt((x.x - y.x) * (x.x - y.x) + (x.y - y.y) * (x.y - y.y));\n}\ninline void add(int u,int v) {\n\tgra[++ idx] = (Graph){v,head[u]},head[u] = idx;\n}\ninline bool dfs(int now) {\n\tfor (register int i = head[now];i;i = gra[i].nxt) {\n\t\tint v = gra[i].v;\n\t\tif (vis[v] != nowidx) {\n\t\t\tvis[v] = nowidx;\n\t\t\tif (!matr[v] || dfs(matr[v])) {\n\t\t\t\tmatl[now] = v,matr[v] = now;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main(void) {\n\tscanf(\"%d%d\",&n,&m);\n\tfor (register int i = 1;i <= n; ++ i) scanf(\"%lf%lf\",&node[i].x,&node[i].y);\n\tfor (register int i = 1;i <= m; ++ i) scanf(\"%lf%lf\",&path[i].x,&path[i].y);\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tfor (register int j = 1;j < n; ++ j) {\n\t\t\tif ((dist(node[j],path[i]) + dist(path[i],node[j + 1])) / 2.0 <= dist(node[j],node[j + 1])) {\n\t\t\t\tadd(j,i);\n\t\t\t}\n\t\t}\n\t}\n\tint step = 0;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tnowidx ++;\n\t\tif (dfs(i)) {\n\t\t\tstep ++;\n\t\t\tif (step == m) break;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",n + step);\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tprintf(\"%.0lf %.0lf \",node[i].x,node[i].y);\n\t\tif (matl[i]) {\n\t\t\tprintf(\"%.0lf %.0lf \",path[matl[i]].x,path[matl[i]].y);\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1655217148,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P2526 [SHOI2001]\u5c0f\u72d7\u6563\u6b65"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u7684\u9898\u4e0d\u7528\u8bf4\u4e86\u5427\uff0c\u4f46\u662f\u6211\u611f\u89c9\u697c\u4e0a\u9898\u89e3\u91cc\u7684\u5efa\u56fe\u601d\u8def\u548c\u6211\u7684\u6709\u4e00\u70b9\u4e0d\u540c\u3002\u3002\u3002\n\n\u7531\u9898\u610f\u53ef\u77e5\uff0c\u72d7\u4e3b\u4eba\u7684\u8def\u7ebf\u662f$\\textbf{\u552f\u4e00}$\u7684\uff0c\u90a3\u4e48\u5728\u7531\u7b2ci\u4e2a\u70b9\u5230\u7b2ci+1\u4e2a\u70b9\u7684$\\textbf{\u8def\u7a0b}$\u4e2d\uff0c\u5c0f\u72d7\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u666f\u70b9\u53bb\u8bbf\u95ee\uff08\u4e0d\u80fd\u91cd\u590d\u9009\u62e9\u540c\u4e00\u666f\u70b9\uff09\n\n\u90a3\u4e48\u6211\u4eec\u628a\uff08i ~ i-1\uff09\u8fd9\u6bb5\u8def\u7a0b\uff08\u7528\u8d77\u70b9\u7f16\u53f7\u4ee3\u8868\u8fd9\u6761\u8fb9\uff09\u548c\u53ef\u4ee5\u5339\u914d\u7684\u666f\u70b9$\\textbf{\u8fde\u4e00\u6761\u8fb9}$\uff0c\u4ee3\u8868\u53ef\u4ee5\u5728\u8fd9\u6bb5\u8def\u7a0b\u4e2d\u53ef\u4ee5\u53bb\u8fd9\u4e2a\u666f\u70b9\u3002\u6240\u6709\u53ef\u4ee5\u5339\u914d\u7684\u8def\u7a0b\u548c\u666f\u70b9\u6784\u6210\u7684\u8fb9\u5c31\u6210\u4e86\u4e00\u4e2a$\\textbf{\u4e8c\u5206\u56fe}$\u3002\n\n\u9898\u76ee\u8981\u6c42\u7684\u5c31\u662f\u5728\u4e8c\u5206\u56fe\u4e2d\u5de6\u53f3\u7aef\u70b9\u90fd\u4e0d\u91cd\u590d\u7684\u60c5\u51b5\u4e0b\u80fd\u5339\u914d\u7684\u6700\u5927\u8fb9\u6570\uff08\u6bcf\u6bb5\u8def\u7a0b\u4e3b\u4eba\u53ea\u4f1a\u8d70\u4e00\u6b21\uff0c\u6bcf\u4e2a\u666f\u70b9\u5c0f\u72d7\u90fd\u53ea\u4f1a\u53bb\u4e00\u6b21\uff09\n\n\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\n\n\u6ca1\u9519\uff0c\u5c31\u662f~~\u6700\u5927\u6d41DINIC~~$\\textbf{\u5308\u7259\u5229\u7b97\u6cd5\uff01}$\n23333\n\n\u5173\u4e8e\u8f93\u51fa\u7ec6\u8282\u5904\u7406\u5728\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\n\n\u590d\u6742\u5ea6 O(nm\uff0956ms\u8f7b\u677e\u8dd1\u8fc7\uff01\uff08\u9003 \n\n\n~~\uff08\u597d\u50cfdinic\u4f1a\u66f4\u5feb\uff09~~\n\ncpp\uff08\u4e3a\u4e86\u65b9\u4fbf\u9605\u8bfb\u52a0\u4e86\u5f88\u591a\u6362\u884c\uff09\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\n\nint read(){\n\tint x=0;char ch=getchar();int pos=1;\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') pos=0;\n\tfor(;isdigit(ch);ch=getchar()) x=x*10+ch-'0';\n\treturn pos?x:-x;\n}\nconst int maxn=105;\n\nint n,m;\n\ndouble dx[maxn],dy[maxn],mx[maxn],my[maxn];\n\ninline double dis(double x1,double y1,double x2,double y2){\n\treturn sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n}\n\nint head[maxn];\nstruct node{\n\tint v,next;\n}edge[maxn*maxn];\nint top=0;\n\ninline void add(int from,int to){\n\tedge[++top].v=to;\n\tedge[top].next=head[from];\n\thead[from]=top;\n}\nint vis[maxn],cx[maxn],cy[maxn];\n\ninline int find(int now){\n\tif(vis[now]) return 0;\n\tvis[now]=1;\n\tfor(int i=head[now];i;i=edge[i].next){\n\t\tint v=edge[i].v;\n\t\tif(!cy[v]||find(cy[v])){\n\t\t\tcy[v]=now;\n\t\t\tcx[now]=v;//\u6bd4\u666e\u901a\u5308\u7259\u5229\u591a\u5b58\u4e00\u4e2a\u5f53\u524d\u8def\u7a0b\u80fd\u5339\u914d\u7684\u70b9\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++){\n\t\tdx[i]=read();dy[i]=read();\n\t}\n    \n\tfor(int i=1;i<=m;i++){\n\t\tmx[i]=read();my[i]=read();\n\t}\n    \n\tfor(int i=1;i<n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tdouble d1=dis(dx[i],dy[i],dx[i+1],dy[i+1]);\n\t\t\tdouble d2=dis(dx[i],dy[i],mx[j],my[j])+dis(mx[j],my[j],dx[i+1],dy[i+1]);\n\t\t\tif(d1*2>=d2){\n\t\t\t\tadd(i,j);\n\t\t\t}\n\t\t}\n\t}\n   \n\tint tot=0;\n\tfor(int i=1;i<n;i++){\n\tmemset(vis,0,sizeof(vis));\n\t\tif(find(i)){\n\t\t\ttot+=2;//\u53ef\u4ee5\u53bb\u666f\u70b9\u5219\u52a0\u4e0a\u8d77\u70b9\u548c\u666f\u70b9\uff0c\u7ec8\u70b9\u4e3a\u4e0b\u4e00\u6b21\u7684\u8d77\u70b9\n\t\t}else tot+=1;//\u53ea\u6709\u5fc5\u5b9a\u7ecf\u8fc7\u7684\u70b9\n\t}\n    tot++;//\u6700\u540e\u52a0\u4e0an\u8fd9\u4e2a\u7ec8\u70b9\n    \n   //\u4ee5\u4e0b\u4e3a\u8f93\u51fa\n\tprintf(\"%d\\n\",tot);\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%.0f %.0f \",dx[i],dy[i]);//\u5fc5\u5b9a\u7ecf\u8fc7\u7684\u70b9\n\t\tif(cx[i]){\n\t\t\tprintf(\"%.0f %.0f \",mx[cx[i]],my[cx[i]]);//\u5982\u679c\u6709\u5339\u914d\u5219\u52a0\u4e0a\u666f\u70b9\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1551851761,
        "uid": 48744,
        "name": "TLE\u81ea\u52a8\u673a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2526 \u3010[SHOI2001]\u5c0f\u72d7\u6563\u6b65\u3011"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u3002\u5c06\u96c6\u5408\u70b9\u4f5c\u4e3a\u5de6\u70b9\uff0c\u666f\u70b9\u4f5c\u4e3a\u53f3\u70b9\uff0c\u53ef\u4ee5\u521b\u5efa\u51fa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u800c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u5b83\u7684\u6700\u5927\u5339\u914d\u3002\u90a3\u4e48\u8fb9\u600e\u4e48\u8fde\u5462\uff1f\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u666f\u70b9 $i$ \u548c\u6bcf\u4e2a\u96c6\u5408\u70b9 $j$\uff0c\u5982\u679c\u4e3b\u4eba\u4ece\u8fd9\u4e2a\u96c6\u5408\u70b9 $j$ \u5230\u4e0b\u4e00\u4e2a\u96c6\u5408\u70b9 $j+1$ \u9700\u8981\u7684\u65f6\u95f4\uff0c\u6bd4\u5c0f\u72d7\u4ece\u8fd9\u4e2a\u96c6\u5408\u70b9 $j$ \u5230\u666f\u70b9 $i$ \u518d\u5230\u4e0b\u4e00\u4e2a\u96c6\u5408\u70b9 $j+1$ \u7684\u65f6\u95f4\u8981\u957f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u96c6\u5408\u70b9 $j$ \u5230\u666f\u70b9 $i$ \u4e2d\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u56e0\u4e3a\u5c0f\u72d7\u7684\u901f\u5ea6\u662f\u4e3b\u4eba\u7684\u4e24\u500d\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u4e3b\u4eba\u7684\u65f6\u95f4 $\\times 2$\uff0c\u6216\u8005\u5c06\u5c0f\u72d7\u7684\u65f6\u95f4 $\u00f72$\uff0c\u518d\u4f5c\u6bd4\u8f83\u5373\u53ef\u3002\n\n\u6570\u7ec4\u8bb0\u5f97\u5f00\u5927\u70b9\u3002\n\n\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e\u7b14\u8005\u7684\u535a\u5ba2\uff1a[\u9898\u89e3 P2526 [SHOI2001]\u5c0f\u72d7\u6563\u6b65](https://venusnero.github.io/2019/01/27/solution_p2526/)\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 10005\n#define MAXM 500005\nusing namespace std;\nstruct Node\n{\n\tint x,y;\n}a[MAXN],b[MAXN];\nqueue <int> q;\nint cnt=1,fst[MAXN],nxt[MAXM<<1],to[MAXM<<1],w[MAXN<<1],cur[MAXN];\nint n,m,S,T,dep[MAXN];\nvoid AddEdge(int u,int v,int c)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n\tw[cnt]=c;\n}\nbool Bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tq.push(S);\n\tdep[S]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(!dep[v] && w[i])\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[T];\n}\nint Dfs(int u,int flow)\n{\n\tif(u==T || !flow) return flow;\n\tint used=0;\n\tfor(int &i=cur[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(dep[v]==dep[u]+1 && w[i])\n\t\t{\n\t\t\tint fl=Dfs(v,min(flow,w[i]));\n\t\t\tif(fl)\n\t\t\t{\n\t\t\t\tused+=fl;\n\t\t\t\tflow-=fl;\n\t\t\t\tw[i]-=fl;\n\t\t\t\tw[i^1]+=fl;\n\t\t\t\tif(!flow) break;\n\t\t\t}\n\t\t}\n\t}\n\treturn used;\n}\nint Dinic()\n{\n\tint sum=0;\n\twhile(Bfs())\n\t{\n\t\tmemcpy(cur,fst,sizeof(fst));\n\t\tsum+=Dfs(S,2e9);\n\t}\n\treturn sum;\n}\ndouble Calc(Node x,Node y)\n{\n\treturn sqrt((double)(x.x-y.x)*(x.x-y.x)+(double)(x.y-y.y)*(x.y-y.y));\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tS=0;\n\tT=n+m+1;\n\tfor(int i=1;i<=n;i++) scanf(\"%d %d\",&a[i].x,&a[i].y);\n\tfor(int i=1;i<=m;i++) scanf(\"%d %d\",&b[i].x,&b[i].y);\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(Calc(a[i],a[i-1])>(Calc(a[i-1],b[j])+Calc(b[j],a[i]))/2.0)\n\t\t\t{\n\t\t\t\tAddEdge(i,j+n,1);\n\t\t\t\tAddEdge(j+n,i,0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tAddEdge(S,i,1);\n\t\tAddEdge(i,S,0);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tAddEdge(i+n,T,1);\n\t\tAddEdge(T,i+n,0);\n\t}\n\tint res=Dinic()+n;\n\tprintf(\"%d\\n%d %d \",res,a[1].x,a[1].y);\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tfor(int j=fst[i];j;j=nxt[j])\n\t\t{\n\t\t\tint v=to[j];\n\t\t\tif(v==S || v==T || w[j]) continue;\n\t\t\tprintf(\"%d %d \",b[v-n].x,b[v-n].y);\n\t\t}\n\t\tprintf(\"%d %d \",a[i].x,a[i].y);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1548559775,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2526 \u3010[SHOI2001]\u5c0f\u72d7\u6563\u6b65\u3011"
    },
    {
        "content": "\u4e0d\u4f1a\u5199\u5308\u7259\u5229\u7b97\u6cd5..\u679c\u7136\u6211\u5b66OI\u6709\u70b9\u529f\u5229\u3002\n\n\u7701\u9009\u9000\u5f79\u4ee5\u540e\u518d\u5b66\u5308\u7259\u5229\u5427..\n\n\u5c1d\u8bd5\u4f7f\u7528Dinic\uff0c\u601d\u8def\u697c\u4e0a\u5f88\u6e05\u695a\uff0c\u4e0d\u518d\u89e3\u91ca\u4e86\u3002\n\n\u5c31\u662f\u4e2a\u677f\u5b50\u5566\u3002\n\n\u66b4\u529b\u7684\u65b9\u6cd5\u5bfb\u627e\u8def\u5f84\u5c31\u53ef\u4ee5\u4e86\n\n```\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\n#define maxn 205\n#define en 203\n#define fo(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nint n,m;\nstruct ro{\n\tint to,flow;\n};\nvector<ro> edge;\nvector<int> a[maxn];\nint d[maxn];\nqueue<int> q;\nint dfs(int u,int flow)\n{\n\tif(u==en) return flow;\n\tint cnt=0;\n\tfor(int i=0;i<a[u].size();i++){\n\t\tro c=edge[a[u][i]];\n\t\tif(c.flow<=0||d[u]+1!=d[c.to]) continue;\n\t\tint s=dfs(c.to,min(flow,c.flow));\n\t\tflow-=s;\n\t\tcnt+=s;\n\t\tedge[a[u][i]].flow-=s;\n\t\tedge[a[u][i]^1].flow+=s;\n\t\tif(flow==0) break;\n\t}\n\tif(cnt==0) d[u]=-1;\n\treturn cnt;\n}\n\nbool bfs()\n{\n\tmemset(d,-1,sizeof(d));\n\td[0]=0;q.push(0);\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();q.pop();\n\t\tfor(int i=0;i<a[now].size();i++){\n\t\t\tro c=edge[a[now][i]];\n\t\t\tif(c.flow<=0||d[c.to]!=-1) continue;\n\t\t\td[c.to]=d[now]+1;\n\t\t\tq.push(c.to);\n\t\t}\n\t}\n\treturn (d[en]!=-1);\n}\n\n\nstruct D{\n\tint x,y;\n} Master[maxn],Dog[maxn];\nvoid getb(int fr,int to){\n\tro c;c.to=to;c.flow=1;\n\tedge.push_back(c);\n\ta[fr].push_back(edge.size()-1);\n\tc.to=fr;c.flow=0;\n\tedge.push_back(c);\n\ta[to].push_back(edge.size()-1);\n}\n\ndouble len(D s1,D s2){\n\tdouble re=1.0*(double)((s1.x-s2.x)*(s1.x-s2.x)+(s1.y-s2.y)*(s1.y-s2.y));\n\treturn sqrt(re);\n}\n\nvoid sc()\n{\n\tcin>>n>>m;\n\tfo(i,1,n) scanf(\"%d%d\",&Master[i].x,&Master[i].y);\n\tfo(i,1,n-1) getb(0,i);\n\tfo(i,1,m) scanf(\"%d%d\",&Dog[i].x,&Dog[i].y),getb(i+100,en);\n\tfo(i,1,n-1) fo(j,1,m){\n\t\tif(len(Master[i],Dog[j])+len(Master[i+1],Dog[j])>len(Master[i],Master[i+1])*2)\n\t\tcontinue;\n\t\tgetb(i,j+100);\n\t}\n}\nint pr[maxn],cnt;\nvoid sum()\n{\n\tint ans=0;\n\tfo(u,1,n-1){\n\t\tint ok=0;\n\t\tfor(int i=0;i<a[u].size();i++){\n\t\t\tro c=edge[a[u][i]];\n\t\t\tif(c.to==0&&c.flow>0){\n\t\t\t\tok=1;\n\t\t\t}\n\t\t}\n\t\tpr[cnt++]=u;\n\t\tif(ok) for(int i=0;i<a[u].size();i++){\n\t\t\tro c=edge[a[u][i]];\n\t\t\tif(c.to!=0&&c.flow<=0){\n\t\t\t\tpr[cnt++]=c.to;\n\t\t\t}\n\t\t}\n\t}\n\tpr[cnt++]=n;\n\tcout<<cnt<<endl;\n\tfor(int i=0;i<cnt;i++){\n\t\tif(pr[i]>100) printf(\"%d %d \",Dog[pr[i]-100].x,Dog[pr[i]-100].y);\n\t\telse printf(\"%d %d \",Master[pr[i]].x,Master[pr[i]].y);\n\t}\n}\n\nint main()\n{\n\tsc();\n\twhile(bfs()) dfs(0,inf);\n\tsum();\n\treturn 0;\n}\n```",
        "postTime": 1523098198,
        "uid": 29610,
        "name": "SGOI_Aromyase",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2526 \u3010[SHOI2001]\u5c0f\u72d7\u6563\u6b65\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u5f53\u4e3b\u4eba\u4ece\u4e00\u4e2a\u70b9\u4ee5\u76f4\u7ebf\u8d70\u5411\u53e6\u4e00\u4e2a\u70b9\u65f6\uff0c\u5c0f\u72d7\u4f1a\u8dd1\u5411\u4e00\u4e2a\u4ed6\u611f\u5174\u8da3\u7684\u70b9\uff0c\u5e76\u4e14\u4e3b\u4eba\u7684\u8def\u7ebf\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u5bfb\u627e\u4e00\u6761\u8def\u5f84\u53ef\u4ee5\u770b\u6210\u662f\u5bf9\u5c0f\u72d7\u8def\u5f84\u7684\u9009\u62e9\uff0c\u5373\uff1a\u2460\u8dd1\u5411\u4e00\u4e2a\u666f\u70b9 \u6216 \u2461\u4e0e\u4e3b\u4eba\u7684\u8def\u7ebf\u91cd\u5408\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4e3b\u4eba\u79fb\u52a8\u7684\u6bcf\u4e00\u6bb5\u62bd\u8c61\u6210\u70b9\uff0c\u5c31\u53ef\u4ee5\u4e0e\u5c0f\u72d7\u5411\u5f80\u7684\u666f\u70b9\u5206\u4e3a\u4e24\u7c7b\uff0c\u6784\u6210\u4e8c\u5206\u56fe\u3002\n\n\u76ee\u6807\u5c31\u662f\u6c42\u8fd9\u4e2a**\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d**\u3002\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define M(x, OP) memset(x, OP, sizeof(x))\nconst int maxn = 105;\nstruct Data{ int x, y; } A[maxn], B[maxn];\nint N, M, ans = 0;\nint ch[maxn][maxn], link[maxn<<2], vis[maxn<<2];\ninline double dis(Data X, Data Y){\n    return sqrt(abs(X.x - Y.x) * abs(X.x - Y.x) + abs(X.y - Y.y) * abs(X.y - Y.y));\n}\nbool dfs(int u){\n    for(int i = 1; i <= N - 1; i++){\n        if(!vis[i] && ch[u][i]){\n            vis[i] = 1;\n            if(!link[i] || dfs(link[i])){\n                link[i] = u;\n                return true;\n            }\n        }\n    }\n    return false;\n}\ninline int GetInt(){\n    char x;\n    int ret;\n    while((x = getchar()) < '0' || x > '9');\n    ret = x - '0';\n    while((x = getchar()) >= '0' && x <= '9') ret = ret * 10 + x - '0';\n    return ret;\n}\nint main(){\n    N = GetInt(), M = GetInt();\n    for(int i = 1; i <= N; i++){\n        scanf(\"%d%d\", &A[i].x, &A[i].y);\n//        printf(\"%d %d \", A[i].x, A[i].y);    \n        /*A[i].x = GetInt(), A[i].y = GetInt();*/\n    } \n    for(int i = 1; i <= M; i++){\n        scanf(\"%d%d\", &B[i].x, &B[i].y);\n//        printf(\"%d %d \", B[i].x, B[i].y);\n        /*B[i].x = GetInt(), B[i].y = GetInt();*/\n    }\n    memset(ch, 0, sizeof(ch));\n    for(int i = 1; i <= N - 1; i++)\n        for(int j = 1; j <= M; j++)\n            if(dis(A[i], A[i+1]) > (dis(A[i], B[j]) + dis(B[j], A[i+1])) / 2) ch[j][i] = 1;\n    ans = 0;\n    memset(link, 0, sizeof(link));\n    for(int i = 1; i <= M; i++){\n        memset(vis, 0, sizeof(vis));\n        if(dfs(i)) ans++;\n    }\n    printf(\"%d\\n\", ans + N);\n    for(int i = 1; i <= N; i++){\n        printf(\"%d %d\", A[i].x, A[i].y);\n        if(i == N) printf(\"\\n\");\n        else{\n            printf(\" \");\n            if(link[i]) printf(\"%d %d \", B[link[i]].x, B[link[i]].y);\n        }\n    }\n    return 0;\n} \n\n```",
        "postTime": 1503707220,
        "uid": 17318,
        "name": "Cet6_427",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2526 \u3010[SHOI2001]\u5c0f\u72d7\u6563\u6b65\u3011"
    }
]