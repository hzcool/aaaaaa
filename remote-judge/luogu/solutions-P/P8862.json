[
    {
        "content": "T1 \u9898\u89e3\uff08\u5b9a\u4f4d\uff1a\u7b7e\u5230\u9898\uff09\uff1a\n\n+ \u7531\u4e8e $\\max$ \u64cd\u4f5c\u7684\u8d21\u732e\u65e0\u6cd5\u88ab\u540e\u9762\u7684 $\\max$ \u64cd\u4f5c\u62b5\u6d88\uff0c\u5012\u5e8f\u8003\u8651\u64cd\u4f5c\uff0c\u4ee5 $a'$ \u4e3a\u521d\u59cb\u6570\u7ec4\uff0c$1$ \u64cd\u4f5c\u52a0\u6cd5\u53d8\u51cf\u6cd5\uff0c\u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u5408\u6cd5\u7684 $x$ \u4e00\u5b9a\u8981\u6ee1\u8db3\uff0c$x\\le$ \u533a\u95f4 $[l,r]$ \u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u5426\u5219\u533a\u95f4 $[l,r]$ \u4e2d\u7684\u6700\u5c0f\u503c\u7ecf\u8fc7\u6b63\u5e8f\u64cd\u4f5c\u540e\u4f1a\u5927\u4e8e\u6700\u7ec8\u503c\u3002\n\n+ \u800c $x$ \u53ef\u4ee5\u76f4\u63a5\u53d6\u7b49\u53f7\uff0c\u539f\u56e0\u662f\u8981\u4f7f\u5f97\u5c3d\u53ef\u80fd\u591a\u7684\u503c\u8fbe\u5230\u6700\u7ec8\u503c\u3002\n\n+ \u7531\u4e8e\u4fdd\u8bc1\u6709\u89e3\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u989d\u5916\u5224\u65ad\u3002\n\n+ \u5efa\u8bae\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u8fc7\u7a0b\u3002\n\n+ \u6700\u7ec8\uff0c\u5199\u4e00\u9897\u652f\u6301\u533a\u95f4\u52a0\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n+ \u9c9c\u82b1\uff1a\u672c\u9898\u672c\u6765\u6709\u5224\u65ad\u662f\u5426\u6709\u89e3\uff0c\u6570\u636e\u7ed9\u4e86 \u4e0d\u53ef\u4ee5\uff0c\u603b\u53f8\u4ee4 40\u3002",
        "postTime": 1668348348,
        "uid": 358748,
        "name": "Error_Yuan",
        "ccfLevel": 5,
        "title": "\u300cKDOI-03\u300d\u8fd8\u539f\u6570\u636e \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u4e00\u4e2a\u60f3\u4e86 15 \u5206\u949f\u600e\u4e48\u5224\u65e0\u89e3\u7136\u540e\u53d1\u73b0\u4e0d\u7528\u5224\u65e0\u89e3\u7684\u5f31\u667a\u9009\u624b\u3002\n\n\u8003\u8651\u6700\u7ec8\u72b6\u6001\u5bf9\u4e8e\u6bcf\u4e00\u65f6\u523b\u540e\u7684\u9650\u5236\u3002\u8fd9\u91cc\u5b9a\u4e49\u521d\u59cb\u72b6\u6001\u4e3a\u7b2c $0$ \u65f6\u523b\u72b6\u6001\uff0c\u6700\u7ec8\u72b6\u6001\u4e3a\u7b2c $q$ \u65f6\u523b\u72b6\u6001\u3002\n\n\u663e\u7136\uff0c\u6700\u7ec8\u72b6\u6001\u5bf9\u4e8e\u7b2c $q$ \u65f6\u523b\u7684\u72b6\u6001\u662f\u5168\u90e8\u76f8\u7b49\u3002\u5373\uff1a$b_{q,i}=a'_i$\u3002\n\n\u7136\u540e\u4ece\u540e\u5411\u524d\u9012\u63a8\u3002\u5982\u679c\u7b2c $i$ \u4e2a\u64cd\u4f5c\u662f\u4e00\u4e2a\u533a\u95f4\u53d6 max \u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u533a\u95f4\u53d6 max \u64cd\u4f5c\u7684\u503c\u8bbe\u5b9a\u6210 $b_{i,[l,r]}$ \u5185\u7684\u6700\u5c0f\u503c\uff1a\u56e0\u4e3a\u518d\u5c0f\u5c31\u4e00\u70b9\u7528\u5904\u90fd\u6ca1\u6709\uff0c\u518d\u5927\u4f1a\u8fdd\u53cd\u9650\u5236\u3002\u53d6\u6700\u5c0f\u503c\u65f6\uff0c$[l,r]$ \u4ee5\u5185\u6240\u6709\u503c\u4e3a\u6700\u5c0f\u503c\u7684\u9650\u5236\u90fd\u4f1a\u7531 $=$ \u53d8\u4e3a $\\leq$\u3002\n\n\u4ee5\u6837\u4f8b 1 \u4e3a\u4f8b\uff1a\u8003\u8651\u7b2c\u4e09\u6b21\u64cd\u4f5c\u540e\uff0c\u9650\u5236\u7531 $=20$ \u53d8\u4e3a $\\leq 20$\uff1b\u8003\u8651\u7b2c\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u9650\u5236\u7531 $\\leq 20,=2,=3,=4,=5$ \u53d8\u4e3a $\\leq 20,=2,\\leq 3,=4,=5$\u3002\n\n\u533a\u95f4\u52a0\u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u628a\u533a\u95f4\u5185\u9650\u5236\u7684\u503c\u51cf\u53bb\u64cd\u4f5c\u7684\u503c\u5373\u53ef\u3002\n\n$=$ \u5411 $\\leq$ \u7684\u6539\u53d8\u53ef\u4ee5\u5747\u644a\uff0c\u4e8e\u662f\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u533a\u95f4\u52a0\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u590d\u6742\u5ea6 $O((n+q)\\log n)$\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u5224\u65e0\u89e3\u4e5f\u5f88\u5bb9\u6613\uff1a\u53ea\u9700\u8981\u770b\u521d\u59cb\u5e8f\u5217\u662f\u5426\u7b26\u5408\u6240\u6709\u9650\u5236\u3002\u4f46\u662f\u5728\u4e0d\u9700\u8981\u5224\u65e0\u89e3\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e0d\u533a\u5206\u9650\u5236\u91cc\u7684 $=$ \u548c $\\leq$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 0xAE3803 - 0xAA5100;\n\nstruct Segtree {\n    pair <long long, int> val[N << 2];\n    long long tag[N << 2];\n    inline void Build(int p, int pl, int pr, long long *a) {\n        tag[p] = 0;\n        if (pl == pr) {\n            val[p] = make_pair(a[pl], pl);\n            return;\n        }\n        int mid = pl + pr >> 1;\n        Build(p << 1, pl, mid, a); Build(p << 1 | 1, mid + 1, pr, a);\n        val[p] = min(val[p << 1], val[p << 1 | 1]);\n    }\n    inline void Pushdown(int p) {\n        tag[p << 1] += tag[p];\n        val[p << 1].first += tag[p];\n        tag[p << 1 | 1] += tag[p];\n        val[p << 1 | 1].first += tag[p];\n        tag[p] = 0;\n    }\n    inline void Modify(int p, int pl, int pr, int l, int r, long long v) {\n        if (pl == l && pr == r) {\n            tag[p] += v;\n            val[p].first += v;\n            return;\n        }\n        Pushdown(p);\n        int mid = pl + pr >> 1;\n        if (mid >= r) Modify(p << 1, pl, mid, l, r, v);\n        else if (mid + 1 <= l) Modify(p << 1 | 1, mid + 1, pr, l, r, v);\n        else {\n            Modify(p << 1, pl, mid, l, mid, v);\n            Modify(p << 1 | 1, mid + 1, pr, mid + 1, r, v);\n        }\n        val[p] = min(val[p << 1], val[p << 1 | 1]);\n    }\n    inline void setLeq(int p, int pl, int pr, int idx) {\n        if (pl == pr) {\n            val[p].second = 0xAE3803;\n            return;\n        }\n        Pushdown(p);\n        int mid = pl + pr >> 1;\n        if (mid >= idx) setLeq(p << 1, pl, mid, idx);\n        else setLeq(p << 1 | 1, mid + 1, pr, idx);\n        val[p] = min(val[p << 1], val[p << 1 | 1]);\n    }\n    inline pair <long long, int> qMin(int p, int pl, int pr, int l, int r) {\n        if (pl == l && pr == r) return val[p];\n        Pushdown(p);\n        int mid = pl + pr >> 1;\n        if (mid >= r) return qMin(p << 1, pl, mid, l, r);\n        else if (mid + 1 <= l) return qMin(p << 1 | 1, mid + 1, pr, l, r);\n        else return min(qMin(p << 1, pl, mid, l, mid), qMin(p << 1 | 1, mid + 1, pr, mid + 1, r));\n    }\n};\nint n, q, opt[N], l[N], r[N];\nlong long a[N], x[N], ad[N];\nSegtree sgt;\n\ninline void Read() {\n    cin >> n >> q;\n    for (int i = 1;i <= n;i++) cin >> a[i];\n    for (int i = 1;i <= q;i++) {\n        cin >> opt[i] >> l[i] >> r[i];\n        if (opt[i] == 1) cin >> x[i];\n    }\n    for (int i = 1;i <= n;i++) cin >> ad[i];\n}\n\ninline void Solve() {\n    sgt.Build(1, 1, n, ad);\n    for (int i = q;i >= 1;i--) {\n        if (opt[i] == 1) sgt.Modify(1, 1, n, l[i], r[i], -x[i]);\n        else {\n            pair <long long, int> res = sgt.qMin(1, 1, n, l[i], r[i]), cur = res;\n            while (cur.first == res.first && cur.second <= n) {\n                sgt.setLeq(1, 1, n, cur.second);\n                cur = sgt.qMin(1, 1, n, l[i], r[i]);\n            }\n            x[i] = res.first;\n        }\n    }\n    for (int i = 1;i <= q;i++) {\n        if (opt[i] == 2) cout << x[i] << \" \";\n    }\n    cout << endl;\n}\n\nint main() {\n    std::ios::sync_with_stdio(0);\n    int t;\n    cin >> t;\n    while (t--) {\n        Read();\n        Solve();\n    }\n    return 0;\n}\n```",
        "postTime": 1669296928,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P8862 \u3010\u300cKDOI-03\u300d\u8fd8\u539f\u6570\u636e\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u6709\u4e00\u9053\u9898\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$ \u548c $q$ \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5171\u6709 $2$ \u79cd\u7c7b\u578b\uff1a\n+ $\\tt{1~l~r~x}$\uff1a\u5bf9\u4e8e\u6240\u6709 $l\\le i\\le r$\uff0c$a_i\\leftarrow a_i+x$\u3002\n+ $\\tt{2~l~r~x}$\uff1a\u5bf9\u4e8e\u6240\u6709 $l\\le i\\le r$\uff0c$a_i\\leftarrow \\max(a_i,x)$\u3002\n\n\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u6240\u6709\u64cd\u4f5c\u7ed3\u675f\u540e\u7684\u6700\u7ec8\u5e8f\u5217 $a_1$\u3002\n\n\u73b0\u5728\uff0c\u7ed9\u51fa\u5f00\u59cb\u7684\u5e8f\u5217 $a$\u3001\u7ed3\u675f\u540e\u7684\u5e8f\u5217 $a_1$\u3001\u6240\u6709 $1$ \u64cd\u4f5c\u7684 $l,r,x$ \u4ee5\u53ca\u6240\u6709 $2$ \u64cd\u4f5c\u7684 $l,r$\uff08\u672a\u7ed9\u51fa $x$\uff09\uff0c\u8ba9\u4f60\u8fd8\u539f\u6240\u6709\u7684 $2$ \u64cd\u4f5c\u3002\u6240\u6709\u64cd\u4f5c\u5747\u6309\u987a\u5e8f\u7ed9\u51fa\u3002\n\n------------\n## \u601d\u8def\n\n\u6211\u4eec\u5148\u8003\u8651\u66b4\u529b\u600e\u4e48\u5199\u3002\n\n\u4e00\u4e2a\u663e\u7136\u7684\u4e8b\u5b9e\u662f\uff1a\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u4e0d\u4f1a\u8ba9\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6570\u66f4\u5c0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u628a\u5ffd\u7565\u6240\u6709\u64cd\u4f5c\u4e8c\u540e\u5f97\u5230\u7684\u5e8f\u5217\u8bb0\u4f5c $a_2$\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 $1\\le i\\le n$\uff0c\u6709 $a_{1_i}\\ge a_{2_i}$\u3002\u6211\u4eec\u4e0d\u59a8\u8bbe $c_i=a_{1_i}-a_{2_i}$\u3002\n\n\u6211\u4eec\u518d\u89c2\u5bdf\u4e00\u4e0b\u64cd\u4f5c\u4e8c\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u64cd\u4f5c\u4e8c\u4f1a\u4f7f $[l,r]$ \u533a\u95f4\u5185\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u52a0\u4e0a\u4e00\u4e2a $t$\uff08\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570 $t$ \u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u4e14 $t\\ge 0$\uff09\u3002\u90a3\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u540e\u7684 $d_i$ \u5176\u5b9e\u662f\u7531\u591a\u4e2a\u64cd\u4f5c\u4e8c\u7684 $t$ \u8d21\u732e\u8fc7\u6765\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7684\u505a\u6cd5\u5c31\u6709\u4e86\uff1a\u6211\u4eec\u5148\u8dd1\u4e00\u8fb9\u53ea\u6709\u64cd\u4f5c\u4e00\u7684\u8fc7\u7a0b\uff0c\u83b7\u5f97 $d_i$ \u540c\u65f6\u8bb0\u4e0b\u6765\u539f\u6570\u7ec4\uff0c\u7b2c\u4e8c\u6b21\u518d\u8dd1\u4e00\u904d\uff1a\n\n- \u5f53\u524d\u4e3a\u64cd\u4f5c\u4e00\u65f6\uff0c\u6b63\u5e38\u4fee\u6539\uff1b\n- \u5f53\u524d\u4e3a\u64cd\u4f5c\u4e8c\u65f6\uff0c\uff08\u8bb0\u6b64\u65f6\u5e8f\u5217\u4e3a $a_3$\uff09\u6211\u4eec\u5bf9 $[l,r]$ \u627e\u5230\u4e00\u4e2a\u6700\u5927\u7684 $x$ \u4f7f\u5f97\u5bf9\u4e8e\u4efb\u610f\u7684 $l\\le i\\le r$ \u90fd\u6709 $\\max(a_{3_i},x)\\le a_{1_i}$\uff0c\u4ee5\u8fd9\u4e2a $x$ \u4f5c\u4e3a\u5f53\u524d\u64cd\u4f5c\u4e8c\u7684 $x$ \u518d\u6309\u9898\u610f\u4fee\u6539\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6700\u540e\u5f97\u5230\u7684\u7b54\u6848\u4e00\u5b9a\u5408\u6cd5\u5417\uff1f\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4e8c\uff0c\u6211\u4eec\u90fd\u5c06\u5176\u6539\u6210\u4e86\u76ee\u524d\u80fd\u6539\u6210\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u6700\u540e\u5f97\u5230\u7684\u5c31\u662f $a_1$\u3002\n\n\u90a3\u4e48\u64cd\u4f5c\u4e8c\u7684 $x$ \u600e\u4e48\u627e\u5462\uff1f\u8fb9\u8dd1\u8fb9\u7ef4\u62a4\u65b0\u7684 $c_i$\uff0c\u6bcf\u4e00\u6b21\u5bf9\u4e00\u4e2a\u6570\u64cd\u4f5c\u4e8c\u4e4b\u540e\u5c06 $a_{3_i}$ \u52a0\u4e0a\u7684\u6570\u51cf\u5230 $c_i$ \u4e0a\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6709\uff1a\n\n$$x=\\displaystyle\\min_{i=l}^{r}c_i+a_{3_i}$$\n\n\u4e8e\u662f\u6211\u4eec\u5199\u51fa\u5982\u4e0b\u66b4\u529b\u4ee3\u7801\uff1a\n\n```cpp\nvoid sol() {\n\tn = read(), hop = 0, q = read();\n\tfor (int i = 1; i <= n; i++) a[i] = d[i] = read();\n\tfor (int i = 1; i <= q; i++) {\n\t\tqq[i].type = read(), qq[i].l = read(), qq[i].r = read();\n\t\tif (qq[i].type == 2) continue;\n\t\tqq[i].x = read();\n\t\tfor (int j = qq[i].l; j <= qq[i].r; j++) a[j] += qq[i].x;\n\t}\n\tfor (int i = 1; i <= n; i++) b[i] = read(), c[i] = b[i] - a[i];\n\tfor (int i = 1; i <= q; i++) {\n\t\tif (qq[i].type == 1) {\n\t\t\tfor (int j = qq[i].l; j <= qq[i].r; j++) d[j] += qq[i].x;\n\t\t\tcontinue;\n\t\t}\n\t\tint nowmn = INF;\n\t\tfor (int j = qq[i].l; j <= qq[i].r; j++) nowmn = min(nowmn, d[j] + c[j]);\n\t\tans[++hop] = nowmn;\n\t\tfor (int j = qq[i].l; j <= qq[i].r; j++)\n\t\t\tc[j] -= max(0, nowmn - d[j]), d[j] = max(d[j], nowmn);\n\t}\n\tfor (int i = 1; i <= hop; i++) printf(\"%lld \", ans[i]);\n\tputs(\"\");\n}\n```\n\n------------\n\u8003\u8651\u5982\u4f55\u4f18\u5316\u4e0a\u4e00\u4e2a\u8fc7\u7a0b\u3002\n\n\u7b2c\u4e00\u6b21\u626b\uff1a\u533a\u95f4\u52a0\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u7ebf\u6bb5\u6811\u641e\u5b9a\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u6b21\u626b\uff0c\u6211\u4eec\u53d1\u73b0\uff1a\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4e8c\u4e4b\u540e\u4e8b\u5b9e\u4e0a\u90fd\u4e0d\u4f1a\u6539\u53d8 $a_{3_i}$ \u4e0e $c_i$ \u7684\u548c\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4e00\u76f8\u5f53\u4e8e\u7ed9 $a_{3_i}$ \u8fdb\u884c\u4e00\u4e2a\u533a\u95f4\u52a0\uff0c\u64cd\u4f5c\u4e8c\u53ea\u9700\u8981\u67e5\u8be2\u4e00\u4e2a\u6700\u5c0f\u503c\u5b58\u8d77\u6765\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u7b2c\u4e8c\u6b21\u626b\u7684\u8fc7\u7a0b\uff1a\u7ef4\u62a4 $c_i+a_{3_i}$\uff0c\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\uff0c\u8fd8\u662f\u7528\u7ebf\u6bb5\u6811\u641e\u5b9a\u3002\n\n\u6700\u540e\u8fd9\u9053\u9898\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\u3002\u6ce8\u610f\u91cd\u5efa\u7ebf\u6bb5\u6811\u7684\u65f6\u5019\u628a\u4e0b\u4f20\u7528\u7684\u61d2\u6807\u8bb0\u4e5f\u6e05\u7a7a\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nint a[N], b[N], c[N], d[N], n, q, ans[N], hop, t;\nstruct Q {\n\tint l, r, type, x;\n} qq[N];\nnamespace Seg1 {\n\tstruct T {\n\t\tint l, r, sum, flg_s, mn;\n\t} t[N];\n\tvoid build(int nowary[], int p, int l, int r) {\n\t\tt[p].l = l, t[p].r = r, t[p].flg_s = 0;\n\t\tif (l == r) {\n\t\t\tt[p].sum = nowary[l], t[p].mn = nowary[l];\n\t\t\treturn;\n\t\t}\n\t\tbuild(nowary, p << 1, l, (l + r) >> 1), build(nowary, p << 1 | 1, ((l + r) >> 1) + 1, r);\n\t\tt[p].sum = t[p << 1].sum + t[p << 1 | 1].sum;\n\t\tt[p].mn = min(t[p << 1].mn, t[p << 1 | 1].mn);\n\t}\n\tvoid push(int p) {\n\t\tif (!t[p].flg_s) return;\n\t\tt[p << 1].flg_s += t[p].flg_s, t[p << 1 | 1].flg_s += t[p].flg_s;\n\t\tt[p << 1].sum += (t[p << 1].r - t[p << 1].l + 1) * t[p].flg_s;\n\t\tt[p << 1 | 1].sum += (t[p << 1 | 1].r - t[p << 1 | 1].l + 1) * t[p].flg_s;\n\t\tt[p << 1].mn += t[p].flg_s, t[p << 1 | 1].mn += t[p].flg_s, t[p].flg_s = 0;\n\t}\n\tvoid change(int p, int l, int r, int x) {\n\t\tif (t[p].l >= l && t[p].r <= r) {\n\t\t\tt[p].flg_s += x, t[p].sum += (t[p].r - t[p].l + 1) * x;\n\t\t\treturn;\n\t\t}\n\t\tpush(p);\n\t\tint mid = (t[p].l + t[p].r) >> 1;\n\t\tif (l <= mid) change(p << 1, l, r, x);\n\t\tif (r > mid) change(p << 1 | 1, l, r, x);\n\t\tt[p].sum = t[p << 1].sum + t[p << 1 | 1].sum;\n\t\tt[p].mn = min(t[p << 1].mn, t[p << 1 | 1].mn);\n\t}\n\tint assk_sum(int p, int l, int r) {\n\t\tif (t[p].l >= l && t[p].r <= r) return t[p].sum;\n\t\tpush(p);\n\t\tint mid = (t[p].l + t[p].r) >> 1, res = 0;\n\t\tif (l <= mid) res = assk_sum(p << 1, l, r);\n\t\treturn r > mid ? res + assk_sum(p << 1 | 1, l, r) : res;\n\t}\n\tint assk_mn(int p, int l, int r) {\n\t\tif (t[p].l >= l && t[p].r <= r) return t[p].mn;\n\t\tpush(p);\n\t\tint mid = (t[p].l + t[p].r) >> 1, res = INF;\n\t\tif (l <= mid) res = assk_mn(p << 1, l, r);\n\t\treturn r > mid ? min(res, assk_mn(p << 1 | 1, l, r)) : res;\n\t}\n}\nvoid sol() {\n\tn = read(), q = read(), hop = 0;\n\tfor (int i = 1; i <= n; i++) a[i] = read();\n\tSeg1::build(a, 1, 1, n);\n\tfor (int i = 1; i <= q; i++) {\n\t\tqq[i].type = read(), qq[i].l = read(), qq[i].r = read();\n\t\tif (qq[i].type == 2) continue;\n\t\tqq[i].x = read();\n\t\tSeg1::change(1, qq[i].l, qq[i].r, qq[i].x);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tb[i] = read(), c[i] = b[i] - Seg1::assk_sum(1, i, i), d[i] = c[i] + a[i];\n\tSeg1::build(d, 1, 1, n);\n\tfor (int i = 1; i <= q; i++) {\n\t\tif (qq[i].type == 1) Seg1::change(1, qq[i].l, qq[i].r, qq[i].x);\n\t\telse ans[++hop] = Seg1::assk_mn(1, qq[i].l, qq[i].r);\n\t}\n\tfor (int i = 1; i <= hop; i++) printf(\"%lld \", ans[i]);\n\tputs(\"\");\n}\nsigned main() {\n\tt = read();\n\tfor (int i = 1; i <= t; i++) sol();\n}\n```",
        "postTime": 1668930310,
        "uid": 676638,
        "name": "Strelitzia_",
        "ccfLevel": 4,
        "title": "P8862 \u9898\u89e3"
    },
    {
        "content": "### P8862 \u300cKDOI-03\u300d\u8fd8\u539f\u6570\u636e\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P8862)\n\n\u5f88\u597d\u7684\u4e00\u9898\u3002\u4e2a\u4eba\u505a\u6cd5\uff1a\u7ebf\u6bb5\u6811+\u5dee\u5206\u3002\n\n\u8003\u8651 $a_i$ \u5728\u52a0\u503c\u548c\u53d6 $\\max$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u5171\u52a0\u4e86 $x$ ,\u90a3\u4e48\u6700\u540e\u5f97\u5230\u7684 $a'_i \\ge a_i+x$ \u3002\n\n\n\u8bb0\uff1a\u5bf9\u4e8e $a_i$ \u5230 $a'_i$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u5171\u7ecf\u5386\u7684 $1$ \u64cd\u4f5c\u8ba9 $a_i$ \u5171\u52a0\u4e86 $S_i$\u3002\u90a3\u4e48\u5728\u67d0\u4e00\u6b21 $2$ \u64cd\u4f5c\u65f6\uff0c\u5982\u679c $a_i$ \u5df2\u7ecf\u52a0\u4e86 $k$ \uff08\u53ea\u8003\u8651 $1$ \u64cd\u4f5c\uff0c\u5373\u540e\u9762\u8fd8\u8981\u52a0 $S_i-k$\uff09\uff0c\u90a3\u4e48\u5f53\u524d\u5f97 $x$ \u81f3\u591a\u4e3a $a'_i-S_i+k$ \uff0c\u5426\u5219\u6700\u540e\u4e00\u5b9a\u5927\u4e8e $a'_i$\u3002\n\n\u5bf9\u4e8e\u7b2c $k$ \u6b21 $2$ \u64cd\u4f5c\uff0c\u4ee4 $x_k= \\min (a'_i-S_i+k),i\\in [l_k,r_k]$\n\u3002\u4e0d\u96be\u53d1\u73b0\u5982\u6b64\u6784\u9020\u4e00\u5b9a\u7b26\u5408\u8981\u6c42\uff08\u56e0\u4e3a\u6570\u636e\u4fdd\u8bc1\u6709\u89e3\uff0c\u6240\u4ee5\u6bcf\u6b21\u53d6\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\uff09\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5982\u4f55\u5feb\u901f\u6c42\u51fa $S_i$ \u548c $x_i$\u3002\n\n\u53d1\u73b0\u6211\u4eec\u6c42 $S_i$ \u7684\u8fc7\u7a0b\u5373\u533a\u95f4\u52a0\u503c\u3002\u4e0d\u96be\u60f3\u5230\u5dee\u5206\uff0c\u597d\u5199\u597d\u8c03\u3002\n\n\u5bf9\u4e8e $x_i$ \uff0c\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u521d\u503c\u8d4b $a'_i-S_i$ \uff0c\u7ef4\u62a4\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u6700\u5c0f\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08 ``cr`` \u4e3a $2$ \u64cd\u4f5c\u5f97\u7b54\u6848\uff0c\u5373 $x_i$\uff09\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define ls o<<1\n#define rs o<<1|1\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+10;\nconst ll maxn=1e15;\nconst ll minn=-1e15;\nvoid read(ll &x)\n{\n\tint fx=1;\n\tx=0;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9')\n\t{\n\t\tif(ch=='-') fx=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx=x*fx;\n}\nint n,q;\nll a[N];\nll b[N];\nll d[N],s[N],ss[N];\nstruct Node{\n\tint type; // 1: add    2: max\n\tint l,r;\n\tll x;    // if type = 1\n\tll cr;    // if type = 2\n}p[N];\nstruct T{\n\tll minx;\n\tll lazy;\n}tr[N<<2];\nvoid pushup(int o)\n{\n\ttr[o].minx=min(tr[ls].minx,tr[rs].minx);\n}\nvoid build(int o,int l,int r)\n{\n\ttr[o].lazy=0;\n\tif(l==r)\n\t{\n\t\ttr[o].minx=d[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tpushup(o);\n}\nvoid pushdown(int o)\n{\n\tif(tr[o].lazy)\n\t{\n\t\ttr[ls].lazy+=tr[o].lazy;\n\t\ttr[rs].lazy+=tr[o].lazy;\n\t\ttr[ls].minx+=tr[o].lazy;\n\t\ttr[rs].minx+=tr[o].lazy;\n\t\ttr[o].lazy=0;\n\t}\n}\nvoid update(int o,int l,int r,int L,int R,int x)\n{\n\tif(l>R || r<L) return;\n\tif(l>=L && r<=R)\n\t{\n\t\ttr[o].lazy+=x;\n\t\ttr[o].minx+=x;\n\t\treturn;\n\t}\n\tpushdown(o);\n\tint mid=(l+r)>>1;\n\tupdate(ls,l,mid,L,R,x);\n\tupdate(rs,mid+1,r,L,R,x);\n\tpushup(o);\n}\nll query(int o,int l,int r,int L,int R)\n{\n\tif(l>R || r<L) return maxn;\n\tif(l>=L && r<=R)\n\t{\n\t\treturn tr[o].minx;\n\t}\n\tpushdown(o);\n\tint mid=(l+r)>>1;\n\treturn min(query(ls,l,mid,L,R),query(rs,mid+1,r,L,R));\n}\nint main()\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d%d\",&n,&q);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\td[i]=s[i]=0;\n\t\t\tss[i]=0;\n\t\t\tread(a[i]);\n\t\t}\n\t\tfor(int i=1;i<=q;i++)\n\t\t{\n\t\t\tll op,l,r;\n\t\t\tread(op);\n\t\t\tread(l);\n\t\t\tread(r);\n\t\t\tp[i].l=l,p[i].r=r;\n\t\t\tif(op==1)\n\t\t\t{\n\t\t\t\tp[i].type=1;\n\t\t\t\tll x;\n\t\t\t\tread(x);\n\t\t\t\tp[i].x=x;\n\t\t\t\tss[p[i].l]+=x;\n\t\t\t\tss[p[i].r+1]-=x;\t\t\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tp[i].type=2;\n\t\t\t\tp[i].cr=maxn;\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\ts[i]=s[i-1]+ss[i];\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tread(b[i]);\n\t\t\td[i]=b[i]-s[i];\n\t\t}\n\t\tbuild(1,1,n);\n\t\tfor(int i=1;i<=q;i++)\n\t\t{\n\t\t\tif(p[i].type==2)\n\t\t\t{\n\t\t\t\tp[i].cr=query(1,1,n,p[i].l,p[i].r);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tupdate(1,1,n,p[i].l,p[i].r,p[i].x);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=q;i++)\n\t\t{\n\t\t\tif(p[i].type==2)\n\t\t\t{\n\t\t\t\tprintf(\"%lld \",p[i].cr);\n\t\t\t}\n\t\t} \n\t\tprintf(\"\\n\");\n\t}\n} \n```\n\n\n",
        "postTime": 1668923230,
        "uid": 255077,
        "name": "\u9ea6\u514b\u65af\u97e6\u306e\u5996",
        "ccfLevel": 6,
        "title": "P8862 \u300cKDOI-03\u300d\u8fd8\u539f\u6570\u636e\u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://dregen-yor.eu.org/2022/11/21/p8862/)\u3002\n\n# \u601d\u8def\n\n~~\u9996\u5148\u5f97\u51fa\u8fd9\u9053\u9898\u5fc5\u987b\u79bb\u7ebf\u5904\u7406\u3002~~\n\n## \u9519\u8bef\u601d\u8def\uff1a\u6b63\u5e8f\u5904\u7406\n\n\u56e0\u4e3a\u6211\u4eec\u5df2\u77e5\u6240\u6709\u64cd\u4f5c\u4e00\u7684\u4fe1\u606f\uff0c\u5982\u679c\u5ffd\u7565\u64cd\u4f5c\u4e8c\uff0c\u6839\u636e\u64cd\u4f5c\u4e00\u7684\u4fe1\u606f\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6700\u7ec8\u6570\u7ec4\u4e0e\u9898\u76ee\u4e2d\u7ed9\u51fa\u6570\u7ec4\u7684\u5dee\uff0c\u8fd9\u4e2a\u5dee\u5fc5\u987b\u7531\u64cd\u4f5c\u4e8c\u8865\u4e0a\u3002\n\n\u6211\u4eec\u8003\u8651\u7528 $delta_i$ \u8bb0\u5f55\u5ffd\u7565\u64cd\u4f5c\u4e8c\u540e\u6240\u5f97\u6570\u7ec4\u4e2d\u7b2c $i$ \u4e2a\u6570\u4e0e\u6700\u7ec8\u6570\u7ec4\u4e2d\u7b2c $i$ \u4e2a\u6570\u7684\u5dee\uff0c\u6b63\u5e8f\u904d\u5386\u6bcf\u4e2a\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u64cd\u4f5c\u4e00\u7528\u7ebf\u6bb5\u6811\u76f4\u63a5\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\u4e8c\uff0c\u6211\u4eec\u7ef4\u62a4\u533a\u95f4\u4e2d\u6bcf\u4e2a\u6570\u52a0\u4e0a $delta_i$ \u4e4b\u540e\u7684\u6700\u5c0f\u503c\uff0c\u7528\u4ed6\u6765\u5f53\u4f5c\u672c\u6b21\u64cd\u4f5c\u7684 $x$\uff0c\u5bf9\u4e0e\u533a\u95f4\u4e2d\u53d8\u5927\u4e86\u7684\u6570 $j$\uff0c\u4ece $delta_j$ \u4e2d\u51cf\u53bb\u76f8\u5e94\u53d8\u5927\u7684\u503c\u3002\n\n\u4f46\u5982\u679c\u8fd9\u6837\u5904\u7406\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u533a\u95f4\u5185\u6bcf\u4e2a $delta_i$ \u53d8\u5316\u7684\u503c\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u7ef4\u62a4\uff0c\u5fc5\u987b\u904d\u5386\u6bcf\u4e2a\u70b9\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\n\n## \u6b63\u786e\u601d\u8def\uff1a\u5012\u5e8f\u5904\u7406\n\n\u6211\u4eec\u8003\u8651\u4ece\u6700\u7ec8\u6570\u7ec4\u51fa\u53d1\uff0c\u4ece\u540e\u5411\u524d\u5904\u7406\u6bcf\u4e2a\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\u4e00\uff0c\u5c06\u52a0 $x$ \u6539\u4e3a\u51cf $x$ \u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u64cd\u4f5c\u4e8c\uff0c\u56e0\u4e3a\u64cd\u4f5c\u4e8c\u4f1a\u5bf9\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u503c\u90fd\u8fdb\u884c\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6\u5f53\u524d\u5e8f\u5217\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u5904\u7406\u540e\uff0c\u65e0\u8bba\u64cd\u4f5c\u524d\u7684\u5e8f\u5217\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5e8f\u5217\u4e2d\u4e0d\u4f1a\u6709\u4efb\u4f55\u4e00\u4e2a\u6570\u5927\u4e8e\u6700\u7ec8\u5e8f\u5217\uff0c\u4e14\u6700\u5c0f\u7684\u90a3\u4e2a\u503c\u4e00\u5b9a\u4f1a\u7b49\u4e8e\u6700\u7ec8\u5e8f\u5217\u3002\n\n\u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1\u6709\u89e3\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u5224\uff0c\u76f4\u63a5\u8f93\u51fa\u6309\u4e0a\u9762\u7684\u65b9\u6cd5\u5f97\u5230\u7684\u6bcf\u4e2a\u64cd\u4f5c\u4e8c $x$ \u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define N 100010\n#define ls x<<1\n#define rs x<<1|1\nusing namespace std;\nstruct nod{\n    int op,l,r,x;\n}qy[N];\nint T,n,m,a[N],A[N];\nint sum[N<<2],tag[N<<2];\nvector <int> ans;\nvoid bulid(int x,int l,int r){\n    tag[x]=0;\n    if(l==r){\n        sum[x]=A[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    bulid(ls,l,mid);\n    bulid(rs,mid+1,r);\n    sum[x]=min(sum[ls],sum[rs]);\n}\ninline void pushdown(int x){\n    sum[ls]+=tag[x];\n    sum[rs]+=tag[x];\n    tag[ls]+=tag[x];\n    tag[rs]+=tag[x];\n    tag[x]=0;\n}\nvoid update(int x,int l,int r,int L,int R,int data){\n    if(l>=L&&r<=R){\n        sum[x]+=data;\n        tag[x]+=data;\n        return;\n    }\n    if(tag[x]){\n        pushdown(x);\n    }\n    int mid=(l+r)>>1;\n    if(L<=mid){\n        update(ls,l,mid,L,R,data);\n    }\n    if(R>mid){\n        update(rs,mid+1,r,L,R,data);\n    }\n    sum[x]=min(sum[ls],sum[rs]);\n}\nint query(int x,int l,int r,int L,int R){\n    if(l>=L&&r<=R){\n        return sum[x];\n    }\n    if(tag[x]){\n        pushdown(x);\n    }\n    int res=1e9;\n    int mid=(l+r)>>1;\n    if(L<=mid){\n        res=min(res,query(ls,l,mid,L,R));\n    }\n    if(R>mid){\n        res=min(res,query(rs,mid+1,r,L,R));\n    }\n    return res;\n}\nsigned main(){\n    scanf(\"%lld\",&T);\n    while(T--){\n        scanf(\"%lld%lld\",&n,&m);\n        ans.clear();\n        for(int i=1;i<=n;i++){\n            scanf(\"%lld\",&a[i]);\n        }\n        for(int i=1;i<=m;i++){\n            scanf(\"%lld\",&qy[i].op);\n            if(qy[i].op==1){\n                scanf(\"%lld%lld%lld\",&qy[i].l,&qy[i].r,&qy[i].x);\n            }\n            else{\n                scanf(\"%lld%lld\",&qy[i].l,&qy[i].r);\n            }\n        }\n        for(int i=1;i<=n;i++){\n            scanf(\"%lld\",&A[i]);\n        }\n        bulid(1,1,n);\n        for(int i=m;i;--i){\n            if(qy[i].op==1){\n                update(1,1,n,qy[i].l,qy[i].r,-qy[i].x);\n            }\n            else{\n                ans.push_back(query(1,1,n,qy[i].l,qy[i].r));\n            }\n        }\n        for(int i=ans.size()-1;i>=0;--i){\n            printf(\"%lld \",ans[i]);\n        }\n        putchar('\\n');\n    }\n    return 0;\n}\n```\n",
        "postTime": 1668936349,
        "uid": 478585,
        "name": "Dregen_Yor",
        "ccfLevel": 4,
        "title": "P8862 \u300cKDOI-03\u300d\u8fd8\u539f\u6570\u636e \u9898\u89e3"
    },
    {
        "content": "## Solution\n\u9996\u5148\u53ef\u4ee5\u770b\u51fa\uff0c\u4e4b\u524d\u7684 $\\max$ \u64cd\u4f5c\u4f1a\u88ab\u4e4b\u540e\u7684 $\\max$ \u64cd\u4f5c\u8986\u76d6\uff0c\u8003\u8651\u5012\u7740\u89e3\u51b3\u95ee\u9898\u3002\n\n\u90a3\u4e48\u95ee\u9898\u8f6c\u5316\u6210\uff1a\u5bf9\u4e8e\u6700\u7ec8\u7684\u6570\u5217 $a'$\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u533a\u95f4\u51cf\u548c\u533a\u95f4\u53d6 $\\min$\uff0c\u5f97\u5230\u6700\u5148\u7684\u6570\u5217 $a$\uff0c\u6784\u9020\u6bcf\u6b21\u53d6 $\\min$ \u7684 $x$\u3002\n\n\u6ce8\u610f\u5230\u5982\u4f55\u65f6\u523b\u6570\u5217\u7684\u6570\u6c38\u8fdc\u6bd4\u4e0a\u4e00\u4e2a\u65f6\u523b\u5927\u3002\n\n\u901a\u8fc7\u89c2\u5bdf\uff0c\u8bbe\u5f53\u524d\u7684\u6570\u5217\u4e3a $na$\uff0c\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848 $x=\\min_{i=1}^nn a_i$\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u8bb0 $mn=\\min_{i=1}^n na_i$\uff0c\u82e5 $x>mn$\uff0c\u5219\u53cd\u8fc7\u6765\u64cd\u4f5c\uff08\u5373\u987a\u7740\u64cd\u4f5c\uff09\u8be5\u64cd\u4f5c\u662f $mn=\\max(mn,x)=x$\uff0c\u65e0\u6cd5\u5f97\u5230 $mn$\uff0c\u6545 $x\\le mn$\u3002\n\n\u7136\u540e\u8bc1\u660e $x=mn$ \u4e00\u5b9a\u662f\u89e3\uff0c\u8bb0 $mn'(mn'\\le mn)$ \u8868\u793a\u5728\u6b64\u6b21\u64cd\u4f5c\u4e4b\u540e\u7684\u6700\u5c0f\u503c\uff08\u5373\u987a\u7740\u64cd\u4f5c\u65f6\u7684\u4e0a\u4e00\u6b65\u7684\u6700\u5c0f\u503c\uff09\uff0c\u6ce8\u610f\u5230\u53cd\u8fc7\u6765\u64cd\u4f5c\uff08\u5373\u987a\u7740\u64cd\u4f5c\uff09\u65f6 $mn=\\max(mn',x)$\uff0c\u5f53 $x=mn$ \u65f6\u4e0d\u7528\u5173\u5fc3 $mn'$ \u7684\u53d6\u503c\uff0c\u6240\u4ee5\u4e00\u76f4\u90fd\u53d6 $x=mn$ \u4e00\u5b9a\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7b54\u6848\u3002\n\n$\\text{Upd}$\uff1a$x<mn$ \u5e76\u4e0d\u662f\u4ee3\u8868\u4e00\u5b9a\u65e0\u89e3\uff0c\u8fd9\u4ee3\u8868 $mn=mn'$\uff0c\u90a3\u4e48\u4ee3\u8868\u4e4b\u524d\u7684\u4e00\u6b21\u64cd\u4f5c\u7684 $x$ \u8981\u8f83\u5927\u624d\u53ef\u4ee5\uff0c\u4f46\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e24\u79cd\u60c5\u51b5\uff1a\n+ \u53e6\u4e00\u6b21\u7684 $x$ \u8981\u8f83\u5c0f\uff0c\u5e76\u4e14\u4e3a\u4e86\u8fd9\u4e2a\u8981\u6c42\uff0c\u8fd8\u6709\u4e00\u4e2a $x$ \u8981\u8f83\u5927\uff0c\u4e00\u4e2a $x$ \u8981\u8f83\u5c0f\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n+ \u5728\u8fd9\u4e2a\u64cd\u4f5c\u7684\u533a\u95f4\u524d\u9762\u6ca1\u6709 $\\max$ \u64cd\u4f5c\u4e86\uff0c\u65e0\u6cd5\u5f97\u51fa $mn'$\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u53ef\u4ee5\u7528\u4e00\u9897\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nusing db=double;\nusing ll=long long;\nusing vi=vector<int>;\nusing pii=pair<int,int>;\nusing pq=priority_queue<int,vector<int>,greater<int> >;\nusing ull=unsigned long long;\n#define ft first\n#define sd second\n#define gc getchar\n#define pb push_back\n#define emp emplace_back\n#define mp make_pair\n#define ls p*2\n#define rs p*2+1\n#define sz(a) (int)a.size()\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define ROF(i,a,b) for(int i=a;i>=b;i--)\n#define int long long\nconst int N=1e6+7;\nconst int mod=998244353;\nconst int INF=(1ll<<60);\nconst int inf=INT_MAX;\nvoid read(int &x)\n{\n\tchar ch=getchar();\n\tint r=0,w=1;\n\twhile(!isdigit(ch))w=ch=='-'?-1:1,ch=getchar();\n\twhile(isdigit(ch))r=(r<<3)+(r<<1)+(ch^48),ch=getchar();\n\tx=r*w;\n}\nvoid write(int x) {\n\tchar ch[20];\n\tint len = 0;\n\tif (x < 0)putchar('-'), x = -x;\n\twhile (x) {\n\t\tch[len++] = (x % 10) ^ 48;\n\t\tx /= 10;\n\t}\n\tif(len==0)printf(\"0\");\n\twhile (len--)putchar(ch[len]);\n\tputchar(' ');\n}\nint mn[N],lazy[N],a[N],op[N],tl[N],tr[N],tx[N],ans[N];\nvoid addlazy(int p,int x)\n{\n\tmn[p]+=x;\n\tlazy[p]+=x;\n}\nvoid pushdown(int p)\n{\n\taddlazy(ls,lazy[p]);\n\taddlazy(rs,lazy[p]);\n\tlazy[p]=0;\n}\nvoid build(int p,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tmn[p]=a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tmn[p]=min(mn[ls],mn[rs]);\n}\nvoid add(int p,int l,int r,int L,int R,int x)\n{\n\tif(L<=l&&r<=R)\n\t{\n\t\taddlazy(p,x);\n\t\treturn;\n\t}\n\tpushdown(p);\n\tint mid=(l+r)/2;\n\tif(L<=mid)add(ls,l,mid,L,R,x);\n\tif(R>mid)add(rs,mid+1,r,L,R,x);\n\tmn[p]=min(mn[ls],mn[rs]);\n}\nint query(int p,int l,int r,int L,int R)\n{\n\tif(L<=l&&r<=R)return mn[p];\n\tint mid=(l+r)/2,mn=INF;\n\tpushdown(p);\n\tif(L<=mid)mn=min(mn,query(ls,l,mid,L,R));\n\tif(R>mid)mn=min(mn,query(rs,mid+1,r,L,R));\n\treturn mn;\n}\nvoid solve()\n{\n\tint n,q,tot=0;\n\tread(n),read(q);\n\tmemset(lazy,0,sizeof lazy);\n\tFOR(i,1,n)read(a[i]);\n\tFOR(i,1,q)\n\t{\n\t\tread(op[i]),read(tl[i]),read(tr[i]);\n\t\tif(op[i]==1)read(tx[i]);\n\t}\n\tFOR(i,1,n)read(a[i]);\n\tbuild(1,1,n);\n\tROF(i,q,1)\n\t{\n\t\tif(op[i]==1)add(1,1,n,tl[i],tr[i],-tx[i]);\n\t\telse\n\t\t{\n\t\t\tint Mn=query(1,1,n,tl[i],tr[i]);\n\t\t\tans[++tot]=Mn;//\u6ce8\u610f\u5230\u4e0d\u7528\u5173\u5fc3mn'\u7684\u503c\uff0c\u8fd9\u91cc\u751a\u81f3\u4e0d\u7528\u66f4\u65b0\n\t\t}\n\t}\n\tROF(i,tot,1)write(ans[i]);\n\tputs(\"\");\n}\nsigned main()\n{\n\tint T;\n\tread(T);\n\twhile(T--)solve();\n    return 0;\n}\n```\n",
        "postTime": 1668929750,
        "uid": 207412,
        "name": "xiaoPanda",
        "ccfLevel": 0,
        "title": "\u300cNOIP\u8d5b\u524d\u51b2\u523a\u300dKDOI-03T1 \u8fd8\u539f\u6570\u636e"
    },
    {
        "content": "\u4e0d\u59a8\u8003\u8651\u4ece\u6700\u7ec8\u5e8f\u5217\u5165\u624b\uff0c**\u5012\u5e8f\u5904\u7406 $q$ \u6b21\u64cd\u4f5c\uff1a**\n\n- \u5bf9\u4e8e\u4e00\u4e2a $\\texttt{1}$ \u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6700\u7ec8\u5e8f\u5217\u4e0a\u51cf\u53bb $x$\u3002\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u8fd9\u4e00\u6b65\u64cd\u4f5c\u4e4b\u524d\u7684\u5e8f\u5217\u3002\n\n- \u5bf9\u4e8e\u4e00\u4e2a $\\texttt{2}$ \u64cd\u4f5c\uff0c\u90a3\u4e48\u7b54\u6848\u4e00\u5b9a\u662f $[l, r]$ \u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\uff08\u6216\u5c0f\u4e8e\u8fd9\u4e2a\u6700\u5c0f\u503c\uff09\u3002\u8003\u8651\u53cd\u8bc1\uff1a\u5982\u679c\u7b54\u6848\u4e0d\u662f\u8fd9\u6837\uff0c\u90a3\u4e48 $[l, r]$ \u4e4b\u95f4\u4e00\u5b9a\u4f1a\u6709\u503c\u6539\u53d8\uff0c\u90a3\u4e48\u7ecf\u8fc7\u540e\u9762\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u7b54\u6848\u4e00\u5b9a\u4e0d\u7b49\u4e8e\u6700\u7ec8\u5e8f\u5217\u3002\n\n\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\uff0c\u652f\u6301\u533a\u95f4\u52a0\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u8bb0\u5f97\u591a\u7ec4\u6e05\u7a7a\u65f6\u6e05\u7a7a\u61d2\u6807\u8bb0\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n#define int long long\n\nconst int N = 100010;\nconst int INF = 1e15;\n\nstruct SegmentTree {\n    int l, r;\n    int dat, add;\n} t[N << 2];\n\nint T;\nint n, q;\nint op[N], a[N], b[N], c[N];\nint l[N], r[N], x[N];\n\nint read() {\n    int x = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') { f = (ch == '-' ? -1 : f); ch = getchar(); }\n    while (ch >= '0' && ch <= '9') { x = x * 10 + ch - '0'; ch = getchar(); }\n    return x * f;\n}\n\nvoid push_up(SegmentTree &fa, SegmentTree ls, SegmentTree rs) {\n    fa.dat = min(ls.dat, rs.dat);\n}\n\nvoid build(int p, int l, int r) {\n    t[p].l = l, t[p].r = r;\n    if (l == r) { t[p].dat = b[l], t[p].add = 0; return; }\n    int mid = (l + r) >> 1;\n    build(p << 1, l, mid), build((p << 1) | 1, mid + 1, r);\n    push_up(t[p], t[p << 1], t[(p << 1) | 1]), t[p].add = 0;\n}\n\nvoid spread(int p) {\n    if (t[p].add) {\n        t[p << 1].dat += t[p].add;\n        t[(p << 1) | 1].dat += t[p].add;\n        t[p << 1].add += t[p].add, t[(p << 1) | 1].add += t[p].add;\n        t[p].add = 0;\n    }\n}\n\nvoid change(int p, int l, int r, int v) {\n    if (l <= t[p].l && r >= t[p].r) {\n        t[p].dat += v;\n        t[p].add += v;\n        return;\n    }\n    spread(p);\n    int mid = (t[p].l + t[p].r) >> 1;\n    if (l <= mid) change(p << 1, l, r, v);\n    if (r > mid) change((p << 1) | 1, l, r, v);\n    push_up(t[p], t[p << 1], t[(p << 1) | 1]);\n}\n\nint ask(int p, int l, int r) {\n    if (l <= t[p].l && r >= t[p].r) return t[p].dat;\n    spread(p);\n    int mid = (t[p].l + t[p].r) >> 1, val = INF;\n    if (l <= mid) val = min(val, ask(p << 1, l, r));\n    if (r > mid) val = min(val, ask((p << 1) | 1, l, r));\n    return val;\n}\n\nvoid init() {\n    n = read(), q = read();\n    for (int i = 1; i <= n; i++) a[i] = read();\n    for (int i = 1; i <= q; i++) {\n        op[i] = read(), l[i] = read(), r[i] = read();\n        if (op[i] == 1) x[i] = read();\n    }\n    for (int i = 1; i <= n; i++) b[i] = read();\n    build(1, 1, n);\n}\n\nvoid solve() {\n    for (int i = q; i >= 1; i--) {\n        if (op[i] == 1) change(1, l[i], r[i], -x[i]);\n        else x[i] = ask(1, l[i], r[i]);\n    }\n}\n\nvoid output() {\n    for (int i = 1; i <= q; i++) {\n        if (op[i] == 1) continue;\n        printf(\"%lld \", x[i]);\n    }\n    puts(\"\");\n}\n\nsigned main() {\n    // freopen(\"restore.in\", \"r\", stdin);\n    // freopen(\"restore.out\", \"w\", stdout);\n    T = read();\n    while (T--) {\n        init();\n        solve();\n        output();\n    }\n    return 0;\n}\n```",
        "postTime": 1668922708,
        "uid": 574944,
        "name": "Micnation_AFO",
        "ccfLevel": 4,
        "title": "P8862 \u300cKDOI-03\u300d\u8fd8\u539f\u6570\u636e \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u64cd\u4f5c\u9006\u5e8f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u52a0\u6cd5\u53d8\u6210\u51cf\u6cd5\u3002\n\n\u95ee\u9898\u5728\u4e8e\u5bf9\u4e8e\u64cd\u4f5c\u4e8c\uff0c\u5982\u4f55\u627e\u5230\u7b54\u6848\u3002\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7ecf\u8fc7\u8fd9\u6b21\u64cd\u4f5c\u4e8c\u540e\uff0c\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u90fd $\\geq$ \u8fd9\u6b21\u64cd\u4f5c\u4e8c\u7684\u7b54\u6848\uff0c\u4e8e\u662f\u64cd\u4f5c\u4e8c\u7684\u7b54\u6848\u5fc5\u7136 $\\leq$ \u8fd9\u4e2a\u64cd\u4f5c\u4e8c\u7684\u533a\u95f4\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b54\u6848\u5e94\u53d6\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u5047\u5982\u7b54\u6848\u53ef\u4ee5\u5c0f\u4e8e\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u53d6\u533a\u95f4\u6700\u5c0f\u503c\u65f6\u4e00\u5b9a\u4e5f\u53ef\u4ee5\u3002\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int N = 1e5 + 5, INF = 2e9, MOD = 1e9 + 7;\n\ninline int read()\n{\n\tint op = 1, x = 0;\n\tchar ch = getchar();\n\twhile ((ch < '0' || ch > '9') && ch != '-') ch = getchar();\n\twhile (ch == '-')\n\t{\n\t\top = -op;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' and ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn x * op;\n}\n\ninline void write(int x)\n{\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\n\nint n, q, t, a[N], b[N];\n\nstruct Modify\n{\n\tint op, l, r, x;\n\tModify(int _op, int _l, int _r, int _x): op(_op), l(_l), r(_r), x(_x){}\n\tModify(){}\n}G[N];\n\nclass SegmentTree\n{\npublic:\n\tstruct Node\n\t{\n\t\tint l, r, add, minn;\n\t}tr[N << 2];\n\tvoid pushup(int u)\n\t{\n\t\ttr[u].minn = min(tr[u << 1].minn, tr[u << 1 | 1].minn);\n\t}\n\tvoid pushdown(int u)\n\t{\n\t\tauto &rt = tr[u], &lf = tr[u << 1], &rit = tr[u << 1 | 1];\n\t\tif (rt.add != 0)\n\t\t{\n\t\t\tlf.add += rt.add;\n\t\t\tlf.minn += rt.add;\n\t\t\trit.add += rt.add;\n\t\t\trit.minn += rt.add;\n\t\t\trt.add = 0;\n\t\t}\n\t}\n\tvoid build(int u, int l, int r)\n\t{\n\t\ttr[u] = { l, r, 0, b[l] };\n\t\tif (l == r) return;\n\t\tint mid = l + r >> 1;\n\t\tbuild(u << 1, l, mid);\n\t\tbuild(u << 1 | 1, mid + 1, r);\n\t\tpushup(u);\n\t}\n\tvoid update(int u, int l, int r, int x)\n\t{\n\t\tif (tr[u].l >= l and tr[u].r <= r)\n\t\t{\n\t\t\ttr[u].add += x;\n\t\t\ttr[u].minn += x;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(u);\n\t\tint mid = tr[u].l + tr[u].r >> 1;\n\t\tif (l <= mid) update(u << 1, l, r, x);\n\t\tif (r > mid) update(u << 1 | 1, l, r, x);\n\t\tpushup(u);\n\t}\n\tint query(int u, int l, int r)\n\t{\n\t\tif (tr[u].l >= l and tr[u].r <= r)\n\t\t{\n\t\t\treturn tr[u].minn;\n\t\t}\n\t\tpushdown(u);\n\t\tint mid = tr[u].l + tr[u].r >> 1, res = (int)1e16;\n\t\tif (l <= mid) res = query(u << 1, l, r);\n\t\tif (r > mid) res = min(res, query(u << 1 | 1, l, r));\n\t\treturn res;\n\t}\n}f;\n\nsigned main()\n{\n\t// freopen(\"*.in\", \"r\", stdin);\n\t// freopen(\"*.out\", \"w\", stdout);\n\tscanf(\"%lld\", &t);\n\twhile (t--)\n\t{\n\t\tscanf(\"%lld%lld\", &n, &q);\n\t\tfor (int i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\n\t\tfor (int i = q; i >= 1; i--)\n\t\t{\n\t\t\tscanf(\"%lld%lld%lld\", &G[i].op, &G[i].l, &G[i].r);\n\t\t\tif (G[i].op == 1) scanf(\"%lld\", &G[i].x);\n\t\t}\n\t\tfor (int i = 1; i <= n; i++) scanf(\"%lld\", &b[i]);\n\t\tf.build(1, 1, n);\n\t\tvector<int> ans;\n\t\tfor (int i = 1; i <= q; i++)\n\t\t{\n\t\t\tif (G[i].op == 1) f.update(1, G[i].l, G[i].r, -G[i].x);\n\t\t\telse \n\t\t\t{\n\t\t\t\tans.push_back(f.query(1, G[i].l, G[i].r));\n\t\t\t}\n\t\t}\n\t\tfor (int i = ans.size() - 1; i >= 0; i--) printf(\"%lld \", ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1668922284,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P8862 \u300cKDOI-03\u300d\u8fd8\u539f\u6570\u636e"
    }
]