[
    {
        "content": "> \u4e00\u4e2a $n \\times m$ \u7684 $01$ \u77e9\u9635\uff0c\u5176\u4e2d $k$ \u4e2a\u4f4d\u7f6e\u7684\u503c\u7ed9\u5b9a\u3002\u8fd9\u4e2a\u77e9\u9635\u6ee1\u8db3\u6027\u8d28\uff1a\u5bf9\u4e8e\u6bcf\u4e2a $2 \\times 2$ \u7684\u5c0f\u5b50\u77e9\u9635\u4e2d $0$ \u4e0e $1$ \u7684\u4e2a\u6570\u76f8\u540c\u3002\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u77e9\u9635\u6570\u91cf\uff0c\u5bf9 $10 ^ 9 + 7$ \u53d6\u6a21\u3002\n> \n> $n, m \\le 10 ^ 9$\uff0c$k \\le 10 ^ 5$\u3002\n\n\u4e00\u4e2a\u663e\u7136\u7684\u4e8b\u5b9e\u662f\uff1a\u786e\u8ba4\u4e86\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\uff0c\u5c31\u80fd\u63a8\u5f97\u6240\u6709\u77e9\u9635\u3002\u8003\u8651\u5982\u4f55\u786e\u5b9a\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u3002\n\n\u7ed3\u8bba\uff1a\u4e00\u4e2a\u77e9\u9635\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u77e9\u9635\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u6ee1\u8db3\uff0c\u8981\u4e48\u7b2c\u4e00\u884c\u662f $010101\\ldots$ \u6216 $101010\\ldots$ \u8fd9\u6837 $01$ \u4ea4\u9519\u7684\uff1b\u8981\u4e48\u7b2c\u4e00\u5217\u662f\u8fd9\u6837 $01$ \u4ea4\u9519\u7684\u3002\n\n\u8bc1\u660e\u53ef\u4ee5\u753b\u56fe\uff0c\u8003\u8651\u4e00\u4e2a\u8fd9\u6837\u7684\u77e9\u9635\uff0c\u4f7f\u5f97\u5176\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u90fd\u4e0d\u662f $01$ \u76f8\u95f4\u7684\u3002\u90a3\u4e48\u53ef\u4ee5\u627e\u51fa\u4e00\u4e2a\u4f4d\u7f6e $i$\uff0c\u6ee1\u8db3\u7b2c $i$ \u884c\u7684\u7b2c\u4e00\u4e2a\u6570\u548c\u7b2c $i + 1$ \u884c\u7684\u7b2c\u4e00\u4e2a\u6570\u76f8\u540c\uff08\u5373\u7b2c\u4e00\u5217\u4e0a\u8fde\u7eed\u7684\u4e24\u4e2a\u76f8\u540c\u7684\u6570\uff09\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u90fd\u5047\u5b9a\u4e3a $1$\u3002\u6211\u4eec\u8003\u8651\u8fd9\u4e24\u884c\u7684\u60c5\u51b5\uff1a\n\n$$\n\\begin{matrix}\n1 \\quad 0 \\quad 1 \\quad \\cdots \\quad 0 \\quad 1 \\quad 1 \\quad 0 \\quad 1 \\quad \\cdots \\quad 1 \\quad 0 \\quad 0 \\quad 1 \\quad \\cdots \\\\\n1 \\quad 0 \\quad 1 \\quad \\cdots \\quad 0 \\quad {\\color{red} 1} \\quad 1 \\quad 0 \\quad 1 \\quad \\cdots \\quad 1 \\quad {\\color{blue} 0} \\quad 0 \\quad 1 \\quad \\cdots\n\\end{matrix}\n$$\n\n\uff08\u7531\u4e8e Latex \u6e32\u67d3\u95ee\u9898\uff0c\u8be5\u516c\u5f0f\u5efa\u8bae\u5728\u535a\u5ba2\u5185\u67e5\u770b\uff09\n\n\u6ce8\u610f\u5230\u7ea2\u8272 $1$ \u7684\u4f4d\u7f6e\uff0c\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e3a\u4e86\u6ee1\u8db3\u4ee5\u5b83\u4f5c\u4e3a\u53f3\u4e0b\u89d2\u7684\u77e9\u9635\u800c\u503c\u4e3a $1$\uff0c\u4f46\u8fd9\u5c31\u5bfc\u81f4\u4e86\u4ee5\u5b83\u4e3a\u5de6\u4e0b\u89d2\u7684\u77e9\u9635\u51fa\u73b0\u4e86\u4e09\u4e2a $1$\uff0c\u6210\u4e3a\u4e86\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u77e9\u9635\u3002\u8fd9\u6b63\u662f\u56e0\u4e3a\u884c\u4e0a\u4e5f\u6709\u76f8\u90bb\u7684\u4e24\u4e2a $1$\uff0c\u6709\u4e24\u4e2a\u76f8\u90bb\u7684 $0$ \u4e5f\u662f\u8fd9\u79cd\u60c5\u51b5\uff08\u84dd\u8272\u90e8\u5206\uff09\u3002\u8fd9\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u6545\u800c\u8fd9\u6837\u7684\u77e9\u9635\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u800c\u5982\u679c\u4e0d\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u5219\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u5408\u6cd5\u65b9\u6848\u3002\u6545\u800c\u7ed3\u8bba\u8bc1\u6bd5\u3002\n\n\u540c\u65f6\u8fd9\u4e2a\u7ed3\u8bba\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u4e9b\u4e1c\u897f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u7b2c\u4e00\u884c\u90fd\u662f $01$ \u76f8\u95f4\u7684\u77e9\u9635\uff0c\u5b83\u7684\u6bcf\u4e00\u884c\u90fd\u662f $01$ \u76f8\u95f4\u7684\uff1b\u5bf9\u4e8e\u4e00\u4e2a\u7b2c\u4e00\u5217\u90fd\u662f $01$ \u76f8\u95f4\u7684\u77e9\u9635\uff0c\u5b83\u7684\u6bcf\u4e00\u5217\u90fd\u662f $01$ \u76f8\u95f4\u7684\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u8ba1\u6570\u3002\u6839\u636e\u5bb9\u65a5\u539f\u7406\uff0c\u6211\u4eec\u7528 **\u884c\u90fd\u662f 01 \u76f8\u95f4\u7684\u77e9\u9635** $+$ **\u5217\u90fd\u662f 01 \u76f8\u95f4\u7684\u77e9\u9635** $-$ **\u884c\u5217\u90fd\u662f 01 \u76f8\u95f4\u7684\u77e9\u9635**\uff08\u5373\u7c7b\u4f3c\u68cb\u76d8\u7684\u9ed1\u767d\u67d3\u8272\u77e9\u9635\uff09\u3002\n\n\u884c\u90fd\u662f $01$ \u76f8\u95f4\u548c\u5217\u90fd\u662f $01$ \u76f8\u95f4\u505a\u6cd5\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u884c\u7684\u65b9\u5f0f\uff0c\u5217\u505a\u6cd5\u540c\u7406\u3002\n\n- \u5bf9\u4e8e\u884c\u4e0a\u6ca1\u6709\u5df2\u786e\u5b9a\u7684 $k$ \u4e2a\u4f4d\u7f6e\uff0c\u8fd9\u4e00\u884c\u7684\u60c5\u51b5\u53ef\u4ee5\u4efb\u53d6 $0101\\ldots$ \u6216 $1010\\ldots$ \u7684\u4e00\u79cd\uff0c\u4e58\u6cd5\u539f\u7406\u5bf9\u7b54\u6848\u4e58 $2$\u3002\n- \u5bf9\u4e8e\u884c\u4e0a\u5df2\u7ecf\u6709\u786e\u5b9a\u7684\u4f4d\u7f6e\u65f6\uff0c\u7528\u5947\u5076\u6027\u68c0\u6d4b\u5b83\u4eec\u80fd\u5426\u6784\u6210 $01$ \u76f8\u95f4\u7684\u4e00\u884c\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u5bf9\u7b54\u6848\u4e58 $1$\uff1b\u5982\u679c\u4e0d\u884c\uff0c\u7b54\u6848\u4e3a $0$\u3002\n\n\u884c\u5217\u90fd\u662f $01$ \u76f8\u95f4\u7684\u77e9\u9635\u76f4\u63a5\u68c0\u67e5\u662f\u5426\u80fd\u591f\u6784\u6210\u4e00\u4e2a\u68cb\u76d8\u72b6\u7684\u4e1c\u897f\uff0c\u540c\u6837\u5224\u4e00\u4e0b\u5947\u5076\u6027\u3002\u6ce8\u610f\u7279\u5224\u4e00\u4e0b $k = 0$ \u7684\u60c5\u51b5\u3002\n\n\u8fd9\u9898\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(k \\log k + \\log (n + m))$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\nconst int MaxN = 100000;\nconst int Mod = 1000000007;\n\ninline int add(int x, int y) { return (x += y) >= Mod ? x - Mod : x; }\ninline int sub(int x, int y) { return (x -= y) < 0 ? x + Mod : x; }\ninline int mul(int x, int y) { return 1LL * x * y % Mod; }\ninline int pw(int x, int y) { int z = 1; for (; y; y >>= 1, x = mul(x, x)) if (y & 1) z = mul(z, x); return z; }\ninline int inv(int x) { return pw(x, Mod - 2); }\ninline int sep(int x, int y) { return mul(x, inv(y)); }\ninline void inc(int &x, int y = 1) { x = add(x, y); }\ninline void dec(int &x, int y = 1) { x = sub(x, y); }\n\nstruct data_t {\n  int x, y, d;\n  data_t(int _x = 0, int _y = 0, int _d = 0) { x = _x, y = _y, d = _d; }\n};\n\nint W, H, N;\ndata_t A[MaxN + 5];\n\ninline int getSit() {\n  char c;\n  do c = getchar();\n  while (c != '+' && c != '-');\n  return (c == '+') ? 1 : 0;\n}\n\nvoid init() {\n  scanf(\"%d %d %d\", &W, &H, &N);\n  for (int i = 1; i <= N; ++i) {\n    A[i].d = getSit();\n    scanf(\"%d %d\", &A[i].x, &A[i].y);\n  }\n}\n\ninline bool cmpx(const data_t &a, const data_t &b) {\n  if (a.x != b.x) return a.x < b.x;\n  else return a.y < b.y;\n}\n\ninline bool cmpy(const data_t &a, const data_t &b) {\n  if (a.y != b.y) return a.y < b.y;\n  else return a.x < b.x;\n}\n\ninline int calc1() {\n  std::sort(A + 1, A + 1 + N, cmpx);\n  int res = 0, prex = 0;\n  for (int l = 1, r = 0; l <= N; l = r + 1) {\n    while (r < N && A[r + 1].x == A[l].x) r++;\n    for (int i = l; i <= r; ++i) {\n      int x1 = (A[i].y ^ A[l].y) & 1, x2 = (A[i].d ^ A[l].d);\n      if (x1 != x2) return 0; \n    }\n    res += A[l].x - prex - 1;\n    prex = A[l].x;\n  }\n  res += W - prex;\n  return pw(2, res);\n}\n\ninline int calc2() {\n  std::sort(A + 1, A + 1 + N, cmpy);\n  int res = 0, prey = 0;\n  for (int l = 1, r = 0; l <= N; l = r + 1) {\n    while (r < N && A[r + 1].y == A[l].y) r++;\n    for (int i = l; i <= r; ++i) {\n      int x1 = (A[i].x ^ A[l].x) & 1, x2 = (A[i].d ^ A[l].d);\n      if (x1 != x2) return 0; \n    }\n    res += A[l].y - prey - 1;\n    prey = A[l].y;\n  }\n  res += H - prey;\n  return pw(2, res);\n}\n\ninline int calc3() {\n  for (int i = 1; i <= N; ++i) {\n    int x1 = (A[1].x ^ A[1].y ^ A[i].x ^ A[i].y) & 1, x2 = (A[1].d ^ A[i].d);\n    if (x1 != x2) return 0;\n  }\n  return 1;\n}\n\nvoid solve() {\n  int ans = 0;\n  inc(ans, calc1());\n  inc(ans, calc2());\n  dec(ans, calc3());\n  if (N == 0) dec(ans);\n  printf(\"%d\\n\", ans);\n}\n\nint main() {\n  init();\n  solve();\n  return 0;\n}\n```",
        "postTime": 1590582157,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6576 \u3010[BOI 2017] Plus Minus\u3011"
    }
]