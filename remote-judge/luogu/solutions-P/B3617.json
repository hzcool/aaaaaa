[
    {
        "content": "\u6734\u7d20\u505a\u6cd5\u662f\u5199\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\uff0c\u5bf9\u6574\u4e2a\u6570\u505a\u8fdb\u5236\u8f6c\u6362\u3002\r\n\r\n\u6709\u66f4\u597d\u7684\u505a\u6cd5\u3002\u6ce8\u610f\u5230\u6bcf 4 \u4e2a\u516b\u8fdb\u5236\u7801\u5305\u542b 12 \u4e2a bit \u7684\u4fe1\u606f\uff0c\u5373\u5bf9\u5e94 3 \u4e2a\u5341\u516d\u8fdb\u5236\u7801\u3002\u6545\u5c06\u516b\u8fdb\u5236\u4e32\u6bcf 4 \u4e2a\u6570\u4f4d\u6253\u5305\uff0c\u8f6c\u6210\u5341\u516d\u8fdb\u5236\u3002\u590d\u6742\u5ea6 $\\mathcal{O}(|s|)$.\r\n\r\n\u4f8b\u5b50\uff1a`1572061125` \u6253\u5305\u4e3a `[15] [7206] [1125]`\uff0c\u8fd9\u4e09\u4e2a\u5305\u5728\u5341\u8fdb\u5236\u4e0b\u5206\u522b\u662f `13, 3718, 597`\u3002\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236\uff0c\u5373 `[d] [e86] [255]`\uff0c\u8f93\u51fa `de86255`\u3002\r\n\r\n\u6709\u51e0\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\r\n\r\n- \u4ece\u540e\u5f80\u524d\u6253\u5305\uff0c\u800c\u975e\u4ece\u524d\u5f80\u540e\u3002\u4ece\u6837\u4f8b\u4e2d\u53ef\u4ee5\u770b\u51fa\u8fd9\u4e00\u70b9\u3002\r\n- \u9664\u4e86\u7b2c\u4e00\u4e2a\u5305\u4e4b\u5916\uff0c\u8f93\u51fa\u5341\u516d\u8fdb\u5236\u65f6\uff0c\u9700\u8981\u8865\u4e0a\u524d\u5bfc 0\u3002\r\n\r\n\u53c2\u8003\u4ee3\u7801\uff1a\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nchar buffer[100005];\r\n\r\nint octToInt(int l, int r) {\r\n    int n = 0;\r\n    for(int i=l; i<r; i++)\r\n        n = n * 8 + buffer[i] - '0';\r\n    return n;\r\n}\r\n\r\nvoid work(int len) {\r\n    int low = max(0, len - 4);\r\n    int n = octToInt(low, len);\r\n    \r\n    if(low) {\r\n        work(low);\r\n        printf(\"%03x\", n);\r\n    } else {\r\n        printf(\"%x\", n);\r\n    }\r\n}\r\n\r\nint main() {\r\n    cin >> buffer;\r\n    work(strlen(buffer));\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n",
        "postTime": 1647177189,
        "uid": 15289,
        "name": "\u962e\u884c\u6b62",
        "ccfLevel": 0,
        "title": "\u300a\u53e4\u7c4d\u7ffb\u8bd1\u300b\u9898\u89e3"
    },
    {
        "content": "## B3617 \u53e4\u7c4d\u7ffb\u8bd1 \u984c\u89e3\n\n\u7b80\u5355\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\uff0c\u6c42\u5b83\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b**\u8fdb\u5236\u548c\u6743\u91cd**\uff1a\n\n### Part 1 \u8fdb\u5236\n\n\u6211\u4eec\u4eba\u7c7b\u73b0\u5728\u6700\u7ecf\u5e38\u7684\u4f7f\u7528\u5341\u8fdb\u5236\u3002\n\n\u5bf9\u4e8e $k$ \u8fdb\u5236\uff1a\n\n- \u5982\u679c $k \\leq 10$\uff0c\u91c7\u7528\u7684\u6570\u5b57\u4e3a 0 \u5230 $k-1$\u3002\n- \u5982\u679c $k > 10$\uff0c\u7528\u5b8c $0-9$ \u540e\uff0c\u5f00\u59cb\u7528 $A,B,C,D...$\u3002\n\n\u90a3\u4e48\uff0c\u9898\u76ee\u4e2d\u7684\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u7684\u5b9a\u4e49\u5c31\u5982\u4e0b\uff1a\n\n**\u9022 8 \u8fdb 1** \u7684\u6570\u5b57\u4e3a 8 \u8fdb\u5236\uff0c\u91c7\u7528 $0,1,2,3,4,5,6,7$ \u8fd9 8 \u4e2a\u6570\u5b57\u3002\n\n**\u9022 16 \u8fdb 1** \u7684\u6570\u5b57\u4e3a 16 \u8fdb\u5236\uff0c\u91c7\u7528 $0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f$ \u8fd9 16 \u4e2a\u7b26\u53f7\u3002\n\n### Part 2 \u6743\u91cd\n\n\u5728\u5341\u8fdb\u5236\u4e2d\uff1a\n\n\u4e2a\u4f4d\u6743\u91cd\u662f 1\uff0c\u5341\u4f4d\u6743\u91cd\u662f 10\uff0c\u767e\u4f4d\u6743\u91cd\u662f 100...\n\n$$ (678)_{10} = 6 \\times 100 + 7 \\times 10 + 8 \\times 1 $$\n\n\u90a3\u4e48\u5982\u4f55\u7b97\u51fa $k$ \u8fdb\u5236\u6570\u5b57\u7684 10 \u8fdb\u5236\u6570\u5b57\uff1f\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u6743\u91cd\u7b97\u51fa\uff1a\n\n$$ (12341)_5 = 1 \\times 5^4 + 2 \\times 5^3 + 3 \\times 5^2 + 4 \\times 5 + 1 = 971 = (971)_{10} $$\n\n\u770b\u51fa\u4e86\u4ec0\u4e48\u89c4\u5f8b\u4e86\u5417\uff1f\n\n***\n\n\u4ecb\u7ecd\u5b8c\u4e86\u8fdb\u5236\u548c\u6743\u91cd\u540e\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u89e3\u9898\u3002\n***\n\n### 0x00 \u65b9\u6cd51 (cin/cout)\n\n12 \u5206\u505a\u6cd5\uff1a\n\n```cpp\ncin>>oct>>a;\ncout<<hex<<a<<endl; \n```\n\nC++ \u63d0\u4f9b\u4e86\u8fd9\u79cd\u4fbf\u6377\u7684\u8fdb\u5236\u8f6c\u6362\u529f\u80fd\uff0c\u4f46\u5f88\u53ef\u60dc\uff0c\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u4e0d\u652f\u6301\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002\n\n\n***\n### 0x02 \u65b9\u6cd52 (long long)\n\n\u5982\u4f55\u5b9e\u5728\u60f3\u4e0d\u51fa\u6b63\u786e\u7684\u89e3\u6cd5\uff0c\u7136\u540e\u60f3\u4e0d\u51fa 0x03 \u7684\u9ad8\u7cbe\u5ea6\u89e3\u6cd5\uff0c\u53ef\u4ee5\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\uff08\u4f7f\u7528 `long long`\uff09\uff0c\u53ef\u4ee5\u5f97\u5230 $40\\%$ \u7684\u5206\u6570\u3002\n\n\n### 0x03 \u65b9\u6cd53 (\u9ad8\u7cbe\u5ea6)\n\n\u5c06 8 \u8fdb\u5236\u8f6c\u6362\u6210 10 \u8fdb\u5236\uff0c\u7136\u540e\u8f6c\u4e3a 16 \u8fdb\u5236\u3002\n\n\u7531\u4e8e\u6570\u5b57\u5f88\u5927\uff0c\u9700\u8981\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\uff0c\u6bd4\u8f83\u7e41\u7410\u3002\n\n### 0x04 \u65b9\u6cd54 (8-2-16\uff09\n\n\u8fd9\u91cc\u662f\u5bf9\u962e\u884c\u6b62\u8001\u5e08\u89e3\u6cd5\u7684\u8be6\u7ec6\u8865\u5145\u3002\n\n1 \u4e2a 8 \u8fdb\u5236\u6570\u5b57\u53ef\u4ee5\u53d8\u6210 3 \u4f4d 2 \u8fdb\u5236\u6570\u3002\n\n|0|1|2|3|4|5|6|7|\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n|000|001|010|011|100|101|110|111|\n\n1 \u4e2a 16 \u8fdb\u5236\u6570\u53ef\u4ee5\u53d8\u6210 4 \u4f4d 2 \u8fdb\u5236\u6570\u3002\n\n| 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| 0000 | 0001 | 0010 | 0011 | 0100 | 0101 | 0110 | 0111 |\n| 8 | 9 | A | B | C | D | E | F |\n| 1000 | 1001 | 1010 | 1011 | 1100 | 1101 | 1110 | 1111 | B & C & D & E & F \n\n\u4ece\u800c 4 \u4f4d 8\u8fdb\u5236\u6570\u53ef\u4ee5\u8f6c\u4e3a 12 \u4f4d 2 \u8fdb\u5236\u6570\uff0c\u4ece\u800c\u8f6c\u6210 3 \u4f4d 16 \u8fdb\u5236\u6570\u3002\n\n\n$$\n1125 \\rightarrow 001001010101 \\rightarrow 001001010101 \\rightarrow 255\n$$\n\n\u6240\u4ee5\u4ece\u53f3\u8fb9\u53d6\u51fa 4 \u4f4d 8 \u8fdb\u5236\u6570\uff0c\u5c31\u53ef\u4ee5\u53d8\u6210 2 \u4f4d 16 \u8fdb\u5236\u6570\u3002\n\n\u53ef\u4ee5\u7528 2 \u8fdb\u5236\u4f5c\u4e3a\u8df3\u677f\uff0c\u4e5f\u53ef\u4ee5\u7528 10 \u8fdb\u5236\u4f5c\u4e3a\u8df3\u677f\u3002\n\n\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4f7f\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u4f9d\u6b21 4 \u4f4d 4 \u4f4d\u5904\u7406\u3002\n\n```\n15 0126 1125\nD   056  255\n```\n\n\u6ce8\u610f\u8f6c\u6210 3 \u4f4d 16 \u8fdb\u5236\u6570\u5b57\uff0c\u5982\u679c\u4e0d\u662f\u5728\u5f00\u5934\uff0c\u8981\u8865 0 \u81f3 3 \u4f4d\uff1a\n\n|$i$|0|1|2|3|4|5|6|7|8|9|10|\n| -----------: | -----------: | -----------: | -----------: | -----------: | -----------: | -----------: | -----------: | -----------: | -----------: | -----------: | -----------: |\n|$S_i$|1|5|0|1|2|6|1|1|2|5|  |\n|  |  |  |$low<0$|$low$|-|-|-|$low$|-|-|$len$|\n\n\n\u8fd9\u91cc\u5bf9\u962e\u884c\u6b62\u8001\u5e08\u7684\u4ee3\u7801\u8fdb\u884c\u4e86\u6269\u5145\uff0c\u66f4\u7b80\u5355\u6613\u61c2\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define fore(i,x,n) for(int i=x;i<=n;i++)\nconst int MAXX=10005;\nconst int mod=1;\nchar b[MAXX];\ninline int octtoint(int l,int r){\n\tint n=0;\n\tfore(i,l,r-1)\n\t\tn=n*8+b[i]-'0';\n\treturn n;\n}\ninline char inttochar(int n){\n\tif(n<10) return '0'+n;\n\treturn 'a'+n-10;\n}\ninline int inttohex(int n,int low){\n\tint a[5]={0},t=0;\n\twhile(n){\n\t\ta[t]=n%16;\n\t\tn/=16;\n\t\tt++;\n\t}\n\tfor(int i=low!=0?3-1:t-1;i>=0;i--)\n\t\twrite(inttochar(a[i]));\n}\ninline work(int len){\n\tin low=max(0,len-4);\n\tint n=octtoint(low,len);\n\tif(low){\n\t\twork(low);\n\t\tinttohex(n,low);\n\t}\n\telse{\n\t\tinttohex(n,low);\n\t}\n}\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\ninline void write(int x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nsigned main(){\n\tcin>>b;\n\twork(strlen(b));\n}\n```\n\n### 0x05 \u5176\u4ed6\u4e1c\u897f\n\n\u5c06\u4e00\u4e2a `int` \u7c7b\u578b\u6570\u5b57\u4ee5 16 \u8fdb\u5236\u8f93\u51fa\u53ef\u4ee5\u8fd9\u6837\uff1a\n\n```cpp\nprintf(\"%x\",n);\n```\n\n\u5982\u679c\u4e0d\u591f\uff0c\u8981\u8865\u524d\u5bfc 0\uff0c\u53ef\u4ee5\u8fd9\u6837\uff1a\n\n```cpp\nprintf(\"%03x\",n);\n```\n\n\n\n\n",
        "postTime": 1647688669,
        "uid": 408019,
        "name": "Shan_Creeper",
        "ccfLevel": 0,
        "title": "B3617 \u53e4\u7c4d\u7ffb\u8bd1 \u984c\u89e3"
    },
    {
        "content": "\u5410\u69fd\u4e00\u53e5\uff0c\u4e00\u5f00\u59cb $|s| \\leq 100000$ \u7684\uff0c\u9ad8\u7cbe\u90fd\u7206\u4e86\uff0c\u4e0d\u8fc7\u73b0\u5728\u6570\u636e\u6539\u4e86\u3002\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u9ad8\u7cbe\u52a0\u8fdb\u5236\u8f6c\u6362\u3002\n\n\u9ad8\u7cbe\u8fd9\u91cc\u91c7\u53d6\u91cd\u8f7d\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u8fd9\u91cc\u9644\u4e0a\u91cd\u8f7d\u7684[\u94fe\u63a5](https://oi-wiki.org/lang/op-overload/)\u3002\n\n\u8fdb\u5236\u8f6c\u6362\u53c2\u8003[\u8fd9\u91cc](https://oi-wiki.org/math/base/),\u5982\uff1a\n\n$(1234)_{8} = 1 \\times 5^3 + 2 \\times 5^2 + 3 \\times 5^1 + 4 \\times 5^0 + 1 = 668 = (668)_{10}$\n\n\u8f6c\u5341\u516d\u8fdb\u5236\u5c31\u662f\u628a\u5341\u8fdb\u5236\u4e0d\u65ad\u9664\u4ee5 $16$\uff0c\u53d6\u51fa\u4f59\u6570\uff0c\u5012\u5e8f\u8f93\u51fa\u3002\n\n**code**\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#define nc() (p1==p2 && (p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++)\nusing namespace std;\nint key[100005];\nchar *p1,*p2,buf[100000];\nint read(){\n    int x=0,f=1;\n    char ch=nc();\n    while(ch<48||ch>57){\n        if(ch=='-')\n            f=-1;\n        ch=nc();\n    }\n    while(ch>=48&&ch<=57){\n        x=x*10+ch-48,ch=nc();\n    }\n    return x*f;\n}\nstruct Bigint {\n    int len,a[200005];//len\u8bb0\u5f55\u6570\u4f4d\n    int &operator[](int i) {//\u91cd\u8f7d[]\uff0c\u628a(\u53d8\u91cf\u540d).a[i]\u66ff\u6362\u6210a[i]\n        return a[i];\n    }\n    Bigint(string s=\"\") {//\u7528\u5b57\u7b26\u4e32\u8d4b\u503c\n        memset(a,0,sizeof(a));\n        len=1;\n        for(int i=0; i<s.size(); i++,len++) {\n            a[len]=s[i]-48;\n        }\n        len--;\n        reverse(a+1,a+len+1);\n    }\n    void flatten(int L) {//\u5c55\u5e73\uff0c\u76f8\u5f53\u4e8e\u8fdb\u4f4d\n        len=L;\n        for(int i=1; i<=len; i++) {\n            a[i+1]+=a[i]/10,a[i]%=10;\n        }\n        for(; !a[len];) {\n            len--;\n        }\n    }\n    bool judge() {//\u5224\u65ad\u5927\u6574\u6570\u662f\u5426\u4e3a0\n        if(a[max(len,1)]==0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    void print() {//\u8f93\u51fa\uff0c\u4e0d\u8fc7\u8fd9\u4efd\u4ee3\u7801\u4e2d\u6ca1\u4ec0\u4e48\u7528\n        for(int i=max(len,1); i>=1; i--) {\n            cout<<a[i];\n        }\n    }\n};\nBigint operator+(Bigint a,Bigint b) {//\u91cd\u8f7d\u52a0\u53f7\n    Bigint c;\n    int len=max(a.len,b.len);\n    for(int i=1; i<=len; i++) {\n        c[i]=a[i]+b[i];\n    }\n    c.flatten(len+1);\n    return c;\n}\nBigint operator/(Bigint a,int b) {//\u91cd\u8f7d\u9664\u53f7\n    Bigint c;\n    int len=a.len;\n    int x=0;\n    for(int i=len; i>=1; i--) {\n        c[i]=(x*10+a[i])/b;\n        x=(x*10+a[i])%b;\n    }\n    c.flatten(len+10);\n    return c;\n}\nint operator%(Bigint a,int b) {//\u91cd\u8f7d\u819c\n    Bigint c;\n    int len=a.len;\n    int x=0;\n    for(int i=len; i>=1; i--) {\n        c[i]=(x*10+a[i])/b;\n        x=(x*10+a[i])%b;\n    }\n    c.flatten(len+10);\n    return x;\n}\nBigint operator*(Bigint a,int b) {//\u91cd\u8f7d\u4e58\u53f7\n    Bigint c;\n    int len=a.len;\n    for(int i=1; i<=len; i++) {\n        c[i]=a[i]*b;\n    }\n    c.flatten(len+11);\n    return c;\n}\nchar handle(int x) {\n    if(x>=0 && x<=9) return (x+48);\n    else return (x+96-9);\n}\nint main() {\n    string s;\n    cin>>s;\n    Bigint ans(\"0\"),a(s);//\u5b57\u7b26\u4e32\u8d4b\u503c\n    int k=8;\n    Bigint x(\"1\");\n    for(int i=1; i<=a.len; i++) {//\u8f6c\u5341\u8fdb\u5236\n        Bigint c=x*a[i];\n        ans=ans+c;\n        x=x*k;\n    }\n    int i=0;\n    while(ans.judge()) {//\u8f6c16\u8fdb\u5236\n        key[i++]=ans%16;\n        ans=ans/16;\n    }\n    for(int j=i-1; j>=0; j--) {//\u5012\u5e8f\u8f93\u51fa\n        cout<<handle(key[j]);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1649059456,
        "uid": 345883,
        "name": "Node_Edge",
        "ccfLevel": 0,
        "title": "B3617"
    },
    {
        "content": "[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/B3617) [\u91c7\u7528\u535a\u5ba2\u98df\u7528\u66f4\u4f73](https://keaidexiaoyu.blog.luogu.org/solution-b3617)\n\n**\u9898\u76ee\u5927\u610f\uff1a** \u7ed9\u5b9a\u4e00\u4e2a\u516b\u8fdb\u5236\u4e32\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u4e32\u3002\n\n\u96be\u5ea6\u8bc4\u7ea7\uff1a\u6a59\n\n\u6807\u7b7e\uff1a\u8fdb\u5236\u8f6c\u5316\n\n**\u89e3\u9898\u65b9\u6cd5\u4e00\uff1a**\n\n\u5c06\u516b\u8fdb\u5236\u4e32\u8f6c\u5316\u4e3a\u5341\u8fdb\u5236\u4e32\uff0c\u518d\u5c06\u5341\u8fdb\u5236\u4e32\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u4e32\u3002\n\n\u628a\u516b\u8fdb\u5236\u6570\u6309\u6743\u5c55\u5f00\uff0c\u76f8\u52a0\u5373\u53ef\u5f97\u5341\u8fdb\u5236\u6570\uff0c\u4e5f\u5c31\u662f\u8ba9\u516b\u8fdb\u5236\u5404\u4f4d\u4e0a\u7684\u7cfb\u6570\u4e58\u4ee5\u5bf9\u5e94\u7684\u6743\uff0c\u7136\u540e\u6c42\u5176\u548c\u3002\n\n\u4f8b\u5982\uff1a\n\n\u516b\u8fdb\u5236\u6570 $18$ \u8f6c\u5316\u4e3a \u5341\u8fdb\u5236\u6570\uff1a\n\n$(18)_8 = 8 \\times 8^0 + 1 \\times 8^1 = (16)_{10}$\n\n\u518d\u5c06\u5341\u8fdb\u5236\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\uff1a\n\n\u5341\u8fdb\u5236\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u8ba1\u7b97\u65b9\u5f0f\uff0c\u7b80\u5355\u8bf4\u5c31\u662f\u6574\u6570\u9664\u4ee516\u53d6\u4f59\uff0c\u76f4\u5230\u5546\u4e3a0\u4e3a\u6b62\uff0c\u7136\u540e\u53cd\u5411\u8f93\u51fa\u3002\n\n\u4ee3\u7801\u81ea\u5df1\u601d\u8003\u3002\n\n**\u89e3\u9898\u65b9\u6cd5\u4e8c\uff1a**\n\n\u5c06\u516b\u8fdb\u5236\u4e32\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u4e32\uff0c\u518d\u5c06\u4e8c\u8fdb\u5236\u4e32\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u4e32\u3002\n\n\u5c06\u516b\u8fdb\u5236\u4e32\u6bcf\u4e00\u4e2a\u4f4d\u8f6c\u5316\u4e3a $3$ \u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u518d\u5c06\u4e8c\u8fdb\u5236\u4e32\u6bcf $4$ \u4f4d\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\uff08\u6ce8\u610f\u4f4d\u6570\u4e0d\u8db3\u65f6\u8865 $0$\uff09\u3002\n\n\u8f93\u51fa\u65f6\u8981\u52a0\u4e0a\u7279\u5224\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3e5+5;\nstring s;\nchar sr[20]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};\nint a[maxn],t=0;\nint main()\n{\n    cin >> s;\n    if(s==\"0\"){\n        cout << 0 << endl;\n        return 0;\n    }\n    for(int i=s.size()-1;i>=0;i--,t+=3)\n        if(s[i]=='0')a[t]=0,a[t+1]=0,a[t+2]=0;\n        else if(s[i]=='1')a[t]=1,a[t+1]=0,a[t+2]=0;\n        else if(s[i]=='2')a[t]=0,a[t+1]=1,a[t+2]=0;\n        else if(s[i]=='3')a[t]=1,a[t+1]=1,a[t+2]=0;\n        else if(s[i]=='4')a[t]=0,a[t+1]=0,a[t+2]=1;\n        else if(s[i]=='5')a[t]=1,a[t+1]=0,a[t+2]=1;\n        else if(s[i]=='6')a[t]=0,a[t+1]=1,a[t+2]=1;\n        else a[t]=1,a[t+1]=1,a[t+2]=1;\n    if(t%4==0)a[t+3]=0,a[t+1]=0,a[t+2]=0,t+=3;\n    else if(t%4==1)a[t+2]=0,a[t+1]=0,t+=2;\n    else if(t%4==2)a[t+1]=0,t++;\n    for(int i=t;i>=0;i-=4){\n        int sum=a[i]*8+a[i-1]*4+a[i-2]*2+a[i-3]*1;\n        if(i!=t||sum!=0)cout<<sr[sum];\n    }\n    return 0;\n} \n```\n\n\n",
        "postTime": 1647390337,
        "uid": 517574,
        "name": "\u53ef\u7231\u7684\u5c0f\u4e8e",
        "ccfLevel": 4,
        "title": "\u53e4\u7c4d\u7ffb\u8bd1"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u628a\u4e00\u4e2a\u5927\u516b\u8fdb\u5236\u6574\u6570\u7ffb\u8bd1\u6210\u5341\u516d\u8fdb\u5236\u6574\u6570\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u4e00\u5207\u9ad8\u7cbe\u5ea6\u9898\u90fd\u53ef\u4ee5\u7528 Python \u505a\u3002\n\n\u76f4\u63a5\u7528 Python \u7684\u8f6c\u6362\u5373\u53ef\u3002\n\n\u4e0b\u9762\u4ee3\u7801\u4f7f\u7528\u4e86\u5982\u4e0b\u51fd\u6570\uff1a\n\n1. `print()` \uff1a Python \u8f93\u51fa\u51fd\u6570\uff0c\u4e0d\u89e3\u91ca\u3002\n\n2. `hex(int)->string` \uff1a \u5c06\u5341\u8fdb\u5236\u6574\u6570\u8f6c\u6362\u4e3a\u5e26\u6709 `0x` \u6807\u8bb0\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u3002\n\n3. `int(string,x:int)->int` \uff1a \u5c06\u4e00\u4e2a $x$ \u8fdb\u5236\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a $10$ \u8fdb\u5236\u7684\u6574\u6570\u3002\n\n4. `input()` \uff1a Python \u8f93\u5165\u51fd\u6570\uff0c\u4e0d\u89e3\u91ca\u3002\n\n5. `string.replace(old:string,new:string)->string` \uff1a \u5c06\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709 $old$ \u66ff\u6362\u4e3a $new$\u3002\n\n### \u4ee3\u7801\n\n```python\nprint(hex(int(input(),8)).replace(\"0x\",\"\"))\n```",
        "postTime": 1647758752,
        "uid": 321566,
        "name": "Suruka",
        "ccfLevel": 0,
        "title": "\u3010B3617\u3011\u53e4\u7c4d\u7ffb\u8bd1 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/B3617)\n\n\u6ce8\uff1a\u672c\u9898\u89e3\u662f\u4e00\u7bc7 python \u9898\u89e3\u3002\n\n\u6b64\u9898\u7684\u610f\u601d\u5f88\u7b80\u5355\uff1a\u7ed9\u51fa\u4e00\u4e2a 8 \u8fdb\u5236\u6570\uff0c\u8f93\u51fa\u5b83\u7684 16 \u8fdb\u5236\u5f62\u5f0f\u3002\u4f46\u662f\u6b64\u9898\u7684\u6570\u636e\u6781\u5927\uff0c\u82e5\u662f\u7528\u9ad8\u7cbe\u5ea6\u4ee3\u7801\u4f1a\u975e\u5e38\u590d\u6742\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u81ea\u5e26\u9ad8\u7cbe\u5ea6\u548c\u8fdb\u5236\u8f6c\u6362\u7684 python\uff01\n\n\u6211\u4eec\u9700\u8981\u4e86\u89e3 python \u4e2d\u5c06\u8fdb\u5236\u8f6c\u6362\u4e3a 16 \u8fdb\u5236\u7684\u51fd\u6570\uff1a\n\n```python\nhex(int(a,d))//a\u662f\u6570\u5b57\uff0cd\u662f\u539f\u6765\u6570\u5b57\u8fdb\u5236\n```\n\u6309\u7406\u6765\u8bf4\uff0c\u8fd9\u9053\u9898\u505a\u5230\u8fd9\u5df2\u7ecf\u5b8c\u4e8b\u4e86\uff0c\u4f46\u662f\uff0c\u8fd8\u6709\u4e24\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\n\n\u9996\u5148\u662f\u8f93\u5165\u65f6\u4e0d\u80fd\u7528 int(input())\uff0c\u5f97\u7528 input()\uff1b\u5176\u6b21\u662f hex \u51fd\u6570\u9ed8\u8ba4\u4f1a\u52a0\u4e0a\u524d\u7f00 0x\uff0c\u9700\u8981\u5728\u540e\u9762\u52a0\u4e0a [2:] \u6765\u5220\u9664\u524d\u4e24\u4f4d\u3002\n\n### \u4ee3\u7801\uff08\u5e94\u8be5\u662f\u6240\u6709\u9898\u89e3\u4e2d\u6700\u77ed\u7684\u4e86\uff09\uff1a\n\n```python\nq=input()//\u8f93\u51658\u8fdb\u5236\u7684q\nprint(hex(int(q,8))[2:])//\u8f93\u51fa16\u8fdb\u5236\u7684q\n```\n",
        "postTime": 1647405281,
        "uid": 451825,
        "name": "JDuru",
        "ccfLevel": 0,
        "title": "B3617 \u9898\u89e3"
    },
    {
        "content": "\u53d1\u4e00\u7bc7\u4f7f\u7528 Java \u9ad8\u7cbe\u5ea6\u6574\u6570\u7c7b `java.math.BigInteger` \u7684\u505a\u6cd5\u5427\u3002\n\n\u505a\u8fd9\u9898\u9700\u8981 `java.math.BigInteger` \u4ee5\u4e0b\u51fd\u6570\uff1a\n\n- \u6784\u9020\u5668\u51fd\u6570 `BigInteger(String val, int radix)` \uff1a\u5728 `radix` \u8fdb\u5236\u4e0b\u628a\u5b57\u7b26\u4e32 `val` \u8f6c\u6362\u6210\u9ad8\u7cbe\u5ea6\u6574\u6570\u3002\n\n- toString \u65b9\u6cd5 `toString(int radix)` \uff1a\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u8be5\u9ad8\u7cbe\u5ea6\u6574\u6570\u5728 `radix` \u8fdb\u5236\u4e0b\u7684\u8868\u793a\u3002\n\n\u7136\u540e\u4e3a\u4e86\u8bfb\u5165\u5b57\u7b26\u4e32\uff0c\u8fd8\u9700\u8981 `java.util.Scanner` \u7c7b\u7684\u8fd9\u4e9b\u51fd\u6570\uff1a\n\n- \u6784\u9020\u5668\u51fd\u6570 `Scanner(InputStream source)` \uff1a\u8fd9\u4e2a\u53ef\u4ee5\u4e0d\u7528\u4e86\u89e3\uff0c\u56e0\u4e3a\u57fa\u672c\u90fd\u662f\u7528 `Scanner(System.in)` \u6765\u521d\u59cb\u5316\u7684\uff08\n\n- next \u65b9\u6cd5 `next()` \uff1a\u8bfb\u5165\u4e00\u4e2a\u5355\u8bcd\u3002\n\n\u5269\u4e0b\u7684\u770b\u4ee3\u7801\u5e94\u8be5\u5c31\u61c2\u4e86\u3002\n\n```java\n//\u5bfc\u5165\nimport java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner scan = new Scanner(System.in);\t//\u521d\u59cb\u5316\n\t\tString s = scan.next();\t\t\t\t\t//\u8bfb\u5165\u5b57\u7b26\u4e32\n\t\tBigInteger bi = new BigInteger(s, 8);\t//\u5728\u516b\u8fdb\u5236\u4e0b\u5c06\u5b57\u7b26\u4e32 s \u8f6c\u6362\u6210\u9ad8\u7cbe\u5ea6\u6574\u6570\u5e76\u8d4b\u7ed9 bi\n\t\tSystem.out.print(bi.toString(16));\t\t//\u8f93\u51fa bi \u5728\u5341\u516d\u8fdb\u5236\u4e0b\u7684\u8868\u793a\n\t}\n}\n```\n\n\u6700\u540e\uff0c\u5173\u4e8e `java.math.BigInteger` \u7684\u5176\u5b83\u4fe1\u606f\uff0c\u53ef\u67e5\u9605 https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html \u3002\n\n\u4ee5\u4e0a\u3002",
        "postTime": 1648431394,
        "uid": 76508,
        "name": "Untitled_unrevised",
        "ccfLevel": 0,
        "title": "B3617 \u9898\u89e3 / java.math.BigInteger \u7c7b\u7684\u4e00\u4e2a\u5e94\u7528"
    }
]