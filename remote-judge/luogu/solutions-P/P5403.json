[
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u5e73\u9762\u4e0a\u4e00\u5806\u7ebf\u6bb5\uff0c\u6c42\u4e00\u4e9b\u51f8\u5305\u5b8c\u6574\u8986\u76d6\u8fd9\u4e9b\u7ebf\u6bb5\uff0c\u6c42\u51f8\u5305\u5468\u957f\u548c\u7684\u6700\u5c0f\u503c\u3002\n\n~~\u4e00\u9053\u7edd\u597d\u7684\u4e71\u641e\u9898\u3002~~\n\n\u573a\u4e0a\u5bf9\u7740\u8fd9\u4e2a\u9898\u4e00\u8138\u61f5\u903c\uff0c\u6253\u4e8640\u5206\u4e4b\u540e\u89c9\u5f97\u4e0d\u80fd\u5c31\u8fd9\u4e48\u5f03\u7597\uff0c\u5c31\u6253\u4e86\u4e24\u4e2a\u8d2a\u5fc3\u62fc\u5728\u4e00\u8d77\uff0c\u5f53\u65f6\u60f3\u80fd\u591a\u62ff10\u5206\u5c31\u7b97\u649e\u5927\u8fd0\u4e86\uff0c\u51fa\u6765\u7ed3\u679c\u4e00\u770b65\u771f\u662f\u6fc0\u52a8\u5f97\u4e0d\u884c\u3002\n\n\u540e\u6765\u624d\u77e5\u9053\u6211\u7684\u4e71\u641e\u8fd8\u4e0d\u7b97\u5389\u5bb3\uff0c\u6709\u4f4d\u5927\u795e\u76f4\u63a5\u968f\u673a\u5316+\u8d2a\u5fc3\u62ff\u5230\u4e8695\u5206\u2026\u2026\u5728\u6b64\u6df1\u53d7\u6211\u4e00\u62dc\u3002\n\n\u95f2\u8bdd\u5c11\u8bf4\u8fdb\u5165\u6b63\u9898\u3002\n\n\u4e00\u5f00\u59cb\u6211\u4eec\u6709n\u4e2a\u51f8\u5305\uff0c\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u6070\u5f53\u5730\u5408\u5e76\u51f8\u5305\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u67d0\u6b21\u5408\u5e76\u7684\u4ef7\u503c\u4e3a\uff1a\u65b0\u51f8\u5305\u7684\u5468\u957f-\u539f\u51f8\u5305\u7684\u5468\u957f\u548c\u3002\u663e\u7136\u8fd9\u4e2a\u503c\u8d8a\u5c0f\u8d8a\u4f18\u3002\n\n\u81ea\u7136\u5730\u4ea7\u751f\u51e0\u4e2a\u95ee\u9898\uff1a\n\n1\u3001\u5982\u679c\u67d0\u6b21\u5408\u5e76\u7684\u4ef7\u503c\u662f\u8d1f\u6570\uff0c\u90a3\u8fd9\u6b21\u5408\u5e76\u662f\u5426\u4e00\u5b9a\u8981\u8fdb\u884c\uff1f\n\n2\u3001\u5982\u679c\u67d0\u6b21\u5408\u5e76\u7684\u4ef7\u503c\u662f\u6b63\u6570\uff0c\u90a3\u8fd9\u6b21\u5408\u5e76\u662f\u5426\u4e00\u5b9a\u4e0d\u8fdb\u884c\uff1f\n\n\u4e00\u6b21\u5408\u5e76\u591a\u4e2a\u51f8\u5305\u8fc7\u4e8e\u590d\u6742\uff0c\u6211\u4eec\u5148\u4ece2\u4e2a\u5f00\u59cb\u7814\u7a76\u3002\n\n\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u8d2a\u5fc3\u7b56\u7565\uff1a\u6bcf\u6b21\u9009\u62e92\u4e2a\u51f8\u5305\uff0c\u5982\u679c\u5408\u5e76\u7684\u4ef7\u503c\u4e3a\u8d1f\u5c31\u5408\u5e76\uff0c\u76f4\u5230\u4e0d\u5b58\u5728\u5408\u5e76\u7684\u4ef7\u503c\u4e3a\u8d1f\u4e3a\u6b62\u3002\n\n\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u7684\u6bcf\u6b21\u5408\u5e76\u662f\u5426\u4e00\u5b9a\u6700\u4f18\uff1f\n\n\u53ef\u4ee5\u8bc1\u660e\u662f\u8fd9\u6837\u7684\u3002\u4e0d\u8fc7\u7531\u4e8e\u8f83\uff08wo\uff09\u4e3a\uff08bu\uff09\u7e41\uff08hui\uff09\u7410\uff08zheng\uff09\uff0c\u5728\u6b64\u7565\u53bb\u8bc1\u660e\u3002\n\n\u4f46\u662f\u8fd9\u6837\u8dd1\u51fa\u7684\u7b54\u6848\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u5417\uff1f\u6211\u4eec\u53d1\u73b0\u8fc7\u4e0d\u4e86\u6700\u540e\u4e00\u4e2a\u6837\u4f8b\u3002\n\n\u6211\u4eec\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u53ef\u80fd\u51fa\u73b0\u5355\u72ec\u5408\u5e76\u4efb\u610f\u4e24\u4e2a\u51f8\u5305\u7684\u4ef7\u503c\u90fd\u4e3a\u6b63\uff0c\u4f46\u662f\u4e00\u6b21\u6027\u5408\u5e76\u82e5\u5e72\u96c6\u5408\u7684\u4ef7\u503c\u4e3a\u8d1f\u7684\u60c5\u51b5\uff01\n\n\u6b64\u65f6\u6709\u4e00\u79cd\u7384\u5b66\u4e71\u641e\uff1a\u6bcf\u6b21\u968f\u673a\u4e24\u4e2a\u51f8\u5305\u5408\u5e76\uff08\u5373\u4f7f\u4ef7\u503c\u4e3a\u6b63\uff09\uff0c\u5e76\u7528\u65b0\u96c6\u5408\u518d\u8fdb\u884c\u8d2a\u5fc3\u5408\u5e76\uff0c\u5230\u4e0d\u80fd\u8d2a\u5fc3\u5408\u5e76\u65f6\u7ee7\u7eed\u968f\u673a\uff0c\u5e76\u5728\u8fc7\u7a0b\u4e2d\u968f\u65f6\u66f4\u65b0\u6700\u4f18\u7b54\u6848\u3002\n\n\u591a\u968f\u673a\u51e0\u6b21\uff0c\u606d\u559c\u4f60\u83b7\u5f97\u4e8695\u5206\u7684\u597d\u6210\u7ee9\uff01\n\n\u5176\u5b9e\u8fd9\u4e3b\u8981\u662f\u56e0\u4e3a\u5f3a\u6570\u636e\u5f88\u96be\u9020\u3002\u5728\u7edd\u5927\u591a\u6570\u6d4b\u8bd5\u70b9\u4e2d\uff0c\u4e0d\u4f18\u7684\u5408\u5e76\u90fd\u53ea\u9700\u8981\u8fdb\u884c1~2\u6b21\uff0c\u591a\u6b21\u968f\u673a\u5f88\u5bb9\u6613\u5c31\u80fd\u968f\u673a\u51fa\u6765\u3002\u7136\u800c\u552f\u4e00\u6ca1\u8fc7\u7684\u70b9\u9700\u8981\u7684\u4e0d\u4f18\u5408\u5e76\u5f88\u591a\uff0c\u6211\u7528\u6211\u7684\u968f\u673a\u7a0b\u5e8f\u9700\u8981\u8dd1\u597d\u51e0\u5206\u949f\u624d\u80fd\u968f\u5230\u6700\u4f18\u89e3\u3002\n\n\u6240\u4ee5\u6709\u4ec0\u4e48\u9760\u8c31\u505a\u6cd5\u5417\uff1f\n\n\u540c\u6837\u4e0d\u52a0\u8bc1\u660e\uff08\u8fd8\u662f\u56e0\u4e3a\u6211\u4e0d\u4f1a\u8bc1\uff09\u5730\u7ed9\u51fa\u4e00\u4e2a\u5f15\u7406\uff1a\u5982\u679c\u67d0\u6b21\u5408\u5e76\u7684\u4ef7\u503c\u4e3a\u8d1f\uff0c\u800c\u4ece\u4e2d\u9009\u51fa\u4efb\u4f55\u4e00\u4e2a\u5b50\u96c6\u6765\u5355\u72ec\u5408\u5e76\u7684\u4ef7\u503c\u5747\u4e0d\u4e3a\u8d1f\uff0c\u5219\u8fd9\u6b21\u5408\u5e76\u4e00\u5b9a\u4f1a\u8fdb\u884c\u3002\u66f4\u5f3a\u7684\u7ed3\u8bba\u662f\uff0c\u5982\u679c\u67d0\u6b21\u5408\u5e76\u7684\u4ef7\u503c\u4e3a\u8d1f\uff0c\u4e14\u4efb\u610f\u5b50\u96c6\u5408\u5e76\u7684\u4ef7\u503c\u90fd\u5927\u4e8e\u5f53\u524d\u96c6\u5408\uff0c\u4e14\u4e0d\u5b58\u5728\u4e24\u4e2a\u4e0d\u4ea4\u7684\u5b50\u96c6\u7684\u5408\u5e76\u4ef7\u503c\u90fd\u4e3a\u8d1f\uff0c\u90a3\u4e48\u8fd9\u6b21\u5408\u5e76\u4e00\u5b9a\u4f1a\u8fdb\u884c\u3002\n\n\u6ce8\u610f\u8fd9\u5e76\u4e0d\u662f\u73b0\u573a\u8bb2\u9898\u65f6ppt\u4e0a\u7ed9\u51fa\u7684\u7ed3\u8bba\uff08\u5982\u679c\u4efb\u610f\u5b50\u96c6\u5408\u5e76\u7684\u4ef7\u503c\u90fd\u5927\u4e8e\u5f53\u524d\u96c6\u5408\u5c31\u4e00\u5b9a\u5408\u5e76\uff09\uff0c\u540e\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6784\u9020\u6570\u636ehack\u6389\u3002\n\n\u56e0\u6b64\u73b0\u573a\u8bb2\u9898\u65f6\u7ed9\u51fa\u7684n^5\u548cn^4\u7684\u201c\u6bcf\u6b21\u627e\u51fa\u5168\u5c40\u4ef7\u503c\u6700\u5c0f\u7684\u96c6\u5408\u8fdb\u884c\u5408\u5e76\u201d\u7684\u505a\u6cd5\u662f\u9519\u7684\uff01\u5b9e\u6d4b\u4f1a\u5728\u7b2c10\u4e2a\u70b9wa\u6389\u3002\n\n\u6ca1\u9519\u6211\u5c31\u662f\u4e00\u5f00\u59cb\u5148\u6253\u7b97\u5199\u5199n^4\u505a\u6cd5\uff0c\u53d1\u73b0\u5404\u79cd\u82b1\u5f0fwa\u4e4b\u540e\u5f3a\u884c\u624b\u73a9\u6570\u636e\u53d1\u73b0\u4e86\u8fd9\u4e00\u70b9\u2026\u2026\n\n\u4f46\u662f\u6709\u610f\u601d\u7684\u662f\uff0cstd\u7684n^3\u505a\u6cd5\u5374\u662f\u6b63\u786e\u7684\u3002\u5b9e\u9645\u4e0a\uff0cstd\u7684\u505a\u6cd5\u5c31\u662f\u4f9d\u8d56\u4e8e\u4e0a\u6587\u7ed9\u51fa\u7684\u7ed3\u8bba\u3002\n\n\u8003\u8651\u4e00\u4e2a\u5bf9\u51f8\u5305\u7684dp\u3002\n\n\u5c06\u6240\u6709\u70b9\u6309\u7167x\u7b2c\u4e00\u5173\u952e\u5b57\uff0cy\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u5e76\u4ece\u53f3\u4e0a\u5230\u5de6\u4e0b\u679a\u4e3e\u4e00\u4e2a\u70b9\u3002\u6211\u4eec\u5c1d\u8bd5\u9009\u4e00\u4e2a\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5de6\u4e0b\u89d2\uff0c\u4e14\u4ef7\u503c\u6700\u5c0f\u7684\u51f8\u5305\u3002\n\n\u8bbef(i,j,k)\u4e3a\u4ee5\u70b9i\u4e3a\u8d77\u70b9\uff0c\u6240\u9009\u7684\u6700\u540e\u4e00\u6761\u8fb9\u4e3aj~k\u65f6\u7684\u6700\u4f18\u7b54\u6848\u3002\u6bcf\u6b21\u679a\u4e3e\u4e0b\u4e00\u4e2a\u70b9\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u4f46\u662f\u5177\u4f53\u600e\u4e48\u8ba1\u7b97\u4ef7\u503c\u5462\uff1f\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u600e\u4e48\u624d\u80fd\u77e5\u9053\u6211\u4eec\u65b0\u7684\u51f8\u5305\u4f1a\u5305\u4f4f\u54ea\u4e9b\u65e7\u51f8\u5305\u5462\uff1f\n\n\u6709\u4e00\u4e2a\u7ecf\u5178\u7684\u5957\u8def\u53eb\u201c\u5c04\u7ebf\u6cd5\u201d\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u51f8\u5305\uff0c\u6211\u4eec\u9009\u4e00\u4e2a\u70b9\uff08\u4e00\u822c\u662f\u6700\u5de6\u4e0b\u7684\u70b9\uff09\uff0c\u5411\u67d0\u4e2a\u65b9\u5411\u505a\u4e00\u6761\u5c04\u7ebf\u3002\u5728dp\u65f6\u6309\u9006\u65f6\u9488\u987a\u5e8f\u8fdb\u884c\uff0c\u5219\u6bcf\u9009\u4e00\u6761\u9006\u65f6\u9488\u65b9\u5411\u7a7f\u8d8a\u67d0\u6761\u5c04\u7ebf\u7684\u8fb9\u5c31\u51cf\u53bb\u5bf9\u5e94\u51f8\u5305\u7684\u5468\u957f\uff0c\u987a\u65f6\u9488\u65b9\u5411\u7a7f\u8d8a\u5c31\u52a0\u4e0a\u5bf9\u5e94\u5468\u957f\u3002\u8fd9\u6837\u8f6c\u4e00\u5708\u56de\u6765\uff0c\u6240\u6709\u88ab\u5305\u8fdb\u53bb\u7684\u51f8\u5305\u90fd\u4f1a\u88ab\u7b971\u6b21\u8d21\u732e\uff0c\u800c\u5916\u9762\u7684\u51f8\u5305\u5219\u5168\u62b5\u6d88\u6389\u4e0d\u4f1a\u7b97\u8d21\u732e\u3002\n\n\u5f53\u7136\u8fd9\u91cc\u7684\u8fb9\u754c\u7279\u5224\u975e\u5e38\u591a\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u4e0d\u80fd\u628a\u539f\u5148\u5df2\u6709\u7684\u51f8\u5305\u5206\u5272\u5f00\uff0c\u56e0\u6b64\u9009\u4e00\u6761\u8fb9\u65f6\u8981\u4e0e\u6240\u6709\u539f\u51f8\u5305\u6c42\u4ea4\u5224\u5408\u6cd5\u6027\uff1b\u518d\u6bd4\u5982\uff0c\u5982\u679c\u65b0\u51f8\u5305\u6070\u597d\u8fc7\u539f\u6765\u67d0\u4e2a\u51f8\u5305\u62c9\u5c04\u7ebf\u7684\u70b9\uff0c\u600e\u6837\u624d\u80fd\u907f\u514d\u8fd9\u4e2a\u51f8\u5305\u7684\u8d21\u732e\u4e0d\u88ab\u91cd\u7b97/\u6f0f\u7b97\uff1f\u518d\u6bd4\u5982\uff0c\u5982\u679c\u62c9\u7684\u5c04\u7ebf\u6070\u597d\u8fc7\u5176\u4ed6\u70b9\u600e\u4e48\u529e\u2026\u2026\u8fd9\u4e9b\u7ec6\u8282\u4e0d\u5199\u4e0d\u77e5\u9053\uff0c\u4e00\u5199\u5413\u4e00\u8df3\u3002\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u5427\u3002\n\n\u66f4\u8fdb\u4e00\u6b65\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u559c\u95fb\u4e50\u89c1\u7684\u4f18\u5316\uff1a\u4e3a\u4ec0\u4e48\u8981\u5728dp\u8fc7\u7a0b\u4e2d\u65f6\u523b\u4fdd\u6301\u51f8\u6027\u5462\uff1f\u663e\u7136\u4e00\u4e2a\u4e0d\u51f8\u7684\u65b9\u6848\u4e00\u5b9a\u4e0d\u4f18\u554a\u3002\u56e0\u6b64\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u8bb0\u6700\u540e\u4e00\u6761\u8fb9\u800c\u662f\u76f4\u63a5\u8bb0\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u4e3a\u4e86\u9632\u6b62\u5faa\u73af\u8f6c\u79fb\u6309\u7167\u6781\u89d2\u5e8fdp\u5373\u53ef\u3002\n\n\u53ef\u662f\u7b49\u7b49\u2026\u2026\u4f60\u521a\u624d\u4e0d\u662f\u8bf4\u8fd9\u79cddp\u4ef7\u503c\u6700\u5c0f\u7684\u51f8\u5305\u7684\u7b97\u6cd5\u4e0d\u5bf9\u5417\uff1f\n\n\u8fd9\u91cc\u975e\u5e38\u5947\u5999\u7684\u4e00\u70b9\u662f\uff1a\u4e00\u65e6\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u4ef7\u503c\u4e3a\u8d1f\u7684\u96c6\u5408\uff0c\u5c31\u7acb\u5373\u5c06\u5176\u5408\u5e76\uff01\u7136\u540e\u518d\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u8fdb\u884c\u65b0\u7684\u4e00\u8f6edp\u3002\u5982\u679c\u4ece\u5f53\u524d\u70b9\u5f00\u59cb\u6ca1\u6709\u4ef7\u503c\u4e3a\u8d1f\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u540e\u9762\u7684dp\u4e2d\u5c31\u4e0d\u4f1a\u518d\u8003\u8651\u4ee5\u5b83\u4e3a\u8d77\u70b9\u7684\u60c5\u51b5\u4e86\uff01\n\n\u5982\u6b64\u4e00\u6765\uff0c\u5f53\u6211\u4eec\u67d0\u4e00\u6b21\u5408\u5e76\u4e00\u4e2a\u96c6\u5408\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u5305\u542b\u4e00\u4e2a\u4e0d\u4ee5\u5f53\u524d\u70b9\u4e3a\u5de6\u4e0b\u89d2\u7684\u4ef7\u503c\u4e3a\u8d1f\u7684\u5b50\u96c6\uff08\u56e0\u4e3a\u5982\u679c\u6709\u8fd9\u6837\u7684\u5b50\u96c6\uff0c\u5b83\u65e9\u5728\u4e4b\u524d\u7684dp\u4e2d\u5c31\u5df2\u7ecf\u88ab\u5408\u5e76\u4e86\uff09\uff0c\u800c\u8fd9\u4e2a\u96c6\u5408\u53c8\u662f\u4ee5\u5f53\u524d\u70b9\u4e3a\u5de6\u4e0b\u89d2\u7684\u4ef7\u503c\u6700\u5c0f\u7684\u96c6\u5408\uff0c\u6839\u636e\u5f15\u7406\uff0c\u5b83\u4e00\u5b9a\u4f1a\u88ab\u5408\u5e76\u3002\n\n\u800c\u4e3a\u4ec0\u4e48\u65e0\u6cd5\u5408\u5e76\u5c31\u53ef\u4ee5\u8df3\u8fc7\u4e00\u4e2a\u70b9\u5462\uff1f\u56e0\u4e3a\u63a5\u4e0b\u6765\u7684\u5408\u5e76\u90fd\u4e00\u5b9a\u4f1a\u6d89\u53ca\u5230\u66f4\u9760\u5de6\u4e0b\u7684\u70b9\uff0c\u8fd9\u81ea\u7136\u65e0\u6cd5\u4f7f\u5f97\u4efb\u4f55\u4e00\u4e2a\u4ee5\u5f53\u524d\u70b9\u4e3a\u5de6\u4e0b\u89d2\u7684\u96c6\u5408\u4ef7\u503c\u53d8\u5c0f\u3002\n\n\u5982\u6b64dp\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u662fn^2\u3002\u800c\u6bcf\u6b21dp\u8981\u4e48\u4f1a\u5408\u5e76\u96c6\u5408\uff0c\u8981\u4e48\u4f1a\u76f4\u63a5\u8df3\u8fc7\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e24\u8005\u90fd\u53ea\u6709On\u6b21\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662fn^3\u7684\u4e86\u3002\n\n\u6700\u540e\u8bf4\u4e00\u53e5\uff0c\u5982\u679c\u6709\u4eba\u4f1a\u4e86\u6587\u4e2d\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u6216\u8005\u627e\u5230\u4e86\u628a\u7ed3\u8bba/std\u53c9\u6389\u7684\u6570\u636e\uff0c~~\u8bf7\u5c3d\u5feb\u8054\u7cfb\u6211~~\u76f4\u63a5\u53d1\u5230uoj\u7fa4\u91cc\u5427\u6211\u5b9e\u5728\u88ab\u8fd9\u4e2a\u9898\u6298\u78e8\u591f\u4e86\u3002\n\n\u7531\u4e8e\u4ee3\u7801\u662f\u4ecen^4\u5f3a\u8f6c\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u53c8\u957f\u53c8\u4e11\uff0c\u5927\u5bb6\u5c06\u5c31\u7740\u770b\u5427\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define gc getchar()\n#define pc putchar\n#define li long long\ninline li read(){\n\tli x = 0,y = 0,c = gc;\n\twhile(!isdigit(c)) y = c,c = gc;\n\twhile(isdigit(c)) x = (x << 1) + (x << 3) + (c ^ '0'),c = gc;\n\treturn y == '-' ? -x : x;\n}\n#define ldb long double\nint cnt,tong[510];\nstruct node{\n\tli x,y;\n\tnode(li _x = 0,li _y = 0){x = _x;y = _y;}\n}p[510];\ninline bool operator < (node q,node w){\n\treturn q.x == w.x ? q.y < w.y : q.x < w.x;\n}\ninline bool cmp(int q,int w){\n\treturn p[q].x == p[w].x ? p[q].y < p[w].y : p[q].x < p[w].x;\n}\ninline node operator + (node q,node w){\n\treturn node(q.x + w.x,q.y + w.y);\n}\ninline node operator - (node q,node w){\n\treturn node(q.x - w.x,q.y - w.y);\n}\ninline li operator * (node q,node w){\n\treturn q.x * w.y - q.y * w.x;\n}\ninline ldb dis(node q,node w){\n\treturn sqrtl((q.x - w.x) * (q.x - w.x) + (q.y - w.y) * (q.y - w.y));\n}\nldb ans;\nstruct tb{\n\tvector<int> a;\n\tldb as;\n\tinline int& operator [] (int x){return a[x];}\n}a[260],b[260];\nint n,nw[1010],tot;\nldb f[510][510],h[510][510],ds[510][510];\nint g[510][510];\nint jj[510][510];\nbool ff[510][510];\nnode nwd;\ninline bool cpm(int q,int w){\n\tif(p[q].x > nwd.x && p[w].x < nwd.x) return 1;\n\tif(p[q].x < nwd.x && p[w].x > nwd.x) return 0;\n\tif(p[q].x == nwd.x && p[q].y < nwd.y) return 0;\n\tif(p[w].x == nwd.x && p[w].y < nwd.y) return 1;\n\treturn (p[q] - nwd) * (p[w] - nwd) > 0;\n}\ninline bool jiao(node a,node b,node c,node d){\n\tnode p1 = a - c,p2 = d - c,p3 = b - c;\n\tif(1.0l * (p1 * p2) * (p3 * p2) >= 0) return 0;\n\tp2 = b - a;p3 = d - a;\n\treturn 1.0l * (p1 * p2) * (p3 * p2) > 0;\n}\nbool shan[260];\nint pm[510];\nint sx[260];\ninline bool cp(int q,int w){\n\treturn q > w;\n}\nbool intb[510];\nint st1[1010],ft1,st2[1010],ft2;\ninline ldb wk(){\n\tint i;\n\tft1 = ft2 = 0;\n\tsort(nw + 1,nw + tot + 1);\n\t\n\tfor(i = 1;i <= tot;++i){\n\t\twhile(ft1 > 1 && ((p[st1[ft1]] - p[st1[ft1 - 1]]) * (p[st1[ft1]] - p[nw[i]]) >= 0)) --ft1;\n\t\tst1[++ft1] = nw[i]; \n\t}\n\tfor(i = tot;i;--i){\n\t\twhile(ft2 > 1 && ((p[st2[ft2]] - p[st2[ft2 - 1]]) * (p[st2[ft2]] - p[nw[i]]) >= 0)) --ft2;\n\t\tst2[++ft2] = nw[i]; \n\t}\n\tldb as = 0;\n\tfor(i = 1;i < ft1;++i) as += dis(p[st1[i]],p[st1[i + 1]]);\n\tfor(i = 1;i < ft2;++i) as += dis(p[st2[i]],p[st2[i + 1]]);\n\treturn as;\n}\nint main(){\n\tint i,j,k,l,u,v;\n\tn = read();\n\tfor(i = 1;i <= n;++i){\n\t\ta[i].a.resize(2);\n\t\tp[++cnt].x = read();p[cnt].y = read();tong[cnt] = cnt;\n\t\tp[++cnt].x = read();p[cnt].y = read();tong[cnt] = cnt;\n\t\ta[i].as = 2 * dis(p[cnt - 1],p[cnt]);\n\t\tans += a[i].as;\n\t}\n\tif(n == 1){printf(\"%.10lf\\n\",(double)ans);return 0;}\n\tsort(tong + 1,tong + cnt + 1,cmp);\n\tfor(i = 1;i <= cnt;++i) a[tong[i] + 1 >> 1][tong[i] + 1 & 1] = i;\n\tfor(i = 1;i <= n;++i) if(a[i][0] > a[i][1]) swap(a[i][0],a[i][1]);\n\tmemset(tong,0,sizeof(tong));\n\tsort(p + 1,p + cnt + 1);\n\tfor(i = 1;i <= cnt;++i){\n\t\tint tt = 0;\n\t\tfor(j = 1;j <= cnt;++j) if(i != j) jj[i][++tt] = j;\n\t\tnwd = p[i];\n\t\tsort(jj[i] + 1,jj[i] + tt + 1,cpm);\n\t}\n\tfor(i = 1;i <= cnt;++i) for(j = i;j <= cnt;++j) ds[i][j] = ds[j][i] = dis(p[i],p[j]);\n\tbool lss = 0,fg = 1;\n\twhile(fg){\n\t\tfg = 0;\n\t\tfor(i = 1;i < n;++i) for(j = i + 1;j <= n;++j){\n\t\t\ttot = 0;\n\t\t\tfor(k = 0;k < a[i].a.size();++k) nw[++tot] = a[i][k];\n\t\t\tfor(k = 0;k < a[j].a.size();++k) nw[++tot] = a[j][k];\n\t\t\tldb nxt = wk();\n\t\t\tif(nxt <= a[i].as + a[j].as){\n\t\t\t\tans += nxt - a[i].as - a[j].as;\n\t\t\t\ta[i].a.clear();a[i].a.resize(ft1 + ft2 - 2);\n\t\t\t\tfor(k = 1;k < ft1;++k) a[i][k - 1] = st1[k];\n\t\t\t\tfor(k = 1;k < ft2;++k) a[i][k + ft1 - 2] = st2[k];\n\t\t\t\ta[i].as = nxt;swap(a[j],a[n]);--n;fg = 1;\n\t\t\t\tgoto qwq;\n\t\t\t}\n\t\t}\n\t\tqwq:;\n\t}\n\tfor(i = 1;i <= n;++i) for(j = 0;j < a[i].a.size();++j) for(k = 1;k <= n;++k) for(l = 0;l < a[k].a.size();++l) if(i != k || j != l) ff[a[i][j]][a[k][l]] = 1;\n\twhile(1){\n\t\tmemset(g,0,sizeof(g));\n\t\tmemset(intb,0,sizeof(intb));\n\t\tfor(i = 1;i <= n;++i) for(j = 0;j < a[i].a.size();++j) intb[a[i][j]] = 1;\n\t\tfor(i = 1;i <= cnt;++i) for(j = 1;j <= cnt;++j) if(!intb[i] || !intb[j]) ff[i][j] = 0;\n\t\tfor(i = 1;i <= cnt;++i) for(j = 1;j <= cnt;++j) f[i][j] = ans;\n\t\tfor(i = 1;i <= n;++i) for(j = 0;j < a[i].a.size();++j) for(k = 1;k <= n;++k) for(l = 0;l < a[k].a.size();++l) if(i != k || j != l){\n\t\t\tint p1 = a[i][j],p2 = a[k][l];\n\t\t\tif(!ff[p1][p2]) continue;\n\t\t\tif((p[p2] - p[p1]) * ((j != a[i].a.size() - 1 ? p[a[i][j + 1]] : p[a[i][0]]) - p[p1]) < 0){\n\t\t\t\tff[p1][p2] = 0;continue;\n\t\t\t} \n\t\t\tif((p[p1] - p[p2]) * ((l ? p[a[k][l - 1]] : p[a[k][a[k].a.size() - 1]]) - p[p2]) > 0){\n\t\t\t\tff[p1][p2] = 0;continue;\n\t\t\t}\n\t\t\tfor(u = 1;u <= n;++u) if(u == n || !lss){\n\t\t\t\tif((i < k || (i == k && j < l)) || !ff[p2][p1]){\n\t\t\t\t\tfor(v = 0;v < a[u].a.size();++v){\n\t\t\t\t\t\tif(jiao(p[p1],p[p2],p[a[u][v]],v ? p[a[u][v - 1]] : p[a[u][a[u].a.size() - 1]])){\n\t\t\t\t\t\t\tff[p1][p2] = ff[p2][p1] = 0;break;\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t\tif(!ff[p1][p2]) break;\n\t\t\t\tif(p1 == a[u][0]){\n\t\t\t\t\tif((p[p2] - p[p1]) * node(1,-1234567890 - p[p1].y) < 0) h[p1][p2] -= a[u].as;\n\t\t\t\t} \n\t\t\t\telse{\n\t\t\t\t\tnwd = node(p[a[u][0]].x + 1,-1234567890);\n\t\t\t\t\tli q1 = (p[p1] - p[a[u][0]]) * node(1,-1234567890 - p[a[u][0]].y),q2 = (p[p2] - p[a[u][0]]) * node(1,-1234567890 - p[a[u][0]].y);\n\t\t\t\t\tif(q1 > 0 && q2 < 0){\n\t\t\t\t\t\tif(1.0l * ((nwd - p[p1]) * (p[p2] - p[p1])) * ((p[a[u][0]] - p[p1]) * (p[p2] - p[p1])) < 0) h[p1][p2] -= a[u].as;\n\t\t\t\t\t} \n\t\t\t\t\telse if(q1 < 0 && q2 > 0){\n\t\t\t\t\t\tif(1.0l * ((nwd - p[p1]) * (p[p2] - p[p1])) * ((p[a[u][0]] - p[p1]) * (p[p2] - p[p1])) < 0) h[p1][p2] += a[u].as;\t\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t\tldb nwa = ans;int wz = 0;\n\t\tfor(i = 1;i <= n;++i) sx[i] = a[i][0];\n\t\tsort(sx + 1,sx + n + 1,cp);\n\t\tfor(i = 1;i <= n;++i){\n\t\t\tint p1 = sx[i],p2;\n\t\t\tif(lss && p[a[n][0]] < p[p1]) continue; \n\t\t\tpm[p1] = cnt;\n\t\t\tfor(j = 1;j < cnt;++j) pm[jj[p1][j]] = j;\n\t\t\tfor(j = 1;j < cnt && p[jj[p1][j]].x >= p[p1].x;++j){\n\t\t\t\tp2 = jj[p1][j];\n\t\t\t\tif(p[p2].x == p[p1].x && p[p2].y < p[p1].y) break;\n\t\t\t\tif(!ff[p1][p2]) continue;\n\t\t\t\tif(f[p1][p2] > ds[p1][p2] + h[p1][p2]){\n\t\t\t\t\tf[p1][p2] = ds[p1][p2] + h[p1][p2];\n\t\t\t\t\tg[p1][p2] = p1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(j = 1;j < cnt && p[jj[p1][j]].x >= p[p1].x;++j){\n\t\t\t\tp2 = jj[p1][j];\n\t\t\t\tif(p[p2].x == p[p1].x && p[p2].y < p[p1].y) break;\n\t\t\t\tfor(k = 1;k <= cnt;++k) if(ff[p2][k] && pm[k] > pm[p2]){\n\t\t\t\t\tif(f[p1][k] > f[p1][p2] + ds[p2][k] + h[p2][k]){\n\t\t\t\t\t\tf[p1][k] = f[p1][p2] + ds[p2][k] + h[p2][k];\n\t\t\t\t\t\tg[p1][k] = p2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f[p1][p1] < -1e-8){\n\t\t\t\tnwa = f[p1][p1];wz = p1;break;\n\t\t\t} \n\t\t}\n\t\tif(nwa >= -1e-8) break;\n\t\tans += nwa;\n\t\tnw[tot = 1] = wz;\n\t\tfor(i = g[wz][wz];i != wz;i = g[wz][i]) nw[++tot] = i;\n\t\tnw[++tot] = wz;\n\t\tint nxtn = 0;\n\t\tfor(i = 1;i <= n;++i){\n\t\t\tnwd = node(p[a[i][0]].x + 1,-1234567890);\n\t\t\tbool inn = 0;\n\t\t\tfor(j = 1;j < tot;++j){\n\t\t\t\tif(p[a[i][0]].x == p[nw[j]].x && p[a[i][0]].y == p[nw[j]].y){\n\t\t\t\t\tinn = 1;break;\n\t\t\t\t}\n\t\t\t\tif(jiao(p[nw[j]],p[nw[j + 1]],p[a[i][0]],nwd)) inn ^= 1;\n\t\t\t}\n\t\t\tif(inn){\n\t\t\t\tnwa += a[i].as;u = i;\n\t\t\t\tfor(int p1 = 1;p1 <= cnt;++p1) for(int p2 = 1;p2 <= cnt;++p2) if(ff[p1][p2]){\n\t\t\t\t\tif(p1 == a[u][0]){\n\t\t\t\t\t\tif((p[p2] - p[p1]) * node(1,-1234567890 - p[p1].y) < 0) h[p1][p2] += a[u].as;\n\t\t\t\t\t} \n\t\t\t\t\telse{\n\t\t\t\t\t\tnwd = node(p[a[u][0]].x + 1,-1234567890);\n\t\t\t\t\t\tli q1 = (p[p1] - p[a[u][0]]) * node(1,-1234567890 - p[a[u][0]].y),q2 = (p[p2] - p[a[u][0]]) * node(1,-1234567890 - p[a[u][0]].y);\n\t\t\t\t\t\tif(q1 > 0 && q2 < 0){\n\t\t\t\t\t\t\tif(1.0l * ((nwd - p[p1]) * (p[p2] - p[p1])) * ((p[a[u][0]] - p[p1]) * (p[p2] - p[p1])) < 0) h[p1][p2] += a[u].as;\n\t\t\t\t\t\t} \n\t\t\t\t\t\telse if(q1 < 0 && q2 > 0){\n\t\t\t\t\t\t\tif(1.0l * ((nwd - p[p1]) * (p[p2] - p[p1])) * ((p[a[u][0]] - p[p1]) * (p[p2] - p[p1])) < 0) h[p1][p2] -= a[u].as;\t\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t\telse b[++nxtn] = a[i];\n\t\t}\n\t\tfor(i = 1;i <= nxtn;++i) a[i] = b[i];\n\t\tn = nxtn + 1;\n\t\ta[n].as = nwa;a[n].a.clear();a[n].a.resize(tot - 1);\n\t\tfor(i = tot;i > 1;--i) a[n][tot - i] = nw[i];lss = 1;\n\t}\n\tprintf(\"%.10lf\\n\",(double)ans);\n\treturn 0;\n}\n```",
        "postTime": 1558685980,
        "uid": 45775,
        "name": "liuzhangfeiabc",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5403 \u3010[CTS2019]\u7530\u91ce\u3011"
    }
]