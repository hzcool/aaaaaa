[
    {
        "content": "\u8003\u8651\u5982\u679c\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u96c6\u4f1a\u7684\u5730\u70b9\n\n\u4f7f\u7528DFS\u8fdb\u884c\u8ba1\u7b97\n\n\u7136\u540e\u518d\u4f9d\u6b21\u6bd4\u8f83\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\n\n\u4f46\u662fn\u7684\u8303\u56f4\u592a\u5927\uff0c\u663e\u7136\u4f1a\u8d85\u65f6\u3002\n\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5e94\u5f53\u5982\u4f55\u4f18\u5316\uff1f\n\n\u5148\u770b\u770b\u6837\u4f8b\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](http://img.blog.csdn.net/20170720231457332?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzA5NzQzNjk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n\u901a\u8fc7\u4e00\u6b21O(n)\u7684\u8ba1\u7b97\uff0c\u5f88\u5bb9\u6613\u5f97\u51fa\u6765\n\n\u5982\u679c\u9009\u62e91\u53f7\u8282\u70b9\uff0c\u7b54\u6848\u5c31\u662f17\n\n\u65e2\u7136O(n^2)\u7684\u8ba1\u7b97\u65e0\u6cd5\u5728\u65f6\u95f4\u5185\u6c42\u89e3\n\n\u90a3\u4e48\u662f\u5426\u53ef\u4ee5\u9012\u63a8\u51fa\u6765\u5462\uff1f\n\n\u663e\u7136\u662f\u53ef\u4ee5\u7684\u3002\n\n\u89c2\u5bdf\u5982\u679c\u5df2\u7ecf\u77e5\u90531\u53f7\u8282\u70b9\u6240\u9700\u7684\u65f6\u95f4\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5982\u4e0b\u5047\u8bbe\uff1a\n\n\u2460 \u6240\u6709\u7684\u725b\u9996\u5148\u5230\u8fbe\u4e861\u53f7\u8282\u70b9\n\n\u2461 3\u53f7\u8282\u70b9\u4ee5\u53ca\u4ed6\u5b50\u6811\u4e0a\u7684\u8282\u70b9\u90fd\u9700\u8981\u9000\u56de1->3\u7684\u8def\u5f84\u7684\u957f\u5ea6\n\n\u2462 \u9664\u4e863\u53f7\u8282\u70b9\u4ee5\u53ca\u4ed6\u5b50\u6811\u4e0a\u7684\u8282\u70b9\u90fd\u9700\u8981\u524d\u8fdb1->3\u7684\u8def\u5f84\u7684\u957f\u5ea6\n\n\n\u901a\u8fc7\u4e0a\u9762\u7684\u4e09\u6761\u4e1c\u897f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u7236\u8282\u70b9\u63a8\u51fa\u5b50\u8282\u70b9\u7684\u65f6\u95f4\n\n\n\u6240\u4ee5\uff0c\u53c8\u662f\u4e00\u904dO(n)\u7684\u8ba1\u7b97\u5c31\u53ef\u4ee5\u63a8\u51fa\u6700\u7ec8\u7684\u7b54\u6848\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define MAX 200100\n#define ll long long\ninline ll read()\n{\n      register ll x=0,t=1;\n      register char ch=getchar();\n      while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n      if(ch=='-'){t=-1;ch=getchar();}\n      while(ch<='9'&&ch>='0'){x=x*10+ch-48;ch=getchar();}\n      return x*t;\n}\n\nll dis[MAX],C[MAX],Q[MAX],f[MAX],Sum,Ans=1000000000000000000;\n\nstruct Line\n{\n      ll v,next,w;\n}e[MAX];\n\nll h[MAX],cnt=1,N;\n\ninline void Add(ll u,ll v,ll w)\n{\n      e[cnt]=(Line){v,h[u],w};\n      h[u]=cnt++;\n}\n//\u4f7f\u7528\u4e24\u904dDFS\n//\u7b2c\u4e00\u904d\u4ee5\u4efb\u610f\u70b9\u4e3a\u6839\u8282\u70b9\u8ba1\u7b97\u4e00\u904d\n//dis[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u5230\u6839\u7684\u8ddd\u79bb\u4e4b\u548c \nll DFS(ll u,ll ff)\n{\n      ll tot=0;\n      for(ll i=h[u];i;i=e[i].next)\n      {\n               ll v=e[i].v;\n               if(v!=ff)\n               {\n                      ll s=DFS(v,u);//\u5b50\u6811\u4e0a\u725b\u7684\u6570\u91cf \n                      dis[u]+=dis[v]+e[i].w*s;//\u7edf\u8ba1 \n                   tot+=s;//\u725b\u7684\u4e2a\u6570\n               }\n      }\n      return Q[u]=tot+C[u];\n}\n//\u7b2c\u4e8c\u904d\u8ba1\u7b97\u504f\u79fb\u540e\u7684\u503c\n//\u5148\u53ef\u4ee5\u5047\u8bbe\u8d70\u5230\u5f53\u524d\u8282\u70b9\u7684\u7236\u8282\u70b9\n//\u518d\u8ba9\u5f53\u524d\u81ea\u5df1\u70b9\u6240\u6709\u725b\u9000\u56de\u6765\uff0c\u7236\u8282\u70b9\u7684\u6240\u6709\u725b\u8d70\u8fc7\u53bb\u5373\u53ef \nvoid DFS2(ll u,ll ff)\n{\n       for(ll i=h[u];i;i=e[i].next)\n       {\n                  ll v=e[i].v;\n                  if(v!=ff)\n                  {\n                           ll ss=e[i].w;\n                           f[v]=f[u]-Q[v]*ss+(Sum-Q[v])*ss;\n                           DFS2(v,u);\n                  }\n       }\n}\n\nint main()\n{\n      N=read();\n      for(ll i=1;i<=N;++i)\n        C[i]=read();\n      for(ll i=1;i<=N;++i)\n        Sum+=C[i];//\u7edf\u8ba1\u725b\u7684\u603b\u6570 \n      for(ll i=1;i<N;++i)\n      {\n                 ll u=read(),v=read(),w=read();\n                 Add(u,v,w);\n                 Add(v,u,w);\n      }\n      \n      DFS(1,1);//\u6c42\u51fa\u4ee51\u4e3a\u805a\u96c6\u5904\u7684\u7ed3\u679c \n      \n      DFS2(1,1);//\u6c42\u51fa\u5176\u4ed6\u7684\u504f\u79fb\u503c\n      \n      for(ll i=1;i<=N;++i)\n            Ans=min(Ans,f[i]);\n      \n        cout<<Ans+dis[1]<<endl;\n        \n        return 0;\n}\n\n```",
        "postTime": 1500564740,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "\u5168\u65b0\u505a\u6cd5 \uff08\u9898\u89e3\u5f88\u957f\u4f46\u662f\u4ee3\u7801\u5c3155\u884c\u2026\u2026\uff09\n\n#\u6811\u7684\u91cd\u5fc3\n\n\n##\u5b9a\u4e49\n\n- \u6811\u7684\u91cd\u5fc3\uff1a\u4e5f\u53eb\u6811\u7684\u8d28\u5fc3\u3002\u627e\u5230\u4e00\u4e2a\u70b9,\u5176\u6240\u6709\u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6570\u6700\u5c11,\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u8fd9\u68f5\u6811\u7684\u91cd\u5fc3,\u5220\u53bb\u91cd\u5fc3\u540e\uff0c\u751f\u6210\u7684\u591a\u68f5\u6811\u5c3d\u53ef\u80fd\u5e73\u8861\u3002\n\n##\u6027\u8d28\n\n- \u6027\u8d28 1 \uff1a\u6811\u4e2d\u6240\u6709\u70b9\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\u548c\u662f\u6700\u5c0f\u7684\uff0c\u4e00\u68f5\u6811\u6700\u591a\u6709\u4e24\u4e2a\u91cd\u5fc3\uff08\u6bd4\u5982\u5c31\u4e24\u4e2a\u70b9\u8fde\u4e2a\u8fb9\uff09\u3002\n\n- \u6027\u8d28 2 \uff1a\u628a\u4e24\u68f5\u6811\u901a\u8fc7\u52a0\u4e00\u6761\u8fb9\u5f97\u5230\u4e00\u9897\u65b0\u7684\u6811\uff0c\u65b0\u7684\u6811\u7684\u91cd\u5fc3\u5fc5\u7136\u5728\u8fde\u63a5\u539f\u6765\u4e24\u68f5\u6811\u91cd\u5fc3\u7684\u8def\u5f84\u4e0a\u3002\n\n- \u6027\u8d28 3 \uff1a\u4e00\u68f5\u6811\u6dfb\u52a0\u6216\u8005\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff0c\u6811\u7684\u91cd\u5fc3\u6700\u591a\u53ea\u79fb\u52a8\u4e00\u6761\u8fb9\u7684\u4f4d\u7f6e\u3002\n\n\n\u6709\u8fb9\u6743\u65e0\u70b9\u6743\u7684\u6811\u7684\u91cd\u5fc3\u600e\u4e48\u6c42\u5462\uff1f\n\n\u9996\u5148\u6839\u636edfs\u5e8f\u628a\u65e0\u6839\u6811\u53d8\u6210\u6709\u6839\u6811\n\n\u5904\u7406\u51fa\u4ee5\u70b9u\u4e3a\u6839\u7684\u5b50\u4e66\u7684\u7ed3\u70b9\u4e2a\u6570\u4e3as[u]\uff08\u5305\u62ec\u81ea\u5df1\uff09\n\n\u90a3\u4e48\u70b9u\u7684\u6240\u6709\u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6570\u5c31\u662f\n\nmax{max{s[v]}(v\u662fu\u7684\u5b50\u8282\u70b9\uff09,n-s[u](\u8fd9\u662f\u56e0\u4e3a\u662f\u6709\u6839\u6811\u524d\u9762\u6ca1\u6709\u7b97\u4e0a\u201c\u7236\u8282\u70b9\u201d\uff0c\u8fd9\u91cc\u8003\u8651\u8fdb\u6765\uff09}\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n\uff08\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u91cd\u5fc3\u7684\u4f4d\u7f6e\u5176\u5b9e\u548c\u8fb9\u6743\u662f\u65e0\u5173\u7684\uff09\n\n\uff08\u4e3a\u4ec0\u4e48\u65e0\u5173\u7559\u4f5c\u601d\u8003\u54af\uff09\uff08\u5f53\u7136\u63a5\u53d7\u79c1\u4fe1 o(=\u00b7\u03c9\u00b7=)m \uff09\n\n\u00b7\u00b7\u00b7\n```cpp\nvoid treedp(int fa,int u)\n{\n    s[u]=1;//\u81ea\u5df1\u7684\u4e00\u4e2a\u70b9\n    for (int i=fr[u];i;i=a[i].ne)\n        if (a[i].t!=fa)\n        {\n            treedp(u,a[i].t);\n            s[u]+=s[a[i].t];//s[u]\u662f\u70b9u\u4e3a\u6839\u7684\u5b50\u4e66\u7684\u7ed3\u70b9\u4e2a\u6570\n            maxs[u]=max(maxs[u],s[a[i].t]);//maxs[u]\u662f\u6240\u6709\u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6570\n        }\n    maxs[u]=max(maxs[u],n-s[u]);//\u518d\u8003\u8651\u4e00\u4e0b\u7236\u8282\u70b9\n}\n```\n\u00b7\u00b7\u00b7\n\u5f53\u7136\u8fd9\u4e2a\u4e0d\u662f\u8fd9\u9053\u9898\u5566\n\n\u8fd9\u4e2a\u9898\u662f\u4e00\u9897\u53c8\u6709\u8fb9\u6743\u53c8\u6709\u70b9\u6743\u7684\u6811hhh\n\n\u600e\u4e48\u529e\u5462\n\n\u9996\u5148\u4ece\u8499\u7684\u89d2\u5ea6\u6765\u8bf4\n\n\u90a3\u5c31\u628a\u201d\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6570\u6700\u5c11\u201c\u6539\u6210\u201c\u6700\u5927\u70b9\u6743\u5757\u6700\u5c0f\u201d\u5457\n\n\u90a3\u5c31\u662f\u628a\u539f\u6765\u76841\u6362\u6210\u70b9\u6743\u54af\n\nemmmm\u6211\u8fd8\u662f\u8981\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\u7684\n\n\uff08\u8003\u8bd5\u7684\u65f6\u5019\u5c31\u8981\u7528\u201c\u663e\u7136\u6210\u7acb\u6cd5\u201d\uff01\uff09\n\n\u6211\u4eec\u7684\u76ee\u7684\u662f\u628a\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u6210\u4e4b\u524d\u90a3\u4e2a\u91cd\u5fc3\u95ee\u9898\n\n\u90a3\u4e48\u5c31\u8981\u53bb\u6389\u70b9\u6743\u3002\n\n\u4e5f\u5c31\u662f\u5148\u628a\u62e5\u6709c[u]\u5934\u725b\u7684\u519c\u573au\u62c6\u6210c[u]\u4e2a\u725b\u6570\u4e3a1\u7684\u519c\u573a\uff08\u5c31\u53eb\u62c6\u4e4b\u540e\u7684\u4e3a\u201d\u5206\u8eab\u519c\u573a\u201c\u597d\u5566\uff09\u3002\n\n\u518d\u8003\u8651\u5982\u4f55\u5efa\u8fb9\uff08\u9006\u5411\u601d\u8003\uff09\uff1a\n\n\u5982\u679c\u6700\u7ec8\u9009\u62e9\u7684\u519c\u573a\u7406\u5e94\u662f\u8fd9\u4e2a\u519c\u573a\uff0c\u90a3\u4e48\u6211\u4eec\u5efa\u7684\u65b0\u56fe\u91cc\u9762\uff0c\u5b83\u7684\u201c\u5206\u8eab\u519c\u573a\u201d\u7684\u8ddd\u79bb\u5e94\u8be5\u90fd\u662f0\n\n\u5982\u679c\u6700\u7ec8\u9009\u62e9\u7684\u519c\u573a\u4e0d\u662f\u8fd9\u4e2a\u519c\u573a\u800c\u662f\u519c\u573aA\uff0c\u90a3\u4e48\u201c\u5206\u8eab\u519c\u573a\u201d\u4e00\u5b9a\u90fd\u662f\u5206\u8eab\u524d\u7684\u519c\u573a\u5230A\u7684\u8ddd\u79bb\n\n\u5f97\u51fa\u4e00\u4e2a\u672c\u6765\u5c31\u663e\u7136\u7684\u7ed3\u8bba\u2026\u2026\uff1a\u201c\u5206\u8eab\u519c\u573a\u201d\u4e4b\u95f4\u662f\u7b49\u4ef7\u7684\n\n\u4e5f\u5c31\u662f\u6bcf\u5f53\u9009\u5b9a\u519c\u573a\u6cbf\u67d0\u8fb9\uff08\u8bbe\u8fb9\u957f\u4e3adis\uff09\u5411\u8fdc\u79fb\u52a8\u65f6\uff0c\u6bcf\u4e2a\u5206\u8eab\u519c\u573a\u8d21\u732e\u7684\u4e0d\u65b9\u4fbf\u503c\u90fd\u662fdis\n\n\u90a3\u4e48\u603b\u5171\u8d21\u732e\u4e86c[u]\\*dis(c[u]\u662f\u539f\u519c\u573a\u725b\u6570\u4e5f\u662f\u5206\u8eab\u519c\u573a\u6570\uff09\n\nok\uff0c\u518d\u5408\u5e76\u56de\u53bb\u4e86\uff08\u6839\u672c\u5c31\u6ca1\u5efa\u8fb9\u554a(#`O\u2032)\u5582\uff01\uff09\n\n\u4e0b\u9762\u662f\u8fd9\u90e8\u5206\u4ee3\u7801\n\n\u00b7\u00b7\u00b7void treedp(int fa,int u)\n\n```cpp\n{\n    s[u]=c[u];///\u5c31\u6539\u4e86\u8fd9\u91cc\u800c\u5df2\n    for (int i=fr[u];i;i=a[i].ne)\n        if (a[i].t!=fa)\n        {\n            treedp(u,a[i].t);\n            s[u]+=s[a[i].t];\n            maxs[u]=max(maxs[u],s[a[i].t]);\n        }\n    maxs[u]=max(maxs[u],sum-s[u]);//\u8fd9\u91ccsum\u662f\u6240\u6709\u519c\u573a\u91cc\u9762\u7684\u725b\u6570\u4e4b\u548c\n}\n```\n\u00b7\u00b7\u00b7\n\u597d\u5566\u603b\u4ee3\u7801\u8d34\u4e0a\uff01\n\n\u00b7\u00b7\u00b7\n```cpp\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nstruct B\n{\n    int t,ne,d;\n}a[200005];\nint n,e,fr[100005],c[100005],s[100005],maxs[100005],sum;\nvoid add(int f,int t,int d)\n{\n    a[++e].t=t;\n    a[e].ne=fr[f];\n    fr[f]=e;\n    a[e].d=d;\n}\nvoid treedp(int fa,int u)\n{\n    s[u]=c[u];\n    for (int i=fr[u];i;i=a[i].ne)\n        if (a[i].t!=fa)\n        {\n            treedp(u,a[i].t);\n            s[u]+=s[a[i].t];\n            maxs[u]=max(maxs[u],s[a[i].t]);\n        }\n    maxs[u]=max(maxs[u],sum-s[u]);\n}\nvoid dfs(int fa,int u)//\u6c42\u4e00\u4e2a\u6700\u77ed\u8def\u800c\u5df2\uff0c\u56e0\u4e3as\u5230\u8fd9\u91cc\u5df2\u7ecf\u6ca1\u7528\u4e86\u6211\u5c31\u8282\u7ea6\u4e00\u4e0b\n{                          //\u54e6\u5bf9\u4e86\u6211\u6ca1\u6709\u521d\u59cb\u5316\u662f\u56e0\u4e3a\u53ea\u6709\u552f\u4e00\u8def\u5f84\uff0c\u53ea\u88ab\u641c\u5230\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u53d6min\uff0c\u76f4\u63a5\u8986\u76d6\u539f\u503c\u5c31\u884c\n    for (int i=fr[u];i;i=a[i].ne)\n        if (fa!=a[i].t)\n        {\n            s[a[i].t]=s[u]+a[i].d;\n            dfs(u,a[i].t);\n        }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n        scanf(\"%d\",&c[i]),sum+=c[i];\n    for (int i=1,x,y,z;i<n;i++)\n        scanf(\"%d%d%d\",&x,&y,&z),add(x,y,z),add(y,x,z);\n    treedp(1,1);\n    int an=1;\n    for (int i=2;i<=n;i++)\n        if (maxs[i]<maxs[an])//\u6c42\u51fa\u6700\u5927\u70b9\u6743\u5757\u6700\u5c0f\u7684\u70b9\uff08\u8fd9\u79cd\u6811\u7684\u91cd\u5fc3\uff09\n            an=i;\n    s[an]=0;//\u73b0\u5728an\u5c31\u662f\u91cd\u5fc3\uff0c\u4ee5\u5b83\u4e3a\u539f\u70b9\u8dd1\u6700\u77ed\u8def\n    dfs(an,an);//\u8dd1\u6700\u77ed\u8def\n    long long ans=0;\n    for (int i=1;i<=n;i++)\n        ans+=s[i]*(long long)c[i];//\u7eaf\u6a21\u62df\u6bcf\u4e2a\u519c\u573a\u7684c[i]\u5934\u725b\u8dd1s[i]\u7684\u8def\n    printf(\"%lld\",ans);\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1509422607,
        "uid": 36516,
        "name": "Magi_karp",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "\u4e00\u7c7b\u7ecf\u5178\u7684\u6811\u5f62dp\u95ee\u9898\u3002\n\n\u8003\u8651 f[i] \u8868\u8fbe\u4ee5i\u4e3a\u6839\u5b50\u6811\u4e2d\u5976\u725b\u5230i\u7684\u8ddd\u79bb\u548c\u3002\n\n\u7b2c\u4e00\u6b21dfs\u4ece\u4e0b\u81f3\u4e0a\u9012\u63a8\u51fa\u5404\u70b9\u7684 f[i] \u548c\u5b50\u6811\u5976\u725b\u6570 siz[i]\n\n\u753b\u56fe\u6613\u77e5\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848 d[i] \u6ee1\u8db3\u7684\u65b9\u7a0b \n```cpp\nd[v] = d[u] - siz[v]*a[i].w + (cnt - siz[v])*a[i].w;\n\n```\n\u901a\u8fc7\u7b2c\u4e8c\u6b21dfs\u63a8\u5f97\u5404\u70b9\u7684 d[i] \n\n\u663e\u7136\u6700\u5c0f\u7684 d[i] \u5373\u4e3a\u7b54\u6848 \n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cctype>\n#include<cmath>\n#define ll long long\nusing namespace std;\nconst int N = 1000005;\nconst ll INF = 1e55;\ninline int read() {\n    int s = 1, w= 0; char c = getchar();\n    for(; !isdigit(c); c=getchar()) if(c=='-') s = -1;\n    for(; isdigit(c); c=getchar()) w = 10*w+c-'0';\n    return s*w;\n}\n\nll m,n,ans=INF,cnt,inde,head[N],siz[N],c[N],f[N],d[N];\n\nstruct Edge{\n    ll nxt,to,w;\n}a[N];\n\ninline void add(int x,int y,int w){\n    a[++inde].to=y;\n    a[inde].nxt=head[x];\n    a[inde].w=w;\n    head[x]=inde;\n}\n\ninline void dfs (int u, int fa) {\n\tsiz[u] = c[u];\n\tfor(int i = head[u]; i; i = a[i].nxt) {\n\t\tint v = a[i].to;\n\t\tif(v == fa) continue;\n\t\tdfs(v,u);\n\t\tsiz[u] += siz[v];\n\t\tf[u] = f[u] + f[v] + siz[v] * a[i].w;\n\t}\n}\n\ninline void dp (int u, int fa) {\n\tfor(int i = head[u]; i; i = a[i].nxt) {\n\t\tint v = a[i].to;\n\t\tif(v == fa) continue;\n\t\td[v] = 1LL*d[u] - siz[v]*a[i].w + (cnt - siz[v])*a[i].w;\n\t\tans = min(ans, d[v]);\n\t\tdp(v,u);\n\t}\n}\n\nint main() {\n\tint u,v,w;\n\tn = read();\n\tfor(int i=1; i<=n; i++){\n\t\tc[i]=read(); \n\t\tcnt += c[i];\n\t}\n\tfor(int j=1; j<n; j++){\n\t\tu = read(); v = read(); w=read();\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t}\n\tdfs(1,0);\n\td[1]=f[1];\n\tans = min(ans, d[1]);\n\tdp(1,0);\n\tprintf(\"%lld\\n\", ans*1LL);\n\treturn 0;\n}\n```",
        "postTime": 1534234288,
        "uid": 49699,
        "name": "xfydemx",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "> \u9898\u89e3\u5c45\u7136\u6ee1\u4e86\uff0c\u7136\u540e\u6211\u7684\u65b9\u6cd5\u597d\u50cf\u548c\u522b\u4eba\u4e0d\u4e00\u6837\uff1f\u7ba1\u7406\u5927\u5927\u6c42\u8fc7qwq\uff08\r\n\r\n#### \u9898\u610f:\r\n\r\n\u672c\u9898\u8981\u6c42\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u7b54\u6848\u6700\u5c0f\uff0c\u9700\u8981\u5f97\u5230\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\r\n\r\n#### \u9898\u89e3\uff1a\r\n\r\n\u5176\u5b9e\u6211\u7684\u60f3\u6cd5\u5927\u6982\u5c31\u662f\u8d2a\u5fc3\u4e86\uff0c\u6211\u4eec\u8003\u8651\u4e00\u6761\u8fb9\uff1a $AB$\uff0c\u4e24\u8fb9\u7684\u5976\u725b\u6570\u5206\u522b\u4e3a $a$ \uff0c $b$  \u3002\u5c31\u50cf\u8fd9\u6837\uff1a\r\n\r\n![\u8fd9\u91cc\u5e94\u8be5\u6709\u56fe\u7247\uff1f](https://cdn.luogu.com.cn/upload/image_hosting/9fhm09wq.png)\r\n\r\n\u6211\u4eec\u8003\u8651\u8fd9\u91cc\u662f $A$ \u5904\u7684\u5976\u725b\u8d70\u5411 $B$ \u5904\u66f4\u4f18\uff0c\u8fd8\u662f\u76f8\u53cd\u7684\u9009\u62e9\u66f4\u4f18\u3002\r\n\r\n\u663e\u7136\uff0c\u6211\u4eec\u8ba9\u725b\u6570\u5c11\u7684\u8d70\u5411\u725b\u6570\u591a\u7684\u4e00\u8fb9\u7b54\u6848\u66f4\u4f18\u3002\r\n\r\n\u56e0\u6b64\uff0c\u6211\u4eec\u53d1\u73b0\u5f53\u4e00\u4e2a\u70b9\u7684 $c$ \uff08\u5f53\u7136\u4e0d\u4ec5\u4ec5\u662f\u8bfb\u5165\u7684 $c$ \u5566\uff09\u5927\u4e8e\u603b\u725b\u6570 $sum$ \u65f6\uff0c\u8fd9\u4e2a\u70b9\u663e\u7136\u5c31\u662f\u6700\u7ec8\u96c6\u5408\u70b9\u7684\u6700\u4f18\u89e3\u3002\r\n\r\n\u73b0\u5728\u6765\u8bb2\u8bb2\u5982\u4f55\u6765\u6c42\u8fd9\u4e2a $c$ \u3002\r\n\r\n\u6211\u4eec\u8bbe dp[u] \u4e3a\u4ee5 u \u4e3a\u8282\u70b9\u6811\u7684\u67d0\u4e00\u8fb9\u7684\u6240\u6709\u5976\u725b\u8d70\u5230 u \u7684\u6700\u4f18\u7b54\u6848\u3002\u5176\u4e2d $c$ \u5373\u4e3a\u8fd9\u4e00\u90e8\u5206\u7684\u5976\u725b\u603b\u6570\u3002\u662f\u4e0d\u662f\u5f88\u597d\u7406\u89e3\uff1f\r\n\r\n\u4e0d\u7406\u89e3\u6211\u8fd8\u6709\u56fe\uff1a\r\n\r\n![\u8fd9\u597d\u50cf\u4e5f\u5e94\u8be5\u6709\u5f20\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/pnl84abm.png)\r\n\r\n\u5176\u4e2d c[u] \u5c31**\u53ef\u4ee5**\u662f 1+1+1+2 = 5 \u4e86\u3002\r\n\r\n\u5f53\u7136\uff0c\u6309\u7167\u6211\u8fd9\u4e2a\u5b9a\u4e49\uff0c $c$ \u5e76\u4e0d\u662f\u4e00\u4e0b\u5b50\u5c31\u80fd\u591f\u76f4\u63a5\u786e\u5b9a\u7684\uff0c\u6211\u4eec\u9700\u8981\u7ed3\u5408\u7a0b\u5e8f\u6765\u770b\u3002\r\n\r\n\u6211\u7684\u65b9\u6cd5\u662f\u62d3\u6251\u6392\u5e8f\uff08\u6ca1\u60f3\u5230\u5427hhh\uff09\uff0c\u672c\u8d28\u662f\u4e00\u4e2a\u4ece\u6811\u7684\u53f6\u5b50\u5411\u91cc\u63a8\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5728\u62d3\u6392\u7684\u65f6\u5019\u6765\u66f4\u65b0 dp \u548c c \u3002\u5982\u679c\u53d1\u73b0\u67d0\u4e00 \u70b9 u \u6709 $c[u] > sum/2 $ \u90a3\u4e48 u \u5373\u4e3a\u96c6\u5408\u70b9\uff08u \u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u8bc1\u660e\u663e\u7136\uff09\uff0c\u8df3\u8fc7\u8fd9\u6b65\u5e76\u5c06 u \u8bb0\u4e3a ans \uff0c\u6700\u540e\u8f93\u51fa dp[ans] \u5373\u53ef\u3002\r\n\r\n\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <queue>\r\n#define ll long long \r\n#define re register \r\nusing namespace std;\r\n\r\nconst int N=1e6+7;\r\nll read()\r\n{\r\n\tll a = 0,x = 1;\r\n\tchar ch = getchar();\r\n\twhile(ch > '9' || ch < '0'){\r\n\t\tif(ch == '-') x = -1;\r\n\t\tch = getchar();\r\n\t}\r\n\twhile(ch >= '0' && ch <= '9'){\r\n\t\ta = a*10 + ch - '0';\r\n\t\tch = getchar();\r\n\t}\r\n\treturn a*x;\r\n}\r\nll c[N],n;\r\n\r\nint head[N],go[N],cnt,nxt[N],du[N];\r\nll val[N];\r\nvoid add(int u,int v,ll w)\r\n{\r\n\tgo[++cnt] = v;\r\n\tnxt[cnt] = head[u];\r\n\thead[u] = cnt;\r\n\tval[cnt] = w;\r\n\tdu[u] ++;\r\n}\r\nqueue<ll>q;\r\nll ins[N],dp[N],sum;\r\nint main()\r\n{\r\n\tn = read();\r\n\tfor(re int i = 1;i <= n;i ++){\r\n\t\tc[i] = read();\r\n\t\tsum += c[i];\r\n\t}\r\n\tfor(re int i = 1;i < n;i ++){\r\n\t\tint u = (int)read(),v = (int)read();\r\n\t\tll w = read();\r\n\t\tadd(u,v,w);add(v,u,w);\r\n\t}\r\n\tfor(re int i = 1;i <= n;i ++){\r\n\t\tif(du[i] <= 1){\r\n\t\t\tq.push(i);\r\n\t\t\tins[i] = 1;\r\n\t\t}\r\n\t}\r\n\tll ans = 0;\r\n\twhile(!q.empty()){\r\n\t\tll u = q.front();\r\n\t\tq.pop();\r\n\t\tif(c[u] > sum/2) {ans = u;continue;}\r\n\t\tfor(re int e = head[u];e;e = nxt[e]){\r\n\t\t\tll v = go[e];\r\n\t\t\t\r\n\t\t\tdp[v] += dp[u] + c[u]*val[e];\r\n\t\t\tc[v] += c[u];\r\n\t\t\tif(ins[v]) continue;\r\n\t\t\tdu[v] --;\r\n\t\t\tif(du[v] == 1){\r\n\t\t\t\tq.push(v);\r\n\t\t\t\tins[v] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"%lld\",dp[ans]);\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\n\u5199\u5728\u6700\u540e\uff1a\r\n\r\n- $c$ \u5b58\u7684\u5e94\u8be5\u662f\u4e24\u6bb5\u4e2d\u8f83\u5c0f\u7684\u503c\u5427\r\n- \u590d\u6742\u5ea6\u663e\u7136 O(n),\u9664\u975e\u4f60\u8bf4 stl \u7684 queue \u4e0d\u662f O(n) \u7684\r\n- \u4ee3\u7801\u8981\u662f\u6ca1\u6709\u9ad8\u4eae\u4e0d\u662f\u6211\u7684\u9505qwq\r\n- \u56fe\u7247\u4e11\u5c31\u51d1\u4ed8\u770b\uff0c\u522b\u55b7\u4e86",
        "postTime": 1591365486,
        "uid": 305911,
        "name": "\u5fd8\u6000\u661f",
        "ccfLevel": 0,
        "title": "P2986\u9898\u89e3"
    },
    {
        "content": "\u6881\u8001\u5e08\u8bf4\u5199\u9898\u89e3\u80fd\u63d0\u5347\u81ea\u5df1\u5bf9\u7b97\u6cd5\u7684\u7406\u89e3~\n\n\u672c\u9898\u89e3\u5305\u542b\u590d\u6742\u5ea6O\uff08N\u00b2\uff09\u590d\u6742\u5ea6\u66b4\u529b\u7b97\u6cd5\u53caO\uff08N\uff09\u590d\u6742\u5ea6dp\u7b97\u6cd5\uff0c\u4ee5\u53ca\u4ece\u66b4\u529b\u7b97\u6cd5\u5230dp\u7b97\u6cd5\u7684\u601d\u8003\u8fc7\u7a0b\u3002\n\nPS\uff1a\u672c\u4eba\u5728\u7b14\u8bb0\u672c\u4e0a\u5199\u51fa\u66b4\u529b\u7b97\u6cd5\u90e8\u5206\u9898\u89e3\u540e\uff0c\u5728\u5b66\u6821\u673a\u623f\u5199\u5b8c\u4e86\u5269\u4e0b\u7684\u9898\u89e3\uff0c\u8fd4\u56de\u7b14\u8bb0\u672c\u65f6\uff0c\u7f51\u9875\u5728\u6d1b\u8c37\u7684\u535a\u5ba2\u7f16\u8f91\u9875\u9762\u662f\u6253\u5f00\u7684\uff0c\u4e8e\u662f\u6309\u4e86\u4e00\u6b21\u63d0\u4ea4\u9898\u89e3\uff08\u6b64\u65f6\u7b14\u8bb0\u672c\u4e0a\u7684\u9898\u89e3\u53ea\u5305\u542b\u66b4\u529b\u7b97\u6cd5\uff09\uff0c\u4e8e\u662f\u5728\u5b66\u6821\u673a\u623f\u4e0a\u5199\u7684\u5b8c\u6574\u9898\u89e3\u88ab\u8986\u76d6\u4e86\uff0c\u545c\u545c\u545c\uff5e\uff5e\uff5e\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u9996\u5148\u60f3\u5230\u66b4\u529b\uff0c\u4ece\u6bcf\u4e00\u4e2a\u70b9\u5f00\u59cbdfs\uff0c\u8ba1\u7b97\u5f53\u524d\u70b9\u4e3a\u96c6\u5408\u70b9\u65f6\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\uff0c\u53d6\u6700\u5c0f\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u4e3a\u7b54\u6848\u3002\u6bcf\u4e00\u6b21dfs\u590d\u6742\u5ea6\u4e3aN\uff0c\u4e00\u5171\u8fdb\u884cN\u6b21\uff0c\u603b\u590d\u6742\u5ea6O(N\u00b2)\u3002\n\n\u5728\u6bd4\u8d5b\u4e0a\u9664\u975e\u770b\u5230\u4e00\u773c\u5c31\u79d2\u6740\u7684\u9898\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u4e00\u5b9a\u5148\u5199\u51fa\u66b4\u529b\u3002\u4e8e\u662f\u6211\u5148\u628a\u8fd9\u9053\u9898\u7684\u66b4\u529b\u7ed9\u6253\u51fa\u6765\u4e86\u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint N;\nint ora[100005];\nint head[100005];\nlong long ans = 0x3f3f3f3f3f;\nstruct edge{\n    int v,w,next;\n};\nedge ed[200005];\nint top;\nvoid addE(int u,int v,int w){\n    ed[++top].v = v;\n    ed[top].w = w;\n    ed[top].next=head[u];\n    head[u]= top;\n    ed[++top].v = u;\n    ed[top].w = w;\n    ed[top].next = head[v];\n    head[v] = top;\n}\nlong long coc[100005];\nlong long dfs(int u,int father){\n    coc[u] = ora[u];\n    long long res = 0;\n    for (int i = head[u]; i != 0; i=ed[i].next) {\n        int v = ed[i].v;\n        if(v==father){\n            continue;\n        }\n        int w = ed[i].w;\n        res += dfs(v,u);\n        res += w*coc[v];\n        coc[u]+=coc[v];\n    }\n    return res;\n}\nint main(){\n    scanf(\"%d\",&N);\n    for (int i = 1; i <= N; ++i) {\n        scanf(\"%d\",&ora[i]);\n        coc[i] = ora[i];\n    }\n    for (int j = 1; j <= N-1; ++j) {\n        int a,b,c;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        addE(a,b,c);\n    }\n    for (int i = 1; i <= N; ++i) {\n        ans = min(ans,dfs(i,0));\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n\u7b2c\u4e00\u6b21\u63d0\u4ea4AC4\u4e2a\u70b9\uff0cWA\u4e86\u7b2c5\u4e2a\u70b9\uff0cTLE\u4e865\u4e2a\u70b9\u3002\u5f00\u4e86long long\u540e\u8fd8\u662fWA\uff0c\u770b\u4e86\u773c\u9519\u8bef\u4fe1\u606f\uff0c\u8f93\u51fa\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e3a0\uff0c\u6b63\u786e\u7b54\u6848\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e3a3\u3002\u56e0\u4e3a\u5bf9\u6570\u5b57\u6709\u70b9\u654f\u611f\uff0c\u6240\u4ee5\u60f3\u5230\u4e860x3f3f3f3f\u7684\u7b2c\u4e8c\u4e2a\u6570\u5b57\u662f0\uff0c\u731c\u5230\u4e86\u4f30\u8ba1\u662f\u521d\u8bc6\u5316\u5c0f\u4e86\uff0c\u5728\u540e\u9762\u8865\u4e861\u4e2a3f\u3002\u518d\u6b21\u63d0\u4ea4\uff0cAC\u524d5\u4e2a\u70b9\uff0cTLE\u540e5\u4e2a\u70b9\uff0c\u6210\u529f\u62ff\u5230\u5230\u66b4\u529b\u520650\u5206\uff5e\n\n\u63a5\u4e0b\u6765\u7ee7\u7eed\u60f3\uff0c\u56e0\u4e3a\u8001\u5e08\u544a\u8bc9\u8fc7\u8fd9\u9898\u662f\u5f88\u7ecf\u5178\u7684\u6811\u4e0adp\u9898\uff0c\u53ef\u4ee5O\uff08N\uff09\u8fc7\uff0c\u6240\u4ee5\u5728\u5f80\u9012\u63a8\u90a3\u8fb9\u60f3:P\n\n\u4e00\u6b21DFS\uff0c\u53ea\u80fd\u77e5\u9053\u6839\u8282\u70b9\u7684\u4e0d\u65b9\u4fbf\u6570\u3002\u5982\u679c\u60f3\u590d\u6742\u5ea6O\uff08N\uff09\u7684\u60c5\u51b5\u4e0b\u6c42\u51fa\u7b54\u6848\u3002\u770b\u6765\u9700\u8981\u9012\u63a8\u3002\n\n\u56e0\u4e3a\u6211\u7684\u66b4\u529b\u5199\u6cd5\u4e0a\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u7684\u603b\u5976\u725b\u6570\uff08coc\u6570\u7ec4\uff09\uff0c\u6240\u4ee5\u5f88\u5feb\u60f3\u51fa\u4e86dp\u5199\u6cd5\uff5e\n\n\u5982\u679c\u7b2c\u4e00\u6b21dfs\u8ba9\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u70b9u\u7684\u5976\u725b\u6570coc\\[u\\]\u3001u\u70b9\u7684\u4e0d\u65b9\u4fbf\u6570cnt\uff0c\u5176\u5b50\u8282\u70b9v\u7684\u5976\u725b\u6570coc\\[v\\]\uff0cu\u70b9\u5230v\u7684\u7684\u8def\u5f84\u957f\u5ea6w\uff0c\u5982\u4f55\u63a8\u5f97v\u70b9\u7684\u4e0d\u65b9\u4fbf\u6570\u5462\uff1f\n\n\u76f4\u63a5\u8ba9u\u70b9\u53cau\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u7684\u5976\u725b\u8d70\u5230v\u70b9\u5c31ok\u554a\uff01\u4eceu\u70b9\u8981\u8d70\u5230v\u70b9\u7684\u5976\u725b\u6570\u4e3acoc\\[u\\]-coc\\[v\\]\uff0c\u5976\u725b\u603b\u8def\u7a0b\u4e3a\uff08coc\\[u\\]-coc\\[v\\]\uff09*w\u3002\u540c\u65f6\uff0c\u6765\u81eav\u70b9\u7684\u5976\u725b\u662f\u201c\u9000\u56de\u53bb\u201d\u7684\uff0c\u8fd8\u9700\u8981\u51cf\u53bbcoc\\[v\\]*w\u3002\n\n\u56e0\u6b64\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662fcntv = cnt+(coc\\[u\\]-coc\\[v\\])*w-coc\\[v\\]*w\n\n\u6ce8\u610f1:\u56e0\u4e3au\u70b9\u7684\u5976\u725b\u90fd\u8d70\u5230v\u70b9\u4e86\uff0c\u5e76\u4e14v\u70b9\u8fd8\u9700\u8981\u5f80\u4e0b\u9012\u5f52\uff0c\u6240\u4ee5\u9700\u8981\u5c06coc\\[v\\]\u8d4b\u503c\u4e3acoc\\[u\\]\n\n\u6ce8\u610f2:\u6b64\u9898\u7684ans\u521d\u59cb\u503c\u9700\u8981\u6bd4\u8f83\u5927\u3002\u672c\u4eba\u63d0\u4ea4\u7b2c1\u6b21\uff0c80\u5206\uff0c\u5c06ans\u7684\u521d\u59cb\u503c\u540e\u9762\u52a0\u4e861\u4e2a3f\u540e\u53d8\u6210\u4e8690\u5206\uff0c\u518d\u52a0\u4e86\u4e00\u4e2a3f\u540e\u624dAC\u3002\u3002\u3002\n\n\u4e0b\u9762\u9644\u4e0aO\uff08N\uff09\u590d\u6742\u5ea6dp\u4ee3\u7801\uff5e\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint N;\nint ora[100005];\nint head[100005];\nlong long ans = 0x3f3f3f3f3f3f3f3f;\nstruct edge{\n    int v,w,next;\n};\nedge ed[200005];\nint top;\nvoid addE(int u,int v,int w){\n    ed[++top].v = v;\n    ed[top].w = w;\n    ed[top].next=head[u];\n    head[u]= top;\n    ed[++top].v = u;\n    ed[top].w = w;\n    ed[top].next = head[v];\n    head[v] = top;\n}\nlong long coc[100005];\nlong long cnt;\nlong long dfs1(int u,int father){\n    coc[u] = ora[u];\n    long long res = 0;\n    for (int i = head[u]; i != 0; i=ed[i].next) {\n        int v = ed[i].v;\n        if(v==father){\n            continue;\n        }\n        int w = ed[i].w;\n        res += dfs1(v,u);\n        res += w*coc[v];\n        coc[u]+=coc[v];\n    }\n    return res;\n}\nvoid dfs2(int u,int father){\n//\tprintf(\"u :%d %d\\n\",u,cnt);\n\tlong long tmp = cnt;\n\tans = min(ans,tmp);\n\tfor(int i = head[u]; i != 0; i = ed[i].next){\n\t\tint v = ed[i].v;\n\t\tif(v==father){\n\t\t\tcontinue;\n\t\t}\n\t\tint w = ed[i].w;\n\t\tcnt += (coc[u]-coc[v])*w;\n\t\tcnt -= coc[v]*w;\n\t\tint k = coc[v];\n\t\tcoc[v]=coc[u]; //\u628a\u5976\u725b\u501f\u7ed9\u4e0b\u9762\u7684\u70b9 \n\t\tdfs2(v,u);\n\t\tcoc[v]=k;\n\t\tcnt = tmp;\n\t}\n}\nint main(){\n    scanf(\"%d\",&N);\n    for (int i = 1; i <= N; ++i) {\n        scanf(\"%d\",&ora[i]);\n        coc[i] = ora[i];\n    }\n    for (int j = 1; j <= N-1; ++j) {\n        int a,b,c;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        addE(a,b,c);\n    }\n\tcnt = dfs1(1,0);\n\tdfs2(1,0);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1569947977,
        "uid": 65941,
        "name": "welen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "### \u9898\u89e3\u3002\n \u601d\u8def\uff1a\u521a\u5f00\u59cb\u505a\uff0c\u6c42\u6811\u7684\u91cd\u5fc3\u52a0\u4e0aSPFA\uff0c\u611f\u89c9\u8ddf[\u533b\u9662\u8bbe\u7f6e](https://www.luogu.com.cn/problem/P1364)\u4e00\u6837\uff0c\u5c31\u662f\u6570\u636e\u8303\u56f4\u8f83\u5927\uff0c$N\\le100000$\uff0c\u800c\u4e14\u8fb9\u6743\u4e0d\u4e3a$1$,\u6240\u4ee5\u4e0d\u80fd\u50cf\u533b\u9662\u8bbe\u7f6e\u4e00\u6837\u7528\u90bb\u63a5\u77e9\u9635\u4e86\uff0c\u4e8e\u662f\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u51e0\u5206\u949f\u641e\u5b8c\u3002\u4ea4\u4e0a\u53bb$90$\u5206\uff08\u61f5\u903c\uff09\uff0c\u7136\u540e\u9020\u4e86\u51e0\u7ec4\u6570\u636e\u53d1\u73b0\uff0c\u6709\u8fb9\u6743\u7684\u6811\u7684\u7b54\u6848\u4e0d\u4e00\u5b9a\u5728\u91cd\u5fc3\u4e0a\u3002\n \n [$90$\u5206](https://www.luogu.com.cn/record/32155017)\uff08\u5f88\u795e\u5947\u7684\u6570\u636e\uff09\u3002\n \n \u4e8e\u662f\u7ecf\u8fc7\u8001\u5e08\u7684\u6559\u5bfc\uff0c\u6210\u529f\u5b66\u4e60\u5230\u4e86\u8fd9\u9898\u7684\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\n \n \u7b2c\u4e8c\u6b21\u601d\u8def\uff1a\u5148\u641c\u4e24\u904d\u6811\uff0c\u90fd\u4ee5$1$\u4e3a\u6839\uff0c\u7b2c\u4e00\u904d\u6c42\u51fa\u5047\u5982\u5976\u725b\u4eec\u90fd\u5230$1$\u96c6\u4f1a\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u548c\u6539\u826f\u7248\u7684\u5b50\u6811\u8282\u70b9\u6570\uff08\u6539\u6210\u70b9\u6743\uff09\u3002\u5373\u5982\u4e0b\uff1a\n \n ```cpp\nvoid tree(int x,int f) {//\u6b63\u5e38\u7684\u5b50\u6811\u8282\u70b9\u3002\n\td[x]=1;//\u6b63\u5e38\u53ea\u89811.\n\tfor(int i=b[x]; i; i=a[i].next) {\n\t\tint v=a[i].v;\n\t\tif(v==f)continue;\n\t\ttree(v,x);\n\t\td[x]+=d[v];\n\t}\n}\n```\n```\nvoid tree(int x,int f) {//\u6b64\u9898\u7684\u5b50\u6811\u70b9\u6743\u503c\u3002\n\td[x]=c[u];//c\u6570\u7ec4\u4e3a\u6b64\u9898\u4e2d\u5404\u4e2a\u70b9\u7684\u5976\u725b\u6570\u3002\n\tfor(int i=b[x]; i; i=a[i].next) {\n\t\tint v=a[i].v;\n\t\tif(v==f)continue;\n\t\ttree(v,x);\n\t\td[x]+=d[v];\n\t}\n\treturn;\n}\n```\n\u5176\u4e2d\u6570\u7ec4\u542b\u4e49\u53ef\u4ee5\u5bf9\u7167\u5f85\u4f1a\u7684\u5b8c\u6574\u4ee3\u7801\u3002\n\n\u7b2c\u4e8c\u904d\u641c\u7d22\u5f53\u8f6c\u79fb\u5230\u5176\u4ed6\u70b9\u96c6\u4f1a\u65f6\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\uff0c\u6b64\u65f6\u53ef\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff1a[\u8fd8\u662f\u533b\u9662\u8bbe\u7f6e](https://www.luogu.com.cn/problem/P1364)\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/166.png)\n\n\u53ef\u4ee5\u770b\u51fa$1$\u5904\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u4e3a\uff1a$4\\times1+13\\times0+12\\times1+20\\times2+40\\times2=136$\u3002\n\n\u5f53\u8f6c\u79fb\u81f3$3$\u5904\u65f6\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u4e3a\uff1a$4\\times2+13\\times1+12\\times0+20\\times1+40\\times1=81$\n\n\u6211\u4eec\u53d1\u73b0$3$\u5904\u53ca\u5176\u5b50\u6811\u7684\u70b9\u7684\u8def\u7a0b\u90fd\u5c11\u4e86$1$\uff0c\u800c$3$\u5904\u5b50\u6811\u5916\u7684\u70b9\u7684\u8def\u7a0b\u589e\u591a\u4e86$1$\uff0c\u800c\u4e14\u5176\u4e2d\u6bcf\u4e2a\u5355\u9879\u5f0f\u56e0\u4e3a\u56e0\u4e3a\u8fb9\u6743\u4e3a$1$\u7684\u7f18\u6545\u5176\u5b9e\u5c11\u4e86$\\times1$\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u65b9\u7a0b\uff1a$e(v)=e(u)-d(v)\\cdot a(i).w+(s-d(v))\\cdot a(i).w$\n\n\u4ee3\u5165\u4f8b\u5b50\u5373$3$\u70b9\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u7b49\u4e8e\uff0c$1$\u70b9\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u51cf\u53bb$3$\u70b9\u7684\u5b50\u6811\u70b9\u6743\u503c\u4e58\u8f6c\u79fb\u7684\u8fb9\u7684\u8fb9\u6743\uff0c\u52a0\u4e0a$3$\u70b9\u5916\u7684\u5b50\u6811\u70b9\u6743\u503c\u4e58\u8f6c\u79fb\u7684\u8fb9\u4e58\u8fb9\u6743\u3002\u5373$136-72\\times1+(89-72)\\times1=81$\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u5f00\u5fc3\u5730\u5199\u4ee3\u7801\u4e86\u3002\n\n\u3010\u4ee3\u7801\u3011\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long n,u,v,w,k=0,s=0,ans=1e18,b[1000000],c[1000000],d[1000000];//\u5f00\u4e86long long\uff0cans\u7684\u503c\u4e5f\u8981\u81ea\u7136\u6539\u5927\uff0c\u5426\u5219\u4f1a60\u5206\u3002\nlong long e[1000000],f[1000000];//\u8bb0\u5f97\u8981\u5f00long long\u5426\u5219\u4f1a\u9519\u3002\nstruct sb {\n\tlong long u,v,w,next;\n};\nsb a[1000000];\nvoid rtt(int u,int v,int w) {\n\ta[++k].u=u;\n\ta[k].v=v;\n\ta[k].w=w;\n\ta[k].next=b[u];\n\tb[u]=k;\n\treturn;\n}\nvoid tree(int u,int f) {\n\td[u]=c[u];//\u5f00\u5934\u5df2\u8bb2\u3002\n\tfor(int i=b[u]; i; i=a[i].next) {\n\t\tint v=a[i].v;\n\t\tif(v==f)continue;\n\t\ttree(v,u);\n\t\td[u]+=d[v];//\u5f00\u5934\u5df2\u8bb2\u3002\n\t\te[u]+=e[v]+a[i].w*d[v];//\u5728\u7b2c\u4e00\u904d\u8ba1\u7b97\u51fa\u5976\u725b\u4eec\u52301\u96c6\u4f1a\u65f6\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u3002\n\t}\n}\nvoid tre(int u,int fa) {\n\tfor(int i=b[u]; i; i=a[i].next) {\n\t\tint v=a[i].v;\n\t\tif(v==fa)continue;\n\t\te[v]=e[u]-d[v]*a[i].w+(s-d[v])*a[i].w;//\u8ba1\u7b97\u524d\u5f80\u70b9\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u3002\n\t\tans=min(ans,e[v]);//\u5982\u679c\u66f4\u5c0f\uff0c\u5c31\u66f4\u65b0\u7b54\u6848\u3002\n\t\ttre(v,u);\n\t}\n}\nint main() {\n//\tfreopen(\"P2986.txt\",\"r\",stdin);\n//\tfreopen(\"P2986.out\",\"w\",stdout);\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) {\n\t\tcin>>c[i];\n\t\ts+=c[i];//\u8ba1\u7b97\u5976\u725b\u603b\u6570\u3002\n\t}\n\tfor(int i=1; i<n; i++) {\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\trtt(u,v,w);\n\t\trtt(v,u,w);\n\t}\n\ttree(1,0);//\u7b2c\u4e00\u904d\u641c\u7d22\u3002\n\tfor(int i=2; i<=n; i++)e[i]=1e18;//\u9664\u4e86\u7b2c\u4e00\u70b9\u7684\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u5176\u4ed6\u70b9\u90fd\u8981\u91cd\u7f6e\u3002\n\ttre(1,0);//\u7b2c\u4e8c\u904d\u641c\u7d22\u3002\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u5b8c\u7ed3\u6492\u82b1\u3002",
        "postTime": 1585281114,
        "uid": 221128,
        "name": "\u4e28Sky\u706c\u4e28\u65e0\u60e7",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]Great Cow Gathering G\u3011"
    },
    {
        "content": "\u8ddd\u79bb\u9000\u5f79\u8fd8\u6709  200\u591a\u5c0f\u65f6   \u5509\uff0c\u9ad8\u4e8c\u5f97\u6211\u6015\u662f\u51c9\u4e86  \u3002\n\n\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u6765\u60f3\n\n\n\u5bf9\u4e8e\u90e8\u5206\u5206\u8d77\u5230\u5f15\u8d77\u601d\u8003\u7684\u4f5c\u7528\n\n\u5c31\u662f\u8bf4\u6211\u4eec\u8fd9\u4e2a\u9898\u5982\u679c\u66b4\u529b\u7684\u505a\u7684\u8bdd\u662fn^2\u7684\u90a3\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u4f18\u5316\u5462\u3002\n\n\u540e\u6765\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e   \u7236\u8282\u70b9x\u8f6c\u79fb\u5230\u4ed6\u7684\u4efb\u610f\u4e00\u5b50\u8282\u70b9\u90fd\u662f01\u7684\uff08\u524d\u63d0\u662f\u9884\u5904\u7406\u51fa\u8ddd\u79bb\uff0c\u548c\u6709\u591a\u5c11\u5976\u725b\uff09\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u5230on\u89e3\u51fa\n\n \n\n\u518d\u8bb2\u70b9\u4e8b\u60c5\u89e3\u6551\u672c\u9898\u7684\u901a\u8fc7\u7387\uff0c\u4e00\u4e9b\u8ff7\u4e4b\u6570\u636e   \u8ba9\u62111/10\u7684\u65f6\u95f4\u84b8\u53d1\u4e86\n\n\u5c31\u662f\u6211\u4eec\u8981\u627e\u6700\u5c0f\u503c\u4f46  \u7531\u4e8e\u9898\u76ee\u6570\u636e\u8f83\u5927  \u5f00\u5c0f\u4e86\u4f1a\u5bfc\u81f4\u8fc7\u4e0d\u4e86\n\n\u6211\u7684\u7a0b\u8fd8\u662f   @\u521d\u4e2dGunbuster\u5927\u4f6c\u5e2e\u8c03\u7684\n\nans\u521d\u503c\u5c31\u4ed81000000000000005ull;\u5c31\u597d\u4e86\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define  ll long long\nconst int maxn=1e5+5;\nconst int maxm=3e5+5;\nusing namespace std;\nll n,c[maxn];\nll first[maxn],nxt[maxm];\nll a[maxm],b[maxm],l[maxm];\nll vis[maxn];\nll ju[maxn];\nll dp[maxn];\nll son[maxn];\nll sum;\nvoid dfs1(int x){\n        vis[x]=1;\n    ll k=first[x];\n    while(k!=-1){    \n       if(!vis[b[k]]){\n           ju[b[k]]=ju[x]+l[k] ; \n           dfs1(b[k]);\n           son[x]+=son[b[k]];\n           }\n         k=nxt[k];\n    }\n    return ;\n}\nvoid dfs2(int x){\n    vis[x]=1;\n        ll k=first[x];\n    while(k!=-1){\n        if(!vis[b[k]]){\n        dp[b[k]]=dp[x]-son[b[k]]*l[k]+(sum-son[b[k]])*l[k];         \n        dfs2(b[k]);\n         }\n        k=nxt[k];\n    }\n    return;\n}\nint main(){\n    cin>>n;\n    for(ll i=1;i<=2*n;i++)\n        first[i]=-1;\n    for(ll i=1;i<=n;i++){\n        cin>>c[i];\n        son[i]+=c[i];\n        sum+=c[i];\n    }\n    for(ll i=1;i<=2*(n-1);i++){\n       cin>>a[i]>>b[i]>>l[i];\n       nxt[i]=first[a[i]];\n       first[a[i]]=i;\n       i++;\n       a[i]=b[i-1];b[i]=a[i-1];l[i]=l[i-1];\n       nxt[i]=first[a[i]];\n       first[a[i]]=i;\n    }\n    dfs1(1);\n    for(ll i=2;i<=n;i++){\n       dp[1]+=ju[i]*c[i];\n       vis[i]=0;\n    }\n    dfs2(1);\n    ll ans=1000000000000005ull;\n    for(ll i=1;i<=n;i++)\n       ans=min(ans,dp[i]);\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1509541038,
        "uid": 23992,
        "name": "bingliang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "### \u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u6bcf\u4e00\u9897\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u5934\u725b\uff0c\u6211\u4eec\u8fd8\u77e5\u9053\u603b\u5171\u6709\u591a\u5c11\u5934\u725b\u3002\u73b0\u5728\u53ea\u8981\u6c42\u51fa\u5728\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u96c6\u5408\u7684\u82b1\u8d39\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5O(1)\u8f6c\u79fb\u5230\u76f8\u90bb\u7684\u8282\u70b9\u3002\u8fd9\u4e00\u6837\u5c31\u53ef\u4ee5O(n)\u5f97\u5230\u6240\u6709\u7684\u8282\u70b9\u7684\u82b1\u8d39\u3002\u5177\u4f53\u600e\u4e48\u8f6c\u79fb\u5462\uff1f\n\n### \u5230\u67d0\u4e00\u4e2a\u8282\u70b9\u96c6\u5408\u7684\u82b1\u8d39\u662f\u7531\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u6811\u7684\u725b\u548c\u7236\u4eb2\u90a3\u8fb9\u6240\u6709\u725b\u5e26\u6765\u7684\u3002\u5bf9\u4e8e\u8282\u70b9x,\u5982\u679c\u6211\u4eec\u4ece\u5b83\u7684\u7236\u8282\u70b9\u8f6c\u79fb\u8fc7\u6765\uff0c\u90a3\u4e48\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u725b\u5230\u8fd9\u4e2a\u8282\u70b9\u6bd4\u5230\u7236\u8282\u70b9\u5c11\u8d70\u4e86\u8fd9\u6761\u8fb9\u7684\u8def\u7a0b\uff0c\u800c\u7236\u8282\u70b9\u7684\u725b\u591a\u8d70\u4e86\u8fd9\u4e48\u591a\u8def\u7a0b\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u7b97\u5c31\u53ef\u4ee5\u7b97\u51fa\u4ece\u7236\u8282\u70b9\u5230\u5b50\u8282\u70b9\u7684\u82b1\u8d39\u53d8\u5316\u91cf\u3002\n\n### \u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981O(1)\u6c42\u51fa\u52301\u53f7\u8282\u70b9\u7684\u82b1\u8d39\uff0c\u8fd9\u4e48\u8f6c\u79fb\u5c31\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u8282\u70b9\u7684\u82b1\u8d39\u3002\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <cstdio>\n\n#define MX 200002\n\nusing namespace std;\n\nint c[MX],u[MX],v[MX],w[MX],lnum;\nint n,fst[MX],nxt[MX];\nlong long f[MX],totc;\n\nvoid addeg(int nu,int nv,int nw)\n{\n    nxt[++lnum]=fst[nu],fst[nu]=lnum,u[lnum]=nu,v[lnum]=nv,w[lnum]=nw;\n}\n\nvoid input()\n{\n    int a,b,l;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&c[i]),totc+=c[i];\n    for(int i=1;i<=n-1;i++)scanf(\"%d%d%d\",&a,&b,&l),addeg(a,b,l),addeg(b,a,l);\n}\n\nlong long num[MX],dis[MX];\nvoid sch1(int x,int fa)\n{\n    num[x]=c[x];\n    for(int i=fst[x];i;i=nxt[i])\n    {\n        if(v[i]==fa)continue;\n        sch1(v[i],x);\n        num[x]+=num[v[i]];\n        dis[x]+=dis[v[i]]+num[v[i]]*w[i];\n    }\n}\n\nlong long mn=999999999999999;\n\nvoid sch2(int x,int fa)\n{\n    mn=min(mn,f[x]);\n    for(int i=fst[x];i;i=nxt[i])\n    {\n        if(v[i]==fa)continue;\n        f[v[i]]=f[x]+(totc-num[v[i]])*w[i]-num[v[i]]*w[i];\n        sch2(v[i],x);\n    }\n}\n\nint main()\n{\n    input();\n    sch1(1,0);\n    f[1]=dis[1];\n    sch2(1,0);\n    cout<<mn<<endl;\n    return 0;\n}\n```\n### CodeForces219D\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u505a\n",
        "postTime": 1497930924,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "\u8003\u8651\u6811\u5f62DP\u3002\n\n\u6211\u4eec\u8bbe$dp[u]$\u4e3a\u4ee5$u$\u4e3a\u6c47\u5408\u70b9\u7684\u6240\u6709\u5976\u725b\u7684\u884c\u8d70\u8ddd\u79bb\u548c\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u5b50\u6811\u5185\u7684\u60c5\u51b5\uff08\u8bbe\u4e3a$dp1$\uff09\uff0c\n\n\u5f53\u6211\u4eec\u628a\u513f\u5b50\u8282\u70b9$v$\u5411\u4e0a\u8f6c\u79fb\u65f6\uff0c\u513f\u5b50\u8282\u70b9\u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u8282\u70b9\u90fd\u8981\u5148\u8d70\u5230$v$\u8282\u70b9\u518d\u8d70$e(u,v)$\u8fd9\u6761\u8fb9\u5230$u$\u8282\u70b9\u3002\n\n\u6240\u4ee5\u5bf9$dp1[u]$\u7684\u8d21\u732e\u4e3a$dp1[v]+siz[v]*e(u,v)$  ($siz[u]$\u8868\u793a$u$\u5b50\u6811\u5185\u7684\u6240\u6709\u8282\u70b9\u7684\u5976\u725b\u6570\u4e4b\u548c)\n\n\u518d\u8003\u8651\u5b50\u6811\u5916\u7684\u60c5\u51b5\uff08\u8bbe\u4e3a$dp2$\uff09\uff0c\n\n\u5bf9\u4e8e$u$\u7684\u513f\u5b50$v$\uff0c$u$\u5b50\u6811\u4ee5\u5916\u7684\u8282\u70b9\u4e00\u5b9a\u8981\u8d70\u5230$u$\u518d\u901a\u8fc7$e(u,v)$\u8fd9\u6761\u8fb9\u5230\u8fbe$v$\u8282\u70b9\uff0c\u540c\u65f6$v$\u7684\u5144\u5f1f\u8282\u70b9\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u90fd\u8981\u8d70\u5230$u$\u518d\u901a\u8fc7$e(u,v)$\u8fd9\u6761\u8fb9\u8d70\u5230$v$\u3002\n\n\u6240\u4ee5$u$\u5bf9$dp2[v]$\u7684\u8d21\u732e\u4e3a\uff1a\n\n$dp2[u]+dp1[u]-(dp1[v]+siz[v]*e(u,v))+(siz[1]-siz[v])*e(u,v)$\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\n\n\u8bb0\u5f97\u5f00**long long**\uff01\n\ncode:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\nstruct nod{\n\tint v;\n\tll w;\n\tint nxt;\n}e[200010];\nint n,m,h[100010],cnt;\nll dp1[100010],dp2[100010],siz[100010],val[100010],ans=1e18;\nvoid add(int u,int v,ll w)\n{\n\te[++cnt].v=v;\n\te[cnt].w=w;\n\te[cnt].nxt=h[u];\n\th[u]=cnt;\n}\nvoid dfs(int u,int fa)//\u8ba1\u7b97\u5b50\u6811\u5185\u7684dp\u503c\n{\n\tsiz[u]=val[u];\n\tfor(int i=h[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;ll w=e[i].w;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tdp1[u]+=dp1[v]+siz[v]*w;\n\t}\n}\nvoid dfs1(int u,int fa)//\u8ba1\u7b97\u5b50\u6811\u5916\u7684dp\u503c\n{\n\tfor(int i=h[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;ll w=e[i].w;\n\t\tif(v==fa) continue;\n\t\tdp2[v]=dp2[u]+dp1[u]-(dp1[v]+siz[v]*w)+(siz[1]-siz[v])*w;\n\t\tdfs1(v,u);\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%lld\",&val[i]);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;ll w;\n\t\tscanf(\"%d%d%lld\",&u,&v,&w);\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t}\n\tdfs(1,0);\n\tdfs1(1,0);\n\tfor(int i=1;i<=n;i++)\n\tans=min(ans,dp1[i]+dp2[i]);//\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u6c47\u5408\u70b9\n\tprintf(\"%lld\",ans);\n}\n```\n",
        "postTime": 1573700251,
        "uid": 103029,
        "name": "James_Brady",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "\u611f\u89c9\u81ea\u5df1\u601d\u8def\u6bd4\u8f83\u590d\u6742\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u5148\u8003\u8651\u53ea\u4ece\u513f\u5b50\u90a3\u8fb9\u8fc7\u6765\u7684\u8def\u7a0b\u4e4b\u548c\u3002\u8fd9\u663e\u7136\u53ef\u4ee5\u7528\u6811\u5f62$dp$\u6765\u89e3\u51b3\u3002\n\n\u6211\u4eec\u8bbe$f[x]$\u8868\u793a\u4ece$x$\u7684\u6240\u6709\u513f\u5b50\u5230$x$\u7ed3\u70b9\u7684\u8def\u7a0b\u4e4b\u548c\uff0c$size[x]$\u8868\u793a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u603b\u5171\u6709\u591a\u5c11\u53ea\u5976\u725b\uff0c\u4e0d\u5305\u62ec$x$\u7ed3\u70b9\u3002\u7b80\u5355\u601d\u8003\u53ef\u4ee5\u63a8\u51fa\uff1a\n\n$$f[x] = \\sum_{v \\in son}(f[v] + size[v]\u00d7dis(x,v))$$\n\n\u518d\u8003\u8651\u4ece\u7236\u4eb2\u90a3\u8fb9\u8fc7\u6765\u7684\u8def\u7a0b\u4e4b\u548c\uff0c\u6211\u4eec\u7b80\u5355\u7684\u63a8\u4e00\u63a8\uff1a\n\n\u8bbe$g[x]$\u8868\u793a\u4ece$x$\u7684\u7956\u5148\u5230$x$\u7ed3\u70b9\u7684\u8def\u7a0b\u4e4b\u548c\u3002\n\n\u6211\u4eec\u8003\u8651$g[x]$\u4ece\u7236\u4eb2\u90a3\u91cc\u8f6c\u79fb\uff0c\u9996\u5148\u8981\u52a0\u4e0a\u4ee5\u7236\u4eb2\u4e3a\u6839\u3001\u622a\u6389\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811 \u7684\u5b50\u6811\u91cc\u6240\u6709\u7684\u7ed3\u70b9\u5230\u7236\u4eb2\u90a3\u91cc\u7684\u8def\u7a0b\u4e4b\u548c\uff0c\u5373$f[fa]-f[x]-(size[x]\u00d7dis(fa,x))$\uff0c\u7136\u540e\u80af\u5b9a\u8981\u52a0\u4e0a\u7236\u4eb2\u7684\u7956\u5148\u90a3\u8fb9\u7684\u8def\u7a0b\u4e4b\u548c\u5373$g[fa]$\uff0c\u6700\u540e\u8fd8\u8981\u52a0\u4e0a\u9664\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u5916\uff0c\u5176\u4ed6\u7ed3\u70b9\u7684\u6240\u6709\u5976\u725b\u5230$x$\u7ed3\u70b9\u7684\u8def\u7a0b\u4e4b\u548c\u3002\n\u8bbe$sum=\\sum c[i]$\u5373\u6811\u4e2d\u6240\u6709\u5976\u725b\uff0c\u90a3\u4e48\u53ef\u4ee5\u8868\u793a\u4e3a$(sum - size[x]) \u00d7 dis(x,fa)$\u3002\n\n\u6700\u7ec8\u6211\u4eec\u5f97\u51fa\uff1a\n\n$$g[x] = f[fa]-f[x]-(size[x]\u00d7dis(fa,x))+g[fa]+(sum - size[x]) \u00d7 dis(x,fa)$$\n\n\u7b54\u6848\u4e3a$min \\{f[i]+g[i] \\}$\n\n\u5176\u5b9e\u770b\u4f3c\u590d\u6742\uff0c\u81ea\u5df1\u7b80\u5355\u753b\u4e00\u753b\u56fe\u4e5f\u5c31\u80fd\u5f88\u597d\u7684\u7406\u89e3\u4e86\u3002\n\n## Code\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <cstring>\n#include <algorithm>\n\n#define N 100005\n#define ll long long\n\nusing namespace std;\n\nll size[N] , c[N] , f[N] , g[N] , sum = 0 , ans = 100000000000000;\nstruct Edge{\n\tint to , next , val;\n}edge[N << 1];\nint head[N] , tot = 0;\nint n;\n\nvoid add(int u , int v , int d){\n\tedge[++tot].to = v;\n\tedge[tot].val = d;\n\tedge[tot].next = head[u];\n\thead[u] = tot;\n}\n\nvoid solve1(int x , int fa){\n\tsize[x] = c[x];\n\tfor(int i = head[x]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif(v == fa) continue;\n\t\tsolve1(v , x);\n\t\tsize[x] += size[v];\n\t\tf[x] += f[v] + size[v] * edge[i].val;\n\t}\n}\n\nvoid solve2(int x , int fa){\n\tfor(int i = head[x]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif(v != fa) continue;\n\t\tg[x] = f[v] - f[x] - (size[x] * edge[i].val) + g[v] + (sum - size[x]) * edge[i].val;\n\t}\n\tfor(int i = head[x]; i; i = edge[i].next){\n\t\tif(edge[i].to != fa)\n\t\t\tsolve2(edge[i].to , x);\n\t}\n}\n\nint main(){\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++){\n\t\tscanf(\"%lld\" , &c[i]);\n\t\tsum += c[i];\n\t}\n\tfor(int i = 1; i < n; i++){\n\t\tint u , v , d;\n\t\tscanf(\"%d%d%d\" , &u , &v , &d);\n\t\tadd(u , v , d);\n\t\tadd(v , u , d);\n\t}\n\t\n\tsolve1(1 , 0);\n\tsolve2(1 , 0);\n\t\n\tfor(int i = 1; i <= n; i++) ans = min(ans , f[i] + g[i]);\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1572278106,
        "uid": 35584,
        "name": "KillerXu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u6211\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u7a76\u6781\u8111\u762b\u3002\u3002\n\n\u7b2c\u4e00\u6b21\u63d0\u4ea4\u5fd8\u5f00 $long\\ long$ \uff0c\u53ea\u6709 $50$ \u5206\uff1b\n\n\u7b2c\u4e8c\u6b21\u63d0\u4ea4\u8f93\u51fa\u5fd8\u5f00 $long\\ long$ \uff0c\u53ea\u6709 $70$ \u5206\u3002\u3002\u3002\n\n\u65e0\u8bed\u81f3\u6781\u3002\u3002\n\n# \u9898\u9762\n\n[\u9898\u9762](https://www.luogu.org/problem/P2986)\n\n# Solution\n\n\u8981\u627e\u51fa\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97 $\\sum\\limits_{j!=rt} dis_j\\cdot c_j$ \u6700\u5c0f\u3002\n\n\u8003\u8651\u6362\u6839\u3002\n\n\u5148\u6c42\u51fa\u4ee5 $1$ \u53f7\u70b9\u4e3a\u6839\u8282\u70b9\u65f6\u7684\u7b54\u6848\uff0c\u540c\u65f6\u8bb0\u5f55\u5b50\u6811\u91cc\u9762\u7684\u5976\u725b\u6570\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5b83\u7684\u8d21\u732e\u4e3a $val\\cdot size_{to}$ \u3002\n\n\u7136\u540e $DFS$ \u6362\u6839\u3002\u8003\u8651\u5c06\u6839\u8282\u70b9\u8f6c\u81f3 $u$ \u65f6\uff0c\u53ea\u6709 $rt$ \u8fde\u5411 $u$ \u7684\u8fb9\u4f1a\u6539\u53d8\u7b54\u6848\u3002\u5177\u4f53\u7684\uff1a\n\n1. \u5bf9\u4e8e\u4ee5 $u$ \u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u6240\u5305\u542b\u7684\u5976\u725b\uff0c\u4ed6\u4eec\u8981\u8d70\u7684\u8def\u7a0b\u51cf\u5c11\u4e86 $val$ \uff0c\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u8981\u51cf\u53bb $size_u\\cdot val$ \u3002\n2. \u5bf9\u4e8e\u5176\u4ed6\u7684\u5976\u725b\uff0c\u4ed6\u4eec\u8981\u8d70\u7684\u8def\u7a0b\u589e\u52a0\u4e86 $val$ \uff0c\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u8981\u52a0\u4e0a $(size_1-size_u)\\cdot val$ \u3002\uff08\u56e0\u4e3a $size_1$ \u8868\u793a\u5976\u725b\u7684\u603b\u6570\uff09\n\n\u7136\u540e\u6700\u540e\u7684\u7b54\u6848\u4e3a $\\min\\limits_{i=1}^n ans_i$ \u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(res*bas)%mod;\n\t\tbas=(bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 1e5+5;\nint n,c[MAXN],u,v,d,head[MAXN],num_edge,size[MAXN];\nll ans,now;\nstruct Edge{\n\tint next,to,dis;\n\tEdge(){}\n\tEdge(int next,int to,int dis):next(next),to(to),dis(dis){}\n}edge[MAXN<<1];\nil add_edge(int u,int v,int dis){\n\tedge[++num_edge]=Edge(head[u],v,dis),head[u]=num_edge;\n\tedge[++num_edge]=Edge(head[v],u,dis),head[v]=num_edge;\n}\nil DFS(int u,int fa){\n\tsize[u]=c[u];\n\tfor(ri i=head[u];i;i=edge[i].next){\n\t\tif(edge[i].to==fa) continue;\n\t\tDFS(edge[i].to,u),size[u]+=size[edge[i].to];\n\t\tans+=1ll*size[edge[i].to]*edge[i].dis;\n\t}\n}\nil DFS1(int u,int fa,ll res){\n\tans=min(ans,res);\n\tfor(ri i=head[u];i;i=edge[i].next){\n\t\tif(edge[i].to==fa) continue;\n\t\tDFS1(edge[i].to,u,res-1ll*edge[i].dis*size[edge[i].to]+1ll*edge[i].dis*(size[1]-size[edge[i].to]));\n\t}\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n);\n\tfor(ri i=1;i<=n;++i) read(c[i]);\n\tfor(ri i=1;i<n;++i) read(u),read(v),read(d),add_edge(u,v,d);\n\tDFS(1,0),now=ans;\n\tfor(ri i=head[1];i;i=edge[i].next) DFS1(edge[i].to,1,now-1ll*edge[i].dis*size[edge[i].to]+1ll*edge[i].dis*(size[1]-size[edge[i].to]));\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u505a\u9898\u4e00\u5b9a\u8981\u7b97\u597d\u6570\u636e\u8303\u56f4\uff0c\u786e\u5b9a\u597d\u662f\u4f7f\u7528 $int$ \u8fd8\u662f\u7528 $long\\ long$ \uff0c\u4e0d\u7136\u70b8\u4e86\u5c31\u4e0d\u597d\u4e86\u3002",
        "postTime": 1566389397,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P2986 [USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026 \u9898\u89e3"
    },
    {
        "content": "\u5f88\u663e\u7136\uff0c\u6211\u4eec\u6700\u7ec8\u9009\u62e9\u7684\u662f\u4ee5\u67d0\u4e00\u8282\u70b9\u4e3a\u6839\uff0c\u7136\u540e\u5176\u4ed6\u8282\u70b9\u5230\u6839\u8282\n\u70b9\u7684\u6743\u503c\u548c\n\n\u6309\u7167\u4e00\u822c\u6811\u5f62dp\u7684\u5957\u8def\uff0c\u5f80\u5f80\u9700\u8981\u5148\u8fdb\u884c\u4e00\u6b21dfs\u6765\u83b7\u53d6\u90e8\u5206\u7684\u4fe1\u606f\n\n\u5148\u9ed8\u8ba4`1`\u8282\u70b9\u4e3a\u6839\u65b9\u4fbf\u6211\u4eec\u6765\u8fdb\u884c\u9884\u5904\u7406\uff0c**\u5047\u8bbe$f_{i,1}$\u4e3a$i$\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5230\u8fbe$i$\u8282\u70b9\u6240\u9700\u8981\u7684\u6743\u503c\u548c$f_{i,2}$\u4e3a\u5176\u4ed6\u8282\u70b9(\u5373\u975e$i$\u5b50\u6811\u4e2d)\u5230\u8fbe$i$\u8282\u70b9\u6240\u9700\u8981\u7684\u6743\u503c\u548c**\uff0c\u7b54\u6848\u5373\u4e3a$f_{i,1}+f_{i,2}$\u7684\u6700\u5c0f\u503c\n\n\u7b2c\u4e00\u6b21\u8fdb\u884cdfs,\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u5904\u7406\u51fa\u5168\u90e8$f_1$\u7684\u503c\uff0c\u518d\u7528$f_1$\u7684\u503c\u8fdb\u884c\u9012\u63a8\u4e0d\u96be\u9012\u63a8\u51fa\u5168\u90e8$f_2$\u7684\u503c\n\n$$f_{v,2}=f_{u,2}+(f_{u,1}-f_{v,1}-val*size[v])+(T-size[v])*val$$\n\n\u5176\u4e2d$u$\u4e3a$e$\u8282\u70b9\u7684\u7236\u4eb2(\u4ee5`1`\u8282\u70b9\u4e3a\u6839),$val$\u4e3a\u8fde\u63a5$u,v$\u8fb9\u7684\u8fb9\u6743\uff0c$T$\u8868\u793a\u6574\u9897\u6811\u4e0a\u5976\u725b\u7684\u603b\u6570\u91cf\uff0c$size[i]$\u5373\u4ee5$i$\u4e3a$i$\u8282\u70b9\u5b50\u6811\u4e0a\u5976\u725b\u7684\u603b\u6570\u91cf\uff0c\u7279\u522b\u7684\uff0c\u6211\u4eec\u8ba4\u4e3a$f_{1,2}=0$\n\n\u53ea\u8981\u4e24\u904ddfs\u5373\u53ef\u6c42\u89e3\uff0c\u7b54\u6848\u5728\u66f4\u65b0$f_2$\u7684\u540c\u65f6\u987a\u5e26\u66f4\u65b0\u5373\u53ef\n\n - **tip**:\u6309\u7167\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\u7b54\u6848\u53ef\u80fd\u4f1a\u7206$int$\n\n```\n//2019/8/5->Riko->AtNCU->luoguP2986\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n\nnamespace Rikopack {\n\tbool digit (int ch) { return (ch <= '9' and ch >= '0');}\n\tinline int in () {\n\t\tint x = 0, ch = getchar(), base = 1;\n\t\twhile (!digit(ch)) {\n\t\t\tif (ch == '-') base = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (digit(ch)) x = x*10+ch-'0', ch = getchar();\n\t\treturn x*base;\n\t}\n\ttemplate <class T> inline void smax (T& x, T y) { if (x < y) x = y;}\n\ttemplate <class T> inline void smin (T& x, T y) { if (x > y) x = y;}\n\tvoid print (int x) { printf(\"debug:%d\\n\", x);}\n\tconst int MAXINT = 2123456789;\n\t#define LL long long\n\t//Believing heart is your power\n}\nusing namespace Rikopack;\nusing namespace std;\n\nconst int N = 101000;\nint n, root = 1; LL tot, ans;\nLL f_1[N], f_2[N]; int Cows[N], Size[N];\nint nxt[N<<1], to[N<<1], val[N<<1], head[N], edgeind;\ninline void add (int u, int v, int x) {\n\tint i = ++edgeind;\n\tnxt[i] = head[u]; to[i] = v; val[i] = x; head[u] = i;\n}\n\nvoid Predfs (int x, int fa) {\n\tSize[x] += Cows[x];\n\tfor (int i = head[x]; i; i = nxt[i]) {\n\t\tint e = to[i];\n\t\tif (e == fa) continue;\n\t\tPredfs(e, x);\n\t\tSize[x] += Size[e];\n\t\tf_1[x] += ((LL)Size[e]*val[i]+f_1[e]);\n\t}\n}\nvoid dfs (int x, int fa) {\n\tfor (int i = head[x]; i; i = nxt[i]) {\n\t\tint e = to[i];\n\t\tif (e == fa) continue;\n\t\tf_2[e] = (f_1[x]-f_1[e]-(LL)val[i]*Size[e])+f_2[x]+(LL)(tot-Size[e])*val[i];\n\t\tsmin(ans, f_1[e]+f_2[e]);\n\t\tdfs(e, x);\n\t}\n}\nvoid work () {\n\tPredfs(root, 0);\n\tans = f_1[root];\n\tdfs(root, 0);\n\tprintf(\"%lld\", ans);\n}\nvoid prepare () {\n\tn = in();\n\tfor (int i = 1; i <= n; ++i) {\n\t\tCows[i] = in();\n\t\ttot += Cows[i];\n\t}\n\tfor (int i = 1; i < n; ++i) {\n\t\tint u = in(), v = in(), x = in();\n\t\tadd(u, v, x); add(v, u, x);\n\t}\n\twork();\n}\nint main () { prepare();}\n```\n",
        "postTime": 1565001049,
        "uid": 114643,
        "name": "RikoHere",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 P2986 [USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u66f4\u4f73~](https://tle666.github.io/2019/07/22/[USACO10MAR]%20Great%20Cow%20Gathering/)\n\n# **Description**\n\n\u7ed9\u4e00\u4e2a\u5e26\u8fb9\u6743\u4e0e\u70b9\u6743\u7684\u6811 $T$ \uff08 $N$ \u4e2a\u7ed3\u70b9 \uff09\uff0c\u627e\u4e00\u4e2a\u70b9 $x$ \u4f7f $\\sum_{u \\in T\\ \\&\\ u \\neq x} dis_{u,x} \\times c_u$ \u53d6\u6700\u5927\u503c\u3002\n\n\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c\u6709 $1 \\leq N \\leq 100000,\\ 1 \\leq C_i \\leq 1000$ \u3002\n\n[\u9898\u76ee\u94fe\u63a5\u6233\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P2986)\n\n# **Solution**\n\n\u6811\u5f62 DP \u3002\u5176\u5b9e\u4e5f\u4e0d\u80fd\u5b8c\u5168\u7b97\u662f DP \u3002\n\n\u6211\u4eec\u4f7f\u7528\u8c03\u6574\u6cd5\u3002\u5bf9\u4e8e\u70b9 $1$ \uff0c\u6211\u4eec\u53ef\u4ee5 $O(n)$ \u5730\u7b97\u51fa $f_1 = \\sum_{u \\in T\\ \\&\\ u \\neq 1} dis_{u,1} \\times C_u$\n\n\u7136\u540e\u9012\u5f52\u8003\u8651 $1$ \u7684\u513f\u5b50\u7ed3\u70b9 $u$ \u3002\u6211\u4eec\u6bd4\u8f83\u4e00\u4e0b $f_1$ \u548c $f_u$ \u3002\u53ef\u4ee5\u5c06\u8fd9\u68f5\u6811\u5206\u4e3a\u4e24\u90e8\u5206\u3002\u5176\u4e2d\u4e00\u90e8\u5206\uff08 $up$ \uff09\u4e0e\u70b9 $1$ \u5728\u70b9 $u$ \u7684\u540c\u4e00\u8fb9\uff0c\u800c\u53e6\u4e00\u90e8\u5206\uff08 $dn$ \uff09\u5219\u4e0e\u70b9 $u$ \u5728\u70b9 $1$ \u540c\u4e00\u8fb9\u3002\u5f53\u6211\u4eec\u7684\u6ce8\u610f\u529b\u4ece $1$ \u8f6c\u5230 $u$ \u4e0a\u65f6\uff0c\u6211\u4eec\u53d1\u73b0 $f$ \u7684\u503c\u53d1\u751f\u4e86\u4e00\u4e9b\u53d8\u5316\u3002\u5bf9\u4e8e $up$ \u90a3\u90e8\u5206\u7684\u6240\u6709\u70b9\uff0c\u5b83\u4eec\u90fd\u88ab\u52a0\u4e0a\u4e86\u4e00\u6bb5\u8def\u7a0b $dis_{1,u}$ \uff1b\u800c\u5bf9\u4e8e $dn$ \u90a3\u90e8\u5206\u7684\u6240\u6709\u70b9\uff0c\u5b83\u4eec\u90fd\u51cf\u53bb\u4e86 $dis_{1, u}$ \u3002\n\n![\u9898\u76ee\u4e2d\u7684\u6837\u4f8b](https://i.loli.net/2019/07/22/5d35c8f32385195587.png)\n\n\u4e3e\u4e2a\u4f8b\u5b50\u3002\u5bf9\u4e8e\u56fe\u4e0a\u7684 $3$ \uff0c\u6211\u4eec\u53d1\u73b0 $f_3 = 1\\times 1 + 1 \\times 2 + 2 \\times 6 = 15$ \u3002\u628a\u5b83\u5206\u6210 $up$ \u548c $dn$ \uff0c $up = 3,\\ dn = 12$ \u3002\u540c\u7406\u5bf9\u4e8e $4$ \uff0c $up = up_3 + 3 \\times (1 + 1) = 9,\\ dn = dn_3 - 3 \\times 2 = 6$ \u3002\n\n\u7ed3\u679c\uff0c\u6211\u4eec\u53d1\u73b0 $up$ \u548c $dn$ \u90fd\u4e0e\u524d\u9762\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u53ea\u7528\u8bb0\u53d8\u5316\u503c\u5c31\u884c\u5566\u3002\n\n**\u6ce8\u610f\u5f00 `long long` \u3002\u3002**\n\n# **Code**\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 100100;\n\n#define int long long\n\nint n, c[N], f[N], up[N], dn[N], size[N], ans = 1e18;\n// f up dn \u5982\u4e0a\u6587\uff1bsize[u] \u4ee5 u \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff08\u6b64\u5904\u6307\u5b50\u6811\u4e2d c[i] \u4e4b\u548c\uff09\n\nstruct edge { int v, w; edge *next; } pool[N << 1], *h[N], *cur = pool;\n\ninline void addedge(int u, int v, int w) {\n  edge *p = ++cur, *q = ++cur;\n  p->v = v, p->w = w, p->next = h[u], h[u] = p;\n  q->v = u, q->w = w, q->next = h[v], h[v] = q;\n}\n\ninline int calc(int u, int dis, int fa) { // \u6c42 f[1]\n  int v, res = c[u] * dis;\n  for (edge *p = h[u]; p; p = p->next)\n    if ((v = p->v) != fa) {\n      res += calc(v, dis + p->w, u);\n    }\n  return res;\n}\n\ninline void pre(int u, int fa) { // \u6c42 size\n  int v; size[u] = c[u];\n  for (edge *p = h[u]; p; p = p->next)\n    if ((v = p->v) != fa) {\n      pre(v, u); size[u] += size[v];\n    }\n}\n\ninline void dfs(int u, int fa) { // \u6c42 f\n  int v;\n  for (edge *p = h[u]; p; p = p->next)\n    if ((v = p->v) != fa) {\n      up[v] = (size[1] - size[v]) * p->w;\n      dn[v] = -size[v] * p->w;\n      f[v] = f[u] + up[v] + dn[v]; // \u8bb0\u5f97 up \u548c dn \u53ea\u662f\u76f8\u5bf9 u \u7684\u53d8\u5316\u503c\n      dfs(v, u);\n    }\n}\n\nsigned main() {\n  int u, v, w;\n  scanf(\"%lld\", &n);\n  for (int i = 1; i <= n; i++) scanf(\"%lld\", &c[i]);\n  for (int i = 1; i < n; i++) {\n    scanf(\"%lld%lld%lld\", &u, &v, &w);\n    addedge(u, v, w);\n  }\n  pre(1, 0); f[1] = calc(1, 0, 0); dfs(1, 0);\n  for (int i = 1; i <= n; i++) ans = min(ans, f[i]);\n  printf(\"%lld\\n\", ans);\n  return 0;\n}\n```\n\n",
        "postTime": 1563806872,
        "uid": 54628,
        "name": "eros1on",
        "ccfLevel": 0,
        "title": "\u300cUSACO10MAR\u300dGreat Cow Gathering"
    },
    {
        "content": "\u505a\u7684\u65f6\u5019\u611f\u89c9\u633a\u7b80\u5355\u7684...\u7136\u540e\u5c31\u81ea\u5df1YY\u51fa\u4e86\u6811\u7684\u91cd\u5fc3\u7684\u6c42\u6cd5...\u4f46\u662f\u633a\u9ebb\u70e6\u7684\u3002\n\n\u9996\u5148\u8f6c\u79fb\u65b9\u7a0b\u662f\u5f88\u597d\u63a8\u7684\uff1a\n\n$f(i)=f(v)+w*(\\sum c-\\sum c_v).$\n\n\u7136\u540e\u6211\u4eec\u521d\u59cb\u7684\u72b6\u6001\u5462\uff1f\u6ca1\u6709\uff01\uff01\uff01\n\n\u4e8e\u662f\u6211\u4eec\u5c1d\u8bd5$O(n)$\u5148\u9884\u5904\u7406\u51fa\u6765$f_1$\u7684\u72b6\u6001\u3002\n\n\u7136\u540e\u6211\u5c31\u5f00\u59cb\u4e86\uff1a\n\n \n- \u8dd1\u4e00\u8fb9\u6811\u4e0a\u524d\u7f00\u548c\u5feb\u901f\u8ba1\u7b97\u6811\u4e0a\u8ddd\u79bb\n\n- $f_1 = \\sum c_i*d_i$\n\n\u4e8e\u662f\u6700\u540e\u8dd1\u4e00\u904d\u6811\u5f62dp\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n ```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nconst int N =  100010;\n\nint c[N] , n ;\nint head[N] , cnt;\nstruct Edge {\n\tint to , nxt , w;\n}e[N << 1];\n\nvoid add(int u , int v , int w) {\n\te[++ cnt].to = v;\n\te[cnt].nxt = head[u];\n\te[cnt].w = w;\n\thead[u] = cnt;\n}\n\nint dis[N] , f[N] , sumc[N];\nvoid dfs3(int now , int ff) {\n\tsumc[now] = c[now];\n\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif(v == ff) continue;\n\t\tdis[v] += dis[now] + e[i].w;\n\t\tdfs3(v , now);\n\t\tsumc[now] += sumc[v];\n \t}\n}\n\nvoid dfs4(int now , int ff) {\n\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif(v == ff) continue;\n\t\tf[v] = f[now] - sumc[v] * e[i].w + (sumc[1] - sumc[v]) * e[i].w;\n\t\tdfs4(v , now); \n\t}\n}\n\nsigned main () {\n\tscanf(\"%lld\" , &n);\n\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%lld\" , c + i);\n\tfor(int i = 1 ; i <= n - 1 ; i ++) {\n\t\tint u , v , w;\n\t\tscanf(\"%lld %lld %lld\" , &u, &v, &w);\n\t\tadd(u , v , w); add(v , u , w);\n\t}\n  \n\tdfs3(1 , 1);\n\tint ans = 1e15;\n  \tfor(int i = 2 ; i <= n ; i ++) {f[1] += dis[i] * c[i];}\n  \tdfs4(1 , 1);\n  \tfor(int i = 1 ; i <= n ; i ++) ans = min(ans , f[i]);\n\tprintf(\"%lld\\n\" , ans);\n \treturn 0;\n}\n```",
        "postTime": 1573549216,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u9898\u76ee\u7684\u610f\u601d\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6c42\u4e00\u4e2a\u70b9\uff0c\u5176\u4ed6\u70b9\u5230\u5728\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u548c\u6700\u5c0f\u3002\u5f88\u5bb9\u6613\u60f3\u5230\u6811\u7684\u91cd\u5fc3\u3002\uff08\u5220\u9664\u8fd9\u4e2a\u70b9\uff0c\u4f7f\u5f97\u5176\u4ed6\u7684\u8fde\u901a\u5757\u4e2d\u8282\u70b9\u6700\u591a\u7684\u4e00\u5757\u8282\u70b9\u4e2a\u6570\u6700\u5c0f\uff09\u3002\u5c06\u65e0\u6839\u6811\u8f6c\u5316\u4e3a\u6709\u6839\u6811\uff08\u968f\u4fbf\u627e\u4e00\u4e2a\u70b9\u6700\u4e3a\u6839dfs\u4e00\u904d\u5c31\u597d\u4e86\uff09\u3002\u8fd9\u4e2a\u9898\u76ee\u4e5f\u5dee\u4e0d\u591a\u3002\u6211\u4eec\u7528dp[i]\u8868\u793a\u5df2i\u4e3a\u6839\u7684\u5b50\u6811\uff08\u5305\u62eci\uff09\u5230i\u7684\u82b1\u8d39\u3002\u8fd9\u6837\u5bf9\u4e8e\u6839\u8282\u70b9root\uff0cdp[i]=dp[1]+dp[2]+.....+dp[n]\u5176\u4e2ddp[1]...dp[n]\u4e3aroot\u7684\u5b50\u6811\u3002\u4f46\u662f\u8fd8\u5f97\u52a0\u4e0a1..n\u8fd9\u4e9b\u5b50\u6811\u5230root\u7684\u8ddd\u79bb\u3002\u5c31\u662fleaves[1]...leaves[n]\u8868\u793a\u6bcf\u4e2a\u4ee5i\u4e3a\u6839\u5305\u62eci\u7684\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002\u52a0\u4e0a\u8282\u70b9\u4e2a\u6570*dist\u5c31\u597d\u4e86\u3002\u8fd9\u6837dp[root]\u5c31\u8868\u793a\u4ee5root\u4e3a\u96c6\u5408\u5730\u70b9\u7684\u82b1\u8d39\uff0c\u8dd1n\u904d\u6811\u5f62dp\u53ea\u80fd\u5f97\u56db\u5341\u5206\uff0c\u5145\u5206\u53d1\u6398\u6811\u4e0a\u4fe1\u606f\uff0c\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\uff1a\uff08\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff09\nssize[1]=ssize[1]-ssize[3];\nmm=dp[1]-dp[3]-ssize[3]*dist;\ndp[3]=dp[3]+mm+ssize[1]*dist;\nssize[3]=K;\n\u89e3\u91ca\u4e00\u4e0b\u5404\u4e2a\u6570\u7ec4\uff1assize[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002dp[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u6240\u6709\u8282\u70b9\u5230i\u7684\u82b1\u8d39\u3002mm\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u6a21\u62df\u4e00\u4e0b\u3002K\u8868\u793a\u6574\u4e2a\u6811\u7684\u8282\u70b9\u4e2a\u6570\u3002\u6574\u4e2a\u8fc7\u7a0b\u5c31\u662f\u8ba9\u81ea\u5df1\u7684\u513f\u5b50\u8282\u70b9\u8f6c\u5316\u4e3a\u6839\u8282\u70b9\u7684\u8fc7\u7a0b\u3002\u4ee3\u7801\u4e2d\u9700\u8981\u6ce8\u610f\u7b2c\u4e8c\u4e2adfs\u56de\u6eaf\u8fc7\u7a0b\u3002\u4e00\u5b9a\u8981\u8bb0\u5f55\uff08\u770b\u5176\u4ed6\u5927\u4f6c\u76f4\u63a5dfs\u4e86\uff0c\u662f\u6211\u83dc\uff09\u3002\u8fd8\u6709\u6700\u540e\u6bd4\u8f83\u5927\u5c0f\uff0c\u4e00\u5b9a\u8981\u5f0010000000000000\u4ee5\u4e0a\uff0cwrong\u4e00\u4e2a\u70b9\u3002\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 100005\n#define mod 100000000\n#define INF 0x3f3f3f3f\nusing namespace std;\n\ntypedef long long  LL;\nint n;\nLL val[MAXN],dp[MAXN],ssize[MAXN],PP[MAXN],K;\nstruct Edge\n{\n    int from,to,dist;;\n    Edge(int from=0,int to=0,int dist=0):from(from),to(to),dist(dist){}\n};\nvector<Edge> edges;\nvector<int> G[MAXN];\n\nLL dfs(int u,int fa)\n{\n    if(G[u].size()==1&&edges[G[u][0]].to==fa)\n        return ssize[u]=val[u];\n    LL leaves=val[u];\n    for(int i=0;i<G[u].size();i++)\n    {\n        Edge &e=edges[G[u][i]];\n        if(e.to==fa)\n            continue;\n        int v=e.to;\n        LL tt=dfs(v,u);\n        dp[u]+=tt*e.dist+dp[v];\n        leaves+=tt;\n    }\n    return ssize[u]=leaves;\n}\n\nvoid dfs_2(int root,int fa)\n{\n    PP[root]=dp[root];\n    for(int i=0;i<G[root].size();i++)\n    {\n        Edge &e=edges[G[root][i]];\n        int v=e.to;\n        if(v==fa)\n            continue;\n        int ss_rot=ssize[root];              //\u8bb0\u5f55\n        int dp_v=dp[v];                         //\u8bb0\u5f55\n        int ss_v=ssize[v];                       //\u8bb0\u5f55\n        ssize[root]=ssize[root]-ssize[v];\n        LL mm=dp[root]-dp[v]-ssize[v]*e.dist;\n        dp[v]=dp[v]+mm+ssize[root]*e.dist;\n        ssize[v]=K;\n        dfs_2(v,root);\n        ssize[root]=ss_rot;                            //\u56de\u6eaf\n        dp[v]=dp_v;                                       //\u56de\u6eaf\n        ssize[v]=ss_v;                                    //\u56de\u6eaf\n    }\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&val[i]);\n    int u,v,w;\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d %d %d\",&u,&v,&w);\n        edges.push_back({u,v,w});\n        edges.push_back({v,u,w});\n        int mm=edges.size();\n        G[u].push_back(mm-2);\n        G[v].push_back(mm-1);\n    }\n    LL minn=10000000000000;  //\u4e00\u5b9a\u8981\u5f00\u5927\n    memset(dp,0,sizeof(dp));\n    K=dfs(1,-1);                            //\u4ee51\u4e3a\u6839\u5efa\u7acb\u4e00\u4e2a\u6709\u6839\u6811\n    dfs_2(1,-1);                             //\u9012\u63a8\u8fc7\u7a0b\n    for(int i=1;i<=n;i++)\n        minn=min(minn,PP[i]);\n    printf(\"%lld\\n\",minn);\n    return 0;\n}\n\n```\n\n\n",
        "postTime": 1572260376,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "# \u9898\u89e3 P2986 [USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/P2986)\n\n\u5f88\u597d\u7684\u4e00\u9053\u6811\u5f62dp\u7684\u9898\u76ee\uff0c\u6211\u4eec\u89c2\u5bdf\u6bcf\u4e00\u4e2a\u70b9i\u7684\u7b54\u6848\uff0c\u53d1\u73b0\u7b54\u6848 f[i] \u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\n\nA1.i\u6240\u6709\u5b50\u6811\u4e2d\u7684\u7287\u96c6\u4e2d\u5230i\u70b9\n\nA2.\u9664\u4e86i\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u7287\u96c6\u4e2d\u5230i\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u518d\u8d70\u5230i\u70b9\n\nf[i] = A1 + A2\n\n\u6211\u4eec\u53d1\u73b0i\u7684\u7b54\u6848\u548ci\u7684\u5b69\u5b50\u6709\u5173\uff0c\u4e5f\u548ci\u7684\u7236\u4eb2\u6709\u5173\u3002\u4e00\u822c\u8fd9\u6837\u7684\u95ee\u9898\u7528\u4e24\u6b21dfs\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\uff08\u7531\u4e8e\u9009\u8c01\u662f\u6839\u8282\u70b9\u90fd\u65e0\u6240\u8c13\uff0c\u4ee5\u4e0b\u4ee51\u53f7\u8282\u70b9\u4e3a\u6839\uff09\n\n\u7b2c\u4e00\u6b21dfs\u6211\u4eec\u6c42\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684 f[i]\uff0c \u610f\u601d\u662f\u4ee5i\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u725b\u96c6\u4e2d\u5230i\u70b9\u7684\u201c\u4e0d\u65b9\u4fbf\u503c\u201d\u3002\u663e\u7136\u6211\u4eec\u53ea\u8981\u7edf\u8ba1i\u70b9\u5b50\u6811\u4e2d\u725b\u7684\u6570\u91cf q[i] \u7136\u540e\u9012\u63a8\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7b2c\u4e8c\u6b21dfs\u6211\u4eec\u8981\u628a f[i] \u53d8\u6210\u6240\u6709\u725b\uff08\u800c\u4e0d\u662f\u5b50\u6811\u4e2d\u7684\u725b\uff09\u96c6\u4e2d\u5230i\u70b9\u7684\u4e0d\u65b9\u4fbf\u503c\u3002\u8bbei\u7684\u7236\u4eb2\u662fj\uff0ci\u5230j\u7684\u8ddd\u79bb\u662fs\u3002ans[i] \u5c31\u7b49\u4e8e f[j] + (q[1] - q[i]) * s - q[u] * s\u3002 \uff08\u591a\u60f3\u51e0\u904d\u5c31\u60f3\u901a\u4e86\uff0c\u8981\u7406\u89e3\u4e0a\u9762A1A2\u7684\u610f\u601d\uff09\n\n\u4e0b\u9762\u653e\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define N 100005\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar(); }\n\treturn x * f;\n}\nll ans = 1e15, f[N], c[N], q[N];\n//f\u5728\u4e24\u6b21dfs\u91cc\u542b\u4e49\u4e0d\u4e00\u6837 c\u662f\u6bcf\u4e2a\u70b9\u6709\u591a\u5c11\u725b q\u662f\u6bcf\u4e2a\u70b9\u548c\u4ed6\u7684\u5b50\u6811\u603b\u5171\u6709\u591a\u5c11\u725b\nint tot, head[N], n;\n\nstruct edge\n{\n\tint to, next, dis;\n\tedge() {}\n\tedge(int x, int y, int z) { to = x, next = y, dis = z; }\n}a[2 * N];\n//\u90bb\u63a5\u8868\u5b58\u56fe\nvoid add(int from, int to, int dis)\n{\n\ta[++tot] = edge(to, head[from], dis);\n\thead[from] = tot;\n}\n\nvoid dfs(int x, int fa)\n{\n\tq[x] += c[x];\n\tfor (int i = head[x]; i; i = a[i].next)\n\t{\n\t\tint u = a[i].to, s = a[i].dis;\n\t\tif (u != fa)\n\t\t{\n\t\t\tdfs(u, x);\n\t\t\tq[x] += q[u];\n\t\t\tf[x] += f[u] + q[u] * s;\n\t\t}\n\t}\n}\n//\u7b2c\u4e00\u6b21dfs \u6c42\u51faA1\nvoid dfs2(int x, int fa)\n{\n\tfor (int i = head[x]; i; i = a[i].next)\n\t{\n\t\tint u = a[i].to, s = a[i].dis;\n\t\tif (u != fa)\n\t\t{\n\t\t\tf[u] = f[x] + (q[1] - q[u]) * s - q[u] * s;\n\t\t\tdfs2(u, x);\n\t\t}\n\t}\n}\n//\u7b2c\u4e8c\u6b21dfs \u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\nint main()\n{\n\tn = read();\n\tfor (int i = 1; i <= n; i++)\n\t\tc[i] = read();\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tint a1 = read(), a2 = read(), a3 = read();\n\t\tadd(a1, a2, a3);\n\t\tadd(a2, a1, a3);\n\t}\n\tdfs(1, 1);\n\tdfs2(1, 1);\n\tfor (int i = 1; i <= n; i++)\n\t\tans = min(ans, f[i]); //\u5728\u6240\u6709\u70b9\u4e2d\u627e\u5230\u6700\u65b9\u4fbf\u7684\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1567228901,
        "uid": 92008,
        "name": "Yuyuanqi",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "## Description\n\n\u6709n\u4e2a\u70b9,n-1\u6761\u8fb9,\u6bcf\u4e2a\u70b9\u4e0a\u6709ci\u4e2a\u4eba.\u8981\u9009\u4e00\u4e2a\u70b9\u4f7f\u6240\u6709\u4eba\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u6700\u5c0f\n\n------------\n\n## Solution\n\n\u8fd9\u662f\u9053\u6811\u5f62DP\u7684\u57fa\u7840\u9898\n\n\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u6761\u8fb9\u7684\u8d21\u732e\u8fdb\u884c\u8f6c\u79fb\n\n\u6211\u4eec\u5148\u94a6\u5b9a1\u53f7\u70b9\u4e3a\u6839,\u901a\u8fc7dfs\u7b97\u4e00\u904d\u90091\u53f7\u70b9\u7684\u7b54\u6848\n\n\u8003\u8651\u8f6c\u79fb:\u5f53\u524d\u7b54\u6848+(\u603b\u7ed3\u70b9\u6570-2*\u8f6c\u79fb\u7684\u70b9\u7684\u5b50\u6811\u5927\u5c0f)*\u8fb9\u6743\n\n------------\n\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N=200005;\nint n,m,sum,ans,x,y,z,t,a[N],dis[N],size[N],head[N];\nstruct node{\n\tint too,next,zh;\n}edge[N];\nvoid add(int a,int b,int c)\n{\n\tedge[++t].too=b;edge[t].zh=c;\n\tedge[t].next=head[a];head[a]=t;\n}\nvoid dfs(int u,int fa)\n{\n\tsize[u]=a[u];\n\tfor(int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].too;\n\t\tif(v==fa)continue;\n\t\tdis[v]=dis[u]+edge[i].zh;\n\t\tdfs(v,u);\n\t\tsize[u]+=size[v];\n\t}\n\tans+=dis[u]*a[u];\n}\nvoid dfs2(int u,int fa,int k)\n{\n\tans=min(ans,k);\n\tfor(int i=head[u];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].too;\n\t\tif(v==fa)continue;\n\t\tdfs2(v,u,k+(sum-2ll*size[v])*edge[i].zh);\n\t}\n}\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\tsum+=a[i];//\u603b\u4eba\u6570\n\t}\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n     //\u524d\u5411\u661f\u8fde\u8fb9\n\t}\n\tdfs(1,0);//\u6c42\u9009\u7684\u70b9\u4e3a1\u7684\u7b54\u6848\n\tdfs2(1,0,ans);//\u6811\u5f62DP\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1550802574,
        "uid": 39484,
        "name": "\u7c73\u5947",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "\u4e00\u9053\u6811\u5f62dp\u7684\u9898\u4e3b\u8981\u662f\u75282\u6b21dfs\u4e2d\u7684\u52a8\u5f52\u65b9\u7a0b\uff0c\u6bcf\u4e00\u6b21\u5224\u65ad\u70b9\u662f\u5426\u76f8\u540c\u7136\u540e\u8ba1\u7b97\u5230\u6b64\u8def\u5f84\u7ee7\u7eed\u8fdb\u884c\u6df1\u641c\uff0c\u7136\u540esize\u662f\u7528\u6765\u505a\u7d2f\u52a0\u4e2a\u6570\u7684,val\u662f\u7528\u6765\u8bb0\u5f55\u539f\u672c\u4e2a\u6570\u7684\uff0c\u4fbf\u4e8e\u53cd\u6094\uff0c\u627e\u5230\u66f4\u4f18\u89e3\u3002#include<bits/stdc++.h>\n\n    \n```cpp\n#define ll long long\nusing namespace std;\nstruct edge{\n    int to,next;ll val;\n}G[400010];\nll cost;\nint tot; \nint n;\nint head[500010];\nll ans=1e18;\nint val[400010];\nll size[400010];\nll c[400010];\nll len[400010];\nvoid addedge(int a,int b,ll c)\n{\n    G[tot].to=b;\n    G[tot].next=head[a];\n    G[tot].val=c;\n    head[a]=tot++;\n}\nvoid calc_ans(int x,int fa,ll cost)\n{\n    for(int i=head[x];~i;i=G[i].next)\n        if(G[i].to!=fa)\n        {\n            ll t=cost-size[G[i].to]*G[i].val+(size[1]-size[G[i].to])*G[i].val;\n            ans=min(ans,t);\n            calc_ans(G[i].to,x,t);\n        }\n}\nvoid dfs(int x,int fa)\n{\n    for(int i=head[x];~i;i=G[i].next)\n    if(G[i].to!=fa)\n        {\n    len[G[i].to]=len[x]+G[i].val;\n    cost+=len[G[i].to]*val[G[i].to];\n    dfs(G[i].to,x);\n    size[x]+=size[G[i].to];        \n    }\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&val[i]),size[i]=val[i];\n    for(int i=1;i<n;i++)\n    {\n        int a,b;ll c;\n        scanf(\"%d %d %lld\",&a,&b,&c);\n        addedge(a,b,c);\n        addedge(b,a,c);\n    }\n    dfs(1,0);\n    ans=min(ans,cost);\n    calc_ans(1,0,cost);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1509437574,
        "uid": 31826,
        "name": "RetrO",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "**\u770b\u4e0d\u61c2\u7684\u4ee3\u7801\u91cc\u6709\u8be6\u7ec6\u8bf4\u660e\uff01\uff01\uff01\uff01\uff01\uff01**\n\n\u6811\u5f62DP\u3002\u3002\u3002\u3002\u4f5c\u4e3a\u8001\u662f\u641e\u9519\u94fe\u5f0f\u524d\u5411\u661f\u7684\u6211\u8fd8\u662f\u5728\u8270\u96be\u7684\u68c0\u67e5\u4e0b\u7528\u94fe\u5f0f\u524d\u5411\u661fAC\u6389\u4e86\u3002\u3002\u3002\u601d\u8def\u5c31\u662f\u5148\u5047\u8bbe\u6240\u6709\u5976\u725b\u90fd\u5230\u4e00\u4e2a\u70b9\u4e86\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u70b9\u63a8\u51fa\u6240\u6709\u70b9\u7684\u72b6\u6001\uff0cO(n)\u7684\u52a8\u6001\u89c4\u5212\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u7ef4\uff08\u4e5f\u53ef\u4ee5\u4e0d\u7528\u6570\u7ec4\uff09\uff0c\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u4ed6\u7684\u6240\u6709\u513f\u5b50\u8282\u70b9\uff08\u5305\u62ec\u513f\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff09\u7684\u5976\u725b\u603b\u6570son[i]\uff0cdp[v]=dp[rt]-son[v]\\*a[i].w+(sum-son[v])\\*a[i].w;\uff08sum\u662f\u6240\u6709\u5976\u725b\u6570\u603b\u548c\uff09\uff0c\u9884\u5904\u7406\u7684\u65f6\u5019\u6211\u4eec\u628a\u6240\u6709\u70b9\u5230\u7b2c\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5904\u7406\u51fadp[1]\u4e86\uff0c\u7136\u540e\u5c31\u662f\u4e00\u8fb9DFs\u7684\u52a8\u6001\u89c4\u5212\u5e76\u4e14\u6bcf\u6b21\u6bd4\u8f83\u53d6\u7b54\u6848\n\n```cpp\n#include<bits/stdc++.h>\n#define ri register int\n#define For(i,k,j) for(ri i=k;i<=j;++i)\nusing namespace std;\nconst int maxn=100005;\nlong long n,head[maxn],c[maxn],e,dp[maxn],vis[maxn],d[maxn],son[maxn],sum,ans=1000000000000000000;//\u6240\u4ee5\u6570\u636e\u90fd\u8981\u5f00long long \nstruct node{\n    int to,last,w;    \n}a[maxn*2];\nvoid add(int x,int y,int z){\n    a[++e].last=head[x];    \n    a[e].to=y;\n    a[e].w=z;\n    head[x]=e;\n```\n}//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u7684\u6240\u4ee5\u8981\u5b58\u4e24\u904d\n```cpp\nint r(long long &x){\n    char c=getchar();x=0;    \n    while(!isdigit(c))c=getchar();\n    while(isdigit(c))x=x*10+c-'0',c=getchar();\n```\n}//\u8bfb\u5165\u4f18\u5316\n```cpp\nvoid init(int rt){\n    vis[rt]=1;\n    for(int i=head[rt];i;i=a[i].last){    \n        int v=a[i].to;\n        if(!vis[v]){\n            vis[v]=1;\n            d[v]=d[rt]+a[i].w;\n            init(v);\n            son[rt]+=son[v];//\u628a\u4ed6\u7684\u513f\u5b50\u8282\u70b9\u4e5f\u7d2f\u52a0\n```\n}//\u7b2c\u4e00\u904d\u521d\u59cb\u5316\uff0c\u628a\u6bcf\u4e2a\u70b9\u5230\u7b2c\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u5b58\u5230d\u6570\u7ec4\u91cc\n```cpp\n    }\n}\nvoid dfs(int rt){\n    vis[rt]=1;\n    for(int i=head[rt];i;i=a[i].last){\n        int v=a[i].to;\n        if(!vis[v]){\n            vis[v]=1;\n            dp[v]=dp[rt]-son[v]*a[i].w+(sum-son[v])*a[i].w;//\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u7531\u7b2c\u4e00\u4e2a\u70b9\u9012\u63a8\u51fa\u5176\u4ed6\u70b9\uff0c\u5c31\u50cf\u697c\u4e0b\u7684\u89e3\u91ca\u90a3\u6837\uff0csum\u662f\u6240\u6709\u5976\u725b\u7684\u603b\u6570\uff0cson[v]\u662f\u4ed6\u6240\u6709\u7684\u5b50\u8282\u70b9\uff0c\u56e0\u4e3a\u7531\u7236\u4eb2\u8282\u70b9\u63a8\u6765\uff0c\u6240\u4ee5\u8981\u51cf\u53bbson[v]*a[i].w\uff0c\u800c\u5176\u4ed6\u70b9\u8981\u52a0\u4e0a(sum-son[v])*a[i].w\n            //cout<<dp[v]<<endl;\n            ans=min(ans,dp[v]);\n            dfs(v);\n        }\n    }\n}\nint main(){\n    cin>>n;    \n    for(ri i=1;i<=n;++i){\n        r(c[i]);\n        son[i]=c[i];\n        sum+=c[i];    //\u521d\u59cb\u5316\n    }\n    for(ri i=1;i<n;++i){\n        long long x,y,z;    \n        r(x),r(y),r(z);\n        add(x,y,z);\n        add(y,x,z);\n    }\n    init(1);\n    for(ri i=2;i<=n;++i)\n        dp[1]+=c[i]*d[i];//\u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u70b9\u7684\u503c\n    memset(vis,0,sizeof(vis));\n    dfs(1);\n    ans=min(dp[1],ans);//\u6700\u540e\u8fd8\u8981\u548cdp[1]\u6bd4\u8f83\u4e00\u4e0b\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1504759374,
        "uid": 47202,
        "name": "cheeseYang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "/\\*\n\u6811\u5f62dp+\u5bb9\u65a5\u539f\u7406\n\nf[i]\u8868\u793ai\u4e3a\u5173\u952e\u70b9\u7b54\u6848\n\ndis[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u5b50\u6811\u548c,\u7b2c\u4e00\u904d\u6811\u5f62dp\u7edf\u8ba1\n\nnum[i]\u8868\u793a\u70b9\u6743\u548c,tot\u4e3a\u603b\u70b9\u6743\u548c\n\n\u5bb9\u65a5\u539f\u7406: f[v]=f[now]+(tot-num[v])\\*e[i].d-num[v]\\*e[i].d; \u7b2c\u4e8c\u904d\u6811\u5f62dp\u7edf\u8ba1\n\n\u7531\u7236\u4eb2\u8282\u70b9\u8f6c\u79fb\u5230\u513f\u5b50\u8282\u70b9 \u5bb9\u65a5\u6bd4\u8f83\u96be\u60f3\u4e00\u4e9b,\u5efa\u8bae\u753b\u56fe\u6bd4\u7167\u4ee3\u7801\u7406\u89e3\n\n\u4e00\u5b9a\u660e\u786e\u8981\u6c42\u03a3\u70b9\u6743\\*\u8fb9\u6743\u6700\u5c0f\uff0c\u5bb9\u65a5\u7684\u65f6\u5019\u6ce8\u610f\u8ba1\u7b97\u7684\u662f\u90a3\u4e2a\u70b9\u7684\u70b9\u6743\\*\u54ea\u6761\u8fb9\u7684\u8fb9\u6743\n\n\\*/\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define N 100007\nusing namespace std;\nint head[N],w[N];\nlong long f[N],num[N],dis[N],tot;\nint n,m,x,y,z,cnt;\nstruct edge\n{\n    int u,to,pre,d;\n}e[N<<1];\ninline void add(int u,int to,int d)\n{\n    e[++cnt].to=to;e[cnt].d=d;e[cnt].pre=head[u];head[u]=cnt;\n}\nvoid tree_dp1(int fa,int now)\n{\n    num[now]=w[now];\n    for(int i=head[now];i;i=e[i].pre)\n    {\n        if(e[i].to==fa) continue;\n        tree_dp1(now,e[i].to);\n        num[now]+=num[e[i].to];\n        dis[now]+=dis[e[i].to]+num[e[i].to]*e[i].d;\n    }\n}\nlong long mn=999999999999999LL;\nvoid tree_dp2(int fa,int now)\n{\n    mn=min(mn,f[now]);\n    for(int i=head[now];i;i=e[i].pre)\n    {\n        int v=e[i].to;\n        if(v==fa) continue;\n        f[v]=f[now]+(tot-num[v])*e[i].d-num[v]*e[i].d;\n        tree_dp2(now,v);\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) \n      scanf(\"%d\",&w[i]),tot+=w[i];\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z);add(y,x,z);\n    }\n    tree_dp1(0,1);\n    f[1]=dis[1];\n    tree_dp2(0,1);\n    printf(\"%lld\\n\",mn);\n    return 0;\n}\n```",
        "postTime": 1500287580,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8ba9\u6211\u60f3\u5230\u4e86\u8fc7\u53bb\u7684\u67d0\u4e00\u9053\u9898\u201c\u533b\u9662\u8bbe\u7f6e\u201d\u554a\uff01\u90a3\u9053\u9898\u6211\u662f\u600e\u4e48\u505a\u7684\u6765\u7740\uff1f\uff1f\uff1f\u6211\u60f3\u60f3\u3002\u3002\u3002\u3002\u3002\u3002\u662f\u679a\u4e3e\u8282\u70b9\u7136\u540eBFS\u3002\n\n\u60f3\u90fd\u4e0d\u7528\u60f3\uff0c\u4e0d\u884c\u7684\u3002\u56e0\u4e3a\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u8fde\u513f\u5b50\u8868\u793a\u6cd5\u90fd\u7528\u4e0d\u4e86\u4f60\u8fd8\u60f3\u7528BFS\uff1f\uff1f\uff1f\u4e0d\u5b58\u5728\u7684\uff01\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u65b9\u6cd5\uff0c\u597d\u50cf\u5c31\u53ea\u6709\u6811\u5f62DP\u4e86\u5427\u3002\u3002\u3002\u3002\u3002\u3002\n\u7136\u800c\u6211\u5728\u505a\u8fd9\u9053\u9898\u4e4b\u524d\u8fd8\u4e0d\u77e5\u9053\u8be5\u548b\u505a\u3002\u3002\u3002\u600e\u4e48\u529e\uff1f\n~~\u90a3\u5c31\u53bb\u767e\u5ea6\u5427\uff01~~\u81ea\u5df1\u63a8\u5457\n\n\u9996\u5148\u6211\u4eec\u627e\u4e0d\u5230\u8fd9\u68f5\u6811\u7684\u6839\uff0c\u90a3\u6211\u4eec\u5c31\u8bbe\u6839\u662f1\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4ece1\u5f00\u59cbDFS\u6216BFS\u5f97\u5230\u5f531\u4f5c\u4e3a\u805a\u96c6\u70b9\u65f6\u7684\u201c\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u201d\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid D1(int fa)\n{\n\tf1[fa]=true;//\u6807\u8bb0\u8be5\u70b9\u4ee5\u514d\u513f\u5b50\u8282\u70b9\u641c\u56de\u6765,\u5f53\u7136\u4e5f\u53ef\u4ee5\u641c\u7d22\u65f6\u52a0\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u7236\u4eb2\n\tfor(int i=h[fa];i;i=e[i].nx)if(!f1[e[i].to])\n\t{\n\t\tD1(e[i].to);\n\t\tdp[fa]+=a[e[i].to]*e[i].data+dp[e[i].to];//\u8ba1\u7b97\u8ddd\u79bb\uff0c\u5176\u4e2ddp[e[i].to]\u662f\u5b50\u6811\u7684\u5927\u5c0f\uff0ca[e[i].to]\u662f\u5b50\u6811\u7684\u6743\u548c\uff0c\u56e0\u4e3a\u6574\u4e2a\u5b50\u6811\u5230\u8fbe\u8fd9\u4e2a\u8282\u70b9\u90fd\u8981\u591a\u8d70\u8fd9\u4e00\u6bb5\u8ddd\u79bb\uff0c\u6240\u4ee5\u9700\u8981\u4e58e[i].data\n\t\ta[fa]+=a[e[i].to];//\u8ba1\u7b97\u5b50\u6811\u7684\u5927\u5c0f\n\t}\n}\n```\n\u7136\u540e\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6839\u8282\u70b9\u7684\u201c\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u201d\u3002\u90a3\u4e48\u4e0b\u4e00\u6b65\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u5148\u5047\u8bbe\u4e00\u4e0b\uff0c\u5047\u5982\u5976\u725b\u4eec\u4e0d\u60f3\u53bb\u6839\u8282\u70b9\u4e86\uff0c\u60f3\u53bb\u6839\u8282\u70b9\u7684\u4e00\u4e2a\u513f\u5b50\u8282\u70b9\uff0c\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f\u8fd9\u65f6\u8fd9\u68f5\u6811\u88ab\u8fd9\u6761\u8fb9\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff1a\u6839\u8282\u70b9\u7684\u5b50\u6811\u548c\u9664\u8fd9\u8bfe\u5b50\u6811\u4e4b\u5916\u7684\u6839\u8282\u70b9\u7684\u6811\u3002\u6839\u8282\u70b9\u7684\u5b50\u6811\u672c\u6765\u8981\u591a\u8d70\u90a3\u6761\u8fb9\u7684\u8ddd\u79bb\uff0c\u73b0\u5728\u90fd\u4e0d\u7528\u8d70\u4e86\uff0c\u4e0d\u65b9\u4fbf\u7a0b\u5ea6\u5c31\u51cf\u5c11\u4e86\u5b50\u6811\u7684\u6743\u548c\u4e58\u90a3\u6761\u8fb9\u7684\u957f\u5ea6\u3002\u7136\u800c\u4ee5\u6839\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u672c\u6765\u53ef\u4ee5\u5c31\u8fd9\u6837\u7684\uff0c\u4f46\u662f\u7a81\u7136\u6362\u4e86\u4e00\u4e2a\u805a\u96c6\u70b9\uff0c\u5c31\u8981\u591a\u8d70\u90a3\u6761\u8fb9\u7684\u957f\u5ea6\uff0c\u5c31\u591a\u4e86\u5b50\u6811\u7684\u5927\u5c0f\u4e58\u90a3\u6761\u8fb9\u7684\u957f\u5ea6\u3002\u53ef\u662f\u73b0\u5728\u7684\u5b50\u6811\u5927\u5c0f\u600e\u4e48\u8ba1\u7b97\u4f60\uff1f\u65e2\u7136\u88ab\u5206\u6210\u4e86\u4e24\u68f5\u5b50\u6811\uff0c\u90a3\u4e48\u8fd9\u68f5\u5b50\u6811\u7684\u5927\u5c0f\u5c31\u662f\u603b\u7684\u6743\u548c\u51cf\u53bb\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u4e5f\u5c31\u662fa[1]-a[son]\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n```\ndp[son]=dp[fa]+(a[1]-2*a[son])*e[i].data\n```\n\u8fd9\u4e00\u90e8\u5206\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid D2(int fa)\n{\n\tf2[fa]=true;\n\tfor(int i=h[fa];i;i=e[i].nx)if(!f2[e[i].to])\n\t{\n\t\tdp[e[i].to]=dp[fa]+(a[1]-2*a[e[i].to])*e[i].data;\n\t\tD2(e[i].to);\n\t}\n}\n```\n\n\n\u7136\u540e\u6211\u4eec\u53ea\u8981\u518d\u8dd1\u4e00\u904ddp\u6570\u7ec4\u627e\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\u5b8c\u7ed3\u6492\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nclass Edge{public:int to,nx,data;}e[200000];\nint n,cnt,h[100005];bool f1[100005],f2[100005];\nlong long dp[100005],a[100005];\nvoid AddEdge(int x,int y,int data)\n{\n\te[++cnt].to=y;e[cnt].nx=h[x];e[cnt].data=data;\n\th[x]=cnt;\n}\nvoid D1(int fa)\n{\n\tf1[fa]=true;\n\tfor(int i=h[fa];i;i=e[i].nx)if(!f1[e[i].to])\n\t{\n\t\tD1(e[i].to);dp[fa]+=a[e[i].to]*e[i].data+dp[e[i].to];\n\t\ta[fa]+=a[e[i].to];\n\t}\n}\nvoid D2(int fa)\n{\n\tf2[fa]=true;\n\tfor(int i=h[fa];i;i=e[i].nx)if(!f2[e[i].to])\n\t{dp[e[i].to]=dp[fa]+(a[1]-2*a[e[i].to])*e[i].data;D2(e[i].to);}\n}\nint main()\n{\n\tint i;long long mi=0x7fffffffffffffff;\n\tios::sync_with_stdio(false);cin>>n;\n\tfor(i=1;i<=n;++i)cin>>a[i];\n\tfor(i=1;i<n;++i)\n\t{\n\t\tint x,y,z;\n\t\tcin>>x>>y>>z;\n\t\tddEdge(x,y,z);AddEdge(y,x,z);//\u4e00\u5b9a\u8981\u8bb0\u5f97\u53cc\u5411\uff0c\u4e0d\u7136\u5751\u6b7b\u4eba\n\t}\n\tD1(1);D2(1);for(i=1;i<=n;++i)mi=min(mi,dp[i]);cout<<mi;\n}\n```",
        "postTime": 1581746107,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6811\u8bba DP P2986\u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053dp\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u6811\u4e0adp\u7b97\u662f\u5f88\u7b80\u5355\u7684\u4e86\u3002\n\n\u7136\u800c\u6211\u8c03\u4e86\u4e00\u4e0a\u5348\uff0c\u6700\u540e\u53d1\u73b0\u662fint\u548clong long\u76f8\u52a0\u641e\u7684\u9519QAQ\uff08\u6ca1\u6ce8\u610f\u554a\u3002\uff09\n\n\u66b4\u529bO(n^2)\u663e\u7136\u8fc7\u4e0d\u4e86\uff0c\u7136\u800c\u8fd9\u662f\u4e00\u68f5\u6811\u554a\uff0c\u6211\u4eec\u679a\u4e3e\u805a\u4f1a\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u7236\u4eb2\u8f6c\u79fb\u8fc7\u53bb\u3002\n\n\u628a\u8282\u70b91\u4f5c\u4e3a\u6839\u3002\n\n\u7b2c\u4e00\u904ddfs\uff0c1\u3001\u6c42\u5b83\u672c\u8eab\u8282\u70b9\u6743\u503c\u4ee5\u53ca\u5b50\u6811\u8282\u70b9\u6743\u503c\u7684\u548c\uff1b2\u3001\u6c42\u6240\u6709\u8282\u70b9\u5230\u6839\u7684\u4e0d\u65b9\u4fbf\u503c\n\n\u7b2c\u4e8c\u904ddfs\uff08\u5373dp\uff09\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u8f6c\u79fb\u65b9\u7a0b**f[v]=f[u]-size[v]\\*e[i].w+(all-size[v])\\*e[i].w;**\n\nall\u8868\u793a\u725b\u7684\u603b\u6570\uff0cc[]\u8868\u793a\u8282\u70b9i\u7684\u725b\u6570\uff0csize[]\u8868\u793a\u5b83\u672c\u8eab\u4ee5\u53ca\u5b50\u6811\u6240\u6709\u725b\u6570\uff0cun\u8868\u793a\u4e0d\u65b9\u4fbf\u5ea6\uff0cf[]\u8868\u793a\u4ee5i\u4e3a\u805a\u4f1a\u8282\u70b9\u7684\u7b54\u6848\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 100003\n#define ll long long\nint cnt=0,all=0,n;\nint head[N],c[N];\nll ans=100000000000000;\nll un[N],size[N],f[N];\nbool vis[N];\nstruct edge{\n    int to,next,w;\n} e[N*2];\nvoid add(int u,int v,int w){\n    e[++cnt].to=v;\n    e[cnt].w=w;\n    e[cnt].next=head[u];\n    head[u]=cnt;\n}\nvoid dfs(int u){\n    vis[u]=true;\n    size[u]=(ll)c[u];\n    for(int i=head[u];i>-1;i=e[i].next){\n        int v=e[i].to,w=e[i].w;\n        if(!vis[v]){\n            dfs(v);\n            size[u]+=size[v];\n            un[u]+=un[v]+(ll)size[v]*w;\n        }\n    }\n}\nvoid dp(int u){\n    vis[u]=true;\n    for(int i=head[u];i>-1;i=e[i].next){\n        int v=e[i].to,w=e[i].w;\n        if(!vis[v]){\n            f[v]=f[u]-(ll)size[v]*w+(ll)(all-size[v])*w;\n            dp(v);\n        }\n    }\n}\nint main(){\n    memset(head,-1,sizeof(head));\n    int u,v,w;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",c+i);\n        all+=c[i];\n    }\n    for(int i=1;i<=n-1;i++){\n        scanf(\"%d%d%d\",&u,&v,&w);\n        add(u,v,w);\n        add(v,u,w);\n    }\n    dfs(1);\n    f[1]=un[1];\n    memset(vis,0,sizeof(vis));\n    dp(1);\n    for(int i=1;i<=n;i++)\n        ans=min(ans,f[i]);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1509517407,
        "uid": 23829,
        "name": "Caiyy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2986 \u3010[USACO10MAR]\u4f1f\u5927\u7684\u5976\u725b\u805a\u96c6Great Cow Gat\u2026\u3011"
    }
]