[
    {
        "content": "\u5176\u5b9e\u9898\u8bfb\u61c2\u4e86\u5c31\u5f88\u597d\u505a\u4e86\u3002\n\n\u56e0\u4e3a\u8981\u4f7f\u6700\u540e\u5206\u5f97\u7684\u4e32\u6570\u91cf\u6700\u591a\uff0c\u6240\u4ee5\u5c31\u8981\u8ba9\u6bcf\u4e00\u6bb5\u7684\u957f\u5ea6\u5c3d\u91cf\u5c0f\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u7684\u539f\u5219\u662f\uff1a\u80fd\u5206\u5c31\u5206\u3002\u4e24\u8fb9\u540c\u65f6\u51cf\u53bb\u6700\u77ed\u7684\u56de\u6587\u524d / \u540e\u7f00\uff0c\u76f4\u5230\u4e32\u7a7a\u4e3a\u6b62\u3002\n\n\u73b0\u5728\u6211\u4eec\u9762\u4e34\u7740\u4e00\u4e2a\u95ee\u9898\uff1a\u5047\u8bbe\u67d0\u4e32\uff08\u79f0\u4e3a\u4e32 $A$\uff09\u88ab\u6211\u4eec\u4ee5 \u201c\u80fd\u9009\u5c31\u9009\u201d \u7684\u65b9\u6cd5\u9009\u4e2d\uff0c\u4f46\u6709\u53e6\u4e00\u4e32\uff08\u79f0\u4e3a\u4e32 $B$\uff09\u5fc5\u987b\u4e0e\u4e32 $A$ \u7ec4\u5408\u624d\u80fd\u7ec4\u6210\u56de\u6587\uff0c\u6b64\u65f6\u5e94\u8be5\u600e\u4e48\u529e\uff1f\n\n\u4f46\u662f\uff0c\u7a0d\u5fae\u601d\u8003\u4e00\u4e0b\u5c31\u80fd\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e32 $ABBA$\uff0c\u4e24\u8fb9\u540c\u65f6\u51cf\u53bb\u4e00\u4e2a $A$\uff0c$BB$ \u4f9d\u7136\u56de\u6587\uff0c\u82e5\u4ee5\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u5b58\u5728\u3002\n\n\u4ee5\u5b57\u7b26\u4e32\u54c8\u5e0c\u4e3a\u5de5\u5177\uff0c\u53ef\u4ee5\u5f97\u51fa\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define int unsigned long long\nnamespace XSC062{\n\tconst int maxn=1e6+5;\n\tconst int mod=1504831;  // 114514th prime number\n\tchar s[maxn];\n\tint T,l,r,n,cnt;\n\tint h[maxn],p[maxn];\n\tinline void init(){\n\t\tp[0]=1;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\th[i]=h[i-1]*mod+s[i];\n\t\t\tp[i]=p[i-1]*mod;\n\t\t}\n\t\treturn;\n\t}\n\tinline int get(int l,int r){\n\t\treturn h[r]-h[l-1]*p[r-l+1];\n\t}\n\tsigned main(){\n\t\tscanf(\"%llu\",&T);\n\t\twhile(T--){\n\t\t\tscanf(\"%s\",s+1);\n\t\t\tn=strlen(s+1);\n\t\t\tinit(); l=1; r=n; cnt=0;\n\t\t\tfor(int i=l;i<=r;++i){\n\t\t\t\tif(get(l,i)==get(r-(i-l+1)+1,r))\n\t\t\t\t\tcnt+=(i==r)?1:2, r-=i-l+1, l=i+1;\n\t\t\t}\n\t\t\tprintf(\"%llu\\n\",cnt);\n\t\t}\n\t\treturn 0;\n\t}\n}\nsigned main(){ XSC062::main(); return 0; }\n```",
        "postTime": 1637647718,
        "uid": 245052,
        "name": "ollll62",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4656 \u56de\u6587\u5212\u5206"
    },
    {
        "content": "\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/10356919.html ](https://www.cnblogs.com/PinkRabbit/p/10356919.html )\n\n\u83dc\u83dc\u53ea\u80fd\u9760\u5199\u7b80\u5355\u5b57\u7b26\u4e32\u54c8\u5e0c\u7ef4\u6301\u751f\u6d3b\u3002\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u9898\u9762\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\u3002\n\n### \u9898\u89e3\uff1a\n\n\u5f88\u663e\u7136\u4ece\u4e24\u8fb9\u5f80\u4e2d\u95f4\u63a8\uff0c\u80fd\u9009\u7684\u5c31\u9009\u4e0a\u8fd9\u4e2a\u8d2a\u5fc3\u7b56\u7565\u662f\u5bf9\u7684\u3002\n\n\u5982\u4f55\u5224\u65ad\u80fd\u4e0d\u80fd\u9009\u4e0a\uff0c\u76f4\u63a5\u5b57\u7b26\u4e32\u54c8\u5e0c\u5427\u3002\n\n\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff1a\u4e2d\u95f4\u90a3\u5757\u8981\u4e0d\u8981\u9009\uff0c\u5373ans\u8981\u4e0d\u8981\u52a01\uff1f\u5224\u4e00\u4e0b\u4e32\u957f\u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\ntypedef unsigned long long UL;\nconst int B = 79;\n\nint T, N;\nchar str[1000005];\n\nint main() {\n\tscanf(\"%d\", &T);\n\twhile (T--) {\n\t\tscanf(\"%s\", str); N = strlen(str);\n\t\tUL s1 = 0, s2 = 0, b = 1;\n\t\tint ans = 0;\n\t\tfor (int i = 0; i < N / 2; ++i) {\n\t\t\ts1 = s1 * B + str[i];\n\t\t\ts2 = s2 + str[N - i - 1] * b;\n\t\t\tb = b * B;\n\t\t\tif (s1 == s2) {\n\t\t\t\tans += 2;\n\t\t\t\ts1 = s2 = 0, b = 1;\n\t\t\t}\n\t\t}\n\t\tif (N % 2 || s1) ++ans;\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1549637346,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4656 \u3010[CEOI2017]Palindromic Partitions\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd8\u6ca1\u6709\u4eba\u5199\u9898\u89e3\u6211\u5c31\u5148\u6765~~\u6c34\u4e00\u7bc7~~\n\n\u9898\u610f\u6709\u4e9b\u4ee4\u4eba\u8ff7\u60d1\uff08\u4e3a\u4ec0\u4e48\u53eb\u201c\u8fd9\u4e9b\u5c0f\u5757\u6784\u6210\u56de\u6587\u2018**\u4e32**\u2019 \u201d\uff09\uff0c\u6211\u53cd\u6b63\u770b\u4e86\u5341\u5206\u949f\uff0c\u6240\u4ee5\u91cd\u65b0\u89e3\u91ca\u4e00\u904d\uff1a\n\n**\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8ba9\u4f60\u628a\u5b83\u62c6\u6210x\u4e2a\u5c0f\u5757\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5c0f\u5757\u6784\u6210\u56de\u6587\u5757\u3002\u56de\u6587\u5757\uff1a\u5c06\u6bcf\u4e2a\u5c0f\u5757\u770b\u4f5c\u4e00\u4e2a\u6574\u4f53\uff08\u7c7b\u4f3c\u4e8e\u56de\u6587\u4e32\u91cc\u7684\u5b57\u7b26\uff09\uff0c\u4ee5\u67d0\u4e2a\u5757\u6216\u4e24\u4e2a\u5c0f\u5757\u4e4b\u95f4\u7684\u95f4\u9699\u4e3a\u5bf9\u79f0\u8f74\uff0c\u5219\u5bf9\u79f0\u8f74\u4e24\u8fb9\u7684\u5757\u5e94\u8be5\u4e00\u4e00\u5bf9\u5e94\u4e14\u76f8\u540c\u3002\u4e24\u5c0f\u5757\u5f53\u4e14\u4ec5\u5f53\u4e24\u8005\u957f\u5ea6\u548c\u5b57\u7b26\u5b8c\u5168\u4e00\u6837\u65f6\u76f8\u540c\u3002**\n\n\u6574\u4f53\u601d\u8def\uff1a\n- \n- ~~\u5f00\u59cb\u60f3\u8fc7malacher~~\u540e\u6765\u53d1\u73b0\u8981malacher\u5fc5\u987bhash\uff0c\u8fd8\u4e0d\u597d\u5212\u5757\u3002\uff08\u65e2\u7136hash\u4e86\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u66b4\u529b\u5339\u914d\u4e00\u4e0b\u5462\uff1f\uff09\n\n- \u5148\u60f3\u8fc7\u679a\u4e3e\u4e24\u4e2a\u5339\u914d\u7684\u5b57\u7b26\u4e32\u7684\u9996\u5c3e\u957f\u5ea6\uff0c\u4f46\u662f\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u4f1a\u53d1\u73b0 **\u5982\u679c\u9996\u5c3e\u5757\u65e0\u6cd5\u5339\u914d\uff0c\u4e2d\u95f4\u5757\u5339\u914d\u7b54\u6848\u4e5f\u4e0d\u4f1a\u589e\u52a0**\u3002\n\n- \u6240\u4ee5\uff0c~~\u7ecf\u8fc7\u849f\u84bb\u6d45\u663e\u7684\u601d\u8003\u540e\uff0c~~\u6211\u4eec\u5e94\u8be5\u4ece\u9996\u7aef\u679a\u4e3e\u9996\u7aef\u5757\u7684\u7ed3\u5c3e\u4f4d\u7f6e\uff08\u6216\u8005\u8bf4\u679a\u4e3e\u957f\u5ea6\uff09\uff0c\u4e0e\u540e\u7aef\u540c\u6837\u957f\u5ea6\u5757\u7684hash\u503c\u505a\u6bd4\u8f83\uff1b\u82e5\u5339\u914d\uff0cans+=2\uff0c\u9996\u7aef\u548c\u540e\u7aef\u6307\u9488\u5206\u522b\u540e/\u524d\u79fblen\u4e2a\u957f\u5ea6\u5355\u4f4d\uff0c\u7ee7\u7eed\u6bd4\u8f83\u3002\n\n\u505a\u6cd5\u4e0e\u7ec6\u8282\n- \n-  \u5148hash\u51fa\u5b57\u7b26\u4e32\u524d\u7f00\uff0c\u7528\u516c\u5f0f\n\n**hash=((hash[r]\u2212hash[l\u22121]\u2217p(r\u2212l+1))%MOD+MOD)%MOD**\n\n\u6c42\u5b50\u5757hash\u503c\uff08\u540e\u8005\u6bd4\u5bf9\u65f6\u5728\u7ebf\u6c42\uff09\u3002\n- \u4e09\u4e2a\u6307\u9488\uff1a\u9996\u7aef\u672a\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff08lik1\uff09\uff0c\u672b\u7aef\u672a\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff08lik2\uff09\uff0c\u6b63\u5728\u641c\u7d22\u7684\u5b57\u7b26\uff08i\uff09\u3002\n- \u4f7f\u7528\u5feb\u901f\u5e42\u6c42Pow\uff08p\uff0clen\uff09\uff0cp\u5373\u7528\u4e8e\u79bb\u6563\u5316\u7684\u5c0f\u8d28\u6570\u3002\n- \u5728\u7ebf\u6c42pow\u5f88\u53ef\u80fd\u56e0\u4e3a\u91cd\u590d\u6c42\u800c\u8d85\u65f6\uff0c\u6240\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u503c\n- \u82e5\u6700\u540elik1>lik2\uff0c\u5373\u6240\u6709\u90fd\u5339\u914d\uff0c\u76f4\u63a5\u8f93\u51faans\uff0c\u5426\u5219\u6709\u4e2d\u95f4\u5757\u4e0d\u5339\u914d\uff0c\u5219\u8f93\u51faans+1\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u6709\u4e9b\u4e11\u964b\u8bf7\u89c1\u8c05qwq\uff09\uff1a\n```cpp\n#pragma GCC optimize(3,\"Ofast\",\"inline\")//o3\u81ed\u6c27\u662f\u4e2a\u597d\u4e1c\u897f\n#include<stdio.h>\n#include<bits/stdc++.h>\n#define N 1000005\nusing namespace std;\nchar l[N];\nlong long ahash[N],r[N],mod=2000000033;\nlong long mm[N];\nint n,m,p=233,ans,lik1,lik2;\nlong long Pow(int p,int i)\n{\n\tif(i==1)return p;\n\tif(i==0)return 1;\n\tlong long int m=Pow(p,i/2);\n\tif(i%2==1)return m%mod*m%mod*p%mod;\n\telse return m*m%mod;\n}\nvoid work()\n{\n\tlik1=1,lik2=m;\n\tfor(int i=1;i<=(m+1)/2&&lik1<lik2;i++)\n\t{\n\t\tint len=i-lik1+1;\n\t\tif(l[i-1]==l[lik2-1])\n\t\t{\n\t\t\tif(((ahash[i]-ahash[lik1-1]*mm[len])%mod+mod)%mod==((ahash[lik2]-ahash[lik2-len]*mm[len])%mod+mod)%mod)\n\t\t\tans+=2,lik1+=len,lik2-=len;\n\t\t\t\n\t\t}\n\t}\n\t\tif(lik1>lik2)printf(\"%d\\n\",ans);\n\t\telse printf(\"%d\\n\",ans+1);\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=0;i<=N/2;i++)mm[i]=Pow(p,i);//\u9884\u5904\u7406Pow\uff0c\u5426\u5219\u91cd\u590d\u6c42\u800c\u4e14\u957f\u5ea6\u5f88\u5927\u6613\u8d85\u65f6\n\twhile(n--)\n\t{\n\t\tmemset(ahash,0,sizeof(ahash));ans=0;\n\t\tscanf(\"%s\",l);\n\t\tm=strlen(l);\n\t\tfor(int i=1;i<=m;i++)//\u6211\u7684\u5b58\u50a8\u65b9\u5f0f\u53ef\u80fd\u6709\u4e9b\u4e0d\u8212\u670d\uff0chash[i]\u5bf9\u5e94\u7684\u662f\u7b2ci\u4e2a\u5b57\u7b26\uff08\u4ece1\u5f00\u59cb\uff09\u524d\u7f00\uff08\u5305\u62ec\u81ea\u5df1\uff09\u7684hash\u503c\n\t\t{\n\t\t\tahash[i]=(ahash[i-1]*p+l[i-1]-'a'+1)%mod;\n\t\t}\n\t\twork();\n\t}\n}\n\n```\n\u770b\u5728\u849f\u84bb\u5199\u4e86\u8fd9\u4e48\u4e45\u7684\u4efd\u4e0a\uff0c\u7ed9\u4e2a\u8d5e\u5427~\n\n\u6b22\u8fce\u5927\u5bb6\u6765\u8e29\u535a\u5ba2\uff1a[qwq](https://www.luogu.com.cn/user/224346)\n",
        "postTime": 1579396904,
        "uid": 224346,
        "name": "SKTTIFaker",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4656 \u3010[CEOI2017]Palindromic Partitions\u3011"
    },
    {
        "content": "\u628a\u5b57\u7b26\u4e32Hash\uff0c\u53d6\u5230\u533a\u95f4Hash\u503c\uff0c\u7136\u540e\u518d\u4ece\u4e24\u8fb9\u5f80\u4e2d\u95f4\u8d2a\u5fc3\uff0cHash\u503c\u76f8\u7b49\u7684\u5c31\u662f\u4e24\u5757\u53ef\u4ee5\u6784\u6210\u56de\u6587\u4e32\u7684\u7b54\u6848\uff0cans+=2\n```cpp\n#include <bits/stdc++.h>\n\ntypedef unsigned long long ull;\nconst int maxn = 1e6 + 7;\nconst int inf = 0x3f3f3f3f;\nconst int base = 31;\n\ninline int read() {\n    register int g = 1; register char ch;\n    while(!isdigit(ch = getchar())) if(ch == '-') g = -1;\n    register int x = ch ^ '0';\n    while(isdigit(ch = getchar())) x = (((x << 2) + x) << 1) + (ch ^ '0');\n    return x * g;\n}\n\ninline void print(int x) {\n    if(x < 0) putchar('-'), x = -x;\n    if(x > 9) print(x / 10);\n    putchar(x % 10 + '0');\n}\n\nint T;\nchar s[maxn];\null h[maxn], p[maxn];\n\ninline void Hash(const int &len) {\n    p[0] = 1, h[1] = 1;\n    for(int i = 1; i <= len; ++i) {\n        p[i] = p[i - 1] * base;\n        h[i] = h[i - 1] * base + s[i];\n    }\n}\n\ninline ull get_hash(int l, int r) {\n    return h[r] - h[l - 1] * p[r - l + 1];\n}\n\nint main() {\n    T = read();\n    while(T--) {\n        scanf(\"%s\", s + 1);\n        int len = strlen(s + 1);\n        Hash(len);\n        int last = 0, ans = 0;\n        for(int i = 1; i <= len / 2; ++i) {\n            if(get_hash(last + 1, i) == get_hash(len - i + 1, len - last)) {\n                last = i;\n                ans += 2;\n            }\n        }\n        if(last * 2 < len) ans++;\n        print(ans); puts(\"\");\n    }\n    return 0;\n}\n```\n~~\u987a\u4fbf\u5ba3\u4f20[\u4e2a\u4eba\u535a\u5ba2](https://lgakki.cn)~~",
        "postTime": 1541381626,
        "uid": 107810,
        "name": "Suki_Megumi",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3]P4656 [CEOI2017]Palindromic Partitions"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u7b28\u86cb\u7684\u60f3\u6cd5\u5c31\u662f\u5de6\u8fb9\u7684\u5b57\u7b26\u4e32\u6bcf\u6b21\u7684\u53f3\u8fb9\u754c\u5f80\u53f3\u63a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u53f3\u8fb9\u7684\u5b57\u7b26\u4e32\u6bcf\u6b21\u5de6\u8fb9\u754c\u5f80\u5de6\u63a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u4e00\u4f46\u5de6\u8fb9\u4ece\u4e32\u548c\u53f3\u8fb9\u7684\u4e32\u76f8\u7b49\u65f6\u5c31\u628a\u957f\u5ea6\u6e05 $0$\u3002\u4f46\u6bcf\u6b21\u5224\u65ad\u4e24\u4e2a\u4e32\u7684\u65f6\u6548\u592a\u6162\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4e32\u5b83\u8981\u51fa\u7ed3\u679c\u65f6\u6548\u8fd1\u4f3c $L^2$\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u5b57\u7b26\u4e32 $hash$\uff0c\u8fd9\u6837\u6bcf\u6b21\u5224\u65ad $O(1)$ \u5c31\u6ca1\u95ee\u9898\uff0c\u8fd9\u9898\u5c31\u505a\u4e0b\u6765\u4e86\uff0c\u4f46\u662f\u5947\u5076\u8981\u7279\u5224\u4e00\u4e0b\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int TT[2]={1000007,100007};//hash\u5c3d\u91cf\u6a21\u5927\u7684\u8d28\u6570\uff0c\u8fd9\u91cc\u5f002\u4e2a\u4e5f\u662f\u6015\u649e\u8f66\nint t;\nint s[2][1000005],S[2][1000005];\nchar a[1000005];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n\twhile(isdigit(ch)){ret=ret*10+ch-'0';ch=getchar();}\n\treturn ret*f;\n}\nint main(){\n\tt=read();S[0][0]=S[1][0]=1;\n\twhile(t--){\n\t\tscanf(\"%s\",a+1);int lena=strlen(a+1),st=0,len=1,ed=lena/2,ans=1;\n\t\tfor(int i=1;i<=lena;i++)S[0][i]=S[0][i-1]*TT[0],s[0][i]=s[0][i-1]+a[i]*S[0][i],S[1][i]=S[1][i-1]*TT[1],s[1][i]=s[1][i-1]+a[i]*S[1][i];\n\t\tfor(int i=1;i<=ed;i++){\n\t\t\tif((s[0][st+len]-s[0][st])*S[0][lena-st-len-st]==s[0][lena-st]-s[0][lena-st-len]&&(s[1][st+len]-s[1][st])*S[1][lena-st-len-st]==s[1][lena-st]-s[1][lena-st-len]){\n\t\t\t\tif(st+len<ed+lena%2)ans+=2;else ans++;len=0;st=i;\n\t\t\t}\n\t\t\tlen++;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1606529837,
        "uid": 188879,
        "name": "VioletIsMyLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4656 \u3010[CEOI2017]Palindromic Partitions\u3011"
    },
    {
        "content": "#### Description\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $S$\uff0c\u6c42\u5c06\u5176\u5206\u4e3a $k$ \u4e2a\u90e8\u5206 $s_1,s_2,\\cdots,s_k$ \u4f7f\u5f97 $s_i=s_{k-i+1}$\uff0c\u4f7f\u5f97 $k$ \u6700\u5927\uff0c\u8f93\u51fa\u6700\u5927\u7684 $k$\u3002\n\n#### Solution\n\n\u6ce8\u610f\uff0c\u5e76\u4e0d\u662f\u5224\u65ad\u56de\u6587\u54e6\uff08\u7b2c\u4e00\u6b21\u4ee5\u4e3a\u662f\u5224\u65ad\u56de\u6587\uff0c\u5bfc\u81f4\u770b\u6837\u4f8b\u6ca1\u770b\u61c2\uff08\uff09\u3002\n\n\u9996\u5148\uff0c\u5148\u629b\u51fa\u7ed3\u8bba\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\u7a0b\u5e8f\u53ef\u4ee5\u5b9a\u4e24\u4e2a\u6307\u9488\uff0c\u8fd9\u4e24\u4e2a\u6307\u9488\u662f\u5bf9\u79f0\u7684\uff0c\u7b2c\u4e00\u4e2a\u6307\u9488 $i \\in [1,mid]$\uff0c\u7b2c\u4e8c\u4e2a\u6307\u9488 $j =|S|-i+1$\uff0c\u518d\u5b9a\u4e24\u4e2a\u5de6\u53f3\u7aef\u70b9\u6307\u9488 $L,R$\uff0c\u521d\u59cb $L=1$\uff0c$R=|S|$\uff0c\u7136\u540e\u5224\u65ad $S_{[L,i]}$ \u662f\u5426\u7b49\u4e8e $S_{[j,R]}$\uff0c\u5982\u679c\u7b49\u4e8e\u4e86\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u52a0 $2$\uff0c\u5e76\u8c03\u6574\u5de6\u53f3\u754c\uff0c$L=i+1$\uff0c$R=|S|-i$\uff0c\u4e5f\u5c31\u662f\u5f80\u91cc\u4e00\u4e2a\uff0c\u76f8\u5f53\u4e8e\u628a $[L,i],[j,R]$ \u5207\u6389\u3002\n\n\u5177\u4f53 $mid$ \u548c\u64cd\u4f5c\u8981\u6839\u636e $|S|$ \u7684\u5947\u5076\u6027\u8fdb\u884c\u5177\u4f53\u5224\u65ad\uff0c\u5224\u65ad\u7b49\u4e8e\u4f7f\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u3002\n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8fd9\u4e48\u505a\u5462\uff1f\u6211\u4eec\u6765\u505a\u4e00\u4e2a\u5c0f\u8bc1\u660e\u3002\n\n\u5047\u8bbe\u6709\u4e24\u6bb5 $[1,i]$ \u4e0e $[1,j]$\uff0c\u5176\u4e2d $i<j$ \u90fd\u662f\u4e0e\u76f8\u5e94\u7684\u533a\u95f4\u5bf9\u79f0\u7684\uff0c\u90a3\u4e48 $[i+1,j]$ \u4e2d\u80af\u5b9a\u4e5f\u6709\u81f3\u5c11\u4e00\u4e2a\u5b50\u533a\u95f4\u4e0e\u76f8\u5e94\u7684\u533a\u95f4\u5bf9\u79f0\u7684\u3002\u5047\u8bbe $[1,i]=\\texttt{ab}$\uff0c$[1,j]=\\texttt{abcab}$\uff0c\u90a3\u4e48\u539f\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a $S=\\texttt{abcab}\\cdots\\texttt{abcab}$\uff0c$[i+1,j]$ \u4e2d\u53ef\u4ee5\u5206\u4e3a 2 \u4e2a\u5b50\u533a\u95f4\uff0c$\\texttt c$ \u4e0e $\\texttt{ab}$ \u53ef\u4ee5\u4e0e\u76f8\u5e94\u5b50\u533a\u95f4\u5bf9\u79f0\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u4ece\u5de6\u5f80\u53f3\u80fd\u5207\u5c31\u5207\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u53ef\u4ee5\u76f4\u63a5\u770b\u4ee3\u7801\uff08\u4ee3\u7801\u5199\u7684\u5f88\u4e11\uff09\u3002\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst unsigned long long P = 23;\nunsigned long long a[1000100];\n\nunsigned long long binpow (unsigned long long b, unsigned long long p) {\n\tunsigned long long res = 1;\n\twhile (p > 0) {\n\t\tif (p & 1)\n\t\t\tres = res * b;\n\t\tb = b * b;\n\t\tp >>= 1;\n\t}\n\treturn res;\n}\n\nunsigned long long getHash (int l, int r) {\n\tunsigned long long hash1tol = a[l - 1] * binpow(P, r - l + 1);\n\treturn a[r] - hash1tol;\n}\n\nint main () {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tint str = s.size();\n\t\ts = ' ' + s;\n\t\tint cnt = 0;\n\t\tfor (int i = 1; i <= str; i++)\n\t\t\ta[i] = a[i - 1] * P + s[i];\n\t\tif (str % 2 != 0) {\n\t\t\tint L = 1, R = str;\n\t\t\tfor (int i = 1; i <= (str + 1) / 2 - 1; i++) {\n//\t\t\t\tprintf(\"OUT %d %d\\n\", L, R);\n\t\t\t\tif (getHash(L, i) == getHash(str - i + 1, R)) {\n\t\t\t\t\tcnt += 2;\n\t\t\t\t\tL = i + 1;\n\t\t\t\t\tR = str - i;\n//\t\t\t\t\tprintf(\"IN %d %d\\n\", L, R); \n\t\t\t\t}\n\t\t\t}\n\t\t\tcnt++;\n\t\t} else {\n\t\t\tint L = 1, R = str;\n\t\t\tfor (int i = 1; i <= str / 2; i++) {\n//\t\t\t\tprintf(\"OUT %d %d\\n\", L, R);\n\t\t\t\tif (getHash(L, i) == getHash(str - i + 1, R)) {\n\t\t\t\t\tcnt += 2;\n\t\t\t\t\tL = i + 1;\n\t\t\t\t\tR = str - i;\n//\t\t\t\t\tprintf(\"IN %d %d\\n\", L, R);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (L < R) cnt++;\n\t\t}\n\t\tprintf(\"%d\\n\", cnt);\n \t}\n\treturn 0;\n}\n```",
        "postTime": 1626394570,
        "uid": 114914,
        "name": "\u4e00\u53ea\u4e66\u866b\u4ed4",
        "ccfLevel": 4,
        "title": "P4656 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u610f\u7b80\u8ff0:\n\n\u5927\u6982\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8ba9\u4f60\u5212\u5206\u6210\u6700\u5927\u5757\u6570\u7136\u540e\u6784\u6210\u56de\u6587\u4e32\uff08\u76f8\u540c\u7684\u5b50\u4e32\u53ef\u4ee5\u770b\u6210\u540c\u4e00\u4e2a\u5b57\u7b26\uff09\u3002\n\n\u4e0b\u9762\u8bb2\u4e00\u4e0b\u601d\u8def\u3002\n\n## 1.  $30$ \u5206\u601d\u8def\uff08\u521d\u6b65\uff09\n\n\u60f3\u7684\u662f\u4ece\u4e24\u5934\u5f80\u4e2d\u95f4\u641c\uff0c\u56e0\u4e3a\u5982\u679c\u76ee\u524d\u7684\u4e24\u5934\u5df2\u7ecf\u4e0d\u5339\u914d\u7684\u8bdd\u663e\u7136\u662f\u65e0\u6cd5\u6784\u6210\u56de\u6587\u4e32\u7684,\u5339\u914d\u7528\u54c8\u5e0c\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\n\n\u4e8e\u662f\u9047\u5230\u4e0d\u540c\u7684\u5c31\u628a\u641c\u7684\u957f\u5ea6\u52a0\u4e00,\u5982\u679c\u627e\u5230\u76f8\u540c\u7684\u5c31\u5c06\u641c\u7d22\u957f\u5ea6\u7f6e\u4e3a $0$ \uff0c\u4ece\u4e0b\u4f4d\u7ee7\u7eed\u679a\u4e3e\u3002\n\n\u4f46\u662f\u7528\u957f\u5ea6\u6765\u505a\u662f\u975e\u5e38\u4e0d\u597d\u5224\u65ad\u8fb9\u754c,\u8fd8\u4f1a\u5199\u975e\u5e38\u591a\u7684\u5224\u65ad\u8bed\u53e5,\u6bd4\u5982\u5076\u6570\u548c\u5947\u6570\u4e2a\u65f6\u7684\u7ec8\u6b62\u5faa\u73af\u6761\u4ef6\u9700\u8981\u5206\u5f00\u5199\uff0c\u7b54\u6848\u7edf\u8ba1\u4e5f\u9700\u8981\u5206\u522b\u53e6\u5199\uff0c\u8fd8\u7279\u522b\u5bb9\u6613\u51fa\u9505\uff08\u4ee4\u4eba\u4e0d\u9f7f\uff09\u3002\n\n~~\u67d0\u849f\u84bb\u5728\u8003\u8bd5\u7684\u65f6\u5019\u5c31\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u7136\u540e\u53ea\u5f97\u4e86 $30$ \u5206\u3002~~\n\n## 2. \u7ecf\u8fc7\u52a0\u5de5\u540e\u7684\u60f3\u6cd5\n\n\u5199\u4e24\u4e2a\u5de6\u6307\u9488 $l$\uff0c$l1$ \u548c\u4e24\u4e2a\u53f3\u6307\u9488 $r$\uff0c$r1$ \u6765\u679a\u4e3e\uff0c\u9047\u5230\u4e0d\u76f8\u7b49\u7684\u5b57\u7b26\u5c31 ```l++,r--``` \u5982\u679c\u6b63\u5728\u5339\u914d\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u5c31\u5728\u5411\u524d\u8df3\u540e\u628a\u5de6\u4e32\u7684\u5de6\u6307\u9488 $l1$ \u7f6e\u4e3a\u5f53\u524d\u4f4d\u7f6e\uff0c\u53f3\u4e32\u7684\u53f3\u6307\u9488 $r1$ \u7f6e\u4e3a\u5f53\u524d\u4f4d\u7f6e\uff08\u53ef\u770b\u4f5c\u957f\u5ea6\u5f52\u96f6\uff09\u3002\n\n\u7ec8\u6b62\u6761\u4ef6\u5373 $l<r$ \u3002\n\n\u6ce8\u610f\uff0c\u5728\u8df3\u51fa\u5faa\u73af\u540e\u9700\u8981\u8fdb\u884c\u7279\u5224\u6700\u540e\u7684\u4e00\u5757\uff0c\u5982\u679c $l1$ \u4e0d\u7b49\u4e8e  $r1+1$ \u8bf4\u660e\u4e2d\u95f4\u90a3\u4e00\u5768\u9700\u8981\u76f4\u63a5\u5206\u6210\u4e00\u5757,\u5219```ans++```\u3002\n\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\n#define N 1000005\n#define ll long long\nint has[N],cf[N],sah[N];\nconst int p = 233333;\nconst int mod = 20041103;\n\nsigned main()\n{\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(0);\n    int n;\n    cin>>n;\n    cf[0]=1;\n    for(int i=1;i<=N;i++)cf[i]=(cf[i-1]*p);//\u9884\u5904\u7406p\u7684\u6b21\u65b9 \n    for(int i=1;i<=n;i++)\n    {\n        string a;\n        cin>>a;\n        len=a.size();\n        int ans=0;\n        for(int j=0;j<len;j++)has[j]=(has[j-1]*p+a[j]);//\u7528\u54c8\u5e0c\u6765\u5339\u914d\u5b57\u7b26\u4e32 \n        int l=0,r=len-1;\n        int l1=0,r1=len-1;\n        while(l<r)\n        {\n            if((has[l]-has[l1-1]*cf[l-l1+1])==(has[r1]-has[r-1]*cf[r1-r+1]))\n            {\n                l++,r--;\n                l1=l,r1=r;\n                ans+=2;\n            }\n            else\n            {\n                l++,r--;\n            }\n        }\n        if(l1!=r1+1)ans++;\n        cout<<ans<<endl;\n        memset(has,0,sizeof has);       \n    }\n    return 0;\n}\n```\n\n\u4e0d\u53d6\u6a21\u4e5f\u65e0\u4f24\u5927\u96c5\u561b\u3002",
        "postTime": 1614856966,
        "uid": 364940,
        "name": "Lappland_Texas",
        "ccfLevel": 0,
        "title": "Palindromic Partitions[P4656]"
    },
    {
        "content": "# P4656 [CEOI2017] Palindromic Partitions\n## \u9898\u9762\u63cf\u8ff0\n[https://www.luogu.com.cn/problem/P4656](https://www.luogu.com.cn/problem/P4656)   \n\u610f\u601d\u662f\u628a\u539f\u5b57\u7b26\u4e32\u5212\u5206\u6210\u5c3d\u91cf\u591a\u4e2a\u90e8\u5206\uff0c\u5c06\u6bcf\u4e2a\u90e8\u5206\u770b\u4f5c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u90e8\u5206\u56de\u6587\u3002  \n\u53e6\u4e00\u79cd\u8bf4\u6cd5\uff1a  \n\u5c06\u539f\u5b57\u7b26\u4e32 $L(n=L.size())$ \u5212\u5206\u6210 $x[1],x[2],x[3],\\dots,x[k]$ ,\u4f7f\u5f97 $x[i]=x[k-i-1],i\\in[0,n/2]$ \uff0c\u6700\u5927\u5316\u8fd9\u4e2a $k$ ,\u5e76\u8f93\u51fa $k$ \u3002\n## \u9898\u89e3\n### \u54c8\u5e0c\n#### \u7528\u9014\n\u54c8\u5e0c\u662f\u4e00\u79cd\u5b57\u7b26\u4e32\u7b97\u6cd5\uff0c\u8bbe\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e3a $n$ \uff0c\u5219\u5b83\u53ea\u9700\u8981 $O(n)$ \u7684\u65f6\u95f4\u505a\u9884\u5904\u7406\uff0c\u4e4b\u540e\u5c31\u80fd\u5728 $O(1)$ \u7684\u65f6\u95f4\u5185\u5224\u65ad\u4e24\u4e2a\u5b57\u4e32\u662f\u5426\u76f8\u540c\u3002\n#### \u5b9e\u73b0\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u4e2a\u5b57\u7b26\u4e32\u770b\u6210\u4e00\u4e2a $base$ \u8fdb\u5236\u7684\u6570\uff0c\u6bcf\u4e00\u4f4d\u662f\u8be5\u5b57\u7b26\u7684 ASCII \uff0c\u7528\u6570\u7ec4 $h[i]$ \u8868\u793a\u8be5\u5b57\u7b26\u4e32\u4ece $1\\to i$ \u7684\u6570\u503c\u3002  \n\u7136\u540e\u53ef\u4ee5\u5229\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u5f97\u51fa\u5982\u4e0b\u7ed3\u8bba\uff1a  \n$l\\to r$ \u7684\u54c8\u5e0c\u503c = $h[r]-h[l]\\times p[r-l+1]$ \uff0c \u5176\u4e2d $p[i]=p^i$ \u3002  \n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a\u5e94\u8be5\u7528\u591a\u5c11\u8fdb\u5236\u5462\uff1f\u9700\u8981\u9ad8\u7cbe\u5417\uff1f  \n\u5148\u56de\u7b54\u7b2c\u4e8c\u4e2a\u95ee\u9898\u3002\u7531\u4e8e\u9ad8\u7cbe\u592a\u590d\u6742\uff0c\u8fd8\u4f1a\u63d0\u5347\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u56e0\u6b64\u91c7\u7528 long long \u6216 unsigned long long \u5373\u53ef\uff0c\u4e5f\u4e0d\u7528\u53d6\u6a21\uff0c\u53ef\u4ee5\u8ba9\u5b83\u81ea\u7136\u6ea2\u51fa\u3002\u81f3\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6709\u4eba\u7814\u7a76\u8fc7\uff0c\u4f7f\u7528 131 \u8fdb\u5236\u6700\u597d\uff0c\u56e0\u4e3a\u4e0d\u5bb9\u6613\u51b2\u7a81\u3002\u5f53\u7136\uff0c\u5176\u5b83\u6570\u4e5f\u51e0\u4e4e\u4e0d\u53ef\u80fd\u51b2\u7a81\u3002  \n#### \u4f8b\u9898\n[acwing.com/problem/content/140/](acwing.com/problem/content/140/)\n#### \u6a21\u677f\u4ee3\u7801\n```cpp\n//\u4ee3\u7801\u65f6\u95f4\u8f83\u957f\uff0c\u6bd4\u8f83\u62c9\u8de8\uff0c\u8bf7\u89c1\u8c05\n#include<iostream>\n#include<cstdio>\n#include<string>\n#define ll long long\nusing namespace std;\nconst ll base=131;\nll h[1000002],p[1000002];\nll n,m;\nstring temp,x=\" \";\nll l1,r1,l2,r2;\nll get(ll l,ll r){//\u6c42\u53d6\u54c8\u5e0c\u503c\n\treturn h[r]-h[l-1]*p[r-l+1];\n}\nint main(){\n\tp[0]=1;\n\tcin>>temp;n=temp.size();x+=temp;//\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u597d\u4ece 1 \u5f00\u59cb\n\tfor(int i=1;i<=n;i++){\n\t\tp[i]=p[i-1]*base;//\u8ba1\u7b97\u8fdb\u5236\uff0c\u4ee5\u514d\u8d85\u65f6\n\t\th[i]=h[i-1]*base+x[i];//\u54c8\u5e0c\u503c\u7684\u524d\u7f00\u548c\n\t}\n\tscanf(\"%lld\",&m);\n\twhile(m--){\n\t\tscanf(\"%lld%lld%lld%lld\",&l1,&r1,&l2,&r2);\n\t\tif(get(l1,r1)==get(l2,r2)){//\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u5b57\u7b26\u4e32\u76f8\u540c\n\t\t\tprintf(\"Yes\\n\");\n\t\t}\n\t\telse{\n\t\t\tprintf(\"No\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n### \u54c8\u5e0c\u7684\u5e94\u7528\n\u5176\u5b9e\u672c\u9898\u6709\u4e00\u4e9b\u8d2a\u5fc3\u7684\u601d\u60f3\u3002  \n\u5148\u60f3\u4e00\u4e2a\u95ee\u9898\uff1a\u60f3\u8981\u5206\u6210\u5c3d\u91cf\u591a\u7684\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5e94\u8be5\u600e\u4e48\u6837\uff1f\u5f53\u7136\u8d8a\u77ed\u8d8a\u597d\u554a\u5bf9\u4e0d\u5bf9\uff1f\u4e8e\u662f\uff0c\u6211\u4eec\u91c7\u7528\u4e24\u4e2a\u53d8\u91cf $s1,s2$ \uff0c\u5206\u522b\u4ece\u4e24\u7aef\u51fa\u53d1\uff0c\u5f00\u59cb\u5f80\u4e2d\u95f4\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u5730\u5f80\u4e2d\u95f4\u8d70\uff0c\u6bcf\u8d70\u5230\u4e00\u4e2a\u5b57\u7b26\u5c31\u628a\u5b57\u7b26\u52a0\u5230 $s1,s2$ \u91cc\uff0c\u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a  \n```cpp\ns1=s1*base+str[i],s2=s2+str[n-i-1]*b,b*=base;//base\u4ee3\u8868\u8fdb\u5236\n```\n### \u6ce8\u610f\u4e8b\u9879\n\u5728\u4efb\u4f55\u4e00\u9053\u9898\u4e2d\uff0c\u8981\u4e48\u7528 scanf \uff0c\u8981\u4e48\u7528 cin \u3002  \n\u53ea\u8981\u7528\u4e86 cin \uff0c\u5c31\u5fc5\u987b\u52a0\u4e0a\u4e00\u53e5\u8bdd\uff1a\n```cpp\nios::sync_with_stdio(false),cin.tie(0);\n```\n\u56e0\u4e3a cin \u662f\u5f88\u6162\u7684\uff0c\u52a0\u4e86\u4ee5\u540e\u4f1a\u5feb\u4e00\u4e9b\u3002\n### \u4ee3\u7801\n\u53ea\u6709 15 \u884c\uff0c\u4f46\u8bf7\u4ed4\u7ec6\u770b\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long ll;\nconst int base=131;\nstring str;ll n,s1,s2,b;int ans;\nint main(){\n\tios::sync_with_stdio(false),cin.tie(0);int T;cin>>T;\n\twhile(T--){//\u8fd9\u91cc\u4e0d\u7528\u54c8\u5e0c\u6a21\u677f\u7684\u65b9\u5f0f\n\t\tcin>>str,n=str.size();s1=str[0],s2=str[n-1],b=base,ans=0;\n\t\tfor(int i=0;i<n/2;i++,s1=s1*base+str[i],s2=s2+str[n-i-1]*b,b*=base)//\u8fd9\u91cc\u4f7f\u7528\u4e86\u54c8\u5e0c\u7684\u601d\u60f3\uff0c\u628a\u5b57\u7b26\u53d8\u6210\u6570\u52a0\u5728\u4e86 s1,s2 \u4e2d\n\t\t\tif(s1==s2)ans+=2,s1=s2=0,b=1;\n\t\tprintf(\"%d\\n\",ans+((s1-str[n/2])/base||n%2));//\u7279\u5224\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1662441330,
        "uid": 367359,
        "name": "Neil_Qian",
        "ccfLevel": 6,
        "title": "P4656 [CEOI2017] Palindromic Partitions"
    },
    {
        "content": "~~\u8fd9\u9898\u5927\u6982\u662f CEOI2017 \u91cc\u6700\u6c34\u7684\u5427~~\n\n\u9996\u5148\u9898\u76ee\u4e2d\u8bf4\u8981\u5206\u6210\u5c3d\u53ef\u80fd\u591a\u7684\u5c0f\u5757\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e00\u5757\u8981\u5c3d\u91cf\u77ed\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u7528\u4e00\u79cd\u9012\u5f52\u7684\u65b9\u5f0f\u6c42\u89e3\u3002\u8bbe $f(l,r)$ \u4e3a\u5b57\u7b26\u4e32 $a$ \u4e2d $a_l\\cdots a_r$ \u6700\u591a\u80fd\u5206\u6210\u591a\u5c11\u5c0f\u5757\u3002\u90a3\u4e48\u6bcf\u6b21\u679a\u4e3e $i\\in[1,r-l+1]$\uff0c\u8868\u793a\u5757\u957f\u3002\u7136\u540e\u5224\u65ad $a_l\\cdots a_{l+i-1}$ \u80fd\u5426\u4e0e $a_{r-i+1}\\cdots a_r$ \u5339\u914d\uff0c\u5982\u679c\u80fd\u4e14 $[l,l+i-1]$ \u4e0e $[r-i+1,r]$ \u6ca1\u6709\u91cd\u5408\uff0c\u90a3\u4e48\u4ee4\u7b54\u6848\u52a0\u4e8c\uff0c\u9012\u5f52\u5230 $f(l+i,r-i)$ \u7ee7\u7eed\u6c42\u89e3\u3002\u5426\u5219\u4ee4\u7b54\u6848\u52a0\u4e00\uff08\u4e0d\u80fd\u518d\u5206\u5c31\u628a\u5b83\u7b97\u4f5c\u4e2d\u95f4\u7684\u4e00\u6bb5\uff09\u5e76\u8fd4\u56de\u3002\u4f46\u8981\u6ce8\u610f\u5728 $l>r$ \u65f6\u53ca\u65f6\u9000\u51fa\u3002\n\n\u7531\u4e8e\u8981\u5904\u7406\u7684\u957f\u5ea6\u4e0d\u65ad\u9012\u51cf\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u591a $O(n)$\u3002\n\n\u5176\u4e2d\u7684\u5339\u914d\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c $O(1)$ \u5b9e\u73b0\u3002\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n------------\n### \u4ee3\u7801\n###### \u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\n```cpp\n\n\n#include <cstdio>\n#include <cstring>\n#define ull unsigned long long\n\nusing namespace std;\n\nconst ull P = 131;\nint T;\nchar S[1000009];\nint N;\null s[1000009]; //\u7528 unsigned long long \u662f\u56e0\u4e3a\u65e0\u7b26\u53f7\u4f4d\u6574\u6570\u5c31\u76f8\u5f53\u4e8e\u5bf92\u768464\u6b21\u65b9\u6c42\u4f59\null p[1000009];\nint res;\n\nint Get_Str (int l, int r) { //\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u6c42S[l]-S[r]\u7684\u54c8\u5e0c\u503c\n    return s[r] - s[l - 1] * p[r - l + 1];\n}\n\nvoid Get_Res (int l, int r) { //\u5373\u524d\u9762\u7684f\n    int i;\n\n    if (l > r) return;\n    for (i = 1; i <= r - l + 1; i++)\n        if (Get_Str(l, l + i - 1) == Get_Str(r - i + 1, r)) break;\n    if (l + i - 1 >= r - i + 1) { res++; return; }\n    else {\n        res += 2;\n        Get_Res(l + i, r - i);\n    }\n}\n\nint main () {\n    p[0] = 1;\n    for (int i = 1; i <= 1000000; i++) p[i] = p[i - 1] * P;\n    scanf(\"%d\", &T);\n    while (T--) {\n        scanf(\"%s\", S + 1);\n        N = strlen(S + 1);\n        for (int i = 1; i <= N; i++) s[i] = s[i - 1] * P + S[i] - 'a' + 1;\n        res = 0;\n        Get_Res(1, N);\n        printf(\"%d\\n\", res);\n    }\n\n    return 0;\n}\n```",
        "postTime": 1644218847,
        "uid": 224532,
        "name": "lyxeason",
        "ccfLevel": 5,
        "title": "[CEOI2017]Palindromic Partitions \u9898\u89e3"
    },
    {
        "content": "## P4656 \u9898\u89e3\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u8d2a\u5fc3\u7b56\u7565\uff0c\u5c31\u662f\u80fd\u5212\u5206\u51fa\u6765\u4e00\u4e2a\u524d\u7f00\u548c\u540e\u7f00\u76f8\u540c\u7684\u5b57\u4e32\u65f6\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u8981\u5212\u5206\u51fa\u6765\uff0c\u56e0\u4e3a\u662f\u6c42\u7684\u6700\u591a\u7684\u5c0f\u5757\u3002\n\n\u66b4\u529b\u601d\u8def\u5f88\u660e\u663e\uff0c\u76f4\u63a5\u7528 `STL` \u7684 `string` \u4ece\u4e24\u8fb9\u5f00\u59cb\u66b4\u529b\u5224\u65ad\u3002\n\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c `string` \u7684\u6bd4\u8f83\u65f6\u95f4\u975e\u5e38\u5927\uff0c\u4e3a\u4e86\u8282\u7ea6\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 `string` \u6539\u4e3a\u54c8\u5e0c\uff0c\u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u65f6\u95f4\u3002\n\n\u6700\u540e\uff0c\u5728\u4e2d\u95f4\u7684\u6700\u540e\u4e00\u5757\u9700\u8981\u5224\u65ad\u4e00\u4e0b\uff0c\u5373\u9632\u6b62\u591a\u7b97\u6216\u5c11\u7b97\u3002\n\nCode\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n//\u5feb\u8bfb\u5feb\u8f93\u7565\ntypedef unsigned long long ull;\nconst ull mul = 1e9 + 7;\null t, m, len, a, b, ans;\nchar s[1000005];\nint main() {\n\tscanf(\"%llu\\n\", &t);\n\twhile(t--) {\n\t\ta = b = ans = 0, m = 1;\n\t\tfgets(s + 1, 1000002, stdin);\n\t\tlen = strlen(s + 1) - 1;\n\t\tfu(i, 1, (len + 1) / 2) {\n\t\t\ta = a * mul + s[i], b = s[len - i + 1] * m + b, m *= mul;//Hash\n\t\t\tif(a == b) ans += (i == (len + 1) / 2 && len & 1 ? 1 : 2)/*\u7279\u5224*/, a = b = 0, m = 1;\n\t\t}\n\t\tif(a != b) ++ans;//\u9632\u6b62\u5c11\u7b97\n\t\twrite(ans, '\\n');\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1639378752,
        "uid": 490522,
        "name": "VividCycle",
        "ccfLevel": 7,
        "title": "P4656 \u9898\u89e3\u62a5\u544a"
    },
    {
        "content": "\u5148\u8003\u8651\u66b4\u529b\u7684\u601d\u8def\uff1a\u5206\u5272\uff0c\u5224\u65ad\u6bcf\u4e24\u4e2a\u5bf9\u5e94\u7684\u6bb5\u662f\u5426\u76f8\u7b49\u3002\n\n\u5224\u65ad\u5b57\u7b26\u4e32\u76f8\u7b49\u5f88\u5bb9\u6613\u60f3\u5230\u54c8\u5e0c\u3002\u800c\u201c\u5206\u5272\u201d\u8fd9\u4e00\u6b65\u9aa4\u4e5f\u53ef\u4ee5\u7528\u54c8\u5e0c\u6765\u5b9e\u73b0\uff0c\u53ef\u4ee5\u8f6c\u6362\u6210\u6c42\u6bcf\u4e00\u6bb5\uff08\u76f8\u5f53\u4e8e\u5b50\u4e32\uff09\u7684\u54c8\u5e0c\u503c\u3002\n\n>\u5177\u4f53\u6765\u8bf4\uff0c\u82e5 $l$ \u8868\u793a\u5b50\u4e32\u5de6\u7aef\u70b9\uff0c $r$ \u8868\u793a\u5b50\u4e32\u53f3\u7aef\u70b9\uff0cf(l,r)\u8868\u793a\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\uff0c\u5c31\u6709\uff1a \n$$f(l,r)=f(1,r)-f(1,l)*p^{r-l+1}$$\n>$f(1,l)$ \u5f88\u597d\u6c42\uff0c\u5728\u7b2c\u4e00\u904d\u7b97\u6574\u4f53\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u503c\u65f6\u5c31\u53ef\u4ee5\u6c42\u51fa\u3002 $f(1,r)$ \u540c\u7406\u3002 $p$ \u8868\u793a\u8ba1\u7b97\u6574\u4f53\u54c8\u5e0c\u503c\u65f6\u6bcf\u4e00\u4f4d\u5b57\u7b26\u4e58\u7684\u201c\u8fdb\u5236\u201d\u3002\n\n\u6240\u4ee5\u6700\u7ec8\u7684\u6b65\u9aa4\u5c31\u53ef\u4ee5\u7b80\u5316\u6210\uff1a\u4ece\u5de6\u53f3\u4e24\u7aef\u5411\u4e2d\u95f4\u63a8\u8fdb\uff0c\u5982\u679c\u5de6\u53f3\u4e24\u8fb9\u7684\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u5c31\u4ece\u8fd9\u91cc\u5206\u5272\u4e00\u6b21\u3002\n\u53e6\u5916\uff0c\u4e0d\u8981\u5fd8\u8bb0\u53ef\u80fd\u6700\u540e\u4e00\u6bb5\u4e0d\u80fd\u88ab\u5206\u5272\uff0c\u7b54\u6848\u8981\u52a0\u4e00\u3002\n\nCode:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long ll;\nstring a;\nint T;\nconst int Maxx = 1000000;\nll H[Maxx+5], p[Maxx + 5];\nll f (int l, int r) {\n\treturn H[r] - H[l - 1] * p[r - l + 1]; \n}\nint main () {\n\tp[0] = 1;\n\tfor (int i = 1; i <= Maxx; i++)\tp[i] = p[i - 1] * 31;\n\tscanf (\"%d\\n\", &T);\n\twhile (T--) {\n\t\tcin>>a;\n\t\tll sum = 0, ans = 0, L = 1, R = a.size(), x = 1, y = a.size();\n\t\tfor (int i = 0; i < a.size(); i++) {\n\t\t\tsum = sum * 31 + a[i];\n\t\t\tH[i + 1] = sum;\n\t\t}\n\t\twhile (x < y) {\n\t\t\tif (f(L, x) == f(y, R))\tans += 2, L = x + 1, R = y - 1;\n\t\t\tx++, y--;\n\t\t}\n\t\tif (L <= R)\tans++;\n\t\tprintf (\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1637127617,
        "uid": 488090,
        "name": "bwartist",
        "ccfLevel": 0,
        "title": "P4656 [CEOI2017]Palindromic Partitions\u9898\u89e3"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n[\u54c8\u5e0c](https://baike.baidu.com/item/Hash/390310?fromtitle=%E5%93%88%E5%B8%8C&fromid=24086145&fr=aladdin)\uff0c\u672c\u4eba\u8ba4\u4e3a\u5b83\u662f\u4e00\u4e2a\u5bc6\u7801\u52a0\u5bc6\u6280\u672f\uff0c\u5c31\u662f\u52a0\u5bc6\u4e00\u4e2a\u5bc6\u7801\u6240\u7528\u7684\u4e1c\u897f\u3002\u5728\u7b97\u6cd5\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u5b83\u53ef\u4ee5\u51cf\u5c11\u7a7a\u95f4\uff0c\u867d\u7136\u6709\u53ef\u80fd\u5f15\u8d77\u51b2\u7a81\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e9b\u65b9\u6cd5\u6765\u51cf\u5c11\u51b2\u7a81\u7684\u53ef\u80fd\u3002\u867d\u7136\u5b83\u7684\u90e8\u5206\u95ee\u9898\u53ef\u4ee5\u7528 KMP \u89e3\u51b3\uff0c\u4f46\u672c\u9898\u8fd8\u662f\u63a8\u8350\u4f7f\u7528\u54c8\u5e0c\u3002\n### \u7b97\u6cd5\u601d\u8def\n\u9996\u5148\uff0c\u6211\u4eec\u4f7f\u7528\u5355\u54c8\u5e0c\uff0c\u5177\u4f53\u65b9\u6cd5\u53ea\u9700\u8981\u7528\u5230\u521d\u59cb\u5316\u548c\u67e5\u8be2\u5b50\u4e32\u7684\u503c\uff0c\u5177\u4f53\u65b9\u6cd5\u5982\u4e0b\uff0c\u8bbe\u5e38\u6570 $k=37$\uff0c\u90a3\u4e48 $Hash_i\\gets Hash_{i-1}+s_i+1$\uff0c\u6709\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\uff1f\u5bf9\uff0c\u524d\u7f00\u548c\uff01\u67e5\u8be2\u5b50\u4e32\u7684\u65b9\u6cd5\u53ef\u4ee5\u8fd9\u6837\uff1a\u5b50\u4e32 $[l,r]$ \u7684\u503c\u4e3a $Hash_r-Hash_l \\times Hash_{r-l+1}\\times k^{r-l+1}$\uff0c\u6709\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5 $O(1)$ \u5730\u5339\u914d\u4e86\u3002\u6700\u540e\u8d2a\u5fc3\u7684\u4ece\u53f3\u4fa7\u5bfb\u627e\u4e0e\u5de6\u8fb9\u7684\u76f8\u540c\u7684\u6570\uff0c\u76f8\u540c\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u76f8\u540c\u5c31\u7ee7\u7eed\u67e5\u627e\u3002\n### \u590d\u6742\u5ea6\u5206\u6790\n\u7a7a\u95f4\u590d\u6742\u5ea6 $O(maxl)$\uff0c\u5373 Hash \u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5b57\u6bcd\u53ea\u4fbf\u5229\u5e76\u4e14\u5220\u9664\u4e00\u6b21\uff0c\u53ef\u4ee5\u8fc7\u3002\n### AC Code:\n```cpp\n#include<bits/stdc++.h>\n#define int unsigned long long\nusing namespace std;\nconst int k=37,maxl=1e6+5;\nint t,Hash[maxl],power[maxl];\ninline int getans(int l,int r){\n \treturn Hash[r]-Hash[l-1]*power[r-l+1];\n}//\u67e5\u8be2\u5b50\u4e32\u7684\u503c\nsigned main(){\n\tscanf(\"%llu\",&t);\n\tpower[0]=1;\n\tfor(int i=1;i<=maxl;++i)\n\t\tpower[i]=power[i-1]*k;//\u521d\u59cb\u5316\u6b21\u65b9\u8868\n\tfor(int i=1;i<=t;++i){\n\t\tchar s[maxl];\n\t\tscanf(\"%s\",s+1);\n\t\tint len=strlen(s+1);\n\t\tint l=1,r=len,ans=0;\n\t\tfor(int i=1;i<=len;i++)\n\t\t\tHash[i]=Hash[i-1]*k+s[i]-+1;//\u521d\u59cb\u5316\n\t\twhile(l<r){\n\t\t\tlong long f=-1;\n\t\t\tfor(int i=1;i<=len;++i){\n\t\t\t\tint ll=l+i-1,rr=r-i+1;\n\t\t\t\tif(ll>rr)\n\t\t\t\t\tbreak;\n\t\t\t\tif(getans(l,ll)==getans(rr,r)){\n\t\t\t\t\tf=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(f==-1){\n\t\t\t\tans++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tans+=2,l+=f,r-=f;\n\t\t}\n\t\tif(l==r)\n\t\t\tans++;\n\t\tprintf(\"%llu\\n\",ans);\n\t}\t\n\treturn 0;\n} \n```",
        "postTime": 1637042844,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "P4656 [CEOI2017]Palindromic Partitions \u9898\u89e3"
    },
    {
        "content": "## P4656\u9898\u89e3\n\n**\u524d\u7f6e\u77e5\u8bc6: \u5b57\u7b26\u4e32\u54c8\u5e0c\uff08\u6216 KMP\uff09**\n\n\u9996\u5148\u89c2\u5bdf\u9898\u9762\uff0c\u5176\u610f\u601d\u662f\u8ba9\u6211\u4eec\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u5206\u5272\u6210\u5c3d\u53ef\u80fd\u591a\u7684\u5b50\u4e32\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u5b57\u4e32\u6784\u6210\u7684\u96c6\u5408\u662f\u56de\u6587\u7684\u3002\u6240\u4ee5\u6211\u4eec\u77e5\u9053\uff0c\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u5408\u7406\u7684\u3001\u5feb\u901f\u7684\u65b9\u6cd5\u5224\u65ad\u5b57\u7b26\u4e32\u4e2d\u7684\u4e24\u4e2a\u5b50\u4e32\u662f\u5426\u76f8\u7b49\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528 **KMP** \u6216 **\u5b57\u7b26\u4e32\u54c8\u5e0c**\u3002\n\n\u7531\u4e8e **KMP** \u8fc7\u4e8e\u6df1\u5965\uff0c\u6211\u8fd9\u5c0f\u5c0f\u7684\u849f\u84bb\u8bb2\u4e0d\u660e\u767d\uff0c\u6240\u4ee5\u7ed9\u51fa **\u5b57\u7b26\u4e32\u54c8\u5e0c** \u7684\u505a\u6cd5\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u8ba9\u5b57\u4e32\u5c3d\u53ef\u80fd\u7684\u591a\uff0c\u610f\u601d\u662f\u6211\u4eec\u8981\u8ba9\u6bcf\u4e2a\u5b50\u4e32\u7684\u957f\u5ea6\u5c3d\u53ef\u80fd\u5c0f\uff0c\u5e76\u4e14\u9898\u76ee\u9650\u5236\u4e86\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5728 $O(n)$\uff0c\u6240\u4ee5\u8003\u8651\u8d2a\u5fc3\u7684\u505a\u6cd5\uff08\u7ebf\u6027 DP \u590d\u6742\u5ea6\u8fc7\u9ad8\uff09\u3002\n\n\u4e0d\u59a8\u4ece\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u679a\u4e3e\uff0c\u5982\u679c\u4ece\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5224\u65ad\u8fc7\u7684\u4f4d\u7f6e\uff0c\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u5b57\u4e32\uff08\u5373\uff1a$S[last..i]$\uff09\u4e0e\u5176\u5173\u4e8e\u5b57\u7b26\u4e32\u4e2d\u95f4\u4f4d\u7f6e\u5bf9\u79f0\u7684\u5b57\u7b26\uff08\u5373\uff1a$S[n-i+1..last+1]$\uff09\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u90a3\u4e48\u6211\u4e00\u5b9a\u8981\u5c06\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u5206\u5272\u51fa\u53bb\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u4f7f\u6240\u9009\u96c6\u5408\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6700\u77ed\uff0c\u4ece\u800c\u8fbe\u5230\u5b57\u4e32\u6570\u91cf\u6700\u591a\u7684\u76ee\u7684\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\u548c\u8be6\u7ec6\u89e3\u91ca\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int P = 13331;\nint T, n, ans, last;\nchar s[1000005];\nunsigned long long f[1000005], p[1000005];\nvoid H(){//\u91c7\u7528\u81ea\u7136\u6ea2\u51fa\u6cd5\uff0c\u4fdd\u5b58\u4e00\u4e2a\u5b57\u7b26\u4e32\u53ca\u5176\u5b57\u4e32\u7684\u54c8\u5e0c\u503c\n\tfor (int i = 1; i <= n; i++)\n\t\tf[i] = f[i - 1] * P + s[i] - 'a' + 1;\n}\nbool judge(int l1, int r1, int l2, int r2){\n\t//\u6839\u636e\u54c8\u5e0c\u503c\u5224\u65ad\u4e24\u4e2a\u5b57\u4e32\u662f\u5426\u76f8\u7b49\n\t//\u5224\u65ad\u65b9\u6cd5\u7684\u6b63\u786e\u6027\u8bc1\u660e\u7565 \n\treturn f[r1] - f[l1 - 1] * p[r1 - l1 + 1] == f[r2] - f[l2 - 1] * p[r2 - l2 + 1];\n}\nint main(){\n\tscanf(\"%d\", &T);\n\tp[0] = 1;\n\tfor (int i = 1; i <= 1000000; i++)\n\t\tp[i] = p[i - 1] * P;\n\t//p[i]\u5b58\u50a8 p^i%(2^64-1) \u7684\u503c\uff0c\u7528\u4e8e\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49 \n\twhile(T--){\n\t\tscanf(\"\\n%s\", s + 1);\n\t\tn = strlen(s + 1);\n\t\t//\u8f93\u5165 \n\t\tH();//\u521d\u59cb\u5316Hash\u6570\u7ec4\uff08\u4ee3\u7801\u4e2d\u7684f\u6570\u7ec4\uff09 \n\t\tans = 0, last = 1;//last \n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (judge(last, i, n - i + 1, n - last + 1))\n\t\t\t\tlast = i + 1, ans++;//\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u5df2\u7ecf\u76f8\u7b49\uff0c\u5219\u4e00\u5b9a\u8981\u9009\u51fa \n\t\t\t//\u539f\u56e0\u89c1\u4e0a\u65b9 \n\t\tprintf(\"%d\\n\", ans); \n\t\t//\u8f93\u51fa\u7b54\u6848 \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1637042556,
        "uid": 407225,
        "name": "BotYoung",
        "ccfLevel": 7,
        "title": "Palindromic Partitions"
    },
    {
        "content": "## P4656 [CEOI2017]Palindromic Partitions \u9898\u89e3\n> \u7b2c\u4e00\u773c\u770b\u5230\u9898\u76ee\uff0c\u611f\u89c9\u4ed6\u5e94\u8be5\u662f\u4e2a\u66b4\u529b\u641c\u7d22\uff0c\u4f46\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4\uff0c\u987f\u65f6\u50bb\u4e86 $\\texttt{---}$ \u4ed6\u4e0d\u80fd\u66b4\u529b\uff01\uff01\uff01\u4e8e\u662f\u53ea\u80fd\u7528\u7b2c\u4e8c\u4e2a\u601d\u8def\u3002\n\n> \u9996\u5148\u8fd9\u91cc\u6709\u4e2a\u8d2a\u5fc3\u601d\u60f3\uff0c\u5c31\u662f\u53ea\u8981\u6211\u80fd\u5212\u5206\u6211\u5c31\u5fc5\u987b\u5212\uff01\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u6211\u4eec\u5c31\u53ef\u4ee5\u6e05\u6670\u7684\u7528\u54c8\u5e0c\u6765\u89e3\u51b3\u3002\n\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ull unsigned long long\nint read() { //\u5feb\u8bfb\n\tint x = 0;\n\tchar ch;\n\twhile((ch = getchar()) < '0' || ch > '9');\n\twhile(ch >= '0' && ch <= '9')\n\t\tx = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n\treturn x;\n}\nvoid write(int x) { //\u5feb\u5199 \n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + 48);\n}\nconst int inf = 1e6, p = 137;\null Hash[inf + 5], Pow[inf + 5];\nint T, ans, n, l, r;\nchar s[inf + 5];\null ask(int l, int r) {\treturn Hash[r] - Hash[l - 1] * Pow[r - l + 1]; } //\u67e5\u8be2\u4ece l \u5230 r \u7684\u54c8\u5e0c\u503c \nint main() {\n\tT = read();\n\tPow[0] = 1;\n\tfor (int i = 1; i <= inf; ++i) Pow[i] = Pow[i - 1] * p; //\u9884\u5904\u7406\u51fa p \u7684\u5e42\u6b21 \n\twhile (T--) {\n\t\tmemset(Hash, 0, sizeof(Hash)); //\u521d\u59cb\u5316 \n\t\tscanf(\"%s\", s + 1);\n\t\tn = strlen(s + 1), l = 1, r = n, ans = 0;\n\t\tfor (int i = 1; i <= n; ++i) Hash[i] = Hash[i - 1] * p + s[i]; //\u8ba1\u7b97 hash \u503c \n\t\twhile (l < r) {\n\t\t\tbool flag = 0;\n\t\t\tfor (int i = 1; i <= r - l; ++i) {\n\t\t\t\tif (ask(l, l + i - 1) == ask(r - i + 1, r)) { //\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u5408\u6cd5\uff0c\u5c31\u8df3\u51fa\u5faa\u73af \n\t\t\t\t\tl += i, r -= i, ans += 2, flag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!flag) //\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2a\u4e0d\u80fd\u56de\u6587\u7684\u6570\uff0c\u5c31\u9000\u51fa\u5faa\u73af \n\t\t\t\tbreak;\n\t\t}\n\t\tans += l <= r; //\u5224\u65ad l,r \u4e4b\u95f4\u6709\u6ca1\u6709\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u6709\uff0c\u7b54\u6848\u589e\u52a0 \n\t\twrite(ans), putchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1637042546,
        "uid": 487078,
        "name": "Light_in_Dark",
        "ccfLevel": 0,
        "title": "P4656 [CEOI2017]Palindromic Partitions \u9898\u89e3"
    },
    {
        "content": "**\u601d\u8def\uff1a**\n\n\u7528\u4e24\u4e2a\u6307\u9488 $L$ \u548c $R$ \uff0c\u5206\u522b\u6307\u5411\u5b57\u7b26\u4e32\u9996\u5c3e\u3002\u4ece\u4e24\u7aef\u540c\u65f6\u679a\u4e3e\u627e\u5230\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c  $s_{1 \\sim  L}$ \u548c $s_{R \\sim n}$, \u7136\u540e\u4e0b\u6b21\u518d\u4ece $L$ \u548c $R$ \u51fa\u53d1\uff0c\u7ee7\u7eed\u627e\u5230\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6700\u540e\u627e\u5230\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u8db3 $n$ \u5c31\u5c06\u7b54\u6848\u52a0 $1$\u3002\n\n\u4f8b\u5982\uff1a$\\verb!bonobo!$\n\n\u5148\u627e\u5230 $s_{1\\sim2} = s_{5\\sim6}$= $\\verb!bo!$\uff0c\u5df2\u5339\u914d\u5b57\u7b26\u4e32\u957f\u5ea6 $:4$\n\n\u7136\u540e\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u5269\u4e0b\u7684\u5b57\u7b26\u65e0\u6cd5\u5339\u914d\uff0c\u800c\u4e14\u6211\u4eec\u53d1\u73b0\u5df2\u5339\u914d\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8db3 $n$\u3002\u6240\u4ee5\u5269\u4e0b\u7684 $\\verb!no!$ \u53ea\u80fd\u5355\u72ec\u4e3a\u4e00\u90e8\u5206\u3002\n\n\u6545\u6700\u540e\u7b54\u6848\u4e3a $3$\n\n\u5bf9\u4e8e\u5339\u914d\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 hash \u6765\u7ef4\u62a4\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32 hash \u503c\u76f8\u7b49\uff0c\u5219\u4e24\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u5339\u914d\u3002\n\n**code**\n\n```cpp\n#include <bits/stdc++.h>\n#define int unsigned long long\nusing namespace std;\nconst int maxn = 1e6 + 5; \nconst int base = 31;\nint Hash[maxn], Pow[maxn];\nchar s[maxn];\nint gethash() {\n\tint len = strlen(s + 1);\n\tfor (int i = 1; i <= len; i++) {\n\t\tHash[i] = Hash[i - 1] * base + s[i];\n\t}\n}\nint get(int L, int R) {\n\treturn Hash[R] - Hash[L - 1] * Pow[R - L + 1];\n}\nint ans;\nsigned main() {\n\tPow[1] = base;\n\tfor (int i = 2; i <= maxn; i++) Pow[i] = Pow[i - 1] * base;\n\tint t;\n\tios::sync_with_stdio(false);\n\tcin >> t;\n\twhile (t--) {\n\t\tcin >> s + 1;\n\t\tgethash();\n\t\tans = 0;\n\t\tint len = strlen(s + 1), st = 0;\n\t\tint LL = 1, L = 1, RR = len, R = len;\n\t\twhile (L < R) {\n\t\t\tif (get(LL, L) == get(R, RR)) {\n\t\t\t\tans += 2;\n\t\t\t\tst += 2 * (L - LL + 1);\n\t\t\t\tL++;\n\t\t\t\tR--;\n\t\t\t\tLL = L;\n\t\t\t\tRR = R;\n\t\t\t} else {\n\t\t\t\tL++;\n\t\t\t\tR--;\n\t\t\t}\n\t\t}\n\t\tif (st < len) ans++;\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}\n```\n\n\u5ba3\u4f20\u535a\u5ba2:https://www.cnblogs.com/cqbzjyh/p/15560890.html",
        "postTime": 1637041628,
        "uid": 384530,
        "name": "cqbzjyh",
        "ccfLevel": 5,
        "title": "[CEOI2017]Palindromic Partitions\u9898\u89e3"
    },
    {
        "content": "\u8d2a\u5fc3 + Hash\n\n\u56e0\u4e3a\u8981\u5212\u5206\u4e3a\u5c3d\u91cf\u591a\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u4e24\u8fb9\u5f00\u59cb\u627e\uff0c\u8bbe\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u7740\u4ece\u5de6\u5f80\u53f3\u6570\u548c\u4ece\u53f3\u5f80\u5de6\u6570\u7b2c $i$ \u4e2a\u5b57\u7b26\u3002\u53ea\u8981\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5c31\u628a\u5b83\u4eec\u5206\u79bb\u51fa\u6765\u3002\n\n\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e00\u6837\u53ef\u4ee5\u901a\u8fc7 Hash \u5224\u65ad\uff0c\u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u662f\u4ece\u4e24\u8fb9\u5f80\u4e2d\u95f4\u679a\u4e3e\u7684\uff0c\u53f3\u8fb9\u90a3\u4e2a\u5b57\u7b26\u4e32\u662f\u5012\u7740\u679a\u4e3e\u7684\uff0c\u600e\u4e48\u5224\u65ad\u5462\uff1f\n\n\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u5f53\u524d\u53f3\u8fb9\u904d\u5386\u5230\u7684\u5b57\u7b26\u662f\u5b57\u7b26\u4e32\u7684\u7b2c\u51e0\u4e2a\uff0c\u5047\u8bbe\u5b83\u662f\u7b2c $k$ \u4e2a\uff0c\u90a3\u4e48\u5c31\u52a0\u4e0a\u5b83\u4e58\u4ee5 $base^k$ \u5373\u53ef\u3002\n\n\u6700\u540e\u6709\u4e2a\u7ec6\u8282\uff1a\u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5947\u6570\uff0c\u6216\u8005\u8fd8\u5269\u4e0b\u4e00\u4e9b\u5b57\u7b26\uff0c\u90a3\u4e48\u9700\u8981\u628a\u8fd9\u4e9b\u5b57\u7b26\u4f5c\u4e3a\u4e00\u4e2a\u533a\u95f4\uff0c\u7b54\u6848\u8981\u52a0\u4e00\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define ull unsigned long long\n\nconst int maxn = (int) 1e6 + 5, p = 97, base = 10;\n\nint T, n;\nchar s[maxn];\n\nint main() {\n\tscanf(\"%d\", &T);\n\twhile(T--) {\n\t\tscanf(\"%s\", s + 1);\n\t\tn = strlen(s + 1);\n\t\tull hash1 = 0ull, hash2 = 0ull, pow = 1;\n\t\tint ans = 0;\n\t\tfor(int i = 1; i <= n / 2; i++) {\n\t\t\thash1 = hash1 * p + s[i];\n\t\t\thash2 = hash2 + s[n - i + 1] * pow;\n\t\t\tpow *= p;\n\t\t\tif(hash1 == hash2) {\n\t\t\t\tans += 2;\n\t\t\t\thash1 = hash2 = 0ull;\n\t\t\t\tpow = 1;\n\t\t\t}\n\t\t}\n\t\tif((n & 1) || hash1)\n\t\t\t++ans;\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1637040565,
        "uid": 482058,
        "name": "Liynw",
        "ccfLevel": 5,
        "title": "P4656 [CEOI2017] Palindromic Partitions"
    }
]