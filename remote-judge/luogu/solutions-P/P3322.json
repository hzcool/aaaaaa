[
    {
        "content": "# \u5e7f\u544a\n\n[\u8fd9\u91cc\u89c2\u8d4f\u4f53\u9a8c\u66f4\u4f73](https://www.cnblogs.com/dedicatus545/p/9255850.html)\n\n# \u601d\u8def\n\n## UPD@191114\n\n\u7ecf\u8fc7\u8bc4\u8bba\u533a@yybakioi\u540c\u5b66\u6307\u51fa\uff0c\u8fd9\u7bc7\u9898\u89e3\u5c11\u4e86\u70b9\u4e1c\u897f\n\n\u5728\u6709\u4e24\u4e2a\u4e0d\u8fde\u7eed\u9012\u589e\u6bb5\u7684\u60c5\u51b5\u4e2d\uff0c\u6211\u63d0\u5230\u8981\u8003\u8651\u56db\u79cd\u60c5\u51b5\u3002\u7136\u800c\uff0c**\u6ce8\u610f\u5230\u56db\u79cd\u4ea4\u6362\u91cc\u9762\u6700\u591a\u53ea\u6709\u4e24\u79cd\u662f\u5408\u6cd5\u7684**\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u5176\u5b9e\u662f$O(n^2\\ast2^n\\ast2^n)$\uff0c\u5373$O(2415919104)$\uff0c\u7684\u786e\u8d85\u51fa\u4e86\u6b63\u5e38\u8303\u56f4\u3002\n\n\u4e0d\u8fc7\uff0c\u611f\u8c22\u4e07\u80fd\u7684dfs\uff0c\u8ba9\u6211\u901a\u8fc7\u672c\u9898\n\n## \u539f\u6587\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u76ee\u6709\u4e00\u4e2a\u975e\u5e38\u663e\u7136\uff08\u4f46\u662f\u6211\u4e0d\u4f1a\u4e25\u683c\u8bc1\u660e\uff0c\u53ea\u80fd\u610f\u4f1a\u4e00\u4e0b\uff09\u7684\u7ed3\u8bba\uff1a\u4e00\u4e2a\u5408\u6cd5\u7684\u64cd\u4f5c\u5e8f\u5217\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u64cd\u4f5c\u662f\u53ef\u4ee5\u4e92\u6362\u7684\n\n\u90a3\u4e48\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u52a0\u4e0a\u672c\u9898\u6781\u5c0f\u7684\u6570\u636e\u8303\u56f4\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u641c\u7d22\u4e00\u4e0b\u5462\uff1f\n\nok\u8bf4\u5e72\u5c31\u5e72\n\n\u65e2\u7136\u987a\u5e8f\u4e0d\u91cd\u8981\uff0c\u6211\u4eec\u5c31\u4ece\u4ea4\u6362\u4e24\u4e2a\u957f\u5ea6\u4e3a1\u7684\u5e8f\u5217\u5f00\u59cb\u641c\u7d22\n\n\u8fd9\u65f6\uff0c\u5c31\u6709\u53e6\u5916\u4e00\u4e2a\u6027\u8d28\uff1a\u56e0\u4e3a\u6211\u4eec\u6bcf\u79cd\u4ea4\u6362\u80fd\u4e14\u53ea\u80fd\u505a\u4e00\u6b21\uff0c\u6240\u4ee5\u6709\u7684\u60c5\u51b5\u4e0b\u6211\u4eec\u662f\u4e00\u5b9a\u65e0\u6cd5\u5b8c\u6210\u7684\n\n\u8003\u8651\u4ea4\u6362\u4e24\u4e2a\u957f\u5ea6\u4e3a$2^k$\u7684\u5e8f\u5217\uff0c\u8fd9\u65f6\u6211\u4eec\u628a\u6574\u4e2a\u5e8f\u5217\u5206\u6210\u957f\u5ea6\u4e3a$2^{k+1}$\u7684\u6bb5\n\n\u5982\u679c\u8fd9\u4e9b\u6bb5\u5168\u90e8\u90fd\u662f\u8fde\u7eed\u4e14\u9012\u589e\uff08\u4e5f\u5c31\u662f3,4,5,6\u8fd9\u6837\uff09\u7684\uff0c\u8bf4\u660e\u8fd9\u4e2a\u64cd\u4f5c\u4e0d\u7528\u505a\n\n\u5982\u679c\u8fd9\u4e9b\u6bb5\u91cc\u9762\u6709\u4e00\u4e2a\u4e0d\u662f\u8fde\u7eed\u9012\u589e\u7684\uff0c\u5c31\u628a\u8fd9\u4e2a\u6bb5\u7684\u524d\u540e\u4e24\u534a\u4ea4\u6362\n\n\u5982\u679c\u8fd9\u4e9b\u6bb5\u91cc\u9762\u6709\u4e24\u4e2a\u4e0d\u662f\u8fde\u7eed\u9012\u589e\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u8fd9\u4e24\u6bb5\u7684\u4e24\u534a\uff0c\u8ba8\u8bba\u56db\u79cd\u4ea4\u6362\u7684\u60c5\u51b5\uff0c\u5206\u522b\u5224\u65ad\u5b83\u4eec\u662f\u5426\u5408\u6cd5\n\n\u5982\u679c\u8fd9\u4e9b\u6bb5\u91cc\u9762\u6709\u8d85\u8fc7\u4e24\u4e2a\u4e0d\u662f\u8fde\u7eed\u9012\u589e\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bc1\u660e\u6b64\u65f6\u6211\u4eec\u4e00\u5b9a\u65e0\u6cd5\u5b8c\u6210\u6392\u5e8f\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u641c\u7d22\u679d\u526a\u6389\n\n\u8fd9\u6837\u64cd\u4f5c\u4ee5\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6240\u6709\u5408\u6cd5\u7684\u957f\u5ea6\u4e3a$2^k$\u7684\u5e8f\u5217\u7684\u4ea4\u6362\uff0c\u5b8c\u6210\u4e4b\u540e\u7684\u5e8f\u5217\uff0c\u4e00\u5b9a\u7531\u82e5\u5e72\u4e2a\u957f\u5ea6\u4e3a$2^{k+1}$\u7684\u8fde\u7eed\u9012\u589e\u5e8f\u5217\u6784\u6210\n\n\u8fd9\u65f6\u6211\u4eec\u518d\u9012\u5f52\u5230\u4e0b\u4e00\u5c42\u5904\u7406\uff0c\u9012\u5f52n\u5c42\u4ee5\u540e\u8981\u5224\u65ad\u4e00\u4e0b\u6700\u7ec8\u5e8f\u5217\u662f\u5426\u662f1-n\uff0c\u7136\u540e\u7528\u5f53\u524d\u8fd9\u4e2a\u64cd\u4f5c\u5e8f\u5217\u4e2d\u7684\u64cd\u4f5c\u4e2a\u6570\u7684\u9636\u4e58\u52a0\u5230\u7b54\u6848\u4e0a\uff08\u56e0\u4e3a\u53ef\u4ee5\u968f\u610f\u6539\u53d8\u64cd\u4f5c\u987a\u5e8f\uff09\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(2^{24})$\uff0c\u4f46\u662f\u8fdc\u8fdc\u8fbe\u4e0d\u5230\u8fd9\u4e2a\u503c\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\n#include<vector>\nusing namespace std;\ninline ll read(){\n    ll re=0,flag=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){\n        if(ch=='-') flag=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n    return re*flag;\n} \nll n,a[5010],tmp[5010][15];\nvector<int>ans;//\u4e0d\u540c\u7684\u64cd\u4f5c\u5e8f\u5217\u7684\u64cd\u4f5c\u4e2a\u6570\nvoid dfs(ll k,ll num){\n    ll i,j,t,cnt=0,m1,m2;//cnt\u662f\u975e\u8fde\u7eed\u9012\u589e\u7684\u6bb5\u7684\u4e2a\u6570\uff0cm1m2\u662f\u524d\u4e24\u4e2a\u7684\u8d77\u70b9\n    if(k==n+1){\n        for(i=1;i<=(1<<n);i++) if(tmp[i][k]!=i) return;\n        ans.push_back(num);return;//\u6ce8\u610f\u5230\n    }\n    for(i=1;i<=(1<<n);i+=(1<<k)){//\u7edf\u8ba1cnt\n        t=tmp[i][k];\n        for(j=i+1;j<i+(1<<k);j++){\n            if(tmp[j][k]!=t+j-i){\n                if(cnt==2) return;\n                cnt++;\n                if(cnt==1) m1=i;\n                else m2=i;\n                break;\n            }\n        }\n    }\n    if(cnt>2) return;\n    for(i=1;i<=(1<<n);i++) tmp[i][k+1]=tmp[i][k];\n    if(cnt==0){\n        dfs(k+1,num);return;\n    }\n    if(cnt==1){\n        for(j=m1;j<m1+(1<<k-1);j++) swap(tmp[j][k+1],tmp[j+(1<<k-1)][k+1]);\n        dfs(k+1,num+1);return;\n    }\n    bool flag=1;//\u8fd9\u91cc\u5f00\u59cb\u679a\u4e3e\u56db\u79cd\u60c5\u51b5\n    for(i=1;i<=(1<<k-1);i++) swap(tmp[m1+i-1][k+1],tmp[m2+i-1][k+1]);\n    for(i=1;i<=(1<<k);i++) if(tmp[m1+i-1][k+1]-tmp[m1][k+1]!=i-1) flag=0;\n    for(i=1;i<=(1<<k);i++) if(tmp[m2+i-1][k+1]-tmp[m2][k+1]!=i-1) flag=0;\n    if(flag) dfs(k+1,num+1);\n    flag=1;\n    for(i=1;i<=(1<<n);i++) tmp[i][k+1]=tmp[i][k];\n    for(i=1;i<=(1<<k-1);i++) swap(tmp[m1+(1<<k-1)+i-1][k+1],tmp[m2+i-1][k+1]);\n    for(i=1;i<=(1<<k);i++) if(tmp[m1+i-1][k+1]-tmp[m1][k+1]!=i-1) flag=0;\n    for(i=1;i<=(1<<k);i++) if(tmp[m2+i-1][k+1]-tmp[m2][k+1]!=i-1) flag=0;\n    if(flag) dfs(k+1,num+1);\n    flag=1;\n    for(i=1;i<=(1<<n);i++) tmp[i][k+1]=tmp[i][k];\n    for(i=1;i<=(1<<k-1);i++) swap(tmp[m1+i-1][k+1],tmp[m2+(1<<k-1)+i-1][k+1]);\n    for(i=1;i<=(1<<k);i++) if(tmp[m1+i-1][k+1]-tmp[m1][k+1]!=i-1) flag=0;\n    for(i=1;i<=(1<<k);i++) if(tmp[m2+i-1][k+1]-tmp[m2][k+1]!=i-1) flag=0;\n    if(flag) dfs(k+1,num+1);\n    flag=1;\n    for(i=1;i<=(1<<n);i++) tmp[i][k+1]=tmp[i][k];\n    for(i=1;i<=(1<<k-1);i++) swap(tmp[m1+(1<<k-1)+i-1][k+1],tmp[m2+(1<<k-1)+i-1][k+1]);\n    for(i=1;i<=(1<<k);i++) if(tmp[m1+i-1][k+1]-tmp[m1][k+1]!=i-1) flag=0;\n    for(i=1;i<=(1<<k);i++) if(tmp[m2+i-1][k+1]-tmp[m2][k+1]!=i-1) flag=0;\n    if(flag) dfs(k+1,num+1);\n}\nint main(){\n    n=read();ll i,tans=1,out=0,j;\n    for(i=1;i<=(1<<n);i++) a[i]=read(),tmp[i][1]=a[i];\n    dfs(1,0);\n    for(i=0;i<ans.size();i++){//\u9636\u4e58\u66f4\u65b0\u7b54\u6848\n        tans=1;\n        for(j=1;j<=ans[i];j++) tans*=j;\n        out+=tans;\n    }\n    cout<<out;\n}\n```",
        "postTime": 1530537938,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3322 \u3010[SDOI2015]\u6392\u5e8f\u3011"
    },
    {
        "content": "#Brief Description\n\n\u5c0fA\u6709\u4e00\u4e2a1-2^N\u7684\u6392\u5217A[1..2^N],\u4ed6\u5e0c\u671b\u5c06A\u6570\u7ec4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f,\u5c0fA\u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\u6709N\u79cd,**\u6bcf\u79cd\u64cd\u4f5c\u6700\u591a\u53ef\u4ee5\u6267\u884c\u4e00\u6b21**,\u5bf9\u4e8e\u6240\u6709\u7684i(1<=i<=N),\u7b2ci\u4e2d\u64cd\u4f5c\u4e3a\u5c06\u5e8f\u5217\u4ece\u5de6\u5230\u53f3\u5212\u5206\u4e3a2^{N-i+1}\u6bb5,\u6bcf\u6bb5\u6070\u597d\u5305\u62ec2^{i-1}\u4e2a\u6570,\u7136\u540e\u6574\u4f53\u4ea4\u6362\u5176\u4e2d\u4e24\u6bb5.\u5c0fA\u60f3\u77e5\u9053\u53ef\u4ee5\u5c06\u6570\u7ec4A\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684\\*\u4e0d\u540c\\*\u7684\u64cd\u4f5c\u5e8f\u5217\u6709\u591a\u5c11\u4e2a,\u5c0fA\u8ba4\u4e3a\u4e24\u4e2a\u64cd\u4f5c\u5e8f\u5217\u4e0d\u540c,\u5f53\u4e14\u4ec5\u5f53\u64cd\u4f5c\u4e2a\u6570\u4e0d\u540c,\u6216\u8005\u81f3\u5c11\u4e00\u4e2a\u64cd\u4f5c\u4e0d\u540c(\u79cd\u7c7b\u4e0d\u540c\u6216\u8005\u64cd\u4f5c\u4f4d\u7f6e\u4e0d\u540c).\n\n\n#Algorithm Design\n\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u64cd\u4f5c\u987a\u5e8f\u4e0d\u5f71\u54cd\u7b54\u6848, \u6211\u4eec\u53ea\u9700\u8981\u8003\u5bdf\u6bcf\u79cd\u64cd\u4f5c\u662f\u5426\u9009\u4e2d, \u82e5\u9009\u4e2d\u4ea4\u6362\u54ea\u4e24\u5757\u5c31\u597d\u4e86. \u4e00\u4e2a\u5408\u6cd5\u7684\u64cd\u4f5c\u5e8f\u5217\u5982\u679c\u6709$n$\u4e2a\u64cd\u4f5c, \u90a3\u4e48\u53ef\u4ee5\u7ed9\u7b54\u6848$contribute\\ n!$.  \u6211\u4eec\u4ece\u5c0f\u5230\u5927\u8003\u5bdf\u6bcf\u4e00\u79cd\u64cd\u4f5c, \u9996\u5148, \u53ef\u4ee5\u77e5\u9053, \u5bf9\u4e8e\u64cd\u4f5c$2^i$, \u5e8f\u5217\u80af\u5b9a\u5df2\u7ecf\u88ab\u5206\u6210\u4e86$2^{n-i+1}$\u4e2a\u6709\u5e8f\u6570\u5217, \u6211\u4eec\u9996\u5148\u68c0\u67e5\u662f\u5426\u6709\u5e8f, \u5982\u679c\u6709\u95ee\u9898\u76f4\u63a5$return$. \u7136\u540e\u626b\u63cf\u6bcf\u4e2a\u5757, \u6bcf\u4e24\u4e2a\u5757\u90fd\u5fc5\u987b\u662f\u6709\u5e8f\u7684, \u5426\u5219\u8981\u4ea4\u6362. \u5982\u679c$tot \\geqslant 4$\u90a3\u4e48\u4e00\u5b9a\u4e0d\u5408\u6cd5. \u4ee3\u7801\u8868\u8fbe\u7684\u975e\u5e38\u6e05\u695a.\n\n\n#Code\n```cpp\n#include <algorithm>\n#include <cstdio>\n#define ll long long\nconst int maxn = 1 << 13;\nint n;\nint a[maxn];\nll po[13];\nll ans;\nbool check(int k) {\n  for (int i = 1; i <= (1 << (n - k)); i++)\n    if (a[(i - 1) * (1 << k) + 1] + (1 << (k - 1)) !=\n        a[(i - 1) * (1 << k) + (1 << (k - 1)) + 1])\n      return 0;\n  return 1;\n}\nvoid swap(int i, int j, int k) {\n  for (int m = 1; m <= k; m++)\n    std::swap(a[i + m - 1], a[j + m - 1]);\n}\nvoid dfs(int now, int num) {\n  if (now && !check(now))\n    return;\n  if (now == n) {\n    ans += po[num];\n    return;\n  }\n  dfs(now + 1, num);\n  int tmp[5], tot = 0;\n  for (int i = 1; i <= (1 << (n - now)); i += 2)\n    if (a[i * (1 << now) + 1] != a[(i - 1) * (1 << now) + 1] + (1 << now)) {\n      if (tot == 4)\n        return;\n      tmp[++tot] = i;\n      tmp[++tot] = i + 1;\n    }\n  if (!tot)\n    return;\n  for (int i = 1; i <= tot; i++)\n    for (int j = i + 1; j <= tot; j++) {\n      swap((1 << now) * (tmp[i] - 1) + 1, (1 << now) * (tmp[j] - 1) + 1,\n           1 << now);\n      dfs(now + 1, num + 1);\n      swap((1 << now) * (tmp[i] - 1) + 1, (1 << now) * (tmp[j] - 1) + 1,\n           1 << now);\n    }\n}\nint main() {\n  // freopen(\"input\", \"r\", stdin);\n  po[0] = 1;\n  for (int i = 1; i <= 12; i++)\n    po[i] = po[i - 1] * i;\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= 1 << n; i++)\n    scanf(\"%d\", &a[i]);\n  dfs(0, 0);\n  printf(\"%lld\", ans);\n}\n```\n[\u6211\u7684\u535a\u5ba2](http://www.cnblogs.com/gengchen/p/6593071.html)\n",
        "postTime": 1490064006,
        "uid": 7429,
        "name": "MrMorning",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3322 \u3010[SDOI2015]\u6392\u5e8f\u3011"
    },
    {
        "content": "\u4ed4\u7ec6\u5ba1\u9898\uff1a\n\n> \u4e24\u4e2a\u64cd\u4f5c\u5e8f\u5217\u4e0d\u540c,\u5f53\u4e14\u4ec5\u5f53\u64cd\u4f5c\u4e2a\u6570\u4e0d\u540c,\u6216\u8005\u81f3\u5c11\u4e00\u4e2a\u64cd\u4f5c\u4e0d\u540c\uff08\u79cd\u7c7b\u4e0d\u540c\u6216\u8005\u64cd\u4f5c\u4f4d\u7f6e\u4e0d\u540c\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u7684\u201c\u64cd\u4f5c\u4f4d\u7f6e\u201d\u6307\u7684\u662f\u64cd\u4f5c\u987a\u5e8f\uff09\uff09\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u64cd\u4f5c\u5e8f\u5217\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u591a\u4e0e\u5c11\u548c\u4f60\u67d0\u4e00\u6b21\u64cd\u4f5c\u4ea4\u6362\u54ea\u4e24\u6bb5\u6570\u5b57\u6ca1\u6709\u5173\u7cfb\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\uff1a\n\n> \u6bcf\u79cd\u64cd\u4f5c\u6700\u591a\u53ef\u4ee5\u6267\u884c\u4e00\u6b21\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6761\u4ef6\u3002\n\n\u8003\u573a\u4e0a\u624b\u73a9\u4e86\u4e00\u4e0b\u6837\u4f8b\uff0c\u53d1\u73b0\u64cd\u4f5c\u7ed3\u679c\u548c\u64cd\u4f5c\u987a\u5e8f\u6ca1\u6709\u5173\u7cfb\uff08\u7ed3\u8bba1\uff0c\u8bc1\u660e\u662f\u8d5b\u540e\u624d\u60f3\u51fa\u6765\u7684\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u628a\u64cd\u4f5c\u79cd\u7c7b\u90fd\u76f8\u540c\u7684\u64cd\u4f5c\u5e8f\u5217\u90fd\u5f52\u4e3a\u4e00\u7c7b\u3002\u663e\u7136\uff0c\u6839\u636e\u7ed3\u8bba1\uff0c\u5982\u679c\u67d0\u4e00\u7c7b\u4e2d\u7684\u67d0\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\uff08\u8bbe\u5176\u957f\u5ea6\u4e3a $len$\uff09\u80fd\u5b9e\u73b0\u5c06\u6570\u7ec4 $A$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u8fd9\u4e00\u7c7b\u7684\u6240\u6709\u64cd\u4f5c\u5e8f\u5217\uff08\u663e\u7136\uff0c\u8fd9\u4e00\u7c7b\u7684\u6240\u6709\u64cd\u4f5c\u5e8f\u5217\u90fd\u662f $len$\uff09\u90fd\u53ef\u4ee5\u5b9e\u73b0\u5c06\u6570\u7ec4 $A$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u8fd9\u4e00\u7c7b\u7684\u6240\u6709\u64cd\u4f5c\u5e8f\u5217\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $len!$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u7c7b\u64cd\u4f5c\u5e8f\u5217\uff0c\u6211\u4eec\u5c31\u5148\u94a6\u5b9a\u64cd\u4f5c\u5e8f\u5217\u7684\u64cd\u4f5c\u79cd\u7c7b\u662f\u4ece\u5c0f\u5230\u5927\u7684\uff0c\u7136\u540e\u518d\u770b\u80fd\u4e0d\u80fd\u6ee1\u8db3\u9898\u610f\u3002\u6bd4\u5982\u8bf4\u5bf9\u4e8e\u4e00\u7c7b\u64cd\u4f5c\u5e8f\u5217 $\\{132,123,213,231,312,321\\}$\uff0c\u6211\u4eec\u5c31\u770b\u64cd\u4f5c\u5e8f\u5217 $123$ \u80fd\u4e0d\u80fd\u6ee1\u8db3\u9898\u610f\u3002\n\n\u8003\u8651\u7528 dfs \u679a\u4e3e\u6bcf\u4e00\u79cd\u64cd\u4f5c\u505a\u4e0d\u505a\uff0c\u6700\u540e\u5f97\u51fa\u4e00\u4e2a\u64cd\u4f5c\u79cd\u7c7b\u4ece\u5c0f\u5230\u5927\u6392\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(2^n)$\u3002\n\n\u5173\u952e\u662f\u5982\u4f55\u5224\u65ad\u4e00\u79cd\u64cd\u4f5c\u5e8f\u5217\u80fd\u4e0d\u80fd\u6ee1\u8db3\u9898\u610f\u3002\n\n\u4e0d\u59a8\u8bbe\u5f53\u524d\u7684\u64cd\u4f5c\u5e8f\u5217\u662f $k_1,k_2,\\dots,k_m$\uff0c\u6709 $k_1<k_2<\\dots<k_m$\u3002\n\n~~\u63a5\u4e0b\u6765\u7684\u65f6\u95f4\u70b9\u53ef\u80fd\u4f1a\u6709\u70b9\u590d\u6742\uff0c\u8bf7\u8010\u5fc3\u9605\u8bfb\u3002~~\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u8981\u6267\u884c\u64cd\u4f5c $k_i$\uff0c\u90a3\u4e48\u5c31\u8981\u5c06\u5e8f\u5217\u4ece\u5de6\u5230\u53f3\u5212\u5206\u4e3a $part=2^{n-k_i+1}$ \u6bb5,\u6bcf\u6bb5\u6070\u597d\u5305\u62ec $len=2^{k_i-1}$ \u4e2a\u6570,\u7136\u540e\u6574\u4f53\u4ea4\u6362\u5176\u4e2d\u4e24\u6bb5\u3002\u90a3\u4e48\u6709\uff1a\n\n1. \u5982\u679c\u67d0\u4e00\u6bb5\u5185\u7684\u6570\u4e0d\u662f\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u8bdd\uff0c\u8fd9\u79cd\u64cd\u4f5c\u5e8f\u5217\u4e0d\u53ef\u80fd\u6ee1\u8db3\u9898\u610f\uff0c\u56e0\u4e3a\u4e4b\u540e\u7684\u64cd\u4f5c\u90fd\u6bd4\u8fd9\u4e00\u6b21\u64cd\u4f5c\u5927\uff0c\u6bb5\u5185\u7684\u987a\u5e8f\u662f\u4e0d\u53ef\u80fd\u518d\u6539\u53d8\u7684\u4e86\u3002\n\n2. \u5982\u679c\u67d0\u4e00\u6bb5\u7684\u5f00\u5934\u4e0d\u662f $len\\times t+1 (t\\in \\mathbb{N})$ \u7684\u8bdd\uff0c\u8fd9\u79cd\u64cd\u4f5c\u4e5f\u4e0d\u53ef\u80fd\u6ee1\u8db3\u9898\u610f\u3002\n\n\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u8981\u6267\u884c\u64cd\u4f5c $k_i$\uff0c\u4e14\u6ee1\u8db3\u4e0a\u9762\u7684\u4e24\u4e2a\u6761\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u8981\u4e3a**\u4e0b\u4e00\u6b21\u6267\u884c\u64cd\u4f5c**\u505a\u51c6\u5907\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u628a\u6bcf\u6bb5\u5185\u7684\u6570\u6392\u597d\u5e8f\uff08**\u8fd9\u91cc\u7684\u201c\u6bb5\u201d\u662f\u6307\u6309\u64cd\u4f5c $k_i+1$ \u5206\u7684\u6bb5**\uff09\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u8981\u4fdd\u8bc1\uff1a\u628a**\u5f53\u524d**\u6570\u7ec4\u5206\u7684\u6bb5**\u4e24\u4e24\u5408\u5e76\u6210\u4e00\u6bb5\u540e**\uff0c\u6bcf\u4e00\u6bb5\u5185\u662f\u8981\u6392\u597d\u5e8f\u7684\u3002\u6bd4\u5982**\u5f53\u524d** $56|78|34|12$\uff08\u201c$|$\u201d\u662f\u5206\u6bb5\u7684\u610f\u601d\uff09\uff0c**\u4e24\u4e24\u5408\u5e76\u6210\u4e00\u6bb5\u540e**\u5f97\u4fdd\u8bc1\u6bcf\u6bb5\u5185\u8981\u6392\u597d\u5e8f\uff0c\u4e5f\u5c31\u662f\u8981\u628a**\u5f53\u524d**\u7684\u7b2c $1$\u3001$2$ \u6bb5\u4ea4\u6362\uff0c\u518d\u4e24\u4e24\u5408\u5e76\uff1a$56|78|34|12\\rightarrow 56|78|12|34 \\rightarrow 5678|1234$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u6309\u7167\u4e0b\u4e00\u6b21\u64cd\u4f5c\u7684\u5206\u6cd5\uff0c\u5f97\u51fa\u6709\u54ea\u4e9b\u6bb5\uff08**\u8fd9\u91cc\u7684\u201c\u6bb5\u201d\u662f\u6307\u6309\u64cd\u4f5c $k_i+1$ \u5206\u7684\u6bb5**\uff09\u662f\u4e0d\u7b26\u5408\u8981\u6c42\u7684\uff0c\u7136\u540e\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. \u6709\u5927\u4e8e $2$ \u6bb5\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u4e0d\u80fd\u6ee1\u8db3\u9898\u610f\uff0c\u56e0\u4e3a\u4e00\u6b21\u4ea4\u6362\u64cd\u4f5c\u6700\u591a\u53ea\u80fd\u6539\u53d8\u4e24\u6bb5\u3002\n\n1. \u6240\u6709\u6bb5\u90fd\u7b26\u5408\u6761\u4ef6\uff0c\u90a3\u4e48\u4e0d\u7528\u6267\u884c\u64cd\u4f5c $k_i$\uff0c\u76f4\u63a5\u5411\u4e0b\u9012\u5f52\u3002\n\n1. \u53ea\u6709 $1$ \u6bb5\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u90a3\u4e48\u5c31\u628a\u8fd9\u6bb5\u7684\u4e24\u4e2a\u5c0f\u6bb5\uff08**\u5c0f\u6bb5\u662f\u6307\u6309\u64cd\u4f5c $k_i$ \u5206\u7684\u6bb5**\uff09\u524d\u540e\u4ea4\u6362\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u8fd9\u4e24\u4e2a\u5c0f\u6bb5\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u3002\n\n1. \u6070\u6709 $2$ \u6bb5\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u8bbe\u8fd9\u4e24\u6bb5\u4e3a $x$\u3001$y$\uff0c$x$ \u5206\u51fa\u6765\u7684\u4e24\u4e2a\u5c0f\u6bb5\u4e3a $a$\u3001$b$\uff0c$y$ \u5206\u51fa\u6765\u7684\u4e24\u4e2a\u5c0f\u6bb5\u4e3a $c$\u3001$d$\u3002\u90a3\u4e48\u6211\u4eec\u5206\u56db\u79cd\u60c5\u51b5\u770b\u7b26\u4e0d\u7b26\u5408\u9898\u610f\uff1a$\\operatorname{swap}(a,c)$\u3001$\\operatorname{swap}(a,d)$\u3001$\\operatorname{swap}(b,c)$\u3001$\\operatorname{swap}(b,d)$\u3002\n\n\u6700\u540e\u4e00\u76f4\u5230 $k_i=n$ \u90fd\u6ee1\u8db3\u6761\u4ef6\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u8bb0\u5f55\u5e76\u8fd4\u56de\u4e86\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u662f\u6309\u64cd\u4f5c\u79cd\u7c7b\u6765\u679a\u4e3e\u7684\uff0c\u6240\u4ee5\u6bcf\u4e2a\u7b54\u6848\u90fd\u8981\u9636\u4e58\u4e00\u4e0b\uff0c\u800c\u4e14\u8981\u7528\u72b6\u538b\u8bb0\u5f55\u4e00\u4e0b\u64cd\u4f5c\u79cd\u7c7b\u9632\u6b62\u7b97\u91cd\uff08\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\n#define P 4100\n#define ll long long\n\nusing namespace std;\n\nll ans;\nint n,pown,a[P];\nbool vis[P];//\u72b6\u538b\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u79cd\u7c7b\n\nll A(int x)//\u9636\u4e58\n{\n\tll ans=1;\n\tfor(int i=1;i<=x;i++)\n\t\tans*=i;\n\treturn ans;\n}\n\nvoid swapp(int st1,int ed1,int st2,int ed2)//\u5c06A[st1,ed1]\u4e0eA[st2,ed2]\u4ea4\u6362\n{\n\tfor(int l=st1,r=st2;l<=ed1;l++,r++)\n\t\tswap(a[l],a[r]);\n}\n\nbool check(int st,int ed,int len)//\u770bA[st,ed]\u662f\u5426\u6ee1\u8db3\u9898\u89e3\u4e2d\u8bf4\u5230\u7684\u4e24\u4e2a\u6761\u4ef6\n{\n\tif((a[st]-1)%len) return false;//\u6761\u4ef62\n\tfor(int i=st+1;i<=ed;i++)\n\t\tif(a[i]!=a[i-1]+1)//\u6761\u4ef61\n\t\t\treturn false;\n\treturn true;\n}\n\nvoid dfs(int k,int sum,int sta)\n{\n\tif(k==n)//\u9000\u51fa\n\t{\n\t\tif(!vis[sta])//\u5224\u65ad\u9632\u6b62\u7b97\u91cd\n\t\t{\n\t\t\tans+=A(sum);\n\t\t\tvis[sta]=true;\n\t\t}\n\t\treturn;\n\t}\n\tint len=1<<(k+1),part=1<<(n-k-1);\n\tvector<int>wrong;//\u6709\u54ea\u4e9b\u6bb5\u662f\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\n\twrong.clear();\n\tfor(int i=1;i<=part;i++)\n\t{\n\t\tint st=(i-1)*len+1,ed=i*len;\n\t\tif(!check(st,ed,len)) wrong.push_back(i);\n\t}\n\tif(wrong.size()>2) return;//\u5927\u4e8e2\u4e0d\u7b26\u5408\u9898\u610f\n\tif(!wrong.size())//\u7b49\u4e8e0\u76f4\u63a5\u5411\u4e0b\u9012\u5f52\n\t{\n\t\tdfs(k+1,sum,sta);\n\t\treturn;\n\t}\n\tif(wrong.size()==1)//\u7b49\u4e8e1\u4ea4\u6362\u524d\u540e\u4e24\u4e2a\u5c0f\u6bb5\n\t{\n\t\tint id=wrong[0];\n\t\tint st=(id-1)*len+1,ed=id*len,mid=(st+ed)/2;\n\t\tswapp(st,mid,mid+1,ed);\n\t\tdfs(k+1,sum+1,sta|(1<<k));\n\t\tswapp(st,mid,mid+1,ed);\n\t\treturn;\n\t}\n   //\u7b49\u4e8e2\u5206\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba\n\tint id1=wrong[0],id2=wrong[1];\n\tint st1=(id1-1)*len+1,ed1=id1*len,mid1=(st1+ed1)/2;\n\tint st2=(id2-1)*len+1,ed2=id2*len,mid2=(st2+ed2)/2;\n\t\n\tswapp(st1,mid1,st2,mid2);\n\tif((check(st1,ed1,len)&&check(st2,ed2,len))) dfs(k+1,sum+1,sta|(1<<k));\n\tswapp(st1,mid1,st2,mid2);\n\t\n\tswapp(st1,mid1,mid2+1,ed2);\n\tif((check(st1,ed1,len)&&check(st2,ed2,len))) dfs(k+1,sum+1,sta|(1<<k));\n\tswapp(st1,mid1,mid2+1,ed2);\n\t\n\tswapp(mid1+1,ed1,st2,mid2);\n\tif((check(st1,ed1,len)&&check(st2,ed2,len))) dfs(k+1,sum+1,sta|(1<<k));\n\tswapp(mid1+1,ed1,st2,mid2);\n\t\n\tswapp(mid1+1,ed1,mid2+1,ed2);\n\tif((check(st1,ed1,len)&&check(st2,ed2,len))) dfs(k+1,sum+1,sta|(1<<k));\n\tswapp(mid1+1,ed1,mid2+1,ed2);\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tpown=1<<n;\n\tfor(int i=1;i<=pown;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tdfs(0,0,0);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n/*\n2\n1 3 2 4\n*/\n/*\n3\n3 6 1 2 7 8 5 4\n*/\n/*\n2\n1 4 2 3\n*/\n```",
        "postTime": 1595145749,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3322 \u3010[SDOI2015]\u6392\u5e8f\u3011"
    },
    {
        "content": "##  Solution\n\u9996\u5148\u6709\u7ed3\u8bba  \n>\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217 , \u64cd\u4f5c\u4e4b\u95f4\u4e4b\u95f4\u7684\u987a\u5e8f\u53ef\u4ee5\u4efb\u610f\u4ea4\u6362 .   \n\n\u5e94\u8be5\u6bd4\u8f83\u663e\u7136 , \u624b\u6a21\u4e00\u4e0b\u5e94\u8be5\u5c31\u53ef\u4ee5\u53d1\u73b0 .  \n\u65e2\u7136\u64cd\u4f5c\u5e8f\u5217\u7684\u987a\u5e8f\u53ef\u4ee5\u4ea4\u6362 , \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u627e\u51fa\u6240\u6709\u7684\u64cd\u4f5c\u79cd\u7c7b\u9012\u589e\u7684\u64cd\u4f5c\u5e8f\u5217 , \u7136\u540e\u628a\u5b83\u4eec\u5e8f\u5217\u957f\u5ea6\u7684\u9636\u4e58\u76f8\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848 .   \n\u73b0\u5728\u7684\u95ee\u9898\u662f , \u5982\u4f55\u627e\u51fa\u6240\u6709\u64cd\u4f5c\u9012\u589e\u7684\u5e8f\u5217 .   \n\u5bb9\u6613\u53d1\u73b0 , \u5728\u7b2c $i$ \u6b21\u64cd\u4f5c\u65f6 , \u5fc5\u987b\u5c06\u6240\u6709 $[k* 2^i,k* 2^i+2^i]\\  k\\in N$ \u7684\u533a\u95f4\u5168\u90e8\u53d8\u4e3a\u5355\u8c03\u9012\u589e . \u56e0\u4e3a\u5982\u679c\u5728\u8fd9\u6b21\u64cd\u4f5c\u65f6\u6ca1\u6709\u628a\u5b83\u53d8\u4e3a\u5355\u8c03\u9012\u589e , \u90a3\u4e48\u540e\u9762\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u4e0d\u80fd\u518d\u5bf9\u8fd9\u6bb5\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c . \u90a3\u4e48\u6bcf\u6b21\u64cd\u4f5c\u65f6\u90fd\u8981\u627e\u51fa\u5f53\u524d\u9700\u8981\u66f4\u6539\u7684\u70b9 , \u5982\u679c\u4e0d\u80fd\u7528\u4e00\u6b21\u64cd\u4f5c\u4f7f\u4e4b\u5408\u6cd5\u5c31\u8fd4\u56de .   \n\u4f46\u76f4\u63a5\u8fd9\u4e48\u5199\u53ef\u80fd\u4e0d\u592a\u597d\u5b9e\u73b0 , \u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u6bd4\u8f83\u597d\u5199\u7684\u601d\u8def .  \n\u9996\u5148\u8003\u8651\u7b2c\u4e00\u6b21\u64cd\u4f5c .  \n\u76ee\u6807\u5e8f\u5217\u4e2d\u663e\u7136\u5947\u6570\u4e00\u5b9a\u5728\u5947\u6570\u4f4d\u4e0a , \u6545\u6211\u4eec\u5148\u627e\u51fa\u6240\u6709\u6570\u5b57\u5947\u5076\u6027\u4e0e\u4f4d\u7f6e\u5947\u5076\u6027\u4e0d\u76f8\u540c\u7684\u6570\u5b57 , \u5982\u679c\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u5b9e\u73b0 , \u90a3\u4e48\u8fd9\u4e9b\u6570\u5b57\u4e00\u5b9a\u662f\u4e00\u5947\u4e00\u5076 , \u8fd9\u65f6\u6211\u4eec\u4ea4\u6362\u5b83\u4eec , \u540c\u65f6\u8bb0\u5f55\u6211\u4eec\u5df2\u7ecf\u6267\u884c\u4e86\u64cd\u4f5c , \u82e5\u5947\u5076\u6027\u5168\u90fd\u76f8\u540c\u5219\u4e0d\u8bb0\u5f55 .  \n\u7136\u540e\u518d\u5bf9\u6574\u4e2a\u5e8f\u5217\u8fdb\u884c\u904d\u5386\u5bfb\u627e\u4e0d\u7b26\u5408\u9012\u589e\u7684\u6570\u5bf9 , \u5e76\u8bb0\u5f55\u4ed6\u4eec , \u5982\u679c\u524d\u9762\u5df2\u7ecf\u6267\u884c\u4e86\u5947\u5076\u7684\u4ea4\u6362 , \u90a3\u4e48\u5982\u679c\u5728\u8fd9\u91cc\u4e00\u65e6\u53d1\u73b0\u4e0d\u7b26\u5408\u7684\u6570\u5bf9 , \u76f4\u63a5\u8fd4\u56de . \u5982\u679c\u5168\u90fd\u6ee1\u8db3\u9012\u589e , \u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5411\u4e0b\u9012\u5f52 . \u5982\u679c\u4e0d\u7b26\u5408\u7684\u6570\u5bf9\u5927\u4e8e\u4e24\u4e2a , \u90a3\u4e48\u5c31\u4e0d\u53ef\u80fd . \u5426\u5219\u5c31\u4ea4\u6362\u4e24\u4e2a\u6570\u5bf9\u524d\u9762\u7684\u6570\u6216\u8005\u540e\u9762\u7684\u6570 , \u5206\u522b\u9012\u5f52 .  \n\u6ce8\u610f\u5230\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u5e8f\u5217\u6ca1\u6709\u7ee7\u7eed\u4fdd\u5b58\u7684\u5fc5\u8981 , \u6240\u4ee5\u5411\u4e0b\u9012\u5f52\u65f6\u53ef\u4ee5\u628a\u5e8f\u5217\u957f\u5ea6\u51cf\u5c11\u4e00\u534a , \u5e76\u5c06\u6240\u6709\u5947\u6570\u4f4d\u6570\u5b57 $x$ \u53d8\u4e3a $(x+1)/2$ , \u8fd9\u6837\u5904\u7406\u540e\u9012\u5f52\u4e0b\u53bb\u7684\u60c5\u51b5\u5904\u7406\u5c31\u53ef\u4ee5\u548c\u7b2c\u4e00\u6b21\u4e00\u6837 .   \n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801 .  \n#### \u65f6\u95f4\u590d\u6742\u5ea6  \n\u56e0\u4e3a\u6bcf\u6b21dfs\u662f\u6700\u591a\u8fdb\u5165\u4e24\u4e2a\u5206\u652f , \u6240\u4ee5dfs\u6811\u4e0a\u7b2c $i$ \u5c42\u6700\u591a\u53ea\u6709 $2^i$ \u4e2a\u70b9 , \u800c\u5728\u6bcf\u6b21\u5411\u4e0b\u9012\u5f52\u65f6\u90fd\u5c06\u5e8f\u5217\u957f\u5ea6\u7f29\u5c0f\u4e86\u4e00\u534a , \u6240\u4ee5\u5bf9\u4e8e\u7b2c $i$ \u5c42\u7684\u8282\u70b9 , \u6c42\u89e3\u51fa\u5b83\u4eec\u7684\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a $O(2^{n-i})$ , \u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\sum\\limits_{i=0}^n 2^i* 2^{n-i} =(n+1)* 2^n$ , \u5f53 $n$ \u53d6\u6700\u5927 $12$ \u65f6\u4e3a $53248$ , \u53ef\u4ee5\u901a\u8fc7 . \n## Code\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int maxn=1<<13;\nint read()\n{\n    int ret=0;char c=getchar();\n    while(c>'9'||c<'0')c=getchar();\n    while(c>='0'&&c<='9')ret=(ret<<3)+(ret<<1)+(c^48),c=getchar();\n    return ret;\n}\nint n;\nint a[maxn];\nint ans,fac[13];\nvoid dfs(int now,int p[],int tim)//now \u8bb0\u5f55\u5f53\u524d\u8fdb\u884c\u54ea\u79cd\u64cd\u4f5c p[] \u8bb0\u5f55\u5f53\u524d\u5e8f\u5217 tim \u8bb0\u5f55\u5df2\u7ecf\u64cd\u4f5c\u6b21\u6570\n{\n    if(now==n+1)//\u5904\u7406\u5b8c\u6bd5\n    {\n        ans+=fac[tim];return;\n    }\n    int x1=0,x2=0;\n    int oflag=0,flag=0;//oflag \u8868\u793a\u5947\u5076\u6027\u4e0d\u540c\u7684\u4e2a\u6570 flag \u8868\u793a\u4e0d\u6ee1\u8db3\u9012\u589e\u7684\u4e2a\u6570 \n    for(int j=1;j<=(1<<(n-now+1));j++)\n    {\n        if(p[j]%2!=j%2)\n        {\n            oflag++;\n            if(!x1)x1=j;\n            else x2=j;\n        }\n    }\n    if(oflag>2)return;\n    if(oflag==2)swap(p[x1],p[x2]);\n    for(int j=1;j<=(1<<(n-now+1));j+=2)\n    {\n        if(p[j]!=p[j+1]-1)\n        {\n            if(oflag)return;//\u5982\u679c\u540c\u65f6\u6709\u4e0d\u6ee1\u8db3\u5947\u5076\u548c\u9012\u589e\u90a3\u4e48\u4e00\u6b21\u64cd\u4f5c\u4e00\u5b9a\u65e0\u6cd5\u6ee1\u8db3\n            flag++;\n            if(!x1)x1=j;\n            else x2=j;\n            if(flag>2)return;\n        }\n    }\n    for(int j=1;j<=(1<<(n-now+1));j+=2)p[(j+1)>>1]=(p[j]+1)>>1;//\u5bf9\u5e8f\u5217\u8fdb\u884c\u5904\u7406\n    if(flag==0)\n    {\n        if(!oflag)dfs(now+1,p,tim);\n        else dfs(now+1,p,tim+1);//\u5982\u679c\u8fdb\u884c\u4e86\u5947\u5076\u8c03\u6362\u90a3\u4e48\u8981\u589e\u52a0\u5f53\u524d\u6b21\u6570\n        return;\n    }\n    int tmp[maxn];//\u4e34\u65f6\u4fdd\u5b58\u6570\u7ec4\n    for(int i=1;i<=(1<<(n-now));i++)tmp[i]=p[i];\n    dfs(now+1,p,tim+1);\n    for(int i=1;i<=(1<<(n-now));i++)p[i]=tmp[i];\n    swap(p[(x1+1)>>1],p[(x2+1)>>1]);//\u4e0e\u4e0a\u4e00\u4e2adfs\u5206\u522b\u5bf9\u5e94\u4ea4\u6362\u524d\u9762\u7684\u6570\u548c\u4ea4\u6362\u540e\u9762\u7684\u6570\n    dfs(now+1,p,tim+1);\n    return;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=(1<<n);i++)a[i]=read();\n    fac[0]=1;\n    for(int i=1;i<=n;i++)fac[i]=fac[i-1]*i;\n    dfs(1,a,0);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1621766784,
        "uid": 174469,
        "name": "zero4338",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3322 [SDOI2015]\u6392\u5e8f"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $2^n$ \u7684\u6392\u5217\uff0c\u73b0\u5728\u5c06\u5e8f\u5217\u5206\u6210\u6bcf\u6bb5\u957f $2^{(i-1)}$ \u7684 $2^{(n-i+1)}$ \u6bb5\uff0c\u7136\u540e\u4efb\u9009\u4e24\u6bb5\u4ea4\u6362\uff0c\u6c42\u6709\u591a\u5c11\u64cd\u4f5c\u5e8f\u5217\u80fd\u628a\u5e8f\u5217\u6392\u51fa\u6765\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u89c2\u5bdf\u9898\u76ee\u53d1\u73b0\u64cd\u4f5c\u987a\u5e8f\u548c\u7b54\u6848\u662f\u65e0\u5173\u7684\u3002\n\n\u6211\u4eec\u9700\u8981\u786e\u5b9a\u67d0\u4e2a\u64cd\u4f5c\u5e8f\u5217\u4e2d\u6bcf\u4e2a\u64cd\u4f5c\u9009\u4e0d\u9009\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u7528\u641c\u7d22\u3002\u4ece\u5c0f\u5230\u5927DFS\uff0c\u5bf9\u4e8e\u7b2c $i$ \u6b21\u64cd\u4f5c\u6211\u4eec\u5c06\u5e8f\u5217\u5206\u6210 $2^{(n-i)}$ \u6bb5\uff0c\u6bcf\u6bb5\u957f\u5ea6\u4e3a $2^i$ \u3002\n\n\u4e4b\u540e\u627e\u51fa\u5e8f\u5217\u4e2d\u4e0d\u5408\u6cd5\u7684\u6bb5\u6570\uff0c\u5982\u679c\u8fd9\u6837\u7684\u6bb5\u8d85\u8fc72\u4e2a\uff0c\u90a3\u4e48\u76f4\u63a5\u5224\u5b9a\u4e3a\u65e0\u89e3\u3002\n\n\u5982\u679c\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u6bb5\uff0c\u5224\u65ad\u5c06\u8fd9\u4e2a\u6bb5\u7684\u524d\u540e\u4ea4\u6362\u540e\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u662f\u5c31\u4ea4\u6362\u7136\u540e\u7ee7\u7eedDFS\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u6bb5\u5c31\u5206\u7c7b\u8ba8\u8bba\u7136\u540eDFS\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read()\n{\n\tint x=0; int f=1; char ch=getchar();\n\twhile(!isdigit(ch)) {if(ch=='-')f=-1; ch=getchar();}\n\twhile(isdigit(ch)) {x=x*10+ch-'0'; ch=getchar();}\n\treturn x*f;\n}\n\nconst int MAXN = 5005;\nint bin[20],fac[20],a[MAXN];\nlong long ans,n;\n\ninline bool check(int x,int k)\n{\n\tfor(int i=1; i<bin[k]; i++)\n\t\tif(a[x+i]!=a[x+i-1]+1) return 0;\n\treturn 1;\n}\n\ninline void swap(int x,int y,int k)\n{\n\tfor(int i=0; i<bin[k]; i++)\n\t\tswap(a[x+i],a[y+i]);\n}\n\nvoid dfs(int k,int cur)\n{\n\tif(k==n+1)\n\t{ans+=fac[cur]; return;}\n\tint t1=0,t2=0;\n\tfor(int i=1; i<=bin[n]; i+=bin[k])\n\t\tif(!check(i,k))\n\t\t{\n\t\t\tif(!t1) t1=i;\n\t\t\telse if(!t2) t2=i;\n\t\t\telse return;\n\t\t}\n\tif(!t1 && !t2) dfs(k+1,cur);\n\telse if(t1 && !t2)\n\t{\n\t\tswap(t1,t1+bin[k-1],k-1);\n\t\tdfs(k+1,cur+1);\n\t\tswap(t1,t1+bin[k-1],k-1);\n\t}\n\telse\n\t{\n\t\tfor(int x=0; x<=1; x++)\n\t\t\tfor(int y=0; y<=1; y++)\n\t\t\t{\n\t\t\t\tswap(t1+x*bin[k-1],t2+y*bin[k-1],k-1);\n\t\t\t\tif(check(t1,k) && check(t2,k))\n\t\t\t\t{\n\t\t\t\t\tdfs(k+1,cur+1);\n\t\t\t\t\tswap(t1+x*bin[k-1],t2+y*bin[k-1],k-1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tswap(t1+x*bin[k-1],t2+y*bin[k-1],k-1);\n\t\t\t}\n\t}\n}\n\nint main(int argc, char const *argv[])\n{\n\tn=read(); bin[0]=1; fac[0]=1;\n\tfor(int i=1; i<20; i++)\n\t\tbin[i]=bin[i-1]<<1;\n\tfor(int i=1; i<=12; i++)\n\t\tfac[i]=fac[i-1]*i;\n\tfor(int i=1; i<=bin[n]; i++)\n\t\ta[i]=read();\n\tdfs(1,0); printf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1577777424,
        "uid": 107735,
        "name": "shiroi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3322 \u3010[SDOI2015]\u6392\u5e8f\u3011"
    },
    {
        "content": "\u9996\u5148\u6b63\u5982\u697c\u4e0a\u51e0\u4f4d\u6240\u8bf4\uff0c\u64cd\u4f5c\u987a\u5e8f\u4e0d\u5f71\u54cd\u7ed3\u679c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u8003\u8651\u64cd\u4f5c\u7684\u96c6\u5408\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u53ef\u884c\u7684\u64cd\u4f5c\u96c6\u5408 $S$ \uff0c\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $|S|$$!$ \u3002\u8f6c\u5316\u4e3a\u6c42\u6240\u6709\u53ef\u884c\u7684\u96c6\u5408\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u64cd\u4f5c\u6700\u591a\u505a\u4e00\u6b21\uff0c\u6211\u4eec\u4ece\u5c0f\u5230\u5927DFS\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u524d\u533a\u57df\u5185\u4e00\u5b9a\u65f6\u4e25\u683c\u8fde\u7eed\u9012\u589e\u7684\u3002\u5bf9\u4e8e\u7b2c$i$\u6b21\u64cd\u4f5c\u6211\u4eec\u5c06\u5e8f\u5217\u5206\u6210$2^{n-i}$\u6bb5\uff0c\u6bcf\u6bb5\u957f\u5ea6$2^i$\u3002\n\u6211\u4eec\u53bb\u627e\u5e8f\u5217\u4e2d\u4e0d\u662f\u4e25\u683c\u8fde\u7eed\u9012\u589e\u7684\u533a\u57df\u3002\n\n\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u4e00\u6bb5\u533a\u57df\uff0c\u65e0\u9700\u6267\u884c\u8fd9\u4e2a\u64cd\u4f5c\n\n\u5982\u679c\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u533a\u57df\uff0c\u5224\u65ad\u5c06\u8fd9\u4e2a\u6bb5\u7684\u524d\u534a\u90e8\u5206\u548c\u540e\u534a\u90e8\u5206\u4ea4\u6362\u540e\u662f\u5426\u8fde\u7eed\u9012\u589e\uff0c\u5982\u679c\u662f\u5c31\u4ea4\u6362\u7136\u540e\u7ee7\u7eedDFS\n\n\u5982\u679c\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u6bb5\uff0c\u5224\u65ad\u628a\u6bcf\u4e2a\u6bb5\u5206\u6210\u4e24\u4efd\uff0c\u4e24\u4e24\u4ea4\u6362\uff0c\u5171\u56db\u79cd\u4ea4\u6362\u60c5\u51b5\u7136\u540eDFS\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 20;\n\nint n, a[5000], Fac[N + 10], Pow_2[N + 10], ans;\n\nvoid Init() {\n\t\n\tcin >> n;\n\t\n\tPow_2[0] = 1;\n\tfor (int i = 1; i <= 12; i ++)\n\t\tPow_2[i] = Pow_2[i - 1] * 2;\n\t\n\tFac[0] = 1;\n\tfor (int i = 1; i <= 12; i ++)\n\t\tFac[i] = Fac[i - 1] * i; \n\t\t\n\tfor (int i = 1; i <= Pow_2[n]; i ++)\n\t\tcin >> a[i];\n}\n\nvoid Swap(int pos_1, int pos_2, int cur) {\n\tfor (int i = 0; i < Pow_2[cur]; i ++) swap(a[pos_1 + i], a[pos_2 + i]);\n\treturn ;\n}\n\nbool Check(int pos, int cur) {\n\tfor (int i = 1; i < Pow_2[cur]; i ++)\n\t\tif (a[pos + i] != a[pos + i - 1] + 1) return 0;\n\t\n\treturn 1;\n}\n\nvoid DFS(int cur, int dep) {\n\t \n\tif (cur > n) {\n\t\tans += Fac[dep];\n\t\treturn ;\n\t}\n\t\n\tint Pos_1, Pos_2;\n\t\n\tPos_1 = Pos_2 = 0;\n\t\n\tfor (int i = 1; i <= Pow_2[n]; i += Pow_2[cur]) {\n\t\tif (!Check(i, cur)) {\n\t\t\tif (!Pos_1) Pos_1 = i;\n\t\t\telse if (!Pos_2) Pos_2 = i;\n\t\t}\n\t}\n\t\n\tif (!Pos_1 && !Pos_2) DFS(cur + 1, dep);\n\telse if (Pos_1 && !Pos_2) {\n\t\tSwap(Pos_1, Pos_1 + Pow_2[cur - 1], cur - 1);\n\t\tif (Check(Pos_1, cur)) DFS(cur + 1, dep + 1);\n\t\tSwap(Pos_1, Pos_1 + Pow_2[cur - 1], cur - 1);\n\t}\n\telse {\n\t\tfor (int x = 0; x <= 1; x ++)\n\t\t\tfor (int y = 0; y <= 1; y ++) {\n\t\t\t\tSwap(Pos_1 + x * Pow_2[cur - 1], Pos_2 + y * Pow_2[cur - 1], cur - 1);\n\t\t\t\t\n\t\t\t\tif (Check(Pos_1, cur) && Check(Pos_2, cur)) {\n\t\t\t\t\tDFS(cur + 1, dep + 1);\n\t\t\t\t\tSwap(Pos_1 + x * Pow_2[cur - 1], Pos_2 + y * Pow_2[cur - 1], cur - 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSwap(Pos_1 + x * Pow_2[cur - 1], Pos_2 + y * Pow_2[cur - 1], cur - 1);\n\t\t\t}\n\t}\n}\n\nint main() {\n\n\tios :: sync_with_stdio(false);\n\t\n\tInit();\n\t\n\tDFS(0, 0);\n\t\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}\n\n```\n\u6ce8\u610f\uff1a\u6211\u7684\u4ee3\u7801\u91cc\u9762\u8003\u8651\u7684\u5f53\u524d\u64cd\u4f5c\u662fcur-1\n",
        "postTime": 1571747111,
        "uid": 43476,
        "name": "_Toz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3322 \u3010[SDOI2015]\u6392\u5e8f\u3011"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\u6700\u57fa\u672c\u7684\u4e00\u4e2a\u601d\u60f3\uff1a**\u7ed3\u679c\u4e0e\u64cd\u4f5c\u7684\u987a\u5e8f\u65e0\u5173**\uff0c\u56e0\u4e3a\u5728\u66f4\u6362\u7684\u65f6\u5019\u65e0\u8bba\u5148\u6362\u54ea\u4e00\u4e2a\u6700\u540e\u6392\u5217\u90fd\u662f\u4e00\u5b9a\u7684\u3002\n\n\u56e0\u6b64\u6211\u4eec\u80af\u5b9a\u4f1a\u7528\u5230 $A_n^n$ \u4e5f\u5c31\u662f n \u7684\u9636\u4e58\uff0c\u9700\u8981\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u8fd9\u91cc\u7528\u7684 jc \u6570\u7ec4\u8bb0\u5f55\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5 ~~**\u6109\u5feb**~~ \u641c\u7d22\u4e86\u3002\n\n* \u5148\u662f **check** \u51fd\u6570;\n\n\t$\\operatorname{check}(x)$ \u7528\u6765\u68c0\u67e5\u6240\u6709\u957f\u5ea6\u4e3a $1<<x$ \u7684\u5757\u662f\u5426\u6ee1\u8db3\u9012\u589e\uff0c\n    \n    \u6709\u4e00\u4e2a\u975e\u5e38\u5999\u7684\u5730\u65b9\uff1a\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e2a\u5e8f\u5217\u662f\u7531 $1\\sim2^n$ \u7ec4\u6210\u7684\u4e86\u3002\n    \n    \u56e0\u6b64\u5728\u5224\u65ad\u7684\u65f6\u5019\u53ea\u9700\u8981\u5faa\u73af\uff0c\u770b\u7b2c i \u5757\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u5426\u548c\u7b2c j \u5757\u7684\u7b2c\u4e00\u4e2a\u6570\u6b63\u597d\u5dee\u4e00\u4e2a\u5757\u957f\u5c31\u597d\u4e86\u3002\n    ```cpp\n   bool check(int x)\n\t{\n\t\tfor(int i=1;i<=(1<<(n-x));i++)\n\t\t\tif(s[(i-1)*(1<<x)+1]+(1<<(x-1))!=s[(i-1)*(1<<x)+(1<<(x-1))+1])\n\t\t\treturn false;\n\t\treturn true;\n\t}\n    ```\n* \u518d\u8c08**\u4ea4\u6362**\u51fd\u6570\uff1a\n\t$\\operatorname{swap}(i,j,k)$ \u8868\u793a\u5c06\u5206\u522b\u4ee5 i \u548c j \u5f00\u59cb\u957f\u5ea6\u4e3a k \u7684\u5e8f\u5217\u4e92\u6362\u3002\n    ```cpp\n \t   void swap(int i,int j,int k)\n\t{\n\t\tfor(int l=1;l<=k;l++)\n\t\t\tswap(s[i+l-1],s[j+l-1]);\n\t}\n    ```\n* \u6700\u540e\u662f **dfs** \u51fd\u6570\n\t\n    $\\operatorname{dfs}(x,num)$ \u8868\u793a\u4ea4\u6362\u5230\u5757\u957f\u4e3a $1<<x$ \u4e86\uff0c\u5e76\u4e14\u6b64\u524d\u8fdb\u884c\u4e86 num \u4e2a\u64cd\u4f5c\u3002\n    \n    \u5982\u679c\u8fd9\u4e2a\u5757\u4e0d\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u76f4\u63a5 return \u5c31\u597d\uff0c\u6bd5\u7adf\u4ed6\u5bf9\u4e8e\u7b54\u6848\u662f\u6ca1\u6709\u8d21\u732e\u7684\u3002\n    \n    \u5bf9\u4e8e $x=n$ \u65f6\u8868\u660e\u6574\u4e2a\u5e8f\u5217\u5df2\u7ecf\u6574\u5b8c\u4e86\uff0c\u7136\u540e\u76f4\u63a5\u7ed9 ans \u52a0\u4e0a $jc_{num}$ \u5c31\u597d\u4e86\u3002\n    \n    \u7136\u540e\u76f4\u63a5\u5411\u4e0b\u8fdb\u884c $\\operatorname{dfs}(x+1,num)$ \u4e0d\u505a\u4efb\u4f55\u5904\u7406\u3002\n    \n    \u5bf9\u4e8e\u8fdb\u884c\u5904\u7406\u7684\u60c5\u51b5\uff0c\u628a\u6574\u4e2a\u5e8f\u5217\u4e24\u5757\u4e24\u5757\u7684\u770b\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u6761\u4ef6\uff08\u5224\u65ad\u65b9\u6cd5\u4e0e\u4e0a\u9762\u7684 $\\operatorname{check}$ \u540c\uff09\u8bb0\u5f55\u5230\u4e00\u4e2a t \u6570\u7ec4\u91cc\uff0c\u4e00\u4f1a\u5904\u7406\uff0c\n    \u5982\u679c\u9700\u8981\u5904\u7406\u7684\u603b\u6570\u8d85\u8fc7 4 \u7684\u8bdd\u76f4\u63a5 break \uff0c\u5269\u4e0b\u7684\u76f4\u63a5\u4ea4\u7ed9\u540e\u9762\u5c31\u53ef\u4ee5\u4e86\u3002\n    \n    \u7136\u540e**\u66b4\u529b\u4e24\u4e24\u679a\u4e3e**\u64cd\u4f5c\uff0c\u8fdb\u884c\u4ea4\u6362\u540e\uff0c\u76f4\u63a5\u8fdb\u884c\u4e0b\u4e00\u5c42 $\\operatorname{dfs}$ \u4ee5\u53ca\u56de\u6eaf\u5c31\u597d\u4e86\u3002\n\n## $code$\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N=5e3;\nint n,ans,jc[13],s[N];\nbool check(int x)//check\u51fd\u6570\u68c0\u67e5\u662f\u5426\u7b26\u5408\n{\n\tfor(int i=1;i<=(1<<(n-x));i++)\n\t\tif(s[(i-1)*(1<<x)+1]+(1<<(x-1))!=s[(i-1)*(1<<x)+(1<<(x-1))+1])\n\t\treturn false;\n\treturn true;\n}\nvoid swap(int i,int j,int k)//\u66b4\u529b\u4ea4\u6362\n{\n\tfor(int l=1;l<=k;l++)\n\t\tswap(s[i+l-1],s[j+l-1]);\n}\nvoid dfs(int x,int num)//\u641c\u7d22\u4e3b\u51fd\u6570\n{\n\tif(x&&!check(x))//\u4e0d\u7b26\u5408\u8fd4\u56de\n\t\treturn ;\n\tif(x==n)/\u7d2f\u52a0\n\t{\n\t\tans+=jc[num];\n\t\treturn ;\n\t}\n\tdfs(x+1,num);\n\tint t[5],tot=0;\n\tfor(int i=1;i<=(1<<(n-x));i+=2)\n\t\tif(s[i*(1<<x)+1]!=s[(i-1)*(1<<x)+1]+(1<<x))\n\t\t{\n\t\t\tif(tot==4)\n\t\t\t\tbreak;\n\t\t\tt[++tot]=i;\n\t\t\tt[++tot]=i+1;\n\t\t}\n\tif(!tot)\n\t\treturn ;\n\tfor(int i=1;i<=tot;i++)\n\t\tfor(int j=i+1;j<=tot;j++)\n\t\t{\n\t\t\tswap((1<<x)*(t[i]-1)+1,(1<<x)*(t[j]-1)+1,1<<x);\n\t\t\tdfs(x+1,num+1);\t\t\n\t\t\tswap((1<<x)*(t[i]-1)+1,(1<<x)*(t[j]-1)+1,1<<x);\n\t\t}\n}\n#undef int\nint main()\n{\n\t#define int long long\n\tscanf(\"%lld\",&n);\n\tjc[0]=1;\n\tfor(int i=1;i<=n;i++)//\u9884\u5904\u7406\u9636\u4e58\n\t\tjc[i]=jc[i-1]*i;\n\tfor(int i=1;i<=(1<<n);i++)\n\t\tscanf(\"%lld\",&s[i]);\n\tdfs(0,0);//\u641c\u7d22\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1621766140,
        "uid": 190322,
        "name": "Varuxn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3322 [SDOI2015]\u6392\u5e8f"
    },
    {
        "content": "## \u9898\u89e3\n\n\u4ed4\u7ec6\u5ba1\u9898\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0 \n\n>\u5c0f $A$ \u8ba4\u4e3a\u4e24\u4e2a\u64cd\u4f5c\u5e8f\u5217\u4e0d\u540c\uff0c\u5f53\u4e14\u4ec5\u5f53\u64cd\u4f5c\u4e2a\u6570\u4e0d\u540c\uff0c\u6216\u8005\u81f3\u5c11\u4e00\u4e2a\u64cd\u4f5c\u4e0d\u540c\uff08\u79cd\u7c7b\u4e0d\u540c\u6216\u8005\u64cd\u4f5c\u4f4d\u7f6e\u4e0d\u540c\uff09\u3002\n>\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u79cd\u64cd\u4f5c\uff0c\u4e0d\u7ba1\u662f\u4ea4\u6362\u54ea\u4e24\u6bb5\uff0c\u90fd\u7b97\u4f5c\u540c\u4e00\u79cd\u64cd\u4f5c\uff0c\u53ea\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e\u4e00\u6b21\u3002\n\n\u5f15\u7406\n\n>\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u5176\u4e2d\u7684\u64cd\u4f5c\u53ef\u4ee5\u4e92\u6362\u4f4d\u7f6e\uff0c\u4ecd\u4e3a\u5408\u6cd5\u5e8f\u5217\u3002\n>\n\n\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\uff0c\u7ed3\u8bba\u5f88\u663e\u7136\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u8bbe\u6b64\u6b21\u64cd\u4f5c\u7684\u957f\u5ea6\u4e3a $len=2^x$\uff0c\u6211\u4eec\u5c06\u4ece\u5934\u5f00\u59cb\u6bcf $len$ \u7684\u957f\u5ea6\u5206\u4e3a\u4e00\u4e2a\u5757\uff0c\u5219\u6709 $2^{n-x}$ \u4e2a\u5757\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5757\uff0c\u6211\u4eec\u8981\u4fdd\u8bc1\u4ed6\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6709\u5e8f\u5e8f\u5217\uff0c\u53c8\u56e0\u4e3a $2^x$ \u662f\u7531 $2^{x-1}$ \u7684\u5757\u8c03\u6574\u987a\u5e8f\u8f6c\u79fb\u800c\u6765\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a $2^{x-1}$ \u7684\u5757\uff0c\u6211\u4eec\u5c31\u8981\u627e\u51fa\u6709\u591a\u5c11\u4e2a\u4e24\u4e24\u7684\u5757\u4e0d\u7b26\u5408\u987a\u5e8f\u9012\u589e\u3002\u5982\u679c\u6709**\u8d85\u8fc7**\u4e24\u5bf9\u4e0d\u5408\u7406\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5224\u5b9a\u6b64\u5206\u652f\u4e0b\u65e0\u89e3\uff0c\n\u539f\u56e0\u5c31\u662f\u5bf9\u4e8e\u6bcf\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u53ea\u80fd\u7528\u4e00\u6b21\u3002\n\n\u5f53\u5230\u8fb9\u754c\u65f6\u4e14\u5408\u6cd5\u65f6\uff0c\u6211\u4eec\u9700\u8981\u52a0\u4e0a\u7528\u5230\u7684\u64cd\u4f5c\u6570\u7684\u9636\u4e58\u3002\uff08\u539f\u56e0\u89c1\u5f15\u7406\uff09\n\n$AC \\kern 0.5emCODE:$\n```cpp\n#include<bits/stdc++.h>\n#define ri register int\n#define p(i) ++i\nusing namespace std;\nnamespace IO{\n    char buf[1<<21],*p1=buf,*p2=buf;\n    inline char gc() {return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\n    inline int read() {\n        ri x=0,f=1;char ch=gc();\n        while(ch<'0'||ch>'9') {if (ch=='-') f=-1;ch=gc();}\n        while(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=gc();}\n        return x*f;\n    }\n}\nusing IO::read;\nnamespace nanfeng{\n    static const int N=12;\n    int num[(1<<N)+7],p[N+7],n, ans;\n    inline void Swap(int i,int j,int k) {\n        int len=1<<k,si=(i-1)*len,sj=(j-1)*len;\n        for (ri l(1);l<=len;p(l)) swap(num[si+l],num[sj+l]);\n    }\n    inline int check(int x) {//\u7528\u4e8e\u5224\u65ad\u4ea4\u6362\u540e\u7684\u5757\u662f\u5426\u7b26\u5408\u8981\u6c42\u987a\u5e8f\u9012\u589e\n        int len=1<<x;\n        for (ri i(1);i<=(1<<n-x);i+=2) if (num[i*len]+1!=num[i*len+1]) return 0;\n        return 1;\n    }\n    inline void dfs(int x,int cnt) {\n        if (x&&!check(x-1)) return;\n        if (x==n) {ans+=p[cnt];return;} \n        dfs(x+1,cnt);\n        ri ch[5],tot=0,len=1<<x;//\u4e00\u5b9a\u4e0d\u8981\u8bbe\u6210\u5168\u5c40\u6570\u7ec4\uff0c\u56e0\u4e3a\u82e5\u8981\u5b9a\u4e49\u4e3a\u5168\u5c40\uff0c\u5411\u4e0b\u9012\u5f52\u65f6\u5206\u652f\u4f1a\u5c06\u4ed6\u6539\u53d8\uff0c\u4e4b\u540e\u56de\u6eaf\u65f6\u4f1a\u70b8\u3002\n        for (ri i(1);i<=(1<<n-x);i+=2) {\n            if (num[i*len]+1!=num[i*len+1]) {\n                if (tot==4) return;\n                ch[p(tot)]=i;ch[p(tot)]=i+1;\n            }\n        }\n        if (!tot) return;\n        for (ri i(1);i<=tot;p(i)) {\n            for (ri j(i+1);j<=tot;p(j)) {\n                // if ((i+j==3||i+j==7)&&tot==4) continue;\n                Swap(ch[i],ch[j],x);\n                dfs(x+1,cnt+1);\n                Swap(ch[i],ch[j],x);//\u8bb0\u5f97\u56de\u6eaf\n            }\n        }\n    }\n    inline int main() {\n        // freopen(\"1.in\",\"r\",stdin);\n        n=read();\n        p[1]=1;\n        for (ri i(2);i<=12;p(i)) p[i]=p[i-1]*i;\n        for (ri i(1);i<=(1<<n);p(i)) num[i]=read();\n        dfs(0,0);\n        printf(\"%d\\n\",ans);\n        return 0;\n    }\n}\nint main() {return nanfeng::main();}\n```\n\u76ee\u524d\u662f\u6d1b\u8c37\u6700\u4f18\u89e3\uff0c\u800c\u4e14\u8fd9\u4e48\u5199\u7801\u91cf\u4e5f\u5f88\u5c0f\u3002",
        "postTime": 1621760355,
        "uid": 141958,
        "name": "\u6960\u67ab",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3322 [SDOI2015]\u6392\u5e8f"
    },
    {
        "content": "\u521a\u770b\u89c1\u9898\u9762\u6709\u70b9\u8499\u611f\u89c9\u9664\u4e86\u66b4\u641c\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u505a\u3002\n\n\u6ca1\u60f3\u5230\u6b63\u89e3\u662f\u641c\u7d22...\n\n\u53ea\u8981\u6709\u4e00\u79cd\u64cd\u4f5c\u4e0d\u540c\u5c31\u7b97\u4e0d\u540c\u65b9\u6848\uff0c\u800c\u5bf9\u4e8e\u4e00\u4e2a\u65b9\u6848\uff0c\u5176\u5185\u90e8\u987a\u5e8f\u5bf9\u7ed3\u679c\u65e0\u5f71\u54cd\uff0c\u6240\u4ee5\u6c42\u51fa\u4e00\u79cd\u540e\u5176\u5168\u6392\u5217\u5747\u5408\u6cd5\uff0cans+=A\uff08tot,tot\uff09;\n\n\u56e0\u4e3a\u6709\u4e0a\u9762\u8fd9\u4e2a\u6027\u8d28\u6240\u4ee5\u4ece1\u641c\u5230n\uff0c\u8868\u793a\u7b2ci\u79cd\u64cd\u4f5c\u7684\u8fdb\u884c\u3002\n\n\u66b4\u641c\uff1a\u66b4\u529b\u679a\u4e3e\u7aef\u70b9\u8fdb\u884c\u4ea4\u6362\u3002\u6ce8\u610ffor\u5faa\u73af\u4e2di+=\u957f\u5ea6,\u800c\u4e0d\u662fi+=1,\u56e0\u4e3a\u524d\u63d0\u662f\u5148\u5212\u5206\u5728\u9009\u7740\u6362\uff0c\u4e0d\u8bfb\u9898\u4f1a\u5f88\u60e8\u3002T30\n\n\u526a\u679d\uff1a\u4e00\u4e2a\u7279\u70b9\uff1a\u5bf9\u4e8e\u6bcf\u79cd\u64cd\u4f5c\u627e\u51fa\u975e\u8fde\u7eed\u5e8f\u5217\u4e2a\u6570\u5982\u679c\u5927\u4e8e2\u4e00\u5b9a\u4e0d\u5408\u6cd5\uff0c\u7b49\u4e8e0\u5c31\u76f4\u63a5\u641c\u800c\u4e0d\u80fd\u518d\u53bb\u6362\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u4f7f\u987a\u5e8f\u6df7\u4e71\u4e00\u5b9a\u4e0d\u5408\u6cd5\u3002\n\n\u89e3\u91ca+\u5177\u4f53\u64cd\u4f5c\uff1a\u5728\u641c\u7b2ci\u79cd\u64cd\u4f5c\u65f6\u5047\u8bbe\u5c0f\u533a\u95f4\u957f\u5ea6\u662fy\u90a3\u4e48\u5212\u5206\u6210Y/2\u4e2a\u533a\u95f4\uff0c\u6bcf\u4e2a\u91cc\u6709\u4e24\u4e2a\u5c0f\u533a\u95f4\uff0c\u67e5\u770b\u5b83\u4eec\u662f\u5426\u662f\u8fde\u7eed\u5e8f\u5217\u3002\u56e0\u4e3a\u4e0b\u4e00\u6b21\u5c0f\u533a\u95f4\u957f\u5ea6\u5c31\u662fy*2,\u6240\u4ee5\n\n\u8fd9\u6b21\u64cd\u4f5c\u540e\u4e0d\u4f1a\u6709\u673a\u4f1a\u5bf9\u5176\u5185\u90e8\u66f4\u6539\u3002\u4ee5\u540e\u5c31\u4e0d\u4f1a\u5408\u6cd5\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u975e\u8fde\u7eed\u7b49\u4e8e0\u540e\u4e0d\u80fd\u6362\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u6362\u4e86\u5185\u90e8\u4e00\u5b9a\u4e0d\u518d\u5408\u6cd5\u3002\n\ncount==0,\u76f4\u63a5\u641c\u4e0b\u4e00\u79cd\uff0c==1\u770b\u662f\u5426\u4ea4\u6362\u540e\u5408\u6cd5\uff0c\u662f\u641c\u4e0b\uff0c\u5426return\uff0c==2\u6709\u56db\u79cd\u60c5\u51b5\u5176\u4e2d1\uff0c3\u548c2\uff0c4\u5224\u65ad\u6761\u4ef6\u540c\u800c23\uff0c14\u4e0d\u540c\u3002\n\ntot\u8bb0\u5f55\u4f7f\u7528\u7684\u64cd\u4f5c\u79cd\u7c7b\u6570\u3002\n\n \n\n\u9a9a\u64cd\u4f5c\uff1a\u679a\u4e3e\u6362\u533a\u95f4\u6539\u6210\u7ebf\u6bb5\u6811\u3002",
        "postTime": 1564631526,
        "uid": 104755,
        "name": "three_D",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3322 \u3010[SDOI2015]\u6392\u5e8f\u3011"
    }
]