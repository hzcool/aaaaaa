[
    {
        "content": "# \u4e3a\u4ec0\u4e48\u662f\u9006\u5e8f\u5bf9\n\n\u9006\u5e8f\u5bf9\u7684\u505a\u6cd5\u5df2\u7ecf\u6709\u5f88\u7bc7\u9898\u89e3\u8bb2\u7684\u5f88\u597d\u4e86\u3002\u4f46\u662f\u5f88\u5c11\u9898\u89e3\u6709\u8bb2\u4e3a\u4ec0\u4e48\u76f8\u90bb\u4ea4\u6362\u7684\u6b21\u6570\u5c31\u662f\u9006\u5e8f\u5bf9\u3002\u8fd9\u7bc7\u9898\u89e3\u53ea\u662f\u4e3a\u4e86\u8bc1\u660e\u8fd9\u4e2a\u3002\n\n\n------------\n\u9996\u5148\uff0c\u663e\u7136\u6392\u597d\u5e8f\u7684\u5e8f\u5217\u9006\u5e8f\u5bf9\u6570\u4e00\u5b9a\u662f 0\u3002\n\n\u5bf9\u4e8ei, \u548ci+1, \u663e\u7136\u5982\u679ca[i] <= a[i+1] \u90a3\u4e48\u4ea4\u6362\u8fd9\u4e24\u4e2a\u6570\u662f\u591a\u4f59\u7684\u3002\u56e0\u4e3a\u4e0d\u7ba1\u540e\u9762\u600e\u4e48\u4ea4\u6362\uff0c\u6700\u7ec8a[i]\u4e00\u5b9a\u5728a[i+1]\u524d\u9762\uff0c\u5982\u679c\u4ea4\u6362\u8fd9\u4e24\u4e2a\uff0c\u5c31\u4f1a\u589e\u52a0a[i]\u5230a[i+1]\u7684\u524d\u9762\u7684\u4ea4\u6362\u6b21\u6570\u3002\n\n\u5bf9\u4e8ei,\u548cj, \u8bbei<j\u4e14a[i] > a[j], \u90a3\u4e48\u6700\u7ec8a[j]\u4f1a\u4ea4\u6362\u5230a[i]\u524d\u9762, \u56e0\u4e3a\u53ea\u80fd\u4e24\u4e24\u76f8\u90bb\u4ea4\u6362\uff0ca[i]\u548ca[j]\u80af\u5b9a\u4e5f\u4f1a\u4ea4\u6362\uff0c\u5426\u5219a[j]\u65e0\u6cd5\u5230a[i]\u524d\u9762, \u56e0\u4e3aa[j]\u4e0d\u53ef\u80fd\u8df3\u8fc7a[i]\u3002\n\n\u4ea4\u6362\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u9006\u5e8f\u5bf9\u6570\u4f1a -1\u3002\u663e\u7136\u82e5a[i] > a[i+1] \u4ea4\u6362\u662f\u5b83\u4eec\u4f1a\u51cf\u5c111\u4e2a\u9006\u5e8f\u5bf9\uff0c\u7531\u4e8ea[i]\u548ca[i+1]\u4e2d\u95f4\u6ca1\u6709\u6570\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u9006\u5e8f\u5bf9\u3002\u5bfc\u81f4\u9006\u5e8f\u5bf9\u6570\u4f1a\u51cf\u5c111\u3002\n\n\u65e2\u7136\uff0c\u4efb\u610f\u4e24\u4e2a\u9006\u5e8f\u5bf9\u90fd\u8981\u4ea4\u6362\uff0c\u5e76\u4e14\u6bcf\u6b21\u4ea4\u6362\u540e\u9006\u5e8f\u5bf9\u6570\u90fd\u4f1a\u51cf\u5c111\uff0c\u6700\u7ec8\u7684\u9006\u5e8f\u5bf9\u6570\u662f0\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u4ea4\u6362\u7684\u4e2a\u6570\u5c31\u662f\u5168\u90e8\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n\n\n",
        "postTime": 1580351732,
        "uid": 94605,
        "name": "\u674e\u82e5\u8c37",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba\u3011"
    },
    {
        "content": "# \u8fd9\u662f\u4e00\u9053\u53cc\u500d\u7ecf\u9a8c\u9898\n\n**\u521a\u521a\u5728\u505a[P1908\u9006\u5e8f\u5bf9](https://www.luogu.org/problemnew/show/P1908)\u7ec3\u4e60\u6811\u72b6\u6570\u7ec4\u7684\u719f\u7ec3\u5ea6\u7f62\u4e86**\n\n**~~\u624b\u8d31\u70b9\u5f00\u4e86\u76f8\u5173\u9898\u76ee~~\u53d1\u73b0\u4e86\u4e00\u9053\u540d\u5b57\u663e\u773c\u7684\u9898\u76ee\u5c31\u662f\u4ed6\u4e86[P1774\u6700\u63a5\u8fd1\u795e\u7684\u7537\u4eba](https://www.luogu.org/problemnew/solution/P1774)\uff0c\u8fd9......\u849f\u84bb\u5b9e\u5728\u770b\u4e0d\u51fa\u6765\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\uff0c\u751a\u81f3\u8fde\u6570\u636e\u89c4\u6a21\u90fd\u4e00\u6837\uff0c\u679c\u65ad\u590d\u5236\u81ea\u5df1\u5728\u90a3\u91cc\u7684\u63d0\u4ea4\u7ed3\u679cAC**\n\n## \u8fdb\u5165\u6b63\u9898\uff0c\u601d\u8def\n\n1\u5173\u4e8e\u6811\u72b6\u6570\u7ec4\u7684\u57fa\u7840\u5927\u5bb6\u5e94\u8be5\u6709\n\n2\u8fd9\u662f\u5173\u4e8e\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u7684\u4f8b\u9898\n\n3\u56e0\u4e3a\u6570\u636e\u89c4\u6a21\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u65b0\u521b\u4e00\u4e2a\u6570\u7ec4a\u91cc\u9762\u6765\u653e\u5728\u6211\u4eec\u7684\u521d\u59cb\u5e8f\u5217\u4e2d**\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u662f\u7b2c\u51e0\u5927\u7684**\u8fd9\u91cc\u8fd8\u8981\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\u6392\u5e8f\uff0c\u5173\u4e8e\u79bb\u6563\u5316\u7684\u6280\u5de7\u6211\u4eec\u5177\u4f53\u5728\u4ee3\u7801\u91cc\u9762\u770b\n\n4\u79bb\u6563\u5316\u4e4b\u540e\u6211\u4eec\u53ea\u5bf9a\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c\u5c31\u597d\u4e86\uff0c\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u6570\u5c31\u628a\u4ed6\u63d2\u5230\u6811\u72b6\u6570\u7ec4\u91cc\u9762\u53bb\n```cpp\ninline void go_and_do_it (int x)\n{\n\tfor (int i = x; i <= n; i += lb (i))\n\ttree[i] ++;\n}\n```\n\n\n5\u6bcf\u6b21\u67e5\u9006\u5e8f\u5bf9\u5c31\u8ddf\u6811\u72b6\u6570\u7ec4\u7684\u4f8b\u9898\u4e00\u6837\u7528find\u67e5\u8be2\u5c31\u597d\u4e86\n```cpp\ninline int find (int x)\n{\n\tint sum = 0;\n\tfor (int i = x; i > 0; i -= lb (i))\n\tsum += tree[i];\n\treturn sum;\n}\n```\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n\n#define WA AC\n#define RE AC\n#define CE AC\n#define TLE AC\n#define MLE AC\n\nusing namespace std;\n\ninline int read ()\n{\n    int f = 1, x = 0;\n    char ch;\n    do {ch = getchar (); if (ch== '-') f = -1;} while (ch < '0' || ch > '9');\n    do {x = x * 10 + ch - '0'; ch = getchar ();} while (ch >= '0' && ch <= '9');\n    return f * x;\n}\n\nconst int N = 5 * (1e5 + 7);\ntypedef long long ll;\n\nll n;\nll a[N];\nll xv[N];\nll tree[N];\nll ans;\n\ninline bool cmp (int a, int b)//\u8fd9\u91cc\u7684cmp\u6211\u4eec\u9700\u8981\u5224\u91cd\uff0c\u7136\u540e\u6309\u7167\u539f\u672c\u7684\u987a\u5e8f\u6392\u5217\uff0c\u8981\u4e0dsort\u4f1a\u51fa\u7384\u5b66\u4e71\u6392 \n{\n\treturn xv[a] == xv[b] ? a > b : xv[a] > xv[b];\n}\n\ninline int lb (int x)//lowbit \n{\n\treturn x & -x;\n}\n\ninline void go_and_do_it (int x)//\u5355\u70b9\u4fee\u6539 \uff0c\u6bcf\u6b21\u52a01 \n{\n\tfor (int i = x; i <= n; i += lb (i))\n\ttree[i] ++;\n}\n\ninline int find (int x)//\u67e5\u8be2 \n{\n\tint sum = 0;\n\tfor (int i = x; i > 0; i -= lb (i))\n\tsum += tree[i];\n\treturn sum;\n}\n\nint main ()\n{\n\tn = read ();\n\tfor (int i = 1; i <= n; i ++)\n\t{\n\t\txv[i] = read ();\n\t\ta[i] = i;//\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u5148\u5316\u6210\u81ea\u5df1\u5728\u8fdb\u884c\u6392\u5e8f \n\t}\n\tsort (a + 1 , a + 1 + n, cmp);//\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f \n\tfor (int i = 1 ; i <= n; i ++)\n\t{\n\t\tgo_and_do_it (a[i]);//\u628a\u6570\u63d2\u5230\u6811\u72b6\u6570\u7ec4\u91cc\u9762 \n\t\tans += find (a[i] - 1);// \u6bcf\u6b21\u67e5\u8be2\u628a\u524d\u7f00\u548c\u52a0\u5230ans\u91cc\u9762 \n\t}\n\tprintf (\"%lld\", ans);\n    return 0;\n}\n```\n\u5bf9\u53d8\u91cf\u89e3\u91ca\u4e00\u4e0b\n\n```cpp\nll n; // \u9898\u76ee\u91cc\u7684n \nll a[N]; //\u79bb\u6563\u5316\u540e\u7684\u5e8f\u5217 \nll xv[N]; //\u539f\u672c\u7684\u5e8f\u5217 \nll tree[N]; //\u6811\u72b6\u6570\u7ec4 \nll ans; //\u7b54\u6848\uff0c\u6240\u6709\u9006\u5e8f\u5bf9 \n```\n\u6709\u6ca1\u6709\u5bf9\u6811\u72b6\u6570\u7ec4\u6709\u4e86\u66f4\u6df1\u7684\u7406\u89e3",
        "postTime": 1555162598,
        "uid": 136006,
        "name": "s_Shot\u10e6Maki",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u989d\uff0c\u697c\u4e0b\u8bf4\u7684\u975e\u9012\u5f52\u7248\u5f52\u5e76\u849f\u84bb\u6211\u5b9e\u5728\u4e0d\u4f1a\uff0c\u4f46\u662f\u6211\u5e76\u4e0d\u662f\u5f88\u540c\u610f\u4ed6\u8bf4\u7684\u201c\u975e\u9012\u5f52\u7248\u7684\u66f4\u5feb\u201d\u8fd9\u4e00\u8bf4\u6cd5\uff0c\u5b9e\u6d4b\u6211\u7684\u9012\u5f52\u7248\u5f52\u5e76\u8dd1\u4e86688ms\uff08\u6ca1\u52a0\u5feb\u8bfb\uff09\uff0c\u6240\u4ee5\u6548\u7387\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u4ee3\u7801\u91cf\u4e5f\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u9012\u5f52\u7248\u7684\u5e94\u8be5\u66f4\u597d\u7406\u89e3\u4e00\u4e9b\u5427\u3002\uff08\u81f3\u5c11\u6211\u662f\u8fd9\u4e48\u8ba4\u4e3a\u7684\uff0c\u5c31\u50cf\u5feb\u6392\u4e5f\u6709\u975e\u9012\u5f52\u7248\u7684\u5199\u6cd5\uff0c\u4f46\u6709\u4eba\u53bb\u7528\u5417\uff1f\u539f\u56e0\u5c31\u662f1.\u4e0d\u592a\u597d\u7406\u89e3 2.\u901a\u7528\u6027\u4e0d\u5f3a\uff09\u5f53\u7136\uff0c\u591a\u638c\u63e1\u4e00\u79cd\u65b9\u6cd5\u4e0d\u65e0\u88e8\u76ca\u3002\n\n\u597d\uff0c\u4e0b\u9762\u732e\u4e0a\u849f\u84bb\u7684\u6e23\u6e23\u7a0b\u5e8f\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\uff1a\n\n1.\u5f52\u5e76\u6392\u5e8f\u7248\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=5e5+10;\nint n,a[maxn],r[maxn];\nlong long ans=0;\nvoid mergesort(int s,int t)\n{\n  int i,j,k,m;\n  if(s==t) return;\n  m=(s+t)/2; //\u53d6\u4e2d\u70b9\n  mergesort(s,m); //\u9012\u5f52\u5de6\u533a\u95f4\n  mergesort(m+1,t); //\u9012\u5f52\u53f3\u533a\u95f4\n  i=s,j=m+1,k=s;\n  while(i<=m&&j<=t) //\u4e8c\u8def\u5f52\u5e76\uff08\u5347\u5e8f\uff09\u8fc7\u7a0b\n  {\n    if(a[i]<=a[j])\n    {\n      r[k]=a[i]; i++; k++;\n    }\n    else\n    {\n      r[k]=a[j]; j++; k++;\n      ans+=m-i+1;\n    }\n  } //\u5c06\u5e8f\u5217\u4e2d\u5269\u4f59\u7684\u5143\u7d20\u63a5\u5165r\u6570\u7ec4\n  while(i<=m) { r[k]=a[i]; i++; k++; }\n  while(j<=t) { r[k]=a[j]; j++; k++; }\n  for(int i=s; i<=t; i++) a[i]=r[i]; //\u6570\u7ec4\u8d4b\u56de\n}\nint main()\n{\n  scanf(\"%d\",&n);\n  for(int i=1; i<=n; i++) scanf(\"%d\",&a[i]);\n  mergesort(1,n); //\u5f52\u5e76\u6c42\u89e3\u9006\u5e8f\u5bf9\n  printf(\"%lld\\n\",ans); //\u522b\u5fd8\u4e86long long\n  return 0;\n}\n```\n2.\u6811\u72b6\u6570\u7ec4\u7248\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=5e5+10;\nint n,a[maxn],p[maxn],tree[maxn]; //tree\u4e3a\u6811\u72b6\u6570\u7ec4\nlong long ans=0;\nbool cmp(int x,int y) //\u79bb\u6563\u5316\u5feb\u6392\n{\n  return a[x]<a[y];\n}\nint lowbit(int x)\n{\n  return x&(-x);\n}\nvoid update(int x,int d)\n{\n  while(x<=n)\n  {\n    tree[x]+=d;\n    x+=lowbit(x);\n  }\n}\nlong long query(int x)\n{\n  long long ret=0;\n  while(x>0)\n  {\n    ret+=tree[x];\n    x-=lowbit(x);\n  }\n  return ret;\n}\nint main()\n{ //\u672c\u9898\u6570\u636e\u91cf\u8fc7\u5927\uff0c\u9700\u8981\u79bb\u6563\u5316\u5904\u7406\n  scanf(\"%d\",&n);\n  for(int i=1; i<=n; i++) \n  {\n    scanf(\"%d\",&a[i]);\n    p[i]=i; //p\u8bb0\u5f55\u8282\u70b9\u7f16\u53f7\n  } //\u5f88\u591a\u4eba20\u5206\u5c31\u662f\u56e0\u4e3a\u8fd9\u91cc\uff0c\u5c3d\u91cf\u7528stable_sort\uff0c\u4e0d\u6539\u53d8\u539f\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4f4d\u7f6e\uff08\u5f53\u4e24\u5143\u7d20\u76f8\u7b49\u65f6\uff09\n  stable_sort(p+1,p+n+1,cmp);\n  for(int i=1; i<=n; i++) a[p[i]]=i; //\u79bb\u6563\u5316\n  for(int i=n; i>=1; i--) //\u5012\u5e8f\u5faa\u73af\n  {\n    ans+=query(a[i]-1); //\u67e5\u8be2\u6bd4\u81ea\u5df1\u5c0f\u4e14\u5728\u81ea\u5df1\u540e\u9762\u7684\u6570\u6709\u51e0\u4e2a\n    update(a[i],1); //\u503c\u4e3aa[i]\u7684\u6570\u7684\u4e2a\u6570+1\n  }\n  printf(\"%lld\\n\",ans); //\u540c\u6837\uff0c\u522b\u5f80long long\n  return 0;\n}\n```\n\u4e24\u79cd\u65b9\u6cd5\u76f8\u6bd4\uff0c\u7ecf\u8fc7\u5b9e\u6d4b\uff0c\u5f52\u5e76\u6392\u5e8f688ms\uff0c\u6811\u72b6\u6570\u7ec41164ms\uff0c\u5f52\u5e76\u5feb\u4e86\u5c06\u8fd1\u4e00\u500d\uff0c\u4ee3\u7801\u4e5f\u66f4\u77ed\u5c0f\u7cbe\u608d\u4e00\u4e9b\u3002\uff08\u66f4\u53ef\u6015\u7684\u662f\uff0c\u5f52\u5e76\u6392\u5e8f\u662fnoip\u8303\u56f4\u4e4b\u5185\u7684\uff0c\u6240\u4ee5\u975e\u5e38\u6709\u5fc5\u8981\u638c\u63e1\u597d\uff09\uff0c\u81f3\u4e8eBIT\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u66f4\u901a\u7528\u4e00\u4e9b\uff0c\u4e5f\u597d\u7406\u89e3\u4e00\u4e9b\u3002",
        "postTime": 1519485975,
        "uid": 9156,
        "name": "\u5fae\u96e8\u71d5\u53cc\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u697c\u4e0b\u5927\u4f6c\u90fd\u7528\u7684\u662f\u6811\u72b6\u6570\u7ec4\u548c\u5f52\u5e76\uff0c\u6211\u5c31\u8bb2\u4e00\u8bb2\u7ebf\u6bb5\u6811\u5427\uff01  \n\u8fd9\u9053\u9898\uff0c\u697c\u4e0b\u5927\u4f6c\u4eec\u90fd\u8bb2\u4e86\u5176\u5b9e\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u3002\u800c\u9006\u5e8f\u5bf9\u5c31\u662f\u6c42\u6bcf\u4e00\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6bd4\u5b83\u5927\uff0c\u5219\u8003\u8651\u6743\u503c\u7ebf\u6bb5\u6811\u3002  \n\u4ec0\u4e48\u662f\u6743\u503c\u7ebf\u6bb5\u6811\uff1f \u5c31\u662f\u4ee5\u6570\u7684\u5927\u5c0f\u4f5c\u533a\u95f4\u7684\u7ebf\u6bb5\u6811\u3002  \n\u7136\u800c\uff0c\u6b64\u9898\u6570\u636e\u8303\u56f4\u592a\u5927\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u5c0f\u5c0f\u7684\u9884\u5904\u7406\u64cd\u4f5c\uff1a  \n\u4f8b\uff1a2 8 0 3 2\uff0c\u6211\u4eec\u53ef\u4ee5\u6392\u4e2a\u5e8f\uff08\u8981\u4fdd\u7559\u539f\u7248\uff09\uff1a0 2 2 3 8  \n\u53bb\u91cd\uff1a0 2 3 8\uff0c\u7f16\u53f7\u4e3a\uff1a1\uff0c2\uff0c3\uff0c4\u3002\u518d\u5bf9\u5e94\u56de\u53bb\uff1a2 4 1 3 2  \n(\u8981\u5f00\u4e2a\u7ed3\u6784\u4f53\uff0c\u8bb0\u5f55\u539f\u4f4d\u7f6e\uff09  \n\u4e00\u7cfb\u5217~~\u9a9a~~\u64cd\u4f5c\u5f97\uff1a 1<=A[i]<=n  \n\u597d\u4e86\uff0c\u73b0\u5728\u53ef\u4ee5\u6784\u9020\u4e86\u3002\uff08\u503c\u90fd\u4e3a0\uff09  \n\n---\n\u67e5\u8be2\u9006\u5e8f\u5bf9\uff0c\u5148\u4ece\u524d\u5411\u540e\u4f9d\u6b21\u67e5\u8be2\uff0c\u8bb0\u5f55\u603b\u548c\uff0c\u67e5\u8be2\u540e\u52a0\u5165\u7ebf\u6bb5\u6811\u5e76\u56de\u6eaf\n\n\u732e\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ninline int rd()\n{\n\tint x=0,flag=1;\n\tchar ch=getchar();\n\twhile((ch<'0' || ch>'9') && ch!='-') ch=getchar();\n\tif(ch=='-') flag=-1,ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*flag;\n}\ninline LL rdl()\n{\n\tLL x=0,flag=1;\n\tchar ch=getchar();\n\twhile((ch<'0' || ch>'9') && ch!='-') ch=getchar();\n\tif(ch=='-') flag=-1,ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*flag;\n}//\u8bfb\u5165\u4f18\u5316\nconst int N=5e5+50;\nconst int TR=N<<2;\nstruct tree{\n\tint l,r,k;\n}t[TR];\ninline int ls(int x)//\u5de6\u513f\u5b50\n{\n\treturn x<<1;\n}\ninline int rs(int x)//\u53f3\u513f\u5b50\n{\n\treturn x<<1|1;\n}\nstruct no{\n\tint x,i;\n}cop[N];\nbool comp(no x,no y)\n{\n\treturn x.x<y.x;\n}\ninline void build(int now,int l,int r)//\u5efa\u6811\n{\n\tt[now].l=l;\n\tt[now].r=r;\n\tt[now].k=0;\n\tif(l==r)\n\t\treturn ;\n\tint mid=(l+r)>>1;\n\tbuild(ls(now),l,mid);\n\tbuild(rs(now),mid+1,r);\n\treturn ;\n}\ninline void up(int now)//\u56de\u6eaf\n{\n\tt[now].k=t[rs(now)].k+t[ls(now)].k;\n}\ninline LL src(int now,int x)//\u641c\u7d22\n{\n\tint l=t[now].l,r=t[now].r;\n\tLL sum=0;\n\tint mid=(l+r)>>1;\n\tif(l==r)\n\t\treturn (LL)t[now].k;\n\tif(x<=mid) sum+=(LL)t[rs(now)].k+src(ls(now),x);//\u82e5\u5728\u5de6\u513f\u5b50\u4e2d\uff0c\u53f3\u513f\u5b50\u4e00\u5b9a\u6bd4\u5b83\u5927\n\telse sum+=src(rs(now),x);//\u641c\u7d22\u53f3\u513f\u5b50\n\treturn sum;\n}\ninline void upate(int now,int x)//\u52a0\u5165\n{\n\tint l=t[now].l,r=t[now].r;\n\tint mid=(l+r)>>1;\n\tif(l==r)\n\t{\n\t\tt[now].k++;//\u7edf\u8ba1\u4e2a\u6570\n\t\treturn ;\n\t}\n\tif(x<=mid) upate(ls(now),x);\n\telse upate(rs(now),x);\n\tup(now);\n}\nint n;\nLL a[N],k[N],tot=0,ans=0;\nint main()\n{\n\tn=rd();\n\tfor(int i=1;i<=n;i++) a[i]=rdl(),cop[i].x=a[i],cop[i].i=i;\n\tsort(cop+1,cop+n+1,comp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(cop[i].x!=cop[i-1].x || i==1)\n\t\t\tk[++tot]=cop[i].x;\n\t\ta[cop[i].i]=tot;\n\t}//\u9884\u5904\u7406\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans+=src(1,a[i]+1);//\u5927\u4e8ea\u7684\u4e2a\u6570=\u5927\u4e8e\u7b49\u4e8ea+1\u7684\u4e2a\u6570\n\t\tupate(1,a[i]);//\u66f4\u65b0\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n[\u5e7f\u544a\uff08advertisement\uff09](https://www.luogu.org/blog/STC-hjh/)",
        "postTime": 1531026036,
        "uid": 103990,
        "name": "asd_a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u773c\u9898\u9762...\n\n\u88f8\u7684\u9006\u5e8f\u5bf9...\n\n\u5f52\u5e76...\n\n\u6ce8\u610f\u5f00`long long`\u5c31\u53ef\u4ee5\u4e86...\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n//\u76f4\u63a5\u590d\u5236\u4e0d\u80fd\u8fc7\u54e6\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#define Mid ((L+R)/2)\nusing namespace std;\nconst int N=1000005;\nlong long A[N],B[N],count=0,n;\nvoid work(int L,int R){\n    if(L==R)return;\n  \u3000work(L,Mid);\n  \u3000work(Mid+1,R);\n    int tl=L,tr=Mid+1,t=L;\n    while(tl<=Mid&&tr<=R){\n        if(A[tl]<=A[tr])B[t++]=A[tl++];\n      \u3000else B[t++]=A[tr++],count+=tr-t;\n    }\n    while(tl<=Mid) B[t++]=A[tl++];\n    while(tr<=R) B[t++]=A[tr++];\n  \u3000for(int i=L;i<=R;i++)A[i]=B[i];\n}\nint main(){\n    scanf(\"%lld\",&n);\u3000\n  \u3000for(int i=1;i<=n;i++)scanf(\"%lld\",&A[i]);\n    work(1,n);\n    printf(\"%lld\",count);\n    return 0;\n}\n//\u4f18\u79c0\u7684\u5f52\u5e76\n```",
        "postTime": 1545549541,
        "uid": 76156,
        "name": "henrytb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\n\u89c1[p1774](https://www.luogu.org/problemnew/solution/P1774?&page=2)\n# \u7b97\u6cd5\u63cf\u8ff0\n\u672c\u9898\u8981\u6c42\u6c42\u4ea4\u6362\u6b21\u6570\uff0c\u56e0\u4e3a\u6700\u4f18\u65b9\u6848\u6bcf\u4ea4\u6362\u4e00\u6b21\u5fc5\u5b9a\u6d88\u53bb\u4e14\u4ec5\u6d88\u53bb\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u4ea4\u6362\u6b21\u6570\u7b49\u4e8e\u9006\u5e8f\u5bf9\u6570\uff0c\u6545\u672c\u9898\u5176\u5b9e\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u6570\u3002\n## \u65b9\u6cd5\u4e00\n\u5192\u6ce1\u6392\u5e8f\u6c42\u4ea4\u6362\u6b21\u6570\t\n\u65f6\u95f4\u590d\u6742\u5ea6\n```latex\nO(n^2)\n```\n\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0cTLE\n### \u6b64\u65b9\u6cd5\u4e3b\u8981\u4ee3\u7801\n```cpp\nfor (int i = 0; i < n; i++)\n    for (int j = i; j < n; j++)\n    {\n        if (a[i]>a[j])\n        {\n            b = a[j];\n            a[j] = a[i];\n            a[i] = b;\n            t++;\n        }\n    }\n```\n## \u65b9\u6cd5\u4e8c\n\u5f52\u5e76\u6392\u5e8f\t\n\u65f6\u95f4\u590d\u6742\u5ea6\n```latex\nO(n log n)\n```\n\u6b64\u65b9\u6cd5\u4e3a\u6b63\u89e3\u4e4b\u4e00\uff0c\u5728\u4e00\u822c\u7684\u5f52\u5e76\u6392\u5e8f\u7684\u57fa\u7840\u4e0a\u5728\u5f52\u5e76\u65f6\u53d1\u73b0\u9006\u5e8f\u5bf9\u65f6\u6267\u884c\n```cpp\nans += mid - p + 1;\n``` \n\u5373\u53ef\u6c42\u51fa\u9006\u5e8f\u5bf9\u6570\u3002\t\n\u6b64\u65b9\u6cd5\u5728\u4e0d\u7528O2\u4f18\u5316\u4e0b\u53ef\u8fbe\u5230536ms\u3002\n### \u6b64\u65b9\u6cd5\u4e3b\u8981\u4ee3\u7801\n```cpp\nvoid merge_sort(int s,int t)\n{\n    register int j, mid, p, q;\n    if (s==t)\n    {\n        return;\n    }//\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u65e0\u9700\u6392\u5e8f\n    mid = (s + t) >> 1;\n    merge_sort(s, mid);\n    merge_sort(mid + 1, t);\n    p = s;\n    q = mid + 1;\n    j = s;\n    while ((p<=mid)&&(q<=t))\n    {\n        if (a[p]>a[q])\n        {\n            c[j] = a[q];\n            ++q;\n            ++j;\n            ans += mid - p + 1;\n        }\n        else\n        {\n            c[j] = a[p];\n            ++p;\n            ++j;\n        }\n    }\n    --j;\n    if (p<=mid)\n    {\n        for (int i = p; i <= mid; ++i)\n        {\n            ++j;\n            c[j] = a[i];\n        }\n    }\n    else\n    {\n        for (int i = q; i <= t; ++i)\n        {\n            ++j;\n            c[i] = a[i];\n        }\n    }//\u5c06\u5269\u4f59\u7684\u5143\u7d20\u8d4b\u5165c\n    for (int i = s; i <= t; ++i)\n    {\n        a[i] = c[i];\n    }//\u5c06\u6570\u7ec4\u8d4b\u56de\n    return;\n}\n```\n## \u65b9\u6cd5\u4e09\n\u6811\u72b6\u6570\u7ec4\t\n\u65f6\u95f4\u590d\u6742\u5ea6\n```latex\nO(nlogn)\n```\n\u6b64\u65b9\u6cd5\u4e3a\u6b63\u89e3\u4e4b\u4e00\uff0c\u7531\u4e8e\u6b64\u65b9\u6cd5\u8981\u6c42\u8f83\u9ad8\uff0c\u5728\u6b64\u4e0d\u518d\u52a0\u4ee5\u63cf\u8ff0\u3002\n# \u4ee3\u7801\n```cpp\n#include<bits\\stdc++.h>\nusing namespace std;\n\nint a[500005], c[500005];\nlong long ans;\n\nint Read()\n{\n\tint Digital = 0, Symbol = 1;\n\tchar gc = getchar();\n\twhile (gc<'0' || gc>'9') \n\t{ \n\t\tif (gc == '-')Symbol = -Symbol;\n\t\tgc = getchar(); \n\t}\n\twhile (gc >= '0'&&gc <= '9')\n\t{\n\t\tDigital = Digital * 10 + gc - '0';\n\t\tgc = getchar();\n\t}\n\treturn Digital * Symbol;\n}\n\nvoid merge_sort(int s,int t)\n{\n\tregister int j, mid, p, q;\n\tif (s==t)\n\t{\n\t\treturn;\n\t}\n\tmid = (s + t) >> 1;\n\tmerge_sort(s, mid);\n\tmerge_sort(mid + 1, t);\n\tp = s;\n\tq = mid + 1;\n\tj = s;\n\twhile ((p<=mid)&&(q<=t))\n\t{\n\t\tif (a[p]>a[q])\n\t\t{\n\t\t\tc[j] = a[q];\n\t\t\t++q;\n\t\t\t++j;\n\t\t\tans += mid - p + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc[j] = a[p];\n\t\t\t++p;\n\t\t\t++j;\n\t\t}\n\t}\n\t--j;\n\tif (p<=mid)\n\t{\n\t\tfor (int i = p; i <= mid; ++i)\n\t\t{\n\t\t\t++j;\n\t\t\tc[j] = a[i];\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (int i = q; i <= t; ++i)\n\t\t{\n\t\t\t++j;\n\t\t\tc[i] = a[i];\n\t\t}\n\t}\n\tfor (int i = s; i <= t; ++i)\n\t{\n\t\ta[i] = c[i];\n\t}\n\treturn;\n}\n\nint main()\n{\n\tint n;\n\tn = Read();\n\tans = 0;\n\tfor (int i = 1; i <= n; ++i)\n\t\ta[i] = Read();\n\tmerge_sort(1, n);\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1533836257,
        "uid": 8487,
        "name": "JiayanJohnnyChu",
        "ccfLevel": 4,
        "title": "p1774\u6700\u63a5\u8fd1\u795e\u7684\u4eba\u9898\u89e3"
    },
    {
        "content": "\u53ef\u4ee5\u770b\u51fa\u662f\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\n\n\u76f4\u63a5\u6309\u6570\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6392\u5e8f\u65f6\u82e5\u76f8\u540c\u6570\u503c\u7684\uff0c\u4f4d\u7f6e\u5c0f\u7684\u4fdd\u6301\u5728\u524d\u9762\uff0c\u8fd9\u6837\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ea4\u6362.\u7f16\u5199\u8fd9\u6837\u4e00\u4e2acompare\u51fd\u6570\u5c31\u907f\u514d\u4e86\u5404\u79cd\u6211\u8fd9\u6837\u7684juruo\u4e0d\u77e5\u9053\u7684\u5947\u602a\u6280\u5de7\uff08stable_sort\uff0c\u5947\u602a\u7684\u79bb\u6563\u5316\u7b49\uff09.\n\n\u5269\u4e0b\u5c31\u662f\u548c P1908\u9006\u5e8f\u5bf9 \u4e00\u6837\u7684\u6c42\u9006\u5e8f\u5bf9\u4e86\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint n;\nlong long ans;\n\nstruct P {\n\tint y;\n\tlong long x;\n\tbool operator <(const P p2) const {\n\t\treturn x == p2.x ? y < p2.y : x < p2.x;\n\t}\n} p[500001];\n\nint c[500001];\n\nvoid update(int k, int x) {\n\tfor(; k<=n; k += k&-k) c[k] += x;\n}\n\nlong long query(int k) {\n\tlong long ans = 0;\n\tfor(; k; k -= k&-k) ans += c[k];\n\treturn ans;\n}\n\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i=1; i<=n; ++ i)\n\t\tscanf(\"%lld\", &p[p[i].y = i].x);\n\tsort(p+1, p+n+1);\n\tfor(int i=n; i; i--) {\n\t\tans += query(p[i].y - 1);\n\t\tupdate(p[i].y, 1);\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1528203069,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u5f88\u5bb9\u6613\u770b\u51fa\u5c31\u662f\u6c42\u4e00\u4e2a**\u9006\u5e8f\u5bf9**\u3002\n\n\u4f60\u77e5\u9053\u5417\uff0c\u9006\u5e8f\u5bf9\u6709\u4e24\u79cd\u5199\u6cd5\n\n**1.\u5f52\u5e76;2.\u6811\u72b6\u6570\u7ec4**\n\n\u6240\u4ee5\u6211\u8981\u4e0a\u4e00\u4e2a**Splay**\uff0c\u867d\u7136\u6548\u7387\u5f88\u4f4e\u4e86\n\n\u6570\u636e\u5904\u7406\u8981\u4e48\u79bb\u6563\u5316\u53bb\u91cd\uff0c\u8981\u4e48**stable_sort**\u3002\u5c3d\u91cf\u4e0d\u6539\u53d8\u539f\u6709\u987a\u5e8f\n```\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\nusing namespace std;\nconst int maxn=5e5+100;\nint ch[maxn][2];\nint size[maxn],cnt[maxn],fa[maxn],val[maxn];\nint  ncnt,root; \nlong long ans=0;\nstruct c\n{\n    int id;\n    long long val;\n    bool operator<(const c& x)const \n    {\n        return val<x.val;\n    } \n}a[maxn]; \ninline long long read()\n{\n    long long x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid pushup(int u)\n{\n    size[u]=size[ch[u][0]]+size[ch[u][1]]+cnt[u];\n}\nint chk(int u)\n{\n    return ch[fa[u]][1]==u;\n}\nvoid rotate(int u)\n{\n    int f=fa[u],ff=fa[f],k=chk(u),s=ch[u][k^1];\n    ch[f][k]=s;fa[s]=f;\n    ch[ff][chk(f)]=u;fa[u]=ff;\n    ch[u][k^1]=f;fa[f]=u;\n    pushup(u),pushup(f); \n}\nvoid spaly(int u,int goal=0)\n{\n    while(fa[u]!=goal)\n    {\n        int f=fa[u],ff=fa[f];\n        if(ff!=goal)\n        {\n            if(chk(u)==chk(f))rotate(f);\n            else rotate(u);\n        }\n        rotate(u);\n    }\n    if(!goal)root=u;\n}\nvoid insert(int x)\n{\n    int u=root,f=0;\n    while(u&&val[u]!=x)\n    f=u,u=ch[u][x>val[u]];\n    if(u)cnt[u]++;\n    else \n    {\n        u=++ncnt;\n        if(f)ch[f][x>val[f]]=u;\n        fa[u]=f;val[u]=x;\n        size[u]=cnt[u]=1;\n        ch[u][0]=ch[u][1]=0;\n    }\n    spaly(u);\n}\nvoid find(int x)\n{\n    int u=root;\n    while(ch[u][x>val[u]]&&val[u]!=x)\n    u=ch[u][x>val[u]];\n    spaly(u); \n}\nint main()\n{\n    insert(inf);\n    insert(-inf);\n    int n=read();\n    for(int i=1;i<=n;i++)\n    a[i].id=i,a[i].val=read();\n    stable_sort(a+1,a+1+n);\n    for(int i=n;i>=1;i--)\n    {\n    \tinsert(a[i].id);\n    \tfind(a[i].id);\n    \tans+=size[ch[root][0]]-1;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n} \n```\n\n",
        "postTime": 1562903596,
        "uid": 58707,
        "name": "Edward_Elric",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\n\n\u8be6\u7ec6\u89e3\u91ca\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\u9762\n\n\u672c\u9898\u4e3b\u8981\u6ce8\u610f\u7684\u662f$ans$\u8981\u5f00$longlong$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[600000],b[600000];\nlong long ans;\nvoid merge_sort(int l,int r){\n\tif (l==r) return;\n\tint mid=(l+r)/2;\n\t//\u5f80\u4e0b\u9012\u5f52 \n\tmerge_sort(l,mid);\n\tmerge_sort(mid+1,r);\n\t//\u6392\u5e8f\n\tint i=l,j=mid+1,k=l;//\u64cd\u4f5c\u66f4\u65b0\u7684\u662fl->r\u7684\u533a\u95f4 \u521d\u503c\u8d4b\u5728l\u548cr \n\twhile (i<=mid&&j<=r){//\u5728\u5e95\u5c42\u9012\u5f52\u7ed3\u675f\u4e4b\u540e \u524d\u540e\u4e24\u4e2a\u90e8\u5206\u90fd\u5e94\u8be5\u662f\u6709\u5e8f\u7684 \n\t\tif (a[i]<=a[j]) {\n\t\t\tb[k]=a[i];//\u628a\u8f83\u5c0f\u7684\u6570\u636e\u653e\u5165\u8f85\u52a9\u6570\u7ec4 \n\t\t\ti++;\n\t\t\tk++; \n\t\t}\n\t\telse {\n\t\t\tb[k]=a[j];\n\t\t\tans+=mid-i+1;//\u524d\u4e00\u534a\u662f\u6709\u5e8f\u7684\u90a3\u4e48\u8fd9\u4e2a\u540e\u9762\u7684\u90fd\u662f\u9006\u5e8f\u5bf9 \n\t\t\tj++;\n\t\t\tk++;\n\t\t}\n\t}\n\t//\u5269\u4f59\u5143\u7d20\u52a0\u5165\u6570\u7ec4\n\twhile(i<=mid) {\n\t\tb[k]=a[i];\n\t\tk++;\n\t\ti++;\n\t}  \n\twhile (j<=r){\n\t\tb[k]=a[j];\n\t\tk++;\n\t\tj++;\n\t}\n\tfor (int p=l;p<=r;p++) a[p]=b[p]; \n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tmerge_sort(1,n);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1554523688,
        "uid": 99460,
        "name": "Hiraeth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5e76\u4e0d\u96be\uff0c\u4e3b\u8981\u8fd0\u7528\u4e86\u5206\u6cbb\u7684\u601d\u60f3\u3002\n\n\u628a\u4e00\u4e2a\u5927\u95ee\u9898\u5206\u89e3\u51fa\u8bb8\u591a\u5c0f\u95ee\u9898\uff0c\u76f4\u5230\u5c0f\u95ee\u9898\u7684\u89e3\u80fd\u591f\u76f4\u63a5\u6c42\u51fa\u3002**\u518d\u628a\u8fd9\u4e9b\u5c0f\u95ee\u9898\u91cd\u65b0\u5408\u5e76**\u6210\u539f\u6765\u7684\u5927\u95ee\u9898\u3002**\u5408\u5e76**\u662f\u5173\u952e\uff01\uff01\uff01\n\n\u5206\u6cbb\uff0c\u4e3b\u8981\u662f\u4ee5**\u9012\u63a8**\u7684\u5f62\u5f0f\u5448\u73b0\uff0c\u4f46\u4e2d\u5fc3\u601d\u60f3\u662f\u8f83\u4e3a\u5b8c\u6574\u7684\u3002\u6811\u72b6\u6570\u7ec4\u548c\u5f52\u5e76\u5bf9\u4e8e\u6211\u8fd9\u79cd\u849f\u84bb\u8fd8\u662f\u592a\u6df1\u5965\u4e86\uff0c\u6240\u4ee5\u6765\u4e00\u6ce2\u5206\u6cbb\uff01\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nconst int N=500010;\nint a[N],b[N];//\u9876\u5e38\u91cf\u662f\u4e2a\u597d\u4e60\u60ef\nlong long s;//\u4e0d\u5f00long long\u4f1a\u7206\n\n//\u5206\u6cbb\uff01\uff01\uff01\nvoid acd(int t,int w){//\uff08\u6211\u592a\u5f31\u4e86\uff0c\u4e0d\u4f1a\u5b9al\u548cr\uff0c\u53ea\u4f1at\u548cw\uff08\u5934\u548c\u5c3e\uff09\n    if(t==w) return;//\u5982\u679ct=w\uff0c\u8fd4\u56de\n    int m=(t+w)/2;//\u5b9a\u4e2d\u70b9\n    acd(t,m);//\u5206\u89e3\u5c0f\u95ee\u9898\n    acd(m+1,w);//\u5206\u6cbb\u601d\u8def\n    int j=m+1,l=t,x=t,y=w;\n    //\u91cd\u8981\u7684\uff1a\u5408\u5e76\n    while(t<=m&&j<=w){\n        if(a[t]<=a[j]){\n            b[l++]=a[t++];\n        }\n        else {\n            b[l++]=a[j++];\n            s+=m-t+1;\n        }\n    }\n    //\u5408\u5e76\u5927\u4f53\u7ed3\u675f\n    while(t<=m) b[l++]=a[t++];//\u5934\u6ca1\u6709\u626b\u5e72\u51c0\u8981\u626b\u6389\n    while(j<=w) b[l++]=a[j++];//\u5c3e\u4e5f\u4e00\u6837\n    //\u5408\u5e76\u5f7b\u5e95\u7ed3\u675f\n    for(;x<=y;x++){\n        a[x]=b[x];//\u8bb0\u4f4f\uff01\u8fd9\u4e00\u6bb5a\u6570\u7ec4\u8981\u88abb\u6570\u7ec4\u8986\u76d6\n    }\n}\n\nint main(){\n    int n;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin>>a[i];\n    }\n    acd(0,n-1);//\u4ece0\u5230n-1\u7684\u5927\u95ee\u9898\n    cout<<s;\n    return 0;\n}\n```\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5927\u5bb6\u3002\n**\u8c22\u8c22**\uff01",
        "postTime": 1548828976,
        "uid": 109640,
        "name": "\u5fae\u9999\u7389\u70db\u6697",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u6a21\u62df\u4e00\u4e0b\uff0c\u5f88\u7b80\u5355\u7684\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(\"Ofast\")\nconst int N=5e5+5.5;\nlong long a[N],b[N],ans;\nvoid swap1(long long int &a,long long int &b){long long t=a;a=b;b=t;}\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;i++) scanf(\"%lld\",a+i);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n-i;j++)\n\tif(a[j]>a[j+1]) swap1(a[j],a[j+1]),ans++;\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\u6211\u60f3\u77e5\u9053\u8fd9\u9898\u4e3a\u4ec0\u4e48\u662f\u7eff\u7684\uff1f\u7b80\u76f4\u592a\u7b80\u5355\u4e86\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u4ea4\u4e00\u4e0b\uff0c\u53d1\u73b03\u4e2aAC 2\u4e2aTLE\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n```\nfor(int i=1;i<=n;i++)\nfor(int j=1;j<=n-i;j++)\nif(a[j]>a[j+1]) swap1(a[j],a[j+1]),ans++;\n```\n\u770b\u89c1\u4e86\u6ca1\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u77e5\u9053\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2)$\n\n`\u5bf9\u4e8e30%\u7684\u6570\u636e1\u2264n\u226410^4`\n\n\u6240\u4ee5\u6700\u591a\u8fc73\u4e2a\u70b9\uff08~~\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u7b2c\u4e00\u4e2a\u70b9n\u4e3a1000~~\uff09\n\n---\n\n\u8fd9\u9053\u9898\uff0c\u7528\u5f52\u5e76\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n\u4ee5\u4e0b\u662f\u5206\u6790\uff1a\uff08\u662f\u5982\u4f55\u505a\uff09\n\n\u4e3e\u4f8b\uff1a\uff08\u6211\u6700\u559c\u6b22\u4e3e\u6817\u5b50\u4e86\uff09\n```\n4\n2 8 1 3\n(\u5176\u5b9e\u5c31\u662f\u6837\u4f8b,\u53ea\u662f0\u4e0e1\u7684\u533a\u522b)\n```\n\u7531\u4e8e\u524d\u9762\u6ca1\u6709\u53ef\u4ee5\u8ba1\u7b97\u7684\uff08\u505a\u5b8c\u5012\u6570\u7b2c\u4e8c\u4e2a\u5f52\u5e76\u7a0b\u5e8f\u540e\uff0c\u7ed3\u679c\u6ca1\u53d8\uff0c\u8fd8\u662f`2 8 0 3`\uff09\uff0c\u4e0d\u8be6\u7ec6\u8bf4\u660e\u3002\n\n\u6700\u540e\u4e00\u6b21\uff1a\n```\na:2 8 1 3//\u5f53\u524d\u6570\u7ec4\nb:0 0 0 0//\u6392\u5e8f\u540e\u7684\u6570\u7ec4\ni = 1;//\u4ee51\u5f00\u59cb\nj = 3;\nk = 1;\nans = 0;\n```\n\u6211\u4eec\u53d1\u73b0\uff0c`a[j]<a[i]`\uff0c\u5c06`a[j]`\u653e\u5165b\u6570\u7ec4\u4e2d\uff1a\n```\na:2 8 1 3\nb:1 0 0 0\ni = 1;\nj = 4;\nk = 2;\n```\n\u800c 1 \u5b9e\u9645\u4e0a\u662f\u5df2\u7ecf\u4e0e\u524d\u9762\u7684\u4ea4\u6362\u8fc7\u4e86\uff0c\u6240\u4ee5`ans = ans + j - k;`\uff0c\u5373\u539f\u6765\u7684\u4f4d\u7f6e\u4e0e\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\u7684\u5dee\u3002\n```\nans = 2;\n```\n\u7b2c\u4e8c\u6b65\uff1a`a[i]<a[j]`\n```\na:2 8 1 3\nb:1 2 0 0\ni = 2;\nj = 4;\nk = 3;\nans = 2;\n```\n\u8fd9\u91cc\u5c31\u4e0d\u9700\u8981\u4ea4\u6362\u4e86\uff0c\u56e0\u4e3a 2 \u5b9e\u9645\u4e0a\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\n\n\u540e\u9762\u540c\u7406\uff0c\u6700\u540e$ans = 3$\n\n\u4ee3\u7801\uff1a\n```\n#include <iostream>\n#include <stdio.h>\n#include <climits>\nusing namespace std;\nint input()\n{\n\tint re=0; char c=getchar();\n\twhile(c<'0' or c>'9') c=getchar();\n\twhile(c>='0' and c<='9') re=(re<<3)+(re<<1)+(c^48),c=getchar();\n\treturn re;\n}\nvoid print(int x)\n{\n\tif(x<10) {putchar(x^48);return;}\n\tprint(x/10);putchar((x%10)^48);\n}\nconst int N=5e5+5.5;\nlong long a[N],b[N],ans;\nvoid msort(int l,int r)\n{\n\tif(l==r) return;\n\tint mid=(l+r)>>1;//\u4f4d\u8fd0\u7b97\u52a0\u901f\n    //\u5f52\u5e76\u6392\u5e8f\n\tmsort(l,mid);\n\tmsort(mid+1,r);\n\tint i=l,j=mid+1,k=l;\n\twhile(i<=mid&&j<=r)\n\t{\n\t\tif(a[i]<a[j]) b[k++]=a[i++];\n\t\telse b[k++]=a[j++],ans=ans-k+j;\n\t}\n\twhile(i<=mid) b[k++]=a[i++];\n\twhile(j<=r) b[k++]=a[j++],ans=ans-k+j;\n\tfor(int t=l;t<=r;t++) a[t]=b[t];\n}\nint main()\n{\n\tint n;scanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;i++) scanf(\"%lld\",a+i);\n\tmsort(1,n);\n\tprintf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e5f\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n log n)$\n\n----\n\u6b38\uff0c\u5982\u679c\u4f60\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u8bd5\u7740\u4ea4\u4e00\u904d\uff0c\u53d1\u73b0\u8fd9\u6837\u5b50\u53ea\u80fd\u5f97\u5230$10$\u5206\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5$hack$\u4e00\u4e0b\uff1a\n```\n4\n2 4 2 8\n```\n\u4f60\u4f1a\u53d1\u73b0\u8f93\u51fa\u7684\u662f$2$\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u4e00\u6b65\uff1a\n```\n2 4 2 8\n2 2 4 8\nSwap(2,4)\n```\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u5728\u8fd9\u6bb5\u8bed\u53e5\u4e2d\uff1a\n```\nif(a[i]<a[j]) b[k++]=a[i++];\n```\n\u6a21\u62df\u4e0b\uff1a\n```\n2 0 0 0 | ans = 2;\n```\n\u6709\u95ee\u9898\uff01\n\n\u7531\u4e8e`a[i]<a[j]==false`\uff0c\u6240\u4ee5\u7a0b\u5e8f\u4f1a\u8ba4\u4e3a\u662f\u5c06`a[j]`\u7684$2$\u901a\u8fc7\u4e00\u6b65\u4e00\u6b65\u6362\u6392\u5e8f\u7684\uff0c\u800c\u4e0d\u662f\u7531`a[i]`\u7684$2$\n\n\u6240\u4ee5\u5c06\u4e0a\u9762\u7684\u8bed\u53e5\u6539\u4e3a\uff1a\n```\nif(a[i]<=a[j]) b[k++]=a[i++];//\u5343\u4e07\u4e0d\u8981\u5c11\u7b49\u53f7\n```",
        "postTime": 1545208004,
        "uid": 89127,
        "name": "2x6_81",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u660e\u663e\u662f\u6c42\u9006\u5e8f\u5bf9\u3002\n\n\u6240\u8c13\u9006\u5e8f\u5bf9\uff0c\u5c31\u662f**\u9006\u5e8f**\u7684\u6570\u5bf9\u3002\n\n\u8b6c\u5982\u5728\u4e0b\u9762\u8fd9\u4e2a\u6570\u5217\u4e2d\uff1a\n\n> 1 2 3 4 6 5\n\n6 5\u5c31\u662f\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002\n\n------------\n\n\u6c42\u9006\u5e8f\u5bf9\u7684\u65b9\u6cd5\u6bd4\u8f83\u591a\uff0c\u5e38\u89c1\u7684\u6709\u5f52\u5e76\u6392\u5e8f\u548c\u6811\u72b6\u6570\u7ec4\uff08\u7ebf\u6bb5\u6811\u5f53\u7136\u4e5f\u884c\uff09\u3002\n\n\u672c\u9898\u91c7\u7528\u5e73\u8861\u6811\uff08leafy tree\uff09\u89e3\u51b3\u3002\uff08\u4e4b\u6240\u4ee5\u5199\u8fd9\u4e2a\u624d\u4e0d\u662f\u56e0\u4e3a\u6211\u61d2\u5462\uff01\uff09\n\n\u5bf9\u4e8e\u6570\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\uff0c\u63d2\u5165\uff0c\u7136\u540e\u67e5\u8be2\u5b83\u7684rank\u3002\n\n\u7d2f\u52a0\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5199\u7684\u65f6\u5019\u56e0\u4e3a\u76f4\u63a5\u9ecf\u8d34\u6a21\u677f\u88ab\u5751\u4e86\u597d\u51e0\u6b21\uff08\u5c34\u5c2c\u81f3\u6781\uff09\uff0c\u5927\u6982\u544a\u8bc9\u6211\u4e24\u4ef6\u4e8b\uff1a\n\n1. \u8fd9\u9898\u5f97\u5f00long long\n\n2. \u4e0d\u6ce8\u91ca\u6587\u4ef6\u8f93\u5165\u53ef\u80fd\u4e0d\u662fRE\u800c\u662fTLE\n\n\u901f\u5ea6\u5f88\u6162\uff0c\u6548\u7387\u5f88\u4f4e\uff0c2212ms\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst long long N=500500;\nnamespace LeafyTree{\n    const long long alpha=4;\n    long long n,cnt,father,root;\n    long long val[N<<2],size[N<<2],ls[N<<2],rs[N<<2];\n    inline void newNode(long long &pos,long long v){\n        pos=++cnt,size[pos]=1,val[pos]=v;\n    }\n    inline void copyNode(long long x,long long y){\n        size[x]=size[y],ls[x]=ls[y],rs[x]=rs[y],val[x]=val[y];\n    }\n    void merge(long long l,long long r){\n        size[++cnt]=size[l]+size[r],val[cnt]=val[r],ls[cnt]=l,rs[cnt]=r;\n    }\n    void rotate(long long pos,bool flag){\n        if(flag){\n            merge(ls[pos],ls[rs[pos]]);\n            ls[pos]=cnt,rs[pos]=rs[rs[pos]];\n        }else{\n            merge(rs[ls[pos]],rs[pos]);\n            rs[pos]=cnt,ls[pos]=ls[ls[pos]];\n        }\n    }\n    void maintain(long long pos){\n        if(size[ls[pos]]>size[rs[pos]]*alpha)rotate(pos,0);\n        else if(size[rs[pos]]>size[ls[pos]]*alpha)rotate(pos,1);\n        if(size[ls[pos]]>size[rs[pos]]*alpha)rotate(ls[pos],1),rotate(pos,0);\n        else if(size[rs[pos]]>size[ls[pos]]*alpha)rotate(rs[pos],0),rotate(pos,1);\n    }\n    void pushup(long long pos){\n        if(!size[ls[pos]])return;\n        size[pos]=size[ls[pos]]+size[rs[pos]];\n        val[pos]=val[rs[pos]];\n    }\n    void insert(long long pos,long long v){\n        if(size[pos]==1){\n            newNode(ls[pos],min(v,val[pos]));\n            newNode(rs[pos],max(v,val[pos]));\n            pushup(pos);\n            return;\n        }\n        if(v>val[ls[pos]])insert(rs[pos],v);\n        else insert(ls[pos],v);\n        pushup(pos);\n        maintain(pos);\n    }\n    void erase(long long pos,long long v){\n        if(size[pos]==1){\n            if(ls[father]==pos)copyNode(father,rs[father]);\n            else copyNode(father,ls[father]);\n            return;\n        }\n        father=pos;\n        if(v>val[ls[pos]])erase(rs[pos],v);\n        else erase(ls[pos],v);\n        pushup(pos);\n        maintain(pos);\n    }\n    long long kth(long long pos,long long v){\n        if(size[pos]==v)return val[pos];\n        if(v>size[ls[pos]])return kth(rs[pos],v-size[ls[pos]]);\n        return kth(ls[pos],v);\n    }\n    long long rank(long long pos,long long v){\n        if(size[pos]==1)return 1;\n        if(v>val[ls[pos]])return rank(rs[pos],v)+size[ls[pos]];\n        return rank(ls[pos],v);\n    }\n}\nusing namespace LeafyTree;\nnamespace Solve{\n\ttemplate<typename T>inline void read(T &x){\n\t\tx=0;T f=1;char c=getchar();\n\t\tfor(;c<'0'||c>'9';c=getchar())if(c=='-')f=-1;\n\t\tfor(;c>='0'&&c<='9';c=getchar())x=x*10+c-'0';\n\t\tx*=f;\n\t}\n\ttemplate<typename T>inline void write(T x){\n\t\tif(x>=10)write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n\tconst long long INF=9223372036854775807;\n\tlong long n,ans;\n\tlong long a[N];\n\tinline void solve(){\n\t\tread(n);\n    \tnewNode(root,INF);\n\t\tfor(register long long i=1;i<=n;++i){\n\t\t\tread(a[i]),insert(root,a[i]);\n\t\t\tans+=i-rank(root,a[i]+1)+1;\n\t\t}\n\t\twrite(ans);\n\t}\n}\nusing namespace Solve;\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\tsolve();\n}\n```",
        "postTime": 1537966988,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u5708\uff0c\u5199\u5f52\u5e76\u6392\u5e8f\u7684\u5168\u662f\u9012\u5f52\u3002\u3002\u3002\n\n\u90a3\u6211\u5c31\u5199\u4e2a\u4e0d\u7528\u9012\u5f52\u7684\u5f52\u5e76\u6392\u5e8f\n\n\u4e0d\u7528\u9012\u5f52\u771f\u7684\u4f1a\u5feb\u4e00\u70b9\uff01\n\n673ms\uff0c\u7b14\u8005\u7684\u7a0b\u5e8f\u5728\u5199\u8fd9\u7bc7\u9898\u89e3\u65f6\u662f\u6700\u5feb\u7684\uff01\u552f\u4e00\u4e00\u4e2a<700ms\u7684\uff01\n\n\u5f52\u5e76\u6392\u5e8f\u5176\u5b9e\u662f\u5bf9~~\u8bb8\u591a~~\u4e00\u4e9b\u957f\u5ea6\u5927\u4e8e1\u7684\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\n\n\u8fd0\u7528\u6811\u7684\u77e5\u8bc6\u53ef\u77e5\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u6570\u5217\u9700\u8981\u64cd\u4f5cn-1\u6b21\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u6309\u5904\u7406\u5148\u540e\u7684\u987a\u5e8f\u628a\u533a\u95f4\u5b58\u5728\u4e24\u4e2a\u6570\u7ec4left,right\u91cc\n\n\u5b9e\u8d28\u662f\u628adfs\u53d8\u6210\u4e86bfs\n\n\u7136\u540e\u5c31\u4e0d\u7528\u9012\u5f52\u5566\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cmath>\n#include<set>\ninline void getint(int &_int){\n    char ch=0;\n    bool neg=false;\n    while(!isdigit(ch)&&ch!='-')ch=getchar();\n    if(ch=='-'){\n        neg=true;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        _int=_int*10+ch-48;\n        ch=getchar();\n    }\n    if(neg)_int=-_int;\n}\nint n;\nint a[500010];\nint left[500010],right[500010],mid[500010];\nint tmp[500010];\nlong long cnt;\nint main(){\n    register int i,j,k,l;                        rigister\u662f\u4e2a\u597d\u4e1c\u897f\n    getint(n);\n    for(i=1;i<=n;i++){\n        getint(a[i]);\n    }\n    left[1]=1,right[1]=n;\n    mid[1]=(1+n)/2;\n    k=1;\n    for(i=1;i<n;i++){\n        if(left[i]+1<right[i]){\n            k++;\n            left[k]=left[i];\n            right[k]=mid[i];\n            mid[k]=(left[k]+right[k])/2;\n        }\n        if(left[i]+2<right[i]){\n            k++;\n            left[k]=mid[i]+1;\n            right[k]=right[i];\n            mid[k]=(left[k]+right[k])/2;\n        }\n    }\n    for(l=n-1;l>=1;l--){                    Mergesort\n        const int s1=left[l],t1=mid[l],s2=mid[l]+1,t2=right[l];\n        i=k=s1,j=s2;\n        while(i<=t1&&j<=t2){\n            if(a[i]<=a[j]){\n                tmp[k++]=a[i++];\n            }else{\n                tmp[k++]=a[j++];\n                cnt+=s2-i;\n            }\n        }\n        while(i<=t1)tmp[k++]=a[i++];\n        while(j<=t2)tmp[k++]=a[j++];\n        for(k=s1;k<=t2;k++){\n            a[k]=tmp[k];\n        }\n    }\n    std::cout<<cnt<<'\\n';\n}\n```",
        "postTime": 1500552081,
        "uid": 21903,
        "name": "vegetabird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u3010\u601d\u8def\u3011\n\n\u7528\u4e00\u4e0b\u5f52\u5e76\u6392\u5e8f\u5c31\u884c\u4e86\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define maxn 500000+20\nusing namespace std;\ntypedef long long ll;\nll a[maxn],B[maxn];\nll n,cnt=0;\nvoid Merge(ll A[],int l,int mid,int r)\n{\n    int *B=new int[r-l+1];\n    int i=l,j=mid+1,k=0;\n    while(i<=mid&&j<=r)\n    {\n        if(A[i]<=A[j]) B[k++]=A[i++];\n        else\n        {\n            B[k++]=A[j++];\n            cnt+=mid-i+1;\n        }\n    }\n    while(i<=mid) B[k++]=A[i++];\n    while(j<=r) B[k++]=A[j++];\n    for(k=0;k<r-l+1;k++) A[l+k]=B[k];\n    delete []B;\n}\nvoid Mergesort(long long A[],int l,int r)\n{\n    if(l<r)\n    {\n        int mid=(l+r)>>1;\n        Mergesort(A,l,mid);\n        Mergesort(A,mid+1,r);\n        Merge(A,l,mid,r);\n    }\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n    Mergesort(a,1,n);\n    printf(\"%lld\",cnt);\n    return 0;\n}\n```",
        "postTime": 1544018103,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "    \u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\uff08\u8bf7\u5927\u4f6c\u4eec\u591a\u6307\u6559\u3002\u5f53\u7136\uff0c\u5982\u679c\u6709\u770b\u4e0d\u61c2\u7684\u5730\u65b9\u6b22\u8fce\u548c\u6211\u79c1\u4fe1\u4ea4\u6d41\u3002\uff09\n    \u9898\u76ee\u63cf\u8ff0\u4e2d\uff0c\u6c42\u51fa\u53d8\u6210\u4e0d\u4e0b\u964d\u5e8f\u5217\u7684\u6b21\u6570\uff0c\u5176\u5b9e\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\n    \u518d\u770b\u6837\u4f8b\uff0c\u7684\u786e\u5982\u6b64\u3002\u6240\u4ee5\u53ea\u9700\u6c42\u51fa\u9006\u5e8f\u5bf9\u5373\u53ef\u3002\n    \u6211\u7684\u65b9\u6cd5\u662f\uff1a\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u3002\n    \n    #include<cstdio>\n\t#include<algorithm>\n\tusing namespace std;\n\tconst int N=2000005;\n\ttypedef long long l;\n\tl t[N],ans,a[N],x[N];\n\tint n;\n\tint lowbit(int k){\n\t\treturn k&(-k);\n\t}\n\tvoid add(int k,l num){\n    \twhile(k<=n)\n\t    \tt[k]+=num,k+=lowbit(k);\n\t}\n\tvoid calc(int k){\n\t\twhile(k>0) \n    \tans+=t[k],k-=lowbit(k);\n\t}//\u5230\u6b64\u4e3a\u6b62\uff0c\u4ee5\u4e0a\u90fd\u662f\u6811\u72b6\u6570\u7ec4\u6a21\u677f\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\u6709\u7591\u95ee\u6b22\u8fce\u79c1\u4fe1\u4ea4\u6d41\u3002\n\tbool cmp(int p,int q){\n\t\treturn a[p]<a[q];\n\t}\n\tint main(){\n\t\tscanf(\"%d\",&n);\n\t\tint i;\n\t\tfor(i=1;i<=n;i++) \n\t\t    fr(a[i]),x[i]=i;\n\t\tstable_sort(x+1,x+1+n,cmp);//\u8fd9\u4e2a\u6bd4\u8f83\u91cd\u8981\uff0c\u5c31\u662f\u6309\u7167\u539f\u987a\u5e8f\u6392\u5e8f\u3002\u4e0d\u61c2\u53ef\u4ee5\u767e\u5ea6\u3002\n\t\tfor(i=1;i<=n;i++) a[x[i]]=i;\n\t\tfor(i=1;i<=n;i++) //\u8fd9\u4e2afor\u5faa\u73af\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u7684\u8fc7\u7a0b\uff0c\u5373\u7d2f\u52a0\u8fd9\u4e2a\u6570\u4e4b\u524d\u6bd4\u5b83\u5927\u7684\u6570\u3002\n        \tcalc(n-a[i]+1),add(n-a[i]+1,1);\n\t\tprintf(\"%lld\",ans);\n\t\treturn 0;\n\t}\n",
        "postTime": 1520085885,
        "uid": 87724,
        "name": "\u58a8\u821e\u7075\u7eaf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u6811\u72b6\u6570\u7ec4+\u4e8c\u5206\u79bb\u6563\u5316\u7684\u4ee3\u7801\n\n\u9996\u5148\uff0c\u6811\u72b6\u6570\u7ec4\u4e2d\u5b58\u7684\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u4f4d\u7f6e\u7684\u6570\u7684\u4e2a\u6570\n\n\u6211\u4eec\u5148\u628a\u539f\u6765\u7684\u6570\u7ec4\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u5229\u7528\u4e8c\u5206\u7684\u65b9\u5f0f\u6c42\u51fa\u5f85\u6c42\u7684\u6570\u5728\u6392\u597d\u5e8f\u7684\u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u8fd9\u662f\u56e0\u4e3a\u662f\u6309\u987a\u5e8f\u679a\u4e3e\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u9ed8\u8ba4\u6709i\u4e2a\u6570\u6bd4\u6b63\u5728\u679a\u4e3e\u7684\u6570\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u627e\u51fa\u5c0f\u4e8e\u5f53\u524d\u6570\u7684\u4e2a\u6570\u5373\u53ef\n\n\u4e8c\u5206\u67e5\u8be2\u4ee3\u7801\uff1a\n\n```cpp\n    int l=1,r=n;\n    while(l<r)\n    {\n        int mid=(l+r)>>1;\n        if(mp[mid]==num)\n            return mid;\n        if(mp[mid]>num)\n            r=mid-1;\n        if(mp[mid]<num)\n            l=mid+1;\n    }\n    return l;\n```\n\u4e3b\u8981\u4ee3\u7801\uff1a\n```cpp\nfor(int i=1;i<=n;i++)\n    {\n        int p=erfen(a[i]);\n        add(p);\n        ans+=i-query(p);\n    }\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\nhttp://www.cnblogs.com/zwfymqz/p/7099572.html\uff08\u6253\u4e2a\u5e7f\u544a\u522b\u4ecb\u610f\uff09\n",
        "postTime": 1498812830,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "ans\u8981\u5f00long long \uff0cans\u8981\u5f00long long \uff0cans\u8981\u5f00long long \uff0c\u6700\u91cd\u8981\u7684\u4e8b\u8bf4\u4e09\u904d\uff01\uff01\uff01\n\n\u7136\u540e\u5728\u5f52\u5e76\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u3002\u56e0\u4e3a\u9006\u5e8f\u5bf9\u6570\u7b49\u4e8e\u5de6\u8fb9\u7684\u9006\u5e8f\u5bf9\u6570\u52a0\u53f3\u8fb9\u7684\u9006\u5e8f\u5bf9\u6570\u52a0\u5206\u7acb\u4e24\u4fa7\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u521a\u597d\u53ef\u4ee5\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\u5b8c\u6210\uff0c\u7b97\u662f\u6a21\u677f\u9898\u4e86\uff0c\u5148\u7406\u89e3\u9898\u76ee\u6700\u91cd\u8981\u3002\n\n\n\n\n```cpp\n#include<cstdio>\nint n;\nlong long ans;\nint a[500100],b[500100];    //a\u539f\u6570\u7ec4\uff0cb\u6682\u5b58\u6570\u7ec4 \nvoid merge_sort(int l,int r)    //\u5f52\u5e76 \n{\n    if (l==r) return ;    //\u4e00\u4e2a\u6570\u4e0d\u7528\u6392\u5e8f \n    int m = (l+r)>>1;\n    merge_sort(l,m);    //\u6392\u5e8f\u5de6\u8fb9 \n    merge_sort(m+1,r);    //\u6392\u5e8f\u53f3\u8fb9 \n    int i = l, j = m+1, k = l ;    //i\u5de6\u8fb9\u6700\u5c0f\u7684\u4f4d\u7f6e\uff0cj\u53f3\u8fb9\u6700\u5c0f\u7684\u4f4d\u7f6e \n    while (i<=m && j<=r)\n        if (a[i]<=a[j]) b[k++] = a[i++];\n        else ans += m-i+1, b[k++] = a[j++];    //\u52a0\u5165\u53f3\u534a\u6bb5\u65f6\uff0c\u9006\u5e8f\u5bf9\u6570\u589e\u52a0 \n    while (i<=m) b[k++] = a[i++];    //\u52a0\u5165\u5de6\u8fb9\u5269\u4f59\u7684\u6570 \n    while (j<=r) b[k++] = a[j++];    //\u52a0\u5165\u53f3\u8fb9\u5269\u4f59\u7684\u6570\n    for (i=l; i<=r; ++i) a[i] = b[i];    //\u4ece\u6682\u5b58\u6570\u7ec4\u4e2d\u8d4b\u503c \n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1; i<=n; ++i)\n        scanf(\"%d\",&a[i]);\n    merge_sort(1,n);\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1498808127,
        "uid": 39828,
        "name": "amstar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u57fa\u672c\u601d\u8def\uff1a\u6c42\u9006\u5e8f\u5bf9\uff1b\n\n\u65b9\u6cd51\uff1a\u63d2\u5165\u6392\u5e8f\u601d\u60f3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u4f1a\u8d85\u65f6\uff0c\u4e0d\u9002\u7528\u3002\n\n\u65b9\u6cd52\uff1a\u5f52\u5e76\u6392\u5e8f\u601d\u60f3\uff0c\u672c\u9898\u89e3\u91c7\u7528\u8fd9\u79cd\u601d\u60f3\uff0c\u4f18\u70b9\u5728\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\uff0c\u4e14\u6613\u4e8e\u7406\u89e3\u3002\n\n\u65b9\u6cd53\uff1a\u6811\u72b6\u6570\u7ec4\u601d\u60f3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e\uff0c\u4f46\u662f\u5bf9\u4e8e\u666e\u53ca\u7ec4\u5e73\u5747\u6c34\u5e73\u6765\u8bf4\u96be\u4ee5\u638c\u63e1\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\uff1a\u4e0d\u65ad\u5730\u5f52\u5e76\u6392\u5e8f\uff0c\u4ea4\u6362\u7684\u6b21\u6570\u53ef\u8f6c\u6362\u4e3a\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u3002\n\n\u6ce8\u610f\uff1a\u6bcf\u6b21\u6392\u5e8f\u4e0d\u8981\u590d\u5236\u6574\u4e2a\u6570\u7ec4\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u65f6\u95f4\u5f00\u9500\u3002\u6700\u4f18\u7684\u505a\u6cd5\u662f\u5c06\u6392\u597d\u5e8f\u7684\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4t\u91cc\uff0c\u6392\u5b8c\u5e8f\u590d\u5236\u5230\u4e3b\u6570\u7ec4a\u4e2d\u3002\u4e34\u65f6\u6570\u7ec4t\u4e5f\u4e0d\u8981\u6bcf\u4e00\u4e2a\u8fc7\u7a0b\u5c31\u5f00\u4e00\u6b21\uff0c\u53ef\u4ee5\u5f00\u5728\u4e3b\u7a0b\u5e8f\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u5185\u5b58\u5f00\u9500\n\n\u4ee3\u7801\uff1a\n\n'''pascal\n\n```cpp\nvar\n    n,i:longint;\n    ans:qword;\n    a,t:array[1..500000]of longint;\nprocedure deal(l,r:longint);\n    var\n        mid,p,q,i:longint;\n    begin\n        if l=r then begin\n            exit()\n        end;\n        mid:=(l+r)>>1;\n        deal(l,mid);\n        deal(mid+1,r);\n        p:=l;\n        q:=mid+1;\n        i:=l;\n        repeat\n            if (a[p]<=a[q]) and (p<=mid) or (q>r) then begin\n                t[i]:=a[p];\n                inc(p)\n            end\n            else begin\n                t[i]:=a[q];\n                inc(q);\n                ans+=mid-p+1\n            end;\n            inc(i)\n        until (i>r);\n        for i:=l to r do begin\n            a[i]:=t[i]\n        end;\n    end;\nbegin\n    readln(n);\n    for i:=1 to n do begin\n        read(a[i])\n    end;\n    readln;\n    ans:=0;\n    deal(1,n);\n    writeln(ans)\nend.\n'''\n```",
        "postTime": 1478054397,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u89e3\u4e2d\u5e76\u6ca1\u6709C++\u6811\u72b6\u6570\u7ec4\u89e3\u6cd5\uff0c\u6240\u4ee5\u52a0\u4e00\u4e2a\uff0c\u6ce8\u610f\uff0c\u4e0d\u8981\u53bb\u91cd\uff01\n\n\n\n\n    \n    \n    \n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define MAXN 500000\n#define ll long long\nll n,a[MAXN+5],num[MAXN+5],ans = 0;\ninline ll lowbit(ll k)\n{\n    return (k&(-k));\n}\nbool cmp(ll a1, ll a2)\n{\n    return a[a1] < a[a2];\n}\nstruct Index_Tree\n{\n    ll c[MAXN+5];\n    void Init()\n    {\n        memset(c,0,sizeof(c));\n        return;\n    }\n    void Add(ll i, ll j)\n    {\n        for(; i <= n; i+=lowbit(i))\n            c[i] += j;\n        return;\n    }    \n    ll Sum(ll i)\n    {\n        ll ans = 0;\n        for(; i; i-=lowbit(i))\n            ans += c[i];\n        return ans;\n    }\n};\nIndex_Tree T;\nint main()\n{\n    T.Init();\n    scanf(\"%lld\",&n);\n    for(ll i = 0; i < n; i++)\n        scanf(\"%lld\",a+i),num[i] = i;\n    //n = unique(a,a+n)-a;\n    stable_sort(num,num+n,cmp);\n    for(ll i = 0; i < n; i++)\n        a[num[i]] = i;\n    for(ll i = 0; i < n; i++)\n        ans += T.Sum(n-a[i]), T.Add(n-a[i],1);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1471342488,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "\u8fd9\u662fpascal\u4ee3\u7801\u3002\n\n\u9996\u5148\uff0c\u4f60\u6709\u6ca1\u6709\u770b\u51fa\u6765\u8fd9\u9898\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\uff1f\n\n\u6700\u4f18\u65b9\u6848\u6bcf\u79fb\u52a8\u4e00\u6b21\u5fc5\u5b9a\u6d88\u4e14\u4ec5\u6d88\u53bb\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002\n\nso\uff0c\u9006\u5e8f\u5bf9\u7528\u5f97\u4e0a\u6811\u72b6\u6570\u7ec4\u5417\uff1f\n\n\u636e\u8bf4\uff0c\u6709\u4e00\u79cd\u4e1c\u897f\u53eb\u5f52\u5e76\u6392\u5e8f\u3002\uff08n log n\uff09\n\n\u5728\u5f52\u5e76\u8fc7\u7a0b\u4e2d\u6539\u4e00\u70b9\u4e1c\u897f\u5c31\u884c\u5566\u3002\n\n```cpp\nvar n,i:longint;\nans:int64;//\u7531\u4e8e\u662f\u4e94\u5341\u4e07\u7684\u6570\u636e\uff0c\u6700\u591a\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u4f1a\u7206longint\u3002\na,b:array [1..500000] of longint;\nprocedure merge(l,p,r:longint);\nvar i,j,k,t:longint;\nbegin\n  i:=l;\n  j:=p;\n  for k:=l to r do\n  if (i<p) and ((j>r) or (a[i]<=a[j])) then\n  begin\n    b[k]:=a[i];\n    inc(i);\n  end\n  else\n  begin\n    b[k]:=a[j];\n    inc(j);\n    ans:=ans+p-i;//\u5c0f\u6539\u7684\u5730\u65b9\u3002\n  end;\n  for i:=l to r do\n  a[i]:=b[i];\nend;\nprocedure merge_sort(l,r:longint);\nvar x:longint;\nbegin\n  if l=r then exit;\n  x:=(l+r) div 2;\n  merge_sort(l,x);\n  merge_sort(x+1,r);\n  merge(l,x+1,r);\nend;\nbegin\n  read(n);\n  for i:=1 to n do\n  read(a[i]);\n  merge_sort(1,n);\n  write(ans);\nend.\n```",
        "postTime": 1471167833,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "```cpp\n\n#include<iostream>\nconst int maxn=500005;\nusing namespace std;\nint n,a[maxn],t[maxn];\nlong long ans=0;\n\nvoid work(int x,int y){\n    if(x==y) return;\n    int mid=(x+y)/2;\n    work(x,mid);\n    work(mid+1,y);\n    int i=x,q=mid+1,p=x;\n    while(p<=mid||q<=y){\n        if(q>y||(p<=mid && a[p]<=a[q])) t[i++]=a[p++];//\u5982\u679c\u53f3\u8fb9\u7684\u6570\u5217\u5df2\u7ecf\u626b\u5b8c\uff0c\u4e14\u5de6\u8fb9\u7684\u8fd8\u6ca1\u6709\u5b8c\uff0c\u90a3\u4e48\u9700\u8981\u7ee7\u7eed\u626b\u3002\n        else {\n            t[i++]=a[q++];//\u5c06\u8f83\u5c0f\u7684\u653e\u5165\uff0c\u4e4b\u540e\u4e0b\u6807+1\uff1b\n            ans+=mid+1-p;\u524d\u534a\u4e2a\u6570\u5217\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u5168\u90fd\u7d2f\u52a0\uff0c\u5230\u6700\u540e\u5373\u662f\u7b54\u6848\u3002\n        }\n    }\n    for(int i=x;i<=y;i++) a[i]=t[i];\n}\n\nint main(){\n    /*freopen(\"sophist.in\",\"r\",stdin);\n    freopen(\"sophist.out\",\"w\",stdout);*/\n    std::ios::sync_with_stdio(false);\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>a[i];\n    }\n    work(1,n);\n    cout<<ans;\n    return 0;\n}\n```\n\u8981\u5f97\u5230\u4e0d\u4e0b\u964d\u6570\u5217\u5c31\u662f\u5bf9\u5b83\u8fdb\u884c\u6392\u5e8f\uff0c\u7ed3\u5408\u8fd9\u9053\u9898\uff0c\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u5373\u53ef\uff0c\u6548\u7387\u662fO[nlogn]\u3002\n\n\u5206\u6cbb\u505a\u6cd5\u3002\u552f\u4e00\u8981\u6ce8\u610f\u7684\u662f\u4e00\u4e9b\u8fb9\u754c\u7684\u5904\u7406\uff0c\u4ee5\u53ca\u5bf9\u4e8e\u9012\u5f52\u7684\u7406\u89e3\u3002\n",
        "postTime": 1459699666,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "```cpp\n\n#include<iostream>\nusing namespace std;\nint n;\nint ai[610000], s[610000];\nlong long ans;\nvoid merge(int l, int r)\n{\n    int mid=(l+r)/2;\n    if (l==r) return;\n    merge(l, mid);\n    merge(mid+1, r);\n    for (int i=l, p=l, q=mid+1; i<=r; ++i)\n        if ((ai[p]<=ai[q])&&(p<=mid)||(q>r))\n        {\n            s[i]=ai[p++];\n        }\n        else \n        {\n            s[i]=ai[q++];\n            ans+=mid+1-p;\n        }\n    for (int i=l; i<=r; ++i) ai[i]=s[i];\n}\nint main()\n{\n    ios::sync\\_with\\_stdio(0);\n    cin>>n;\n    for (int i=1; i<=n; ++i) cin>>ai[i];\n    merge(1, n);\n    cout<<ans;\n}\n[/code]\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u90bb\u7684\u6570a, b\u3002\u5982\u679c\u6709a<b\u9006\u5e8f\u5bf9\u4f1a\u52a01\uff0c\u5982\u679c\u6709a>b\u9006\u5e8f\u5bf9\u4f1a\u51cf1\uff0c\u5982\u679c\u76f8\u7b49\u9006\u5e8f\u5bf9\u4f1a\u4e0d\u53d8\u3002\u6240\u4ee5\u9898\u76ee\u8981\u6c42\u7684\u662f\u8be5\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u5217\u3002\u5f52\u5e76\u6392\u5e8f\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u8981\u7528longlong\uff0c\u8981\u7528longlong\uff0c\u8981\u7528longlong\uff01\n\u2014\u2014\u91cd\u8981\u7684\u4e8b\u8981\u8bf4\u4e09\u904d\n",
        "postTime": 1448782754,
        "uid": 1923,
        "name": "awdx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    },
    {
        "content": "```delphi\n\n procedure  change(p,i:longint);  \nbegin  \n  while p<=n do  \n   begin  \n     tree[p]:=tree[p]+i;  \n     p:=p+(p and-p);  \n   end;  \nend;  \n  \nfunction getsum(k:longint):longint;  \nbegin  \n  getsum:=0;  \n  while k>0 do  \n     begin  \n       getsum:=getsum+tree[k];  \n       k:=k-k and -k;  \n     end;  \nend;  \nbegin  \nreadln(n);  \n  \nfor  i:=1  to  n do  \nbegin  \nread(a[i]);  \nnum[i]:=i;  \nend;  \n  \nsort(1,n);  \n  \na[0]:=maxlongint;  \nfor  i:=1  to  n do  \nif a[i]=a[i-1] then pos[num[i]]:=pos[num[i-1]]  \nelse pos[num[i]]:=i;  \n  \nfor  i:=1  to n  do  \nbegin  \nchange(pos[i],1);  \nans:=ans+getsum(n)-getsum(pos[i]);  \nend;  \n  \nwriteln(Ans);  \nend.  \n\n```\n\u79bb\u6563\u3001\u53bb\u91cd\u3001\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\n",
        "postTime": 1413780608,
        "uid": 1708,
        "name": "sxyzhml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1774 \u3010\u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\u3011"
    }
]