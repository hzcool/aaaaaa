[
    {
        "content": "`OPEN`\uff0c`CLOSE`\uff0c`RESIZE` \u64cd\u4f5c\u90fd\u662f\u76f4\u63a5\u6a21\u62df\u3002\u4e0b\u9762\u53ea\u8003\u8651 `MOVE`\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5047\u8bbe $d_y=0$\u3002\uff08\u5982\u679c\u662f $d_x=0$ \u53ef\u4ee5\u5c06\u6574\u4e2a\u5750\u6807\u8f74\u7ffb\u8f6c\u53d8\u6210 $d_y=0$\uff09\n\n\u4e00\u79cd\u6bd4\u8f83\u76f4\u63a5\u7684\u60f3\u6cd5\u662f\uff0c\u4ee4 $f_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u77e9\u5f62\u79fb\u52a8\u540e\u7684\u5750\u6807\u3002\u5148\u65e0\u89c6\u8fb9\u754c\u6b63\u7740 $dp$ \u51fa\u6bcf\u4e2a\u77e9\u5f62\u7684\u5750\u6807\u3002\u518d\u6839\u636e\u8fb9\u754c\u5012\u7740 DP \u6c42\u51fa\u6bcf\u4e2a\u77e9\u5f62\u7684\u771f\u5b9e\u79fb\u52a8\u8ddd\u79bb\uff0c\u7136\u540e\u518d\u6b63\u7740\u4e00\u6b21 DP\u3002\n\n\u5177\u4f53\u5730\uff1a\n\n\u6bcf\u6b21\u5411\u53f3\u79fb\u52a8\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u7a97\u53e3 $A,B$\uff0c\u5982\u679c $A$ \u548c $B$ \u5360\u636e\u7684 $y$ \u8f74\u533a\u95f4\u6709\u4ea4\uff0c\u4e14 $A$ \u5728 $B$ \u7684\u5de6\u8fb9\uff0c\u90a3\u4e48 $A$ \u7684\u79fb\u52a8\u5c06\u4f1a\u4f7f $B$ \u4e00\u8d77\u8fd0\u52a8\uff0c\u8003\u8651\u8fde\u4e00\u6761 $A\\to B$ \u7684\u8fb9\u3002\n\n\u4e8e\u662f\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u5f20\u6709\u5411\u56fe $G$\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u8fd9\u5f20\u56fe $G$ \u663e\u7136\u662f\u4e2a DAG\u3002\n\n\u4e8e\u662f\u5148\u5bf9\u6bcf\u4e2a\u7a97\u53e3\u6c42\u51fa $\\lim_i$ \u8868\u793a\u5de6\u7aef\u70b9\u6700\u5927\u80fd\u79fb\u52a8\u591a\u5c11\u3002\n\n\u7136\u540e\u6309\u7167\u62d3\u6251\u9006\u5e8f\uff08\u6a2a\u5750\u6807\u4ece\u5927\u5230\u5c0f\uff09\u8fdb\u884c DP\u3002\n\n\u5047\u8bbe $A$ \u7684\u5bbd\u5ea6\u4e3a $w_A$\uff0c\u5219 $\\lim_A=W-w_A$\uff0c\u5bf9\u4e8e\u6240\u6709 $A$ \u8fde\u5411\u7684\u9876\u70b9 $B$ \u66f4\u65b0 $\\lim_A=\\min(\\lim_A,\\lim_B-w_A)$\u3002\n\n\u800c\u76ee\u6807\u7a97\u53e3 $P$ \u5b9e\u9645\u7684\u79fb\u52a8\u8ddd\u79bb $d'=\\min(d,\\lim_P-x_P)$ \uff08$x_P$ \u4e3a $P$ \u70b9\u5de6\u7aef\u4f4d\u7f6e\uff09\n\n\u786e\u5b9a\u4e86 $d'$ \u4e4b\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u6b63\u7740\u6c42\u51fa\u6bcf\u4e2a\u7a97\u53e3\u7684\u771f\u5b9e\u4f4d\u7f6e\u3002\n\n\u5177\u4f53\u5730\uff1a$x_P=x_P+d'$\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u7684 $A$ \u8fde\u5411\u7684\u9876\u70b9 $B$ \u66f4\u65b0 $x_A=\\max(x_A,x_B+w_B)$\u3002\n\n`Move` \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n^2)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n^3)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define R(i,a,b) for(int i=(a),i##E=(b);i<=i##E;i++)\n#define L(i,a,b) for(int i=(b),i##E=(a);i>=i##E;i--) \nusing namespace std;\nstruct node\n{\n\tint x,y,xx,yy,id;\n\tinline node (int X=0,int Y=0,int XX=0,int YY=0,int I=0):x(X),y(Y),xx(XX),yy(YY),id(I) {}\n\tinline int operator <(const node &A)const\n\t{\n\t\treturn id<A.id;\n\t}\n\tinline int checkin(const node &A)\n\t{\n\t\treturn x<=A.x&&A.x+A.xx<=x+xx&&y<=A.y&&A.y+A.yy<=y+yy;\n\t}\n\tinline int checkint(const node &A)\n\t{\n\t\treturn x<A.x+A.xx&&A.x<x+xx&&y<A.y+A.yy&&A.y<y+yy;\n\t}\n}all,pt[1111];\nint n,tim;\ninline int find_id(int x,int y)\n{\n\tR(i,1,n) if(pt[i].checkin(node(x,y,1,1,0))) return i;\n\treturn -1;\n}\ninline int Open(const node &A)\n{\n\tif(!all.checkin(A)) return 0;\n\tR(i,1,n) if(pt[i].checkint(A)) return 0;\n\tpt[++n]=A;\n\treturn 1;\n}\ninline void Close(int id)\n{\n\tpt[id]=pt[n--];\n}\ninline int Resize(int id,int xx,int yy)\n{\n\tnode t(pt[id].x,pt[id].y,xx,yy,pt[id].id);\n\tif(!all.checkin(t)) return 0;\n\tR(i,1,n) if(i!=id&&pt[i].checkint(t)) return 0;\n\tpt[id]=t;\n\treturn 1;\n}\ninline int ckmin(int &x,const int y)\n{\n\treturn x>y?x=y,1:0;\n}\ninline int ckmax(int &x,const int y)\n{\n\treturn x<y?x=y,1:0;\n}\nvector<int>e[266];\n\ninline void transx()\n{\n\tR(i,1,n) pt[i].x=all.xx-pt[i].x-pt[i].xx;\n}\ninline void transxy()\n{\n\tswap(all.xx,all.yy);\n\tR(i,1,n) swap(pt[i].x,pt[i].y),swap(pt[i].xx,pt[i].yy);\n}\nint dd;\n\ninline void solve(int id,int d)\n{\n\tstatic int in[266],lim[266];\n\tR(i,1,n) e[i].clear(),in[i]=0;\n\tdeque<int>q;\n\tvector<int>v;\n\tR(i,1,n) R(j,1,n) if(pt[i].x<pt[j].x&&pt[i].y<pt[j].y+pt[j].yy&&pt[j].y<pt[i].y+pt[i].yy) e[i].emplace_back(j),++in[j];\n\tR(i,1,n) if(!in[i]) q.emplace_back(i);\n\twhile(q.size())\n\t{\n\t\tint u=q.front();\n\t\tv.emplace_back(u);\n\t\tq.pop_front();\n\t\tfor(int v:e[u]) if(!--in[v]) q.emplace_back(v);\n\t}\n\tL(i,0,n-1) \n\t{\n\t\tint u=v[i];\n\t\tlim[u]=all.xx;\n\t\tfor(int v:e[u]) ckmin(lim[u],lim[v]);\n\t\tlim[u]-=pt[u].xx;\n\t}\n\tdd=min(d,lim[id]-pt[id].x);\n\tpt[id].x+=dd;\n\tfor(int u:v)\n\t\tfor(int v:e[u]) ckmax(pt[v].x,pt[u].x+pt[u].xx);\n}\ninline void Move(int id,int dx,int dy)\n{\n\tif(dx>0) solve(id,dx);\n\tif(dx<0) \n\t{\n\t\ttransx();\n\t\tsolve(id,-dx);\n\t\ttransx();\n\t}\n\tif(dy>0)\n\t{\n\t\ttransxy();\n\t\tsolve(id,dy);\n\t\ttransxy();\n\t}\n\tif(dy<0)\n\t{\n\t\ttransxy();\n\t\ttransx();\n\t\tsolve(id,-dy);\n\t\ttransx();\n\t\ttransxy();\n\t}\n}\ninline void print()\n{\n\tcout<<n<<\" window(s):\\n\";\n\tsort(pt+1,pt+n+1);\n\tR(i,1,n) cout<<pt[i].x<<\" \"<<pt[i].y<<\" \"<<pt[i].xx<<\" \"<<pt[i].yy<<'\\n';\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tcin>>all.xx>>all.yy;\n\tint cnt=0;\n\tstring opt;\t\t\n\tint x,y,xx,yy;\n\twhile(cin>>opt)\n\t{\n\t\t++cnt;\n\t\tif(opt[0]=='O')\n\t\t{\n\t\t\tcin>>x>>y>>xx>>yy;\n\t\t\tif(!Open(node(x,y,xx,yy,++tim)))\n\t\t\t{\n\t\t\t\tcout<<\"Command \"<<cnt<<\": \"<<opt<<\" - \"<<\"window does not fit\"<<'\\n';\n\t\t\t}\n\t\t}\n\t\tif(opt[0]=='C')\n\t\t{\n\t\t\tcin>>x>>y;\n\t\t\tint t=find_id(x,y);\n\t\t\tif(~t) Close(t);\n\t\t\telse \n\t\t\t{\n\t\t\t\tcout<<\"Command \"<<cnt<<\": \"<<opt<<\" - \"<<\"no window at given position\"<<'\\n';\n\t\t\t}\n\t\t}\n\t\tif(opt[0]=='R')\n\t\t{\n\t\t\tcin>>x>>y>>xx>>yy;\n\t\t\tint t=find_id(x,y);\n\t\t\tif(~t) \n\t\t\t{\n\t\t\t\tif(!Resize(t,xx,yy)) \n\t\t\t\t{\n\t\t\t\t\tcout<<\"Command \"<<cnt<<\": \"<<opt<<\" - \"<<\"window does not fit\"<<'\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout<<\"Command \"<<cnt<<\": \"<<opt<<\" - \"<<\"no window at given position\"<<'\\n';\n\t\t\t}\n\t\t}\n\t\tif(opt[0]=='M')\n\t\t{\n\t\t\tcin>>x>>y>>xx>>yy;\n\t\t\tint t=find_id(x,y);\n\t\t\tif(~t)\n\t\t\t{\n\t\t\t\tint d=xx+yy;\n\t\t\t\td=abs(d);\n\t\t\t\tif(d)\n\t\t\t\t{\n\t\t\t\t\tMove(t,xx,yy);\n\t\t\t\t\tif(d!=dd) \n\t\t\t\t\t{\n\t\t\t\t\t\tcout<<\"Command \"<<cnt<<\": \"<<opt<<\" - \"<<\"moved \"<<dd<<\" instead of \"<<d<<'\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout<<\"Command \"<<cnt<<\": \"<<opt<<\" - \"<<\"no window at given position\"<<'\\n';\n\t\t\t}\n\t\t}\n\t}\n\tprint();\n}\n```",
        "postTime": 1639298535,
        "uid": 115779,
        "name": "\u6781\u5bd2\u795e\u51b0",
        "ccfLevel": 0,
        "title": "P6916"
    }
]