[
    {
        "content": "[\u672c\u849f\u84bb\u7684Blog](https://www.chnxuzhiyuan.cn/2019/01/05/%E3%80%8CHNOI2016%E3%80%8D%E6%A0%91-Solution/)\n\n### \u9898\u89e3\n\n\u849f\u84bb\u6211\u5b9a\u775b\u4e00\u770b\uff0c\u4e00\u5171\u6709$10^{10}$\u4e2a\u70b9\uff0c\u7acb\u9a6c\u628a\u849f\u84bb\u6211\u7ed9\u5413\u5230\u4e86QwQ\u3002\u663e\u7136\u8fd9\u662f\u4e00\u9053\u6bd2\u7624\u9898\u3002\u6211\u6df1\u6df1\u5730\u611f\u53d7\u5230\u4e86\u51fa\u9898\u4eba\u7684\u6076\u610f(~~\u7136\u800c\u6211\u8fd8\u662f\u592a\u83dc\u4e86\uff0c\u50cfXHW\u8fd9\u79cddalao\u5c31\u53ef\u4ee5\u60f3\u7740\u8981[\u628a\u51fa\u9898\u4eba\u963f\u6389](https://xcfubuki.cn/2018/HNOI2016-Tree-sol/)\uff0c\u6211\u5374\u4e0d\u884c~~)\u3002\n\n\u65e2\u7136\u6709\u8fd9\u4e48\u591a\u70b9\uff0c\u80af\u5b9a\u662f\u5b58\u4e0d\u4e0b\u7684\u3002\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662fcopy\u4e00\u6574\u9897\u5b50\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u79cd\u53eb\u505a \u771f\u2022\u6811\u5957\u6811 \u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u5462poi\u3002\n\n\u6211\u4eec\u6784\u9020\u5927\u6811\u65f6\uff0c\u4ee4\u6bcf\u4e00\u4e2a\u5927\u8282\u70b9\u90fd\u5bf9\u5e94\u6a21\u677f\u6811\u4e2d\u7684\u4e00\u6574\u68f5\u5b50\u6811\uff0c\u5e76\u5bf9\u65b0\u6811\u91cd\u65b0\u7f16\u53f7\uff0c\u5c31\u50cf\u8fd9\u6837\uff08\u6837\u4f8b\uff09\uff1a\n\n![tree1](https://www.chnxuzhiyuan.cn/images/HNOI2016-Tree-tree1.png)\n\n\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e24\u4e2a\u5927\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u53d8\u6743\u4e3a\u4e24\u4e2a\u5927\u8282\u70b9\u6240\u5305\u542b\u7684\u6811\u7684\u6811\u6839\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u5982\u4e0a\u56fe\u4e2d\u5927\u8282\u70b91\u548c2\u4e4b\u95f4\u7684\u8fb9\u6743\u4e3a2,1\u4e0e3\u4e4b\u95f4\u7684\u8fb9\u6743\u4e3a3\u3002\n\n\u6bcf\u4e00\u4e2a\u5927\u8282\u70b9\u8fd8\u9700\u8981\u5b58\u50a8\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\n- S[],T[]\uff1a\u8be5\u5927\u8282\u70b9\u5305\u542b\u7684\u5c0f\u8282\u70b9\u7684\u7f16\u53f7\u533a\u95f4\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u5982\u4e0a\u56fe\u8282\u70b91\u7684\u7f16\u53f7\u533a\u95f4\u662f[1,5]\uff0c\u8282\u70b92\u662f[6,8]\uff0c\u8282\u70b93\u662f[9,9]\u3002\n- pre[]\uff1a\u8be5\u5927\u8282\u70b9\u5bf9\u5e94\u7684\u662f\u6a21\u677f\u6811\u4e2d\u54ea\u4e00\u4e2a\u8282\u70b9\u7684\u5b50\u6811\uff0c\u5982pre[1]=1\uff0cpre[2]=4\uff0cpre[3]=3\u3002\n- lnk[]\uff1a\u8be5\u5927\u8282\u70b9\u6302\u5728\u5927\u6811\u4e2d\u7684\u54ea\u4e00\u4e2a\u8282\u70b9\u5e95\u4e0b\uff0c\u5982lnk[2]=3\uff0clnk[3]=2\u3002\n\n\u4ee5\u53ca\u5e38\u89c1\u7684\u500d\u589eLCA\u6240\u9700\u7684\u4fe1\u606f\u3002\n\n\u8fd8\u9700\u8981\u5199\u51e0\u4e2a\u51fd\u6570\uff1a\n\n- int GetRoot(long long u);\u7528\u4e8e\u67e5\u627e\u5c0f\u8282\u70b9u\u6240\u5728\u7684\u5927\u8282\u70b9\u3002\u6784\u9020\u597dS[],T[0]\u540e\uff0c\u4e8c\u5206\u5373\u53ef\u5b9e\u73b0\u3002\n- int GetPre(long long u);\u7528\u4e8e\u67e5\u627e\u5c0f\u8282\u70b9u\u5728\u6a21\u677f\u6811\u4e2d\u5bf9\u5e94\u7684\u662f\u54ea\u4e2a\u8282\u70b9\u3002\u5047\u8bbe\u5c0f\u8282\u70b9u\u5728\u5927\u8282\u70b9rt\u91cc\uff0c\u90a3\u4e48\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u8981\u627e\u7684\u5c31\u662frt\u5bf9\u5e94\u7684\u6a21\u677f\u6811\u7684\u5b50\u6811\u4e2d\u8be5\u5b50\u6811\u7f16\u53f7\u7b2c$u-S[rt]+1$\u5c0f\u7684\u8282\u70b9\u3002\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u628a\u6a21\u677f\u6811~~\u4e00\u5df4\u638c\u62cd\u6241~~\u6c42\u4e2aDFS\u5e8f\uff0c\u7136\u540e\u7528\u4e3b\u5e2d\u6811\u89e3\u51b3\uff08[\u4e0d\u4f1a\u4e3b\u5e2d\u6811\u7684\u7ae5\u978b\u6233\u8fd9\u91cc](https://www.chnxuzhiyuan.cn/2019/01/04/%E4%B8%BB%E5%B8%AD%E6%A0%91%EF%BC%88%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91%EF%BC%89/)\uff09\u3002\n- int GetDist(int u,int v);\u7528\u4e8e\u6c42\u6a21\u677f\u6811\u4e0a\u7684\u8282\u70b9u,v\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002LCA\u89e3\u51b3\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u7b54\u6848\u4e86\u3002\n\n\u8ba1\u7b97\u7b54\u6848\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u5728\u5927\u6811\u4e0a\u901a\u8fc7\u500d\u589eLCA\u6c42\u89e3\uff0c\u4f46\u662f\u4e0e\u666e\u901aLCA\u4e0d\u540c\u7684\u662f\uff0c\u4e0d\u80fd\u7eaf\u7cb9\u5730\u5c31\u5728\u5927\u6811\u4e0aLCA\uff0c\u9700\u8981\u6ce8\u610f\u5f88\u591a\u7ec6\u8282\u3002\u6bd4\u5982\u5f53\u518d\u8df3\u4e00\u6b65\u5c31\u8df3\u5230\u6700\u8fd1\u7684\u5927\u8282\u70b9\u516c\u5171\u7956\u5148\u65f6\uff0c\u4e0d\u80fd\u9a6c\u4e0a\u5f80\u4e0a\u8df3\uff0c\u800c\u9700\u8981\u5f80\u4e0a\u8df3\u4e00\u5c0f\u6b65\u540e\u8f6c\u5230\u6a21\u677f\u6811\u4e0a\u53bbLCA\u3002\u56e0\u4e3a\u8ba1\u7b97\u7b54\u6848\u7684\u7ec6\u8282\uff0c\u52b3\u8d44%@#@\uffe5%(~~\u6587\u660e\u9760\u5927\u5bb6~~)\u5730\u4ea4\u4e864\u6b21\u624dAC(~~\u4e0d\u8fc7\u597d\u50cf\u4e5f\u4e0d\u7b97\u591a~~)\u3002\n\n\u8fd9\u6837\u8fd9\u9898\u5c31\u89e3\u5b8c\u4e86\u3002\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u662f\u5927\u7ea6$\\Theta(\u8d85\u5927\u5e38\u6570*n\\log n)$\u5462poi\u3002\n\n### \u603b\u7ed3&\u53cd\u601d\n\n\u8fd9\u662f\u4e00\u9053\u5341\u5206\u6bd2\u7624\u7684\u4ee3\u7801\u9898(\u4f46\u662f\u5728\u67d0\u4e9bdalao\u773c\u91cc\u5c31\u662f\u9001\u5206\u9898)\uff0c\u601d\u7ef4\u96be\u5ea6\u4e00\u822c\uff0c\u4f46\u849f\u84bb\u6211\u524d\u524d\u540e\u540e\u4e00\u5171\u82b1\u4e863\u4e2a\u591a\u5c0f\u65f6\u624dAC(\u542c\u8bf4\u9694\u58c1[XCW](https://xsamsara.tk/)\u4e00\u770b\u9898\u5c31\u79d2\u6389\u4e86)QwQ\u3002\u8fd9\u9053\u9898\u5f88\u597d\u5730\u53cd\u6620\u51fa\u849f\u84bb\u6211\u7684\u4ee3\u7801\u5b9e\u73b0\u80fd\u529b\u8fd8\u662f\u592a\u5dee\uff0c\u53ef\u80fd\u662f\u7531\u4e8e\u505a\u9898\u592a\u5c11\u7684\u7f18\u6545\u3002\u6211\u867d\u7136\u5f88\u83dc\uff0c\u4f46\u662f\u5982\u679cZJOI2019\u771f\u7684\u51fa\u4e86\u50cf\u8fd9\u6837\u7684\u4e00\u9053\u9898(\u6216\u8005\u7c7b\u4f3c\u4e8e\u732a\u56fd\u6740\u4ec0\u4e48\u7684)\uff0c\u7a7a\u6709\u60f3\u6cd5\u5374\u6ca1\u65f6\u95f4\u5199\u4ee3\u7801\u548c\u8c03\u8bd5\uff0c\u90a3\u53ef\u5c31\u4e8f\u5927\u53d1\u4e86QwQ\u3002\n\n### \u4ee3\u7801\n\n\u849f\u84bb\u6211\u4e3a\u4e86\u907f\u514d\u53d8\u91cf\u91cd\u540d\uff0c\u4e8e\u662f\u5f00\u4e86\u4e24\u4e2anamespace\uff08~~\u4e0d\u77e5\u4ee3\u7801\u662f\u66f4\u597d\u770b\u4e86\u8fd8\u662f\u66f4\u4e11\u4e86~~\uff09\u3002\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int maxn=100005,LOG=20;\nint Q;\ninline LL read()\n{\n\tLL ret=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){ret=ret*10+ch-'0';ch=getchar();}\n\treturn ret*f;\n}\nstruct ChairmanTree               //\u5c01\u88c5\u597d\u7684\u4e3b\u5e2d\u6811\n{\n\tint tot,T[maxn];\n\tstruct Node{int L,R,Sum;}Tree[maxn*LOG];\n\tint Build(int L,int R)\n\t{\n\t\tint rt=++tot,mid=L+R>>1;\n\t\tif(L>=R) return rt;\n\t\tTree[rt].L=Build(L,mid);\n\t\tTree[rt].R=Build(mid+1,R);\n\t\tif(rt==1) T[0]=rt;\n\t\treturn rt;\n\t}\n\tint Update(int num,int pre,int L,int R)\n\t{\n\t\tint rt=++tot,mid=L+R>>1;\n\t\tTree[rt].L=Tree[pre].L;Tree[rt].R=Tree[pre].R;Tree[rt].Sum=Tree[pre].Sum+1;\n\t\tif(L>=R) return rt;\n\t\tif(num<=mid) Tree[rt].L=Update(num,Tree[pre].L,L,mid);\n\t\telse Tree[rt].R=Update(num,Tree[pre].R,mid+1,R);\n\t\treturn rt;\n\t}\n\tint Query(int u,int v,int k,int L,int R)\n\t{\n\t\tint mid=L+R>>1,x=Tree[Tree[v].L].Sum-Tree[Tree[u].L].Sum;\n\t\tif(L==R) return mid;\n\t\tif(x>=k) return Query(Tree[u].L,Tree[v].L,k,L,mid);\n\t\telse return Query(Tree[u].R,Tree[v].R,k-x,mid+1,R);\n\t}\n}CT;\nnamespace TemplateTree           //\u6a21\u677f\u6811\n{\n\tint n,father[maxn][LOG],dep[maxn],idx,que[maxn],S[maxn],T[maxn],tot,lnk[maxn],son[maxn*2],nxt[maxn*2];\n\tinline void add_e(int x,int y){tot++;son[tot]=y;nxt[tot]=lnk[x];lnk[x]=tot;}\n\tvoid Build(int now,int fa)   //\u628a\u6811\u4e0a\u7684\u4e00\u4e9b\u4fe1\u606f\u6784\u9020\u597d\n\t{\n\t\tS[now]=++idx;que[idx]=now;father[now][0]=fa;dep[now]=dep[fa]+1;\n\t\tfor(int i=1;i<=16;i++) father[now][i]=father[father[now][i-1]][i-1];\n\t\tfor(int i=lnk[now];i;i=nxt[i])\n\t\t\tif(son[i]!=fa)\n\t\t\t\tBuild(son[i],now);\n\t\tT[now]=idx;\n\t}\n\tinline void BuildCT()      //\u521d\u59cb\u5316\u4e3b\u5e2d\u6811\n\t{\n\t\tCT.Build(1,n);\n\t\tfor(int i=1;i<=n;i++) CT.T[i]=CT.Update(que[i],CT.T[i-1],1,n);\n\t}\n\tinline void Input()       //\u8bfb\u5165\u6570\u636e\n\t{\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tint a=read(),b=read();\n\t\t\tadd_e(a,b);add_e(b,a);\n\t\t}\n\t\tBuild(1,0);BuildCT();\n\t}\n\tint GetDist(int u,int v)    //LCA\u6c42\u4eae\u70b9\u95f4\u8ddd\u79bb\n\t{\n\t\tint ret=0;\n\t\tif(dep[u]<dep[v]) swap(u,v);\n\t\tfor(int i=16;i>=0;i--) if(dep[father[u][i]]>=dep[v]){ret+=(1<<i);u=father[u][i];}\n\t\tfor(int i=16;i>=0;i--) if(father[u][i]!=father[v][i]){ret+=(1<<i+1);u=father[u][i];v=father[v][i];}\n\t\tif(u==v) return ret;\n\t\treturn ret+2;\n\t}\n}\nnamespace BigTree             //\u5927\u6811\n{\n\tint n,m,father[maxn][LOG],dep[maxn],pre[maxn];LL dist[maxn][LOG],S[maxn],T[maxn],lnk[maxn],cnt;\n\tinline int GetRoot(LL u)\n\t{\n\t\tint L=1,R=n,mid;\n\t\twhile(L<=R)\n\t\t{\n\t\t\tmid=L+R>>1;\n\t\t\tS[mid]<=u?L=mid+1:R=mid-1;\n\t\t}\n\t\treturn R;\n\t}\n\tinline int GetPre(LL u)\n\t{\n\t\tint rt=GetRoot(u);\n\t\treturn CT.Query(CT.T[TemplateTree::S[pre[rt]]-1],CT.T[TemplateTree::T[pre[rt]]],u-S[rt]+1,1,TemplateTree::n);\n\t}\n\tinline void Build()        //\u521d\u59cb\u5316\u5927\u6811\n\t{\n\t\tn=1;dep[1]=1;pre[1]=1;S[1]=1;T[1]=TemplateTree::n;cnt=T[1];\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint fr=read();LL to=read();int rt=GetRoot(to);\n\t\t\tn++;dep[n]=dep[rt]+1;lnk[n]=to;pre[n]=fr;S[n]=cnt+1;T[n]=cnt+TemplateTree::T[fr]-TemplateTree::S[fr]+1;cnt=T[n];\n\t\t\tfather[n][0]=rt;dist[n][0]=TemplateTree::dep[GetPre(to)]-TemplateTree::dep[pre[rt]]+1;\n\t\t\tfor(int j=1;j<=16;j++){father[n][j]=father[father[n][j-1]][j-1];dist[n][j]=dist[n][j-1]+dist[father[n][j-1]][j-1];}\n\t\t}\n\t}\n\tinline LL Solve(LL u,LL v)     //\u8ba1\u7b97\u7b54\u6848(\u5199\u7684\u771f\u4e11QwQ)\n\t{\n\t\tLL ret=0;int rtu=GetRoot(u),rtv=GetRoot(v);\n\t\tif(rtu==rtv) return TemplateTree::GetDist(GetPre(u),GetPre(v));\n\t\tif(dep[rtu]<dep[rtv]){swap(u,v);swap(rtu,rtv);}\n\t\tret+=TemplateTree::dep[GetPre(u)]-TemplateTree::dep[pre[rtu]];u=rtu;\n\t\tfor(int i=16;i>=0;i--) if(dep[father[u][i]]>dep[rtv]){ret+=dist[u][i];u=father[u][i];}\n\t\tif(GetRoot(lnk[u])==rtv) return ret+1+TemplateTree::GetDist(GetPre(lnk[u]),GetPre(v));\n\t\tret+=TemplateTree::dep[GetPre(v)]-TemplateTree::dep[pre[rtv]];v=rtv;\n\t\tif(dep[u]>dep[v]){ret+=dist[u][0];u=father[u][0];}\n\t\tfor(int i=16;i>=0;i--) if(father[u][i]!=father[v][i]){ret+=dist[u][i]+dist[v][i];u=father[u][i];v=father[v][i];}\n\t\tu=lnk[u];v=lnk[v];ret+=2;\n\t\treturn ret+TemplateTree::GetDist(GetPre(u),GetPre(v));\n\t}\n}\nint main()                    //\u597d\u7b80\u6d01\u7684\u4e3b\u51fd\u6570\n{\n\tTemplateTree::n=read();BigTree::m=read();Q=read();\n\tTemplateTree::Input();BigTree::Build();\n\twhile(Q--) printf(\"%lld\\n\",BigTree::Solve(read(),read()));\n\treturn 0;\n}\n```\n\n",
        "postTime": 1547469559,
        "uid": 42392,
        "name": "\u5f90\u81f4\u8fdc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3248 \u3010[HNOI2016]\u6811\u3011"
    },
    {
        "content": "woc\u771f\u7684\u96be\u5199\u2026\u2026\u6bd2\u7624\u538b\u884c\u7684\u6211\u5199\u4e86\u5c06\u8fd1120\u884c\u2026\u2026\u2026\n\n\u800c\u4e14\u53ef\u6015\u7684\u662f\u8fd9\u9053\u9898\u5e76\u6ca1\u7528\u5404\u79cd\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u2026\u2026\n\n# \u771f\u00b7\u6811\u5957\u6811\n\n\u8fd9\u9053\u9898\u5e76\u6ca1\u6709\u8ba9\u4f60\u7528\u6811\u5957\u6811\u7684\u505a\u6cd5\u53bb\u505a\n\n\u800c\u662f\u9898\u76ee\u4e2d\u7ed9\u4f60\u7684\u6811\u672c\u6765\u5c31\u662f\u4e00\u68f5\u6811\u5957\u6811\n\n\u5927\u6811\u4e2d\u5176\u5b9e\u662f\u4e00\u68f5\u5957\u7740\u5404\u79cd\u819c\u677f\u6811\u7684\u5b50\u6811\u7684\u6811\n\n\u4e8e\u662f\u5e73\u65f6\u5728\u6811\u4e0a\u8f7b\u800c\u6613\u4e3e\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982lca\u4e4b\u7c7b\u7684\uff0c\u5230\u4e86\u6811\u5957\u6811\u4e0a\u90fd\u4f1a\u6781\u4e3a\u8270\u96be\n\n## \u672c\u9898\u9898\u89e3\n\n\u5148\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u9898\u76ee\u4e2d\u7684\u5927\u6811\u662f\u6811\u5957\u6811\u5427\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u6781\u9650\u70b9\u6570\u662f1e10\u7ea7\u522b\u7684,\u8fd9\u79cd\u4e1c\u897f\u6211\u4eec\u8fde\u628a\u6811\u5efa\u51fa\u6765\u90fd\u4f1aTLE+MLE\n\n\u56e0\u6b64\u6211\u4eec\u80af\u5b9a\u662f\u4e0d\u80fd\u786c\u83bd\u7684\u2026\u2026\u5f53\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u53d8\u5f97\u5341\u5206\u8fa3\u624b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u52a8\u8111\u5b50\u60f3\u4e00\u60f3\uff0c\u662f\u5426\u6709\u4e00\u79cd\u7b49\u4ef7\u7684\u6620\u5c04\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u4fdd\u7559\u8fd9\u4e2a\u53ea\u5927\u6811\u7684\u6240\u6709\u4fe1\u606f\u7684\u540c\u65f6\uff0c\u51cf\u5c11\u4fe1\u606f\u7684\u5b58\u50a8\u91cf\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5927\u6811\u4e2d\u7684\u6240\u6709\u70b9\u90fd\u662f\u7531\u819c\u677f\u6811\u4e2d\u7684\u70b9\u590d\u5236\u51fa\u6765\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5927\u6811\u4e2d\u7684\u672c\u8d28\u4e0d\u540c\u7684\u70b9\u53ea\u6709O(N)\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u8fd9\u4e2a\u70b9\u662f\u7531\u819c\u677f\u6811\u4e2d\u7684\u54ea\u4e00\u4e2a\u70b9\u590d\u5236\u8fc7\u6765\u7684\u6765\u7ed9\u5927\u6811\u4e2d\u7684\u70b9\u518d\u6807\u4e00\u4e2a1~N\u7684\u53f7\uff0c\u8bb0\u4e3asn\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u88ab\u590d\u5236\u65f6\uff0c\u5728\u819c\u677f\u6811\u4e0a\u7684\u7f16\u53f7\u4e3asn\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u4e9b\u5173\u952e\u70b9\uff0c\u662f\u590d\u5236\u65f6\u5b50\u6811\u7684\u6839\uff0c\u4e3a\u6b64\u6211\u4eec\u7ed9\u5927\u6811\u4e2d\u7684\u70b9\u518d\u6807\u4e00\u91cd\u53f7\uff0c\u8bb0\u4e3aroot\uff0c**\u8868\u793a\u8fd9\u4e2a\u70b9\u88ab\u590d\u5236\u65f6\uff0c\u4ed6\u6240\u5728\u7684\u819c\u677f\u6811\u5b50\u6811\u6839\u4e3aroot**\n\n\u6211\u4eec\u6b64\u65f6\u53d1\u73b0root\u76f8\u540c\u7684\u70b9\u4e00\u5b9a\u5728\u5927\u6811\u4e0a\u662f\u76f8\u90bb\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u628aroot\u76f8\u90bb\u7684\u70b9\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u53ea\u7559\u4e0b\u90a3\u4e2asn==root\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u53d1\u751f\u590d\u5236\u65f6\u5b50\u6811\u7684\u6839\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u5728\u7f29\u597d\u70b9\u7684\u6811\u4e0a\u7ef4\u62a4\u6811\u4e0a\u8ddd\u79bb\uff0c\u7531\u4e8e\u6211\u4eec\u5728\u6620\u5c04\u7684\u65f6\u5019\u53ea\u7559\u4e0b\u4e86root\uff0c\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8981\u4fdd\u8bc1\u4e24\u4e2aroot\u5728**\u5927\u6811\u4e0a\u7684\u8ddd\u79bb**\u548c**\u5728\u7f29\u70b9\u4e4b\u540e\u7684\u6811\u4e0a\u8ddd\u79bb\u662f\u4e00\u6837\u7684**\uff0c\u800c\u5bf9\u4e8e\u4e24\u4e2a\u4efb\u610f\u70b9\uff0c\u6211\u4eec\u5f85\u4f1a\u4f1a\u901a\u8fc7\u4e00\u4e9b\u5947\u6280\u6deb\u5de7\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u89c4\u5b9a\uff0c\u4e24\u4e2aroot\u7684\u8fb9\u6743\u5c31\u662f\u5728**\u6267\u884c\u590d\u5236\u64cd\u4f5c**\u65f6\uff0c\u5927\u6811\u4e0ato\u8282\u70b9\u5230\u81ea\u5df1root\u7684\u8ddd\u79bb+1\n\n _(\u5982\u679c\u4f60\u4e0d\u6b7b\u62a0root\u7684\u5b9a\u4e49\u7684\u8bdd\u8fd9\u53e5\u8bdd\u4f60\u5e94\u8be5\u80fd\u61c2\uff0c\u4f46\u662f\u5982\u679c\u4f60\u8981\u786c\u62a0\u7684\u8bdd\uff0c\u8fd9\u91ccroot\u7684\u610f\u601d\u662fto\u8282\u70b9\u5728\u88ab\u590d\u5236\u8fc7\u6765\u65f6\uff0c\u6240\u5728\u7684\u819c\u677f\u6811\u7684\u5b50\u6811\u7684\u6839\u88ab\u590d\u5236\u8fc7\u6765\u4e4b\u540e\u5bf9\u5e94\u7684\u5927\u6811\u8282\u70b9)_\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u4efb\u610f\u4e24\u4e2aroot\u7684\u8fb9\u6743\u662f\u51c6\u7684\uff0c\u540c\u65f6\u6211\u4eec\u518d\u5b9a\u4e49\u4e00\u4e2aatt\\[i]\u8868\u793a\u70b9i\u5728\u5927\u6811\u4e0a\u7684\u771f\u5b9e\u7236\u4eb2\u7684sn\u503c\uff0c\u8fd9\u91cc\u7684i\u8868\u793a\u7f29\u70b9\u4e4b\u540e\u6811\u4e0a\u7684\u7f16\u53f7\u800c\u4e0d\u662f\u539f\u6765\u5927\u6811\u7684\u7f16\u53f7\n\n\u90a3\u4e48\u8fd9\u4e2a\u7f29\u5b8c\u70b9\u4e4b\u540e\u7684\u6811\uff0c\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u7740\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u5927\u6811\u539f\u6765\u7684\u8282\u70b9to\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u5143\u7ec4(sn,bn)\u552f\u4e00\u8868\u793a\u5b83\uff0csn\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u7684sn\uff0c\u800cbn\u4ee3\u8868\u4e86\u5b83\u7684\u6240\u5728\u7684\u5b50\u6811\u7f29\u70b9\u540e\u5728\u6811\u4e0a\u7684\u7f16\u53f7\n\n _\u6709\u70b9\u50cf\u8868\u683c\u7684\u67e5\u627e\u65b9\u5f0f\uff0c\u5148\u786e\u5b9a\u5217\u518d\u786e\u5b9a\u884c_\n \n ### \u5982\u4f55\u6c42\u6811\u4e0a\u8ddd\u79bb\n \n \u518d\u8bf4\u4e00\u904d,\u6570\u636e\u7ed3\u6784\u9898\u6700\u91cd\u8981\u7684\u662f\u8111\u5b50\u6e05\u695a\uff0c\u65f6\u523b\u660e\u767d\u81ea\u5df1\u5728\u5e72\u4ec0\u4e48\uff0c\u4e0d\u7136\u5f88\u5feb\u5c31\u4f1a\u628a\u81ea\u5df1\u7801\u6655\u2026\u2026\n \n\u6211\u4eec\u7684\u601d\u8def\u5927\u6982\u662f\u8fd9\u6837\uff0c\u9996\u5148\u4e24\u4e2a\u8282\u70b9u\uff0cv\u8df3\u5230\u81ea\u5df1\u7684\u7f29\u70b9\u4e4b\u540e\u7684\u6839\u8282\u70b9\uff0c\u4e4b\u540e\u518d\u8df3\u5230\u7f29\u70b9\u6811\u4e0a\u7684lca\uff0c\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u8d70\u7684\u4e0d\u662f\u6700\u77ed\u8def\uff0c\u91cd\u590d\u8d70\u7684\u90e8\u5206\u662f\u4e24\u4e2a\u8282\u70b9\u8df3\u5230lca\u5185\u90e8\u4e4b\u540e\uff0c\u5728lca\u6240\u5bf9\u5e94\u6811\u7684\u91cc\u7684lca\u6df1\u5ea6\u76842\u500d\uff0c\u51cf\u6389\u5373\u53ef~\n\n\u5f53\u7136\u8fd9\u4e48\u8bf4\u80af\u5b9a\u662f\u542c\u4e0d\u61c2\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u4e0a\u56fe\u7247\u5427\n\n![](https://cdn.luogu.com.cn/upload/pic/15806.png)\n\n\u56fe\u4e2d\u4e24\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb=\u84dd\u8272-2\\*\u7ea2\u8272=\u4e00\u90e8\u5206\u84dd\u8272+\u7d2b\u8272+\u9ed1\u8272\n\n### \u9700\u8981\u6ecb\u78c1\u7684\u64cd\u4f5c\n\n\u4e0d\u5f97\u4e0d\u8bf4\u7684\u662f\uff0c\u521a\u624d\u7684\u64cd\u4f5c\u5341\u5206\u7684\u8fa3\u624b\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u7cfb\u5217\u590d\u6742\u7684\u64cd\u4f5c\u624d\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\n\n\u90a3\u4e48\u6211\u4eec\u5148\u4ece\u5efa\u6811\u8bf4\u8d77\u5427~\n\n#### \u5efa\u6811\n\n1.\u8bfb\u5165x,to\n\n2.\u5c06to\u8f6c\u6362\u4e3a(sn,bn)\u7684\u4e8c\u5143\u7ec4\u5f62\u5f0f\n\n3.\u67e5\u627esn\u5230bn.root\u7684\u5728\u819c\u677f\u6811\u4e0a\u8ddd\u79bbval\n\n3.\u65b0\u5efa\u4e00\u4e2a\u7f29\u70b9\u6811\u8282\u70b9newnode\uff0c\u5728newnode\u548cbn\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u6743\u4e3aval+1\u7684\u8fb9\n\n4.newnode\u7684att\u5c5e\u6027\u8bb0\u4e3asn\n\n\u4e0b\u9762\u662f\u67e5\u627e\u8ddd\u79bb~\n\n#### \u67e5\u627e\u8ddd\u79bb\n\n1.\u8bfb\u5165u,v\n\n2.\u5c06u\uff0cv\u8f6c\u6362\u4e3a(sn1,bn1)\uff0c(sn2,bn2)\u7684\u4e8c\u5143\u7ec4\u5f62\u5f0f\n\n3.\u67e5\u627ebn1,bn2\u7684lca p\uff0c\u5e76\u4e14\u8bb0\u5f55j1,j2\u4e24\u4e2a\u70b9\n\nj1,j2\u56e0bn1\uff0cbn2\u5728\u6811\u4e0a\u7684\u5173\u7cfb\u800c\u4e0d\u540c\n\n\u5982\u679cbn1==bn2,\u90a3\u4e48j1=sn1,j2=sn2\n\n\u5982\u679cbn1\u4e0ebn2\u662f\u76f4\u7cfb\u7956\u5148\u5173\u7cfb\uff0c\u4e14bn1\u662f\u7956\u5148\uff0c\u90a3\u4e48j1=sn1\n\n**j2=bn1\u513f\u5b50\u4e2d\u662fbn2\u7956\u5148\u7684\u90a3\u4e2a\u70b9\u7684att\u5c5e\u6027**\n\n\u5176\u4ed6\u60c5\u51b5\n\n**j1=p\u513f\u5b50\u4e2d\u662fbn1\u7956\u5148\u7684\u90a3\u4e2a\u70b9\u7684att\u5c5e\u6027**\n\n**j2=p\u513f\u5b50\u4e2d\u662fbn2\u7956\u5148\u7684\u90a3\u4e2a\u70b9\u7684att\u5c5e\u6027**\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u6bcf\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0cj1,j2\u90fd\u662fu,v\u8df3\u5230\u540c\u4e00\u4e2a\u5c0f\u6811\u4ee5\u540e\u6240\u5728\u7684\u8282\u70b9\uff0c\u800c\u8fd9\u4e2a\u5c0f\u6811\u5728\u7f29\u70b9\u6811\u4e0a\u5bf9\u5e94\u7740\u70b9p\n\n4.\u67e5\u627esn1\u4e0ebn1.root\u7684\u8ddd\u79bb\n\n5.\u67e5\u627esn2\u4e0ebn2.root\u7684\u8ddd\u79bb\n\n6.\u67e5\u627ebn1,bn2\u95f4\u7684\u8ddd\u79bb\n\n7.**\u67e5\u627ej1,j2\u7684lca\u548cp.root\u7684\u8ddd\u79bb**\n\n8.\u5c064,5,6\u6b65\u4e2d\u7684\u8ddd\u79bb\u52a0\u8d77\u6765\u518d\u51cf\u53bb2\u500d\u76847\u6b65\u4e2d\u67e5\u5230\u7684\u8ddd\u79bb\u5c31\u662f\u7b54\u6848\u4e86\n\n## \u5982\u4f55\u5199\u4ee3\u7801\n\n\u989d\uff0c\u4ece\u4e0a\u9762\u7684\u4f2a\u4ee3\u7801\u6765\u8bb2\u6211\u4eec\u7684\u9700\u8981\u5b9e\u73b0\u7684\u64cd\u4f5c\u5341\u5206\u7684\u8fa3\u624b\n\n\u5927\u4f53\u6765\u8bb2\u5206\u4e3a3\u4e2a\n\n1.\u5c06\u5927\u6811\u7684\u7f16\u53f7\u8f6c\u6362\u4e3a\u4e8c\u5143\u7ec4\n\n2.\u7f29\u70b9\u6811\u4e0a\u67e5\u8ddd\u79bb\uff0c\u819c\u677f\u6811\u4e0a\u67e5\u8ddd\u79bb\n\n3.\u67e5\u627ej1,j2\n\n\u90a3\u4e48\u6211\u4eec\u9759\u4e0b\u5fc3\u6765\uff0c\u4e00\u4e2a\u64cd\u4f5c\u4e00\u4e2a\u64cd\u4f5c\u7684\u60f3\u5b9e\u73b0\n\n### \u7f16\u53f7\u8f6c\u6362\n\n\u53d1\u73b0bn\u503c\u76f8\u540c\u7684\u70b9\u7f16\u53f7\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2aa\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2abn\u503c\u6240\u5bf9\u5e94\u7684\u6700\u5927\u5927\u6811\u7f16\u53f7\uff0c\u4e5f\u5c31\u53ea\u662f\u8bb0\u5f55bn\u7684\u533a\u95f4\u53f3\u7aef\u70b9\u7f16\u53f7\n\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7lower_bound\u6c42\u51fa\u8fd9\u4e2a\u7f16\u53f7\u7684bn\u503c\n\n\u901a\u8fc7\u8fd9\u4e2a\u70b9\u548c\u533a\u95f4\u53f3\u7aef\u70b9\u7f16\u53f7\u7684\u5dee\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u6765\u8fd9\u4e2a\u70b9\u5728bn.root\u7684\u5b50\u6811\u4e2d\u7684\u6392\u540d\uff0c\u73b0\u5728\u6211\u4eec\u8981\u6c42sn\uff0c\u4e5f\u5c31\u662f\u6c42\u5b50\u6811\u7b2ck\u5927\n\n\u6b64\u65f6\u6211\u4eec\u901a\u8fc7dfs\u5e8f\u628a\u5b50\u6811\u62cd\u5e73\u4e3a\u4e00\u6bb5\u533a\u95f4\uff0c\u8fd9\u6837\u95ee\u9898\u53d8\u6210\u4e86\u6c42\u9759\u6001\u533a\u95f4\u7b2ck\u5c0f\uff0c\u7ecf\u5178\u7684\u4e3b\u5e2d\u6811\u95ee\u9898\n\n\u597d\u4e86\u6211\u4eec\u7528logN\u7684\u590d\u6742\u5ea6(\u4ee5\u53ca\u5de8\u5927\u7684\u4ee3\u7801\u91cf)\u5b9e\u73b0\u4e86\u6620\u5c04\u64cd\u4f5c~\n\n### \u67e5\u8ddd\u79bb\n\n\u6811\u4e0a\u500d\u589e\u627elca\uff0c\u76f4\u63a5\u7b97\u8ddd\u79bb\uff0c\u540c\u65f6\u6211\u4eec\u53d1\u73b0\u67e5\u70b9\u548c\u76f4\u7cfb\u7956\u5148\u8ddd\u79bb\u7684\u64cd\u4f5c\u7279\u522b\u591a\uff0c\u518d\u989d\u5916\u5b9e\u73b0\u4e00\u4e2aO(1)\u7684\u5feb\u901f\u7b97\u6cd5\uff0c\u4e0d\u4f1a\u51fa\u95e8\u5de6\u8f6cluogu\u677f\u5b50\u533a\n\n### \u67e5\u627ej1,j2\n\n\u554a~\u8fd9\u662f\u4e00\u4e2a\u8fa3\u624b\u7684\u64cd\u4f5c\n\n\u4f46\u662f\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u5927\u529b\u7279\u5224\u6389u==v\u7684\u60c5\u5f62\u3002\n\n\u63a5\u4e0b\u6765\u8fd8\u8bb0\u5f97\u6811\u4e0a\u500d\u589e\u7684\u8fc7\u7a0b\u5417?\u5982\u679cu\u548cv\u4e0d\u662f\u76f4\u7cfb\u7956\u5148\u5173\u7cfb\uff0c\u90a3\u4e48\u5faa\u73af\u7ed3\u675f\u65f6u\uff0cv\u7684\u7236\u4eb2\u624d\u662flca\uff0c\u6b64\u65f6\u7684u,v\u4e00\u5b9a\u662f\u539f\u6765u,v\u7684\u7684\u7956\u5148\uff0c\u540c\u65f6\u4e5f\u662flca\u7684\u513f\u5b50\n\u6240\u4ee5\u76f4\u63a5\u53bbatt\u5c5e\u6027\u5c31\u884c\u4e86\n\n\u4e0b\u9762\u662f\u6700\u8fa3\u624b\u7684\u60c5\u51b5\uff0cu\u548cv\u662f\u76f4\u7cfb\u7956\u5148\u5173\u7cfb\n\n\u6211\u4eec\u5728\u5c06u\uff0cv\u8df3\u5230\u6df1\u5ea6\u76f8\u7b49\u7684\u64cd\u4f5c\u6539\u4e3au\u6bd4v\u7684\u6df1\u5ea6\u4f4e1\uff0c\u7531\u4e8e\u7279\u5224\u6389\u4e86u==v\u6240\u4ee5\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u67e5\u5230\u90a3\u4e2a\u662flca\u513f\u5b50\u53c8\u662fu\u7956\u5148\u7684\u70b9\uff0c\u53d6\u8fd9\u4e2a\u70b9\u7684att\u5c5e\u6027\u5c31\u597d\u4e86\n\n\u597d\u4e86\u6211\u4eec\u7ec8\u4e8e\u505a\u5b8c\u64cd\u4f5c\u4e86\n\n\u5927\u6982\u662f\u5199\u4e00\u4e2a\u819c\u677f\u6811\u7c7b\uff0c\u8fd8\u6709\u4e00\u4e2a\u7f29\u70b9\u6811\u7c7b\uff0c\u8fd8\u6709\u4e00\u4e2a\u4e3b\u5e2d\u6811+lower_bound\u7c7b\u5427\n\n\u5982\u679c\u4e0d\u6ce8\u610f\u5199\u6cd5\u7684\u8bdd\u5e94\u8be5\u4f1a\u5199\u7684\u975e\u5e38\u8270\u96be\u5427~\u4e0d\u61c2\u7684\u770b\u6ce8\u91ca\n\n(\u5982\u679c\u597d\u597d\u5b9e\u73b0\u7684\u8bdd\u5176\u5b9e\u6ca1\u5565\u7ec6\u8282\uff0c\u4f46\u662f\u5982\u679c\u5f00\u59cb\u80e1\u5199\u778e\u5199\u7684\u8bdd\u5c31\u8981\u9760\u5927\u529b\u7279\u5224\u6765AC\u4e86)\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;typedef long long ll;\nconst int N=1e5+10;int n;int m;int q;\nint dfn[N];int nfd[N];int df;int siz[N];int cnt;//\u5f00\u5168\u5c40\u53d8\u91cf\u65b9\u4fbf\u4e3b\u5e2d\u6811\u7c7b\u8bbf\u95ee\nstruct smtree\n{\n\tstruct data{int v;int x;}e[2*N];int al[N];int ct;\n\tinline void add(int u,int v){e[++ct]=(data){v,al[u]};al[u]=ct;}\n\tll d[N];bool book[N];int fa[22][N];//\u500d\u589e\u677f\u5b50\n\tvoid dfs(int x)\n\t{\n\t\tfor(int i=0;fa[i][x];i++){fa[i+1][x]=fa[i][fa[i][x]];}\n\t\tbook[x]=true;siz[x]=1;dfn[++df]=x;nfd[x]=df;\n\t\tfor(int i=al[x],v=e[i].v;i;i=e[i].x,v=e[i].v)\n\t\t{if(!book[v]){fa[0][v]=x;d[v]=d[x]+1;dfs(v);siz[x]+=siz[v];}}\n\t}\n\tinline int lca(int u,int v)//lca\u677f\u5b50\n\t{\n\t\tif(d[u]<d[v]){swap(u,v);}int del=d[u]-d[v];\n\t\tfor(int i=0;del;del>>=1,i++){if(del&1){u=fa[i][u];}}if(u==v){return u;}\n\t\tfor(int i=20;i>=0;i--){if(fa[i][u]!=fa[i][v]){u=fa[i][u];v=fa[i][v];}}\n\t\treturn fa[0][u];\n\t}\n\tinline ll cd(int u,int v)//\u6c42\u7956\u5148\u7684\u8ddd\u79bb\uff0cO(1)\n\t{ll ret=abs(d[u]-d[v]);return ret;}\n\tinline ll cdlca(int u,int v,int r)//\u6c42lca\u548c\u516c\u5171\u6839\u7684\u8ddd\u79bb\n\t{ll ret=d[lca(u,v)]-d[r];return ret;}\n}st;\nstruct per_linetree//\u4e3b\u5e2d\u6811\u7c7b\n{\n\tint s[2][22*N];int val[22*N];int root[N];int cnt;\n\tinline void cson(int p1,int p2,int tp)//\u9759\u6001\u533a\u95f4\u7b2ck\u5927\u677f\u5b50\u6ca1\u5565\u597d\u8bf4\u7684\n\t{s[tp][p2]=++cnt;s[tp^1][p2]=s[tp^1][p1];}\n\tinline void add(int p1,int p2,int l,int r,int pos)\n\t{\n\t\tval[p2]=val[p1]+1;if(r-l==1){return;}int mid=(l+r)/2;\n\t\tif(pos<=mid){cson(p1,p2,0);add(s[0][p1],cnt,l,mid,pos);}\n\t\telse {cson(p1,p2,1);add(s[1][p1],cnt,mid,r,pos);}\n\t}\n\tinline int kth(int p1,int p2,int l,int r,int rk)\n\t{\n\t\tif(r-l==1){return r;}int mid=(r+l)/2;int nv=val[s[0][p2]]-val[s[0][p1]];\n\t\tif(rk<=nv){return kth(s[0][p1],s[0][p2],l,mid,rk);}\n\t\telse {return kth(s[1][p1],s[1][p2],mid,r,rk-nv);}\n\t}\n\tinline int ckth(int l,int r,int rk){return kth(root[l],root[r],0,n,rk);}\n\tinline void build()//\u5bf9dfn\u5efa\u4e3b\u5e2d\u6811\n\t{\n\t\troot[0]=++cnt;for(int i=1;i<=n;i++)\n\t\t{root[i]=++cnt;add(root[i-1],root[i],0,n,dfn[i]);}\n\t}\n\tstruct nod//\u7528\u6765\u5b58bn\u533a\u95f4\u53f3\u7aef\u70b9\u7684\u7ed3\u6784\u4f53\n\t{\n\t\tll v;int root;int bn;\n\t\tfriend bool operator <(nod a,nod b){return a.v<b.v;}\n\t}a[N];int ctt;//\u6709\u5e8f\u6570\u7ec4\n\tinline void dtr(ll x,int& root,int& su,int& bu)//\u8fd9\u91cc\u989d\u5916\u8fd4\u56de\u4e00\u4e2aroot\uff0c\u4ee3\u8868bn.root\n\t{\n\t\tnod p=*(lower_bound(a+1,a+ctt+1,(nod){x,0,0}));//\u5148lower_bound\n\t\troot=p.root;bu=p.bn;int rk=x+siz[root]-p.v;//\u5199\u7684\u662f\u7b2ck\u5c0f\u677f\u5b50\uff0c\u6240\u4ee5\u8f6c\u4e00\u4e0b\u6392\u540d\n\t\tsu=ckth(nfd[root]-1,nfd[root]+siz[root]-1,rk);//\u8ba1\u7b97sn\n\t}\n\tinline void push_nod(int root,int bu)//\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u4fdd\u8bc1\u6570\u7ec4\u7684\u6709\u5e8f\u6027\n\t{a[ctt+1]=(nod){a[ctt].v+siz[root],root,bu};ctt++;}\n}plt;\nstruct bigtree\n{\n\tstruct data{int v;int x;ll val;}e[2*N];int al[N];int ct;\n\tinline void add(int u,int v,ll val){e[++ct]=(data){v,al[u],val};al[u]=ct;}\n\tbool book[N];int fa[22][N];int d[N];ll dis[N];int att[N];\n\tvoid dfs(int x)//\u500d\u589e\u677f\u5b50\u6ca1\u5565\u597d\u8bf4\u7684\n\t{\n\t\tbook[x]=true;for(int i=0;fa[i][x];i++){fa[i+1][x]=fa[i][fa[i][x]];}\n\t\tfor(int i=al[x],v=e[i].v;i;i=e[i].x,v=e[i].v)\n\t\t{if(!book[v]){dis[v]=dis[x]+e[i].val;d[v]=d[x]+1;fa[0][v]=x;dfs(v);}}\n\t}\n\tinline int lca(int u,int v,int& snu,int& snv)//\u9b54\u6539\u540e\u7684lca\uff0c\u53ef\u4ee5\u4f20\u56dej1,j2\n\t{\n\t\tif(u==v){return u;}//\u5927\u529b\u7279\u5224u==v\n\t\tif(d[u]<d[v]){swap(u,v);swap(snu,snv);}\n\t\tint del=d[u]-d[v]-1;//\u8fd9\u91ccu\u8df3\u5230\u548cv\u5dee1\u5c31\u597d\n\t\tfor(int i=0;del>0;del>>=1,i++){if(del&1){u=fa[i][u];}}\n\t\tif(fa[0][u]==v){snu=att[u];return v;}else if(del!=-1){u=fa[0][u];}//\u5982\u679c\u4e0d\u662f\u7956\u5148\u7684\u8bdd\u8fd8\u8981\u8865\u56de\u6765\n\t\tfor(int i=20;i>=0;i--){if(fa[i][u]!=fa[i][v]){u=fa[i][u];v=fa[i][v];}}\n\t\tsnu=att[u];snv=att[v];return fa[0][u];//\u5982\u679c\u4e0d\u662f\u7956\u5148\u7684\u8bdd\u76f4\u63a5\u53d6att\u5c5e\u6027\u5c31\u597d\n\t}\n\tinline ll cd(int u,int v,int p){return dis[u]+dis[v]-2*dis[p];}//\u56e0\u4e3a\u6211\u4eec\u6c42\u4e86lca\u4e86\uff0c\u56e0\u6b64\u76f4\u63a5\u7b97\u5c31\u597d\n}bt;\ninline ll cd(ll u,ll v)//\u6b63\u5f0f\u7684\u8ba1\u7b97\u8ddd\u79bb\u7684\u51fd\u6570\n{\n\tint r1;int sn1;int bn1;int j1;int r2;int sn2;int bn2;int j2;\n\tplt.dtr(u,r1,sn1,bn1);plt.dtr(v,r2,sn2,bn2);j1=sn1;j2=sn2;//\u5f3a\u884c\u8f6c\u4e8c\u5143\u7ec4\n\tint p=bt.lca(bn1,bn2,j1,j2);int r0=plt.a[p].root;//\u8ba1\u7b97j1.j2,p\n\treturn st.cd(r1,sn1)+st.cd(r2,sn2)-2*st.cdlca(j1,j2,r0)+bt.cd(bn1,bn2,p);//\u6309\u516c\u5f0f\u7b97\u5c31\u884c\u4e86\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<n;i++)\n\t{int u;int v;scanf(\"%d%d\",&u,&v);st.add(u,v);st.add(v,u);}\n\tst.dfs(1);plt.build();plt.push_nod(1,++cnt);//\u8bb0\u5f97\u4e00\u5f00\u59cb\u5927\u6811\u662f\u6709\u4e00\u4e2a\u70b9\u7684\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x;ll to;scanf(\"%d%lld\",&x,&to);\n\t\tint root;int sn;int bn;plt.dtr(to,root,sn,bn);//\u5f3a\u884c\u8f6c\u4e8c\u5143\u7ec4\n\t\tplt.push_nod(x,++cnt);bt.att[cnt]=sn;//\u63d2\u70b9\n\t\tint val=st.cd(sn,root)+1;//\u8ba1\u7b97\u8fb9\u6743\n\t\tbt.add(bn,cnt,val);bt.add(cnt,bn,val);//\u8fde\u8fb9\n\t}bt.dfs(1);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tll u;ll v;scanf(\"%lld%lld\",&u,&v);\n\t\tprintf(\"%lld\\n\",cd(u,v));//\u5927\u529b\u8ba1\u7b97\u5c31\u597d\u4e86\n\t}return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n",
        "postTime": 1521376600,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3248 \u3010[HNOI2016]\u6811\u3011"
    },
    {
        "content": "## [\u9898\u610f](https://blog.csdn.net/BeNoble_/article/details/79785925)\n\n\u7ed9\u4f60\u4e00\u9897\u6a21\u677f\u6811,\u4e00\u9897\u5927\u6811\u521d\u59cb\u7b49\u4e8e\u6a21\u677f\u6811\n\n\u5148\u6709\u4e00\u5806\u64cd\u4f5c\u8868\u793a\u628a\u6a21\u677f\u6811\u4e2d\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u590d\u5236\u4e00\u4e0b\u63a5\u5230\u5927\u6811\u7684\u7b2c$y$\u53f7\u8282\u70b9\u4e0a\n\n\u7136\u540e\u8fdb\u884c\u91cd\u65b0\u6807\u53f7,\u65b0\u8282\u70b9\u7684\u7f16\u53f7$=$\u5927\u6811\u539f\u603b\u7ed3\u70b9\u6570$+$**\u8fd9\u4e2a\u8282\u70b9\u5728\u6a21\u677f\u6811\u90a3\u9897\u5b50\u6811\u91cc\u7684\u6392\u540d**\n\n\u7136\u540e\u4e00\u5806\u8be2\u95ee.\u95ee\u5927\u6811\u4e0a\u4e24\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb\n\n---\n\n## \u9898\u89e3\n\n\u4e00\u9053~~\u5341\u5206\u6bd2\u7624\u5e76\u4e14\u4e0d\u597d\u5b9e\u73b0\u7684~~\u4ee3\u7801\u9898\n\n#### \u5efa\u6811\n\n\u6211\u4eec\u628a\u5927\u6811\u4e0a\u7684\u6bcf\u4e00\u6574\u5757\u7f29\u6210\u4e00\u4e2a\u70b9,\u8fd9\u6837\u5927\u6811\u7684\u70b9\u6570\u5c31\u662f\u7ebf\u6027\u7684\u4e86(\u4e0b\u9762\u7684\u56fe\u90fd\u662f\u6837\u4f8b)\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180402092738751?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JlTm9ibGVf/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u4e24\u4e2a\u5757\u6839\u8282\u70b9\u4e4b\u95f4\u7684\u4fe1\u606f,\u7136\u540e\u5176\u4ed6\u7684\u4fe1\u606f\u53ef\u4ee5\u5728\u539f\u6811\u4e2d\u5f97\u5230\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u95ee\u9898,\u5c31\u662f\u5982\u4f55\u628a\u5927\u6811\u4e2d\u7684\u70b9\u7684\u7f16\u53f7\u8f6c\u5316\u6210\u539f\u6811\u4e2d\u7684\u70b9\u7684\u7f16\u53f7\n\n\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u53ea\u8981\u8bb0\u5f55\u4e00\u4e0b\u6240\u6709\u5757\u7684\u8d77\u59cb\u7f16\u53f7,\u8bb0\u4e3a\u6570\u7ec4$begin$\n\n\u56e0\u4e3a$begin$\u662f\u9012\u589e\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6c42\u51fa\u8fd9\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u5757\u4e86\n\n\u6211\u4eec\u7528\u5927\u6811\u4e2d\u8fd9\u4e2a\u70b9\u7684\u6807\u53f7$-$\u8fd9\u4e2a\u5757\u8d77\u59cb\u7684\u7f16\u53f7$+1$\u5c31\u662f\u8fd9\u4e2a\u70b9\u5728\u539f\u5b50\u6811\u4e2d\u7684\u6392\u540d\u4e86\n\n>$e.g.$\u6837\u4f8b$begin$\u6570\u7ec4\u662f$1\\ 6\\ 9$\n\n>\u5047\u8bbe\u8be2\u95ee$7$,\u4e8c\u5206\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u70b9\u5c5e\u4e8e$1$\u53f7\u5757\n\n>\u8fd9\u4e2a\u70b9\u7684\u6392\u540d\u5c31\u662f$7-begin_1+1=2$\n\n>\u5728\u539f\u6811\u4e2d\u4ee5$4$\u4e3a\u6839\u7684\u5b50\u6811\u6392\u540d\u4e3a$2$\u7684\u70b9\u5c31\u662f$4$\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u7528\u4e3b\u5e2d\u6811\u6765\u5b9e\u73b0\u6c42\u6811\u4e0a\u7b2c$k$\u5927\u4e86(\u7a9d\u662f\u6309\u7167\u4e8c\u8fdb\u5236\u4f4d\u6765\u5199\u7684)\n\n\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u7ef4\u62a4\u4e24\u4e2a\u5757\u6839\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n\n\u5c31\u662f$dep[y$\u5728\u539f\u6811\u4e2d\u6240\u4ee3\u8868\u7684\u70b9$]-dep[y$\u6240\u5c5e\u7684\u5757\u7684\u6839\u8282\u70b9\u5728\u539f\u6811\u4e2d\u4ee3\u8868\u7684\u70b9$]+1$\n\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180402095542252?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JlTm9ibGVf/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u8bb0\u5f55\u4e00\u4e2a\u4e1c\u897f,$from$\u8868\u793a$y$\u5728\u539f\u6811\u4e2d\u6240\u4ee3\u8868\u7684\u70b9\n\n\u7136\u540e\u6211\u4eec\u5728\u5bf9\u8fd9\u68f5\u7f29\u70b9\u540e\u7684\u6811$dfs$\u9884\u5904\u7406\u957f\u5ea6\u4fe1\u606f\n\n#### \u8003\u8651\u8be2\u95ee\u600e\u4e48\u529e$?$\n\n\u5047\u8bbe\u8be2\u95ee$dis(x,y),$\u8bbe$belong(x)=u,belong(y)=v,w=lca(u,v)$\n\n$1.$\u5982\u679c\u8be2\u95ee\u7684\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u4e2a\u5757\u91cc,\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u5728\u539f\u6811\u4e2d\u67e5\u8be2\u4e86\n\n$2.$\u5982\u679c\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u5757\u91cc,\u4e3b\u8981\u7684\u60f3\u6cd5\u5c31\u662f\u628a\u4ed6\u4eec\u90fd\u8df3\u5230$w$\u5757\u91cc,\u7136\u540e\u518d\u5728\u539f\u6811\u4e0a\u67e5\u8be2\n\n\u53ea\u8003\u8651\u5176\u4e2d\u4e00\u4e2a\u70b9$x$,\u53e6\u4e00\u4e2a\u70b9\u7c7b\u4f3c\n\n\u2460:$u=w,$\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u4ee4$u=id(x)$,\u7136\u540e\u8fd4\u56de\u4e86\n\n\u2461:$u\\neq w,$\u6211\u4eec\u627e\u5230$w\\to u$\u4e2d\u7684\u7b2c\u4e00\u4e2a\u70b9$z$,\u6211\u4eec\u5904\u7406$x\\to u\\to z\\to from_z$\u7684\u8ddd\u79bb,\u7136\u540e\u4ee4$u=from_z$\u5373\u53ef\n\n>$x\\to u$\u7684\u8ddd\u79bb\u5c31\u662f\u539f\u6811\u4e2d$dis(id(x),root[u])$\n\n>$u\\to z$\u7684\u8ddd\u79bb\u662f\u5efa\u6811\u65f6$dfs$\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\u7684\n\n>$z\\to from_z$\u7684\u8ddd\u79bb\u5c31\u662f$1$\n\n\u7ed9\u51e0\u5f20\u56fe\u7406\u89e3\u4e00\u4e0b\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180402104218828?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JlTm9ibGVf/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180402104210992?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JlTm9ibGVf/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180402104451499?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0JlTm9ibGVf/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u5bf9\u4e8e$y$\u505a\u540c\u6837\u7684\u5904\u7406,\u6700\u540e$ans+=$\u539f\u6811\u4e2d$dis(u,v)$\u5c31\u53ef\u4ee5\u4e86\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=1e5+5,M=2e5+5;\ntypedef int arr[N];\ntypedef long long ll;\nstruct eg{int nx,to;};\nstruct Pt{int sz;Pt*ch[2];};\nint n,m,q;\nstruct Real{\n    int dft,H;arr fi,fa,sz,son,top,dep,lef,rig;\n    Pt tr[N*20],*pt,*T[N];eg e[M];\n    inline Pt*ins(Pt*B,const int x){\n        Pt*A=++pt,*tp=A;int d;\n        fd(i,H,0){d=(x>>i)&1;\n            A->sz=B->sz+1;\n            A->ch[!d]=B->ch[!d];\n            A=A->ch[d]=++pt;B=B->ch[d];\n        }A->sz=B->sz+1;\n        return tp;\n    }\n    void dfs(int u){\n        dep[u]=dep[fa[u]]+(sz[u]=1);\n        go(u)if(v^fa[u]){\n            fa[v]=u;dfs(v);sz[u]+=sz[v];\n            if(sz[v]>sz[son[u]])son[u]=v;\n        }\n    }\n    void dfs(int u,int t){\n        lef[u]=++dft;T[dft]=ins(T[dft-1],u);\n        top[u]=t;if(son[u])dfs(son[u],t);\n        go(u)if(v^fa[u]&&v^son[u])dfs(v,v);rig[u]=dft;\n    }\n    inline int lca(int u,int v){\n        for(;top[u]^top[v];dep[top[u]]>dep[top[v]]?u=fa[top[u]]:v=fa[top[v]]);\n        return dep[u]<dep[v]?u:v;\n    }\n    inline int dis(int u,int v){return dep[u]+dep[v]-(dep[lca(u,v)]<<1);}\n    inline void add(int u,int v){static int ce=0;e[++ce]={fi[u],v},fi[u]=ce;}\n    inline void init(){\n        int u,v;H=log2(n)+1;pt=tr;\n        *(T[0]=tr)=(Pt){0,tr,tr};\n        fp(i,2,n)sd(u),sd(v),add(u,v),add(v,u);\n        dfs(1),dfs(1,1);\n    }\n    inline int qry(int u,int k){\n        Pt*A=T[lef[u]-1],*B=T[rig[u]];int sp,tp=0;\n        fd(i,H,0){\n            sp=B->ch[0]->sz-A->ch[0]->sz;\n            if(k<=sp)A=A->ch[0],B=B->ch[0];\n            else k-=sp,tp|=1<<i,A=A->ch[1],B=B->ch[1];\n        }return tp;\n    }\n}t1;\nstruct Vitual{\n    eg e[N];int A;arr fi,fa,rt,sz,dep,son,top,from;ll len[N],bg[N];\n    void dfs(int u){\n        dep[u]=dep[fa[u]]+(sz[u]=1);\n        go(u){\n            dfs(v);sz[u]+=sz[v];\n            if(sz[v]>sz[son[u]])son[u]=v;\n        }\n    }\n    void dfs(int u,int t){\n        top[u]=t;if(son[u])dfs(son[u],t);\n        go(u)if(v^son[u])dfs(v,v);\n    }\n    inline int lca(int u,int v){\n        for(;top[u]^top[v];dep[top[u]]>dep[top[v]]?u=fa[top[u]]:v=fa[top[v]]);\n        return dep[u]<dep[v]?u:v;\n    }\n    inline int Go(int u,int f){\n        while(top[u]^top[f]){u=top[u];if(fa[u]==f)return u;u=fa[u];}\n        return son[f];\n    }\n    inline void add(int u,int v,int w){static int ce=0;e[++ce]={fi[u],v},fi[u]=ce;len[v]=len[u]+w;}\n    inline int bl(ll x){return upper_bound(bg,bg+A+1,x)-bg-1;}\n    inline int RealId(ll x){\n        if(x<bg[1])return x;\n        int b=bl(x),k=x-bg[b]+1;\n        if(rt[b]==1)return k;\n        return t1.qry(rt[b],k);\n    }\n    inline void sol(){\n        ll Cnt=n,y;bg[0]=rt[0]=1;\n        fp(i,1,m){\n            A=i;sd(rt[i]),sd(y);\n            bg[i]=Cnt+1;Cnt+=t1.sz[rt[i]];\n            from[i]=RealId(y);fa[i]=bl(y);\n            add(fa[i],i,t1.dep[from[i]]-t1.dep[rt[fa[i]]]+1);\n        }dfs(0),dfs(0,0);\n        ll x,ans=0;int u,v,w;\n        while(q--){\n            sd(x),sd(y);u=bl(x),v=bl(y);\n            if(u==v){we(t1.dis(RealId(x),RealId(y)));continue;}\n            w=lca(u,v);ans=0;\n            if(u^w){\n                int _=Go(u,w);\n                ans+=len[u]-len[_]+1+t1.dep[RealId(x)]-t1.dep[rt[u]];\n                u=from[_];\n            }else u=RealId(x);\n            if(v^w){\n                int _=Go(v,w);\n                ans+=len[v]-len[_]+1+t1.dep[RealId(y)]-t1.dep[rt[v]];\n                v=from[_];\n            }else v=RealId(y);\n            ans+=t1.dis(u,v);\n            we(ans);\n        }\n    }\n}t2;\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    sd(n),sd(m),sd(q);\n    t1.init();t2.sol();\nreturn Ot(),0;\n}\n```",
        "postTime": 1522637180,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3248 \u3010[HNOI2016]\u6811\u3011"
    },
    {
        "content": "# \u9898\u76ee  \n&emsp;&emsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P3248)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&emsp;&emsp;\u4e00\u4e2a\u771f\u6b63\u7684**\u6811\u5957\u6811**\u7684\u9898\u76ee\u3002  \n&emsp;&emsp;\u5927\u4f53\u601d\u8def\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u628a\u4ece\u6a21\u677f\u6811\u4e0a\u9762\u590d\u5236\u4e0b\u6765\u7684\u5b50\u6811\u7528\u4e00\u4e2a\u70b9\u6765\u4ee3\u8868\uff0c\u518d\u63d2\u5165\u5230\u5927\u6811\u91cc\u9762\u3002\u63a5\u7740\u5c31\u201c\u6b63\u5e38\u201d\u5730\u7ef4\u62a4\u4e00\u4e0b\u500d\u589e\u548c\u6df1\u5ea6\uff0c\u67e5\u8be2\u4e5f\u8ddf\u201c\u6b63\u5e38\u201d\u7684\u4e00\u6837\uff0c\u5148\u67e5 LCA \uff0c\u518d\u7528\u6df1\u5ea6\u505a\u5dee\u3002\u8fd9\u79cd\u601d\u8def......\u5f62\u8c61\u5730\u79f0\u4e3a\u6811\u5957\u6811\u3002    \n&emsp;&emsp;~~\u4ec0\u4e48\uff0c\u4f60\u8bf4\u8fd9\u662f\u6c34\u9898\uff1f\u5f00\u4ec0\u4e48\u73a9\u7b11\uff0c\u6211\u53ef\u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348......~~  \n&emsp;&emsp;\u5177\u4f53\u6765\u8bf4\uff0c\u672c\u4f53\u6709~~\u4ebf~~\u4e9b\u7ec6\u8282\uff1a  \n### LCA \u7684\u67e5\u8be2\n&emsp;&emsp;\u67e5\u8be2\uff0c\u6211\u4eec\u5148\u627e\u5230\u4e24\u4e2a\u70b9\u4f1a\u5728\u5927\u6811\u4e0a\u54ea\u4e2a\u70b9\u76f8\u9047\uff0c\u7136\u540e\u518d\u628a\u5927\u6811\u4e0a\u7684\u70b9\u63d0\u51fa\u6765\uff0c\u8fd8\u539f\u6210\u5c0f\u6811\u4e0a\u7684\u5f62\u6001\uff0c\u518d\u8fdb\u884c\u4e00\u6b21 LCA \uff0c\u518d\u628a\u8fd9\u4e2a LCA \u8fd8\u539f\u5230\u5927\u6811\u7684\u7f16\u53f7\u4e0a\u3002  \n&emsp;&emsp;1.\u5927\u6811\u4e0a\u7684 LCA \uff1a\u76f4\u63a5\u5bf9\u70b9\u7ef4\u62a4\u500d\u589e\u3002\u6ce8\u610f\uff0c\u7531\u4e8e\u6211\u4eec\u4f1a\u628a\u5f62\u6001\u8fd8\u539f\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c**\u539f\u6765\u4e24\u4e2a\u70b9\u5177\u4f53\u4f1a\u8df3\u5230\u6811\u4e0a\u54ea\u4e24\u4e2a\u70b9**\uff1b\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u5927\u6811\u4e0a\u7684\u70b9\u7684**\u771f\u5b9e\u7236\u4eb2**\u5f97\u5230\u3002  \n&emsp;&emsp;2.\u8fd8\u539f\u6210\u5c0f\u6811\uff1a\u6211\u4eec\u9700\u8981\u77e5\u9053\u5927\u6811\u4e0a\u7684\u7f16\u53f7\u5177\u4f53\u5bf9\u5e94\u5c0f\u6811\u4e0a\u7684\u54ea\u4e9b\u70b9\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u201c\u865a\u70b9\u201d\u8bb0\u5f55\u5b83\u6240\u7ba1\u8f96\u7684\u7f16\u53f7\u533a\u95f4\u3002\u56e0\u6b64\u5927\u6811\u4e0a\u7684\u70b9\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u627e\u5230\u81ea\u5df1\u6240\u5c5e\u7684\u201c\u865a\u70b9\u201d\uff0c\u5e76\u4e14\u77e5\u9053\u81ea\u5df1\u5728\u5927\u6811\u4e2d\u7684**\u5927\u5c0f\u6392\u540d**\u3002\u63a5\u7740\u6211\u4eec\u9700\u8981\u5c06\u5b83\u548c\u5c0f\u6811\u4e0a\u7684\u70b9\u5bf9\u5e94\u8d77\u6765\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u628a\u6392\u540d\u4e22\u5230**\u4e3b\u5e2d\u6811**\u91cc\u9762\u67e5\u7b2c K \u5927\u5b9e\u73b0\u3002  \n&emsp;&emsp;3.\u5c0f\u6811\u4e0a\u7684 LCA \uff1a\u540c\u4e0a\uff0c\u5b83\u53ef\u4ee5\u548c\u5927\u6811\u5171\u7528\u4e00\u4e2a\u500d\u589e\u6570\u7ec4\u3002  \n&emsp;&emsp;4.\u8fd8\u539f\u5230\u5927\u6811\uff1a\u540c\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u5b83\u5728\u5b50\u6811\u4e2d\u7684**\u5927\u5c0f\u6392\u540d**\uff0c\u8fd9\u53ef\u4ee5\u7ee7\u7eed\u5230\u4e3b\u5e2d\u6811\u91cc\u9762\u67e5\u8be2\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8f6c\u5230\u5927\u6811\u4e0a\u6765\u3002  \n### \u6df1\u5ea6\u7684\u67e5\u8be2  \n&emsp;&emsp;1.\u5927\u6811\u4e0a\u7684\u201c\u865a\u70b9\u201d\u6df1\u5ea6\uff1a\u76f4\u63a5\u52a8\u6001\u7ef4\u62a4\u3002  \n&emsp;&emsp;2.\u5927\u6811\u4e0a\u7684\u771f\u5b9e\u6df1\u5ea6\uff1a\u6211\u4eec\u5bf9\u6bcf\u4e2a\u201c\u865a\u70b9\u201d\uff0c\u7ef4\u62a4**\u5b83\u7684\u201c\u5047\u6839\u201d\u5230\u6811\u6839\u7684\u6df1\u5ea6**\u3002\u8fd9\u4e2a\u53ef\u4ee5\u5728\u63d2\u5165\u7684\u65f6\u5019\uff0c\u5c06\u7236\u4eb2\u6240\u5728\u7684\u201c\u865a\u70b9\u201d\u7684\u6df1\u5ea6\u67e5\u51fa\u6765\uff0c\u518d\u52a0\u4e0a\u7236\u4eb2\u5230\u7236\u4eb2\u7684\u201c\u5047\u6839\u201d\u7684\u771f\u5b9e\u6df1\u5ea6\uff0c\u8ba1\u7b97\u5f97\u51fa\u3002\u67e5\u8be2\u5c31\u67e5\u6240\u5728\u201c\u865a\u70b9\u201d\u7684\u771f\u5b9e\u6df1\u5ea6\u52a0\u4e0a\u5230\u201c\u5047\u6839\u201d\u7684\u6df1\u5ea6\u7684\u548c\u3002    \n  \n&emsp;&emsp;\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4e5f\u5c31\u90a3\u4e48$O(\\text{\u201cU(@*@(E(!):+?|\u201d\u7684\u5de8\u5927\u5e38\u6570} \\times n\\log_2n)$\u5427\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n\ntypedef long long LL;\n\nconst int MAXN = 2e5 + 5, MAXLOG = 20, MAXS = MAXN * MAXLOG;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0;char s = getchar();int f = 1;\n\twhile( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n\twhile( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n\tif( 9 < x ){ write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T ABS( const _T a )\n{\n\treturn a < 0 ? -a : a;\n}\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXN << 1];\n\nLL fa[MAXN], dep[MAXN], rdep[MAXN], nsiz[MAXN];\nint s[MAXS], lch[MAXS], rch[MAXS];\nint f[MAXN][MAXLOG], rot[MAXN];\nint head[MAXN], tsiz[MAXN], DFN[MAXN], seq[MAXN], ref[MAXN];\nLL N, M, Q, tot, siz, ID, lg2, cnt;\n\nvoid upt( const int u ) { s[u] = s[lch[u]] + s[rch[u]]; }\nvoid copy( int a, int b ) { s[a] = s[b], lch[a] = lch[b], rch[a] = rch[b]; }\n\nint update( const int u, const int l, const int r, const int pos )\n{\n\tint cur = ++ siz, mid = l + r >> 1; copy( cur, u );\n\tif( l == r ) { s[cur] ++; return cur; }\n\tif( pos <= mid ) lch[cur] = update( lch[u], l, mid, pos );\n\telse rch[cur] = update( rch[u], mid + 1, r, pos );\n\tupt( cur );\n\treturn cur;\n}\n\nint query( const int u, const int l, const int r, const int segL, const int segR )\n{\n\tif( ! u ) return 0;\n\tif( segL <= l && r <= segR ) return s[u];\n\tint mid = l + r >> 1, ret = 0;\n\tif( segL <= mid ) ret += query( lch[u], l, mid, segL, segR );\n\tif( segR > mid ) ret += query( rch[u], mid + 1, r, segL, segR );\n\treturn ret;\n}\n\nint Kth( const int u, const int v, const int l, const int r, const int rnk )\n{\n\tif( l == r ) return l;\n\tint mid = l + r >> 1, num = s[lch[v]] - s[lch[u]];\n\tif( rnk <= num ) return Kth( lch[u], lch[v], l, mid, rnk );\n\treturn Kth( rch[u], rch[v], mid + 1, r, rnk - num );\n}\n\nvoid addEdge( const int from, const int to )\n{\n\tGraph[++ cnt].to = to, Graph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nvoid maintain( const int u )\n{\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t\tf[u][j] = f[f[u][j - 1]][j - 1];\n}\n\nvoid DFS( const int u, const int fath )\n{\n\tnsiz[u] = ref[u] = u;\n\tDFN[u] = ++ ID, seq[ID] = u;\n\tfa[u] = f[u][0] = fath, maintain( u );\n\trdep[u] = dep[u] = dep[fath] + 1, tsiz[u] = 1;\n\tfor( int i = head[u], v ; i ; i = Graph[i].nxt )\n\t\tif( ( v = Graph[i].to ) ^ fath )\n\t\t\tDFS( v, u ), tsiz[u] += tsiz[v];\n}\n\nint bel( const LL id )\n{\n\tint l = 1, r = tot, mid;\n\twhile( r - l > 1 )\n\t{\n\t\tif( id <= nsiz[mid = l + r >> 1] ) r = mid;\n\t\telse l = mid + 1;\n\t}\n\tif( id <= nsiz[l] ) return l;\n\treturn r;\n}\n\nvoid balance( LL &u, const int step )\n{\n\tfor( int i = 0 ; ( 1 << i ) <= step ; i ++ )\n\t\tif( step & ( 1 << i ) )\n\t\t\tu = f[u][i];\n}\n\nLL getRef( const LL u )\n{\n\tif( u <= N ) return u;\n\tLL com = bel( u ), fr = ref[com];\n\treturn Kth( rot[DFN[fr] - 1], rot[DFN[fr] + tsiz[fr] - 1], 1, N, u - nsiz[com - 1] );\n}\n\nLL getDep( const LL u )\n{\n\tLL com = bel( u ), tru = getRef( u );\n\treturn rdep[com] + rdep[tru] - rdep[ref[com]];\n}\n\nLL LCA( LL u, LL v )\n{\n\tif( dep[u] > dep[v] ) balance( u, dep[u] - dep[v] );\n\tif( dep[v] > dep[u] ) balance( v, dep[v] - dep[u] );\n\tif( u == v ) return u;\n\tfor( int i = lg2 ; ~ i ; i -- ) if( f[u][i] ^ f[v][i] ) u = f[u][i], v = f[v][i];\n\treturn f[u][0];\n}\n\nLL getDist( LL from, LL to )\n{\n\tLL u = bel( from ), v = bel( to ), ff, tt;\n\tif( u == v ) ff = from, tt = to;\n\telse\n\t{\n\t\tif( dep[u] > dep[v] ) balance( u, dep[u] - dep[v] );\n\t\tif( dep[v] > dep[u] ) balance( v, dep[v] - dep[u] );\n\t\tif( u == v ) \n\t\t{\n\t\t\tu = bel( from ), v = bel( to );\n\t\t\tif( dep[u] > dep[v] ) balance( u, dep[u] - dep[v] - 1 ), ff = fa[u], tt = to;\n\t\t\tif( dep[v] > dep[u] ) balance( v, dep[v] - dep[u] - 1 ), ff = from, tt = fa[v];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tfor( int i = lg2 ; ~ i ; i -- ) if( f[u][i] ^ f[v][i] ) u = f[u][i], v = f[v][i];\n\t\t\tff = fa[u], tt = fa[v];\n\t\t}\n\t}\n\tLL lca = LCA( getRef( ff ), getRef( tt ) ), in = bel( ff );\n\tlca = in <= N ? lca : \n\t\t  query( rot[DFN[ref[in]] + tsiz[ref[in]] - 1], 1, N, 1, lca ) \n\t\t- query( rot[DFN[ref[in]] - 1], 1, N, 1, lca ) \n\t\t+ nsiz[in - 1];\n\treturn getDep( from ) + getDep( to ) - 2 * getDep( lca );\n}\n\nsigned main()\n{\n\tread( N ), read( M ), read( Q );\n\tfor( int i = 1, a, b ; i < N ; i ++ ) read( a ), read( b ), addEdge( a, b ), addEdge( b, a );\n\tlg2 = log2( N ), DFS( 1, 0 ), tot = N;\n\tfor( int i = 1 ; i <= N ; i ++ ) rot[i] = update( rot[i - 1], 1, N, seq[i] );\n\tLL fr, to, a, b;\n\tfor( int i = 1 ; i <= M ; i ++ )\n\t{\n\t\tread( fr ), read( to );\n\t\tref[++ tot] = fr, fa[tot] = to;\n\t\tnsiz[tot] = nsiz[tot - 1] + tsiz[fr];\n\t\tint com = bel( to );\n\t\trdep[tot] = rdep[com] + rdep[getRef( to )] - rdep[ref[com]] + 1;\n\t\tdep[tot] = dep[com] + 1;\n\t\tf[tot][0] = com, maintain( tot );\n\t}\n\tfor( int i = 1 ; i <= Q ; i ++ )\n\t{\n\t\tread( a ), read( b );\n\t\twrite( getDist( a, b ) ), putchar( '\\n' );\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1591011235,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[HNOI2016]\u6811"
    },
    {
        "content": "\u5176\u4ed6\u7684\u9898\u89e3\u5199\u5f97\u5f88\u8be6\u7ec6\u4e86\u6211\u5c31\u5199\u4e0b\u6211\u7684\u5b9e\u73b0\u65b9\u6cd5\u5427\uff0c\u611f\u89c9\u597d\u50cf\u597d\u5199\u4e0d\u5c11qwq\n\u672c\u8d28\u4e0a\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0\u4e24\u4e2a\u64cd\u4f5c\n\n1.lca\n\n2.\u6df1\u5ea6\n\n\u6211\u5e73\u5e38\u6c42lca\u90fd\u662f\u8fd9\u6837\u7684\n\n```\nint lca(int u, int v) {\n\tif (dep[u] < dep[v]) swap(u, v);\n\tdec(k, K - 1, 0) if (dep[prt[u][k]] >= dep[v]) u = prt[u][k];\n\tif (u == v) return u;\n\tdec(k, K - 1, 0) if (prt[u][k] != prt[v][k]) \n\t\tu = prt[u][k], v = prt[v][k];\n\treturn prt[u][0];\n}\n```\n\u4f46\u662f\u5728\u8fd9\u9897\u6bd2\u7624\u6811\u4e0a\u5e76\u4e0d\u597d\u505a\uff0c\u6240\u4ee5\u6211\u4eec\u9000\u800c\u6c42\u5176\u6b21\uff0c\u53ea\u6c42\u51fa\u7f29\u70b9\u540e\u7684\u6811\u4e0a\u7684lca\n\n\u7136\u540e\u518d\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u627e\u5230lca\u7684\u63a5\u5165\u70b9\n```\nint get_to(int v, int x) {\n\tint b = belong(v);\n\tif (b == x) return v;\n\tdec(k, K - 1, 0) if (lev[pr[b][k]] > lev[x]) {\n\t\tb = pr[b][k];\n\t}\n\treturn ori[b];\n}\n```\nlev\u5c31\u662fdepth\u6570\u7ec4\n\n\u7136\u540e\u5229\u7528\u8fd9\u79cd\u66b4\u529b\u4ece2^k->2^0\u679a\u4e3e\u7684\u601d\u8def\u5c31\u80fd\u964d\u4f4e\u4e0d\u5c11\u590d\u6742\u5ea6qwq\n\n2.\u6df1\u5ea6\n\u9700\u8981\u627e\u5230\u8fd9\u4e2a\u70b9\u5c5e\u4e8e\u7f29\u6389\u7684\u54ea\u4e2a\u70b9\n```\nint depth(int v) {\n\tint b = belong(v);\n\tint o = tr[b];\n\tint z = kth(o, v - arr[b] + 1);\n\treturn dp[b] + dep[z] - dep[o];\n}\n```\n\u61d2\u5f97\u5f00\u4e24\u9897\u6811\u4e86\u7136\u540e\u53d8\u91cf\u540d\u5c31\u6709\u70b9\u6bd2\u7624\n\u4e0d\u538b\u884c\u7684\u4ee3\u7801\u5949\u4e0aqwq\n\n```\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\n#define pb push_back\n#define cmin(a, b) (a > b ? a = b : a)\n#define cmax(a, b) (a < b ? a = b : a)\n#define lop(i, s, t) for(int i = s;i < (t);++i)\n#define rep(i, s, t) for(int i = s;i <= (t);++i)\n#define dec(i, s, t) for(int i = s;i >= (t);--i)\nusing namespace std;\n\nconst int N = 2e5 + 50, K = 20;\n\ntypedef int inte;\n#define int long long\n\nvoid read(int &x) {\n    scanf(\"%lld\", &x);\n}\n\nint n, m, q;\n\nconst int S = N * K;\nint rt[N], sum[S], ls[S], rs[S], vn;\nint new_from(int o) {\n    ++vn;\n    sum[vn] = sum[o];\n    ls[vn] = ls[o];\n    rs[vn] = rs[o];\n    return vn;\n}\nvoid update(int &v, int o, int l, int r, int p) {\n    v = new_from(o);\n    ++sum[v];\n    if (l == r) return;\n    else {\n        int mid = (l + r) >> 1;\n        if (p <= mid) update(ls[v], ls[o], l, mid, p); \n        else update(rs[v], rs[o], mid + 1, r, p);\n    }\n}\nint kth(int vl, int vr, int l, int r, int k) {\n    if (l == r) return l;\n    else {\n        int mid = (l + r) >> 1;\n        int s = sum[ls[vr]] - sum[ls[vl]];\n        if (k <= s) return kth(ls[vl], ls[vr], l, mid, k); \n        else return kth(rs[vl], rs[vr], mid + 1, r, k - s);\n    }\n}\nstruct E { int d, w, nxt; } es[N << 1];\nint g[N], en;\nint dep[N], siz[N], clk;\nint seq[N], plc[N], prt[N][K];\nvoid add(int s, int d, int w = 0) {\n    es[++en] = (E) { d, w, g[s] };\n    g[s] = en;\n}\nvoid dfs(int v, int p) {\n    siz[v] = 1;\n    prt[v][0] = p;\n    plc[v] = ++clk;\n    seq[clk] = v;\n    dep[v] = dep[p] + 1;\n    lop(k, 1, K) prt[v][k] = prt[prt[v][k - 1]][k - 1];\n    for (int i = g[v];i;i = es[i].nxt) {\n        int d = es[i].d;\n        if (d == p) continue;\n        dfs(d, v); \n        siz[v] += siz[d];\n    }\n}\nint kth(int v, int k) {\n    return kth(rt[plc[v] - 1], rt[plc[v] + siz[v] - 1], 1, n, k);\n}\nint lca(int u, int v) {\n    if (dep[u] < dep[v]) swap(u, v);\n    dec(k, K - 1, 0) if (dep[prt[u][k]] >= dep[v]) u = prt[u][k];\n    if (u == v) return u;\n    dec(k, K - 1, 0) if (prt[u][k] != prt[v][k]) \n        u = prt[u][k], v = prt[v][k];\n    return prt[u][0];\n}\nint arr[N], top, tr[N], tot, pr[N][K], dp[N], ori[N], lev[N];\nint belong(int v) {\n    int p = upper_bound(arr + 1, arr + top + 1, v) - arr - 1;\n    return p;\n}\nint orignal(int v) {\n    int b = belong(v);\n    int o = tr[b];\n    int z = kth(o, v - arr[b] + 1);\n    return z;\n}\nint depth(int v) {\n    int b = belong(v);\n    int o = tr[b];\n    int z = kth(o, v - arr[b] + 1);\n    return dp[b] + dep[z] - dep[o];\n}\nvoid link(int v, int p) {\n    int u = ++top;\n    arr[u] = tot + 1;\n    tr[u] = v;\n    tot += siz[v];\n    ori[u] = p;\n    int b = belong(p);\n    pr[u][0] = b;\n    lev[u] = lev[b] + 1;\n    lop(k, 1, K) pr[u][k] = pr[pr[u][k - 1]][k - 1];\n    dp[u] = depth(p) + 1;\n}\nint get_to(int v, int x) {\n    int b = belong(v);\n    if (b == x) return v;\n    dec(k, K - 1, 0) if (lev[pr[b][k]] > lev[x]) {\n        b = pr[b][k];\n    }\n    return ori[b];\n}\nint distance(int u, int v) {\n    int x = belong(u), y = belong(v), l;\n    if (lev[x] < lev[y]) swap(x, y);\n    dec(k, K - 1, 0) if (lev[pr[x][k]] >= lev[y]) x = pr[x][k];\n    if (x != y) {\n        dec(k, K - 1, 0) if (pr[x][k] != pr[y][k]) {\n            x = pr[x][k], y = pr[y][k];\n        }\n        l = pr[x][0];\n    } else l = x;\n    int uu = get_to(u, l);\n    int vv = get_to(v, l);\n    int b = belong(uu);\n    uu = orignal(uu), vv = orignal(vv);\n    int d = dp[b] + dep[lca(uu, vv)] - dep[tr[b]];\n    return depth(u) + depth(v) - 2 * d;\n}\n\ninte main(inte argc,char *argv[]){\n#ifndef ONLINE_JUDGE\n    freopen(\"dat.in\",\"r\",stdin); \n    freopen(\"my.out\",\"w\",stdout); \n#endif\n    read(n), read(m), read(q);\n    rep(i, 2, n) {\n        int u, v; \n        read(u), read(v);\n        add(u, v); \n        add(v, u);\n    }\n    dfs(1, 0); \n    rep(i, 1, n) {\n        update(rt[i], rt[i - 1], 1, n, seq[i]);\n    }\n    tot = n;\n    top = 1;\n    arr[1] = 1;\n    tr[1] = 1;\n    dp[1] = 1;\n    lev[1] = 1;\n    while (m--) {\n        int x, to;\n        read(x), read(to);\n        link(x, to);\n    }\n    while (q--) {\n        int x, y;\n        read(x), read(y);\n        printf(\"%lld\\n\", distance(x, y));\n    }\n    return 0; \n}\n\n```",
        "postTime": 1521505686,
        "uid": 24745,
        "name": "CuriousCat",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3248 \u3010[HNOI2016]\u6811\u3011"
    },
    {
        "content": "\u770b\u5b8c\u9898\u76ee\u4ee5\u540e\u76f4\u63a5\u731c\u4e86\u4e2a$O(n\\log n)$\u7684\u590d\u6742\u5ea6\u3002\n\n\u4e4b\u540e\u60f3\u4e86\u534a\u5929\u3002\u3002\u3002\n\n\u4e3a\u4e86\u4fdd\u8bc1\u7a7a\u95f4\u5408\u6cd5\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u7b2c$i$\u6b21\u64cd\u4f5c\u540e\u6dfb\u52a0\u7684\u5b50\u6811\u547d\u540d\u4e3a\u5757$i$\uff0c\u7279\u522b\u7684\uff0c\u4e00\u5f00\u59cb\u7684\u6a21\u5f0f\u6811\u4e3a\u57570.\n\n\u7136\u540e\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u628a\u4efb\u610f\u7f16\u53f7\u7684\u70b9\u6620\u5c04\u56de\u539f\u6811\uff0c\u8fd9\u4e2a\u7528\u4e8c\u5206\u627e\u5230\u5bf9\u5e94\u7684\u5757+\u4e3b\u5e2d\u6811\u5373\u53ef\u5b9e\u73b0\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\u64cd\u4f5c\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u5757\u5185\u5c31\u6620\u5c04\u56de\u539f\u6811\u7136\u540e\u500d\u589e\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u5904\u7406\u4e0d\u540c\u5757\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u5757\u5f62\u6210\u7684\u6811\uff0c\u5e76\u9884\u5904\u7406$fa$\u6570\u7ec4\u3002\u7136\u540e\u4f9d\u7136\u500d\u589e\u5f80\u4e0a\u8df3\u5373\u53ef\u3002\n\n**\u7efc\u4e0a\uff1a\u672c\u9898\u5c31\u662f\u4e8c\u6b21\u500d\u589e**\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#define fi first\n#define se second\n#define lc tr[x].l\n#define rc tr[x].r\n#define g getchar()\n#define mk make_pair\n#define pi pair<int,ll>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+10;\ntemplate<class o>void qr(o&x) {\n\tchar c=g;int f=1;x=0;\n\twhile(!isdigit(c)){if(c=='-')f=-1;c=g;}\n\twhile(isdigit(c))x=x*10+c-'0',c=g;\n\tx*=f;\n}\ntemplate<class o>void qw(o x) {\n\tif(x/10)qw(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class o> void pr1(o x) {\n\tif(x<0)x=-x,putchar('-');\n\tqw(x); putchar(' ');\n}\ntemplate<class o>void pr2(o x) {\n\tif(x<0)x=-x,putchar('-');\n\tqw(x);puts(\"\");\n}\n\nint n,m,q,sz[N],dep[N],fa[N][20],rt[N],f[N][20],Dep[N],now; ll L[N],R[N],D[N],Node[N];\nstruct edge{int y,next;}a[N<<1]; int len,last[N];\nvoid ins(int x,int y) {a[++len]=(edge){y,last[x]}; last[x]=len;}\n\nstruct node{int l,r,s;} tr[N*40]; int cnt,root[N];\n\nvoid insert(int &x,int l,int r,int pos) {\n\tif(!x) x=++cnt;\n\ttr[x].s++;\n\tif(l==r) return; \n\tint mid=l+r>>1;\n\tif(pos<=mid) insert(lc,l,mid,pos);\n\telse insert(rc,mid+1,r,pos);\n}\n\nint merge(int x,int y,int l,int r) {\n\tif(!x||!y) return x|y;\n\tint z=++cnt;\n\tif(l==r) return z;\n\tint mid=l+r>>1;\n\ttr[z].l=merge(tr[x].l,tr[y].l,l,mid);\n\ttr[z].r=merge(tr[x].r,tr[y].r,mid+1,r);\n\ttr[z].s=tr[tr[z].l].s+tr[tr[z].r].s;\n\treturn z;\n}\n\nint ask(int x,int l,int r,int k) {\n\twhile(l^r) {\n\t\tint mid=l+r>>1;\n\t\tif(k<=tr[lc].s) r=mid,x=lc;\n\t\telse l=mid+1,k-=tr[lc].s,x=rc;\n\t}\n\treturn l;\n}\n\nvoid dfs(int x) { \n\tinsert(root[x],1,n,x); sz[x]=1;\n\tfor(int k=last[x],y;k;k=a[k].next)\t\n\t\tif(!dep[y=a[k].y]) {\n\t\t\tdep[y]=dep[x]+1; fa[y][0]=x;\n\t\t\tfor(int i=0;fa[y][i];i++) fa[y][i+1]=fa[fa[y][i]][i]; \n\t\t\tdfs(y); sz[x]+=sz[y]; root[x]=merge(root[x],root[y],1,n);\n\t\t}\n}\n\npi find(ll t) {//\u6c42\u7f16\u53f7\u4e3at\u7684\u70b9\u7684\u5bf9\u5e94\u5757\u548c\u6df1\u5ea6 \n\tint x=upper_bound(L,L+now,t)-L-1;\n\treturn mk(x,D[x]+dep[ask(root[rt[x]],1,n,t-L[x]+1)]-dep[rt[x]]);\n}\nll pos(ll t) {//\u6c42\u5bf9\u5e94\u6a21\u5f0f\u6811\u4f4d\u7f6e\n\tif(t<=n) return t;\n\tint x=upper_bound(L,L+now,t)-L-1; \n\treturn ask(root[rt[x]],1,n,t-L[x]+1);\n}\n\nll dis(ll x,ll y) {\n\tll z=dep[x]+dep[y];\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int i=0,k=dep[x]-dep[y];k;i++)\n\t\tif(k>>i&1) x=fa[x][i],k^=1<<i;\n\tif(x^y) {\n\t\tfor(int i=17;i>=0;i--)\n\t\t\tif(fa[x][i]^fa[y][i]) x=fa[x][i],y=fa[y][i];\n\t\tx=fa[x][0];\n\t}\n\treturn z-dep[x]*2;\n}\n\nll solve(ll x,ll y) {\n\tpi u=find(x),v=find(y);\n\tll ans=0;int a=u.fi,b=v.fi;\n\tif(a^b) {\n\t\tif(Dep[a]<Dep[b]) swap(x,y),swap(a,b),swap(u,v);\n\t\tif(Dep[a]^Dep[b]) {\n\t\t\tfor(int i=0,k=Dep[a]-Dep[b]-1;k;i++)\n\t\t\t\tif(k>>i&1) a=f[a][i],k^=1<<i;\n\t\t\tans+=u.se-D[a]+1; u.se=D[a]-1; x=Node[a]; a=f[a][0];\n\t\t}\n\t\tif(a^b) {\n\t\t\tfor(int i=17;i>=0;i--)\n\t\t\t\tif(f[a][i]^f[b][i])\t\n\t\t\t\t\ta=f[a][i],b=f[b][i];\n\t\t\tans+=u.se-D[a]+1+v.se-D[b]+1;\n\t\t\tx=Node[a]; y=Node[b];\n\t\t}\n\t}\n\tans+=dis(pos(x),pos(y));\n\treturn ans;\n}\n\nint main() {\n\tqr(n); qr(m); qr(q);\n\tfor(int i=1,x,y;i<n;i++)\n\t\tqr(x),qr(y),ins(x,y),ins(y,x);\n\tdfs(dep[1]=1);\n\tL[0]=1; R[0]=n; rt[0]=1; D[0]=Dep[0]=1;//D[i]\u8868\u793ai\u5757\u7684\u6839\u7684\u771f\u5b9e\u6df1\u5ea6\uff0cDep[i]\u662f\u5757\u7ec4\u6210\u7684\u6811\u7684\u6df1\u5ea6 \n\tfor(now=1;now<=m;now++) {\n\t\tqr(rt[now]); L[now]=R[now-1]+1; R[now]=R[now-1]+sz[rt[now]];\n\t\tqr(Node[now]); pi p=find(Node[now]); \n\t\tf[now][0]=p.fi; D[now]=p.se+1; Dep[now]=Dep[p.fi]+1; \n\t\tfor(int i=0;f[now][i];i++) \n\t\t\tf[now][i+1]=f[f[now][i]][i];\n\t}\n\twhile(q--) {\n\t\tll x,y; qr(x); qr(y);\n\t\tpr2(solve(x,y));\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1589955576,
        "uid": 118826,
        "name": "2018LZY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3248 \u3010[HNOI2016]\u6811\u3011"
    },
    {
        "content": "### PS.\n\u6b64\u9898\u5927\u6bd2\u7624\u3002  \n\u6b64\u9898\u4e2a\u4eba\u611f\u89c9\u4e0d\u662f\u4e00\u4e2a\u6811\u5957\u6811\uff0c\u800c\u662f\u4e00\u4e2a\u6a21\u62df\u9898\u3002  \n\n### Problem.\n\u9996\u5148\u7ed9\u5b9a\u4e00\u9897\u6a21\u677f\u6811\u548c\u5927\u6811\u3002  \n\u5927\u6811\u521d\u59cb\u4e3a\u6a21\u677f\u6811\u3002  \n\u7136\u540e\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u64cd\u4f5c\uff1a\u628a\u6a21\u677f\u6811\u7684\u4e00\u68f5\u5b50\u6811\u6302\u5728\u5927\u6811\u4e0a\u3002  \n\u6302\u4e86\u4e4b\u540e\u91cd\u65b0\u7f16\u53f7\u3002  \n**\u6302\u5b8c\u6240\u6709\u64cd\u4f5c\u4e4b\u540e**\uff0c\u7ed9\u51fa\u67e5\u8be2\u3002  \n\u6bcf\u6b21\u67e5\u8be2\u662f\u8be2\u95ee\u5927\u6811\u4e0a\u4e24\u4e2a\u70b9\u7684LCA\u3002  \n\n### Solution.\n\u9996\u5148\uff0c\u6b64\u9898\u64cd\u4f5c\u5c31\u662f\u628a\u4e00\u4e2a\u6811\u5957\u5728\u53e6\u4e00\u68f5\u6811\u4e0a\uff0c\u6240\u4ee5\u663e\u7136\u7528\u6811\u5957\u6811\u7ef4\u62a4\u3002  \n\u9996\u5148\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u7ed3\u679c~~\u60ca\u5947\u7684~~\u53d1\u73b0\uff1a$N\\le100000,M\\le100000$\uff0c\u90a3\u4e48\u603b\u5171\u7684\u5927\u6811\u8282\u70b9\u662f$N\\times M\\le10^{10}$\uff0c\u7ed3\u679c\u53d1\u73b0\u5927\u6811\u5728\u6700\u540e\u6839\u672c\u5b58\u4e0d\u4e0b\uff01~~\u7136\u540e\u5f53\u573a\u81ea\u95ed\u3002~~  \n\n\u90a3\u4e48\u5927\u6811\u5b58\u4e0d\u4e0b\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u8003\u8651\u7f29\u70b9\u3002  \n\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u6839\u8282\u70b9\u548c\u4e00\u4e2a\u5f53\u524d\u7684\u7f16\u53f7\u6570\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u68f5\u5b50\u6811\u3002  \n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u5728\u6a21\u677f\u6811\u4e0a\u7684\u6839\u8282\u70b9\u548c\u7f16\u53f7\u6765\u8868\u793a\u4e00\u9897\u5b50\u6811\uff0c\u7136\u540e\u76f4\u63a5\u8bb0\u5f55\u5b83\u7684\u6839\u8282\u70b9\u548c\u5f53\u524d\u7684\u5927\u6811\u8282\u70b9\u6570\u76ee\u3002  \n\u5c31\u6709\u4e86\u4e00\u68f5$M+1$\u4e2a\u8282\u70b9\u7684\u7f29\u70b9\u6811\u3002  \n\u7136\u540e\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u53f7\uff0c\u6211\u4eec\u80fd\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u76f4\u63a5\u627e\u5230\u5b83\u7684\u7236\u4eb2\u8282\u70b9\u3002  \n\u7136\u540e\u6211\u4eec\u5c31\u628a\u6240\u6709\u4fee\u6539\u64cd\u4f5c\u5904\u7406\u597d\u4e86\u3002  \n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u8be2\u95ee\u64cd\u4f5c\u3002  \n\u6211\u4eec\u9700\u8981\u627e\u5230\u5927\u6811\u4e0a\u7684\u4e24\u4e2a\u8282\u70b9\u7684 LCA \uff0c\u5e94\u8be5\u600e\u4e48\u627e\u5462\u3002  \n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u4e8e\u6a21\u677f\u6811\u548c\u5927\u6811\u5206\u522b\u505a\u4e00\u904d LCA \u3002  \n\u6a21\u677f\u6811\u7684\u8fb9\u6743\u662f1\uff0c\u5927\u6811\u7684\u8fb9\u6743\u662f1\uff0c\u70b9\u6743\u7f29\u70b9\u5185\u7684\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u3002  \n\u7136\u540e\u53c8\u53ef\u4ee5\u628a\u5927\u6811\u7684\u70b9\u6743\u52a0\u5230\u4e0b\u9762\u90a3\u6761\u8fb9\u4e0a\u3002  \n\u7136\u540e\u6700\u7ec8\u7b54\u6848\u5c31\u51fa\u6765\u4e86\uff0c\u9996\u5148\u5148\u5206\u522b\u8df3\u4e24\u4e2a\u70b9\uff0c\u8df3\u5230\u5f53\u524d\u7f29\u70b9\u7684\u6839\uff0c\u5728\u6a21\u677f\u6811\u4e0a\u64cd\u4f5c\uff0c\u7136\u540e\u4ece\u5f53\u524d\u7f29\u70b9\u7684\u6839\u5f00\u59cb\u8df3\u7956\u5148\uff0c\u8df3\u5230LCA\u7684\u513f\u5b50\uff0c\u7136\u540e\u518d\u56de\u5230\u6a21\u677f\u6811\u4e0a\u8df3\uff0c\u8df3\u5b83\u4eec\u76f4\u7cfb\u7236\u4eb2\u7684LCA\u3002  \n\n\u4f46\u662f\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u7ed9\u5b9a\u4e00\u4e2a\u5927\u6811\u4e0a\u7684\u7f16\u53f7\uff0c\u76ee\u524d\u65e0\u6cd5\u6c42\u51fa\u5728\u6a21\u677f\u6811\u4e0a\u5bf9\u5e94\u7684\u70b9\u3002  \n\u6211\u4eec\u6765\u601d\u8003\u4e00\u4e0b\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002  \n\u9996\u5148\u6211\u4eec\u5148\u628a\u90a3\u4e2a\u7f16\u53f7\u51cf\u53bb\u4e4b\u524d\u7684cnt\u503c\u5f97\u5230\u5f53\u524d\u8fd9\u4e2a\u8282\u70b9\u5728\u8fd9\u68f5\u5b50\u6811\u91cc\u662f\u7b2c\u51e0\u5927\u3002  \n\u7136\u540e\u6211\u4eec\u9700\u8981\u67e5\u8be2\u6a21\u677f\u6811\u4e0a\u7684\u5b50\u6811\u7b2ck\u5927\uff0c\u800c\u4e14\u8fd8\u6ca1\u6709\u4fee\u6539\u3002  \n\u663e\u7136\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4DFN\u5e8f\u3002  \n\n\u7136\u540e\u8fd9\u9898\u624d\u505a\u5b8c\u3002  \n\n\u76f8\u5f53\u4e8e\u6b64\u9898\u9700\u8981\u7ef4\u62a4\u4e09\u68f5\u6811\uff0c\u4e00\u9897\u6a21\u677f\u6811\uff0c\u4e00\u9897\u5927\u6811\uff0c\u8fd8\u6709\u4e00\u9897\u4e3b\u5e2d\u6811\uff0c\u771f\u662f\u6bd2\u7624\uff0c\u867d\u7136\u6ca1\u6709\u5957\u5728\u4e00\u8d77\u3002  \n\n### Coding.\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int bs(int x) {return x>0?x:-x;}\nnamespace zxs//\u4e3b\u5e2d\u6811\u7684\u540d\u5b57\u7a7a\u95f4\n{\n\tstruct node{int ls,rs,val;}t[10000005];\n\tint rt[100005],tot=0;\n\tinline void build(int &x,int l,int r) {x=++tot;if(l==r) return;else build(t[x].ls,l,(l+r)>>1),build(t[x].rs,((l+r)>>1)+1,r);}//\u4e3b\u5e2d\u6811\u5efa\u6811\n\tinline void chang(int old,int &now,int l,int r,int w)\n\t{\n\t\tt[now=++tot]=t[old],t[now].val++;if(l==r) return;\n\t\tif(w<=((l+r)>>1)) chang(t[old].ls,t[now].ls,l,(l+r)>>1,w);else chang(t[old].rs,t[now].rs,((l+r)>>1)+1,r,w);\n\t}//\u4e3b\u5e2d\u6811\u4fee\u6539\n\tinline int query(int xl,int xr,int l,int r,int w)\n\t{\n\t\tint c=t[t[xr].ls].val-t[t[xl].ls].val;if(l==r) return l;\n\t\tif(w<=c) return query(t[xl].ls,t[xr].ls,l,(l+r)>>1,w);else return query(t[xl].rs,t[xr].rs,((l+r)>>1)+1,r,w-c);\n\t}//\u4e3b\u5e2d\u6811\u67e5\u8be2\n}\nnamespace mbs//\u6a21\u677f\u6811\u7684\u540d\u5b57\u7a7a\u95f4\n{\n\tstruct edge{int to,nxt;}e[200005];int n,tot,cnt,dfn[100005],nfd[100005],siz[100005],head[100005],f[100005][35],dep[100005];\n\tinline void init() {tot=cnt=0,memset(head,0,sizeof(head)),dep[0]=0;}//\u521d\u59cb\u5316\n\tinline void adde(int x,int y) {e[++tot]=(edge){y,head[x]},head[x]=tot;}//\u52a0\u8fb9\n\tinline void dfs(int x,int fa=0)//dfs\u5f97\u5230\u500d\u589e\n\t{\n\t\tdfn[++cnt]=x,nfd[x]=cnt,dep[x]=dep[fa]+1,f[x][0]=fa,siz[x]=1;\n\t\tfor(int i=1;i<=25;i++) f[x][i]=f[f[x][i-1]][i-1];\n\t\tfor(int i=head[x];i;i=e[i].nxt) if(e[i].to!=fa) dfs(e[i].to,x),siz[x]+=siz[e[i].to];\n\t}\n\tinline void build()//\u5bf9dfn\u5efa\u4e3b\u5e2d\u6811\n\t{\n\t\tzxs::build(zxs::rt[0],1,n);\n\t\tfor(int i=1;i<=n;i++) zxs::chang(zxs::rt[i-1],zxs::rt[i],1,n,dfn[i]);\n\t}\n\tinline int lca(int x,int y)//\u6a21\u677f\u6811\u4e0aLCA\n\t{\n\t\tint res=0;if(dep[x]<dep[y]) swap(x,y);\n\t\tfor(int i=25;i>=0;i--) if(dep[f[x][i]]>=dep[y]) res+=(1<<i),x=f[x][i];\n\t\tfor(int i=25;i>=0;i--) if(f[x][i]!=f[y][i]) res+=(1<<(i+1)),x=f[x][i],y=f[y][i];\n\t\tif(x==y) return res;else return res+2;\n\t}\n\tinline void read()\n\t{\n\t\tfor(int i=1,x,y;i<n;i++) scanf(\"%lld%lld\",&x,&y),adde(x,y),adde(y,x);\n\t\tdep[0]=0,dfs(1,0),build();\n\t}\n}\nnamespace ds//\u5927\u6811\u7684\u540d\u5b57\u7a7a\u95f4\n{\n\tint n,m,cnt,f[100005][35],dis[100005][35],dep[100005],lst[100005],dfn[100005],nfd[100005],hd[100005];\n\tinline int getrt(int x)//\u5f97\u5230\u4e00\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u6839\uff0c\u7528\u4e8c\u5206\u67e5\u627e\n\t{\n\t\tint l=1,r=n;\n\t\twhile(l<=r) dfn[(l+r)>>1]<=x?l=((l+r)>>1)+1:r=((l+r)>>1)-1;\n\t\treturn r;\n\t}\n\tinline int getlst(int x)//\u5f97\u5230\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5148\n\t{\n\t\tint rt=getrt(x);\n\t\treturn zxs::query(zxs::rt[mbs::nfd[lst[rt]]-1],zxs::rt[mbs::nfd[lst[rt]]+mbs::siz[lst[rt]]-1],1,mbs::n,x-dfn[rt]+1);\n\t}\n\tinline void build()//\u5efa\u7acbLCA\n\t{\n\t\tn=1,dep[1]=1,lst[1]=1,dfn[1]=1,cnt=nfd[1]=mbs::n;\n\t\tfor(int i=1,x,y,rt;i<=m;i++)\n\t\t{\n\t\t\tscanf(\"%lld%lld\",&x,&y),rt=getrt(y),dep[++n]=dep[rt]+1,hd[n]=y,lst[n]=x,dfn[n]=cnt+1;\n\t\t\tnfd[n]=cnt+mbs::nfd[x]+mbs::siz[x]-mbs::nfd[x],cnt=nfd[n],f[n][0]=rt,dis[n][0]=mbs::dep[getlst(y)]-mbs::dep[lst[rt]]+1;\n\t\t\tfor(int j=1;j<=25;j++) f[n][j]=f[f[n][j-1]][j-1],dis[n][j]=dis[f[n][j-1]][j-1]+dis[n][j-1];\n\t\t}\n\t}\n\tinline int work(int x,int y)//\u67e5\u8be2\u7b54\u6848\n\t{\n\t\tint res=0,rx=getrt(x),ry=getrt(y);\n\t\tif(rx==ry) return mbs::lca(getlst(x),getlst(y));\n\t\tif(dep[rx]<dep[ry]) swap(x,y),swap(rx,ry);\n\t\tres+=mbs::dep[getlst(x)]-mbs::dep[lst[rx]],x=rx;\n\t\tfor(int i=25;i>=0;i--) if(dep[f[x][i]]>dep[ry]) res+=dis[x][i],x=f[x][i];\n\t\tif(getrt(hd[x])==ry) return res+1+mbs::lca(getlst(hd[x]),getlst(y));\n\t\tres+=mbs::dep[getlst(y)]-mbs::dep[lst[ry]],y=ry;\n\t\tif(dep[x]>dep[y]) res+=dis[x][0],x=f[x][0];\n\t\tfor(int i=25;i>=0;i--) if(f[x][i]!=f[y][i]) res+=dis[x][i]+dis[y][i],x=f[x][i],y=f[y][i];\n\t\treturn x=hd[x],y=hd[y],res+2+mbs::lca(getlst(x),getlst(y));\n\t}\n}\nsigned main()\n{//\u4e3b\u51fd\u6570\u6ca1\u4ec0\u4e48\u597d\u89e3\u91ca\u7684\u4e86\u5427\n\tint q;scanf(\"%lld%lld%lld\",&mbs::n,&ds::m,&q),mbs::read(),ds::build();\n\tfor(int x,y;q--;) scanf(\"%lld%lld\",&x,&y),printf(\"%lld\\n\",ds::work(x,y));\n\treturn 0;\n}\n```\n~~\u5b8c\u7ed3\u6563\u82b1\uff0c\u65e0\u803b\u6c42\u8d5e~~",
        "postTime": 1582423457,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P3248[HNOI2016]\u6811\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "## \u62bd\u8c61\n\u628a\u9898\u76ee\u7684\u5efa\u6811\u770b\u6210\u662f\u4e00\u68f51e5\u7ea7\u522b\u7684\u6811\uff0c\u53ea\u4e0d\u8fc7\u6bcf\u4e2a\u6811\u8282\u70b9\u4e5f\u540c\u6837\u662f\u4e00\u68f51e5\u7ea7\u522b\u7684\u6811\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u5b9a\u4e49\u8fd9\u6574\u68f5\u6811\u4e3a\u5916\u6811\uff0c\u5b83\u7684\u6bcf\u4e2a\u6811\u8282\u70b9\u4e3a\u5185\u6811\u3002\n\n\u663e\u7136\u6709\u4efb\u610f\u4e00\u68f5\u5185\u6811\u90fd\u662f\u539f\u6811\u7684\u4e00\u68f5\u5b50\u6811\u3002\n## \u5206\u6790\n\u5148\u7c97\u7565\u7684\u60f3\u4e00\u4e0b\u7b54\u6848\u600e\u4e48\u6c42\uff0c\u5f88\u663e\u7136\u4e24\u4e2a\u70b9\u7684LCA\u6240\u5728\u7684\u5185\u6811\u4e00\u5b9a\u662f\u5728\u5b83\u4eec\u5bf9\u5e94\u5185\u6811\u7684LCA\u3002\u90a3\u4e48\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u68f5\u5185\u6811\u7684\u6839\u8282\u70b9\u7684\u771f\u5b9e\u6df1\u5ea6\u3002\u5bf9\u4e8e\u4e00\u7ec4\u8be2\u95ee\uff0c\u5148\u5728\u5916\u6811\u4e0a\u500d\u589e\u627e\u5230\u4e24\u4e2a\u70b9\u5bf9\u5e94\u5185\u6811\u7684LCA\uff0c\u518d\u5728\u8fd9\u4e2a\u5185\u6811\u4e2d\u76f4\u63a5\u6c42LCA\u3002\n## \u7ef4\u62a4\u4fe1\u606f\n\u6709\u4e86\u601d\u8def\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u7ef4\u62a4\u4fe1\u606f\u4e86\u3002\n### 1\u3001\u5982\u4f55\u627e\u4e00\u4e2a\u70b9\u5bf9\u5e94\u7684\u5185\u6811\uff1f\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u51fa\u6bcf\u68f5\u5185\u6811\u5305\u542b\u7684\u70b9\u7684\u7f16\u53f7\u8303\u56f4 [ L , R ] \u3002\u76f4\u63a5\u4e8c\u5206\u5373\u53ef\u3002\n### 2\u3001\u5982\u4f55\u5bf9\u4e24\u68f5\u5185\u6811\u6c42LCA\uff1f\n\u5148\u901a\u8fc7\u95ee\u98981\u8fde\u8fb9\u5efa\u51fa\u5916\u6811\uff0c\u7136\u540e\u76f4\u63a5\u500d\u589e\u5373\u53ef\u3002\n### 3\u3001\u5982\u4f55\u6c42\u4e00\u68f5\u5185\u6811\u7684\u771f\u5b9e\u6df1\u5ea6\uff1f\n\u5185\u6811\u7684\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u663e\u7136\u7b49\u4e8e\u5b83\u7236\u4eb2\u6240\u5728\u7684\u5185\u6811\u7684\u771f\u5b9e\u6df1\u5ea6+\u5b83\u7236\u4eb2\u5728\u5176\u6240\u5728\u5185\u6811\u4e2d\u7684\u6df1\u5ea6+1\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5f15\u51fa\u4e86\u7b2c4\u4e2a\u95ee\u9898\uff1a\n### 4\u3001\u5982\u4f55\u6c42\u4e00\u4e2a\u70b9\u5728\u5176\u6240\u5728\u5185\u6811\u4e2d\u7684\u6df1\u5ea6\uff1f\n\u5b9a\u4e49\u4e00\u4e2a\u70b9\u5728\u4e00\u68f5\u6811\u4e2d\u7684\u76f8\u5bf9\u7f16\u53f7\u4e3a\u5b83\u7684\u7f16\u53f7\u5728\u8fd9\u68f5\u6811\u4e2d\u662f\u7b2c\u51e0\u5c0f\u7684\u3002\n\n\u7531\u4e8e\u7f16\u53f7\u987a\u5e8f\u4e0e\u539f\u6811\u76f8\u7b49\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u5728\u8fd9\u68f5\u5185\u6811\u4e2d\u7684\u76f8\u5bf9\u7f16\u53f7\u7b49\u4e8e\u5176\u5728\u539f\u6811\u4e2d\u7684\u5bf9\u5e94\u5b50\u6811\u7684\u76f8\u5bf9\u7f16\u53f7\u3002\n\n\u4e5f\u5c31\u610f\u5473\u7740\u8fd9\u4e2a\u70b9\u5728\u8fd9\u68f5\u5185\u6811\u4e2d\u7684\u6df1\u5ea6\uff0c\u7b49\u4e8e\u5176\u5728\u539f\u6811\u4e2d\u7684\u5bf9\u5e94\u5b50\u6811\u4e2d\u76f8\u5bf9\u7f16\u53f7\u4e0e\u5176\u76f8\u540c\u7684\u70b9\uff0c\u76f8\u5bf9\u4e8e\u8fd9\u68f5\u5b50\u6811\u7684\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5f15\u51fa\u4e86\u7b2c5\u4e2a\u95ee\u9898\uff1a\n### 5\u3001\u5982\u4f55\u6c42\u539f\u6811\u4e2d\u7684\u4e00\u4e2a\u5b50\u6811\u5185\u76f8\u5bf9\u7f16\u53f7\u4e3ak\u7684\u70b9\uff1f\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u539f\u6811\u6c42\u4e00\u904ddfs\u5e8f\uff0c\u8fd9\u6837\u5b50\u6811\u67e5\u8be2\u5c31\u76f8\u5f53\u4e8e\u533a\u95f4\u67e5\u8be2\uff0c\u5b50\u6811\u76f8\u5bf9\u7f16\u53f7\u4e3ak\u5c31\u76f8\u5f53\u4e8e\u533a\u95f4\u7b2ck\u5c0f\u3002\n\n\u9759\u6001\u533a\u95f4\u7b2ck\u5c0f\uff1f\u4e3b\u5e2d\u6811\u5373\u53ef\u3002\n## \u67e5\u8be2\u7b54\u6848\n\u5bf9\u4e8e\u4e00\u7ec4\u67e5\u8be2u\uff0cv\n\n### \u5148\u8003\u8651\u5904\u7406\u51fau\uff0cv\u6b63\u8981\u8df3\u5230\u5b83\u4eec\u6240\u5728\u5185\u6811\u7684LCA\u4e2d\u7684\u65f6\u5019\u7684\u7b54\u6848\u3002\n\n\u5bf9\u4e8eu\uff0c\u5982\u679c\u5b83\u6240\u5728\u7684\u5185\u6811\u5e76\u4e0d\u662fLCA\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b54\u6848\u5305\u542b\u4ee5\u4e0b\u51e0\u90e8\u5206\uff1a\n#### 1\u3001\u5b83\u5230\u5b83\u6240\u5728\u5185\u6811\u7684\u6839\u8282\u70b9\u7684\u8ddd\u79bb\n#### 2\u3001\u5b83\u6240\u5728\u5185\u6811\u7684\u6839\u8282\u70b9\u5230\u5b83\u7684\u7956\u5148\u4e2dLCA\u4e0b\u65b9\u7684\u5185\u6811\u7684\u6839\u8282\u70b9\u7684\u8ddd\u79bb\n\u5bf9\u4e8e1\uff0c\u89c1\u95ee\u98984\u3002\n\n\u5bf9\u4e8e2\uff0c\u5148\u500d\u589e\u627e\u5230\u5b83\u7684\u7956\u5148\u4e2dLCA\u4e0b\u65b9\u7684\u5185\u6811\uff0c\u518d\u7528\u5df2\u7ecf\u901a\u8fc7\u95ee\u98983\u6c42\u597d\u7684\u4fe1\u606f\u7b97\u3002\n\n\u5bf9\u4e8ev\u540c\u7406\u3002\n\n### \u63a5\u4e0b\u6765\u5904\u7406u\uff0cv\u90fd\u5230\u4e86\u5b83\u4eec\u6240\u5728\u5185\u6811\u7684LCA\u4e2d\u7684\u7b54\u6848\u3002\n\u901a\u8fc7\u7c7b\u4f3c\u95ee\u98985\u7684\u505a\u6cd5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230u\uff0cv\u5728\u8fd9\u4e2aLCA\u4e2d\u5bf9\u5e94\u539f\u6811\u4e2d\u7684\u70b9\u7684\u7f16\u53f7\u3002\n\n\u5f97\u5230\u5230\u8fd9\u4e24\u4e2a\u7f16\u53f7\u540e\u76f4\u63a5\u5728\u539f\u6811\u4e2d\u6c42LCA\u5373\u53ef\u3002\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define N 100010\n#define D 21\n#define ll long long\nusing namespace std;\ntemplate<typename T> void read(T &x){\n\tx=0;char c=getchar();T sig=1;\n\tfor (;!isdigit(c);c=getchar()) if (c=='-') sig=-1;\n\tfor (; isdigit(c);c=getchar()) x=x*10+c-48;\n\tx*=sig;\n}\ntemplate<typename T> void write(T x){\n\tif (x<0){putchar('-');x=-x;}\n\tT y=0;int wei=0;\n\twhile (x>9){++wei;y=y*10+x%10;x/=10;}putchar(x+48);\n\twhile (wei--){putchar(y%10+48);y/=10;}\n}\nint n,m,Q;\nstruct Parent{\n\tint fa[N][D];\n};\nParent Big,Small;\nint Dep_Big[N],Dep_Small[N];\nint High_Big[N],High_Small[N];\nstruct Side{\n\tint len,head[N],last[N<<1],to[N<<1];\n};\nSide S,C;\nstruct Line{\n\tint root;\n\tll Lef,Rig,True_Dep;\n\tvoid crt(int x,ll y,ll z,ll k){\n\t\troot=x;\n\t\tLef=y;\n\t\tRig=z;\n\t\tTrue_Dep=k;\n\t\treturn;\n\t}\n};\nLine Position[N];\nstruct Point{\n\tint dfn,low;\n};\nPoint List[N];\nint Cnt;\nint What[N];\nint Who[N];\nint tot;\nstruct Segment_Tree{\n\tstruct Node_Tree{\n\t\tint lc,rc,sum;\n\t};\n\tNode_Tree tr[N*D];\n\tint tot,root[N];\n\t#define ls(i) tr[i].lc\n\t#define rs(i) tr[i].rc\n\t#define val(i) tr[i].sum\n\tvoid PushUp(int i){\n\t\tval(i)=val(ls(i))+val(rs(i));\n\t\treturn;\n\t}\n\tvoid Add(int &now,int last,int ql,int qr,int idx){\n\t\tif (!now) now=++tot;\n\t\tif (ql==qr){\n\t\t\tval(now)=1;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(ql+qr)>>1;\n\t\tif (idx<=mid) rs(now)=rs(last),Add(ls(now),ls(last),ql,mid,idx);\n\t\telse ls(now)=ls(last),Add(rs(now),rs(last),mid+1,qr,idx);\n\t\tPushUp(now);\n\t\treturn;\n\t}\n\tint Query(int now,int last,int ql,int qr,int idx){\n\t\tif (ql==qr) return ql;\n\t\tint k=val(ls(now))-val(ls(last));\n\t\tint mid=(ql+qr)>>1;\n\t\tif (k>=idx) return Query(ls(now),ls(last),ql,mid,idx);\n\t\treturn Query(rs(now),rs(last),mid+1,qr,idx-k);\n\t}\n\tint Ask(int p,int idx){\n\t\treturn Query(root[List[p].low],root[List[p].dfn-1],1,n,idx);\n\t}\n};\nSegment_Tree tree;\nvoid Put(Side &R,int x,int y){\n\tR.len++;\n\tR.to[R.len]=y;\n\tR.last[R.len]=R.head[x];\n\tR.head[x]=R.len;\n\treturn;\n}\nvoid Addedge(Side &R,int x,int y){\n\tPut(R,x,y);\n\tPut(R,y,x);\n\treturn;\n}\nvoid Dfs(int p,Parent &Now,int *Dep_Now,int *High_Now,Side &R){\n\tfor (int i=R.head[p];i;i=R.last[i])\n\t\tif (Now.fa[p][0]!=R.to[i]){\n\t\t\tDep_Now[R.to[i]]=Dep_Now[p]+1;\n\t\t\tNow.fa[R.to[i]][0]=p;\n\t\t\tHigh_Now[R.to[i]]=-1;\n\t\t\tfor (int j=1;Now.fa[R.to[i]][j-1];++j,++High_Now[R.to[i]])\n\t\t\t\tNow.fa[R.to[i]][j]=Now.fa[Now.fa[R.to[i]][j-1]][j-1];\n\t\t\tDfs(R.to[i],Now,Dep_Now,High_Now,R);\n\t\t}\n\treturn;\n}\nvoid Dfs_Big(){\n\tDfs(1,Big,Dep_Big,High_Big,S);\n\treturn;\n}\nvoid Dfs_Small(){\n\tDfs(1,Small,Dep_Small,High_Small,C);\n\treturn;\n}\nvoid Dfs_2(int p){\n\tWhat[++Cnt]=p;\n\tList[p].dfn=Cnt;\n\tfor (int i=C.head[p];i;i=C.last[i])\n\t\tif (Small.fa[p][0]!=C.to[i])\n\t\t\tDfs_2(C.to[i]);\n\tList[p].low=Cnt;\n\treturn;\n}\nvoid Prepare(){\n\tDfs_Small();\n\tDfs_2(1);\n\tfor (int i=1;i<=n;i++) tree.Add(tree.root[i],tree.root[i-1],1,n,What[i]);\n\treturn;\n}\nint Find_Pos(ll x){\n\tint L=0,R=tot;\n\twhile (L<R-1){\n\t\tint mid=(L+R)>>1;\n\t\tif (x<=Position[mid].Rig) R=mid;\n\t\telse L=mid;\n\t}\n\treturn R;\n}\nvoid Get_data(){\n\tread(n);\n\tread(m);\n\tread(Q);\n\tfor (int i=1;i<n;i++){\n\t\tint x,y;\n\t\tread(x);\n\t\tread(y);\n\t\tAddedge(C,x,y);\n\t}\n\tPrepare();\n\tPosition[1].crt(1,1,n,1);\n\tfor (int i=2;i<=m+1;i++){\n\t\tint x;ll y;\n\t\tread(x);\n\t\tread(y);\n\t\ttot=i-1;\n\t\tint Par=Find_Pos(y);\n\t\tint kth=y-Position[Par].Lef+1;\n\t\tWho[i]=tree.Ask(Position[Par].root,kth);\n\t\tAddedge(S,Par,i);\n\t\tPosition[i].crt(x,Position[i-1].Rig+1,Position[i-1].Rig+List[x].low-List[x].dfn+1,Position[Par].True_Dep+Dep_Small[Who[i]]-Dep_Small[Position[Par].root]+1ll);\n\t}\n\ttot=m+1;\n\tDfs_Big();\n\treturn;\n}\nint Skip(int x,int k,Parent &Now){\n\tint t=0;\n\twhile (k){\n\t\tif (k&1) x=Now.fa[x][t];\n\t\t++t;\n\t\tk>>=1;\n\t}\n\treturn x;\n}\nint Lca(int x,int y,Parent &Now,int *Dep_Now,int *High_Now){\n\tif (Dep_Now[x]<Dep_Now[y]) swap(x,y);\n\tx=Skip(x,Dep_Now[x]-Dep_Now[y],Now);\n\tif (x==y) return x;\n\tfor (int i=High_Now[x];i>=0;i--)\n\t\tif (Now.fa[x][i]!=Now.fa[y][i]){\n\t\t\tx=Now.fa[x][i];\n\t\t\ty=Now.fa[y][i];\n\t\t}\n\treturn Now.fa[x][0];\n}\nint Lca_Big(int x,int y){\n\treturn Lca(x,y,Big,Dep_Big,High_Big);\n}\nint Lca_Small(int x,int y){\n\treturn Lca(x,y,Small,Dep_Small,High_Small);\n}\nint Fur(int x,int y){\n\tint k=Lca_Small(x,y);\n\treturn Dep_Small[x]+Dep_Small[y]-2*Dep_Small[k];\n}\nll Ex_Lca(ll x,ll y){\n\tll res=0;\n\tint u=Find_Pos(x);\n\tint v=Find_Pos(y);\n\tint u_kth=x-Position[u].Lef+1;\n\tint v_kth=y-Position[v].Lef+1;\n\tint Top=Lca_Big(u,v);\n\tif (u!=Top){\n\t\tres+=Dep_Small[tree.Ask(Position[u].root,u_kth)]-Dep_Small[Position[u].root];\n\t\tint k=Dep_Big[u]-Dep_Big[Top]-1;\n\t\tint u_Topson=Skip(u,k,Big);\n\t\tres+=Position[u].True_Dep-Position[u_Topson].True_Dep;\n\t\tres++;\n\t\tx=Who[u_Topson];\n\t}\n\telse x=tree.Ask(Position[u].root,u_kth);\n\tif (v!=Top){\n\t\tres+=Dep_Small[tree.Ask(Position[v].root,v_kth)]-Dep_Small[Position[v].root];\n\t\tint k=Dep_Big[v]-Dep_Big[Top]-1;\n\t\tint v_Topson=Skip(v,k,Big);\n\t\tres+=Position[v].True_Dep-Position[v_Topson].True_Dep;\n\t\tres++;\n\t\ty=Who[v_Topson];\n\t}\n\telse y=tree.Ask(Position[v].root,v_kth);\n\tres+=Fur(x,y);\n\treturn res;\n}\nvoid Solve(){\n\twhile (Q--){\n\t\tll x,y;\n\t\tread(x);\n\t\tread(y);\n\t\twrite(Ex_Lca(x,y));\n\t\tputchar('\\n');\n\t}\n\treturn;\n}\nint main(){\n//\tfreopen(\"P3248.in\",\"r\",stdin);\n//\tfreopen(\"P3248.out\",\"w\",stdout);\n\tGet_data();\n\tSolve();\n\treturn 0;\n}\n```\n",
        "postTime": 1572966557,
        "uid": 72598,
        "name": "logwzc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3248 \u3010[HNOI2016]\u6811\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u6bd2\u7624\u4f46\u4e0d\u5931\u7cbe\u81f4\u7684\u9898\u89e3\n\n\u7531\u4e8e\u5199\u4e86ZJOI2016 \u5927\u68ee\u6797\u6211\u4e00\u5ea6\u4ee5\u4e3a\u672c\u9898\u662f\u90a3\u4e2aLCT\u8f6c\n\n\u51b7\u9759\u5206\u6790\u540e\u53d1\u73b0 \u6a21\u677f\u6811\u56fa\u5b9a \u5e76\u4e0d\u9700\u8981\u90a3\u4e48\u641e\n\n\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u70b9\u4ee3\u8868\u4e00\u4e2a\u6a21\u677f\u6811\u5b50\u6811\n\n\u90a3\u4e48\u67e5\u8be2\u65f6\u4e00\u5171\u67094\u79cd\u60c5\u51b5\n\n1. \u90fd\u5728\u5728\u70b9\u5185 \u5728\u6a21\u677f\u6811\u4e0a\u67e5LCA\u5373\u53ef\n2. \u7956\u5148\u5173\u7cfb* \u4e24\u79cd \u5148\u500d\u589e\u4e0a\u53bb\u5230dep\u53ea\u5dee\u4e3a1 \u7136\u540e\u8f6c\u4e3a1\u597d\u95ee\u9898\n3. \u500d\u589e\u5230\u6df1\u5ea6\u4e00\u6837\u540e\u4e00\u8d77\u500d\u589e \u6700\u540e\u8fd8\u662f1\u95ee\u9898\n\n\u4e00\u4e2a\u6709\u4e09\u79cd\u540d\u5b57\u5bf9\u5e94\u5173\u7cfb\n\n\u6700\u597d\u5c01\u88c5\u8d77\u6765\n\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<map>\ntypedef long long LL;\nusing namespace std;\nconst int N=2e5+100;\ninline void read(int &x){\n\tx=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=f;\n}\ninline void read(LL &x){\n\tx=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=f;\n}\nint n,m,Q;\nint root[N];\nstruct Chairman_Tree{\n\tint lson[N*30];\n\tint rson[N*30];\n\tint sum[N*30];\n\tint tot;\n\tvoid Update(int x,int &y,int l,int r,int pos){\n\t\ty=++tot;\n\t\tlson[y]=lson[x];\n\t\trson[y]=rson[x];\n\t\tsum[y]=sum[x]+1;\n\t\tif(l==r)return;\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid)Update(lson[x],lson[y],l,mid,pos);\n\t\telse Update(rson[x],rson[y],mid+1,r,pos);\n\t}\n\tint Query(int x,int y,int l,int r,int K){\n\t\tif(l==r)return l;\n\t\tint tmp=sum[lson[y]]-sum[lson[x]];\n\t\tint mid=(l+r)>>1;\n\t\tif(K>tmp)\n\t\t\treturn Query(rson[x],rson[y],mid+1,r,K-tmp);\n\t\telse \n\t\t\treturn Query(lson[x],lson[y],l,mid,K);\n\t}\n}PST;\nint dfn[N];\nint low[N];\nint pre[N];\nint siz[N];\nstruct Template_Tree{\n\tstruct Front_Star{\n\t\tint u,v,nxt;\n\t}e[N<<2];\n\tint cnt=0;\n\tint first[N];\n\tint fa[N][21];\n\tint dep[N];\n\tvoid add(int u,int v){\n\t\t++cnt;\n\t\te[cnt].u=u;\n\t\te[cnt].v=v;\n\t\te[cnt].nxt=first[u];\n\t\tfirst[u]=cnt;\n\t}\n\tint dfn_cnt;\n\tvoid DFS(int u,int fat){\n\t\tsiz[u]=1;\n\t\tdfn[u]=++dfn_cnt;\n\t\tpre[dfn_cnt]=u;\n\t\tfa[u][0]=fat;\n\t\tfor(int i=1;i<=20;++i)fa[u][i]=fa[fa[u][i-1]][i-1];\n\t\tfor(int i=first[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tif(v==fat)continue;\n\t\t\tdep[v]=dep[u]+1;\n\t\t\tDFS(v,u);\n\t\t\tsiz[u]+=siz[v];\n\t\t}\n\t\tlow[u]=dfn_cnt;\n\t}\n\tint LCA(int x,int y){\n\t\tif(dep[x]<dep[y])swap(x,y);\n\t\tfor(int i=20;i>=0;--i){\n\t\t\tif(dep[x]-(1<<i)>=dep[y])x=fa[x][i];\n\t\t}\n\t\tif(x==y)return x;\n\t\tfor(int i=20;i>=0;--i){\n\t\t\tif(fa[x][i]!=fa[y][i]){\n\t\t\t\tx=fa[x][i];\n\t\t\t\ty=fa[y][i];\n\t\t\t}\n\t\t}\n\t\treturn fa[x][0];\n\t}\n\tint Dis(int x,int y){\n\t\treturn dep[x]+dep[y]-2*dep[LCA(x,y)];\n\t}\t\n}G;\nstruct Id_Table{\n\tvector<LL> End;\n\tmap<int,int> mmp;\n\tint Idcnt;\n\tint Insert(LL R){\n\t\tEnd.push_back(R);\n\t\treturn ++Idcnt;\n\t}\n\tint GetId(LL x){\n\t\tint pos=1+lower_bound(End.begin(),End.end(),x)-End.begin();\n\t\treturn pos;\n\t}\n}Id;\nstruct Big_Tree{\n\tLL fa;\n\tLL L;\n\tint rt,Id;\n}T[N<<2];\nstruct Front_star{\n\tint u,v,w,nxt;\n}e[N<<2];\nint cnt=0;\nint first[N];\nvoid add(int u,int v,LL w){\n\t++cnt;\n\te[cnt].u=u;\n\te[cnt].v=v;\n\te[cnt].w=w;\n\te[cnt].nxt=first[u];\n\tfirst[u]=cnt;\n}\nLL dis[N];\nint dep[N];\nint fa[N][21];\nLL Tnode=0;\nLL LCADis(LL x,LL y,int Id){\n\t\n\t\n\tif(Id==1){\n\t\treturn G.Dis(x,y);\n\t}\n\t\n\t\n\tx=PST.Query(root[dfn[T[Id].rt]-1],root[low[T[Id].rt]],1,n,x-T[Id].L);\n\tif(y!=-1)y=PST.Query(root[dfn[T[Id].rt]-1],root[low[T[Id].rt]],1,n,y-T[Id].L);\n\t\n\t\n\treturn G.Dis(x,y==-1?T[Id].rt:y);\n}\nLL Dis(LL x,LL y){\n\tint Idx=Id.GetId(x);\n\tint Idy=Id.GetId(y);\n\t\n\t\n\tif(Idx==Idy){\n\t\treturn LCADis(x,y,Idx);\n\t}\n\tif(dep[Idx]<dep[Idy]){\n\t\tswap(x,y);\n\t\tswap(Idx,Idy);\n\t}\n\tLL ret=0;\n\tfor(int i=20;i>=0;--i){\n\t\tif(dep[Idx]-(1<<i)>dep[Idy]){\n\t\t\tret+=dis[Idx]-dis[fa[Idx][i]];\n\t\t\tIdx=fa[Idx][i];\n\t\t}\n\t}\n\t\n\t\n\tif(fa[Idx][0]==Idy){\n\t\t\n\t\t\n\t\treturn ret+1+LCADis(T[Idx].fa,y,Idy)+LCADis(x,-1,Id.GetId(x));\n\t\t\n\t}\n\telse{\n\t\tif(dep[Idx]!=dep[Idy]){\n\t\t\tret+=dis[Idx]-dis[fa[Idx][0]];\n\t\t\tIdx=fa[Idx][0];\t\t\t\n\t\t}\n\t\tret+=LCADis(x,-1,Id.GetId(x));\n\t\tret+=LCADis(y,-1,Id.GetId(y));\n\t\t\n\t}\n\t\n\t\n\tfor(int i=20;i>=0;--i){\n\t\tif(fa[Idx][i]!=fa[Idy][i]){\n\t\t\tret+=dis[Idx]-dis[fa[Idx][i]];\n\t\t\tret+=dis[Idy]-dis[fa[Idy][i]];\n\t\t\tIdx=fa[Idx][i];\n\t\t\tIdy=fa[Idy][i];\n\t\t}\n\t}\n\t\n\t\n\tret+=2;\n\t\n\tx=T[Idx].fa;\n\ty=T[Idy].fa;\n\t\n\t\n\tint pos=fa[Idx][0];\n\t\n\t\n\tret+=LCADis(x,y,pos);\n\treturn ret;\n}\nint main(){\n//\tfreopen(\"P3248.in\",\"r\",stdin);\n//\tfreopen(\"P3248.out\",\"w\",stdout);\n\t\n\tread(n);read(m);read(Q);\n\tfor(int i=1;i<n;++i){\n\t\tint u,v;\n\t\tread(u);read(v);\n\t\tG.add(u,v);\n\t\tG.add(v,u);\n\t}\n\tG.DFS(1,0);\n\tfor(int i=1;i<=n;++i){\n\t\tPST.Update(root[i-1],root[i],1,n,pre[i]);\n\t}\n\tT[Id.Insert(n)].rt=1;\n\tT[1].Id=1;\n\tT[1].L=0;\n\tTnode=n;\n\t\n\tdep[1]=1;\n\t\n\twhile(m--){\n\t\tint x;\n\t\tLL to;\n\t\tread(x);read(to);\n\t\t\n\t\t\n\t\tint Par=Id.GetId(to);\n\t\tint Ed=PST.Query(root[dfn[T[Par].rt]-1],root[low[T[Par].rt]],1,n,to-T[Par].L);\n\t\t\n\t\t\n\t\tint now=Id.Insert(Tnode+siz[x]);\n\t\tT[now].fa=to;\n\t\tT[now].L=Tnode;\n\t\tT[now].rt=x;\n\t\tT[now].Id=now;\n\t\t\n\t\t\n\t\tfa[now][0]=Par;\n\t\tdep[now]=dep[Par]+1;\n\t\tdis[now]=dis[Par]+1+G.Dis(T[Par].rt,Ed);\n\t\t\n\t\tfor(int i=1;i<=20;++i)fa[now][i]=fa[fa[now][i-1]][i-1];\n\t\t\n\t\tTnode+=siz[x];\n\t}\n\t\n//\texit(0);\n\t\n\twhile(Q--){\n\t\tLL u,v;\n\t\tread(u);\n\t\tread(v);\n\t\tcout<<Dis(u,v)<<'\\n';\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1552402082,
        "uid": 28147,
        "name": "\u5289\u5b50\u98ba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3248 \u3010[HNOI2016]\u6811\u3011"
    },
    {
        "content": "\u6709\u610f\u601d\u7684\u9898\uff0c927ms \u62ff\u4e0b\u6700\u4f18\u89e3\u3002\n\n\u70b9\u6570\u6700\u591a $10^{10}$ \u4e2a\uff0c\u6ca1\u6cd5\u66b4\u529b\u62fc\u63a5\uff0c\u8003\u8651\u7b80\u5316\u5927\u6811\u3002\n\n\u6bcf\u6b21\u62fc\u63a5\uff0c\u6211\u4eec\u8bb0\u5f55 $x$\uff0c$to$ \u548c $to$ \u6240\u5728\u5927\u6811\u7684\u6839\u8282\u70b9 $rt$\u3002\u7136\u540e\u8fde\u4e24\u6761\u8fb9\uff1a $(rt,to)$ \u548c $(to,x)$\u3002\u672c\u8d28\u4e0a\u76f8\u5f53\u4e8e\u628a\u6bcf\u6b21\u63a5\u4e0a\u6765\u7684\u5b50\u6811\u7f29\u6210\u4e00\u4e2a\u70b9\u3002\n\n\u8fd9\u6837\u5927\u6811\u7684\u70b9\u6570\u6700\u591a\u5c31\u53ea\u6709 $2\\times 10^5$ \u4e2a\u4e86\u3002\n\n\u8003\u8651\u8be2\u95ee\u3002\u6211\u4eec\u5b9a\u4e49 $tu,tv$ \u4e3a\u4e24\u70b9\u5728\u6a21\u677f\u6811\u4e0a\u7684\u7f16\u53f7\uff0c$u,v$ \u4e3a\u5927\u6811\u7684\u7f16\u53f7\u3002\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206+\u4e3b\u5e2d\u6811\u7b97\u51fa $tu$\uff0c\u65b9\u6cd5\u663e\u7136\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $u,v$\u3002\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n1. $u,v$ \u5728\u540c\u4e00\u9897\u5b50\u6811\u5185\uff1a\u76f4\u63a5\u7b97\u51fa $tu,tv$ \u5728\u6a21\u677f\u6811\u4e2d\u8ba1\u7b97\u7b54\u6848\u3002\n\n2. $u,v$ \u4e2d\u4e00\u4e2a\u4e3a\u53e6\u4e00\u4e2a\u7684\u7956\u5148\uff1a\u4ee4 $u$ \u4e3a\u5927\u6811\u4e2d\u6df1\u5ea6\u66f4\u6df1\u7684\u8282\u70b9\uff0c\u6c42\u51fa\u5176\u5728\u5bf9\u5e94\u5b50\u6811\u4e2d\u7684\u6df1\u5ea6\uff0c\u8df3\u5230\u79bb $v$ \u6700\u8fd1\u7684\u8282\u70b9\uff0c\u7136\u540e\u8f6c\u5316\u5230\u6a21\u677f\u6811\u4e0a\u6c42\u8ddd\u79bb\u3002\n\n3. \u5176\u4ed6\u60c5\u51b5\uff1a\u5206\u522b\u6c42\u51fa $u,v$ \u5728\u5bf9\u5e94\u5b50\u6811\u4e2d\u7684\u6df1\u5ea6\uff0c\u5b9a\u4e49 $g$ \u4e3a $u,v$ \u5728\u5927\u6811\u4e0a\u7684 LCA\uff0c\u7136\u540e\u8ba9 $u,v$ \u5206\u522b\u8df3\u5230\u79bb $g$ \u6700\u8fd1\u7684\u8282\u70b9\uff0c\u8f6c\u5316\u5230\u6a21\u677f\u6811\u4e0a\u6c42\u8ddd\u79bb\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\u6ce8\u610f\u7f16\u53f7\u4e0d\u8981\u641e\u6df7\u3002\n\ncode:\n\n```cpp\n//fa[i][j]\u6a21\u677f\u6811\uff0cadj[u]\u6a21\u677f\u6811\uff0cfa2[i][j]\u65b0\u6811\n//siz[u]\u6a21\u677f\u6811\n//dep[u]\u6a21\u677f\u6811u\u6df1\u5ea6\uff0cdep2[u]\u65b0\u6811\u8282\u70b9u\u7684\u6df1\u5ea6\uff0cdis[u]\u65b0\u6811\u8282\u70b9u\u5728\u5927\u6811\u4e0a\u7684\u6df1\u5ea6\n//dfn[u],r[u]\u6a21\u677f\u6811\u7684dfs\u5e8f\n//a[i]dfs\u5e8f\u4e3ai\u7684\u8282\u70b9\u7f16\u53f7\n//rk[i]\u6a21\u677f\u6811\u8282\u70b9i\u5728\u5b50\u6811\u4e2d\u7684\u6392\u540d\n//rt[i]\u6a21\u677f\u6811\u4e0a\u4e3b\u5e2d\u6811\uff0ct[u]\u4e3b\u5e2d\u6811\n//c[i]\u6a21\u677f\u6811\u6811\u6869\u6570\u7ec4\n//cnt\u4e3adfn\u5e8f\u8ba1\u6570\u53d8\u91cf\n//tot\u4e3a\u65b0\u6811\u7f16\u53f7\u8ba1\u6570\u53d8\u91cf\n//num\u4e3a\u4e3b\u5e2d\u6811\u7f16\u53f7\u8ba1\u6570\u53d8\u91cf\n//sum[i]\u8fdb\u884ci\u6b21\u62fc\u63a5\u64cd\u4f5c\u540e\u5927\u6811\u7684\u5927\u5c0f\n//tx,ty\u6a21\u677f\u6811\u7f16\u53f7\n//x,y\u5927\u6811\u7f16\u53f7\n//dy[x]\u65b0\u6811\u8282\u70b9x\u5bf9\u5e94\u7684\u6a21\u677f\u6811\u7f16\u53f7\n//head[i]\u7b2ci\u6b21\u62fc\u63a5\u7684\u6839\u7684\u65b0\u6811\u7f16\u53f7\n//g[i]\u8ba1\u7b97\u6a21\u677f\u6811\u8282\u70b9\u6392\u540d\u7684\u8fc7\u7a0b\u6570\u7ec4\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+5;\nint n,m,q,fa[N][22],siz[N],dep[N],dep2[N],r[N],fa2[N][22],a[N],rk[N],rt[N],dfn[N],num=0,dy[N],c[N];\nint tot=1,cnt=0;\nll sum[N],head[N],dis[N];\nvector<int>adj[N];\nstruct node{int val,op;node(int val=0,int op=0):val(val),op(op){}};\nvector<node>g[N];\nstruct tree{int ch[2],d;}t[N*30];\nvoid dfs(int u,int lst){\n  dep[u]=dep[lst]+1;fa[u][0]=lst;siz[u]=1;dfn[u]=++cnt;a[cnt]=u;\n  for(int i=1;i<=20;++i)fa[u][i]=fa[fa[u][i-1]][i-1];\n  for(int i=0;i<adj[u].size();++i){\n    int v=adj[u][i];if(v==lst)continue;\n    dfs(v,u);siz[u]+=siz[v];\n  }\n  r[u]=cnt;\n  g[dfn[u]-1].push_back(node(u,-1));\n  g[r[u]].push_back(node(u,1));\n}\nint lca(int u,int v){\n  if(dep[u]<dep[v])swap(u,v);\n  for(int i=20;i>=0;--i)if(dep[fa[u][i]]>=dep[v])u=fa[u][i];\n  if(u==v)return u;\n  for(int i=20;i>=0;--i)if(fa[u][i]!=fa[v][i])u=fa[u][i],v=fa[v][i];\n  return fa[u][0];\n}\nint lbt(int x){return x&(-x);}\nvoid update(int i){for(;i<=n;i+=lbt(i))++c[i];}\nint getsum(int i){\n  int res=0;\n  for(;i;i-=lbt(i))res+=c[i];\n  return res;\n}\nvoid add(int v,int u,ll w){\n  dis[v]=dis[u]+w;dep2[v]=dep2[u]+1;\n  fa2[v][0]=u;\n  for(int i=1;i<=20;++i)fa2[v][i]=fa2[fa2[v][i-1]][i-1];\n}\nvoid change(int x,int &y,int l,int r,int k){\n  y=++num;t[y]=t[x];\n  if(l==r){++t[y].d;return;}\n  int mid=(l+r)>>1;\n  if(k<=mid)change(t[x].ch[0],t[y].ch[0],l,mid,k);\n  else change(t[x].ch[1],t[y].ch[1],mid+1,r,k);\n  t[y].d=t[t[y].ch[0]].d+t[t[y].ch[1]].d;\n}\nint query(int x,int y,int l,int r,int k){\n  if(l==r)return l;\n  int tmp=t[t[y].ch[0]].d-t[t[x].ch[0]].d,mid=(l+r)>>1;\n  if(tmp>=k)return query(t[x].ch[0],t[y].ch[0],l,mid,k);\n  else return query(t[x].ch[1],t[y].ch[1],mid+1,r,k-tmp);\n}\nint sonv;\ninline pair<int,int> lca2(int u,int v){\n  bool flag=0;\n  if(dep2[u]<dep2[v])swap(u,v),flag=1;\n  for(int i=20;i>=0;--i)if(dep2[fa2[u][i]]>dep2[v])u=fa2[u][i];\n  sonv=u;\n  if(dep2[u]>dep2[v])u=fa2[u][0];\n  if(u==v)return make_pair(u,v);\n  for(int i=20;i>=0;--i)if(fa2[u][i]!=fa2[v][i])u=fa2[u][i],v=fa2[v][i];\n  if(flag)swap(u,v);\n  return make_pair(u,v);\n}\nint P;\ninline int getreal(ll x,int i){\n  P=lower_bound(sum,sum+i+1,x)-sum;\n  int u=dy[head[P]];\n  return query(rt[dfn[u]-1],rt[r[u]],1,n,x-(P?sum[P-1]:0));\n}\ninline ll read()\n{\n\tll x=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\nint main(){\n  n=read();m=read();q=read();\n  for(int i=1;i<n;++i){\n    int u,v;u=read();v=read();\n    adj[u].push_back(v);adj[v].push_back(u);\n  }\n  dfs(1,0);\n  for(int i=1;i<=n;++i){\n    update(a[i]);\n    for(int j=0;j<g[i].size();++j){\n      node tmp=g[i][j];\n      rk[tmp.val]+=tmp.op*getsum(tmp.val);\n    }\n  }\n  for(int i=1;i<=n;++i)change(rt[i-1],rt[i],1,n,a[i]);\n  sum[0]=n;dep2[1]=dis[1]=head[0]=dy[1]=1;\n  for(int i=1;i<=m;++i){\n    ll tx,x,ty,y;tx=read();y=read();sum[i]=sum[i-1]+siz[tx];\n    x=rk[tx]+sum[i-1];\n    ty=getreal(y,i);\n    dy[++tot]=ty;\n    add(tot,head[P],dep[ty]-dep[dy[head[P]]]);\n    dy[++tot]=tx;head[i]=tot;\n    add(tot,tot-1,1);\n  }\n  while(q--){\n    ll u,v,ans=0;u=read();v=read();\n    int tu=getreal(u,m),hu=head[P],gu=dy[hu];\n    int tv=getreal(v,m),hv=head[P],gv=dy[hv];\n    int Lca;\n    if(hu==hv)ans=dep[tu]+dep[tv]-2*dep[lca(tu,tv)];\n    else{\n      pair<int,int>pr=lca2(hu,hv);\n      if(pr.first==pr.second){\n        if(pr.first==hu)swap(u,v),swap(tu,tv),swap(hu,hv),swap(gu,gv);\n        ans+=dep[tu]-dep[gu]+dis[hu]-dis[sonv];\n        u=dy[sonv];\n        ans+=dep[u]+dep[tv]-2*dep[lca(u,tv)];\n      }else{\n        ans+=dep[tu]-dep[gu]+dep[tv]-dep[gv]+dis[hu]-dis[pr.first]+dis[hv]-dis[pr.second];\n        u=dy[pr.first];v=dy[pr.second];\n        ans+=dep[u]+dep[v]-2*dep[lca(u,v)];\n      }\n    }\n    printf(\"%lld\\n\",ans);\n  }\n  return 0;\n}\n\n```\n",
        "postTime": 1683592485,
        "uid": 173864,
        "name": "EstasTonne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3248 [HNOI2016]\u6811"
    },
    {
        "content": "\u697c\u4e0a\u505a\u6cd5\u5df2\u7ecf\u8bb2\u5f97\u5f88\u8be6\u7ec6\u4e86 \u6211\u4e3b\u8981\u662f\u505a\u4e86\u4e2a\u6bd4\u76f4\u89c2\u7684\u56fe qwq\n\n\u7b80\u5355\u8bb2\u4e00\u4e0b\u505a\u6cd5\n\n\u5b50\u6811\u590d\u5236 $10^5$ \u8303\u56f4\u66b4\u529b\u590d\u5236\u80af\u5b9a\u5bc4\n\n\u6211\u4eec\u79f0\u590d\u5236\u7684\u4e00\u4e2a\u6a21\u677f\u6811\u4e0a\u7684\u5b50\u6811\u4e3a\u4e00\u4e2a\u6811\u4e0a\u7684\u5757\n\n\u7531\u4e8e\u53ea\u6709\u4e00\u4e2a\u6a21\u677f\u6811 \u672c\u8d28\u4e0d\u540c\u7684\u6811\u4e0a\u7684\u5757\u662f\u6709\u9650\u7684\n\n\u6211\u4eec\u8981\u6c42\u6811\u4e0a\u8def\u5f84\u957f\u5ea6 \u8003\u8651\u5c06\u590d\u5236\u5757\u5185\u548c\u5757\u5916\u7684\u7956\u5148\u5173\u7cfb\u5206\u5f00\u8ba8\u8bba \u5982\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qjmm30t5.png)\n\n\u4e24\u7ea2\u70b9\u4e4b\u95f4\u7684\u6811\u4e0a\u8def\u5f84 \u4e3a\u9ec4\u8272\u6240\u793a\n\n\u7531\u4e8e\u9700\u8981\u5728\u6811\u4e0a\u52a8\u6001\u52a0\u70b9 \u6240\u4ee5\u7528\u500d\u589e \u8003\u8651\u5177\u4f53\u5b9e\u73b0\uff1a\n\n$fa_{x,k}$ \u8868\u793a\u6811\u5757 $x$ \u7684\u7b2c $k$ \u7ea7\u7956\u5148\u7684\u6811\u5757\u7f16\u53f7\n\n$pa_{x,k}$ \u8868\u793a\u6811\u5757 $x$ \u5411\u4e0a\u8df3 $k$ \u4e2a\u6811\u5757\u540e\u843d\u5728\u8be5\u6811\u5757\u54ea\u4e2a\u70b9\u4e0a\n\n\u8ba8\u8bba\u4e00\u4e0b \n\n\u7279\u6b8a\u7684\u90e8\u5206\u53ea\u6709\u7ea2\u70b9\u5230\u6240\u5728\u6811\u5757\u6839\uff0c\u548c $\\text{lca}$ \u6811\u5757\u4e24\u4e2a $pa$ \u7684\u6811\u5757\u5185\u8ddd\u79bb\n\n\u7531\u4e8e\u590d\u5236\u6811\u5757\u65f6\u6811\u5757\u7f16\u53f7\u987a\u5e8f\u4e0e\u6a21\u677f\u6811\u76f8\u540c \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u8be5\u6811\u5757\u7b49\u4ef7\u5230\u6a21\u677f\u6811\u4e0a\u8ba8\u8bba \u6240\u4ee5\u53ea\u9700\u8981\u8f6c dfs \u5e8f \u4e3b\u5e2d\u6811\u7ef4\u62a4\u533a\u95f4 kth \u5373\u53ef\n\n\u5176\u4f59\u90e8\u5206\u6811\u4e0a\u5dee\u5206\u53ef\u4ee5\u5feb\u901f\u641e\n\n\u590d\u6742\u5ea6\u4f3c\u4e4e\u662f\u65f6\u7a7a\u90fd\u5355\u53ea $\\log$ \u7684 \u4e0d\u8fc7\u5e38\u6570\u6709\u4ebf\u4e9b\u5927 \n\n\u603b\u7684\u6765\u8bb2\u8fd9\u9053\u9898\u601d\u7ef4\u96be\u5ea6\u4e0d\u5927 \u662f\u9053\u5927\u6a21\u62df\u9898 \u4f46\u7ec6\u8282\u6709\u4e9b\u591a \u6bd4\u8f83\u96be\u8c03\u3002\u3002\u8c03\u4e863\u4e2a\u534a\u5c0f\u65f6\u3002\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\ninline int read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c<='9'&&c>='0')\n\t{\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x;\n}\nconst int N=1e5+3;\nint n;\nstruct edge\n{\n\tint to,nxt;\n}e[N<<1];\nint h[N],etot;\ninline void eadd(int x,int y)\n{\n\te[++etot].to=y;\n\te[etot].nxt=h[x];\n\th[x]=etot;\n}\nint dfn[N],dep[N],dcnt,fa1[N],siz[N],top[N],son[N];\nvoid dfs1(int x)\n{\n\tsiz[x]=1;\n\tint mxson=-1;\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(e[i].to!=fa1[x])\n\t\t{\n\t\t\tfa1[e[i].to]=x;\n\t\t\tdep[e[i].to]=dep[x]+1;\n\t\t\tdfs1(e[i].to);\n\t\t\tsiz[x]+=siz[e[i].to];\n\t\t\tif(siz[e[i].to]>mxson)\n\t\t\t{\n\t\t\t\tmxson=siz[e[i].to];\n\t\t\t\tson[x]=e[i].to;\n\t\t\t}\n\t\t}\n\t}\n}\nint a[N];\nvoid dfs2(int x,int topn)\n{\n\ttop[x]=topn;\n\tdfn[x]=++dcnt;\n\ta[dcnt]=x;\n\tif(!son[x])return;\n\tdfs2(son[x],topn);\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(e[i].to!=son[x]&&e[i].to!=fa1[x])\n\t\tdfs2(e[i].to,e[i].to);\n\t}\n}\ninline int get_lca(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(dep[top[x]]<dep[top[y]])swap(x,y);\n\t\tx=fa1[top[x]];\n\t}\n\tif(dep[x]>dep[y])swap(x,y);\n\treturn x;\n}\nint rt[N],ndtot;\nstruct seg\n{\n\tint val,son[2];\n}t[N*100];\n#define ls t[p].son[0]\n#define rs t[p].son[1]\ninline void update(int p)\n{\n\tt[p].val=t[ls].val+t[rs].val;\n}\nvoid modify(int l,int r,int x,int &p,int o)\n{\n\tp=++ndtot;\n\tif(l==r)\n\t{\n\t\tt[p].val=t[o].val+1;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid)\n\t{\n\t\tif(t[o].son[1])rs=t[o].son[1];\n\t\tmodify(l,mid,x,ls,t[o].son[0]);\n\t}\n\telse\n\t{\n\t\tif(t[o].son[0])ls=t[o].son[0];\n\t\tmodify(mid+1,r,x,rs,t[o].son[1]);\n\t}\n\tupdate(p);\n}\n\ninline int rk(int l,int r,int k)\n{\n\tint p=rt[r],o=rt[l-1];\n\tl=1,r=n;\n\twhile(1)\n\t{\n\t\tif(l==r)return l;\n\t\tint mid=l+r>>1;\n\t\tint tmp=t[ls].val-t[t[o].son[0]].val;\n\t\tif(k<=tmp)\n\t\t{\n\t\t\tp=ls;\n\t\t\to=t[o].son[0];\n\t\t\tr=mid;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tk-=tmp;\n\t\t\tp=rs;\n\t\t\to=t[o].son[1];\n\t\t\tl=mid+1;\n\t\t}\n\t}\n}\nint nd,tot;\nint st[N],ed[N],pa[N][20],fa[N][20],root[N],dd[N],dis[N];\ninline int get_dis(int x,int y)\n{\n\tint lca=get_lca(x,y);\n\treturn dep[x]+dep[y]-2*dep[lca];\n}\ninline int qry(int id,int p)\n{\n\tint res=rk(dfn[root[id]],dfn[root[id]]+siz[root[id]]-1,p-st[id]+1);\n\treturn res;\n}\ninline void solve(int x,int y,int idx,int idy)\n{\n\tif(dd[idx]<dd[idy])swap(idx,idy),swap(x,y);\n\tint res=get_dis(qry(idx,x),root[idx]);\n\tres+=dis[idx];\n\tfor(int j=log2(dd[idx]-dd[idy]+1)+1;~j;--j)\n\tif(dd[fa[idx][j]]>=dd[idy])\n\t{\n\t\tx=pa[idx][j];\n\t\tidx=fa[idx][j];\n\t}\n\tif(idx==idy)\n\t{\n\t\tres-=dis[idx];\n\t\tres-=get_dis(qry(idx,x),root[idx]);\n\t}\n\telse\n\t{\n\t\tres+=dis[idy];\n\t\tres+=get_dis(qry(idy,y),root[idy]);\n\t\tfor(int j=log2(dd[idx]+1)+1;~j;--j)\n\t\t{\n\t\t\tif(fa[idx][j]!=fa[idy][j])\n\t\t\t{\n\t\t\t\tx=pa[idx][j];\n\t\t\t\ty=pa[idy][j];\n\t\t\t\tidx=fa[idx][j];\n\t\t\t\tidy=fa[idy][j];\n\t\t\t}\n\t\t}\n\t\tx=pa[idx][0];\n\t\ty=pa[idy][0];\n\t\tidx=fa[idx][0];\n\t\tidy=fa[idy][0];\n\t\tres-=2*dis[idx];\n\t\tres-=get_dis(qry(idx,x),root[idx]);\n\t\tres-=get_dis(qry(idy,y),root[idy]);\n\t}\n\tres+=get_dis(qry(idx,x),qry(idy,y));\n\tprintf(\"%lld\\n\",res);\n}\nsigned main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\t//freopen(\"out.txt\",\"w\",stdout);\n\tn=read();\n\tint m=read(),q=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\teadd(x,y);\n\t\teadd(y,x);\n\t}\n\tdfs1(1);\n\tdfs2(1,1);\n\tfor(int i=1;i<=n;i++)\n\tmodify(1,n,a[i],rt[i],rt[i-1]);\n\tst[1]=1;\n\ttot=ed[1]=siz[1];\n\tnd=root[1]=dd[1]=1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=read(),p=read();\n\t\tst[++nd]=tot+1;\n\t\ted[nd]=tot+siz[x];\n\t\ttot+=siz[x];\n\t\tint id=lower_bound(ed+1,ed+nd+1,p)-ed;\n\t\tpa[nd][0]=p;\n\t\tfa[nd][0]=id;\n\t\troot[nd]=x;\n\t\tdd[nd]=dd[id]+1;\n\t\tdis[nd]=dis[id]+1+get_dis(root[id],qry(id,p));\n\t\tfor(int j=1;;j++)\n\t\t{\n\t\t\tif(fa[fa[nd][j-1]][j-1]==0)break;\n\t\t\tfa[nd][j]=fa[fa[nd][j-1]][j-1];\n\t\t\tpa[nd][j]=pa[fa[nd][j-1]][j-1];\n\t\t}\n\t}\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\tint idx=lower_bound(ed+1,ed+nd+1,x)-ed,idy=lower_bound(ed+1,ed+nd+1,y)-ed;\n\t\tif(idx==idy)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",get_dis(qry(idx,x),qry(idy,y)));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsolve(x,y,idx,idy);\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n\n\n",
        "postTime": 1651071625,
        "uid": 223560,
        "name": "_HL_",
        "ccfLevel": 0,
        "title": "P3248 [HNOI2016]\u6811 \u9898\u89e3"
    }
]