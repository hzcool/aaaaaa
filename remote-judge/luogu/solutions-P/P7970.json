[
    {
        "content": "\u9996\u5148\u53d1\u73b0 $n,m$ \u662f\u6ca1\u6709\u7528\u7684\uff0c\u53ef\u4ee5\u5047\u60f3\u5e73\u9762\u662f\u65e0\u9650\u5927\u7684\u3002\n\n\u7136\u540e\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n\u5bf9\u4e8e\u4efb\u610f\u9ed1\u683c $(x,y)[x,y>0]$\uff0c\u90fd\u6709 $(x-1,y)$ \u4e0e $(x,y-1)$ **\u4e24\u8005\u5176\u4e00**\u662f\u9ed1\u683c\u3002\n\n**\u8bc1\u660e 1\uff1a**\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rsevgvwz.png)\n\n\uff08\u9ed1\u683c\u7ec4\u6210\u4e86\u8c22\u5c14\u5bbe\u65af\u57fa\u4e09\u89d2\u72b6\u7269\uff09\n\n**\u8bc1\u660e 2\uff1a**\n\n\u7531\u5bf9\u79f0\u6027\uff0c\u4e14 $x\\ \\text{and}\\ y=0$\uff0c\u4e0d\u59a8\u8bbe $\\text{lowbit}(x)<\\text{lowbit}(y)$\u3002\n\n\u7531\u4e8e $x-1=x-\\text{lowbit}(x)+(\\text{lowbit}(x)-1)$\uff0c\u5c31\u662f\u5c06\u4e8c\u8fdb\u5236\u4e2d\u672b\u5c3e\u7684 $100\\dots0$ \u53d8\u4e3a $011\\dots1$\u3002\n\n\u6240\u4ee5 $(x-1)\\ \\text{and}\\ y=0$\uff0c\u5bf9\u5076\u5730 $x\\ \\text{and}\\ (y-1)\\ne 0$\uff0c\u5f97\u8bc1\u3002\n\n* * *\n\n\u6240\u4ee5\u9ed1\u683c\u5f62\u6210\u4e86\u4e00\u68f5\u5411\u53f3\u4e0b\u7684\u6811\u554a\uff01\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u77e9\u5f62\uff0c\u5176\u5185\u7684\u8fde\u901a\u5757\u6570\uff08\u68ee\u6797\u7684\u6811\u4e2a\u6570\uff09\u7b49\u4e8e\u77e9\u5f62\u5de6\u4fa7\u548c\u4e0a\u4fa7\u7684\u8fb9\u6570\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sztv6p7f.png)\n\n\uff08\u5c31\u662f\u4e0a\u56fe\u7684\u84dd\u5708\u6570\u91cf\uff09\n\n\u5f62\u5f0f\u5316\u5730\uff0c\u6211\u4eec\u4e0d\u59a8\u53ea\u8003\u8651\u4e0a\u4fa7\u7684\u8fb9\uff0c\u4e2a\u6570\u4e3a\uff08\u77e9\u5f62\u4e3a $(x,y,xx,yy)$\uff09\uff1a\n$$\\begin{aligned}\n&\\sum_{i=y}^{yy}[i\\ \\text{and}\\ x=0][i\\ \\text{and}\\ (x-1)=0]\n\\\\\n=&\\sum_{i=y}^{yy}[i\\ \\text{and}\\ (x\\ \\text{or}\\ (x-1))=0]\n\\\\\n=&\\sum_{i=0}^{yy}[i\\ \\text{and}\\ (x\\ \\text{or}\\ (x-1))=0]\n-\\sum_{i=0}^{y-1}[i\\ \\text{and}\\ (x\\ \\text{or}\\ (x-1))=0]\n\\end{aligned}\n$$\n\n\u7136\u540e $O(\\log)$ DP \u5c31\u505a\u5b8c\u4e86\u3002\n\n```cpp\n/*\n* Author: ShaoJia\n* Last Modified time: 2022-09-19 11:14:26\n* Motto: We'll be counting stars.\n*/\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,j,k) for(int i=(j);i<=(k);i++)\nint f[31][2];//[0,i-1] did, 0 didnt exceed y, 1 exceed y\nint work(int x,int y){\n\tif(y<0 || x==0) return 0;\n\tx|=x-1;\n\tbool X,Y;\n\tint z;\n\tFor(i,1,30){\n\t\tf[i][0]=f[i][1]=0;\n\t\tX=x>>(i-1)&1;\n\t\tY=y>>(i-1)&1;\n\t\tz=f[i-1][0]+f[i-1][1];\n\t\tif(!X){\n\t\t\tif(Y){\n\t\t\t\tf[i][0]+=f[i-1][0];\n\t\t\t\tf[i][1]+=f[i-1][1];\n\t\t\t}else{\n\t\t\t\tf[i][1]+=z;\n\t\t\t}\n\t\t}\n\t\tif(Y){\n\t\t\tf[i][0]+=z;\n\t\t}else{\n\t\t\tf[i][0]+=f[i-1][0];\n\t\t\tf[i][1]+=f[i-1][1];\n\t\t}\n\t}\n\treturn f[30][0];\n}\nsigned main(){ios::sync_with_stdio(false),cin.tie(nullptr);\n\tint T,x,y,xx,yy;\n\tcin>>T>>T>>T;\n\tf[0][0]=1;\n\twhile(T--){\n\t\tcin>>x>>y>>xx>>yy;\n\t\tif(!x && !y) cout<<\"1\\n\";\n\t\telse cout<<(work(x,yy)-work(x,y-1))+(work(y,xx)-work(y,x-1))<<\"\\n\";\n\t}\nreturn 0;}\n```",
        "postTime": 1663559611,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P7970 [KSN2021] Binary Sea\uff08\u4e8c\u8fdb\u5236\u4e0e\u8c22\u5c14\u5bbe\u65af\u57fa\u4e09\u89d2\uff09"
    },
    {
        "content": "## Analysis\n\n\u901a\u8fc7\u6253\u8868\u4e0d\u96be\u53d1\u73b0\uff1a\u6ee1\u8db3 $x\\text{ and }y=0$ \u7684\u70b9 $(x,y)$ \u6784\u6210\u4e86\u4e00\u68f5\u6811\u3002\u56e0\u6b64\u67d0\u4e00\u4e2a\u533a\u57df\u5185\u7684\u8fde\u901a\u5757\u6570\u91cf\u7684 \u70b9\u6570 - \u8fb9\u6570\u3002\n\n\u8fdb\u4e00\u6b65\u89c2\u5bdf\uff0c\u53d1\u73b0\u5bf9\u4e8e\u4efb\u610f\u4e0d\u662f $(0,0)$ \u7684\u9ed1\u8272\u70b9 $(x,y)$\uff0c$(x,y-1)$ \u4e0e $(x-1,y)$ \u4e2d\u6070\u6709\u4e00\u4e2a\u70b9\u662f\u9ed1\u8272\u70b9\u3002\n\n---\n\n\u8bc1\u660e\uff1a\u8bbe $x$ \u7684\u4e8c\u8fdb\u5236\u6700\u4f4e $n$ \u4f4d\u5747\u4e3a $0$\uff0c$y$ \u7684\u4e8c\u8fdb\u5236\u6700\u4f4e $m$ \u4f4d\u5747\u4e3a $0$\u3002\u7531\u4e8e $x\\text{ and }y=0$\uff0c\u6545 $n\\not=m$\u3002\u4e0d\u59a8\u4ee4 $n<m$\u3002\n\n\u5f53\u9009\u62e9\u5c06 $n$ \u8fdb\u884c $-1$ \u64cd\u4f5c\u65f6\uff0c$n$ \u7684\u4e8c\u8fdb\u5236\u6700\u4f4e $n$ \u4f4d\u53d8\u4e3a $1$\uff0c\u7b2c $n+1$ \u4f4d\u53d8\u4e3a $0$\u3002\u800c $m$ \u7684\u6700\u4f4e $n+1$ \u4f4d\u4e00\u5b9a\u90fd\u662f $0$\uff0c\u6545 $(x-1)\\text{ and }y=0$\u3002\n\n\u5f53\u9009\u62e9\u5c06 $m$ \u8fdb\u884c $-1$ \u64cd\u4f5c\u65f6\uff0c$m$ \u7684\u4e8c\u8fdb\u5236\u6700\u4f4e $m$ \u4f4d\u53d8\u4e3a $1$\uff0c\u53c8\u56e0\u4e3a $n<m$\uff0c\u6545\u5728\u7b2c $n+1$ \u4f4e\u4f4d\u5904 $x$ \u4e0e $y-1$ \u5747\u4e3a $1$\uff0c\u6545 $x\\text{ and }y\\not=0$\u3002\n\n\u547d\u9898\u5f97\u8bc1\u3002\n\n---\n\n\u56e0\u6b64\u5728\u8003\u8651\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u5185\u7684\u8fde\u901a\u5757\u4e2a\u6570\u65f6\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u7b2c\u4e00\u884c\u4e0e\u7b2c\u4e00\u5217\u7684\u70b9\u6570\u4e0e\u8fb9\u6570\u5373\u53ef\u3002\n\n\u95ee\u9898\u8f6c\u6362\u4e3a\uff1a\u6c42 $\\sum\\limits_{i=l}^r[i\\text{ and }x=0]$ \u4e0e $\\sum\\limits_{i=l}^r[(i\\text{ or }(i+1))\\text{ and }x=0]$\u3002\n\n\u6570\u4f4d dp \u4e00\u4e0b\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(q\\log n)$\u3002\n\n\u6c42\u89e3 $\\sum\\limits_{i=l}^r[i\\text{ and }x=0]$ \u662f\u4e00\u4e2a\u6807\u51c6\u7684\u6570\u4f4d dp\uff0c\u4e0d\u518d\u8ffd\u8ff0\u3002\n\n\u6c42\u89e3 $\\sum\\limits_{i=l}^r[(i\\text{ or }(i+1))\\text{ and }x=0]$ \u65f6\uff0c\u53d1\u73b0 $x$ \u53d8\u4e3a $x\\text{ or }(x+1)$ \u53ea\u662f\u5c06 $x$ \u7684\u6700\u4f4e $0$ \u4f4d\u53d8\u4e3a\u4e86 $1$\u3002\u90a3\u4e48\u5728\u6570\u4f4d dp \u7684 dfs \u65f6\u53ea\u8981\u518d\u4f20\u4e00\u4e2a\u53c2\u6570\uff0c\u8868\u793a\u540e\u9762\u662f\u5426\u9700\u8981\u6709\u4e00\u4e2a\u201c\u7a7a\u95f2\u201d\u7684 $0$ \u5373\u53ef\u3002\u975e\u5e38\u6734\u7d20\u3002\n\n## Code\n\n```cpp\nint dig[31],f[31][2],g[31][2][2];\nint dp1(int x,int lim,int dep){\n  if(f[dep][lim]!=-1) return f[dep][lim];\n  int res=0,tmp=((x>>dep)&1);\n  if(dep==0){\n    if(tmp==0){//can be 0 or 1\n      if(lim){\n        res+=2;\n      }else{\n        if(dig[dep]==0) res+=1;\n        else res+=2;\n      }\n    }else{//only 0\n      res+=1;\n    }\n    return f[dep][lim]=res;\n  }\n  if(tmp==0){//can be 0 or 1\n    if(lim){//no limit\n      res+=2*dp1(x,1,dep-1);\n    }else{\n      if(dig[dep]==0) res+=dp1(x,0,dep-1);\n      else res+=dp1(x,0,dep-1)+dp1(x,1,dep-1);\n    }\n  }else{//only 0\n    if(lim){//no limit\n      res+=dp1(x,1,dep-1);\n    }else{\n      if(dig[dep]==0) res+=dp1(x,0,dep-1);\n      else res+=dp1(x,1,dep-1);\n    }\n  }\n  return f[dep][lim]=res;\n}\nint calc1(int l,int r,int x){//(num&x)=0,num[l,r]\n  if(l>r) return 0;\n  int res=0;\n  For(i,0,30) dig[i]=((r>>i)&1);\n  memset(f,-1,sizeof(f));\n  res=dp1(x,0,30);\n  if(l){\n    For(i,0,30) dig[i]=(((l-1)>>i)&1);\n    memset(f,-1,sizeof(f));\n    res-=dp1(x,0,30);\n  }\n  return res;\n}\nint dp2(int x,int lim,int dep,int ned){//lim means number limit, ned means need one dig to be 0\n  if(g[dep][lim][ned]!=-1) return g[dep][lim][ned];\n  int res=0,tmp=((x>>dep)&1);\n  if(dep==0){\n    if(ned){//must be 0\n      res+=1;\n    }else{\n      if(tmp==0){\n        if(lim){\n          res+=2;\n        }else{\n          if(dig[dep]==0) res+=1;\n          else res+=2;\n        }\n      }\n    }\n    return g[dep][lim][ned]=res;\n  }\n  if(tmp==0){//can be 0 or 1, when 0, ned=0\n    if(lim){//no limit\n      res+=dp2(x,1,dep-1,0)+dp2(x,1,dep-1,ned);\n    }else{\n      if(dig[dep]==0){//only 0\n        res+=dp2(x,0,dep-1,0);\n      }else{\n        res+=dp2(x,0,dep-1,ned)+dp2(x,1,dep-1,0);\n      }\n    }\n  }else{//only 0, ned=1\n    if(lim){//no limit\n      res+=dp2(x,1,dep-1,1);\n    }else{\n      if(dig[dep]==0){//only 0\n        res+=dp2(x,0,dep-1,1);\n      }else{\n        res+=dp2(x,1,dep-1,1);\n      }\n    }\n  }\n  return g[dep][lim][ned]=res;\n}\nint calc2(int l,int r,int x){//((num|num+1)&x)=0,num[l,r]\n  if((x&1)||l>r) return 0;\n  int res=0;\n  For(i,0,30) dig[i]=((r>>i)&1);\n  memset(g,-1,sizeof(g));\n  res=dp2(x,0,30,0);\n  if(l){\n    For(i,0,30) dig[i]=(((l-1)>>i)&1);\n    memset(g,-1,sizeof(g));\n    res-=dp2(x,0,30,0);\n  }\n  return res;\n}\nvoid work(){\n  int lx,ly,rx,ry; qin>>lx>>ly>>rx>>ry;\n  int res=calc1(lx,rx,ly)-calc2(lx,rx-1,ly)+calc1(ly,ry,lx)-calc2(ly,ry-1,lx)-((lx&ly)==0);\n  qout<<res<<\"\\n\";\n}\n```",
        "postTime": 1663559004,
        "uid": 169574,
        "name": "Enucai",
        "ccfLevel": 7,
        "title": "P7970 [KSN2021] Binary Sea"
    }
]