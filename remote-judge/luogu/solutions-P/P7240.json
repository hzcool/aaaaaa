[
    {
        "content": "\uff08\u524d\u7f6e\uff1a\u8fd9\u7bc7\u9898\u89e3\u4e2d\u4e0d\u533a\u5206\u201c\u83dc\u5730\u201d\u201c\u83dc\u7530\u201d\u201c\u70b9\u201d\u7b49\u540d\u8bcd\uff0c\u504f\u610f\u8bc6\u6d41\uff0c\u5efa\u8bae\u611f\u6027\u7406\u89e3\u3002\uff09\n\n\u9996\u5148\u6211\u4eec\u8003\u8651 $2k\\ge n$ \u7684\u60c5\u51b5\u3002\n\n\u5f53 $n=3$\uff0c\u6b64\u65f6 $k$ \u53ea\u80fd\u662f $2$ \u6216\u8005 $3$\uff0c\u6211\u4eec\u53d1\u73b0\u5154\u5b50\u600e\u4e48\u8dd1\u6ca1\u5565\u533a\u522b\uff0c\u6240\u4ee5\u5c31\u627e\u5230\u6700\u5927\u7684 $k$ \u4e2a $r_i$ \u6c42\u548c\u5373\u53ef\u3002\n\n\u5f53 $n\\gt3$\uff0c\u6211\u4eec\u76f4\u63a5\u4f9d\u6b21\u5728\u6240\u6709\u6807\u53f7\u4e3a\u5947\u6570\u7684\u83dc\u5730\u4e0a\u5168\u90fd\u6765\u4e00\u67aa\uff0c\u5154\u5b50\u4e00\u5b9a\u5168\u6253\u5b8c\u4e86\uff0c\u5269\u4e0b\u7684\u67aa\u968f\u4fbf\u4e71\u6253\u5c31\u597d\u4e86\uff0c\u7b54\u6848\u662f $\\sum_{i=1}^n r_i$\u3002\u8fd9\u91cc\u8981\u7528\u5230\u8fd9\u4e48\u4e00\u4e2a\u6027\u8d28\uff0c\u6309\u8fd9\u4e2a\u6253\u6cd5\uff0c\u6253\u5b8c\u4e00\u4e2a\u70b9\u4e4b\u540e\u5176\u4e0e\u5176\u4e24\u8fb9\u518d\u4e5f\u4e0d\u4f1a\u6709\u5154\u5b50\uff0c\uff08\u5154\u5b50\u4e0d\u80fd\u76f4\u63a5\u5728\u4e00\u4e2a\u70b9\u7684\u5de6\u53f3\u90bb\u70b9\u6a2a\u8df3\uff0c\u800c $n=3$ \u8fdd\u80cc\u4e86\u8fd9\u4e00\u70b9\uff0c\u6545\u987b\u5355\u72ec\u8003\u8651\u3002\uff09\u800c\u8fd9\u5728\u8fd9\u91cc\u662f\u663e\u7136\u7684\u3002\n\n\uff08\u4e0d\u8fc7\u5b9e\u9645\u4e0a $n=k=3$ \u53ef\u4ee5\u5408\u5e76\u5230\u8fd9\u91cc\u6765\uff0c\u53ea\u8981\u7279\u5224\u4e00\u4e0b $n=3,k=2$ \u7684\u65f6\u5019\u8981\u628a\u52a0\u51fa\u6765\u7684\u603b\u548c\u51cf\u6389\u6700\u5c0f\u7684\u4e00\u4e2a $r_i$\u3002\uff09\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8003\u8651 $2k\\lt n$\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6700\u597d\u5c31\u662f\u628a $k$ \u67aa\u6253\u5168\u4e86\u3002\uff08\u5176\u5b9e\u4e0d\u6253\u5168\u4e5f\u6709\u53ef\u80fd\uff0c\u4e4b\u6240\u4ee5\u548c\u4e0a\u9762\u5206\u5f00\uff0c\u540e\u9762\u4f1a\u89e3\u91ca\u3002\uff09\u4e0d\u96be\u60f3\u5230\u7279\u5224 $k=0$ \u7136\u540e\u5269\u4e0b\u7684\u60c5\u51b5\u76f4\u63a5\u52a8\u6001\u89c4\u5212\u3002\u6211\u4eec\u73b0\u5728\u8003\u8651\u5728\u6700\u4f18\u7b56\u7565\u4e0b\uff08\u5047\u8bbe $k$ \u67aa\u6253\u6ee1\u7684\u60c5\u51b5\u4e0b\uff09\u8bc1\u660e\u8fd9\u4e48\u4e24\u4ef6\u4e8b\u60c5\uff1a\n\n1. \u4e00\u7247\u83dc\u5730\u53ea\u4f1a\u88ab\u6253\u4e00\u67aa\u3002\n\n2. \u4e0d\u5b58\u5728\u76f8\u90bb\u7684\u4e24\u7247\u83dc\u5730\u90fd\u88ab\u6253\u67aa\u4e86\u3002\n\n\u9996\u5148\uff0c\u5728 $n=3$ \u7684\u65f6\u5019\uff0c\u6211\u4eec\u8fc4\u4eca\u4e3a\u6b62\u8fd8\u6ca1\u7279\u5224\u8fc7\u7684\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\uff1a$k=1$\u3002\u8fd9\u662f\u663e\u7136\u6210\u7acb\u7684\u3002\n\n\u5426\u5219\u7684\u8bdd\uff0c\u6b32\u8bc1\u660e\u4e4b\uff0c\u6211\u4eec\u8bd5\u56fe\u53bb\u8bc1\u660e\u4e4b\u524d\u6211\u4eec\u5206\u6790 $2k\\ge n\\gt3$ \u7684\u65f6\u5019\u63d0\u5230\u7684\u90a3\u4e2a\u7ed3\u8bba\uff1a\u5b58\u5728\u4e00\u4e2a\u6700\u4f18\u7b56\u7565\u4e0b\u4f7f\u5f97\u6253\u5b8c\u4e00\u4e2a\u70b9\u4e4b\u540e\u5176\u4e0e\u5176\u4e24\u8fb9\u518d\u4e5f\u4e0d\u4f1a\u6709\u5154\u5b50\u3002\u6253\u5b8c\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u5982\u679c\u5b83\u4e24\u8fb9\u4e0d\u518d\u6709\u5154\u5b50\uff0c\u90a3\u4e48\u663e\u7136\u4e2d\u95f4\u4e5f\u4e0d\u518d\u4f1a\u6709\u5154\u5b50\uff08\u56e0\u4e3a\u4e0d\u4f1a\u6709\u5154\u5b50\u88ab\u5413\u8fc7\u6765\uff09\u3002\u7136\u540e\u8fd9\u4e2a\u95ee\u9898\u7684\u7ed3\u6784\u662f\u5bf9\u79f0\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u53ea\u8981\u8bc1\u660e\uff1a\u6253\u5b8c $r_1$ \u4e4b\u540e\uff0c$r_2$ \u4e0d\u4f1a\u518d\u6709\u5154\u5b50\u3002\n\n\u6211\u4eec\u8003\u8651\u53cd\u4e4b\uff0c$r_2$ \u7684\u5154\u5b50\u662f\u54ea\u91cc\u6765\u7684\uff1f\u5982\u679c\u662f\u4ece $r_1$ \u6765\u7684\uff0c\u90a3 $r_1$ \u7684\u5154\u5b50\u53ea\u80fd\u662f\u4ece $r_n$ \u6765\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5bf9 $r_n$ \u5c55\u5f00\u8bc1\u660e\u5373\u53ef\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u8fd9\u91cc\u5176\u5b9e\u662f\u4e0d\u59a8\u8bbe $r_2$ \u6bd4 $r_n$ **\u5148**\u51fa\u73b0\u5154\u5b50\uff0c\u90a3 $r_2$ \u7684\u5154\u5b50\u5c31\u53ea\u80fd\u662f\u4ece $r_3$ \u88ab\u5413\u8fc7\u6765\u7684\u3002\u8fd9\u53ea\u80fd\u662f\u4e00\u79cd\u60c5\u51b5\uff1a$r_4$ \u88ab\u6253\u4e86\u4e00\u67aa\uff0c\u7136\u540e $r_3$ \u7684\u5154\u5b50\u88ab\u5413\u5230\u4e86 $r_2$\uff0c\u6b64\u540e $r_3$ \u53c8\u88ab\u6253\u4e86\u4e00\u67aa\uff0c\u7136\u540e $r_3$ \u7684\u5154\u5b50\u53c8\u5230\u4e86 $r_2$\u2026\u2026\u4e0d\u8fc7\u8fd9\u4e2a\u65f6\u5019 $r_3$ \u54ea\u6765\u7684\u5154\u5b50\uff1f\u56e0\u4e3a\u5982\u679c\u662f\u7a7a\u67aa\uff0c\u4e0e\u6211\u4eec\u67aa\u67aa\u4e0d\u7a7a\u7684\u5047\u8bbe\u77db\u76fe\u3002\u8fd9\u8bf4\u660e $r_4$ \u5728 $r_1$ \u4e4b\u524d\u5c31\u8fdd\u80cc\u4e86\u6211\u4eec\u4e0a\u9762\u6b32\u8bc1\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e0d\u59a8\u5047\u8bbe $r_1$ \u662f\u6700\u4f18\u7b56\u7565\u4e0b\u6700\u5148\u8fdd\u80cc\u6027\u8d28\u7684\u70b9\uff0c\u4fbf\u53ef\u5bfc\u51fa\u77db\u76fe\u3002\n\n\uff08\u4ee5\u4e0a\u662f\u4f5c\u8005\u7684\u8bc1\u660e\u5fc3\u8def\uff0c\u53ef\u80fd\u6bd4\u8f83\u610f\u8bc6\u6d41\uff0c\u4f46\u770b\u5f97\u61c2\u5c31\u884c=.=\uff09\n\n\u7136\u540e\u6709\u4e86\u8fd9\u4e24\u6761\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u8ba1 DP \u4e86\uff1a\n\n\u8bbe $dp_{i,j,k}$ \u8868\u793a\uff1a\u6253 $i$ \u67aa\uff0c\u6253\u524d $k$ \u4e2a\u70b9\uff0c\u7b2c $k$ \u4e2a\u70b9\u6253\u6ca1\u6253\uff08$j=0$ \u5c31\u662f\u6ca1\u6253\uff0c$j=1$ \u5c31\u662f\u6253\u4e86\uff09\u3002**\u8fd9\u91cc\u6211\u4eec\u5f3a\u5236\u7b2c\u4e00\u4e2a\u70b9\u4e0d\u80fd\u6253\u3002**\n\n\u8fd9\u4e2a\u4e1c\u897f\u7684\u8f6c\u79fb\u975e\u5e38\u663e\u7136\uff0c\u5982\u679c\u6ca1\u6253\uff0c\u90a3\u5c31\u679a\u4e3e\u4e0a\u4e00\u4e2a\u70b9\u6253\u6ca1\u6253\uff1b\u5982\u679c\u6253\u4e86\uff0c\u5c31\u679a\u4e3e\u4e0a\u4e00\u67aa\u5728\u4e0d\u5728 $k-2$\u3002\uff08\u5982\u679c\u5728\u5c31\u62ff\u8fc7\u6765\u8f6c\u79fb\uff0c\u5982\u679c\u4e0d\u4e00\u5b9a\u5728\u5c31\u76f4\u63a5\u7528 $k-1$ \u6ca1\u6253\u6765\u8f6c\u79fb\u3002\uff09\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5206\u5462\uff1f\u56e0\u4e3a\u5982\u679c\u5728 $k-2$ \u7684\u8bdd\u8981\u591a\u8003\u8651\u4e00\u4e2a $r_{k-1}$ \u88ab\u5413\u4e86\u8fc7\u6765\u2026\u2026\n\n\u4f46\u8fd9\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u7b2c $n$ \u4e2a\u70b9\u548c\u7b2c $1$ \u4e2a\u70b9\u7684\u72b6\u6001\u4f1a\u4e92\u76f8\u5e72\u6270\u3002\u4e0d\u8fc7\u8fd9\u5176\u5b9e\u5f88\u597d\u5904\u7406\u3002\u5c31\uff0c\u5206\u4e24\u7c7b\uff0c\u7b2c\u4e00\u4e2a\u70b9\u6ca1\u6253\uff08\u76f4\u63a5\u7528\u4e0a\u9762\u7684\u90a3\u4e2a DP \u5373\u53ef\uff09\uff0c\u548c\u7b2c\u4e00\u4e2a\u70b9\u6253\u4e86\u3002\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u8bdd\u76f4\u63a5\u5f3a\u5236\u7b2c\u4e00\u4e2a\u70b9\u6253\u6389\uff0c\u90a3\u4e48\u7b2c $n$ \u4e2a\u70b9\u7684 $r_n$ \u53ea\u5154\u5b50\u4f1a\u88ab\u5413\u8d70\uff08\u7a0d\u5fae\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u4e86\uff09\uff0c\u8fd9\u4e2a\u65f6\u5019\u7531\u7ed3\u8bba\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\u4e00\u5b9a\u4e0d\u4f1a\u6253\u7b2c\u4e8c\u5757\u83dc\u7530\u4e86\uff0c\u4e8e\u662f\u53ef\u4ee5\u628a\u83dc\u7530\u4eec\u5e73\u79fb\u4e00\u4e0b\uff08\u5b9e\u73b0\u662f\u4f20\u6307\u9488\uff0c\u56e0\u4e3a\u8fd9\u91cc\u76f8\u5f53\u4e8e\u628a\u7b2c\u4e8c\u5757\u83dc\u7530\u641e\u6210\u4e86\u90a3\u4e2a\u4e00\u5b9a\u4e0d\u80fd\u6253\u7684\u7b2c\u4e00\u5757\u83dc\u7530\uff09\uff0c\u7136\u540e\u518d DP\u3002\n\n\u4ee3\u7801\u5f88\u597d\u5199\u3002\u4f46\u6709\u4e2a\u7ec6\u8282\uff1a\u4e0d\u5408\u6cd5\u72b6\u6001\u8981\u8bbe\u6210 $-\\infty$\uff08\u53ef\u4ee5\u7528 `memset 0xc0` \u5b9e\u73b0\uff09\uff0c\u800c\u4e0d\u662f $0$\u3002\u53e6\u5916\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u5199\u6cd5\u662f\u53ef\u4ee5\u5bf9 $i$ \u8dd1\u6eda\u52a8\u6570\u7ec4\u7701\u6389\u4e00\u7ef4\uff0c\u4e8e\u662f\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u4e3a\u7ebf\u6027\uff08\u65f6\u95f4\u8fd8\u662f\u5e73\u65b9\uff09\u3002\n\n\u4ee3\u7801\u53c2\u8003\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconstexpr int N = 4009;\nint dp[2][2][N];\nint DP(int* r, int n, int k) {\n  memset(dp, 0xc0, sizeof dp);\n  memset(dp[0][0], 0, sizeof dp[0][0]);\n  for (int i = 1; i <= k; ++i)\n    for (int j = 2; j <= n; ++j)\n      dp[i & 1][0][j] = max(dp[i & 1][0][j - 1], dp[i & 1][1][j - 1]),\n             dp[i & 1][1][j] =\n                 max(dp[~i & 1][0][j - 1], dp[~i & 1][1][j - 2] + r[j - 1]) +\n                 r[j];\n  return max(dp[k & 1][0][n], dp[k & 1][1][n]);\n}\nint n, k, r[N];\nint main() {\n  cin >> n >> k;\n  for (int i = 1; i <= n; ++i) cin >> r[i];\n  int ans;\n  if (!k)\n    ans = 0;\n  else if ((k << 1) >= n)\n    ans = accumulate(r + 1, r + n + 1,\n                     n == 3 && k == 2 ? -*min_element(r + 1, r + n + 1) : 0);\n  else\n    ans = DP(r, n, k), r[n - 1] += r[n],\n    ans = max(ans, DP(r + 1, n - 2, k - 1) + r[1]);\n  return cout << ans << endl, 0;\n}\n```\n\n\u4ee5\u4e0a\u3002",
        "postTime": 1642589215,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "hodf \u5feb\u4e50\u9898"
    },
    {
        "content": "[\u5e7f\u544a](https://m-sea-blog.com)\n\n---\n\n\u9996\u5148\u7279\u5224 $k\\geq\\left\\lceil\\frac{n}{2}\\right\\rceil$ \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u53ef\u4ee5\u6d88\u706d\u6240\u6709\u5154\u5b50\u3002\n\n\u4f46\u662f\u4e0a\u9762\u7684\u7279\u5224\u6709\u4e00\u4e2a\u4f8b\u5916\uff1a\u5f53 $n=3,k=2$ \u65f6\u53ea\u80fd\u6d88\u706d\u4e24\u5757\u83dc\u5730\u4e2d\u7684\u5154\u5b50\uff0c\u663e\u7136\u6253\u6700\u591a\u7684\u4e24\u5757\u3002\n\n\u8003\u8651\u5269\u4e0b\u7684\u60c5\u51b5\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u6700\u4f18\u89e3\u4e2d\u4e0d\u4f1a\u5b58\u5728\u76f8\u90bb\u7684\u4e24\u5757\u83dc\u5730\u90fd\u5f00\u8fc7\u67aa\u3002\n\n\u8003\u8651\u4e00\u4e2a DP\uff1a\u8bbe $dp_{i,j,0/1}$ \u8868\u793a\u524d $i$ \u5757\u83dc\u5730\uff0c\u5f00\u4e86 $j$ \u67aa\uff0c\u5f53\u524d\u83dc\u5730\u5f00\u6ca1\u5f00\u67aa\uff0c\u6700\u591a\u80fd\u6d88\u706d\u591a\u5c11\u53ea\u5154\u5b50\u3002\n\n\u8f6c\u79fb\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a\n\n- \u4e0b\u4e00\u5757\u4e0d\u5f00\u67aa\uff1a$dp_{i,j,0}\\to dp_{i+1,j,0}$\uff0c$dp_{i,j,1}\\to dp_{i+1,j,0}$\u3002\n- \u8fd9\u4e00\u5757\u6ca1\u5f00\u67aa\uff0c\u4e0b\u4e00\u5757\u5f00\u67aa\uff1a$dp_{i,j,0}+a_{i+1}\\to dp_{i+1,j+1,1}$\u3002\n- \u8fd9\u4e00\u5757\u5f00\u67aa\uff0c\u4e0b\u4e00\u5757\u4e0d\u5f00\u67aa\uff0c\u518d\u4e0b\u4e00\u5757\u5f00\u67aa\uff1a$dp_{i,j,1}+a_{i+1}+a_{i+2}\\to dp_{i+2,j+1,1}$\u3002\n\n\u7136\u800c\u8fd9\u4e2a DP \u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u82b1\u56ed\u662f\u4e00\u4e2a\u73af\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5728 $1,n$ \u90fd\u4e0d\u5f00\u67aa\u3001$1$ \u5f00\u67aa\u3001$n$ \u5f00\u67aa\u4e09\u79cd\u60c5\u51b5\u4e2d\u53d6\u4e2a $\\max$ \u5c31\u597d\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u8fb9\u754c\u6761\u4ef6\u5b9e\u73b0\u3002\n\n\u4ee3\u7801\u662f\u53bb\u5e74\u5199\u7684\u3002\n\n```cpp\n// ===================================\n//   author: M_sea\n//   website: http://m-sea-blog.com/\n// ===================================\n#include <bits/stdc++.h>\n#define re register\nusing namespace std;\n \ntemplate<typename T>\ninline void chkmax(T& x,T y) { if (y>x) x=y; }\ninline int read() {\n    int X=0,w=1; char c=getchar();\n    while (c<'0'||c>'9') { if (c=='-') w=-1; c=getchar(); }\n    while (c>='0'&&c<='9') X=X*10+c-'0',c=getchar();\n    return X*w;\n}\n \nconst int N=4000+10;\n \nint n,k,a[N];\nint dp[N][N][2];\n \ninline void calc() {\n    for (re int i=1;i<n;++i)\n        for (re int j=0;j<=k;++j) {\n            chkmax(dp[i+1][j][0],max(dp[i][j][0],dp[i][j][1]));\n            if (j+1<=k) chkmax(dp[i+1][j+1][1],dp[i][j][0]+a[i+1]);\n            if (i+2<=n) chkmax(dp[i+2][j+1][1],dp[i][j][1]+a[i+1]+a[i+2]);\n        }\n}\n \ninline int f() {\n    int t=a[n]; a[n-1]+=a[n],a[n]=0;\n    memset(dp,0xc0,sizeof(dp)),dp[1][1][1]=a[1]; calc();\n    a[n]=t,a[n-1]-=a[n];\n    return dp[n][k][0];\n}\ninline int g() {\n    memset(dp,0xc0,sizeof(dp)),dp[1][0][0]=0; calc();\n    return max(dp[n][k][0],dp[n][k][1]);\n}\n \nint main() {\n    n=read(),k=read();\n    for (re int i=1;i<=n;++i) a[i]=read();\n    if (n==3&&k==2) { sort(a+1,a+n+1); return printf(\"%d\\n\",a[2]+a[3]),0; }\n    if (k>=(n+1)/2) { int ans=0;\n        for (re int i=1;i<=n;++i) ans+=a[i];\n        return printf(\"%d\\n\",ans),0;\n    }\n    int ans=max(f(),g()); reverse(a+1,a+n+1); chkmax(ans,f());\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1610547568,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7240 \u3010[JSOI2014] \u6253\u5154\u5b50\u3011"
    }
]