[
    {
        "content": "\u8fd9\u9898\u662f\u4e2adp\u3002\n\n\u5b9a\u4e49\u65b9\u7a0bf[i][j]\u8868\u793a\u4ecen~i\uff0c\u7528\u4e86j\u4e2a0\u7684\u65b9\u6848\u6570\u3002\u8981n~i\u5012\u7740\u5904\u7406\u662f\u4e3a\u4e4b\u540e\u7684\u7b2ck\u5927\u505a\u5e2e\u52a9\u3002\n\n\u7b2c\u4e00\u95ee\u5c31\u76f4\u63a5dp\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0bp0[i],p1[i]\u5206\u522b\u8868\u793a\u4ece\u5de6\u5f80\u53f3\u7b2ci\u4e2a0\u7684\u4f4d\u7f6e\uff0c\u7b2ci\u4e2a1\u7684\u4f4d\u7f6e\u3002\u8f6c\u79fb\u7684\u65f6\u5019\u6839\u636e\u5f53\u524d\u4f4d\u653e0\u8fd8\u662f\u653e1\uff0c\u4e14\u662f\u5426\u6ee1\u8db3\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8ed\uff0c\u8ba1\u7b97\u5373\u53ef\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u6211\u4eec\u8fd9\u4e48\u505a\uff1a\n\n- \u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u653e0\u7684\u65b9\u6848\u6570>=k\uff0c\u5f53\u524d\u4f4d\u5c31\u653e0\u3002\n\n- \u5982\u679c\u4e0d\u80fd\u653e0\uff0c\u5c31\u653e1\uff0c\u5e76\u4e14k\u51cf\u53bb\u653e0\u7684\u65b9\u6848\u6570\u3002\n\n\u4ee5\u4e0a\u6240\u6709\u8bf4\u7684\u53ef\u4ee5\u653e0\u6216\u653e1\u90fd\u662f\u5efa\u7acb\u5728\u9898\u76ee\u8981\u6c42\u7684\u524d\u63d0\u4e0b\u7684\uff0c\u5373\u8ddd\u79bb\u4e0d\u8d85\u8fc7d\n\n\u7136\u540e\u6211\u4eec\u6709\u4e00\u4e2a\u95ee\u9898\u4e86\uff1a\u5982\u679c\u65b9\u6848\u6570\u8d85\u8fc7k\u7684\u8d85\u8fc7\u592a\u591a\u4e86\u600e\u4e48\u529e\uff1f\u6309\u7167\u9898\u610f\u6765\u8bf4\u6211\u4eec\u5e94\u8be5\u662f\u8981%10^8\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u8981\u6c42\u540e\u9762\u7684\u7b2ck\u5927\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u65b9\u6848\u6570\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5%10^8\uff0c\u5c31\u4f1a\u5bfc\u81f4\u7ed3\u679c\u4e0d\u6b63\u786e\u4e86\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u518d\u5f00\u4e00\u4e2ag[i][j]\u4e5f\u8bb0\u5f55\u65b9\u6848\u6570\uff0c\u5982\u679cg[i][j]>10^8\u4e86\u5c31\u628a\u5b83\u8bbe\u621010^8+1\uff0c\u7136\u540e\u4e4b\u540e\u7b97\u7b2ck\u5927\u7684\u65f6\u5019\u5c31\u7528g[i][j]\u5f53\u505a\u65b9\u6848\u6570\uff0c\u8fd9\u6837\u5c31\u6ca1\u4e8b\u4e86\u3002\n\n\u4e0b\u9762\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int N = 2010;\nconst int MOD = 1e8;\nint n, d, k, cnt0 = 0, cnt1 = 0;\nint p0[N], p1[N], f[N][N], g[N][N];\nchar s[N];\n\nint main()\n{\n    scanf(\"%d%d%d\", &n, &d, &k);\n    scanf(\"%s\", s+1);\n    for (int i = 1; i <= n; i ++)\n        if (s[i] == '0') p0[++ cnt0] = i;\n        else p1[++ cnt1] = i;\n    f[n+1][0] = g[n+1][0] = 1;\n    for (int i = n; i >= 1; i --)\n        for (int j = 0; j <= min(n-i+1, cnt0); j ++){\n            int k = n-i+1-j;\n            if (j && abs(p0[cnt0-j+1]-i) <= d){\n                f[i][j] += f[i+1][j-1];\n                if (f[i][j] > MOD) f[i][j] -= MOD;\n                g[i][j] = min(g[i][j]+g[i+1][j-1], MOD+1);\n            }\n            if (k && abs(p1[cnt1-k+1]-i) <= d){\n                f[i][j] += f[i+1][j];\n                if (f[i][j] > MOD) f[i][j] -= MOD;\n                g[i][j] = min(g[i][j]+g[i+1][j], MOD+1);\n            }\n        }\n    printf(\"%d\\n\", f[1][cnt0]);\n    int s0 = cnt0, s1 = cnt1;\n    for (int i = 2; i <= n; i ++){\n        if (s0 && abs(p0[cnt0-s0+1]-i+1) <= d){\n            if (g[i][s0-1] >= k) s0 --, putchar('0');\n            else s1 --, k -= g[i][s0-1], putchar('1');\n        } else s1 --, putchar('1');\n    }\n    if (s0) putchar('0'); else putchar('1');\n    return 0;\n}\n```",
        "postTime": 1508392021,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2929 \u3010[USACO09HOL]\u4f20\u8f93\u5ef6\u8fdfTransmission Delay\u3011"
    }
]