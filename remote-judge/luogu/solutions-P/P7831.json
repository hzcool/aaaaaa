[
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\u6211\u4eec\u7528 $ ans_i $ \u8868\u793a\u4ece\u57ce\u5e02 $ i $ \u51fa\u53d1\u53ef\u4ee5\u4e00\u76f4\u8d70\u4e0b\u53bb\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u6240\u6709  $ ans_i $ \u521d\u59cb\u8d4b\u503c\u4e3a $ inf $\uff0c\u65b9\u4fbf\u66f4\u65b0\u6700\u5c0f\u503c\uff0c\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u5982\u679c\u4e3a  $ inf $ \u5c31\u8f93\u51fa $ -1 $\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u51fa\u5ea6\u4e3a $ 0 $ \u7684\u57ce\u5e02\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u5220\u53bb\uff0c\u56e0\u4e3a\u65e0\u8bba\u6709\u591a\u5c11\u94b1\u90fd\u4e0d\u53ef\u80fd\u4e00\u76f4\u8d70\u4e0b\u53bb\uff0c\u5176\u7b54\u6848\u5373\u4e3a $ -1 $\u3002\n\n\u90a3\u4e48\uff0c\u5269\u4e0b\u7684\u70b9\u90fd\u6709\u51fa\u8fb9\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u70b9\u4e00\u5b9a\u6709\u7b54\u6848\u3002\n\n### \u6700\u521d\u7684\u601d\u8def\u2014\u2014\u9519\u8bef\u7684\u60f3\u6cd5\n\n\u4f9d\u6b21\u8003\u8651\u4ece\u57ce\u5e02 $ i $ \u5f00\u59cb\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u57ce\u5e02 $ i $ \u7684\u7b54\u6848\u4e0d\u80fd\u4e00\u5f00\u59cb\u5c31\u6c42\u51fa\uff0c\u5982\u679c\u4ece\u57ce\u5e02 $ i $ \u5f00\u59cb\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u7ecf\u8fc7\u7684\u4e00\u4e2a\u57ce\u5e02\u90fd\u53ef\u80fd\u5bf9\u57ce\u5e02 $ i $ \u7684\u7b54\u6848\u9020\u6210\u66f4\u65b0\uff0c\u8fdb\u800c\u8981\u56de\u6eaf\u5230\u4e4b\u524d\u7684\u6bcf\u4e00\u4e2a\u57ce\u5e02\u66f4\u65b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u5927\u4f1a\u8d85\u65f6\u3002\n\n### \u6b63\u786e\u7684\u60f3\u6cd5\n\n\u6362\u4e00\u79cd\u601d\u8def\uff0c\u5f53\u6709\u591a\u5c11\u94b1\u65f6\uff0c\u4ece\u57ce\u5e02 $ i $ \u51fa\u53d1\u4e00\u5b9a\u80fd\u4e00\u76f4\u8d70\u4e0b\u53bb\u5462\uff1f\u5f53\u6211\u4eec\u7684\u94b1\u6570\u4e3a\u5f53\u524d\u6700\u5927\u7684 $ r_i $ \u65f6\uff0c\u53ef\u4ee5\u4e00\u76f4\u8d70\u4e0b\u53bb\uff0c\u56e0\u4e3a\u5f53\u524d\u7684 $ r_i $ \u662f\u5168\u573a\u6700\u5927\u7684\uff0c\u4e14 $ p_i $ \u5747\u4e0d\u5c0f\u4e8e $ 0 $\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u4e00\u76f4\u8d70\uff0c\u4e0d\u53ef\u80fd\u5b58\u5728\u4e0d\u80fd\u901a\u884c\u7684\u9053\u8def\u3002\n\n\u53ef\u4ee5\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e **\u62d3\u6251\u6392\u5e8f** \u7684\u7b97\u6cd5\uff0c\u7ed3\u5408 **\u8d2a\u5fc3** \u601d\u60f3\u3002\n\n1. \u628a\u6240\u6709\u6240\u6709\u8fb9\u6309 $ r_i $ \u6392\u4e2a\u5e8f\uff0c\u6bcf\u6b21\u53d6\u51fa $ r $ \u6700\u5927\u7684\u90a3\u6761\u8fb9 $ edge_i $\uff0c\u8bbe\u8fd9\u6761\u8fb9\u8d77\u70b9\u4e3a $ u $\uff0c\u66f4\u65b0 $ u $ \u7684\u7b54\u6848 $ ans_u = \\min(ans_u,r_i) $\u3002\n\n2. \u5982\u679c\u8fd9\u4e2a\u70b9\u8fd8\u6709\u5176\u5b83\u51fa\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u8bb0\u4e0b\u8fd9\u4e2a\u7b54\u6848\uff0c\u5e76\u5220\u6389\u8fd9\u6761\u8fb9\u3002\n\n3. \u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u5176\u5b83\u51fa\u8fb9\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u7b54\u6848\u5c31\u662f\u786e\u5b9a\u7684\uff0c\u5c06\u8fd9\u4e2a\u70b9\u5165\u961f\uff0c\u5220\u6389\u8fd9\u4e2a\u70b9\uff0c\u8fd9\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u65b0\u7684\u6ca1\u6709\u51fa\u5ea6\u7684\u70b9\uff0c\u5b83\u4eec\u7684\u7b54\u6848\u4e5f\u786e\u5b9a\u4e86\u3002\n\n4. \u6bcf\u4e00\u8f6e\u5165\u961f\u7684\u70b9\uff0c\u5728\u5904\u7406\u4e0b\u4e00\u6761\u8fb9\u4e4b\u524d\u5148\u5904\u7406\uff0c\u53d6\u51fa\u8fd9\u4e2a\u70b9\u7684\u6bcf\u4e00\u6761\u8fdb\u5165\u7684\u8fb9 $ edge_i $\uff0c\u8bbe\u5176\u8d77\u70b9\u4e3a $ u $\uff0c\u7ec8\u70b9\u4e3a $ v $\uff0c\u66f4\u65b0 $ u $ \u7684\u7b54\u6848 $ ans_u=\\min(ans_u,\\max(r_i,ans_v-p_i)) $\u3002 \u5220\u53bb\u8fd9\u6761\u8fb9\uff0c\u6ce8\u610f\uff0c\u5728\u8fd9\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u8fd8\u4f1a\u51fa\u73b0\u65b0\u7684\u6ca1\u6709\u5165\u5ea6\u7684\u70b9\uff0c\u4e5f\u8981\u8bb0\u5f97\u8fdb\u961f\u3002\n\n5. \u91cd\u590d\u5982\u6b64\uff0c\u76f4\u5230\u6ca1\u6709\u70b9\u3002\n\n### \u7b97\u6cd5\u5b9e\u73b0\n\n$ vis_i $ \u8868\u793a\u7b2c $ i $ \u6761\u8fb9\u662f\u5426\u88ab\u5220\u53bb\uff0c$ dep_i $ \u8868\u793a\u8fd9\u6761\u8fb9\u7684\u51fa\u5ea6\u3002\n\n\n#### \u5b58\u50a8\n```cpp\nstruct node{\n\tint a,b,r,p;\n\tbool operator<(const node &x)const{\t//\u56e0\u4e3a\u7b49\u4e0b\u662f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\n\t\treturn r<x.r;\t\t\t\t\t//\u8bfb\u7684\u65f6\u5019\u662f\u9006\u5e8f\u7684\uff0c\u6240\u4ee5\u6309\u5347\u5e8f\u6392\n\t}\t\t\t\t\t\t\t\t\t//\u4f9d\u6b21\u904d\u5386\u8fb9\u7684\u65f6\u5019\u518d\u53cd\u8fc7\u6765\n}edge[N];\nqueue<int>q;\nint ans[N],vis[N],n,m,dep[N];\nint head[N],nxt[N],to[N],tot;\ninline void add(int &x,int &y){\t\t\n\t//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\u7684\u7f16\u53f7\uff0cy\u4e0d\u662f\u7ec8\u70b9,\u800c\u662f\u8fb9\u7684\u7f16\u53f7\n\tto[++tot]=y;nxt[tot]=head[x];head[x]=tot\n}\n```\n\n#### \u8bfb\u5165&\u6392\u5e8f\n```cpp\nmemset(ans,0x3f,sizeof(ans));\nn=read();m=read();\nfor(i=1;i<=m;++i){\n\tedge[i].a=read();edge[i].b=read();\n\tedge[i].r=read();edge[i].p=read();\n\t++dep[edge[i].a];\n}\nsort(edge+1,edge+1+m);\nfor(i=1;i<=m;++i) add(edge[i].b,i);\t\t//\u5b58\u50a8\u6bcf\u4e2a\u70b9\u7684\u5165\u8fb9\u7684\u7f16\u53f7\nfor(i=1;i<=n;++i) if(!dep[i])q.push(i);\t//\u5c06\u6ca1\u6709\u51fa\u8fb9\u7684\u70b9\u5165\u961f\n```\n\n#### \u6bcf\u6b21\u5165\u961f\u7684\u70b9\u7684\u5904\u7406\n\n```cpp\nwhile(!q.empty()){\n\tu=q.front();q.pop();\t\n\tfor(j=head[u];j;j=nxt[j]){\t\t\t //k\u5b58\u7684\u662f\u8fb9\u7684\u7f16\u53f7\n     \t\tk=to[j];if(vis[k])continue; //\u5982\u679c\u8fd9\u6761\u8fb9\u88ab\u5220\u4e86\u5c31\u8df3\u8fc7\n\t\tvis[k]=1;--dep[edge[k].a];\t\t //\u5904\u7406\u5f53\u524d\u70b9\n\t\tif(!dep[edge[k].a])q.push(edge[k].a);\n\t\tif(ans[u]!=INF)\t\t\t\t\t //\u66f4\u65b0\u7b54\u6848\n        \t\tans[edge[k].a]=min(ans[edge[k].a],max(edge[k].r,ans[u]-edge[k].p));\n\t}\n}\n```\n\n#### \u4f9d\u6b21\u5904\u7406\u6bcf\u6761\u8fb9\n\n```cpp\nfor(i=m;i>=1;--i){\t\t\t\t\t    //\u4e0e\u6bcf\u6b21\u5165\u961f\u7684\u70b9\u7684\u5904\u7406\u7684\u7c7b\u4f3c\n\tif(!vis[i]){\n\t\tvis[i]=1;--dep[edge[i].a];\n\t\tif(!dep[edge[i].a])q.push(edge[i].a);\n\t\tans[edge[i].a]=min(ans[edge[i].a],edge[i].r);//\u66f4\u65b0\u7b54\u6848\n\t}\n}\n```\n\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n# define INF (0x3f3f3f3f)\n# define reg register\n# define min(x,y) (x<y?x:y)\n# define max(x,y) (x>y?x:y)\n# define N (200005)\nusing namespace std;\ninline int read(){\n\treg char c=getchar();reg int sum=0,f=1;\n\twhile(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c<='9'&&c>='0'){sum=(sum<<3)+(sum<<1)+(c^48);c=getchar();}\n\treturn sum*f;\n}\nstruct node{\n\tint a,b,r,p;\n\tbool operator<(const node &x)const{\n\t\treturn r<x.r;\n\t}\n}edge[N];\nqueue<int>q;\nint ans[N],vis[N],n,m,dep[N];\nint head[N],nxt[N],to[N],tot;\ninline void add(int &x,int &y){\n\tto[++tot]=y;nxt[tot]=head[x];head[x]=tot;\n}\nint main(){\n\treg int i,j,k,u,v;\n\tmemset(ans,0x3f,sizeof(ans));\n\tn=read();m=read();\n\tfor(i=1;i<=m;++i){\n\t\tedge[i].a=read();edge[i].b=read();\n\t\tedge[i].r=read();edge[i].p=read();\n\t\t++dep[edge[i].a];\n\t}\n\tsort(edge+1,edge+1+m);\n\tfor(i=1;i<=m;++i) add(edge[i].b,i);\n\tfor(i=1;i<=n;++i) if(!dep[i])q.push(i);\n\tfor(i=m;i>=1;--i){\n\t\twhile(!q.empty()){\n\t\t\tu=q.front();q.pop();\n\t\t\tfor(j=head[u];j;j=nxt[j]){\n\t\t\t\tk=to[j];if(vis[k])continue;\n\t\t\t\tvis[k]=1;--dep[edge[k].a];\n\t\t\t\tif(!dep[edge[k].a])\tq.push(edge[k].a);\n\t\t\t\tif(ans[u]!=INF)\n\t\t\t\t\tans[edge[k].a]=min(ans[edge[k].a],max(edge[k].r,ans[u]-edge[k].p));\n\t\t\t}\n\t\t}\n\t\tif(!vis[i]){\n\t\t\tvis[i]=1;--dep[edge[i].a];\n\t\t\tif(!dep[edge[i].a])q.push(edge[i].a);\n\t\t\tans[edge[i].a]=min(ans[edge[i].a],edge[i].r);\n\t\t}\n\t}\n\tfor(i=1;i<=n;++i) printf(\"%d \",(ans[i]==INF?-1:ans[i]));\n\treturn 0;\n}\n```\n\n\n\u8fd9\u662f\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u8db3\u591a\u591a\u89c1\u8c05\uff0c\u6709\u610f\u89c1\u6216\u9519\u8bef\u6b22\u8fce\u63d0\u51fa\u3002",
        "postTime": 1633960685,
        "uid": 211086,
        "name": "bsTiat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7831 \u3010Travelling Merchant\u3011"
    },
    {
        "content": "\u8d27\u771f\u4ef7\u5b9e\u7684\u597d\u9898\u3002\n\n\u5982\u679c\u5b9a\u4e49 $f_u$ \u8868\u793a\u4ece $u$ \u51fa\u53d1\u80fd\u4e0d\u505c\u8d70\u4e0b\u53bb\u7684\u6700\u5c11\u521d\u59cb\u8d44\u4ea7\uff0c\u5f88\u5bb9\u6613\u5f97\u5230\u4e00\u4e2a\u8fd9\u6837\u7684\u8f6c\u79fb\uff1a$f_u = \\min\\limits_{(u, v) \\in E}\\{f_u,\\max(r(u, v), f_v - p(u, v))\\}$\u3002\u4f46\u662f\u56fe\u4e0a\u6709\u73af\uff0c\u4e0d\u80fd\u76f4\u63a5\u8f6c\u79fb\u3002\u6211\u4eec\u5c1d\u8bd5\u53d1\u73b0\u4e00\u4e9b\u6027\u8d28\uff1a\n\n1. \u5982\u679c\u4f60\u4ece\u67d0\u70b9\u5f00\u59cb\u8d70\uff0c\u521d\u59cb\u8d44\u4ea7\u4e3a\u6240\u6709\u8fb9 $r$ \u7684\u6700\u5927\u503c\uff0c\u90a3\u4f60\u81ea\u7136\u53ef\u4ee5\u7545\u884c\u65e0\u963b\u3002\n2. \u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u4e00\u5b9a\u65e0\u89e3\u3002\u7531\u6b64\u5f97\u51fa\u5f62\u5982 $(u, v)$ \u7684\u8fb9\u82e5 $v$ \u51fa\u5ea6\u4e3a $0$\uff0c\u5219\u8be5\u8fb9\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u5220\u53bb\u3002\n\n\u7efc\u5408\u4ee5\u4e0a\u4e24\u4e2a\u6027\u8d28\u5f97\u51fa\u505a\u6cd5\uff1a\n\n1. \u5c06\u6240\u6709\u51fa\u5ea6\u4e3a $0$ \u7684\u8282\u70b9\u5165\u961f\u3002\n2. \u6309 $r$ \u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u8003\u8651\u6bcf\u6761\u8fb9\u3002\u9996\u5148\u8fdb\u884c\u4e00\u6b21\u201c\u62d3\u6251\u6392\u5e8f\u201d\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u53d6\u51fa\u961f\u5934 $v$\uff0c\u904d\u5386 $v$ \u5728\u53cd\u56fe\u4e0a\u7684\u51fa\u8fb9 $(v, u, r, p)$\u3002\u82e5 $v$ \u6709\u89e3\uff0c\u5219\u7528\u6700\u5f00\u59cb\u63d0\u5230\u7684\u8f6c\u79fb\u5f0f\u5b50\u6765\u66f4\u65b0 $f_u$\u3002\u56e0\u4e3a\u6b64\u65f6 $v$ \u5df2\u7ecf\u5165\u961f\uff0c$f_v$ \u5df2\u7ecf\u786e\u5b9a\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u8fd9\u6761\u8fb9\u66f4\u65b0\u3002\u540c\u65f6\uff0c\u8fd9\u6761\u8fb9\u88ab\u4f7f\u7528\u4e4b\u540e\u4e0d\u518d\u5177\u6709\u4ef7\u503c\uff0c\u53ef\u4ee5\u9000\u51fa\u5386\u53f2\u7684\u821e\u53f0\u3002\u5220\u53bb\u8fd9\u6761\u8fb9\u4e4b\u540e\u628a $u$ \u7684\u51fa\u5ea6 $-1$\uff0c\u82e5 $u$ \u7684\u51fa\u5ea6\u53d8\u4e3a $0$ \u5219\u5c06\u5176\u5165\u961f\u3002\n3. \u4ece\u5927\u5230\u5c0f\u8003\u8651\u7b2c $i$ \u6761\u8fb9\u65f6\uff1a\u505a\u5b8c\u7b2c\u4e8c\u6b65\u4e4b\u540e\uff0c\u82e5\u7b2c $i$ \u6761\u8fb9\u4ecd\u672a\u88ab\u5220\u9664\u5219\u7528 $r_i$ \u66f4\u65b0 $f_{u_i}$\uff0c\u5e76\u5c06 $u_i$ \u7684\u51fa\u5ea6 $-1$\uff0c\u82e5\u53d8\u4e3a $0$ \u5219\u5c06\u5176\u5165\u961f\u3002\u4e3a\u5565\u53ef\u4ee5\u8fd9\u6837\u66f4\u65b0\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u4e00\u6761\u8fb9\u88ab\u5220\u9664\uff0c\u5f53\u4e14\u4ec5\u5f53\u6cbf\u7740\u8fd9\u6761\u8fb9\u6700\u7ec8\u4f1a\u8d70\u5230\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u65e0\u89e3\u3002\u6240\u4ee5\u5982\u679c\u7b2c $i$ \u6761\u8fb9\u672a\u88ab\u5220\u9664\u5219\u4ee3\u8868\u7740\u201c\u5728\u672a\u88ab\u5220\u9664\u7684\u8fb9\u6784\u6210\u7684\u56fe\u4e0a\uff0c\u6cbf\u7740\u7b2c $i$ \u6761\u8fb9\u5e76\u4e0d\u4f1a\u8d70\u5230\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\u201d\uff0c\u540c\u65f6\u8fb9\u662f\u6309 $r$ \u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u8003\u8651\u7684\uff0c\u4ee5 $r_i$ \u4e3a\u521d\u59cb\u8d44\u4ea7\u4e0d\u4f1a\u53d7\u5230\u672a\u88ab\u5220\u9664\u7684\u8fb9\u7684 $r$ \u7684\u9650\u5236\u3002\u6240\u4ee5\u6b64\u65f6\u53ef\u4ee5\u66f4\u65b0\u3002\n4. \u7b2c 3 \u6b65\u4f7f\u5f97\u6bcf\u4e2a\u8282\u70b9\u6700\u7ec8\u90fd\u4f1a\u5165\u961f\uff0c\u89e3\u51b3\u4e86\u4e00\u5f00\u59cb\u201c\u6709\u73af\u5c31\u65e0\u6cd5\u8f6c\u79fb\u201d\u7684\u95ee\u9898\u3002\n\n\u7531\u4e8e\u62d3\u6251\u6392\u5e8f\u4e2d\u6bcf\u4e2a\u8282\u70b9\u53ea\u4f1a\u5165\u961f\u51fa\u961f\u5404\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u74f6\u9888\u5728\u6392\u5e8f\uff1a$O(m \\log m)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nconst int N = 2e5 + 5, inf = 0x3f3f3f3f;\nint n, m, out[N];\nstruct Edge{\n\tint u, v, id, r, p;\n\tbool operator < (const Edge &k) const {\n\t\treturn r > k.r;\n\t}\n}E[N];\nbool vis[N];\nint head[N], cnt;\nstruct edge{\n\tint nxt, to, id, r, p;\n}e[N << 1];\nvoid add(int u, int v, int id, int r, int p){\n\te[++cnt].nxt = head[u], e[cnt].to = v, e[cnt].id = id, e[cnt].r = r, e[cnt].p = p, head[u] = cnt;\n}\nint ans[N];\nqueue <int> q;\nint main(){\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= m; i++) scanf(\"%d%d%d%d\", &E[i].u, &E[i].v, &E[i].r, &E[i].p), E[i].id = i, add(E[i].v, E[i].u, E[i].id, E[i].r, E[i].p), out[E[i].u]++;\n\tmemset(ans, 0x3f, sizeof(ans));\n\tfor(int i = 1; i <= n; i++) if(!out[i]) q.push(i);\n\tsort(E + 1, E + m + 1);\n\tfor(int i = 1; i <= m; i++){\n\t\twhile(!q.empty()){\n\t\t\tint v = q.front(); q.pop();\n\t\t\tfor(int i = head[v]; i; i = e[i].nxt){\n\t\t\t\tif(vis[e[i].id]) continue;\n\t\t\t\tvis[e[i].id] = true;\n\t\t\t\tint u = e[i].to;\n\t\t\t\tif(ans[v] != inf) ans[u] = min(ans[u], max(e[i].r, ans[v] - e[i].p));\n\t\t\t\tout[u]--; if(!out[u]) q.push(u);\n\t\t\t}\n\t\t}\n\t\tif(!vis[E[i].id]){\n\t\t\tvis[E[i].id] = true, ans[E[i].u] = min(ans[E[i].u], E[i].r);\n\t\t\tout[E[i].u]--; if(!out[E[i].u]) q.push(E[i].u);\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++) printf(\"%d \", ans[i] == inf ? -1 : ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1667211969,
        "uid": 385093,
        "name": "uniqueharry",
        "ccfLevel": 0,
        "title": "P7831 [CCO2021] Travelling Merchant \u9898\u89e3"
    },
    {
        "content": "\u6709\u5220\u51cf\uff0c\u540c\u6b65\u53d1\u8868\u4e8e[**\u6211\u7684\u535a\u5ba2**](https://www.cnblogs.com/SharpnessV/p/15183006.html)\u3002\n\n\u5148\u53e3\u80e1\u4e00\u4e2a\uff0c\u660e\u5929\u518d\u6765\u8865\u4ee3\u7801\uff08\n\n\u5148\u8003\u8651 $-1$ \u7684\u60c5\u51b5\uff0c\u663e\u7136\u6ca1\u6709\u51fa\u8fb9\u7684\u70b9\u662f $-1$\uff0c\u5c06\u8fd9\u6837\u7684\u70b9\u548c\u5bf9\u5e94\u7684\u8fb9\u5220\u6389\uff0c\u76f4\u5230\u6bcf\u4e2a\u70b9\u90fd\u6709\u51fa\u8fb9\u3002\u663e\u7136\u88ab\u5220\u6389\u7684\u70b9\u90fd\u662f $-1$\uff0c\u5176\u4f59\u7684\u70b9\u90fd\u4e0d\u662f $-1$\u3002\n\n\u5bf9\u4e8e\u5269\u4e0b\u7684\u8fb9\uff0c\u663e\u7136 $r_i$ \u6700\u5927\u7684\u8fb9\u5982\u679c\u8d70\u4e86\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u8fb9\u968f\u4fbf\u8d70\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684 $+p_i$ \u6ca1\u6709\u610f\u4e49\u3002\u6211\u4eec\u76f4\u63a5\u5220\u6389\u8fd9\u6761\u8fb9\uff0c\u7136\u540e\u5728\u8d77\u59cb\u70b9 $a_i$ \u6253\u4e0a $r_i$ \u7684\u6807\u8bb0\u8868\u793a\u5230\u8fbe\u8fd9\u91cc\u540e\u4e14\u8d44\u4ea7 $\\ge$ \u6807\u8bb0\u53ef\u4ee5\u76f4\u63a5\u7ed3\u675f\u3002\n\n\u5220\u6389\u8fb9\u540e $a_i$ \u53ef\u80fd\u6ca1\u6709\u51fa\u8fb9\u4e86\uff0c\u8fd9\u53c8\u56de\u5230 $-1$ \u7684\u60c5\u51b5\uff0c\u5c06\u5bf9\u5e94\u7684\u70b9\u548c\u8fb9\u5220\u6389\uff0c\u7136\u540e\u627e $r_i$ \u6700\u5927\u7684\u8fb9\u5220\u6389\u3002\u6700\u540e\u5c06\u6240\u6709\u8fb9\u5220\u6389\u3002\n\n\u6bcf\u4e2a\u70b9\u7684\u6807\u8bb0\u5c31\u662f\u7b54\u6848\u3002\n\n\u8fd9\u9053\u9898\u7684\u5173\u952e\u5728\u4e8e\u9006\u5411\u601d\u7ef4\u548c\u5f52\u7eb3\u6cd5\uff0c\u5982\u679c\u987a\u7740\u6a21\u62df\u975e\u5e38\u56f0\u96be\uff0c\u4f46\u662f\u4ece\u7ed3\u675f\u65f6\u7684\u8fb9\u5165\u624b\u5219\u975e\u5e38\u6e05\u6670\u3002\u6bcf\u6b21\u5220\u9664\u4e00\u6761\u8fb9\u5f52\u7eb3\u4e0b\u53bb\u4e5f\u662f\u5173\u952e\u3002",
        "postTime": 1629818099,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011[CCO2021] Travelling Merchant"
    }
]