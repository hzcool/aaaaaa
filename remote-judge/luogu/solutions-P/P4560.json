[
    {
        "content": "### \u7b80\u5316\u9898\u610f\n\n-  ### \u7ed9\u51fa\u4e00\u4e2an\u957f\u5e8f\u5217\uff0cm\u6b21\u4fee\u6539\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\n\n> 1.**add** \u5c06\u533a\u95f4$[l ,r]$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570 \u5bf9 $k$ \u53d6 $max$\n\n> 2.**remove** \u5c06\u533a\u95f4$[l ,r]$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570 \u5bf9 $k$ \u53d6 $min$\n\n### \u9898\u76ee\u601d\u8def\n\n\u4e24\u4e2a\u61d2\u6807\u8bb0\uff08add\uff0crem\uff09\u610f\u601d\u540c\u4e0a\uff0c\u5206\u60c5\u51b5\u8ba8\u8bba\u4f20\u9012\u6807\u8bb0(\u4e4d\u770b\u4e0d\u53ef\u505a\uff0c\u60f3\u4e00\u4e0b\u600e\u4e48\u63a8\u91cd\u590d\u6807\u8bb0\u5c31\u61c2\u4e86qwq)\n\n### \u5177\u4f53\u5b9e\u73b0\n\n\uff08~~\u5982\u679c\u4f60\u60f3\u4e86\u5f88\u4e45\u540e\u8fd8\u662f\u4e0d\u77e5\u9053\u5982\u4f55\u4e0b\u624b\uff0c\u518d\u770b\u8fd9\u90e8\u5206~~\uff09\n\n\uff08~~\u6700\u597d\u4f60\u80fd\u62ff\u51fa\u7b14\u6765\u8fb9\u753b\u8fb9\u7406\u89e3~~\uff09\n\n- $Max[p]$\uff0c$Min[p]$ \u5206\u522b\u662f\u533a\u95f4\u6700\u5927\uff0c\u533a\u95f4\u6700\u5c0f\u3002\n\n\u6211\u4eec\u4ee5 **Max\u6807\u8bb0\u7684\u4e0b\u4f20**\u4e3a\u4f8b (\u5373 \u5c06\u533a\u95f4$[l ,r]$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570 \u5bf9 $k$ \u53d6 $max$)\n\n1. \u5982\u679c $Min[p]$ < k \u90a3\u4e48 $Min[p]$ = k ((\u5982\u679c)\u533a\u95f4\u6700\u5c0f\u6bd4\u8f83\u5c0f\uff0c\u6211\u4eec\u8981\u66f4\u65b0\u5b83)\n1. \u5982\u679c $Max[p]$ < k \u90a3\u4e48 $Max[p]$ = k;((\u5982\u679c)$Max$\u4e5f\u6bd4$k$\u5c0f\u4e86\uff0c\u540c\u6837\u66f4\u65b0)\n1. \u6ce8\u610f\u4e0b\u4f20\u6807\u8bb0\u65f6$k$\u4e0d\u5c31\u662f\u7236\u4eb2\u7684\u61d2\u6807\u8bb0$Max$\u5417\uff1f \u6240\u4ee5$Max$ = 0\uff1b\n\n~~Min\u7684\u6807\u8bb0\u4e0b\u4f20\u540c\u7406\uff0c\u4e3e\u4e00\u53cd\u4e09\u5c31\u53ef\u4ee5\u4e86~~\n\n### Code\n\n\uff08~~\u7801\u98ce\u4e0d\u597d\uff0c\u8bf7\u52ff\u55b7~~\uff09\n\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#define N 2000007\nusing namespace std;\nint n,m;\nstruct Segment_Tree\t//\u7ebf\u6bb5\u6811\u7ed3\u6784\u4f53 \n{\n    int Max[N<<2],Min[N<<2];\t//\u61d2\u6807\u8bb0 \n    inline int ls(int p) {return p<<1;}\t//\u5de6\u5b50\u6811 \n    inline int rs(int p) {return p<<1|1;}\t//\u53f3\u5b50\u6811 \n    void fx(int p,int k)\t//Max\u6807\u8bb0\u4f20\u9012 \uff0cp\u8282\u70b9\u7f16\u53f7\uff0ck\u4f20\u9012\u503c \n\t{\n\t\tif(Min[p]<k) Min[p] = k;\t//Min\u6bd4k\u5c0f\uff0c\u66f4\u65b0Min \n\t\tif(Max[p]<k) Max[p] = k;\t//\u8fdeMax\u90fd\u6bd4k\u5c0f\uff0c\u66f4\u65b0MMax \n    }\n    void fi(int p,int k)\t//Min\u6807\u8bb0\u4f20\u9012\uff0cp\u8282\u70b9\u7f16\u53f7\uff0ck\u4f20\u9012\u503c \n\t{\n\t\tif(Max[p]>k) Max[p] = k;\t//Max\u6bd4k\u8981\u5927\uff0c\u7f29\u5c0fMax \n\t\tif(Min[p]>k) Min[p] = k;\t//Min\u90fd\u6bd4k\u5927\uff0ck\u66f4\u5c0f\uff0c\u503c\u53d6k \n    }\n//    \u91ca\u653e\u61d2\u6807\u8bb0 \n    void push_down(int p) {\n//        \u66f4\u65b0Max \n\t\tfx(ls(p),Max[p]);\n        fx(rs(p),Max[p]);\n//        \u66f4\u65b0Min \n\t\tfi(ls(p),Min[p]);\n        fi(rs(p),Min[p]);\n//        Max \u548c Min \u56de\u5f52\u521d\u59cb\u72b6\u6001 \n\t\tMax[p] = 0;\n        Min[p] = 0x7fffffff;\n    }\n//    \t\t\u4fee\u6539\u533a\u95f4[nl,nr]\t\u5f53\u524d\u8282\u70b9p,\u4ee3\u8868\u533a\u95f4[l,r] \u4fee\u6539\u6570k\t,tag\u5224\u65ad\u662f\u64cd\u4f5cadd\u8fd8\u662f\u64cd\u4f5crem \n\tvoid update(int nl,int nr,int p,int l,int r,int k,bool tag)\n    {\n//    \t\u5728\u8303\u56f4\u5185 \n        if(nl<=l && r<=nr)\n        {\n//        \ttag==0 \u4ee3\u8868add\u64cd\u4f5c\uff0c\u66f4\u65b0Max \n            if(tag==0) fx(p,k);\n//            \u5426\u5219\u66f4\u65b0Min \n            else fi(p,k);\n            return ;\n        }\n        int mid = (l+r)>>1;\n//        \u91ca\u653e\u61d2\u6807\u8bb0 \n        push_down(p);\n        if(nl<=mid) update(nl,nr,ls(p),l,mid,k,tag);\n        if(nr>mid) update(nl,nr,rs(p),mid+1,r,k,tag);\n//        push_up(p);\n    }\n    void Query(int p,int l,int r)\n    {\n//    \t\u4f9d\u6b21\u8f93\u51fa \u53f6\u8282\u70b9\u7684Max\u548cMin\u662f\u4e00\u6837\u7684 \n        if(l==r) {printf(\"%d\\n\",Max[p]); return;}\n        int mid = (l+r)>>1;\n//        \u8bb0\u5f97\u5148\u91ca\u653e\u61d2\u6807\u8bb0\uff0c\u66f4\u65b0\u503c \n        push_down(p);\n//        \u7ee7\u7eed\u9012\u5f52 \n        Query(ls(p),l,mid);\n        Query(rs(p),mid+1,r);\n    }\n}Tree;\t//\u5b9a\u4e49\u4e00\u68f5\u7ebf\u6bb5\u6811Tree \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n//    \u628aMin\u6570\u7ec4\u5168\u76f4\u65e0\u7a77\u5927 \n    for(int i=1;i<=n<<2;++i)\n    \tTree.Min[i] = 0x7fffffff;\n    for(int i=1;i<=m;++i)\n    {\n        int L,R,h,t;\t//\u4fee\u6539\u533a\u95f4[L,R],\u4fee\u6539\u503ch,\u548c\u64cd\u4f5ct \n        scanf(\"%d%d%d%d\",&t,&L,&R,&h);\n//        \u9898\u76ee\u4ece0\u5f00\u59cb\u7f16\u53f7\uff0c\u6211\u4e60\u60ef\u4ece\u4e00\u5f00\u59cb\uff0c\u6545+1 \n        Tree.update(L+1,R+1,1,1,n,h,t-1);\n    }\n//    \u8f93\u51fa\u7ed3\u679c \n    Tree.Query(1,1,n); \n    return 0;\n}\n```\n",
        "postTime": 1559406939,
        "uid": 147511,
        "name": "\u57fa\u5730A_I",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    },
    {
        "content": "\u4e4d\u4e00\u773c\u770b\u6b64\u9898,\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u662f\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6807\u8bb0\u6765\u5b8c\u6210\u8fd9\u4ef6\u4e8b.\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6807\u8bb0$ADD[i]$\u548c$DEL[i]$,\u5176\u4e2d$ADD[i]$\u8868\u793a\u628a\u7ebf\u6bb5\u6811\u4e0ai\u8fd9\u4e2a\u533a\u95f4\u91cc\u6bd4$ADD[i]$\u5c0f\u7684\u6570\u8d4b\u503c\u6210$ADD[i]$,$DEL[i]$\u8868\u793a\u628a\u7ebf\u6bb5\u6811\u4e0ai\u8fd9\u4e2a\u533a\u95f4\u91cc\u6bd4$DEL[i]$\u5927\u7684\u6570\u8d4b\u503c\u6210$DEL[i]$,\u8fd9\u4e24\u4e2a\u90fd\u662f\u7ebf\u6bb5\u6811\u4e0a\u7684~~\u5e38\u89c4~~\u61d2\u6807\u8bb0.\n\n\u7136\u540e\u8003\u8651\u61d2\u6807\u8bb0\u5982\u4f55\u4fee\u6539,\u6211\u4eec\u53ef\u4ee5\u8bbe$ADD[i]=x$,$DEL[i]=y$,\u90a3\u4e48\u5f53\u524d\u7ebf\u6bb5\u6811\u4e0ai\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\u5c31\u53ea\u6709$x-y$.\n\n## \u6dfb\u52a0\u4e00\u4e2a$ADD$\u6807\u8bb0$z$.\n\n### \u5982\u679c$z<=x$,\n\n\u56e0\u4e3a\u5f53\u524d\u6ca1\u6709\u5c0f\u4e8e$z$\u7684\u6570,\u6240\u4ee5\u4e0d\u7ba1.\n\n### \u5982\u679c$x<z<y$,\n\n\u90a3\u5c31\u65b0\u5efa\u4e00\u4e2a\u61d2\u6807\u8bb0,$ADD[i]=z$.\n\n### \u5982\u679c$z>y$,\n\n\u56e0\u4e3a\u5f53\u524d\u6240\u6709\u6570\u90fd\u5c0f\u4e8ez,\u6240\u4ee5\u65b0\u5efa\u61d2\u6807\u8bb0,$ADD[i]=z,DEL[i]=z$.\n\n### \u7528\u4ee3\u7801\u8868\u793a\u4e5f\u5c31\u662f\n```\nif (ADD[k]<z) ADD[k]=z;\nif (DEL[k]<z) DEL[k]=z;\n```\n\n## \u6dfb\u52a0\u4e00\u4e2aDEL\u6807\u8bb0z.\n\n### \u5982\u679c$z<=x$,\n\n\u56e0\u4e3a\u5f53\u524d\u6240\u6709\u6570\u90fd\u5927\u4e8ez,\u6240\u4ee5\u65b0\u5efa\u61d2\u6807\u8bb0,$ADD[i]=z,DEL[i]=z$.\n\n### \u5982\u679c$x<z<y$,\n\n\u90a3\u5c31\u65b0\u5efa\u4e00\u4e2a\u61d2\u6807\u8bb0$DEL[i]=z$.\n\n### \u5982\u679c$z>y$,\n\n\u56e0\u4e3a\u5f53\u524d\u6ca1\u6709\u5927\u4e8ez\u7684\u6570,\u6240\u4ee5\u4e0d\u7ba1.\n\n### \u7528\u4ee3\u7801\u8868\u793a\u4e5f\u5c31\u662f\n```\nif (ADD[k]>z) ADD[k]=z;\nif (DEL[k]>z) DEL[k]=z;\n```\n\u5f53\u7136\u5728\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u61d2\u6807\u8bb0\u5f53\u7136\u5fc5\u987b\u638c\u63e1pushdown\u8fd9\u79cd\u4e1c\u897f.\n\n### \u5728\u8fd9\u9898\u4e2dpushdown\u4e5f\u5c31\u548c\u52a0\u6807\u8bb0\u4e00\u6837\n\n\u7528\u4ee3\u7801\u8868\u793a\u5c31\u662f\n```\nvoid pushdown(int k)\n{\n\tif (ADD[k]!=0)\n\t{\n\t\tint son=k+k,x=ADD[k];\n\t\tif (ADD[son]<x) ADD[son]=x;\n\t\tif (DEL[son]<x) DEL[son]=x;\n\t\tson++;\n\t\tif (ADD[son]<x) ADD[son]=x;\n\t\tif (DEL[son]<x) DEL[son]=x;\n\t\tADD[k]=0;\n\t}\n\tif (DEL[k]!=inf)\n\t{\n\t\tint son=k+k,x=DEL[k];\n\t\tif (ADD[son]>x) ADD[son]=x;\n\t\tif (DEL[son]>x) DEL[son]=x;\n\t\tson++;\n\t\tif (ADD[son]>x) ADD[son]=x;\n\t\tif (DEL[son]>x) DEL[son]=x;\n\t\tDEL[k]=inf;\n\t}\n}\n```\n\u6700\u540e\u53ea\u9700\u8981\u4e00\u4e2a\u904d\u5386\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86.\n\u9644\u4e0a\u5b8c\u6574\u4ee3\u7801\n\n```\n#include<bits/stdc++.h> \nusing namespace std;\nint n,k,opt,l,r,x,inf;\nint ADD[8050000],DEL[8050000];\nvoid pushdown(int k)\n{\n\tif (ADD[k]!=0)\n\t{\n\t\tint son=k+k,x=ADD[k];\n\t\tif (ADD[son]<x) ADD[son]=x;\n\t\tif (DEL[son]<x) DEL[son]=x;\n\t\tson++;\n\t\tif (ADD[son]<x) ADD[son]=x;\n\t\tif (DEL[son]<x) DEL[son]=x;\n\t\tADD[k]=0;\n\t}\n\tif (DEL[k]!=inf)\n\t{\n\t\tint son=k+k,x=DEL[k];\n\t\tif (ADD[son]>x) ADD[son]=x;\n\t\tif (DEL[son]>x) DEL[son]=x;\n\t\tson++;\n\t\tif (ADD[son]>x) ADD[son]=x;\n\t\tif (DEL[son]>x) DEL[son]=x;\n\t\tDEL[k]=inf;\n\t}\n}\nvoid add(int x,int y,int z,int l,int r,int k)\n{\n\tif ((l==x)&&(r==y))\n\t{\n\t\tif (ADD[k]<z) ADD[k]=z;\n\t\tif (DEL[k]<z) DEL[k]=z;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tint mid=(l+r)>>1;\n\tif (y<=mid) add(x,y,z,l,mid,k+k);\n\telse if (x>mid) add(x,y,z,mid+1,r,k+k+1);\n\telse add(x,mid,z,l,mid,k+k),add(mid+1,y,z,mid+1,r,k+k+1);\n}\nvoid del(int x,int y,int z,int l,int r,int k)\n{\n\tif ((l==x)&&(r==y))\n\t{\n\t\tif (ADD[k]>z) ADD[k]=z;\n\t\tif (DEL[k]>z) DEL[k]=z;\n\t\treturn;\n\t}\n\tpushdown(k);\n\tint mid=(l+r)>>1;\n\tif (y<=mid) del(x,y,z,l,mid,k+k);\n\telse if (x>mid) del(x,y,z,mid+1,r,k+k+1);\n\telse del(x,mid,z,l,mid,k+k),del(mid+1,y,z,mid+1,r,k+k+1);\n}\nvoid getans(int l,int r,int k)\n{\n\tif (l==r) \n\t{\n\t\tprintf(\"%d\\n\",ADD[k]);\n\t\treturn;\n\t}\n\tpushdown(k);\n\tint mid=(l+r)>>1;\n\tgetans(l,mid,k+k);\n\tgetans(mid+1,r,k+k+1);\n}\nint main()\n{\n\tinf=100005;\n\tscanf(\"%d%d\",&n,&k);\n\tfor (int i=1;i<=n<<2;i++)\n\tDEL[i]=inf;\n\tfor (int i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&opt,&l,&r,&x);\n\t\tl++;\n\t\tr++;\n\t\tif (opt==1) add(l,r,x,1,n,1);\n\t\tif (opt==2) del(l,r,x,1,n,1);\n\t}\n\tgetans(1,n,1);\n}\n\n```\n",
        "postTime": 1543146445,
        "uid": 28810,
        "name": "King_of_gamers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    },
    {
        "content": "### [IOI2014] Wall \u7816\u5899\n\n#### \u9898\u610f\n\n\u8fd9\u662f\u4e00\u9053 IOI \u539f\u9898\u3002\n\n\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u5168 $0$ \u5e8f\u5217\uff0c\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u5bf9\u67d0\u533a\u95f4\u5185\u7684\u6240\u6709\u6570 $x$\uff0c\u4ee4 $x=\\max(t,x)$\uff08$t$ \u662f\u64cd\u4f5c\u53c2\u6570\uff09\n2. \u5bf9\u67d0\u533a\u95f4\u5185\u7684\u6240\u6709\u6570 $x$\uff0c\u4ee4 $x=\\min(t,x)$\n\n\u6c42\u6700\u540e\u7684\u5e8f\u5217\u3002\n\n#### \u601d\u8def\n\n\u8fd9\u9053\u9898\u4e0e\u201c[[SCOI 2016] \u840c\u840c\u54d2](https://www.luogu.org/problem/P3295)\u201d\u7c7b\u4f3c\uff0c\u5982\u679c\u6bcf\u6b21\u533a\u95f4\u64cd\u4f5c\u90fd\u66b4\u529b\u5730\u5bf9\u533a\u95f4\u5185\u6bcf\u4e00\u4e2a\u6570\u90fd\u8fdb\u884c\u8c03\u6574\uff0c\u90a3\u4e48\u590d\u6742\u5ea6\u5c06\u65e0\u6cd5\u627f\u53d7\u3002\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u76f4\u63a5\u5bf9\u201c\u533a\u95f4\u201d\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u201c\u840c\u840c\u54d2\u201d\u8fd9\u9053\u9898\u4e2d\uff0c\u64cd\u4f5c\u4e4b\u95f4\u4e92\u4e0d\u5f71\u54cd\uff0c\u800c\u4e14\u64cd\u4f5c\u533a\u95f4\u53ef\u4ee5\u91cd\u53e0\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 st \u8868\uff08\u82e5\u64cd\u4f5c\u533a\u95f4\u4e0d\u53ef\u91cd\u53e0\uff0c\u540c\u6837\u53ef\u4f7f\u7528 st \u8868\uff0c\u4f46\u64cd\u4f5c\u533a\u95f4\u8981\u88ab\u4e8c\u8fdb\u5236\u62c6\u5206\u6210\u4e3a $O(\\log l)$ \u4e2a\uff09\u3002\u4f46\u662f\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u4e0d\u540c\u7684\u64cd\u4f5c\u524d\u540e\u4f1a\u6709\u5f71\u54cd\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u70b9\u7ef4\u62a4\u201c\u5df2\u7ecf\u5bf9\u8fd9\u4e2a\u533a\u95f4\u8fdb\u884c\u3001\u4f46\u8fd8\u6ca1\u6709\u5bf9\u8fd9\u4e2a\u533a\u95f4\u7684\u5b69\u5b50\u5e94\u7528 (apply) \u7684\u9650\u5236\u201d\u3002\u5982\u679c\u6211\u4eec\u628a\u6211\u4eec\u7684\u6570\u60f3\u8c61\u6210\u4e00\u6392\u91d1\u5c5e\u7403\uff0c\u90a3\u4e48 1 \u64cd\u4f5c\u53ef\u4ee5\u60f3\u8c61\u6210\u7528\u4e00\u5757\u94a2\u677f\u4ece\u4e0b\u5f80\u4e0a\u63a8\u533a\u95f4\u5185\u7684\u7403\uff0c\u4e00\u76f4\u63a8\u5230\u9ad8\u5ea6 $t$\uff0c\u4f7f\u4e4b\u4e0d\u4f4e\u4e8e $t$\uff1b2 \u64cd\u4f5c\u53ef\u4ee5\u60f3\u8c61\u6210\u7528\u4e00\u5757\u94a2\u677f\u4ece\u4e0a\u5f80\u4e0b\u538b\uff0c\u4e00\u76f4\u538b\u5230\u9ad8\u5ea6 $t$\u3002\u4e8e\u662f\u201c\u6bcf\u4e2a\u533a\u95f4\u7684\u9650\u5236\u201d\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u5411\u4e0b\u538b\u7684\u677f\u5230\u8fbe\u7684\u6700\u5c0f\u9ad8\u5ea6\uff0c\u4e00\u79cd\u662f\u5411\u4e0a\u63a8\u7684\u677f\u5230\u8fbe\u7684\u6700\u5927\u9ad8\u5ea6\u3002\u521d\u59cb\u65f6\u957f\u5ea6\u5927\u4e8e $1$ \u7684\u533a\u95f4\u90fd\u6ca1\u6709\u9650\u5236\u2014\u2014\u5411\u4e0b\u538b\u7684\u677f\u7684\u6700\u5c0f\u9ad8\u5ea6\uff08\u8bb0\u4e3a $n$\uff09\u4e3a $\\infty$\uff0c\u5411\u4e0a\u63a8\u7684\u677f\u7684\u6700\u5927\u9ad8\u5ea6\uff08\u8bb0\u4e3a $m$\uff09\u4e3a $0$\uff1b\u53ef\u4ee5\u8ba4\u4e3a\u521d\u59cb\u65f6\u957f\u5ea6\u4e3a $1$ \u7684\u533a\u95f4\u7684 $n$ \u548c $m$ \u90fd\u662f $0$\u3002\n\n\u73b0\u5728\u8003\u8651\u5bf9\u4e00\u4e2a\u533a\u95f4\u8fdb\u884c 1 \u64cd\u4f5c\u3002\u7528\u4e00\u5757\u81ea\u4e0b\u800c\u4e0a\u7684\u4e0a\u63a8\u94a2\u677f\u63a8\u8fd9\u4e2a\u533a\u95f4\uff0c\u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\u5462\uff1f\u5982\u679c\u539f\u6765\u7684\u4e0b\u754c\u94a2\u677f\u4f4e\u4e8e $t$\uff0c\u5f53\u7136\u4f1a\u88ab\u63a8\u5230 $t$ \u4f4d\u7f6e\uff0c\u5426\u5219\u4e0d\u53d8\uff1b\u4e0a\u754c\u540c\u7406\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5bf9\u8fd9\u4e2a\u533a\u95f4\u7684\u53d8\u5316\u662f $m=\\max(m,t),n=\\max(n,t)$\u3002\n\n\u518d\u8003\u8651 2 \u64cd\u4f5c\uff0c\u7c7b\u4f3c\u5730\uff0c$m=\\min(m,t),n=\\min(n,t)$\u3002\n\n\u7531\u4e8e\u6709\u4e9b\u64cd\u4f5c\u4e4b\u95f4\u4f1a\u76f8\u4e92\u5f71\u54cd\uff0c\u56e0\u6b64\u5982\u679c\u6709\u4e00\u4e2a\u8981\u5e94\u7528\u5230\u5b69\u5b50\u3001\u4f46\u4e0d\u5e94\u7528\u5230\u7236\u4eb2\u533a\u95f4\u7684\u64cd\u4f5c\uff0c\u5c31\u5fc5\u987b\u5148\u628a\u6807\u8bb0\u4e0b\u4f20\u3002\u6807\u8bb0\u4e0b\u4f20\u4e5f\u5c31\u662f\u628a\u4e4b\u524d lazy tag \u5ef6\u8fdf\u5e94\u7528\u7684\u64cd\u4f5c\u5e94\u7528\u5230\u5b69\u5b50\u4e0a\uff0c\u4e5f\u5c31\u662f\u5bf9\u5b69\u5b50\u8fdb\u884c $1\\ m,\\ 2\\ n$ \u8fd9\u4e24\u4e2a\u64cd\u4f5c\u2014\u2014\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7684\u987a\u5e8f\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3a\u5728\u7ef4\u62a4\u7236\u8282\u70b9\u7684\u4e24\u4e2a\u6807\u8bb0\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u8fd9\u4e24\u5757\u94a2\u677f $m\\le n$\uff0c\u56e0\u6b64\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\n\n\u8f93\u51fa\u7684\u65f6\u5019\u76f4\u63a5\u8f93\u51fa\u53f6\u5b50\u8282\u70b9\u7684 $m$ \u6216 $n$ \u5373\u53ef\u3002\u7531\u4e8e\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\uff0c\u53f6\u5b50\u8282\u70b9\u7684 $m,n$ \u59cb\u7ec8\u76f8\u540c\u2014\u2014\u5939\u7740\u5355\u4e2a\u7403\u7684\u677f\u603b\u662f\u7d27\u5bc6\u5408\u5728\u4e00\u8d77\u7684\uff0c\u56e0\u6b64\u8f93\u51fa\u54ea\u4e00\u4e2a\u90fd\u53ef\u4ee5\u3002\n\n\u4e0b\u9762\u7528\u4e00\u4e2a\u5c0f\u4f8b\u5b50\u6f14\u793a\u4e00\u4e0b\u66f4\u65b0\u548c\u6807\u8bb0\u4e0b\u4f20\u7684\u8fc7\u7a0b\u3002\n\n```text\n5 2\n1 1 3 2\n2 3 4 1\n```\n\n\u4e3a\u65b9\u4fbf\u9605\u8bfb\uff0c\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u7684\u4e0b\u6807**\u5df2\u8c03\u6574\u4e3a\u4ece 1 \u5f00\u59cb**\u3002\n\n\u521d\u59cb\u65f6\u662f\u8fd9\u6837\u3002\n\n![\u521d\u59cb\u72b6\u6001](https://cdn.luogu.com.cn/upload/image_hosting/c36laq34.png)\n\n\u8fdb\u884c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u540e\u53d8\u6210\u4e86\u8fd9\u6837\u3002\n\n![\u72b6\u60011](https://cdn.luogu.com.cn/upload/image_hosting/qiji4qlv.png)\n\n\u865a\u7ebf\u8868\u793a\u7236\u8282\u70b9\u7684\u9650\u5236\u8fd8\u6ca1\u6709\u5e94\u7528\u5230\u5b50\u8282\u70b9\u4e0a\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a $1\\sim 3$ \u8fd9\u4e09\u4e2a\u7403\u5df2\u7ecf\u88ab\u63a8\u5230\u4e86 $2$ \u7684\u4f4d\u7f6e\u3002\n\n\u8981\u8fdb\u884c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u7ebf\u6bb5\u6811\u8282\u70b9 $[1,3]$ \u8981\u8fdb\u884c\u6807\u8bb0\u4e0b\u4f20\uff0c\u4e0b\u4f20\u7684\u7ed3\u679c\u662f\u8fd9\u6837\u3002\n\n![\u72b6\u60011.5](https://cdn.luogu.com.cn/upload/image_hosting/ifvkbnft.png)\n\n\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u7684\u6700\u7ec8\u7ed3\u679c\u662f\u8fd9\u6837\u3002\n\n![\u72b6\u60012](https://cdn.luogu.com.cn/upload/image_hosting/idc268a0.png)\n\n\u53ef\u4ee5\u7528\u66f4\u590d\u6742\u7684\u4f8b\u5b50\u6765\u6a21\u62df\uff0c\u66f4\u597d\u5730\u5f04\u61c2\u8fd9\u4e2a\u8bbe\u8ba1\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n#define MAXIOLG 25\n#define MAXN 2000005\n#define MAX4N 8000005\n#define INF 19260817\nusing namespace std;\n\ntypedef int io_t;\n\n//\u5feb\u8bfb\u5feb\u5199\nio_t shin[MAXIOLG];\nio_t seto(void);\nvoid ayano(io_t x,char spliter='\\n');\n\n//\u7ebf\u6bb5\u6811\u8282\u70b9\nstruct Ene{\n    int l,r,mxm,mnm;\n    //\u4ee5\u4e0b\u4f9d\u6b21\u4e3a\u8282\u70b9\u533a\u95f4\u5de6\u7aef\u70b9\u3001\u53f3\u7aef\u70b9\u3001m \u503c\u3001n \u503c\u3001\u5de6\u53f3\u513f\u5b50\u5e8f\u53f7\n    #define L(x) ((stree[(x)]).l)\n    #define R(x) ((stree[(x)]).r)\n    #define MX(x) ((stree[(x)]).mxm)\n    #define MN(x) ((stree[(x)]).mnm)\n    #define LC(x) (((x)<<1))\n    #define RC(x) (((x)<<1)^1)\n};\n\nint n;\nEne stree[MAX4N]; //\u7ebf\u6bb5\u6811\n\nvoid build_tree(int root,int l,int r); //\u5efa\u6811\nvoid cmx(int root,int l,int r,int x); //1 \u64cd\u4f5c\nvoid cmn(int root,int l,int r,int x); //2 \u64cd\u4f5c\nvoid pushdown(int root); //\u6807\u8bb0\u4e0b\u4f20,\u628a\u7236\u8282\u70b9\u7684\u64cd\u4f5c\u5e94\u7528\u5230\u5b50\u8282\u70b9\nvoid output(int root); //\u8f93\u51fa\u7b54\u6848\n\nint main(void){\n    int q;\n    n=seto(),q=seto();\n    const int troot=1; //\u7ebf\u6bb5\u6811\u6839\u8282\u70b9\n    build_tree(troot,1,n);\n    while (q--){\n        int op,l,r,x;\n        op=seto(),l=seto()+1,r=seto()+1,x=seto();\n        if (op==1)\n            cmx(troot,l,r,x);\n        else\n            cmn(troot,l,r,x);\n    }\n    output(troot);\n    return 0;\n}\n\nvoid build_tree(int root,int l,int r){\n    //\u5efa\u6811\n    //\u521d\u59cb\u65f6\u975e\u53f6\u8282\u70b9\u6ca1\u6709\u9650\u5236\n    L(root)=l,R(root)=r,MX(root)=0,MN(root)=INF;\n    if (l==r)\n        //\u53f6\u8282\u70b9\u6709\u9650\u5236, m=n=0\n        return MX(root)=MN(root)=0,void();\n    int mid=(l+r)>>1;\n    build_tree(LC(root),l,mid);\n    build_tree(RC(root),mid+1,r);\n}\n\nvoid cmx(int root,int l,int r,int x){\n    if (l<=L(root) && r>=R(root)){\n        //\u628a\u9650\u5236\u6807\u8bb0\u5728\u8fd9\u4e2a\u533a\u95f4\n        //m,n \u90fd\u53d6 max\n        MX(root)=max(MX(root),x);\n        MN(root)=max(MN(root),x);\n        return;\n    }\n    int mid=(L(root)+R(root))>>1;\n    pushdown(root);\n\n    (l<=mid)?(cmx(LC(root),l,r,x)):(void());\n    (r>mid)?(cmx(RC(root),l,r,x)):(void());\n}\n\nvoid cmn(int root,int l,int r,int x){\n    if (l<=L(root) && r>=R(root)){\n        //m,n \u90fd\u53d6 min\n        MX(root)=min(MX(root),x),\n        MN(root)=min(MN(root),x);\n        return;\n    }\n    int mid=(L(root)+R(root))>>1;\n    pushdown(root);\n    (l<=mid)?(cmn(LC(root),l,r,x)):(void());\n    (r>mid)?(cmn(RC(root),l,r,x)):(void());\n}\nvoid pushdown(int root){\n    //\u6807\u8bb0\u4e0b\u4f20\n    if (L(root)==R(root))\n        return;\n    //\u5bf9\u5de6\u53f3\u513f\u5b50\u7684 m,n \u503c\u90fd\u5e94\u7528\u7b49\u6548 2 \u64cd\u4f5c\n    MX(LC(root))=min(MX(LC(root)),MN(root));\n    MX(RC(root))=min(MX(RC(root)),MN(root));\n    MN(LC(root))=min(MN(LC(root)),MN(root));\n    MN(RC(root))=min(MN(RC(root)),MN(root));\n    //\u5bf9\u5de6\u53f3\u513f\u5b50\u7684 m,n \u503c\u90fd\u5e94\u7528\u7b49\u6548 1 \u64cd\u4f5c\n    MX(LC(root))=max(MX(LC(root)),MX(root));\n    MX(RC(root))=max(MX(RC(root)),MX(root));\n    MN(LC(root))=max(MN(LC(root)),MX(root));\n    MN(RC(root))=max(MN(RC(root)),MX(root));\n    //\u7236\u8282\u70b9\u7684\u9650\u5236\u5e94\u7528\u5b8c\u6bd5\uff0c\u53d6\u6d88\u9650\u5236\n    MX(root)=0,MN(root)=INF;\n}\nvoid output(int root){\n    if (L(root)==R(root)){\n        ayano(MX(root));\n        return;\n    }\n    pushdown(root);\n    output(LC(root)),output(RC(root));\n}\n\n//\u4ee5\u4e0b\u4e24\u4e2a\u51fd\u6570\u4e3a\u8bfb\u5165\u8f93\u51fa\u4f18\u5316\n\nio_t seto(void){\n    io_t x=0;\n    int symbol=0;\n    char ch=getchar();\n    while (!isdigit(ch))\n        (ch=='-')?(symbol=1):(0),\n        ch=getchar();\n    while (isdigit(ch))\n        x=(x*10)+(ch-'0'),\n        ch=getchar();\n    return (symbol)?(-x):(x);\n}\n\nvoid ayano(io_t x,char spliter){\n    if (!x){\n        putchar('0'),putchar(spliter);\n        return;\n    }\n    if (x<0)\n        putchar('-'),x=-x;\n    int len=0;\n    while (x){\n        io_t d=x/10;\n        shin[len++]=x-(d*10);\n        x=d;\n    }\n    while (len--)\n        putchar(shin[len]+'0');\n    putchar(spliter);\n}\n```",
        "postTime": 1572831075,
        "uid": 25008,
        "name": "Sweetlemon",
        "ccfLevel": 9,
        "title": "\u533a\u95f4\u4e0e\u7403"
    },
    {
        "content": "By EternalAlexander\n\n~~\u6211\u624d\u4e0d\u4f1a\u8bf4\u6211splay\u4fe1\u4ef0\u7136\u540e\u4e0d\u505c\u7684\u7528\u5c0f\u53f7\u4ea4TLE\u4e86\u4e00\u4e2a\u665a\u4e0a\u624d\u6539\u7ebf\u6bb5\u6811~~\n\n\u7ebf\u6bb5\u6811\u3002\n\n\u8003\u8651\u63a8\u6807\u8bb0\u3002\n\nup[i],down[i]\u5206\u522b\u662fadd,remove\u7684\u6807\u8bb0\u3002\u8003\u8651\u5982\u4f55\u5904\u7406\u4e24\u4e2a\u6807\u8bb0\u4e4b\u95f4\u7684\u8986\u76d6\u3002\n\u9996\u5148\uff0c\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u5373\u5c06\u88ab\u6253\u4e0a\u4e00\u4e2adown\u6807\u8bb0\uff0c\u503c\u4e3ax\uff0c\u5e76\u4e14\u540c\u65f6\u5b83\u7684up\u6807\u8bb0\u4e3ay\uff0c\u90a3\u4e48\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\n\n1.\u5982\u679cx<y: \u76f4\u63a5\u6253\u4e0a\uff0c\u65e0\u5f71\u54cd\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u503c\u90fd\u5c06\u88ab\u4fee\u6539\u6210x~y\u8fd9\u4e2a\u8303\u56f4\u5185\u7684\u503c\u3002\n\n2.\u5982\u679cx>y: \u6b64\u65f6\u4e0d\u96be\u770b\u51fa\uff0c\u6709\u4e86\u4e4b\u524d\u7684up\u6807\u8bb0\uff0c\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u503c\u5e94\u8be5\u5168\u90e8\u90fd\u5927\u4e8e\u7b49\u4e8ey\u3002\u6b64\u65f6\u518d\u8fdb\u884c\u4e00\u4e2adown\u64cd\u4f5c\uff0c\u5219\u4f1a\u628a\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u503c\u5168\u90e8\u6539\u4e3ax\u3002\u56e0\u6b64\u628aup\u6807\u8bb0\u6539\u4e3ax\u7136\u540e\u6253\u4e0adown\u6807\u8bb0\u3002\n\n\u6253up\u6807\u8bb0\u4e5f\u662f\u540c\u7406\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6700\u540e\u904d\u5386\u4e00\u6b21\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u4e0b\u9762\u662fpushdown\u51fd\u6570\u7684\u4ee3\u7801\u3002\u5b8c\u6574\u4ee3\u7801\u5199\u7684\u592a\u4e11\u5c31\u4e0d\u653e\u4e86\u3002\n\n```cpp\ninline void pushdown(int root) {\n    if (root==0) return;\n    if (left[root]==right[root]) {\n        if (down[root]!=-1) val[root]=std::min(down[root], val[root]);\n        if (up[root]!=-1) val[root]=std::max(up[root], val[root]);\n        return;\n    }if (root[up]!=-1) {\n        up[root<<1]=std::max(up[root<<1], up[root]);\n        if (down[root<<1]!=-1) {\n            if (down[root<<1]<up[root]) down[root<<1]=up[root];\n        }up[root<<1|1]=std::max(up[root<<1|1], up[root]);\n        if (down[root<<1|1]!=-1) {\n            if (down[root<<1|1]<up[root]) down[root<<1|1]=up[root];\n        }up[root]=-1;\n    }if (root[down]!=-1) {\n        \n        if (down[root<<1]!=-1) down[root<<1]=std::min(down[root<<1], down[root]);\n        else down[root<<1]=down[root];\n        if (up[root<<1]!=-1) {\n            if (up[root<<1]>down[root]) up[root<<1]=down[root];\n        }if (down[root<<1|1]!=-1) down[root<<1|1]=std::min(down[root<<1|1], down[root]);\n        else down[root<<1|1]=down[root];\n        if (up[root<<1|1]!=-1) {\n            if (up[root<<1|1]>down[root]) up[root<<1|1]=down[root];\n        }down[root]=-1;\n    }\n}\n```",
        "postTime": 1526093166,
        "uid": 48355,
        "name": "EternalAlexander",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    },
    {
        "content": "# \u9898\u76ee\u7b80\u4ecb\uff1a\n~~\u6c34\u6c34\u7684\u4e00\u9053\u7ebf\u6bb5\u6811\u3002~~ \u4e00\u9053\u5229\u7528\u7ebf\u6bb5\u65ad\u6811\u4e2d\u7684 $lazy\\_tag$ \u7b80\u4fbf\u6c42\u8282\u70b9\u7ecf\u8fc7 $max$ \u548c $min$ \u64cd\u4f5c\u540e\u7684\u503c\u7684\u6c34\u9898\u3002\n\n# \u601d\u8def\uff1a\n\u548c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u6a21\u677f\u9898\u4e00\u6837\uff0c\u771f\u641e\u4e0d\u61c2\u4e3a\u4ec0\u4e48\u662f\u7d2b\u9898\u3002\u751a\u81f3\u56e0\u4e3a\u8fd9\u9053\u4e0d\u8981\u6c42\u6c42\u533a\u95f4\u548c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6211\u4eec\u7684 $max$ \u61d2\u6807\u8bb0\u548c $min$ \u61d2\u6807\u8bb0\u5c31\u53ef\u4ee5\u5207\u6389\u8fd9\u4e00\u9898\u5566~\u3002\u597d\u6d88\u606f\uff1a\u8fd9\u9053\u9898\u4e0d\u7528\u5199 $push\\_up$ \u54df~ ~~\uff08\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u5417\uff09~~\u3002\n## code\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define lc p*2\n#define rc p*2+1\n#define mid (tree[p].l+tree[p].r)/2\n//\u61d2\u4eba\u7816\u7528\u8868\u793a\u6cd5\nusing namespace std;\nint n,m;\nstruct node{\n\tint l;//\u533a\u95f4\u5de6\u7aef\u70b9\n\tint r;//\u533a\u95f4\u53f3\u7aef\u70b9\n\tint min_n;//\u533a\u95f4\u6700\u5c0f\u503c\n\tint max_n;//\u533a\u95f4\u6700\u5927\u503c\n}tree[10000001*4];//4\u500d\u7a7a\u95f4\nvoid push_down(int p){\n\ttree[lc].max_n=max(tree[lc].max_n,tree[p].max_n);\n\ttree[lc].max_n=min(tree[lc].max_n,tree[p].min_n);\n    //\u66f4\u65b0\u5de6\u513f\u5b50\u6700\u5927\u503c\n\ttree[lc].min_n=min(tree[lc].min_n,tree[p].min_n);\n\ttree[lc].min_n=max(tree[lc].min_n,tree[p].max_n);\n    //\u66f4\u65b0\u53f3\u513f\u5b50\u6700\u5c0f\u503c\n\ttree[rc].max_n=max(tree[rc].max_n,tree[p].max_n);\n\ttree[rc].max_n=min(tree[rc].max_n,tree[p].min_n);\n    //\u66f4\u65b0\u5de6\u513f\u5b50\u6700\u5927\u503c\n\ttree[rc].min_n=min(tree[rc].min_n,tree[p].min_n);\n\ttree[rc].min_n=max(tree[rc].min_n,tree[p].max_n);\n    //\u66f4\u65b0\u5de6\u513f\u5b50\u6700\u5c0f\u503c\n\ttree[p].max_n=0,tree[p].min_n=10000000;//\u6e05\u7a7a\u61d2\u6807\u8bb0\n}\nvoid build(int p,int l,int r){\n\ttree[p].l=l;\n\ttree[p].r=r;\n\ttree[p].max_n=0;\n\ttree[p].min_n=100000000;//\u6700\u5c0f\u503c\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\n\tif(l>=r){\n\t\treturn;\n\t}\n\tbuild(lc,l,mid);//\u9012\u5f52\u6784\u9020\u5de6\u5b50\u6811\n\tbuild(rc,mid+1,r);//\u9012\u5f52\u6784\u9020\u53f3\u5b50\u6811\n//\tpush_up(p);\n}\nvoid change_1(int p,int l,int r,int x){//\u533a\u95f4max\u4fee\u6539\n\tif(tree[p].l>=l&&tree[p].r<=r){\n\t\ttree[p].max_n=max(tree[p].max_n,x);//\u66f4\u65b0\u6700\u5927\u503c\n\t\ttree[p].min_n=max(tree[p].min_n,x);//\u66f4\u65b0\u6700\u5c0f\u503c\n        //\u6ce8\u610f\uff01\uff01\uff01\u5982\u7ebf\u6bb5\u6811\u6a21\u677f2\uff0c\u4e24\u4e2a\u6807\u8bb0\u90fd\u8981\u4fee\u6539\u3002\n\t\treturn;\n\t}\n\tpush_down(p);//\u5148\u4e0b\u4f20\u61d2\u6807\u8bb0\n\tif(mid>=l) change_1(lc,l,r,x);//\u4fee\u6539\u5de6\u533a\u95f4\n\tif(mid<r) change_1(rc,l,r,x);//\u4fee\u6539\u53f3\u533a\u95f4\n//\tpush_up(p);\n} \nvoid change_2(int p,int l,int r,int x){//\u533a\u95f4min\u4fee\u6539\n\tif(tree[p].l>=l&&tree[p].r<=r){\n\t\ttree[p].max_n=min(tree[p].max_n,x);//\u66f4\u65b0\u6700\u5927\u503c\n\t\ttree[p].min_n=min(tree[p].min_n,x);//\u66f4\u65b0\u6700\u5c0f\u503c\n\t\treturn;\n\t}\n\tpush_down(p);\n\tif(mid>=l) change_2(lc,l,r,x);//\u4fee\u6539\u5de6\u533a\u95f4\n\tif(mid<r) change_2(rc,l,r,x);//\u4fee\u6539\u53f3\u533a\u95f4\n//\tpush_up(p);\n}\nvoid ask(int p){\n\tif(tree[p].l==tree[p].r){//\u5982\u679c\u5f53\u524d\u662f\u53f6\u5b50\u8282\u70b9\n\t\tif(tree[p].l<=n){//\u4e14\u7f16\u53f7\u5c0f\u4e8e\u7b49\u4e8en\n\t\t\tcout<<tree[p].max_n<<endl;//\u8f93\u51fa\u5f53\u524d\u8282\u70b9\u7684\u503c\n\t\t}\n\t\treturn;\n\t}\n\tpush_down(p);//\u6e05\u9664\u79ef\u538b\u7684\u5de5\u4f5c\n\task(lc),ask(rc);\n}\nint main(){\n\tcin>>n>>m;\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tint mode,l,r,h;\n\t\tcin>>mode>>l>>r>>h;\n\t\t++l,++r;//\u4e2a\u4eba\u4e60\u60ef1\u5f00\u59cb\n\t\tif(mode==1){\n\t\t\tchange_1(1,l,r,h);\n\t\t}else{\n\t\t\tchange_2(1,l,r,h);\n\t\t}\n\t}\n\task(1);\n\treturn 0;\n}//\u5b8c\u7f8e\u7ed3\u675f\n```\n\u849f\u84bb\u6700\u8fd1\u7684\u5b66\u4e60\u65b9\u5411\uff1a[P3834\t\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u68112\uff08\u4e3b\u5e2d\u6811\uff09](https://www.luogu.com.cn/problem/P3834)\uff0c[P6242\t\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 3](https://www.luogu.com.cn/problem/P6242)\u3002\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u53bb\u770b\u6211\u5199\u7684\u9898\u89e3\u3002",
        "postTime": 1603472156,
        "uid": 244165,
        "name": "_121017_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a\u521d\u59cb\u5143\u7d20\u4e3a $0$ \u7684\u6570\u5217\uff0c\u4ee5\u53ca $K$ \u6b21\u64cd\u4f5c\uff1a  \n+ \u5c06\u533a\u95f4 $[L, R]$ \u4e2d\u7684\u5143\u7d20\u5bf9 $h$ \u53d6 $max$\n+ \u5c06\u533a\u95f4 $[L, R]$ \u4e2d\u7684\u5143\u7d20\u5bf9 $h$ \u53d6 $min$\n\n----\n### \u89e3\u9898\u601d\u8def\n\u9996\u5148\u8981\u80fd\u770b\u51fa\u6765\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u9898\u3002  \n\u90a3\u4e48\u6211\u4eec\u8981\u5982\u4f55\u5efa\u7acb\u4e00\u4e2a\u8282\u70b9\u5462\uff1f  \n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u6211\u4eec\u8bb0\u4e24\u4e2a\u6807\u8bb0 $Min$ \u548c $Max$ \u3002  \n\u56e0\u4e3a\u9898\u76ee\u6d89\u53ca\u5230 $min$ \u548c $max$ \u64cd\u4f5c\uff0c\u6240\u4ee5\u5e94\u8be5\u4e0d\u96be\u60f3\u5230\u8bbe\u4e24\u4e2a\u8fd9\u6837\u7684\u6807\u8bb0\u3002  \n\u8fd9\u4e24\u4e2a\u6807\u8bb0\u7684\u610f\u4e49\uff1a  \n+ $Min[rt]$ \u8868\u793a\u7f16\u53f7\u4e3a $rt$ \u7684\u8282\u70b9\u5305\u542b\u7684\u533a\u95f4\u7684 $min$ \u503c\u6807\u8bb0\n+ $Max[rt]$ \u8868\u793a\u7f16\u53f7\u4e3a $rt$ \u7684\u8282\u70b9\u5305\u542b\u7684\u533a\u95f4\u7684 $max$ \u503c\u6807\u8bb0\n\n~~\u600e\u4e48\u597d\u50cf\u548c\u6ca1\u8bb2\u4e00\u6837~~   \n\u56e0\u4e3a\u9898\u76ee\u6700\u540e\u53ea\u8be2\u95ee\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u5e76\u4e0d\u5728\u4e4e\u8282\u70b9\u4e2d\u6709\u4e9b\u4ec0\u4e48\u503c\u3002  \n\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e0e\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ca\u4e24\u4e2a\u6807\u8bb0\uff1a $Min$ \u548c $Max$ \uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8fd9\u4e24\u4e2a\u6765\u66f4\u65b0\u53f6\u5b50\uff09\u3002  \n\u800c\u8fd9\u4e24\u4e2a\u6807\u8bb0\u662f\u53ef\u4ee5\u901a\u8fc7\u533a\u95f4\u66f4\u65b0\u6765\u7ef4\u62a4\u7684\u3002  \n#### \u5982\u4f55\u5904\u7406\u6807\u8bb0\n\u5904\u7406\u6807\u8bb0\u6709\u4e09\u4e2a\u64cd\u4f5c\uff1a\u521d\u59cb\u5316\u3001\u6253\u6807\u8bb0\u548c\u4e0b\u4f20\u6807\u8bb0\u3002  \n\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u521d\u59cb\u5316\uff1a  \n\u7531\u4e8e\u6211\u4eec\u7684\u6807\u8bb0\u662f\u7528\u6765\u66f4\u65b0\u5b50\u8282\u70b9\u7684\uff08\u5373\u513f\u5b50\u7684\u6807\u8bb0\u5bf9\u7236\u4eb2\u7684 $Max$ \u53d6 $max$\uff0c\u5bf9\u7236\u4eb2\u7684 $Min$ \u53d6 $min$\uff09  \n\u6240\u4ee5\u6211\u4eec\u5c31\u628a $Max$ \u8d4b\u503c\u4e3a\u6781\u5c0f\u503c\uff0c$Min$ \u8d4b\u503c\u4e3a\u6781\u5927\u503c\uff1a\n```cpp\nMax[rt] = 0, Min[rt] = 0x3f3f3f3f;\n```\n\n**\u7136\u540e\u518d\u6765\u770b\u6253\u6807\u8bb0\uff1a**\n```cpp\ninline void fMax(int rt, int h) { Min[rt] = max(Min[rt], h), Max[rt] = max(Max[rt], h); }\n\ninline void fMin(int rt, int h) { Min[rt] = min(Min[rt], h), Max[rt] = min(Max[rt], h); }\n```\n~~\u5176\u5b9e\u8fd9\u4e24\u4e2a\u51fd\u6570\u672c\u8d28\u662f\u662f\u4e00\u6837\u7684~~  \n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\uff1a  \n\u5982\u679c\u6211\u4eec\u628a\u4e00\u6bb5\u533a\u95f4\u5bf9 $h$ \u53d6 $max$\uff0c\u90a3\u4e48\u8fd9\u6bb5\u533a\u95f4\u7684 $Min$ \u6807\u8bb0\u548c $Max$ \u6807\u8bb0\u90fd\u5e94\u8be5\u5bf9 $h$ \u53d6 $max$\u3002  \n\u8fd9\u4e2a\u6211\u4e0d\u4f5c\u5177\u4f53\u5206\u6790\uff1a\u4f60\u4eec\u53ef\u4ee5\u81ea\u5df1\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48~~\u4e5f\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b~~  \n\u6240\u4ee5\u6253\u6807\u8bb0\u5c31\u8bb2\u5b8c\u4e86 $QwQ$  \n\n**\u6700\u540e\u518d\u6765\u770b\u4e0b\u4f20\u6807\u8bb0 $pushdown$**\n```cpp\ninline void pushdown(int rt) {\n\tfMin(lc(rt), Min[rt]), fMin(rc(rt), Min[rt]);\n\t\n\tfMax(lc(rt), Max[rt]), fMax(rc(rt), Max[rt]);\n\t\n\tMax[rt] = 0, Min[rt] = 0x3f3f3f3f;\t\n}\n```\n\u5176\u5b9e\u8fd9\u4e2a\u548c\u6253\u6807\u8bb0\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u7528\u7236\u4eb2\u7684\u4fe1\u606f\u66f4\u65b0\u513f\u5b50\u3002\n\n#### \u5982\u4f55\u8f93\u51fa\u7b54\u6848\n\u8fd9\u4e2a\u5176\u5b9e\u53ea\u8981\u904d\u5386\u4e00\u904d\u7ebf\u6bb5\u6811\uff0c\u628a\u53f6\u5b50\u8282\u70b9\u7684 $Max$ \u6216 $Min$ \u8f93\u51fa\u5373\u53ef\u3002\n\n----\n### \u7ec6\u8282\u6ce8\u610f\u4e8b\u9879\n+ \u7ebf\u6bb5\u6811\u7a7a\u95f4\u5f00 $4$ \u500d\n+ \u8bb0\u5f97 $pushdown$ \u540e\u4e5f\u8981\u521d\u59cb\u5316\n\n----\n### \u53c2\u8003\u4ee3\u7801\n```cpp\n/*--------------------------------\n  Author: The Ace Bee\n  Blog: www.cnblogs.com/zsbzsb\n  This code is made by The Ace Bee\n--------------------------------*/\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <ctime>\n\n#define rg register\n\nusing namespace std;\n\ntemplate < typename T > inline void read(T& s) {\n\ts = 0; int f = 0; char c = getchar();\n\twhile (!isdigit(c)) f |= (c == '-'), c = getchar();\n\twhile (isdigit(c)) s = s * 10 + (c ^ 48), c = getchar();\n\ts = f ? -s : s;\n}\n\nconst int _ = 2000010;\n\nint n, k, Min[_ << 2], Max[_ << 2];\n\ninline int lc(int rt) { return rt << 1; }\n\ninline int rc(int rt) { return rt << 1 | 1; }\n\ninline void fMax(int rt, int h) { Min[rt] = max(Min[rt], h), Max[rt] = max(Max[rt], h); }\n\ninline void fMin(int rt, int h) { Min[rt] = min(Min[rt], h), Max[rt] = min(Max[rt], h); }\n\ninline void pushdown(int rt) {\n\tfMin(lc(rt), Min[rt]), fMin(rc(rt), Min[rt]);\n\t\n\tfMax(lc(rt), Max[rt]), fMax(rc(rt), Max[rt]);\n\t\n\tMax[rt] = 0, Min[rt] = 0x3f3f3f3f;\n}\n\ninline void update(int rt, int l, int r, int x, int y, int h, int t) {\n\tif (x <= l && r <= y) {\n\t\tif (t == 1)\n\t\t\treturn fMax(rt, h);\n\t\telse\n\t\t\treturn fMin(rt, h);\n\t}\n\t\n\tint mid = (l + r) >> 1;\n\n\tpushdown(rt);\n \t\n\tif (x <= mid) update(lc(rt), l, mid, x, y, h, t);\n\t\n\tif (y > mid) update(rc(rt), mid + 1, r, x, y, h, t);\n}\n\ninline void query(int rt, int l, int r) {\n\tif (l == r) { printf(\"%d\\n\", Max[rt]); return ; }\n\t\n\tint mid = (l + r) >> 1;\n\t\n\tpushdown(rt);\n\t\n\tquery(lc(rt), l, mid);\n\n\tquery(rc(rt), mid + 1, r);\n}\n\nint main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\", \"r\", stdin);\n#endif\n\tread(n), read(k);\n\n\tfor (rg int i = 1; i <= n << 2; ++i)\n\t\tMax[i] = 0, Min[i] = 0x3f3f3f3f;\n\n\tfor (rg int t, l, r, h, i = 1; i <= k; ++i)\n\t\tread(t), read(l), read(r), read(h), update(1, 1, n, l + 1, r + 1, h, t);\n\n\tquery(1, 1, n);\n\t\n\treturn 0;\n}\n\n```\n**\u5b8c\u7ed3\u6492\u82b1 $qwq$**",
        "postTime": 1570027422,
        "uid": 87839,
        "name": "Sangber",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    },
    {
        "content": "\u611f\u89c9\u9898\u89e3\u91cc\u9762\u7684\u4e0b\u4f20\u6807\u8bb0\u90fd\u5199\u9ebb\u70e6\u4e86\uff0c\u56e0\u4e3a\u8fd9\u9898\u53ea\u9700\u8981\u8f93\u51fa\u6700\u540e\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u7ef4\u62a4\u6700\u5927\u6700\u5c0f\u503c\u7684\u8986\u76d6\u6807\u8bb0\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u628a\u672c\u5c42\u7684\u6700\u5927\u6700\u5c0f\u503c\u4e0b\u4f20\u4e4b\u540e\u6e05\u9664\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h> \n#define LL long long \nusing namespace std;\nconst int MAXN = 8e6 + 10, INF = 1e9 + 10;\ntemplate <typename A, typename B> inline bool chmin(A &a, B b){if(a > b) {a = b; return 1;} return 0;}\ntemplate <typename A, typename B> inline bool chmax(A &a, B b){if(a < b) {a = b; return 1;} return 0;}\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    while(c < '0' || c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\nint N, K, opt[MAXN], L[MAXN], R[MAXN], H[MAXN];\n#define ls k << 1\n#define rs k << 1 | 1 \nstruct Node {\n\tint l, r, mx, mn;\n}T[MAXN];\nvoid psmin(int k, int v) {\n\tchmin(T[k].mx, v); chmin(T[k].mn, v);\n}\nvoid psmax(int k, int v) {\n\tchmax(T[k].mx, v); chmax(T[k].mn, v);\n}\nvoid pushdown(int k) {\n\tif(T[k].mn != INF)  psmin(ls, T[k].mn), psmin(rs, T[k].mn), T[k].mn = INF;\n\tif(T[k].mx != -INF) psmax(ls, T[k].mx), psmax(rs, T[k].mx), T[k].mx = -INF;\n}\nvoid Build(int k, int ll, int rr) {\n\tT[k].l = ll; T[k].r = rr; T[k].mn = INF; T[k].mx = -INF; \n\tif(ll == rr) return ;\n\tint mid = ll + rr >> 1;\n\tBuild(ls, ll, mid); \n\tBuild(rs, mid + 1, rr);\n}\nvoid Int(int k, int ll, int rr, int v, int opt) {\n\tif(ll <= T[k].l && T[k].r <= rr) {\n\t\topt == 2 ? psmin(k, v) : psmax(k, v);\n\t\treturn ;\n\t}\n\tpushdown(k);\n\tint mid = T[k].l + T[k].r >> 1;\n\tif(ll <= mid) Int(ls, ll, rr, v, opt);\n\tif(rr  > mid) Int(rs, ll, rr, v, opt);\n}\nvoid dfs(int k) {\n\tif(T[k].l == T[k].r) {printf(\"%d\\n\", max(0, min(T[k].mn, T[k].mx)));return ;}\n\tpushdown(k);\n\tdfs(ls); dfs(rs);\n}\nsigned main() {\n\tN = read(); K = read();\n\tBuild(1, 1, N);\n    for(int i = 1; i <= K; i++) {\n    \tint opt = read(), L = read() + 1, R = read() + 1, H = read();\n    \tif(opt == 1) Int(1, L, R, H, 1);\n\t\telse Int(1, L, R, H, 2);//\u533a\u95f4\u53d6min \n\t}\n\tdfs(1);\n\treturn 0;\n}\n```",
        "postTime": 1546500395,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    },
    {
        "content": "# \u9898\u610f\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4560)\n\n![](https://img2020.cnblogs.com/blog/2013965/202012/2013965-20201212210851559-610173771.png)\n\n\u7b80\u5316\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a$n$\u7684\u521d\u59cb\u503c\u90fd\u4e3a$0$\u7684\u5e8f\u5217\uff0c\u6709$m$\u6b21\u64cd\u4f5c\uff0c\u6c42$m$\u6b21\u64cd\u4f5c\u8fc7\u540e\u7684\u6574\u4e2a\u5e8f\u5217\n\n\u6bcf\u6b21\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n$1.$\u5bf9\u533a\u95f4$[l,r]$\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4e0e$h$\u53d6$max$\n\n$2.$\u5bf9\u533a\u95f4$[l,r]$\u4e2d\u7684\u6240\u6709\u5143\u7d20\u4e0e$h$\u53d6$min$\n\n# \u5206\u6790\n\n\u7ebf\u6bb5\u6811\u597d\u9898\n\n\u4e00\u9053 \u533a\u4fee \u5355\u67e5 \u53ef\u79bb\u7ebf \u7684\u9898\u76ee\n\n\u9996\u5148\u6211\u4eec\u8981\u660e\u786e\u8fd9\u9053\u9898$2e6$\u7684\u6570\u636e\u5927\u6982\u7387\u5c31\u662f\u8981\u7528\u7ebf\u6bb5\u6811\u5728$O(nlogn)$\u65f6\u95f4\u8303\u56f4\u5185\u89e3\u51b3\n\n\u7136\u540e\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u5c31\u5728\u4e8e\u8981\u7ef4\u62a4\u54ea\u4e9b\u6807\u8bb0\n\n\u9996\u5148\uff0c\u6211\u4eec\u6700\u540e\u8981\u8be2\u95ee\u7684\u503c\u662f$val$\uff0c\u8fd8\u662f\u5355\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u7ef4\u62a4\u7684\u4e1c\u897f\u662f\u4ec0\u4e48\u90fd\u65e0\u6240\u8c13\uff0c\u53ea\u8981\u80fd\u786e\u5b9a\u67d0\u4e2a\u5355\u70b9\u7684\u503c\u5c31\u884c\u4e86\n\n\u7136\u540e\u770b\u5230\u9898\u76ee\u8fd9\u4e2a\u80af\u5b9a\u8ddf\u533a\u95f4\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u6709\u5173\uff0c\u90a3\u4e48\u6211\u4eec\u5e72\u8106\u5c31\u7ef4\u62a4$Max$\u548c$Min$\u6807\u8bb0\u5427~\n\n$Max$\u548c$Min$\u5206\u522b\u4ee3\u8868\u533a\u95f4\u6700\u5927\u503c\u548c\u533a\u95f4\u6700\u5c0f\u503c\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6807\u8bb0\u5982\u4f55\u4e0b\u4f20\uff0c\u5c31\u662f$pushdown$\u51fd\u6570\u7684\u5199\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8b\u60c5\uff08\u5173\u4e8e\u4e0b\u4f20\u6807\u8bb0\u65f6\u7684\u6807\u8bb0\u8986\u76d6\u95ee\u9898\uff09\n\n\u5c31\u662f\u5982\u679c\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a\u70b9\u7684\u4e24\u4e2a\u6807\u8bb0\u4e3a$Max1$\u548c$Min1$\uff0c\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u8981\u4ece\u8fd9\u4e2a\u70b9\u7684\u7236\u4eb2\u7ed3\u70b9\u4e0b\u4f20\u4e00\u4e2a$Min2$\u6807\u8bb0\uff1a\n\n$$\nMax1=min{(Max1,Min2)}\\\\\n\nMin1=min{(Min1,Min2)}\n$$\n\n\u7136\u540e$Max2$\u6807\u8bb0\u4e5f\u540c\u7406\uff1a\n\n$$\nMax1=max{(Max1,Max2)}\\\\\n\nMin1=max{(Min1,Max2)}\n$$\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u89e3\u51b3\u4e86$pushdown$\u51fd\u6570\u7684\u95ee\u9898\u5566~\n\n\u90a3\u4e48\u4ee3\u7801\u4e5f\u4e0d\u96be\u5f97\u51fa\uff0c\u5176\u4ed6\u5177\u4f53\u7684\u7ec6\u8282\u4e5f\u5728\u4ee3\u7801\u91cc\u770b\u5427\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\ninline void read(T &x){\n\tx=0;char ch=getchar();bool f=false;\n\twhile(!isdigit(ch)){if(ch=='-'){f=true;}ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\tx=f?-x:x;\n\treturn ;\n}\ntemplate <typename T>\ninline void write(T x){\n\tif(x<0) putchar('-'),x=-x;\n\tif(x>9) write(x/10);\n\tputchar(x%10^48);\n\treturn ;\n}\nconst int N=2e6+5;\nint n,m,op;\nint maxn[N<<2],minn[N<<2];\nvoid pushdown(int x){\n\tmaxn[x<<1]=max(maxn[x<<1],maxn[x]);\n\tminn[x<<1]=max(minn[x<<1],maxn[x]);\n\tmaxn[x<<1|1]=max(maxn[x<<1|1],maxn[x]);\n\tminn[x<<1|1]=max(minn[x<<1|1],maxn[x]);\n\tmaxn[x<<1]=min(maxn[x<<1],minn[x]);\n\tminn[x<<1]=min(minn[x<<1],minn[x]);\n\tmaxn[x<<1|1]=min(maxn[x<<1|1],minn[x]);\n\tminn[x<<1|1]=min(minn[x<<1|1],minn[x]);\n\tmaxn[x]=0,minn[x]=0x3f3f3f3f;\n\treturn ;\n}\nvoid modify1(int x,int l,int r,int ql,int qr,int val){\n\tif(ql<=l&&qr>=r){\n\t\tmaxn[x]=max(maxn[x],val);\n\t\tminn[x]=max(minn[x],val);\n\t\treturn ;\n\t}\n\tpushdown(x);\n\tint mid=(l+r)>>1;\n\tif(ql<=mid) modify1(x<<1,l,mid,ql,qr,val);\n\tif(qr>mid) modify1(x<<1|1,mid+1,r,ql,qr,val);\n\treturn ;\n}\nvoid modify2(int x,int l,int r,int ql,int qr,int val){\n\tif(ql<=l&&qr>=r){\n\t\tmaxn[x]=min(maxn[x],val);\n\t\tminn[x]=min(minn[x],val);\n\t\treturn ;\n\t}\n\tpushdown(x);\n\tint mid=(l+r)>>1;\n\tif(ql<=mid) modify2(x<<1,l,mid,ql,qr,val);\n\tif(qr>mid) modify2(x<<1|1,mid+1,r,ql,qr,val);\n\treturn ;\n}\nint query(int x,int l,int r,int ql,int qr){\n\tif(l==r) return maxn[x];\n\tpushdown(x);\n\tint mid=(l+r)>>1;\n\tif(ql<=mid) return query(x<<1,l,mid,ql,qr);\n\telse if(qr>mid) return query(x<<1|1,mid+1,r,ql,qr);\n\treturn 0;\n}\nint main(){\n\tread(n),read(m);\n\tfor(int i=1;i<=(n<<2);i++) maxn[i]=0,minn[i]=0x3f3f3f3f;\n\twhile(m--){\n\t\tread(op);\n\t\tint l,r,h;\n\t\tread(l),read(r),read(h);\n\t\tl++,r++;\n\t\tif(op==1) modify1(1,1,n,l,r,h);\n\t\telse modify2(1,1,n,l,r,h);\n\t}\n\tfor(int i=1;i<=n;i++) write(query(1,1,n,i,i)),putchar('\\n');\n\treturn 0;\n}\n\n```",
        "postTime": 1607780266,
        "uid": 130387,
        "name": "_Anchor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    },
    {
        "content": "> \u80cc\u666f\uff1a\u5199\u5b8c\u4e4b\u540e\u968f\u624b\u7ffb\u5f00\u51e0\u4efd\u4ee3\u7801/\u9898\u89e3\uff0c\u53d1\u73b0\u90fd\u6709Down\u51fd\u6570\uff0c\u6240\u4ee5\u5199\u5199\u81ea\u5df1\u4e0d\u7528\u4e0b\u4f20\u6807\u8bb0\u7684\u5199\u6cd5\uff08\u5373\u4e0d\u662f**\u76f4\u63a5**\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u7684\u5199\u6cd5\uff09\u3002\n\n\u672c\u89e3\u6cd5\u6d89\u53ca\u5185\u5bb9\uff1a\u7ebf\u6bb5\u6811\uff0c\u4e8c\u5206\uff0c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u79bb\u7ebf\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u9898\u7684\u7279\u5f81\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u4e24\u79cd\u76f8\u5bf9\u7acb\u800c\u65e0\u672c\u8d28\u533a\u522b\u7684\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u6240\u6709\u8be2\u95ee\u653e\u5728\u6700\u540e\uff0c\u6240\u4ee5\u6211\u4eec~~\uff08\u53ef\u80fd\u53ea\u6709\u6211\uff09~~\u4f1a\u8054\u60f3\u5230[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P2824)\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u79bb\u7ebf+\u4e8c\u5206\u3002\n\n\u5177\u4f53\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e8c\u5206\u5b83\u6700\u540e\u7684\u7ed3\u679c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c $d$\u3002\u63a5\u7740\u5c06\u6240\u6709\u81ea\u7136\u6570\u5206\u4e3a2\u7c7b\uff1a\u5c0f\u4e8e\u7b49\u4e8e $d$ \u7684\u548c\u5927\u4e8e $d$ \u7684\uff0c\u5c06\u524d\u8005\u8bb0\u4e3a0\uff0c\u540e\u8005\u8bb0\u4e3a1\uff0c\u5728\u8be5\u610f\u4e49\u4e0b\uff0c\u53ea\u9700\u8981\u77e5\u9053\u6700\u7ec8\u7ed3\u679c\u662f0\u8fd8\u662f1\u3002\u7136\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u5728\u53ea\u67090\u548c1\u7684\u610f\u4e49\u4e0b\uff0c\u6240\u6709\u64cd\u4f5c\u4e0d\u5916\u4e4e4\u79cd\u7c7b\u578b\uff1a\n\n1. \u7b2c\u4e00\u7c7b\u64cd\u4f5c\uff0c$h\\gt d$\uff0c\u7b49\u4ef7\u4e8e\u5c06\u533a\u95f4\u8d4b\u503c\u4e3a1\u3002\n2. \u7b2c\u4e8c\u7c7b\u64cd\u4f5c\uff0c$h\\le d$\uff0c\u7b49\u4ef7\u4e8e\u5c06\u533a\u95f4\u8d4b\u503c\u4e3a0\u3002\n3. \u7b2c\u4e00\u7c7b\u64cd\u4f5c\uff0c$h\\le d$\uff0c\u5728\u8be5\u610f\u4e49\u4e0b\u6ca1\u6709\u5f71\u54cd\uff0c\u53ef\u4ee5\u5ffd\u89c6\u3002\n4. \u7b2c\u4e8c\u7c7b\u64cd\u4f5c\uff0c$h\\gt d$\uff0c\u5728\u8be5\u610f\u4e49\u4e0b\u6ca1\u6709\u5f71\u54cd\uff0c\u53ef\u4ee5\u5ffd\u89c6\u3002\n\n\u5bb9\u6613\u77e5\u9053\u8be5\u4f4d\u7f6e\u6700\u540e\u7684\u7ed3\u679c\u51b3\u5b9a\u4e8e\u6700\u540e\u4e00\u4e2a1\u578b\u62162\u578b\u64cd\u4f5c\uff08\u5047\u8bbe\u5728\u4e00\u5f00\u59cb\uff0c\u6709\u4e00\u4e2a\u8986\u76d6\u6574\u4e2a\u5e8f\u5217\u7684 $h=0$ \u7684\u7b2c\u4e8c\u7c7b\u64cd\u4f5c\uff09\uff0c\u82e5\u8be5\u64cd\u4f5c\u4e3a1\u578b\u5219\u7ed3\u679c\u4e3a1\uff0c\u4e3a2\u578b\u5219\u7ed3\u679c\u4e3a0\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5206\u522b\u67e5\u8be2\u6807\u53f7\u6700\u5927\u7684\u6ee1\u8db3 $h\\gt d$ \u7684\u7b2c\u4e00\u7c7b\u64cd\u4f5c\u548c\u6807\u53f7\u6700\u5927\u7684\u6ee1\u8db3 $h\\le d$ \u7684\u7b2c\u4e8c\u7c7b\u64cd\u4f5c\u7684\u6807\u53f7\uff0c\u5e76\u6bd4\u8f83\u5927\u5c0f\u5b9e\u73b0\u3002\u53ef\u4ee5\u5c06\u6240\u6709\u66f4\u65b0\u64cd\u4f5c\u653e\u5230\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\uff0c\u8fd9\u68f5\u7ebf\u6bb5\u6811\u4ee5 $h$ \u7684\u6392\u540d\u4e3a\u4e0b\u6807\uff08\u5173\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528 $h$\uff0c\u4e00\u662f\u6392\u540d\u7684\u8303\u56f4\u5c0f\uff0c\u4e8c\u662f\u82e5\u7528\u6392\u540d\uff0c\u5355\u70b9\u4e0a\u6700\u591a\u540c\u65f6\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u76f4\u63a5\u5355\u70b9\u8d4b\u503c\u66f4\u65b0\uff09\uff0c\u628a\u6bcf\u4e2a\u64cd\u4f5c\u653e\u5230\u5176 $h$ \u7684\u6392\u540d\u5bf9\u5e94\u7684\u90a3\u4e2a\u70b9\u4e0a\uff0c\u7ef4\u62a4\u533a\u95f4\u5185\u6700\u5927\u7684\u7b2c\u4e00\u7c7b\u64cd\u4f5c\u7684\u6807\u53f7\u548c\u7b2c\u4e8c\u7c7b\u64cd\u4f5c\u6807\u53f7\uff0c\u67e5\u8be2\u533a\u95f4\uff08\u4e8b\u5b9e\u4e0a\u53ea\u6709\u524d\u7f00\u548c\u540e\u7f00\uff09\u6700\u5927\u503c\u3002\n\n\u4e0a\u8ff0\u7b56\u7565\u662f\u5bf9\u4e8e\u5355\u4e2a\u70b9\u67e5\u8be2\u7684\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7ecf\u5178\u7684\u79bb\u7ebf\u5957\u8def\u6765\u5bf9\u6240\u6709\u4f4d\u7f6e\u67e5\u8be2\u800c\u4e0d\u70b8\u590d\u6742\u5ea6\uff1a\u4ece\u5de6\u5f80\u53f3\u626b\u6240\u6709\u4f4d\u7f6e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5728 $[L,R]$ \u5185\u6709\u6548\u7684\u66f4\u65b0\u64cd\u4f5c\uff0c\u5728\u626b\u5230 $L$ \u65f6\u4f7f\u5176\u751f\u6548\uff0c\u626b\u5230 $R+1$ \u65f6\u4f7f\u5176\u5931\u6548\uff08\u7c7b\u4f3c\u5dee\u5206\uff09\u3002\u5728\u672c\u9898\u91cc\uff0c\u751f\u6548\u5373\u628a\u8fd9\u4e2a\u64cd\u4f5c\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\u5355\u70b9\u8d4b\u503c\uff0c\u5931\u6548\u5c31\u662f\u91cd\u65b0\u628a\u8fd9\u4e2a\u70b9\u8d4b\u503c\u4e3a0\u3002\n\n\u6700\u540e\uff0c\u53d1\u73b0\u76f4\u63a5\u6267\u884c\u4ee5\u4e0a\u6b65\u9aa4\u590d\u6742\u5ea6\u8fc7\u9ad8\uff08\u5355\u6b21\u67e5\u8be2\u662f\u4e8c\u5206$O(\\log k)$\u4e58\u4ee5\u7ebf\u6bb5\u6811$O(\\log k)$\u7684\uff09\uff0c\u56e0\u6b64\u8003\u8651\u4e00\u79cd\u4e8c\u5206\u4e0e\u7ebf\u6bb5\u6811\u653e\u5230\u4e00\u8d77\u7684\u7ecf\u5178\u4f18\u5316\u2014\u2014\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\u5230\u67d0\u4e2a\u533a\u95f4\u65f6\uff0c\u7ef4\u62a4\u5de6\u4e8e\u8be5\u533a\u95f4\u7684\u6700\u5927\u7b2c\u4e8c\u7c7b\u64cd\u4f5c\u6807\u53f7\u53ca\u53f3\u4e8e\u8be5\u533a\u95f4\u7684\u6700\u5927\u7b2c\u4e00\u7c7b\u64cd\u4f5c\u6807\u53f7\uff0c\u5e76\u5206\u522b\u4e0e\u8be5\u533a\u95f4\u7684\u5de6\u5b50\u533a\u95f4\u7684\u7b2c\u4e8c\u7c7b\u64cd\u4f5c\u6807\u53f7\u548c\u53f3\u5b50\u533a\u95f4\u7684\u6700\u5927\u7b2c\u4e00\u7c7b\u64cd\u4f5c\u6807\u53f7\u53d6 $\\max$\uff0c\u4ee5\u6b64\u83b7\u5f97\u8be5\u533a\u95f4\u4e2d\u70b9\u4ee5\u524d\u7684\u6700\u5927\u7b2c\u4e8c\u7c7b\u64cd\u4f5c\u6807\u53f7\u53ca\u4e2d\u70b9\u4ee5\u540e\u7684\u7b2c\u4e00\u7c7b\u64cd\u4f5c\u6807\u53f7\uff0c\u6765\u8fdb\u884c\u6bd4\u8f83\u548c\u9009\u62e9\uff08\u597d\u7ed5\u554a\uff09\u3002\u5177\u4f53\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\n\n\u603b\u590d\u6742\u5ea6\uff1a**\u8bbe$n,k$\u540c\u9636**\uff0c\u4f18\u5316\u540e\u5355\u6b21\u67e5\u8be2 $O(\\log n)$\uff0c\u67e5\u8be2 $O(n)$ \u6b21\uff1b\u5355\u6b21\u5355\u70b9\u66f4\u65b0 $O(\\log n)$ \uff0c\u66f4\u65b0$O(n)$\u6b21\uff0c\u5176\u5b83IO\u9884\u5904\u7406\u4e4b\u7c7b\u7684\u5747\u53ef\u4ee5\u4e0d\u8ba1\uff08\u6216\u8005\u53ea\u8ba1\u5165\u6392\u5e8f\u8fc7\u7a0b\uff0c\u4e0d\u9ad8\u4e8e $O(n\\log n)$ \uff09\uff0c\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=2e6+15;\n\nint n,m;\nstruct node\n{\n    int L,R,d,t;bool ty;//t\u662f\u6807\u53f7\n    bool operator <(const node &b)const{return d<b.d;}\n}A[M];\n\nstruct SFoNKH\n{\n#define tp T[p]\n#define lp T[p<<1]\n#define rp T[p<<1|1]\n#define ls p<<1\n#define rs p<<1|1\n    struct node{int L,R,Maxmax,Maxmin;}T[M<<2];int Tid[M];\n    void Up(int p)\n    {\n        tp.Maxmax=max(lp.Maxmax,rp.Maxmax);\n        tp.Maxmin=max(lp.Maxmin,rp.Maxmin);\n    }\n    void Build(int L,int R,int p)\n    {\n        tp.L=L,tp.R=R,tp.Maxmax=tp.Maxmin=0;\n        if(L==R){Tid[L]=p;return;}\n        int mid=(L+R)>>1;\n        Build(L,mid,ls);Build(mid+1,R,rs);\n    }\n    void Update(int pos,int val,bool ty)//\u975e\u9012\u5f52\u5f0f\u5355\u70b9\u8d4b\u503c\u4fee\u6539\n    {\n        int p=Tid[pos];\n        if(ty)tp.Maxmax=val;else tp.Maxmin=val;\n        for(p>>=1;p;p>>=1)Up(p);\n    }\n    int Query(int maxminyay,int maxmaxyay,int p)//\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u67e5\u8be2\n    {\n        if(tp.L==tp.R)return tp.L;\n        int ll=max(maxminyay,lp.Maxmin),rr=max(maxmaxyay,rp.Maxmax);//ll\u5bf9\u5e942\u578b\uff0crr\u5bf9\u5e941\u578b\n        if(ll>rr)return Query(maxminyay,rr,ls);\n        else return Query(ll,maxmaxyay,rs);\n        // \u5224\u5b9ad=A[(tp.L+tp.R)>>1].d\u65f6\u7ed3\u679c\u4e3a0\u8fd8\u662f1\uff0c0\u5219\u5411\u5de6\u9012\u5f52\uff0c1\u5219\u5411\u53f3\u9012\u5f52\n    }\n#undef tp\n#undef lp\n#undef rp\n#undef ls\n#undef rs\n}YD;\n\nstruct event\n{\n    int id,t;bool ty;\n    bool operator <(const event &b)const{return t<b.t;}\n}B[M<<1];int bco;\n\nvoid Solve()\n{\n    sort(A+1,A+m+1);\n    for(int i=1;i<=m;i++)B[++bco]=(event){i,A[i].L,true};\n    for(int i=1;i<=m;i++)B[++bco]=(event){i,A[i].R+1,false};\n    sort(B+1,B+bco+1);\n    YD.Build(1,m,1);\n    int pos=1;\n    for(int i=0;i<n;i++)\n    {\n        while(pos<=bco && B[pos].t<=i)//\u7ecf\u5178\u79bb\u7ebf\u5f52\u5e76\u626b\n        {\n            int x=B[pos].id;\n            if(B[pos].ty)YD.Update(x,A[x].t,A[x].ty);\n            else YD.Update(x,0,A[x].ty);\n            pos++;\n        }\n        printf(\"%d\\n\",A[YD.Query(0,0,1)].d);//\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5f97\u5230\u7684\u7ed3\u679c\u662f\u6392\u540d\uff0c\u9700\u8981\u6620\u5c04\u4e3ah\u771f\u5b9e\u503c\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    ++m;A[1]=(node){0,n-1,0,1,false};//\u4fdd\u9669\u64cd\u4f5c\n    for(int i=2,op;i<=m;i++)scanf(\"%d%d%d%d\",&op,&A[i].L,&A[i].R,&A[i].d),A[i].ty=op==1,A[i].t=i;\n    Solve();\n    return 0;\n}\n```",
        "postTime": 1584203236,
        "uid": 98939,
        "name": "Redpojoe",
        "ccfLevel": 9,
        "title": "IOI2014 Wall \u7684\u4e00\u79cd\u975e\u6570\u636e\u7ed3\u6784\u786c\u4e0a\u89e3\u6cd5"
    },
    {
        "content": "\u6211\u6765\u53d1\u4e2a\u597d\u770b\u4e9b\u7684\u4ee3\u7801\n\n\u5177\u4f53\u7684\u6807\u8bb0\u7ef4\u62a4\u65b9\u5f0f\u697c\u4e0b\u8bb2\u5f97\u6bd4\u8f83\u6e05\u695a\u4e86\n\n\u6211\u4eec\u53ef\u4ee5\u8bbe\u6781\u5927\u6781\u5c0f\u503c\u6765\u7b80\u5316pushdown\uff0c\u8ba9\u4ee3\u7801\u66f4\u7b80\u6d01\u4e00\u4e9b\n\n\u6781\u5927\u503c\u627e\u4e2a\u65b9\u4fbfmemset\u7684INF\uff0c\u6781\u5c0f\u503c\u8bbe\u4e3a0\u5373\u53ef\n\n$tag[1]$\u4e3a\u4e0b\u754c\uff0c$tag[0]$\u4e3a\u4e0a\u754c\u3002\n\npushdown\u7684\u4ee3\u7801\u81ea\u5df1\u753b\u4e00\u4e0b\u533a\u95f4\u4f4d\u7f6e\u7684\u51e0\u79cd\u60c5\u51b5\u5c31\u660e\u767d\u4e86\n\n\uff08\u4e3a\u4fdd\u8bc1\u7a0b\u5e8f\u7b80\u6d01\uff0c\u672c\u4ee3\u7801\u6ca1\u6709\u8fc7\u591a\u7684\u5e38\u6570\u4f18\u5316\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1<<21;\nconst int INF=2139062143;\n\nint n,m;\nint tag[2][MAXN<<1];\n\ninline int read()\n{\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||'9'<ch) ch=getchar();\n\twhile('0'<=ch&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x;\n}\n\nvoid pd(int k,int i)\n{\n\tif(tag[1][i]>=tag[0][k]) tag[1][i]=tag[0][i]=tag[0][k];\n\telse if(tag[1][k]>tag[1][i]) tag[1][i]=tag[1][k];\n\tif(tag[1][k]>=tag[0][i]) tag[1][i]=tag[0][i]=tag[1][k];\n\telse if(tag[0][k]<tag[0][i]) tag[0][i]=tag[0][k];\n\treturn;\n}\n\nvoid pushdown(int k,int l,int r)\n{\n\tif(l==r||(tag[0][k]==INF&&!tag[1][k])) return;\n\tint mid=l+r>>1,i=k<<1;\n\tpd(k,i);pd(k,i|1);\n\ttag[0][k]=INF,tag[1][k]=0;\n\treturn;\n}\n\nvoid ctag(int k,int l,int r,int le,int ri,int val,int kd)\n{\n\tpushdown(k,l,r);\n\tif(le<=l&&r<=ri){\n\t\tif(kd==1) tag[kd][k]=max(tag[kd][k],val);\n\t\telse tag[kd][k]=min(tag[kd][k],val);\n\t\tif(tag[1][k]>tag[0][k]) tag[1][k]=tag[0][k]=val;\n\t\treturn;\n\t}int mid=l+r>>1,i=k<<1;\n\tif(le<=mid) ctag(i,l,mid,le,ri,val,kd);\n\tif(mid<ri) ctag(i|1,mid+1,r,le,ri,val,kd);\n}\n\nint cask(int k,int l,int r,int x)\n{\n\tpushdown(k,l,r);\n\tif(l==r) return tag[1][k];\n\tint mid=l+r>>1,i=k<<1;\n\tif(x<=mid) return cask(i,l,mid,x);\n\treturn cask(i|1,mid+1,r,x);\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tmemset(tag[0],0x7f,sizeof(tag[0]));\n\twhile(m--){\n\t\tint t=read(),l=read(),r=read(),v=read();\n\t\tctag(1,1,n,l+1,r+1,v,t&1);\n\t}for(int i=1;i<=n;++i) printf(\"%d\\n\",cask(1,1,n,i));\n\treturn 0;\n}\n```",
        "postTime": 1533790392,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    },
    {
        "content": "## [Link](https://www.luogu.com.cn/problem/P4560)\n\n\u9898\u76ee\u5927\u610f\uff1a\u6709 $n$ \u4e2a\u6570\uff0c\u8fdb\u884c $m$ \u6b21\u64cd\u4f5c\u3002\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u533a\u95f4\u5927\u4e8e $x$ \u6216\u5c0f\u4e8e $x$ \u7684\u6570\u53d8\u4e3a $x$\u3002\u95ee\u64cd\u4f5c\u5b8c\u4e4b\u540e\u7684\u5e8f\u5217\u662f\u591a\u5c11\u3002\n\n\u56e0\u4e3a\u662f\u533a\u95f4\u64cd\u4f5c\uff0c\u5bb9\u6613\u60f3\u5230\u5206\u5757\u6216\u7ebf\u6bb5\u6811\u3002\u4f46\u7531\u4e8e $n$ \u9ad8\u8fbe\u4e24\u767e\u4e07\uff0c\u5206\u5757\u663e\u7136\u4e0d\u884c\u3002\u6545\u9009\u62e9\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u8be5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e24\u4e2a $tag$\u3002\n\n**$s[p].maxn$ \u8868\u793a\u5f53\u524d\u533a\u95f4\u5c0f\u4e8e $x$ \u7684\u6570\u90fd\u8981\u53d8\u4e3a $x$\uff0c$s[p].maxn$ \u8868\u793a\u5f53\u524d\u533a\u95f4\u5927\u4e8e $x$ \u7684\u6570\u90fd\u8981\u53d8\u4e3a $x$\u3002**\n\n\u5bf9\u4e8e\u521d\u59cb\u503c\uff0c\u56e0\u4e3a $1\\le h\\le 10^5$\uff0c\u6240\u4ee5\u8ba9 $maxn$ \u90fd\u4e3a $0$\uff0c$minn$ \u4e3a $10^9$\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u96be\u70b9\u90fd\u5728\u4e0b\u4f20\u61d2\u6807\u8bb0\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u8981\u66f4\u65b0 $s[p\\times 2].maxn$\u3002\n\n- \u82e5 $s[p].maxn>s[p\\times 2].maxn$\uff0c\u5373\u8bf4\u660e\u4f1a\u76f4\u63a5\u628a\u5b83\u8986\u76d6\u6389\uff0c\u6240\u4ee5\u4e4b\u95f4\u8ba9 $s[p\\times 2].maxn=s[p].maxn$\u3002\u5426\u5219\u65b0\u7684\u8fd9\u4e2a\u64cd\u4f5c\u5e76\u4e0d\u80fd\u4f7f\u8be5\u533a\u95f4\u6709\u4efb\u4f55\u6539\u53d8\u3002\n\n- \u82e5 $s[p].minn<s[p\\times 2].maxn$\uff0c\u5373\u8bf4\u660e\u82e5\u5c06 $p\\times 2$ \u8868\u793a\u7684\u533a\u95f4\u5c0f\u4e8e $s[p\\times 2].maxn$ \u7684\u6570\u4f1a\u53d8\u4e3a $s[p\\times 2].maxn$\uff0c\u63a5\u7740\u8fd9\u4e9b\u6570\u90fd\u4f1a\u56e0\u4e3a $s[p].minn<s[p\\times 2].maxn$ \u800c\u5168\u90e8\u53d8\u4e3a $s[p].minn$\u3002\u6240\u4ee5\u76f4\u63a5\u8ba9 $s[p\\times 2].maxn=s[p].minn$ \u5373\u53ef\u3002\u5426\u5219\u6ca1\u6709\u4f5c\u7528\u3002\n\n\u5176\u4ed6\u7684\u61d2\u6807\u8bb0\u4e0b\u4f20\u7c7b\u4f3c\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint s=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())\n\t\ts=s*10+c-'0';\n\treturn s;\n}\nint n,m,op,l,r,x,pos;\nstruct tree{\n\tint l,r,maxn,minn;\n}s[8000005];\nvoid build(int l,int r,int p)\n{\n\ts[p].l=l,s[p].r=r,s[p].maxn=0,s[p].minn=1e9;\n\tif(l==r)return;\n\tint mid=(l+r)/2;\n\tbuild(l,mid,p*2);\n\tbuild(mid+1,r,p*2+1);\n}\ninline void push_down(int p)\n{\n\tif(s[p].maxn)\n\t{\n\t\ts[p*2].maxn=max(s[p*2].maxn,s[p].maxn);\n\t\ts[p*2].minn=max(s[p*2].minn,s[p].maxn);\n\t\ts[p*2+1].maxn=max(s[p*2+1].maxn,s[p].maxn);\n\t\ts[p*2+1].minn=max(s[p*2+1].minn,s[p].maxn);\n\t\ts[p].maxn=0;\n\t}\n\tif(s[p].minn!=1e9)\n\t{\n\t\ts[p*2].maxn=min(s[p*2].maxn,s[p].minn);\n\t\ts[p*2].minn=min(s[p*2].minn,s[p].minn);\n\t\ts[p*2+1].maxn=min(s[p*2+1].maxn,s[p].minn);\n\t\ts[p*2+1].minn=min(s[p*2+1].minn,s[p].minn);\n\t\ts[p].minn=1e9;\n\t}\n}\nvoid update1(int p)\n{\n\tif(l>s[p].r||r<s[p].l)return;\n\tif(l<=s[p].l&&s[p].r<=r)\n\t{\n\t\ts[p].maxn=max(s[p].maxn,x);\n\t\ts[p].minn=max(s[p].minn,x);\n\t\treturn;\n\t}\n\tpush_down(p);\n\tupdate1(p*2),update1(p*2+1);\n}\nvoid update2(int p)\n{\n\tif(l>s[p].r||r<s[p].l)return;\n\tif(l<=s[p].l&&s[p].r<=r)\n\t{\n\t\ts[p].maxn=min(s[p].maxn,x);\n\t\ts[p].minn=min(s[p].minn,x);\n\t\treturn;\n\t}\n\tpush_down(p);\n\tupdate2(p*2),update2(p*2+1);\n}\nint query(int p)\n{\n\tif(s[p].l==s[p].r)return s[p].maxn;\n\tpush_down(p);\n\tif(pos<=s[p*2].r)return query(p*2);\n\treturn query(p*2+1);\n}\nint main()\n{\n\tn=read(),m=read();\n\tbuild(1,n,1);\n\twhile(m--)\n\t{\n\t\top=read(),l=read()+1,r=read()+1,x=read();\n\t\tif(op==1)update1(1);\n\t\telse update2(1);\n\t}\n\tfor(pos=1;pos<=n;pos++)\n\t\tprintf(\"%d\\n\",query(1));\n\treturn 0;\n}\n```\n\u8c22\u8c22\u9605\u8bfb\u3002",
        "postTime": 1631864773,
        "uid": 306049,
        "name": "Utilokasteinn",
        "ccfLevel": 0,
        "title": "P4560 [IOI2014]Wall \u7816\u5899"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u5c31\u662f\u4e00\u4e2a\u6bd4\u8f83\u88f8\u7684\u7ebf\u6bb5\u6811\u3002\n\n- \u64cd\u4f5c $1$\uff1a\u53d6 $\\max$ \u64cd\u4f5c\u3002\n- \u64cd\u4f5c $2$\uff1a\u53d6 $\\min$ \u64cd\u4f5c\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u539f\u6765\u7684 `Pushdown` \u51fd\u6570\u7565\u52a0\u4fee\u6539\u5373\u53ef\u3002\n\n```cpp\ninline void undate_add(int k, int Max){\n\tif(tree[k].maxx<=Max) tree[k].maxx=Max;\n\tif(tree[k].minn<=Max) tree[k].minn=Max;\n\treturn ;\n}\ninline void undate_rem(int k, int Min){\n\tif(tree[k].maxx>=Min) tree[k].maxx=Min;\n\tif(tree[k].minn>=Min) tree[k].minn=Min;\n\treturn ;\n}\ninline void Pushdown(int k){\n\tundate_add(k<<1,tree[k].maxx);\n\tundate_add(k<<1|1,tree[k].maxx);\n\tundate_rem(k<<1,tree[k].minn);\n\tundate_rem(k<<1|1,tree[k].minn);\n\ttree[k].minn=INF;\n\ttree[k].maxx=0;\n\treturn ;\n}\n```\n\n\u5bf9\u4e8e\u533a\u95f4 $[l,r]$ \u7684\u4fee\u6539\u3002\n\n\u50cf\u539f\u6765\u7ebf\u6bb5\u6811\u4e00\u6837\u5373\u53ef\u3002\u5728\u627e\u5de6\u5b50\u6811\u6216\u8005\u53f3\u5b50\u6811\u524d\u8bb0\u5f97\u8c03\u7528 `Pushdown` \u5373\u53ef\u3002\n\n**\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e00\u4e0b\uff0c\u5728\u627e\u5230\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a $1$ \u7684\u533a\u95f4\u65f6\uff0c\u8981\u8bb0\u5f97\u76f4\u63a5\u66f4\u65b0\u3002**\n\n```cpp\ninline void change_add(int k, int l, int r, int d){\n\tif(l<=tree[k].l&&tree[k].r<=r){\n\t\tundate_add(k,d);\n\t\treturn ;\n\t}\n\tint mid=(tree[k].l+tree[k].r)>>1;\n\tPushdown(k);\n\tif(l<=mid) ch_add(k<<1,l,r,d);\n\tif(r>mid) ch_add(k<<1|1,l,r,d);\n\treturn ;\n}\ninline void change_rem(int k, int l, int r, int d){\n\tif(l<=tree[k].l&&tree[k].r<=r){\n\t\tundate_rem(k,d);\n\t\treturn ;\n\t}\n\tint mid=(tree[k].l+tree[k].r)>>1;\n\tPushdown(k);\n\tif(l<=mid) ch_rem(k<<1,l,r,d);\n\tif(r>mid) ch_rem(k<<1|1,l,r,d);\n\treturn ;\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define RI register int\nusing namespace std;\nconst int MAXN = 2e6+5, INF = 2147483647;\nint n;\nstruct node{\n\tint l, r, maxx, minn;\n}tree[MAXN<<2];\ninline int read(){\n    int X=0,w=0; char ch=0;\n    while(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n    while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    return w?-X:X;\n}\ninline void write(int x){\n    if(x<0){putchar('-'),x=-x;}\n    if(x>9)write(x/10);\n    if(x<9){putchar(x+'0');return ;} \n    putchar(x%10+'0');\n}\ninline void undate_add(int k, int Max){\n\tif(tree[k].maxx<=Max) tree[k].maxx=Max;\n\tif(tree[k].minn<=Max) tree[k].minn=Max;\n\treturn ;\n}\ninline void undate_rem(int k, int Min){\n\tif(tree[k].maxx>=Min) tree[k].maxx=Min;\n\tif(tree[k].minn>=Min) tree[k].minn=Min;\n\treturn ;\n}\ninline void Pushdown(int k){\n\tundate_add(k<<1,tree[k].maxx);\n\tundate_add(k<<1|1,tree[k].maxx);\n\tundate_rem(k<<1,tree[k].minn);\n\tundate_rem(k<<1|1,tree[k].minn);\n\ttree[k].minn=INF;\n\ttree[k].maxx=0;\n\treturn ;\n}\ninline void build(int k, int l, int r){\n\ttree[k].l=l;\n\ttree[k].r=r;\n\ttree[k].maxx=0;\n\ttree[k].minn=INF;\n\tif(l==r){\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n\treturn ;\n}\ninline void Q(int k){\n\tif(tree[k].l==tree[k].r){\n\t\twrite(tree[k].maxx);\n\t\tputchar('\\n');\n\t\treturn ;\n\t}\n\tPushdown(k);\n\tQ(k<<1);\n\tQ(k<<1|1);\n\treturn ;\n}\ninline void change_add(int k, int l, int r, int d){\n\tif(l<=tree[k].l&&tree[k].r<=r){\n\t\tundate_add(k,d);\n\t\treturn ;\n\t}\n\tint mid=(tree[k].l+tree[k].r)>>1;\n\tPushdown(k);\n\tif(l<=mid) change_add(k<<1,l,r,d);\n\tif(r>mid) change_add(k<<1|1,l,r,d);\n\treturn ;\n}\ninline void change_rem(int k, int l, int r, int d){\n\tif(l<=tree[k].l&&tree[k].r<=r){\n\t\tundate_rem(k,d);\n\t\treturn ;\n\t}\n\tint mid=(tree[k].l+tree[k].r)>>1;\n\tPushdown(k);\n\tif(l<=mid) change_rem(k<<1,l,r,d);\n\tif(r>mid) change_rem(k<<1|1,l,r,d);\n\treturn ;\n}\nint main(){\n\tint k;\n\tint opt, l, r, d;\n\tn=read(), k=read();\n\tbuild(1,1,n);\n\twhile(k--){\n\t\topt=read(), l=read(), r=read(), d=read();\n\t\tl++, r++;\n\t\tif(opt==1) change_add(1,l,r,d);\n\t\tif(opt==2) change_rem(1,l,r,d);\n\t}\n\tQ(1);\n\treturn 0;\n}\n```",
        "postTime": 1603497255,
        "uid": 261914,
        "name": "Emy_Ycc",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4560 \u3010[IOI2014]Wall \u7816\u5899\u3011"
    }
]