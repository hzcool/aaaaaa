[
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\u4e0d\u96be\u770b\u51fa\u4e00\u4e2a\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8ba2\u8d2d\u5f88\u50cf\u533a\u95f4\u52a0\uff0c\u56e0\u6b64\u4e0d\u96be\u8054\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u4e00\u6b21\u8ba2\u8d2d\uff0c\u6211\u4eec\u5c1d\u8bd5\u5c06 $[O, D - 1]$ \u8fd9\u4e2a\u533a\u95f4\u52a0\u4e0a $N$\uff0c\u7136\u540e\u5224\u65ad\u533a\u95f4\u6700\u5927\u503c\u662f\u5426\u8d85\u8fc7\u4e86\u706b\u8f66\u7684\u5ea7\u4f4d\u6570 $S$\uff0c\u82e5\u8d85\u8fc7\u4e86\u5c31\u5c06 $N$ \u51cf\u56de\u53bb\u5e76\u8f93\u51fa `N`\uff0c\u5426\u5219\u4fdd\u7559\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8f93\u51fa `T`\u3002\n\n\u4e3a\u4ec0\u4e48\u662f $[O, D - 1]$ \u5462\uff1f\u56e0\u4e3a\u5230\u4e86\u7ec8\u70b9\u7ad9\u8fd9\u6b21\u8ba2\u7968\u7684\u5ea7\u4f4d\u5c31\u7a7a\u51fa\u6765\u4e86\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u53d7\u5230\u6709\u4eba\u8ba2\u7968\u7684\u5f71\u54cd\u3002~~\u4e0d\u7136\u5c31\u50cf\u6211\u7b2c\u4e00\u6b21\u4ea4\u4e00\u6837\u53ea\u6709 32 \u5206\u3002~~\n\n## Fake AC Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 60005;\nint n, lim, q, dat[N << 2], tg[N << 2];\n\ninline void pushup(int p){dat[p] = max(dat[p << 1], dat[p << 1 | 1]);}\n\ninline void pushdown(int p, int l, int r){\n\tif (tg[p]){\n\t\tdat[p << 1] += tg[p]; dat[p << 1 | 1] += tg[p];\n\t\ttg[p << 1] += tg[p]; tg[p << 1 | 1] += tg[p];\n\t\ttg[p] = 0;\n\t}\n}\n\nvoid update(int p, int l, int r, int lpos, int rpos, int k){\n\tif (l > rpos || r < lpos) return;\n\tif (lpos <= l && r <= rpos){\n\t\tdat[p] += k;\n\t\ttg[p] += k;\n\t\treturn;\n\t} \n\tpushdown(p, l, r);\n\tint mid = (l + r) >> 1;\n\tupdate(p << 1, l, mid, lpos, rpos, k); update(p << 1 | 1, mid + 1, r, lpos, rpos, k);\n\tpushup(p); \n} \n\nint query(int p, int l, int r, int lpos, int rpos){\n\tif (l > rpos || r < lpos) return -2e9;\n\tif (lpos <= l && r <= rpos) return dat[p];\n\tpushdown(p, l, r);\n\tint mid = (l + r) >> 1;\n\treturn max(query(p << 1, l, mid, lpos, rpos), query(p << 1 | 1, mid + 1, r, lpos, rpos)); \n}\n\nint main(){\n\tscanf(\"%d%d%d\", &n, &lim, &q);\n\tint l, r, x;\n\twhile (q--){\n\t\tscanf(\"%d%d%d\", &l, &r, &x);\n\t\tupdate(1, 1, n, l, r - 1, x);\n\t\tif (query(1, 1, n, l, r - 1) > lim){\n\t\t\tupdate(1, 1, n, l, r - 1, -x);\n\t\t\tprintf(\"N\\n\");\n\t\t}\n\t\telse printf(\"T\\n\");\n\t}\n\treturn 0;\n}\n```\n~~\u5148\u522b\u7740\u6025\u590d\u5236~~\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u7684\u6bd2\u7624\u65f6\u9650\u53ea\u6709 100ms\uff0c\u4e0a\u9762\u8fd9\u4efd\u4ee3\u7801\u5728\u6211\u4ea4\u7684\u65f6\u5019\u9700\u8981\u5438\u6c27\u624d\u80fd\u7a33\u8fc7\uff0c\u4e0d\u7136\u6d4b\u8bd5\u70b9 #10 \u4f1a\u6709 120ms \u5de6\u53f3\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u4e0d\u5f00 O2 \u901a\u8fc7\u5462\uff1f\u6211\u4eec\u53d1\u73b0 `update` \u5e94\u8be5\u6ca1\u5565\u53ef\u4ee5\u4f18\u5316\u7684\u4e86\uff0c\u4f46\u662f\u6bcf\u6b21\u771f\u7684\u90fd\u9700\u8981 `query` \u5417\uff1f\u663e\u7136\u4e0d\u7528\u3002\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6574\u4e2a\u6570\u5217\u4e2d\u6709\u6ca1\u6709\u5927\u4e8e\u706b\u8f66\u5ea7\u4f4d\u6570\u91cf $S$ \u7684\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c\u8fd9\u4e2a\u503c\u5c31\u5728 `dat[1]` \u4e2d\uff0c\u56e0\u6b64 `query` \u5c31\u4f18\u5316\u5230\u4e86 $O(1)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n## \u65b0\u7684\u5173\u952e\u90e8\u5206\n```cpp\nint main(){\n\twhile (q--){\n\t\tscanf(\"%d%d%d\", &l, &r, &x);\n\t\tupdate(1, 1, n, l, r - 1, x);\n\t\tif (dat[1] > lim){//query\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u4e0d\u5b9a\u4e49\u4e86\n\t\t\tupdate(1, 1, n, l, r - 1, -x);\n\t\t\tprintf(\"N\\n\");\n\t\t}\n\t\telse printf(\"T\\n\");\n\t}\n}\n```\n\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u4fdd\u7559 `query`\uff0c\u6bcf\u6b21\u5148\u5224\u65ad\u672c\u6b21\u8ba2\u8d2d\u533a\u95f4\u7684\u6700\u5927\u503c\u52a0\u4e0a\u672c\u6b21\u8981\u8ba2\u8d2d\u7684\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u4e86\u603b\u5ea7\u4f4d\u6570\uff0c\u6ca1\u8d85\u8fc7\u518d\u66f4\u65b0\uff0c\u56e0\u4e3a\u611f\u6027\u8ba4\u4e3a `T` \u7684\u4e2a\u6570\u5927\u6982\u7387\u662f\u5c11\u4e8e `N` \u7684\uff0c\u6240\u4ee5\u6548\u7387\u5e94\u8be5\u4f1a\u66f4\u9ad8\u3002",
        "postTime": 1668767699,
        "uid": 542282,
        "name": "lrqlrq250",
        "ccfLevel": 0,
        "title": "P8856 [POI2002] \u706b\u8f66\u7ebf\u8def \u9898\u89e3"
    },
    {
        "content": "\u5728\u6821 OJ \u89c1\u8fc7\u8fd9\u9898\uff0c\u8865\u4e00\u53d1\u9898\u89e3\u3002\n\n---\n\n### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6bcf\u4e2a\u5355\u4f4d\u533a\u95f4\u6709 $s$ \u4e2a\u7a7a\u5ea7\u4f4d\u7684\u5e8f\u5217 $1\\sim C$\uff0c\u6bcf\u6b21\u5356\u7968\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u533a\u95f4\u662f\u4e0d\u662f\u90fd\u6709\u8db3\u591f\u7684\u5ea7\u4f4d\uff0c\u5982\u679c\u6709\u5c31\u628a\u5ea7\u4f4d\u7b97\u4e0a\uff0c\u6ca1\u6709\u5c31\u8f93\u51fa\u603b\u53f8\u4ee4\u3002\n\n### \u601d\u8def\n\n\u6bd4\u8f83\u6a21\u677f\u7684\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u5269\u4e0b\u7684\u7a7a\u5ea7\u4f4d\u6570\u91cf\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5927\u7684\u533a\u95f4\uff0c\u4e3a\u4e86\u8be5\u533a\u95f4\u6ee1\u8db3\u6bcf\u4e00\u4e2a\u5355\u4f4d\u533a\u95f4\u4e0a\u90fd\u80fd\u6709\u8db3\u591f\u7684\u5ea7\u4f4d\uff0c\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u7b97\u6700\u5c0f\u5ea7\u4f4d\u6570\u91cf\uff0c\u8fd9\u6837\uff0c\u5982\u679c\u6700\u5c0f\u6570\u91cf\u80fd\u591f\u6ee1\u8db3\u5356\u7968\u9700\u6c42\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u5c31\u4e00\u5b9a\u6ee1\u8db3\uff0c\u5426\u5219\u5c31\u603b\u53f8\u4ee4\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u7968\u53ef\u4ee5\u5356\u51fa\u53bb\uff0c\u90a3\u4e48\u5c31\u628a\u5ea7\u4f4d\u7b97\u4e0a\uff0c\u76f4\u63a5\u533a\u95f4\u51cf\u6cd5\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u8fd9\u91cc\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u6700\u5c0f\u503c\u800c\u4e0d\u662f\u533a\u95f4\u548c\uff0c\u6240\u4ee5\u76f4\u63a5\u51cf\u5c31\u884c\uff0c\u4e0d\u9700\u8981\u4e58\u4e0a\u4e00\u4e2a $r-l+1$\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u8ba1\u7b97\u7684\u5e76\u4e0d\u662f\u57ce\u5e02\uff0c\u800c\u662f\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u4e00\u4e2a\u6bb5\uff0c\u56e0\u6b64\u8981\u51cf $1$ \u5904\u7406\u3002\n\n\u8be6\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace Tree{\n\tint c,s,r;\n\tconst int maxn=60005;\n\tstruct node{\n\t\tint l,r;\n\t\tint lson,rson;\n\t\tint seat;\n\t\tint tag;\n\t}a[maxn*2];\n\tvoid pushup(int x){\n\t\ta[x].seat=min(a[a[x].lson].seat,a[a[x].rson].seat);\n\t}\n\tint cnt=0;\n\tint Root;\n\tvoid Build(int &x,int l,int r){\n\t\tif(x==0){\n\t\t\tx=++cnt;\n\t\t\ta[x].l=l;\n\t\t\ta[x].r=r;\n\t\t\ta[x].tag=0;\n\t\t}\n\t\tif(a[x].l==a[x].r){\n\t\t\ta[x].seat=s;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)/2;\n\t\tBuild(a[x].lson,l,mid);\n\t\tBuild(a[x].rson,mid+1,r);\n\t\tpushup(x);\n\t}\n\tvoid pushdown(int x){\n\t\tif(a[x].tag==0)\n\t\t\treturn ;\n\t\ta[a[x].lson].seat+=a[x].tag;\n\t\ta[a[x].rson].seat+=a[x].tag;\n\t\ta[a[x].lson].tag+=a[x].tag;\n\t\ta[a[x].rson].tag+=a[x].tag;\n\t\ta[x].tag=0;\n\t}\n\tint ans=0x3ffffff;\n\tvoid Ask(int x,int l,int r){\n\t\tif(a[x].r<l||a[x].l>r)\n\t\t\treturn ;\n\t\tif(l<=a[x].l&&a[x].r<=r){\n\t\t\tans=min(ans,a[x].seat);\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(x);\n\t\tAsk(a[x].lson,l,r);\n\t\tAsk(a[x].rson,l,r);\n\t\tpushup(x);\n\t}\n\tvoid Update(int x,int l,int r,int n){\n\t\tif(a[x].r<l||a[x].l>r)\n\t\t\treturn ;\n\t\tif(l<=a[x].l&&a[x].r<=r){\n\t\t\ta[x].seat+=n;\n\t\t\ta[x].tag+=n;\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(x);\n\t\tUpdate(a[x].lson,l,r,n);\n\t\tUpdate(a[x].rson,l,r,n);\n\t\tpushup(x);\n\t}\n\tint main(){\n\t\tcin>>c>>s>>r;\n\t\tBuild(Root,1,c-1);\n\t\tfor(int i=1;i<=r;i++){\n\t\t\tint o,d,n;\n\t\t\tcin>>o>>d>>n;\n\t\t\tans=0x3ffffff;\n\t\t\tAsk(Root,o,d-1);\n\t\t\tif(ans>=n){\n\t\t\t\tcout<<\"T\\n\";\n\t\t\t\tUpdate(Root,o,d-1,-n);\n\t\t\t}\n\t\t\telse if(ans<n)\n\t\t\t\tcout<<\"N\\n\";\n\t\t}\n\t\treturn 0;\n\t}\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tTree::main();\n\treturn 0;\n}\n```\n",
        "postTime": 1677073292,
        "uid": 600442,
        "name": "Lucas_Long",
        "ccfLevel": 0,
        "title": "[POI2002]\u706b\u8f66\u7ebf\u8def \u9898\u89e3"
    },
    {
        "content": "# \u89e3\u9898\u601d\u8def\n\n\u5fc5\u987b\u660e\u786e\uff0c\u9898\u76ee\u4e2d\u8bf4\u5230\u7684\u201c\u6ee1\u8db3\u8ba2\u8d2d\u8981\u6c42\u201d\u662f\u6307\uff1a\u76ee\u524d\u7b2c $i$ \u4e2a\u7ad9\u5df2\u7ecf\u9884\u5b9a\u7684\u5ea7\u4f4d\u6570 $now_i+N\\le s (O\\le i<D)$\u3002\n\n**\u4e3a\u4ec0\u4e48 $i$ \u7684\u8303\u56f4\u4e3a\u5c0f\u4e8e $D$\uff0c\u800c\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8e $D$\uff1f\u56e0\u4e3a\u5728\u7ec8\u70b9\u7ad9 $D$ \u65f6\uff0c\u8fd9\u4e9b\u4eba\u90fd\u8be5\u4e0b\u8f66\u4e86\uff0c\u4e5f\u5c31\u4e0d\u7528\u5360\u636e\u5ea7\u4f4d\u4e86\u3002\u8fd9\u662f\u6700\u5927\u7684\u6613\u9519\u70b9\u3002**\n\n\u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230\u8981\u7528\u4e00\u4e2a\u6570\u7ec4 $now$ \u50a8\u5b58\u6bcf\u4e2a\u7ad9\u70b9\u76ee\u524d\u5df2\u9884\u5b9a\u7684\u5ea7\u4f4d\u6570\uff0c\u6bcf\u6b21\u5224\u65ad $now_i(O\\le i<D)$ \u4e2d\u7684\u6700\u5927\u503c\u52a0\u4e0a $N$ \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e $s$ \u5373\u53ef\u3002\u5982\u679c\u6ee1\u8db3\u8981\u6c42\uff0c\u522b\u5fd8\u4e86 $now_i=now_i+N (O\\le i<D)$\u3002\n\n\u53c8\u6709\u533a\u95f4\u67e5\u8be2\uff0c\u53c8\u6709\u533a\u95f4\u4fee\u6539\uff0c\u60f3\u5230\u4ec0\u4e48\uff1f\u6ca1\u9519\uff0c\u5c31\u662f\u7ebf\u6bb5\u6811\uff01\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u5199\u4ee3\u7801\u4e86\uff01\n\n# AC code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int MAXN=60005;\nint n,s,m;\nint tl,tr,x;\nint tree[4*MAXN],col[4*MAXN];\t\t\t//tree\u6570\u7ec4\u5373\u4e3a\u5bf9now\u6570\u7ec4\u5efa\u7684\u7ebf\u6bb5\u6811\n\ninline void pushdown(int p){\t\t\t//\u4e0b\u653e\u61d2\u6807\u8bb0\n\tif( col[p] ){\n\t\ttree[p*2]+=col[p];\n\t\ttree[p*2+1]+=col[p];\n\t\tcol[p*2]+=col[p];\n\t\tcol[p*2+1]+=col[p];\n\t\tcol[p]=0;\n\t}\n\treturn;\n}\n\ninline void modify(int l,int r,int p){\t\t//\u533a\u95f4\u4fee\u6539\n\tif( tl<=l && tr>=r ){\n\t\ttree[p]+=x;\n\t\tcol[p]+=x;\n\t\treturn;\n\t}\n\tpushdown(p);\n\tint mid=(l+r)>>1;\n\tif( tl<=mid )\n\t\tmodify(l,mid,p*2);\n\tif( tr>mid )\n\t\tmodify(mid+1,r,p*2+1);\n      tree[p]=max(tree[p*2],tree[p*2+1]);\t//\u522b\u5fd8\u4e86\u6bcf\u6b21\u4fee\u6539\u90fd\u4e00\u5b9a\u8981\u66f4\u65b0\uff01\n}\n\ninline int query(int l,int r,int p){\t\t//\u533a\u95f4\u67e5\u8be2\n\tif( tl<=l && tr>=r )\n\t\treturn tree[p];\n\tpushdown(p);\n\tint ans=0,mid=(l+r)>>1;\n\tif( tl<=mid )\n\t\tans=max(ans,query(l,mid,p*2));\n\tif( tr>mid )\n\t\tans=max(ans,query(mid+1,r,p*2+1));\n\treturn ans;\n}\n\nint main(){\n\tscanf(\"%d%d%d\",&n,&s,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&tl,&tr,&x);\n\t\ttr--;\n\t\tif( x+query(1,n,1)<=s ){\n\t\t\tmodify(1,n,1);\n\t\t\tprintf(\"T\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"N\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1672551866,
        "uid": 538427,
        "name": "czy0323",
        "ccfLevel": 5,
        "title": "P8856\u9898\u89e3"
    },
    {
        "content": "### Solution\n\n\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u9053\u9898\u8f6c\u6362\u6210\u6570\u5217\u533a\u95f4\u6700\u5c0f\u503c\u7684\u95ee\u9898\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u6bcf\u5904\u7406\u4e00\u4e2a\u9884\u5b9a\uff0c\u5982\u679c\u53ef\u4ee5\u6ee1\u8db3\uff0c\u5373\u8fd9\u4e00\u6bb5\u533a\u95f4\u91cc\u6240\u6709\u7684\u6570\u90fd\u5927\u4e8e\u7b49\u4e8e\u9884\u5b9a\u7684\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u533a\u95f4\u91cc\u7684\u6240\u6709\u6570\u90fd\u51cf\u53bb\u8fd9\u4e2a\u6570\u3002\u5426\u5219\u7684\u8bdd\u5c31\u662f\u4e0d\u80fd\u6ee1\u8db3\uff0c\u8f93\u51fa ```N``` \u5373\u53ef\u3002\n\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u67e5\u8be2\u7684\u533a\u95f4\u4e0d\u80fd\u5230 $D$\uff0c\u53ea\u80fd\u5230 $D-1$\uff0c\u56e0\u4e3a\u5230\u4e86\u7ad9\u4eba\u5c31\u4f1a\u4e0b\u8f66\uff0c\u5ea7\u4f4d\u5c31\u4f1a\u7a7a\u51fa\u6765\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nstruct lhr{\n    int o,d,n;\n}a[60005];\nstruct hcr{\n    int l,r,min,add;\n}tree[60000*4+5];\nint c,s,r;\ninline int read(){\n    register int x=0,f=0;register char ch=getchar();\n    while(!isdigit(ch))f^=!(ch^45),ch=getchar();\n    while(isdigit(ch))x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return f?-x:x;\n}\ninline int ls(int x){return x<<1;}\ninline int rs(int x){return x<<1|1;}\nvoid push_up(int x){tree[x].min=min(tree[ls(x)].min,tree[rs(x)].min);}\nvoid build(int id,int l,int r){\n    tree[id].l=l;\n    tree[id].r=r;\n    if(l==r){\n        tree[id].min=s;\n        return;\n    }\n    int mid=(l+r)/2;\n    build(ls(id),l,mid);\n    build(rs(id),mid+1,r);  \n    push_up(id);\n}\nvoid push_down(int x){\n    tree[ls(x)].add+=tree[x].add;\n    tree[rs(x)].add+=tree[x].add;\n    tree[ls(x)].min+=tree[x].add;\n    tree[rs(x)].min+=tree[x].add;\n    tree[x].add=0;\n} \nvoid change(int id,int l,int r,int d){\n    if(l<=tree[id].l && tree[id].r<=r){\n        tree[id].min+=d;\n        tree[id].add+=d;\n        return;\n    }\n    push_down(id);\n    int mid=(tree[id].l+tree[id].r)/2;\n    if(l<=mid) change(ls(id),l,r,d);\n    if(mid<r) change(rs(id),l,r,d);\n    push_up(id);\n}\nint query(int id,int l,int r){\n    if(l<=tree[id].l && tree[id].r<=r) return tree[id].min;\n    int ans=INT_MAX;\n    push_down(id);\n    int mid=(tree[id].r+tree[id].l)/2;\n    if(l<=mid) ans=min(query(ls(id),l,r),ans);\n    if(mid<r) ans=min(query(rs(id),l,r),ans);\n    return ans;\n}  \nsigned main(){\n    c=read(),s=read(),r=read();\n    for(int i=1;i<=r;++i){\n        a[i].o=read();\n        a[i].d=read();\n        a[i].d--;\n        a[i].n=read();\n    }\n    build(1,1,c);\n    for(int i=1;i<=r;++i){\n        if(query(1,a[i].o,a[i].d)>=a[i].n){\n            printf(\"T\\n\");\n            change(1,a[i].o,a[i].d,-a[i].n);\n        }else printf(\"N\\n\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1668782157,
        "uid": 491321,
        "name": "Erotate",
        "ccfLevel": 0,
        "title": "[POI2002]\u706b\u8f66\u7ebf\u8def \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u770b\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u773c\u6709\u70b9~~\u6700\u5c0f\u74f6\u9888\u8def~~\u7684\u611f\u89c9\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u611f\u89c9\u8fd8\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u672c\u9898\u8981\u4ece $O$ \u5230 $D$ \u4e70 $N$ \u5f20\u7968\uff0c\u4e0d\u5c31\u76f8\u5f53\u4e8e\u628a $O$ \u5230 $D$ \u8fd9\u4e2a\u533a\u95f4\u4e00\u8d77\u52a0\u4e0a $N$ \u5417\uff1f\u518d\u601d\u8003\uff0c\u80fd\u5426\u4e70\u8fd9\u4e48\u591a\u7968\u53d6\u51b3\u4e8e\u5f53\u524d\u533a\u95f4\u5185\u6240\u6709\u7ad9\u70b9\u5269\u4e0b\u7684**\u6700\u5c11\u7684\u7968\u6570**\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u503c\uff01\u5230\u6b64\u4e3a\u6b62\u95ee\u9898\u5f97\u5230\u4e86\u89e3\u51b3\u3002\n\n\u505a\u6cd5\u5982\u4e0b\uff1a\n\n- \u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u5185\u4f7f\u7528\u7968\u6570\u7684\u6700\u5927\u503c\uff08\u7528\u603b\u7968\u6570\u51cf\u53bb\u5373\u4e3a\u5269\u4f59\u7684\uff09\u3002\n- \u5224\u65ad\u6240\u9700\u7968\u6570\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u5269\u4f59\u7968\u6570\u3002\u82e5\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5219\u5c06\u8be5\u533a\u95f4\u52a0\u4e0a\u6240\u9700\u7684\u7968\u6570\uff1b\u82e5\u5927\u4e8e\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\u8be5\u8bf7\u6c42\u3002\n- \u8bf7\u6ce8\u610f\u5230\u8fbe\u7ec8\u70b9\u7ad9\u540e\u4e58\u5ba2\u4f1a\u4e0b\u8f66\uff0c\u6240\u4ee5\u9700\u8981\u64cd\u4f5c\u7684\u533a\u95f4\u5e94\u662f\u4ece $O$ \u5230 $D-1$ \u624d\u5bf9\u3002\n\n\u603b\u7528\u65f6 157ms\uff0c\u7384\u5b66\u5e38\u6570\u6210\u529f\u8dd1\u8fc7 100ms \u7684\u9650\u5236\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define init read()\nusing namespace std;\nconst int N=60005;\nint c,s,r;\ninline int read()\n{\n\tint mmm=0,ff=1;char xx=getchar();\n\twhile((xx<'0'||xx>'9')&&xx!='-')xx=getchar();\n\tif(xx=='-')ff=-1,xx=getchar();\n\twhile(xx>='0'&&xx<='9')\n\tmmm=mmm*10+xx-'0',xx=getchar();\n\treturn mmm*ff;\n}\ninline void write(int x)\n{\n\tif(x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif(x>9)write(x/10);\n\tputchar(x%10+'0');\n}\nstruct Segment_Tree\n{\n\t#define lc k<<1\n\t#define rc k<<1|1\n\tstruct Node\n\t{\n\t\tint L,R;\n\t\tint val; //\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u503c\n\t\tint lazy; //\u52a0\u6cd5\u7684\u61d2\u60f0\u6807\u8bb0\n\t}t[N<<2];\n\tinline void pushup(int k)\n\t{\n\t\tt[k].val=max(t[lc].val,t[rc].val);\n\t}\n\tinline void pushdown(int k)\n\t{\n\t\tif(!t[k].lazy)return;\n\t\tt[lc].lazy+=t[k].lazy;\n\t\tt[rc].lazy+=t[k].lazy;\n\t\tt[lc].val+=t[k].lazy;\n\t\tt[rc].val+=t[k].lazy;\n\t\tt[k].lazy=0;\n\t}\n\tinline void build(int k,int l,int r)\n\t{\n\t\tt[k].L=l;t[k].R=r;\n\t\tif(l==r)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(lc,l,mid);\n\t\tbuild(rc,mid+1,r);\n\t}\n\tinline void update(int k,int ql,int qr,int val)\n\t{\n\t\tint l=t[k].L,r=t[k].R;\n\t\tif(l>=ql&&r<=qr)\n\t\t{\n\t\t\tt[k].val+=val;\n\t\t\tt[k].lazy+=val;\n\t\t\treturn;\n\t\t}\n\t\tpushdown(k);\n\t\tint mid=(l+r)>>1;\n\t\tif(mid>=ql)update(lc,ql,qr,val);\n\t\tif(mid<qr)update(rc,ql,qr,val);\n\t\tpushup(k);\n\t}\n\tinline int query(int k,int ql,int qr)\n\t{\n\t\tint l=t[k].L,r=t[k].R;\n\t\tif(l>=ql&&r<=qr)\n\t\t{\n\t\t\treturn t[k].val;\n\t\t}\n\t\tpushdown(k);int res=0;\n\t\tint mid=(l+r)>>1;\n\t\tif(mid>=ql)res=max(res,query(lc,ql,qr));\n\t\tif(mid<qr)res=max(res,query(rc,ql,qr));\n\t\treturn res;\n\t}\n};\nSegment_Tree T;\nint main()\n{\n\tc=init;s=init;r=init;\n\tT.build(1,1,c);\n\tfor(int i=1;i<=r;i++)\n\t{\n\t\tint o=init,d=init,n=init;\n\t\tint tmp=T.query(1,o,d-1); //\u6ce8\u610f\u8fd9\u91cc\u4fee\u6539\u7684\u8303\u56f4\n\t\tif(n<=s-tmp) //\u7528\u603b\u7968\u6570\u51cf\u53bb\u8def\u4e0a\u6700\u591a\u5360\u7528\u7684\u7968\u6570\u5f97\u5230\u5269\u4e0b\u7684\u6700\u5c11\u7684\u7968\u6570\n\t\t{\n\t\t\tT.update(1,o,d-1,n);\n\t\t\tputs(\"T\");\n\t\t}\n\t\telse puts(\"N\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683014479,
        "uid": 123823,
        "name": "Dr_Glitch",
        "ccfLevel": 4,
        "title": "P8856 \u9898\u89e3"
    }
]