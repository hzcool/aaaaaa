[
    {
        "content": "~~\uff08\u4e0d\u653e\u4ee3\u7801\u7684\u9898\u89e3\u771f\u7684\u68d2\uff1f\uff09~~\n\n\u8fd9\u9053\u9898\u8bf7\u5927\u5bb6\u76f8\u4fe1\u4fe1\u4ef0!\u76f8\u4fe1dinic\uff01O(V^2E)\u662f\u6700\u574f\u590d\u6742\u5ea6\uff0c\u5f53\u56fe\u7684\u6df1\u5ea6\u76f8\u5f53\u5c0f\uff0c\n\u76f8\u5f53\u7a00\u758f\u7684\u65f6\u5019\uff0cdinic\u8dd1\u7684\u7edd\u5bf9\u662f\u98de\u8d77\u7684\uff01\n# \u5efa\u56fe\u63a8\u51fa\u6765\u4e0d\u662f\u7ed3\u675f\uff0c\u67d3\u8272\u4e5f\u5f88\u5173\u952e\uff01\n\n\u7f51\u7edc\u6d41\u9898\u7684\u51e0\u4e2a\u7279\u6027\n\n~~1.\u9898\u9762\u504f\u957f~~\n\n2.\u4f1a\u51fa\u73b0\u7f51\u683c\u56fe\n\n**3.\u6709\u9b3c\u755c\u7684\u8bbe\u5b9a\uff0c\u5e76\u4e14\u5982\u679c\u60f3\u5230\u4e86\u9519\u89e3\u7684\u8bdd\u8fd9\u4e9b\u8bbe\u5b9a\u5b8c\u5168\u6ca1\u5fc5\u8981**\n\n(\u4f8b\u5982P4004\u65e0\u9650\u4e4b\u73af\uff0c\u5982\u679c\u4e0d\u662f\u6709\u67d0\u4e00\u4e2a\u5947\u602a\u7684\u8bbe\u5b9a\u7684\u8bdd\u7f51\u7edc\u6d41\u5b8c\u5168\u505a\u4e0d\u4e86)\n\n\u90a3\u4e48\u6211\u4eec\u5462\u53d1\u73b0\u8fd9\u9053\u9898\u7684\u8bbe\u5b9a\u4e5f\u975e\u5e38\u9b3c\u755c\n\n\u6709\u4e00\u4e2a\u5173\u952e\u8fb9\uff0c\u8fd8\u6709\u4e00\u5806\u5947\u602a\u7684\u56fe\u5f62\u2026\u2026\n\n\u4f46\u662f\u64cd\u4f5c\u5f02\u5e38\u7b80\u5355\uff0c\u53ea\u6709\u70b8\u683c\u5b50\u8fd9\u4e00\u79cd\u64cd\u4f5c\n\n\u8fd8\u662f\u7f51\u683c\u56fe\u2026\u2026\u5982\u679c\u4f60\u8db3\u591f**\u719f\u7ec3**~~\uff08\u6211\u600e\u4e48\u8fd9\u4e48\u4e0d\u719f\u7ec3\u554a\u2026\u2026\uff09~~\u7684\u8bdd\u6b64\u65f6\u7684\u7b2c\u4e00\u53cd\u5e94\u5e94\u8be5\u662f**\u9ed1\u767d\u67d3\u8272**\uff0c\u7136\u540e\u8003\u8651\u5efa\u56fe\u4e86\u3002\n\n~~\u6709\u4e86\u53ef\u4ee5\u67d3\u7684\u8272\u3002\u53c8\u6709\u4e86\u53ef\u4ee5\u5207\u9898\u7684\u677f\u5b50\u3002\u4e24\u4ef6\u5feb\u4e50\u4e8b\u60c5\u91cd\u5408\u5728\u4e00\u8d77\u3002\u800c\u8fd9\u4e24\u4efd\u5feb\u4e50\uff0c\u53c8\u7ed9\u6211\u5e26\u6765\u66f4\u591a\u7684\u5feb\u4e50\u3002\u5f97\u5230\u7684\uff0c\u672c\u8be5\u662f\u50cf\u6c34\u4e00\u822c\u597d\u5207\u7684\u9898\u2026\u2026\u4f46\u662f\uff0c\u4e3a\u4ec0\u4e48\uff0c\u4f1a\u53d8\u6210\u8fd9\u6837\u5462\u2026\u2026~~\n\n## \u9ed1\u767d\u67d3\u8272EX\uff1a\u56db\u8272\n\n\u4f46\u662f\u6211\u4eec\u5f88\u5feb\u53d1\u73b0\u4ec5\u4ec5\u662f\u9ed1\u767d\u67d3\u8272\u4e0d\u8db3\u4ee5\u8ba9\u6211\u4eec\u5207\u6389\u8fd9\u9053\u9898\uff0c\u56e0\u4e3a**\u548c\u84dd\u8fb9\u662f\u5426\u76f8\u90bb**\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u683c\u5b50\u662f\u5f88\u91cd\u8981\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u518d\u4ee5\u662f\u5426\u6328\u7740\u84dd\u8fb9\u4e3a\u6839\u636e\u7ee7\u7eed\u67d3\u8272\uff0c\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u67d3\u6210\u8fd9\u4e2a\u6837\u5b50\n\n![](https://cdn.luogu.com.cn/upload/pic/15523.png)\n\n\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u4e2d\u6240\u7ed9\u51fa\u7684\u5947\u602a\u56fe\u5f62\uff0c\u5168\u90e8\u662f4\u4e2a\u683c\u5b50\u4e3a4\u79cd\u4e0d\u540c\u989c\u8272\u4e14\u7ea2\u84dd\u70b9\u76f8\u90bb\u7684\u56fe\u5f62\uff01\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8054\u901a\u5757\u6765\u8bf4\u6211\u4eec\u9700\u8981\u70b8\u5149\u5176\u4e2d\u7684\u4e00\u79cd\u989c\u8272\u624d\u53ef\u4ee5\u7834\u574f\u7ed9\u5b9a\u7684\u56fe\u5f62\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u6700\u5c0f\u5272\u7684\u89d2\u5ea6\u6765\u8bb2\u5c31\u662f\u7834\u574f\u5176\u4e2d\u7684\u4e00\u6bb5\u901a\u8def\u5373\u53ef\n\n\u90a3\u4e48\u8fd9\u4e2a\u67d3\u8272\u56fe\u5f62\u5df2\u7ecf\u7ed9\u4e86\u6211\u4eec\u5f88\u5927\u7684\u542f\u793a\u4e86\uff0c\u6211\u4eec\u53d1\u73b0**\u9ec4\u8272\u70b9\u548c\u84dd\u8272\u70b9**\u4e0d\u76f4\u63a5\u76f8\u8fde\uff0c**\u7eff\u8272\u70b9\u548c\u7ea2\u8272\u70b9**\u4e0d\u76f4\u63a5\u76f8\u8fde\n\n\u7531\u4e8e\u5f62\u6210\u56fe\u5f62\u5fc5\u987b\u6709\u76f8\u90bb\u7684\u7ea2\u84dd\u70b9\uff0c\u56e0\u6b64\u9ec4\u70b9\u548c\u7eff\u70b9\u4e4b\u95f4\u8fde\u8fb9\u4f3c\u4e4e\u6ca1\u5565\u5fc5\u8981\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u8fd9\u6837\u4e00\u79cd\u5efa\u56fe\u65b9\u5f0f\u53ef\u4ee5\u6781\u597d\u7684\u6ee1\u8db3\u6211\u4eec\u7684\u8981\u6c42\n\n\u7531\u4e8e\u7834\u574f\u8282\u70b9\u53ea\u53ef\u80fd\u662f**\u7206\u9ec4\u70b9\uff0c\u7206\u7eff\u70b9\uff0c\u7206\u7ea2\u84dd**\u95f4\u7684\u6700\u5c0f\u70b9\u4e2d3\u9009\u4e00\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ea2\u84dd\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u60f3\u65b9\u8bbe\u6cd5\u6784\u9020\u4e00\u4e2aS\u5230T\u7684\u901a\u8def\uff0c\u4f7f\u5f97\u8fd9\u4e09\u4e2a\u8def\u5f84**\u4e32\u8054**\u5728\u4e00\u8d77\u3002\u540c\u65f6\uff0c\u663e\u7136\u6211\u4eec\u5fc5\u987b\u7206\u6389\u6240\u6709\u7684\u9ec4\u70b9\u6216\u8005\u7eff\u70b9\uff0c\u56e0\u6b643\u4e2a\u9ec4\u548c3\u4e2a\u7eff\u5e94\u8be5\u662f**\u5e76\u8054**\u7684\n\n**\u5728\u6700\u5c0f\u5272\u4e2d\uff0c\u4e32\u8054\u8868\u793a\u201c\u6216\u201d\uff0c\u5e76\u8054\u8868\u793a\u201c\u4e14\u201d**\n\n\u5927\u6982\u6309\u7167\u6211\u4eec\u7684\u60f3\u6cd5\u8fde\u7684\u8fb9\u5e94\u8be5\u662f\u8fd9\u6837\uff1f\n\n![](https://cdn.luogu.com.cn/upload/pic/15524.png)\n\n\u5176\u4e2d\u7ea2\u84dd\u95f4\u7684\u8fb9\u662f\u7ea2\u84dd\u70b9\u6743\u7684\u6700\u5c0f\u503c\uff0c\u672c\u6765\u6b63\u89c4\u7684\u8fde\u6cd5\u662f\u52a0\u4e00\u4e2a\u4e2d\u95f4\u70b9\uff0c\u8fde\u5411\u7ea2\u7684\u662f\u7ea2\u70b9\u6743\uff0c\u8fde\u5411\u84dd\u7684\u662f\u84dd\u70b9\u6743\u8868\u793a\u65e2\u53ef\u4ee5\u7206\u7ea2\u4e5f\u53ef\u4ee5\u7206\u84dd\uff0c\u4f46\u662f\u8fd9\u91cc\u76f4\u63a5\u88ab\u7f29\u6210\u4e00\u6761\u8fb9\u4e86\n\n\u663e\u7136\u7ea2\u9ec4\uff0c\u84dd\u7eff\u7684\u8054\u7cfb\u662f\u65e0\u6cd5\u65a9\u65ad\u7684\uff0c\u6240\u4ee5\u8bbe\u6210\u65e0\u7a77\u5927\u597d\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u8ba9\u6bcf\u4e2a\u9ec4\u70b9\u5411S\u8fde\u7b49\u4e8e\u5176\u5bb9\u91cf\u7684\u8fb9\uff0c\u6bcf\u4e2a\u7eff\u70b9\u5411T\u8fde\u7b49\u4e8e\u5176\u5bb9\u91cf\u7684\u8fb9\u5c31\u6210\u529f\u7684\u5efa\u51fa\u4e86\u4e00\u4e2a\u6700\u5c0f\u5272\u6a21\u578b\uff01\u6211\u4eec\u73b0\u5728\u53ea\u9700\u8dd1\u4e00\u4e2a\u88f8\u7684\u6700\u5c0f\u5272\u5c31\u884c\u4e86\uff01\n\n\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e00\u822c\u7f51\u683c\u56fe\u9898\uff0c\u6211\u4eec\u4e3a\u4e86\u597d\u5199\uff0c\u4f1a\u7ef4\u62a4\u4e00\u4e2atr\u6570\u7ec4\u6765\u7ed9\u65b9\u683c\u7f16\u53f7\uff0c\u67d3\u8272\uff0c\u4f46\u662f\u8fd9\u91cc\u7684r,c\u90fd\u662f1e5\u8fd9\u4f7f\u6211\u4eec\u6ca1\u6cd5\u5f88\u597d\u7684\u67d3\u8272\u2026\u2026\n\n\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u8fd9\u4e2a\u8272\u67d3\u5f97\u53ef\u8c13\u662f\u5947\u6280\u6deb\u5de7\uff0c\u6beb\u65e0\u89c4\u5f8b\u53ef\u8a00\uff0c\u4e0d\u50cf\u9ed1\u767d\u67d3\u8272\u90a3\u6837\u5224\u65ad(x+y)%2\u822c\u4f18\u7f8e\u2026\u2026\uff0c\u96be\u9053\u6211\u4eec\u9700\u8981\u6362\u4e00\u4e2a\u66f4\u52a0\u4f18\u7f8e\u7684\u7b97\u6cd5\uff1f\n\n## \u52068\u79cd\u60c5\u51b5\u679a\u4e3ex%4\u548cy%2\u7684\u7ec4\u5408\u5373\u53ef\n\n\u53e6\u5916\uff0c\u6211\u4eec\u53d1\u73b0\u80af\u5b9a\u4e0d\u5141\u8bb8\u6211\u4eec\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4fdd\u5b58\u683c\u5b50\u91cc\u662f\u5426\u6709\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981map\uff0c\u5177\u4f53\u6765\u8bb2\u628a\u4e24\u4e2aint\u7684\u5750\u6807\u5229\u7528(i-1)\\*c+j\u8fd9\u4e2a\u516c\u5f0f**\u5f3a\u884c\u6620\u5c04\u5230longlong\u4e0a**\uff0c\u7136\u540e\u7528map\u5b58\u4e0b\u5750\u6807\u548c\u7f16\u53f7\u7684\u8054\u7cfb\uff0c\u6bd5\u7adf1e5\u7684\u60c5\u51b5\u4e0blogN\u7684\u67e5\u627e\u590d\u6742\u5ea6\u53ef\u4ee5\u63a5\u53d7\uff0c\u4e4b\u540e\u6211\u4eec\u66b4\u529b\u68c0\u6d4b\u6bcf\u4e00\u4e2a\u7ea2\u84dd\u8282\u70b9\u5468\u8fb9\u8282\u70b9\u989c\u8272\u5efa\u56fe\u5373\u53ef\n\n\u5bf9\u4e86\u8fd9\u91cc\u5f3a\u884c\u5b89\u5229\u4e00\u6ce2switch\u8fd9\u4e2a\u5e73\u65f6\u7528\u4e0d\u5230\u7684\u8bed\u6cd5\uff0c\u867d\u8bf4\u53ef\u4ee5\u88abelse if\u5b8c\u7206\uff0c\u4f46\u662f**\u4e0d\u7528\u5199\u62ec\u53f7\uff01\u4e0d\u7528\u5199\u62ec\u53f7\uff01\u4ee3\u7801\u7d27\u51d1\uff01**\u5982\u679c\u5199\u7f51\u7edc\u6d41\u8fd9\u79cd\u672c\u6765\u67d3\u8272\u5c31\u590d\u6742\u7684\u4e1c\u897f\u6765\u8bf4\u5b9e\u5728\u662f\u518d\u597d\u4e0d\u8fc7\u4e86\u2026\u2026\n\n\u8fd9\u9898\u7684\u4ee3\u7801\u5b9e\u73b0\u9700\u8981\u4e00\u4e9b\u6280\u5de7\u2026\u2026\u4e3b\u8981\u662f\u67d3\u8272\u5f88\u68d2(\u0e51\u2022\u0300\u3142\u2022\u0301)\u0648\u2727\uff0c\u8fd9\u91cc\u4e3a\u4e86\u5224\u8d8a\u754c\u7684\u65f6\u5019\u4e0d\u7528\u8ba8\u8bba\u7279\u5730\u628a\u6620\u5c04\u516c\u5f0f\u53d8\u6210\u4e86(i-1)\\*(c+1)+j\u8fd9\u6837\u7684\u8bdd\u5373\u4f7f\u662fy\u8d85\u754c\u7684\u8bdd\u4e5f\u4f1a\u88ab\u76f4\u63a5\u5224\u6389\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```c\n#include<cstdio>\n#include<algorithm>\n#include<map>\n#include<queue>\nusing namespace std;\ntypedef long long ll;//dinic\u677f\u5b50\u8fd8\u4e0d\u719f\u7ec3\u7684\u8bdd\u53bb\u770b\u819c\u677f\u7684\u9898\u89e3\u5427\u2026\u2026 \nconst int N=1e5+10;const int M=6*1e6+50;\nstruct data{int v;int nxt;int cot;}edge[M];\nint alist[N];int cnt=1;int res;\ninline void add(int u,int v,int cot)\n{\n\tedge[++cnt].v=v;edge[cnt].nxt=alist[u];alist[u]=cnt;edge[cnt].cot=cot;\n\tedge[++cnt].v=u;edge[cnt].nxt=alist[v];alist[v]=cnt;edge[cnt].cot=0;\n}\nint dep[N];queue <int> q;int ctt;int s;int t;\ninline bool bfs()\n{\n\tfor(int i=1;i<=ctt;i++){dep[i]=0x3f3f3f3f;}\n\tdep[s]=0;q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();q.pop();int nxt=alist[now];\n\t\twhile(nxt)\n\t\t{\n\t\t\tint v=edge[nxt].v;int cot=edge[nxt].cot;\n\t\t\tif(dep[v]==0x3f3f3f3f&&cot!=0)\n\t\t\t{dep[v]=dep[now]+1;q.push(v);}\n\t\t\tnxt=edge[nxt].nxt;\n\t\t}\n\t}return dep[t]!=0x3f3f3f3f;\n}\ninline int dfs(int x,int lim)\n{\n\tif(x==t){return lim;}\n\tint nxt=alist[x];int nowflow=0;\n\twhile(nxt)\n\t{\n\t\tif(lim==0)break;\n\t\tint v=edge[nxt].v;int cot=edge[nxt].cot;\n\t\tif(dep[v]==dep[x]+1&&cot!=0)\n\t\t{\n\t\t\tint del=dfs(v,min(lim,cot));\n\t\t\tlim-=del;nowflow+=del;\n\t\t\tedge[nxt].cot-=del;edge[nxt^1].cot+=del;\n\t\t}nxt=edge[nxt].nxt;\n\t}if(nowflow==0){dep[x]=0x3f3f3f3f;}\n\treturn nowflow;\n}//\u4e0b\u9762\u662f\u67d3\u8272\u9636\u6bb5~ \nint n;ll r;ll c;int x[N];int y[N];int w[N];int col[N];//\u5f3a\u884c\u6620\u5c04\u7684\u516c\u5f0f \ninline ll tr(ll i,ll j){return (i-1)*(c+1)+j;}map <ll,int> mp;\nint dx[4]={1,-1,0,0};int dy[4]={0,0,-1,1};//\u4f3c\u4e4e\u4e0a\u6b21\u89c1\u5230\u8fd9\u4e2a\u6570\u7ec4\u8fd8\u662f\u5728\u5199bfs\u8d70\u8ff7\u5bab\uff1f \ninline void build_A(int i,int j,int nod)//\u7ea2\u8272\u8282\u70b9\u8fde\u8fb9\u51fd\u6570 \n{\n\tfor(int k=0;k<=3;k++)//\u679a\u4e3e\u65b9\u5411 \n\t{\n\t\tll px=dx[k]+i;ll py=dy[k]+j;int num=mp[tr(px,py)];\n\t\tif(num!=0)//\u5982\u679c\u5b58\u5728\u8fd9\u4e2a\u70b9 \n\t\t{\n\t\t\tif(col[num]!=2){add(num,nod,0x3f3f3f3f);}//\u9ec4-\u7ea2 \n\t\t\telse {add(nod,num,min(w[num],w[nod]));}//\u7ea2-\u84dd \n\t\t}\n\t}\n}\ninline void build_B(int i,int j,int nod)//\u84dd\u8272\u8282\u70b9\u8fde\u8fb9\u51fd\u6570 \n{\n\tfor(int k=0;k<=3;k++)\n\t{\n\t\tll px=dx[k]+i;ll py=dy[k]+j;int num=mp[tr(px,py)];\n\t\tif(num!=0)//\u5982\u679c\u8fd9\u4e2a\u70b9\u5b58\u5728 \n\t\t{if(col[num]!=1){add(nod,num,0x3f3f3f3f);}}//\u84dd-\u7eff \n\t}\n}\nint main()\n{\n\tscanf(\"%lld%lld%d\",&c,&r,&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x[i],&y[i],&w[i]);\n\t\tmp[tr(x[i],y[i])]=++ctt;//\u5f3a\u884c\u4f7f\u7528map\u8fdb\u884c\u7f16\u53f7 \n\t}s=++ctt;t=++ctt;\n\tfor(int i=1;i<=n;i++)//\u52068\u4e2d\u60c5\u51b5\u8ba8\u8bba\u67d3\u8272 \n\t{\n\t\tswitch(x[i]%4)//switch+\u6761\u4ef6\u8868\u8fbe\u5f0f\u6210\u529f\u633d\u6551\u4e86\u4e0d\u77e5\u9053\u4f1a\u6709\u591a\u957f\u7684ifelse \n\t\t{\n\t\t\tcase 1:{col[i]=(y[i]%2)?1:3;break;} \n\t\t\tcase 2:{col[i]=(y[i]%2)?2:4;break;}\n\t\t\tcase 3:{col[i]=(y[i]%2)?4:2;break;}\n\t\t\tcase 0:{col[i]=(y[i]%2)?3:1;break;}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)//\u52064\u79cd\u60c5\u51b5\u5efa\u56fe \n\t{\n\t\tswitch(col[i])\n\t\t{\n\t\t\tcase 1:{build_A(x[i],y[i],i);break;}\n\t\t\tcase 2:{build_B(x[i],y[i],i);break;}\n\t\t\tcase 3:{add(s,i,w[i]);break;}//S-\u9ec4 \n\t\t\tcase 4:{add(i,t,w[i]);break;}//\u7eff-T \n\t\t}\n\t}while(bfs()){res+=dfs(s,0x3f3f3f3f);}\n\tprintf(\"%d\",res);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n\n\n\n\n",
        "postTime": 1520856171,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3756 \u3010[CQOI2017]\u8001C\u7684\u65b9\u5757\u3011"
    },
    {
        "content": "Update \u4fee\u6539\u4e86\u9519\u522b\u5b57\u3002\n\n**\u5728\u505a\u8fd9\u9053\u9898\u524d\uff0c\u5efa\u8bae\u5148\u505a [P2774 \u65b9\u683c\u53d6\u6570\u95ee\u9898](https://www.luogu.com.cn/problem/P2774) \u548c [P3355 \u9a91\u58eb\u5171\u5b58\u95ee\u9898](https://www.luogu.com.cn/problem/P3355) \u4ee5\u4fdd\u8bc1\u60a8\u4f1a\u67d3\u8272\u7f51\u7edc\u6d41\u3002**\n\n\u4e00\u9053\u67d3\u8272\u9898\u7684\u7a76\u6781\u5f62\u6001\u3002\n\n\u9996\u5148\u770b\u5230\u65b9\u683c\u60f3\u7f51\u7edc\u6d41\u3002\u770b\u5230\u8981\u6b27\u62c9\u6389\u70b9\u4ee3\u4ef7\u6700\u5c0f\u5c31\u53ef\u4ee5\u60f3\u6700\u5c0f\u5272\u4e86\u3002\u6700\u5c0f\u5272\uff0c\u53c8\u662f\u5728\u7f51\u683c\u4e2d\uff0c\u67d3\u8272\u6ca1\u8dd1\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8fdb\u884c\u9ed1\u767d\u67d3\u8272\u2014\u2014\n\n\u7136\u540e\u5c31\u4f1a\u53d1\u73b0\u67d3\u5b8c\u540e\u4ec0\u4e48\u7528\u90fd\u6ca1\u6709\u3002\n\n\u96be\u9053\u662f\u8fd9\u9053\u9898\u4e0d\u80fd\u7528\u67d3\u8272\uff1f\n\n\u7136\u540e\u6211\u4eec\u6765\u770b\u90a3\u56db\u4e2a\u8001 C \u4e0d\u559c\u6b22\u7684\u56fe\u5f62\uff0c\u90fd\u662f\u56db\u4e2a\u65b9\u5757\u7ec4\u6210\u7684\u3002\n\n\u800c\u4e14\u2014\u2014\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5047\u5982\u6211\u4eec\u7528\u56db\u4e2a\u989c\u8272\u84dd\u7eff\u7ea2\u9ec4\u5bf9\u8fd9\u56db\u4e2a\u56fe\u5f62\u8fdb\u884c\u67d3\u8272\u7684\u8bdd\uff0c\u5c31\u4f1a\u53d1\u73b0\uff0c\u4e00\u5b9a\u4f1a\u5b58\u5728\u8fd9\u6837\u4e00\u6761\u8def\u5f84\uff1a\u9ec4\u2014\u84dd\u2014\u7279\u6b8a\u8fb9\u2014\u7eff\u2014\u7ea2\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nce3wtu1.png)\n\n\u6709\u4e00\u70b9\u7f51\u7edc\u6d41\u7684\u5473\u9053\u4e86\u3002\n\n\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5047\u8bbe\u6211\u4eec\u6309 \u6e90\u70b9\u2014\u9ec4\u2014\u84dd\u2014\u7279\u6b8a\u8fb9\u2014\u7eff\u2014\u7ea2\u2014\u6c47\u70b9 \u8fde\u8fb9\u7684\u8bdd\uff0c\u5047\u82e5\u56fe\u8fd8\u8fde\u901a\u5c31\u8bf4\u660e\u8fd8\u6709\u8fd9\u79cd\u56fe\u5f62\u3002\u5fc5\u987b\u628a\u8fd9\u4e2a\u56fe\u53d8\u6210\u4e0d\u8fde\u901a\u7136\u540e\u82b1\u8d39\u6700\u5c0f\u4ee3\u4ef7\uff0c\u8fd9\u4e0d\u5c31\u662f\u6700\u5c0f\u5272\u5417\u3002\n\n\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u662f\u5982\u4f55\u8fde\u5c42\u4e0e\u5c42\u7684\u8fb9\u4ee5\u53ca\u8fb9\u6743\u7684\u95ee\u9898\u4e86\u3002\n\n\u8fd9\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n\u6211\u4eec\u521a\u521a\u8bf4\u4e00\u4e2a\u4e0d\u559c\u6b22\u56fe\u5f62\u4e2d\u7684\u8def\u5f84\u662f\u9ec4\u2014\u84dd\u2014\u7279\u8fb9\u2014\u7eff\u2014\u7ea2\uff0c\u90a3\u5c31\u8bf4\u660e\u6bcf\u4e00\u4e2a\u84dd\u70b9\u53ea\u80fd\u7531\u9ec4\u70b9\u6e9c\u8fc7\u6765\uff0c\u6bcf\u4e00\u4e2a\u7279\u6b8a\u8fb9\u53ea\u80fd\u7531\u84dd\u70b9\u6d41\u8fc7\u6765\uff0c\u540e\u9762\u51e0\u5c42\u540c\u7406\uff0c\u6240\u4ee5\u5c31\u5411\u9ec4\u70b9\u5468\u56f4\u6240\u6709\u84dd\u70b9\u8fde\u8fb9\uff0c\u6240\u6709\u84dd\u70b9\u5411\u7279\u6b8a\u8fb9\u8fde\uff0c\u540e\u9762\u51e0\u5c42\u540c\u7406\u3002\n\n\u90a3\u4e48\u8fb9\u6743\u5462\uff1f\n\n\u5982\u679c\u628a\u4e00\u4e2a\u9ec4\u70b9\u6b27\u62c9\u6389\u4e86\uff0c\u90a3\u4e48\u5468\u56f4\u6240\u6709\u84dd\u70b9\u5c31\u90fd\u4e0d\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u9ec4\u70b9\u7ec4\u6210\u8ba8\u538c\u56fe\u5f62\u4e86\u3002\u84dd\u70b9\u6b27\u62c9\u6389\u4e86\u7279\u6b8a\u8fb9\u4e5f\u5c31\u4e0d\u80fd\u7ec4\u6210\u7279\u6b8a\u56fe\u5f62\u4e86\u3002\u4e00\u4e0b\u51e0\u5c42\u540c\u7406\u3002\n\n\u8bf4\u660e\u8fb9\u6743\u4e0d\u5728\u9ec4\u2014\u84dd\uff0c\u7eff\u2014\u7ea2\u800c\u5728\u9ec4\u2014\u6e90\u70b9\uff0c\u84dd\u2014\u7279\u8fb9\uff0c\u7eff\u2014\u7279\u8fb9\uff0c\u7ea2\u2014\u6c47\u70b9\u4e0a\u3002\u56de\u63a8\u4e00\u4e0b\u8fd9\u4e5f\u662f\u7b26\u5408\u9898\u610f\u7684\u3002\u628a\u9ec4\u70b9\u4e0e\u6e90\u70b9\u7684\u8fb9\u5272\u6389\u4e86\u5c31\u8bf4\u660e\u4e0d\u9009\u8fd9\u4e2a\u9ec4\u70b9\uff0c\u5b83\u8fde\u7684\u6240\u6709\u84dd\u70b9\u90fd\u4e0d\u4f1a\u901a\u8fc7\u5b83\u4ea7\u751f\u4e0d\u559c\u6b22\u56fe\u5f62\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u628a\u4e0a\u8ff0 $4$ \u79cd\u8fb9\u7684\u8fb9\u6743\u6539\u6210\u6b27\u62c9\u8fd9\u4e2a\u65b9\u5757\u7684\u4ee3\u4ef7\uff0c\u5176\u4f59\u8fb9\u5168\u662f INF \u5c31\u597d\u4e86\u3002\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u84dd\u2014\u7279\u6b8a\u8fb9\u2014\u7eff \u8fd9\u4e00\u6761\u8def\u5f84\u5176\u5b9e\u548c \u84dd\u2014\u7eff \u7136\u540e\u8fb9\u6743\u4e3a $\\min(val[Blue],val[Green])$ \u662f\u7b49\u4ef7\u7684\uff08\u56e0\u4e3a\u6bcf\u6761\u7279\u6b8a\u8fb9\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u84dd\u70b9\u548c\u7eff\u70b9\u548c\u5b83\u8fde\u8fb9\uff09\uff0c\u8fd9\u6837\u5c31\u987a\u4fbf\u628a\u7279\u6b8a\u8fb9\u8fd9\u4e00\u5c42\u7ed9\u4f18\u5316\u6389\u4e86\u3002\n\n\u90a3\u4e48\u5c31\u8fd8\u5269\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u4e86\u3002\u600e\u4e48\u67d3\u8272\u8ba9\u8fd9\u4e2a\u56fe\u4e2d\u4e0d\u7ba1\u4e0d\u559c\u6b22\u56fe\u5f62\u600e\u4e48\u6446\u90fd\u662f\u6309\u4ee5\u4e0a\u8def\u5f84\u7684\uff1f\n\n\u8fd9\u4e2a\u5417\u6ca1\u4ec0\u4e48\u6280\u5de7\uff0c\u591a\u8bd5\u8bd5\u51e0\u6b21\u5c31\u51fa\u6765\u4e86\u3002\u603b\u4e4b\u5c31\u662f\u8fd9\u6837\u67d3\u8272\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8mr3qrzt.png)\n\n\u7136\u540e\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u56fe\u7684\u5faa\u73af\u89c4\u5f8b\u662f\u6bcf\u4e2a $2 \\times 4$ \u7684\u957f\u65b9\u5f62\u90fd\u662f\u4e00\u6837\u7684\uff0c\u7136\u540e\u5c31\u5bf9\u6bcf\u4e00\u4e2a\u957f\u65b9\u5f62\u5185\u516b\u4e2a\u4e0d\u540c\u683c\u5b50\u8fdb\u884c\u7279\u5224\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e9b\u96f6\u96f6\u788e\u788e\u7684\u95ee\u9898\uff1a\n\n\u7b2c\u4e00\u4e2a\uff0c\u600e\u4e48\u5b58\u6bcf\u4e00\u4e2a\u683c\u5b50\u6240\u5efa\u7684\u8282\u70b9\u3002\n\n\u6309\u7167\u4ee5\u5f80\u7684\u6211\u4eec\u76f4\u63a5\u7528\u5217\u4e58\u4e0a $10$ \u7684\u5e42\u518d\u52a0\u4e0a\u884c\u7136\u540e\u76f4\u63a5\u7528\u6570\u7ec4\u5b58\u80af\u5b9a\u662f\u6728\u5927\u7684\uff0c\u8fd9\u4e2a\u56fe\u5f88\u8d34\u5fc3\u7684\u7ed9\u51fa\u4e86\u957f\u5bbd\u5c0f\u4e8e $10^5$ ,\u6240\u4ee5\u4e0d\u5f97\u4e0d\u5efa\u4e00\u4e2a <long long,int> \u7684 map \u6765\u5f3a\u884c\u8ba9\u6bcf\u4e00\u4e2a\u683c\u5b50\u7684\u5750\u6807\uff08\u6309\u521a\u521a\u7684\u65b9\u6cd5\u628a\u5750\u6807\u5904\u7406\u6210 long long \uff09\u4e0e\u4e00\u4e2a\u8282\u70b9\u7f16\u53f7\u5bf9\u5e94\u3002\n\n\u7b2c\u4e8c\u4e2a\uff0c\u600e\u4e48\u6bd4\u8f83\u5feb\u8fde\u8fb9\u3002\n\n\u9ec4\u70b9\u548c\u7ea2\u70b9\u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u5728\u8bfb\u5165\u65f6\u5c31\u76f4\u63a5\u5411\u6e90\u6c47\u8fde\u8fb9\u7684\uff1b\u84dd\u70b9\u548c\u7eff\u70b9\u5728\u8bfb\u5165\u65f6\u8bb0\u5f55\u4e00\u4e0b\u7136\u540e\u8bfb\u5165\u5b8c\u540e\u518d\u5411\u5468\u56f4\u7684\u70b9\u8fde\u8fb9\u597d\u4e86\u3002\n\ncode\uff1a\uff08\u8bb0\u4f4f\u84dd\u70b9\u8fde\u8fb9\u6709\u4e24\u5957\u4e0d\u540c\u65b9\u6cd5\uff0c\u7eff\u70b9\u8fde\u8fb9\u4e5f\u6709\u4e24\u5957\u4e0d\u540c\u65b9\u6cd5\uff0c\u6211\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u4e00\u4e2a\u665a\u4e0a\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define maxx 2000001\n#define B 1\n#define G 2\n#define R 3\n#define Y 4\n#define S 1999999\n#define T 2000000\nusing namespace std;\nmap<long long,long long>check;\nmap<long long,long long>cost_;\nlong long r,c,n;\nstruct node\n{\n\tlong long col,val,x,y;\n}N[maxx];\nlong long fi[maxx],nx[maxx],to[maxx],val[maxx],depth[maxx],tot=1,num,heroes[maxx],b_g;\nlong long dx[4]={-1,0,0,1};\nlong long dy[4]={0,1,-1,0};\nvoid link(long long a,long long b,long long c)\n{\n\tnx[++tot]=fi[a];\n\tfi[a]=tot;\n\tto[tot]=b;\n\tval[tot]=c;\n}\nbool bfs()\n{\n\tmemset(depth,0,sizeof(depth));\n\tqueue<long long>que;\n\tque.push(S);\n\tdepth[S]=1;\n\twhile(!que.empty())\n\t{\n\t\tlong long x=que.front();\n\t\tque.pop();\t\n\t\tfor(long long i=fi[x];i;i=nx[i])\n\t\t{\n\t\t\tlong long v=to[i];\n\t\t\tif(val[i]&&!depth[v])\n\t\t\t{\n\t\t\t\tdepth[v]=depth[x]+1;\n\t\t\t\tque.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn depth[T];\n}\nlong long dinic(long long x,long long in)\n{\n\tif(x==T)\n\t{\n\t\treturn in;\n\t}\n\tlong long out=0;\n\tfor(long long i=fi[x];i&&in;i=nx[i])\n\t{\n\t\tlong long v=to[i];\n\t\tif(val[i]&&depth[x]+1==depth[v])\n\t\t{\n\t\t\tlong long res=dinic(v,min(val[i],in));\n\t\t\tin-=res;\n\t\t\tout+=res;\n\t\t\tval[i]-=res;\t\n\t\t\tval[i^1]+=res;\n\t\t}\n\t}\n\tif(out==0)\n\t{\n\t\tdepth[x]=0;\n\t}\n\treturn out;\n}\nsigned main()\n{\n\tcin>>c>>r>>n;\n\tfor(long long i=1;i<=n;i++)\n\t{\n\t\tcin>>N[i].x>>N[i].y>>N[i].val;\n\t\tlong long x=N[i].x;\n\t\tlong long y=N[i].y;\n\t\tcheck[x*1000000+y]=++num;\n\t\tswitch(x%4)\n\t\t{\n\t\t\tcase 1:\n\t\t\t\tif(y%2==1)\n\t\t\t\t{\n\t\t\t\t\tN[i].col=B;\n\t\t\t\t\theroes[++b_g]=i;\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tN[i].col=Y;\n\t\t\t\t\tlink(S,num,N[i].val);\n\t\t\t\t\tlink(num,S,0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif(y%2==1)\n\t\t\t\t{\n\t\t\t\t\tN[i].col=G;\n\t\t\t\t\theroes[++b_g]=i;\n\t\t\t\t\tcost_[x*1000000+y]=N[i].val;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tN[i].col=R;\n\t\t\t\t\tlink(num,T,N[i].val);\n\t\t\t\t\tlink(T,num,0);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tif(y%2==1)\n\t\t\t\t{\n\t\t\t\t\tN[i].col=R;\n\t\t\t\t\tlink(num,T,N[i].val);\n\t\t\t\t\tlink(T,num,0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tN[i].col=G;\n\t\t\t\t\theroes[++b_g]=i;\n\t\t\t\t\tcost_[x*1000000+y]=N[i].val;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tif(y%2==1)\n\t\t\t\t{\n\t\t\t\t\tN[i].col=Y;\n\t\t\t\t\tlink(S,num,N[i].val);\n\t\t\t\t\tlink(num,S,0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tN[i].col=B;\n\t\t\t\t\theroes[++b_g]=i;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tfor(long long i=1;i<=b_g;i++)\n\t{\n\t\tlong long xx=N[heroes[i]].x;\n\t\tlong long yy=N[heroes[i]].y;\n\t\tif(N[heroes[i]].col==B&&xx%4==0)\n\t\t{\n\t\t\tif(xx+dx[0]>=1&&xx+dx[0]<=c&&yy+dy[0]>=1&&yy+dy[0]<=r)\n\t\t\t{\n\t\t\t\tlong long s=check[(xx+dx[0])*1000000+yy+dy[0]];\n\t\t\t\tif(s)\n\t\t\t\t{\n\t\t\t\t\tlong long a=check[xx*1000000+yy];\n\t\t\t\t\tlink(a,s,min(N[heroes[i]].val,cost_[(xx+dx[0])*1000000+yy+dy[0]]));\n\t\t\t\t\tlink(s,a,0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(long long i=1;i<4;i++)\n\t\t\t{\n\t\t\t\tif(xx+dx[i]>=1&&xx+dx[i]<=c&&yy+dy[i]>=1&&yy+dy[i]<=r&&check[(xx+dx[i])*1000000+yy+dy[i]])\n\t\t\t\t{\n\t\t\t\t\tlong long a=check[(xx+dx[i])*1000000+yy+dy[i]],b=check[xx*1000000+yy];\n\t\t\t\t\tlink(a,b,0x7ffffff);\n\t\t\t\t\tlink(b,a,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(N[heroes[i]].col==B&&xx%4==1)\n\t\t{\n\t\t\tif(xx+dx[3]>=1&&xx+dx[3]<=c&&yy+dy[3]>=1&&yy+dy[3]<=r)\n\t\t\t{\n\t\t\t\tlong long s=check[(xx+dx[3])*1000000+yy+dy[3]];\n\t\t\t\tif(s)\n\t\t\t\t{\n\t\t\t\t\tlong long a=check[xx*1000000+yy];\n\t\t\t\t\tlink(a,s,min(N[heroes[i]].val,cost_[(xx+dx[3])*1000000+yy+dy[3]]));\n\t\t\t\t\tlink(s,a,0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(long long i=0;i<3;i++)\n\t\t\t{\n\t\t\t\tif(xx+dx[i]>=1&&xx+dx[i]<=c&&yy+dy[i]>=1&&yy+dy[i]<=r&&check[(xx+dx[i])*1000000+yy+dy[i]])\n\t\t\t\t{\n\t\t\t\t\tlong long a=check[(xx+dx[i])*1000000+yy+dy[i]],b=check[xx*1000000+yy];\n\t\t\t\t\tlink(a,b,0x7ffffff);\n\t\t\t\t\tlink(b,a,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(N[heroes[i]].col==G&&xx%4==2)\n\t\t{\n\t\t\tfor(long long i=1;i<4;i++)\n\t\t\t{\n\t\t\t\tif(xx+dx[i]>=1&&xx+dx[i]<=c&&yy+dy[i]>=1&&yy+dy[i]<=r&&check[(xx+dx[i])*1000000+yy+dy[i]])\n\t\t\t\t{\n\t\t\t\t\tlong long a=check[xx*1000000+yy],b=check[(xx+dx[i])*1000000+yy+dy[i]];\n\t\t\t\t\tlink(a,b,0x7ffffff);\n\t\t\t\t\tlink(b,a,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(long long i=0;i<3;i++)\n\t\t\t{\n\t\t\t\tif(xx+dx[i]>=1&&xx+dx[i]<=c&&yy+dy[i]>=1&&yy+dy[i]<=r&&check[(xx+dx[i])*1000000+yy+dy[i]])\n\t\t\t\t{\n\t\t\t\t\tlong long a=check[xx*1000000+yy],b=check[(xx+dx[i])*1000000+yy+dy[i]];\n\t\t\t\t\tlink(a,b,0x7ffffff);\n\t\t\t\t\tlink(b,a,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlong long ans=0;\n\twhile(bfs())\n\t{\n\t\tans+=dinic(S,0x7ffffff);\n\t}\n\tcout<<ans;\n}\n```\n\n\n\u5bf9\u4e86\u6570\u636e\u6709\u70b9\u6c34\u4f60\u8f93\u51fa $0$ \u90fd\u80fd\u8fc7\u6389 $5$ \u4e2a\u70b9",
        "postTime": 1635466930,
        "uid": 167279,
        "name": "Danno0v0",
        "ccfLevel": 7,
        "title": "P3756\u9898\u89e3"
    },
    {
        "content": "~~\u8fd9\u9898\u6211\u4eec\u6559\u7ec3\u51fa\u7684\u3002~~\n\nSto nodgd Orz\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u770b\u5230\u7f51\u683c\u9898\uff0c\u60f3\u5230\u7f51\u7edc\u6d41\u3002\u770b\u5230\u8981\u70b8\u70b9\uff0c\u8003\u8651\u67d3\u8272\uff0c\u8fd9\u9053\u9898\u7684\u56db\u4e2a\u5f62\u72b6\u90fd\u662f\u56db\u4e2a\u683c\u5b50\uff0c\u8003\u8651\u67d3\u6210\u56db\u8272\uff08\u56fe\u7247\u6765\u81ea[ shadowice1984\n \u7684\u9898\u89e3](https://www.luogu.com.cn/blog/ShadowassIIXVIIIIV/solution-p3756)\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2vws6rgv.png)\n\n\u90a3\u4e48\u6211\u4eec\u518d\u89c2\u5bdf\u7b26\u5408\u6761\u4ef6\u7684\u8ba8\u538c\u56fe\u5f62\uff0c\u4f1a\u53d1\u73b0**\u6709\u4e14\u4ec5\u6709**\u8fd9\u56db\u79cd\u7531\u56db\u4e2a\u5757\u7ec4\u6210\u56fe\u5f62\u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u987a\u5e8f\u662f\u9ec4-\u7ea2-\u9ed1\u7ebf-\u84dd-\u7eff\n\n\u90a3\u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\u600e\u6837\u624d\u80fd\u7834\u574f\u4e00\u4e2a\u8ba8\u538c\u56fe\u5f62\u5462\uff1f\u4e24\u79cd\u65b9\u5f0f\uff1a\n\n- \u7834\u574f\u6389\u4e00\u4e2a\u7ea2/\u84dd\u65b9\u5757\n- \u7834\u574f\u6389\u6240\u6709**\u548c\u7ea2\u8272\u6216\u8005\u84dd\u8272\u76f8\u90bb**\u7684\u9ec4\u5757\u6216\u8005\u7eff\u5757\n\n\u5230\u8fd9\u91cc\u5df2\u7ecf\u6709\u4e00\u4e9b\u6700\u5c0f\u5272\u7684\u5f71\u5b50\u4e86\uff0c\u6211\u4eec\u6309\u989c\u8272\u53ef\u4ee5\u5efa\u56fe\u5efa\u6210 $7$ \u5c42\uff0c\u5206\u522b\u662f\u6e90\u70b9\uff0c\u9ec4\u8272\uff0c\u7ea2\u8272\uff0c\u9ed1\u7ebf\uff0c\u84dd\u8272\uff0c\u7eff\u8272\uff0c\u6c47\u70b9\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u53bb\u8fde\u8fb9\uff0c\u663e\u7136\u201c\u6467\u6bc1\u6389\u6240\u6709\u8ba8\u538c\u56fe\u5f62\u201d\u4e5f\u5c31\u662f\u201c\u4f7f\u5f97\u6e90\u70b9\u548c\u6c47\u70b9\u4e0d\u8fde\u901a\u201d:\n- \u6211\u4eec\u4ece\u6e90\u70b9\u5411\u9ec4\u8272\u5757\u8fde\u5bb9\u91cf\u5c31\u662f\u8fd9\u4e2a\u9ec4\u8272\u5757\u6d88\u9664\u4ee3\u4ef7\u7684\u8fb9\u3002\n- \u9ec4\u8272\u5757\u5411\u7ea2\u8272\u5757\u8fde\u5bb9\u91cf\u4e3a $\\inf$ \u7684\u8fb9\u3002\n- \u7ea2\u8272\u5757\u5411\u9ed1\u8272\u7ebf\u8fde\u5bb9\u91cf\u5c31\u662f\u8fd9\u4e2a\u7ea2\u8272\u5757\u6d88\u9664\u4ee3\u4ef7\u7684\u8fb9\u3002\n- \u9ed1\u8272\u7ebf\u5411\u84dd\u8272\u70b9\u8fde\u5bb9\u91cf\u5c31\u662f\u8fd9\u4e2a\u84dd\u8272\u5757\u6d88\u9664\u4ee3\u4ef7\u7684\u8fb9\u3002\n\n\u4e4b\u540e\u51e0\u5c42\u540c\u7406\u3002\n\n\u4f46\u662f\u6ce8\u610f\u4e86\uff0c\u6211\u5728\u8fd9\u91cc\u8bf4\u9ed1\u8272\u7ebf\u53ea\u662f\u5e2e\u52a9\u5927\u5bb6\u601d\u8003\uff0c\u4e8b\u5b9e\u4e0a\u5f88\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u4ece\u7ea2\u5757\u5411\u84dd\u5757\u8fde\u4e24\u8005\u5bb9\u91cf\u6700\u5c0f\u503c\u662f\u7b49\u4ef7\u4e8e\u7ea2-\u9ed1-\u84dd\u7684\uff0c\u4e8e\u662f\u9ed1\u8272\u5c31\u53bb\u6b7b\u4e86\u3002\n\n\u7136\u540e\u8dd1\u6700\u5c0f\u5272\uff0c\u57fa\u4e8e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u8fd9\u5c31\u662f\u7b54\u6848\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u6709\u70b9\u96be\u5199\uff0c\u6211\u4e5f\u81ea\u8ba4\u4e3a\u5199\u7684\u6bd4\u8f83\u7b80\u5355\uff0c\u6240\u4ee5\u653e\u4e00\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 15000000000000ll \nusing namespace std;\n#define int long long \nconst int maxn=1e7;\nstruct Edge{\n    int v,w,nxt;\n}e[maxn];\nmap<int,map<int,int> >id;\nmap<int,map<int,int> >cst;\nint h[maxn],tot=1,dis[maxn],N,cnt[maxn],u[maxn],v[maxn],b,f[300][300],sc=0,c,r;\nint n=0,tt=0,m=0; \nvoid add(int u,int v,int w){  \n\ttot++;\n    e[tot].v=v;\n    e[tot].w=w;\n    e[tot].nxt=h[u];\n    h[u]=tot;\n} \nvoid ae(int u,int v,int w){\n//\tcout<<u<<\" \"<<v<<\" \"<<w<<endl;\n\tadd(u,v,w);\n\tadd(v,u,0);\n}\nqueue<int>q;\nint wc(int x,int y){//1 R 2 B 3 Y 4 G\n\tswap(x,y);\n\ty=r-y;\n\tif(x==1){\n\t\treturn y%2==1?3:1;\n\t}\n\tx--;\n\tif(((x-1)/2+1)%2){\n\t\treturn x%2?(y%2?4:2):(y%2?2:4);\n\t}\n\telse{\n\t\treturn x%2?(y%2?1:3):(y%2?3:1);\n\t}\n}\nvoid BFS(int s,int t){\n\tfor(int i=1;i<=t;i++){\n\t\tdis[i]=0;\n\t\tcnt[i]=0;\n\t}\n\tdis[t]=1;\n\tcnt[1]++;\n    q.push(t);\n    while(!q.empty()) {\n        int u=q.front();\n        q.pop();\n        for (int i=h[u];i;i=e[i].nxt) {\n            int v=e[i].v;\n\t\t\tif(!dis[v]) {\n                dis[v]=dis[u]+1;\n                cnt[dis[v]]++;\n                q.push(v);\n            }\n        }\n    }\n}\n\nint dfs(int x,int s,int t,int flow){\n    if(x==t||!flow) \n\treturn flow;\n    int flw=0;\n    for(int i=h[x];i;i=e[i].nxt) {\n        int v=e[i].v;\n\t\tif(dis[x]==dis[v]+1){\n            int tmp=dfs(v,s,t,min(flow,e[i].w));\n            flw+=tmp;\n\t\t\tflow-=tmp;\n\t\t\te[i].w-=tmp;\n\t\t\te[i^1].w+=tmp;\n            if(!flow) \n\t\t\treturn flw;\n        }\n    }\n    cnt[dis[x]]--;\n    if(!cnt[dis[x]]){\n    \tdis[s]=N; \n\t}\n\tdis[x]++;\n\tcnt[dis[x]]++;\n    return flw; \n}\nint ISAP(int s,int t){\n\tBFS(s,t);\n\tint flw=dfs(s,s,t,inf);\n\twhile(dis[s]<=N){\n\t \tflw+=dfs(s,s,t,inf);\n\t}\n\treturn flw;\n}\nstruct node{\n\tint x,y,cost;\n}bk[maxn];\nbool cmp(node a,node b){\n\treturn a.x!=b.x?a.x<b.x:a.y<b.y;\n}\nconst int dx[]={-1,1,0,0};\nconst int dy[]={0,0,-1,1}; \nsigned main(){ \n\tios::sync_with_stdio(0);\n\tcin>>c>>r>>n;\n\tN=n+2;\n\tint s=n+1;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>bk[i].x>>bk[i].y>>bk[i].cost;\n\t\tswap(bk[i].x,bk[i].y);\n\t\tbk[i].x=r-bk[i].x+1;\n//\t\tbk[i].y=c-bk[i].y+1;\n\t}\n\tsort(bk+1,bk+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n//\t\tcout<<\"id\"<<bk[i].x<<\" \"<<bk[i].y<<\" \"<<i<<endl;\n\t\tid[bk[i].x][bk[i].y]=i;\n\t\tcst[bk[i].x][bk[i].y]=bk[i].cost;\n\t}\n//\tcout<<\"_\"<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tint x=bk[i].x,y=bk[i].y;\n\t\tif(wc(x,y)==4)\n\t\tae(s,id[x][y],cst[x][y]);\n\t\tif(wc(x,y)==3)\n\t\tae(id[x][y],N,cst[x][y]);\n\t\tfor(int t=0;t<4;t++){\n\t\t\tint tx=x+dx[t],ty=y+dy[t];\n\t\t\tif(id[tx][ty]){\n\t\t\t\tif(wc(x,y)==2&&wc(tx,ty)==1){\n\t\t\t\t\tae(id[x][y],id[tx][ty],min(cst[x][y],cst[tx][ty]));\n\t\t\t\t}\n\t\t\t\tif(wc(x,y)==3){\n\t\t\t\t\tif(wc(tx,ty)==1){\n//\t\t\t\t\t\tcout<<tx<<\" \"<<ty<<\" color1\"<<endl;\n\t\t\t\t\t\tae(id[tx][ty],id[x][y],cst[x][y]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(wc(x,y)==4){\n\t\t\t\t\tif(wc(tx,ty)==2){\n\t\t\t\t\t\tae(id[x][y],id[tx][ty],inf);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ISAP(s,N)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1627028811,
        "uid": 282751,
        "name": "cryozwq",
        "ccfLevel": 7,
        "title": "P3756 [CQOI2017]\u8001C\u7684\u65b9\u5757"
    },
    {
        "content": "\u8fd9\u662f [nodgd](https://www.luogu.com.cn/user/552) \uff08~~\u6211\u4eec\u6559\u7ec3~~\uff09\u7684\u9898\uff0c\u5fc5\u987b\u597d\u8bc4  \n\u524d\u7f6e\u829d\u58eb\uff1a\u7f51\u7edc\u6d41\uff08\u67d3\u8272\u6cd5\uff09  \n\u8fd9\u79cd\u9898\uff0c\u778e\u5b50\u624d\u4f1a\u770b\u51fa\u6765\u662f\u7f51\u7edc\u6d41\u5427\uff0c\u8fd9\u4e48\u6bd2\u7624\u3002\u5f53\u7136\u8fd9\u9898\u4e5f\u6210\u4e3a\u4e86\u6700\u5c0f\u5272\u7684\u7ecf\u5178\u4f8b\u9898\u3002  \n\u597d\u50cf\u4e5f\u5feb\u9000\u5f79\u4e86\uff0c\u5199\u7bc7\u9898\u89e3\uff0c\u7559\u4e2a\u540d\u5427\u3002  \n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u67d3\u8272\u6cd5\u54c8\uff0c\u8fd9\u4e2a\u67d3\u8272\u6cd5\u4e0d\u662f\u4e8c\u5206\u56fe\uff01\uff01\uff01\u5c31\u662f\u5355\u7eaf\u7684\u89e3\u51b3\u7f51\u683c\u7c7b\u578b\u9898\u76ee\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u9ed1\u767d\u67d3\u8272\u53ef\u4ee5\u89e3\u51b3\u76f8\u90bb\u5757\u7684\u95ee\u9898\u6bd4\u5982 [ [\u56fd\u5bb6\u96c6\u8bad\u961f]\u5708\u5730\u8ba1\u5212](https://www.luogu.com.cn/problem/P1935)  \u8fd9\u662f\u4e00\u9053\u975e\u5e38\u5178\u578b\u7684\u6700\u5c0f\u5272\u7528\u9ed1\u767d\u67d3\u8272\u89e3\u51b3\uff0c\u5176\u6b21\u5c31\u662f\u672c\u9898\u4e86\u3002  \n\u672c\u9898\u6ce8\u91cd\u5982\u4f55\u67d3\u8272\u548c\u67d3\u8272\u600e\u4e48\u5904\u7406\uff0c\u8bf7\u542c\u6211\u7ec6\u7ec6\u9053\u6765~  \n\u9996\u5148\u89c2\u5bdf \u5c0fC \u8ba8\u538c\u7684\u5f62\u72b6\uff0c~~\u662f\u4e0d\u662f\u5f88\u50cf\u4fc4\u7f57\u65af\u65b9\u5757\uff0c\u4f46\u5c11\u4e86\u4e00\u4e2a\u5c71\u5b57\u5f62~~\uff0c\u597d\u5f88\u5bb9\u6613\u53d1\u73b0\u4ed6\u4eec\u90fd\u662f\u53c8\u56db\u4e2a\u5c0f\u65b9\u5757\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u67d3\u56db\u79cd\u989c\u8272\uff0c\u5982\u4e0b\u56fe  \n![](https://cdn.luogu.com.cn/upload/image_hosting/p9urc718.png)   \n\u53ef\u4ee5\u53d1\u73b0\u5f3a\u8c03\u51fa\u6765\u7684\u8ba8\u538c\u5f62\u72b6\u90fd\u6709\u4e00\u4e2a\u89c4\u5f8b\u5c31\u662f\u90fd\u7531\u56db\u79cd\u4e0d\u540c\u7684\u989c\u8272\u6784\u6210\u4e14\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a \u9ec4\u8272 $\\to$ \u9ed1\u8272 $\\to$ \u84dd\u8272 $\\to$ \u7ea2\u8272 $\\to$ \u7eff\u8272  \n\u8fd9\u6837\u67d3\u8272\u5c31\u67d3\u5b8c\u4e86\u3002    \n\u82e5\u4e00\u4e2a\u65b9\u5757\u88ab\u586b\u4e0a\u4e86\u65b9\u5757\uff0c\u7b80\u79f0\u201c\u88ab\u586b\u201d\uff0c\u90a3\u4e48\u8ba8\u538c\u7684\u5f62\u72b6\u4e00\u5b9a\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u6761:   \n1. \u84dd\u7ebf\u4e24\u8fb9\u4e00\u5b9a\u662f\u88ab\u586b\u7684\u9ed1\u8272\u548c\u7ea2\u8272\t  \n2. \u9ed1\u8272\u5468\u56f4\u8981\u6709\u88ab\u586b\u7684\u9ec4\u8272 \n3. \u7ea2\u8272\u5468\u56f4\u7531\u88ab\u586b\u7684\u7eff\u8272  \n\n\u628a\u5c40\u90e8\u62c6\u5f00\u770b\u5c31\u4e0b\u9762\u8fd9\u6837  \n![](https://cdn.luogu.com.cn/upload/image_hosting/zsbi0v58.png)  \n\u7136\u540e\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u8981pohuai\u8fd9\u79cd\u8ba8\u538c\u7684\u56fe\u5f62\u6709\u56db\u79cd\u65b9\u6cd5\uff0c\u5206\u522b\u662f\uff1a  \n1. \u5220\u9664\u88ab\u586b\u7684\u9ed1\u8272  \n2. \u5220\u9664\u88ab\u586b\u7684\u7ea2\u8272\n3. \u5220\u9664\u9ed1\u8272\u5468\u56f4\u7684\u9ec4\u8272  \n4. \u5220\u9664\u7ea2\u8272\u5468\u56f4\u7684\u7eff\u8272  \n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38\u6784\u56fe\u8dd1\u7f51\u7edc\u6d41\u4e86\uff0c\u8fd9\u9898\u7684\u6784\u56fe\u5c31\u76f8\u5bf9\u7b80\u5355\uff0c\u6211\u5c31\u76f4\u63a5\u653e\u56fe\u4e86\u5965\uff0c\u5c31\u7c97\u7565\u7684\u8bf4\u4e86\u54c8\uff0c\u76f8\u4fe1\u80fd\u505a\u5230\u8fd9\u9898\u7684\u4eba\uff0c\u5efa\u56fe\u8fd8\u662f\u6ca1\u5565\u5927\u95ee\u9898\u7684  \n\u56fe\u662f\u8fd9\u6837\u5efa\u7684\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/78ve6ado.png)  \n\u539f\u56e0\u662f\u6d88\u9664\u4e00\u5757\u9ec4\u8272\u9700\u8981 $W_i$ \u6240\u4ee5\u5bb9\u91cf\u4e3a $W_i$ \uff0c\u7eff\u8272\u540c\u7406\uff0c\u56e0\u4e3a\u7ea2\u8272\u548c\u9ed1\u8272\u53ea\u9700\u8981\u6d88\u9664\u4e00\u5757\u5c31\u53ef\u4ee5\u4e86\uff0c\u53d6\u6700\u5c0f\u5c31\u597d\u4e86\uff0c\u5176\u4ed6\u7684\u76f4\u63a5\u8fde\u65e0\u7a77\u5927\u5c31\u597d\u5566\uff0c\u518d\u8dd1\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\u4e86  \n\u4ee3\u7801\u5982\u4e0b\uff1a  \n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<map>\n#define ll long long\nusing namespace std;\nconst int N=300010,M=80000010,R=100010;\nstruct MS{\n\tint from,to,next,z;\n}e[M];\nint elast[N],cur[N],k=1;\nvoid print(int x,int y,int z){cout<<x<<\"->\"<<y<<\"=\"<<z<<endl;}\nvoid add(int x,int y,int z)\n{\n\t//print(x,y,z);\n\te[++k].to=y,e[k].from=x,e[k].z=z,e[k].next=elast[x],elast[x]=k;\n\te[++k].to=x,e[k].from=y,e[k].z=0,e[k].next=elast[y],elast[y]=k;\n}\nint c,r,n;\nint ans;\nint st,en;\nint dis[N],cnt[N];\nvoid bfs(int en)\n{\n\tqueue<int>q;\n\tq.push(en);\n\tfor(int i=0;i<=N-10;i++)cur[i]=elast[i],dis[i]=-1,cnt[i]=0;\n\tdis[en]=0;\n\tcnt[0]=1;\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();q.pop();\n\t\tfor(int i=elast[now];i;i=e[i].next)\n\t\t{\n\t\t\tint to=e[i].to;\n\t\t\tif(dis[to]==-1)\n\t\t\t{\n\t\t\t\tdis[to]=dis[now]+1;\n\t\t\t\tcnt[dis[to]]++;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n}\nint dfs(int x,int flow)\n{\n\tif(x==en)return flow;\n\tint d=0;\n\tfor(int i=cur[x];i;i=e[i].next)\n\t{\n\t\tcur[x]=i;\n\t\tint to=e[i].to;\n\t\tif(e[i].z>0&&dis[x]==dis[to]+1)\n\t\t{\n\t\t\tint tmp=dfs(to,min(e[i].z,flow-d));\n\t\t\te[i].z-=tmp;\n\t\t\te[i^1].z+=tmp;\n\t\t\td+=tmp;\n\t\t\tif(d==flow||dis[st]>=en+1)return d;\n\t\t}\n\t}\n\tif(dis[st]>=en+1)return d;\n\tcnt[dis[x]]--;\n\tif(cnt[dis[x]]==0)dis[st]=en+1;\n\tdis[x]++;\n\tcur[x]=elast[x];\n\tcnt[dis[x]]++;\n\treturn d;\n}\nstruct MSQWQ{\n\tint x,y,z;\n}a[R];\nbool yellow(int x,int y)\n{\n\tint AFO=((x+1)/2)&1;\n\tif(AFO)\n\t{\n\t\tif(y&1)return false;\n\t}\n\telse if(!(y&1))return false;\n\tAFO=(x/2)&1;\n\tif(!AFO)return true;\n\treturn false;\n}\nbool green(int x,int y)\n{\n\tint AFO=((x+1)/2)&1;\n\tif(AFO)\n\t{\n\t\tif(y&1)return false;\n\t}\n\telse if(!(y&1))return false;\n\tAFO=(x/2)&1;\n\tif(AFO)return true;\n\treturn false;\n}\nbool bulu(int x,int y)\n{\n\tint AFO=((x+1)/2)&1;\n\tif(AFO)\n\t{\n\t\tif(y&1)return true;\n\t}\n\telse if(!(y&1))return true;\n\treturn false;\n}\nmap<pair<int,int>,int>mp;\nint dx[3][2]={{0,1},{0,-1},{-1,0}},dy[3][2]={{0,1},{0,-1},{1,0}};\nvoid in(int x,int op)\n{\n\tif(op==1)\n\t{\n\t\tfor(int i=0;i<3;i++)\n\t\t{\n\t\t\tint xx=a[x].x+dx[i][0],yy=a[x].y+dx[i][1];\n\t\t\tint t=mp[make_pair(xx,yy)];\n\t\t\tif(t)add(t,x,1e9);\n\t\t}\t\t\n\t}\n\tif(op==2)\n\t{\n\t\tfor(int i=0;i<3;i++)\n\t\t{\n\t\t\tint xx=a[x].x+dy[i][0],yy=a[x].y+dy[i][1];\n\t\t\tint t=mp[make_pair(xx,yy)];\n\t\t\tif(t)add(t,x,1e9);\n\t\t}\t\n\t}\n}\nvoid out(int x,int op)\n{\n\tif(op==1)\n\t{\n\t\tfor(int i=0;i<3;i++)\n\t\t{\n\t\t\tint xx=a[x].x+dx[i][0],yy=a[x].y+dx[i][1];\n\t\t\tint t=mp[make_pair(xx,yy)];\n\t\t\tif(t)add(x,t,1e9);\n\t\t}\t\n\t}\n\tif(op==2)\n\t{\n\t\tfor(int i=0;i<3;i++)\n\t\t{\n\t\t\tint xx=a[x].x+dy[i][0],yy=a[x].y+dy[i][1];\n\t\t\tint t=mp[make_pair(xx,yy)];\n\t\t\tif(t)add(x,t,1e9);\n\t\t}\t\t\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&c,&r,&n);\n\tst=0,en=n+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[i].x=x,a[i].y=y,a[i].z=z;\n\t\t\n\t\tif(yellow(x,y))add(st,i,z);\n\t\telse if(green(x,y))add(i,en,z);\n\t\t\n\t\tmp[make_pair(x,y)]=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i].x&1&&bulu(a[i].x,a[i].y))\n\t\t{\n\t\t\tint to=mp[make_pair(a[i].x+1,a[i].y)];\n\t\t\tif(to)\n\t\t\t{\n\t\t\t\tif(a[i].y&1)\n\t\t\t\t{\n\t\t\t\t\tadd(i,to,min(a[i].z,a[to].z));\n\t\t\t\t\tin(i,1),out(to,2);\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tadd(to,i,min(a[i].z,a[to].z));\n\t\t\t\t\tin(to,2),out(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbfs(en);\n\twhile(dis[st]<n+2)ans+=dfs(st,1e9);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1627030583,
        "uid": 247269,
        "name": "MSqwq",
        "ccfLevel": 0,
        "title": "P3756 [CQOI2017]\u8001C\u7684\u65b9\u5757"
    },
    {
        "content": "\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u66f4\u597d\u60f3\uff0c\u4f46\u662f\u70b9\u4f1a\u591a\u4e00\u4e9b\u7684\u505a\u6cd5\n\n\u9996\u5148\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230\u67d3\u8272\n\n## \u67d3\u8272\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gz9iit2r.png)\n\n\n\n\u6211\u4eec\u6309\u7167\u4ee5\u4e0a\u65b9\u6cd5\u67d3\u8272\uff0c\u7136\u540e\u53d1\u73b0\u4ece $1$ \u51fa\u53d1\uff0c\u6cbf\u7740 $1$ -> $2$ -> $3$ -> $4$ \u7684\u8def\u7ebf\uff0c\u53ef\u4ee5\u628a\u6211\u4eec\u6240\u6709\u9700\u8981\u5220\u9664\u60c5\u51b5\u90fd\u6db5\u76d6\u5b8c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u5c31\u53ea\u9700\u8981\u5efa\u56fe\u4e86\n\n## \u5efa\u56fe\n\n\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u6cbf\u7740 $1$ -> $2$ -> $3$ -> $4$ \u7684\u8def\u7ebf\u8d70\u5b8c\u6240\u6709\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5efa\u5206\u5c42\u56fe\u4e86\uff1a\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zidde6kq.png)\n\n\u90a3\u4e48\u56fe\u4e0e\u56fe\u4e4b\u95f4\u600e\u4e48\u8fde\u8fb9\u5462\uff1f\u6211\u4eec\u5c31\u628a\u4e00\u4e2a\u70b9\u76f8\u90bb\u7684\u70b9\uff0c\u4e14\u67d3\u8272\u989c\u8272\u6bd4\u5b83\u5927 1 \u7684\u70b9\u548c\u5b83\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\uff0c\u8fb9\u6743\u4e3a\u5220\u53bb\u5f53\u524d\u76f8\u90bb\u70b9\u7684\u4ee3\u4ef7\u3002\n\n\u4f46\u662f\u6211\u4eec\u76f4\u63a5\u8fde\u8fb9\u4f1a\u51fa\u73b0\u95ee\u9898\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zyvu4byb.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5c31\u50cf\u8fd9\u5f20\u56fe\u4e00\u6837\uff0c\u5f53\u6211\u4eec\u5220\u53bb\u4e86 $1$ \u548c $3$ \u4e4b\u95f4\u7684\u8fb9\uff0c\u5c31\u76f8\u5f53\u4e8e\u5220\u53bb\u7684\u8282\u70b9 $3$ \uff0c\u4f46\u6211\u4eec\u7684 $2$ \u548c $3$ \u8fd8\u662f\u8054\u901a\u7684\uff0c\u6240\u4ee5\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u7684\u70b9\u88ab\u5220\u4e24\u6b21\u7684\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u62c6\u70b9\uff0c\u628a\u70b9\u7684\u70b9\u6743\u8f6c\u6362\u4e3a\u8be5\u70b9\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\uff0c\u628a\u4e24\u5c42\u4e4b\u95f4\u7684\u8fb9\u6743\u8bbe\u4e3a\u6781\u5927\u503c\u5c31\u597d\u4e86\u3002\n\n\u5dee\u4e0d\u591a\u56fe\u5c31\u957f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/enx4y747.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n## \u4ee3\u7801\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int INF=0x3f3f3f3f;\n\nstruct zz{\n\tint u,w,id;\n};\nvector<zz> v[1000005];\nstruct Dinic{\n\tint dist[1000005],be[1000005];\n\tint s,t;\n\tvoid Add(int x,int y,int z){\n//\t\tprintf(\"QwQ:%d %d %d\\n\",x,y,z);\n\t\tint idx=v[x].size(),idy=v[y].size();\n\t\tv[x].push_back((zz){y,z,idy});\n\t\tv[y].push_back((zz){x,0,idx});\n\t}\n\tbool BFS(){\n\t\tbool f=0;memset(dist,-1,sizeof dist);\n\t\tqueue<int> q;q.push(s);\n\t\tdist[s]=be[s]=0;\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tint siz=v[x].size();\n\t\t\tfor(int i=0;i<siz;i++){\n\t\t\t\tint y=v[x][i].u,w=v[x][i].w;\n\t\t\t\tif(!w||dist[y]!=-1) continue;\n\t\t\t\tq.push(y),be[y]=0,dist[y]=dist[x]+1;\n\t\t\t\tif(y==t) f=1;\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\tint DFS(int x,int sum){\n\t\tif(x==t||!sum) return sum;\n\t\tint siz=v[x].size(),ans=0;\n\t\tfor(int i=0;i<siz;i++){\n\t\t\tint y=v[x][i].u,w=v[x][i].w,id=v[x][i].id;be[x]=i;\n\t\t\tif(!w||dist[x]!=dist[y]-1) continue;\n\t\t\tint now=DFS(y,min(sum-ans,w));\n\t\t\tif(!now) dist[y]=0;\n\t\t\tv[x][i].w-=now,v[y][id].w+=now,ans+=now;\n\t\t}\n\t\treturn ans;\n\t}\n\tint dinic(){\n\t\tint ans=0,now=0;\n\t\twhile(BFS()) while(now=DFS(s,INF)) ans+=now;\n\t\treturn ans;\n\t}\n}T;\n\nint n,m,k,tot=0;\n\nint qq[4]={3,4,1,2};\nint qqq[4]={4,3,2,1};\nint fx[5]={0,1,-1,0,0};\nint fy[5]={0,0,0,1,-1};\n\nbool Check(int x,int y){\n\tif(x<=0||x>n) return 0;\n\tif(y<=0||y>m) return 0;\n\treturn 1;\n}\n\nstruct ss{\n\tint x,y,col,val;\n}a[1000005];\n\n#define mp make_pair\n#define pii pair<int,int> \nmap<pii ,int > f;\n\nsigned main(){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL), std::cout.tie(NULL);\n\tcin>>n>>m>>k;T.s=0,T.t=k*2+1;\n\tfor(int i=1;i<=k;i++){\n\t\tcin>>a[i].x>>a[i].y>>a[i].val;\n\t\tswap(a[i].x,a[i].y);\n\t\tif(a[i].x&1) a[i].col=qqq[a[i].y%4];\n\t\telse a[i].col=qq[a[i].y%4];\t\n\t\tf[mp(a[i].x,a[i].y)]=i;\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tint x=a[i].x,y=a[i].y;\n\t\tT.Add(i,i+k,a[i].val);\n\t\tfor(int kk=1;kk<=4;kk++){\n\t\t\tint qx=x+fx[kk],qy=y+fy[kk];\n\t\t\tif(!Check(qx,qy)||f.find(mp(qx,qy))==f.end()) continue;\n\t\t\tint id=f[mp(qx,qy)];\n\t\t\tif(a[id].col!=a[i].col+1) continue;\n\t\t\tT.Add(i+k,id,INF);\n\t\t}\n\t\tif(a[i].col==1) T.Add(T.s,i,INF);\n\t\tif(a[i].col==4) T.Add(i+k,T.t,INF);\n\t}\n\tcout<<T.dinic();\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1639133811,
        "uid": 225883,
        "name": "MiRaciss",
        "ccfLevel": 7,
        "title": "[CQOI2017]\u8001C\u7684\u65b9\u5757 \u9898\u89e3"
    },
    {
        "content": "\u771f\u662f\u795e\u5947\u7684\u5efa\u56fe\u65b9\u5f0f\uff0c\u8868\u793a\u771f\u7684\u60f3\u4e0d\u5230\u3002  \n\n\u9996\u5148\u8fd9\u9053\u9898\u662f\u7f51\u7edc\u6d41\u786e\u5b9e\u4e0d\u96be\u60f3\uff0c\u4e00\u770b\u5230\u7f51\u683c\u56fe\u4e0d\u4f1a\u6709\u4eba\u4e0d\u60f3\u7f51\u7edc\u6d41\u5427\uff0c\u4e0d\u8fc7\u4f60\u53ef\u80fd\u4f1a\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u800c\u653e\u5f03\uff0c\u4f46\u662f\u6211\u4eec\u8981\u76f8\u4fe1 dinic \u7684\u7384\u5b66\u590d\u6742\u5ea6\uff01\uff01\uff01 \n\nu1s1\uff0c\u770b\u5230\u7f51\u683c\u56fe\u7684\u7b2c\u4e00\u53cd\u6620\u5c31\u662f\u9ed1\u767d\u67d3\u8272\u5427\uff0c\u7136\u540e\u53d1\u73b0\u5b8c\u5168\u4e0d\u53ef\u505a\uff0c\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u8fd9\u4e48\u5f03\u4e86\u3002  \n\n\u4f46\u662f\u6211\u4eec\u5982\u679c\u5f00\u62d3\u601d\u8def\u7684\u8bdd\uff0c\u4f1a\u53d1\u73b0\u8fd9\u9053\u9898\u7684\u4e0d\u5408\u6cd5\u72b6\u6001\u90fd\u662f4\u4e2a\u683c\u5b50\u8fde\u8d77\u6765\u7684\uff0c\u800c\u4e14\u7279\u6b8a\u8fb9\u7684\u5de6\u8fb9\u4e00\u5b9a\u662f\u6709\u683c\u5b50\u7684\u3002  \n\n\u8fd9\u8ba9\u6211\u4eec\u60f3\u5230\u75284\u79cd\u989c\u8272\u53bb\u7ed9\u8fd9\u4e2a\u56fe\u8fdb\u884c\u67d3\u8272\u3002   \n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u5f20\u5ad6\u6765\u7684\u56fe\uff1a (\u770b\u4e0d\u4e86\u7684\u8bdd\u53ef\u4ee5\u70b9\u94fe\u63a5\u8fdb\u53bb)  \n\n![](https://images.cnblogs.com/cnblogs_com/zhoushuyu/1192665/o_a.png)  \n\n\u7136\u540e\u4f60\u5c31\u4f1a\u53d1\u73b0\u5bf9\u4efb\u610f\u4e00\u79cd\u4e0d\u5408\u6cd5\u72b6\u6001\u76844\u4e2a\u683c\u5b50\u4e00\u5b9a\u662f\u5206\u5e03\u7740\u4e0d\u540c\u76844\u79cd\u989c\u8272\u7684\uff0c\u5e76\u4e14\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u6761\u8def\u5f84\u4f7f\u5f97\u6709 $4 - 1 - 2 - 3$ \u8fd9\u79cd\u8def\u5f84\uff0c\u7136\u540e\u5982\u679c\u4f60\u4f1a\u6700\u5c0f\u5272\u7684\u8bdd\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u8fd9\u5df2\u7ecf\u5f88\u53ef\u505a\u4e86\u5427\u3002 \n\n\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8fdb\u884c\u62c6\u70b9\u64cd\u4f5c\uff0c\u7136\u540e\u6211\u4eec\u76f4\u63a5\u6309\u4e0a\u9762\u7684\u8def\u5f84\u8fdb\u884c\u8fde\u8fb9\u5c31\u53ef\u4ee5\u4e86\u3002  \n\n\u6211\u662f\u7528\u4e86\u4e00\u5806 map \u5b58\u7684\u5404\u79cd\u4fe1\u606f\uff0c\u53cd\u6b63\u8fd8\u662f\u6bd4\u8f83\u9ebb\u70e6\u7684\u3002  \n\n\u53ef\u4ee5\u770b\u6211\u4ee3\u7801\u4e0a\u7684\u6ce8\u91ca\uff1a \n\n```cpp\n// by longdie\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 4e5 + 5, inf = 0x3f3f3f3f;\ninline int read(int s = 0, int f = 1, char ch = getchar()) {\n    while(!isdigit(ch)) { if(ch == '-') f = -1; ch = getchar(); }\n    while(isdigit(ch)) { s = s*10 + ch - '0', ch = getchar(); }\n    return s * f;\n}\nunordered_map<int, unordered_map<int, int> > p[5], ru, chu, ji;\nint L, R, n, head[N], cnt=1, tot, s, t, maxflow, d[N], X[N], Y[N], cur[N];\nstruct edge { int to, next, w; } e[N*15];\ninline void add(int x, int y, int z) { e[++cnt] = (edge){y, head[x], z}, head[x] = cnt; }\nbool bfs() {\n    queue<int> q;\n    memcpy(cur, head, tot * 4 + 4), memset(d, 0, tot * 4 + 4);\n    d[s] = 1, q.push(s);\n    while(q.size()) {\n        int u = q.front(); q.pop();\n        for(register int i = head[u], v; i; i = e[i].next) {\n            v = e[i].to;\n            if(d[v] || e[i].w == 0) continue;\n            d[v] = d[u] + 1;\n            if(v == t) return 1;\n            q.push(v);\n        }\n    }\n    return 0;\n}\nint dinic(int u, int flow) {\n    if(u == t) return flow;\n    int rest = flow;\n    for(register int i = cur[u], v; i && rest; cur[u] = i, i = e[i].next) {\n        v = e[i].to;\n        if(d[v] != d[u] + 1 || e[i].w == 0) continue;\n        int tmp = dinic(v, min(e[i].w, rest));\n        if(!tmp) d[v] = 0;\n        rest -= tmp, e[i].w -= tmp, e[i^1].w += tmp;        \n    }\n    return flow - rest;\n}\nsigned main() {\n    s = ++tot, t = ++tot;\n    L = read(), R = read(), n = read();\n    for(register int i = 1, x, y, w, now; i <= n; ++i) {\n        y = read(), x = read(), w = read();\n        ru[x][y] = ++tot, chu[x][y] = ++tot, X[i] = x, Y[i] = y;\n        //\u627e\u5230\u88ab\u67d3\u6210\u4e86\u4ec0\u4e48\u989c\u8272\n        if(x & 1) {\n            now = y % 4; if(!now) now = 4;\n            ji[x][y] = now, p[now][x][y] = w;\n        }\n        else {\n            now = y % 4;\n            if(now == 1) now = 4;\n            else if(now == 2) now = 3;\n            else if(now == 3) now = 2;\n            else now = 1;\n            ji[x][y] = now, p[now][x][y] = w;\n        }\n    }\n    for(register int i = 1; i <= n; ++i) {//\u8fde\u8fb9\u7684\u5177\u4f53\u8fc7\u7a0b\n        int x = X[i], y = Y[i], k = ji[x][y], u = ru[x][y], v = chu[x][y];\n        add(u, v, p[k][x][y]), add(v, u, 0);//\u62c6\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\n        //\u52064\u79cd\u60c5\u51b5\u8ba8\u8bba\n        if(k == 1) {\n            int xx = x, yy = y + 1;\n            if(p[2][xx][yy]) add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            xx = x, yy = y - 1;\n            if(p[2][xx][yy]) add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n        }\n        if(k == 2) {\n            int xx = x, yy = y + 1;\n            if(p[3][xx][yy]) {\n                add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            }\n            xx = x + 1, yy = y;\n            if(p[3][xx][yy]) {\n                add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            }\n            xx = x - 1, yy = y;\n            if(p[3][xx][yy]) {\n                add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            }\n            xx = x, yy = y - 1;\n            if(p[3][xx][yy]) {\n                add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            }\n        }\n        if(k == 3) {\n            add(v, t, inf), add(t, v, 0);\n        }\n        if(k == 4) {\n            add(s, u, inf), add(u, s, 0);\n            int xx = x, yy = y + 1;\n            if(p[1][xx][yy]) {\n                add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            }\n            xx = x, yy = y - 1;\n            if(p[1][xx][yy]) {\n                add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            }\n            xx = x + 1, yy = y;\n            if(p[1][xx][yy]) {\n                add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            }\n            xx = x - 1, yy = y;\n            if(p[1][xx][yy]) {\n                add(v, ru[xx][yy], inf), add(ru[xx][yy], v, 0);\n            }\n        }\n    }\n    while(bfs()) maxflow += dinic(s, 0x3f3f3f3f);\n    printf(\"%d\\n\", maxflow);\n    return 0;\n}\n```",
        "postTime": 1610502131,
        "uid": 330886,
        "name": "longdie",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3756 \u3010[CQOI2017]\u8001C\u7684\u65b9\u5757\u3011"
    },
    {
        "content": "### \u5168\u6587\u6240\u8bf4\u7684\u76f8\u8fde\u90fd\u662f\u56db\u8054\u901a\uff0c\u5c31\u662f\u4e00\u4e2a\u5757\u4e0e\u5176\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u5757\u8054\u901a\n\u9996\u5148\u6211\u4eec\u770b\u4e00\u4e0b\u4e0d\u5408\u6cd5\u7684\u65b9\u5f0f\n![NUL](https://cdn.luogu.com.cn/upload/pic/5093.png)\n\n\u8bf4\u767d\u4e86\u5c31\u662f\u4ee5\u84dd\u8fb9\u4e3a\u4e2d\u7684\u4e24\u4e2a\u65b9\u5757(\u4e0b\u6587\u90fd\u7b80\u79f0\u4e3a\u4e24\u4e2a\u65b9\u5757)\u9664\u5f7c\u6b64\u5916\uff0c\u4e0d\u80fd\u518d\u5206\u522b\u4e0e\u522b\u7684\u5757\u76f8\u8fde\n\n\u5c31\u662f\u5982\u679c\u4e0d\u5408\u6cd5\u7684\u8bdd\u6211\u4eec\u81f3\u5c11\u8981\u505a\u5230\u4ee5\u4e0b\u4e00\u6761\n\n#### #1.\u628a\u4e0e\u5de6\u8fb9\u5757\u76f8\u8fde\u7684\u5757\u90fd\u7ed9\u6d88\u6389\n\n#### #2.\u2014\u2014\u53f3\u8fb9\u5757\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n#### #3.\u628a\u8fd9\u4e24\u4e2a\u65b9\u5757\u81f3\u5c11\u7834\u574f\u4e00\u4e2a\n\n\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e09\u9009\u4e00\u51b3\u7b56\u95ee\u9898\n\n\u7136\u540e\u6211\u4eec\u518d\u89c2\u5bdf\u4e00\u4e0b\u84dd\u8fb9\u7684\u5206\u5e03\n\n![NULL](https://cdn.luogu.com.cn/upload/pic/5092.png)\n\n\u6211\u4eec\u53c8\u53ef\u4ee5\u53d1\u73b0\u5982\u4e0b\u6027\u8d28\n\n#### I.  \u4e2d\u95f4\u7684\u4e24\u4e2a\u65b9\u5757\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u7684\n\n\u8fd9\u6837#3\u5c31\u76f8\u5f53\u4e8e\u7834\u574f\u4e24\u4e2a\u4e2d\u6743\u503c\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\n\n#### II. \u4e24\u4e2a\u65b9\u5757\u6240\u8fde\u7684\u65b9\u5757\u5206\u522b\u5c5e\u4e8e\u9ed1\u767d\u67d3\u8272\u7684\u4e24\u8272\n---\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6700\u5c0f\u5272\u6a21\u578b\u6765\u89e3\u51b3\u8fd9\u9053\u9898\n\n\u4e09\u4e2a\u51b3\u7b56\u6211\u4eec\u7ed9\u4e32\u8054\u8d77\u6765\n\u5176\u4e2d#3\u653e\u5728\u6700\u4e2d\u95f4,\u5c31\u662f\u4e24\u4e2a\u70b9+\u4e2d\u95f4\u4e00\u6761\u6d41\u91cf\u4e3a\u4e24\u4e2a\u70b9\u6700\u5c0f\u503c\u8fb9\n#1\u4e0e#2\u6211\u4eec\u6839\u636e\u9ed1\u767d\u67d3\u8272\u7684\u60c5\u51b5\u653e\u5728\u5de6\u53f3\u8fb9\uff0c\u5148\u4e0eS\u6216\u8005T\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u81ea\u8eab\u82b1\u8d39\u7684\u8fb9\uff0c\u518d\u4e0e#3\u5de6\u6216\u53f3\u7aef\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u65e0\u7a77\u7684\u8fb9\n\n(\u4e0a\u9762\u8868\u8ff0\u5747\u5ffd\u7565\u8fb9\u65b9\u5411)\n\n\n\u5bf9\u4e8e\u4e0d\u5b8c\u6574\u7684\u4e24\u4e2a\u65b9\u5757\u6211\u4eec\u5c31\u4e0d\u7528\u7ba1\n\n\n\u7136\u540e\u7528Dinic\u6765\u5904\u7406\n\n\u56e0\u4e3a\u957f\u5f97\u5f88\u50cf\u4e8c\u5206\u56fe\uff0c\u611f\u89c9\u53ef\u4ee5\u505a\u5230O(n^1.5)\u5dee\u4e0d\u591a\u7684\u590d\u6742\u5ea6\n\n\u81f3\u5c11\u63d0\u4ea4\u65f6\u65f6\u9650\u6ca1\u6709\u538b\u529b\n\n\n",
        "postTime": 1520211930,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3756 \u3010[CQOI2017]\u8001C\u7684\u65b9\u5757\u3011"
    },
    {
        "content": "[P3756 [CQOI2017]\u8001C\u7684\u65b9\u5757](https://www.luogu.com.cn/problem/P3756)\n\n\u9898\u610f\uff1a\u7565\n\n\u601d\u8def\uff1a\u5efa\u56fe+\uff08\u6807\u7b7e\u5199\u7684\uff09\u6700\u5c0f\u5272\n\n\u9996\u5148\u8003\u8651\u67d3\u8272\uff0c\u8fd9\u91cc\u4e0d\u662f\u9ed1\u767d\u67d3\u8272\uff0c\u800c\u662f\u56db\u8272\u67d3\u8272\uff0c\u67d3\u5b8c\u8272\u540e\u53d1\u73b0\u6240\u6709\u8ba8\u538c\u56fe\u5f62\u90fd\u80fd\u591f\u88ab\u8868\u793a\u4e3a\u9ec4\u5757 $ \\rightarrow $ \u9ed1\u5757 $ \\rightarrow $ \u84dd\u7ebf $ \\rightarrow $ \u7ea2\u5757 $ \\rightarrow $ \u7eff\u5757\uff08\u56fe\u5982\u4e0b\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/342nsgx9.png)\n\n\u5c0f\u5b9a\u4e49\uff1a\u5982\u679c\u4e00\u4e2a\u65b9\u683c\u88ab\u586b\u4e0a\u4e86\uff0c\u5219\u79f0\u4e3a\u88ab\u586b\u65b9\u5757\n\n\u81ea\u5df1\u89c2\u5bdf\u6bcf\u4e00\u79cd\u8ba8\u538c\u56fe\u5f62\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u79cd\u8ba8\u538c\u56fe\u5f62\u90fd\u6709\u5982\u4e0b\u6027\u8d28\uff1a\n\n1\u3001\u84dd\u7ebf\u4e24\u4fa7\u4e00\u5b9a\u662f\u88ab\u586b\u7684\u9ed1\u5757\u548c\u7ea2\u5757\n\n2\u3001\u9ed1\u683c\u5468\u56f4\u8981\u6709\u88ab\u586b\u7684\u9ec4\u5feb\n\n3\u3001\u7ea2\u683c\u5468\u56f4\u8981\u6709\u88ab\u586b\u7684\u7eff\u5757\n\n\u4ee5\u4e0a\u4e09\u6761\u9700\u8981\u540c\u65f6\u6ee1\u8db3\n\n\u6240\u4ee5\u53ef\u4ee5\u5f97\u51fa\uff0c\u7834\u574f\u8ba8\u538c\u56fe\u5f62\u6709\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\n\n1\u3001\u5220\u6389\u88ab\u586b\u7684\u7ea2\u683c\n\n2\u3001\u5220\u6389\u88ab\u586b\u7684\u9ed1\u683c\n\n3\u3001\u5220\u6389\u88ab\u586b\u9ed1\u683c\u5468\u56f4\u6240\u6709\u88ab\u586b\u7684\u9ec4\u683c\n\n4\u3001\u5220\u6389\u88ab\u586b\u9ed1\u683c\u5468\u56f4\u6240\u6709\u88ab\u586b\u7684\u7eff\u683c\n\n\u6240\u4ee5\u8fd9\u56db\u79cd\u60c5\u51b5\u5bb9\u91cf\u4e3a\u79fb\u9664\u7684\u82b1\u8d39\uff0c\u5176\u4f59\u7684\u8fb9\u5168\u90e8\u4e3a $ \\infty $ \n\n~~\u6839\u636e\u7ecf\u9a8c~~ \u6784\u56fe\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n1\u3001\u6e90\u70b9 $ S $ \u5411\u6240\u6709\u88ab\u586b\u9ec4\u683c\u8fde\u8fb9\uff0c $ S $ \u8fde\u5411\u9ec4\u683c $ i $ \u7684\u5bb9\u91cf\u4e3a $ w_i $\n\n2\u3001\u6240\u6709\u88ab\u586b\u7eff\u683c\u5411\u6c47\u70b9 $ T $ \u8fde\u8fb9\uff0c\u7eff\u683c $ j $ \u8fde\u5411 $ T $ \u7684\u5bb9\u91cf\u4e3a $ w_j $\n\n3\u3001\u88ab\u586b\u9ec4\u683c\u5411\u76f8\u90bb\u7684\u88ab\u586b\u9ed1\u683c\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $ \\infty $\n\n4\u3001\u88ab\u586b\u7ea2\u683c\u5411\u76f8\u90bb\u7684\u88ab\u586b\u7eff\u683c\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $ \\infty $ \n\n5\u3001\u88ab\u586b\u9ed1\u683c $ i $ \u5411\u76f8\u90bb\u7684\u88ab\u586b\u7ea2\u683c $ j $ \u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $ min \\begin{cases}w_i\\\\w_j\\end{cases} $ \n\n\u6700\u540e\u8dd1\u6700\u5c0f\u5272\u5373\u53ef\n\n\u5efa\u56fe\u5b8c\u6210\u540e\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3mbkxwcd.png)\n\n\u6700\u540e\u8bf4\u4e00\u4e0b\u4ee3\u7801\u5b9e\u73b0\uff0c\u786e\u5b9e\u5f88\u96be\u5199\uff0c~~\u672c\u4eba\u5199\u4e86\u4e00\u4e0b\u5348 wtcl~~\n\n\u5f00 $ map $ \u8bb0\u5f55\u6bcf\u4e00\u4e2a\u88ab\u586b\u65b9\u5757\u7684\u7f16\u53f7\uff0c\u4f4d\u7f6e\u4ee5\u53ca\u82b1\u8d39\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u65b9\u5757\uff0c\u8fdb\u884c\u8fde\u8fb9\uff0c\u672c\u4eba\u81ea\u5df1\u5199\u4e86\u56db\u4e2a\u5224\u65ad\u989c\u8272\u7684\u51fd\u6570\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u89c4\u5f8b\u5982\u4e0b\uff1a\n\n1\u3001\u9ec4\u5757\u548c\u9ed1\u5757\uff1a\u6240\u5904\u5217\uff0c\u5bf9 $ 4 $ \u53d6\u6a21\u4e00\u5b9a\u4e3a $ 0 $ \u6216 $ 1 $ ,\u5bf9\u5e94\u4e00\u4e0b\u5728\u54ea\u4e00\u884c\u5373\u53ef\n\n2\u3001\u7ea2\u5757\u548c\u7eff\u5757\uff1a\u6240\u5904\u5217\uff0c\u5bf9 $ 4 $ \u53d6\u6a21\u4e00\u5b9a\u4e3a $ 2 $ \u6216 $ 3 $ ,\u5bf9\u5e94\u4e00\u4e0b\u5728\u54ea\u4e00\u884c\u5373\u53ef\n\n\u63a5\u4e0b\u6765\uff0c\u4e3a\u4e86\u51cf\u5c11\u7801\u91cf\u5199\u4e2a\u5e7f\u641c\u3002\u8bb0\u4f4f\uff01\u5343\u4e07\u4e0d\u80fd\u5efa\u7a7a\u70b9\uff0c~~\u56e0\u4e3a\u8fd9\u4e2a\u6211\u5199\u4e86\u4e00\u4e0b\u5348~~\uff0c\u4e0d\u7136\u4f1a\u5404\u79cd\u9519\u8bef\n\n\u6700\u7ec8 $ Code $ \u5982\u4e0b\n\n```cpp\n# include <iostream>\n# include <cstdio>\n# include <queue>\n# include <cstring>\n# include <map>\n# include <algorithm>\nusing namespace std;\nconst int N = 2e6 + 5;\nconst int M = 1e7 + 5;\nconst int inf = 0x7fffffff;\nconst int xyxyxyx_ = 1e5 + 5;\nint S , T;\ntypedef struct {\n\tint x , y , z , next;\n} Edge ;\nEdge Kikyo[M];\nint E = 1 , elast[N];\nvoid add(int x , int y , int z) {\n\tE ++;\n\tKikyo[E].x = x;\n\tKikyo[E].y = y;\n\tKikyo[E].z = z;\n\tKikyo[E].next = elast[x];\n\telast[x] = E;\n}\nint dis[N] , cnt[N];\nvoid bfs(int start) {\n\tqueue<int> q;\n\tq.push(start);\n\tdis[start] = 0;\n\tcnt[S] = 1;\n\twhile (!q.empty()) {\n\t\tint cur = q.front();\n\t\tq.pop();\n\t\tfor (int i = elast[cur] ; i ; i = Kikyo[i].next) {\n\t\t\tint v = Kikyo[i].y;\n\t\t\tif (dis[v] != -1) continue;\n\t\t\tdis[v] = dis[cur] + 1;\n\t\t\tq.push(v);\n\t\t\tcnt[dis[v]] ++;\n\t\t}\n\t}\n}\nint cur[N];\nint min(int a , int b) {\n\treturn a < b ? a : b;\n}\nint dfs(int u , int flow) {\n\tif (u == T) return flow;\n\tint delta = 0;\n\tfor (int i = cur[u] ; i ; i = Kikyo[i].next) {\n\t\tcur[u] = i;\n\t\tint v = Kikyo[i].y;\n\t\tif (Kikyo[i].z > 0 && dis[u] == dis[v] + 1) {\n\t\t\tint kikyo = dfs(v , min(flow - delta , Kikyo[i].z));\n\t\t\tKikyo[i].z -= kikyo;\n\t\t\tKikyo[i ^ 1].z += kikyo;\n\t\t\tdelta += kikyo;\n\t\t\tif (delta == flow) return delta;\n\t\t}\n\t}\n\tif (dis[S] >= T + 1) return delta;\n\tcur[u] = elast[u];\n\tif (-- cnt[dis[u]] == 0) dis[S] = T + 1;\n\tcnt[++ dis[u]] ++;\n\treturn delta;\n}\nint Isap() {\n\tint Kikyo = 0;\n\tmemset(cnt , 0 , sizeof cnt);\n\tmemset(dis , -1 , sizeof dis);\n\tbfs(T);\n\tfor (int i = 0 ; i <= T ; i ++) {\n\t\tcur[i] = elast[i];\n\t}\n\twhile (dis[S] < T + 1) Kikyo += dfs(S , inf);\n\treturn Kikyo;\n}\nint C , R , n;\nint xuexsshuan , Kikyo_ , kikyo_;\nmap<int , int> mp[xyxyxyx_] , mp_Kikyo[xyxyxyx_];\nbool Kikyo_Yellow(int x , int  y) {\n\tif (x % 4 == 0) {\n\t\tif (y & 1) return true;\n\t\telse return false;\n\t}\n\tif (x % 4 == 1) {\n\t\tif (y & 1) return false;\n\t\telse return true;\n\t}\n\treturn false;\n}\n\nbool Kikyo_Black(int x , int y) {\n\tif (x % 4 == 1) {\n\t\tif (y & 1) return true;\n\t\telse return false;\n\t}\n\tif (x % 4 == 0) {\n\t\tif (y & 1) return false;\n\t\telse return true;\n\t}\n\treturn false;\n}\nbool Kikyo_Red(int x , int y) {\n\tif ((x + 2) % 4 == 0) {\n\t\tif (y & 1) return true;\n\t\telse return false;\n\t}\n\tif ((x + 1) % 4 == 0) {\n\t\tif (y & 1) return false;\n\t\telse return true;\n\t}\n\treturn false;\n}\nbool Kikyo_Green(int x , int y) {\n\tif ((x + 1) % 4 == 0) {\n\t\tif (y & 1) return true;\n\t\telse return false;\n\t}\n\tif ((x + 2) % 4 == 0) {\n\t\tif (y & 1) return false;\n\t\telse return true;\n\t}\n\treturn false;\n}\n\nint get_color_Kikyo(int x , int y) {\n\tif (Kikyo_Yellow(x , y) == true) return 1;\n\tif (Kikyo_Black(x , y) == true) return 2;\n\tif (Kikyo_Red(x , y) == true) return 3;\n\tif (Kikyo_Green(x , y) == true) return 4;\n}\n\nint dx[4] = {1 , 0 , -1 , 0};\nint dy[4] = {0 , 1 , 0 , -1};\ntypedef struct {\n\tint x , y , cos;\n} ssh;\nssh f[xyxyxyx_];\nint main() {\n\tcin >> C >> R >> n;\n\tS = 0 , T = n + 1;\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tscanf(\"%d%d%d\" , &xuexsshuan , &Kikyo_ , &kikyo_);\n\t\tmp[xuexsshuan][Kikyo_] = kikyo_;\n\t\tmp_Kikyo[xuexsshuan][Kikyo_] = i;\n\t\tf[i].x = xuexsshuan;\n\t\tf[i].y = Kikyo_;\n\t\tf[i].cos = kikyo_;\n\t}\n\tfor (int i = 1 ; i <= n ; i ++) {\n\t\tint x = f[i].x , y = f[i].y , cos = f[i].cos , color = 0;\n\t\tcolor = get_color_Kikyo(x , y);\n\t\tif (color == 1) {\n\t\t\tadd(S , mp_Kikyo[x][y] , cos);\n\t\t\tadd(mp_Kikyo[x][y] , S , 0);\n\t\t\tfor (int jk = 0 ; jk < 4 ; jk ++) {\n\t\t\t\tint tx = x + dx[jk];\n\t\t\t\tint ty = y + dy[jk];\n\t\t\t\tif (tx < 1 || ty < 1 || tx > C || ty > R) continue;\n\t\t\t\tif (Kikyo_Black(tx , ty) == true && mp_Kikyo[tx][ty] != 0) {\n\t\t\t\t\tadd(mp_Kikyo[x][y] , mp_Kikyo[tx][ty] , inf);\n\t\t\t\t\tadd(mp_Kikyo[tx][ty] , mp_Kikyo[x][y] , 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (color == 2) {\n\t\t\tfor (int jk = 0 ; jk < 4 ; jk ++) {\n\t\t\t\tint tx = x + dx[jk];\n\t\t\t\tint ty = y + dy[jk];\n\t\t\t\tif (tx < 1 || ty < 1 || tx > C || ty > R) continue;\n\t\t\t\tif (Kikyo_Red(tx , ty) == true && mp_Kikyo[tx][ty] != 0) {\n\t\t\t\t\tint cos1 = cos , cos2 = mp[tx][ty];\n\t\t\t\t\tadd(mp_Kikyo[x][y] , mp_Kikyo[tx][ty] , min(cos1 , cos2));\n\t\t\t\t\tadd(mp_Kikyo[tx][ty] , mp_Kikyo[x][y] , 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (color == 3) {\n\t\t\tfor (int jk = 0 ; jk < 4 ; jk ++) {\n\t\t\t\tint tx = x + dx[jk];\n\t\t\t\tint ty = y + dy[jk];\n\t\t\t\tif (tx < 1 || ty < 1 || tx > C || ty > R) continue;\n\t\t\t\tif (Kikyo_Green(tx , ty) == true && mp_Kikyo[tx][ty] != 0) {\n\t\t\t\t\tadd(mp_Kikyo[x][y] , mp_Kikyo[tx][ty] , inf);\n\t\t\t\t\tadd(mp_Kikyo[tx][ty] , mp_Kikyo[x][y] , 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (color == 4) {\n\t\t\tadd(mp_Kikyo[x][y] , T , cos);\n\t\t\tadd(T , mp_Kikyo[x][y] , 0);\n\t\t}\n\t}\n\tprintf(\"%d\\n\" , Isap());\n\treturn 0;\n}\n\n\n```",
        "postTime": 1627823355,
        "uid": 335477,
        "name": "ker_xyxyxyx_xxs",
        "ccfLevel": 0,
        "title": "P3756 [CQOI2017]\u8001C\u7684\u65b9\u5757"
    },
    {
        "content": "~~\u4f5c\u4e3a NK \u795e\u4ed9\u6559\u7ec3 nodgd \u7684\u5c0f\u8ff7\u5f1f\uff0c\u6211\u89c9\u5f97 AC \u4e86\u8fd8\u662f\u6709\u5fc5\u8981\u5199\u4e00\u7bc7\u9898\u89e3\u7684\uff08~~\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u6700\u5c0f\u5272](https://oi-wiki.org/graph/flow/min-cut/)\n\n\u4e00\u770b\u5230\u8981\u5728\u7f51\u683c\u56fe\u91cc\u641e\u4ec0\u4e48\u4e8b\u60c5\u548c\u6700\u5c0f\u82b1\u8d39\u5c31\u5e94\u8be5\u60f3\u5230\u7f51\u7edc\u6d41\u548c\u67d3\u8272\u3002\n\n\u4f46\u662f\u2026\u2026\u8fd9\u9053\u9898\u7ed9\u51fa\u7684\u8001 C \u4e0d\u559c\u6b22\u7684\u65b9\u5757\u7531 $4$ \u4e2a\u65b9\u5757\u7ec4\u6210\uff0c\u600e\u4e48\u67d3\u8272\uff1f\n\n\u90a3\u5c31\u67d3\u56db\u79cd\u989c\u8272\u561b\uff0c\u5982\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sfvgdqxr.png)\n\n\u5982\u679c\u4f60\u628a\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u56db\u79cd\u65b9\u5757\u6309\u8fd9\u79cd\u65b9\u5f0f\u67d3\u8272\uff0c\u4f60\u4f1a\u53d1\u73b0**\u7ea2\u8272\u548c\u9ec4\u8272\u4e00\u5b9a\u76f8\u90bb\uff0c\u9ed1\u8272\u548c\u7eff\u8272\u4e00\u5b9a\u76f8\u90bb\uff0c\u7ea2\u8272\u548c\u9ed1\u8272\u4e5f\u4e00\u5b9a\u76f8\u90bb**\u3002\n\n\u4e8e\u662f\uff1a\u5982\u679c\u6211\u4eec\u5207\u65ad\u5982\u4e0a\u4e09\u79cd\u76f8\u90bb\u5173\u7cfb\u4e4b\u4e00\uff0c\u5c31\u4e00\u5b9a\u53ef\u4ee5\u6d88\u9664\u201c\u8ba8\u538c\u7684\u5f62\u72b6\u201d\u3002\n\n\u7136\u540e\u5c31\u662f\u6700\u5c0f\u5272\u7684\u4e8b\u4e86\u3002\u9996\u5148\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 $S$ \u548c\u8d85\u7ea7\u6c47\u70b9 $T$\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u5efa\u4e94\u79cd\u7c7b\u578b\u7684\u8fb9\uff1a\n\n1. $S \\to$ \u9ec4\u8272\uff0c\u8fb9\u6743\u4e3a\u79fb\u9664\u8fd9\u4e2a\u9ec4\u8272\u65b9\u5757\u6240\u9700\u4ee3\u4ef7\uff08\u5982\u679c\u5272\u6389\u8fd9\u6761\u8fb9\uff0c\u610f\u5473\u7740\u79fb\u9664\u8fd9\u4e2a\u9ec4\u8272\u65b9\u5757\uff09\uff1b\n\n2. \u9ec4\u8272 $\\to$ \u7ea2\u8272\uff0c\u8fb9\u6743\u4e3a $\\inf$\uff08\u8bbe\u4e3a\u79fb\u9664\u8fd9\u4e2a\u9ec4\u8272\u65b9\u5757\u6240\u9700\u4ee3\u4ef7\u4e5f\u53ef\uff09\uff1b\n\n3. \u7ea2\u8272 $\\to$ \u9ed1\u8272\uff0c\u8fb9\u6743\u4e3a\u79fb\u9664\u8fd9\u4e2a\u7ea2\u8272\u65b9\u5757\u6216\u9ed1\u8272\u65b9\u5757\u6240\u9700\u4ee3\u4ef7\u4e2d\u7684\u6700\u5c0f\u503c\uff08\u5982\u679c\u5272\u6389\u8fd9\u6761\u8fb9\uff0c\u610f\u5473\u7740\u79fb\u9664\u8fd9\u4e2a\u7ea2\u8272\u65b9\u5757\u6216\u9ed1\u8272\u65b9\u5757\uff09\uff1b\n\n4. \u9ed1\u8272 $\\to$ \u7eff\u8272\uff0c\u8fb9\u6743\u4e3a $\\inf$\uff08\u8bbe\u4e3a\u79fb\u9664\u8fd9\u4e2a\u7eff\u8272\u65b9\u5757\u6240\u9700\u4ee3\u4ef7\u4e5f\u53ef\uff09\uff1b\n\n5. \u7eff\u8272 $\\to T$\uff0c\u8fb9\u6743\u4e3a\u79fb\u9664\u8fd9\u4e2a\u7eff\u8272\u65b9\u5757\u6240\u9700\u4ee3\u4ef7\uff08\u5982\u679c\u5272\u6389\u8fd9\u6761\u8fb9\uff0c\u610f\u5473\u7740\u79fb\u9664\u8fd9\u4e2a\u7eff\u8272\u65b9\u5757\uff09\u3002\n\n\u5efa\u597d\u56fe\u540e\u76f4\u63a5\u8dd1 ISAP / Dinic \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(c + n^3)$~~\u4f60\u770b\uff0c\u7f51\u7edc\u6d41 $n^3$ \u8fc7\u5341\u4e07\u4e86~~\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <queue>\n#include <map>\n\nusing namespace std;\n\ntypedef struct {\n\tint nxt;\n\tint end;\n\tint dis;\n} Edge;\n\nconst int N = 1e5 + 7, M = 4, K = 8e5 + 7, RED = 1, BLACK = 2, GREEN = 3, YELLOW = 4;\nint cnt = 1;\nint head[N], dx[M + 7] = {0, -1, 0, 0, 1}, dy[M + 7] = {0, 0, -1, 1, 0}, dis[N], cur_edge[N], dis_cnt[N];\nEdge edge[K];\nqueue<int> q;\nmap<int, int> mp1[N], mp2[N];\n\ninline void init(int n){\n\tfor (register int i = 0; i <= n; i++){\n\t\tdis[i] = 0x7fffffff;\n\t\tcur_edge[i] = head[i];\n\t}\n}\n\ninline int get_color(int i, int j){\n\tif (i % 2 == 1) return (j - 1) % 4 + 1;\n\treturn 4 - (j - 1) % 4;\n}\n\ninline void add_edge(int start, int end, int dis){\n\tcnt++;\n\tedge[cnt].nxt = head[start];\n\thead[start] = cnt;\n\tedge[cnt].end = end;\n\tedge[cnt].dis = dis;\n}\n\ninline void bfs(int start){\n\tdis[start] = 0;\n\tq.push(start);\n\twhile (!q.empty()){\n\t\tint cur = q.front(), next_dis = dis[cur] + 1;\n\t\tq.pop();\n\t\tdis_cnt[dis[cur]]++;\n\t\tfor (register int i = head[cur]; i != 0; i = edge[i].nxt){\n\t\t\tint x = edge[i].end;\n\t\t\tif (dis[x] == 0x7fffffff){\n\t\t\t\tdis[x] = next_dis;\n\t\t\t\tq.push(x);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint dfs(int u, int flow, int start, int end, int n){\n\tif (u == end) return flow;\n\tint ans = 0;\n\tfor (register int i = cur_edge[u]; i != 0; i = edge[i].nxt){\n\t\tint x = edge[i].end;\n\t\tcur_edge[u] = i;\n\t\tif (dis[u] == dis[x] + 1){\n\t\t\tint t = dfs(x, min(flow - ans, edge[i].dis), start, end, n);\n\t\t\tedge[i].dis -= t;\n\t\t\tedge[i ^ 1].dis += t;\n\t\t\tans += t;\n\t\t\tif (ans == flow) return ans;\n\t\t}\n\t}\n\tcur_edge[u] = head[u];\n\tif (--dis_cnt[dis[u]] == 0) dis[start] = n;\n\tdis_cnt[++dis[u]]++;\n\treturn ans;\n}\n\ninline int isap(int start, int end, int n){\n\tint ans = 0;\n\tbfs(end);\n\twhile (dis[start] < n) ans += dfs(start, 0x7fffffff, start, end, n);\n\treturn ans;\n}\n\nint main(){\n\tint c, r, n, id = 0, end;\n\tcin >> c >> r >> n;\n\tfor (register int i = 1; i <= n; i++){\n\t\tint x, y, w;\n\t\tcin >> x >> y >> w;\n\t\tmp1[x][y] = w;\n\t\tmp2[x][y] = ++id;\n\t}\n\tend = id + 1;\n\tfor (register int i = 1; i <= c; i++){\n\t\tfor (register map<int, int>::iterator j = mp1[i].begin(); j != mp1[i].end(); j++){\n\t\t\tint y = j->first, w = j->second, cur_color = get_color(y, i), cur_id = mp2[i][y];\n\t\t\tif (cur_color == YELLOW){\n\t\t\t\tadd_edge(0, cur_id, w);\n\t\t\t\tadd_edge(cur_id, 0, 0);\n\t\t\t} else if (cur_color == GREEN){\n\t\t\t\tadd_edge(cur_id, end, w);\n\t\t\t\tadd_edge(end, cur_id, 0);\n\t\t\t} else {\n\t\t\t\tfor (register int k = 1; k <= M; k++){\n\t\t\t\t\tint new_x = i + dx[k], new_y = y + dy[k];\n\t\t\t\t\tif (new_x >= 1 && new_x <= c && new_y >= 1 && new_y <= r && mp1[new_x].count(new_y)){\n\t\t\t\t\t\tint new_id = mp2[new_x][new_y], new_color = get_color(new_y, new_x);\n\t\t\t\t\t\tif (cur_color == RED){\n\t\t\t\t\t\t\tif (new_color == BLACK){\n\t\t\t\t\t\t\t\tadd_edge(cur_id, new_id, min(w, mp1[new_x][new_y]));\n\t\t\t\t\t\t\t\tadd_edge(new_id, cur_id, 0);\n\t\t\t\t\t\t\t} else if (new_color == YELLOW){\n\t\t\t\t\t\t\t\tadd_edge(new_id, cur_id, 0x7fffffff);\n\t\t\t\t\t\t\t\tadd_edge(cur_id, new_id, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (new_color == GREEN){\n\t\t\t\t\t\t\tadd_edge(cur_id, new_id, 0x7fffffff);\n\t\t\t\t\t\t\tadd_edge(new_id, cur_id, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinit(end);\n\tcout << isap(0, end, end + 1);\n\treturn 0;\n}\n```",
        "postTime": 1627030015,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3756 \u3010[CQOI2017] \u8001C\u7684\u65b9\u5757\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u770b\u5230\u201c\u4e00\u4e2a\u5f62\u72b6\u4e2d\u5982\u679c\u62c6\u6389\u4efb\u4f55\u4e00\u4e2a\u65b9\u5757\u90fd\u7b97\u5408\u6cd5\u201d\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u5f80\u6700\u5c0f\u5272\u7684\u65b9\u5411\u53bb\u60f3\u3002\u8fdb\u4e00\u6b65\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5c06\u6bcf\u4e2a\u65b9\u5757\u62c6\u70b9\uff0c\u5728\u62c6\u5f00\u7684\u70b9\u95f4\u8fde\u4e0a\u4e00\u6761\u76f8\u5f53\u4e8e\u8be5\u65b9\u5757\u6743\u503c\u7684\u8fb9\uff1b\u7136\u540e\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u56db\u5143\u7ec4\uff0c\u5047\u5982\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u67d0\u79cd\u987a\u5e8f\u5c06\u56db\u4e2a\u4e1c\u897f\u7528\u65e0\u7a77\u5927\u7684\u8fb9**\u4e32\u8054**\u8d77\u6765\uff0c\u5219\u8dd1\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n\u73b0\u5728\u8003\u8651\u5982\u4f55\u5efa\u56fe\u3002\u89c2\u5bdf\u5230\u4e00\u4e2a\u56fe\u5f62\u4e2d\u6709\u4e14\u4ec5\u6709\u56db\u4e2a\u4e1c\u897f\uff0c\u4e8e\u662f\u5f80\u67d3\u56db\u79cd\u989c\u8272\uff0c\u6700\u7ec8\u7684\u56fe\u88ab\u5206\u6210\u56db\u5c42\u7684\u65b9\u5411\u53bb\u60f3\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u56fe\u5f62\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u7279\u6b8a\u8fb9\uff0c\u6211\u4eec\u51b3\u5b9a\u5148\u4ece\u7279\u6b8a\u8fb9\u4e0b\u624b\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u521d\u6b65\u7684\u67d3\u8272\u7ed3\u679c\u957f\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vo1t9znd.png)\n\n\u7136\u540e\uff0c\u518d\u8fdb\u4e00\u6b65\u67d3\u8272\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u8fd9\u6837\u7684\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4bhptjcu.png)\n\n\u7136\u540e\u6211\u4eec\u89c2\u5bdf\u56db\u79cd\u7279\u6b8a\u56fe\u6837\uff0c\u53d1\u73b0\u5176\u90fd\u662f\u4e00\u4e2a $0$ \u52a0\u4e0a\u4e00\u4e2a $1$ \u52a0\u4e0a $0$ \u65c1\u8fb9\u7684\u67d0\u4e2a\u6570\u52a0\u4e0a $1$ \u65c1\u8fb9\u7684\u67d0\u4e2a\u6570\uff1b\n\n\u800c\u6211\u4eec\u73b0\u5728\u7684\u56fe\u4e2d\uff0c$0$ \u65c1\u7684\u6570\u4e0d\u5168\u76f8\u7b49\uff0c$1$ \u65c1\u7684\u6570\u540c\u6837\uff1b\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u8c03\u6574\u67d3\u8272\u65b9\u5f0f\u4f7f\u5f97 $0$ \u65c1\u6240\u6709\u7684\u6570\u90fd\u76f8\u7b49\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bk4afvdf.png)\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u67d3\u8272\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u4e0d\u540c\u7684 $0$ \u65c1\uff0c\u6709\u7684\u65c1\u8fb9\u5168\u662f $2$\uff0c\u6709\u7684\u65c1\u8fb9\u5168\u662f $3$\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u518d\u6b21\u4fee\u6539\uff0c\u5f97\u5230\u4e86\u6700\u7ec8\u7684\u67d3\u8272\u65b9\u6848\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c3g1jeas.png)\n\n\u5728\u6b64\u79cd\u65b9\u6848\u4e2d\uff0c$0$ \u65c1\u5168\u662f $2$\uff0c$1$ \u65c1\u5168\u662f $3$\u3002\n\n\u67d3\u8272\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u5efa\u56fe\u3002\u4e3a\u4e86\u9632\u6b62\u4e0d\u540c\u7684\u56db\u5143\u7ec4\u95f4\u6df7\u7528\u4e86\u8fb9\uff0c\u6211\u4eec\u5fc5\u987b\u627e\u5230\u4e00\u79cd\u5408\u9002\u7684\u5206\u5c42\u987a\u5e8f\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a $0$ \u53ea\u4f1a\u552f\u4e00\u5730\u914d\u5bf9\u4e00\u4e2a $1$\uff0c\u800c\u5176\u5b83\u65e0\u8bba\u4efb\u4f55\u5bf9\u4e4b\u95f4\u90fd\u6ca1\u6709\u8fd9\u79cd\u6027\u8d28\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06 $(0,1)$ \u95f4\u7684\u8fb9\u653e\u5728\u6700\u4e2d\u95f4\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u7684\u601d\u8def\u662f\u4ece $S$ \u8fde\u5411 $2$ \u5c42\uff0c\u4ece $2$ \u8fde\u5411\u6240\u6709 $0$\uff0c\u4ece $0$ \u518d\u8fde\u5411 $1$\uff0c\u4ece $1$ \u8fde\u5230 $3$\uff0c\u4ece $3$ \u8fde\u5230 $T$\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u4fbf\u5efa\u51fa\u4e86\u56fe\u3002\n\n\u53ef\u662f\uff0c\u8fd9\u5f20\u56fe\u6709 $2\\times 10^5$ \u4e2a\u70b9\uff0c\u7f51\u7edc\u6d41\u90a3\u5947\u5947\u602a\u602a\u7684\u590d\u6742\u5ea6\u6765\u8dd1\u8fd9\u4e2a\u786e\u5b9a\u5927\u4e08\u592b\uff1f\n\n~~\u51ed\u4fe1\u4ef0\u8dd1\u5c31\u884c\u4e86\uff0c\u53cd\u6b63\u80fd\u8fc7~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int lim=16384;\nint n,m,k,tp[2][4]={{0,2,3,1},{2,0,1,3}},dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};\nnamespace MaxFlow{\n\tconst int N=210000,M=10000000;\n\tint head[N],cur[N],dep[N],cnt,S,T,res;\n\tstruct node{int to,next,val;}edge[M];\n\tvoid ae(int u,int v,int w){\n\t\tedge[cnt].next=head[u],edge[cnt].to=v,edge[cnt].val=w,head[u]=cnt++;\n\t\tedge[cnt].next=head[v],edge[cnt].to=u,edge[cnt].val=0,head[v]=cnt++;\n\t}\n\tqueue<int>q;\n\tinline bool bfs(){\n\t\tmemset(dep,0,sizeof(dep)),q.push(S),dep[S]=1;\n\t\twhile(!q.empty()){\n\t\t\tregister int x=q.front();q.pop();\n\t\t\tfor(register int i=cur[x]=head[x];i!=-1;i=edge[i].next)if(edge[i].val&&!dep[edge[i].to])dep[edge[i].to]=dep[x]+1,q.push(edge[i].to);\n\t\t}\n\t\treturn dep[T]>0;\n\t}\n\tbool reach;\n\tinline int dfs(int x,int flow){\n\t\tif(x==T){res+=flow,reach=true;return flow;}\n\t\tint used=0;\n\t\tfor(register int &i=cur[x];i!=-1;i=edge[i].next){\n\t\t\tif(!edge[i].val||dep[edge[i].to]!=dep[x]+1)continue;\n\t\t\tregister int ff=dfs(edge[i].to,min(edge[i].val,flow-used));\n\t\t\tif(ff){edge[i].val-=ff,edge[i^1].val+=ff,used+=ff;if(used==flow)break;}\n\t\t}\n\t\treturn used;\n\t}\n\tinline void Dinic(){while(bfs()){reach=true;while(reach)reach=false,dfs(S,0x3f3f3f3f);}}\n}\nusing namespace MaxFlow;\nmap<pair<int,int>,int>mp;\nint main(){\n\tscanf(\"%d%d%d\",&m,&n,&k),S=2*k+1,T=2*k+2,memset(head,-1,sizeof(head));\n\tfor(int i=1,x,y,z;i<=k;i++){\n\t\tscanf(\"%d%d%d\",&y,&x,&z);\n\t\tae(i,i+k,z);\n\t\tmp[make_pair(x,y)]=i;\n\t\tif(tp[x%2][y%4]==2)ae(S,i,lim);\n\t\tif(tp[x%2][y%4]==3)ae(i+k,T,lim);\n\t}\n\tfor(auto i:mp){\n\t\tint xi=i.first.first,yi=i.first.second,zi=i.second;\n//\t\tprintf(\"%d %d %d:%d\\n\",xi,yi,zi,tp[xi%2][yi%4]);\n\t\tif(tp[xi%2][yi%4]>=2)continue;\n\t\tfor(int I=0;I<4;I++){\n\t\t\tint xx=xi+dx[I],yy=yi+dy[I];\n\t\t\tif(mp.find(make_pair(xx,yy))==mp.end())continue;\n\t\t\tint zz=mp[make_pair(xx,yy)];\n\t\t\tif(tp[xx%2][yy%4]<=1){\n\t\t\t\tif(tp[xi%2][yi%4]==0)ae(zi+k,zz,lim);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(tp[xi%2][yi%4]==0)ae(zz+k,zi,lim);\n\t\t\telse ae(zi+k,zz,lim);\n\t\t}\n\t}\n\tDinic();\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1611995764,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3756 \u3010[CQOI2017]\u8001C\u7684\u65b9\u5757\u3011"
    },
    {
        "content": "\u9898\u9762\u81ea\u5df1\u770b\u5427\u3002\u3002\u3002\n\n#### std\n\n\u5178\u578b\u7684\u7f51\u7edc\u6d41\u3002\n\n\u770b\u5230\u7f51\u683c\u548c\u70b8\u70b9\uff0c\u53ef\u4ee5\u60f3\u5230\u662f\u6700\u5c0f\u5272\u3002\n\n\u6309\u7167\u5957\u8def\uff0c\u8003\u8651\u67d3\u8272\uff0c\u5bfb\u627e\u89c4\u5f8b\u3002\n\n\u53d1\u73b0\uff0c\u53ef\u7528\u5982\u4e0b\u65b9\u6cd5\u67d3\u8272\u3002\n\n![](https://img-blog.csdnimg.cn/f14128842e5b45d883a449a4ac9d95a7.png)\n\n\u4e4b\u540e\u56db\u79cd\u60c5\u51b5\u90fd\u662f\u5982\u4e0b\uff1a\n\n![](https://img-blog.csdnimg.cn/6847f413ea664bf8a411cc102bf74aa1.png)\n\n\u53d1\u73b0\u5982\u56fe\u6bcf\u79cd\u60c5\u51b5\u5fc5\u7136\u5305\u542b\u56db\u79cd\u4e0d\u4e00\u6837\u7684\u989c\u8272\uff0c\u4e14\u987a\u5e8f\u90fd\u662f \u9ec4 $\\to$ \u7eff $\\to$ \u9ed1 $\\to$ \u7070\u3002\n\n\u601d\u8003\u4e00\u4e0b\uff0c\u53d1\u73b0\u7834\u574f\u4e00\u4e2a\u8ba8\u538c\u7684\u56fe\u5f62\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a\n\n* \u70b8\u6389\u4e00\u4e2a\u7eff\u8272\u5757\u6216\u9ed1\u8272\u5757\u3002\n* \u70b8\u6389\u6240\u6709\u548c\u7eff\u8272\u5757\u6216\u8005\u9ed1\u8272\u5757\u76f8\u90bb\u7684\u9ec4\u8272\u5757\u6216\u8005\u7070\u8272\u5757\u3002 \n\n\u90a3\u4e48\u73b0\u5728\u6a21\u578b\u5c31\u5f88\u663e\u7136\u4e86\uff1a\n\n1. $s$ \u5411\u9ec4\u8272\u5757\u8fde\u5bb9\u91cf\u4e3a\u6d88\u9664\u9ec4\u8272\u5757\u7684\u4ee3\u4ef7\u7684\u8fb9\u3002\n2. \u9ec4\u8272\u5757\u5411\u7eff\u8272\u5757\u8fde\u5bb9\u91cf\u4e3a $+\\infty$ \u7684\u8fb9\u3002\n3. \u7eff\u8272\u5757\u5411\u84dd\u7ebf\u8fde\u5bb9\u91cf\u4e3a\u6d88\u9664\u7eff\u8272\u5757\u7684\u4ee3\u4ef7\u7684\u8fb9\u3002\n4. \u84dd\u7ebf\u5411\u9ed1\u8272\u5757\u8fde\u5bb9\u91cf\u4e3a\u6d88\u9664\u9ed1\u8272\u5757\u7684\u4ee3\u4ef7\u7684\u8fb9\u3002\n5. \u9ed1\u8272\u5757\u5411\u7070\u8272\u5757\u8fde\u5bb9\u91cf\u4e3a $+\\infty$ \u7684\u8fb9\u3002\n6. \u7070\u8272\u5757\u5411 $t$ \u8fde\u5bb9\u91cf\u4e3a\u6d88\u9664\u7070\u8272\u5757\u7684\u4ee3\u4ef7\u7684\u8fb9\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u7b2c $3$ \u79cd\u8fb9\u548c\u7b2c $4$ \u79cd\u8fb9\u53ef\u4ee5\u5408\u4e3a\uff1a\u7eff\u8272\u5757\u5411\u9ed1\u8272\u5757\u8fde\u5bb9\u91cf\u4e3a\u6d88\u9664\u7eff\u8272\u5757\u7684\u4ee3\u4ef7\u548c\u6d88\u9664\u9ed1\u8272\u5757\u7684\u4ee3\u4ef7\u7684\u6700\u5c0f\u503c\u7684\u8fb9\u3002\n\n\u6700\u540e\u8dd1\u4e00\u8fb9\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9')\n\t{\n\t\tif (c == '-')\n\t\t\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9')\n\t{\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline void write(int x)\n{\n\tif (x < 0)\n\t{\n\t\tputchar('-');\n\t\tx = -x;\n\t}\n\tif (x > 9)\n\t\twrite(x / 10);\n\tputchar(x % 10 + '0');\n}\n\ntypedef int tp;\n\nconst int _ = 5e5 + 10;\n\nint n, m, s, t, lv[_], cur[_];\n\nint tot = 1, head[_], to[_ << 1], nxt[_ << 1];\n\ntp w[_ << 1];\n\ninline void add(int u, int v, tp dis)\n{\n\tto[++tot] = v;\n\tnxt[tot] = head[u];\n\tw[tot] = dis;\n\thead[u] = tot;\n}\n\ninline void Add(int u, int v, tp dis)\n{\n\tadd(u, v, dis);\n\tadd(v, u, 0);\n}\n\ninline bool bfs()\n{\n\tmemset(lv, -1, sizeof(lv));\n\tlv[s] = 0;\n\tmemcpy(cur, head, sizeof(head));\n\tqueue<int> q;\n\tq.push(s);\n\twhile (!q.empty())\n\t{\n\t\tint p = q.front();\n\t\tq.pop();\n\t\tfor (int eg = head[p]; eg; eg = nxt[eg])\n\t\t{\n\t\t\tint v = to[eg];\n\t\t\ttp vol = w[eg];\n\t\t\tif (vol > 0 && lv[v] == -1)\n\t\t\t\tlv[v] = lv[p] + 1, q.push(v);\n\t\t}\n\t}\n\treturn lv[t] != -1;\n}\n\ntp dfs(int p = s, tp flow = 2e9)\n{\n\tif (p == t)\n\t\treturn flow;\n\ttp rmn = flow;\n\tfor (int eg = cur[p]; eg && rmn; eg = nxt[eg])\n\t{\n\t\tcur[p] = eg;\n\t\tint v = to[eg];\n\t\ttp vol = w[eg];\n\t\tif (vol > 0 && lv[v] == lv[p] + 1)\n\t\t{\n\t\t\ttp c = dfs(v, min(vol, rmn));\n\t\t\trmn -= c;\n\t\t\tw[eg] -= c;\n\t\t\tw[eg ^ 1] += c;\n\t\t}\n\t}\n\treturn flow - rmn;\n}\n\ninline tp dinic()\n{\n\ttp ans = 0;\n\twhile (bfs())\n\t\tans += dfs();\n\treturn ans;\n}\n\nint r, c, x[_], y[_], W[_], col[_];\n\ninline long long tr(int i, int j) { return (long long)(i - 1) * (c + 1) + j; }\n\nmap<long long, int> mp;\n\nint dx[4] = {1, -1, 0, 0}, dy[4] = {0, 0, -1, 1};\n\ninline void build_A(int i, int j, int d)\n{\n\tfor (int k = 0; k < 4; k++)\n\t{\n\t\tint px = dx[k] + i, py = dy[k] + j;\n\t\tint num = mp[tr(px, py)];\n\t\tif (num != 0)\n\t\t{\n\t\t\tif (col[num] != 2)\n\t\t\t\tAdd(num, d, 2e9);\n\t\t\telse\n\t\t\t\tAdd(d, num, min(W[num], W[d]));\n\t\t}\n\t}\n}\ninline void build_B(int i, int j, int d)\n{\n\tfor (int k = 0; k < 4; k++)\n\t{\n\t\tint px = dx[k] + i, py = dy[k] + j;\n\t\tint num = mp[tr(px, py)];\n\t\tif (num != 0)\n\t\t{\n\t\t\tif (col[num] != 1)\n\t\t\t\tAdd(d, num, 2e9);\n\t\t}\n\t}\n}\n\nsigned main()\n{\n\tc = read(), r = read(), n = read();\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tx[i] = read(), y[i] = read(), W[i] = read();\n\t\tmp[tr(x[i], y[i])] = i;\n\t}\n\ts = 0, t = _ - 1;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tswitch (x[i] % 4)\n\t\t{\n\t\tcase 1:\n\t\t{\n\t\t\tcol[i] = (y[i] % 2) ? 1 : 3;\n\t\t\tbreak;\n\t\t}\n\t\tcase 2:\n\t\t{\n\t\t\tcol[i] = (y[i] % 2) ? 2 : 4;\n\t\t\tbreak;\n\t\t}\n\t\tcase 3:\n\t\t{\n\t\t\tcol[i] = (y[i] % 2) ? 4 : 2;\n\t\t\tbreak;\n\t\t}\n\t\tcase 0:\n\t\t{\n\t\t\tcol[i] = (y[i] % 2) ? 3 : 1;\n\t\t\tbreak;\n\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tswitch (col[i])\n\t\t{\n\t\tcase 1:\n\t\t{\n\t\t\tbuild_A(x[i], y[i], i);\n\t\t\tbreak;\n\t\t}\n\t\tcase 2:\n\t\t{\n\t\t\tbuild_B(x[i], y[i], i);\n\t\t\tbreak;\n\t\t}\n\t\tcase 3:\n\t\t{\n\t\t\tAdd(s, i, W[i]);\n\t\t\tbreak;\n\t\t}\n\t\tcase 4:\n\t\t{\n\t\t\tAdd(i, t, W[i]);\n\t\t\tbreak;\n\t\t}\n\t\t}\n\t}\n\twrite(dinic());\n\treturn 0;\n}\n```\n\n",
        "postTime": 1646129942,
        "uid": 257146,
        "name": "orz_z",
        "ccfLevel": 0,
        "title": "P3756 [CQOI2017]\u8001C\u7684\u65b9\u5757"
    }
]