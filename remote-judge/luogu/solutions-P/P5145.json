[
    {
        "content": "## \u7b97\u6cd5\uff1a \u641c\u7d22\n\n\u4ee5\u9898\u610f\u53ef\u77e5\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff0c \u9898\u76ee\u5c31\u662f\u8981\u627e\u6700\u5927\u7684\u90a3\u4e2a\u73af\n\n\u5206\u4e24\u79cd\u60c5\u51b5 \uff1a\n\n1\uff09 **\u5904\u4e8e\u73af\u4e0a**\uff1a \u9e2d\u5b50\u7ed5\u73af\u4e00\u5468\uff0c\u56de\u5230\u8fd9\u4e2a\u70b9\uff0c\u7edf\u8ba1\u4e00\u4e0b\u603b\u65f6\u95f4\uff0c\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\n\n2\uff09 **\u4e0d\u5904\u4e8e\u73af\u4e0a**\uff1a \u9e2d\u5b50\u56de\u4e0d\u6765\uff0c \u4e0d\u80fd\u66f4\u65b0\u7b54\u6848\n\n\u600e\u4e48\u533a\u5206\u4e00\u4e0a\u4e24\u79cd\u60c5\u51b5\u5462\uff1f\n\n\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u628a\u7ecf\u8fc7\u7684\u70b9\u90fd\u6807\u8bb0\u4e00\u904d\uff0c\u76f4\u5230\u56de\u5230\u4e00\u4e2a\u88ab\u6807\u8bb0\u8fc7\u7684\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u662f\u8d77\u70b9\uff0c\u5c31\u4e0d\u5904\u4e8e\u73af\u4e0a\uff0c \u5982\u679c\u662f\u8d77\u70b9\u5c31\u5904\u4e8e\u73af\u4e0a\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\n\n\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316 \uff1a\n\n\u5982\u679c\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u7ecf\u8fc7\u4e86\u4e00\u4e2a\u5904\u7406\u8fc7\u7684\u70b9\uff0c\u5c31\u4e0d\u7528\u518d\u7ee7\u7eed\u5f80\u4e0b\u641c\u7d22\u4e86\uff0c\u6bcf\u6b21\u5904\u7406\u5b8c\u4e00\u4e2a\u70b9\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u4e00\u4e0b\u5c31\u884c\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define reg register \nconst int N = 100000 + 5;\n\nint n, d[N], t[N], a[N], b[N], ans, st;\n\nvoid dfs(int x, int sum) {\n    if (x==st) { ans=max(ans, sum); return; }\n    if (a[x] || b[x])return;\n    a[x]=1; dfs(d[x], sum+t[x]); a[x]=0;\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    for (reg int i=1; i<=n; ++i) scanf(\"%d%d\", &d[i], &t[i]);\n    for (st=1; st<=n; ++st) dfs(d[st], t[st]), b[st]=1;\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1546347701,
        "uid": 26023,
        "name": "_Atyou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\n\u4e0b\u96e8\u65f6\u5730\u4e0a\u4f1a\u6709\u4e00\u4e2a\u4e2a\u6c34\u5751\uff0c\u4f46\u4e00\u4e2a\u6c34\u5751\u53ea\u4f1a\u6d41\u5411\u53e6\u4e00\u4e2a\u7279\u5b9a\u7684\u6c34\u5751\uff0c\u800c\u4e14\u6c34\u4e0d\u4f1a\u56de\u6d41\u3002\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u6c34\u5751\u540c\u65f6\u6d41\u5411\u4e00\u4e2a\u6c34\u5751\u3002\u8fd9\u5929\u53c8\u4e0b\u8d77\u4e86\u96e8\u5939\u9e2d\uff0c\u6bcf\u4e2a\u6c34\u5751\u91cc\u90fd\u6f02\u6d6e\u7740\u4e00\u53ea\u9e2d\u5b50\u3002WYH\u5728\u6bcf\u4e2a\u6c34\u5751\u65c1\u6d3e\u9063\u4e86\u4e00\u4e2a\u7279\u6d3e\u5458\uff0c\u7279\u6d3e\u5458\u4f1a\u5728\u9e2d\u5b50\u4e0a\u505a\u8bb0\u53f7\u3002\u5728\u67d0\u4e00\u65f6\u523b\uff0c\u5168\u90e8\u9e2d\u5b50\u5f00\u59cb\u987a\u6c34\u6f02\u6d6e\uff0c\u540c\u65f6\u7279\u6d3e\u5458\u5f00\u59cb\u8ba1\u65f6\u3002\u5f53\u67d0\u4e2a\u7279\u6d3e\u5458\u53d1\u73b0\u4ed6\u505a\u7684\u90a3\u4e2a\u8bb0\u53f7\u7684\u9e2d\u5b50\u6f02\u6d6e\u56de\u6765\u7684\u65f6\u5019\uff0c\u4ed6\u5c31\u4f1a\u505c\u6b62\u8ba1\u65f6\uff0c\u628a\u65f6\u95f4\u4e0a\u62a5\u7ed9WYH\u3002\u73b0\u5728WYH\u63a2\u52d8\u4e86\u5730\u5f62\u540e\u628a\u6bcf\u6bb5\u6c34\u6d41\u7684\u5173\u7cfb\u4e0e\u65f6\u95f4\u544a\u8bc9\u4e86\u4f60\uff0c\u4ed6\u60f3\u77e5\u9053\u4ed6\u6240\u83b7\u5f97\u7684\u6240\u6709\u6570\u636e\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u662f\uff1f\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u4ee3\u8868\u6709n\u4e2a\u6c34\u5751\uff08\u4ece1\u5230n\u7f16\u53f7\uff09\n\n\u7b2c2~n+1\u884c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u4e2d\u7b2ci+1\u884c\u7684\u4e24\u4e2a\u6574\u6570\u4e3aDi\u4e0eTi\uff0c\u4ee3\u8868\u7b2ci\u53f7\u6c34\u5751\u7684\u6c34\u4f1a\u6d41\u5411Di\u53f7\u5751\uff0c\u6d41\u52a8\u6240\u9700\u65f6\u95f4\u4e3aTi\u3002\u4fdd\u8bc1Di\u2260i\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\n\u4e00\u4e2a\u6574\u6570\uff0c\u4ee3\u8868WYH\u624b\u4e0a\u83b7\u5f97\u7684\u7279\u6d3e\u5458\u6570\u636e\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u6570\u3002\n\n\n------------\n\n\n\u770b\u5b8c\u9898\u76ee\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u9898\u76ee\u6240\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff0c\u4ece:\n\n> \u5f53\u67d0\u4e2a\u7279\u6d3e\u5458\u53d1\u73b0\u4ed6\u505a\u7684\u90a3\u4e2a\u8bb0\u53f7\u7684\u9e2d\u5b50\u6f02\u6d6e\u56de\u6765\u7684\u65f6\u5019\uff0c\u4ed6\u5c31\u4f1a\u505c\u6b62\u8ba1\u65f6\uff0c\u628a\u65f6\u95f4\u4e0a\u62a5\u7ed9WYH\u3002\n\n\u770b\u51fa\uff0c\u672c\u9898\u6c42\u7684\u5c31\u662f\u56fe\u4e2d\u7684\u6700\u5927\u73af\uff0c\u627e\u73af\u7684\u6700\u6734\u7d20\u505a\u6cd5\u5c31\u662fDFS\u3002\u4e3a\u4e86\u4e0d\u8d85\u65f6\uff08\u4e5f\u5c31\u662f\u8df3\u8fc7\u4e00\u4e9b\u8d70\u8fc7\u7684\u548c\u8bb0\u5f55\u9014\u4e2d\u7ecf\u8fc7\u7684\u73af\uff09\uff0c\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u672c\u9898\u56fe\u7684\u6027\u8d28\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u6253\u4e0a\u6807\u8bb0\uff0c\u4f7f\u5176\u4e0d\u4f1a\u91cd\u590d\u67e5\u627e\u548c\u53ca\u65f6\u8df3\u51fa\uff08\u5177\u4f53\u4ee3\u7801\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7xtbhbis.png)\n\n\u6574\u4f53\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,to[100005],t[100005],ans;\n//n\uff1a\u9898\u76ee\u6240\u7ed9 to\uff1a\u5230\u8fbe\u70b9 t:\u8fc7\u8def\u65f6\u95f4\nint when[100005];//\u4f18\u5316\u641c\u7d22\u8fc7\u7a0b\uff0c\u8bb0\u5f55\u641c\u5230\u7684\u65f6\u95f4\nbool pd[100005];//\u5224\u65ad\u6709\u6ca1\u6709\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u627e\u5230\u8fc7\ninline int read(){//\u8bfb\u5165\u4f18\u5316\n\tint f=1,out=0;char c=getchar();\n\twhile (c>'9'||c<'0'){\n\t\tif(c=='-'){\n\t\t\tf=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\twhile(c<='9'&&c>='0'){\n\t\tout*=10,out+=c-'0';\n\t\tc=getchar();\n\t}\n\treturn f*out;\n}\ninline void dfs(int now,int num){\n\tif(when[now]){//\u5982\u679c\u5df2\u7ecf\u8d70\u5230\u8fc7\uff08\u4e5f\u5c31\u662f\u73af\uff09\n\t\tans=max(ans,num-when[now]);\n        //\u7528\u8d77\u59cb\u65f6\u95f4-\u6700\u540e\u65f6\u95f4\u5f97\u51fa\u7b54\u6848\n\t\tpd[now]=1;//\u8bb0\u5f55\uff0c\u4e0b\u4e00\u6b21\u4e0d\u8d70\n\t\treturn;//\u8fd4\u56de\n\t}\n\twhen[now]=num;\n\tdfs(to[now],num+t[now]);\n    //\u5f80\u4e0b\u4e00\u4e2a\u70b9\u8d70\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t\tto[i]=read(),t[i]=read();\n\tfor(int i=1;i<=n;i++){//\u4e00\u4e2a\u4e00\u4e2a\u70b9\u627e\n\t\tif(pd[i])continue;//\u8fd9\u4e2a\u70b9\u8d70\u8fc7\uff0c\u4e0d\u8d70\n\t\tdfs(i,0);\n\t\tmemset(when,0,sizeof(when));//\u8bb0\u5f55\u6e05\u7a7a\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1572852132,
        "uid": 138650,
        "name": "\u964c\u5c0f\u90fd\u6070\u8089\u8089",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "\u5e7f\u544a\u65f6\u95f4\uff1a\n\n\u5b89\u5229[$\\tt{BLOG}$](https://stevebraveman.github.io/)\n\n\u4e0b\u9762\u6211\u4eec\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u9898\u76ee\u4e2d\u8981\u6c42\u6c42\u51fa\u6700\u5927\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u7528tarjan\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u6765\u89e3\u51b3\u3002\n\n\u5173\u4e8e\u8fb9\u6743\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u8f6c\u6362\u4e3a\u70b9\u6743\uff0c\u7136\u540e\u518d\u5728\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u8fdb\u884c\u6c42\u548c\uff0c\u6c42\u51fa\u6700\u5927\u7684\u503c\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u5c31\u662f\u5f53\u628a\u8fb9\u6743\u8f6c\u6362\u4e3a\u70b9\u6743\u65f6\uff0c\u4e0d\u80fd\u628a\u8fb9\u6743\u8d4b\u7ed9\u53bb\u7684\u70b9\uff0c\u8981\u628a\u8fb9\u6743\u4ed8\u7ed9\u8fd9\u6761\u8fb9\u7684\u6e90\u70b9\u3002\n\n~~\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u6240\u4ee5\u6211\u624dWA\u4e86\u4e00\u6b21\uff0c\u9519\u5931\u4e86\u4e00\u904dAC\u7684\u673a\u4f1a~~\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define MAXN 1000100\nstruct Edge {\n    int v, nx;\n}e[MAXN];\ninline int min(int a, int b) {\n    if (a < b) return a;\n    else return b;\n}\ninline int max(int a, int b) {\n    if (a > b) return a;\n    else return b;\n}\nint head[MAXN], tim, st[MAXN], top, ecnt, n, m, x, y, dfn[MAXN], low[MAXN], in[MAXN], si[MAXN], num, se[MAXN], ans;\nbool vis[MAXN];\nvoid add(int f, int t) {\n    e[++ecnt] = (Edge) {t, head[f]};\n    head[f] = ecnt;\n}\nvoid tarjan(int u) {\n    dfn[u] = low[u] = ++tim;\n    st[++top] = u;\n    vis[u] = 1;\n    for (int i = head[u]; i; i = e[i].nx) {\n        int v = e[i].v;\n        if (!dfn[v]) {\n            tarjan(v);\n            low[u] = min(low[v], low[u]);\n        }\n        else if (vis[v]) low[u] = min(low[u], dfn[v]);\n    }\n    if (low[u] == dfn[u]) {\n        int v;\n        num++;\n        do {\n            v = st[top--];\n            in[v] = num;\n            vis[v] = 0;\n            si[num] += se[v];\n        } while (u != v);\n    }\n}\nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d%d\", &x, &y);\n        add(i, x);\n        se[i] = y;\n    }\n    for (int i = 1; i <= n; i++) {\n        if (!dfn[i]) tarjan(i);\n    }\n    for (int i = 1; i <= num; i++) {\n        ans = max(ans, si[i]);\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n~~\u4e0d\u8fc7\u6211\u770b\u597d\u591a\u4eba\u7684\u63d0\u4ea4\u8bb0\u5f55\u90fd\u662f\u76f4\u63a5\u7528\u4e00\u4e2adfs\u89e3\u51b3\u7684\uff0c\u96be\u9053\u6211\u60f3\u590d\u6742\u4e86\uff1f~~",
        "postTime": 1550716354,
        "uid": 96570,
        "name": "RiverFun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "\u770b\u770b\u9898\u89e3\u533a\u7684\u5927\u4f6c\u6709tarjan\u7684\uff0c\u62d3\u6251\u6392\u5e8f\u7684\uff0c\u53ef\u8c13\u662f~~\u767e\u82b1\u9f50\u653e~~\u3002\u4e0d\u8fc7\u597d\u50cf\u6709\u4eba\u8bf4\u66b4\u529b\u5224\u65ad\u662f\u5426\u56de\u5230\u539f\u70b9\u6765\u6c42\u89e3\u5438\u6c27\u4e5f\u53ea\u670950pts\uff0c\u90a3\u4e48\uff0c\u6211\u5c31\u6765\u5206\u4eab\u4e00\u4e0b\u5982\u4f55\u7528\u6700\u66b4\u529b\u7684dfs\u5224\u73af\u4e0d\u5438\u6c27\u8fc7\u6389\u8fd9\u9053\u9898\u3002\n\n\u8003\u5bdf\u77e5\u8bc6\u70b9\uff1a\n-\n\u56fe\u8bba\uff08\u56fe\u7684\u904d\u5386\uff09\uff0c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\uff0c\u56de\u6eaf\u6cd5\uff1b\n\n\u7b97\u6cd5\u601d\u8def\uff1a\n-\n\u8bfb\u5165\u6570\u636e\u65f6\u5c06i->Di\u8fde\u4e00\u6761\u6743\u4e3aTi\u7684\u8fb9\u3002\u63a5\u7740\u641c\u7d22\u6bcf\u4e2a\u8282\u70b9\uff0c\u770b\u80fd\u5426\u56de\u5230\u539f\u70b9\uff0c\u5e76\u5b9e\u65f6\u66f4\u65b0Max\u503c\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\n-\n\u5b58\u6709\u5411\u56fe\uff0c\u6ce8\u610f\u6570\u636e\u8303\u56f4\u662fn\u2264100000\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528\u90bb\u63a5\u77e9\u9635\uff0c\u6211\u4eec\u9009\u7528**\u94fe\u5f0f\u524d\u5411\u661f**\u3002\n```cpp\nfor(fint i=1;i<=n;i++)\n\tx=read(),y=read(),adds(i,x,y);\ninline void adds(int u,int v,int w)\n{\n\te[++cnt].to=v;\n\te[cnt].nxt=head[u];\n\te[cnt].val=w;\n\thead[u]=cnt;\n\treturn ;\n}\n```\n\u63a5\u4e0b\u6765\u662f\u641c\u7d22\uff0c\u6ce8\u610f**\u56de\u6eaf\u4e0e\u7ed3\u675f\u6761\u4ef6**\uff0c\u8fd8\u6709\u5343\u4e07\u8bb0\u5f97\u6bcf\u6b21\u641c\u5b8c**\u5c06tim\u5f52\u96f6**\uff01\n```cpp\nfor(fint i=1;i<=n;i++)\n\ttim=0,dfs(i,i);//\u641c\u524d\u5f52\u96f6\u597d\u4e60\u60ef\ninline void dfs(int st,int x)//st\u4e3a\u8d77\u70b9\uff0cx\u4e3a\u76ee\u524d\u4f4d\u7f6e\n{\n\tif(x==st&&vis[x])\n\t{\n\t\tmaxxs=max(maxxs,tim);//\u66f4\u65b0\n\t\treturn ;\n\t}\n\tvis[x]=1;\n\tvis[st]=0;//\u7279\u5224\u539f\u70b9\u672a\u88ab\u8bbf\u95ee\uff0c\u5426\u5219\u641c\u4e0d\u5230\u5e95\n\tfor(fint i=head[x];i;i=e[i].nxt)//\u904d\u5386\u56fe\n\tif(!vis[e[i].to])\n\ttim+=e[i].val,vis[e[i].to]=1,dfs(st,e[i].to);\n\tvis[x]=0;//\u56de\u6eaf\n\treturn ;\n}\n```\n\u5982\u679c\u4e0d\u653e\u5fc3\uff0c\u8fd8\u53ef\u4ee5\u52a0\u4e2a\u5feb\u8bfb\u4f18\u5316\u4e00\u4e0b\n```cpp\ninline int read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\n```\n\u8fd9\u6837\uff0c\u8fd9\u9053\u9898\u5c31\u7ed3\u675f\u4e86\uff0c\u5e94\u8be5\u662f\u76ee\u524d\u9898\u89e3\u533a\u6700\u66b4\u529b\u6700\u597d\u60f3\u601d\u8def\u7684\u4e00\u7bc7\u5427\uff01 _\u5feb\u6765\u8bd5\u8bd5\u5427\uff01_ \n",
        "postTime": 1590235565,
        "uid": 244059,
        "name": "king_xbz",
        "ccfLevel": 0,
        "title": "\u7206\u641c\u51fa\u5947\u8ff9\u2014\u2014\u2014\u2014\u6f02\u6d6e\u7684\u9e2d\u5b50"
    },
    {
        "content": "~~\u4ee3\u7801\u548c\u9ec4\u9898\u51e0\u4e4e\u4e00\u6837\uff0c\u8fd9\u600e\u4e48\u5c31\u84dd\u4e86~~\n\n\u8fd9\u9898\u8981\u6c42\u627e\u5230\u56fe\u4e2d\u7684\u6700\u5927\u73af\u3002\u53ef\u80fd\u7b2c\u4e00\u53cd\u5e94\u662f$Tarjan$\uff0c\u7136\u800c\u53c8\u81ed\u53c8\u957f\u4e0d\u597d\u5199\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u56fe\u4e2d\u6240\u6709\u70b9\u51fa\u5ea6\u90fd\u4e3a\u4e00\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u51fa\u53d1\u80fd\u8d70\u7684\u8def\u5f84\u552f\u4e00\uff0c\u8981\u4e48\u6210\u73af\u8981\u4e48\u65ad\u6389\u3002\u3002\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u53ef\u4ee5$O(n)$\u6c42\u51fa\u56fe\u4e2d\u6240\u6709\u70b9\u6240\u5728\u73af\u3002\n\n\u7136\u540e\u8981\u6c42\u73af\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u8003\u8651\u501f\u9274$Tarjan$\u7684\u65f6\u95f4\u6233\uff0c\u9047\u5230\u73af\u65f6\uff0c\u65f6\u95f4\u6233\u76f8\u51cf\u5c31\u662f\u73af\u7684\u5927\u5c0f\u3002\n\n\u7531\u4e8e\u8fd9\u9898\u6709\u8fb9\u6743\uff0c\u6240\u4ee5\u65f6\u95f4\u6233\u6bcf\u6b21\u7d2f\u52a0\u4e0d\u662f$1$\u800c\u662f\u8fb9\u6743\u3002\n\n\u4ee3\u7801\u6781\u5176\u7b80\u6d01\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n\nint n,a=0,tot,Next[1<<18],Time[1<<18],ans[1<<18];\nint dfn[1<<18];\n\nint dfs(int k)\n{\n    tot+=Time[k];\n    if(ans[k])return ans[k];\n    if(dfn[k])return tot-dfn[k];\n    dfn[k]=tot;\n    return ans[k]=dfs(Next[k]);\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%d%d\",Next+i,Time+i);\n    }\n    for(int i=1;i<=n;++i)a=std::max(a,dfs(i));\n    printf(\"%d\",a);\n}\n```\n\n",
        "postTime": 1562237107,
        "uid": 60489,
        "name": "\u5c0f\u83dc\u9e1f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u5f88\u6c34~~, \u968f\u624b\u4ea4\u4e86\u4e2a\u66b4\u529b\u968f\u673a\u5316\u5c31A\u4e86.\n\n\u6253\u4e2a\u5e7f\u544a, [My Blog](xciyang.github.io).\n\n### \u5206\u6790\n\n\u8fd9\u9053\u9898\u6b63\u89e3\u601d\u8def\u975e\u5e38\u5999, \u4ee3\u7801\u6bd4\u8f83\u77ed. \u4f46\u6211\u4eec\u80fd\u4e0d\u80fd\u60f3\u4e00\u4e2a\u66f4\u7b80\u5355\u7c97\u66b4\u7684\u65b9\u6cd5\u5462?\n\n\u5148\u4ea4\u4e00\u4e0b\u80fd\u88ab\u5361\u6210\u63a5\u8fd1 $ O(n^2) $ \u7684\u66b4\u529b, \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u8dd1\u4e00\u904dDFS, \u5982\u679c\u80fd\u56de\u5230\u6b64\u70b9\u5c31\u66f4\u65b0\u7b54\u6848, \u518d\u52a0\u4e00\u4e2a\u7384\u5b66\u526a\u679d, \u5c06\u8fd9\u4e2a\u73af\u4e0a\u6240\u6709\u70b9\u6253\u6807\u8bb0, \u8fd9\u4e9b\u70b9\u5c31\u4e0d\u7528\u518dDFS\u4e86.\n\n\u5f00O2\u540e, \u53ea\u670950\u5206, \u5f88\u60e8, \u96be\u4e0d\u6210\u662f\u7528cin\u7684\u539f\u56e0?\n\n```cpp\n// luogu-judger-enable-o2\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\nusing namespace std;\nint n, tox[100001], toy[100001], rex[100001], tmpx, ans, walkpast[100001], lw[100001];\nvoid dfs(int nown) {\n    memcpy(walkpast, lw, sizeof(walkpast));\n    int sum= 0, to= nown;\n    while(!walkpast[to]) {\n        walkpast[to]= 1;\n        sum+= toy[to], to= tox[to];\n    }\n    if(to != nown) return;\n    memcpy(lw, walkpast, sizeof(walkpast));\n    ans= max(ans, sum);\n    return;\n}\nint main() {\n    cin >> n;\n    for(int i= 1; i <= n; i++) cin >> tox[i] >> toy[i], rex[tox[i]]= i;\n    for(int i= 1; i <= n; i++)\n        if(!walkpast[i]) dfs(i);\n    cout << ans << endl;\n    return 0;\n}\n```\n\n\u8003\u8651\u4f18\u5316, \u5176\u5b9e\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u7384\u5b66\u8fc7\u53bb\u7684 ~~\u5148\u628acin\u6362\u6210scnaf~~.\n\n\u7136\u540e\u6211\u4eec\u52a0\u4e86\u5224\u65ad\u6709\u73af, \u4f46\u6b64\u70b9\u4e0d\u5728\u73af\u4e0a\u7684\u4e00\u4e2a\u5c0f\u526a\u679d.\n\n```cpp\n    if(to != nown) {\n        lw[nown]= 1;\n        return;\n    }\n```\n\u901a\u4fd7\u4e00\u70b9\u8bb2, \u8ba9\u4ee5\u540e\u5230\u8fbe\u8fd9\u4e2a\u70b9\u7684\u9e2d\u5b50\u90fd\u77e5\u9053\u81ea\u5df1\u7684\u6c34\u5751\u4e0d\u5728\u73af\u91cc\u5c31\u4e0d\u7528\u7ee7\u7eed\u641c\u4e86.\n\n\u8981\u662f\u8fd8T\u600e\u4e48\u529e, \u90a3\u6539\u4e00\u4e0b\u641c\u7d22\u987a\u5e8f\u8bf4\u4e0d\u5b9a\u5c31A\u4e86, \u4e3a\u4e86\u9632\u6b62\u4ece N \u5230 1 \u4e00\u6761\u94fe\u5361\u66b4\u529b\u7684\u60c5\u51b5, \u6211\u9009\u62e9\u968f\u673a\u8d77\u70b9, \u518d\u52a0\u4e00\u4e2a\u5361\u65f6\u9650.\n\n### \u4ee3\u7801:\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <time.h>\n#include <stdlib.h>\nusing namespace std;\nint n, tox[100001], toy[100001], rex[100001], tmpx, ans, walkpast[100001], lw[100001];\nvoid dfs(int nown) {\n\tmemcpy(walkpast, lw, sizeof(walkpast));\n\tint sum= 0, to= nown;\n\twhile(!walkpast[to]) {\n\t\twalkpast[to]= 1;\n\t\tsum+= toy[to], to= tox[to];\n\t}\n\tif(to != nown) {\n\t\tlw[nown]= 1;\n\t\treturn;\n\t}\n\tmemcpy(lw, walkpast, sizeof(walkpast));\n\tans= max(ans, sum);\n\treturn;\n}\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i= 1; i <= n; i++) scanf(\"%d%d\", tox + i, toy + i), rex[tox[i]]= i;\n\twhile(clock() < CLOCKS_PER_SEC * 0.9) {\n\t\tint tmpx= rand() % n + 1;\n\t\tif(!walkpast[tmpx]) dfs(tmpx);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1558515153,
        "uid": 109815,
        "name": "Ciyang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "\u6b64\u9898\u8981\u6c42\u4ece\u57fa\u73af\u6811\u68ee\u6797\u4e2d\u627e\u4e00\u4e2a\u6700\u5927\u7684\u73af\u3002\n\n\u5f88\u76f4\u89c2\u7684\u4e00\u4e2a\u505a\u6cd5\uff1a\u62d3\u6251\u628a\u6240\u6709\u73af\u627e\u51fa\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u73af\u90fddfs\u4e00\u904d\uff0c\u6c42\u51fa\u6bcf\u4e2a\u73af\u7684\u5927\u5c0f\u3002\n\n\u62d3\u6251\u4e4b\u540e\u8fd8\u6709\u5165\u5ea6\u7684\u70b9\u5373\u4e3a\u5728\u73af\u4e0a\u7684\u70b9\uff0cdfs\u7684\u65f6\u5019\u9047\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\u8bf4\u660e\u56de\u5230\u7684\u8fd9\u4e2a\u73af\u7684\u8d77\u70b9\uff0c\u8bb0\u5f55\u5927\u5c0f\uff0creturn\u5c31\u53ef\u4ee5\u4e86\u3002\n\nps\uff1a\u8fd9\u9898\u4e0d\u7528\u5efa\u56fe\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u5199\u7684\u7b26\u5408\u4e60\u60ef\uff0c\u8fd8\u662f\u62ff\u90bb\u63a5\u8868\u5efa\u4e86\u4e00\u4e2a\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans,idx;\nint head[100010],ru[100010];\nstruct node{\n\tint nxt,to,w;\n}edge[100010];\nvoid add(int u,int v,int w)\n{\n\tedge[++idx].nxt=head[u];\n\tedge[idx].to=v;\n\tedge[idx].w=w;\n\thead[u]=idx;\n}\nvoid topo(){\n\tqueue<int> q;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!ru[i])\n\t\tq.push(i);\n\t}\n\twhile(q.size())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[x];i;i=edge[i].nxt)\n\t\t{\n\t\t\tint v=edge[i].to;\n\t\t\tru[v]--;\n\t\t\tif(!ru[v])\n\t\t\t{\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dfs(int x,int len)\n{\n\tif(!ru[x])\n\t{\n\t\tans=max(ans,len);\n\t\treturn ;\n\t}\n\tru[x]--;\n\tfor(int i=head[x];i;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tdfs(v,len+edge[i].w);\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint d,w;\n\t\tcin>>d>>w;\n\t\tadd(i,d,w);\n\t\tru[d]++; \n\t}\n\ttopo();//\u62d3\u6251\u5b8c\u4e4b\u540e\u8fd8\u6709\u5165\u5ea6\u7684\u70b9\u5c31\u662f\u5728\u73af\u4e0a\u7684\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ru[i])\n\t\t{\n\t\t\tdfs(i,0);\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1606561696,
        "uid": 250699,
        "name": "Herkaii",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "# \u62d3\u6251\u52a0Dfs\n\u770b\u5230\u672c\u9898\uff0c\u672c\u849f\u84bb\u5c31\u53d1\u73b0\u8fd9\u9898\u662f\u627e\u73af\uff0c\u4e8e\u662f\u62d3\u6251\u77ac\u95f4\u6d6e\u73b0\u5728\u773c\u524d\n\n\u8fd9\u91cc\u666e\u53ca\u4e00\u4e0b\uff1a\u5982\u4f55\u7528\u62d3\u6251\u6765\u627e\u73af\n\n\u6211\u4eec\u6bcf\u6b21\u53bb\u627e\u5165\u5ea6\u4e3a0\u7684\u70b9\u8ba9\u4ed6\u4eec\u5f39\u51fa\uff0c\u8fd9\u662f\u62d3\u6251\u7684\u57fa\u672c\u601d\u60f3\uff0c\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u5df2\u7ecf\u6ca1\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u65f6\uff0c**\u8fd8\u6709\u4e00\u4e9b\u70b9\u6ca1\u6709\u6392\u5e8f\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u56fe\u4e2d\u6709\u73af\u3002**\n\n### \u4f46\u662f\n\n\u8fd9\u9898\u662f\u627e\u6700\u5927\u73af\uff0c\u62d3\u6251\u53ea\u80fd\u627e\u5230\u662f\u5426\u6709\u73af\uff0c\u8fd9\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u5728\u786e\u5b9a\u662f\u73af\u7684\u70b9\u8dd1Dfs\uff0c\u5982\u679c\u53ef\u4ee5\u8fd4\u56de\u539f\u70b9\u5c31\u6bd4\u8f83\u73b0\u5728\u73af\u7684\u957f\u5ea6\u548c\u6700\u4f18\u7b54\u6848\n\n~~\u867d\u7136\u8dd1\u7684\u6162\uff0c\u4f46\u662f\u601d\u8def\u51fa\u7684\u5feb\u554a\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[3131300],ru[1233100],chu[131300],vis[1001400],t1[1000032];\nint n,m,l,r,s,e,ji=-1;\nstruct node{\n\tint t,w;\n};\nqueue<int>q;\nvector<node>g[1333130];\nvoid dfs(int x,int y,int ans){\n\tif(x==y&&ans!=0){\n\t\tji=max(ji,ans);\n\t\treturn ; \n\t}\n\tfor(int i=0;i<g[x].size();i++)\n\t{\tvis[g[x][i].t]=1;\n\t\tdfs(g[x][i].t,y,ans+g[x][i].w);\n\t}\n} \ninline int read(){\n\tregister int x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tt1[i]=read();\n\t\tru[a[i]]++;\n\t\tg[i].push_back((node){a[i],t1[i]});\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(ru[i]==0)\n\t\tq.push(i);\n\t}\n\twhile(!q.empty()){\n\t\tint r=q.front();\n\t\tvis[r]=1;\n\t\tq.pop();\n\t\tfor(int i=0;i<g[r].size();i++)\n\t\t{\n\t\tru[g[r][i].t]--;\n\t\tif(ru[g[r][i].t]==0)\n\t\tq.push(g[r][i].t);\t\n\t\t} \n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(vis[i]==0)\n\t\tdfs(i,i,0);\n\t}\n\tprintf(\"%d\",ji);\n}\n```\n\u8c22\u8c22\u89c2\u770b",
        "postTime": 1606492220,
        "uid": 238419,
        "name": "Phoenix_chaser",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u5c31\u662f\u4e00\u9053 $Tarjan$ \u6a21\u677f\u9898\uff0c\u4e2a\u4eba\u89c9\u5f97\u5e76\u4e0d\u662f\u5f88\u96be\n\n\u5c31\u5f88\u6a21\u677f\u3002\n\n\u8fd9\u9053\u9898\u6709 $n$ \u4e2a\u70b9\uff0c $n$ \u6761\u8fb9\uff0c\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u7247\u57fa\u73af\u6811\u68ee\u6797\n\n\u800c\u4e14\u7279\u5f81\u660e\u663e\uff0c\u4e00\u4e2a\u70b9\u5982\u679c\u5728\u73af\u4e0a\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u53ef\u4ee5\u8d70\u5230\u81ea\u5df1\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u5728\u90a3\u4e48\u4e00\u5b9a\u8d70\u4e0d\u5230\n\n\u540c\u65f6\u5728\u73af\u4e0a\uff0c\u5b83\u8d70\u56de\u6765\u7684\u6700\u5927\u8ddd\u79bb\u4e5f\u662f\u4e00\u5b9a\u7684\uff0c\u5373\u73af\u5185\u6240\u6709\u8fb9\u8fb9\u6743\u503c\u7684\u548c\uff1a\n\n\u6240\u4ee5\u8dd1\u4e00\u904d $Tarjan$ \uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e00\u6761\u8fb9\n\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(2 \\times  n)$ \u7684\n\n# code\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int SIZE = 1e5 + 50;\n\ninline int read()\n{\n\tint x = 0,f = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9')\n\t{\n\t\tif (ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn f * x;\n}\n\nint n,num_edge,tot,cnt,top,ans;\nint head[SIZE],dfn[SIZE],low[SIZE],belong[SIZE],stc[SIZE],siz[SIZE];\nbool instack[SIZE],vis[SIZE];\nstruct node\n{\n\tint to,nxt,val;\n};\nnode edge[SIZE];\n\ninline void add(int u,int v,int val)\n{\n\tedge[++num_edge].to = v;\n\tedge[num_edge].nxt = head[u];\n\tedge[num_edge].val = val;\n\thead[u] = num_edge;\n}\n\ninline void tarjan(int u)\n{\n\tdfn[u] = low[u] = ++tot;\n\tinstack[u] = true;\n\tstc[++top] = u;\n\tfor (int i = head[u]; i ; i = edge[i].nxt)\n\t{\n\t\tint v = edge[i].to;\n\t\tif (!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u] = min(low[u],low[v]);\n\t\t}\n\t\telse if (instack[v])\n\t\t{\n\t\t\tlow[u] = min(low[u],low[v]);\n\t\t}\n\t}\n\tif (dfn[u] != low[u]) return ;\n\tcnt++;\n\tint tmp;\n\tdo\n\t{\n\t\ttmp = stc[top--];\n\t\tinstack[tmp] = false;\n\t\tbelong[tmp] = cnt;\n\t} while (tmp != u);\n}\n\n\nint main()\n{\n\tn = read();\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tint x = read(),val = read();\n\t\tadd(i,x,val);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (!dfn[i]) tarjan(i);\n\t}\n\tfor (int u = 1; u <= n; ++u)\n\t{\n\t\tfor (int i = head[u]; i ; i = edge[i].nxt)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif (belong[u] == belong[v])\n\t\t\t{\n\t\t\t\tsiz[belong[u]] += edge[i].val;\n\t\t\t\tans = max(ans,siz[belong[u]]);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1603433767,
        "uid": 129390,
        "name": "yangwenbin",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "## \u62d3\u6251\u6392\u5e8f\u6c42\u73af\u7684\u6700\u503c\n\n\u73af\u4e0a\u6709\u5f88\u591a\u79cd\u95ee\u9898\uff0c\u4e5f\u6709\u5f88\u591a\u79cd\u89e3\u6cd5\uff0c\u5982\u5e76\u67e5\u96c6\u6c42\u6700\u5c0f\u73af\uff0cspfa\u5224\u8d1f\u73af\u7b49\u7b49\uff0c\u800c\u4eca\u5929\u4ecb\u7ecd\u7684\u662f\u62d3\u6251\u6392\u5e8f\u6cd5\n\n### \u9996\u5148\u53ef\u4ee5\u8bf4\u4e0b\u539f\u7406\n\n\u62d3\u6251\u6392\u5e8f\u7684\u8fc7\u7a0b\u6709\u70b9\u50cfbfs\uff0c\u90fd\u662f\u628a\u4e00\u4e2a\u70b9\u62ff\u51fa\u6765\uff0c\u904d\u5386\u5b83\u7684\u5b50\u8282\u70b9\uff0c\u7136\u540e\u5b50\u8282\u70b9\u5165\u5ea6\u51cf\u4e00\uff0c\u5982\u679c\u4e3a\u96f6\u5c31\u52a0\u5165\u961f\u5217\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u73af\u6709\u4e2a\u5f88\u91cd\u8981\u7684\u6027\u8d28\uff0c\u5c31\u662f\u73af\u4e0a\u662f\u6ca1\u6709\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u7684\uff0c\u4e8e\u662f\u5bf9\u539f\u56fe\u8fdb\u884c\u4e00\u904d\u62d3\u6251\u6392\u5e8f\uff0c\u8fd8\u6ca1\u6709\u8fdb\u961f\u7684\u5143\u7d20\u5c31\u662f\u73af\u4e0a\u7684\u70b9\u3002\n\n\u5982\u4f55\u5224\u65ad\u662f\u5426\u8fdb\u961f\u80fd\uff1f\u53ea\u9700\u8981\u770b\u6392\u5e8f\u540e\u5165\u5ea6\u662f\u5426\u4e3a\u96f6\u5373\u53ef\n\n\u627e\u5230\u4e00\u4e2a\u5143\u7d20\u540e\u5bf9\u5b83\u76f4\u63a5\u5e7f\u641c\uff0c\u9047\u5230\u4e0d\u662f\u73af\u4e0a\u7684\u70b9\u5c31\u8df3\u8fc7\uff0c\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\n\n\u8fd9\u79cd\u65b9\u6cd5\u9002\u5408\u6c42\u6700\u5927/\u5c0f\u503c\uff0c\u6ca1\u6709\u8fb9\u6743\u4e5f\u53ef\u4ee5\n\n### CODE\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 1e5+5;\n\nstruct Edge\n{\n\tint to,nex,val;\n}E[maxn<<1];\nint head[maxn],in[maxn];\nint n,ans,cnt;\nqueue<int> q;\n\ninline int read()\n{\n\tchar c = getchar();int x = 0,f = 1;\n\twhile(c<'0'||c>'9') {if(c=='-')f = -1;c = getchar();}\n\twhile(c>='0'&&c<='9') {x = x*10+c-'0';c = getchar();}\n\treturn x*f;\n}\n\ninline void add(int u,int v,int w)\n{\n\tcnt ++;\n\tE[cnt].to = v;\n\tE[cnt].val = w;\n\tE[cnt].nex = head[u];\n\thead[u] = cnt;\n}\n\nvoid topo()\n{\n\tfor(int i = 1;i<=n;++i)\n\t\tif(!in[i]) q.push(i);\n\twhile(!q.empty())\n\t{\n\t\tint u = q.front();q.pop();\n\t\tfor(int i = head[u];i != -1;i = E[i].nex)\n\t\t{\n\t\t\tint v = E[i].to;\n\t\t\tin[v]--;\n\t\t\tif(!in[v]) q.push(v);\n\t\t}\n\t}\n}\n\nvoid get(int x)\n{\n\tint tot = 0;\n\tqueue<int> p;\n\tp.push(x);\n\twhile(!p.empty())\n\t{\n\t\tint u = p.front();p.pop();\n\t\t//if(!in[u]) continue;\n\t\tfor(int i = head[u];i != -1;i = E[i].nex)\n\t\t{\n\t\t\tint v = E[i].to;\n\t\t\tif(!in[v]) continue;\n\t\t\ttot += E[i].val;\n\t\t\tin[v]--;p.push(v);\n\t\t}\n\t}\n\tans = max(ans,tot);\n}\n\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tn = read();\n\tfor(int i = 1;i<=n;++i)\n\t{\n\t\tint x = read();int y = read();\n\t\tadd(i,x,y);in[x] ++;\n\t}\n\ttopo();\n\tfor(int i = 1;i<=n;++i)\n\t\tif(in[i]) get(i);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\u795d\u5927\u5bb6csp2019 rp++\uff0cscore++\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1573654109,
        "uid": 186840,
        "name": "QMQMQM4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "### \u88f8\u7684\u6700\u5927\u73af\u95ee\u9898\n\n#### \u7531\u4e8e\u56fe\u662f\u5355\u5411\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528tarjan\u6765\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u628a\u6bcf\u4e2a\u73af\u4e2d\u6bcf\u4e2a\u8fb9\u7684\u65f6\u95f4\u7d2f\u52a0\u8d77\u6765\uff0c\u6700\u540e\u6253\u4e2a\u64c2\u53f0\u7edf\u8ba1\u6700\u5927\u7684\u5c31\u884c\u4e86\u3002\n\n#### \u4ee3\u7801:\n```\n\n#include <iostream> \n#include <vector>\n#include <stack>\nusing namespace std;\nconst int MAXN=501000;\nstack<int> s;\nint n,m,x[MAXN],y[MAXN],dfn[MAXN],low[MAXN],color[MAXN],vis[MAXN],used[MAXN],in[MAXN],f[MAXN],a[MAXN],b[MAXN];\nint colornum; \nvector<int> G[MAXN];\nint cnt;\nvoid tarjan(int u)//tarjan\u6a21\u677f\uff0c\u4e0d\u89e3\u91ca\n{\n    cnt++;\n    dfn[u]=low[u]=cnt;\n    used[u]=true;\n    s.push(u);\n    vis[u]=true;\n    for(int i=0; i<G[u].size(); i++)\n    {\n        int v=G[u][i];\n        if(!dfn[v])\n        {\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else\n        {\n            if(vis[v])\n            {\n                low[u]=min(low[u],dfn[v]);\n            }\n        }\n    }\n    if(dfn[u]==low[u])\n    {\n        colornum++;\n        while(s.top()!=u)\n        {\n            int t=s.top();\n            s.pop();\n            color[t]=colornum;\n            vis[t]=false;\n        }\n        s.pop();\n        color[u]=colornum;\n        vis[u]=false;\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1; i<=n; i++)\n    {\n    \tcin>>x[i]>>y[i];\n        G[i].push_back(x[i]);//\u5efa\u56fe\n    }\n    for(int i=1; i<=n; i++)\n    if(!used[i]) tarjan(i);\n    for(int i=1; i<=n; i++)\n    {\n    \tb[color[i]]+=y[i];//\u7d2f\u52a0\n    }\n    int ans=0;\n    for(int i=1; i<=colornum; i++)\n    {\n    \tif(b[i]!=1)ans=max(ans,b[i]);//\u6253\u64c2\u53f0\uff0c\u6c42\u6700\u5927\u503c\n    }\n    cout<<ans;\n    return 0;\n}\n```\n[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.org/problemnew/show/P2661)",
        "postTime": 1545574404,
        "uid": 42443,
        "name": "06ray",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5145 \u3010\u6f02\u6d6e\u7684\u9e2d\u5b50\u3011"
    },
    {
        "content": "\u9898\u76ee\u4f20\u9001\u95e8\uff1a[P5145 \u6f02\u6d6e\u7684\u9e2d\u5b50](https://www.luogu.org/problem/P5145)\n\n\u8fd9\u9898\u8981\u6c42\u627e\u5230\u56fe\u4e2d\u7684\u6700\u5927\u73af\uff0c\u7531\u4e8eTarjan\u6c42\u8054\u901a\u5206\u91cf\u592a\u957f\uff0c\u8003\u8651\u76f4\u63a5\u8fdb\u884c\u641c\u7d22\u3002\n\n\u9898\u76ee\u4e2d\u7684\u9e2d\u5b50\u4e00\u5171\u53ea\u5b58\u5728\u4e24\u79cd\u60c5\u51b5\uff1a\n1. \u80fd\u56de\u5230\u81ea\u5df1\u7684\n2. \u4e0d\u80fd\u56de\u5230\u81ea\u5df1\u7684\n\n\u7531\u4e8e\u6b64\u9898\u4e2d\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u5373\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u5747\u4e3a\u4e00\uff0c\u53ef\u4ee5\u8003\u8651\u5148\u5220\u53bb\u6240\u6709\u4e0d\u80fd\u56de\u5230\u81ea\u5df1\u7684\u70b9\uff0c\u7136\u540e\u5728\u5269\u4e0b\u7684\u8fd9\u4e9b\u73af\u4e2d\u627e\u5230\u6700\u5927\u7684\u5373\u53ef\u3002\n\n\u9996\u5148\u8003\u8651\u5982\u4f55\u5220\u53bb\u4e0d\u80fd\u56de\u5230\u81ea\u5df1\u7684\u70b9\u3002\u663e\u7136\uff0c\u8fd9\u4e9b\u4e0d\u80fd\u56de\u5230\u81ea\u5df1\u7684\u70b9\u4e00\u5b9a\u5728\u8fd9\u4e2a\u73af\u7684\u5916\u5411\u94fe\u4e0a\uff0c\u90a3\u4e48\uff0c\u5fc5\u7136\u5b58\u5728\u5165\u5ea6\u4e3a0\u7684\u70b9\u4f5c\u4e3a\u8fd9\u6761\u94fe\u7684\u521d\u59cb\u70b9\u3002\u56e0\u6b64\uff0c\u4ece\u6bcf\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\u5f00\u59cb\u5220\u70b9\u5373\u53ef\u5220\u5b8c\u3002\n```cpp\nvoid del(int i) {\n    while(in[i] == 0) {\n        inq[i] = 1;//\u8bb0\u5f55\u5f53\u524d\u70b9\u5df2\u7ecf\u88ab\u904d\u5386\u8fc7\uff08\u5220\u53bb\uff09\n        in[nxt[i]]--;//\u4e0b\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u51cf1\n        i = nxt[i];//\u5411\u4e0b\u904d\u5386\n    }\n}\n```\n\u63a5\u4e0b\u6765\u8fdb\u884c\u6c42\u6bcf\u4e2a\u73af\u7684\u957f\u5ea6\u3002\u663e\u7136\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u5bf9\u6bcf\u4e2a\u73af\u8fdb\u884c\u88f8\u7684bfs\u5206\u522b\u6c42\u6bcf\u4e2a\u73af\u7684\u957f\u5ea6\u3002\n```cpp\nint bfs(int st) {\n    int ans = 0;//\u8bb0\u5f55\u5f53\u524d\u73af\u7684\u5927\u5c0f\n    while(!inq[st]) {\n        ans += cost[st];\n        inq[st] = 1;\n        st = nxt[st];//\u904d\u5386\u73af\n    }\n    return ans;//\u8fd4\u56de\u73af\u7684\u5927\u5c0f\n}\n```\n\u81f3\u6b64\uff0c\u8fd9\u9053\u9898\u7684\u4e3b\u8981\u7b97\u6cd5\u90e8\u5206\u5c31\u88ab\u5b8c\u7f8e\u89e3\u51b3\u4e86\u3002\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#define MAXN 100010\nusing namespace std;\n\nint in[MAXN],nxt[MAXN],cost[MAXN],inq[MAXN];\n\nvoid del(int i) {\n    while(in[i] == 0) {\n        inq[i] = 1;\n        in[nxt[i]]--;\n        i = nxt[i];\n    }\n}\n\nint bfs(int st) {\n    int ans = 0;\n    while(!inq[st]) {\n        ans += cost[st];\n        inq[st] = 1;\n        st = nxt[st];\n    }\n    return ans;\n}\n\nint main() {\n    int n;\n    cin>>n;\n    for(int i = 1; i <= n; i++) {\n        cin>>nxt[i]>>cost[i];\n        in[nxt[i]]++;\n    }\n    for(int i = 1; i <= n; i++) if(!inq[i]) del(i);\n    int ans = 0;\n    for(int i = 1; i <= n; i++) ans = max(ans, bfs(i));\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1571309304,
        "uid": 82672,
        "name": "0nullptr",
        "ccfLevel": 0,
        "title": "P5145 \u6f02\u6d6e\u7684\u9e2d\u5b50 \u9898\u89e3"
    }
]