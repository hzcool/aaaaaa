[
    {
        "content": "\u663e\u7136\u3002\u3002\u53ef\u4ee5\u76f4\u63a5\u5feb\u6392\u4e00\u4e0b\u7136\u540e\u778e\u641e\u554a\u3002\u3002\n\n\u7c7b\u4f3c\u4e8e\u533a\u95f4\u5dee\u5206\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,sum,ans;\nstruct lsg{int x,y;}a[2000000];\nbool pd(lsg x,lsg y){return x.x<y.x||x.x==y.x&&x.y>y.y;}//\u5feb\u6392\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n;for (int i=1;i<=n;i++)cin>>a[i].x>>a[i+n].x,a[i].y=1,a[i+n].y=-1;//\u5dee\u5206\n    sort(a+1,a+1+n*2,pd);\n    for (int i=1;i<=n*2;i++)sum+=a[i].y,ans=max(ans,sum);\n    cout<<ans<<endl;\n}\n```",
        "postTime": 1507203346,
        "uid": 44165,
        "name": "Starria\u7684\u8111\u6b8b\u7c89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3028 \u3010[USACO10OCT]\u6c7d\u6c34\u673aSoda Machine\u3011"
    },
    {
        "content": "\u819c\u62dc\u90a3\u4e9b\u7528\u6570\u636e\u7ed3\u6784\u7684\u5927\u4f6c\u3002\u3002\u3002\n\n\u6211\u8fd8\u662f\u5f31\u5f31\u5730\u53d1\u4e00\u4e2a\u5dee\u5206+\u79bb\u6563\u5316\u7684\u4ee3\u7801\u5427\uff0c\u611f\u89c9\u633a\u6162\u7684\uff0c\u4f46\u4e2a\u4eba\u611f\u89c9\u7b80\u6d01\u660e\u4e86\u3002\n\n\u5dee\u5206\u601d\u60f3\u6211\u4e0d\u591a\u8d58\u8ff0\uff0c\u4e0d\u61c2\u7684\u540c\u5b66\u8bf7\u53f3\u8f6c\u767e\u5ea6\u3002\u3002\n\n\u5dee\u5206\u6a21\u677f\n```cpp\nint delta[];//\u5dee\u5206\u6570\u7ec4\nfor(int i=1;i<=n;i++)\n{\n\tint l,r;//\u9700\u8981\u4fee\u6539\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\n    delta[l]++;                 \n    delta[r+1]--;                     \n}                     \nfor(int i=1;i<=(\u9898\u76ee\u8981\u6c42\u7684\u8303\u56f4);i++)\n{\n\u4e4b\u540e\u6309\u9898\u610f\u6765\u3002\u3002\u3002\n}\n```\n\n\n\u5173\u952e\u5c31\u662f\u8fd9\u4e2a\u79bb\u6563\u5316\uff0c\u8003\u8bd5\u7684\u65f6\u5019\u6ca1\u6709\u79bb\u6563\u5316\uff0c\u6570\u636e\u8303\u56f4\u8fc7\u5927\uff0c\u5bfc\u81f4\u53ea\u670940\u5206\uff08\u6d1b\u8c37\u4e0a\u6ca1\u6709\u4ea4\u8fc7\uff0c\u4f46\u9898\u89e3\u4e2d\u4f3c\u4e4e\u770b\u5230\u6709\u4eba\u6ca1\u7528\u79bb\u6563\u5316qwq\uff09\u3002\u3002\u3002 \u4ee5\u540e\u53ef\u5f97\u957f\u70b9\u5fc3\u4e86\u3002\u3002\u3002\n\n\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define maxn 100001\nstruct node\n{\n    ll x,y;\n}num[maxn];\nll op[maxn],t[maxn],n,cnt=0,h[maxn],ans;\nint main()\n{\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld%lld\",&num[i].x,&num[i].y);\n        op[++cnt]=num[i].x;\n        op[++cnt]=num[i].y;\n    }\n    sort(op+1,op+1+cnt);\n    int m=unique(op+1,op+1+cnt)-op-1;\n    for(int i=1;i<=n;i++)\n    {\n        ll l=lower_bound(op+1,op+1+cnt,num[i].x)-op;\n        ll r=lower_bound(op+1,op+1+cnt,num[i].y)-op;\n        h[l]++;\n        h[r+1]--;\n    }\n    for(int i=1;i<=2*n;i++)\n    {\n        h[i]+=h[i-1];\n        ans=max(ans,h[i]);\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\u6709\u95ee\u9898\u5728\u53f3\u65b9\u5199\u4e0b\u4f60\u7684\u8bc4\u8bba\uff0c\u8c22\u8c22\uff01\n\n",
        "postTime": 1563092091,
        "uid": 94531,
        "name": "Watermatter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3028 \u3010[USACO10OCT]\u6c7d\u6c34\u673aSoda Machine\u3011"
    },
    {
        "content": "\u9898\u76ee\u7684\u672c\u8d28\u5c31\u662f\u6c42\u6570\u5217\u4e0a\u7684\u4e00\u4e2a\u70b9\u6700\u591a\u88ab\u591a\u5c11\u4e2a\u533a\u95f4\u6240\u8986\u76d6\u3002\n\n\u6b64\u9898\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u505a\uff0c\u4f46\u6570\u636e\u91cf\u5f88\u5927\uff0c\u9700\u8981\u5148\u79bb\u6563\u5316\uff0c\u9884\u9632MLE\u3002\n\n\u79bb\u6563\u5316\uff1a\n\n\u5efa\u7acb\u4e00\u4e2ac\u6570\u7ec4\uff0c\u5f80\u91cc\u9762\u6dfb\u52a0\u6240\u6709\u8f93\u5165\u7684\u70b9\u7f16\u53f7\u3002\u4e3a\u907f\u514d\u91cd\u590d\uff0c\u53ef\u5229\u7528STL\u7684list\u53bb\u91cd\uff0c\u518d\u4f9d\u6b21\u52a0\u5165c\u6570\u7ec4\u4e2d\u3002\u4e3a\u9884\u9632TLE\uff0c\u7528\u4e8c\u5206\u67e5\u627e\u5bfb\u627e\u70b9\u7684\u4f4d\u7f6e\u3002\n\n\u7ebf\u6bb5\u6811\uff1a\n\n\u5bf9\u6bcf\u4e00\u4e2a\u8303\u56f4\uff0c\u5728\u7ebf\u6bb5\u6811\u4e2d\u6dfb\u52a01\uff0c\u76f4\u63a5\u6dfb\u52a0\u5230lazy\u4e0a\u5c31\u884c\uff0cchange\u65f6\u662f\u5426\u4e0b\u653e\u65e0\u6240\u8c13\uff08\u6211\u5199\u4e86\uff09\uff0cquery\u65f6\u7edf\u4e00\u4e0b\u653e\u3002\n\n\u4e0b\u653elazy\u7528\u51fd\u6570pushdown\u3002\n\n\u4e4b\u540e\u5728\u6700\u5e95\u5c42\u70b9\u5bfb\u627elazy\u6700\u5927\u503c\uff0c\u5373\u7ed3\u679c\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <list>\nusing namespace std;\nconst int MAXN=500005;//\u6570\u7ec4\u8981\u5f00\u5927\u4e00\u4e9b\uff0c\u5426\u5219\u4f1aRE/WA\nstruct Node\n{\n    int left,right;\n    int lazy;\n}t[2*MAXN];\nint n,a[MAXN],b[MAXN],c[2*MAXN],size;\nlist<int> lst;//\u5b9a\u4e49STL list\nlist<int>::iterator it;//\u8fed\u4ee3\u5668\n//\u5efa\u6811\nvoid buildtree()\n{\n    int ln=1;\n    while(ln<size) ln*=2;\n    for(int i=ln; i<=ln*2; i++)\n    {\n        t[i].left=t[i].right=i-ln+1;\n        t[i].lazy=0;\n    }\n    for(int i=ln-1; i>=1; i--)\n    {\n        t[i].left=t[i<<1].left;\n        t[i].right=t[i<<1|1].right;\n        t[i].lazy=0;\n    }\n}\nvoid change(int id,int l,int r)\n{\n    if(t[id].left==l && t[id].right==r)\n    {\n        t[id].lazy++;\n        return;\n    }\n    if(t[id].lazy!=0)\n    {\n        t[id<<1].lazy+=t[id].lazy;\n        t[id<<1|1].lazy+=t[id].lazy;\n        t[id].lazy=0;\n    }\n    if(t[id<<1].right>=r) change(id<<1,l,r);\n    else if(t[id<<1|1].left<=l) change(id<<1|1,l,r);\n    else\n    {\n        change(id<<1,l,t[id<<1].right);\n        change(id<<1|1,t[id<<1|1].left,r);\n    }\n}\n//\u4e0b\u653elazy\u51fd\u6570\nvoid pushdown(int id)\n{\n    if(t[id].left==t[id].right) return;\n    if(t[id].lazy!=0)\n    {\n        t[id<<1].lazy+=t[id].lazy;\n        t[id<<1|1].lazy+=t[id].lazy;\n        t[id].lazy=0;\n    }\n    pushdown(id<<1);\n    pushdown(id<<1|1);\n}\nint query()\n{\n    pushdown(1);\n    int ans=-1,ln=1;\n    while(ln<size) ln*=2;\n    for(int i=ln; i<ln*2; i++) ans=max(ans,t[i].lazy);\n    return ans;\n}\n//\u4e8c\u5206\u67e5\u627e\nint binarySearch(int x)\n{\n    int l=1,r=size,mid;\n    while(l<=r)\n    {\n        mid=(l+r)/2;\n        if(c[mid]==x) return mid;\n        else if(c[mid]>x) r=mid-1;\n        else l=mid+1;\n    }\n    return mid;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; i++)\n    {\n        scanf(\"%d%d\",&a[i],&b[i]);\n        lst.push_back(a[i]);//\u5c06\u6bcf\u4e2a\u70b9\u7f16\u53f7\u653e\u5165list\u5185\n        lst.push_back(b[i]);\n    }\n    lst.sort();//list\u5fc5\u987b\u6392\u5e8f\uff0cunique\u51fd\u6570\u53bb\u91cd\u53ea\u80fd\u53bb\u76f8\u90bb\u7684\n    lst.unique();//\u53bb\u91cd\n    for(it=lst.begin(); it!=lst.end(); it++)\n    {\n        size++;//\u5728\u5faa\u73af\u65f6\u987a\u4fbf\u6c42\u51fac\u6570\u7ec4\u5927\u5c0f\n        c[size]=*it;\n    }\n    buildtree();//\u4e0d\u80fd\u8fc7\u65e9\u5efa\u6811\uff0c\u8981\u5148\u8ba1\u7b97\u5b8csize\n    for(int i=1; i<=n; i++)\n    {\n        change(1,binarySearch(a[i]),binarySearch(b[i]));\n    }\n    printf(\"%d\\n\",query());\n    return 0;\n}\n```",
        "postTime": 1503579116,
        "uid": 31025,
        "name": "nstk0513",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3028 \u3010[USACO10OCT]\u6c7d\u6c34\u673aSoda Machine\u3011"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u6709 $n$ \u4e2a\u533a\u95f4 $[A_i,B_i]$ \uff0c\u627e\u4e00\u4e2a\u70b9 $x$ \uff0c\u4f7f $x$ \u88ab\u6700\u591a\u7684\u533a\u95f4\u8986\u76d6\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u9996\u5148\u53ef\u4ee5\u6ce8\u610f\u5230\u7684\u4e00\u4e2a\u96be\u70b9\u662f\u533a\u95f4\u7684\u5750\u6807\u8303\u56f4\uff1a$1 \\le A_i,B_i \\le 10^9$\u3002\u8fd9\u663e\u7136\u5bf9\u4e8e\u76f4\u63a5\u5f00\u6570\u7ec4\u8fdb\u884c\u6807\u8bb0\u9020\u6210\u4e86\u56f0\u96be\u3002\n\n\u4f46\u8fdb\u4e00\u6b65\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u533a\u95f4\u7684\u6570\u91cf $n$ \u8fd8\u662f\u5f88\u5c0f\u7684\uff1a$1 \\le n \\le 5 \\times 10^4$\uff0c\u8fd9\u8bf4\u660e\u8f93\u5165\u6570\u636e\u4e2d\u6700\u591a\u53ea\u4f1a\u51fa\u73b0 $2n$ \u4e2a\u4e0d\u540c\u7684\u533a\u95f4\u7aef\u70b9\u3002\n\n**\u90a3\u4e48\u8003\u8651\u79bb\u6563\u5316\uff0c\u5c06\u51fa\u73b0\u7684\u5404\u4e2a\u533a\u95f4\u7aef\u70b9\u6620\u5c04\u5230 $[1,2n]$ \u8fd9\u4e2a\u8303\u56f4\u5185\u3002** \u628a\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9 $A_i,B_i$ \u5b58\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u6392\u5e8f\uff0c\u53bb\u91cd\u3002\u90a3\u4e48\u6700\u540e\u533a\u95f4\u7aef\u70b9\u5728\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u4e0b\u6807\u5c31\u662f\u79bb\u6563\u5316\u540e\u5f97\u5230\u7684\u6570\u5b57\u3002\n\n\u79bb\u6563\u5316\u540e\uff0c\u7531\u4e8e\u6700\u591a\u53ea\u6709 $2n$ \u4e2a\u4e0d\u540c\u6570\u5b57\uff0c\u6240\u4ee5\u8003\u8651\u5f00\u4e00\u4e2a\u5927\u5c0f\u4e3a $2n$ \u7684\u6570\u7ec4\u8fdb\u884c\u6807\u8bb0\u3002\u8fdb\u4e00\u6b65\u601d\u8003\u4f1a\u53d1\u73b0\uff0c\u76f4\u63a5\u66b4\u529b\u5730\u4e00\u4e2a\u4e00\u4e2a\u70b9\u53bb\u6539\u662f $O(n^2)$ \u7684\uff0c\u663e\u7136\u8fc7\u4e0d\u53bb\u3002\n\n**\u4e8e\u662f\u8003\u8651\u8fdb\u884c\u5dee\u5206\uff0c\u5c06 $O(n)$ \u7684\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\u8f6c\u5316\u4e3a $O(1)$ \u7684\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\u548c\u4e00\u6b21 $O(n)$ \u6c42\u524d\u7f00\u548c\u7684\u64cd\u4f5c\u3002** \u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \uff0c\u53ef\u4ee5\u5728\u6570\u7ec4\u4e0b\u6807\u4e3a $l$ \u7684\u4f4d\u7f6e $+1$ \uff0c\u5728\u6570\u7ec4\u4e0b\u6807\u4e3a $r+1$ \u7684\u4f4d\u7f6e $-1$ \u3002\u5bf9\u6240\u6709\u533a\u95f4\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u6c42\u524d\u7f00\u548c\uff0c\u5373\u53ef\u5f97\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u88ab\u591a\u5c11\u4e2a\u533a\u95f4\u8986\u76d6\u3002\u5728\u6240\u6709\u4f4d\u7f6e\u4e2d\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u81f3\u6b64\uff0c\u6b64\u9898\u5f97\u89e3\u3002\n\n### \u89e3\u9898\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm> \n#define ll long long\n#define rgt register int\n#define qmx(a,b) a<b?b:a\nusing namespace std;\n\nconst int mxn = 5e4+4;\n\nint b[mxn<<1],l[mxn],r[mxn],c[mxn<<1];\nint n,ans,lb;\n//b[]\u4e3a\u79bb\u6563\u5316\u6570\u7ec4\uff0cc[]\u4e3a\u5dee\u5206\u6570\u7ec4\n\ninline int q(int x){   //\u79bb\u6563\u5316\u540e\u7684\u67e5\u8be2\u51fd\u6570\n\treturn lower_bound(b+1,b+1+lb,x)-b;\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(rgt i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&l[i],&r[i]);\n\t\tlb++;\n\t\tb[lb]=l[i];\n\t\tlb++;\n\t\tb[lb]=r[i];\n\t}  //\u8bfb\u5165\u6570\u636e\u5e76\u628a\u533a\u95f4\u6bb5\u70b9\u52a0\u5165\u79bb\u6563\u5316\u6570\u7ec4\n\tsort(b+1,b+lb+1);  //\u6392\u5e8f\n\tlb=unique(b+1,b+lb+1)-(b+1);  //\u53bb\u91cd\n\tfor(rgt i=1;i<=n;i++){\n\t\tc[q(l[i])]++;\n\t\tc[q(r[i])+1]--;\n\t}   //\u5bf9\u6240\u6709\u7684\u533a\u95f4\u5dee\u5206\n\tfor(rgt i=1;i<=lb;i++){\n\t\tc[i]+=c[i-1];\n\t\tans=qmx(c[i],ans);\n\t}  //\u6c42\u524d\u7f00\u548c\u5e76\u53d6\u6700\u5927\u503c\n\tprintf(\"%d\",ans);  //\u5f97\u5230\u7b54\u6848\n\treturn 0;\n}\n```\n",
        "postTime": 1606998963,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3028 \u3010[USACO10OCT]Soda Machine G\u3011"
    },
    {
        "content": "\u5c0f\u849f\u84bb\u4e0d\u592a\u4f1a\u79bb\u6563\u5316\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e9b\u5176\u4ed6\u601d\u8def\u3002\n\n\u9996\u5148\u8003\u8651\u5dee\u5206\uff0c\u4f46\u662f\u53d1\u73b0\u6bcf\u4e00\u5934\u5976\u725b\u7684\u4f4d\u7f6e\u53ef\u4ee5\u5230\u8fbe $10^9$ \u8fd9\u4e48\u5927\uff0c\u5185\u5b58\u80af\u5b9a\u4f1a\u70b8\uff0c\u6240\u4ee5\u76f4\u63a5\u6392\u9664\u3002\n\n***\n\n\u6362\u4e2a\u89d2\u5ea6\u60f3\uff0c\u6bcf\u4e2a\u5976\u725b\u7684\u653e\u7267\u533a\u57df\u90fd\u6709\u5de6\u53f3\u7aef\u70b9\u3002\u5982\u679c\u53ea\u770b\u4e00\u5934\u5976\u725b\uff0c\u5c31\u4f1a\u53d1\u73b0\u5728\u5de6\u7aef\u70b9\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u533a\u57df\u7684\u5976\u725b\u6570\u91cf $+1$\uff1b\u5728\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u8fd9\u4e2a\u6570\u91cf\u4f1a $-1$\u3002\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u503c\u770b\u505a\u7aef\u70b9\u7684\u6743\u503c\uff08\u56e0\u4e3a\u5c0f\u849f\u84bb\u592a\u61d2\u4e0d\u60f3\u7279\u5224\u8fd9\u4e2a\u70b9\u662f\u5de6\u7aef\u70b9\u8fd8\u662f\u53f3\u7aef\u70b9\u4e86\uff09\u3002\n\n\u4e8e\u662f\u5927\u6982\u601d\u8def\u5c31\u51fa\u6765\u4e86\u3002\n\n$n$ \u5934\u5976\u725b\u7684\u653e\u7267\u533a\u57df\u6709 $2n$ \u4e2a\u7aef\u70b9\uff0c\u7ed9\u6bcf\u4e2a\u7aef\u70b9\u90fd\u8bbe\u4e00\u4e2a\u6743\u503c\uff08$1$ \u6216\u8005 $-1$\uff0c\u5de6\u7aef\u70b9\u8bbe $1$\uff0c\u53f3\u7aef\u70b9\u8bbe $-1$\uff09\u7136\u540e\u4ee5\u7aef\u70b9\u5750\u6807\u4e3a\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u6b64\u65f6\u65b0\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf $x$\u3002\u6392\u5e8f\u4e4b\u540e\uff0c\u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u6bcf\u5230\u4e00\u4e2a\u65b0\u7684\u70b9\uff0c$x$ \u5c31\u8981\u52a0\u4e0a\u5728\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u7aef\u70b9\u7684\u6743\u503c\uff08\u66f4\u65b0\u80fd\u559d\u5230\u6c7d\u6c34\u7684\u5976\u725b\u6570\u91cf\uff09\uff0c\u7136\u540e\u548c\u6700\u7ec8\u7b54\u6848\u53d6 $\\max$ \u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6240\u6709\u7684\u53f3\u7aef\u70b9\u9700\u8981\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\uff0c\u5426\u5219\u4f1a\u51fa\u95ee\u9898\u3002\n\n\u6700\u540e\uff0c\u5949\u4e0a\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,t,tt,dcnt;\n//dcnt\u7528\u6765\u8bb0\u5f55\u76ee\u524d\u201c\u70b9\u201d\u7684\u6b21\u6570\n\nint cnt,ans,now;\n\nstruct node\n{\n    int pos;\n    int val;\n}a[100001];\n\nbool cmp(node a,node b)\n{\n    return a.pos<b.pos;\n}\n//\u7ed3\u6784\u4f53\u5feb\u6392\n\nsigned main()\n{\n    std::ios::sync_with_stdio(false);\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>t>>tt;\n        a[++dcnt].pos=t;\n        a[dcnt].val=1;\n        a[++dcnt].pos=tt+1;\n        //\u8fd9\u91cc\u5750\u6807\u8981+1\uff0c\u5426\u5219\u533a\u95f4\u4f1a\u63d0\u65e9\u7ed3\u675f\n        a[dcnt].val=-1;\n    }\n    sort(a+1,a+dcnt+1,cmp);\n    for(int i=1;i<=dcnt;i++)\n    {\n        if(a[i].pos!=now)\n        {\n            //\u6ce8\u610f\u4e00\u5b9a\u8981\u7b49\u5230\u66f4\u65b0\u5b8c\u4e00\u4e2a\u503c\u518d\u53d6max\n            //\u4e0d\u7136\u4f1aWA\u4e00\u4e2a\u70b9\n            now=a[i].pos;\n            ans=max(cnt,ans);\n        }\n        cnt+=a[i].val;\n    }\n    cout<<ans;\n\treturn 0;\n}\n```\n\n~~\u6c42\u6c42\u5566\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u8fc7\u5427~~",
        "postTime": 1658755684,
        "uid": 546754,
        "name": "jgvccc",
        "ccfLevel": 5,
        "title": "P3028 [USACO10OCT]Soda Machine G \u9898\u89e3"
    },
    {
        "content": "\u7528\u6734\u7d20\u7b97\u6cd5~~MLE~~\n\n\u79bb\u6563\u5316~~\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6b63\u89e3\uff09~~\n\n\u6bcf\u4e2a\u533a\u95f4\u5de6\u7aef\u70b9\u503c\u4e3a+1\uff0c\u53f3\u7aef\u70b9\u503c\u4e3a-1\n\n\u6309\u7167\u533a\u95f4\u4f4d\u7f6e\u5feb\u6392\uff0c\u5982\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219+1\u6392\u5728-1\u524d\u9762\uff08\u8d2a\u5fc3\uff09\n\n\u6700\u540e\u626b\u4e00\u904d\uff0c\u7edf\u8ba1\u6700\u5927\u503c\uff0c\u518d\u8f93\u51fa~~\uff08\u4e0d\u9700\u8981\u6811\u72b6\u6570\u7ec4\u6216\u7ebf\u6bb5\u6811\uff0c\u867d\u7136\u6211\u4e5f\u4f1a\u7528\u5b83\u4eec\uff09~~\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n\uff08\u53cb\u60c5\u63d0\u793a\uff1a\u867d\u7136\u6ca1\u6709\u5751\uff0c\u4f46\u8bf7\u52ff\u6284\u88ad\uff09\n\n\n91\u5206\uff1a\n\n```pascal\ntype\n  arr=array[0..1000005] of longint;\nvar\n  b,e:arr;\n  i,j,k,s,maxs,minb,maxe,n:longint;\nprocedure qsort(l,r:longint;var a:arr);\nvar\n  i,j,t,x:longint;\nbegin\n  i:=l;\n  j:=r;\n  x:=a[(i+j) div 2];\n  repeat\n    while a[i]<x do inc(i);\n    while a[j]>x do dec(j);\n    if i<=j then\n              begin\n                t:=a[i];\n                a[i]:=a[j];\n                a[j]:=t;\n                inc(i);\n                dec(j);\n              end;\n  until i>j;\n  if l<j then qsort(l,j,a);\n  if i<r then qsort(i,r,a);\nend;\nbegin\n  minb:=$7fffffff;\n  maxe:=$80000000;\n  maxs:=$80000000;\n  readln(n);\n  for i:=1 to n do\n    begin\n      read(b[i],e[i]);\n      inc(e[i]);\n      if b[i]<minb then minb:=b[i];\n      if e[i]>maxe then maxe:=e[i];\n    end;\n  qsort(1,n,b);\n  qsort(1,n,e);\n  j:=1;\n  k:=1;\n  for i:=minb to maxe do\n    begin\n      while b[j]=i do\n        begin\n          inc(s);\n          inc(j);\n        end;\n      while e[k]=i do\n        begin\n          dec(s);\n          inc(k);\n        end;\n      if s>maxs then maxs:=s;\n      //writeln(i,':',s);\n      if j>n then break;\n    end;\n  writeln(maxs);\nend.\n```\nAC\uff1a\n\n```pascal\ntype\n  arr=array[0..200005] of longint;\nvar\n  a,b:arr;\n  i,s,maxs,m,n,x,y:longint;\nprocedure qsort(l,r:longint);\nvar\n  i,j,t,x1,x2:longint;\nbegin\n  i:=l;\n  j:=r;\n  x1:=a[(i+j) div 2];\n  x2:=b[(i+j) div 2];\n  repeat\n    while (a[i]<x1) or (a[i]=x1) and (b[i]>x2) do inc(i);\n    while (a[j]>x1) or (a[j]=x1) and (b[j]<x2) do dec(j);\n    if i<=j then\n              begin\n                t:=a[i];\n                a[i]:=a[j];\n                a[j]:=t;\n                t:=b[i];\n                b[i]:=b[j];\n                b[j]:=t;\n                inc(i);\n                dec(j);\n              end;\n  until i>j;\n  if l<j then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\nbegin\n  maxs:=$80000000;\n  readln(n);\n  for i:=1 to n do\n    begin\n      read(x,y);\n      inc(m);\n      a[m]:=x;\n      b[m]:=1;\n      inc(m);\n     // inc(y);\n      a[m]:=y;\n      b[m]:=-1;\n    end;\n  qsort(1,m);\n  for i:=1 to m do\n    begin\n      s:=s+b[i];\n      if s>maxs then maxs:=s;\n    end;\n  writeln(maxs);\nend.\n```\n\n\u8c22\u8c22\u5de8\u4f6c\u4eec\u89c2\u8d4f\uff01\uff01\uff01",
        "postTime": 1546003310,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3028 \u3010[USACO10OCT]\u6c7d\u6c34\u673aSoda Machine\u3011"
    },
    {
        "content": "\u6211\u7684\u505a\u6cd5\u6bd4\u8f83\u50bb\u3002\u3002\u3002\uff08\u662f\u4e0d\u662f\u6211\u6570\u636e\u7ed3\u6784\u9898\u5199\u592a\u591a\u5199\u50bb\u4e86\uff1f\uff09\n\n\u5176\u5b9e\u53ef\u4ee5\u5f88\u5feb\u5730\u770b\u51fa\u8fd9\u662f\u53ef\u4ee5\u7528\u652f\u6301\u533a\u95f4\u4fee\u6539\u5355\u70b9\u6c42\u503c\u7684\u4e1c\u897f\u7ef4\u62a4\u4e00\u4e0b\u7684\n\n\u6240\u4ee5\u79bb\u6563\u5316\u4e4b\u540e\u76f4\u63a5\u4e0a\u6811\u72b6\u6570\u7ec4\u4e86\n\n\u5176\u4ed6\u505a\u6cd5\u6211\u4e0d\u662f\u5f88\u4e86\u89e3\u3002\u3002\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u591a\u89e3\u91ca\u4e86\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <iostream>\n#include <ctime>\n#include <map>\n#include <queue>\n#include <cstdlib>\n#include <string>\n#include <climits>\n#include <set>\n#include <vector>\nusing namespace std;\nint f[1000001],x[1000001],y[1000001],b[1000001];\nint n,cnt=0;\ninline void add(int x,int y){for(;x<=cnt;x+=x&-x)f[x]+=y;}\ninline int sum(int x){int ans=0;for(;x;x-=x&-x)ans+=f[x];return ans;}//\u6811\u72b6\u6570\u7ec4\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d\",&x[i],&y[i]);\n        b[++cnt]=x[i];b[++cnt]=y[i];\n    }\n    sort(b+1,b+cnt+1);\n    for(int i=1;i<=n;i++){\n        x[i]=lower_bound(b+1,b+cnt+1,x[i])-b;\n        y[i]=lower_bound(b+1,b+cnt+1,y[i])-b;//\u79bb\u6563\u5316\n        add(x[i],1);add(y[i]+1,-1);//\u533a\u95f4\u4fee\u6539\uff08\u52a0\uff09\n    }\n    int ans=0;\n    for(int i=1;i<=cnt;i++)ans=max(ans,sum(i));//\u5355\u70b9\u6c42\u503c\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1497859711,
        "uid": 5716,
        "name": "jzqjzq",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3028 \u3010[USACO10OCT]\u6c7d\u6c34\u673aSoda Machine\u3011"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u770b\u5230\u533a\u95f4\u7aef\u70b9\u7684\u6570\u636e\u8303\u56f4\uff1a$0<x\\le y<10^9$\uff0c\u800c n \u7684\u8303\u56f4\u660e\u663e\u5c0f\u5f88\u591a\uff0c\u6545\u8003\u8651\u4f7f\u7528\u79bb\u6563\u5316\u3002\n\n\u79bb\u6563\u5316\u540e\uff0c\u6709\u4e00\u4e2a\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u66b4\u529b\uff1a\u679a\u4e3e\u6bcf\u4e00\u6bb5\u533a\u95f4\uff0c\u5c06\u8fd9\u4e2a\u533a\u95f4\u6240\u5305\u542b\u7684\u8303\u56f4\u90fd +1\u3002\u6700\u540e\u518d\u904d\u5386\u4e00\u904d\uff0c\u6c42\u51fa\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u793a\u4f8b\u4ee3\u7801\uff1a\n\n~~~cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e4+5;\nint n,a[N<<1],sum[N];\n\nstruct node{\n\tint x,y;\n}cow[N];\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tint tot=0;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>cow[i].x>>cow[i].y;\n\t\ta[++tot]=cow[i].x;\n\t\ta[++tot]=cow[i].y;\n\t}\n\tsort(a+1,a+tot+1);\n\tint m=unique(a+1,a+tot+1)-a-1,maxi=0;\n\tfor(int i=1;i<=n;i++){\n\t\tcow[i].x=lower_bound(a+1,a+m+1,cow[i].x)-a;//\u79bb\u6563\u5316\n\t\tcow[i].y=lower_bound(a+1,a+m+1,cow[i].y)-a;\n\t\tfor(int j=cow[i].x;j<=cow[i].y;j++) maxi=max(maxi,++sum[j]);\n\t}\n\tcout<<maxi;\n\treturn 0;\n}\n~~~\n\n\u8fd9\u6837\u4f60\u53ef\u4ee5\u62ff\u5230 72pts\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u626b\u63cf\u7ebf\u7684\u60f3\u6cd5\u3002\u9996\u5148\u5c06 cow \u6570\u7ec4\u6309\u7167\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\uff0c\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u5de6\u7aef\u70b9\u4fbf +1\uff0c\u9047\u5230\u53f3\u7aef\u70b9\u4fbf -1\u3002\n\n\u5224\u65ad\u662f\u5426\u9047\u5230\u53f3\u7aef\u70b9\u53ef\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u5c0f\u6839\u5806\uff0c\u9047\u5230\u5de6\u7aef\u70b9\u65f6\u5c06\u53f3\u7aef\u70b9\u52a0\u8fdb\u961f\u5217\u91cc\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n~~~cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e4+5;\nint n,a[N<<1],sum[N];\n\nstruct node{\n\tint x,y;\n}cow[N];\n\nstruct Node{\n\tint x;\n\tbool operator < (const Node &x) const{//\u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u5927\u6839\u5806\uff0c\u8fd9\u91cc\u8981\u6539\u6210\u5c0f\u6839\u5806\n\t\treturn x.x<this->x;\n\t}\n};\n\nbool cmp(node x,node y){\n\tif(x.x==y.x) return x.y<y.y;\n\treturn x.x<y.x;\n}\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tint tot=0;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>cow[i].x>>cow[i].y;\n\t\ta[++tot]=cow[i].x;\n\t\ta[++tot]=cow[i].y;\n\t}\n\tsort(a+1,a+tot+1);\n\tint m=unique(a+1,a+tot+1)-a-1,cnt=0,ansi=0;\n\tfor(int i=1;i<=n;i++){\n\t\tcow[i].x=lower_bound(a+1,a+m+1,cow[i].x)-a;\n\t\tcow[i].y=lower_bound(a+1,a+m+1,cow[i].y)-a;\n\t}\n\tsort(cow+1,cow+n+1,cmp);\n\tpriority_queue<Node>q;\n\ttot=1;\n\tfor(int i=cow[1].x;i<=cow[n].x;i++){\n\t\t while(i==cow[tot].x){//\u4f7f\u7528while\u9632\u6b62\u7aef\u70b9\u91cd\u5408\u7684\u60c5\u51b5\uff0c\u4e0b\u9762\u540c\u7406\n\t\t \tcnt++;\n\t\t\tNode tmp={cow[tot].y};\n\t\t \tq.push(tmp);\n\t\t \ttot++;\n\t\t \tansi=max(ansi,cnt);\n\t\t }\n\t\t while(q.empty()==false&&i==q.top().x){\n\t\t \tcnt--;\n\t\t \tq.pop();\n\t\t }\n\t}\n\tcout<<ansi;\n\treturn 0;\n}\n~~~",
        "postTime": 1660120650,
        "uid": 248359,
        "name": "Cloote",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P3028"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u533a\u95f4 $[l_i,r_i]$\uff0c\u627e\u5230\u4e00\u4e2a\u70b9\uff0c\u4f7f\u4e4b\u5305\u542b\u5b83\u7684\u533a\u95f4\u6700\u591a\u3002\n## \u601d\u8def\n\u6211\u4eec\u5c06\u9898\u76ee\u6362\u4e00\u79cd\u65b9\u6cd5\u6765\u7406\u89e3\uff1a\u7ed9\u5b9a $n$ \u4e2a\u533a\u95f4 $[l_i,r_i]$ \u5c06\u5176\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u7ed9 $+1$\uff0c\u6c42\u95ee\u6700\u540e\u7684\u6240\u6709\u5143\u7d20\u6700\u5927\u503c\u3002\n\n\u662f\u7684\uff0c\u806a\u660e\u7684\u4f60\u4e00\u4e0b\u5b50\u5c31\u770b\u4e86\u51fa\u6765\uff0c\u8fd9\u662f\u4e00\u9053\u88f8\u7684\u5dee\u5206\u3002\n\n```cpp\nfor(int i=1;i<=n;i++) {\n\tint l,r;\n\tscanf(\"%d%d\",&l,&r);\n\td[l]++; d[r+1]--;\n}\n```\n\u4f46...\u8fd9\u6837\u5c31\u5b8c\u4e86\u5417\uff1f\u4e0d\uff0c\u6211\u4eec\u770b\u89c1 $l_i,r_i\\le10^9$\uff0c\u6570\u7ec4\u65e0\u7591\u5b58\u4e0d\u4e0b\u8fd9\u4e48\u5927\u7684\u7a7a\u95f4\uff0c\u5c31\u7b97\u5b58\u7684\u4e0b\uff0c\u6211\u4eec\u5c06 $0$ \u81f3 $\\max\\{r_i\\}$ \u4e00\u4e00\u904d\u5386\u4ecd\u4f1a\u8d85\u65f6\u3002\n\n\u8fd9\u662f\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u79cd\u65b9\u6cd5\u53eb\u505a\u79bb\u6563\u5316\uff0c\u8fd9\u91cc\u4e0d\u4f5c\u8fc7\u591a\u4ecb\u7ecd\u3002\n## Code:\n```cpp\n#include<bits/stdc++.h>\n#define pd push_back\n#define pb pop_back\n#define mk make_pair\n//#define int long long\n#define PII pair<int,int>\n#define _for(a,b,c) for(int a=b;a<=c;a++)\n#define _rep(a,b,c) for(int a=b;a>=c;a--)\nusing namespace std;\ntemplate <typename T> inline void read(T& x) {\n\tx=0; T f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') { if(ch=='-') f=-1; ch=getchar(); }\n\twhile(ch>='0'&&ch<='9') { x=(x<<1)+(x<<3)+(ch&15); ch=getchar(); }\n\tx=x*f;\n\treturn;\n}\ntemplate <typename T,typename ...Arg> inline void read(T& x,Arg& ...arg){\n\tread(x); read(arg...);\n}\nint power(int a,int b) {\n\tint ans=1;\n\tdo {\n\t\tif(b&1) ans*=a; a*=a;\n\t} while(b>>=1);\n\treturn ans;\n}\nconst int N=1e5+5;\nint d[N],l[N],r[N],v[N],tot,n,ans;\nsigned main() {\n\tread(n);\n\t_for(i,1,n)\n\t\tread(l[i],r[i]),v[++tot]=l[i],v[++tot]=r[i];\n\tsort(v+1,v+tot+1); //\u6392\u5e8f\n\ttot=unique(v+1,v+tot+1)-(v+1); //\u53bb\u91cd\n\t_for(i,1,n) {\n//\t\tprintf(\"(%d,%d)+=1\\n\",lower_bound(v+1,v+tot+1,l[i])-v,lower_bound(v+1,v+tot+1,r[i])-v);\n\t\t++d[lower_bound(v+1,v+tot+1,l[i])-v],--d[lower_bound(v+1,v+tot+1,r[i])-v+1]; //\u5c06\u79bb\u6563\u5316\u540e\u7684 l[i]~r[i] \u533a\u95f4+1\n\t}\n\t_for(i,1,tot+1)\n\t\tans=max(ans,d[i]+=d[i-1]); //\u505a\u524d\u7f00\u548c\uff0c\u8fd8\u539f\u6570\u7ec4\n\tprintf(\"%d\",ans);\n\treturn 1;\n}\n\n```",
        "postTime": 1648972745,
        "uid": 468657,
        "name": "lsj2009",
        "ccfLevel": 6,
        "title": "P3028 code"
    },
    {
        "content": "\u6211\u7684\u535a\u5ba2\uff1a\n\n```cpp\nhttps://blog.csdn.net/zsyzClb/article/details/84196644\n```\n\n\u6839\u636e\u89c2\u5bdf\uff0c\u53ef\u4ee5\u53d1\u73b0\u533a\u95f4\u90fd\u975e\u5e38\u5927\u8fbe\u523010^9\u5982\u679c\u76f4\u63a5\u66b4\u529b\u662fO\uff0810^9n\uff09\u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u91c7\u7528\u4e86\u79bb\u6563\u5316\uff0c\u5c06\u533a\u95f4\u79bb\u6563\n\n\u8fd9\u6837\u53ef\u4ee5\u628a\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230O\uff08n^2\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ninline int read(){\n\tint x=0,f=0;char s=getchar();\n\twhile(!isdigit(s))f|=s=='-',s=getchar();\n\twhile( isdigit(s))x=(x<<1)+(x<<3)+s-48,s=getchar();\n\treturn f==0?x:-x;\n}\nconst int N=5e4+10;\nstruct LSnode{\n\tint x,z,p;\n\tinline bool operator<(const LSnode &k)const{\n\t\treturn x<k.x;\n\t}\n}b[N<<1];int a[N<<1];\nint n;\nint sum[N<<1];\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tb[2*i-1].x=read();\n\t\tb[2*i  ].x=read();\n\t\tb[2*i-1].p=2*i-1;\n\t\tb[2*i  ].p=2*i;\n\t}\n\tsort(b+1,b+2*n+1);\n\tb[1].z=1;\n\tfor(int i=2;i<=(n<<1);i++){\n\t\tif(b[i].x==b[i-1].x)b[i].z=b[i-1].z;\n\t\telse b[i].z=b[i-1].z+1;\n\t}\n\tfor(int i=1;i<=(n<<1);i++)a[b[i].p]=b[i].z;\n\tint maxx=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=a[2*i-1];j<=a[2*i];j++)\n\t\t\tsum[j]++,maxx=max(maxx,sum[j]);\n\t}\n\tprintf(\"%d\\n\",maxx);\n\treturn 0;\n}\n\n```\n\n\u4f46\u662f\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff08n^2\uff09\u8fd8\u662f\u4f1a\u8d85\u65f6\u4e24\u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u60f3\u53ef\u4ee5\u5728\u533a\u95f4\u4fee\u6539\u65f6\u4f18\u5316\u4e00\u4e0b\n\n\u56e0\u4e3a\u4e0a\u9762\u7684\u4ee3\u7801\u6bcf\u6b21\u4fee\u6539\u90fd\u662f\u8981\u4ece\u5de6\u5230\u53f3\u6bcf\u4e00\u4e2a\u70b9\u90fd+1\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u524d\u7f00\u548c\u7684\u65b9\u5f0f\u4f18\u5316\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u533a\u95f4\u7684\u5176\u5b9e\u70b9+1\uff0c\u5728\u533a\u95f4\u7684\u7ed3\u675f\u70b9+1\u7684\u4f4d\u7f6e\u4e0a-1\uff0c\u7edf\u8ba1\u65f6\u4e0d\u65ad\u7684\u52a0\u8fd9\u4e2a\u70b9\u7684sum\u503c\u5c31\u597d\u4e86\n\nAC\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ninline int read(){\n\tint x=0,f=0;char s=getchar();\n\twhile(!isdigit(s))f|=s=='-',s=getchar();\n\twhile( isdigit(s))x=(x<<1)+(x<<3)+s-48,s=getchar();\n\treturn f==0?x:-x;\n}\nconst int N=5e4+10;\nstruct LSnode{\n\tint x,z,p;\n\tinline bool operator<(const LSnode &k)const{\n\t\treturn x<k.x;\n\t}\n}b[N<<1];int a[N<<1];\nint n;\nint sum[N<<1];\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tb[2*i-1].x=read();\n\t\tb[2*i  ].x=read();\n\t\tb[2*i-1].p=2*i-1;\n\t\tb[2*i  ].p=2*i;\n\t}\n\tsort(b+1,b+2*n+1);\n\tb[1].z=1;\n\tfor(int i=2;i<=(n<<1);i++){\n\t\tif(b[i].x==b[i-1].x)b[i].z=b[i-1].z;\n\t\telse b[i].z=b[i-1].z+1;\n\t}\n\tfor(int i=1;i<=(n<<1);i++)a[b[i].p]=b[i].z;\n\tint maxx=0;\n\tfor(int i=1;i<=n;i++){\n\t\tsum[a[2*i-1]]++;\n\t\tsum[a[2*i]+1]--;\n\t}\n\tint s=0;\n\tfor(int i=1;i<=b[n<<1].z;i++)s+=sum[i],maxx=max(maxx,s);\n\tprintf(\"%d\\n\",maxx);\n\treturn 0;\n}\n\n```",
        "postTime": 1542510824,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3028 \u3010[USACO10OCT]\u6c7d\u6c34\u673aSoda Machine\u3011"
    }
]