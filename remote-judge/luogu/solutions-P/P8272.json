[
    {
        "content": "### Analysis\n\n\u8bbe\u4e00\u5976\u725b\u7684\u4f4d\u7f6e\u3001\u65f6\u95f4\u4e3a $x',t'$\uff0c\u5219\u82f9\u679c $(x,t)$ \u80fd\u88ab\u5979\u63a5\u5230\u5f53\u4e14\u4ec5\u5f53\n\n$$\\begin{cases}\nt+x\\ge t'+x'\n\\\\\nt-x\\ge t'-x'\n\\end{cases}$$\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u82f9\u679c\u6216\u5976\u725b\uff0c\u5176\u5750\u6807\u4e3a $(t+x,t-x)$\uff0c\u8fd9\u6837\u5c31\u8f6c\u5316\u6210\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\u4e86\u3002\n\n\u2193\u4ee5\u4e0b\u7eff\u70b9\u8868\u793a\u82f9\u679c\uff0c\u7ea2\u534a\u5e73\u9762\u4ea4\u4e3a\u5976\u725b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b4zf2ysw.png)\n\n\u6211\u4eec\u6709\u4ee5\u4e0b\u8d2a\u5fc3\u7b56\u7565\uff08\u5efa\u8bae\u505a\u4e00\u4e0b [P5894 [IOI2013]robots \u673a\u5668\u4eba](https://www.luogu.com.cn/problem/P5894)\uff0c\u4e00\u6837\u7684\u505a\u6cd5\uff09\uff1a\n\n\u5148\u6309\u7167 $x$ \u964d\u5e8f\u6392\u5e8f\u5976\u725b\uff0c$x$ \u76f8\u540c\u7684 $y$ \u5927\u7684\u9760\u524d\u3002\u56fe\u4e2d\u6392\u5e8f\u4e3a ABC\u3002\n\n\u518d\u7528 `std::set` \u7ef4\u62a4\u82f9\u679c\uff0c\u6bcf\u6b21\u4f18\u5148\u53d6 $x$ \u5750\u6807\u5c0f\u7684\u82f9\u679c\u3002\n\n\u8fd9\u6837 A \u5976\u725b\u5c31\u4f1a\u4f18\u5148\u9009\u533a\u57df 2 \u4e2d\u7684\u82f9\u679c\uff0c\u4e0d\u4f1a\u548c B \u62a2\u3002\n\nB \u5728 C \u4e4b\u524d\u62ff\u82f9\u679c\uff0c\u6240\u4ee5 C \u4e0d\u4f1a\u5148\u628a B \u80fd\u62ff\u7684\u5148\u62a2\u8d70\u3002\n\n\u65f6\u95f4\u5e26 $\\log$\u3002\n\n### Code\n\n```cpp\n//Said no more counting dollars. We'll be counting stars.\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC optimize(\"unroll-loops\")//DONT use rashly,I have suffered\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")//DONT use rashly,I have suffered\n#include<bits/stdc++.h>\nusing namespace std;\n#define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define fir first\n#define sec second\n#define mkp make_pair\n#define pb emplace_back\n#define mem(x,y) memset(x,y,sizeof(x))\n#define For(i,j,k) for(int i=j;i<=k;i++)\n#define Rof(i,j,k) for(int i=j;i>=k;i--)\n#define Fe(x,y) for(int x=head[y];x;x=e[x].nxt)\n#define ckmx(a,b) a=max(a,b)\n#define ckmn(a,b) a=min(a,b)\n#define fin(s) freopen(s,\"r\",stdin)\n#define fout(s) freopen(s,\"w\",stdout)\n#define file(s) fin(s\".in\");fout(s\".out\")\n#define cerr cerr<<'_'\n#define debug cerr<<\"Passed line #\"<<__LINE__<<endl\ntemplate<typename T>T ov(T x){cerr<<\"Value: \"<<x<<endl;return x;}\n#define ll long long\nconst ll mod=1000000007;\ninline ll pw(ll x,ll y){ll r=1;while(y){if(y&1)r=r*x%mod;x=x*x%mod;y>>=1;}return r;}\ninline void mad(ll &a,ll b){a=(a+b)%mod;while(a<0)a+=mod;}\ninline void mmu(ll &a,ll b){a=a*b%mod;while(a<0)a+=mod;}\n#define inv(a) pw(a,mod-2)\n#define int long long\n#define N 200010\n\nstruct node{\n\tbool q;\n\tint x,y;\n\tmutable int cnt;\n\tfriend bool operator<(node x,node y){return x.x<y.x;}\n}a[N];\nint n;\nmultiset<node> s;\nmultiset<node>::iterator it;\nbool cmp(node x,node y){\n\tif(x.y!=y.y) return x.y>y.y;\n\telse return x.x>y.x;\n}\nsigned main(){IOS;\n\tcin>>n;\n\tint opt,x,t;\n\tFor(i,1,n){\n\t\tcin>>opt>>t>>x>>a[i].cnt;\n\t\ta[i].q=opt-1;\n\t\ta[i].x=t+x;\n\t\ta[i].y=t-x;\n\t}\n\tsort(a+1,a+1+n,cmp);\n\tint ans=0;\n\tFor(i,1,n){\n\t\tif(!a[i].q){//cow\n\t\t\twhile(a[i].cnt){\n\t\t\t\tit=s.lower_bound((node){0,a[i].x,0,0});\n\t\t\t\tif(it==s.end()) break;\n\t\t\t\tif(it->cnt>a[i].cnt){\n\t\t\t\t\tans+=a[i].cnt;\n\t\t\t\t\tit->cnt-=a[i].cnt;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tans+=it->cnt;\n\t\t\t\ta[i].cnt-=it->cnt;\n\t\t\t\ts.erase(it);\n\t\t\t}\n\t\t}else{//apple\n\t\t\ts.insert(a[i]);\n\t\t}\n\t}\n\tcout<<ans<<endl;\nreturn 0;}\n```\n\n",
        "postTime": 1650459728,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P8272 [USACO22OPEN] Apple Catching G"
    },
    {
        "content": "[\u6216\u8bb8\u4f1a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://yaoxi-std.github.io/2022/03/27/sol-p8272/)\n\n### \u9898\u9762\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P8272)\n\n### \u89e3\u6cd5\n\n~~\u540c\u5c4a\u7684\u5de8\u4f6c\u4eec\u5df2\u7ecf\u90fd\u901a\u5173\u4e86 USACO\uff0c\u53ea\u6709\u6211\u8fd8\u5728\u505a Gold \u7ec4\u7684\u84dd\u9898~~\n\n\u770b\u5b8c\u6837\u4f8b\uff0c\u4e0d\u96be\u53d1\u73b0\u4e00\u5934\u5976\u725b\u80fd\u591f\u63a5\u5230\u7684\u82f9\u679c\u7684\u533a\u57df\u5982\u4e0b\u56fe\u6240\u793a\u3002\n\n\uff08\u6a2a\u5750\u6807\u4e3a\u4f4d\u7f6e\uff0c\u7eb5\u5750\u6807\u4e3a\u65f6\u95f4\uff0c\u533a\u57df\u5c31\u662f\u4e24\u6761\u76f4\u7ebf\u4e0a\u65b9\u90e8\u5206\u7684\u534a\u5e73\u9762\u4ea4\uff09\n\n![img1](https://cdn.luogu.com.cn/upload/image_hosting/61opx2yh.png)\n\n\u5047\u8bbe\u7b2c $i$ \u7fa4\u5976\u725b\u80fd\u591f\u63a5\u5230\u7684\u82f9\u679c\u96c6\u5408\u4e3a $S_i$\u3002\n\n\u8003\u8651\u73b0\u5728\u6709 $2$ \u7fa4\u5976\u725b $i$ \u548c $j$\uff0c\u53ef\u80fd $S_i$ \u88ab $S_j$ \u5305\u542b\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4e92\u76f8\u5305\u542b\u3002\n\n\u5982\u679c $S_i \\subset S_j$\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u5148\u8003\u8651 $S_i$ \u80fd\u591f\u53d6\u5230\u7684\uff0c\u5426\u5219\u53ef\u80fd $j$ \u53d6\u4e86 $S_i$ \u96c6\u5408\u4e2d\u7684\u800c\u5bfc\u81f4 $i$ \u6ca1\u6709\u53d6\u6ee1\u3002\n\n\u5426\u5219\uff0c\u5c31\u8ba9 $i$ \u8d2a\u5fc3\u5730\u4f18\u5148\u53d6\u6ca1\u6709\u88ab $S_j$ \u5305\u542b\u7684\u90e8\u5206\u3002\n\n\u4e8e\u662f\u8ba9\u6240\u6709\u5976\u725b\u96c6\u5408\u6309\u7167 $(x_i - t_i, -x_i)$ \u7684\u4e8c\u5143\u7ec4\u6392\u5e8f\u4ee5\u4fdd\u8bc1\u88ab\u5305\u542b\u7684\u96c6\u5408\u5148\u88ab\u8003\u8651\u3002\u7528\u4e00\u4e2a `set` \u7ef4\u62a4\u82f9\u679c\u7684\u96c6\u5408\uff0c\u4f18\u5148\u8ba9\u5976\u725b\u5339\u914d $t_i + x_i$ \u66f4\u5c0f\u7684\u82f9\u679c\uff0c\u66b4\u529b\u8df3 `set` \u5373\u53ef\u3002\n\n\u81f3\u4e8e\u590d\u6742\u5ea6\uff0c\u7531\u4e8e\u6bcf\u6b21\u8bbf\u95ee `set` \u4e2d\u7684\u5143\u7d20\u90fd\u4f1a\u4f7f\u5f97\u8981\u4e48\u5220\u9664\u4e00\u4e9b\u82f9\u679c\uff0c\u8981\u4e48\u5220\u9664\u4e00\u7fa4\u5976\u725b\uff0c\u603b\u7684\u8bbf\u95ee\u6b21\u6570\u662f $O(n)$ \u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n \\log n)$\u3002\n\n### AC\u4ee3\u7801\n\n```cpp\n/**\n * @file:           T1.cpp\n * @author:         yaoxi-std\n * @url:            \n*/\n// #pragma GCC optimize (\"O2\")\n// #pragma GCC optimize (\"Ofast\", \"inline\", \"-ffast-math\")\n// #pragma GCC target (\"avx,sse2,sse3,sse4,mmx\")\n#include <bits/stdc++.h>\nusing namespace std;\n#define resetIO(x) \\\n    freopen(#x \".in\", \"r\", stdin), freopen(#x \".out\", \"w\", stdout)\n#define debug(fmt, ...) \\\n    fprintf(stderr, \"[%s:%d] \" fmt \"\\n\", __FILE__, __LINE__, ##__VA_ARGS__)\ntemplate <class _Tp>\ninline _Tp& read(_Tp& x) {\n    bool sign = false; char ch = getchar();\n    for (; !isdigit(ch); ch = getchar()) sign |= (ch == '-');\n    for (x = 0; isdigit(ch); ch = getchar()) x = x * 10 + (ch ^ 48);\n    return sign ? (x = -x) : x;\n}\ntemplate <class _Tp>\ninline void write(_Tp x) {\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) write(x / 10);\n    putchar((x % 10) ^ 48);\n}\nbool m_be;\nusing ll = long long;\nusing pii = pair<int, int>;\n#define fi first\n#define se second\nconst int MAXN = 2e5 + 10;\nconst int INF = 0x3f3f3f3f;\nint n;\nstruct Node {\n    int q, t, x, n;\n    bool operator<(const Node& o) const {\n        return x - t < o.x - o.t || (x - t == o.x - o.t && x > o.x);\n    }\n} a[MAXN];\nbool m_ed;\nsigned main() {\n    // debug(\"Mem %.5lfMB.\", fabs(&m_ed - &m_be) / 1048576);\n    read(n);\n    for (int i = 1; i <= n; ++i)\n        read(a[i].q), read(a[i].t), read(a[i].x), read(a[i].n);\n    sort(a + 1, a + n + 1);\n    multiset<pii> st; ll ans = 0;\n    for (int i = 1; i <= n; ++i) {\n        if (a[i].q == 1) {\n            auto it = st.lower_bound({a[i].t + a[i].x, 0});\n            while (a[i].n && it != st.end()) {\n                int tmp = min(a[i].n, it->se);\n                ans += tmp, a[i].n -= tmp;\n                if (it->se == tmp) st.erase(it++);\n                else st.insert({it->fi, it->se - tmp}), st.erase(it);\n            }\n        } else {\n            if (a[i].n) st.insert({a[i].t + a[i].x, a[i].n});\n        }\n    }\n    write(ans), putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1649143809,
        "uid": 141573,
        "name": "yaoxi",
        "ccfLevel": 8,
        "title": "P8272 [USACO22OPEN] Apple Caching G"
    },
    {
        "content": "\u5ba3\u4f20\u535a\u5ba2 $\\to$ [link](https://www.cnblogs.com/Plozia/p/16286463.html)\n\n\u5217\u51fa\u4e00\u5934\u725b $j$ \u80fd\u591f\u63a5\u5230\u4e00\u4e2a\u82f9\u679c $i$ \u7684\u5f0f\u5b50\uff1a$t_j-t_i\\ge |x_j-x_i|$\u3002\n\n\u7136\u540e\u5c06\u6240\u6709\u725b\u548c\u82f9\u679c\u4ee5\u5750\u6807 $(t_i,x_i)$ \u5f62\u5f0f\u753b\u5230\u5750\u6807\u7cfb\u5185\uff0c\u6ce8\u610f\u5230\u725b\u80fd\u591f\u6293\u5230\u7684\u82f9\u679c\u5728\u5750\u6807\u7cfb\u5185\u753b\u51fa\u6765\u5c31\u662f\u4e2a\u5f80 $t$ \u8f74\u6b63\u65b9\u5411\uff0c\u503e\u659c\u89d2\u5206\u522b\u4e3a 45 \u5ea6\u548c 135 \u5ea6\u7684\u4e24\u6761\u7ebf\u4e2d\u95f4\u90a3\u5757\u90e8\u5206\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5c06\u5750\u6807\u7cfb\u987a\u65f6\u9488\u8f6c 45 \u5ea6\uff0c\u5c31\u53d8\u6210\u4e86\u5f80\u53f3\u4e0a\u89d2\u7edf\u8ba1\uff0c\u6bcf\u4e2a\u70b9\u7684\u65b0\u5750\u6807\u4e3a $(t_i+x_i,t_i-x_i)$\u3002\u6ce8\u610f\u8fd9\u91cc\u672c\u5e94\u9664\u4ee5 $\\sqrt{2}$\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u6211\u4eec\u53ea\u5173\u5fc3\u5750\u6807\u76f8\u5bf9\u5927\u5c0f\u56e0\u6b64\u7565\u53bb\u4e86 $\\sqrt{2}$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sdtgrp3m.png)\n\n\u5047\u8bbe\u6211\u4eec\u8f6c\u6362\u5750\u6807\u7cfb\u540e\u53d8\u6210\u4e86\u8fd9\u6837\uff0c\u6709\u4e09\u5934\u725b A,B,C\uff0c\u4e00\u79cd\u6b63\u786e\u7684\u8d2a\u5fc3\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n\u5148\u6392\u5e8f\uff0c\u6a2a\u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u964d\u5e8f\uff0c\u7eb5\u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u964d\u5e8f\uff0c\u90a3\u4e48\u56fe\u4e2d\u7684\u70b9\u6392\u5e8f\u4e3a B,A,C\u3002\n\n\u7136\u540e\u4f9d\u6b21\u9009\u62e9\u82f9\u679c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u800c\u8a00\uff0c\u9009\u62e9\u7eb5\u5750\u6807\u6700\u4f4e\u7684\u82e5\u5e72\u82f9\u679c\uff0c\u6bd4\u5982 B \u70b9\u5c31\u4f1a\u9009 3 \u7a7a\u95f4\u5185\u7684\u3002\n\n\u6b63\u786e\u6027\u5c31\u662f\u56e0\u4e3a B \u5148\u9009\u4e86 3 \u7a7a\u95f4\u6240\u4ee5\u4e0d\u4f1a\u548c A \u51b2\u7a81\uff0c\u800c B \u53c8\u5728 C \u524d\u9009\u6240\u4ee5\u4fdd\u8bc1 B \u80fd\u9009\u7684\u5c3d\u91cf\u591a\uff0c\u80fd\u5339\u914d\u7684\u5c31\u5c3d\u91cf\u591a\u3002\n\n\u4ee5\u4e0a\u53ea\u662f\u4e00\u79cd\u8d2a\u5fc3\u65b9\u5f0f\uff0c\u5b9e\u9645\u4e0a\u8fd8\u6709\u51e0\u79cd\u65b9\u5f0f\u4e5f\u90fd\u662f\u5bf9\u7684\uff0c\u6bd4\u5982\u6392\u5e8f\u8c03\u6362\u5173\u952e\u5b57\u987a\u5e8f\u540e\u8ba9 A \u5c3d\u91cf\u9009 1 \u7a7a\u95f4\u4e4b\u7c7b\u7684\u3002\n\n\u5b9e\u73b0\u65f6\u7528\u4e00\u4e2a multiset \u7ef4\u62a4\u5373\u53ef\uff0c\u4f46\u662f\u6ce8\u610f multiset \u5220\u9664\u503c\u7684\u65f6\u5019\u4f1a\u5c06\u6240\u6709\u4e0e\u8be5\u503c\u76f8\u7b49\u7684\u952e\u5168\u5220\u4e86\uff0c\u5220\u8fed\u4ee3\u5668\u5c31\u4e0d\u4f1a\u4e86\u3002",
        "postTime": 1654758369,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "P8272 [USACO22OPEN] Apple Catching G \u9898\u89e3"
    },
    {
        "content": "\u53d7\u4e0d\u4e86\u4e86\uff0c\u4e00\u62f3\u88ab overkill \u6253\u7206\u3002\n\n#### \u9898\u610f\n\n\u6709\u4e00\u4e2a\u6570\u8f74\uff0c\u63a5\u4e0b\u6765\u4f1a\u51fa\u73b0 $n$ \u4e2a\u4e8b\u4ef6\uff0c\u5206\u522b\u662f\uff1a\n\n- $t_i$ \u65f6\u523b\uff0c$n_i$ \u53ea\u5976\u725b\u51fa\u73b0\u5728\u6570\u8f74\u7684 $x_i$ \u4f4d\u7f6e\u4e0a\u3002\n\n- $t_i$ \u65f6\u523b\uff0c$n_i$ \u9897\u82f9\u679c\u843d\u5728\u6570\u8f74\u7684 $x_i$ \u4f4d\u7f6e\u4e0a\u3002\n\n\u5976\u725b\u53ef\u4ee5\u4ee5\u6700\u9ad8 $1$ \u7684\u901f\u5ea6\u79fb\u52a8\uff0c\u4e00\u53ea\u5976\u725b\u5982\u679c\u5728\u82f9\u679c\u843d\u4e0b\u7684\u77ac\u95f4\u5904\u5728\u5176\u843d\u4e0b\u7684\u4f4d\u7f6e\uff0c\u5219\u4e0e\u82f9\u679c\u4e00\u540c\u6d88\u5931\u3002\u82f9\u679c\u672a\u88ab\u63a5\u4f4f\u4f1a\u76f4\u63a5\u6d88\u5931\u3002\n\n\u95ee\u6700\u591a\u6709\u591a\u5c11\u53ea\u5976\u725b\u80fd\u63a5\u4f4f\u82f9\u679c\u3002\n\n$1 \\leq n \\leq 2 \\cdot 10^5$\u3002\n\n#### \u9898\u89e3\n\n\u9996\u5148\u628a\u95ee\u9898\u653e\u5230\u4e8c\u7ef4\u5e73\u9762\u4e0a\uff0c$y$ \u8f74\u8868\u793a\u65f6\u95f4\uff0c\u628a\u82f9\u679c\u548c\u5976\u725b\u5bf9\u5e94\u5230\u4e00\u4e2a\u70b9\u4e0a\uff0c\u5219\u6bcf\u4e2a\u5976\u725b\u53ef\u4ee5\u63a5\u4f4f\u4e00\u4e2a\u5f80\u4e0a\u7684\u659c\u7740\u7684\u5e73\u9762\u7684 $\\frac{1}{4}$\uff0c\u628a\u5e73\u9762\u9006\u65f6\u9488\u65cb\u8f6c $45\\degree$\uff0c\u5219\u6bcf\u4e2a\u5976\u725b $(x, y)$ \u53ef\u4ee5\u63a5\u4f4f\u82f9\u679c $(z, w)$ \u5f53\u4e14\u4ec5\u5f53 $z \\leq x, w \\geq y$\u3002\n\n\u6b64\u65f6\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u5f00\u59cb\u8d2a\u5fc3\uff0c\u4f46\u662f\u6211\u7684\u505a\u6cd5\u662f\u7f51\u7edc\u6d41\u5efa\u6a21\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5976\u725b\uff0c\u4ece\u6c47\u70b9\u8fde\u4e00\u6761\u5411\u5b83\u7684\u6d41\u91cf\u4e3a $n_i$ \u7684\u70b9\uff0c\u4e00\u4e2a\u82f9\u679c\u8fde\u5411\u6c47\u70b9\u6d41\u91cf\u4e3a $n_i$ \u7684\u8fb9\uff0c\u5982\u679c\u4e00\u4e2a\u5976\u725b\u53ef\u4ee5\u63a5\u5230\u82f9\u679c\uff0c\u5219\u5b83\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf $+ \\infty$ \u7684\u8fb9\uff0c\u7b54\u6848\u5373\u4e3a\u6700\u5927\u6d41\u3002\n\n\u5c1d\u8bd5\u6c42\u6700\u5c0f\u5272\uff0c\u9996\u5148\u6211\u4eec\u80af\u5b9a\u4e0d\u4f1a\u53bb\u5272\u6d41\u91cf $+\\infty$ \u7684\u8fb9\uff0c\u6240\u4ee5\u6bcf\u6b21\u90fd\u662f\u5272\u6389\u4e00\u4e2a\u5976\u725b\u6216\u8005\u82f9\u679c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6c42\u89e3\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u5220\u53bb\u4e00\u4e9b\u5976\u725b\u6216\u82f9\u679c\uff0c\u4ee3\u4ef7\u4e3a $n_i$\uff0c\u4f7f\u5f97\u4efb\u610f\u4e00\u4e2a\u5976\u725b\u90fd\u63a5\u4e0d\u5230\u4efb\u610f\u4e00\u4e2a\u82f9\u679c\u3002\n\n\u8003\u8651\u5269\u4e0b\u6765\u7684\u5976\u725b\u80fd\u63a5\u5230\u7684\u82f9\u679c\u7684\u90a3\u4e2a $\\frac{1}{4}$ \u5e73\u9762\u5e76\u8d77\u6765\u957f\u4ec0\u4e48\u6837\uff0c\u4e00\u5b9a\u662f\u4e00\u6761\u4ece\u5de6\u4e0b\u5230\u53f3\u4e0a\u7684\u6298\u7ebf\u3002\u82f9\u679c\u80fd\u88ab\u5976\u725b\u63a5\u5230\u7684 $\\frac{1}{4}$ \u5e73\u9762\u5e76\u8d77\u6765\u4e5f\u540c\u7406\u3002\u4e00\u4e2a\u65b9\u6848\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u4e2a\u6298\u7ebf\u6ca1\u6709\u4ea4\uff0c\u6362\u8a00\u4e4b\u6211\u4eec\u80fd\u627e\u5230\u4e00\u6761\u6298\u7ebf\u628a\u8fd9\u4e24\u4e2a\u6298\u7ebf\u533a\u5206\u5f00\uff0c\u5c31\u662f\u8bf4\u6240\u6709\u5976\u725b\u90fd\u5728\u8fd9\u4e2a\u6298\u7ebf\u7684\u5de6\u4e0a\u65b9\uff0c\u800c\u82f9\u679c\u90fd\u5728\u53f3\u4e0b\u65b9\u3002\n\n\u5148\u5bf9\u5750\u6807\u79bb\u6563\u5316\uff0c\u7136\u540e\u4f7f\u7528 DP \u6c42\u89e3\uff0c\u8bbe $f_{i, j}$ \u8868\u793a\u5f53\u524d\u6298\u7ebf\u7ec8\u70b9\u5728 $(i, j)$ \u5e76\u4e14\u5408\u6cd5\u65f6\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u8f6c\u79fb\u662f $f_{i, j} = \\min\\{f_{i - 1, j} + C(i, j), f_{i, j - 1}\\}$\uff0c\u5176\u4e2d $C(i, j)$ \u8868\u793a\u5c06\u5904\u5728 $x = i$ \u8fd9\u6761\u76f4\u7ebf\u4e0a\uff0c$y > j$ \u7684\u82f9\u679c\u548c $y \\leq j$ \u7684\u5976\u725b\u5168\u90e8\u5220\u6389\u7684\u4ee3\u4ef7\u3002\n\n\u8fd9\u4e2a DP \u600e\u4e48\u60f3\u90fd\u8fc7\u4e0d\u53bb\uff0c\u4e8e\u662f\u8003\u8651\u4f18\u5316\uff0c\u9996\u5148\u53d1\u73b0\u7531\u4e8e\u603b\u70b9\u6570\u53ea\u6709 $n$ \u4e2a\uff0c\u6240\u4ee5 $i$ \u56fa\u5b9a\u65f6\uff0c$C(i, j)$ \u5206\u6210\u7684\u6bb5\u6570\u603b\u548c\u662f $O(n)$ \u7684\uff0c\u800c\u53e6\u4e00\u4e2a\u8f6c\u79fb\u76f8\u5f53\u4e8e\u524d\u7f00\u53d6 $\\min$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u60f3\u4ece $f_{i - 1}$ \u6574\u4f53\u8f6c\u79fb\u5230 $f_i$\uff0c\u53ea\u9700\u8981\u5b9e\u73b0\u4e24\u4e2a\u64cd\u4f5c\uff1a\u533a\u95f4\u52a0\uff0c\u524d\u7f00\u53d6 $\\min$\u3002\n\n\u8fd9\u4e2a\u7528\u7ebf\u6bb5\u6811\u5176\u5b9e\u5e76\u4e0d\u96be\u7ef4\u62a4\uff0c\u4f46\u662f\u6807\u8bb0\u6709\u70b9\u591a\uff0c\u6211\u6ca1\u5199\u3002\u6211\u5199\u7684\u662f\u7ef4\u62a4 $f$ \u7684\u5dee\u5206\u6570\u7ec4\uff0c\u6bcf\u6b21\u533a\u95f4\u52a0\u90fd\u662f\u5355\u70b9\u4fee\u6539\uff0c\u800c\u5bf9\u4e8e\u524d\u7f00\u53d6 $\\min$ \u64cd\u4f5c\uff0c\u6211\u4eec\u4ece\u540e\u5f80\u524d\uff08\u8fd9\u4e2a\u987a\u5e8f\u5176\u5b9e\u5e94\u8be5\u65e0\u6240\u8c13\u7684\uff0c\u53ea\u662f\u6211\u7684\u5199\u6cd5\u662f\u8fd9\u6837\uff09\u627e\u5230\u5dee\u5206\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u4e3a\u6b63\u7684\u5730\u65b9\uff0c\u628a\u5b83\u63a8\u5e73\uff0c\u5e76\u627e\u5230\u5dee\u5206\u6570\u7ec4\u4e2d\u4e0b\u4e00\u4e2a\u4e0d\u662f $0$ \u7684\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u63a8\u5e73\u3002\n\n\u6ce8\u610f\u5230\u5bfc\u81f4\u590d\u6742\u5ea6\u589e\u52a0\u7684\u64cd\u4f5c\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f\u627e\u5230\u6240\u6709\u4e3a\u6b63\u6570\u7684\u5730\u65b9\uff0c\u53e6\u4e00\u4e2a\u662f\u66b4\u529b\u63a8\u5e73\uff0c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u53ea\u4f1a\u51fa\u73b0\u5728\u533a\u95f4\u52a0\u4fee\u6539\u8fc7\u7684\u5355\u70b9\u4e0a\uff0c\u800c\u7531\u4e8e\u6bcf\u6b21\u63a8\u5e73\u90fd\u4f1a\u5bfc\u81f4\u5dee\u5206\u6570\u7ec4\u4e2d\u975e $0$ \u7684\u4e2a\u6570\u53d8\u5c11\uff0c\u800c\u80fd\u4f7f\u8fd9\u4e2a\u52bf\u80fd\u589e\u52a0\u7684\u662f\u533a\u95f4\u52a0\u64cd\u4f5c\u3002\u7531\u4e8e\u533a\u95f4\u52a0\u53ea\u6709 $O(n)$ \u6b21\uff0c\u6240\u4ee5\u4e24\u4e2a\u64cd\u4f5c\u7684\u6b21\u6570\u90fd\u662f $O(n)$ \u7684\u3002\n\n\u7528\u4e24\u4e2a `set` \u5206\u522b\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\u4e2d\u5927\u4e8e $0$ \u7684\u4f4d\u7f6e\u548c\u4e0d\u4e3a $0$ \u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u4f46\u662f\u4ee3\u7801\u5b9e\u73b0\u4e2d\uff0c\u6211\u6ca1\u6709\u4f7f\u7528 `set`\uff0c\u800c\u662f\u4f7f\u7528 `priority_queue` \u53bb\u5b58\u5927\u4e8e $0$ \u7684\u4f4d\u7f6e\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u6765\u627e\u5230\u4e0b\u4e00\u4e2a\u4e0d\u4e3a $0$ \u7684\u4f4d\u7f6e\u3002\u5f53\u7136\u4e0d\u7ba1\u600e\u4e48\u5b9e\u73b0\uff0c\u6700\u540e\u590d\u6742\u5ea6\u90fd\u662f $O(n \\log n)$\u3002\n\n#### \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <queue>\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int N = 200005;\nint n;\nstruct node\n{\n    int typ, x, y, val;\n} p[N];\nint hh[N << 1], cnt;\nstd::vector<int> vec[N << 1];\nll f[N << 1];\nstruct SgT\n{\n    ll mn[N << 3];\n    inline int ls(int x)\n    {\n        return x << 1;\n    }\n    inline int rs(int x)\n    {\n        return x << 1 | 1;\n    }\n    inline void pushup(int x)\n    {\n        mn[x] = std::min(mn[ls(x)], mn[rs(x)]);\n        return;\n    }\n    void insert(int x, int l, int r, int p, ll v)\n    {\n        if(l == r)\n            return mn[x] += v, void(0);\n        int mid = (l + r) >> 1;\n        if(p <= mid)\n            insert(ls(x), l, mid, p, v);\n        else\n            insert(rs(x), mid + 1, r, p, v);\n        pushup(x);\n        return;\n    }\n    int get(int x, int l, int r, int ql, int qr)\n    {\n        if(ql > qr)\n            return -1;\n        if (l >= ql && r <= qr)\n        {\n            if (mn[x] == 0)\n                return -1;\n            if(l == r)\n                return l;\n            int mid = (l + r) >> 1;\n            if(mn[ls(x)] < 0)\n                return get(ls(x), l, mid, ql, qr);\n            return get(rs(x), mid + 1, r, ql, qr);\n        }\n        int mid = (l + r) >> 1;\n        int res = -1;\n        if(ql <= mid && (res = get(ls(x), l, mid, ql, qr)) != -1)\n            return res;\n        if(qr > mid && (res = get(rs(x), mid + 1, r, ql, qr)) != -1)\n            return res;\n        return -1;\n    }\n} T;\nstd::priority_queue<int> que;\ninline void add(int pos, ll v)\n{\n    if(pos == cnt + 1)\n        return;\n    f[pos] += v, T.insert(1, 1, cnt, pos, v);\n    if(f[pos] > 0)\n        que.push(pos);\n    return;\n}\nint main(void)\n{\n    scanf(\"%d\", &n);\n    for(int i = 1, ty, t, x, v;i <= n;++i)\n    {\n        scanf(\"%d%d%d%d\", &ty, &t, &x, &v);\n        p[i] = {ty, x - t, x + t, v};\n        hh[++cnt] = p[i].x, hh[++cnt] = p[i].y;\n    }\n    std::sort(hh + 1, hh + 1 + cnt), cnt = std::unique(hh + 1, hh + 1 + cnt) - hh - 1;\n    for(int i = 1;i <= n;++i)\n    {\n        p[i].x = std::lower_bound(hh + 1, hh + 1 + cnt, p[i].x) - hh;\n        p[i].y = std::lower_bound(hh + 1, hh + 1 + cnt, p[i].y) - hh;\n        vec[p[i].x].push_back(i);\n    }\n    p[0] = {0, 0, cnt + 1, 0};\n    ll bas = 0;\n    for (int i = 1; i <= cnt; ++i)\n    {\n        std::sort(vec[i].begin(), vec[i].end(), [&](int x, int y) -> bool\n                  { return p[x].y < p[y].y; });\n        vec[i].push_back(0);\n        ll sum = 0;\n        for(int j : vec[i])\n            if(p[j].typ == 2)\n                sum += p[j].val;\n        bas += sum;\n        add(p[vec[i].front()].y, -sum);\n        for (int j = 0; j < (signed)vec[i].size() - 1; ++j)\n        {\n            int x = vec[i][j], y = vec[i][j + 1];\n            if (p[x].typ == 2)\n                sum -= p[x].val;\n            else\n                sum += p[x].val;\n            if (p[x].y == p[y].y)\n                continue;\n            add(p[x].y, sum), add(p[y].y, -sum);\n        }\n        while(!que.empty())\n        {\n            int x = que.top();\n            que.pop();\n            if(f[x] <= 0)\n                continue;\n            int now = x;\n            ll val = f[x];\n            add(x, -val);\n            while(1)\n            {\n                int to = T.get(1, 1, cnt, now + 1, cnt);\n                if(to == -1)\n                    break;\n                if(f[to] + val <= 0)\n                {\n                    add(to, val);\n                    break;\n                }\n                ll nval = f[to] + val;\n                add(to, -f[to]);\n                now = to, val = nval;\n            }\n        }\n    }\n    for (int i = 1; i <= cnt; ++i)\n        f[i] += f[i - 1];\n    printf(\"%lld\\n\", f[cnt] + bas);\n    return 0;\n}\n```",
        "postTime": 1679158994,
        "uid": 244204,
        "name": "namelessgugugu",
        "ccfLevel": 9,
        "title": "P8272 \u9898\u89e3"
    },
    {
        "content": "\u602a\u4e0d\u5f97\u505a\u4e0d\u51fa\u6765\uff0c\u9898\u76ee\u7406\u89e3\u9519\u4e86\u2014\u2014\u539f\u6765\u5976\u725b\u53ef\u4ee5\u505c\u505c\u8d70\u8d70\u554a\uff08\u6ca1\u770b\u5230\u6837\u4f8b\u89e3\u91ca\uff09\u3002\n\n\u9898\u76ee\u5728\u8c08\u5976\u725b\u63a5\u82f9\u679c\u7684\u4e8b\u60c5\uff0c\u5f88\u660e\u663e\u6211\u4eec\u9700\u8981\u8003\u5bdf\u5976\u725b\u80fd\u63a5\u5230\u82f9\u679c\u7684\u5145\u8981\u6761\u4ef6\uff0c\u53d1\u73b0\u5fc5\u987b\u6ee1\u8db3 $t'-t\\ge |x'-x|$\uff0c\u5176\u4e2d $x',t'$ \u4e3a\u82f9\u679c\u3001$x,t$ \u4e3a\u5976\u725b\uff1b\u7edd\u5bf9\u503c\u8003\u8651\u62c6\u4e3a $t'-t\\ge \\max(x'-x,x-x')$\uff0c\u4e5f\u5373\u540c\u65f6\u6ee1\u8db3 $t'-x'\\ge t-x,t'+x'\\ge t+x$ \u4e24\u4e2a\u6761\u4ef6\uff0c\u5e76\u7531\u4e0d\u7b49\u5f0f\u7ed3\u6784\u5c06 $(t-x,t+x)$ \u770b\u6210\u6574\u4f53\u3002  \n\u8003\u8651\u8fd9\u4e2a\u5f0f\u5b50\u7684\u542b\u4e49\uff0c\u5b83\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\uff0c\u90a3\u4e5f\u5c31\u662f\u4e8c\u7ef4\u6570\u70b9\uff0c\u8003\u8651\u4ee5\u5976\u725b\u4e3a\u4e3b\uff0c\u5219\u5b83\u80fd\u591f\u63a5\u5230\u7684\u82f9\u679c\u5e94\u8be5\u6ee1\u8db3 $(\\mathfrak X',\\mathfrak Y')\\in [\\mathfrak X,+\\infty)\\times [\\mathfrak Y,+\\infty)$\uff1b\u5e0c\u671b\u63a5\u5230\u7684\u70b9\u603b\u6570\u6700\u591a\u3002\u8fd9\u662f\u7ecf\u5178\u7684\u8d2a\u5fc3\u95ee\u9898\uff0c\u5148\u628a\u6240\u6709\u70b9\u90fd\u6309 $y$ \u9012\u51cf\u6392\u5e8f\uff0c$y$ \u76f8\u540c\u6309 $x$ \u9012\u51cf\u6392\u5e8f\uff0c\u6839\u636e\u9898\u76ee\u7ea6\u675f\u4e0d\u53ef\u80fd\u5b58\u5728\u4e24\u4e2a\u76f8\u540c\u7684\u70b9\uff0c\u90a3\u4e48\u987a\u6b21\u679a\u4e3e\uff0c\u5982\u679c\u662f\u82f9\u679c\u5c31\u52a0\u5165 `multiset`\uff0c\u5982\u679c\u662f\u5976\u725b\u5c31 `lower_bound` \u5f53\u524d\u7684 `multiset` \u4e2d\u6700\u5c0f\u7684\u6a2a\u5750\u6807 $\\ge \\mathfrak X$ \u7684\u70b9\u3002\u4e0d\u96be\u53d1\u73b0\u603b\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tregister char ch=getchar();register int x=0;\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn x;\n}\nconst int N=2e5+5;\nint n,ans;\nstruct P {int q,x,y,n;}op[N];\nbool operator<(P a,P b){\n\treturn a.x<b.x;\n}\nbool operator==(P a,P b){\n\treturn a.x==b.x;\n}\nmultiset<P>apple;\nmultiset<P>::iterator it;\nbool cmp(P a,P b){\n\treturn a.y==b.y?a.x>b.x:a.y>b.y;\n}\nint main(){\n\tn=read();\n\tfor(int i=1,t,x;i<=n;i++){\n\t\top[i].q=read(),t=read(),x=read(),op[i].n=read();\n\t\top[i].x=t-x,op[i].y=t+x;\n\t}\n\tsort(op+1,op+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tif(op[i].q==1){\n\t\t\twhile(op[i].n){\n\t\t\t\tit=apple.lower_bound(op[i]);\n\t\t\t\tif(it==apple.end())break;\n\t\t\t\tans+=min(op[i].n,it->n);\n\t\t\t\tif(op[i].n<it->n){\n\t\t\t\t\tP tmp=*it;\n\t\t\t\t\tapple.erase(it);\n\t\t\t\t\ttmp.n-=op[i].n;\n\t\t\t\t\tapple.insert(tmp);\n\t\t\t\t\top[i].n=0;\n\t\t\t\t}\n\t\t\t\telse if(op[i].n==it->n){\n\t\t\t\t\top[i].n=0;\n\t\t\t\t\tapple.erase(it);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\top[i].n-=it->n;\n\t\t\t\t\tapple.erase(it);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tapple.insert(op[i]);\n\t\t}\n\t}\n\tcout<<ans;\n}\n```",
        "postTime": 1669166445,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "USACO22OPEN Apple Catching G"
    },
    {
        "content": "[P8272 [USACO22OPEN] Apple Catching G](https://www.luogu.com.cn/problem/P8272)\n\n### \u9898\u89e3\n\n\u5047\u8bbe\u5728 $a(a_x,a_t)$ \u70b9\u6709\u5976\u725b\uff0c\u5728 $b(b_x,b_t)$ \u6709\u82f9\u679c $(a_t\\le b_t)$\uff0c$a$ \u53ef\u4ee5\u501f\u52a9 $b$ \u7684\u5145\u8981\u6761\u4ef6\u4e3a\uff1a\n$$\na_x-(b_t-a_t)\\le b_x\\le a_x+(b_t-a_t)\\\\\n\\Downarrow\\\\\n\\begin{cases}\na_x+a_t\\le b_x+b_t\\\\\na_x-a_t\\ge b_x-b_t\n\\end{cases}\n$$\n\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u76f4\u63a5 $x-t$ \u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u641e\u5b9a\uff08\u6ce8\u610f\u5982\u679c\u503c\u76f8\u540c $t$ \u5927\u7684\u4f18\u5148\uff09\uff0c\u8fd9\u6837\u53ea\u8981\u6bcf\u4e2a\u6570\u5339\u914d\u5728\u5b83\u4e4b\u524d\u7684\u70b9\u5c31\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u63a5\u4e0b\u6765\u53ea\u7528\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u3002\n\n\u8003\u8651\u4e24\u5934\u5976\u725b $a_1,a_2(a_x-a_t<b_x-b_t)$ \u4e00\u8d77\u5339\u914d\u82f9\u679c\uff0c\u6211\u4eec\u4f1a\u8ba9 $a_1$ **\u4f18\u5148\u5339\u914d\u82f9\u679c\u4e2d $b_x+b_t$ \u6700\u5c0f\u7684**\uff0c\u628a\u5269\u4e0b\u7684\u7559\u7ed9 $a_2$\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u662f\u5bf9\u7684\u5462\uff1f\n\n\u663e\u7136 $b_x+b_t$ \u8d8a\u5c0f\u8d8a\u96be\u88ab\u5339\u914d\uff0c\u90a3\u4e48\u5982\u679c\u53ef\u4ee5\u88ab\u5339\u914d\uff0c\u76f4\u63a5\u5339\u914d\u4e00\u5b9a\u6700\u4f18\u3002\n\n\u800c\u4e14\u5982\u679c $a_1$ \u4e0e $a_2$ \u90fd\u80fd\u591f\u5339\u914d\u540c\u4e00\u4e2a $b$\uff0c\u8ba9\u4ed6\u4eec\u4efb\u4f55\u4e00\u4e2a\u53bb\u5339\u914d\u662f\u76f8\u540c\u7684\u3002\n\n\u90a3\u4e48\u5c31\u8fd9\u6837\u88ab\u7b80\u5355\u5730\u8bc1\u660e\u4e86\u3002\n\n\u5b9e\u9645\u64cd\u4f5c\u4e2d\u53ef\u4ee5\u7528 `multiset` \u6765\u652f\u6301\u67e5\u8be2\u6bd4 $a_x+a_t$ \u5927\u7684\u6570\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n// Author:A weak man named EricQian\n#include<bits/stdc++.h>\nusing namespace std;\n#define infll 0x3f3f3f3f3f3f3f3f\n#define inf 0x3f3f3f3f\n#define Maxn 200005\n#define pb push_back\n#define pa pair<int,int>\n#define fi first\n#define se second\ntypedef long long ll;\ninline int rd()\n{\n\tint x=0;\n\tchar ch,t=0;\n\twhile(!isdigit(ch = getchar())) t|=ch=='-';\n\twhile(isdigit(ch)) x=x*10+(ch^48),ch=getchar();\n\treturn x=t?-x:x;\n}\ninline ll maxll(ll x,ll y){ return x>y?x:y; }\ninline ll minll(ll x,ll y){ return x<y?x:y; }\ninline ll absll(ll x){ return x>0ll?x:-x; }\ninline ll gcd(ll x,ll y){ return (y==0)?x:gcd(y,x%y); }\nint m,ans;\nstruct OPT\n{\n\tint opt,t,x,num;\n\tbool friend operator < (OPT a,OPT b)\n\t\t{ return (a.x-a.t!=b.x-b.t)?(a.x-a.t<b.x-b.t):(a.x>b.x); }\n}c[Maxn];\nmultiset<pa> Left;\nint main()\n{\n\t//ios::sync_with_stdio(false); cin.tie(0);\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tm=rd();\n\tfor(int i=1;i<=m;i++) c[i]=(OPT){rd(),rd(),rd(),rd()};\n\tsort(c+1,c+m+1);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(c[i].opt==1)\n\t\t{\n\t\t\tauto it=Left.lower_bound(pa(c[i].x+c[i].t,0));\n\t\t\twhile(c[i].num && it!=Left.end())\n\t\t\t{\n\t\t\t\tint tmp=min(it->se,c[i].num);\n\t\t\t\tc[i].num-=tmp,ans+=tmp;\n\t\t\t\tif(tmp==(it->se)) Left.erase(it++);\n\t\t\t\telse Left.insert(pa(it->fi,(it->se)-tmp)),Left.erase(it);\n\t\t\t}\n\t\t}\n\t\telse Left.insert(pa(c[i].x+c[i].t,c[i].num));\n\t}\n\tprintf(\"%d\\n\",ans);\n\t//fclose(stdin);\n\t//fclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1650375680,
        "uid": 113073,
        "name": "EricQian",
        "ccfLevel": 7,
        "title": "\u3010\u9898\u89e3\u3011P8272 [USACO22OPEN] Apple Catching G"
    }
]