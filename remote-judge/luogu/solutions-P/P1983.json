[
    {
        "content": "**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1a[\u9ec4\u6bdb\u732b_HYX\u7684\u535a\u5ba2](https://www.luogu.org/blog/jerriehmm/solution-p1983)**\n\n~~\u63a8\u9500\u4e0b\u6211\u7684\u7a7a\u95f4~~\uff1a[\u849f\u84bb](https://www.luogu.org/blog/jerriehmm/)\n\n## \u62d3\u6251\u601d\u60f3\n\n##### ~~\u5148\u8bfb\u8bfb\u9898~~(\u6ca1\u8bfb\u9898\u7684\u8bf7\u56de\n\n\u56e0\u4e3a\u706b\u8f66\u90fd\u8981\u505c\u9760\u6bd4\u5b83\u9ad8\u7ea7\uff08\u5927\u4e8e\u7b49\u4e8e\uff09\u7684\u8f66\u7ad9\uff0c\u6240\u4ee5\u5176\u5b83\u4e0d\u505c\u7684\u5c31\u662f\u6bd4\u5b83\u7ea7\u522b\u5c0f\uff08\u5c0f\u4e8e\uff09\u7684\u8f66\u7ad9\uff0c\u73b0\u5728\u6c42\u6700\u9ad8\u7b49\u7ea7\u7684\u8f66\u7ad9\u662f\u51e0\u7ea7\u3002\n\n\u5728\u6240\u6709\u4e0d\u505c\u7684\u7ad9\u7684\u7ea7\u522b\u5c0f\u4e8e\u505c\u9760\u7684\u7ad9\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u51fa\u4e00\u5f20\u56fe\uff08A\u6307\u5411B\u8868\u793aA\u8f66\u7ad9\u7ea7\u522b\u5927\u4e8eB\u8f66\u7ad9\uff09[\u7528\u7684\u662f\u6837\u4f8b1] ~~\u591a\u4e867-9\u53f7\u70b9\u592a\u4e11\u4e86\u6240\u4ee5\u5c31\u53bb\u6389\u4e86~~\n\n![\u5982\u56fe\u6240\u793a](https://cdn.luogu.com.cn/upload/pic/56401.png)\n\n\u6700\u540e\u5229\u7528\u62d3\u6251\u7684\u601d\u60f3\uff0c\u4e00\u5c42\u4e00\u5c42\u7684\u5220\u70b9\u5220\u7ebf\uff0c\u7edf\u8ba1\u4e0b\u5206\u4e86\u591a\u5c11\u5c42\uff0c\u7b54\u6848\u5c31\u51fa\u6765\u4e86QWQ\n\n#### \u4ec0\u4e48\u662f\u62d3\u6251\uff1a\u62d3\u6251\u6392\u5e8f\u662f\u5bf9\u6709\u5411\u65e0\u56de\u8def\u56fe\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u671f\u627e\u5230\u4e00\u4e2a\u7ebf\u6027\u5e8f\u5217\uff0c\u8fd9\u4e2a\u7ebf\u6027\u5e8f\u5217\u5728\u751f\u6d3b\u6b63\u53ef\u4ee5\u8868\u793a\u67d0\u4e9b\u4e8b\u60c5\u5b8c\u6210\u7684\u76f8\u5e94\u987a\u5e8f\u3002\u5982\u679c\u8bf4\u6240\u6c42\u7684\u56fe\u6709\u56de\u8def\u7684\u8bdd\uff0c\u5219\u4e0d\u53ef\u80fd\u627e\u5230\u8fd9\u4e2a\u5e8f\u5217\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ZYS 1005\nusing namespace std;\nint n,m,ans,st[ZYS],s,tuopu[ZYS][ZYS],de[ZYS],tt[ZYS],top;\nbool is[ZYS],bo[ZYS];\t\t\t//\u7528andyzys\u5927\u4f6c\u7684\u540d\u5b57\u505a\u6570\u7ec4\u8303\u56f4\nint main() {\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++) {\n        memset(is,0,sizeof(is));//is\u8868\u793a\u662f\u5426\u662f\u505c\u9760\u7ad9\n        scanf(\"%d\",&s);\n        for(int j=1;j<=s;j++)\n            scanf(\"%d\",&st[j]),is[st[j]]=true;\n        for(int j=st[1];j<=st[s];j++)\n            if(!is[j])\t\t\t//\u679a\u4e3e\u7ad9\u70b9\uff0c\u82e5\u4e0d\u662f\u5df2\u505c\u9760\u7684\u5c31\u5c0f\u4e8e\u6240\u6709\u505c\u9760\u7ad9\u7684\u7b49\u7ea7\n                for(int k=1;k<=s;k++)\t//\u679a\u4e3e\u5df2\u505c\u9760\u7ad9\u70b9\n                    if(!tuopu[j][st[k]]) tuopu[j][st[k]]=1,de[st[k]]++;//tuopu[i][j]\u8868\u793aj>i\u7684\u7ea7\u522b\uff0c\u5982\u4e0a\n    }\n    \n    do{\n        top=0;\n        for(int i=1;i<=n;i++)\n            if(de[i]==0&&!bo[i]) {\n                tt[++top]=i,bo[i]=true;//\u5f00\u59cb\u5c06\u51fa\u5ea6\u4e3a0\u7684\u70b9\u5220\u6389\n            }\n        for(int i=1;i<=top;i++)\n            for(int j=1;j<=n;j++)\n                if(tuopu[tt[i]][j]) tuopu[tt[i]][j]=0,de[j]--;//\u53bb\u8fb9\u53bb\u70b9\n        ans++;\n    } while(top);\n    printf(\"%d\",ans-1);//\u6700\u540e\u4e00\u6b21\u4ec0\u4e48\u70b9\u90fd\u6ca1\u6709\u4f1a\u591a\u7b97\u4e00\u6b21\uff08\u81ea\u884c\u7406\u89e3\uff09\n    return 0;\n}\n```\n## \u840c\u65b0\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u4e0d\u559c\u52ff\u55b7\u5c0f\u7a97\u79c1\u804a\n",
        "postTime": 1555049187,
        "uid": 71960,
        "name": "\u9ec4\u6bdb\u732b_HYX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "# \u66b4\u529b\u5927\u6cd5\u597d\n\u4e0b\u9762\u7ed9\u51fa\u6211\u5404\u4e2a\u53d8\u91cf\u7684\u89e3\u91ca\n- $a[i]\\text{\u8868\u793a\u7b2c}i\\text{\u4e2a\u8f66\u7ad9\u7684\u5206\u7ea7}$\n- $s[i]\\text{\u8868\u793a\u7b2ci}\\text{\u8d9f\u8f66\u6b21\u7ecf\u8fc7\u7684\u7ad9\u6570}$\n- $f[i][j]\\text{\u8868\u793a\u7b2c}i\\text{\u8d9f\u8f66\u6b21\u505c\u9760\u7684\u7b2c}j\\text{\u4e2a\u8f66\u7ad9}$\n- $have[i][j]\\text{\u8868\u793a\u7b2c}i\\text{\u8d9f\u8f66\u6b21\u662f\u5426\u7ecf\u8fc7\u7b2c}j\\text{\u4e2a\u8f66\u7ad9}$\n\n```cpp\n#include<bits/stdc++.h>//\u61d2\u4eba\u4e13\u7528\u5934\u6587\u4ef6\n#define max(x,y) ((x)>(y)?(x):(y))\n#define rpt(n) for(register int ttxyc=0;ttxyc<(n);++ttxyc)//\u5b8f\u5b9a\u4e49\nusing namespace std;\ninline int read()//\u5feb\u8bfb\n{\n\tregister int x=0,t=0;register char c=getchar();for(;c<'0'||c>'9';t|=c=='-',c=getchar());\n\tfor(;c>='0'&&c<='9';x=(x<<3)+(x<<1)+(c^48),c=getchar());return t?-x:x;\n}\nint n,m,a[1000],f[1000][1000],s[1000];bool have[1000][1000];\nmain()\n{\n\tn=read();m=read();\n\trpt(n)\u03b1[ttxyc]=1;\n\trpt(m)\n\t{\n\t\ts[ttxyc]=read();\n\t\tfor(register int i=0;i<s[ttxyc];++i)f[ttxyc][i]=read()-1,have[ttxyc][f[ttxyc][i]]=1;\n\t}\n    //\u4ee5\u4e0a\u5747\u4e3a\u8f93\u5165\n\tfor(;;)//\u5c4e\u5faa\u73af\n\t{\n\t\tbool cd=0;//\u662f\u5426\u66f4\u6539\n\t\trpt(m)\n\t\t{\n\t\t\tint maxn=0;\n\t\t\tfor(register int i=f[ttxyc][0];i<=f[ttxyc][s[ttxyc]-1];++i)\n\t\t\t\tif(!have[ttxyc][i])maxn=max(maxn,\u03b1[i]);//\u4e0d\u505c\u9760\u7684\u53d6\u6700\u5927\u503c\n\t\t\t++maxn;//\u505c\u9760\u7684\u6bd4\u4e0d\u505c\u9760\u7684\u81f3\u5c11\u591a\u4e00\n\t\t\tfor(register int i=0;i<s[ttxyc];++i)\n\t\t\t\tif(\u03b1[f[ttxyc][i]]<maxn)\u03b1[f[ttxyc][i]]=maxn,cd=1;//\u6709\u7684\u5206\u7ea7\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u66f4\u6539\n\t\t}\n\t\tif(!cd)break;//\u6ca1\u66f4\u65b0\u7684\u5c31\u8bf4\u660e\u5df2\u7ecf\u662f\u6700\u4f18\u89e3\n\t}\n\tint maxn=0;\n\trpt(n)maxn=max(maxn,\u03b1[ttxyc]);\n\tprintf(\"%d\",maxn);\n}/**/\n```",
        "postTime": 1538357519,
        "uid": 90693,
        "name": "_\u2022\u0301\u3078\u2022\u0301\u256c_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7\u3011"
    },
    {
        "content": "\u9898\u76ee\u4e2d\u8bf4\uff0c\u5982\u679c\u8fd9\u8d9f\u8f66\u6b21\u505c\u9760\u4e86\u706b\u8f66\u7ad9 x\uff0c\u5219\u59cb\u53d1\u7ad9\u3001\u7ec8\u70b9\u7ad9\u4e4b\u95f4\u6240\u6709\u7ea7\u522b\u5927\u4e8e\u7b49\u4e8e\u706b\u8f66\u7ad9 x \u7684\u90fd\u5fc5\u987b\u505c\u9760\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u8d9f\u8f66\u6b21\u7ecf\u8fc7\u4e14\u4e0d\u505c\u9760\u7684\u6240\u6709\u8f66\u7ad9\u7684\u7ea7\u522b\u90fd\u5fc5\u987b\u5c0f\u4e8e\u8fd9\u8d9f\u8f66\u6b21\u505c\u9760\u7684\u6240\u6709\u8f66\u7ad9\u7684\u7ea7\u522b\u3002\n\n\n\u56e0\u6b64\uff0c\u53ef\u4ee5\u786e\u5b9a\u67d0\u4e9b\u8f66\u7ad9\u4e24\u4e24\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u3002\u5c06\u8fd9\u4e9b\u53ef\u4ee5\u786e\u5b9a\u5927\u5c0f\u5173\u7cfb\u7684\u8f66\u7ad9\uff0c\u7531\u7b49\u7ea7\u4f4e\u7684\u8f66\u7ad9\u5411\u7b49\u7ea7\u9ad8\u7684\u8f66\u7ad9\u8fde\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u5229\u7528\u62d3\u6251\u6392\u5e8f\uff0c\u6ee1\u8db3\u8fd9\u4e9b\u5173\u7cfb\u3002\u5728\u62d3\u6251\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u9012\u63a8\u5c31\u53ef\u4ee5\u5f97\u51fa\u6bcf\u4e2a\u8f66\u7ad9\u7684\u7b49\u7ea7\uff0c\u4ece\u800c\u5f97\u51fa\u4e0d\u540c\u7b49\u7ea7\u7684\u6570\u91cf\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#define pii pair<int,int>\nconst int e=1e3+5;\nint s[e][e],n,m,ans,ru[e],vis[e],tot,pd[e][e];\nqueue<pii>q;\nvector<int>g[e];\ninline int getint()//\u8bfb\u5165\u4f18\u5316\n{\n    char ch;\n    int res=0;\n    while(ch=getchar(),ch<'0'||ch>'9');\n    res=ch-48;\n    while(ch=getchar(),ch>='0'&&ch<='9')\n    res=(res<<3)+(res<<1)+ch-48;\n    return res;\n}\ninline void bfs()//\u62d3\u6251\u6392\u5e8f \n{\n    int i;\n    for(i=1;i<=n;i++)\n    if(ru[i]==0)\n    q.push(make_pair(i,1));//\u6ca1\u6709\u5165\u5ea6\uff0c\u7ea7\u522b\u6700\u4f4e \n    ans=1;\n    while(!q.empty())\n    {\n        int u=q.front().first,val=q.front().second;\n        //\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u67092\u4e2a\u5173\u952e\u5b57\uff0c\u7b2c\u4e00\u4e2a\u662f\u8f66\u7ad9\u7f16\u53f7\uff0c\u7b2c\u4e8c\u4e2a\u662f\u7ea7\u522b\n        q.pop();\n        for(i=0;i<g[u].size();i++)\n        {\n            int v=g[u][i];\n            ru[v]--;\n            if(ru[v]==0)\n            {\n                q.push(make_pair(v,val+1));//\u9012\u63a8\uff0c\u5f53\u524d\u70b9\u7684\u7ea7\u522b\u4e3aval+1 \n                ans=max(ans,val+1);//ans\u8bb0\u5f55\u6700\u9ad8\u7ea7\u522b\uff0c\u4e5f\u5c31\u662f\u4e0d\u540c\u7ea7\u522b\u7684\u6570\u91cf \n            }\n        }\n    }\n}\nint main()\n{\n    int i,j,x;\n    n=getint();\n    m=getint();\n    for(i=1;i<=m;i++)\n    {\n        s[i][0]=getint();//s[i][0]\u4e3a\u8f66\u6b21i\u505c\u9760\u7684\u8f66\u7ad9\u6570\u91cf \n        memset(vis,false,sizeof(vis));\n        for(j=1;j<=s[i][0];j++)\n        {\n            x=getint();\n            s[i][j]=x;//s[i][j]\u8868\u793a\u8f66\u6b21i\u505c\u9760\u7684\u7b2cj\u4e2a\u8f66\u7ad9 \n            vis[x]=true;//\u5f53\u524d\u8f66\u6b21\u6709\u505c\u9760x \n        }\n        for(j=s[i][1];j<=s[i][s[i][0]];j++)//\u679a\u4e3e\u7ecf\u8fc7\u7684\u6240\u6709\u8f66\u7ad9\uff08\u4e0d\u4e00\u5b9a\u505c\u9760\uff09 \n        {\n            if(vis[j])continue;//\u8fd9\u6761\u8def\u4e0a\u6240\u6709\u4e0d\u505c\u9760\u7684\u5fc5\u987b\u6bd4\u6240\u6709\u505c\u9760\u7684\u7ea7\u522b\u4f4e \n            for(int k=1;k<=s[i][0];k++)\n            if(!pd[j][s[i][k]])//pd\u5224\u65ad\u8fd9\u6761\u8fb9\u662f\u5426\u8fd8\u6ca1\u8fde \n            {\n                ru[s[i][k]]++;//\u5165\u5ea6+1 \n                g[j].push_back(s[i][k]);\n                //j\u5411s[i][k]\u8fde\u8fb9\uff0c\u8868\u793aj\u7684\u7ea7\u522b\u5fc5\u987b\u6bd4s[i][k]\u4f4e \n                pd[j][s[i][k]]=true;//\u6807\u8bb0\u4e3a\u8fde\u8fc7\u7684\u8fb9 \n            }\n        }\n    }\n    bfs();\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1517131576,
        "uid": 15268,
        "name": "\u82b1\u6dc7\u6dcb",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "[\u535a\u5ba2](https://blog.csdn.net/xumingyang0/article/details/81021793)\n\n\u56fe\u7247\u8c8c\u4f3c\u5728\u6d1b\u8c37\u4e0a\u663e\u793a\u4e0d\u51fa\u6765\uff0c\u5efa\u8bae\u79fb\u6b65\u535a\u5ba2\n\n\u8fd9\u9898\u6709\u4e09\u79cd\u505a\u6cd5\n\n#$1.O(nm^2)$\n\n488ms  /  9.61MB  /  0.68KB\n\n\u4e0d\u7528\u8bb2\uff0c\u76f4\u63a5\u8d34\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1002;\nint n,m,i,j,a[N],d[N],ans,f[N],k,vi[N][N],c[N][N],l;\nint dfs(int x){\n    if (f[x]) return f[x];\n    for (int i=1;i<=c[x][0];i++) f[x]=max(f[x],dfs(c[x][i]));\n    return ++f[x];\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (i=1;i<=m;i++){\n        scanf(\"%d\",&a[0]);\n        for (j=1;j<=a[0];j++) scanf(\"%d\",&a[j]);\n        l=1;\n        for (j=a[1];j<a[a[0]];j++)\n            if (a[l]==j) l++;\n            else for (k=1;k<=a[0];k++)\n                    if (!vi[a[k]][j]) c[a[k]][++c[a[k]][0]]=j,vi[a[k]][j]=1;\n    }\n    for (i=1;i<=n;i++) ans=max(ans,dfs(i));\n    printf(\"%d\",ans);\n}\n```\n#$2.O(nm)$\n\n 244ms /  13.34MB /  0.69KB\n \n\u539f\u672c\u8981\u8fde$n^2$\u6761\u8fb9\uff1a\n![](https://img-blog.csdn.net/20180712200609134?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1bWluZ3lhbmcw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\u4f46\u662f\uff0c\u5982\u679c\u5728\u4e2d\u95f4\u6dfb\u52a0\u4e00\u4e2a\u865a\u70b9\uff0c\u5c31\u53ef\u4ee5\u53d8\u6210$2n$\u6761\u8fb9\uff1a\n![](https://img-blog.csdn.net/20180712200709714?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1bWluZ3lhbmcw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std; \nint n,m,ans,a[2003],s,i,j,u,to[2003][2003],uans[2003],sto[2003];\nvoid dfs(int u){\n    if (uans[u]) return;\n    for(int i=1;i<=to[u][0];i++){\n        if(!uans[to[u][i]]) dfs(to[u][i]);\n        uans[u]=max(uans[u],uans[to[u][i]]+1);\n    }\n    if(u>n) uans[u]--;\n    ans=max(ans,uans[u]);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (i=1;i<=m;i++){\n        scanf(\"%d\",&s);\n        for (j=1;j<=s;j++) scanf(\"%d\",&a[j]),sto[a[j]]=i,to[n+i][++to[n+i][0]]=a[j];\n        for (u=a[1]+1;u<a[s];u++) \n            if (sto[u]!=i) to[u][++to[u][0]]=n+i;    \n    }\n    for (i=1;i<=n;i++) \n        if (!uans[i]) dfs(i);\n    printf(\"%d\",++ans);\n}\n```\n#$3.O(nmlogn)$\n\n72ms /  7.75MB /  1.62KB\n\n\u770b\u8d77\u6765\u8fd8\u662f\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u66f4\u4f18\uff0c\u4f46\u662f\u5b9e\u9645\u5f88\u5feb\n\n\u6709\u8fd9\u6837\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u70b9\u90fd\u548c\u7236\u4eb2\u8fde\u8fb9\uff1a\n\n![](https://img-blog.csdn.net/20180712201455853?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1bWluZ3lhbmcw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u6bcf\u52a0\u8fdb\u4e00\u4e2a\u533a\u95f4\uff0c\u5219\u628a\u7ebf\u6bb5\u6811\u4e0a\u5bf9\u5e94\u533a\u95f4\u548c\u90a3\u4e2a\u70b9\u8fde\u8d77\u6765\uff0c\u6bd4\u5982\u52a0$[1,3]$\u8fd9\u4e2a\u533a\u95f4\uff1a\n\n![](https://img-blog.csdn.net/20180712201708473?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1bWluZ3lhbmcw/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\u4ee3\u7801\u662f\u53c2\u8003[\u8fd9\u91cc](https://www.luogu.org/blog/user55672/solution-p1983)\u7684\uff0c\u8001\u5e08\u7ed9\u6211\u4eec\u8bb2\u8fc7\uff0c\u4f46\u6211\u5199\u4e0d\u51fa\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1500;\nint h[N<<3],n,m,i,st[N],in[N<<3],num[N],dis[N<<3],dep[N<<3],tot,tp,q[N<<5],he,ta,cnt,j,ans;\nstruct node{\n\tint to,ne;\n}e[N*700];\ninline char gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define gc getchar\ninline int read(){\n    int x=0,fl=1;char ch=gc();\n    for (;ch<48||ch>57;ch=gc())if(ch=='-')fl=-1;\n    for (;48<=ch&&ch<=57;ch=gc())x=(x<<3)+(x<<1)+(ch^48);\n    return x*fl;\n}\nvoid add(int x,int y){\n\tin[y]++;\n\te[++tot]=(node){y,h[x]};\n\th[x]=tot;\n}\nvoid build(int t,int l,int r){\n\ttp=max(tp,t);\n\tif (l==r){\n\t\tnum[l]=t;\n\t\tdis[t]=1;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tadd(t<<1,t);\n\tbuild(t<<1,l,mid);\n\tadd(t<<1|1,t);\n\tbuild(t<<1|1,mid+1,r);\n}\nvoid update(int t,int l,int r,int x,int y,int tmp){\n\tif (x<=l && r<=y){\n\t\tadd(t,tmp);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif (x<=mid) update(t<<1,l,mid,x,y,tmp);\n\tif (mid<y) update(t<<1|1,mid+1,r,x,y,tmp);\n}\nvoid bfs(){\n\tfor (int i=1;i<=tp;i++)\n\t\tif (!in[i]) q[ta++]=i,dep[i]=dis[i];\n\twhile (he<ta){\n\t\tint u=q[he++];\n\t\tfor (int i=h[u],v;i;i=e[i].ne){\n\t\t\tv=e[i].to;\n\t\t\tdep[v]=max(dep[v],dep[u]+dis[v]);\n\t\t\tif (!(--in[v])) q[ta++]=v;\n\t\t}\n\t}\n}\nint main(){\n\tn=read();m=read();\n\tbuild(1,1,n);\n\tfor (i=1;i<=m;i++){\n\t\tcnt=read();tp++;\n\t\tfor (j=1;j<=cnt;j++) st[j]=read();\n\t\tfor (j=1;j<cnt;j++){\n\t\t\tadd(tp,num[st[j]]);\n\t\t\tif (st[j]+1<=st[j+1]-1) update(1,1,n,st[j]+1,st[j+1]-1,tp);\n\t\t}\n\t\tadd(tp,num[st[cnt]]);\n\t}\n\tbfs();\n\tfor (i=1;i<=n;i++) ans=max(ans,dep[num[i]]);\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1531398088,
        "uid": 22469,
        "name": "Mingoal",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "##\u770b\u5230\u5982\u6b64\u9c9c\u660e\u7684\u5c42\u7ea7\u5173\u7cfb\uff0c\u51c6\u51c6\u7684\u62d3\u6251\u6392\u5e8f\u6ca1\u5f97\u8bf4\uff08\u672a\u505c\u9760\u70b9 ===\u300b\u505c\u9760\u70b9\uff09\n\n##\u9700\u8981\u63d0\u4e00\u4e0b\u7684\u662f\uff0c\u6b64\u9898\u7684\u8981\u70b9\u5728\u4e8e\u5982\u4f55\u8ba1\u7b97\u7b49\u7ea7\n\n\u6211\u7528\u7684\u662fBFS\uff0c\u5229\u7528 $dep[son]=dep[father]+1$ \u9012\u63a8\u51fa\u6bcf\u4e00\u4e2a\u70b9\u5728\u56fe\u4e2d\u662f\u7b2c\u51e0\u5c42\uff0c\u8fdb\u800c\u63a8\u51fa\u4e86\u5b83\u7684\u7b49\u7ea7\uff0c\n\n\u7136\u540e\u6bcf\u6b21\u5728\u8ba1\u7b97\u5b8c\u4e00\u4e2a $dep[i]$ \u65f6\uff0c\u90fd\u7528maxx\u53d6\u6700\u5927\u503c\uff0c\n\n\u6700\u7ec8\u90a3\u4e2a\u6700\u9ad8\u7b49\u7ea7\u7684\u7b49\u7ea7\u6570\u5c31\u662f\u6574\u5f20\u56fe\u7684\u7ea7\u6570\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nint n,m,ans=0,tot=0;\nint a[1002],dep[1002],in[1002],is[1002],head[1002],vis[1002][1002];\nstruct point\n{\n    int to;\n    int nxt;\n}edge[3000010];\ninline long long read()\n{\n    long long Sum=0;\n    int F=1;\n    char c=getchar();\n    while(c>'9' || c<'0')\n    {\n        if(c=='-')\n            F=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9')\n    {\n        Sum=Sum*10+c-'0';\n        c=getchar();\n    }\n    return Sum*F;\n}\nvoid add(int u,int v)\n{\n    tot++;\n    edge[tot].to=v;\n    edge[tot].nxt=head[u];\n    head[u]=tot;\n}\nvoid Topo_sort()\n{\n    queue<int> q;\n    for(int i=1;i<=n;i++)\n    if(in[i]==0)\n    {\n        q.push(i);    \n        dep[i]=1;        \n    }\n    while(!q.empty())\n    {\n        int tt=q.front();\n        q.pop();\n        for(int i=head[tt];i;i=edge[i].nxt)\n        {\n            int v=edge[i].to;\n            dep[v]=dep[tt]+1;\n            ans=max(ans,dep[v]);\n            in[v]--;\n            if(in[v]==0)\n                q.push(v); \n        }\n    }\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=m;i++)\n    {\n        memset(a,0,sizeof(a));\n        memset(is,0,sizeof(is));\n        int nn;\n        cin>>nn;\n        for(int j=1;j<=nn;j++)\n        {\n            cin>>a[j];\n            is[a[j]]=1;            \n        }\n        for(int j=a[1]+1;j<=a[nn];j++)\n            if(!is[j])\n                for(int p=1;p<=nn;p++)\n                {\n                    if(!vis[j][a[p]])\n                    {\n                        in[a[p]]++;\n                        add(j,a[p]);\n                        vis[j][a[p]]=1;\n                    }\n                }\n    }\n    Topo_sort();\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1507173925,
        "uid": 36294,
        "name": "feng_chengjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "# \u4ece\u8f66\u7ad9\u5206\u7ea7\u5230\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\n\n\u63a8\u8350\u673a\u623f\u5927\u4f6cZJH\u7684\u535a\u5ba2[Pluto_Xz\u7684\u535a\u5ba2](https://www.luogu.org/blog/PlutoXz/)\u3002\n\n## \u5f15\u5165\n\u4f8b\u9898\uff1a[\u8f66\u7ad9\u5206\u7ea7](https://www.luogu.org/problem/P1983)\n\n\u8fd9\u9053\u9898\u4e4d\u4e00\u770b\u5c31\u80fd\u60f3\u5230\u7b49\u7ea7\u4f4e\u7684\u5411\u7b49\u7ea7\u9ad8\u7684\u8fde\u8fb9\uff0c\u5373\u4e24\u505c\u9760\u7ad9\u4e4b\u95f4\u7684\u7ad9\u70b9\u5411\u4e24\u8f66\u7ad9\u8fde\u8fb9\uff0c\u6700\u540e\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f\u627e\u51fa\u6700\u5927\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u4ee5\u9898\u76ee\u6837\u4f8b\u4e3a\u4f8b\uff0c\u5047\u8bbe\u706b\u8f66\u7ecf\u8fc7\u7ad9\u70b9\u5982\u4e0b\uff0c\u5176\u4e2d\u84dd\u8272\u4ee3\u8868\u505c\u9760\uff0c\u7ea2\u8272\u4ee3\u8868\u4e0d\u505c\u9760\uff1a\n\n![\u8f66\u7ad91](https://img-blog.csdnimg.cn/20191010081627692.png)\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c2\u7684\u7b49\u7ea7\u4e00\u5b9a\u6bd41\u30013\u30015\u548c6\u4f4e\uff0c4\u7684\u7b49\u7ea7\u4e00\u5b9a\u6bd41\u30013\u30015\u548c6\u4f4e\uff0c\u5efa\u8fb9\u5982\u4e0b\uff1a\n\n![\u8f66\u7ad92](https://img-blog.csdnimg.cn/20191010082424758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMDQxNjQx,size_16,color_FFFFFF,t_70)\n\n\u62d3\u6251\u6392\u5e8f\u51fa\u6765\u5c31\u662f\u4e24\u5c42\uff0c\u7b54\u6848\u4e3a2.\n\n\u4f46\u662f\uff0c\u5f53\u56fe\u4e2d\u7684\u70b9\u8d8a\u6765\u8d8a\u591a\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u4f1a\u7206\u70b8\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u8981\u5f15\u5165\u4e00\u79cd\u4f18\u5316\u65b9\u6cd5\u2014\u2014\u5efa\u865a\u70b9\uff01\u5c062\u548c4\u8fde\u5411\u6211\u4eec\u65b0\u5f00\u7684\u865a\u70b9\uff0c\u518d\u5c06\u865a\u70b9\u8fde\u54111\u30013\u30015\u548c6\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u5bf9\u539f\u56fe\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\n\n![\u8f66\u7ad93](https://img-blog.csdnimg.cn/20191010083024721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMDQxNjQx,size_16,color_FFFFFF,t_70)\n\n\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u865a\u70b9\u5bf9\u7b54\u6848\u4e5f\u6709\u8d21\u732e\uff0c\u6240\u4ee5\u7ecf\u8fc7\u865a\u70b9\u65f6\u8981\u7279\u5224\u4e00\u4e0b\u3002\n\n\u53ef\u662f\uff0c\u5982\u679c\u8fd9\u6837\u90fd\u8fd8\u662f\u4e0d\u6ee1\u8db3\u65f6\u7a7a\u590d\u6742\u5ea6\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u66f4\u4f18\u79c0\u7684\u5efa\u56fe\u65b9\u6cd5\u3002\u770b\u5230\u4e24\u4e2a\u8f66\u7ad9\u95f4\u6240\u6709\u8fde\u7eed\u7684\u8282\u70b9\u7684\u7b49\u7ea7\u90fd\u6bd4\u7aef\u70b9\u8f66\u7ad9\u7684\u7b49\u7ea7\u5c0f\uff0c\u4e8e\u662f\u60f3\u5230\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u5efa\u56fe\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u6765\u4ecb\u7ecd\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u3002\n\n## \u601d\u60f3\n\u663e\u800c\u6613\u89c1\uff0c\u8fd9\u91cc\u7528\u5230\u4e86\u7ebf\u6bb5\u6811\u7684\u601d\u60f3\u3002\n\n\u5f53\u5411\u4e00\u4e2a\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u8fde\u8fb9\u65f6\uff0c\u4e3a\u4e86\u51cf\u5c11\u8fde\u8fb9\u4e2a\u6570\uff0c\u6211\u4eec\u5148\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5411\u7ebf\u6bb5\u6811\u4e2d\u4ee3\u8868\u8be5\u533a\u95f4\u7684\u8282\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u4e00\u6b21\u5efa\u8fb9\u7684\u4e2a\u6570\u53d8\u4e3a$\\log n$\uff0c\u65e2\u4f18\u5316\u4e86\u65f6\u95f4\uff0c\u4e5f\u4f18\u5316\u4e86\u7a7a\u95f4\u3002\n\n## \u6d41\u7a0b\n- \u5efa\u4e00\u9897\u7ebf\u6bb5\u6811\n\n\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u90fd\u4f1a\u5efa\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u56e0\u4e3a\u662f\u4e00\u9897\u56fe\uff0c\u6240\u4ee5\u8981\u8003\u8651\u8fde\u8fb9\u3002\u56e0\u4e3a\u6700\u540e\u8981\u62d3\u6251\u6392\u5e8f\uff0c\u6240\u4ee5\u5b50\u8282\u70b9\u5411\u7236\u4eb2\u8fde\u8fb9\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u7f16\u53f7\u8981\u4ece$n+1$\u5f00\u59cb\uff08\u663e\u7136\uff09\uff0c\u4f46\u662f\u82e5\u9047\u5230\u4e86\u53f6\u5b50\u7ed3\u70b9\uff0c\u5c31\u5c06\u8be5\u70b9\u7684\u7f16\u53f7\u8bbe\u4e3a\u53f6\u5b50\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u4ee5$n=10$\u4e3a\u4f8b\uff0c\u5982\u56fe\u6240\u793a\uff08\u5176\u4e2d\u9ed1\u8272\u6570\u5b57\u4e3a\u7ebf\u6bb5\u6811\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\uff0c\u7ea2\u8272\u6570\u5b57\u4e3a\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u65b0\u7f16\u53f7\uff09\uff1a\n\n![\u8f66\u7ad94](https://img-blog.csdnimg.cn/20191010084742445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMDQxNjQx,size_16,color_FFFFFF,t_70)\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5176\u5b9e\u4e0e\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u5dee\u4e0d\u591a\uff0c\u6ce8\u610f$ndnum$\u4ece$n+1$\u5f00\u59cb\uff1a\n```cpp\nvoid build(int &k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tk=l;\n\t\treturn;\n\t}\n\tk=++ndnum;//\u4f20\u65b0\u7f16\u53f7\n\tint mid=(l+r)>>1;\n\tbuild(lid,l,mid);\n\tbuild(rid,mid+1,r);//\u4e0b\u4f20\u5de6\u53f3\u513f\u5b50\n\tadd(lid,k);\n\tadd(rid,k);//\u5411\u7236\u8282\u70b9\u8fde\u8fb9\n}\n```\n- \u8fde\u8fb9\n\n\u4e0e\u539f\u6765\u7c7b\u4f3c\uff0c\u5148\u5efa\u865a\u70b9\uff0c\u865a\u70b9\u5411\u505c\u9760\u7684\u8f66\u7ad9\u8fde\u8fb9\u3002\u63a5\u4e0b\u6765\uff0c\u5c06\u8f66\u7ad9\u4e4b\u95f4\u7684\u533a\u95f4\u5411\u865a\u70b9\u8fde\u8fb9\uff0c\u5728\u7ebf\u6bb5\u6811\u5185\u8fdb\u884c\uff0c\u7ed9\u51fa\u4e00\u7ec4\u6570\u636e\uff1a\n\n> 1 8\n\n\u5efa\u8fb9\u5982\u4e0b\uff08\u7ea2\u8272\u4e3a\u65b0\u8fb9\uff09\uff1a\n\n![\u8f66\u7ad95](https://img-blog.csdnimg.cn/20191010085759961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMDQxNjQx,size_16,color_FFFFFF,t_70)\n\n\u56e0\u4e3a\u6d89\u53ca\u5230\u7ebf\u6bb5\u6811\u5185\u7684\u5efa\u8fb9\uff0c\u6240\u4ee5\u5efa\u8fb9\u65f6\u8fd8\u8981\u5411\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u64cd\u4f5c\u4e00\u6837\uff0c\u4ece\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u5f00\u59cb\u8d70\uff0c\u4e00\u76f4\u8d70\u5230\u8981\u5efa\u8fb9\u7684\u533a\u95f4\u5185\u7684\u8282\u70b9\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\nvoid addtr(int k,int L,int R,int l,int r)\n{\n\tif(L>=l&&R<=r)\n\t{\n\t\tadd(k,ndnum);//\u7b49\u7ea7\u5c0f\u8fde\u7b49\u7ea7\u5927\n\t\treturn;\n\t}\n\tint mid=(L+R)>>1;\n\tif(l<=mid)\n\taddtr(lid,L,mid,l,r);\n\tif(r>mid)\n\taddtr(rid,mid+1,R,l,r);\n}//\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\n```\n\u4e3b\u51fd\u6570\u5185\uff1a\n```cpp\nfor(int i=1;i<=m;++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tndnum++;//\u5efa\u865a\u70b9\n\t\tfor(int j=1;j<=x;++j)\n\t\t{\n\t\t\tscanf(\"%d\",&nw[j]);\n\t\t\tadd(ndnum,nw[j]);\n\t\t}\n\t\tfor(int j=1;j<x;++j)\n\t\t{\n\t\t\tif(nw[j]+1!=nw[j+1])\n\t\t\taddtr(n+1,1,n,nw[j]+1,nw[j+1]-1);//\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9(\u7b49\u7ea7\u5c0f\u8fde\u7b49\u7ea7\u5927)\n\t\t}\n\t}\n```\n- \u5904\u7406\n\n\u6700\u540e\u5c31\u662f\u62d3\u6251\u6392\u5e8f\u4e86\u3002\u628a\u6240\u6709\u8282\u70b9\uff08\u5305\u62ec\u7ebf\u6bb5\u6811\u8282\u70b9\u548c\u865a\u70b9\uff09\u626b\u4e00\u904d\uff0c\u5c06\u5165\u5ea6\u4e3a1\u7684\u70b9\u5165\u961f\uff0c\u7136\u540e\u679a\u4e3e\u961f\u9996\u8282\u70b9\u7684\u8fb9\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u5165\u5ea6\u51cf1\uff0c\u82e5\u8be5\u8282\u70b9\u7684\u5165\u5ea6\u4e3a0\uff0c\u5165\u961f\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u9047\u5230\u521d\u59cb\u8282\u70b9\uff0c\u5373\u8282\u70b9\u7f16\u53f7\u5728$1$~$n$\u7684\u8282\u70b9\uff0c\u7b54\u6848\u624d\u4f1a\u52a01\uff0c\u5426\u5219\u4e0d\u52a01.\n\n\u4ee3\u7801\uff1a\n```cpp\nvoid topusort()\n{\n\tfor(int i=1;i<=ndnum;++i)\n\t{\n\t\tif(!in[i])\n\t\t{\n\t\t\tque[++top]=i;\n\t\t\tif(i<=n)dp[i]=1;//\u8d4b\u521d\u503c\n\t\t}\n\t}\n\twhile(hd<top)\n\t{\n\t\tint x=que[++hd];\n\t\tans=max(ans,dp[x]);\n\t\tfor(int t=head[x];t;t=tr[t].next)\n\t\t{\n\t\t\tint y=tr[t].v;\n\t\t\tdp[y]=max(dp[y],dp[x]+(y<=n));//\u72b6\u6001\u8f6c\u79fb\n\t\t\tin[y]--;\n\t\t\tif(!in[y])\n\t\t\tque[++top]=y;\n\t\t}\n\t}\n}\n```\n\n\u56e0\u4e3a\u6d89\u53ca\u62d3\u6251\u6392\u5e8f\uff0c\u6240\u4ee5\u5728\u52a0\u8fb9\u65f6\u4e00\u5b9a\u8981\u7edf\u8ba1\u8282\u70b9\u7684\u5165\u5ea6\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define maxn 4000005\n#define lid ls[k]\n#define rid rs[k]\nusing namespace std;\n\nstruct node\n{\n\tint v,next;\n}tr[maxn*10];\nint n,m,rt,ndnum,ans;\nint id[maxn],dp[maxn],nw[maxn],in[maxn];\nint ls[maxn*4],rs[maxn*4],fl[maxn*4];//\u7ebf\u6bb5\u6811\nint tot,head[maxn];\nint hd,top,que[maxn];\n\nvoid add(int x,int y)\n{\n\ttot++;\n\ttr[tot].v=y;\n\ttr[tot].next=head[x];\n\thead[x]=tot;\n\tin[y]++;//\u7edf\u8ba1\u5165\u5ea6\n}\n\nvoid build(int &k,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tk=l;\n\t\treturn;\n\t}\n\tk=++ndnum;//\u4f20\u65b0\u7f16\u53f7\n\tint mid=(l+r)>>1;\n\tbuild(lid,l,mid);\n\tbuild(rid,mid+1,r);//\u4e0b\u4f20\u5de6\u53f3\u513f\u5b50\n\tadd(lid,k);\n\tadd(rid,k);//\u5411\u7236\u8282\u70b9\u8fde\u8fb9\n}\n\nvoid addtr(int k,int L,int R,int l,int r)\n{\n\tif(L>=l&&R<=r)\n\t{\n\t\tadd(k,ndnum);//\u7b49\u7ea7\u5c0f\u8fde\u7b49\u7ea7\u5927\n\t\treturn;\n\t}\n\tint mid=(L+R)>>1;\n\tif(l<=mid)\n\taddtr(lid,L,mid,l,r);\n\tif(r>mid)\n\taddtr(rid,mid+1,R,l,r);\n}//\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\n\nvoid topusort()\n{\n\tfor(int i=1;i<=ndnum;++i)\n\t{\n\t\tif(!in[i])\n\t\t{\n\t\t\tque[++top]=i;\n\t\t\tif(i<=n)dp[i]=1;//\u8d4b\u521d\u503c\n\t\t}\n\t}\n\twhile(hd<top)\n\t{\n\t\tint x=que[++hd];\n\t\tans=max(ans,dp[x]);\n\t\tfor(int t=head[x];t;t=tr[t].next)\n\t\t{\n\t\t\tint y=tr[t].v;\n\t\t\tdp[y]=max(dp[y],dp[x]+(y<=n));//\u72b6\u6001\u8f6c\u79fb\n\t\t\tin[y]--;\n\t\t\tif(!in[y])\n\t\t\tque[++top]=y;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tndnum=n;//\u4ecen\u5f00\u59cb\u5efa\u8fb9\n\tbuild(rt,1,n);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tndnum++;//\u5efa\u865a\u70b9\n\t\tfor(int j=1;j<=x;++j)\n\t\t{\n\t\t\tscanf(\"%d\",&nw[j]);\n\t\t\tadd(ndnum,nw[j]);\n\t\t}\n\t\tfor(int j=1;j<x;++j)\n\t\t{\n\t\t\tif(nw[j]+1!=nw[j+1])\n\t\t\taddtr(n+1,1,n,nw[j]+1,nw[j+1]-1);//\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9(\u7b49\u7ea7\u5c0f\u8fde\u7b49\u7ea7\u5927)\n\t\t}\n\t}\n\ttopusort();\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n## \u603b\u7ed3\n\u5176\u5b9e\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\u597d\u50cf\u4e5f\u6ca1\u6709\u90a3\u4e48\u96be\uff0c\u4f46\u662f\u6211\u65e9\u5728\u4e24\u4e2a\u6708\u4ee5\u524d\u5c31\u60f3\u5b66\u4e86\uff0c\u76f4\u81f3\u4eca\u5929\u6211\u624d\u770b\u61c2\u3002\u4e5f\u8bb8\u9488\u5bf9\u8fd9\u9053\u666e\u53ca\u7ec4\u7684\u6570\u636e\uff0c\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\u663e\u5f97\u5c0f\u9898\u5927\u505a\u4e86\uff0c\u4f46\u662f\u9762\u5bf9\u66f4\u5927\u7684\u6570\u636e\uff0c\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\u6700\u540e\uff0c\u611f\u8c22\u673a\u623f\u5927\u4f6cZJH\u540c\u5b66\uff0c\u501f\u52a9\u4ed6\u7684\u6a21\u677f\uff0c\u6211\u624d\u770b\u61c2\u4e86\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u8fb9\uff08\u5176\u5b9e\u6211\u5957\u7528\u7684\u5c31\u662f\u4ed6\u7684\u6a21\u677f\uff09\uff0c\u5728\u6b64\u63a8\u8350\u4ed6\u7684\u535a\u5ba2[Pluto_Xz\u7684\u535a\u5ba2](https://www.luogu.org/blog/PlutoXz/)\u3002",
        "postTime": 1570670037,
        "uid": 117395,
        "name": "Bob_Wang",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u672c\u8d28\u4e0a\u662fdfs\uff08\u8bb0\u5fc6\u5316\uff09+\u90bb\u63a5\u8868\n\n\u5177\u4f53\u505a\u6cd5\u5728\u4e8e\u4e00\u4e2a\u6838\u5fc3\u63a8\u8bba\uff1a\n\n###\u2235level\u4e34\u65f6\u505c\u9760\u7ad9\u2265level\u59cb\u53d1\u7ad9\u3001\u7ec8\u70b9\u7ad9\n\n###\u2234level\u975e\u505c\u9760\u7ad9\uff1clevel\u505c\u9760\u7ad9\n\n\u56e0\u6b64\u5c31\u6709\u4e86\u5212\u5206\u7b49\u7ea7\u7684\u65b9\u6cd5\uff0c\u7528\u90bb\u63a5\u8868\u4e2d\u7684\u4e00\u6761\u201c\u505c\u9760\u7ad9\u201d\uff08A\uff09\u6307\u5411\u201c\u975e\u505c\u9760\u7ad9\u201d\uff08B\uff09\u7684\u6709\u5411\u8fb9\uff0c\u8868\u793a\u201c\u505c\u9760\u7ad9\u201d\uff08A\uff09\u6bd4\u201c\u975e\u505c\u9760\u7ad9\u201d\uff08B\uff09\u5927\n\n\u800c\u5982\u679c\u5728\u53e6\u4e00\u6761\u7ebf\u8def\u4e2dB\u53d8\u4e3a\u201c\u505c\u9760\u7ad9\u201d\uff08A'\uff09\uff0c\u5219\u518d\u6b21\u8fdb\u884c\u6807\u8bb0\u4f7f\u5f97A'\uff1eB'\n\n\u6700\u540e\u518d\u4ece\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u51fa\u53d1\u51fa\u53d1\uff0c\u6c42\u51fa\u6700\u957f\u7684\u8def\u5f84\uff0c\u5373\u4e3a\u81f3\u5c11\u8981\u5206\u7684\u7ea7\u6570\u3002\n\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u90bb\u63a5\u8868\u7684\u6807\u8bb0\u8fc7\u7a0b\u4e2d\u76f8\u540c\u7684\u8def\u5f84\u53ef\u80fd\u91cd\u590d\u591a\u6b21\uff0c\u81f4\u4f7f\u5185\u5b58\u8fc7\u5927\u3002\u3010\u89e3\u51b3\u65b9\u6cd5\uff08\u7b28\u529e\u6cd5\uff09\uff1a\u518d\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5224\u65ad\u76f8\u540c\u8def\u5f84\u662f\u5426\u51fa\u73b0\u8fc7\u3011\n\n\u800c\u5982\u679c\u66b4\u641c\u7684\u76f4\u63a5\u7ed3\u679c\u662f\u8d85\u65f6\u3002\u3010\u89e3\u51b3\u529e\u6cd5\uff1a\u8bb0\u5fc6\u5316\uff0c\u7528dis\u6570\u7ec4\u8868\u793a\u5230i\u7684\u6700\u5927\u6df1\u5ea6\uff0c\u5982\u679cdfs\u5230i\u70b9\u65f6\u7684\u6df1\u5ea6\u5c0f\u4e8edis[i]\uff0c\u5219\u526a\u679d\u3011\n\n\u90bb\u63a5\u8868\u4e0d\u61c2\u7684\u7ae5\u978b~~\uff08\u5176\u5b9e\u4e5f\u4e0d\u4f1a\u6765\u505a\u8fd9\u9053\u9898\uff09~~\uff0c\u53ef\u4ee5\u62ff[\u3010P1359\u3011\u79df\u7528\u6e38\u8247](https://www.luogu.org/problemnew/show/1359 \"\u3010P1359\u3011\u79df\u7528\u6e38\u8247\")\u6765\u8bd5\u8bd5\u624b\u3002\n\n\n\u5e9f\u8bdd\u5c11\u8bf4\uff0c\u4e0a\u4ee3\u7801\u3002\uff08\u6838\u5fc3\u53d8\u91cf\u9644\u5e26\u6ce8\u91ca\uff09\n\n\n```cpp\n    #include<bits/stdc++.h>\n    using namespace std;\n    int rd[2000],dis[2000];//rd\u5224\u65adi\u70b9\u5165\u5ea6\u662f\u5426\u4e3a0\uff08\u662f\u5426\u6709\u8fb9\u6307\u5411i\u70b9\uff09\uff0cdis\u4ece\u4efb\u610f\u4e00\u70b9\u5230i\u7684\u6700\u5927\u6df1\u5ea6\uff08\u4e0e\u8f66\u7ad9\u7ea7\u6570\u76f8\u53cd\uff09\n    int ans;\n    struct node\n    {\n        int y,nxt;\n    }edge[1000005];\n    bool eve[1005][1005];//\u5224\u65ad\u91cd\u7f16\n    int head[2000],tot=0;\n    void add(int x,int y)//\u6784\u5efa\u4e00\u6761\u6709\u5411\u8fb9\n    {\n        tot++;\n        edge[tot].y=y;\n        edge[tot].nxt=head[x];\n        head[x]=tot;\n    }\n    int a[2000],b[2000],Hash[2000];//a\u8868\u793a\u505c\u9760\u7ad9\uff0cb\u8868\u793a\u975e\u505c\u9760\u7ad9\uff0cHash\u662f\u4e3a\u4e86\u63d0\u9ad8\u7b5b\u9009\u201c\u975e\u505c\u9760\u7ad9\u201d\u7684\u901f\u5ea6\uff08\u5176\u5b9e\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u6cd5\uff09\u3002\n    void Init()\n    {\n        memset(Hash,0,sizeof(Hash));\n        int n,m=0;\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)\n            scanf(\"%d\",&a[i]),Hash[a[i]]=1;//\u8bb0\u5f55\u505c\u9760\u7ad9\uff0cHash\u6807\u8bb0\u505c\u9760\u7ad9\n        for(int i=a[1];i<=a[n];i++)\n            if(Hash[i]==0) b[++m]=i;//\u7b5b\u9009\u975e\u505c\u9760\u7ad9\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=m;j++)\n            if(!eve[a[i]][b[j]])\n            {\n                eve[a[i]][b[j]]=1;//\u8868\u793a\u6b64\u8def\u5f84\u5df2\u51fa\u73b0\n                add(a[i],b[j]);//\u6dfb\u52a0\u6709\u5411\u8fb9\uff0c\u8868\u793aa[i]\uff1eb[j]\n                rd[b[j]]=1;//\u6807\u8bb0\u5165\u5ea6\u4e0d\u4e3a0\n            }\n        return ;\n    }\n    void dfs(int u,int num)\n    {\n        if(num<=dis[u]) return ;//\u5982\u679c\u6df1\u5ea6\u4e0d\u5927\u4e8e\u539f\u6709\u6df1\u5ea6\uff0c\u5c31\u8fd4\u56de\n        dis[u]=num;//\u6807\u8bb0\u6700\u5927\u6df1\u5ea6\n        for(int i=head[u];i!=-1;i=edge[i].nxt)\n            dfs(edge[i].y,num+1);//\u5230\u4e0b\u4e00\u70b9\n    }                                                                                                 \n    int main()\n    {\n        int n,m;\n        cin>>n>>m;\n        memset(rd,0,sizeof(rd));\n        memset(dis,0,sizeof(dis));\n        memset(eve,0,sizeof(eve));\n        memset(head,-1,sizeof(head));\n        for(int i=1;i<=m;i++)\n            Init();\n        for(int i=1;i<=n;i++)\n            if(!rd[i])    dfs(i,1);//\u5982\u679c\u5165\u5ea6\u4e3a0\uff0c\u5219\u8fdb\u884c\u5c1d\u8bd5\n        for(int i=1;i<=n;i++)\n            if(dis[i]>ans) ans=dis[i];//\u6bd4\u8f83\u5f97\u51fa\u6700\u5927\u6df1\u5ea6\n        cout<<ans;\n        return 0;\n}\n```",
        "postTime": 1515322641,
        "uid": 24212,
        "name": "xyc1719",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "Accepted\n\n100  168ms /  7.77MB\n\n\u4ee3\u7801\uff1a1.82KB C++\n\n\u5927\u6982\u662f\u5168\u6d1b\u8c37\u6700\u5feb\u7684\u4e86\n\n\u62d3\u6251\u6392\u5e8f + \u865a\u70b9\u4f18\u5316 + \u7ebf\u6bb5\u6811\u4f18\u5316\u8fde\u8fb9\n\n\u8fb9\u6570 mlogn\n\n\u539f\u6765\u662f\u6240\u6709\u6ca1\u6709\u505c\u9760\u7684\u70b9\u5411\u505c\u9760\u7684\u70b9\u8fde\u8fb9\n\n\u73b0\u5728\u6539\u4e3a\u6240\u6709\u6ca1\u6709\u505c\u9760\u7684\u70b9\u5411\u865a\u70b9\u8fde \u865a\u70b9\u5411\u505c\u9760\u7684\u70b9\u8fde\u8fb9\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u4f18\u5316\n\n\u89c2\u5bdf\u5230\u505c\u9760\u7684\u70b9\u628a\u533a\u95f4\u5206\u6210\u4e86\u8bb8\u591a\u6bb5 \u5c06\u6574\u4e2a\u5e8f\u5217\u7528\u7ebf\u6bb5\u6811\u8868\u793a\n\n\u6bcf\u4e00\u6bb5\u7531\u4e0d\u8d85\u8fc7logn\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u8868\u793a \u6240\u4ee5\u53ef\u4ee5\u964d\u8fb9\u6570\n\n\u7ec6\u8282\u6bd4\u8f83\u591a \u770b\u4ee3\u7801\n\n\u2018\u2019\u2018c++\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1500;\nint head[N << 3], top, n, m, tp, stp[N], in[N << 3], arc[N];\nbool nd[N << 3];\nstruct Node\n{\n    int y, nxt;\n    Node() {    }\n    Node( int y, int nxt ) : y(y), nxt(nxt) {    }\n} e[N * 700];\nvoid Adde( int x, int y )\n{\n//    printf( \"x %d  y %d\\n\", x, y );\n    in[y]++;\n    e[++top] = Node(y, head[x]), head[x] = top;\n}\n#define ls (bt << 1)\n#define rs (bt << 1 | 1)\nvoid Build( int bt, int lf, int rg )\n{\n    tp = max(tp, bt);\n    if(lf == rg)\n    {\n        arc[lf] = bt;\n        nd[bt] = 1;\n        return;\n    }\n    int mid = (lf + rg) >> 1;\n    Adde(ls, bt);\n    Build(ls, lf, mid);\n    Adde(rs, bt);\n    Build(rs, mid + 1, rg);\n}\nvoid Query( int bt, int lf, int rg, int L, int R, int tmp )\n{\n    if(L > R) return;\n    if(L <= lf && rg <= R)\n    {\n        Adde(bt, tmp);\n        return;\n    }\n    int mid = (lf + rg) >> 1;\n    if(L <= mid) Query(ls, lf, mid, L, R, tmp);\n    if(R > mid) Query(rs, mid + 1, rg, L, R, tmp);\n}\nint que[N << 5], h, t, dep[N << 3];\nvoid Bfs()\n{\n    for(int i = 1; i <= tp; ++i)\n        if(!in[i]) que[++t] = i, dep[i] = nd[i];\n    while(h < t)\n    {\n        int u = que[++h];\n        for(int i = head[u]; i; i = e[i].nxt)\n        {\n            int v = e[i].y;\n            in[v]--;\n            dep[v] = max(dep[u] + nd[v], dep[v]);\n            if(in[v] == 0) que[++t] = v;\n        }\n    }\n}\nint main()\n{\n    cin >> n >> m;\n    Build(1, 1, n);\n    for(int i = 1, cnt; i <= m; ++i)\n    {\n        scanf( \"%d\", &cnt );\n        ++tp;\n        for(int j = 1; j <= cnt; ++j)\n            scanf( \"%d\", &stp[j] );\n        for(int j = 1; j < cnt; ++j)\n        {\n            Adde(tp, arc[stp[j]]);\n            Query(1, 1, n, stp[j] + 1, stp[j + 1] - 1, tp);\n        }\n        Adde(tp, arc[stp[cnt]]);\n    }\n    Bfs();\n    int ans = 0;\n    for(int i = 1; i <= n; ++i)\n        ans = max(ans, dep[arc[i]]);\n    cout << ans << endl;\n    return 0;\n} \n'''\n```",
        "postTime": 1507812913,
        "uid": 55672,
        "name": "Sakura___",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u6211\u6765\u8fd9\u91cc\u53d1\u9898\u89e3\u53ea\u662f\u4e3a\u4e86\u8bc1\u660e\uff1a\u67d0\u79cd\u88ab\u8ba4\u4e3a\u662f**\u975e\u6b63\u89e3**\u7684\u7b97\u6cd5\uff0c\u5176\u5b9e\u662f\u53ef\u4ee5AC\u7684\uff01\n\n\u5148\u770b\uff1ahttps://www.luogu.org/blog/user56917/solution-p1983\n\n\u5176\u5b9e\uff0c\u6211\u5e76\u6ca1\u6709\u6539\u52a8\u591a\u5c11\uff0c\u53ea\u662f\u8fdb\u884c\u4e86\u51e0\u4e2a\u5f88\u5e38\u7528\u7684\u4f18\u5316\uff1a\n\n1. \u907f\u514d\u91cd\u590d\u5b9a\u4e49\u53d8\u91cf\n\n  \u5728\u539f\u6765\u7684\u4ee3\u7801\u4e2d\uff0c\u6709\u4e00\u6bb5\u662f\u8fd9\u6837\u7684\uff1a\n  \n  ```cpp\n  for(register int iii=1;iii<=m;iii++){\n        int cnt=get();\n  ```\n  \n  \u5728\u8fd9\u4e00\u6bb5\u4e2d\uff0c`cnt`\u88ab\u53cd\u590d\u5b9a\u4e49\u4e86$ m $\u6b21\uff0c\u5bfc\u81f4\u4e86\u65f6\u95f4\u7684\u6d6a\u8d39\uff0c\u56e0\u4e3a\u8fd9\u660e\u660e\u662f\u4e00\u4e2a\u53ef\u4ee5\u4e00\u6b21\u89e3\u51b3\u7684\u95ee\u9898\u3002\n  \n2. \u5c11\u5199\u5934\u6587\u4ef6\n\n  \u4f60\u5199\u7684\u5934\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u6bcf\u8c03\u7528\u4e00\u6b21\uff0c\u7f16\u8bd1\u5668\u5c31\u8f7d\u5165\u4e00\u6b21\uff0c\u6240\u4ee5\u8bb0\u4f4f\u8fd9\u4e2a\u539f\u5219\uff1a\n  \n  **$ \\text{\u51fd\u6570\u80fd\u624b\u6253\u5c31\u624b\u6253\uff0c\u5934\u6587\u4ef6\u80fd\u4e0d\u8c03\u7528\u5c31\u4e0d\u8c03\u7528} $**\n  \n  \u6240\u4ee5\u6211\u7701\u53bb\u4e86`iostream`\u5934\u6587\u4ef6\uff0c\u6ca1\u7528`using namespace std;`\uff0c\u800c\u662f\u624b\u5199\u4e86`max`\uff1a`#define max(x,y) ((x)^(((x)^(y))&(-((x)<(y)))))`\n  \n3. \u4e0d\u7528cin/cout\n\n  cin/cout\u5176\u5b9e\u5f88\u6162\u7684\uff0c\u5982\u679c\u4f60\u88ab\u5361\u5e38\u4e86\uff0c\u8bb0\u5f97\u6362\u6210\u5feb\u8bfb/\u5feb\u8f93\n  \n\u7ecf\u8fc7\u8fd9\u51e0\u4e2a\u4f18\u5316\uff0c\u5c31\u53ef\u4ee5AC\u4e86\uff0c\u7b2c8\u4e2a\u70b9\u53ea\u7528\u4e86832ms\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define max(x,y) ((x)^(((x)^(y))&(-((x)<(y))))) //\u624b\u5199max\ntemplate <typename _Tp>\ninline void read(_Tp &x){\n    int w=1;char c=0;x=0;\n    while (c^'-'&&(c<'0'||c>'9'))c=getchar();\n    if (c=='-')w=-1,c=getchar();\n    while (c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x*=w;\n}\ninline void write(int n){\n    if(n==0) return;\n    write(n/10);\n    putchar(n%10+'0');\n}//\u5feb\u8bfb/\u5feb\u8f93\nint que[100000000],dis[2011],v[1011][1011],ints[10000],qian[1011][1011],n,m,ans,cnt;//\u53d8\u91cf\u5c3d\u91cf\u4e00\u6b21\u5b9a\u4e49\nunsigned char bv[2011],G[1011][1011],st[2011];\ninline void add(int s,int t,int l){\n    G[s][t]=1;\n    v[s][t]=max(v[s][t],l);\n}\nint main(){\n    read(n),read(m);\n    for(register int iii=1;iii<=m;iii++){\n        read(cnt);\n        memset(bv,0,sizeof(bv));\n        for(register int i=1;i<=cnt;i++)read(ints[i]),bv[ints[i]]=1;\n        for(register int i=1;i<=cnt;i++)\n        for(register int j=ints[1];j<=ints[cnt];j++)if(!bv[j])add(j,ints[i],1);\n    }//register\u5b9a\u4e49\u53d8\u91cf\u5f88\u5feb\u7684\n    memset(bv,0,sizeof(bv));\n    for(register int i=1;i<=n+1;i++)dis[i]=-1234567890;\n    register int head=0,tail=1;que[0]=n+1;\n    dis[n+1]=0;\n    for(register int i=1;i<=n;i++)add(n+1,i,1);\n    for(register int i=1;i<=n+1;i++)\n    for(register int j=1;j<=n+1;j++)\n    if(i!=j&&G[i][j])qian[i][0]++,qian[i][qian[i][0]]=j;\n    do{\n        int me=que[head];head++;bv[me]=0;\n        for(register int j=1;j<=qian[me][0];j++){\n            int i=qian[me][j];\n            if(dis[me]+v[me][i]>dis[i]){\n                dis[i]=dis[me]+v[me][i];\n                if(!bv[i])bv[i]=1,que[tail++]=i;\n            }\n        }\n    }while(head<tail);\n    for(register int i=1;i<=n;i++)st[dis[i]]=1;\n    for(register int i=1;i<=1000;i++)ans+=st[i];\n    write(ans);\n    return(0);\n}\n```\n\n\u6073\u8bf7\u7ba1\u7406\u5458\u628a\u6211\u8fd9\u7bc7\u9898\u89e3\u8ddf[\u8fd9\u7bc7\u6587\u7ae0](https://www.luogu.org/blog/user56917/solution-p1983)\u6446\u5728\u4e00\u8d77",
        "postTime": 1534937321,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u9996\u5148\u8981\u8bf4\u7684\u662f\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u80fd\u5f9790\u5206\u4f1aT\u6389\u7b2c8\u4e2a\u70b9\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u697c\u4e0b\u7684\u90fd\u5728\u7528\u62d3\u6251\u6392\u5e8f\u601d\u8def\u672a\u514d\u6709\u4e9b\u72ed\u7a84\u4e86\uff0c\u51b5\u4e14\u9898\u89e3\u4e0d\u4e00\u5b9a\u90fd\u5fc5\u987b\u662fAC\u4ee3\u7801\u3002\u6211\u7684\u601d\u8def\u662f\u7528\u5dee\u5206\u7ea6\u675f\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u8d9f\u8f66\u4ed6\u6240\u505c\u8fc7\u7684\u8f66\u7ad9\u7684\u5206\u7ea7\u4e00\u5b9a\u8981\u5927\u4e8e\u8d77\u70b9\u5230\u7ec8\u70b9\u95f4\u672a\u505c\u8fc7\u7684\u8f66\u7ad9\uff0c\u7136\u540e\u8fd9\u5c31\u662f\u663e\u800c\u6613\u89c1\u7684\u5dee\u5206\u7ea6\u675f\u5173\u7cfb\uff0c\u628a\u7ecf\u8fc7\u4f46\u662f\u6ca1\u505c\u8fc7\u7684\u8f66\u7ad9\u5411\u505c\u8fc7\u7684\u8f66\u7ad9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a1\u7684\u6709\u5411\u8fb9\uff0c\u9898\u76ee\u8ba9\u6211\u4eec\u6c42\u51fa\u6700\u5c0f\u5206\u7ea7\u6570\uff0c\u6211\u4eec\u5e72\u8106\u5c31\u7528\u6700\u957f\u8def\u6c42\u51fa\u6240\u6709\u8f66\u7ad9\u5206\u7ea7\u7684\u6700\u5c0f\u89e3\uff0c\u8fd9\u6837\u53ef\u4ee5\u770b\u4f5c\u628a\u4ed6\u4eec\u7684\u5206\u7ea7\u201c\u538b\u5b9e\u201d\uff0c\u8ba9\u80fd\u53d6\u7b49\u7684\u5c3d\u91cf\u53d6\u7b49\uff0c\u5206\u7ea7\u6570\u80af\u5b9a\u662f\u6700\u5c0f\u7684\u3002\u4f46\u662f\u8fd9\u6837\u5efa\u56fe\u7684\u8bdd\u8fde\u7684\u8fb9\u4f1a\u975e\u5e38\u591a\uff0c\u6211\u7528\u4e86\u4e2a\u90bb\u63a5\u77e9\u9635\uff0c\u53ef\u662f\u8fd8\u662f\u56e0\u4e3a\u7a20\u5bc6\u56fe\u7684\u539f\u56e0\u5c31T\u4e86\u7b2c8\u4e2a\u70b9\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ninline int get(){\n\tint n;char c;\n\twhile((c=getchar())||1)if(c>='0'&&c<='9')break;\n\tn=c-'0';\n\twhile((c=getchar())||1){\n\t\tif(c>='0'&&c<='9')n=n*10+c-'0';\n\t\telse return(n);\n\t}\n}\nint que[100000000];\nint dis[2011];\nunsigned char bv[2011];\nint v[1011][1011];\nunsigned char G[1011][1011];\ninline void add(int s,int t,int l){\n\tG[s][t]=1;\n\tv[s][t]=max(v[s][t],l);\n}\nint ints[10000];\nunsigned char st[2011];\nint qian[1011][1011];\nint main(){\n\tint n=get(),m=get();\n\tfor(register int iii=1;iii<=m;iii++){\n\t\tint cnt=get();\n\t\tmemset(bv,0,sizeof(bv));\n\t\tfor(register int i=1;i<=cnt;i++){\n\t\t\tints[i]=get();bv[ints[i]]=1;\n\t\t}\n\t\tfor(register int i=1;i<=cnt;i++){\n\t\t\tfor(register int j=ints[1];j<=ints[cnt];j++){\n\t\t\t\tif(!bv[j]){\n\t\t\t\t\tadd(j,ints[i],1);//\u5c0f\u7684\u5411\u5927\u7684\u8fde\u8fb9\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tmemset(bv,0,sizeof(bv));\n\tfor(register int i=1;i<=n+1;i++){\n\t\tdis[i]=-1234567890;\n\t}\n\tregister int head=0,tail=1;que[0]=n+1;\n\tdis[n+1]=0;\n\tfor(register int i=1;i<=n;i++){\n\t\tadd(n+1,i,1);//\u8d85\u7ea7\u6e90\u70b9\u4f7f\u5f97\u6240\u6709\u5206\u7ea7\u90fd\u5927\u4e8e\u7b49\u4e8e1\n\t}\n\tfor(register int i=1;i<=n+1;i++){\n\t\tfor(register int j=1;j<=n+1;j++){\n\t\t\tif(i!=j){\n\t\t\t\tif(G[i][j]){\n\t\t\t\t\tqian[i][0]++;qian[i][qian[i][0]]=j;\n\t\t\t\t}//\u524d\u5411\u661f\u5b58\u56fe\n\t\t\t}\n\t\t}\n\t}\n\tdo{//\u6700\u957f\u8def\n\t\tint me=que[head];head++;bv[me]=0;\n\t\tfor(register int j=1;j<=qian[me][0];j++){\n\t\t\tint i=qian[me][j];\n\t\t\tif(dis[me]+v[me][i]>dis[i]){\n\t\t\t\tdis[i]=dis[me]+v[me][i];\n\t\t\t\tif(!bv[i]){\n\t\t\t\t\tbv[i]=1;que[tail]=i;tail++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}while(head<tail);int ans=0;\n\tfor(register int i=1;i<=n;i++)st[dis[i]]=1;\n\tfor(register int i=1;i<=1000;i++){\n\t\tif(st[i])ans++;//\u4e0d\u540c\u89e3\u7684\u4e2a\u6570\u5373\u4e3a\u7b54\u6848\n\t}\n\tcout<<ans<<endl;\n\t//for(register int i=1;i<=n;i++)printf(\"%d \",dis[i]);\n\treturn(0);\n}\n```",
        "postTime": 1521870650,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u62d3\u6251\u6392\u5e8f\u7684\u7ecf\u5178\u9898\uff08\u672c\u6765\u611f\u89c9\u662f\u5dee\u5206\u7ea6\u675f\u6765\u7740\uff09\u3002\u6839\u636e\u9898\u76ee\u7684\u610f\u601d\uff0c\u5982\u679c\u4f60\u505c\u9760\u4e86\u4e00\u4e2a\u7ad9\u70b9\uff0c\u6240\u6709\u7b49\u7ea7\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u7ad9\u70b9\u7684\u7ad9\u70b9\u90fd\u8981\u505c\u9760\uff0c\u53cd\u8fc7\u6765\u4e5f\u5c31\u662f\u6240\u6709\u8d77\u59cb\u7ad9\u548c\u7ec8\u70b9\u7ad9\u4e2d\u95f4\u6ca1\u6709\u505c\u9760\u7684\u7ad9\u70b9\u7684\u7b49\u7ea7\u4e00\u5b9a\u662f\u5c0f\u4e8e\u505c\u9760\u7684\u7ad9\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u8d77\u70b9\u5230\u7ec8\u70b9\u6240\u6709\u6ca1\u505c\u9760\u7684\u7ad9\u70b9\u50cf\u505c\u9760\u7684\u7ad9\u70b9\u8fde\u8fb9\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### \u6ce8\u610f\uff1a\u5982\u679c\u8fde\u8fb9\u7528\u7684\u662f\u8fb9\u8868\uff0c\u6570\u7ec4\u8981\u5f00\u5f97\u975e\u5e38\u5927\uff01\uff01\u5e94\u8be5\u662f\u4e00\u767e\u4e07\u4ee5\u4e0a\uff0c\u56e0\u4e3a\u80fd\u591f\u8fde\u7684\u8fb9\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5f88\u591a\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,m,a[10010],tu[3010][3010],rd[10010],head[4000010],ver[4000010],Next[4000010],tot,ans=1,s;\nbool v[10010];\nstruct rec{\n\tint num,lev;\n};\nqueue<rec> q;\nvoid add(int x,int y)\n{\n        ver[++tot]=y;\n        Next[tot]=head[x],head[x]=tot;\n}\nint main()\n{\n       cin>>n>>m;\n       memset(tu,false,sizeof(tu));\n       for(int i=1;i<=m;i++)\n       {\n           memset(v,false,sizeof(v));\n           cin>>s;\n           for(int j=1;j<=s;j++)\n           {\n               cin>>a[j];\n               v[a[j]]=true;\n           }\n           for(int j=a[1];j<=a[s];j++)\n           {\n               if(v[j])\n                   continue;\n               for(int k=1;k<=s;k++)\n               {\n                   if(tu[a[k]][j])\n                       continue;\n                   rd[j]++;\n                   tu[a[k]][j]=true;\n                   add(a[k],j);\n               }\n           }\n       }\n       for(int i=1;i<=n;i++)\n      \t\t if(rd[i]==0)\n          {\n               rec now;\n               now.num=i;\n               now.lev=1;\n               q.push(now);\n           }\n       while(q.size())\n       {\n           rec now=q.front();\n           q.pop();\n           int x=now.num,z=now.lev;\n           for(int i=head[x];i;i=Next[i])\t\n           {\n               int y=ver[i]; \n               rd[y]--;\n               if(rd[y]==0)\n               {\n                   rec NexT;\n                   NexT.num=y,NexT.lev=z+1;\n                   q.push(NexT);\n                   ans=max(ans,NexT.lev);\n               }\n           }\n       }\n       cout<<ans<<endl;\n       return 0;\n}\n```\n",
        "postTime": 1565963198,
        "uid": 67886,
        "name": "\u5730\u8868\u6700\u5f3a\u7537\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u628a\u6bcf\u4e2a\u8f66\u7ad9\u770b\u6210\u56fe\u7684\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u4ece a[1]\u5230 a[s]\u4e2d\uff0c\u505c\u9760\u7684\u7ad9\u70b9\u4e3a a[1],a[2],\u2026,a[s]\uff0c\u5219\u610f\u5473\u7740\n\n\u4ece a[1]\u5230 a[s]\u4e2d\u6ca1\u6709\u505c\u9760\u7684\u8f66\u7ad9\u7684\u7b49\u7ea7\u90fd\u5c0f\u4e8e a[1],a[2],\u2026,a[s]\u7684\u7b49\u7ea7\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8fd9\u4e9b\u7ad9\u70b9\u5206\u522b\n\u5f15\u4e00\u6761\u6709\u5411\u8fb9\u5230 a[1],a[2],\u2026,a[s]\u5bf9\u5e94\u7684\u70b9\uff0c\u6bd4\u5982\u6837\u4f8b 1 \u5efa\u7acb\u7684\u56fe\u5982\u4e0b\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/t3gmvkdc.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u7531\u56fe\u53ef\u4ee5\u770b\u51fa\u628a 2,4 \u7684\u7b49\u7ea7\u8d4b\u4e3a 1\uff0c1,3,5,6 \u7684\u7b49\u7ea7\u8d4b\u4e3a 2\uff0c7\uff0c8\uff0c9 \u8d4b\u4e3a 1 \u6216 2 \u5747\u53ef\uff0c\u5373\u6700\u5c11\u5212\u5206\n\u7b49\u7ea7\u4e3a 2\u3002\n\n\u7531\u4e0a\u5206\u6790\u53ef\u77e5\uff0c\u5efa\u7acb\u7684\u56fe\u65f6\u6709\u5411\u65e0\u73af\u56fe\uff08DAG \u56fe\uff09\u3002\n\u62d3\u6251\u6392\u5e8f\u662f DAG \u56fe\u7684\u7ecf\u5178\u7b97\u6cd5\uff0c\u53ef\u7528 BFS \u548c DFS \u5b9e\u73b0\uff0c\u5728\u6392\u5e8f\u65f6\uff0c\u65e2\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u70b9\u6307\u5b9a\u4e00\u4e2a\u7b49\u7ea7\u3002\n\n\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5165\u5ea6\u6570\u7ec4\uff1aint rd[maxn];\n//rd[i]\u8868\u793a\u7ed3\u70b9 i \u7684\u5165\u5ea6\uff0c\u5728\u8f93\u5165\u5efa\u7acb\u56fe\u7684\u5b58\u50a8\u7ed3\u6784\u65f6\u7edf\u8ba1\nBFS \u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\uff1a\n\nStep1\u3001\u628a\u56fe\u4e2d\u6240\u6709\u6ca1\u6709\u524d\u9a71\uff08\u5165\u5ea6\u4e3a 0\uff09\u7684\u70b9\u52a0\u5165\u961f\u5217\n\nStep2\u3001\u4ece\u961f\u9996\u4e2d\u53d6\u51fa\u4e00\u4e2a\u6ca1\u6709\u524d\u9a71(\u5373\u5165\u5ea6\u4e3a 0)\u7684\u9876\u70b9\u5e76\u4e14\u8f93\u51fa\u5b83. \n\nStep3\u3001\u4ece\u56fe\u4e2d\u5220\u53bb\u8be5\u9876\u70b9\u540e\uff0c\u628a\u65b0\u4ea7\u751f\u7684\u5165\u5ea6\u4e3a 0 \u7684\u7ed3\u70b9\u52a0\u5165\u961f\u5c3e. \n\nStep4\u3001\u91cd\u590d\u4e0a\u8ff0 step1\u3001step2\uff0c\u961f\u5217\u4e3a\u7a7a\n\n\u62d3\u6251\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u5224\u65ad\u56fe\u662f\u5426\u6709\u73af \uff1a \n\n\u5982\u679c\u6700\u540e\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574\u7684\u62d3\u6251\u5e8f\u5217\uff0c\u5219\u662f DAG \u56fe\uff0c\u5426\u5219\u6709\u73af\n\n\u5728\u8fd9\u91cc\u7531\u4e8e\u56fe\u7684\u9876\u70b9\u6700\u591a\u6709 1000 \u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff0c\u4e14\u8fd9\u6837\u8fd8\u53ef\u4ee5\u53bb\u9664\u91cd\u8fb9\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1002;\nint n,m,s,a[N],rd[N],dist[N];\nbool v[N];\nint g[N][N];\nvoid toposort(){ //\u62d3\u6251\u6392\u5e8f\n\tqueue<int>q;\n\tfor(int i=1;i<=n;i++)\n\t\tif(rd[i]==0)\n\t\t{ //\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u8fdb\u961f\u5217\n\t\t\tq.push(i);\n\t\t\tdist[i]=1;\n\t\t} \n\twhile(!q.empty())\n\t{ \n\t\tint i=q.front(); \n\t\tq.pop(); //\u53bb\u9664\u961f\u9996\u5143\u7d20 i\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(g[i][j])\n\t\t\t{ //\u5982\u679c i->j \u6709\u8fb9\n\t\t\t\tif(rd[j]>0)\n\t\t\t\t\trd[j]--; // j \u7684\u5165\u8bfb\u51cf\u5c11 1\n\t\t\t\tif(rd[j]==0)\n\t\t\t\t{ //\u82e5 j \u53d8\u6210\u5165\u8bfb\u4e3a 0 \u7684\u70b9\uff0c\u5219\u8fdb\u961f\u5217\n\t\t\t\t\tq.push(j);\n\t\t\t\t\tdist[j]=dist[i]+1; //\u5176\u7b49\u7ea7\u5728 i \u7684\u57fa\u7840\u4e0a\u589e\u52a0 1\uff08i \u7684\u7b49\u7ea7\u5c0f\u4e8e j\uff09\n\t\t\t\t}\t \n\t\t\t} \n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{ //\u5efa\u7acb\u56fe\u8bba\u6a21\u578b\n\t\tscanf(\"%d\",&s);\n\t\tmemset(v,0,sizeof(v)); \n\t\tfor(int k=0;k<s;k++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[k]);\n\t\t\tv[a[k]]=1; \n\t\t}\t \n\t\tfor(int j=a[0];j<a[s-1];j++)\n\t\t\tif(!v[j]) \n\t\t\t\tfor(int k=0;k<s;k++)\n\t\t\t\t\tif(g[j][a[k]]==0)\n\t\t\t\t\t{\t\n\t\t\t\t\t\tg[j][a[k]]=1;\n\t\t\t\t\t\trd[a[k]]++;\n\t\t\t\t\t} \n\t}\n\ttoposort();\n\tint Ans=1;\n\tfor(int i=1;i<=n;i++)\n\t\tAns=max(Ans,dist[i]);\n\tcout<<Ans<<endl;\n\treturn 0;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n+e)\uff0c\u5176\u4e2d n \u65f6\u56fe\u7684\u70b9\u6570\uff0ce \u65f6\u8fb9\u6570\n\n\u603b\u7ed3\uff1a\n\u7b97\u6cd5\uff1a\u56fe\u7684 BFS\n\u77e5\u8bc6\u70b9\uff1aDAG \u56fe\u3001\u62d3\u6251\u6392\u5e8f\u3001\u56fe\u8bba\u6a21\u578b\u7684\u5efa\u7acb",
        "postTime": 1572445595,
        "uid": 110193,
        "name": "zhoukunrui",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "## \u6211\u4eec\u7528\u62d3\u6251\u6392\u5e8f\u505a\u8fd9\u9053\u9898\n\n\u5148\u8bb2\u89e3\u4e00\u4e0b**\u62d3\u6251\u6392\u5e8f**\uff1a\n\n\u62d3\u6251\u6392\u5e8f\u662f\u7528\u6765\u89e3\u51b3**AOV\u7f51**\u7684\u95ee\u9898\u7684\u4e00\u4e2a\u7b97\u6cd5\n\n**AOV\u7f51**\u662f\u4e00\u4e2a**\u65e0\u73af\u6709\u5411\u56fe**\uff0c\u5f62\u8c61\u7684\u89e3\u91ca\u4e00\u4e0b\uff1a\u4e00\u4e2a\u519c\u592b\u6709n\u9879\u519c\u6d3b\u8981\u5e72\uff0c\u4f46\u519c\u6d3b\u662f\u6709\u5148\u540e\u987a\u5e8f\u7684\uff08\u4f8b\u5982\u5fc5\u987b\u5148\u7ed9\u5e84\u7a3c\u65bd\u80a5\uff0c\u6d47\u6c34\uff0c\u6700\u540e\u624d\u80fd\u91c7\u6458\uff0c~~\u603b\u4e0d\u80fd\u62d4\u82d7\u52a9\u957f\u554a~~\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u56fe\u6765\u5f62\u8c61\u7684\u63cf\u7ed8\u51fa\u6765\uff08\u5fc5\u987b\u5148\u5b8c\u6210\u7684\u519c\u6d3bA\u6307\u5411\u5fc5\u987b\u5b8c\u6210A\u8fd9\u4e2a\u519c\u6d3b\u624d\u53ef\u4ee5\u505a\u7684\u519c\u6d3bB\uff0c\u4ee5\u6b64\u6784\u6210\u4e00\u4e2a\u56fe\uff09\uff0c\u8fd9\u5c31\u662fAOV\u7f51\u3002\n\n\u7ed9\u5f20\u56fe\u5f62\u8c61\u4e00\u4e0b\uff0c\u5c31\u4e0d\u53e3\u80e1\u4e86\n\n![](https://cdn.luogu.com.cn/upload/pic/60542.png)\n\n\u65e0\u73af\u662f\u56e0\u4e3a\u6709\u73af\u5c31\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/60544.png)\n\n\u90a3\u4e48\u5b8c\u62101\u9700\u8981\u5b8c\u62104,\u5b8c\u62104\u9700\u8981\u5b8c\u62103\uff0c\u5b8c\u62103\u9700\u8981\u5b8c\u62102\uff0c\u5b8c\u62102\u9700\u8981\u5b8c\u62101\u2026\u2026\u2026\u2026\u8bf6\uff0c\u5b8c\u62101\u9700\u8981\u5b8c\u62101\uff1f\u8fd9\u5c31\u4e0d\u5bf9\u4e86\u3002\n\n\u62d3\u6251\u6392\u5e8f\u662f\u628a\u8fd9\u79cdAOV\u7f51\u8f6c\u6362\u6210\u4e00\u4e2a\u5e8f\u5217\uff08\u4ece\u5148\u5b8c\u6210\u7684\u5230\u540e\u5b8c\u6210\u7684\uff09\u7684\u7b97\u6cd5\uff08\u76f8\u540c\u7ea7\u522b\u8c01\u5728\u524d\u8c01\u5728\u540e~~\u968f\u4f60\u5927\u5c0f\u4fbf~~\uff09\n\n### \u518d\u6765\u5206\u6790\u4e00\u4e0b\u9898\u76ee\n\n\n\u9898\u76ee\u4e2d\u8981\u6c42\u6c42\u6700\u5927\u7ea7\u522b\u7684\u8f66\u7ad9\uff0c\u800c\u6211\u4eec\u77e5\u9053\u6700\u5c0f\u7ea7\u522b\u7684\u8f66\u7ad9\uff081\uff09\u5c31\u53ef\u4ee5\u5411\u4e0a\u63a8\u51fa\u6700\u5927\u7ea7\u522b\u7684\u8f66\u7ad9\u4e86\n\n\u7a76\u7adf\u600e\u4e48\u63a8\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u8ba9\u7ea7\u522b\u5c0f\u7684\u8fb9\u6307\u5411\u7ea7\u522b\u5927\u7684\u8fb9\uff0c\u5e76\u5728\u961f\u5217\u4e2d\u63d2\u5165\u4e24\u4e2a\u5143\u7d20\u5206\u522b\u8868\u793a\u5f53\u524d\u8f66\u7ad9\u7684\u7f16\u53f7\u548c\u7ea7\u522b\uff08\u7ea7\u522b\u53ef\u4ee5\u4ece1\u5f00\u59cb\u6162\u6162\u5411\u4e0a+1\uff09\uff0c\u7136\u540e\u505a\u62d3\u6251\u6392\u5e8f\uff0cans\u5b58\u6700\u5927\u7684\u7ea7\u522b\uff08\u5728\u6bcf\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\u52a0\u8fb9\u7684\u65f6\u5019\u66f4\u65b0\u5c31\u597d\u4e86\uff09\n\n### \u5173\u4e8e\u672c\u9898\u9700\u8981\u7528\u5230\u7684\u6570\u636e\u7ed3\u6784\uff1a\n\n\uff08\u961f\u5217\u5c31\u4e0d\u8bf4\u4e86\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a\uff09\n\n**pair\u6570\u636e\u7ed3\u6784\uff1a**\n\n\u662f\u4e00\u79cd~~\u5e38\u7528\u7684~~**\u6570\u636e\u7ed3\u6784**\uff0c\u7b80\u5355\u7684\u63d0\u4e00\u4e0b\u5427\n\n```\npair\u987e\u540d\u601d\u4e49\uff0c\u662f\u4e00\u5bf9\u7684\u610f\u601d\uff0c\u5728\u6570\u636e\u7ed3\u6784\u4e2d\u4e5f\u5982\u6b64\n```\n\n**\u5b9a\u4e49\uff1a**\n\n```cpp\npair < \u7b2c\u4e00\u4e2a\u7684\u53d8\u91cf\u7c7b\u578b, \u7b2c\u4e8c\u4e2a\u7684\u53d8\u91cf\u7c7b\u578b > \u53d8\u91cf\u6216\u6570\u7ec4\u540d\u79f0\n```\n\u5148\u7528\u505aint int ans[10001]\u5427\n\n**\u7b2c\u4e00\u4e2a\u5143\u7d20\uff1a**\n\n```cpp\nans[i].first\n```\n**\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff1a**\n\n```cpp\nans[i].second\n```\n\n**\u5f3a\u5236\u628a\u4e24\u4e2a\u5143\u7d20\u7ec4\u6210\u4e00\u4e2apair\uff1a**\n\n```cpp\nint a = 10;\nint b = 43;\nans[i] = make_pair(a, b);\n```\n\n### code1\uff1a\uff08\u90bb\u63a5\u77e9\u9635\u505a\u6cd5\uff0c\u6b64\u9898\u4e0d\u4f1a\u7206\u7a7a\u95f4\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nqueue < pair < int, int > > pru;//\u961f\u5217 + pair \nint n, m, p, f[5001][5001], q[100001], in[100001], out[100001], ans;//in[i]\u8868\u793ai\u7684\u5165\u5ea6\uff0cout[i]\u8868\u793ai\u7684\u51fa\u5ea6\uff0cans\u5b58\u6700\u5927\u7ea7\u522b\uff0cf[i][j]\u8868\u793ai\u5411j\u8fde\u4e86\u4e00\u6761\u8fb9(i\u7684\u7ea7\u522b\u6bd4j\u5c0f\u624d\u8fde)\uff0c \nbool vis[100001], choose[5001][5001];//vis[i]\u8868\u793a\u5217\u8f66\u662f\u5426\u5728i\u505c\u9760\u8fc7\u4e86\uff0cchoose[i][j]\u8868\u793ai\u662f\u5426\u5411j\u8fde\u8fc7\u8fb9\u4e86\nint main()\n{\n    scanf(\"%d %d\", &n, &m);\n    while(m--)\n    {\n        memset(vis, false, sizeof(vis));//\u6bcf\u6b21\u90fd\u6e05\u7a7a \n        scanf(\"%d\", &p);\n        for(register int i = 1; i <= p; ++i)\n        {\n            scanf(\"%d\", &q[i]);\n            vis[q[i]] = true;//\u505c\u9760\u4e86 \n        }\n        for(register int i = q[1]; i <= q[p]; ++i)\n        {\n            if(!vis[i])//\u6ca1\u505c\u9760\u7684\u80af\u5b9a\u6bd4\u505c\u9760\u7684\u7ea7\u522b\u5c0f\uff0c\u6240\u4ee5\u8981\u8fde\u8fb9 \n            {\n                for(register int j = 1; j <= p; ++j)\n                {\n                    if(!choose[i][q[j]])//\u6ca1\u7ec3\u8fc7\u624d\u8fde\uff0c\u4e0d\u80fd\u91cd\u590d\u8fde \n                    {\n                        ++in[q[j]];//q[j]\u5165\u5ea6++ \n                        ++out[i];//i\u51fa\u5ea6++ \n                        f[i][out[i]] = q[j];//\u8fde\u8fb9 \n                        choose[i][q[j]] = true;//\u8fde\u8fc7\u4e86 \n                    }\n                }\n            }\n        }\n    }\n    for(register int i = 1; i <= n; ++i)\n    {\n        if(in[i] == 0)//\u5165\u5ea6\u4e3a0\u7684\u4ee3\u8868\u5c31\u662f\u6700\u4f4e\u7ea7\u4e86(\u6ca1\u6709\u4eba\u6bd4\u5b83\u4f4e)\uff0c\u53ef\u4ee5\u5f53\u505a\u8d77\u70b9 \n        {\n            pru.push(make_pair(i, 1));//\u6700\u4f4e\u7ea7\u662f1\u7ea7(\u6ca1\u67090\u7ea7\u5427......) \n        }\n    }\n    //\u62d3\u6251\u6392\u5e8f(\u57fa\u672c\u662f\u6a21\u677f)\n    while(!pru.empty())\n    {\n        int u = pru.front().first;\n        int val = pru.front().second;//\u7ea7\u522b \n        pru.pop();//\u4e0dpop\u4f1a\u6b7b\u5faa\u73af\u7684 \n        for(register int i = 1; i <= out[u]; ++i)\n        {\n            int k = f[u][i];\n            --in[k];\n            if(in[k] == 0)\n            {\n                pru.push(make_pair(k, val + 1));//\u8bb0\u4f4f:\u7ea7\u522b\u8981 + 1 \n                ans = max(ans, val + 1);//ans\u53d6max \n            }\n        }\n    }\n    printf(\"%d\", ans);//\u8f93\u51fa\u5c31\u597d\u4e86 \n    return 0;\n}\n```\n\n### code2\uff08\u94fe\u5f0f\u5411\u524d\u661f\u505a\u6cd5\uff0c\u6ce8\u91ca\u5c31\u4e0d\u5199\u4e86\uff0c\u90fd\u5dee\u4e0d\u591a\uff09\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nqueue < pair < int, int > > pru;\nint n, m, p, head[100001], q[100001], in[100001], ans, num;//out\u4e0d\u9700\u8981\u4e86 \nbool vis[100001], choose[5001][5001];\nstruct node\n{\n\tint next, to;\n}stu[1000001];\ninline void add(int x, int y)\n{\n\t++in[y];\n\tchoose[x][y] = true;\n\tstu[++num].next = head[x];\n\tstu[num].to = y;\n\thead[x] = num;\n\treturn; \n}\nint main()\n{\n    scanf(\"%d %d\", &n, &m);\n    while(m--)\n    {\n        memset(vis, false, sizeof(vis));\n        scanf(\"%d\", &p);\n        for(register int i = 1; i <= p; ++i)\n        {\n            scanf(\"%d\", &q[i]);\n            vis[q[i]] = true;\n        }\n        for(register int i = q[1]; i <= q[p]; ++i)\n        {\n            if(!vis[i])\n            {\n                for(register int j = 1; j <= p; ++j)\n                {\n                    if(!choose[i][q[j]])\n                    {\n                        add(i, q[j]);\n                    }\n                }\n            }\n        }\n    }\n    for(register int i = 1; i <= n; ++i)\n    {\n        if(in[i] == 0)\n        {\n            pru.push(make_pair(i, 1));\n        }\n    }\n    while(!pru.empty())\n    {\n        int u = pru.front().first;\n        int val = pru.front().second;\n        pru.pop();\n        for(register int i = head[u]; i; i = stu[i].next)\n        {\n            int k = stu[i].to;\n            --in[k];\n            if(in[k] == 0)\n            {\n                pru.push(make_pair(k, val + 1));\n                ans = max(ans, val + 1);\n            }\n        }\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1561345102,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "# TOPSORT\n\n\u5173\u4e8e\u8f66\u7ad9\u5206\u7ea7\u8fd9\u9053\u9898\uff0c\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\uff0c\u4ece\u201c\u5219\u59cb\u53d1\u7ad9\u3001\u7ec8\u70b9\u7ad9\u4e4b\u95f4\u6240\u6709\u7ea7\u522b\u5927\u4e8e\u7b49\u4e8e\u706b\u8f66\u7ad9x\u7684\u90fd\u5fc5\u987b\u505c\u9760\u3002\u201d\u3002\n\n\u53d1\u73b0\u4e0d\u505c\u9760\u7684\u8f66\u7ad9\u662f\u9700\u8981\u6709\u5148\u51b3\u6761\u4ef6\u7684\uff0c\u90a3\u5c31\u662f\u7ea7\u522b\u5fc5\u987b\u5c0f\u4e8e\u8981\u505c\u9760\u7684\u7ad9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u60f3\u5230\u7528\u62d3\u6251\u3002\n\n\u8fd9\u4e2a\u5206\u6790\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u8003\u8bd5\u65f6\u5fc5\u987b\u8981\u81ea\u5df1\u5206\u6790\u800c\u6ca1\u6709\u7b97\u6cd5\u6807\u7b7e\u3002~~\u4e0d\u8fc7\u672c\u4eba\u849f\u84bb\uff0c\u6240\u4ee5\u4e5f\u662f\u770b\u4e86\u6807\u7b7e\u540e\u60f3\u5230\u7684\u3002~~\n\n\u77e5\u9053\u4e86\u5e94\u8be5\u7528\u62d3\u6251\uff0c\u770b\u9898\uff0c\u6211\u4eec\u77e5\u9053\u5fc5\u987b\u505c\u9760\u7684\u7ad9\u5e76\u4e14\u5728\u4efb\u4f55\u8f66\u6b21\u7684\u8303\u56f4\u4e2d\u90fd\u4e0d\u4f1a\u662f\u4e0d\u505c\u9760\u7684\u7ad9\uff0c\u8fd9\u6837\u7684\u7ad9\u5e94\u8be5\u662f\u7ea7\u522b\u662f\u6700\u9ad8\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u4e00\u5f00\u59cb\u4e0d\u77e5\u9053\u5230\u5e95\u6700\u9ad8\u7b49\u7ea7\u662f\u591a\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u53cd\u5176\u9053\u800c\u884c\u4e4b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9898\u7ffb\u8f6c\u4e00\u4e0b\u3002\n\n### \u201c\u5219\u59cb\u53d1\u7ad9\u3001\u7ec8\u70b9\u7ad9\u4e4b\u95f4\u6240\u6709\u7ea7\u522b\u5c0f\u4e8e\u7b49\u4e8e\u706b\u8f66\u7ad9x\u7684\u90fd\u5fc5\u987b\u505c\u9760\u3002\u201d \u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5c06\u7ea7\u522b\u6700\u9ad8\u7684\u7ad9\u8bbe\u7f6e\u4e3a1\u7b49\u7ea7\u3002\n\n\u7136\u540e\u628a\u4e00\u4e2a\u8f66\u6b21\u4e2d\u505c\u9760\u7684\u8f66\u7ad9\u4e0e\u4e00\u4e2a\u8f66\u6b21\u7684\u6240\u6709\u4e0d\u505c\u9760\u7684\u8f66\u7ad9\u8fde\u8fb9\uff0c\u524d\u63d0\u662f\u6ca1\u6709\u8fde\u8fc7\uff0c\u5728\u5c06\u4e0d\u505c\u9760\u7684\u8f66\u7ad9\u5165\u8bfb\u52a0\u4e00\u3002Topsort\u524d\u7684\u51c6\u5907\u5904\u7406\u5c31\u5b8c\u4e86\u3002\n\n\n### \u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u62d3\u6251\uff0c\u9996\u5148\u5c06\u7b2c\u4e00\u8f6e\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u52a0\u5165\u4e00\u4e2a\u6570\u7ec4\u5373\u7b49\u7ea7\u6700\u9ad8\uff08\u5373\u5728\u6240\u6709\u8f66\u6b21\u7684\u8303\u56f4\u4e2d\u4e0d\u4f1a\u88ab\u505c\u9760\uff09\u7136\u540e\u904d\u5386\u8fd9\u4e9b\u70b9\u76f8\u8fde\u7684\u8fb9\uff0c\u5c06\u5165\u5ea6\u51cf1\uff0c\u5982\u679c\u4e3a0\uff0c\u52a0\u5165\u961f\u5217\uff0c\u7136\u540e\u7528\u6570\u7ec4\uff08\u521d\u59cb\u5168\u4e3a1\uff09\u5c06\u76f8\u8fde\u7684\u8fb9\u7b49\u7ea7\u6539\u4e3a\u8fde\u8fd9\u4e2a\u70b9\u7684\u70b9\uff08\u5373\u53d6\u51fa\u7684\u961f\u5217\u7684\u70b9\uff09\u52a0\u4e00\u3002\n\n\u7136\u540e\u7ee7\u7eed\u5faa\u73af\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\u3002\u6700\u540e\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u3002\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n```c\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n\nusing namespace std;\nconst int MAX=1e3+100;\nbool vis[MAX];\nint map[MAX][MAX],head[MAX],a[MAX],ans[MAX],q[MAX],in[MAX];\nstruct edge\n{\n\tint to;\n\tint next;\n}e[MAX*MAX];//\u5fc5\u987b\u662f\u5e73\u65b9\uff0c\u6bcf\u4e2a\u70b9\u4f1a\u8fde\u5f88\u591a\u6761\u8fb9 \nint M,N;\nint sum=0;\n\nvoid add(int x,int y)\n{\n\t++sum;\n\te[sum].to =y;\n\te[sum].next =head[x];\n\thead[x]=sum;\n}\n\nvoid topsort()\n{\n\tint h=0,t=1;\n\tfor (int i=1;i<=N;i++)//\u627e\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u5373\u4e00\u5f00\u59cb\u5728\u6240\u6709\u8f66\u6b21\u4e2d\u4e0d\u4f1a\u88ab\u505c\u9760\u7684\u70b9 \n\tif(!in[i])\n\t{\n\t\t++h;//\u8bb0\u5f55\u4e2a\u6570 \n\t\tq[h]=i;\n\t}\n\twhile(h<N)//\u53ea\u9700\u8981\u627eN-1\u6b21\u8db3\u4ee5\u4e0d\u80fd\u7b49\u4e8e\u5c31\u4f1a\u6b7b\u5faa\u73af\uff0c\u56e0\u4e3a\u53ea\u4f1a\u6709N\u4e2a\u70b9\u9700\u8981\u5904\u7406 \n\t{\n\t\tint k=0;\n\t\tfor (int i=t;i<=h;i++)//\u4ee5\u524d\u627e\u8fc7\u70b9\u5c31\u4e0d\u80fd\u518d\u627e\u4e86 \n\t\t{\n\t\t\tint now=q[i];//\u53d6\u51fa\u961f\u5217\u4e2d\u7684\u70b9 \n\t\t\tfor (int j=head[now];j;j=e[j].next)//\u904d\u5386\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u6240\u6709\u8fb9 \n\t\t\t{\n\t\t\t\t--in[e[j].to];//\u5165\u5ea6\u51cf\u4e00 \n\t\t\t\tif(!in[e[j].to])//\u6761\u4ef6\uff1a\u5165\u8bfb\u4e3a\u96f6 \n\t\t\t\t{\n\t\t\t\t\t++k;//\u8bb0\u5f55\u672c\u8f6e\u4e2a\u6570 \n\t\t\t\t\tans[e[j].to]=ans[now]+1;//\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u4e0d\u80fd\u88ab\u505c\u9760\uff0c\u6240\u4ee5\u7ea7\u522b\u52a01 \n\t\t\t\t\tq[h+k]=e[j].to ; //\u628a\u76f8\u8fde\u7684\u70b9\u52a0\u5165\u961f\u5217 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tt=h+1;//\u4e0b\u4e00\u6b21\u5faa\u73af\u4ece\u4e0a\u4e00\u6b21\u7684\u8d77\u70b9\u52a01\u5f00\u59cb\u627e \n\t\th=h+k;//\u4e0b\u4e00\u6b21\u7ec8\u70b9\u4e3a\u672c\u8f6e\u8fdb\u961f\u4e2a\u6570\u52a0\u4e0a\u6b21\u4e2a\u6570 \n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&N,&M);\n\tfor (int i=1;i<=N;i++)//\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u8f66\u7ad9\u7b49\u7ea7\u90fd\u4e3a1\uff0c\u6ce8\u610f\u4e0d\u80fd\u7528memset,\u8fd9\u6837\u4f1a\u8d4b\u6210\u4e71\u7801 \n\t\tans[i]=1;\n\tfor (int i=1;i<=M;i++)\n\t{\n\t\tint s;\n\t\tmemset(vis,0,sizeof(vis));//\u6bcf\u4e00\u4e2a\u8f66\u6b21\u90fd\u8981\u5237\u65b0 \n\t\tscanf(\"%d\",&s);\n\t\tfor (int j=1;j<=s;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[j]);\n\t\t\tvis[a[j]]=1;//\u8bb0\u5f55\u505c\u9760\u8f66\u7ad9 \n\t\t}\n\t\tfor (int j=a[1];j<=a[s];j++)//\u904d\u5386\u8d77\u70b9\u7ad9\u548c\u7ec8\u70b9\u7ad9\u4e2d\u95f4\u7684\u6240\u6709\u7ad9 \n\t\t{\n\t\t\tif(vis[j]) continue; //\u82e5\u4ee5\u505c\u9760\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af \n\t\t\tfor(int k=1;k<=s;k++)//\u904d\u5386\u6240\u6709\u505c\u9760\u7ad9 \n\t\t\t\tif(map[a[k]][j]==0)//\u6761\u4ef6\uff1a\u4e24\u4e2a\u70b9\u6ca1\u6709\u8fde\u7ebf \n\t\t\t\t{\n\t\t\t\t\tmap[a[k]][j]=1;//\u8bb0\u5f55\u5df2\u8fde \n\t\t\t\t\t++in[j];//\u5165\u5ea6\u52a0\u4e00 \n\t\t\t\t\tadd(a[k],j);//\u8fde\u8fb9 \n\t\t\t\t}\n\t\t}\n\t}\n\ttopsort();\n\tint maxx=-2147483648;\n\tfor (int i=1;i<=N;i++)//\u627e\u6700\u9ad8\u7b49\u7ea7 \n\t\tmaxx=max(ans[i],maxx);\n\tprintf(\"%d\",maxx);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1551766412,
        "uid": 79095,
        "name": "tangke",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "## \u849f\u84bb\u4e00\u679a\u3002\u3002\u3002\n \n \u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u5e0c\u671b\u80fd\u901a\u8fc7\u5427\u3002\u3002\u3002\n  \n  \u9996\u5148\u7406\u89e3\u9898\u610f\uff1a\n\n### \u5982\u679c\u8fd9\u8d9f\u8f66\u6b21\u505c\u9760\u4e86\u706b\u8f66\u7ad9 x\uff0c\u5219\u59cb\u53d1\u7ad9\u3001\u7ec8\u70b9\u7ad9\u4e4b\u95f4\u6240\n\n### \u6709\u7ea7\u522b\u5927\u4e8e\u7b49\u4e8e\u706b\u8f66\u7ad9 x \u7684\u90fd\u5fc5\u987b\u505c\u9760\u3002\n\n\u90a3\u53ea\u80fd\u8bf4\u660e\uff0c\u505c\u9760\u7684\u706b\u8f66\u7ad9\u4e00\u5b9a\u6bd4\u672a\u505c\u9760\u7684\u7b49\u7ea7\u8981\u9ad8\u3002\uff08\u6ce8\u610f\u706b\u8f66\u53ef\u4ee5\u81ea\u5df1\u89c4\u5b9a\u7ec8\u70b9\u7ad9\uff0c\u6bd4\u59821 3 5 6\u8868\u793a1\u662f\u8d77\u70b9\u7ad9\uff0c6\u662f\u7ec8\u70b9\u7ad9\uff0c\u4e0d\u4e00\u5b9a\u5fc5\u987b\u8d70\u5230\u6700\u540e\u4e00\u7ad9\uff09\n\n\u53ea\u8981\u5728\u6bcf\u4e00\u5ea7\u505c\u9760\u7684\u706b\u8f66\u7ad9\u4e0e\u672a\u505c\u9760\u7684\u706b\u8f66\u7ad9\u4e4b\u95f4\u5efa\u7acb\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u7136\u540e\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u5c31\u884c\u4e86\u3002\n\n#### \u53ea\u8ba9\u6c42\u4e86\u7b49\u7ea7\u4e2a\u6570\uff0c\u6240\u4ee5\u53ea\u8981\u6c42\u62d3\u6251\u7684\u5faa\u73af\u6b21\u6570\u5373\u53ef\u3002\n\nC++\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>   \n//\u6ce8\u610f\u6bd4\u8d5b\u4e0d\u80fd\u7528\u4e07\u80fd\u5934\nusing namespace std;\nbool dis[1001][1001],al[1001];   //dis\u6307a\u4e0eb\u4e4b\u95f4\u6709\u6ca1\u6709\u6709\u5411\u8fb9\uff0cal\u4ee5\u540e\u62d3\u6251\u6392\u5e8f\u7528\nint to[1001],p,f[1001],b,i[1001],j[1001];\nint main(){\n    int n,m,a,ans=0;\n    cin>>n>>m;  //\u8bfb\u5165\u706b\u8f66\u7ad9\u4e0e\u706b\u8f66\u4e2a\u6570\n    int tot=n;   //\u62d3\u6251\u7528\n    //\u8f83\u7b28\u7684\u8bfb\u5165\n    for(int y=0;y<m;y++){\n        cin>>a;int fi,gi,n1=0,n2=0;\n        for(int x=1;x<=a;x++){\n            cin>>b;\n            if(x==1)fi=b;\n            if(x==a)gi=b;//\u7edf\u8ba1\u8d77\u70b9\u7ad9\u4e0e\u7ec8\u70b9\u7ad9\n            f[b]=1;\n        }\n        for(int x=fi;x<=gi;x++){//\u5faa\u73af\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6240\u6709\u7ad9\n            if(f[x])i[++n1]=x;\n            else j[++n2]=x;//i\u4e3a\u505c\u9760\u7684\u7ad9\uff0cj\u4e3a\u672a\u505c\u9760\u7684\u7ad9\n        }\n        for(int x=1;x<=n1;x++){\n            for(int z=1;z<=n2;z++){\n                if(!dis[i[x]][j[z]])to[i[x]]++;\n                dis[i[x]][j[z]]=1;//\u5efa\u7acbi\u4e0ej\u4e4b\u95f4\u7684\u6709\u5411\u8fb9\n            }\n        }\n        memset(f,0,sizeof f);\n    }\n    while(tot){  //tot\u4ee3\u8868\u5df2\u7ecf\u62d3\u6251\u6392\u5e8f\u7684\u4e2a\u6570\uff08\u6211\u7528\u7684\u597d\u50cf\u662f\u53cd\u7740\u7684\u62d3\u6251\u6392\u5e8f\u3002\u3002\u3002\uff09\n        ans++;//\u4e00\u6b21\u5faa\u73af\u4ee3\u8868\u591a\u4e00\u4e2a\u7b49\u7ea7\n        int w[n],nu=0;\n        for(int x=1;x<=n;x++){\n            if(!to[x]&&!al[x]){\n                tot--;  //x\u5df2\u7ecf\u62d3\u6251\u5b8c\u6bd5\n                al[x]=1;//\u6807\u8bb0\u4e3a1\n                w[++nu]=x; \u7edf\u8ba1\u8fd9\u4e00\u8f6e\u88ab\u62d3\u6251\u6392\u5e8f\u7684\u70b9\n            }\n        }\n        for(int x=1;x<=nu;x++){\n            for(int y=1;y<=n;y++){\n                    if(dis[y][w[x]])to[y]--;//\u5220\u53bb\u62d3\u6251\u5b8c\u7684\u70b9\u548c\u4e0e\u5176\u8fde\u63a5\u7684\u8fb9\n            }\n        }\n    }\n    cout<<ans;//\u8f93\u51fa\u7b54\u6848\uff01\uff01\uff01\n    return 0;\n}\n```",
        "postTime": 1518483679,
        "uid": 49262,
        "name": "The_Phoenix",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u89e3\u7684\u76ee\u7684\u53ea\u662f\u60f3\u8868\u8fbe\u6765\u81ea\u849f\u84bb\u7684\u5410\u69fd\uff1a\u4e3a\u4ec0\u4e48\u9898\u89e3\u91cc\u57fa\u672c**\u90fd\u662f**\u62d3\u6251\u6392\u5e8f\uff1f\n\n\u5728\u8fd9\u4e00\u9898\u4e2d\uff0c\u62d3\u6251\u6392\u5e8f\u4e2d\u7684\u6392\u5e8f\u529f\u80fd\u6ca1\u6709\u5f97\u5230\u4f53\u73b0\u3002\n\n\u8fd9\u9898\u5176\u5b9e\u53ea\u662f**\u6c42DAG\u4e2d\u7684\u6700\u957f\u6709\u5411\u94fe\u7684\u957f\u5ea6**\u3002\n\n-------\n\n**2\u4e2a\u6708\u4e4b\u540e\u7684\u8865\u5145\uff1a**\n\n**dilworth\u5b9a\u7406**\uff1a  \n\u6700\u5c0f\u53cd\u94fe\u8986\u76d6\u7b49\u4e8e\u6700\u957f\u94fe\u957f\u5ea6  \n\u6700\u5c0f\u94fe\u8986\u76d6\u7b49\u4e8e\u6700\u957f\u53cd\u94fe\u957f\u5ea6  \n\u53cd\u94fe\uff1a\u4e00\u4e2a\u70b9\u96c6\uff0c\u6ca1\u6709\u4efb\u4f55\u4e00\u5bf9\u70b9\u662f\u524d\u9a71\u540e\u7ee7\u5173\u7cfb\uff08\u8fd9\u5bf9\u70b9\u4e0d\u8fde\u901a\uff09\n\n\u6839\u636e\u6b64\u5b9a\u7406\uff0c\u597d\u50cf\u4e5f\u53ef\u4ee5\u5229\u7528\u96c6\u5408\u7b49\u5224\u65ad\u76f8\u4e92\u4e0d\u8fde\u901a\u7684\u70b9\u7684\u6700\u591a\u4e2a\u6570\uff08\u5373\u6700\u5927\u7ffb\u8138\u957f\u5ea6\uff09\u89e3\u51b3\u672c\u9898\u3002\n\n-----\n\n\u4e00\u5473\u5730\u5957\u6a21\u677f\u53ea\u4f1a\u589e\u52a0\u4ee3\u7801\u957f\u5ea6\u3002\n\n\u6309\u7167\u60ef\u4f8b\uff0c\u641c\u7d22\u80fd\u89e3\u51b3\u5927\u591a\u6570\u7684\u95ee\u9898\uff1a\n\n\u672c\u9898\u5168\u8fc7\u7a0b\uff1a\u5efa\u56fe\uff0c\u641c\u3002\n\n\u63a5\u4e0b\u6765\u662f\u4f18\u5316\uff1a\n\n1. \u53ea\u641c\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u3002\uff08\u5927\u90e8\u5206\u4e0e\u62d3\u6251\u6392\u5e8f\u7684\u5173\u7cfb\u90fd\u5728\u8fd9\u4e86\uff09\n2. \u526a\u679d\uff1a\u957f\u5ea6\u5c0f\u7684\u72b6\u6001\u53bb\u6389\u3002\n3. \u6309\u7167\u51fa\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u641c\u3002\uff08\u4ee3\u7801\u4e2d\u6ca1\u5199\u4e5f\u8fc7\u4e86\uff09\n\n\u8d34\u4ee3\u7801\u3002\u4ee3\u7801\u8d28\u91cf\u4e0d\u9ad8\uff0c\u80fd\u518d\u4f18\u5316\u3002\u6ca1\u5199\u4f18\u5316\u4e2d\u7684\u7b2c\u4e09\u6761\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int N=1024;\n\nvector<int> inc,pass;\nint head[N],n,m,tot,ind[N],ans,maxd[N];\nbool f[N][N];\n\nvoid dfs(int pos,int depth){\n\tif(depth<=maxd[pos])return;\n\telse maxd[pos]=depth;\n\tans=max(ans,depth);\n\tfor(int i=1;i<=n;i++){\n\t\tif(f[pos][i])dfs(i,depth+1);\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int s,tmp,i=1;i<=m;i++){\n\t\tscanf(\"%d\",&s);\n\t\tpass.clear();\n\t\tinc.clear();\n\t\tfor(int j=1;j<=s;j++){\n\t\t\tscanf(\"%d\",&tmp);\n\t\t\tif(j>1&&inc[inc.size()-1]+1<tmp){\n\t\t\t\tfor(int k=inc[inc.size()-1]+1;k<tmp;k++){\n\t\t\t\t\tpass.push_back(k);\n\t\t\t\t}\n\t\t\t}\n\t\t\tinc.push_back(tmp);\n\t\t}\n\t\tfor(int j=0;j<inc.size();j++){\n\t\t\tfor(int k=0;k<pass.size();k++){\n\t\t\t\tf[inc[j]][pass[k]]=true;\n\t\t\t\tind[pass[k]]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!ind[i]){\n\t\t\tdfs(i,1);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\u62d3\u6251\u6392\u5e8f\u4e5f\u8bb8\u662fdalao\u4f53\u73b0\u5176\u5730\u4f4d\u6240\u9700\u5427\uff0c\u840c\u65b0\u745f\u745f\u53d1\u6296\u3002",
        "postTime": 1532873531,
        "uid": 61466,
        "name": "ivorLin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "**\u6b22\u8fce\u8bbf\u95ee\uff1a**[Actinoi's blog :NOIP2013 \u666e\u53ca\u7ec4](https://www.actinoi.com/2019/08/16/noip2013%20\u666e\u53ca\u7ec4/)\n\n&emsp;\u200b\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u51e1\u662f\u505c\u9760\u8fc7\u7684\u7ad9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7ad9\u5c31\u6bd4\u6ca1\u505c\u9760\u8fc7\u7684\u7ad9\u7ea7\u522b\u9ad8\u3002\n\n\u200b\u200b\u200b\u200b&emsp;\u200b\u56e0\u6b64\uff0c\u53ef\u4ee5\u786e\u5b9a\u90e8\u5206\u8f66\u7ad9\u4e4b\u95f4\u7684\u4e24\u4e24\u5927\u5c0f\u5173\u7cfb\uff0c\u6211\u4eec\u4ece\u7ea7\u522b\u4f4e\u7684\u8f66\u7ad9 $i$ \u5411\u7ea7\u522b\u9ad8\u7684\u8f66\u7ad9 $j$ \u8fde\u8fb9\uff0c$topo[i][j] == 1$ \u5219\u4ee3\u8868 $j$ \u7684\u7ea7\u522b\u6bd4 $i$ \u7684\u7ea7\u522b\u9ad8\u3002\n\n\u200b\u200b\u200b\u200b&emsp;\u200b\u7136\u540e\uff0c\u600e\u4e48\u786e\u5b9a\u6700\u5c11\u5212\u5206\u7684\u7ea7\u522b\u6570\u5462\uff1f\u8fd9\u5c31\u9700\u8981 **\u62d3\u6251\u6392\u5e8f** \u4e86\u3002\n\n\u90a3\u4e48\uff0c\u5565\u662f\u62d3\u6251\u6392\u5e8f\u5462\uff1f\n\n> The canonical application of topological sorting is in scheduling a sequence of jobs or tasks based on their dependencies. The jobs are represented by vertices, and there is an edge from x to y if job x must be completed before job y can be started (for example, when washing clothes, the washing machine must finish before we put the clothes in the dryer). Then, a topological sort gives an order in which to perform the jobs. \n\n\uff08\u6458\u81ea[\u7ef4\u57fa\u767e\u79d1](https://en.wikipedia.org/wiki/Topological_sorting)\uff09\n\n\u200b\u200b\u200b\u200b&emsp;\u200b????\u4e0a\u9762\u8fd9\u6bb5\u8bdd\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u5982\u679c\u5e72 $y$ \u5de5\u4f5c\u4e4b\u524d\u5fc5\u987b\u5148\u5b8c\u6210 $x$ \u5de5\u4f5c\uff08\u4f8b\u5982\uff0c\u4f60\u5728\u70d8\u5e72\u8863\u670d\u4e4b\u524d\u5fc5\u987b\u8981\u5148\u628a\u8863\u670d\u6d17\u5e72\u51c0\uff0c\u4e0d\u7136\u70d8\u5e72\u4e5f\u6ca1\u7528\uff09\uff0c\u800c\u5b8c\u6210\u7684\u8fd9\u4e2a\u987a\u5e8f\u5c31\u662f\u62d3\u6251\u6392\u5e8f\u3002\n\n\u200b\u200b\u200b\u200b&emsp;\u200b\u56e0\u6b64\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u5229\u7528\u62d3\u6251\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u4e0d\u65ad\u5220\u9664\u505c\u9760\u706b\u8f66\u6570\u4e3a $0$ \u7684\u8f66\u7ad9\uff0c\u7136\u540e\u628a\u6bd4\u8fd9\u4e2a\u8f66\u7ad9\u9ad8\u4e00\u7ea7\u7684\u6240\u6709\u8f66\u7ad9 $topo[i][j]$  \u8d4b\u503c\u4e3a $0$ \uff0c\u5c06 $j$ \u8f66\u7ad9\u4e2d\u505c\u9760\u7684\u706b\u8f66\u6570 $-1$ \uff0c\u6700\u540e\u8f93\u51fa\u4e00\u5171\u6267\u884c\u4e86\u591a\u5c11\u6b21\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint st[1001], t[1001];\nint topo[1001][1001], level[1001]; //\u4e24\u7ad9\u4e4b\u95f4\u7684\u62d3\u6251\u5e8f\uff08\u82e5 topo[i][j] == 1 \u5219\u4ee3\u8868 j \u7684\u7ea7\u522b\u6bd4 i \u7684\u7ea7\u522b\u9ad8\uff09\uff1b\u6bcf\u7ad9\u7684\u7ea7\u522b\nbool station[1001], cut[1001]; //\u5224\u65ad\u672c\u7ad9\u6709\u65e0\u706b\u8f66\u505c\u9760\uff1b\u662f\u5426\u5df2\u7ecf\u5220\u9664\u8fd9\u4e2a\u70b9\nint main() {\n    int n, m;\n    cin >> n >> m;\n    \n    for (int i = 1; i <= m; i++) {\n        memset(station, false, sizeof(station)); //\u4e00\u5f00\u59cb\u6ca1\u6709\u4efb\u4f55\u706b\u8f66\u505c\u9760\n        int s;\n        cin >> s;\n        for (int j = 1; j <= s; j++) {\n            cin >> st[j];\n            station[st[j]] = true; // \u8868\u793a\u672c\u7ad9\u6709\u706b\u8f66\u505c\u9760\n        }\n        for (int j = st[1]; j <= st[s]; j++) { //\u679a\u4e3e\u6bcf\u4e2a\u7ad9\u70b9\n            if (station[j] == false) { //\u6ca1\u6709\u706b\u8f66\u505c\u9760\u672c\u7ad9\u70b9\n                for (int k = 1; k <= s; k++) {\n                    if (topo[j][st[k]] == 0) {\n                        topo[j][st[k]] = 1; //k \u7684\u7ea7\u522b\u6bd4 j \u7684\u7ea7\u522b\u9ad8\n                        level[st[k]]++;\n                    }\n                }\n            }\n        }\n    }\n    \n    memset(cut, false, sizeof(cut)); //\u4e00\u5f00\u59cb\u6ca1\u6709\u4efb\u4f55\u706b\u8f66\u505c\u9760\n    int ans = 0, top = 0;\n    \n    do { //\u4e0d\u65ad\u5220\u70b9\u3001\u8fb9\n        top = 0;\n        for (int i = 1; i <= n; i++) {\n            if (level[i] == 0 && cut[i] == false) { //\u8fd9\u4e2a\u8f66\u7ad9\u7684\u7ea7\u522b\u4e3a 0 \u4e14\u6ca1\u6709\u5220\u53bb\u8fd9\u4e2a\u70b9\n                cut[i] = true;\n                top++;\n                t[top] = i;\n            }\n        }\n        for (int i = 1; i <= top; i++) {\n            for (int j = 1; j <= n; j++) {\n                if (topo[t[i]][j] == 1) {\n                    topo[t[i]][j] = 0;\n                    level[j]--;\n                }\n            }\n        }\n        ans++;\n    } while(top != 0);\n    \n    cout << ans - 1 << endl; // ans \u4f1a\u591a\u52a0\u4e00\u6b21\n    return 0;\n}\n```",
        "postTime": 1565964610,
        "uid": 84217,
        "name": "Actinoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u770b\u5230\u5f88\u5c11\u6709\u5199\u8fb9\u8868\u7684\u62d3\u6251\u6392\u5e8f\n\n\u9996\u5148\u660e\u786e\u5728\u4e00\u8d9f\u8f66\u4e2d \u5982\u679c\u4e0d\u505c\u7684\u7ad9\uff0c\u80af\u5b9a\u6bd4\u8981\u505c\u7684\u7ad9\u7b49\u7ea7\u4f4e\uff0c\u5426\u5219 \u4e3a\u4ec0\u4e48\u4e0d\u505c\u5462\uff08\u5927\u4e8e\u7b49\u4e8e\u5fc5\u987b\u505c\uff09 \u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u5c06\u7b49\u7ea7\u5927\u7684\u5411\u7b49\u7ea7\u4f4e\u7684\u8fde\u4e00\u6761\u8fb9 \u8fdb\u884c\u62d3\u6251\u6392\u5e8f \u987a\u4fbf\u7edf\u8ba1\u7b54\u6848\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define N 1001\nstruct edge\n{\n    int v,next,to;\n}mem[N*N];\nint n,m,size,MAX; \nint a[N],head[N],in[N],q[N],ans[N];\nbool map[N][N],v[N];\nvoid add(int from,int to)\n{\n    size++;\n    mem[size].to=to;\n    mem[size].next=head[from];\n    head[from]=size;\n}\nvoid topsort()\n{\n    int tot=0;\n    int tmp=1;\n    for(int i=1;i<=n;i++)\n    {\n        if(in[i]==0)//\u8ba1\u7b97\u5165\u8bfb\u4e3a\u96f6\u7684\u70b9  \n        {\n            tot++;\n            q[tot]=i;\n        }\n    }\n    while(tot<n)\n    {    \n        int kobe=0;//Kobe\u8bb0\u5f55\u7684\u662f\u8fd9\u4e00\u6b21\u6709\u51e0\u4e2a\u65b0\u8fdb\u5165\u961f\u5217\u7684\u70b9  \u6ca1\u9519\u5c31\u662fKobe Bryant\n        for(int i=tmp;i<=tot;i++)//\u5c0f\u4f18\u5316 \u4e0a\u4e00\u6ce2\u5904\u7406\u5b8c\u6bd5\u7684\u8fd9\u4e00\u6b21\u4e0d\u7ba1\u4e86  \n        {\n            int now=q[i];\n            for(int e=head[now];e;e=mem[e].next)\n            {\n                in[mem[e].to]--;\n                if(in[mem[e].to]==0)\n                {\n                    kobe++; \n                    q[tot+kobe]=mem[e].to;//\u8d77\u70b9\u52a0\u4e0akobe\u4e3a\u5e8f\u53f7 \n                    ans[mem[e].to]=ans[now]+1;//\u8f6c\u79fb \n                }\n            }\n        }\n        tmp=tot+1;//\u6307\u9488\u6539\u53d8 \n        tot=tot+kobe;\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int si;\n        memset(v,0,sizeof(v));\n        scanf(\"%d\",&si);\n        for(int j=1;j<=si;j++)\n        {\n            scanf(\"%d\",&a[j]);\n            v[a[j]]=1;//\u8bb0\u5f55\u662f\u5426\u505c\u8fc7 \n        }\n        for(int j=a[1];j<=a[si];j++)//\u679a\u4e3e\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u70b9 \n        {\n            if(v[j]) continue;//\u505c\u8fc7\u8df3\u8fc7 \n            for(int k=1;k<=si;k++) //\u679a\u4e3e\u505c\u8fc7\u7684\u70b9 \n            if(map[a[k]][j]==0) add(a[k],j),map[a[k]][j]=1,in[j]++; \n        }\n    }\n    topsort();\n    for(int i=1;i<=n;i++)\n    MAX=max(MAX,ans[i]);\n    printf(\"%d\",MAX+1);//\u522b\u5fd8\u4e86ans\u6ca1\u6709\u8d4b\u521d\u503c \u6700\u5927\u7684\u7b49\u7ea7\u4e5f\u662f\u4e00\u4e2a \u8981\u90fd\u52a01 \n}\n\u6700\u540e\u5b89\u5229\u4e00\u4e0b\u82f1\u5267\u795e\u79d8\u535a\u58eb\u54e6 \u8d85\u597d\u770b\n```",
        "postTime": 1502273735,
        "uid": 19734,
        "name": "Tardis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "```cpp\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u5e76\u4e0d\u96be\uff0c\u5148\u7528\u8fb9\u96c6\u6570\u7ec4\u5b58\u8def\u5f84\uff0c\u5efa\u56fe\uff0c\u7136\u540e\u7528\u6df1\u641c\u627e\u51fa\u6700\u957f\u8def\u5f84\u5373\u53ef\uff1b\nvar   i,j,k,n,x,m,max,h:longint;    \na,f2:array[0..1001,0..1001]of longint;f,c,dj:array[0..1001]of longint;    \nprocedure sb(x:longint);    \nvar i:longint;  \nbegin    \n  if dj[x]<>0 then exit;    \n  if a[x,0]=0 then dj[x]:=1;    \n  for i:=1 to a[x,0] do    \n   begin    \n    \n    sb(a[x,i]);    \n    if dj[x]<dj[a[x,i]]+1 then dj[x]:=dj[a[x,i]]+1;    \n   end;    \nend;    \nbegin    \n    \nread(n,m);    \n   \nfor i:=1 to m do    \n  begin    \n    read(x);    \n    for j:=1 to x do begin read(c[j]);f[c[j]]:=1;end;      \n    for k:=c[1] to c[x] do if f[k]=0 then    \n                                  begin    \n                                    for h:=1 to  x do    \n                                    if f2[k,c[h]]=0 then    \n                                                    begin    \n                                                      inc(a[k,0]);    \n                                                      a[k,a[k,0]]:=c[h];    \n                                                      f2[k,c[h]]:=-1;    \n                                                    end;                \n                                 end;    \n   for j:=c[1] to c[x] do f[j]:=0;   \n  end;    \n    \nfor i:=1 to n do    \nif dj[i]=0 then begin sb(i);end;    \n    \nfor i:=1 to n do    \nif dj[i]>max then max:=dj[i];    \n    \nwriteln(max);    \n    \nend.    \n\n```",
        "postTime": 1455602708,
        "uid": 14968,
        "name": "mmqqdd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u76ee\u524d\u4e3a\u6b62\uff0cJava\u901a\u8fc7\u7684\u5f88\u5c11\n\n**\u53d1\u4e00\u7bc7Java\u8bed\u8a00\u7684\u9898\u89e3**\n------------\n### 1. \u9898\u76ee\u6807\u7b7e\n- \u56fe\u7684\u5efa\u7acb,\u5efa\u56fe\n- \u62d3\u6251\u6392\u5e8f\n\n\u6240\u4ee5\u89e3\u9898\u7684\u601d\u8def\uff0c\u5c31\u6709\u4e86\u3002\uff08\u5f53\u7136\u4e86\uff0c\u4e0d\u6b62\u4e00\u79cd\uff09\n\n### 2. \u89e3\u9898\u601d\u8def\uff1a\n\n- \u5efa\u7acb\u6709\u5411\u65e0\u6743\u56fe\uff0c\u4ece\u5165\u5ea6\u4e3a0\u7684\u70b9\u5f00\u59cb\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\n- \u6709\u5411\u56fe\u4e2d\u7684\u8fb9\u7684\u65b9\u5411\uff0c\u7531 **_\u975e\u505c\u9760\u8f66\u7ad9_** \u6307\u5411 **_\u505c\u9760\u8f66\u7ad9_**\n- **_\u975e\u505c\u9760\u8f66\u7ad9_** \u7ea7\u522b\u4e00\u5b9a\u8981\u4f4e\u4e8e **_\u505c\u9760\u8f66\u7ad9_**\uff0c\u8fd9\u6837\u624d\u80fd\u4e0d\u505c\u9760\n- **_\u975e\u505c\u9760\u8f66\u7ad9_** \u7ea7\u522b\u4e3a1\uff0c\u7136\u540e\u62d3\u6251\u6392\u5e8f\uff0c\u9010\u7ea7\u9012\u589e+1\n\n### 3. \u9898\u4e2d\u96be\u70b9 \n- \u6700\u540e\u76843\u4e2a\u6570\u636e\u6d4b\u8bd5\u70b9\uff0c1\u2264n,m\u22641000\n- \u4f7f\u7528BitSet\u4ee5\u5916\u7684\u6570\u636e\u7ed3\u6784\u5b58\u50a8\u6709\u5411\u8fb9\uff0c\u5373\u4f7f\u662f\u90bb\u63a5\u8868\u7684\u65b9\u5f0f\uff0c\u4e5f\u4f1aMLT\n- \u540c\u65f6BitSet\u4e5f\u662fJava\u4e2d\u96c6\u5408\u6570\u636e\u7c7b\u578b\u4e2d\uff0c\u5b58\u53d6\u6570\u636e\u6548\u7387\u8f83\u9ad8\u3001\u5185\u5b58\u4f7f\u7528\u8f83\u5c11\u7684\u4e00\u79cd\u3002\n\n### 4. \u4ee3\u7801\u5b9e\u73b0\n\n- \u8868\u793a\u70b9\uff08\u8f66\u7ad9\uff09\u7684\u6570\u636e\u7c7b\u578b\n------------\n```java\n    private static class Node {\n        short level;//\u8f66\u7ad9\u7b49\u7ea7\uff0c\u9ed8\u8ba4\u4e3a1\n        short inDept = 0;//\u5165\u5ea6\n        BitSet adj;//\u8f66\u7ad9\u4e4b\u95f4\u7684\u90bb\u63a5\u8868\n        Node() {\n            level = 1;\n        }\n    }\n```\n\n- \u6709\u5411\u65e0\u6743\u56fe\u7684\u5efa\u7acb\n------------\n```java\n        for (int i = 0; i < M; i++) {\n            in.nextToken();\n            st[0] = (short) in.nval;\n            for (int j = 1; j <= st[0]; j++) {\n                in.nextToken();\n                st[j] = (short) in.nval;\n                vis[st[j]] = true;//\u505c\u9760\u7ad9= true\n            }\n            for (int j = st[1]; j <= st[st[0]]; j++) {\n                if (vis[j]) continue;//\u8df3\u8fc7\u505c\u9760\u7ad9\n                \n                //\u975e\u505c\u9760\u8f66\u7ad9 \u6307\u5411 \u505c\u9760\u8f66\u7ad9\n                if(nodes[j].adj==null)nodes[j].adj = new BitSet();\n                for (int k = 1; k <= st[0]; k++) {\n                    if (!nodes[j].adj.get(st[k])) {\n                        nodes[st[k]].inDept++;//\u505c\u9760\u8f66\u7ad9 \u5165\u5ea6+1\n                        nodes[j].adj.set(st[k]);\n                    }\n                }\n            }\n            Arrays.fill(vis, false);\n        }\n```\n- \u62d3\u6251\u6392\u5e8f\n------------\n```java\n        ArrayDeque<Node> deque = new ArrayDeque<>();\n        \n        //\u4ece\u5165\u5ea6=0\u7684\u70b9 \u5f00\u59cb\u8fdb\u884c\u6392\u5e8f\uff08\u904d\u5386\uff09\n        for (int i = 1; i <= N; i++) if (nodes[i].inDept == 0) deque.add(nodes[i]);\n        while (!deque.isEmpty()) {\n            Node cur = deque.poll();\n            if(cur.adj==null) continue;\n            int i =cur.adj.nextSetBit(0);//\u83b7\u53d6\u90bb\u63a5\u8868\u4e2d\u7b2c\u4e00\u4e2a\u70b9\n           while(i>=0){\n                if (--nodes[i].inDept == 0) {\n                    deque.add(nodes[i]);\n                    if (cur.level + 1 > nodes[i].level) nodes[i].level = (short) (cur.level + 1);//\u9012\u63a8\u4e0b\u4e00\u7ea7\u8f66\u7ad9\uff0clevel+1\n                }\n               i =cur.adj.nextSetBit(i+1);//\u83b7\u53d6\u90bb\u63a5\u8868\u4e2d\u4e0b\u4e00\u4e2a\u70b9\n            }\n        }\n```\n\n\n\n\n### 5. \u5b8c\u5168\u4ee3\u7801\n------------\n```java\n\nimport java.io.*;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.BitSet;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        in.nextToken();\n        int N = (int) in.nval;\n        Node[] nodes = new Node[N + 1];\n        boolean[] vis = new boolean[N + 1];\n        short[] st = new short[N + 1];\n        for (int i = 1; i < N + 1; i++) nodes[i] = new Node();\n        in.nextToken();\n        int M = (int) in.nval;\n        for (int i = 0; i < M; i++) {\n            in.nextToken();\n            st[0] = (short) in.nval;\n            for (int j = 1; j <= st[0]; j++) {\n                in.nextToken();\n                st[j] = (short) in.nval;\n                vis[st[j]] = true;\n            }\n            for (int j = st[1]; j <= st[st[0]]; j++) {\n                if (vis[j]) continue;\n                if(nodes[j].adj==null)nodes[j].adj = new BitSet();\n                for (int k = 1; k <= st[0]; k++) {\n                    if (!nodes[j].adj.get(st[k])) {\n                        nodes[st[k]].inDept++;\n                        nodes[j].adj.set(st[k]);\n                    }\n                }\n            }\n            Arrays.fill(vis, false);\n        }\n        ArrayDeque<Node> deque = new ArrayDeque<>();\n        for (int i = 1; i <= N; i++) if (nodes[i].inDept == 0) deque.add(nodes[i]);\n        while (!deque.isEmpty()) {\n            Node cur = deque.poll();\n            if(cur.adj==null) continue;\n            int i =cur.adj.nextSetBit(0);\n           while(i>=0){\n                if (--nodes[i].inDept == 0) {\n                    deque.add(nodes[i]);\n                    if (cur.level + 1 > nodes[i].level) nodes[i].level = (short) (cur.level + 1);\n                }\n               i =cur.adj.nextSetBit(i+1);\n            }\n        }\n        int ans = 0;\n        for (int i = 1; i <= N; i++) ans = Math.max(ans, nodes[i].level);\n        System.out.println(ans);\n    }\n\n    private static class Node {\n        short level;\n        short inDept = 0;\n        BitSet adj;\n        Node() {\n            level = 1;\n        }\n    }\n}\n\n```\n\n",
        "postTime": 1573656619,
        "uid": 236490,
        "name": "\u738b\u9e4fPRO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "### \u89e3\u6790\n\n\u8fd9\u9898\u86ee\u597d\u7684\uff0c\u6709\u52a9\u4e8e\u66f4\u6df1\u5165\u7406\u89e3\u56fe\u8bba\uff08\u53ef\u80fd\u5427\uff09\uff0c\u66f4\u6709\u52a9\u4e8e\u953b\u70bc\u601d\u7ef4\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u5e0c\u671b\u5404\u4f4d\u5728\u72ec\u7acb\u601d\u8003\u51fa\u89e3\u6cd5\u4e4b\u524d\uff0c\u80fd\u591f\u591a\u601d\u8003\u4e00\u4e0b\uff0c~~\u53cd\u6b63\u6211\u81ea\u5df1\u662f\u60f3\u4e86\u4e00\u665a\u4e0a~~\u3002\n\n------\n\n\u9996\u5148\u5206\u6790\u9898\u76ee\uff0c\u5e94\u8be5\u80fd\u5f88\u5feb\u53d1\u73b0\u6bcf\u6761\u7ebf\u8def\u5bf9\u6700\u7ec8\u7b54\u6848\u9020\u6210\u7684\u5f71\u54cd\u3002\u5373\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u5408\u6cd5\u7ebf\u8def\uff0c\u5176\u6ca1\u6709\u505c\u9760\u7684\u8f66\u7ad9\u7684\u7b49\u7ea7\u6052\u5c0f\u4e8e\u5176\u505c\u9760\u8fc7\u7684\u8f66\u7ad9\u7684\u7b49\u7ea7\u3002\n\n\n\n\u8bb2\u8bb2\u6211\u7684\u601d\u8def\u5386\u7a0b\u5427\uff1a\n\n\u9996\u5148\u60f3\u5230\u4e00\u79cd\u8d2a\u5fc3\uff0c\u6211\u4eec\u77e5\u9053\u67d0\u6761\u7ebf\u8def\u672a\u505c\u9760\u7684\u70b9\u8d8a\u5c11\uff0c\u5176\u5bf9\u6700\u7ec8\u7b54\u6848\u7684\u5f71\u54cd\u8d8a\u5c0f\uff0c\u4f46\u662f\u7ecf\u8fc7\u5c1d\u8bd5\u4f1a\u53d1\u73b0\u8fd9\u79cd\u8d2a\u5fc3\u662f\u6709\u540e\u6548\u6027\u7684\uff0c\u4e0d\u53ef\u884c\u3002\n\n\n\n\u7ee7\u800c\u628a\u601d\u8def\u5f15\u5230\u56fe\u8bba\u4e0a\uff0c\u56fe\u8bba\u7684\u4e00\u4e2a\u6781\u5176\u91cd\u8981\u7684\u4f5c\u7528\u5927\u6982\u5c31\u662f**\u7ef4\u62a4\u4e00\u4e9b\u62bd\u8c61\u7684\u5173\u7cfb\u4ee5\u53ca\u9650\u5236\u6761\u4ef6**\uff0c\u5177\u4f53\u800c\u660e\u663e\u5730\uff0c\u6bd4\u5982\u5e76\u67e5\u96c6\u3001\u7f51\u7edc\u6d41\u3001\u5dee\u5206\u7ea6\u675f\u7b49\uff0c\u5176\u5efa\u6a21\u7684\u672c\u8d28\u662f\u4f9d\u9760\u9898\u76ee\u4e2d\u9690\u542b\u7684\u5bf9\u8c61\u4e4b\u95f4\u7684\u67d0\u79cd\u5173\u7cfb\u3002\n\n\n\n\u90a3\u4e48\u8fd9\u6837\u60f3\u7684\u8bdd\u8fd9\u9898\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u660e\u663e\u7684\uff0c\u4e0a\u9762\u4e5f\u63d0\u5230\u8fc7**\u5bf9\u4e8e\u4e00\u6761\u7ebf\u8def\uff0c\u5176\u6ca1\u6709\u505c\u9760\u7684\u8f66\u7ad9\u7684\u7b49\u7ea7\u6052\u5c0f\u4e8e\u5176\u505c\u9760\u8fc7\u7684\u8f66\u7ad9\u7684\u7b49\u7ea7**\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u5173\u7cfb\u3002\n\n\u8fd9\u5c31\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u62d3\u6251\u6392\u5e8f\uff0c\u5176\u7ef4\u62a4\u7684\u6b63\u662f\u8fd9\u79cd\u4f18\u5148\u7ea7\u5927\u5c0f\u5173\u7cfb\u3002\u610f\u5373DAG\u4e2d\u6bcf\u4e00\u62d3\u6251\u5e8f\u7684\u8282\u70b9\u5176\u7b49\u7ea7\u5927\u5c0f\u662f\u4e00\u81f4\u7684\u3002\n\n\u6211\u4eec\u611f\u6027\u5730\u7406\u89e3\u4e00\u4e0b\uff0c\u9898\u76ee\u544a\u8bc9\u6211\u4eec\u6570\u636e\u5168\u90e8\u662f\u6ee1\u8db3\u8981\u6c42\u7684\uff0c**\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u544a\u8bc9\u6211\u4eec\u5982\u679c\u6309\u7167\u4e0a\u9762\u7684\u601d\u8def\u5efa\u56fe\uff0c\u5efa\u51fa\u6765\u5fc5\u5b9a\u662f\u4e00\u4e2aDAG**\uff08\u8f66\u7ad9\u5927\u5c0f\u5173\u7cfb\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u77db\u76fe\uff09\u3002\n\n\n\n\u9898\u76ee\u8981\u6c42\u6700\u5c11\u5212\u5206\u7684\u7ea7\u522b\u6570\uff0c\u90a3\u6211\u4eec\u53ea\u7528\u4f7f\u76f8\u90bb\u62d3\u6251\u5e8f\u4e4b\u95f4\u7684\u8282\u70b9\u7b49\u7ea7\u5dee\u90fd\u53ea\u4e3a1\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u5bf9\u4e8e\u6240\u6709\u6570\u636e\u7531\u7b49\u7ea7\u5c0f\u7684\u8f66\u7ad9\u5411\u7b49\u7ea7\u5927\u7684\u8f66\u7ad9\u8fde\u6709\u5411\u8fb9\uff0c\u518d\u505a\u4e00\u4e2a\u62d3\u6251\u6392\u5e8f\u5c31\u884c\u4e86\u3002\n\n### \u53c2\u8003\u4ee3\u7801\n\n\u4ee3\u7801\u7565\u4e11\uff0c\u5b9e\u73b0\u6bd4\u8f83\u7b80\u964b\uff0c\u5982\u6709\u758f\u6f0f\u671b\u5404\u4f4d\u5de8\u4f6c\u6307\u51fa\u4e0d\u8db3\uff01\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<string>\n#include<cstdlib>\n#include<queue>\n#include<vector>\n#define INF 0x3f3f3f3f\n#define PI acos(-1.0)\n#define N 1010\n#define MOD 2520\n#define E 1e-12\nusing namespace std;\ninline int read()\n{\n\tint f=1,x=0;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nvector<int> g[N];\nint head[N],tot,n,m,ing[N],dat[N][N],c[N];\nbool v[N][N];\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;++i){\n\t\tint s=read();dat[i][0]=s;\n\t\tfor(int j=1;j<=s;++j) dat[i][j]=read();//\u8bfb\u5165\u6570\u636e\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tint now=dat[i][1]+1;\n\t\tfor(int j=2;j<=dat[i][0];++j){\n\t\t\twhile(now<dat[i][j]){\n\t\t\t\tfor(int k=1;k<=dat[i][0];++k)\n                //\u7ef4\u62a4\u8282\u70b9\u4e4b\u95f4\u5927\u5c0f\u5173\u7cfb\n\t\t\t\t\tif(!v[now][dat[i][k]]) g[now].push_back(dat[i][k]),ing[dat[i][k]]++,v[now][dat[i][k]]=1;\n\t\t\t\tnow++;\n                //\u6ce8\u610f\u53ca\u65f6\u6392\u9664\u5df2\u7ecf\u786e\u5b9a\u7684\u5173\u7cfb\uff0c\u5426\u5219\u4f1aT\n\t\t\t}\n\t\t\tnow++;\n\t\t}\n\t}\n\tint ans=0;\n\tqueue<int> q;\n\tfor(int i=1;i<=n;++i)//\u62d3\u6251\u6392\u5e8f\n\t\tif(ing[i]==0) q.push(i),c[i]=1;\n\twhile(q.size()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=0;i<g[x].size();++i){\n\t\t\tint y=g[x][i];\n\t\t\tif(--ing[y]==0) c[y]=c[x]+1,ans=max(ans,c[y]),q.push(y);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\n\n### \u5199\u5b8c\u8fd9\u9898\u7684\u4e00\u70b9\u4e2a\u4eba\u611f\u60f3\n\n\u5bf9\u4e8e\u56fe\u8bba\uff0c\u5f88\u591a\u770b\u4f3c\u65e0\u6cd5\u7528\u56fe\u8bba\u53bb\u505a\u7684\u9898\uff0c\u5b9e\u9645\u4e0a\u9690\u85cf\u4e86\u8bb8\u591a\u6697\u793a\uff0c\u53ef\u4ee5\u7528\u56fe\u8bba\u53bb\u7ef4\u62a4\u67d0\u4e9b\u4fe1\u606f\uff0c\u8fdb\u800c\u6c42\u89e3\u3002\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u56fe\u8bba\u662f\u4e00\u4e2a\u4e0b\u9650\u5f88\u4f4e\u4f46\u662f\u4e0a\u9650\u633a\u9ad8\u7684\u4e00\u95e8\u5b66\u95ee\uff0c\u5176\u8574\u542b\u7684\u9a9a\u64cd\u4f5c\u8fd8\u662f\u5f88\u591a\u7684\u3002",
        "postTime": 1566817365,
        "uid": 125299,
        "name": "DarkValkyrie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u6233\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P1983)\n# \u4e00\u9053\u6709\u8da3\u7684\u5efa\u56fe\u9898\n~~qxy\u5f53\u65f6\u505a\u4e86\u597d\u4e45\u624d\u53d1\u73b0\u81ea\u5df1\u56fe\u5efa\u9519\u4e86qwq~~  \n\u770b\u5230`\u201c\u5982\u679c\u8fd9\u8d9f\u8f66\u6b21\u505c\u9760\u4e86\u706b\u8f66\u7ad9 x\uff0c\u5219\u59cb\u53d1\u7ad9\u3001\u7ec8\u70b9\u7ad9\u4e4b\u95f4\u6240\u6709\u7ea7\u522b\u5927\u4e8e\u7b49\u4e8e\u706b\u8f66\u7ad9 x \u7684\u90fd\u5fc5\u987b\u505c\u9760\u201d`\u540e\uff0c\u5927\u5bb6\u6709\u6ca1\u6709\u611f\u5230\u4e00\u4e1d\u4e1d\u719f\u6089\u5462\uff1f  \n## \u6ca1\u9519\uff0c\u8fd9\u4e2a\u6761\u4ef6\u548c\u62d3\u6251\u6392\u5e8f\u7684\u6761\u4ef6\u5f88\u76f8\u4f3c\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u6709\u7684\u8f66\u7ad9\u653e\u5230\u4e00\u4e2a\u56fe\u4e2d\uff0c\u5728\u7528\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u62d3\u6251\u6392\u5e8f\u7684\u7b97\u6cd5\u53bb\u66f4\u65b0\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\n# \u90a3\u4e48\uff0c\u5177\u4f53\u8be5\u600e\u4e48\u5efa\u56fe\u5462\uff1f\n#### \u5efa\u56fe\u662f\u8fd9\u4e2a\u9898\u7684\u96be\u70b9\uff0c\u4f46\u5176\u5b9e\u539f\u7406\u975e\u5e38\u7b80\u5355\u3002  \n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u73ed\u8f66\uff0c\u5b83\u63d0\u4f9b\u7684\u4fe1\u606f\u53ea\u5bf9\u5b83\u7684\u8d77\u70b9(a)\u5230\u7ec8\u70b9(b)\u8fd9\u4e00\u6bb5\u6709\u6548\u800c\u5e76\u975e\u5bf9\u5168\u90e8\u6709\u6548\u3002  \n\u5176\u6b21\uff0c\u56e0\u4e3a`\u201c\u5982\u679c\u8fd9\u8d9f\u8f66\u6b21\u505c\u9760\u4e86\u706b\u8f66\u7ad9 x\uff0c\u5219\u59cb\u53d1\u7ad9\u3001\u7ec8\u70b9\u7ad9\u4e4b\u95f4\u6240\u6709\u7ea7\u522b\u5927\u4e8e\u7b49\u4e8e\u706b\u8f66\u7ad9 x \u7684\u90fd\u5fc5\u987b\u505c\u9760\u201d`\uff0c\u6240\u4ee5\u5728\u533a\u95f4[a,b]\u4e2d\u8fd9\u8d9f\u8f66\u505c\u8fc7\u7684\u70b9\u7684\u7ea7\u522b\u4e00\u5b9a\u9ad8\u4e8e\u6ca1\u6709\u505c\u7684\u70b9\u7684\u7ea7\u522b\u3002\u6839\u636e\u62d3\u6251\u6392\u5e8f\u7684\u8981\u6c42\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece\u6ca1\u6709\u505c\u4e0b\u7684\u70b9\u5411\u6bcf\u4e00\u4e2a\u505c\u4e0b\u7684\u70b9\u8fde\u4e00\u6761\u6709\u5411\u8fb9\u5c31\u53ef\u4ee5\u4e86\u3002  \nps\uff1a\u4e3a\u4e86\u5361\u4f60\uff0c\u51fa\u9898\u4eba\u4e00\u5b9a\u5bf9\u628a\u56fe\u641e\u5f97\u5f88\u7a20\u5bc6\uff0c\u6240\u4ee5\u5b58\u56fe\u7684\u65f6\u5019\u9700\u8981\u4f18\u5316\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u3002  \n\u9644\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std; \n\nint head,tail,n,s,Max,t,m,c[1001],bus[1001],f[1001][1001],que[1001],d[1001],u[1001],stop[1001];\n\nvoid work()\n{\n\twhile(head < tail)\n\t{\n\t\thead++;\n\t\tfor(int i = 1; i <= n; i++)\n\t\t\tif(f[que[head]][i])\n\t\t\t{\n\t\t\t\td[i] --;\n\t\t\t\tu[i] = u[que[head]] + 1;\n\t\t\t\tMax = max(Max,u[i]);\n\t\t\t\tif(d[i] == 0) que[++tail] = i;\n\t\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1; i <= n; i++) u[i] = 0x7fffffff;\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tscanf(\"%d\",&s);\n\t\tmemset(c,0,sizeof(c)); t = 0;\n\t\tfor(int j = 1; j <= s; j++) scanf(\"%d\",&bus[j]);\n\t\tfor(int j = 1; j <= s; j++) c[bus[j]] = 1;\n\t\tfor(int j = bus[1]; j <= bus[s]; j++) if(!c[j]) stop[++t] = j;\n\t\tfor(int j = 1; j <= s; j++)\n\t\t\tfor(int k = 1; k <= t; k++)\n\t\t\t{\n\t\t\t\tif(!f[stop[k]][bus[j]])  //\u6ca1\u8fde\u8fb9 \n\t\t\t\t{\n\t\t\t\t\tf[stop[k]][bus[j]] = 1;\n\t\t\t\t\td[bus[j]] ++;\n\t\t\t\t}\n\t\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tif(!d[i]) {\n\t\t\tque[++tail] = i;\n\t\t\tu[i] = 1;\n\t\t}\n\twork();\n\tprintf(\"%d\",Max);\n\treturn 0;\n} \n```\n",
        "postTime": 1550797431,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u8f66\u7ad9\u5206\u7ea7-\u9898\u89e3"
    },
    {
        "content": "### \u8fd9\u4e48\u591a\u5de8\u4f6c\u5728\u4e0a\uff0c\u6211~~\u8fd9\u4e2a\u849f\u84bb~~\u4e5f\u53ea\u80fd\u6765\u4e00\u53d1\u6811\u5f62DP\u4e86\uff08\u5176\u5b9e\u597d\u50cf\u662f\u68ee\u6797DP~~\u56e0\u4e3a\u6211\u61d2\u5f97\u5efa\u8d85\u7ea7\u6839\u8282\u70b9\u4e86~~\uff09\n\n\u5f88\u591a\u5927\u4f6c\u90fd\u7528\u4e86\u62d3\u6251\u6392\u5e8f\uff0c\u8fd9\u662f\u4e2a\u597d\u601d\u60f3\uff0c~~\u4f46\u6211\u592a\u5f31\u4e86\u4e0d\u4f1a\u7528~~\n\n\u6211\u7684\u8fd9\u4e2a\u6811\u5f62DP\u7684\u8fde\u8fb9\u548c\u5f88\u591a\u5927\u4f6c\u5f88\u50cf\uff0c\u6bcf\u4e00\u6761\u7ebf\u8def\u5206\u522b\u5904\u7406\n\n\u5982\u679c\u67d0\u4e2a\u70b9\u5728\u8d77\u70b9\u5230\u7ec8\u70b9\u8303\u56f4\u5185\uff0c\u4e14\u6ca1\u6709\u505c\u9760\uff0c\u7531\u9898\u610f\u53ef\u77e5\uff0c\u8fd9\u51e0\u7ad9\u4e00\u5b9a\u6bd4\u505c\u9760\u7ad9\u7684\u7b49\u7ea7\u4f4e\uff0c\u6211\u5c31\u4ece\u505c\u9760\u7684\u7ad9\u5411\u4e0d\u505c\u9760\u7684\u7ad9\u8fde\u8fb9\uff0c\u8868\u793a\u5927\u5c0f\u5173\u7cfb\uff0c\u5f53\u7136\uff0c\u6211\u4e0d\u8fde\u91cd\u8fb9\n\n\u7136\u540e\u6211\u5f00\u59cb\u904d\u5386\u4e00\u904d\u6240\u6709\u7684\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u5165\u8fb9\uff0c\u5c31\u8bf4\u660e\u5b83\u53ef\u80fd\u662f\u6700\u5927\u7684\uff0c\u6211\u4ece\u8fd9\u4e2a\u70b9\u8dd1\u6811\u5f62DP\uff0c\u6bcf\u4e0a\u5347\u4e00\u5c42\uff0c\u5927\u5c0f+1\uff0c\u6211\u4eec\u7528\u52a8\u89c4\u627e\u5230\u6700\u5927\u5c42\u6570\uff0c\u5c31\u662f\u8fd9\u4e2a\u6839\u70b9\u7684\u7b54\u6848\n\n\u5f53\u7136\uff0c\u6211\u8981\u6c42\u7684\u662f\u5168\u56fe\u5c42\u6570\uff0c\u5f53\u7136\u8981\u5199\u4e00\u4e2amax\u6765\u6bd4\u8f83\u4e86\u3002\n\n## code\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define rii register int i\n#define rij register int j\nusing namespace std;\nstruct cz{\n    int rd,cd,to[1005];\n}x[1005];\nint n,bj[1005],ans,tk[1005],bs,kkk,ltt,m,gh[1005][1005],as[1005],sf[1005];\nvoid jb(int bh)\n{\n    x[bh].rd+=ltt;\n    for(rii=1;i<=ltt;i++)\n    {\n        if(gh[bh][tk[i]]==0)\n        {\n            bs++;\n            x[tk[i]].cd++;\n            x[tk[i]].to[x[tk[i]].cd]=bh;\n            gh[bh][tk[i]]=1;\n        }\n    }\n}\nvoid dplast(int wz)\n{\n    for(rii=1;i<=x[wz].cd;i++)\n    {\n        if(sf[x[wz].to[i]]==0)\n        {\n            dplast(x[wz].to[i]);\n            sf[x[wz].to[i]]=1;\n        }\n        as[wz]=max(as[wz],as[x[wz].to[i]]+1);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(rii=1;i<=m;i++)\n    {\n        int st,fi;\n        memset(bj,0,sizeof(bj));\n        scanf(\"%d\",&ltt);\n        for(rij=1;j<=ltt;j++)\n        {\n            scanf(\"%d\",&kkk);\n            tk[j]=kkk;\n            bj[kkk]=1;\n            if(j==1)\n            {\n                st=kkk;\n            }\n            if(j==ltt)\n            {\n                fi=kkk;\n            }\n        }\n        for(rij=st+1;j<fi;j++)//\u5efa\u8fb9\n        {\n            if(bj[j]==0)\n            {\n                jb(j);\n            }\n        }\n    }\n    for(rii=1;i<=n;i++)\n    {\n        if(x[i].cd==0)//\u521d\u59cb\u5316\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u4e0d\u9700\u8981\u5411\u4e0b\u5bfb\u627e\uff0c\u5c42\u6570\u9ed8\u8ba4\u662f1\n        {\n            as[i]=1;\n            sf[i]=1;\n        }\n    }\n    int maxn=0;\n    for(rii=1;i<=n;i++)\n    {\n        if(x[i].rd==0)\n        {\n            dplast(i);\n        }\n    }\n    for(rii=1;i<=n;i++)\n    {\n        maxn=max(maxn,as[i]);\n    }\n    cout<<maxn;\n}\n```",
        "postTime": 1531034910,
        "uid": 52176,
        "name": "ztz11",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "```cpp\n/*\u5728\u706b\u8f66\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6240\u6709\u7ad9\u70b9\u4e2d\uff0c\u505c\u9760\u7684\u7ad9\u70b9\u7684\u8f66\u7ad9\u7ea7\u522b\u4e00\u5b9a\u6bd4\u4e0d\u505c\u9760\u7684\u9ad8,\u8bbe\u8d77\u70b9\u4e3as\n\uff0c\u7ec8\u70b9\u4e3at,\u5982\u679c\u53ea\u6709\u4e00\u8d9f\u706b\u8f66\uff0c\u90a3\u4e48\u6240\u6709\u505c\u9760\u7684\u7ad9\u7684\u7b49\u7ea7\u53ea\u9700\u8981\u6bd4\u4e0d\u505c\u9760\u7684\u7ad9\u7684\u6700\u9ad8\u503c\u591a1\u5373\u53ef.\n\u5982\u679c\u518d\u589e\u52a0\u4e00\u8d9f\u706b\u8f66\uff0c\u8fd9\u8d9f\u706b\u8f66\u5728\u4e0a\u4e00\u8d9f\u706b\u8f66\u7684\u8d77\u59cb\u70b9\u4e4b\u5185\uff0c\u90a3\u4e48\u8fd8\u8981\u518d+1,\u5982\u679c\u5728\u8d77\u59cb\u70b9\u4e4b\u5916\n\u90a3\u4e48\u5c31\u548c\u4e00\u8d9f\u706b\u8f66\u4e00\u6837\u5904\u7406\n\u7ad9\u5411\u53ef\u4ee5\u505c\u9760\u7684\u7ad9\u8fde\u6709\u5411\u8fb9,\u7136\u540e\u627e\u5230\u5165\u5ea6\u4e3a0\u7684\u70b9(\u6ca1\u6709\u8fb9\u6307\u5411\u7684\u70b9),\u5220\u9664\u8fd9\u4e2a\u70b9\u548c\u8fd9\u4e2a\u70b9\u6240\u8fde\n\u51fa\u53bb\u7684\u6240\u6709\u8def\u5f84\uff0c\u8def\u5f84\u6307\u5411\u7684\u70b9\u7684\u5165\u5ea6-1\uff0c\u5f53\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\uff08\u64a4\u9500\u539f\u5165\u5ea6\u4e3a0\u540e\u5165\u5ea6\u53d8\u4e3a0\u5728\n\u7b2c\u4e00\u8f6e\u4e0d\u89e3\u51b3\uff09\u90fd\u89e3\u51b3\u4e86\u4e4b\u540e\uff0c\u8fdb\u884c\u4e0b\u4e00\u8f6e\uff0c\u8fdb\u884c\u4e00\u8f6e\u5c31\u7d2f\u52a0\u4e00\u4e0b\u8ba1\u6570\u5668\uff0c\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u5373\u53ef..*/\n#include<bits/stdc++.h>\nusing namespace std;\nint bj[100001],n,m,l,a[100001],vis[1001][1001],lu[100001],bj1[100001],b[100001],ans;\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tmemset(bj,0,sizeof(bj));//\u6bcf\u6b21\u6807\u8bb0\u6e05\u96f6\uff1b \n\t\tcin>>l;\n\t\tfor(int j=1;j<=l;j++)\n\t\t{\n\t\t\tcin>>a[j];\n\t\t\tbj[a[j]]=1;//\u6807\u8bb0\u505c\u9760\u7684\u7ad9\u70b9\uff1b \n\t\t}\n\t\tfor(int z=a[1];z<=a[l];z++)\n\t\t{\n\t\t\tif(!bj[z])//\u8868\u793a\u6ca1\u6709\u505c\u9760\u7684\u7ad9\u70b9\uff1b \n\t\t\tfor(int j=1;j<=l;j++)\n\t\t\t{\n\t\t\t\tif(!vis[z][a[j]])\n\t\t\t\t{\n\t\t\t\t\tvis[z][a[j]]=1;//\u6ca1\u505c\u9760\u7684\u7ad9\u70b9\u5411\u505c\u9760\u7684\u7ad9\u70b9\u8fde\u8fb9\uff1b \n\t\t\t\t\tlu[a[j]]++;//\u505c\u9760\u7684\u7ad9\u70b9\u7684\u7b49\u7ea7++\uff1b \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint p=0,flag=1;\n\twhile(p!=0||flag)\n\t{\n\t\tflag=0;//\u8ba9\u7b2c\u4e00\u6b21\u8fdb\u6765\uff1b \n\t\tp=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(!lu[i]&&!bj1[i])//\u627e\u5165\u5ea6\u4e3a0\u7684\u70b9\uff1b \n\t\t\t{\n\t\t\t\tb[++p]=i;//\u8bb0\u4e0b\uff1b \n\t\t\t\tbj1[i]=1;//\u9632\u6b62\u6709\u91cd\u590d\u7684\u70b9\uff1b \n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=p;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(vis[b[i]][j])//\u5c06\u5b83\u6240\u6709\u80fd\u8fde\u7684\u70b9\u7684\u8fb9\u90fd\u5220\u9664\uff1b \n\t\t\t{\n\t\t\t\tvis[b[i]][j]=0;\n\t\t\t\tlu[j]--;// \u5c06\u5b83\u6240\u6709\u80fd\u8fde\u7684\u70b9\u7684\u5165\u5ea6--\uff1b \n\t\t\t}\n\t\t}\n\t\tans++; \n\t}\n\tans--;//\u56e0\u4e3a\u5f53\u6700\u540e\u4e00\u8f6e\u65f6\u8fd8\u4f1a\u505a\uff1b\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1527296086,
        "uid": 87457,
        "name": "wshz",
        "ccfLevel": 0,
        "title": "\u8f66\u7ad9\u5206\u7ea7"
    },
    {
        "content": "\u8bf4\u5b9e\u8bdd\n\n\u8fd9\u9053\u9898\u4f5c\u4e3a\u666e\u53ca\u7ec4\u6700\u540e\u4e00\u9053\u6709\u70b9\u6c34\u4e86\n\n\u597d\u5427\u5176\u4ed6\u4e5f\u633a\u6c34\u7684\n\n\u4e3b\u8981\u601d\u8def\u662f\u5efa\u4e00\u4e2a\u56fe\n\n\u4e00\u6761\u8def\u4e2d\uff0c\u6ca1\u505c\u7684\u70b9\u5411\u505c\u7684\u70b9\u8fde\u8fb9\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u8981\u4fdd\u8bc1\u6ee1\u8db3\u6761\u4ef6\n\n\u6ca1\u505c\u7684\u70b9\u7684\u7ea7\u522b\u5fc5\u987b\u5c0f\u4e8e\u505c\u7684\u70b9\n\n\u7136\u540e\u7528dfs\u5927\u6cd5\u6c42\u51fa\u6700\u957f\u8def\u5f84\u5c31\u884c\u4e86\n\n\n\n\n\n```cpp\nuses math;\nvar\n    flag:array[0..1000] of boolean;  //flag\u6570\u7ec4\u8868\u793a\u662f\u5426\u505c\u9760\n    b:array[0..1000,0..1000] of boolean;  //b\u6570\u7ec4\u907f\u514d\u91cd\u590d\u8fde\u8fb9\n    q:array[0..1000,0..1000] of longint;  //\u90bb\u63a5\u8868\n    a,f:array[0..1000] of longint;\n    i,j,k,n,m,p,ans:longint;\nprocedure dfs(x:longint);\nvar\n    i:longint;\nbegin\n    if f[x]<>0 then\n        exit;\n    f[x]:=1; //\u6700\u4f4e\u7b49\u7ea7\u4e3a1\n    for i:=1 to q[x][0] do\n        begin\n            dfs(q[x][i]);\n            f[x]:=max(f[x],f[q[x][i]]+1);\n        end;\nend;\nbegin\n    readln(n,m);\n    for i:=1 to m do\n        begin\n            read(p);\n            fillchar(flag,sizeof(flag),0);\n            for j:=1 to p do\n                begin\n                    read(a[j]);\n                    flag[a[j]]:=true;\n                end;\n            for j:=a[1] to a[p] do\n                if not flag[j] then\n                    begin\n                        for k:=1 to p do\n                            if not b[j][a[k]] then\n                                begin\n                                    inc(q[j][0]);\n                                    q[j][q[j][0]]:=a[k];\n                                    b[j][a[k]]:=true;\n                                end;\n                    end;\n        end;\n    for i:=1 to n do\n        dfs(i);\n    for i:=1 to n do\n        ans:=max(ans,f[i]);\n    writeln(ans);\nend.\n\n```",
        "postTime": 1506839823,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u90a3\u6211\u6765\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u597d\u4e86\n\n\u611f\u89c9\u6bcf\u6b21topu\u7684\u9898\u90fd\u88ab\u6211\u4e71\u641e\u6c34\u8fc7\u53bb\u5bfc\u81f4\u6211\u62d3\u6251\u73b0\u5728\u90fd\u4e0d\u86ee\u4f1a\u6253\u2190\u5582\n\n\u5bf9\u4e8e\u6bcf\u6761\u8def\u5f84s-t\uff0c\u628a\u7ebf\u6bb5\u4e2d\u4e0d\u5728\u8def\u5f84\u4e0a\u7684\u70b9\u5411\u8def\u5f84\u4e0a\u7684\u70b9\u8fde\u8fb9\uff0c\u8868\u793a\u524d\u8005\u6bd4\u540e\u8005\u5c0f\u3002\n\n\u7136\u540e\u5c31\u662f\u8bb0\u5fc6\u5316\u641c\u7d20\u539f\u7406\uff0cDAG\u6c42\u6700\u957f\u8def\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#define N 1010\nint map[N][N];\nint f[N],n;\nusing namespace std;\nbool vis[N];\nvoid dfs(int u){\n  if(f[u])return;\n  for(int i=1;i<=n;i++){\n    if(!map[u][i])continue;\n    dfs(i);\n    f[u]=max(f[u],f[i]);\n  }\n  f[u]++;\n}\nint main(){\n  freopen(\"hh.in\",\"r\",stdin);\n  freopen(\"hh.out\",\"w\",stdout);\n  int m,x;\n  int a[N];\n  cin>>n>>m;\n  while(m--){\n    scanf(\"%d\",&x);\n    for(int i=1;i<=x;i++)scanf(\"%d\",&a[i]);\n    int now=2;\n    for(int j=a[1]+1;j<a[x];j++){\n      if(j==a[now])now++;\n      else {\n    for(int i=1;i<=x;i++)map[j][a[i]]=1;\n      }\n    }\n  }\n  int ans=0;\n  for(int i=1;i<=n;i++){\n    if(!f[i])dfs(i);\n    ans=max(ans,f[i]);\n  }\n  cout<<ans;\n}\n```cpp",
        "postTime": 1505305410,
        "uid": 31337,
        "name": "\u91d1\u95ea\u95ea\u6570\u636e\u7403",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "1.O(n^3)\u5927\u6cd5\uff0c\u88f8\u7684topsort\uff0c\u8fd9\u91cc\u6211\u7528\u53e6\u4e00\u79cd\u7c7b\u4f3c\u7684\u65b9\u6cd5,\u672c\u8d28\u76f8\u540c\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\nint i,j,k,l,n,m;\nint a[1001],size;\nbool ha[1001][1001];\nint level[1001],ans=0,cnt=0;\nbool has[1001],suc=0;\nint main()\n{\n    memset(ha,0,sizeof(ha));\n    memset(level,0,sizeof(level));\n    scanf(\"%d%d\",&n,&m);\n    for (i=1; i<=m; i++)\n    {\n        memset(has,0,sizeof(has));        \n        scanf(\"%d\",&size);\n        for (j=1; j<=size; j++)\n        {\n          scanf(\"%d\",&a[j]);\n          has[a[j]]=1;\n        }\n        for (k=a[1]+1; k<a[size]; k++)\n          if (has[k]==0)\n            for (j=1; j<=size; j++)    \n              ha[a[j]][k]=1;\n    }\n    while (suc==0)\n    {\n        cnt++;\n        suc=1;\n        for (i=1; i<=n; i++)\n          if (level[i]==0)\n          {\n            bool flag=1;\n            for (j=1; j<=n; j++)\n            if (ha[i][j] && (level[j]==0 || level[j]==cnt))\n          {\n              flag=0;\n              break;\n          }\n        if (flag==1)\n          level[i]=cnt;\n        else suc=0;\n    }\n    }\n    printf(\"%d\",cnt);\n    return 0;\n}\n2.O(n^2),topsort\u4f18\u5316\uff1a\u6211\u4eec\u628a\u70b9\u7684top\u5173\u7cfb\u8f6c\u5316\u4e3a\u8f66\u6b21\u7684\u5173\u7cfb\uff0c\u5efa\u56feO(n^2) \n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint i,j,n,m,ans=1,xx,y;\nint q[1001],f=1,r=0;\nint a[1001][1001],len[1001],p[1001][1001],ru[1001];\nbool x[1001][1001];\nint main()\n{\n    memset(x,0,sizeof(x));\n    scanf(\"%d%d\",&n,&m);\n    for (i=1; i<=m; i++)\n    {\n        scanf(\"%d\",&len[i]);\n        for (j=1; j<=len[i]; j++)\n          scanf(\"%d\",&a[i][j]);\n        p[i][0]=0;\n        for (j=1; j<=n; j++)\n        {\n            p[i][j]=p[i][j-1];\n            if (a[i][p[i][j]+1]==j) p[i][j]++;\n        }\n    }\n    for (i=1; i<m; i++)\n      for (j=i+1; j<=m; j++)\n      {\n        xx=max(a[i][1],a[j][1])-1; y=min(a[i][len[i]],a[j][len[j]]);\n        if (xx<=y)\n        {\n            if (p[i][y]-p[i][xx]>p[j][y]-p[j][xx]) {x[i][j]=1; ru[j]++;}\n            if (p[i][y]-p[i][xx]<p[j][y]-p[j][xx]) {x[j][i]=1; ru[i]++;}            \n        }\n      }\n    for (i=1; i<=m; i++)\n      if (ru[i]==0 && a[i][len[i]]-a[i][1]+1==len[i]) q[++r]=i;\n    int rr=r;\n    for (i=1; i<=m; i++)\n      if (ru[i]==0 && a[i][len[i]]-a[i][1]+1!=len[i])\n        q[++r]=i;\n    if (rr>=1)\n    {\n        for (f=1; f<=rr; f++)\n        {\n            for (i=1; i<=m; i++)\n              if (x[q[f]][i])\n              {\n                  x[q[f]][i]=0;\n                  ru[i]--;\n                  if (ru[i]==0) q[++r]=i;\n              }\n        }            \n    }\n    while (f<=r)\n    {\n        ans++;\n        int ff=f,rr=r;\n        for (f=ff; f<=rr; f++)\n        {\n            for (i=1; i<=m; i++)\n              if (x[q[f]][i])\n              {\n                  x[q[f]][i]=0;\n                  ru[i]--;\n                  if (ru[i]==0) q[++r]=i;\n              }\n        }        \n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1476089702,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u90fd\u662f\u62d3\u6251\u5199\u7684\u3002\u6211\u53d1\u4e2adfs\u7684\u5427\u3002\n\n\u5efa\u56fe\u4e0d\u518d\u8d58\u8ff0\u3002ans\u663e\u7136\u662fdag\u6700\u957f\u8def\u3002\n\n\u95ee\u9898\u5728\u4e8e\u2026\u2026\u6211\u4eec\u88ab\u5361\u5e38\u4e86\u2026\u2026\n\n\u6240\u4ee5\u697c\u4e0b\u865a\u62df\u70b9\u7684\u601d\u60f3\u5f88\u5173\u952e\u3002\u590d\u6742\u5ea6\u76f4\u63a5\u4ecen3\u964d\u5230n2\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u6c42\u7684\u662f\u70b9\u6743\u7684dag\u6700\u957f\u8def\u3002\u5176\u4e2d\u865a\u62df\u70b9\u7684\u70b9\u6743\u4e3a0.\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<cstring>\nconst int MAXV=1010*2; \nusing std::vector;\nusing std::max;\nvector<int> to[MAXV];\nint n,m,ans,a[MAXV];\nbool sto[MAXV];\nint uans[MAXV];\nvoid dfs(int u){\n    if(uans[u]) return;\n    uans[u]=1;\n    for(int i=0;i<to[u].size();i++) {\n        if(!uans[to[u][i]]) dfs(to[u][i]);\n        uans[u]=max(uans[u],uans[to[u][i]]+1);\n    }\n    if(u>n) uans[u]--;\n    ans=max(ans,uans[u]);\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int s;\n        scanf(\"%d\",&s);\n        memset(sto,0,sizeof(sto));\n        for(int j=1;j<=s;j++) scanf(\"%d\",&a[j]),sto[a[j]]=1,to[n+i].push_back(a[j]);\n        for(int u=a[1]+1;u<a[s];u++) if(!sto[u]) to[u].push_back(n+i);    \n    }\n    for(int i=1;i<=n;i++) if(!uans[i]) dfs(i);\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1475084755,
        "uid": 15183,
        "name": "Rapiz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u89e3\u6790\uff1a\u62d3\u6251\u6392\u5e8f\u3002\n\n\u706b\u8f66\u505c\u9760\u7ad9\u7684\u7ea7\u522b\u603b\u662f\u9ad8\u4e8e\u672a\u505c\u9760\u7ad9\u7684\uff0c\u7c7b\u4f3c\u4e8e\u62d3\u6251\u6392\u5e8f\u91cc\u7684\u5148\u540e\u987a\u5e8f\u3002\n\n\u5047\u8bbe\u4e00\u5217\u706b\u8f66\u7684\u8d77\u70b9\u7ad9\u4e3a s \uff0c\u7ec8\u70b9\u7ad9\u4e3a e \uff0c\u5219\u9014\u4e2d\u7684\u6240\u6709\u505c\u9760\u7ad9\u5411\u672a\u505c\u9760\u7ad9\u8fde\u4e00\u6761\u8fb9\uff0c\u8868\u793a\u505c\u9760\u7ad9\u7684\u7ea7\u522b\u9ad8\u4e8e\u672a\u505c\u9760\u7ad9\uff0c\u8fd9\u6837\u5904\u7406\u4e4b\u540e\uff0c\u5c31\u5f97\u5230\u4e00\u4e2aAOV\u56fe\u3002\n\n\u5bf9\u6539\u56fe\u53cd\u590d\u6267\u884c\u64cd\u4f5c\uff1a\n\n1.\u5c06\u6240\u6709\u5165\u5ea6\u8bfb\u4e3a\u96f6\u7684\u70b9\u5165\u6808\u3002\n\n2.\u5c06\u6808\u4e2d\u6240\u6709\u70b9\u76f8\u8fde\u7684\u8fb9\u53bb\u6389\uff0c\u76f8\u8fde\u7684\u70b9\u5165\u5ea6 -1\u3002\n\n\uff08\u5bf9\u76f8\u8fde\u70b9\u8fdb\u884c\u5224\u65ad\uff0c\u82e5\u5165\u5ea6\u4e3a\u96f6\uff0c\u5219\u4fdd\u5b58\u8d77\u6765\u3002\u56e0\u4e3a\u4e0b\u4e00\u6279\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u5fc5\u7136\u662f\u4e0e\u672c\u6279\u5165\u8bfb\u4e3a\u96f6\u7684\u70b9\u9879\u76f8\u8fde\u7684\uff09\n\n\u6267\u884c\u6b21\u6570\u5373\u4e3a\u7b54\u6848\u3002\n",
        "postTime": 1474808920,
        "uid": 22143,
        "name": "chenshaoqian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u770b\u8f93\u5165\uff0c\u6bcf\u4e00\u8d9f\u706b\u8f66\u7ed9\u6211\u4eec\u7684\u5173\u7cfb\u662f\u4ec0\u4e48\uff1f\u62ff\u6837\u4f8b\u6765\u8bf4\uff0c4 1 3 5 6\u3002\u5c31\u662f1,3,5,6\u4e00\u5b9a\u6bd42,4\u6765\u7684\u5927\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u628a1,3,5,6\u5404\u54112,4\u8fde\u8fb9\u3002\u8bb0\u5728\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u91cc\u3002\n\n\u5168\u90e8\u8f93\u5165\u5b8c\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u4e71\u641e\uff08\u7b49\u7b49\uff0c\u8fd9\u4e2a\u8bcd\u5220\u6389\uff09\u5199\u6b63\u89e3\u4e86\u3002\n\n\u6b64\u65f6\uff0c\u6ca1\u6709\u5165\u8fb9\u7684\u70b9\u90fd\u662f\u5565\uff1f\u5f53\u7136\u662f\u6700\u5927\u7684\u4e86\u3002\u4e3a\u4e86\u8ba9\u7ea7\u6570\u6700\u5c11\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u90fd\u5f53\u505a\u540c\u4e00\u4e2a\u7ea7\u522b\u7684\uff0c\u5220\u6389\uff0c\u7b54\u6848++\u3002\n\n\u7136\u540e\uff0c\u518d\u627e\u4e0b\u4e00\u4e2a\u7ea7\u522b\u7684\u8f66\u7ad9\u3002\n\n\u5c31\u8fd9\u6837\u627e\u5440\u627e\uff0c\u627e\u5b8c\u6240\u6709\u7684\u8f66\u7ad9\uff0c\u7a0b\u5e8f\u7ed3\u675f~~~\n\n\u91cd\u65b0\u5ba1\u89c6\u7b97\u6cd5\uff0c\u8fd9\u4e0d\u5c31\u662f\u62d3\u6251\u54172333333333333333333333333333333333333\n\n\u4ee3\u7801\u9171\u5982\u4e0b\n\n\n    \n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <iostream>\n#include <cstring>\n#include <ctime>\n#include <algorithm>\n#include <queue>\n#include <map>\n#define ci const int\n#define ri register int\n#define ll long long\n#define reg register\n#define boom return \n#define cmax(a,b) (a)>(b)?(a):(b)\n#define cmin(a,b) (a)<(b)?(a):(b)\n#define For(i,a,b) for(i=a;i<b;i++)\nusing namespace std;\nci MAXN=1086;\nint in[MAXN],al[MAXN][MAXN],a[MAXN][MAXN],minn=2147483647,maxx=-2147483647,n,m; \nint tsort()\n{\n    int i,j,ans=0,del=0,de[MAXN]={0},d[MAXN]={0};\n    while(++ans)\n    {\n        for(i=minn;i<=maxx;i++)\n        {\n            if(!de[i]&&!in[i]&&d[i]!=ans)\n            {\n                for(j=minn;j<=maxx;j++)\n                if(al[i][j])al[i][j]--,in[j]--,d[j]=ans;\n                del++,de[i]=1;\n            }\n        }\n        if(del>maxx-minn)return ans;\n    }\n}\nint main()\n{\n    int i,j,k,b[MAXN];\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++)\n    {\n        memset(b,0,sizeof(b));\n        scanf(\"%d\",&a[i][0]);\n        for(j=1;j<=a[i][0];j++)scanf(\"%d\",&a[i][j]),b[a[i][j]]++;\n        for(j=a[i][1];j<=a[i][a[i][0]];j++)\n        {\n            if(!b[j])for(k=1;k<=a[i][0];k++)\n            if(!al[a[i][k]][j])al[a[i][k]][j]=1,in[j]++;\n        }\n        minn=cmin(minn,a[i][1]);\n        maxx=cmax(maxx,a[i][a[i][0]]);\n    }\n    printf(\"%d\",tsort());\n    return 0; \n}\n//\u6ca1\u6709\u4ec0\u4e48\u662f\u4e24\u4e2a\u5df4\u638c\u4e0d\u80fd\u89e3\u51b3\u7684\uff0c\u5982\u679c\u6709\u5c31\u518d\u6765\u4e24\u4e2a\u5df4\u638c\n```",
        "postTime": 1472479105,
        "uid": 22472,
        "name": "EnderBracket",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u5728\u4e2d\u95f4\u8def\u8fc7\u7684\u65f6\u5019\uff0c\u5efa\u56fe\uff0c\u5f53\u4e00\u4e2a\u505c\u8fc7\u7684\u8f66\u7ad9\u5206\u7ea7\u4e00\u5b9a\u6bd4\u5728\u6b64\u533a\u95f4\u5185\u6ca1\u6709\u505c\u8fc7\u7684\u8f66\u7ad9\u9ad8\u65f6\uff0c\u5c31\u4ece\u8be5\u70b9i\u5411\u6ca1\u505c\u8fc7\u7684\u8f66\u7ad9\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u5373\u8fde\u8fc7\u8fb9\u7684\u4e24\u4e2a\u70b9\u5fc5\u5b9a\u6709\u5206\u7ea7\u9ad8\u4f4e\u4e4b\u5206\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u8fd9\u4e2a\u56fe\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u6bcf\u6b21\u5220\u53bb\u5165\u5ea6\u4e3a0\u7684\u6240\u6709\u70b9\uff0c\u7136\u540e\u5220\u53bb\u4e0e\u8fd9\u4e9b\u70b9\u76f8\u90bb\u7684\u8fb9\u3002\u6700\u540e\u8bb0\u5f55\u6b21\u6570\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <fstream>\nusing namespace std;\nifstream fin(\"1.txt\");\nint a[1001][1001];\nint t[1001][1001];\nbool is[1001][1001];\nint isnow[1001];\nint n,m;\nbool ok[1001];\nint mini=10000,maxi=0;\nint main()\n{\n    cin>>n>>m;\n    for (int i=1;i<=m;i++)\n    {\n        cin>>a[i][0];\n        for (int j=1;j<=a[i][0];j++) cin>>a[i][j],is[i][a[i][j]]=true;\n        for (int j=a[i][1];j<=a[i][a[i][0]];j++)    \u5efa\u56fe\n        {\n            if (is[i][j]) continue;\n            for (int k=1;k<=a[i][0];k++)\n            {\n                if (t[a[i][k]][j]!=1)  \n                t[a[i][k]][j]=1,t[0][j]++;\n            }\n        }\n        mini=min(mini,a[i][1])     ;\u6700\u5927\u6700\u5c0f\u503c\u8868\u793a\u6240\u6709\u7684\u706b\u8f66\u6240\u7ecf\u8fc7\u7684\u6700\u524d\u548c\u6700\u540e\u4e00\u4e2a\u8f66\u7ad9\uff0c\u56e0\u4e3a\u5176\u4ed6\u7684\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u4e0d\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\n        maxi=max(maxi,a[i][a[i][0]]);\n    }\n```\n\u4e0b\u9762\u51e0\u884c\u662f\u8c03\u8bd5\u4ee3\u7801\n    //for (int i=1;i<=n;i++) cout<<t[0][i]<<\" \"<<i<<endl; \n\n/\\*\n```cpp\n    for (int i=1;i<=n;i++)\n    {\n        for (int j=1;j<=n;j++) cout<<t[i][j]<<\" \";\n        cout<<endl; \n    }\n```\n\\*/\n    int p=0;\n\n\u62d3\u6251\u6392\u5e8f\u8fc7\u7a0b\n\n        \n```cpp\n    while (1)\n    {\n        p++; \u6b21\u6570\n        for (int i=mini;i<=maxi;i++)\n        {\n            if (ok[i]==false && t[0][i]==0 && isnow[i]!=p) \u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u5220\u6389  \u4e14\u5165\u5ea6\u4e3a0 \u4e14\u4e0d\u662f\u5728\u672c\u6b21\u5faa\u73af\u4e2d\u5220\u53bb\u7684\uff08\u8fd9\u662f\u4e00\u4e2a\u5927\u5751\uff09\n            {\n                for (int j=mini;j<=maxi;j++)\n                {\n                    if (t[i][j]==1)\n                    {\n                        t[i][j]=0;\n                        t[0][j]--; \u5b83\u8fde\u5411\u7684\u70b9\u5165\u5ea6\u51cf\u4e00\n                        isnow[j]=p;\n                    }\n                }\n                ok[i]=true;  \u8fd9\u4e2a\u70b9\u5df2\u7ecf\u6210\u529f\u88ab\u5220\u6389\n            }\n        }\n        bool mark=true;\u9a8c\u8bc1\u662f\u5426\u6240\u6709\u70b9\u5df2\u7ecf\u88ab\u5220\u6389\n        for (int i=mini;i<=maxi;i++)\n        {\n            if (ok[i]==false)\n            {\n                mark=false;\n                break;\n            }\n        }\n        if (mark) break;\n    }\n    cout<<p;\n}\n```",
        "postTime": 1468648188,
        "uid": 7650,
        "name": "oscar123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u672c\u9898\u4e3b\u8981\u662f\u6293\u4f4f\u5404\u4e2a\u8f66\u7ad9\u95f4\u7684\u5173\u7cfb\u3002\u663e\u7136\uff0c\u82e5\u5217\u8f66\u7684\u505c\u9760\u7ad9\u4e3aa1,a2,...,an\uff0c\u90a3\u4e48a1~an\u4e4b\u95f4\u6ca1\u6709\u505c\u9760\u7684\u7ad9\u70b9\u7b49\u7ea7\u4e00\u5b9a\u6bd4a1~an\u6765\u5f97\u4f4e\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5c06\u4f4e\u7b49\u7ea7\u7ad9\u70b9\u5411\u9ad8\u7b49\u7ea7\u7ad9\u70b9\u8fde\u8fb9\uff0c\u8dd1\u4e00\u8fb9\u6700\u957f\u8def\u5c31\u77e5\u9053\u6700\u9ad8\u7b49\u7ea7\u7684\u7ad9\u70b9\u662f\u591a\u5c11\u4e86\u3002\n",
        "postTime": 1438263796,
        "uid": 4341,
        "name": "TsReaper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u597d\u7684\u7ec3\u4e60\u62d3\u6392\u7684\u9898\u76ee\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u601d\u8003\u7ed9\u51fa\u7684\u6bcf\u4e00\u7ec4\u6761\u4ef6\u3002\n\n\u6240\u6709\u7684\u4e0d\u8d70\u7684\u8f66\u7ad9\u7684\u7ea7\u522b\u4e00\u5b9a\u662f\u6bd4\u8981\u8d70\u7684\u8f66\u7ad9\u7684\u7ea7\u522b\u5c0f\u7684\u3002\n\n\u5f88\u5bb9\u6613\u7684\u5c31\u53ef\u4ee5\u60f3\u5230\u4ece\u5f53\u524d\u7684\u6761\u4ef6\u4e2d\uff1a\u4ece\u6240\u6709\u4e0d\u8d70\u7684\u8f66\u7ad9\u5411\u6240\u6709\u8d70\u7684\u8f66\u7ad9\u8fde\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u7528\u62d3\u6392\u6c42\u6df1\u5ea6\u3002\n\n\u7136\u540e\u4ea4\u4e0a\u53bb\uff0cRE\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\ntypedef long long ll;\nusing namespace std;\n\nconst int maxn = 500000;\nint n , m;\n\nstruct Edge {\n    int to , nxt;\n}e[maxn];\nint head[maxn] , cnt , a[maxn] , ind[maxn];\nbool flag[maxn];\n\nvoid add(int u , int v ) {\n    e[++cnt].to = v;\n    e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\n\nint ans = 0;\n\nvoid Topo() {\n    queue <pair<int , int> > q;\n    for(int i = 1 ; i <= n ; ++ i) if(!ind[i]) q.push(make_pair(i , 1));\n    while(!q.empty()) {\n        int now = q.front().first;\n        int dep = q.front().second; q.pop();\n        if(dep > ans) ans = dep;\n        for(int i = head[now] ; i ; i = e[i].nxt) {\n            int v = e[i].to;\n            ind[v] --;\n            if(ind[v] == 0) q.push(make_pair(v , dep + 1));\n        } \n    }\n}\n\nint main () {\n    scanf(\"%d%d\" , &n , &m);\n    while(m --) {\n        memset(flag , 0 ,sizeof(flag));\n        int s; scanf(\"%d\" , &s);\n        for(int i = 1 ; i <= s ; ++ i) scanf(\"%d\" , a + i) , flag[a[i]] = 1;\n        for(int i = a[1] ; i <= a[s] ; ++ i) \n            if(!flag[i]) for(int j = 1 ; j <= s ; ++ j) add(a[j] , i) , ind[i] ++;\n    }\n    /*for(int i = 1 ; i <= n ; ++ i) {\n        printf(\"ind[%d] = %d\\n\" , i , ind[i]);\n    }*/\n    Topo();\n    printf(\"%d\\n\" , ans);\n    return 0;\n}\n```\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fde\u7684\u8fb9\u6570\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4f46\u662f\u6700\u591a\u53ea\u6709$n^2$\u6761\uff0c\u4f46\u662f\u4e0d\u7279\u5224\u7684\u8bdd\u53ef\u80fd\u4f1a\u8fde\u66f4\u591a\u3002\n\n\u56e0\u6b64\u6211\u4eec\u52a0\u4e00\u4e2a`vis[i][j]`\u4ee3\u8868\u4ecei\u5230j\u662f\u5426\u6709\u8fb9\uff0c\u8fdb\u884c\u7279\u5224\u5373\u53ef\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u7f8e\u901a\u8fc7\u672c\u9898\u3002\n\n$Code :$\n```cpp\n#include <bits/stdc++.h>\n\ntypedef long long ll;\nusing namespace std;\n\nconst int maxn = 2000;\nint n , m;\n\nstruct Edge {\n    int to , nxt;\n}e[5000000];\nint head[maxn] , cnt , a[maxn] , ind[maxn];\nbool flag[maxn] , vis[maxn][maxn];\n\nvoid add(int u , int v ) {\n    e[++cnt].to = v;\n    e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\n\nint ans = 0;\n\nvoid Topo() {\n    queue <pair<int , int> > q;\n    for(int i = 1 ; i <= n ; ++ i) if(!ind[i]) q.push(make_pair(i , 1));\n    while(!q.empty()) {\n        int now = q.front().first;\n        int dep = q.front().second; q.pop();\n        if(dep > ans) ans = dep;\n        for(int i = head[now] ; i ; i = e[i].nxt) {\n            int v = e[i].to;\n            ind[v] --;\n            if(ind[v] == 0) q.push(make_pair(v , dep + 1));\n        } \n    }\n}\n\nint main () {\n    scanf(\"%d%d\" , &n , &m);\n    while(m --) {\n        memset(flag , 0 ,sizeof(flag));\n        int s; scanf(\"%d\" , &s);\n        for(int i = 1 ; i <= s ; ++ i) scanf(\"%d\" , a + i) , flag[a[i]] = 1;\n        for(int i = a[1] ; i <= a[s] ; ++ i) \n            if(!flag[i]) \n            for(int j = 1 ; j <= s ; ++ j) {\n                if(!vis[a[j]][i])\n                    add(a[j] , i) , vis[a[j]][i] = 1 , ind[i] ++;\n            }\n    }\n    Topo();\n    printf(\"%d\\n\" , ans);\n    return 0;\n}\n```",
        "postTime": 1570363264,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "## P1983 \u8f66\u7ad9\u5206\u7ea7\n[P1983 \u8f66\u7ad9\u5206\u7ea7](https://www.luogu.org/problemnew/show/P1983)\n\n\u56e0\u4e3a\u6211\u4eec\u5728\u7b49\u7ea7\u6bd4\u8f83\u4f4e\u5730\u65b9\u505c\u4e86\u4ee5\u540e\uff0c\u5728\u7b49\u7ea7\u9ad8\u7684\u5730\u65b9\u53ef\u4ee5\u518d\u505c\uff0c\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u4ece\u7b49\u7ea7\u4f4e\u6307\u5411\u7b49\u7ea7\u9ad8\u7684\u5730\u65b9\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u8fdb\u884c\u4e0b\u62d3\u6251\u6392\u5e8f\uff0c\u5e76\u5b58\u50a8\u4e0b\u5f53\u524d\u7684\u7b49\u7ea7\u4fbf\u884c\u4e86\n\n\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\n\n1\u3001\u90bb\u63a5\u8868\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\n\nqueue < pair<int,int> > q;\nconst int N=3000;\nint s[2000][2000];\nint a[10000];\nint jud[2000][2000];\nint vis[10000];\nint ver[N],head[N],Next[N],deg[N];\nint n,m;\nlong long tot=0;\nint ans=1;\nvoid add(int x,int y)\n{\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n\tdeg[y]++; \n}\nvector<int > edge[2000];\nvoid top()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(deg[i]==0)\n\t\t{\n\t\t\tq.push(make_pair(i,1));\n\t\t}\n\t}\n\twhile(q.size())\n\t{\n\t\t\n\t\tint x=q.front().first,lev=q.front().second;\n\t\tq.pop();\n\t\tfor(int i=0;i<edge[x].size();i++)\n\t\t{\n\t\t\tint y=edge[x][i];\n\t\t\tdeg[y]--;\n\t\t\tif(deg[y]==0)\n\t\t\t{\n\t\t\t\tq.push(make_pair(y,lev+1));\n\t\t\t\tans=max(ans,lev+1);\n\t\t\t}\n\t\t}\n\t}\n\t\n}\nint main()\n{\n//\tfreopen(\"testdata (4).in\",\"r\",stdin);\n//\tfreopen(\"testdata (4).out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tscanf(\"%d\",&s[i][0]);\n\t\tfor(int j=1;j<=s[i][0];j++)\n\t\t{\n\t\t\tscanf(\"%d\",&s[i][j]);\n\t\t\tvis[s[i][j]]=1;\n\t\t}\n\t\tfor(int j=s[i][1];j<=s[i][s[i][0]];j++)\n\t\t{\n\t\t\tif(vis[j])continue;\n\t\t\tfor(int k=1;k<=s[i][0];k++)\n\t\t\t{\n\t\t\t\tif(!jud[j][s[i][k]])\n\t\t\t\t{\n\t\t\t\t\tdeg[s[i][k]]++;\n\t\t\t\t\tedge[j].push_back(s[i][k]);\n\t\t\t\t\tjud[j][s[i][k]]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\ttop();\n\tcout<<ans;\n\treturn 0;\n}\n```\n\n2\u3001\u94fe\u5f0f\u524d\u5411\u661f\n### \u6ce8\u610f\uff1a\u6570\u636e\u8bb0\u5f97\u5f00\u591f\u5927\uff0c\u67091000^2\u79cd\u60c5\u51b5\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\nqueue < pair<int,int> > q;\nconst int N=3000010;\nint s[2000][2000];\nint a[10000];\nint jud[2000][2000];\nint vis[10000];\nint ver[N],head[N],Next[N],deg[N];\nint n,m;\nlong long tot=0;\nint ans=1;\nvoid add(int x,int y)\n{\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n\tdeg[y]++; \n}\nvoid top()\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(deg[i]==0)\n\t\t{\n\t\t\tq.push(make_pair(i,1));\n\t\t}\n\t}\n\twhile(q.size())\n\t{\n\t\t\n\t\tint x=q.front().first,lev=q.front().second;\n\t\tq.pop();\n\t\tfor(int i=head[x];i;i=Next[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tdeg[y]--;\n\t\t\t\n\t\t\tif(deg[y]==0)\n\t\t\t{\n\t\t\t\tq.push(make_pair(y,lev+1));\n\t\t\t\tans=max(ans,lev+1);\n\t\t\t}\n\t\t}\n\t}\n\t\n}\nint main()\n{\n\t//freopen(\"testdata (4).in\",\"r\",stdin);\n\t//freopen(\"testdata (4).out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tscanf(\"%d\",&s[i][0]);\n\t\tfor(int j=1;j<=s[i][0];j++)\n\t\t{\n\t\t\tscanf(\"%d\",&s[i][j]);\n\t\t\tvis[s[i][j]]=1;\n\t\t}\n\t\tfor(int j=s[i][1];j<=s[i][s[i][0]];j++)\n\t\t{\n\t\t\tif(vis[j])continue;\n\t\t\tfor(int k=1;k<=s[i][0];k++)\n\t\t\t{\n\t\t\t\tif(!jud[j][s[i][k]])\n\t\t\t\t{\n\t\t\t\t\tadd(j,s[i][k]);\n\t\t\t\t\tjud[j][s[i][k]]=true;\n\t\t\t\t\t//cout<<deg[s[i][k]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\ttop();\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1568966649,
        "uid": 108459,
        "name": "lizh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problem/P1983)\n\n\u611f\u8c22 dalao @demonovo \u63d0\u5230\u7684\u865a\u70b9\u7ed9\u6211\u63d0\u4f9b\u4e86\u601d\u8def\uff0c\u867d\u7136\u5e76\u4e0d\u77e5\u9053\u601d\u8def\u662f\u5426\u4e00\u6837......\uff08\u6211\u6ca1\u770b\u5177\u4f53\u5185\u5bb9\u554a\u5582\uff09\n\n~~233333333~~\n\n-----\n**\u3010\u5206\u6790\u3011**\n--\n\n\u6839\u636e\u9898\u76ee\u610f\u601d\uff0c\u4e00\u8f86\u706b\u8f66\u5982\u679c\u4ece\u7b2c $p_1$ \u4e2a\u7ad9\u70b9\u5f00\u5f80\u7b2c $p_c$ \u4e2a\u7ad9\u70b9\uff0c\u5219\u4e2d\u95f4\u6240\u6709**\u6709\u505c\u9760\u7684\u7ad9\u70b9**\u7b49\u7ea7\u4e00\u5b9a\u9ad8\u4e8e**\u6ca1\u505c\u9760\u7684\u7ad9\u70b9**\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\u5efa\u8fb9\uff0c\u4ece\u7b49\u7ea7\u9ad8\u7684\u70b9\u6307\u5411\u4f4e\u7684\u70b9\u7684\u6709\u5411\u8fb9\n\n\u90a3\u4e48\uff0c\u591a\u6761\u7ebf\u8def\u4e0b\u6765\uff0c\u6211\u4eec\u660e\u663e\u53ef\u4ee5\u5efa\u6210\u4e00\u4e2aDAG\uff1a\u6240\u6709\u786e\u5b9a\u7b49\u7ea7\u5173\u7cfb\u7684\u70b9\u95f4\uff0c\u4e00\u5b9a\u6709\u4e00\u6761\u6709\u5411\u8fb9\u3002\u81f3\u4e8e\u4e0d\u786e\u5b9a\u7684\uff0c\u6ca1\u6709\u5173\u7cfb\uff0c\u6211\u4eec\u5047\u8bbe\u5b83\u5c5e\u4e8e\u4efb\u610f\u5408\u6cd5\u7b49\u7ea7\u5373\u53ef\n\n\u6240\u4ee5\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u4e00\u4e2a\u62d3\u6251\u6392\u5e8f\u3002\u5bf9\u4e8e\u6b64\u65f6\u5165\u8bfb\u4e3a $0$ \u7684\u70b9\uff0c\u6211\u4eec\u89c6\u4e3a\u540c\u4e00\u7b49\u7ea7\u3002\u5148\u5c06\u5b83\u4eec\u6807\u8bb0\uff0c\u7136\u540e\u7edf\u4e00\u8fdb\u884c\u5220\u8fb9\u3002\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u76f4\u81f3\u6392\u5e8f\u5b8c\u6240\u6709\u7684\u70b9\u3002\n\n\u800c\u91cd\u590d\u7684\u6b21\u6570\uff0c\u5c31\u662f\u5206\u7684\u7ea7\u6570\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u3002\n\n---\n\n\u8bbe\u7b2c $j$ \u8f86\u706b\u8f66\u4ece\u7b2c $p_{j,1}$ \u7ad9\u70b9\u59cb\u53d1\uff0c\u7ec8\u6b62\u4e8e\u7b2c $p_{j,c}$ \u7ad9\u70b9\n\n\u8be5\u8f86\u8d27\u8f66\u5efa\u8fb9\u7684\u8017\u65f6\u5373\u4e3a $c[(p_{j,c}-p_{j,1})-c]\\leq {1\\over 4}(p_{j,c}-p_{j,1})^2\\leq {1\\over 4}n^2$ \uff0c\u5f53\u4e14\u4ec5\u5f53 $c={n\\over 2},p_{j,1}=1,p_{j,c}=n$ \u65f6\u6210\u7acb\n\n\u90a3\u4e48\uff0c\u5efa\u8fb9\u603b\u65f6\u957f\u5c31\u662f $O({1\\over 4}n^2\\times m)=O(mn^2)$ \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5355\u7eaf\u5efa\u8fb9\u8fc7\u7a0b\uff0c\u5c31\u5b8c\u5168\u53ef\u4ee5\u88ab\u51fa\u9898\u4eba\u5361\u6b7b\n\n\u800c\u62d3\u6251\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9996\u5148\u9700\u8981 $O(n)$ \u627e\u51fa\u5165\u8bfb\u4e3a $0$ \u7684\u70b9\uff0c\u7136\u540e\u5220\u9664\u8fd9\u4e9b\u70b9\u7684\u6240\u6709\u8fb9\u3002\u6700\u574f\u60c5\u51b5\u4e0b\u6bcf\u4e2a\u70b9\u5220\u8fb9\u90fd\u662f $O(n)$ \u7684\uff0c\u5220\u8fb9\u603b\u65f6\u957f $O(n^2)$\n\n\u6240\u4ee5\uff0c\u8bbe\u7b54\u6848\u4e3a $ans$ \uff0c\u62d3\u6251\u6392\u5e8f\u7684\u603b\u65f6\u957f\u5c31\u662f $O(ans\\times n+n^2)$ \uff0c\u56e0\u4e3a $ans\\leq n$ \uff0c\u6240\u4ee5\u4e3a $O(n^2)$\n\n---\n\n\u6574\u4f53\u7684\u601d\u8def\u80af\u5b9a\u662f\u6ca1\u9519\u7684\uff0c\u4f46\u5efa\u8fb9\u7684\u4ee3\u4ef7\u672a\u514d\u592a\u5927\u4e86\u3002\n\n\u8fd9\u6b21\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u5efa\u8fb9\u8fdb\u884c\u4f18\u5316\n\n\u6211\u4eec\u5728\u5efa\u8fb9\u7684\u65f6\u5019\uff0c\u9700\u8981\u5efa $c(n-c)$ \u6761\u8fb9\u3002\u4f46\u6211\u4eec\u7684\u9700\u8981\u8868\u8fbe\u7684\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u505c\u9760\u7684\u70b9\u5168\u90e8\u5927\u4e8e\u672a\u505c\u9760\u7684\u70b9\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u4e2d\u8f6c\u70b9 $p_m$ \u3002\u90a3\u4e48\uff0c\u505c\u9760\u7684\u70b9\u5168\u90e8\u5927\u4e8e $p_m$ \uff0c\u672a\u505c\u9760\u7684\u5c0f\u4e8e $p_m$ \n\n\u5c31\u76f8\u5f53\u4e8e\u5728\u7b2c $1$ \u7ea7\u548c\u7b2c $2$ \u7ea7\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u7b2c $1.5$ \u7ea7\uff0c\u7b2c $2$ \u7ea7\u548c\u7b2c $3$ \u7ea7\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u7b2c $2.5$ \u7ea7......\u5728\u7b2c $(ans-1)$ \u7ea7\u548c\u7b2c $ans$ \u7ea7\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u7b2c ${(ans-1)+ans\\over 2}={}ans-{1\\over 2}$ \u7ea7\uff0c\u4e00\u5171\u63d2\u5165\u4e86 $(ans-1)$ \u4e2a\u7ea7\u522b\n\n\u6240\u4ee5\uff0c\u6b64\u65f6\u5bf9\u4e8e\u62d3\u6251\u6392\u5e8f\u51fa\u6765\u7684\u7ed3\u679c $a$ \u7ea7\uff0c\u5c31\u6ee1\u8db3 $a=ans+(ans-1)$ \u6240\u4ee5\uff0c\u6700\u540e\u7684\u7b54\u6848\u4e3a ${a+1\\over 2}$\n\n---\n\n\u6211\u4eec\u8fd8\u662f\u4f30\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u76f8\u540c\u60c5\u51b5\u4e0b\uff0c\u5df2\u77e5\u4e00\u6761\u706b\u8f66\u7ebf\u8def\u5efa\u8fb9\u7684\u6761\u6570\u4f18\u5316\u4e3a $c+[(p_{j,c}-p_{j,1})-c]=p_{j,c}-p_{j,1}\\leq n$\uff1b\u5efa\u8fb9\u603b\u8017\u65f6\u4e3a $O(m\\times n)=O(nm)$\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u65b0\u5efa\u8fd9 $m$ \u4e2a\u4e2d\u8f6c\u70b9\uff0c\u53ef\u4ee5\u5c06\u590d\u6742\u5ea6\u4f18\u5316\u5230\u53ef\u63a5\u53d7\u7684\u8303\u56f4\n\n\u800c\u4e0e\u6b64\u540c\u65f6\uff0c\u62d3\u6251\u6392\u5e8f\u7684\u8017\u65f6\u6539\u4e3a $O(a\\times (n+m)+(n+m)^2)=O(a\\times n+n^2)$($n,m$ \u540c\u9636)\n\n\u4e0a\u6587\u63d0\u5230\u4e86\uff0c $a=2\\times ans-1$ \uff0c\u6240\u4ee5\u62d3\u6251\u6392\u5e8f\u603b\u590d\u6742\u5ea6\u4e3a $O(n^2)$\n\n---\n\n**\u3010\u5206\u6790\u3011**\n---\n\n\u90a3\u672c\u849f\u84bb\u5c31\u653e ~~\u6211\u7801\u98ce\u6781\u4e11\u7684~~ \u4ee3\u7801\u4e86\n\n```cpp\n#include<cstdio>\nusing namespace std;\n#define f(a,b,c,d) for(register int a=b,c=d;a<=c;a++)\n#define g(a,b,c,d) for(register int a=b,c=d;a>=c;a--)\ntypedef int i32;\ntypedef unsigned int u32;\ntypedef long long int i64;\ntypedef unsigned long long int u64;\n//\u6761\u4ef6\u53cd\u5c04\u7684\u4e00\u5806\u65e0\u7528\u5b9a\u4e49\nconst i32 MAXN=2048;\n#define LOCAL\n#ifdef LOCAL\n    inline char gc() { return getchar(); }\n#else\n    inline char gc(){\n        static char s[1<<20|1]={0},*p1=s,*p2=s;\n        return (p1==p2)&&(p2=(p1=s)+fread(s,1,1<<20,stdin),p1==p2)?EOF:*(p1++);\n    }\n#endif\ninline i32 read(){\n    register i32 ans=0;register char c=gc();register bool neg=0;\n    while(c<48||c>57) neg=!(c^'-'),c=gc();\n    while(c>=48&&c<=57) ans=(ans<<3)+(ans<<1)+(c^48),c=gc();\n    return neg?-ans:ans;\n}\n//\u65e0\u804a\u7684\u8bfb\u5165\u4f18\u5316\n\ni32 d_N,d_Ans;\ni32 ar_d_Ind[MAXN],mt_d_Con[MAXN][MAXN];\n\ninline void built_edge(i32 d_S,i32 d_E){//\u5efa\u8fb9\n    ar_d_Ind[d_E]++;\n    mt_d_Con[d_S][ ++mt_d_Con[d_S][0] ]=d_E;\n}\ninline void inport(i32 d_MPnt){//\u8bfb\u53d6\u4e00\u6761\u7ebf\u8def\n    i32 ar_d_Pnt[MAXN],*ptr_d_Pnt=ar_d_Pnt;\n    bool ar_b_Pnt[MAXN]={0};\n    f(i,1,I,read()) ar_b_Pnt[ *(ptr_d_Pnt++)=read() ]=1;\n    f(i,*ar_d_Pnt,I,*(ptr_d_Pnt-1))//\u679a\u4e3e\u8fd9\u6761\u7ebf\u8def\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\n        if(ar_b_Pnt[i]) built_edge(i,d_MPnt);\n        //\u6709\u505c\u9760\u7684\uff0c\u5efa\u8fb9\u81f3\u4e2d\u8f6c\u70b9\n        else built_edge(d_MPnt,i);\n        //\u672a\u505c\u9760\u7684\uff0c\u7531\u4e2d\u8f6c\u70b9\u5efa\u8fb9\n}\n\ninline void del_edge(i32 d_Pnt){//\u5220\u8fb9\n    f(i,1,I,mt_d_Con[d_Pnt][0]) ar_d_Ind[ mt_d_Con[d_Pnt][i] ]--;\n    ar_d_Ind[d_Pnt]=-1;//\u9632\u6b62\u4e0b\u4e00\u8f6e\u62d3\u6251\u6392\u5e8f\u53c8\u88ab\u679a\u4e3e\u5230\n}\ninline bool floor(){\n    i32 ar_d_Pnt[MAXN]={0},*ptr_d_Pnt=ar_d_Pnt;\n    f(i,1,I,d_N) if(!ar_d_Ind[i]) *(ptr_d_Pnt++)=i;//\u50a8\u5b58\u5165\u8bfb\u4e3a 0 \u7684\u70b9\n    if(ptr_d_Pnt==ar_d_Pnt) return false;//\u627e\u4e0d\u5230\u4e86\uff0c\u8bf4\u660e\u62d3\u6251\u6392\u5e8f\u5b8c\u6bd5\n    for(register i32 *p=ar_d_Pnt;p<ptr_d_Pnt;p++) del_edge(*p);\n    return true;\n}\n\nint main(){\n    d_N=read();\n    f(i,1,I,read()) inport(++d_N);\n    while( floor() ) d_Ans++;\n    d_Ans=(d_Ans+1>>1);\n    printf(\"%d\",d_Ans);\n    return 0;\n}\n```\n\n\u6700\u540e\u5b89\u5229\u4e00\u4e0b [\u672c\u849f\u84bb\u7684\u535a\u5ba2](https://www.luogu.org/blog/JustinRochester/)",
        "postTime": 1567238715,
        "uid": 36031,
        "name": "JustinRochester",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u6570\u636e\u89c4\u6a21\u53ef\u4ee5\u63a5\u53d7O(n^2)\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5feb\u4e50\u5730n^2\u5427\u3002\n### \u601d\u8def\n\u672c\u9898\u7684\u601d\u8def\u6709\u70b9\u7c7b\u4f3c\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf\uff08\u4e0d\u592a\u786e\u5b9a\uff09\uff0c\u4e00\u6761\u6709\u5411\u8fb9\u4ee3\u8868 > ,\u6ce8\u610f\uff0c\u4ee3\u8868\u7684\u4e0d\u662f>=\uff0c\u7136\u540e\u5efa\u51fa\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u53ef\u4ee5\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u627e\u5230\u5b83\u53ef\u4ee5\u5206\u6210\u51e0\u5c42\uff0c\u5373\u4e3a\u6b63\u786e\u7684\u7b54\u6848\u3002\n\n\u6c42\u4ed6\u6709\u591a\u5c11\u5c42\u7684\u65b9\u6cd5\uff0c\u4e3b\u8981\u6846\u67b6\u4e3a\u62d3\u6251\u6392\u5e8f\t\n\n\u6bcf\u4e00\u8f6e\u628a\u8fd9\u4e00\u8f6e\u4e2d\u6bcf\u4e2a\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u62ce\u51fa\u6765\uff0c\u7c7b\u4f3c\u4e8e\u7ed9\u6d0b\u8471\u5265\u5f00\u4e00\u5c42\u76ae\uff0c\u6d88\u9664\u8fd9\u4e9b\u70b9\u7684\u51fa\u8fb9\uff0c\u8fdb\u884c\u4e0b\u4e00\u8f6e\uff0c\u76f4\u5230\u6ca1\u6709\u70b9\u4e86\u4e3a\u6b62\u3002\n\n\n\n\u7279\u522b\u6ce8\u610f\uff1a \u672c\u9898\u5982\u679c\u4f60\u8981\u5b58\u56fe\u7684\u8bdd\uff0c\u6700\u597d\u5224\u4e00\u4e0b\u91cd\u8fb9\uff0c\u9632\u6b62\u7a7a\u95f4\u70b8\u9505\u3002\n### Code\n```cpp\n#include<bits/stdc++.h>\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define Maxn 1002\n\nusing namespace std;\n\nint read(){\n    char c=getchar(); int flag=1, x=0;\n    while(!isdigit(c)){ if(c=='-') flag=-1; c=getchar(); }\n    while( isdigit(c)){ x=x*10+(c-'0'); c=getchar(); }\n    return flag*x;\n}\n\nint n,m;\n\nstruct Graph_Type{\n    struct LINE{\n        int st,en,pre;\n    }line[Maxn*Maxn*2+10];\n    int Map[Maxn+10][Maxn+10];\n    int head[Maxn+10], tot=0;\n    int du[Maxn+10];\n    void add(int a,int b){\n        if(Map[a][b]) return ;\n        Map[a][b]=1;\n        line[++tot]=(LINE){ a,b,head[a] }; head[a]=tot;\n        du[b]++;\n    }\n    int Lev[Maxn+10]; int Ans=0;\n    int vis[Maxn+10]; \n    void Work(){\n        int cnt=0; int dep=0; int Q[Maxn+10];\n        while(cnt<n){\n            int cot=0;\n            FOR(i,1,n) if(!vis[i]&&du[i]==0){\n                vis[i]=1; ++cnt; Q[++cot]=i;\n            }\n            FOR(nn,1,cot){\n                int now=Q[nn]; \n                for(int i=head[now];i;i=line[i].pre){\n                    int E=line[i].en;\n                    if(vis[E]) continue;\n                    du[E]--;\n                }\n            }\n            dep++;\n        }\n        cout<<dep<<endl;\n    }\n}S;\n\nint better[Maxn], worse[Maxn+10];\n\nint main(){\n\n    n=read(), m=read();\n    FOR(C,1,m){\n        int c=read();\n        int cnt1=0, cnt2=0;\n        int now=read(); better[++cnt1]=now;\n        now++;\n        FOR(i,2,c){\n            int loc=read();\n            while(now<loc) worse[++cnt2]=now, now++;\n            better[++cnt1]=now; now++;\n        }\n        FOR(i,1,cnt1) FOR(j,1,cnt2)\n            S.add(better[i],worse[j]);\n    }\n    S.Work();\n\n    return 0;\n}\n\n```\n",
        "postTime": 1565278437,
        "uid": 29304,
        "name": "DYI_ZJZGC",
        "ccfLevel": 0,
        "title": "p1983[\u8f66\u7ad9\u5206\u7ea7]\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6ca1\u6709\u4eba\u7528dfs?\n\n\u9010\u7ad9\u641c\u7d22,\u627e\u5230\u77db\u76fe\u901a\u8fc7\u6539\u53d8\u5404\u7ad9\u7684\u503c\n\n\u6700\u540e\u627e\u5230\u6700\u5927\u503c,\u5f97\u5230\u7b54\u6848\n\n\u5176\u5b9e\u5c31\u662f\u66b4\u529b......\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int Size=1003;\nint level[Size],road[Size];\nbool d[Size][Size];        //d[i][j]:    \u7b2ci\u4e2a\u8f66\u7ad9\u6bd4\u7b2cj\u4e2a\u5c0f \nint n,m;\nvoid dfs(int p) {\n    for(int i=1; i<=n; i++) {\n        if(d[p][i]) {\n            if(!level[i])    dfs(i);\n            level[p]=max(level[i],level[p]);    //\u53d6i\u548cp\u7684\u6700\u5927\u503c \n        }\n    }\n    level[p]++;\n}\nint main() {\n    std::ios::sync_with_stdio(false);\n    int len,now,maxlevel=0;\n    cin>>n>>m;\n    for(register int i=1; i<=m; i++) {\n        memset(road,0,sizeof(road));\n        cin>>len;\n        for(register int j=1; j<=len; j++)\n            cin>>road[j];\n        now=2;\n        for(register int j=road[1]+1; j<road[len]; j++) {\n            if(j==road[now]) {\n                now++;\n                continue;\n            }\n            for(register int k=1; k<=len; k++) {\n                d[j][road[k]]=true;\n            }\n        }\n    }\n    for(register int i=1; i<=n; i++) {\n        if(!level[i]) {\n            dfs(i);\n        }\n    }\n    for(register int i=1; i<=n; i++)\n        if(level[i]>maxlevel)\n            maxlevel=level[i];\n    cout<<maxlevel;\n    return 0;\n}\n```",
        "postTime": 1507524700,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    },
    {
        "content": "\u4eca\u5929\u505a\u4e86\u8fd9\u9898,S\u8001\u5e08\u6559\u4e86\u6211\u4eec\u4e24\u79cd\u65b9\u6cd5:\u90bb\u63a5\u8868+dfs\u548c\u62d3\u6251\u6392\u5e8f\n\n\u9996\u5148\u6211\u4eec\u6765\u8c08\u4e00\u8c08\u90bb\u63a5\u8868+dfs:\n\n\u5047\u8bbe\u6709\u4e00\u8f86\u8f66\u7ecf\u8fc7\u4e09\u4e2a\u8f66\u7ad9ai,aj,ak(ai,aj,ak\u8f66\u7ad9\u7f16\u53f7\u9012\u589e)\n\n\u90a3\u4e48\u5728ai,aj\u4e4b\u95f4\u7684a(i+1),a(i+2),.......,a(j-1)\u7684\u7ea7\u522b\u4e00\u5b9a\u662f\u4e25\u683c\u5c0f\u4e8eai\u548caj\u7684\u7ea7\u522b\u7684\n\n\u540c\u7406,\u5728aj,ak\u4e4b\u95f4\u7684a(j+1),a(j+2),.......,a(k-1)\u7684\u7ea7\u522b\u4e5f\u4e00\u5b9a\u662f\u4e25\u683c\u5c0f\u4e8eaj,ai\u7684\u7ea7\u522b\u7684\n\n\u90a3\u4e48\u6211\u4e48\u53ef\u4ee5\u5f97\u51fa,\u5728ai,ak\u4e4b\u95f4\u7684a(i+1),a(i+2),......,a(j-1),a(j+1),........a(k-1)\u7684\u7ea7\u522b\u4e00\u5b9a\u662f\u4e25\u683c\u5c0f\u4e8eai,aj\u548cak\u7684\u7ea7\u522b\u7684\n\n\u5982\u679c\u4f60\u8fd8\u6ca1\u770b\u660e\u767d,\u90a3\u4e48\u6211\u4eec\u518d\u53cd\u8fc7\u6765\u770b,\n\nai,aj\u548cak\u7684\u7ea7\u522b\u4e00\u5b9a\u662f\u4e25\u683c\u5927\u4e8e\u5728ai,ak\u4e4b\u95f4\u7684a(i+1),a(i+2),......,a(j-1),a(j+1),........a(k-1)\u7684\u7ea7\u522b\u7684.\n\n\u770b\u5230\u8fd9\u4e2a,\u6211\u4eec\u662f\u4e0d\u662f\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u60f3\u5230\u5c06\u6574\u4e2a\u884c\u8fdb\u8def\u7ebf\u8f6c\u4e3a\u4e00\u4e2a\u6709\u5411\u56fe,\n\n\u5c06\u6240\u6709\u5c0f\u4e8eai,aj,ak\u7ea7\u522b\u7684\u8f66\u7ad9\u90fd\u548cai,aj,ak\u8fde\u63a5\u52a0\u4e00\u6761\u8fb9,\u518d\u5c06\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u8dd1\u4e00\u8fb9dfs\u5373\u53ef\n\n\u8fd9\u91cc\u8981\u6ce8\u610f\u4e86,\u5149\u662fdfs\u4f1a\u8d85\u65f6,\u6240\u4ee5\u5fc5\u987b\u8981\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u505a\n\n\u597d\u4e86,\u95f2\u8bdd\u5c11\u53d9,\u4e0aAC\u4ee3\u7801(\u6709\u6ce8\u91ca):\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<ctime>\nusing namespace std;\n```\n/\\*\nP1983 \u8f66\u7ad9\u5206\u7ea7 \u9898\u89e3\u90bb\u63a5\u8868+dfs\n\n\\*/\nconst int N=1000005,M=1005;//\u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u5c06\u6570\u7ec4\u5f00\u52302\\*N,\u5426\u5219\u4f1a\u7206,\u4e8c\u7ef4\u6570\u7ec4\u5f00\u5230N\u5373\u53ef\n\n```cpp\nlong long n,m,s,x[N],to,head[N],j,a,k,ans,dp[N],i;\nbool used[M][M];\nstruct node{\n    long long u,v,next,id;\n}edge[N];\nvoid push(long long u,long long v){\n    to++;\n    edge[to].next=head[u];\n    edge[to].u=u;\n    edge[to].v=v;\n    head[u]=to;\n    edge[v].id++;//\u7edf\u8ba1\u5165\u5ea6\n    used[u][v]=true;//\u56e0\u4e3a\u8fd9\u91cc\u4f1a\u51fa\u73b0\u91cd\u8fb9\u73b0\u8c61,\u6240\u4ee5\u6bcf\u6b21\u505a\u52a0\u8fb9\u64cd\u4f5c\u540e\u8981\u5c06\u8fd9\u6761\u8fb9\u6807\u8bb0\u4e00\u4e0b\n```\n}//\u90bb\u63a5\u8868,\u5c31\u4e0d\u9700\u6211\u591a\u505a\u53d9\u8ff0\u4e86\u5427\n```cpp\nlong long dfs(long long u){//\u8bb0\u5fc6\u5316\u641c\u7d22\n    long long l;\n    if(dp[u]!=-1){//\u8bb0\u641c\u7684\u6807\u5fd7\n        return dp[u];\n    }\n    dp[u]=1;\n    for(l=head[u];l!=-1;l=edge[l].next){//\u90bb\u63a5\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u987a\u5e8f\u679a\u4e3e\n        dp[u]=max(dp[u],dfs(edge[l].v)+1);//\u65b9\u7a0b:f(i)=max{f(j)+1};\n    }\n    return dp[u];\n}\nint main(){\n    memset(head,-1,sizeof(head));\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=1;i<=m;i++){\n        scanf(\"%lld\",&s);\n        for(j=1;j<=s;j++){\n            scanf(\"%lld\",&x[j]);\n        }\n        for(j=2;j<=s;j++){\n            for(k=x[j-1]+1;k<x[j];k++){//\u679a\u4e3e\u5728x[j-1]\u548cx[j]\u4e4b\u95f4\u7684\u6240\u6709\u5c0f\u4e8ex[j],x[j-1]\u7ea7\u522b\u7684\u8f66\u7ad9\n                for(a=1;a<=s;a++){\n                    if(!used[x[a]][k]){//\u5982\u679c\u4e0d\u662f\u91cd\u8fb9\n                        push(x[a],k);//\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8f66\u7ad9\u4e0e\u6240\u6709\u8f66\u7ad9\u52a0\u8fb9\n                    }\n                }\n            }\n        }\n    }\n    memset(dp,-1,sizeof(dp));//\u56e0\u4e3a\u8981\u53d6\u6700\u5927\u503c,\u6240\u4ee5\u521d\u59cb\u503c\u5168\u90e8\u4e3a-1\n    for(i=1;i<=n;i++){\n        if(edge[i].id==0){//\u5982\u679c\u5f53\u524d\u5165\u5ea6\u4e3a0\n            ans=max(ans,dfs(i));//\u6bcf\u6b21\u8dd1\u4e00\u8fb9dfs\u5c31\u884c\n        }\n    }\n    printf(\"%lld\\n\",ans);//\u8f93\u51faans\n    //system(\"pause\");\n    return 0;\n}\n```\n\u63a5\u7740,\u6211\u4eec\u518d\u6765\u770b\u62d3\u6251\u6392\u5e8f\u7684\u505a\u6cd5\n\u5176\u5b9e,\u62d3\u6251\u6392\u5e8f\u672c\u8d28\u4e0a\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\u7136\u540e\u8f93\u51fa,\u63a5\u7740\u4ece\u7f51\u4e2d\u5220\u9664\u6b64\u9876\u70b9\u53ca\u6240\u6709\u51fa\u8fb9,\u76f4\u5230\u4e0d\u5b58\u5728\u5165\u5ea6\u4e3a0\u7684\u70b9\u7ed3\u675f,\n\n\u90a3\u4e48,\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u7edf\u8ba1\u4e00\u4e0b\u5230\u5e95\u8fdb\u884c\u4e86\u51e0\u6b21\u62d3\u6251\u6392\u5e8f,\u4e5f\u5c31\u662f\u7ecf\u51e0\u6b21\u4ee5\u4e0a\u64cd\u4f5c\u540e\u4e0d\u5b58\u5728\u5165\u5ea6\u4e3a0\u7684\u70b9\u4e86.\n\n\u867d\u7136\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5\u590d\u6742\u5ea6\u9ad8,\u4e0d\u6613\u7406\u89e3,\u6548\u7387\u4e5f\u4e0d\u5bb9\u4e50\u89c2,\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u8981\u5199\u4e00\u5199\u6ef4.\n\n\u597d\u4e86,\u8d34\u4e0aAC\u4ee3\u7801(\u6709\u6ce8\u91ca):\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<ctime>\nusing namespace std;\n```\n/\\*\nP1983 \u8f66\u7ad9\u5206\u7ea7 \u9898\u89e3\u62d3\u6251\u6392\u5e8f\n\n\\*/\n```cpp\nconst int N=1000005,M=1005;\nlong long n,m,s,x[N],to,head[N],j,a,k,ans,i,top,vis[N],q[N];\nbool used[M][M];\nstruct node{\n    long long u,v,next,id;\n}edge[N];\nvoid push(long long u,long long v){\n    to++;\n    edge[to].next=head[u];\n    edge[to].u=u;\n    edge[to].v=v;\n    head[u]=to;\n    edge[v].id++;//\u7edf\u8ba1\u5165\u5ea6\n    used[u][v]=true;//\u56e0\u4e3a\u8fd9\u91cc\u4f1a\u51fa\u73b0\u91cd\u8fb9\u73b0\u8c61,\u6240\u4ee5\u6bcf\u6b21\u505a\u52a0\u8fb9\u64cd\u4f5c\u540e\u8981\u5c06\u8fd9\u6761\u8fb9\u6807\u8bb0\u4e00\u4e0b\n```\n}//\u90bb\u63a5\u8868,\u5c31\u4e0d\u9700\u6211\u591a\u505a\u53d9\u8ff0\u4e86\u5427\n```cpp\nint main(){\n    freopen(\"level.in\",\"r\",stdin);\n    freopen(\"level.out\",\"w\",stdout);\n    memset(head,-1,sizeof(head));\n    scanf(\"%lld%lld\",&n,&m);\n    for(i=1;i<=m;i++){\n        scanf(\"%lld\",&s);\n        for(j=1;j<=s;j++){\n            scanf(\"%lld\",&x[j]);\n        }\n        for(j=2;j<=s;j++){\n            for(k=x[j-1]+1;k<x[j];k++){//\u679a\u4e3e\u5728x[j-1]\u548cx[j]\u4e4b\u95f4\u7684\u6240\u6709\u5c0f\u4e8ex[j],x[j-1]\u7ea7\u522b\u7684\u8f66\u7ad9\n                for(a=1;a<=s;a++){\n                    if(!used[x[a]][k]){//\u5982\u679c\u4e0d\u662f\u91cd\u8fb9\n                        push(x[a],k);//\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8f66\u7ad9\u4e0e\u6240\u6709\u8f66\u7ad9\u52a0\u8fb9\n                    }\n                }\n            }\n        }\n    }\n```\n/\\*\n\u4e4b\u524d\u90e8\u5206\u4e0d\u53d8,\u5224\u91cd\u8fb9,\u52a0\u8fb9,\u8bb0\u5f55\u5165\u5ea6,\u76f4\u63a5ctrl c+ctrl v\n\n\\*/\n```cpp\n    while(1){//\u62d3\u6251\u6392\u5e8f\n        top=0;\n        for(i=1;i<=n;i++){\n            if(!vis[i]&&!edge[i].id){//\u5982\u679c\u6b64\u70b9\u5165\u5ea6\u4e3a0\u4e14\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n                q[++top]=i;//q\u662f\u4e00\u4e2a\u6808\u6570\u7ec4,\u8bb0\u5f55\u6b64\u6b21\u627e\u5230\u7684\u5165\u5ea6\u4e3a0\u7684\u70b9\n                vis[i]=1;//\u6807\u8bb0\u4e3a\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\n            }\n        }\n        if(!top){//\u5982\u679c\u6808\u662f\u7a7a\u7684,\u5373\u6ca1\u6709\u627e\u5230\u5165\u5ea6\u4e3a0\u7684\u70b9,\u90a3\u4e48\u8bf4\u660e\u62d3\u6251\u6392\u5e8f\u5df2\u7ecf\u8fdb\u884c\u5b8c\u6bd5,\u9000\u51fa\u5faa\u73af\n            break;\n        }\n        for(k=1;k<=top;k++){//\u679a\u4e3e\u6808\u91cc\u7684\u6240\u6709\u5143\u7d20\n            for(i=1;i<=n;i++){\n                if(used[q[k]][i]){//\u5982\u679c\u6709\u8fd9\u6761\u8fb9\n                    used[q[k]][i]=0;//\u628a\u8fd9\u6761\u8fb9\u5220\u9664\n                    edge[i].id--;//\u5165\u5ea6--\n                }\n            }\n        }\n        ans++;//\u64cd\u4f5c\u6b21\u6570++\n    }\n    printf(\"%lld\\n\",ans);//\u8f93\u51faans\n    //system(\"pause\");\n    return 0;\n}\n\u597d\u4e86,\u662f\u4e0d\u662f\u5f88\u5bb9\u6613\u7406\u89e3\u5462\uff1f\n```",
        "postTime": 1508040999,
        "uid": 31021,
        "name": "Limerick",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1983 \u3010\u8f66\u7ad9\u5206\u7ea7 \u3011"
    }
]