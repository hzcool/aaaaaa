[
    {
        "content": "# \u601d\u8def\n\n\u5982\u679c\u6ca1\u6709\u8fb9\u6743\u76f8\u540c\u7684\u8fb9\uff0c\u90a3\u4e48\u5176\u5b9e\u65f6\u4e0d\u5b58\u5728\u591a\u79cd\u6700\u5c0f\u751f\u6210\u6811\u7684\u65b9\u6848\u7684\u3002\n\n\u9898\u76ee\u4e2d\u540c\u4e00\u8fb9\u6743\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7\u4e09\u4e2a\n\n\u6309\u7167`Kruskal`\u7684\u5efa\u6811\u6d41\u7a0b\u8fdb\u884c\u6a21\u62df\u3002\n\n\u8fb9\u6743\u6392\u5b8c\u5e8f\u540e\uff0c\u8fb9\u6743\u76f8\u540c\u7684\u4f1a\u805a\u5230\u4e00\u8d77\uff0c\u7136\u540e\u5728\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7684\u65f6\u5019\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\u3002\n\n# \u6d41\u7a0b\n\u9996\u5148\u627e\u5230\u8fb9\u6743\u76f8\u540c\u5230\u7684\u51e0\u6761\u8fb9\u3002\n\n\u8fd9\u662f\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e9b\u8fb9\u4e2d\u9009\u51fa\u6709\u7528\u8fb9\u3002\n\n\u6240\u8c13\u6709\u7528\u8fb9\u5c31\u662f\u52a0\u5165\u5176\u4e2d\u4e00\u6761\u8fb9\uff0c\u4e0d\u4f1a\u4ea7\u751f\u73af\u3002\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u52a0\u5165\u7684\u8fb9\u662f\u4e0d\u80fd\u518d\u53cd\u6094\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5f53\u524d\u7b49\u5f85\u52a0\u5165\u7684\u8fb9\u4e0e\u4e4b\u524d\u7684\u8fb9\u5b58\u5728\u77db\u76fe\u7684\u8bdd\uff0c\u5f53\u524d\u8fb9\u4e00\u5b9a\u662f\u65e0\u7528\u7684\u3002\n\u5982\u4e0b\u56fe\uff0c\u4e0b\u56fe\u7684\u6a59\u8272\u8fb9\u5c31\u662f\u65e0\u7528\u8fb9\uff1a\n ![1](https://s2.ax1x.com/2019/08/04/eyiZRO.png)\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u54ea\u4e9b\u60c5\u51b5\u4f1a\u4f7f\u6700\u5c0f\u751f\u6210\u6811\u65b9\u6848\u589e\u52a0\uff1a\n - \u5982\u8fc7\u5f53\u524d\u6743\u503c\u6709\u4e24\u6761\u8fb9\u76f8\u540c\uff1a\n \u5c31\u6709\u8fd9\u4e24\u79cd\u60c5\u51b5\uff1a\n   - ![2](https://s2.ax1x.com/2019/08/04/eyAsYt.png)\n   - ![2](https://s2.ax1x.com/2019/08/04/eyATf0.png)\n \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u8fd9\u4e24\u6761\u8fb9\u53ea\u80fd\u540c\u65f6\u52a0\u5165\u5176\u4e2d\u4efb\u610f\u4e00\u6761\uff0c\u8fd9\u6837\u5c31\u6709\u4e24\u79cd\u5efa\u6811\u65b9\u6848\u3002\n \u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u8fd9\u4e24\u6761\u8fb9\u6ca1\u6709\u9009\u62e9\u4f59\u5730\uff0c\u5fc5\u987b\u90fd\u52a0\u5165\u3002\n\n - \u5982\u8fc7\u5f53\u524d\u6743\u503c\u6709\u4e09\u6761\u8fb9\u76f8\u540c\uff1a\n \u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\u80fd\u4ea7\u751f\u591a\u79cd\u5efa\u6811\u65b9\u6848\uff1a\n   - ![eyALXF.png](https://s2.ax1x.com/2019/08/04/eyALXF.png)\n   -  ![eyAq6U.png](https://s2.ax1x.com/2019/08/04/eyAq6U.png)\n   - ![eyAblT.png](https://s2.ax1x.com/2019/08/04/eyAblT.png)\n    \u8fd9\u4e09\u79cd\u60c5\u51b5\u5206\u522b\u4ea7\u751f$3$\uff08\u9009\u5176\u4e2d\u4e00\u6761\u4e0d\u52a0\u5165\uff09\uff0c$2$\uff08\u9009\u91cd\u590d\u7684\u4e24\u6761\u4e2d\u7684\u4e00\u6761\uff09\uff0c$3$\uff08\u9009\u4e09\u6761\u4e2d\u7684\u4efb\u610f\u4e00\u6761\uff09\u79cd\u751f\u6210\u6811\u65b9\u6848\u3002\n   \n\n# \u4ee3\u7801\n\n\u4f7f\u7528`set`\u5e2e\u52a9\u533a\u5206\u4e09\u6761\u8fb9\u6743\u76f8\u540c\u65f6\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u548c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\n\n```cpp\n/*!\n * FileName: luogu-3037.cpp\n * This Problem is on luogu. The ID of the problem is 3037. \n * Copyright(c) 2019 Shu_Yu_Mo\n * MIT Licensed\n * Luogu: https://www.luogu.org/space/show?uid=44615\n * Github: https://github.com/oldsuold/\n * Gitee: https://gitee.com/Shu_Yu_Mo/\n * These words were created by an amazing tool on 2019-08-03 22:47:58 written by Shu_Yu_Mo.\n */\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<set>\n#include<algorithm>\n#define inf 0x7fffffff\nusing namespace std;\nconst int _M = 1e5 + 100;\nconst int _N = 4e4 + 100;\nconst int MOD = 1000000007;\ninline int read()\n{\n    char c = getchar(); int sign = 1; int x = 0;\n    while(c > '9' || c < '0') { if(c=='-')sign = -1; c = getchar(); } \n    while(c <= '9' && c >= '0') { x *= 10; x += c - '0'; c = getchar(); }\n    return x * sign;\n}\nstruct edges{\n\tint u;\n\tint v;\n\tint w;\n\tbool operator < (const edges & A) const {\n\t\treturn w < A.w;\n\t}\n}E[_M];\nint n, m;\n//Kruskal \u6240\u7528\u7684\u5e76\u67e5\u96c6   Start\nint f[_N];\nint find(int x){ return f[x] == x ? x : f[x] = find(f[x]); }\nvoid initForSet()\n{\n\tfor(register int i = 1;i <= n;i++)\n\t\tf[i] = i;\n}\nvoid marge(int x, int y)\n{\n\tx = find(x);\n\ty = find(y);\n\tif(x == y) return;\n\tf[x] = y;\n}\nbool ask(int x, int y)\n{\n\treturn find(x) == find(y);\n}\n//Kruskal \u6240\u7528\u7684\u5e76\u67e5\u96c6   End\nint nxtIt(int now)//\u5f80\u4e0b\u627e\u6700\u540e\u4e00\u4e2a\u8fb9\u6743\u76f8\u540c\u7684\u4f4d\u7f6e\n{\n\tfor(register int i = now;i <= m;i++)\n\t\tif(E[now].w != E[i].w)\n\t\t\treturn i - 1;\n\treturn m;\n}\nset <pair<int , int >  >  S;//\nint main()\n{\n\tn = read(), m = read();\n\tfor(register int i = 1;i <= m;i++)\n\t{\n\t\tE[i].u = read();\n\t\tE[i].v = read();\n\t\tE[i].w = read(); \n\t}\n\tinitForSet();\n\tsort(E + 1, E + 1 + m);\n\tint ans1 = 0;\n\tint ans2 = 1;\n\tint nxt;\n\tfor(register int i = 1;i <= m;)\n\t{\n\t\tS.clear();\n\t\tnxt = nxtIt(i);\n\t\tint totEdge = 0;\n\t\tfor(register int j = i;j <= nxt;j++)\n\t\t\tif(!ask(E[j].u, E[j].v))\n\t\t\t{\n\t\t\t\ttotEdge ++;\n\t\t\t\tint k1 = min(find(E[j].u), find(E[j].v));\n\t\t\t\tint k2 = max(find(E[j].u), find(E[j].v));\n\t\t\t\tS.insert(make_pair(k1, k2));\n\t\t\t}\n\t\tint totAdd = 0;\n\t\tfor(register int j = i;j <= nxt;j++)\n\t\t{\n\t\t\tif(!ask(E[j].u, E[j].v))\n\t\t\t{\n\t\t\t\tmarge(E[j].u, E[j].v);\n\t\t\t\ttotAdd ++;\n\t\t\t\tans1 = (ans1 + E[j].w) % MOD;\n\t\t\t}\n\t\t}\n\t\tif(totAdd == 1)\n\t\t\tans2 = ans2 * 1LL * totEdge % MOD;//\u5206\u522b\u662f\u4e24\u6761\u8fb9\u6743\u76f8\u540c\u65f6\u7684\u7b2c\u4e00\u79cd\u60c5\u51b5    \u548c    \u4e09\u6761\u8fb9\u6743\u76f8\u540c\u65f6\u7684\u7b2c\u4e09\u79cd\u60c5\u51b5\u3002\n\t\tif(totAdd == 2 && totEdge == 3)\n\t\t{\n\t\t\tif(S.size() == 3) ans2 = ans2 * 3LL % MOD;//\u4e09\u6761\u8fb9\u6743\u76f8\u540c\u65f6\u7684\u7b2c\u4e00\u79cd\u60c5\u51b5\n\t\t\tif(S.size() == 2) ans2 = ans2 * 2LL % MOD; //\u4e09\u6761\u8fb9\u6743\u76f8\u540c\u65f6\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5\n\t\t}\n\t\ti = nxt + 1;\n\t}\n\tprintf(\"%d %d\\n\", ans1 % MOD, ans2 % MOD);\n    return 0;\n}\n```\n",
        "postTime": 1564882658,
        "uid": 44615,
        "name": "ShuYuMo",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3037 \u3010[USACO11DEC]\u7b80\u5316\u7684\u519c\u573aSimplifying the Farm\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5e76\u4e0d\u50cf\u96be\u5ea6\u5206\u7c7b\u6807\u7684\u90a3\u4e48\u96be\u3002\n\u9996\u5148\uff0c\u9898\u610f\u5927\u5bb6\u90fd\u6e05\u695a\uff1a\u5c31\u662f\u7ed9\u4e00\u4e2a\u56fe\uff0c\u6c42\u4ed6\u7684\u6700\u5c0f\u751f\u6210\u6811\u548c\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e2a\u6570\u3002\n\n\u6309\u7167\u6700\u5c0f\u751f\u6210\u6811\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u5148\u4ee5\u8fb9\u6743\u4e3a\u4f18\u5148\u7ea7\u6392\u9012\u589e\u5e8f\u3002\n\u63a5\u7740\u6211\u4eec\u7edf\u8ba1\u8fb9\u76f8\u540c\u7684\u4e2a\u6570\u548c\u8981\u53d6\u7684\u4e2a\u6570\u3002\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u4e86\u6700\u591a\u6709\u4e09\u6761\u6743\u503c\u76f8\u540c\u7684\u8fb9\u6240\u4ee5\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\uff0c\u6c42\u51fa\u53d6\u6cd5\u3002\u6700\u540e\u4e58\u6cd5\u539f\u7406\u5f97\u51fa\u6700\u7ec8\u7b54\u6848\u3002\n\n\u5177\u4f53\u7ec6\u8282\u770b\u7a0b\u5e8f\u91cc\u9762\u3002\n\n```\n\n#include<bits/stdc++.h>\n\nusing namespace std;\nint n,m;\nint fa[40001];\nconst int mod=1e9+7;\n\nstruct Tree{\n\tint u;int v;int val;\n}tre[1000005];\n\nint Find(int x){\n\tif(fa[x]==x)return x;\n\telse return fa[x]=Find(fa[x]);\n}//\u627e\u6839\u8282\u70b9\n\nbool cmp(Tree x,Tree y){\n\treturn x.val<y.val;\n}\n\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>tre[i].u>>tre[i].v>>tre[i].val;\n\t}\n    //\u8bfb\u5165\u5e76\u521d\u59cb\u5316\n\tsort(tre+1,tre+m+1,cmp);\n    \n\tlong long sum1=0,sum2=1;\n    //sum1\u4ee3\u8868\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u957f\u5ea6\n    //sum2\u4ee3\u8868\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e2a\u6570\n    \n\tfor(int i=1;i<=m;){\n\t\tint ss=0;//\u8fb9\u6743\u4e00\u6837\u7684\u4e2a\u6570\n\t\tset<pair<int,int> >s;\n        //\u4e00\u4e2a\u5b58\u50a8\u4e0d\u7b49\u4ef7\u8fb9\u96c6\u5408\n\t\tint j;\n\t\tfor( j=i;j<=m&&tre[i].val==tre[j].val;j++){\n\t\t\tint x=tre[j].u,y=tre[j].v;\n\t\t\tx=Find(x);y=Find(y);\n\t\t\tif(x>y)swap(x,y);//\u683c\u5f0f\n\t\t\tif(x!=y){//\u53ef\u4ee5\u52a0\u5165\u751f\u6210\u6811\n\t\t\t\tss++;\n\t\t\t\ts.insert(make_pair(x,y));\n\t\t\t}\n\t\t}\n\t\tint num=0;//\u9700\u8981\u52a0\u5165\u751f\u6210\u6811\u7684\u4e2a\u6570\n\t\tfor(;i<j;i++){\n\t\t\tint x=Find(tre[i].u);\n\t\t\tint y=Find(tre[i].v);\n\t\t\tif(x!=y){\n\t\t\t\tfa[y]=x;\n\t\t\t\tnum++;\n\t\t\t}\n\t\t}\n\t\tsum1+=(long long)tre[i-1].val*num;\n        //\u56e0\u4e3ai\u5df2\u7ecftre[i].val\u5df2\u7ecf\u4e0d\u7b49\u4e8e\u539f\u5148\u7684\u6743\u503c\n\t\tif(num==1){//\u53ea\u9009\u4e00\u4e2a\n\t\t\tif(ss==2)sum2=sum2*2%mod;\n\t\t\tif(ss==3)sum2=sum2*3%mod;\n\t\t}\n\t\tif(num==2){\n\t\t\tif(ss==3&&s.size()==3)sum2=sum2*3%mod;\n            //\u4e09\u6761\u8fb9\u53ef\u4ee5\u9009\u4e14\u4e09\u6761\u8fb9\u4e0d\u7b49\u4ef7\n\t\t\tif(ss==3&&s.size()==2)sum2=sum2*2%mod;\n            //\u4e09\u6761\u8fb9\u53ef\u4ee5\u9009\u4f46\u4e24\u6761\u8fb9\u7b49\u4ef7\n\t\t}\n\t}\n\tcout<<sum1<<\" \"<<sum2<<endl;\n} \n```\n\nPS\uff1a\u63d0\u9192\u4e00\u53e5\u8981\u5f00long long",
        "postTime": 1533299669,
        "uid": 25047,
        "name": "liyanzhi1106",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3037 \u3010[USACO11DEC]\u7b80\u5316\u7684\u519c\u573aSimplifying the Farm\u3011"
    },
    {
        "content": "# \u9898\u76ee\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3037)\n\n# \u5206\u6790\n\n### \u9898\u610f\n\u76f8\u4fe1\u7ffb\u8bd1\u8bf4\u7684\u5df2\u7ecf\u633a\u660e\u767d\u7684\u4e86\uff0c\u5c31\u662f\u6c42\u4e00\u4e2a\u6709\u76f8\u540c\u8fb9\u6743\u7684\u56fe\u4e0a\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u6574\u4f53\u7684\u6743\u503c\uff0c\u5e76\u4e14\u6c42\u51fa\u65b9\u6848\u6570\u3002\n\n### \u6b63\u9898\n\u6700\u5c0f\u751f\u6210\u6811\u7684\u6574\u4f53\u7684\u6743\u503c\u5f88\u597d\u6c42\u5427\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a$Kurscal$\u7684\u677f\u5b50\uff0c\u5148\u5347\u5e8f\u6392\u5e8f\uff0c\u6309\u987a\u5e8f\u7528\u5e76\u67e5\u96c6\u6c42\uff08\u4e0d\u4f1a$Kruscal$\u7684\u5e94\u8be5\u4e0d\u4f1a\u6765\u505a\u8fd9\u4e2a\u9898\u5427\u2026\u2026\u8fd9\u91cc\u4e0d\u591a\u8d58\u8ff0\uff09\u8fd9\u6837\u7b2c\u4e00\u95ee\u5c31\u6c42\u51fa\u6765\u4e86\u3002\n\n\u90a3\u4e48\u5173\u952e\u7684\u7b2c\u4e8c\u95ee\u6765\u4e86\uff1a\n\u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u4e0b\uff0c\u5047\u5982\u6709\u76f8\u540c\u7684\u8fb9\u6743\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f5c\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9\u6570\u91cf\u52a0\u4e00\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u4f9d\u6b21\u904d\u5386\u76f8\u540c\u8fb9\u6743\u7684\u8fb9\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u6700\u591a\u6709\u4e09\u6761\u957f\u5ea6\u76f8\u540c\u7684\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u786e\u5b9a\u4ed6\u4eec\u662f\u4e0d\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u53bb\u91cd\u64cd\u4f5c\uff0c\u800c\u4e00\u6837\u7684\u6761\u4ef6\u5219\u662f\u8fde\u63a5\u7684\u70b9\u76f8\u540c\uff0c\u6240\u4ee5\u8981\u7528\u5230$pair$\u548c$set$\uff0c$pair$\u8fdb\u884c\u8bb0\u5f55\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\uff0c\u800c$set$\u5b58\u50a8\uff0c\u7531\u4e8e\u5b83\u672c\u8eab\u5c31\u5e26\u6709\u53bb\u91cd\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u6700\u540e\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u4ed6\u7684\u4e0d\u540c\u7684\u4e2a\u6570\u6765\u8fdb\u884c\u5206\u60c5\u51b5\u8003\u8651\u5c31\u884c\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u5730\u65b9\u5c31\u662f\u8981\u662f\u8fd9\u4e2a\u8fb9\u6743\u53ea\u52a0\u5165\u751f\u6210\u6811\u4e00\u4e2a\u8fb9\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8ba9\u60c5\u51b5\u6570\u4e58\u4ee5\u4e0a\u8fb9\u8bb0\u5f55\u7684\u76f8\u540c\u8fb9\u6743\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f$cnt$\u3002\n\n\u5176\u6b21\u5c31\u662f\u8fd9\u4e2a\u8fb9\u6743\u52a0\u5165\u751f\u6210\u6811\u4e24\u4e2a\u8fb9\uff0c\u56e0\u4e3a\u52a0\u5165\u4e09\u4e2a\u8fb9\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u8003\u8651\u4e24\u4e2a\u8fb9\u7684\u5c31\u884c\u3002\u5982\u679c\u4e0a\u8fb9\u5f53\u524d\u6743\u503c\u6709$3$\u4e2a\u8fb9\uff0c\u5e76\u4e14\u6ca1\u6709\u91cd\u590d\u7684\uff08\u5229\u7528$set$\u7684\u53bb\u91cd\u548c$size$\u51fd\u6570\uff09\u90a3\u4e48\u60c5\u51b5\u6570\u5c31\u4e58\u4ee5$3$\uff0c\u5982\u679c\u6709\u4e09\u4e2a\u8fb9\u4f46\u662f\u6709\u4e24\u4e2a\u662f\u91cd\u590d\u7684\uff0c\u90a3\u4e48\u5c31\u4e58\u4ee5$2$\uff0c\u5176\u4ed6\u7684\u60c5\u51b5\u90fd\u662f\u65b9\u6848\u4e0d\u53d8\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7b54\u6848\u3002\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn = 1e6+10;\nconst int mod = 1e9+7;\nint n,m;\nstruct Node{\n\tint x,y,val;\n}e[maxn<<1];\nint fa[maxn];\nint ans,sum=1;\nint cnt[maxn];\nbool cmp(Node a,Node b){\n\treturn a.val<b.val;\n}//\u6309\u8fb9\u6743\u6392\u5e8f\nint Find(int x){\n\treturn x == fa[x] ? x : fa[x] = Find(fa[x]);\n}//\u5e76\u67e5\u96c6\u67e5\u627e\nvoid kruscal(){\n\tfor(int i=1;i<=n;++i){//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\t\tfa[i] = i;\n\t}\n\tsort(e+1,e+m+1,cmp);//\u5347\u5e8f\u6392\u5e8f\n\tfor(int i=1;i<=m;){\n\t\tint cnt = 0;//\u8bb0\u5f55\u6bcf\u4e2a\u8fb9\u6743\u7684\u4e2a\u6570\n\t\tset<pair<int,int> >s;//set\u7528\u4e8e\u5b58\u50a8\u5e76\u53bb\u91cd\n\t\tint j;\n\t\tfor(j = i;j<=m && e[i].val == e[j].val;++j){//\u679a\u4e3e\u76f8\u540c\u7684\u8fb9\uff0c\u66f4\u65b0j\n\t\t\tint x = Find(e[j].x);\n\t\t\tint y = Find(e[j].y);\n\t\t\tif(x > y)swap(x,y);\n\t\t\tif(x != y){//\u8bb0\u5f55\n\t\t\t\tcnt ++;\n\t\t\t\ts.insert(make_pair(x,y));\n\t\t\t}\n\t\t}\n\t\tint num = 0;\n\t\tfor(;i<j;++i){//\u7ee7\u7eed\u679a\u4e3e\uff0c\u66f4\u65b0i\n\t\t\tint x = Find(e[i].x);\n\t\t\tint y = Find(e[i].y);\n\t\t\tif(x != y){//\u52a0\u8fb9\n\t\t\t\tfa[y] = x;\n\t\t\t\tnum++;\n\t\t\t}\n\t\t}\n\t\tans += e[i-1].val*num;\n\t\tif(num == 1){//\u5982\u679c\u5c31\u52a0\u5165\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u76f4\u63a5\u4e58\u4ee5\u76f8\u540c\u8fb9\u6743\u7684\u6570\u91cf\n\t\t\tsum = sum * cnt % mod\n\t\t}\n\t\tif(num == 2){//\u52a0\u5165\u4e24\u6761\u8fb9\n\t\t\tif(cnt == 3 && s.size() == 2){//\u6709\u4e24\u4e2a\u7b49\u4ef7\u7684\u8fb9\n\t\t\t\tsum = 2*sum%mod;\n\t\t\t}\n\t\t\tif(cnt == 3 && s.size() == 3){//\u6ca1\u6709\u7b49\u4ef7\u7684\u8fb9\n\t\t\t\tsum = 3*sum%mod;\n\t\t\t}\n\t\t}//\u5176\u4ed6\u60c5\u51b5\u7684\u8bdd\u65b9\u6848\u6570\u90fd\u4e0d\u53d8\n\t}\n}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=m;++i){//\u5b58\u8fb9\n\t\tscanf(\"%lld%lld%lld\",&e[i].x,&e[i].y,&e[i].val);\n\t}\n\tkruscal();//\u6700\u5c0f\u751f\u6210\u6811\n\tprintf(\"%lld %lld\\n\",ans,sum);\n}\n\n```",
        "postTime": 1595846583,
        "uid": 340084,
        "name": "Vocanda",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3037 \u3010[USACO11DEC]Simplifying the Farm G\u3011"
    },
    {
        "content": "# [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://blog.csdn.net/Zbr162/article/details/93785745)\n\n<font size=\"6\"> [$$[USACO11DEC]\u7b80\u5316\u7684\u519c\u573aSimplifying\\ the\\ Farm$$](https://www.luogu.org/problemnew/show/P3037) </font>\n___\n<font size=\"6\" color=blue> $\\mathcal{Description}$ </font>\n\u519c\u592b\u7ea6\u7ff0\u5728\u4e00\u6240\u591c\u6821\u5b66\u4e60\u7b97\u6cd5\u8bfe\u7a0b\uff0c\u4ed6\u521a\u521a\u5b66\u4f1a\u4e86\u6700\u5c0f\u751f\u6210\u6811\u3002\u73b0\u5728\u7ea6\u7ff0\u610f\u8bc6\u5230\u4ed6\u7684\u519c\u573a\u8bbe\u8ba1\u5f97\u4e0d\u591f\u9ad8\u6548\uff0c\u4ed6\u60f3\u7b80\u5316\u519c\u573a\u7684\u5e03\u5c40\u3002\n\n\u7ea6\u7ff0\u7684\u519c\u573a\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u56fe\uff0c\u519c\u7530\u4ee3\u8868\u56fe\u4e2d\u9876\u70b9\uff0c\u7530\u95f4\u5c0f\u8def\u4ee3\u8868\u56fe\u4e2d\u7684\u8fb9\uff0c\u6bcf\u6761\u8fb9\u6709\u4e00\u5b9a\u7684\u957f\u5ea6\u3002\u7ea6\u7ff0\u6ce8\u610f\u5230\uff0c\u519c\u573a\u4e2d\u6700\u591a\u6709\u4e09\u6761\u5c0f\u8def\u6709\u7740\u76f8\u540c\u7684\u957f\u5ea6\u3002\u7ea6\u7ff0\u60f3\u5220\u9664\u4e00\u4e9b\u5c0f\u8def\u4f7f\u5f97\u519c\u573a\u6210\u4e3a\u4e00\u68f5\u6811\uff0c\u4f7f\u5f97\u4e24\u5757\u519c\u7530\u95f4\u53ea\u6709\u4e00\u6761\u8def\u5f84\u3002\u4f46\u662f\u7ea6\u7ff0\u60f3\u628a\u519c\u573a\u8bbe\u8ba1\u6210\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4e5f\u5c31\u662f\u519c\u573a\u9053\u8def\u7684\u603b\u957f\u5ea6\u6700\u77ed\u3002\n\n\u8bf7\u5e2e\u52a9\u7ea6\u7ff0\u627e\u51fa\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u957f\u5ea6\uff0c\u540c\u65f6\u8bf7\u8ba1\u7b97\u51fa\u603b\u5171\u6709\u591a\u5c11\u79cd\u6700\u5c0f\u751f\u6210\u6811\uff1f\n___\n<font size=\"6\" coloen_arrow> $\\mathcal{Solution}$ </font><br/>\n\n<font color=white size=\"5\"> $\u6700\u521d\u60f3\u6cd5$ </font>\n\n___\n<font color=red size=\"5\"> $\u6b63\u89e3\u90e8\u5206$ </font>\n\u6309\u7167 $Kruskal$ \u6784\u9020\u6700\u5c0f\u751f\u6210\u6811, \n\u7531\u4e8e\u9898\u76ee\u4e2d\u7ed9\u51fa $\"\u6700\u591a\u6709\u4e09\u6761\u5c0f\u8def\u6709\u7740\u76f8\u540c\u7684\u957f\u5ea6\"$ \u7684\u6761\u4ef6,\n\u6240\u4ee5\u9047\u5230 **\u4e0d\u540c** \u7684\u8fb9\u6709 **\u76f8\u540c** \u7684\u8fb9\u6743\u65f6, \u5217\u4e3e\u51fa\u6240\u6709\u52a0\u8fb9\u65f6\u7684\u60c5\u51b5\u8fdb\u884c\u5206\u6790 $\u2193$\n\u7b2c\u4e00\u5f20\u56fe\u4e3a $2$ \u6761\u8fb9\u8fb9\u6743\u76f8\u540c\u7684\u60c5\u51b5, \u7b2c\u4e8c\u5f20\u56fe\u4e3a $3$ \u6761.\n\n![](https://img-blog.csdnimg.cn/20190627213957500.PNG)\n\n$\u4e0a\u56fe\u4e2d \\ I.\u60c5\u51b5\u67092\u79cd\u9009\u62e9,\u5176\u4f59\u7686\u65e0\u9009\u62e9\u4f59\u5730.$\n\n![](https://img-blog.csdnimg.cn/20190627214005161.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1picjE2Mg==,size_16,color_FFFFFF,t_70)\n\n$\u4e0a\u56fe\u4e2d\u53ea\u6709III, VI , IV, VII, \u4e09\u4e2a\u60c5\u51b5\u6709\u9009\u62e9\u4f59\u5730,  \\\\\nIII\u6709\\ 2\\ \u79cd\u9009\u62e9, \\\\\nVI\u6709\\ 3\\ \u4e2d\u9009\u62e9, \\\\\nIV\u67093\u79cd\u9009\u62e9,\\\\\nVII\u67092\u79cd\u9009\u62e9.$\n\n___\n<font color=red size=\"5\"> $\u5b9e\u73b0\u90e8\u5206$ </font>\n\u5728 $Kruskal$ \u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\u52a0\u65b0\u7684\u8fb9\u65f6,\n\u4f7f\u7528 $set$ \u8f85\u52a9\u5224\u65ad ~~\u78b3\u78b3\u53cc\u952e,\u78b3\u78b3\u4e09\u952e~~ **\u7b49\u4ef7\u7684\u8fb9** \u548c **\u73af**,\n\n>\u7528 $set$ \u7ef4\u62a4\u53c2\u8003\u4e86\u4e0a\u65b9\u7684\u9898\u89e3.\n___\n\n<font size=\"6\" color=Black> $\\mathcal{Code}$ </font><br/>\n\n```cpp\n#include<bits/stdc++.h>\n#define reg register\n\nconst int maxn = 100005;\nconst int mod = 1e9 + 7;\n\nint N;\nint M;\nint F[maxn];\n\nint Find(int x){ return F[x]==x?x:F[x]=Find(F[x]); }\n\nstruct Edge{ int u, v, w; } E[maxn];\nbool cmp(Edge a, Edge b){ return a.w < b.w; }\n\nint main(){\n        freopen(\"a.in\", \"r\", stdin);\n        freopen(\"a.out\", \"w\", stdout);\n        scanf(\"%d%d\", &N, &M);\n        for(reg int i = 1; i <= M; i ++) scanf(\"%d%d%d\", &E[i].u, &E[i].v, &E[i].w);\n        for(reg int i = 1; i <= N; i ++) F[i] = i;\n        std::sort(E+1, E+M+1, cmp);\n        int Ans_1 = 0, Ans_2 = 1;\n        for(reg int i = 1; i <= M; i ++){\n                typedef std::pair <int, int> pr;\n                std::set <pr> S;\n                int t, x = 0, y = 0;\n                for(t = i; t <= M; t ++){\n                        if(E[t].w != E[i].w) break ;\n                        int a = E[t].u, b = E[t].v;\n                        S.insert(pr(std::min(a, b), std::max(a, b)));\n                }\n                x = t - i; t --;\n                for(; i <= t; i ++){\n                        int a = Find(E[i].u), b = Find(E[i].v);\n                        if(a != b) F[b] = a, y ++, Ans_1 = (1ll*Ans_1 + E[i].w) % mod;\n                }\n                i --;\n                if(x == 2 && y == 1) Ans_2 = 2ll*Ans_2 % mod;\n                else if(x == 3){\n                        if(y == 1) Ans_2 = 3ll*Ans_2 % mod;\n                        else if(y == 2) Ans_2 = 2ll*Ans_2 % mod;\n                }\n        }\n        printf(\"%d %d\\n\", Ans_1, Ans_2);\n        return 0;\n}\n\n```\n",
        "postTime": 1561644381,
        "uid": 122680,
        "name": "__233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3037 \u3010[USACO11DEC]\u7b80\u5316\u7684\u519c\u573aSimplifying the Farm\u3011"
    }
]