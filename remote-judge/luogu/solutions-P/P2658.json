[
    {
        "content": "\u4e00\u4e2a\u597d\u73a9\u7684bfs\uff0c\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u6211win10\u5361\u4e86\u4e24\u4e2a\u5c0f\u65f6...\n```cpp\n// \u6b64\u4ee3\u7801\uff0c\u4e24\u6b21WA\uff080\u5206\uff09\uff0c\u4e24\u6b21AC\uff08\u540e\u4e00\u6b21\u4e3a\u4f18\u5316\uff09 \n# include <bits/stdc++.h> // \u5934\u6587\u4ef6 \nusing namespace std; // \u540d\u5b57\u7a7a\u95f4 \nconst int N=505; bool c[N][N], sign=1, vis[N][N];\n// \u6570\u7ec4\u8303\u56f4\uff0c\u8def\u6807\uff0c\u7b2c\u4e00\u4e2a\u8def\u6807\uff0c\u662f\u5426\u8bbf\u95ee \nint n, m, a[N][N], l, r, mid, ans, st, en, tp;\n// n\uff0cm\uff0c\u9ad8\u5ea6\uff0c\u5de6\uff08\u4e8c\u5206\uff09\uff0c\u53f3\uff08\u4e8c\u5206\uff09\uff0c\u4e2d\uff08\u4e8c\u5206\uff09\uff0c\u7b54\u6848\uff0c\n// \u5f00\u59cb\u8def\u6807\u7684x\u5750\u6807\uff0c\u7b54\u6848\uff0c\u5f00\u59cb\u8def\u6807\u7684y\u5750\u6807\uff0c\u8def\u6807\u4e2a\u6570 \nint dx[5]={0, 0, 1, 0, -1},\n\tdy[5]={0, 1, 0, -1, 0};\n// \u65b9\u5411\u589e\u91cf\u6570\u7ec4 \nbool bfs () { // \u4f1f\u5927\u7684bfs \n\tqueue <int> x, y; // \u5b9a\u4e49\u961f\u5217\uff0cx\u5750\u6807\uff0cy\u5750\u6807 \n\tint now=1; // \u8bb0\u5f55\u5df2\u8bbf\u95ee\u7684\u8def\u6807\uff0c\u4e4b\u524d\u7528\u4e86\u961f\u5217z\uff0c\u9519\u4e862\u4e2a\u5c0f\u65f6\uff0c\u6709\u6bd2 \n\tx.push (st), y.push (en); // \u521d\u59cb\u538b\u5165\u961f\u5217 \n\tvis[st][en]=1; // \u8d77\u70b9\u4e3a\u5df2\u8bbf\u95ee \n\twhile (!x.empty ()) { // \u5224\u65ad\u7ed3\u675f \n\t\tint xx=x.front (), yy=y.front (); // \u8bb0\u5f55x\u548cy \n\t\tif (now==tp) return 1; // \u5982\u679c\u5df2\u7ecf\u8bbf\u95ee\u4e86\u6240\u6709\u7684\u8def\u6807\uff0c\u53ef\u4ee5\u9000\u51fa \n\t\tx.pop (), y.pop (); // \u51fa\u961f \n\t\tfor (int i=1; i<=4; i++) { // \u5f00\u59cb\u50cf\u56db\u4e2a\u65b9\u5411\u641c\u7d22 \n\t\t\tint nx=xx+dx[i], ny=yy+dy[i]; // \u8ba1\u7b97\u73b0\u5728\u7684\u5750\u6807 \n\t\t\tif (nx<1 || nx>n || ny<1 || ny>m || vis[nx][ny]) continue;\n\t\t\t// \u5982\u679c\u8d8a\u754c\u6216\u8bbf\u95ee\u8fc7\uff0c\u4e0d\u518d\u6267\u884c\u5165\u961f\u64cd\u4f5c \n\t\t\tint tpp=abs (a[nx][ny]-a[xx][yy]); // \u8ba1\u7b97\u9ad8\u5ea6\u5dee\uff0c\u8981\u7edd\u5bf9\u503c \n\t\t\tif (tpp>mid) continue;\n\t\t\t// \u9ad8\u5ea6\u5dee\u5927\u4e8e\u671f\u671b\u503c\uff08mid\uff09\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u4e0d\u518d\u6267\u884c\u5165\u961f\u64cd\u4f5c \n\t\t\telse { \n\t\t\t\tif (c[nx][ny]) now++; // \u5982\u679c\u662f\u8def\u6807\uff0c\u8bbf\u95ee\u6570\u52a0\u4e00 \n\t\t\t\tx.push (nx), y.push (ny); // \u5165\u961f \n\t\t\t\tvis[nx][ny]=1; // \u6807\u8bb0\u4e3a\u5df2\u8bbf\u95ee \n\t\t\t} \n\t\t}\n\t}\n\treturn 0;\n}\nint main () {\n\tfreopen (\"node.in\", \"r\", stdin);\n\tfreopen (\"node.out\", \"w\", stdout);\n\tscanf (\"%d%d\", &n, &m); // \u8bfb\u5165 \n\tfor (int i=1; i<=n; i++) // \u8bfb\u5165 \n\t\tfor (int j=1; j<=m; j++) { // \u8bfb\u5165 \n\t\t\tscanf (\"%d\", &a[i][j]); // \u8bfb\u5165 \n\t\t\tr=max (r, a[i][j]); // \u53f3\u7aef\u70b9\u4e3a\u9ad8\u5ea6\u6700\u5927\u503c \n\t\t} // \u8bfb\u5165 \n\tfor (int i=1; i<=n; i++) // \u8bfb\u5165 \n\t\tfor (int j=1; j<=m; j++) { // \u8bfb\u5165 \n\t\t\tscanf (\"%d\", &c[i][j]); // \u8bfb\u5165 \n\t\t\tif (c[i][j]) tp++; // \u5982\u679c\u662f\u8def\u6807\uff0c\u8bb0\u5f55\u4e2a\u6570\uff08\u52a0\u4e00\uff09 \n\t\t\tif (sign && c[i][j]) { // \u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u8def\u6807 \n\t\t\t\tst=i; en=j; sign=0; // \u8bb0\u5f55\u5750\u6807\uff0c\u53d6\u6d88\u7b2c\u4e00\u4e2a\u6807\u8bb0 \n\t\t\t}\n\t\t} \n\twhile (l<=r) { // \u4e8c\u5206\u5f00\u59cb \n\t\tmid=(l+r)/2; // \u8ba1\u7b97\u4e2d\u95f4\u503c \n\t\tmemset (vis, 0, sizeof vis); // \u6e05\u7a7a\u8bbf\u95ee\u6570\u7ec4 \n\t\tif (bfs ()) // \u5982\u679c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u8bbf\u95ee\u5230\u6240\u6709\u8def\u6807 \n\t\t\tr=mid-1, ans=mid; // \u8bb0\u5f55\u7b54\u6848\uff0c\u7f29\u5c0f\u53f3\u7aef\u70b9 \n\t\telse l=mid+1; // \u5982\u679c\u8fd9\u4e2a\u503c\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u5230\u6240\u6709\u8def\u6807\uff0c\u6269\u5927\u5de6\u7aef\u70b9 \n\t} \n\tprintf (\"%d\\n\", ans); // \u8f93\u51fa\u7b54\u6848 \n\treturn 0;\n}\n\n```",
        "postTime": 1534584403,
        "uid": 51038,
        "name": "windows_11",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "# \u7adf\u7136\u6ca1\u6709\u5e76\u67e5\u96c6\u7684\u4ee3\u7801\uff1f\n\n---\n# \u9898\u76ee\u5927\u610f\n\u5728\u4e00\u4e2a$n\\times m$\u7684\u77e9\u9635\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u76f8\u5e94\u7684\u9ad8\u5ea6\uff0c\u89c4\u5b9a\u4e24\u70b9\u95f4\u7684\u9ad8\u5ea6\u5dee\u4e0d\u5927\u4e8e$D$\u5c31\u5f53\u8fd9\u4e24\u4e2a\u70b9\u8054\u901a\uff0c\u5148\u8981\u6c42\u51fa\u6700\u5c0f\u7684$D$\u4f7f\u5f97\u7ed9\u5b9a\u7684\u70b9\u90fd\u8054\u901a\n# \u89e3\u9898\u601d\u8def\n\u663e\u7136\uff0c\u5047\u5982$D=50$\uff0c\u6ee1\u8db3\u8981\u6c42\u7684\u8bdd\uff0c\u90a3\u4e48$D=51$\u4e5f\u5fc5\u5b9a\u6ee1\u8db3\u8981\u6c42\uff0c\u8bf4\u7384\u5b66\u4e00\u70b9\u5c31\u662f`\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027`\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e8c\u5206\u6765\u5904\u7406\u5566\uff01\n\n\u5bf9\u4e8e\u80fd\u5426\u6ed1\u884c\uff0c\u8fd9\u91cc\u7528\u7684\u662f\u5e76\u67e5\u96c6\u7684\u5224\u5b9a\n\n\u82e5\u4e24\u70b9\u95f4\u9ad8\u5ea6\u4e0d\u5927\u4e8e$mid$\uff08\u5f53\u524d\u4e8c\u5206\u7684$D$\uff09\uff0c\u5219\u5c06\u5b83\u4eec\u7684\u7956\u5148\u5408\u5e76\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u6240\u6709\u8981\u6c42\u8fde\u63a5\u7684\u70b9\u4e4b\u95f4\u662f\u5426\u8054\u901a\u5c31\u884c\u5566\uff01\n# \u4ee3\u7801\n$Very\\ \\ Important$\n\u65f6\u95f4\u590d\u6742\u5ea6:$O(logMaxhigh\\times nm)$\n\u6700\u9ad8\u590d\u6742\u5ea6\u4e3a:$O(log100000000\\times 250000)\\approx O(7500000)$\u80fd\u8fc7\n```cpp\n#include<cstdio>\n#include<cstring>\n#define id(i,j) ~-i*m+j//\u5373\u6bcf\u4e2a\u70b9\u7684\u7f16\u53f7\uff0c\u76f8\u5f53\u4e8e(i-1)*m+j\nusing namespace std;\nint h[501][501],f[250001],a[250001],len;//h\u662f\u6bcf\u4e2a\u70b9\u7684\u9ad8\u5ea6\uff0cf\u662f\u5e76\u67e5\u96c6\u6570\u7ec4\uff0ca\u662f\u9700\u8981\u4fdd\u8bc1\u8054\u901a\u7684\u70b9\uff0clen\u662fa\u6570\u7ec4\u957f\u5ea6\nint ans,l,r,n,m,mid;\nconst short dx[4]={-1,0,1,0};\nconst short dy[4]={0,1,0,-1};\nint find(int x){return x==f[x]?x:f[x]=find(f[x]);}\nvoid add(int x,int y){f[find(x)]=find(y);return;}\nint abs(int x){return x<0?-x:x;}\nbool check(int high)\n{\n\tfor(int i=1;i<=n;i++)\n\t for(int j=1;j<=m;j++)f[id(i,j)]=id(i,j);//\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++)\n\t for(int j=1;j<=m;j++)\n\t  for(int k=0;k<4;k++)//\u5411\u5468\u56f4\u56db\u4e2a\u70b9\u8fde\u8fb9\n\t  {\n\t  \tint nx=i+dx[k],ny=j+dy[k];\n\t \tif(nx<1||ny<1||nx>n||ny>m) continue;//\u7206\u51fa\u8303\u56f4\u8df3\u8fc7\n\t \tif(abs(h[i][j]-h[nx][ny])>high)continue;//\u8d85\u8fc7\u9ad8\u5ea6\u8df3\u8fc7\n\t \tadd(id(i,j),id(nx,ny));//\u8fde\u8fb9\n      }\n\tfor(int i=1;i<len;i++) \n\tif(find(a[i])!=find(a[i+1])) return false;//\u5224\u65ad\u662f\u5426\u80fd\u8054\u901a\n\treturn true;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++) {scanf(\"%d\",&h[i][j]);if(h[i][j]>r) r=h[i][j];}//\u4fdd\u5b58\u6700\u5927\u7684r\n\tfor(int i=1;i<=n;i++) for(int j=1,t;j<=m;j++) \n\t{scanf(\"%d\",&t);if(t) a[++len]=id(i,j);}//\u4fdd\u5b58\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tif(check(mid))//\u5224\u65ad\n\t\t{\n\t\t\tans=mid;\n\t\t\tr=mid-1;//\u8c03\u6574\u53f3\u8fb9\u754c\n\t\t}\n\t\telse l=mid+1;//\u8c03\u6574\u5de6\u8fb9\u754c\n\t}\n\tprintf(\"%d\",ans);//\u8f93\u51fa\n}\n```",
        "postTime": 1530612984,
        "uid": 52915,
        "name": "Ajwallet",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "[P2658 \u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b](https://www.luogu.com.cn/problem/P2658)\n\n## \u672c\u9898\u7b97\u6cd5\uff1a\u5e76\u67e5\u96c6+bfs+\u4e8c\u5206\n\n\u5148\u8bf4\u8bf4\u9898\u76ee\u5927\u610f\uff1a**\u5728\u4e00\u4e2aN\u00d7M\u7684\u77e9\u9635\u4e2d\uff0c\u7ed9\u5b9a\u6bcf\u4e2a\u70b9\u76f8\u5e94\u7684\u9ad8\u5ea6\uff0c\u89c4\u5b9a\u82e5\u4e24\u70b9\u95f4\u7684\u9ad8\u5ea6\u5dee\u4e0d\u5927\u4e8eD\uff0c\u4e24\u4e2a\u70b9\u5c31\u662f\u8054\u901a\u7684\u3002**\n\n\u4f60\u8981\u6c42\u51fa\u7684\u5c31\u662f**\u6700\u5c0f\u7684D\uff0c\u4f7f\u5f97\u7ed9\u5b9a\u7684\u70b9\u90fd\u8054\u901a**\u3002\n\n\u90a3\u4e48\u8fd9\u4e9b\u7b97\u6cd5\u7684\u4f18\u52bf\u5c31\u663e\u73b0\u51fa\u6765\u4e86\uff1a\n\n\u5e76\u67e5\u96c6\u53ef\u4ee5\u5c06\u4e0d\u540c\u7684\u5757\u8fde\u901a\uff0c\u5728\u6b64\u9898\u8fde\u901a\u5757\u4e2d\u5f88\u9002\u7528\uff1b\n\nbfs\u4f5c\u4e3a\u641c\u7d22\u7684\u4e00\u79cd\uff0c\u5728\u56fe\u8bba\u4e2d\u5f88\u9002\u7528\uff0c\u5c24\u5176\u662f\u8fd9\u79cd\u5e26\u5730\u56fe\u7684\u9898\uff1b\n\n\u4e8c\u5206\u5c31\u662f\u4ece\u4e2d\u95f4\u5f00\u59cb\u9010\u6e10\u5939\u903c\u6700\u7ec8\u5f97\u51fa\u7b54\u6848\u7684\u7b97\u6cd5\uff0c\u5c31\u50cf\u8fd9\u9898\uff0c\u9700\u8981\u6c42\u6700\u5c0f\u7684D\uff0c\u660e\u663e\u8981\u4f7f\u7528\u4e8c\u5206\u6765\u67e5\u627e\u3002\n\n## \u601d\u8def\uff1a\n\n\u9996\u5148\u8bfb\u5165\u6570\u636e\u540e\uff0c\u8bb0\u5f55\u6240\u6709\u7684\u8def\u6807\uff1b\n\n\u7136\u540e\u5f00\u59cb\u4e8c\u5206\u7b97\u6cd5\uff1b\n\n\u5728\u4e8c\u5206\u4e2d\u7684\u5224\u65ad\u51fd\u6570\u5c31\u662fbfs\uff0c\u5224\u65ad\u5f53\u524d\u7684D\u662f\u5426\u5927\u4e86/\u5c0f\u4e86\uff1b\n\nbfs\u4e2d\u53c8\u4f1a\u7528\u5230\u5e76\u67e5\u96c6\uff0c\u6765\u6839\u636e\u6b63\u5728\u5224\u65ad\u7684D\u8fde\u901a\u5c3d\u53ef\u80fd\u591a\u7684\u8981\u6c42\u7684\u5757\uff1b\n\n\u4e00\u5207\u5b8c\u6210\u540e\u4e8c\u5206\u7b54\u6848\u5c31\u51fa\u6765\u55bd~~\n\n### \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\nint f[250001],a[250001],d[501][501];//\u53ef\u4ee5\u5f00\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\u5730\u56fe,\u5927\u5c0f\u4e3an*m\u5373250000\nint dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};//\u8868\u793a\u56db\u4e2a\u65b9\u5411(\u4e0a\u4e0b\u5de6\u53f3),\u5728bfs\u91cc\u4f7f\u7528\nint n,m,maxn,cnt,l,r;\nint find(int x)//\u5e76\u67e5\u96c6--\u67e5\u627e\n{\n    if(f[x]==x)//\u7b49\u4e8e\u5c31\u8fd4\u56dex\n     {\n        return x;\n     }\n     f[x]=find(f[x]);//\u4e0d\u7b49\u4e8e\u5c31\u7ee7\u7eed\u9012\u5f52\n     return f[x];\n     //\u4e5f\u5c31\u662freturn f[x]=find(f[x]);\n}\nvoid merge(int x,int y)//\u5224\u65ad,\u8fde\u901a\u5757\n{\n    int fx=find(x),fy=find(y);\n    if(fx!=fy)//\u4e0d\u540c\u5c31\u66f4\u65b0f[fx]=fy\n    {\n        f[fx]=fy;\n  } \n}\nbool bfs(int x)//bfs\u641c\u7d22\n{\n    for(int i=1;i<=n*m;i++)//\u5bf9\u4e8e\u4e00\u7ef4\u6570\u7ec4\u521d\u59cb\u5316\n    {\n        f[i]=i;//\u521d\u59cb\u5316\u6bcf\u4e2a\u503c\u90fd\u7b49\u4e8e\u5b83\u7684\u4e0b\u6807\n    }\n    for(int i=1;i<=n;i++)//\u4e24\u5c42\u5faa\u73af\uff0cbfs\n    {\n        for(int j=1;j<=m;j++)\n        {\n            for(int k=0;k<4;k++)//\u524d\u9762\u5b9a\u4e49\u597d\u4e86\u56db\u4e2a\u65b9\u5411,\u8fd9\u4e2a\u5faa\u73af\u662f\u6765\u641c\u7d224\u4e2a\u65b9\u5411\u7684\n            {\n                int xx=i+dx[k],yy=j+dy[k];//\u4e24\u4e2a\u65b0\u5750\u6807\n                if(xx<1||xx>n||yy<1||yy>m)//\u5982\u679c\u51fa\u8fb9\u754c\n                {\n                    continue;//\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u65b9\u5411\n                }\n                if(abs(d[i][j]-d[xx][yy])>x)//\u8def\u7a0b\u592a\u8fdc\uff08\u8d85\u8fc7x\uff09\n                {\n                    continue;//\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u65b9\u5411\n                }\n                merge((i-1)*m+j,(xx-1)*m+yy);//\u8fde\u901a\u5757(\u524d\u9762\u63d0\u5230)\n            }\n        }\n    }\n    for(int i=1;i<cnt;i++)//\u7efc\u5408\u524d\u9762\u7684\u5e76\u67e5\u96c6\u8fde\u901a\u5757\uff0c\u5f00\u59cb\u5224\u65ad\u662f\u5426\u7ed9\u5b9a\u70b9\u90fd\u8fde\u901a\n    {\n        if(dfs(a[i])!=dfs(a[i+1]))//\u5982\u679c\u6709\u7ed9\u5b9a\u70b9\u65e0\u6cd5\u8fde\u901a\n        {\n            return false;//\u76f4\u63a5\u8fd4\u56de\u5047\uff0c\u63d0\u524d\u7ed3\u675f\u51fd\u6570\n        }\n    }\n    return true;//\u5230\u8fd9\u91cc\u8868\u660e\u7ed9\u5b9a\u70b9\u90fd\u80fd\u8fde\u901a,\u8fd4\u56de\u771f\n}\nvoid erfen()//\u4e8c\u5206\n{\n    l=-1,r=maxn+1;\n    int mid;\n//\u4f7f\u7528l\u548cr\u4f5c\u4e3a\u8fb9\u754c\n    while(l+1<r)//\u53ea\u8981l\u4e0d\u8d8a\u754c\n    {\n        mid=(l+r+1)/2;//\u6c42\u51fa\u4e2d\u95f4\u503c\n        if(bfs())//\u8fd9\u91cc\u7684\u5224\u65ad\u51fd\u6570\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684bfs\n        {\n            l=mid;//\u5224\u65ad\u51fd\u6570\u8fd4\u56de\u771f,l\u66f4\u65b0\u4e3amid\n        }\n        else \n        {\n            r=mid-1;//\u5224\u65ad\u51fd\u6570\u8fd4\u56de\u5047,r\u66f4\u65b0\u4e3amid-1\n        }\n        //\u5c31\u8fd9\u6837\u9010\u6e10\u5939\u903c,\u6700\u7ec8\u5f97\u51fa\u7ed3\u679c\n    }\n}\nint main()//\u4e3b\u51fd\u6570\n{\n    scanf(\"%d%d\",&n,&m);//\u8f93\u5165\u6570\u636e\n    for(int i=1;i<=n;i++)//\u53cc\u5c42\u5faa\u73af\u8f93\u5165\n    {\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&d[i][j]);//\u8f93\u5165\u6d77\u62d4\n            maxn=max(maxn,d[i][j]);//\u4e0d\u65ad\u8bb0\u5f55\u6700\u9ad8\u6d77\u62d4\u503c\n        }\n    }\n    for(int i=1;i<=n;i++)//\u53cc\u5c42\u5faa\u73af\u8f93\u5165\n    {\n        for(int j=1;j<=m;j++)\n        {\n            int p;//\u53ea\u80fd\u662f0\u62161\n            scanf(\"%d\",&p);//\u8bfb\u5165\u662f\u5426\u4e3a\u8def\u6807\n            if(p==1)//\u5982\u679c\u662f\u8def\u6807\n            {\n                a[++cnt]=(i-1)*m+j;//\u66f4\u65b0a\u6570\u7ec4\uff0c\u8bb0\u5f55\u8def\u6807\n            }\n        }\n    }\n    erfen();//\u5f00\u59cb\u4e8c\u5206\n    printf(\"%d\",r);//r\u5373\u4e3a\u6700\u540e\u7684D\u503c\n    return 0;//\u7ed3\u675f\n}\n```\n\n\u770b\u5728\u6211\u5455\u5fc3\u6ca5\u8840\u5199\u51fa\u7684\u9898\u89e3\u4e0a\uff0c\u8def\u8fc7\u4e0d\u5fd8\u70b9\u4e2a\u8d5e\u5457~~\n\n[\u5f69\u86cb](https://www.luogu.com.cn/blog/paiwyz314/)",
        "postTime": 1584629603,
        "uid": 219935,
        "name": "JeffWang2019",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e09\u79cd\u505a\u6cd5\uff08\u5e76\u67e5\u96c6\u4e5f\u80fd\u505a\uff0c\u4f46\u672c\u849f\u4e0d\u4f1a~~\u61d2~~\uff09\n\n------------\n\n\n### First\n\n#### \u7b97\u6cd5\uff1a\u672a\u77e5\uff08\u4e0d\u4fe1\u4f60\u5f80\u4e0b\u8bfb\uff09\n\n\u540c\u673a\u623f\u5927\u4f6c\u5728\u8003\u8bd5\u7684\u65f6\u5019\u60f3\u51fa\u6765\u7684\u795e\u5947\u505a\u6cd5\uff01\uff01\uff01\n\n\u601d\u8def\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8def\u6807\uff0c\u6c42\u4e0e\u4e4b\u76f8\u8fde\u7684\u56db\u4e2a\u683c\u5b50\u4e0e\u5b83\u7684\u9ad8\u5ea6\u5dee\u4e2d\u7684\u6700\u5c0f\u503c\uff08\u8fb9\u7f18\u7684\u4e0d\u7b97\uff09\u7528tot\u6765\u8868\u793a\u3002\u7136\u540e\u4eceans\u4e0etot\u4e2d\u53d6\u8f83\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u5728\u6240\u6709\u8def\u6807\u5bf9\u5e94\u7684tot\u4e2d\u53d6\u6700\u5927\u503c\u3002\n\n\u4ec0\u4e48\uff1f\u8fd9\u662f\u4ec0\u4e48\u601d\u8def\uff1f\u80fd\u5f97\u5206\uff1f\u7b54\u6848\u662f\uff1a\u8fd9\u79cd\u601d\u8def\u5b9e\u73b0\u51fa\u6765\uff0c**90\u5206\uff01**\uff08\u5411\u6240\u6709\u7ede\u5c3d\u8111\u8ba1\u505a\u51fa\u6765\u8fd8\u6ca1\u670990\u5206\u7684\u540c\u5fd7\u8868\u793a\u81f4\u656cQAQ\uff0c\u6211\u6700\u5f00\u59cb\u6df1\u641c+\u4e8c\u5206\u624d\u53ef\u601c\u768410\u5206\u554a\uff09\n\nPS\uff1a\u636e\u90a3\u4f4d\u540c\u5b66\u8bf4\uff0c\u4ed6\u662f\u5728\u770b\u6837\u4f8b\u7684\u65f6\u5019\u53d1\u73b0\u7684\u8fd9\u4e2a\u201c\u89c4\u5f8b\u201d\uff0c\u60f3\u7740\u53cd\u6b63\u6253\u4e0d\u51fa\u6b63\u89e3\uff0c\u80fd\u5f97\u591a\u5c11\u7b97\u591a\u5c11.......\n\n### code1\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint m,n,a[501][501],lb[501][501],tot,ans; \nint main() {\n\tscanf(\"%d%d\",&m,&n);\n\tfor(register int i=1;i<=m;i++) {\n\t\tfor(register int j=1;j<=n;j++) {\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tfor(register int i=1;i<=m;i++) {\n\t\tfor(register int j=1;j<=n;j++) {\n\t\t\tscanf(\"%d\",&lb[i][j]);\n\t\t}\n\t}\n\tfor(register int i=1;i<=m;i++) {\n\t\tfor(register int j=1;j<=n;j++) {\n\t\t\tif(lb[i][j]==1) {\n\t\t\t\ttot=0x3f3f3f3f;\n\t\t\t\tif(a[i][j-1]!=0) tot=min(tot,abs(a[i][j-1]-a[i][j]));\n\t\t\t\tif(a[i-1][j]!=0) tot=min(tot,abs(a[i-1][j]-a[i][j]));\n\t\t\t\tif(a[i+1][j]!=0) tot=min(tot,abs(a[i+1][j]-a[i][j]));\n\t\t\t\tif(a[i][j+1]!=0) tot=min(tot,abs(a[i][j+1]-a[i][j]));\n\t\t\t}\n\t\t\tans=max(ans,tot);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n------------\n\n### Second\n\n#### \u7b97\u6cd5\uff1a\u6df1\u641cDFS+\u4e8c\u5206\n\n\u601d\u8def\uff1a\n\n1\u3001\u7528lb\u6570\u7ec4\u4e13\u95e8\u5b58\u50a8\u8def\u6807\u7684\u5750\u6807\uff0c\u7528u\u7d2f\u8ba1\u8def\u6807\u4e2a\u6570\n\n2\u3001\u4e8c\u5206\uff08\u6ce8\u610f\uff1a\u4e00\u5b9a\u662f**\u4ece0\u5f00\u59cb\u679a\u4e3e\uff01**\uff09\u6bcf\u6b21\u679a\u4e3e\u7684\u5c31\u662fmid\u503c\uff0c\u7136\u540e\u4ece\u7b2c\u4e00\u4e2a\u8def\u6807\u5f00\u59cb\u6df1\u641c\n\n3\u3001\u6df1\u641c\u4e2d\uff0c\u9047\u5230\u4e00\u4e2a\u70b9\u5c31\u7528p\u6570\u7ec4\u6807\u8bb0\u4e3atrue\n\n4\u3001\u6df1\u641c\u5b8c\uff0c\u5224\u65ad\u6240\u6709\u8def\u6807\u662f\u5426\u90fd\u88ab\u6807\u8bb0\u4e3atrue\u3002\u5982\u679c\u6709false\uff0c\u90a3\u4e48\u5f53\u524dmid\u5c31\u4e0d\u7b26\u5408\u9898\u610f\uff0c\u4fee\u6539\u5de6\u7aef\u70b9=mid+1\u3002\u5426\u5219\uff0c\u4fee\u6539\u53f3\u7aef\u70b9=mid-1\uff0c\u5e76\u5c06\u5f53\u524dmid\u503c\u4fdd\u5b58\u5728ans\u4e2d\u3002\u6700\u540e\u8f93\u51faans\u5373\u53ef\n\n~~\u55ef\uff0c\u662f\u4e2d\u89c4\u4e2d\u77e9\u7684\u601d\u8def\u4e86\uff01\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u7a0b\u5e8f\u6613\u61c2qvq~~\n\n### code2\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,ans,u;\nlong long l=1,r,a[505][505];\nint dx[4]={0,0,-1,1};\nint dy[4]={-1,1,0,0};\nbool p[505][505]; \nstruct node {\n\tint x,y;\n}lb[250025];\n\ninline void dfs(int x,int y,int kk) {\n\tif(p[x][y]) return ;\n\tp[x][y]=true; //\u5c06\u5f53\u524d\u70b9\u6807\u8bb0\u4e3a\u8bbf\u95ee\u8fc7 \n\tfor(register int i=0;i<4;i++) { //\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411 \n\t\tint xx=x+dx[i];\n\t\tint yy=y+dy[i];\n\t\tif(xx<1||xx>m||yy<1||yy>n||abs(a[xx][yy]-a[x][y])>kk) continue; //\u6ca1\u6709\u8d8a\u754c \n\t\tdfs(xx,yy,kk);\n\t}\n\treturn ;\n}\n\nint main() {\n\tscanf(\"%d%d\",&m,&n);\n\tfor(register int i=1;i<=m;i++) {\n\t\tfor(register int j=1;j<=n;j++) {\n\t\t\tscanf(\"%lld\",&a[i][j]);\n\t\t\tr=max(r,a[i][j]); //\u6700\u9ad8\u6d77\u62d4\u5373\u4e3a\u679a\u4e3e\u7684\u53f3\u7aef\u70b9\uff0c\u5f88\u663e\u7136\u4efb\u610f\u4e24\u70b9\u6d77\u62d4\u503c\u90fd\u4e0d\u53ef\u80fd\u6bd4\u6700\u9ad8\u6d77\u62d4\u503c\u5927 \n\t\t}\n\t}\n\tfor(register int i=1;i<=m;i++) {\n\t\tfor(register int j=1;j<=n;j++) {\n\t\t\tint s;\n\t\t\tscanf(\"%d\",&s);\n\t\t\tif(s==1) {\n\t\t\t\tlb[++u].x=i; //u\u7d2f\u8ba1\u8def\u6807\u603b\u6570\uff1blb\u6570\u7ec4\u8bb0\u5f55\u8def\u6807\u5750\u6807 \n\t\t\t\tlb[u].y=j;\n\t\t\t}\n\t\t}\n\t}\n\twhile(l<=r) { //\u4e8c\u5206\u679a\u4e3e \n\t\tint mid=(l+r)>>1;\n\t\tbool pk=true;\n\t\tmemset(p,false,sizeof(p)); //\u8bb0\u4f4f\u6bcf\u6b21\u679a\u4e3e\u90fd\u8981\u6e05\u96f6 \n\t\tdfs(lb[1].x,lb[1].y,mid); //\u4ece1\u53f7\u8def\u6807\u5f00\u59cb \n\t\tfor(register int i=1;i<=u;i++) { \n\t\t\tif(p[lb[i].x][lb[i].y]==false) { //\u5982\u679c\u6709\u8def\u6807\u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u5373\u8868\u793a\u5f53\u524dmid\u4e0d\u7b26\u5408\u9898\u610f\uff0c\u76f4\u63a5\u8df3\u51fa \n\t\t\t\tpk=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(pk==false) l=mid+1; //\u4fee\u6539\u4e24\u4e2a\u7aef\u70b9 \n\t\telse r=mid-1,ans=mid;\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n```\n\n\n------------\n\n### Third\n#### \u7b97\u6cd5\uff1a\u5e7f\u641cBFS+\u4e8c\u5206\n\n\u601d\u8def\uff1a\u548c\u6df1\u641c\u7684\u57fa\u672c\u4e00\u81f4\uff0c\u9664\u4e86\u591a\u7528\u4e86st\u3001en\u6807\u8bb0\u7b2c\u4e00\u4e2a\u8def\u6807\u7684\u5750\u6807\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5957\u5e7f\u641c\u677f\u5b50\u4e86\u3002\u76f4\u63a5\u770b\u4ee3\u7801\u5427qvq\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool lb[505][505],pd=1,p[505][505];\nint n,m,a[505][505],l,r,mid,ans,st,en,tp; \nint dx[4]={0,1,0,-1};\nint dy[4]={1,0,-1,0};\n\ninline bool bfs() { //\u76f4\u63a5\u5957\u5e7f\u641c\u677f\u5b50 \n    queue <int> x, y; \n    int sum=1;\n    x.push(st);\n\ty.push(en);\n    p[st][en]=1;\n    while(!x.empty ()) {\n        int xx=x.front(),yy=y.front();\n        if(sum==tp) return 1; //\u6240\u6709\u8def\u6807\u90fd\u88ab\u5305\u542b\u4e86\u5c31\u53ef\u4ee5\u8fd4\u56detrue\u4e86 \n        x.pop();\n\t\ty.pop();\n        for(register int i=0;i<4;i++) {\n            int xxx=xx+dx[i];\n\t\t\tint yyy=yy+dy[i];\n            if(xxx<1||xxx>n||yyy<1||yyy>m||p[xxx][yyy]||abs(a[xxx][yyy]-a[xx][yy])>mid) continue;\n            if(lb[xxx][yyy]==1) sum++; //\u7edf\u8ba1\u8986\u76d6\u5230\u7684\u8def\u6807 \n            x.push(xxx); //\u5165\u961f \n\t\t\ty.push(yyy);\n            p[xxx][yyy]=1;\n        }\n    }\n    return 0;\n}\n\nint main () {\n    scanf(\"%d%d\",&n,&m);\n    for(register int i=1;i<=n;i++) {\n        for(register int j=1;j<=m;j++) {\n            scanf(\"%d\",&a[i][j]);\n            r=max(r,a[i][j]);\n        }\n    }\n    for(register int i=1;i<=n;i++) {\n        for(register int j=1;j<=m;j++) {\n            scanf(\"%d\",&lb[i][j]); \n            if(lb[i][j]==1) tp++;\n            if(pd==1&&lb[i][j]==1) { //\u6807\u8bb0\u7b2c\u4e00\u4e2a\u8def\u6807 \n                st=i;\n\t\t\t\ten=j;\n\t\t\t\tpd=0;\n            }\n        } \n    }\n    while(l<=r) {\n        mid=(l+r)>>1;\n        memset(p,0,sizeof p); \n        if(bfs()==true) {\n        \tr=mid-1;\n        \tans=mid;\n\t\t}\n        else l=mid+1;\n    } \n    printf(\"%d\",ans); \n    return 0;\n}\n```\n\n\n\n------------\n\u603b\u7ed3\u4e00\u4e0b:\n\n1\u3001\u6df1\u641c\u548c\u5e7f\u641c\u7684\u677f\u5b50\u662f\u80af\u5b9a\u8981\u80cc\u4f4f\u7684\uff0c\u9047\u5230\u5c31\u76f4\u63a5\u5957\n\n2\u3001\u4e8c\u5206\u8981\u6ce8\u610f\u679a\u4e3e\u7684\u8fb9\u754c\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u65f6\u95f4\u8017\u8d39\n\nPS\uff1a\u4e5f\u8bb8\u4f1a\u6709\u5f88\u591a\u4eba\u8bf4\u7b2c\u4e00\u79cd\u505a\u6cd590\u5206\u662f\u56e0\u4e3a\u6570\u636e\u6c34\uff0c\u8fd9\u786e\u5b9e\u662f\u4e00\u4e2a\u56e0\u7d20\u3002\u4f46\u662f\u5728\u8003\u8bd5\u6216\u8005\u6bd4\u8d5b\u65f6\uff0c\u8c01\u4e5f\u4e0d\u77e5\u9053\u6570\u636e\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u8981\u662f\u80fd\u7528\u8fd9\u6837\u7b80\u5355\u7684\u7a0b\u5e8f\u5f97\u9ad8\u5206\uff0c\u4f55\u4e50\u4e0d\u4e3a\uff1f\u6240\u4ee5\uff0c\u8fd0\u6c14\u4e5f\u662f\u5b9e\u529b\u7684\u4e00\u90e8\u5206\uff08\u6211\u5c31\u6ca1\u53d1\u73b0\u8fd9\u79cd\u505a\u6cd5\uff0c\u518d\u6b21\u819c\u62dc\u540c\u673a\u623f\u5927\u4f6cOrz\uff09\n\n\u54c8\u54c8\uff0c\u626f\u8fdc\u4e86\u3002\u90a3\u90a3\u90a3\u90a3\u5c31\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5bf9\u60a8\u6709\u4e9b\u8bb8\u7684\u5e2e\u52a9\u5427QVQ~~",
        "postTime": 1577520494,
        "uid": 145205,
        "name": "Eleven\u8c26",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "~~\u60a8\u6b63\u5728\u6536\u770b\u7684\u662f\u849f\u84bbjch\u7684\u9898\u89e3~~\n\n\u8bed\u8a00\uff1ac++\n\n\u5728[\u535a\u5ba2\u56ed](https://www.luogu.com.cn/blog/jch2008/solution-p2658)\u4e2d\u98df\u7528\u66f4\u4f73\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2658)\n\n\u4f5c\u4e3a\u4e00\u9053\u7eff\u9898\uff0c\u8fd9\u9898\u9700\u8981\u7528\u5230\u641c\u7d22\uff08~~\u51b0\u8336\u59ec~~\u5e76\u67e5\u96c6\uff09+\u4e8c\u5206\uff08\u636e\u8bf4\u751a\u81f3dij\u4e5f\u80fd\u8dd1\uff09\uff0c\u53ef\u4ee5\u8bf4\u662f\u628aPJ\u7684\u5927\u90e8\u5206\u6709\u96be\u5ea6\u7684\u7b97\u6cd5\u6db5\u76d6\u4e86\uff08\u9664\u4e86dp\u7b49\uff09~~\u5c3d\u804c\u5c3d\u8d23~~\n\n\u770b\u5b8c\u8fd9\u9053\u9898\uff0c\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u663e\u7136\u7684\u3002\u7b54\u6848\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u5373\u5982\u679c\u96be\u5ea6\u7cfb\u6570D\u662f\u53ef\u884c\u7684\uff0c\u90a3\u4e48\u6bd4D\u5927\u7684\u96be\u5ea6\u7cfb\u6570\u53ef\u884c\uff1b\u540c\u7406\uff0c\u5982\u679c\u96be\u5ea6\u7cfb\u6570D\u4e0d\u53ef\u884c\uff0c\u90a3\u4e48\u6bd4D\u5c0f\u7684\u96be\u5ea6\u7cfb\u6570\u4e5f\u90fd\u4e0d\u53ef\u884c\u3002\u4e14\u9a8c\u8bc1\u5341\u5206\u5bb9\u6613\uff0c\u66b4\u641c\u5373\u53ef\uff0c\u56e0\u6b64\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u89e3\u6cd5\uff0c\u4e14\u6b63\u89e3\u4e5f\u5df2\u547c\u4e4b\u6b32\u51fa\u3002\n\nbfs\uff08dfs\uff09\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u6c42\u51fa\u80fd\u8054\u901a\u591a\u5c11\u8def\u6807\u5373\u53ef\u3002\u4f46\u5176\u5b9e\u8fd9\u9898\u5e76\u67e5\u96c6\u4e5f\u662f\u53ef\u884c\u7684\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u96be\u5ea6\u7cfb\u6570D\uff0c\u82e5\u4e24\u70b9\u95f4\u9ad8\u5ea6\u4e0d\u5927\u4e8eD\uff0c\u5219\u5c06\u5b83\u4eec\u5408\u5e76\uff0c\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u6240\u6709\u8981\u6c42\u8fde\u63a5\u7684\u70b9\u4e4b\u95f4\u662f\u5426\u8054\u901a\u5373\u53ef\u3002\n\n~~\u4e0d\u8fc7\u6211\u5199\u7684\u8fd8\u662fbfs\uff0c\u4e0d\u8fc7\u662f\u7eaf\u624b\u5199\u961f\u5217\uff0c\u73cd\u60dc\u751f\u547d\uff0c\u8fdc\u79bbSTL~~\n\n~~\u5bfc\u64ad\uff0c\u4e0a\u4ee3\u7801~~\n### code:\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934 \n#define MAXN 250010\n#define maxn 510\n#define N 20\n#define INF 1000000000\nusing namespace std;\nint n,m;\nstruct edge//\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5b58\u4e0b\u5b83\u7684\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807 \n{\n    int x,y;\n}s,q[MAXN];//bfs\u7684\u961f\u5217 \nint front,rear;\nint sum,dx[N]={0,0,1,0,-1},dy[N]={0,1,0,-1,0};//\u63d0\u524d\u505a\u597d\u5173\u4e8e\u904d\u5386\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u65b9\u4fbf\u7ef4\u62a4 \nint mp[maxn][maxn];//\u5b58\u56fe \nbool flag[maxn][maxn];//\u5b58\u662f\u5426\u4e3a\u6807\u8bb0 \n//\u624b\u5199\u961f\u5217\u6a21\u677f \nvoid push(edge x)//\u5165\u961f \n{\n    q[++rear]=x;\n    q[rear]=x;\n    return;\n}\nvoid pop()//\u51fa\u961f \n{\n    ++front;\n    return;\n}\nbool empty()//\u5224\u7a7a\n{\n    if (front==rear) return 1;\n    return 0;\n}\nint bfs(int d)//bfs\u5168\u8fc7\u7a0b \n{\n    bool vis[maxn][maxn];\n    int tot=0;\n    memset(vis,0,sizeof(vis));//\u521d\u59cb\u5316 \n    front=0;\n\trear=0;\n    push(s);//\u5c06\u8d77\u70b9\u63d2\u5165\u961f\u5217\u4e2d \n    vis[s.x][s.y]=1;\n    edge nxt;\n    while(!empty())//bfs\u6a21\u677f \n    {\n        pop();//\u5c06\u961f\u9996\u5f39\u51fa \n        if (flag[q[front].x][q[front].y]) ++tot;//\u5982\u679c\u8d70\u5230\u7684\u70b9\u662f\u4e00\u4e2a\u8def\u6807\uff0c\u5c06\u4e92\u901a\u7684\u8def\u6807+1 \n        for(int w=1;w<=4;++w)//\u679a\u4e3e4\u4e2a\u65b9\u5411 \n        {\n            int xx=q[front].x+dx[w],yy=q[front].y+dy[w];\n            if (!vis[xx][yy] && xx>=1 && xx<=n && yy>=1 && yy<=m && abs(mp[q[front].x][q[front].y]-mp[xx][yy])<=d)//\u5728\u56fe\u5185\u4e14\u672a\u88ab\u8bbf\u95ee\u8fc7\u4e14\u7b26\u5408\u96be\u5ea6\u7cfb\u6570\u7684\u8981\u6c42 \n            {\n                vis[xx][yy]=1;\n                nxt.x=xx;\n                nxt.y=yy;\n                push(nxt);//\u5c06\u5176\u653e\u5165\u961f\u5217 \n            }\n        }\n    }\n    return tot;//\u628a\u80fd\u8d70\u5230\u7684\u8def\u6807\u6570\u8fd4\u56de \n}\nbool check(int d)\n{\n    if (bfs(d)<sum) return 0;//\u7b80\u5355\u5224\u65ad \n    return 1;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j) scanf(\"%d\",&mp[i][j]);\n    sum=0;\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j)\n        {\n            int mark;\n            scanf(\"%d\",&mark);\n            flag[i][j]=(bool)mark;\n            if (mark) {++sum;s.x=i;s.y=j;}//\u968f\u4fbf\u53d6\u4e00\u4e2a1\u7684\u70b9\u4f5c\u4e3a\u8def\u6807 \n        }\n    int l=0,r=INF,ans;//\u4e8c\u5206\uff0c\u6700\u591a\u7684\u96be\u5ea6\u7cfb\u6570\u4e3a10^9\uff08INF\uff09 \n    while(l<=r)\n    {\n        int mid=(l+r)/2;\n        if (check(mid)) ans=mid,r=mid-1;//\u5982\u679c\u53ef\u884c\u5c31\u8bb0\u5f55\u7b54\u6848\uff0c\u5411\u66f4\u4f18\u65b9\u5411\u641c\u5bfb \n        else l=mid+1;//\u5426\u5219\u5411\u66f4\u52a3\u65b9\u5411\u641c\u5bfb \n    }\n    printf(\"%d\\n\",ans);//\u8f93\u51fa\u7b54\u6848 \n    return 0;//\u534e\u4e3d\u7ed3\u675f \n}\n```\n\u5207\u52ff\u590d\u5236\uff01\n\n\u4ee5\u4e0a\uff0c\u8fd9\u9898\u633a\u4e0d\u9519\u7684\n\n### \u540e\u8bb0\n\u524d\u9762\u5199\u8fc7\u51e0\u7bc7\u9898\u89e3\uff0c\u90fd\u5f88\u957f\n\n\u4f46\u611f\u89c9\uff0c\u90fd\u4e0d\u662f\u81ea\u5df1\u7684\u4e1c\u897f\u5462\u2026\u2026\n\n\u8fd9\u7bc7\u9898\u89e3\u7a0d\u5fae\u7a74\u6811\u4e86\u4e9b\n\nqwq",
        "postTime": 1589963280,
        "uid": 152535,
        "name": "_StarBird_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "\u5f88\u5178\u578b\u7684\u4e8c\u5206\u7b54\u6848+BFS \u4e8c\u5206\u627e\u6700\u5c0f\u503cD\uff0c\u7136\u540e\u5728check\u91cc\u8dd1\u4e00\u904dBFS,\u5982\u679c\u80fd\u5230\u8fbe\u6240\u6709\u7684\u8def\u6807\uff0c\u5c31\u8fd4\u56detrue \u5177\u4f53\u89c1\u4ee3\u7801\u55ef\n\n///\u5206\u5272\u7ebf////\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#define maxn 505\nusing namespace std;\nint n,m,maze[maxn][maxn],cnt,kk[maxn][maxn],startx,starty;\nbool vis[maxn][maxn];\nstruct node{\n\tint x,y;\n}a[maxn][maxn];\nconst int dx[4]={1,-1,0,0};\nconst int dy[4]={0,0,1,-1};\n\n//\u624b\u52a8\u53d6\u7edd\u5bf9\u503c\nint abss(int a,int b)\n{\n\tif(a>b) return a-b;\n\telse return b-a;\n}\n\n//BFS\nbool check(int s)\n{\n\tqueue<node> q;\n\tmemset(vis,false,sizeof(vis));//\u4e00\u5b9a\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff01\n\tvis[startx][starty]=true;\n\tq.push(a[startx][starty]);\n\tint sum=1;//\u7b2c\u4e00\u4e2a\u70b9\u5df2\u7ecf\u8d70\u8fc7\u4e86\n\twhile(!q.empty())\n\t{\n\t\tnode cur=q.front();\n\t\tq.pop();\n        \n        //\u679a\u4e3e\u56db\u4e2a\u65b9\u5411\n\t\tfor(int k=0;k<4;k++)\n\t\t{\n\t\t\tint x1=cur.x+dx[k];\n\t\t\tint y1=cur.y+dy[k];\n\t\t\tif(x1<1||x1>m||y1<1||y1>n||vis[x1][y1]||abss(maze[x1][y1],maze[cur.x][cur.y])>s) continue;\n            \n            //\u5982\u679c\u5408\u6cd5\n\t\t\tvis[x1][y1]=true;\n\t\t\tsum+=kk[x1][y1];//\u7edf\u8ba1\u5230\u8fbe\u7684\u8def\u6807\u6570\n\t\t\tq.push(a[x1][y1]);\n            \n            //\u5982\u679c\u8d70\u5230\u4e86\u6240\u7528\u7684\u8def\u6807\n\t\t\tif(sum==cnt) return true;\n            \n\t\t}\n\t}\n    //\u6ca1\u620f\u4e86\u4e0d\u884c\u7684\n\treturn false;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tint low=0,high=0,mid,ans;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&maze[i][j]);\n\t\t\ta[i][j].x=i;\n\t\t\ta[i][j].y=j;\n\t\t\thigh=max(high,maze[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&kk[i][j]);\n\t\t\t//\u7edf\u8ba1\u8def\u6807\u6570\n            if(kk[i][j])\n\t\t\t{\n\t\t\t\tcnt++;\n                \n                //\u627e\u8d77\u59cb\u8def\u6807\n\t\t\t\tif(cnt==1)\n\t\t\t\t{\n\t\t\t\t\tstartx=i;\n\t\t\t\t\tstarty=j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n    \n    //\u4e8c\u5206\n\twhile(low<=high)\n\t{\n\t\tmid=(low+high)/2;\n\t\tif(check(mid))\n\t\t{\n\t\t\tans=mid;\n\t\t\thigh=mid-1;\n\t\t}\n\t\telse low=mid+1;\n\t}\n\tprintf(\"%d\",ans);\n    return 0\uff1b\n}\n```",
        "postTime": 1517473294,
        "uid": 52316,
        "name": "\u5218\u9526\u60e0233",
        "ccfLevel": 0,
        "title": "P2658 \u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b \u9898\u89e3"
    },
    {
        "content": "\u4ece\u4efb\u610f\u4e00\u4e2a\u8def\u6807\u5f00\u59cb\uff0c\u505a\u7c7bdijkstra\u7b97\u6cd5\u3002\n\n\u521d\u59cbdis[]=0\n\ndis[]\u8bb0\u5f55\u5230\u8fbe\u8be5\u70b9\u7684\u6700\u5c0f\u8de8\u5ea6\uff0c\u628a\u52a0\u53d8\u6210\u53d6max\n\n\u6bcf\u6b21\u786e\u5b9a\u8def\u6807dis\u7684\u65f6\u5019\uff0cans=max(ans,dis[cur])\uff0c\u6240\u6709\u8def\u6807\u90fd\u8bbf\u95ee\u5230\u5373\u5f97\u5230ans\n\n\uff08\u5176\u5b9e\u4f1a\u53d1\u73b0\u8fd9\u5c31\u662fprim\uff09\n\n\u4e0b\u9762\u662f\u4ee3\u7801\u7247\u6bb5\n\n```cpp\n\nstruct iT\n{\n    int to, w;\n    bool operator<(const iT &r) const {return w > r.w;}\n}ss[M], *sp = ss;\nint dis[N];\nint iDijk(int ibeg)\n{\n    memset(dis, 0xFF, sizeof dis);\n    int ret = 0, cur = 0;\n    *sp++ = (iT){ibeg, 0};\n    do\n    {\n        iT c = *ss;\n        pop_heap(ss, sp--);\n        if(dis[c.to] != -1)\n            continue;\n        dis[c.to] = c.w;\n        if(bpt[c.to])\n        {\n            ret = max(ret, c.w);\n            if(++cur == cpt)\n                break;\n        }\n        for(iE *p = arrto[c.to]; p; p = p->next)\n            if(dis[p->to] == -1)\n            {\n                *sp++ = (iT){p->to, max(c.w, p->w)};\n                push_heap(ss, sp);\n            }\n    }\n    while(ss != sp);\n    return ret;\n}\n\n```",
        "postTime": 1446086592,
        "uid": 9567,
        "name": "HOOCCOOH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "\u6ca1\u6709DFS\u7684\u7b97\u6cd5\uff0c\u90a3\u6211\u6765\u5199\u4e00\u4e2a\n\n\u5f88\u660e\u663e\uff0c\u96be\u5ea6D\u6ee1\u8db3\u5355\u8c03\u9012\u589e\uff08\u5373\u96be\u5ea6D\u8d8a\u5927\uff0c\u6240\u80fd\u90fd\u5230\u8fbe\u7684\u5355\u5143\u683c\u4e00\u5b9a\u8d8a\u5927\uff09\uff0c\u6240\u4ee5\u96be\u5ea6D\u53ef\u4ee5\u7528\u4e8c\u5206\u6765\u679a\u4e3e\n\n\u96be\u5ea6D\u6709\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u641c\u7d22\u4e86\u3002\u4ece\u4e00\u4e2a\u8def\u6807\u5904\u51fa\u53d1\uff0c\u5982\u679c\u80fd\u5728\u6d77\u62d4\u5dee\u4e0d\u8d85\u8fc7D\u7684\u60c5\u51b5\u4e0b\u5168\u90e8\u904d\u5386\u5230\uff0c\u90a3\u4e48\u5c31\u5728\u5c0f\u7684\u533a\u95f4\u91cc\u627e\uff08\u5373right=mid\uff09\uff0c\u5426\u5219\u5728\u5927\u7684\u533a\u95f4\u91cc\u627e\uff08\u5373left=mid\uff09\n\n\u4e0b\u9762\u8bb2\u4e00\u4e2a\u4e8c\u5206\u7684\u5c0f\u6280\u5de7\n\n\u9009\u533a\u95f4\u7684\u65f6\u5019\u8981\u9009\u534a\u5f00\u534a\u95ed\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u505a\u7684\u65f6\u5019\u5c31\u4e0d\u7528\u518d\u53bb\u60f3+1\u6216-1\u7684\u95ee\u9898\u4e86\uff0c\u6700\u540e\u53ea\u8981\u53d6\u95ed\u533a\u95f4\u7684\u90a3\u4e2a\u503c\u5c31\u884c\u4e86\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[510][510];\nbool yes[510][510];\nstruct aa\n{\n\tint x,y;\n} code[250010];                  //\u8def\u6807\u5750\u6807\nint m,n;\n\nconst int dx[4]={1,-1,0,0};\nconst int dy[4]={0,0,1,-1};\nvoid dfs(int x,int y,int mid)\n{\n\tif(yes[x][y]) return ;\n\tyes[x][y]=true;\n\tfor(int i=0;i<4;i++)\n\t{\n\t\tint xx=x+dx[i],yy=y+dy[i];\n\t\tif(0<xx&&xx<=m&&0<yy&&yy<=n&&abs(a[xx][yy]-a[x][y])<=mid) dfs(xx,yy,mid);\n\t}\n\treturn ;\n}\n\nint main()\n{\n\tint maxn=0;\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=m;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\tmaxn=max(maxn,a[i][j]);\n\t\t}\n\tint count=0;\n\tfor(int i=1;i<=m;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tint b;\n\t\t\tscanf(\"%d\",&b);\n\t\t\tif(b==1)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tcode[count].x=i;\n\t\t\t\tcode[count].y=j;         //\u8bb0\u5f55\u8def\u6807\u5750\u6807\n\t\t\t}\n\t\t}\n\tint left=-1,right=maxn+10;           //\u5de6\u5f00\u53f3\u95ed\n\tfor(;left+1<right;)                  //\u4e8c\u5206\u6280\u5de7\n\t{\n\t\tint mid=(left+right)/2;\n\t\tmemset(yes,false,sizeof(yes));\n\t\tdfs(code[1].x,code[1].y,mid);    //DFS\n\t\tbool flag=true;\n\t\tfor(int i=1;i<=count;i++)\n\t\t\tif(!yes[code[i].x][code[i].y])\n\t\t\t{\n\t\t\t\tflag=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(!flag) left=mid;\n\t\telse right=mid;                  //\u4e8c\u5206\u6280\u5de7\n\t}\n\tprintf(\"%d\\n\",right);\n\treturn 0;\n}\n```",
        "postTime": 1523366129,
        "uid": 54728,
        "name": "wangxuye",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "# \u4e8c\u5206+BFS\n#### \u601d\u8def\uff1a\u4ece\u4efb\u610f\u4e00\u4e2a\u8def\u6807\u5f00\u59cbBFS\uff0c\u5982\u679c\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u6709\u65f6\u4f1a\u6bd4\u4ece\u4e00\u4e2a\u8def\u6807\u5f00\u59cb\u7684\u96be\u5ea6\u7cfb\u6570\u6253\uff0c\u5982\uff1a\n```\n3 3\n1 1 1\n1 2 1\n1 1 1\n0 0 0\n0 1 0\n0 0 0\n```\n- \u5982\u679c\u9009\u62e9\u975e\u8def\u6807\u7684\u70b9\uff0c\u96be\u5ea6\u7cfb\u6570\u4e3a$1$\uff0c\u800c\u9009\u62e9\u8def\u6807\u7684\u96be\u5ea6\u7cfb\u6570\u4e3a$0$\n\n\n------------\n\n\n- \u6211\u4eecBFS\u7684\u76ee\u7684\u662f\u4ece\u4efb\u610f\u8def\u6807\u8d70\u5230\u6240\u6709\u76ee\u6807\uff0c\u4e0d\u4e00\u5b9a\u8981\u6700\u77ed\u8def\u5f84\uff0c\u800c\u662f\u8981\u8ba9\u96be\u5ea6\u7cfb\u6570$\u2264$$k$\u7684\u60c5\u51b5\u4e0b\uff0c\uff08$k$\u662f\u6211\u4eec\u8981\u7528\u4e8c\u5206\u6765\u6c42\u7684\u6570\uff09\u8d70\u5b8c\u6240\u6709\u8def\u6807\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint x,y;\n};\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\nint h[4]={0,0,1,-1};\nint s[4]={1,-1,0,0};\nint vis[505][505];\nint n,m;\nint mp[505][505];\nint a[505][505];\nqueue<node>q;\nbool check(int x,int y,int i,int k){\n\tif(x<1||x>n) return false;\n\tif(y<1||y>m) return false;\n\tif(vis[x][y]>0) return false;\n\tif(abs(a[x-h[i]][y-s[i]]-a[x][y])>k) return false; \n\treturn true; \n}\nbool bfs(int x,int y,int k){\n\tq.push((node){x,y});\n\tvis[x][y]=1;\n\twhile(q.size()>0){\n\t\tint xx=q.front().x;\n\t\tint yy=q.front().y;\n\t\tq.pop();\n\t\tfor(int i=0;i<4;i++){\n\t\t\tint xxx=xx+h[i];\n\t\t\tint yyy=yy+s[i];\n\t\t\tif(check(xxx,yyy,i,k)){\n\t\t\t\tq.push((node){xxx,yyy});\n\t\t\t\tvis[xxx][yyy]=vis[xx][yy]+1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(mp[i][j]==1)\n\t\t\t\tif(vis[i][j]==0) return false;\n\t\t}\n\t}\n\treturn true;\n}\nint aa,bb;\nint ans;\nint maxn;\nvoid find(){\n\tint l=-1,r=maxn+1;\n\twhile(l+1<r){\n\t\tint mid=l+(r-l)/2;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tvis[i][j]=0;\n\t\t}\n\t\tif(bfs(aa,bb,mid)){\n\t\t\tans=mid;\n\t\t\tr=mid;\n\t\t}\n\t\telse l=mid;\n\t}\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\ta[i][j]=read();\n\t\t\tif(a[i][j]>maxn) maxn=a[i][j];\n\t\t}\n\t\t\t\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tmp[i][j]=read();\n\t\t\tif(mp[i][j]==1){\n\t\t\t\taa=i;\n\t\t\t\tbb=j;\n\t\t\t}\n\t\t}\n\t}\n\tfind();\n\tprintf(\"%d\",ans);\n\t\n\treturn 0;\n} \n```\n",
        "postTime": 1595602228,
        "uid": 191666,
        "name": "Cult_style",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "\u55e8 \u5927\u5bb6\u597d\uff0c\u672cjuruo\u6765\u53d1\u9898\u89e3\u4e86\n\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u53d1\uff0c\u5e0c\u671b\u5927\u5bb6\u591a\u591a\u5305\u542b\n\n\n# first \u597d\u591a\u4eba\u7528\u4e86\uff0c~~\u75c5\u8336\u51e0~~\u8bf4\u662f\u548c\u5976\u916a\u6709\u4e9b\u7c7b\u4f3c\n\u5176\u5b9e\u4e0d\u5c31\u662f\u4e2a\u666e\u666e\u901a\u901a\u7684bfs\u641c\u7d22\u561b\uff01\u3002\u6211\u9189\u4e86\uff5e\n\n\n\u9898\u89e3\uff0c\u8d70\u8d77\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#include <queue>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n#define N 505\nint n,m,shuliang,saidao[N][N],lubiao[N][N],vis[N][N],sx,sy,l,r,mid,ans,loc[5][2]={{0,0},{1,0},{-1,0},{0,1},{0,-1}};//shuliang\u9700\u8981\u5230\u8fbe\u7684\u70b9\u6570\uff0csaidao \u8d5b\u9053\u9ad8\u5ea6\uff0clubiao\u2014\u20141\uff0cvis\u662f\u5426\u8bbf\u95ee\u8fc7\uff0c\u4e0d\u8d70\u51a4\u6789\u8def\uff0csx\u8d77\u59cb\u70b9f\u6a2a\u5750\u6807\uff0csy\u8d77\u59cb\u70b9\u7eb5\u5750\u6807\uff0cl\u4e8c\u5206\u5de6\u7aef\u70b9\uff0cr\u4e8c\u5206\u53f3\u7aef\u70b9\uff0cans\u7ed3\u679c\uff0cloc\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\nbool flag=true;//\u7528\u4e8e\u5224\u65adans\u662f\u5426\u53ef\u4ee5\nbool bfs()//\u975e\u624b\u5199\u961f\u5217\uff0c\u4e0d\u559c\uff0c\u52ff\u55b7\n{\n    queue<int>x,y;//x\u6a2a\u5750\u6807\u961f\u5217\uff0cy\u7eb5\u5750\u6807\u961f\u5217\uff0c\u5f53\u7136\uff0cstructs\u4e5f\u4e0d\u662f\u4e0d\u884c\u3002\n    int now=1;//\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\uff0c\u672c\u6765\u5c31\u5e94\u8be5\u7ecf\u8fc7\u4e86\u4e00\u4e2a\n    x.push(sx);\n    y.push(sy);//\u5165\u961f\n    vis[sx][sy]=1;\n    while(!x.empty())\n    {\n        int xx=x.front(),yy=y.front();\n        if(now==shuliang)\n            return 1;//\u6570\u91cf\u591f\u4e86\uff0c\u5c31\u53ef\u4ee5\u8fd4\u56de\u4e86\n        x.pop();\n        y.pop();//\u63d0\u51fa\u7b2c\u4e00\u4e2a\n        for(int i=1;i<=4;i++)\n        {\n            int xxx=xx+loc[i][0],yyy=yy+loc[i][1];//\u4e0b\u4e00\u4e2a\u70b9\n            if(xxx<=0||xxx>n||yyy<=0||yyy>m||vis[xxx][yyy]==1)\n                continue;//\u9632\u6b62\u51fa\u754c\n            int top=abs(saidao[xx][yy]-saidao[xxx][yyy]);//\u8ba1\u7b97\u96be\u5ea6\u7cfb\u6570\n            if(top>mid)\n                continue;//\u8d85\u8fc7\u4e86ans \u8fd9\u4e2a\u70b9\u4e0d\u53ef\u4ee5\uff0c\u8df3\u8fc7\n            x.push(xxx);\n            y.push(yyy);\n            if(lubiao[xxx][yyy])\n                now++;//\u8bb0\u5f55\u8d70\u8fc7\u7684\u5750\u6807\n            vis[xxx][yyy]=1;//\u6807\u8bb0\n        }\n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&saidao[i][j]);\n            r=max(r,saidao[i][j]);//\u4e8c\u5206\u7528\u5230\uff0c\u6700\u9ad8\u70b9\u4e8c\u5206\u7684\u53f3\u7aef\u70b9\n        }\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&lubiao[i][j]);\n            if(lubiao[i][j])\n                shuliang++;//\u8bb0\u5f55\u8def\u68071\u6570\u91cf\n            if(flag&&lubiao[i][j])\n            {\n                sx=i;\n                sy=j;\n                flag=false;\n            }//\u5bfb\u627e\u51fa\u53d1\u70b9\n        }\n    while(l<=r)//\u4e8c\u5206\u7b54\u6848\n    {\n        mid=(l+r)/2;\n        memset(vis,0,sizeof(vis));//\u6e05\u7a7a\u6570\u7ec4\uff0c\u522b\u5fd8\u4e86\uff0c\u5361\u4e86\u4e0d\u5c11\u65f6\u95f4\n        if(bfs())\n        {\n            r=mid-1;\n            ans=mid;\n        }\n        else\n        {\n            l=mid+1;\n        }//\u6b63\u5e38\u4e8c\u5206\u7b54\u6848\uff0c\u627e\u51fa\u6700\u4f18\u89e3\n    }\n    printf(\"%d\",ans);//\u8f93\u51fa\n    return 0;\n}\n//\u5b8c\u7f8e\u7684\u9898\u89e3\n\n```\n\u5e76\u67e5\u96c6\u7684\u7b49\u672c\u4eba\u641e\u61c2\u5728\u8bf4",
        "postTime": 1591449784,
        "uid": 24840,
        "name": "\u5317\u7b71\u6709\u68a6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011bfs"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u7684\u601d\u8def\u5df2\u7ecf\u6709\u4eba\u8bb2\u8fc7\u4e86\uff0c\u6211\u8fd9\u91cc\u63d0\u4f9b\u51e0\u4e2a\u5e76\u67e5\u96c6\u65b9\u6cd5\u7684\uff08\u5e38\u6570\uff09\u4f18\u5316\n\n---\n\n1. \u8def\u5f84\u538b\u7f29&\u6309\u79e9\u5408\u5e76\n\n```cpp\nint getf(int x){\n\tif(f[x]==x) return x;\n\treturn f[x]=getf(f[x]);\n}\nvoid unite(int x,int y){\n    int fx=getf(x),fy=getf(y);\n    if(fx==fy) return;\n    if(rk[fx]<rk[fy]) f[fx]=fy;\n    else f[fy]=fx;\n    if(rk[fx]==rk[fy]) rk[fx]++;\n}\n```\n\u8def\u5f84\u538b\u7f29\u5e94\u8be5\u5f88\u591a\u4eba\u90fd\u52a0\u4e86\u5427\u3002\u3002\u3002\n\n2. \u56db\u4e2a\u65b9\u5411\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09->\u4e24\u4e2a\u65b9\u5411\uff08\u4e0b\u53f3\uff09\n\n\u8fb9\u662f\u53cc\u5411\u7684\uff0c\u800c\u4e14\u662f\u7f51\u683c\u56fe\uff0c\u56e0\u6b64\u662f\u6709\u4e2a\u5c42\u6b21\u6027\u7684\uff0c\u65e0\u9700\u91cd\u590d\u5730\u53cc\u5411\u90fdunite\n\n3. \u5c06\u6bcf\u4e2a\u8def\u6807\u7684fa\u4e0e\u7b2c\u4e00\u4e2a\u8def\u6807\u7684fa\u6bd4\u8f83\n\n\u53ef\u4ee5\u8282\u7ea6\u4e00\u534a\u7684getf\n\n---\n\n\u53e6\u5916\uff0c\u611f\u89c9\u81ea\u5df1\u7684\u7801\u98ce\u8fd8\u633a\u597d\u7406\u89e3\u7684\u3002\u3002\u3002\n\n---\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(int &x){\n\tchar c=getchar();bool f=0;x=0;\n\twhile(!isdigit(c)) f|=c=='-',c=getchar();\n\twhile(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\tif(f) x=-x;return x;\n}\ninline void write(int x){\n\tif(x<0) putchar('-'),write(-x);\n\telse{if(x>9) write(x/10);putchar('0'+x%10);}\n}\nconst int N=505;\nint n,m,f[N*N],ans,rk[N*N],a[N][N],l,r;\nvector<int> tag;\ninline int hash(int x,int y){\n\treturn (x-1)*m+y;\n}\ninline int getf(int x){\n\tif(f[x]==x) return x;\n\treturn f[x]=getf(f[x]); //\u8def\u5f84\u538b\u7f29\n}\ninline void unite(int x,int y){\n    int fx=getf(x),fy=getf(y);\n    if(fx==fy) return;\n    if(rk[fx]<rk[fy]) f[fx]=fy; //\u6309\u79e9\u5408\u5e76\n    else f[fy]=fx;\n    if(rk[fx]==rk[fy]) rk[fx]++;\n}\ninline bool check(int k){\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tf[hash(i,j)]=hash(i,j),rk[hash(i,j)]=1; //\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(abs(a[i][j]-a[i+1][j])<=k&&i+1<=n) //\u5411\u4e0bunite(hash(i,j),hash(i+1,j));\n\t\t\tif(abs(a[i][j]-a[i][j+1])<=k&&j+1<=m) //\u5411\u53f3 unite(hash(i,j),hash(i,j+1));\n\t\t}\n\tint fa=getf(tag[0]); //\u5148\u5f97\u5230\u7b2c\u4e00\u4e2afa\n\tfor(int i=1;i<tag.size();i++) if(getf(tag[i])!=fa) //\u540e\u9762\u7684\u4e0e\u7b2c\u4e00\u4e2a\u6bd4\u8f83\n\t\treturn 0;\n\treturn 1;\n}\nsigned main(){\n\tread(n);read(m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tread(a[i][j]);\n\t\t\tr=max(r,a[i][j]);\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1,x;j<=m;j++){\n\t\t\tread(x);\n\t\t\tif(x) tag.push_back(hash(i,j)); //\u6211\u7528vector\u5b58\u8def\u6807\n\t\t}\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\twrite(ans);\n}\n```\n\n---\n\n\u53e6\u5916\uff0c\u6211\u8fd9\u4efd\u4ee3\u7801\u662f\u7528c++\u4ea4\u7684\uff0cc++11\u4ee5\u4e0a\u4f1ace",
        "postTime": 1571992559,
        "uid": 65735,
        "name": "yuzhechuan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "~~\u4e8c\u7ef4\u5e76\u67e5\u96c6\u4e86\u89e3\u4e00\u4e0b~~\n\n     \u672c\u6765\u4e0d\u60f3\u53d1\u9898\u89e3\u7684\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8fd9\u4e2a\u73a9\u610f\u8fd8\u662f\u6709\u70b9\u501f\u9274\u610f\u4e49\u7684\uff0c\u8bf4\u4e0d\u5b9a\u4e4b\u540e\u778e\u7ffb\u80fd\u63d0\u9192\u81ea\u5df1\u8fd9\u79cd\u601d\u8def\uff0c\u6216\u8005\u90a3\u4e2a\u5c0f\u4f19\u4f34\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u770b\u3002\n\n\u8fd9\u9053\u9898\u770b\u4e00\u773c\u5c31\u7a81\u53d1\u5947\u60f3\uff1a\u4e8c\u7ef4\u5e76\u67e5\u96c6\u5982\u4f55\uff1f\n\n\u6211\u4eec\u8003\u8651\u7c7b\u4f3c\u4e8e\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\u7684\u601d\u8def \uff0c\u76f8\u5f53\u4e8e\u7528\u4e00\u4e2a\u751f\u6210\u6811\u8fde\u63a5\u6240\u6709\u8def\u6807\u3002\u7b54\u6848\u53ea\u4e0e\u6700\u5927\u8fb9\u957f\u76f8\u5173\u3002\n\n\u6211\u4eec\u7528\u8fb9\u8868\u5b58\u4e00\u4e0b\u4e24\u70b9\u95f4\u7684\u8fde\u8fb9\uff0c\u4ee5\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u8fd0\u7528\u7c7b\u4f3c\u4e8e\u514b\u9c81\u65af\u5361\u5c14\u7684\u5199\u6cd5\u3002\u6bcf\u52a0\u4e00\u6761\u8fb9\u5224\u65ad\u6240\u6709\u8def\u6807\u662f\u5426\u8fde\u901a\uff0c\u5982\u679c\u662f\uff0c\u65b0\u52a0\u7684\u8fb9\u5c31\u662f\u7b54\u6848\u3002\n\n\u9898\u76ee\u7684\u5173\u952e\u5c31\u662f\u8fd0\u7528\u4e8c\u7ef4\u7684\u5e76\u67e5\u96c6\uff1a\n\n\u8bb0f[i][j]\u8868\u793a(i,j)\u7684\u7236\u8282\u70b9\uff0c\u5219f[i][j]\u6709\u4e24\u90e8\u5206\uff1a\u6a2a\u5750\u6807\u4e0e\u7eb5\u5750\u6807\u3002\u8fd9\u542f\u53d1\u6211\u4eec\u8fd0\u7528\u7ed3\u6784\u4f53\u6765\u5b9e\u73b0\u67e5\u627e\u7956\u5148\u3002\n\n```cpp\ncym2 find(cym2 now)\n{\n\tif(f[now.x][now.y].x==now.x&&f[now.x][now.y].y==now.y)\n\treturn now;\n\tcym2 _ans=find(f[now.x][now.y]);\n\treturn f[now.x][now.y]=_ans;\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,m,a[600][600],total,point,ans,A;\nstruct cym{\n\tint x1,y1,x2,y2,len;\n}e[400010];\nstruct cym2{\n\tint x,y;\n}pos[400010],f[600][600];\nvoid add(int x1,int y1,int x2,int y2)\n{\n\te[++total].x1=x1;\n\te[total].y1=y1;\n\te[total].x2=x2;\n\te[total].y2=y2;\n\te[total].len=abs(a[x2][y2]-a[x1][y1]);\n}\ncym2 find(cym2 now)\n{\n\tif(f[now.x][now.y].x==now.x&&f[now.x][now.y].y==now.y)\n\treturn now;\n\tcym2 _ans=find(f[now.x][now.y]);\n\treturn f[now.x][now.y]=_ans;\n}\nint cmp(const cym &x,const cym &y)\n{\n\treturn x.len<y.len;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tscanf(\"%d\",&a[i][j]);\n\t\tf[i][j].x=i;\n\t\tf[i][j].y=j;\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t  if(i!=n)\n\t  add(i,j,i+1,j);\n\t  if(j!=m)\n\t  add(i,j,i,j+1);\t\t\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tif(x==1)\n\t\t{\n\t\t\tpos[++point].x=i;\n\t\t\tpos[point].y=j;\n\t\t}\n\t}\n\tsort(e+1,e+1+total,cmp);\n\tfor(int i=1;i<=total;i++)\n\t{\n\t\tcym2 xx,yy;\n\t\txx.x=e[i].x1;\n\t\txx.y=e[i].y1;\n\t\tyy.x=e[i].x2;\n\t\tyy.y=e[i].y2;\n\t\tcym2 f1=find(xx);\n\t\tcym2 f2=find(yy);\n\t\tif(f1.x==f2.x&&f1.y==f2.y)continue;\n\t\tf[f1.x][f1.y].x=f2.x;\n\t\tf[f1.x][f1.y].y=f2.y;\n\t\tcym2 _x=find(pos[1]);\n\t\tint judge=1,x=_x.x,y=_x.y;\n\t\tfor(int j=2;j<=point;j++)\n\t\t{\n\t\t\tcym2 X=find(pos[j]);\n\t\t\tif(X.x!=x||X.y!=y)\n\t\t\t{\n\t\t\t\tjudge=0;\n\t\t\t\tbreak;\n\t\t\t}\t\t\n\t\t}\n\t\tif(judge==1)\n\t\t{\n\t\t\tA=1;\n\t\t\tprintf(\"%d\",e[i].len);\n\t\t\tbreak;\n\t\t}\n\t}//\u7b2c\u4e8c\u4e2a\u70b9\u5e94\u8be5\u6bd4\u8f83\u7279\u6b8a \u6ca1\u8f93\u51fa\uff0c\u5f88\u65e9\u4e4b\u524d\u7684\u4ee3\u7801\u4e86\uff0c\u6211\u4e5f\u61d2\u5f97\u60f3\u4e86\uff0c\u8bfb\u8005\u53ef\u4ee5\u591a\u601d\u8003\u4e00\u4e0b\uff08\u7529\u9505 \n\tif(!A)cout<<1;//\u8fd9\u662f\u4e2a\u7279\u5224\uff0c\u8c1c\u4e00\u822c\u7684\u8fc7\u4e86\u2026\u2026\n}\n```",
        "postTime": 1533038984,
        "uid": 27398,
        "name": "_ZZH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848\u88f8\u9898\u3002\u4ee5\u6700\u9ad8\u6d77\u62d4\u4e3a\u4e0a\u754c\uff08\u6216\u8005\u6700\u9ad8\u6d77\u62d4\u5dee\u4e3a\u4e0a\u754c\uff09\uff0c0\u4e3a\u4e0b\u754c\u5f00\u59cb\u4e8c\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2amid=(l+r)/2\uff0c\u4ece\u67d0\u4e2a\u8def\u6807\u5904\u505a\u4e00\u904dFloodfill\uff0c\u9a8c\u8bc1\u662f\u5426\u80fd\u591f\u5c06\u6240\u6709\u8def\u6807\u5168\u90e8\u8986\u76d6\u3002\u3010\u849f\u84bb\u8868\u793a\u50bb\u50bb\u7684\u5199DFS\u5199\u4e86\u5f88\u4e45\u6700\u540e\u53d1\u73b0\u662fBFS Orz\u3011 \u5982\u679c\u80fd\u591f\u8986\u76d6\u5219r=mid\uff0c\u5426\u5219l=mid+1\u3002\u9644\u4ee3\u7801\n\n```cpp\n\nwhile (l<r)\n    {\n        d = (l+r)/2;\n        get = false;\n        bfs();\n        if (get) r = d;\n        else l = d+1;\n    }\n    printf(\"%d\",r);\n\n```",
        "postTime": 1445706803,
        "uid": 3721,
        "name": "MajorB_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    },
    {
        "content": "\u8bf4\u4e00\u79cd\u4e8c\u5206+BFS\u7684\u65b9\u6cd5\n\n\u5148\u628a\u7b54\u6848\u4e8c\u5206\u51fa\u6765\uff0c\u7136\u540e\u518d\u7528BFS\u5224\u65ad\u8be5\u7b54\u6848\u662f\u5426\u6210\u7acb\n\n\u9ebb\u70e6\u7684\u5c31\u662f\u6bcf\u4e00\u6b21\u90fd\u5fc5\u987b\u8fdb\u884c\u4e00\u4e2a\u7c7b\u4f3c\"\u56de\u6eaf\"\u7684\u64cd\u4f5c\uff08\u5373\u6e05\u7a7a\u6570\u7ec4\uff09\uff0c\u4f46\u662f\u8c8c\u4f3c\u6570\u636e\u84bb\u53ef\u4ee5AC\u7684\n\n\n```cpp\n#include<bits/stdtr1c++.h>\nusing namespace std;\nbool hashhh[501][501];\nint mapl[501][501],flag[501][501],flag2[501][501];\nint o,z;\nint m,n;\nstruct pp{\n    int x,y;\n}que[250001],p,f;\nbool check(int q)\n{\n    int k = 1,la = 1;   //\u4e24\u4e2a\u6307\u9488\uff0c\u624b\u6253queue\n    flag[o][z] = false;\n    que[1].x = o, que[1].y = z;\n    int x1, y1;\n    hashhh[o][z] = false;\n    while(k <= la)\n    {\n        x1 = que[k].x,y1 = que[k].y;\n        if(x1 < m && hashhh[x1+1][y1] && (abs(mapl[x1+1][y1] - mapl[x1][y1]) <= q))\n        {\n            if(flag[x1+1][y1])    flag[x1+1][y1] = false;\n            hashhh[x1+1][y1] = false;\n            que[++la].x = x1+1;\n            que[ la ].y = y1;\n        }\n        if(x1 > 1 && hashhh[x1-1][y1] && (abs(mapl[x1-1][y1] - mapl[x1][y1]) <= q))\n        {\n            if(flag[x1-1][y1])    flag[x1-1][y1] = false;\n            hashhh[x1-1][y1] = false;\n            que[++la].x = x1-1;\n            que[ la ].y = y1;\n        }\n        if(y1 < n && hashhh[ x1 ][y1 + 1] && (abs(mapl[x1][y1 + 1] - mapl[x1][y1]) <= q))\n        {\n            if(flag[x1][y1+1])    flag[x1][y1+1] = false;\n            hashhh[x1][y1+1] = false;\n            que[++la].x = x1;\n            que[ la ].y = y1+1;\n        }\n        if(y1 > 1 && hashhh[x1][y1 - 1] &&( abs(mapl[x1][y1 - 1] - mapl[x1][y1]) <= q))\n        {\n            if(flag[x1][y1 - 1])    flag[x1][y1 - 1] = false;\n            hashhh[x1][y1-1] = false;\n            que[++la].x = x1;\n            que[ la ].y = y1 - 1;\n        }\n        k ++;\n    }\n```\n/\\*\n```cpp\n    for(int i = 1 ; i <= m; i ++)\n    {\n        for(int j = 1; j <= n; j++)\n        printf(\"%d \",hashhh[i][j]);\n        printf(\"\\n\");\n    }\n    for(int i = 1 ; i <= m; i ++)\n    {\n        for(int j = 1; j <= n; j++)\n        printf(\"%d \",flag[i][j]);\n        printf(\"\\n\");\n    }*/\n    for(int i = 1 ; i <= m; i ++)\n        for(int j = 1; j <= n; j++)\n        if(flag[i][j]>=1)    return false;\n    return true;\n}\nvoid does()//\u6e05\u7a7a\u6570\u7ec4\n{\n    memset(hashhh,true ,sizeof(hashhh));\n    for(int i = 1 ; i <= m; i ++)\n        for(int j = 1; j <= n; j++)\n        flag[i][j] = flag2[i][j];\n}\nint main(){\n    scanf(\"%d%d\",&m,&n);\n    int l = 0, r = 0;\n    for(int i = 1; i <= m;i ++)\n        for(int j = 1 ; j <= n; j ++){\n            scanf(\"%d\",&mapl[i][j]);\n            r = max(r, mapl[i][j]);\n        }\n    for(int i = 1; i <= m;i ++)\n        for(int j = 1 ; j <= n; j ++)\n        {\n        scanf(\"%d\",&flag2[i][j]);\n        if(flag2[i][j])\n        o = i, z = j;\n    }\n    does();\n    int mid = (l + r)>> 1;\n    while(l + 3 <= r)//\u4e8c\u5206\u67e5\u627e\u7b54\u6848\uff0c\u8fd9\u91cc\u4e3a\u8fb9\u754c\u8003\u8651\u65b9\u4fbf\uff0c\u7528\u4e86\u4e00\u70b9\u5c0f\u6280\u5de7\uff0c\u5373l\u548cr\u4fdd\u75593\u7684\u7a7a\u9699\uff0c\u6700\u540e\u679a\u4e3e\u8fd93\u4e2a\n    {\n        if(check(mid))    {\n            r = mid;\n        //    printf(\"%d\\n OK\",mid);\n        }\n        else{\n            l = mid;\n        //    printf(\"%d\\n\",mid);\n        }\n        mid = (l + r) >> 1;\n        does();\n    }\n    for(int i = l; i <= r; i ++)\n    {\n        if(check(i))    \n        {\n            printf(\"%d\\n\",i);\n            return 0;\n        }\n        does();\n    }\n}\n```",
        "postTime": 1500386007,
        "uid": 19996,
        "name": "Ally_unstoppable",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2658 \u3010\u6c7d\u8f66\u62c9\u529b\u6bd4\u8d5b\u3011"
    }
]