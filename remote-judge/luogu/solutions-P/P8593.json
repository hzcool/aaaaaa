[
    {
        "content": "~~\u5176\u5b9e\u9664\u4e86\u63d0\u793a\u4e2d\u7ed9\u7684\u5e73\u629b\u8fd0\u52a8\u843d\u70b9\u516c\u5f0f\u672c\u9898\u548c\u7269\u7406\u57fa\u672c\u6ca1\u5173\u7cfb~~\n\n\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c**\u53ea\u6709 $y$ \u5750\u6807\u76f8\u540c\u76f8\u540c\u7684\u5bfc\u5f39\u4f1a\u76f8\u649e**\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6240\u6709\u5bfc\u5f39\u90fd\u662f\u4ece\u540c\u4e00\u65f6\u523b\u5f00\u59cb\u964d\u843d\uff0c\u800c\u91cd\u529b\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u4e24\u9897\u521d\u59cb $y$ \u5750\u6807\u4e0d\u540c\u7684\u5bfc\u5f39\u5728\u4efb\u610f\u4e00\u9897\u63a5\u89e6\u5230 $x$ \u8f74\u524d**\u76f8\u5bf9\u9ad8\u5ea6\u59cb\u7ec8\u4e0d\u53d8**\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u4eec\u7684 $y$ \u5750\u6807\u59cb\u7ec8\u4e0d\u540c\uff0c\u81ea\u7136\u5c31\u4e0d\u4f1a\u76f8\u649e\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a $y$ \u5750\u6807\u4e0a\u7684\u5bfc\u5f39\u5206\u522b\u6c42\u89e3\u3002\u8bbe\u5bfc\u5f39\u7684\u843d\u70b9\u4e3a $d$\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u9897 $y$ \u5750\u6807\u76f8\u540c\u7684\u5bfc\u5f39 $i,j$\uff0c\u82e5 $x_i < x_j$\uff0c\u6709\u4e14\u4ec5\u6709\u5728 $d_i\\ge d_j$ \u7684\u60c5\u51b5\u4f1a\u76f8\u649e\uff0c\u56e0\u4e3a\u4e24\u9897\u5bfc\u5f39\u4e00\u5b9a\u4f1a\u6709**\u4ea4\u70b9**\u3002\u90a3\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6bcf\u4e00\u4e2a $y$ \u5750\u6807\u7684\u6240\u6709\u5bfc\u5f39\uff0c\u5bf9 $x$ \u5750\u6807\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u5bfc\u5f39\u5206\u522b\u9488\u5bf9\u843d\u70b9 $d$ \u6c42\u51fa\u6709\u5173\u7684**\u9006\u5e8f\u5bf9**\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u5bf9\u6bcf\u4e2a $i$ \u6c42\u51fa\u6ee1\u8db3 $x_i < x_j\\land d_i\\ge d_j\\lor x_i < x_j\\land d_i\\le d_j\\quad(y_i=y_j)$ \u7684 $j$ \u7684\u4e2a\u6570\uff0c\u5c31\u662f\u4ed6\u7684\u5a01\u529b\u4e86\u3002\n\n\u6c42\u51fa\u6240\u6709\u5bfc\u5f39\u7684\u5a01\u529b\u540e\uff0c\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u8d2a\u5fc3\u9898\u4e86\u3002\u8bbe\u5bfc\u5f39\u7684\u5a01\u529b\u4e3a $v$\uff0c\u5219\u542f\u52a8\u7b2c $i$ \u53f0\u53cd\u5236\u6b66\u5668\u53ef\u4ee5\u51cf\u5c11 $f_i=\\min(a_i,v_i)$ \u7206\u70b8\u5a01\u529b\u503c\uff0c\u53d6\u6700\u5927\u7684 $m$ \u4e2a $f_i$ \u662f\u6700\u4f18\u7684\u3002\u7528\u5bfc\u5f39\u7206\u70b8\u5a01\u529b\u7684\u603b\u548c\u51cf\u53bb\u6700\u5927\u7684 $m$ \u4e2a $f_i$ \u5c31\u662f\u6700\u5c0f\u7684\u5bfc\u5f39\u9020\u6210\u7684\u7206\u70b8\u5a01\u529b\u503c\u603b\u548c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=500001;\nconst double g=9.8;\nint n,m,x,y,v,id,s,T[N],V[N],a,f[N];\nlong long sum;\ndouble d[N];\nmap<int,int>mp;\nmap<int,int>::iterator it;\nstruct daodan{\n\tint id,x;\n\tdouble d;\n};\nbool cmp(daodan a,daodan b){\n\treturn a.x>b.x;\n}\nbool Cmp(int a,int b){\n\treturn a>b;\n}\nvector<daodan>t[N];\nvoid add(int x){\n\tfor(;x<=s;x+=x&-x)T[x]++;\n}\nint get(int x){\n\tint ans=0; \n\tfor(;x;x-=x&-x)ans+=T[x];\n\treturn ans;\n}\nsigned main(){\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>x>>y>>v;\n\t\tif(!mp[y])mp[y]=++id;\n\t\tt[mp[y]].push_back({i,x,x+v*sqrt(2*y/g)});//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a y \u5750\u6807\u4e0a\u7684\u5bfc\u5f39\u5206\u522b\u6c42\u89e3 \n\t}\n\tfor(auto it:mp){\n\t\tx=it.second,sort(t[x].begin(),t[x].end(),cmp),s=t[x].size();\n\t\tfor(int i=0;i<s;i++)d[i]=t[x][i].d;\n\t\tsort(d,d+s);//\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\uff0c\u524d\u540e\u90fd\u8981\u6c42\u4e00\u6b21 \n\t\tfor(int i=1;i<=s;i++)T[i]=0; \n\t\tfor(int i=0;i<s;i++){\n\t\t\tt[x][i].d=upper_bound(d,d+s,t[x][i].d)-d;//\u79bb\u6563\u5316\n\t\t\tV[t[x][i].id]+=get(t[x][i].d);\n\t\t\tadd(t[x][i].d);\n\t\t}\n\t\tfor(int i=1;i<=s;i++)T[i]=0;\n\t\tfor(int i=s-1;i>=0;i--){\n\t\t\tV[t[x][i].id]+=s-1-i-get(t[x][i].d-1);\n\t\t\tadd(t[x][i].d);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)cin>>a,sum+=V[i],f[i]=min(a,V[i]);//\u8d2a\u5fc3\u90e8\u5206 \n\tsort(f+1,f+1+n,Cmp);\n\tfor(int i=1;i<=m;i++)sum-=f[i];\n\tcout<<sum;\n}\n```\n",
        "postTime": 1666571049,
        "uid": 726899,
        "name": "ty_Ray",
        "ccfLevel": 6,
        "title": "P8593 \u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295 \u9898\u89e3"
    },
    {
        "content": "### KDOI \u5b98\u65b9\u9898\u89e3  \r\n\r\n\u6211\u4eec\u4e0d\u59a8\u5148\u8003\u8651\u5982\u679c\u4e24\u4e2a\u5bfc\u5f39\u4f1a\u76f8\u649e\uff0c\u4ed6\u4eec\u5e94\u8be5\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u3002\r\n\r\n\u5bf9\u4e8e\u5bfc\u5f39 $i$\uff0c$j$ \u6ee1\u8db3 $x_i \\leq x_j$\r\n\r\n- \u9996\u5148\uff0c\u4ed6\u4eec\u7684\u843d\u70b9 $x_{ti}$\uff0c$x_{tj}$ \u5fc5\u987b\u6ee1\u8db3 $x_{ti} \\geq x_{tj}$\uff0c\u8fd9\u6837\u4ed6\u4eec\u7684\u8fd0\u52a8\u8f68\u8ff9\u624d\u6709\u53ef\u80fd\u76f8\u4ea4\u3002  \r\n- \u5176\u6b21\uff0c\u6211\u4eec\u53d1\u73b0\u7531\u4e8e\u5bf9\u4efb\u610f\u4e00\u53d1\u5bfc\u5f39\uff0c\u6709 $\\Delta y = \\frac{gt^2}{2}$\uff0c\u6240\u4ee5\u6bcf\u4e00\u53d1\u5bfc\u5f39\uff0c\u5728\u8fd0\u52a8\u76f8\u540c\u65f6\u95f4\u540e\uff0c\u4ed6\u7684 $\\Delta y$ \u5747\u76f8\u7b49\uff0c\u6545\u5982\u679c\u8fd9\u4e24\u4e2a\u5bfc\u5f39\u4f1a\u76f8\u649e\uff0c\u4ed6\u4eec\u521d\u59cb\u65f6\u5fc5\u987b\u6ee1\u8db3 $y_i = y_j$\u3002\r\n\r\n\u90a3\u4e48\uff0c\u8fd9\u4e00\u9898\u7684\u505a\u6cd5\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6309 $y$ \u503c\u5206\u7ec4\u5904\u7406\uff0c\u6bcf\u4e00\u7ec4\u5185\u90e8\u5148\u6309\u7167\u521d\u59cb\u7684 $x$ \u7684\u503c\u4ece\u5c0f\u5230\u5927\u7f16\u53f7\uff0c\u518d\u6309\u7167\u843d\u70b9\u7684 $x$ \u7684\u503c\u6392\u5e8f\uff0c\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5bfc\u5f39\u7684\u7f16\u53f7\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u5373\u4e3a\u8fd9\u4e2a\u5bfc\u5f39\u843d\u5730\u540e\u7684\u4f24\u5bb3\u503c\u3002  \r\n\u77e5\u9053\u4f24\u5bb3\u503c\u4e4b\u540e\uff0c\u4fbf\u53ef\u4ee5\u77e5\u9053\u62e6\u622a\u8fd9\u4e00\u9897\u5bfc\u5f39\u5e26\u6765\u7684\u6536\u76ca\uff0c\u9009\u53d6\u6536\u76ca\u6700\u5927\u7684 $m$ \u4e2a\u62e6\u622a\u5373\u53ef\u3002\r\n\r\n\u9644\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\nconst int NUM=500005;\r\nconst double G=9.8;\r\nint read()\r\n{\r\n    int x=0,f=1;\r\n    char c=getchar();\r\n    while(c<'0'||c>'9')\r\n    {\r\n        if(c=='-') f=-1;\r\n        c=getchar();\r\n    }\r\n    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-'0',c=getchar();\r\n    return x*f;\r\n}\r\nint n,m;\r\nstruct point\r\n{\r\n    int x,y,v,id,a,cost,w;\r\n    double end;\r\n}a[NUM];\r\nint lowbit(int x)\r\n{\r\n    return x&(-x);\r\n}\r\nstruct tree1\r\n{\r\n    int cnt[NUM];\r\n    void Update(int x,int val)\r\n    {\r\n        while(x) cnt[x]+=val,x-=lowbit(x);\r\n    }\r\n    int Query(int x)\r\n    {\r\n        int result=0;\r\n        while(x<=n) result+=cnt[x],x+=lowbit(x);\r\n        return result;\r\n    }\r\n}T1;\r\nstruct tree2\r\n{\r\n    int cnt[NUM];\r\n    void Update(int x,int val)\r\n    {\r\n        while(x<=n) cnt[x]+=val,x+=lowbit(x);\r\n    }\r\n    int Query(int x)\r\n    {\r\n        int result=0;\r\n        while(x) result+=cnt[x],x-=lowbit(x);\r\n        return result;\r\n    }\r\n}T2;//\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\r\nbool cmp(point x,point y)\r\n{\r\n    if(x.y==y.y) return x.x<y.x;\r\n    return x.y<y.y;\r\n}\r\nbool cmp2(point x,point y)\r\n{\r\n    return x.end<y.end;\r\n}\r\nbool cmp3(point x,point y)\r\n{\r\n    return x.w>y.w;\r\n}\r\nvoid solve(int l,int r)//\u5bf9\u6bcf\u4e2ay\u503c\u5206\u522b\u5904\u7406\r\n{\r\n    double t=sqrt(2.0*a[l].y/G);\r\n    for(int i=l;i<=r;i++) a[i].end=1.0*a[i].x+t*a[i].v;\r\n    sort(a+l,a+r+1,cmp2);\r\n    for(int i=l;i<=r;i++) a[i].cost+=T1.Query(a[i].id),T1.Update(a[i].id,1);\r\n    for(int i=r;i>=l;i--) a[i].cost+=T2.Query(a[i].id),T2.Update(a[i].id,1);//\u6c42\u9006\u5e8f\u5bf9\u4e2a\u6570\r\n    for(int i=l;i<=r;i++) T1.Update(a[i].id,-1),T2.Update(a[i].id,-1);\r\n}\r\nint main()\r\n{\r\n    int l=1;\r\n    LL ans=0;\r\n    n=read(),m=read();\r\n    for(int i=1;i<=n;i++) a[i].x=read(),a[i].y=read(),a[i].v=read();\r\n    for(int i=1;i<=n;i++) a[i].a=read();\r\n    sort(a+1,a+n+1,cmp);\r\n    for(int i=1;i<=n;i++) a[i].id=i;//\u6309x\u503c\u5927\u5c0f\u6807\u5e8f\u53f7\r\n    for(int i=2;i<=n;i++) if(a[l].y!=a[i].y) solve(l,i-1),l=i;\r\n    solve(l,n);\r\n    for(int i=1;i<=n;i++) ans+=a[i].cost,a[i].w=a[i].cost-max(a[i].cost-a[i].a,0);\r\n    sort(a+1,a+n+1,cmp3);\r\n    for(int i=1;i<=m;i++) ans-=a[i].w;//\u8d2a\u5fc3\u5220\u9664\u5bfc\u5f39\r\n    printf(\"%lld\",ans);\r\n}\r\n```\r\n",
        "postTime": 1663458117,
        "uid": 151547,
        "name": "anonymous_person",
        "ccfLevel": 0,
        "title": "P8593\u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295\u9898\u89e3"
    },
    {
        "content": "## \u524d\u8a00\n\n&emsp;&emsp;\u770b\u5230\u90fd\u6ca1\u4eba\u4ea4\u9898\u89e3\uff0c\u6211\u5c31\u6765\u4e00\u53d1\u5427\u3002\n\n&emsp;&emsp;\u849f\u84bb\u8003\u573a\u4e0a\u5199\u8fd9\u9053\u9898\u5199\u4e86\u5feb\u4e09\u4e2a\u5c0f\u65f6\uff0c\u7ed3\u679c\u56e0\u4e3a\u6ca1\u5f00 long long \u6302\u5927\u5206\u4e86\uff08\u60b2\n\n## Solution\n\n&emsp;&emsp;\u9996\u5148\u8bfb\u9898\uff0c\u5f88\u660e\u663e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5feb\u901f\u8ba1\u7b97\u51fa\u6bcf\u9897\u5bfc\u5f39\u843d\u5730\u7684\u6740\u4f24\u529b\uff0c\u518d\u7531\u6b64\u8ba1\u7b97\u51fa\u6bcf\u9897\u5bfc\u5f39\u80fd\u88ab\u53cd\u5236\u6b66\u5668\u51cf\u5c11\u7684\u6740\u4f24\u529b\uff0c\u4ece\u5927\u5230\u5c0f\u9009\u62e9\u5c31\u884c\u4e86\u3002\u6240\u4ee5\u8fd9\u9053\u9898\u96be\u70b9\u5176\u5b9e\u5728\u4e8e\u5982\u4f55\u8ba1\u7b97\u6740\u4f24\u529b\u3002\n\n&emsp;&emsp;\u6211\u4eec\u9996\u5148\u8003\u8651\u6240\u6709 $y_i$ \u5747\u76f8\u7b49\uff0c\u5373\u6240\u6709\u5bfc\u5f39\u90fd\u5728\u540c\u4e00\u6c34\u5e73\u9762\u4e0a\u7684\u60c5\u51b5\u3002\u8fd9\u6837\u5c31\u8f6c\u5316\u6210\u4e86\u7ebf\u6bb5\u6c42\u4ea4\u7684\u95ee\u9898\u3002\u8bbe\u67d0\u4e2a\u5bfc\u5f39\u7684\u521d\u59cb\u6a2a\u5750\u6807\u4e3a $x$\uff0c\u843d\u5730\u6a2a\u5750\u6807\u4e3a $x^{\\prime}$\uff0c\u5219\u5f88\u660e\u663e\u6709\u5f53\u4e14\u4ec5\u5f53 $x_i < x_j$ \u4e14 $x^{\\prime}_i > x^{\\prime}_j$ \u65f6\u8fd9\u4e24\u4e2a\u5bfc\u5f39\u7684\u8f68\u8ff9\u4f1a\u76f8\u4ea4\u3002\u753b\u6210\u56fe\u5c31\u662f\u4e0b\u9762\u8fd9\u6837\u5b50\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wra6mj03.png)\n\n&emsp;&emsp;\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e2a\u5bfc\u5f39 $i$ \u627e\u51fa\u6240\u6709\u5bfc\u5f39 $j$ \u6ee1\u8db3 $x_i < x_j$ \u4e14 $x^{\\prime}_i > x^{\\prime}_j$ \u6216\u8005\u53cd\u8fc7\u6765\u6ee1\u8db3\u7684\u8ba1\u7b97\u5165\u6740\u4f24\u529b\u3002\n\n&emsp;&emsp;\u90a3\u6211\u4eec\u5982\u4f55\u5728 $\\Theta(n \\log n)$ \u7684\u590d\u6742\u5ea6\u5185\u8ba1\u7b97\u51fa\u78b0\u649e\u6570\u91cf\u5462\uff1f\u8003\u8651\u5bf9\u6bcf\u4e2a\u5bfc\u5f39\u7edf\u8ba1\u7b54\u6848\uff0c\u6211\u4eec\u8981\u505a\u7684\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u5bfc\u5f39\uff0c\u67e5\u8be2\u6240\u6709\u843d\u70b9\u5750\u6807\u5c0f\u4e8e\u5b83\u7684\u5bfc\u5f39\u4e2d\uff0c\u8d77\u59cb\u5750\u6807\u5927\u4e8e\u5b83\u7684\u6570\u91cf\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5c06\u843d\u70b9\u5750\u6807\u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\u8003\u8651\u6bcf\u4e2a\u5bfc\u5f39\uff0c\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5f53\u524d\u5927\u4e8e\u6216\u5c0f\u4e8e\u67d0\u4e2a\u5750\u6807\u7684\u5bfc\u5f39\u6570\u91cf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5bfc\u5f39\uff0c\u6211\u4eec\u5148\u67e5\u8be2\u8d77\u59cb\u5750\u6807\u5927\u4e8e\u5b83\u7684\u5bfc\u5f39\u6570\uff0c\u518d\u5c06\u5b83\u7684\u8d77\u59cb\u5750\u6807\u63d2\u5165\u6811\u72b6\u6570\u7ec4\u4e2d\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u9898\u76ee\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u6c42\u89e3\u4e86\u3002\u4e0d\u8fc7\u4e3a\u4e86\u80fd\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4fe1\u606f\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6a2a\u5750\u6807\u79bb\u6563\u5316\u3002\u53e6\u5916\u8fd8\u8981\u6ce8\u610f\u6211\u4eec\u8fd8\u9700\u8981\u53cd\u8fc7\u6765\u518d\u7edf\u8ba1\u4e00\u904d\u3002\n\n&emsp;&emsp;\u8003\u8651\u5c06\u8fd9\u4e2a\u89e3\u6cd5\u63a8\u5e7f\u5230\u4e00\u822c\uff0c\u6839\u636e\u5e73\u629b\u8fd0\u52a8\u7684\u6027\u8d28\uff0c\u4e0d\u5728\u540c\u4e00\u6c34\u5e73\u9762\u4e0a\u6295\u653e\u7684\u5bfc\u5f39\u80af\u5b9a\u4e0d\u4f1a\u76f8\u4ea4\uff0c\u6240\u4ee5\u6211\u4eec\u6309\u7167\u7eb5\u5750\u6807\u6392\u5e8f\uff0c\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u5c42\u7eb5\u5750\u6807\u76f8\u540c\u7684\u5bfc\u5f39\u4f9d\u6b21\u6c42\u89e3\u4e86\u3002\n\n## Code\n\n&emsp;&emsp;\u672c\u84bb\u89e3\u6cd5\u7565\u590d\u6742\u4e9b\uff0c\u9700\u8981\u6392\u597d\u51e0\u904d\u5e8f\uff0c\u8fd8\u9700\u8981\u521d\u59cb\u5316\u5f88\u591a\u904d\u6811\u72b6\u6570\u7ec4\uff0c\u590d\u6742\u5ea6\u5e38\u6570\u7565\u5927\u3002\u653e\u5728\u8fd9\u91cc\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\n\n&emsp;&emsp;\u4ee3\u7801\u662f\u8003\u573a\u4ee3\u7801\u7565\u52a0\u4fee\u6539\u548c\u7cbe\u7b80\u7684\u7248\u672c\u3002\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 5e5 + 10;\nconst double g = 9.8;\n\nint n, m;\n\nstruct bul_type {\n    int x, y, v;\n    double hit;\n    ll power, delta;\n    int index;\n} bul[MAXN];\n\nint a[MAXN];\n\nstruct BIT {\n    ll c[MAXN];\n\n    void init()\n    {\n        memset(c + 1, 0, sizeof(long long) * n);\n    }\n\n    void modify(int x)\n    {\n        while (x <= n) {\n            c[x]++;\n            x += x & -x;\n        }\n    }\n\n    ll query(int x)\n    {\n        ll ans = 0;\n        while (x) {\n            ans += c[x];\n            x -= x & -x;\n        }\n        return ans;\n    }\n} tr;\n\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"in\", \"r\", stdin);\n    // freopen(\"out\", \"w\", stdout);\n#endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        cin >> bul[i].x >> bul[i].y >> bul[i].v;\n        bul[i].hit = bul[i].x + sqrt(2 * bul[i].y / g) * bul[i].v;\n        bul[i].index = i;\n    }\n    for (int i = 1; i <= n; i++) {\n        cin >> a[i];\n    }\n\n    sort(bul + 1, bul + n + 1, [](const bul_type &a, const bul_type &b)\n    -> const bool {\n        return a.x < b.x;\n    });\n    int top = 0;\n    for (int i = 1; i <= n; i++) {\n        top++;\n        while (bul[i + 1].x == bul[i].x) {\n            bul[i].x = top;\n            i++;\n        }\n        bul[i].x = top;\n    }\n\n    sort(bul + 1, bul + n + 1, [](const bul_type &a, const bul_type &b)\n    -> const bool {\n        return a.y < b.y;\n    });\n\n    for (int l = 1, r = 1; l <= n; l = r) {\n        while (bul[l].y == bul[r].y) r++;\n        sort(&bul[l], &bul[r], [](const bul_type &a, const bul_type &b)\n        -> const bool {\n            return a.hit < b.hit;\n        });\n        tr.init();\n        for (int i = r - 1; i >= l; i--) {\n            int p = bul[i].x;\n            bul[i].power = tr.query(p);\n            tr.modify(p);\n        }\n        tr.init();\n        for (int i = l; i < r; i++) {\n            int p = bul[i].x;\n            bul[i].power += tr.query(n) - tr.query(p);\n            tr.modify(p);\n            bul[i].delta = min(bul[i].power, (long long) a[bul[i].index]);\n        }\n    }\n\n    sort(bul + 1, bul + n + 1, [](const bul_type &a, const bul_type &b)\n    -> const bool {\n        return a.delta > b.delta;\n    });\n\n    ll ans = 0;\n    for (int i = 1; i <= m; i++) {\n        ans += bul[i].power - bul[i].delta;\n    }\n    for (int i = m + 1; i <= n; i++) {\n        ans += bul[i].power;\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n```",
        "postTime": 1666575216,
        "uid": 577948,
        "name": "Laffey",
        "ccfLevel": 6,
        "title": "\u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295"
    },
    {
        "content": "~~\uff08\u5176\u5b9e\u597d\u597d\u8bfb\u8bfb\u9898\u5c31\u80fd\u611f\u89c9\u51fa\u6765\u5176\u5b9e\u521d\u4e2d\u7684\u7269\u7406\u77e5\u8bc6\u5c31\u8db3\u591f\u4e86\u8fd9\u9898\u7684\u96be\u70b9\u4e0d\u5e94\u8be5\u5728\u7269\u7406\uff09~~\n\n\u5927\u4f53\u601d\u8def\u5c31\u662f\u5148\u7406\u6e05\u78b0\u649e\u6761\u4ef6\uff1a\n\n1. \u4e24\u9897\u5f39 $y$ \u76f8\u540c\u3002\n\n2.  $x$ \u4e0e\u843d\u70b9\u4ea4\u53c9\u3002\n\n\u8fd9\u6837\u6309\u7167 $y$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u6309\u7167 $x$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u5c06\u6392\u540d\u8bb0\u5f55\u4e3a\u7b2c\u4e00\u7ef4\u3002\n\n\u518d\u540c\u6837\u6309\u7167 $y$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u6309\u7167\u843d\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u6392\u540d\u4f5c\u4e3a\u7b2c\u4e8c\u7ef4\u3002\n\n\u5c31\u8f6c\u6362\u6210\u4e86\u4e00\u9053**\u4e8c\u7ef4\u504f\u5e8f**\u9898\u3002\n\n\uff08\u8865\u5145\uff1a\u8003\u4e2d\u662f\u6539\u4e86\u6570\u636e\u7684\uff0c\u5176\u5b9e\u5982\u679c\u6309\u539f\u6765\u51fa\u9898\u4eba\u7684\u8981\u6c42\u4e5f\u662f\u53ef\u505a\u7684\u3002\u5728\u7b2c\u4e00\u6b21\u6392\u5e8f\u4e2d\u52a0\u5165 $v$ \u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\uff0c\u5728\u7b2c\u4e8c\u6b21\u6392\u5e8f\u4e2d\u52a0\u5165 $x$ \u4e3a\u7b2c\u4e09\u5173\u952e\u5b57\u5373\u53ef\u3002\uff09\n\n\u6309 $y$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u628a $y$ \u4e0d\u76f8\u540c\u7684\u5bfc\u5f39\u5206\u79bb\u5f00\uff0c\u7701\u53bb\u518d\u7528\u52a8\u6001\u6570\u7ec4\u5206\u79bb\u3002\n\n[\u4e8c\u7ef4\u504f\u5e8f\u4f8b\u9898](https://www.luogu.com.cn/problem/P1908)\n\n\u7a0d\u5fae\u7684\u4e0d\u540c\u5728\u4e8e\u8981\u6c42\u7684\u662f**\u6bcf\u4e00\u4e2a\u6570\u636e\u7684\u9006\u5e8f\u5bf9\u6570\u91cf**\u800c\u975e\u603b\u6570\u91cf\u3002\n\n\u8003\u573a\u5199\u4e86\u7ebf\u6bb5\u6811\uff08\u76ee\u6d4b\u9898\u89e3\u91cc\u9762\u8fd8\u6ca1\u6709\u6240\u4ee5\u4ea4\u4e00\u7bc7\u9898\u89e3\uff09\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#define N 500005\n#define exp 0.00000001\nusing namespace std;\nint n,m,val[N],re[N],tr[N*10];\nlong long ans;\nstruct node{\n    double x,y,v,pl;\n    int fps,si,sum;\n}a[N];\nbool cmp(node x1,node x2){\n    if(x1.y-x2.y<-exp)return 1;\n    if(x1.y-x2.y>exp)return 0;\n    return x1.x<x2.x;\n}\nbool cmp2(node x1,node x2){\n    if(x1.y-x2.y<-exp)return 1;\n    if(x1.y-x2.y>exp)return 0;\n    return x1.pl<x2.pl;\n}\nvoid add(int l,int r,int x,int val){\n    if(l==r){\n        tr[x]++;\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(val<=mid)add(l,mid,x*2,val);\n    else add(mid+1,r,x*2+1,val);\n    tr[x]=tr[x*2]+tr[x*2+1];\n}\nint ask1(int l,int r,int x,int val){\n    if(l==r)return tr[x];\n    int mid=(l+r)>>1;\n    if(val<=mid)return ask1(l,mid,x*2,val)+tr[x*2+1];\n    return ask1(mid+1,r,x*2+1,val);\n}\nint ask2(int l,int r,int x,int val){\n    if(l==r)return tr[x];\n    int mid=(l+r)>>1;\n    if(val<=mid)return ask2(l,mid,x*2,val);\n    return ask2(mid+1,r,x*2+1,val)+tr[x*2];\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        scanf(\"%lf%lf%lf\",&a[i].x,&a[i].y,&a[i].v);\n        a[i].si=i;\n        a[i].pl=a[i].x+a[i].v*sqrt(2*a[i].y/9.8);\n    }\n    sort(a+1,a+n+1,cmp);\n    for(int i=1;i<=n;i++)a[i].fps=i;\n    sort(a+1,a+n+1,cmp2);\n    for(int i=1;i<=n;i++){\n        a[i].sum+=ask1(1,n,1,a[i].fps); \n        add(1,n,1,a[i].fps);\n    }\n    for(int i=1;i<=4*n;i++)tr[i]=0;\n    for(int i=n;i>=1;i--){\n        a[i].sum+=ask2(1,n,1,a[i].fps);\n        add(1,n,1,a[i].fps);\n    }\n    for(int i=1;i<=n;i++)ans+=a[i].sum;\n    for(int i=1;i<=n;i++)cin>>val[i];\n    for(int i=1;i<=n;i++)val[a[i].si]=min(a[i].sum,val[a[i].si]);\n    sort(val+1,val+n+1);\n    for(int i=n;i>=n-m+1;i--)ans-=val[i];\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\n### \u795d\u5927\u5bb6CSP rp++",
        "postTime": 1666609885,
        "uid": 370037,
        "name": "_farawaystar_",
        "ccfLevel": 4,
        "title": "P8593"
    },
    {
        "content": "### [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u3002](http://dregen-yor.123ds.tk/index.php/2022/10/23/p8593/)\n\n# \u524d\u7f6e\u77e5\u8bc6\n\n\u4e24\u4e2a\u505a\u5e73\u629b\u8fd0\u52a8\u7684\u8d28\u70b9\u4f1a\u78b0\u649e\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u70b9\u521d\u59cb\u9ad8\u5ea6\u76f8\u540c\uff0c\u4e14\u8d77\u59cb\u4f4d\u7f6e\u4e0e\u843d\u5730\u70b9\u5927\u5c0f\u76f8\u53cd\uff0c\u5373\uff1a\n\n\u82e5\u5f00\u59cb\u65f6 $x_i<x_j$\uff0c\u843d\u5730\u65f6 $x_i>x_j$\uff0c\u5219\u7b2c $i$ \u4e2a\u7403\u548c\u7b2c $j$ \u4e2a\u7403\u4f1a\u53d1\u751f\u78b0\u649e\u3002\n\n# \u601d\u8def\n\n\u6839\u636e\u4e0a\u8ff0\u77e5\u8bc6\uff0c\u6211\u4eec\u8003\u8651\u5c06\u6bcf\u4e2a\u70ae\u5f39\u6839\u636e $y$ \u7684\u5927\u5c0f\u5206\u5f00\u8ba1\u7b97\uff0c\u7528\u4e00\u4e2a\u6876\u6765\u5b58\u50a8\u6240\u6709 $y$ \u7684\u5927\u5c0f\u76f8\u540c\u7684\u70ae\u5f39\uff0c\u6839\u636e\u4e0a\u9762\u7684\u524d\u7f6e\u77e5\u8bc6\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42**\u9006\u5e8f\u5bf9**\u7684\u4e2a\u6570\uff0c\u4f46\u662f\uff0c\u8dd1\u4e00\u904d\u9006\u5e8f\u5bf9\u7684\u8bdd\u53ea\u80fd\u6c42\u51fa\u4e00\u8fb9\u548c\u5f53\u524d\u70ae\u5f39\u78b0\u649e\u7684\u70ae\u5f39\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6b63\u53cd\u5206\u522b\u904d\u5386\u4e00\u904d\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u70b9\u4e24\u6b21\u7684\u7b54\u6848\u76f8\u52a0\u5c31\u80fd\u6c42\u51fa\u6bcf\u4e2a\u70ae\u5f39\u7684\u5a01\u529b\u3002\n\n\u5bf9\u4e8e\u7edf\u8ba1\u7b54\u6848\uff0c\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u56e0\u4e3a\u8981\u8ba9\u6700\u540e\u7684\u5a01\u529b\u4e4b\u548c\u6700\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6309\u53cd\u5236\u6b66\u5668\u80fd\u51cf\u5c0f\u7684\u5a01\u529b\u8fdb\u884c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4ee4\u524d $m$ \u4e2a\u5bfc\u5f39\u7528\u9632\u5236\u7cfb\u7edf\u8fdb\u884c\u62e6\u622a\uff0c\u5176\u4ed6\u76f4\u63a5\u5c06\u5bfc\u5f39\u5a01\u529b\u7edf\u8ba1\u5165\u7b54\u6848\u4e2d\u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ls x<<1\n#define rs x<<1|1\nusing namespace std;\nconst double g=9.8;\nstruct node{\n    double x,y,v;\n}s[500010];\nstruct nod{\n    int a,p;\n}q[500010];\nint n,m,a[500010],p[500010],ans;\nbool cmp(int a,int b){\n    return s[a].x<s[b].x;\n}\nbool cmp2(nod a,nod b){\n    return min(a.p,a.a)>min(b.p,b.a);\n}\ndouble getdown(int x){\n    return s[x].x+s[x].v*sqrt(2*s[x].y/g);\n}\nint sum[500010<<2];\nvoid bulid(int x,int l,int r){\n    if(l==r){\n        sum[x]=0;\n        return;\n    }\n    int mid=(l+r)>>1;\n    bulid(ls,l,mid);\n    bulid(rs,mid+1,r);\n    sum[x]=sum[ls]+sum[rs];\n}\nvoid update(int x,int l,int r,int st){\n    if(l==r&&st==l){\n        sum[x]++;\n        return;\n    }\n    int mid=(l+r)>>1;\n    if(st<=mid){\n        update(ls,l,mid,st);\n    }\n    else {\n        update(rs,mid+1,r,st);\n    }\n    sum[x]=sum[ls]+sum[rs];\n}\nint query(int x,int l,int r,int L,int R){\n    if(l>=L&&r<=R){\n        return sum[x];\n    }\n    int res=0;\n    int mid=(l+r)>>1;\n    if(L<=mid){\n        res+=query(ls,l,mid,L,R);\n    }\n    if(R>mid){\n        res+=query(rs,mid+1,r,L,R);\n    }\n    return res;\n}\nmap<double,vector<int> > mp;\nvoid solve(vector<int> tmp){\n    sort(tmp.begin(),tmp.end(),cmp);\n    vector <double> d,id;\n    for(int i=0;i<tmp.size();i++){\n        d.push_back(getdown(tmp[i]));\n        id.push_back(getdown(tmp[i]));\n    }\n    sort(id.begin(),id.end());\n    id.erase(unique(id.begin(),id.end()),id.end());\n    bulid(1,1,(int)id.size());\n    for(int i=0;i<d.size();i++){\n        int bh=lower_bound(id.begin(),id.end(),d[i])-id.begin()+1;\n        p[tmp[i]]+=query(1,1,id.size(),bh,id.size());\n        update(1,1,id.size(),bh);\n    }\n    bulid(1,1,(int)id.size());\n    for(int i=d.size()-1;i>=0;--i){\n        int bh=lower_bound(id.begin(),id.end(),d[i])-id.begin()+1;\n        p[tmp[i]]+=query(1,1,id.size(),1,bh);\n        update(1,1,id.size(),bh);\n    }\n}\nsigned main(){\n    scanf(\"%lld%lld\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%lf%lf%lf\",&s[i].x,&s[i].y,&s[i].v);\n        mp[s[i].y].push_back(i);\n    }\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld\",&a[i]);\n    }\n    for(map<double,vector<int> >::iterator it=mp.begin();it!=mp.end();it++){\n        solve(it->second);\n    }\n    for(int i=1;i<=n;i++){\n        q[i].a=a[i],q[i].p=p[i];\n    }\n    sort(q+1,q+1+n,cmp2);\n    int sum=0;\n    for(int i=1;i<=n;i++){\n        if(m){\n            sum+=max(0ll,q[i].p-q[i].a);\n            m--;\n        }\n        else{\n            sum+=q[i].p;\n        }\n    }\n    cout<<sum;\n    return 0;\n}\n```\n",
        "postTime": 1666524339,
        "uid": 478585,
        "name": "Dregen_Yor",
        "ccfLevel": 4,
        "title": "P8593 \u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295 \u9898\u89e3"
    },
    {
        "content": "\u4e3a\u4e0e\u6807\u91cf\u533a\u522b\uff0c\u672c\u9898\u89e3\u6240\u6709\u77e2\u91cf\u523b\u610f\u5199\u4f5c $\\overrightarrow{A}$\u3002\n\n\u7269\u7406\u91cf\u4e0e\u9884\u5b9a\u4e49\uff1a$\\overrightarrow{x}$ \uff1a\u4f4d\u79fb\uff0c$\\overrightarrow{v}$\uff1a\u901f\u5ea6\uff08\u65b9\u5411\u6052\u5411\u53f3\uff09\uff0c$\\overrightarrow{p_i},\\overrightarrow{q_i}$\uff1a\u8f93\u5165\u7684\u629b\u51fa\u5750\u6807\uff0c\u4e5f\u5c31\u662f\u521d\u59cb\u6c34\u5e73\u4f4d\u79fb\u4e0e\u7ad6\u76f4\u4f4d\u79fb\uff0c$\\overrightarrow{g}=9.8$\uff1a\u91cd\u529b\u52a0\u901f\u5ea6\uff08\u65b9\u5411\u6052\u5411\u4e0b\uff09\u3002\n\n\u6b63\u6587\uff1a\n\n\u9996\u5148\uff0c\u5e73\u629b\u8fd0\u52a8\u662f\u7531\uff1a\u4e00\u4e2a\u5411\u53f3\u7684\u5300\u901f\u76f4\u7ebf\u8fd0\u52a8\uff0c\u548c\uff08\u5300\u52a0\u901f\u7684\uff09\u81ea\u7531\u843d\u4f53\u8fd0\u52a8\u5408\u6210\u7684\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u4e24\u4e2a\u5c0f\u7403 $i,j$ \uff0c\u76f8\u649e\uff0c\u5f53\u4e14\u4ec5\u5f53\uff0c\u5728\u67d0\u4e00\u65f6\u523b $t$\uff0c\u6709 $\\overrightarrow{p_i}+\\overrightarrow{q_i}+\\overrightarrow{x_{i,t}}=\\overrightarrow{p_j}+\\overrightarrow{q_j}+\\overrightarrow{x_{j,t}}$\u3002\u5176\u4e2d $\\overrightarrow{x_{i,t}}$ \u8868\u793a $t$ \u65f6\u523b\u5185 $i$ \u7684\u4f4d\u79fb\u3002\n\n\u628a $\\overrightarrow{x_{i,t}}$ \u4e5f\u5bf9\u4e8e\u6c34\u5e73\u4e0e\u7ad6\u76f4\u5206\u89e3\u6389\uff0c$\\overrightarrow{x_{i,t}}=t\\cdot \\overrightarrow{v_i}+\\dfrac{1}{2}\\cdot \\overrightarrow{g}\\cdot t^2$\u3002\n\n$$\\overrightarrow{p_i}+\\overrightarrow{q_i}+t\\cdot \\overrightarrow{v_i}+\\dfrac{1}{2}\\cdot \\overrightarrow{g}\\cdot t^2=\\overrightarrow{p_j}+\\overrightarrow{q_j}+t\\cdot \\overrightarrow{v_j}+\\dfrac{1}{2}\\cdot \\overrightarrow{g}\\cdot t^2$$\n\n$$(\\overrightarrow{p_i}+t\\cdot \\overrightarrow{v_i})+(\\overrightarrow{q_i})=(\\overrightarrow{p_j}+t\\cdot \\overrightarrow{v_j})+(\\overrightarrow{q_j})$$\n\n\uff08\u62ec\u53f7\u5185\u7684\u65b9\u5411\u76f8\u540c\uff09\n\n\u663e\u7136\uff0c\u5982\u679c\u7ad6\u76f4\u4f4d\u79fb\u76f8\u540c\uff0c\u5f53\u4e14\u4ec5\u5f53 $\\overrightarrow{q_i}=\\overrightarrow{q_j}$\u3002\n\n\u800c\u663e\u7136\u7ad6\u76f4\u4e0e\u6c34\u5e73\u662f\u5782\u76f4\u7684\uff0c\u6240\u4ee5**\u5982\u679c\u629b\u51fa\u7684 $y$ \u5750\u6807\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u6839\u672c\u4e0d\u53ef\u80fd\u76f8\u649e**\u3002\n\n\uff08\u5bf9\u4e8e\u9ad8\u4e2d\u751f\u6765\u8bf4\u8fd9\u73a9\u610f\u5e94\u8be5\u5c31\u662f\u4e00\u773c\u4e01\u771f\u7f62\u2026\u2026\uff09\n\n\u7ee7\u7eed\u8003\u8651\u6c34\u5e73\u65b9\u5411\uff1a\n\n$$\\overrightarrow{p_i}+t\\cdot \\overrightarrow{v_i}=\\overrightarrow{p_j}+t\\cdot \\overrightarrow{v_j}$$\n\n$$\\dfrac{\\overrightarrow{p_i}-\\overrightarrow{p_j}}{\\overrightarrow{v_j}- \\overrightarrow{v_i}}=t$$\n\n\u6ce8\u610f\u5230 $t\\in [0,\\sqrt{\\dfrac{2y_i}{g}}]$\u3002\n\n\uff08\u7ed9\u521d\u4e2d\u751f\u8bc1\u4e00\u4e0b\uff1a\u5f0f\u5b50\u662f\u843d\u5730\u65f6\u95f4 $\\dfrac{1}{2}gt^2=y_i$\uff09\n\n\u4e0b\u9762\u9ed8\u8ba4 $\\overrightarrow{v_j}> \\overrightarrow{v_i}$\uff0c\u5bf9\u7edf\u8ba1\u6ca1\u6709\u5f71\u54cd\u3002\n\n$$\\dfrac{\\overrightarrow{p_i}-\\overrightarrow{p_j}}{\\overrightarrow{v_j}- \\overrightarrow{v_i}}\\geq 0$$\n\n\u610f\u601d\u5c31\u662f\u8bf4\u6c34\u5e73\u629b\u51fa\u5750\u6807\u4e0e\u901f\u5ea6\u7684\u76f8\u5bf9\u5927\u5c0f\u540c\u53f7\uff0c\u5373**\u6c34\u5e73\u629b\u51fa\u5750\u6807 $\\overrightarrow{p_i}\\geq\\overrightarrow{p_j}$**\u3002\n\n$$\\dfrac{\\overrightarrow{p_i}-\\overrightarrow{p_j}}{\\overrightarrow{v_j}- \\overrightarrow{v_i}}\\leq \\sqrt{\\dfrac{2y_i}{g}}$$\n\n$$\\overrightarrow{p_i}+\\sqrt{\\dfrac{2y_i}{g}}\\cdot \\overrightarrow{v_i}\\leq\\overrightarrow{p_j}+\\sqrt{\\dfrac{2y_i}{g}}\\cdot \\overrightarrow{v_j}$$\n\n$$\\overrightarrow{x_{i\\text{\u843d}}}\\leq \\overrightarrow{x_{j\\text{\u843d}}}$$\n\n\u4e5f\u5c31\u662f\uff1a$i,j$ \u7684\u6c34\u5e73\u629b\u51fa\u5750\u6807\u4e0e\u843d\u5730\u70b9\u4e3a**\u504f\u5e8f\u5173\u7cfb**\u3002\n\n\u7b2c $i$ \u4e2a\u70b9\u7684\u5a01\u529b\u503c\u5c31\u662f $i$ \u80fd\u4e0e\u591a\u5c11\u4e2a $j$ \u5f62\u6210\u4e0a\u9762\u7684\u504f\u5e8f\u3002\n\n\u6700\u540e\u8d2a\u5fc3\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\n\u6211\u61d2\u5f97\u79bb\u6563\u5316\uff0c\u7cca\u4e86\u4e2a\u5e73\u8861\u6811\u3002\n\n```cpp\n#include <cstdio>\n#include <map>\n#include <cstring>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n\n#define N 500010\n\nstd::map <int,int> mp;\nint mpidx;\nint n,m;\nstruct node\n{\n\tint x;\n\tdouble y;\n\tint id;\n\tbool operator < (const node &B)const\n\t{\n\t\treturn x < B.x;\n\t}\n};\nstd::vector <node> v[N];\n\nunsigned int sd = 233;\n\nint rnd()\n{\n\tsd ^= sd << 13;\n\tsd ^= sd >> 7;\n\tsd ^= sd << 11;\n\treturn (int)sd;\n}\n\nint root,idx;\nstruct Tree\n{\n\tint ls,rs;\n\tdouble val;\n\tint sz,key;\n}tr[N];\n\n#define lson(k) (tr[k].ls)\n#define rson(k) (tr[k].rs)\n\nvoid pushup(int k)\n{\n\ttr[k].sz = tr[lson(k)].sz + tr[rson(k)].sz + 1;\n}\n\nint newnode(double val)\n{\n\ttr[++idx].val = val;\n\ttr[idx].key = rnd();\n\ttr[idx].sz = 1;\n\treturn idx;\n}\n\nvoid split(int k,double val,int &x,int &y)\n{\n\tif(!k)\n\t\tx = y = 0;\n\telse\n\t{\n\t\tif(tr[k].val <= val)\n\t\t{\n\t\t\tx = k;\n\t\t\tsplit(rson(k),val,rson(k),y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty = k;\n\t\t\tsplit(lson(k),val,x,lson(k));\n\t\t}\n\t\tpushup(k);\n\t}\n}\n\nint merge(int x,int y)\n{\n\tif(!x || !y)\n\t\treturn x | y;\n\tif(tr[x].key <= tr[y].key)\n\t{\n\t\trson(x) = merge(rson(x),y);\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\telse\n\t{\n\t\tlson(y) = merge(x,lson(y));\n\t\tpushup(y);\n\t\treturn y;\n\t}\n}\nint x,y,z;\nvoid ins(double val)\n{\n\tsplit(root,val,x,y);\n\troot = merge(merge(x,newnode(val)),y);\n}\n\nint sta[N];\nint a[N];\nint ans[N];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1,xx,yy,zz;i <= n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&xx,&yy,&zz);\n\t\tif(!mp[yy])\n\t\t\tmp[yy] = ++mpidx;\n\t\tv[mp[yy]].push_back((node){xx,1.0 * xx + 1.0 * zz * sqrt(2.0 * yy / 9.8),i});\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i = 1;i <= mpidx;i++)\n\t{\n\t\tint sz = v[i].size();\n\t\tstd::sort(v[i].begin(),v[i].end());\n\t\tidx = 0;\n\t\troot = 0;\n\t\tfor(int j = 0,xx,yy;j < sz;j++)\n\t\t{\n\t\t\tdouble nx = v[i][j].y;\n\t\t\tsplit(root,nx,xx,yy);\n\t\t\tans[v[i][j].id] += tr[yy].sz;\n\t\t\troot = merge(xx,yy);\n\t\t\tins(v[i][j].y);\n\t\t}\n\t\tfor(int i = 1;i <= idx;i++)\n\t\t\ttr[i] = {0,0,0.0,0,0};\n\t\tidx = 0;\n\t\troot = 0;\n\t\tfor(int j = sz - 1,xx,yy;j >= 0;j--)\n\t\t{\n\t\t\tdouble nx = v[i][j].y;\n\t\t\tsplit(root,nx,xx,yy);\n\t\t\tans[v[i][j].id] += tr[xx].sz;\n\t\t\troot = merge(xx,yy);\n\t\t\tins(v[i][j].y);\n\t\t}\n\t\tfor(int i = 1;i <= idx;i++)\n\t\t\ttr[i] = {0,0,0.0,0,0};\n\t}\n\tlong long res = 0ll;\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tres += ans[i];\n\t\tsta[i] = std::min(ans[i],a[i]);\n\t}\n\tstd::sort(sta + 1,sta + 1 + n);\n\tfor(int i = n - m + 1;i <= n;i++)\n\t\tres -= sta[i];\n\tprintf(\"%lld\\n\",res);\n\treturn 0;\n}\n```",
        "postTime": 1666541929,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "\u4e00\u4e2a\u5f39\u7684\u6295"
    },
    {
        "content": "\u521a\u5f00\u59cb\u770b\u5230\u5e73\u629b\u8fd0\u52a8\u5413\u6b7b\u4eba\u4e86\uff0c\u7ed3\u679c\u53d1\u73b0\u53ea\u662f\u589e\u52a0\u4e86\u7528\u516c\u5f0f\u7b97\u843d\u70b9\u7684\u7ec6\u5fae\u96be\u5ea6\uff08\uff09\n\n\u5f53\u6211\u4eec\u6233\u8fdb\u524d\u7f6e\u77e5\u8bc6\u7684 [Link](https://baike.baidu.com/item/%E5%B9%B3%E6%8A%9B%E8%BF%90%E5%8A%A8/974021?fr=aladdin) \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u7269\u4f53\u5e73\u629b\u8fd0\u52a8\u4e0b\u843d\u8ddd\u79bb\u53ea\u4e0e\u65f6\u95f4\u6709\u5173\u800c\u4e0e\u901f\u5ea6\u65e0\u5173\uff0c\u53cd\u8fc7\u6765\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\u662f\u6709\u5f53\u4e24\u4e2a\u5bfc\u5f39\u5728**\u540c\u4e00 $y$ \u5750\u6807\u4e3a\u8d77\u70b9**\uff0c\u624d\u53ef\u80fd\u76f8\u649e\u3002\u76f8\u5e94\u7684\uff0c\u8d77\u70b9 $y$ \u5750\u6807\u76f8\u540c\u7684\u4e24\u679a\u5bfc\u5f39**\u53ea\u8981\u8f68\u8ff9\u76f8\u4ea4\uff0c\u4e00\u5b9a\u76f8\u649e**\u3002\n\n\u7136\u540e\u7a0d\u5fae\u624b\u73a9\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u8f68\u8ff9\u76f8\u4ea4\u7b49\u4ef7\u4e8e\u8d77\u70b9\u5750\u6807\u548c\u843d\u70b9\u5750\u6807\uff08\u90fd\u662f $x$ \u5750\u6807\uff09\u5448**\u9006\u5e8f\u5bf9**\uff0c\u76f4\u63a5\u79bb\u6563\u5316\uff08\u56e0\u4e3a\u843d\u70b9\u662f `double` \u7c7b\u578b\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $y$ \u5750\u6807\u5206\u522b\u4ece\u5c0f\u5230\u5927/\u4ece\u5927\u5230\u5c0f\uff08\u56e0\u4e3a\u76f8\u4ea4\u4e24\u4e2a\u5bfc\u5f39\u90fd\u4f1a\u52a0\u5a01\u529b\uff0c\u56e0\u6b64\u8981\u524d\u540e\u5206\u522b\u8ba1\u7b97\uff09\u7528\u6811\u72b6\u6570\u7ec4\u6216\u5f52\u5e76\u4e71\u7ef4\u62a4\u4e00\u4e0b\uff0c\u6700\u7ec8\u6bcf\u4e2a\u5bfc\u5f39\u7684\u5a01\u529b\u5c31\u662f\u6709\u5b83\u53c2\u4e0e\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u3002\n\n$a_i$ \u7684\u5904\u7406\u662f\u4e2a\u5c0f\u8d2a\u5fc3\uff0c\u8003\u8651\u6bcf\u4e2a $a_i$ \u7684\u8d21\u732e\u662f $\\min(a_i,p_i)$\uff0c\u90a3\u4e48\u628a\u8d21\u732e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u9009\u524d $m$ \u4e2a\u7528\u9632\u5fa1\u88c5\u7f6e\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,tree[500005],_y[500005];\ndouble _x[500005];\nstruct node{\n\tint stx,sty,v;//\u8d77\u70b9\u5750\u6807\uff0c\u901f\u5ea6\n\tdouble edx;//\u843d\u70b9\n\tint stx_pos,sty_pos;//\u8d77\u70b9\u79bb\u6563\u5316\uff08\u7136\u9e45stx_pos\u5e76\u6ca1\u5565\u7528\uff09\n\tint edx_pos,a,p=0;//\u843d\u70b9\u79bb\u6563\u5316\n}x[500005];\nint lowbit(int x){\n\treturn x&-x;\n}\nint query(int x){\n\tint res=0;\n\tfor(int i=x;i>0;i-=lowbit(i))res+=tree[i];\n\treturn res;\n}\nvoid update(int x,int val){\n\tfor(int i=x;i<=n;i+=lowbit(i))tree[i]+=val;\n}\nbool cmp(node x,node y){\n\treturn x.stx<y.stx;\n}//\u4fdd\u8bc1\u9006\u5e8f\u5bf9\u7684\u7b2c\u4e00\u7ef4\nbool _cmp(node x,node y){\n\treturn min(x.p,x.a)>min(y.p,y.a);\n}//\u8d21\u732e\u6392\u5e8f\nvector<int>v[500005],V;//\u6bcf\u4e2ay\u5750\u6807\u5206\u5f00\u5904\u7406\nint main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i)cin>>x[i].stx>>x[i].sty>>x[i].v,_y[i]=x[i].sty;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>x[i].a;\n\t\tdouble t=sqrt(x[i].sty/4.9);//\u5957\u516c\u5f0f\n\t\tx[i].edx=x[i].stx+x[i].v*t;\n\t\t_x[i]=x[i].edx;\n\t}\n\tsort(_y+1,_y+1+n);\n\tsort(_x+1,_x+1+n);\n\tint len=unique(_y+1,_y+n+1)-_y-1;\n\tint len2=unique(_x+1,_x+n+1)-_x-1;\n\tfor(int i=1;i<=n;++i){//\u79bb\u6563\u5316\n\t\tx[i].sty_pos=lower_bound(_y+1,_y+len+1,x[i].sty)-_y;\n\t\tx[i].edx_pos=lower_bound(_x+1,_x+len2+1,x[i].edx)-_x;\n\t}\n\tsort(x+1,x+n+1,cmp);\n\tfor(int i=1;i<=n;++i){\n\t\tv[x[i].sty_pos].push_back(i);\n\t\tV.push_back(x[i].sty_pos);\n\t}\n\tsort(V.begin(),V.end());\n\tlen=unique(V.begin(),V.end())-V.begin();\n\tfor(int i=1;i<=len;++i){\n\t\tfor(int k=0;k<v[V[i-1]].size();++k){\n\t\t\tint j=v[V[i-1]][k];\n\t\t\tx[j].p+=query(n)-query(x[j].edx_pos-1);\n\t\t\tupdate(x[j].edx_pos,1);\n\t\t}\n\t\tfor(auto j:v[V[i-1]]){//\u6bcf\u6b21\u6e05\u7a7a\u7528memset\u4f1aT\uff0c\u6240\u4ee5\u82b1nlogn\u6e05\u695a\u4e00\u4e0b\n\t\t\tupdate(x[j].edx_pos,-1);\n\t\t}\n\t}\n\tfor(int i=1;i<=len;++i){//\u53cd\u7740\u505a\n\t\tfor(int k=v[V[i-1]].size()-1;k>=0;k--){\n\t\t\tint j=v[V[i-1]][k];\n\t\t\tx[j].p+=query(x[j].edx_pos);\n\t\t\tupdate(x[j].edx_pos,1);\n\t\t}\n\t\tfor(auto j:v[V[i-1]])update(x[j].edx_pos,-1);\n\t}\n\tlong long ans=0;\n\tsort(x+1,x+n+1,_cmp);\n\tfor(int i=1;i<=m;++i)ans+=max(0,x[i].p-x[i].a);//\u5a01\u529b\u4e0d\u4e3a\u8d1f\n\tfor(int i=m+1;i<=n;++i)ans+=x[i].p;\n\tcout<<ans;\n\treturn 0; \n}\n```\n",
        "postTime": 1666597404,
        "uid": 359614,
        "name": "Forever1507",
        "ccfLevel": 6,
        "title": "\u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295 \u9898\u89e3"
    },
    {
        "content": "\u524d\u5f80[\u6211\u7684\u535a\u5ba2](https://www.laoguantx.top/p8593-%e3%80%8ckdoi-02%e3%80%8d%e4%b8%80%e4%b8%aa%e5%bc%b9%e7%9a%84%e6%8a%95-%e9%a2%98%e8%a7%a3.html)\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff01\n# \u5fc3\u5f97\n\n~~\u9003\u8bfe\u6253\u7684\u8fd9\u6b21\u6a21\u62df\u8d5b~~\n\n\u8003\u8bd5\u8fc7\u7a0b\u4e2d\u7b2c\u4e00\u9898\u5f88\u5feb\u5c31\u60f3\u51fa\u6765\u4e86\uff0c\u4e0d\u8fc7\u5199\u4ee3\u7801\u3001\u8c03\u8bd5\u7ec6\u8282\u8db3\u8db3\u7528\u4e86\u5c06\u8fd1\u4e24\u4e2a\u5c0f\u65f6\u3002\u81ea\u5df1\u7684\u4ee3\u7801\u80fd\u529b\u8fd8\u662f\u592a\u5f31\u4e86\u3002\n\n\u7b2c\u4e00\u9898\u505a\u5b8c\u4e4b\u540e\u5f88\u6fc0\u52a8\uff0c\u7136\u540e\u4e8c\u4e09\u56db\u9898\u90fd\u4e0d\u4f1a\u4e86\u2026\u2026\n\n# \u9898\u89e3\n\n## \u6a21\u5757\u4e00\uff1a\u8bfb\u5165\n\n\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u770b\u4ee3\u7801\u5427\u3002\n\n```cpp\nread(n,m); //\u4f7f\u7528\u5feb\u8bfb\nfor(int i=1;i<=n;i++){\n    read(mis[i].x,mis[i].y,mis[i].v); //mis[i]\u7ed3\u6784\u4f53\u6570\u7ec4\u7528\u6765\u8bb0\u5f55\u7f16\u53f7\u4e3ai\u7684\u5bfc\u5f39\u4fe1\u606f\n    mis[i].i=i; //\u5bfc\u5f39\u7f16\u53f7\n    t=sqrt((2.0*mis[i].y)/9.8); //\u6c42\u8fd0\u52a8\u65f6\u95f4\uff08\u89c1\u516c\u5f0f\u63a8\u5bfc)\n    mis[i].to=(double)mis[i].x+(double)mis[i].v*t; //\u6c42\u6700\u7ec8\u843d\u70b9\uff08\u89c1\u516c\u5f0f\u63a8\u5bfc\uff09\n}\n```\n\n## \u6a21\u5757\u4e8c\uff1a\u63a2\u7a76\u4e24\u5bfc\u5f39\u76f8\u649e\u6761\u4ef6\n\n\u5982\u679c\u4f60\u5b66\u8fc7\u300a\u4eba\u6559\u7248\u9ad8\u4e2d\u7269\u7406\u5fc5\u4fee\u4e8c\u300b\u7684\u629b\u4f53\u8fd0\u52a8\u4e00\u7ae0\u7684\u8bdd\uff0c\u53ef\u4ee5\u8df3\u8fc7\u4e0b\u9762\u7684\u516c\u5f0f\u63a8\u5bfc\u3002\n\n\u5df2\u77e5\u7269\u4f53\u505a\u81ea\u7531\u843d\u4f53\uff08\u521d\u901f\u5ea6\u4e3a $0$ )\u7684\u9ad8\u5ea6 $h$ \u4e0e\u65f6\u95f4 $t$ \u3001\u91cd\u529b\u52a0\u901f\u5ea6 $g$ \u7684\u5173\u7cfb\u4e3a\uff1a\n\n$$h=\\frac{1}{2}gt^2$$\n\n\u56e0\u4e3a\u6240\u6709\u5bfc\u5f39\u5728\u540c\u4e00\u65f6\u523b\u53d1\u5c04\uff0c\u5e76\u8bbe\u7b2c $i$ \u9897\u5bfc\u5f39\u7684\u9ad8\u5ea6\u4e3a $y_i$ \uff0c\u521d\u901f\u5ea6\u4e3a $v_i$ \uff0c\u90a3\u4e48\u53ef\u4ee5\u6839\u636e\u516c\u5f0f\u5f97\u5230\u5bfc\u5f39\u4e0b\u843d\u65f6\u95f4 $t_i$ \uff1a\n\n$$\\begin{aligned} & y_i=\\frac{1}{2}gt_i^2 \\\\ \\Leftrightarrow & t_i=\\sqrt{\\frac{2y_i}{g}}\\end{aligned}$$\n\n\u7531\u6b64\u5f97\u5230\u6c34\u5e73\u65b9\u5411\u4e0a\u4f4d\u79fb $\\Delta x_i$ \uff1a\n\n$$\\begin{aligned} \\Delta x_i & =v_it_i \\\\ & =v_i\\sqrt{\\frac{2y_i}{g}} \\end{aligned}$$\n\n\u518d\u52a0\u4e0a\u539f\u6765\u7684\u6a2a\u5750\u6807\u5c31\u53ef\u4ee5\u5f97\u5230\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\u516c\u5f0f\u4e86\u3002\n\n\u6839\u636e\u63a8\u5bfc\u516c\u5f0f\u7684\u8fc7\u7a0b\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u76f8\u540c\u7684\u65f6\u95f4\u5185\uff0c\u6240\u6709\u5bfc\u5f39\u4e0b\u843d\u7684\u9ad8\u5ea6\u662f\u76f8\u540c\u7684\uff0c\u4e0e\u6c34\u5e73\u521d\u901f\u5ea6\u548c\u8d28\u91cf\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\u6709\u7684\u4eba\u53ef\u80fd\u8ba4\u4e3a\u5b83\u4eec\u4e0b\u843d\u7684\u8f68\u8ff9\u5b58\u5728\u4ea4\u70b9\u5c31\u4f1a\u76f8\u649e\uff0c\u8fd9\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3a\u76f8\u649e\u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n1. \u5b83\u4eec\u6240\u5728\u7684\u4f4d\u7f6e\u4e3a\u540c\u4e00\u70b9\u3002\n2. \u5b83\u4eec\u5728**\u540c\u4e00\u65f6\u95f4**\u5230\u8fbe\u540c\u4e00\u70b9\u3002\n\n\u53c8\u56e0\u4e3a\u6240\u6709\u7684\u5bfc\u5f39\u540c\u65f6\u5f00\u59cb\u964d\u843d\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e24\u4e2a\u5bfc\u5f39\uff0c\u53ea\u6709\u5b83\u4eec\u521d\u59cb\u4f4d\u7f6e\u5728\u540c\u4e00\u9ad8\u5ea6\u4e0a\uff0c\u5b83\u4eec\u624d\u6709\u53ef\u80fd\u76f8\u649e\u3002\n\n\u5728\u505a\u9898\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6240\u6709\u5bfc\u5f39\u6309\u7167\u7eb5\u5750\u6807\u6392\u5e8f\uff0c\u5c06\u7eb5\u5750\u6807\u76f8\u540c\u7684\u5bfc\u5f39\u653e\u5728\u4e00\u8d77\u8ba8\u8bba\u662f\u5426\u4f1a\u76f8\u649e\u5373\u53ef\u3002\n\n```cpp\nbool cmp1(Node1 x,Node1 y){\n\tif(x.y!=y.y)\n\t\treturn x.y<y.y; //\u5148\u6392\u7eb5\u5750\u6807\n\telse if(x.x==y.x)\n\t\treturn x.to<y.to; //\u6a2a\u5750\u6807\u76f8\u540c\uff0c\u5c06\u843d\u70b9\u9760\u53f3\u7684\u653e\u5728\u53f3\u8fb9\uff08\u89c1\u6587\u672b\u7ec6\u8282\u90e8\u5206\uff09\n\telse\n\t\treturn x.x<y.x; //\u6a2a\u5750\u6807\u6392\u5e8f\n}\nsort(mis+1,mis+1+n,cmp1); //\u5bfc\u5f39\u6309\u7167\u7eb5\u5750\u6807\u6392\u5e8f\nfor(int i=1;i<=n;i++){\n    bot[++nxt].num=mis[i].i; //bot[]\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2d\u5b58\u50a8\u7740\u7eb5\u5750\u6807\u76f8\u540c\u7684\u5bfc\u5f39\u4fe1\u606f\u3002\n    bot[nxt].to=mis[i].to;\n    if(mis[i].y!=mis[i+1].y){ \n        get_pair(1,nxt); //\u6c42\u89e3\u51fd\u6570\n        nxt=0;\n        continue;\n    }\n}\n```\n\n## \u6a21\u5757\u4e09\uff1a\u5224\u65ad\u4e24\u5bfc\u5f39\u662f\u5426\u4f1a\u76f8\u649e\n\n\u7531\u5e73\u629b\u8fd0\u52a8\u7279\u70b9\u53ca\u63a8\u5bfc\u516c\u5f0f\u53ef\u77e5\uff0c\u5e73\u629b\u8fd0\u52a8\u4e2d\u4e24\u4e2a\u5bfc\u5f39\u6c34\u5e73\u8fd0\u52a8\u65b9\u5411\u662f\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u4f1a\u8d70\u7740\u8d70\u7740\u8c03\u4e2a\u5934\uff0c\u6240\u4ee5\u4e00\u679a\u5bfc\u5f39\u8fd0\u52a8\u6a2a\u5750\u6807\u5de6\u53f3\u65ad\u70b9\u4e3a\u521d\u59cb\u6a2a\u5750\u6807\u548c\u843d\u5730\u70b9\u7684\u6a2a\u5750\u6807\u3002\n\n\u6839\u636e\u6a21\u5757\u4e8c\uff0c\u6211\u4eec\u901a\u8fc7\u5bfc\u5f39\u7684\u521d\u59cb\u4f4d\u7f6e\u8ba1\u7b97\u51fa\u4e86\u5bfc\u5f39\u7684\u843d\u70b9\u4f4d\u7f6e\uff0c\u5047\u8bbe\u5bfc\u5f39 $i$ \u548c $j$ \uff0c\u5b83\u4eec\u7684\u521d\u59cb\u4f4d\u7f6e\u6ee1\u8db3\u5173\u7cfb $x_i \\le x_j$\uff0c\u5e76\u4e14\u843d\u70b9\u4f4d\u7f6e\u6ee1\u8db3 $to_i \\ge to_j$ \uff0c\u8bf4\u660e\u4e24\u4e2a\u5bfc\u5f39\u5728\u53d1\u5c04\u8fc7\u7a0b\u4e2d\u76f8\u649e\u4e86\u3002\u56fe\u793a\uff1a\n\n![\u5e73\u629b\u78b0\u649e\u5224\u5b9a](https://laoguantx.top/article/solution-P8593/1.png)\n\n\u6240\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u5bfc\u5f39\u5230\u8fbe\u5730\u9762\u65f6\u7684\u5a01\u529b\u503c\u5c31\u662f\u8ba1\u7b97\u6ee1\u8db3\u4e0a\u8ff0\u5173\u7cfb\u7684\u542b\u6709\u8be5\u5bfc\u5f39\u7f16\u53f7\u7684\u6709\u5e8f\u6570\u5bf9 $(i,j)$ \u6709\u591a\u5c11\uff08\u4f60\u5f53\u7136\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u6c42\u89e3\uff09\u3002\n\n\u662f\u4e0d\u662f\u5f88\u50cf\u9006\u5e8f\u5bf9\u5462\uff1f\n\n## \u6a21\u5757\u56db\uff1a\u5f52\u5e76\u6392\u5e8f\u6c42\u5bfc\u5f39\u5a01\u529b\u503c\n\n\u6811\u72b6\u6570\u7ec4\u7684\u6c42\u6cd5\u4e0d\u662f\u4e0d\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u6211\u8fd8\u662f\u4f7f\u7528\u4e86\u5f52\u5e76\u6392\u5e8f\u3002\n\n\u524d\u63d0\u662f\u6211\u4eec\u5f97\u5230\u4e86\u8be5\u7eb5\u5750\u6807\u4e0b\u7684\u6240\u6709\u5bfc\u5f39\uff0c\u5e76\u5bf9\u5176\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u8981\u6c42\u662f\u7a33\u5b9a\u6392\u5e8f\uff0c\u9632\u6b62\u7279\u6b8a\u60c5\u51b5\u53d1\u751f\uff08\u89c1\u7ec6\u8282\u90e8\u5206\uff09\u3002\u5229\u7528\u6c42\u9006\u5e8f\u5bf9\u7684\u601d\u60f3\uff0c\u4ee5\u5bfc\u5f39\u521d\u59cb\u7684\u6a2a\u5750\u6807\u987a\u5e8f\u505a\u7f16\u53f7\uff0c\u4ee5\u843d\u70b9\u4f4d\u7f6e\u6a2a\u5750\u6807\u4f5c\u4e3a\u503c\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\u3002\u5c06\u5f52\u5e76\u6392\u5e8f\u7684\u6846\u67b6\u5199\u597d\uff0c\u6bcf\u5f53\u6211\u4eec\u4ea4\u6362\u4e86\u4e00\u6b21\u987a\u5e8f\uff0c\u8bf4\u660e\u8fd9\u9897\u5bfc\u5f39\u53d1\u751f\u4e86\u4e00\u6b21\u78b0\u649e\uff0c\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\u3002\n\n```cpp\nvoid get_pair(int l,int r){ //\u6309\u7167\u843d\u70b9\n\tint mid=(l+r)>>1;\n\tif(l>=r)\treturn;\n\tget_pair(l,mid);\n\tget_pair(mid+1,r); //\u9012\u5f52\u6c42\u89e3\n\tint p1=l,p2=mid+1,p=l,cnt=0;\n\twhile(p1<=mid&&p2<=r){\n\t\tif(bot[p1].to<bot[p2].to){\n\t\t\tf[bot[p1].num]+=cnt; //cnt\u4f5c\u7528\u89c1\u4e0b\uff0cf[]\u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u5bfc\u5f39\u5a01\u529b\u503c\n\t\t\ttemp[p++]=bot[p1++];\n\t\t}\n\t\telse{\n\t\t\tcnt++; //\u56e0\u4e3a\u5728\u5f52\u5e76\u6392\u5e8f\u4e2d\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206\u5206\u522b\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u53f3\u534a\u90e8\u5206\u7684\u5bfc\u5f39\u4e0e\u5de6\u534a\u90e8\u5206\u7684\u4e00\u4e2a\u5bfc\u5f39\u76f8\u649e\uff0c\u90a3\u4e48\u5b83\u4f1a\u4e0e\u76f8\u649e\u5bfc\u5f39\u7684\u53f3\u8fb9\u6240\u6709\u5bfc\u5f39\u90fd\u76f8\u649e\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86cnt\u6765\u7ef4\u62a4\u540e\u9762\u5bfc\u5f39\u7684\u76f8\u649e\u6b21\u6570\u3002\n\t\t\tf[bot[p2].num]+=mid-p1+1;\n\t\t\ttemp[p++]=bot[p2++];\n\t\t}\n\t}\n\twhile(p1<=mid){\n\t\tf[bot[p1].num]+=cnt;\n\t\ttemp[p++]=bot[p1++];\n\t}\n\twhile(p2<=r)\n\t\ttemp[p++]=bot[p2++];\n\tfor(int i=l;i<=r;i++){\n\t\tbot[i]=temp[i];\n\t}\n\treturn;\n}\n```\n\n## \u6a21\u5757\u4e94\uff1a\u6574\u7406\u7b54\u6848\n\n\u6700\u540e\u8ba1\u7b97\u51fa\u4f7f\u7528\u6bcf\u4e2a\u53cd\u5236\u6b66\u5668\u6700\u5c11\u53ef\u4ee5\u51cf\u53bb\u591a\u5c11\u5a01\u529b\u503c\uff0c\u5e76\u8fdb\u884c\u6392\u5e8f\uff0c\u8d2a\u5fc3\u4f7f\u7528\u6700\u5927\u7684 $m$ \u4e2a\u53cd\u5236\u6b66\u5668\u5e76\u8ba1\u7b97\u6700\u7ec8\u7b54\u6848\u5373\u53ef\u3002\n\n```cpp\nbool cmp2(Node1 x,Node1 y){\n\treturn x.i<y.i;\n}\nbool cmp3(Node3 x,Node3 y){\n\treturn x.num>y.num;\n}\nsort(mis+1,mis+1+n,cmp2); //\u6574\u7406\u5bfc\u5f39\u5e8f\u53f7\nfor(int i=1;i<=n;i++){\n    read(a[i]);\n    if(a[i]>f[i]){ //\u8ba1\u7b97\u4f7f\u7528\u7b2ci\u4e2a\u53cd\u5236\u6b66\u5668\u7684\u4ef7\u503c\n        val[i].num=f[i];\n        val[i].i=i;\n    }\n    else{\n        val[i].num=a[i];\n        val[i].i=i;\n    }\n}\nsort(val+1,val+1+n,cmp3); //\u5bf9\u4ef7\u503c\u8fdb\u884c\u6392\u5e8f\u8d2a\u5fc3\nfor(int i=1;i<=m;i++)\n    vis[val[i].i]=1;\nfor(int i=1;i<=n;i++){\n    if(vis[i]==1)\n        if(a[i]>f[i])\n            ans+=0;\n    else\n        ans+=f[i]-a[i];\n    else\n        ans+=f[i];\n}\n```\n\n## \u7ec6\u8282\u90e8\u5206\n\n1. \u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\uff0c\u7ba1\u7406\u5458\u5bf9\u672c\u9898\u8fdb\u884c\u7684\u9898\u610f\u8865\u5145\uff1a**\u5728\u63a5\u89e6\u5230 $x$ \u8f74\u65f6\u78b0\u649e\u4e5f\u589e\u52a0\u5a01\u529b**\uff08\u8fd8\u6709\u4e00\u53e5\u662f**\u521d\u59cb\u4f4d\u7f6e\u76f8\u540c\u4e0d\u7b97\u78b0\u649e**\uff0c\u540e\u6765\u53c8\u5220\u53bb\u4e86\uff0c\u8fd9\u5c31\u662f\u6211\u4e3a\u4ec0\u4e48\u5728\u6392\u5e8f\u7684\u65f6\u5019\u8981\u628a\u843d\u70b9\u4f4d\u7f6e\u9760\u53f3\u7684\u7684\u70b9\u6392\u5e8f\u5728\u53f3\u8fb9\uff0c\u9632\u6b62\u5728\u629b\u51fa\u65f6\u5224\u65ad\u4e3a\u4e00\u6b21\u6709\u6548\u78b0\u649e\uff09\uff0c\u6240\u4ee5\u5728\u4e66\u5199\u4ee3\u7801\u5224\u65ad\u78b0\u649e\u7684\u65f6\u5019\u8981\u5e26\u4e0a\u7b49\u4e8e\u53f7\u3002\n2. \u5206\u6790\u6e05\u695a\u5f52\u5e76\u6392\u5e8f\u65f6\u5e94\u8be5\u5982\u4f55\u5904\u7406\u5bfc\u5f39\u5a01\u529b\u503c\u3002\n3. \u641e\u6e05\u695a\u53cd\u5236\u6b66\u5668\u662f\u600e\u4e48\u53bb\u8d2a\u5fc3\u7684\n4. \u6392\u5e8f\u524d\u540e\u7f16\u53f7\u4e00\u5b9a\u8981\u4e00\u4e00\u5bf9\u5e94\uff0c\u7075\u6d3b\u4f7f\u7528\u7ed3\u6784\u4f53\u3002\n\n# \u5b8c\u6574\u4ee3\u7801\n\n\u5b8c\u6574\u4ee3\u7801\u4e2d\u5305\u62ec\u5404\u79cd\u52a0\u901f\uff0c\u7814\u7a76\u65f6\u53ef\u4ee5\u5ffd\u7565\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace Fast{\n#define uint unsigned int\n#define ll long long\n#define ull unsigned long long\n#define int128 __int128\n#define uint128 unsigned __int128\n#define Ld long double\n#define space putchar(' ')\n#define enter putchar('\\n')\n#define PI acos(-1)\n#define pb(x) push_back(x)\n#define mp(a,b) make_pair(a,b)\n#define fi first\n#define se second\n#define pr(x) cerr<<#x<<\"=\"<<(x)<<\"\\n\"\n#define inf 1000000000\n#define INF 1000000000000000000\n#define N 1010\n#define M 500010\n\ttemplate<class T>inline bool read(T &x){\n\t\tx=0;char c=getchar();bool f=0;\n\t\twhile(!isdigit(c)){if(c==EOF)return false;f^=c=='-',c=getchar();}\n\t\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(f)x=-x;\n\t\treturn true;\n\t}\n\ttemplate<typename T>inline void print(T x){\n\t\tint s[65],top=0;\n\t\tif(x<0)putchar('-'),x=~x+1;\n\t\twhile(x)s[++top]=x%10,x/=10;\n\t\tif(!top)s[++top]=0;\n\t\twhile(top)putchar(s[top--]+'0');\n\t}\n\ttemplate<class T>inline bool readd(T &x){\n\t\tll X=0;double y=1.0;char c=getchar();bool f=0;\n\t\twhile(!isdigit(c)){if(c==EOF)return false;f^=c=='-',c=getchar();}\n\t\twhile(isdigit(c))X=(X<<3)+(X<<1)+(c^48),c=getchar();\n\t\tx=X;\n\t\tif(c!='.'&&c!='E'&&c!='e'){if(f)x=-x;return true;}\n\t\tif(c=='.'){c=getchar();while(isdigit(c))x+=(y/=10)*(c^48),c=getchar();}\n\t\tif(f)x=-x;\n\t\tX=0;f=0;\n\t\tif(c=='E'||c=='e'){\n\t\t\tc=getchar();\n\t\t\twhile(!isdigit(c)){if(c==EOF)return true;f^=c=='-',c=getchar();}\n\t\t\twhile(isdigit(c))X=(X<<3)+(X<<1)+(c^48),c=getchar();\n\t\t}\n\t\tif(f)for(ll i=1;i<=X;i++)x/=10;\n\t\telse for(ll i=1;i<=X;i++)x*=10;\n\t\treturn true;\n\t}\n\ttemplate<class T>inline void printd(T x,int y){\n\t\tstatic ll mul[]={1};\n\t\tfor(ll i=1;i<=18;i++)\n\t\t\tmul[i]=(mul[i-1]<<3)+(mul[i-1]<<1);\n\t\tif(x<-1e-12)putchar('-'),x=-x;\n\t\tx*=mul[y];\n\t\tll x1=(ll)round(x),x2=x1/mul[y],x3=x1-x2*mul[y];\n\t\tprint(x2);\n\t\tif(y>0){\n\t\t\tputchar('.');\n\t\t\tfor(ll i=1;i<y&&x3*mul[i]<mul[y];putchar('0'),i++);\n\t\t\tprint(x3);\n\t\t}\n\t}\n\ttemplate<class T>inline bool readc(T &x){\n\t\tchar c=getchar();\n\t\twhile(c==' '||c=='\\n'||c=='\\r'||c=='\\t')c=getchar();\n\t\tif(c==EOF)return false;\n\t\tx=c;\n\t\treturn true;\n\t}\n\ttemplate<class T>inline void printc(T x){putchar(x);}\n\ttemplate<class T>inline bool readcc(T *x){\n\t\tchar c=getchar();\n\t\twhile(c==' '||c=='\\n'||c=='\\r'||c=='\\t')c=getchar();\n\t\tif(c==EOF)return false;\n\t\twhile(c!=' '&&c!='\\n'&&c!='\\r'&&c!='\\t'&&c!=EOF)*x++=c,c=getchar();\n\t\t*x=0;\n\t\treturn true;\n\t}\n\ttemplate<class T>inline void printcc(T *x){while(*x)putchar(*x++);}\n\ttemplate<class T>inline bool reads(T &x){\n\t\tx=\"\";char c=getchar();\n\t\twhile(c==' '||c=='\\n'||c=='\\r'||c=='\\t')c=getchar();\n\t\tif(c==EOF)return false;\n\t\twhile(c!=' '&&c!='\\n'&&c!='\\r'&&c!='\\t'&&c!=EOF)x+=c,c=getchar();\n\t\treturn true;\n\t}\n\ttemplate<class T>inline void prints(T x){for(ll i=0;x[i]!='\\0';i++)putchar(x[i]);}\n\ttemplate<class T,class ...S>inline bool read(T &x,S &...y){return read(x)&&read(y...);}\n\ttemplate<class T,class ...S>inline bool readd(T &x,S &...y){return readd(x)&&readd(y...);}\n\ttemplate<class T,class ...S>inline bool readc(T &x,S &...y){return readc(x)&&readc(y...);}\n\ttemplate<class T,class ...S>inline bool readcc(T *x,S *...y){return readcc(x)&&readcc(y...);}\n\ttemplate<class T,class ...S>inline bool reads(T &x,S &...y){return reads(x)&&reads(y...);}\n\ttemplate<class T,class ...S>inline void print(T x,S ...y){print(x),putchar(' '),print(y...);}\n\ttemplate<class T,class ...S>inline void printd(T x,S ...y){printd(x),putchar(' '),printd(y...);}\n\ttemplate<class T,class ...S>inline void printc(T x,S ...y){printc(x),putchar(' '),printc(y...);}\n\ttemplate<class T,class ...S>inline void printcc(T *x,S *...y){printcc(x),putchar('\\n'),printcc(y...);}\n\ttemplate<class T,class ...S>inline void prints(T x,S ...y){prints(x),putchar('\\n'),prints(y...);}\n\tconst double eps=1e-7;\n\ttemplate<typename T>inline T Abs(T x){return x>0?x:-x;}\n\ttemplate<typename T>inline T Max(T x,T y){return x>y?x:y;}\n\ttemplate<typename T>inline T Min(T x,T y){return x<y?x:y;}\n\ttemplate<typename T>inline T Fabs(T x){return x>eps?x:-x;}\n\ttemplate<typename T>inline T Fmax(T x,T y){return x-y>eps?x:y;}\n\ttemplate<typename T>inline T Fmin(T x,T y){return x-y<eps?x:y;}\n}\nusing namespace Fast;\nstruct Node1{\n\tll x,y,v,p,i;\n\tdouble to;\n}mis[M];\nstruct Node2{\n\tll num;\n\tdouble to;\n}bot[M],temp[M];\nstruct Node3{\n\tll i,num;\n}val[M];\nll n,m,nxt;\null ans,f[M],a[M];\nbool vis[M];\ndouble t;\nbool cmp1(Node1 x,Node1 y){\n\tif(x.y!=y.y)\n\t\treturn x.y<y.y;\n\telse if(x.x==y.x)\n\t\treturn x.to<y.to;\n\telse\n\t\treturn x.x<y.x;\n}\nbool cmp2(Node1 x,Node1 y){\n\treturn x.i<y.i;\n}\nbool cmp3(Node3 x,Node3 y){\n\treturn x.num>y.num;\n}\nvoid get_pair(int l,int r){\n\tint mid=(l+r)>>1;\n\tif(l>=r)\treturn;\n\tget_pair(l,mid);\n\tget_pair(mid+1,r);\n\tint p1=l,p2=mid+1,p=l,cnt=0;\n\twhile(p1<=mid&&p2<=r){\n\t\tif(bot[p1].to<bot[p2].to){\n\t\t\tf[bot[p1].num]+=cnt;\n\t\t\ttemp[p++]=bot[p1++];\n\t\t}\n\t\telse{\n\t\t\tcnt++;\n\t\t\tf[bot[p2].num]+=mid-p1+1;\n\t\t\ttemp[p++]=bot[p2++];\n\t\t}\n\t}\n\twhile(p1<=mid){\n\t\tf[bot[p1].num]+=cnt;\n\t\ttemp[p++]=bot[p1++];\n\t}\n\twhile(p2<=r)\n\t\ttemp[p++]=bot[p2++];\n\tfor(int i=l;i<=r;i++){\n\t\tbot[i]=temp[i];\n\t}\n\treturn;\n}\nint main(){\n//\tfreopen(\"missile4.in\",\"r\",stdin);\n//\tfreopen(\"a.out\",\"w\",stdout);\n\tread(n,m);\n\tfor(int i=1;i<=n;i++){\n\t\tread(mis[i].x,mis[i].y,mis[i].v);\n\t\tmis[i].i=i;\n\t\tt=sqrt((2.0*mis[i].y)/9.8);\n\t\tmis[i].to=(double)mis[i].x+(double)mis[i].v*t;\n\t}\n\tsort(mis+1,mis+1+n,cmp1);\n\tfor(int i=1;i<=n;i++){\n\t\tbot[++nxt].num=mis[i].i;\n\t\tbot[nxt].to=mis[i].to;\n\t\tif(mis[i].y!=mis[i+1].y){\n\t\t\tget_pair(1,nxt);\n\t\t\tnxt=0;\n\t\t\tcontinue;\n\t\t}\n\t}\n\tsort(mis+1,mis+1+n,cmp2);\n\tfor(int i=1;i<=n;i++){\n\t\tread(a[i]);\n\t\tif(a[i]>f[i]){\n\t\t\tval[i].num=f[i];\n\t\t\tval[i].i=i;\n\t\t}\n\t\telse{\n\t\t\tval[i].num=a[i];\n\t\t\tval[i].i=i;\n\t\t}\n\t}\n\tsort(val+1,val+1+n,cmp3);\n\tfor(int i=1;i<=m;i++)\n\t\tvis[val[i].i]=1;\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[i]==1)\n\t\t\tif(a[i]>f[i])\n\t\t\t\tans+=0;\n\t\t\telse\n\t\t\t\tans+=f[i]-a[i];\n\t\telse\n\t\t\tans+=f[i];\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```\n\n\u6709\u95ee\u9898\u662f\u96be\u514d\u7684\uff0c\u8bf7\u4e0d\u8981\u5ba2\u6c14\u5730\u5728\u8bc4\u8bba\u533a\u6307\u51fa\u3002",
        "postTime": 1666525928,
        "uid": 135999,
        "name": "\u8001\u5b98\u7ae5\u978bgogo",
        "ccfLevel": 5,
        "title": "P8593 \u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295 \u9898\u89e3"
    },
    {
        "content": "~~\u771f\u662f\u6ca1\u60f3\u5230\u4f1a\u9047\u89c1\u7269\u7406\u9898~~\n\n\n## \u7269\u7406\u77e5\u8bc6\n\n\u6211\u4eec\u5c06\u6b66\u5668\u770b\u4f5c\u4e00\u4e2a\u4e2a\u8d28\u70b9\uff0c\u56e0\u4e3a\u6240\u6709\u8d28\u70b9\u90fd\u662f\u540c\u65f6\u51fa\u53d1\uff0c\u5e76\u4e14\u7ad6\u76f4\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\u76f8\u540c\uff0c\u6240\u4ee5\u5b83\u4eec\u5728\u7ad6\u76f4\u65b9\u5411\u4e0a\u662f\u76f8\u5bf9\u9759\u6b62\u7684\u3002\u56e0\u6b64\uff0c\u521d\u59cb\u9ad8\u5ea6\u76f8\u540c\u7684\u8d28\u70b9\u624d\u6709\u53ef\u80fd\u53d1\u751f\u78b0\u649e\u3002\n\n\u521d\u59cb\u9ad8\u5ea6\u76f8\u540c\u7684\u70b9\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u53d1\u751f\u78b0\u649e\uff1f\u6211\u4eec\u53ef\u4ee5\u5148\u7b97\u51fa\u6bcf\u4e00\u4e2a\u8d28\u70b9\u5bf9\u5e94\u7684\u843d\u70b9\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8d28\u70b9 $i$ \uff0c\u6211\u4eec\u8bb0\u5b83\u7684\u8d77\u59cb\u4f4d\u7f6e\u7684\u6a2a\u5750\u6807\u4e3a $x_{i}$ \uff0c\u843d\u70b9\u7684\u6a2a\u5750\u6807\u4e3a    $x_{i}^{'}$ \u3002\u7531\u4e8e\u5728\u6c34\u5e73\u65b9\u5411\u4e0d\u53d7\u529b\u7684\u4f5c\u7528\uff0c\u662f\u5300\u901f\u76f4\u7ebf\u8fd0\u52a8\uff0c\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\u6bcf\u4e00\u4e2a\u8d28\u70b9\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u7684\u4f4d\u79fb\u65f6\u95f4\u56fe\u50cf\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u521d\u59cb\u9ad8\u5ea6\u76f8\u540c\u7684\u8d28\u70b9 $i$ \u548c $j$ \uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u8fd9\u91cc\u8ba4\u4e3a $x_i<x_j$ \uff09\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u7684\u4f4d\u79fb\u65f6\u95f4\u56fe\u50cf\u5b58\u5728\u4ea4\u70b9\u65f6\u624d\u4f1a\u76f8\u9047\uff0c\u5e76\u4e14\u53ea\u4f1a\u76f8\u9047\u4e00\u6b21\u3002\u6216\u8005\u8bf4\uff0c\u53ea\u6709\u5f53 $x_i<x_j$ \u5e76\u4e14 $x_{i}^{'}>x_{j}^{'}$ \u65f6\uff0c\u4e24\u4e2a\u70b9\u624d\u4f1a\u76f8\u9047\uff0c\u5e76\u4e14\u53ea\u76f8\u9047\u4e00\u6b21\u3002\n\n\u4e0b\u9762\u662f\u7b80\u5355\u7684\u793a\u610f\u56fe\uff08\u753b\u7684\u4e0d\u597d\u89c1\u8c05\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/aytacsmb.png) ![](https://cdn.luogu.com.cn/upload/image_hosting/vhreij51.png)\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u6309\u7167 $y$ \u7684\u503c\u628a\u8f93\u5165\u5206\u7ec4\uff0c\u5bf9\u6bcf\u4e00\u7ec4\u6309 $x_i$ \u6392\u5e8f\uff0c\u6211\u4eec\u6b63\u7740\u904d\u5386\uff0c\u5c06  $x_{i}^{'}$ \u63d2\u5165\u5e73\u8861\u6811\uff0c\u7531\u6b64\u53ef\u4ee5\u7edf\u8ba1\u51fa $x$ \u5c0f\u4e8e $x_i$ \u7684\u8d28\u70b9\u5bf9 $i$ \u5a01\u529b\u7684\u8d21\u732e\uff08\u5373\u6709\u591a\u5c11\u4e2a $x^{'}$ \u5c0f\u4e8e $x_{i}^{'}$ \uff09\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u6c42\u4e86\u4e00\u4fa7\u7684\u8d21\u732e\uff0c\u6211\u4eec\u9700\u8981\u5012\u8fc7\u6765\u518d\u91cd\u590d\u4e00\u6b21\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u6bcf\u4e00\u4e2a\u8d28\u70b9\u7684\u5a01\u529b\u3002\n\n\u6211\u4eec\u8ba1\u7b97\u51fa\u6240\u6709\u8d28\u70b9\u7684\u5a01\u529b\u548c\uff0c\u542f\u52a8\u53cd\u5236\u6b66\u5668\u51cf\u5c0f\u7684\u5a01\u529b\u5c31\u662f\u53cd\u5236\u6b66\u5668\u7684\u6548\u679c\u548c\u8d28\u70b9\u5a01\u529b\u7684\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u5bf9\u51cf\u5c0f\u7684\u5a01\u529b\u6392\u5e8f\uff0c\u9009\u51fa\u524d $m$ \u5927\u7684\u5373\u53ef\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\u3002\n\n```cpp\n//#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#define rint register int\n#define LL long long int\nusing namespace std;\ninline int read()\n{\n\tint x = 0, ff = 1; char s = getchar();\n\twhile (s < '0' || s > '9') { if (s == '-') ff = -ff; s = getchar(); }\n\twhile (s >= '0' && s <= '9') { x = x * 10 + s - '0'; s = getchar(); }\n\treturn x * ff;\n}\ndouble eps=1e-5;\nstruct ND\n{\n\tint l,r,sz,key;\n\tdouble val;\n\t#define l(x) tree[x].l\n\t#define r(x) tree[x].r\n\t#define sz(x) tree[x].sz\n\t#define val(x) tree[x].val\n\t#define key(x) tree[x].key\n}tree[1000005];\nint tot;\ninline void newnode(int p,double val)\n{\n\tval(p)=val;\n\tsz(p)=1;key(p)=rand();\n\tl(p)=r(p)=0;\n}\ninline void pushup(int p)\n{\n\tsz(p)=sz(l(p))+sz(r(p))+1;\n}\nint combine(int x,int y)\n{\n\tif(x==0||y==0)return x+y;\n\tif(key(x)<key(y))\n\t{\n\t\tr(x)=combine(r(x),y);\n\t\tpushup(x);\n\t\treturn x;\n\t}\n\telse\n\t{\n\t\tl(y)=combine(x,l(y));\n\t\tpushup(y);\n\t\treturn y;\n\t}\n}\nvoid split(int p,double val,int &x,int &y)\n{\n\tif(p==0)\n\t{\n\t\tx=y=0;\n\t\treturn ;\n\t}\n\tif(val(p)<=val)\n\t{\n\t\tx=p;\n\t\tsplit(r(p),val,r(p),y);\n\t}\n\telse\n\t{\n\t\ty=p;\n\t\tsplit(l(p),val,x,l(p));\n\t}\n\tpushup(p);\n}\nint n,m,a[500005],del[500005];\ndouble G=9.8;\nstruct node\n{\n\tint x,y,v,id;\n\tdouble tx;\n}at[500005];\nmap<int,int>has;\nvector<node>st[500005];\ninline bool cmp(node &x,node &y)\n{\n\treturn x.x<y.x;\n}\nint root;\ninline int calc1(double val)\n{\n\tint tmp1;\n\tsplit(root,val+eps*2,root,tmp1);\n\tint res=sz(tmp1);\n\troot=combine(root,tmp1);\n\treturn res;\n}\ninline int calc2(double val)\n{\n\tint tmp1;\n\tsplit(root,val-eps*2,root,tmp1);\n\tint res=sz(root);\n\troot=combine(root,tmp1);\n\treturn res;\n}\ninline void insert(double val)\n{\n\tint tmp=0;\n\tsplit(root,val,root,tmp);\n\tnewnode(++tot,val);\n\t//cout<<root<<\" \"<<tmp<<\" \"<<\n\troot=combine(root,tot);\n\troot=combine(root,tmp);\n}\ninline void solve(int num)\n{\n\tsort(st[num].begin(),st[num].end(),cmp);\n\trint i,j,len=st[num].size();\n\troot=0;tot=0;\n\tfor(i=0;i<len;i++)\n\t{\n\t\t//cout<<\"! \"<<st[num][i].tx<<endl;\n\t\t//cout<<root<<endl;\n\t\t//cout<<\"F\\n\";\n\t\tdel[st[num][i].id]+=calc1(st[num][i].tx);\n\t\t//cout<<\"K\\n\";\n\t\tinsert(st[num][i].tx);\n\t}\n\troot=0;tot=0;\n\tfor(i=len-1;i>=0;i--)\n\t{\n\t\tdel[st[num][i].id]+=calc2(st[num][i].tx);\n\t\tinsert(st[num][i].tx);\n\t}\n}\npriority_queue<int>R;\nint main()\n{\n\t//freopen(\"missile4.in\",\"r\",stdin);\n\t//freopen(\"out.out\",\"w\",stdout);\n\tsrand(time(0));\n\trint i,j,M;\n\tcin>>n>>m;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tat[i].x=read();at[i].y=read();\n\t\tat[i].v=read();at[i].tx=at[i].x+1.0*at[i].v*sqrt(2.0*at[i].y/G);\n\t\tat[i].id=i;\n\t\tif(has[at[i].y]==0)\n\t\t{\n\t\t\thas[at[i].y]=++tot;\n\t\t}\n\t\tst[has[at[i].y]].push_back(at[i]);\n\t}\n\tfor(i=1;i<=n;i++)a[i]=read();\n\tM=tot;\n\t//cout<<tot<<endl;\n\tfor(i=1;i<=M;i++)\n\t{\n\t\tsolve(i);\n\t}\n\tLL sum=0;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tsum+=del[i];\n\t\tR.push(min(del[i],a[i]));\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tsum-=R.top();\n\t\tR.pop();\n\t}\n\tcout<<sum<<endl;\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1666522660,
        "uid": 70712,
        "name": "CHNZhang",
        "ccfLevel": 0,
        "title": "\u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295\u9898\u89e3"
    },
    {
        "content": "### \u524d\u8a00\n\n\u611f\u89c9\u5c5e\u4e8e\u4fe1\u7ade\u548c\u7269\u7406\u7684\u7f1d\u5408\uff0c~~\u6015\u4e0d\u662f\u5b66\u957f\u88ab\u7269\u7406\u8650\u7684\u592a\u60e8\u4e86\u7684\u62a5\u590d\uff1f~~\n\n\u6bd4\u8d5b\u65f6\u95f4\u649e\u4e86\u6821\u5185\u6a21\u62df\u8d5b\uff0c\u7136\u540e\u8fd9\u573a\u6ca1\u6253\uff0c\u4e0d\u7136\u81f3\u5c11\u80fd\u8fc7\u8fd9\u9898\u3002\n\n### \u6b63\u6587\n\n\u9898\u610f\u6709\u70b9\u6655\u4e4e\uff0c\u5927\u6982\u5c31\u662f\u8bf4\uff0c\u6709 $n$ \u4e2a\u5bfc\u5f39\uff0c\u5404\u81ea\u4ece $(x_i,y_i)$ \u5f00\u59cb\u5e73\u629b\u8fd0\u52a8\uff0c\u5f53\u4e24\u4e2a\u5bfc\u5f39\u649e\u4e00\u8d77\u65f6\uff0c\u6740\u4f24\u529b\u52a0\u5927\u4e00\u4e2a\u3002\n\n\u7136\u540e\u6709\u9632\u5fa1\u63aa\u65bd\uff0c\u95ee\u600e\u6837\u9632\u62a4\u6700\u4f18\uff0c\u8f93\u51fa\u53d7\u5230\u6700\u5c0f\u6740\u4f24\u529b\u3002\n\n\u9898\u76ee\u7ed9\u4e86\u4e2a\u5e73\u629b\u843d\u70b9\u516c\u5f0f\uff0c\u4f46\u5b9e\u9645\u4e0a\u6ca1\u6709\u592a\u5927\u7528\u5904\uff1a\n$$\nx_t=x_i+v_i\\sqrt{\\dfrac{2y_i}g}\n$$\n\n\u9996\u5148\u8003\u8651\u4e24\u4e2a\u5bfc\u5f39\u548b\u649e\u4e0a\uff0c\u8fd9\u91cc\u9700\u8981\u4e00\u70b9\u7269\u7406\u77e5\u8bc6\uff08\n\n\u5e73\u629b\u8fd0\u52a8\u7684\u8fd0\u52a8\u8f68\u8ff9\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u7269\u4f53\u672c\u8eab\u7684\u901f\u5ea6 $v_i$ \u548c\u81ea\u7531\u843d\u4f53\u7684\u901f\u5ea6\u7684\u5408\u901f\u5ea6\uff0c\u663e\u7136\u53d1\u73b0\u6bcf\u4e2a\u5bfc\u5f39\u4ed6\u4eec\u6bcf\u65f6\u6bcf\u523b\u81ea\u7531\u843d\u4f53\u7684\u901f\u5ea6\u5565\u5565\u90fd\u4e00\u6837\uff08\u9664\u975e\u843d\u5730\uff09\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c$y_i$ \u672c\u6765\u5c31\u4e0d\u7b49\u7684\uff0c\u9664\u975e\u6389\u5230 $x$ \u8f74\uff0c\u90fd\u4e0d\u4f1a\u76f8\u7b49\uff1b$y_i$ \u672c\u6765\u5c31\u76f8\u7b49\u7684\uff0c\u4e00\u76f4\u90fd\u4f1a\u76f8\u7b49\u3002\n\n\u5269\u4e0b\u5c31\u8981\u8003\u8651 $x_i$\u3002\n\n\u6211\u4eec\u6765\u6574\u4e2a\u56fe\u770b\u770b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p46cy65p.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/dgppc1jh.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/wb96ityo.png)\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u843d\u5730\u540e\u4e24\u70b9\u7684\u5148\u540e\u987a\u5e8f\u6539\u53d8\uff0c\u5219\u5fc5\u5b9a\u4ea7\u751f\u4e00\u4e2a\u4ea4\u70b9\u3002\n\n\u5982\u4f55\u8ba1\u7b97\u5462\uff1f\u9006\u5e8f\u5bf9\u3002\n\n\u5c06 $y_i$ \u76f8\u540c\u7684\u6309 $x_i$ \u6392\u5e8f\uff0c\u8bb0\u5f55\u7f16\u53f7\uff0c\u518d\u6c42\u51fa\u843d\u70b9 $u_i$\uff0c\u6392\u5e8f\uff08\u90a3\u4e2a\u516c\u5f0f\u5c31\u5728\u8fd9\u7528\u4e00\u4e0b\uff09\uff0c\u6700\u540e\u76f4\u63a5\u7b97\u9006\u5e8f\u5bf9\u5373\u53ef\u3002",
        "postTime": 1666521984,
        "uid": 575994,
        "name": "Etinorally",
        "ccfLevel": 5,
        "title": "P8593"
    },
    {
        "content": "# \u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295\n\n[Luogu P8593](https://www.luogu.com.cn/problem/P8593)\n\n## Solution\n\n~~\u4f60\u7ba1\u8fd9\u53eb CSP-S \u6a21\u62df\u8d5b\uff1f\u660e\u660e\u5c31\u662f\u7701\u9009 Day1\uff08~~\n\n\u5176\u5b9e\u611f\u89c9\u8fd9\u9053\u9898\u51fa\u7684\u8fd8\u662f\u5f88\u4e0d\u9519\uff0c\u4e0d\u8fc7\u53ef\u80fd\u653e\u5728 T1 \u7684\u4f4d\u7f6e\u6709\u70b9\u529d\u9000\u4e86\u3002\n\n\u5148\u89c2\u5bdf\u9898\u76ee\u7684\u6027\u8d28\uff0c\u5982\u679c\u4f60\u5b66\u8fc7\u81ea\u7531\u843d\u4f53\u8fd0\u52a8\u7684\u8bdd\u5c31\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u4e24\u4e2a\u7269\u4f53\u7684\u8d77\u59cb\u4f4d\u7f6e\u4e0d\u76f8\u540c\u7684\u8bdd\uff0c\u4e8c\u8005\u5728\u81ea\u7531\u843d\u4f53\u7684\u65f6\u5019\u7684\u9ad8\u5ea6\u5dee\u4e00\u76f4\u90fd\u4f1a\u6052\u5b9a\u4e0d\u53d8\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u53ea\u6709\u76f8\u540c\u9ad8\u5ea6\u7684\u5bfc\u5f39\u624d\u4f1a\u78b0\u649e\u589e\u52a0\u5a01\u529b\u3002\u6240\u4ee5\u8003\u8651\u5c06\u539f\u6765\u7684\u5e8f\u5217\u6309\u7167 $y$ \u5206\u7c7b\uff0c\u4f46\u662f\u4f1a\u53d1\u73b0 $y$ \u7684\u503c\u57df\u5f88\u5927\uff0c\u5728 $10^9$ \u7684\u8303\u56f4\uff0c\u6240\u4ee5\u76f4\u63a5\u5f00\u6876\u4e0d\u5408\u9002\uff0c\u9700\u8981\u79bb\u6563\u5316\u4e00\u4e0b\u518d\u5b58\u50a8\u3002\n\n\u505a\u5b8c\u8fd9\u4e00\u6b65\u540e\u6211\u4eec\u5c31\u901a\u8fc7\u9ad8\u5ea6\u6765\u5bf9\u53ef\u80fd\u78b0\u649e\u7684\u5bfc\u5f39\u8fdb\u884c\u4e86\u5206\u7c7b\uff0c\u73b0\u5728\u6765\u8003\u8651\u5bf9\u4e8e\u540c\u4e00\u7c7b\u4e2d\u7684\u5bfc\u5f39\u8be5\u5982\u4f55\u8ba1\u7b97\u53ef\u80fd\u7684\u78b0\u649e\u3002\u56e0\u4e3a\u76f8\u540c\u9ad8\u5ea6\u7684\u5bfc\u5f39\u6389\u4e0b\u6765\u5728\u76f8\u540c\u65f6\u95f4\u5185\u4e0b\u843d\u7684\u9ad8\u5ea6\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5982\u679c\u4e24\u4e2a\u5bfc\u5f39\u7684\u98de\u884c\u8def\u7ebf\u6709\u76f8\u4ea4\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5bfc\u5f39\u5c06\u4e00\u5b9a\u4f1a\u78b0\u649e\u3002\n\n\u5230\u4e86\u8fd9\u4e00\u6b65\u5176\u5b9e\u5c31\u79bb\u7b54\u6848\u4e0d\u8fdc\u4e86\u3002\u8003\u8651\u600e\u4e48\u5224\u65ad\u4e24\u4e2a\u5bfc\u5f39\u662f\u5426\u76f8\u4ea4\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u4e24\u4e2a\u5bfc\u5f39\u76f8\u4ea4\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5bfc\u5f39\u7684\u8d77\u59cb\u70b9 $x_1,x_2$ \u548c\u843d\u70b9 $d_1,d_2$ \u4e00\u5b9a\u9700\u8981\u6ee1\u8db3 $x_1<x_2$ \u4e14 $d_1>d_2$\uff08\u6216\u8005\u662f $x_1>x_2$ \u4e14 $d_1<d_2$\uff09\u3002\u8fd9\u4e0d\u5c31\u662f\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u7684\u6a21\u677f\u4e86\u561b\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6c42\u5bfc\u5f39\u5a01\u529b\u7684\u65b9\u6cd5\uff0c\u4e8c\u7ef4\u504f\u5e8f\u5c31\u76f4\u63a5\u6392\u5e8f\u540e\u987a\u7740\u548c\u5012\u7740\u8dd1\u4e00\u4e0b\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u4e86\uff08\u9700\u8981\u6ce8\u610f $x$ \u7684\u503c\u57df\u4e5f\u5f88\u5927\uff0c\u6240\u4ee5\u5bf9 $x$ \u4e5f\u9700\u8981\u79bb\u6563\u5316\u4e00\u4e0b\uff09\u3002\n\n\u7ef4\u62a4\u51fa\u4e86\u5bfc\u5f39\u7684\u5a01\u529b\uff0c\u90a3\u4e48\u5bf9\u7b54\u6848\u7684\u6c42\u89e3\u4e5f\u5c31\u4e0d\u96be\u4e86\uff0c\u76f4\u63a5\u8d2a\u5fc3\u9009\u62e9\u51cf\u5c11\u5a01\u529b\u6700\u5927\u7684 $m$ \u4e2a\u5c31\u884c\u4e86\u3002\n\n\u601d\u8003\u5230\u8fd9\u4e00\u6b65\uff0c\u4ee3\u7801\u5c31\u5df2\u7ecf\u53ef\u4ee5\u5f88\u6e05\u6670\u7684\u5199\u51fa\u6765\u4e86\u3002\u4e0d\u8fc7\u8fd9\u6837\u4f60\u53ea\u5f97\u5230\u4e86 80 \u5206\uff0c\u56e0\u4e3a\u4f60\u6ca1\u5f00 `long long`\uff08\u6211\u8d5b\u65f6\u5c31\u662f\u8fd9\u6837\u6302\u4e86 20 \u5206\uff0c\u8d5b\u540e\u52a0\u4e86\u4e2a `#define int long long` \u5c31 A \u4e86\uff09\u3002\n\n\u611f\u89c9\u6574\u4f53\u601d\u8003\u7684\u8fc7\u7a0b\u5f88\u8fde\u8d2f\uff0c\u6bcf\u4e00\u6b65\u4e4b\u95f4\u90fd\u662f\u73af\u73af\u76f8\u6263\u7684\uff0c\u53ea\u8981\u60f3\u5230\u4e86\u6309 $y$ \u5750\u6807\u5206\u7ec4\u540e\u57fa\u672c\u4e0a\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\u3002\n\n### Code\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconstexpr int _SIZE = 5e5;\nconstexpr double g = 9.8;\nstruct BOMB{ // \u5b58\u50a8\u5bfc\u5f39\u7684\u57fa\u7840\u53c2\u6570\uff0c\u7f16\u53f7\u548c\u63d0\u524d\u8ba1\u7b97\u843d\u70b9\n    int x, y, v, id;\n    long double des;\n}bomb[_SIZE + 5];\nint by[_SIZE + 5], a[_SIZE + 5], bx[_SIZE + 5], p[_SIZE + 5]; // bx\uff0cby \u662f\u79bb\u6563\u5316\u6570\u7ec4\nint n, m, cnty, cntx, fans = 0;\nvector<BOMB> group[_SIZE + 5]; // \u901a\u8fc7\u9ad8\u5ea6\u5206\u7ec4\nlong double destination(BOMB boom) { // \u8ba1\u7b97\u843d\u70b9\n    int x = boom.x, y = boom.y, v = boom.v;\n    return x + v * sqrt(2 * y / g);\n}\nbool cmp(BOMB b1, BOMB b2) { // \u7ec4\u5185\u6392\u5e8f\u89c4\u5219\uff0c\u843d\u70b9\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u8d77\u59cb\u4f4d\u7f6e\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5927\u5230\u5c0f\uff08\u9632\u6b62\u843d\u70b9\u76f8\u540c\u7684\u60c5\u51b5\uff09\n    return b1.des > b2.des || (b1.des == b2.des && b1.x > b2.x);\n}\nint sum[_SIZE + 5];\n#define lowbit(_) (_ & -_)\nvoid add1(int x, int v = 1) { // \u7528\u4e8e\u524d\u7f00\u548c\n    for (; x <= n; x += lowbit(x)) sum[x] += v;\n}\nint ask1(int x) { // \u6c42\u524d\u7f00\u548c\n    int res = 0;\n    for (; x; x -= lowbit(x)) res += sum[x];\n    return res;\n}\nvoid add2(int x, int v = 1) { // \u7528\u4e8e\u540e\u7f00\u548c\n    for (; x; x -= lowbit(x)) sum[x] += v;\n}\nint ask2(int x) { // \u6c42\u540e\u7f00\u548c\n    int res = 0;\n    for (; x <= n; x += lowbit(x)) res += sum[x];\n    return res;\n}\nsigned main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++) {\n        cin >> bomb[i].x >> bomb[i].y >> bomb[i].v;\n        bomb[i].id = i;\n        by[++cnty] = bomb[i].y, bx[++cntx] = bomb[i].x;\n        bomb[i].des = destination(bomb[i]); // \u63d0\u524d\u8ba1\u7b97\u843d\u70b9\n    }\n    for (int i = 1; i <= n; i++) cin >> a[i];\n    sort(by + 1, by + cnty + 1); // \u79bb\u6563\u5316\n    cnty = unique(by + 1, by + cnty + 1) - by - 1;\n    sort(bx + 1, bx + cntx + 1);\n    cntx = unique(bx + 1, bx + cntx + 1) - bx - 1;\n    for (int i = 1; i <= n; i++) {\n        bomb[i].y = lower_bound(by + 1, by + cnty + 1, bomb[i].y) - by;\n        bomb[i].x = lower_bound(bx + 1, bx + cntx + 1, bomb[i].x) - bx;\n        group[bomb[i].y].push_back(bomb[i]); // \u901a\u8fc7\u79bb\u6563\u5316\u8fdb\u884c\u5206\u7ec4\n    }\n    for (int i = 1; i <= cnty; i++) sort(group[i].begin(), group[i].end(), cmp); // \u7ec4\u5185\u6392\u5e8f\n    for (int i = 1; i <= cnty; i++) {\n        for (auto cur: group[i]) { // \u987a\u7740\u626b\u4e00\u904d\n            p[cur.id] += ask1(cur.x - 1); // \u503c\u57df\u524d\u7f00\u548c\uff0c\u76f8\u5f53\u4e8e\u662f\u6c42\u6bd4\u5f53\u524d\u6570\u66f4\u5c0f\u7684\n            add1(cur.x);\n        }\n        for (auto cur: group[i]) add1(cur.x, -1); // \u4e0d\u8981\u7528 memset \u64a4\u9500\uff0c\u56e0\u4e3a memset \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\n        for (int j = group[i].size() - 1; j >= 0; j--) {\n            p[group[i][j].id] += ask2(group[i][j].x + 1); // \u6c42\u540e\u7f00\u548c\uff0c\u76f8\u5f53\u4e8e\u662f\u6c42\u6bd4\u5f53\u524d\u6570\u66f4\u5927\u7684\n            add2(group[i][j].x);\n        }\n        for (int j = group[i].size() - 1; j >= 0; j--) add2(group[i][j].x, -1); // \u64a4\u9500\n    }\n    vector<int> ans(n);\n    for (int i = 1; i <= n; i++) ans.push_back(min(p[i], a[i])), fans += p[i]; // \u8ba1\u7b97\u603b\u7684\u53ef\u80fd\u5f71\u54cd\uff0c\u6bcf\u4e2a\u9632\u5fa1\u8bbe\u65bd\u53ef\u4ee5\u51cf\u5c11\u7684\u5a01\u529b\u503c\u5c31\u662f\u5bfc\u5f39\u5a01\u529b\u548c\u81ea\u8eab\u9632\u5fa1\u503c\u7684\u8f83\u5c0f\u503c\n    sort(ans.begin(), ans.end(), [](int t1, int t2) {\n        return t1 > t2; // \u6309\u7167\u51cf\u5c11\u5a01\u529b\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n    });\n    for (int i = 0; i < m; i++) fans -= ans[i]; // \u9009\u524d m \u4e2a\n    cout << max(fans, 0ll) << '\\n'; // \u9632\u6b62\u51fa\u73b0\u8d1f\u6570\uff08\u867d\u7136\u6ca1\u4ec0\u4e48\u5fc5\u8981\uff09\n    return 0;\n}\n```",
        "postTime": 1666571632,
        "uid": 345225,
        "name": "Hanx16QwQ",
        "ccfLevel": 0,
        "title": "P8593 \u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295"
    },
    {
        "content": "~~\u6839\u636e\u9ad8\u4e2d\u7269\u7406\u5e38\u7528\u5957\u8def~~\uff0c\u5e73\u629b\u8fd0\u52a8\u662f\u53ef\u4ee5\u88ab\u62c6\u6210\u4e24\u90e8\u5206\u7684\uff1a\u7ad6\u76f4\u65b9\u5411\u4e0a\u7684\u81ea\u7531\u843d\u4f53\u548c\u6c34\u5e73\u65b9\u5411\u7684\u5300\u901f\u76f4\u7ebf\u8fd0\u52a8\u3002\n\n\u8003\u8651\u4e00\u79cd\u7406\u60f3\u60c5\u51b5\uff0c\u5047\u5982\u6240\u6709\u7684\u5bfc\u5f39\u7684\u6a2a\u5750\u6807\u5747\u76f8\u7b49\uff0c\u4ec5\u4ec5\u662f\u7eb5\u5750\u6807\u4e0d\u540c\uff0c\u521d\u901f\u5ea6\u4e3a $0$\u3002\u8fd9\u4e9b\u5bfc\u5f39\u4ece\u540c\u4e00\u65f6\u523b\u5f00\u59cb\u505a\u81ea\u7531\u843d\u4f53\u8fd0\u52a8\uff0c\u6839\u636e\u521d\u901f\u5ea6\u4e3a $0$ \u7684\u4f4d\u79fb-\u52a0\u901f\u5ea6\u516c\u5f0f $\\Delta x=\\frac{1}{2}gt^2$\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u5bfc\u5f39\u662f\u4e00\u5b9a\u4e0d\u4f1a\u76f8\u9047\u7684\u3002\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff1a\u53ea\u6709\u7eb5\u5750\u6807\u5168\u90e8\u76f8\u540c\u7684\u5bfc\u5f39\u4eec\uff0c\u624d\u6709\u53ef\u80fd\u53d1\u751f\u78b0\u649e\u3002\n\n\u63a5\u4e0b\u6765\u5bf9\u4e8e\u6240\u6709\u6709\u76f8\u540c\u9ad8\u5ea6\u7684\u5bfc\u5f39\uff0c\u95ee\u9898\u7b80\u5316\u4e3a\u6bcf\u4e00\u4e2a\u5bfc\u5f39\u5728\u4e00\u6761\u6570\u8f74\u4e0a\u8fd0\u52a8\uff0c\u7b2c $i$ \u53f7\u5bfc\u5f39\u4ece $x_i$ \u79fb\u52a8\u5230 $x_i+v\\times t$\uff0c\u5176\u4e2d $t=\\sqrt{\\frac{2y}{g}}$\uff0c\u95ee\u7b2c $i$ \u53f7\u5bfc\u5f39\u80fd\u4e0e\u591a\u5c11\u5bfc\u5f39\u76f8\u649e\u3002\n\n\u6211\u4eec\u8bbe\u7b2c $i$ \u53f7\u5bfc\u5f39\u7684\u8d77\u70b9\u4e3a $l_i$\uff08\u4e5f\u5c31\u662f\u9898\u76ee\u4e2d\u7684 $x_i$\uff09\uff0c\u7ec8\u70b9\u4e3a $r_i$\uff0c\u6211\u4eec\u753b\u56fe\u53d1\u73b0\uff0c\u4e24\u4e2a\u5bfc\u5f39\u76f8\u649e\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u60c5\u51b5\u4e00\uff1a\u5bf9\u4e8e\u6240\u6709 $l_i\\le l_j$ \u7684\u5bfc\u5f39\uff0c$i$ \u53f7\u5bfc\u5f39\u548c $j$ \u53f7\u5bfc\u5f39\u76f8\u649e\u7684\u6761\u4ef6\u4fbf\u662f $r_j\\le r_i$\u3002\n\n\u60c5\u51b5\u4e8c\uff1a\u5bf9\u4e8e\u6240\u6709 $l_j\\le l_i$ \u7684\u5bfc\u5f39\uff0c$i$ \u53f7\u5bfc\u5f39\u548c $j$ \u53f7\u5bfc\u5f39\u76f8\u649e\u7684\u6761\u4ef6\u4fbf\u662f $r_i\\le r_j$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u79cd\u7ecf\u5178\u6a21\u578b\u89e3\u51b3\uff1a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u53ef\u4ee5\u5229\u7528\u503c\u57df\u6811\u72b6\u6570\u7ec4\u6c42\u89e3\u3002\n\n\u5982\u679c\u4e0d\u4e86\u89e3\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\u662f\u5565\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u53c2\u8003 \u9006\u5e8f\u5bf9 \u4e00\u9898\uff08\u6700\u57fa\u7840\u7684\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff09\uff1a\u5728\u8fd9\u4e00\u9053\u9898\u7684\u6811\u72b6\u6570\u7ec4\u505a\u6cd5\u4e2d\uff0c\u6211\u4eec\u5c06\u6574\u4e2a\u6570\u7ec4\u79bb\u6563\u5316\u4e4b\u540e\uff0c\u5728\u6bcf\u6b21\u6309\u7167 $1$ \u5230 $n$ \u7684\u987a\u5e8f\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u653e\u5165\u5230\u4e00\u4e2a\u6876\u91cc\uff08\u8fd9\u4e2a\u6876\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff09\uff08\u5176\u5b9e\u5c31\u662f\u503c\u57df\u6811\u72b6\u6570\u7ec4\uff09\uff0c\u6bcf\u6b21\u7684\u8be2\u95ee\u64cd\u4f5c ```sum(a[i])``` \u5c31\u8868\u793a\u7740\u5728 $1$ \u5230 $i$ \u7684\u5143\u7d20\u5185\uff0c\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u662f\u5c0f\u4e8e\u7b49\u4e8e $a_i$ \u7684\u3002\n\n\u5728\u9006\u5e8f\u5bf9\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u7528\u6307\u9488 $j$ \u904d\u5386\uff0c\u91c7\u7528\u8fb9\u5165\u6876\u8fb9\u8be2\u95ee\u7684\u65b9\u5f0f\uff0c\u4ece\u800c\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u5df2\u7ecf\u8fdb\u5165\u6876\u7684\u5143\u7d20\u4e0b\u6807\u5fc5\u5b9a\u5408\u4e4e\u6211\u4eec\u6240\u9700\u6ee1\u8db3\u7684 $i\\le j$ \u6761\u4ef6\uff08\u8ba9\u5408\u6cd5\u7684\u5143\u7d20\u5165\u6876\uff09\uff0c\u518d\u5229\u7528\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u6876\u7684\u524d\u7f00\u548c\uff0c\u67e5\u8be2\u51fa\u6ee1\u8db3 $i\\le j$ \u4e14 $a_i\\le a_j$ \u7684 $i$ \u7684\u4e2a\u6570\uff0c\u8fdb\u800c\u6c42\u5f97\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u51fa\u5173\u4e8e\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\u7684\u5171\u7528\u5957\u8def\uff1a\u5bf9\u4e8e\u6c42\u6570\u5217\u4e2d\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u5c0f\u4e8e\u7b49\u4e8e $x$ \u7684\u95ee\u9898\uff08\u6216\u8005\u5176\u4ed6\u4e0d\u7b49\u5173\u7cfb\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5f00\u6876\u89e3\u51b3\u3002\u5982\u679c\u5728\u6b64\u57fa\u7840\u4e0a\u8fd8\u6709\u9650\u5236\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ea\u8ba9\u5408\u6cd5\u7684\u5143\u7d20\u5165\u6876\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e00\u9898\u800c\u8a00\uff0c\u4ee5\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e3a\u4f8b\uff0c\u6211\u4eec\u6709\u4e24\u5c42\u9650\u5236\uff0c\u4e00\u79cd\u662f $l_i\\le l_j$\uff0c\u53e6\u4e00\u79cd\u662f $r_j\\le r_i$\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9 $r$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u4ee5 $r$ \u5347\u5e8f\u7684\u5148\u540e\u987a\u5e8f\u5165\u6876\uff0c\u8fd9\u6837\u5047\u8bbe\u6211\u4eec\u904d\u5386\u5230\u4e86 $i$ \u4fbf\u80fd\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u5165\u6876\u7684\u5143\u7d20\u90fd\u80fd\u6ee1\u8db3\u5c0f\u4e8e\u7b49\u4e8e $r_i$ \u7684\u8fd9\u4e00\u9650\u5236\uff0c\u81f3\u4e8e\u5269\u4e0b\u7684\u6761\u4ef6\uff0c\u76f4\u63a5\u4ea4\u7ed9\u6811\u72b6\u6570\u7ec4\u5904\u7406\u5373\u53ef\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e5f\u7c7b\u4f3c\uff0c~~\u8bf7\u8bfb\u8005\u81ea\u884c\u63a8\u5bfc\u3002~~\n\n\u7531\u4e8e $l_i$ \u503c\u57df\u8f83\u5927\uff0c\u8003\u8651\u79bb\u6563\u5316\uff0c\u628a\u503c\u57df\u7f29\u5c0f\u5230 $\\mathop{O(n)}$ \u7ea7\u522b\u3002\n\n\u4e4b\u540e\u5bf9\u4e8e\u6211\u4eec\u6c42\u5f97\u7684 $p$ \u6570\u7ec4\u8fdb\u884c\u8d2a\u5fc3\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathop{O(n\\log n)}$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define ld long double\ninline int read()\n{\n    int x=0,fh=1;\n    char ch=getchar();\n    while(!isdigit(ch))\n\t{\n        if(ch=='-') fh=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n\t{\n        x=(x<<1)+(x<<3)+ch-'0';\n        ch=getchar();\n    }\n    return x*fh;\n}\nconst int MAXN=5e5+5;\nconst ld g=9.8;\nint a[MAXN],n,p[MAXN],m,b[MAXN],cntb;\nstruct node\n{\n\tint x,y,v,id;\n\tld t,ed;\n}d[MAXN];\ninline int cmp(node a,node b)\n{\n\tif(a.y==b.y)return a.ed<b.ed;\n\treturn a.y<b.y;\n}\nstruct BIT\n{\n\tint tr[MAXN];\n\tinline int lowbit(int x)\n\t{\n\t\treturn x&-x;\n\t}\n\tinline void add(int x,int val)\n\t{\n\t\tfor(int i=x;i<=n;i+=lowbit(i))tr[i]+=val;\n\t}\n\tinline int ask(int x)\n\t{\n\t\tint ans=0;\n\t\tfor(int i=x;i;i-=lowbit(i))ans+=tr[i];\n\t\treturn ans;\n\t}\n}tr;\ninline int gtnum(int x)\n{\n\treturn lower_bound(b+1,b+1+cntb,x)-b;\n}\nsigned main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\td[i].x=read(),d[i].y=read(),d[i].v=read(),d[i].t=sqrt(2*d[i].y/g),d[i].ed=(ld)d[i].x+(ld)d[i].t*(ld)d[i].v,d[i].id=i;\n\t\tb[++cntb]=d[i].x;\n\t}\n\tsort(b+1,b+1+cntb);\n\tcntb=unique(b+1,b+1+cntb)-b-1;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tsort(d+1,d+1+n,cmp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint j=i+1;\n\t\twhile(d[j].y==d[i].y&&j<=n)j++;\n\t\tj--;\n\t\tint cnt=0;\n\t\tfor(int k=i;k<=j;k++)p[d[k].id]+=cnt-tr.ask(gtnum(d[k].x)-1),tr.add(gtnum(d[k].x),1),cnt++;\n\t\tfor(int k=i;k<=j;k++)tr.add(gtnum(d[k].x),-1);\n\t\tfor(int k=j;k>=i;k--)p[d[k].id]+=tr.ask(gtnum(d[k].x)),tr.add(gtnum(d[k].x),1);\n\t\tfor(int k=i;k<=j;k++)tr.add(gtnum(d[k].x),-1);\n\t\ti=j;\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)a[i]=min(p[i],a[i]),ans+=p[i];\n\tsort(a+1,a+1+n,greater<int>());\n\tfor(int i=1;i<=m;i++)ans-=a[i];\n\tcout<<ans;\n}\n```\n### Thanks for reading!",
        "postTime": 1666534315,
        "uid": 19228,
        "name": "\u849f\u84bb\u7092\u6247\u8d1d",
        "ccfLevel": 6,
        "title": "P8593 \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u6839\u636e\u7269\u7406\u77e5\u8bc6\u53ef\u77e5\uff0c\u53ea\u6709\u5f53 $ y_i $ \u76f8\u540c\u65f6\u624d\u6709\u53ef\u80fd\u78b0\u649e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06 $ y_i $ \u76f8\u540c\u7684\u5bfc\u5f39\u653e\u5728\u4e00\u8d77\u53bb\u5206\u522b\u8ba1\u7b97\u6700\u7ec8 $ p_i $ \u7684\u503c\u3002\n\n\u63a5\u7740\u6211\u4eec\u6765\u8ba8\u8bba $ y_i $ \u76f8\u540c\u7684\u4e00\u7ec4\u5bfc\u5f39\uff0c\u5982\u4f55\u6765\u8ba1\u7b97 $ p_i $ \u3002 \u9996\u5148\u8ba1\u7b97\u51fa\u6765\u6bcf\u4e2a\u5bfc\u5f39\u7684\u843d\u70b9\u4f4d\u7f6e $ x_t $ \uff0c\u5982\u679c\u6211\u4eec\u6309\u7167\u521d\u59cb\u4f4d\u7f6e $ x_i $ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u518d\u6309\u7167\u843d\u70b9\u4f4d\u7f6e $ x_t $ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u524d\u4e00\u79cd\u6392\u5e8f\u7f16\u53f7\u5230\u540e\u4e00\u79cd\u6392\u5e8f\u7f16\u53f7\u8fde\u7ebf\u7684\u76f8\u4ea4\u6b21\u6570\u3002\n\n\u6211\u4eec\u4ee5\u6837\u4f8b $ 2 $\uff0c$ y_i $ \u4e3a $ 3 $ \u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\uff1a\n\n | $ x_i $ | $ y_i $ | $ v_i $ | $ x_t $ |\n | :-----------: | :-----------: | :-----------: | :-----------: |\n | $ 1 $ | $ 3 $ | $1 $ | $1.78$ |\n | $ -2 $ | $ 3 $ | $ 9 $ | $5.04$ |\n | $ 0 $ | $ 3 $ | $ 7 $ | $5.48$ |\n\n\u6392\u5b8c\u5e8f\u540e\u7684\u8fde\u7ebf\u5982\u56fe\uff0c\u629b\u7269\u7ebf\u5f53\u7136\u53ef\u4ee5\u770b\u4f5c\u76f4\u7ebf\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1udscrpq.png)\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u76f8\u4ea4\u6b21\u6570\u8ba1\u7b97\u51fa\u6765 $ p_i $ \u3002\n\n\n## \u5b9e\u73b0\n\n\u5206\u522b\u8ba1\u7b97\u4e0d\u540c $ y_i $ \uff0c\u53ef\u4ee5\u4f7f\u7528 $ map $ \u6620\u5c04 $ vector $ \u6765\u5b9e\u73b0\u3002\n\n\u5bf9\u4e8e\u8fde\u7ebf\u76f8\u4ea4\u6b21\u6570\uff0c\u4e00\u5f00\u59cb\u6ca1\u6709\u4efb\u4f55\u8fde\u7ebf\uff0c\u4ee5\u521d\u59cb\u4f4d\u7f6e $ x_i $ \u4e3a\u987a\u5e8f\uff0c\u4e00\u6839\u4e00\u6839\u7684\u8fde\u63a5\uff0c\u770b\u5b83\u8fde\u7ebf $ x_t $ \u7684\u4f4d\u7f6e\uff0c\u6bd4\u5982 $ x_i $ \u662f $ i $ \u53f7\u7684\u4f4d\u7f6e\uff0c\u8fde\u7ebf\u5230\u4e86 $ j $ \u53f7\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8bf4\u660e\u6240\u6709\u5c0f\u4e8e $ j $ \u8fd8\u6709\u8fde\u7ebf\u7684\u70b9\uff0c\u4e00\u5b9a\u8ddf\u8fd9\u6761\u8fde\u7ebf\u76f8\u4ea4\uff0c\u90a3\u4e48\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u5185\u6709\u51e0\u4e2a\u70b9\u5df2\u7ecf\u8fde\u8fb9\uff0c\u662f\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u8fd8\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u88ab\u4ee5\u524d\u7684\u8fde\u7ebf\u76f8\u4ea4\u7684\u6b21\u6570\uff0c\u53ea\u9700\u8981\u6240\u6709\u5c0f\u4e8e $ j $ \u7684\u70b9\u6b21\u6570\u52a0 $ 1 $ \uff0c\u662f\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\u3002\u90a3\u4e48\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002 $ p_i $ \u5c31\u662f $ x_t $ \u7684\u4f4d\u7f6e $ j $ \u4e4b\u524d\u6ca1\u8fde\u7ebf\u7684\u70b9\u7684\u4e2a\u6570\u52a0\u4e0a\u5f53\u524d\u70b9\u88ab\u4e4b\u524d\u8fde\u8fb9\u76f8\u4ea4\u7684\u6b21\u6570\u4e4b\u548c\u3002\n\n\u6c42\u51fa $ p_i $ \u4e4b\u540e\uff0c$ a_i $ \u53ef\u4ee5\u4fee\u6539\u4e3a $ min(p_i,a_i) $ \uff0c\u56e0\u4e3a\u6700\u5c0f\u53ea\u80fd\u6539\u5230 $ 0 $ \uff0c\u5c06 $\\{a_i\\}$ \u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u90a3\u4e48\u6700\u7ec8\u7b54\u6848\u4e3a\uff1a \n$$ \\sum_{i = 1}^{n} p_i - \\sum_{i = 1}^{m} a_i $$\n\n## \u4ee3\u7801\n\n```cpp\n#define g 9.8\n#define N 500005\n\nstruct node{\n    int x,id,v,id1;\n    double xt;\n};\n\nint n,m;\nint a[N],p[N],c1[N],c2[N];\n\nstd::map<int,std::vector<node> >mp;\n\nbool cmp1(node xx,node yy){\n    return xx.x<yy.x;\n}\n\nbool cmp2(node xx,node yy){\n    return xx.xt<yy.xt;\n}\n\nvoid init(){\n    n=read<int>();m=read<int>();\n    _for(i,1,n){\n        int x=read<int>(),y=read<int>(),v=read<int>();\n        double xt=x+(double)v*sqrt(2.0*y/g);\n        mp[y].push_back((node){x,0,v,i,xt});\n    }\n    _for(i,1,n)a[i]=read<int>();\n}\n\nint lowbit(int x){\n    return x&-x;\n}\n\nint query(int x,int *c,int siz){\n    int sum=0;\n    for(int i=x;i;i-=lowbit(i)){\n        sum+=c[i];\n    }\n    return sum;\n}\n\nvoid update(int x,int z,int *c,int siz){\n    for(int i=x;i<=siz;i+=lowbit(i)){\n        c[i]+=z;\n    }\n}\n\nvoid work(){\n    for(auto mm:mp){\n    \tstd::sort(mm.second.begin(),mm.second.end(),cmp1);\n        for(int i=0;i<mm.second.size();i++){\n            mm.second[i].id=i+1;\n        }\n        std::sort(mm.second.begin(),mm.second.end(),cmp2);\n        int siz=mm.second.size();\n        _for(i,1,siz)c1[i]=c2[i]=0;\n        for(int i=0;i<siz;i++){\n            int pp=mm.second[i].id;\n            int lll=pp-1-query(pp-1,c1,siz);\n            update(pp,1,c1,siz);\n            int rr=query(pp,c2,siz);\n            update(1,1,c2,siz);\n            update(pp,-1,c2,siz);\n            p[mm.second[i].id1]=lll+rr;\n        }\n    }\n    ll ans=0;\n    _for(i,1,n){\n        a[i]=std::min(a[i],p[i]);\n        //printf(\"%d \",p[i]);\n        ans+=p[i];\n    }\n    std::sort(a+1,a+n+1);\n    _rep(i,n,n-m+1){\n        ans-=a[i];\n    }\n    printf(\"%lld\\n\",ans);\n}\n",
        "postTime": 1666528308,
        "uid": 109471,
        "name": "zeroliebe",
        "ccfLevel": 0,
        "title": "P8593 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3\n\n### \u524d\u8a00\n\n[\u9898\u76ee](https://www.luogu.com.cn/problem/P8593)\n\n[Blog](https://www.luogu.com.cn/blog/yousa22/solution-p8593)\n\n\u8d5b\u65f6\u5199\u4e86 260 \u884c\uff0c\u56e0\u4e3a\u52a0 `freopen` \u4fdd\u9f84\u4e86\uff08\u60b2\uff09\n\n### \u9898\u89e3\n\n\u73b0\u5728\u6211\u4eec\u76f4\u5165\u6b63\u89e3\uff08\u9ebb\u70e6\u7684\u6b63\u89e3\uff09\n\n1. \u9996\u5148\u6211\u4eec\u53d1\u73b0\uff0c\u4e24\u4e2a\u5bfc\u5f39\u8981\u76f8\u9047\uff0c\u9996\u5148\u9700\u8981\u4ed6\u4eec\u7684\u9ad8\u5ea6\u76f8\u540c\uff0c\u8fd9\u91cc\u662f\u6587\u5316\u8bfe\u7684\uff0c\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n2. \u6211\u4eec\u53ef\u4ee5\u628a\u5bfc\u5f39\u5206\u4e3a\u4e09\u7c7b\uff0c\u5206\u522b\u662f\u5411\u5de6\u7684 $(v < 0)$\uff0c\u5411\u53f3\u7684 $(v > 0)$\uff0c\u5411\u4e0b\u7684 $(v = 0)$\u3002 \u5206\u522b\u5bf9\u8fd9\u4e09\u79cd\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\n\na. \u5411\u5de6\u7684\uff1a\u53ea\u9700\u8981\u5bfc\u5f39\u539f\u8d77\u70b9\u5728\u8be5\u5bfc\u5f39\u53f3\u8fb9\u4e14\u843d\u70b9\u5728\u5bfc\u5f39\u5de6\u8fb9\uff0c\u6216\u8005\u5bfc\u5f39\u539f\u8d77\u70b9\u5728\u8be5\u5bfc\u5f39\u5de6\u8fb9\u4e14\u843d\u70b9\u5728\u5bfc\u5f39\u53f3\u8fb9\n\nb. \u5411\u53f3\u7684\uff1a\u53ea\u9700\u8981\u5bfc\u5f39\u539f\u8d77\u70b9\u5728\u8be5\u5bfc\u5f39\u5de6\u8fb9\u4e14\u843d\u70b9\u5728\u5bfc\u5f39\u53f3\u8fb9\uff0c\u5bfc\u5f39\u539f\u8d77\u70b9\u5728\u8be5\u5bfc\u5f39\u53f3\u8fb9\u4e14\u843d\u70b9\u5728\u5bfc\u5f39\u5de6\u8fb9\n\nc. \u5411\u4e0b\u7684\uff1a\u53ea\u9700\u8981\u5bfc\u5f39\u539f\u8d77\u70b9\u5728\u8be5\u5bfc\u5f39\u5de6\u8fb9\u4e14\u843d\u70b9\u5728\u5bfc\u5f39\u53f3\u8fb9\uff0c\u5bfc\u5f39\u539f\u8d77\u70b9\u5728\u8be5\u5bfc\u5f39\u53f3\u8fb9\u4e14\u843d\u70b9\u5728\u5bfc\u5f39\u5de6\u8fb9\n\n\u5982\u4f55\u7406\u89e3\uff1a\u76f4\u63a5\u628a\u629b\u7269\u7ebf\u770b\u6210\u76f4\u7ebf\uff0c\u5939\u5728\u4e24\u5e73\u884c\u7ebf\u4e4b\u95f4\u7684\u76f4\u7ebf\u76f8\u4ea4\u5c31\u662f\u8fd9\u4e48\u5224\u65ad\u7684\n\n\u5176\u5b9e\u5c31\u662f\u9006\u5e8f\u5bf9......\uff08\u6ce8\u610f\u79bb\u6563\u5316\uff0c\u8981\u5bf9\u843d\u70b9\u79bb\u6563\u5316\uff09\n\n\u7136\u540e\u6700\u540e\u6211\u4eec\u6c42\u51fa\u6bcf\u4e00\u4e2a\u5bfc\u5f39\u53ef\u4ee5\u51cf\u5c11\u7684\u6b21\u6570\uff0c\u6392\u4e2a\u5e8f\u5c31\u53ef\u4ee5\u4e86\n\n\u7136\u540e\u5c31\u5b8c\u4e86\uff0c\u5199\u9ebb\u70e6\u4e86\n\n260 \u884c\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nnamespace Mashiro {\n    char buf[1<<18],*p1=buf,*p2=buf;\n    inline int getc() {\n        return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<18,stdin),p1==p2)?EOF:*p1++;\n    }\n    template<typename T>inline void read(T& x) {\n        x=0;int f=1;\n        char ch=getc();\n        while(!isdigit(ch)){if(ch=='-')f=~f+1;ch=getc();}\n        while (isdigit (ch)) {x=(x<<3)+(x<<1)+(ch^48);ch=getc();}\n        x*=f;\n    }\n    template <typename T,typename... Args> inline void read(T& x, Args&... args) {\n        read(x);\n        read(args...);\n    }\n    char buffer[1<<18];int p11=-1;const int p22=(1<<18)-1;\n    inline void flush() {fwrite(buffer,1,p11+1,stdout),p11=-1;}\n    inline void putc(const char &x) {if (p11==p22) flush();buffer[++p11]=x;}\n    template<typename T>inline void write(T x) {\n        static int buf[40],top=0;\n        if(x<0)putc('-'),x=~x+1;\n        while(x)buf[++top]=x%10,x/=10;\n        if(top==0)buf[++top]=0;\n        while (top) putc(buf[top--]^48);\n        putc(' ');\n        flush();\n     }\n     template <typename T,typename... Args> inline void write(T x, Args... args) {\n         write(x);\n         write(args...);\n     }\n}\nnamespace Misaka{\n    auto seed=std::chrono::system_clock::now().time_since_epoch().count();\n    std::mt19937 rnd(seed);\n    template<typename T>T random(T l, T r) {\n    \t return std::uniform_int_distribution<T>(l,r)(rnd); \n    }\n}\nnamespace Cmp{\n    template<typename T>inline T Min(T a,T b){\n        return a>b?b:a;\n    }\n    template<typename T,typename... Args> inline T Min(T a,T b,Args... args){\n        return Min(a,Min(b,args...));\n    }\n    template<typename T>inline T Max(T a,T b){\n        return a>b?a:b;\n    }\n    template<typename T,typename... Args> inline T Max(T a,T b,Args... args){\n        return Max(a,Max(b,args...));\n    }\n}\nusing namespace Mashiro;\nconst int maxn=5e5+10;\nint n;\nstruct point{\n    int x,y,v;\n}p[maxn];\nstruct point2{\n    int now,hxt;\n    double x,y,v,xt;\n}p1[maxn];\nstruct BIT{\n    int c[maxn];\n    inline int lowbit(int x){\n        return x&(~x+1);\n    }\n    void add(int x,int v=1){\n        while(x<=n){\n            c[x]+=v;\n            x+=lowbit(x);\n        }\n    }\n    int query(int x){\n        int res=0;\n        while(x){\n            res+=c[x];\n            x-=lowbit(x);\n        }\n        return res;\n    }\n}Tree;\nbool cmp(point2 A,point2 B){\n    return A.xt<B.xt;\n}\nint attack[maxn],k,by[maxn];\ndouble bx[maxn];\nint Mapy[maxn],Mapx[maxn];\nvector<point2>Same[maxn][3];\ndouble Xt[maxn];\nint a[maxn];\nstruct ANS{\n    int nowans,sub;\n}AA[maxn];\nint main() {\n    // freopen(\"missile4.in\",\"r\",stdin);\n    // freopen(\"missile4.out\",\"w\",stdout);\n    read(n,k);\n    for(int i(1);i<=n;++i){\n        read(p[i].x,p[i].y,p[i].v);\n        by[i]=p[i].y;\n        double x=p[i].x,y=p[i].y,v=p[i].v;\n        double xt=x+v*sqrt(2.0*y/9.8);\n        Xt[i]=xt;\n        bx[i]=xt;\n    }\n    for(int i(1);i<=n;++i)read(a[i]);\n    sort(bx+1,bx+1+n);\n    sort(by+1,by+1+n);\n    int my=unique(by+1,by+1+n)-by-1;\n    int mx=unique(bx+1,bx+1+n)-bx-1;\n    for(int i(1);i<=n;++i){\n        double x=p[i].x,y=p[i].y,v=p[i].v;\n        int rankx=lower_bound(bx+1,bx+1+mx,Xt[i])-bx;\n        int ranky=lower_bound(by+1,by+1+my,p[i].y)-by;\n        if(v>0)Same[ranky][0].emplace_back(point2{i,rankx,x,y,v,Xt[i]});\n        if(v<0)Same[ranky][1].emplace_back(point2{i,rankx,x,y,v,Xt[i]});\n        if(v==0)Same[ranky][2].emplace_back(point2{i,rankx,x,y,v,Xt[i]});\n    }\n    for(int i(1);i<=my;++i){\n        // write(i);\n        // putc('\\n');\n        int nl=Same[i][0].size();\n        int nr=Same[i][1].size();\n        vector<point2>Temp;\n\n        for(auto j:Same[i][0])Temp.emplace_back(j);\n        for(auto j:Same[i][1])Temp.emplace_back(j);\n        for(auto j:Same[i][2])Temp.emplace_back(j);\n        int nn=Temp.size();\n        sort(Temp.begin(),Temp.end(),[](const point2 A,const point2 B){\n            return A.x>B.x;\n        });\n        for(int j(0);j<nn;++j){\n            if(Temp[j].v<=0)Tree.add(Temp[j].hxt);\n            else {\n                int res=Tree.query(Temp[j].hxt);\n                attack[Temp[j].now]+=res;\n            }\n        }\n        for(int j(0);j<nn;++j){\n            if(Temp[j].v<=0)Tree.add(Temp[j].hxt,-1);\n        }\n        sort(Temp.begin(),Temp.end(),[](const point2 A,const point2 B){\n            return A.x<B.x;\n        });\n        int cnt=0;\n        for(int j(0);j<nn;++j){\n            if(Temp[j].v>=0)Tree.add(Temp[j].hxt),++cnt;\n            else {\n                int res=Tree.query(Temp[j].hxt-1);\n                attack[Temp[j].now]+=cnt-res;\n            }\n        }\n        for(int j(0);j<nn;++j){\n            if(Temp[j].v>=0)Tree.add(Temp[j].hxt,-1);\n        }\n\n        cnt=0;\n        for(int j(0);j<nn;++j){\n            if(Temp[j].v>0){\n                Tree.add(Temp[j].hxt);\n                ++cnt;\n            }\n            else if(Temp[j].v==0){\n                int res=Tree.query(Temp[j].hxt-1);\n                attack[Temp[j].now]+=cnt-res;\n            }\n        }\n        for(int j(0);j<nn;++j){\n            if(Temp[j].v>0){\n                Tree.add(Temp[j].hxt,-1);\n            }\n        }\n        sort(Temp.begin(),Temp.end(),[](const point2 A,const point2 B){\n            return A.x>B.x;\n        });\n        for(int j(0);j<nn;++j){\n            if(Temp[j].v<0){\n                Tree.add(Temp[j].hxt);\n            }\n            else if(Temp[j].v==0){\n                int res=Tree.query(Temp[j].hxt);\n                attack[Temp[j].now]+=res;\n            }\n        }\n        for(int j(0);j<nn;++j){\n            if(Temp[j].v<0){\n                Tree.add(Temp[j].hxt,-1);\n            }\n        }\n        sort(Same[i][0].begin(),Same[i][0].end(),[](const point2 A,const point2 B){\n            return A.x<B.x;\n        });  \n        for(int j(0);j<nl;++j){\n            int res=Tree.query(Same[i][0][j].hxt-1);\n            attack[Same[i][0][j].now]+=j-res;\n            Tree.add(Same[i][0][j].hxt);\n        }\n        for(int j(0);j<nl;++j){\n            Tree.add(Same[i][0][j].hxt,-1);\n        }\n        sort(Same[i][0].begin(),Same[i][0].end(),[](const point2 A,const point2 B){\n            return A.x>B.x;\n        });\n        for(int j(0);j<nl;++j){\n            int res=Tree.query(Same[i][0][j].hxt);\n            attack[Same[i][0][j].now]+=res;\n            Tree.add(Same[i][0][j].hxt);\n        }\n        for(int j(0);j<nl;++j){\n            Tree.add(Same[i][0][j].hxt,-1);\n        }\n        sort(Same[i][1].begin(),Same[i][1].end(),[](const point2 A,const point2 B){\n            return A.x>B.x;\n        });\n        for(int j(0);j<nr;++j){\n            int res=Tree.query(Same[i][1][j].hxt);\n            attack[Same[i][1][j].now]+=res;\n            Tree.add(Same[i][1][j].hxt);\n        }\n        for(int j(0);j<nr;++j){\n            Tree.add(Same[i][1][j].hxt,-1);\n        }\n        sort(Same[i][1].begin(),Same[i][1].end(),[](const point2 A,const point2 B){\n            return A.x<B.x;\n        });\n        for(int j(0);j<nr;++j){\n            int res=Tree.query(Same[i][1][j].hxt-1);\n            attack[Same[i][1][j].now]+=j-res;\n            Tree.add(Same[i][1][j].hxt);\n        }\n        for(int j(0);j<nr;++j){\n            Tree.add(Same[i][1][j].hxt,-1);\n        }\n    }\n    ll ans=0;\n    for(int i(1);i<=n;++i){\n        AA[i].nowans=attack[i];\n        AA[i].sub=a[i];\n    }\n    sort(AA+1,AA+1+n,[](const ANS A,const ANS B){\n        return min(A.nowans,A.sub)>min(B.nowans,B.sub);\n    });\n    for(int i(1);i<=k;++i){\n        ans+=max(0,AA[i].nowans-AA[i].sub);\n    }\n    for(int i(k+1);i<=n;++i){\n        ans+=AA[i].nowans;\n    }\n    write(ans);\n    return 0;\n}\n\n```\n\n\n\n\n\n",
        "postTime": 1666522752,
        "uid": 414386,
        "name": "Isshiki\u00b7Iroha",
        "ccfLevel": 6,
        "title": "P8593\u9898\u89e3"
    },
    {
        "content": "MnZn\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8593)\u3002\n\n\u8003\u8651\u600e\u6837\u7684\u4e24\u679a\u70ae\u5f39\u4f1a\u76f8\u649e\u3002\u5bf9\u4e8e $y$ \u8f74\uff0c\u7531\u4e8e\u70ae\u5f39\u5728 $y$ \u8f74\u4e0a\u4e0b\u843d\u7684\u52a0\u901f\u5ea6\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u53ea\u6709\u4e24\u679a\u70ae\u5f39\u521d\u59cb $y$ \u503c\u76f8\u540c\u65f6\u624d\u6709\u53ef\u80fd\u76f8\u649e\u3002\u5bf9\u4e8e $x$ \u8f74\uff0c\u5f53\u4e24\u679a\u70ae\u5f39\u521d\u59cb $x$ \u5750\u6807\u4e0e\u843d\u5730\u65f6\u7684 $x$ \u5750\u6807\u76f8\u5bf9\u4f4d\u7f6e\u76f8\u53cd\u65f6\uff0c\u624d\u6709\u53ef\u80fd\u76f8\u649e\u3002\n\n\u5f62\u5f0f\u5316\u7684\uff0c\u5bf9\u4e8e\u521d\u59cb $y$ \u5750\u6807\u76f8\u540c\u7684\u70ae\u5f39 $i$ \u548c\u70ae\u5f39 $j$\uff0c\u5176\u843d\u5730\u7684 $x$ \u5750\u6807\u5206\u522b\u4e3a\u4e3a $f_i$ \u548c $f_j$\uff0c\u6709\uff1a\n\n$$p_i=\\sum_{y_i=y_j} f_i\\le f_j\\land x_i>x_j$$\n\n\u5f53\u6211\u4eec\u628a\u6240\u6709\u70ae\u5f39\u7684**\u4ee5\u521d\u59cb $y$ \u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u521d\u59cb $x$ \u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f**\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6240\u8981\u6c42\u7684\u7684 $p_i$ \u53d8\u6210\u4e86**\u5728\u521d\u59cb $y$ \u5750\u6807\u76f8\u540c\u7684\u533a\u95f4\u5185\uff0c\u4e0e $f_i$ \u5f62\u6210\u9006\u5e8f\u5bf9 $f_j$ \u7684\u4e2a\u6570**\u3002\n\n\u7136\u9e45\u672c\u849f\u84bb\u5e76\u4e0d\u4f1a\u89e3\u9006\u5e8f\u5bf9\u3002\n\n\u4e8e\u662f\u6211\u7528\u4e00\u9897\u4e3b\u5e2d\u6811\u7ef4\u62a4 $f_i$ \uff0c\u5728\u6392\u5e8f\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u521d\u59cb $y$ \u5750\u6807\u76f8\u540c\u7684\u533a\u95f4 $[l,r]$\uff0c\u663e\u7136\u533a\u95f4\u5185\u521d\u59cb $x$ \u5750\u6807\u5355\u8c03\u4e0d\u964d\uff0c\u6709\uff1a\n$$p_i=\\sum_{j=l}^{j<i}f_i\\le f_j+\\sum_{k=i+1}^{k\\le r}f_i>f_k$$\n\u5f97\u5230\u6bcf\u4e2a $p_i$ \u540e\uff0c\u7b97\u4e00\u4e0b\u6bcf\u4e2a\u53cd\u5236\u6b66\u5668\u771f\u6b63\u53ef\u4ee5\u51cf\u5c11\u7684\u5a01\u529b\u503c\uff0c\u7136\u540e\u8d2a\u5fc3\u6c42\u89e3\u5373\u53ef\u3002\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define ll long long\n#define db double\n#define N 500010\nusing namespace std;\nstruct Node{int x,y,f,num;}a[N];\nstruct Node1{db val;int num;}g[N];\nbool cmp(Node X,Node Y){return X.y<Y.y||(X.y==Y.y&&X.x<Y.x);}\nbool cmp1(Node1 X,Node1 Y){return X.val<Y.val;}\nint n,m,tot,rt[N],p[N],c[N];\nstruct Tree{int ls,rs,val;}t[N<<5];\nint build(int l,int r){\n\tint p=++tot,mid=l+r>>1;\n\tif(l==r) return p;\n\tt[p].ls=build(l,mid);\n\tt[p].rs=build(mid+1,r);\n\treturn p;\n}\nint update(int pre,int l,int r,int x){\n\tint p=++tot,mid=l+r>>1;\n\tt[p]=t[pre];\n\tt[p].val++;\n\tif(l==r) return p;\n\tif(x<=mid) t[p].ls=update(t[pre].ls,l,mid,x);\n\telse t[p].rs=update(t[pre].rs,mid+1,r,x);\n\treturn p;\n}\nint smaller_ask(int u,int v,int l,int r,int i){\n\tint mid=l+r>>1;\n\tif(l==r) return 0;\n\tif(mid<i) return t[t[v].ls].val-t[t[u].ls].val+smaller_ask(t[u].rs,t[v].rs,mid+1,r,i);\n\treturn smaller_ask(t[u].ls,t[v].ls,l,mid,i);\n}\nint bigger_ask(int u,int v,int l,int r,int i){\n\tint mid=l+r>>1;\n\tif(l==r) return t[v].val-t[u].val;\n\tif(mid>=i) return t[t[v].rs].val-t[t[u].rs].val+bigger_ask(t[u].ls,t[v].ls,l,mid,i);\n\treturn bigger_ask(t[u].rs,t[v].rs,mid+1,r,i);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int v,i=1;i<=n;i++){\n\t\tscanf(\"%d%d%d\",&a[i].x,&a[i].y,&v);\n\t\tg[i].val=1.0*a[i].x+((db)v)*sqrt(((db)a[i].y)/4.9);\n\t\ta[i].num=g[i].num=i;\n\t}\n\tsort(g+1,g+n+1,cmp1);\n\tint gtot=0;\n\trt[0]=build(1,n);\n\tfor(int i=1;i<=n;i++){ //\u79bb\u6563\u5316fi\n\t\tif(g[i].val!=g[i-1].val) gtot++; \n\t\ta[g[i].num].f=gtot;\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;i++) rt[i]=update(rt[i-1],1,n,a[i].f);\n\tfor(int L=1,R=0,i=1;i<=n;i++){\n\t\tif(a[i].y!=a[i+1].y){\n\t\t\tR=i;\n\t\t\tfor(int j=L;j<=R;j++) p[a[j].num]=((j<R)?smaller_ask(rt[j],rt[R],1,n,a[j].f):0)+((j>L)?bigger_ask(rt[L-1],rt[j-1],1,n,a[j].f):0);\n\t\t\tL=i+1;\n\t\t}\n\t}\n\tll ans=0;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&c[i]);\n\t\tans+=p[i];\n\t\tc[i]=min(p[i],c[i]);\n\t}\n\tsort(c+1,c+n+1);\n\tfor(int i=n;i>n-m;i--) ans-=c[i];\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1666536835,
        "uid": 557842,
        "name": "OneStar",
        "ccfLevel": 3,
        "title": "P8593 \u300cKDOI-02\u300d\u4e00\u4e2a\u5f39\u7684\u6295\u9898\u89e3"
    }
]