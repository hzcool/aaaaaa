[
    {
        "content": "\u8fd9\u9898\u8ba9\u6211\u7206\u809d\u5566......\n\n\u8fd9\u79cd\u8ba1\u6570\u663e\u7136\u5bb9\u65a5\uff0c\u6b63\u597d\u4e0d\u542b\u4efb\u4f55\u574f\u70b9\u7684\u6211\u4eec\u4e0d\u4f1a\u7b97\uff0c\u4f46\u662f\u6211\u4eec\u80fd\u7b97\u81f3\u5c11\u542b\u96f6\u4e2a\u574f\u70b9\u7684\uff0c\u81f3\u5c11\u542b\u4e00\u4e2a\u574f\u70b9\u7684\uff0c\u81f3\u5c11\u542b\u4e24\u4e2a\u574f\u70b9\u7684......\n\n\u6240\u4ee5\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f(\u81f3\u5c11\u542b\u96f6\u4e2a\u574f\u70b9\u7684-\u81f3\u5c11\u542b\u4e00\u4e2a\u574f\u70b9\u7684+\u81f3\u5c11\u542b\u4e24\u4e2a\u574f\u70b9\u7684-\u81f3\u5c11\u542b\u4e09\u4e2a\u574f\u70b9\u7684+\u81f3\u5c11\u542b\u56db\u4e2a\u574f\u70b9\u7684)\u3002\n\n\u7136\u540e\u5c31\u662f\u600e\u4e48\u8ba1\u7b97\u7684\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u81f3\u5c11\u542b\u96f6\u4e2a\u574f\u70b9\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbe\u5b9a\u6240\u6709\u70b9\u90fd\u662f\u597d\u70b9\u3002\n\n\u5bf9\u4e8e\u975e\u6b63\u653e\u7684\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u80fd\u627e\u5230\u4e00\u4e2a\u6b63\u597d\u5305\u542b\u5b83\u7684\u6700\u5c0f\u7684\u6b63\u653e\u7684\u6b63\u65b9\u5f62\uff0c\u663e\u7136\u8fd9\u6837\u7684\u6b63\u65b9\u5f62\u662f\u552f\u4e00\u7684\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/17462.png)\n\n\u7136\u540e\u6211\u4eec\u8ba9\u56db\u4e2a\u70b9\u5728\u8fd9\u4e2a\u6b63\u65b9\u5f62\u7684\u8fb9\u4e0a\u6ed1\u52a8\uff0c\u663e\u7136\u8fd9\u56db\u4e2a\u70b9\u7684\u6bcf\u4e00\u7ec4\u4f4d\u7f6e\u5bf9\u5e94\u4e00\u4e2a\u975e\u6b63\u653e\u7684\u6b63\u65b9\u5f62(\u867d\u7136\u6b63\u597d\u5728\u56db\u4e2a\u89d2\u4e0a\u7684\u662f\u6b63\u653e\u7684)\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u603b\u65b9\u6848\u6570\u4e3asigma( i from 1 to min(n,m) ) i \\* ( n - i + 1 ) * ( m - i + 1 ) \u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5O(n)\u8ba1\u7b97\u3002\n\n\n\u5bf9\u4e8e\u6b63\u597d\u6709\u4e00\u4e2a\u574f\u70b9\u7684\uff0c\u6211\u4eec\u8003\u8651\u67d0\u4e2a\u4ee5\u67d0\u4e2a\u4e2a\u70b9P\u4e3a\u89d2\u7684\u6b63\u65b9\u5f62A\uff0c\u70b9P\u4e00\u5b9a\u5305\u542b\u8fd9\u4e2a\u6b63\u65b9\u5f62A\u7684\u6700\u5c0f\u6b63\u653e\u6b63\u65b9\u5f62\u7684\u89d2\u4e0a\u6216\u8fb9\u4e0a\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/17463.png)\n\n\u4e8e\u662f\u6211\u4eec\u679a\u4e3e\u8fd9\u6837\u7684\u6b63\u65b9\u5f62\u548c\u70b9P\u80fd\u5728\u7684\u4f4d\u7f6e\u6570\u91cf\u5c31\u597d\u4e86\u3002\n\n\u5bf9\u4e8e\u70b9P\u7684\u72b6\u6001\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u5b83\u8ddd\u79bb\u5de6\u8fb9\u754c\u7684\u8ddd\u79bbl\uff0c\u53f3\u8fb9\u754c\u8ddd\u79bbr\uff0c\u4e0a\u8fb9\u754c\u8ddd\u79bbh\u3002\n\u7136\u540e\u6211\u4eec\u4ee4t=min(l+r,h)\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/17464.png)\n\n\u5982\u679c\u6211\u4eec\u4e0d\u8003\u8651\u6709\u4e00\u4e9b\u4f4d\u7f6e\u4e0d\u80fd\u53d6\u5230\u7684\u8bdd\uff0c\u7b54\u6848\u5e94\u8be5\u4e3at*(t+3)/2\u3002\n\n\u7136\u800c\u8fd9\u6837\u8ba1\u7b97\u4e86\u4e00\u4e9b\u4e0d\u80fd\u53d6\u5230\u7684\u4f4d\u7f6e\u3002\u5f53t>l\u65f6\uff0c\u6211\u4eec\u591a\u8ba1\u7b97\u7684\u4f4d\u7f6e\u6570\u91cf\u4e3a(t-l)*(t-l+1)/2\u3002(\u624b\u73a9\u4e00\u4e0b\u5c31\u660e\u767d\u4e86)\n\nt>r\u65f6\u540c\u7406\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fdO(k)\u8ba1\u7b97\u51fa\u81f3\u5c11\u542b\u4e00\u4e2a\u574f\u70b9\u7684\u65b9\u6848\u6570\u3002\n\n\u5bf9\u4e8e\u6b63\u597d\u542b\u4e24\u53ca\u4ee5\u4e0a\u4e2a\u574f\u70b9\u7684\uff0c\u6211\u4eec\u679a\u4e3e\u4e24\u4e2a\u574f\u70b9\uff0c\u663e\u7136\u4e00\u4e2a\u6b63\u65b9\u5f62\u7ed9\u4f60\u4e24\u4e2a\u70b9\uff0c\u4ed6\u7684\u4f4d\u7f6e\u5c31\u57fa\u672c\u786e\u5b9a\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/17465.png)\n\n\u6211\u4eec\u53ef\u4ee5\u5206\u7c7b\u8ba8\u8bba\u4e09\u79cd\u60c5\u51b5\uff0c\u7528\u5411\u91cf\u8ba1\u7b97\u51fa\u53e6\u5916\u4e24\u4e2a\u70b9\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\u3002\u6ce8\u610f\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4ee5\u8fd9\u4e24\u4e2a\u70b9\u4e3a\u5bf9\u89d2\u7ebf\u7684\u6b63\u65b9\u5f62\u53ef\u80fd\u4e0d\u5728\u683c\u70b9\u4e0a\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u542b\u4e24\u4e2a\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u8ba1\u7b97\u53ef\u884c\u7684\u6b63\u65b9\u5f62\u6570\uff1b\u5bf9\u4e8e\u542b\u4e09\u4e2a\u7684\uff0c\u6211\u4eec\u5f53\u53e6\u5916\u4e24\u4e2a\u70b9\u6709\u4e00\u4e2a\u4e3a\u574f\u70b9\u65f6\u8ba1\u7b97\uff1b\u542b\u56db\u4e2a\u7684\uff0c\u6211\u4eec\u5f53\u53e6\u5916\u4e24\u4e2a\u70b9\u5747\u4e3a\u574f\u70b9\u65f6\u8ba1\u7b97\u3002\n\n\u663e\u7136\u542b\u4e09\u4e2a\u548c\u542b\u56db\u4e2a\u7684\u6211\u4eec\u7b97\u91cd\u4e86\u3002\u6240\u4ee5\u5e94\u8be5\u5206\u522b\u9664\u4ee5C(3,2)\u548cC(4,2)\u3002\n\n\u7136\u540e\u7d2f\u52a0\u4e00\u4e0b\u7b54\u6848\u5c31\u597d\u3002\n(\u7136\u800c\u8ba1\u7b97\u5782\u76f4\u5411\u91cf\u65f6\u6ca1\u6709\u52a0\u8d1f\u53f7\u8ba9\u6211\u8c03\u4e86\u534a\u5929\uff0c\u8001\u5e74\u9009\u624b\u8eab\u8d25\u540d\u88c2)\n\u4ee3\u7801:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<tr1/unordered_set>\ntypedef long long int lli;\nusing namespace std;\nusing namespace tr1;\nconst int maxp=2e3+1e2;\nconst int mod=1e8+7;\n\nstruct Point {\n    int x,y;\n    friend bool operator < (const Point &a,const Point &b) {\n        return a.x != b.x ? a.x < b.x : a.y < b.y;\n    }\n    friend Point operator - (const Point &a,const Point &b) {\n        return (Point){a.x-b.x,a.y-b.y};\n    }\n    friend Point operator + (const Point &a,const Point &b) {\n        return (Point){a.x+b.x,a.y+b.y};\n    }\n    friend Point operator * (const Point &a,const int &b) {\n        return (Point){a.x*b,a.y*b};\n    }\n    friend Point operator / (const Point &a,const int &b) {\n        return (Point){a.x/b,a.y/b};\n    }\n    inline Point swp() const {\n        return (Point){y,-x};\n    }\n    inline bool candiv() const {\n        return ( ! ( x & 1 ) ) && ( ! ( y & 1 ) );\n    }\n}pt[maxp];\nunordered_set<lli> st;\nint n,m,t;\nlli ans,ini,sig,dou,tri,qua;\n\ninline void insert(const Point &p) {\n    lli h = (lli) p.x * ( m + 1 ) + p.y;\n    st.insert(h);\n}\ninline bool inside(const Point &p) {\n    return 0 <= p.x && p.x <= n && 0 <= p.y && p.y <= m;\n}\ninline bool legal(const Point &pa,const Point &pb) {\n    return inside(pa) && inside(pb);\n}\ninline bool have(const Point &p) {\n    lli h = (lli) p.x * ( m + 1 ) + p.y;\n    return st.find(h) != st.end();\n}\ninline lli calcini(lli n,lli m) {\n    lli ret = 0 , lim = min( n , m );\n    for(lli i=1;i<=lim;i++) ret = ( ret + ( n - i + 1 ) % mod * ( m - i + 1 ) % mod * i % mod ) % mod;\n    return ret;\n}\ninline lli calcedge(const lli &l,const lli &r,const lli &h) {\n    lli t = min( l + r , h );\n    if( !t ) return 0;\n    lli ret = ( t * ( t + 3 ) >> 1 ) % mod;\n    if( t > l ) ret -= ( ( t - l ) * ( t - l + 1 ) >> 1 ) % mod;\n    if( t > r ) ret -= ( ( t - r ) * ( t - r + 1 ) >> 1 ) % mod;\n    return ( ret % mod + mod ) % mod;\n}\ninline lli calcsingle(lli x,lli y) {\n    const lli a = n - x , b = m - y , c = x , d = y;\n    lli ret = ( calcedge(d,b,a) + calcedge(d,b,c) + calcedge(a,c,b) + calcedge(a,c,d) ) % mod;\n    ret -= ( min(a,b) + min(b,c) + min(c,d) + min(d,a) ) % mod;\n    return ( ret % mod + mod ) % mod;\n}\ninline lli calcdouble(const Point &a,const Point &b) {\n    const Point delta = (a-b).swp();\n    int ret = legal(a+delta,b+delta) + legal(a-delta,b-delta);\n    const Point mid = a + b , pa = mid + delta , pb = mid - delta;\n    if( pa.candiv() && pb.candiv() && legal(pa/2,pb/2) ) ++ret;\n    return ret;\n}\ninline lli calctriple(const Point &a,const Point &b) {\n    const Point delta = (a-b).swp();\n    int ret = 0;\n    if( legal(a+delta,b+delta) ) ret += have(a+delta) + have(b+delta);\n    if( legal(a-delta,b-delta) ) ret += have(a-delta) + have(b-delta);\n    const Point mid = a + b , pa = mid + delta , pb = mid - delta;\n    if( pa.candiv() && pb.candiv() && legal(pa/2,pb/2) ) ret += have(pa/2) + have(pb/2);\n    return ret;\n}\ninline lli calcquad(const Point &a,const Point &b) {\n    const Point delta = (a-b).swp();\n    int ret = 0;\n    if( legal(a+delta,b+delta) ) ret += ( have(a+delta) && have(b+delta) );\n    if( legal(a-delta,b-delta) ) ret += ( have(a-delta) && have(b-delta) );\n    const Point mid = a + b , pa = mid + delta , pb = mid - delta;\n    if( pa.candiv() && pb.candiv() && legal(pa/2,pb/2) ) ret += ( have(pa/2) && have(pb/2) );\n    return ret;\n}\n\nint main() {\n    scanf(\"%d%d%d\",&n,&m,&t);\n    for(int i=1;i<=t;i++) scanf(\"%d%d\",&pt[i].x,&pt[i].y) , insert(pt[i]);\n    ini = calcini(n,m);\n    for(int i=1;i<=t;i++) sig += calcsingle(pt[i].x,pt[i].y);\n    for(int i=1;i<=t;i++) for(int j=i+1;j<=t;j++) {\n        dou += calcdouble(pt[i],pt[j]) , tri += calctriple(pt[i],pt[j]) , qua += calcquad(pt[i],pt[j]);\n    }\n    tri /= 3 , qua /= 6;\n    ans = ( ( ini - sig + dou - tri + qua ) % mod + mod ) % mod;\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1523720302,
        "uid": 31907,
        "name": "cmd2001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3271 \u3010[JLOI2016]\u65b9\u3011"
    },
    {
        "content": "\u6211\u53c8TM\u6ca1\u770b\u9898\uff0c\u9898\u9762\u53ea\u8981\u6c42\u56db\u4e2a\u9876\u70b9\u4e0d\u662f\u574f\u70b9\u5c31\u597d\u4e86(\u5bfc\u81f4\u6211\u7ea0\u7ed3\u4e861\u5929)\uff01\uff01\uff01\n\n\u89c2\u5bdf\u5230$K$\u633a\u5c0f\u7684\uff0c\u5c31\u60f3\u529e\u6cd5\u641e\u4e9b\u4e8b\u60c5\u3002\n\n\u4e4b\u540e\u60f3\u5230\u5bb9\u65a5\uff0c$f_i$\u8868\u793a\u81f3\u5c11\u6709$i$\u4e2a\u9876\u70b9\u662f\u574f\u70b9\u3002\n\n\u7b54\u6848\u5c31\u4e3a$f_0-f_1+f_2-f_3+f_4$\n\n\u5bf9\u4e8e\u540c\u6837\u5927\u5c0f\u7684\uff0c\u4e14\u4e2d\u5fc3\u70b9\u4e3a\u540c\u4e00\u5904\u7684\u975e\u6a2a\u5e73\u7ad6\u76f4\u6b63\u65b9\u5f62\u800c\u8a00\uff0c\u4e00\u5b9a\u6709\u4e00\u4e2a\u6700\u5c0f\u7684(\u6a2a\u5e73\u7ad6\u76f4)\u6b63\u65b9\u5f62\u80fd\u5305\u88f9\u4f4f\u8fd9\u4e9b\u6b63\u65b9\u5f62\uff0c\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c\u5982\u4e0b\u56fe\n\n![11.PNG][1]\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u6700\u5c0f\u7684(\u6a2a\u5e73\u7ad6\u76f4)\u6b63\u65b9\u5f62\u800c\u8a00\uff0c\u5185\u542b\u5176\u8fb9\u957f$l$$-1$\u4e2a\u6b63\u65b9\u5f62\uff0c\u7b97\u4e0a\u5176\u672c\u8eab\uff0c\u5c31\u6709$l$\u4e2a\u6b63\u65b9\u5f62\u3002\n\n\u601d\u8003\u4e00\u4e0b\uff0c\u5bf9\u4e8e$(n+1,m+1)$\u7684\u5730\u56fe\u800c\u8a00\uff0c\u6709\u591a\u5c11\u4e2a\u8fd9\u6837\u7684\u8fb9\u957f\u4e3a$l$\u7684\u4e2d\u5fc3\u70b9?\n\n\u6709$(n-l+1)*(m-l+1)$\u4e2a\u3002\n\n\u56e0\u6b64\u5bf9\u4e8e\u8fb9\u957f\u4e3a$l$\u7684\u4e2d\u5fc3\u70b9\u7684\u6765\u8bf4\uff0c\u5bf9$f_0$\u7684\u8d21\u732e\u4e3a$(n-l+1)*(m-l+1)*l$\n\n\u56e0\u6b64$f_0=\\sum\\limits _{i=1}^{\\min(n,m)}(n-i+1)*(m-i+1)*i$\n\n\u96be\u70b9\u5c31\u5728\u4e8e\u5982\u4f55\u8ba1\u7b97$f_1$\n\n\u8003\u8651\u4e00\u4e2a\u574f\u70b9$(x,y)$\uff0c\u5927\u6982\u662f\u8fd9\u6837\u7684:\n\n![12.PNG][2]\n\n\u84dd\u8272\u533a\u57df\u5c31\u662f$(n+1)*(m+1)$\u7684\u5730\u56fe\uff0c $P$\u4e3a\u539f\u70b9\u5206\u6210\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u534a\u5e73\u9762\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u8fd9\u91cc\u5355\u72ec\u5bf9\u4e8e\u4e0a\u5e73\u9762\u8fdb\u884c\u8ba1\u7b97\n\n![13.PNG][3]\n\n\u5373$l$\u4e3a$p$\u5230\u5de6\u8fb9\u754c\u7684\u8ddd\u79bb\uff0c$r$\u4e3a$p$\u5230\u53f3\u8fb9\u754c\u7684\u8ddd\u79bb\uff0c$h$\u540c\u7406\u3002\n\n\u6700\u5927\u7684\u6b63\u65b9\u5f62\u8fb9\u957f\u4e0d\u8d85\u8fc7$t=\\min(l+r,h)$\u3002\n\n\u73b0\u5728\u8003\u8651\u4ee5\u70b9$p$\u4e3a\u9876\u70b9\u7684\u6b63\u65b9\u5f62\u5982\u4f55\u8ba1\u7b97(\u8fd9\u4e00\u90e8\u5206\u662f\u6211\u66fe\u7ecf\u6700\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u5c3d\u91cf\u7ed9\u8bfb\u8005\u8bb2\u61c2\u5427)\u3002\n\n\u5bf9\u4e8e\u975e\u6a2a\u5e73\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\u5982\u4f55\u8f6c\u5316?\n\n![14.PNG][4]\n\u8fd8\u8bb0\u5f97\u7b2c\u4e00\u5f20\u56fe\u5417\uff1f\u5bf9\u4e8e\u8fd9\u4e2a\u6b63\u65b9\u5f62\uff0c\u53ef\u4ee5\u5957\u4e0a\u4e00\u4e2a\u6700\u5c0f\u7684\u6a2a\u5e73\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\u6765\u8868\u793a\u5b83\uff0c\u4e5f\u5c31\u662f\u8fd9\u6837\uff1a\n\n![15.PNG][5]\n\n\n\n\u5173\u4e8e\u8fd9\u4e2a\u7684\u6b63\u786e\u6027\uff0c\u4ece\u7b2c\u4e00\u5f20\u56fe\u53ef\u4ee5\u660e\u663e\u5f97\u77e5\uff0c\u5b83\u662f\u552f\u4e00\u7684\u3002\n\n\u4e4b\u540e\u5c31\u662f\u7edf\u8ba1\u8fd9\u4e9b\u6a2a\u5e73\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\u6709\u591a\u5c11\u4e2a\u3002\n\n\u5982\u679c\u4e0d\u8003\u8651\u9650\u5236\u7684\u8bdd\u3002\n\n\u7b54\u6848\u5c31\u662f$\\sum\\limits_{i=1}^{\\min(l+r,h)}i+1=\\frac{t*(t+3)}{2}$\n\n\u51cf\u53bb\u4e0d\u5408\u6cd5\u7684\uff0c\u8fd9\u91cc\u7a0d\u5fae\u89e3\u91ca\u4e00\u4e0b\uff0c\n\n\u5bf9\u4e8e$t>l$\u7684\u90e8\u5206\uff0c\u7ed3\u5408\u56fe\u6765\u7406\u89e3\u4e00\u4e0b(\u8fd9\u4e2a\u56fe\u5927\u7684\u597d\u50cf\u753b\u9519\u4e86\uff0c\u4e0d\u8fc7\u6ca1\u5173\u7cfb)\n\n![16.PNG][6]\n\n\u5927\u6982\u53ef\u4ee5\u7cca\u51fa\u4e0d\u5408\u6cd5\u7684\u65b9\u6848\u5c31\u662f$\\frac{(t-l)*(t-l+1)}{2}$\n\n\u5bf9\u4e8e$r$\u4e5f\u6765\u4e00\u4e0b\u3002\n\n\u7edf\u8ba1\u5b8c\u56db\u4e2a\u65b9\u5411\u4e4b\u540e\uff0c\u53d1\u73b0\u771f\u6b63\u7684\u6a2a\u5e73\u7ad6\u76f4(\u4e5f\u5c31\u662f\u4ee5$p$\u4e3a\u9876\u70b9\uff0c\u4e14\u8fb9\u5728\u683c\u5b50\u4e0a)\u7684\u6b63\u65b9\u5f62\u4f1a\u7b97\u91cd\uff0c\u6240\u4ee5\u8981\u53bb\u91cd\u3002\n\n\u4e4b\u540e$f_2,f_3,f_4$\u5dee\u4e0d\u591a\u5c11\u4e00\u4e2a\u5957\u8def\uff0c\u90fd\u662f\u968f\u4fbf\u679a\u4e3e\u4e24\u4e2a\u574f\u70b9\uff0c\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff0c\u7136\u540e\u901a\u8fc7\u5782\u76f4\u5411\u91cf\u7b97\u51fa\u5269\u4e0b\u4e24\u70b9\u662f\u5426\u5408\u6cd5\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u679a\u4e3e\u8fd9\u4e24\u70b9\u8fde\u7ebf\u662f\u5bf9\u89d2\u7ebf\u8fd8\u662f\u8fb9\u3002\n\n$f_3$\uff0c\u7531\u4e8e\u4e09\u4e2a\u70b9\uff0c\u4efb\u610f\u679a\u4e3e\u4e24\u4e2a\u70b9\uff0c\u4f1a\u91cd\u590d2\u6b21\uff0c\u56e0\u6b64$/3$\n\n$f4$\uff0c\u540c\u7406\uff0c$/6$\n\n$\\operatorname{The ~End}$\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#define ll long long\n#define gc getchar()\n#define eps 1e-8\nusing namespace std;\nconst int M=570707,N=2005,mod=1e8+7;\nconst double pi=acos(-1);\ntemplate<class o>\ninline void qr(o &x)\n{\n\tx=0;char c=gc;int f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=gc;}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=gc;}\n\tx*=f;\n}\ntemplate<class o>\nvoid qw(o x)\n{\n\tif(x<0)putchar('-'),x=-x;\n\tif(x/10)qw(x/10);\n\tputchar(x%10+48);\n}\nint n,m,t;\nstruct Hashmap\n{\n\tstruct node{int x,y,next;}a[M<<1];int len,last[mod];\n\tvoid ins(int i,int j)\n\t{\n\t\tint x=1ll*i*(m+1)*j%M;\n\t\tfor(int k=last[x];k;k=a[k].next)\n\t\t\tif(a[k].x==i&&a[k].y==j)return ;\n\t\ta[++len]=(node){i,j,last[x]};last[x]=len;\n\t}\n\tbool pd(int i,int j)\n\t{\n\t\tint x=1ll*i*(m+1)*j%M;\n\t\tif(!last[x])return 0;\n\t\tfor(int k=last[x];k;k=a[k].next)\n\t\t\tif(a[k].x==i&&a[k].y==j)return 1;\n\t\treturn 0;\n\t}\n}H;\nstruct node\n{\n\tint x,y;\n\tnode(int x=0,int y=0):x(x),y(y){}\n\tbool operator <(const node a)const{return x==a.x?y<a.y:x<a.x;}\n\tnode operator -(const node a)const{return node(x-a.x,y-a.y);}\n\tnode operator +(const node a)const{return node(x+a.x,y+a.y);}\n\tnode operator *(const int a)const{return node(x*a,y*a);}\n\tnode operator /(const int a)const{return node(x/a,y/a);}\n\tinline node sap(){return node(y,-x);}\n\tinline bool even(){return (!(x&1))&&(!(y&1));}\n}pt[N];\ninline bool pdnode(node a){return 0<=a.x&&a.x<=n&&0<=a.y&&a.y<=m;}\nbool legal(node a,node b){return pdnode(a)&&pdnode(b);}\nbool broke(node a){return H.pd(a.x,a.y);}\ninline ll calc0(int n,int m)\n{\n\tll sum=0;int lim=min(n,m);\n\tfor(int i=1;i<=lim;i++)sum=(sum+1ll*i*(n-i+1)*(m-i+1))%mod;\n\treturn sum;\n}\ninline ll calc(int l,int r,int h)\n{\n\tll t=min(l+r,h);\n\tif(!t)return 0;\n\tll sum=t*(t+3)/2%mod;\n\tif(t>l)sum-=(t-l)*(t-l+1)/2%mod;\n\tif(t>r)sum-=(t-r)*(t-r+1)/2%mod;\n\treturn (sum%mod+mod)%mod;\n}\ninline ll calc1(int x,int y)\n{\n\tint a=n-x,b=m-y,c=x,d=y;\n\tll sum=(calc(b,d,c)+calc(b,d,a)+calc(a,c,b)+calc(a,c,d))%mod;\n\tsum-=(min(a,b)+min(b,c)+min(c,d)+min(d,a));\n\treturn (sum%mod+mod)%mod;\n}\ninline ll calc2(node a,node b)\n{\n\tnode tg=(a-b).sap();int sum=0;\n\tif(legal(a+tg,b+tg))sum++;\n\tif(legal(a-tg,b-tg))sum++;\n\tnode mid=a+b,c=mid+tg,d=mid-tg;\n\tif(c.even()&&d.even()&&legal(c/2,d/2))sum++;\n\treturn sum;\n}\ninline ll calc3(node a,node b)\n{\n\tnode tg=(a-b).sap();int sum=0;\n\tif(legal(a+tg,b+tg))sum+=broke(a+tg)+broke(b+tg);\n\tif(legal(a-tg,b-tg))sum+=broke(a-tg)+broke(b-tg);\n\tnode mid=a+b,c=mid+tg,d=mid-tg;\n\tif(c.even()&&d.even()&&legal(c/2,d/2))sum+=broke(c/2)+broke(d/2);\n\treturn sum;\n}\ninline ll calc4(node a,node b)\n{\n\tnode tg=(a-b).sap();int sum=0;\n\tif(legal(a+tg,b+tg))sum+=broke(a+tg)&&broke(b+tg);\n\tif(legal(a-tg,b-tg))sum+=broke(a-tg)&&broke(b-tg);\n\tnode mid=a+b,c=mid+tg,d=mid-tg;\n\tif(c.even()&&d.even()&&legal(c/2,d/2))sum+=broke(c/2)&&broke(d/2);\n\treturn sum;\n}\nint main()\n{\n\tqr(n),qr(m),qr(t);\n\tfor(int i=1;i<=t;i++)qr(pt[i].x),qr(pt[i].y),H.ins(pt[i].x,pt[i].y);\n\tll f0=0,f1=0,f2=0,f3=0,f4=0;f0=calc0(n,m);\n\tfor(int i=1;i<=t;i++)f1+=calc1(pt[i].x,pt[i].y);\n\tfor(int i=1;i<=t;i++)for(int j=i+1;j<=t;j++)\n\t{\n\t\tf2+=calc2(pt[i],pt[j]),f3+=calc3(pt[i],pt[j]);f4+=calc4(pt[i],pt[j]);\n\t}\n\tf3/=3;f4/=6;\n\tll ans=((f0-f1+f2-f3+f4)%mod+mod)%mod;\n\tqw(ans);puts(\"\");\n\treturn 0;\n}\n```\n\n\n  [1]: http://lb2003.top/usr/uploads/2020/03/638081844.png\n  [2]: http://lb2003.top/usr/uploads/2020/03/270779001.png\n  [3]: http://lb2003.top/usr/uploads/2020/03/1943795974.png\n  [4]: http://lb2003.top/usr/uploads/2020/03/189106856.png\n  [5]: http://lb2003.top/usr/uploads/2020/03/2304423128.png\n  [6]: http://lb2003.top/usr/uploads/2020/03/3303995261.png",
        "postTime": 1583834164,
        "uid": 106232,
        "name": "_Sein",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3271 \u3010[JLOI2016]\u65b9\u3011"
    },
    {
        "content": "# \u65b9\n\n[\u4f20\u9001\u95e8](https://www.cnblogs.com/Defoliation-ldlh/p/15253088.html)\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u884c $m$ \u5217\u7684\u77e9\u9635\uff0c\u6bcf\u884c\u7684\u683c\u70b9\u4ece\u4e0a\u5230\u4e0b\u4f9d\u6b21\u7f16\u53f7\u4e3a $0$ \u5230 $n$ \uff0c\u6bcf\u5217\u7684\u683c\u70b9\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7f16\u53f7\u4e3a $0$ \u5230 $m$ \u3002\n\n\u9009\u51fa\u56db\u4e2a\u4e0d\u540c\u7684\u683c\u70b9\uff0c\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u56db\u8fb9\u5f62\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u9009\u6cd5\uff0c\u80fd\u591f\u7ec4\u6210\u4e00\u4e2a\u6b63\u65b9\u5f62\u3002\n\n\u7531\u4e8e\u51fa\u9898\u4eba\u592a\u5bb3\u6015\u4f60\u505a\u51fa\u8fd9\u9053\u9898\uff0c\u4e8e\u662f\u4ed6\u4ece\u8fd9\u4e2a\u77e9\u9635\u4e2d\u5220\u53bb\u4e86 $k$ \u4e2a\u70b9\uff0c\u8fd9 $k$ \u70b9\u5c06\u4e0d\u80fd\u88ab\u9009\u62e9\u3002\n\n## \u5206\u6790\n\n### \u5bb9\u65a5\n\n\u9996\u5148\uff0c\u5fc5\u987b\u6ce8\u610f\u6b64\u5904\u7684\u6b63\u65b9\u5f62\u53ef\u80fd\u662f**\u659c\u7740\u6446\u653e**\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bb9\u65a5\u3002\n\n\u82e5\u8bbe $f_i$ \u8868\u793a\u81f3\u5c11\u6709 $i$ \u4e2a\u9876\u70b9\u4e3a\u574f\u70b9\u7684\u6b63\u65b9\u5f62\u6709\u591a\u5c11\u79cd\u3002\n\n\u90a3\u4e48\uff0c $ans=f_0-f_1+f_2-f_3+f_4$ \u3002\n\n### $f_0$\n\n\u5bf9\u4e8e $f_0$ \u7684\u60c5\u51b5\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5373\u662f\u5047\u8bbe\u6240\u6709\u70b9\u90fd\u662f\u597d\u70b9\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6b63\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u662f\u4e0d\u96be\u6c42\u89e3\u7684\u3002\u770b\u8d77\u6765\u6bd4\u8f83\u96be\u5904\u7406\u7684\u662f\u659c\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u753b\u51fa\u6765\u3002\n\n![](https://www.helloimg.com/images/2021/09/10/ClfMam.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u659c\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u90fd\u662f\u80fd\u591f\u753b\u51fa\u4e00\u4e2a\u6b63\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\u6070\u597d\u628a\u4ed6\u6846\u4f4f\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c**\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u6b63\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u90fd\u80fd\u591f\u5728\u5b83\u7684\u5185\u90e8\u753b\u51fa\u82e5\u5e72\u4e2a\u659c\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62**\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6210\u529f\u7684\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u6c42\u89e3\u5bf9\u4e8e\u4e00\u4e2a\u8fb9\u957f\u4e3a $x$ \u7684\u6b63\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\uff0c\u4f1a\u4ea7\u751f\u591a\u5c11\u7684\u8d21\u732e\u3002\n\n\u4ed4\u7ec6\u89c2\u5bdf\u4e0a\u56fe\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u786e\u5b9a\u4e00\u6761\u8fb9\uff0c\u4ece\u4e0a\u9762\u7684\u4efb\u610f\u4e00\u4e2a\u683c\u70b9\uff0c\u6211\u4eec\u90fd\u662f\u80fd\u591f\u552f\u4e00\u786e\u8ba4\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u8fd9\u4e0d\u96be\u7406\u89e3\uff0c\u6709\u70b9\u7c7b\u4f3c\u4e8e\u91cc\u9762\u7684\u6b63\u65b9\u5f62\u7f13\u6162\u65cb\u8f6c\u7684\u8fc7\u7a0b\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6211\u4eec\u9700\u8981\u7ef4\u6301\u7684\u662f\u56db\u4e2a\u89d2\u843d\u5f62\u6210\u7684\u4e09\u89d2\u5f62\u5168\u7b49\uff0c\u5219\u6bcf\u6b21\u79fb\u52a8\u4f1a\u5e26\u52a8\u53e6\u5916\u4e00\u6761\u8fb9\u4e0a\u7684\u9876\u70b9\u79fb\u52a8\uff0c\u521a\u597d\u80fd\u591f\u79fb\u52a8 $x-1$ \u6b21\uff0c\u518d\u52a0\u4e0a\u6b63\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\u672c\u8eab\uff0c\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u4ea7\u751f\u7684\u8d21\u732e\u4e8b\u5b9e\u4e0a\u5c31\u662f $x$ \u3002\n\n\u8fd0\u7528\u6211\u4eec\u6210\u529f\u5f97\u5230\u7684\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u5219\uff1a\n\n$$f_0=\\sum_{i>=1}^{i<=min(n,m)} i\\times (n-i+1)\\times (m-i+1)$$\n\n### $f_1$\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u89e3\u51b3\u66f4\u590d\u6742\u7684\u6b63\u65b9\u5f62\u4e0a\u81f3\u5c11\u6709\u4e00\u4e2a\u574f\u70b9\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u6240\u6709\u574f\u70b9 \uff0c\u5355\u72ec\u8003\u8651\u6bcf\u4e2a\u574f\u70b9\u4ea7\u751f\u7684\u8d21\u732e\u3002\n\n![](https://www.helloimg.com/images/2021/09/10/ClfTDc.png)\n\n\u5982\u56fe\uff0c\u6211\u4eec\u4ece\u6bcf\u4e2a\u574f\u70b9\u5efa\u7acb\u4e00\u4e2a\u5750\u6807\u7cfb\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u4ecd\u7136\u5148\u8003\u8651\u8fd9\u662f\u4e00\u4e2a\u6b63\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u574f\u70b9\u5411\u56db\u4e2a\u65b9\u5411\u5206\u522b\u5ef6\u4f38\uff0c\u53d8\u6210\u9010\u6e10\u6269\u5927\uff0c\u6700\u540e\u5f97\u5230\u7684\u8d21\u732e\u4e0d\u96be\u6c42\u5f97\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u659c\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\u4e86\uff1f\u4e0a\u4e00\u4e2a\u5c0f\u95ee\u9898\u4e2d\uff0c\u6211\u4eec\u77e5\u9053\u4e86**\u5bf9\u4e8e\u4e00\u4e2a\u8fb9\u957f\u4e3a $x$ \u7684\u6b63\u65b9\u5f62\uff0c\u4ece\u5b83\u8fb9\u4e0a\u7684\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u4e00\u4e2a\u6b63\u65b9\u5f62**\u3002\n\n\u5219\u6211\u4eec\u53c8\u6210\u529f\u7684\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u6b63\u7740\u7684\u6b63\u65b9\u5f62\u7684\u8fb9\u4e0a\uff0c\u4f1a\u5b58\u5728\u8fd9\u4e2a\u574f\u70b9\uff0c\u4ea7\u751f\u7684\u8d21\u732e\u5373\u662f\u8fd9\u79cd\u6b63\u65b9\u5f62\u7684\u4e2a\u6570\uff0c\u7531\u4e8e\u6211\u4eec\u524d\u9762\u8003\u8651\u4e86\u5728\u6b63\u7740\u6446\u653e\u7684\u6b63\u65b9\u5f62\u9876\u70b9\u4e0a\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u4e0d\u8003\u8651\u8fd9\u4e2a\u574f\u70b9\u662f\u6b63\u7740\u6446\u653e\u6b63\u65b9\u5f62\u7684\u9876\u70b9\u3002\n\n![](https://www.helloimg.com/images/2021/09/10/ClfO4r.png)\n\n(\u56fe\u4e2d\u7684\u7ebf\u6bb5\u8868\u793a\u679a\u4e3e\u7684\u6b63\u65b9\u5f62\u7684\u8fb9\u957f)\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9010\u6b65\u8003\u8651\u8fb9\u957f\u7684\u60c5\u51b5\u3002\n\n\u9996\u5148\uff0c\u4e0d\u5931\u4e00\u822c\u6027\u7684\u5047\u8bbe\uff0c$x<y$ \u3002\n\n\u663e\u7136\uff0c\u8fb9\u957f\u6700\u5c0f\u4e3a $2$ \uff0c\u5373\u7ebf\u6bb5 $1$ \uff0c\u6211\u4eec\u8003\u8651\u5c06\u7ebf\u6bb5 $1$ \u9010\u6b65\u5ef6\u4f38\uff0c\u53d1\u73b0\u6ca1\u589e\u52a0 $1$ \uff0c\u5bf9\u5e94\u7684\u65b9\u6848\u6570\u4e5f\u4f1a\u589e\u52a0 $1$ \uff0c\u7f13\u6162\u5411\u4e0a\u5ef6\u4f38\uff0c\u76f4\u5230\u8fb9\u957f\u4e3a $x+1$ \u65f6\uff0c\u65b9\u6848\u6570\u8fbe\u5230\u6700\u5927\u503c\uff0c\u5373\u6211\u4eec\u7684\u7ebf\u6bb5 $2$ \u3002\n\n\u4e4b\u540e\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21\u6269\u5927\u8fb9\u957f\uff0c\u5b9e\u9645\u4e0a\u7ebf\u6bb5 $2$ \u80fd\u591f\u5411\u4e0b\u79fb\u52a8\u7684\u603b\u6b65\u6570\u4e5f\u5373\u662f\u6211\u4eec\u7684\u603b\u65b9\u6848\u6570\u4e0d\u4f1a\u53d8\u5316\u8fdb\u4e00\u6b65\u53d8\u5316\uff0c\u59cb\u7ec8\u7ef4\u6301\u5728\u67d0\u4e2a\u503c\u4e0a\u3002\n\n\u5f53\u8fbe\u5230 $y+2$ \u65f6\uff0c\u518d\u6b21\u51fa\u73b0\u53d8\u5316\uff0c\u4e5f\u5373\u662f\u6211\u4eec\u7684\u7ebf\u6bb5 $3$ \u7684\u4e0b\u4e00\u6b21\u6269\u5927\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4f1a\u8ba9\u6211\u4eec\u4e0a\u79fb\u7684\u6b65\u6570\u4e5f\u5373\u662f\u6211\u4eec\u7684\u65b9\u6848\u6570\u51cf\u5c11 $1$ \uff0c\u8fd9\u4e2a\u53d8\u5316\u5c06\u6301\u7eed\u5230 $x+y$ \u4e5f\u5373\u662f\u6211\u4eec\u5c06\u6574\u4e2a\u6b63\u65b9\u5f62\u62b5\u6ee1\u3002\n\n\u6211\u4eec\u7684\u8d21\u732e\u6700\u540e\u5176\u5b9e\u5f62\u6210\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u5927\u6982\u957f\u6210\u8fd9\u6837\uff1a\n\n![](https://www.helloimg.com/images/2021/09/10/Clfc0T.png)\n\n\u7b2c\u4e00\u6bb5\uff0c\u5982\u679c\u80fd\u591f\u5b8c\u5168\u53d6\u5230\uff0c\u5373\u4e3a $\\frac{x\\times(x+1)}{2}$ \u3002\n\n\u7b2c\u4e8c\u6bb5\uff0c\u5982\u679c\u80fd\u591f\u5b8c\u5168\u53d6\u5230\uff0c\u5373\u4e3a $x\\times(y-x)$ \u3002\n\n\u7b2c\u4e09\u6bb5\uff0c\u5982\u679c\u80fd\u591f\u5b8c\u5168\u53d6\u5230\uff0c\u5373\u4e3a $\\frac{x\\times (x-1)}{2}$ \u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u8bf4\u7684\u662f**\u5b8c\u5168\u53d6\u5230**\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u80fd\u5b8c\u5168\u53d6\u5230\uff0c\u5373\u4e0d\u5b58\u5728\u8fd9\u4e2a\u533a\u95f4\u6216\u8005\u8bf4\u76ee\u524d\u53d6\u5230\u7684\u8fb9\u957f\u4e8b\u5b9e\u4e0a\u5df2\u7ecf\u8d85\u8fc7\u4e86 $L$ \u7684\u65f6\u5019\u6211\u4eec\u4e0d\u80fd\u5c06\u8fd9\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u5168\u90e8\u4e00\u80a1\u8111\u7684\u5f04\u4e0a\u53bb\u3002\n\n\u7efc\u4e0a\uff0c\u5982\u679c\u8bbe\u6211\u4eec\u4e0a\u8ff0\u7684\u51fd\u6570\u4e3a $Get(x,y,z)$ \uff0c\u8be5\u574f\u70b9\u8ddd\u79bb\u4e0a\u8fb9\u754c\u7684\u8ddd\u79bb\u4e3a $u$ \uff0c\u4e0b\u8fb9\u754c\u7684\u8ddd\u79bb\u4e3a $d$ \uff0c\u5de6\u8fb9\u754c\u7684\u8ddd\u79bb\u4e3a $l$ \uff0c\u53f3\u8fb9\u754c\u7684\u8ddd\u79bb\u4e3a $r$ \uff0c\u5219\uff1a\n\n$$f_1=min(u,r)+min(r,d)+min(d,l)+min(u,l)+Get(u,d,l)+Get(u,d,r)+Get(l,r,u)+Get(l,r,d)$$ \n\n### $f_2$ \n\n\u5230\u8fd9\u91cc\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5f00\u59cb\u6c42 $f_2$ \u4e86\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u6211\u4eec\u786e\u5b9a\u4e86\u4e24\u4e2a\u574f\u70b9\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u574f\u70b9\u80fd\u591f\u5f62\u6210\u7684\u6b63\u65b9\u5f62\u7ed9\u6c42\u89e3\u51fa\u6765\u4e86\u3002\n\n\u5177\u4f53\u5982\u4e0b\u56fe\uff1a\n\n![](https://www.helloimg.com/images/2021/09/10/Clfdj1.png)\n\n\u901a\u8fc7\u5411\u91cf\u7684\u77e5\u8bc6\u6216\u8005\u5176\u4ed6\u7684\u4e00\u4e9b\u65b9\u6cd5\uff0c\u6211\u4eec\u80fd\u591f\u6c42\u51fa\u5176\u4ed6\u4e24\u4e2a\u70b9\u7684\u5750\u6807\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\uff0c\u5c5e\u4e8e\u662f\u6570\u5b66\u77e5\u8bc6\u4e86\u3002\n\n\u6c42\u51fa\u53e6\u5916\u4e24\u4e2a\u70b9\u7684\u5750\u6807\u540e\uff0c\u9996\u5148\u8981\u6ce8\u610f\u8fd9\u4e24\u4e2a\u5750\u6807\u53ef\u80fd\u4e0d\u5728\u683c\u70b9\u4e0a\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u6211\u4eec\u662f\u9700\u8981\u820d\u6389\u7684\u3002\n\n\u7136\u540e\u518d\u89c2\u5bdf\u3002\n\n\u663e\u7136\u6ca1\u6709\u4eba\u60f3\u8981\u518d\u53bb\u6c42\u4e00\u4e0b $f_3$ \uff0c$f_4$ \uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u7684\u65b9\u6cd5\u80fd\u628a\u8fd9\u4e24\u4e2a\u4e1c\u897f\u5220\u53bb\u3002\u5b9e\u9645\u4e0a\u662f\u6709\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u7ed9\u6211\u4eec\u6bcf\u4e2a\u6b63\u65b9\u5f62\u7684\u8d21\u732e\u52a0\u4e0a\u4e00\u4e2a\u7cfb\u6570\u3002\n\n\u5177\u4f53\u53ef\u4ee5\u4e3e\u4e2a\u4f8b\u5b50\u8bf4\u660e\u3002\n\n\u5047\u8bbe\uff0c\u8fd9\u4e2a\u6b63\u65b9\u5f62\u4e0a\u6709\u4e09\u4e2a\u574f\u70b9\u3002\n\n\u90a3\u5176\u5b9e\uff0c\u5728 $f_0$ \u4e2d\uff0c\u5b83\u88ab\u8ba1\u7b97\u4e86 $+1$ \u6b21\uff0c\u5728 $f_1$ \u4e2d\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u574f\u70b9\u90fd\u8981\u786e\u5b9a\u4e00\u6b21\u5b83\uff0c\u5b83\u88ab\u8ba1\u7b97\u4e86 $-3$ \u6b21\uff0c\u663e\u7136\uff0c\u6211\u4eec\u671f\u671b $f_2$ \u4e2d\uff0c\u8ba9\u5b83\u88ab\u8ba1\u7b97 $+2$ \u6b21\u3002\n\n\u6b63\u597d\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u786e\u5b9a\u8fd9\u4e2a\u6b63\u65b9\u5f62\u7684\uff0c\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u6211\u4eec\u80fd\u591f\u786e\u5b9a\u8fd9\u4e2a\u6b63\u65b9\u5f62\u4e0a\u7684\u574f\u70b9\u4e2a\u6570\uff0c\u4e8e\u662f\u4e4e\uff0c\u6211\u4eec\u80fd\u591f\u201c\u667a\u80fd\u7684\u201d\u7ed9\u4ed6\u5b89\u6392\u4e00\u4e2a\u7cfb\u6570\u3002\n\n\u4f46\u662f $f_2$ \u672c\u8eab\u4e2d\u4e5f\u6709\u53ef\u80fd\u662f\u4f1a\u91cd\u590d\u7684\uff0c\u5c31\u50cf $f_1$ \u4e00\u6837\uff0c\u6bcf\u4e24\u7ec4\u4f1a\u91cd\u590d\u786e\u5b9a\u4ed6\u4e00\u6b21\uff0c\u6211\u4eec\u5fc5\u987b\u60f3\u529e\u6cd5\u89c4\u907f\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u7ed9\u6bcf\u4e2a\u574f\u70b9\u6253\u4e0a\u4e00\u4e2a\u7f16\u53f7\uff0c\u53ea\u8981\u5f53\u8fd9\u4e24\u4e2a\u574f\u70b9\u786e\u5b9a\u51fa\u7684\u6b63\u65b9\u5f62\u4e2d\uff0c\u5b83\u4eec\u662f\u7f16\u53f7\u6700\u5927\u7684\u4e24\u4e2a\u574f\u70b9\u65f6\uff0c\u6211\u4eec\u624d\u8ba1\u7b97\u8d21\u732e\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u6709\u6548\u7684\u89c4\u907f\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\n\n\u6c42\u89e3 $f_0$ \u4e0e $f_1$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u6bd4\u8f83\u5c0f\uff0c\u6211\u4eec\u4e3b\u8981\u8c08\u4e00\u8c08\u6c42\u89e3 $f_2$ \u65f6\u7684\u4e00\u4e9b\u95ee\u9898\u3002\n\n\u5982\u679c\u7528 $map$ \u5b9e\u73b0 $f_2$ \u4e2d\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u663e\u7136\u6211\u4eec\u6c42 $f_2$ \u7684\u590d\u6742\u5ea6\u662f $O(k^2logn)$ \u7684\uff0c\u770b\u8d77\u6765\u975e\u5e38\u53ef\u8fc7\uff0c\u4f46\u5176\u5b9e\u5e94\u8be5\u662f\u8fc7\u4e0d\u4e86\u7684(\u6307\u6d1b\u8c37)\uff0c\u5f53\u7136\u5982\u679c\u4f60\u5e38\u6570\u5c0f\u80af\u5b9a\u4e5f\u80fd\u8fc7\u3002\u6211\u4eec\u9700\u8981\u4f18\u5316\u8fd9\u4e2a $log$ \uff0c\u8981\u4e48\u7528 $unorderedmap$ \uff0c\u8981\u4e48\u4f7f\u7528\u79bb\u6563\u5316\uff0c\u90fd\u53ef\u4ee5\u53bb\u6389\u8fd9\u4e2a $log$ \u3002\n\n## CODE\n\n```\n#include <bits/stdc++.h>\n#include <unordered_map>\n#define int long long\nusing namespace std;\nconst int N=1e5+10,M=2e3+10,MOD=1e8+7;\nnamespace IO {\nint len = 0;\nchar ibuf[(1 << 20) + 1], *iS, *iT, out[(1 << 25) + 1];\n#define gh()                                                                   \\\n  (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin),         \\\n   (iS == iT ? EOF : *iS++) : *iS++)\ninline int read() {\n  char ch = gh();\n  int x = 0;\n  char t = 0;\n  while (ch < '0' || ch > '9')\n    t |= ch == '-', ch = gh();\n  while (ch >= '0' && ch <= '9')\n    x = x * 10 + (ch ^ 48), ch = gh();\n  return t ? -x : x;\n}\ninline void putc(char ch) { out[len++] = ch; }\ntemplate <class T> inline void write(T x) {\n  if (x < 0)\n    putc('-'), x = -x;\n  if (x > 9)\n    write(x / 10);\n  out[len++] = x % 10 + 48;\n}\nstring getstr(void) {\n  string s = \"\";\n  char c = gh();\n  while (c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == EOF)\n    c = gh();\n  while (!(c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == EOF))\n    s.push_back(c), c = gh();\n  return s;\n}\nvoid putstr(string str, int begin = 0, int end = -1) {\n  if (end == -1)\n    end = str.size();\n  for (int i = begin; i < end; i++)\n    putc(str[i]);\n  return;\n}\ninline void flush() {\n  fwrite(out, 1, len, stdout);\n  len = 0;\n}\n} // namespace IO\nusing IO::flush;\nusing IO::getstr;\nusing IO::putc;\nusing IO::putstr;\nusing IO::read;\nusing IO::write;\n\nstruct node{\n\tint x,y;\n}p[M];\nstruct pair_hash\n{\n    template<class T1, class T2>\n    std::size_t operator() (const std::pair<T1, T2>& p) const\n    {\n        auto h1 = std::hash<T1>{}(p.first);\n        auto h2 = std::hash<T2>{}(p.second);\n        return h1 ^ h2;\n    }\n};\n\nunordered_map<pair<int, int>, int, pair_hash> mp;\nint n,m,k,cnt,ans;\ninline bool cmp(node a,node b) { return a.y<b.y; }\ninline int Get_val(int x,int y,int L)\n{\n\tint res=0;\n\tif(x>y) swap(x,y);\n//\tif(2<=x+1){\n\t\tif(L<2) return 0;\n\t\telse if(L>x+1) res=(res+((x+1)*x)/2)%MOD;\n\t\telse return (L*(L-1))/2; //\u4ee4x+1=L\uff0c\u5219x=L-1\n//\t}\n//\tif(x+2<=y+1){\n\t\tif(L>y+1) res=(res+x*(y-x))%MOD; //\u8d85\u51fa\uff0c\u52a0\u8d21\u732e\n\t\telse return (res+(L-x-1)*x)%MOD; //\u4ee4y+1=L\n//\t}\n//\tif(y+2<=x+y){\n\t\tif(L>x+y) return (res+(x*(x-1))/2)%MOD;\n\t\telse return (res+(2*x+y-L)*(L-y-1)/2)%MOD; //\u4ee4x+y=L,\u5219x=L-y\n//\t}\n}\nsigned main()\n{\n//\twhile(1){\n//\t\tint x=read(),y=read(),z=read();\n//\t\tprintf(\"%lld\\n\",Get_val(x,y,z));\n//\t}\n\tn=read(),m=read(),k=read();\n\tfor(register int i=1;i<=k;i++){\n\t\tpair<int,int> add;\n\t\tp[i].x=read(),p[i].y=read();\n\t\tadd.first=p[i].x,add.second=p[i].y;\n\t\tmp[add]=++cnt;\n\t}\n\tfor(register int i=1;i<=min(n,m);i++) ans=(ans+i*(n-i+1)%MOD*(m-i+1)%MOD)%MOD;\n\t//sort(p+1,p+k+1,cmp);\n\tfor(register int i=1;i<=k;i++){\n\t\tfor(register int j=i+1;j<=k;j++){ //\u679a\u4e3e\u6b63\u65b9\u5f62\n\t\t\tpair<int,int> a,b;\n\t\t\ta.first=p[i].x,a.second=p[i].y;\n\t\t\tb.first=p[j].x,b.second=p[j].y;\n\t\t\t//printf(\"%d %d %d %d\\n\",a.first,a.second,b.first,b.second);\n\t\t\tint v=min(mp[a],mp[b]);\n\t\t\tint temp,sum;\n\t\t\tint x1=p[i].y,y1=n-p[i].x,x2=p[j].y,y2=n-p[j].x;\n\t\t\t//printf(\"%d %d %d %d\\n\",x1,y1,x2,y2);\n\t\t\tint ny=x2-x1,nx=abs(y2-y1);\n\t\t\t//printf(\"%d %d\\n\",nx,ny);\n\t\t\tif(y2>y1) ny*=-1;\n\t\t\tpair<int,int> p1,p2;\n\t\t\t//\u7b2c\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u4e24\u4e2a\u65b0\u70b9\n\t\t\tp1.first=n-(ny+y1),p1.second=nx+x1;\n\t\t\tp2.first=n-(ny+y2),p2.second=nx+x2;\n\t\t\t//printf(\"%d %d %d %d\\n\",p1.first,p1.second,p2.first,p2.second);\n\t\t\tif(p1.first>=0&&p1.second>=0&&p1.first<=n&&p1.second<=m){\n\t\t\t\tif(p2.first>=0&&p2.second>=0&&p2.first<=n&&p2.second<=m){\n\t\t\t\t\ttemp=0,sum=0;\n\t\t\t\t\tif(mp.find(p1)!=mp.end()) temp=max(mp[p1],temp),++sum;\n\t\t\t\t\tif(mp.find(p2)!=mp.end()) temp=max(mp[p2],temp),++sum;\n\t\t\t\t\tif(v>temp) ans=(ans+sum+1)%MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\u7b2c\u4e8c\u4e2a\u6b63\u65b9\u5f62\u7684\u4e24\u4e2a\u65b0\u70b9\n\t\t\tnx=-nx,ny=-ny;\n\t\t\tp1.first=n-(ny+y1),p1.second=nx+x1;\n\t\t\tp2.first=n-(ny+y2),p2.second=nx+x2;\n\t\t\tif(p1.first>=0&&p1.second>=0&&p1.first<=n&&p1.second<=m){\n\t\t\t\tif(p2.first>=0&&p2.second>=0&&p2.first<=n&&p2.second<=m){\n\t\t\t\t\ttemp=0,sum=0;\n\t\t\t\t\tif(mp.find(p1)!=mp.end()) temp=max(mp[p1],temp),++sum;\n\t\t\t\t\tif(mp.find(p2)!=mp.end()) temp=max(mp[p2],temp),++sum;\n\t\t\t\t\tif(v>temp) ans=(ans+sum+1)%MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\u7b2c\u4e09\u4e2a\u6b63\u65b9\u5f62\u7684\u4e24\u4e2a\u65b0\u70b9\n\t\t\t//if((x2-x1)*(y2-y1)==0) continue; //\n\t\t\tnx=-nx,ny=-ny;\n\t\t\tdouble dx=((x2-x1)/2.0-nx/2.0),dy=((y2-y1)/2.0-ny/2.0);\n\t\t\tif((double)(dx-(int)dx)||(double(dy-(int)dy))) continue; //\u8be5\u6b63\u65b9\u5f62\u4e0d\u5b58\u5728\n\t\t\tp1.first=n-(ny+dy+y1),p1.second=nx+dx+x1;\n\t\t\tp2.first=n-(dy+y1),p2.second=dx+x1;\n\t\t\tif(p1.first>=0&&p1.second>=0&&p1.first<=n&&p1.second<=m){\n\t\t\t\tif(p2.first>=0&&p2.second>=0&&p2.first<=n&&p2.second<=m){\n\t\t\t\t\ttemp=0,sum=0;\n\t\t\t\t\tif(mp.find(p1)!=mp.end()) temp=max(mp[p1],temp),++sum;\n\t\t\t\t\tif(mp.find(p2)!=mp.end()) temp=max(mp[p2],temp),++sum;\n\t\t\t\t\tif(v>temp) ans=(ans+sum+1)%MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//cout<<ans<<\"\\n\";\n\tfor(register int i=1;i<=k;i++){\n\t\tint u,d,l,r;\n\t\tu=p[i].x,d=n-p[i].x,l=p[i].y,r=m-p[i].y;\n\t\tint temp=(min(u,r)+min(r,d)+min(d,l)+min(u,l))%MOD;\n\t\tans=((ans-temp)%MOD+MOD)%MOD;\n\t\tans=((ans-Get_val(u,d,l))%MOD+MOD)%MOD;\n\t\tans=((ans-Get_val(u,d,r))%MOD+MOD)%MOD;\n\t\tans=((ans-Get_val(l,r,u))%MOD+MOD)%MOD;\n\t\tans=((ans-Get_val(l,r,d))%MOD+MOD)%MOD;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1631280506,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "P3271 [JLOI2016]\u65b9[\u9898\u89e3]"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3271)\n\n## \u9898\u610f\n- \u4e00\u4e2a $N\\times M$ \u7684\u7f51\u683c\uff0c\u7531\u5c0f\u6b63\u65b9\u5f62\u94fa\u6210\uff1b\n  - \u663e\u7136\u5b83\u6709 $(N+1)\\times (M+1)$ \u4e2a\u683c\u70b9\uff1b\n- \u5176\u4e2d $K$ \u4e2a\u683c\u70b9\u4e0d\u5141\u8bb8\u6210\u4e3a\u6b63\u65b9\u5f62\u9876\u70b9\uff08\u4e4b\u540e\u5c06\u8fd9 $K$ \u4e2a\u683c\u70b9\u79f0\u4e3a\u201c\u574f\u70b9\u201d\uff09\uff1b\n- \u95ee\u6709\u591a\u5c11\u4e2a\u683c\u70b9\u6b63\u65b9\u5f62\u3002\n\n> \u65e2\u7136\u70b9\u53d8\u5c11\u4e86\uff0c\u95ee\u9898\u4e5f\u5c31\u53d8\u7b80\u5355\u4e86\u3002\n\n## \u9898\u89e3\n\u8003\u8651\u4f7f\u7528\u5bb9\u65a5\uff1a\u6c42\u51fa\u81f3\u5c11\u542b $0$ \u4e2a\u574f\u70b9\u3001\u81f3\u5c11\u542b $1$ \u4e2a\u574f\u70b9\u3001\u2026\u2026\u3001\u81f3\u5c11\u542b $4$ \u4e2a\u574f\u70b9\u7684\u6b63\u65b9\u5f62\u6570\u91cf\uff0c\u4e3a\u4e86\u8868\u8fbe\u65b9\u4fbf\uff0c\u6211\u4eec\u5206\u522b\u79f0\u4e4b\u4e3a $f(0),f(1),\\dots,f(4)$\u3002\n\n\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5e94\u8be5\u662f\u201c\u5df2\u7ecf\u786e\u5b9a 0 \u4e2a\u574f\u70b9\u201d\u3001\u201c\u5df2\u7ecf\u786e\u5b9a 1 \u4e2a\u574f\u70b9\u201d\u2026\u2026\u5373\uff1a\u4ee5 $f(1)$ \u4e3a\u4f8b\uff0c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u574f\u70b9\uff0c\u5e76\u7edf\u8ba1\u628a\u8fd9\u4e2a\u574f\u70b9\u4f5c\u4e3a\u9876\u70b9\u7684\u6b63\u65b9\u5f62\u6570\u91cf\u3002\n\n\u5982\u6837\u4f8b\u4e00\u4e2d\uff0c$f(0)=6$, $f(1)=12$, $f(2)=10$, $f(3)=4$, $f(4)=1$\u3002\n\n\u7b54\u6848\u5373\u4e3a $f(0)-f(1)+f(2)-f(3)+f(4)$\u3002\n\n\u4f9d\u6b21\u8003\u8651\u8ba1\u7b97\u6bcf\u4e2a $f(x)$ \u7684\u65b9\u5f0f\uff1a\n\n**$f(0)$**\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6b63\u65b9\u5f62\uff08\u65e0\u8bba\u662f\u659c\u7684\u8fd8\u662f\u6a2a\u5e73\u7ad6\u76f4\u7684\uff09\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2a\u6a2a\u5e73\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\u628a\u5b83\u6846\u4f4f\uff08\u60f3\u8c61\u5f26\u56fe\uff09\u3002\u90a3\u4e48\u6bcf\u4e2a $i\\times i$ \u7684\u6a2a\u5e73\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\u90fd\u53ef\u4ee5\u5bf9\u5e94 $i$ \u4e2a\u6b63\u65b9\u5f62\uff0c\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dbhkndvu.png)\n\n\u6545\u8003\u8651\u6240\u6709\u6a2a\u5e73\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\uff1a\n\n$$f(1)=\\sum\\limits_{i=1}^{\\min(M,N)}i(M-i+1)(N-i+1)$$\n\n**$f(1)$**\uff1a\u679a\u4e3e\u574f\u70b9\uff0c\u540c\u6837\u8003\u8651\u6a2a\u5e73\u7ad6\u76f4\u7684\u6b63\u65b9\u5f62\uff0c\u800c\u4e14\u5b83\u5fc5\u987b\u7ecf\u8fc7\u8fd9\u4e2a\u574f\u70b9\u3002\u663e\u7136\u6bcf\u4e2a\u8fd9\u6837\u7684\u6b63\u65b9\u5f62\u90fd\u4f1a\u8d21\u732e $1$\u3002\u5206\u522b\u8ba1\u7b97\u6b63\u65b9\u5f62\u5728\u70b9\u4e0a\u65b9\u3001\u4e0b\u65b9\u3001\u5de6\u4fa7\u3001\u53f3\u4fa7\u7684\u8d21\u732e\uff0c\u5b83\u53ef\u4ee5\u770b\u505a\u662f\u70b9\u5728\u7f51\u683c\u5e95\uff0c\u5f80\u5de6\u6709 $l$ \u683c\uff0c\u5f80\u53f3\u6709 $r$ \u683c\uff0c\u5f80\u4e0a\u6709 $h$ \u683c\uff0c\u8bbe\u5176\u8d21\u732e\u4e3a $g(l,r,h)$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nqqsvjua.png)\n\n\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\u6700\u5927\u663e\u7136\u4e3a $a=\\min(h,l+r)$\u3002\u5047\u88c5 $l,r$ \u8db3\u591f\u5927\uff0c\u90a3 $g(l,r,h)$ \u4e3a\uff1a\n\n$$\\begin{aligned}g(l,r,h)&=\\sum\\limits_{i=1}^{a}i+1\\\\ &=\\dfrac{i(i+3)}{2}\\end{aligned}$$\n\n\u63a5\u7740\u8ba1\u7b97\u6b63\u65b9\u5f62\u8d85\u51fa\u5de6\u3001\u53f3\u8fb9\u754c\u7684\u65b9\u6848\u6570\uff0c\u51cf\u53bb\u5373\u53ef\u5f97\u5230 $g(l,r,h)$\u3002\uff08\u4e0d\u518d\u63a8\u5bfc\uff0c\u5177\u4f53\u516c\u5f0f\u89c1\u4ee3\u7801\uff09\n\n\u6c42\u51fa\u56db\u4e2a\u65b9\u5411\u7684 $g$\uff0c\u6700\u540e\u51cf\u53bb\u574f\u70b9\u4f5c\u4e3a\u89d2\u7684\u65b9\u6848\u6570\uff08\u91cd\u590d\u8ba1\u6570\uff09\uff0c\u5f97\u5230 $f(1)$\u3002\n\n**f(2),f(3),f(4)**\uff1a\u679a\u4e3e\u4e24\u4e2a\u574f\u70b9\uff0c\u5e76\u9a8c\u8bc1\u7b2c\u4e09\u3001\u7b2c\u56db\u4e2a\u9876\u70b9\u662f\u5426\u5728\u7f51\u683c\u5185\uff08\u662f\u5426\u662f\u574f\u70b9\uff09\u3002\n\n\u7531\u4e8e\u8ba1\u7b97 $f(3),f(4)$ \u65f6\u679a\u4e3e\u5230\u4e09\u70b9\uff08\u56db\u70b9\uff09\u4e2d\u4efb\u610f\u4e24\u70b9\u90fd\u4f1a\u8ba1\u4e00\u6b21\u6570\uff0c\u6240\u4ee5 $f(3),f(4)$ \u8ba1\u7b97\u5230\u6700\u540e\u8981\u5206\u522b\u9664\u4ee5 ${3\\choose 2}=3,{4\\choose 2}=6$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/a6iwy478.png)\n\u6c42\u51fa\u6240\u6709 $f$ \u4fbf\u80fd\u5f97\u5230\u7b54\u6848\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint getint(){\n\tint ans=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9'){\n\t\tans=ans*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn ans;\n}\nconst int mod=1e8+7;\n#define mp make_pair\n#define fi first\n#define se second\n\nint n,m,k;\nset<pair<int,int> >p;\n\nbool check(int x,int y){\n\t//\u68c0\u67e5\u70b9\u662f\u5426\u5728\u7f51\u683c\u5185\n\treturn 0<=x&&x<=n&&0<=y&&y<=m;\n}\n\nint calc0(){\n\t//f(0)\n\tint ans=0;\n\tfor(int i=1;i<=min(m,n);i++){\n\t\tans+=(m-i+1ll)*(n-i+1ll)*i%mod;\n\t\tans%=mod;\n\t}\n\treturn ans;\n}\nint calc(int l,int r,int h){\n\t//g(l,r,h)\n\tlong long ans=0;\n\tint a=min(l+r,h);\n\tans=a*(a+3ll)/2;\n\tif(a>l)ans-=(a-l)*(a-l+1ll)/2;\n\tif(a>r)ans-=(a-r)*(a-r+1ll)/2;\n\treturn ans%mod;\n}\nint calc1(){\n\t//f(1)\n\tint ans=0;\n\tfor(set<pair<int,int> >::iterator it=p.begin();it!=p.end();++it){\n\t\tint x=it->fi,y=it->se;\n\t\tans+=calc(x,n-x,y);\n\t\tans+=calc(x,n-x,m-y);\n\t\tans+=calc(y,m-y,x);\n\t\tans+=calc(y,m-y,n-x);\n\t\tans-=min(x,y);\n\t\tans-=min(x,m-y);\n\t\tans-=min(n-x,m-y);\n\t\tans-=min(n-x,y);\n\t\tans=(ans+mod)%mod;\n\t}\n\treturn ans;\n}\nint calc2(){\n\t//f(2)\n\tint ans=0;\n\tfor(set<pair<int,int> >::iterator it=p.begin();it!=p.end();++it){\n\t\tfor(set<pair<int,int> >::iterator jt=it;jt!=p.end();++jt){\n\t\t\tif(it==jt)continue;\n\t\t\tint x1=it->fi,y1=it->se,x2=jt->fi,y2=jt->se;\n\t\t\tif(check(x1+y1-y2,y1-x1+x2)&&check(x2-y2+y1,y2+x2-x1))ans++;\n\t\t\tif(check(x1-y1+y2,y1+x1-x2)&&check(x2+y2-y1,y2-x2+x1))ans++;\n\t\t\t\n\t\t\tif(((y1+y2+x1+x2)&1)==0){\n\t\t\t\tif(check((x1+x2+y2-y1)/2,(y1+y2-x2+x1)/2)&&\n\t\t\t\t   check((x1+x2-y2+y1)/2,(y1+y2+x2-x1)/2))ans++;\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint calc3(){\n\t//f(3)\n\tint ans=0;\n\tfor(set<pair<int,int> >::iterator it=p.begin();it!=p.end();++it){\n\t\tfor(set<pair<int,int> >::iterator jt=it;jt!=p.end();++jt){\n\t\t\tif(it==jt)continue;\n\t\t\tint x1=it->fi,y1=it->se,x2=jt->fi,y2=jt->se;\n\t\t\tif(check(x1+y1-y2,y1-x1+x2)&&check(x2-y2+y1,y2+x2-x1)){\n\t\t\t\tif(p.count(mp(x1+y1-y2,y1-x1+x2)))\n\t\t\t\t\t++ans;\n\t\t\t\tif(p.count(mp(x2-y2+y1,y2+x2-x1)))\n\t\t\t\t\t++ans;\n\t\t\t}\n\t\t\tif(check(x1-y1+y2,y1+x1-x2)&&check(x2+y2-y1,y2-x2+x1)){\n\t\t\t\tif(p.count(mp(x1-y1+y2,y1+x1-x2)))\n\t\t\t\t\t++ans;\n\t\t\t\tif(p.count(mp(x2+y2-y1,y2-x2+x1)))\n\t\t\t\t\t++ans;\n\t\t\t}\n\t\t\tif(((y1+y2+x1+x2)&1)==0){\n\t\t\t\tif(check((x1+x2+y2-y1)/2,(y1+y2-x2+x1)/2)&&\n\t\t\t\t   check((x1+x2-y2+y1)/2,(y1+y2+x2-x1)/2)){\n\t\t\t\t\tif(p.count(mp((x1+x2+y2-y1)/2,(y1+y2-x2+x1)/2)))\n\t\t\t\t\t\t++ans;\n\t\t\t\t\tif(p.count(mp((x1+x2-y2+y1)/2,(y1+y2+x2-x1)/2)))\n\t\t\t\t\t   \t++ans;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\treturn ans/3;\n}\nint calc4(){\n\t//f(4)\n\tint ans=0;\n\tfor(set<pair<int,int> >::iterator it=p.begin();it!=p.end();++it){\n\t\tfor(set<pair<int,int> >::iterator jt=it;jt!=p.end();++jt){\n\t\t\tif(it==jt)continue;\n\t\t\tint x1=it->fi,y1=it->se,x2=jt->fi,y2=jt->se;\n\t\t\tif(check(x1+y1-y2,y1-x1+x2)&&check(x2-y2+y1,y2+x2-x1)){\n\t\t\t\tif(p.count(mp(x1+y1-y2,y1-x1+x2)) && p.count(mp(x2-y2+y1,y2+x2-x1)))\n\t\t\t\t\t++ans;\n\t\t\t}\n\t\t\tif(check(x1-y1+y2,y1+x1-x2)&&check(x2+y2-y1,y2-x2+x1)){\n\t\t\t\tif(p.count(mp(x1-y1+y2,y1+x1-x2)) && p.count(mp(x2+y2-y1,y2-x2+x1)))\n\t\t\t\t\t++ans;\n\t\t\t}\n\t\t\tif(((y1+y2+x1+x2)&1)==0){\n\t\t\t\tif(check((x1+x2+y2-y1)/2,(y1+y2-x2+x1)/2&&\n\t\t\t\t   check((x1+x2-y2+y1)/2,(y1+y2+x2-x1)/2)))\n\t\t\t\t\tif(p.count(mp((x1+x2+y2-y1)/2,(y1+y2-x2+x1)/2))&&\n\t\t\t\t\t   p.count(mp((x1+x2-y2+y1)/2,(y1+y2+x2-x1)/2)))\n\t\t\t\t\t   \tans++;\n\t\t\t}\n\t\t}\n\t}\n\treturn ans/6;\n}\n\nint main(){\n\tn=getint();\n\tm=getint();\n\tk=getint();\n\tfor(int i=0;i<k;i++){\n\t\tint x=getint(),y=getint();\n\t\tp.insert(mp(x,y));\n\t}\n\t//cerr<<calc0()<<\" \"<<calc1()<<\" \"<<calc2()<<\" \"<<calc3()<<\" \"<<calc4()<<endl;\n\tcout<<((calc0()-calc1()+calc2()-calc3()+calc4())%mod+mod)%mod;\n\treturn 0;\n}\n\n```",
        "postTime": 1576245817,
        "uid": 37676,
        "name": "\u7834\u58c1\u4eba\u4e94\u53f7",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3271 \u3010[JLOI2016]\u65b9\u3011"
    },
    {
        "content": "\uff089.15 Update\uff1a\u628a**\u81f3\u5c11\u4e00\u4e2a\u70b9\u88ab\u5220\u6389\u7684\u6570\u91cf**\u8865\u5145\u4e86\u4e00\u4e0b\uff0c~~\u6211\u662f\u7edd\u5bf9\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u662f\u56e0\u4e3a\u61d2\u624d\u8fc7\u4e86\u8fd9\u4e48\u4e45\u624d\u6765\u4fee\u6539\u7684~~\uff09\n\n[\u5e76\u4e0d\u4f1a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Illusory-dimes/p/15253264.html)\n\n\uff08\u6ce8\uff1a\u672c\u9898\u89e3\u5e9f\u8bdd\u6709\u70b9\u591a\uff0c\u5e0c\u671b\u80fd\u5199\u7684\u80fd\u901a\u4fd7\u6613\u61c2\u70b9\n\n## Description\n\n\u5728\u4e00\u4e2a $n$ \u884c $m$ \u5217\u7684\u65b9\u683c\u56fe\u4e0a\uff0c\u6709 $k$ \u4e2a\u70b9\u88ab\u5220\u6389\u4e86\uff0c\u95ee\u5269\u4e0b\u7684\u70b9\u80fd\u6784\u6210\u591a\u5c11\u4e2a\u4e09\u89d2\u5f62\u3002\n\n$0\\leq n,\\ m \\leq 10^6$ \uff0c $0\\leq k \\leq 2\\cdot 10^3$\n\n## Analysis\n\n\u9898\u610f\u5927\u6982\u5c31\u662f\u95ee\u7531\u6240\u6709\u70b9\u6784\u6210\u7684\u6240\u6709\u6b63\u65b9\u5f62\u4e2d\uff0c\n\n\u6709\u591a\u5c11\u4e2a\u662f\u5176\u56db\u4e2a\u9876\u70b9\u90fd\u6ca1\u88ab\u5220\u6389\u7684\u3002\n\n\u76f4\u63a5\u505a\u4f3c\u4e4e\u4e0d\u592a\u884c\uff0c\u53ef\u4ee5\u60f3\u60f3\u7b97\u7b54\u6848\u7684\u8865\u96c6\u3002\n\n\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u8bdd\uff0c\u53ea\u8981\u679a\u4e3e\u4e24\u4e2a\u70b9\uff0c\u5c31\u53ef\u4ee5\u7b97\u5f97\u8fd9\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u552f\u4e09\u7684\u6b63\u65b9\u5f62\u3002\n\n\u7ed9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0fkbneiw.png)\n\n\u6240\u4ee5\u7b97\u7b54\u6848\u7684\u8865\u96c6\u7684\u8bdd\uff0c\u9009\u62e9\u679a\u4e3e\u88ab\u5220\u6389\u4e86\u7684\u70b9\uff0c\u590d\u6742\u5ea6\u4e0a\u662f\u975e\u5e38\u5408\u9002\u7684\u3002\n\n\u6240\u4ee5\u57fa\u672c\u53ef\u4ee5\u786e\u5b9a\uff0c\u7b54\u9898\u601d\u8def\u5e94\u8be5\u8ddf $O(k^2)$ \u679a\u4e3e\u6709\u5bc6\u5207\u8054\u7cfb\u3002\n\n------------\n\n\u73b0\u5728\u518d\u6765\u770b\u770b\u8865\u96c6\u8981\u5e72\u4ec0\u4e48\u3002\n\n\u65e0\u975e\u5c31\u662f\u4e00\u4e2a\u70b9\u88ab\u5220\u53bb\u7684\u6b63\u65b9\u5f62\uff0c\u4e24\u4e2a\u7684\uff0c\u4e09\u4e2a\u7684\u4ee5\u53ca\u56db\u4e2a\u7684\u6570\u91cf\u603b\u548c\u3002\n\n\u4f46\u662f\u53d1\u73b0\u8fd9\u4e2a\u679a\u4e3e\u679a\u4e3e\uff0c\u4e0d\u80fd\u505a\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\uff0c\u5982\u679c\u8981\u505a\u7684\u8bdd\u597d\u50cf\u4e5f\u4e0d\u592a\u884c\u3002\u3002\n\n------------\n\n\u518d\u60f3\u60f3\u600e\u4e48\u907f\u514d\u6389\u3002\n\n\u5176\u5b9e\u8fd9\u6837\u76f4\u63a5\u6c42\u7684\u8bdd\uff0c\u672c\u8d28\u4e0a\u6211\u4eec\u8981\u8003\u8651\u7684\u5730\u65b9\u9664\u4e86\u679a\u4e3e\u7684\u70b9\uff0c\u8fd8\u6709\u5176\u4ed6\u4e09\u4e2a\u70b9\u7684\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u5bb9\u65a5\uff0c\u628a\u6c42\u7684\u4e1c\u897f\u5168\u90e8\u6539\u6210\u81f3\u5c11\u6709\uff08 1-4 \uff09\u4e2a\u70b9\u88ab\u5220\u6389\u7684\u6b63\u65b9\u5f62\u7684\u6570\u91cf\u3002\n\n\u8fd9\u6837\u6c42\u7684\u65f6\u5019\uff0c\u4e5f\u53ea\u53bb\u5927\u80c6\u7684\u679a\u4e3e\u5c31\u884c\u4e86\u3002\n\n\u770b\u8d77\u6765\u5f88\u53ef\u505a\u7684\u6837\u5b50\uff01\n\n## Solution\n\n### \u81f3\u5c11\u96f6\u4e2a\u70b9\u88ab\u5220\u6389\u7684\u6b63\u65b9\u5f62\u6570\u91cf\uff08\u603b\u65b9\u6848\u6570\uff09\n\n\u76f4\u63a5\u7b97\u597d\u50cf\u4e5f\u4e0d\u884c\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4e00\u7cfb\u5217\u7684\u6b63\u65b9\u5f62\u53ef\u80fd\u5b58\u5728\u4ec0\u4e48\u6837\u7684\u7c7b\u4f3c\u7684\u7279\u5f81\u3002\n\n\u6bd4\u5982\u659c\u7740\u7684\u6b63\u65b9\u5f62\u80fd\u201c\u5708\u8d77\u6765\u201d\u3002\n\n\u7ed9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/il42udq8.png)\n\n\u53d1\u73b0\u4e00\u4e2a\u201c\u5708\u201d\u80fd\u5708\u4f4f\u597d\u591a\u6b63\u65b9\u5f62\uff0c\u5927\u5c0f\u76f8\u540c\u7684\u6b63\u65b9\u5f62\u80fd\u5708\u4f4f\u7684\u6570\u91cf\u53c8\u90fd\u662f\u4e00\u6837\u7684\u3002\n\n\u6240\u4ee5\u679a\u4e3e\u201c\u5708\u201d\u7684\u5927\u5c0f $O(\\min(n, m))$ \u5c31\u53ef\u4ee5\u7b97\u4e86\u3002\n\n------------\n\n### \u81f3\u5c11\u4e00\u4e2a\u70b9\u88ab\u5220\u6389\u7684\u6b63\u65b9\u5f62\u6570\u91cf\n\n\u56e0\u4e3a\u53ea\u8981\u627e\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u4e5f\u53ea\u8981\u679a\u4e3e\u4e00\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u88ab\u5220\u53bb\u7684\u70b9\uff0c\u4ee5\u5b83\u4e3a\u539f\u70b9\u5411\u56db\u5468\u627e\u5230\u4e00\u4e2a\u65b0\u6b63\u65b9\u5f62\u5bf9\u89d2\u7ebf\u4e0a\u7684\u70b9\uff0c\u5206\u6210\u4e0e\u8be5\u70b9\u540c\u7eb5\u5750\u6807\u6216\u6a2a\u5750\u6807\u548c\u5176\u4ed6\u70b9\u5206\u7c7b\u7edf\u8ba1\uff0c\u7136\u540e\u52a0\u8d77\u6765\u5c31\u662f\u5408\u6cd5\u4e2a\u6570\u4e86\u3002\n\n\u6ce8\u610f\u4e0b\u8fd9\u4e2a\u5176\u4ed6\u70b9\u4e2d\u6709\u659c\u7684\u4e0d\u592a\u6b63\u5e38\u7684\u90a3\u79cd\uff08\u6bd4\u5982\u4e0a\u56fe\u4e2d\u7d2b\u8272\u90a3\u4e2a\uff09\u3002\n\n\u8fd9\u79cd\u60c5\u51b5\u662f\u5728\u5bf9\u89d2\u7ebf\u6a2a\u7eb5\u5750\u6807\u5dee\u540c\u5947\u5076\u7684\u65f6\u5019\u3002\n\n\u56e0\u4e3a\u53ea\u6709\u8fd9\u6837\u53e6\u4e00\u6761\u5bf9\u89d2\u7ebf\u624d\u80fd\u7a33\u7a33\u7684\u843d\u5728\u4e24\u4e2a\u70b9\u4e0a\u800c\u4e0d\u662f\u60ac\u5728\u7a7a\u4e2d\u3002\n\n------------\n\n\u6765\u5b9e\u64cd\u4e00\u4e0b\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n#### 1. \u5728\u8be5\u70b9\u4e0a\u4e0b\u5de6\u53f3\u7684\u4e24\u6761\u76f4\u7ebf\u4e0a\n\n\u4ee5\u4e0b\u9762\u534a\u8fb9\u4e3a\u4f8b\uff0c\u7ed9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ggkga23o.png)\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u7ebf\u4e0a\u53ea\u6709\u8ddd\u70b9\u5076\u6570\u8ddd\u79bb\u7684\u5b58\u5728\u6b63\u65b9\u5f62\u3002\u540c\u65f6\uff0c\u7eff\u8272\u90a3\u4e2a\u6b63\u65b9\u5f62\uff0c\u7531\u4e8e\u53f3\u8fb9\u8d85\u51fa\u8fb9\u754c\uff0c\u4e5f\u4e0d\u5408\u6cd5\u3002\n\n\u7c7b\u6bd4\u6b64\u505a\u6cd5\uff0c\u53ef\u4ee5\u628a\u4e0a\u4e0b\u5de6\u53f3\u90fd\u641e\u5b9a\u3002\n\n------------\n\n#### 2. \u5176\u4ed6\n\n\u524d\u9762\u6709\u7ed9\u5230\u4e00\u4e2a\u5408\u6cd5\u6b63\u65b9\u5f62\u7684\u6761\u4ef6\uff0c\u90a3\u4e48\uff0c\n\n\u4ee5\u5de6\u4e0b\u89d2\u4e3a\u4f8b\uff0c\u518d\u7ed9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3iv2ihkq.png)\n\n\u5148\u629b\u5f00\u90a3\u4e9b\u659c\u7ebf\u4e0d\u8c08\uff0c\u5708\u8d77\u6765\u7684\u70b9\u5c31\u662f\u6240\u6709\u80fd\u6784\u6210\u6b63\u65b9\u5f62\u7684\u70b9\u4eec\uff08\u7c89\u7d2b\u8272\u5747\u4e3a\u5947\u6570\uff0c\u6de1\u84dd\u8272\u5747\u4e3a\u5076\u6570\uff09\n\n\u5168\u90e8\u628a\u6b63\u65b9\u5f62\u590d\u539f\u51fa\u6765\u540e\uff0c\u4f1a\u53d1\u73b0\u6709\u4e9b\u5df2\u7ecf\u8d85\u51fa\u4e86\u8fb9\u754c\uff0c\u4e5f\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u4ec0\u4e48\u60c5\u51b5\u4e0b\u7684\u70b9\u662f\u4e0d\u5408\u6cd5\u7684\u5462\uff1f\n\n------------\n\n1.\u7b2c\u4e00\u7c7b\u662f\u50cf\u6700\u5de6\u4e0b\u89d2\u7684\u90a3\u4e2a\u84dd\u70b9\uff0c\u590d\u539f\u51fa\u6765\u7684\u8bdd\u4e0b\u65b9\u7684\u70b9\u663e\u7136\u662f\u51fa\u4e86\u81ea\u5bb6\u7684\u5927\u95e8\u3002\n\n\u5982\u679c\u5de6\u8fb9\u8fd8\u6709\u70b9\uff0c\u5bf9\u5e94\u7684\u6700\u4e0b\u9762\u7684\u9ec4\u8272\u7684\u659c\u7ebf\u4e0a\u7684\u70b9\u540c\u6837\u90fd\u4e0d\u5408\u6cd5\uff0c\u6240\u4ee5\u8fd9\u4e9b\u4e0d\u5408\u6cd5\u7684\u70b9\u90fd\u88ab\u201c\u7ed1\u5b9a\u201d\u5230\u4e86\u4e00\u8d77\u3002\n\n------------\n\n2.\u7b2c\u4e8c\u7c7b\u540c\u7406\uff0c\u5206\u4e24\u4e2a\u65b9\u5411\uff0c\u4e00\u4e2a\u53f3\u4e0b\u89d2\uff0c\u4e00\u4e2a\u5de6\u4e0a\u89d2\uff0c\u4f46\u6b64\u56fe\u4e24\u8005\u90fd\u662f\u538b\u7ebf\uff0c\u6ca1\u6709\u4e0d\u5408\u6cd5\u7684\u3002\n\n\u611f\u6027\u7406\u89e3\u7684\u8bdd\uff0c\u8fd8\u662f\u4e00\u6837\uff0c\u4e0d\u5408\u6cd5\u7684\u70b9\u90fd\u88ab\u201c\u7ed1\u5b9a\u201d\u5230\u4e86\u84dd\u8272\u7684\u659c\u7ebf\u4e0a\u3002\n\n\u4e8e\u662f\uff0c\u4e0d\u5408\u6cd5\u7684\u70b9\u201c\u7ed1\u5b9a\u201d\u8d77\u6765\u7684\u8bdd\uff0c\u4e5f\u5c31\u66f4\u65b9\u4fbf\u4e8e\u8ba1\u7b97\u3002\n\n\n\n------------\n\n\n\u4f46\u662f\uff0c\u540c\u65f6\u6211\u4eec\u8fd8\u5e94\u8be5\u8981\u60f3\u5230\u8fd9\u6837\u4f1a\u4e0d\u4f1a\u9700\u8981\u5bb9\u65a5\uff0c\n\n\u5982\u679c\u4e24\u7c7b\u4e0d\u5408\u6cd5\u70b9\u6709\u4ea4\u96c6\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rzyj7zhb.png)\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u70b9\u8981\u51fa\u73b0\u5728\u8d85\u51fa\u4e24\u4e2a\u8fb9\u754c\u7684\u4e24\u5757\u7d2b\u8272\u9634\u5f71\u624d\u6709\u53ef\u80fd\u51fa\u73b0\u540c\u4e3a\u4e24\u7c7b\u4e0d\u5408\u6cd5\u70b9\u7684\u60c5\u51b5\u3002\n\n\u4f46\u662f\u7a0d\u7a0d\u60f3\u4e00\u4e0b\uff0c\u8fd9\u91cc $a^2+b^2=c^2$ \uff0c\u4f46\u662f\u6211\u4eec\u590d\u539f\u51fa\u6765\u7684\u6b63\u65b9\u5f62\u8fb9\u957f\u4e5f\u662f $p^2+p^2=c^2$ \uff0c\u5f88\u663e\u7136\u662f\u6ca1\u6709 $p>a$ \u4e14 $p>b$ \u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u4e0d\u7528\u60f3\u5bb9\u65a5\u4e86\u3002\n\n------------\n\n### \u81f3\u5c11\u4e8c\uff0c\u4e09\uff0c\u56db\u4e2a\u70b9\u88ab\u5220\u6389\u7684\u6b63\u65b9\u5f62\u6570\u91cf\n\n\u5148\u679a\u4e3e\uff0c\u5bf9\u4e8e\u5b58\u5728\u7684\u4e09\u4e2a\u6b63\u65b9\u5f62\uff0c\u8981\u5148\u5224\u65ad\u8fd9\u4e09\u4e2a\u6b63\u65b9\u5f62\u5408\u4e0d\u5408\u6cd5\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u6709\u7684\u6b63\u65b9\u5f62\u5750\u6807\u4e0d\u5408\u6cd5\uff0c\u6216\u8005\uff0c\n\n\u518d\u7ed9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6fs78ypk.png)\n\n\u8fd9\u73a9\u610f\u663e\u7136\u4e0d\u5bf9\u5440\uff01\n\n\u6392\u9664\u6389\u4e0d\u5408\u6cd5\u7684\u6b63\u65b9\u5f62\u540e\u5c31\u80fd\u76f4\u63a5\u7b97\u4e86\u3002\n\n\u4f46\u5176\u5b9e\u8fd9\u6837\u5b50\u7684\u7b54\u6848\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u3002\u3002\n\n\u6240\u4ee5\u8fd8\u8981\u518d\u60f3\u60f3\u76f4\u63a5\u8fd9\u6837\u7b97\u5bf9\u4e0d\u5bf9\uff0c\n\n\u76ef\u7740\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1uj760sk.png)\n\n\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u53ea\u6709\u4e24\u4e2a\u70b9\u88ab\u5220\u6389\u4e86\uff0c\u90a3\u4e48\u679a\u4e3e\u7684\u65f6\u5019\uff0c\n\n\u4f1a\u5bf9\u81f3\u5c11\u4e24\u4e2a\u7684\u6570\u91cf\u8d21\u732e 1 \uff0c\u6ca1\u6709\u95ee\u9898\u3002\n\n------------\n\n\u5982\u679c\u662f\u4e09\u4e2a\u70b9\u7684\u8bdd\uff0c\u8fd9\u4e2a\u6b63\u65b9\u5f62\u4f1a\u88ab\u679a\u4e3e $C_3^2 = 3$ \u6b21\uff0c\u5176\u4e2d\uff0c\n\n\u4f1a\u5bf9\u81f3\u5c11\u4e24\u4e2a\u7684\u6570\u91cf\u8d21\u732e 3 \uff0c\u6ca1\u6709\u95ee\u9898\u3002\n\n\u4f1a\u5bf9\u81f3\u5c11\u4e09\u4e2a\u7684\u6570\u91cf\u8d21\u732e 3 \uff0c\u90a3\u4e00\u79cd\u65b9\u6848\u88ab\u7b97\u4e86 3 \u6b21\u3002\n\n------------\n\n\u5982\u679c\u662f\u56db\u4e2a\u70b9\u7684\u8bdd\uff0c\u8fd9\u4e2a\u6b63\u65b9\u5f62\u4f1a\u88ab\u679a\u4e3e $C_4^2 = 6$ \u6b21\uff0c\u5176\u4e2d\uff0c\n\n\u4f1a\u5bf9\u81f3\u5c11\u4e24\u4e2a\u7684\u6570\u91cf\u8d21\u732e 6 \uff0c\u6ca1\u6709\u95ee\u9898\u3002\n\n\u4f1a\u5bf9\u81f3\u5c11\u4e09\u4e2a\u7684\u6570\u91cf\u8d21\u732e 12 \uff0c\u56db\u79cd\u65b9\u6848\u90fd\u88ab\u7b97\u4e86 3 \u6b21\u3002\n\n\u4f1a\u5bf9\u81f3\u5c11\u4e24\u4e2a\u7684\u6570\u91cf\u8d21\u732e 6 \uff0c\u90a3\u4e00\u79cd\u65b9\u6848\u88ab\u7b97\u4e86 6 \u6b21\u3002\n\n------------\n\n\u6240\u4ee5\u6700\u540e\u7b97\u51fa\u6765\u7684\u81f3\u5c11\u4e09\u4e2a\u7684\u6570\u91cf\u9664\u4ee5 3 \uff0c\u81f3\u5c11\u56db\u4e2a\u7684\u6570\u91cf\u9664\u4ee5 6 \uff0c\u5c31\u7b97\u641e\u5b9a\u6574\u4e2a\u9898\u76ee\u4e86\u3002\n\n## Attention\n\n\u5b58\u5750\u6807\u662f\u5426\u88ab\u5220\u53bb\u4e0d\u80fd\u6570\u7ec4\u5b58\uff0c\u6240\u4ee5\u8981\u5f00 map \u6216 set \uff01\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(k^2\\log(nm))$ \uff0c\u53ea\u6709 50 \u5206\u3002\n\n\u6240\u4ee5\u8981\u7528 unordered_map \u6216 unordered_set  \uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(k^2)$ \uff0c\u5c31\u80fd\u62ff\u5230 100 \u5566\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define id(i, j) i * (m + 1) + j + 1\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e6 + 10, M = 2e3 + 10;\nconst ll mod = 1e8 + 7;\nll n, m, k, zer, sig, dou, tri, qua, ans;\nstruct mdzz {\n\tll u, v;\n} p[N];\nunordered_set<ll> vis;\ninline ll read() {\n\tll s = 0, w = 1;\n\tchar ch = getchar();\n\twhile (ch < '0' || ch > '9') {if (ch == '-') w = -1; ch = getchar();}\n\twhile (ch >= '0' && ch <= '9') {s = (s << 3) + (s << 1) + ch - '0'; ch = getchar();}\n\treturn s * w;\n}\ninline int mul(int a, int b) {\n\treturn (1ll * a * b) % mod;\n}\ninline int pd(ll zb) {\n\treturn vis.find(zb) != vis.end();\n}\ninline void ans_zero() {\n\tint lim = min(n, m);\n\tfor (int i = 1; i <= lim; ++i) {\n\t\tzer = (zer + mul(i, mul(n - i + 1, m - i + 1))) % mod;\n\t}\n}\ninline int anslrh(int l ,int r, int h) {\n\tint t = min(l + r, h);\n\tif (!t) return 0;\n\tint ret = (1ll * t * (t + 3) >> 1ll) % mod;\n\tif (t > l) ret = (ret - (1ll * (t - l) * (t - l + 1) >> 1) % mod + mod);\n\tif (t > r) ret = (ret - (1ll * (t - r) * (t - r + 1) >> 1) % mod + mod);\n\treturn ret % mod;\n}\ninline void ans_single(mdzz x) {\n\tint a = x.u, b = x.v, c = n - x.u, d = m - x.v;\n\tsig += (anslrh(a, c, b) + anslrh(a, c, d)) % mod;\n\tsig += (anslrh(b, d, a) + anslrh(b, d, c)) % mod;\n\tsig = (sig - (min(a, b) + min(b, c) + min(c, d) + min(d, a)) % mod) % mod;\n}\ninline int check_double(mdzz x, mdzz y) {\n\tif (x.u < 0 || y.u < 0 || x.v < 0 || y.v < 0) return 0;\n\tif (x.u > n || y.u > n || x.v > m || y.v > m) return 0;\n\treturn 1;\n}\ninline void ans_double(mdzz x, mdzz y) {\n\tint d1 = y.u - x.u, d2 = x.v - y.v;\n\tmdzz a1 = x, b1 = y; a1.u += d2; a1.v += d1; b1.u += d2; b1.v += d1;\n\tmdzz a2 = x, b2 = y; a2.u -= d2; a2.v -= d1; b2.u -= d2; b2.v -= d1;\n\tdou += check_double(a1, b1) + check_double(a2, b2);\n\tint d3 = (x.u + y.u), d4 = (x.v + y.v);\n\tmdzz mid = (mdzz) {d3, d4};\n\tmdzz a3 = mid, b3 = mid; a3.u += d2; a3.v += d1; b3.u -= d2; b3.v -= d1;\n\tif ((a3.u & 1) || (a3.v & 1)) return ; \n\tif ((b3.u & 1) || (b3.v & 1)) return ; \n\ta3.u /= 2; a3.v /= 2; b3.u /= 2; b3.v /= 2;\n\tdou += check_double(a3, b3);\n}\ninline int check_triple(mdzz x, mdzz y) {\n\tif (x.u < 0 || y.u < 0 || x.v < 0 || y.v < 0) return 0;\n\tif (x.u > n || y.u > n || x.v > m || y.v > m) return 0;\n\treturn pd(id(x.u, x.v)) + pd(id(y.u, y.v));\n}\ninline void ans_triple(mdzz x, mdzz y) {\n\tint d1 = y.u - x.u, d2 = x.v - y.v;\n\tmdzz a1 = x, b1 = y; a1.u += d2; a1.v += d1; b1.u += d2; b1.v += d1;\n\tmdzz a2 = x, b2 = y; a2.u -= d2; a2.v -= d1; b2.u -= d2; b2.v -= d1;\n\ttri += check_triple(a1, b1) + check_triple(a2, b2);\n\tint d3 = (x.u + y.u), d4 = (x.v + y.v);\n\tmdzz mid = (mdzz) {d3, d4};\n\tmdzz a3 = mid, b3 = mid; a3.u += d2; a3.v += d1; b3.u -= d2; b3.v -= d1;\n\tif ((a3.u & 1) || (a3.v & 1)) return ; \n\tif ((b3.u & 1) || (b3.v & 1)) return ; \n\ta3.u /= 2; a3.v /= 2; b3.u /= 2; b3.v /= 2;\n\ttri += check_triple(a3, b3);\n}\ninline int check_quadruple(mdzz x, mdzz y) {\n\tif (x.u < 0 || y.u < 0 || x.v < 0 || y.v < 0) return 0;\n\tif (x.u > n || y.u > n || x.v > m || y.v > m) return 0;\n\treturn pd(id(x.u, x.v)) & pd(id(y.u, y.v));\n}\ninline void ans_quadruple(mdzz x, mdzz y) {\n\tint d1 = y.u - x.u, d2 = x.v - y.v;\n\tmdzz a1 = x, b1 = y; a1.u += d2; a1.v += d1; b1.u += d2; b1.v += d1;\n\tmdzz a2 = x, b2 = y; a2.u -= d2; a2.v -= d1; b2.u -= d2; b2.v -= d1;\n\tqua += check_quadruple(a1, b1) + check_quadruple(a2, b2);\n\tint d3 = (x.u + y.u), d4 = (x.v + y.v);\n\tmdzz mid = (mdzz) {d3, d4};\n\tmdzz a3 = mid, b3 = mid; a3.u += d2; a3.v += d1; b3.u -= d2; b3.v -= d1;\n\tif ((a3.u & 1) || (a3.v & 1)) return ; \n\tif ((b3.u & 1) || (b3.v & 1)) return ; \n\ta3.u /= 2; a3.v /= 2; b3.u /= 2; b3.v /= 2;\n\tqua += check_quadruple(a3, b3);\n}\nint main() {\n//\tfreopen(\"square.in\", \"r\", stdin);\n//\tfreopen(\"sqyare.out\", \"w\", stdout);\n\tn = read(); m = read(); k = read();\n\tfor (int i = 1; i <= k; ++i) {\n\t\tint u = read(), v = read();\n\t\tp[i] = (mdzz) {u, v};\n\t\tvis.insert(id(u, v));\n\t}\n\tans_zero();\n\tfor (int i = 1; i <= k; ++i) {\n\t\tans_single(p[i]);\n\t\tfor (int j = i + 1; j <= k; ++j) {\n\t\t\tans_double(p[i], p[j]);\n\t\t\tans_triple(p[i], p[j]);\n\t\t\tans_quadruple(p[i], p[j]);\n\t\t}\n\t}\n\ttri /=3; qua /= 6;\n\tdou %= mod; tri %= mod; qua %= mod;\n\tprintf(\"%lld\\n\", (zer - sig + dou - tri + qua + mod + mod) % mod);\n\treturn 0;\n}\n```",
        "postTime": 1631283357,
        "uid": 206024,
        "name": "Illusory_dimes",
        "ccfLevel": 7,
        "title": "P3271 [JLOI2016]\u65b9 \u9898\u89e3"
    }
]