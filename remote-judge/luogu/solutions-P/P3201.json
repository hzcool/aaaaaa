[
    {
        "content": "[$$\\Large\\texttt{My Blog}$$](https://hydingsy.github.io/)\n\n---\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[BZOJ 1483](https://www.lydsy.com/JudgeOnline/problem.php?id=1483)\n\n\u6709 $n$ \u4e2a\u5e03\u4e01\u6446\u6210\u4e00\u884c\uff0c\u6bcf\u4e2a\u5e03\u4e01\u90fd\u6709\u4e00\u4e2a\u989c\u8272 $a_i$\uff0c\u8fdb\u884c $m$ \u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u5171\u6709 $2$ \u79cd\uff1a\n\n- \u5c06\u989c\u8272\u4e3a $x$ \u7684\u5e03\u4e01\u5168\u90e8\u53d8\u6210\u989c\u8272 $y$ \u7684\u5e03\u4e01\u3002\n- \u8be2\u95ee\u5f53\u524d\u4e00\u5171\u6709\u591a\u5c11\u6bb5\u989c\u8272\uff08\u4f8b\u5982\u989c\u8272\u5206\u522b\u4e3a $1,2,2,1$ \u7684 $4$ \u4e2a\u5e03\u4e01\u4e00\u5171\u6709 $3$ \u6bb5\u989c\u8272\uff09\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\leqslant n,m\\leqslant 10^5$\uff0c$0<a_i,x,y<10^6$\n\n------\n\n## Solution\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u79cd\u989c\u8272\u7684\u5e03\u4e01\u96c6\u5408\u60f3\u8c61\u6210\u662f\u4e00\u4e2a\u961f\u5217\u3002\u90a3\u4e48\u5c31\u6709\u82e5\u5e72\u4e2a\u957f\u5ea6\u603b\u548c\u4e3a $n$ \u7684\u961f\u5217\uff0c\u6bcf\u6b21\u64cd\u4f5c\u9700\u8981\u5408\u5e76 $x$ \u548c $y$\u3002\u5982\u679c\u6211\u4eec\u66b4\u529b\u5408\u5e76\uff0c\u90a3\u4e48\u5408\u5e76\u4e00\u6b21\u590d\u6742\u5ea6\u6700\u574f\u4e3a $O(n)$\u3002\n\n\u4f46\u662f\u6709\u4e2a\u53eb\u505a**\u542f\u53d1\u5f0f\u5408\u5e76**\u7684\u4e1c\u897f\uff01\u5b83\u7684\u672c\u8d28\u5f88\u7b80\u5355\uff1a\u6bcf\u6b21\u628a\u77ed\u7684\u5408\u5e76\u5230\u957f\u7684\u4e0a\u9762\uff0c\u90a3\u4e48\u5408\u5e76\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u4e3a $O(|\u77ed\u7684\u961f\u5217|)$\u3002\u8fd9\u6837\u770b\u4e0a\u53bb\u8c8c\u4f3c\u6ca1\u6709\u4ec0\u4e48\u5dee\u522b\u561b QAQ\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u5747\u644a\u590d\u6742\u5ea6\u3002\n\n\u8003\u8651\u7528\u8d21\u732e\u6cd5\u6765\u5206\u6790\u3002\u6211\u4eec\u4ee4\u4e24\u4e2a\u96c6\u5408\u7684\u5206\u522b\u4e3a $A$ \u548c $B$\uff0c\u4e14 $|A|<|B|$\uff0c\u90a3\u4e48\u6211\u4eec\u628a $A$ \u66b4\u529b\u52a0\u5165\u5230 $B$ \u4e2d\u3002\u90a3\u4e48 $A$ \u4e2d\u7684\u5143\u7d20\u6240\u5728\u7684\u96c6\u5408\u5927\u5c0f\u53d8\u6210 $|A|+|B|$\uff0c\u4e5f\u5c31\u662f\u8bf4\u81f3\u5c11\u53d8\u6210\u4e86\u539f\u6765\u7684\u4e24\u500d\u3002\u6240\u4ee5\u6bcf\u4e2a\u5143\u7d20\u81f3\u591a\u88ab\u52a0\u5165 $\\log n$ \u6b21\uff0c\u603b\u7684\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u5148\u6c42\u51fa\u539f\u5e8f\u5217\u7684\u7b54\u6848\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u989c\u8272\u90fd\u7528\u7c7b\u4f3c**\u94fe\u8868**\u7684\u6570\u636e\u7ed3\u6784\u4e32\u8d77\u6765\uff0c\u5e76\u8bb0\u5f55\u4e0b\u5c3e\u8282\u70b9\u3002\u6bcf\u6b21\u4fee\u6539\uff0c\u90fd\u6839\u636e\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u65b9\u6cd5\u6765\u66b4\u529b\u5408\u5e76\uff0c\u7136\u540e\u5904\u7406\u4e00\u4e0b\u6b64\u6b21\u5408\u5e76\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff08\u663e\u7136\u7b54\u6848\u662f\u4e0d\u589e\u7684\uff09\u3002\n\n\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a $1$ \u67d3\u6210 $2$ \u5e76\u4e14 $|S_1|>|S_2|$\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u628a $2$ \u63a5\u5230 $1$ \u7684\u540e\u9762\u3002\u8fd9\u6837\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u672c\u6b21\u4fee\u6539\u540e\u8fd9\u4e2a\u94fe\u7684\u989c\u8272\u662f $1$\uff08\u989c\u8272\u4e3a $2$ \u7684\u94fe\u88ab\u5220\u9664\u4e86\uff09\uff0c\u5982\u679c\u63a5\u4e0b\u6765\u4fee\u6539\u989c\u8272 $2$\uff08\u663e\u7136\u8fd9\u662f\u5408\u6cd5\u7684\uff09\uff0c\u4f1a\u4f7f\u5f97\u627e\u4e0d\u5230\u989c\u8272 $2$ \u800c\u53ea\u80fd\u627e\u5230\u989c\u8272 $1$ \u4e86\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4f7f\u7528\u4e00\u4e2a $f$ \u6570\u7ec4\uff0c\u8868\u793a\u5f53\u6211\u4eec\u8981\u5bfb\u627e\u989c\u8272 $x$ \u65f6\uff0c\u5b9e\u9645\u4e0a\u9700\u8981\u5bfb\u627e\u989c\u8272\u4e3a $f[x]$ \u7684\u94fe\u3002\u5982\u679c\u9047\u5230\u4e0a\u9762\u8fd9\u79cd\u60c5\u51b5\u5c31\u8981\u4ea4\u6362\u4ea4\u6362 $f[x]$ \u548c $f[y]$\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a$O(n\\log n)$\n\n------\n\n## Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n\nconst int N=1e5+5,M=1e6+5;\nint n,m,c[N],sz[M],st[M],f[M],hd[M],nxt[N],ans;\n\nvoid merge(int x,int y) {\n    for(int i=hd[x];i;i=nxt[i]) ans-=(c[i-1]==y)+(c[i+1]==y);\n    for(int i=hd[x];i;i=nxt[i]) c[i]=y;\n    nxt[st[x]]=hd[y],hd[y]=hd[x],sz[y]+=sz[x];\n    hd[x]=st[x]=sz[x]=0;\n}\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i) {\n        scanf(\"%d\",&c[i]),f[c[i]]=c[i];\n        ans+=c[i]!=c[i-1];\n        if(!hd[c[i]]) st[c[i]]=i;\n        ++sz[c[i]],nxt[i]=hd[c[i]],hd[c[i]]=i;\n    }\n    while(m--) {\n        int opt;\n        scanf(\"%d\",&opt);\n        if(opt==2) printf(\"%d\\n\",ans);\n        else {\n            int x,y;\n            scanf(\"%d%d\",&x,&y);\n            if(x==y) continue;\n            if(sz[f[x]]>sz[f[y]]) std::swap(f[x],f[y]);\n            if(!sz[f[x]]) continue;\n            merge(f[x],f[y]);\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1543118344,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "### \u524d\u7f6e\u829d\u58eb\n   \n#    \u7ebf\u6bb5\u6811\u5408\u5e76\n\n\u521a\u5b66\u7ebf\u6bb5\u6811\u5408\u5e76\u4e8e\u662f\u627e\u5230\u4e86\u8fd9\u9053\u9898,\u4f46\u662f\u9898\u89e3\u7adf\u7136\u6ca1\u6709\u4e00\u7bc7\u7ebf\u6bb5\u6811\u7684\uff1f~~\u80fd\u5199\u7ebf\u6bb5\u6811\u4e3a\u4ec0\u4e48\u8981\u5199\u5e73\u8861\u6811\u5462~~\n\n\u5f88\u660e\u663e\u6211\u4eec\u5bf9\u6bcf\u4e00\u79cd\u989c\u8272\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811,\u6bcf\u9897\u7ebf\u6bb5\u6811\u91cc\u7ef4\u62a4\u8fd9\u4e2a\u989c\u8272\u6240\u6709\u7684\u4f4d\u7f6e\u4fe1\u606f(\u5f53\u7136\u662f\u52a8\u6001\u5f00\u70b9\u5566)\n\n\u8003\u8651\u5408\u5e76\u4e24\u79cd\u989c\u8272,\u5c31\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u628ax\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u5728y\u4e0a,\u7136\u540e\u518d\u5411\u4e0a\u66f4\u65b0\u7b54\u6848\n\n\u90a3\u4e48\u600e\u4e48\u5411\u4e0a\u66f4\u65b0\u7b54\u6848\u5462\n\n\u6211\u4eec\u8bb0\u5f55\u8fd9\u4e2a\u533a\u95f4**\u5b58\u5728\u7684**\u6700\u5de6\u8fb9\u548c\u6700\u53f3\u8fb9\u7684\u4f4d\u7f6e,\u5982\u679c\u5de6\u513f\u5b50\u7684\u53f3\u8fb9\u4f4d\u7f6e\n\u4e0e\u53f3\u513f\u5b50\u7684\u5de6\u8fb9\u4f4d\u7f6e\u662f\u76f8\u90bb\u7684,\u90a3\u4e48\u5c31\u8981\u51cf1\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u662fO(nlogn)\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u89c1\u4ee3\u7801\u5427\n\n## Code\n```c\n#include<bits/stdc++.h>\n#define N 100010\n#define mid ((L+R)>>1)\nusing namespace std;\nint n,m,k,Ans,rt[N*10];//\u989c\u8272\u67091e6\u8981\u5f00\u5927\u4e00\u70b9 \nint ls[N*32],rs[N*32],lv[N*32],rv[N*32],sum[N*32];//\u6700\u5de6\u8fb9\u4f4d\u7f6e,\u53f3\u8fb9\u4f4d\u7f6e,\u533a\u95f4\u989c\u8272\u6bb5 \nvoid update(int t)\n{\n\tlv[t] = lv[ls[t]]?lv[ls[t]]:lv[rs[t]];//\u56e0\u4e3a\u662f\u52a8\u6001\u5f00\u70b9\u6240\u4ee5\u5de6\u53f3\u513f\u5b50\u53ef\u80fd\u4e3a0\u8981\u5224\u4e00\u4e0b \n\trv[t] = rv[rs[t]]?rv[rs[t]]:rv[ls[t]];\n\tsum[t] = sum[ls[t]]+sum[rs[t]]-(rv[ls[t]]+1 == lv[rs[t]]);//\u5982\u679c\u5de6\u53f3\u513f\u5b50\u4f4d\u7f6e\u76f8\u90bb\u51cf1 \n}\nvoid Change(int &t,int L,int R,int x)\n{\n\tif(!t) t = ++k;\t\n\tif(L == R) {lv[t] = rv[t] = x,sum[t] = 1; return;}\n\tif(x <= mid) Change(ls[t],L,mid,x);\n\telse Change(rs[t],mid+1,R,x);\n\tupdate(t);\n}\nvoid Merge(int &x,int &y,int L,int R)//\u7ebf\u6bb5\u6811\u5408\u5e76\u677f\u5b50 \n{\n\tif(!x || !y) {x += y; return ;}\n\tif(L == R) {lv[x] = rv[x] = L,sum[x] = 1; return;}\n\tMerge(ls[x],ls[y],L,mid);\n\tMerge(rs[x],rs[y],mid+1,R);\n\tupdate(x);\n}\nint main()\n{\n\tint op,x,y;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) \n\t{\n\t\tscanf(\"%d\",&x);\n\t\tAns -= sum[rt[x]];\n\t\tChange(rt[x],1,n,i);\n\t\tAns += sum[rt[x]];\t\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d\",&op);\n\t\tif(op == 1)\n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif(x == y) continue;\n\t\t\tAns -= (sum[rt[x]]+sum[rt[y]]);\n\t\t\tMerge(rt[y],rt[x],1,n);\n\t\t\trt[x] = 0;  //\u6ce8\u610f\u6e05\u7a7a\u989c\u8272\u4e3ax\u7684\u7ebf\u6bb5\u6811 \n\t\t\tAns += sum[rt[y]];\t\n\t\t}else printf(\"%d\\n\",Ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572333364,
        "uid": 112003,
        "name": "_Chris\u00b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "\u5982\u679c\u6ca1\u6709\u4fee\u6539\uff0c\u90a3\u4e48\u76f4\u63a5\u626b\u4e00\u904d\uff0c\u770b\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u6ee1\u8db3$color[i]\\neq color[i-1]$\u5373\u53ef.\n\n\u6709\u4e86\u4fee\u6539\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8003\u8651**\u66b4\u529b\u4fee\u6539**\n\n\u5982\u679c\u8981\u628a\u989c\u8272$x$\u90fd\u53d8\u6210$y$\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u628a\u6240\u6709\u989c\u8272\u662f$x$\u7684\u4f4d\u7f6e\u627e\u5230\uff0c\u7136\u540e\u628a\u5b83\u4eec\u53d8\u6210$y$\uff0c\u540c\u65f6\u66f4\u65b0\u7b54\u6848.\u8fd9\u4e2a\u627e\u4f4d\u7f6e\u7684\u8fc7\u7a0b\u53ef\u4ee5\u76f4\u63a5\u7528\u94fe\u8868\u505a\uff0c\u5bf9\u6bcf\u4e2a\u989c\u8272\u5f00\u4e00\u4e2a\u94fe\u8868\uff0c\u66f4\u65b0\u7b54\u6848\u7684\u65f6\u5019\u770b\u8fd9\u4e2a\u4f4d\u7f6e\u4e24\u8fb9\u6709\u6ca1\u6709$y$\uff0c\u6709\u5c31\u7b54\u6848$--$\uff0c\u6700\u540e\u628a\u4e24\u4e2a\u94fe\u8868\u5408\u5e76.\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u628a$x$\u53d8\u6210$y$\u548c\u628a$y$\u53d8\u6210$x$\u5bf9\u7b54\u6848\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u53ea\u662f\u5bf9\u540e\u9762\u7684\u4fee\u6539\u6709\u5173\u7cfb.\u8fd9\u6837\u6211\u4eec\u6bcf\u6b21\u627e\u4e00\u4e2a\u66f4\u77ed\u7684\u66f4\u65b0\u7b54\u6848.\u4e3a\u4e86\u5904\u7406\u5bf9\u4fee\u6539\u7684\u5f71\u54cd\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4$f[x]$\u8868\u793a\u989c\u8272$x$\u6240\u5728\u7684\u94fe\u8868\u7684\u989c\u8272\u5373\u53ef.\n\n\u590d\u6742\u5ea6\u770b\u8d77\u6765\u5c31\u662f\u4e2a\u66b4\u529b\uff0c\u4f46\u662f\u6ce8\u610f\u6bcf\u6b21\u5408\u5e76\u81f3\u5c11\u4f1a\u628a\u4e00\u4e2a\u989c\u8272\u7684\u89c4\u6a21\u7ffb\u500d\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u5904\u7406$O(\\log n)$\u6b21,\u603b\u5171$O(n\\log n)$.\n\n\u5373\u542f\u53d1\u5f0f\u5408\u5e76.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=1500000;\nint ans[N],size[N],tmp[N],fst[N],nxt[N],f[N],s,n,m,a[N];\nvoid debug(){cout<<233<<endl;}\nvoid merge(int &x,int &y)\n{\n\tif(size[x]>size[y])swap(x,y);//\u4ea4\u6362\n\tif(!size[x]||x==y)return;\n\tfor(int i=fst[x];i!=-1;i=nxt[i])\n\t\ts-=(a[i-1]==y)+(a[i+1]==y);//\u66f4\u65b0\u7b54\u6848\n\tfor(int i=fst[x];i!=-1;i=nxt[i])\n\t{\n\t\ta[i]=y;//\u4fee\u6539\n\t\tif(nxt[i]==-1){nxt[i]=fst[y],fst[y]=fst[x];break;}//\u5408\u5e76\n\t}\n\tsize[y]+=size[x],size[x]=0,fst[x]=-1;//\u5408\u5e76\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<N;i++)fst[i]=-1,f[i]=i;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",a+i);int x=a[i];\n\t\tnxt[i]=fst[x],fst[x]=i,size[x]++;//\u524d\u5411\u661f\n\t\tif(nxt[i]!=i-1)s++;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint opt,x,y;\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt==2)printf(\"%d\\n\",s);\n\t\telse scanf(\"%d%d\",&x,&y),merge(f[x],f[y]);\n\t}\n}\n```",
        "postTime": 1549950522,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u6bcf\u79cd\u989c\u8272\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u5408\u5e76\u65f6\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\n\n\u5224\u65ad\u4e00\u4e0b\u6709\u6ca1\u6709i\u548ci-1,i+1\u53d8\u6210\u540c\u8272\u6765\u66f4\u65b0\u5f53\u524dans\u3002\n\n\u4f46\u662f\u8fd8\u6709\u66f4\u597d\u7684\u505a\u6cd5\u3002\n\n\u6211\u4eec\u53ea\u7528\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u989c\u8272\uff0c\u5728\u542f\u53d1\u5f0f\u5408\u5e76\u65f6\u770b\u4e00\u4e0bi-1,i+1\u7684\u989c\u8272\u5373\u53ef\u3002\n\n\u5f53x\u5408\u5e76\u5230y\u91cc\uff0c\u8fd9\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\n\u4f46\u5982\u679cy\u5408\u5e76\u5230x\u91cc\uff0c\u8fd9\u548c\u5c06\u989c\u8272x\u6539\u4e3a\u989c\u8272y\u662f\u76f8\u53cd\u7684\u3002\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e2a\u64cd\u4f5c\u6539\u4e3a\u628a\u989c\u8272y\u6539\u4e3a\u989c\u8272x\uff0c\u53ea\u8981\u628a\u540e\u9762\u64cd\u4f5c\u51fa\u73b0\u7684x,y\u66ff\u6362\u4e00\u4e0b\uff0c\u8fd9\u5c31\u662f\u7b49\u4ef7\u7684\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::swap;\n\nconst int N=100010,A=1000100;\nint n,m,i,a[N],dy[A],ans;\nint t[A],s[A],next[N];\n\nvoid merge(int &x,int &y)\n{\n    if(x==y) return ;\n    if(s[x]>s[y]) swap(x,y);\n    \n    for(i=t[x];i;i=next[i])\n    {\n       ans-=(a[i-1]==y)+(a[i+1]==y);\n       if(!next[i]) { next[i]=t[y];t[y]=t[x];break; }\n    }\n    for(i=t[x];i;i=next[i]) a[i]=y;\n    t[x]=0;\n    \n    s[y]+=s[x];s[x]=0;\n}\n\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;++i) {scanf(\"%d\",a+i);next[i]=t[a[i]];t[a[i]]=i;++s[a[i]];}\n    ans=1;\n    for(i=2;i<=n;++i) if(a[i]!=a[i-1]) ++ans;\n    for(i=1;i<=1000000;++i) dy[i]=i;\n    \n    while(m--)\n    {\n        int type,x,y;\n        scanf(\"%d\",&type);\n        if(type==2)printf(\"%d\\n\",ans);\n        else {scanf(\"%d%d\",&x,&y);merge(dy[x],dy[y]);}\n    }\n}\n```",
        "postTime": 1490102634,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "set\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4ee3\u7801\u5de8\u77ed\n\n\u9996\u5148\u5bf9\u6bcf\u4e2a\u5143\u7d20\u7ef4\u62a4\u4e00\u4e2aset\uff0c\u53d8\u989c\u8272\u76f8\u5f53\u4e8e\u5408\u5e76\u4e00\u4e2a\u989c\u8272\u7684set\u5230\u53e6\u4e00\u4e2a\u989c\u8272\u91cc\u53bb\n\n\u6ce8\u610f\u5230\u6bb5\u6570$=1+\\sum_{i=1}^{n-1}[A_i!=A_{i+1}]$\uff0c\u6240\u4ee5\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u7684\u6bb5\u6570\uff0c\u5bb9\u6613\u770b\u51fa\u6bb5\u6570\u4e0d\u4f1a\u51cf\u5c11\uff0c\u5f53\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u53d8\u6210\u4e86\u4e00\u6837\u7684\uff0c\u4ee5\u540e\u5c31\u90fd\u4f1a\u4e00\u6837\u4e86\uff0c\u6bb5\u6570\u6c38\u4e45$-1$\n\n\u4f46\u662f\u66b4\u529b\u5408\u5e76\u590d\u6742\u5ea6\u4e0d\u5bf9\uff0c\u6240\u4ee5\u542f\u53d1\u5f0f\u5408\u5e76\n\n\u542f\u53d1\u5f0f\u5408\u5e76\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u66b4\u529b\uff0c\u539f\u7406\u5c31\u662f\u628a\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\uff0c\u6bcf\u6b21\u5408\u5e76\u7684\u590d\u6742\u5ea6\u53ea\u548c\u5c0f\u7684\u90a3\u90e8\u5206\u5927\u5c0f\u6709\u5173\n\n\u8fd9\u6837\u7684\u8bdd\u4e00\u4e2a\u5143\u7d20\u6bcf\u88ab\u5f53\u4f5c\u5c0f\u7684\u96c6\u5408\u5408\u5e76\u4e00\u6b21\uff0c\u6240\u5728\u7684\u96c6\u5408\u5927\u5c0f\u81f3\u5c11$\\times 2$\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u4f1a\u88ab\u5408\u5e76$\\log_2n$\u6b21\n\n\u6ce8\u610f\u4e00\u4e0bset\u76f4\u63a5\u4ea4\u6362\u662f$O(n)$\u7684\uff0c\u6240\u4ee5\u8981\u7528\u6307\u9488\u4ea4\u6362\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define vd void\ntypedef long long ll;\nil int gi(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n\treturn x*f;\n}\nint A[100010];\nstd::set<int> *q[1000010];\nint main(){\n\tint n=gi(),m=gi(),res=0,opt,x,y;\n\tfor(int i=1;i<=1000000;++i)q[i]=new std::set<int>;\n\tfor(int i=1;i<=n;++i)A[i]=gi(),res+=A[i]!=A[i-1],q[A[i]]->insert(i);\n\twhile(m--){\n\t\topt=gi();\n\t\tif(opt==2)printf(\"%d\\n\",res);\n\t\telse{\n\t\t\tx=gi(),y=gi();if(x==y)continue;\n\t\t\tif(q[x]->size()>q[y]->size())std::swap(q[x],q[y]);\n\t\t\tfor(auto i:*q[x])res-=q[y]->count(i-1)+q[y]->count(i+1);\n\t\t\tfor(auto i:*q[x])q[y]->insert(i);\n\t\t\tq[x]->clear();\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1545825568,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "\u697c\u4e0a\u5df2\u7ecf\u63d0\u5230\u672c\u9898\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u6c42\u89e3\u4e86\n\n\u7528N\u4e2a\u5e73\u8861\u6811\u7ef4\u62a4\u8fd9N\u4e2a\u989c\u8272\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u5c31\u672c\u9898\u800c\u8a00\uff0c\u5b8c\u5168\u53ef\u4ee5\u7528\u4e00\u4e2aset\u6c34\u8fc7\n\n\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u66b4\u529b\u5408\u5e76\u5c31\u53ef\u4ee5\n\n\u6ce8\u610f\u5f53\u8bfb\u5165\u7684\u989c\u8272\u76f8\u540c\u7684\u65f6\u5019\u76f4\u63a5\u8df3\u51fa\n\n```cpp\n    #include<iostream>\n    #include<cstdio>\n    #include<cstring>\n    #include<ctime>\n    #include<cstdlib>\n    #include<algorithm>\n    #include<set>\n    using namespace std;\n    #define ls T[now].ch[0]\n    #define rs T[now].ch[1]\n    const int MAXN=1e6+10;\n    inline char nc()\n    {\n        static char buf[MAXN],*p1=buf,*p2=buf;\n        return p1==p2&&(p2=(p1=buf)+fread(buf,1,MAXN,stdin),p1==p2)?EOF:*p1++;\n    }\n    inline int read()\n    {\n        char c=nc();int x=0,f=1;\n        while(c<'0'||c>'9'){if(c=='-')f=-1;c=nc();}\n        while(c>='0'&&c<='9'){x=x*10+c-'0',c=nc();}\n        return x*f;\n    }\n    set<int>s[MAXN];\n    int a[MAXN],f[MAXN],ans;\n    void unionn(int x,int y)\n    {\n        for(set<int>::iterator i=s[x].begin();i!=s[x].end();i++)\n        {\n            if(a[*i-1]==y)  ans--;\n            if(a[*i+1]==y)    ans--;\n            s[y].insert(*i);\n        }\n        for(set<int>::iterator i=s[x].begin();i!=s[x].end();i++)\n            a[*i]=y;\n        s[x].clear();\n    }\n    int main()\n    {\n        #ifdef WIN32\n        freopen(\"a.in\",\"r\",stdin);\n        #else\n        #endif\n        int n=read(),m=read();\n        for(int i=1;i<=n;i++)\n        {\n            a[i]=read();\n            if(a[i]!=a[i-1]) ans++;\n            f[a[i]]=a[i];\n            s[a[i]].insert(i);\n        }\n        while(m--)\n        {\n            int opt=read();\n            if(opt==2)    { printf(\"%d\\n\",ans);continue;}\n            int a=read(),b=read();\n            if(a==b)    continue;\n            if(s[f[a]].size()>s[f[b]].size())    swap(f[a],f[b]);\n            unionn(f[a],f[b]);\n        }\n        return 0;\n}\n```",
        "postTime": 1513080544,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "## \u3010\u7ebf\u6bb5\u6811\u5408\u5e76\u3011P3201 [HNOI2009]\u68a6\u5e7b\u5e03\u4e01\n\n### Analysis\n\n\u770b\u5230\u8fd9\u7c7b\u4e0d\u53ef\u9006\u7684\u5408\u5e76\u64cd\u4f5c\uff0c\u5bb9\u6613\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u89e3\u51b3\u3002\n\n\u5bf9\u6bcf\u4e2a\u989c\u8272\u5f00\u4e00\u4e2a\uff08\u52a8\u6001\u5f00\u70b9\uff09\u7ebf\u6bb5\u6811\uff0c\u5bf9\u4e8e\u989c\u8272\u4e3a $c$ \u7684\u7ebf\u6bb5\u6811\u4e0a\u7684\u533a\u95f4 $[l, r]$\uff0c\u7ef4\u62a4\u4e09\u4e2a\u4fe1\u606f\uff1a\u539f\u5e8f\u5217\u533a\u95f4 $[l, r]$ \u5185\u7684\u989c\u8272\u6bb5\u6570 $v$\uff0c\u5de6\u7aef\u70b9\u5904\u662f\u5426\u662f\u8be5\u989c\u8272 $lc$\uff0c\u53f3\u7aef\u70b9\u5904\u662f\u5426\u662f\u8be5\u989c\u8272 $rc$\u3002\u5408\u5e76\u65f6\u91c7\u7528\u4e0e[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P6492)\u7c7b\u4f3c\u7684\u5408\u5e76\u65b9\u5f0f\u3002\u5c06\u989c\u8272\u6bb5\u6570 $v$ \u76f8\u52a0\uff0c\u5982\u679c\u5de6\u5b69\u5b50\u7684\u53f3\u7aef\u70b9\u548c\u53f3\u5b69\u5b50\u7684\u5de6\u7aef\u70b9\u90fd\u6709\u6709\u989c\u8272\uff0c\u90a3\u4e48\u4e2d\u95f4\u53ef\u4ee5\u62fc\u6210\u4e00\u6bb5\uff0c\u5c06\u6bb5\u6570\u51cf\u6389 $1$\u3002\u5176\u4f59\u4fe1\u606f\u76f4\u63a5\u7ee7\u627f\u5373\u53ef\u3002\n\n\u7ef4\u62a4\u5168\u5c40\u7b54\u6848 $ans$\uff0c\u5728\u628a\u4e00\u4e2a\u989c\u8272 $x$ \u6539\u6210\u53e6\u4e00\u4e2a\u989c\u8272 $y$ \u65f6\uff0c\u5148\u5c06\u7b54\u6848\u51cf\u6389\u989c\u8272 $x$ \u548c $y$ \u7684\u6bb5\u6570\u548c\uff0c\u7136\u540e\u5bf9\u4e24\u4e2a\u989c\u8272\u505a\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u6700\u540e\u628a\u7b54\u6848\u52a0\u4e0a\u5408\u5e76\u540e\u7684 $y$ \u6bb5\u6570\u548c\uff0c\u518d\u5c06 $x$ \u6539\u4e3a\u7a7a\u6307\u9488\u5373\u53ef\u3002\u8bb0\u5f97\u5f53 $x = y$ \u65f6\u8981\u76f4\u63a5\u8df3\u8fc7\u3002\n\n### Code\n\n```cpp\nnamespace Fusu {\n\nconst int maxn = 1000005;\n\nstruct Node *nul;\n\nstruct Node {\n  Node *ls, *rs;\n  int l, r, lc, rc, v;\n\n  Node() {}\n  Node(const int L, const int R) : l(L), r(R) {\n    ls = nul; rs = nul;\n    lc = rc = v = 0;\n  }\n\n  inline void pushup() {\n    v = ls->v + rs->v - (ls->rc && rs->lc);\n    lc = ls->lc; rc = rs->rc;\n  }\n};\nNode *rot[maxn], NUL;\n\nint n, m, ans;\nint a[maxn];\n\nNode* merge(Node *u, Node *v);\nvoid upd(Node *const u, const int p);\n\nvoid Main() {\n  nul = &NUL;\n  qr(n); qr(m);\n  qra(a + 1, n);\n  for (auto &u : rot) u = nul;\n  for (int i = 1; i <= n; ++i) {\n    int x = a[i];\n    upd(rot[x] != nul ? rot[x] : rot[x] = new Node(1, n), i);\n  }\n  for (auto u : rot) ans += u->v;\n  for (int o, x, y; m; --m) {\n    qr(o);\n    if (o == 1) {\n      qr(x); qr(y);\n      if (x == y) continue;\n      ans -= rot[y]->v + rot[x]->v;\n      rot[y] = merge(rot[y], rot[x]);\n      rot[x] = nul;\n      ans += rot[y]->v;\n    } else {\n      qw(ans, '\\n');\n    }\n  }\n}\n\nNode* merge(Node *u, Node *v) {\n  if (u == nul) return v;\n  if (v == nul) return u;\n  if (u->l == u->r) {\n    u->lc = u->rc = u->v = 1;\n  } else {\n    u->ls = merge(u->ls, v->ls);\n    u->rs = merge(u->rs, v->rs);\n    u->pushup();\n  }\n  return u;\n}\n\nvoid upd(Node *const u, const int p) {\n  if (u->l == u->r) {\n    u->lc = u->rc = u->v = 1;\n    return;\n  }\n  int mid = (u->l + u->r) >> 1;\n  if (mid >= p) {\n    upd(u->ls != nul ? u->ls : u->ls = new Node(u->l, mid), p);\n  } else {\n    upd(u->rs != nul ? u->rs : u->rs = new Node(mid + 1, u->r), p);\n  }\n  u->pushup();\n}\n\n} // namespace Fusu\n```\n\n",
        "postTime": 1592279308,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009] \u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "\u5c31\u662f\u94fe\u8868\uff08\u4e5f\u53ef\u4ee5\u7528\u961f\u5217\uff0c\u6211\u542c\u4eba\u5bb6\u8bf4\u7684\uff09\u5408\u5e76\uff0c\u5f15\u7528hzwer\u4e00\u4e9b\u8bdd:\n\n1\uff1a\u5c06\u4e24\u4e2a\u961f\u5217\u5408\u5e76\uff0c\u6709\u82e5\u5e72\u961f\u5217\uff0c\u603b\u957f\u5ea6\u4e3an\uff0c\u76f4\u63a5\u5408\u5e76\uff0c\u6700\u574fO(N)\uff0c\n\n2\uff1a\u542f\u53d1\u5f0f\u5408\u5e76\u5462\uff1f\n\n\u6bcf\u6b21\u6211\u4eec\u628a\u77ed\u7684\u5408\u5e76\u5230\u957f\u7684\u4e0a\u9762\u53bb\uff0cO(\u77ed\u7684\u957f\u5ea6)\n\n\u548b\u770b\u4e4b\u4e0b\u6ca1\u6709\u591a\u5927\u533a\u522b\uff0c\n\n\u4e0b\u9762\u8ba9\u6211\u4eec\u770b\u770b\u5747\u644a\u7684\u60c5\u51b5\uff1a\n\n1\uff1a\u6bcf\u6b21O(N)\n\n2\uff1a\u6bcf\u6b21\u5408\u5e76\u540e\uff0c\u961f\u5217\u957f\u5ea6\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u539f\u6765\u77ed\u7684\u957f\u5ea6\u7684\u4e24\u500d\u3002\n\n\u8fd9\u6837\u76f8\u5f53\u4e8e\u6bcf\u6b21\u5408\u5e76\u90fd\u4f1a\u8ba9\u77ed\u7684\u957f\u5ea6\u6269\u5927\u4e00\u500d\u4ee5\u4e0a\uff0c\n\n\u6700\u591a\u6269\u5927logN\u6b21\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6O(NlogN)\uff0c\u6bcf\u6b21O(logN)\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6b64\u9898\n\n\u6211\u4eec\u5148\u6c42\u51fa\u539f\u5e8f\u5217\u7684\u7b54\u6848\n\n\u6bcf\u4e00\u79cd\u989c\u8272\u641e\u4e00\u6761\u94fe\u628a\u8be5\u8272\u7ed3\u70b9\u4e32\u8d77\u6765\uff0c\u8bb0\u5f55\u4e0b\u94fe\u6761\u5c3e\u7ed3\u70b9\n\n\u628a\u4e00\u79cd\u989c\u8272\u7684\u67d3\u6210\u53e6\u4e00\u79cd\uff0c\u5f88\u7b80\u5355\u628a\u5b83\u5408\u5e76\u8fc7\u53bb\uff0c\u7136\u540e\u5904\u7406\u4e0b\u5bf9\u4e8e\u7b54\u6848\u7684\u5f71\u54cd\n\n\u4f46\u662f\u3002\u3002\u3002\n\n\u6bd4\u5982\u628a1\u67d3\u62102\uff0c\u4f46\u662fs[1]>s[2]\uff0c\u8fd9\u65f6\u6211\u4eec\u5e94\u8be5\u5c062\u5408\u5e76\u52301\u7684\u94fe\u540e\u9762\uff0c\u4f46\u662f\u4f1a\u9047\u5230\u4e00\u4e2a\u9ebb\u70e6\u7684\u95ee\u9898\uff0c\u5c31\u662f\u8fd9\u4e2a\u94fe\u5934\u662f\u63a51\u4e0b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ee5\u540e\u627e\u989c\u82722\uff0c\u53d1\u73b0\u6ca1\u6709\u989c\u82722\u53ea\u6709\u989c\u82721\u3002\u3002\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5e94\u8be5\u5f00\u4e00\u4e2a\u6570\u7ec4f\uff0c\u8868\u793a\u6211\u4eec\u5bfb\u627e\u4e00\u79cd\u989c\u8272\u65f6\uff0c\u5b9e\u9645\u5e94\u8be5\u627e\u54ea\u4e2a\u989c\u8272\u4e0b\u7684\u94fe\uff0c\u9047\u5230\u4e0a\u9762\u90a3\u79cd\u60c5\u51b5\u8981\u4ea4\u6362f[1]\u548cf[2]\n\n\u8be6\u89c1http://hzwer.com/2858.html\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nint a[100007],jzq[1000007],head[1000007],next[100007],sum[1000007],rp[1000007];\nint main()\n{\n    int n,m,ans=0;scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);jzq[a[i]]=a[i];\n        if(a[i]!=a[i-1])ans++;\n        if(head[a[i]]==0)rp[a[i]]=i;\n        sum[a[i]]++;next[i]=head[a[i]];head[a[i]]=i;\n    }\n    for(int i=1;i<=m;i++){\n        int p;scanf(\"%d\",&p);if(p==2)cout<<ans<<endl;\n        else{\n            int x,y;scanf(\"%d%d\",&x,&y);\n            if(x==y)continue;\n            if(sum[jzq[x]]>sum[jzq[y]])swap(jzq[x],jzq[y]);\n            if(sum[jzq[x]]==0)continue;\n            sum[jzq[y]]+=sum[jzq[x]];sum[jzq[x]]==0;\n            int j=head[jzq[x]];\n            while(j>0){\n                if(a[j+1]==jzq[y])ans--;\n                if(a[j-1]==jzq[y])ans--;\n                j=next[j];\n            }\n            j=head[jzq[x]];\n            while(j>0){\n                a[j]=jzq[y];\n                j=next[j];\n            }\n            next[rp[jzq[x]]]=head[jzq[y]];head[jzq[y]]=head[jzq[x]];sum[jzq[y]]+=sum[jzq[x]];\n            head[jzq[x]]=rp[jzq[x]]=sum[jzq[x]]=0;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1484011260,
        "uid": 5716,
        "name": "jzqjzq",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u4f60n\u4e2a\u6570\uff0cm\u4e2a\u64cd\u4f5c\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u662f\uff1a\n\n1.\u8be2\u95ee1~n\u6709\u591a\u5c11\u6bb5\u6570\uff08\u76f8\u90bb\u4e14\u76f8\u7b49\u7684\u6570\u89c6\u4f5c\u540c\u4e00\u6bb5\uff09\n\n2.\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5bf9x\u3001y\uff0c\u5c06\u6240\u6709\u503c\u4e3ax\u7684\u6570\u6539\u4e3ay\n\n## \u601d\u8def\n\n\u8fd9\u53ef\u4ee5\u8bf4\u662f\u4e00\u79cd\u53eb\u505a**\u542f\u53d1\u5f0f\u5408\u5e76**\u7684\u6570\u636e\u7ed3\u6784\n\n\u5b83\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f\n\n\u4f60\u73b0\u5728\u6709\u5f88\u591a\u4e2a\u96c6\u5408\uff0c\u4f60\u6709\u65f6\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\uff0c\u6709\u65f6\u53c8\u8fdb\u884c\u67d0\u4e9b\u67e5\u8be2\n\n\u6211\u4eec\u77e5\u9053n\u4e2a\u6570\u5206\u5165\u82e5\u5e72\u4e2a\u96c6\u5408\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd9\u91cc\u6211\u5c31\u7528STL\u4e2d\u7684set\u6765\u8fdb\u884c\u5b58\u50a8\n\n\u5982\u679c\u6211\u4eec\u8981\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u600e\u4e48\u529e\u5462\uff1f\n\n\u4e3a\u4e86\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u5c3d\u91cf\u5c0f\uff0c\u6211\u4eec\u5c31\u9009\u62e9\u5c06\u5143\u7d20\u4e2a\u6570\u5c0f\u7684\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u66b4\u529b\u52a0\u5165\u53e6\u4e00\u4e2a\u96c6\u5408\n\n\u4f30\u7b97\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u7531\u4e8e\u5408\u5e76\u540e\u7684\u96c6\u5408\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e\u5408\u5e76\u7684\u4e24\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u8f83\u5c0f\u7684\u96c6\u5408\u5143\u7d20\u4e2a\u6570\u76842\u500d\uff08\u6709\u70b9\u7ed5\uff09\n\n\u90a3\u4e48\u8fd9\u4e2a\u503c\u6269\u5927$logn$\u6b21\u5c31\u5230\u4e86n\uff08\u4e0a\u9650\uff09\uff0c\u800c\u4e24\u4e2a\u96c6\u5408\u4e2d\u5143\u7d20\u6700\u591a\u7684\u4e00\u4e2a\u6700\u591a\u6709$\\frac{n}{2}$\u4e2a\u5143\u7d20\uff0c\u5ffd\u7565\u5e38\u6570\u7684\u8bdd\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlogn)$\n\n\u90a3\u4e48\u6bb5\u6570\u7684\u95ee\u9898\u600e\u4e48\u89e3\u51b3\u5462\uff1f\n\n\u5047\u8bbe\u4e00\u5f00\u59cb\u6bb5\u6570\u4e3aans\n\n\u6211\u4eec\u53d1\u73b0\u6bb5\u6570\u53ea\u4f1a\u7531\u4e8e\u989c\u8272\u6539\u53d8\u540e\u5f15\u8d77\u7684\u5408\u5e76\u800c\u8fdb\u884c\u6539\u53d8\uff0c\u5e76\u4e14\u53ea\u51cf\u4e0d\u589e\n\n\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u96c6\u5408$S_i$\uff0c\u96c6\u5408\u91cc\u7684\u5143\u7d20\u8868\u793a\u503c\u4e3ai\u7684\u6240\u6709\u5143\u7d20\u7684\u4f4d\u7f6e\uff08\u6570\u7ec4\u4e0b\u6807\uff09\n\n\u5982\u679c\u6211\u4eec\u8981\u5408\u5e76$S_i$\u4e0e$S_j$\u4e14$\\left|S_i\\right|<\\left|S_j\\right|$\n\n\u6309\u7167\u4e0a\u9762\u7684\u89c4\u5f8b\uff0c\u5c31\u5c06$S_i$\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6dfb\u52a0\u5230$S_j$\u4e2d\u53bb\n\n\u6dfb\u52a0\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5c31\u8981\u660e\u767d$\\forall x\\in S_i$\uff0c\n\n\u5982\u679c$color_{x-1}=color_x$\u4f1a\u5f15\u8d77\u6bb5\u6570\u5408\u5e76\uff0cans--\n\n\u5f53$color_{x+1}=color_x$\u65f6\u540c\u4e0a\uff0cans--\n\n\u90a3\u4e48\u6bcf\u6b21\u8be2\u95ee\u662f\u56de\u7b54ans\u5373\u53ef\n\nPERFECT\uff01\n\n## \u4ee3\u7801\n```cpp\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#define N 1000001\n#define int long long\n#define rnt register int\nusing namespace std;\nset <int> t[N];\nint n,m,ans,op,x,y,c[N,fa[N];\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(rnt i=1;i<=n;i=-~i){\n\t\tscanf(\"%lld\",&c[i]);\n\t\tfa[c[i]]=c[i];\n\t\tt[c[i]].insert(i);\n\t\tif(c[i]!=c[i-1]) ans=-~ans;\n\t}\n\tfor(rnt i=1;i<=m;i=-~i){\n\t\tscanf(\"%lld\",&op);\n\t\tif(op==2) printf(\"%lld\\n\",ans);\n\t\telse{\n\t\t\tscanf(\"%lld%lld\",&x,&y);\n\t\t\tif(x==y) continue;\n\t\t\tif((int)t[fa[x]].size()>(int)t[fa[y]].size())\n\t\t\t\tfa[x]^=fa[y]^=fa[x]^=fa[y];\n\t\t\tx=fa[x],y=fa[y];\n\t\t\tfor(set<int>::iterator i=t[x.begin();i!=t[x].end();++i){\n\t\t\t\tif(c[*i-1]==y) --ans;\n\t\t\t\tif(c[*i+1]==y) --ans;\n\t\t\t\tt[y].insert(*i);\n\t\t\t}\n\t\t\tfor(set<int>::iterator i=t[x].begin();i!=t[x].end();++i) c[*i]=y;\n\t\t\tt[x].clear();\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n## \u63d0\u793a\n\n\u5f53\u65f6\u6211\u8fd9\u4e48\u6253\u65f6\uff0c\u5e76\u4e0d\u77e5\u9053\u8981\u7528fa\uff0c\u7ed3\u679c\u5168WA\n\n\u6211\u770b\u7740dalao\u4eec\u7684\u4ee3\u7801\uff0c\u6c89\u601d\u826f\u4e45\uff0c\u7ec8\u4e8e\u660e\u767d\u4e86fa\u7684\u4f5c\u7528\n\n\u6211\u5728\u8fd9\u91cc\u5c31\u7ed9\u4e0d\u660e\u767d\u7684\u7ae5\u978b\u8bb2\u4e00\u8bb2\n\n\u5f53\u4f60\u628ax\u6539\u4e3ay\u65f6\uff0c\u672c\u6765y\u7684\u90fd\u5728$S_y$\u4e2d\uff0c\u4f46\u662f\u53ef\u80fd$|S_y|>|S_x|$\uff0c\u4e3a\u4e86\u65f6\u95f4\uff0c\u6211\u4eec\u628ay\u90fd\u4e22\u8fdb\u4e86$S_x$\uff0c\n\n\u4e0b\u6b21\u6211\u4eec\u518d\u4fee\u6539y\u65f6\uff0c\u518d\u627e$S_y$\uff0c\u5374\u53d1\u73b0\u4ed6\u5df2\u7ecf\u7a7a\u4e86~~\u5f00\u76d6\u6709\u5956~~\n\n\u6240\u4ee5$fa_i$\u662f\u7528\u4e8e\u5b58\u50a8\u503c\u4e3ai\u7684\u6570\u4f4d\u7f6e\u5b58\u5728\u4e86$S_{fa_i}$\u96c6\u5408\u4e2d\uff0c\u6240\u4ee5\u5408\u5e76\u65f6\u4e5f\u4e0d\u8981\u5fd8\u8bb0\u4e86\u4fee\u6539$fa_i$\n\n![](https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2921431843,3149119026&fm=26&gp=0.jpg)",
        "postTime": 1569597126,
        "uid": 118382,
        "name": "torque",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6a21\u62df\u9898\uff0c\u7528$Vector$~~\u778e\u641e~~\u4e00\u4e0b\u5c31\u53ef\u4ee5$AC$\u4e86\u3002\n\n$num[i]$\u8bb0\u5f55\u6bcf\u4e2a\u5e03\u4e01\u7684\u989c\u8272\u3002\n\n$pos[i]$\u8bb0\u5f55\u989c\u8272\u4e3a$i$\u7684\u5e03\u4e01\u7684\u4f4d\u7f6e\u3002\n\n\u56e0\u4e3a\u989c\u8272\u7684\u8303\u56f4\u5f88\u5c0f\uff0c\u6211\u4eec\u751a\u81f3\u4e0d\u9700\u8981\u79bb\u6563$QwQ$\u3002\n\n\u4f9d\u6b21\u6a21\u62df\u989c\u8272\u53d8\u6362\u7684\u8fc7\u7a0b\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5c06\u4e0b\u6807\u4e3a$i$\u7684\u989c\u8272$X$\u53d8\u4e3a$Y$\u540e\uff1a\n\n\u82e5$num[i-1]=num[i+1]$\n\n\u200b\t\u2460$X$\u4e0e\u5de6\u53f3\u989c\u8272\u76f8\u540c\uff0c$Y$\u4e0e\u5de6\u53f3\u989c\u8272\u4e0d\u540c \u53d8\u5316\u540e\u6bb5\u6570$+2$\n\n\u200b\t\u2461$X$\u4e0e\u5de6\u53f3\u989c\u8272\u4e0d\u540c\uff0c$Y$\u4e0e\u5de6\u53f3\u989c\u8272\u76f8\u540c \u53d8\u5316\u540e\u6bb5\u6570$-2$\n\n\u82e5$num[i-1] \\neq num[i+1]$\n\n\u200b\t\u2460$X$\u4e0e\u5de6\u53f3\u989c\u8272\u4e0d\u540c\uff0c$Y$\u4e0e\u5de6\u53f3\u989c\u8272\u4e4b\u4e00\u4e0d\u540c \u53d8\u5316\u540e\u6bb5\u6570$-1$\n\n\u200b\t\u2461$X$\u4e0e\u5de6\u53f3\u989c\u8272\u4e4b\u4e00\u4e0d\u540c\uff0c$Y$\u4e0e\u5de6\u53f3\u989c\u8272\u76f8\u540c \u53d8\u5316\u540e\u6bb5\u6570$+1$\n\n\u6ce8\u610f\u66f4\u65b0$num$\u548c$pos$\u6570\u7ec4\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 1000005\nusing namespace std;\nint n,m,ans;\nint num[maxn];\nvector<int> pos[maxn];\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(num,0x3f,sizeof(num));\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&num[i]);\n\t\tpos[num[i]].push_back(i);\n\t\tif(num[i]-num[i-1]) ans++;\n\t}\n\tint opt;\n\tint x,y;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt==1){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif(x==y) continue;\n\t\t\tfor(int i=0;i<pos[x].size();i++){\n\t\t\t\tint xx=pos[x][i];\n\t\t\t\tif(num[xx-1]==num[xx+1]){\n\t\t\t\t\tif(x==num[xx-1]&&y!=num[xx-1]) ans+=2; \n\t\t\t\t\tif(x!=num[xx-1]&&y==num[xx-1]) ans-=2;\n\t\t\t\t} \n\t\t\t\telse{\n\t\t\t\t\tif(x!=num[xx-1]&&x!=num[xx+1]&&(y!=num[xx-1]||y!=num[xx+1])) ans--;\n\t\t\t\t\tif((x!=num[xx-1]||x!=num[xx+1])&&y!=num[xx-1]&&y!=num[xx+1]) ans++;\n\t\t\t\t}\n\t\t\t\tnum[xx]=y;\n\t\t\t\tpos[y].push_back(xx);\n\t\t\t}\n\t\t\tpos[x].clear();\n\t\t}\n\t\telse printf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1562935023,
        "uid": 111095,
        "name": "Epworth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "# \u5514\u59c6\n~~\u88ab\u8fd9\u9898\u6bd2\u7624\u4e86\u4e00\u4e0b\u5348\u3002\u3002\u3002~~\n\n------------\n\u7531\u4e8e\u6211\u662f\u76f4\u63a5\u4ece[P3224 [HNOI2012]\u6c38\u65e0\u4e61](https://www.luogu.org/problemnew/show/P3224)\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u4e60\u60ef\u6027\u5730\u6309\u5408\u5e76\u7684\u601d\u8def\u60f3\uff0c\u770b\u6ca1\u4eba\u8fd9\u4e48\u5199\uff0c\u6211\u5c31\u6765\u5199\u4e00\u7bc7\u3002~~\uff08\u5b9e\u9645\u4e0a\u662f\u4e00\u65f6\u534a\u4f1a\u6ca1\u60f3\u6e05\u695a\uff09~~\n\n------------\n- \u9996\u5148\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a**\u989c\u8272**\u5efa\u7acb\u4e00\u9897\u5e73\u8861\u6811\uff08\u6211\u7528\u7684\u662ftreap\u54d2\uff09\uff0c\u6bcf\u5f53\u6709\u989c\u8272\u6539\u52a8\u65f6\uff0c\u6211\u4eec\u5c31\u628a\u5bf9\u5e94\u989c\u8272\u7684\u5e73\u8861\u6811\u4e0a\u7684\u6240\u4ee5\u8282\u70b9\u5168\u90e8\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u6811\u4e0a\u3002\n\n- \u4f46\u8fd9\u4e2a\u65b9\u6cd5\u4e00\u770b\u5c31\u592a\u66b4\u529b\u4e86\u3002\u4e8e\u662f\u6211\u4eec\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff08\u6c38\u65e0\u4e61\u90a3\u9898\u4e5f\u662f\uff09\uff0c\u5c31\u662f\u628a\u8282\u70b9\u5c0f\u7684\u6811\u8f6c\u79fb\u5230\u8282\u70b9\u591a\u7684\u6811\u3002\u8fd9\u4e2a\u697c\u4e0b\u697c\u4e0a\u90fd\u8bb2\u5f97\u6bd4\u6211\u597d\uff0c\u6211\u5c31\u4e0d\u8bf4\u4e86\u3002\u4f46\u5982\u679c\u672c\u6765\u662f\u8981\u628aa\u6811\u8f6c\u79fb\u5230b\u6811\uff0c\u53ef\u6211\u4eec\u56e0\u4e3aa.size>b.size\u6240\u4ee5\u628ab\u6811\u8f6c\u79fb\u5230a\u6811\u6765\u4e86\uff0c\u8fd9\u5c31\u4f1a\u5bfc\u81f4\u540e\u9762\u7684\u8f6c\u79fb\u51fa\u95ee\u9898\u3002\u6240\u4ee5\u6211\u4eec\u7528f\u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u4e2a\u989c\u8272\u5b9e\u9645\u4e0a\u5bf9\u5e94\u7684\u6811\u3002\u5f53\u6211\u4eec\u5728\u4e0a\u9762\u90a3\u4e2a\u60c5\u51b5\u65f6\uff0c\u5c31\u8981\u4ea4\u6362f[a]\u548cf[b]\u3002\n\n- \u7136\u540e\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\uff0c\u6211\u4eec\u591a\u8bb0\u5f55\u4e00\u4e2aleft\u548cright\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u6240\u8bb0\u5f55\u7684\u533a\u95f4\u7684\u8303\u56f4\u3002\u5728\u52a0\u5165\u65b0\u8282\u70b9\u65f6\uff0c\u5982\u679c\u73b0\u5728\u6709\u4e24\u4e2a\u8282\u70b9a\uff0cb\u3002a.left-1==b.right||a.right+1==b.left\u5c31\u8bf4\u660e\u5b83\u4eec\u662f\u8fde\u5728\u4e00\u8d77\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5408\u8d77\u6765\uff0c\u540c\u65f6\u4fee\u6539left\u548cright\u3002\n\n- \u90a3\u4e48\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u7b80\u5355\u4e86\uff0c\u5148\u5728\u8f93\u5165\u65f6\u8bb0\u5f55\u521d\u59cb\u72b6\u6001\u4e0b\u4e00\u5171\u6709\u591a\u5c11\u6bb5\u989c\u8272\uff0c\u663e\u7136\u8fd9\u4e2a\u7b54\u6848\u4e0d\u7ba1\u600e\u4e48\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u589e\u52a0\u7684\u3002\u5f53\u6211\u4eec\u5728\u8f6c\u79fb\u8282\u70b9\u65f6\uff0c\u53ea\u9700\u5728\u76ee\u6807\u5e73\u8861\u6811\u67e5\u627e\u524d\u9a71\u548c\u540e\u7f00\u5c31\u884c\u4e86\u3002\u5982\u679c\u524d\u9a71\u7684right+1\u7b49\u4e8e\u73b0\u5728\u7684left\u6216\u8005\u540e\u7f00\u7684left-1\u7b49\u4e8e\u73b0\u5728\u7684right\u3002\u6211\u4eec\u90fd\u53ef\u4ee5\u628aans--\u3002\n\n- \u6700\u540e\u6709\u4e00\u70b9\u5c31\u662f\uff0c\u5728\u9012\u5f52\u4e00\u68f5\u6811\u8f6c\u79fb\u8282\u70b9\u65f6\uff0c\u4e00\u5b9a\u662f\u8981**\u5148\u9012\u5f52\u4e0b\u4e00\u5c42**\uff0c\u7b49\u56de\u6765\u65f6\u518d\u8f6c\u79fb\u3002\u56e0\u4e3a\u6709\u4e00\u4e9b\u533a\u95f4\u5e76\u6ca1\u6709\u5b8c\u5168\u5408\u5e76\uff0c\u6240\u4ee5\u5148\u8f6c\u79fb\u7684\u8bdd\u4f1a\u5bfc\u81f4\u7b54\u6848\u504f\u5c0f\u3002\uff08\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u62ff\u4e86\u534a\u592950\u5206\uff09\n\n- \uff08\u8fd8\u6709\u4e00\u70b9\uff0c\u867d\u7136n,m\u5c0f\u4e8e100000\uff0c\u4f46\u662fAi,x,y<1,000,000\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5b9e\u9645\u8981\u5efa1\uff0c000\uff0c000\u68f5\u5e73\u8861\u6811\uff09\n\n- ~~\u8fd8\u6709\u4e00\u70b9~~\u5f53a==b\u65f6\uff0c\u4e5f\u5c31\u662f\u4ea4\u6362\u540c\u4e00\u79cd\u989c\u8272\u65f6\uff0c\u8981\u76f4\u63a5continue\uff0c\u4e0d\u7136\u5bb9\u6613gg\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<iostream>\n#include<ctime>\n#include<queue>\n#include<string>\n#include<cstring>\n#include<cmath>\n#define MAXN 1400100\n#define INF 10000000\nusing namespace std;\nint sum,R[MAXN];\nint n,m;\nint col[MAXN];\nint f[MAXN];\nint ans=0;\nstruct node{\n       int son[2];\n       int num;\n       int size;\n       int left;\n       int rd;\n       int right;\n}tree[MAXN];\nvoid up(int now){\n     tree[now].size=tree[tree[now].son[0]].size+tree[tree[now].son[1]].size+tree[now].num;\n}\nvoid rotate(int &now,int d){\n     int to=tree[now].son[!d];\n     tree[now].son[!d]=tree[to].son[d];\n     tree[to].son[d]=now;\n     up(now);\n     up(to);\n     now=to;\n}\nvoid change(int &now,int x,int y){\n     if (now<=1000100){now=++sum;tree[now].size=tree[now].num=y-x+1;tree[now].left=x;tree[now].right=y;tree[now].rd=rand();return;}\n     else if(tree[now].left==x){tree[now].num++;tree[now].size++;return;}\n     else if(tree[now].right==x-1){tree[now].num++;tree[now].size++;tree[now].right=y;return;}\n     else if(tree[now].left==y+1){tree[now].num++;tree[now].size++;tree[now].left=x;return;};\n     int tmp=(x>tree[now].left);\n     change(tree[now].son[tmp],x,y);\n     if (tree[now].rd>tree[tree[now].son[tmp]].rd)rotate(now,!tmp);\n     up(now);\n}\nint pre(int now,int x){\n    if (!now) return 0;\n    int a;\n    if (tree[now].left>=x)return pre(tree[now].son[0],x);\n    else {\n         a=pre(tree[now].son[1],x);\n         if (tree[now].left>tree[a].left||!a)return now;\n            else return a;\n    }\n}\nint suc(int now,int x){\n    if (!now) return 0;\n    int a;\n    if (tree[now].left<=x)return suc(tree[now].son[1],x);\n    else {\n         a=suc(tree[now].son[0],x);\n         if (tree[now].left<tree[a].left||!a)return now;\n            else return a;\n    }\n}\nvoid dfs(int now,int &to){\n     if (now<=1000100)return;\n     int p=pre(to,tree[now].left);\n     int s=suc(to,tree[now].left);\n     if (tree[p].right+1==tree[now].left&&p)ans--;\n     if (tree[s].left-1==tree[now].right&&s)ans--; \n     dfs(tree[now].son[0],to);\n     dfs(tree[now].son[1],to);\n     change(to,tree[now].left,tree[now].right);\n}\nint main(){\n    cin>>n>>m;\n    sum=1000100;\n    memset(col,0,sizeof(col));\n    for(int i=1;i<=n;i++){\n            scanf(\"%d\",&col[i]);\n    }\n    memset(tree,0,sizeof(tree));\n    for(int i=1;i<=1000000;i++){\n            R[i]=i;\n            f[i]=i;\n    }\n    for(int i=1;i<=n;i++){\n            change(R[col[i]],i,i);\n            if (col[i]!=col[i+1])ans++;\n    }\n    for(int i=1;i<=m;i++){\n            int a,b,c;\n            scanf(\"%d\",&a);\n            if (a==1){\n               scanf(\"%d%d\",&b,&c);\n               if (f[b]==f[c]) continue;\n               if (tree[R[f[b]]].size<tree[R[f[c]]].size){dfs(R[f[b]],R[f[c]]);R[f[b]]=f[b];}\n               else {dfs(R[f[c]],R[f[b]]);R[f[c]]=f[c];f[c]+=f[b];f[b]=f[c]-f[b];f[c]=f[c]-f[b];};\n            }\n            else printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1550549011,
        "uid": 118273,
        "name": "\u543e\u738b\u7f8e\u5982\u753b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    },
    {
        "content": "## \u601d\u8def\n###  \u6280\u80fd\u50a8\u5907\n1 treap\n\n2 \u5e76\u67e5\u96c6\n\n3 \u542f\u53d1\u5f0f\u5408\u5e76\n\n\n#### \u542f\u53d1\u5f0f\u5408\u5e76\n~~\u524d\u9762\u4e24\u4e2a\u4e0d\u4f1a\u6211\u4e5f\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5~~\n\n\u542f\u53d1\u5f0f\u5408\u5e76\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u628a\u5c11\u7684\u5f80\u591a\u7684\u4e0a\u9762\u5408\n\n### \u5927\u4f53\u601d\u8def\n\u5efan\u4e2atreap\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u989c\u8272\uff0c\u91cc\u9762\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0b\u6807\u3002\n\n\u5408\u5e76\u66b4\u529b\u5408\u5e76\uff0c\u628a\u4e00\u4e2atreap\u91cc\u7684\u5168\u90e8\u52a0\u5230\u53e6\u4e00\u4e2atreap\u91cc\uff0c\u5c0f\u7684\u5f80\u5927\u7684\u52a0\u3002\u5728\u52a0\u7684\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u8bb0\u5f55\u662f\u5426\u989c\u8272\u548ci-1,i+1\u76f8\u540c\uff08\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u627e\u524d\u9a71\u548c\u540e\u7ee7\uff09\uff0c\u76f8\u540c\u5c31\u5408\u5e76\u3002\n\n### ~~\u5c0f\u7ec6\u8282~~\n~~1 \u4e00\u5b9a\u8981\u5224\u65adx==y\uff01\u76f8\u7b49\u5c31\u9000\u51fa\uff0c\u522b\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\u2026\u2026~~\n\n~~2 \u5185\u5b58\u6c60\u5f00\u5927\u70b9\uff0c\u5426\u5219\u4f1aRE~~\n\n\n\n------------\n\n## Code\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#define MAXN 100005\nusing namespace std;\n\n//treap\nstruct treap{\n    int v;\n    int r;\n    int s;\n    treap *ch[2];\n    void maintain()\n    {\n        s=1;\n        if(ch[0])s+=ch[0]->s;\n        if(ch[1])s+=ch[1]->s;\n    }\n    int cmp(int k)\n    {\n        if(v==k)return -1;\n        return k<v?0:1;\n    }\n}pool[MAXN*40];\nint tot=0;\nvoid rotate(treap *&o,int d)\n{\n    treap *k=o->ch[d^1];\n    o->ch[d^1]=k->ch[d];\n    k->ch[d]=o;\n    o->maintain();\n    k->maintain();\n    o=k;\n}\nvoid insert(treap *&o,int k)\n{\n    if(o==NULL)\n    {\n        o=&pool[tot++];\n        o->v=k;\n        o->r=rand();\n        o->s=1;\n        o->ch[0]=o->ch[1]=NULL;\n        return;\n    }\n    int d=o->cmp(k);\n    if(d==-1)return;\n    insert(o->ch[d],k);\n    if(o->ch[d]->r>o->r)rotate(o,d^1);\n    o->maintain();\n}\nvoid remove(treap *&o,int k)\n{\n    int d=o->cmp(k);\n    if(d==-1)\n    {\n        if(o->ch[0]==NULL)o=o->ch[1];\n        else if(o->ch[1]==NULL)o=o->ch[0];\n        else\n        {\n            int d2=o->ch[0]->r > o->ch[1]->r ? 1 : 0;\n            rotate(o,d2);\n            remove(o->ch[d2],k);\n        }\n    }\n    else\n        remove(o->ch[d],k);\n    if(o)\n        o->maintain();\n}\nint getpre(treap *o,int k)\n{\n    int ans=0;\n    while(o)\n    {\n        if(o->v<k)ans=o->v,o=o->ch[1];\n        else\n            o=o->ch[0];\n    }\n    return ans;\n}\nint getsuc(treap *o,int k)\n{\n    int ans=0;\n    while(o)\n    {\n        if(o->v>k)ans=o->v,o=o->ch[0];\n        else\n            o=o->ch[1];\n    }\n    return ans;\n}\n\n//unionset\nint p[MAXN];\nint find(int x)\n{\n    return p[x]==x?x:p[x]=find(p[x]);\n}\nint cnt;\nvoid uni(int x,int y)\n{\n    if(find(x)!=find(y))\n    {\n        p[find(x)]=find(y);\n        cnt--;\n    }\n}\nint n,m;\nvoid move(treap *&o,treap *&k)\n{\n    if(o==NULL)return;\n    if(k==NULL)swap(o,k);\n    else\n    {\n        if(o->s>k->s)\n            swap(o,k);\n        while(o!=NULL)\n        {\n            int z=getsuc(o,0);\n            remove(o,z);\n            if(z>1 && getpre(k,z)==z-1)\n                uni(z,z-1);\n            if(z<n && getsuc(k,z)==z+1)\n                uni(z,z+1);\n            insert(k,z);\n        }\n    }\n}\n\nint main()\n{\n    //initalization\n    treap *root[1000005];\n    for(int i=1;i<=1000005;i++)\n        root[i]=NULL;\n    \n    //build\n    scanf(\"%d%d\",&n,&m);\n    cnt=n;\n        for(int i=1;i<=n;i++)p[i]=i;\n    for(int i=1;i<=n;i++)\n    {\n        int cur;\n        scanf(\"%d\",&cur);\n        if(i>1 && getpre(root[cur],i)==i-1)\n            uni(i,i-1);\n        insert(root[cur],i);\n    }\n    \n    for(int i=1;i<=m;i++)\n    {\n        int op;\n        scanf(\"%d\",&op);\n        if(op==2)\n        {\n            printf(\"%d\\n\",cnt);\n        }\n        else\n        {\n            int x,y;\n            scanf(\"%d%d\",&x,&y);\n            if(x==y)\n                continue;\n            move(root[x],root[y]);\n        }\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1528295166,
        "uid": 63925,
        "name": "joe19025",
        "ccfLevel": 0,
        "title": "Treap\u2014\u2014[HNOI2009]\u68a6\u5e7b\u5e03\u4e01"
    },
    {
        "content": "# \u6d1b\u8c37P3201 [HNOI2009] \u68a6\u5e7b\u5e03\u4e01(\u94fe\u5f0f\u5b58\u50a8+\u542f\u53d1\u5f0f\u5408\u5e76)\n\n\u9488\u5bf9\u672c\u9898\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u7b2c\u4e00\u7bc7\u9898\u89e3\u5199\u7684\u6bd4\u8f83\u6e05\u695a\u4e86\uff0c\u5728\u6b64\u5bf9\u5176\u4e2d\u7684fa\u6570\u7ec4\u8fdb\n\n\u884c\u4e00\u4e9b\u8865\u5145\u8bf4\u660e\n\n\u5177\u4f53\u89e3\u91ca\u5199\u5728\u4ee3\u7801\u91cc\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=1e3;\ninline int read(){\n\tint ret=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\n\t\t\tf=-f;\n\t\tch=getchar();\n\t}\n\twhile(ch<='9'&&ch>='0'){\n\t\tret=ret*10+(ch^'0');\n\t\tch=getchar();\n\t}\n\treturn f*ret;\n}\nint n,m;\nint c[maxn];\nint head[maxn];\nint nex[maxn];\nint fa[maxn];\nint sz[maxn];\nint st[maxn];\nint ans;\nint x,xx,y,yy;\nvoid add(int a,int b){\n\tfor(int i=head[a];i;i=nex[i]){\n\t\tans-=(c[i-1]==b)+(c[i+1]==b);\n\t}\n\tfor(int i=head[a];i;i=nex[i]){\n\t\tc[i]=b;\n\t}\n\tnex[st[a]]=head[b];\n\thead[b]=head[a];\n\tsz[b]+=sz[a];\n\tst[a]=sz[x]=head[a]=0;\n\treturn ;\n}\nint main(){\n\t\tn=read();\n\t\tm=read();\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tc[i]=read();\n\t\t\tans+=(c[i]!=c[i-1]);\n\t\t\tfa[c[i]]=c[i];\n\t\t\t/*\u4e3a\u4ec0\u4e48\u6211\u4eec\u8981\u8bbe\u7f6efa\u6570\u7ec4\uff1f\n\u5047\u8bbe\u67091\uff0c2\u4e24\u79cd\u989c\u8272\uff0c\u663e\u7136\u5c062\u5168\u53d8\u4e3a1\u548c\u5c061\u5168\u53d8\u4e3a2\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u540c\u6837\u7684\u6211\u4eec\u8003\u8651\u5230\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4f18\u5316\n\u6240\u4ee5\u5bf9\u5408\u5e76\u91c7\u53d6\u7684\u662f\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5c06\u8be5\u989c\u8272\u5e03\u4e01\u4e2a\u6570\u8f83\u5c0f\u7684\u989c\u8272\u67d3\u6210\u8f83\u5927\u7684\u989c\u8272\n\u8fd9\u65f6\u5c31\u5f15\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5047\u8bbe\u5b58\u57281,2\u4e24\u79cd\u989c\u8272\uff0c1\u989c\u8272\u7684\u5e03\u4e01\u6570\u91cf\u5c0f\u4e8e2\uff0c\u8fd9\u65f6\u6211\u4eec\u628a2\u67d3\u62101\uff0c\u542f\u53d1\u5f0f\u5408\u5e76\u5bfc\u81f4\u6211\u4eec\u5b9e\u9645\u628a1\u67d3\u62102\uff0c\u5047\u8bbe\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u8981\u5bf91\u8fdb\u884c\uff0c\u4f46\u6211\u4eec\u5df2\u7ecf\u628a1\u53d8\u62102\u4e86\uff0c\u5f88\u660e\u663e\u662f\u65e0\u6cd5\u7ee7\u7eed\u7684.\n\u8fd9\u65f6\u6211\u4eec\u4fbf\u9700\u8981\u7528\u5230fa\u6570\u7ec4\u4e86,\u6211\u4eec\u628afa\u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u6bcf\u79cd\u989c\u8272\u7684\u7f16\u53f7\uff0c\u5f53\u6bcf\u6b21\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u5408\u5e76\u987a\u5e8f\u548c\u5f53\u524d\u6240\u7ed9\u4e0d\u540c\u65f6\uff0c\u6211\u4eec\u4fbf\u4ea4\u6362\u4e24\u79cd\u989c\u8272\u7684fa\u6570\u7ec4\uff0c\u6211\u4eec\u8ba9fa[1]=2,fa[2]=1\u8fd9\u6837\u6bcf\u6b21\u5bf91\uff0c2\uff0c\u64cd\u4f5c\u5bf9fa\u8fdb\u884c\u64cd\u4f5c\u3002\u4fbf\u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u4e0a\u8ff0\u60c5\u51b5\u3002\t\t\t\n\t\t\t*/\n\t\t\tif(!head[c[i]])\n\t\t\t\tst[c[i]]=i;\n\t\t\tsz[c[i]]++;\n\t\t\tnex[i]=head[c[i]];\n\t\t\thead[c[i]]=i;\n\t\t}\n\t\tint q;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tq=read();\n\t\t\tif(q==2){\n\t\t\t\tcout<<ans<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tx=read();\n\t\t\t\ty=read();\n\t\t\t\tif(fa[x]==fa[y]){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(sz[fa[x]]>sz[fa[y]]){\n\t\t\t\t\tswap(fa[x],fa[y]);//\u8fd9\u4e00\u6b65\u4ea4\u6362\u975e\u5e38\u91cd\u8981\u3002\n\t\t\t\t}\n\t\t\t\tif(!sz[fa[x]])\n\t\t\t\t\tcontinue;\n\t\t\t\tadd(fa[x],fa[y]);\t\t\t\t\n\t\t\t}\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1603942691,
        "uid": 250013,
        "name": "keep_",
        "ccfLevel": 0,
        "title": "\u9488\u5bf9[HNOI2009] \u68a6\u5e7b\u5e03\u4e01\u7684fa\u6570\u7ec4\u8bf4\u660e"
    },
    {
        "content": "## \u4e00\u4e2a\u5947\u602a\u7684\u601d\u8def\n```cpp\nmap<pair<int,int>,list> mp;//list\u662f\u624b\u5199\u94fe\u8868\u652f\u6301\u4e24\u4e2a\u94fe\u8868\u8fde\u63a5 \n```\n\u60f3\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e2a\u76f8\u90bb\u7684\u70b9\u5efa\u4e00\u6761\u8fb9\uff0c\u6839\u636e\u8fb9\u4e24\u4fa7\u7684\u70b9\u7684\u989c\u8272\u628a\u8fb9\u6254\u8fdbmap+\u94fe\u8868\uff0c\u6bcf\u6b21\u628a$x$\u6539\u6210$y$\u65f6\u53ea\u8981\u904d\u5386\u5bf9\u5e94\u7684\u94fe\u8868\u5373\u53ef\u627e\u5230\u6240\u6709\u53d8\u6210**\u76f8\u90bb\u7684\u540c\u8272\u70b9\u5bf9**\u7684**\u76f8\u90bb\u7684\u4e0d\u540c\u8272\u70b9\u5bf9**\uff0c\u540c\u65f6\u8981\u628a\u6240\u6709\u8fde\u63a5$x$\u7684\u8fb9\u5e76\u5230$y$\u91cc\uff08map\u4e0aupper_bound+\u8fde\u63a5\u94fe\u8868\uff09\n\n\u5b8c\u4e86\uff1f\n\n~~\u5b8c\u4e86~~\n\n\u82e5\u5e72\u5751\u70b9\uff1a\u8fb9\u8981\u5efa\u4e24\u6761\uff08\u65e0\u5411\u8fb9\uff09\uff1b\u4e00\u4e2a\u989c\u8272\u88ab\u6539\u53d8\u540e\u8981\u628a\u539f\u672c\u989c\u8272\u7684\u94fe\u8868**\u5220\u7a7a**\uff08\u56e0\u4e3a\u53ef\u80fd\u67091 1 2 1 1 3\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e0d\u5220\u5c31\u4f1a\u628a1\u7684\u8fb9\u52a0\u52303\u4e0a\uff0c\u4f46\u8fd9\u65f6\u5df2\u7ecf\u6ca1\u67091\u4e86\uff09\uff1b\u5220\u8fb9\u4e5f\u8981\u4e24\u6761\u90fd\u5220\n\n\uff08\u8fb9\u662f\u7528pair\u8868\u793a\u7684\uff09\n\n\u4ee3\u7801\uff1a~~\uff08\u597d\u50cf\u662f\u5199\u8fc7\u7684\u6700\u7b80\u6d01\u7684\u9898\u89e3\u4e86\uff09~~\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<map>\nusing namespace std;\n\nint n,m,i,a[100005],ans,opt,x,y;\n\nchar Getchar()\n{\n\treturn getchar();\n\tstatic const int len=10000000;\n\tstatic char space[len],*p=space,*t=space;\n\tif(p==t)\n\t  t=space+fread(p=space,sizeof(char),len,stdin);\n\treturn *(p++);\n}\nchar rc;int flag;\nvoid read(int &x)\n{\n\tx=0;rc=Getchar();flag=1;\n\twhile(rc<'0'||rc>'9')\n\t  flag=(rc=='-'?-1:1),rc=Getchar();\n\twhile(rc>='0'&&rc<='9')\n\t  x=x*10+rc-'0',rc=Getchar();\n\tx*=flag;\n}\n\nstruct node\n{\n\tint x;\n\tnode *next;\n\tnode(int num=0)\n\t{\n\t\tx=num;next=NULL;\n\t}\n};\nstruct list\n{\n\tnode *head,*end;\n\tvoid push_back(int x)\n\t{\n\t\tif(head==NULL)\n\t\t  head=new node(x),end=head;\n\t\telse end->next=new node(x),end=end->next;\n\t}\n\tvoid link(list x)\n\t{\n\t\tif(x.head==NULL)\n\t\t  return;\n\t\tif(head==NULL)\n\t\t  head=x.head,end=x.end;\n\t\telse end->next=x.head,end=x.end;\n\t}\n};\nlist l;\n\nmap<pair<int,int>,list> mp;//list\u00ca\u00c7\u00ca\u00d6\u00d0\u00b4\u00c1\u00b4\u00b1\u00ed\u00d6\u00a7\u00b3\u00d6\u00c1\u00bd\u00b8\u00f6\u00c1\u00b4\u00b1\u00ed\u00c1\u00ac\u00bd\u00d3 \nmap<pair<int,int>,list> ::iterator it,nit;\n\nint f[100005];\nint find(int x)\n{\n\treturn f[x]==x?x:f[x]=find(f[x]);\n}\n\ninline void del(map<pair<int,int>,list> ::iterator x)\n{\n\tmp.erase(make_pair(x->first.second,x->first.first));\n\tmp.erase(x);\n}\n\nint main()\n{\n\tread(n);read(m);ans=n;\n\tfor(i=1;i<=n;i++)\n\t  read(a[i]),f[i]=i;\n\tfor(i=2;i<=n;i++)\n\t  if(a[i]==a[i-1])\n\t    f[i]=find(f[i-1]),ans--;\n\t  else mp[make_pair(min(a[i],a[i-1]),max(a[i],a[i-1]))].push_back(i-1),mp[make_pair(max(a[i],a[i-1]),min(a[i],a[i-1]))].push_back(i-1);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tread(opt);\n\t\tif(opt==1)\n\t\t{\n\t\t\tread(x);read(y);\n\t\t\tif(x==y)\n\t\t\t  continue;\n\t\t\tl=mp[make_pair(x,y)];\n\t\t\tfor(node *now=l.head;now!=NULL;now=now->next)\n\t\t\t  if(find(now->x)!=find(now->x+1))\n\t\t\t\tans--,f[find(now->x)]=find(now->x+1);\n\t\t\tit=mp.upper_bound(make_pair(x,0));\n\t\t\tfor(;it->first.first==x&&it!=mp.end();nit=it++,del(nit))\n\t\t\t  if(y!=it->first.second)\n\t\t\t  \tmp[make_pair(min(y,it->first.second),max(y,it->first.second))].link(it->second),\n\t\t\t\t  mp[make_pair(max(y,it->first.second),min(y,it->first.second))].link(it->second);\n\t\t}\n\t\tif(opt==2)\n\t\t  printf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541511862,
        "uid": 9517,
        "name": "a2956331800",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3201 \u3010[HNOI2009]\u68a6\u5e7b\u5e03\u4e01\u3011"
    }
]