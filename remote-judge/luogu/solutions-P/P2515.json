[
    {
        "content": "\u6765\u4e00\u7bc7O(nm)\u7684\u9898\u89e3\u3002\n\n\u5176\u5b9e\u524d\u9762\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u6211\u4eec\u5148\u6309\u7167\u4f9d\u8d56\u5173\u7cfb\u8fde\u8fb9\uff0c\u7136\u540e\u628a\u76f8\u4e92\u4f9d\u8d56\u7684\u4e00\u4e9b\u8f6f\u4ef6\u7f29\u70b9\u3002\n\n\u7f29\u5b8c\u70b9\u540e\uff0c\u518d\u5efa\u4e00\u904d\u56fe\uff0c\u6ce8\u610f\u7b2c\u4e8c\u6b21\u5efa\u56fe\u8981\u7528\u7f29\u5b8c\u70b9\u540e\u7684\u7f16\u53f7\uff0c\u7b2c\u4e8c\u6b21\u5efa\u51fa\u6765\u7684\u56fe\u80af\u5b9a\u662f\u68f5\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u8dd1\u4e00\u904ddfs\uff0c\u5904\u7406\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684dfs\u5e8f\uff0c\u5728dfs\u5e8f\u4e0aDP\u3002\n\ni\u8868\u793adfs\u5e8f\uff0cdfn\u8868\u793adfs\u5e8f\u4e3ai\u7684\u8282\u70b9\uff0csum[i]\u8868\u793ai\u8282\u70b9\u7684\u5360\u7528\u7a7a\u95f4\uff0cval[i]\u8868\u793a\u9009i\u8282\u70b9\u7684\u4ef7\u503c\n\n>\u9009\u5f53\u524d\u8282\u70b9\uff1adp[i+1][j+sum[dfn[i]]=max(dp[i][j]+val[dfn[i]])\n\n>\u4e0d\u9009\u5f53\u524d\u8282\u70b9\uff1adp[i+siz[dfn[i]][j]=max(dp[i][j]);\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u4fdd\u8bc1\u9009\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u5b83\u4f9d\u8d56\u7684\u8282\u70b9(\u5305\u62ec\u76f4\u63a5\u548c\u95f4\u63a5\u4f9d\u8d56)\u90fd\u9009\u4e86\u6211\u4eec\u8981\u8bb0\u5f55\u5b83\u6240\u6709\u7956\u5148\u7684sum\u7684\u548c\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#define mxn 110\nusing namespace std;\nint n,m,K,sl,ans,w[mxn],s[mxn],d[mxn],siz[mxn],pre[mxn],sum[mxn],val[mxn],dp[mxn][510];\nint tim,top,id[mxn],stk[mxn],vis[mxn],dfn[mxn],low[mxn];\nint t,h[mxn];\nstruct edge\n{\n    int fr,to,nxt;\n}e[mxn];\ninline char gc()\n{\n    static char buf[1<<16],*S,*T;\n    if(S==T){T=(S=buf)+fread(buf,1,1<<16,stdin);if(S==T)return EOF;}\n    return *S++;\n}\ninline int rd()\n{\n    sl=0;\n    char ch=gc();\n    while(ch<'0'||'9'<ch) ch=gc();\n    while('0'<=ch&&ch<='9') sl=sl*10+ch-'0',ch=gc();\n    return sl;\n}\ninline void add(int u,int v) {e[++t]=(edge){u,v,h[u]};h[u]=t;}\nvoid tarjan(int u)\n{\n    dfn[u]=low[u]=++tim;\n    stk[++top]=u;\n    vis[u]=1;\n    int v;\n    for(int i=h[u];i;i=e[i].nxt)\n        if(!dfn[v=e[i].to])\n            tarjan(v),low[u]=min(low[u],low[v]);\n        else if(vis[v]) low[u]=min(low[u],dfn[v]);\n    if(dfn[u]==low[u])\n    {\n        ++K;\n        do\n        {\n            v=stk[top--];\n            sum[K]+=w[v];\n            val[K]+=s[v];\n            vis[v]=0;\n            id[v]=K;\n        }while(u!=v);\n    }\n}\nvoid dfs(int u)\n{\n    int v;dfn[++tim]=u;siz[u]=1;\n    for(int i=h[u];i;i=e[i].nxt)\n        pre[v=e[i].to]=pre[u]+sum[u],\n        dfs(v),siz[u]+=siz[v];\n}\ninline void upd(int &x,int y) {if(y>x) x=y;}\nint main()\n{\n    n=rd();m=rd();int x;\n    for(int i=1;i<=n;++i) w[i]=rd();\n    for(int i=1;i<=n;++i) s[i]=rd();\n    for(int i=1;i<=n;++i)\n    {\n        x=rd();\n        if(x) add(x,i);\n    }\n    for(int i=1;i<=n;++i)\n        if(!dfn[i])\n            tarjan(i);\n    top=t;t=0;fill(h+1,h+K+1,0);\n    for(int i=1;i<=top;++i)\n        if(id[e[i].fr]!=id[e[i].to])\n            d[id[e[i].to]]++,add(id[e[i].fr],id[e[i].to]);\n    for(int i=1;i<=K;++i)\n        if(!d[i])\n            add(0,i);\n    tim=0;dfs(0);\n    for(int i=1;i<=tim;++i)\n    {\n        for(int j=pre[dfn[i]];j<=m-sum[dfn[i]];++j)\n            upd(dp[i+1][j+sum[dfn[i]]],dp[i][j]+val[dfn[i]]);\n        for(int j=pre[dfn[i]];j<=m;++j)\n            upd(dp[i+siz[dfn[i]]][j],dp[i][j]);\n    }\n    printf(\"%d\\n\",dp[tim+1][m]);\n    return 0;\n}\n```",
        "postTime": 1546234594,
        "uid": 27677,
        "name": "day_dream",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "### Description\n\n\u73b0\u5728\u6211\u4eec\u7684\u624b\u5934\u6709$N$\u4e2a\u8f6f\u4ef6\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8f6f\u4ef6$i$\uff0c\u5b83\u8981\u5360\u7528$W_i$\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u5b83\u7684\u4ef7\u503c\u4e3a$V_i$\u3002\u6211\u4eec\u5e0c\u671b\u4ece\u4e2d\u9009\u62e9\u4e00\u4e9b\u8f6f\u4ef6\u5b89\u88c5\u5230\u4e00\u53f0\u78c1\u76d8\u5bb9\u91cf\u4e3a$M$\u8ba1\u7b97\u673a\u4e0a\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u8f6f\u4ef6\u7684\u4ef7\u503c\u5c3d\u53ef\u80fd\u5927\uff08\u5373$V_i$\u7684\u548c\u6700\u5927\uff09\u3002\n\n\u4f46\u662f\u73b0\u5728\u6709\u4e2a\u95ee\u9898\uff1a\u8f6f\u4ef6\u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u5373\u8f6f\u4ef6$i$\u53ea\u6709\u5728\u5b89\u88c5\u4e86\u8f6f\u4ef6$j$\uff08\u5305\u62ec\u8f6f\u4ef6j\u7684\u76f4\u63a5\u6216\u95f4\u63a5\u4f9d\u8d56\uff09\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u6b63\u786e\u5de5\u4f5c\uff08\u8f6f\u4ef6$i$\u4f9d\u8d56\u8f6f\u4ef6$j$)\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u4e00\u4e2a\u8f6f\u4ef6\u6700\u591a\u4f9d\u8d56\u53e6\u5916\u4e00\u4e2a\u8f6f\u4ef6\u3002\u5982\u679c\u4e00\u4e2a\u8f6f\u4ef6\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u90a3\u4e48\u5b83\u80fd\u591f\u53d1\u6325\u7684\u4f5c\u7528\u4e3a$0$\u3002\n\n\u6211\u4eec\u73b0\u5728\u77e5\u9053\u4e86\u8f6f\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff1a\u8f6f\u4ef6$i$\u4f9d\u8d56\u8f6f\u4ef6$D_i$\u3002\u73b0\u5728\u8bf7\u4f60\u8bbe\u8ba1\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u5b89\u88c5\u4ef7\u503c\u5c3d\u91cf\u5927\u7684\u8f6f\u4ef6\u3002\u4e00\u4e2a\u8f6f\u4ef6\u53ea\u80fd\u88ab\u5b89\u88c5\u4e00\u6b21\uff0c\u5982\u679c\u4e00\u4e2a\u8f6f\u4ef6\u6ca1\u6709\u4f9d\u8d56\u5219$D_i=0$\uff0c\u8fd9\u65f6\u53ea\u8981\u8fd9\u4e2a\u8f6f\u4ef6\u5b89\u88c5\u4e86\uff0c\u5b83\u5c31\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\n\n### Solution\n\n\u660e\u663e\u662f\u6811\u5f62dp\u3002\u8bbe$dp[i][j]$\u4e3a\u4ee5$i$\u53f7\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7528\u4e0d\u8d85\u8fc7$j$\u7684\u7a7a\u95f4\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u6240\u7ed9\u51fa\u7684\u6761\u4ef6\u4e0d\u80fd\u76f4\u63a5\u6784\u6210\u4e00\u68f5\u6811\uff0c\u6bd4\u5982$d[1]=2,d[2]=3,d[3]=1$\u8fd9\u65f6$1,2,3$\u4fbf\u5f62\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u8054\u901a\u5757\u5e76\u4e14\u6784\u6210\u73af\u3002\u53c8\u7531\u4e8e\u8fd9\u4e2a\u73af\u4e5f\u5f88\u7279\u6b8a\uff1a\u8981\u4e48\u90fd\u9009\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528tarjan\u5c06\u73af\u7f29\u70b9\u3002\u65b0\u70b9\u7684$w=\\sum\\limits_{e \\in \\text{\u8be5\u73af}}w[e]$\uff0c$v=\\sum\\limits_{e \\in \\text{\u8be5\u73af}}v[e]$\u3002\n\n\u7f29\u70b9\u540e\u5c06\u539f\u6765\u7684\u8054\u901a\u5757\u4e4b\u95f4\u7684\u8fb9\u8fde\u597d\u540e\u518d\u4ece$0$\u5411\u6bcf\u4e00\u4e2a\u52a0\u5b8c\u8fb9\u540e\u5165\u5ea6\u4e3a$0$\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u6b64\u65f6\u5c31\u5c06\u539f\u56fe\u8f6c\u6362\u4e3a\u4e00\u9897\u4ee5$0$\u4e3a\u6839\u7684\u6811\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u6811\u5f62dp\u8fa3\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n\u5982\u679c\u6700\u5f00\u59cb\u56fe\u662f\u8fd9\u6837\u7684\n\n![](http://mpic2.lzhaofu.cn/u/14/2018/07/26/e5ec8545.png)\n\n\u7136\u540e\u7f29\u70b9\uff0c\u5c06$1,2,3$\u7f29\u4e3a$14$\uff0c$10,11,12,13$\u7f29\u4e3a$15$\uff0c\u7136\u540e\u8ba9$0$\u5411\u51e0\u4e2a\u8054\u901a\u5757\u8fde\u8fb9\uff1a\n\n![](http://mpic2.lzhaofu.cn/u/14/2018/07/26/f1b84548.png)\n\n\u8fd9\u65f6\u539f\u56fe\u88ab\u8f6c\u6362\u6210\u5bf9\u7b54\u6848\u7b49\u4ef7\u7684\u4e00\u68f5\u6811\uff0c\u7136\u540e$dfs$\u7528\u4e0a\u8ff0\u65b9\u7a0b\u8fdb\u884c\u7b80\u5355\u7684\u6811\u4e0a\u80cc\u5305\u5c31\u89e3\u51b3\u4e86\u3002\n\n### code \n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\nconst int MAXN = 505;\nint n, m, cnt, w[MAXN], a[MAXN], d[MAXN]; \nint dfn[MAXN], low[MAXN], bel[MAXN], tot, scc, ins[MAXN], sta[MAXN], top; \nint W[MAXN], V[MAXN], indeg[MAXN], dp[MAXN][MAXN];\nstruct edge {\n    int v;\n    edge *next;\n}pool[MAXN * 2], *head[MAXN];\ninline void addedge(int u, int v) {\n    edge *p = &pool[++cnt];\n    p->v = v, p->next = head[u], head[u] = p; \n}\nvoid tarjan(int u) {\n    dfn[u] = low[u] = ++tot; sta[++top] = u; ins[u] = 1;\n    for(edge *p = head[u]; p; p = p->next) {\n        int v = p->v;\n        if(!dfn[v]) {\n            tarjan(v); \n            low[u] = min(low[u], low[v]);\n        } else if(ins[v]) \n            low[u] = min(low[u], dfn[v]);\n    }\n    if(dfn[u] == low[u]) {\n        ++scc;\n        while(sta[top + 1] != u) {\n            bel[sta[top]] = scc;\n            W[scc] += w[sta[top]]; \n            V[scc] += a[sta[top]];\n            ins[sta[top--]] = 0;\n        }\n    }\n}\nvoid solve(int u) {\n    for(int i = W[u]; i <= m; i++)\n        dp[u][i] = V[u];\n    for(edge *p = head[u]; p; p = p->next) {\n        int v = p->v;\n        solve(v); int k = m - W[u];\n        for(int i = k; i >= 0; i--) \n            for(int j = 0; j <= i; j++)\n                dp[u][i + W[u]] = \n                max(dp[u][i + W[u]], \n                dp[v][j] + dp[u][i + W[u] - j]);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", &w[i]);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    for(int i = 1; i <= n; i++) {\n    \tscanf(\"%d\", &d[i]); if(d[i]) addedge(d[i], i);\n    }\n    for(int i = 1; i <= n; i++)    \n        if(!dfn[i]) tarjan(i);\n    for(int i = 0; i <= n; i++) head[i] = NULL; cnt = 0;\n    for(int i = 1; i <= n; i++)\n    \tif(bel[d[i]] != bel[i]) {\n    \t\taddedge(bel[d[i]], bel[i]);\n    \t\tindeg[bel[i]]++;\n        }\n    for(int i = 1; i <= scc; i++) \n        if(!indeg[i]) addedge(0, i);\n    solve(0);\n    printf(\"%d\\n\", dp[0][m]);\n \treturn 0;\n}\n\n```\n",
        "postTime": 1532601080,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u771f\u662f\u65e0\u9650\u6b21\u82e6\u82e6\u6323\u624e\u5f97\u51fa\u7684\u4ea7\u7269\u554a\u3002     \n\u6211\u4eec\u6765\u4e00\u6b65\u6b65\u5730\u5206\u6790\u9898\u9762:     \n1.\u8fd9\u4e00\u9053\u9898\u4e4d\u4e00\u770b\u50cf\u662f\u4e00\u4e2a\u6811\u4e0a\u80cc\u5305\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4e8e\u662f\u5f97\u51fa\u7a0b\u5e8f\u7684\u4e3b\u8981\u6846\u67b6:\u6811\u5f62dp\u3002     \n\u6211\u4eec\u5148\u5efa\u56fe\uff0c\u7528```up[i]```\u6765\u5b58\u50a8i\u7684\u5148\u51b3\u6761\u4ef6(\u6ce8\u610f:x,i\u4e0d\u8981\u641e\u53cd\u4e86)\u3002\n```cpp\nfor(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n\t\tup[i]=x;\n        if(x!=0)addedge(x,i);\n    }\n```\n\u4f46\u662f\uff0c\u9898\u76ee\u63cf\u8ff0\u4e2d\u5e76\u6ca1\u6709\u8bf4\u8fd9\u4e2a\u4e1c\u897f\u4e00\u5b9a\u662f\u4e00\u68f5\u6811,\u5b83\u6709\u53ef\u80fd\u662f\u4e00\u5f20\u5e26\u73af\u56fe\uff0c\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u68ee\u6797\u3002    \n\u4f8b\u5982\uff0c\u8003\u8651\u8fd9\u6837\u7684\u4e00\u4e2a\u4f9d\u8d56\u5173\u7cfb:\n```cpp\n4 9\n3 3 3 1 \n2 3 4 6\n2 3 1 1\n```\n\u6211\u4eec\u53d1\u73b0:\u8fd9\u4e2a\u56fe\u5efa\u5b8c\u540e\u662f\u4e00\u4e2a\u5e26\u73af\u56fe\u30021\uff0c2\uff0c3\u53f7\u8282\u70b9\u4e92\u4e3a\u4f9d\u8d56\u6761\u4ef6\u3002\u4e00\u65e6\u6709\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u9009\u62e9\uff0c\u6574\u4e2a\u73af\u91cc\u9762\u7684\u6240\u6709\u5185\u5bb9\u90fd\u65e0\u6cd5\u88ab\u4f7f\u7528\u3002        \n\u6211\u4eec\u91cd\u65b0\u89c2\u5bdf\u8fd9\u5f20\u56fe\uff0c\u6211\u4eec\u53d1\u73b01\uff0c2\uff0c3\u53f7\u8282\u70b9\u7684\u5171\u6027\uff1a\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b83\u6574\u4e2a\u9009\u62e9\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5b83\u6574\u4e2a\u4e0d\u9009\u62e9\uff0c\u5bf9\u5176\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u771f\u5b50\u96c6\u90fd\u6ca1\u6709\u610f\u4e49\u3002    \n\u5bf9\u4e8e\u73af\u4e2d\u70b9\u6709\u5171\u6027\u7684\u56fe\uff0c\u6211\u4eec\u8003\u8651\u7528\u7f29\u70b9\u6765\u89e3\u51b3\u95ee\u9898(\u672c\u9898\u4e2d\u4ee5tarjan\u7b97\u6cd5\u4e3a\u4f8b)\u3002   \n2.\u7f29\u70b9\u8fc7\u7a0b(\u4f1atarjan\u7684\u53ef\u4ee5\u8df3\u8fc7):      \ntarjan\u7b97\u6cd5\u57fa\u4e8e\u65f6\u95f4\u6233\u4e0edfs\u5b9e\u73b0\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u70b9\u88ab\u53d1\u73b0\u7684\u65f6\u95f4\u5b58\u5165dfn\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u5c06\u4e00\u4e2a\u70b9\u591f\u8ffd\u6eaf\u5230\u7684\u6700\u65e9\u7684\u6808\u4e2d\u8282\u70b9\u7684\u6b21\u5e8f\u8ba1\u5165low\u6570\u7ec4\u4e2d\u3002        \n\u6211\u4eec\u6765\u8fc7\u4e00\u904d\u7b97\u6cd5\u6d41\u7a0b\uff1a\n1.\u521d\u59cb\u5316:\n```cpp\nvoid tarjan(int u)\n{\n    low[u]=dfn[u]=++now;\n    hep[++top]=u;vis[u]=1;\n```\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0ctarjan\u7684\u521d\u59cb\u5316\u4e2d\u8981\u5b8c\u62102\u4e2a\u5de5\u4f5c:     \n\u2460.\u66f4\u65b0\u65f6\u95f4\u6233\u4e0elow\u6570\u7ec4      \n\u2461.\u5c06\u8282\u70b9\u538b\u6808\u5e76\u6253\u4e0a\u6807\u8bb0       \n2.tarjan\u4e3b\u8fc7\u7a0b:\n```cpp\n    for(int i=head[u];i!=-1;i=a[i].next)\n    {\n\t\tint v=a[i].to;\n\t\tif(!dfn[v]){tarjan(v);low[u]=min(low[u],low[v]);}\n        \telse if(vis[v])low[u]=min(low[u],dfn[v]);\n    }\n```\n\u6211\u4eec\u6765\u6162\u6162\u5206\u6790\u5b83\uff1a    \n\u6211\u4eec\u9996\u5148\u904d\u5386\u6bcf\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u5bf9\u80fd\u5230\u8fbe\u7684\u70b9\u8fdb\u884c\u8bbf\u95ee:     \n```cpp\n    for(int i=head[u];i!=-1;i=a[i].next)\n    {\n\t\tint v=a[i].to;\n```\n\u6211\u4eec\u9700\u8981\u5206\u51fa\u4e09\u79cdv\u70b9\uff1a     \n1.\u4ece\u6ca1\u8bbf\u95ee\u8fc7\u7684     \n\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\uff0c\u6211\u4eec\u5c06\u5b83\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u70b9\uff0c\u9012\u5f52\u5730\u8fdb\u884ctarjan\u8fc7\u7a0b\u3002    \n\u5728tarjan\u7ed3\u675f\u540e\uff0c\u66f4\u65b0\u5b83\u7684low\u6570\u7ec4\u3002      \n\u4f60\u53ef\u4ee5\u628a\u66f4\u65b0\u7684\u8fc7\u7a0b\u7406\u89e3\u6210\u4ecetarjan\u8fc7\u7a0b\u91cc\u56de\u4f20\u6765\u4e86\u5b83\u7684low\u503c\uff0c\u6211\u4eec\u5c06\u5b83\u7684low\u503c\u4e0e\u73b0\u5728\u8fd9\u4e2a\u8282\u70b9\u7684low\u503c\u6bd4\u8f83\uff0c\u5e76\u53d6\u8f83\u5c0f\u503c\u3002\n```cpp\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n```\n2.\u8bbf\u95ee\u8fc7\uff0c\u5e76\u5728\u6808\u91cc\u7684       \n\u8fd9\u79cd\u8282\u70b9\u662f\u53ef\u4ee5\u5230\u8fbe\u5f53\u524d\u8282\u70b9\u7684\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u4e2a\u70b9\uff0c\u5c31\u662f\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4e8e\u662f\u6211\u4eec\u5bf9\u5f53\u524d\u70b9\u7684low\u503c\u8fdb\u884c\u66f4\u65b0\n```cpp\n        else if(vis[v])low[u]=min(low[u],dfn[v]);\n```\n3.\u8bbf\u95ee\u8fc7\uff0c\u4f46\u4e0d\u5728\u6808\u91cc\u7684          \n\u90fd\u4e0d\u80fd\u5230\u8fbe\u4f60\uff0c\u8ddf\u4f60\u6709\u4ec0\u4e48\u5173\u7cfb\u5417\uff0c\u76f4\u63a5\u5ffd\u89c6\u6389\u5c31\u884c\u4e86\u3002      \n3.\u9000\u6808:\n```cpp\n    if(dfn[u]==low[u])\n    {\n        ++tot;\n        vis[u]=0;\n        while(hep[top+1]!=u)\n        {\n            fa[hep[top]]=tot;\n            vis[hep[top--]]=0;\n        }\n    }\n}\n```\n\u6574\u4e2a\u9000\u6808\u8fc7\u7a0b\u5c31\u662f\u8bb0\u5f55\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u8fc7\u7a0b\uff0c\u4e0b\u9762\u6211\u5c31\u6765\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b\u3002         \n\u9000\u6808\u7684\u6761\u4ef6\u662f```dfn[u]==low[u]```\uff0c\u4ee3\u8868\u7740\u6211\u4eec\u7684\u904d\u5386\u8fc7\u7a0b\u5df2\u7ecf\u89e6\u5e95\uff0c\u5e76\u4e14\u56de\u6eaf\u56de\u6765\u4e86\u3002      \n\u5728\u6211\u4eec\u5f53\u524d\u70b9\u4e0a\u65b9\u7684\u90fd\u662f\u4ec0\u4e48\u70b9\u5462\uff1f\u90fd\u662f\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u5168\u90e8\u53d6\u51fa\uff0c\u5e76\u8bb0\u5f55\u8fdb\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d(\u4e00\u822c\u7ba1\u8fd9\u4e2a\u53eb\u201c\u67d3\u8272\u201d)\u3002       \ntarjan\u7f29\u70b9\u8fc7\u7a0b\u5b8c\u6574\u4ee3\u7801:\n```cpp\nvoid tarjan(int u)\n{\n    low[u]=dfn[u]=++now;\n    hep[++top]=u;vis[u]=1;\n    for(int i=head[u];i!=-1;i=a[i].next)\n    {\n\t\tint v=a[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n        else if(vis[v])low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u])\n    {\n        ++tot;\n        vis[u]=0;\n        while(hep[top+1]!=u)\n        {\n            fa[hep[top]]=tot;\n            vis[hep[top--]]=0;\n        }\n    }\n}\n```\n3.\u91cd\u65b0\u5efa\u56fe:       \n\u6211\u4eec\u901a\u8fc7\u7f29\u70b9\uff0c\u5c06\u8fd9\u4e2a\u56fe\u53d8\u6210\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe(\u6811\u6216\u68ee\u6797)\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u5efa\u4e00\u4e2a\u56fe(\u6ce8\u610f\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u987a\u5e8f):      \n```cpp\n    for(int i=1;i<=n;i++)\n    {\n        val[fa[i]]+=v[i];cost[fa[i]]+=w[i];\n        if(fa[i]!=fa[up[i]]&&up[i]!=0)\n\t\t{\n\t\t\taddag(fa[up[i]],fa[i]);\n\t\t\tusd[fa[i]]++;\n\t\t}\n    }\n```\n\u6211\u4eec\u4e3a\u4e86\u5c06\u5176\u8f6c\u6362\u6210\u4e00\u68f5\u6811\uff0c\u5c06\u8fd9\u4e2a\u56fe\u6bcf\u4e00\u4e2a\u6839\u8282\u70b9\u90fd\u8fde\u5230\u4e00\u4e2a\u70b9\u4e0a:\n```cpp\n\tint s=tot+1;\n\tfor(int i=1;i<=tot;i++)if(!usd[i])addag(s,i);\n\tcost[s]=0;val[s]=0;\n```\n4.\u6811\u5f62dp:     \n\u6211\u4eec\u7528dfs\u6765\u63cf\u8ff0dp\u8fc7\u7a0b     \n\u89c4\u5b9adfs(u)\u8868\u793a\u8fdb\u884c\u5230\u4e86\u5f53\u524d\u8282\u70b9\uff0c```f[i][j]```\u4ee3\u8868\u5f53\u524d\u8282\u70b9\u662fi\uff0c\u8fd8\u5269j\u7684\u7a7a\u95f4\u3002    \n\u7b97\u6cd5\u6d41\u7a0b\u5982\u4e0b:    \n1.\u521d\u59cb\u5316\n```cpp\n    for(int i=cost[u];i<=m;i++)f[u][i]=val[u];\n```\n\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u5927\u4e8e\u5f53\u524d\u70b9\u82b1\u8d39\u7684f\u6570\u7ec4\u521d\u59cb\u5316\u4e3au\u7684\u4ef7\u503c\u3002        \n2.\u904d\u5386\u6bcf\u4e00\u6761\u8fb9:\n```cpp\n    for(int i=hag[u];i!=-1;i=dag[i].next)\n    {\n\t\tint v=dag[i].to;\n```\n3.\u6839\u636e\u8f6c\u79fb\u65b9\u7a0b\u5b8c\u6210\u7b97\u6cd5\uff1a     \n\u6211\u4eec\u53d6\u4e86\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5e76\u610f\u8bc6\u5230\uff1a\u6211\u4eec\u53ef\u4ee5\u9009\u5f53\u524d\u70b9\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u9009\u5f53\u524d\u70b9\uff0c\u82e5\u4e0d\u9009\u5f53\u524d\u70b9\uff0c\u5176\u6240\u6709\u5b50\u8282\u70b9\u90fd\u65e0\u6cd5\u88ab\u9009\u62e9\u3002\n\u4f9d\u6b64\u6211\u4eec\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n```cpp\nf[u][j+cost[u]]={max(f[u][j+cost[u]],f[u][j+cost[u]-q]+f[v][q]);}\n```\n\u5c31\u662f\u53d6\u5b50\u8282\u70b9\u4e2d\u7684\u6700\u4f18\u89e3\uff0c\u5e76\u52a0\u4e0a\u5f53\u524d\u8282\u70b9\u7684\u6743\u503c\u3002   \n```cpp\n        dfs(v);\n        for(int j=m-cost[u];j>=0;j--)\n        {\n            for(int q=0;q<=j;q++)\n            {\n                f[u][j+cost[u]]=max(f[u][j+cost[u]],f[u][j+cost[u]-q]+f[v][q]);\n            }\n        }\n    }\n}\n```\ndfs\u8fc7\u7a0b\u5c31\u6b64\u7ed3\u675f\u3002     \n\u5b8c\u6574\u4ee3\u7801:\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<climits>\n#include<ctime>\n#include<algorithm>\n#include<complex>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<vector>\n#define INF 0x3f3f3f3f\n#define ll long long\nusing namespace std;\nstruct edge\n{\n    int to,next;\n}a[1010],dag[1010];\nint hag[1010];\nint head[1010];\nint v[1010];\nint w[1010];\nint cost[1010];\nint val[1010];\nint f[1010][5050];\nint low[1010];\nint dfn[1010];\nint now(0);\nint hep[1010];\nint top(0);\nint vis[1010];\nint fa[1010];\nint up[1010];\nint usd[1010];\nint cnt(0);\nint cal(0);\nint tot(0);\nint n,m;\nvoid addedge(int xi,int yi)\n{\n    a[cnt].to=yi;\n    a[cnt].next=head[xi];\n    head[xi]=cnt++;\n}\nvoid addag(int xi,int yi)\n{\n    dag[cal].to=yi;\n    dag[cal].next=hag[xi];\n    hag[xi]=cal++;\n}\nvoid tarjan(int u)\n{\n    low[u]=dfn[u]=++now;\n    hep[++top]=u;vis[u]=1;\n    for(int i=head[u];i!=-1;i=a[i].next)\n    {\n\t\tint v=a[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n        else if(vis[v])low[u]=min(low[u],dfn[v]);\n    }\n    if(dfn[u]==low[u])\n    {\n        ++tot;\n        vis[u]=0;\n        while(hep[top+1]!=u)\n        {\n            fa[hep[top]]=tot;\n            vis[hep[top--]]=0;\n        }\n    }\n}\nvoid dfs(int u)\n{\n    for(int i=cost[u];i<=m;i++)f[u][i]=val[u];\n    for(int i=hag[u];i!=-1;i=dag[i].next)\n    {\n\t\tint v=dag[i].to;\n        dfs(v);\n        for(int j=m-cost[u];j>=0;j--)\n        {\n            for(int q=0;q<=j;q++)\n            {\n                f[u][j+cost[u]]=max(f[u][j+cost[u]],f[u][j+cost[u]-q]+f[v][q]);\n            }\n        }\n    }\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    memset(hag,-1,sizeof(hag));\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&w[i]);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&v[i]);\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n\t\tup[i]=x;\n        if(x!=0)addedge(x,i);\n    }\n    for(int i=1;i<=n;i++)if(!dfn[i])tarjan(i);\n    for(int i=1;i<=n;i++)\n    {\n        val[fa[i]]+=v[i];cost[fa[i]]+=w[i];\n        if(fa[i]!=fa[up[i]]&&up[i]!=0)\n\t\t{\n\t\t\taddag(fa[up[i]],fa[i]);\n\t\t\tusd[fa[i]]++;\n\t\t}\n    }\n\tint s=tot+1;\n\tfor(int i=1;i<=tot;i++)if(!usd[i])addag(s,i);\n    cost[s]=0;val[s]=0;\n    dfs(s);\n    printf(\"%d\",f[s][m+cost[s]]);\n    return 0;\n}\n```\n\n",
        "postTime": 1543410742,
        "uid": 105496,
        "name": "KevinYu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "# [HAOI2010\\][\u8f6f\u4ef6\u5b89\u88c5 ](https://www.luogu.com.cn/problem/P2515) \n\n## O(nm)\u6cdb\u5316\u7269\u54c1\u4f18\u5316\u5199\u6cd5\n\n[\u6cdb\u5316\u7269\u54c1\u4f18\u5316\u8be6\u7ec6\u89e3\u91ca\u8bf7\u770b----\u56fd\u5bb6\u96c6\u8bad\u961f2009\u8bba\u6587\u96c6\u6d45\u8c08\u51e0\u7c7b\u80cc\u5305\u9898(\u7b2c\u5341\u9762)](https://wenku.baidu.com/view/8ab3daef5ef7ba0d4a733b25.html#)\n\n\u4ee3\u7801\u7247\u6bb5\uff1a\n\n```c++\nvoid dfs(int x,int sum)\n{\n\tif(sum<=0) return ;\n\tfor(re int i=0,t;i<_e[x].size();i++)\n\t{\n\t\tt=_e[x][i];\n\t\tfor(re int j=0;j<=sum-sum_v[t];j++)/\u4e3av\u9884\u7559\u7a7a\u95f4\n\t\t\tdp[t][j]=dp[x][j];\n\t\tdfs(t,sum-sum_w[t]);//\u5bf9\u4e8ev\u7684\u73b0\u6709\u7a7a\u95f4\n\t\tfor(re int j=sum_w[t];j<=sum;j++)\n\t\t\tdp[x][j]=max(dp[x][j],dp[t][j-sum_w[t]]+sum_v[t]);//\u80cc\u5305\n\t}\n}\n```\n\n\u53d1\u73b0\u5176\u5b9e\u548c01\u80cc\u5305\u5f88\u50cf\uff0c\u53ea\u662f\u572801\u80cc\u5305\u7684\u57fa\u7840\u4e0a\u9650\u5236\u4e86\u6761\u4ef6\u2014\u2014\u6346\u7ed1\u5173\u7cfb\uff1b\n\n\u800c\u6211\u5bf9\u6cdb\u5316\u7269\u54c1\u4f18\u5316\u7684\u611f\u6027\u7406\u89e3\u5c31\u662f\uff1a**\"\u9884\u7559\u7a7a\u95f4\"**\u2014\u2014\u4e3a\u5728 $u$ \u5230\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u9884\u7559\u7a7a\u95f4\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u5bf9$u$DP\u7684\u65f6\u5019\u4fdd\u8bc1**\u4ed6\u6240\u4f9d\u8d56\u7684\u7269\u54c1\u9884\u5148\u7b97\u8fdb\u53bb\u4e86**\uff1b\n\n$dp[u][j]$\u7684\u610f\u601d\u5c31\u662f\u5728\u9884\u7559$u$\u53ca\u5176\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u7a7a\u95f4\u540e\uff0c\u8fd8\u5269\u4e0b$j$\u7684\u7a7a\u95f4\u7684\u6700\u5927\u4ef7\u503c;\n\n\u518d\u7ed3\u5408\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u76f8\u4fe1\u5927\u5bb6\u5e94\u8be5\u90fd\u53ef\u4ee5\u7406\u89e3\u3002\n\ncode:\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#define re register\nusing namespace std;\n\nconst int N=101;\n\nint n,m;\n\nvector<int> e[N];\nvector<int> _e[N];\n\nint sum_w[N],sum_v[N],du[N];\n\nint w[N],v[N],dp[N][501];\n\nint low[N],dfn[N],tot,tim,s[N],top,c[N];\n\ninline int read()\n{\n\tint res;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\tres=ch-'0';\n\tch=getchar();\n\twhile(ch>='0'&&ch<='9') res=(res<<1)+(res<<3)+ch-'0',ch=getchar();\n\treturn res;\n}\n\ninline void tarjan(int x)\n{\n\tdfn[x]=low[x]=++tim;\n\ts[++top]=x;\n\tfor(re int i=0,t;i<e[x].size();i++)\n\t{\n\t\tt=e[x][i];\n\t\tif(!dfn[t])\n\t\t{\n\t\t\ttarjan(t);\n\t\t\tlow[x]=min(low[x],low[t]);\n\t\t}\n\t\telse if(!c[t]) low[x]=min(low[x],dfn[t]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\t++tot;\n\t\twhile(s[top+1]!=x)\n\t\t{\n\t\t\tc[s[top]]=tot;\n\t\t\tsum_v[tot]+=v[s[top]];\n\t\t\tsum_w[tot]+=w[s[top]];\n\t\t\ttop--;\n\t\t}\n\t}\n}\n\ninline void dfs(int x,int sum)\n{\n\tif(sum<=0) return ;\n\tfor(re int i=0,t;i<_e[x].size();i++)\n\t{\n\t\tt=_e[x][i];\n\t\tfor(re int j=0;j<=sum-sum_w[t];j++)\n\t\t\tdp[t][j]=dp[x][j];\n\t\tdfs(t,sum-sum_w[t]);\n\t\tfor(re int j=sum_w[t];j<=sum;j++)\n\t\t\tdp[x][j]=max(dp[x][j],dp[t][j-sum_w[t]]+sum_v[t]);\n\t}\n}\n\nint main()\n{\n\tn=read(),m=read();\n\tfor(re int i=1;i<=n;i++) w[i]=read();\n\tfor(re int i=1;i<=n;i++) v[i]=read();\n\tfor(re int i=1,a;i<=n;i++) {a=read();if(a) e[a].push_back(i);}\n\tfor(re int i=1;i<=n;i++) if(!dfn[i]) tarjan(i);\n\tfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=0,u,v;j<e[i].size();j++)\n\t\t{\n\t\t\tu=c[i],v=c[e[i][j]];\n\t\t\tif(u==v) continue;\n\t\t\tdu[v]++;\n\t\t\t_e[u].push_back(v);\n\t\t}\n\tfor(re int i=1;i<=tot;i++)\n\t\tif(!du[i]) _e[0].push_back(i);\n\tdfs(0,m);\n\tprintf(\"%d\",dp[0][m]);\n\treturn 0;\n}\n\n```\n\n\u518d\u5b89\u5229\u4e00\u4e0b\u6211\u7684[\u6811\u578bDP\u5b66\u4e60\u7b14\u8bb0](https://www.cnblogs.com/Wednesday-zfz/p/12209729.html)",
        "postTime": 1602244523,
        "uid": 224436,
        "name": "zfz04",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u5f3a\u8fde\u901a\u5206\u91cf+\u6811\u5f62$DP$\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e2a$i$\uff0c\u4ece$i$\u5411$Di$\u5efa\u4e00\u6761\u6709\u5411\u8fb9\u3002\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u53d1\u73b0\uff0c\u4f9d\u8d56\u5173\u7cfb\u53ef\u4ee5\u5f62\u6210\u73af\u3002\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u91cc\u9762\u7684\u8282\u70b9\u8981\u4e48\u90fd\u9009\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u91cc\u5148$Tarjan$\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u70b9\uff0c\u6784\u6210\u4e00\u4e2a\u65b0\u56fe\uff0c\u8fd9\u6837\u65b0\u56fe\u91cc\u7684\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u6574\u4f53\u8003\u8651\uff08\u56e0\u4e3a\u5bf9\u5e94\u7684\u539f\u56fe\u91cc\u7684\u8282\u70b9\u8981\u4e48\u90fd\u9009\u8981\u4e48\u90fd\u4e0d\u9009\uff09\u3002\u7136\u540e\u65b0\u5efa\u4e00\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u5411\u65b0\u56fe\u91cc\u6240\u6709\u7684\u5165\u5ea6\u4e3a$0$\u7684\u8282\u70b9\u5efa\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u6784\u6210\u4e00\u68f5\u6811\uff0c\u4ee5\u865a\u62df\u8282\u70b9\u4f5c\u4e3a\u6839\u3002\n\n\u5efa\u6811\u5b8c\u6bd5\u540e\uff0c\u5728\u6784\u6210\u7684\u6811\u4e0a\u505a$DP$\u3002\n\n\u4ee5\u4e0b$cost[i]$\u548c$val[i]$\u5206\u522b\u4e3a\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u8d39\u7528\u548c\u4ef7\u503c\uff0c\u8bbe$f[u][i]$\u4e3a\u5728\u8282\u70b9$u$\u7684\u5b50\u6811\u5185\uff0c\u8d39\u7528\u9650\u5236\u4e3a$i$\u7684\u6761\u4ef6\u4e0b\u80fd\u53d6\u5230\u7684\u6700\u5927\u4ef7\u503c\uff0c\u6b64\u65f6\u5bf9\u4e8e\u6bcf\u4e2a$u$\uff0c\u9996\u5148\u628a$f[u][i]$\uff08$cost[u]<=i<=m$\uff09\u8bbe\u4e3a$val[u]$\u3002\n\n\u7136\u540e\u5982\u679c\u7b2c\u4e00\u5c42\u5faa\u73af$u$\u7684\u5b50\u8282\u70b9$v$\uff0c\u7b2c\u4e8c\u5c42**\u5012\u5e8f**\u5faa\u73af$i$\uff08\u4ece$m-cost[u]$\u5230$0$\uff09\uff0c\u7b2c\u4e09\u5c42**\u987a\u5e8f**\u5faa\u73af\u8282\u70b9$v$\u7684\u5b50\u6811\u7684\u8d39\u7528\u9650\u5236$j$\uff08\u4ece$0$\u5230$i$\uff09\uff0c\u5219\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a$f[u][i+cost[u]]=max(f[u][i+cost[u]],f[u][i+cost[u]-j]+f[v][j])$\u3002\n\n\u6700\u540e\u7b54\u6848\u4e3a$f[\u865a\u62df\u8282\u70b9][m]$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ninline int read() {\n    int res = 0; bool bo = 0; char c;\n    while (((c = getchar()) < '0' || c > '9') && c != '-');\n    if (c == '-') bo = 1; else res = c - 48;\n    while ((c = getchar()) >= '0' && c <= '9')\n        res = (res << 3) + (res << 1) + (c - 48);\n    return bo ? ~res + 1 : res;\n}\nconst int N = 105, M = 505;\nint n, m, W[N], V[N], f[N][M], ecnt, nxt[M], adj[N], go[M], top,\nsta[N], dfn[N], low[N], times, num, bel[N], cost[N], val[N], ecnt2,\nnxt2[M], adj2[N], go2[M], d[N];\nbool ins[N], G[N][N];\nvoid add_edge(int u, int v) {\n    nxt[++ecnt] = adj[u]; adj[u] = ecnt; go[ecnt] = v;\n}\nvoid add_edge2(int u, int v) {\n    nxt2[++ecnt2] = adj2[u]; adj2[u] = ecnt2; go2[ecnt2] = v;\n}\nvoid Tarjan(int u) {\n    dfn[u] = low[u] = ++times;\n    sta[++top] = u; ins[u] = 1;\n    for (int e = adj[u], v; e; e = nxt[e])\n        if (!dfn[v = go[e]]) {\n            Tarjan(v);\n            low[u] = min(low[u], low[v]);\n        }\n        else if (ins[v]) low[u] = min(low[u], dfn[v]);\n    if (dfn[u] == low[u]) {\n        int v; bel[u] = ++num; ins[u] = 0;\n        while (v = sta[top--], v != u) bel[v] = num, ins[v] = 0;\n    }\n}\nvoid dp(int u) {\n    int i, j;\n    for (i = cost[u]; i <= m; i++) f[u][i] = val[u];\n    for (int e = adj2[u], v; e; e = nxt2[e]) {\n        dp(v = go2[e]);\n        for (i = m - cost[u]; i >= 0; i--) for (j = 0; j <= i; j++)\n            f[u][i + cost[u]] = max(f[u][i + cost[u]],\n                f[u][i + cost[u] - j] + f[v][j]);\n    }\n}\nint main() {\n    int i, j, x; n = read(); m = read();\n    for (i = 1; i <= n; i++) W[i] = read();\n    for (i = 1; i <= n; i++) V[i] = read();\n    for (i = 1; i <= n; i++) if (x = read()) add_edge(x, i);\n    for (i = 1; i <= n; i++) if (!dfn[i]) Tarjan(i);\n    for (i = 1; i <= n; i++) {\n        cost[bel[i]] += W[i]; val[bel[i]] += V[i];\n        for (int e = adj[i]; e; e = nxt[e])\n            if (bel[i] != bel[go[e]]) G[bel[i]][bel[go[e]]] = 1,\n                d[bel[go[e]]]++;\n    }\n    for (i = 1; i <= num; i++) for (j = 1; j <= num; j++)\n        if (G[i][j]) add_edge2(i, j);\n    for (i = 1; i <= num; i++) if (!d[i])\n        add_edge2(num + 1, i);\n    printf(\"%d\\n\", (dp(num + 1), f[num + 1][m]));\n    return 0;\n}\n```",
        "postTime": 1502102805,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "#### \u6765\u4e00\u4efd\u5199\u8d77\u6765\u7b80\u5355\u4e00\u70b9\u7684\u4ee3\u7801\u5427~\u3002\u611f\u89c9\u522b\u7684\u9898\u89e3\u90fd\u8fd9\u4e48\u5197\u957f\u3002\n\n~~\u867d\u7136\u4e0d\u77e5\u9053\u6211\u7684\u7801\u4e3a\u4ec0\u4e48\u8dd1\u8d77\u6765\u8fd9\u4e48\u6162\u3002\u3002\u3002~~\n\n\u4e00\u9053\u6811\u5f62\u80cc\u5305\u7684\u5165\u95e8\u9898\uff0c\u849f\u84bb\u8c03\u4e86\u534a\u5929\uff0c\u592a\u83dc\u4e86~\n\n____________\n\n\n\u6b64\u9898\u5c31\u662f[\u9009\u8bfe](https://www.luogu.org/problem/P2014)\u8fd9\u9898\u7684~~\u82b1\u91cc\u80e1\u54e8~~\u7248\u3002\u6ca1\u505a\u8fc7[\u9009\u8bfe](https://www.luogu.org/problem/P2014)\u7684\u53ef\u4ee5\u56de\u53bb\u770b\u4e00\u4e0b\uff0c\u53cc\u500d\u7ecf\u9a8c~\n\n\u672c\u9898\u591a\u4e86\u4e00\u4e2a\u5730\u65b9\u5c31\u662f\u73af\uff0c\u65e2\u7136\u4e0d\u4fdd\u8bc1\u662f\u4e00\u9897\u6811\uff0c\u6211\u4eec\u5c31\u628a\u5b83\u7f29\u70b9\u7f29\u6210\u6811\u3002\n\n\u800c\u6211\u6ca1\u6709\u7528tarjan~ \uff0c \u8fd9\u6837\u770b\u8d77\u6765\u4ee3\u7801\u6f02\u4eae\u4e00\u4e9b\uff0c\u4e5f\u77ed\u4e00\u4e9b\u3002\n\n\u6211\u662f\u76f4\u63a5\u62d3\u6251\uff0c\u62d3\u6251\u5b8c\u4e4b\u540e\u53ea\u5269\u4e0b\u73af\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7f29\u70b9\u4e86\u3002\u8bb0\u5f97\u628a\u7f29\u5b8c\u540e\u7684\u70b9\u8ddf $0$ \u518d\u8fde\u8fb9\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u662f\u68f5\u6811\u3002\n\n\u6811\u5f62\u80cc\u5305\u5c31\u4e0d\u7528\u518d\u8bf4\u4e86\u5427\uff0c\u4e0d\u4f1a\u7684\u53bb\u505a[\u9009\u8bfe](https://www.luogu.org/problem/P2014)\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#define QWQ cout<<\"QwQ\"<<endl;\n#define ll long long \n#include<vector>\n#include<queue>\n#include<stack>\n#include<map>\nusing namespace std;\nconst int N=101010;\nconst int qwq=303030;\nconst int inf=0x3f3f3f3f;\nint n,m;\nint cnt;\nint a[N];\nbool vis[N];\nint belong[N];\nint w[N],v[N];\nint fa[N],ru[N];\nint dp[234][678];\nvector <int> e[N];\nvector <int> d[N];\n\ninline int read() {\n\tint sum = 0, f = 1; char c = getchar();\n\twhile(c<'0' || c>'9') { if(c=='-') f = -1; c = getchar(); }\n\twhile(c>='0'&&c<='9') { sum = sum * 10 + c - '0'; c = getchar(); }\n\treturn sum * f;\n}\n\nvoid DFS(int u) {\n\tvis[u] = 1;\n\tfor(int i=0;i<e[u].size();i++) {\n\t\tint to = e[u][i];\n\t\tif(vis[to]) continue;\n\t\tru[to]--;\n\t\tif(!ru[to]) DFS(to);\n\t}\n}\n\nvoid DP(int u) {\n\tfor(int i=0;i<=m;i++) dp[u][i] = (i>=w[u]) ? v[u] : -inf;\n\tfor(int i=0; i<d[u].size(); i++) {\n\t\tint to = d[u][i]; DP(to);\n\t\tfor(int j=m;j>=w[u];j--)\n\t\tfor(int k=w[to];k<=j;k++)\n\t\tdp[u][j] = max(dp[u][j],dp[u][j-k]+dp[to][k]);\n\t}\n}\n\nint main() {\n\tn = read(); m = read(); cnt = n;\n\tfor(int i=1;i<=n;i++) w[i] = read();\n\tfor(int i=1;i<=n;i++) v[i] = read();\n\tfor(int i=1;i<=n;i++) {\n\t\tbelong[i] = i;\n\t\tfa[i] = read();\n\t\tru[fa[i]]++;\n\t\te[i].push_back(fa[i]);\n\t}\n\tfor(int i=1;i<=n;i++) \n\tif(!ru[i] && !vis[i]) DFS(i);\n\tfor(int i=1;i<=n;i++) {\n\t\tif(vis[i]) continue;\n\t\tcnt ++; d[0].push_back(cnt);\n\t\tint now = i;\n\t\twhile(!vis[now]) {\n\t\t\tbelong[now] = cnt;\n\t\t\tvis[now] = 1;\n\t\t\tw[cnt] += w[now];\n\t\t\tv[cnt] += v[now];\n\t\t\tnow = fa[now];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) \n\tif(belong[i]==i)\n\td[belong[fa[i]]].push_back(i);\n\tDP(0);\n\tprintf(\"%d\",dp[0][m]);\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1569550165,
        "uid": 102726,
        "name": "Flandre_495",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "~~**\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u548c\u6211\u4e00\u6837\u770b\u4e0d\u61c2\u9898\u89e3\u7684\uff0c\u82e5\u6ca1\u6709\uff0c\u8bf7\u8df3\u8fc7\u6b64\u7bc7\u9898\u89e3\u3002\uff08\u9003~\uff09**~~\n\n### \u7406\u89e3\u9898\u610f \n~~**\u8fd9\u5f88\u91cd\u8981\u3002**~~\n\n**\u2460\uff1a** \u73b0\u5728\u6211\u4eec\u7684\u624b\u5934\u6709N\u4e2a\u8f6f\u4ef6\uff0c \u5bf9\u4e8e\u4e00\u4e2a\u8f6f\u4ef6i\uff0c \u5b83\u8981\u5360\u7528W_i\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c \u5b83\u7684\u4ef7\u503c\u4e3aV_i\uff0c \u6211\u4eec\u5e0c\u671b\u4ece\u4e2d\u9009\u62e9\u4e00\u4e9b\u8f6f\u4ef6\u5b89\u88c5\u5230\u4e00\u53f0\u78c1\u76d8\u5bb9\u91cf\u4e3aM\u8ba1\u7b97\u673a\u4e0a\uff0c \u4f7f\u5f97\u8fd9\u4e9b\u8f6f\u4ef6\u7684\u4ef7\u503c\u5c3d\u53ef\u80fd\u5927\uff08\u5373V_i\u7684\u548c\u6700\u5927\uff09\u3002\n\n~~\uff08\u4e0d\u96be\u53d1\u73b0\uff09~~ \u7b2c\u4e00\u6bb5\u544a\u8bc9\u6211\u4eec\u8fd9\u597d\u50cf\u662f\u4e00\u4e2a**\u80cc\u5305\u95ee\u9898\u3002**\n\n**\u2461\uff1a** \u8f6f\u4ef6\u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb \uff0c \u5373\u8f6f\u4ef6i\u53ea\u6709\u5728\u5b89\u88c5\u4e86\u8f6f\u4ef6j\uff08\u5305\u62ec\u8f6f\u4ef6j\u7684\u76f4\u63a5\u6216\u95f4\u63a5\u4f9d\u8d56\uff09\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u6b63\u786e\u5de5\u4f5c\uff08\u8f6f\u4ef6i\u4f9d\u8d56\u8f6f\u4ef6j)\u3002\n\n\u5b58\u5728 **\u4f9d\u8d56\u6027 \u7684\u80cc\u5305\uff1f** \n\n**\u2462\uff1a** \u5e78\u8fd0\u7684\u662f\uff0c\u4e00\u4e2a\u8f6f\u4ef6\u6700\u591a\u4f9d\u8d56\u53e6\u5916\u4e00\u4e2a\u8f6f\u4ef6\u3002\u5982\u679c\u4e00\u4e2a\u8f6f\u4ef6\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u90a3\u4e48\u5b83\u80fd\u591f\u53d1\u6325\u7684\u4f5c\u7528\u4e3a0\u3002\n\n\u597d\u50cf\u662f**\u57fa\u73af\u68ee\u6797\u3002**\n\n\u603b\u7ed3\u9898\u610f\uff1a\n \n \u2460\uff1a\u4f9d\u8d56\u6027\u80cc\u5305\u3002\n \n \u2461\uff1a\u57fa\u73af\u68ee\u6797\u3002\n \n###  solution\uff1a\n \n \u2460\uff1a\u5efa\u56fe\uff0c\u6211\u4eec\u9996\u5148\u5904\u7406\u57fa\u73af\u68ee\u6797\u3002\n \n \u6211\u4eec\u5728 **d[i] --> i** \u8fde\u4e00\u6761\u8fb9\u3002\n \n \u53ef\u4ee5\u53d1\u73b0\u8981\u5b89\u88c5\u8f6f\u4ef6i \uff0ci\u7684\u7236\u8282\u70b9\u4e00\u76f4\u5230i\u7684\u7956\u5148\u8282\u70b9\uff08\u5373i\u7684\u7236\u8282\u70b9\u5230\u6839\u8282\u70b9\uff09\u5fc5\u987b\u90fd\u5b89\u88c5\u3002\n \n \u82e5\u6784\u6210\u73af\uff0c\u90a3\u4e48\u8981\u4e0d\u90fd\u5b89\u88c5\uff0c\u8981\u4e0d\u90fd\u4e0d\u5b89\u88c5\u3002\n \n \u6240\u4ee5\u6211\u4eec\u7f29\u70b9\uff08Tarjan\uff09\u3002\n \n \u7f29\u5b8c\u70b9\u56fe\u53ef\u80fd\u4f1a\u4e0d\u8fde\u901a\uff0c\u6240\u4ee5\u6211\u4eec\u5efa\u4e00\u4e2a\u865a\u62df\u8282\u70b9\u3002\u5c06\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u8fde\u4e00\u6761 **\u865a\u62df\u8282\u70b9 --> \u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u3002**\n\n \u5efa\u5b8c\u56fe\uff0c\u6784\u6210\u4e00\u4e2a\u4ee5\u865a\u62df\u8282\u70b9\u4e3a\u6839\u7684**\u6811**\u3002\n \n **\u6811\u4e0a\u4f9d\u8d56\u6027\u80cc\u5305\u95ee\u9898**\u3002\n \n \u5982\u679c\u4f60\u6ca1\u505a\u8fc7\u8fd9\u7c7b\u9898\u578b\uff0c\u53ef\u80fd\u4e0d\u4f1a\u5904\u7406\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bf4\u4e00\u4e0b  dp\u7684\u8f6c\u79fb\u3002\n \n \u8bbedp[ i ] [ j ] \u8868\u793a\u7b2ci\u4e2a\u8282\u70b9\uff0c\u7528\u4e0d\u8d85\u8fc7j\u7684\u7a7a\u95f4\u7684\u6700\u5927\u4ef7\u503c\u3002\n \n \u521d\u59cb\u5316\uff1a\n \n ```cpp\nfor(register int i=sw[x];i<=m;i++) dp[x][i]=sv[x];\n\n```\n\u6ce8\uff1a sw\u4e3a\u7f29\u5b8c\u70b9\u540e\u4e00\u4e2a\u73af\u5185\u603b\u7a7a\u95f4\uff0csv\u4e3a\u7f29\u5b8c\u70b9\u540e\u4e00\u4e2a\u73af\u5185\u603b\u4ef7\u503c\u3002\n\n\u8f6c\u79fb\uff1a\n\n```cpp\ninline void dfs(int x){ //\u5f53\u524d\u641c\u7d22\u5230x\n   for(register int i=sw[x];i<=m;i++) dp[x][i]=sv[x];\n   for(register int i=hed1[x];i;i=net1[i]){\n   \t  int v1=to1[i];\n   \t  dfs(v1);\n   \t  for(register int j=m-sw[x];j>=0;j--)\n   \t   for(register int k=0;k<=j;k++)\n   \t    dp[x][j+sw[x]]=max(dp[x][j+sw[x]],dp[x][j+sw[x]-k]+dp[v1][k]);\n   }\t\n}\n```\n ```cpp\ndp[x][j+sw[x]]=max(dp[x][j+sw[x]],dp[x][j+sw[x]-k]+dp[v1][k]);\n```\n \u7236\u4eb2\u8282\u70b9\u7528 j+sw[x] \u7a7a\u95f4\u7684\u6700\u5927\u4ef7\u503c\uff0c\u662f\u5b50\u8282\u70b9\u7528 k \u7a7a\u95f4\uff0c\u7236\u4eb2\u8282\u70b9\u7528 j+sw[x]-k \u7a7a\u95f4\u7684\u6700\u5927\u4ef7\u503c\u4e4b\u548c\u3002\n  \n j\u5012\u5e8f\u679a\u4e3e\u7684\u539f\u56e0\u662f\uff1a **01\u80cc\u5305**\u3002\n \n \u7531\u4e8e\u6bcf\u4e2a\u5b50\u8282\u70b9\u53ea\u80fd\u9009\u4e00\u6b21\uff0c\u5982\u679c\u6b63\u5e8f\u679a\u4e3e\u7684\u8bdd\uff0c\u663e\u7136\uff0cdp[ x ][ j+sw[x]-k ]\u5c31\u53ef\u80fd\u5df2\u7ecf\u9009\u4e86\u5b50\u8282\u70b9\uff0c\u800c\u7531\u5b83\u8f6c\u79fb\u800c\u6765\uff0c\u6709\u53ef\u80fd\u518d\u9009\u4e00\u6b21\u3002\uff08\u5373\u6b63\u5411\u679a\u4e3e\u662f\u4e00\u4e2a\u5b8c\u5168\u80cc\u5305\uff0c\u6bcf\u4e2a\u53ef\u4ee5\u9009\u591a\u6b21\u3002\uff09\n\n\u4f60\u53ef\u80fd\u4f1a\u6709 **\u7591\u95ee** \uff1a\n\n **\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5148\u5904\u7406\u5b50\u8282\u70b9\uff0c\u4e14\u80fd\u8f6c\u79fb\u5230\u7236\u8282\u70b9 \uff0c\u4f9d\u8d56\u6027\u7684\u5904\u7406\u5462\uff0c\u4e0d\u5e94\u8be5\u7236\u8282\u70b9\u9009\u4e86\uff0c\u624d\u80fd\u9009\u5b50\u8282\u70b9\u5417\uff1f**\n \n \u6ce8\u610f\u679a\u4e3e\u7684\u5927\u5c0f\uff1aj+sw[ x ]\u7684\u6700\u5c0f\u503c\u4e3a sw[ x ], **dp[x][ j+sw[x] ]** \uff0cx\u81f3\u5c11\u7528 sw[ x ] \u7684\u7a7a\u95f4\uff0c\u4e14\u53ea\u80fd\u7531 **dp[x][ sw[x] ]+dp[v1][0]** \u8f6c\u79fb\u800c\u6765\uff0c\u800c dp[ v1 ][0] \u663e\u7136\u4e3a\u5b50\u8282\u70b9\u6ca1\u9009\uff0c\u4ef7\u503c\u4e3a0 \u3002\u800c **j+sw[ x ]-k** \u7684\u6700\u5c0f\u503c\u4e5f\u4e3a sw[x]\u3002\u5373 **sw[ x ]\u5fc5\u9009**\uff01\n \n \u5b50\u8282\u70b9\u53ef\u9009\u53ef\u4e0d\u9009\uff0c\u7236\u8282\u70b9\u5fc5\u9009\uff0c\u6ee1\u8db3\u524d\u9762\u4f9d\u8d56\u6027\u7684\u8981\u6c42\u3002\n \n**Code\uff1a**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nconst int N=1e2+7;\nint n,m,w[N],v[N],d[N];\nint num,hed[N],to[N],net[N],fl[N];\ninline void add(int x,int y){\n\tnum++;\n\tto[num]=y;\n\tnet[num]=hed[x];\n\thed[x]=num;\n}\nint dfn[N],low[N],cnt,co[N],col,st[N],top;\ninline void tarjan(int u){\n\tdfn[u]=low[u]=++cnt;\n\ttop++;\n\tst[top]=u;\n\tfor(register int i=hed[u];i;i=net[i]){\n\t\tint v1=to[i];\n\t\tif(!dfn[v1]){\n\t\t\ttarjan(v1);\n\t\t\tlow[u]=min(low[u],low[v1]);\n\t\t}else if(!co[v1])\n\t\t       low[u]=min(low[u],dfn[v1]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\tcol++;\n\t\tco[u]=col;\n\t\twhile(st[top]!=u){\n\t\t\tco[st[top]]=col;\n\t\t\ttop--;\n\t\t}\n\t\ttop--;\n\t}\n}\nint num1,hed1[N],to1[N],net1[N];\ninline void add1(int x,int y){\n\tnum1++;\n\tto1[num1]=y;\n\tnet1[num1]=hed1[x];\n\thed1[x]=num1;\n}\nint sv[N],sw[N],dp[N][510],size[N];\ninline void dfs(int x){\n   for(register int i=sw[x];i<=m;i++) dp[x][i]=sv[x];\n   for(register int i=hed1[x];i;i=net1[i]){\n   \t  int v1=to1[i];\n   \t  dfs(v1);\n   \t  for(register int j=m-sw[x];j>=0;j--)\n   \t   for(register int k=0;k<=j;k++)\n   \t    dp[x][j+sw[x]]=max(dp[x][j+sw[x]],dp[x][j+sw[x]-k]+dp[v1][k]);\n   }\t\n}\nint main(){\n\tn=read();m=read();\n\tfor(register int i=1;i<=n;i++) w[i]=read();\n\tfor(register int i=1;i<=n;i++) v[i]=read();\n\tfor(register int i=1;i<=n;i++) d[i]=read(),\n\tadd(d[i],i);\n\tfor(register int i=0;i<=n;i++)\n\t if(!dfn[i]) tarjan(i);\n\tfor(register int i=1;i<=n;i++)\n\t if(co[d[i]]!=co[i]){\n\t \tadd1(co[d[i]],co[i]);\n\t \tfl[co[i]]=1;\n\t } \n\tfor(register int i=1;i<=col;i++)\n\t\tif(fl[i]==0) add1(0,i);\n\tfor(register int i=1;i<=n;i++)\n\t\tsv[co[i]]+=v[i],sw[co[i]]+=w[i];\n\tdfs(0);\n\tprintf(\"%d\",dp[0][m]);\n\treturn 0;\n}\n```\n\n\n \n \n   ",
        "postTime": 1570781036,
        "uid": 96495,
        "name": "__Iron",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "**\u8003\u8bd5\u7206\u70b8\u5f88\u7edd\u671b.jpg**\n\n~~\u522b\u544a\u8bc9\u6211\u53ea\u6709\u6211\u5fd8\u4e86\u7f29\u70b9~~\n\n\t\u6bcf\u4e2a\u8f6f\u4ef6\u53ea\u76f4\u63a5\u4f9d\u8d56\u53e6\u4e00\u4e2a\uff08\u4e0d\u4f9d\u8d56\u7684\u5c31\u5047\u8bbe\u4f9d\u8d560\u561b\uff09\u3002\u753b\u56fe\uff0c\u4e09\u5206\u949f\u540e\u3002\n    \u6811\u4e0a\u7684\u80cc\u5305\u95ee\u9898\u561b\uff0c\u597d\u8bf4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u9009\u4e86\u5b83\u624d\u80fd\u9009\u5b83\u7684\u5b50\u8282\u70b9\uff0c\u90a3\u6211\u4eec\u8bbef[i][j]\u8868\u793a\u5230i\u53f7\u70b9\u4e86,\u7528j\u8fd9\u6837\u5927\u7684\u7a7a\u95f4\u80fd\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u3002\u8bbed\u662fi\u7684\u5b50\u8282\u70b9\uff0c\u90a3\u4e48f[d][j]\u53ef\u4ee5\u4ecef[i][j-w[d]-w[i]]+v[i]\u5f97\u5230(\u4e3a\u4ec0\u4e48\u8981\u51cfw[i],\u52a0v[i]?\u56e0\u4e3a\u4f60\u5fc5\u987b\u9009\u4e86\u5b83\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u624d\u80fd\u9009\u5230\u5b83\uff0c\u5bf9\u5427)\uff0c\u90a3\u4e48\u6211\u627e\u51fa\u6bcf\u4e2a\u5b50\u6811\u7528\u4e00\u5b9a\u6570\u91cf\u7684\u7a7a\u95f4\u80fd\u5230\u7684\u6700\u5927\u4ef7\u503c\uff0c\u5206\u522b\u679a\u4e3e\u6bcf\u79cd\u60c5\u51b5(d1\u7528\u591a\u5c11\uff0cd2\u7528\u591a\u5c11...)\uff0c\u7edf\u4e00\u5728i\u91cc\uff0c\u7edf\u8ba1\u4e00\u4e0b\uff0c\u7b54\u6848\u597d\u50cf\u5c31\u51fa\u6765\u4e86\uff08\u5982\u679c\u4e0d\u662f\u5f88\u61c2\uff0c\u5728\u4e0b\u81ea\u4ee5\u4e3a\u6ce8\u91ca\u5199\u5f97\u8fd8\u884c,,\uff09\u3002\u7136\u540e\u6211\u6109\u5feb\u7684\u6253\u5b8c\u4e86\u677f\u5b50\uff08\u597d\u50cf\u8fd8\u51fa\u9505\u4e86\uff1f\uff09,\u7ee7\u7eed\u5f80\u540e\u505a\u3002\n    \u8fd9\u65f6\u770b\u8d77\u6765\u4f3c\u4e4e\u6ca1\u4ec0\u4e48\u4e0d\u5bf9\u3002\n    \u76f4\u5230\u8003\u5b8c\u540e\uff0c\u5927\u4ed9(fyj)\u95ee\u6211\uff1a\u201c\u4f60tarjan\u600e\u4e48\u6253\u7684\uff1f\u201d\u6211\uff1a\u4e00\u8138\u61f5\u903c\u3002\u770b\u770b\u9898\u76ee\uff0c\u6ca1\u6709\u8bf4\u4e0d\u80fd\u6210\u73af\u554a\uff0c\u5982\u679c\u6210\u73af\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\uff0c\u8981\u4e48\u90fd\u9009\uff0c\u662f\u5427\u3002\u4e8e\u662f\u6211\u6109\u5feb\u7684RE\u4e86\u3002\u518d\u770b\u770b\u9898\uff0c\u5982\u679c\u6210\u73af,\u90a3\u4e48\u8fd9\u4e2a\u73af\u4e00\u5b9a\u4e0d\u4f9d\u8d56\u4efb\u4f55\u70b9\uff08\u4eff\u4f5b\u8bf4\u4e86\u53e5\u5e9f\u8bdd,\u6bcf\u4e2a\u70b9\u53ea\u80fd\u4f9d\u8d56\u6700\u591a\u4e00\u4e2a\uff0c\u4f9d\u8d56\u6210\u73af\u4e86\u73af\u91cc\u54ea\u6765\u7684\u7a7a\u7684\u70b9\u4f9d\u8d56\u522b\u7684\uff09,\u7ee7\u7eed\u60f3\uff0c\u53d8\u6210\u4e00\u4e2a\u68ee\u6797\u4e86\u3002\u6811\u6839\u4e0d\u4f9d\u8d56\u600e\u4e48\u529e\u5462\uff1f\u53cd\u6b630\u65e0\u8d21\u732e\u65e0\u5360\u4f4d\uff0c\u90a3\u5c31\u628a\u6811\u6839\u90fd\u7f6e\u4e3a\u8fde\u52300\u597d\u4e86\u3002\u7136\u540e\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u518d\u6253\u4e00\u4e2a\u677f\u5b50\u4e86(tarjan)\u3002\n```cpp\n//\u679c\u65ad\u6811\u5f62dp\uff0c\u7ed3\u679c\u5fd8\u4e86\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u4e1c\u897f,, \n#include<bits/stdc++.h>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<queue>\n#include<deque>\n#include<iostream>\n#define ll long long \n#define re register\n#define inf 0x7f7f7f7f\n#define inl inline\n#define debug printf(\"debug\\n\");\n//#define eps 1e-8\n//#pragma comment(linker, \"/STACK:1024000000,1024000000\")\n//#pragma GCC optimize (2)\n//#pragma G++ optimize (2)\nusing namespace std;\n//const ll mod;(\u540c\u5b66\u770b\u5230\u5934\u6587\u4ef6\u98ce\u683c\u5c31\u77e5\u9053\u662f\u62112333 )\ninl ll read() {\n    re ll x = 0; re int f = 1;\n    char ch = getchar();\n    while(ch<'0'||ch>'9') { if(ch== '-' ) f = -1; ch = getchar(); }\n    while(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n    return x * f;\n}\ninl void write(ll x){\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\ninl void writeln(ll x){\n    if(x<0) {x=-x;putchar('-');}\n    write(x); puts(\"\");\n}\ninl void FR(){\n\tfreopen(\"software.in\",\"r\",stdin);\n\tfreopen(\"software.out\",\"w\",stdout);\n} \ninl void FC(){\n\tfclose(stdin);\n\tfclose(stdout);\n}//\u8003\u8bd5\u9898,, \nll cnt,head[105];\nstruct Node{\n\tll u,v,nxt;\n}e[105<<1],en[105<<1];//\u6709\u53ef\u80fd\u5faa\u73af\u4f9d\u8d56\uff0c\u5fc5\u987b\u7f29\u70b9\nll w[105],v[105],n,m;//en\u662f\u91cd\u5efa\u7684\u56fe \uff0cw,v\u539f\u6743\u503c\u548c\u539f\u82b1\u8d39 \nvoid adde(ll u,ll v){\n\te[++cnt].u=u;e[cnt].v=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nll head2[105];\nvoid adden(ll u,ll v){\n\ten[++cnt].u=u;en[cnt].v=v;\n\ten[cnt].nxt=head2[u];\n\thead2[u]=cnt;\n} \nll d[105];//dfsn\nll f[105][505];//\u4e00\u7ef4\u5904\u7406\u5230\u51e0\u53f7\u5e97\uff0c\u7b2c\u4e8c\u7ef4\u82b1\u8d39\u591a\u5c11 \nll ssw[105],ssv[105];//\u7f29\u70b9\u540e\u6bcf\u4e2a\u70b9\u7684\u82b1\u8d39\u548c\u6743\u503c \nll tot=0;\nvoid dfs(ll x){\n\td[++tot]=x;\n\tif(!head2[x]){\n\t\tfor(re ll i=ssw[x];i<=m;i++){\n\t\t\tf[x][i]=ssv[x];\n\t\t}\n\t\treturn ;\n\t}//\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u81ea\u5df1\u8fd4\u56de\u7f8e\u6ecb\u6ecb \n\tfor(re ll i=head2[x];i;i=en[i].nxt) dfs(en[i].v);//\u6709\u5b50\u8282\u70b9\u5148\u770b\u5b50\u8282\u70b9 \n\tfor(re ll i=head2[x];i;i=en[i].nxt){\n        re ll y=en[i].v;//\u679a\u4e3e\u5b50\u8282\u70b9 \n        for(re ll tow=m;tow>=0;tow--){//\u5728\u8fd9\u4e2a\u5b50\u8282\u70b9\u5206\u914d\u7684 \n            for(re ll j=0;j<=tow;j++){//\u5269\u4f59\u7684(\u5206\u914d\u5230\u5176\u4ed6\u5b50\u8282\u70b9\u7684\uff0c\u81ea\u5df1\u7684\u5728\u540e\u9762\u52a0) \n                f[x][tow]=max(f[x][tow],f[x][tow-j]+f[y][j]);//\u5927\u4ed9\u6211\u4e0d\u662f\u6545\u610f\u6253\u51fafyj\u7684\uff01\uff01 \n            }\n        }\n    }\n    for(re ll i=m;i>=0;i--){\n        if(i>=ssw[x]) f[x][i]=f[x][i-ssw[x]]+ssv[x];//\u53ef\u4ee5\u9009 \n        else f[x][i]=0;// \u4e0d\u80fd\u9009\uff0c\u73a9\u86c7\u76ae \n    }\n}\nvector<ll>S[105];//tarjan\u7528 \nll low[105],dfn[105],cmt,pre[105],bel[105];//\u597d\u50cf\u4e0d\u9700\u8981\u5f00\u8fd9\u4e48\u591a\uff08\u7ba1\u4ed6\u5462\u53cd\u6b63\u4e0d\u5361\u7a7a\u95f4 \uff09 \nll in[105];//(tarjan\uff1a\u5728\u4e0d\u5728\u6808\u91cc   \u91cd\u7f6e\u540e\uff1a\u6709\u65e0\u4f9d\u8d56) \nstack<ll>Q;//tarjan\u5927\u6cd5\u597d,,, \nvoid dfs1(ll x){\n\tdfn[x]=++tot;low[x]=tot;pre[tot]=x;Q.push(x);\n\tin[x]=1;\n\tfor(re ll i=head[x];i;i=e[i].nxt){\n\t\tre ll sv=e[i].v;\n\t\tif(!dfn[sv]) {\n\t\t\tdfs1(sv);\n\t\t\tlow[x]=min(low[x],low[sv]);\n\t\t}\n\t\telse if(in[sv]){\n\t\t\tlow[x]=low[sv];\n\t\t}\n\t}\n\tif(low[x]==dfn[x]){\n\t\t++cmt;\n\t\tll ssx;\n\t\tdo{\n\t\t\tssx=Q.top();\n\t\t\tS[cmt].push_back(ssx);\n\t\t\tbel[ssx]=cmt;\n\t\t\tin[ssx]=0;\n\t\t\tQ.pop();\n\t\t}while(ssx!=x);\n\t}\n}//tarjan\u81ea\u89c9\u5957\u6a21\u677f\uff08\u592a\u4e45\u6ca1\u770b\u6253\u5230\u6cea\u5954\uff09 \n\ninl void tarjan(){\n\tfor(re ll i=1;i<=n;i++){\n\t\tif(!dfn[i]) dfs1(i);\n\t}\n}//\u5199\u51fa\u6765\u611f\u89c9\u597d\u770b\u4e00\u70b9, \nint main(){\n//\tFR(); \n\tn=read(),m=read();\n\tfor(re ll i=1;i<=n;i++) w[i]=read();\n\tfor(re ll i=1;i<=n;i++) v[i]=read();\n\tw[0]=0;v[0]=0;//0\u53f7\u70b9\u65e0\u82b1\u8d39\uff08\u4e5f\u65e0\u8d21\u732e,,\uff09 \n\tfor(re ll i=1;i<=n;i++){\n\t\tll x=read();adde(x,i);\n\t}//\u52a0\u8fb9,, \n\ttarjan();//\u7f29\u70b9 \n\tmemset(in,0,sizeof(in));//\u7f29\u5b8c\u4e86\uff0c\u5fd9\u5b8c\u4e86\u8fd9\u9635\u5b50\uff0cin\u5c31\u53ef\u4ee5\u5fd9\u4e0b\u9635\u5b50\u4e86 \n\tcnt=0;\n\tfor(re ll i=1;i<=n;i++) {\n\t\tfor(re ll j=head[i];j;j=e[j].nxt){\n\t\t\tre ll x=e[j].u,y=e[j].v;\n\t\t\tif(bel[x]==bel[y]) continue ;\n\t\t\tadden(bel[x],bel[y]);\n\t\t\tin[bel[y]]++;\n\t\t}//\u91cd\u6784\u56fe\uff0c\u8c8c\u4f3c\u6ca1\u4ec0\u4e48\u95ee\u9898\u5427,,\uff08\u51fa\u9505\u4e86\u8bf7\u8054\u7cfbfyj,\u4ed6\u6559\u6211\u7684\uff01\uff09 \n\t}\n\tfor(re ll i=1;i<=cmt;i++){\n\t\tif(!in[i]) adden(0,i);//\u628a\u6ca1\u6709\u4f9d \u8d56\u7684\u8bbe\u4e3a\u4f9d\u8d560\uff0c\u5c31\u53ef\u4ee5\u4e00\u6b21\u6811\u5f62\u8dd1\u5b8c\u4e86 \n\t\tfor(re ll j=0;j<S[i].size();j++){\n\t\t\tssw[i]+=w[S[i][j]];\n\t\t\tssv[i]+=v[S[i][j]];\n\t\t}//\u7f29\u70b9\u540e\u5404\u70b9\u6743\u503c\u53ca\u82b1\u8d39 \n\t}\n\ttot=0;\n\tdfs(0);//dp\u4e00\u6ce2 \n\twriteln(f[0][m]);//\u8f93\u51fa \n//\tFC();\n    return 0;\n}\n```",
        "postTime": 1530621593,
        "uid": 70280,
        "name": "Eziotao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u6ca1\u5199tarjin\u8fc7\u4e86\u3002\n\n\u76f4\u63a5\u5728\u539f\u56fe\u4e0a\u5efa\u6811\uff0c\u6bd5\u7adf\u6bcf\u68f5\u5b50\u6811\u7684\u73af\u6700\u591a\u4e00\u4e2a\u3002\n\nvis[]\u6df1\u641c\u8fc7\uff0cins[]\u5728\u6808\u4e2d\uff0cbel[]\u5c5e\u4e8e\u54ea\u4e2a\u8282\u70b9\n\n\u8be6\u89c1\u4ee3\u7801\u8fc7\u7a0bdfs\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<iostream>\n#include<stack>\nusing namespace std;\n#define fi(a,b) for(int i=a;i<=b;i++)\nconst int maxn=102,maxm=501;\nint n,m,w[maxn],v[maxn],d[maxn];//\u6807\u51c6\u8f93\u5165\nint vis[maxn],ins[maxn],bel[maxn];//\u5efa\u6811\nint son[maxn],bro[maxn],f[maxn][maxm];//\u52a8\u89c4\uff0cson[]\u5b50\u8282\u70b9\uff0cbro[]\u7236\u4eb2\u7684\u5176\u4ed6\u5b50\u8282\u70b9\uff0c\u591a\u53c9\u6811\u6539\u4e8c\u53c9\u6811\nstack<int>sta;\nint min(int a,int b){return a<b?a:b;}\nint max(int a,int b){return a>b?a:b;}\nvoid init(){\n    scanf(\"%d%d\",&n,&m);fi(1,n)scanf(\"%d\",&w[i]);\n    fi(1,n)scanf(\"%d\",&v[i]);fi(1,n)scanf(\"%d\",&d[i]);\n    memset(vis,0,sizeof(vis));memset(ins,0,sizeof(ins));\n    memset(son,0,sizeof(son));memset(bro,0,sizeof(bro));\n    memset(f,-1,sizeof(f));fi(1,n)bel[i]=i;\n}//\u8f93\u5165\u3001\u521d\u59cb\u5316\nvoid add(int u,int v){\n    if(!son[u])son[u]=v;\n    else{\n        int x=son[u];while(bro[x])x=bro[x];\n        bro[x]=v;\n    }\n}//\u52a0\u8fb9\nvoid dfs(int s){\n    vis[s]=1;int t=bel[d[s]];//\u4e0b\u4e00\u4e2a\u70b9\n    if(!d[s]){add(n+1,s);return;}//\u5982\u679c\u6ca1\u7236\u4eb2\u6307\u5411\u6839\n    ins[s]=1;sta.push(s);\n    if(vis[t])//\u5982\u679c\u4e0b\u4e00\u4e2a\u70b9\u6df1\u641c\u8fc7\n        if(ins[t]){//\u4e14\u8fd8\u5728\u6808\u4e2d\n            for(int x=sta.top();x!=t;sta.pop(),x=sta.top()){//\u73af\u91cc\u6240\u6709\u70b9\u5c5e\u4e8e\u4e0b\u4e00\u4e2a\u70b9\uff08\u5373\u73af\u7b2c\u4e00\u4e2a\u904d\u5386\u5230\u7684\uff09\n                bel[x]=t;w[t]+=w[x];v[t]+=v[x];ins[x]=0;\n            }\n            ins[t]=0;sta.pop();\n            add(n+1,t);//\u52a0\u4e00\u6761\u5230\u8ddf\u7684\u8fb9\n        }\n        else add(t,s);//\u4e0b\u4e00\u4e2a\u70b9\u8bbf\u95ee\u8fc7\u4e14\u4e0d\u5728\u6808\u4e2d\uff0c\u90a3\u4e48\u5f53\u524d\u70b9\u5728\u4e0b\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\n    else{dfs(t);if(ins[s])add(t,s);}//\u6ca1\u8bbf\u95ee\u5219\u8bbf\u95ee\n    ins[s]=0;\n}\nint dp(int n,int m){\n    if(!n||!m)return 0;\n    if(f[n][m]!=-1)return f[n][m];\n    int t=dp(bro[n],m);\n    fi(0,m-w[n])t=max(t,v[n]+dp(son[n],i)+dp(bro[n],m-w[n]-i));\n    f[n][m]=t;\n    return t;\n}\nint main(){\n    init();//\u8f93\u5165\u3001\u521d\u59cb\u5316\n    fi(1,n)if(!vis[i])dfs(i);//\u5efa\u6811\n    printf(\"%d\\n\",dp(n+1,m));//\u52a8\u89c4\n    return 0;\n}\n```",
        "postTime": 1488374604,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u770b\u8d77\u6765\u662f\u4e2a\u7f29\u70b9+\u6811\u89c4\uff0c\u4f46\u662f\u53ea\u8981\u5206\u6790\u4e00\u4e0b\u6570\u636e\u5c31\u4f1a\u53d1\u73b0\uff1a\n\n\u5982\u679c\u6709\u73af\u7684\u8bdd\u7f29\u5b8c\u70b9\u4e0a\u9762\u53ea\u80fd\u8fde\u63a5\u865a\u62df0\u70b9\uff0c\u800c\u6709\u73af\u7684\u8bdd\u4e0b\u9762\u4e0d\u53ef\u80fd\u6709\u73af\u3002\n\n\u56e0\u4e3a\u6570\u636e\u8f83\u5c0f\uff0c\u6240\u4ee5\u4e8e\u662f\u8f93\u5165\u6570\u636e\u7684\u65f6\u5019\u66b4\u529b\u5904\u7406\u4e00\u4e0b\uff0c\u5728\u6811\u89c4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,w[111],v[111],vis[111][555],f[111][555],lc[111],rc[111];\nint a,b,c,d,bh[111],fa[111],fat[111],fath[111],rw[111],rv[111];  //\u6b64\u65b9\u6cd5\u591a\u52a0\u4e86\u8fd9\u70b9\u4e1c\u897f \nint dfs(int p,int q)\n{\n    if(p==-1||q==0) return 0;\n    if(vis[p][q]) return f[p][q];\n    vis[p][q]=1;\n    f[p][q]=dfs(rc[p],q);\n    for(int i=0;i<=q-rw[p];i++)\n    f[p][q]=max(f[p][q],dfs(lc[p],i)+dfs(rc[p],q-rw[p]-i)+rv[p]);\n    //\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b:\u5de6\u5b69\u5b50\u6240\u5728\u6811\u5206i\u4e2a\u4f53\u79ef\uff0c\u53f3\u5b69\u5b50\u5206(q-\u6839\u4f53\u79ef-i)\u4e2a\u4f53\u79ef \n    return f[p][q];\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++) cin>>w[i],fa[i]=i;\n    for(int i=1;i<=n;i++) cin>>v[i];    //\u8bfb\u5165 \n    for(int i=1;i<=n;i++)\n    {\n        cin>>a;fa[i]=a;\n        if(bh[a]==0&&a!=0)    //\u7236\u4eb2\u4e0d\u5728\u73af\u4e2d \n        {\n            c=a;d=0;\n            while(c!=0)     //\u627e\u662f\u5426\u6709\u73af \n            {\n                c=fa[c];d++;\n                if(c==i||d==111) break;\n            }\n            if(c==i)    //\u662f\u73af\u7684\u8bdd\u6807\u8bb0 \n            {\n                b++;rw[b]=w[i];rv[b]=v[i];bh[i]=b;\n                while(a!=i) rw[b]+=w[a],rv[b]+=v[a],bh[a]=b,a=fa[a];\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    if(bh[i]==0) b++,rw[b]=w[i],rv[b]=v[i],bh[i]=b; //\u5c06\u6ca1\u6807\u8bb0\u7684\u6807\u8bb0 \n    for(int i=1;i<=n;i++) if(bh[i]!=bh[fa[i]]) fath[bh[i]]=bh[fa[i]];  //\u7236\u4eb2\u66f4\u6539 \n    for(int i=0;i<=b;i++) lc[i]=-1,rc[i]=-1;\n    for(int i=1;i<=b;i++)    //\u591a\u53c9\u6811\u8f6c\u4e8c\u53c9\u6811 \n    {\n        if(lc[fath[i]]>0) rc[i]=lc[fath[i]];\n        lc[fath[i]]=i;\n    }\n    cout<<dfs(0,m);    //\u6811\u89c4 \n    return 0;\n}\n/*\n3 16\n5 5 6\n2 3 4\n3 1 2\n*/\n```",
        "postTime": 1512781244,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "## \u9898\u76ee\u8003\u70b9\u5224\u65ad\n- \u6709\u4f9d\u8d56\u7684\u80cc\u5305\u95ee\u9898\n\n## \u89e3\u51b3\u8fc7\u7a0b\n1. \u5224\u73af\n2. \u7f29\u70b9\n3. dfs \u5957 DP\n\n### 1.\u5224\u73af\nFloyd \u5224\u73af,\u5982\u679c $k$ \u5230 $i$ \u6709\u4e00\u6761\u8def\u5f84\u4e14 $i$ \u5230 $j$ \u6709\u4e00\u6761\u8def\u5f84,\u5c31\u4ee3\u8868 $i$ \u548c $j$ \u662f\u8054\u901a\u7684\u3002\n\n```cpp\nfor(int i=1; i<=n; i++)   //\u4ee5i\u4e3a\u8f6c\u8f7d\u70b9\n\t for(int j=1; j<=n; j++)\n\t  for(int k=1; k<=n; k++)\n\t   if(mapp[k][i]==1&&mapp[i][j]==1)\n\t     mapp[k][j]=1;\n```\n### 2. \u7f29\u70b9\n\n#### \u60c5\u51b51.\n\n \u70b9 $i$ \u6240\u5728\u7684\u73af\u4e4b\u524d\u6ca1\u6709\u5224\u65ad\u8fc7\uff0c\u662f**\u65b0\u73af**\u3002\n \u90a3\u4e48\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u65b0\u73af\u653e\u5230**\u6570\u7ec4\u6700\u540e**\uff0c\u5373\u65b0\u52a0\u4e00\u4e2a\u70b9\uff0c\n \u7136\u540e\u8ba9\u8fd9\u4e24\u4e2a\u70b9\u7684\u7a7a\u95f4\u6807\u8bb0\u4e3a**\u8d1f\u503c** $tmpw$\uff0c\u4e14 $tmpw+tmpn$\uff08\u65b0\u70b9\u7684**\u4e0b\u6807**\uff09**\u7b49\u4e8e\u539f\u6765\u7684\u70b9\u6570**\uff0c\n \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u67d0\u4e2a\u70b9\u7684\u7a7a\u95f4\u8fc5\u901f\u627e\u5230\u4ed6\u6240\u5728\u7684\u65b0\u70b9\u3002\n \u50cf\u94a5\u5319\u4e00\u6837**\u4e00\u4e00\u5bf9\u5e94**\uff1b\n\n```cpp\nif(mapp[i][j]==1&&mapp[j][i]==1&&i!=j&&w[j]>0&&w[i]>0)\n {\n\tjsn++;\n\tv[jsn]=v[i]+v[j];  //\u7edf\u8ba1\u7a7a\u95f4\uff0c\u4ef7\u503c\n\tw[jsn]=w[i]+w[j];\n\tjsw--;\n\tw[i]=jsw,w[j]=jsw;\n }\n```\n\n#### \u60c5\u51b52. \n\u70b9 $i$ \u6240\u5728\u7684\u73af\u4e4b\u524d\u5df2\u7ecf\u5224\u65ad\u8fc7\u4e86\uff0c\n\u662f**\u65e7\u73af\uff08\u5df2\u5408\u6210\u65b0\u70b9\uff09**\uff0c\u4e14 $i$ \u662f\u73af\u7684\u4e00\u90e8\u5206\u3002\n\u90a3\u4e48\u6211\u4eec\u5c31\u628a $i$ \u4e5f\u52a0\u5230\u8fd9\u4e2a\u65b0\u70b9\u91cc\u9762\uff0c\n\u5373**\u4f53\u79ef\uff0c\u4ef7\u503c\u76f8\u52a0**\u5373\u53ef\uff1b\n```cpp\n  if(mapp[d[j]][j]==1&&mapp[j][d[j]]==1&&w[j]>0&&w[d[j]]<0)\n\t{\n\t  w[n-w[d[j]]]+=w[j]; //\u5c06\u5f53\u524d\u70b9\u52a0\u5165\u5b83\u4f9d\u8d56\u70b9\u6240\u5728\u7684\u73af\n\t  v[n-w[d[j]]]+=v[j];\n\t  w[j]=w[d[j]];\n   }\n```\n\n\n#### \u60c5\u51b53. \n\u70b9 $j$ \u6240\u5728\u7684\u73af\u662f\u65e7\u73af\uff0c\n\u4f46\u662f $i$ \u4e0d\u662f\u73af\u7684\u4e00\u90e8\u5206\n\n`\uff08\u4f8b\u59821\u4f9d\u8d562\uff0c2\u4f9d\u8d563,3\u4f9d\u8d561\u30024\u4e5f\u4f9d\u8d561\uff0c\u90a3\u4e48\uff0c4\u6240\u5728\u7684\u662f\u4e2a\u73af\uff0c\u4f464\u4e0d\u5c5e\u4e8e\u73af\u7684\u4e00\u90e8\u5206\uff09`\u3002\n\n\u90a3\u4e48\uff0c\u628a $j$ \u7684**\u7236\u4eb2\u8f6c\u5230\u65b0\u70b9**\u4e0a $d[j]= n-w[d[j]]$\u3002\n```cpp\nif(w[j]>0&&w[d[j]]<0)\n if((mapp[d[j]][j]==0&&mapp[j][d[j]]==1)||(mapp[d[j]][j]==1&&mapp[j][d[j]]==0))\n\t d[j]=n-w[d[j]];\n```\n\n\n### 3.\u6811\u5f62DP\n\u4ee5\u4e0a\u7f29\u70b9\u7684\u5de5\u4f5c\u505a\u5b8c\u4e4b\u540e\uff0c\n\u5269\u4e0b\u7684\u5c31\u662f**\u4e00\u68f5\u6811**\u3002\n\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e0a\u9762\u52a8\u89c4\u4e86\uff1a\n\n\u5148\u5c06\u5176\u8f6c\u6362\u6210\u4e00\u68f5**\u5de6\u5b69\u5b50\u53f3\u5144\u5f1f\u7684\u4e8c\u53c9\u6811**\uff0c\n\u4e4b\u540e**\u8bb0\u5fc6\u5316**\u3002\n\n\u5982\u679c $i$ \u7684\u5b69\u5b50\u4e0d\u53d6 \uff0c\u5219\uff1a\n\n$f[b[x]][k]=dfs(b[x],k)$;\n\n\u5982\u679c $i$ \u7684\u5b69\u5b50\u53d6\uff0c\u5219\uff1a\n\n$f[c[x]][y-i]=dfs(c[x],y-i);$\n\n$f[b[x]][i]=dfs(b[x], i);$\n\n$f[x][k]=\\max(f[x][k],v[x]+f[c[x]][y-i]+f[b[x]][i]);$\n\n\u6700\u540e\u7b54\u6848\u662f $f[c[0]][m]$ \uff08\u4ece\u6ca1\u6709\u4f9d\u8d56\u7684\u70b9\u5f00\u59cb\uff09\n",
        "postTime": 1597451915,
        "uid": 128431,
        "name": "JA_yichao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "[\u6b22\u8fce\u5230\u6211\u7684blog\u4e2d\u53c2\u89c2](https://www.cnblogs.com/suxxsfe/p/12737529.html)  \n\ntarjan+\u6811\u4e0a\u80cc\u5305  \n\n## \u9898\u76ee\u63cf\u8ff0  \n\n\u73b0\u5728\u6211\u4eec\u7684\u624b\u5934\u6709 $N$ \u4e2a\u8f6f\u4ef6\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8f6f\u4ef6 $i$\uff0c\u5b83\u8981\u5360\u7528 $W_i$ \u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u5b83\u7684\u4ef7\u503c\u4e3a $V_i$\u3002\u6211\u4eec\u5e0c\u671b\u4ece\u4e2d\u9009\u62e9\u4e00\u4e9b\u8f6f\u4ef6\u5b89\u88c5\u5230\u4e00\u53f0\u78c1\u76d8\u5bb9\u91cf\u4e3a $M$ \u8ba1\u7b97\u673a\u4e0a\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u8f6f\u4ef6\u7684\u4ef7\u503c\u5c3d\u53ef\u80fd\u5927\uff08\u5373 $V_i$ \u7684\u548c\u6700\u5927\uff09\u3002  \n\u4f46\u662f\u73b0\u5728\u6709\u4e2a\u95ee\u9898\uff1a\u8f6f\u4ef6\u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u5373\u8f6f\u4ef6 $i$\u53ea\u6709\u5728\u5b89\u88c5\u4e86\u8f6f\u4ef6 $j$\uff08\u5305\u62ec\u8f6f\u4ef6 $j$ \u7684\u76f4\u63a5\u6216\u95f4\u63a5\u4f9d\u8d56\uff09\u7684\u60c5\u51b5\u4e0b\u624d\u80fd\u6b63\u786e\u5de5\u4f5c\uff08\u8f6f\u4ef6 $i$ \u4f9d\u8d56\u8f6f\u4ef6 $j$ )\u3002  \n\u5e78\u8fd0\u7684\u662f\uff0c\u4e00\u4e2a\u8f6f\u4ef6\u6700\u591a\u4f9d\u8d56\u53e6\u5916\u4e00\u4e2a\u8f6f\u4ef6\u3002\u5982\u679c\u4e00\u4e2a\u8f6f\u4ef6\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u90a3\u4e48\u5b83\u80fd\u591f\u53d1\u6325\u7684\u4f5c\u7528\u4e3a $0$\u3002  \n\u6211\u4eec\u73b0\u5728\u77e5\u9053\u4e86\u8f6f\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff1a\u8f6f\u4ef6 $i$ \u4f9d\u8d56\u8f6f\u4ef6 $D_i$\u3002  \n\u73b0\u5728\u8bf7\u4f60\u8bbe\u8ba1\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u5b89\u88c5\u4ef7\u503c\u5c3d\u91cf\u5927\u7684\u8f6f\u4ef6\u3002\u4e00\u4e2a\u8f6f\u4ef6\u53ea\u80fd\u88ab\u5b89\u88c5\u4e00\u6b21\uff0c\u5982\u679c\u4e00\u4e2a\u8f6f\u4ef6\u6ca1\u6709\u4f9d\u8d56\u5219 $D_i=0$\uff0c\u8fd9\u65f6\u53ea\u8981\u8fd9\u4e2a\u8f6f\u4ef6\u5b89\u88c5\u4e86\uff0c\u5b83\u5c31\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002  \n\n-----------  \n\n\u628a\u4f9d\u8d56\u5173\u7cfb\u60f3\u8c61\u6210\u6709\u5411\u8fb9\uff0c\u7531\u88ab\u4f9d\u8d56\u7684\u8f6f\u4ef6\u6307\u5411\u4f9d\u8d56\u5b83\u7684\u8f6f\u4ef6  \n\u90a3\u4e48\u4e00\u4e2a\u70b9\u80fd\u88ab\u9009\u5230\u7684\u6761\u4ef6\u5c31\u662f\uff0c\u5b83\u7684\u7956\u5148\u88ab\u9009  \n\u7136\u540e\u6bcf\u4e2a\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u5165\u5ea6\uff0c\u8fd8\u662f\u6709\u5411\u8fb9\uff0c\u6240\u4ee5\u5982\u679c\u6ca1\u6709\u73af\u7684\u8bdd\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u6811\uff01\u76f4\u63a5\u6811\u4e0a\u80cc\u5305\u5c31\u80fd\u884c\u4e86  \n\n\u90a3\u4e48\u8003\u8651\u7528 tarjan \u7f29\u70b9\uff0c\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6bcf\u4e24\u4e2a\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u800c\u8fd9\u4e2a\u201c\u4e92\u76f8\u5230\u8fbe\u201d\uff0c\u653e\u5728\u8fd9\u4e2a\u9898\u91cc\u5c31\u662f**\u4e92\u76f8\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u4f9d\u8d56**  \n\u6240\u4ee5\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u70b9\uff0c\u5982\u679c**\u9009\u5c31\u90fd\u9009\uff0c\u4e0d\u9009\u5c31\u90fd\u4e0d\u9009**\uff0c\u8fd9\u70b9\u5f88\u597d\u7406\u89e3  \n\u90a3\u4e48\u7f29\u70b9\u540e\u7684\u56fe\u5c31\u662f\u6811\u4e86\u5417\uff1f  \n\n\u662f\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6765\u8bb2\uff0c\u5f88\u663e\u7136\uff0c\u60f3\u8981\u6ee1\u8db3\u6bcf\u4e24\u4e2a\u70b9\u4e92\u76f8\u5230\u8fbe\u7684\u8981\u6c42\uff0c\u6bcf\u4e2a\u70b9\u90fd\u5fc5\u987b\u6709\u5b83\u6240\u5728\u7684\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u5176\u5b83\u7684\u70b9\u8fde\u8fc7\u6765\u7684\u8fb9\uff08\u5e9f\u8bdd\uff09\uff0c\u90a3\u4e48\uff0c\u6b64\u65f6\u5b83\u7684\u5165\u5ea6\u5df2\u7ecf\u4e3a\u4e00\u4e86\uff0c\u5c31\u4e0d\u4f1a\u518d\u6709\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4ee5\u5916\u7684\u70b9\u5411\u8fd9\u4e2a\u70b9\u8fde\u8fb9\u4e86  \n\u6240\u4ee5\uff0c\u53ea\u6709\u53ef\u80fd\u662f\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5411\u5916\u8fde\u8fb9\uff0c\u800c\u4e14\u662f\u8fde\u5230\u90a3\u79cd\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d  \n\n\u6b64\u65f6\u8981\u628a\u56fe\u7f29\u5b8c\u70b9\u7684\u60c5\u51b5\uff0c\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4f5c\u4e3a\u8282\u70b9\uff0c\u91cd\u65b0\u8fde\u8fb9  \n\u90a3\u4e48\u540c\u65f6\u6784\u5efa\u4e00\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u7531\u5b83\u5411\u6ca1\u6709\u5165\u5ea6\u7684\u5f3a\u8054\u901a\u5206\u91cf\u8fde\u8fb9\uff0c\u8fd9\u4e2a\u865a\u62df\u70b9\u7684 $v,w$ \u5747\u4e3a $0$  \n\u76f4\u63a5\u4ee5\u8fd9\u4e2a\u865a\u62df\u8282\u70b9\u4e3a\u6839\u505a\u6811\u4e0a\u80cc\u5305dp \u5c31\u884c\u4e86  \n\n---------------  \n\n\u7b80\u5355\u8bf4\u4e00\u4e0b\u6811\u4e0a\u80cc\u5305\u548b\u505a  \n$f_{u,i}$ \u8868\u793a\u5728 $u$ \u8fd9\u4e2a\u70b9\uff0c\u7528 $i$ \u7684\u786c\u76d8\u9650\u5236\uff0c\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c  \n\u521d\u59cb\u662f $f_{u,i}=v_u,i\\in [w_u,m]$  \n\u518d\u5206\u522b\u679a\u4e3e $j\\in [0,m-w_u]$ \u8868\u793a\u5bf9 **\u6240\u6709** \u5b50\u6811\u7684\u9650\u5236\uff0c$k\\in[0,k]$ \u8868\u793a\u5bf9 **\u5f53\u524d** \u5b50\u6811\u7684\u9650\u5236  \n\n$$f_{u,j+w_u}=\\max(f_{u,j+w_u},f_{v,k}+f_{u,j+w_u-k})$$  \n\n\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5c31\u5f88\u597d\u7406\u89e3\u4e86  \n\n\u53e6\u5916\u8fd9\u4e2a $0-w_u<0$ \u662f\u6709\u53ef\u80fd\u7684\uff0c\u7136\u540e\u6211\u7528 `~j` \u6765\u5224\u65ad\u5b83\u662f\u4e0d\u662f\u7b49\u4e8e $-1$ \u6765\u7ed3\u675f\u5faa\u73af\u8282\u7206\u70b8\u4e86  \n~~\u6211\u518d\u4e5f\u4e0d\u7528\u4f4d\u8fd0\u7b97\u4e86~~  \n\n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<map>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN std::puts(\"\")\n#define LL long long\ninline int read(){\n\tregister int x=0;register int y=1;\n\tregister char c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\n#define N 106\n#define M 506\nint fir[N],nex[N],to[N],tot;\nint fir_[N],nex_[N],to_[N],tot_;\nint dfn[N],low[N],dfscnt;\nint scc[N],scccnt,indeg[N],sum_w[N],sum_v[N];\nint stack[N],top;\nint val[N],w[N];\nint n,m;\nint f[N][M];\ninline void add(int u,int v){\n\tto[++tot]=v;\n\tnex[tot]=fir[u];fir[u]=tot;\n}\ninline void add_(int u,int v){\n\tto_[++tot_]=v;\n\tnex_[tot_]=fir_[u];fir_[u]=tot_;\n}\nvoid tarjan(int u){\n\tstack[top++]=u;low[u]=dfn[u]=++dfscnt;\n\tfor(reg int v,i=fir[u];i;i=nex[i]){\n\t\tv=to[i];\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v);\n\t\t\tlow[u]=std::min(low[u],low[v]);\n\t\t}\n\t\telse if(!scc[v]) low[u]=std::min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]==low[u]){\n\t\tscccnt++;\n\t\tdo{\n\t\t\tscc[stack[--top]]=scccnt;\n\t\t\tsum_w[scccnt]+=w[stack[top]];sum_v[scccnt]+=val[stack[top]];\n\t\t}while(stack[top]!=u);\n\t}\n}\ninline void rebuild(){\n\tfor(reg int i=1;i<=n;i++){\n\t\tfor(reg int j=fir[i];j;j=nex[j])if(scc[i]!=scc[to[j]])\n\t\t\tadd_(scc[i],scc[to[j]]),indeg[scc[to[j]]]=1;\n\t}\n\tfor(reg int i=1;i<=scccnt;i++)if(!indeg[i]) add_(scccnt+1,i);\n}\nvoid dfs(int u){\n\tfor(reg int i=sum_w[u];i<=m;i++) f[u][i]=sum_v[u];\n\treg int v,mm;\n\tfor(reg int i=fir_[u];i;i=nex_[i]){\n\t\tv=to_[i];mm=m-sum_w[u];\n\t\tdfs(v);\n\t\tfor(reg int j=mm;j>=0;j--){//j\u5bf9 \u6240\u6709 \u5b50\u6811\u7684\u9650\u5236 \n\t\t\tfor(reg int k=0;k<=j;k++)//k\u662f\u5bf9 \u5f53\u524d \u5b50\u6811\u7684\u9650\u5236 \n\t\t\t\tf[u][j+sum_w[u]]=std::max(f[u][j+sum_w[u]],f[v][k]+f[u][j+sum_w[u]-k]);\n\t\t}\n\t}\n}\nint main(){\n\tn=read();m=read();\n\tfor(reg int i=1;i<=n;i++) w[i]=read();\n\tfor(reg int i=1;i<=n;i++) val[i]=read();\n\tfor(reg int i=1,x;i<=n;i++){\n\t\tx=read();\n\t\tif(x) add(x,i);\n\t}\n\tfor(reg int i=1;i<=n;i++)if(!dfn[i]) tarjan(i);\n\trebuild();\n//\t\tEN;\n//\t\tfor(reg int i=1;i<=scccnt;i++) std::printf(\"%d : %d\t\",i,fir_[i]);EN;\n//\t\tstd::puts(\"new : \");\n//\t\tfor(reg int i=1;i<=scccnt;i++){\n//\t\t\tstd::printf(\"%d : \",i);\n//\t\t\tfor(reg int j=fir_[i];j;j=nex_[j]) std::printf(\"%d \",to_[j]);\n//\t\t\tEN;\n//\t\t}\n//\t\tfor(reg int i=1;i<=scccnt;i++) std::printf(\"%d %d\\n\",sum_v[i],sum_w[i]);\n\tdfs(scccnt+1);\n\tstd::printf(\"%d\",f[scccnt+1][m]);\n\treturn 0;\n}\n```",
        "postTime": 1587363576,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "[bzoj2427]P2515 [HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\uff08\u6811\u4e0a\u80cc\u5305\uff09"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f:\u7ed9\u4f60\u4e00\u4e2a$n$\u7269\u54c1,\u6ee1\u8db3\u4e00\u4e9b\u4f9d\u8d56\u5173\u7cfb,\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u91cd\u91cf,\u4ee5\u53ca\u4e00\u4e2a\u4ef7\u503c,\u6c42\u5728\u7ed9\u5b9a\u7684\u91cd\u91cf\u4e4b\u5185\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c.\n\n\u770b\u9898\u610f,\u5c31\u662f\u4e00\u4e2a\u80cc\u5305$dp$,\u518d\u52a0\u4e0a\u4f9d\u8d56\u5173\u7cfb,\u6240\u4ee5\u53ef\u4ee5\u77e5\u9053\u672c\u9898\u5e94\u8be5\u7528\u6811\u5f62\u80cc\u5305$dp$\u6765\u89e3\u51b3.\n\n\u4f46\u8fd9\u9053\u9898\u6709\u4e00\u4e9b\u4e0d\u540c,\u5c31\u662f\u5176\u7ed9\u7684\u4f9d\u8d56\u5173\u7cfb\u4e0d\u4e00\u5b9a\u6784\u6210\u4e00\u68f5\u68ee\u6797,\u800c\u53ef\u80fd\u662f\u4e00\u68f5\u57fa\u73af\u5916\u5411\u6811\u68ee\u6797.\n\n\u4f46\u5206\u6790\u9898\u610f\u53ef\u77e5,\u5bf9\u4e8e\u4e00\u4e2a\u73af\u4e0a\u7684\u6240\u6709\u70b9,\u8981\u4e48\u5168\u90e8\u9009,\u8981\u4e48\u5168\u4e0d\u9009,\u6240\u4ee5\u53ef\u4ee5\u5148\u8dd1\u4e00\u904d$Tarjan$\u7b97\u6cd5\u5c06\u4e00\u4e2a\u73af\u7f29\u6210\u4e00\u4e2a\u70b9\u6765\u5904\u7406,\u518d\u8dd1\u4e00\u904d\u6811\u5f62\u80cc\u5305dp\u5373\u53ef.\n\n\u65f6\u95f4\u590d\u6742\u5ea6:$O(NM^2)$,\u7ec6\u8282\u89c1\u4ee3\u7801\u6ce8\u91ca.\n\n``` cpp\n#include<map>\n#include<cstdio>\n#include<iostream>\n#define mp make_pair\nusing namespace std;\nconst int N=202;\nconst int M=505;\n\nmap<pair<int,int>,int>vi;\n\nint w[N],v[N],b[N],f[N][M];\n\nint n,m,dfn[N],low[N],cnt,cont;\n\nint sta[N],vis[N],dg[N],tot,wei[N],val[N];\n\nstruct edge{\n\tint tt,to[N],nex[N],head[N];\n\tinline void add(int x,int y){\n\t\tto[++tt]=y;\n\t\tnex[tt]=head[x];\n\t\thead[x]=tt;\n\t\treturn ;\n\t}\n}po,sc;\n\nvoid tarjan(int g){//tarjan\u8dd1\u5f3a\u8fde\u901a\u5206\u91cf;\n\tdfn[g]=low[g]=++tot;\n\tsta[++cont]=g;\n\tvis[g]=1;\n\tfor(int i=po.head[g],u;i;i=po.nex[i]){\n\t\tu=po.to[i];\n\t\tif(!dfn[u]){\n\t\t\ttarjan(u);\n\t\t\tlow[g]=min(low[u],low[g]);\n\t\t}\n\t\telse\n\t\t\tif(vis[u])\n\t\t\t\tlow[g]=min(low[g],dfn[u]);\n\t}\n\tif(dfn[g]==low[g]){\n\t\tint y;\n\t\t++cnt;\n\t\tdo{\n\t\t\ty=sta[cont--];\n\t\t\tw[cnt]+=wei[y];//\u5f97\u5230\u7f29\u70b9\u540e\u7684\u65b0\u70b9\u7684\u5360\u7528\u7a7a\u95f4\u548c\u4ef7\u503c;\n\t\t\tv[cnt]+=val[y];\n\t\t\tb[y]=cnt;\n\t\t\tvis[y]=0;\n\t\t}while(y!=g);\n\t}\n\treturn ;\n}\n\nvoid dfs(int g){\n\tfor(int i=sc.head[g],u;i;i=sc.nex[i]){\n\t\tu=sc.to[i];\n\t\tdfs(u);\n\t\tfor(int j=m;j>=0;--j)\n\t\t\tfor(int k=j;k>=0;--k)\n\t\t\t\tf[g][j]=max(f[g][j],f[g][j-k]+f[u][k]);//\u5c06\u5b50\u8282\u70b9\u4fe1\u606f\u4f20\u9012\u5230\u5f53\u524d\u70b9;\n\t}\n\tfor(int i=m;i>=w[g];--i)\n\t\tf[g][i]=f[g][i-w[g]]+v[g];//\u53ea\u6709\u5f53\u524d\u70b9\u9009,\u624d\u80fd\u83b7\u5f97\u8fd9\u68f5\u5b50\u6811\u7684\u6743\u503c;\n\tfor(int i=w[g]-1;i>=0;--i)\n\t\tf[g][i]=0;//\u5bf9\u4e8e\u65e0\u6cd5\u9009\u7684\u90e8\u5206\u8981\u6e05\u7a7a;\n\treturn ;\n}\n\nint main(){\n\t\n\tcin>>n>>m;\n\t\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>wei[i];\n\t\n\tfor(int i=1;i<=n;++i)\n\t\tcin>>val[i];\n\t\n\tint x;\n\t\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>x;\n\t\tif(x)\n\t\t\tpo.add(x,i);\n\t}\n\t\n\tfor(int i=1;i<=n;++i)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\t\n\tfor(int i=1;i<=n;++i){//\u7f29\u70b9;\n\t\tfor(int j=po.head[i],u;j;j=po.nex[j]){\n\t\t\tu=po.to[j];\n\t\t\tif(b[u]!=b[i]&&!vi[mp(b[i],b[u])]){//\u5176\u5b9e\u5bf9\u4e8e\u6b64\u9898,\u5e76\u4e0d\u9700\u8981\u5224\u91cd\u8fb9;\n\t\t\t\tsc.add(b[i],b[u]);\n\t\t\t\t++dg[b[u]];\n\t\t\t\tvi[mp(b[i],b[u])]=1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i=1;i<=cnt;++i)\n\t\tif(!dg[i])//\u5c06\u68ee\u6797\u8fde\u6210\u4e00\u68f5\u6811;\n\t\t\tsc.add(0,i);\n\t\n\tdfs(0);\n\t\n\tint ans=0;\n\t\n\tfor(int i=0;i<=m;++i)\n\t\tans=max(ans,f[0][i]);\n\t\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1572608405,
        "uid": 124890,
        "name": "bugaile",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u597d\u50cf\u90fd\u6ca1\u6709\u8bf4\u660e\u7f29\u70b9\u540e\u91cd\u5efa\u51fa\u6765\u7684\u56fe\u4e00\u5b9a\u662f\u4e00\u9897\u6811qwq\uff0c\u6211\u6765\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u56fe\u662f\u6709\u5411\u56fe\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u5165\u5ea6\u90fd\u4e3a1\u7684\u8bdd\uff0c\u90a3\u4e48\u6700\u7ec8\u5f62\u6210\u7684\u56fe\u4e00\u5b9a\u662f\u4e00\u4e2a\u5916\u5411\u57fa\u73af\u6811\u68ee\u6797\u3002\n\n\u611f\u6027\u8bc1\u660e\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8fb9\u6570\u6bd4\u70b9\u6570\u591a\uff0c\u6700\u540e\u4e00\u5b9a\u6709\u4e00\u4e2a\u73af\uff08\u53ef\u80fd\u662f\u81ea\u73af\uff09\uff0c\u800c\u8fd9\u4e2a\u73af\u4e0a\u7684\u70b9\u90fd\u4e0d\u53ef\u80fd\u88ab\u5176\u4ed6\u7684\u70b9\u8fde\uff08\u56e0\u4e3a\u5165\u5ea6\u5df2\u7ecf\u6ee1\u4e86\uff09\uff0c\u6240\u4ee5\u5fc5\u7136\u662f\u8fd9\u4e2a\u73af\u4e0a\u7684\u70b9\u8fde\u5176\u4ed6\u7684\u70b9\uff08\u6216\u8005\u90fd\u4e0d\u8fde\uff0c\u5355\u72ec\u4e00\u4e2a\u73af\u7b97\u9000\u5316\u7684\u57fa\u73af\u6811\uff09\uff0c\u88ab\u8fde\u7684\u5176\u4ed6\u7684\u70b9\u4e5f\u5fc5\u7136\u4e0d\u80fd\u88ab\u5176\u4ed6\u7684\u70b9\u8fde\uff08\u540c\u6837\uff0c\u5165\u5ea6\u4e5f\u6ee1\u4e86\uff09\uff0c\u6240\u4ee5\u5fc5\u987b\u7ee7\u7eed\u8fde\u5176\u4ed6\u7684\u6216\u8005\u4e0d\u8fde\u3002\u6240\u4ee5\uff0c\u6700\u7ec8\u5f62\u6210\u7684\u56fe\u5fc5\u7136\u662f\u4e00\u9897\u5916\u5411\u7684\u57fa\u73af\u6811\u3002\n\n\u4f46\u662f\u8fd9\u4e00\u9898\u7684`0`\u70b9\u6ca1\u6709\u5165\u5ea6\uff08\u56e0\u4e3a0\u4e0d\u4f9d\u8d56\u4efb\u4f55\u8f6f\u4ef6\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u7ed9`0`\u968f\u673a\u9009\u62e9\u4e00\u6761\u8fb9\u8fde\u4e0a\u53bb\uff0c\u5f62\u6210\u4e00\u4e2a\u5916\u5411\u57fa\u73af\u6811\u68ee\u6797\uff0c\u7136\u540e\u5206\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1. `0`\u5728\u67d0\u9897\u57fa\u73af\u6811\u7684\u73af\u4e0a\u9762\uff0c\u5c06\u8fb9\u62c6\u6389\uff0c\u57fa\u73af\u6811\u7684\u73af\u7684\u5269\u4f59\u90e8\u5206\u53ef\u4ee5\u4f5c\u4e3a\u6811\u4e0a\u7684\u4e00\u6761\u94fe\uff0c\u5c31\u6210\u4e3a\u4e86\u4ee5`0`\u4e3a\u6839\u7684\u4e00\u9897\u5916\u5411\u6811\uff0c\u7279\u522b\u7684\uff0c\u81ea\u73af\u4e5f\u7b97\uff08\u94fe\u7684\u957f\u5ea6\u4e3a`0`\uff09\n2. `0`\u5728\u67d0\u9897\u57fa\u73af\u6811\u91cc\u9762\uff0c\u5c06\u8fb9\u62c6\u6389\uff0c`0`\u53ca\u5176\u5b50\u6811\u90e8\u5206\u5355\u72ec\u5f62\u6210\u4e00\u9897\u5916\u5411\u6811\u3002\n\n\u6240\u4ee5\uff0c\u7f29\u70b9\u524d\u7684\u56fe\u5fc5\u7136\u662f\u4e00\u9897\u4ee5`0`\u4e3a\u6839\u7684\u5916\u5411\u6811\u4e0e\u82e5\u5e72\u5916\u5411\u57fa\u73af\u6811\u7ec4\u6210\u7684\u68ee\u6797\u3002\uff08\u51e0\u4e4e\u5565\u90fd\u53ef\u4ee5\u9000\u5316\uff0c\u6bd4\u5982\u4ee5`0`\u4e3a\u6839\u7684\u5916\u5411\u6811\u9000\u5316\u6210\u5355\u70b9\u4e4b\u7c7b\u7684\uff09\n\n\u7f29\u70b9\u540e\uff0c\u6240\u6709\u73af\u90fd\u88ab\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u4e8e\u662f\u5f62\u6210\u4e86\u4e00\u4e2a\u5916\u5411\u6811\u68ee\u6797\u3002\u7136\u540e\u5c06\u6240\u6709\u9664`0`\u4e4b\u5916\u7684\u6839\u8282\u70b9\u8fde\u5230`0`\u4e0a\uff0c\u5c31\u5f62\u6210\u4e86\u4e00\u9897\u5927\u5916\u5411\u6811\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u6811\u5f62`DP`\u4e86\u3002\n\n\u987a\u4fbf\u4e00\u63d0\uff0c\u8fd9\u6837\u6211\u4eec\u8fd8\u53ef\u4ee5\u5bfc\u51fa\u4e00\u4e2a\u9a9a\u64cd\u4f5c\uff0c\u5c31\u662f\u4e0d\u8bb0\u5f55\u5ea6\u6570\uff0c\u76f4\u63a5\u6309\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\u51b3\u5b9a\u662f\u5426\u8fde`0`\uff0c\u53ef\u4ee5\u5f97\u5230\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u70b9\u6570`>1`\u7684\u5165\u5ea6\u4e00\u5b9a\u4e3a`0`\uff08\u53cd\u4e4b\u4ea6\u7136\uff0c\u4e0d\u8fc7\u6ca1\u5565\u7528\n\n\u9644AC\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\nusing namespace std;\n\nvoid chkmax(int& a,int b)\n{\n\tif(b>a)\n\t{\n\t\ta = b;\n\t}\n}\n\nvoid chkmin(int& a,int b)\n{\n\tif(a>b)\n\t{\n\t\ta = b;\n\t}\n}\n\nint beg[105];\nint cbeg[105];\nint ed[205];\nint nxt[205];\nint top;\n\nvoid addedge(int* beg,int a,int b)\n{\n\t++top;\n\ted[top] = b;\n\tnxt[top] = beg[a];\n\tbeg[a] = top;\n}\n\nint dfn[105];\nint low[105];\nint stk[105];\nint ins[105];\nint ci[105];\nint dfntop;\nint stktop;\nint ctop;\n\nvoid tarjan(int x)\n{\n\t++dfntop;\n\t++stktop;\n\tins[x] = 1;\n\tstk[stktop] = x;\n\tlow[x] = dfn[x] = dfntop;\n\n\tfor(int p=beg[x]; p; p=nxt[p])\n\t{\n\t\tif(!dfn[ed[p]])\n\t\t{\n\t\t\ttarjan(ed[p]);\n\t\t\tchkmin(low[x],low[ed[p]]);\n\t\t}\n\t\telse if(ins[ed[p]])\n\t\t{\n\t\t\tchkmin(low[x], low[ed[p]]);\n\t\t}\n\t}\n\n\tif(low[x] == dfn[x])\n\t{\n\t\t++ctop;\n\t\twhile(stk[stktop] != x)\n\t\t{\n\t\t\tci[stk[stktop]] = ctop;\n\t\t\tins[stk[stktop]] = 0;\n\t\t\t--stktop;\n\t\t}\n\t\tci[x] = ctop;\n\t\tins[x] = 0;\n\t\t--stktop;\n\t}\n}\n\nint wi[105];\nint vi[105];\n\nint m;\nint dp[105][505];\n\nint cwi[105];\nint cvi[105];\nint cinum[105];\n\nint tmp[505];\n\nvoid tdp(int x)\n{\n\tif(cwi[x]>m)\n\t\treturn;\n\n\tfor(int p=cbeg[x]; p; p=nxt[p])\n\t{\n\t\ttdp(ed[p]);\n\t}\n\n\tfor(int j=0; j<=m; ++j)\n\t{\n\t\ttmp[j] = 0;\n\t}\n\n\tfor(int p=cbeg[x]; p; p=nxt[p])\n\t{\n\t\tfor(int j=0; j<=m; ++j)\n\t\t{\n\t\t\tfor(int k=0; k+j<=m; ++k)\n\t\t\t{\n\t\t\t\tchkmax(dp[x][j+k], tmp[j]+dp[ed[p]][k]);\n\t\t\t}\n\t\t}\n\t\tfor(int i=0; i<=m; ++i)\n\t\t{\n\t\t\ttmp[i] = dp[x][i];\n\t\t}\n\t}\n\n\tfor(int i=m; i>=cwi[x]; --i)\n\t{\n\t\tdp[x][i] = dp[x][i-cwi[x]]+cvi[x];\n\t}\n\tfor(int i=cwi[x]-1; i>=0; --i)\n\t{\n\t\tdp[x][i] = 0;\n\t}\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tscanf(\"%d\",wi+i);\n\t}\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tscanf(\"%d\",vi+i);\n\t}\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\taddedge(beg,x,i);\n\t}\n\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tif(!dfn[i])\n\t\t{\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tcwi[ci[i]] += wi[i];\n\t\tcvi[ci[i]] += vi[i];\n\t\t++cinum[ci[i]];\n\n\t\tfor(int p=beg[i]; p; p=nxt[p])\n\t\t{\n\t\t\tif(ci[ed[p]] != ci[i])\n\t\t\t{\n\t\t\t\taddedge(cbeg,ci[i],ci[ed[p]]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1; i<=ctop; ++i)\n\t{\n\t\tif(cinum[i] > 1)\n\t\t{\n\t\t\taddedge(cbeg,0,i);\n\t\t}\n\t}\n\tfor(int p=beg[0]; p; p=nxt[p])\n\t{\n\t\taddedge(cbeg,0,ci[ed[p]]);\n\t}\n\n\ttdp(0);\n\n\tprintf(\"%d\\n\",dp[0][m]);\n}\n```",
        "postTime": 1572494274,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u9898\u76ee\u4e2d\u9650\u5236\u4e86\u6bcf\u4e2a\u6587\u4ef6\u6700\u591a\u4f9d\u8d56\u4e00\u4e2a\u6587\u4ef6\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bc1\u660e\uff08\u8fd9\u4e2a\u4e1c\u897f\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be,\u563f\u563f\uff09\uff1a\u4ece\u6bcf\u4e2a\u6587\u4ef6\u7684D[i]\u5411i\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u8981\u4e48\u5f62\u6210\u4e00\u4e2a\u5708\uff0c\u8981\u4e48\u5f62\u6210\u4e00\u4e2a\u6811\u3002\uff08\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u6211\u4eec\u91cd\u5efa\u56fe\u7684\u65f6\u5019\u5c11\u4e00\u4e9b\u8003\u8651\u60c5\u51b5\uff09\uff0c\u8fd9\u6837\u9996\u5148tarjan\u7f29\u70b9\uff0c\u6240\u6709\u7684\u5708\u90fd\u53d8\u6210\u4e00\u4e2a\u70b9\uff0c\u800c\u6811\u6ca1\u6709\u53d8\u3002\u4ece0\u70b9\u5411\u6bcf\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\u5efa\u4e00\u6761\u6709\u5411\u8fb9\u4e4b\u540e\u5c31\u662f\u4e00\u4e2a\u5f88\u5178\u578b\u7684\u6811\u5f62\u80cc\u5305\u95ee\u9898\uff08\u5982\u679c\u4e0d\u4f1a\u6811\u5f62\u80cc\u5305\u8bf7\u79fb\u6b65\uff0c\u5f53\u7136\u6211\u7684\u535a\u5ba2\u91cc\u4e5f\u6709\u6811\u5f62\u80cc\u5305\u7684\u5f88\u7b80\u77ed\u7684\u89e3\u91ca\uff09\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=110;\nbool ins[N];\nint st[N],dfn[N],low[N],bl[N];\nint w[N],val[N];\nint v1[N],v2[N];\nint ver[2*N],hea[N],nex[2*N];\nint n,m,num,tot,top,cnt,ans;\nint dp[N][1010];\nint size[N],du[N];\nint x[N],p[N];\n\ninline void clear(){\n\tmemset(hea,0,sizeof(hea));\n\ttot=0;\n}\n\ninline void add(int x,int y){\n\tver[++tot]=y;nex[tot]=hea[x];hea[x]=tot;\n}\n\ninline void tr(int x){\n\tdfn[x]=low[x]=++cnt;\n\tst[++top]=x;ins[x]=1;\n\tfor(int i=hea[x];i;i=nex[i]){\n\t\tint y=ver[i];\n\t\tif(!dfn[y]){\n\t\t\ttr(y);\n\t\t\tlow[x]=min(low[y],low[x]);\n\t\t}\n\t\telse if(ins[y])low[x]=min(low[x],low[y]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tnum++;\n\t\twhile(st[top+1]!=x){\n\t\t\tint y=st[top--];\n\t\t\tins[y]=0;bl[y]=num;\n\t\t\tv2[num]+=v1[y];val[num]+=w[y];\n\t\t}\n\t}\n}\n\ninline void tp(int x){\n\tfor(int i=hea[x];i;i=nex[i]){\n\t\tint y=ver[i];\n\t\tadd(x,y);tp(y);\n\t}\n}\n\ninline void dfs(int x){\n\tsize[x]=p[x]=val[x];dp[x][val[x]]=v2[x];dp[x][0]=0;\n\tfor(int i=hea[x];i;i=nex[i]){\n\t\tint y=ver[i];\n\t\tdfs(y);\n\t\tfor(int j=min(size[x],m);j>=p[x];j--){\n\t\t\tfor(int k=0;k<=size[y]&&j+k<=m;k++){\n\t\t\t\tdp[x][j+k]=max(dp[x][j]+dp[y][k],dp[x][j+k]);\n\t\t\t}\n\t\t}\n\t\tsize[x]+=size[y];\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){scanf(\"%d\",&w[i]);}\n\tfor(int i=1;i<=n;i++){scanf(\"%d\",&v1[i]);}\n\tfor(int i=1;i<=n;i++){\n\t\tint xx;scanf(\"%d\",&xx);\n\t\tif(xx==0)continue;\n\t\tadd(xx,i);x[i]=xx;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!dfn[i])tr(i);\n\t}\n\tclear();\n\tfor(int i=1;i<=n;i++){\n\t\tif(x[i]==0)continue;\n\t\tint fx=bl[x[i]],fy=bl[i];\n\t\tif(fx==fy)continue;\n\t\telse {\n\t\t\tadd(fx,fy);\n\t\t\tdu[fy]++;\n\t\t}\n\t}\n\tfor(int i=1;i<=num;i++){\n\t\tif(du[i]==0){\n\t\t\tadd(0,i);\n\t\t}\n\t}\n\tmemset(dp,0xcf,sizeof(dp));\n\tdfs(0);\n\tfor(int i=0;i<=min(m,size[0]);i++){\n\t\tans=max(ans,dp[0][i]);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1571705504,
        "uid": 169137,
        "name": "k\uff0c\u706b\u9b42",
        "ccfLevel": 0,
        "title": "P2515 [HAOI2010]\u8f6f\u4ef6\u5b89\u88c5"
    },
    {
        "content": "\u975e\u5e38\u597d\u7684\u4e00\u9053\u9898\uff0c\u53ef\u4ee5\u8bf4\u662f\u6811\u5f62dp\u7684\u4e00\u9053\u57fa\u7840\u9898\n\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\uff0c\uff1a\u5982\u679c\u6211\u4eec\u628a\u6709\u5173\u7cfb\u7684\u4e24\u4e2a\u70b9\u7528\u6709\u5411\u8fb9\u76f8\u8fde\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u63a5\u8fd1\u6811\u7684\u7ed3\u6784\u3002\u5982\u679c\u8fd9\u662f\u4e00\u68f5\u5b8c\u7f8e\u7684\u6811\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u6811\u4e0a\u6253\u80cc\u5305\u4e86\n\n\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u4e00\u68f5\u5b8c\u7f8e\u7684\u6811\uff0c\u751a\u81f3\u5e76\u4e0d\u662f\u4e00\u68f5\u6811\uff0c\u56e0\u4e3a\uff1a\n\n\u9996\u5148\uff0c\u7531\u4e8e\u9898\u4e2d\u6709n\u4e2a\u70b9\uff0c\u8fd8\u6709n\u6761\u8fb9\uff0c\u6240\u4ee5\u6709\u5f88\u5927\u7684\u51e0\u7387\u51fa\u73b0\u73af\uff01\n\n\u800c\u4e14\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u73af\uff0c\u90a3\u4e48\u5f88\u6709\u53ef\u80fd\u6574\u4e2a\u56fe\u5e76\u4e0d\u8fde\u901a\uff0c\u8fd9\u6837\u4e00\u6765\u6839\u672c\u65e0\u6cd5\u8dd1dp\n\n\u6240\u4ee5\u6211\u4eec\u8981\u91c7\u53d6\u4e00\u4e9b\u7b56\u7565\uff1a\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u51fa\u73b0\u73af\u7684\u60c5\u51b5\uff0c\u6839\u636e\u9898\u610f\uff0c\u6b64\u65f6\u73af\u4e2d\u7684\u6240\u6709\u70b9\u8981\u4e48\u90fd\u9009\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8fdb\u884ctarjan\u7f29\u70b9\uff0c\u7136\u540e\u5728\u65b0\u56fe\u4e0a\u8fdb\u884cdp\n\n\u81f3\u4e8e\u6574\u4e2a\u56fe\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u865a\u62df\u4e00\u4e2a\u8d85\u7ea7\u539f\u70b9\u5411\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f62\u6210\u4e00\u68f5\u771f\u6b63\u7684\u6811\uff0c\u8fd9\u6837\u8dd1\u6811\u5f62dp\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\nusing namespace std;\nstruct Edge\n{\n    int next;\n    int to;\n}edge[105],e[105];\nint head[105];\nint h[105];\nint cot=1;\nint cnt=1;\nvoid init()\n{\n    memset(head,-1,sizeof(head));\n    memset(h,-1,sizeof(h));\n    cnt=1;\n    cot=1;\n}\nvoid adde(int l,int r)\n{\n    e[cot].next=h[l];\n    e[cot].to=r;\n    h[l]=cot++;\n}\nvoid add(int l,int r)\n{\n    edge[cnt].next=head[l];\n    edge[cnt].to=r;\n    head[l]=cnt++;\n}\nint n,m;\nint w[105];\nint v[105];\nint nv[105];\nint nw[105];\nint posi[105];\nint src_cnt=0;\nint src_num[105];\nint my_stack[105];\nint dfn[105];\nint low[105];\nint dp[105][505];\nint tot=0;\nint ttop=0;\nbool used[105];\nint s[105];\nvoid tarjan(int rt)\n{\n    my_stack[++ttop]=rt;\n    dfn[rt]=low[rt]=++tot;\n    for(int i=head[rt];i!=-1;i=edge[i].next)\n    {\n        int to=edge[i].to;\n        if(!dfn[to])\n        {\n            tarjan(to);\n            low[rt]=min(low[rt],low[to]);\n        }else if(!posi[to])\n        {\n            low[rt]=min(low[rt],dfn[to]);\n        }\n    }\n    if(dfn[rt]==low[rt])\n    {\n        int t=0;\n        src_cnt++;\n        while(t!=rt)\n        {\n            t=my_stack[ttop--];\n            posi[t]=src_cnt;\n            src_num[src_cnt]++;\n            nv[src_cnt]+=v[t];\n            nw[src_cnt]+=w[t];\n        }\n    }\n}\nvoid dfs(int x)\n{\n    s[x]=nw[x];\n    dp[x][nw[x]]=nv[x];\n    for(int i=h[x];i!=-1;i=e[i].next)\n    {\n        int to=e[i].to;\n        dfs(to);\n        for(int j=s[x];j>=nw[x];j--)\n        {\n            for(int k=0;k<=s[to];k++)\n            {\n                if(j+k>m)\n                {\n                    break;\n                }\n                dp[x][j+k]=max(dp[x][j+k],dp[x][j]+dp[to][k]);\n            }\n        }\n        s[x]+=s[to];\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    init();\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&w[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&v[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int f;\n        scanf(\"%d\",&f);\n        if(f)\n        {\n            add(f,i);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!dfn[i])\n        {\n            tarjan(i);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=head[i];j!=-1;j=edge[j].next)\n        {\n            int to=edge[j].to;\n            if(posi[to]!=posi[i])\n            {\n                adde(posi[i],posi[to]);\n                used[posi[to]]=1;\t\n            }\n        }\n    }\n    for(int i=1;i<=src_cnt;i++)\n    {\n        if(!used[i])\n        {\n            adde(0,i);\n        }\n    }\n    dfs(0);\n    int ans=0;\n    for(int i=0;i<=m;i++)\n    {\n        ans=max(ans,dp[0][i]);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1555835778,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "#### OOP\nemm\u2026\u2026\u5b9e\u9645\u4e0a\u8fd9\u79cd\u6811\u5f62dp(\u80cc\u5305)\u7684\u9898\u76ee\u90fd\u6bd4\u8f83\u5957\u8def.\n\n\u4f46\u662f\u5199\u4e00\u4e2a\u7f29\u70b9\u91cd\u6784\u56fe\u5728\u52a0\u4e0a\u4e00\u4e2a\u6811\u5f62dp, \u5404\u79cd\u53d8\u91cf\u641e\u7684\u6211\u5934\u90fd\u5927\u4e86, \u4ee5\u524d\u7ecf\u5e38\u6709\u8c03\u5404\u79cd\u5199\u9519\u7684\u53d8\u91cf\u540d\u5f88\u957f\u65f6\u95f4\u7684\u7ecf\u5386.\n(\u4ee5\u524d\u90fd\u7528`namespace`.\n\n\u4e8e\u662f, \u6211\u5199\u4e86\u4e00\u4e2a**\u5047\u7684**OOP\uff08\u9762\u5411\u5bf9\u8c61\uff09, \u5f3a\u884c\u5c01\u88c5.\n- \u8fd9\u4e2a\u5bf9\u8c61\u548c**\u7ee7\u627f**\u53ef\u80fd\u4e0d\u662f\u5f88\u597d\u7406\u89e3, \u53ef\u4ee5baidu\u4e00\u4e0b\u770b\u770b.\n- \u6ca1\u5199\u865a\u51fd\u6570, \u56e0\u4e3a\u4e0d\u662f\u592a\u4f1a\u800c\u4e14\u6ca1\u5fc5\u8981.\n- \u4e2d\u95f4\u8fd8\u6d89\u53ca\u5230\u4e00\u4e9b\u4f8b\u5982\u7c7b\u6307\u9488,\u5206\u914d\u7a7a\u95f4\u7684\u4e8b\u60c5.\n\n\u8fd9\u4e2a\u4e1c\u897f\u7684\u7f3a\u70b9\u6bd4\u8f83\u663e\u7136\u5c31\u662f**\u6548\u7387\u6bd4\u8f83\u5dee**.\n\n(~~**\u6211\u7684\u4ee3\u7801\u5438\u6536\u4e86OOP\u7684\u7f3a\u70b9\u5e76\u629b\u5f03\u4e86\u5b83\u7684\u4f18\u70b9**~~)\n\n1. \u5199\u4e86\u4e00\u4e2a\u7c7b`Graph`, \u6709\u56fe\u7684\u5404\u79cd\u53d8\u91cf\u548c\u52a0\u8fb9\u51fd\u6570\u548c\u6253\u5370\u56fe\u7684\u51fd\u6570.\n2. \u5199\u4e86\u4e00\u4e2a\u7c7b`Graph1`\u4ece`Graph`\u7ee7\u627f\u8fc7\u6765, \u8d1f\u8d23\u7f29\u70b9\u91cd\u6784\u56fe.\n3. \u5199\u4e86\u4e00\u4e2a\u7c7b`Tree1`\u4ece`Graph`\u7ee7\u627f\u8fc7\u6765, \u8d1f\u8d23\u505a\u6811\u5f62dp(\u80cc\u5305)\u7684\u6d3b.\n\n#### Solution\n\u6211\u4eec\u53d1\u73b0\u6240\u6709\u7684\u4f9d\u8d56\u5173\u7cfb\u6784\u6210\u4e00\u5f20\u56fe, \u5176\u4e2d$u$\u5230$v$\u7684\u8fb9\u610f\u5473\u7740\u5b89\u88c5$v$\u4ee3\u8868\u7684\u8f6f\u4ef6\u5fc5\u987b\u5b89\u88c5$u$.\n\n\u4f46\u662f\u6ce8\u610f\u53ef\u80fd\u6709\u4e5f\u5c31\u662f\u5b89\u88c5$u$\u5fc5\u987b\u5b89\u88c5$v$\u540c\u65f6\u5b89\u88c5$v$\u5fc5\u987b\u5b89\u88c5$u$\u7684\u60c5\u51b5\u2026\u2026\n\n\u6269\u5c55\u4e00\u4e0b, \u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u79cd\u66f4\u795e\u5947\u7684\u60c5\u51b5, \u4f8b\u5982$u\\rightarrow v,v\\rightarrow w,\\cdots,p\\rightarrow u$.\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6784\u6210\u4e86\u4e00\u4e2a\u73af, \u8fd9\u79cd\u60c5\u51b5\u5c31\u9700\u8981\u73af\u4e0a\u7684\u8f6f\u4ef6\u5168\u90e8\u5b89\u88c5.\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u56fe**\u7f29\u70b9\u91cd\u6784**\u8fd9\u6837\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a$DAG$\uff08\u65e0\u6839\u6811\uff09, \u7136\u540e\u5c06\u6240\u6709\u5355\u72ec\u7684\u8054\u901a\u5757\u7684**\u6839**(\u5165\u5ea6\u4e3a0\u7684\u70b9)\u8fde\u5230\u4e00\u4e2a0\u4e0a.\u8fd9\u6837\u5c31\u53ef\u4ee5\u5229\u7528\u6811\u5f62dp\u53bb\u89e3\u51b3\u4e86.\n\n\u7c7b\u4f3c\u7684\u6811\u5f62dp\u8fd8\u6709[https://www.luogu.org/problemnew/show/P2014](\u9009\u8bfe)\n#### Code\n\u4ee3\u7801\u5199\u7684\u5f88\u4e11\u8bf7\u89c1\u8c05\n```c++\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define N 105\n#define M 505\nusing std::min;\nusing std::max;\nusing std::fill;\n\nvoid* operator new(size_t sz){\n    return (void*)malloc(sz);\n}\nstruct Edge{int v,nxt;};\nclass Graph{\n    public:\n    Edge e[M<<2];\n    int n,head[N],tot;\n    void AddEdge(int a,int b){\n        e[++tot]=(Edge){b,head[a]},head[a]=tot;\n    }\n    void print(){\n        printf(\"This a Graph\\n\");\n        printf(\"The number of Point: %d\\n\",n);\n        for(int i=1;i<=n;++i){\n            printf(\"%d: \",i);\n            for(int j=head[i];j;j=e[j].nxt)\n                printf(\"%d \",e[j].v);\n            printf(\"\\n\");\n        }\n        printf(\"\\n\");\n    }\n};\nclass Tree1:public Graph{\n    public:\n    int val[N],v[N];\n    Tree1(int _n=0){\n        n=_n,tot=0;\n        fill(head,head+N,0);\n        fill(v,v+N,0);\n        fill(val,val+N,0);\n    }\n    void GetSon(int x);\n    int BagProOnTheTree1();\n}t;\nclass Graph1:public Graph{\n    public:\n    Graph1(int _n){\n        n=_n,tot=col_=tim=top=0;\n        fill(head,head+N,0);\n        fill(dfn,dfn+N,0);\n    }\n    int dfn[N],low[N],tim;\n    int vis[N],top,que[N];\n    int col[N],col_;\n    void Tarjan(int x){\n        dfn[x]=low[x]=++tim,\n        que[++top]=x,vis[x]=true;\n        for(int i=head[x];i;i=e[i].nxt){\n            if(!dfn[e[i].v])\n                Tarjan(e[i].v),low[x]=min(low[x],low[e[i].v]);\n            else if(vis[e[i].v])\n                low[x]=min(low[x],dfn[e[i].v]);\n        }\n        if(dfn[x]==low[x]){\n            col[x]=++col_,vis[x]=false;\n            while(que[top]!=x)\n                vis[que[top]]=false,col[que[top--]]=col_;\n            --top;\n        }\n    }\n    Tree1* NewGraph();\n};\nint val[N],v[N],du[N];\nTree1* Graph1::NewGraph(){\n    for(int i=1;i<=n;++i)\n        if(!dfn[i])\n            Tarjan(i);\n    Tree1* o=new Tree1;\n    o->n=col_;\n    for(int i=1;i<=n;++i)\n        o->v[col[i]]+=v[i],\n        o->val[col[i]]+=val[i];\n    for(int i=1;i<=n;++i)\n        for(int j=head[i];j;j=e[j].nxt)\n            if(col[i]!=col[e[j].v])\n                o->AddEdge(col[i],col[e[j].v]),++du[col[e[j].v]];\n    for(int i=1;i<=col_;++i)\n        if(!du[i])\n            o->AddEdge(0,i);\n    return o;\n}\nint m;\nint f[N][M];\nvoid Tree1::GetSon(int x){\n    for(int i=v[x];i<=m;++i)f[x][i]=val[x];\n    for(int i=head[x];i;i=e[i].nxt){\n        GetSon(e[i].v);\n        for(int j=m-v[x];j>-1;--j)\n            for(int l=0;l<=j;++l)\n                f[x][j+v[x]]=max(f[x][j+v[x]],\n                f[x][j+v[x]-l]+f[e[i].v][l]);\n    }\n}\nint Tree1::BagProOnTheTree1(){\n    int ans=0;\n    GetSon(0);\n    for(int i=1;i<=m;++i)\n        ans=max(f[0][m],ans);\n    return ans;\n}\nint main(){\n    int n,t;\n    scanf(\"%d%d\",&n,&m);\n    Graph1 G=Graph1(n);\n    for(int i=1;i<=n;++i)\n        scanf(\"%d\",&v[i]);\n    for(int i=1;i<=n;++i)\n        scanf(\"%d\",&val[i]);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&t);\n        G.AddEdge(t,i);\n    }\n    Tree1* T=G.NewGraph();\n    printf(\"%d\",T->BagProOnTheTree1());\n    return 0;\n}\n```",
        "postTime": 1530873048,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "##Tarjan+\u6811\u5f62DP\n\n\n[[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5](https://www.luogu.org/problem/show?pid=2515)\n\n\u6839\u636e\u9898\u610f\uff0c\u5982\u679c\u4f9d\u8d56\u5173\u7cfb\u6784\u6210\u4e00\u4e2a\u73af\uff0c\u90a3\u53ea\u6709\u73af\u91cc\u6240\u6709\u8f6f\u4ef6\u90fd\u5b89\u88c5\u624d\u80fd\u4f7f\u5176\u4ef7\u503c\u4e0d\u4e3a0\uff1b\n\n    \n\u5728\u5165\u5ea6\u4e3a0\u7684\u70b9\u4e4b\u4e0a\u52a0\u4e00\u4e2a\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e00\u4e0bDP\u5b8c\n\n\n\u7136\u540e\u7528\u6811\u72b6DP\u89e3\u51b3\uff0c\u6ce8\u610f\u5230\u5982\u679c\u4e0b\u9762\u7684\u70b9\u7684\u5360\u7528\u7a7a\u95f4\u8d85\u8fc7m\uff0c\u5176\u4ef7\u503c\u5728DP\u6570\u7ec4\u4e2d\u76f4\u63a5\u5316\u4e3a0\uff1b\u5176\u5b9e\u662f\u4e00\u4e2a\u6811\u4e0a\u768401\u80cc\u5305\n\n\n----\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>\nusing namespace std;\n\nstack<int> s;\nint n,m,weight[200],value[200];\nbool indegree[600];\nint LOW[600],DFN[600],steps,total;\nbool instack[600];\nint dp[200][600];\n\nstruct E{\n    int next,to,from;\n}edge[600],newedge[600];\nint head[600],nhead[600],edge_num,newedge_num;\nstruct S{\n    int w,v;\n}scc[600];\nint belong[600];\n\nvoid addedge(int x,int y,int z){\n    if(z==1){\n        edge[++edge_num].next=head[x];\n        edge[edge_num].to=y;\n        edge[edge_num].from=x;\n        head[x]=edge_num;\n    }\n    if(z==2){\n        newedge[++newedge_num].next=nhead[x];\n        newedge[newedge_num].to=y;\n        newedge[newedge_num].from=x;\n        nhead[x]=newedge_num;\n    }\n}\n\nvoid Tarjan(int x){\n    int i;\n    s.push(x);instack[x]=true;\n    DFN[x]=LOW[x]=++steps;\n    for(i=head[x];i;i=edge[i].next){\n        if(!DFN[edge[i].to]){\n            Tarjan(edge[i].to);\n            LOW[x]=min(LOW[x],LOW[edge[i].to]);\n        }\n        if(instack[edge[i].to])\n            LOW[x]=min(LOW[x],DFN[edge[i].to]);\n    }\n    if(LOW[x]==DFN[x]){\n        int t;\n        total++;\n        do{\n            t=s.top();s.pop();\n            instack[t]=false;\n            belong[t]=total;\n            scc[total].v+=value[t];\n            scc[total].w+=weight[t];\n        }\n        while(t!=x);\n    }\n}\n\nvoid Newmap(){\n    int i,j;\n    for(i=1;i<=n;i++){\n        for(j=head[i];j;j=edge[j].next){\n            if(belong[i]!=belong[edge[j].to]){\n                indegree[belong[edge[j].to]]=true;\n                addedge(belong[i],belong[edge[j].to],2);\n            }\n        }\n    }\n//    for(i=1;i<=edge_num;i++){\n//        if(belong[edge[i].from]!=belong[edge[i].to]){\n//            indegree[belong[edge[i].to]]=true;\n//            addedge(belong[edge[i].from],belong[edge[i].to],2);\n//        }\n//    }\n}\n\n\n//\u6b64\u5904DP\u4e3a\u6811\u4e0a01\u80cc\u5305 \nvoid DP(int x){//\u6811\u4e0aDP \uff0cx\u4e3a\u5f53\u524d(\u6839)\u8282\u70b9 \n    int i,j,k;\n    for(i=nhead[x]; i ;i=newedge[i].next){//\u8282\u70b9x\u8fde\u63a5\u7684\u6bcf\u4e00\u6761\u8fb9 \n        DP(newedge[i].to);//\u4ece\u5ef6\u4f38\u51fa\u53bb\u7684\u70b9\u7ee7\u7eedDFS \n        for(j=m-scc[x].w;j>=0;j--){// scc[x].w\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u7a7a\u95f4\u503c(\u662f\u9898\u76ee\u4e2d\u7684\u201c\u7a7a\u95f4\u201d\u7684\u542b\u4e49) \n            //m -scc[x].w\u5c31\u662f\u5228\u9664\u8be5\u8282\u70b9\u4e0d\u7b97\uff0c\u53ef\u4ee5\u4f9b\u5b89\u88c5\u7684\u5269\u4f59\u7a7a\u95f4 \n            for(k=0;k<=j;k++){\n                //\u8fd9\u91cc\u662f\u9012\u63a8\n                //k\u4e3a\u9009\u62e9\u7684\u7a7a\u95f4\u91cf\uff0cj-k\u662f\u4ecd\u53ef\u4f9b\u9009\u62e9\u7684\u7a7a\u95f4 \n                dp[x][j]=max(dp[x][j],dp[x][k]+dp[newedge[i].to][j-k]);\n            }\n        }\n    }\n    //\u4e0a\u9762\u641e\u5b8c\u4e86\uff0c\u6216\u8005\u4e0a\u9762\u6ca1\u6709\u8fde\u5230\u8282\u70b9\u7684\u8fb9\n    //\u5230\u5e95\u4e86\u7684\u60c5\u51b5\u5f88\u81ea\u7136\u5c31\u662f\u8fd9\u6837\n    //\u8981\u662f\u6ca1\u5230\u5e95\uff0c\u5982\u679c scc[x].w \u8d85\u8fc7 j \uff0c\u5c31\u8bf4\u660e j \u7684\u5bb9\u91cf\u4e0d\u8db3\u4ee5\u5b89\u88c5\u4e0b\u9762\u7684\u5b50\u6811\uff0c\u4ee5x\u4e3a\u6839\u7684\u6811\u4ef7\u503c\u4e3a0 \n    for(j=m;j>=0;j--){\n        if(j>=scc[x].w)\n            dp[x][j]=dp[x][j-scc[x].w]+scc[x].v;\n        else\n            dp[x][j]=0;\n    }\n}\n\nint main(){\n    freopen(\"2515.in\",\"r\",stdin);\n    scanf(\"%d%d\",&n,&m);\n    int i;\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&weight[i]);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&value[i]);\n    for(i=1;i<=n;i++){\n        int k;\n        scanf(\"%d\",&k);\n        if(k==0) continue;\n        addedge(k,i,1);\n    }\n    for(i=1;i<=n;i++){\n        if(!DFN[i])\n            Tarjan(i);\n    }\n    Newmap();\n    for(i=1;i<=total;i++){\n        if(!indegree[i]){\n            indegree[i]=true;\n            addedge(total+1,i,2);\n        }\n    }\n    DP(total+1);\n    printf(\"%d\",dp[total+1][m]);\n    return 0;\n}\n```",
        "postTime": 1487323537,
        "uid": 34848,
        "name": "zzzc18",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u4e00\u4e2a\u88f8\u7684\u6811\u5f62\u80cc\u5305\u95ee\u9898\n# \u89e3\u6790\n### \u7f29\u70b9\n\u4ece\u67d0\u4e2a\u7269\u54c1\u4f9d\u8d56\u7684\u7269\u54c1\u5411\u8fd9\u4e2a\u7269\u54c1\u8fde\u8fb9\uff0c\u5f97\u5230\u4e00\u4e2a\u6709\u5411\u56fe\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\uff0c\u5982\u679c\u60f3\u8981\u6709\u4ef7\u503c\u7684\u8bdd\uff0c\u5fc5\u987b\u5168\u90e8\u9009\uff0c\u6839\u636e\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u8981\u4e48\u5168\u90e8\u9009\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u9009\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u5e45\u6709\u5411\u56fe\u8fdb\u884c\u7f29\u70b9\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u7269\u54c1\u53ea\u6709\u4e00\u4e2a\u4f9d\u8d56\u5173\u7cfb\uff0c\u6240\u4ee5\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7f29\u70b9\u540e\u6211\u4eec\u5f97\u5230\u4e86\u68ee\u6797\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8fdb\u884c\u6811\u5f62\u80cc\u5305\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u6839\u8282\u70b9 $0$ \u53f7\u8282\u70b9\uff0c\u628a\u68ee\u6797\u8f6c\u5316\u4e3a\u4e00\u68f5\u6811\u3002\n\n### \u80cc\u5305\n#### \u72b6\u6001\n\u6811\u5f62\u80cc\u5305\u7684\u8001\u5957\u8def:\n$dp[i][j]$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u80cc\u5305\u5bb9\u91cf\u4e3a $j$ \u65f6\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u5f53\u524d\u8282\u70b9\u7684\u72b6\u6001\uff08\u4f53\u79ef $v$\uff09\uff0c\u81ea\u7136\u662f\u7531\u5f53\u524d\u8282\u70b9\u8f83\u5c0f\u7684\u80cc\u5305\uff08\u4f53\u79ef $v_1$\uff09\uff0c\u52a0\u4e0a\u5b50\u8282\u70b9\u7684\u80cc\u5305\uff08\u4f53\u79ef $v_2$\uff09\u3002\u6ee1\u8db3\uff1a\n$$ v = v_1 + v_2$$\n\u5b9a\u4e49\u5408\u6cd5\u72b6\u6001\uff1a\n$w[x] \\leq v$\n#### \u9636\u6bb5\n\u5f53\u524d\u8282\u70b9\u7684\u80cc\u5305\u5bb9\u91cf\uff0c\u548c\u5b50\u8282\u70b9\u7684\u80cc\u5305\u5bb9\u91cf\u3002\n\n\u6ce8\u610f\u5916\u4fa7\u5f53\u524d\u8282\u70b9\u7684\u80cc\u5305\u5bb9\u91cf\u91c7\u53d6\u5012\u53d9\u5faa\u73af\uff0c\u907f\u514d\u72b6\u6001\u7684\u91cd\u590d\u8f6c\u79fb\u3002\n#### \u51b3\u7b56\n\u5224\u65ad\u5f53\u524d\u9636\u6bb5\u662f\u5426\u5408\u6cd5\uff0c\u53d6\u6700\u5927\u503c\u3002\n\n\n------------\n\n\u6700\u540e\u7684\u7b54\u6848\u81ea\u7136\u5c31\u5728 $dp[0][m]$ \u4e2d\u4e86\uff0c\u80cc\u5305\u4f53\u79ef\u8d8a\u5927\uff0c\u81ea\u7136\u4ef7\u503c\u5c31\u4f1a\u76f8\u5bf9\u66f4\u5927\u3002\n# \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\nusing std:: min;\nusing std:: max;\nconst int N = 1e2 + 5,M = 5e2 + 5;\nstruct edge {\n\tint next,to;\n}a[N];\nint head[N],n,m,a_size = 1,wei[N],v[N];\ninline void add(int u,int v) {\n\ta[++a_size] = (edge){head[u],v};\n\thead[u] = a_size;\n}\nint dfn[N],low[N],val[N],w[N],c[N],sta[N],top = 0,cnt = 0,num = 0;\nbool ins[N];\nvoid tarjan(int x) {\n\tdfn[x] = low[x] = ++num;\n\tsta[++top] = x; ins[x] = true;\n\tfor(int i = head[x]; i; i = a[i].next) {\n\t\tint y = a[i].to;\n\t\tif(!dfn[y]) {\n\t\t\ttarjan(y);\n\t\t\tlow[x] =  min(low[x],low[y]); \n\t\t}\n\t\telse if(ins[y]) \n\t\t\tlow[x] = min(low[x],dfn[y]);\n\t}\n\tif(dfn[x] == low[x]) {\n\t\tcnt++; int y;\n\t\tdo {\n\t\t\ty = sta[top--],ins[y] = false;\n\t\t\tc[y] = cnt; w[cnt] += wei[y]; val[cnt] += v[y];\n\t\t}while(x != y);\n\t}\n}\nstruct New {\n\tint next,to;\n}e[N];\nint hc[N],e_size = 1,deg[N];\ninline void add_c(int u,int v) {\n\te[++e_size] = (New){hc[u],v};\n\thc[u] = e_size;\n} int dp[N][M];\nvoid dfs(int x) {\n\tfor(int i = w[x]; i <= m; i++)\n\t\tdp[x][i] = val[x];\n\tfor(int i = hc[x]; i; i = e[i].next) {\n\t\tint y = e[i].to; dfs(y);\n\t\tfor(int j = m; j >= w[x]; j--)\n\t\t\tfor(int k = w[y]; k <= j; k++)\n\t\t\tif(j - k >= w[x]) dp[x][j] = max(dp[x][j],dp[x][j - k] + dp[y][k]);\n\t}\n}\ninline int read() {\n\tint x = 0,flag = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-')flag = -1;ch = getchar();}\n\twhile(ch >='0' && ch <='9'){x = (x << 3) + (x << 1) + ch - 48;ch = getchar();}\n\treturn x * flag;\n}\nint main() {\n\tn = read(),m = read();\n\tfor(int i = 1; i <= n; i++)\n\t\twei[i] = read();\n\tfor(int i = 1; i <= n; i++)\n\t\tv[i] = read();\n\tfor(int i = 1; i <= n; i++) {\n\t\tint u = read();\n\t\tif(u) add(u,i);\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tif(!dfn[i]) tarjan(i);\n\tfor(int x = 1; x <= n; x++)\n\t\tfor(int i = head[x]; i; i = a[i].next) {\n\t\t\tint y = a[i].to;\n\t\t\tif(c[x] == c[y]) continue;\n\t\t\tadd_c(c[x],c[y]); deg[c[y]]++;\n\t\t}\n\tfor(int i = 1; i <= cnt; i++)\n\t\tif(!deg[i]) add_c(0,i);\n\tdfs(0); printf(\"%d\",dp[0][m]);\n\treturn 0;\n}\n```\n",
        "postTime": 1619696125,
        "uid": 385145,
        "name": "\u795e\u7737\u4e4b\u6a31\u82b1",
        "ccfLevel": 4,
        "title": "P2515 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P2515)\n\n\u672c\u6587\u4e3b\u8981\u6765\u8bb0\u5f55\u4e00\u4e2a\u6ca1\u89c1\u8fc7\u7684\u6811\u5f62\u80cc\u5305 DP \u5199\u6cd5\n\n\u8fd9\u9898\u662f\u4e2a\u88f8\u7684 tarjan \u7f29\u70b9\u548c\u6811\u5f62\u80cc\u5305 DP \n\n\u663e\u7136\u5faa\u73af\u4f9d\u8d56\u5c31\u7f29\u6210\u4e00\u70b9\u518d\u8fdb\u884c DP \u5373\u53ef\n\n\u8bbe $f(i,j)$ \u4e3a dfs \u5e8f\u4e2d\u7b2c i \u4e2a\u70b9\u53ca\u4ee5\u540e\u5360\u7528\u78c1\u76d8\u7a7a\u95f4\u4e3a j \u7684\u8fde\u901a\u5757\u7684\u6700\u5927\u4ef7\u503c\n\n\u6709 $f(i,j)=\\max f(i+1,j-W[i])+V[i],f(i+size_{dfn_i},j)$\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\times m)$\n\nCode(C++):\n```cpp\n#include<bits/stdc++.h>\n#define forn(i,s,t) for(int i=(s);i<=(t);++i)\n#define form(i,s,t) for(int i=(s);i>=(t);--i)\nusing namespace std;\nconst int N = 105,M = 505,INF = 1e9+7;\ntemplate<typename T>\ninline void chkmax(T &A,T B) {A=A>B?A:B;}\nstruct List {\n\tint dir,nxt;\n}E[N],T[N];\nint G[N],cnt,cntt,GT[N],dT[N];\ninline void Add(int u,int v) {\n\tE[++cnt].dir = v,E[cnt].nxt = G[u],G[u] = cnt;\n}\ninline void AddT(int u,int v) {\n\tT[++cntt].dir = v,T[cntt].nxt = GT[u],GT[u] = cntt,dT[v] ++ ;\n}\nint n,m,w[N],v[N],d[N],dn[N],stk[N],h,ord,clr[N],col,W[N],V[N];\nbool vis[N];\nint tarjan(int u) {\n\tint low = dn[u] = ++ord;\n\tstk[++h] = u,vis[u] = 1;\n\tfor(int i=G[u];i;i=E[i].nxt) {\n\t\tint v = E[i].dir;\n\t\tif(!dn[v]) low = min(tarjan(v),low);\n\t\telse if(vis[v]) low = min(low,dn[v]);\n\t}\n\tif(low == dn[u]) {\n\t\t++col;\n\t\tdo clr[stk[h]]=col,W[col]+=w[stk[h]],V[col]+=v[stk[h]],vis[stk[h]]=0;\n\t\twhile(stk[h--]!=u);\n\t}\n\treturn low;\n}\nint f[N][M],sz[N],rk[N];\nvoid dfs(int u) {\n\tsz[u] = 1,rk[++ord] = u;\n\tfor(int i=GT[u];i;i=T[i].nxt) {\n\t\tint v = T[i].dir;\n\t\tdfs(v),sz[u] += sz[v];\n\t}\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tforn(i,1,n) scanf(\"%d\",&w[i]);\n\tforn(i,1,n) scanf(\"%d\",&v[i]);\n\tforn(i,1,n) scanf(\"%d\",&d[i]),d[i]?(Add(d[i],i),0):0;\n\tforn(i,1,n) if(!dn[i]) tarjan(i);\n\tforn(u,1,n) for(int i=G[u];i;i=E[i].nxt) {\n\t\tint v = E[i].dir;\n\t\tif(clr[u]!=clr[v]) AddT(clr[u],clr[v]);\n\t}\n\tforn(u,1,col) if(!dT[u]) AddT(0,u);\n\tord = 0,dfs(0);\n\tform(i,ord,1) { int u = rk[i];\n\t\tforn(j,0,m) {\n\t\t\tchkmax(f[i][j],f[i+sz[u]][j]);\n\t\t\tif(j>=W[u]) chkmax(f[i][j],f[i+1][j-W[u]]+V[u]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",f[1][m]);\n\treturn 0;\n}\n```",
        "postTime": 1606920672,
        "uid": 223884,
        "name": "AxDea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u5f88\u6709\u610f\u601d\u7684\uff0c\u4e4d\u4e00\u770b\u5c31\u662f\u9053\u6811\u5f62\u80cc\u5305\uff0c\u4ed4\u7ec6\u4e00\u60f3\u6709\u73af\u3002\u6709\u73af\u7684\u65f6\u5019\u73af\u4e2d\u7684\u8f6f\u4ef6\u8981\u4e48\u90fd\u5b89\u8981\u4e48\u90fd\u4e0d\u5b89\uff0c\u5f88\u5bb9\u6613\u60f3\u5230tarjan\u7f29\u70b9\u3002\n\n\u6211\u4eec\u5728\u8bfb\u5165\u6570\u636e\u540e\u5148\u7f29\u70b9\uff0c\u7136\u540e\u5efa\u7acb\u65b0\u56fe\uff0c\u5728\u5efa\u65b0\u56fe\u7684\u65f6\u5019\u7edf\u8ba1\u5165\u5ea6\uff0c\u5c06\u5165\u5ea6\u4e3a0\u7684\u70b9\u4e0e\u865a\u70b90\u8fde\u8fb9\uff0c\u8fd9\u6837\u6784\u6210\u4e00\u68f5\u6811\uff0c\u8fdb\u884c\u6811\u5f62\u80cc\u5305\u64cd\u4f5c\u5c31\u53ef\u4ee5\u3002\n\n\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u5728\u7f29\u70b9\u540e\u518d\u4e0e\u865a\u70b90\u8fde\u8fb9\uff0c\u5426\u5219\u4f1a\u51fa\u9519\uff0c\u5f9740\u5206\u3002\n\u56e0\u4e3a\u5728\u8bfb\u5165\u6570\u636e\u7684\u65f6\u5019\u8fde\u7684\u8bdd\uff0c\u73af\u5c31\u4e0d\u4f1a\u5982\u865a\u70b9\u8fde\u8fb9\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define ll long long\ninline int read(){\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();\n    }\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();\n    }\n    return x*f;\n}\nconst int mx=1001;\nint h[mx],a[mx],s[mx],w[mx],W[mx],de[mx];\nint dfn[mx],low[mx],co[mx],st[mx];\nint top,col,p,n,m,num;\nint h1[mx],p1;\nint f[111][555];\nstruct edge{\n    int next , v;\n}e[mx],e1[mx];\ninline void add(int a,int b){\n    p++;e[p].next=h[a];h[a]=p;e[p].v=b;\n} \ninline void add1(int a,int b){\n    p1++;e1[p1].next=h1[a];h1[a]=p1;e1[p1].v=b;\n}\n//-------\ninline void tarjan(int u){\n    dfn[u]=low[u]=++num;\n    st[++top]=u;\n    for(int i=h[u];i;i=e[i].next){\n        int v=e[i].v;\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(!co[v]){\n            low[u]=min(low[u],dfn[v]);\n        }\n    }//ok\n    \n    if(low[u]==dfn[u]){\n        ++col;\n        while(st[top+1]!=u){\n            co[st[top]]=col;\n            s[col]+=a[st[top]];\n            W[col]+=w[st[top]];\n            top--;\n        }\n    }//ok\n}\ninline void dp(int u){\n    for(int i=0;i<=W[u];i++)f[u][i]=0;\n    for(int i=h1[u];i;i=e1[i].next){\n        int v=e1[i].v;\n        dp(v);\n        for(int t=m;t>=W[v];t--){\n            for(int j=t;j>=W[v];j--){\n                f[u][t]=max(f[u][t],f[u][t-j]+f[v][j]);\n            }\n        }\n    }\n    if(u!=0){\n        for(int t=m;t>=W[u];t--)f[u][t]=f[u][t-W[u]]+s[u];\n    }\n}\nint main(){\n    n=read();m=read();\n    for(int i=1;i<=n;i++)w[i]=read();\n    for(int i=1;i<=n;i++)a[i]=read();\n    for(int i=1,u;i<=n;i++){\n        u=read();\n        if(u==0)continue;\n        add(u,i);\n    }//ok\n    \n    for(int i=1;i<=n;i++)if(!dfn[i])tarjan(i);//ok\n    //for(int i=1;i<=col;i++)cout<<W[i]<<' ';return 0;\n//\tcout<<h[0];return 0;\n    for(int i=1;i<=n;i++){\n        for(int j=h[i];j;j=e[j].next){\n            int v=e[j].v;\n            if(co[i]!=co[v])add1(co[i],co[v]),de[co[v]]++;\n        }\n    }\n    for(int i=1;i<=col;i++){\n        if(!de[i])add1(0,i);\n    }\n    dp(0);\n    printf(\"%d\\n\",f[0][m]);return 0;\n}\n\n```\n",
        "postTime": 1542522633,
        "uid": 72111,
        "name": "Maktub",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u4e2a\u4eba\u539f\u56e0\uff0c\u4e0d\u662f\u5f88\u7231\u5f00\u5f88\u591a\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u6b64\u4e0d\u662f\u5f88\u7231\u7528 tarjan ......\n\n~~\u55ef\uff0c\u771f\u9999~~\n\n---\n\n**\u3010\u5206\u6790\u3011**\n--\n\n\u9898\u76ee\u4e2d\u8bf4\u7684\u5e94\u8be5\u633a\u6e05\u695a\u4e86\uff0c\u5c31\u662f\u6709\u7684\u8f6f\u4ef6\u9700\u8981\u5b89\u88c5\u4e86\u5b83\u7684\u4f9d\u8d56\u8f6f\u4ef6\u624d\u6709\u610f\u4e49\n\n\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c\u663e\u7136\uff0c\u8981\u5b89\u88c5\u4e86\u5b83\u7684\u4f9d\u8d56\u8f6f\u4ef6\u518d\u8003\u8651\u5b89\u88c5\u8fd9\u4e2a\u8f6f\u4ef6\u624d\u6709\u610f\u4e49\n\n\u90a3\u6211\u4eec\u8fd9\u4e48\u8003\u8651\uff1a\u628a\u6bcf\u4e2a\u8f6f\u4ef6\u62bd\u8c61\u6210\u4e00\u4e2a\u70b9\uff0c\u5b83\u6709\u4f9d\u8d56\u7684\u8f6f\u4ef6\u5c31\u8fde\u4e00\u6761\u4ece\u4f9d\u8d56\u8f6f\u4ef6\u6307\u5411\u81ea\u5df1\u7684\u8fb9\n\n\u4f60\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u6570\u636e\u6070\u5de7\u51d1\u597d\u7684\u8bdd(\u6bd4\u5982\u6837\u4f8b)\uff0c\u8fd9\u5c31\u662f\u4e00\u68f5\u6811\n\n\u800c\u4e14\u6839\u636e\u8fd9\u4e2a\u6811\u7684\u6027\u8d28\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u5bf9\u7236\u8282\u70b9\u5b89\u88c5\u4e86\uff0c\u5bf9\u5b83\u7684\u5b50\u8282\u70b9\u7684\u5b89\u88c5\u624d\u6709\u610f\u4e49\n\n\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u5b8c\u4e86\u5417......\n\n\u6211\u5f53\u65f6\u8fd8\u771f\u8fd9\u4e48\u4ee5\u4e3a......\n\n\u8003\u8651\u5230\u4e00\u4e2a\u7279\u6b8a\u60c5\u51b5\n\n\u4e09\u4e2a\u8f6f\u4ef6 $a,b,c$\uff0c\u6ee1\u8db3 $a\\to b,b \\to a,c \\to a$\n\n\u663e\u7136\uff0c\u8fd9\u5c31\u662f\u7b26\u5408\u9898\u76ee\u6761\u4ef6\u7684\n\n\u4f46\u662f\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u5b89\u88c5 $a$ \u5219\u5fc5\u7136\u8981\u5b89\u88c5 $b$ \uff0c\u5b89\u88c5 $b$ \u5219\u5fc5\u7136\u8981\u5b89\u88c5 $a$\n\n\u90a3\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7406\u89e3\u4e3a\uff0c\u8981\u4e48 $a,b$ \u90fd\u5b89\u88c5\uff0c\u8981\u4e48\u90fd\u4e0d\u5b89\u88c5\n\n\u90a3\u5b9e\u9645\u4e0a $a,b$ \u5c31\u5df2\u7ecf\u662f\u4e00\u4e2a\u6574\u4f53\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7f29\u70b9\u628a\u5b83\u4eec\u5f53\u6210\u4e00\u4e2a\u70b9\u8003\u8651\n\n\u6839\u636e\u8fd9\u79cd\u6027\u8d28\uff0c\u9898\u76ee\u4e2d\u8bf4\u4e0d\u5b9a\u4f1a\u7ed9\u5b9a\u591a\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5bfc\u81f4\u6211\u4eec\u7f29\u70b9\u540e\u53d8\u6210\u68ee\u6797\n\n\u90a3\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u5904\u7406\uff1a\n\n\u6b63\u5982\u6837\u4f8b\u4e2d\uff0c\u6ca1\u6709\u4f9d\u8d56\u8f6f\u4ef6\u7684 $D$ \u503c\u4e3a $0$ \uff0c\u90a3\u6211\u4eec\u5c31\u5047\u8bbe\u6240\u6709\u5f3a\u8fde\u901a\u5206\u91cf\u7684 $D$ \u503c\u4e5f\u4e3a $0$\u3002(\u6bcf\u4e2a\u8f6f\u4ef6\u53ea\u6709\u4e00\u4e2a\u4f9d\u8d56\u8f6f\u4ef6\uff0c\u56e0\u6b64\u5f3a\u8fde\u901a\u5206\u91cf\u4e0d\u5b58\u5728\u6307\u51fa\u8fb9)\n\n\u63a5\u7740\uff0c\u6211\u4eec\u628a $0$ \u89c6\u4e3a\u4e00\u4e2a $W=0,V=0$ \u7684\u8282\u70b9\n\n\u8fd9\u6837\uff0c\u6240\u6709\u539f\u672c\u7684\u6839\u5c31\u90fd\u53d8\u4e3a\u4e86 $0$ \u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\n\n\u53ea\u8981\u4ee5 $0$ \u4e3a\u6839\uff0c\u505a\u4e00\u6b21 \u6811\u5f62$DP$ \u5c31\u597d\u4e86\n\n---\n\n**\u3010\u4ee3\u7801\u3011**\n--\n\n\u90a3\u672c\u849f\u84bb\u5c31\u653e~~\u6211\u90a3\u7801\u98ce\u6781\u4e11\u7684~~\u4ee3\u7801\u4e86\n\n\u6709\u770b\u4e0d\u61c2\u7684\u53ef\u4ee5\u76f4\u63a5\u827e\u7279\u6211\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define f(a,b,c) for(register int a=b;a<=c;a++)\n#define g(a,b,c) for(register int a=b;a>=c;a--)\n#define Max(a,b) ((a>b)?a:b)\n#define Min(a,b) ((a<b)?a:b)\ntypedef long long int ll;\ntypedef unsigned long long int ull;\nconst int MAXN=110;\ntypedef ll ar[MAXN];\ninline ll read(){\n    register ll ans=0;register char c=getchar();register bool neg=0;\n    while((c<'0')|(c>'9')) neg^=!(c^'-'),c=getchar();\n    while((c>='0')&(c<='9')) ans=(ans<<3)+(ans<<1)+(c^'0'),c=getchar();\n    return neg?-ans:ans;\n}//\u4ee5\u4e0a\u90fd\u662f\u6761\u4ef6\u53cd\u5c04\u7684\u7ed3\u679c \nint N=0,M,Cnt=0,Cur=0;\nar Low,DFN,Set,Stack;\nbool Ins[MAXN];\n//N \u5f3a\u8fde\u901a\u5206\u91cf\u6570\uff0cM \u78c1\u76d8\u5185\u5b58 \uff0cCur \u6808\u7684\u6307\u9488\n//Set \u5c5e\u4e8e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5e8f\u53f7\uff0cIns \u662f\u5426\u5728\u6808\u4e2d\uff0c\u5176\u4ed6\u5e94\u8be5\u90fd\u597d\u7406\u89e3 \nstruct Edge{\n\tint To;\n\tEdge *Next;\n\tEdge(int To,Edge *Next):To(To),Next(Next) {}\n}*E[MAXN];\nstruct Node{\n\tint W,V,Pa,Kid,Bro;//Bro \u5144\u5f1f \n\tNode() { W=V=Pa=0; Kid=Bro=-1; }\n}Tree[MAXN];\nvoid tarjan(int p){//\u7f29\u70b9 \n\tStack[++Cur]=p;\n\tLow[p]=DFN[p]=++Cnt;\n\tfor(Edge *Vec=E[p];Vec;Vec=Vec->Next)\n\t\tif(Set[Vec->To]) continue;\n\t\telse if(Ins[Vec->To]) Low[p]=Min(Low[p],Low[Vec->To]);\n\t\telse{\n\t\t\tIns[Vec->To]=1;\n\t\t\ttarjan(Vec->To);\n\t\t\tIns[Vec->To]=0;\n\t\t\tLow[p]=Min(Low[p],Low[Vec->To]);\n\t\t}\n\tif(Low[p]==DFN[p]){\n\t\tN++;\n\t\twhile(Stack[Cur]!=p)\n\t\t\tSet[Stack[Cur]]=N,Cur--;\n\t\tSet[p]=N;\n\t\tCur--;\n\t}\n}\nvoid pre(){\n\tint tmpN;\n\tar tmpW,tmpV,tmpD;\n\tmemset(tmpW,0,sizeof(tmpW));\n\tmemset(tmpV,0,sizeof(tmpV));\n\tmemset(tmpD,0,sizeof(tmpD));\n\ttmpN=read(); M=read();\n\tf(i,1,tmpN) tmpW[i]=read();\n\tf(i,1,tmpN) tmpV[i]=read();\n\tf(i,1,tmpN) tmpD[i]=read(),E[tmpD[i]]=new Edge(i,E[tmpD[i]]);//\u8fde\u8fb9 \n\tf(i,1,tmpN) if(!Set[i]) Ins[i]=1,tarjan(i),Ins[i]=0;\n\tf(i,1,tmpN){\n\t\t//\u5c06\u5f3a\u8fde\u901a\u5206\u91cf\u5f52\u4e3a\u4e00\u4e2a\u6574\u4f53 \n\t\tTree[Set[i]].W+=tmpW[i];\n\t\tTree[Set[i]].V+=tmpV[i];\n\t\tif(!tmpD[i]) continue;\n\t\t//\u6709\u7684\u70b9\u672c\u8eab D \u503c\u5c31\u4e3a 0 \uff0c\u7279\u5224\u6389\uff0c\u4e0d\u7136\u4f1a\u51fa\u9519 \n\t\tif(Set[tmpD[i]]!=Set[i]){\n\t\t\tTree[Set[i]].Pa=Set[tmpD[i]];\n\t\t\tTree[Set[i]].Bro=Tree[Set[tmpD[i]]].Kid;\n\t\t\tTree[Set[tmpD[i]]].Kid=Set[i];\n\t\t}\n\t}\n\t//\u68ee\u6797\u53d8\u4e3a\u6811 \n\tf(i,1,N) if(!Tree[i].Pa){\n\t\tTree[i].Bro=Tree[0].Kid;\n\t\tTree[0].Kid=i;\n\t}\n}\nint Dp[110][510]={0};\nvoid dp(int p){\n\tif(Tree[p].Kid>0) dp(Tree[p].Kid); \n\tif(Tree[p].Bro>0) dp(Tree[p].Bro);\n\t//\u5148\u904d\u5386\u5b69\u5b50\u548c\u5144\u5f1f \n\tf(i,0,M){\n\t\tif(Tree[p].Bro>0) Dp[p][i]=Dp[ Tree[p].Bro ][i];//\u4e0d\u5b89\u88c5\u81ea\u5df1\u7684\u60c5\u51b5 \n\t\tf(j,Tree[p].W,i){//\u5b89\u88c5\u81ea\u5df1\u7684\u60c5\u51b5 \n\t\t\tint tmpk=(Tree[p].Kid>0)?Dp[ Tree[p].Kid ][ j-Tree[p].W ]:0;\n\t\t\tint tmpb=(Tree[p].Bro>0)?Dp[ Tree[p].Bro ][ i-j ]:0;\n\t\t\tDp[p][i]=Max(Dp[p][i],tmpk+tmpb+Tree[p].V);\n\t\t}\n\t}\n}\nint main(){\n\tpre();\n\tdp(0);\n\tprintf(\"%d\",Dp[0][M]);\n\treturn 0;\n}\n```",
        "postTime": 1540007455,
        "uid": 36031,
        "name": "JustinRochester",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u5982\u679c\u4e0d\u8003\u8651\u4f9d\u8d56\u5173\u7cfb\u73af\u7684\u8bdd\u672c\u9898\u53ef\u4ee5\u5f97\u523040\u5206\n\n\u5177\u4f53\u505a\u6cd5\u5c31\u662f\u5728\u6811\u4e0a\u505a\u4e00\u6b21\u80cc\u5305dp.\u5f15\u7528`<\u80cc\u5305\u4e5d\u8bb2>`\u7684`\u6cdb\u5316\u7269\u54c1`\u6982\u5ff5,\u7269\u54c1\u672c\u8eab\u53ef\u4ee5\u89c6\u4f5c\u4e00\u4e2a`weight`\u5bf9\u5e94`value`\u7684\u51fd\u6570.\u53ea\u8981\u679a\u4e3e\u4e3a\u6bcf\u4ef6\u7269\u54c1\u63d0\u4f9b\u7684`weight`\u540e\u53d6\u6700\u4f18\u5373\u53ef.\u672c\u9898\u4e2d'\u7269\u54c1'\u6307\u7684\u5c31\u662f\u6811\u4e0a\u7684\u4e00\u9897\u5b50\u6811\n\n\u63a5\u7740\u8003\u8651\u4f9d\u8d56\u5173\u7cfb\u73af\u7684\u95ee\u9898.\u5bf9\u4e8e\u4e00\u4e2a\u73af\u8981\u4e48\u5168\u90e8\u53d6\u8d70,\u83b7\u5f97\u5168\u90e8\u4ef7\u503c\u548c,\u6d88\u8017\u5168\u90e8\u8d39\u7528\u548c ; \u8981\u4e48\u4e00\u4e2a\u90fd\u4e0d\u53d6.\u663e\u7136\u8fd9\u91cc\u5e94\u8be5`tarjan`\u7f29\u70b9.\u56e0\u4e3a\u4fdd\u8bc1\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a1,\u6240\u4ee5**\u4e00\u4e2a\u73af\u7f29\u70b9\u4e4b\u540e\u4e00\u5b9a\u662f\u6811\u4e0a\u7684\u6839**.\u6700\u540e\u5c06\u68ee\u6797\u4e0a\u7684\u6bcf\u4e2a\u6839\u90fd\u6302\u5411`0`\u8282\u70b9,\u5f62\u6210\u4e00\u9897\u6811\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b.\u84bb\u7684\u82f1\u8bed\u4e0d\u597d\u8bf7\u89c1\u8c05\n\n```c++\n//by:beautyyu\n#include <iostream>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#define ull unsigned long long\nusing namespace std;\nstruct edge\n{\n\tint v, nxt;\n}e[5000];\nint head[5000],memf[5000][1000],memd[5000][1000];\n//'memd' -- memory for function 'd','memf' -- memory for function 'f'\nint w[5000],v[5000];\nint d(int al,int be);\nint f(int al,int be);\n//tarjan begin\nint sta[5000],top = 0;bool insta[5000];//stack\nint dfn[5000],low[5000],bl[5000],bcnt = 0,c = 0;\nvoid tarjan(int k){\n\tdfn[k] = low[k] = ++ c;\n\tinsta[sta[++ top] = k] = 1;\n\tfor (int i = head[k];i;i = e[i].nxt){\n\t\tint &ev = e[i].v;\n\t\tif (!dfn[ev]){\n\t\t\ttarjan(ev);\n\t\t\tlow[k] = min(low[k],low[ev]);\n\t\t}\n\t\telse if (insta[ev])\n\t\t\tlow[k] = min(low[k],dfn[ev]);\n\t}\n\tif (low[k] == dfn[k]){\n\t\t++ bcnt;\n\t\tdo insta[sta[top]] = 0,bl[sta[top --]] = bcnt;\n\t\twhile(sta[top + 1] != k);\n\t}\n\treturn ;\n}\n//tarjan end\n\nint main (){\n\tint n,m;\n\t//read gragh\n\tcin >> n >> m;\n\tint de[5000],be[5000],ge[5000];\n\tfor (int i = 1;i <= n;++ i)\n\t\tscanf(\"%d\",&de[i]);\n\tfor (int i = 1;i <= n;++ i)\n\t\tscanf(\"%d\",&be[i]);\n\tint al,cnt = 0;\n\tfor (int i = 1;i <= n;++ i){\n\t\tscanf(\"%d\",&al);\n\t\tge[i] = al;\n\t\te[++ cnt] = edge{i,head[al]};\n\t\thead[al] = cnt;\n\t}\n\t//read gragh end\n\tfor (int i = 1;i <= n;++ i)\n\t\tif(!dfn[i]) tarjan(i);\n\t//build new tree\n\tfor (int i = 1;i <= n;++ i)\n\t\tw[bl[i]] += de[i],\n\t\tv[bl[i]] += be[i];\n\tmemset(head,0,sizeof(head));\n\tmemset(e,0,sizeof(e));\n\tcnt = 0;\n\tbool havefather[5000];\n\tfor (int i = 1;i <= n;++ i)\n\t\tif (bl[i] != bl[ge[i]])\n\t\t\te[++ cnt] = edge{bl[i],head[bl[ge[i]]]},\n\t\t\thead[bl[ge[i]]] = cnt,\n\t\t\thavefather[bl[i]] = 1;\n\tn = bcnt;\n\tfor (int i = 1;i <= n;++ i)\n\t\tif(!havefather[i])\n\t\t\te[++ cnt] = edge{i,head[0]},\n\t\t\thead[0] = cnt;\n\t//build new tree end\n\tmemset(memd,-1,sizeof(memd));\n\tmemset(memf,-1,sizeof(memf));\n\tmemset(memf[0],0,sizeof(memf[0]));\n\tcout << d(0,m);\n\treturn 0;\n}\nint d(int rt,int wei){\n//most value porduced by the tree 'rt' with weight'wei'\n\tif (memd[rt][wei] != -1) return memd[rt][wei];\n\tif (wei < w[rt]) return memd[rt][wei] = 0;\n\treturn memd[rt][wei] = f(head[rt],wei - w[rt]) + v[rt];\n}\nint f(int i,int wei){\n//most value porduced by the list begins from 'i' with weight'wei'\n\tif (memf[i][wei] != -1) return memf[i][wei];\n\tint ev = e[i].v;\n\tint ans = 0;\n\tfor (int j = 0;j <= wei;++ j)\n\t\tans = max(ans,d(ev,j) + f(e[i].nxt,wei - j));\n\treturn memf[i][wei] = ans;\n}\n```",
        "postTime": 1526444931,
        "uid": 61353,
        "name": "BeautyYu\u8a00\u91b4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\u4e00\u773c\u9898\uff0c\u79d2\u51fa\u601d\u8def\uff1a\u662ftarjin+\u6811\u5f62DP\u3002\n\n\u5148\u8dd1\u4e00\u904dtarjin\uff0c\u7f29\u53bb\u6240\u6709\u7684\u70b9\uff0c\u7136\u540e\u7684\u601d\u8def\u5c31\u548c\u4e00\u4e2a\u53eb\u201c\u9009\u8bfe\u201d\u7684\u9898\u76ee\u5f88\u50cf\u4e86\u3002\n\n\u5148\u628a\u6811\u8f6c\u5316\u6210\u4e8c\u53c9\u6811\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u6811\u5f62DP\uff0c\u8fd9\u4e2a\u9898\u662f\u4e2a\u5f88\u7ecf\u5178\u7684\u6811\u5f62DP\u7684\u6a21\u578b\u3002\n\n```cpp\n#include<map>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define N 10001\n#define M 2501\nusing namespace std;\nmap<int,int>ma[N];\nint n,m,K;\nint tot,top;\nint tim,sum,sumcol;\nint col[N],kk[N],vval[N];\nint to[N],net[N],head[N];\nint k[N],val[N],f[N][M],dp[M];\nint dad[N],lchild[N],rchild[N];\nint vis[N],dis[N],low[N],stack[N],visstack[N];\nvoid add(int u,int v){\n    to[++tot]=v;net[tot]=head[u];head[u]=tot;\n}\nvoid tarjin(int now){\n    dis[now]=low[now]=++tim;\n    vis[now]=1;\n    stack[++top]=now;\n    visstack[now]=1;\n    for(int i=head[now];i;i=net[i])\n        if(visstack[to[i]])\n            low[now]=min(low[now],dis[to[i]]);\n        else if(!vis[to[i]]){\n            tarjin(to[i]);\n            low[now]=min(low[now],low[to[i]]);\n        }\n    if(low[now]==dis[now]){\n        sumcol++;\n        col[now]=sumcol;\n        while(stack[top]!=now){\n            col[stack[top]]=sumcol;\n            visstack[stack[top]]=0;\n            top--;\n        }\n        visstack[now]=0;\n        top--;\n    }\n}\nint dfs(int i,int j){\n    if(i>n||i<1||j>K||j<1)    return 0;\n    if(f[i][j])    return f[i][j];\n    for(int kkk=0;kkk<=j-kk[i];kkk++)\n        f[i][j]=max(f[i][j],dfs(lchild[i],kkk)+dfs(rchild[i],j-kkk-kk[i])+vval[i]);\n    f[i][j]=max(f[i][j],dfs(rchild[i],j));\n    return f[i][j];\n}\nint main(){\n    //freopen(\"T1.in\",\"r\",stdin);\n    //freopen(\"T1.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&K);\n    for(int i=1;i<=n;i++)    scanf(\"%d\",&k[i]);\n    for(int i=1;i<=n;i++)    scanf(\"%d\",&val[i]);\n    for(int i=1;i<=n;i++){\n        int x;\n        scanf(\"%d\",&x);\n        if(x!=0)    add(x,i);\n    }\n    for(int i=1;i<=n;i++)\n        if(!vis[i])    tarjin(i);\n    for(int i=1;i<=n;i++)\n        for(int j=head[i];j;j=net[j])\n            if(col[i]!=col[to[j]])\n                if(ma[col[i]].find(col[to[j]])==ma[col[i]].end()){\n                    ma[col[i]][col[to[j]]]=1;\n                    dad[col[to[j]]]=col[i];\n                }\n    for(int i=1;i<=sumcol;i++){\n        int fa=dad[i];\n        if(!lchild[fa])    lchild[fa]=i;\n        else{\n            fa=lchild[fa];\n            while(rchild[fa])    fa=rchild[fa];\n            rchild[fa]=i;\n        }    \n    }\n    for(int i=1;i<=n;i++){\n        kk[col[i]]+=k[i];\n        vval[col[i]]+=val[i];\n    }\n    cout<<dfs(lchild[0],K);\n}\n```",
        "postTime": 1505716227,
        "uid": 21719,
        "name": "\u6ca7\u6f9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "/\\*\n\u5f00\u59cb\u4e00\u770b\u8fd9\u4e0d\u662f\u4e2a\u57fa\u7840\u7684\u6811\u578b\u52a8\u89c4\u5417?(\u77e5\u9053\u57fa\u7840,\u4f46\u6211\u4e0d\u4f1a\u554a),\u4f46\u662f\u4e00\u770b\u8fd8\u6709\u73af\u561e,\u82e6\u903c\u4e86...\n\n\u6839\u636e\u4f9d\u8d56\u5173\u7cfb\u53ef\u4ee5\u753b\u51fa\u6765\u4e00\u5f20\u56fe\uff0c\u6709\u4e09\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\uff1a\n\n1.\u4f9d\u8d56\u5173\u7cfb\u6784\u6210\u4e00\u68f5\u6811\u3002\n\n2.\u4f9d\u8d56\u5173\u7cfb\u6784\u6210\u4e00\u4e2a\u73af\u3002\n\n3.\u4f9d\u8d56\u5173\u7cfb\u6784\u6210\u4e00\u4e2a\u73af\u4e0b\u9762\u540a\u7740\u4e00\u68f5\u6811\u3002\n\n\u56e0\u4e3a\u67092,3\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6240\u4ee5\u8981\u5148\u6709tarjan\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u7f29\u73af\u4e3a\u70b9\uff0c\u91cd\u65b0\u5efa\u56fe\u3002\n\n\u5bf9\u4e8e\u5efa\u597d\u7684\u56fe\uff0c\u8dd1\u4e00\u8fb9\u6811\u5f62\u80cc\u5305\u5373\u53ef\uff0c\u601d\u60f3\u7c7b\u4f3c\u4e8e01\u80cc\u5305\n\nf[x][tot]\u8868\u793a\u4ee5x\u4e3a\u6839\uff0c\u5bb9\u91cf\u4e3atot\u7684\u6700\u5927\u6536\u76ca\u3002\u628ax\u7684\u5404\u4e2a\u5b50\u6811\u770b\u6210\u7269\u54c1\n\n\u518d\u679a\u4e3e\u6bcf\u4e2a\u5b50\u6811\u6240\u5206\u7ed9\u7684\u5bb9\u91cf,tot\u4ece\u5927\u5230\u5c0f\u8f6c\u79fb\u3002\n\n\\*/\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,cnt,scc,ind,top,num;\nint v[105],w[105];\nint sv[105],sw[105];bool in_stack[105];\nint dfn[105],low[105],belong[105];\nint stack[105],f[105][505],in[505],head[505],head2[505];\nstruct node\n{\n    int from;\n    int to;\n    int next;\n}e[1010],e2[1010];\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ninline void insert(int from,int to)\n{\n    e[++num].from=from;\n    e[num].to=to;\n    e[num].next=head[from];\n    head[from]=num;\n}\ninline void insert2(int from,int to)\n{\n    in[to]=1;\n    e2[++num].from=from;\n    e2[num].to=to;\n    e2[num].next=head2[from];\n    head2[from]=num; \n}\nvoid Tarjan(int u)\n{\n    int now=0;\n    dfn[u]=low[u]=++ind;\n    stack[++top]=u;\n    in_stack[u]=1;\n    for(int i=head[u];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(!dfn[v])\n        {\n            Tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(in_stack[v]) low[u]=min(low[u],dfn[v]);\n    }\n    if(low[u]==dfn[u])\n    {\n        scc++;\n        while(now!=u)//\u7edf\u8ba1\u73af \n        {\n            now=stack[top--];in_stack[now]=0;\n            belong[now]=scc;\n            sw[scc]+=w[now];\n            sv[scc]+=v[now];\n        }\n    }\n}\nvoid rebuild()//\u91cd\u5efa\u56fe \n{\n    num=0;\n    for(int x=1;x<=n;x++)\n      for(int i=head[x];i;i=e[i].next)\n      {\n          int v=e[i].to;\n          if(belong[v]!=belong[x])\n            insert2(belong[x],belong[v]);\n      }\n}\nvoid dp(int x)\n{\n    for(int i=head2[x];i;i=e2[i].next)\n    {\n        dp(e2[i].to);\n        for(int j=m-sw[x];j>=0;j--) \n        {\n            for(int k=0;k<=j;k++)//\u679a\u4e3e\u5b50\u6811\u7684\u7684\u9650\u5236\u3002\n                f[x][j]=max(f[x][j],f[x][k]+f[e2[i].to][j-k]);        \n        }\n    }\n    for(int j=m;j>=0;j--)//\u5b8c\u5168\u80cc\u5305 \n    {\n        if(j>=sw[x])f[x][j]=f[x][j-sw[x]]+sv[x];\n        else f[x][j]=0;\n    }\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;i++)w[i]=read();\n    for(int i=1;i<=n;i++)v[i]=read();\n    for(int i=1;i<=n;i++)\n    {\n        int x=read();\n        if(x)insert(x,i);\n    }\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])Tarjan(i);\n    rebuild();\n    for(int i=1;i<=scc;i++)\n        if(!in[i])\n            insert2(scc+1,i);//\u8fd9\u4e2a\u5730\u65b9\u8981\u52a01,\u56e0\u4e3a\u6839\u8282\u70b9\u5c5e\u4e8e\u65b0\u7684\u73af\u3002\uff08\u4e0d\u786e\u5b9a\uff09 \n    dp(scc+1);\n    printf(\"%d\\n\",f[scc+1][m]);\n    return 0;\n}\n```",
        "postTime": 1486472313,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\n\u5982\u679c\u6ca1\u6709\u73af\u7684\u8bdd\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6bd4\u8f83\u6c34\u7684\u6811\u5f62\u80cc\u5305\u3002\u4f46\u662f\u73b0\u5728\u6709\u73af\uff0c\u5e76\u4e14\u5f53\u6211\u4eec\u9009\u62e9\u73af\u4e2d\u4efb\u4f55\u4e00\u70b9\u65f6\u5176\u4ed6\u73af\u4e0a\u7684\u70b9\u4e5f\u90fd\u8981\u88ab\u9009\u62e9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7f29\u70b9\u89e3\u51b3\u73af\u7684\u95ee\u9898\u3002\n\n\u7136\u540e\u7f29\u70b9\u540e\u4f1a\u5f62\u6210\u4e00\u4e2a\u68ee\u6797\uff0c\u6211\u4eec\u5efa\u865a\u70b9$0$\u8fde\u5411\u5404\u81ea\u8054\u901a\u5757\u7684\u6839\uff0c\u7136\u540e\u505a\u4e00\u4e2a\u6811\u4e0a\u80cc\u5305\u5373\u53ef\n```\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\ninline int read(){\n    int f=1,ans=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){ans=ans*10+c-'0';c=getchar();}\n    return f*ans;\n}\nconst int MAXN=1001;\nstruct node{\n    int u,v,nex;\n}x[MAXN<<1];\nstruct node1{\n    int u,v;\n}E[MAXN];\nint dfn[MAXN],uu[MAXN<<1],CNT,low[MAXN],cnt,n,w,num,col[MAXN],co,head[MAXN],v[MAXN],W[MAXN];\nvoid add(int u,int v){\n    x[cnt].u=u,x[cnt].v=v,x[cnt].nex=head[u],head[u]=cnt++;\n}\nint sta[MAXN],tot;\nint ww[MAXN],vv[MAXN];\nvoid tarjan(int f,int fath){\n    dfn[f]=low[f]=++num;sta[++tot]=f;\n    for(int i=head[f];i!=-1;i=x[i].nex){\n        int v=x[i].v;\n        if(!dfn[v]) tarjan(v,f),low[f]=min(low[f],low[v]);\n        else if(!col[v]) low[f]=min(low[f],dfn[v]);\n    }\n    if(low[f]==dfn[f]){\n        col[f]=++co;\n        while(sta[tot]!=f){\n            col[sta[tot]]=co;\n            ww[co]+=W[sta[tot]],vv[co]+=v[sta[tot]];\n            tot--;\n        }\n        ww[co]+=W[sta[tot]],vv[co]+=v[sta[tot]];\n        tot--;\n    }return;\n}\nint f[MAXN];\nbool cmp(node1 x1,node1 x2){\n    if(x1.u==x2.u) return x1.v<x2.v;\n    return x1.u<x2.u;\n}\nint find(int xx){\n    if(f[xx]==xx) return xx;\n    return f[xx]=find(f[xx]);\n}\nvoid merge(int x1,int x2){\n    int t1=find(x1),t2=find(x2);\n    f[t2]=t1;\n    return;\n}\nint group[MAXN][MAXN],size[MAXN];\nvoid dfs(int f){\n    size[f]=1;\n    for(int i=head[f];i!=-1;i=x[i].nex){\n        dfs(x[i].v);\n        size[f]+=size[x[i].v];\n    }return;\n}\nint _MAXN[MAXN],root[MAXN];\nvoid build(){\n    for(int i=1;i<=co;i++) f[i]=i;\n    for(int i=1;i<=CNT;i++)\n        E[i].u=col[E[i].u],E[i].v=col[E[i].v];\n    sort(E+1,E+CNT+1,cmp);\n    memset(head,-1,sizeof(head)),cnt=0;\n    for(int i=1;i<=CNT;i++){\n        if((E[i].u!=E[i].v)&&(E[i].u!=E[i-1].u||E[i].v!=E[i-1].v)){\n            merge(E[i].u,E[i].v);\n            add(E[i].u,E[i].v);\n        }\n    }\n    memset(root,-1,sizeof(root));\n    for(int i=1;i<=co;i++) f[i]=find(f[i]);\n    for(int i=1;i<=co;i++){\n        memset(size,0,sizeof(size));\n        dfs(i);\n        if(size[i]>_MAXN[f[i]]){\n            _MAXN[f[i]]=size[i];\n            root[f[i]]=i;\n        }\n    }\n    for(int i=1;i<=co;i++)\n        if(root[i]!=-1)add(0,i);\n    ww[0]=1,vv[0]=0;\n    w++;\n}\nint dp[MAXN][MAXN];\nvoid dp_tree(int f,int fath){\n    for(int k=head[f];k!=-1;k=x[k].nex){\n        int v=x[k].v;\n        dp_tree(v,f);\n        for(int i=w;i>=0;i--){\n            for(int j=i;j>=0;j--) if(i-j>=ww[v]) {\n                dp[f][i]=max(dp[f][i],dp[f][j]+dp[v][i-j]);\n            }\n        }\n    }\n    for(int i=w;i>=ww[f];i--) dp[f][i]=dp[f][i-ww[f]]+vv[f];\n}\nint main(){\n    memset(head,-1,sizeof(head));\n    n=read(),w=read();\n    for(int i=1;i<=n;i++) W[i]=read();\n    for(int i=1;i<=n;i++) v[i]=read();\n    for(int i=1;i<=n;i++){\n        int u=read();\n        if(u) {\n            E[++CNT].u=u,E[CNT].v=i;\n            add(u,i); \n        }\n    }\n    for(int i=1;i<=n;i++)\n        if(!dfn[i]) tarjan(i,0);\n    build();\n    dp_tree(0,0);\n    cout<<dp[0][w];\n}\n```",
        "postTime": 1546008587,
        "uid": 87382,
        "name": "_sry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    },
    {
        "content": "\n\u4e00\u3001P2515\n\n\u56e0\u4e3a\u6bcf\u4e2a\u8f6f\u4ef6\u4e00\u6765\u7684\u8f6f\u4ef6\u53ea\u6709\u4e00\u4e2a\uff08\u5373\uff1a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\u8282\u70b9\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2aN\u4e2a\u8f6f\u4ef6\u5f62\u6210\u4e86\u68ee\u6797\u7ed3\u6784\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u591a\u4e2a\u8f6f\u4ef6\u662f\u53ef\u4ee5\u72ec\u7acb\u5b89\u88c5\u7684\u3002\n\n\u4e3a\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6240\u6709\u6811\u589e\u52a0\u4e00\u4e2a\u865a\u62df\u68390\uff0c\u5176wi=0\uff0cvi=0\u3002\n\n\u7528f[u][j]\u4ee3\u8868\u4e3a\u8282\u70b9u\u4e3a\u6839\u7684\u5b50\u6811\u5206\u914d\u4f53\u79ef\u4e3aj\u65f6\u8fd9\u68f5\u5b50\u6811\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u6536\u76ca\u3002\u8bbeu\u7684\u513f\u5b50\u4e3a\u96c6\u5408v={v1\uff0cv2\uff0cv3\u2026}\uff0c\u513f\u5b50\u4e2a\u6570\u8bb0\u4e3ap\u3002\u5f53\u5b89\u88c5\u4e86u\u8fd9\u4e2a\u8f6f\u4ef6\u540e\uff0c\u8003\u8651v1\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3av1\u4e3a\u6839\u7684\u5b50\u6811\u5206\u914d\u4f53\u79efk1\uff0c\u4e3av2\u5b50\u6811\u5206\u914d\u4f53\u79efk2,\u2026\u2026\u2211ki=j-1\u3002\n\nf[u][j]=max{f[v][ki]}+val[x]  (ki>=0,\u2211ki=j-1)\n\nf[u][0]=0\n\n\n\u4e8c\u3001\u5176\u5b9e\u672c\u95ee\u9898\u4e5f\u662f\u4e00\u4e2a \n#### \u201c\u5206\u7ec4\u80cc\u5305\u6a21\u578b\u201d\u3002\n\u5206\u7ec4\u80cc\u5305\uff1a\u6709N\u4ef6\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3aV\u7684\u80cc\u5305\uff0c\u7b2ci\u4ef6\u7269\u54c1\u7684\u8d39\u7528\u662fw[i]\uff0c\u4ef7\u503c\u662fc[i]\u3002\u8fd9\u4e9b\u7269\u54c1\u88ab\u5212\u5206\u4e3a\u82e5\u5e72\u7ec4\uff0c\u6bcf\u7ec4\u4e2d\u7684\u7269\u54c1\u4e92\u76f8\u51b2\u7a81\uff0c\u6700\u591a\u9009\u4e00\u4ef6\u3002\u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\u53ef\u4ee5\u4f7f\u83b7\u5f97\u7684\u4ef7\u503c\u6700\u5927\u3002\n\n\u95ee\u9898\u5206\u6790\uff1a\u8fd9\u4e2a\u95ee\u9898\u5373\u5bf9\u4e8e\u67d0\u7ec4\u7269\u54c1\u7684\u9009\u62e9\u7b56\u7565\u662f\u8981\u4e48\u9009\u67d0\u4e00\u4ef6\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\u3002\n\n#### \u72b6\u6001\uff1af[i][j]\u4ee3\u8868\u524di\u7ec4\u7269\u54c1\u9009\u53d6\u4f53\u79ef\u4e3aj\u7684\u7269\u54c1\u88c5\u5165\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n#### \u72b6\u6001\u8f6c\u79fb\uff1af[i][j]=max{ f[i-1][j],f[i-1][j-w[k]]+c[k]) w[k] \u7269\u54c1k\u5c5e\u4e8e\u7b2ci\u7ec4\n\n![](https://cdn.luogu.com.cn/upload/pic/45981.png)\n\n~~\u56fe\u7247\u5927\u5c0f\u600e\u4e48\u6539\u554aQAQ~~\n\n\u4e3a\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u4e2a\u80cc\u5305\u6a21\u578b\uff0c\u6211\u4eec\u5c06f[u][j]\u72b6\u6001\u4fee\u6539\u4e3af[u][i][j]\uff0c\u8868\u793a\u5728\u5b89\u88c5\u4e86\u8f6f\u4ef6u\u540e\uff0c\u4eceu\u7684\u524di\u4e2a\u513f\u5b50\u9009\u51fa\u4f53\u79ef\u4e3aj\u7684\u7269\u54c1\u88c5\u5165\u80cc\u5305\u65f6\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u3002\n\nu\u7684p\u4e2a\u513f\u5b50\u5c31\u662fp\u4e2a\u5206\u7ec4\uff0c\u5bf9u\u7684\u67d0\u4e2a\u513f\u5b50v1\uff0c\u53ea\u53ef\u80fd\u7531\u4e00\u79cd\u72b6\u6001\u8f6c\u79fb\u81f3u\uff08\u4e5f\u5373\u4e3av\u5206\u914d\u7684\u4f53\u79ef\u8981\u4e48\u662f0\uff0c\u8981\u4e48\u662f1\uff0c\u8981\u4e48\u662f2\u2026\u8981\u4e48\u662fj-1\uff09\uff0c\u4e5f\u5c31\u662fv1\u8fd9\u4e00\u7ec4\u91cc\u9762\u5171j\u4ef6\u7269\u54c1\u4e14\u4e92\u76f8\u51b2\u7a81\uff0c\u53ea\u80fd\u9009\u53d6\u4e00\u4ef6\u3002\n\nf[u][i][j]=max{ f[u][i-1][j],f[u][i-1][j-w[k]]+c[k]) w[k] \u7269\u54c1k\u5c5e\u4e8e\u7b2ci\u7ec4\n\n##### *f[u][i-1][j]:f[u][i-1][j]\u4e5f\u5373\u7b2ci\u7ec4\u7269\u54c1\u90090\u8fd9\u79cd\u7b56\u7565\u3002\n\n##### *f[u][i-1][j-w[k]]+c[k]:\u7b2ci\u7ec4\u7b2ck\u4ef6\u7269\u54c1\u7684w[k]=k,c[k]=f[v][pv][k],pv\u662fv\u7684\u513f\u5b50\u8282\u70b9\u4e2a\u6570\u3002\n\n#### \u4f18\u5316\uff1a\u72b6\u6001\u8868\u793a\u4e2d\uff0ci\u8fd9\u4e00\u7ef4\u5ea6\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u5faa\u73af\u4f53\u79efv\u65f6\uff0c\u5c31\u8981\u91c7\u7528\u5012\u5e8f\u5faa\u73af\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0&&\u8d60\u9001\u6570\u636eQwQ\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<stack>\nusing namespace std;\nstruct node{\n    int next,to;\n};\nint w[1005],val[1005],f[1005][505];\nint n,m;\n//\u539f\u56fe \nnode edge[105];\nint head[105],cnt=0;\nvoid add_edge(int from,int to){\n    cnt++;\n    edge[cnt].next=head[from];\n    edge[cnt].to=to;\n    head[from]=cnt;\n}\n//\u65b0\u56fe \nint h[1005],ct=0;\nnode eg[1005];\nbool query(int u,int v){\n    for(int i=h[u];i!=0;i=eg[i].next){\n        if(eg[i].to==v)return true;\n    }\n    return false;\n}\nvoid in(int u,int v){\n    ct++;\n    eg[ct].next=h[u];\n    eg[ct].to=v;\n    h[u]=ct;\n}\n//\u7f29\u70b9 \nint ti=0,dfn[105],low[1005],color[1005],c=0,wx[1005],vx[1005];\nstack<int>s;\nbool instack[105];\nvoid tarjan(int u){\n    ti++;\n    dfn[u]=low[u]=ti;\n    s.push(u);\n    instack[u]=true;//\u6807\u8bb0\u8be5\u70b9\u5728\u6808\u4e2d \n    for(int i=head[u];i!=0;i=edge[i].next){\n        int v=edge[i].to;\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(instack[v]){\n            low[u]=min(low[u],dfn[v]);\n        }\n    }\n    if(dfn[u]==low[u]){\n        c++;//\u5c06\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7f29\u70b9\u4e3ac \n        while(s.top()!=u){\n            color[s.top()]=c;\n            wx[c]+=w[s.top()];//\u4f53\u79ef\u7d2f\u8ba1 \n            vx[c]+=val[s.top()];//\u4ef7\u503c\u7d2f\u8ba1 \n            instack[s.top()]=false;\n            s.pop();\n        }\n        color[s.top()]=c;\n        wx[c]+=w[s.top()];\n        vx[c]+=val[s.top()];\n        instack[s.top()]=false;\n        s.pop();\n    }\n}\n//\u80cc\u5305 \nvoid dfs(int u){\n    f[u][0]=0;\n    for(int i=h[u];i!=0;i=eg[i].next){\n        int v=eg[i].to;\n        dfs(v);\n        for(int j=m;j>=0;j--){\n            for(int k=0;k<=j;k++){\n                f[u][j]=max(f[u][j],f[u][j-k]+f[v][k]);\n            }\n        }\n    }\n    for(int j=m;j>=0;j--){\n\t\tif(j-wx[u]>=0)f[u][j]=f[u][j-wx[u]]+vx[u];\n\t\telse f[u][j]=0xcfffffff;\n    } \n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    cin>>w[i];\n    for(int i=1;i<=n;i++)\n    cin>>val[i];\n    for(int i=1;i<=n;i++){\n        int p;\n        cin>>p;\n        if(p==0)continue;\n        add_edge(p,i);\n    }\n    memset(f,0xcf,sizeof(f));\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])tarjan(i);//\u7f29\u70b9 \n    int du[105]={0};\n    for(int u=1;u<=n;u++){//\u904d\u5386\u539f\u56fe\u7684\u6bcf\u4e00\u6761\u8fb9\u91cd\u65b0\u5efa\u56fe \n        \n        for(int i=head[u];i!=0;i=edge[i].next){\n            int v=edge[i].to;\n            if(color[u]==color[v])continue;\n            if(!query(color[u],color[v])){\n                in(color[u],color[v]);\n                du[color[v]]++;\n            }\n        } \n    }\n    \n    for(int u=1;u<=c;u++){\n        if(du[u]==0)in(0,u);\n    }\n    \n    dfs(0);\n    int ans=-1;\n    for(int j=m;j>=0;j--)ans=max(ans,f[0][j]);\n    cout<<ans<<endl;\n    return 0;\n}\n/*\n3 10\n0 10 0\n2 3 4\n0 1 1\n\n\n5 10\n2 2 2 2 2\n1 2 3 4 5\n3 1 2 0 4\n\n6 10\n1 1 1 1 1 1\n1 2 3 4 5 6\n2 3 1 1 2 3\n\n6 10\n0 0 0 0 0 0\n1 2 3 4 5 6\n2 3 1 1 2 3\n*/\n\n```\n\n\n",
        "postTime": 1544594158,
        "uid": 48744,
        "name": "TLE\u81ea\u52a8\u673a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2515 \u3010[HAOI2010]\u8f6f\u4ef6\u5b89\u88c5\u3011"
    }
]