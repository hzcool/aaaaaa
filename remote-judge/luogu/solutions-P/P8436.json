[
    {
        "content": "# \u4e00 \u89e3\u9898\u601d\u8def\n\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u5176\u5b9e\u662f\u5272\u8fb9\u7684\u5347\u7ea7\u7248\uff0c\u591a\u51e0\u884c\u4ee3\u7801\uff0c\u8fd9\u91cc\u6211\u5c31\u5148\u4ecb\u7ecd\u5272\u8fb9\u7684\u6c42\u6cd5\uff0c\u518d\u4ecb\u7ecd\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u6c42\u6cd5\u3002\n## \u6c42\u5272\u8fb9\n\u6c42\u5272\u8fb9\u6240\u7528\u7684\u662f tarjan \u7b97\u6cd5\uff0c\u5176\u672c\u8d28\u662f\u6839\u636e\u201c\u8ffd\u6eaf\u503c\u201d\u6765\u5224\u65ad\u67d0\u4e00\u6761\u8fb9\u80fd\u5272\u53bb\u56fe\u662f\u5426\u4f9d\u7136\u8fde\u901a\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u5f15\u5165\u4e24\u4e2a\u6570\u7ec4\uff1a\n- $low_x$\uff1a\u8ffd\u6eaf\u503c\u6570\u7ec4\uff0c\u8868\u793a\u4ee5 $x$ \u4e3a\u6839\u7684\u641c\u7d22\u6811\u4e0a\u7684\u70b9\u4ee5\u53ca\u901a\u8fc7**\u4e00\u6761**\u4e0d\u5728\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\u80fd\u8fbe\u5230\u7684\u7ed3\u70b9\u4e2d\u7684\u6700\u5c0f\u7f16\u53f7\u3002\n\n**\u7b80\u5355\u6765\u8bf4\uff0c\u8ffd\u6eaf\u503c\u8bb0\u5f55\u7684\u662f\u67d0\u8282\u70b9\u901a\u8fc7\u4e00\u6761\u4e0d\u5728\u5b50\u6811\u4e0a\u7684\u8fb9\u201c\u5411\u4e0a\u201d\u80fd\u5230\u8fbe\u7684\u6700\u5c0f\u7f16\u53f7\u7ed3\u70b9\u3002**\n\n- $dfn_x$\uff1a\u65f6\u95f4\u6233\u6570\u7ec4\uff0c\u8868\u793a $x$ \u53f7\u7684\u7f16\u53f7\uff08\u6309\u7167\u8bbf\u95ee\u987a\u5e8f\u7f16\u53f7\uff09\n\n\u5728\u521d\u59cb\u7684\u60c5\u51b5\u4e0b\uff0c$low_x = dfn_x$ \u4e5f\u5c31\u662f\u67d0\u4e2a\u70b9\u7684\u8ffd\u6eaf\u503c\u6700\u5f00\u59cb\u662f\u81ea\u5df1\u3002\n\n\u6bd4\u5982\u8fd9\u5c31\u662f\u6837\u4f8b\u4e2d\u56fe\u7684 $low$\u3001$dfn$ \u7684\u4fe1\u606f\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/hmegouhv.png)\n\n\u8ffd\u6eaf\u503c\u6570\u7ec4\u7684\u66f4\u65b0\u6709\u4ee5\u4e0b\u4e24\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\uff08\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\uff0c\u6211\u4eec\u4ee4 $x$ \u7ed3\u70b9\u6709\u4e00\u6761\u8fb9\u8fde\u5411 $y$ \u7ed3\u70b9\uff09\uff1a\n- \u5982\u679c $y$ \u662f $x$ \u641c\u7d22\u6811\u4e0a\u7684\u7ed3\u70b9\uff08\u8fd8\u6ca1\u6709\u88ab\u6807\u8bb0\u65f6\u95f4\u6233\uff09\u90a3\u4e48\uff0c$low_x = \\min(low_x, low_y)$\u3002\n- \u5426\u5219\uff08$y$ \u4e0d\u662f\u641c\u7d22\u6811\u4e0a\u7684\u7ed3\u70b9\uff09 $low_x = \\min(low_x, dfn_y)$\n\n**\u6ce8\u610f\uff1a\u540e\u8005\u662f $dfn_y$**\n\n> \u901a\u8fc7**\u4e00\u6761**\u4e0d\u5728\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\n\n**\u53ea\u6709\u4e00\u6761!**\n\n\u5272\u8fb9\u7684\u5224\u5b9a:\n\t\n\u5982\u679c $x$ \u5230 $y$ \u7684\u65e0\u5411\u8fb9\u662f\u5272\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53\uff08\u5145\u8981\u6761\u4ef6\uff09 $dfn_x \\lt low_y$\n\n\u89e3\u91ca\uff1a\u5982\u679c\u4ece $x$ \u7ecf\u8fc7\u4e00\u6761\u201c\u56de\u8fb9\u201d\u5230\u4e0d\u4e86 $y$\uff0c\u90a3\u4e48\u663e\u7136\u8fd9\u662f\u4e00\u6761\u5272\u8fb9\u3002\n\n\u8bf7\u8fd8\u662f\u770b\u4e0a\u9762\u90a3\u5f20\u56fe\uff0c\u753b\u4e0a\u7ea2\u7ebf\u7684\u5c31\u662f\u5272\u8fb9\uff0c\u628a\u5b83\u5207\u65ad\u540e\uff0c\u5c31\u4f1a\u4f7f\u5f97\u67d0\u4e2a\u70b9\u65e0\u6cd5\u56de\u5230\u81ea\u5df1/\u4e0a\u9762\u7684\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e00\u6761\u8fb9\u5220\u53bb\u540e\uff0c\u56fe\u5c31\u4e0d\u518d\u8fde\u901a\u3002\n\n**\u6ce8\u610f\uff1a\u540e\u8005\u662f $dfn_y$**\n\n\u4ee3\u7801\u5b9e\u73b0\u65f6\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u5c31\u662f\u5efa\u56fe\u65f6\u8fb9\u7684\u7f16\u53f7\u4ece 2 \u5f00\u59cb\u6807\uff0c\u8fd9\u6837\u5c31\u80fd\u4ee5 $O(1)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6c42\u51fa\u67d0\u8fb9\u7684\u9006\u5411\u8fb9\uff08\u5f02\u6216\u8fd0\u7b97\uff09\uff0c\u5e76\u4e14\u6807\u8bb0\u5272\u8fb9\u3002\n\n## \u6c42\u53cc\u8054\u901a\u5206\u91cf\n\u7531\u4e8e\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u53bb\u9664\u4efb\u610f\u4e00\u6761\u8fb9\u540e\uff0c\u5206\u91cf\u4f9d\u7136\u662f\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d**\u6ca1\u6709\u5272\u8fb9**\uff08\u4e0e\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e0d\u540c\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u5272\u8fb9\u201c\u62c6\u6389\u201d\uff0c\u6765\u6c42\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u56fe\u7247\u89e3\u91ca\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7omwlai3.png)\n\n\u8bf7\u60a8\u770b\uff0c\u628a\u5272\u8fb9\u53bb\u6389\u540e\uff0c\u4e0d\u5c31\u5269\u4e0b\u8fde\u901a\u5206\u91cf\u4e86\u5417\uff1f\n\n\u5f53\u6211\u4eec\u6c42\u51fa\u5272\u8fb9\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u4e00\u4e2a dfs \u6765\u5206\u79bb\u51fa\u6240\u6709\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff1a\n\n```cpp\nvoid dfs(int node, int ndcc)\n{\n\tdcc[node] = ndcc;\n\tAns[ndcc - 1].push_back(node);\n\tfor (int i = head[node]; i; i = e[i].nxt)\n\t{\n\t\tint to = e[i].to;\n\t\tif (dcc[to] || b[i]) continue;\n\t\t// \u5982\u679c\u8fd9\u4e2a\u70b9\u5c5e\u4e8e\u5176\u4ed6\u5206\u91cf\u6216\u8005\u8fd9\u6761\u8fb9\u662f\u5272\u8fb9\uff0c\u5c31\u505c\u6b62\u641c\u7d22\u3002\n\t\tdfs(to, ndcc);\n\t}\n}\n```\n# \u4e8c \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nconst int maxn = 500010, maxm = 4000010;\nint n, m, cnt = 1, ans, id;\nint dfn[maxn], low[maxn], head[maxn], dcc[maxn];\nstruct edge\n{\n\tint to, nxt;\n}e[maxm];\nbool b[maxm];\nvector <vector <int> > Ans;\nvoid add(int f, int t)\n{\n\te[++cnt].to = t;\n\te[cnt].nxt = head[f];\n\thead[f] = cnt;\n}\nvoid tarjan(int node, int in_edge)\n{\n\tdfn[node] = low[node] = ++id;\n\tfor (int i = head[node]; i; i = e[i].nxt)\n\t{\n\t\tconst int to = e[i].to;\n\t\tif (dfn[to] == 0)\n\t\t{\n\t\t\ttarjan(to, i);\n\t\t\tif (dfn[node] < low[to])\n\t\t\t\tb[i] = b[i ^ 1] = 1;\n\t\t\tlow[node] = min(low[node], low[to]);\n\t\t}\n\t\telse if (i != (in_edge ^ 1))\n\t\t\tlow[node] = min(low[node], dfn[to]);\n\t}\n}\nvoid dfs(int node, int ndcc)\n{\n\tdcc[node] = ndcc;\n\tAns[ndcc - 1].push_back(node);\n\tfor (int i = head[node]; i; i = e[i].nxt)\n\t{\n\t\tint to = e[i].to;\n\t\tif (dcc[to] || b[i]) continue;\n\t\tdfs(to, ndcc);\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tint f, t;\n\t\tscanf(\"%d %d\", &f, &t);\n\t\tif (f == t) continue;\n\t\tadd(f, t);\n\t\tadd(t, f);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (dfn[i] == 0)\n\t\t\ttarjan(i, 0);\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (dcc[i] == 0)\n\t\t{\n\t\t\tAns.push_back(vector <int>());\n\t\t\tdfs(i, ++ans);\n\t\t}\n\tprintf(\"%d\\n\", ans);\n\tfor (int i = 0; i < ans; ++i)\n\t{\n\t\tprintf(\"%d\", Ans[i].size());\n\t\tfor (int j = 0; j < Ans[i].size(); ++j)\n\t\t\tprintf(\" %d\", Ans[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n\n# \u4e09 \u8bf4\u660e\n\u672c\u9898\u89e3\u4e2d\u7684\u90e8\u5206\u5185\u5bb9\u5f15\u81ea\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\uff0c\u800c\u5927\u90e8\u5206\u5185\u5bb9\u4e3a\u4f5c\u8005\u5b66\u4e60\u540e\u81ea\u6211\u5f52\u7eb3\u7684\u4ea7\u7269\u3002\n\n# \u56db \u63d0\u793a\uff08\u5e38\u89c1\u7684\u9519\u8bef\uff09\n\u8bf4\u660e\uff1a\u672c\u90e8\u5206\u90e8\u5206\u5185\u5bb9\u603b\u7ed3\u81ea\u8ba8\u8bba\u533a\u3002\n\n- \u6d4b\u8bd5\u70b9 1\u30012 Wrong Answer\uff1a\u56fe\u53ef\u80fd\u6709\u91cd\u8fb9\uff0c\u8bf7\u7528\u5408\u9002\u7684\u5b58\u56fe\u65b9\u5f0f\u3002\n\n- \u6d4b\u8bd5\u70b9 9\u300110 TLE/MLE\uff1a\u5efa\u8bae\u4f7f\u7528\u4e8c\u7ef4 vector\uff0c\u6570\u636e\u4e2d\u5b58\u5728\u67d0\u4e9b\u5206\u91cf\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u800c\u5206\u91cf\u5f88\u591a\u7684\u60c5\u51b5\u3002\n\n# \u4e94 Hack \u6570\u636e\u5f81\u96c6\n\n\u6211\u662f\u9898\u76ee\u63d0\u4f9b\u8005\uff0c\u5982\u679c\u60a8\u6709 hack \u6570\u636e\uff0c\u8bf7\u5728\u6b64\u5904\u56de\u590d\u5e76 at \u6211\uff0c\u6211\u5c06\u4f1a\u628a hack \u6570\u636e\u52a0\u5165\u6d4b\u8bd5\u6570\u636e\u4e2d\u3002\n\n\u53cd\u9988 hack \u6570\u636e\u8981\u6c42\uff1a\n\n- \u7ed9\u51fa\u88ab hack \u7684\u4ee3\u7801\u7684\u94fe\u63a5\n\n- \u7ed9\u51fa\u6570\u636e\uff08\u5982\u679c\u6570\u636e\u8fc7\u5927\u53ef\u4ee5\u63d0\u4f9b\u751f\u6210\u5668\uff09\n\n- hack \u524d\u81ea\u67e5\u6570\u636e\u662f\u5426\u7b26\u5408\u6570\u636e\u8303\u56f4\n\n\u611f\u8c22\u60a8\u7684\u8d21\u732e\u3002",
        "postTime": 1657443979,
        "uid": 425694,
        "name": "\u90d1\u671d\u66e6zzx",
        "ccfLevel": 6,
        "title": "\u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf \u9898\u89e3"
    },
    {
        "content": "\u66f4\u65b0\uff1a2022.9.21 \u4fee\u6b63\u4ee3\u7801\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a[\u5272\u8fb9](https://www.cnblogs.com/ljy-endl/p/11595161.html)\n# \u8fb9\u53cc\u8fde\u901a\u5206\u91cf\n### \u6982\u5ff5\n\n\u82e5\u4e00\u5f20\u65e0\u5411\u8fde\u901a\u56fe\u4e0d\u5b58\u5728\u6865\uff08\u5272\u8fb9\uff09\uff0c\u5219\u79f0\u5b83\u4e3a\u201c\u8fb9\u53cc\u8fde\u901a\u56fe\u201d\u3002\n\n\u65e0\u5411\u56fe\u7684\u6781\u5927\u8fb9\u53cc\u8054\u901a\u5b50\u56fe\u88ab\u79f0\u4e3a\u201c\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u201d\uff0c\u7b80\u8bb0\u4e3a\u201ce-DCC\u201d\u3002\n\n\u5728\u4e0a\u9762\u7684\u5b9a\u4e49\u4e2d\uff0c\u6211\u4eec\u79f0\u4e00\u4e2a\u53cc\u8fde\u901a\u5b50\u56fe $G'=(V',E')$ \u201c\u6781\u5927\u201d\uff08\u5176\u4e2d $V'\\subseteq V$, $E'\\subseteq E$\uff09\uff0c\u662f\u6307\u4e0d\u5b58\u5728\u5305\u542b $G'$ \u7684\u66f4\u5927\u7684\u5b50\u56fe $G''=(V'',E'')$\uff0c\u6ee1\u8db3 $V'\\subseteq V''\\subseteq V$, $E' \\subseteq E''\\subseteq E$ \u5e76\u4e14 $G''$ \u4e5f\u662f\u53cc\u8fde\u901a\u5b50\u56fe\u3002\n\n### \u5b9a\u7406\n\n\u4e00\u5f20\u65e0\u5411\u56fe\u65f6\u201c\u8fb9\u53cc\u8fde\u901a\u56fe\u201d\uff0c\u5f53\u4e14\u4ec5\u5f53\u4efb\u610f\u4e00\u6761\u8fb9\u90fd\u5305\u542b\u5728\u81f3\u5c11\u4e00\u4e2a\u7b80\u5355\u73af\u4e2d\u3002\n\n### \u6c42\u6cd5\n\n\u53ea\u9700\u6c42\u51fa\u65e0\u5411\u56fe\u4e2d\u6240\u6709\u7684\u6865\uff0c\u628a\u6865\u90fd\u5220\u9664\u540e\uff0c\u65e0\u5411\u56fe\u4f1a\u5206\u6210\u82e5\u5e72\u4e2a\u8fde\u901a\u5757\uff0c\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u90fd\u662f\u4e00\u4e2a\u201c\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u201d\u3002\n\n\u5728\u5177\u4f53\u7684\u7a0b\u5e8f\u5b9e\u73b0\u4e2d\uff0c\u4e00\u822c\u5148\u7528 Tarjan \u7b97\u6cd5\u6807\u8bb0\u51fa\u6240\u6709\u7684\u6865\u8fb9\u3002\u7136\u540e\uff0c\u518d\u5bf9\u6574\u4e2a\u65e0\u5411\u56fe\u6267\u884c\u4e00\u6b21\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff08\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u8bbf\u95ee\u6865\u8fb9\uff09\uff0c\u5212\u5206\u51fa\u6bcf\u4e2a\u8fde\u901a\u5757\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2000010, M = 6000010;\nint head[N], ver[M * 2], Next[M * 2];\nint dfn[N], low[N], c[N];//c[x] \u8868\u793a\u8282\u70b9 x \u6240\u5c5e\u7684\u201c\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u201d\u7684\u7f16\u53f7\u3002\nint n, m, tot = 1, num, dcc;\nbool bridge[N * 2];\nvector<int> ans[N * 2]; //\u5b58\u50a8\u5404\u4e2a\u8fde\u901a\u5757\u53ca\u5176\u5185\u90e8\u8282\u70b9\u7f16\u53f7\nvoid add(int x, int y) {//\u90bb\u63a5\u8868\u5b58\u56fe\n\tver[++tot] = y, Next[tot] = head[x], head[x] = tot;\n}\nvoid tarjan(int x, int in_edge) { //\u6c42\u5272\u8fb9\n\tdfn[x] = low[x] = ++num;\n\tfor (int i = head[x]; i; i = Next[i]) {\n\t\tint y = ver[i];\n\t\tif (!dfn[y]) {\n\t\t\ttarjan(y, i);\n\t\t\tlow[x] = min(low[x], low[y]);\n\t\t\tif (low[y] > dfn[x])\n\t\t\t\tbridge[i] = bridge[i ^ 1] = true;\n\t\t}\n\t\telse if (i != (in_edge ^ 1))\n\t\t\tlow[x] = min(low[x], dfn[y]);\n\t}\n}\nvoid dfs(int x) {\n\tc[x] = dcc;\n\tif (x) //\u9632\u6b62\u52a0\u5165 0\n\t\tans[dcc].push_back(x); \n\tfor (int i = head[x]; i; i = Next[i]) {\n\t\tint y = ver[i];\n\t\tif (c[y] || bridge[i]) continue;\n\t\tdfs(y);\n\t}\n}\nint main(){\n\tios::sync_with_stdio(false); //\u5173\u95ed\u4e0e scanf \u7684\u540c\u6b65\u6765\u63d0\u901f\n    cin >> n >> m;\n    for (register int i = 1; i <= m; i++) {\n    \tint x, y;\n    \tcin >> x >> y;\n    \tadd(x, y), add(y, x);\n\t}\n\tfor (register int i = 1; i <= n; i++)\n\t\tif (!dfn[i]) tarjan(i, 0);\n\tfor (register int i = 1; i <= n; i++)\n\t\tif (!c[i]) {\n\t\t\t++dcc;\n\t\t\tdfs(i);\n\t\t}\n\tcout << dcc << \"\\n\";\n\tfor (register int i = 1; i <= dcc; i++) { //\u8f93\u51fa\n\t\tcout << ans[i].size();\n\t\tfor (register int j = 0; j < ans[i].size(); j++)\n\t\t\tcout << ' ' << ans[i][j];\n\t\tcout << \"\\n\";\n\t}\n    return 0;\n}\n```\n\n### \u63a8\u8350\n\n\u63a8\u8350\u8054\u7cfb\u914d\u5957\u7684[\u70b9\u53cc\u8fde\u901a\u5206\u91cf](https://www.luogu.com.cn/problem/P8435)\u3002\n\n\u6ce8\uff1a\u672c\u6587\u6284\u81ea lyd \u84dd\u4e66\u3002",
        "postTime": 1657530897,
        "uid": 663517,
        "name": "Jeremiahy",
        "ccfLevel": 0,
        "title": "P8436 \u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf \u9898\u89e3"
    },
    {
        "content": "2022/8/20 \u4fee\u6539\uff1a\u5bf9\u4e8e SCC \u90e8\u5206\u7684\u8bf4\u660e\u4e0d\u4e25\u8c28\uff0c\u5df2\u4fee\u6b63\n\n#### Tarjan-E-DCC \u6c42\u65e0\u5411\u56fe\u8fb9\u53cc\u8054\u901a\u5206\u91cf(E-DCC)\u7684\u7b97\u6cd5\n\n\u6c42\u89e3\u65e0\u5411\u56fe\u7684\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u6709\u4e00\u79cd\u5f88\u597d\u7406\u89e3\u7684\u529e\u6cd5\u662f\uff1a\u7531\u4e8e\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u4e2d\u4e0d\u5b58\u5728\u6865\uff0c\u6240\u4ee5\u5b9e\u8d28\u4e0a\u53ea\u9700\u8981\u628a\u6865\u5168\u90e8\u6c42\u51fa\u6765\u518d\u8dd1\u4e00\u904d\u4e0d\u8fc7\u6865\u7684 dfs \u5373\u53ef\u6c42\u51fa\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u3002\n\n```cpp\nvoid tarjan(int x,int father){\n\tdfn[x]=low[x]=++nowtime;\n\tfor(register int i=head[x];i;i=e[i].next){\n\t\tint v(e[i].to);\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v,i);\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t\tif(low[v]>dfn[x])bridges[i]=bridges[i^1]=true;\n\t\t}else if(i!=(father^1))low[x]=min(low[x],dfn[v]);\n \t}\n}\nvoid dfs(int x){\n    vis[x]=1;\n    for(register int i=head[x];i;i=e[i].next){\n        if(bridges[i])continue;\n        int v(e[i].to);\n        if(!vis[v])dfs(v);\n    }\n}\nint main(){\n\tfor(register int i=1;i<=n;++i)\n\t\tif(!dfn[i])tarjan(i,i);\n    for(register int i=1;i<=n;++i)\n        if(!vis[i]){\n            dfs(i);\n            ++dcccnt;\n        }\n}\n```\n\n\u7b2c\u4e8c\u79cd\u6c42\u89e3\u65b9\u6cd5\u53ef\u4ee5\u8054\u7cfb\u6c42\u89e3 SCC \u65f6\u7684\u77e5\u8bc6\u7406\u89e3\uff1a\u5728\u6c42\u6865\u65f6\u9650\u5236\u4e86\u8fd4\u56de\u7236\u4eb2\u7684\u8fd4\u7956\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u9009\u5b9a root \u8282\u70b9\u4e4b\u540e\uff0c\u4e00\u5f20\u65e0\u5411\u56fe\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u5f20\u6709\u5411\u56fe\uff08\u5b9e\u9645\u4e0a\u8fd9\u5f20\u6709\u5411\u56fe\u5c31\u662f\u641c\u7d22\u6811\uff09\uff0c\u5f80\u4ec0\u4e48\u65b9\u5411\u8d70\uff0c\u4ec0\u4e48\u5730\u65b9\u4f1a\u5728\u641c\u7d22\u6811\u4e0a\u5f62\u6210\u6709\u5411\u73af\uff0c\u90fd\u5df2\u7ecf\u662f\u56fa\u5b9a\u4e0b\u6765\u7684\u4e86\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4eff\u7167\u6c42 SCC \u65f6\u7684\u601d\u8def\uff0c\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u800c\u5904\u4e8e\u4e24\u4e2a\u4e0d\u540c\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u4e0d\u80fd\u76f8\u4e92\u5230\u8fbe\uff0c\u800c\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u6070\u597d\u662f\u6ca1\u6709\u6865\u7684\u8054\u901a\u5206\u91cf\uff0c\u6211\u4eec\u5f15\u51fa\u4e00\u4e2a\u975e\u5e38\u5bb9\u6613\u60f3\u7684\u7ed3\u8bba\uff1a\u5728\u65e0\u5411\u56fe\u4e2d\u53ea\u8981\u4e00\u4e2a\u5206\u91cf\u4e2d\u6ca1\u6709\u6865\uff0c\u90a3\u4e48\u8be5\u5206\u91cf\u5728 Tarjan-Bridge \u7b97\u6cd5\u62bd\u8c61\u51fa\u7684\u6709\u5411\u56fe\u4e2d\u4e00\u5b9a\u5f3a\u8fde\u901a\uff0c\u53cd\u8fc7\u6765\u8bf4\uff0c\u88ab\u62bd\u8c61\u4e3a\u6709\u5411\u56fe\u7684\u65e0\u5411\u56fe\u4e2d\u7684\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5728\u539f\u56fe\u4e2d\u662f\u4e00\u5b9a\u4e00\u4e2a\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u3002\u56e0\u6b64\u5728\u5df2\u7ecf\u88ab\u62bd\u8c61\u6210\u6709\u5411\u56fe\u7684\u65e0\u5411\u56fe\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u6070\u6070\u662f\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u3002\n\n\u5bf9\u4e0a\u8ff0\u7ed3\u8bba\u4f5c\u4e00\u4e2a\u7b80\u8981\u4f46\u4e0d\u4e25\u8c28\u7684\u8bf4\u660e\uff1a\u8003\u8651 Tarjan-Bridge \u7b97\u6cd5\u5b9e\u9645\u4e0a\u62bd\u8c61\u51fa\u7684\u6709\u5411\u56fe\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u68f5\u641c\u7d22\u6811\uff0c\u800c\u5728\u8be5\u641c\u7d22\u6811\u4e0a\u6784\u6210\u73af\u5f53\u4e14\u4ec5\u5f53\u51fa\u73b0\u8fd4\u7956\u8fb9\uff0c\u5373\u5728\u65e0\u5411\u56fe\u4e2d\u8be5\u5206\u91cf\u5185\u4e0d\u4f1a\u51fa\u73b0\u6865\uff0c\u5bb9\u6613\u53d1\u73b0\u7684\u662f\u641c\u7d22\u6811\u6700\u7ec8\u53ef\u4ee5\u88ab\u5212\u5206\u4e3a\u7c7b\u4f3c\u73af-\u6865-\u73af\u7684\u7ed3\u6784\uff0c\u4e0e\u8fb9\u53cc\u8054\u901a\u5206\u91cf\u7684\u5b9a\u4e49\u5b9e\u9645\u4e0a\u662f\u76f8\u7b26\u7684\u3002\u5173\u4e8e\u5176\u4e3a\u4ec0\u4e48\u662f\u6781\u5927\u7684\uff0c\u8fd9\u70b9\u53ef\u4ee5\u53c2\u7167\u5bf9\u4e8e\u6c42 SCC \u7b97\u6cd5\u4e2d\u89e3\u91ca\u201c\u4e3a\u4ec0\u4e48\u73af\u5185\u8def\u5f84\u4e0d\u5f71\u54cd\u7ed3\u679c\u201d\u7684\u65b9\u6cd5\u3002\n\n\u8fd9\u6837\u60f3\u7684\u8bdd\uff0c\u5b9e\u9645\u4e0a\u8fd9\u79cd\u65b9\u6cd5\u662f\u628a\u65e0\u5411\u56fe\u62bd\u8c61\u4e3a\u6709\u5411\u641c\u7d22\u6811\uff0c\u901a\u8fc7\u641c\u7d22\u6811\u7684\u6027\u8d28\u5229\u7528\u5bf9\u4e8e\u6709\u5411\u56fe\u6c42 SCC \u7684\u65b9\u6cd5\u6c42\u51fa\u8fb9\u53cc\u8054\u901a\u5206\u91cf\uff0c\u8fd9\u79cd\u62bd\u8c61\u65b9\u5f0f\u4ee4\u4eba\u62cd\u624b\u79f0\u5999\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid tarjan(int x,int father){\n\tdfn[x]=low[x]=++nowtime;\n\ts.push(x);\n\tfor(register int i=head[x];i;i=e[i].next){\n\t\tint v(e[i].to);\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v,i);\n\t\t\tlow[x]=Min(low[x],low[v]);\n\t\t}else if(i!=(father^1))low[x]=Min(low[x],dfn[v]);\n \t}\n\tif(dfn[x]==low[x]){\n\t\t++dcccnt;\n\t\tint k;\n\t\tdo{\n\t\t\tk=s.pop();\n\t\t\tbelong[k]=dcccnt;\n\t\t}while(k!=x);\n\t}\n}\nint main(){\n\tfor(register int i=1;i<=n;++i)\n\t\tif(!dfn[i])tarjan(i,i);\n}\n```",
        "postTime": 1659688473,
        "uid": 160363,
        "name": "\u4e1c\u706f",
        "ccfLevel": 5,
        "title": "P8436 \u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf"
    },
    {
        "content": "\u5728\u8fdb\u5165\u672c\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u5148\u638c\u63e1\u51e0\u4e2a\u5b9a\u4e49\r\n\r\n\r\n------------\r\n### 1.\u65f6\u95f4\u6233 ###\r\n\u5728\u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u6309\u7167\u6bcf\u4e2a\u8282\u70b9\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\u987a\u5e8f\uff0c\u4f9d\u6b21\u7ed9\u4e88 $N$ \u4e2a\u8282\u70b9 $1-N$ \u7684\u6574\u6570\u6807\u8bb0\uff0c\u8be5\u6807\u8bb0\u88ab\u79f0\u4e3a\u201c\u65f6\u95f4\u6233\u201d\uff0c\u8bb0\u4e3a $dfn_x$\u3002\r\n\r\n### 2.\u641c\u7d22\u6811 ###\r\n\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c\u641c\u7d22\u6811\u5c31\u662f\u6307\u5728\u65e0\u5411\u56fe\uff08\u672c\u9898\u4e3a\u65e0\u5411\u56fe\uff09\u4e2d\uff0c\u4efb\u9009\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\uff0c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u6574\u4e2a\u56fe\uff0c\u6bcf\u4e2a\u70b9\u53ea\u8bbf\u95ee\u4e00\u6b21\u6240\u6784\u6210\u7684\u7684\u8def\u5f84\u3002\u5b83\u7684\u6027\u8d28\u4e0e\u6811\u4e00\u6837\uff0c\u4e24\u70b9\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\u3002\uff08\u5f62\u6210\u7684\u68ee\u6797\u9664\u5916\uff09\r\n\r\n### 3.\u8ffd\u6eaf\u503c ###\r\n\u8ffd\u6eaf\u503c\u7528 $low_x$ \u8868\u793a\uff0c\u4ee4 $subtree_x$ \u8868\u793a\u641c\u7d22\u6811\u4e2d\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u3002$low_x$ \u5b9a\u4e49\u4e3a\u4ee5\u4e0b\u8282\u70b9\u7684\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u503c\uff1a  \r\n1. $subtree_x$ \u4e2d\u7684\u8282\u70b9\uff1b  \r\n2. \u901a\u8fc7 $1$ \u6761\u4e0d\u5728\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\uff0c\u80fd\u591f\u8fbe\u5230 $subtree_x$ \u7684\u8282\u70b9\u3002(\u53ef\u4ee5\u753b\u56fe\u7406\u89e3\u4e00\u4e0b)\r\n\r\n### 4.\u6865\uff08\u5272\u8fb9\uff09 ###\r\n\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u901a\u65e0\u5411\u56fe\uff0c\u82e5\u5b58\u5728\u4e00\u6761\u8fb9\uff0c\u4f7f\u5f97\u53bb\u6389\u8fd9\u6761\u8fb9\u540e\uff0c\u8fde\u901a\u5757\u5206\u4e3a\u4e24\u4e2a\u4e0d\u8fde\u63a5\u7684\u90e8\u5206\uff0c\u5219\u79f0\u6539\u8fb9\u8be5\u65e0\u5411\u56fe\u7684\u6865\uff08\u5272\u8fb9\uff09\u3002\uff08\u4e00\u5f20\u56fe\u53ef\u80fd\u4e0d\u53ea\u6709\u4e00\u4e2a\u6865\uff09\r\n\r\n### 5.\u5272\u8fb9\u5224\u5b9a\u6cd5\u5219 ###\r\n\u65e0\u5411\u8fb9 $(x,y)$ \u662f\u6865\uff0c\u5f53\u4e14\u4ec5\u5f53\u641c\u7d22\u6811\u4e0a\u5b58\u5728 $x$ \u7684\u4e00\u4e2a\u5b50\u8282\u70b9 $y$ \u6ee1\u8db3: \r\n#### $dfn_x<low_y$ ####\r\n\r\n\u8bc1\u660e\uff1a\u6839\u636e\u8ffd\u6eaf\u503c\u7684\u5b9a\u4e49\uff0c$low_y$ \u8868\u793a $y$ \u7684\u5b50\u8282\u70b9\u4e2d\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u503c\uff0c\u6216\u8005\u662f\u4ece $y$ \u7684\u5b50\u6811\u51fa\u53d1\uff0c\u901a\u8fc7\u4e00\u6761\u975e\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u7684\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u503c\u3002\u82e5\u6709 $subtree_y$ \u4e2d\u7684\u8282\u70b9 $v$\uff0c$dfn_v$ \u5fc5\u5b9a\u5927\u4e8e $dfn_x$\uff0c\u56e0\u4e3a $v$ \u4e5f\u5fc5\u5b9a\u662f $x$ \u7684\u5b69\u5b50\u7ed3\u70b9\u3002\u90a3\u4e48\u8003\u8651\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\u4ece $subtree_y$ \u51fa\u53d1\uff0c\u6709\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a   \r\n1. $subtree_y$ \u5c01\u95ed\uff0c\u5373\u6ca1\u6709\u975e\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\u8fde\u63a5\u4e86 $subtree_y$\uff0c\u6b64\u65f6 $low_y$ \u7684\u6700\u5c0f\u503c\u5c31\u662f\u81ea\u5df1\u7684\u65f6\u95f4\u6233\uff0c\u4e5f\u5fc5\u5b9a\u5927\u4e8e $dfn_c$\u3002\r\n2. \u4ece $subtree_y$ \u51fa\u53d1\uff0c\u6709\u81f3\u5c11\u4e00\u6761\u975e\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\u901a\u5f80 $x$ \u7684\u5176\u4ed6\u5b50\u6811\u6216 $x$ \u7684\u7236\u8282\u70b9\uff08\u5305\u62ec $x$ \u81ea\u5df1\uff09\u3002\u6b64\u65f6\uff0c\u7531\u4e8e $x$\u3001$y$ \u95f4\u5df2\u7ecf\u6709\u4e00\u6761\u641c\u7d22\u6811\u4e0a\u7684\u8fb9\u76f8\u8fde\uff0c\u73b0\u5728\u53c8\u6709\u4e00\u6761\u8def\u5f84\u76f8\u8fde\uff0c\u6545 $x$\u3001$y$ \u5728\u4e00\u4e2a\u7b80\u5355\u73af\u4e0a\u3002\u5219\u82e5\u5207\u65ad $x$\u3001$y$ \u95f4\u7684\u8fd9\u6761\u8def\u5f84\uff0c$x$ \u3001$y$ \u4ecd\u7136\u8fde\u901a\uff0c\u5219\u8be5\u8fb9\u4e0d\u7b26\u5408\u6865\u7684\u5b9a\u4e49\u3002\r\n\r\n\u6545\u82e5 $(x,y)$ \u662f\u6865\uff0c\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u6761\u4ef6\u4e00\uff0c\u65e2\u6ee1\u8db3 $dfn_x<low_y$\u3002  \r\n\u8bc1\u6bd5\u3002\r\n\r\n------------\r\n\r\n\u6839\u636e\u4ee5\u4e0a\u5185\u5bb9\uff0c\u6211\u4eec\u6613\u5f97\u6c42\u4e00\u5f20\u65e0\u5411\u56fe\u6865\u7684\u6c42\u6cd5\uff1a\r\n```cpp\r\nvoid tarjan(int x,int in){ //in \u8868\u793a\u8fdb\u5165\u8fd9\u4e2a\u70b9\u6240\u8d70\u7684\u8fb9\uff0c\u4f5c\u7528\u662f\u4fbf\u4e8e\u540e\u9762\u5224\u65ad\r\n\tdfn[x]=low[x]=++idx; //\u8ffd\u6eaf\u503c\u8981\u5148\u8d4b\u503c\u4e3a\u65f6\u95f4\u6233\r\n\tfor(int i=head[x];i;i=edge[i].next){\r\n\t\tint y=edge[i].to;\r\n\t\tif(!dfn[y]){ \r\n\t\t\ttarjan(y,i);\r\n\t\t\tlow[x]=min(low[x],low[y]);\r\n\t\t\tif(dfn[x]<low[y]) edge[i].fl=edge[i^1].fl=true; //\u6807\u8bb0\u6865\r\n\t\t}else if(i!=(in^1)) low[x]=min(low[x],dfn[y]); \r\n                //\u8fd9\u6761\u8fb9\u4e0d\u5728\u641c\u7d22\u6811\u4e0a\uff0c\u4f46\u4e0d\u662f\u901a\u5f80\u5176\u7236\u8282\u70b9\u7684\u8fb9\uff08\u56e0\u4e3a\u6839\u636e\u8ffd\u6eaf\u503c\u7684\u5b9a\u4e492\uff0c\u8981\u6c42\u662f subtree \u91cc\u7684\u8282\u70b9\u624d\u80fd\u66f4\u65b0x\uff09\r\n\t} \r\n}\r\n```\r\n\u6211\u4eec\u7ee7\u7eed\u770b\u5b9a\u4e49\r\n### 7.\u8fb9\u53cc\u8fde\u901a\u5206\u91cf ###\r\n\u82e5\u4e00\u5f20\u65e0\u5411\u8fde\u901a\u56fe\u4e0d\u5b58\u5728\u6865\uff0c\u5219\u79f0\u4e3a\u8fb9\u53cc\u8fde\u901a\u56fe\u3002   \r\n\u65e0\u5411\u8fde\u901a\u56fe\u7684\u6700\u5927\u8fb9\u53cc\u8fde\u901a\u5b50\u56fe\u88ab\u79f0\u4e3a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u8bb0\u4e3a $e-DCC$ \u3002\r\n\r\n\r\n------------\r\n\u90a3\u6211\u4eec\u8be5\u5982\u4f55\u6c42 $e-DCC$ \u5462\uff1f\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u65e0\u5411\u56fe\u91cc\u7684\u6240\u6709\u6865\u53bb\u6389\uff0c\u5269\u4e0b\u7684\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u5c31\u662f\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002\r\n\r\n```cpp\r\n#include<cstdio>\r\n#include<vector>\r\nusing namespace std;\r\nstruct e{\r\n\tint next,to;\r\n\tbool fl;  //\u662f\u4e0d\u662f\u6865\r\n}edge[4000005];\r\nint idx=0,low[2000005],dfn[2000005],n,m,cnt=1,head[2000005],dcc=0;\r\n//\u53cb\u60c5\u63d0\u793a\uff1acnt \u4e00\u5b9a\u8981\u4ece2\u5f00\u59cb\u5b58\uff0c\u8fd9\u6837\u624d\u80fd\u6210\u5bf9\u53d8\u6362\r\nbool vis[2000005];\r\nvector<int>d[2000005];\r\nvoid add_edge(int u,int v){\r\n\tedge[++cnt].to=v;\r\n\tedge[cnt].fl=false;\r\n\tedge[cnt].next=head[u];\r\n\thead[u]=cnt;\r\n}\r\nvoid tarjan(int x,int in){ //Tarjan \u6c42\u6865\u6a21\u677f\r\n\tdfn[x]=low[x]=++idx;\r\n\tfor(int i=head[x];i;i=edge[i].next){\r\n\t\tint y=edge[i].to;\r\n\t\tif(!dfn[y]){\r\n\t\t\ttarjan(y,i);\r\n\t\t\tlow[x]=min(low[x],low[y]);\r\n\t\t\tif(dfn[x]<low[y]) edge[i].fl=edge[i^1].fl=true; //\u65e0\u5411\u56fe\u8981\u628a\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9\u90fd\u6807\u8bb0\u4e86\r\n\t\t}else if(i!=(in^1)) low[x]=min(low[x],dfn[y]);\r\n\t} \r\n}\r\nvoid dfs(int x){\r\n\td[dcc].push_back(x); vis[x]=true;\r\n\tfor(int i=head[x];i;i=edge[i].next){\r\n\t\tint v=edge[i].to;\r\n\t\tif(vis[v]||edge[i].fl) continue; //\u4e0d\u80fd\u8d70\u6865\r\n\t\tdfs(v);\r\n\t}\r\n}\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint u,v; scanf(\"%d%d\",&u,&v);\r\n\t\tadd_edge(u,v);\r\n\t\tadd_edge(v,u);\r\n\t}\r\n\tfor(int i=1;i<=n;i++) //\u6700\u5f00\u59cb\u6574\u4e2a\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\u54e6\r\n\t  if(!dfn[i]) tarjan(i,0);\r\n\tfor(int i=1;i<=n;i++)\r\n\t  if(!vis[i]){\r\n\t  \tdcc++;\r\n\t  \tdfs(i);\r\n       }\r\n    printf(\"%d\\n\",dcc);\r\n    for(int i=1;i<=dcc;i++){\r\n    \tprintf(\"%d \",d[i].size());\r\n    \tfor(int j=0;j<d[i].size();j++)\r\n    \t  printf(\"%d \",d[i][j]);\r\n    \tputs(\"\");\r\n\t}\r\n\treturn 0;\r\n} \r\n```",
        "postTime": 1659438663,
        "uid": 464947,
        "name": "Code_\u661f\u4e91",
        "ccfLevel": 5,
        "title": "P8436 \u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/LaoMang-no-blog/p/16838032.html)\n\n---\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u4e0e\u4f17\u4e0d\u540c\u7684\u5199\u6cd5\u3002\n\n> \u524d\u7f6e\u77e5\u8bc6\uff1a\u5f3a\u8054\u901a\u5206\u91cf\n\n\u56de\u5fc6\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7b97\u6cd5\u8fc7\u7a0b\uff0c\u6211\u4eec\u5229\u7528 **\u6709\u5411\u56fe** \u7684 dfn \u6811\u5c06\u56fe\u4e0a\u7684\u6240\u6709\u8fb9\u5206\u6210\u56db\u79cd\uff1a\u6811\u8fb9\u3001\u524d\u5411\u8fb9\u3001\u540e\u5411\u8fb9\u548c\u6a2a\u5411\u8fb9\u3002\n\n\u5176\u4e2d\u5728\u539f\u6709\u6811\u8fb9\u7684\u57fa\u7840\u4e0a\uff0c\u524d\u5411\u8fb9\u4e0d\u53d1\u6325\u4f5c\u7528\uff0c\u540e\u5411\u8fb9\u4e00\u5b9a\u53d1\u6325\u4f5c\u7528\uff0c\u6a2a\u5411\u8fb9\u53ef\u80fd\u53d1\u6325\u4f5c\u7528\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6211\u4eec\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6808\uff0c\u7528\u8fd9\u4e2a\u6808\u6765\u786e\u5b9a\u4e00\u6761\u8fb9\u662f\u5426\u53d1\u6325\u4f5c\u7528\uff08\u53ea\u6709\u7ec8\u70b9\u5728\u6808\u91cc\u7684\u8fb9\u624d\u4f1a\u53d1\u6325\u4f5c\u7528\uff09\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fb9\u53cc\u548c\u5f3a\u8054\u901a\u5206\u91cf\u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u6c42\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7b97\u6cd5\u62d3\u5c55\u5230\u65e0\u5411\u56fe\u4e0a\uff0c\u5f97\u5230\u4e00\u4e2a **\u4e0d\u9700\u8981\u6c42\u6865** \u7684\u8fb9\u53cc\u7b97\u6cd5\u3002\n\n\u9996\u5148\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff0c\u5728\u65e0\u5411\u56fe\u9664\u4e86\u6811\u8fb9\u5c31\u53ea\u6709\u540e\u5411\u8fb9\uff0c\u8bc1\u660e\u8fd9\u91cc\u7565\u8fc7\u3002\n\n\u90a3\u4e48\u4e5f\u5c31\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u7701\u53bb\u7ef4\u62a4\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u6808\u5185\u7684\u8fc7\u7a0b\uff0c\u6808\u5185\u4f9d\u7136\u7ef4\u62a4 **\u5f53\u524d\u70b9\u7684\u6240\u6709\u7956\u5148\u70b9\u6240\u5c5e\u7684\u8fb9\u53cc\u4e2d\u904d\u5386\u8fc7\u7684\u6240\u6709\u70b9** \u3002\n\n\u6b64\u65f6\u56e0\u4e3a\u6240\u6709\u8fb9\u90fd\u662f\u540e\u5411\u8fb9\uff0c\u5373\u6240\u6709\u975e\u6811\u8fb9\u90fd\u6307\u5411\u81ea\u5df1\u7684\u7956\u5148\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f6c\u79fb\u66f4\u65b0 `low`\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u505a\u5230\u751a\u81f3\u6bd4\u666e\u901a\u7684\u6c42\u5f3a\u8054\u901a\u5206\u91cf\u66f4\u52a0\u7b80\u5355\uff0c\u4f46\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u56e0\u4e3a\u6c42\u7684\u662f\u65e0\u5411\u56fe\u7684\u8fb9\u53cc\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u5c06\u4ece\u7236\u4eb2\u5904\u8fc7\u6765\u7684\u90a3\u6761\u8fb9\uff08\u5373\u6811\u8fb9\uff09\u65e0\u89c6\uff0c\u53ef\u4ee5\u76f4\u63a5\u50cf\u6b63\u5e38\u505a dfs \u65f6\u90a3\u6837\u5c06\u7236\u4eb2\u7279\u5224\u6389\uff0c\u4f46\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0\u91cd\u8fb9\uff0c\u6700\u597d\u7684\u529e\u6cd5\u662f\u5229\u7528\u65e0\u5411\u56fe\u76f8\u53cd\u8fb9\u5728\u94fe\u5f0f\u524d\u5411\u661f\u4e2d\u76f8\u90bb\u7684\u7279\u70b9\u76f4\u63a5\u5f97\u5230\u9700\u8981\u7279\u5224\u6389\u7684\u8fb9\u7684\u7f16\u53f7\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u8fb9\u5219\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5f55\u7236\u4eb2\u7f16\u53f7\u3002\n\n\u4f60\u8c37\u4f8b\u9898\uff1a[**P8436 \u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf**](https://www.luogu.com.cn/problem/P8436)\u3002\n\n\u4ee3\u7801\u6bd4\u5148\u6c42\u6865\u518d\u5206\u8fb9\u53cc\u7b80\u5355\u5f97\u591a\uff08\u8001\u83bd\u306e\u4ee3\u7801\u5934\u7565\u5927\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define Reimu inline void // \u7075\u68a6\u8d5b\u9ad8\n#define Marisa inline int // \u9b54\u7406\u6c99\u8d5b\u9ad8\n#define Sanae inline bool // \u65e9\u82d7\u8d5b\u9ad8\n#define Reisen inline LL  // \u94c3\u4ed9\u8d5b\u9ad8\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef __int128 Suika;\n\ninline ostream &operator<<(ostream &cout, Suika x) {\n\tstatic const LL LIM = 1e18;\n\treturn x < LIM ? cout << LL(x) : cout << LL(x / LIM) << setw(18) << setfill('0') << LL(x % LIM);\n}\n\ntypedef pair<int, int> Pii;\ntypedef tuple<int, int, int> Tiii;\n#define fi first\n#define se second\n\n#define all(vec) vec.begin(), vec.end()\n#define TY(type) const type&\n\ntemplate<typename Ty>\nReimu clear(Ty &x) { Ty().swap(x); }\n\nconst int N = 500010, M = 2000010;\n\nstruct Edge { int y, nx; } E[M << 1];\n\nint n, m, eCnt, tot, cnt, top;\nint lnk[N], dfn[N], low[N], stk[N];\nvector<int> cc[N];\n\nReimu addE(int x, int y) { E[eCnt] = {y, lnk[x]}; lnk[x] = eCnt++; }\n\nReimu Tar(int x, int fe) {\n\tdfn[x] = low[x] = ++tot;\n\tstk[++top] = x;\n\tfor (int e = lnk[x], y; ~e; e = E[e].nx) if (e ^ fe) {\n\t\tif (dfn[y = E[e].y]) low[x] = min(low[x], dfn[y]);\n\t\telse Tar(y, e ^ 1), low[x] = min(low[x], low[y]);\n\t}\n\tif (low[x] < dfn[x]) return;\n\t++cnt; do cc[cnt].emplace_back(stk[top]); while (stk[top--] ^ x);\n}\n\nint main() {\n\tios::sync_with_stdio(false); cin.tie(nullptr);\n\tcin >> n >> m;\n\tmemset(lnk + 1, -1, n << 2);\n\tfor (int i = 1, x, y; i <= m; ++i) cin >> x >> y, addE(x, y), addE(y, x);\n\tfor (int i = 1; i <= n; ++i) if (!dfn[i]) Tar(i, -1);\n\tcout << cnt << '\\n';\n\tfor (int i = 1; i <= cnt; ++i) {\n\t\tcout << cc[i].size() << ' ';\n\t\tfor (int x: cc[i]) cout << x << ' ';\n\t\tcout << '\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1667005378,
        "uid": 310525,
        "name": "\u8001\u83bd\u83bd\u7a7f\u4e00\u5207",
        "ccfLevel": 0,
        "title": "P8436 \u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf \u9898\u89e3"
    },
    {
        "content": "**\u4fee\u590d\u4e86\u82f1\u6587\u4e0e\u4e2d\u6587\u95f4\u7684\u7a7a\u683c**\n\norz \u9898\u89e3\u533a\u7684\u795e\u7287\u5df2\u7ecf\u5c06\u6865\u548c\u8fb9\u53cc\u7684\u57fa\u672c\u505a\u6cd5\u8bb2\u660e\u767d\u4e86\uff0c\u90a3\u672c\u849f\u84bb\u5c31\u5199\u4e00\u79cd\u522b\u7684\u505a\u6cd5\u5427\u3002  \n### \u5229\u7528\u6808\u5b58\u50a8\u7b54\u6848  \n\u8fd9\u79cd\u505a\u6cd5\u4e0e[\u70b9\u53cc](https://www.luogu.com.cn/problem/P8435) \u5341\u5206\u7c7b\u4f3c\uff0c\u90fd\u662f\u5c06\u904d\u5386\u5230\u7684\u70b9\u4f9d\u6b21\u52a0\u5165\u6808\uff0c\u5e76\u5728\u627e\u5230\u4e00\u4e2a\u6865\u65f6\uff0c\u5c06\u6808\u4e2d\u7684\u5b58\u50a8\u7684\u8282\u70b9\u5f39\u51fa\u4f5c\u4e3a\u4e00\u4e2a\u8fb9\u53cc\u7684\u7b54\u6848\uff0c\u4ec5\u5728\u7ec6\u8282\u5904\u7406\u65f6\u6709\u4e9b\u53d8\u5316\u3002\n1. \u8bb0\u5f55\u7b54\u6848\u65f6\uff08\u627e\u5230\u6865\u65f6\uff09\u4e0d\u518d\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u3002  \n\u8fd9\u4e2a\u5f88\u663e\u7136\u5427\uff0c\u6bd5\u7adf\u8fd9\u6761\u6865\u5c31\u662f\u7528\u6765\u533a\u5206\u8fb9\u53cc\u7684\u3002\n2. \u82e5\u56fe\u4e2d\u4e0d\u5b58\u5728\u6865\u65f6  \n\u6211\u4eec\u5728\u6c42\u70b9\u53cc\u65f6\uff0c~~\u66b4\u529b\u5730~~\u5c06\u5272\u70b9\u7684\u6761\u4ef6\u76f4\u63a5\u4fee\u6539\u4e3a  `low[v]>=dfn[u]` \u800c\u7701\u7565\u6839\u8282\u70b9\u7684\u5224\u65ad\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5c06\u5269\u4f59\u7684\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u4e00\u8d77\u653e\u5165\u4e00\u4e2a\u70b9\u53cc\u3002  \n\u4f46\u5f88\u663e\u7136\uff0c**\u5982\u679c\u56fe\u4e2d\u4e0d\u5b58\u5728\u6865\uff0c\u5c31\u4e0d\u53ef\u80fd\u4f7f\u6761\u4ef6** `low[v]>dfn[u]` **\u6210\u7acb**  \n\u6211\u4eec\u8003\u8651\u5728\u6bcf\u4e00\u6b21\u641c\u7d22\u524d\uff0c\u5efa\u7acb\u4e00\u4e2a\u865a\u62df\u6e90\u70b9\u6307\u5411\u539f\u6765\u7684\u6839\uff08\u5355\u5411\u53cc\u5411\u5747\u53ef\uff0c\u56e0\u4e3a\u6b63\u5e38\u7684 `Tarjan` \u672c\u6765\u5c31\u4e0d\u8981\u6c42\u8d70\u56de\u5934\u8def\uff09\uff0c\u8ba9\u8fd9\u4e2a\u865a\u62df\u8282\u70b9\u6210\u4e3a\u65b0\u7684\u6839\u3002\u8fd9\u6837\uff0c\u539f\u5148\u6211\u4eec\u65b0\u52a0\u7684\u865a\u62df\u8fb9\u5c31\u6210\u4e3a\u4e86\u865a\u62df\u6865\u3002\u8fd9\u6837\u5c31\u4f7f\u56fe\u4e2d**\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u6865**\u3002\u4e5f\u53ef\u4ee5\u89e3\u51b3\u72ec\u7acb\u8282\u70b9\u7684\u95ee\u9898\u3002\n\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,nxt[4100005],head[2000005],k=1,cnt,go[4100005],dfn[2000005],low[2000005],ans;\nvector<int> dcc[500005];\nvoid add(int x,int y)\n{\n\tnxt[++k]=head[x];\n\thead[x]=k;\n\tgo[k]=y;\n}\nstack<int>sta;\nvoid tarjan(int x,int edge)\n{\n\tdfn[x]=low[x]=++cnt;\n\tsta.push(x);\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint g=go[i];\n\t\tif(!dfn[g])\n\t\t{\n\t\t\ttarjan(g,i);\n\t\t\tlow[x]=min(low[x],low[g]);\n\t\t\tif(low[g]>dfn[x])//\u975e\u5e38\u6b63\u5e38\u7684\u6c42\u6865\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t\tint p;\n\t\t\t\tdo{\n\t\t\t\t\tp=sta.top();\n\t\t\t\t\tsta.pop();\n\t\t\t\t\tdcc[ans].push_back(p);\n\t\t\t\t}while(p!=g);//\u8bb0\u5f55\u7b54\u6848\n           //\u8fd9\u91cc\u4e0d\u518d\u9700\u8981\u52a0\u5165\u5f53\u524d\u8282\u70b9\u4e86\n\t\t\t}\n\t\t}\n\t\telse if(i!=(edge^1))  //\u4e0d\u8d70\u56de\u5934\u8def\n\t\tlow[x]=min(low[x],dfn[g]);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tif(u==v) continue;//\u91cd\u8fb9\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!dfn[i]) \n\t\t{\n\t\t\tadd(i+n,i);//\u865a\u62df\u70b9tarjan\n\t\t\ttarjan(i+n,0);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=1;i<=ans;i++)\n\t{\n\t\tprintf(\"%d \",dcc[i].size());\n\t\tfor(int j=0;j<dcc[i].size();j++)\n\t\tprintf(\"%d \",dcc[i][j]);\n\t\tputs(\"\");\n\t}\n}\n```\n\n\u76f8\u5bf9\u4e8e\u5272\u88c2\u51fa\u6765\u5404\u4e2a\u5b50\u56fe\uff0c\u5728\u8fdb\u884c\u641c\u7d22\u7684\u505a\u6cd5\uff0c\u7701\u7565\u4e86\u4e00\u6b21\u641c\u7d22\u548c\u4e24\u4e2a\u6807\u8bb0\u6570\u7ec4\u3002\u4f46\u662f\u5bfc\u81f4\u4e86\u8fb9\u6570\u548c\u70b9\u6570\u7684\u589e\u591a\u4ee5\u53ca\u5728\u539f\u6765\u7684 `Tarjan` \u9700\u8fdb\u884c\u6808\u64cd\u4f5c\uff0c\u4e5f\u8bb8\u4e92\u6709\u4f18\u52a3\uff1f",
        "postTime": 1658135573,
        "uid": 122836,
        "name": "World_Creater",
        "ccfLevel": 0,
        "title": "\u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf"
    },
    {
        "content": "## P8436 \u3010\u6a21\u677f\u3011 \u8fb9\u53cc\u8fde\u901a\u5206\u91cf\n\n### \u524d\u8a00\n\u672c\u6587\u804a\u4e00\u804a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u662f\u4ec0\u4e48\u3001\u5982\u4f55\u6c42\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n### \u6982\u5ff5\n\n\u5272\u8fb9\uff08\u6865\uff09\uff1a\u5728\u4e00\u4e2a\u8054\u901a\u7684\u65e0\u5411\u56fe\u4e2d\uff0c\u82e5\u5220\u6389\u67d0\u6761\u8fb9\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u65e0\u5411\u56fe\u4e0d\u8fde\u901a\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u79f0\u4e3a\u201c\u5272\u8fb9\uff08\u6865\uff09\u201d\uff0c\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\u53ef\u80fd\u6709\u4e0d\u6b62\u4e00\u6761\u5272\u8fb9\u3002\n\n\u53cc\u8054\u901a\u5b50\u56fe\uff1a\u5728\u539f\u56fe\u7684\u67d0\u4e2a\u5b50\u56fe $G'$ \u4e2d\uff0c\u4e0d\u5b58\u5728\u5272\u8fb9\uff0c\u90a3\u4e48 $G'$ \u5c31\u4e3a\u53cc\u8054\u901a\u5b50\u56fe\u3002\n\n\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff1a\u539f\u56fe\u4e2d\u7684\u6781\u5927\u53cc\u8054\u901a\u5b50\u56fe\u5c31\u4e3a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002\u5f62\u5f0f\u5316\u5730\uff0c\u82e5\u67d0\u4e2a\u53cc\u8054\u901a\u5b50\u56fe $G'$\uff0c \u4e0d\u5b58\u5728\u5176\u4ed6\u7684\u4e00\u4e2a\u53cc\u8054\u901a\u5b50\u56fe $G''$\uff0c\u4f7f\u5f97 $G' \\subsetneq G'' $\uff0c\u90a3\u4e48 $G'$ \u5c31\u4e3a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u7b80\u79f0\u201ce-DCC\u201d\u3002\n\n### \u627e\u5272\u8fb9\n\n\u627e\u5230\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u7b2c\u4e00\u6b65\u662f\u8bbe\u6cd5\u627e\u5230\u5272\u8fb9\uff0c\u989c\u503c\u8d85\u7ea7\u8d85\u7ea7\u9ad8\u7684 tarjan \u7ed9\u51fa\u4e86\u5f88\u5de7\u5999\u7684\u6c42\u89e3\u65b9\u6cd5\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5272\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u53ea\u6709\u4e00\u6761\u8def\u5f84\u76f8\u8fde\uff08\u8fd9\u662f\u5b9a\u4e49\u561b\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5427\u8fd9\u4e2a\u8def\u5f84\u5835\u4f4f\uff0c\u90a3\u4e48\u5b83\u4eec\u5c31\u4e0d\u4f1a\u8054\u901a\u3002\n\n\u4ee3\u7801\u8be5\u600e\u6837\u5199\uff1f\n\n- \u5f15\u5165\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u8868\u793a\u5bf9\u5e94\u8282\u70b9\u5728\u904d\u5386\u65f6\u662f\u7b2c\u51e0\u4e2a\u88ab\u8bbf\u95ee\u5230\u7684\uff0c\u6bcf\u5230\u8fbe\u4e00\u4e2a\u70b9\u5148\u7ed9\u8fd9\u4e2a\u70b9\u9644\u4e0a\u65f6\u95f4\u6233\u7684\u503c\uff0c\u968f\u540e\u65f6\u95f4\u6233 +1\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u8d4b\u503c\u3002\n\n- \u5bf9\u4e8e\u5f53\u524d\u70b9 $u$ \uff0c\u4ee4\u4e0a\u4e00\u6b21\u904d\u5386\u65f6\u5230\u8fbe\u5230\u5b83\u7684\u6709\u5411\u8fb9\u4e3a $e$\uff0c\u6211\u4eec\u904d\u5386\u5176\u9664\u4e86 $e$ \u7684\u53cd\u5411\u8fb9\u4ee5\u5916\u7684\u6240\u6709\u8fde\u8fb9\uff0c\u5982\u679c\u67d0\u6761\u8fb9\u662f\u5272\u8fb9\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u904d\u5386\u7684\u70b9\u4e00\u5b9a\u5230\u4e0d\u4e86\u4e4b\u524d\u904d\u5386\u8fc7\u7684\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u6211\u4eec\u66f4\u65b0\u5bf9\u5e94\u70b9\u7684\u65f6\u95f4\u6233\uff0c\u4f7f\u5176\u65f6\u95f4\u6233\u5c3d\u91cf\u5c0f\uff08\u53d6\u6700\u5c0f\u503c\u64cd\u4f5c\uff09\uff0c\u5982\u679c\u67d0\u4e2a\u70b9\u66f4\u65b0\u5b8c\u6bd5\u540e\u7684\u65f6\u95f4\u6233\u4e0d\u5927\u4e8e\u66f4\u65b0\u524d\u7684\u5bf9\u5e94\u70b9\u7684\u65f6\u95f4\u6233\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u5c31\u662f\u5272\u8fb9\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n\n```cpp\nvoid tarjan(int u, int from)\n{\n\tdfn[u] = low[u] = ++ timestamp; //timestamp\u4e3a\u65f6\u95f4\u6233\n\t\n\tfor (int i = h[u]; ~i; i = ne[i])\n\t{\n\t\tint j = e[i];\n\t\tif (!dfn[j])\n\t\t{\n\t\t\ttarjan(j, i);\n\t\t\tlow[u] = min(low[u], low[j]);\n\t\t\tif (low[j] > dfn[u])\n\t\t\t\tis_bridge[i] = is_bridge[i ^ 1] = true; //is_bridge\u6765\u7ef4\u62a4i\u662f\u5426\u4e3a\u6865\n\t\t}\n\t\telse if (i != (1 ^ from)) //\u4e0d\u80fd\u8d70\u53cd\u5411\u8fb9\n\t\t\tlow[u] = min(low[u], dfn[j]); //\u66f4\u65b0\u65f6\u95f4\u6233\n\t}\n\treturn;\n}\n```\n\n### \u627e\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\n\n\u6709\u4e0a\u9762\u7684\u57fa\u7840\uff0c\u8fd9\u4e2a\u5c31\u7b80\u5355\u4e86\u3002\n\n\u5982\u679c\u7ecf\u8fc7\u4e00\u901a\u66f4\u65b0\u53d1\u73b0\u5b83\u7684\u65f6\u95f4\u6233\u6ca1\u6709\u53d8\u5316\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u662f\u8fb9\u754c\u4e86\u3002\n\n\u7ef4\u62a4\u4e00\u4e2a\u6808\u6765\u7edf\u8ba1\u904d\u5386\u7684\u70b9\u6570\uff0c\u5230\u8fbe\u8fb9\u754c\u540e\u5f39\u51fa\u76f4\u81f3\u5f39\u5230\u6700\u521d\u904d\u5386\u8282\u70b9\uff0c\u6240\u5f39\u7684\u6240\u6709\u8282\u70b9\u6784\u6210\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\nvoid tarjan(int u, int from)\n{\n\tdfn[u] = low[u] = ++ timestamp;\n\tstk[ ++ top] = u;\n\t\n\tfor (int i = h[u]; ~i; i = ne[i])\n\t{\n\t\tint j = e[i];\n\t\tif (!dfn[j])\n\t\t{\n\t\t\ttarjan(j, i);\n\t\t\tlow[u] = min(low[u], low[j]);\n\t\t\tif (low[j] > dfn[u])\n\t\t\t\tis_bridge[i] = is_bridge[i ^ 1] = true;\n\t\t}\n\t\telse if (i != (1 ^ from))\n\t\t\tlow[u] = min(low[u], dfn[j]);\n\t}\n\t\n\tif (dfn[u] == low[u])\n\t{\n\t\tdcc_cnt ++ ; //dcc_cnt\u4e3a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7f16\u53f7\n\t\tint y;\n\t\tdo\n\t\t{\n\t\t\ty = stk[top -- ];\n\t\t\tid[y] = dcc_cnt; //id\u4e3a\u67d0\u70b9\u7684\u6240\u5728\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7f16\u53f7\n\t\t} while (y != u);\n\t}\n\t\n\treturn;\n}\n```\n\n### \u7edf\u8ba1\u7b54\u6848\n\n\u8fd9\u4e2a\u95ee\u9898\uff0c\u5bf9\u4e8e\u603b\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2a\u6570\uff0c\u7b54\u6848\u5c31\u4e3a dcc_cnt \u7684\u503c\uff1b\u800c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u5f00\u4e2a\u6570\u7ec4 tot \u6765\u7ef4\u62a4\uff0c\u8fd9\u4e2a\u5f88\u7b80\u5355\uff1b\u5bf9\u4e8e\u8282\u70b9\u7f16\u53f7\uff0c\u6211\u4eec\u4e4b\u524d\u7684 id \u6570\u7ec4\u8d77\u5230\u4e86\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u518d\u7528\u4e00\u4e2a vector \u6765\u5b58\u7b54\u6848\u5373\u53ef\u3002\uff08\u8be6\u89c1\u4ee3\u7801\uff09\n\n### Code\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 500010, M = 2000010 * 2;\n\nint n, m;\nint h[N], e[M], ne[M], idx;\nint dfn[N], low[N], timestamp;\nint stk[N], top;\nint id[N], dcc_cnt;\nbool is_bridge[M];\nint tot[N];\nvector <int> ans[N];\n\nvoid add(int a, int b)\n{\n\te[idx] = b;\n\tne[idx] = h[a];\n\th[a] = idx ++ ;\n\treturn;\n}\n\nvoid tarjan(int u, int from)\n{\n\tdfn[u] = low[u] = ++ timestamp;\n\tstk[ ++ top] = u;\n\t\n\tfor (int i = h[u]; ~i; i = ne[i])\n\t{\n\t\tint j = e[i];\n\t\tif (!dfn[j])\n\t\t{\n\t\t\ttarjan(j, i);\n\t\t\tlow[u] = min(low[u], low[j]);\n\t\t\tif (low[j] > dfn[u])\n\t\t\t\tis_bridge[i] = is_bridge[i ^ 1] = true;\n\t\t}\n\t\telse if (i != (1 ^ from))\n\t\t\tlow[u] = min(low[u], dfn[j]);\n\t}\n\t\n\tif (dfn[u] == low[u])\n\t{\n\t\tdcc_cnt ++ ;\n\t\tint y;\n\t\tdo\n\t\t{\n\t\t\ty = stk[top -- ];\n\t\t\tid[y] = dcc_cnt;\n\t\t} while (y != u);\n\t}\n\t\n\treturn;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcin >> n >> m;\n\tmemset(h, -1, sizeof h);\n\tfor (int i = 1; i <= m; i ++ )\n\t{\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tadd(a, b);\n\t\tadd(b, a);\n\t}\n\t\n\tfor (int i = 1; i <= n; i ++ )\n\t\tif (!dfn[i]) tarjan(i, -1);\n\t\n\tcout << dcc_cnt << endl;\n\t\n\tfor (int i = 1; i <= n; i ++ )\n\t{\n\t\ttot[id[i]] ++ ;\n\t\tans[id[i]].push_back(i);\n\t}\n\t//\u7edf\u8ba1\u7b54\u6848\n\tint p = 1;\n\twhile (tot[p])\n\t{\n\t\tcout << tot[p] << ' ';\n\t\tfor (int i = 0; i < ans[p].size(); i ++ )\n\t\t\tcout << ans[p][i] << ' ';\n\t\tp ++ ;\n\t\tcout << endl;\n\t}\n\t\n\treturn 0;\n}\n```\n\n### \u540e\u8bed\n\u5e94\u7528\u7ec3\u4e60 [P2860](https://www.luogu.com.cn/problem/P2860)",
        "postTime": 1657623987,
        "uid": 590755,
        "name": "LittleMoMol",
        "ccfLevel": 0,
        "title": "P8436\u3010\u6a21\u677f\u3011 \u8fb9\u53cc\u8fde\u901a\u5206\u91cf \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u89e3\u4ecb\u7ecd\u4e00\u4e0b\u5229\u7528\u5dee\u5206\u627e\u6865\u7684\u65b9\u6cd5\u6765\u505a\u8fd9\u9053\u9898\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u66f4\u597d\u7406\u89e3\u3002\n\n### \u5dee\u5206\u627e\u5272\u8fb9\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/czgxi8ry.png)\n\n#### \u6982\u5ff5\n\n* dfs \u751f\u6210\u6811\uff1adfs \u4e00\u4e2a\u56fe\u5f97\u5230\u7684\u751f\u6210\u6811\n* \u6811\u8fb9\uff1a\u793a\u610f\u56fe\u4e2d\u5b9e\u7ebf\u8868\u793a\u7684\u8fb9\u3002\u5373\u5728\u751f\u6210\u6811\u4e0a\u7684\u8fb9\n* \u975e\u6811\u8fb9\uff1a\u793a\u610f\u56fe\u4e2d\u865a\u7ebf\u8868\u793a\u7684\u8fb9\u3002\u5373\u4e0d\u5728\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u3002\n* \u6865\uff1b\u4e5f\u53eb\u5272\u8fb9\uff0c\u5982\u679c\u5220\u6389\u4e00\u6761\u8fb9\u540e\uff0c\u56fe\u4e2d\u8054\u901a\u5206\u91cf\u589e\u52a0\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u5c31\u662f\u6865\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u76f4\u63a5\u6216\u95f4\u63a5\u901a\u8fc7\u975e\u6811\u8fb9\u5230\u81ea\u5df1\u7684\u7956\u5148\uff0c\u90a3\u4e48\u6211\u4eec\u79f0\u8fd9\u4e2a\u70b9\u88ab\u975e\u6811\u8fb9\u8986\u76d6\u3002\n\n\u89c2\u5bdf\u65e0\u5411\u56fe\u7684 dfs \u751f\u6210\u6811\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u88ab\u975e\u6811\u8fb9\u8986\u76d6\uff08\u5982\u56fe\u4e2d\u7684 $5,6$\uff09\uff0c\u90a3\u4e48\u5c31\u7b97\u5220\u6389\u5b83\u4e0e\u7236\u7ed3\u70b9\u7684\u8fb9\uff0c\u4e5f\u4f9d\u65e7\u8054\u901a\u3002\u76f8\u53cd\uff0c\u5982\u679c\u4e00\u4e2a\u7ed3\u70b9\u6ca1\u6709\u88ab\u975e\u6811\u8fb9\u8986\u76d6\uff0c\u90a3\u4e48\u5220\u6389\u5b83\u4e0e\u7236\u7ed3\u70b9\u7684\u8fb9\uff0c\u5b83\u7684\u5b50\u6811\u4e0e\u5176\u5b83\u90e8\u5206\u5c31\u4e0d\u518d\u8054\u901a\u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c**\u627e\u5230\u6ca1\u6709\u88ab\u975e\u6811\u8fb9\u8986\u76d6\u7684\u70b9\uff0c\u5b83\u4e0e\u7236\u7ed3\u70b9\u7684\u8fb9\u5c31\u662f\u6865\u3002**\n#### \u505a\u6cd5\n\u8003\u8651\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u5148\u5728 dfs \u65f6\u627e\u5230\u6240\u6709\u975e\u6811\u8fb9\uff0c\n\u518d\u5bf9\u4e8e\u6bcf\u6761\u975e\u6811\u8fb9\uff0c\u5c06\u8986\u76d6\u7684\u70b9\u505a\u6807\u8bb0\u3002\u590d\u6742\u5ea6 $O(nm)$\u3002\n\n\u5982\u4f55\u4f18\u5316\uff1f\u5c06\u6811\u4e0a\u7684\u4e00\u6761\u8def\u5f84\u6253\u4e0a\u6807\u8bb0\uff0c\u5f88\u660e\u663e\uff0c\u53ef\u4ee5\u5229\u7528\u6811\u4e0a\u5dee\u5206\u8f7b\u677e\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5c06\u975e\u6811\u8fb9\u7684\u4e00\u7aef $+1$\uff0c\u53e6\u4e00\u7aef $-1$\u3002\u6700\u540e\u518d $O(n)$ \u6c42\u548c\u3002\u5982\u679c\u4e00\u4e2a\u70b9\u4e3a $0$\uff0c\u8bf4\u660e\u5b83\u6ca1\u6709\u88ab\u975e\u6811\u8fb9\u8986\u76d6\u3002\u8fd9\u6837\uff0c$O(n+m)$ \u5c31\u8db3\u4ee5\u6c42\u51fa\u6240\u6709\u6865\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec\u6839\u636e\u6865\u7684\u6027\u8d28\uff0c\u5c06\u6240\u6709\u6865\u5220\u53bb\uff0c\u5269\u4e0b\u7684\u8054\u901a\u5757\u5c31\u662f\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e86\uff0c$O(n)$ \u5373\u53ef\u6c42\u51fa\u3002\n\n\u6700\u7ec8\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(n+m)$\u3002\n\n### \u4ee3\u7801\n\n\u672c\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\u3002\n\u4ee3\u7801\u7684\u5b9e\u73b0\u4e0d\u662f\u5f88\u597d\uff0c\u5e38\u6570\u5f88\u5927\uff0c\u5361\u5e38\u8c03\u4e86\u5f88\u4e45\u3002\n\n[AC\u8bb0\u5f55](https://www.luogu.com.cn/record/96108707)\n\n```cpp\n#include<bits/stdc++.h>\n#define max(x,y) (x>y?x:y)\n#define min(x,y) (x<y?x:y)\n#define P(x,y) (long long)min(x,y)*500000ll+(long long)max(y,x)\nusing namespace std;\nvector<int>G[500005];\nvector<int>ans[500005];//\u7b54\u6848\u3002\nint a[500005],vis[500005],dep[500005],s[500005];\n//a\uff1a\u6bcf\u4e2a\u70b9\u6253\u7684\u6807\u8bb0\u3002s\uff1a\u5b50\u6811\u5185\u6807\u8bb0\u4e4b\u548c\u3002\n//dep\uff1a\u6bcf\u4e2a\u70b9\u6df1\u5ea6\u3002vis\uff1a\u662f\u5426\u8bbf\u95ee\u8fc7\u67d0\u4e2a\u70b9\u3002\nint n,m;\nint cnt;\nint mod=114511;\nstruct Hash{\n//\u5361\u5e38\uff0c\u81ea\u5df1\u5b9e\u73b0\u4e86\u54c8\u5e0c\u8868\uff0c\u5bf9\u65f6\u95f4\u7a7a\u95f4\u6bd4\u8f83\u5361\u5f97\u4e0d\u7d27\u53ef\u4ee5\u7528 map \u6216 unordered_map \u3002\n    vector<long long>v1[200000];\n    vector<short>v2[200000];\n    short& operator[](long long k){\n        int t=k%mod;\n        int l=v1[t].size();\n        for(int i=0;l>i;i++)\n            if(v1[t][i]==k)return v2[t][i];\n        v1[t].push_back(k);\n        v2[t].push_back(0);\n        return v2[t].back();\n    }\n}hash1,hash2;\n//hash1 \u7528\u6765\u5224\u65ad\u4e00\u6761\u8fb9\u662f\u5426\u662f\u6865\u3002\n//hash2 \u7528\u6765\u5224\u65ad\u662f\u5426\u662f\u91cd\u8fb9\uff08\u5982\u679c\u6570\u636e\u6ca1\u6709\u53ef\u4ee5\u76f4\u63a5\u53bb\u6389\uff09\nvoid dfs1(int x,int pre){\n    if(dep[x]<dep[pre]){//\u5982\u679c\u56de\u5230\u7956\u5148\uff0c\u8bf4\u660e\u662f\u975e\u6811\u8fb9\n        a[x]++;a[pre]--;\n    }\n    if(dep[x]!=0)return ;\n    dep[x]=dep[pre]+1;\n    int l=G[x].size();\n    for(int i=0;l>i;i++)\n        dfs1(G[x][i],x);\n}\nint dfs2(int x,int pre){//\u5dee\u5206\n    if(vis[x]==1)return s[x];\n    vis[x]=1;\n    s[x]=a[x];\n    int l=G[x].size();\n    for(int i=0;l>i;i++)\n        if(dep[G[x][i]]>dep[x]&&vis[G[x][i]]==0)\n            s[x]+=dfs2(G[x][i],x);\n    if(s[x]==0&&hash2[P(x,pre)]==1)hash1[P(x,pre)]=1;\n    //\u5982\u679c\u6ca1\u6709\u88ab\u8986\u76d6\uff0c\u4e14\u6ca1\u6709\u91cd\u8fb9\uff0c\u8bf4\u660e\u662f\u6865\u3002\n    return s[x];\n}\nvoid dfs3(int x){\n    if(vis[x]!=0)return ;\n    ans[cnt].push_back(x);\n    vis[x]=cnt;\n    int l=G[x].size();\n    for(int i=0;l>i;i++){\n        if(hash1[P(x,G[x][i])]!=1)//\u4e0d\u7ecf\u8fc7\u6865\u3002\n            dfs3(G[x][i]);\n    }\n}\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);cout.tie(0);\n    int x,y;\n    cin>>n>>m;\n    for(int i=0;m>i;i++){\n        cin>>x>>y;\n        G[x].push_back(y);\n        G[y].push_back(x);\n        hash2[P(x,y)]++;//\u7edf\u8ba1\u91cd\u8fb9\u3002\n    }\n    for(int i=1;n>=i;i++)\n        if(!dep[i])\n            dfs1(i,0);\n    for(int i=1;n>=i;i++)\n        if(vis[i]==0)dfs2(i,0);\n    memset(vis,0,sizeof(vis));\n    for(int i=1;n>=i;i++){\n        if(vis[i]==0){\n            cnt++;\n            dfs3(i);\n        }\n    }\n    cout<<cnt<<endl;\n    for(int i=1;cnt>=i;i++){\n        int l=ans[i].size();\n        cout<<l<<\" \";\n        for(int j=0;l>j;j++)\n            cout<<ans[i][j]<<\" \";\n        cout<<endl;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1669785138,
        "uid": 632236,
        "name": "gan1234",
        "ccfLevel": 0,
        "title": "\u8fb9\u53cc\u8054\u901a\u5206\u91cf"
    },
    {
        "content": "> \u53d1\u73b0\u81ea\u5df1\u5e76\u4e0d\u4f1a\u5199\u8fb9\u53cc\u3002\u4e3a\u4e86 @lovely_seele \u59d0\u59d0\u7684\u7cbe\u795e\u4f20\u627f\uff0c\u4f7f\u7528 LCT \u7ef4\u62a4\u3002\n\n\u4ecb\u7ecd\u4e00\u4e0b\u4f7f\u7528 LCT \u76f4\u63a5\u7ef4\u62a4\u6865\u8fb9\uff0c\u7b80\u79f0\u5927\u70ae\u6253\u868a\u5b50\uff0c\u4f18\u70b9\u662f\u5728\u7ebf\u3002\n\n\u6839\u636e\u6865\u7684\u5b9a\u4e49\uff0c\u5982\u679c\u628a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u770b\u4f5c\u70b9\uff0c\u6865\u770b\u4f5c\u8fb9\uff0c\u90a3\u4e48\u4e00\u4e2a\u6027\u8d28\u662f\u6784\u6210\u7684\u56fe\u662f\u4e00\u9897\u6811\u3002\n\n\u6211\u4eec\u8003\u8651\u5728\u52a0\u8fb9\u7684\u8fc7\u7a0b\u4e2d\u5728\u7ebf\u5730\u7ef4\u62a4\u6bcf\u6761\u8fb9\u662f\u4e0d\u662f\u6865\u3002\n\n\u5c06\u8fb9\u62c6\u6210\u70b9\uff0c\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u8868\u793a\u5b83\u6682\u65f6\u662f\u4e0d\u662f\u6865\uff0c\u539f\u56fe\u4e0a\u7684\u70b9\u6ca1\u6709\u6743\u503c\uff08\u4ee3\u7801\u4e2d\u4f53\u73b0\u4e3a\u6743\u503c\u4e3a $0$\uff09\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u8fb9\u7684\u4e24\u4e2a\u8282\u70b9\u5728\u540c\u4e00\u8fde\u901a\u5757\u4e2d\uff0c\u8fd9\u4e2a\u8fb9\u81ea\u5df1\u80af\u5b9a\u4e0d\u662f\u6865\u3002\u800c\u4e14\uff0c\u8fd9\u4e24\u4e2a\u8282\u70b9\u6811\u4e0a\u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u56e0\u4e3a\u5f62\u6210\u7684\u4e00\u4e2a\u73af\uff0c\u6240\u4ee5\u4e5f\u4e0d\u662f\u6865\u4e86\u3002\u653e\u5728 LCT \u4e0a\u5c31\u662f\u8def\u5f84\u8d4b\u503c $0$\uff0c\u7ef4\u62a4\u61d2\u6807\u8bb0\u5373\u53ef\u3002\n\n\u5426\u5219\uff0c\u5c31\u662f\u6b63\u5e38\u7684\u8fde\u8fb9\u3002\u8fd9\u6761\u8fb9\u521d\u59cb\u65f6\u9ed8\u8ba4\u662f\u6865\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u6743\u503c\u4e3a $1$\u3002\n\n\u4e00\u4e2a\u6027\u8d28\u662f\u6240\u4ee5\u6865\u8fb9\u90fd\u4f1a\u88ab\u4fdd\u7559\u5230\u6811\u4e0a\uff0c\u800c\u975e\u6865\u8fb9\u4f1a\u88ab\u90e8\u5206\u4fdd\u7559\u5230\u6811\u4e0a\uff08\u4ee3\u8868\u66fe\u7ecf\u662f\u6865\u8fb9\uff09\u3002\n\n\u6240\u4ee5\u5efa\u5b8c\u8fb9\u4e4b\u540e\u5373\u53ef\u67e5\u8be2\u51fa\u54ea\u4e9b\u8fb9\u662f\u6865\u8fb9\u3002\u5efa\u51fa\u65b0\u56fe\uff08\u6811\uff09\u540e\u904d\u5386\u8fde\u901a\u5757\u5373\u53ef\u5f97\u5230\u9898\u76ee\u6240\u8ff0\u95ee\u9898\u7684\u89e3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u6ce8\u610f\u6570\u7ec4\u5f00 $2$ \u500d\u3002\n\n\u5176\u5b9e\u4f3c\u4e4e\u53ef\u4ee5\u76f4\u63a5\u5728 LCT \u4e0a dfs\uff0c\u4f46\u6211\u592a\u61d2\u4e86\u54c8\u54c8\u54c8\u3002\n\n\u6ce8\u610f\u5e38\u6570\u3002\n\n[\u4ee3\u7801\u3002](https://www.luogu.com.cn/paste/39fjwrdc)",
        "postTime": 1669813423,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "LCT \u4e0e \u8fb9\u53cc\u8fde\u901a\u5206\u91cf"
    },
    {
        "content": "\u4f20\u9001\u95e8\uff1a[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P8436)\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a[\u5272\u8fb9\uff08\u6865\uff09](https://www.cnblogs.com/ljy-endl/p/11595161.html)\uff0cTarjan \u7b97\u6cd5\u5728\u65e0\u5411\u56fe\u4e0a\u7684\u5e94\u7528\n\n\u6982\u5ff5\u5c31\u4e0d\u4ecb\u7ecd\u4e86\u3002~~\u4e0d\u77e5\u9053\u6982\u5ff5\u6765\u505a\u6a21\u677f\u9898\u5e72\u4ec0\u4e48\u3002~~\n\n## \u505a\u6cd5\uff1a\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u5185\u90e8\u4e00\u5b9a\u4e0d\u542b\u6709\u6865\u8fb9\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c**\u5185\u90e8\u4e0d\u542b\u6709\u6865\u8fb9\u7684\u6781\u5927\u8fde\u901a\u5206\u91cf\u5c31\u662f\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf**\u3002\n\n\u540c\u65f6\u7ed3\u5408 Tarjan \u7b97\u6cd5\u7684\u6027\u8d28\uff0c\u6808\u9876\u5230\u6808\u4e2d\u4e00\u5b9a\u6709\u4e00\u6bb5\u5e8f\u5217\u5f62\u6210\u4e00\u4e2a\u4e0d\u542b\u6865\u8fb9\u7684\u6781\u5927\u8fde\u901a\u5206\u91cf\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u9488\u5bf9\u6b64\u9898\u7684\u505a\u6cd5\u3002\n\n\u4e3b\u6d41\u505a\u6cd5\u662f\u5bfb\u627e\u6240\u6709\u7684\u6865\u8fb9\uff0c\u5c06\u5176\u6807\u8bb0\uff0c\u7136\u540e\u7528 dfs \u6c42\u8fde\u901a\u5757\uff0c\u4f46\u662f\u6211\u8fd9\u91cc\u8981\u63d0\u4f9b\u4e00\u79cd\u5168\u65b0\u505a\u6cd5\uff0c\u5b83\u53ef\u4ee5\u7701\u7565\u4e00\u904d dfs\uff0c\u76f4\u63a5\u5728 Tarjan \u7b97\u6cd5\u4e2d\u5c31\u6c42\u51fa\u8fb9\u53cc\u3002\n\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5728\u539f\u56fe\u4e2d\uff0c\u6211\u4eec\u627e\u5230\u4e86\u6865\u8fb9\uff0c\u4fbf\u5c06\u6808\u4e2d\u7684\u5143\u7d20\u5168\u90e8\u51fa\u6808\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\uff08\u5efa\u8bae\u6709\u4e86\u7b54\u6848\u518d\u5f80\u4e0b\u770b\uff09\n\n\u663e\u7136\uff0c\u4f60\u6709\u53ef\u80fd\u4f1a\u5ffd\u7565\u6389\u4f60\u5f00\u59cb dfs \u7684\u90a3\u4e2a\u70b9\u6240\u5904\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u56e0\u4e3a\u4f60\u5728\u521d\u59cb\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u627e\u4e0d\u5230\u6865\u8fb9\u3002\n\n\u8fd9\u65f6\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u6848:\n1. \u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u70b9\uff0c\u5c06\u5176\u4e0e\u6bcf\u4e2a\u8fde\u901a\u5757\u76f8\u8fde\uff0c\u4fbf\u53ef\u4ee5\u4fdd\u8bc1\u539f\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u90fd\u5206\u914d\u5230\u4e00\u6761\u6865\u8fb9\u3002\u8fde\u901a\u5757\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e6+5,M=5e6+5;\nint n, m, q, tot, top, res, cnt;\nint ver[M], nxt[M], head[M];\nint dfn[N], stk[N], low[N];\nint f[N], vis[N];\nvector<int> g[N];\ninline void add(int x,int y)\n{\n    ver[++tot] = y;\n    nxt[tot] = head[x];\n    head[x] = tot;\n}\nvoid tarjan(int x,int fa)\n{\n\tbool f = 0;\n    stk[++top] = x;\n    dfn[x] = low[x] = ++res;\n    for(int i = head[x]; i; i = nxt[i])\n    {\n        int y = ver[i];\n        if(!dfn[y])\n        {\n            tarjan(y, x);\n            low[x] = min(low[x], low[y]);\n            if(dfn[x] < low[y])//\u8bf4\u660e\u8fd9\u6761\u8fb9\u662f\u6865\u8fb9\n            {\n                cnt++;\n                while(stk[top+1] != y)\n                \tg[cnt].push_back(stk[top--]);//\u4e0e\u70b9\u53cc\u4e0d\u540c\uff0c\u4e00\u4e2a\u70b9\u53ea\u80fd\u5b58\u5728\u4e8e\u4e00\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\n            }\n        }\n        else if(y != fa || f) low[x] = min(low[x], dfn[y]);\n        if(y == fa) f = 1;\n    }\n}\nint find(int k){return f[k] == k ? k : f[k] = find(f[k]);} \nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++) f[i] = i;\n    for(int i = 1; i <= m; i++)\n    {\n        int x, y;\n        cin >> x >> y;\n        add(x, y);\n        add(y, x);\n        f[find(x)] = find(y);//\u7edf\u8ba1\u8fde\u901a\u5757\u7684\u4ee3\u8868\n    }\n    for(int i = 1; i <= n; i++)\n    {\n        int fi = find(i);\n    \tif(!vis[fi])\n    \t\tadd(0, fi), vis[fi] = 1;//\u5efa\u7acb\u8d85\u7ea7\u70b9\n    }\n \ttarjan(0, 0);\n    cout << cnt << '\\n';\n    for(int i = 1;i <= cnt; i++)\n    {\n    \tcout << g[i].size() << ' ';\n    \tfor(int j = 0; j < g[i].size(); j++)\n    \t\tcout << g[i][j] << ' ';\n    \tcout << '\\n';\n\t}\n    return 0;\n}\n```\n\n2. \u6bcf\u6b21 Tarjan \u7ed3\u675f\u540e\uff0c\u4fbf\u5c06\u6808\u6e05\u7a7a\uff0c\u4ee5\u7edf\u8ba1\u4f60\u5ffd\u7565\u6389\u7684\u90a3\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2e6 + 5, M = 5e6 + 5;\nint n, m, q, tot, top, res, cnt;\nint ver[M], nxt[M], head[M];\nint dfn[N], stk[N], low[N];\nint vis[N];\nvector<int> g[N];\ninline void add(int x,int y)\n{\n    ver[++tot] = y;\n    nxt[tot] = head[x];\n    head[x] = tot;\n}\nvoid tarjan(int x,int fa)\n{\n\tbool f = 0;\n    stk[++top] = x;\n    dfn[x] = low[x] = ++res;\n    for(int i = head[x]; i; i = nxt[i])\n    {\n        int y = ver[i];\n        if(!dfn[y])\n        {\n            tarjan(y, x);\n            low[x] = min(low[x], low[y]);\n            if(dfn[x] < low[y])\n            {\n                cnt++;\n                while(stk[top+1] != y)\n                \tg[cnt].push_back(stk[top--]);\n            }\n        }\n        else if(y != fa || f) low[x] = min(low[x], dfn[y]);\n        if(y == fa) f = 1;\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n\tcin >> n >> m;\n    for(int i = 1; i <= m; i++)\n    {\n        int x, y;\n        cin >> x >> y;\n        add(x, y);\n        add(y, x);\n    }\n \tfor(int i = 1; i <= n; i++)\n        if(!dfn[i])\n        {\n            tarjan(i, 0);\n            cnt++;\n            while(top)\n                g[cnt].push_back(stk[top--]);\n        }\n    cout << cnt << '\\n';\n    for(int i = 1;i <= cnt; i++)\n    {\n    \tcout << g[i].size() << ' ';\n    \tfor(int j = 0; j < g[i].size(); j++)\n    \t\tcout << g[i][j] << ' ';\n    \tcout << '\\n';\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1664164075,
        "uid": 374318,
        "name": "hswfwkj",
        "ccfLevel": 7,
        "title": "\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P8436)\n\n\u5927\u5bb6\u4e5f\u53ef\u4ee5\u505a\u505a @[Sol1](https://www.luogu.com.cn/user/61088) \u5927\u4f6c\u51fa\u7684\u6a21\u677f [U119054](https://www.luogu.com.cn/problem/U119054)\u3002\n\n\u8fd8\u662f\u5148\u770b\u6837\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/231uo0av.png)\n\n\u56fe\u4e2d\u70b9 $2, 3, 4, 5, 6$ \u5f62\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u73af\u4e00\u5b9a\u662f\u8fb9\u53cc\uff0c\u800c\u70b9 $1$ \u548c $7$ \u90fd\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u81ea\u5df1\u5206\u522b\u662f\u8fb9\u53cc\uff0c\u5171\u6709\u4e09\u4e2a\u8fb9\u53cc\u3002 \n\n\u601d\u8def\uff1a\u5148\u7528 Tarjan \u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u6865\uff0c\u56e0\u4e3a\u8fb9\u53cc\u4e0d\u53ef\u80fd\u5305\u62ec\u6865\uff08\u6839\u636e\u8fb9\u53cc\u5b9a\u4e49\u4efb\u610f\u4e24\u70b9\u95f4\u6709\u4e24\u6761\u4e0d\u7ecf\u8fc7\u540c\u4e00\u6761\u8fb9\u5f97\u51fa\uff09\uff0c\u7136\u540e DFS \u4e00\u904d\uff0c\u9047\u5230\u6865\u5c31\u8df3\u8fc7\u3002\u7136\u540e\u7528\u4e00\u4e2a\u4e8c\u7ef4 vector \u5b58\u50a8\u7b54\u6848\uff0c\u5171\u6709 $x$ \u4e2a\u8fb9\u53cc\uff0c\u8f93\u51fa\u7b2c $i + 1$ \u884c\u7684\u7b2c\u4e00\u4e2a\u6570\u5c31\u662f vector \u7b2c $i$ \u884c\u7684\u5927\u5c0f ```_resMap[i].size()```\uff08$1 \\le i \\le x$\uff09\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u6211\u7684\u4ee3\u7801\uff08\u4e0d\u559c\u52ff\u55b7\uff09\uff1a\n\n$Code: $\n\n```cpp\n\n\n#include <iostream>\n#include <fstream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nconst int MAXN = 5e5 + 9;\nconst int MAXM = 2e6 + 9;\n\nstruct Edge {\n\t\n\tint _to;\n\tint _next;\n\t\n};\n\nint _maxi = 0;\nint _edge = 0;\nEdge _edgeArray[MAXM << 1];\nint _headArray[MAXN];\nint _preArray[MAXN];\nint _lowArray[MAXN];\nint _bccCount = 0;\nint _bccNoArray[MAXN];\nbool _bridgeArray[MAXM << 1];\nvector<int> _resMap[MAXN];\n\nvoid AddEdge (int from, int to) {\n\t\n\tstatic int tot = 1;\n\t\n\t_edgeArray[++tot] = {to, _headArray[from]};\n\t_headArray[from] = tot;\n\t\n\t_edgeArray[++tot] = {from, _headArray[to]};\n\t_headArray[to] = tot;\n\t\n}\n\nvoid Tarjan (int cur, int father) {\n\t\n\tstatic int dfsTime = 0;\n\t\n\t_preArray[cur] = _lowArray[cur] = ++dfsTime;\n\t\n\tfor (int i = _headArray[cur]; i; i = _edgeArray[i]._next) {\n\t\tint to = _edgeArray[i]._to;\n\t\t\n\t\tif (!_preArray[to]) {\n\t\t\tTarjan(to, cur);\n\t\t\t_lowArray[cur] = min(_lowArray[cur], _lowArray[to]);\n\t\t\t\n\t\t\tif (_lowArray[to] > _preArray[cur]) {\n\t\t\t\t_bridgeArray[i] = 1;\n\t\t\t\t_bridgeArray[i ^ 1] = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\telse if (to != father) {\n\t\t\t_lowArray[cur] = min(_lowArray[cur], _preArray[to]);\n\t\t}\n\t}\n\t\n}\n\nvoid Dfs (int cur) {\n\t\n\t_bccNoArray[cur] = _bccCount;\n\t_resMap[_bccCount].push_back(cur);\n\t\n\tfor (int i = _headArray[cur]; i; i = _edgeArray[i]._next) {\n\t\tif (_bridgeArray[i]) {\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tint to = _edgeArray[i]._to;\n\t\t\n\t\tif (!_bccNoArray[to]) {\n\t\t\tDfs(to);\n\t\t}\n\t}\n\t\n}\n\nint main () {\n\t\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr), cout.tie(nullptr);\n\t\n\tint from = 0;\n\tint to = 0;\n\t\n\tcin >> _maxi >> _edge;\n\t\n\tfor (int i = 0; i < _edge; i++) {\n\t\tcin >> from >> to;\n\t\t\n\t\tAddEdge(from, to);\n\t}\n\t\n\tfor (int i = 1; i < _maxi + 1; i++) {\n\t\tif (!_preArray[i]) {\n\t\t\tTarjan(i, 0);\n\t\t}\t\n\t}\n\t\n\tfor (int i = 1; i < _maxi + 1; i++) {\n\t\tif (!_bccNoArray[i]) {\n\t\t\t_bccCount++;\n\t\t\tDfs(i);\n\t\t}\n\t}\n\t\n\tcout << _bccCount << '\\n';\n\t\n\tfor (int i = 1; i < _bccCount + 1; i++) {\n\t\tcout << _resMap[i].size() << ' ';\n\t\t\n\t\tfor (int m = 0; m < _resMap[i].size(); m++) {\n\t\t\tcout << _resMap[i][m] << ' ';\n\t\t}\n\t\t\n\t\tcout << '\\n';\n\t}\n\t\n\treturn 0;\n\t\n}\n```\n",
        "postTime": 1661163282,
        "uid": 621187,
        "name": "accomplishment",
        "ccfLevel": 0,
        "title": "P8436 \u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf \u9898\u89e3"
    },
    {
        "content": "[OI-wiki \u4e0a\u7684\u53c2\u8003\u8d44\u6599](https://oi-wiki.org/graph/bcc/)\n\n\u770b\u4e0a\u53bb\u5927\u5bb6\u90fd\u4f7f\u7528\u7684\u662f tarjan \u7b97\u6cd5\u6765\u6c42\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002\u4f46\u5176\u5b9e\u5bf9\u4e8e\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u6211\u4eec\u6709\u5176\u4ed6\u7684\u505a\u6cd5\u3002\u4e0b\u9762\u4ecb\u7ecd\u7684\u505a\u6cd5\uff08\u4e2a\u4eba\u8ba4\u4e3a\uff09\u7801\u91cf\u4e0d\u5927\uff0c\u5e76\u4e14\u601d\u60f3\u6bd4 tarjan \u7b97\u6cd5\u7b80\u5355\u4e00\u4e9b\u3002\n\n\u8003\u8651\u5bf9\u65e0\u5411\u56fe\u8fdb\u884c dfs\uff0c\u5f97\u5230\u4e00\u68f5 dfs \u6811\u3002\n\n\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u6761\u4e0d\u5728\u6811\u4e0a\u7684\u8fb9 $(u,v)$\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u6761\u8fb9\u548c $u,v$ \u5728\u6811\u4e0a\u7684\u8def\u5f84\u6784\u6210\u4e86\u4e00\u4e2a\u73af\u3002\u56e0\u6b64\u6b64\u65f6\u8fd9\u6761\u8fb9\u548c\u5b83\u5728\u6811\u4e0a\u5bf9\u5e94\u7684\u8def\u5f84\u90fd\u4e0d\u4f1a\u662f\u5272\u8fb9\u3002\u4e8e\u662f\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6761\u4e0d\u5728 dfs \u6811\u4e0a\u7684\u8fb9\u6807\u8bb0\u597d\u5b83\u5728\u6811\u4e0a\u5bf9\u5e94\u7684\u8def\u5f84\uff0c\u8fd9\u6837\u672a\u88ab\u6807\u8bb0\u5230\u7684\u8fb9\u5c31\u662f\u5272\u8fb9\u3002\n\n\u653e\u4e00\u5f20\u56fe\u4ee5\u4fbf\u7406\u89e3\u3002\uff08\u56fe\u6e90 OI-wiki\uff09\n\n\u7ea2\u8272\u7684\u8fb9\u662f\u4e0d\u5728 dfs \u6811\u4e0a\u7684\u8fb9\u3002\u5bf9\u4e8e\u6bcf\u6761\u7ea2\u8fb9\u6211\u4eec\u5c06\u6811\u4e0a\u5bf9\u5e94\u7684\u8def\u5f84\u6253\u597d\u6807\u8bb0\uff08\u7528\u7eff\u8272\u8868\u793a\uff09\u3002\u4e8e\u662f\u5269\u4f59\u7684\u9ed1\u8272\u7684\u8fb9\u5c31\u662f\u5272\u8fb9\u3002\n\n![](https://oi-wiki.org/graph/images/bcc-1.svg)\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5982\u4f55\u5feb\u901f\u5730\u6807\u8bb0\u6811\u4e0a\u7684\u8def\u5f84\u3002\u505a\u6811\u4e0a\u5dee\u5206\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u65e0\u5411\u56fe\u4e0a\u7684 dfs \u6811\u6709\u4f18\u79c0\u7684\u6027\u8d28\uff0c\u975e\u6811\u8fb9\u4e0d\u4f1a\u6709\u6a2a\u53c9\u8fb9\uff0c\u53ea\u4f1a\u6709\u513f\u5b50\u548c\u7956\u5148\u76f8\u8fde\u7684\u8fb9\uff08\u5426\u5219\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u6cbf\u6a2a\u53c9\u8fb9 dfs\uff0c\u8fd9\u8fdd\u53cd\u4e86 dfs \u6811\u7684\u5b9a\u4e49\uff09\u3002\n\n\u56e0\u6b64\u6211\u4eec\u6211\u4eec\u5c31\u7701\u53bb\u4e86\u6c42 LCA \u7684\u6b65\u9aa4\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u975e\u6811\u8fb9\uff0c\u76f4\u63a5\u5728\u6df1\u5ea6\u8f83\u5927\u7684\u7ed3\u70b9\u4e0a\u52a0 $1$\uff0c\u5728\u6df1\u5ea6\u8f83\u5c0f\u7684\u7ed3\u70b9\u51cf $1$\uff0c\u5c31\u5b8c\u6210\u4e86\u6811\u4e0a\u5dee\u5206\u3002\u6240\u6709\u7684\u975e\u6811\u8fb9\u90fd\u5904\u7406\u5b8c\u540e\uff0c\u6211\u4eec\u505a\u4e00\u4e0b\u5b50\u6811\u548c\uff0c\u6b64\u65f6\u7ed3\u70b9\u503c\u4e3a $0$ \u7684\u7ed3\u70b9\u5230\u5b83\u7684\u7236\u4eb2\u7684\u8fb9\u5c31\u662f\u5272\u8fb9\u3002\n\n\u6c42\u51fa\u5272\u8fb9\u4e4b\u540e\u5c06\u5272\u8fb9\u5220\u53bb\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u662f\u4e00\u4e2a\u4e2a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e86\u3002\n\n\u6700\u540e\u6211\u4eec\u7ed9\u51fa\u4ee3\u7801\u5b9e\u73b0\u3002\u66f4\u591a\u7ec6\u8282\u89c1\u6ce8\u91ca\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <cctype>\n#include <vector>\nusing namespace std;\nconst int maxn=500010,maxm=2000010;\ninline int read()\n{\n    int ret=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n    while(isdigit(ch)){ret=ret*10+ch-'0';ch=getchar();}\n    return ret*f;\n}\n//cnt=1\u662f\u4e3a\u4e86\u65b9\u4fbf\u4e4b\u540ee[i^1]\u67e5\u53cd\u8fb9\n//treecnt\u662f\u56fe\u4e2ddfs\u6811\u7684\u6570\u91cf\uff08\u56e0\u4e3a\u539f\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\uff09\uff0crt\u662f\u6bcf\u68f5\u6811\u7684\u6839\n//bcccnt\u662f\u56fe\u4e2d\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\n//vis\u4e3a\u8bbf\u95ee\u6807\u8bb0\uff0cw\u662f\u70b9\u6743\uff08\u505a\u5dee\u5206\u7528\uff09\uff0cdep\u4e3a\u7ed3\u70b9\u5728\u6811\u4e2d\u7684\u6df1\u5ea6\uff0cfa\u4e3a\u7ed3\u70b9\u5728\u6811\u4e2d\u7684\u7236\u4eb2\n//\u53e6\u5916\u65e0\u5411\u56fe\u8bb0\u5f97\u4e24\u500d\u7a7a\u95f4\nint n,m,cnt=1,treecnt,bcccnt,h[maxn<<1],vis[maxn],w[maxn],dep[maxn],rt[maxn],fa[maxn];\nvector<int> bcc[maxn];//\u5b58\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\nstruct edge{int to,nxt,val;}e[maxm<<1];//\u8fd9\u91cc\u7ed9\u8fb9\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u6807\u8bb0\uff0c1\u4e3a\u6811\u8fb9\uff0c0\u4e3a\u975e\u6811\u8fb9\uff0c-1\u4e3a\u5272\u8fb9\nvoid addedge(int u,int v,int val)\n{\n    e[++cnt]=(edge){v,h[u],val};\n    h[u]=cnt;\n}\nvoid dfs1(int u)//\u7b2c\u4e00\u6b21dfs\u6c42\u51fadfs\u6811\u53ca\u76f8\u5173\u7684\u503c\n{\n    vis[u]=1;\n    for(int i=h[u];i;i=e[i].nxt)\n    {\n        int p=e[i].to;\n        if(!vis[p])\n        {\n            e[i].val=e[i^1].val=1;\n            dep[p]=dep[u]+1;\n            fa[p]=u;\n            dfs1(p);\n        }\n    }\n}\nvoid dfs2(int u)//\u7b2c\u4e8c\u6b21dfs\u505a\u5b50\u6811\u548c\n{\n    for(int i=h[u];i;i=e[i].nxt)\n        if(e[i].val)\n        {\n            int p=e[i].to;\n            if(p!=fa[u])\n            {\n                dfs2(p);\n                w[u]+=w[p];\n            }\n        }\n}\nvoid dfs3(int u)//\u7b2c\u4e09\u6b21dfs\u7edf\u8ba1\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\n{\n    vis[u]=1;bcc[bcccnt].push_back(u);\n    for(int i=h[u];i;i=e[i].nxt)\n    {\n        if(e[i].val==-1)continue;//\u9047\u5230\u5272\u8fb9\u5c31\u8df3\u8fc7\n        int p=e[i].to;\n        if(!vis[p])dfs3(p);\n    }\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=m;i++)\n    {\n        int u=read(),v=read();\n        addedge(u,v,0);addedge(v,u,0);\n    }\n    for(int i=1;i<=n;i++)\n        if(!vis[i])\n        {\n            rt[++treecnt]=i;\n            dfs1(i);\n        }\n    for(int u=1;u<=n;u++)\n        for(int i=h[u];i;i=e[i].nxt)\n            if(!e[i].val)//\u82e5\u8be5\u8fb9\u4e3a\u975e\u6811\u8fb9\u5219\u505a\u5dee\u5206\n            {\n                int p=e[i].to;\n                if(dep[p]<dep[u]){w[p]--;w[u]++;}//\u4e0a\u9762\u5df2\u6709\u5bf9\u8fd9\u6837\u5199\u7684\u89e3\u91ca\u3002\n                //\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u53ea\u8003\u8651\u4e86dep[p]<dep[u]\u7684\u60c5\u51b5\uff0c\u8fd9\u662f\u56e0\u4e3a\u6240\u6709\u7684\u8fb9\u90fd\u662f\u53cc\u5411\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u7edf\u8ba1\u4e00\u6b21\n            }\n    for(int i=1;i<=treecnt;i++)dfs2(rt[i]);\n    for(int u=1;u<=n;u++)\n        if(!w[u])//\u70b9\u6743\u4e3a0\u5219\u4e0e\u7236\u4eb2\u4e4b\u95f4\u7684\u8fb9\u4e3a\u5272\u8fb9\n            for(int i=h[u];i;i=e[i].nxt)\n                if(e[i].val&&e[i].to==fa[u])\n                    e[i].val=e[i^1].val=-1;\n    memset(vis,0,sizeof(vis));\n    for(int i=1;i<=n;i++)\n        if(!vis[i])\n        {\n            ++bcccnt;\n            dfs3(i);\n        }\n    printf(\"%d\\n\",bcccnt);\n    for(int i=1;i<=bcccnt;i++)\n    {\n        printf(\"%d \",bcc[i].size());\n        for(auto it:bcc[i])printf(\"%d \",it);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1659366818,
        "uid": 94617,
        "name": "pjykk",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P8436 \u3010\u6a21\u677f\u3011\u8fb9\u53cc\u8fde\u901a\u5206\u91cf"
    }
]