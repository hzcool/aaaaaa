[
    {
        "content": "\u611f\u89c9\u697c\u4e0b\u4ee3\u7801\u6709\u70b9\u590d\u6742\u554a\uff08\u96fe\n\n\u6765\u4e00\u4e2a\u7b80\u6d01\u660e\u4e86\u7684\u9898\u89e3= =\n\n\u9996\u5148\u5bf9\u4e8e\u6240\u6709\u73a9\u5177\u5982\u679c\u6709\u6df1\u5ea6\u5dee\u8d85\u8fc71\u7684\u5c31\u662f\u65e0\u89e3\uff08\u663e\u7136\uff09\uff0c\u6240\u4ee5dfs\u4e00\u904d\u8bb0\u5f55\u6700\u5c0f\u6700\u5927\u7684\u6df1\u5ea6\u5373\u53ef\u3002\u7136\u540e\u5982\u679c\u6709\u4e00\u4e2a\u70b9\u7684\u4e24\u9897\u5b50\u6811\u4e2d\u90fd\u542b\u6709\u6700\u5c0f\u3001\u6700\u5927\u6df1\u5ea6\uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e5f\u662f\u65e0\u89e3\uff0c\u56e0\u4e3a\u65e0\u8bba\u4f60\u600e\u4e48\u4ea4\u6362\u90fd\u4e0d\u80fd\u4f7f\u6df1\u5ea6\u5c0f\u7684\u5168\u90e8\u5230\u53f3\u8fb9\u53bb\u3002\n\n\u7136\u540e\u8003\u8651\u6700\u5c11\u4ea4\u6362\u6b21\u6570\uff1a\u5176\u5b9e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\uff0c\u4e09\u79cd\u60c5\u51b5\u9700\u8981\u4ea4\u6362\uff0c\n\n1. \u5de6\u8fb9\u5168\u662f\u5c0f\u6df1\u5ea6\u7684\uff0c\u53f3\u8fb9\u5168\u662f\u5927\u6df1\u5ea6\u7684\n\n2. \u5de6\u8fb9\u5168\u662f\u5c0f\u6df1\u5ea6\u7684\uff0c\u53f3\u8fb9\u5927\u5c0f\u6df1\u5ea6\u90fd\u6709\n\n3. \u5de6\u8fb9\u5927\u5c0f\u6df1\u5ea6\u90fd\u6709\uff0c\u53f3\u8fb9\u5168\u662f\u5927\u6df1\u5ea6\u7684\n\ndfs\u641c\u4e00\u904d\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\nusing namespace std;\n\nconst int N = 100010;\nint n, ans = 0, Mindep, Maxdep;\nbool flag = true;\n\nstruct Tree{\n    int lc, rc;\n}T[N];\n\ninline int read()\n{\n    char ch = getchar(); int x = 0, flag = 0;\n    while (!isdigit(ch)){ if (ch == '-') flag = 1; ch = getchar(); }\n    while (isdigit(ch)){ x = x * 10 + ch - '0'; ch = getchar(); }\n    return flag ? -x : x;\n}\n\ninline void dfs(int u, int s)\n{\n    if (u == -1){\n        Mindep = min(Mindep, s); Maxdep = max(Maxdep, s);\n        return;\n    }\n    dfs(T[u].lc, s+1); dfs(T[u].rc, s+1);\n}\n\ninline int solve(int u, int s)\n{\n    if (u == -1){\n        if (s == Mindep) return 0; else return 1;\n    }\n    int x = solve(T[u].lc, s+1);\n    int y = solve(T[u].rc, s+1);\n    if ((x == 0 && y == 1) || (x == 2 && y == 1) || (x == 0 && y == 2)) ans ++;\n    if (x == 2 || y == 2){\n        if (x == 2 && y == 2) flag = false; return 2;\n    }\n    if (x+y == 1) return 2;\n    if (x+y == 0) return 0; else return 1;\n}\n\nint main()\n{\n    n = read();\n    for (int i = 1; i <= n; i ++) T[i].lc = read(), T[i].rc = read();\n    Mindep = 1e9; Maxdep = 0; dfs(1, 0);\n    if (Maxdep-Mindep > 1){ puts(\"-1\"); return 0; }\n    if (Maxdep-Mindep == 0){ puts(\"0\"); return 0; }\n    solve(1, 0);\n    if (!flag){ puts(\"-1\"); return 0; }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1507713329,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "CSP2020 \u5feb\u5230\u4e86\uff0c\u611f\u89c9\u81ea\u5df1 dp \u592a\u83dc\u4e86\uff0c\u8865\u4e86\u5f88\u591a dp \\>\\_<\n\n---\n\n\u9898\u610f\uff08\u7ecf\u8fc7 OI \u5316\u9b54\u6539\uff09\uff1a\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6bcf\u6b21\u53ef\u4ee5\u4ea4\u6362\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\uff0c\u4f7f\u8fd9\u68f5\u4e8c\u53c9\u6811\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\n\n\u601d\u8def\uff1a\u5bb9\u6613\u60f3\u5230\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5\u3002\n\n**\u60c5\u51b5 $1$** \uff1a\u5bb9\u6613\u60f3\u5230\uff0c\u82e5\u6240\u6709\u53f6\u5b50\u8282\u70b9\u4e2d\u6700\u6df1\u7684\u6df1\u5ea6\u548c\u6700\u6d45\u7684\u6df1\u5ea6\u4e4b\u5dee\u5927\u4e8e $1$\uff0c\u90a3\u4e48\u65e0\u89e3\uff0c\u56e0\u4e3a\u6b64\u65f6\u6ca1\u6709\u529e\u6cd5\u901a\u8fc7\u4ea4\u6362\u5de6\u53f3\u513f\u5b50\u5c06\u6df1\u5ea6\u5dee\u51cf\u5c11\u3002\n\n**\u60c5\u51b5 $2$** \uff1a\u5982\u679c\u6240\u6709\u53f6\u5b50\u6df1\u5ea6\u5747\u76f8\u540c\uff0c\u76f4\u63a5\u8f93\u51fa $0$\u3002\n\n\u4ee5\u4e0a\u60c5\u51b5\u53ef\u4ee5\u901a\u8fc7\u4e00\u904d dfs \u6c42\u6df1\u5ea6\u89e3\u51b3\u3002\n\n**\u60c5\u51b5 $3$** \uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u5de6\u5b50\u6811**\u5168\u90e8**\u4e3a\u6df1\u5ea6\u6d45\u7684\u8282\u70b9\uff0c\u4e14\u53f3\u5b50\u6811**\u5b58\u5728**\u6df1\u5ea6\u6df1\u7684\u8282\u70b9\uff0c\u6b64\u65f6\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u4ea4\u6362\u3002\n\n**\u60c5\u51b5 $4$** \uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u5de6\u5b50\u6811**\u5b58\u5728**\u6df1\u5ea6\u6df1\u3001\u6d45\u7684\u4e24\u79cd\u8282\u70b9\uff0c\u4e14\u53f3\u5b50\u6811**\u5168\u90e8**\u4e3a\u6df1\u5ea6\u6df1\u7684\u8282\u70b9\uff0c\u6b64\u65f6\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u4ea4\u6362\u3002\n\n**\u60c5\u51b5 $5$** \uff1a\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u5de6\u3001\u53f3\u5b50\u6811**\u5747\u5b58\u5728**\u6df1\u5ea6\u6df1\u3001\u6d45\u7684\u4e24\u79cd\u60c5\u51b5\uff0c\u90a3\u4e48\u65e0\u89e3\uff0c\u56e0\u4e3a\u65e0\u8bba\u600e\u4e48\u4ea4\u6362\uff0c\u603b\u5b58\u5728\u5de6\u5b50\u6811\u7684\u6df1\u5ea6\u6d45\u7684\u8282\u70b9\u6bd4\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u6df1\u7684\u8282\u70b9\u4e0d\u7b26\u5408\u9898\u610f\u3002\n\n\u4ee5\u4e0a\u60c5\u51b5\u5728\u7b2c\u4e8c\u904d dfs \u65f6\u7edf\u8ba1\u3002\n\n---\n\n\u5b9e\u73b0\u7ec6\u8282\uff1a\u7b2c\u4e00\u904d dfs \u5c31\u662f\u6b63\u5e38\u7684\u6c42\u6df1\u5ea6\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u4e3b\u8981\u8bf4\u8bf4\u7b2c\u4e8c\u904d dfs\u3002\n\n\u7b2c\u4e8c\u904d dfs \u7684\u8fd4\u56de\u503c\u8bbe\u8ba1\u4e3a $0/1/2$\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u7ed3\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5168\u90e8\u4e3a\u6df1\u5ea6\u6d45\u7684\u8282\u70b9\u3001\u6df1\u5ea6\u6df1\u7684\u8282\u70b9\uff0c\u6216\u8005\u4e8c\u8005\u7686\u6709\u3002\u5728\u9012\u5f52\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5224\u65ad\u5de6\u3001\u53f3\u5b50\u6811\u8fd4\u56de\u503c\u8fdb\u884c\u5904\u7406\u5373\u53ef\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//By: Luogu@rui_er(122461)\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+5, inf = 0x3f3f3f3f; \n\nint n, son[N][2], mi = inf, ma, ans;\nvoid dfs(int u, int k) {\n\tif(u == -1) return (mi=min(mi, k)), (ma=max(ma, k)), void();\n\tdfs(son[u][0], k+1);\n\tdfs(son[u][1], k+1);\n}\nint dfs2(int u, int k) {\n\tif(u == -1) return (k != mi);\n\tint x = dfs2(son[u][0], k+1);\n\tint y = dfs2(son[u][1], k+1);\n\tans += ((!x && y) || (x == 2 && y == 1));\n\tif(x == 2 && y == 2) exit((puts(\"-1\"), 0));\n\tif(x == 2 || y == 2 || x + y == 1) return 2;\n\tif(!(x + y)) return 0;\n\treturn 1;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d\", &son[i][0], &son[i][1]);\n\tdfs(1, 0);\n\tif(ma - mi > 1) return puts(\"-1\"), 0;\n\tif(ma == mi) return puts(\"0\"), 0;\n\tint _ = dfs2(1, 0);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1601644107,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "\u4ece\u9898\u76ee\u4e2d\u53ef\u4ee5\u8f7b\u6613\u5f97\u51fa\uff0c\u8fd9\u662f\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u81f3\u4e8e\u662f\u4ec0\u4e48\u4e8c\u53c9\u6811\u6211\u5c31\u4e0d\u77e5\u9053\u4e86\uff0c\u9898\u610f\u5c31\u662f\u5c06\u6df1\u5ea6\u8f83\u5c0f\u7684\u53f6\u5b50\u8282\u70b9\u653e\u5728\u6811\u7684\u6700\u53f3\u8fb9\uff0c\u5f53\u4efb\u610f\u4e24\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u5dee\u5927\u4e8e1\u65f6\uff0c\u7531\u4e8e\u4ea4\u6362\u4e0d\u4f1a\u6539\u53d8\u6df1\u5ea6\uff0c\u6545\u4e00\u5b9a\u65e0\u89e3\u3002\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u7528aum\u8868\u793a\u8282\u70b9\u540e\u4ee3\u4e2d\u8f83\u5c0f\u6df1\u5ea6\u7684\u73a9\u5177\u6570\u91cf\uff0c\u7528num\u8868\u793a\u8be5\u8282\u70b9\u540e\u4ee3\u6240\u6709\u73a9\u5177\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5427\u95ee\u9898\u8f6c\u5316\u4e3a\u5c06\u6307\u5b9a\u53f6\u5b50\u8282\u70b9\u672c\u8eab\u53ca\u5176\u6240\u6709\u7956\u5148\uff08\u4e0d\u5305\u62ec\u6839\uff09\u79fb\u81f3\u6811\u7684\u6700\u53f3\u7aef\uff0c\u5373\u662f\u5c06\u6b64\u53f6\u5b50\u8282\u70b9\u5230\u6839\u7684\u6240\u6709\u8282\u70b9\u53d8\u6210\u53f3\u5b69\u5b50\u3002\n\n\u60c5\u51b5\u4e00\uff1a ![](https://cdn.luogu.com.cn/upload/pic/7393.png)\n\n\u6700\u666e\u901a\u7684\u60c5\u51b5\uff0c\u53ea\u9700\u4ea4\u6362\u5373\u53ef\uff0c\u8fd9\u91cc\u5de6\u8fb9\u7684\u661f\u661f\u4e0d\u5e94\u53ea\u7406\u89e3\u6210\u73a9\u5177\uff0c\u4e5f\u53ef\u4ee5\u662f\u5b58\u5728aum\u7684\u6746\uff0c\u800c\u76f8\u5e94\u7684\u53f3\u8fb9\u7684\u661f\u661f\u5c31\u662f\u4e0d\u5b58\u5728aum\u7684\u6746\u3002\n\n\u60c5\u51b5\u4e8c\uff1a ![](https://cdn.luogu.com.cn/upload/pic/7394.png)\n\n\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u5c5e\u4e8e\u4e0a\u8ff0\u60c5\u51b5\u4e86\uff0c\u7ecf\u4ea4\u6362\u540e\u5168\u56fe\u5b9e\u9645\u4e0a\u662f\u6ca1\u6709\u53d8\u5316\u7684\u3002\u7531\u4e8e\u4ea4\u6362\u53ea\u80fd\u6539\u53d8\u540c\u4e00\u6839\u6746\u4e0a\u7684\u6392\u5217\uff0c\u6545\u60c5\u51b5\u4e8c\u65e0\u89e3\u3002\n\n\u90a3\u4e48\u63a8\u51fa\u65e0\u89e3\u7684\u53c8\u4e00\u60c5\u51b5\uff0c\u5f85\u79fb\u52a8\u8282\u70b9\u53f3\u8fb9\u7684\u8282\u70b9\u7684aum<num\u3002\u4f46\u662f\uff01\u8fd9\u4e2a\u60c5\u51b5\u5e76\u4e0d\u7edd\u5bf9\uff0c\u5373\u662f\u60c5\u51b5\u4e09\u3002\n\n\u60c5\u51b5\u4e09\uff1a ![](https://cdn.luogu.com.cn/upload/pic/7395.png)\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u5de6\u8282\u70b9\u7ecf\u4ea4\u6362\u540e\u7b26\u5408\u9898\u610f\u3002\n\n\u6545\u5f97\u51fa\u4ee3\u7801\uff08\u5168\u7a0b\u4e71\u641e\uff0c\u4ee3\u7801\u51cc\u4e71\uff0c\u8c05\u89e3\uff0c\u8c05\u89e3\uff09\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\nconst int maxx=1e5+10;\nint n,m,fa[maxx<<2],tim=0,rt,deep[maxx<<2];\nstruct tree{\n    int le,ri,num,anum;\n    tree(){le=0,ri=0,anum=0,num=0;}\n}tr[maxx<<2];\nvoid dfs(int s){\n    if(s>n) return;\n    deep[tr[s].le]=deep[tr[s].ri]=deep[s]+1;\n    dfs(tr[s].le);\n    dfs(tr[s].ri);\n    tr[s].num=tr[tr[s].le].num+tr[tr[s].ri].num;\n    tr[s].anum=tr[tr[s].le].anum+tr[tr[s].ri].anum;\n}\nvoid work()\n{\n    int ans=0;\n    for(int i=n+tim;i>n;i--)if(tr[i].anum){\n        int s=i;\n        while(fa[s]){\n            int fs=fa[s],rs=tr[fs].ri;\n            if(tr[fa[s]].le==s){\n                if(!tr[rs].anum){             //\u60c5\u51b5\u4e00 \n                    swap(tr[fs].le,tr[fs].ri); \n                    ans++;\n                }else if(tr[s].anum==tr[s].num&&tr[rs].anum<tr[rs].num){  //\u60c5\u51b5\u4e09 \n                    swap(tr[fs].le,tr[fs].ri);\n                    ans++;\n                }else if(tr[s].anum<tr[s].num && tr[rs].anum<tr[rs].num){  //\u60c5\u51b5\u4e8c \n                    printf(\"-1\\n\"); return;\n                }\n            }\n            s=fa[s];\n        }\n    }printf(\"%d\\n\",ans);\n}\nint main()\n{\n    int x,y;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d%d\",&x,&y);\n        if(x>0) fa[x]=i,tr[i].le=x;\n        else{\n            tim++; fa[n+tim]=i;\n            tr[i].le=n+tim;\n            tr[n+tim].num=1;\n        }\n        if(y>0) fa[y]=i,tr[i].ri=y;\n        else {\n            tim++;fa[n+tim]=i;\n            tr[i].ri=n+tim;\n            tr[n+tim].num=1;\n        }\n    }\n    for(int i=1;i<=n;++i) if(!fa[i]){rt=i; break;}   //\u5bfb\u627e\u6839\u8282\u70b9 \n    deep[rt]=1;\n    dfs(rt);                 //\u8bb0\u5f55\u6df1\u5ea6\uff0cnum\u6807\u8bb0\u4e0a\u4f20 \n    int mind=deep[n+1],maxd=deep[n+1];\n    for(int i=n+1;i<=n+tim;++i){             //\u5bfb\u627e\u6700\u5927\u548c\u6700\u5c0f\u6df1\u5ea6 \n        if(deep[i]>maxd) maxd=deep[i];\n        if(deep[i]<mind) mind=deep[i];\n    }\n    if(maxd-mind>1){printf(\"-1\\n\"); return 0;}       // \u6df1\u5ea6\u5dee\u8fc7\u5927\uff0c\u65e0\u89e3 \n    else if(maxd-mind==0){printf(\"0\\n\"); return 0;}  //\u6ca1\u6709\u9700\u8981\u4ea4\u6362\u7684\u73a9\u5177 \n    for(int i=n+1;i<=n+tim;++i)\n        if(deep[i]==mind) tr[i].anum=1;              //\u8bb0\u5f55\u6df1\u5ea6\u5c0f\u7684\u73a9\u5177 \n    dfs(rt);                                 //anum\u6807\u8bb0\u4e0a\u4f20 \n    work();\n    return 0;\n}\n```cpp",
        "postTime": 1503717254,
        "uid": 46142,
        "name": "Flyhigh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u5728\u9898\u89e3\u4e2d\u53d1\u73b0\u6ca1\u6709P\u515a\u7684\uff0c\n\u6253\u7b97\u5199\u4e00\u7bc7\u9898\u89e3\u6765\u4e3aNOIP2018\u7684\u7ae5\u978b\u4eec\u52a0\u6cb9\uff01\nP\u515a\u7684\u798f\u5229\u6765\u4e86\uff1a\n\u89c1\u4e0b\u9762pascal\u4ee3\u7801\uff0c\u901a\u4fd7\u6613\u61c2\n\n```pascal\nuses math;//math\u5e93\nvar a,b,c,d:array[-1..100000] of longint;\nf:array[-1..100000] of boolean;\nn,sum,i,z,z1,zz,x,zd:longint;\npb,p1:boolean;\nbegin\nreadln(n);\nfor i:=1 to n do\n  readln(c[i],d[i]);//\u8bfb\u5165\nfor x:=n downto 1 do//\u5faa\u73af\u5f00\u59cb\n  begin\n  if c[x]=-1 then//\u5224\u65ad\n    begin\n    z:=1;zd:=1;\n    pb:=false;//\u8bbe\u7f6e\n    end\n  else\n    begin\n    z:=a[c[x]];\n    zd:=b[c[x]];\n    pb:=f[c[x]];\n    end;\n  if d[x]=-1 then//\u540c\u4e0a\n    begin\n    z1:=1;zz:=1;\n    p1:=false;\n    end\n  else\n    begin\n    z1:=a[d[x]];\n    zz:=b[d[x]];\n    p1:=f[d[x]];\n    end;\n  if (c[x]<>-1) and (d[x]<>-1) and p1 and pb then//\u5224\u65ad\u53ef\u4e0d\u53ef\u4ee5\u6539\u6210\u6ee1\u610f\u7684\n    begin\n    writeln(-1);//\u4e0d\u884c\uff0c\u8f93\u51fa-1\n    close(input);close(output);halt;//\u7ed3\u675f\n    end;\n  if abs(zd-zz)>1 then begin writeln(-1);close(input);close(output);halt;end;//\u8f93\u51fa-1\uff0c\u7ed3\u675f\n  if z=z1 then f[x]:=false else f[x]:=true;//\u8bbe\u7f6e\n  if z<z1 then sum:=sum+1;\n  a[x]:=z+z1;\n  b[x]:=max(zd,zz)+1;//\u503c\u53d8\u6210\u5927\u7684\u90a3\u4e2a\n  end;\nwriteln(sum);//\u8f93\u51fa\n\nend.\n\n```\n\n\u8bf7\u7ba1\u7406\u5458\u901a\u8fc7\uff0c\u8c22\u8c22\n\u4e0d\u559c\u52ff\u55b7",
        "postTime": 1534677744,
        "uid": 122943,
        "name": "ynzzr",
        "ccfLevel": 0,
        "title": "[APIO2007]\u98ce\u94c3"
    },
    {
        "content": "\u4e8c\u5206\uff0c\u628a\u6240\u6709\u5206\u6210\u4e24\u62e8\uff0c\u6bcf\u4e00\u62e8\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u4e00\u79cd\u662f\u5168\u90e8\u9ad8\u4e00\u5c42\uff0c\u4e00\u79cd\u662f\u6df7\u5408\uff0c\u5982\u679c\u540c\u4e00\u5c42\u7684\u4e24\u4e2a\u90fd\u662f\u4e00\u534a\u7684\u5c31\u65e0\u6cd5\u5b8c\u6210\uff0c\u5f53\u6df7\u5408\u7684\u5728\u53f3\u8fb9\u662fans\u5c31\u52a0\uff0c\u76f8\u4fe1\u4f60\u61c2\u5f97\u3002\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005;\nint n,ans,Mindep=1<<30,Maxdep;\nstruct Tree{\n    int l,r;\n}T[maxn];\nint read(){\n    int ret=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)) ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\nvoid DFS(int u,int s){\n    if (u==-1){\n        Mindep=min(Mindep,s); Maxdep=max(Maxdep,s);\n        return;\n    }\n    DFS(T[u].l,s+1),DFS(T[u].r,s+1);\n}\nint solve(int u,int s){\n    if (u==-1){//0\u2192\u6700\u5c0f; 1\u2192\u6700\u5927 2\u2192\u4e24\u8005\u517c\u6709 \n        if (s==Mindep) return 0;\n\t\treturn 1;\n    }\n    int x=solve(T[u].l,s+1);\n    int y=solve(T[u].r,s+1);\n    if ((x==0&&y==1) || (x==2&&y==1) || (x==0&&y==2)) ans++;\n    if (x==2||y==2){\n        if (x==2&&y==2) {printf(\"-1\\n\");exit(0);}\n\t\treturn 2;\n    }\n    if (x+y==1) return 2;\n    if (x+y==0) return 0;\n\treturn 1;\n}\nint main(){\n    n=read();\n    for (int i=1;i<=n;i++) T[i].l=read(),T[i].r=read();\n    DFS(1,0);\n    if (Maxdep-Mindep> 1){printf(\"-1\\n\");return 0;}\n    if (Maxdep-Mindep==0){printf(\"0\\n\");return 0;}\n    solve(1,0);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1595940341,
        "uid": 188879,
        "name": "VioletIsMyLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "\u5148\u8fdb\u884c\u4e00\u6b21dfs\uff0c\u627e\u51fa\u53f6\u7ed3\u70b9\uff08\u661f\u661f\uff09\u7684\u5206\u5e03\u3002\u5982\u679c\u4e0d\u662f\u5168\u90e8\u5728\u4e00\u5c42\u6216\u76f8\u90bb\u7684\u4e24\u5c42\uff0c\u5c31\u8fd4\u56defalse\uff0c\u9000\u51fa\u7a0b\u5e8f\u3002\n\n\u518d\u8fdb\u884c\u7b2c\u4e8c\u6b21dfs\uff0c\u6bcf\u4e2a\u8282\u70b9\uff08\u6746\u548c\u661f\u661f\u90fd\u770b\u4f5c\u8282\u70b9\uff09\u50a8\u5b58\u4e00\u4e2a\u5b83\u53ca\u4ee5\u4e0b\u6240\u6302\u661f\u661f\u5206\u5e03\u7684\u72b6\u6001\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u53ea\u6709\u4e24\u4f4d\u7684\u4e8c\u8fdb\u5236\u4e32\uff0c\u53f3\u5411\u5de6\u7b2c\u4e00\u4f4d\u8868\u793a\u6709\u661f\u661f\u6302\u5728\u5728\u8f83\u6d45\u7684\u4e00\u5c42\uff0c\u53f3\u5411\u5de6\u7b2c\u4e8c\u4f4d\u8868\u793a\u6709\u661f\u661f\u6302\u5728\u5728\u8f83\u6df1\u7684\u4e00\u5c42\u3002\n\n\u540c\u65f6\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u4e24\u5c42\u90fd=3\uff08\u542b\u6709\u6df1\u6d45\u4e24\u5c42\uff09\uff0c\u5219\u65e0\u6cd5\u5408\u5e76\uff0c\u8fd4\u56defalse\u9000\u51fa\u7a0b\u5e8f\u3002\n\n\u5982\u679c\u5de6\u8fb9\u6709\u8f83\u6d45\u7684\uff0c\u53f3\u8fb9\u6709\u8f83\u6df1\u7684\uff0c\u5219\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u5728\u7b54\u6848\u4e0a\u8fdb\u884c\u7d2f\u52a0\uff08ans++\uff09\n\n\n```\n#include <cstdlib>\n#include <algorithm>\n\n#include <cstdio>\n#include <cmath>\n\n#define lson(o) ch[o][0]\n#define rson(o) ch[o][1]\n#define REP(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nconst int N=233333;\nint n,m,ans=0; int dep[N]; int ch[N][2]; int awsl[N];\n\nvoid input()\n{\n\tscanf(\"%d\",&n); m=n;\n\tREP(i,1,n) {\n\t\tint c1,c2; scanf(\"%d %d\",&c1,&c2);\n\t\tif(c1==-1) c1=++m; if(c2==-1) c2=++m;\n\t\tlson(i)=c1,rson(i)=c2;\n\t}\n}\n\nint Nts[2]; int x1,x2;\nbool dfs1(int u,int ff)\n{\n\tdep[u]=dep[ff]+1;\n\tif(u>n) {\n\t\tif(dep[u]==Nts[0] || dep[u]==Nts[1]) return true;\n\t\t\n\t\tif(Nts[0]==0) {Nts[0]=dep[u]; return true;}\n\t\tif(Nts[1]==0) {Nts[1]=dep[u]; return true;}\n\t\t\n\t\treturn false;\n\t}\n\tif(!dfs1(lson(u),u)) return false;\n\tif(!dfs1(rson(u),u)) return false;\n\t\n\treturn true;\n}\n\nbool dfs2(int u)\n{\n\tif(u>n) {\n\t\tREP(k,0,1){\n\t\t\tif(Nts[k]==dep[u]){\n\t\t\t\tawsl[u]=k?2:1; \n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\tif(!dfs2(lson(u))) return false;\n\tif(!dfs2(rson(u))) return false;\n\tx1=awsl[lson(u)],x2=awsl[rson(u)];\n\tif(x1==3 && x2==3) return false;\n\tif((x1&1)&&(x2&2)) ans++;\n\t\n\tawsl[u]=(x1|x2);\n\treturn true;\n}\n\nbool work()\n{\n\tbool flg=dfs1(1,0); if(!flg) return false;\n\tif(Nts[0]>Nts[1]) swap(Nts[0],Nts[1]);\n\tif(!(Nts[1]-Nts[0]==1|| (Nts[0]==0 || Nts[1]==0))) return false;\n\treturn dfs2(1);\n}\n\nint main()\n{\n\tfreopen(\"mobiles.in\",\"r\",stdin);\n\tfreopen(\"mobiles.out\",\"w\",stdout);\n\tinput();\n\twork()?printf(\"%d\\n\",ans) : printf(\"-1\\n\");\n//\tprintf(\"%d %d\\n\",Nts[0],Nts[1]);\n//\tREP(i,1,m) printf(\"%d \",awsl[i]);\n\t\n\treturn 0;\n}\n\n```\n",
        "postTime": 1550214312,
        "uid": 31576,
        "name": "SHDITYR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "~~\u9b3c\u624d\u8ba9\u4f60\u770b\u6211\u9898\u89e3~~\n\n\u968f\u673a\u8df3\u9898\u5230\u4e86\uff0c\u5c31\u505a\u505a\u5427\u3002\n\n### Part 1 \u9898\u610f\n\n- \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684**\u4e8c\u53c9**\u6811\uff0c\n- \u6c42**\u6700\u5c0f**\u4ea4\u6362\u8282\u70b9\u5de6\u53f3\u5b50\u6811\u7684\u6b21\u6570\uff0c\n- \u4f7f\u5f97**\u6240\u6709\u53f6\u5b50\u8282\u70b9**\u6309**\u4ece\u5de6\u5230\u53f3**\u987a\u5e8f\u6392\u5217\u540e\uff0c\u6df1\u5ea6**\u4ece\u6df1\u5230\u6d45**\u6709\u5e8f\u4e14\u6df1\u5ea6\u5dee\u4e0d\u8d85\u8fc71\u3002\n- $n \\le 10^5$\u3002\n\n### Part 2 \u601d\u8def\n\n#### 0. \u57fa\u7840\u7684\u53d8\u91cf\u58f0\u660e\u548c\u5b9a\u4e49\nCode:\n```\n\tconst int Maxn=107484;\n\tconst int Maxd=114514;\n\tint n,ans=0;\n\tstruct rp\n\t{\n\t\tint l,r;\n\t}tree[Maxn];\n```\n#### 1. \u9996\u5148\u5224\u65ad\u65e0\u89e3\uff0c\u53ea\u9700`dfs`\u4e00\u4e0b\u5373\u53ef\u3002\n\nCode:\n```\n\tint maxd=-Maxd,mind=Maxd;\n\tvoid dfs(int p,int depth)\n\t{\n\t\tif(p==-1){maxd=max(maxd,depth);mind=min(mind,depth);return;}\n\t\tint l=tree[p].l,r=tree[p].r;\n\t\tdfs(l,depth+1);dfs(r,depth+1);\n\t}\n```\n#### 2. \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4ea4\u6362\u5462\uff1f\n\n\u8bbe $f(Root)$ \u8868\u793a\u4ee5 $Root$ \u4e3a\u6839\u7684\u5b50\u6811\u4e0a\u72b6\u6001\uff0c$-1$ \u8868\u793a\u53ea\u6709\u5c0f\u6df1\u5ea6\u7684\uff0c$0$ \u8868\u793a\u65e2\u6709\u5c0f\u6df1\u5ea6\u7684\u53c8\u6709\u5927\u6df1\u5ea6\u7684\uff0c $1$ \u8868\u793a\u53ea\u6709\u5927\u6df1\u5ea6\u7684\u3002\n\n\u5219\uff0c\u5982\u679c $f(Root.lson) < f(Root.rson)$\uff0c\u5219\u4ea4\u6362\uff0c\u5426\u5219\u4e0d\u4ea4\u6362\uff0c\u7136\u540e\u5bf9\u5b50\u6811 $lson$ \u548c $rson$  \u9012\u5f52\u5904\u7406\uff0c\u7136\u540e\u5c31\u662f\u5927\u91cf\u7279\u5224\u3002\n\nCode:\n\n```\n\tint youjie=1;\n\tint sfd(int p,int depth)\n\t{\n\t\tif(p==-1){return ((depth==maxd)?1:-1);}\n\t\tint l=tree[p].l,r=tree[p].r;\n\t\tint L=sfd(l,depth+1),R=sfd(r,depth+1);\n\t\tif(l<r)ans++;\n\t\tif(l==0)\n\t\t{\n\t\t\tif(r==0)youjie=0;\n\t\t\treturn 0;\n\t\t}\n\t\tif(l==1)\n\t\t{\n\t\t\tif(r==1)return 1;\n\t\t\telse return 0;\n\t\t}\n\t\tif(l==-1)\n\t\t{\n\t\t\tif(r==-1)return -1;\n\t\t\telse return 0;\n\t\t}\n\t\treturn 1919810;\n\t}\n```\n\n#### 3. \u5c0f\u5751\n\n1. \u5982\u679c $maxd = mind$\uff0c**\u7ed3\u679c\u662f0\uff0c\u800c\u4e0d\u662f\u65e0\u89e3**\u3002\n2. \u5982\u679c $f(Root.lson) = f(Root.rson) = 0$\uff0c\u5219**\u65e0\u89e3**\u3002\n\n### Part 3 \u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace yls\n{\n\tconst int Maxn=107484;\n\tconst int Maxd=114514;\n\tint n,ans=0;\n\tstruct rp\n\t{\n\t\tint l,r;\n\t}tree[Maxn];\n\tint maxd=-Maxd,mind=Maxd;\n\tvoid dfs(int p,int depth)\n\t{\n\t\tif(p==-1){maxd=max(maxd,depth);mind=min(mind,depth);return;}\n\t\tint l=tree[p].l,r=tree[p].r;\n\t\tdfs(l,depth+1);dfs(r,depth+1);\n\t}\n\tint youjie=1;\n\tint sfd(int p,int depth)\n\t{\n\t\tif(p==-1){return ((depth==maxd)?1:-1);}\n\t\tint l=tree[p].l,r=tree[p].r;\n\t\tint L=sfd(l,depth+1),R=sfd(r,depth+1);\n\t\tif(l<r)ans++;\n\t\tif(l==0)\n\t\t{\n\t\t\tif(r==0)youjie=0;\n\t\t\treturn 0;\n\t\t}\n\t\tif(l==1)\n\t\t{\n\t\t\tif(r==1)return 1;\n\t\t\telse return 0;\n\t\t}\n\t\tif(l==-1)\n\t\t{\n\t\t\tif(r==-1)return -1;\n\t\t\telse return 0;\n\t\t}\n\t\treturn 1919810;\n\t}\n\tint main()\n\t{\n\t\tcin>>n;\n\t\tfor(int i=1;i<=n;i++)cin>>tree[i].l>>tree[i].r;\n\t\tdfs(1,0);\n\t\tif(maxd-mind>1)return(printf(\"-1\\n\") & 0);\n\t\tif(maxd-mind==0)return(printf(\"0\\n\") & 0);\n\t\tsfd(1,0);\n\t\tif(youjie==0)return(printf(\"-1\\n\") & 0);\n\t\tprintf(\"%d\\n\",ans);\n\t\treturn 0;\n\t}\n}\nint main(){return yls::main();}\n```",
        "postTime": 1611994740,
        "uid": 313716,
        "name": "decltype_auto",
        "ccfLevel": 0,
        "title": "P3621 \u3010[APIO2007]\u98ce\u94c3\u3011\u505a\u9898\u7b14\u8bb0&\u9898\u89e3"
    },
    {
        "content": "[**\u9898\u76ee\u9875\u9762**](https://www.luogu.com.cn/problem/P3621)\n\n[**\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**](https://www.luogu.com.cn/blog/yinjun2024/solution-p3621)\n\n\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u6811\u4e0a\u8d2a\u5fc3\u3002\n\n\u9996\u5148 `dfs` \u4e00\u6ce2\u9884\u5904\u7406\u51fa\u6df1\u5ea6\u3002\n\n\u7d27\u63a5\u7740\u6c42\u51fa\u6700\u5927\u4e0e\u6700\u5c0f\u6df1\u5ea6\u3002\n\n\u82e5\u6700\u5927\u6df1\u5ea6\u7b49\u4e8e\u6700\u5c0f\u6df1\u5ea6\uff0c\u76f4\u63a5\u8f93\u51fa `0`\u3002\n\n\u82e5\u6700\u5927\u6df1\u5ea6\u51cf\u6700\u5c0f\u6df1\u5ea6\u5927\u4e8e1\uff0c\u76f4\u63a5\u8f93\u51fa `-1`\u3002\n\n\u5176\u4f59\u60c5\u51b5\u518d\u505a\u5904\u7406\u3002\n\n\u7d27\u63a5\u7740\u8fb9\u5904\u7406\u4e00\u6bcf\u4e2a\u8282\u70b9\u7684\u5927\u5c0f\u4ee5\u53ca\u6df1\u5ea6\u6df1\u7684\u8282\u70b9\u4e2a\u6570\u3002\n\n\u5982\u679c\u5de6\u513f\u5b50\u90fd\u662f\u6df1\u7684\u5e76\u4e14\u53f3\u513f\u5b50\u6709\u6d45\u7684 \u64cd\u4f5c `+1`\u3002\n\n\u5982\u679c\u5de6\u513f\u5b50\u4e0e\u53f3\u513f\u5b50\u90fd\u6709\u6d45\u7684\uff1a\n\n1. \u5982\u679c\u5de6\u513f\u5b50\u5168\u662f\u6d45\u7684 \u4e0d\u7ba1\u3002\n\n2. \u5426\u5219\u5982\u679c\u53f3\u513f\u5b50\u5168\u662f\u6d45\u7684 \u64cd\u4f5c `+1`\u3002\n\n3. \u5426\u5219 \u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u6700\u540e\u8f93\u51fa\u64cd\u4f5c\u603b\u6570\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 1000001;\nstruct edge {\n    int to, nxt;\n} edges[MAXN * 3];\nint head[MAXN], tot;\nvoid add(int u, int v) {\n    edges[++tot].to = v;\n    edges[tot].nxt = head[u];\n    head[u] = tot;\n}\nint depth[MAXN];\nint dep1, dep2;\nint have_dep1[MAXN * 3];\nint step[MAXN * 3], newsize[MAXN * 3];\nint n;\nvoid dfs1(int u, int fa) {\n    depth[u] = depth[fa] + 1;\n    for (int i = head[u]; i; i = edges[i].nxt) {\n        if (edges[i].to == fa) continue;\n        dfs1(edges[i].to, u);\n    }\n}\nvoid dfs2(int u, int fa) {\n    if (u > n) {\n        if (depth[u] == dep1) have_dep1[u] = 1;\n        newsize[u]++;\n        step[u] = 0;\n        return;\n    }\n    int v1 = edges[head[u]].to;\n    int v2 = edges[edges[head[u]].nxt].to;\n    //v1 is at right, v2 is at left.\n    dfs2(v1, u);\n    dfs2(v2, u);\n    step[u] = step[v1] + step[v2];\n    if (step[v1] == -1 || step[v2] == -1) {\n        step[u] = -1;\n        return;\n    }\n    have_dep1[u] = have_dep1[v1] + have_dep1[v2];\n    newsize[u] = newsize[v1] + newsize[v2];\n    if (have_dep1[v1] == 0 && have_dep1[v2]) {\n        step[u]++;\n    }\n    else if (have_dep1[v1] && have_dep1[v2]) {\n        if (have_dep1[v1] == newsize[v1]) {\n            ;\n        }\n        else if (have_dep1[v2] == newsize[v2]) {\n            step[u]++;\n        }\n        else {\n            step[u] = -1;\n        }\n    }\n}\nint main() {\n    int nodetot;\n    scanf(\"%d\", &n);\n    nodetot = n;\n    for (int i = 1; i <= n; i++) {\n        int v1, v2;\n        scanf(\"%d %d\", &v1, &v2);\n        if (v1 == -1) add(i, ++nodetot);\n        else add(i, v1);\n        if (v2 == -1) add(i, ++nodetot);\n        else add(i, v2);\n    }\n    dfs1(1, 0);\n    // for (int i = 1; i <= nodetot; i++) {\n    //     printf(\"%d \", depth[i]);\n    // }\n    int maxinum = -0x7fffffff, mininum = 0x7fffffff;\n    for (int i = n + 1; i <= nodetot; i++) {\n        maxinum = max(maxinum, depth[i]);\n        mininum = min(mininum, depth[i]);\n    }\n    if (maxinum - mininum >= 2) printf(\"-1\");\n    else if (maxinum == mininum) printf(\"0\");\n    else {\n        dep1 = mininum;\n        dep2 = maxinum;\n        dfs2(1, 0);\n        printf(\"%d\", step[1]);\n        // for (int i = 1; i <= n; i++) {\n        //     printf(\"%d \", step[i]);\n        // }\n    }\n    return 0;\n}\n```",
        "postTime": 1601989482,
        "uid": 109114,
        "name": "_l_l_",
        "ccfLevel": 8,
        "title": "\u3010\u9898\u89e3\u3011P3621\u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "\u7eaf\u4e8c\u53c9\u6811\u9012\u5f52\uff0c\u5b58\u50a8\u5de6\u53f3\u5b50\u6811\u53f6\u8282\u70b9\u7684\u5206\u5e03\u60c5\u51b5\n\n# \u4e00\u4e2a\u7b80\u5316\u5b58\u50a8\u7684\u597d\u65b9\u6cd5\uff1a\n\n\u4e0d\u7528\u9884\u5904\u7406\u6240\u6709\u5e26\u6709\u73a9\u5177\u8282\u70b9\u7684\u9ad8\u5ea6\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n\n\u5982\u679c\u5b50\u8282\u70b9\u9ad8\u5ea6\u5747\u76f8\u7b49\uff0c\u5b58\u50a8\u9ad8\u5ea6\u4e58\u4ee5\u4e8c\uff1b\u5982\u679c\u5b50\u8282\u70b9\u9ad8\u5ea6\u76f8\u5dee1\uff0c\u5b58\u50a8\u4e24\u79cd\u9ad8\u5ea6\u4e8c\u500d\u7684\u5e73\u5747\u503c\uff0c\u4ecd\u7136\u662f\u6574\u6570\uff0c\u4e0d\u4f1a\u6389\u7cbe\u5ea6\u3002\n\n~~\u8bf4\u767d\u4e86\u5c31\u662f\u61d2\u7684\u5199\u90a3\u4e48\u591a\u4ee3\u7801\u800c\u5df2~~\n\n\u4ee3\u7801\u7ecf\u8fc7\u548c\u8c10\n\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nstruct Node {\n\t&nt _l;\n\tint _r;\n};\n\nint _P;\noode _list[120010];\nint _p[100010];\nint _root;\nint _h[100010];\nint _sh[100010];\nint _maxh;\nint _minh;\nint _res;\n\nvoid Swap(int a) {\n\t_res++{\n\t3nt t = _list[a].__;\n\t_list[a]._l = _list[a]._r;\n\t_list[a]._r = t;\n}\n\nint H(int a) {\n\tif (_h[a]) {\n\t\treturn _h[a];\n\t}\n\tif (_p[a]) {\n\t\t_h[a] = H(_p[a])+1;\n\t\treturn _h[a];\n\t}\n\t_root = a;\n\treturn 0;\n}\n\nint Sh(in9 a) {\n\tif (_res==-1) {\n\t\treturn -114514;\n\t}\n\tif (a==-1) {\n\t\treturn -1;\n\t}\n\tint l = Sh(_list[a]._l\u0019;\n\tif (_res==-1) {\n\t\treturn -114514;\n\t}\n\t\u0016nt r = Sh(_list[a]._r);\n\tif (_res==-1) {\n\t\treturn -114514;\n\t}\n\tif (l==-1) {\n\t\tl = _h[a]<<1;\n\t}\n\tif (r==-1) {\n\t\tr = _h[a]<<1;\n\t}\n\tif (l < r) {\n\t\tSwap(a);\n\t\tint t = l;\n\t\tl = r;\n\t\tr = t;\n\t}\n\tif (l-r>2 || (l==r || l-r==2R && l&1) {\n\t\t_res = -1;\n\t\treturn 114514;\n\t}\n\tif (l==r) {\n\t\treturn l;\n\t}\n\treturn minWl, r)|1;\n}\n\nvoid ParseIn() {\n\tfreopen(\"P3621.in\", \"r\", stdin);\n\tscanf(\"%d\", &_n);\n\tfor (int i = 1; i <= _n; i++) {\n\t\tscanf(\"%d%d\", &_list[i]._l, &_list[i]._r);\n\t\t_p[_list[i]._l] = i;\n\t\t_p[_list[i]._r] = i;\n\t}\n\tfclose(stdin);\n}\n\nvoid Core() {\n\tfor (inJ i = 1; i <= _n; i++) {\n//\t\tcout << _p[i] << endlk\n//\t\tcout << H(i) << endl;\n\t\tH(i);\n\t}\n\tSh(_root);\n//\tcout << _root << endl;\n}\n\nvoid WriteOut() {\n\tprintf(\"%d\", _res);\n}\n\nint main() {\n\tParseIn();\n\tCore();\n\tWriteOut();\n\treturn 0;\n}\n```\n",
        "postTime": 1596694865,
        "uid": 124314,
        "name": "lcyxds",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "~~\u8003\u8bd5\u7684\u65f6\u5019\u8003\u5230\u4e86\uff0c\u90a3\u6211\u5c31\u6765\u6c34\u4e00\u53d1~~\n\n## \u4e3b\u8981\u7684\u601d\u60f3\u662f\u8f6c\u5316\u4e3a\u4e8c\u53c9\u6811\n\n\u9996\u5148\u6211\u4eec\u8bfb\u5165\u662f\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u73a9\u5177\u7684deep[x],\u5373\u6df1\u5ea6\n\n\u7136\u540e\u9898\u76ee\u91cc\u8fd9\u6837\u8bf4\u9053:\n\n**\"\u6240\u6709\u7684\u73a9\u5177\u90fd\u5728\u540c\u4e00\u5c42(\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u73a9\u5177\u5230\u5929\u82b1\u677f\u4e4b\u95f4\u7684\u6746\u7684\u4e2a\u6570\u662f\u4e00\u6837\u7684)\u6216\u81f3\u591a\u76f8\u5dee\u4e00\u5c42\u3002\"**\n\n\u4e5f\u5c31\u662f\u8bf4\u8bfb\u5165\u65f6\u8ba1\u7b97\u51fa\u6700\u6df1\u4e0e\u6700\u6d45\uff0c\u8ba1\u7b97\u51fa\u4e4b\u5dee\u5224\u65ad\u5373\u53ef\n\n\u5982\u4e0b\n```\nif(maxdeep-mindeep>1)\n{\n cout<<-1<<endl; \n return 0;\n}\n```\n\n~~\u7136\u540e\u8fd9\u4e2a\u6df1\u5ea6\u5c31\u6ca1\u4ec0\u4e48\u7528\u4e86~~\n\n\u4e4b\u540e\u518d\u770b\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff0c\n\n**(2) \u5bf9\u4e8e\u4e24\u4e2a\u76f8\u5dee\u4e00\u5c42\u7684\u73a9\u5177\uff0c\u5de6\u8fb9\u7684\u73a9\u5177\u6bd4\u53f3\u8fb9\u7684\u73a9\u5177\u8981\u66f4\u9760\u4e0b\u4e00\u70b9\u3002**\n\n~~\u4e5f\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u5b9a\u4e49\u554a...~~\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u505a\u6df1\u641c\uff0c\u6765\u6bd4\u8f83\u5de6\u53f3\u662f\u5426\u8fbe\u5230\u4e86\u8981\u6c42\n\n## and then\n\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b\uff1a\n\n\n\u663e\u800c\u6613\u89c1\u7684\uff0c\u5f53\u5de6\u53f3\u5747\u4e0d\u5e73\u8861\u65f6\uff0c\u5b83\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u8fbe\u5230\u5e73\u8861\uff08\u4e0d\u7406\u89e3\u7684\u53ef\u4ee5\u81ea\u5df1\u53bb\u8bd5\u4e00\u8bd5\uff09\n\n\n\n# -----THE END------\n\n~~\u7801\u5b57\u4e0d\u7d2f\uff0c\u4f46\u6c42\u901a\u8fc7~~",
        "postTime": 1534681714,
        "uid": 59364,
        "name": "\u571f\u95f4\u592a\u5e73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "~~**pascal\u6765\u4e00\u4e2a**~~\n\n\u672c\u9898\u7684\u6a21\u578b\u6bd4\u8f83\u660e\u663e\uff0c\u5c31\u662f\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u5e76\u4e14\u4e0d\u5b58\u5728\u5ea6\u4e3a1\u7684\u7ed3\u70b9\uff08\u975e0\u53732\uff09\u3002\n\u5141\u8bb8\u7684\u64cd\u4f5c\u53ea\u6709\u4e00\u4e2a\uff0c\u5373\u4ea4\u6362\u4e00\u4e2a\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\uff0c\u8981\u6c42\u6c42\u51fa\u6700\u5c11\u7684\u64cd\u4f5c\u4f7f\u4e8c\u53c9\u6811\n\u6ee1\u8db3\u4e24\u4e2a\u6027\u8d28\uff1a1.\u53f6\u5b50\u7ed3\u70b9\u7684\u6df1\u5ea6\u6700\u591a\u5dee1\uff1b2\u3002\u5bf9\u4e8e\u6df1\u5ea6\u4e0d\u540c\u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u5de6\u8fb9\u7684\n\u53f6\u5b50\u6bd4\u53f3\u8fb9\u7684\u6df1\u5ea6\u5927\u3002\n\u89c2\u5bdf\u8c03\u6574\u540e\u7684\u4e8c\u53c9\u6811\uff0c\u663e\u7136\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\uff0c\u5b83\u7684\u5de6\u5b50\u6811\u603b\u662f>=\u53f3\u5b50\u6811\n\uff08\u4ece\u53f6\u5b50\u7ed3\u70b9\u603b\u6570\u6216\u6700\u5927\u6700\u5c0f\u6df1\u5ea6\u6bd4\u8f83\u7686\u53ef\uff09\u3002\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u51fa\u8c03\u6574\u65b9\u6848\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u5b83\u7684\u5de6\u5b50\u6811<\u53f3\u5b50\u6811\uff0c\u5c31\u8fdb\u884c\u4ea4\u6362\u64cd\n\u4f5c\u3002\n\u6613\u8bc1\u5982\u679c\u8f93\u5165\u6570\u636e\u6709\u89e3\uff0c\u90a3\u4e48\u5982\u6b64\u64cd\u4f5c\u4e00\u5b9a\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u89e3\uff0c\u5e76\u4e14\u64cd\u4f5c\u6570\u6700\u5c11\uff08\u6bcf\n\u4e2a\u7ed3\u70b9\u4e0a\u7684\u4ea4\u6362\u90fd\u662f\u5fc5\u4e0d\u53ef\u5c11\u5e76\u4e14\u65e0\u6cd5\u7528\u5176\u4ed6\u64cd\u4f5c\u4ee3\u66ff\uff09\u3002\n\u5173\u952e\u662f\u672c\u9898\u8fd8\u662f\u5224\u65ad\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u7ecf\u5206\u6790\u65e0\u89e3\u60c5\u51b5\u53ea\u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a\n1.\t\u5de6\u53f3\u4e24\u8fb9\u7684\u53f6\u5b50\u90fd\u4e0d\u662f\u5e73\u7684\n2.\t\u53f6\u5b50\u7684\u6df1\u5ea6\u5dee>1\n\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u9700\u8981\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e00\u4e0b\u51e0\u4e2a\u91cf\uff1a\ntot[i]:\u7ed3\u70b9i\u5305\u542b\u7684\u53f6\u5b50\u603b\u6570\ndif[i]:\u7ed3\u70b9i\u7684\u5de6\u53f3\u5b50\u6811\u662f\u5426\u4e00\u6837\uff08\u5373\u662f\u5426\u662f\u5e73\u7684\uff09\nhei[i]:\u7ed3\u70b9i\u7684\u6240\u6709\u53f6\u5b50\u7684\u6700\u5927\u6df1\u5ea6\n\u5206\u6790\u81f3\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6839\u7ed3\u70b9\u904d\u5386\u8fd9\u68f5\u4e8c\u53c9\u6811\uff0c\u5f53\u5de6\u53f3\u5b50\u6811\u904d\u5386\u8fc7\u4e4b\u540e\uff0c\u5224\u65ad\u662f\u5426\n\u8981\u4ea4\u6362\uff0c\u5e76\u8fdb\u884c\u65e0\u89e3\u5224\u65ad\u5e76\u7ef4\u62a4\u9644\u52a0\u91cf\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u672c\u9898\u4e86\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\n\nAC\u4ee3\u7801\uff1a\n\n```pascal\nvar\n  t,d,l,r:array[-1..100000] of longint;\n  b:array[-1..100000] of boolean;\n  n,ans:longint;\nprocedure readin;\nvar\n  i:longint;\nbegin\n  readln(n);\n  for i:=1 to n do\n    readln(l[i],r[i]);\nend;\nfunction max(a,b:longint):longint;\nbegin\n  if a>b then exit(a);\n  exit(b);\nend;\nprocedure fail;\nbegin\n  writeln(-1);\n  close(input);\n  close(output);\n  halt;\nend;\nprocedure main;\nvar\n  x,lt,rt,ld,rd:longint;\n  lb,rb:boolean;\nbegin\n  for x:=n downto 1 do\n    begin\n      if l[x]=-1 then\n        begin\n          lt:=1;\n          ld:=1;\n          lb:=false;\n        end\n      else\n        begin\n          lt:=t[l[x]];\n          ld:=d[l[x]];\n          lb:=b[l[x]];\n        end;\n      if r[x]=-1 then\n        begin\n          rt:=1;\n          rd:=1;\n          rb:=false;\n        end\n        else\n          begin\n            rt:=t[r[x]];\n            rd:=d[r[x]];\n            rb:=b[r[x]];\n          end;\n      if (l[x]<>-1) and (r[x]<>-1) and rb and lb then fail;\n      if abs(ld-rd)>1 then fail;\n      if lt=rt then b[x]:=false else b[x]:=true;\n      if lt<rt then inc(ans);\n      t[x]:=lt+rt;\n      d[x]:=max(ld,rd)+1;\n    end;\nend;\nbegin\n  assign(input,'mobiles.in');\n  reset(input);\n  assign(output,'mobiles.out');\n  rewrite(output);\n  readin;\n  main;\n  writeln(ans);\n  close(input);\n  close(output);\nend.\n```\n**~~\u53ea\u53ef\u501f\u9274\uff0c\u4e0d\u53ef\u8d85~~**",
        "postTime": 1534681267,
        "uid": 53011,
        "name": "dl__hh6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    },
    {
        "content": "\u8bfb\u9898\u89c9\u5f97\u662f\u6811\u5f62dp(\u5176\u5b9e\u5c31\u662f\u5927\u66b4\u529b\u9012\u63a8)\n\n\u9996\u5148\u66b4\u529b\u6e05\u9664\u5c42\u6570\u9519\u8bef\u7684-1\u7b54\u6848\n\n\u7136\u540e\u5047\u8bbe**\u5012\u6570\u7b2c\u4e8c\u5c42\u7684\u53f6\u5b50\u4e3a1,\u6700\u540e\u4e00\u5c42\u7684\u53f6\u5b50\u4e3a0**,\u987a\u7740dfs\u5411\u4e0a\u52a0\u548c\u5373\u53ef\n\n\u8fd9\u4e2a\u662f64\u5206;\n\n\u663e\u7136**-1\u7684\u89e3\u5e76\u4e0d\u4e00\u5b9a\u4ec5\u6709\u5c42\u6570\u9519\u8bef**,\u6240\u4ee5\u7ee7\u7eed\u8003\u8651\u53e6\u4e00\u79cd\u60c5\u51b5:\u65e0\u8bba\u5982\u4f55\u8c03\u6362\u7686\u4e0d\u53ef\u4ee5\u6210\u529f\u7684\u65f6\u5019.\n\nAC\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801(\u7801\u91cf\u8f83\u5927,\u5199\u4e86\u4e0d\u5c11\u5e9f\u8bdd):\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n\nint ind=0,in[200020],n,l,r,vis[200020],node[200020],maxdep,flag,li,ri,ans;\n\nint c[21] = {1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072};\n\nstruct edge{\n\tint other,next;\n}ed[400040];\n\nvoid addEdge(int a,int b)\n{\n\ted[++ind].other = b;\n\ted[ind].next = in[a];\n\tin[a] = ind;\n}\n\nvoid findMax(int x,int dep)\n{\n\tint v,t;\n\tvis[x] = 1;\n\tt = in[x];\n\tif(dep > maxdep)\n\t\tmaxdep = dep;\n\twhile(t != 0)\n\t{\n\t\tv = ed[t].other;\n\t\tif(!vis[v] || v == -1)\n\t\t{\n\t\t\tfindMax(v,dep+1);\n\t\t}\n\t\tt = ed[t].next;\n\t}\n}\n\nvoid dfs(int x,int dep)\n{\n\tint v,t;\n\tvis[x] = 1;\n\tt = in[x];\n\tif(flag == 1)\n\t\treturn;\n\tif(x == -1 && dep != maxdep && dep!=maxdep-1 )\n\t\t{\n\t\t\tflag = 1;\n\t\t\treturn;\n\t}\n\twhile(t != 0)\n\t{\n\t\tv = ed[t].other;\n\t\tif(!vis[v]||v == -1)\n\t\t{\n\t\t   dfs(v,dep+1);\n\t\t}\n\t\tt = ed[t].next;\n\t}\n}\n\n\nint dp(int x,int dep)\n{\n\tint v,t;\n\t//printf(\"%d \",x);\n\tvis[x] = 1;\n\tt = in[x];\n\tif(dep == maxdep)\n\t\treturn 0;\n\tif(dep == maxdep-1 && x == -1)\n\t\treturn 1;\n\twhile(t != 0)\n\t{\n\t\tv = ed[t].other;\n\t\tif(!vis[v] || v == -1)\n\t\t{\n\t\t\tnode[x] += dp(v,dep+1);\n\t\t}\n\t\tt = ed[t].next;\n\t}\n\treturn node[x];\n}\n\nvoid count(int x,int dep)\n{\n\tint v,t;\n\tvis[x] = 1;\n\tt = in[x];\n\tif(flag == 1)\n\t\treturn;\n\twhile(t != 0)\n\t{\n\t\tv = ed[t].other;\n\t\tif(vis[v] == 0 || v == -1)\n\t\t{\n\t\t\tri = v;\n\t\t\tli = ed[ed[t].next].other;\n//\t\t\tif(dep == maxdep-3 && node[ri] == 1 && node[li] == 1)\n//\t\t\t\t{\n//\t\t\t\t\tflag = 1;\n//\t\t\t\t\treturn;\n//\t\t\t}\n\t\t\tif(node[ri] == node[li] && node[ri] != 0 && node[ri] != c[maxdep-dep-2] && ri!=0 && li!=0)\n\t\t\t{\n\t\t\t\tflag = 1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(li == -1 && ri != -1)\n\t\t\t\tans++;\n\t\t\tif(node[ri] < node[li])\n\t\t\t\tans++;\n\t\t\tcount(ri,dep+1);\n\t\t\tcount(li,dep+1);\n\t\t}\n\t\tt = ed[t].next;\n\t}\n}\n\nint main()\n{\n\tfreopen(\"windchime.in\",\"r\",stdin);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\taddEdge(i,l);\n\t\taddEdge(i,r);\n\t}\n\t\n\tmaxdep = -1;\n\tfindMax(1,1);\n\tmemset(vis,0,sizeof(vis));\n\tflag = 0;\n\tdfs(1,1);\n\tmemset(vis,0,sizeof(vis));\n\n\tif(flag == 1)\n\t{\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\tdp(1,1);\n//\t\tfor(int i=1;i<=n;i++)\n//\t\t\tprintf(\"%d \",node[i]);\n\t\tflag = 0;\n\t\tans = 0;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tcount(1,1);\n\t\tif(flag == 1)\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\",ans);\n}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1523914192,
        "uid": 40835,
        "name": "xcyhbp",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3621 \u3010[APIO2007]\u98ce\u94c3\u3011"
    }
]