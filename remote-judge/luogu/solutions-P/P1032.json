[
    {
        "content": "\u840c\u65b0\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\u3002\u3002\n## KMP\u89e3\u51b3\u672c\u9898\n\n\u3000\u3000~~**\u4e3a\u5565\u8981\u7528find\uff0c\u4e3a\u5565\u8981\u7528replace**~~\n\n\u3000\u3000~~\u5176\u5b9e\u662f\u6211\u8003\u8bd5\u65f6\u5fd8\u4e86 qwqwqwqwq~~\n\n\u3000\u3000\u6240\u4ee5\uff0c\u6211\u7528\u7684\u662f**KMP**~~\uff08AC\u81ea\u52a8\u673a\u592a\u96be\u4e86\uff09~~\n\n\u6574\u9053\u9898\u601d\u8def\u5f88\u7b80\u5355\n>\u81f3\u591a6\u4e2a\u89c4\u5219 \u548c \u82e5\u572810\u6b65(\u5305\u542b10\u6b65)\u4ee5\u5185\n\n\u3000\u3000\u6697\u793a\u4e86\u6211\u4eec\u8981\u53bb\u641c\u7d22\u3002\u4e8e\u662f\u673a\u623f\u91cc\u7684\u67d0~~dalao~~\u5c31\u5f00\u59cb\u4e86~~dfs~~\u3002\u7136\u540eTLE\uff0c\u4e8e\u662f\u7279\u5224\u7b2c\u4e94\u70b9~~\uff08\u5f3a\u70c8\u8c34\u8d23\uff09~~\n### \u4e00\u822c\u7684\uff0c\u6c42\u89e3\u7684\u4e2a\u6570\u7528\u6df1\u641c\uff0c\u6c42\u6700\u4f18\u89e3\u7528\u5e7f\u641c\u3002\n\u3000\u3000~~\u539f\u56e0\u81ea\u5df1\u60f3~~ \u5176\u5b9e\u662f\u5e7f\u641c\u7531\u4e8e\u5bfb\u627e\u987a\u5e8f\uff0c\u5bfc\u81f4\u627e\u5230\u4e00\u4e2a\u89e3\u5c31\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u4e86\u3002\n\n\u3000\u3000\u4e8e\u662f\u5927\u6846\u67b6\u662f\u4e00\u4e2aBFS\uff0c\u91cc\u9762\u518d\u53bb\u5b9e\u73b0\"\u53d6\u51fa\u961f\u9996\u5143\u7d20\uff0c\u627e\u5b57\u4e32\uff0c\u66f4\u6539\uff0c\u653e\u5165\u961f\u5217\"\n~~\u8fd9\u4e0d\u6446\u660e\u7740\u662f\u6a21\u5f0f\u5339\u914d\u5417~~\n\n\u597d\u7684\u6a21\u7248\u9898\u4f20\u9001\u95e8\n> [P3375 \u3010\u6a21\u677f\u3011KMP\u5b57\u7b26\u4e32\u5339\u914d](https://www.luogu.org/problemnew/show/P3375)\n\n> [~~P3808 \u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09~~](https://www.luogu.org/problemnew/show/P3808)\n\n> [~~P3796 \u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u52a0\u5f3a\u7248\uff09~~](https://www.luogu.org/problemnew/show/P3796)\n\n\u3000\u3000\u7531\u4e8e\u672c\u849f\u84bb\uff0cAC\u81ea\u52a8\u673a\u5fd8\u4e86\u3002\u3002\u4e8e\u662f\u5199\u4e86KMP\n\n\u3000\u3000\u5177\u4f53\u7684\u8bb2\u89e3\u4e0a\u4ee3\u7801\uff08\u4e0d\u8981\u8d70\uff0c\u540e\u9762\u66f4\u7cbe\u5f69\uff09\n```cpp\n//P1032 \u5b57\u4e32\u53d8\u6362\n#include <iostream>\n#include <cctype>\n#include <cmath>\n#include <ctime>\n#include <climits>\n#include <cstring>\n#include <string>\n#include <cstdio>\n#include <cstdlib>\n#include <iomanip>\n#include <algorithm>\n#include <sstream>\n#include <queue>\n#include <map>\n#define debug cout << \"debug\"<<endl\n\nusing namespace std;\n#define il inline\n#define re register\ntypedef long long ll;\n\nstring a,b;\n\nstruct Node {//\u7528\u4e8equeue\u4e2d\u5b58\u653e\uff0c\u4e00\u4e2a\u662f\u5b57\u4e32\uff0c\u4e00\u4e2a\u662f\u641c\u7d22\u7684\u201c\u6df1\u5ea6\u201d\n\tstring data;\n\tint step;\n\tNode(string _data,int _step):data(_data),step(_step) {}\n\tNode() {}\n};\nqueue<Node>q;\nstring change[10];//\u6539\u6210\u54ea\u4e2a\nstring diff[10];//\u6539\u54ea\u4e2a\n/*\u5373\n\u641c\u7d22diff[i]\n\u6539\u6210change[i]\n*/\n\nint nxt[10][10000];//kmp\u7684next\u6570\u7ec4\nmap<string,bool>mp;//\u7528\u4e8e\u5224\u91cd\uff0c\u907f\u514d\u91cd\u590d\u641c\u7d22\nil void get_next(int x)//\u627enext\uff0c\u5177\u4f53\u7684\u53ef\u4ee5\u7ffb\u7ffb\u7f51\u4e0a\u7684Blog\u3002\n{\n\tre int i,j=0;\n\tfor (i=2; i<diff[x].length(); i++) {\n\t\twhile (j&&diff[x][i]!=diff[x][j+1]) j=nxt[x][j];\n\t\tif (diff[x][j+1]==diff[x][i]) j++;\n\t\tnxt[x][i]=j;\n\t}\n}\n\nil void KMP(string a,int x,int step)//\u5bfb\u627e\u5339\u914d\u7684\u4e32\uff0c\u987a\u4fbf\u4fee\u6539\u5e76\u6dfb\u52a0\u5230queue\u4e2d\n{\n\tstring z=a;\n\ta=\" \"+a;//\u795e\u5947\u7684\u64cd\u4f5c\uff0c\u3002\u3002\u3002\n\tre int i,j=0;\n\tfor (i=1; i<a.length(); i++) {\n\t\twhile (j>0&&diff[x][j+1]!=a[i])\tj=nxt[x][j];\n\t\tif (diff[x][j+1]==a[i]) j++;\n\t\tif (j==diff[x].length()-1) {//\u627e\u5230\u4e86~\n\t\t\tre int t= i-diff[x].length()+1;//\u8bb0\u5f55\u4f4d\u7f6e\n\t\t\tstring tmp=z.substr(0,t)+change[x]+z.substr(t+diff[x].length()-1);//\u4fee\u6539\uff08\u5c31\u4e0d\u7528replace\uff0c\uff08\u771f\u9999\uff09\uff09\n\t\t\tq.push(Node(tmp,step+1));\n\t\t\tj=nxt[x][j];//\u7ee7\u7eed\u627e\n/*\n\u7b2c\u4e00\u6b21\u4ea4\u7531\u4e8e\u8111\u5b50\u4e0d\u597d\uff0c\u627e\u4e86\u4e00\u904d\u5c31return\u4e86\u3002\n*/\n\t\t}\n\t}\n\treturn;\n}\n\nint cn=0;\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tcin >> a >> b;\n\tstring t1,t2;\n\twhile (cin >>t1>>t2) {\n\t\tchange[++cn]=t2;\n\t\tdiff[cn]=\" \"+t1;//\u7ee7\u7eed\u795e\u5947\u7684\u64cd\u4f5c\n\t\tget_next(cn);\n\t}\n\tq.push(Node(a,0));\n\twhile (!q.empty()) {\n\t\tNode now=q.front();\n\t\tq.pop();\n\t\tstring x=now.data;\n\t\tif (mp[x]) continue;//map\u5224\u91cd\n\t\tmp[x]=1;//\u6807\u8bb0\n\t\tif (now.step>10) {//\u627e\u4e0d\u5230\uff08\u56e0\u4e3abfs\u662f\u6309\u7167step:1,2,3...\u6765\u627e\u7684\uff0c\u6240\u4ee5\u4e00\u65e6\u5230\u4e86STEP11\u65f6\u4e00\u5b9a\u65e0\u89e3\u4e86\uff09\n\t\t\tputs(\"NO ANSWER!\");\n\t\t\texit(0);\n\t\t}\n\t\tif (x==b) {//\u627e\u5230\uff0c\u7531\u4e8e\u641c\u7d22\u6709\u5e8f\uff0cstep\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\n\t\t\tcout << now.step<<endl;\n\t\t\texit(0);\n\t\t}\n\t\tfor (re int i=1; i<=cn; i++) {//\u679a\u4e3e\u6240\u6709\u6a21\u5f0f\u4e32\uff0c\u5339\u914d\u6587\u672c\u4e32\n\t\t\tKMP(x,i,now.step);\n\t\t}\n\t}\n\tputs(\"NO ANSWER!\");//\u6700\u540e\u7531\u4e8emap\u7684\u5224\u91cd\uff0c\u53ef\u80fd\u5bfc\u81f4queue\u4e3a\u7a7a\uff0c\u4e8e\u662f\u5230\u8fbe\u8fd9\u91cc\u7684\u6570\u636e\u80af\u5b9a\u662f\u65e0\u89e3\u7684\n\texit(0);\n}\n```\n## \u6709\u5173KMP\u7684Blog\n\u3000\u3000[KMP\u7b97\u6cd5\u8be6\u89e3(Matrix67)](http://www.matrix67.com/blog/archives/115)\u4ee5\u53ca[\u5b57\u7b26\u4e32\u5339\u914d\u7684KMP\u7b97\u6cd5(\u962e\u4e00\u5cf0)](http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html)\n  \n# \u90fd\u8bf4\u4e86\u4e0d\u8981\u8d70\u4e86\uff0cString\u51fd\u6570\u603b\u7ed3\n\u3000\u3000string\u7684\u51fd\u6570\uff0c\u771f\u9999\u3002(\u4e0d\u603b\u7ed3\u8fed\u4ee3\u5668\u7684)\n>(\u7531\u4e8eNOIP2018\uff0crp++\uff0c\u73b0\u5728\u6765\u603b\u7ed3\u4e00\u53d1string\u7684\u51fd\u6570)\n\n- ## \u6700\u57fa\u672c\u7684\uff0c\u5934\u6587\u4ef6\n```cpp\n#include <cstring>\n#include <string>\n```\n\u5c31\u8fd9\u4e24\u4e2a~~\u542b\u4e86string\u7684~~\uff0c\u8003\u8bd5\u65f6\u4e00\u5b9a\u8981\u5199\n\n- ## \u6700\u6700\u6700\u57fa\u672c\u7684\uff0c\u5927\u5bb6\u90fd\u4f1a\u7684\n```cpp\nstring a;//\u58f0\u660eString a\na=\"12345\";//\u8d4b\u503c\nstring b=\"54321\";\nint len=a.length();//\u83b7\u53d6\u957f\u5ea6\ncin >> a;//\u8f93\u5165\uff08\u4ee5\u7a7a\u683c\u6362\u884c\u7b26\u4e3a\u754c\u9650\uff09\ngetline(cin,a)//\u53ef\u4ee5\u8bfb\u5165\u7a7a\u683c\ncout << a;\nswap(a,b)//\u4ea4\u6362\nprintf(\"%s\\n\",a.c_str());//C\u98ce\u683c\u8f93\u51fa\uff0cc_str()\u662f\u5565\uff1f\n```\n- ### c_str()\n\n\u8fd4\u56de\u4e00\u4e2achar \\*\uff0c char\u7c7b\u578b\u7684\u6307\u9488\n\n\u5173\u4e8echar[ ],char \\*,string\u8fd9\u4e9b\u4e1c\u897f\uff0c\u5c3d\u91cf\u8981\u7528string\u5168\u90e8\u7528string\uff0c\u5426\u5219\u90fd\u7528char[ ],\u540e\u671f\u4e24\u4e2a\u8f6c\u6362\u81ea\u5df1\u8ba4\u4e3a\u5f88\u9ebb\u70e6\u7684\u3002\u3002\n\n- ## \u91cd\u8f7d\u65b9\u9762\n\n### +\uff1a\u8fde\u63a5\u4e24\u4e2aString\n```cpp\nstring c=a+b;\nc=\"123\"+c+\"321\";\n```\n### \\> < == != : \u6839\u636e\u5b57\u5178\u5e8f\u6bd4\u8f83\n```cpp\ninline bool cmp(string a,string b)\n{return a>b;}\n...\nint main()\n\n\tsort(a+1,a+1+n,cmp);\n```\n- ## insert() \u63d2\u5165\n\n\u67d0\u4e2aString a.insert(\u4f4d\u7f6e,\u53e6\u4e00\u4e2astring)\n\n```cpp\n\tstring str=\"to be question\";\n\tstring str2=\"the \";\n    str.insert(6,str2);// to be (the )question\n```\n\n- ## erase() \u5220\u9664\n> erase(pos,n);\n\n\u5220\u9664\u4ecepos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\uff0c\u6bd4\u5982erase(0,1)\u5c31\u662f\u5220\u9664\u7b2c\u4e00\u4e2a\u5b57\u7b26\n```cpp\n//\u63a5\u4e0a\n\tstr.erase(0,3); //(~~to ~~)be question\n```\n- ## clear() \u6e05\u9664\n\u6e05\u9664\u3002\u3002\u3002\n\n- ## replace() \u66ff\u6362\n\n\u67d0\u4e2aString a.replace(pos,len,\u53e6\u4e00\u4e2aString b)\n\n\u66ff\u6362a\u4e2dpos\u5f00\u59cb\u5f80\u540elen\u7684\u8fd9\u4e9b\u5b57\u7b26\u4e3ab\n```cpp\n\tstr.replace(0,2,\"To\");// (To) be question\n```\n\u5f80\u5f80\u4e0efind()\u4e00\u8d77\u4f7f\u7528\u3002\n- ## find()\u4e0erfind()\n\n##### \u5b8c\u5168\u5339\u914dString b\na.find(b) \u4ece\u5f00\u59cb\u627eb\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u5e76\u8fd4\u56de\n\na.find(b,pos) \u4ecepos\u5f00\u59cb\u627eb\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u5e76\u8fd4\u56de\n```cpp\nstring str=\"To be, or not to be - that is the question\";\n    int t=str.find(\"be\");\\\\ t=3,str[t]='b'(To be \u7684be)\n    int t=str.find(\"be\",4);\\\\ t=17,str[t]='b'(not to be\u7684be)\n```\nrfind(b)\u6216rfind(b,pos) \u5012\u7740\u627eO(\u2229_\u2229)O~\n```cpp\n    int t=str.rfind(\"be\");\\\\ t=17,str[t]='b'(not to be\u7684be)\n    int t=str.rfind(\"be\",16);\\\\ t=3,str[t]='b'(To be \u7684be)\n```\n\u6ca1\u6709\u51fa\u73b0\uff0c\u8fd4\u56denpos\uff0c\u5373-1\uff08\u6253\u5370\u51fa\u6765\u4e3a4294967295\uff09\n```cpp\nif (str.find(\"Be\")==string::npos)\n\tcout <<\"NO\"<<endl;// \u8f93\u51faNO\nif (str.rfind(\"Be\")==-1)\n\tcout <<\"NO\"<<endl; // \u8f93\u51faNO\n```\n- ## find_first_of()\u4e0efind_last_of()\n\n##### \u5728a\u4e2d\u5bfb\u627eString b\u4e2d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 \u2018(\u4efb\u610f\u4e00\u4e2a)\u2019\n\na.find_first_of(b)\u6216a.find_first_of(b,pos)\n\n \u5728a\u5f00\u59cb(\u6216\u4ecepos\u5f00\u59cb)\u5411\u540e\u67e5\u627e\uff0c\u53ea\u8981\u5728a\u4e2d\u9047\u5230\u4e00\u4e2a\u5b57\u7b26\uff0c\u8be5\u5b57\u7b26\u4e0ec\u4e2d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u76f8\u540c\uff0c\u5c31\u505c\u6b62\u67e5\u627e\uff0c\u8fd4\u56de\u8be5\u5b57\u7b26\u5728a\u4e2d\u7684\u4f4d\u7f6e\uff1b\u82e5\u5339\u914d\u5931\u8d25\uff0c\u8fd4\u56denpos\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\n```cpp\n//\u5c06\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u7684\u5143\u97f3\u5b57\u6bcd\u6362\u6210*\n//\u4ee3\u7801\u6765\u81eaC++ Reference\uff0c\u5730\u5740\uff1ahttp://www.cplusplus.com/reference/string/basic_string/find_first_of/\n#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    std::string str(\"PLease, replace the vowels in this sentence by asterisks.\");\n    std::string::size_type found = str.find_first_of(\"aeiou\");\n    while (found != std::string::npos)\n    {\n        str[found] = '*';\n        found = str.find_first_of(\"aeiou\", found + 1);\n    }\n    std::cout << str << '\\n';\n    return 0;\n}\n//\u8fd0\u884c\u7ed3\u679c\uff1a\n//PL**s* r*pl*c* th* v*w*ls *n th*s s*nt*nc* by *st*r*sks\n```\nfind_last_of \u5012\u7740\u627e\n\n- ## find_first_not_of()\u4e0efind_last_not_of()\n\n##### \u611f\u89c9\u548c\u524d\u9762\u4e00\u7c7b\u7684\u76f8\u53cd\u7684\uff0c\u7c7b\u4f3c\u4e8e\u627e\u4e86\u4e2a\u8865\u96c6\u3002\u5373\u5728a\u4e2d\u641c\u5bfbb\u4e2d\u6ca1\u6709\u7684\u5b57\u7b26\u5e76\u8fd4\u56de\u4f4d\u7f6e\n\n\u7528\u6cd5\u540c\u4e0a\uff0c\u7b2c\u4e00\u4e2a\u662fString b,\u7b2c\u4e8c\u4e2a\u53ef\u9009 pos\uff0c\u4e0d\u5199pos\u9ed8\u8ba4\u4e3a0\n\n\u5982\u679c\u5c06\u4e0a\u4e00\u4e2a\u6837\u4f8b\u4e2d\u7684str.find_first_of\u6539\u6210str.find_first_not_of,\u5219\u8f93\u51fa\u4f1a\u628a\u975ea~~(\u3042)~~i~~(\u3044)~~u~~(\u3046)~~e~~(\u3048)~~o~~(\u304a)~~(\u9003\u3002\u3002\u3002)\u7684\u6362\u6210 *\n\n#### \u603b\u7ed3\u4e00\u4e0b\u201c\u627e\u201d\u7684\u51fd\u6570\u7684\u4f20\u53c2(string b,pos,len)\n#### b\u662f\u88ab\u641c\u5bfb\u7684\u5bf9\u8c61\u3002pos\uff08\u53ef\u6709\u53ef\u65e0\uff09\u6307\u51faa\u5185\u7684\u641c\u5bfb\u8d77\u70b9\u4f4d\u7f6e\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570len\uff08\u53ef\u6709\u53ef\u65e0\uff09\u6307\u51fab\u4e2d\u641c\u5bfb\u7684\u5b57\u7b26\u4e2a\u6570\uff08\u5373\u4e3ab\u7684\u67d0\u4e2a\u5b57\u4e32\uff09\u3002\n\n- ## substr() \u5b57\u4e32\n\nsub(start,length)\n\n\u5982\u679c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0d\u5199\uff0c\u5c31\u662f\u4ecestart\u5230\u5b57\u7b26\u4e32\u7ed3\u5c3e\u3002\n```cpp\nstring str=\"To be, or not to be - that is the question\";\n\tstr.substr(0,2);// To\n    str.substr(str.find(\"question\"));// question\n```\n- ## String\u4e0eInt\u4e92\u8f6c\uff08\u4e0d\u8003\u8651C++11\u7684\u51fd\u6570\uff09\n#### int\u8f6cstring\n```cpp\nostringstream outs; //\u8f93\u51fa\u5b57\u7b26\u4e32\u6d41\nint x = 12; \nouts << x; //\u5411\u8f93\u51fa\u5b57\u7b26\u4e32\u6d41\u4e2d\u8f93\u51fax\u7684\u5185\u5bb9 \nstring a=outs.str(); //\u5229\u7528\u5b57\u7b26\u4e32\u6d41\u7684str\u51fd\u6570\u83b7\u53d6\u6d41\u4e2d\u7684\u5185\u5bb9\n```\n#### string\u8f6cint\n```cpp\nstring a=\"12\";\nistringstream ins(a); //\u8f93\u5165\u5b57\u7b26\u4e32\u6d41\uff0c\u6d41\u7684\u5185\u5bb9\u521d\u59cb\u5316\u4e3aa\nint x; \nins >> x; //\u4eceis\u6d41\u4e2d\u8bfb\u5165\u5e76\u5b58\u5165x\u4e2d\n```\n\n(\u6ca1\u6709\u7528\u7684\u4e1c\u897f\u3002\u3002)\n- ### String\u4e0echar\u7684\u8f6c\u6362\n#### String\u8f6cchar*\n\u3000\u30001.data()\n```cpp\nstring str = \"hello\";\nconst char* p = str.data();//\u52a0const  \u6216\u8005\u7528char * p=(char*)str.data();\u7684\u5f62\u5f0f\n```\n\u3000\u3000\u540c\u65f6\u6709\u4e00\u70b9\u9700\u8981\u8bf4\u660e\uff0c\u8fd9\u91cc\u5728devc++\u4e2d\u7f16\u8bd1\u9700\u8981\u6dfb\u52a0const\uff0c\u5426\u5219\u4f1a\u62a5\u9519invalid conversion from const char*  to char *\uff0c\u8fd9\u91cc\u53ef\u4ee5\u518d\u524d\u9762\u52a0\u4e0aconst\u6216\u8005\u5728\u7b49\u53f7\u540e\u9762\u7ed9\u5f3a\u5236\u8f6c\u5316\u6210char*\u7684\u7c7b\u578b\u3002\n\n\u3000\u3000\u4e0b\u9762\u89e3\u91ca\u4e0b\u8be5\u95ee\u9898\uff0cconst char*\u662f\u4e0d\u80fd\u76f4\u63a5\u8d4b\u503c\u5230char*\u7684,\u8fd9\u6837\u7f16\u8bd1\u90fd\u4e0d\u80fd\u901a\u8fc7,\u7406\u7531:\u5047\u5982\u53ef\u4ee5\u7684\u8bdd,\u90a3\u4e48\u901a\u8fc7char*\u5c31\u53ef\u4ee5\u4fee\u6539const char\u6307\u5411\u7684\u5185\u5bb9\u4e86,\u8fd9\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u6240\u4ee5char*\u8981\u53e6\u5916\u5f00\u8f9f\u65b0\u7684\u7a7a\u95f4\uff0c\u5373\u4e0a\u9762\u7684\u5f62\u5f0f\u3002\n\n\u3000\u30002. c_str()\n```cpp\nstring str=\u201cworld\u201d;\nconst char *p = str.c_str();//\u540c\u4e0a\uff0c\u8981\u52a0const\u6216\u8005\u7b49\u53f7\u53f3\u8fb9\u7528char*\n```\n\u3000\u30003. copy()\n```cpp\nstring str=\"hmmm\";\nchar p[50];\nstr.copy(p, 5, 0);//\u8fd9\u91cc5\u4ee3\u8868\u590d\u5236\u51e0\u4e2a\u5b57\u7b26\uff0c0\u4ee3\u8868\u590d\u5236\u7684\u4f4d\u7f6e\uff0c\n*(p+5)=\u2018\\0\u2019;//\u6ce8\u610f\u624b\u52a8\u52a0\u7ed3\u675f\u7b26\uff01\uff01\uff01\n```\n#### \u3000\u3000String\u8f6cchar[ ]\uff0c\u76f4\u63a5\u5faa\u73af\u8d4b\u503c\n```cpp\nstring pp = \"dagah\";\nchar p[8];\nint i;\nfor( i=0;i<pp.length();i++)\n\tp[i] = pp[i];\np[i] = '\\0';\n```\n\n\u603b\u7ed3\u90e8\u5206 \u53c2\u8003\u8d44\u6599\n\n[c++\u4e2d\u7684string\u5e38\u7528\u51fd\u6570\u7528\u6cd5\u603b\u7ed3](https://blog.csdn.net/fdqw_sph/article/details/54233971)\n\n[C++string\u4e2d\u7528\u4e8e\u67e5\u627e\u7684find\u7cfb\u5217\u51fd\u6570\u6d45\u6790](https://www.cnblogs.com/zpcdbky/p/4471454.html)\n\n[C++\u4e2dstring\u3001char *\u3001char\\[\\]\u7684\u8f6c\u6362](http://www.cnblogs.com/Pillar/p/4206452.html)\n\n\u5b89\u5229\u4e00\u6ce2\u81ea\u5df1\u7684Blog\n[coyangjr](https://coyangjr.top)",
        "postTime": 1541556860,
        "uid": 75202,
        "name": "coyangjr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2\uff1a[http://www.cnblogs.com/OIerShawnZhou/](http://www.cnblogs.com/OIerShawnZhou/)\n\n\uff08\u6211\u5e73\u5e38\u5199\u7684\u9898\u89e3\u90fd\u4f1a\u5f80\u535a\u5ba2\u91cc\u53d1\uff0c\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u524d\u6765\u62cd\u7816\uff09\n\n\u6d1b\u8c37\u7ea2\u540d\u7559\u5ff5\u3002\u6211\u4f1a\u7ee7\u7eed\u52aa\u529b\u3002\n\n\u9898\u610f\u5df2\u7ecf\u628a\u505a\u6cd5\u5199\u5f97\u7279\u522b\u9732\u9aa8\u4e86\u3002\u3002\u3002\u6700\u5c0f\u6b65\u6570\uff0c\u6700\u591a6\u4e2a\u53d8\u6362\u89c4\u5219\u3002\u3002\u3002\u3002\u5e7f\u641c\u81ea\u4e0d\u5fc5\u8bf4\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5bfb\u627e\u89e3\u800c\u4e14\u8fd8\u80fd\u5224\u65ad\u6b65\u6570\uff08\u6839\u636e\u5e7f\u641c\u9996\u89e3\u6700\u4f18\u7684\u6027\u8d28\u53ef\u4ee5\u5f97\u5230\uff09\u3002\n\n\u5f00\u4e24\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e32\u7684\u8f6c\u6362\u5173\u7cfb\uff0c\u7136\u540e\u4ee5a\u4e32\uff08\u539f\u4e32\uff09\u4e3a\u8d77\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u641c\u7d22\u76ee\u6807\u662fb\u4e32\u3002\n\n\u9700\u8981\u4e00\u4e2amap\u8bb0\u5f55\u67d0\u4e2a\u4e32\u662f\u4e0d\u662f\u88ab\u641c\u5230\u8fc7\uff0c\u5982\u679c\u5df2\u7ecf\u641c\u8fc7\u4e86\u5c31\u4e0d\u518d\u7ee7\u7eed\u641c \u3002\n\n\u6211\u4eec\u679a\u4e3e\u5f53\u524d\u961f\u5217\u4e2d\u961f\u5934\u90a3\u4e2a\u4e32\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u8f6c\u6362\u624b\u6bb5\uff0c\u7136\u540e\u53bb\u5c1d\u8bd5\u62fc\u63a5\u3002\n\n\u62fc\u63a5\u51fd\u6570\u501f\u9274\u4e86\u4e00\u4e0b\u697c\u4e0astdcall\u5927\u7237\u9898\u89e3\u7684\u601d\u8def\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8bd5\u56fe\u8981\u6539\u53d8\u7684\u4e32str\uff0c\u6211\u4eec\u8bd5\u56fe\u5728\u5b83\u7684\u7b2ci\u4f4d\u7528\u7b2cj\u79cd\u624b\u6bb5\u6539\u53d8\uff0c\u9996\u5148\u5224\u65ad\u662f\u5426\u53ef\u884c\uff0c\u7136\u540e\u518d\u9010\u4f4d\u62fc\u63a5\u3002\u5e76\u4e14\u5982\u679c\u62fc\u63a5\u51fa\u7684\u4e32\u662f\u5408\u6cd5\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u4e32\u7ee7\u7eed\u538b\u5165\u961f\u5217\uff0c\u518d\u6b21\u641c\u7d22\uff0c\u4e2d\u95f4\u8bb0\u5f55\u4e00\u4e0b\u6b65\u6570step\u548cans\u3002\n\n\u6700\u540e\u8f93\u51faans\u65f6\u5224\u65ad\uff0c\u5982\u679cans\u8d85\u8fc7\u4e86\u6b65\u6570\u9650\u5236\u76f4\u63a5\u8f93\u51fa\u65e0\u89e3\uff0c\u5426\u5219\u8f93\u51fa\u6b65\u6570\u3002\n\n\u4e0d\u8fc7\u6211\u53d1\u73b0\uff0cans\u7b49\u4e8e0\u65f6\u5e94\u8be5\u4e5f\u662f\u65e0\u89e3\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5982\u679c\u7528ans<=10\u6765\u5224\u65ad\u662f\u4e0d\u662f\u8d85\u51fa\u6b65\u6570\u4f1aWA\u6389\u7b2c\u4e09\u4e2a\u70b9\u3002\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <string>\n#include <cstring>\n#include <queue>\n#include <map>\n#define maxn 15\nusing namespace std;\nstruct node{//\u65b9\u4fbf\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528pair\u7b80\u5316\n    string str;\n    int step;\n};\n\nstring a,b;\nstring orginal[maxn];\nstring translated[maxn];\nint n,ans;\nmap<string,int> ma;//\u5f88\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u7528\u6765\u5224\u91cd\uff0c\u5426\u5219\u4f1aTLE\u5728\u7b2c3\u70b9\u548c\u7b2c5\u70b9\n\nstring trans(const string &str,int i,int j){//\u501f\u9274\u4e86stdcall\u5927\u7237\u7684\u601d\u60f3\n    string ans = \"\";\n    if (i+orginal[j].length() > str.length())\n        return ans;\n\n    for (int k=0; k < orginal[j].length();k++)\n        if (str[i+k] != orginal[j][k])\n            return ans;\n\n    ans = str.substr(0,i);\n    ans+=translated[j];\n    ans+=str.substr(i+orginal[j].length());\n    return ans;\n}\n\nvoid bfs(){//\u4e00\u4e2a\u5e73\u6de1\u65e0\u5947\u7684bfs\u8fc7\u7a0b\n    queue <node> q;\n    node s;\n    s.str = a;\n    s.step = 0;\n    q.push(s);\n\n    while (!q.empty()){\n        node u = q.front();\n        q.pop();\n        string temp;\n\n        if(ma.count(u.str) == 1) //\u526a\u679d\uff0c\u5224\u65ad\u91cd\u590d\u7684\u8def\u5f84\n            continue;\n\n        if (u.str == b){\n            ans = u.step;\n            break;\n        }\n        ma[u.str] = 1;\n        for (int i=0;i < u.str.length();i++)//\u679a\u4e3e\u5f53\u524d\u4e32\u6240\u6709\u53ef\u80fd\u4f4d\u7f6e\n            for (int j=0; j<n; j++){//\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u624b\u6bb5\n                temp = trans(u.str,i,j);\n                if (temp != \"\"){\n                    node v;\n                    v.str = temp;\n                    v.step = u.step+1;\n                    q.push(v);\n                }\n            }\n    }\n    if (ans > 10 || ans == 0)\n        cout << \"NO ANSWER!\" << endl;\n    else\n        cout << ans << endl;\n\n}\n\nint main(){\n    cin >> a >> b;\n    while (cin >> orginal[n] >> translated[n])\n        n++;\n    bfs();\n    return 0;\n}\n```",
        "postTime": 1505841713,
        "uid": 20197,
        "name": "ShawnZhou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u9898\u770b\u4e0a\u53bb\u7b80\u5355\uff0c\u4f46\u5176\u5b9e\u4ece\u5934\u5230\u5c3e\u5168\u662f\u5751......qwq\n\n\u9996\u5148\uff0c\u8bfb\u5165\u6570\u636e\u5c31\u5f88\u61f5\u903c\u4e86\uff0c\u544a\u8bc9\u4f60\u6700\u591a6\u7ec4\u53d8\u6362\uff0c\u4f46\u53c8\u6ca1\u544a\u8bc9\u4f60\u786e\u5207\u7684\u7ec4\u6570\uff0c\u8fd9\u5c31\u5f88\u65e0\u5948\u4e86\uff0c\u5176\u5b9e\u4f60\u53ef\u4ee5\u76f4\u63a5\u5199\u4e00\u4e2afor (i=1;i<=6;i++)\u6765\u8bfb\u5165\u6240\u6709\u7684\u8f6c\u6362\u65b9\u5f0f\uff0c\u6700\u540e\u627e\u5230\u6709\u6548\u6570\u636e\u7684\u7ec4\u6570\uff0c\u5c31OK\u4e86\uff08\u4eb2\u6d4b\uff09\n~~~c++\nfor (i=1;i<=6;i++)\n\t{\n\t\tcin>>sa[i]>>sb[i];\n\t}\n\tl=6;\nwhile (sa[l][0]=='\\0') l--;\n~~~\n~~\uff08\u867d\u7136\u672c\u849f\u84bb\u4e0d\u662f\u8fd9\u4e48\u8bfb\u5165\u7684\u3002\u3002\u3002\uff09~~\n\n\u5176\u6b21\uff0c\u5728\u4f60\u5bbd\u641c\u7684\u65f6\u5019\uff0c\u50cf\u672c\u849f\u84bb\u8fd9\u6837\u56fe\u7701\u4e8b\u7684\u4eba\u90fd\u4f1a\u76f4\u63a5\u7528find\u51fd\u6570\u627e\u5b50\u4e32\uff0c\u4f46\u662f\u6ce8\u610f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u6570\u636e\u4e2d\u90fd\u662f\u53ea\u6709\u4e00\u4e2a\u5b50\u4e32\u7684\uff08\u6bd4\u5982\u7b2c5\u4e2a\u6570\u636e\u70b9\uff09\uff0c\u5e94\u6b64\u4f60\u4e5f\u53ef\u4ee5\u7528for\u5faa\u73af\u8fdb\u884c\u641c\u7d22\n\n\u6700\u540e\uff0c\u5c31\u662f\u65f6\u95f4\u7684\u95ee\u9898\u4e86~~\uff08\u90fd\u662f\u65f6\u8fb0\u7684\u9519\uff09~~\uff0c\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u5bb9\u6613\u89e3\u51b3\uff08\u5bf9\u4e8e\u7cbe\u901aSTL\u7684\u4eba\u6765\u8bf4\uff09\uff0c\u7528MAP\u5224\u91cd\u526a\u679d\u5c31OK\u4e86\uff08[MAP\u7684\u4f7f\u7528\u65b9\u6cd5](https://www.cnblogs.com/fnlingnzb-learner/p/5833051.html)\uff09\n\n\u82e5\u679c\u8fd8\u6709\u7591\u95ee\uff0c\u8bf7\u770b\u672c\u849f\u84bb~~\u9999\u55b7\u55b7~~\u7684\u4ee3\u7801\u3002\n~~~c++\n#include<bits/stdc++.h>\t\t//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nstring a,b;\t\t\t\t\t//\u5b57\u7b26\u4e32A\u4e0e\u5b57\u7b26\u4e32B\nstring sa[8],sb[8];\t\t\t//\u5b58\u653e6\u79cd\u8f6c\u6362\u65b9\u5f0f\nmap<string,int> map1;\t\t//\u7528map\u5b58\u653e\u5df2\u7ecf\u5bbd\u641c\u8fc7\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u6765\u5224\u91cd\u526a\u679d\uff08\u5426\u5219\u4f1a\u8d85\u65f6\uff09\nint l;\t\t\t\t\t\t//\u6709l\u79cd\u8f6c\u6362\u65b9\u5f0f\nqueue<string> q;\t\t\t//\u5b58\u653e\u8f6c\u6362\u51fa\u6765\u7684\u5b57\u7b26\u4e32\nqueue<int> bb;\t\t\t\t//\u5b58\u653e\u5f53\u524d\u8f6c\u6362\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u5df2\u7ecf\u4f7f\u7528\u7684\u6b65\u6570\nint bfs()\n{\n\tint i,j,k,m,n;\n\tstring s,ss;\n\twhile (q.empty()==0&&q.front()!=b&&bb.front()<=10)\t\t//\u5f53\u8fd8\u80fd\u7ee7\u7eed\u8f6c\u6362\u4e14\u6ca1\u8f6c\u6362\u51fa\u5b57\u7b26\u4e32B\u4e14\u6b65\u6570\u4e5f\u6ca1\u6709\u8d85\u51fa10\u6b65\u65f6\u8fdb\u884c\u5bbd\u641c\n\t{\n\t\tif (map1[q.front()]==1) \t\t//\u526a\u679d\uff1a\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e32\u5df2\u7ecf\u5bbd\u641c\u8fc7\u4e86,\u5c31\u5f39\u51fa,\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af.\n\t\t{\n\t\t\tq.pop();\n\t\t\tbb.pop();\n\t\t\tcontinue;\n\t\t}\n\t\tmap1[q.front()]=1;\t\t\t\t//\u8bb0\u5f55\u4e0b\u8be5\u5b57\u7b26\u4e32\n\t\tfor (i=1;i<=l;i++)\t\t\t\t//\u5faa\u73af\u51fa\u6bcf\u4e00\u79cd\u8f6c\u6362\u65b9\u5f0f\n\t\t{\t\n\t\t\ts=q.front();\t\t\t\t//\u5c06S\u8d4b\u503c\u4e3a\u5f53\u524d\u8981\u64cd\u4f5c\u7684\u5b57\u7b26\u4e32\n\t\t\twhile (1)\t\t\t\t\t//\u627e\u51fa\u5b50\u4e32sa[i]\u7684\u6240\u6709\u4f4d\u7f6e\n\t\t\t{\t\n\t\t\t\tm=s.find(sa[i]);\t\t//\u5728S\u91cc\u67e5\u627e\u5b50\u4e32sa[i]\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\n\t\t\t\tif (m==-1) break;\t\t//\u5982\u679c\u5168\u627e\u51fa\u6765(\u627e\u4e0d\u5230)\u4e86,\u5c31\u7ed3\u675f\u5faa\u73af\n\t\t\t\tss=q.front();\t\t\t//\u5c06SS\u8d4b\u503c\u4e3a\u5f53\u524d\u8981\u64cd\u4f5c\u7684\u5b57\u7b26\u4e32\n\t\t\t\tss.replace(m,sa[i].size(),sb[i]);\t//\u5728SS\u4e2d\u7528\u5b50\u4e32sb[i]\u66ff\u6362\u6389S\u91cc\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5b50\u4e32sa[i]\n\t\t\t\tq.push(ss);\t\t\t\t//\u5c06\u8f6c\u6362\u540e\u7684SS\u538b\u5165\u961f\u5217\n\t\t\t\tbb.push(bb.front()+1);\t//\u5c06\u8f6c\u6362\u540e\u7684SS\u5df2\u7ecf\u4f7f\u7528\u7684\u6b65\u6570\u538b\u5165\u961f\u5217\n\t\t\t\ts[m]='~';\t\t\t\t//\u5c06S\u91cc\u5b50\u4e32sa[i]\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u968f\u4fbf\u6362\u6210\u53e6\u4e00\u79cd\u65e0\u5173\u7684\u5b57\u7b26,\u8fd9\u6837\u5c31\u53ef\u4ee5\u67e5\u627e\u5230S\u91cc\u5b50\u4e32sa[i]\u7684\u4e0b\u4e00\u4e2a\u51fa\u73b0\u4f4d\u7f6e\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\tq.pop();\t\t\t\t\t\t//\u5c06\u64cd\u4f5c\u8fc7\u7684\u5b57\u7b26\u4e32\u5f39\u51fa\u961f\u5217\n\t\tbb.pop();\t\t\t\t\t\t//\u64cd\u4f5c\u8fc7\u7684\u5b57\u7b26\u4e32\u5df2\u7ecf\u7528\u8fc7\u7684\u6b65\u6570\u4e00\u5757\u5f39\u51fa\n\t}\n\tif (q.empty()==1||bb.front()>10) return -1;//\u6ca1\u6cd5\u518d\u8fdb\u884c\u5bbd\u641c,\u6216\u8005\u8d85\u51fa\u6b65\u6570,\u5c31\u8fd4\u56de-1\n\t\telse return bb.front();\t\t\t\t\t//\u5426\u5219,\u5c31\u662f\u627e\u5230\u4e86,\u4fbf\u8fd4\u56de\u6700\u5c11\u4f7f\u7528\u6b65\u6570\n}\nint main()\n{\n\tint i,j,k,m,n;\n\tcin>>a>>b;\t\t\t\t\t\t\t//\u8bfb\u5165\u5b57\u7b26\u4e32A\u4e0e\u5b57\u7b26\u4e32B\n\tl=1;\n\twhile (cin>>sa[l]>>sb[l]) l++;\t\t//\u8bfb\u5165\u8f6c\u6362\u65b9\u5f0f\n\tl--;\t\t\t\t\t\t\t\t//l\u521d\u59cb\u503c\u4e3a1,\u6240\u4ee5\u8981\u51cf1,\u624d\u80fd\u8868\u793a\u8f6c\u6362\u65b9\u5f0f\u7684\u6570\u91cf\n\tif (l==0&&a!=b)\t\t\t\t\t\t//\u82e5\u679c\u6ca1\u6709\u8f6c\u6362\u65b9\u5f0f\u4e14A\u4e5f\u4e0d\u7b49\u4e8eB,\u76f4\u63a5\u8f93\u51fa\"NO ANSWER!\"(\u5176\u5b9e\u8fd9\u6b65\u53ef\u4ee5\u4e0d\u8981)\n\t{\n\t\tcout<<\"NO ANSWER!\";\n\t\treturn 0;\n\t}\n\tq.push(a);\t\t\t\t\t\t\t//\u5c06\u5b57\u7b26\u4e32A\u538b\u5165\u961f\u5217\n\tbb.push(0);\t\t\t\t\t\t\t//\u5c06\u521d\u59cb\u6b65\u65700\u538b\u5165\u961f\u5217\n\tk=bfs();\t\t\t\t\t\t\t//\u5bbd\u641c\n\tif (k==-1)\t\t\t\t\t\t\t//\u8fd4\u56de-1\u8bf4\u660eNO ANSWER!\n\t{\n\t\tcout<<\"NO ANSWER!\";\n\t\treturn 0;\n\t}\n\tcout<<k;\t\t\t\t\t\t\t//\u8f93\u51fa\u6700\u5c0f\u6b65\u6570\n}\n~~~\n\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6c42\u8fc7qwq\u3002",
        "postTime": 1533462692,
        "uid": 93167,
        "name": "Lemoning",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u666e\u901a\u7684\u5b57\u7b26\u4e32+\u641c\u7d22\u7ec3\u4e60\u9898\n\n\u4e3b\u8981\u662f\u8bfb\u5165\u6570\u636e\u4e0e\u67e5\u627e\u4e32\u7684\u8fc7\u7a0b\u9ebb\u70e6\u4e00\u70b9\n\n\u666e\u901a\u641c\u7d22\u7684\u601d\u8def\u5176\u4ed6\u4eba\u5df2\u7ecf\u8bf4\u4e86\uff0c\u6211\u6765\u8bf4\u4e00\u4e0b\u6211A\u9898\u7684\u7b97\u6cd5\uff1a\n\n**\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22**\n\n\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cdfs\u4f1a\u8d85\u65f6\uff0c~~\u4f46\u6211\u8fd9\u6b21\u53c8\u975e\u5e38\u9020\u4f5c\u5730\u504f\u8981\u5199dfs~~\n\n\u90a3\u600e\u4e48\u529e\u5462\uff1f\u76f4\u63a5\u638f\u51fa\u8fed\u4ee3\u52a0\u6df1\u6539\u4e2a\u6761\u4ef6AC\u3002\n\n\u4e8b\u5b9e\u8bc1\u660e\u8fed\u4ee3\u52a0\u6df1\u8fd8\u662f\u5f88\u5389\u5bb3\u7684\n\n**TLE -> AC**\n\n**1323ms -> 77ms (\u603b\u5171\u65f6\u95f4)**\n\n------------\n\n\n\n------------\n\n\n\u9996\u5148\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\n\n\u666e\u901a\u7684dfs\u662f\u4e00\u8def\u641c\u7d22\u5230\u5e95\uff0c\u53ef\u80fd\u4f1a\u5728\u4e00\u4e2a \u201c**\u9519\u8bef\u7684\u7b54\u6848\u8def\u7ebf**\u201d\u4e0a\u4e00\u8def\u641c\u7d22\u5230\u5e95\uff0c\u4ece\u800c\u6d6a\u8d39\u7684\u5927\u91cf\u7684\u65f6\u95f4\u3002\n\n\u800c\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22\uff0c\u5c31\u662f\u6bcf\u6b21**\u731c\u6d4b\u4e00\u4e2a\u53ef\u80fd\u7684\u7b54\u6848**\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u7b54\u6848\u65f6\u4fbf\u4f1a\u81ea\u52a8\u7ec8\u6b62\u641c\u7d22\uff0c\u901a\u8fc7\u679a\u4e3e\u7b54\u6848\u6765**\u4e00\u5c42\u4e00\u5c42\u7684\u641c\u7d22**(\u52a0\u6df1)\uff0c\u8fd9\u6837\u5c31\u53c8\u6709dfs\u7684\u9012\u5f52\u5f62\u5f0f\uff0c\u53c8\u50cf\u5e7f\u641c\u4e00\u6837\uff0c\u4e0d\u641c\u7d22\u8fc7\u6df1\u6d6a\u8d39\u65f6\u95f4\uff0c\u662f\u4e00\u79cd\u7ed3\u5408\u4e86dfs\u4e0ebfs\u4f18\u70b9\u7684\u5199\u6cd5\u3002\n\n\u4e0b\u9762\u6839\u636e\u5177\u4f53\u7684\u4ee3\u7801\u6765\u8bb2\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\u3002\n\n\u6b63\u5e38\u7684dfs\uff0c\u662f\u6839\u636e\u9898\u76ee\u7684\u6761\u4ef6\uff0c\u8fd9\u6837\u5199:\n\n```cpp\nvoid dfs(string now,int step){\n//\tcout<<now<<' '<<step<<endl;\n\tif(step>10)return;//\u6839\u636e\u9898\u610f\uff0c\u8d85\u8fc7\u5341\u6b65\u81ea\u52a8\u505c\u6b62\n//==================\u5224\u65ad\u91cd\u590d======================\n\tif(now==b){\n\t\tans=min(ans,step);\n\t\treturn;\n\t}\n\tif(ed[now]){//\u4f7f\u7528set\u6765\u5224\u65ad\u91cd\u590d\u72b6\u6001\n\t\tif(step>=st[now])return;\n\t}\n\ted[now]=1;st[now]=step;\n//==================\u5bfb\u627e\u53d8\u6362========================\n\tint loc=0;string changed;\n\tfor(int i=1;i<=t;++i){//\u627e\u6240\u6709\u7684\u5b57\u7b26\u4e32 \n\t\tloc=-1;\n\t\t while(1){//\u627e\u5230\u4e86 \n\t\t \tloc=now.find(change[i][0],loc+1);\n\t\t \tif(loc==-1)break;\n\t\t \tchanged=now;\n\t\t \tchanged.erase(loc,change[i][0].size());\n\t\t \tchanged.insert(loc,change[i][1]);\n\t\t \tdfs(changed,step+1);\n\t\t }\n\t}//\u8fd9\u4e00\u90e8\u5206\u5199\u7684\u6bd4\u8f83\u4e11\uff0c\u5efa\u8bae\u53c2\u8003\u4ed6\u4eba\u7684\n\treturn;\n}\n\n```\n\n\u76f4\u63a5\u8fd9\u6837\u4e00\u8def\u8d70\u5230\u5e95\uff0c\u867d\u7136\u52a0\u4e86\u4e00\u4e2a\u5224\u65ad\u91cd\u590d\u7684\u526a\u679d(\u8bb0\u5fc6\u5316)\uff0c\u4f46\u4ecd\u7136\u4f1a\u8d85\u65f6\u3002\n\n\n\n------------\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u672c\u8eab\u5c31\u6709\u641c\u7d22\u6df1\u5ea6\u7684\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u6b63\u597d\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u52a0\u6df1\u6765\u5904\u7406\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n\u4e3b\u51fd\u6570\u5185\uff1a\n```cpp\n\t//\u4f7f\u7528k\u6765\u8bb0\u5f55\u5c42\u6570\n   //\u53ea\u8981\u8fd8\u6ca1\u627e\u5230\uff0c\u5c31\u7ee7\u7eed\u589e\u52a0\n   //\u627e\u523010\u8fd8\u6ca1\u6709\u627e\u5230\uff0c\u76f4\u63a5\u9000\u51fa\n\twhile(ans==999999){//\u53ea\u8981\u6ca1\u6709\u627e\u5230\u7b54\u6848\n\t\tdfs(a,0);\n        \n\t\ted.clear();\n\t\tst.clear();//\u4e0a\u4e00\u6b21\u8bb0\u5f55\u7684\u6b65\u6570\u4e0e\u72b6\u6001\u8bb0\u5f97\u6e05\u7a7a\n        \n\t\tk++;//\u589e\u52a0\u641c\u7d22\u5c42\u6570\n\t\tif(k==11)break;\n\t}\n```\ndfs\u51fd\u6570\u5185\uff1a\n```cpp\n\tif(step>10)return;//\u6b65\u6570\u8fc7\u5927 \n```\n\u6539\u4e3a:\n```cpp\n\tif(step>k)return;//\u6b65\u6570\u8fc7\u5927 \n```\n\n\u8fd9\u6837\u7a0d\u5fae\u5730\u4fee\u6539\u4e86\u4e00\u4e0b\u8fc7\u540e\uff0c\u8fd9\u9898\u5c31\u53ef\u4ee5\u7528dfs\u8fc7\u4e86~\n\n\u9644\u4e0a\u5b8c\u6574\u7684AC\u4ee3\u7801\uff1a\n```cpp\n//\u5b50\u4e32\u53d8\u6362\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<algorithm>\n#include<map>\nusing namespace std;\nmap <string,bool> ed;\nmap <string,int> st;\nstring a,b;\nstring change[30][3];\nint t=1,k=2;\nint ans=999999;\nvoid dfs(string now,int step){\n//\tcout<<now<<' '<<step<<endl;\n\tif(step>k)return;//\u6b65\u6570\u8fc7\u5927 \n\tif(now==b){\n\t\tans=min(ans,step);\n\t\treturn;\n\t}\n\tif(ed[now]){\n\t\tif(step>=st[now])return;\n\t}\n\ted[now]=1;st[now]=step;\n\tint loc=0;string changed;\n\tfor(int i=1;i<=t;++i){//\u627e\u6240\u6709\u7684\u5b57\u7b26\u4e32 \n\t\tloc=-1;\n\t\t while(1){//\u627e\u5230\u4e86 \n\t\t \tloc=now.find(change[i][0],loc+1);\n\t\t \tif(loc==-1)break;\n\t\t \tchanged=now;\n\t\t \tchanged.erase(loc,change[i][0].size());\n\t\t \tchanged.insert(loc,change[i][1]);\n\t\t \tdfs(changed,step+1);\n\t\t }\n\t}\n\treturn;\n}\nint main(){\n//\tfreopen(\"in.txt\",\"r\",stdin);\n//\tfreopen(\"out.txt\",\"w\",stdout);\n\tcin>>a>>b;\n\twhile(cin>>change[t][0]>>change[t][1]){\n\t\tt++;\n\t}\n\tt--;\n\t\n\twhile(ans==999999){\n\t\tdfs(a,0);\n\t\ted.clear();\n\t\tst.clear();\n\t\tk++;\n\t\tif(k==11)break;\n\t}\n\t\n\tif(ans==999999){\n\t\tcout<<\"NO ANSWER!\"<<endl;\n\t\treturn 0;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n} \n```\n\n\u8fd8\u6709\u4ec0\u4e48\u4e0d\u660e\u767d\u7684\u53ef\u4ee5\u76f4\u63a5\u5728\u8bc4\u8bba\u533a\u91cc\u9762\u63d0\u51fa\u6765\uff0c\u53ea\u8981\u770b\u89c1\u5c31\u4f1a\u56de\u7b54\n\n\u548c\u6211\u4e00\u6837\u559c\u6b22\u5199dfs\u7684\u5c0f\u4f19\u4f34\u70b9\u4e2a\u8d5e\u5427qwq\n",
        "postTime": 1550664188,
        "uid": 121838,
        "name": "Time_Rune",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "================================================================\n\n===========================\u5f00\u59cb\u5206\u5272\u7ebf============================\n\n================================================================\n\n### \u8fd9\u9053\u9898\u5f88\u660e\u663e\u662f\u4e00\u9053 B F S \u7684 \u6a21 \u677f \u9898\n# \u4f46\u662f\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n**\u8fd9\u9053\u9898\u66f4\u52a0\u660e\u663e\u7684\u662f\u4e00\u9053**\n**[ \u53cc \u5411 B F S \u6a21 \u677f \u9898 ]**\n```\n\u56e0\u4e3a\n\u8fd9\u9053\u9898\u540c\u65f6\u7ed9\u51fa\u4e86\u521d\u59cb\u72b6\u6001\u548c\u76ee\u6807\u72b6\u6001\n\u6240\u4ee5\n\u7528\u53cc\u5411BFS\u53ef\u4ee5\u4f7f\u5f97\u8fd0\u884c\u901f\u5ea6\u5927\u5927\u63d0\u5347\n```\n***\n\n================================================================\n\n========================\u771f\u6b63\u7684\u5f00\u59cb\u5206\u5272\u7ebf=========================\n\n================================================================\n\n**\u753b\u4e2a\u56fe\u6765\u4e3e\u6817\u5b50\uff01**\n\n\n![](https://s2.ax1x.com/2019/10/24/KUjuY4.png)\n\n\u6211\u4eec\u5047\u8bbe\u4e0a\u9762\u7684S\u70b9\u662f\u521d\u59cb\u72b6\u6001\uff0c\u4e0b\u9762\u7684T\u70b9\u662f\u76ee\u6807\u72b6\u6001\uff0c\u90a3\u4e48\u5355\u5411\u7684BFS\u4f1a\u5f62\u6210\u8fd9\u4e48\u4e00\u4e2a**\u6811\u72b6\u56fe\u5f62**\uff0c\u6bcf\u4e00\u6b21\u6269\u5c55\u90fd\u76f8\u5f53\u4e8e\u662f\u6811\u679d\u7684\u5ef6\u4f38\uff0c\u6700\u540e\u5982\u679c\u5ef6\u4f38\u5230\u4e86T\u90a3\u4e48\u5c31\u7ed3\u675f\u4e86\u3002\n\n![](https://s2.ax1x.com/2019/10/24/KUjQp9.png)\n\n\u4f46\u662f\u6211\u4eec\u5f88\u660e\u663e\u7684\u53ef\u4ee5\u53d1\u73b0\u6709\u5f88\u591a**\u5197\u4f59\u7684BFS\u641c\u7d22\u679d**\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u5b83\u4eec\u8fc7\u4e8e\u504f\u79bb\u4e86T\u7684\u65b9\u5411\uff01\n\n![](https://s2.ax1x.com/2019/10/24/KUjAO0.png)\n\n\u6211\u4eec\u540c\u65f6\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u4eceT\u5f00\u59cb\u641c\u7d22\uff0c\u9020\u51fa\u4e00\u4e2a\u4e0a\u5927\u4e0b\u5c0f\u7684**BFS\u641c\u7d22\u6811**\uff0c\u540c\u6837\u53ef\u4ee5\u8d77\u5230BFS\u7684\u4f5c\u7528\uff0c\u5f53\u641c\u7d22\u5230S\u70b9\u7684\u65f6\u5019\u5c31\u7ed3\u675f\u4e86\uff01\n\n![](https://s2.ax1x.com/2019/10/24/KUjeTU.png)\n\n\u800c\u8fd9\u6837\u505a\u7684\u65f6\u5019\u540c\u6837\u4e5f\u6709\u5f88\u591a\u7684**\u5197\u4f59\u641c\u7d22\u679d**\u3002\n\n![](https://s2.ax1x.com/2019/10/24/KUjZwT.png)\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8003\u8651**\u53cc\u5411BFS**\uff01\uff01\u5982\u679c\u6211\u4eec\u540c\u65f6\u4ece\u4e0a\u9762\u548c\u4e0b\u9762\u5f00\u59cb\u5ef6\u4f38\u8fd9\u4e24\u68f5\u6811\u5b50\u7684\u8bdd\uff0c\u4e00\u65e6\u4e24\u5934**\u649e\u5728\u4e00\u8d77**\u5c31\u53ef\u4ee5\u8bf4\u660e\u641c\u7d22\u5230\u4e86\uff0c\u56e0\u4e3a\u4e24\u9897\u641c\u7d22\u6811\u7684**\u641c\u7d22\u89c4\u5219\u662f\u76f8\u53cd\u7684**\uff0c\u4e24\u68f5\u6811\u76f8\u9047\u7684\u65f6\u5019**\u4ece\u4e00\u8fb9\u7684\u8282\u70b9\u4e00\u5b9a\u53ef\u4ee5\u987a\u7740\u53e6\u5916\u4e00\u8fb9\u7684\u641c\u7d22\u679d\u5230\u8fbe\u7ec8\u70b9**\uff01\n\n![](https://s2.ax1x.com/2019/10/24/KUjllR.png)\n\n\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u9664\u5f88\u591a\u641c\u7d22\u679d\uff0c\u7528\u51e0\u4f55\u5173\u7cfb\u4e0d\u96be\u8bc1\u660e\u81f3\u5c11\u4f1a\u51cf\u5c11**\u767e\u5206\u4e4b\u4e94\u5341**\u7684\u641c\u7d22\u7a7a\u95f4\u4e0e\u65f6\u95f4\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6bcf\u4e00\u6b21\u641c\u7d22\u5e26\u6765\u7684**\u6a2a\u5411\u6269\u5f20**\u8fdc\u8fdc\u4e0d\u6b62+1\uff0c\u6709\u7684\u65f6\u5019\u53ef\u4ee5**\u7ffb\u500d\u6216\u8005\u66f4\u591a**\uff0c\u6240\u4ee5\u8fd9\u68f5\u6811\u5b50\u7684\u56fe\u5f62\u5f80\u5f80\u662f\u4e00\u4e2a**\u6307\u6570\u51fd\u6570\u56fe\u50cf**\u4e3a\u8fb9\u754c\u7684\u641c\u7d22\u6811\uff0c\u6df1\u5ea6\u6bcf\u6bcf+1\uff0c\u5c31\u4f1a\u5e26\u6765\u5927\u91cf\u7684\u65b0\u641c\u7d22\u8282\u70b9\uff0c\u800c**\u53cc\u5411BFS**\u53ef\u4ee5\u51cf\u5c11\u5927\u91cf\u7684\u641c\u7d22\u8282\u70b9\u3002\n\n![](https://s2.ax1x.com/2019/10/24/KUjKfJ.png)\n\n***\n**\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7map\u53bb\u5b9e\u73b0\u67e5\u627e\u73b0\u5728\u6211\u4eec\u6240\u641c\u7d22\u5230\u7684\u8282\u70b9\u662f\u5426\u51fa\u73b0\u8fc7\uff08\u5982\u679c\u662f\u540c\u4e00\u8fb9\u7684\u641c\u7d22\u6811\u91cc\u9762\u7684\uff0c\u90a3\u4e48\u5c31\u4e0d\u7528\u518d\u628a\u8fd9\u4e2a\u8282\u70b9\u5165\u961f\u4e86\uff0c\u5047\u5982\u662f\u5bf9\u9762\u7684\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740\u4e24\u68f5\u641c\u7d22\u6811\u78b0\u9762\u4e86\uff01\u7b97\u6cd5\u7ed3\u675f\uff01\uff09**\n\n**\u800c\u6bcf\u6b21\u51fa\u961f\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u591f\u51fa\u4e0a\u4e00\u5c42\u7684\u641c\u7d22\u8282\u70b9\uff0c\u4e0d\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e00\u5c42\u7684\u641c\u7d22\u8282\u70b9\uff0c\u4fdd\u8bc1\u4e24\u8fb9\u4e00\u6b65\u4e00\u6b65\u5730\u8d70\uff0c\u6240\u4ee5map\u91cc\u9762\u6240\u5bf9\u5e94\u7684int\u662f\u8fd9\u4e2a\u641c\u7d22\u8282\u70b9\u5bf9\u5e94\u7684\u5c42\u6570-1\uff08\u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u6a21\u62df\uff09**\n****\n**[[15ms] AC](https://www.luogu.org/record/25655144)  code**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring a[10],b[10],s,t;\nint n=1;\nmap <string,int> A,B;//pair< string , step + 1 >\nqueue <string> A_,B_; \ninline void initialization()\n{\n\tcin>>s>>t;\n\twhile(cin>>a[n]>>b[n])n++;\n}\ninline int bfs()\n{\n\tint step=0;\n\tA_.push(s);//\u5f00\u59cb\u72b6\u6001\n\tA[s]=0;//\u5f00\u59cb\u72b6\u6001\u7684\u5c42\u6570 \n\tB_.push(t);//\u5f00\u59cb\u72b6\u6001\n\tB[t]=0;//\u7ed3\u675f\u72b6\u6001\u7684\u5c42\u6570 \n\tstring s,s2;\n\twhile(++step<=5)//\u4e00\u8fb9\u662f10\u6b65\u4e4b\u5185\uff0c\u90a3\u4e48\u4e24\u8fb9\u4e00\u8d77\u8d70\u5c31\u662f5\u6b65\u4e4b\u5185 \n\t{\n\t\twhile(A[A_.front()]==step-1)//\u4fdd\u8bc1\u662f\u4e0a\u4e00\u5c42\u7684 \n\t\t{\n\t\t\ts=A_.front();\n\t\t\tA_.pop();\n\t\t\tfor(int i=1;i<=n;i++)//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f6c\u6362\u65b9\u6848\u904d\u5386 \n\t\t\t{\n\t\t\t\tunsigned int pos=0;//\u904d\u5386\u5f00\u59cb\u641c\u7d22\u7684\u8282\u70b9\uff0c\u7ed3\u5408string::find( key_string , starting ) \n\t\t\t\twhile(pos<s.length())\n\t\t\t\t{\n\t\t\t\t\tif(s.find(a[i],pos)==s.npos)break;//\u5982\u679c\u627e\u4e0d\u5230\u4e86 \n\t\t\t\t\ts2=s;\n\t\t\t\t\ts2.replace(s2.find(a[i],pos),a[i].length(),b[i]);//replace( starting , length , substitution )\n\t\t\t\t\tif(A.find(s2)!=A.end())//\u8fd9\u68f5\u6811\u91cc\u9762\u4e4b\u524d\u51fa\u73b0\u8fc7 \n\t\t\t\t\t{\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(B.find(s2)!=B.end())return step*2-1;//\u5bf9\u9762\u7684\u641c\u7d22\u6811\u91cc\u9762\u51fa\u73b0\u8fc7\uff0c\u7531\u4e8e\u662f\u4e0a\u9762\u5148\u8d70\uff0c\u6240\u4ee5-1 \n\t\t\t\t\tA_.push(s2);//\u5165\u961f \n\t\t\t\t\tA[s2]=step;\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile(B[B_.front()]==step-1)//\u4fdd\u8bc1\u662f\u4e0a\u4e00\u5c42\u7684 \n\t\t{\n\t\t\ts=B_.front();\n\t\t\tB_.pop();\n\t\t\tfor(int i=1;i<=n;i++)//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f6c\u6362\u65b9\u6848\u904d\u5386 \n\t\t\t{\n\t\t\t\tunsigned int pos=0;//\u904d\u5386\u5f00\u59cb\u641c\u7d22\u7684\u8282\u70b9\uff0c\u7ed3\u5408string::find( key_string , starting ) \n\t\t\t\twhile(pos<s.length())\n\t\t\t\t{\n\t\t\t\t\tif(s.find(b[i],pos)==s.npos)break;//\u5982\u679c\u627e\u4e0d\u5230\u4e86 \n\t\t\t\t\ts2=s;\n\t\t\t\t\ts2.replace(s2.find(b[i],pos),b[i].length(),a[i]);//replace( starting , length , substitution )\n\t\t\t\t\tif(B.find(s2)!=B.end())//\u8fd9\u68f5\u6811\u91cc\u9762\u4e4b\u524d\u51fa\u73b0\u8fc7 \n\t\t\t\t\t{\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(A.find(s2)!=A.end())return step*2;//\u5bf9\u9762\u7684\u641c\u7d22\u6811\u91cc\u9762\u51fa\u73b0\u8fc7\uff0c\u7531\u4e8e\u662f\u4e0a\u9762\u5148\u8d70\uff0c\u6240\u4ee5-1 \n\t\t\t\t\tB_.push(s2);//\u5165\u961f \n\t\t\t\t\tB[s2]=step;\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\nint main()\n{\n\tinitialization();\n\tint ans=bfs();\n\tif(ans==-1)\n\tprintf(\"NO ANSWER!\");\n\telse printf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n***\n================================================================\n\n===========================\u7ed3\u675f\u5206\u5272\u7ebf============================\n\n================================================================\n\nThx for watching the patience!",
        "postTime": 1571920234,
        "uid": 117111,
        "name": "BrandonSoong",
        "ccfLevel": 4,
        "title": "\u53cc\u5411BFS\u603b\u7ed3"
    },
    {
        "content": "\n\u7b97\u6cd5\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n\n\u601d\u8def\uff1a\u6bcf\u6b21\u5b57\u7b26\u4e32\u5165\u961f\u5217\u540e\u627e\u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\uff08\u5373\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u53ef\u4ee5\u4fee\u6539\u7684\u4e32\uff09\uff0c\u628a\u4fee\u6539\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u5165\u961f\u5217\uff0c\u8bb0\u5f55\u4fee\u6539\u7684\u6b21\u6570\u3002\n\n\u6ce8\u610f\uff1a\u6bcf\u6b21\u627e\u53ef\u4ee5\u4fee\u6539\u7684\u4e32\u5904\u7406\u5b8c\u4e4b\u540e\u8981\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u7ee7\u7eed\u5f80\u540e\u627e\u770b\u8fd9\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u6709\u6ca1\u6709\u53ef\u4ee5\u4fee\u6539\u7684\u5b50\u4e32\u3002\n\n\u6280\u5de7\uff1a\u8fd9\u4e2a\u9898\u4f7f\u7528STL\u53ef\u4ee5\u5927\u5e45\u51cf\u5c11\u7801\u91cf\u3002\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\nstring a,b;\nstring ra[7],rb[7];\nstruct node{\n    string cur;//\u5f53\u524d\u5b57\u7b26\u4e32\n    int cs;//\u5f53\u524d\u5df2\u4fee\u6539\u6b21\u6570\n}q[2000000];\nint main()\n{\n    cin>>a>>b;\n    int i=1;\n    while(cin>>ra[i]>>rb[i])\n    {\n        i++;\n    }\n    i-=1;\n    \n    int head=0,tail=1;\n    q[tail].cur=a;      //\u539f\u5b57\u7b26\u4e32\u5165\u961f\u5217\n    q[tail].cs=0;\n    while(head<tail)\n    {\n        head++;\n        if(q[head].cs>10)    //\u6b21\u6570\u5927\u4e8e10\u8f93\u51fa\u65e0\u89e3\u540e\u7ed3\u675f\u7a0b\u5e8f\n        {\n            cout<<\"NO ANSWER!\"<<endl;\n            return 0;\n        }\n        for(int j=1;j<=i;j++)\n        {\n            int pos=q[head].cur.find(ra[j],0);\n            while(1)//\u5bfb\u627e\u53ef\u4ee5\u4fee\u6539\u7684\u5b50\u4e32\n            {\n                if(pos==-1)//\u627e\u4e0d\u5230\u9000\u51fa\n                {\n                    break;\n                }\n                else    //\u627e\u5230\u4e4b\u540e\u628a\u5b57\u7b26\u4e32\u4fee\u6539\u4e4b\u540e\u585e\u8fdb\u961f\u5217\uff0c\u518d\u7ee7\u7eed\u5f80\u4e0b\u627e\n                {\n                    tail++;\n                    q[tail].cur=q[head].cur;\n                    q[tail].cs=q[head].cs+1;\n                    q[tail].cur.replace(pos,ra[j].size(),rb[j]);\n                    if(q[tail].cur==b)\n                    {\n                        cout<<q[tail].cs;\n                        return 0;\n                    }\n                    pos=q[head].cur.find(ra[j],pos+1);\n                }\n            }\n        }\n    }\n    return 0; \n}\n```",
        "postTime": 1545479612,
        "uid": 109182,
        "name": "MakotoTSK",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "$upd \\ \\ 2019.10.6$\n\n\u6700\u8fd1\u603b\u662f\u6709\u4e00\u4e9b\u4eba\u6765\u8bf4\u6211\u8fc7\u4e0d\u4e86\u6211\u81ea\u5df1\u7684$\\text{hack}$\u6570\u636e$\\cdots$\n\n\u8fd9\u4e0d\u5c31\u53ea\u662f\u6bd41s\u591a\u8dd1\u4e86\u96f6\u70b9\u51e0\u79d2\u5417$\\cdots$\uff0c~~\u5176\u4ed6\u7684\u9898\u89e3\u8fd8\u6839\u672c\u5c31\u8dd1\u4e0d\u51fa\u6765~~\n\n\u6240\u4ee5\u4eca\u5929\u51b3\u5b9a\u4f18\u5316\u4e00\u4e0b\uff0c\u987a\u4fbf\u91cd\u5199\u4e00\u4e0b\u4ee3\u7801\uff08~~\u4ee5\u524d\u7801\u98ce\u592a\u4e11~~\uff09\n\n**-----------------\u5206\u5272\u7ebf-------------------**\n\n\u9996\u5148\u8fd9\u91cc\u6709$4$\u7ec4\u53ef\u4ee5\u5361\u6389\u5176\u4ed6\u5927\u90e8\u5206\u9898\u89e3\u7684\u6570\u636e\uff1a\n```cpp\naaaaaaaaaaaaaaaaaaaa cfbkkk\naaaaa b\naaaa c\naaa d\naa e\na f\nbde kkk\n\noutput\uff1a7\n//\u6765\u81ea\u6211\u7684\u6559\u7ec3cjx\u8001\u5e08\n```\n\n\n------------\n\n```cpp\nbaaaaaaaaaaaaaabaaab abaaababaabbaababaab\naa b\nabb bab\naba aab\nbb ab\nb a\nab aa\n\noutput\uff1aNO ANSWER!\n\n\n\naaaaaaaaaaaaaaaaaaaa aaaaaaaaaabbbbbbbbbb\nabbaaaabbaaaabba abbbabbabbbabbab\nabab bbab\naaa bab\naba aab\na b\nb a\n\noutput\uff1a7\n\n\n\nbaaaaaaaaaaaaaabaaab bbaaabbbabbbabbababa\naa ab\nabab bbab\naaa bab\naba aab\na b\nb a\n\noutput\uff1a10\n```\n\uff08\u4ee5\u4e0a3\u7ec4\u6570\u636e\u5747\u6765\u81ea\u795e\u7287[superMB](https://www.luogu.org/space/show?uid=118265)\uff09\n\n\u5177\u4f53\u6ce8\u91ca\u53ef\u89c1\u4ee3\u7801\uff0c\u53e6\u5916\u63d0\u4f9b[\u5b57\u7b26\u8f6c\u6362\u52a0\u5f3a\u7248](https://www.luogu.org/problem/U90810)\n\n## Code\uff08Ac \u4e14 \u672a\u5f00O2\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<iostream>\n#include<queue>\nusing namespace std;\n#define Min(a,b) ((a)<(b)?(a):(b))\n#define rg register\n#define ll long long\n#define ull unsigned ll\nstruct ios{\n\ttemplate<typename TP>\n\tinline ios operator >> (TP &x)\n\t{\n\t\tTP f=1;x=0;rg char c=getchar();\n\t\tfor(;c>'9' || c<'0';c=getchar()) if(c=='-') f=-1;\n\t\tfor(;c>='0' && c<='9';c=getchar()) x=(x<<3)+(x<<1)+(c^'0');\n\t\tx*=f;\n\t\treturn *this;\n\t}\n\ttemplate<typename TP>\n\tinline ios operator << (TP x)\n\t{\n\t\tint top=0,s[66];\n\t\tif(x<0) x=-x,putchar('-');\n\t\tif(!x) putchar('0');\n\t\twhile(x) s[++top]=x%10+'0',x/=10;\n\t\twhile(top) putchar(s[top--]);\n\t\treturn *this;\n\t}\n\tinline ios operator << (char s)\n\t{\n\t\tputchar(s);\n\t\treturn *this;\n\t}\n}io;//\u5feb\u8bfb \n#define P pair<string,int>\nstring s,t,a[10],b[10];\n//\u8d77\u59cb\u4e32\u548c\u76ee\u6807\u4e32\uff0c\u4ee5\u53ca\u8f6c\u5316\u65b9\u5f0f \nint cnt=1,pos;\nqueue<P>q1,q2;//\u5f00\u4e24\u4e2a\u961f\u5217\uff0c\u5206\u522b\u5b58\u50a8\u4ece\u8d77\u59cb\u4e32\u3001\u76ee\u6807\u4e32\u5404\u8d705\u6b65\u53ef\u8fbe\u7ed3\u679c \nconst int mod=122777;\nconst int mod2=131;\n//\u624b\u5199map \uff08\u54c8\u5e0c\u8868\uff09 \nstruct H{\n\tull hash;\n\tint nxt,id;\n}e[mod+5][2];//\u540c\u4e0a\uff0c\u5f00\u4e24\u4e2a\u54c8\u5e0c\u8868 \nint tot[2],h[mod+5][2];\nstruct HHH{\n\tinline ull Hash(string a)\n\t//\u5148\u628astring\u54c8\u5e0c\u6210\u4e00\u4e2a\u65e0\u7b26\u53f7\u957f\u6574\u5f62\u6570\uff08\u53ef\u81ea\u52a8\u6ea2\u51fa\uff0c\u4e0d\u7528\u53d6\u6a21\uff09 \n\t{\n\t\tull f=0;\n\t\tfor(rg int i=0;i<(int)a.size();++i) f=f*mod2+(a[i]-'a'+1);\n\t\treturn f;\n\t}\n\tinline void insert(string x,int y,int op)\n\t//\u63d2\u5165\uff0cop\u4ee3\u8868\u4e0d\u540c\u7684\u54c8\u5e0c\u8868 \n\t{\n\t\tull k=Hash(x),kk=k%mod;\n\t\te[++tot[op]][op].hash=k,e[tot[op]][op].id=y;\n\t\te[tot[op]][op].nxt=h[kk][op],h[kk][op]=tot[op];\n\t}\n\t/*\n\t\u2191 \u2191 \u2191 \u2191 \u2191 \u54c8\u5e0c\u8868\u57fa\u672c\u64cd\u4f5c \u2193 \u2193 \u2193 \u2193 \u2193 \u2193 \n\t*/\n\tinline int Find(string x,int op)\n\t{\n\t\tull k=Hash(x),kk=k%mod;\n\t\tfor(rg int i=h[kk][op];i;i=e[i][op].nxt)\n\t\t\tif(e[i][op].hash==k) return e[i][op].id;\n\t\treturn -1;\n\t}\n}Map;\ninline void bfs()//\u53cc\u5411bfs\uff0c\u4f7f\u641c\u7d22\u89c4\u6a21\u7f29\u5c0f\u4e00\u500d \n{\n\twhile(!q1.empty())\n\t//\u5148\u4ece\u76ee\u6807\u4e32\u5f80\u56de\u641c\u597d\u50cf\u8981\u5feb\u4e00\u70b9 \n\t{\n\t\tP ss=q1.front();q1.pop();\n\t\tif(Map.Find(ss.first,0)!=-1) continue;\n\t\t//\u5982\u679c\u8be5\u4e32\u51fa\u73b0\u8fc7\uff0c\u5c31\u8df3\u8fc7\u4e0d\u641c\uff0c\u56e0\u4e3a\u6b65\u6570\u8ddf\u4f18\u7684\u65b9\u6848\u80af\u5b9a\u5df2\u7ecf\u5148\u8bbf\u95ee\u8fc7 \n\t\tMap.insert(ss.first,ss.second+1,0);\n\t\t//\u5426\u5219\uff0c\u5411\u54c8\u5e0c\u8868\u4e2d\u63d2\u5165\u8be5\u4e32\u53ca\u5bf9\u5e94\u7684\u6b65\u6570 \n\t\tfor(rg int i=1;i<=cnt;++i)\n\t\t{//\u7528\u6bcf\u4e00\u4e2a\u53d8\u6362\u89c4\u5219\u53bb\u5c1d\u8bd5 \n\t\t\tstring S=ss.first;pos=0;\n\t\t\twhile(1)\n\t\t\t{\n\t\t\t\tpos=S.find(b[i],pos);\n\t\t\t\tif(pos==-1) break;\n\t\t\t\tstring SS=S;\n\t\t\t\tSS.erase(pos,b[i].size()),SS.insert(pos,a[i]);\n\t\t\t\t//string\u57fa\u672c\u64cd\u4f5c\uff0c\u5c31\u662f\u6a21\u62df\u8be5\u53d8\u6362\u8fc7\u7a0b \n\t\t\t\tif(ss.second<=4) q1.push(make_pair(SS,ss.second+1));\n\t\t\t\t//\u5982\u679c\u5f53\u524d\u5df2\u7ecf\u8d70\u4e865\u6b65\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b65\u5c31\u662f\u7b2c6\u6b65\uff0c\u5c31\u5df2\u7ecf\u8d85\u51fa\u6b65\u6570\u9650\u5236\u7684\u4e00\u534a\u4e86 \n\t\t\t\t++pos;\n\t\t\t\t//\u5343\u4e07\u6ce8\u610f\uff0c\u4e00\u4e2a\u53d8\u6362\u89c4\u5219\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u53ef\u80fd\u9002\u7528\u591a\u6b21\uff0c\u4e0d\u80fd\u6f0f\u4e86 \n\t\t\t}\n\t\t}\n\t}\n\twhile(!q2.empty())//\u5927\u81f4\u539f\u7406\u540c\u4e0a \n\t{\n\t\tP ss=q2.front();q2.pop();\n\t\tif(Map.Find(ss.first,1)!=-1) continue;\n\t\tMap.insert(ss.first,1,1);//\u8fd9\u4e2a\u54c8\u5e0c\u8868\u5c31\u53ef\u4ee5\u53ea\u7edf\u8ba1\u8be5\u5b57\u7b26\u4e32\u662f\u5426\u51fa\u73b0\u8fc7\n\t\t//\u4e0d\u7528\u518d\u7edf\u8ba1\u6b65\u6570 \n\t\tint ans=1<<30;\n\t\tfor(rg int i=1;i<=cnt;++i)\n\t\t{\n\t\t\tstring S=ss.first;pos=0;\n\t\t\twhile(1)\n\t\t\t{\n\t\t\t\tpos=S.find(a[i],pos);\n\t\t\t\tif(pos==-1) break;\n\t\t\t\tstring SS=S;\n\t\t\t\tSS.erase(pos,a[i].size()),SS.insert(pos,b[i]);\n\t\t\t\tint pp=Map.Find(SS,0);\n\t\t\t\t//\u82e5\u7b2c\u4e00\u4e2a\u54c8\u5e0c\u8868\u4e2d\u5df2\u7ecf\u6709\u4e86\u5bf9\u5e94\u5b57\u7b26\u4e32\uff0c\u8bf4\u660e\u6b63\u53cd\u641c\u7d22\u7684\u5206\u652f\u5df2\u7ecf\u76f8\u9047\uff0c\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848 \n\t\t\t\tif(pp!=-1) ans=Min(ans,ss.second+pp);//\u4e0d\u7edf\u8ba1\u6b65\u6570\u662f\u56e0\u4e3a\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u66f4\u65b0 \n\t\t\t\tif(ss.second<=4) q2.push(make_pair(SS,ss.second+1));\n\t\t\t\t++pos;//\u540c\u4e0a \n\t\t\t}\n\t\t}\n\t\tif(ans!=1<<30) {io<<ans;return;}\n\t}\n\tputs(\"NO ANSWER!\");//\u5224\u65e0\u89e3 \n}\nint main()\n{\n//\tfreopen(\"str1.in\",\"r\",stdin);\n//\tfreopen(\"str.out\",\"w\",stdout);\n\tcin>>s>>t;\n\twhile(cin>>a[cnt]>>b[cnt]) ++cnt;\n\t--cnt;\n\tq2.push(make_pair(s,0)),q1.push(make_pair(t,0)),bfs();\n\treturn 0;\n}\n```\n",
        "postTime": 1553390297,
        "uid": 122407,
        "name": "Ein_Niemand",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u5176\u5b9e\u53ef\u4ee5\u53cc\u5411\u5e7f\u641c\u9e2d\u3002\u3002\u3002\u3002\uff08\u9898\u89e3\u91cc\u597d\u50cf\u6ca1\u591a\u5c11\u4eba\u5199\u554a\uff09\n```cpp\n#include <bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<b;++i)\nusing namespace std;\nstruct node { string s; int step; };\nqueue<node> q1, q2;\nmap<string, int> h1, h2;\t//2\u4e2a\u54c8\u5e0c\nstring w1[1001], w2[1001]; \t//\u5b58\u53d8\u6362\u89c4\u5219\t\nint n, flag;\nvoid Bfs()\n{\n\twhile(!q1.empty() && !q2.empty()) //\u4e24\u4e2a\u961f\u5217\u662f\u5426\u641c\u5b8c\n\t{\n    /*\u7b2c\u4e00\u904d\u5e7f\u641c*/\n\t\tnode now1 = q1.front(); q1.pop();\n\t\tint step1 = now1.step;\n\t\tstring s1 = now1.s;\n\t\tif(step1 >= 10) { cout << \"NO ANSWER!\" << endl; return; } //\u6b65\u6570\u8d85\u8fc7\u5341\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t{\n\t\t\tif(s1.size() < w1[i].size()) continue; //\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e32\u5927\u5c0f\u5c0f\u4e8e\u8981\u6539\u53d8\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\n\t\t\tfor(int f = 0; f <= s1.size() - w1[i].size(); ++f) //\u9010\u4e00\u5224\u65ad\n\t\t\t{\n\t\t\t\tstring ts, to = w2[i];\n\t\t\t\tif(s1.substr(f, w1[i].size()) != w1[i])\n\t\t\t\t\tcontinue;\n                /*\u751f\u6210\u65b0\u5b57\u7b26\u4e32*/\n\t\t\t\tts = s1.substr(0, f); //\n\t\t\t\tts += to; ts += s1.substr(f + w1[i].size());\n                \n\t\t\t\tif(h1[ts]) continue; //\u5df2\u7ecf\u8d70\u8fc7\uff0c\u5219\u8df3\u8fc7\n\t\t\t\tif(h2[ts]){ cout << step1 + h2[ts] << endl; return; } //\u5982\u679c\u53cd\u5411\u5e7f\u641c\u641c\u8fc7\uff0c\u76f4\u63a5\u8fd4\u56de\n\t\t\t\tnow1.s = ts, now1.step = step1 + 1;\n\t\t\t\tq1.push(now1);\n\t\t\t\th1[ts] = step1 + 1; //\u8bb0\u5f55\u54c8\u5e0c\n\t\t\t}\n\t\t}\n\t\t/**************************************************************/\n        /*\u7b2c\u4e8c\u904d\uff0c\u628a\u7b2c\u4e00\u904d\u53cd\u8fc7\u6765\u5c31\u884c\u4e86*/\n\t\tnode now2 = q2.front(); q2.pop();\n\t\tint step2 = now2.step;\n\t\tstring s2 = now2.s;\n\t\tif(step2 >= 10) { cout << \"NO ANSWER!\" << endl; return; }\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t{\n\t\t\tif(s2.size() < w2[i].size()) continue;\n\t\t\tfor(int f = 0; f <= s2.size() - w2[i].size(); ++f)\n\t\t\t{\n\t\t\t\tstring ts, to = w1[i];\n\t\t\t\tif(s2.substr(f, w2[i].size()) != w2[i]) continue;\n\t\t\t\tts = s2.substr(0, f);\n\t\t\t\tts += to; ts += s2.substr(f + w2[i].size());\n\t\t\t\tif(h2[ts]) continue;\n\t\t\t\tif(h1[ts]) { cout << step2 + h1[ts] << endl; return; }\n\t\t\t\tnow2.s = ts, now2.step = step2 + 1;\n\t\t\t\tq2.push(now2);\n\t\t\t\th2[ts] = step2 + 1;\n\t\t\t}\n\t\t}\n\t}\n\tcout << \"NO ANSWER!\" << endl;\n}\nint main()\n{\n\tstring a, b;\n\tcin >> a >> b;\n\tnode st = {a, 0};\n\tnode ed = {b, 1};\n\th1[a] = 0; h2[b] = 1;\n\tq1.push(st); q2.push(ed); //\u8bb0\u5f55\u5f00\u5934\u548c\u7ed3\u5c3e\u4f5c\u4e3a\u53cc\u5411\u5e7f\u641c\u7684\u8d77\u70b9\n\twhile(cin >> a >> b)\n\t{\n\t\t//if(a == \"0\") break;\uff08\u65b9\u4fbf\u8c03\u8bd5\uff09\n\t\tw1[++n] = a; w2[n] = b; //w1\u5b58a\uff0c w2\u5b58b\n\t}\n\tBfs(); //\u76f4\u63a5\u5e7f\u641c\n\treturn 0;\n}\n```\n",
        "postTime": 1567576805,
        "uid": 41545,
        "name": "Brainless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684BFS\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u5224\u91cd\uff0c\u4e0d\u7136\u7b2c5\u4e2a\u70b9\u4e00\u5b9a\u4f1a\u8d85\u65f6\u3002\u6211\u662f\u7528\u7684set\u6765\u5224\u91cd\u5f53\u524d\u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e4b\u524d\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u5982\u679c\u51fa\u73b0\u8fc7\uff0c\u5219\u4e0d\u4f1a\u518d\u6b21\u5c06\u8be5\u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u52a0\u5230\u961f\u5217\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u5219\u52a0\u5165\u961f\u5217\uff0c\u5e76\u4e14\u5c06\u8be5\u5b57\u7b26\u4e32\u52a0\u5165\u5230set\u4e2d\u4ee5\u5224\u91cd\uff01\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct node\n{\n    int num;//\u53d8\u6362\u6b21\u6570\n    string s;//\u53d8\u6362n\u6b21\u540e\u7684\u7ed3\u679c\n    node(int num,string s):num(num),s(s){}//\u6784\u9020\u51fd\u6570\n};\nstring A,B;//\u521d\u59cb\u5b57\u7b26\u4e32\u548c\u76ee\u6807\u5b57\u7b26\u4e32\nvector< pair<string,string> >v;//\u5b58\u50a8\u89c4\u5219\nset<string>reapr;//\u5224\u91cd\n\nbool bfs()\n{\n    queue<node>q;\n    q.push(node(0,A));\n    while(!q.empty()){\n        node u=q.front();\n        q.pop();\n        if(u.num>10) {printf(\"NO ANSWER!\\n\");return false;}//\u5982\u679c\u961f\u5934\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u6b21\u6570\u8d85\u8fc710\u6b21\uff0c\u4e0d\u5b58\u5728\u7b54\u6848\n        for (int i=0;i<v.size();i++)\n            if (u.s.find(v[i].first)!=-1);//\u5982\u679c\u8be5\u5b57\u7b26\u4e32\u5b58\u5728\u53ef\u4ee5\u8f6c\u6362\u7684\u60c5\u51b5\n                for (int j=u.s.find(v[i].first);j<u.s.length();j=u.s.find(v[i].first,j+1)){//\u4ece\u8be5\u5b57\u7b26\u7ee7\u7eed\u641c\u7d22\u4e32\u4e0b\u4e00\u4e2a\u53ef\u80fd\u8f6c\u6362\u4f4d\u7f6e\n                    string t=u.s;\n                    t.replace(j,v[i].first.length(),v[i].second);//\u6784\u9020\u51fa\u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\n                    if(t==B) {printf(\"%d\\n\",u.num+1);return true;}//\u5982\u679c\u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\u4e3a\u76ee\u6807\u4e32B\n                    if(!reapr.count(t)){//\u5224\u91cd\uff01\u975e\u5e38\u91cd\u8981\uff0c\u4e0d\u7136\u4e00\u5b9a\u4f1a\u8d85\u65f6\n                        q.push(node(u.num+1,t));\n                        reapr.insert(t);//\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0\u8fc7\u8be5\u5b57\u7b26\u4e32\uff0c\u5219\u52a0\u5165\u5230\u5df2\u51fa\u73b0\u7684\u96c6\u5408\uff0c\u4ee5\u9632\u4e0b\u6b21\u518d\u6b21\u51fa\u73b0\n                    }\n                }\n    }\n    return false;//\u4e0d\u5b58\u5728\u7b54\u6848\n}\nint main()\n{\n    //freopen(\"input.txt\",\"r\",stdin);\n    cin>>A>>B;\n    string a,b;\n    while(cin>>a>>b)\n        v.push_back(make_pair(a,b));\n    if(!bfs()) printf(\"NO ANSWER!\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1502864027,
        "uid": 52378,
        "name": "hzg0226",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "    \n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<map>\nusing namespace std;\nconst int N=1005;\nmap<string,int>zt;//\u8bb0\u5f55\u72b6\u6001 \nqueue<string>que;//\u7ef4\u62a4bfs \nstring st,ed,x[N],y[N];\nint tot=1,ans;//tot\u8bb0\u5f55\u8f6c\u6362\u65b9\u6848 \nbool eq(string s,int be,int to){//\u5224\u65ad\u662f\u5426\u76f8\u540c \n    string &tmp=x[to];//&\u4e3a\u4e86\u65b9\u4fbf \n    if(s.size()-be+1<x[to].size())return false;\n    for(int i=be;i-be<tmp.size();i++){\n        if(s[i]!=tmp[i-be])return false;\n    }\n    return true;\n}\nstring change(string s,int be,int to){//change \n    if(eq(s,be,to)){\n        string neww=s.substr(0,be)+y[to]+s.substr(x[to].size()+be,s.size());\n        return neww;//substr\u5c06s\u76840~be\u7ed9neww \n    }\n    else return \"\";\n}\nint bfs(){\n    que.push(st);zt[st]=0;\n    while(!que.empty()){\n        string now=que.front();que.pop();\n        for(int i=0;i<now.size();i++){\n            for(int j=1;j<=tot;j++){\n                string neww=change(now,i,j);\n                if(neww==\"\")continue;\n                if(zt.count(neww))continue;\n                if(zt[now]+1>10)continue;\n                que.push(neww),zt[neww]=zt[now]+1;\n                if(neww==ed)return zt[now]+1;\n            }\n        }\n    }\n    return 0;\n}\nint main(){\n    //freopen(\"zfc.in\",\"r\",stdin);\n    //freopen(\"zfc.out\",\"w\",stdout);\n    cin>>st>>ed;\n    while(cin>>x[tot]>>y[tot]){\n        tot++;\n    }tot--;\n    ans=bfs();\n    if(!ans)printf(\"NO ANSWER!\");\n    else printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1477223263,
        "uid": 10092,
        "name": "\u5c0f\u53f6\u540c\u5b66",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u9000\u5f79\u524d\u6700\u540e\u4e00\u7bc7\u9898\u89e3\uff0c\u5e0c\u671b\u53ef\u4ee5\u901a\u8fc7\n\n\u7531\u4e8e\u8fd9\u9053\u9898\u4e0d\u77e5\u9053WA\u4e86\u51e0\u6b21\u4e86\uff0c\u5bf9\u4e00\u4e9b\u4f4e$(ruo)$\u7ea7$(zhi)$\u9519\u8bef\u611f\u89e6\u6df1\u523b\u3002\n\n\u8fd9\u9053\u9898\u8981\u7528$bfs$\u4e0d\u7528$dfs$\uff0c\u9996\u5148\u662f\u56e0\u4e3a\u8fd9\u9053\u9898\u89c4\u5b9a\u4e86\u641c\u7d22\u5c42\u6570\uff0c\u6240\u4ee5\u6bd4\u8f83\u663e\u7136\u7684\u53ef\u4ee5\u770b\u51fa\u6765\u3002\n\n\u5176\u6b21\uff0c\u7531\u4e8e\u672c\u9898\u7684\u5b57\u7b26\u4e32\u53d8\u6362\u4f1a\u51fa\u73b0\u6b7b\u5faa\u73af\uff0c\u7528$dfs$\u7684\u8bdd\u5728\u6b7b\u5faa\u73af\u4e2d\u8981\u4e00\u76f4\u5224\u65ad\u5230\u5c42\u6570\u5927\u4e8e$10$\u624d\u53ef\u4ee5\u629b\u5f03\u8fd9\u79cd\u65b9\u6848\uff08\u6b7b\u5faa\u73af\u7684\u65b9\u6848\uff09\uff0c\u800c$bfs$\u9075\u5faa\u201c\u4f17\u65b9\u6848\u5e73\u7b49\u201d\u7684\u539f\u5219\uff0c\u5728\u8d70\u6b7b\u5faa\u73af\u7684\u540c\u65f6\uff0c\u4e0d\u59a8\u788d\u8ba1\u7b97\u6b63\u786e\u65b9\u6848\u3002\n\n\u5e76\u4e14\uff0c$dfs$\u641c\u5230\u4e00\u79cd\u53ef\u884c\u89e3\u65f6\u4e0d\u80fd\u4fdd\u8bc1\u6700\u4f18\uff08\u5373\u4f7f\u7528\u53ef\u884c\u6027\u526a\u679d\u3001\u6700\u4f18\u6027\u526a\u679d\u4e5f\u6ca1\u529e\u6cd5\u89e3\u51b3\u6b7b\u5faa\u73af\u95ee\u9898\uff09\uff0c\u800c$bfs$\u53ef\u4ee5\u8fc5\u901f\u627e\u5230\u6700\u4f18\u89e3\u5e76\u53ca\u65f6\u8fd4\u56de\uff0c\u8fd9\u4e5f\u662f\u672c\u9898\u7528$bfs$\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u56e0\u3002\n\n\u5f00\u59cb\u8bb2\u89e3\u672c\u9898\u9700\u8981\u7528\u7684\u77e5\u8bc6\u70b9\uff1a\n\n    1. \u67e5\u627e\u5b57\u7b26\u4e32\u5339\u914d\u7528\u5230\u4e86kmp\u7b97\u6cd5\u3002\n    2. bfs\u8981\u7528\u5230STL\u7684\u961f\u5217\uff0c\u4e5f\u53ef\u4ee5\u914d\u5408STL\u7684pair\u4f7f\u7528\u3002\n    3. \u961f\u5217\u4e2d\u53bb\u91cd\u7528\u5230STL\u4e2d\u7684map\uff0c\u4e5f\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u3002\uff08Pascal\u515a\u5df2\u54ed\uff09\uff08\u81f4\u656cPascal\u515a\uff09\n\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u72b6\u6001\uff0c\u8981\u7ecf\u8fc7\u591a\u6b21\u53d8\u6362\u5f97\u5230\u6700\u7ec8\u72b6\u6001\uff0c\u9996\u5148\u8981\u505a\u7684\u5c31\u662f\u627e\u5230\u521d\u59cb\u72b6\u6001\u4e0b\u6240\u6709\u7684\u53ef\u53d8\u6362\u5b57\u4e32\uff0c\u6b64\u5904\u53ef\u679a\u4e3e\u6bcf\u4e00\u79cd\u8f6c\u5316\u65b9\u6848\uff0c\u7528kmp\u6765\u67e5\u8be2~~\uff08AC\u81ea\u52a8\u673a\u66f4\u597d\u4f46\u6211\u4e0d\u4f1a\uff09~~\uff0c\u5177\u4f53\u53ef\u53c2\u8003[P3375\u3010\u6a21\u677fKMP\u3011](https://www.luogu.org/problemnew/show/P3375)\u3002\n\n\n```cpp\nint kmp(string A, string B, int *format) {\t\t\t//find B from A\n\tint pre[maxm] = {0}, cnt = 0;\n\tint la = A.size(), lb = B.size();\n\tpre[0] = pre[1] = 0;\n\tFOR(i,1,lb - 1) {\n\t\tint j = pre[i];\n\t\twhile(j && B[i] != B[j])\tj = pre[j];\n\t\tif(B[i] == B[j])\tpre[i + 1] = j + 1;\n\t}\n\tint j = 0;\n\tFOR(i,0,la - 1) {\n\t\twhile(j && A[i] != B[j])\tj = pre[j];\n\t\tif(A[i] == B[j])\tj ++;\n\t\tif(j == lb) {\n\t\t\tformat[++cnt] = i - j + 1;\n\t\t}\n\t}\n\treturn cnt;\n}\n\n```\n\n\u5176\u4e2d$A$\u4e3a\u6587\u672c\u4e32\uff0c$B$\u4e3a\u6a21\u677f\u4e32\u3002\n\n\u6b64\u5904\u6211\u5728\u51fd\u6570\u53c2\u6570\u91cc\u9762\u52a0\u5165\u4e86\u201c$format$\u201d\u6570\u7ec4\uff0c\u7528\u6765\u5b58\u6240\u6709\u53ef\u5339\u914d\u4f4d\u7f6e\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u4e3a\u53ef\u5339\u914d\u4f4d\u7f6e\u603b\u6570\u3002\n\n\u5f97\u5230\u4e86\u6240\u6709\u7684\u53ef\u5339\u914d\u4f4d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u66ff\u6362\u4e86\u3002\u5c06\u66ff\u6362\u540e\u7684$string$\u5b57\u7b26\u4e32\u52a0\u5165\u961f\u5217\u4e2d\uff0c\u5e76\u8bb0\u5f55\u8f6c\u79fb\u6b21\u6570\u3002\n\n\u5176\u5b9e\u6709\u4e2a\u4f18\u5316\uff1a\u5982\u679c\u5f53\u524d\u4e32\u5df2\u7ecf\u8f6c\u79fb\u4e86\u4e5d\u6b21\uff0c\u90a3\u4e48\u65e0\u9700\u5c06\u8f6c\u5316\u540e\u7684\u4e32\u653e\u5165\u961f\u5217\uff0c\u56e0\u4e3a\u8f6c\u79fb\u7b2c\u5341\u6b21\u540e\u4f9d\u7136\u4e0d\u80fd\u5f97\u5230\u76ee\u6807\u4e32\u5c31\u5e94\u8be5\u629b\u5f03\u8fd9\u79cd\u65b9\u6848\u3002\u540c\u6837\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e32\u7684\u8f6c\u79fb\uff0c\u53ef\u4ee5\u5728\u653e\u5165\u961f\u5217\u524d\u5148\u5224\u65ad\u8f6c\u79fb\u540e\u7684\u4e32\u662f\u4e0d\u662f\u76ee\u6807\u4e32\uff0c\u5982\u679c\u662f\u53ef\u4ee5\u76f4\u63a5$return$\u3002\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c0f\u5185\u5b58\u6d88\u8017~~\uff08\u6211\u5e76\u6ca1\u6709\u7528\u8fd9\u79cd\u4f18\u5316\uff09~~\n\n\u7531\u4e8e\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0\u5f88\u591a\u91cd\u590d\u4e32\uff0c\u4e0d\u4ec5\u6d88\u8017\u5927\u91cf\u65f6\u95f4\u8fd8\u6d88\u8017\u5927\u91cf\u7a7a\u95f4\uff0c\u53ef\u4ee5\u7528$map$\u8bb0\u5f55\u6240\u6709$bfs$\u8fc7\u7684\u5b50\u4e32\uff0c\u7b5b\u53bb\u91cd\u590d\u7684\u4e32\u3002\n\n\u5bf9\u4e8e\u5f97\u4e0d\u5230\u7b54\u6848\u7684\u72b6\u6001\uff1a\u961f\u5217\u4e3a\u7a7a\u3002\u5373\u6240\u6709\u60c5\u51b5\u5747\u8003\u8651\u8fc7\u90fd\u4e0d\u80fd\u5f97\u5230\u76ee\u6807\u4e32\u3002\uff08\u56e0\u4e3a\u5982\u679c\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u4e32\u5f53\u573a\u5c31\u4f1a$return$\uff0c\u800c\u4e14\u6709\u4e86\u4e0a\u9762\u7684\u4f18\u5316\uff0c\u961f\u5217\u4e2d\u4e0d\u5b58\u5728\u8f6c\u79fb\u6b21\u6570\u5927\u4e8e$10$\u6b21\u7684\u4e32\uff09\n\n\u9644\u4e0a\u4ee3\u7801\uff08\u4e3a\u4e86\u9632\u590d\u5236\u6240\u4ee5\u4ee3\u7801\u6709\u4e00\u5904\u9519\u8bef\uff0c\u4f46\u4e0d\u5f71\u54cd\u53c2\u8003\uff09\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cctype>\n#include <algorithm>\n#include <map>\n#include <queue>\n#define FOR(i,a,b)\tfor(int i=a;i<=b;i++)\n#define FOR2(i,a,b)\tfor(int i=a;i>=b;i--)\n#define LL long long int\n#define ULL unsigned long long int\nusing namespace std;\ntemplate <typename T>\ninline void readin(T &x) {\n\tbool f = false; x = 0;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) {\n\t\tif(ch == '-')\tf = 1;\n\t\tch = getchar();\n\t}\n\twhile(isdigit(ch)) {\n\t\tx = (x << 3) + (x << 1) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\tif(f)\tx = -x;\n}\n\nconst int maxn = 8;\nconst int maxm = 50;\nconst ULL prime = 13331;\nconst int inf = 0x7f7f7f7f;\n\nstring st, aim, a[maxn], b[maxn];\nmap <string, bool> check;\n\nint ans, n = 1;\n\nint kmp(string A, string B, int *format) {\t\t\t//find B from A\n\tint pre[maxm] = {0}, cnt = 0;\n\tint la = A.size(), lb = B.size();\n\tpre[0] = pre[1] = 0;\n\tFOR(i,1,lb - 1) {\n\t\tint j = pre[i];\n\t\twhile(j && B[i] != B[j])\tj = pre[j];\n\t\tif(B[i] == B[j])\tpre[i + 1] = j + 1;\n\t}\n\tint j = 0;\n\tFOR(i,0,la - 1) {\n\t\twhile(j && A[i] != B[j])\tj = pre[j];\n\t\tif(A[i] == B[j])\tj ++;\n\t\tif(j == lb) {\n\t\t\tformat[++cnt] = i - j + 1;\n\t\t}\n\t}\n\treturn cnt;\n}\n\nint bfs(string st) {\n\tqueue <pair<string, int> > sp;\n\tsp.push(make_pair(st, 0));\n\tcheck[st] = 1;\n\twhile(!sp.empty()) {\n\t\tpair <string, int> x = sp.front();\tsp.pop();\n\t\tstring s = x.first;\n\t\tif(x.second > 10)\treturn -1;\n\t\tif(s == aim)\treturn x.second;\n\t\tFOR(i,1,n) {\n\t\t\tint la = a[i].size(), lb = b[i].size(), ls = s.size();\n\t\t\tint format[maxm], cnt = kmp(s, a[i], format);\n\t\t\tif(!cnt)\tcontinue;\n\t\t\tFOR(w,1,cnt) {\n\t\t\t\tint point1 = 0;\n\t\t\t\tstring now;\n\t\t\t\tFOR(j,0,format[w]-1) {\n\t\t\t\t\tnow.push_back(s[point1]);\n\t\t\t\t\tpoint1 ++;\n\t\t\t\t}\n\t\t\t\tpoint1 += la;\n\t\t\t\tFOR(j,0,lb - 1) {\n\t\t\t\t\tnow.push_back(b[i][j]);\n\t\t\t\t}\n\t\t\t\tfor(; point1 < ls; point1 ++) {\n\t\t\t\t\tnow.push_back(s[point1]);\n\t\t\t\t}\n\t\t\t\tif(!check[now]) {\n\t\t\t\t\tcheck[now] = 1;\n\t\t\t\t\tsp.push(make_pair(now, x.second + 1));\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\n\t}\n}\n\nint main() {\n\tcin >> st >> aim;\n\twhile(cin >> a[n] >> b[n])\tn ++;\n\tn --;\n\tans = bfs(st);\n\tif(ans == -1)\tprintf(\"NO ANSWER!\");\n\telse printf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1541675723,
        "uid": 53431,
        "name": "DuanYuFi",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "## \u4e3b\u8981\u601d\u60f3\uff1aqueue+map+set\n\n\u8bf4\u4e00\u4e0b\u8bfb\u5165\uff1awhile(cin>>x>>y)\uff0c\u8fd9\u6837\u5c31\u884c\u4e86\uff0c\u6309ctrl+z\u7ed3\u675f\u8f93\u5165\n\n\u9996\u5148\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u79cd\u505a\u6cd5\uff1a\n\n```\n\u7528\u961f\u5217\u8fdb\u884c\u5bbd\u641c\uff08\u7528\u7ed3\u6784\u4f53/\u4e8c\u7ef4\u6570\u7ec4\uff09\nmap\u4f5c\u4e3a\u53d8\u6362\u89c4\u5219\u7684\u50a8\u5b58\u5668\nset\u7528\u6765\u67e5\u91cd\n\u6bcf\u6b21\u5728\u961f\u9996\u91cc\u627e\u662f\u5426\u6709\u80fd\u53d8\u6362\u7684\u90e8\u5206\uff0c\u7136\u540e\u5224\u91cd\uff0c\u5165\u961f\n```\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4ee5\u4e0b\u7684\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<map>\n#include<string>\n#include<set>\nusing namespace std;\nstruct node{\n\tstring s;//\u5f53\u524d\u7684\u5b57\u7b26\u4e32\n\tint step;//\u6240\u7528\u7684\u6b65\u6570\n};\nqueue<node> q;//\u961f\u5217\nstring a,b;//\u521d\u59cb\u7684\u4e24\u4e2a\u4e32\nmap<string,string> m;//\u5b58\u89c4\u5219\nmap<string,string>::iterator it;//\u8981\u7528\u8fed\u4ee3\u5668\u904d\u5386\nset<string> vis;//\u5224\u91cd\nvoid bfs(){\n\twhile(!q.empty()){//\u961f\u5217\u4e0d\u7a7a\n\t\tnode z=q.front();//\u53d6\u51fa\u961f\u9996\n\t\tq.pop();//\u961f\u9996\u51fa\u961f\n\t\tstring x=z.s;//\u53d6\u5143\u7d20\n\t\tint y=z.step;//\u53d6\u5143\u7d20\n\t\tif(y>10){//\u8d85\u8fc710\u6b65\u4e86\n\t\t\tcout<<\"NO ANSWER!\"<<endl;\n\t\t\treturn;\n\t\t}\n\t\tfor(it=m.begin();it!=m.end();it++){//\u8fed\u4ee3\u5668\u7684\u904d\u5386\u65b9\u5f0f\n\t\t\tstring strnew=x;//\u5982\u679c\u4e00\u76f4\u7528x\uff0c\u90a3\u4e48\u96be\u4ee5\u4fdd\u8bc1\u5176\u503c\u6ca1\u6709\u53d1\u751f\u6539\u53d8\n\t\t\tstring strx=it->first;//\u53d6<string,string>\u4e2d\u7684\u524d\u4e00\u4e2a\n\t\t\tstring stry=it->second;//\u53d6\u540e\u4e00\u4e2a\n\t\t\tint stepnew=y;//\u540cstrnew\u7684\u539f\u56e0\n\t\t\tif(((long long)strnew.find(strx))!=-1){//\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u6709\u8fd9\u4e2a\u53ef\u6539\u53d8\u7684\u90e8\u5206\n\t\t\t\tstrnew.replace(strnew.find(strx),strx.size(),stry);//\u4ece\u8fd9\u90e8\u5206\u7684\u8d77\u59cb\u4f4d\u51fa\u53d1\uff0c\u628a\u6574\u4e2a\u90e8\u5206\u6362\u6210\u8981\u53d8\u7684\u90e8\u5206\n\t\t\t\tif(vis.find(strnew)==vis.end()){//\u96c6\u5408\u4e2d\u539f\u6765\u6ca1\u6709\u8fd9\u4e2a\u5b57\u7b26\u4e32\n\t\t\t\t\tvis.insert(strnew);//\u653e\u8fdb\u53bb\n\t\t\t\t\tnode newpush;//\u51c6\u5907\u5165\u961f\n\t\t\t\t\tnewpush.s=strnew;//\u8d4b\u503c\n\t\t\t\t\tnewpush.step=stepnew+1;//\u591a\u4e00\u6b65\u4e86\n\t\t\t\t\tif(strnew==b){//\u5df2\u7ecf\u5f97\u5230\u7b54\u6848\u4e86\n\t\t\t\t\t\tcout<<stepnew+1<<endl;//\u76f4\u63a5\u8f93\u51fa\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse q.push(newpush);//\u5165\u961f\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<\"NO ANSWER!\"<<endl;//\u5faa\u73af\u8dd1\u5b8c\u4e86\uff0c\u8bf4\u660e\u627e\u4e0d\u5230\u7b54\u6848\n\treturn;\n}\nint main(){\n\tcin>>a>>b;\n\tstring x,y;\n\twhile(cin>>x>>y)\n\t\tm[x]=y;//\u4fdd\u5b58\u89c4\u5219\n\tnode z;\n\tz.step=0;z.s=a;//\u4e00\u5f00\u59cb\u662f0\u6b65\n\tq.push(z);//\u521d\u59cb\u5165\u961f\n\tvis.insert(a);//\u653e\u5230\u96c6\u5408\u91cc\n\tbfs();//\u8fdb\u884c\u5bbd\u641c\n\treturn 0;\n}\n```\n\n\u662f\u4e0d\u662f\u770b\u4e0a\u53bb\u633a\u597d\u7684\uff1f~~\u4f46\u53ea\u670960\u5206~~\n\n\u4e0b\u8f7d\u6570\u636e\uff0c\u4f60\u4f1a\u53d1\u73b0\uff1a\u539f\u6765\u4e00\u4e2a\u90e8\u5206\u53ef\u80fd\u53ef\u4ee5\u6709\u591a\u79cd\u60c5\u51b5\u53ef\u4ee5\u53d8\u5316\uff01\uff01\uff01\n\n\u4e3e\u4e2a~~\u6817\u5b50~~\u4f8b\u5b50\uff1a\n\ny abc\n\ny d\n\n\u90a3\u4e48\uff0c\u7531\u4e8e\u6211\u4eec\u91c7\u7528\u4e0b\u6807\u65b9\u5f0f\u8d4b\u503c\uff0cmap[y]\u5c31\u4f1a\u4e0e\u6700\u540e\u4e00\u4e2a\u8bfb\u5165\u7684\u503c\u76f8\u540c\uff0c\u5373map[y]=d;\n\n\u800c\u5982\u679c\u7528insert\u8d4b\u503c\uff0cmap[y]\u5c31\u4f1a\u4e0e\u7b2c\u4e00\u4e2a\u8bfb\u5165\u7684\u503c\u76f8\u540c\uff0c\u5373map[y]=abc\n\n\u7136\u540e\u5c31\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7~~\u6ca1\u6709\u529e\u6cd5\u4e86~~\n\n~~STL\u771f\u662f\u4e00\u9879\u4f1f\u5927\u7684\u53d1\u660e\uff01~~\n\n\u9664\u4e86map\uff0c\u8fd8\u6709\u2014\u2014multimap\n\n\u5b83\u652f\u6301\u6620\u5c04\u591a\u4e2a\u503c\uff0c\u8ddf\u4e0a\u9762\u5bf9\u6bd4\u8d77\u6765\u770b\n\ny abc\n\ny d\n\n\u90a3\u4e48y\u5c31\u65e2\u53ef\u4ee5\u7b49\u4e8eabc\uff0c\u53c8\u53ef\u4ee5\u7b49\u4e8ed\n\n~~\u6211\u4e00\u5f00\u59cb\u89c1\u5230multimap\u8fd8\u8ba4\u4e3a\u4e3a\u4ec0\u4e48\u6709\u4eba\u8fd9\u4e48\u50bb\u4e0d\u60f3\u8981\u81ea\u52a8\u53bb\u91cd~~\n\n\u4f46\u8fd9\u65f6\u5019\u5c31\u4e0d\u652f\u6301\u4e0b\u6807\u8d4b\u503c\u4e86\uff0c\u53ea\u80fd\u7528insert~~\u4e0d\u7136\u4e0d\u80fd\u663e\u51fa\u5176\u7279\u6b8a\u4e4b\u5904~~\n\n\u4f46\u5728\u904d\u5386\u65f6\uff0c\u8ba4\u4e3amap<y,abc>\u4e0emap<y,d>\u662f\u5206\u5f00\u7684\uff0c\u904d\u5386\u65b9\u5f0f\u662f\u4e00\u6837\u7684\n\n\u4e8e\u662f\u4fee\u6539\u90e8\u5206\u4ee3\u7801\uff1a\n```cpp\n\tmultimap<string,string> m;\n\tmultimap<string,string>::iterator it;\n        \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\tstring x,y;\n\twhile(cin>>x>>y)\n\tm.insert(make_pair(x,y));\n```\n\n\uff08\u6ce8\uff1a\u5934\u6587\u4ef6\u8fd8\u662fmap\uff09\n\n\n\u7136\u800c\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u8fd8\u662fWA\u4e86\n\n\u7ee7\u7eed\u4e0b\u8f7d\u6570\u636e\uff0c\u53d1\u73b0\uff1a\u4e00\u4e2a\u5b57\u7b26\u4e32\u91cc\u53ef\u80fd\u6709\u591a\u4e2a\u76f8\u540c\u7684\u90e8\u5206\u53ef\u4ee5\u53d8\u6362\uff01\u800c\u5982\u679c\u7528find\u51fd\u6570\uff0c\u53ea\u80fd\u627e\u51fa\u4e00\u4e2a\n\n\u4e8e\u662f\u2014\u2014\u4e24\u91cd\u5faa\u73af\u66b4\u529b\u8d70\u8d77\uff01\n\n~~\u66b4\u529b\u5927\u6cd5\u597d\uff01\u5e78\u597d\u51fa\u9898\u4eba\u5341\u5206\u6709\u826f\u5fc3\u6ca1\u6709\u51fa\u5927\u6570\u636e~~\n\n\u518d\u6b21\u6539\u52a8\u90e8\u5206\u4ee3\u7801\uff1a\n\n```cpp\n\tif(strx.size()>strnew.size())continue;//\u9632\u6b62\u8d1f\u6570\uff0c\u4e0d\u7136\u83ab\u540d\u5176\u5999\u9519\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff08\u5728exe\u91cc\u5c31\u4f1a\u9519\uff09\n\tfor(int i=0;i<=strnew.size()-strx.size();i++){\n\t\t\t\tstring strnew=x;//\u4e0a\u9762\u5176\u5b9e\u5df2\u7ecf\u8d4b\u8fc7\u4e00\u904d\u503c\u4e86\uff0c\u53d8\u91cf\u540d\u4e5f\u662f\u4e00\u6837\u7684\n\t\t\t\tstring strx=it->first;//\u6b64\u5904\u8fd8\u662f\u4e3a\u4e86\u907f\u514d\u503c\u88ab\u6539\u6389\n\t\t\t\tstring stry=it->second;\n\t\t\t\tint stepnew=y;\n\t\t\t\tbool flag=true;//\u6807\u8bb0\n\t\t\t\tfor(int j=0;j<strx.size();j++)\n\t\t\t\t\tif(strx[j]!=strnew[i+j]){//\u4e24\u8005\u6709\u4e0d\u4e00\u6837\u4e4b\u5904\uff0c\u8bf4\u660e\u4e0d\u80fd\u53d8\n\t\t\t\t\t\tflag=false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t if(flag==false)continue;//\u5224\u65ad\u6761\u4ef6\u6210\u7acb\u5c31\u5f97\u7528\u5927\u62ec\u53f7\u628a\u4e0b\u9762\u6574\u4e2a\u90e8\u5206\u5305\u8d77\u6765\uff0c\u5f53\u65f6\u61d2\u5f97\u5199\u4e86\n\t\t\t\t \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\t\n}\n```\n\u7136\u540e\u8fd9\u9053\u9898\u624d\u7b97\u5b8c~~\u771f\u662f\u6bd2\u7624\u554a\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u8bc4\u4e2a\u84dd\u9898~~\n\n\n\u6700\u540e\u7ed9\u5927\u5bb6\u5b8c\u6574AC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<map>\n#include<string>\n#include<set>\nusing namespace std;\nstruct node{\n\tstring s;\n\tint step;\n};\nqueue<node> q;\nstring a,b;\nmultimap<string,string> m;\nmultimap<string,string>::iterator it;\nset<string> vis;\nvoid bfs(){\n\twhile(!q.empty()){\n\t\tnode z=q.front();\n\t\tq.pop();\n\t\tstring x=z.s;\n\t\tint y=z.step;\n\t\tif(y>10){\n\t\t\tcout<<\"NO ANSWER!\"<<endl;\n\t\t\treturn;\n\t\t}\n\t\tfor(it=m.begin();it!=m.end();it++){\n\t\t\tstring strnew=x;\n\t\t\tstring strx=it->first;\n\t\t\tstring stry=it->second;\n\t\t\tint stepnew=y;\n\t\t\tif(strx.size()>strnew.size())continue;\n\t\t\tfor(int i=0;i<=strnew.size()-strx.size();i++){\n\t\t\t\tstring strnew=x;\n\t\t\t\tstring strx=it->first;\n\t\t\t\tstring stry=it->second;\n\t\t\t\tint stepnew=y;\n\t\t\t\tbool flag=true;\n\t\t\t\tfor(int j=0;j<strx.size();j++)\n\t\t\t\t\tif(strx[j]!=strnew[i+j]){\n\t\t\t\t\t\tflag=false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif(flag==false)continue;\n\t\t\t\tstrnew.replace(i,strx.size(),stry);\n\t\t\t\tif(vis.find(strnew)==vis.end()){\n\t\t\t\t\tvis.insert(strnew);\n\t\t\t\t\tnode newpush;\n\t\t\t\t\tnewpush.s=strnew;\n\t\t\t\t\tnewpush.step=stepnew+1;\n\t\t\t\t\tif(strnew==b){\n\t\t\t\t\t\tcout<<stepnew+1<<endl;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse q.push(newpush);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<\"NO ANSWER!\"<<endl;\n\treturn;\n}\nint main(){\n\tcin>>a>>b;\n\tstring x,y;\n\twhile(cin>>x>>y)\n\tm.insert(make_pair(x,y));\n\tnode z;\n\tz.step=0;z.s=a;\n\tq.push(z);\n\tvis.insert(a);\n\tbfs();\n\treturn 0;\n}\n```\n\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u4e0e\u7b2c\u4e00\u4efd\u5dee\u4e0d\u591a\uff0c\u6545\u4e0d\u518d\u91cd\u5199\u6ce8\u91ca\uff0c\u671b\u8c05\u89e3~~\u4e3b\u8981\u662f\u6253\u4e86\u8fd9\u4e48\u591a\u5b57\u53d7\u7d2f\u4e86~~\n\n\u7d2f\u6b7b\u6211\u4e86\uff0c\u5ba2\u5b98\u4e0d\u70b9\u4e2a\u8d5e\uff1f\n",
        "postTime": 1567249132,
        "uid": 164840,
        "name": "zhaowangji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "# \u8fd9\u4e2a\u9898\u5bf9\u6211\u6ee1\u6ee1\u7684\u6076\u610f\n## 1.\u6570\u7ec4\u5927\u5c0f\n\u9996\u5148\uff0c\u5982\u679c\u4f60\u7684\u961f\u5217\u6ca1\u6709\u7528STL\uff0c\u628a\u6570\u7ec4\u5f00\u5927\u4e00\u70b9\uff0c\u5426\u5219\u6700\u540e\u4e24\u4e2a\u70b9\u4f1aRE\uff0c\u6211\u5728\u8fd9\u91cc\u70b8\u4e86\u5f88\u4e45\u3002\n\n\uff08\u6211\u5f00\u768410\u4e07\uff09\n \n##  2.\u6807\u8bb0\n\n \u5176\u6b21\uff0c\u9700\u8981\u53e6\u5916\u5f00\u4e00\u4e2amap\u6765\u8bb0\u5f55\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u88ab\u627e\u5230\u8fc7\uff0c\u5426\u5219\u6700\u540e\u4e24\u4e2a\u70b9\u4f1a\u8d85\u65f6\u3002\n\n\uff08\u5927\u4f6c\u4eec\u90fd\u8bf4\u8fc7\u4e86\uff09\n## 3.\u65b9\u6cd5\n\n\u6700\u540e\u8fd9\u4e2a\u9898\u4e00\u770b\u5c31\u662f\u5e7f\u641c\uff0c\u7136\u800c\u662f\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u849f\u84bb\u5f88\u6709\u953b\u70bc\u610f\u4e49\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\uff0c\u524d\u6392\u6709\u5927\u4f6c\u90fd\u8bf4\u5f97\u5f88\u6e05\u695a\u3002\n\n\uff08\u4e0d\u6127\u662f\u4e00\u9053\u7eff\u9898\uff09\n\n###### \u63a5\u4e0b\u6765\u662f\u5173\u4e8e\u6211\u7684\u4ee3\u7801\u7684\n## 4.\u53d8\u91cf\u89e3\u91ca\n### (1)\u5168\u5c40\u53d8\u91cf\n#### string:\na\u662f\u539f\u672c\u7684\u5b57\u7b26\u4e32\uff0cb\u662f\u8981\u53d8\u6210\u7684\u5b57\u7b26\u4e32\uff0cqs\u662f\u5b57\u7b26\u4e32\u961f\u5217\uff0csa\u548csb\u662f\u53d8\u6362\u89c4\u5219\uff1asa[i]\u6362\u6210sb[i]\uff1b\n#### int\nqb\u662f\u5b58\u6539\u53d8\u6b21\u6570\u7684\u961f\u5217\uff0c\u56e0\u4e3a\u7c7b\u578b\u4e0d\u540c\u4e0d\u80fd\u76f4\u63a5\u5f00\u4e8c\u7ef4,head\u662f\u961f\u5217\u5934,tail\u662f\u961f\u5217\u5c3e,len\u662f\u53d8\u6362\u89c4\u5219\u7684\u6570\u91cf \uff1b\n#### map\n\u5efa\u7acb\u4e86\u4e00\u79cd\u6620\u5c04\u5173\u7cfb\u7528\u4e00\u4e2a\u6570\u7ec4bb\u6765\u8868\u793astring\u5b57\u7b26\u4e32\u5177\u4f53\u8bf7\u770b\u5404\u4f4d\u5de8\u4f6c\u7684\u535a\u5ba2\u4eec\uff0c\u76f8\u4fe1\u4f60\u80fd\u591f\u7406\u89e3=w=\n### (2)\u4e3b\u51fd\u6570\nnum:\u5b58\u6700\u5c11\u7684\u53d8\u5316\u6b21\u6570\n### (3)bfs\u51fd\u6570\ns:\u5b58\u5934\u6307\u9488\u6307\u7740\u7684\u5b57\u7b26\u4e32\n\nss:\u5b58\u53d8\u5316\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\n\n\n## 5.\u4ee3\u7801\n\n\u5177\u4f53\u7684\u601d\u60f3\u548c\u65b9\u6cd5\u8bf7\u770b\u6211\u7684\u4ee3\u7801\u4ee5\u53ca\u6ce8\u91ca\uff08\u5f88\u53cb\u597d\u7684\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>//\u4f7f\u7528map\u9700\u8981\u4f7f\u7528\u7684\u5934\u6587\u4ef6 \nusing namespace std;\nmap<string,int> bb;\nstring a,b,sa[100],sb[100],qs[100000];\nint qb[100000],head,tail,len;//\u4e0d\u518d\u4e00\u6b21\u89e3\u91ca\u4e86 \nint bfs()\n{\n\tstring s,ss;\n\twhile(head<=tail&&qs[head]!=b&&qb[head]<=10)//\u961f\u5217\u975e\u7a7a+\u961f\u5934\u8fd8\u4e0d\u662f\u7b54\u6848+\u961f\u5934\u7684\u64cd\u4f5c\u6570\u4e0d\u5c0f\u4e8e10 \n\t{\n\t\tif(bb[qs[head]])//\u5982\u679c\u5f53\u524d\u5b57\u7b26\u4e32\u5df2\u7ecf\u641c\u7d22\u8fc7\u4e86 \n\t\t{\n\t\t\thead++;\n\t\t\tcontinue;\n\t        }\n\tbb[qs[head]]=1;//\u6807\u8bb0\u5f53\u524d\u5b57\u7b26\u4e32 \n\tfor(int i=1;i<=len;i++)//\u6bcf\u4e00\u79cd\u53d8\u5316\u65b9\u6cd5\u90fd\u9700\u8981\u679a\u4e3e \n\t{\n\t\ts=qs[head]; \n\t\twhile(1==1)//\u8fd9\u91cc\u4e00\u76f4\u5faa\u73af\uff0c\u63a5\u7740\u770b \n\t\t{\n\t\t\tint f=s.find(sa[i]);//\u4f7f\u7528find\u51fd\u6570\u627e\u5230sa[i]\u5728s\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u73b0\uff0c\u5219\u4f1a\u8fd4\u56de-1 \n\t\t\tif(f==-1)break;//\u5982\u679c\u627e\u4e0d\u5230\u4e86\u5c31\u7ed3\u675f\u5faa\u73af \n\t\t\tss=qs[head];\n            ss.replace(f,sa[i].size(),sb[i]);//\u4f7f\u7528replace\u66ff\u6362\uff1a\u5c06ss\u5b57\u7b26\u4e32\u4ecef\u5f00\u59cb\u5f80\u540e\u5230sa[i]\u957f\u5ea6\u7684\u4e00\u90e8\u5206\u66ff\u6362\u6210sb[i] \n            qs[++tail]=ss;//\u653e\u8fdb\u961f\u5c3e \n            qb[tail]=qb[head]+1;\n            s[f]='%'; //\u5c06\u539f\u6765\u7684\u5b57\u7b26\u4e32f\u4f4d\u7f6e\u66ff\u6362\u6210\u4e00\u4e2a\u8f93\u5165\u4e0d\u4f1a\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u5c31\u4e0d\u4f1a\u518d\u627e\u5230\u8fd9\u4e2a\u5730\u65b9\u4e86 \n\t\t}\n\t}\n\thead++;//\u6bcf\u4e00\u6b21\u5934\u6307\u9488\u5411\u524d\u52a01 \n\t}\n\tif(head>tail||qb[head]>10)return -1;//\u5982\u679c\u6700\u540e\u961f\u5217\u4e3a\u7a7a\u5219\u662f\u6ca1\u6709\u627e\u5230\uff0c\u6216\u8005\u961f\u5934\u7684\u66ff\u6362\u6b21\u6570\u90fd\u8d85\u8fc7\u4e8610\uff0c\u5c31\u6ca1\u6709\u7b54\u6848 \n\telse return qb[head];//\u8981\u4e0d\u7136\u5c31\u8fd4\u56de\u961f\u5934\u7684\u66ff\u6362\u6b21\u6570 \n} \nint main()\n{\n\tcin>>a>>b;//\u8f93\u5165\u6700\u539f\u59cb\u7684\u5b57\u7b26\u4e32\u548c\u8981\u6539\u6210\u7684\u5b57\u7b26\u4e32 \n\tlen=1;//len\u662f\u8f93\u5165\u7684\u53d8\u6362\u89c4\u5219\uff0c\u4ece1\u5f00\u59cb\u5b58 \n    while(cin>>sa[len]>>sb[len])len++;//\u8fd9\u73a9\u610f\u53ea\u80fd\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u4e0d\u80fd\u8c03\u8bd5.. \n    len--;//while\u5728\u6700\u540e\u65f6\u591a\u52a0\u4e861 \n\tqs[1]=a;\n\tqb[1]=0;//\u521d\u59cb\u5316\u961f\u5217,\u5c06\u539f\u59cb\u5b57\u7b26\u4e32\u653e\u5728\u961f\u5934 \n\thead=1;\n\ttail=1;\n\tint sum=bfs();//\u5f00\u59cb\u5e7f\u641c \n\tif(sum==-1)cout<<\"NO ANSWER!\";//\u8f93\u51fa\u7b54\u6848 \n\telse cout<<sum;\n} \n```\n\n\n\n------------\n\u5410\u69fd\uff1a\n\n~~\u8bf4\u771f\u7684\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u4f1a\u653e\u5728\u666e\u53ca\u8bad\u7ec3\u573a\u91cc\u9762~~\n\n~~\u770b\u6211\u6253\u4e86\u8fd9\u4e48\u591a\u7684\u4efd\u4e0a\uff0c\u7ba1\u7406\u5458\u5927\u5927\u5ba1\u6838\u8fc7\u6389\u5427\u10da(\u2032\u25c9\u2765\u25c9\uff40\u10da)~~\n\n~~\u6c42\u70b9\u8d5e~~",
        "postTime": 1563766140,
        "uid": 224927,
        "name": "lei_yu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u4e2a\u9898\u7528\u4e00\u4e9b\u5e38\u7528\u7684stl\u548cstring\u51fd\u6570\u4f1a\u975e\u5e38\u7b80\u5355\u3002\u3002\uff08\u96be\u9053\u5c31\u662f\u8003\u8fd9\u4e24\u4e2a\u7684\u5417\uff1f\n\n```cpp\nvector<pair<string,string>>pos//\u7528\u4e8e\u53d8\u5316\nmap<string,int>bj//\u7528\u4e8e\u5224\u91cd\n```\n\n\u7136\u540e\u5b57\u4e32\u53d8\u5316\u64cd\u4f5c\u7528 string\u7684find+substr\u51fd\u6570\u5c31\u53ef\u4ee5\u89e3\u51b3\n\u8d34\u4e00\u4e0b\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n\n#define rep(a,b,c) for(int a=b;a<=c;a++)\n#define per(i,n,a) for (int i=n;i>=a;i--)\n#define PII pair<int,int>\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\nvector<pair<string,string>>pos;\nmap<string,int>bj;\nint ans=INF;\nstring a,b,c,d;\nstruct uzi\n{\n\tstring a;\n\tint cnt;\n}j;\nqueue<uzi>p;\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>a>>b;\n\twhile(cin>>c>>d){pos.push_back(pair<string,string>{c,d});}\n\tp.push(uzi{a,0});\n\twhile(!p.empty()){\n\t\tj=p.front();\n\t\tp.pop();\n\t\tif(j.a==b){\n\t\t\tans=min(ans,j.cnt);//\u627e\u5230\u5c31\u76f4\u63a5\u5224\u65ad\n\t\t\tif(ans>10){\n\t\t\t\tcout<<\"NO ANSWER!\";\n\t\t\t\treturn 0;\n\t\t\t}else {\n\t\t\t\tcout<<ans;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tfor(auto k: pos){\n\t\t\tstring pp=j.a,pa;\n\t\t\tint t=pp.find(k.first);//\u627e\u4f4d\u7f6e\n\t\t\twhile(t!=pp.npos){\n\t\t\t\tpa=pp.substr(0,t);//\u63a5\n\t\t\t\tpa=pa+k.second;//\u8fd8\u662f\u63a5\n\t\t\t\tint ka=0;\n\t\t\t\tpa+=pp.substr(t+k.first.size());\u63a5\u4e0a\u53bb\n\t\t\t\tif(j.cnt+1<bj[pa]||bj[pa]==0)\n\t\t\t\t\t{p.push(uzi{pa,j.cnt+1});bj[pa]=j.cnt+1;}\n\t\t\t\tt=pp.find(k.first,t+1);//\u904d\u5386\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u4f4d\u7f6e\n\t\t\t}\t\n\t\t}\n\t}\n\tcout<<\"NO ANSWER!\";\n\treturn 0;\n}\n```",
        "postTime": 1533894157,
        "uid": 77937,
        "name": "sram",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "## \u8fed\u4ee3\u52a0\u6df1+\u526a\u679d\n\n~~\u5982\u679c\u4e0d\u52a0\u526a\u679d\u7684\u8bdd\u53ea\u670980\u5206~~\n\n\u770b\u5230\u53d8\u5316\u6b21\u6570\u4e0d\u8d85\u8fc7\u5341\u60f3\u5230\u8fed\u4ee3\u52a0\u6df1\uff0c\u4f46\u5982\u679c\u4e0d\u52a0\u201c\u5728\u540c\u4e00\u6b65\u6570\u641c\u5230\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u5c31\u4e0d\u80fd\u518d\u641c\u201d\u7684\u526a\u679d\u662f\u4e0d\u80fd\u8fc7\u7684\u3002\n\n\u6240\u4ee5\u9009\u62e9\u7528map\u6807\u8bb0\u91cd\u590d\u7684\uff0c\u4f46\u8fed\u4ee3\u52a0\u6df1\u7684\u8bddmap\u9700\u8981\u6e050\uff0c\u4e0d\u80fd\u7528memset\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u6bcf\u6b21\u65b0\u5efa\u4e00\u4e2amap\u6765\u4ea4\u6362\n\n\u901f\u5ea6\u5f88\u5feb\uff0c\u6700\u6162\u7684\u70b9\u7528\u4e8640ms\n\n```c\n//\u526a\u679d\uff1a\u5982\u679c\u641c\u5230\u76f8\u540c\u7684\u5c31\u4e0d\u5728\u641c\u4e86 \n#include<bits/stdc++.h>\nusing namespace std;\n\n#define go(i,a,b) for(int i=a;i<=b;++i)\n#define com(i,a,b) for(int i=a;i>=b;--i)\n#define mem(a,b) memset(a,b,sizeof(a))\n#define mp make_pair\n\ntypedef pair<string,short>pai;\nconst int inf=0x3f3f3f3f,N=10010;\n\nint dep=0,n=1;\nstring A,B;\nstring a[N],b[N];\nmap<pai,bool>vis;\n\nbool dfs(int now){\n\tif(now>dep) return 0;\n\tif(A==B) return 1;\n\tif(vis.count(mp(A,now))) return 0;\n\tvis[mp(A,now)]=1;\n\tstring tmp=A;\n\tstring x;\n\tgo(i,1,n){\n\t\tunsigned int pos,np;\n\t\tif((pos=A.find(a[i]))==string::npos) continue;\n\t\tfor(;pos<A.size();pos=np){\n\t\t\tx=A.substr(0,pos);\n\t\t\tx+=b[i];\n\t\t\tx+=A.substr(pos+a[i].size());\n\t\t\tA=x;\n\t\t\tif(dfs(now+1)) return 1;\n\t\t\tA=tmp;\n\t\t\tnp=A.find(a[i],pos+a[i].size());\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(){\n\t//freopen(\"input.txt\",\"r\",stdin);\n\tcin>>A>>B;\n\twhile(cin>>a[n]>>b[n]) ++n;\n\t--n;\n\twhile(!dfs(0)&&dep<=10){\n\t\tmap<pai,bool>_new;\n\t\tswap(_new,vis);\n\t\t++dep;\n\t}\n\tif(dep<=10) cout<<dep;\n\telse puts(\"NO ANSWER!\");\n\treturn 0;\n}\n```\n",
        "postTime": 1568261643,
        "uid": 109434,
        "name": "\u98ce\u968f\u9010\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u5199\u7684\u9898\u89e3\u6ca1\u6709\u8fc7\uff0c\u5e0c\u671b\u8fd9\u6b21\u80fd\u8fc7\n\n\u505a\u8fd9\u4e2a\u9898\uff0c\u9996\u5148\u8981\u60f3\u597d\u600e\u4e48\u5b58\u50a8\u3002\n\uff081\uff09DFS\u80af\u5b9a\u8981\u7528\u5230\u961f\u5217\n\uff082\uff09\u5339\u914d\u5173\u7cfb\u7528map\u6765\u5b58\u50a8\u5417\uff1f\uff08\u7b54\u6848\u662f\u4e0d\u80fd\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u5339\u914d\u95ee\u9898\uff0c\u800cmap\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff0c\u5c31\u6bd4\u5982\u8bf4\"x\"->\"xy\",\"x\"->\"z\"\u8fd9\u4e24\u4e2a\u5b58\u50a8\u5173\u7cfb\uff0c\u7528map\u6765\u5b58\u7684\u8bdd\u53ea\u4f1a\u5b58\u50a8\u4e00\u4e2a\u952e\u4e3ax\u7684\uff09\uff0c\u6211\u91c7\u7528\u4e86\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\uff1a\n```c\nstruct MAP\n{\n    string x;\n    string y;\n}m[55];\n```\n(3)\u6807\u8bb0vis\u6570\u7ec4\u600e\u4e48\u6765\u5b58\u50a8\uff0c\u6211\u662f\u7528map\u6765\u5b58\u50a8\u7684\n\n```c\nmap<string,int> vis;\n```\n\n\u4e0b\u9762\u6765\u8bf4\u4e00\u4e0b\u8fd9\u4e2a\u9898\u7684\u5751\uff1a\n\uff081\uff09\u9898\u76ee\u6ca1\u8bf4\u90fd\u5b58\u7684\u662f\u5b57\u6bcd\uff0c\u6240\u4ee5\u5728\u66f4\u6539\u5b57\u7b26\u4e32\u65f6\u8981\u7528\u4e00\u4e2a\u4e0d\u5e38\u89c1\u7684\u7b26\u53f7\u3002\n\uff082\uff09\u521a\u521a\u4e5f\u8bb2\u5230\u4e86\uff0c\u591a\u91cd\u5339\u914d\u7684\u95ee\u9898\uff0c\u4e0d\u80fd\u7528map\u6765\u5b58\u50a8\u5339\u914d\u89c4\u5219\u3002\n\uff083\uff09\u4e00\u4e2a\u4e32\u4e2d\u53ef\u4ee5\u4f1a\u6ee1\u8db3\u540c\u4e00\u4e2a\u5339\u914d\u89c4\u5219\u591a\u6b21\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5230\u5faa\u73af\u3002\n```\nwhile(1)\n            {\n                int pos = tmp.find(itf);\n                if(pos==-1)\n                    break;\n                tmp[pos]='?';\n                //\u628a\u521a\u521a\u627e\u5230\u7684\u4f4d\u7f6e\u8d4b\u4e0a\u4e0d\u540c\u7684\uff0c\n                //\u4e0b\u4e00\u6b21\u5c31\u53ef\u4ee5\u5728\u7528\u5230find\u51fd\u6570\u4e86\uff0c\n                //\u8fd9\u6837\u4fdd\u8bc1find\u51fd\u6570\u627e\u5230\u7684\u4f4d\u7f6e\u8ddf\u4e4b\u524d\u7684\u4e0d\u540c\n                //\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e0d\u80fd\u5c06\u6539\u53d8\u8fc7\u7684\u653e\u5165\u961f\u5217\u91cc\u9762\n                if(pos!=-1)\n                {\n                    //\u7b80\u5355\u7684\u622a\u53d6\u5b57\u7b26\u4e32\uff0c\u62fc\u63a5\u5b57\u7b26\u4e32\uff0c\u6700\u597d\u5199\u5b8c\u8fd9\u4e00\u90e8\u5206\u6d4b\u8bd5\u4e00\u4e0b\n                    string t = \"\";\n                    t = now.s.substr(0, pos);\n                    t += its;\n                    t+=now.s.substr(pos + itf.size(), now.s.size() - pos - itf.size());\n                    start.s = t;\n                    start.time = now.time + 1;\n                    if (vis[t]==0)\n                    {\n                        q.push(start);\n                        vis[t]=1;\n                    }\n                }\n            }\n```\n\u5176\u5b9e\u73b0\u5728\u5c31\u6ca1\u5565\u5e94\u8be5\u9519\u7684\u4e86\uff0c\u4f46\u662f\u6211\u5728\u7b2c\u4e00\u7ec4\u6837\u4f8b\u4e0a\u9519\u4e86\u51e0\u6b21\uff0c\u5176\u5b9e\u7b2c\u4e00\u7ec4\u6837\u4f8b\u5c31\u662f\u4e0a\u9762\u8bf4\u7684\u5751\uff083\uff09\uff0c\u5982\u679c\u4f60\u9519\u4e86\u7b2c\u4e00\u7ec4\u6837\u4f8b\uff0c\u90a3\u5c31\u8bd5\u8bd5\u8fd9\u4e00\u7ec4\u6837\u4f8b\n```\nzxct dfrg\nzx cd\nzx df\nfct frg\n```\n\u7b54\u6848\u5e94\u8be5\u662f\u4e8c\u3002\n\u6211\u9519\u7684\u539f\u56e0\u5c31\u662f\u4e0a\u9762\u4ee3\u7801\u4e2dtmp\u548cnow.s\u5f04\u6df7\u4e86\uff0c\u662f\u8fd9\u7ec4\u6837\u4f8b\u8c03\u8bd5\u624d\u53d1\u73b0\u3002\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\uff08C++\uff09\n```c\n#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <queue>\n#include<map>\n#include<set>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\ntypedef long long ll;\nconst int MAXN=30000010;\nint n = 0;\nstruct node\n{\n    string s;\n    int time;\n} start, now;\nqueue<node> q;\nstring A, B;\nstruct MAP\n{\n    string x;\n    string y;\n}m[55];\nmap<string,int> vis;\nint bfs()\n{\n    start.s = A;\n    start.time = 0;\n    vis[A]=1;\n    q.push(start);\n    while(!q.empty())\n    {\n        now = q.front();\n        q.pop();\n        if(now.time>10)\n            return -1;\n        if(now.s==B)\n            return now.time;\n        for(int i=0;i<n;i++)\n        {\n            string itf = m[i].x;\n            string its = m[i].y;\n            string tmp=now.s;\n            while(1)\n            {\n                int pos = tmp.find(itf);\n                if(pos==-1)\n                    break;\n                tmp[pos]='?';\n                if(pos!=-1)\n                {\n                    string t = \"\";\n                    t = now.s.substr(0, pos);\n                    t += its;\n                    t+=now.s.substr(pos + itf.size(), now.s.size() - pos - itf.size());\n                    start.s = t;\n                    start.time = now.time + 1;\n                    if (vis[t]==0)\n                    {\n                        q.push(start);\n                        vis[t]=1;\n                    }\n                }\n\n            }\n        }\n    }\n    return -1;\n}\nint main()\n{\n    cin >> A >> B;\n    string a, b;\n    while (cin >> a >> b)\n    {\n        m[n].x=a;\n        m[n].y=b;\n        n++;\n\n    }\n    int ans=bfs();\n    if(ans==-1)\n        cout << \"NO ANSWER!\" << endl;\n    else\n        cout << ans << endl;\n    return 0;\n}\n\n```\n\n\u770b\u5230\u8fd9\u4e86\uff0c\u70b9\u4e2a\u8d5e\u5457\uff5e\uff5e\n",
        "postTime": 1572265539,
        "uid": 235607,
        "name": "jk17211805",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011(\u5173\u4e8e\u7b2c\u4e00\u7ec4\u6d4b\u8bd5\u6837\u4f8b)"
    },
    {
        "content": "\u6b64\u9898\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684BFS\u7ec3\u624b\u9898qwq\n\n\u53ea\u662f\u5751\u975e\u5e38\u591a\u2026\u2026\n\n~~\u8fd8\u597d\u6570\u636e\u91cf\u5c0f\uff0c\u5426\u5219\u4f1a\u70b8~~\n\n\u81f3\u4e8e\u89e3\u91ca\u653e\u4ee3\u7801\u91cc\u5427:\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct data{\n\tstring a;\n\tint ans;\n};\nqueue<data> q;//BFS\u961f\u5217\nstring x[15],y[15];\nmap<string,bool> h;//\u7528map\u5f53\u54c8\u5e0c\u8868\nint main()\n{\n\tint u=1;\n\tstring a,b;\n\tcin>>a>>b;\n\twhile(cin>>x[u]>>y[u])\n\t\tu++;\n\tu--;\n\tq.push(data{a,0});\n\twhile(!q.empty())//\u4ee5\u4e0b\u4e3a\u6807\u51c6\u7684BFS\u6a21\u677f\n\t{\n\t\tdata s=q.front();\n\t\tif(s.ans==11)//\u5982\u679c\u8d85\u8fc710\u76f4\u63a5\u8df3\u51fa\u8f93\u51faNO ANSWER!\n\t\t\tbreak;\n\t\tif(s.a==b)//\u627e\u5230\u7b54\u6848\u5373\u8f93\u51fa\n\t\t{\n\t\t\tprintf(\"%d\",s.ans);\n\t\t\treturn 0;\n\t\t}\n\t\tfor(int i=1,v=0;i<=u;i++,v=0)\n\t\t\twhile(s.a.find(x[i],v)!=-1)//\u88ab\u5751\u4e86\uff0c\u4e0d\u80fd\u53ea\u627e\u4e00\u6b21\uff0c\u53ef\u80fd\u6709\u591a\u4e2a\u76f8\u540c\u7684\u5b50\u4e32\u2026\u2026\u5e94\u5728\u627e\u5230\u4e00\u4e2a\u540e\u5f80\u540e\u9762\u7ee7\u7eed\u627e\n\t\t\t{\n\t\t\t\tstring w=s.a;\n\t\t\t\tint m=s.a.find(x[i],v);\n\t\t\t\tw.replace(m,x[i].size(),y[i]);\n\t\t\t\tif(h[w]==0)//\u54c8\u5e0c\u8868\uff0c\u4e0d\u5f00\u6700\u540e\u4e00\u4e2a\u70b9MLE\n\t\t\t\t\tq.push(data{w,s.ans+1}),h[w]=1;\n\t\t\t\tv=m+x[i].size();//\u8bb0\u5f55\u7ee7\u7eed\u67e5\u627e\u7684\u4f4d\u7f6e\n\t\t\t}\n\t\tq.pop();\n\t}\n\tprintf(\"NO ANSWER!\");\n}\n```\n\n~~\u8bf7\u4e0d\u8981\u5632\u8bbd\u6211\u7684\u6bd2\u7624\u7801\u98ce~~",
        "postTime": 1568900179,
        "uid": 123026,
        "name": "\u65f6\u5f8b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u7528\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22\u5c31\u6df7\u8fc7\u53bb\u4e86...(\u6570\u636e\u5927\u6982\u6709\u4e9b\u6c34)\n\n\u867d\u7136\u7b97\u6cd5\u6807\u7b7e\u4e3a\u5bbd\u641c\uff0c\u4f46\u6b65\u6570\u5c0f\u4e8e10\u7684\u9898\u8bbe\u8fd8\u662f\u8ba9\u6211\u5fcd\u4e0d\u4f4f\u8bd5\u4e00\u8bd5\n\n\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22\u5c31\u662f\u9650\u5b9a\u6df1\u641c\u6df1\u5ea6\uff0c\u4e0d\u65ad\u5c06\u8303\u56f4\u6269\u5927\u76f4\u5230\u627e\u5230\u89e3\n\n```\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <set>\n\nusing namespace std;\n\nstruct Pri\n{\n    char A[25];\n    char B[25];\n};\n\nint n = 1;\nint maxn;      //\u6700\u5927\u6df1\u5ea6\uff08\u540d\u5b57\u5f88\u5947\u602a\uff09\nPri P[10];\nchar \u0410[25], B[25];\n\nint mins = 11;\n\nbool dfs(int s, char* str)\n{\n    //puts(str);\n    if (s > maxn)            return false;//\u6df1\u5ea6\u9650\u5236\n    if (strcmp(str, B) == 0) return true; //\u627e\u5230\u89e3\u7acb\u5373\u8fd4\u56de\n    \n    for (int i = 1; i <= n; i++)\n    {\n        int l\u0391 = strlen(P[i].\u0410);\n        int l\u0392 = strlen(P[i].\u0412);\n        int lS = strlen(str);\n        int p, q;\n        for (p = 0; p < lS; p++)\n        {\n            for (q = 0; q < l\u0391; q++)\n                if (str[p + q] != P[i].A[q])\n                    break;\n            if (q == lA)\n            {\n            \tchar tmp[500];\n            \tint k = 0;\n            \tfor (int j = 0; j < p && k < 500; j++)       tmp[k++] = str[j];\n            \tfor (int j = p; j < p + lB && k < 500; j++)  tmp[k++] = P[i].B[j - p];\n            \tfor (int j = p + lA; j < lS && k < 500; j++) tmp[k++] = str[j];\n            \tif (k != 500)\n            \t{\n                \ttmp[k] = '\\0';\n                \tif (dfs(s + 1, tmp)) return true; //\u627e\u5230\u89e3\u7acb\u5373\u8fd4\u56de\n                }\n            }\n    \t}\n    }\n    return false;\n}\n\nint main()\n{\n    scanf(\"%s%s\", A, B);\n    for(; scanf(\"%s%s\", P[n].\u0391, P[n].\u0412) > 0; n++){}\n    n--;\n    \n    for (maxn = 1; maxn <= 10; maxn++)//\u4e0d\u65ad\u52a0\u5927\u6df1\u5ea6\n    {\n        if(dfs(0, A))  //\u627e\u5230\u540e\u8f93\u51fa\u7b54\u6848\n        {\n            printf(\"%d\\n\", maxn);\n            return 0;\n        }\n    }\n    \n    printf(\"NO ANSWER!\");\n    return 0;\n}\n```",
        "postTime": 1539878663,
        "uid": 73562,
        "name": "0x80mem",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff1f \u679c\u65ad\u8fed\u4ee3\u52a0\u6df1 \u641c\u7d22\u3002\n\n\n\u590d\u6742\u5ea6\uff1f O(\u80fd\u8fc7)\n\n\u6bd5\u7adf\u8fd9 \u6b65\u6570\u9650\u5236\u6446\u5728\u90a3\u91cc\uff0c\u968f\u4fbf\u7b97\u7b97\u80fd\u8fc7\u7684\uff08\u4e0d\u5f00O2 800ms+\uff09\u3002\n\n\u5176\u5b9e\u4e3b\u8981\u5c31\u662f\u8981\u8bb2\u8bb2\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22\u3002\n\n\u5176\u5b9e\u8fd9\u73a9\u610f\u513f\u5f88\u7b80\u5355\uff0c\u770b\u5230\u6b65\u6570\u9650\u5236 10~20 \u7684\u5dee\u4e0d\u591a\u5c31\u53ef\u4ee5\u8fed\u4ee3\u52a0\u6df1\uff08\u5f53\u7136\u662f\u6b65\u6570\u9650\u5236\u4e0d\u662f\u6570\u636e\u8303\u56f4\u9650\u5236\uff0c\u6570\u636e\u8fd9\u8303\u56f4\u7684\u8bdd\u5927\u6982\u5c31\u662f\u72b6\u538b\u4e86\uff09\u3002\n\n\u7136\u540e\u6109\u5feb\u6572\u8d77\u4ee3\u7801\uff0c\u8d85\u7ea7\u66b4\u529b\u3002\n\n```\n//by Judge\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nstring X,Y,A[9],B[9]; int n,ans;\ninline string trans(const string& str,int i,int j){\n\tstatic string ans; ans=\"\";\n\tif(i+A[j].length()>str.length()) return ans;\n\tfor(int k=0,mx=A[j].length();k<mx;++k)\n\t\tif(str[i+k]!=A[j][k]) return ans;\n\tans=str.substr(0,i),ans+=B[j];\n\treturn ans+str.substr(i+A[j].length());\n}\ninline string check(const string& str,int i,int j){\n\tstatic string ans; ans=\"\";\n\tif(i+A[j].length()>str.length()) return ans;\n\tfor(int k=0,mx=A[j].length();k<mx;++k)\n\t\tif(str[i+k]!=A[j][k]) return ans;\n\tans=str.substr(0,i),ans+=B[j];\n\treturn ans+str.substr(i+A[j].length());\n}\ninline bool dfs(string& now,int stp){ //\u7ba1\u4ed6\u91cd\u590d\u4e0d\u91cd\u590d\uff0c\u4e00\u8def\u641c\u3002\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u52a0\u526a\u679d\u4e4b\u7c7b\u7684\u4f18\u5316\uff09\n\tif(now==Y) return 1;\n\tif(stp>ans) return 0; string tmp;\n\tfor(int i=0,mx=now.length();i<n;++i)\n\t\tfor(int j=0;j<mx;++j){\n\t\t\ttmp=check(now,j,i);\n\t\t\tif(tmp!=\"\"&&dfs(tmp,stp+1)) return 1;\n\t\t} return 0;\n}\nint main(){\n\tios::sync_with_stdio(false),cin>>X>>Y;\n\twhile(cin>>A[n]>>B[n]) ++n;\n\tfor(ans=1;ans<=10;++ans)\n\t\tif(dfs(X,1)) return !printf(\"%d\\n\",ans);\n\treturn !puts(\"NO ANSWER!\");\n}\n```",
        "postTime": 1543317970,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "# KMP\u5b57\u7b26\u4e32\u6a21\u5f0f\u5339\u914d\n~~\u5176\u5b9e\u53ef\u4ee5\u7528AC\u81ea\u52a8\u673a~~\n\n\u8fd9\u9053\u9898\u662f\u95ee\u6211\u4eec\u6700\u5c0f\u6b65\u6570\uff0c\u56e0\u4e3a\u5176\u5206\u652f\u4e0d\u5927\uff08$\\leq7$\uff09\u5bb9\u6613\u60f3\u5230\u4e13\u95e8\u5904\u7406\u6700\u4f18\u5316\u95ee\u9898\u7684$bfs$\u7b97\u6cd5\n\n\u5728$bfs$\u7684\u5339\u914d\u4e2d\uff0c\u672c\u4eba\u91c7\u7528\u7684\u662f\u7528\u5b57\u7b26\u6570\u7ec4\u6a21\u62df\u5b57\u7b26\u4e32\u4e2d\u7684\u8fd0\u7b97\uff0c\u5efa\u7acb\u65b0\u7684\u201c$String$\u201d\uff0c\u7136\u540e\u5728\u5339\u914d\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528$KMP$\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u5224\u91cd\uff0c\u4f7f\u7528$hash+map$\n\n# \u4ee3\u7801\n```cpp\n#include<map>\n#include<queue>\n#include<cstdio>\n#include<cstring>\nusing namespace std;char a[7][21],b[7][21];//\u8f6c\u6362\u89c4\u5219\u4e32\nconst int base=233;//hash\u503c\nint n,ans,kmp[21];\nunsigned long long zd;//\u76ee\u6807\u4e32\u7684hash\u503c\nmap<unsigned long long,bool>m;//map\u5e93\nstruct String//\u5b9a\u4e49\u4e00\u79cd\u7ed3\u6784\u4f53\n{\n    char c[101];//\u5b57\u7b26\u4e32\n    int next[101],bs;//kmp_next\u6570\u7ec4,bs\u8868\u793a\u5f53\u524d\u6b65\u6570\n    inline int size(){return strlen(c);}//\u957f\u5ea6\n    inline void read(){scanf(\"%s\",c);return;}//\u8f93\u5165\n    inline void build()//\u5efa\u7acbnext\u6570\u7ec4\n    {\n        next[0]=-1;\n        int j=-1;\n        for(register int i=1;i<strlen(c);i++)\n        {\n            while(j>-1&&c[j+1]!=c[i]) j=next[j];\n            if(c[j+1]==c[i]) j++;\n            next[i]=j;\n        }\n        return;\n    }\n    inline int find(char s[])//\u67e5\u627es\u5728c\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u5e76\u8fd4\u56de\u5b50\u4e32\u4e2a\u6570\uff0c\u590d\u6742\u5ea6n+m\n    {\n        int j=-1,len=0;\n        for(register int i=0;i<strlen(c);i++)\n        {\n            while(j>-1&&s[j+1]!=c[i]) j=next[j];\n            if(s[j+1]==c[i]) j++;\n            if(j==strlen(s)-1) kmp[++len]=i-j,j=0;\n        }\n        return len;\n    }\n    inline unsigned long long hash()//\u81ea\u7136\u6ea2\u51fa\u6c42hash\u503c\n    {\n        unsigned long long ans=0;\n        for(register int i=0;i<strlen(c);i++)ans=ans*base+c[i];\n        return ans;\n    }\n}Begin,End;//\u5b9a\u4e49\u8d77\u59cb\u4e32\u548c\u76ee\u6807\u4e32\ninline int bfs()\n{\n    queue<String>q;//\u5efa\u7acb\u5143\u7d20\u4e3a\u7ed3\u6784\u4f53\u7684\u961f\u5217\uff0c\u65b9\u4fbf\u8f6c\u79fb\n    q.push(Begin);//\u653e\u5165\n    while(q.size())\n    {\n        String x=q.front();x.build();q.pop();//\u53d6\u51fa\u5e76\u6c42\u51fanext\u6570\u7ec4\n        if(x.bs==10) continue;//\u8d85\u51fa\u6b65\u6570\u4e0d\u7ba1\u5b83\n        for(register int i=0;i<n;i++)\n        {\n        \t\n            int len=x.find(a[i]),lena=strlen(a[i]),lenb=strlen(b[i]);\n            if(!len) continue;//\u6ca1\u6709\u5339\u914d\u4e32\u9000\u51fa\n            for(register int cs=1;cs<=len;cs++)\n            {\n            \tString y=x;\n            \ty.bs=x.bs+1;//bs\u591a\u4e86\u4e00\u6b65\n            \tint t=kmp[cs];//\u53d6\u51fa\u4f4d\u7f6e\n            \tif(lena==lenb)for(register int j=t;j<t+lena;j++) y.c[j]=b[i][j-t];//\u957f\u5ea6\u76f8\u540c\u76f4\u63a5\u8d4b\u503c\n            \tif(lena<lenb)//\u957f\u5ea6\u5c06\u53d8\u957f\n            \t{\n                    for(register int k=1;k<=lenb-lena;k++)\n\t                for(register int j=y.size()+(lenb-lena)-1;j>=t+lena;j--) \n\t                y.c[j]=y.c[j-(lenb-lena)];//\u5c06\u540e\u9762\u7684\u5f80\u524d\u632a\u957f\u5ea6\u5dee\u6b21\n\t                for(register int j=t;j<t+lenb;j++) y.c[j]=b[i][j-t];//\u8f6c\u6362\n\t            }\n\t            if(lena>lenb)//\u957f\u5ea6\u5c06\u53d8\u77ed\n\t            {\n\t                for(register int j=t;j<t+lenb;j++) y.c[j]=b[i][j-t];//\u8f6c\u6362\n\t                for(register int k=1;k<=lena-lenb;k++)\n\t                for(register int j=t+lenb;j<y.size();j++) y.c[j]=y.c[j+1];//\u5c06\u524d\u9762\u7684\u5f80\u540e\u632a\u957f\u5ea6\u5dee\u4f4d\n\t            }\n\t            unsigned long long hh=y.hash();//\u8ba1\u7b97hash\u503c\n\t            if(hh==zd) return y.bs;//\u5230\u8fbe\u7ec8\u70b9\uff0c\u8fd4\u56de\u6b65\u6570\n\t            if(m.find(hh)==m.end()) q.push(y),m[hh]=true;//\u82e5\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u5c06\u5176\u5165\u961f\n\t        }\n\t    }\n    }\n    return -1;\n}\nsigned main()\n{\n    Begin.read();End.read();zd=End.hash();//\u8f93\u5165\n    while(scanf(\"%s %s\",a[n],b[n])!=EOF)n++;//\u8f93\u5165\n    ans=bfs();//bfs\n    if(ans<0) printf(\"NO ANSWER!\");\n    else printf(\"%d\",ans);//\u8f93\u51fa\n}\n```",
        "postTime": 1537952231,
        "uid": 52915,
        "name": "Ajwallet",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u6b64\u9898\u7684\u5927\u6982\u505a\u6cd5\u5c31\u662fBFS\uff0c\u4f46\u662f\u5355\u5411\u7684BFS\u5b58\u5728\u5f88\u591a\u7684\u4e0d\u8db3\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff1a\n\naaaaaaaaaa  aaaaaaaaac\n\na b\nb d\nd f\nf e\ne g\ng c\n\u867d\u7136\u7b54\u6848\u53ea\u67096\uff0c\u4f46\u662f\u4f1a\u51fa\u73b0\u5927\u91cf\u4e0d\u5fc5\u8981\u7684\u60c5\u51b5\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e8e\u662f\u65f6\u95f4\u548c\u7a7a\u95f4\u5c31\u90fd\u7206\u6389\u4e86\u2026\u2026\n\n\n\u6240\u4ee5\u9700\u8981\u91c7\u7528\u53cc\u5411\u7684BFS\uff1a\n\n\u4ece\u521d\u59cb\u5b57\u7b26\u4e32\u548c\u76ee\u6807\u5b57\u7b26\u4e32\u540c\u65f6\u8fdb\u884cBFS\n\n\u53ea\u8981\u5728\u4e24\u4e2aBFS\u7684\u961f\u5217\u4e2d\u51fa\u73b0\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a\u627e\u5230\u4e00\u6761\u6210\u529f\u7684\u65b9\u6848\u6765\u8fbe\u6210\u76ee\u6807\u4e86\uff0c\u8f93\u51fa\u7684\u7b54\u6848\u4e3a\u4ece\u521d\u59cb\u5b57\u7b26\u4e32\u5230\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u4ea4\u6362\u6b21\u6570+\u76ee\u6807\u5b57\u7b26\u4e32\u5230\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u4ea4\u6362\u6b21\u6570\n",
        "postTime": 1385288431,
        "uid": 1655,
        "name": "Steam",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u63d0\u4f9b\u4e00\u4e2a\u8f83\u4e3a\u7b80\u5355\u7684\u505a\u6cd5\n\n\u641c\u7d22\u8fc7\u7a0b\u67e5\u627e\u5339\u914d\u5b50\u4e32\u4ee5\u53ca\u66ff\u6362\u90fd\u7531\u5e93\u51fd\u6570\u5b8c\u6210\n\n```\nstring a,b\uff1b\nint c=a.find(b,2);\n//\u5728a\u4e2d\u4ece\u4f4d\u7f6e2\u5f00\u59cb\u5411\u540e\u67e5\u627e\uff0c\u8fd4\u56de\u5b50\u4e32b\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u8fd4\u56de-1\n\nint p;\na.replace(p,len,b);\n//\u5728p\u4f4d\u7f6e\u5f00\u59cb\u5411\u540elen\u957f\u5ea6\u7684\u5b50\u4e32\u66ff\u6362\u4e3ab\n```\n\u8fd9\u6837\u5269\u4e0b\u7684\u5c31\u53ea\u6709\u7b80\u5355\u7684\u641c\u7d22\u4e86\uff0c\u6bcf\u6b21\u66b4\u529b\u5904\u7406\u6bcf\u4e00\u4e2a\u53d8\u6362\u89c4\u5219\uff0c\u6ce8\u610f\u53ef\u80fd\u4f1a\u627e\u5230\u591a\u4e2a\u80fd\u5339\u914d\u7684\u5b50\u4e32\uff0c\u4ecd\u7136\u66b4\u529b\u5c1d\u8bd5\u66ff\u6362\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u6211\u7528\u7684\u8fed\u4ee3\u52a0\u6df1dfs\uff0c\u76f8\u6bd4bfs\u53ef\u80fd\u6162\u4e00\u70b9\uff0c\u4f46\u662f\u65f6\u95f4\u4e0a\u4e5f\u5141\u8bb8\u7684\u3002\n\n```cpp\n#include<iostream>\n#include<string>\n#include<cstring>\nusing namespace std;\nstring start,end;\nint n=0;\nstring u[100],v[100];\nint flag=0,ans=0;\nvoid dfs(string now,int step,int h)\n{\n    if(flag==1)\n    {\n        return;\n    }\n\tif(now==end)\n\t{\n\t\tans=h;\n\t\tflag=1;\n\t\treturn;\n\t}\n\tif(step>h)\n\t{\n\t\treturn;\n\t}\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tint c=now.find(u[i],0);\n        while(c>=0&&c<now.size())\n        {\n            string last=now;\n            now.replace(c,u[i].size(),v[i]);\n\t\t\tdfs(now,step+1,h);\n\t\t\tnow=last;\n            c=now.find(u[i],c+1);\n        }\n\t}\n}\nint main()\n{\n\tcin>>start>>end;\n\tstring x,y;\n\twhile(cin>>x>>y)\n\t{\n\t\tn++;\n\t\tu[n]=x;\n\t\tv[n]=y;\n\t}\n\tfor(int i=1; i<=10; i++)\n\t{\n\t\tdfs(start,1,i);\n        if(flag==1)\n        {\n            break;\n        }\n\t}\n\tif(flag==1)\n\t{\n\t\tcout<<ans<<endl;\n\t}\n\telse\n\t{\n\t\tcout<<\"NO ANSWER!\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571806069,
        "uid": 115652,
        "name": "littlegagaduck",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\n\u770b\u4e86\u5f88\u591a\u4f7f\u7528\u961f\u5217\u7684\u65b9\u6848. \n\n\u8fd9\u91cc\u63d0\u4f9b\u7684\u662f\u4e00\u4e2a\u53cc\u5217\u8868\u7684. \n\n\u5faa\u73af\u7ed3\u6784\u6e05\u6670, \u9002\u5408\u65b0\u624b\u5b66\u4e60. \n\nC++ 11\n\n\n```cpp\n\n\n#include <unordered_set>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n\nstring src, dst;\t//\u539f\u5b57\u7b26\u4e32 , \u76ee\u6807\u5b57\u7b26\u4e32\n\nint N;\t// N \u6761\u89c4\u5219\nvector<string> srcarr;\t//\u6bcf\u6761\u89c4\u5219 - \u5de6\u8fb9\nvector<string> dstarr;\t//\u6bcf\u6761\u89c4\u5219 - \u53f3\u8fb9\n\n\nconst int MAXTIMES = 10;\n\nint mintimes = 999;\n\nunordered_set<string> searchedmap;//\u5df2\u51fa\u73b0\u8fc7\u7684\u60c5\u51b5\n\nvector<string> lista;\t//\u4e0a\u4e00\u5c42\u7559\u4e0b\u6765\u7684\u5217\u8868\n\nvector<string> listb;\t//\u51c6\u5907\u5904\u7406\u7684\u4e0b\u4e00\u5c42\u5217\u8868\n\nvoid bfs()\n{\n\tlista.push_back(src);\n\n\tstring newstr;\n\tnewstr.reserve(64);\n\n\t//\u8fbe\u5230\u6700\u5927\u5c42\u5c31\u505c\u6b62\u641c\u7d22\u4e86\n\tfor (int deepcount = 1; deepcount <= MAXTIMES; deepcount++)\n\t{\n\t\t//\u4e0a\u4e00\u5c42\u7684\u6240\u6709\u5b57\u7b26\u4e32 , 0\u5c42\u4e3a{src} , \u6ce8\u610f\u662f\u4f7f\u7528string& , \u5982\u679c\u4f7f\u7528 string str \u90a3\u4e48\u5c31\u662f\u590d\u5236, \u6d88\u8017\u5f88\u5927\n\t\tfor (string& str : lista)\n\t\t{\n\t\t\t//\u5df2\u77e5\u6709N\u4e2a\u66ff\u6362\u65b9\u6848, \u90a3\u4e48\u6bcf\u4e2a\u65b9\u6848\u90fd\u8bd5\u4e0b\n\t\t\tfor (int i = 0; i < N; i++)\n\t\t\t{\n\t\t\t\tsize_t pos = 0;\n\t\t\t\twhile (true)\t//\u5faa\u73af\u591a\u4e2a\u53ef\u66ff\u6362\u90e8\u4f4d\n\t\t\t\t{\n\t\t\t\t\tpos = str.find(srcarr[i], pos);\n\t\t\t\t\tif (pos == (size_t)-1)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tsize_t endpos = pos + srcarr[i].size();\n\n\n\t\t\t\t\t//\u66ff\u6362\u5b57\u7b26\u4e32\n\t\t\t\t\tnewstr = str;\n\t\t\t\t\tnewstr.replace(pos, srcarr[i].size(), dstarr[i]);\n\n\t\t\t\t\tif (newstr.compare(dst) == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t//\u7b49\u4e8e\u76ee\u6807\u5b57\u7b26\u4e32\u4e86,  \u90a3\u4e48\u5c31\u53ef\u4ee5\u8fd4\u56de\u4e86.\n\t\t\t\t\t\tmintimes = deepcount;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t//\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u4ece\u6765\u90fd\u6ca1\u51fa\u73b0\u8fc7\u7684, \u90a3\u4e48\u624d\u6dfb\u52a0\u5230\u961f\u5217\u8fdb\u884c\u4e0b\u4e00\u5c42\u7684\u5904\u7406\n\t\t\t\t\tif (searchedmap.find(newstr) == searchedmap.end())\n\t\t\t\t\t{\n\t\t\t\t\t\tsearchedmap.insert(newstr);\n\t\t\t\t\t\t//\u6dfb\u52a0\u5230\u4e0b\u4e00\u5c42\u961f\u5217\n\t\t\t\t\t\tlistb.push_back(std::move(newstr));\n\t\t\t\t\t}\n\n\t\t\t\t\t//\u4e0b\u4e00\u6b21\u5faa\u73af\u4e2d\u4eceendpos\u4f4d\u7f6e\u5f00\u59cb\u518d\u770b\u770b\u8fd8\u80fd\u4e0d\u80fd\u627e\u5230\u53ef\u66ff\u6362\u7684\u5b57\u7b26\u4e32\n\t\t\t\t\tpos = endpos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\u79fb\u52a8\u5230a, (\u4e5f\u6e05\u7a7a\u4e86b)\n\t\tlista = std::move(listb);\n\t}\n}\n\nvoid program()\n{\n\tcin >> src >> dst;\n\n\twhile (!cin.eof())\n\t{\n\t\tstring str;\n\t\tcin >> str;\n\t\tif (!str.size())\n\t\t\tbreak;\n\t\tsrcarr.push_back(std::move(str));\n\t\tcin >> str;\n\t\tdstarr.push_back(std::move(str));\n\t}\n\n\tN = srcarr.size();\n\n\tbfs();\n\n\tif (mintimes <= MAXTIMES)\n\t\tcout << mintimes << endl;\n\telse\n\t\tcout << \"NO ANSWER!\" << endl;\n\n}\n\nint main()\n{\n\tprogram();\n\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1567313447,
        "uid": 234252,
        "name": "ZHDX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1ahttps://www.luogu.org/problem/P1032\n\n## \u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\u5df2\u77e5\u6709\u4e24\u4e2a\u5b57\u4e32A,B\u53ca\u4e00\u7ec4\u5b57\u4e32\u53d8\u6362\u7684\u89c4\u5219\uff08\u81f3\u591a66\u4e2a\u89c4\u5219\uff09:\n\nA_1 -> B_1\t \n\nA_2 -> B_2 \n\n\u89c4\u5219\u7684\u542b\u4e49\u4e3a\uff1a\u5728 A\u4e2d\u7684\u5b50\u4e32 A_1\u53ef\u4ee5\u53d8\u6362\u4e3a B_1\uff0cA_2\u53ef\u4ee5\u53d8\u6362\u4e3a B_2\u2026\u3002\n\n\u4f8b\u5982\uff1aA=abcd\uff0cB\uff1dxyz\uff0c\n\n\u53d8\u6362\u89c4\u5219\u4e3a\uff1a\n\nabc\u2192xu\uff0cud\u2192y\uff0cy\u2192yz\n\n\u5219\u6b64\u65f6\uff0cA\u53ef\u4ee5\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u53d8\u6362\u53d8\u4e3aB\uff0c\u5176\u53d8\u6362\u7684\u8fc7\u7a0b\u4e3a\uff1a\n\nabcd\u2192xud\u2192xy\u2192xyz\u3002\n\n\u5171\u8fdb\u884c\u4e863\u6b21\u53d8\u6362\uff0c\u4f7f\u5f97A\u53d8\u6362\u4e3aB\u3002\n\n## \u3010\u8f93\u5165\u683c\u5f0f\u3011\n\u8f93\u5165\u683c\u5f0f\u5982\u4e0b\uff1a\n\nA B\n\nA_1 B_1 \n\nA_2 B_2 |-> \u53d8\u6362\u89c4\u5219\n\n\n... ... /\n\n\u6240\u6709\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u4e0a\u9650\u4e3a20\u3002\n\n## \u3010\u8f93\u51fa\u683c\u5f0f\u3011\n\u8f93\u51fa\u81f3\u5c4f\u5e55\u3002\u683c\u5f0f\u5982\u4e0b\uff1a\n\n\u82e5\u572810\u6b65\uff08\u5305\u542b10\u6b65\uff09\u4ee5\u5185\u80fd\u5c06AA\u53d8\u6362\u4e3aBB\uff0c\u5219\u8f93\u51fa\u6700\u5c11\u7684\u53d8\u6362\u6b65\u6570\uff1b\u5426\u5219\u8f93\u51fa\"NO ANSWER!\"\n\n## \u3010\u89e3\u9898\u601d\u8def\u3011\n\uff08\u5f85\u66f4\u65b0\uff09\n\n## \u3010AC\u4ee3\u7801\u3011\n```cpp\n#include <map>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint k = 0;\nstring s1[100], s2[100];\nmap<string, int> vis;\nqueue< pair<string, int> > que;\nstring change(string s, int x, int y)\n{\n\tstring ss = \"\";\n\tif (x + s1[y].length() > s.length())\n\t{\n\t\treturn ss;\n\t}\n\tfor (int i = 0; i < s1[y].length(); i++)\n\t{\n\t\tif (s[x + i] != s1[y][i])\n\t\t\treturn ss;\n\t}\n\tss = s.substr(0, x);\n\tss += s2[y];\n\tss += s.substr(x + s1[y].length());\n\treturn ss;\n}\nvoid bfs()\n{\n\tque.push(pair<string, int>(s1[0], 0));\n\twhile (!que.empty())\n\t{\n\t\tif (que.front().second > 10)\n\t\t{\n\t\t\tprintf(\"NO ANSWER!\\n\");\n\t\t\texit(0);\n\t\t}\n\t\tif (vis.count(que.front().first))\n\t\t{\n\t\t\tque.pop();\n\t\t\tcontinue;\n\t\t}\n\t\tif (que.front().first == s2[0])\n\t\t{\n\t\t\tprintf(\"%d\\n\", que.front().second);\n\t\t\texit(0);\n\t\t}\n\t\tvis[que.front().first] = 1;\n\t\tfor (int i = 0; i < que.front().first.length(); i++)\n\t\t{\n\t\t\tfor (int j = 1; j < k; j++)\n\t\t\t{\n\t\t\t\tstring temp = change(que.front().first, i, j);\n\t\t\t\tif (temp != \"\")\n\t\t\t\t{\n\t\t\t\t\tque.push(pair<string, int>(temp, que.front().second + 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tque.pop();\n\t}\n\tprintf(\"NO ANSWER!\\n\");\n}\nint main()\n{\n\twhile (cin >> s1[k] >> s2[k])\n\t{\n\t\tk++;\n\t}\n\tbfs();\n\treturn 0;\n}\n```\n",
        "postTime": 1567158136,
        "uid": 226316,
        "name": "YZL11111",
        "ccfLevel": 0,
        "title": "P1032 \u5b57\u4e32\u53d8\u6362 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u7b2c\u4e94\u7bc7\u9898\u89e3\uff01\u522b\u5f00\u751f\u9762\u7684\u4e00\u9053bfs\uff0c\u5b66\u5230\u4e86\u4e0d\u5c11\u4e1c\u897f\uff0c\u4e0b\u9762\u6765\u4ed4\u7ec6\u8bb2\u4e00\u4e0b(*^\u25bd^*)\uff01\n\n\u9898\u76ee\u7ed9\u5b9a\u6e90\u5b57\u7b26\u4e32\u548c\u76ee\u6807\u5b57\u7b26\u4e32\uff0c\u548c\u4e00\u4e9b\u5b57\u7b26\u4e32\u53d8\u6362\u89c4\u5219\uff08\u6700\u591a6\u4e2a\uff09\uff0c\u8981\u6c42\u8ba1\u7b97\u51fa\u53d8\u6362\u7684\u6700\u5c11\u6b21\u6570\uff0c\u4f7f\u5f97\u6e90\u5b57\u7b26\u4e32\u53d8\u6210\u76ee\u6807\u5b57\u7b26\u4e32\u3002\n\n\u7531\u4e8e\u8fd9\u9053\u9898\u6d89\u53ca\u5230\u6700\u4f18\u89e3\uff0c~~\uff08\u52a0\u4e4b\u8fd9\u9053\u9898\u53c8\u5728\u5e7f\u641c\u677f\u5757\uff09~~\uff0c\u5c31\u60f3\u7528\u5e7f\u641c\u505a\u4e00\u4e0b\uff0c\u65e2\u7136\u662f\u5e7f\u641c\uff0c\u6211\u5c31\u7528**\u961f\u5217Q**\u5b58\u50a8\u6bcf\u4e00\u79cd\u72b6\u6001\uff0c\u5e76\u6807\u8bb0\u7ecf\u8fc7\u7684\u72b6\u6001\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002\u6211\u7528**\u7ed3\u6784\u4f53couple**\u5b58\u50a8\u6bcf\u4e00\u79cd\u72b6\u6001\uff0c\u8fd9\u4e2a\u72b6\u6001\u5305\u62ec\u4e24\u4e2a\u5143\u7d20\uff0c\u4e00\u4e2a\u662f\u5f53\u524d\u7684\u5b57\u7b26\u4e32\uff08string\u7c7b\u578b\uff09\uff0c\u4e00\u4e2a\u662f\u5f97\u5230\u8fd9\u4e2a\u5b57\u7b26\u4e32\u9700\u8981\u7684\u6700\u5c11\u53d8\u6362\u6b21\u6570\uff08int\u7c7b\u578b\uff09\u3002\u7531\u4e8e\u662f\u6700\u5c11\uff0c\u6240\u4ee5\u5bf9\u6bcf\u4e2a\u72b6\u6001\u8fdb\u884c\u6807\u8bb0\u5c31\u663e\u5f97\u683c\u5916\u91cd\u8981\u5566\uff08\u56e0\u4e3a\u5982\u679c\u4e4b\u540e\u53c8\u51fa\u73b0\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u53d8\u6362\u6b21\u6570\u80af\u5b9a\u5927\u4e8e\u5f53\u524d\u7684\u6b21\u6570\uff09\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u4fdd\u5b58\u8fd9\u4e9b\u6807\u8bb0\u5462\uff1f\u4ee5\u5f80\u6211\u505a\u5230\u7684\u9898\u90fd\u662f\u6807\u8bb0\u7684\u70b9\uff0c\u6216\u957f\u5ea6\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6570\u7ec4\u7b49\u65b9\u5f0f\u89e3\u51b3\uff0c\u4f46\u662f\u672c\u9898\u9700\u8981\u6807\u8bb0\u5b57\u7b26\u4e32\uff01\\(^o^)/\u4e5f\u5c31\u662f\u8bf4\u6bcf\u5f53\u53d8\u6362\u540e\u51fa\u73b0\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u5c31\u8981\u5c06\u5176\u6807\u8bb0\u4e3atrue\uff0c\u6216\u8005\u81f3\u5c11\u628a\u5b83\u5b58\u8d77\u6765\u8bc1\u660e\u5b83\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u8fd9\u65f6\u6211\u60f3\u5230\u4e86**map**\uff0c\u53ef\u4ee5\u7528\u5b83\u7684\u6620\u5c04\u5173\u7cfb\u8fdb\u884c\u6807\u8bb0\uff08\u8bb2\u771f\uff0c\u4e4b\u524d\u5bf9map\u90fd\u662f\u9053\u542c\u9014\u8bf4\uff0c\u4ece\u6765\u6ca1\u6709\u7528\u8fc7\u5b83\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b21\u7528\uff09\u3002\n\n\u770b\u4e86\u4e00\u4e9bdalao\u7684\u76f8\u5173\u535a\u5ba2\u8bb2\u89e3\u4e4b\u540e\uff0c\u6211\u5b9a\u4e49\u4e86\u4e00\u4e2amap<string,bool>\u7c7b\u578b\u7684flag\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u662fstring\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u8981\u5bf9\u6bcf\u6b21\u53d8\u6362\u51fa\u73b0\u7684\u90a3\u4e9b\u5b57\u7b26\u4e32\u8fdb\u884c\u6807\u8bb0~\n\n\u4e0b\u9762\u5256\u6790\u4e00\u4e0bbfs()\u51fd\u6570\u55bd~\uff0c\u5176\u4ed6\u7684\u90fd\u662f\u5c0f\u573a\u9762O(\u2229_\u2229)O\n\n\u82e5\u961f\u5217\u975e\u7a7a,\u5c31\u5c06\u961f\u9996\u7684\u503c\u8d4b\u7ed9now\uff1b\n```cpp\n\t\tcouple now;\n\t\tnow = Q.front();\n\t\tQ.pop();\n\n```\n\u82e5now\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u6211\u4eec\u8981\u5bfb\u627e\u7684\u76ee\u6807\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56denow.step,\u5373\u53d8\u6362\u9700\u8981\u7684\u6b65\u6570\u3002\n```cpp\n\t\tif (now.des == destr)\n\t\t\treturn now.step;\n```\n\u5982\u679c\u8be5\u5b57\u7b26\u4e32\u4e0d\u662f\u6211\u4eec\u82e6\u82e6\u5bfb\u627e\u7684\u90a3\u4e2a\u5b83\uff0c\u5f00\u59cb\u5bf9\u8be5\u5b57\u7b26\u4e32\u8fdb\u884c\u89c4\u5219\u53d8\u6362\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u89c4\u5219\uff0c\u90fd\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n\uff081\uff09\u82e5\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5b58\u5728\u89c4\u5219\u53d8\u6362\u7684\u8981\u6c42\u5b57\u7b26\uff0ccontinue\u8df3\u8fc7\u672c\u6b21\u5faa\u73af\n```cpp\n\t\tif (now.des.find(rule[i][0]) == string::npos)\n\t\t\tcontinue;\n```\n\n\uff082\uff09\u8003\u8651\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u540c\u4e00\u53d8\u6362\u591a\u79cd\u60c5\u51b5,\u5bf9\u6bcf\u79cd\u53ef\u80fd\u53d8\u6362\u90fd\u8981\u8003\u8651\u5230\u5440~\u8fd9\u91cc\u90fd\u662f\u5c0f\u573a\u9762\u5927\u5bb6\u7422\u78e8\u4e00\u4e0b\u5373\u53ef~\n\n```cpp\nint t1 = rule[i][0].length();\nstring pre = now.des; \nint pos = 0;\nwhile ((pos = pre.find(rule[i][0], pos)) != string::npos)\t\t\t{\n\tstring s = pre;\n\ts.replace(pos, t1, rule[i][1]);\n\tif (flag.find(s) != flag.end())//\u8bf4\u660eflag\u4e2d\u5df2\u7ecf\u6709\u8be5\u5b57\u7b26\u4e32;\n\t{\n\t\tpos++;\n\t\tcontinue;\n\t}\t\n\tcouple tmp;\n\ttmp.des = s;\n\ttmp.step = now.step + 1;\n\tQ.push(tmp);\n\tflag.insert(pair<string, bool>(tmp.des, true));\n\tpos++;\n}\n```\n\u8fd8\u6709\u5c31\u662f\u8f93\u5165\u5361\u4e86\u597d\u4e45\uff0cCtrl+Z+Enter+Enter\u5c31\u597d\uff01\n\n\u6700\u540e\uff01\u8fd8\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u5c31\u662f\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2a\u53d8\u6362\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e5f\u8bb8\u6709\u591a\u79cd\u9009\u62e9\u65b9\u5f0f\uff01\u6bd4\u5982abaa\uff0c\u5982\u679c\u53d8\u6362\u89c4\u5219\u662fa->xxx,\u90a3\u4e48a\u53ef\u4ee5\u67093\u79cd\u60c5\u51b5\uff0c\u8fd9\u4e2a\u8981\u8003\u8651\u5230\u54c7\uff01\n\n```cpp\n#include <iostream>\n#include<queue>\n#include<cstring>\n#include<string>\n#include<map>\nusing namespace std;\n\nstruct couple\n{\n\tstring des;\n\tint step;\n};\n\nstring rule[7][2];\nint cnt = 0;\ncouple start;\nstring init, destr, str1, str2;\nmap<string, bool>flag;\n\nqueue<couple>Q;\n\nint bfs()\n{\n\twhile (!Q.empty())\n\t{\n\t\tcouple now;\n\t\tnow = Q.front();\n\t\tQ.pop();\n\t\tif (now.des == destr)\n\t\t\treturn now.step;\n\t\tfor (int i = 1; i <= cnt; i++)\n\t\t{\n\t\t\tif (now.des.find(rule[i][0]) == string::npos)\n\t\t\t\tcontinue;\n\t\t\tint t1 = rule[i][0].length();\n\t\t\tstring pre = now.des; //\u8003\u8651\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u540c\u4e00\u53d8\u6362\u591a\u79cd\u60c5\u51b5\n\t\t\tint pos = 0;\n\t\t\twhile ((pos = pre.find(rule[i][0], pos)) != string::npos)\n\t\t\t{\n\t\t\t\tstring s = pre;\n\t\t\t\ts.replace(pos, t1, rule[i][1]);\n\t\t\t\tif (flag.find(s) != flag.end())// flag.count(rule[i][0]) == 1;\n\t\t\t\t{\n\t\t\t\t\tpos++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcouple tmp;\n\t\t\t\ttmp.des = s;\n\t\t\t\ttmp.step = now.step + 1;\n\t\t\t\tQ.push(tmp);\n\t\t\t\tflag.insert(pair<string, bool>(tmp.des, true));\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}//for-i\n\t}//while\n\treturn - 1;\n}\n\nint main()\n{\n\tcin >> init >> destr;\n\tstart.des = init;\n\tstart.step = 0;\n\tQ.push(start);\n\n\tflag.insert(pair<string, bool>(start.des, true));\n\n\twhile (cin >> str1 >> str2)\n\t{\n\t\tcnt++;\n\t\trule[cnt][0] = str1;\n\t\trule[cnt][1] = str2;\n\t}\n\tint tmp = bfs();\n\tif (tmp >= 0 && tmp <= 10)\n\t\tcout << tmp;\n\telse\n\t\tcout << \"NO ANSWER!\";\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n",
        "postTime": 1566915865,
        "uid": 237242,
        "name": "yubing_lml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\uff08du\uff09\u5355\uff08liu\uff09\u7684bfs\u3002   \n\u601d\u8def\u5341\u5206\u7b80\uff08yun\uff09\u6d01\uff08tou\uff09\u660e\uff08zhuan\uff09\u4e86\uff08xiang \uff09\uff1a   \n```\n1\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u961f\u5217duilie[2000000]\uff0c\u7528\u6765\u5b58\u50a8\u6240\u6709\u53ef\u80fd\u7684\u5b57\u7b26\u4e32\u4ee5\u53ca\u5b83\u4eec\u6240\u9700\u8981\u7684\u6b65\u6570\n2\uff0c\u5b9a\u4e49\u53e6\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4bh[10]\uff0c\u7528\u6765\u5b58\u50a8\u79fb\u52a8\u89c4\u5219\n3\uff0c\u8f93\u5165\u539f\u5b57\u7b26\u4e32a\u548c\u76ee\u6807\u5b57\u7b26\u4e32b\n4\uff0c\u8f93\u5165\u53d8\u5316\u89c4\u5219\uff0c\u5b58\u5165bh\n5\uff0c\u5c06a\u5165\u961f\u5217\n6\uff0c\u5bf9\u5f53\u524d\u961f\u9996\u5143\u7d20temp\uff08\u4ecea\u5f00\u59cb\uff09\uff1a\n7\uff0c    \u5c06\u5176\u51fa\u961f\u5217\n8\uff0c    \u904d\u5386bh\uff0c\u627e\u51fa\u6240\u6709temp\u80fd\u53d8\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u5168\u90e8\u5b58\u5165\u961f\u5217\u4e2d\uff0c\u5e76\u8bb0\u5f55\u5c42\u6b21\n9\uff0c    \u5982temp\u53d8\u7684\u5b57\u7b26\u4e32\u6216\u5b83\u81ea\u5df1\u4e2d\u6709b\uff0c\u5219\u8f93\u51fa\u5b83\u7684\u5c42\u6b21\n10\uff0c   \u5982\u5c42\u6b21>10\u6216\u961f\u5217\u4e3a\u7a7a\uff0c\u8f93\u51fa\u201cNO ANSWER\uff01\u201d\n11\uff0c   \u5426\u5219\uff0c\u56de\u5230\u6b65\u9aa46\n```\n\u5bf9\u5e94\u7684\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5199\u51fa\u4ee3\u7801\u4e86\uff08\u5185\u9644\u8be6\u7ec6\u6ce8\u91ca\uff09\uff1a\n```\n#include <iostream>\n#include <string> \n#include <cstring>\nusing namespace std;\nstruct rule//\u7528\u4e8e\u5b58\u50a8\u53d8\u5316\u89c4\u5219\u7684\u7ed3\u6784\u4f53\n{\n\tstring first,second;\n}bh[10];\nstruct guangsou//\u7528\u4e8e\u5b58\u50a8\u5b57\u7b26\u4e32\u7684\u961f\u5217\n{\n\tstring x;//\u5b57\u7b26\u4e32\n\tint pos;//\u5b57\u7b26\u4e32\u7684\u5c42\u6b21\uff08\u4e5f\u5c31\u662f\u6240\u9700\u7684\u6b65\u6570\uff09\n}duilie[2000000];\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u628a\u6570\u7ec4\u5f00\u5230\u4e24\u767e\u4e07\uff01\u4e0d\u7136\u6700\u540e\u4e00\u4e2a\u70b9\u4f1aRE\uff01\nstring a,b;//\u8d77\u59cb\u4e32\u548c\u76ee\u6807\u4e32\nint head=0,end=1;//\u961f\u5217\u7684\u5934\u548c\u5c3e\nstring tihuan(string a,int pos,string b1,string b2)//\u624b\u5199\u66ff\u6362\u51fd\u6570\uff0c\u4e3a\u7684\u662f\u4e0d\u6539\u53d8\u539f\u672c\u7684\u5b57\u7b26\u4e32\n{\n\treturn a.replace(pos,b1.length(),b2);//\u7070\u5e38\u9ad8\u7aef\u5927\u6c14\u4e0a\u6863\u6b21\u7684replace\u51fd\u6570\uff0c\u7528\u6cd5\u81ea\u5df1\u641c\n}\nvoid bfs(string s1, string s2, int n)//\u5e7f\u641c\u51fd\u6570\uff0c\u53c2\u6570\u5206\u522b\u662f\u8d77\u59cb\u4e32\u548c\u76ee\u6807\u4e32\u4ee5\u53ca\u53d8\u5316\u89c4\u5219\u7684\u6570\u91cf\n{\n\tduilie[end].x=s1;//\u628a\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u8bbe\u4e3a\u8d77\u59cb\u4e32\n\tduilie[end].pos=0;//\u8d77\u59cb\u4e32\u5c42\u6b21\u4e3a\u96f6\n\tif(s1==s2){cout<<0;return;}//\u7279\u5224\uff0c\u5982\u679c\u8d77\u59cb\u4e32\u548c\u76ee\u6807\u4e32\u4e00\u6837\u5219\u76f4\u63a5\u8f93\u51fa\u96f6\n\telse//\u5426\u5219\n\t{\n\t\twhile(duilie[end].pos<=10&&head<end)//\u5982\u679c\u5982\u5c42\u6b21<10\u4e14\u961f\u5217\u4e0d\u4e3a\u7a7a\n\t\t{\n\t\t\thead++;//\u5f39\u51fa\u961f\u9996\u5143\u7d20\n\t\t\tfor(int i=1;i<=n;i++)//\u904d\u5386bh\n\t\t\t{\n\t\t\t\tstring::size_type id;//\u53d8\u91cfid\u7528\u4e8e\u8bb0\u5f55\u88ab\u5f39\u51fa\u7684\u961f\u9996\u5143\u7d20\u4e2d\u662f\u5426\u6709bh[i].first\uff08\u4e0d\u61c2\u5f97\u81ea\u5df1\u770b\u4e0a\u9762\u7684rule\u7ed3\u6784\u4f53\uff09\n\t\t\t\tstring temp=duilie[head].x;//\u4e3a\u4e86\u9632\u6b62\u6539\u53d8\u961f\u9996\u5143\u7d20\uff0c\u7528temp\u6765\u6682\u65f6\u5b58\u50a8\u5b83\n\t\t\t\tid=temp.find(bh[i].first);//\u5982\u679c\u627e\u5230\u4e86\u5219id=bh[i].first\u7684\u8d77\u59cb\u5750\u6807\uff0c\u5426\u5219id=string::npos\n\t\t\t\twhile(id!=string::npos)//\u5982\u679c\u627e\u5230\u4e86\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tend++;//\u5411\u961f\u5c3e\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\n\t\t\t\t\tduilie[end].x=tihuan(duilie[head].x,id,bh[i].first,bh[i].second);//\u5c06\u961f\u5c3e\u5143\u7d20\u8d4b\u503c\u4e3a\u5c06\u961f\u9996\u5143\u7d20\u4e2d\u7684bh[i].first\u66ff\u6362\u4e3abh[i].second\u540e\u7684\u5b57\u7b26\u4e32\n\t\t\t\t\tduilie[end].pos=duilie[head].pos+1;//\u961f\u5c3e\u5143\u7d20\u6b65\u6570=\u961f\u9996\u5143\u7d20\u6b65\u6570+1\n\t\t\t\t\tif(duilie[end].x==s2){cout<<duilie[end].pos;return;}//\u5982\u679c\u961f\u5c3e\u5143\u7d20=b\u7684\u8bdd\uff0c\u5219\u8f93\u51fa\u5b83\u7684\u6b65\u6570\uff0c\u7ed3\u675f\u7a0b\u5e8f\n\t\t\t\t\ttemp.replace(id,bh[i].first.length(),\"~\");//\u5c06temp\u4e2d\u539f\u6765bh[i].first\u7684\u4f4d\u7f6e\u66ff\u6362\u4e3a\u5360\u4f4d\u7528\u7684\u201c~\u201d\uff0c\u8fd9\u6837\u624d\u53ef\u4ee5\u7ee7\u7eed\u5f80\u4e0b\u627etemp\u4e2d\u5176\u5b83\u7684bh[i].first\n\t\t\t\t\tid=temp.find(bh[i].first);//\u91cd\u65b0\u5bfb\u627e\u4e00\u6b21\uff0c\u7136\u540e\u56de\u5230while\u5faa\u73af\u5f00\u59cb\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t\tcout<<\"NO ANSWER!\";//\u5982\u679c\u6b65\u6570\u8d85\u8fc7\u4e86\u5341\uff0c\u6216\u8005\u961f\u5217\u4e3a\u7a7a\u4e86\u5c31\u8f93\u51fa\u201cNO ANSWER\uff01\u201d\n\t\treturn;//\u7ed3\u675f\n\t}\n}\nint main()\n{\n\tint i=1;\n\tcin>>a>>b;//\u8f93\u5165a\u548cb\n\twhile(cin>>bh[i].first>>bh[i].second){i++;}//\u8f93\u5165\u6240\u6709\u7684\u53d8\u5316\u89c4\u5219\n\tbfs(a,b,i-1);//\u5e7f\u641c\n\treturn 0;//\u7ed3\u675f\u7a0b\u5e8f\n}\n```\n\u603b\u7ed3\uff1a\u6b64\u9898\u601d\u7ef4\u96be\u5ea6\u4e0d\uff08ju\uff09\u5927\uff08da\uff09\uff0c\u53ea\u8981\u4e86\u89e3\u5e7f\u641c\u539f\u7406\u7684\u4eba\u90fd\u4e0d\u96be\u505a\u51fa\u6765\uff0c\u6240\u4ee5\u5927\u4f19\u513f\u52a0\u6cb9\u5427\uff01",
        "postTime": 1562069522,
        "uid": 174034,
        "name": "Mitch\u8c1c\u56e2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u592a\u6076\u5fc3\u4e86\u3002\u3002\u3002\n\n\u5176\u5b9e\u8fd9\u5c31\u662f\u9053\u5927\u6a21\u62df\u9898\uff0c\u603b\u7684\u6765\u8bf4\u5904\u7406\u5206\u4e00\u4e0b\u51e0\u6b65.\n\n1.\u8bfb\u5165\uff0c\u6ca1\u6709\u7ed9n\uff0c\u6211\u53ea\u4f1a\u7528\u6587\u4ef6\u64cd\u4f5c\u6765\u8bfb\u5165\u8f93\u51fa\u4e86\u3002\u5982\u679c\u521d\u5b66\u4e0d\u4f1a\u7684\u8bdd\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u8fd9\u91cc\u8bf4\u660e\u4e00\u4e0b\u3002\n\n\u8bfb\u5165\u89c4\u5219\u663e\u7136\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a\n\n```\n    n++;\n    while(cin>>from[n]>>to[n])n++;\n    n--;\n```\n\u4f46\u8fd9\u6837\u7684\u8bdd\u5f04\u51fa\u9ed1\u6846\u6846\u5f04\u4e0d\u51fa\u6765\u7b54\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\uff1a\n\n```\n      freopen(\"xxx.txt\",\"r\",stdin);\n      freopen(\"xxxo.txt\",\"w\",stdout);\n```\n\u628a\u6570\u636e\u653exxx.txt\u4e2d\uff0c\u8fd0\u884c\uff0c\u7136\u540e\u53bbxxxo.txt\u627e\u7ed3\u679c\u5c31\u884c\u4e86\u3002\n\uff08\u83dc\u9e21\u7684\u6211\u53ea\u4f1a\u8fd9\u4e48\u505a\u3002\u3002\u3002\u5927\u4f6c\u8f7b\u55b7\uff09\u3002\n\n2.\u5f00\u59cb\u8fdb\u884c\u8001\u5957\u7684\u5e7f\u641c\u3002\u5c06\u521d\u59cb\u72b6\u6001\u5165\u961f\uff0c\u4e0d\u65ad\u679a\u4e3e\u80fd\u8f6c\u6362\u7684\u5b57\u7b26\u4e32\uff0c\u4e0d\u505c\u53d8\uff0c\u540c\u65f6\u8bb0\u5f55\u6b65\u6570\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\uff0c\u7136\u540e\u68c0\u9a8c\u6b65\u6570\uff0c\u5982\u679c\u5927\u4e8e10\u5c31\u8f93\u51fa\u201cNxxxxxx\u201d\u3002\n\n\u8fd9\u4e2a\u601d\u8def\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u4f46\u5b9e\u9645\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\uff0c\u600e\u4e48\u679a\u4e3e\uff1f\u600e\u4e48\u65b9\u6848\u662f\u5426\u53ef\u884c\uff1f\u600e\u4e48\u5224\u91cd\uff1f\u8fd9\u90fd\u662f\u95ee\u9898\uff0c\u63a5\u4e0b\u6765\u4ed4\u7ec6\u8bf4\u660e\u4e00\u4e0b\u3002\n\n1.\u5224\u91cd\uff08\u8c03\u7b80\u5355\u7684\u5148\u6765\uff09\n\n\u76f4\u63a5\u4e00\u4e2amap<string,int>\u5224\u91cd\u5c31\u597d\uff0cmap\u5728\u5f88\u591a\u60c5\u51b5\u662f\u5f88\u5b9e\u7528\u7684\uff0c\u6211\u7ecf\u5e38\u7528\u6765\u5904\u7406\u5b57\u7b26\u4e32\u548c\u6570\u636e\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\n\n\u53ef\u4ee5\u770b\u4e00\u4e0b[map\u7684\u4e00\u4e9b\u64cd\u4f5c](https://www.luogu.org/blog/jjq/solution-p1603)\u6765\u52a0\u6df1\u4e00\u4e0b\u5370\u8c61\u3002\n\n2.\u679a\u4e3e\n\n\u56e0\u4e3a\u8003\u8651\u5230\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u6709\u76f8\u540c\u7684\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u626b\u63cf\u6bcf\u4e00\u4f4d\uff0c\u627e\u53ef\u4ee5\u66ff\u6362\u7684\u5b50\u4e32\uff0c\u7136\u540e\u66ff\u6362\u5b50\u4e32\u5224\u91cd\u5165\u961f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5224\u65ad\u5b50\u4e32\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u62df\u5c31\u53ef\u4ee5\u89e3\u51b3\uff1a\n\n```\ninline int check(string a,int s,string b){\n\tint k=0;\n\tfor(int i=s;i<s+b.size();i++){\n\t\tif(a[i]==b[k]){\n\t\t\tk++;continue;\n\t\t}\n\t\tif(a[i]!=b[k])return 0;\n\t}\n\treturn 1;\n}\n   if(st[i]==from[j][0])\n   int jud=check(st,i,from[j]);\n```\n\u7136\u540e\u5c31\u662f\u66ff\u6362\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528string\u7684\u4e00\u4e2a\u7279\u6027\uff0c\u5b57\u7b26\u4e32\u76f8\u52a0\uff0c\u4f8b\u5982\uff1astring a=\"abcd\",b=\"cdef\";cout<<a+b;\n\n\u8f93\u51fa\u7684\u662f \"abcdcdef\"\uff1b\u5982\u679c string tmp=a+b;\u90a3\u4e48tmp=\"abcdcdef\"\uff1b\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u66ff\u6362\u3002\n\n```\ninline string change(string c,string a,string b,int k){\n\tstring tmp;\n\tfor(int i=0;i<k;i++)tmp+=c[i];\n\ttmp+=b;\n\tfor(int i=k+a.size();i<c.size();i++)tmp+=c[i];\n\treturn tmp;\n}//\u5c06c\u4e2d\u7684a\u6362\u6210b\uff0ck\u4e3aa\u7684\u9996\u5b57\u6bcd\u5728c\u4e2d\u7684\u4f4d\u7f6e\u3002\n```\n\n\u7136\u540e\u5c31\u5224\u91cd\u5165\u961f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u5982\u679c\u6b65\u9aa4\u4e3a0\uff0c\u90a3\u4e48\u4e5f\u7b97\u662f\u6ca1\u6709\u7b54\u6848\u3002\n\n\u8bb0\u5f97\u6ce8\u91cafreopen\n\n\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\nint bb[22];\nstring start,end;\nint n;\nmap<string,int>vis;\nstring from[7],to[7];\nstring q[10001];\nint head,tail;\nint step[10001];\ninline int check(string a,int s,string b){\n\tint k=0;\n\tfor(int i=s;i<s+b.size();i++){\n\t\tif(a[i]==b[k]){\n\t\t\tk++;continue;\n\t\t}\n\t\tif(a[i]!=b[k])return 0;\n\t}\n\treturn 1;\n}\ninline string change(string c,string a,string b,int k){\n\tstring tmp;\n\tfor(int i=0;i<k;i++)tmp+=c[i];\n\ttmp+=b;\n\tfor(int i=k+a.size();i<c.size();i++)tmp+=c[i];\n\treturn tmp;\n}\nint main(){\n  //  freopen(\"3.in\",\"r\",stdin);\n  //    freopen(\"1.out\",\"w\",stdout);\n    cin>>start>>end;\n    n++;\n    while(cin>>from[n]>>to[n])n++;\n    n--;\n    tail=1;\n    q[1]=start;\n    \n    vis[q[1]]=1;\n    int flagg=0;\n    if(start==end){\n    \tprintf(\"NO ANSWER!\");return 0;\n\t}\n    while(head<=tail){\n    \thead++;                   \n    \tstring st=q[head];\n    \tfor(int i=0;i<st.size();i++){\n    \t\tfor(int j=1;j<=n;j++){\n    \t\t\tif(i+from[j].size()>st.size())continue;\n    \t\t\tif(st[i]==from[j][0]){\n    \t\t\t\tint jud=check(st,i,from[j]);\n    \t\t\t\tif(jud){\n    \t\t\t\t\tstring tmp=change(st,from[j],to[j],i);\n    \t\t\t\t\tif(vis[tmp])continue;\n    \t\t\t\t\tif(tmp==end){\n    \t\t\t\t\t\tint ans=step[head]+1;if(ans>10){\n    \t\t\t\t\t\t\tprintf(\"NO ANSWER!\");return 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprintf(\"%d\",ans);return 0;\n\t\t\t\t\t\t}\n    \t\t\t\t\tvis[tmp]=1;\n    \t\t\t\t\ttail++;\n    \t\t\t\t\tq[tail]=tmp;\n    \t\t\t\t\tstep[tail]=step[head]+1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n    \n   \tprintf(\"NO ANSWER!\");return 0;\n   \n}\n\n\t\n```\n\n",
        "postTime": 1543112755,
        "uid": 72111,
        "name": "Maktub",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u5bbd\u641c(\u7136\u800c\u6211\u4ea4\u4e86\u6574\u6574\u4e00\u9875)\n\u5176\u5b9e\u5c31\u662f\u4ece\u521d\u59cb\u5b57\u7b26\u4e32\u901a\u8fc7\u89c4\u5219\u53d8\u5230\u76ee\u6807\u5b57\u7b26\u4e32,\u4e0d\u8fc7\u6709\u4e00\u4e2a\u5730\u65b9\u8981\u6ce8\u610f\uff0c\u5c31\u662f\u4e00\u4e2a\u89c4\u5219\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u5730\u65b9\u53ef\u4ee5\u7528\u5230\uff0c\u5bbd\u641c\u7684\u65f6\u5019\u4e00\u4e2a\u89c4\u5219\u53ef\u4ee5\u6269\u5c55\u51fa\u53bb\u5f88\u591a\u72b6\u6001\u3002\n\n**\u6ce8\u610f\u5224\u91cd\uff0c\u6211\u8fd9\u91cc\u7528hash\u6765\u5224\u91cd\uff0c\u6ca1\u5199\u94fe\u8868\u6cd5\uff0c\u6709\u51b2\u7a81\u76f4\u63a5\u653e\u5230\u540e\u9762\u53bb\u4e86\uff0c\u7b80\u5355\u4e00\u70b9**\n\n\u5199\u4e86\u4e00\u4e0b\u53cc\u5411\u641c\u7d22\uff0c\u5dee\u4e0d\u591a\u80fd\u6bd4\u6b63\u5e38\u641c\u7d22\u5feb30\u51e0\u6beb\u79d2\u5427\uff0c\u5982\u679c\u6570\u636e\u518d\u5927\u4e00\u70b9\u8fd8\u80fd\u518d\u5feb\n\n**Code(Pascal):**\n```\nvar\n  bi:boolean;\n  first,aim:string;\n  s:char;\n  t1,t2,t3:string;\n  head,tail,head1,tail1:longint;\n  seed,a1,i,j,m,n,k,p:longint;\n  a,b:array[0..10]of string;\n  f:array[0..100000,0..1]of string;\n  step:array[0..100000,0..1]of longint;\n  hash:array[0..70000]of string;\n  num,point:array[0..70000]of longint;\nfunction ha(t:string):longint;//hash\nvar\n  i,point:longint;\nbegin\n  point:=0;\n  for i:=1 to length(t) do\n    point:=(point*seed+ord(t[i]))and $FFFF;\n  while (hash[point]<>'%')and(hash[point]<>t) do\n    begin\n      inc(point);\n      if point=70000 then point:=0;\n    end;\n  exit(point);\nend;\nbegin\n  {assign(input,'11.in');reset(input);\n  assign(output,'11.out');rewrite(output);}\n  seed:=31;\n  repeat\n    read(s);\n    if s=' ' then break;\n    first:=first+s;\n  until false;\n  readln(aim);\n  while not eof do\n    begin\n      inc(n);\n      repeat\n        read(s);\n        if s=' ' then break;\n        a[n]:=a[n]+s;\n      until false;\n      readln(b[n]);\n    end;//\u8bfb\u5165\n  if first=aim then\n    begin\n      writeln(0); exit;\n    end;\n  for i:=0 to 70000 do hash[i]:='%';\n  a1:=ha(first);\n  hash[a1]:=first; num[a1]:=1; point[a1]:=1;\n  a1:=ha(aim);\n  hash[a1]:=aim; num[a1]:=2;   point[a1]:=1;\n  head:=0; tail:=1; f[1,0]:=first; step[1,0]:=0;\n  head1:=0; tail1:=1; f[1,1]:=aim; step[1,1]:=0;//\u521d\u59cb\u5316\n  while true do\n    begin\n      //writeln('1:',tail,' ',tail1);\n      if tail<tail1 then\n      //\u54ea\u4e00\u4e2a\u961f\u5217\u957f\u5ea6\u77ed\u5c31\u6269\u5c55\u54ea\u4e2a\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u6b63\u5411\u53cd\u5411\u72b6\u6001\u5e73\u8861\n        begin\n          inc(head);\n          if head>tail then break;\n          for i:=1 to n do\n            begin\n              t2:=f[head,0];\n              p:=pos(a[i],t2);\n              while p<>0 do\n                begin\n                  t1:='';\n                  for j:=1 to p-1 do\n                    t1:=t1+t2[j];\n                  t1:=t1+b[i];\n                  for j:=p+length(a[i]) to length(t2) do\n                    t1:=t1+t2[j];\n                  a1:=ha(t1);\n                  if (hash[a1]='%')and(step[head,0]+1<=10) then\n                    begin\n                      hash[a1]:=t1; num[a1]:=1;\n                      inc(tail); f[tail,0]:=t1; step[tail,0]:=step[head,0]+1;\n                      point[a1]:=tail;\n                    end\n                  else\n                    if (num[a1]<>1)and\n                       (step[head,0]+1+step[point[a1],1]<=10) then\n                      begin\n                        writeln(step[head,0]+1+step[point[a1],1]);\n                        exit;\n                      end;\n                  t3:='';\n                  {for j:=1 to p-1 do\n                    t3:=t3+t2[j];\n                  t3:=t3+b[i];\n                  for j:=p+length(a[i]) to length(t2) do\n                    t3:=t3+t2[j];}\n                  for j:=p+1 to length(t2) do\n                  //\u7b2c4\u4e2a\u70b9\u5f88\u5751\uff0c\u524d\u9762\u65e0\u6548\u6389\u7684\u662f\u6211\u4e4b\u524d\u7684\u4ee3\u7801\uff0c\u4f1a\u6b7b\u5faa\u73af\n                    t3:=t3+t2[j];\n                  t2:=t3;\n                  p:=pos(a[i],t2);\n                end;\n            end;\n        end\n      else//\u53cd\u5411\u6269\u5c55\n        begin\n          inc(head1);\n          if head1>tail1 then break;\n          for i:=1 to n do\n            begin\n              t2:=f[head1,1];\n              p:=pos(b[i],t2);\n              while p<>0 do\n                begin\n                  t1:='';\n                  for j:=1 to p-1 do\n                    t1:=t1+t2[j];\n                  t1:=t1+a[i];\n                  for j:=p+length(b[i]) to length(t2) do\n                    t1:=t1+t2[j];\n                  a1:=ha(t1);\n                  if (hash[a1]='%')and(step[head1,1]+1<=10) then\n                    begin\n                      hash[a1]:=t1; num[a1]:=2;\n                      inc(tail1); f[tail1,1]:=t1;\n                      step[tail1,1]:=step[head1,1]+1;\n                      point[a1]:=tail1;\n                    end\n                  else\n                    if (num[a1]<>2)and\n                       (step[head1,1]+1+step[point[a1],0]<=10)then\n                      begin\n                        writeln(step[head1,1]+1+step[point[a1],0]);\n                        exit;\n                      end;\n                  t3:='';\n                  {for j:=1 to p-1 do\n                    t3:=t3+t2[j];\n                  t3:=t3+a[i];\n                  for j:=p+length(b[i]) to length(t2) do\n                    t3:=t3+t2[j]; }\n                  for j:=p+1 to length(t2) do\n                    t3:=t3+t2[j];\n                  t2:=t3;\n                  p:=pos(b[i],t2);\n                end;\n            end;\n        end;\n       //writeln('2:',tail,' ',tail1);\n    end;\n  writeln('NO ANSWER!');\n  //close(input); close(output);\nend.\n\n```\n\u795d\u5927\u5bb62018NOIP rp++",
        "postTime": 1533296994,
        "uid": 39488,
        "name": "\u56af\u5440\u56af\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u5e94\u8be5\u662f\u6211\u505a\u7684\u7b2c\u4e00\u9053\u9690\u5f0f\u56fe\u7684\u9898\uff08\u72b6\u6001\u8f6c\u79fb\uff0c\u53c8\u662f\u72b6\u6001\u8f6c\u79fb\uff0c\u666e\u901a\u7684\u627e\u6700\u77ed\u8def\u5f84\u4e5f\u662f\u72b6\u6001\u8f6c\u79fb\u5566\uff0c\u4e0d\u8fc7\u72b6\u6001\u5c31\u662f\u6240\u5904\u4f4d\u7f6e\uff0c\u7528\u5750\u6807\u8868\u793a\uff0c\u8f6c\u79fb\u53ea\u6709\u4e0a\u4e0b\u5de6\u53f3\u5566\uff09\n\u611f\u89c9\u6211\u7684\u4ee3\u7801\u8981\u7a0d\u5fae\u7b80\u6d01\u4e00\u70b9\u3002\u3002\u3002\n1\u3001\u4e3b\u8981\u662fc++\uff1a\uff1astring\u7684\u4f7f\u7528\uff0c\u8981\u6ce8\u610fstring\uff1a\uff1anpos\u662fsize_t\u7c7b\u578b\uff0c\u6240\u4ee5\u7528string\uff1a\uff1afind\u7684\u51fd\u6570\u7684\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u8fd4\u56de\u503c\u8f6c\u6362\u6210int\u7c7b\u578b\u7136\u540e\u5224\u65ad\u662f\u5426\u4e3a-1\u3002\n2\u3001\u5bf9\u5f53\u524d\u72b6\u6001\u8fdb\u884c\u7684\u64cd\u4f5c\u53ef\u80fd\u9488\u5bf9\u7684\u5b50\u4e32\u4f4d\u7f6e\u4e0d\u786e\u5b9a\uff0c\u53ef\u80fd\u6709\u591a\u4e2a\u5b50\u4e32\u7b26\u5408\u8fdb\u884c\u64cd\u4f5c\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u628afind\u51fd\u6570\u653e\u5230while()\u5faa\u73af\u91cc\u9762\u53bb\n3\u3001vis\u8bb0\u5f55\u641c\u7d22\u8fc7\u7684\u72b6\u6001\uff0cset\u96c6\u5408\u5199\u6cd5\u662f\u6700\u57fa\u672c\u7684\uff08\u5177\u4f53\u53ef\u53c2\u8003\u7d2b\u4e66\uff09\uff0c\u66f4\u597d\u7684\u53ef\u4ee5\u7528\u54c8\u5e0c\uff0c\u7136\u6211\u8fd8\u5f88\u4e0d\u719f\uff0c\u800c\u4e14\u8fd9\u9898\u64cd\u4f5c\u6570\u91cf\u6bd4\u8f83\u5c11\u5566\u3002\u3002\u5bf9\u4e86\uff0c\u53ef\u80fd\u4e5f\u53ef\u4ee5\u627e\u5230\u5b8c\u7f8e\u54c8\u5e0c\u3002\u3002\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\n\nconst int maxn = 6+5;\nstruct state{ string s; int num; state(string k = \"\", int x = -1):s(k),num(x){} };//\u72b6\u6001\nstate beg, lst;\nstruct Op{ string from, to; } op[maxn];\nset<string> vis;\nint n;\n\nint main()\n{\n    cin >> beg.s >> lst.s;\n    while(cin >> op[n].from >> op[n].to) n++;\n\n    queue<state> que;//\u7b49\u5f85\u6267\u884c\u7684\u961f\u5217\n    que.push(beg);\n\n    while(!que.empty()) {\n        state cur = que.front();\n        que.pop();\n        cur.num++;\n\n        if(cur.num > 10) break;\n        if(cur.s == lst.s) { lst.num = cur.num; break; }\n        if(vis.count(cur.s)) continue;\n\n        vis.insert(cur.s);\n        for(int i = 0; i < n; i++) {\n            int p = cur.s.find(op[i].from);\n            while(p != -1) {\n                string lft = cur.s.substr(0, p);\n                string rgt = cur.s.substr(p+op[i].from.size());\n                string next = lft + op[i].to + rgt;\n                que.push(state(next, cur.num));\n                p = cur.s.find(op[i].from, p+1);\n            }\n        }\n    }\n    if(lst.num < 0) cout << \"NO ANSWER!\" << endl;\n    else cout << lst.num << endl;\n}\n\n```",
        "postTime": 1526638354,
        "uid": 100464,
        "name": "Willendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u5178\u578b\u7684BFS\u9898\u76ee\n\n------------\n\n\u56de\u987e\u4e00\u4e0bBFS\uff0c\u65e0\u975e\u5c31\u662f\u5c06\u67d0\u4e2a\u72b6\u6001\u7684\u4fe1\u606f\u5b58\u50a8\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\uff0c\u7136\u540e\u4e22\u8fdb\u6570\u7ec4\u8fdb\u884c\u778e\u641e\u3002\u4f46\u662f\u778e\u641e\u65f6\u4e00\u5b9a\u8981\u5224\u91cd\uff0c\u4e00\u822c\u90fd\u662f\u7528vis\u6570\u7ec4\u5c31\u80fd\u8fdb\u884c\u5224\u91cd\uff0c\u4f46\u8fd9\u9898\u7684\u72b6\u6001\u662f\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u6570\u5b57\uff0c\u6240\u4ee5\u5c31\u4e0d\u80fd\u4f7f\u7528vis\u6570\u7ec4\u5224\u91cd\uff0c\u800c\u5e94\u8be5\u4f7f\u7528map\u8fdb\u884c\u5224\u91cd\uff0c\u800c\u4f7f\u7528map\u65f6\u8981\u6ce8\u610f\u5982\u679c\u4f7f\u7528map<char * , int>\u90a3\u4e48\u8fdb\u884c\u6807\u8bb0\u7684\u5c31\u662f\u6570\u7ec4\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u800c\u4f7f\u7528map<string,int>\u624d\u80fd\u5bf9\u5b57\u7b26\u4e32\u53d8\u91cf\u6216\u8005\u5b57\u7b26\u578b\u6570\u7ec4\u8fdb\u884c\u5904\u7406\u3002\u3010~~\u53e6\u5916\u5c06\u4e00\u4e9b\u64cd\u4f5c\u5c01\u88c5\u6210\u51fd\u6570\u771f\u7684\u5f88\u597d\u7528\u554a\uff0c\u4ee5\u524d\u600e\u4e48\u4e0d\u77e5\u9053\u7528QAQ~~\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<queue>\n#include<vector>\nusing namespace std;\nmap<string,int>mp;\nstruct pot{\n\tchar aa[100]; \n\tint step;\n};\nstruct pot qq;\nchar bb[10][100];\nchar dd[10][100];\nchar cc[100];\nint tot=0;\nint ans=-1;\nqueue<struct pot>que;\nbool cmp(char a[] ,int len1, int len2, char b[])//\u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32\u6bd4\u8f83\u51fd\u6570\n{\n\tfor(int i = 0 ; i < len2 ; i++)\n\t{\n\t\tif(a[len1+i]!=b[i])return false;\n\t}\n\treturn true;\n}\nvoid bfs()\n{\n\tmp.clear();\n\twhile(!que.empty())\n\tque.pop();\n\tque.push(qq);\n\tmp[qq.aa]++;\n\tint len=strlen(cc);\n\twhile(!que.empty())\t\n\t{\n\t\tstruct pot ww=que.front();que.pop();\n\t\tint llen=strlen(ww.aa);\n\t\tif(llen==len&&cmp(ww.aa,0,llen,cc))\n\t\t{\n\t\t\tans=ww.step;\n\t\t\tbreak;\n\t\t}\n\t\tfor(int i = 0 ; i < llen ; i++)\n\t\t{\n\t\t\tfor(int j = 0 ; j < tot ; j++)\n\t\t\t{\n\t\t\t\tint lenn=strlen(bb[j]);\n\t\t\t\tint lennn=strlen(dd[j]);\n\t\t\t\tif(i+lenn<=llen&&cmp(ww.aa,i,lenn,bb[j]))\n\t\t\t\t{\n\t\t\t\t\tstruct pot ee;\n\t\t\t\t\tfor(int k = 0; k < i ;k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tee.aa[k]=ww.aa[k];\n\t\t\t\t\t}\n\t\t\t\t\tfor(int k = i; k < i+lennn ;k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tee.aa[k]=dd[j][k-i];\n\t\t\t\t\t}\n\t\t\t\t\tint tot1=i+lennn;\n\t\t\t\t\tfor(int kk = i+lenn; kk < llen ;kk++)\n\t\t\t\t\t{\n\t\t\t\t\t\tee.aa[tot1]=ww.aa[kk];\n\t\t\t\t\t\ttot1++;\n\t\t\t\t\t}\n\t\t\t\t\tee.aa[tot1++]='\\0';\n\t\t\t\t\tee.step=ww.step+1;\n\t\t\t\t\tif(mp[ee.aa]==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmp[ee.aa]++;\n\t\t\t\t\t\tque.push(ee);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tqq.step=0;\n\tscanf(\"%s%s\",qq.aa,cc);\n\twhile(scanf(\"%s%s\",bb[tot],dd[tot])!=EOF)\n\ttot++;\n\tbfs();\n\tif(ans!=-1||ans>10)\n\tcout << ans << endl;\n\telse\n\tcout << \"NO ANSWER!\"<<endl;\n\treturn 0;\n } \n```",
        "postTime": 1525076293,
        "uid": 96241,
        "name": "MekakuCityActors",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7528\u5e7f\u641c\u6765\u505a\uff0c\u5b57\u7b26\u4e32aa\u4e3a\u8d77\u70b9\uff0c\u76ee\u6807\u4e3abb\uff0c\u6bcf\u6b21\u5224\u65adaa\u4e2d\u53ef\u4ee5\u88ab\u66ff\u6362\u7684\u5b50\u4e32\uff0c\u5b58\u5230\u961f\u5217\u5c3e\u3002\u8981\u5224\u65ad\u66ff\u6362\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u51fa\u73b0\u8fc7\uff08\u5426\u5219\u4f1aTLE\uff09\u3002\u8fd8\u6709\u5c31\u662f\u66ff\u6362\u5b50\u4e32\u4e86\uff08\u7528delete\u548cinsert\uff09\u3002\u5224\u65ad\u8fc7\u7a0b\u4e2d\u5982\u679c\u53d8\u5316\u6b21\u6570\u5df2\u7ecf\u523011\u800c\u4e14\u8fd8\u672a\u8f6c\u5316\u6210bb\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa'NO ANSWER!'\u3002\u8fd8\u6709h\uff08\u961f\u5217\uff09\u6570\u7ec4\u8303\u56f4\uff0c\u4e00\u5f00\u59cb\u53ea\u5f00\u4e860..1000\u5c31RE\u4e86\u2026\u2026\u6700\u591a10\u6b65\u6240\u4ee5\u7565\u5f00\u5927\u4e00\u70b9\uff08\u53ef\u4ee5\u81ea\u5df1\u4e3e\u4e00\u4e2a\u53d8\u531610\u6b21\u7684\u4f8b\u5b50\u8bd5\u4e00\u4e0b\u8981\u5f00\u591a\u5927\u6570\u7ec4\u624d\u4e0d\u4f1a201\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```pascal\n\nvar m,aa,bb,s:string;\n    t,w,i,j,k,n:longint;\n    a,b:array[1..10]of string;\n    h:array[0..10000]of string;\n    ans:array[0..10000]of longint;\nfunction had:boolean;//\u5224\u65ad\u8fd9\u79cd\u60c5\u51b5\u662f\u5426\u51fa\u73b0\u8fc7\nvar i:longint;\n begin\n  for i:=1 to w do\n   if h[i]=m then exit(false);\n  exit(true);\n end;\nprocedure find(x,y:string;k:longint);//\u5bfb\u627e\u8be5\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u6709\u53ef\u66ff\u6362\u7684\u5b50\u4e32\nvar i:longint;mm:string;\n begin\n  i:=1;\n  while i<=length(y) do\n   begin\n    if y[i]=x[1] then//\u5982\u679c\u5f00\u5934\u4e00\u6837\u518d\u8003\u8651\u662f\u5426\u5305\u542b\u8be5\u5b50\u4e32\n    begin\n     mm:=copy(y,i,length(x));\n     if mm=x then\n      begin\n       m:=y;\n       delete(m,i,length(x));//\u5220\u9664\n       insert(b[k],m,i);//\u63d2\u5165\n       if had then//\u5982\u679c\u8be5\u60c5\u51b5\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\n               begin\n                inc(w);\n                h[w]:=m;//\u589e\u52a0\u4e00\u4e2a\u961f\u5217\u5c3e\n                ans[w]:=ans[t]+1;//\u53d8\u5316\u6b21\u6570+1\n                if h[w]=bb then\n                 if ans[w]<=10 then \n                  begin write(ans[w]);halt;end;//\u5bbd\u641c\u4e00\u65e6\u641c\u5230\u5c31\u662f\u6700\u4f18\u89e3\n                if ans[w]>11 then begin write('NO ANSWER!');halt;end;//\u526a\u679d\n               end;\n      end;\n     end;\n    inc(i);//\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u76f8\u540c\u5b50\u4e32\n   end;\n end;\n\nbegin\n readln(s);\n i:=1;\n while s[i]<>' ' do\n  begin\n   aa:=aa+s[i];\n   inc(i);\n  end;\n delete(s,1,i);\n bb:=s;\n if aa=bb then begin write(0);halt;end;\n while not eoln do\n  begin\n   readln(s);\n   inc(n);\n   i:=1;\n   while s[i]<>' ' do\n    begin\n     a[n]:=a[n]+s[i];\n     inc(i);\n    end;\n   delete(s,1,i);\n   b[n]:=s;\n  end;//\u8bfb\u5165\n t:=1;\n w:=1;\n h[1]:=aa;//h\u961f\u5217\n while t<=w do//\u5bbd\u641c\u5f00\u59cb\n  begin\n   for i:=1 to n do\n    find(a[i],h[t],i);//\u5224\u65adh[t]\u4e2d\u662f\u5426\u6709a[i]\u5b50\u4e32\n   inc(t);\n  end;\n writeln('NO ANSWER!');\nend.",
        "postTime": 1523715081,
        "uid": 70124,
        "name": "qr\u7684\u5c0f\u8ff7\u59b9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "map\u5b58\u627e\u5230\u8fc7\u7684\u5b57\u7b26\u4e32\u7684\u53d8\u6362\u6b65\u6570\u987a\u4fbf\u5224\u91cd\uff0cmultimap\u5b58\u53d8\u6362\u65b9\u5f0f\n\n\u4e00\u4e2a\u5c0f\u95ee\u9898\u662f\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u4e0e\u5f85\u5339\u914d\u5b57\u7b26\u4e32\u5339\u914d\u7684\u4e0b\u6807\uff0c\u8fd9\u91cc\u5229\u7528find\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u641c\u7d22\u8d77\u70b9\u6765\u5b8c\u6210\u3002\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define mp(A, B) make_pair((A), (B))\nint main()\n{\n    multimap<string, string> ch;//\u6ce8\u610f\u4e00\u4e2a\u53d8\u6362\u7684\u8d77\u70b9\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u53d8\u6362,\u4ece\u800c\u9700\u8981\u4f7f\u7528multimap\n    map<string, int> vis;\n    string a, b;\n    cin >> a >> b;\n    string o, n;\n    while (cin >> o >> n)\n        ch.insert(mp(o, n));\n    queue<string> q;\n    q.push(a);\n    vis.insert(mp(a, 0));\n    while (!q.empty())\n    {\n        string cur = q.front();\n        q.pop();\n        int num = vis[cur];\n        if (num > 10)//\u6839\u636e\u5e7f\u641c\u7684\u6027\u8d28\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\u6df1\u5ea6>10\uff0c\u90a3\u4e48\u961f\u5217\u4e2d\u7684\u6240\u6709\u70b9\u6df1\u5ea6\u90fd>10\uff0c\u6240\u4ee5\u76f4\u63a5return\n        {\n            cout << \"NO ANSWER!\" << endl;\n            return 0;\n        }\n        if (cur == b)\n        {\n            cout << num << endl;\n            return 0;\n        }\n        for (auto it : ch)\n        {\n            string tmp = cur;\n            int pos = 0;\n            while((pos=tmp.find(it.first,pos))!=string::npos)\n            {\n                cur.replace(pos, it.first.size(), it.second);\n                if (!vis.count(cur))\n                {\n                    vis[cur] = num + 1;\n                    q.push(cur);\n                }\n                cur = tmp;\n                ++pos;\n            }\n        }\n    }\n    cout << \"NO ANSWER!\" << endl;\n    return 0;\n}\n```",
        "postTime": 1514550017,
        "uid": 68618,
        "name": "MashPlant",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "**STL\u5927\u6cd5\u597d**\n\n**STL\u5927\u6cd5\u597d**\n\n**STL\u5927\u6cd5\u597d**\n\nc++\u662f\u4e00\u4e2a\u975e\u5e38\u4f18\u79c0\uff08\u597d\u7528\uff09\u7684IDE\n\n\u5176\u4e2d\u7684STL\u5e93\u4fbf\u662f\u4e3ac++\u4e00\u5f3a\u5927\u7684\u529f\u80fd\n\n\u5176\u4e2d\u5305\u62ecvector\uff0clist\uff0cstring\uff0cset\u7b49\u6570\u636e\u7ed3\u6784\u7c7b\u578b\uff0c\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u95ee\u9898\n\n\u5b83\u5728\u8ba9\u4ee3\u7801\u53d8\u77ed\u53d8\u7b80\u6d01\u7684\u540c\u65f6\uff0c\u4f46\u4e5f\u4f1a\u4f7f\u901f\u5ea6\u6709\u6240\u727a\u7272\uff0c\u6240\u4ee5\u8bf7\u9009\u624b\u614e\u7528\n\n\u5176\u4e2d\u52a8\u6001\u6570\u7ec4\uff08vector\uff09\u4e5f\u66f4\u662f\u4f20\u8bf4\u4e2d\u7684\u666e\u53ca\u7ec4\u4e00\u7b49\u5956\u4fdd\u5206\u795e\u5668\n\n\u6b64\u9898\u7528\u5230\u7684\u6570\u636e\u7ed3\u6784\u662fmap\u548cstring\uff0cmap\u7528\u4e8ehash\uff0cstring\u7528\u6765\u5904\u7406\n\n\u5173\u4e8estring\u7684\u4ecb\u7ecd\u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u5168\u9762\u7684\u535a\u5ba2http://www.cnblogs.com/xFreedom/archive/2011/05/16/2048037.html\n\n\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5e93\nusing namespace std;\nstring s,e;\nmap<string,int>Has;//hash\u8fd9\u4e2a\u53d8\u91cf\u5728luogu\u7f16\u8bd1\u65f6\u4f1a\u88ab\u548c\u8c10\nstring a[11],b[11];\nint la[11],lb[11];\nint n=1;\nint mx=0,mn=0;\nvoid dfs(string x,int step)//\u6df1\u641c\n{\n    if(step>=10)return;\n    int v=x.size(),p=e.size();\n    if(v+mx*(10-step)<p)return;//\u53ef\u884c\u6027\u4f18\u5316\uff0c\u52a0\u6700\u5927\u7684\u4e5f\u52a0\u4e0d\u6ee1\n    if(v+mn*(10-step)>p)return;//\u53ef\u884c\u6027\u4f18\u5316\uff0c\u52a0\u6700\u5c0f\u7684\u4e5f\u52a0\u4e0d\u4e0b\n    step++;\n    for(int i=1;i<=n;i++)\n    {\n        int pos=x.find(a[i],0);\n        while(pos!=string::npos)//\u8fd9\u91cc\u662f\u4e0d\u65ad\u67e5\u627ea[i]\u5728x\u4e2d\u7684\u4f4d\u7f6e\uff0c\u67e5\u627e\u4e0d\u5230\u8fd4\u56destring::npos\n        {\n            string tmp=x;\n            tmp.replace(pos,la[i],b[i]);//string\u7684\u66ff\u6362\u51fd\u6570\uff0c\u8be6\u60c5\u89c1\u535a\u5ba2\n            if((Has[tmp]==0&&tmp!=s)||Has[tmp]>Has[x]+1)\n                Has[tmp]=Has[x]+1,dfs(tmp,step);\n            pos=x.find(a[i],pos+1);\n        }\n    }\n}\nint main()\n{\n    cin>>s>>e;\n    while(cin>>a[n]>>b[n])\n    {\n        la[n]=a[n].size();\n        lb[n]=b[n].size();\n        mn=min(mn,lb[n]-la[n]);\n        mx=max(mx,lb[n]-la[n]);//\u5f97\u5230\u6700\u5927\u6700\u5c0f\u503c\uff0c\u7528\u4e8edfs\u4f18\u5316\n        n++;\n        if(n==7)break;\n    }\n    n--;\n    dfs(s,0);\n    if(Has[e]!=0)cout<<Has[e];\n    else cout<<\"NO ANSWER!\";\n}\n```",
        "postTime": 1507715090,
        "uid": 28950,
        "name": "Vic_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u849f\u84bb\u4e0d\u4f1a\u6253STL\uff0c\u4e0d\u60f3\u7528string\u7c7b\u578b\uff0c\u8fd9\u91cc\u53d1\u4e00\u4e2a\u6700\u6700\u6734\u7d20\u7684\u7528char\u6570\u7ec4\u5b58\u50a8\u7684\u5b57\u4e32\u53d8\u6362\uff0c\u7528\u7684\u662f\u53cc\u5411BFS\uff0c\u53ea\u662f\u4e3a\u4e86\u8bc1\u660e\u8fd9\u9053\u9898\u53ef\u4ee5\u6253char\u6570\u7ec4\u3002\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u3002\n\n\u7528char\u6570\u7ec4\u5c31\u8981\u624b\u52a8\u6a21\u62df\u5b57\u4e32\u53d8\u6362\u7684\u8fc7\u7a0b\uff0c\u8fc7\u7a0b\u5206\u4e09\u4e2a\u9636\u6bb5\uff1a1\u3001\u628a\u53d8\u6362\u524d\u7684\u5b57\u7b26\u590d\u5236\u5230\u65b0\u5b57\u7b26\u4e32\u4e2d\uff1b2\u3001\u628a\u88ab\u66ff\u6362\u7684\u90e8\u5206\u5ffd\u7565\uff0c\u628a\u66ff\u6362\u5b57\u7b26\u653e\u5165\u5b57\u7b26\u4e32\uff1b3\u3001\u518d\u628a\u53d8\u6362\u540e\u7684\u5b57\u7b26\u590d\u5236\u5230\u5b57\u7b26\u4e32\u4e2d\u3002\u6ce8\u610f\u65f6\u523b\u7559\u610f\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\n\n\u4e00\u5b9a\u8981\u7528\u5230\u7684\u662f\u5173\u4e8e\u5b57\u7b26\u4e32\uff0c\u5b9a\u4e49\u5728<cstring>\u4e2d\u7684\u4e00\u4e9b\u51fd\u6570\uff0c\u6bd4\u5982strcmp\uff08\u7528\u4e8e\u5b57\u7b26\u4e32\u5224\u7b49\uff09\uff0cstrncmp\uff08\u5b57\u7b26\u4e32\u90e8\u5206\u5224\u7b49\uff09\uff0cstrlen\uff08\u6c42\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u7b49\u7b49\u3002\u7528\u6cd5\u7b80\u5355\uff0c\u9002\u5408\u849f\u84bb\uff08\u672c\u4eba\uff09\u3002\n\n\u53cc\u5411BFS\u7684\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4e24\u5934\u8f6e\u6d41\u6269\u5c55\u8282\u70b9\uff0c\u5f53\u4e24\u4e2ahead\u8282\u70b9\u7684\u6b65\u6570\u4e4b\u548c\u5927\u4e8e\u7b49\u4e8e10\u65f6break\uff0c\u8f93\u51faNO ANSWER!\u3002\n\n\u8fd9\u91cc\u6ce8\u610f\u4e00\u70b9\uff0c\u7531\u4e8e\u662f\u53cc\u5411\uff0c\u5c31\u8bf4\u660e\u76ee\u6807\u8282\u70b9\u5e94\u8be5\u662f\u53cd\u7740\u641c\uff0c\u6240\u4ee5\u5b57\u4e32\u53d8\u6362\u7684\u89c4\u5219\u4e5f\u8981\u53cd\u8fc7\u6765\u3002\u8fd9\u91cc\u5c31\u4e0d\u7528A\u548cB\u4e86\uff0c\u76f4\u63a5\u5f00\u4e8c\u7ef4\u6570\u7ec4\uff0c\u65b9\u9762\u7edf\u4e00\u8c03\u7528\u3002\n\n\u81f3\u4e8e\u5224\u65ad\u76f8\u9047\uff08\u5f97\u89e3\uff09\uff0c\u6211\u9009\u62e9\u4e86\u6bcf\u751f\u6210\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u5c31\u5bf9\u53e6\u4e00\u961f\u5217\u4ece\u5934\u5230\u5c3e\u626b\u4e00\u904d\uff0c\u6709\u76f8\u540c\u7684\u5c31\u8f93\u51fa\u7b54\u6848return 0\u3002\u597d\u5728\u6d1b\u8c37\u795e\u673a\u8dd1\u5f97\u6bd4\u8f83\u5feb\uff082333\uff09...\n\n\u4ee5\u4e0a\u7b97\u6cd5\u6216\u8bb8\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u4f46\u4e5f\u662f\u4e00\u79cd\u65b0\u7684\u7b56\u7565\uff0c\u6216\u8005\u8bf4\u4e00\u79cd\u65b0\u7684\u5c1d\u8bd5\u3002\n\n\u4ee5\u4e0b\u4ee3\u7801\u3002\n\n\n\n    \n    \n    \n      \n    \n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct duilie{\n    char s[400]={0};\n    int len;\n    int g;\n}h[2][200000];//\u624b\u52a8\u6a21\u62df\u961f\u5217 \nint head[2],tail[2]={1,1};//\u53cc\u5411BFS \nstruct change{\n    char a[2][400];\n    int len[2];\n}l[10];//\u8fd9\u91cc\u662f\u53d8\u6362\u89c4\u5219 \nint n=1;\nbool key;\nvoid new_born(int x,int start,int num)//\u67d0\u4e00\u961f\u5217\u65b0\u751f\u6210\u8282\u70b9\uff0c\u53d8\u5316\u521d\u4f4d\u7f6e\uff0c\u53d8\u6362\u89c4\u5219\u7f16\u53f7 \n{\n    tail[x]++;\n    h[x][tail[x]].len=h[x][head[x]].len-l[num].len[x]+l[num].len[1-x];//\u8ba1\u7b97\u51fa\u65b0\u751f\u6210\u8282\u70b9\u7684\u5b57\u7b26\u4e32\u957f\u5ea6 \n    h[x][tail[x]].g=h[x][head[x]].g+1;\n    for (int i=0;i<start;i++)\n      h[x][tail[x]].s[i]=h[x][head[x]].s[i];//\u5148\u62fc\u53d8\u6362\u4e4b\u524d\u7684\u4f4d\u7f6e \n    for (int i=0;i<l[num].len[1-x];i++)\n      h[x][tail[x]].s[i+start]=l[num].a[1-x][i];//\u53d8\u6362\u7684\u4f4d\u7f6e\n    for (int i=start+l[num].len[1-x];i<h[x][tail[x]].len;i++)\n      h[x][tail[x]].s[i]=h[x][head[x]].s[i+l[num].len[x]-l[num].len[1-x]];//\u518d\u62fc\u53d8\u6362\u4e4b\u540e\u7684\u4f4d\u7f6e\n    //printf(\"%d\u961f\u5217\u6269\u5c55\uff0chead=%d  tail=%d g=%d \u5b57\u4e32 \",x,head[x],tail[x],h[x][tail[x]].g);\n    //for (int i=0;i<h[x][tail[x]].len;i++)\n       //printf(\"%c\",h[x][tail[x]].s[i]);\n    //printf(\"\\n\\n\");\n    //\u4e0a\u9762\u8fd9\u4e00\u6bb5\u53ef\u4ee5\u7528\u4e8e\u68c0\u9a8cBFS\u8fc7\u7a0b \n    for (int k=1;k<=tail[1-x];k++)\n      if ( strcmp( h[x][tail[x]].s , h[1-x][k].s ) ==0 ) //\u5b57\u7b26\u4e32\u5224\u7b49 \n      {\n          printf(\"%d\\n\",h[x][tail[x]].g+h[1-x][k].g);\n          key=1;\n          break;\n      }\n}\nvoid BFS(int x)//\u53cc\u5411BFS \n{\n    head[x]++;\n    for (int i=0;i<h[x][head[x]].len;i++)//\u679a\u4e3e\u5f85\u53d8\u6362\u5b57\u4e32\u4f4d\u7f6e \n    {\n        for (int j=1;j<=n;j++)//\u679a\u4e3e\u53d8\u6362\u89c4\u5219 \n        {       //\u5982\u679c\u53d8\u6362\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u548c\u539f\u5b57\u7b26\u4e32\u7684\u90e8\u5206\u76f8\u540c\uff0c\u5219\u53ef\u66ff\u6362\n            if ( strncmp( l[j].a[x] , h[x][head[x]].s+i , l[j].len[x] ) ==0 )\n              new_born(x,i,j);//x\u961f\u5217\u65b0\u751f\u6210\u8282\u70b9\uff0c\u53d8\u5316\u521d\u4f4d\u7f6e\u5728i\uff0c\u53d8\u6362\u89c4\u5219j \n            if (key) return ;\n        }\n    }\n}\nint main()\n{\n    //freopen(\"zcbh.in\",\"r\",stdin);\n    //freopen(\"zcbh.out\",\"w\",stdout);\n    scanf(\"%s%s\",h[0][1].s,h[1][1].s);\n    h[0][1].len=strlen(h[0][1].s);\n    h[1][1].len=strlen(h[1][1].s);\n    while ( scanf(\"%s%s\",l[n].a[0],l[n].a[1])==2 )\n    {\n        l[n].len[0]=strlen(l[n].a[0]);\n        l[n].len[1]=strlen(l[n].a[1]);\n        n++;\n    }\n    n--;\n    while (head[0]<tail[0]&&head[1]<tail[1])\n    {\n        if (h[0][head[0]].g+h[1][head[1]].g>=10) break;//10\u6b65\u5185\u672a\u51fa\u89e3\u9000\u51fa \n        BFS(0);\n        if (key) break;\n        BFS(1);\n        if (key) break;\n    }\n    if (!key) printf(\"NO ANSWER!\");\n    return 0;\n}\n```",
        "postTime": 1500041518,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u76ee\u6570\u636e\u5e76\u4e0d\u662f\u5f88\u5f3a\uff0c\n\n\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u5373\u53ef\uff08NOIP\u826f\u5fc3\u9898\u76ee\uff09\n\n\uff08\u5982\u679c\u6570\u636e\u5f88\u5f3a\u7684\u8bdd\u662f\u4e0d\u662f\u8981\u7528AC\u81ea\u52a8\u673a\uff1f\uff1f\uff1f\uff09\n\n\u6bcf\u6b21\u679a\u4e3e\u5f53\u524d\u4e32\n\n\u679a\u4e3e\u6bcf\u4e00\u79cd\u53d8\u5e7b\u65b9\u6848\n\n\u67e5\u8be2\u662f\u5426\u53ef\u884c\n\n\u7136\u540e\u53d8\u5e7b\u4e00\u4e0b\uff0c\u653e\u5230\u961f\u5217\u4e4b\u4e2d\u7ee7\u7eed\u5e7f\u641c\n\n\uff08\u7528\u5e7f\u641c\u662f\u5f88\u660e\u663e\u7684\uff0c\u56e0\u4e3a\u8981\u6c42\u6700\u5c0f\u6b65\u6570\uff09\n\n\u5224\u91cd\u53ef\u4ee5\u4f7f\u7528map\uff08C++STL\u771f\u597d\u7528\uff09\n\n\u800c\u5bf9\u4e8e\u53d8\u5e7b\u540e\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u53ef\u4ee5\u4f7f\u7528string\u4e2d\u7684substr\u5c31\u4f1a\u975e\u5e38\u65b9\u4fbf\n\n\u5176\u4ed6\u7684\u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<map>\n#include<queue>\n#include<algorithm>\nusing namespace std;\n#define MAX 5000\nstruct Node\n{\n      string s;\n      int st;\n};\nmap<string,int> M;\nstring A,B,a[MAX],b[MAX];\nint n=0;\nqueue<Node> Q;\nint cnt=1;\nint main()\n{ \n    cin>>A;cin>>B;\n    while(cin>>a[++n])\n          cin>>b[n];\n    n--;\n    M[A]=0;\n    Q.push((Node){A,0});\n    while(!Q.empty())\n    {\n                 string s=Q.front().s;\n                 int St=Q.front().st,l=s.length();\n                 if(St==11)break;\n                 Q.pop();\n                 for(int i=1;i<=n;++i)//\u68c0\u67e5\u6240\u6709\u89c4\u5219\n              {\n                      int l2=a[i].length();\n                      for(int j=0;j<=l-l2;++j)\n                      {\n                               if(s.substr(j,l2)==a[i])//\u5339\u914d\u89c4\u5219\n                             {\n                                     string ss;ss.clear();\n                                     if(j!=0)ss+=s.substr(0,j);\n                                     ss+=b[i];\n                                     if(j+l2<l)ss+=s.substr(j+l2,l-l2-j+1);//\u62fc\u5408 \n                                     if(M.find(ss)==M.end())//\u6ca1\u6709\u88ab\u7528\u8fc7 \n                                     {\n                                            M[ss]=St+1;\n                                            Q.push((Node){ss,St+1});\n                                     }\n                                     if(ss==B)//\u627e\u5230\u7ed3\u679c \n                                     {\n                                            cout<<St+1<<endl;\n                                            return 0;\n                                     }\n                             }\n                      }\n              }\n    }\n    cout<<\"NO ANSWER!\"<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1500034164,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "BFS\u904d\u5386\uff0c\u4ee3\u7801\u6ce8\u91ca\u5f88\u8be6\u7ec6\n\n\n\n    \n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<string>\n#include<cstring>\n#include<map>\nusing namespace std;\nint pos=1,lens[7],lent[7];//\u89c4\u5219\u603b\u6570\uff0c\u957f\u53d8\u6362\u7684\u4e24\u65b9\u7684\u5ea6\uff08s\uff0ct\uff09 \nstring A,B,rules[7],rulet[7];//\u539f\u4ee5\u53ca\u9700\u6c42\u5b57\u7b26\u4e32\uff0c \u53d8\u6362\u7684\u4e24\u65b9\u7684\u5185\u5bb9\uff08s\uff0ct\uff09 \nqueue<string> Q;//bfs\u961f\u5217 \nmap<string,int>ans;//\u67d0\u4e2a\u5b57\u7b26\u4e32\u662f\u7ecf\u5386\u4e86\u51e0\u8f6e\u53d8\u6362 \nstring change(string a,string b,int start,int l1,int l2)//\u5c06\u5f85\u53d8\u6362\u5b57\u7b26\u4e32\u6309\u89c4\u5219\u53d8\u6362 \n{            //\u5f85\u53d8\u6362\uff0c\u89c4\u5219t\uff0c\u5f85\u53d8\u6362\u5b57\u7b26\u4e32\u5f00\u59cb\u53d8\u6362\u4f4d\u7f6e\uff0c\u89c4\u5219s\u3001t\u7684\u957f\u5ea6 \n    int now=0;//\u73b0\u5728\u5199\u5165string\u7684\u7b2c\u51e0\u4e2a\u5b57\u7b26 \n    string buf;         //\u4e0d\u53ef\u4ee5\u5199char* buf\uff0c\u5426\u5219\u4f1a\u975e\u6cd5\u8bbf\u95ee\u5185\u5b58\uff01\uff01\uff01cahr*\u5f62\u5f0f\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4e00\u822c\u5199char buf\u3010INF\u3011\uff1b \n    buf.resize(250);//\u4e00\u5b9a\u8981resize\uff0c\u9ed8\u8ba4\u662f\u957f\u5ea6\u4e3a0 \uff0c\u8fd8\u6709\u9898\u76ee\u8bf4\u6240\u6709\u5b57\u7b26\u4e32\u957f\u5ea6<=20\uff0c\u4f46\u4e2d\u95f4\u641c\u7d22\u5f88\u53ef\u80fd\u5f88\u5927\u800cRE \n    //\u753b\u4e2a\u793a\u610f\u56fe \n    for(;now<start;now++)buf[now]=a[now];//\u6362\u4e4b\u524d \n    for(int i=0;i<l2;i++)buf[now++]=b[i];//\u6362\u4e4b\u4e2d \n    for(int i=0;i<a.length()-(start+l1);i++)buf[now++]=a[start+l1+i];//\u6362\u4e4b\u540e \n    buf.resize(a.length()+l2-l1); //\u6ce8\u610f\u5220\u53bb\u540e\u9762\u7684\u7a7a\u5b57\u7b26\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u5b57\u7b26\u4e32\u6bd4\u5bf9\uff08\u4e00\u5b9a\u5931\u8d25\uff09 \n    return buf;\n}\nbool ok(string a,string b,int k,int h)//\u662f\u5426\u80fd\u5339\u914d\u4e0a \n{        //\u5f85\u5339\u914d\uff0c\u89c4\u5219s\uff0c\u5f85\u5339\u914d\u7684\u5339\u914d\u5f00\u59cb\u4f4d\u7f6e \uff0c\u89c4\u5219s\u957f\u5ea6 \n    for(int i=0;i<h;i++)if(a[k+i]!=b[i])return false;//\u9010\u5b57\u7b26\u6bd4\u8f83    \n    return true;\n}\nvoid bfs()\n```\n{//\u4e00\u5b9a\u5207\u8bb0char\\*\u8868\u793a\u5b57\u7b26\u4e32\u65f6\u4e0d\u80fd\u8d4b\u503c\u3001\u6bd4\u8f83 \uff0c\u8fd9\u79cd\u9898\u6700\u597d\u7528string\uff0c\u5373\u4f7f\u5b83\u5f88\u6162\uff0c\u7b97\u6cd5\u6b63\u786e\u7684\u8bdd\u4e0d\u4f1a\u5dee\u592a\u591a\uff0c\u9000\u4e00\u6b65\u6765\u8bf4\u5c31\u7b97\nans[A]=0;//\u8bb0\u4f4f\u8fb9\u754c   //map<char\\*,int>\u7684key\u662f\u5730\u5740\u800c\u975e\u5b57\u7b26\u4e32\uff0c\u5e94\u7528string\u3002  \u6162\u800cTLE\u4e5f\u4e0d\u4f1a\u6263\u592a\u591a\u5206\uff0c\u800c\u7528char\\*\u6709\u7206\u96f6\u98ce\u9669\uff01\n\nfor(int i=1;i<=pos;i++){lens[i]=rules[i].length();lent[i]=rulet[i].length();}\n\n    \n        \n\n    \n```cpp\n    Q.push(A);\n    if(A==B){cout<<0<<\"\\n\";return;}  //\u4e00\u5b9a\u6ce8\u610f\u8fb9\u754c\u5224\u65ad \n    while(!Q.empty())\n    {\n        string s=Q.front(); Q.pop();             \n        if(ans[s]==10)break;//\u6269\u5c55\u540e\u4e3a11 \n        int len=s.length();\n        for(int rule=1;rule<=pos;rule++)//\u904d\u5386\u89c4\u5219 \n        {\n            for(int i=0;i<=len-lens[rule];i++)//\u9010\u5b57\u7b26\u68c0\u67e5 \n              if(ok(s,rules[rule],i,lens[rule]))\n                {string t=change(s,rulet[rule],i,lens[rule],lent[rule]); if(ans.count(t))continue; ans[t]=ans[s]+1; Q.push(t); if(t==B){cout<<ans[t]<<\"\\n\";return;}}\n        }                   //bfs/dfs\u4e00\u5b9a\u5207\u8bb0\u5224\u91cd\uff0c\u4ee5\u524d\u505a\u8fc7\u7684\u5343\u4e07\u4e0d\u80fd\u518d\u91cd\u590d\uff0c\u5426\u5219T\uff08n\uff09\u5927\u5927\u63d0\u9ad8\uff0c\u8fd8\u4f1a\u9519\u8bef\uff01\uff01\uff01\uff08\u8fd9\u9053\u5c31\u662f\uff09 \n                            //bfs\u5224\u91cd\u53ea\u9700\u5728\u5f85\u5165\u961f\u65f6\u5224\u4e00\u6b21\uff0c\u51fa\u961f\u65f6\u4e0d\u9700\u5224\uff0c\u56e0\u4e3a\u961f\u91cc\u6240\u6709\u7684\u90fd\u662f\u4ee5\u524d\u6ca1\u6709\u51fa\u73b0\u7684 \n    }                       //\u5224\u91cd\u4e0d\u80fd\u4ec5\u4ec5\u662f\u5224\u961f\u91cc\u662f\u5426\u6709\uff08\u90a3\u662fspfa\uff09\uff0c\u800c\u5e94\u5224\u4ee5\u524d\u662f\u5426\u641c\u7d22\u5230\u8fc7 \n    cout<<\"NO ANSWER!\\n\";   //Q\uff1a\u90a3\u5982\u679c\u961f\u91cc\u5728\u524d\u9762\u7684\u9a6c\u4e0a\u5c31\u4f1a\u641c\u7d22\u5230\u961f\u91cc\u540e\u9762\uff08\u73b0\u5728\u5f85\u5165\u961f\u7684\uff09\u7684\uff0c\u90a3\u73b0\u5728\u5f85\u5165\u961f\u7684\u8fd9\u4e2a\u8981\u4e0d\u8981\u5165\u961f\uff1f\n}                           //A\uff1a\u8981\u3002\u56e0\u4e3a\u5165\u961f\u4ee5\u540e\uff0c\u961f\u524d\u7684\u641c\u7d22\u5230\u961f\u540e\u5143\u7d20\u65f6\u4f1a\u5224\u91cd\uff0c\u5c31\u4e0d\u4f1a\u91cd\u590d\u5165\u961f\u4e86\u3002 \nint main()\n{ \n    cin>>A>>B;\n    while(cin>>rules[pos]>>rulet[pos])pos++; //\u8fd9\u7c7b\u8f93\u5165\u4e0d\u8981\u5224EOF\uff0c\u8981\u7528cin \n    pos--; //\u73b0\u5728POS\u662f\u89c4\u5219\u603b\u6570\uff081~pos\uff09 \n    bfs();\n    return 0;\n}\n```",
        "postTime": 1485752276,
        "uid": 28033,
        "name": "AFreeMan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "//\u6570\u636e\u5f88\u5c0f\uff0c\u6b64\u9898\u53ef\u4ee5\u7528\u8d85\u7ea7\u7206\u641c\uff01\uff01\uff0c\u624b\u5199\u961f\u5217\u4e5f\u5c31\u5f88\u8f7b\u6613\u5c31\u8fc7\u4e86\u3002\u3002\u3002\n\n                \n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nstruct node{\n    char s1[21];\n    char s2[21];\n};\nnode a[50];\nstruct ergedathouder{\n    char sss[25];\n    int bushu;\n};\nergedathouder q[1000000];//\u961f\u5217\nchar s[25],ss[25];\nint cnt;\nbool flagflag;//\u7528\u6765\u5224\u65ad\u6709\u6ca1\u6709\u6210\u529f\u53d8\u6362\nvoid bfs(){\n    strcpy(q[1].sss,s);\u628a\u4e00\u5f00\u59cb\u7684\u503c\u8d4b\u7ed9q[1].sss\n    int f=0,l=1;\n    q[1].bushu=0;\n    while(f<l){\n        f++;\n        if(q[f].bushu>10)continue;//\u5c0f\u526a\u679d\n        int k=strlen(q[f].sss);\n        for(int i=0;i<k;i++){//\u679a\u4e3e\u5f53\u524d\u961f\u5217\u6bcf\u4e00\u4f4d\n            for(int j=1;j<=cnt;j++){//\u679a\u4e3e\u53d8\u6362\u7684\u5b57\u7b26\u4e32\n                bool flag=0;\n                int len=strlen(a[j].s1);\n                int i2=i;\n                for(int u=0;u<len;u++){\n                    if(a[j].s1[u]!=q[f].sss[i2]){\n                        flag=1;\n                        break; \n                    }\n                    i2++;.//\u6bcf\u4e00\u4f4d\u679a\u4e3e\n                }\n                if(!flag){\n                int lenth=strlen(a[j].s2);\n                ++l;\n                for(int u=0;u<i;u++){\n                    q[l].sss[u]=q[f].sss[u];\n                }\n                //\u628a\u53d8\u6362\u524d\u7684\u503c\u8d4b\u7ed9q[l].sss\n                for(int u=i;u<lenth+i;u++){\n                    q[l].sss[u]=a[j].s2[u-i];\n                }\n                               //\u628a\u53d8\u6362\u7684\u503c\u8d4b\u8fc7\u53bb\n                for(int u=lenth+i,v=i+len;v<k;u++,v++){\n                    q[l].sss[u]=q[f].sss[v];\n```\n}//\u6700\u540e\u628a\u539f\u5148\u540e\u9762\u6ca1\u6709\u53d8\u6362\u7684\u63a5\u4e0a\u53bb\n//\u4ee5\u4e0a\u4e09\u4e2a\u53d8\u6362\u4e0d\u7528\u62c5\u5fc3\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u66b4\u529bfor\u5faa\u73af\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n                int lenlen=strlen(q[l].sss);\n                q[l].bushu=q[f].bushu+1;\n                if(strcmp(q[l].sss,ss)==0){//\u5224\u65ad\n                    if(q[l].bushu<=10)\n                    printf(\"%d\\n\",q[l].bushu);\n                    else {\n                        printf(\"NO ANSWER!\\n\");\n                    }\n                    flagflag=1;\n                    return ;\n                }\n            }\n            }\n        }\n    }\n}\nint main(){\n    int i,j,k,m,n;\n    scanf(\"%s\",&s);\n    scanf(\"%s\",&ss);\n    while(scanf(\"%s\",a[++cnt].s1)!=EOF){\n        scanf(\"%s\",a[cnt].s2);\n    }\n    cnt--;\n    bfs();\n    if(!flagflag){\n        printf(\"NO ANSWER!\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1481429732,
        "uid": 18421,
        "name": "ergeda",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u641c\u7d22\u90fd\u662f\u7384\u5b66\u3002\n\n\u6c42\u6700\u77ed\u8def\u7684\u8bdd\uff0cBFS\u6bd4\u8f83\u9760\u8c31\n\n\u7136\u540e\u968f\u4fbf\u52a0\u4e2a\u526a\u679d\u5c31\u597d\u4e86\uff1a\u5982\u679c\u641c\u7d22\u8fc7\u8fd9\u4e2a\u4e32\u5c31\u4e0d\u5728\u7ee7\u7eed\u641c\u7d22\uff08\u7528map\u5224\u65ad\uff09\n\n\u5176\u5b9e\u597d\u50cf\u7528\u4e0d\u5230\u53cc\u5411\u5e7f\u641c\uff0c\u4e0d\u8fc7\u53cc\u5411\u5e7f\u641c\u771f\u662f\u5feb\u3002\u3002\u3002\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <map>\n#include <queue>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nstruct item\n{\n    string str;\n    int depth;\n};\nstring A,B;\nstring from[10],to[10];\nint idx = 0;\nint ans = INF;\nqueue<item> q;\nmap<string,bool> m;\nstring check( const string &str , int i , int j )\n{\n    if( i+from[j].size() > str.size() ) return string(\"\");\n    for( int k = 0 ; k < from[j].size() ; ++k )\n    {\n        if( str[i+k] != from[j][k] ) return string(\"\");\n    }\n    string rst = str.substr(0,i);\n    rst.append(to[j]);\n    rst.append( str.substr( i+from[j].size() ) );\n    return rst;\n}\nvoid bfs()\n{\n    q.push( (item){A,0} );\n    while( !q.empty() )\n    {\n        item thing = q.front(); q.pop();\n        if( thing.str == B )\n        {\n            ans = thing.depth;\n            return;\n        }\n        if( thing.depth == 10 ) continue;\n        if( m.count(thing.str) ) continue;\n        m[thing.str] = true;\n        string nxt;\n        for( int i = 0 ; i < thing.str.size() ; ++i )\n        {\n            for( int j = 0 ; j < idx ; ++j )\n            {\n                if( (nxt=check(thing.str,i,j)) != string(\"\") )\n                {\n                    q.push( (item){nxt,thing.depth+1} );\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    cin >> A >> B;\n    while( cin >> from[idx] >> to[idx] ) idx++;\n    bfs();\n    if( ans == INF ) cout << \"NO ANSWER!\" << endl;\n    else cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1478430362,
        "uid": 8212,
        "name": "__stdcall",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8001\u5c11\u7686\u5b9c\uff0c\u901a\u4fd7\u6613\u61c2\uff0c\u53cc\u5411\u5e7f\u641c\n\n\n\n\n\n\n\n\n\n```cpp\nConst maxn=10000; \n      maxq=100000; \nVar a:array[0..1,0..maxn]of string;//\u53d8\u6362\u89c4\u5219 \n    q:array[0..1,0..maxq]of string;//\u4e24\u4e2a\u961f\u5217 \n    step:array[0..1,0..maxn]of longint;//\u6b65\u6570\n    head,tail:array[0..1]of longint;//\u4e24\u4e2a\u961f\u5217\u7684\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488 \n    int,aim,s1,s2,s:string; \n    n:longint; \nProcedure split(s:string);//\u5c06\u76ee\u6807\u72b6\u6001\u548c\u521d\u59cb\u72b6\u6001\u8bb0\u5f55\u4e0b\u6765 \nvar k:longint; \nbegin \n  k:=pos(' ',s); \n  s1:=copy(s,1,k-1); \n  s2:=copy(s,k+1,length(s)-k); \nend; \nProcedure init; //\u8bfb\u5165\nbegin \n  readln(s); \n  split(s); \n  int:=s1;//\u521d\u59cb\u72b6\u6001\n  aim:=s2;//\u76ee\u6807\u72b6\u6001 \n  n:=0; \n  while not eof do \n  begin \n    readln(s); \n    if s='' then exit; \n    inc(n); \n    split(s); \n    a[0,n]:=s1;//\u521d\u59cb\u7684\u53ef\u4ee5\u8f6c\u6362\u7684\u72b6\u6001\n    a[1,n]:=s2;//\u7531\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e00\u6b65\u5f97\u5230\u7684\u76ee\u6807\u72b6\u6001\n  end; \nend; \nFunction vis(s:string;t:byte):boolean; \nvar i:longint; \nbegin \n  vis:=false; \n  for i:=1 to tail[t] do//\u904d\u5386\u961f\u5217\n  if q[t,i]=s then exit(true);//\u5982\u679c\u627e\u5230\u76ee\u6807\u72b6\u6001\u5c31\u8fd4\u56de\u503ctrue \nend; \nProcedure print(k:longint); \nbegin \n  writeln(k);//\uff08\u5982\u679c\u5408\u6cd5\uff09\u8f93\u51fa\u6700\u5c11\u53d8\u6362\u6b65\u6570 \n  halt; \nend; \nProcedure check(t:byte); \nvar i:longint; \nbegin \n  for i:=1 to tail[1-t] do //\u904d\u5386\u961f\u5217\uff08\u5f53\u524d\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u961f\u5217\u91cc\uff09\n  if q[1-t,i]=q[t,tail[t]] then //\u5982\u679c\u4e24\u4e2a\u5e7f\u641c\u78b0\u5934\u4e86\n  print(step[1-t,i]+step[t,tail[t]]);//\u603b\u7684\u6b65\u6570\u5c31\u662f\u4e24\u4e2a\u5e7f\u641c\u6b65\u6570\u4e4b\u548c \nend; \nProcedure bfs(t:byte); //\u5e7f\u641c\uff08t=0\u662f\u6b63\u7740\u641c\uff0ct=1\u662f\u53cd\u7740\u641c\uff09\nvar i,j,k:longint; \n    pre,tmp:string; \nbegin \n  inc(head[t]);//\u5934\u6307\u9488\u52a0\u4e00\n  pre:=q[t,head[t]];//\u5165\u961f \n  for i:=1 to n do//\u904d\u5386\u53d8\u6362\u89c4\u5219 \n  begin \n    k:=length(a[t,i]); \n    for j:=1 to length(pre)-k+1 do//\u6309\u7167\u53d8\u6362\u89c4\u5219\u6269\u5c55\u72b6\u6001 \n    begin \n      if copy(pre,j,k)=a[t,i] then//\u5982\u679c\u89c4\u5219\u7b26\u5408 \n      begin \n        tmp:=copy(pre,1,j-1)+a[1-t,i]+copy(pre,j+k,length(pre)-j-k+1);//\u6269\u5c55\u4e0b\u4e00\u4e2a\u72b6\u6001 \n        if not vis(tmp,t) then//\u5982\u679c\u6ca1\u6709\u627e\u5230\u76ee\u6807\u72b6\u6001 \n        begin \n          inc(tail[t]); \n          q[t,tail[t]]:=tmp; \n          step[t,tail[t]]:=step[t,head[t]]+1;//\u6b65\u6570++ \n        end; \n        check(t);//\u68c0\u67e5\u662f\u5426\u7ec8\u6b62\u641c\u7d22\uff08\u6ce8\u610f\u4f4d\u7f6e\uff0c\u4e0d\u7136\u5c31T\u4e86\uff09\n      end; \n    end; \n  end; \nend; \nProcedure doublebfs;//\u7528\u6570\u7ec4\u4e0b\u6807\u6765\u533a\u5206\u4e24\u4e2a\u961f\u5217\u548c\u4e24\u4e2a\u5e7f\u641c \nbegin \n  head[0]:=0;//\u7b2c\u4e00\u4e2a\u961f\u5217\u7684\u5934\u6307\u9488\n  head[1]:=0;//\u7b2c\u4e8c\u4e2a\u961f\u5217\u7684\u5934\u6307\u9488\n  tail[0]:=1;//\u7b2c\u4e00\u4e2a\u961f\u5217\u7684\u5c3e\u6307\u9488\n  tail[1]:=1;//\u7b2c\u4e8c\u4e2a\u961f\u5217\u7684\u5c3e\u6307\u9488 \n  q[0,1]:=int;//\u521d\u59cb\u72b6\u6001\n  q[1,1]:=aim;//\u76ee\u6807\u72b6\u6001\n  step[0,1]:=0;//\u6b65\u6570\n  step[1,1]:=0;//\u6b65\u6570 \n  while (head[0]<tail[0])and(head[1]<tail[1])do \n  if tail[1]<tail[0] then \n  bfs(1) else bfs(0);//\u4fdd\u6301\u4e24\u4e2a\u5e7f\u641c\u7684\u540c\u6b65 \nend; \nBegin \n  init; \n  doublebfs; \n  writeln('NO ANSWER!'); \nEnd.\n```",
        "postTime": 1477547882,
        "uid": 9538,
        "name": "\u5434\u56fd\u94e8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "                \n                \n```cpp\n//\u4e0d\u4f7f\u7528map\u6620\u5c04\uff0c\u4f1a\u5bfc\u81f4\u8d85\u65f6\u4e00\u4e2a\u70b9\uff0c\u5f9780\u5206 \n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <map>\n#include <string>\nusing namespace std;\nint cnt=1;\nbool flag=0;\nstring a, b;\nstring a1[8],b1[8];//\u5b58\u653e\u53d8\u6362\u5b50\u4e32 \nstruct node{\n    string a;\n    int step;\n};\nqueue<node> q1;\nmap<string,bool> map1; //\u9632\u6b62\u91cd\u590d\u5b50\u4e32\u5165\u961f\u5217\uff0c\u51cf\u5c11\u5339\u914d\u6b21\u6570 \nbool bfs(){\n    q1.push((node){a,0});//\u5165\u961f \n    map1[a] = 1;\n    while(!q1.empty()){\n        node t1 = q1.front();\n        q1.pop();\n        if(t1.step > 10) return 0;\n        if(t1.a == b){printf(\"%d\", t1.step);return 1;}\n        string t = t1.a;\n        int len = t.length();\n        string nxt;\n        for(int i = 1; i <= cnt; i ++){\n            int len1 = a1[i].length();\n            int k; \n            for(int j=0;j<len;j++){//\u67e5\u627e\u5b50\u4e32\u53ef\u4f7f\u7528substr\u51fd\u6570 \n            //    for(k = 0; k < len1; k ++)\n            //        if(t[j+k] != a1[i][k]) break;\n            //    if(k == len1){\n                if(t.substr(j,len1)==a1[i]){\n                    nxt=t;\n                    nxt.replace(j,len1,b1[i]);//\u66ff\u6362\u5b50\u4e32\u51fd\u6570replace \n                    if(!map1[nxt]) //\u9632\u6b62\u8d85\u65f6 \n                    {\n                      map1[nxt] = 1;\n                      q1.push((node){nxt, t1.step+1});//\u4e0d\u91cd\u590d\uff0c\u5165\u961f \n                    } \n                }\n            }\n        }\n    }\n    return 0;\n}\nint main(){\n    cin >> a >> b;\n    while(cin >> a1[cnt] >> b1[cnt]) cnt ++;//cnt\u662f\u53d8\u6362\u5b50\u4e32\u7684\u4e2a\u6570 \n    cnt --;\n    if(!bfs()) printf(\"NO ANSWER!\\n\");\n    return 0;\n}\n```",
        "postTime": 1476605338,
        "uid": 20547,
        "name": "Akashicw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\n\n\n\n            \n            \n            \n\n```cpp\n//\u53cc\u5411BFS\uff0c \u4e24\u4e2aMap\u53bb\u91cd\u5224\u65ad\n#include <iostream>\n#include <map>\n#include <string>\n#include <cstdlib>\n#define MAX 1000000\nusing namespace std;\nstring A, B;\nstring s_change[7][2], Front[MAX], Back[MAX];//6\u79cd\u53d8\u5316\u89c4\u5f8b\uff0c \u4ece\u524d\u5f80\u540eBFS\u548c\u4ece\u540e\u5f80\u524dBFS\nint ans = 1, head_Front = 1, tail_Front = 1, head_Back = 1, tail_Back = 1, tot = 0; //\u5bf9\u5e94\u6307\u9488\nmap <string, int> Map_Front;//\u4e24\u4e2aMap\nmap <string, int> Map_Back;\nvoid bfs()\n{\n    tot++;//10\u6b21\u5c31\u7ed3\u675f\n    string s, s_replace;\n    int head, tail;\n    head = head_Front; tail = tail_Front;//\u8c03\u6574\u6307\u9488\n    for(int i = head; i <= tail; ++i)\n        for(int j = 1; j <= ans; ++j)//\u53d8\u6362\u79cd\u6570\n        {\n            int change_Front = 0;\n            while(change_Front != -1)//\u6bcf\u4e2a\u5355\u8bcd\u4e2d\u53ef\u4ee5\u4f9b\u66ff\u6362\u7684\u5b57\u4e32\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\n            {\n                s_replace = Front[i];\n                change_Front = s_replace.find(s_change[j][0], change_Front);// \u67e5\u627e\n                if(change_Front >= 0)\n                {\n                    s = s_replace.replace(change_Front, s_change[j][0].length(), s_change[j][1]);//\u66ff\u6362\n                    if(Map_Front[s] == 0)//\u526a\u679d\uff0c \u5982\u679c\u51fa\u73b0\u8fc7\u4e0d\u8fdb\u5165\u961f\u5217\n                    {\n                        if(Map_Back[s] != 0)//\u5982\u679c\u80fdMeet in the Middle\uff0c \u8f93\u51fa\n                        {\n                            cout << tot * 2 - 1;\n                            return;\n                        }\n                        Front[++tail_Front] = s;//\u52a0\u5165\u961f\u5217\n                        Map_Front[s] = 1;//\u6807\u8bb0\u51fa\u73b0\n                    }\n                }\n                if(change_Front != -1) change_Front = change_Front + s_change[j][1].length();//\u5bfb\u627e\u4e0b\u4e00\u4e2a\u5b57\u4e32\n            }\n        }\n    head_Front = tail + 1;\n    head = head_Back; tail = tail_Back;//\u540c\u4e0a\n    for(int i = head; i <= tail; ++i)\n        for(int j = 1; j <= ans; ++j)\n        {\n            int change_Back = 0;\n            while(change_Back != -1)\n            {\n                s_replace = Back[i];\n                change_Back = s_replace.find(s_change[j][1], change_Back);\n                if(change_Back >= 0)\n                {\n                    s = s_replace.replace(change_Back, s_change[j][1].length(), s_change[j][0]);\n                    if(Map_Back[s] == 0)\n                    {\n                        if(Map_Front[s] != 0)\n                        {\n                            cout << tot * 2;\n                            return;\n                        }\n                        Back[++tail_Back] = s;\n                        Map_Back[s] = 1;\n                    }\n                }\n                if(change_Back != -1) change_Back = change_Back + s_change[j][0].length();\n            }\n        }\n    head_Back = tail + 1;\n    /*for(int i = head_Front; i <= tail_Front; ++i)\n        cout << Front[i] << endl;\n    cout << tot << endl << endl << endl;\n    for(int i = head_Back; i <= tail_Back; ++i)\n        cout << Back[i] << endl;\n    system(\"pause\");\n    system(\"CLS\");*/\n    if(tot == 10)//10\u6b21\u4e3a\u9650\n    {\n        cout << \"NO ANSWER!\";\n        return;\n    }\n    bfs();\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin >> A >> B;\n    while(cin >> s_change[ans][0] >> s_change[ans][1]) ans++;//\u8f93\u5165\n    ans--;\n    Map_Front[A] = 1;//Map\u8bb0\u5f55\n    Map_Back[B] = 1;\n    Front[1] = A;//\u52a0\u5165\u961f\u5217\n    Back[1] = B;\n    bfs();//\u5f00\u59cbBFS\n    return 0;\n}\n```",
        "postTime": 1473062400,
        "uid": 6781,
        "name": "\u4e03\u5341\u4e03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\n\n\n    \n        \n        \n\n    \n\n\n```cpp\n#include<string>\n#include<iostream>\n#include<map>\n#include<queue>\nusing namespace std;\nint i,j,n=1;\nstring sa,sb,bh[11][2];//string\u662f\u7c7b\uff0c\u7b2c\u4e8c\u7ef4\u4ece1\u5f00\u59cb \nstruct node{\n    string s;\n    int step;\n};\nqueue<node>q;\nmap<string,int> visit;\nvoid init()\n{\n    cin>>sa>>sb;\n    while (cin>>bh[n][1]>>bh[n][2]) n++;\n    n--;\n}\nvoid work()\n{\n    node e;//\u8d77\u59cb\u72b6\u6001 \n    e.step=0;\n    e.s=sa;\n    q.push(e);//\u628a\u8d77\u59cb\u72b6\u6001\u52a0\u8fdb\u961f\u5217 \n    while (!q.empty())\n    {\n        node t;\n        t=q.front();//\u53d6\u5934\u5143\u7d20 \n        q.pop(); //\u5f39\u51fa     \n        if (t.s==sb && t.step<11)//\u68c0\u67e5\u7ed3\u679c\n        {\n            cout<<t.step;//\u8f93\u51fa \n            return;//\u9000\u51fa\n        }\n        if (visit[t.s]==0)//\u5224\u91cd\uff0cmap\u7684int\u521d\u59cb\u503c\u4e3a0 \n        {\n            visit[t.s]=1;\n            for (i=1;i<=n;i++)//\u5bf9\u6bcf\u79cd\u53d8\u6362 \n            {\n                //cout<<\"pos:\"<<t.s.find(bh[i][1])<<endl;\n                if (t.s.find(bh[i][1])>=0)//\u5982\u679c\u5b58\u5728\u5c31\u7ee7\u7eed \n                {\n                    for (j=t.s.find(bh[i][1])/*\u7b2c\u4e00\u4e2a\u4f4d\u7f6e*/;j>=0/*\u8981\u5b58\u5728*/ && j<=t.s.size()-bh[i][1].size();/*\u4e0d\u80fd\u8d85\u51fa\u8303\u56f4*/j=t.s.find(bh[i][1],j+1)/*\u4e0b\u4e00\u4e2a*/)//\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\n                     {\n                         node w;//\u5c3e\u5143\u7d20\n                        w=t;\n                        w.step++;//\u589e\u52a0\u53d8\u6362\u6b21\u6570 \n                        w.s.replace(j,bh[i][1].size(),bh[i][2]);//\u66ff\u6362 \n                        q.push(w);//\u5165\u961f \n                    }\n                }\n            }\n        }\n    }\n    cout<<\"NO ANSWER!\";    \n}\nint main()\n{\n    init();\n    work();\n    return 0;\n}\n```",
        "postTime": 1471436115,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5927\u4f53\u4e0a\u9700\u8981\u7528\u5e7f\u641c\u89e3\u51b3\uff0c\u7531\u4e8e\u8282\u70b9\u6570\u592a\u591a\uff0c\u9700\u8981\u8003\u8651\u7528\u53cc\u5411\u5e7f\u641c\uff0c\u7136\u540e\u5c31\u662f\u8981\u6ce8\u610f\u5b57\u7b26\u4e32\u7684\u5904\u7406\u3002\u6709\u70b9\u96be\u5ea6\uff0c\u4e0d\u8fc7\u4e0d\u662f\u601d\u7ef4\u4e0a\u7684\u3002\n\n\n\u672c\u9898\u7ed9\u4e86\u6211\u4eec\u4e24\u4e2a\u5b57\u7b26\u4e32A$\u3001B$\u548c\u6700\u591a\u516d\u6761\u53d8\u6362\u89c4\u5219\uff0c\u8981\u6c42\u6211\u4eec\u7528\u8fd9\u7ec4\u53d8\u6362\u89c4\u5219\uff0c\u5c06A$\u53d8\u4e3aB$\u3002\n\n\u56e0\u4e3a\u672c\u9898\u4e0d\u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\uff0c\u4e14\u72b6\u6001\u8f83\u96be\u63cf\u8ff0\uff0c\u6240\u4ee5\u52a8\u6001\u89c4\u5212\u3001\u8d2a\u5fc3\u7b49\u7b97\u6cd5\u90fd\u65e0\u6cd5\u4f7f\u7528\uff0c\u53ea\u597d\u8003\u8651\u641c\u7d22\u3002\n\n\u7528\u6df1\u641c\u8fd8\u662f\u5e7f\u641c\u5462\uff1f\u82e5\u7528\u5e7f\u641c\uff0c\u56e0\u6700\u591a\u67096\u6761\u53d8\u6362\u89c4\u5219\uff0c\u6bcf\u4e2a\u5b57\u4e32\u957f\u5ea6\u4e3a20\uff0c\u6545\u6bcf\u4e2a\u5b57\u4e32\u6700\u591a\u67096\\*20=120\u79cd\u53d8\u6362\u65b9\u6cd5\uff0c\u5982\u679c\u53d810\u6b21\uff0c\u5219\u6700\u591a\u670912010>1020\uff0c\u8fd9\u663e\u7136\u65e0\u6cd5\u5b58\u50a8\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u597d\u8003\u8651\u6df1\u641c\u3002\n\n\u7528\u8fd9\u6837\u6beb\u65e0\u526a\u679d\u7684\u641c\u7d22\u6548\u7387\u662f\u4e0d\u9ad8\u7684\uff0c\u53ef\u4ee5\u52a0\u5165\u4e24\u6761\u526a\u679d\uff0c\u6765\u63d0\u9ad8\u6548\u7387\u3002  \u526a\u679d\u4e00\uff1a\u5f53\u524d\u5f97\u5230\u7684\u4e32\u7684\u957f\u5ea6\u52a0\u4e0a\u89c4\u5219\u4e2d\u589e\u957f\u6700\u957f\u7684\u4e0e\u6240\u5269\u6b65\u6570\u7684\u79ef\uff08\u5373\u6700\u591a\u8fd8\u80fd\u589e\u957f\u7684\u957f\u5ea6\uff09\u8fd8\u5c0f\u4e8e\u76ee\u6807\u4e32\u957f\u5219\u53ef\u51cf\u6389\u3002\u5f53\u524d\u5f97\u5230\u7684\u4e32\u957f\u5ea6\u51cf\u53bb\u89c4\u5219\u4e2d\u51cf\u957f\u6700\u957f\u7684\u4e0e\u6240\u5269\u6b65\u6570\u7684\u79ef\uff08\u5373\u6700\u591a\u80fd\u51cf\u957f\u7684\u957f\u5ea6\uff09\u8fd8\u5927\u4e8e\u76ee\u6807\u4e32\u957f\u5219\u53ef\u51cf\u6389\u3002     \u526a\u679d\u4e8c\uff1a\u53ef\u4ee5\u7ed9\u6269\u5c55\u4e32\u5b9a\u4e00\u4e2a\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5f00\u59cb\u4f4d\u7f6e\u5b9a\u4e3a\u4e0a\u6b21\u6269\u5c55\u7684\u65f6\u5019\u4e0e\u4e4b\u5339\u914d\u7684\u4f4d\u7f6e\uff0c\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u627e\u80fd\u53d8\u6362\u7684\uff0c\u5f00\u59cb\u4f4d\u7f6e\u524d\u9762\u7684\u4e0d\u4f5c\u53d8\u6362\u3002\n\n\u5982 \u5f53\u524d\u4e32\u4e3aabcdabcefg\uff0c \u6709\u89c4\u5219abc\uf0e0efg\uff0c\u5219\u5f53\u524d\u5982\u679c\u628a\u7b2c\u4e00\u4e2a abc\u53d8\u6362\u6210efg\uff0c\u5219\u5c06\u6269\u5c55\u51fa\u6765\u7684\u8282\u70b9\u5f00\u59cb\u4f4d\u7f6e\u5b9a\u4e3a\u7b2c1\u4f4d\uff0c\u5982\u679c\u5f53\u524d\u662f\u628a\u7b2c2\u4e2aabc\u53d8\u6362\u6210efg\uff0c\u5219\u628a\u6269\u5c55\u51fa\u6765\u7684\u8282\u70b9\u5f00\u59cb\u4f4d\u7f6e\u5b9a\u4e3a\u7b2c5\u4f4d\uff0c\u56e0\u4e3a\u5982\u679c\u4e0b\u6b21\u518d\u628a\u7b2c1\u4e2aabc\u53d8\u6362\u6210efg\u7684\u8bdd\u5c31\u4f1a\u548c\u5148\u53d8\u6362\u7b2c1\u4e2a\u518d\u53d8\u6362\u7b2c2\u4e2a\u91cd\u590d\uff0c\u53ef\u4ee5\u526a\u679d\u3002\n\n\u8fd9\u9053\u9898\u52a0\u5165\u8fd9\u4e24\u6761\u526a\u679d\u540e\u901f\u5ea6\u4f1a\u5feb\u5f88\u591a\u3002\n\n\u8fd9\u9898\u5927\u4f53\u4e0a\u9700\u8981\u7528\u5e7f\u641c\u89e3\u51b3\uff0c\u7531\u4e8e\u8282\u70b9\u6570\u592a\u591a\uff0c\u9700\u8981\u8003\u8651\u7528\u53cc\u5411\u5e7f\u641c\uff0c\u7136\u540e\u5c31\u662f\u8981\u6ce8\u610f\u5b57\u7b26\u4e32\u7684\u5904\u7406\u3002\u6709\u70b9\u96be\u5ea6\uff0c\u4e0d\u8fc7\u4e0d\u662f\u601d\u7ef4\u4e0a\u7684\u3002\n\n\n\u672c\u9898\u7ed9\u4e86\u6211\u4eec\u4e24\u4e2a\u5b57\u7b26\u4e32A$\u3001B$\u548c\u6700\u591a\u516d\u6761\u53d8\u6362\u89c4\u5219\uff0c\u8981\u6c42\u6211\u4eec\u7528\u8fd9\u7ec4\u53d8\u6362\u89c4\u5219\uff0c\u5c06A$\u53d8\u4e3aB$\u3002\n\n\u56e0\u4e3a\u672c\u9898\u4e0d\u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\uff0c\u4e14\u72b6\u6001\u8f83\u96be\u63cf\u8ff0\uff0c\u6240\u4ee5\u52a8\u6001\u89c4\u5212\u3001\u8d2a\u5fc3\u7b49\u7b97\u6cd5\u90fd\u65e0\u6cd5\u4f7f\u7528\uff0c\u53ea\u597d\u8003\u8651\u641c\u7d22\u3002\n\n\u7528\u6df1\u641c\u8fd8\u662f\u5e7f\u641c\u5462\uff1f\u82e5\u7528\u5e7f\u641c\uff0c\u56e0\u6700\u591a\u67096\u6761\u53d8\u6362\u89c4\u5219\uff0c\u6bcf\u4e2a\u5b57\u4e32\u957f\u5ea6\u4e3a20\uff0c\u6545\u6bcf\u4e2a\u5b57\u4e32\u6700\u591a\u67096\\*20=120\u79cd\u53d8\u6362\u65b9\u6cd5\uff0c\u5982\u679c\u53d810\u6b21\uff0c\u5219\u6700\u591a\u670912010>1020\uff0c\u8fd9\u663e\u7136\u65e0\u6cd5\u5b58\u50a8\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u597d\u8003\u8651\u6df1\u641c\u3002\n\n\u7528\u8fd9\u6837\u6beb\u65e0\u526a\u679d\u7684\u641c\u7d22\u6548\u7387\u662f\u4e0d\u9ad8\u7684\uff0c\u53ef\u4ee5\u52a0\u5165\u4e24\u6761\u526a\u679d\uff0c\u6765\u63d0\u9ad8\u6548\u7387\u3002  \u526a\u679d\u4e00\uff1a\u5f53\u524d\u5f97\u5230\u7684\u4e32\u7684\u957f\u5ea6\u52a0\u4e0a\u89c4\u5219\u4e2d\u589e\u957f\u6700\u957f\u7684\u4e0e\u6240\u5269\u6b65\u6570\u7684\u79ef\uff08\u5373\u6700\u591a\u8fd8\u80fd\u589e\u957f\u7684\u957f\u5ea6\uff09\u8fd8\u5c0f\u4e8e\u76ee\u6807\u4e32\u957f\u5219\u53ef\u51cf\u6389\u3002\u5f53\u524d\u5f97\u5230\u7684\u4e32\u957f\u5ea6\u51cf\u53bb\u89c4\u5219\u4e2d\u51cf\u957f\u6700\u957f\u7684\u4e0e\u6240\u5269\u6b65\u6570\u7684\u79ef\uff08\u5373\u6700\u591a\u80fd\u51cf\u957f\u7684\u957f\u5ea6\uff09\u8fd8\u5927\u4e8e\u76ee\u6807\u4e32\u957f\u5219\u53ef\u51cf\u6389\u3002     \u526a\u679d\u4e8c\uff1a\u53ef\u4ee5\u7ed9\u6269\u5c55\u4e32\u5b9a\u4e00\u4e2a\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5f00\u59cb\u4f4d\u7f6e\u5b9a\u4e3a\u4e0a\u6b21\u6269\u5c55\u7684\u65f6\u5019\u4e0e\u4e4b\u5339\u914d\u7684\u4f4d\u7f6e\uff0c\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u627e\u80fd\u53d8\u6362\u7684\uff0c\u5f00\u59cb\u4f4d\u7f6e\u524d\u9762\u7684\u4e0d\u4f5c\u53d8\u6362\u3002\n\n\u5982 \u5f53\u524d\u4e32\u4e3aabcdabcefg\uff0c \u6709\u89c4\u5219abc\uf0e0efg\uff0c\u5219\u5f53\u524d\u5982\u679c\u628a\u7b2c\u4e00\u4e2a abc\u53d8\u6362\u6210efg\uff0c\u5219\u5c06\u6269\u5c55\u51fa\u6765\u7684\u8282\u70b9\u5f00\u59cb\u4f4d\u7f6e\u5b9a\u4e3a\u7b2c1\u4f4d\uff0c\u5982\u679c\u5f53\u524d\u662f\u628a\u7b2c2\u4e2aabc\u53d8\u6362\u6210efg\uff0c\u5219\u628a\u6269\u5c55\u51fa\u6765\u7684\u8282\u70b9\u5f00\u59cb\u4f4d\u7f6e\u5b9a\u4e3a\u7b2c5\u4f4d\uff0c\u56e0\u4e3a\u5982\u679c\u4e0b\u6b21\u518d\u628a\u7b2c1\u4e2aabc\u53d8\u6362\u6210efg\u7684\u8bdd\u5c31\u4f1a\u548c\u5148\u53d8\u6362\u7b2c1\u4e2a\u518d\u53d8\u6362\u7b2c2\u4e2a\u91cd\u590d\uff0c\u53ef\u4ee5\u526a\u679d\u3002\n\n\u8fd9\u9053\u9898\u52a0\u5165\u8fd9\u4e24\u6761\u526a\u679d\u540e\u901f\u5ea6\u4f1a\u5feb\u5f88\u591a\u3002\n\n\u4e0b\u9644\u4ee3\u7801\uff1a\n\n```cpp\ntype\n  a=0..1;\nvar\n  maxk:byte;\n  dep:array[0..1,1..2300] of longint;\n  str:array[0..1,1..2300] of string;\n  x0:array[0..6,0..1] of string;\n  open,guan:array[0..1] of longint;\nprocedure init;\nvar\n  temp:string;\n  i,j:longint;\nbegin\n  i:=0;\n  while not eof and (i<=6) do\n    begin\n      readln(temp);\n      x0[i,0]:=copy(temp,1,pos(' ',temp)-1);\n      x0[i,1]:=copy(temp,pos(' ',temp)+1,length(temp));\n      inc(i);\n    end;\n  maxk:=i-1;\nend;\nprocedure calc;\nvar\n  i,j,k:longint;\n  st:0..1;\n  d:string;\nprocedure bool(st:a);\nvar\n  i:longint;\nbegin\n  if x0[0,1-st]=str[st,guan[st]] then\n    begin\n      writeln(dep[st,guan[st]]);\n      halt;\n    end;\n  for i:=1 to guan[1-st] do\n    if str[st,guan[st]]=str[1-st,i] then\n      begin\n        writeln(dep[st,guan[st]]+dep[1-st,i]);\n        halt;\n      end;\nend;\nprocedure checkup(st:a);\nvar\n  i:longint;\nbegin\n  for i:=1 to guan[st]-1 do\n    if str[st,i]=str[st,guan[st]] then\n      begin\n        dec(guan[st]);\n        exit;\n      end;\n  bool(st);\nend;\nprocedure expand(st:a);\nvar\n  i,j,k,lx,ld:longint;\nbegin\n  inc(open[st]);\n  d:=str[st,open[st]];\n  k:=dep[st,open[st]];\n  ld:=length(d);\n  for i:=1 to maxk do\n    begin\n      lx:=length(x0[i,st]);\n      for j:=1 to ld do\n        begin\n          if (copy(d,j,lx)=x0[i,st])\n             and (length(copy(d,1,j-1)+x0[i,1-st]+copy(d,j+lx,ld))<=115) then\n            begin\n              if guan[st]>=2300 then exit;\n              inc(guan[st]);\n              str[st,guan[st]]:=copy(d,1,j-1)+x0[i,1-st]+copy(d,j+lx,ld);\n              dep[st,guan[st]]:=k+1;\n              checkup(st);\n            end;\n        end;\nend;\nend;\nbegin\n  for st:=0 to 1 do\n    begin\n      open[st]:=0;\n      guan[st]:=1;\n      str[st,guan[st]]:=x0[0,st];\n      dep[st,guan[st]]:=0;\n      bool(st);\n    end;\n  repeat\n    if (open[0]<=open[1]) and not ((open[0]>=guan[0])\n       or (guan[0]>=2300) or (dep[0,guan[0]]>10)) then expand(0);\n    if (open[1]<=open[0]) and not ((open[1]>=guan[1])\n       or (guan[1]>=2300) or (dep[1,guan[1]]>10)) then expand(1);\n    if not ((open[0]>=guan[0]) or (guan[0]>=2300)\n       or (dep[0,guan[0]]>10)) then expand(0);\n    if not ((open[1]>=guan[1]) or (guan[1]>=2300)\n       or (dep[1,guan[1]]>10)) then expand(1);\n  until (open[0]>=guan[0]) or (dep[0,guan[0]]>10)\n        or (guan[0]>=2300) and (guan[1]>=2300)\n        or (open[1]>=guan[1]) or (dep[1,guan[1]]>10);\nend;\nbegin\n  init;\n  calc;\n  writeln('NO ANSWER!');\nend.\n```",
        "postTime": 1470728861,
        "uid": 6004,
        "name": "\u6797\u6d69\u7136",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u53cc\u5411\u961f\u5217\n\n\n\n    \n\n```cpp\n#include<iostream> \n#include<cstdio>\n#include<iomanip>\n#include<cmath>\n#include<cstring>\n#include<string> \n#include<algorithm>\n#include<queue>\n#include<map>\nusing namespace std;\nstring a,b,ab[7],ba[7];\nint n=1,i;//n\u662f\u89c4\u5219\u7684\u603b\u6570 \nqueue<string> qa,qb;//\u53cc\u5411bfs \nmap<string,int> visa,visb;//\u8bb0\u5f55\u5b57\u7b26\u4e32\u662f\u5426\u88ab\u8bbf\u95ee \nvoid bfs()\n{\n    visa[a]=1;visb[b]=1;//\u521d\u59cb\u5316\n    qa.push(a);qb.push(b); \n    while(1)\n    {\n        if(qa.empty()||qb.empty())    {cout<<\"NO ANSWER!\"<<endl;return;}//\u4efb\u610f\u4e00\u961f\u4e3a\u7a7a\u8bf4\u660e\u5931\u8d25 \n        string ta,tb; \n        ta=qa.front();\n        tb=qb.front();\n        for(i=1;i<=n;i++)\n        {\n            int k=0;\n            while(ta.find(ab[i],k)!=-1)\n            {\n                k=ta.find(ab[i],k);\n                int l=ab[i].size();\n                ta.replace(k,l,ba[i]);//\u4ea4\u6362 \n                if(visa[ta]==0)//\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u8bdd \n                {    \n                    visa[ta]=visa[qa.front()]+1;// \u6b65\u6570\u52a01 \n                    qa.push(ta);//\u5165\u961f\u5217\n                }\n                if(visb[ta]!=0)//\u5373\u6210\u529f\n                {\n                    cout<<visa[ta]+visb[ta]-2<<endl;return;\n                } \n                k++;\n                ta=qa.front();\n            }\n            k=0;\n            while(tb.find(ba[i],k)!=-1)\n            {\n                k=tb.find(ba[i],k);\n                int l=ba[i].size();\n                tb.replace(k,l,ab[i]);//\u4ea4\u6362 \n                if(visb[tb]==0)//\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u8bdd \n                {    \n                    visb[tb]=visb[qb.front()]+1;// \u6b65\u6570\u52a01 \n                    qb.push(tb);//\u5165\u961f\u5217\n                }\n                if(visa[tb]!=0)//\u5373\u6210\u529f\n                {\n                    cout<<visa[tb]+visb[tb]-2<<endl;return;\n                } \n                k++;\n                tb=qb.front();\n            }\n        }\n        qa.pop();\n        qb.pop();\n    }\n}\nint main()\n{\n    cin>>a>>b;\n    while(cin>>ab[n]>>ba[n])    {n++;}n--;\n    bfs();\n    return 0;\n}\n```",
        "postTime": 1467190550,
        "uid": 15090,
        "name": "littleming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u4e0d\u7528\u53cc\u5411\u5bbd\u641c\uff0c\u7528\u5355\u5411\u52a0\u4e0a\u5224\u91cd\u4e5f\u80fd\u8fc7\uff0c\u5224\u91cd\u53ef\u4ee5\u7528set\uff0chash\u4e4b\u7c7b\u7684\uff0c\u90fd\u80fd\u8fc7\uff0c\u8fd9\u91cc\u7528\u7684hash\n\n```cpp\n\n#include <cstdio>\n#include <queue>\n#include <string>\n#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nconst int hashsize=1000000;\nconst int maxstate=1000000;\n\nstring a,b,temp;\nstring rulesa[7],rulesb[7];\n\nint list[hashsize]={0},next[maxstate]={0};\n\nstring zt[maxstate];\n\nstruct node\n{\n    string s;\n    int time;\n};\n\nint cnt=0;\n\nlong long sum=0;\n\nint hash(string h)\n{\n    for(int i=0;i<h.size();i++)//\u8ba1\u7b97hash\u503c\n    {\n        sum+=h[i];\n        sum*=33;\n    }\n    sum=abs(sum%hashsize);//\u56de\u6ea2\u51fa\u5230\u8d1f\u6570\uff0c\u6240\u4ee5\u53d6\u4e86\u4e2a\u7edd\u5bf9\u503c=_=\uff0c\u4e00\u5f00\u59cb\u56e0\u4e3a\u8fd9\u4e2aRE\u4e86\u4e09\u4e2a\u70b9\n    //printf(\"%lld\\n\",sum);\n    int u=list[sum];//\u8fd9\u91cc\u7528\u94fe\u8868\u5904\u7406\u54c8\u5e0c\u78b0\u649e\n    while(u)\n    {\n        if(zt[u]==h)return 1;//\u627e\u5230\u5bf9\u5e94\u72b6\u6001\uff0c\u8fd4\u56de1\u8868\u793a\u5df2\u5230\u8fbe\u8fd9\u4e2a\u72b6\u6001\n        u=next[u];\n    }\n    zt[++cnt]=h;//\u6ca1\u627e\u5230\uff0c\u5c06\u72b6\u6001\u63d2\u5165\u94fe\u8868\uff0c\u8fd4\u56de0\uff0c\u8868\u793a\u6ca1\u5230\u8fbe\u8fc7\u8fd9\u4e2a\u72b6\u6001\n    next[cnt]=list[sum];\n    list[sum]=cnt;\n    return 0;\n}\n\nqueue <node> q;\n\nint main()\n{\n    cin>>a;\n    cin>>b;\n    int cnts=0;\n    while(cin>>rulesa[cnts]>>rulesb[cnts])\n    {\n        cnts++;\n    }\n    q.push((node){a,0});//\u521d\u59cb\u7ed3\u70b9\u4e32A\u5165\u961f\uff0c\u5e76\u5c06\u5176\u63d2\u5165\u54c8\u5e0c\u8868\n    hash(a);\n    sum=0;\n    while(!q.empty())\n    {\n        node t=q.front();q.pop();//\u961f\u9996\u5143\u7d20\u51fa\u961f\n        //cout<<t.s<<\" \";\n        //printf(\"%d\\n\",t.time);\n        if(t.s==b)//\u5230\u8fbe\u7ec8\u70b9\n        {\n            printf(\"%d\",t.time);\n            return 0;\n        }\n        if(t.time==10)continue;//\u8fb9\u754c\u5904\u7406\n        for(int i=0;i<cnts;i++)//\u65b0\u8282\u70b9\u7684\u6269\u5c55\n        {\n            for(int j=0;j<t.s.size();j++)\n            {\n                if(t.s[j]==rulesa[i][0]&&rulesa[i].size()<=t.s.size()-j)//\u627e\u5230\u5f53\u524d\u7ed3\u70b9\u4e2d\u7684Ax\u4e32\n                {\n                    //printf(\"j:%d\\n\",j);\n                    bool pd=true;\n                    for(int k=1;k<rulesa[i].size();k++)\n                    {\n                        if(t.s[j+k]!=rulesa[i][k])\n                        {\n                            pd=false;\n                            break;\n                        }\n                    }\n                    if(pd)\n                    {\n                        temp=t.s;\n                        temp.replace(j,rulesa[i].size(),&rulesb[i][0],0,rulesb[i].size());//\u7528Bx\u4e32\u66ff\u6362Ax\u4e32\n                        if(!hash(temp))q.push((node){temp,t.time+1});//\u54c8\u5e0c\u5224\u91cd\uff0c\u4e0d\u91cd\u6269\u5c55\u65b0\u8282\u70b9\n                        sum=0;\n                    }\n                }\n            }\n        }\n    }\n    printf(\"NO ANSWER!\");//\u5341\u6b65\u5185\u6ca1\u641c\u5230\u7b54\u6848\uff0c\u65e0\u89e3\n    return 0;\n}\n\n```",
        "postTime": 1464867267,
        "uid": 14815,
        "name": "crowworks695",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5e76\u6ca1\u6709\u60f3\u8c61\u4e2d\u7684\u90a3\u4e48\u96be\u3002\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u53cc\u5411BFS\uff0c\u8fd9\u4e0d\u8fc7\u8981\u591a\u6ce8\u610f\u7ec6\u8282\u3002\u7528\u4e24\u4e2a\u961f\u5217\u641c\u7d22\u76ee\u7684\u662f\u63d0\u9ad8\u65f6\u95f4\u548c\u7a7a\u95f4\u6548\u7387\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u4ecek\\*6^10\u4f18\u5316\u81f3k\\*6^5.\u7a7a\u95f4\u4e5f\u8282\u7ea6\u4e86\u5f88\u591a\u3002\n\n\u5728\u641c\u7d22\u7684\u65f6\u5019\u6ce8\u610f\u5982\u4e0b\u51e0\u70b9\uff1a\n\n1.\u4e24\u4e2a\u961f\u5217\u4e00\u4e2a\u4e3a\u7a7a\u6216\u6ea2\u51fa\u5c31\u4e2d\u6b62\n\n    \n2.\u4f18\u5148\u9009\u62e9\u5df2\u6269\u5c55\u8282\u70b9\u6570\u5c11\u7684\u8fdb\u884c\u6269\u5c55\uff08\u5373\u5934\u6307\u9488\u4e2d\u66f4\u5c0f\u7684\uff09\n\n\n3.\u6ce8\u610f\u4e00\u4e2a\u89c4\u5219\u53ef\u4ee5\u6709\u591a\u79cd\u6269\u5c55\u65b9\u6848\n\n\n4.\u6ce8\u610f\u53bb\u91cd\uff0c\u82e5\u65b0\u6269\u5c55\u51fa\u7684\u8282\u70b9\u4e4b\u524d\u6269\u5c55\u8fc7\uff08\u4e0d\u4e00\u5b9a\u5728\u5f53\u524d\u961f\u5217\u91cc\uff09\u5219\u5220\u9664\u8be5\u8282\u70b9\u3002\n\n\n5.\u53bb\u91cd\u540e\u5224\u65ad\u662f\u5426\u53cc\u5411\u641c\u7d22\u76f8\u9047\uff08\u5373\u5f53\u524d\u8282\u70b9\u662f\u5426\u4e0e\u53e6\u4e00\u8fb9\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u91cd\u5408\uff09\uff0c\u82e5\u91cd\u5408\u5219\u8f93\u51fa\u4e24\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u4e4b\u548c\uff09\n\n\u3010ps\u3011:\u4e0d\u8981\u6f0f\u4e86\u5f00\u59cb\u5c31\u5df2\u76f8\u540c\u7684\u60c5\u51b5\n\n\n[codep ]\n\n\n\n\n\n             \n```cpp\nprogram Project1;\ntype node=record\n            rp:string;\n            deep:longint;\n          end;\nvar head,tail:array[0..1]of longint;\n    d:array[0..1,0..7776]of node;\n    z,s,t:string;\n    k,i,total:longint;\n    ks,js:array[0..1,0..10]of string;\nprocedure check(k:longint);\nvar i:longint;\nbegin\n  for i:=1 to tail[1-k]do\n    if d[k,tail[k]].rp=d[1-k,i].rp then\n      begin\n        writeln(d[k,tail[k]].deep+d[1-k,i].deep);\n        halt;\n      end;\nend;\nprocedure delete(k:longint);\nvar i:longint;\nbegin\n  for i:=1 to tail[k]-1 do\n    if d[k,tail[k]].rp=d[k,i].rp then\n      begin\n        dec(tail[k]);\n        exit;\n      end;\n  check(k);\nend;\nprocedure expand(k:longint);\nvar m1,m2,m3,z:string;\n    dep,i,j,l1,l2,l3:longint;\nbegin\n  m1:=d[k,head[k]].rp;\n  l1:=length(m1);\n  dep:=d[k,head[k]].deep;\n  inc(head[k]);\n  for i:=1 to total do\n    begin\n      m2:=ks[k,i];\n      l2:=length(m2);\n      for j:=1 to l1 do\n        begin\n          if j+l2-1>l1 then break;\n          z:=copy(m1,j,l2);\n          if z=m2 then\n            begin\n              m3:=js[k,i];\n              l3:=length(m3);\n              if l1+abs(l2-l3)<=115 then\n                begin\n                  inc(tail[k]);\n                  d[k,tail[k]].rp:=copy(m1,1,j-1)+m3+copy(m1,j+l2,l1-j-l2+1);\n                  d[k,tail[k]].deep:=dep+1;\n                  delete(k);\n                end;\n            end;\n        end;\n    end;\nend;\nbegin\n  readln(z);\n  k:=pos(' ',z);\n  s:=copy(z,1,k-1);\n  t:=copy(z,k+1,length(z)-k);\n  i:=0;\n  while z<>''do\n    begin\n      readln(z);\n      k:=pos(' ',z);\n      inc(i);\n      ks[0,i]:=copy(z,1,k-1);\n      js[0,i]:=copy(z,k+1,length(z)-k);\n      ks[1,i]:=js[0,i];\n      js[1,i]:=ks[0,i];\n    end;\n  total:=i;\n  for i:=0 to 1 do\n    begin\n      head[i]:=1;\n      tail[i]:=1;\n      d[i,1].deep:=0;\n      if i=0 then d[i,1].rp:=s\n             else d[i,1].rp:=t;\n    end;\n  check(1);\n  while(head[0]<=tail[0])and(d[0,tail[0]].deep<10)and(tail[1]<=tail[1])and(d[1,tail[1]].deep<10)do\n    begin\n      if head[0]<=head[1]then expand(0);\n      if head[1]<=head[0]then expand(1);\n    end;\n  writeln('NO ANSWER!');\n  readln;\n  readln;\nend.\n[/codep ]\n```",
        "postTime": 1451732618,
        "uid": 11874,
        "name": "lqylqylqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u6211\u662f\u6700\u540e\u4e00\u4e2a\u70b9\u54c7\u6389\u4e86\u3002\n\n\u987a\u4fbf\u63d0\u4e00\u4e0b\u7b2c\u4e09\u4e2a\u70b9\u3002\u53ef\u4ee5\u7528\u5224\u91cd\u8fc7\uff0c\u5426\u5219\u4f1a\u5728progdurm\u548cprogree\u4e4b\u95f4\u6b7b\u6389\u3002\u3002\u5b8c\u5168\u51fa\u4e0d\u6765\u3002\n\n\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u6570\u636e\uff1a\n\nabaaaba abcdaba\n\na b\nb d\nd e\ne f\nf g\ng c\n\u90a3\u4e48\u89c2\u5bdf\u4e00\u4e0b\uff0c\u56e0\u4e3a\u662f\u5e7f\u641c\uff0c\u5f53head\u6307\u9488\u6307\u5411\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662fabaaaba\u65f6\uff0c\u7b2c\u4e00\u4e2a\u62d3\u5c55\u51fa\u6765\u7684\u70b9\u662fbbaaaba\u3002\u7b2c\u4e8c\u4e2a\u5462\uff1f\n\n\u6211\u60f3\u5927\u90e8\u5206\u4eba\u7684\u7a0b\u5e8f\u62d3\u5c55\u51fa\u6765\u5e94\u8be5\u662fadaaaba\u3002\u7136\u800c\u5e76\u4e0d\u5bf9\u3002\n\n\u56e0\u4e3a\u7528\u8111\u888b\u6a21\u62df\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u70b9\u7b54\u6848\u662f8\uff0c\u600e\u4e48\u51fa\u6765\u7684\u5462\uff1f\u662f\u7b2c\u4e09\u4e2a\u5b57\u7b26a\u7ecf\u8fc7\u516d\u6b65\u53d8\u6210c\uff0c\u7b2c\u56db\u4e2a\u5b57\u7b26a\u901a\u8fc7\u4e24\u6b65\u53d8\u4e3ad\u3002\n\n\u7b2c\u4e09\u4e2a\u5b57\u7b26\uff1a\n\na-->b\nb-->d\nd-->e\ne-->f\nf-->g\ng-->c\n\u5171\u516d\u6b65\n\n\u7b2c\u56db\u4e2a\u5b57\u7b26\uff1a\n\na-->b\nb-->d\n\u5171\u4e24\u6b65\n\n\u4e00\u5171\u516b\u6b65\u3002\n\n\u90a3\u4e48\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a\u72b6\u6001\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662fa\u4f46\u4f60\u4fee\u6539\u7b2c\u4e09\u4e2a\u6216\u8005\u7b2c\u56db\u4e2a\u5b57\u7b26\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u3002\n\n\u90a3\u4e48\u4f60\u770b\u770b\u4f60\u7684\u7a0b\u5e8f\u6709\u6ca1\u6709\u8fd9\u4e2a\u72b6\u6001\u5462\uff1f\n\n\u89e3\u51b3\u65b9\u6848:\n\n\u7528for\u5faa\u73af\u62d3\u5c55tail\u7684\u5185\u90e8\uff0c\u52a0\u4e00\u4e2awhile\u5faa\u73af\u3002\u5f53\u88ab\u66ff\u6362\u7684\u90e8\u5206\u5728head\u6240\u6307\u5411\u7684\u90e8\u5206\u4e2d\u8fd8\u5b58\u5728\u7684\u65f6\u5019\uff0c\u5c31\u7ee7\u7eed\u6839\u636e\u672c\u6b21\u89c4\u5219\u62d3\u5c55\u70b9\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0cabaaaba\u62d3\u5c55\u7684\u7b2c\u4e8c\u4e2a\u5e94\u8be5\u662fabbaaba\uff0c\u7b2c\u4e09\u4e2a\u662fabababa\u3002\u3002\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026\n\n\u90a3\u4e48\u600e\u4e48\u5b9e\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u81ea\u5df1\u52a8\u8111\u5b50\u5427\u3002\u3002\u3002\n\n\u987a\u4fbf\u63d0\u4e00\u53e5\u3002\u3002\u8fd9\u4e2a\u6570\u636e\u592a\u5f31\u3002\u3002\u8bf4\u5b9e\u8bdd\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u70b9\u662f\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u3002\n\n\u800c\u6700\u540e\u4e00\u4e2a\u70b9\u66ff\u6362\u89c4\u5219\uff0c\u66ff\u6362\u548c\u88ab\u66ff\u6362\u7684\u90e8\u5206\u957f\u5ea6\u76f8\u540c\u3002\u3002\u4e8e\u662f\u6211\u5c31\u5077\u4e86\u5077\u61d2\u3002\u3002\u6bcf\u6b21\u90fd\u628a\u4e0a\u4e00\u4e2a\u90e8\u5206\u53d8\u6210#\u3002\u3002\u3002\u5176\u5b9e\u8fd9\u662f\u6709bug\u7684\u3002\u5982\u679c\u66ff\u6362\u548c\u88ab\u66ff\u6362\u7684\u90e8\u5206\u957f\u5ea6\u4e0d\u901a\u8fc7\u90a3\u5c31\u4e0d\u5bf9\u5566\u3002\u3002\u3002\n\n\u4e0d\u518d\u8d58\u8ff0\u3002\u3002\u5927\u5bb6\u5f00\u52a8\u8111\u7b4b\u5427~\n\n\u4e0b\u9762\u9644\u4ee3\u7801\uff0c\u58ee\u54c9\u6211p\u515a\uff01\n\n\u8877\u5fc3\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u590d\u5236\u7c98\u8d34\uff01\u4e5f\u8bb8\u6211\u5199\u7684\u6709\u70b9\u957f\u3002\u3002\u3002\u4e00\u5b9a\u8981\u8010\u5fc3\u770b\u5b8c\u54e6~\u4e0d\u8981\u81ea\u5df1\u9a97\u81ea\u5df1\u3002\u3002\u5373\u4f7f\u770b\u61c2\u4e86\u4e5f\u8981\u81ea\u5df1\u6253\u4e00\u904d\u54e6~\n\n\u4e2d\u95f4\u6709\u4e2aelfhash\u5224\u91cd\u3002\u3002\u5176\u5b9e\u6ca1\u4ec0\u4e48\u5375\u7528\u3002\u3002\u6bd5\u7adf\u6570\u636e\u592a\u5f31\u7528\u4e0d\u5230\u8fd9\u4e48\u9ad8\u7aef\u7684\u4e1c\u4e1c\u3002\u3002\u3002\n\n\u8fd8\u6709\u3002\u3002\u3002while not eof do \u4e0d\u80fd\u81ea\u5df1\u6d4b\u8bd5\u3002\u3002\u53ef\u4ee5\u7528\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u6d4b\u8bd5~\n\n\u4ee3\u7801\uff1a\n\n```delphi\n\nvar\n  s1,s2:array[1..10] of string;\n  i,cnt,min:longint;\n  a:array[0..10000] of string;\n  b:array[0..10000] of longint;\n  hash:array[0..100000] of boolean;\n  procedure init;\n  var\n    s:string;\n    i,p:longint;\n  begin\n    cnt:=0;\n    while not eof do\n    begin\n      readln(s);\n      p:=pos(' ',s);\n      inc(cnt);\n      s1[cnt]:=copy(s,1,p-1);\n      s2[cnt]:=copy(s,p+1,length(s)-p);\n    end;\n  end;\n\n  function elfhash(now:string):boolean;\n  var g,h,i:longword;\n  begin\n    h:=0;\n    for i:=1 to length(now) do\n    begin\n      h:=h shl 4 + ord(now[i]);\n      g:=h and $f0000000;\n      if g<>0 then h:=h xor (g shr 24);\n      h:=h and (not g);\n    end;\n    h:=h mod 50239;\n    if hash[h] then\n    begin\n      hash[h]:=false;\n      elfhash:=false;\n      exit;\n    end;\n    elfhash:=true;\n  end;\n\n  procedure bfs;\n  var\n    ss,sss:string;\n    head,tail,p,i,j:longint;\n    f:boolean;\n  begin\n    a[1]:=s1[1];\n    b[1]:=0;\n    head:=0;tail:=1;\n    while (head<tail) and (b[head]<=min) do\n    begin\n      inc(head);\n      for i:=2 to cnt do\n      begin\n        p:=0;\n        sss:=a[head];\n        p:=pos(s1[i],sss);\n        while (p<>0) do\n        begin\n          f:=true;\n          ss:=a[head];\n          delete(ss,p,length(s1[i]));\n          insert(s2[i],ss,p);\n          delete(sss,p,1);\n          insert('#',sss,p);\n          if not elfhash(ss) then\n          begin\n            inc(tail);\n            a[tail]:=ss;\n            b[tail]:=b[head]+1;\n          end;\n          p:=pos(s1[i],sss);\n        end;\n        if (a[tail]=s2[1]) and (min>b[tail]) then min:=b[tail];\n      end;\n    end;\n  end;\nbegin\n  init;\n  fillchar(hash,sizeof(hash),true);\n  min:=maxlongint;\n  bfs;\n  if min<=10 then write(min) else write('NO ANSWER!');\nend.\n\n```",
        "postTime": 1440235494,
        "uid": 3882,
        "name": "zzjzxh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u6b63\u5982\u697c\u4e0a\u5404\u4f4d\u6240\u8a00\uff0c\u8fd9\u9898\u662f\u53cc\u5411BFS\u2026\u2026\n\n\u7528STL\u7684string\u5c31\u53ef\u4ee5\u7528replace\u8f7b\u677e\u5730\u8fdb\u884c\u53d8\u6362\uff0c\u7528STL\u7684set\u6765\u5224\u91cd\u5c31\u5f88\u65b9\u4fbf\u2026\u2026\n\n\u6570\u636e\u6709\u70b9\u5f31\uff0c\u6ca1\u6709\u56e0\u4e3a\u8d85\u8fc710\u6b65\u800cNO ANSWER\u7684\u2026\u2026\u4f8b\u5982\uff1a\n\n11 77\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n```cpp\n\n#include<iostream>\n#include<string>\n#include<set>\nusing namespace std;\nconst int size=512;\nint n,i,j,k,step[2][size],head[2],tail[2]={1,1},s,l[6][2];//s for side\nstring t[6][2],xy[2][size];\nset<string> sset[2];\nint main()\n{\n    cin>>**xy>>xy[1][0];\n    while(cin>>t[n][0]>>t[n][1])n++;\n    for(;i<n;i++)l[i][0]=t[i][0].size(),l[i][1]=t[i][1].size();\n    for(;;s^=1){\n        while(head[s]-tail[s]){\n            for(i=0;i<n;i++)\n                for(j=xy[s][head[s]].find(t[i][s]);j-string::npos;j=xy[s][head[s]].find(t[i][s],j+1)){\n                    xy[s][tail[s]]=xy[s][head[s]];\n                    xy[s][tail[s]].replace(j,l[i][s],t[i][1-s]);\n                    if(sset[s].find(xy[s][tail[s]])!=sset[s].end())continue;\n                    sset[s].insert(xy[s][tail[s]]);\n                    step[s][tail[s]]=step[s][head[s]]+1;\n                    for(k=head[1-s];k<tail[1-s];k++)if(xy[1-s][k]==xy[s][tail[s]]){\n//                        cout<<\"there \"<<step[s][tail[s]]<<'+'<<step[1-s][k]<<'=';\n                        cout<<step[s][tail[s]]+step[1-s][k];return 0;\n                    }\n                    tail[s]=(tail[s]+1)&(size-1);\n                }\n            head[s]=(head[s]+1)&(size-1);\n            if(step[s][head[s]]+step[1-s][head[1-s]]>10)goto end;\n            if(step[s][head[s]]-step[s][head[s]-1])break;\n        }\n        if(head[s]==tail[s])break;\n    }\n    end:\n    puts(\"NO ANSWER!\");\n    \n    return 0;\n}\n\n```",
        "postTime": 1439697594,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u540c\u697c\u4e0b\u6240\u8bf4\uff0c\u601d\u8def\u662f**\u53cc\u5411BFS**\n\n\u987a\u4fbf\u8bf4\u8bf4\u8bfb\u53d6\u6570\u636e\u3002\u4ee5\u4e0b\u4ee3\u7801\u81ea\u5df1\u5728\u9ed1\u6846\u8f93\u5165\u6570\u636e\u8c03\u8bd5\u7684\u65f6\u5019\uff0c\u6bcf\u884c\u53ea\u80fd\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u7ed3\u5c3e\u52a0\u4e0aCtrl+Z\u3002\n\n\u7528\u7684\u662f**C\u8bed\u8a00**\uff0c\u5bf9\u6307\u9488\u548c\u5b57\u7b26\u4e32\u51fd\u6570\u7528\u7684\u6bd4\u8f83\u591a\u3002\n\n```cpp\n//\u53cc\u5411BFS\u3002 \n#include<stdio.h>\n#include<string.h>\nchar A[100000][21]={{'\\0'}},B[100000][21]={{'\\0'}};\nint main(void)\n{\n    char left[1001][21]={{'\\0'}},right[1001][21]={{'\\0'}};//\u8bb0\u5f55\u53d8\u6362\u89c4\u5219 \n    int i,j,lenc=0,lenl=0,lenr=0,step=0;\n    scanf(\"%s%s\",A[0],B[0]);//\u8bb0\u5f55\u8d77\u70b9\u4e0e\u7ec8\u70b9\uff0c\u53cc\u5411BFS \n    while(scanf(\"%s%s\",left[lenl++],right[lenr++])==2) lenc++;//lenc\uff1a\u53d8\u6362\u89c4\u5219\u7684\u6570\u91cf \n    int h1=0,t1=1,h2=0,t2=1; //h\u4e3a\u5934\uff0ct\u4e3a\u5c3e\u3002 \n    int delta=0,k=1,count1=0,count2=0;//k\u8bb0\u5f55\u5934\u7ed3\u70b9\u4e2a\u6570\uff0ccount\u8bb0\u5f55\u5934\u7ed3\u70b9\u6269\u5c55\u51fa\u7ed3\u70b9\u7684\u6570\u91cf\n    char *ptr;//delta\u8bb0\u5f55\u641c\u7d22\u5230\u7684\u5b57\u7b26\u4e32\u5730\u5740\uff0cptr\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u3002 \n    while(h1<t1 && h2<t2 && step<10)//\u6bcf\u6b21\u5faa\u73afstep+2 \n    {\n        while(k--)//k\u8bb0\u5f55\u5934\u7ed3\u70b9\u4e2a\u6570 \n        {    \n            for(i=0;i<lenc;i++)\n            {\n                ptr=NULL;ptr =strstr(A[h1],left[i]);\n                delta=ptr-A[h1];//\u5730\u5740\u5dee\uff08\u5982abc\u4e2d\u627e\u5230a,\u5219delta=0.\u627eb\u5219\u4e3a1\u2026\u2026\uff09 \n                if(ptr == NULL || delta<0) continue;//\u627e\u4e0d\u5230\n                do {//\u5165\u961f\n                    strncpy(A[t1],A[h1],delta);//\u4e09\u884c\u4ee3\u7801\u5b8c\u6210\u5b57\u7b26\u4e32\u590d\u5236\u4e0e\u66ff\u6362 \n                    strcat(A[t1],right[i]);\n                    strcat(A[t1],&A[h1][delta+strlen(left[i])]);\n                    for(j=0;j<=count2;j++)//\u53cc\u5411\u90fd\u904d\u5386\u5230\u540c\u4e00\u4e2a\u70b9\uff0c\u5373\u627e\u5230\u6700\u77ed\u8def\u5f84 \n                        if(strcmp(A[t1],B[h2+j])==0) \n                        {printf(\"%d\",step+1);return 0;} \n                    t1++;count1++;\n                    ptr=NULL;ptr=strstr(A[h1]+delta+strlen(left[i]),left[i]);//\u5728\u5269\u4f59\u5b57\u7b26\u4e32\u4e2d\u518d\u6b21\u67e5\u627e \n                    delta=ptr-A[h1];//\u5730\u5740\u5dee\n                } while(ptr!=NULL &&  delta>=0); //\u5224\u65ad\u627e\u5230\u4e0e\u5426 \n            }\n            h1++;//\u6269\u5c55\u4e0b\u4e00\u4e2a\u5934\u7ed3\u70b9 \n        } \n        k=count2;count2=0;step++;//k\u8bb0\u5f55\u5934\u7ed3\u70b9\u4e2a\u6570\u3002 \n        if(h2==0)k=1;\n        //\u4e0b\u9762\u90e8\u5206\u590d\u5236\u4e0a\u9762\u7684\uff0c\u628aA\u6539B\uff0c\u628aleft\u6539right\u4e4b\u7c7b\u5373\u53ef\u3002\n        while(k--)\n        {\n            for(i=0;i<lenc;i++)\n            {\n                ptr=NULL;ptr =strstr(B[h2],right[i]);\n                delta=ptr-B[h2];\n                if(ptr == NULL || delta<0) continue;\n                do {\n                    strncpy(B[t2],B[h2],delta);\n                    strcat(B[t2],left[i]);\n                    strcat(B[t2],&B[h2][delta+strlen(right[i])]);\n                    for(j=0;j<=count1;j++)\n                        if(strcmp(B[t2],A[h1+j])==0) {printf(\"%d\",step+1);return 0;}//\u53cc\u5411\u904d\u5386\u5230\u540c\u4e00\u70b9\uff0c\u8f93\u51fa \n                    t2++;count2++;ptr=NULL;\n                    ptr =strstr(B[h2]+delta+strlen(right[i]),right[i]);\n                    delta=ptr-B[h2];\n                }while(ptr!=NULL && delta>=0);    \n            }\n            h2++;\n        }\n        k=count1;count1=0;step++;\n    }\n    printf(\"NO ANSWER!\"); \n    return 0;    \n}\n```\n\u53e6\u5916\u5206\u522b\u5c1d\u8bd5\u4e86\u4e00\u4e0b\u5355\u5411BFS\u548c\u76f4\u63a5\u6df1\u641c\uff0c\u524d\u800560\u5206\uff0c\u540e\u800540\u5206\u3002\uff08\u63d0\u4f9b\u53c2\u8003\uff09\n\n```cpp\n//\u5355\u5411BFS60\u5206\n#include<stdio.h>\n#include<string.h>\nchar A[1000000][21]={{'\\0'}};\nint main(void)\n{\n    char left[1001][21]={{'\\0'}},right[1001][21]={{'\\0'}},target[21];//\u8bb0\u5f55\u53d8\u6362\u89c4\u5219 \n    int i,lenc=0,lenl=0,lenr=0,step=0;\n    scanf(\"%s%s\",A[0],target);//\u8bb0\u5f55\u8d77\u70b9\u4e0e\u7ec8\u70b9\uff0c\u53cc\u5411BFS \n    while(scanf(\"%s%s\",left[lenl++],right[lenr++])==2) lenc++;//lenc\uff1a\u53d8\u6362\u89c4\u5219\u7684\u6570\u91cf \n    int h1=0,t1=1; //h\u4e3a\u5934\uff0ct\u4e3a\u5c3e\u3002 \n    int delta=0,k,count1=1;//k\u8bb0\u5f55\u5934\u7ed3\u70b9\u4e2a\u6570\uff0ccount\u8bb0\u5f55\u5934\u7ed3\u70b9\u6269\u5c55\u51fa\u7ed3\u70b9\u7684\u6570\u91cf\n    char *ptr;//delta\u8bb0\u5f55\u641c\u7d22\u5230\u7684\u5b57\u7b26\u4e32\u5730\u5740\uff0cptr\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\u3002 \n    while(h1 < t1 && step++ < 10) \n    {\n        k=count1;count1=0;\n        while(k--)//k\u8bb0\u5f55\u5934\u7ed3\u70b9\u4e2a\u6570 \n        {    \n            for(i=0;i<lenc;i++)\n            {\n                ptr=NULL;ptr =strstr(A[h1],left[i]);\n                delta=ptr-A[h1];//\u5730\u5740\u5dee\uff08\u5982abc\u4e2d\u627e\u5230a,\u5219delta=0.\u627eb\u5219\u4e3a1\u2026\u2026\uff09 \n                if(ptr == NULL || delta<0) continue;//\u627e\u4e0d\u5230\n                do {//\u5165\u961f\n                    strncpy(A[t1],A[h1],delta);//\u4e09\u884c\u4ee3\u7801\u5b8c\u6210\u5b57\u7b26\u4e32\u590d\u5236\u4e0e\u66ff\u6362 \n                    strcat(A[t1],right[i]);\n                    strcat(A[t1],&A[h1][delta+strlen(left[i])]);\n                    if(strcmp(A[t1],target)==0) \n                        {printf(\"%d\",step);return 0;} \n                    t1++;count1++;\n                    ptr=NULL;ptr=strstr(A[h1]+delta+strlen(left[i]),left[i]);//\u5728\u5269\u4f59\u5b57\u7b26\u4e32\u4e2d\u518d\u6b21\u67e5\u627e \n                    delta=ptr-A[h1];//\u5730\u5740\u5dee\n                } while(ptr!=NULL &&  delta>=0); //\u5224\u65ad\u627e\u5230\u4e0e\u5426 \n            }\n            h1++;//\u6269\u5c55\u4e0b\u4e00\u4e2a\u5934\u7ed3\u70b9 \n        } \n    }\n    printf(\"NO ANSWER!\"); \n    return 0;\n}\n```\n\n```cpp\n//\u76f4\u63a5\u6df1\u641c40\u5206\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\nchar a[21]={'\\0'};int min=10;\nchar left[1001][21]={{'\\0'}},right[1001][21]={{'\\0'}},target[21]={'\\0'};//\u8bb0\u5f55\u53d8\u6362\u89c4\u5219 \nint lenc=0,lenl=0,lenr=0;\nvoid dfs(char *A,int step)\n{\n    char *ptr=NULL;\n    int i;\n    if(step>min) return ;\n    if(strcmp(A,target)==0) {min=step;}\n    for(i=0;i<lenc;i++)\n    {\n        ptr =strstr(A,left[i]);\n        if(ptr==NULL ) continue; \n        int delta=ptr-A;\n        do {\n        char B[21]={'\\0'};\n        strncpy(B,A,delta);\n        strcat(B,right[i]);\n        strcat(B,A+delta+strlen(left[i]));\n        dfs(B , step+1  );\n        ptr=NULL; \n        ptr=strstr(A+delta+strlen(left[i]),left[i]); \n        delta=ptr-A;\n        }  while(ptr!=NULL);\n    }\n}\nint main(void)\n{\n    scanf(\"%s%s\",a,target);\n    while(scanf(\"%s%s\",left[lenl++],right[lenr++])==2) lenc++;\n    dfs(a,0);\n    min==10 ?printf(\"NO ANSWER\") :printf(\"%d\",min);\n    return 0;\n}\n```",
        "postTime": 1437911489,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "### **\u8fd9\u662f\u4e00\u9053\u6bd4\u8f83\u70e6\u7684\u5bbd\u641c\u9898**\n------------\n\t\u9898\u76ee\u7ed9\u7684\u975e\u5e38\u597d\u7406\u89e3\uff0c\u6c42\u6700\u4f18\u89e3\u3002\n    \u4e8e\u662f\u3002\u3002\u3002\n    ~~bfs\u5927\u6cd5\u597d\u554a~~\n   \u521a\u5f00\u59cb\u505a\u5230\u65f6\u5019\u7b2c\u4e94\u4e2a\u70b9\u4e00\u76f4\u9519\uff0c\u53d1\u73b0\u5ffd\u7565\u7684\u5224\u91cd\u95ee\u9898\u3002\n   \n   ~~\u4e8e\u662f\u5c31\u5f00\u59cb\u4e86\u65e0\u5c3d\u7684\u8d85\u65f6\u751f\u6daf~~\n   \n   \u5224\u91cd\u540e\u7684dfs\u4f1a\u6709\u5f88\u591a\u5197\u4f59\u8ba1\u7b97\uff0ceg\uff1a\n   \n   abaabd bbbbbd\n   \n   a b\n   \n   \u8fdb\u961f\u987a\u5e8f\uff1a\tbbaabd\uff0cabbabd, ababbd,  _bbbabd,bbbabd_ \u2026\u2026\n   \n   \u4f8b\u5982\u4e0a\u4f8b\u7684\u6700\u540e\u4e24\u4e2a\u5165\u961f\u5b57\u7b26\u4e32\uff0c\u51fa\u73b0\u4e00\u6837\u7684\uff0c\u5b58\u5728\u5197\u4f59\u8ba1\u7b97\u3002\n   \n   \u4e8e\u662f\u3002\u3002\u3002STL\u5927\u6cd5\u9020\u798f\u5168\u4eba\u7c7b\u3002\n   \n   \u7528map\u8bb0\u5f55\u67d0\u4e00\u5b57\u7b26\u4e32\u662f\u5426\u5165\u961f\u8fc7\uff0c\u82e5true \uff0c \u5219\u4e0d\u518d\u5165\u961f\u3002\n   \n   \u849f\u84bb\u4ee3\u7801\u5949\u4e0a\uff08\u5176\u4e2d\u6709\u4e00\u4e9b\u975e\u5e38\u795e\u5947\u7684\u5e38\u6570\u4f18\u5316\uff09\uff1a\n   \n   ```cpp\n#include<bits/stdc++.h>\n#define re register  \nusing namespace std;\n\nstring x , y , a[10],b[10] , t1 , t;\nint k;\nint l;\nqueue<string> q1;\nqueue<int> q2;\nmap<string , bool> m;  //map\u8bb0\u5f55\u662f\u5426\u5165\u8fc7\u961f\n\ninline bool work(int p) //\u5224\u65ad\u662f\u5426\u80fd\u8fdb\u884c\u5f53\u524d\u64cd\u4f5c\n{\n\t    bool f = true , f1 = false;\n\t    int a1 = k , a2 = 0 , pos;\n        t1 =\"\"+q1.front();\n        while(a1 <= t1.length()-1)\n        {\n        \tif(t1[a1] == a[p][0])\n        \t{\n        \t\ta2 = 1;\n        \t\tf = true;\n        \t\twhile(a2 <= a[p].length()-1)\n        \t\t{\n        \t\t\tif(t1[a2+a1] != a[p][a2])\n        \t\t\t{\n        \t\t\t\tf = false;\n        \t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ta2 ++;\n\t\t\t\t}\n\t\t\t\tif(f == true) \n\t\t\t\t{\n\t\t\t\t\tf1 = true;\n\t\t\t\t\tpos = a1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ta1 ++;\n\t\t}\n\t\t\n\t\tif(f1 == true)\n\t\t{\n        \tt1.replace(pos , a[p].length() , b[p]);\n        \tk += a[p].length()-1;\n        \treturn true;\n        }\n        else\n        {\n        \treturn false;\n\t\t}\n}\n\nint main()\n{\n//\tfreopen(\"a.in\",\"r\",stdin);\n//\tfreopen(\"a.out\",\"w\",stdout);\n    cin>>x>>y;\n    l=1;\n    while (cin>>a[l]>>b[l]) l++;    //\u8bfb\u5165\uff08\u8c03\u8bd5\u65f6\u53ea\u80fd\u4f7f\u7528\u6587\u4ef6\uff09\n    l--;\n    q1.push(x);\n    q2.push(0);\n    m[x] = true;\n    \n    while(!q1.empty()&&q2.front() <= 10)\n    {\n    \tt = q1.front(); \n    \tk = 0;\n        for(re int i = 1;  i<= l; i ++)\n        {\n        \tif(t.length()<a[i].length()) continue;//\u5982\u679c\u957f\u5ea6\u5c0f\uff0c\u5219\u4e0d\u53ef\u80fd\n        \tfor(k = 0; k <= t.length()-a[i].length(); k ++)//\u82e5k\u4ee5\u540e\u7684\u5b57\u7b26\u90fd\u53d6\u4f9d\u7136\u5c0f\u4e8e\u64cd\u4f5c\u8981\u6c42\u957f\u5ea6\uff0c\u5219\u4e0d\u53ef\u80fd\n        \t{\n\t            if(work(i) == true)\n    \t        {\n    \t        \tif(m[t1] == true) continue;//\u5224\u65ad\u662f\u5426\u5165\u8fc7\u961f\n        \t\t    q1.push(t1);\n                \tq2.push(q2.front()+1);\n                \tm[t1] = true;\n       \t            if(t1 == y)\n        \t        {\n            \t        cout<<q2.back()<<endl;\n                \t    return 0;\n   \t            \t}\n           \t\t}\n            }\n        }\n        q1.pop();\n        q2.pop();\n    }\n    cout<<\"NO ANSWER!\"<<endl;\n    return 0;\n}\n```\n\n   \n   \n   \t\t\t\t\n                \n   \t\t\t\t",
        "postTime": 1563973958,
        "uid": 51871,
        "name": "\u795e\u4e4b\u849f\u84bbxyk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "###  _[\u539f\u9898\u94fe\u63a5](https://www.luogu.org/problemnew/show/P1032)_ \n \n------------\n\n# \u9898\u610f\uff1a\n\n **\u7ed9\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32A\u548cB\uff0c\u5e76\u4e14\u5bf9\u4e8eA\u4e2d\u7684\u4e00\u4e9b\u5b50\u4e32\uff0c\u53ef\u4ee5\u53d8\u4e3a\u53e6\u4e00\u4e2a\u4e32\uff0c\u5e76\u7ed9\u51fa\u8fd9\u4e9b\u5bf9\u5e94\u5173\u7cfb(a1->a1' a2->a2' .. \u628a\u4e32ai\u53d8\u4e3aai')\uff0c\u5229\u7528\u8fd9\u4e9b\u89c4\u5219\uff0c\u82e5\u572810\u6b65(\u5305\u542b10\u6b65) \u4ee5\u5185\u80fd\u5c06A\u53d8\u6362\u4e3aB\uff0c\u5219\u8f93\u51fa\u6700\u5c11\u7684\u53d8\u6362\u6b65\u6570\uff1b\u5426\u5219\u8f93\u51fa\"NO ANSWER!\"**\n \n **\u4f8b\u5982\uff1a\n A='abcd'  B\uff1d'xyz'**\n \n **\u53d8\u6362\u89c4\u5219\u4e3a\uff1a**\n \n **'abc\u2019->'xu'**\n \n **'ud\u2019->\u2018y\u2019**\n \n **'y\u2019->'yz\u2019**\n \n **\u5219\u6b64\u65f6\uff0cA\u53ef\u4ee5\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u53d8\u6362\u53d8\u4e3aB\uff0c\u5176\u53d8\u6362\u7684\u8fc7\u7a0b\u4e3a\uff1a**\n \n **\u2018abc$d$\u2019->'xu$d$'** \n  \n **\u2018$x$ud\u2019->\u2018$x$y\u2019** \n\n **\u2018$x$y\u2019->\u2018$x$yz\u2019**\n\n **\u5171\u8fdb\u884c\u4e863\u6b21\u53d8\u6362\uff0c\u4f7f\u5f97A\u53d8\u6362\u4e3aB\u3002** \n\n\n------------\n#  \u601d\u8def\uff1a\n **\u6b64\u9898\u7684\u641c\u7d22\u72b6\u6001\u4e3a\u5b57\u7b26\u4e32\u503c\u4ee5\u53ca\u6240\u8d70\u7684\u6b65\u6570\uff0c\u4ee5\u7ed3\u6784\u4f53\u6765\u8868\u793a**\n ```cpp\nstruct node{\n    string str;\n    int step;\n};\n```\n**\u5b57\u7b26\u4e32\u53d8\u6362\u7684\u5bf9\u5e94\u89c4\u5219\u5b58\u50a8\u5982\u4e0b**\n```\nvector<pair<string,string> > change;\n//\u7b2c\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u7684\u5751\u70b9\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u5173\u952e\u5b57\u53ef\u80fd\u4f1a\u91cd\u590d\uff0c\u4e0d\u80fd\u7528map\n```\n\n**\u5229\u7528BFS\u641c\u7d22\u6269\u5c55,\u4ece\u5f53\u524d\u72b6\u6001\u5230\u4e0b\u4e00\u72b6\u6001,\u5373\u53d8\u6362\u4e00\u6b65,\u901a\u8fc7\u7ed9\u5b9a\u89c4\u5219,\u6539\u53d8\u5f53\u524d\u72b6\u6001\u7684\u67d0\u4e00\u4e2a\u5b50\u4e32\u53d8\u4e3a\u4e0b\u4e00\u72b6\u6001,\u4e3a\u4e86\u9632\u6b62\u91cd\u590d\u641c\u7d22,\u91c7\u53d6\u5982\u4e0b\u65b9\u5f0f\u5224\u91cd**\n```\nunordered_map<string,bool> vis;\n```\n**\u91cd\u5934\u620f\uff0c\u4ece\u5f53\u524d\u72b6\u6001now\u641c\u7d22\u5230\u4e0b\u4e00\u72b6\u6001nx\uff0c\u9700\u719f\u7ec3\u638c\u63e1STL\u91cc\u7684string**\n\n**\u4f8b\u5982\u5bf9\u4e8e\u5b57\u7b26\u4e32 string s=\"abcdabcef\";**\n\n```cpp\ns.substr(int pos, int len) const; \n//\u622a\u53d6\u5b57\u7b26\u4e32,\u8fd4\u56de\u7531\u4e0b\u6807\u4e3apos\u5f00\u59cb,\u957f\u5ea6\u4e3alen\u7684\u5b57\u7b26\u7ec4\u6210\u7684\u5b50\u5b57\u7b26\u4e32,\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5ffd\u7565\u65f6\uff0c\u9ed8\u8ba4\u622a\u53d6\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\ns.substr(0,3) -> \"abc\"\ns.substr(4) -> \"abcef\"\n\ns.find(string k, int pos) const;  \n//\u4ece\u4e0b\u6807\u4e3apos\u5f00\u59cb,\u67e5\u627e\u5b57\u7b26\u4e32k\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e,\u8fd4\u56de\u8d77\u59cb\u4f4d\u7f6e,\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de-1\ns.find(\"abc\",3) -> 4\n```\n\n\n**\u5e94\u7528\u5230\u6b64\u9898\u4e3a:**\n\n```cpp\nnx.step = now.step+1;//nx\u4e3a\u4e0b\u4e00\u72b6\u6001\nfor(auto x : change){//\u904d\u5386\u6240\u6709\u5bf9\u5e94\u89c4\u5219\uff0c\u5e76\u5728now\u4e2d\u627e\u662f\u5426\u5b58\u5728x.first\n    int currp,sp=0,len = x.first.size();\n    while(true){//\u627e\u5230now\u4e2d\u6240\u6709\u7684x.first,\u66ff\u6362\u540e\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u72b6\u6001\n        currp = now.str.find(x.first,sp);//\u627e\u5230\u5b50\u4e32\u8d77\u70b9\u4f4d\u7f6e\n        if(currp==-1) break;\n        sp = currp + len;//\u4e0b\u6b21\u5f00\u59cb\u5bfb\u627e\u7684\u8d77\u59cb\u4f4d\u7f6e\n        nx.str = now.str.substr(0,currp)+x.second+now.str.substr(sp);//\u62fc\u63a5\u66ff\u6362\u5b57\u7b26\n        if(!vis[nx.str]){//\u8be5\u72b6\u6001\u6ca1\u51fa\u73b0\u8fc7\n            vis[nx.str] = true;\n            q.push(nx);\n        }\n    }\n}\n```\n**AC\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b:**\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nvector<pair<string,string> > change;//\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u5173\u952e\u5b57\u53ef\u80fd\u4f1a\u91cd\u590d\uff0c\u4e0d\u80fd\u7528map\nunordered_map<string,bool> vis;\nstruct node{\n    string str;\n    int step;\n};\nnode st,en,now,nx;//\u8d77\u70b9\u548c\u7ec8\u70b9,\u5f53\u524d\u72b6\u6001\uff0c\u4e0b\u4e00\u4e2a\u641c\u7d22\u72b6\u6001\nint ans = 0;\nvoid bfs(){\n    queue<node> q;\n    st.step = 0,vis[st.str] = true;\n    q.push(st);\n    while(!q.empty()){\n        now = q.front(),q.pop();\n        if(now.str == en.str){\n            ans = now.step;\n            return;\n        }\n        if(now.step==10) continue;//\u6700\u591a\u5341\u6b65,\u65e0\u9700\u5728\u5411\u4e0b\u641c\n        nx.step = now.step+1;//nx\u4e3a\u4e0b\u4e00\u72b6\u6001\n        for(auto x : change){//\u904d\u5386\u6240\u6709\u5bf9\u5e94\u89c4\u5219\uff0c\u5e76\u5728now\u4e2d\u627e\u662f\u5426\u5b58\u5728x.first\n            int currp,sp=0,len = x.first.size();\n            while(true){//\u627e\u5230now\u4e2d\u6240\u6709\u7684x.first,\u66ff\u6362\u540e\uff0c\u4f5c\u4e3a\u4e0b\u4e00\u72b6\u6001\n                currp = now.str.find(x.first,sp);//\u627e\u5230\u5b50\u4e32\u8d77\u70b9\u4f4d\u7f6e\n                if(currp==-1) break;\n                sp = currp + len;//\u4e0b\u6b21\u5f00\u59cb\u5bfb\u627e\u7684\u8d77\u59cb\u4f4d\u7f6e\n                nx.str = now.str.substr(0,currp)+x.second+now.str.substr(sp);//\u62fc\u63a5\u66ff\u6362\u5b57\u7b26\n                if(!vis[nx.str]){//\u8be5\u72b6\u6001\u6ca1\u51fa\u73b0\u8fc7\n                    vis[nx.str] = true;\n                    q.push(nx);\n                }\n            }\n        }\n    }\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>st.str>>en.str;\n    string a,b;\n    while(cin>>a>>b) change.push_back({a,b});\n    bfs();\n    if(!ans) printf(\"NO ANSWER!\\n\");\n    else printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n\n\n\n    ",
        "postTime": 1559202684,
        "uid": 213529,
        "name": "Zero\u795e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "\u770b\u4f3c\u7b80\u5355\u7684bfs\uff0c\u4e00\u505a\u5168\u662f\u5751\u8fde\u7740\u5751\u7684\u9898\n\n\u57511  \u8f93\u5165\u95ee\u9898\u3002\u4e0d\u544a\u8bc9\u4f60\u89c4\u5219\u6709\u51e0\u6b65\uff0c\u4e5f\u4e0d\u77e5\u9053\u7528\u6237\u5565\u65f6\u5019\u8f93\u5165\u7ed3\u675f\uff0c\u9664\u975e\u7528\u6237\u81ea\u5df1\u53bbCtrl+c\uff08Windows\uff09\u6216\u8005ctrl+d\uff08linux\uff09\n\n\u57512 \u89c4\u5219\u4e0d\u660e\u786e\u3002 \u4e00\u4e2a\u5b57\u7b26\u4e32\u91cc\u9762\u6709\u591a\u4e2a\u5b50\u4e32\u6ee1\u8db3\u67d0\u4e2a\u89c4\u5219\uff0c\u90a3\u4e48\u66ff\u6362\u6389\u4e00\u4e2a\u8fd8\u662f\u5168\u90e8\u66ff\u6362\u6389\u7b97\u4e00\u6b21\u5462\uff1f\n\u4ece\u7ed3\u679c\u770b\uff0c\u662f\u66ff\u6362\u6389\u7b2c\u4e00\u4e2a\uff0c\u7136\u540e\u518d\u627e\u4e0b\u4e00\u4e2a\u5b50\u4e32\u5f53\u4e2d\u53e6\u5916\u4e00\u79cd\u66ff\u6362\u7684\u53ef\u80fd\u3002\u5e76\u4e0d\u662f\u4e00\u6b21\u628a\u591a\u4e2a\u5b50\u4e32\u5168\u90e8\u66ff\u6362\u6389\u7684\u8981\u6c42\u3002 \u56e0\u6b64\u5b57\u7b26\u4e32\u5f53\u4e2d\u67e5\u627e\u7b2c\u4e00\u4e2a\u5b50\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\uff0c\u800c\u540e\u518d\u4ece\u8fd9\u4e2a\u4f4d\u7f6e+1\u4e2a\u5b57\u7b26\u5411\u540e\u7ee7\u7eed\u627e\u5339\u914d\u7684\u5b57\u7b26\u4e32\uff0c\u624d\u80fd\u786e\u4fdd\u627e\u5230\u540c\u4e00\u4e2a\u89c4\u5219\u4e0b\u7684\u591a\u79cd\u53ef\u80fd\u66ff\u6362\u7ed3\u679c\u3002\u81f3\u4e8e\u4f7f\u7528c++\u7684string\u8fd8\u662fc\u7684char *\u7684\u51fd\u6570\u90fd\u6ca1\u6709\u591a\u5927\u7684\u5dee\u5f02\u3002\n\n\u5fc5\u987b\u501f\u52a9stl\u7684queue\u8fd9\u79cd\u52a8\u6001\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5426\u52196\u79cd\u89c4\u5219\uff0c\u6700\u5927\u60c5\u51b5\u4e0b\u6bcf\u79cd\u89c4\u5219\u53d8\u5316\u51fa\u4e0d\u6b62\u4e00\u4e2a\u7ed3\u679c\uff0c\u6240\u4ee5\u7b2c\u4e5d\u6b65\u9aa4\u5b8c\u6210\u5c31\u4f1a\u67096^9\u4e5f\u5c31\u662f\u767e\u4e07\u4ee5\u4e0a\u7684\u53ef\u80fd\u5b57\u7b26\u4e32\u4e86\u3002\u4f7f\u7528\u6570\u7ec4\u505aqueue\u625b\u4e0d\u4f4f\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```\n#include <iostream>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\nqueue<string> qString;// \u961f\u5217\u7f13\u5b58\u4e2d\u95f4\u7ed3\u679c\nqueue<int>    qStep;  // \u8bb0\u5f55\u4e0a\u9762\u961f\u5217\u6bcf\u4e2a\u7ed3\u679c\u662f\u7ecf\u8fc7\u51e0\u6b21\u89c4\u5219\u5f97\u5230\u7684\n\n\nstring sStart, sEnd; // \u5f00\u59cb\u548c\u7ed3\u675f\u5b57\u7b26\u4e32\nstring ruleA[6], ruleB[6];\nint  nRule = 0; // \u5b9e\u9645\u89c4\u5219\u603b\u6570\n\nvoid bfs() {\n    // \u961f\u5217\u4e0d\u7a7a\uff0c\u8868\u793a10\u6b65\u8fd8\u6ca1\u6709\u5230\n    int  bFound = 0;\n    while ( ! qString.empty())\n    {// \u4ece\u961f\u5217\u53d6\u4e00\u4e2a\u5bf9\u8c61\n        string s = qString.front(); qString.pop();\n        int step = qStep.front();   qStep.pop();\n        // \u5bf9\u5bf9\u8c61\u65bd\u52a0\u4e0d\u540c\u7684\u89c4\u5219\n        for ( int i=0; i<nRule; i++) {\n            string tempS = s;\n            size_t  sz = tempS.find(ruleA[i]);\n            if ( sz == string::npos ) { // \u6ca1\u6709\u627e\u5230\u5339\u914d\u7684\u89c4\u5219\uff0c\u629b\u5f03\n                    continue;\n            } else\n               \n            while ( sz != string::npos) {\n                tempS.replace(sz, ruleA[i].length(), ruleB[i]);\n                // \u9632\u6b62\u56e0\u4e0a\u6b21\u66ff\u6362\u4ea7\u51fa\u7684\u7ed3\u679c\u548c\u5269\u4f59\u90e8\u5206\u5f62\u6210\u518d\u6b21\u5339\u914d\uff0c\u624d\u5f15\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u67e5\u627e\u8303\u56f4\n                // \u66ff\u6362\u540e\u8fbe\u5230\u76ee\u6807\uff0c\u8f93\u51fa\uff0c\u9000\u51fa\n                if ( tempS == sEnd ) {\n                    cout << step+1;\n                    while (! qString.empty()) qString.pop();\n                    bFound = 1;\n                    break;\n                };\n                \n                // \u6ca1\u8fbe\u5230\u76ee\u6807\u3002 \u6ca1\u6709\u523010\u6b65\uff0c\u5165\u961f\u4f0d\n                if ( step<9 ) {\n                    qString.push(tempS);\n                    qStep.push(step+1);\n                };\n                tempS = s;\n                sz = tempS.find(ruleA[i], sz+1);\n            };\n        };\n    };\n    // \u961f\u5217\u5df2\u7ecf\u7a7a\uff0c\u8868\u793a\u5341step\u6ee1\u4e86\n    if ( 0 == bFound )\n        cout << \"NO ANSWER!\";\n};\n\nint main(int argc, const char * argv[]) {\n    cin >> sStart >> sEnd;\n    while ( cin >> ruleA[nRule] >> ruleB[nRule]) {\n        nRule++;\n        if (nRule == 6) break;\n    };\n    // push sStart into queue\n    qString.push(sStart);\n    qStep.push(0);\n    // start searching ......\n    bfs();\n    return 0;\n}\n```\n",
        "postTime": 1549983975,
        "uid": 141918,
        "name": "fakefire",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "# \u7eafstl\u89e3\u6cd5\n\n\u6a21\u62df\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u6bcf\u6b21bfs\uff0c\u679a\u4e3e\u6bcf\u4e00\u79cd\u53ef\u80fd\u7684\u6620\u5c04\uff0c\u5c1d\u8bd5\u6bcf\u4e00\u79cd\u53ef\u80fd\u7684\u66ff\u6362\u65b9\u5f0f\uff0c\u66ff\u6362\u540e\u52a0\u5165\u961f\u5217\u3002 \u6ce8\u610f\u52a0\u5165\u5224\u91cd\u3002\n\n\u6700\u5dee\u60c5\u51b5\u4e0b\uff0c\u590d\u6742\u5ea6\u662f$O(n^{10} l\\log n)$\uff0c\u5176\u4e2d$n$\u4e3a\u6620\u5c04\u6570\u91cf\uff0c$l$\u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\n\n\u89e3\u91ca:\u6bcf\u6b21bfs\u6709$n$\u79cd\u66ff\u6362\u65b9\u5f0f\uff0c\u6700\u591a\u8fdb\u884c$10$\u8f6ebfs\uff0c\u6240\u4ee5\u8fdb\u884c\u66ff\u6362\u7684\u6b21\u6570\u6700\u591a\u4e3a$O(n^{10})$\u3002\u6bcf\u6b21\u66ff\u6362\u6700\u591a\u9700\u8981$O(\\log n^{10})=O(\\log n)$\u65f6\u95f4\u6765\u67e5\u91cd\uff0c\u8fd8\u9700\u8981$O(l)$\u7684\u65f6\u95f4\u6765\u67e5\u627e\u5e76\u66ff\u6362\u5b57\u7b26\u4e32\u3002\u6240\u4ee5\uff0c\u603b\u7684\u590d\u6742\u5ea6\u4e3a$O(n^{10}) \\times O(\\log n) \\times O(l) = O(n^{10} l\\log n)$\n\n![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1536160043430&di=468ed2e0400bbd7e7bbeb9862940da9b&imgtype=0&src=http%3A%2F%2Fportrait5.sinaimg.cn%2F5806608724%2Fblog%2F180)\n\nPS\uff1a \u9632\u6284\u9898\u89e3\uff0c\u4e0b\u9762\u6709\u4e00\u4e2a\u5c0f\u5751\uff0c\u81ea\u5df1\u4fee\u6539\u5c31\u597d\u4e86\n```cpp\n\n#define local\n\n\n#include <bits/stdc++.h>\nusing namespace std;\n\nvector<pair<string, string> > m;\nset<string> oc;\nstruct state {\n\tstring s;\n\tint step;\n\tstate(const string &str, int stp) {\n\t\ts = str;\n\t\tstep = stp;\n\t}\n};\nint main() {\n#ifdef local\n\tfreopen(\"./input.txt\", \"r\", stdin);\n#endif\n\tstring a, b;\n\tcin >> a >> b;\n\n\tstring x, y;\n\twhile(cin >> x >> y)\n\t\tm.push_back(make_pair(x, y));\n\n\tqueue<state> qu;\n\tqu.push(state(a, 0);\n\toc.insert(a);\n\n\twhile(qu.empty()) {\n\t\tstate s = qu.front();\n\t\tqu.pop();\n#ifdef local\n\t\tcout << s.s << endl;\n#endif\n\t\tif (s.step > 10) {\n\t\t\tcontinue;\n\t\t}\n\n        if (s.s == b) {\n\t\t\tcout << s.step << endl;\n\t\t\treturn 0;\n\t\t}\n\t\t\n\n\t\tfor (vector<pair<string, string> >::iterator it = m.begin(), end = m.end();\n\t\t\t\tit != end; ++it) {\n\t\t\tconst string &s1 = it->first;\n\t\t\tconst string &s2 = it->second;\n\n\t\t\tint begin = -1;\n\t\t\twhile((begin = s.s.find(s1, begin + 1)) != string::npos) {\n\t\t\t\tstring x = string(s.s).replace(begin, s1.size(), s2);\n                // \u6ce8\u610f\u8fd9\u91cc\uff1areplace\u4f1a\u4fee\u6539\u539f\u5b57\u7b26\u4e32\uff0c\u5bfc\u81f4\u7ed3\u679c\u4e0d\u6b63\u786e\uff0c\u6240\u4ee5\u9700\u8981\u62f7\u8d1d\u4e00\u4efd(string(s.s))\n                \n\t\t\t\t//string x = s.s.substr(0, begin) + s2 + s.s.substr(begin + s1.size(), s.s.size());\n\t\t\t\tif (oc.count(x)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\toc.insert(x);\n\t\t\t\tqu.push(state(x, s.step + 1));\n\t\t\t}\n\t\t}\n\t}\n\tcout << \"NO ANSWER!\" << endl;\n\treturn 0;\n\n}\n\n\n```",
        "postTime": 1536150644,
        "uid": 61724,
        "name": "\u90b1\u6c5f\u5764",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "```cpp\nConst maxn=10000; \n      maxq=100000; \nVar a:array[0..1,0..maxn]of string;//\u53d8\u6362\u89c4\u5219 \n    q:array[0..1,0..maxq]of string;//\u4e24\u4e2a\u961f\u5217 \n    step:array[0..1,0..maxn]of longint;//\u6b65\u6570\n    head,tail:array[0..1]of longint;//\u4e24\u4e2a\u961f\u5217\u7684\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488 \n    int,aim,s1,s2,s:string; \n    n:longint; \nProcedure split(s:string);//\u5c06\u76ee\u6807\u72b6\u6001\u548c\u521d\u59cb\u72b6\u6001\u8bb0\u5f55\u4e0b\u6765 \nvar k:longint; \nbegin \n  k:=pos(' ',s); \n  s1:=copy(s,1,k-1); \n  s2:=copy(s,k+1,length(s)-k); \nend; \nProcedure init; //\u8bfb\u5165\nbegin \n  readln(s); \n  split(s); \n  int:=s1;//\u521d\u59cb\u72b6\u6001\n  aim:=s2;//\u76ee\u6807\u72b6\u6001 \n  n:=0; \n  while not eof do \n  begin \n    readln(s); \n    if s='' then exit; \n    inc(n); \n    split(s); \n    a[0,n]:=s1;//\u521d\u59cb\u7684\u53ef\u4ee5\u8f6c\u6362\u7684\u72b6\u6001\n    a[1,n]:=s2;//\u7531\u521d\u59cb\u72b6\u6001\u8f6c\u6362\u4e00\u6b65\u5f97\u5230\u7684\u76ee\u6807\u72b6\u6001\n  end; \nend; \nFunction vis(s:string;t:byte):boolean; \nvar i:longint; \nbegin \n  vis:=false; \n  for i:=1 to tail[t] do//\u904d\u5386\u961f\u5217\n  if q[t,i]=s then exit(true);//\u5982\u679c\u627e\u5230\u76ee\u6807\u72b6\u6001\u5c31\u8fd4\u56de\u503ctrue \nend; \nProcedure print(k:longint); \nbegin \n  writeln(k);//\uff08\u5982\u679c\u5408\u6cd5\uff09\u8f93\u51fa\u6700\u5c11\u53d8\u6362\u6b65\u6570 \n  halt; \nend; \nProcedure check(t:byte); \nvar i:longint; \nbegin \n  for i:=1 to tail[1-t] do //\u904d\u5386\u961f\u5217\uff08\u5f53\u524d\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u961f\u5217\u91cc\uff09\n  if q[1-t,i]=q[t,tail[t]] then //\u5982\u679c\u4e24\u4e2a\u5e7f\u641c\u78b0\u5934\u4e86\n  print(step[1-t,i]+step[t,tail[t]]);//\u603b\u7684\u6b65\u6570\u5c31\u662f\u4e24\u4e2a\u5e7f\u641c\u6b65\u6570\u4e4b\u548c \nend; \nProcedure bfs(t:byte); //\u5e7f\u641c\uff08t=0\u662f\u6b63\u7740\u641c\uff0ct=1\u662f\u53cd\u7740\u641c\uff09\nvar i,j,k:longint; \n    pre,tmp:string; \nbegin \n  inc(head[t]);//\u5934\u6307\u9488\u52a0\u4e00\n  pre:=q[t,head[t]];//\u5165\u961f \n  for i:=1 to n do//\u904d\u5386\u53d8\u6362\u89c4\u5219 \n  begin \n    k:=length(a[t,i]); \n    for j:=1 to length(pre)-k+1 do//\u6309\u7167\u53d8\u6362\u89c4\u5219\u6269\u5c55\u72b6\u6001 \n    begin \n      if copy(pre,j,k)=a[t,i] then//\u5982\u679c\u89c4\u5219\u7b26\u5408 \n      begin \n        tmp:=copy(pre,1,j-1)+a[1-t,i]+copy(pre,j+k,length(pre)-j-k+1);//\u6269\u5c55\u4e0b\u4e00\u4e2a\u72b6\u6001 \n        if not vis(tmp,t) then//\u5982\u679c\u6ca1\u6709\u627e\u5230\u76ee\u6807\u72b6\u6001 \n        begin \n          inc(tail[t]); \n          q[t,tail[t]]:=tmp; \n          step[t,tail[t]]:=step[t,head[t]]+1;//\u6b65\u6570++ \n        end; \n        check(t);//\u68c0\u67e5\u662f\u5426\u7ec8\u6b62\u641c\u7d22\uff08\u6ce8\u610f\u4f4d\u7f6e\uff0c\u4e0d\u7136\u5c31T\u4e86\uff09\n      end; \n    end; \n  end; \nend; \nProcedure doublebfs;//\u7528\u6570\u7ec4\u4e0b\u6807\u6765\u533a\u5206\u4e24\u4e2a\u961f\u5217\u548c\u4e24\u4e2a\u5e7f\u641c \nbegin \n  head[0]:=0;//\u7b2c\u4e00\u4e2a\u961f\u5217\u7684\u5934\u6307\u9488\n  head[1]:=0;//\u7b2c\u4e8c\u4e2a\u961f\u5217\u7684\u5934\u6307\u9488\n  tail[0]:=1;//\u7b2c\u4e00\u4e2a\u961f\u5217\u7684\u5c3e\u6307\u9488\n  tail[1]:=1;//\u7b2c\u4e8c\u4e2a\u961f\u5217\u7684\u5c3e\u6307\u9488 \n  q[0,1]:=int;//\u521d\u59cb\u72b6\u6001\n  q[1,1]:=aim;//\u76ee\u6807\u72b6\u6001\n  step[0,1]:=0;//\u6b65\u6570\n  step[1,1]:=0;//\u6b65\u6570 \n  while (head[0]<tail[0])and(head[1]<tail[1])do \n  if tail[1]<tail[0] then \n  bfs(1) else bfs(0);//\u4fdd\u6301\u4e24\u4e2a\u5e7f\u641c\u7684\u540c\u6b65 \nend; \nBegin \n  init; \n  doublebfs; \n  writeln('NO ANSWER!'); \nEnd.\n```",
        "postTime": 1508938301,
        "uid": 67147,
        "name": "\u5b59\u53ef\u6db5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    },
    {
        "content": "//\u66b4\u529b\u5bf9\u8fd9\u9898\u4e5f\u662f\u4e0d\u4f1a\u8d85\u65f6\u7684\uff0c\u4f46\u4e5f\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\n\n//\u6240\u4ee5\u6211\u8fd9\u7528\u4e86\u4e00\u79cd **/\u5b8f\u89c2dfs/** \u7684\u65b9\u6cd5\uff0c\u6781\u5ea6\u4f18\u5316\u4e86dfs\u7684\u6548\u7387\uff1b->** 1ms- **\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h> //\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;//\u6d41\u64cd\u4f5c\u547d\u540d\u7a7a\u95f4 \n//\u6709\u6548\u7ed3\u6784\u4f53\u70b9 \nstruct point{\n    int x;\n    int y;\n    int value;\n};\npoint pt[81];//\u6709\u6548\u70b9\u7684\u6570\u7ec4 \nint a,n;//a ->\u957f\u5bbd n ->\u6709\u6548\u70b9\u4e2a\u6570 \nint maxn;//\u6700\u5927\u503c \n//\u5b8f\u89c2\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \nvoid dfs(int trun,point *mapa,int sum,int index){\n    //turn\u6b21\u6570\uff080\u30011\uff09//*mapa\u70b9\u72b6\u6001//\u603b\u548c\u4f20\u9012//\u9009\u4e2d\u6240\u5728\u70b9\u7d22\u5f15 \n    //\u590d\u5236\u7684\u4f20\u9012\u6570\u7ec4 \n    point temps[n];point now=mapa[index];\n    int v=now.value;//\u590d\u5236\u6240\u5728\u70b9\u7684\u503c \n    for(int i=0;i<=n;i++){\n        temps[i]=mapa[i];    //\u590d\u5236\u70b9\u72b6\u6001\u6570\u7ec4 \n    }\n    temps[index].value=0;//\u66f4\u6539\u70b9\u7684\u72b6\u6001 \n    if(maxn<sum+v)maxn=sum+v;//\u5224\u65ad\u662f\u5426\u66f4\u65b0\u6700\u5927\u503c \n    for(int i=0;i<=n;i++){\n        //\u5224\u65ad\u70b9\u7684\u4f4d\u7f6e\u662f\u5426\u7b26\u5408\u8981\u6c42\n        //\u70b9\u7684\u8981\u6c42//\u5728\u6240\u5728\u70b9\u7684\u53f3\u4e0b \n**        if((temps[i].x>=now.x and temps[i].y>=now.y)and (temps[i].x>=now.x and temps[i].y>=now.y) and temps[i].value){**\n            dfs(trun,temps,sum+v,i);//\u9012\u5f52 \n        }\n    }\n    if(maxn<sum+v)maxn=sum+v;//\u66f4\u65b0\u6700\u5927\u503c\n    if(trun==0)dfs(1,temps,sum+v,0);//\u4e8c\u6bb5\u641c\u7d22 \n    if(trun==1)if(maxn<sum+v)maxn=sum+v;//\u66f4\u65b0\u6700\u5927\u503c\n    return;//\u56de\u5f52 \n}\nint main(){\n    cin>>a;//\u8f93\u5165\u957f\u5bbd \n    pt[0].x=0;pt[0].y=0;pt[0].value=0;//\u5b9a\u4e49\u539f\u70b9\n    //\u8f93\u5165\u6709\u6548\u70b9 \n    while(1){\n        //x\u5750\u6807//y\u5750\u6807//\u6709\u6548\u503c \n        int a1,a2,a3;cin>>a1>>a2>>a3;\n        if(a1==0)break;//\u52240 \n        n++;//\u6307\u9488\uff0b\n        //\u5224\u65ad\u662f\u5426\u6709\u6548 \n        if(a3){\n            //\u8bb0\u5f55\u6709\u6548\u70b9 \n            pt[n].x=a1;pt[n].y=a2;pt[n].value=a3;\n        }\n    }\n    /*for(int i=1;i<=a;i++){\n        for(int j=1;j<=a;j++){\n        bool f=false;\n            for(int u=0;u<=n;u++){\n                if(pt[u].x==i and pt[u].y==j){\n                    cout<<pt[u].value<<\" \";\n                    f=true;\n                }    \n            }\n            if(!f)cout<<\"0 \";\n        }\n        cout<<\"\\n\";\n    }*/////--//\u68c0\u6d4b\u8f93\u5165\uff08\u6ca1\u7528\uff09 \n    dfs(0,pt,0,0);//dfs \n    cout<<maxn;//\u8f93\u51fa\u6700\u5927 \n    return 0;\n}\n```",
        "postTime": 1500551820,
        "uid": 47240,
        "name": "bzy369258147",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1032 \u3010\u5b57\u4e32\u53d8\u6362\u3011"
    }
]