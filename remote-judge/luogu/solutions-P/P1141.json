[
    {
        "content": "\u80f0\uff0c\u600e\u4e48\u6ca1\u4eba\u8bf4DFS\uff0c\u8c01\u8bf4DFS\u8fc7\u4e0d\u4e86\uff0c\u770b\u4ee5\u4e0bAC\u4ee3\u7801\uff0c\u641c\u7d22\u8fc7\u4e86\u6807\u8bb0\u4e00\u4e0b\uff0c\u4e0b\u6b21\u641c\u7d22\u65f6\u5c31\u4e0d\u7528\u5728\u627e\u4e00\u6b21\u4e86\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\nint n,m,ans[100002],x,y,f[1002][1002];\nchar s[1002][1002];\nvoid dfs(int r,int c,int z,int lll){\n    if (r<0 || r>=n || c<0 || c>=n || f[r][c]!=-1 || s[r][c]-'0'!=z)return;\n    f[r][c]=lll;ans[lll]++;\n    dfs(r-1,c,!z,lll);dfs(r+1,c,!z,lll);dfs(r,c-1,!z,lll);dfs(r,c+1,!z,lll);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i=0;i<n;i++)\n    scanf(\"%s\",s[i]);\n    memset(f,-1,sizeof(f));\n    for (int i=0;i<m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);x--;y--;\n        if (f[x][y]==-1)dfs(x,y,s[x][y]-'0',i);else ans[i]=ans[f[x][y]];\n    }\n    for (int i=0;i<m;i++)\n    printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1465025389,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u6c34\u5e73\u4e0d\u9ad8\uff0c\u5199\u8fd9\u9898\u65f6\u9047\u5230\u4e0d\u5c11\u95ee\u9898\uff0c\u6240\u4ee5\u53d1\u4e2a\u9898\u89e3\u770b\u770b\u80fd\u4e0d\u80fd\u5e2e\u5230\u5927\u5bb6\u627e\u5230\u5ffd\u89c6\u7684\u5730\u65b9\u3002\n\n\u521a\u5f00\u59cb\u770b\u5230\u8fd9\u9898\u5c31\u89c9\u5f97\u5e94\u8be5\u7528\u5bbd\u641c\u6765\u505a\uff0c\u4e8e\u662f\u76f4\u63a5\u6253\u4e86\u4e00\u4e2a\u5bbd\u641c\u7a0b\u5e8f\uff0c\u5982\u4e0b\uff1a\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint _map[1001][1001];\nbool flag[1001][1001];\nstruct mg\n{\n    int x,y;\n}q[1000001];\n//\u8d85\u65f63\u4e2a\u70b9 \nint main()\n{\n    int sx,sy,i,j,n,m,l,nx,ny,k,f,r,sum;\n    int dx[4]={0,0,-1,1};\n    int dy[4]={1,-1,0,0};\n    char ch;\n    scanf(\"%d %d\",&n,&m);\n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++)\n        {\n            cin>>ch;\n            if(ch=='1') _map[i][j]=1;\n            else _map[i][j]=0;\n        }\n    for(l=1;l<=m;l++)\n    {\n        cin>>sx>>sy;\n        sum=1;\n        f=1;\n        r=1;\n        q[f].x=sx;\n        q[f].y=sy;\n        memset(flag,true,sizeof(flag));\n        flag[sx][sy]=false;\n        while(f<=r)\n        {\n            for(k=0;k<4;k++)\n            {\n                nx=q[f].x+dx[k];\n                ny=q[f].y+dy[k];\n                if(flag[nx][ny]&&nx>=1&&nx<=n&&ny>=1&&ny<=n&&((_map[nx][ny]==0&&_map[q[f].x][q[f].y]==1)||(_map[nx][ny]==1&&_map[q[f].x][q[f].y]==0)))\n                {\n                    r++;\n                    sum++;\n                    flag[nx][ny]=false;\n                    q[r].x=nx;\n                    q[r].y=ny;\n                }\n            }\n            f++;\n        }\n        cout<<sum<<endl;\n    }\n    return 0;\n}\n```\n\u7136\u540e\u60b2\u60e8\u7684\u8d85\u65f63\u4e2a\u70b9\u3002\u3002\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u9898\u6570\u636e\u5f88\u5927\uff0c\u8bfb\u4e00\u7ec4\u67e5\u4e00\u904d\u5fc5\u7136\u7206\u70b8\u3002\u6b64\u65f6\u5e94\u8be5\u52a0\u4ee5\u4f18\u5316\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u4ee5\u4e0b\u7a0b\u5e8f\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar _map[1001][1001];//_map\u6570\u7ec4\u4fdd\u5b58\u5730\u56fe \nint flag[1001][1001],a[1000001];//a\u6570\u7ec4\u8981\u5f00\u5927\u4e00\u70b9\uff0c\u521a\u5f00\u59cb\u5f00a[1001]\u9519\u4e863\u4e2a\u70b9 \n//flag\u6570\u7ec4\u4fdd\u5b58\u5404\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u56fe\uff0c\u4ee5\u53ca\u662f\u5426\u5df2\u7ecf\u5904\u7406\u8fc7\uff0ca\u6570\u7ec4\u4fdd\u5b58\u5404\u4e2a\u8fde\u901a\u56fe\u7684\u5927\u5c0f\nstruct mg\n{\n    int x,y;\n}q[1000001];\nint main()\n{\n    int sx,sy,i,j,n,m,l,nx,ny,k,f,r,sum,d;\n    int dx[4]={0,0,-1,1};\n    int dy[4]={1,-1,0,0};//\u56db\u4e2a\u65b9\u5411\n    scanf(\"%d %d\",&n,&m);//n\u662f\u6b63\u65b9\u5f62\u5730\u56fe\u8fb9\u957f\uff0cm\u662f\u6570\u636e\u7ec4\u6570 \n    memset(a,0,sizeof(a));\n    memset(flag,0,sizeof(flag)); //\u4f60\u53ef\u4ee5\u65e0\u89c6\u8fd9\u4e24\u884cmemset\n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++)\n            cin>>_map[i][j];//\u8bfb\u5165\u5730\u56fe \n    d=0;//d\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u662f\u5728\u7b2c\u51e0\u4e2a\u8fde\u901a\u56fe\u4e2d \n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++)\n            if(flag[i][j]==0)//\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u4e0d\u5728\u5df2\u77e5\u8fde\u901a\u56fe\u4e2d\uff08\u8fd8\u672a\u5904\u7406\u8fc7\uff09 \n            {\n                d++;//\u8bb0\u5f55\u5f53\u524d\u6240\u5728\u8fde\u901a\u56fe\u6570 \n                f=1;\n                r=1;\n                q[f].x=i;\n                q[f].y=j;\n                flag[i][j]=d;\n                sum=1;//\u521d\u59cb\u5316\n                while(f<=r)\n                {\n                    for(k=0;k<4;k++)\n                    {\n                        nx=q[f].x+dx[k];\n                        ny=q[f].y+dy[k];\n                        if(flag[nx][ny]==0&&nx>=1&&nx<=n&&ny>=1&&ny<=n&&((_map[nx][ny]=='1'&&_map[q[f].x][q[f].y]=='0')||(_map[nx][ny]=='0'&&_map[q[f].x][q[f].y]=='1')))\n                        //\u5982\u679c\u65b0\u4f4d\u7f6e\u80fd\u8d70\u4e14\u5728\u5730\u56fe\u4e0a \n                        {\n                            r++;\n                            sum++;//\u8ba1\u6570\u5668\u7d2f\u52a0 \n                            flag[nx][ny]=d;//\u6807\u8bb0\u65b0\u4f4d\u7f6e\u5728\u7b2cd\u4e2a\u8fde\u901a\u56fe\u4e2d \n                            q[r].x=nx;\n                            q[r].y=ny;//\u66f4\u65b0\u4f4d\u7f6e \n                        }\n                    }\n                    f++;\n                }\n                a[d]=sum;//\u4fdd\u5b58\u5f53\u524d\u8fde\u901a\u56fe\u80fd\u79fb\u52a8\u5230\u591a\u5c11\u683c \n            }\n    for(i=1;i<=m;i++)\n    {\n        cin>>sx>>sy;//\u8bfb\u5165\u8be2\u95ee \n        cout<<a[flag[sx][sy]]<<endl;//\u76f4\u63a5\u67e5\u627e\u7b54\u6848\u5e76\u8f93\u51fa \n    }\n    return 0;\n}\n```\n\u672c\u4eba\u521a\u5f00\u59cb\u5c06\u6570\u7ec4\u5f00\u5c0f\u4e86\uff0c\u7136\u540eWA 4\u4e2a\u70b9\u6ee1\u8138\u61f5\u3002\u601d\u60f3\u501f\u9274\u5438\u53d6\u4e86\u4e4b\u524d\u7684\u4e00\u4e9b\u9898\u89e3\uff0c\u5c31\u662f\u5c06\u521d\u59cb\u5730\u56fe\u5206\u5272\u6210\u4e00\u4e2a\u4e2a\u8054\u901a\u56fe\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u6574\u5f20\u56fe\u5168\u662f1\u6216\u5168\u662f0\u7684\u8bdd\u8fde\u901a\u56fe\u6570\u91cf\u4f1a\u6781\u5927\uff0c\u6570\u7ec4\u5f00\u5c0f\u4f1aWA\uff0c\u76f4\u63a5\u4e00\u904d\u904d\u641c\u7d22\u4f1a\u8d85\u65f6\u3002\n\n\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u8bed\u8a00\u8868\u8ff0\u53ef\u80fd\u4e0d\u597d\u8bf7\u591a\u5305\u6db5\u3002\u3002\u3002\n",
        "postTime": 1500432635,
        "uid": 49173,
        "name": "\u949f\u60c5\u66b4\u529b",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u672c\u4eba\u840c\u65b0\u4e00\u53ea\uff0c\u8fd9\u9053\u9898\u5728AC\u4e4b\u524d\u4ea4\u4e8635\u904d\uff0c\u505a\u4e86\u4e09\u5929\uff0c\u4e2d\u95f4\u5939\u6742\u7740\u505a\u4e86\u4e24\u9053\u9898\uff0c\u6df1\u6709\u611f\u89e6\u554a\u554a\u554a\u554a\uff01\uff01\u5e94\u8be5\u662f\u8e29\u4e86\u4e00\u904d\u6240\u6709\u7684\u5751\uff0c\u6240\u4ee5\u53d1\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\uff01\uff08\u6211\u4f1a\u544a\u8bc9\u4f60\u4eec\u6211\u56e0\u4e3a\u8fc7\u4e86\u8fd9\u9053\u9898\u5728\u5bb6\u75af\u72c2\u62cd\u684c\u5b50\u7136\u540e\u51fa\u53bb\u5403\u4e86\u987f\u706b\u9505\u7eaa\u5ff5\u4e00\u4e0b\uff1f\uff1f\uff09\n\n------------\n\u6bd4\u8f83\u83dc\u6240\u4ee5\u7528\u7684\u6700\u7b80\u5355\u7684bfs\u3002\u7406\u6240\u5f53\u7136\u7684\u4e09\u4e2a\u70b9\u90fd\u8d85\u65f6\u3002\uff08\u56e0\u4e3a\u6570\u7ec4\u5f00\u7684\u4e0d\u591f\u5927\u8fd8\u6709\u4e24\u4e2a\u662f\u9519\u7684\uff09\n\n\u6587\u4e2d\u7684wb\uff0ctp\u90fd\u662f\u81ea\u5df1\u7684\u597d\u8001\u5e08\u54c8\u54c8\u54c8\uff0c\u6bcf\u6b21\u5bb3\u6015\u81ea\u5df1\u7684\u53d8\u91cf\u5728\u5faa\u73af\u4e2d\u91cd\u590d\u5c31\u4f1a\u51fa\u73b0\u4ed6\u4fe9\u7684\u540d\u5b57\u5462\u54c8\u54c8\u54c8\u3002\n\n\u8fd9\u91ccw\uff0cb\u7528\u6765\u5224\u65ad\u524d\u540e\u4f4d\u7f6e\u662f\u5426\u5b57\u7b26\u4e0d\u76f8\u540c\uff0c\u4e5f\u5c31\u662f0\u62161\u3002\nxx yy\u4e24\u4e2a\u961f\u5217\u7528\u6765\u50a8\u5b58\u641c\u7d22\u70b9\u7684\u5750\u6807\u3002\nmap\u6570\u7ec4\u50a8\u5b58\u4e86\u6574\u5f20\u5730\u56fe\u3002\nbook\u6570\u7ec4\u6807\u8bb0\u70b9\u662f\u5426\u5230\u8fbe\u8fc7\uff0c\u8fd9\u91cc\u5b83\u662f\u4e0d\u7528\u591a\u6b21\u91cd\u7f6e\u7684\uff0c\u56e0\u4e3a\u8054\u901a\u5757\u7684\u601d\u60f3\u5c31\u662f\u5f53\u6211\u4e00\u6574\u5757\u641c\u7d22\u5b8c\u4e86\u4e4b\u540e\u4ed6\u4eec\u4e2d\u7684\u6210\u5458\u5c31\u4e0d\u7528\u7b2c\u4e8c\u6b21\u641c\u7d22\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u3002\nstep\u5c31\u7528\u6765\u50a8\u5b58\u6bcf\u4e2a\u70b9\u80fd\u5230\u8fbe\u591a\u5c11\u4e2a\u70b9\u5566~~\ninx\uff0ciny\u5c31\u7528\u6765\u50a8\u5b58\u5728\u641c\u7d22\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\u7684\u6bcf\u4e2a\u6210\u5458\u3002\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<queue>\n#include<iostream>\nusing namespace std;\nqueue<int >xx;\nqueue<int >yy;\nchar w,b;\nchar map[1001][1001];\nint book[1001][1001]={};\nint step[1001][1001]={};\nint inx[1001]={};\nint iny[1001]={};\nint n,m;\nint sum=1;\nint bfs(int ,int );\nint i,j;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int t=1;t<=n;t++)\n    {\n        for(int p=1;p<=n;p++)\n                    cin >> map[t][p];\n    }\n    for(int t=1;t<=m;t++)\n    {\n            scanf(\"%d%d\",&inx[t],&iny[t]);\n    }\n    for(int b=1;b<=m;b++)\n    {\n            for(int w=1;w<=1000;w++)\n            for(int b=1;b<=1000;b++)\n            {\n                    book[w][b]=0;\n                    step[w][b]=0;\n                    sum=1;\n            }\n    \txx.push(inx[b]);\n    \tyy.push(iny[b]);\n    \tprintf(\"%d\\n\",bfs(inx[b],iny[b]));\n    }\n    getchar();\n    getchar();\n    return 0;\n}\nint bfs(int x,int y)\n{\n     int move[4][2]={{1,0},{0,1},{-1,0},{0,-1}};\n     book[x][y]=1;\n     int nx,ny;\n     while(xx.size()!=0 && yy.size()!=0)\n     {       \n             xx.pop();\n             yy.pop();\n     for(int t=0;t<4;t++)\n      {\n             \n             nx=x+move[t][0];\n             ny=y+move[t][1];\n             w=map[x][y];\n             b=map[nx][ny];\n             if(book[nx][ny]==0 && w!=b && nx>0 && ny>0 && nx<=n && ny<=n)\n             {                  \n                                \n                                sum++;\n                                book[nx][ny]=1;\n                                step[nx][ny]=step[x][y]+1;\n                                xx.push(nx);\n                                yy.push(ny);\n             }\n      }\n      x=xx.front();\n      y=yy.front();\n     }\n     return sum;\n}\n\n```\n------------\n\u4e4b\u540e\u7684\u4e24\u5929\u5c31\u75af\u72c2\u67e5\u9519\uff0c\u53d1\u73b0\u662f\u81ea\u5df1inx\uff0ciny\u6570\u7ec4\u5f00\u7684\u8fc7\u4e8e\u5c0f\uff0c\u5e94\u8be5\u5f00\u5230m\u7684\u8303\u56f4\u4e5f\u5c31\u662f100000\u3002\n\u5e76\u4e14\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u52a0\u5165\u8054\u901a\u5757\u8fd9\u4e2a\u601d\u60f3\u3002\n\u5373\u5728\u8fdb\u884cbfs\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u641c\u7d22\u5230\u7684\u70b9\u90fd\u8bb0\u5f55\uff0c\u641c\u7d22\u7ed3\u675f\u4e4b\u540e\uff0c\u521a\u521a\u8bb0\u5f55\u7684\u6240\u6709\u70b9\u53ef\u5230\u8fbe\u7684\u4f4d\u7f6e\u90fd\u76f8\u540c\u3002\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\u4e00\u4e2a\u6c60\u5858\u91cc\uff0c\u5728\u4efb\u610f\u4e00\u70b9\u653e\u5165\u4e00\u6761\u9c7c\uff0c\u5b83\u53ef\u4ee5\u6e38\u5230\u7684\u4f4d\u7f6e\u662f\u6574\u4e2a\u6c60\u5858\uff0c\u65e0\u8bba\u4f60\u9009\u62e9\u4ece\u4e1c\u8fb9\u653e\u5165\u8fd8\u662f\u897f\u8fb9\uff0c\u662f\u4ece\u6b63\u4e2d\u95f4\u8fd8\u662f\u67d0\u4e00\u4e2a\u5bf9\u4f60\u6709\u7279\u6b8a\u610f\u4e49\u7684\u70b9\u3002\n\n\u8fd8\u6ca1\u7406\u89e3\u4e5f\u6ca1\u5173\u7cfb\uff0c\u4f8b\u5b50\u591a\u5f97\u662f\uff1a\n\u4f60\u60f3\u53bb\u8ba4\u8bc6\u5b66\u6821\u4e2d\u6240\u6709\u7684\u5927\u4f6c\uff0c\u4f60\u9700\u8981\u4ece\u4f60\u7684\u73ed\u7ea7\u53bb\u5230\u6574\u4e2a\u5b66\u6821\u6240\u6709\u7684\u73ed\u7ea7\uff0c\u5982\u679c\u6211\u4eec\u5e76\u4e0d\u5173\u6ce8\u8def\u5f84\u8fc7\u7a0b\uff0c\u7ed3\u679c\u4e00\u5b9a\u662f\u4f60\u53bb\u5230\u4e86\u6240\u6709\u5e74\u7ea7\u7684\u6240\u6709\u73ed\u7ea7\uff0c\u4f46\u65e0\u8bba\u4f60\u662f\u5c0f\u5b66\u4e09\u5e74\u7ea7\u8fd8\u662f\u521d\u4e2d\u4e09\u5e74\u7ea7\u4ea6\u6216\u662f\u9ad8\u4e09\u5e74\u7ea7\uff0c\u4f60\u90fd\u4f1a\u53bb\u5230\u6bcf\u4e00\u4e2a\u73ed\u91cc\u3002\n\u8054\u901a\u5757\u5982\u679c\u5404\u4f4d\u770b\u5b8c\u8fd8\u662f\u4e0d\u80fd\u7406\u89e3\u7684\u8bdd\uff0c\u4f5c\u4e3a\u83dc\u9e21\u786e\u5b9e\u627e\u4e0d\u5230\u4ec0\u4e48\u66f4\u5f62\u8c61\u7684\u4f8b\u5b50\u4e86\uff0c\u9ebb\u70e6\u5404\u4f4d\u79fb\u6b65\u767e\u5ea6\u3002\n\u7136\u540e\u9644\u4e0aAC\u4ee3\u7801\uff0c\u91cc\u9762\u4f1a\u518d\u6b21\u89e3\u91ca\u3002\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<queue>\n#include<iostream>\nusing namespace std;\nqueue<int >xx;\nqueue<int >yy;\nchar w,b;\nchar map[1001][1001];\nint book[1001][1001]={};\nint step[1001][1001]={};\nint in[1000001][3];\nint inx;\nint iny;\nint n,m;\nint bfs(int ,int );\nint i,j;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int t=1;t<=n;t++)\n    {\n        for(int p=1;p<=n;p++)\n                    cin >> map[t][p];\n    }//\u6ce8\u610f\uff1a\u8fd9\u91cc\u8bfb\u5165\u6211\u4e5f\u8c03\u8bd5\u4e86\u8d85\u7ea7\u4e45\n    //\u597d\u50cf\u56e0\u4e3a\u6d1b\u8c37\u7684\u539f\u56e0\n    //\u5982\u679c\u4f7f\u7528scanf\uff08%c\uff09\u7528getchar\uff08\uff09\uff1b\u5438\u6536\u5b57\u7b26\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u4e9b\u4e9b\u95ee\u9898\uff0c\n    /*for(int t=1;t<=n;t++)\n    {\n        for(int p=1;p<=n;p++)\n                    printf(\"%c\",map[t][p]);\n            printf(\"\\n\");\n    }*/\n    //\u8fd9\u4e2a\u6ce8\u91ca\u7528\u6765\u770b\u770b\u81ea\u5df1\u7684map\u5230\u5e95\u6709\u6ca1\u6709\u8f93\u5bf9\uff0c\u6bd5\u7adf\u53ea\u6709\u5730\u56fe\u5bf9\u4e86\u624d\u6709\u53ef\u80fd\u505a\u9898\uff0c\u5730\u56fe\u4e0a\u6211\u5c31\u67e5\u4e86\u4e00\u5929\uff0c\u8981\u4e0d\u662f\u6709\u5927\u4f6c\u544a\u8bc9\u6211getchar\uff08\uff09\u4e0d\u597d\u4f7f\uff0c\u6211\u53ef\u80fd\u4f1a\u548cscanf\uff08\uff09\u5bf9\u521a\u4e00\u6574\u5929\n    for(int t=1;t<=m;t++)\n    {\n            scanf(\"%d%d\",&inx,&iny);\n            if(book[inx][iny]==0)\n            {\n                bfs(inx,iny);\n                printf(\"%d\\n\",step[inx][iny]);\n            }\n            else\n            {\n                printf(\"%d\\n\",step[inx][iny]);\n            }\n            //\u8fd9\u91cc\u53d1\u73b0\u53ef\u4ee5\u8bfb\u4e00\u4e2a\u67e5\u4e00\u4e2a\uff0c\u4e8e\u662f\u5c31\u6ca1\u6709\u518d\u7528\u6574\u4e2a\u6570\u7ec4\u5b58\u8fdb\u6765\u7136\u540e\u91cd\u5934\u518d\u626b\u4e00\u6b21\u3002\n    }\n    getchar();\n    getchar();\n    return 0;\n}\nint bfs(int x,int y)\n//\u54b3\u54b3\uff01\u8fd9\u91cc\u662f\u6298\u817e\u6211\u6700\u4e45\u7684\u5730\u65b9\u4e86\n{\n     int flag=1;\n     //flag\u662f\u56e0\u4e3a\u5b9e\u5728\u60f3\u4e0d\u5230\u522b\u7684\u597d\u7684\u53d8\u91cf\u540d\u53bb\u5b58\u53ef\u4ee5\u5230\u7684\u5730\u70b9\u7684\u4e2a\u6570\uff0c\u540e\u6765\u53d1\u73b0flag\u8c8c\u4f3c\u548csum\u4e00\u6837\n     int nx,ny;\n     int move[4][2]={{1,0},{0,1},{-1,0},{0,-1}};\n     int sum=1;\n     in[flag][1]=x;\n     in[flag][2]=y;\n     book[x][y]=1;\n     xx.push(x);\n     yy.push(y);\n     //\u8fd9\u91cc\u4e00\u5b9a\u8981\u8bb0\u5f97\u6807\u8bb0\u8d77\u70b9\u548c\u5c06\u8d77\u70b9\u7684\u5750\u6807\u653e\u8fdb\u961f\u5217\uff0c\u8fd9\u91cc\u4e5f\u770b\u4e86\u597d\u4e45\u624d\u53d1\u73b0\u3002\n     while(xx.size()!=0 && yy.size()!=0)\n     {       \n             xx.pop();\n             yy.pop();\n     for(int t=0;t<4;t++)\n      {\n             nx=x+move[t][0];\n             ny=y+move[t][1];\n             w=map[x][y];\n             b=map[nx][ny];\n             if(book[nx][ny]==0 && w!=b && nx>0 && ny>0 && nx<=n && ny<=n)\n             {                  \n                                flag++;\n                                in[flag][1]=nx;\n                                in[flag][2]=ny;\n                                book[nx][ny]=1;\n                                xx.push(nx);\n                                yy.push(ny);\n                                sum++;\n             }\n      }\n      x=xx.front();\n      y=yy.front();\n     }\n     //\u4e0a\u9762\u90fd\u662f\u7b80\u5355\u7684bfs\uff0c\u4f46\u662f\u8bb0\u5f97\u8fc7\u7a0b\u4e2d\u8981\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u80fd\u5230\u7684\u70b9\u3002\u8fd9\u91cc\u7684book\u662f\u4e0d\u7528\u91cd\u7f6e\u7684\u54e6\u3002\n     for(int u=1;u<=flag;u++)\n     {\n             step[in[u][1]][in[u][2]]=sum;\n     }\n     //\u518d\u5c06\u6bcf\u4e00\u4e2a\u6210\u5458\u80fd\u5230\u7684\u70b9\u7684\u4e2a\u6570\u5206\u522b\u8bb0\u5f55\u4e0b\u6765\uff01\u4ed6\u4eec\u80fd\u5230\u7684\u4e2a\u6570\u90fd\u4e00\u6837\u54e6~~\n     return sum;\n}\n\n```\n------------\n\u6574\u7bc7\u5b8c\u7ed3\uff01\n\u4ee3\u7801\u4e60\u60ef\u4e0d\u592a\u597d\u5404\u4f4d\u89c1\u8c05\uff0c\u8868\u8ff0\u4e0d\u6e05\u5404\u4f4d\u4e5f\u591a\u591a\u5305\u6db5\uff0c\u5982\u679c\u771f\u7684\u770b\u4e0d\u61c2\u53ef\u4ee5\u770b\u770b\u5176\u4ed6\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u8bf4\u7684\u90fd\u8d85\u7ea7\u7b80\u5355\u6613\u61c2\u3002\n",
        "postTime": 1541173956,
        "uid": 77483,
        "name": "\u6768\u7a33\u5065",
        "ccfLevel": 0,
        "title": "\u6765\u81ea\u4e00\u53ea\u83dc\u9e21\u7684\u6012\u543c"
    },
    {
        "content": "> \u8fd9\u662f\u4e00\u7bc7\u53d1\u5e03\u4e8e2017.11.19\u7684\u65e9\u671f\u9898\u89e3\uff0c\u5df2\u7ecf\u4fee\u6539\n\n\u697c\u4e0b\u90fd\u8bf4\u8fd9\u9898\u662f\u4ec0\u4e48\u5e76\u67e5\u96c6\u4ec0\u4e48\u7684\uff0c\u5176\u5b9eDFS\u8054\u901a\u5757\u5c31\u53ef\u4ee5\u4e86\uff0c\u6ca1\u6709\u90a3\u4e48\u590d\u6742\uff0c\u901f\u5ea6\u4e5f\u5feb\u3002\n\n[\u4f7f\u7528Markdown\u94fe\u63a5\u83b7\u53d6\u66f4\u597d\u7684\u9605\u8bfb\u6548\u679c](https://www.zybuluo.com/RiverHamster/note/956433) **\u5b8c\u6574\u4ee3\u7801\u89c1\u94fe\u63a5\u4e2d**\n\n`\u65f6\u95f4\uff1a216ms` `\u5355\u4e2a\u70b9\u65f6\u95f4\uff1a68ms` `\u7a7a\u95f4\uff1a36MB`\n\n`\u65f6\u95f4\u590d\u6742\u5ea6` $O(n^2+m)$\n\n## \u4e3b\u8981\u601d\u8def\n\n\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u6240\u6709**\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u683c\u5b50\u7684\u7b54\u6848\u662f\u4e00\u6837\u7684**\u3002\n\n\u6240\u4ee5\uff0c\u53ea\u9700\u8981\u7528DFS\u627e\u5230\u6240\u6709\u7684\u8054\u901a\u5757\uff0c\u8054\u901a\u5757\u5185\u6240\u6709\u7684\u683c\u5b50\u7684\u7b54\u6848\u90fd\u662f\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u683c\u5b50\u6570\u76ee\u3002\n\n## \u7a0b\u5e8f\u5b9e\u73b0\n\n\u8bb0\u5f55\u6bcf\u4e2a\u683c\u5b50\u662f\u5426\u88ab\u641c\u8fc7\uff08\u5728\u67d0\u4e2a\u8fde\u901a\u5757\u4e2d\uff09\u3002\n\n\u4e24\u91cd\u5faa\u73af\uff0c\u5982\u679c\u8fd9\u683c\u6ca1\u641c\u8fc7\u5c31\u4ece\u8fd9\u4e2a\u683c\u5b50\u5f00\u59cb\u641c\u3002\n\n\u6bcf\u641c\u5230\u4e00\u4e2a\u683c\u5b50\u5f53\u524d\u7b54\u6848\u52a01\uff0c**\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u683c\u5b50\u4f4d\u7f6e**\uff0c\u6bcf\u6b21\u90fd\u54114\u4e2a\u65b9\u5411\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u683c\u5b50\u6269\u5c55\u3002\n\n\u641c\u5b8c\u4e00\u5757\u540e\u628a\u6570\u7ec4\u8bb0\u5f55\u7684\u683c\u5b50\u7684\u7b54\u6848\u8d4b\u6210\u8fde\u901a\u5757\u603b\u7684\u683c\u5b50\u6570\u3002\n\n\u8bfb\u5165\u65f6\u6709\u4e2a\u5c0f\u6280\u5de7\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u5b57\u7b26\u6570\u7ec4a\uff0c`scanf(\"%s\",a[i]+1)`\u53ef\u4ee5\u4ee51\u4e0b\u6807\u8bfb\u5165\u4e00\u884c\u3002\n\n(gets,strlen\u7b49\u540c\u7406\uff0c\u5982`strlen(s+1)`1\u4e0b\u6807\u5b57\u7b26\u4e32\u957f\u5ea6\uff09\n\n## Code\n\n```cpp\nfor(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++) if(!v[i][j]){ //\u679a\u4e3e\u683c\u5b50\uff0c\u6ca1\u6709\u8bbf\u95ee\u8fc7\u5c31DFS\n        v[i][j]=true;                   //\u8fd9\u683c\u88ab\u8bbf\u95ee\n        now=0;                          //\u603b\u6570\u8bb0\u4e3a0\n        dfs(i,j);                       //\u4ece\u8fd9\u683c\u5f00\u59cb\u641c\u7d22\n        for(int i=1;i<=now;i++) f[ans[i][0]][ans[i][1]]=now; //\u4f9d\u6b21\u8d4b\u503c\uff0c\u91cd\u590d\u4f7f\u7528\u5e76\u6ca1\u6709\u95ee\u9898\n    }\n```\n```cpp\n#define nx x+dx[i] //\u589e\u91cf\u6570\u7ec4\u8868\u793a\u4e0b\u4e00\u4e2a\u7684x\n#define ny y+dy[i] //\u589e\u91cf\u6570\u7ec4\u8868\u793a\u4e0b\u4e00\u4e2a\u7684y\n#define check(x,y) (x>0&&x<=n&&y>0&&y<=n) //\u8d8a\u754c\u68c0\u67e5\n\nvoid dfs(int x,int y){\n    now++; //\u8bb0\u5f55\u7b54\u6848\n    ans[now][0]=x,ans[now][1]=y; //\u8bb0\u5f55\u8fde\u901a\u5757\u7684\u683c\u5b50\n    for(int i=0;i<4;i++){ //\u641c\u7d22\u4e0b\u4e00\u683c\n        if(check(nx,ny)&&!v[nx][ny]&&a[x][y]!=a[nx][ny]){\n            //\u8d8a\u754c\u3001\u8bbf\u95ee\u3001\u989c\u8272\u5224\u65ad\n            v[nx][ny]=true; //\u8bb0\u5f55\u8bbf\u95ee\u72b6\u6001\n            dfs(nx,ny);     //\u4e0b\u4e00\u683c\n        }\n    }\n}\n```\n\n## \u4e00\u4e9b\u95ee\u9898\uff08\u4fee\u6539\u90e8\u5206\uff09\n- \u4e3a\u4ec0\u4e48\u590d\u6742\u5ea6\u662f\u5bf9\u7684\n\n\u6bcf\u4e2a\u683c\u5b50\u90fd\u53ea\u88ab\u641c\u8fc7\u4e00\u6b21\uff0c\u590d\u6742\u5ea6\u5f53\u7136\u662f\u5bf9\u7684\uff0c\u4f60TLE\u53ef\u80fd\u662f\u4f60\u7684\u590d\u6742\u5ea6\u95ee\u9898\u3002\n\n- \u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u7206\u6808\n\nOJ\u4e0a\u6808\u7a7a\u95f4\u548c\u5185\u5b58\u76f8\u7b49\u3002\u672c\u673a\u8bc4\u6d4b\u53ef\u4ee5\u5728 Windows \u4e0a\u4f7f\u7528\n`g++ a.cpp -o a -Wl,stack=268435456`\u7f16\u8bd1\u6210$256$MiB\u6808\u7a7a\u95f4\u8c03\u8bd5\uff0c\u81ea\u884c\u7f51\u4e0a\u641c\u7d22\u201cg++ Windows \u6269\u6808\u201d\u3002",
        "postTime": 1511082170,
        "uid": 31756,
        "name": "RiverHamster",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "# 01\u8ff7\u5bab \u6807\u51c6\u5e76\u67e5\u96c6\u5199\u6cd5\n\n\u5f88\u663e\u7136\u8fd9\u662f\u4e00\u9053\u6c42\u8fde\u901a\u5757\u7684\u9898\u76ee\uff0c\u53ea\u9700\u6784\u9020\u70b9\u5230\u8282\u70b9\u4e00\u4e00\u6620\u5c04\uff1a\n\n(i,j)=i*n+j;\n\n\u5373\u53ef\u5957\u7528\u5e76\u67e5\u96c6\uff0c\u6548\u7387\u4e5f\u6bd4\u8f83\u9ad8\u3002\n## \u4ee3\u7801\n\n### dfs\u7248\u672c\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[1000005],h[1000005],n;//f[i]\u8868\u793ai\u8282\u70b9\u7684\u7236\u8282\u70b9,\n                            //h[i]\u8868\u793ai\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u7684\u8fde\u901a\u5757\u6570\nint st[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nchar s[1005][1005];\nint find(int x){return f[x]==x?x:f[x]=find(f[x]);}//\u67e5\nvoid unionn(int x,int y)//\u5e76\n{\n    int r1=find(x),r2=find(y);\n    if(r1!=r2)h[r1]+=h[r2],f[r2]=f[r1];\n}\nint dfs(int fi,int fj)\n{\n    if(f[fi*n+fj]!=-1)return find(fi*n+fj);\n    f[fi*n+fj]=fi*n+fj,h[fi*n+fj]=1;//\u6784\u9020\u6620\u5c04\n    for(int k=0;k<4;k++)\n    {\n        int i=fi+st[k][0],j=fj+st[k][1];\n        if(i>=0&&i<n&&j>=0&&j<n&&s[fi][fj]!=s[i][j])unionn(fi*n+fj,dfs(i,j));\n    }\n    return find(fi*n+fj);\n}\nint main()\n{\n    int t;\n    scanf(\"%d%d\",&n,&t);\n    memset(f,-1,4*n*n);\n    for(int i=0;i<n;i++)scanf(\"%s\",s[i]);\n    int i,j;\n    while(t--)\n    {\n        scanf(\"%d%d\",&i,&j);\n        printf(\"%d\\n\",h[dfs(i-1,j-1)]);\n    }\n    return 0;\n}\n```\n### \u5faa\u73af\u7248\u672c\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[1000005],h[1000005],n;//f[i]\u8868\u793ai\u8282\u70b9\u7684\u7236\u8282\u70b9,\n                            //h[i]\u8868\u793ai\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u7684\u8fde\u901a\u5757\u6570\nchar s[2][1005];//\u6eda\u52a8\u6570\u7ec4\nint find(int x){return f[x]==x?x:f[x]=find(f[x]);}//\u67e5\nvoid unionn(int x,int y)//\u5e76\n{\n    int r1=find(x),r2=find(y);\n    if(r1!=r2)h[r1]+=h[r2],f[r2]=f[r1];\n}\nint main()\n{\n    int t;\n    scanf(\"%d%d\",&n,&t);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\",s[i&1]);\n        for(int j=0;j<n;j++)\n        {\n            f[i*n+j]=i*n+j,h[i*n+j]=1;//\u6784\u9020\u6620\u5c04\n            if(i!=0&&s[(i-1)&1][j]!=s[i&1][j])unionn((i-1)*n+j,i*n+j);\n            if(j!=0&&s[i&1][j-1]!=s[i&1][j])unionn(i*n+j,i*n+j-1);\n        }\n    }\n    int i,j;\n    while(t--)\n    {\n        scanf(\"%d%d\",&i,&j);\n        printf(\"%d\\n\",h[find((i-1)*n+j-1)]);\n    }\n    return 0;\n}\n```",
        "postTime": 1533640146,
        "uid": 90874,
        "name": "H_Bryan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u89c1\u9898\u610f\uff0c\u7531\u4e8e\u6bcf\u6b21\u53ea\u5411\u56db\u4e2a\u65b9\u5411\u5c1d\u8bd5\u79fb\u52a8\uff0c\u6240\u4ee5\u53ef\u91c7\u7528\u6df1\u641c\uff08\u72b6\u6001\u4e3a\u5750\u6807\uff09\u3002\n\n\u7136\u800c\u6570\u636e\u89c4\u6a21\u4e2d\uff0cn<=1000\uff0cm<=100000\uff0c\u5982\u679c\u6bcf\u6b21\u8f93\u5165\u5750\u6807\u65f6\u91cd\u65b0\u8d70\u4e00\u6b21\u5c06\u4f1a\u8d85\u65f6\u3002\n\n\u518d\u60f3\u60f3\uff0c\u6bcf\u4e00\u6b21\u641c\u7d22\u4f1a\u627e\u5230\u4e00\u4e2a\u533a\u5757\uff0c\u8be5\u533a\u5757\u4e2d\u6240\u6709\u70b9\u7684\u7b54\u6848\u90fd\u76f8\u540c\uff0c\u6240\u4ee5\uff0c\u7b54\u6848\u53ef\u4ee5\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\u2014\u2014\n\n___\n\n\u9898\u76ee\u6bcf\u7ed9\u51fa\u4e00\u4e2a\u5750\u6807\uff0c\n\n\u5148\u5224\u65ad\u8be5\u5750\u6807\u662f\u5426\u5df2\u6709\u7b54\u6848\uff08\u901a\u8fc7\u524d\u9762\u5df2\u7ed9\u51fa\u7684\u70b9\u641c\u7d22\u83b7\u5f97\u7684\uff09\uff0c\n\n\u662f\u5219\u76f4\u63a5\u8f93\u51fa\uff0c\u5426\u5219\u5f80\u4e0b\u641c\u7d22\u3002\n\n\u641c\u7d22\u662f\u8fd9\u6837\u7684\uff1a\u5148\u91cd\u7f6e $pl$\uff08$pl$ \u662f\u5f53\u524d\u533a\u5757\u7684\u70b9\u7684\u6570\u91cf\uff0c\u56e0\u6b64\u5b83\u4e5f\u8868\u793a\u5f53\u524d\u533a\u5757\u7684\u7b54\u6848\uff0c$lin[1]$ ~ $lin[pl]$ \u91cc\u9762\u5c06\u4f1a\u5b58\u50a8\u5f53\u524d\u533a\u5757\u5185\u6240\u6709\u70b9\u7684\u5750\u6807\uff09\uff0c\n\n\u5728\u4e00\u8d9f\u6df1\u641c\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u5230\u4e00\u4e2a\u65b0\u7684\u70b9\u5c31 ++$pl$\uff0c\u5e76\u5c06\u8be5\u70b9\u7684\u5750\u6807\u5b58\u5728\u4e34\u65f6\u6570\u7ec4\u91cc\uff0c\u641c\u7d22\u7ed3\u675f\u540e\u518d\u4f9d\u636e\u5750\u6807\u6570\u7ec4\u628a\u7b54\u6848\u6570\u7ec4\u7684\u5bf9\u5e94\u4f4d\u7f6e\u586b\u4e0a $pl$\u3002\u4e00\u6b21\u6df1\u641c\u7ed3\u675f\uff0c\u7f6e $pl$ \u4e3a $0$\u3002\n\n\u4e0d\u80fd\u5728\u6df1\u641c\u5185\u90e8\u67d3\u8272\uff0c\u56e0\u4e3a\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u77e5\u9053\u533a\u57df\u5185\u5230\u5e95\u6709\u591a\u5c11\u8fde\u901a\u70b9\u3002\n\n___\n\n## \u5177\u4f53\u89e3\u91ca\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1001][1001];//01\u6570\u7ec4 \nint res[1001][1001];//\u7b54\u6848\u6570\u7ec4 \nint lin[1000001][2];//\u4e34\u65f6\u7684\u5750\u6807\u6570\u7ec4 \nint n, m, pl;//pl\u662f\u5f53\u524d\u533a\u5757\u8fde\u901a\u7684\u70b9\u6570 \nint b[4][2] = {{0,1},{1,0},{0,-1},{-1,0}}; //\u4e0a\u4e0b\u5de6\u53f3\u56db\u65b9\u5411\u7684\u6df1\u641c\uff0c\u5f88\u6709\u7528\n\nvoid dfs(int x, int y){\n    pl++;//\u6765\u5230\u4e00\u4e2a\u65b0\u7684\u70b9\uff0c\u4e0b\u9762\u5b58\u50a8\u8be5\u70b9\u5750\u6807 \n    lin[pl][0] = x; \n    lin[pl][1] = y;\n    res[x][y] = 1;//\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u8d70\u8fc7\u4e86\uff0c\u53ea\u662f\u4e3a\u4e86\u9632\u6b62\u4e00\u8d9f\u6df1\u641c\u5185\u90e8\u8d70\u91cd\u590d\u70b9\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8d4b\u4e3apl \n    for(int i = 0; i <= 3; i++){\n        int u = x + b[i][0];//[u][v]\u5373\u4e3a\u76ee\u7684\u5730 \n        int v = y + b[i][1];\n        if(u < 1 || u > n || v < 1 || v > n)//\u8d85\u51fa\u8fb9\u754c\uff1f \n            continue;\n        if(res[u][v] > 0) continue;//\u8d70\u5230\u8fc7\u4e86 \uff1f \n        if(a[u][v] == a[x][y]) continue;//\u6839\u636e\u9898\u610f\uff0c\u5e76\u4e0d\u80fd\u8d70\uff1f \n        dfs(u, v);//\u4ee5\u4e0a\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\u624d\u5411\u4e0b\u641c\u7d22 \n    }\n}\n\nint main(){\n    memset(res, 0, sizeof(res));//\u6e05\u7a7a\u7b54\u6848\u6570\u7ec4 \n    scanf(\"%d %d\", &n, &m);\n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= n; j++)\n            scanf(\"%1d\", &a[i][j]);//%1d\uff0c\u9650\u5b57\u5bbd\uff0c\u8bfb\u5165\u65b9\u4fbf \n    for(int i = 1; i <= m; i++){\n        pl = 0;//\u91cd\u7f6epl \n        int x, y;\n        scanf(\"%d %d\", &x, &y);\n        if(res[x][y] > 0){//\u5df2\u7ecf\u6709\u7b54\u6848 \n            printf(\"%d\\n\", res[x][y]);\n            continue;\n        }\n        dfs(x, y);\n        for(int j = 1; j <= pl; j++)\n            res[lin[j][0]][lin[j][1]] = pl; //\u4f9d\u636e\u5750\u6807\u6570\u7ec4\uff0c\u4e3a\u7b54\u6848\u6570\u7ec4\u586b\u4e0apl \n        printf(\"%d\\n\", pl);\n    }\n    return 0;\n}\n```",
        "postTime": 1512805694,
        "uid": 49474,
        "name": "\u5b66\u59d4",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "### \u8fd9\u9898\u5462\uff0c\u672c\u4eba\u8c03\u4e86\u4e00\u4e2a\u4e0b\u5348\uff08\u4e2d\u95f4\u8fd8\u6709\u5403\u996d\u6253\u6e38\u620f\u4ec0\u4e48\u7684\uff09\uff0c\u5dee\u70b9\u534a\u8def\u592d\u6298\uff0c\u6700\u540e\u8fd8\u662f\u5199\u51fa\u6765\u4e86\u3002\n\u601d\u8def\uff1a\u8054\u901a\u5757\u67d3\u8272\n\n~~\u5fd9\u4eba\u5c31\u522b\u770b\u4e0b\u9762\u505a\u9898\u7ecf\u5386\u4e86~~\n\n\u770b\u5230\u9898\u76ee\u7684\u65f6\u5019\uff0c\u6211\u5148\u6253\u4e86\u4e00\u4e2a\u5e38\u89c4\u7684dfs\uff0c3\u4e2a\u70b9TLE\uff08\u8fd9\u4e2a\u5f88\u6b63\u5e38\uff09\uff0c\u60f3\u4e86\u534a\u5929dfs\u4e0d\u597d\u53bb\u4f18\u5316\uff08\u67d3\u8272\u6574\u7247\u8054\u901a\u5757\uff09\uff08dalao\u52ff\u55b7\uff0cjuruo\u662f\u771f\u7684\u60f3\u4e0d\u51fa\u6765\uff09\uff0c\u5c31\u53c8\u6253\u4e86\u4e2abfs\u6765\u4f18\u5316\uff0c\u8f9b\u8f9b\u82e6\u82e6\u6253\u5b8c\u540e\u53d8\u6210\u4e86WA\u4e09\u4e2a\u70b9\uff0cWA\u7684\u4e00\u58f0\u5c31\u54ed\u4e86\u51fa\u6765\uff0c\u6700\u540e\uff0c\u6211\u7ec8\u4e8e\u627e\u5230\u4e86\u95ee\u9898\uff1a\n# for\u5faa\u73af\u8303\u56f4\uff01\uff01\uff01\n\u6211\u5728NOIP\u8d5b\u573a\u4e0a\u5c31\u592d\u6298\u4e8e\u6b64\u3002\u3002\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e86\uff0c\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\nusing namespace std;\nchar map[1001][1001];\nint n,m,sx,sy,book[1001][1001],next[4][2]={1,0,0,1,-1,0,0,-1};\nstruct p1141{int x,y;}p[1000001];\nvoid bfs(int x,int y)//\u57fa\u672c\u7684bfs\uff0c\u53ef\u4ee5\u4e0d\u7528\u51fd\u6570\uff0c\u4e2a\u4eba\u4e60\u60ef\n{\n\tint ans=1,h=0,t=1,tx,ty;\n\tp[h].x=x;\n\tp[h].y=y;\n\tbook[x][y]=1;\n\twhile(h<t)\n\t{\n\t\tfor(int k=0;k<=3;k++)\n\t\t{\n\t\t\ttx=p[h].x+next[k][0];\n\t\t\tty=p[h].y+next[k][1];\n\t\t\tif(tx<1||ty<1||tx>n||ty>n||book[tx][ty]!=0||map[p[h].x][p[h].y]==map[tx][ty]) continue;\n\t\t\tp[t].x=tx;\n\t\t\tp[t].y=ty;\n\t\t\tbook[tx][ty]=1;\n\t\t\tans++;\n\t\t\tt++;\n\t\t}\n\t\th++;\n\t}\n\tfor(int j=0;j<t;j++)//\u5c06\u961f\u5217\u4e2d\u7684\u6240\u6709\u8054\u901a\u5757\u67d3\u8272\uff0c\u6211\u539f\u6765\u5199\u6210j<=t\u4e86\uff0c\u6240\u4ee5\u5c31WA\u4e86\u3002\u3002\u3002\n\t    book[p[j].x][p[j].y]=ans;\n\treturn;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t    cin>>map[i][j];//\u8bfb\u56fe\n\tfor(int i=1;i<=m;i++)\n\t{\n\t    cin>>sx>>sy;//\u8be2\u95ee\n\t\tif(book[sx][sy]!=0) cout<<book[sx][sy]<<endl;//\u5982\u679c\u662f\u67e5\u627e\u8fc7\u7684\u8054\u901a\u5757\u5c31\u76f4\u63a5\u8f93\u51fa\n\t\telse \n\t\t{\n\t\t\tbfs(sx,sy);\n\t\t\tcout<<book[sx][sy]<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u6700\u597d\u4e0d\u8981\u76f4\u63a5\u6284\u4ee3\u7801\uff0c\u5148\u7406\u89e3\u601d\u8def\u518d\u81ea\u5df1\u6253\u4e00\u904d\u3002\n\n\u6ca1\u6709\u4ed4\u7ec6\u5730\u53bb\u7ffb\u6709\u6ca1\u6709\u76f8\u540c\u601d\u8def\u7684\u9898\u89e3\uff0c\u671b\u5ba1\u6838\u8fc7\u3002\n\n\u4e0d\u559c\u52ff\u55b7\u3002",
        "postTime": 1545477376,
        "uid": 25936,
        "name": "ZERORUSH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u4e8b\u5b9e\u4e0a\uff0c\u672c\u9898\u4e0d\u4e00\u5b9a\u975e\u8981\u7528\u641c\u7d22\u7b97\u6cd5\u6765\u89e3\u51b3\u3002\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u89e3\u51b3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u4e0a\u4e0b\u5de6\u53f3\u8054\u901a\u5e76\u4e14\u6570\u5b57\u4e0d\u540c\u7684\u65b9\u683c\u5728\u4e00\u4e2a\u8054\u901a\u5757\u5185\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u8fd9\u4e9b\u8054\u901a\u5757\u3002\n\n\u7136\u540e\u8f93\u51fa\u7684\u65f6\u5019\u5c31\u662f\u8f93\u51fa\u8be5\u65b9\u683c\u6240\u5728\u7684\u8054\u901a\u5feb\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n```cpp\n\n\n#include <string>\n#include <iostream>\n\nusing namespace std;\n\nconst size_t Max_N(1050);\n\nsize_t N;\nunsigned int M;\nstring Map[Max_N];\n\ninline\nunsigned int Really(const unsigned int &i, const unsigned int &j)\n{\n    return (i - 1) * N + j;\n}\n\nint dx[] = {+1, -1, +0, +0};\nint dy[] = {+0, +0, +1, -1};\n\nunsigned int Father[Max_N * Max_N];\nunsigned int Cnt[Max_N * Max_N];\nunsigned int a, b;\nunsigned int x, y;\n\nunsigned int Get_Father(const unsigned int &v)\n{\n    return Father[v] == v ? v : Father[v] = Get_Father(Father[v]);\n}\n\nint main()\n{\n    cin >> N >> M;\n    for (size_t i = 1;i <= N;++i)\n    {\n        cin >> Map[i];\n        Map[i] = \"0\" + Map[i];\n    }\n    \n    for (size_t i = 1;i <= N * N;++i)\n        Father[i] = i, Cnt[i] = 1;\n    for (size_t i = 1;i <= N;++i)\n        for (size_t j = 1;j <= N;++j)\n            for (size_t k = 0;k != 4;++k)\n            {\n                a = i + dx[k];\n                b = j + dy[k];\n                if (a >= 1 && a <= N && b >= 1 && b <= N)\n                    if (Map[i][j] != Map[a][b])\n                    {\n                        x = Get_Father(Really(i, j));\n                        y = Get_Father(Really(a, b));\n                        if (x != y)\n                        {\n                            Father[y] = x;\n                            Cnt[x] += Cnt[y];\n                        }\n                    }\n            }\n    \n    while (M--)\n    {\n        scanf(\"%u%u\", &a, &b);\n        printf(\"%u\\n\", Cnt[Get_Father(Really(a, b))]);\n    }\n    \n    return 0;\n}\n\n```",
        "postTime": 1444227199,
        "uid": 3182,
        "name": "Created_equal1",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u849f\u84bb\u4e0d\u4f1abfs\uff0c\u7528\u7684dfs=v=//\u849f\u84bb\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\n\n\u7eaf\u66b4\u529b \u5bf9\u4e8e\u67e5\u8be2\u7684\u70b9\u8fdb\u884cdfs\uff0c\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u6807\u8bb0\u8fc7\u7684\u70b9\uff0c\u4f7fans++\uff0c\u5e76\u5bf9\u8be5\u70b9\u6253\u4e0a\u6807\u8bb0\u8fdb\u884cdfs\u3002\n\n\u8fd9\u6837\u7684\u505a\u6cd5\u662f\u6b63\u786e\u7684\u4f46\u662f\u4f1at3\u4e2a\u70b9\n\n\u90a3\u4e48\u6211\u4eec\u7684dfs\u8be5\u5982\u4f55\u6539\u8fdb\u5462\uff1f\n\n\u91cd\u65b0\u5ba1\u89c6\u4e0b\u6211\u4eec\u7684dfs\uff0c\u53d1\u73b0\u5bf9\u4e8e\u5df2\u7ecf\u67e5\u8fc7\u7684\u70b9\uff0c\u4ed6\u8fd8\u662f\u4f1a\u8fdb\u884c\u91cd\u590d\u7684dfs,\u90a3\u4e48\u662f\u4e0d\u662f\u8bb0\u5f55\u4e00\u4e0b\u67e5\u8be2\u8fc7\u70b9\u7684\u7b54\u6848\uff0c\u5c31\u80fd\u8fc7\u4e86\u5462\uff1f\n\n\u5e76\u4e0d\u662f23333\uff0c\u8fd8\u662f\u4f1at3\u4e2a\u70b9==\n\n\u91cd\u65b0\u770b\u4e0b\u9898\u76ee\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u70b9A,B\uff0c\u5982\u679ca\u80fd\u904d\u5386\u5230b\u90a3\u4e48b\u4e00\u5b9a\u80fd\u904d\u5386\u5230a\uff0cb\u80fd\u904d\u5386\u5230\u7684\u70b9\u6570\u4e00\u5b9a\u4e0ea\u76f8\u7b49\n\n\u6240\u4ee5//\u5927\u4f18\u5316\u6765\u4e86\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u80fd\u904d\u5386\u5230\u7684\u6240\u6709\u7684\u70b9\uff0c\u5c06\u5176\u67d3\u6210\u540c\u79cd\u989c\u8272\uff0c\u7136\u540e\u67e5\u8be2\u65f6\u53ea\u9700\u8981\u67e5\u8be2\u8be5\u70b9\u989c\u8272\u5bf9\u5e94\u7684ans\u5373\u53ef//\u65f6\u95f4\u590d\u6742\u5ea6\u5dee\u4e0d\u591a\u964d\u4f4e\u4e86\u4e00\u4e2a\u5927\u5e38\u6570\n\n\u7136\u540e\u5c31AC\u4e86\n\n\u6700\u540e\u9644\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint g[1001][1001],f[1001][1001],d[1000005];//d\u6570\u7ec4\u5c31\u662f\u5728\u4e0b\u7684\u4f18\u5316\uff0c\u6bcf\u79cd\u989c\u8272\u5bf9\u5e94\u7684\u7b54\u6848\nint n,m,k,ans,cnt=1;\nstring c;\nvoid init()\n{\n    ans=0;\n   /* for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    f[i][j]=0;*/\n}\nvoid dfs(int x,int y)\n{\n    ans++;\n    f[x][y]=cnt;\n    if(!f[x-1][y]&&((x-1)>=1)&&(g[x-1][y]!=g[x][y]))dfs(x-1,y);\n        if(!f[x+1][y]&&((x+1)<=m)&&(g[x+1][y]!=g[x][y]))dfs(x+1,y);\n            if(!f[x][y-1]&&((y-1)>0)&&(g[x][y-1]!=g[x][y]))dfs(x,y-1);\n                if(!f[x][y+1]&&((y+1)<=m)&&(g[x][y+1]!=g[x][y]))dfs(x,y+1);\n                d[cnt]=ans;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>c;\n        //scanf(\"%s\",c);\n        m=c.size();\n        for(int j=0;j<m;j++)\n         g[i][j+1]=c[j]-'0';\n    }\n    for(int i=1;i<=k;i++)\n    {\n        init();\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        if(!f[a][b])\n        {\n        dfs(a,b);\n        cnt++;\n        }\n        printf(\"%d\\n\",d[f[a][b]]);\n    }\n    return 0;\n}\n```",
        "postTime": 1505823178,
        "uid": 43601,
        "name": "\u56e7\u4eba232",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "#\u849f\u84bb\u7684\u9898\u89e3\n\n##\u8bf6\u6211\u53d1\u73b0\u597d\u50cf\u6211\u7279\u522b\u559c\u6b22\u7528DFS\u505aBFS\u7684\u9898\u76ee ~~\u662f\u56e0\u4e3a\u6211\u61d2\u5f97\u5199BFS~~\n\n###\u6211\u7ed9\u5927\u5bb6\u5e26\u6765\u7684\u662f\u4e00\u79cd\u5728\u67d3\u8272\u7684\u57fa\u7840\u4e0a\u505a\u7684\u975e\u5e38\u795e\u5947\u7684\u9177\u4f3c\u5e76\u67e5\u96c6\u6709\u4e0d\u662f\u5e76\u67e5\u96c6\u7684\u5199\u6cd5\n\n###\u4f46\u662f\u5728\u8fd9\u91cc\u6211\u5148\u7ed9\u5927\u5bb6\u770b\u4e00\u4e0b\u4e00\u822c\u7684\u4ee3\u7801\u7684\u53d1\u5c55\u5386\u7a0b\n\n###\u7b2c\u4e00\u4e2a 70\u5206\uff08TLE2\u30019\u300110\uff09 \u66b4\u529b\u67d3\u8272\n\n###\u603b\u4f53\u601d\u8def\uff1a\u76f4\u63a5\u6536\u5230\u4e00\u4e2a\u70b9\uff0c\u76f4\u63a5\u67d3\u8272\n\n###\uff08PS\uff1a\u7531\u4e8e\u61d2\u5f97\u6539\u53d8\u91cf\u540d\u4e86\uff0cans\u8868\u793a\u7684\u662f\u5224\u91cd\uff09\n\n###\uff08PS2\uff1a\u56e0\u4e3a\u5e76\u4e0d\u662f\u6ee1\u5206\u5199\u6cd5\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u51fa\u6ce8\u91ca\uff09\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint s[1010][1010];\nint opt[6][3] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nint cou;\nint ans[1010][1010];\nint n;\n\nvoid dfs(int x, int y){\n    if(x > n || x < 1 || y > n || y < 1) return ;\n    if(ans[x][y] > -1) return ;\n    cou++;\n    ans[x][y] = 0;\n    for(int i = 0; i < 4; i++){\n        if(s[x+opt[i][0]][y+opt[i][1]] != s[x][y])\n            dfs(x+opt[i][0], y+opt[i][1]);\n    }\n}\n\nint main(){\n    memset(ans, -1, sizeof(ans));\n    int m;\n    scanf(\"%d %d\", &n, &m);\n    for(int i = 1; i <= n; i++){\n        char str[1010];\n        scanf(\"%s\", &str);\n        for(int j = 1; j <= n; j++){\n            s[i][j] = str[j-1] - 48;\n        }\n    }\n    for(int i = 1; i <= m; i++){\n        int x, y;\n        cou = 0;\n        scanf(\"%d %d\", &x, &y);\n        dfs(x, y);\n        printf(\"%d\", cou);\n        memset(ans, -1, sizeof(ans));\n    }\n}\n```\nRP++++++++++++++\u5206\u5272\u7ebf++++++++++++++RP\n\n\u7b2c\u4e8c\u79cd \u8bb0\u5fc6\u5316\u641c\u7d22 80\u5206\uff08TLE2\u300110\uff09\n\n###\u8fd9\u79cd\u5199\u6cd5\u7684\u601d\u8def\u5c31\u662f\u5728\u7b2c\u4e00\u79cd\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u8bb0\u5fc6\u5316\uff0c\u5728\u6bcf\u6b21\u67d3\u8272\u67d3\u597d\u4e4b\u540e\u5c31\u53bb\u904d\u5386\u4e00\u904d\uff0c\u5982\u679c\u53d1\u73b0\u8fd9\u4e2a\u70b9\u662f\u521a\u521a\u641c\u7d22\u8fc7\u7684\u70b9\uff0c\u90a3\u4e48\u4e45\u76f4\u63a5\u628a\u7b54\u6848\u5b58\u50a8\u5230\u5bf9\u5e94\u7684ans\u4e2d\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint s[1010][1010];\nint opt[6][3] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nint cou;\nint ans[1010][1010];\nint n;\n\nvoid dfs(int x, int y){\n    if(x > n || x < 1 || y > n || y < 1) return ;\n    if(ans[x][y] > -1) return ;\n    cou++;\n    ans[x][y] = 0;\n    for(int i = 0; i < 4; i++){\n        if(s[x+opt[i][0]][y+opt[i][1]] != s[x][y])\n            dfs(x+opt[i][0], y+opt[i][1]);\n    }\n}\n\nint main(){\n    memset(ans, -1, sizeof(ans));\n    int m;\n    scanf(\"%d %d\", &n, &m);\n    for(int i = 1; i <= n; i++){\n        char str[1010];\n        scanf(\"%s\", &str);\n        for(int j = 1; j <= n; j++){\n            s[i][j] = str[j-1] - 48;\n        }\n    }\n    for(int i = 1; i <= m; i++){\n        int x, y;\n        cou = 0;\n        scanf(\"%d %d\", &x, &y);\n        if(ans[x][y] > 0){\n            printf(\"%d\\n\", ans[x][y]);\n            continue;\n        }\n        dfs(x, y);\n        printf(\"%d\\n\", cou);\n        for(int u = 1; u <= n; u++){\n            for(int v = 1; v <= n; v++){\n                if(ans[u][v] == 0) ans[u][v] = cou;\n            }\n        }\n    }\n}\n```\n\nRP++++++++++++++\u5206\u5272\u7ebf++++++++++++++RP\n\n\n##\u6700\u540e\uff0c\u538b\u8f74\u7684\u65b9\u6cd5\u51fa\u73b0\u4e86\uff01\n\n###\u6ca1\u9519\u5c31\u662f\u4e00\u5f00\u59cb\u8bf4\u7684AC\u7b97\u6cd5\uff08\u90a3\u4e2a\u8be1\u5f02\u7684\u4f3c\u5e76\u67e5\u96c6\u800c\u975e\u5e76\u67e5\u96c6\u7684\u7b97\u6cd5\uff09\n\n###\u5b83\u7684\u601d\u8def\u662f\uff0c\u5728\u7b2c\u4e8c\u79cd\u7684\u57fa\u7840\u4e0a\uff0c\u65b0\u589e\u4e00\u4e2agenx\u3001geny\uff0c\u6765\u5b58\u50a8\u5f53\u524d\u8fd9\u4e2a\u70b9\u5b83\u7684\u6839\u5728\u54ea\u91cc\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728DFS\u67d3\u8272\u7684\u540c\u65f6\u628a\u8fd9\u4e24\u4e2a\u7ed9\u5b58\u597d\uff0c\u90a3\u4e48\u8fd9\u6837\u5b50\u4ee5\u6765\uff0cans\u6570\u7ec4\u4e2d\u53ea\u6709\u7b2c\u4e00\u6b21\u8be2\u95ee\u7684\u70b9\u4e2d\u5b58\u6709\u7b54\u6848\uff0c\u5176\u5b83\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u4ec5\u4ec5\u6307\u5411\u7740\u90a3\u91cc\n\n###\u4e0a\u4ee3\u7801~~~\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint s[1010][1010];\nint opt[6][3] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nint cou; // \u7528\u6765\u5b58\u50a8\u5f53\u524d\u67d3\u8272\u5230\u4e86\u591a\u5c11\u4e2a\u70b9 \nint ans[1010][1010];\nint n;\nint genx[1010][1010];\nint geny[1010][1010];\nint curx, cury; // \u7528\u6765\u5b58\u50a8\u5f53\u524d \n\nvoid dfs(int x, int y){ // \u67d3\u8272\u7528\u7684DFS\u51fd\u6570 \n    if(x > n || x < 1 || y > n || y < 1) return ; // \u8d8a\u754c\u5224\u65ad \n    if(ans[x][y] > -1) return ; // \u5224\u91cd\uff08\u6b64\u65f6ans\u662f\u4e24\u7528\u7684\uff0c\u65e2\u662f\u5b58\u50a8\u7b54\u6848\u7528\uff0c\u4e5f\u53ef\u4ee5\u62ff\u6765\u5224\u91cd\uff09 \n    cou++;\n    genx[x][y] = curx; // \u8be1\u5f02\u7684\u4f3c\u5e76\u67e5\u96c6\u800c\u975e\u5e76\u67e5\u96c6 \n    geny[x][y] = cury; // \u5c31\u662f\u8bbe\u7f6e\u5f53\u524d\u70b9\u7684gen\u5728\u54ea\u91cc\uff0c\u65b9\u4fbf\u540e\u9762\u6765\u67e5\u627e\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u7b54\u6848 \n    ans[x][y] = 0;  // \u6807\u8bb0\u4e00\u4e0b\u5f53\u524d\u70b9 \n    for(int i = 0; i < 4; i++){\n        if(s[x+opt[i][0]][y+opt[i][1]] != s[x][y])\n            dfs(x+opt[i][0], y+opt[i][1]);\n    }\n}\n\nint main(){\n    memset(ans, -1, sizeof(ans)); // \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u521d\u59cb\u5316\u6210-1\u5462\uff1f\u56e0\u4e3a \u8fd9\u6837\u5b50\u65b9\u4fbf\u540e\u9762\u5224\u91cd\uff08\u540e\u9762\u8bbe\u4e3a0\u6765\u5224\u91cd\uff09 \n    memset(genx, 0, sizeof(genx));\n    memset(geny, 0, sizeof(geny));\n    int m;\n    scanf(\"%d %d\", &n, &m);\n    for(int i = 1; i <= n; i++){ // \u8bfb\u5165\uff0c\u4e0d\u591a\u8bb2\u4e86 \n        char str[1010];\n        scanf(\"%s\", &str);\n        for(int j = 1; j <= n; j++){\n            s[i][j] = str[j-1] - 48;\n        }\n    }\n    for(int i = 1; i <= m; i++){\n        int x, y;\n        cou = 0;\n        scanf(\"%d %d\", &x, &y);\n        if(ans[genx[x][y]][geny[x][y]] > 0){ // \u5224\u65ad\u5f53\u524d\u70b9\u662f\u4e0d\u662f\u4ee5\u524d\u641c\u7d22\u8fc7\u7684 \n            printf(\"%d\\n\", ans[genx[x][y]][geny[x][y]]);\n            continue;\n        }\n        curx = x;\n        cury = y;\n        dfs(x, y); // \u67d3\u8272 \n        printf(\"%d\\n\", cou);\n        ans[x][y] = cou; // \u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u4e0b\uff1a\u5fc5\u987b\u628a\u81ea\u5df1\u7684gen\u4e5f\u8bbe\u6210\u81ea\u5df1\uff0c\u5426\u5219\u5982\u679c\u540e\u9762\u95ee\u540c\u4e00\u4e2a\u70b9\u8f93\u5c31\u9519\u4e86\n        genx[x][y] = x;\n        geny[x][y] = y;\n    }\n} // \u8017\u65f645\u5206\u949f\u7ec8\u4e8e\u5199\u5b8c\u4e86\u3002\u3002\u3002\n```",
        "postTime": 1509717453,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "```cpp  \n#include<bits/stdc++.h>\nusing namespace std;\nint vis[1005][1005],tmp[1000005][2];\nint sx,sy,n,m,a[1005][1005];\nint dx[5]={0,1,-1,0,0},dy[5]={0,0,0,1,-1},cnt;\nvoid dfs(int x,int y) {\n\tif(x<1||x>n||y<1||y>n) return;//\u51fa\u754c\n\tif(vis[x][y]) return;//\u8d70\u8fc7\u4e86\n\tcnt++;//\u8bb0\u4e00\u4e0b \n\ttmp[cnt][0]=x;//\u8bb0\u4e00\u4e0b\u8fd9\u4e2a\u5730\u65b9\u7684\u5750\u6807 \uff0c\u94fa\u57ab \u9a9a\u64cd\u4f5c \n\ttmp[cnt][1]=y;\n\tvis[x][y]=1;//\u6211\u6765\u8fc7\u4e86 \n\tfor(int i=1;i<=4;i++)\n\t{\n\t\tif(a[x][y]!=a[x+dx[i]][y+dy[i]])//\u80fd\u8d70\u4e48\uff1f \n\t\tdfs(x+dx[i],y+dy[i]);//\u53bb\u4e0b\u4e00\u4e2a \u5730\u65b9\u5eb7\u5eb7 \n\t}//\u8fd9\u4e2a\u9898\u4e0d\u7528\u56de\u590d\u201c\u70b9\u201d\u7684\u72b6\u6001 \n}\nint main(){\n\tmemset(vis,0,sizeof(vis));\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++){\n\t\tchar x;\n\t\tcin>>x;//\u849f\u84bb\u7684\u6570\u636e\u70b9\uff0c\u4e00\u4e2a\u4e00\u4e2a\u6765 \n\t\ta[i][j]=x-'0';//\u786e\u4fdd\u5730\u56fe\u7684\u7eaf\u51c0\u6027 \n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint e,b;\n\t\tcin>>e>>b;\n\t\tcnt=0;\n\t\tif(vis[e][b]>0){//\u8fd9\u91cc\u6211\u6765\u8fc7\u4e48\uff1f \n\t\t\tcout<<vis[e][b]<<endl;//\u6765\u8fc7\u5c31\u80fd\u76f4\u63a5\u8f93\u51fa \n\t\t\tcontinue;\n\t\t}\n\t\tdfs(e,b);//\u6ca1\u6765\u8fc7\u5c31\u5237\u4e00\u904d \n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tvis[tmp[i][0]][tmp[i][1]]=cnt;//\u5237\u5b8c\u4e86\u5c31\u662f\u7b54\u6848 \n\t\tcout<<cnt<<endl;//\u9a9a\u64cd\u4f5c\uff0c\u53bb\u8fc7\u7684\u5730\u65b9\u90fd\u662f\u4e92\u76f8\u8fde\u901a\u7684\n\t\t//\u6240\u4ee5\u5728\u8fd9\u533a\u57df\u5185\u7684\u70b9\u90fd\u662f\u8fd9\u4e2a\u7b54\u6848 \uff0c\u4fee\u6539\u4e86vis\u6570\u7ec4\u6b63\u597d\u8bb0\u7740\uff0c\u9a9a\u7684\u4e00\u6279 \n\t}\n\treturn 0;\n}\n\t\n\t\n\n```\n",
        "postTime": 1569162206,
        "uid": 134669,
        "name": "Pz_Old",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "###  _[\u539f\u9898\u94fe\u63a5](https://www.luogu.org/problemnew/show/P1141)_ \n \n------------\n\n# \u9898\u610f\uff1a\n\n **\u6709\u4e00\u4e2a\u4ec5\u7531\u6570\u5b570\u4e0e1\u7ec4\u6210\u7684n\u00d7n\u683c\u8ff7\u5bab\u3002\u82e5\u4f60\u4f4d\u4e8e0\u4e0a\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u79fb\u52a8\u5230\u76f8\u90bb4\u683c\u4e2d\u662f1\u7684\u4f4d\u7f6e\u4e0a\uff0c\u540c\u6837\u82e5\u4f60\u4f4d\u4e8e1\u4e0a\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u79fb\u52a8\u5230\u76f8\u90bb4\u683c\u4e2d\u662f0\u7684\u4f4d\u7f6e\u4e0a\u3002\u73b0\u5728\u7ed9\u5b9a\u4f60\u6b64\u65f6\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u6c42\u51fa\u8be5\u4f4d\u7f6e\u51fa\u53d1\uff0c\u6700\u591a\u80fd\u5230\u591a\u5c11\u4e2a\u683c\u5b50\u4e0a\u53bb(\u4e2a\u6570\u5305\u62ec\u8d77\u70b9)**\n \n **\u4f8b\u5982\uff1a**\n \n **0 1 ~~1 0 1~~**\n \n **0 1 1 ~~1 0~~**\n \n **1 0 0 1 0**\n \n **\u4ece\u7b2c1\u884c\u7b2c3\u5217\u51fa\u53d1\uff0c\u6700\u591a\u80fd\u7ecf\u8fc75\u4e2a\u683c\u5b50(\u5212\u6a2a\u7ebf\u4f4d\u7f6e)\uff0c\u5c31\u8f93\u51fa4**\n \n\n\n\n------------\n#  \u601d\u8def\uff1a\n**\u6ce8\u610f:\u56e0\u4e3a\u7ed9\u51fa\u7684\u4f4d\u7f6e\u8fbe\u5230\u4e8610w\u7ea7\u522b\uff0c\u6545\u4e0d\u53ef\u66b4\u529b\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u641c\u7d22\uff0c\u4f1a\u51fa\u73b03\u4e2a\u70b9\u7684TLE**\n\n\u89c2\u5bdf\u540e\u5bb9\u6613\u53d1\u73b0\uff0c**\u5982\u679c\u67d0\u4e24\u4e2a\u4f4d\u7f6e\u5c5e\u4e8e\u540c\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5219\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u53ef\u8fbe\u683c\u5b50\u6570\u76f8\u540c**,\u5982\u4e0a\u4f8b\uff0c\u518d\u4ece\u7b2c2\u884c\u7b2c4\u5217\u51fa\u53d1\uff0c\u4ecd\u7136\u6700\u591a\u7ecf\u8fc75\u4e2a\u683c\u5b50\uff0c\u56e0\u4e3a\u8be5\u5730\u56fe\u5177\u6709\u53cc\u5411\u6027(\u89c4\u5219\u4e3a0->1 1->0 \u6b63\u53ef\u8fbe\uff0c\u53cd\u5fc5\u53ef\u8fbe),\u5373\u82e5a\u53ef\u8fbeb,\u5219b\u4e5f\u53ef\u8fbea\u3002\u6545\u800c\uff0c**\u540c\u5c5e\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u70b9\uff0c\u5177\u6709\u76f8\u540c\u7684\u53ef\u8fbe\u683c\u5b50\u6570\u3002**\n\n\n------------\n\n**\u56e0\u6b64\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4$blocks[N][N]$, \u8bb0\u5f55\u4ece\u4f4d\u7f6e$(i,j)$\u51fa\u53d1\u53ef\u8fbe\u7684\u683c\u5b50\u6570\u91cf,\u53ea\u9700\u6267\u884c\u8fde\u901a\u5757\u4e2a\u6570\u6b21\u7684\u641c\u7d22\uff0c\u5373\u53ef\u586b\u6ee1\u8be5\u6570\u7ec4\u3002**\n\n**\u505a\u6cd5\u5982\u4e0b,\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\u8fdb\u884c\u641c\u7d22\uff0c\u5206\u522b\u7edf\u8ba1\u6bcf\u4e2a\u8fde\u901a\u5757\u5305\u542b\u7684\u683c\u5b50\u6570\uff0c\u5bf9\u5f53\u524d\u8fde\u901a\u5757\uff0c\u8bb0\u5f55\u8be5\u8fde\u901a\u5757\u5185\u70b9\u7684\u5750\u6807\uff0c\u5f53\u5bf9\u8be5\u8fde\u901a\u5757\u641c\u7d22\u5b8c\u6bd5\u65f6\uff0c\u4e3a\u8be5\u8fde\u901a\u5757\u5185\u6240\u6709\u7684\u70b9\u7edf\u4e00\u8d4b\u503c\u4e3a\u7edf\u8ba1\u7684\u683c\u5b50\u6570**\n\n\n------------\n\n**AC\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b:**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1010;\nconst int dx[] = {0,0,-1,1};\nconst int dy[] = {-1,1,0,0};\nstruct node{\n    int x,y;\n};\nchar maze[N][N];\nint vis[N][N],block[N][N];//\u8bbf\u95ee\u6570\u7ec4\u548c\u8bb0\u5f55(i,j)\u6240\u5c5e\u8fde\u901a\u5757\u7684\u683c\u5b50\u6570\u91cf\nint n,m,a,b,ans;\nvoid bfs(){\n    node now,nx;\n    queue<node> q;\n    vector<node> pos;//\u8bb0\u5f55\u8fde\u901a\u5757\u5185\u7684\u683c\u5b50\u5750\u6807\n    q.push({a,b});\n    vis[a][b] = 1;\n    ans = 1;//\u8ba1\u6570\u8fde\u901a\u5757\u5185\u7684\u683c\u5b50\u6570\u91cf\n    while(!q.empty()){\n        now = q.front(),q.pop();\n        pos.push_back(now);\n        for(int i = 0; i < 4; i++){\n            nx.x = now.x+dx[i],nx.y = now.y+dy[i];\n            if(!maze[nx.x][nx.y]||vis[nx.x][nx.y]||maze[now.x][now.y]==maze[nx.x][nx.y]) continue;\n            vis[nx.x][nx.y] = 1;\n            ans++;\n            q.push(nx);\n\n        }\n    }\n    //\u8be5\u8fde\u901a\u5757\u641c\u7d22\u5b8c\u6bd5\uff0c\u8d4b\u503c\u5373\u53ef\n    for(auto v : pos) block[v.x][v.y] = ans;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1; i <= n; i++) scanf(\"%s\",maze[i]+1);//\u4e0b\u6807\u4ece1\u5f00\u59cb\n    while(m--){\n        scanf(\"%d%d\",&a,&b);\n        if(!block[a][b]) bfs();//\u82e5a,b\u6240\u5728\u8fde\u901a\u5757\u8fd8\u6ca1\u641c\u7d22\u8fc7\uff0c\u6267\u884c\u641c\u7d22\n        printf(\"%d\\n\",block[a][b]);\n    }\n    return 0;\n}\n\n```\n\n\n\n    ",
        "postTime": 1559273805,
        "uid": 213529,
        "name": "Zero\u795e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "### UPD\uff1a\n\n\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5ba1\u4e86\u51e0\u5929\u7ec8\u4e8e\u8fc7\u4e86\uff0c\u611f\u52a8\u3002**\u9898\u89e3\u4fee\u6539\u540e\u8fd8\u8981\u91cd\u5ba1\uff1f\uff1f\uff1f**\n\n**\u524d\u7f6e\u6280\u80fd\uff1a\u5e76\u67e5\u96c6**\n\n\u6b64\u9898\u7684\u601d\u8def\u548c`P3958 \u5976\u916a`\u601d\u8def\u8f83\u4e3a\u76f8\u4f3c\u3002\n\n## \u5e76\u67e5\u96c6\u89e3\u6cd5\n\u5e76\u67e5\u96c6\u6c42\u8054\u901a\u5757\u3002\u8fd9\u9898\u5176\u5b9e\u8fde\u641c\u7d22\u90fd\u7528\u4e0d\u4e0a\uff0c\u5e76\u67e5\u96c6\u7a33\u7a33\u7684\uff0c\u4e0d\u4f1aTLE\u4e86\u3002\n\n\u5f53\u65f6\u6211\u7528dfs\u505a\u7684\u8fd9\u9898\uff0c\u5728TLE\u7684\u95ee\u9898\u4e0a\u7ea0\u7ed3\u4e86\u597d\u51e0\u5929\uff0c\u6700\u540e\u597d\u4e0d\u5bb9\u6613\u624d\u8bb0\u5fc6\u5316AC\u4e86\u3002\u8fc7\u4e86\u4e00\u4e2a\u6708\uff0c\u6211\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u8fd9\u9898\u53ef\u4ee5\u7528**\u5e76\u67e5\u96c6**\u505a\uff01\n\n\u7528\u5e76\u67e5\u96c6\u505a\uff0c\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u66f4\u597d\u5199\u3002\n\n\u7ffb\u4e86\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u9898\u89e3\u91cc\u6709\u4e00\u7bc7\u662f\u4e00\u6837\u7684\u89e3\u6cd5\uff0c\u4f46\u662f\u51e0\u4e4e\u6ca1\u6709\u89e3\u91ca\u3002\u8fd9\u91cc\u628a\u505a\u6cd5\u89e3\u91ca\u4e00\u4e0b\u3002\n\n### \u4e00 \u7ed5\u5f00\u4e8c\u7ef4\u5e76\u67e5\u96c6\n\u6211\u4eec\u5c06\u8054\u901a\u7684\u6240\u6709\u5757\u653e\u5165\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\n\n\u7531\u4e8e\u4e8c\u7ef4\u5e76\u67e5\u96c6\u6bd4\u8f83\u96be\u5199\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed5\u5f00\u4e8c\u7ef4\u5e76\u67e5\u96c6\u3002\n\n\u9996\u5148\u8bb2\u4e00\u4e0b\u5c06\u4e8c\u7ef4\u5750\u6807\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u65b9\u6cd5\u3002\u7531\u4e8e\u6700\u5927\u5750\u6807\u662f\u6709\u9650($x,y<n$)(\u5f53$x,y$\u4ece$0$\u5f00\u59cb)\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4e2d\u4e00\u4e2a\u5750\u6807\u4e58\u4e0a$n$\uff0c\u518d\u52a0\u4e0a\u53e6\u4e00\u4e2a\u5750\u6807\u3002\u8fd9\u6837\uff0c\u6bcf\u4e2a\u5750\u6807\u90fd\u4e0d\u4f1a\u91cd\u590d\u3002\u5728\u6211\u7684\u7a0b\u5e8f\u4e2d\uff0c\u5750\u6807\u4ece$0$\u5f00\u59cb\u3002\u6211\u8f6c\u6362\u7684\u65b9\u6cd5\u662f\uff1a\n$$a=ny+x$$\n\u5176\u4e2d\uff0c$a$\u4e3a\u5f97\u51fa\u7684\u6570\u5b57\u3002\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n```cpp\ninline int vti(int y, int x) { return y * n + x; }\n```\n\n### \u4e8c \u5c06\u8054\u901a\u5757\u653e\u4e8e\u4e00\u4e2a\u96c6\u5408\u4e2d\n\u5982\u4f55\u5c06\u8054\u901a\u5757\u653e\u5165\u4e00\u4e2a\u96c6\u5408\u4e2d\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u904d\u5386\u6574\u5f20\u56fe\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5f53\u5b83\u7684\u5750\u6807$x>0$\u65f6\uff0c\u68c0\u6d4b\u5b83\u548c\u5de6\u4fa7\u7684\u5757\u662f\u5426\u8054\u901a\u3002\u5982\u679c\u8054\u901a\uff0c\u5219\u5e76\u5165\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\n\n\u5f53\u5b83\u7684\u5750\u6807$y>0$\u65f6\uff0c\u68c0\u6d4b\u5b83\u548c\u4e0a\u65b9\u7684\u5757\u662f\u5426\u8054\u901a\u3002\u5982\u679c\u8054\u901a\uff0c\u5219\u5e76\u5165\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\n\n\u53ef\u4ee5\u753b\u5f20\u56fe\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u5f53\u904d\u5386\u5b8c\u6574\u5f20\u56fe\u540e\uff0c\u6240\u6709\u8054\u901a\u5757\u4e2d\u7684\u6240\u6709\u5757\u5c31\u90fd\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u4e86\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\nfor(int i = 0; i < n; i++)\t//\u904d\u5386y\u5750\u6807\n\tfor(int j = 0; j < n; j++)\t//\u904d\u5386x\u5750\u6807 \n\t{\n\t\tif(i > 0) if(map[i][j] != map[i - 1][j]) Union(vti(i, j), vti(i - 1, j)); //\u5982\u679c\u548c\u4e0a\u9762\u8054\u901a\uff0c\u5408\u5e76 \n\t\tif(j > 0) if(map[i][j] != map[i][j - 1]) Union(vti(i, j), vti(i, j - 1)); //\u5982\u679c\u548c\u5de6\u8fb9\u8054\u901a\uff0c\u5408\u5e76 \n\t}\n```\n\n### \u4e09 \u6c42\u51fa\u6bcf\u4e2a\u8054\u901a\u5757\u4e2d\u5757\u7684\u4e2a\u6570\n\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e00\u4e2anum\u6570\u7ec4\u8ba1\u6570\u3002\n\n```cpp\nint num[maxn * maxn];\t//\u6839\u8282\u70b9\u4e2d\u50a8\u5b58\u5757\u6570 \n```\n\n\u904d\u5386\u6574\u5f20\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u5c06\u5b83\u6240\u5728\u96c6\u5408\u7684\u4ee3\u8868\u201c\u62e5\u6709\u201d\u7684\u5757\u6570+1\u3002\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\nfor(int i = 0; i < n; i++)\n\tfor(int j = 0; j < n; j++)\n\t\tnum[Find(vti(i,j))]++;\t//\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u5c06\u5176\u96c6\u5408\u7684\u5757\u6570\u91cf+1\u3002\n```\n### \u56db \u56de\u7b54\u6bcf\u4e2a\u8be2\u95ee\n\u6709\u4e86\u524d\u9762\u7684\u5e76\u67e5\u96c6\u64cd\u4f5c\uff0c\u8fd9\u4e00\u628a\u5c31\u7b80\u5355\u591a\u4e86\u3002\u76f4\u63a5\u8f93\u51fanum\u6570\u7ec4\u4e2d\u8be2\u95ee\u5750\u6807\u7684**\u6839\u8282\u70b9**\u6240\u201c\u62e5\u6709\u201d\u7684\u5757\u6570\u5373\u53ef\u3002\n\n**\u6ce8\u610f\u4e00\u5b9a\u8981\u67e5\u8be2\u6839\u8282\u70b9\uff01\u5176\u4ed6\u7684\u8282\u70b9\u662f\u6ca1\u6709\u5b58\u50a8\u5757\u6570\u7684\u3002**\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n```cpp\nwhile(m--)\t//\u795e\u5947\u7684\u65b9\u6cd5\uff0c\u91cd\u590dm\u6b21\uff0c\u53ef\u4ee5\u7701\u53bbi\u3002m\u4ee5\u540e\u6ca1\u5fc5\u8981\u7528\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u505a\u3002 \n{\n\tint x,y;\n\tscanf(\"%d %d\",&y,&x);\t\t\t//\u8be2\u95ee\u65f6\u4e5f\u662f\u5148\u884c\u540e\u5217\uff0c\u5373\u5148y\u540ex\u3002 \n\tprintf(\"%d\\n\",num[Find(vti(y - 1,x - 1))]);\t//O(1)\u83b7\u53d6\u8054\u901a\u5757\u6570\u91cf\u3002\u7531\u4e8e\u8bfb\u5165\u65f6\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u65f6\u5019\u4e0b\u6807\u4e5f\u5e94\u8be5\u4ece0\u5f00\u59cb\u3002 \n}\n```\n\n### \u4e94 \u5b8c\u6574\u4ee3\u7801\n\u8f9b\u8f9b\u82e6\u82e6\u5199\u7684\u9898\u89e3\uff0c\u5c31\u4e0d\u8981\u6284\u4ee3\u7801\u4e86\u5427\u3002~~**\u5c0f\u5fc3\u7cbd\u540d**~~\n```cpp\n#include <cstdio>\n\nconst int maxn = 1010;\n\nint n,m;\n\nchar map[maxn][maxn];\t//\u5730\u56fe \n\nint uset[maxn * maxn],\t//\u5e76\u67e5\u96c6 \n\tnum[maxn * maxn];\t//\u6839\u8282\u70b9\u4e2d\u50a8\u5b58\u5757\u6570 \n\n/*\u5e76\u67e5\u96c6\u6a21\u677f*/\nint Find(int e) { return e == uset[e] ? e : uset[e] = Find(uset[e]); }\nvoid Union(int e,int f) { uset[Find(f)] = Find(e); }\n \n/*\u7528\u4e00\u4e9b\u795e\u5947\u7684\u65b9\u6cd5\u5c06\u5750\u6807\u8f6c\u6362\u4e3aint*/\ninline int vti(int y, int x) { return y * n + x; }\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\t\t//\u8bfb\u5165n\u548cm \n    for(int i = 0; i < n; i++)\t//\u904d\u5386y\u5750\u6807\n    {\n    \tscanf(\"%s\",map[i]);\t\t\t//\u987a\u4fbf\u8bfb\u5165\u5730\u56fe\u3002\u4e2a\u4eba\u4e0d\u662f\u5f88\u559c\u6b22\u7528getchar\u3002 \n\t\tfor(int j = 0; j < n; j++)\t//\u904d\u5386x\u5750\u6807 \n\t\t{\n\t\t\tnum[vti(i,j)] = 0;\t\t\t//\u987a\u4fbf\u521d\u59cb\u5316\n\t\t\tuset[vti(i,j)] = vti(i,j);\t//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\u3002\u81ea\u884c\u601d\u8003\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5728\u8fd9\u91cc\u521d\u59cb\u5316\u3002 \n\t\t\tif(i > 0) if(map[i][j] != map[i - 1][j]) Union(vti(i, j), vti(i - 1, j)); //\u5982\u679c\u548c\u4e0a\u9762\u8054\u901a\uff0c\u5408\u5e76 \n\t\t\tif(j > 0) if(map[i][j] != map[i][j - 1]) Union(vti(i, j), vti(i, j - 1)); //\u5982\u679c\u548c\u5de6\u8fb9\u8054\u901a\uff0c\u5408\u5e76 \n\t\t}\n\t}\n\tfor(int i = 0; i < n; i++)\t\t//\u904d\u5386y\u5750\u6807\n\t\tfor(int j = 0; j < n; j++)\t//\u904d\u5386x\u5750\u6807\n\t\t\tnum[Find(vti(i,j))]++;\t//\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u5c06\u5176\u96c6\u5408\u7684\u5757\u6570\u91cf+1\u3002 \n\twhile(m--)\t//\u795e\u5947\u7684\u65b9\u6cd5\uff0c\u91cd\u590dm\u6b21\uff0c\u53ef\u4ee5\u7701\u53bbi\u3002m\u4ee5\u540e\u6ca1\u5fc5\u8981\u7528\uff0c\u6240\u4ee5\u53ef\u4ee5\u8fd9\u6837\u505a\u3002 \n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&y,&x);\t\t\t//\u8be2\u95ee\u65f6\u4e5f\u662f\u5148\u884c\u540e\u5217\uff0c\u5373\u5148y\u540ex\u3002 \n\t\tprintf(\"%d\\n\",num[Find(vti(y - 1,x - 1))]);\t//O(1)\u83b7\u53d6\u8054\u901a\u5757\u6570\u91cf\u3002\u7531\u4e8e\u8bfb\u5165\u65f6\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u65f6\u5019\u4e0b\u6807\u4e5f\u5e94\u8be5\u4ece0\u5f00\u59cb\u3002 \n\t}\n    return 0;\n}\n```",
        "postTime": 1536643631,
        "uid": 105145,
        "name": "Gn23",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u697c\u4e0b\u5927\u4f6c\u8bf4\u8be5\u505a\u6cd5\u5e76\u4e0d\u662f\u5e76\u67e5\u96c6\uff0c\u53ea\u662f\u9177\u4f3c\u5e76\u67e5\u96c6\u3002\u5728\u4e0b\u89c9\u5f97\u5927\u6982\u5c31\u662f\u5e76\u67e5\u96c6\uff0c\u53ea\u4e0d\u8fc7\u662f\u7ecf\u8fc7\u7279\u6b8a\u5904\u7406\u7684\u5e76\u67e5\u96c6\u3002\u5982\u679c\u6ca1\u6709\u8bb0\u9519\u7684\u8bdd\uff0cKruskal\u4f3c\u4e4e\u4e5f\u662f\u7528\u8fd9\u79cd\u5e76\u67e5\u96c6\u7ef4\u62a4\u7684\u3002\n\n\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u4e2a\u96be\u70b9\u662f\u5982\u4f55\u8f93\u5165\u3002\u8fd9\u91cc\u5728\u4e0b\u53c2\u8003\u4e86\u697c\u4e0b\u5927\u4f6c\uff0c\u5927\u90fd\u662f\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u7136\u540e\u4f9d\u6b21\u8bfb\u5165\u3002\u5728\u4e0b\u8fd8\u662fnaive\u3002\n\n\u6765\u770b\u770b\u8fd9\u79cd\u5e76\u67e5\u96c6\uff0c\u4e0e\u4e00\u822c\u5e76\u67e5\u96c6\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u7528fa[x]\u7ef4\u62a4\uff1a1\uff09\u5982\u679cx\u662f\u6839\u8282\u70b9\u90a3\u4e48\u5c31\u7ef4\u62a4\u8be5\u96c6\u5408\u5143\u7d20\u6570\u91cf\u7684\u76f8\u53cd\u6570 2\uff09\u5426\u5219\u8868\u793a\u5176\u6839\u8282\u70b9\u5e8f\u53f7\n\n\u90a3\u4e48\u8fd9\u79cd\u5e76\u67e5\u96c6\u7684\u76f8\u5173\u51fd\u6570\u5c31\u4f1a\u7565\u6709\u53d8\u5316\uff1a\n\n\u521d\u59cb\u5316\n\n```cpp\nfor(int i = 1; i <= n; ++i) fa[i] = -1;\n```\n\u67e5\u627e\n```cpp\nint find(int x) {\n    return fa[x] < 0 ? x : fa[x] = find(fa[x]); //\u8def\u5f84\u538b\u7f29\n}\n```\n\u5408\u5e76\n```cpp\nvoid uni(int x, int y) {\n    int xx = find(x), yy = find(y);\n    if(xx == yy) return;\n    fa[xx] += fa[yy]; \n    fa[yy] = x; \n}\n```\n\u6765\u8bfb\u4e00\u4e0b\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u662f\u67d0\u4e00\u8282\u70b9\u53ef\u8fbe\u7684\u70b9\u7684\u4e2a\u6570\u3002\u800c\u5176\u672c\u8d28\u5c31\u662f\u8be2\u95ee\u4e00\u4e2a\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\u3002\u56e0\u6b64\u7528\u8fd9\u79cd\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u7ef4\u62a4\u3002\n\n\n\u800c\u60f3\u8981\u5c06\u4e8c\u7ef4\u95ee\u9898\u653e\u5230\u5e76\u67e5\u96c6\u4e2d\u7ef4\u62a4\uff0c\u9996\u5148\u9700\u8981\u5c06\u5176hash\u4e3a\u4e00\u7ef4\u3002\n\n```cpp\nint gethash(int x, int y) {\n    return (x - 1) * n + y - 1;\n}\n```\n\n\u4e8e\u662f\u5c31\u8fd9\u6837\u5b8c\u6210\u4e86\u3002\u4e0d\u8fc7\u901f\u5ea6\u7565\u6709\u4e9b\u6162\uff0c1000ms+\u3002\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define MAXN 1003\nint fa[MAXN * MAXN]; //\u5e76\u67e5\u96c6\u4e3b\u4f53 \nint n, m;\nint gethash(int x, int y) { //hash\u51fd\u6570 \n    return (x - 1) * n + y - 1;\n}\nint dx[4] = {0, 1, -1, 0}; \nint dy[4] = {-1, 0, 0, 1};//\u65b9\u5411 \nint find(int x) { //\u5e76\u67e5\u96c6\u67e5\u627e \n    return fa[x] < 0 ? x : fa[x] = find(fa[x]);\n}\nvoid uni(int x, int y) { //\u5e76\u67e5\u96c6\u5408\u5e76 \n    int xx = find(x), yy = find(y);\n    if(xx == yy) return;\n    fa[xx] += fa[yy];\n    fa[yy] = x; \n}\nbool map[MAXN][MAXN]; //\u5730\u56fe \nbool vis[MAXN][MAXN]; //\u8868\u793a\u67d0\u4e00\u4e2a\u70b9\u662f\u5426\u88ab\u641c\u7d22\u8fc7 \nint xx, yy, hash, tmp;\nvoid dfs(int x, int y, int frox, int froy, int type) { //\u4e00\u4e2a\u5e73\u6de1\u65e0\u5947\u7684DFS \n    hash = gethash(x, y);\n    for(int i = 0; i < 4; ++i) {\n        xx = x + dx[i], yy = y + dy[i];\n        if(xx < 1 || yy < 1 || xx > n || yy > n) continue;\n        if(!(map[xx][yy] ^ type)) continue;  //\u4e0b\u4e00\u4e2a\u4e0e\u8fd9\u4e2a\u4e0d\u4e00\u6837 \n        tmp = gethash(xx, yy);\n        if(frox != -1 &&find(hash) == find(tmp)) continue; //\u5df2\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d \n        uni(hash, tmp);\n        vis[xx][yy] = 1; \n        dfs(xx, yy, x, y, map[xx][yy]);\n    }\n}\nint main() {\n    cin>>n>>m;\n    string s;\n    for(int i = 1; i <= n; ++i) {\n        cin>>s; \n        for(int j = 0; j < s.size() ;++j) {\n            map[i][j+1] = s[j] - '0';\n        }\n    }\n    for(int i = 0; i <= n * n; ++i) fa[i] = -1; //\u5e76\u67e5\u96c6\u521d\u59cb\u5316 \n    for(int i = 1; i <= n; ++i) {\n        for(int j = 1; j <= n; ++j) {\n            if(!vis[i][j]) {\n                dfs(i, j, -1, -1,map[i][j]);\n            }\n        }\n    }\n    int x, y, ans;\n    while(m--) {\n        cin>>x>>y;\n        ans = find(gethash(x, y));\n        cout<<-fa[ans]<<endl; //\u6839\u8282\u70b9\u6743\u503c\u76f8\u53cd\u6570 = \u96c6\u5408\u5143\u7d20\u4e2a\u6570 \n    }\n    return 0;\n}\n```",
        "postTime": 1509788628,
        "uid": 37956,
        "name": "LiRewriter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u5f88\u591a\u7684\u601d\u8def\uff0cBFS\uff0cDFS\uff0c\u5e76\u67e5\u96c6\u7b49\u3002\u8fd9\u91cc\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e0bBFS\u89e3\u6cd5\u3002\n\n\u65b9\u6cd5\u5f88\u7b80\u5355\uff0cBFS\u7684\u5c42\u5c42\u9012\u8fdb\u5c31\u53ef\u4ee5\u4e86\n```cpp\n#include<bits/stdc++.h>//\u4e07\u5934\nusing namespace std;\nint n,m,x,y;\nstruct queue\n{\n\tchar c;\n\tbool is;\n}a[1000][1000];\nint quex[1000002],quey[1000002],l=1,r=0;\nint dx[5]={0,0,0,-1,1},dy[5]={0,-1,1,0,0};\n//\u5b9a\u4e49\u4e00\u5768\u4e1c\u897f\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tscanf(\" %c\",&a[i][j].c);\n\t//\u8f93\u5165\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tquex[++r]=x;\n\t\tquey[r]=y;//\u5c06\u8f93\u5165\u70b9\u538b\u5165\u961f\u5217\n\t\ta[x][y].is=1;//\u8f93\u5165\u70b9\u5df2\u8d70\u8fc7\n\t\tint cnt=1;//\u8bb0\u5f55\u6709\u51e0\u79cd\u65b9\u6cd5\n\t\twhile(l<=r)\n\t\t{\n\t\t\tfor(int k=1;k<=4;k++)\n\t\t\t{\n\t\t\t\tint tx=quex[l]+dx[k],ty=quey[l]+dy[k];\n\t\t\t\tif(tx<1||tx>n||ty<1||ty>n) continue;\n\t\t\t\tif(a[tx][ty].c==a[quex[l]][quey[l]].c) continue;\n\t\t\t\tif(a[tx][ty].is==1) continue;//\u5224\u65ad\n\t\t\t\ta[tx][ty].is=1;\n\t\t\t\tquex[++r]=tx;\n\t\t\t\tquey[r]=ty;//\u5c06\u5f53\u524d\u70b9\u63a8\u5165\u961f\u5217\n\t\t\t\tcnt++;//\u65b9\u6cd5++\n\t\t\t}\n\t\t\tl++;//\u5df2\u7ecf\u641c\u5b8c\uff0c\u51fa\u961f\n\t\t}\n\t\tprintf(\"%d\\n\",cnt);//\u8f93\u51fa\n\t\tl=1,r=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\ta[i][j].is=0;\n\t}\n\treturn 0;\n}\n\n```\n\u4e0d\u8fc7\u8fd9\u53ea\u662f70\u5206\uff0c\u8981\u5168\u5bf9\u5fc5\u987b\u8981\u52a0\u4f18\u5316\u3002\n\n\u9996\u5148\uff0c\u518d\u5f00\u4e00\u4e2aans\u6570\u7ec4\uff0c\u6765\u8bb0\u5f55\u5f53\u524d\u70b9\u7684\u503c\uff0c\u5148\u4ece\uff081\uff0c1\uff09\u70b9\u641c\u4e00\u904d\uff0cta\u8d70\u8fc7\u7684\u70b9\u4e00\u5b9a\u548c1\uff0c1\u70b9\u4e00\u6837\uff0c\u7136\u540e\u518d\u7ed9\u6bcf\u4e00\u4e2a\u8d70\u8fc7\u7684\u70b9\u8d4b\u4e0a\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,x,y;\nstruct queue\n{\n\tchar c;\n\tbool is;\n}a[1002][1002];\nint quex[1000002],quey[1000002],l=1,r=0;\nint dx[5]={0,0,0,-1,1},dy[5]={0,-1,1,0,0};\nint ans[1002][1002];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tscanf(\" %c\",&a[i][j].c);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(a[i][j].is==1) continue;\n\t\t\tl=1,r=0;\n\t\t\tquex[++r]=i;\n\t\t\tquey[r]=j;//\u5c06\u8f93\u5165\u70b9\u538b\u5165\u961f\u5217\n\t\t\ta[i][j].is=1;//\u8f93\u5165\u70b9\u5df2\u8d70\u8fc7\n\t\t\tint cnt=1;//\u8bb0\u5f55\u6709\u51e0\u79cd\u65b9\u6cd5\n\t\t\twhile(l<=r)\n\t\t\t{\n\t\t\t\tfor(int k=1;k<=4;k++)\n\t\t\t\t{\n\t\t\t\t\tint tx=quex[l]+dx[k],ty=quey[l]+dy[k];\n\t\t\t\t\tif(tx<1||tx>n||ty<1||ty>n) continue;\n\t\t\t\t\tif(a[tx][ty].c==a[quex[l]][quey[l]].c) continue;\n\t\t\t\t\tif(a[tx][ty].is==1) continue;//\u5224\u65ad\n\t\t\t\t\ta[tx][ty].is=1;\n\t\t\t\t\tquex[++r]=tx;\n\t\t\t\t\tquey[r]=ty;//\u5c06\u5f53\u524d\u70b9\u63a8\u5165\u961f\u5217\n\t\t\t\t\tcnt++;//\u65b9\u6cd5++\n\t\t\t\t}\n\t\t\t\tl++;//\u5df2\u7ecf\u641c\u5b8c\uff0c\u51fa\u961f\n\t\t\t}\n\t\t\tans[i][j]=cnt;\n\t\t\tfor(int i=1;i<=r;i++)ans[quex[i]][quey[i]]=cnt;//\u4f18\u5316\u5728\u8fd9\u91cc\uff01\uff01\uff01\u4e00\u5b9a\u8981\u770b\u6e05\u695a\uff01\uff01\uff01\n\t\t}\n\twhile(m--)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tprintf(\"%d\\n\",ans[x][y]);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1548574641,
        "uid": 150838,
        "name": "Michael_Jordan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5\u301001\u8ff7\u5bab\u3011](https://www.luogu.org/problem/P1141)\n\n\u672c\u9898 tarjan AK\uff01\uff01\uff01\n\n**\u667a\u5546\u4e0d\u591f\uff0c\u7b97\u6cd5\u6765\u51d1**\n\n\u8fd9\u9898\u6253\u773c\u4e00\u770b\uff0c\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u677f\u5b50\u554a\uff01\uff01\n\n\u6211\u4ece\u770b\u5230\u8fd9\u9898\uff0c\u5230AC\u8fd9\u9898\uff0c\u4e00\u5171\u53ea\u82b1\u4e86\u4e03\u5206\u949f\uff0c\u6bd4\u8d77\u4ed6\u4eec\u4e00\u4e2a\u4e2a\u8c03\u597d\u51e0\u5929\u597d\u591a\u4e86\uff08\u6ed1\u7a3d~\u6ed1\u7a3d~~\uff09\n\n\u5373\u4f7f\u6211\u7684\u7b97\u6cd5\u5f88\u6162\uff0c\u4f46\u662f\u80fd\u8fc7\uff0c\u800c\u4e14\u80af\u5b9a\u80fd\u8fc7\uff0c\u8fd9\u662f\u7ecf\u8fc7\u5206\u6790\u7684\uff0ctarjan\u7684O(n)\u5728\u8fd9\u91cc\u662fO(n2)\uff0c\u7a33\u8fc7\u3002\n\n\u4e5f\u8bb8\u6211\u7684\u7b97\u6cd5\u5e76\u4e0d\u662f\u6700\u5feb\u7684\uff0c\u4f46\u662f\u6211\u5199\u8fd9\u6bb5\u4ee3\u7801\u7684\u7528\u65f6\u7edd\u5bf9\u662f\u6700\u77ed\u7684\uff0c\u6240\u4ee5\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u76ee\u7684\u5c31\u662f\u8ba9\u81ea\u5df1\u8bb0\u4f4f\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4e5f\u9f13\u52b1\u4e00\u4e0b\u5927\u5bb6\u8fd9\u6837\u505a\u3002\n\n\u5feb\u901f\u7684\u666e\u901a\u7b97\u6cd5\u5f88\u96be\u5199\u65f6\uff0c\u76f4\u63a5\u7528\u9ad8\u7ea7\u7684\u6570\u636e\u7ed3\u6784\u6216\u9ad8\u7ea7\u7b97\u6cd5\u5207\u8fc7\u53bb\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u7528tarjan\u505a\u6b64\u9898\uff0c\u8fd9\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff1a\n\n\t\t1\u3001\u5efa\u6a21\uff0c\u5bf9\u4e8e\u76f8\u90bb\u7684\u80fd\u4e92\u76f8\u5230\u8fbe\u7684\u70b9\u5bf9\uff0c\u76f4\u63a5\u5efa\u53cc\u5411\u8fb9\n\n\t\t2\u3001tarjan\u8dd1\u4e00\u904d\uff0c\u7528size\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\n\n\t\t3\u3001\u67e5\u8be2\u65f6\uff0c\u53ea\u8981\u8f93\u51fa\u6240\u5c5e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684size\u5c31\u597d\u4e86\n\n\u4ec0\u4e48\uff1f\u4f60\u8bf4\u4f60\u4e0d\u4f1atarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff1f\n\n\u8bf7\u8f6c\u8fd9\u91cc[\u3010\u6a21\u677f\u3011\u7f29\u70b9](https://www.luogu.org/problem/P3387)\n\n\u4ee3\u7801\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\n\ninline int read() {\n    char c = getchar(); int x = 0, f = 1;\n    for (; c > '9' || c < '0'; c = getchar()) if (c == '-') f = -1;\n    for (; c >='0' && c <='9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n    return x * f;\n}\n\nint a[1010][1010];\nint n, m;\nint num (int x, int y) {\n    return x * n - n + y;\n}\n\nint fx[4] = {0, 0, 1, -1};\nint fy[4] = {1, -1, 0, 0};\nint dx, dy;\n\nint size[1000010] ,id[1000010], dfn[1000010], low[1000010], gg, cnt, k;\nint ver[10000010], nxt[10000010], head[1000010], tot;\nint stack[1000010], top, x, y;\nbool ins[1000010];\n\nvoid add (int u, int v) {\n    ver[++ tot] = v;\n    nxt[tot] = head[u];\n    head[u] = tot;\n}\n\nvoid tarjan (int x) {\n    dfn[x] = low[x] = ++ cnt;\n    stack[++ top] = x;\n    ins[x] = 1;\n    for (register int i = head[x]; i; i = nxt[i]) {\n        if (!dfn[ver[i]]) {\n            tarjan (ver[i]);\n            low[x] = min (low[x], low[ver[i]]);\n        }\n        else if (ins[ver[i]])\n            low[x] = min (low[x], dfn[ver[i]]);\n    }\n    if (dfn[x] == low[x]) {\n        ++ gg;\n        do {\n            k = stack[top --];\n            ins[k] = 0;\n            id[k] = gg;\n            size[gg] ++;\n        } while (x != k);\n    }\n}\n\nvoid djj () {\n    n = read(), m = read();\n    for (register int i = 1; i <= n; i ++)\n        for (register int j = 1; j <= n; j ++)\n            scanf (\"%1d\", &a[i][j]);\n    for (register int i = 1; i <= n; i ++)\n        for (register int j = 1; j <= n; j ++)\n            for (register int k = 0; k < 4; k ++) {\n                dx = i + fx[k], dy = j + fy[k];\n                if (dx < 1 || dy < 1 || dx > n || dy > n)\n                    continue;\n                if (a[i][j] != a[dx][dy])\n                    add (num (i, j), num (dx, dy));\n            }\n    for (register int i = 1; i <= num (n, n); i ++)\n        if (!dfn[i]) tarjan (i);\n}\n\nvoid lxy () {\n    for (; m; m --) {\n        x = read(), y = read();\n        printf (\"%d\\n\", size[id[num (x, y)]]);\n    }\n}\n\nvoid djj_lxy () {\n    djj (), lxy ();\n    exit (0);\n}\n\nint main() {\n    djj_lxy ();\n}\n\n```\n\u7801\u98ce\u9b3c\u755c\uff0c\u4f46\u8bf7\u52ff\u6284\u88ad\n\n\u5c31\u8fd9\u6837\uff0c\u6211\u4eec\u5f00\u5f00\u5fc3\u5fc3\u7684\u62fftarjan\u7b97\u6cd5\u6c42\u4e86\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7136\u540e\u5f00\u5f00\u5fc3\u5fc3\u5730AC\u4e86\u8fd9\u9053\u7b80\u5355\u800c\u53c8\u96be\u8c03\u7684bfs\u795e\u4ed9\u9898\n\n\u4e00\u904dAC\uff0c\u975e\u5e38\u8212\u670d~~\n\n\u4f46\u5176\u5b9e\uff0c\u5982\u679c\u662f\u8ba9\u534a\u5e74\u524d\u7684\u6211\u6765\u505a\u8fd9\u9898\uff0c\u4e5f\u5f97\u5728bfs\u8fd9\u513f\u5361\u4e0a\u51e0\u5929\u3002\n\n\u6240\u4ee5\u8bf4\uff0c\u5728OI\u7684\u8def\u4e0a\uff0c\u6211\u4eec\u5b66\u4e60\u4e86\u4e00\u4e2a\u53c8\u4e00\u4e2a\u5f3a\u529b\u7684\u7b97\u6cd5\uff0c\n\n\u84e6\u7136\u56de\u9996\uff0c\u5f53\u65f6\u662f\u770b\u5230\u5c31\u624b\u6296\uff0c\u4e0d\u6562\u505a\u7684\u63d0\u9ad8-\u9898\uff0c\n\n\u73b0\u5728\u7adf\u662f\u51e0\u5206\u949f\u5c31\u80fd\u5207\u6389\u7684\u5c0f\u9ec4\u9898\u3002\n\n\u6211\u60f3\u8fd9\u4efd\u53d6\u5f97\u5de8\u5927\u8fdb\u6b65\u7684\u559c\u60a6\u4e5f\u662f\u6211\u4eec\u5b66OI\u7684\u6700\u5927\u7684\u56de\u62a5\u4e4b\u4e00\u3002\n\n\u795d\u5927\u5bb6\u65b0 Noip rp ++\n\n\u4e5f\u5e0c\u671b\u81ea\u5df1\u80fd\u66f4\u52aa\u529b\u4e00\u4e9b\uff0c\u80fd\u5728\u8fd9\u6761\u8def\u4e0a\u8d70\u7684\u66f4\u8fdc\u3002\n\n# \u52a0\u6cb9\uff01",
        "postTime": 1567428634,
        "uid": 162867,
        "name": "shame_djj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c~~\u5176\u5b9e\u90a3\u4e48\u4e00\u770b\uff0c\u8fd8\u5c31\u662f\u4e00\u4e2a\u88f8\u7684BFS~~\uff0c\u4f46\u662f\u770b\u5230\u8be2\u95ee\u7684\u6b21\u6570\u90a3\u4e48\u591a\uff0c\u5982\u679c\u6bcf\u4e00\u6b21\u8be2\u95ee\u518d\u53bbBFS\uff0c\u90a3\u4e48\u7ed3\u679c\u53ef\u60f3\u800c\u77e5\u3002\n\n\u6211\u8bb0\u5f97\u6211\u4eec\u7684\u8001\u5e08\u8bf4\u8fc7\u4e00\u53e5\u8bdd\uff0c\u5982\u679c\u6709\u975e\u5e38\u591a\u7684\u8be2\u95ee\uff0c\u773c\u770b\u7740\u4e00\u5b9a\u4f1a\u8d85\u65f6\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u8003\u8651\u628a\u7b54\u6848\u5b58\u8d77\u6765\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u5c31\u53ef\u4ee5\u628a\u7b54\u6848\u5b58\u8d77\u6765\uff0c\u7136\u540e\u5f53\u5b83\u8be2\u95ee\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u4e86\u3002\n\n\u5148\u6765\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\u6700\u521d\u7684\u601d\u60f3\u6a21\u677f\uff1a\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int N=1100;\nint mp[N][N];//\u8868\u793a\u5168\u56fe\nbool pd[N][N];//\u5224\u65ad\u8d70\u8fc7\u6ca1\u6709\nint ans[N][N];//\u4ecemp[i][j]\u51fa\u53d1\u80fd\u8fc7\u7684\u70b9\nint dx[4]={0,1,-1,0};\nint dy[4]={1,0,0,-1};\nint n,m;\nstruct node\n{\n    int x,y;\n};\nint bfs(int x,int y)\n{\n    int ans=1;\n    deque <struct node> que;\n    struct node now;\n    now.x=x;\n    now.y=y;\n    pd[x][y]=true;\n    que.push_back(now);\n    while(!que.empty())\n    {\n        now=que.front();\n        que.pop_front();\n        for(int i=0;i<4;i++)\n        {\n            int nx=now.x+dx[i];\n            int ny=now.y+dy[i];\n            if(mp[nx][ny]==mp[now.x][now.y])\n            {\n                continue;\n            }\n            if(nx<1||ny<1||nx>n||ny>n)\n            {\n                continue;\n            }\n            if(pd[nx][ny]==true)\n            {\n                continue;\n            }\n            struct node next;\n            next.x=nx;\n            next.y=ny;\n            ans++;\n            pd[nx][ny]=true;\n            que.push_back(next);\n        }\n    }\n    return ans;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            char c;\n            cin>>c;\n            if(c=='0')\n            {\n                mp[i][j]=0;\n            }\n            else\n            {\n                mp[i][j]=1;\n            }\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        memset(pd,false,sizeof(pd));\n        int bx,by;\n        cin>>bx>>by;\n        cout<<bfs(bx,by)<<endl;\n    }\n    return 0;\n}\n\n```\n\u662f\u633a\u66b4\u529b\u7684\u5bf9\u5427\uff0c\u7136\u540e\u5c31T\u4e863\u4e2a\u70b9\uff0c\u7136\u540e\u6211\u4eec\u5c31\u6765\u60f3\u4e00\u4e0b\u8bb0\u5f55\u7b54\u6848\uff0c\u5176\u5b9e\u5b83\u8bb2\u7684\u662f\u8981\u627e\u6700\u5927\u7684\u8def\u7ebf\uff0c\u5f53\u6211\u4eec\u6c42\u5230\u4e86\u8fd9\u4e2a\u6700\u5927\u503c\u4e4b\u540e\uff0c\u5b83\u6cbf\u9014\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u7684\u70b9\u7b54\u6848\u5c31\u90fd\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u5f53\u6211\u4eecBFS\u65f6\uff0c\u6bcf\u4e00\u6b21\u9009\u53d6\u4e86\u70b9\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u518d\u5f00\u4e00\u4e2a\u961f\u5217\u7528\u6765\u5b58\u53d6\u6cbf\u9014\u7684\u70b9\uff0c\u6700\u540e\u5f53\u6211\u4eec\u6c42\u5f97\u7b54\u6848\u65f6\uff0c\u5c31\u53ef\u4ee5\u628a\u4ed6\u4eec\u5168\u90e8\u62ff\u51fa\u6765\u8d4b\u503c\u3002\n\u8fd9\u6837\u60f3\uff0c\u597d\u50cf\u662f\u4f18\u5316\u4e86\u4e0d\u5c11\uff0c\u4f46\u662f\u770b\u4e00\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<queue>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int N=1100;\nint mp[N][N];//\u8868\u793a\u5168\u56fe\nbool pd[N][N];//\u5224\u65ad\u8d70\u8fc7\u6ca1\u6709\nint ans[N][N];//\u4ecemp[i][j]\u51fa\u53d1\u80fd\u8fc7\u7684\u70b9\nint dx[4]={0,1,-1,0};\nint dy[4]={1,0,0,-1};\nint n,m;\nstruct node\n{\n    int x,y;\n};\nint bfs(int x,int y)\n{\n    int sum=1;\n    deque <struct node> que;\n    deque <struct node> que2;//\u5b58\u53d6\u6cbf\u9014\u7684\u70b9\n    struct node now;\n    now.x=x;\n    now.y=y;\n    pd[x][y]=true;\n    que.push_back(now);\n    while(!que.empty())\n    {\n        now=que.front();\n        que2.push_back(now);\n        que.pop_front();\n        for(int i=0;i<4;i++)\n        {\n            int nx=now.x+dx[i];\n            int ny=now.y+dy[i];\n            if(mp[nx][ny]==mp[now.x][now.y])\n            {\n                continue;\n            }\n            if(nx<1||ny<1||nx>n||ny>n)\n            {\n                continue;\n            }\n            if(pd[nx][ny]==true)\n            {\n                continue;\n            }\n            if(ans[nx][ny]>0)\n            {\n                sum=ans[nx][ny];\n                while(!que2.empty())\n                {\n                    int xx=que2.front().x;\n                    int yy=que2.front().y;\n                    ans[xx][yy]=sum;\n                    que2.pop_front();\n                }\n                return sum;\n            }\n            struct node next;\n            next.x=nx;\n            next.y=ny;\n            sum++;\n            pd[nx][ny]=true;\n            que.push_back(next);\n        }\n    }\n    while(!que2.empty())\n    {\n        int xx=que2.front().x;\n        int yy=que2.front().y;\n        ans[xx][yy]=sum;\n        que2.pop_front();\n    }\n    return sum;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            char c;\n            cin>>c;\n            //scanf(\"%c\",&c);\n            if(c=='0')\n            {\n                mp[i][j]=0;\n            }\n            else\n            {\n                mp[i][j]=1;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            if(ans[i][j]==0)\n            {\n                memset(pd,false,sizeof(pd));\n                ans[i][j]=bfs(i,j);\n            }\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int bx,by;\n        scanf(\"%d%d\",&bx,&by);\n        printf(\"%d\\n\",ans[bx][by]);\n    }\n    return 0;\n}\n\n```\n\n\u6700\u7ec8\u7ed3\u679c\u5c31\u662fT\u4e24\u4e2a\uff0c\u505a\u4e86\u8fd9\u4e2a\u4f18\u5316\u7ed3\u679c\u8fd8\u4e0d\u80fd\u591f\u5168\u5bf9\uff0c\u90a3\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u95ee\u9898\uff0c\u6bcf\u4e00\u6b21\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u88ab\u8ba1\u7b97\u8fc7\uff0c\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u628a\u5224\u65ad\u6570\u7ec4\u90fd\u6e05\u96f6\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u5224\u65ad\u6570\u7ec4\u662f\u771f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u662f\u88ab\u641c\u7d22\u8fc7\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u5fc5\u8981\u53bb\u518d\u641c\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8df3\u8fc7\u8bb8\u591a\u6b65\u9aa4\u3002\n\n\u6539\u8fdb\u4e4b\u540e\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<queue>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int N=1100;\nint mp[N][N];//\u8868\u793a\u5168\u56fe\nbool pd[N][N];//\u5224\u65ad\u8d70\u8fc7\u6ca1\u6709\nint ans[N][N];//\u4ecemp[i][j]\u51fa\u53d1\u80fd\u8fc7\u7684\u70b9\nint dx[4]={0,1,-1,0};\nint dy[4]={1,0,0,-1};\nint n,m;\nstruct node\n{\n    int x,y;\n};\nint bfs(int x,int y)\n{\n    int sum=1;\n    deque <struct node> que;\n    deque <struct node> que2;\n    struct node now;\n    now.x=x;\n    now.y=y;\n    pd[x][y]=true;\n    que.push_back(now);\n    //que2.push_back(now);\n    while(!que.empty())\n    {\n        now=que.front();\n        que2.push_back(now);\n        que.pop_front();\n        for(int i=0;i<4;i++)\n        {\n            int nx=now.x+dx[i];\n            int ny=now.y+dy[i];\n            if(mp[nx][ny]==mp[now.x][now.y])\n            {\n                continue;\n            }\n            if(nx<1||ny<1||nx>n||ny>n)\n            {\n                continue;\n            }\n            if(pd[nx][ny]==true)\n            {\n                continue;\n            }\n            if(ans[nx][ny]>0)\n            {\n                sum=ans[nx][ny];\n                while(!que2.empty())\n                {\n                    int xx=que2.front().x;\n                    int yy=que2.front().y;\n                    ans[xx][yy]=sum;\n                    que2.pop_front();\n                }\n                return sum;\n            }\n            struct node next;\n            next.x=nx;\n            next.y=ny;\n            sum++;\n            pd[nx][ny]=true;\n            que.push_back(next);\n        }\n    }\n    while(!que2.empty())\n    {\n        int xx=que2.front().x;\n        int yy=que2.front().y;\n        ans[xx][yy]=sum;\n        que2.pop_front();\n    }\n    return sum;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            char c;\n            cin>>c;\n            //scanf(\"%c\",&c);\n            if(c=='0')\n            {\n                mp[i][j]=0;\n            }\n            else\n            {\n                mp[i][j]=1;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            if(pd[i][j]==true)\n            {\n                continue;\n            }\n            if(ans[i][j]==0)\n            {\n                //memset(pd,false,sizeof(pd));\n                ans[i][j]=bfs(i,j);\n            }\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n       // memset(pd,false,sizeof(pd));\n        int bx,by;\n        //cin>>bx>>by;\n        scanf(\"%d%d\",&bx,&by);\n       // cout<<bfs(bx,by)<<endl;\n        //int bfans=bfs(bx,by);\n        printf(\"%d\\n\",ans[bx][by]);\n        //ans[bx][by]=bfans;\n    }\n    return 0;\n}\n\n```\n\n**\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5AC\u4e86\u3002**\n\n**\u518d\u6765\u60f3\u4e00\u4e0b\u8fd8\u6709\u6ca1\u6709\u5176\u5b83\u7684\u6807\u8bb0\u65b9\u6cd5**\uff0c\n\n\u6211\u4eec\u521a\u624d\u7528\u7684\u90fd\u662f\u5728\u7ed3\u679c\u624d\u5f00\u59cb\u8fd4\u56de\u53bb\u6807\u8bb0\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8003\u8651\u8fb9\u8dd1\u8fb9\u66f4\u65b0\u6807\u8bb0\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21BFS\u7684\uff0c\u80af\u5b9a\u7b54\u6848\u662f\u76f8\u540c\u7684\uff0c**\u4e24\u4e2a\u70b9\u7b54\u6848\u4e0d\u540c\u539f\u56e0\u5c31\u662f\u5b83\u4eec\u4e0d\u5c5e\u4e8e\u540c\u4e00\u5757**\uff0c\n\u6240\u4ee5\u6211\u4eec\u5927\u81f4\u53ef\u4ee5\u7528map\u6620\u5c04\u6bcf\u4e00\u5757\u7684\u7b54\u6848\uff0c\u6700\u540e\u8f93\u5165\u8be2\u95ee\u70b9\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u70b9\u7684\u6620\u5c04\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86.\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<queue>\n#include<cstring>\n#include<cstdio>\n#include<map>\nusing namespace std;\nconst int N=1020;\nint mp[N][N];//\u8868\u793a\u5168\u56fe\nbool pd[N][N];//\u5224\u65ad\u8d70\u8fc7\u6ca1\u6709\nint ans[N][N];//\u4ecemp[i][j]\u51fa\u53d1\u80fd\u8fc7\u7684\u70b9\nint dx[4]={0,1,-1,0};\nint dy[4]={1,0,0,-1};//\u65b9\u5411\nint n,m;\nint pn;//\u8fd9\u4e2a\u662f\u7b2c\u51e0\u4e2a\u53ef\u4ee5\u8d70\u7684\nmap<int,int> mapp;\nstruct node\n{\n    int x,y;\n};\nint bfs(int x,int y)\n{\n    int sum=1;\n    deque <struct node> que;\n    struct node now;\n    now.x=x;\n    now.y=y;\n    pd[x][y]=true;\n    ans[x][y]=pn;//\u6807\u8bb0\n    que.push_back(now);\n    while(!que.empty())\n    {\n        now=que.front();\n        que.pop_front();\n        for(int i=0;i<4;i++)\n        {\n            int nx=now.x+dx[i];\n            int ny=now.y+dy[i];\n            if(mp[nx][ny]==mp[now.x][now.y])//\u662f\u76f8\u540c\u7684\uff0c\u4e0d\u8d70\n            {\n                continue;\n            }\n            if(nx<1||ny<1||nx>n||ny>n)//\u8d8a\u754c\uff0c\u4e0d\u8d70\n            {\n                continue;\n            }\n            if(pd[nx][ny]==true)//\u8d70\u8fc7\u7684\uff0c\u4e0d\u8d70\n            {\n                continue;\n            }\n            struct node next;\n            next.x=nx;\n            next.y=ny;\n            sum++;//\u65b9\u6848\u6570\u52a0\u4e00\n            pd[nx][ny]=true;//\u6807\u8bb0\n            ans[nx][ny]=pn;//\u6807\u8bb0\n            que.push_back(next);\n        }\n    }\n    return sum;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            char c;\n            cin>>c;\n            if(c=='0')\n            {\n                mp[i][j]=0;\n            }\n            else\n            {\n                mp[i][j]=1;\n            }\n        }\n    }//\u5b58\u56fe\n\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            if(pd[i][j]==true)//\u641c\u8fc7\u4e86\n            {\n                continue;\n            }\n            else//\u8fd9\u4e2a\u70b9\u662f\u7b2c\u4e00\u6b21\u641c\u7d22\n            {\n                pn++;\n                mapp[pn]=bfs(i,j);//\u6620\u5c04\u7b54\u6848\n            }\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int bx,by;\n        scanf(\"%d%d\",&bx,&by);\n        printf(\"%d\\n\",mapp[ans[bx][by]]);//\u8f93\u51fa\u5bf9\u5e94\u7684\u503c\n    }\n    return 0;\n}\n\n```\n\n**\u5176\u5b9e\u8fd9\u4e2a\u65b9\u6cd5\u662f\u53ef\u4ee5\u518d\u8fdb\u4e00\u6b65\u4f18\u5316\u7684\uff0c\u7ec6\u5fc3\u60f3\u4e00\u4e0b\u5c31\u53ef\u4ee5\u770b\u5230**",
        "postTime": 1539861416,
        "uid": 103304,
        "name": "a2954898606",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u975e\u5e38\u96be\u53d7\u4e86\u53ef\u4ee5\u8bf4..\u4e00\u9053\u666e\u53ca/\u63d0\u9ad8-\u7684\u6c34\u9898\n\u6211\u5c45\u7136\u6539\u4e863\u5929 \u63d0\u4ea4\u4e8620\u6b21\uff01\uff01\n\u6211\u592a\u5f31\u4e86\uff01\uff01\n\n\n\u6b63\u6587\u5f00\u59cb\uff1a\n\n\u5206\u6790\u9898\u76ee\uff1a\n\u8fd9\u9053\u9898\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u6765\u662f\u4e2a\u641c\u7d22\u9898\uff08DP\uff1f\u4e0d\u5b58\u5728\u7684\uff09\u3002\u90a3\u4e48\u4e00\u4e2a\u663e\u7136\u7684\u505a\u6cd5\u5c31\u662f\uff1a\u628a\u56fe\u5b58\u8d77\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u90fd\u8fdb\u884c\u4e00\u6b21dfs\u3002\u663e\u7136\u8fd9TLE\u4e86\u3002\uff0870\u5206\u505a\u6cd5\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<map>\n#include<set>\n#include<queue>\n#define INF 0x3f3f3f3f\n#define inf 0x3f\n#define ll long long\nusing namespace std;\nqueue<int> q;\nint n,m,x,a[1001][1001],y,dx[]={-1,1,0,0},dy[]={0,0,-1,1},sum,vis[1001][1001],ans[1001]; \nchar c;\nint dfs(int x,int y){\n    vis[x][y]=1;\n    for(int i=0;i<4;i++){\n        int xx=x+dx[i];\n        int yy=y+dy[i];\n        if(a[x][y]==1){\n            if(xx>0&&yy>0&&xx<=n&&yy<=n&&a[xx][yy]==0&&vis[xx][yy]==0) {\n                sum++;\n                dfs(xx,yy);\n            }\n        }\n        if(a[x][y]==0){\n            if(xx>0&&yy>0&&xx<=n&&yy<=n&&a[xx][yy]==1&&vis[xx][yy]==0) {\n                sum++;\n                dfs(xx,yy);\n            }\n        }\n    }\n    return sum;\n}\nint main(){ \n    sum=1;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            vis[i][j]=0;\n            cin>>c;\n            if(c=='0') a[i][j]=0;\n            if(c=='1') a[i][j]=1;\n        }\n    }\n    for(int i=1;i<=m;i++){\n        cin>>x>>y;\n        ans[i]=dfs(x,y);\n        sum=1;\n        for(int j=1;j<=n;j++){\n            for(int k=1;k<=n;k++){\n                vis[j][k]=0;\n            }\n        }\n    }\n    for(int i=1;i<=m;i++){\n        cout<<ans[i]<<endl;\n    }\n    return 0;\n}\n\n```\n\n\u90a3\u4e48\u5982\u4f55\u505a\u5230AC\u5462\uff1f\n\u9996\u5148\u5206\u6790\u9898\u76ee\uff1a\n\n\u82e5\u4f60\u4f4d\u4e8e\u4e00\u683c0\u4e0a\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u79fb\u52a8\u5230\u76f8\u90bb 4 \u683c\u4e2d\u7684\u67d0\u4e00\u683c 1 \u4e0a\uff0c\u540c\u6837\u82e5\u4f60\u4f4d\u4e8e\u4e00\u683c1\u4e0a\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u79fb\u52a8\u5230\u76f8\u90bb 4 \u683c\u4e2d\u7684\u67d0\u4e00\u683c 0 \u4e0a\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u8bbe\u60f3\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u80fd\u5230\u8fbe\u7684\u6240\u6709\u7684\u70b9\u662f\u4e00\u4e2a\u503csum\uff0c\u90a3\u4e48\u4ece\u4ed6\u80fd\u5230\u8fbe\u7684\u4efb\u610f\u4e00\u70b9\u51fa\u53d1\uff0c\u4e5f\u80fd\u6709\u4e00\u4e2a\u503csum\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u503c\u76f8\u7b49\u3002\n\u4f46\u662f\uff01\u5982\u679c\u4ece\u8fd9\u4e2a\u70b9A\u51fa\u53d1\u5230\u8fbe\u4e0d\u4e86\u7684\u70b9B\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9B\u7684\u7b54\u6848\u548cA\u4e0d\u540c\u3002\n\u6211\u4eec\u53ef\u4ee5\u628a\u4ed6\u7406\u89e3\u6210\u4e00\u4e2a\u8fde\u901a\u5757\u3002\n\u5de8\u5751\uff1a\u6570\u7ec4\u8981\u5f001e6\uff0c\u4e0d\u7136\u5750\u7b49WA\u6216\u8005RE\u5427qwq.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<map>\n#include<set>\n#include<queue>\n#define INF 0x3f3f3f3f\n#define inf 0x3f\n#define ll long long\nusing namespace std;\nqueue<int> q;\nint n,m,x,a[1001][1001],y,dx[]={-1,1,0,0},dy[]={0,0,-1,1},sum,vis[1001][1001],ans[1000001],num[1000001];\nint k;\nchar c;\nvoid dfs(int x,int y,int k){\n    vis[x][y]=k;\n    for(int i=0;i<4;i++){\n        int xx=x+dx[i];\n        int yy=y+dy[i];\n        if(a[x][y]==1){\n            if(xx>0&&yy>0&&xx<=n&&yy<=n&&a[xx][yy]==0&&vis[xx][yy]==0) {\n                sum++;\n                dfs(xx,yy,k);\n            }\n        }\n        if(a[x][y]==0){\n            if(xx>0&&yy>0&&xx<=n&&yy<=n&&a[xx][yy]==1&&vis[xx][yy]==0) {\n                sum++;\n                dfs(xx,yy,k);\n            }\n        }\n    }\n}\nint main(){ \n    k=0;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            vis[i][j]=0;\n            cin>>c;\n            if(c=='0') a[i][j]=0;\n            if(c=='1') a[i][j]=1;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            if(vis[i][j]==0){\n                k++;\n                sum=1;\n                dfs(i,j,k);\n                num[k]=sum;\n            }\n        }\n    }\n    for(int i=1;i<=m;i++){\n        cin>>x>>y;\n        int qwq=vis[x][y];\n        ans[i]=num[qwq];\n    }\n    for(int i=1;i<=m;i++){\n        cout<<ans[i]<<endl;\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1533469384,
        "uid": 58424,
        "name": "kenlig",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "# 01\u8ff7\u5bab \u4e8c\u7ef4\u5e76\u67e5\u96c6\u505a\u6cd5\n  \u4e00\u5f00\u59cb\u8fd9\u9053\u9898\u5728bfs\u8bad\u7ec3\u91cc\uff0c\u4e8e\u662f\u76f4\u63a5\u6253\u4e86\u4e00\u4e2a\u6734\u7d20\u7684BFS\uff0c\u81ea\u4fe1\u6ee1\u6ee1\u7684\u63d0\u4ea4\n  \n  \u7531\u4e8e\u5e76\u975e\u6807\u7b54\uff0c\u5728\u6b64\u4e0d\u5bf9\u4ee3\u7801\u8fdb\u884c\u89e3\u91ca\n  ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool a[1005][1005],b[1005][1005];\nint jg[1005][1005];\nint m,n,x[4]={1,-1,0,0} ,y[4]={0,0,1,-1},sx,sy,tot;\nqueue<int> c;\nvoid bfs()\n{\n    memset(b,0,sizeof(b));tot=1;\n    c.push(sx);c.push(sy);b[sx][sy]=1;\n    while(!c.empty())\n    {\n        int p=c.front();c.pop();\n        int q=c.front();c.pop();\n        if(jg[p][q]) {tot=jg[p][q];return;}\n        for(int i=0;i<=3;++i)\n        {\n            if(p+x[i]>=1&&p+x[i]<=n&&q+y[i]>=1&&q+y[i]<=n\n            &&!b[p+x[i]][q+y[i]]&&a[p][q]^a[p+x[i]][q+y[i]])\n            {\n                b[p+x[i]][q+y[i]]=1;\n                c.push(p+x[i]);c.push(q+y[i]);++tot;\n            }\n        }\n    }\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    {\n        if(b[i][j])jg[i][j]=tot;\n    }\n} \nint main()\n{\n    char fz;\n    cin>>n>>m;\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    {\n        cin>>fz;\n        if(fz=='0') a[i][j]=0;\n        else a[i][j]=1;\n    }\n    for(int i=1;i<=m;++i)\n    {\n        cin>>sx>>sy;\n        bfs();\n        cout<<tot<<endl;\n    }\n    return 0;\n}\n```\n\u7ed3\u679c\u2014\u2014TLE2,9,10\n\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u672c\u9898\u6570\u636e\u91cf\u5927\uff0c\u8bfb\u5165\u4e00\u4e2a\u67e5\u627e\u4e00\u4e2a\u5fc5\u7136\u8d85\u65f6.\n\n\u4e4b\u540e\u5c31\u4e00\u76f4\u60f3\u4f18\u5316\u65b9\u5f0f\uff0c\u60f3\u5230\u65e0\u8bba\u4e4b\u540e\u7684\u67e5\u627e\u6709\u591a\u5c11\uff0c\u8fd9\u5f20\u8ff7\u5bab\u5730\u56fe\u90fd\u4e0d\u4f1a\u6539\u53d8\u3002\u6240\u4ee5\u5728\u5b58\u56fe\u65f6\u5c31\u53ef\u4ee5\u628a\u56fe\u4e2d\u76840,1\u533a\u5757\u7b97\u51fa\u6765\uff0c\u67e5\u627e\u65f6\u76f4\u63a5\u5229\u7528\u3002\n\n\u800c\u5982\u4f55\u5c0601\u533a\u5757\u627e\u51fa\u6765\u2014\u2014\u5f53\u7136\u8981\u7528\u5e76\u67e5\u96c6\u4e86\n\n\u56e0\u4e3a~~\u6211\u61d2\u5f97\u628a\u5e76\u67e5\u96c6\u538b\u56de\u4e00\u7ef4~~\uff0c\u5e72\u8106\u5c31\u7528\u4e8c\u7ef4\u5e76\u67e5\u96c6\u505a\u4e86\u3002\n\u9898\u89e3\u533a\u597d\u50cf\u6ca1\u6709\u795e\u7287\u5199\u4e8c\u7ef4\u5e76\u67e5\u96c6\u7684\u9898\u89e3~~\u81f3\u5c11\u6211\u6ca1\u89c1\u8fc7~~\uff0c\u6240\u4ee5\u672c\u849f\u84bb\u7b80\u5355\u8bb2\u4e00\u4e0b\u4e8c\u7ef4\u5e76\u67e5\u96c6\u5427\n# \u4e8c\u7ef4\u5e76\u67e5\u96c6\u8be6\u89e3\n\u4e8c\u7ef4\u5e76\u67e5\u96c6\u6bd4\u8d77\u4e00\u7ef4\u5e76\u67e5\u96c6\u6765\u8bf4\uff0c\u5b83\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u53d8\u91cf\uff08x\u548cy\uff09(\u56e0\u4e3a\u53ea\u7528\u4e00\u4e2a\u53d8\u91cf\u65e0\u6cd5\u4fdd\u5b58\u7236\u8282\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u503c\uff09\u3002\n```cpp\n//\u5efa\u7acb\u5e76\u67e5\u96c6\nstruct node{\n    int x,y;\n}a[1005][1005];\n//\u521d\u59cb\u5316\nvoid start()\n{\n    for(int i=1;i<=1000;++i)\n    for(int j=1;j<=1000;++j)\n    {\n        a[i][j].x=i;\n        a[i][j].y=j;\n    }\n}\n```\n## \u67e5\u627e\u7236\u8282\u70b9&\u8def\u5f84\u538b\u7f29\n\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\uff0c\u5373\u4e3a\u5bfb\u627e\u81ea\u5df1\u7684\u4ee3\u8868\uff0c\u5982\u679c\u4ee3\u8868\u4e3a\u81ea\u5df1\uff0c\u5219\u8fd4\u56de\u81ea\u5df1\uff0c\u5426\u5219\u5411\u4e0a\u5bfb\u627e\u81ea\u5df1\u7684\u4ee3\u8868\u5e76\u5c06\u5176\u6307\u5411\u6574\u68f5\u6811\u7684\u6839\u8282\u70b9\u3002\n\u5148\u4e0a\u4ee3\u7801\n```cpp\nnode  find(int p,int q)//\u67e5\u627ea[p][q]\u7684\u4ee3\u8868\n{\n    if(a[p][q].x==p //x\u5750\u6807\u76f8\u540c\n    &&a[p][q].y==q)//y\u5750\u6807\u76f8\u540c\n    return a[p][q];\n    else\n    {\n        node k1=find(a[p][q].x,a[p][q].y);//\u5411\u4e0a\u5bfb\u627e\n        return a[p][q]=k1;//\u8def\u5f84\u538b\u7f29\n    }\n}\n```\n#### \u5047\u8bbe\u76ee\u524d\u6709\u8fd9\u6837\u4e00\u4e2a\u60c5\u51b5\n- \u7ed3\u70b9   x       y   \n- k     p.x     p.y\n- p     q.x     q.y\n- q     q.x     q.y\n\n\n#### \u8ddf\u7740\u4ee3\u7801\u8d70\u4e00\u904d\n\n1. a[k.x][k.y].x==p.x==q.x!=k.x,if false\n1. find(a[k.x][k.y]),\u5373find(p)\uff0c\u8fdb\u5165\u4e0b\u4e00\u5c42\u8c03\u7528\n1. a[p.x][p.y].x==q.x==q.x!=p.x,if false\n1. find(a[p.x][p.y]),\u5373find(q)\uff0c\u8fdb\u5165\u4e0b\u4e00\u5c42\u8c03\u7528\n1. a[q.x][q.y].x==q.x&&a[q.x][q.y].y==q.y,if true,\u8fd4\u56de\u4e0a\u4e00\u5c42\n1. a[p.x][p.y]=q,p\u66f4\u65b0\u4e3aq\u7684\u503c\uff0c\u8fd4\u56de\u4e0a\u4e00\u5c42\n1. a[k.x][k.y]=p=q,k\u66f4\u65b0\u4e3ap\uff0c\u5373q\u7684\u503c\uff0c\u8fd4\u56de\u4e3b\u51fd\u6570\n\n#### \u7ed3\u679c\u5982\u4e0b\n- \u7ed3\u70b9   x       y   \n- k     q.x     q.y\n- p     q.x     q.y\n- q     q.x     q.y\n\n## \u5408\u5e76\u4e24\u4e2a\u96c6\u5408\n\u5e76\u67e5\u96c6\u5408\u5e76\u96c6\u5408\uff0c\u5373\u5bfb\u627e\u4e24\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\uff0c\u5e76\u5c06\u5176\u4e2d\u4e00\u4e2a\u96c6\u5408\u7684\u4ee3\u8868\u6307\u5411\u53e6\u4e00\u4e2a\u96c6\u5408\u3002\n\n\u5148\u4e0a\u4ee3\u7801\n```cpp\nvoid unionn(int p,int q,int n,int r)//\u5408\u5e76a[p][q]\u4e0ea[n][r]\n{\n    node k1=find(a[p][q]);\n    node k2=find(a[n][r]);//\u67e5\u627e\u7ed3\u70b9\u7684\u4ee3\u8868\n    if(k1.x!=k2.x||k1.y!=k2.y)//\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\n    a[k2.x][k2.y]=k1;//\u5408\u5e76\u96c6\u5408\n}\n\n```\n\u5408\u5e76\u64cd\u4f5c\u4e0e\u4e00\u7ef4\u5e76\u67e5\u96c6\u5dee\u8ddd\u4e0d\u5927\uff0c\u89e3\u91ca\u4e0b\u6700\u540e\u4e00\u53e5\uff0c\u56e0\u4e3ak2\u4fdd\u5b58\u7684\u5c31\u662fa[p][q]\u7684\u6839\u8282\u70b9\u7684\u503c\uff0c\u6240\u4ee5a[k2.x][k2.y]\u5c31\u662fa[p][q]\u7684\u6839\u7ed3\u70b9\u3002\n## \u4e8c\u7ef4\u5e76\u67e5\u96c6\u5b8c\u6574\u4ee3\u7801\n```cpp\n//\u5efa\u7acb\u5e76\u67e5\u96c6\nstruct node{\n    int x,y;\n}a[1005][1005];\n//\u521d\u59cb\u5316\nvoid start()\n{\n    for(int i=1;i<=1000;++i)\n    for(int j=1;j<=1000;++j)\n    {\n        a[i][j].x=i;\n        a[i][j].y=j;\n    }\n}\nnode find(int p,int q)//\u67e5\u627ea[p][q]\u7684\u4ee3\u8868\n{\n    if(a[p][q].x==p //x\u5750\u6807\u76f8\u540c\n    &&a[p][q].y==q)//y\u5750\u6807\u76f8\u540c\n    return a[p][q];\n    else\n    {\n        node k1=find(a[p][q].x,a[p][q].y);//\u5411\u4e0a\u5bfb\u627e\n        return a[p][q]=k1;//\u8def\u5f84\u538b\u7f29\n    }\n}\nvoid unionn(int p,int q,int n,int r)//\u5408\u5e76a[p][q]\u4e0ea[n][r]\n{\n    node& k1=find(a[p][q]);\n    node& k2=find(a[n][r]);//\u67e5\u627e\u7ed3\u70b9\u7684\u4ee3\u8868\n    if(k1.x!=k2.x||k1.y!=k2.y)//\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\n    //a[k2.x][k2.y]=k1;//\u5408\u5e76\u96c6\u5408\n    k1=k2;\n}\n```\n\u7531\u4e8e\u672c\u4eba\u662f\u849f\u84bb\uff0c\u4e0d\u4f1a\u628a\u5b83\u5c01\u88c5\u5728\u7ed3\u6784\u4f53\u4e2d\uff0c\u6240\u4ee5\u76f4\u63a5\u53d1\u4e86\n\n\n------------\n# \u56de\u5f52\u6b63\u9898\n\u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u53ea\u7528\u5355\u7eaf\u7684\u5e76\u67e5\u96c6\u4e0d\u80fd\u5b8c\u6210\u9898\u76ee\u8981\u6c42\uff0c\u56e0\u4e3a\u6734\u7d20\u7684\u5e76\u67e5\u96c6\u4ec5\u4ec5\u901a\u8fc7\u6839\u8282\u70b9\u7684\u4fe1\u606f\u65e0\u6cd5\u5f97\u51fa\u8fd9\u68f5\u6811\u7684\u7ed3\u70b9\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\n\n**\u7b54\u6848\u662f\u2014\u2014\u5728\u5e76\u67e5\u96c6\u4e2d\u7ef4\u62a4\u7ed3\u70b9\u4e2a\u6570\uff01**\n\n\u7ef4\u62a4\u65b9\u6cd5\u662f\uff1a\u5728\u7ed3\u6784\u4f53\u4e2d\u7ef4\u62a4\u53d8\u91cftot\uff0c\u4e00\u5f00\u59cb\u521d\u59cb\u5316\u4e3a1\uff0c\u5e76\u5728\u6bcf\u4e00\u6b21\u5408\u5e76\u96c6\u5408\u65f6\u628a\u4e24\u68f5\u6811\u7684\u6839\u8282\u70b9\u7684tot\u503c\u52a0\u8d77\u6765\u3002\n\n\u8def\u5f84\u538b\u7f29\u65f6\u4e0d\u9700\u8981\u52a8tot\uff0c\u56e0\u4e3a\u8def\u5f84\u538b\u7f29\u4e0d\u6539\u53d8\u7ed3\u70b9\u6570\u3002\n\n\u4e8c\u4ee3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int x, y, tot;\n    bool z;\n}a[1085][1085];\nnode find(node k)\n{\n    if(a[k.x][k.y].x==k.x&&a[k.x][k.y].y==k.y) return k;\n    else return a[k.x][k.y]=find(a[k.x][k.y]);\n}\nvoid unionn(node k,node l)\n{\n    node k1,k2;\n    k1=find(k);\n    k2=find(l);\n    if(k1.x!=k2.x||k1.y!=k2.y)\t\n    {\n        a[k1.x][k1.y].tot+=a[k2.x][k2.y].tot; \n        a[k2.x][k2.y]=k1;\n    }\n}\nint main()\n{\n    int m,n,b,c;\n    char k;\n    cin>>m>>n;\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    {\n        a[i][j].x=i;a[i][j].y=j;a[i][j].tot=1;\n    }\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    {\n        cin>>k;\n        if(k=='1') a[i][j].z=1;\n        if(i-1>=1&&a[i-1][j].z^a[i][j].z) unionn(a[i-1][j],a[i][j]);\n        if(j-1>=1&&a[i][j-1].z^a[i][j].z) unionn(a[i][j-1],a[i][j]);\n    }\n    for(int i=1;i<=m;++i)\n    {\n        scanf(\"%d%d\",&b,&c);\n        printf(\"%d\\n\",find(a[b][c]).tot);\n    }\n    return 0;\n}\n```\n\u7ed3\u679c\uff1a\u5168\u90e8RE\n\n\u540e\u6765\u53d1\u73b0m,n\u6253\u53cd\u4e86\u3002\u3002\u3002\n\n\u4e09\u4ee3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int x, y, tot,z;\n}a[1020][1020];\nnode find(int p,int q)\n{\n    if(a[p][q].x==p&&a[p][q].y==q) return a[p][q];\n    else return a[p][q]=find(a[p][q].x,a[p][q].y);\n}\nvoid unionn(int p,int q,int n,int r)\n{\n    node k1,k2;\n    k1=find(p,q);\n    k2=find(n,r);\n    if(k1.x!=k2.x||k1.y!=k2.y)\t\n    {\n        a[k1.x][k1.y].tot+=a[k2.x][k2.y].tot; \n        a[k2.x][k2.y].x=k1.x;\n        a[k2.x][k2.y].y=k1.y;\n        //a[k2.x][k2.y]=k1;\n    }\n}\nint main()\n{\n    int m,n,b,c;\n    char k;\n    cin>>n>>m;\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    {\n        a[i][j].x=i;a[i][j].y=j;a[i][j].tot=1;a[i][j].z=0;\n    }\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    {\n        cin>>k;\n        if(k=='1') a[i][j].z=1;\n        if(i-1>=1&&a[i-1][j].z^a[i][j].z) unionn(i,j,i-1,j);\n        if(j-1>=1&&a[i][j-1].z^a[i][j].z) unionn(i,j,i,j-1);\n    }\n    \n    for(int i=1;i<=m;++i)\n    {\n        scanf(\"%d%d\",&b,&c);\n        printf(\"%d\\n\",find(b,c).tot);\n    }\n    return 0;\n}\n```\n\u7ed3\u679c\uff1a\u5168\u90e8WA\n \n\u6ca1\u529e\u6cd5\uff0c\u53ea\u80fd\u4e0b\u4e86\u4e00\u4e2a\u6570\u636e\u70b9\u3002\n\u8bd5\u7740\u8dd1\u4e86\u4e00\u904d\uff0c\u53d1\u73b0\u95ee\u9898\u5728\u4e8e\u539f\u6765\u768401\u56fe\u5e76\u6ca1\u6709\u4fdd\u5b58\u4e0b\u6765\uff0c\u800c\u662f\u5728\u8def\u5f84\u538b\u7f29\u7684\u8fc7\u7a0b\u4e2d\u88ab\u6539\u53d8\u4e86\u3002\n## \u6ce8\u610f\uff1a\u5982\u679c\u8981\u7528\u4e8c\u7ef4\u5e76\u67e5\u96c6\u7ef4\u62a4\u5176\u4ed6\u5185\u5bb9\uff0c\u7edd\u5bf9\u4e0d\u80fd\u76f4\u63a5\u5c06\u7ed3\u6784\u4f53\u8d4b\u503c\uff01\uff01\uff01\n\u6700\u540e\uff0c\u5c06\u8def\u5f84\u538b\u7f29\u7684\u4ee3\u7801\u6539\u6210\u5355\u9879\u8d4b\u503c\u2014\u2014AC\uff01\n\n\u5728\u6b64\u5355\u72ec\u653e\u4e0a\u4e8c\u7ef4\u5e76\u67e5\u96c6\u5355\u9879\u8d4b\u503c\u4ee3\u7801\n```cpp\n//\u5efa\u7acb\u5e76\u67e5\u96c6\nstruct node{\n    int x, y, tot,z;//\u6b64\u5904\u53ef\u4f7f\u7528\u81ea\u5df1\u9700\u8981\u7ef4\u62a4\u7684\u53d8\u91cf\n}a[1020][1020];\n//\u521d\u59cb\u5316\nvoid start()\n{\n    for(int i=1;i<=1000;++i)\n    for(int j=1;j<=1000;++j)\n    {\n        a[i][j].x=i;\n        a[i][j].y=j;\n        a[i][j].tot=1;\n    }\n}\nnode find(int p,int q)//\u67e5\u627ea[p][q]\u7684\u4ee3\u8868\n{\n    if(a[p][q].x==p&&a[p][q].y==q) return a[p][q];//x\uff0cy\u5750\u6807\u76f8\u540c\n    else\n    {\n    \tnode k1=find(a[p][q].x,a[p][q].y);//\u5411\u4e0a\u5bfb\u627e\n    \ta[p][q].x=k1.x;\n    \ta[p][q].y=k1.y;//\u5355\u72ec\u8d4b\u503c\n    \treturn k1;//\u8def\u5f84\u538b\u7f29\n    }\n}\nvoid unionn(int p,int q,int n,int r)//\u5408\u5e76a[p][q]\u4e0ea[n][r]\n{\n    node k1,k2;\n    k1=find(p,q);\n    k2=find(n,r);//\u67e5\u627e\u7ed3\u70b9\u7684\u4ee3\u8868\n    if(k1.x!=k2.x||k1.y!=k2.y)\t//\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\n    {\n        a[k1.x][k1.y].tot+=a[k2.x][k2.y].tot; \n        a[k2.x][k2.y].x=k1.x;\n        a[k2.x][k2.y].y=k1.y;//\u5408\u5e76\u96c6\u5408\n    }\n}\n```\n# \u6700\u540e\u2014\u2014AC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int x, y, tot,z;\n}a[1020][1020];//\u5efa\u7acb\u5e76\u67e5\u96c6\nnode find(int p,int q)//\u8def\u5f84\u538b\u7f29\n{\n    if(a[p][q].x==p&&a[p][q].y==q) return a[p][q];\n    else\n    {\n    \tnode k1=find(a[p][q].x,a[p][q].y);\n    \ta[p][q].x=k1.x;\n    \ta[p][q].y=k1.y;\n    \treturn k1;\n    }\n    //else return a[p][q]=find(a[p][q].x,a[p][q].y);\n}\nvoid unionn(int p,int q,int n,int r)//\u5408\u5e76\n{\n    node k1,k2;\n    k1=find(p,q);\n    k2=find(n,r);\n    if(k1.x!=k2.x||k1.y!=k2.y)\t\n    {\n        a[k1.x][k1.y].tot+=a[k2.x][k2.y].tot; \n        a[k2.x][k2.y].x=k1.x;\n        a[k2.x][k2.y].y=k1.y;\n        //a[k2.x][k2.y]=k1;\n    }\n}\nvoid start(int n)//\u521d\u59cb\u5316\n{\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    {\n        a[i][j].x=i;\n        a[i][j].y=j;\n        a[i][j].tot=1;\n        a[i][j].z=0;\n    }\n}\nint main()\n{\n    int m,n,b,c;\n    char k;\n    cin>>n>>m;\n    start(n);\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=n;++j)\n    {\n        cin>>k;\n        if(k=='1') a[i][j].z=1;//\u8bfb\u5165\n        if(i-1>=1&&a[i-1][j].z^a[i][j].z) unionn(i,j,i-1,j);\n        if(j-1>=1&&a[i][j-1].z^a[i][j].z) unionn(i,j,i,j-1);\n        //\u4e00\u8fb9\u8bfb\u5165\u4e00\u8fb9\u5408\u5e76\uff0c\u8282\u7701\u7801\u91cf\u4e0e\u5e38\u6570\n    }\n    for(int i=1;i<=m;++i)\n    {\n        scanf(\"%d%d\",&b,&c);\n        printf(\"%d\\n\",find(b,c).tot);\n    }\n    return 0;\n}\n```\np.s.\u8fd9\u662f\u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u5982\u679c\u90a3\u91cc\u8bb2\u7684\u4e0d\u591f\u6e05\u695a\uff0c\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u7ed9\u6211\u63d0\u610f\u89c1\n\ncopy\u4e0d\u662f\u597d\u4e60\u60ef\uff0c\u6211\u5e0c\u671b\u5404\u4f4d\u6ce8\u91cd\u81ea\u5df1\u638c\u63e1\u7684\u7b97\u6cd5\uff0c\u800c\u4e0d\u662fac\u7387\n## 2019.4.20",
        "postTime": 1555762299,
        "uid": 149168,
        "name": "\u8def\u4eba\u75322003",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u4e00\u9053\u5341\u5206\u6df3\u6734\u5584\u826f\u7684\u5e7f\u641c\u9898\uff0c\u6211\u5374\u7528\u4e86\u6df1\u641c\u3002\n\n\u6ce8\u610f\u6570\u636e\u8303\u56f4\uff0c\u5927\u5f97\u90aa\u6076\u3002\u3002\n\n\u53ea\u9700\u8981\u52a0\u4e00\u4e2a\u8bb0\u5fc6\u5316\u5c31\u80fd\u4e0dTLE\u4e86\uff1a\uff09\n\n\u7528\u5e7f\u641c\u540c\u7406\uff0c\u4e5f\u9700\u8981\u8bb0\u5fc6\u5316\u3002\n\n\u6570\u7ec4\u4e5f\u8981\u5f00\u5927\u4e00\u70b9\u3002\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\nusing namespace std;\nchar maze[1000][1000];\nint used[1000][1000];\nint ans[1000002];\nint N,M;\nvoid dfs(int x,int y,char now,int marker)\n{\n    if(x>N-1||x<0||y>N-1||y<0||now==maze[x][y]||used[x][y]!=-1)\n    {\n        return;\n    }\n    used[x][y]=marker;//\u8bb0\u5fc6\u5316\n    ans[marker]++;//\u8fd8\u662f\u8bb0\u5fc6\u5316\n    dfs(x+1,y,maze[x][y],marker);\n    dfs(x-1,y,maze[x][y],marker);\n    dfs(x,y-1,maze[x][y],marker);\n    dfs(x,y+1,maze[x][y],marker);\n}\nvoid solve()\n{\n    scanf(\"%d %d\",&N,&M);\n    for(int i=0;i<N;i++)\n    {\n        scanf(\"%s\",maze[i]);\n    }\n    memset(used,-1,sizeof(used));\n    for(int i=0;i<M;i++)\n    {\n        int x,y;\n        scanf(\"%d %d\",&x,&y);\n        x--;\n        y--;\n        if(used[x][y]!=-1)//\u5982\u679c\u6709\u8ba1\u7b97\u8fc7\uff0c\u76f4\u63a5\u4f7f\u7528\n        {\n            ans[i]=ans[used[x][y]];\n        }\n        else\n        {\n            dfs(x,y,'#',i);\n        }\n    }\n    for(int i=0;i<M;i++)\n    {\n        printf(\"%d\\n\",ans[i]);\n    }\n}\nint main()\n{\n    solve();\n}\n```",
        "postTime": 1473169236,
        "uid": 20815,
        "name": "PhantasmDragon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "# **\u5404\u4f4d\u5927\u4f6c\u4eec\u597d\uff01\uff01\uff01**\n###### \u672c\u4eba\u65b0\u664b\u840c\u65b0\u4e00\u679a\uff0c\u5f53\u65f6\u770b\u5230\u6b64\u9898\u65f6\u4e5f\u662f\u4e00\u5934\u96fe\u6c34\uff0c\u540e\u6765\u8be2\u95ee\u4e86\u5e08\u5144\u540e\u4e86\u89e3\u5230\u4e86\u65b0\u77e5\u8bc6\n[\u5f3a\u8fde\u901a\u5206\u91cf](https://baike.baidu.com/item/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/7448759?fr=aladdin)\n\n###### \u5047\u8bbe\u6210\u4e3a\u4e00\u4e2a\u56fe\uff0c\u5728\u5185\u90e8\u5bfb\u627e\u53ef\u884c\u6027\u70b9\uff0c\u5982\u679ca\u53ef\u5230b\uff0cb\u53ef\u5230c\uff0c\u90a3\u4e48a\u5c31\u4e00\u5b9a\u53ef\u5230c\uff01\uff01\n\u4e86\u89e3\u540e\uff0c\u500d\u611f\u65e0\u529b\u3002\u8fd9\u5c31\u662f\u77e5\uff08da\uff09\u8bc6\uff08lao\uff09\u7684\u529b\u91cf\n\nAC\u4ee3\u7801\u5982\u4e0b\u2014\u2014\n```cpp\n#include<bits/stdc++.h>//\u6700\u559c\u6b22\u7684\u4e07\u80fd\u5934\nusing namespace std;\nint n,m;\nchar a[1005][1005];//\u6ce8\u610f\u4e00\u5b9a\u8981\u5f00char\uff0c\u5426\u5219\u4f1a\u70b8\uff0c\u540e\u679c\u81ea\u8d1f\nint b[1005][1005];//\u8bb0\u5f55\u6709\u6ca1\u6709\u8d70\u8fc7\nint i,j,ans[100005];//\u8bb0\u5f55\u7b54\u6848\nint x,y;//\u63d0\u4f9b\u7684\u4e0b\u6807\nint mx[4]={0,0,1,-1};//\u56db\u4e2a\u65b9\u5411\u5bfb\u627e\nint my[4]={1,-1,0,0};\nvoid dfs(int x,int y,int p,int i){\n\tif(x<0||x>=n||y<0||y>=n||b[x][y]!=-1||a[x][y]-48!=p)//\u5982\u679c\u4e0d\u5728\u8303\u56f4\u5185\uff0c\u6216\u662f\u627e\u8fc7\u6216\u662f\u6570\u5b57\u4e0d\u6b63\u786e\n\treturn;\n\tb[x][y]=i;//\u8fd9\u4e00\u6b65\u5f88\u5173\u952e\uff0c\u4e0b\u9762\u53d9\u8ff0\n\tans[i]++;//\u52a0\u4e00\u4e2a\u70b9\n\tfor(int k=0;k<4;k++){\n\t\tint kx=x+mx[k];\n\t\tint ky=y+my[k];\n\t\tdfs(kx,ky,!p,i);//dfs\u5e38\u7528\u5957\u8def\uff0c!p\u662f\u4e3a\u4e86\u53d8\u6362\u6570\u5b57\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(i=0;i<n;i++)\n\tscanf(\"%s\",&a[i]);\n\tmemset(b,-1,sizeof(b));//\u6e05\u7a7a\uff0c\u5176\u5b9e\u662f\u5e9f\u7684\n\tfor(i=0;i<m;i++){\n\t\tcin>>x>>y;//\u8f93\u5165\n\t\tx--,y--;//\u56e0\u4e3a\u6570\u7ec4\u4ece0\u5f00\u59cb\u8bfb\uff0c\u7ed9\u7684\u4e0b\u6807\u4ece1\u5f00\u59cb\n\t\tif(b[x][y]==-1)\n\t\tdfs(x,y,a[x][y]-48,i);//\u7b26\u5408\u6761\u4ef6\u5c31dfs\n\t\telse\n\t\tans[i]=ans[b[x][y]];//\u6700\u5173\u952e\u7684\u4e00\u6b65\uff01\uff01\u5982\u679c\u5df2\u7ecf\u8d70\u8fc7\uff0c\u610f\u5473\u7740\u672c\u8f6e\u641c\u7d22\u7ed3\u675f\uff0c\u7b54\u6848\u5c31\u662f\u4e0a\u4e00\u6b65\u7684i\uff0c\u4e5f\u5c31\u662fb\u6570\u7ec4\u5b58\u5728\u7684\u7b2c\u4e8c\u610f\u4e49\u3002\uff08\u627f\u63a5\u4e0a\u6587b[x][y]=i;\uff09\n\t}\n\tfor(i=0;i<m;i++)\n\tcout<<ans[i]<<endl;//\u5b8c\u7f8e\u8f93\u51fa\n\treturn 0;\n}\n```\n\u6211\u8ba4\u4e3a\u672c\u9898\u4e3b\u8981\u8fd8\u662f\u8003\u5bdf\u5bf9\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7406\u89e3\uff0c\u4ee3\u7801\u96be\u5ea6\u4e0d\u5927\n# \u5927\u4f6c\u4e0d\u559c\u52ff\u55b7\uff01\uff01",
        "postTime": 1565575569,
        "uid": 114015,
        "name": "Marginal_world",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u3000\u3000\u8fd9\u9053\u9898\u4ee5\u524d\u628a\u6211\u7ed9\u5751\u6b7b\u4e86\uff0c\u4ea4\u4e86\u4e24\u9875\u7684\u8bc4\u6d4b\u8bb0\u5f55\u3002\u6211\u628a\u7206\u70b8\u7684\u539f\u56e0\u603b\u7ed3\u4e86\u4e00\u4e0b\uff0c\u4e3b\u8981\u662f\uff1a  \n\u3000\u3000\u7b2c\u4e00\uff0c\u8fd9\u9898\u8003\u8bfb\u5165\u3002\u6211\u4e00\u5f00\u59cb\u770b\u5b83\u6570\u636e\u89c4\u6a21\u5f88\u5927\u5c31\u76f4\u63a5\u7528\u4e86scanf\uff0c\u7ed3\u679c\u6362\u884c\u7b26\u4e00\u76f4\u5361\u5728\u90a3\uff0c\u6211\u641c\u51fa\u6765\u6240\u6709\u7ed3\u679c\u90fd\u662f\uff11\u6216\uff10\uff08\u53d6\u51b3\u4e8e\u6211\u7684ans\u521d\u59cb\u5316\u662f\u591a\u5c11...\uff09\n\u540e\u6765\u7528\u4e86\u5982\u4e0b\u4ee3\u7801\uff1a  \n```\n    char ch;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            cin>>ch; \n            if(ch=='0')maze[i][j]=0;\n            else maze[i][j]=1;\n        }\n    }\n```  \n\u3000\u3000\u8fd9\u624d\u6b63\u786e\u6253\u5165\u4e86\u8ff7\u5bab\u3002\u5f53\u7136\uff0c\u5047\u5982\u4f60\u5acccin\u592a\u6162\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7528\u8fd9\u4e2a\uff1a  \n  ```\nfor(int i=1;i<=n;i++)\nfor(int j=1;j<=n;j++){\n\tchar c;\n\tc=getchar();\n\tif(c < 32){\n      j--;\n      continue ;//\u662f\u6362\u884c\u7b26\u6216\u7a7a\u683c\n\t}\n\telse{\n    \tmaps[i][j]=c-'0';//\u4e0d\u662f\u6362\u884c\u7b26\n\t}\n}\n```\n\u3000\u3000\u5c31\u662f\u81ea\u5df1\u5199\u6709\u70b9\u5bb9\u6613\u51fa\u9519\u800c\u5df2\u3002  \n  \u3000\u3000\u7b2c\u4e8c\uff0c\u7b97\u6cd5\u95ee\u9898\u3002\u8fd9\u9898\u5f88\u5bb9\u6613\u60f3\u5230\u641c\u7d22\uff0c\u60f3\u5fc5\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u5927\u5bb6\u90fd\u505a\u8fc7\u6216\u591a\u6216\u5c11\u51e0\u9053\u641c\u7d22\u9898\u4e86\uff0c\u5177\u4f53\u65b9\u6cd5\u4e0d\u5fc5\u6211\u8be6\u8ff0\u3002\u6211\u662f\u7528\u4e86**STL**\u91cc\u7684\u961f\u5217\u5e7f\u641c\u505a\u7684\u3002\u7b2c\u4e00\u6b21\u662f\u60f3\u8d70\u4e00\u6b21\u5c31\u628a\u8d70\u8fc7\u7684\u70b9\u505a\u6807\u8bb0\uff0cbfs\u5b8c\u4e86\u4e4b\u540e\u904d\u5386\u4e00\u904d\uff0c\u628aans\u5b58\u5230vis\u6570\u7ec4\u91cc\uff1a  \n\t\t\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int MAXN=1001;\nconst int MAXM=100001;\nconst int dx[4]={0,0,1,-1};\nconst int dy[4]={1,-1,0,0};\nint n,m,ans;\nint a[MAXM],maze[MAXN][MAXN],thesame[MAXN][MAXN];\nqueue<pair<int,int> >q;\nint bfs(int sx , int sy , int i ){\n    if(thesame[sx][sy]>0){\n        return thesame[sx][sy];\n    }\n    while(!q.empty())\n        q.pop();\n    q.push(make_pair(sx,sy));\n    thesame[sx][sy]=-i;\n    ans++;\n    while(!q.empty()){\n        int x=q.front().first;\n        int y=q.front().second;\n        q.pop();\n        for(int j=0;j<4;j++){\n            int a=x+dx[j];int b=y+dy[j];\n            if(a<=n&&a>=1&&b<=n&&b>=1&&!thesame[a][b]&&maze[x][y]+maze[a][b]==1){\n                ans++;\n                thesame[a][b]=-i;\n                q.push(make_pair(a,b));\n            }\n        }\n    }\n    for(int q=1;q<=n;q++)\n        for(int w=1;w<=n;w++){\n            if(thesame[q][w]<0)\n                thesame[q][w]=ans;\n        }\n    return ans;\n} \nint main(){\n    char ch;\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            cin>>ch; \n            if(ch=='0')maze[i][j]=0;\n            else maze[i][j]=1;\n        }\n    }\n    for(int i=1;i<=m;i++){\n        int sx,sy;\n        cin>>sx>>sy;\n        ans=0;\n        a[i]=bfs(sx,sy,i);\n    }\n    for(int i=1;i<=m;i++)\n        printf(\"%d\\n\",a[i]);\n    return 0;\n}\n```\n\u3000\u3000\u7136\u540e\u8d85\u65f6\u4e24\u4e2a\u70b9\uff0c\u6bd4\u4e0d\u5b58\u8981\u591a\u8fc7\u4e00\u4e2a\u70b9\uff0c\u4f46\u90a3\u8fd8\u662f\u8d85\u65f6\uff01**TLE**\uff01  \n  \u3000\u3000\u5176\u5b9e\uff0c\u7b97\u6cd5\u91cc\u7684\u904d\u5386\u8ff7\u5bab\u590d\u6742\u5ea6\u662f**O($n^2$)**,\u663e\u7136\u4f1a\u8d85\u65f6\uff0c\u89e3\u51b3\u8d85\u65f6\u7684\u529e\u6cd5\uff0c\u5c31\u662f\u727a\u7272\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u5e76\u4e0d\u628a\u6bcf\u4e00\u6b21\u641c\u7d22\u7684\u7ed3\u679c\u90fd\u8bb0\u5f55\u5728vis\u6570\u7ec4\u91cc\uff0c\u800c\u662f\u5355\u72ec\u5f00\u4e00\u4e2aflag\u6570\u7ec4\u7528\u6765\u8bb0\u5f55\u7b2c**i**\u6b21\u641c\u7d22\u641c\u5230\u7684\u683c\u5b50\uff0c\u5e76\u628aans\u4fdd\u5b58\u5728\u53e6\u4e00\u4e2a\u6570\u7ec4$a[MAXM]$ \u91cc\uff0c\u4ee5\u989d\u5916$(n^2+m)$\u7684\u7a7a\u95f4\uff0c\u6362\u5f97\u4e86\u65f6\u95f4\u3002  \n\u3000\u3000\u5168\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int MAXN=1001;\nconst int MAXM=1000001;\nconst int dx[4]={0,0,1,-1};\nconst int dy[4]={1,-1,0,0};\nint n,m,ans;\nint a[MAXM],maze[MAXN][MAXN];//thesame[MAXN][MAXN];\nint flag[MAXN][MAXN];\nbool vis[MAXN][MAXN];\nqueue<pair<int,int> >q;\nint bfs(int sx , int sy , int i ){\n    if(flag[sx][sy]>0)\t//\u5047\u5982\u6211\u5df2\u7ecf\u641c\u7d22\u8fc7\u4e86\uff0c\u5c31\u4e0d\u5fc5\u641c\u4e86\n        return a[flag[sx][sy]];\n    while(!q.empty())   //\u5148\u6e05\u7a7a\u961f\u5217\uff0c\u4e5f\u53ef\u4ee5\u7528q.erase()\n        q.pop();\n    q.push(make_pair(sx,sy));\n    flag[sx][sy]=i;\t\t//\u8bb0\u5f55\u5f53\u524d\u6240\u641c\u5230\u7684\u6240\u6709\u683c\u5b50\u90fd\u4e3a\u7b2ci\u6b21\u641c\u5230\u7684\n    vis[sx][sy]=true;\n    ans++;\n    while(!q.empty()){\t\t//\u6807\u51c6stl\u961f\u5217\u4f7f\u7528\u6a21\u677f\n        int x=q.front().first;\n        int y=q.front().second;\n        q.pop();\n        for(int j=0;j<4;j++){\n            int a=x+dx[j];int b=y+dy[j];\n            if(a<=n&&a>=1&&b<=n&&b>=1&&!vis[a][b]&&maze[x][y]+maze[a][b]==1){\n                ans++;\n                flag[a][b]=i;\n                vis[a][b]=true;\n                q.push(make_pair(a,b));\n            }\n        }\n    }\n    return ans;\n} \nint main(){\n    char ch;\t\t\t//\u7d20\u8d28\u7684\u8bfb\u5165\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            cin>>ch; \n            if(ch=='0')maze[i][j]=0;\n            else maze[i][j]=1;\n        }\n    }\n    for(int i=1;i<=m;i++){\n        int sx,sy;\n        scanf(\"%d %d\",&sx,&sy);\t\t//\u67e5\u8be2\n        ans=0;\n        a[i]=bfs(sx,sy,i);\n    }\n    for(int i=1;i<=m;i++)\t\t\t//\u8f93\u51fa\n        printf(\"%d\\n\",a[i]);\n    return 0;\n}\t\t\t//end\n```",
        "postTime": 1546001543,
        "uid": 140377,
        "name": "\u7ef4\u8fed\u751f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u6700\u5f00\u59cb\u6211\u60f3\u7684\u662f\u76f4\u63a5\u66b4\u529b\u6df1\u641c\uff0c\u4f46\u662f\u5f88\u663e\u7136\u6709\u4e09\u4e2a\u70b9TLE\n\n\u800c\u4e14\u5751\u4eba\u7684\u662f\u597d\u50cf\u8fd8\u4e0d\u80fd\u7528scanf\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[5]{0,0,1,-1};\nint b[5]{1,-1,0,0};\nchar maze[1010][1010];\nbool flag[1010][1010];\nint total,x,y,n,m;\ninline void search(int x,int y)\n{\n\tflag[x][y]=1;\n\t++total;\n\tfor(register int i=0;i<4;++i){\n\t\tif(!flag[x+a[i]][y+b[i]]&&maze[x][y]!=maze[x+a[i]][y+b[i]]&&x+a[i]<=n&&x+a[i]>=1&&y+b[i]<=n&&y+b[i]>=1)\n\t\t\tsearch(x+a[i],y+b[i]);\n\t}\n}\ninline void mem(bool x[1010][1010]){\n\tfor(register int i=1;i<=n;++i)\n\t\tfor(register int j=1;j<=n;++j)\n\t\t\tx[i][j]=0;\n}\nint main()\n{\n\t//std::ios::sync_with_stdio(false);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tcin>>maze[i][j];\n\t\t}\n\tfor(register int i=1;i<=m;++i){\n\t\tcin>>x>>y;\n\t\ttotal=0;\n\t\tsearch(x,y);\n\t\tmem(flag);\n\t\tcout<<total<<endl;\n\t}\n\treturn 0;\n}\n```\n\u540e\u6765\u5462\uff0c\u53d1\u73b0\u8ff7\u5bab\u4e2d\u88ab\u5212\u5206\u51fa\u6765\u5f88\u591a\u4e2a\u8fde\u901a\u56fe\uff0c\u6bcf\u4e2a\u8fde\u901a\u56fe\u4e2d\u7684\u6b21\u6570\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u628a\u6df1\u641c\u6539\u4e86\u4e00\u4e0b\u3002\u52a0\u4e86\u4e00\u4e2a\u5c06\u540c\u4e00\u4e2a\u8fde\u901a\u56fe\u8e66\u5230\u4e00\u5757\u7684\u51fd\u6570\uff0c\u4e0d\u8fc7\u5f88\u663e\u7136\u6ca1\u6709\u4f18\u5316\u3002\uff08\u8d85\u65f6\u4e862\u4e2a\u70b9\uff09\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[5]{0,0,1,-1};\nint b[5]{1,-1,0,0};\nchar maze[1010][1010];\nbool flag[1010][1010];\nint ans[1010][1010];\nint total,x,y,n,m;\ninline void search(int x,int y)\n{\n\tflag[x][y]=1;\n\t++total;\n\tfor(register int i=0;i<4;++i){\n\t\tif(!flag[x+a[i]][y+b[i]]&&maze[x][y]!=maze[x+a[i]][y+b[i]]&&x+a[i]<=n&&x+a[i]>=1&&y+b[i]<=n&&y+b[i]>=1)\n\t\t\tsearch(x+a[i],y+b[i]);\n\t}\n}\ninline void liant(int x,int y)\n{\n\tflag[x][y]=0;\n\tans[x][y]=total;\n\tfor(register int i=0;i<4;++i){\n\t\tif(flag[x+a[i]][y+b[i]]&&maze[x][y]!=maze[x+a[i]][y+b[i]]&&x+a[i]<=n&&x+a[i]>=1&&y+b[i]<=n&&y+b[i]>=1){\n\t\t\tliant(x+a[i],y+b[i]);\n\t\t}\n\t}\n}\nint main()\n{\n\t//std::ios::sync_with_stdio(false);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i=1;i<=n;++i)\n\t\tfor(register int j=1;j<=n;++j){\n\t\t\tstd::cin>>maze[i][j];\n\t\t}\n\tfor(register int i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(!flag[x][y]){\n\t\t\ttotal=0;\n\t\t\tsearch(x,y);\n\t\t\tliant(x,y);\n\t\t}\n\t\tprintf(\"%d\\n\",ans[x][y]);\n\t}\n\treturn 0;\n}\n```\n\u4e8e\u662f\u6211\u5c31\u5f00\u59cb\u4e86~~5\u5206\u949f\u7684\u4f18\u5316\u4e4b\u65c5~~\u6f2b\u957f\u7684\u4f18\u5316\u4e4b\u65c5\n\n\u5176\u5b9e\u53ef\u4ee5\u53e6\u5916\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u6bcf\u4e2a\u8fde\u901a\u56fe\u5757\u540c\u6837\u7684\u65b9\u6848\u6570\uff0c\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u5c31\u53ef\u4ee5\u5c06\u5176\u5b58\u653e\uff0c\u6ca1\u5fc5\u8981\u50cf\u65b9\u6cd5\u4e8c\u4e00\u6837\u7528\u4e24\u4e2a\u51fd\u6570\u4e86\uff01\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[5]{0,0,1,-1};\nint b[5]{1,-1,0,0};\nchar maze[1010][1010];\nbool flag[1010][1010];\nint ans[1020100];\nint iss[1010][1010];\nint total,x,y,n,m,d=1;\ninline void search(int x,int y)\n{\n\tflag[x][y]=1;\n\tiss[x][y]=d;\n\t++total;\n\tfor(register int i=0;i<4;++i){\n\t\tif(!flag[x+a[i]][y+b[i]]&&maze[x][y]!=maze[x+a[i]][y+b[i]]&&x+a[i]<=n&&x+a[i]>=1&&y+b[i]<=n&&y+b[i]>=1)\n\t\t\tsearch(x+a[i],y+b[i]);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i=1;i<=n;++i)\n\t\tfor(register int j=1;j<=n;++j){\n\t\t\tstd::cin>>maze[i][j];\n\t\t}\n\tfor(register int i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(iss[x][y]==0)\n\t\t{\n\t\t\ttotal=0;\n\t\t\tsearch(x,y);\n\t\t\tans[d++]=total;\n\t\t}\n\t\tcout<<ans[iss[x][y]]<<endl;\n\t}\n\treturn 0;\n}\n```\n\u5b8c\u7f8eAC\n\u6c42\u8fc7\n",
        "postTime": 1558148525,
        "uid": 154334,
        "name": "Garrison",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u4eec\u4e00\u60f3\u597d\u50cf\u53ef\u4ee5\u76f4\u63a5bfs\u6bcf\u4e00\u4e2a\u8bbf\u95ee\u3002\u55ef\u5bf9\uff0c\u6ca1\u9519\uff0c\u4f46\u597d\u50cf\u6b7b\u4e86\u3002\u3002\u3002\u3002\n\u5b8c\u7f8e\u7684T\u6389\u4e09\u4e2a\u70b9\u3002\n\n\u8003\u8651\u6ee1\u5206\u505a\u6cd5\uff0c\u4e00\u60f3\u3002\u55ef\uff1f\u8fd9\u9898\u50cf\u662f\u6709\u8054\u901a\u5757\u7684\u5f71\u5b50\u3002\n\u4fd7\u8bdd\u8bf4\u5f97\u597d\uff1a\n### \u6ca1\u6709\u5e76\u67e5\u96c6\u4e0d\u80fd\u89e3\u51b3\u7684\u8054\u901a\u5757\u3002\n\u54c8\u54c8\u4e8e\u662f\u5c31\u51fa\u73b0\u4e86\u795e\u5947\u7684\u5e76\u67e5\u96c6\u505a\u6cd5\u3002\u3002\n\u4f46\u89c2\u6469\u4e86\u5404\u4f4d\u5927\u4f6c\u7684\u5e76\u67e5\u96c6\u540e\u89c9\u5f97\u597d\u9ebb\u70e6\u3002\n\n\u6211\u4eec\u9996\u5148\u80af\u5b9a\u8981\u5c06\u5e76\u67e5\u96c6\u538b\u56de\u4e00\u7ef4\u3002\n\u4e0d\u7136\u592a\u96be\u505a\u3002\n### \u90a3\u4e48\u5177\u4f53\u600e\u4e48\u505a\u5462\uff1f\n\n\u54e6\u8111\u5b50\u4e00\u52a8\uff0c\u8bf7\u89c2\u5bdf\u4e00\u6ce2\u56fe\uff1a\n\n\u8bbef[\u7f16\u53f7]\u4e3a\u5e76\u67e5\u96c6\u4ed6\u7238\u7238\n\n1 2 3 4\n\n5 6 7 8\n\n9 10 11 12......\n\nf[\u7f16\u53f7]\u597d\u50cf\u548ci\uff0cj\u6709\u70b9\u5173\u7cfb\n\uff0c\u8bbem\u4e3a\u6a2a\u7740\u7684\u4e2a\u6570\n\n\u4e00\u63a8\u53d1\u73b0\n## \u7f16\u53f7$=(i-1)*m+j$\n\u90a3\u4e48\u5c31\u5b8c\u6210\u4e86\u3002\u68d2\u68d2\uff0c\u5feb\u5938\u5938\u6211\u3002\n```#include<cstdio>\n#include<queue>\n#include<iostream>\nusing namespace std;\nint n,m;\n#define N 1005\nint u,v;\nstruct node{\n\tint x,y;\n\tchar w;\n};\nqueue<node> q;\nchar map[N][N];\nbool vis[N][N];\nint f[N*N],a[N*N];//a\u4e3a\u53ef\u5230\u8fbe\u7684\u70b9\u6570\uff0cf\u4e3a\u7239\nint dx[]={1,-1,0,0},dy[]={0,0,1,-1};\nint getf(int x){\n\tif(f[x]==x)return x;\n\telse return f[x]=getf(f[x]);\n}\nvoid bfs(int cx,int cy){\n\tq.push((node){cx,cy,map[cx][cy]});\n\tvis[cx][cy]=1;\n\twhile(!q.empty()){\n\t\tnode t=q.front();q.pop();\n\t\tfor(int i=0;i<4;++i){\n\t\t\tint x=dx[i]+t.x;int y=dy[i]+t.y;\n\t\t\tif(x>n || x<1 || y>n || y<1 || vis[x][y]==1)continue;\n\t\t\tif(map[x][y]!=t.w){\n\t\t\t\tint t1=getf((x-1)*n+y);\n\t\t\t\tint t2=getf((t.x-1)*n+t.y);\n\t\t\t\tif(f[t1]!=f[t2]){\n\t\t\t\t\tq.push((node){x,y,map[x][y]});\n\t\t\t\t\ta[f[t2]]+=a[f[t1]];\n\t\t\t\t\tf[t1]=f[t2];\n\t\t\t\t\tvis[x][y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tf[(i-1)*n+j]=(i-1)*n+j;\n\t\t\ta[(i-1)*n+j]=1;//\n\t\t\tcin>>map[i][j];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)\n\t\tfor (int j=1;j<=n;++j)\n\t\tif (!vis[i][j]) bfs(i,j);\n\tfor(int i=1;i<=m;++i){\n\t\tcin>>u>>v;//\u4e4b\u524d\u88abscanf\u5361\u4e86\u597d\u4e45\u597d\u4e45\n\t\tprintf(\"%d\\n\",a[getf((u-1)*n+v)]); \n\t}\n\treturn 0\uff1b\n}\n```",
        "postTime": 1546166879,
        "uid": 87075,
        "name": "\u4e8c\u54e5\u5543\u83dc\u5305",
        "ccfLevel": 0,
        "title": "\u3010\u5047\u9898\u89e3\u3011P1141 01\u8ff7\u5bab"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u633a\u7b80\u5355\u7684\uff0c\u5178\u578b\u7684BFS\uff0c\u4f46\u662f\u6570\u636e\u6709\u70b9\u5927\uff0c\u521a\u5f00\u59cb\u540e\u4e24\u4e2a\u70b9\u4e00\u76f4\u8fc7\u4e0d\u4e86\uff0c\u770b\u4e86 \u91ce\u83dc\u82b1 \u7684\u9898\u89e3\u540e\u624dAC\u4e86\u3002\n\n```cpp\n\n#include<iostream>  \n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct point {int x,y;};\nint a[2000][2000],n,m,c=0,b[100001],v[2000][2000];\nint bfs(point p)\n{\n    int cnt=0;\n    queue<point> q;\n    q.push(p);\n    v[p.x][p.y]=c;\n    while (q.size()>0)\n    {\n        point t;\n        t=q.front();\n        q.pop();\n        cnt++;\n        if (t.x+1<=n&&v[t.x+1][t.y]==0&&a[t.x+1][t.y]!=a[t.x][t.y])\n        {\n            point tt;\n            tt.x=t.x+1;\n            tt.y=t.y;\n            v[t.x+1][t.y]=c;\n            q.push(tt);\n        }\n        if (t.x-1>0&&v[t.x-1][t.y]==0&&a[t.x-1][t.y]!=a[t.x][t.y])\n        {\n            point tt;\n            tt.x=t.x-1;\n            tt.y=t.y;\n            v[t.x-1][t.y]=c;\n            q.push(tt);\n        }\n        if (t.y+1<=n&&v[t.x][t.y+1]==0&&a[t.x][t.y+1]!=a[t.x][t.y])\n        {\n            point tt;\n            tt.x=t.x;\n            tt.y=t.y+1;\n            v[t.x][t.y+1]=c;\n            q.push(tt);\n        }\n        if (t.y-1>0&&v[t.x][t.y-1]==0&&a[t.x][t.y-1]!=a[t.x][t.y])\n        {\n            point tt;\n            tt.x=t.x;\n            tt.y=t.y-1;\n            v[t.x][t.y-1]=c;\n            q.push(tt);\n        }\n    }\n    return cnt;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    memset(v,0,sizeof(v));\n    cin>>n>>m;\n    for (int i=1;i<=n;i++)\n        for (int j=1;j<=n;j++)\n        {\n            char c;\n            cin>>c;\n            a[i][j]=(int)c-48;\n        }\n    for (int i=1;i<=m;i++)\n    {\n        point p;\n        cin>>p.x>>p.y;\n        if (v[p.x][p.y]>0) cout<<b[v[p.x][p.y]]<<\"\\n\";\n        else\n        {\n            c++;\n            b[c]=bfs(p);\n            cout<<b[c]<<\"\\n\";\n        }\n    }\n    return 0;\n} \n\n```\nps:\u4e0d\u8981\u88ab\u8fd9\u4e48\u957f\u4e00\u4e32\u7684\u4e1c\u897f\u5413\u5230\u4e86\uff0c\u4e0a\u9762\u56db\u4e2aif\u5176\u5b9e\u662f\u201c\u590d\u5236+\u7c98\u8d34+\u7a0d\u7a0d\u4fee\u6539\u201d\u7684\u7ed3\u679c\u3002\n",
        "postTime": 1426593619,
        "uid": 6210,
        "name": "sqc1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "# \u5927\u81f4\u9898\u610f\n\u76f8\u90bb\u683c\u5b50\u4e0d\u540c\u4e3a\u8fde\u901a\uff0c\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u8fde\u901a\u5757\u5927\u5c0f\u3002\n# \u60f3\u6cd5\n\u6211\u91c7\u7528\u4e86\u5e76\u67e5\u96c6\u7684\u505a\u6cd5\u3002\n\u5f00\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4\u8bb0\u5f55\u8fde\u901a\u5757\u5927\u5c0f\uff0c\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u66f4\u65b0\u7236\u4eb2\u8282\u70b9\u7684\u5927\u5c0f\u5373\u53ef\u3002\n\n\n> \u4e00\u4e2a\u70b9\u5148\u4e0e\u5b83\u4e0a\u9762\u7684\u70b9\u5224\u5b9a\uff0c\u82e5\u5224\u5b9a\u8fde\u901a\u5219\u52a0\u5165\u4e0a\u65b9\u70b9\u6240\u5c5e\u7684\u5757\u4e2d\u3002 \n>\n> \u518d\u4e0e\u5de6\u8fb9\u7684\u70b9\u5224\u5b9a\uff0c\u82e5\u8fde\u901a\u5219\u518d\u5c06\u4e24\u4e2a\u5757\u5408\u5e76\u3002\n\n\u603b\u4f53\u590d\u6742\u5ea6$O(n^3)$\uff0c\u5176\u4e2d\u5e76\u67e5\u96c6\u4e0d\u52a0\u4f18\u5316\u590d\u6742\u5ea6\u4e3a$O(n)$\uff0c\u4f7f\u7528\u8def\u5f84\u538b\u7f29+\u6309\u8282\u70b9\u5927\u5c0f\u5408\u5e76\u4f18\u5316\u5e76\u67e5\u96c6\uff0c\u5c06\u5e76\u67e5\u96c6\u590d\u6742\u5ea6\u964d\u4f4e\u4e3a\u8fd1\u4f3c$O(1)$\uff0c\u603b\u4f53\u590d\u6742\u5ea6\u8fd1\u4f3c\u4e3a$O(n^2)$\u3002\n## \u5e76\u67e5\u96c6\u4f18\u5316\n### \u8def\u5f84\u538b\u7f29\n\u6bcf\u6b21\u67e5\u627e\u7684\u65f6\u5019\uff0c\u5c06\u8def\u5f84\u4e0a\u7684\u6240\u6709\u513f\u5b50\u7684\u7236\u4eb2\u6539\u5199\u4e3a\u6700\u539f\u59cb\u7684\u7956\u5b97\u3002\u8fd9\u6837\u4e0b\u6b21\u5c31\u53ef\u4ee5\u76f4\u63a5\u627e\u5230\u7956\u5b97\u3002\n\u5b9e\u73b0\uff1a\n\n```cpp\ninline int find(const int &x)\n{\n    return fa[x] == x ? x : fa[x] = find(fa[x]);//\u8def\u5f84\u538b\u7f29\n}\n```\n\u901a\u4fd7\u5199\u6cd5\uff1a\n\n```cpp\ninline int find(const int &x)\n{\n    if(fa[x] == x)//\u627e\u5230\u65e0\u7236\u4eb2\u7684\u8282\u70b9\uff0c\u5373\u4e3a\u7956\u5b97\n    \treturn x;\n    fa[x] = find(fa[x]);\n    return fa[x];\n}\n```\n### \u6309\u79e9\u5408\u5e76\n\u601d\u8003\uff1a\n\u67092\u4e2a\u5757\u9700\u8981\u5408\u5e76\uff0c\u90a3\u4e48\u5c06\u5c0f\u5757\u63a5\u5728\u5927\u5757\u7684\u540e\u9762\u80fd\u591f\u8ba9\u6574\u4f53\u590d\u6742\u5ea6\u66f4\u4f18\u3002\n\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u7956\u5b97\u53ca\u5176\u6240\u6709\u513f\u5b50\u770b\u505a\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u8282\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u5c31\u662f\u67e5\u627e\u7236\u4eb2\u9700\u8981\u7684\u6b21\u6570\u3002\n\u5c06\u5c0f\u6811\u5e76\u5165\u5927\u6811\uff0c\u53ef\u4ee5\u907f\u514d\u6811\u7684\u6df1\u5ea6\u8fc7\u6df1\u3002\n\u8fd9\u4e2arnk\u6570\u7ec4\u4fdd\u5b58\u7684\u662f\u6811\u7684\u6df1\u5ea6\u7684\u4e0a\u754c\u3002\n\u901a\u5e38\u5199\u6cd5\uff1a\n\n```cpp\nconst int maxn = 10000000;\nint rnk[maxn],fa[maxn];//rnk\u4e3a\u8be5\u8282\u70b9\u6240\u5728\u5b50\u6811\u7684\u6df1\u5ea6\ninline void unite(const int &x,const int &y)\n{\n\t//\u5408\u5e76x\u4e0ey\u7684\u5757\n\tint t1 = find(x),t2 = find(y);//\u627e\u5230\u5404\u81ea\u7684\u7956\u5b97\n\tif(t1 == t2)\n\t\treturn;\n\tif(rnk[t1] == rnk[t2])\n\t{\n\t\t//\u6b64\u65f6\u4e24\u6811\u6df1\u5ea6\u76f8\u7b49\uff0c\u968f\u4fbf\u5408\u5e76\n\t\tfa[t1] = t2;\n\t\t++rnk[t2];//\u5408\u5e76\u540e\u6df1\u5ea6\u589e\u52a0\n\t}\n\telse if(rnk[t1] > rnk[t2])\n\t\tfa[t2] = t1;\n\telse\n\t\tfa[t1] = t2;\n}\n```\n## \u603b\u7ed3\n\u8def\u5f84\u538b\u7f29\u548c\u6309\u79e9\u5408\u5e76\u90fd\u80fd\u5c06\u5e76\u67e5\u96c6\u590d\u6742\u5ea6\u964d\u4e3a$O(logn)$\uff0c\u800c\u4e24\u8005\u4e00\u8d77\u4f7f\u7528\u80fd\u591f\u964d\u4e3a$O(log^*n)$\u3002\n|$n$|$log^*n$ |\n|--|--|\n|(\u2212\u221e, 1]|0|\n|(1, 2]|1|\n|(2, 4]|2|\n|(4, 16]|3|\n|(16, 65536]|4|\n|(65536, 2^65536]|5|\n(\u6570\u636e\u8f6c\u81ea[\u94fe\u63a5](https://blog.csdn.net/johnny901114/article/details/80721436)\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u7bc7\u535a\u6587\u8bb2\u5e76\u67e5\u96c6\u8bb2\u5f97\u76f8\u5f53\u4e0d\u9519\u3002)\n\n# \u4ee3\u7801\n\u56e0\u4e3a\u6309\u79e9\u5408\u5e76\u9700\u8981\u989d\u5916\u6570\u7ec4\uff0c\u800c\u5728\u6b64\u6570\u91cf\u7ea7\u4e0b\u5f00\u6570\u7ec4\u7684\u6d88\u8017\u53ef\u80fd\u6bd4\u4f18\u5316\u66f4\u5927\u2026\u2026\n\u4e8e\u662f\u501f\u7528\u4e86\u9898\u76ee\u4e2d\u7ef4\u62a4\u7684\u201c\u8fde\u901a\u5757\u5927\u5c0f\u201d\uff0c\u5373\u8282\u70b9\u4e2a\u6570\uff0c\u8fdb\u884c\u4e86\u6309size\u5408\u5e76\u7684\u4f18\u5316\u3002\n```cpp\n#include <cstdio>\nusing namespace std;\n#define getId(x, y) (((x - 1) * n) + y) //\u5c06\u4e8c\u7ef4\u7684\u70b9\u8d4b\u4e88\u4e00\u4e2a\u4e00\u7ef4\u7684\u522b\u540d\nint fa[1001000];\nint h[1001000];\nchar all[2][1010];\nint n, m, i, j;\n//\u8bfb\u5165\u4f18\u5316\ninline char nc()\n{\n    static char buf[400000], *p1 = buf, *p2 = buf;\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 400000, stdin), p1 == p2) ? EOF : *p1++;\n}\nvoid read(char *s)\n{\n    static char c;\n    for (c = nc(); c != '1' && c != '0'; c = nc());\n    for (; c == '0' || c == '1'; *++s = c, c = nc());\n}\nvoid read(int &r)\n{\n    static char c;  r = 0;\n    for (c = nc(); c > '9' || c < '0'; c = nc());\n    for (; c >= '0' && c <= '9'; r = (r << 1) + (r << 3) + (c ^ 48), c = nc());\n}\n//\u5e76\u67e5\u96c6\ninline int find(const int &x)\n{\n    return fa[x] == x ? x : fa[x] = find(fa[x]);//\u8def\u5f84\u538b\u7f29\n}\ninline void unite(const int &a, const int &b)\n{\n    int t1 = find(a), t2 = find(b);\n    if (t1 == t2)\n        return;\n    h[t1] > h[t2] ? fa[t2] = t1, h[t1] += h[t2] : fa[t1] = t2, h[t2] += h[t1]; //\u7c7b\u4f3c\u6309\u79e9\u5408\u5e76\u7684\u505a\u6cd5\uff0c\u5408\u5e76\u540c\u65f6\u5c06\u513f\u5b50\u7684\u5927\u5c0f\u52a0\u5165\u7236\u4eb2\u7684\u5927\u5c0f\u4e2d\n}\n//\nint main()\n{\n    read(n);\n    read(m);\n    int n2 = n * n;\n    for (int i = 1; i <= n2; ++i)\n        fa[i] = i, h[i] = 1; //\u521d\u59cb\u5316\u6bcf\u4e2a\u70b9\u90fd\u662f\u5355\u72ec\u7684\u8054\u901a\u5757\uff0c\u5927\u5c0f\u4e3a1\n    \n    int now = 0, pre = 1;\n    //\u7b2c\u4e00\u884c\u7279\u5224\uff0c\u4e0d\u9700\u8981\u4e0e\u4e0a\u4e00\u884c\u4f5c\u6bd4\u8f83\n    i = 1;\n    read(all[now]);\n    for (j = 2; j <= n; ++j)//j\u4ece2\u5f00\u59cb\uff0c\u53ef\u4ee5\u7565\u8fc7\u7b2c\u4e00\u4e2a\u683c\u5b50\uff0c\u6700\u5de6\u4e0a\u89d2\u7684\u683c\u5b50\u65e0\u9700\u5224\u65ad\n        if (all[now][j] != all[now][j - 1])\n            unite(getId(i, j), getId(i, j - 1));\n\n    for (i = 2; i <= n; ++i)\n    {\n        now ^= 1;//\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\n        pre ^= 1;\n        read(all[now]);\n        if (all[now][1] != all[pre][1])\n            unite(getId(i, 1), getId(i - 1, 1));//\u7b2c\u4e00\u4e2a\u683c\u5b50\u65e0\u9700\u4e0e\u5de6\u8fb9\u5224\u65ad\n        for (j = 2; j <= n; ++j)\n        {\n            if (all[now][j] != all[now][j - 1]) //\u56e0\u4e3a\u662f\u6309\u884c\u6309\u5217\u904d\u5386\uff0c\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u4e0a\u65b9\u70b9\u548c\u5de6\u8fb9\u70b9\u7684\u5408\u5e76\n                unite(getId(i, j), getId(i, j - 1));\n            if (all[now][j] != all[pre][j])\n                unite(getId(i, j), getId(i - 1, j));\n        }\n    }\n    int x, y;\n    for (i = 1; i <= m; ++i)\n    {\n        read(x);\n        read(y);\n        printf(\"%d\\n\", h[find(getId(x,y))]);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1574933811,
        "uid": 220159,
        "name": "Clouder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u521a\u505a\u5b8c\u8fd9\u9053\u9898\uff0c\u611f\u89c9\u80ba\u90fd\u8981\u6c14\u70b8\u4e86\n\n\u6211\u770b\u4e86\u9898\u89e3\u6539\u4e86\u4e00\u70b9\uff0c\u7136\u540e\u6539\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u53d1\u73b0\n\nwoc\uff0c\u6211\u5927\u4e8e\u53f7\u5199\u6210\u5c0f\u4e8e\u53f7\u4e86\n\n\u7136\u540e\u628a\u6211\u539f\u6765\u7684\u4ee3\u7801\u62f7\u8d1d\u56de\u6765\uff0c\u6539\u4e86\u4e0d\u7b49\u53f7\u540e\n\nWTF\uff0c\u7adf\u7136\u5bf9\u4e86\n\n~~\u4f60\u8bf4\u6211\u6c14\u4e0d\u6c14~~\n\n\u597d\u4e86\u4e0d\u626f\u90a3\u4e48\u8fdc\n\n\u76ee\u5f55\n\n1.\u601d\u8def\n\n2.\u9519\u8bef\u8bb0\u5f55\n\n3.\u4f60\u4eec\u6700\u559c\u6b22\u7684\u4ee3\u7801\n\n\u4e00.\u601d\u8def\n\n\u7528dfs\uff0c\u540c\u65f6\u6bcf\u6b21\u90fd\u6807\u8bb0\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u65f6\u95f4\uff0c\u4e0d\u7136.......\n\n\u4f60\u4f1aTLE   ~~TIME LEFTED EXCCEED(\u65f6\u95f4\u5269\u4f59\u8d85\u9650\uff09~~\n\n\u540c\u65f6\u62ff\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e2a\u6570~~\u4e0d\u7136\u5c31\u767d\u6807\u8bb0\u4e86~~\n\n\u4e8c.\u9519\u8bef\u8bb0\u5f55\n\n1.10\u4e2aWA\uff08\u5c31\u662f\u4e0d\u7b49\u53f7\u5199\u53cd\u4e86\uff09\n\n0\u5206\n\n2.10\u4e2aAC\n\n\u6539\u5b8c\u4e4b\u540e\u5c31\u5bf9\u4e86\n\n\u4e09.\u65b0\u9c9c\u51fa\u7089\u7684AC\u4ee3\u7801\n\n\u5bf9\u4e86\u8fd8\u6709\u6211\u7684\u4ee3\u7801\u98ce\u683c\u6bd4\u8f83\u5947\u7279\uff0c\u671b\u7406\u89e3\n\n\u4ee3\u7801\u5982\u4e0b\n\n```\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,m;\nchar a[1005][1005];\nint vis[1005][1005];\nint ans[100005];\nint sign;\nint now;\nint posx,posy;\nvoid dfs(int x,int y,char s)\n{\n\tif(x<1||x>n||y<1||y>n){\n\t\treturn;\n\t}\n\tif(vis[x][y]!=0){\n\t\treturn;\n\t}\n\tif(s==a[x][y]){\n\t\treturn;\n\t}\n\tvis[x][y]=sign;\n\ts=a[x][y];\n\tnow+=1;\n\tdfs(x+1,y,s);\n\tdfs(x-1,y,s);\n\tdfs(x,y-1,s);\n\tdfs(x,y+1,s);\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int i1=1;i1<=n;i1++){\n\t\t\tcin>>a[i][i1];\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>posx>>posy;\n\t\tnow=0;\n\t\tif(vis[posx][posy]==0){\n\t\t\tsign++;\n\t\t\tdfs(posx,posy,'3');\n\t\t\tans[sign]=now;\n\t\t\tcout<<now;\n\t\t}else{\n\t\t\tcout<<ans[vis[posx][posy]];\n\t\t}\n\t\tcout<<endl;\n    }\n    return 0;//\u7ed3\u675f\n}\n```\n",
        "postTime": 1569685510,
        "uid": 220362,
        "name": "chenxuanting",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "**\u6765\u4e00\u7bc7Java\u8bed\u8a00\u7684\u9898\u89e3**\n\n\n------------\n\n### \u5206\u6790\n\n1. \u56fe\u7684\u904d\u5386\n2. \u6807\u67090\u6216\u80051\u4ea4\u66ff\u904d\u5386\n3. \u591a\u4e2a\u8d77\u70b9\n\n### \u601d\u8def\uff1a\n**BFS + Union-Find**\n\n\u4ece\u8d77\u70b9\u5f00\u59cbBFS\uff0c\u5c06\u53ef\u4ee5\u904d\u5386\u5230\u7684\u683c\u5b50\uff0c\u5408\u5e76\u4e3a\u4e00\u4e2a\u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u683c\u5b50\u7684\u4e2a\u6570\n\u5c31\u662f\u6c42\u89e3\u3002\n\n\u6ce8\u610f\uff1a\n1. \u53ef\u4ee5\u4ece1\u4e2a\u8d77\u70b9\uff0c\u4e5f\u53ef\u4ee5\u4ece\u591a\u4e2a\u8d77\u70b9\u8fdb\u884cBFS\u904d\u5386\n2. \u591a\u4e2a\u8d77\u70b9\u904d\u5386\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u91cd\u5408\uff0c\u5f53\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u70b9\u96c6\u5408\u91cd\u5408\u7684\u65f6\u5019\uff0c\u5408\u5e76\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u907f\u514d\u91cd\u590d\u7684BFS\n3. \u4e3a\u4e86\u4fbf\u4e8e\u5e76\u67e5\u96c6\u7684\u4f7f\u7528\uff0c\u5f15\u5165\u4e86\u4e8c\u7ef4\u6570\u7ec4\u5750\u6807\u4e0e\u4e00\u7ef4\u6570\u7ec4\u5750\u6807\u76f8\u4e92\u8f6c\u5316\n\n### \u77e5\u8bc6\u70b9\n1. \u5e76\u67e5\u96c6\uff08Union-Find\uff09\n\u53ef\u4ee5\u8003\u5bdf\u56fe\u4e2d\u70b9\u7684\u8054\u901a\u6027\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u52a0\u5165\u8ba1\u6570\u529f\u80fd\uff0c\u8bb0\u5f55\u56fe\u4e2d\u4e00\u4e2a\u7236\u8282\u70b9\uff08\u8d77\u70b9\uff09\u6240\u5728\u7684\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u4f9b\u6700\u540eans\uff0c\u540c\u65f6\u53ef\u4ee5\u5229\u7528\u904d\u5386\u8fc7\u7684\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff08\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5c31\u662fDP\uff09\n2. \u5750\u6807\u8f6c\u5316\n```java\n\u4e8c\u7ef4\u5750\u6807\u8f6c\u4e00\u7ef4\u5750\u6807\uff1a  \n\t    int index = x * n + y;\n\n\u4e00\u7ef4\u5750\u6807\u8f6c\u8f6c\u4e00\u7ef4\u5750\u6807\uff1a\n            int i = index / n;\n            int j = index % n;\n```\n3. BFS\u904d\u5386\n- \u4ece\u8d77\u70b9\u5f00\u59cbBFS\uff0c\u5728\u5f53\u524d\u70b9\u7684\u56db\u4e2a\u65b9\u5411\u8fdb\u884c\u904d\u5386\u5bfb\u627e\u53ef\u80fd\u7684\u4e0b\u4e00\u6b65\n- \u5fc5\u987b\u662f\u56db\u4e2a\u65b9\u5411\u4e2d\u672a\u8bbf\u95ee\u7684\u70b9\uff0c{-1, 0}, {0, -1}, {0, 1}, {1, 0}\n- \u5fc5\u987b\u662f\u4e0b\u4e00\u70b9\u7684value\u503c\u4e0e\u5f53\u524d\u6240\u5728\u7684\u70b9value\u4e0d\u540c\uff1a1-->0 \u6216\u8005 0-->1\n\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n1. \u5feb\u901fUnion-Find\uff0c\u6709\u4e24\u4e2a\u4e3b\u8981\u7684\u65b9\u6cd5\n- int find(int c)   \t\n\n\t\u9012\u5f52\u67e5\u8be2\u8282\u70b9c\u7684\u7236\u8282\u70b9\n    \n```java\n    private static int find(int c) {\n        if (c == p[c]) return c;\n        return p[c] = find(p[c]);\n    }\n\n```\n\n\n- void union(int c1,int c2)\n\n\t\u5c06\u8282\u70b9c1\u3001c2\u5408\u5e76\u5230\u540c\u4e00\u4e2a\u7236\u8282\u70b9\u5e76\u8ba1\u6570\n\n```java\n    private static int find(int c) {\n        if (c == p[c]) return c;\n        return p[c] = find(p[c]);\n    }\n\n    private static void union(int c1, int c2) {\n        int p1 = find(c1);\n        int p2 = find(c2);\n        if (p1 == p2) return;\n        if (p1 > p2) {\n            p[p1] = p2;\n            cnt[p2] += cnt[p1];\n        } else {\n            p[p2] = p1;\n            cnt[p1] += cnt[p2];\n        }\n    }\n```\n\n\n\n\n------------\n\n\n### \u5b8c\u6574\u4ee3\u7801\n\n```java\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.StringTokenizer;\n\nimport static java.lang.Integer.parseInt;\n\npublic class Main {\n    private static int n, m, size;\n    private static boolean[][] data;\n    private static boolean[] visited;\n    private static int[] p, cnt;\n    private static final int[][] offset = new int[][]{{-1, 0}, {0, -1}, {0, 1}, {1, 0}};\n    private static final ArrayDeque<Integer> queue = new ArrayDeque<>();\n\n    public static void main(String[] args) throws Exception {\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st = new StringTokenizer(in.readLine());\n        n = parseInt(st.nextToken());\n        m = parseInt(st.nextToken());\n        size = n * n;\n        data = new boolean[n][n];\n        visited = new boolean[size];\n        for (int i = 0; i < n; i++) {\n            String ins = in.readLine();\n            for (int j = 0; j < n; j++) {\n                data[i][j] = (ins.charAt(j) == '0');\n            }\n        }\n        p = new int[size];\n        for (int i = 0; i < size; i++) {\n            p[i] = i;\n        }\n        cnt = new int[size];\n        Arrays.fill(cnt, 1);\n        StringBuffer ans = new StringBuffer();\n        for (int i = 0; i < m; i++) {\n            st = new StringTokenizer(in.readLine());\n            int x = parseInt(st.nextToken()) - 1;\n            int y = parseInt(st.nextToken()) - 1;\n            int index = x * n + y;\n            if (!visited[index]) bfs(x, y);\n            ans.append(cnt[find(index)]).append('\\n');\n        }\n        System.out.println(ans.toString());\n    }\n\n    private static void bfs(int x, int y) {\n        int index = x * n + y;\n        visited[index] = true;\n        queue.add(index);\n        while (!queue.isEmpty()) {\n            int start = queue.poll();\n            int i = start / n;\n            int j = start % n;\n            for (int[] next : offset) {\n                int nextX = i + next[0];\n                int nextY = j + next[1];\n                if (nextX < 0 || nextX >= n) continue;\n                if (nextY < 0 || nextY >= n) continue;\n                int nextI = nextX * n + nextY;\n                if (!visited[nextI] && data[i][j] != data[nextX][nextY]) {\n                    visited[nextI] = true;\n                    union(start, nextI);\n                    queue.add(nextI);\n                }\n            }\n        }\n    }\n\n    private static int find(int c) {\n        if (c == p[c]) return c;\n        return p[c] = find(p[c]);\n    }\n\n    private static void union(int c1, int c2) {\n        int p1 = find(c1);\n        int p2 = find(c2);\n        if (p1 == p2) return;\n        if (p1 > p2) {\n            p[p1] = p2;\n            cnt[p2] += cnt[p1];\n        } else {\n            p[p2] = p1;\n            cnt[p1] += cnt[p2];\n        }\n    }\n}\n\n```\n",
        "postTime": 1569069902,
        "uid": 236490,
        "name": "\u738b\u9e4fPRO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "NO.7 \u56f0\u6270\u4e86\u849f\u84bb\u51e0\u5929\u7684**\u8d85\u65f6\u8c1c\u56e2\u7ec8\u4e8e\u89e3\u5f00**\u4e86\uff01\u4e00\u5f00\u59cb\uff0c\u7528\u7684BFS\uff0c\u4e0d\u51fa\u6240\u6599\u51e0\u4e2a\u70b9TLE \u252d\u252e\ufe4f\u252d\u252e \u540e\u6765\uff0c\u6539\u6210BFS\u4e5f\u8d85\u65f6 \u252d\u252e\ufe4f\u252d\u252e \uff08\u53ef\u80fd\u662f\u6ca1\u6709\u8bb0\u5fc6\u5316\u5bfc\u81f4\u7684\uff0c\u6bd5\u7adf\u641c\u7d22\u6df1\u5ea6\u592a\u5927\uff09\uff0c\u6700\u540e\uff0c\u770b\u5230\u9898\u89e3\u91cc\u8fde\u901a\u5757\u7684\u6982\u5ff5\uff0c\u5c31\u53bb\u641c\u8d44\u6599\u5199\u4e86\u4e00\u4e0b\uff0c\u7ec8\u4e8e\u5b88\u5f97\u4e91\u5f00\u89c1\u6708\u660e\uff01\n\n### \u7b80\u5355\u6765\u8bf4\uff0c\u8fd9\u9053\u9898\u6211\u7528\u4e86**DFS**\u548c**\u8fde\u901a\u5757**\u4e24\u4e2a\u65b9\u6cd5\u3002\u5927\u81f4\u601d\u8def\u5982\u4e0b\uff1a\n\n\u53d8\u91cf\u6709\u4e9b\u591a\uff0c\u4f46\u662f\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u54d2~\u4e3b\u8981\u7684\u5c31\u662f\u7528**mark\u6570\u7ec4\u6807\u8bb0\u70b9(i,j)\u5c5e\u4e8e\u54ea\u4e2a\u8fde\u901a\u56fe\uff08\u4ece1\u5f00\u59cb\u8ba1\u6570\uff09**\u3002\u521d\u59cb\u65f6\u5404\u70b9\u7684mark\u503c\u5747\u4e3a0\u3002\u6bcf\u8f93\u5165\u4e00\u4e2a\u5750\u6807\u70b9\uff0c\u5c31\u5224\u65ad\u8be5\u70b9\u7684mark\u503c\u662f\u5426\u4e3a0\uff0c\u5982\u679c\u662f\uff0c\u8bf4\u660e\u8be5\u70b9\u7684\u503c\u8fd8\u6ca1\u6709\u88ab\u8ba1\u7b97\u8fc7\uff0c\u90a3\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fde\u901a\u56fe\uff0c\u5e76\u8c03\u7528dfs\u5c06\u5c5e\u4e8e\u8fd9\u4e2a\u8fde\u901a\u56fe\u7684\u6240\u6709\u70b9\u627e\u5230\uff0c\u8fd9\u4e2a\u627e\u70b9\u7684\u8fc7\u7a0b\u5c31\u662f\u628amark\u503c\u7f6e\u4e3a\u5f53\u524d\u8fde\u901a\u56fe\u7684\u6807\u53f7\u7684\u8fc7\u7a0b\u3002dfs\u8fc7\u540e\uff0c\u6240\u6709\u5c5e\u4e8e\u8be5\u8fde\u901a\u56fe\u7684\u70b9\u7684mark\u503c\u90fd\u53d8\u6210\u8be5\u8fde\u901a\u56fe\u7684\u6807\u53f7no\u3002\n\n\u901a\u8fc7\u4e0a\u8ff0\u7684\u63cf\u8ff0\u6211\u4eec\u53d1\u73b0\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\u6765**\u5b58\u50a8\u6bcf\u4e2a\u8fde\u901a\u56fe\u7684\u503c\uff0cliantong\u6570\u7ec4**\uff08\u6ce8\u610f\u8be5\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u5982\u679c\u592a\u5c0f\u5219\u4f1aRE\uff09\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5bf9\u70b9\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n\u5173\u4e8e\u8fde\u901a\u5757\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5176\u5b9e\u6211\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u9690\u9690\u7ea6\u7ea6\u53d1\u73b0\uff0c\u53ea\u8981\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u5bfb\u627e\u53ef\u8fbe\u70b9\uff0c\u90a3\u4e48\u6240\u6709\u8fd9\u6761\u5bfb\u627e\u8def\u5f84\u4e0a\u7684\u70b9\u5747\u5f7c\u6b64\u53ef\u8fbe\uff0c\u5b83\u4eec\u7684\u8ba1\u7b97\u503c\u4e5f\u5c31\u76f8\u7b49\u3002\u4e4b\u524dmark\u90fd\u662f\u7528\u6765\u505a\u771f\u5047\u6807\u8bb0\u7684\uff0c\u8fd9\u6b21\u5de7\u7528\u4e86\u4e00\u4e0b\uff0c\u7adf\u6709\u5947\u6548\uff01\n\n\n### AC\u4ee3\u7801~\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std;\n\nchar ch;\nint n, m, row, col;\nint a[1003][1003]; //\u957f\u5ea6\u4e3an*n\u7684\u77e9\u9635\nint mark[1003][1003];//mark\u6807\u8bb0\u8be5\u70b9\u7684\u503c\u662f\u7b2c\u51e0\u4e2a\u8fde\u901a\u56fe\u904d\u5386\u8fc7\nint change[4][2] = { {-1,0},{1,0},{0,1},{0,-1} };  //\u76f8\u90bb\u56db\u4e2a\u683c\u5b50\nint liantong[1000003]; //\u7b2ci\u4e2a\u8fde\u901a\u56fe\u7684\u503c\n\nint dfs(int ss, int ee)\n{\n\tint ans = 1; //\u5f00\u59cb\u53ea\u53ef\u4ee5\u5230\u8fbe\u81ea\u5df1\n\tint nx, ny;\n\tfor (int i = 0; i < 4; i++) //\u5de6\u53f3\u4e0b\u4e0a\u56db\u4e2a\u70b9\n\t{\n\t\tnx = ss + change[i][0];\n\t\tny = ee + change[i][1];\n\t\tif (nx<1 || nx>n || ny<1 || ny>n)\n\t\t\tcontinue;\n\t\tif (mark[nx][ny] !=0)\n\t\t\tcontinue;\n\t\tif (a[nx][ny] + a[ss][ee] == 1)\n\t\t{\n\t\t\tmark[nx][ny] = mark[ss][ee];\n\t\t\tans += dfs(nx, ny);\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tcin >> ch;\n\t\t\ta[i][j] = ch - '0';\n\t\t}\n\tint no = 0;\n\tmemset(mark, 0, sizeof(mark));\n\twhile (m--)\n\t{\n\t\tcin >> row >> col;\n\t\tif (mark[row][col] == 0)\n\t\t{\n\t\t\tno++;\n\t\t\tmark[row][col] = no;\n\t\t\tliantong[no] = dfs(row, col);\n\t\t\tcout << liantong[no] << endl;\n\t\t}\n\t\telse\n\t\t\tcout << liantong[mark[row][col]] << endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1567047330,
        "uid": 237242,
        "name": "yubing_lml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "# \u6307\u9488\u5927\u6cd5\u597d\uff01\uff01\n\n## \u770b\u89c1\u524d\u9762\u5927\u4f6c\u90fd\u7528\u5e7f\u641c\uff0c\u6211\u63a8\u8350\u4e00\u6b3e\u6307\u9488\u52a0\u6df1\u641c\uff1a\n\n## \u8fd9\u4e00\u9898\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u628a\u80fd\u76f8\u4e92\u5230\u8fbe\u7684\u683c\u5b50\u7684\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u8fd9\u6837\u5c31\u80fd\u540c\u65f6\u6539\u53d8\u591a\u4e2a\u683c\u5b50\u7684\u5230\u8fbe\u6570\u3002\n\n# \u4e3b\u8981\u6b65\u9aa4\uff1a\n```cpp\nint m,n,tot[100000],c[100000],d[100000];//c,d\u6570\u7ec4\u4e3a m \u7684\u6a2a\u7eb5\u5750\u6807 \nchar ch;int *a[1001][1001];int b[1002][1002];//\u5b9a\u4e49\u6307\u9488 \nfor(;m>=1;m--){\n\t\tcin>>c[m]>>d[m];\n\t\tif(a[c[m]][d[m]]){//\u82e5\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u6709\u6570\uff0c\u5373\u8d70\u8fc7\u4e86\u4fbf\u76f4\u63a5\u8f93\u51fa\u3002 \n\t\t\tcout<<*a[c[m]][d[m]]<<endl;//\u5c31\u662f\u8bb0\u5fc6\u641c\u7d22 \n\t\t\tcontinue;\n\t\t}\n\t\tf(c[m],d[m]);//\u641c\u7d22 \n\t\tcout<<tot[m]<<endl;\n\t\ttot=0;//\u8bb0\u5f97\u5f520 \n\t}\n```\n# \u6df1\u641c\u51fd\u6570\uff1a\n```cpp\nvoid f(int i,int j){//\u6df1\u641c \n\ta[i][j]=&tot[m];//\u8ba9\u8fd9\u4e2a\u683c\u5b50\u7684\u6307\u9488\uff0c\u6307\u5411\u7d2f\u52a0\u6570\uff1b \n\ttot[m]++;//\u7d2f\u52a0\u7b54\u6848\uff1b \n\tfor(int o=0;o<=3;o++)\n\t\tif(i+x[o]>0&&i+x[o]<=n&&j+y[o]>0&&j+y[o]<=n&&!a[i+x[o]][j+y[o]])//\u8d70\u8fc7\u7684\u4e0d\u8d70\uff0c\u4e0d\u80fd\u8d8a\u754c \n\t\t    if(b[i+x[o]][j+y[o]]!=b[i][j])//\u9898\u76ee\u8981\u6c42 \n\t\t        f(i+x[o],j+y[o]);//\u7ee7\u7eed\u641c\u7d22\n```\n# \u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,tot[100000],c[100000],d[100000];//c,d\u6570\u7ec4\u4e3a m \u7684\u6a2a\u7eb5\u5750\u6807 \nchar ch;int *a[1001][1001];int b[1002][1002];//\u5b9a\u4e49\u6307\u9488 \nint x[4]={1,0,-1,0};//\u56db\u4e2a\u65b9\u4f4d \uff1b \nint y[4]={0,1,0,-1};//\u65b9\u4fbf\u5bf9\u6bd4\uff1b \nvoid f(int i,int j){//\u6df1\u641c \n\ta[i][j]=&tot[m];//\u8ba9\u8fd9\u4e2a\u683c\u5b50\u7684\u6307\u9488\uff0c\u6307\u5411\u7d2f\u52a0\u6570\uff1b \n\ttot[m]++;//\u7d2f\u52a0\u7b54\u6848\uff1b \n\tfor(int o=0;o<=3;o++)\n\t\tif(i+x[o]>0&&i+x[o]<=n&&j+y[o]>0&&j+y[o]<=n&&!a[i+x[o]][j+y[o]])//\u8d70\u8fc7\u7684\u4e0d\u8d70\uff0c\u4e0d\u80fd\u8d8a\u754c \n\t\t    if(b[i+x[o]][j+y[o]]!=b[i][j])//\u9898\u76ee\u8981\u6c42 \n\t\t        f(i+x[o],j+y[o]);//\u7ee7\u7eed\u641c\u7d22\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)//\u8f93\u5165 \n\t\t\tscanf(\"%1d\",&b[i][j]);\n\tfor(;m>=1;m--){\n\t\tcin>>c[m]>>d[m];\n\t\tif(a[c[m]][d[m]]){//\u82e5\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u6709\u6570\uff0c\u5373\u8d70\u8fc7\u4e86\u4fbf\u76f4\u63a5\u8f93\u51fa\u3002 \n\t\t\tcout<<*a[c[m]][d[m]]<<endl;//\u5c31\u662f\u8bb0\u5fc6\u641c\u7d22 \n\t\t\tcontinue;\n\t\t}\n\t\tf(c[m],d[m]);//\u641c\u7d22 \n\t\tcout<<tot[m]<<endl;//(\u8f93\u51fa\uff0c\u5706\u6ee1)\n\t}\n    return 0;\n}\n```\n### \u8fd9\u662f\u6211\u7684[\u535a\u5ba2\u7a7a\u95f4](https://www.luogu.org/space/show?uid=111334)\uff0c\u53d1\u7684\u9898\u89e3\u548c\u4e00\u4e9b\u6d1b\u8c37\u6280\u5de7\u90fd\u5728\u91cc\u9762\u3002\n\n### \u53e6\u5916\uff0c\u672c\u4eba\u771f\u7684\u53ea\u662f\u4e00\u4e2a\u5f31\u5f31\u7684\u840c\u65b0\uff0c7\u6708\u4efd\u624d\u5165\u4fe1\u606f\u7ec4\uff0c\u53d1\u7684\u9898\u89e3\u8ba8\u8bba\u7b49\u7ea7\u4e0d\u9ad8\uff0c\u65b0\u4eba\u53ef\u770b\u3002",
        "postTime": 1533215639,
        "uid": 111334,
        "name": "\u706f\u82af\u7cd5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\n**\u8fd9\u9053\u9898\u771f\u7684\u628a\u6211\u6c14\u7684......**\n\n\u4e00\u5f00\u59cb\uff1a\u4e0d\u5c31\u662fBFS\u561b\uff01\n\n\u540e\u6765\uff1a\u600e\u4e480\u5206\uff1f\n\n\u518d\u540e\u6765\uff1aT\u4e863\u4e2a\uff01\n\n\u6700\u540e\uff1a\u8fd8\u662f\u7528\u8bb0\u5fc6\u5316BFS\u5427\uff01\n\n\u5148\u8bb2\u8bb2\u6700\u6c34\u7684\u601d\u8def\uff1a\n\n**\u4e00\u4e2a\u4e00\u4e2a\u683c\u5b50\u5e7f\u641c\uff0c\u5f00\u4e00\u4e2a\u961f\u5217\u8bb0\u5f55\u4e00\u4e9b\u641c\u8fc7\u7684\u5750\u6807\u3002**\n\n\n```cpp\nprocedure bfs(x0,y0:longint);\nvar dl:array[1..100000,1..2] of longint;\n    i,j,x,y,h,t:longint;\nbegin\n  h:=0; t:=1; dl[1,1]:=x0; dl[1,2]:=y0; \n  o:=1;//\u8bb0\u5f55\u53ef\u4ee5\u5230\u51e0\u4e2a\u70b9\uff0c\u522b\u5fd8\u8bb0\u4e86\u81ea\u5df1\uff01\n  for i:=1 to n do for j:=1 to n do hash[i,j]:=false;//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u5426\u8d70\u8fc7\uff0c\u4e0d\u7136\u4f1a\u6b7b\u5faa\u73af+\u7b54\u6848\u9519\u8bef\n  hash[x0,y0]:=true;\nrepeat\n    inc(h);\n    for i:=1 to 4 do\n    begin\n      x:=dx[i]+dl[h,1];  //dx\u3001dy\u8868\u793a\u4e0a\u4e0b\u5de6\u53f3\u7684x\u3001y\u53d8\u5316\u91cf\n      y:=dy[i]+dl[h,2];\n      if (map[x,y]=map[dl[h,1],dl[h,2]]) //\u5982\u679c\u4e0e\u4e4b\u524d\u7684\u6570\u4e00\u6837\uff0c\u4e0d\u53ef\u4ee5\u8d70\uff0c\u9000\u51fa~\n      or (x=0) or (y=0) or (x=n+1) or (y=n+1)\n        or hash[x][y]   //\u5224\u65ad\u8fb9\u754c\u4ee5\u53ca\u662f\u5426\u8d70\u8fc7\n      then continue;\n      inc(t);\n      dl[t,1]:=x; dl[t,2]:=y;\n      hash[x,y]:=true;\n      inc(o);\n    end;\n  until h>=t;\nend;\n```\n\u7136\u540e\u5c31\u534e\u4e3d\u4e3d\u7684T\u4e863\u4e2a\u70b9\u3002\u3002\u3002\n\n\u539f\u6765\u628ahash\u8d4b\u503c\u7684\u65f6\u5019\u592a\u8017\u65f6\u4e86...\n\n\u770b\u6765\u4ee5\u540e\u4e0d\u8981\u4f7f\u7528fillchar(memset)\u4e86\uff0c\u592a\u8d39\u65f6\u95f4\u4e86\n\n\u53ea\u9700\u8981\u5728\u6700\u540e\u7684\u65f6\u5019\u6539\u4e00\u4e0b\u5373\u53ef\n\n\n\nfor i:=1 to h do \n\n    hash[dl[i][1],dl[i][2]]:=false;\n\n\u66f4\u5feb\u66f4\u7701\u65f6\uff01\n\n\u7136\u800c\u53ea\u670980\u5206\uff0c\u8fd8\u6709\u4e24\u4e2aT\uff01\n\n\u5fcd\u65e0\u53ef\u5fcd\u7684\u6211\u53ea\u80fd\u7528\u8bb0\u5fc6\u5316\u4e86\u3002\u3002\u3002\n\n\n\u56e0\u4e3a\u9898\u76ee\u8ba9\u6211\u4eec\u6c42\u53ef\u4ee5\u8df3\u5230\u591a\u5c11\u4e2a\u70b9\uff0c\u6240\u4ee5\u4e00\u6b21BFS\u4e0b\u6765\uff0c\u6240\u6709\u961f\u5217\u4e2d\u7684\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u6570\u90fd\u662f\u6700\u7ec8\u6c42\u51fa\u7684\u7ed3\u679c\uff08\u5373\u4e3ao\uff09\n\n\u90a3\u4e48\u4e00\u6b21BFS\u53ef\u4ee5\u987a\u5e26\u6c42\u51fa\u5f88\u591a\u70b9\u7684\u7b54\u6848\u4e86\u3002\n\n\n```cpp\n for i:=1 to h do begin\n    as[dl[i][1],dl[i][2]]:=false;\n    jiyi[dl[i][1],dl[i][2]]:=o;//\u8bb0\u5fc6\u5316\n  end;\n```\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nconst dx:array[1..4] of longint=(0,1,0,-1);\n      dy:array[1..4] of longint=(-1,0,1,0);\nvar i,j,k,o,p,m,n,b,g,q1,q2:longint;\n    map,jiyi:array[0..1005,0..1005] of longint;\n    s:ansistring;\n    as:array[0..1[001,0..1001] of boolean; \nprocedure bfs(x0,y0:longint); \nvar dl:array[1..200001,1..2] of longint;\n    i,j,x,y,h,t:longint;\nbegin\n  h:=0; t:=1; dl[1,1]:=x0; dl[1,2]:=y0; o:=1;\n  as[x0,y0]:=true;\n  repeat\n    inc(h);\n    for i:=1 to 4 do\n    begin\n      x:=dx[i]+dl[h,1];\n      y:=dy[i]+dl[h,2];\n      if (map[x,y]=map[dl[h,1],dl[h,2]])\n      or (x=0) or (y=0) or (x=n+1) or (y=n+1)\n```\nor as[x][y]\n```cpp\n      then continue;\n      inc(t);\n      dl[t,1]:=x; dl[t,2]:=y;\n      as[x,y]:=true;\n      inc(o);\n    end;\n  until h>=t;\n  for i:=1 to h do begin\n    as[dl[i][1],dl[i][2]]:=false;\n    jiyi[dl[i][1],dl[i][2]]:=o;\n  end;\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do\n    begin\n      readln(s);\n      for j:=1 to length(s) do\n        map[i,j]:=ord(s[j])-48;//\u6ce8\u610f\u4e00\u4e0b\uff0c\u8fd9\u91cc\u9700\u8981\u5b57\u7b26\u4e32\u5904\u7406\uff01\uff01\uff01\n    end;\n  for i:=1 to n do for j:=1 to n do jiyi[i,j]:=-1; \n  for i:=1 to m do\n  begin\n    readln(q1,q2);\n    if jiyi[q1,q2]<>-1 then begin writeln(jiyi[q1,q2]); continue; end;//\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u4e4b\u524d\u5df2\u7ecf\uff08\u987a\u5e26\uff09\u6c42\u8fc7\u4e86\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa\uff01\n    bfs(q1,q2); //\u5e7f\u641c\n    writeln(o); //\u8f93\u51fa\n  end;\nend.\n```",
        "postTime": 1509963587,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u6ee1\u6000\u4fe1\u5fc3\u7528dfs\u5494\u5494\u8fc7\u4e86\u8fd9\u4e2a\u9898\u4e4b\u540e\u4e00\u770b\n\n~~\uff1f\uff1f\u9898\u89e3\u4ee3\u7801\u8fd9\u4e48\u5c11\uff1f\uff1f~~\n\n\u4f46\u662f\uff0c\u6211\u8fd8\u662f\u7528\u4e86\u53e6\u4e00\u4e2a\u65b0\u5947\u7684\u601d\u8def\u7684\u2014\u2014\u8bb0\u5fc6\u5316\u641c\u7d22\u800c\u4e14\u7801\u98ce\u4e5f\u6bd4\u8f83\u597d\u61c2\uff0c\u4e0b\u9762\u662f\u601d\u8def\uff1a\n\n- \u8f93\u5165\u6bcf\u6b21\u8981\u5f00\u59cb\u7684\u70b9\uff0c\u5982\u679c\u6ca1\u6709\u627e\u8fc7\u8fd9\u4e2a\u70b9\u6240\u5728\u7684\u533a\u57df\uff0c\u5c31\u904d\u5386\u4e00\u8fb9\u8fd9\u4e2a\u533a\u57df\uff0c\u7136\u540e\u7528belong\u6570\u7ec4\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u5c5e\u4e8e\u90a3\u4e00\u5757\uff0c\u7528size\u8bb0\u5f55\u8fd9\u4e00\u5757\u7684\u5927\u5c0f\n\n- \u5bf9\u4e8e\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u70b9\uff0c\u5c31\u53ea\u9700\u8981\u8f93\u51fa \u6240\u5728\u533a\u57df\u7684 \u5927\u5c0f\n\nok\u539f\u7406\u5df2\u7ecf\u660e\u767d\uff0c\u7136\u540e\u6ce8\u610f\u6570\u7ec4\u5927\u5c0f\u4e0d\u8981\u5f00\u9519\u5c31\u884c~~\uff08\u6211\u7ecf\u5e38\u88ab\u5927\u5c0f\u5361\u3002\u3002\uff09~~\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int Max=1001;\nbool mmap[Max][Max];\nint n,m,x,y,cnt,a,b,t,d[4][2]={{0,1},{0,-1},{1,0},{-1,0}},vis[Max][Max],belong[Max][Max],size[Max*Max];\nqueue <int> q;\nint dfs(int x,int y,int flag)\n{\n\tint ans=1;\n\tvis[x][y]=1;\n\tfor(int i=0;i<4;i++)\n\t{\n\t\tint xx=x+d[i][0],yy=y+d[i][1];\n\t\tif(xx<1||xx>n||yy<1||yy>n||mmap[xx][yy]==flag)\n\t\tcontinue;\n\t\tif(!vis[xx][yy])\n\t\t{\n\t\t\tbelong[xx][yy]=cnt;\n\t\t\tans+=dfs(xx,yy,!flag);\n\t\t}\n\t}\n\treturn ans;\n}\nint main()\n{\n\tchar ch;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tcin>>ch;\n\t\t\tif(ch=='0')\n\t\t\t{\n\t\t\t\tmmap[i][j]=0;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tmmap[i][j]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(!vis[x][y])\n\t\t{\n\t\t\tcnt++;\n\t\t\tbelong[x][y]=cnt;\n\t\t\tsize[cnt]=dfs(x,y,mmap[x][y]);\n\t\t\tprintf(\"%d\\n\",size[cnt]);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tprintf(\"%d\\n\",size[belong[x][y]]);\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}\n```\n\u7ba1\u7406\u5927\u5927\uff0c\u8f9b\u82e6\u60a8\u4e86(90\u00b0\u97a0\u8eac:\uff09)",
        "postTime": 1573025633,
        "uid": 186194,
        "name": "zhl001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\nusing namespace std;\nint a[1000001],n,m,co=0,sum;\nint dx[4]={-1,1,0,0},dy[4]={0,0,-1,1};\nbool map[1001][1001];\nint flag[1001][1001]={0};\nvoid bfs(int x,int y){\n/*\u5e7f\u641c \u5927\u6982\u5c31\u662f\u641c\u7d22\u5230\u5468\u56f4\u8d70\u4e0d\u52a8\u4e86\u4f4d\u7f6e \n\u7136\u540eflag\u662f\u8bb0\u5f55\u8be5\u70b9\u5c5e\u4e8e\u7b2c\u51e0\u5757\u8fde\u901a\u533a\u57df\uff0c\n\u8fd9\u4e00\u7247\u8fde\u901a\u533a\u57df\u5c5e\u4e8e\u540c\u4e00\u4e2aflag(=co)\n\u800ca[flag]\u5219\u8bb0\u5f55\u8be5\u8fde\u901a\u533a\u57df\u7684\u8fde\u901a\u70b9\u6570\u91cf(sum) \n\u8fd9\u6837\u901a\u8fc7\u70b9\u5750\u6807x,y\u627e\u5230flag \u518d\u627e\u5230a[flag]=sum\u5c31\u662f\u7b54\u6848\n*/\n\tsum++;\n\tfor(int i=0;i<4;++i){\n\t\tint nx=x+dx[i],ny=y+dy[i];\n\t\tif(flag[nx][ny])continue;\n\t\tif(nx>=0&&nx<n&&ny>=0&&ny<n){\n\t\t\t//cout<<\"1.sum=\"<<sum<<\",x=\"<<nx<<\",y=\"<<ny<<\",co=\"<<co<<\",flag=\"<<flag[nx][ny]<<endl;\n\t\t\t//cout<<x<<\" \"<<y<<\" \"<<map[x][y]<<endl;\n\t\t\tif(map[nx][ny]==!map[x][y]){\n\t\t\t    flag[nx][ny]=co;\n\t\t\t\t//cout<<\"2.x=\"<<nx<<\",y=\"<<ny<<\",co=\"<<co<<\",flag=\"<<flag[nx][ny]<<endl;\n\t\t\t\tbfs(nx,ny);\n\t\t\t}\n\t\t}\n\t}\n\t//cout<<\"x=\"<<x<<\",y=\"<<y<<\",flag=\"<<flag[x][y]<<endl;\n}\nint main(){\n\tcin>>n>>m;\n\tchar c;\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=0;j<n;++j){\n\t\t\tcin>>c;\n\t\t\tif(c=='0')map[i][j]=0;\n\t\t\telse map[i][j]=1;\n\t\t}\n\t}\n\tfor(int i=0;i<n;++i){\n\t\tfor(int j=0;j<n;++j){\n\t\t\tif(!flag[i][j]){//\u8be5\u533a\u57df\u4e0e\u4e4b\u524d\u533a\u57df\u4e0d\u8fde\u901a\n\t\t\t\tco++;sum=0;//\u6545\u800cco++ \u6807\u8bc6\u65b0\u533a\u57df\n\t\t\t\t//cout<<\"now,x=\"<<i<<\",y=\"<<j<<endl;\n\t\t\t\t//cout<<\"now,co=\"<<co<<endl;\n\t\t\t\tflag[i][j]=co;\n\t\t\t\t//cout<<\"a new bfs\"<<endl;\n\t\t\t\tbfs(i,j);\n\t\t\t\ta[co]=sum;\n\t\t\t}\n\t\t}\n\t}\n\tint x,y;\n\tfor(int i=0;i<m;++i){\n\t\tcin>>x>>y;\n\t\tcout<<a[flag[x-1][y-1]]<<endl;\n\t}\n}\n```\nemm\u7b2c\u4e00\u6b21\u53d1\u4ee3\u7801\u2026\u89c4\u683c\u5565\u7684\u4e0d\u61c2orz\n\u7528\u7684\u5e7f\u641c\u53ed233\n\u88ab\u5751\u7684\u70b9\u5728\u4e8e\u8f93\u5165\u20260110\u5565\u7684\u5e94\u8be5\u7528char\u5904\u7406\u6bd4\u8f83\u597d\u2026\u5426\u521901=1 10\uff08bool\u4e0b\uff09=1\u2026\u6574\u6574\u627e\u4e86\u534a\u4e2a\u5c0f\u65f6orz\n\u5176\u4ed6\u7684\u5c31\u2026\u5e38\u89c4(?\n\u5e7f\u641c co\u662fcolor\u7f29\u5199\uff0c\u67d3\u623f\u95f4\u90a3\u79cd\u9898\u8fc7\u6765\u7684(\n",
        "postTime": 1567095170,
        "uid": 175904,
        "name": "unauthorized",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u90fd\u8bf4\u8fd9\u9053\u9898\u8981\u7528\u5e76\u67e5\u96c6\uff0c\n\n\u53ef\u770b\u4e86\u534a\u5929\u9898\u89e3\u4e2d\u4e5f\u6ca1\u6709\u5e76\u67e5\u96c6\u3002\n\n\u672c\u849f\u84bb\u5c31\u6765\u4e00\u53d1\u5e76\u67e5\u96c6\u5427\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1005][1005];//\u5b58\u503c \nint e[1005][1005];//\u526f\u56fe\uff0c\u6709\u8bb0\u5f55\u662f\u5426\u8d70\u8fc7\u548c\u8bb0\u5f55\u7236\u4eb2\u503c\u7684\u4f5c\u7528\u3002 \nint fa[1005][1005];//\u5e76\u67e5\u96c6\nint n,m,maxe,xx,yy,ii,jj,i,j,xxx,yyy;\nint x[]={0,1,0,-1};\nint y[]={1,0,-1,0};\nint dfs(int p,int q,int z){//p,q\u8bb0\u5f55\u5f53\u524dx,y\u5750\u6807\uff1bz\u8bb0\u5f55\u662f0\u8fd8\u662f1\uff1b\n\tint ee=1;\n\tfor(int k=0;k<4;k++){//\u56db\u4e2a\u65b9\u5411\n\t  int xk=p+x[k],yk=q+y[k];\n\t  if(a[xk][yk]==(z^1)//\u662f\u5426\u53ef\u4ee5\u8d70\uff1b  \n\t    && (e[fa[xk][yk]/1001][fa[xk][yk]%1001]==-1)yi\n        //\u8fd9\u4e2a\u70b9\u662f\u5426\u5c5e\u4e8e\u5df2\u7ecf\u641c\u8fc7\u7684\u5e76\u67e5\u96c6\uff1b \n\t    && (xk<=n) && (xk>=1) && (yk<=n) && (yk>=1)){//\u8fb9\u754c\uff1b\n\t     fa[xk][yk]=i*1001+j,e[xk][yk]=0;\n\t     ee+=dfs(xk,yk,z^1);}\t\n\t}\n\t  \n    return ee;\n}\nint main(){\n\tmemset(a,-1,sizeof(a));\n\tmemset(e,-1,sizeof(e));\n\tscanf(\"%d%d\",&n,&m);\t\n\tfor(i=1;i<=n;i++)\n      for(j=1;j<=n;j++)\n        scanf(\"%1d\",&a[i][j]),fa[i][j]=1001*i+j;//\u72b6\u6001\u538b\u7f29\uff1b\n    for(i=1;i<=n;i++)\n      for(j=1;j<=n;j++)\n        if(e[fa[i][j]/1001][fa[i][j]%1001]==-1){\n          e[i][j]=0;\n\t\t  e[i][j]=dfs(i,j,a[i][j]);\t\n\t\t  }\n   for(i=1;i<=m;i++){\n      scanf(\"%d%d\",&xx,&yy);\n      xxx=fa[xx][yy]/1001;\n      yyy=fa[xx][yy]%1001;\n\t  printf(\"%d\\n\",e[xxx][yyy]);}//\u8f93\u51fa\u65f6\u522b\u5fd8\u4e86\u8f93\u51fa\u5b83\u7236\u4eb2\u7684\u503c\uff1b\n\treturn 0;\n}\n```\n\u672c\u849f\u84bb\u662f\u628a\u4e00\u6b21\u641c\u7d22\u8fc7\u7684\u8282\u70b9\u5f53\u6210\u4e00\u4e2a\u5e76\u67e5\u96c6\uff1b\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7f29\u77ed\u56e0\u91cd\u590d\u641c\u7d22\uff0c\u8d4b\u503c\u800ct;\n\n\u901f\u5ea6\u8fd8\u53ef\u4ee5\uff1b\n\n\u4e0d\u5f53\u4e4b\u5904\uff0c\u8bf7\u5de8\u4f6c\u6307\u51fa\uff1b",
        "postTime": 1566773865,
        "uid": 164688,
        "name": "spsp23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "# 01\u8ff7\u5bab-\u6df1\u641c\n~~\u7b2c\u4e00\u6b21\u5728\u6d1b\u8c37\u53d1\u9898\u89e3\uff0c\u83dc~~\n\n------------\n\n\u9996\u5148\u8fd9\u9053\u9898\u662f\u6c42\u6700\u591a\u901a\u8fc7\u7684\u65b9\u683c\u6570\uff0c\u5f88\u660e\u663e\uff0c\u6c42\u7684\u662f\u8fde\u901a\u533a\u57df\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7dfs\u641c\u7d22\u4ed6\u6240\u9700\u70b9\u7684\u8054\u901a\u533a\u5e76\u4e14\u5bf9\u6240\u6709\u8054\u901a\u533a\u57df\u7528flag\u6807\u8bb0\uff0c\u5bf9r[flag]\u8fdb\u884c++\u64cd\u4f5c\uff0c\u5e76\u4e14\u6bcf\u6b21dfs\u4e4b\u524d\u5bf9flag\u8fdb\u884c\u66f4\u65b0~~~\n\n\n------------\n**dfs\u90e8\u5206\u4ee3\u7801**\n```cpp\nll dfs(ll m,ll n)\n{\n    for(ll i=0;i<4;i++)\n    {\n        if(m+z[i]>=1&&m+z[i]<=a&&n+y[i]>=1&&n+y[i]<=a&&q[m+z[i]][n+y[i]]==0&&p[m+z[i]][n+y[i]]!=p[m][n])//\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8d70\n        {\n            q[m+z[i]][n+y[i]]=flag;\n            r[flag]++;\n            dfs(m+z[i],n+y[i]);\n        }\n    }\n}\n```\n\u5bf9\u4e8e\u6240\u6709\u8981\u6c42\u7684\u8bdd\u53ef\u4ee5\u5206\u4e3a\u4e24\u6b65\uff0c\u68c0\u67e5\u4ed6\u662f\u5426\u5728\u5df2\u5b58\u5728\u7684\u8054\u901a\u533a\u57df\u4e2d\n**\u4ee3\u7801**\n```cpp\n for(c=1;c<=b;c++)\n    {\n        scanf(\"%lld %lld\",&m,&n);\n        if(q[m][n])//\u5047\u5982\u6807\u8bb0\u4e86\u5c31\u76f4\u63a5\u8f93\u51fa\n        {\n            printf(\"%lld\\n\",r[q[m][n]]+1);\n        }\n        else{\n                flag++;//\u8bb0\u4f4f\u8054\u901a\u533a\u57df\u6807\u8bb0\nq[m][n]=flag;\n        dfs(m,n);\n        printf(\"%lld\\n\",r[flag]+1);\n\n        }\n    }\n\n```\n\n\n**\u6700\u540e\u9644\u4e0a\u6240\u6709\u4ee3\u7801**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll q[1010][1010],r[10000010];\nchar p[1010][1010];\nll flag=0;\nll z[4]={0,0,1,-1};\nll y[4]={1,-1,0,0};\nll a;\nll dfs(ll m,ll n)\n{\n    for(ll i=0;i<4;i++)\n    {\n        if(m+z[i]>=1&&m+z[i]<=a&&n+y[i]>=1&&n+y[i]<=a&&q[m+z[i]][n+y[i]]==0&&p[m+z[i]][n+y[i]]!=p[m][n])\n        {\n            q[m+z[i]][n+y[i]]=flag;\n            r[flag]++;\n            dfs(m+z[i],n+y[i]);\n        }\n    }\n}\nint main()\n{\n    ll b,c,d,m,n;\n    cin>>a>>b;\n    getchar();\n    for(c=1;c<=a;c++)\n    {\n       scanf(\"%s\",p[c]+1);\n    }\n    for(c=1;c<=b;c++)\n    {\n        scanf(\"%lld %lld\",&m,&n);\n        if(q[m][n])\n        {\n            printf(\"%lld\\n\",r[q[m][n]]+1);\n        }\n        else{\n           flag++;\n           q[m][n]=flag;\n        dfs(m,n);\n        printf(\"%lld\\n\",r[flag]+1);\n        }\n    }\n}\n\n```\n   **by shncg**                       ",
        "postTime": 1566361807,
        "uid": 196684,
        "name": "cghsncg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "~~\u88f8\u7684\u56fe\u8bba\u9898~~\n\n### \u9898\u610f\uff1an*n01\u77e9\u9635\uff0c\u4e0a\u4e0b\u5de6\u53f30->1 1->0 m\u6b21\u8be2\u95ee\u6c42(x,y)\u6240\u5728\u7684\u8fde\u901a\u5757\u70b9\u6570\n\n\u8fde\u901a\u5757\u5c31\u7528tarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u89e3\u51b3\u597d\u4e86\n\n\u70b9(x,y)\u8f6c\u5316\u4e3a\u7f16\u53f7(x-1)*n+y\uff0c\u4e8c\u7ef4\u8f6c\u4e00\u7ef4\n\nscc[x]\u8868\u793a\u7f16\u53f7\u4e3ax\u7684\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7f16\u53f7\n\nsize[c]\u8868\u793a\u7f16\u53f7\u4e3ac\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\n\n\u7136\u540e\u5957\u6a21\u677f\u5c31\u597d\u4e86\uff0c\u6bcf\u6b21\u8be2\u95ee\u8f93\u51fasize\u5373\u53ef\n\n\u5efa\u8fb9\u590d\u6742\u5ea6O(4*n\u00b2)\uff0ctarjan\u590d\u6742\u5ea6O(5n\u00b2)\uff0c\u8be2\u95ee\u590d\u6742\u5ea6O(m)\n```cpp\n#include<stack>\n#include<cstdio>\n#include<utility>\n#include<algorithm>\n#define id(x,y) (x-1)*n+y //\u4e8c\u7ef4\u5750\u6807\u8f6c\u4e00\u7ef4\u7f16\u53f7\n#define exist(x,y) x&&x<=n&&y&&y<=n //\u5224\u65ad\u8d8a\u754c\nusing namespace std;\nconst int N=1e3+10,S=N*N;\nconst short fx[4]={-1,1,0,0},fy[4]={0,0,-1,1};\nint n,m;\nchar map[N][N];\nint head[S],cnt;\npair<int,int>e[S<<2]; //\u6bcf\u4e2a\u70b9\u6700\u591a\u80fd\u5f80\u4e0a\u4e0b\u5de6\u53f3\u5efa\u56db\u6761\u8fb9\uff0c\u8fb9\u7684\u6570\u7ec4\u8981\u5f004n\u00b2\ninline const void addedge(int u,int v)\n{\n\te[++cnt]=make_pair(v,head[u]);\n\thead[u]=cnt;\n}\nstack<int>s;\nint dfn[S],low[S],scc[S],size[S],tot;\ninline const void tarjan(int u)\n{\n\tint v;low[u]=dfn[u]=++cnt;s.push(u);\n\tfor (int i=head[u];i;i=e[i].second)\n\t\tif (!dfn[v=e[i].first])tarjan(v),low[u]=min(low[u],low[v]);\n\t\telse if (!scc[v])low[u]=min(low[u],dfn[v]);\n\tif (low[u]!=dfn[u])return;tot++;\n\tdo v=s.top(),s.pop(),size[scc[v]=tot]++;while (u^v);\n}\ninline const void tarjan()\n{\n\tcnt=0;\n\tfor (int i=1;i<=n*n;i++)\n\t\tif (!dfn[i])\n\t\t\ttarjan(i);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tscanf(\" %c\",&map[i][j]);\n\tint x,y;\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tfor (int k=0;k<4;k++)\n\t\t\t\tif (x=i+fx[k],y=j+fy[k],exist(x,y)&&map[i][j]^map[x][y])\n\t\t\t\t\taddedge(id(i,j),id(x,y));\n\ttarjan();\n\twhile (m--)\n\t\tscanf(\"%d%d\",&x,&y),\n\t\tprintf(\"%d\\n\",size[scc[id(x,y)]]);\n\treturn 0;\n}\n```",
        "postTime": 1547981256,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u849f\u84bb\uff0c\u8fd9\u905301\u8ff7\u5bab\u771f\u7684\u662f\u6253\u5f97\u6211\u5feb\u6b7b\u3002\u4e0d\u8fc7\u603b\u7b97\u662f\u505a\u51fa\u6765\u4e86\uff0c\u4e8e\u662f\u6211\u51b3\u5b9a\u53d1\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\uff08\u6492\u82b1~\uff09\n## \u601d\u8def\n\u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u601d\u8def\u5e76\u4e0d\u4f1a\u5f88\u96be\uff0c\u4f46\u662f\u4ee3\u7801\u5b9e\u73b0\u8d77\u6765\u6781\u5176\u9ebb\u70e6\uff08\u81f3\u5c11\u5bf9\u4e8e\u6211\u8fd9\u79cd\u849f\u84bb\u6765\u8bf4\uff09\u3002\n\u6211\u4e00\u5f00\u59cb\u76f4\u63a5\u9488\u5bf9\u6bcf\u4e00\u6b21\u67e5\u8be2\u8fdb\u884c\u4e00\u6b21\u5e7f\u641c\uff0c\u6beb\u65e0\u610f\u5916\uff0c\u76f4\u63a5\u5d29\u6389QAQ\uff0c\u4e8e\u662f\u6211\u5c31\u7a0d\u5fae\u60f3\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u683c\u5b50s1\uff0c\u5982\u679c\u4eces1\u51fa\u53d1\uff0c\u80fd\u591f\u5230\u8fbe\u53e6\u5916\u4e00\u4e2a\u683c\u5b50s2\uff0c\u90a3\u4e48\u4eces2\u51fa\u53d1\uff0c\u4e5f\u4e00\u5b9a\u80fd\u5230\u8fbes1\uff0c\u540c\u7406\u53ef\u5f97\uff0c\u4eces1\u51fa\u53d1\u80fd\u591f\u5230\u8fbe\u7684\u6240\u6709\u70b9\uff0c\u4eces2\u4e5f\u80fd\u591f\u5230\u8fbe\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u975e\u5e38\u6e05\u6670\u4e86\u3002\n\n\u5b9a\u4e49\u67e5\u8be2quiry:=dfs(x, y)\uff0cdfs(x, y)\u7528\u4e8e\u67e5\u8be2\u4ece\u5750\u6807\u4e3a(x, y)\u7684\u683c\u5b50\u51fa\u53d1\uff0c\u80fd\u5230\u8fbe\u591a\u5c11\u4e2a\u683c\u5b50\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u961f\u5217q\u7528\u4e8e\u5b58\u653e\u6240\u6709\u7684\u67e5\u8be2\uff0c\u7136\u540e\u5728\u6bcf\u6b21\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u4e00\u4e2a\u67e5\u8be2(x0, y0)\uff0c\u5224\u65ad\u8be5\u67e5\u8be2\u662f\u5426\u5df2\u7ecf\u6709\u7b54\u6848\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u8fdb\u884c\u4e00\u6b21\u5e7f\u641c\uff0c\u5e7f\u641c\u8fc7\u7a0b\u4e2d\u5982\u679c\u5230\u8fbe\u4e00\u4e2a\u540c\u6837\u5728\u67e5\u8be2\u961f\u5217\u4e2d\u7684\u683c\u5b50\uff0c\u90a3\u4e48\u5c06\u5176\u5b58\u5165\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\u3002\u5e7f\u641c\u5b8c\u6bd5\u540e\uff0c\u5c06\u4e34\u65f6\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u67e5\u8be2\u7684\u7b54\u6848\u90fd\u8bbe\u7f6e\u4e3adfs(x0, y0)\uff0c\u5e76\u628a\u8fd9\u4e9b\u67e5\u8be2\u5168\u90e8\u505a\u4e00\u6b21\u6807\u8bb0\uff0c\u8868\u660e\u5b83\u4eec\u5df2\u7ecf\u6709\u4e86\u7b54\u6848\u3002\n\n## \u4e00\u70b9\u5c0f\u5c0f\u7684\u4f18\u5316\n\u4e00\u5f00\u59cb\u6211\u867d\u7136\u6709\u4e86\u601d\u8def\uff0c\u4f46\u662f\u8fd8\u662f\u4e0d\u77e5\u9053\u4ee3\u7801\u5e94\u8be5\u600e\u4e48\u5199\uff08\u6bd5\u7adf\u662f\u4e2a\u849f\u84bbQAQ\uff09\uff0c\u60f3\u4e86\u5f88\u4e45\u624d\u60f3\u51fa\u6765\u3002\u4e3a\u4e86\u5404\u4f4d\u4e0d\u8981\u6389\u5751\u91cc\uff0c\u4e8e\u662f\u6211\u628a\u51e0\u4e2a\u53ef\u4ee5\u4f18\u5316\u7684\u70b9\u4e5f\u8bf4\u51fa\u6765\u5427\n\n1\u3001\u6bcf\u6b21\u5e7f\u641c\u5b8c\u4e4b\u540e\uff0c\u4e0d\u9700\u8981\u590d\u539f\u5730\u56fe\uff0c\u56e0\u4e3a\u4e0b\u4e00\u6b21\u5e7f\u641c\u4e00\u5b9a\u4e0d\u4f1a\u5230\u8fbe\u8fd9\u6b21\u5e7f\u641c\u80fd\u641c\u5230\u7684\u683c\u5b50\u3002\n\n2\u3001\u628a\u7b54\u6848\u5b58\u5728\u5730\u56fe\u4e0a\uff08\u76f8\u4fe1\u6211\uff0c\u8fd9\u4f1a\u7701\u6389\u4f60\u4e00\u5927\u5806\u65f6\u95f4\uff09\n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint q[100001][2], map[1001][1001][3], qi[1000001][2];\nint qr=1, n, m, temp1 = 1, value1;\nint jg[100001][2];\nchar temp[1001];\n\nint gs(int i, int j){\n    int front = 1, rear = 2, k[2], value;\n    qi[1][0] = i;\n    qi[1][1] = j;\n    jg[temp1][0] = i;\n    jg[temp1++][1] = j;\n    \n    while(front < rear){\n        k[0] = qi[front][0];\n        k[1] = qi[front++][1];\n        map[k[0]][k[1]][1] = 2; \n        value = map[k[0]][k[1]][0];\n        if(map[k[0]][k[1]+1][0] != value && map[k[0]][k[1]+1][1] != 2 && k[1]+1 <= n && k[1]+1 > 0){\n            qi[rear][0] = k[0];\n            qi[rear++][1] = k[1]+1;\n            if(map[k[0]][k[1]+1][1] == 1){\n                jg[temp1][0] = k[0];\n                jg[temp1++][1] = k[1]+1;\n            }\n            map[k[0]][k[1]+1][1] = 2;\n        }\n        if(map[k[0]][k[1]-1][0] != value && map[k[0]][k[1]-1][1] != 2 && k[1]-1 <= n && k[1]-1 > 0){\n            qi[rear][0] = k[0];\n            qi[rear++][1] = k[1]-1;\n            if(map[k[0]][k[1]-1][1] == 1){\n                jg[temp1][0] = k[0];\n                jg[temp1++][1] = k[1]-1;\n            }\n            map[k[0]][k[1]-1][1] = 2;\n        }\n        if(map[k[0]-1][k[1]][0] != value && map[k[0]-1][k[1]][1] != 2 && k[0]-1 <= n && k[0]-1 > 0){\n            qi[rear][0] = k[0]-1;\n            qi[rear++][1] = k[1];\n            if(map[k[0]-1][k[1]][1] == 1){\n                jg[temp1][0] = k[0]-1;\n                jg[temp1++][1] = k[1];\n            }\n            map[k[0]-1][k[1]][1] = 2;\n        }\n        if(map[k[0]+1][k[1]][0] != value && map[k[0]+1][k[1]][1] != 2 && k[0]+1 <= n && k[0]+1 > 0){\n            qi[rear][0] = k[0]+1;\n            qi[rear++][1] = k[1];\n            if(map[k[0]+1][k[1]][1] == 1){\n                jg[temp1][0] = k[0]+1;\n                jg[temp1++][1] = k[1];\n            }\n            map[k[0]+1][k[1]][1] = 2;\n        }\n        \n    }\n    return front-1;\n}\n\nint main(){\n    cin >> n >> m;\n    for(int i = 1; i <= n; i++){\n        cin >> temp;\n        for(int j = 1; j <= n; j++) map[i][j][0] = (int)(temp[j-1] - '0');\n        for(int j = 0; j < n; j++) temp[j] = ' ';\n    }\n    for(int i = 1; i <= m; i++) cin >> q[i][0] >> q[i][1];\n    for(int i = 1; i <= m; i++) map[q[i][0]][q[i][1]][1] = 1;\n\n    while(qr <= m){\n        if(map[q[qr][0]][q[qr][1]][2] != 0){qr++;continue;}\n        value1 = gs(q[qr][0], q[qr][1]);\n        for(int i = 1; i < temp1; i++){\n            map[jg[i][0]][jg[i][1]][2] = value1;\n        }\n        qr++;\n        temp1 = 1;\n    }\n    for(int i = 1; i <= m; i++){\n        cout << map[q[i][0]][q[i][1]][2] << endl;\n    }\n    return 0;\n}\n```\n\u61d2\u5f97\u5199\u6ce8\u91ca\uff0c\u5c06\u5c31\u7740\u770b\u4e00\u4e0b\u5427QAQ",
        "postTime": 1547706110,
        "uid": 131489,
        "name": "CodinPnda",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u5404\u4f4d\u849f\u84bb\u662f\u4e0d\u662f\u548c\u6211\u4e00\u6837\uff0c\u559c\u6b22\u770b\u77ed\u7684\u7b54\u6848\uff01\uff01\n\n- \u7528string\u8bfb\u516501\u77e9\u9635\uff1b\n- bfs\u4e2d\u5e38\u7528vis\u77e9\u9635\uff0c\u66f4\u6539\u4e3a\u8054\u901a\u5757s\u77e9\u9635\uff0c\u5f53i=0\u65f6\uff0c\u672a\u88ab\u641c\u7d22\u8fc7\uff0c\u5f53i>0\u65f6\u5bf9\u5e94\u7b2ci\u6b21\u8be2\u95ee\u627e\u5230\u7684\u70b9\uff0carr\u5bf9\u5e94\u7b2ci\u6b21\u8be2\u95ee\u8fd4\u56de\u503c\uff0c\u6bcf\u641c\u5230\u65b0\u7684\u70b9\u586b\u5165\u5bf9\u5e94\u6b21\u6570i\uff1b\n- \u5f53\u8be2\u95ee\u7684\u70b9\u5df2\u7ecf\u88ab\u641c\u8fc7\uff0c\u5219\u76f4\u63a5\u8fd4\u56dearr[\u7b2c\u51e0\u6b21\u641c\u5230\u7684\u70b9]\u7684\u503c\uff1b\n- \u7528bfs\u65f6\uff0c\u6ce8\u610f\u6570\u5217\u5143\u7d20\u6570\u91cf\u53ef\u80fd\u8d85\u8fc7\u6574\u4e2a\u77e9\u9635\u70b9\u7684\u6570\u91cf\uff0c\u8bbe\u7f6e\u6210400005\uff0c\u56db\u500d\u70b9\u6570\u91cf\u3002\n\n------------\n**\u4e0b\u9762\u9644\u4e0aAC\u4ee3\u7801(\u7a0d\u5fae\u538b\u4e86\u4e0b\u884c\uff0c40\u884c)**\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,i,j,x,y,frot,rear;\nbool a[1005][1005];\nint b[400005][2],arr[400005],s[1005][1005];\nint main()\n{\n    scanf(\"%d %d\\n\",&n,&m);\n    string s0;\n    for(i=1; i<=n; i++){\n        getline(cin,s0);\n        for(j=0;j<n;j++)\n            a[i][j+1] = s0[j]-'0';\n    }\n    for(i=1; i<=m; i++){\n        scanf(\"%d %d\\n\",&x,&y);\n        if(s[x][y]!=0) {arr[i] = arr[s[x][y]];continue;}\n        b[0][0] = x,b[0][1] = y;\n        s[x][y]=i;\n        frot = 0,rear = 1;\n        int xx,yy;\n        while(rear - frot > 0){\n            xx = b[frot][0],yy = b[frot][1];\n            if(a[xx][yy] != a[xx][yy+1] && yy+1<=n && s[xx][yy+1]==0)\n                {b[rear][0]=xx,b[rear++][1]=yy+1;s[xx][yy+1]=i;}\n            if(a[xx][yy] != a[xx][yy-1] && yy-1>0 && s[xx][yy-1]==0)\n                {b[rear][0]=xx,b[rear++][1]=yy-1;s[xx][yy-1]=i;}\n            if(a[xx][yy] != a[xx-1][yy] && xx-1>0 && s[xx-1][yy]==0)\n                {b[rear][0]=xx-1,b[rear++][1]=yy;s[xx-1][yy]=i;}\n            if(a[xx][yy] != a[xx+1][yy] && xx+1<=n && s[xx+1][yy]==0)\n                {b[rear][0]=xx+1,b[rear++][1]=yy;s[xx+1][yy]=i;}\n            frot++;\n        }\n        arr[i]=rear;\n    }\n    for(i=1;i<=m;i++)\n        cout << arr[i] << endl;\n    return 0;\n}\n```",
        "postTime": 1544420130,
        "uid": 104299,
        "name": "hawkii",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\n\u6709\u4e00\u4e2a\u4ec5\u7531\u6570\u5b570\u4e0e1\u7ec4\u6210\u7684n\u00d7n\u683c\u8ff7\u5bab\u3002\u82e5\u4f60\u4f4d\u4e8e\u4e00\u683c0\u4e0a\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u79fb\u52a8\u5230\u76f8\u90bb4\u683c\u4e2d\u7684\u67d0\u4e00\u683c11\u4e0a\uff0c\u540c\u6837\u82e5\u4f60\u4f4d\u4e8e\u4e00\u683c1\u4e0a\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u79fb\u52a8\u5230\u76f8\u90bb4\u683c\u4e2d\u7684\u67d0\u4e00\u683c0\u4e0a\u3002\n\n\u4f60\u7684\u4efb\u52a1\u662f\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8ff7\u5bab\uff0c\u8be2\u95ee\u4ece\u67d0\u4e00\u683c\u5f00\u59cb\u80fd\u79fb\u52a8\u5230\u591a\u5c11\u4e2a\u683c\u5b50\uff08\u5305\u542b\u81ea\u8eab\uff09\u3002\n\n[\u6b64\u5904\u9898\u9762\u94fe\u63a5](https://www.luogu.org/problem/show?pid=P1141)\n\n## \u601d\u8def\n\n\u663e\u7136\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u56fe\u6c42\u8054\u901a\u5757\u5927\u5c0f\uff0c\u7528DFS\u6216\u5e76\u67e5\u96c6\u53ef\u8fc7\u3002\n\n+ DFS+\u8bb0\u5fc6\u5316\n  \n    \u8fd9\u79cd\u505a\u6cd5\u8981\u6c42\u8be2\u95ee\u65f6\u8fdb\u884cDFS\uff0c\u6709\u70b9\u60f0\u6027\u6c42\u503c\u7684\u610f\u601d\uff0c\u7136\u800c\u6211\u4e0d\u60f3\u5199\u3002\u3002\u3002\n\n+ \u5e76\u67e5\u96c6\n\n    \u4e24\u6b21\u9884\u5904\u7406\uff0c\u5206\u522b\u5bf9\u6a2a\u5411\u548c\u7ad6\u5411\u8fdb\u884cunion\u64cd\u4f5c\u3002\n\n    \u5728\u9884\u5904\u7406\u65f6\uff0c\u6bcf\u6b21\u67e5\u6839\u7684\u65f6\u95f4\u8fd1\u4f3cO(1)\u3002\n\n    \u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\u3002\n\n    \u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\uff0c\u6d88\u8017\u65f6\u95f4\u8fd1\u4f3cO(1)\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6O(m)\u3002\n\n    \u4f30\u6d4b\u4e00\u4e0b\uff0c\u603b\u65f6\u95f4\u5927\u7ea6\u662f 2 * (1e3) ^ 2 + 1e5\uff0c\u53731e6\u7684\u6570\u91cf\u7ea7\uff0c\u53ef\u884c\u3002\n\n## AC\u4ee3\u7801\n\n```C++\n#include <iostream>\nusing namespace std;\n\n#define rep(i, s, e) for (i = s; i < e; ++i)\nconst int N = 1000 + 2;\n\nstruct Set {\n    Set *root;\n    int num;\n    char value;\n} maze[N][N];\n\nSet *root(Set *p) {\n    if (p->root == p)\n        return p;\n    Set *r = p->root;\n    if (r->root == r)\n        return r;\n    return p->root = root(r);\n}\n\nvoid merge(Set *r1, Set *r2) {\n    if (r1 == r2)\n        return;\n    r2->root = r1;\n    r1->num += r2->num;\n}\n\nint n;\n\nvoid init() {\n    int i, j;\n    Set *p;\n\n    rep(i, 0, n) {\n        rep(j, 0, n) {\n            p = &maze[i][j];\n            cin >> p->value;\n            p->root = p;\n            p->num = 1;\n        }\n    }\n\n    Set *pu, *pl;\n\n    rep(i, 1, n) {\n        rep(j, 0, n) {\n            pu = &maze[i - 1][j];\n            p = &maze[i][j];\n            if (pu->value != p->value) {\n                merge(root(pu), root(p));\n            }\n        }\n    }\n\n    rep(i, 0, n) {\n        rep(j, 1, n) {\n            pl = &maze[i][j - 1];\n            p = &maze[i][j];\n            if (pl->value != p->value) {\n                merge(root(pl), root(p));\n            }\n        }\n    }\n}\n\nint main() {\n    // ios::sync_with_stdio(false);\n    int m, i, j;\n    cin >> n >> m;\n\n    init();\n\n    // rep(i, 0, n) {\n    //     rep(j, 0, n) { cout << maze[i][j].num << ' '; }\n    //     cout << endl;\n    // }\n\n    while (m--) {\n        cin >> i >> j;\n        cout << root(&maze[i - 1][j - 1])->num << endl;\n    }\n    return 0;\n}\n\n```\n\n## \u7ec6\u8282\n\n\u67e5\u8be2\u4e2d\u8f93\u5165\u7684i,j\u4e0d\u662f\u6570\u7ec4\u4e0b\u6807\uff0c\u9700\u8981-1.\n\n\u7528getchar\u548cputchar\u4f1a\u8c1c\u4e4bRE\uff0c\u6211\u9009\u62e9\u6b7b\u4ea1\u3002\n\n\u6ca1\u5173\u6807\u51c6\u6d41\u540c\u6b65\u4e0d\u4f1aTLE\u3002\n\n\u4e0d\u8981\u5fd8\u8bb0\u6ce8\u91ca\u6389\u8c03\u8bd5\u4ee3\u7801\u3002\u3002\u3002",
        "postTime": 1540882239,
        "uid": 146755,
        "name": "Nugine",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37P1141 01\u8ff7\u5bab"
    },
    {
        "content": "\u6211\u5c31\u5f88\u7eb3\u95f7\uff0c\u4e3a\u4ec0\u4e48\u6807\u7b7e\u660e\u660e\u662f**DFS**\u5374\u5728\u8bd5\u70bc\u573a\u91cc\u9762\u653e\u5230\u4e86**\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22**\u603b\u4e4b\uff0c\u7528DFS\u603b\u662f\u6ca1\u95ee\u9898\u7684\u3002  \n\n---\n\u4e3b\u8981\u7528\u7684\u601d\u8def\u5c31\u662f\n1. \u8f93\u5165\uff08\u5176\u5b9e\u4ee3\u7801\u4e2d\u7684int\u53ef\u4ee5\u6539\u4e3abool\uff09\n2. \u751f\u6210\u5168\u5bf9\u7684\u6bd4\u5bf9\u6570\u7ec4\uff08\u5bf9\u7167\u7ec4\uff09\u597d\u597d\u914d\u5408\u7a0b\u5e8f\uff0c\u7406\u89e3\u7406\u89e3\n3. \u6df1\u641c\uff08\u56db\u4e2a\u65b9\u5411\u90fd\u641c\u4e00\u6b21\uff0c\u540c\u65f6\u8fd8\u8981\u6ee1\u8db3\u4f600\u548c1\uff09\n4. \u8f93\u51fa  \n\n\u6ca1\u9519\uff0c\u5c31\u662f\u8fd9\u4e48\u7684\u7b80\u5355\u3002\u534a\u70b9\u4f18\u5316\u90fd\u4e0d\u8981\u5c31\u53ef\u4ee5AC\u3002  \n~~\u9999\u55b7\u55b7\u7684~~\u4ee3\u7801\u5448\u4e0a\n\n---\n```cpp\n//LuoGu 1141\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\nusing namespace std;\nint map[1001][1001], m, n, _1_map [1001][1001], _2_map [1001][1001], cur_p = 2, x, y, c__1_map[1001][1001], c__2_map[1001][1001],sum;\nvector<int> value;\nchar in[1001];\nint DFS(int _x, int _y, int mode)//\u5982\u679cmode == 1\uff0c\u5c31\u8bf4\u660e\u4f60\u8981\u632a\u5230\u4e00\u4e2a\u6570\u5b57\u4e3a1\u7684\u65b9\u683c\u4e0a\u9762\uff0c\u53cd\u4e4b\u540c\u7406\n{\n    if (_x >= 0 && _y >= 0 && _x < n && _y < n)//\u8fb9\u754c\n    {\n        if (mode == 1)//\u5224\u65ad\u6570\u5b57\u4e86\u5475\uff08\u6572\u9ed1\u677f\uff09\n        {\n            if (_1_map[_x][_y] == 0)\n            {\n                return sum;\n            }\n            else if (_1_map[_x][_y] == 1)\n            {\n                _1_map[_x][_y] = cur_p;//\u56db\u5468DFS\n                DFS(_x + 1, _y, 1);\n                DFS(_x - 1, _y, 1);\n                DFS(_x, _y + 1, 1);\n                DFS(_x, _y - 1, 1);\n                sum++;\n                return sum;\n            }\n            else\n            {\n                return sum;\n            }\n        }\n        else if (mode == 2)//\u540c\u4e0a\n        {\n            if (_2_map[_x][_y] == 0)\n            {\n                return sum;\n            }\n            else if (_2_map[_x][_y] == 1)\n            {\n                _2_map[_x][_y] = cur_p;\n                DFS(_x + 1, _y, 2);\n                DFS(_x - 1, _y, 2);\n                DFS(_x, _y + 1, 2);\n                DFS(_x, _y - 1, 2);\n                sum++;\n                return sum;\n            }\n            else\n            {\n                return sum;\n            }\n        }\n        else \n        {\n            return sum;\n        }\n    }\n    else \n    {\n        return sum;//\u4ee5\u514d\u4e07\u4e00\uff0c\u5176\u5b9e\u6ca1\u6709\u5565\u4e8b\u90fd\u4e0d\u4f1a\u53d1\u751f\n    }\n}\nint main()\n{\n    value.push_back(-1);//\u4ece1\u5f00\u59cb\u662f\u4e2a\u597d\u4e60\u60ef\n    value.push_back(-1);\n    cin >> n >> m;\n    for (int i = 0; i < n; i++)\n    {\n        cin >> in;\n        for (int j = 0; j < n; j++)\n        {\n            map[i][j] = in[j] - '0';\n        }\n    }\n    for (int i = 0; i < n; i++)//\u751f\u6210\u5168\u5bf9\u7684\u4e24\u79cd\u53ef\u80fd\u7684\u6837\u4f8b\uff0c\u76f4\u63a5\u6765\u8fdb\u884c\u5bf9\u6bd4\u5c31\u597d\u4e86(\u6572\u9ed1\u677f\uff0c\u5168\u7a0b\u5e8f\u7684\u7cbe\u9ad3\uff09\u8be5\u8bb0\u5f97\u8bb0\u4e00\u8bb0\u554a\uff5e\uff5e\n    {\n        for (int j = 0; j < n; j++)\n        {\n            if (map[i][j] == (i + j) % 2)\n            {\n                _1_map[i][j] = true;\n                _2_map[i][j] = false;\n            }\n            else \n            {\n                _1_map[i][j] = false;\n                _2_map[i][j] = true;\n            }\n        }\n    }\n    memcpy(c__1_map, _1_map, n * 1001 * 4);//copy * 1\n    memcpy(c__2_map, _2_map, n * 1001 * 4);//copy * 2\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n; j++)\n        {\n            sum = 0;\n            if (_1_map[i][j] == 1)\n            {\n                value.push_back(DFS(i, j, 1));//\u76f4\u63a5\u8bb0\u503c\n                cur_p++;\n            }\n            else if (_2_map[i][j] == 1)\n            {\n                value.push_back(DFS(i, j, 2));//\u76f4\u63a5\u8bb0\u503c\n                cur_p++;\n            }\n        }\n    }\n    for (int i = 0; i < m; i++)//\u8f93\u51fa\u5373\u53ef\n    {\n        cin >> x >> y;\n        if (_1_map[x - 1][y - 1] >= 2)\n        {\n            cout << value[_1_map[x - 1][y - 1]] << endl;\n        }\n        else if (_2_map[x - 1][y - 1] >= 2)\n        {\n            cout << value[_2_map[x - 1][y - 1]] << endl;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1533704699,
        "uid": 73428,
        "name": "AllenChuQAQ",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "**\u3010\u5410\u69fd\u3011**\n------------\n\n\u672c\u849f\u84bb\u89c9\u5f97\u8fd9\u9898\u5e94\u8be5BFS\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fc7\u4e86\u5427...\n\n\u611f\u89c9\u9898\u89e3\u533a\u7684\u5176\u4ed6\u4eba\u90fd\u662f\u5927\u7287\uff0c\u6211\u90fd\u6839\u672c\u6ca1\u60f3\u5230\u90a3\u4e48\u591a...\n\n------\n\n**\u3010\u5206\u6790\u3011**\n-----------\n\n\u9898\u76ee\u4e2d\u5f88\u663e\u7136n\u7684\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u800cm\u7684\u8303\u56f4\u6bd4\u8f83\u5927\u3002\u6240\u4ee5\u4e0d\u53ef\u80fd\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u90fd\u8fdb\u884c\u67e5\u8be2\uff0c\u53ea\u5f97\u4e00\u5f00\u59cb\u5c31\u7b97\u597d\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u3002(\u5982\u679c\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\u90fd\u8fdb\u884c\u4e00\u6b21\u8ba1\u7b97\uff0c\u8ba1\u7b97\u65f6\u95f4\u4e3aO(n^2)\uff0c\u603b\u65f6\u95f4\u4e3aO(m*n^2)\uff0c\u7edd\u5bf9\u70b8)\n\n\u4e8e\u662f\u4e00\u5b9a\u5728\u67e5\u8be2\u524d\u5c31\u5f97\u8ba1\u7b97\u597d\uff0c\u7136\u540e\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u63a5\u7740\uff0c\u6211\u4eec\u5206\u6790\u6bcf\u6b65\u6700\u591a\u79fb\u52a8\u591a\u5c11\u4e2a\u4f4d\u7f6e:\n\n\u5982\u679c\u5b58\u5728\u70b9P\u3001Q\u3001R\uff0cP\u3001Q\u76f8\u8fde\uff0cQ\u3001R\u76f8\u8fde\uff0cP^Q==1\uff0cQ^R==1\uff0c\u5219\u4e09\u4e2a\u5757\u7684\u6b65\u6570\u90fd\u662f3(\u6682\u4e0d\u8003\u8651\u5176\u4ed6\u70b9)\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4ece\u4efb\u610f\u4e00\u70b9P\u5f00\u59cb\uff0c\u5219\u6240\u6709\u4e0eP\u76f8\u90bb\u7684\u3001\u503c\u5f02\u6216\u7684\u70b9\u6700\u540e\u80fd\u8fbe\u5230\u7684\u6b65\u6570\u90fd\u662f\u4e00\u6837\u7684\u3002\u800c\u6b65\u6570\u5219\u53ef\u4ee5\u89c6\u4e3a\u4eceP\u5f00\u59cb\u80fd\u62d3\u5c55\u7684\u6700\u5927\u9762\u79ef\u3002\n\n\u4f60\u4f1a\u5f88\u5de7\u5999\u5730\u53d1\u73b0:\u8ba1\u7b97\u6b65\u6570\u7684\u65b9\u6cd5\u548cBFS\u5b8c\u5168\u4e00\u6837\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u5c31\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u662f\u5426\u8bbf\u95ee\u8fc7\u6807\u8bb0\uff0c\u5982\u679c\u76f8\u90bb\u70b9\u4e2d\u6709\u6ee1\u8db3\u503c\u5f02\u6216\u4e14\u8fd8\u672a\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u5219\u52a0\u5165\u961f\u5217\u4e2d\u3002(\u907f\u514d\u4e00\u4e2a\u70b9\u88ab\u8ba1\u7b97\u591a\u6b21)\u8bbf\u95ee\u7684\u6700\u5927\u6b65\u6570\u5373\u662f\u52a0\u5165\u8be5\u961f\u5217\u4e2d\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u53ca\u5176\u7b80(bao)\u5355(li)\u7684\u7b97\u6cd5\u6a21\u578b\u5c31\u6784\u9020\u51fa\u6765\u4e86:\n\n\u9996\u5148\uff0c\u5bf9\u8ff7\u5bab\u8fdb\u884c\u8f93\u5165\n\n\u5176\u6b21\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6ca1\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u62d3\u5c55\u5b83\u7684\u9762\u79ef\uff0c\u5e76\u5c06\u6cbf\u9014\u7684\u70b9\u548c\u5b83\u7684\u6b65\u9aa4\u90fd\u66f4\u65b0\u4e3a\u6700\u5927\u9762\u79ef\n\n\u6700\u540e\uff0c\u53ea\u8981\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u90fd\u8f93\u51fa\u7b54\u6848\u5373\u53ef\n\n------\n\n**\u3010\u4ee3\u7801\u3011**\n------------\n\n\u90a3\u672c\u849f\u84bb\u5c31\u653e\u4ee3\u7801\u4e86:\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<queue>\nusing namespace std;\nint n,pace[1002][1002]={0};\n//\u53ea\u6709\u6b65\u6570\u624d\u662f\u6211\u4eec\u9700\u8981\u7684\uff0c\u90a3\u5176\u4ed6\u5c31\u6ca1\u5fc5\u8981\u5b58\u4e3a\u5168\u5c40\u53d8\u91cf\u4e86\nint read(){\n\tint abs=0;char c=getchar();\n    while(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) abs=abs*10+c-'0',c=getchar();\n\treturn abs;\n}//\u8bfb\u5165\u4f18\u5316(\u4ecb\u4e8e\u8be2\u95ee\u90a3\u4e48\u591a\u6b21...)\nvoid getpace(){\n\tint dx[]={0,0,1,-1},dy[]={1,-1,0,0};\n    //\u79fb\u52a8\u65b9\u5f0f\n\tchar c=getchar();\n\tbool map[1002][1002],can[1002][1002]={0};\n    //map\u5b58\u8ff7\u5bab\n    //can==1\u8868\u793a\u8fd8\u672a\u8bbf\u95ee\u8fc7\uff0c\u5426\u5219\u5df2\u7ecf\u8bbf\u95ee\u6216\u8d70\u4e0d\u901a(\u8fb9\u754c)\n\tfor(int i=0;i<n*n;i++){\n\t\twhile(c!='1'&&c!='0') c=getchar();\n\t\tmap[i/n+1][i%n+1]=(c=='1');\n        //\u8f93\u5165\u4e3a1\u65f6\u5b58\u4e3a1\uff0c\u5426\u5219\u5b58\u4e3a0\n\t\tcan[i/n+1][i%n+1]=1;\n\t\tc=getchar();\n\t}\n\tfor(int i=0;i<n*n;i++){\n\t\tif(!can[i/n+1][i%n+1]) continue;\n        //\u5df2\u7ecf\u8bbf\u95ee\u8fc7\uff0c\u5219\u4e0d\u5fc5\u8ba1\u7b97\u5176\u6b65\u9aa4\u4e86\n        //\u5728\u522b\u7684\u70b9\u7684\u6cbf\u9014\u4e0a\u8ba1\u7b97\u8fc7\u4e86\n\t\tint tot=0;//\u8ba1\u7b97\u6b65\u9aa4\n\t\tqueue<int> qx,qy,rx,ry;\n\t\tqx.push(i/n+1);\n        qy.push(i%n+1);\n        can[i/n+1][i%n+1]=0;\n\t\twhile(qx.size()){\n\t\t\ttot++;\n\t\t\tint x=qx.front(),y=qy.front();\n\t\t\trx.push(x);//rx\u4e2d\u5b58\u6cbf\u9014\u7684\u70b9\u7684x\n            ry.push(y);//\u540c\u4e0a\n\t\t\tqx.pop();\n            qy.pop();\n\t\t\tfor(int j=0;j<4;j++){\n\t\t\t\tint nx=x+dx[j],ny=y+dy[j];\n\t\t\t\tif(can[nx][ny]&(map[nx][ny]^map[x][y])){\n                //\u8be5\u70b9\u6ee1\u8db3\u62d3\u5c55\u6761\u4ef6\n                \tqx.push(nx);\n                    qy.push(ny);\n                    can[nx][ny]=0;\n                }\n                \n\t\t\t}\n\t\t}\n\t\twhile(rx.size()){\n\t\t\tpace[rx.front()][ry.front()]=tot;\n\t\t\trx.pop();ry.pop();\n\t\t}//\u66f4\u65b0\u6b65\u6570\n\t}\n}\nint main(){\n\tn=read();int m=read();\n\tgetpace();\n\twhile(m--) printf(\"%d\\n\",pace[read()][read()]);\n\treturn 0;\n}\n```",
        "postTime": 1521342833,
        "uid": 36031,
        "name": "JustinRochester",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u6211\u4e0e\u697c\u4e0b\u67d0\u4f4d\u5927\u4f6c\u7684\u9519\u8bef\u539f\u56e0\u5927\u6982\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u6bcf\u6b21bfs\u540ememset\u4e86\u4e0bbool\u6570\u7ec4\uff0c\u7136\u540e\uff0c\u5352\u3002\n\n\u5f53\u6211\u7ffb\u7ffb\u9898\u89e3\u53d1\u73b0\u3002\u3002\u3002\u5c45\u7136\u6ca1\u4e00\u4e2a\u4eba\u5199\u6d2a\u6c34\u586b\u5145\u7684\u601d\u8def\uff0c\u6240\u4ee5\u6211\u8fd9\u4e2a\u849f\u84bb\u5c31\u5c41\u98a0\u5c41\u98a0\u8dd1\u8fc7\u6765\u5199\u4e2a\u9898\u89e3\u3002\n\n\u6211\u7684\u601d\u8def\u662f\u5148\u7528bfs\u904d\u5386n\\*m\u7684\u77e9\u9635\u6765\u6c42\u51fa\u4ece\u8fd9\u4e00\u6b65\u51fa\u53d1\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a**\u80fd\u88ab\u8986\u76d6\u7684\u70b9**\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u6808\u548c\u4e00\u4e2ascc\u6570\u7ec4\u6765\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u6240\u5728\u7684scc\uff08\u8fde\u901a\u5757\uff09\uff1b\u7136\u540e\u5728\u904d\u5386\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u5728\u67d0\u4e2ascc\u4e2d\uff0c\u5c31\u8d70\u4e0b\u4e00\u4e2a\u70b9\u3002\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\nqueue<int> q;\nstack<int> s;\nint n,scc[1001][1001],m,a1[100001],b1[100001],m1;\nbool vis[1001][1001],b[1001][1001];\nint dx[4]= {-1,0,1,0},dy[4]= {0,1,0,-1};\nstring c;\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\ninline bool pd(int x,int y) {\n    if(x<1||x>n)return 0;\n    if(y<1||y>n)return 0;\n    if(vis[x][y])return 0;\n    return 1;\n}\ninline void bfs(int a2,int b2) {\n    q.push(a2);\n    q.push(b2);\n    vis[a2][b2]=1;\n    int x,y,step=1;\n    while(!q.empty()) {\n        x=q.front();\n        q.pop();\n        y=q.front();\n        q.pop();\n        s.push(y);\n        s.push(x);\n        for(int i=0; i<4; i++) {\n            int x1=x+dx[i],y1=y+dy[i];\n            if(!pd(x1,y1)||(b[x][y]==b[x1][y1]))continue;\n            q.push(x1);\n            q.push(y1);\n            vis[x1][y1]=1;\n            ++step;\n        }\n    }\n    int ans=step,x1=0,y1=0;\n    while(!s.empty()) {\n        x1=s.top();\n        s.pop();\n        y1=s.top();\n        s.pop();\n        scc[x1][y1]=ans;\n    }\n}\nint main() {\n    n=read();m=read();\n    for(re int i=1; i<=n; i++) {\n        cin>>c;\n        m1=c.size();\n        for(int j=0; j<m1; j++)\n            b[i][j+1]=c[j]-'0';\n    }\n    for(re int i=1; i<=m; i++) {\n        a1[i]=read(),b1[i]=read();\n    }\n    for(re int i=1; i<=n; i++) {\n        for(re int j=1; j<=n; j++) {\n            if(!scc[i][j]) {\n                bfs(i,j);\n            }\n            //cout<<scc[i][j];\n        }\n        //cout<<endl;\n    }\n    //cout<<endl;\n    for(re int i=1; i<=m; i++)\n        if(scc[a1[i]][b1[i]])cout<<scc[a1[i]][b1[i]]<<endl;\n        else cout<<0<<endl;\n    return 0;\n}\n```",
        "postTime": 1509687307,
        "uid": 55646,
        "name": "Esuan24",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9898\u89e3\u6ca1\u6709\u4ed4\u7ec6\u7814\u7a76\u8fc7\uff08\u56e0\u4e3a\u592a\u591a\u4e86\uff09QAQ\n\n\u7136\u800cDFS\u662f\u5760\u543c\u7684\uff08\u543c\u543c\uff09\uff0c\u4e8e\u662f\uff0c\u6211\u7814\u7a76\u51fa\u6765\u4e00\u79cdO(n^2+m)\u7684\u65b9\u6cd5\uff08\u4e0d\u77e5\u9053\u6709\u6ca1\u6709dalao\u53d1\u8fc7\uff09\n\n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u679a\u4e3e\u6240\u6709\u8282\u70b9\uff0c\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u5c31\u538b\u5165\u961f\u5217\uff0c\u7136\u540eDFS\u8fd9\u4e2a\u8282\u70b9\u6c42\u8054\u901a\u5757\u3002\n\n\u5f53\u8fd9\u4e2a\u8282\u70b9\u8c03\u7528\u7684DFS\u5168\u90e8\u8fd4\u56de\u4ee5\u540e\uff0c\u5c31\u8ba9\u6574\u4e2a\u961f\u5217\u91cc\u7684\u5143\u7d20\u7684CAN\\_VIS=\u961f\u5217\u7684size()\u3002\n\n\n\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u662fO(1)\uff0c\u52a0\u8d77\u6765\u5c31\u662fO(m)\u5566\uff0c\u603b\u7684\u590d\u6742\u5ea6\u5c31\u662fO(n^2+m)\u3002\n\n\n\u601d\u8def\u8bb2\u7684\u5dee\u4e0d\u591a\uff0c\u4e0b\u9762\u9644\u4e0a\u6e90\u7801\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <string>\nusing namespace std;\nconst int maxn=1000+10;\n\nstruct nood{\n    int x,y;\n};\n\nbool graph[maxn][maxn];\nbool vis[maxn][maxn];\nint cn[maxn][maxn];\nint n,m;\nint x,y;\nqueue<nood> q;\n\nvoid opr(const int& i,const int& j){                ///\u8fd9\u91cc\u662f\u840c\u840c\u7684DFS\u51fd\u6570\n    if(i==0||i==n+1||j==0||j==n+1) return;        ///\u754c\u9650\n    q.push((nood){i,j});                                  ///\u8c03\u7528\u51fd\u6570\u65f6\u6b64\u8282\u70b9\u662f\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5push\u4e86\n    vis[i][j]=true;\n    if(!vis[i+1][j] && graph[i+1][j]!=graph[i][j]) opr(i+1,j);\n    if(!vis[i-1][j] && graph[i-1][j]!=graph[i][j]) opr(i-1,j);\n    if(!vis[i][j+1] && graph[i][j+1]!=graph[i][j]) opr(i,j+1);\n    if(!vis[i][j-1] && graph[i][j-1]!=graph[i][j]) opr(i,j-1);\n}\n\n\n\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){                        ///\u8fd9\u91cc\u6211\u7528\u7684\u662fstring\u8f93\u5165\uff0c\u6211\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u8c03\u8bd5\u65f6\u7528getchar()\u4f1a\u8bfb\u5165m\u540e\u7684\u6362\u884c\u7b26\n        string s;\n        cin>>s;\n        for(int j=0;j<n;j++){\n            graph[i][j+1]=s[j]-'0';\n        }\n    }\n\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            if(!vis[i][j]&&!graph[i][j]){\n                opr(i,j);\n                int s=q.size();\n                while(!q.empty()){              ///\u4e0d\u7528\u62c5\u5fc3q\u672a\u88ab\u6e05\u7a7a\n                    nood tmp=q.front();\n                    cn[tmp.x][tmp.y]=s;\n                    q.pop();\n                }\n            }\n        }\n    }\n\n    for(int i=1;i<=m;i++){\n        cin>>x>>y;\n        cout<<cn[x][y]<<endl;\n    }\n\n    return 0;\n}\n```",
        "postTime": 1497004770,
        "uid": 23650,
        "name": "Toxic_Obsidian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u6b64\u9898\u641c\u7d22\u3002\u3002\u3002\n\n\u5bf9\u4e8e\u5728\u4e00\u4e2a\u8054\u901a\u5757\u91cc\u7684\u70b9\uff0c\u5b83\u4eec\u7684\u7b54\u6848\u76f8\u540c\u3002\n\n\u6240\u4ee5\u6807\u8bb0\u4e0d\u540c\u989c\u8272\u3002\n\n\u9009\u5b9a\u4e00\u4e2a\u70b9\uff0c\u4ece\u8fd9\u4e2a\u70b9dfs\u904d\u5386\u5230\u7684\u70b9\u5168\u90e8\u8bbe\u4e3a\u4e00\u4e2a\u989c\u8272\uff0c\u5e76\u4e14\u628a\u8fd9\u4e2a\u70b9\u8bbe\u7f6e\u4e3a\u8be5\u989c\u8272\u7684\u6839\u8282\u70b9\uff0c\u5e76\u628a\u6839\u8282\u70b9\u7684\u7b54\u6848\u8bbe\u7f6e\u4e3a\u521a\u521adfs\u904d\u5386\u5230\u7684\u8282\u70b9\u6570\u91cf\u3002\n\n\n\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2\uff0c\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u70b9\u7684\u989c\u8272\uff0c\u627e\u5230\u8be5\u989c\u8272\u7684\u6839\u8282\u70b9\uff0c\u8f93\u51fa\u6839\u8282\u70b9\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nbool inb(bool&dig){char c=getchar();while(!isdigit(c))c=getchar();dig=c-'0';}\nint n,m,ans[1005][1005],col[1005][1005],ch[1000005],cw[1000005],cnt;\nbool mp[1005][1005];\nint dfs(int h,int w)\n{\n    if(h<1||w<1||h>n||w>n)return 0;\n    if(col[h][w])return 0;\n    if(ans[h][w])return ans[h][w];\n    ans[h][w]=1,col[h][w]=cnt;\n    if(mp[h][w]^mp[h-1][w])ans[h][w]+=dfs(h-1,w);\n    if(mp[h][w]^mp[h+1][w])ans[h][w]+=dfs(h+1,w);\n    if(mp[h][w]^mp[h][w-1])ans[h][w]+=dfs(h,w-1);\n    if(mp[h][w]^mp[h][w+1])ans[h][w]+=dfs(h,w+1);\n    return ans[h][w];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)inb(mp[i][j]);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            if(!col[i][j])cnt++,dfs(i,j),ch[cnt]=i,cw[cnt]=j;\n    for(int i=1,a,b;i<=m;i++)\n        scanf(\"%d%d\",&a,&b),printf(\"%d\\n\",ans[ch[col[a][b]]][cw[col[a][b]]]);\n    return 0;\n}\n```",
        "postTime": 1494550828,
        "uid": 22388,
        "name": "XZYQvQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u7ed9\u4e0b\u9762\u7684\u9898\u89e3\u52a0\u4e00\u4e2a\u6ce8\u91ca\uff0c\u4e0d\u591a\u89e3\u91ca\u4e86..\u4ee3\u7801\uff1a\n\n\n\n\n    \n\n```cpp\n//\n//  main.cpp\n//  01maze_bfs\n//\n//  Created by Leonardo Cullen.\n//  Copyright \u00a9 2017 Leonardo Cullen. All rights reserved.\n//\n#include <iostream>\n#include <queue>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nbool matrix[1005][1005];//\u4ee3\u8868\u77e9\u9635\uff080\uff0f1\uff09\uff1b\nint vis[1005][1005];//vis\u6570\u7ec4\u4e2d\u5b58\u8fd9\u4e2a\u70b9\u5728\u7b2c\u51e0\u6b21\u641c\u7d22\u4e2d\u8bbf\u95ee\u8fc7\nint dx[4]={0,0,1,-1};//\u884c\u53d8\u5316\u91cf\nint dy[4]={-1,1,0,0};//\u5217\u53d8\u5316\u91cf\nint n,m;//m\u884cn\u5217\nlong int ans[1000000];//\u7b2cans[i]\u4e3a\u7b2ci\u6b21\u641c\u7d22\u7684\u7ed3\u679c\nqueue <int> qx,qy;//\u884c\u961f\u5217\uff0c\u5217\u961f\u5217\nint x,y;\nqueue <bool>now;//\u72b6\u6001\u961f\u5217\uff08\u5f53\u524d\u6240\u5904\u7684\u70b9\u662f0\u8fd8\u662f1\uff09\nvoid bfs(int turn,int i,int j)//\u4ece\u70b9(i,j)\u5f00\u59cb\u8fdb\u884c\u7b2cturn\u6b21\u641c\u7d22\uff08turn\u4e3a\u6240\u7ed9\u51fa\u7684\u7b2c\u51e0\u4e2a\u6570\u636e\uff09\n{\n    qx.push(i);//\u521d\u59cb\u70b9\u5165\u961f\n    qy.push(j);\n    vis[i][j]=turn;//\u8fd9\u4e2a\u70b9\u5728\u7b2cturn\u6b21\u641c\u7d22\u4e2d\u8bbf\u95ee\u8fc7\n    now.push(matrix[i][j]);//\u5f53\u524d\u72b6\u6001\u5165\u961f\n    long int sum=1;//sum\u4e3a\u53ef\u5230\u8fbe\u7684\u70b9\u6570\n    while(!qx.empty())//\u961f\u975e\u7a7a\n    {\n        for(int w=0;w<4;w++)//\u56db\u79cd\u8d70\u6cd5\n        {\n            int a=qx.front()+dx[w];\n            int b=qy.front()+dy[w];\n            if(a>=1&&a<=n&&b>=1&&b<=n&&!vis[a][b]&&matrix[a][b]!=now.front())//\u82e5\u6ee1\u8db3\u6761\u4ef6\uff08\u6ce8\uff1a\u82e5vsi[a][b]\u975e\u96f6\u5219\u771f\uff0c\u672c\u6b21\u641c\u7d22\u7ed3\u679c\u4e0d\u53ef\u80fd\u5305\u62ec\u66fe\u7ecf\u5230\u8fc7\u7684\u70b9\uff09\n            {\n                qx.push(a);\n                qy.push(b);//\u70b9\u5165\u961f\n                now.push(matrix[a][b]);//\u72b6\u6001\u5165\u961f\n                sum++;//\u70b9\u6570\u52a0\u4e00\n                vis[a][b]=turn;//\u8be5\u70b9\u5728\u7b2cturn\u6b21\u641c\u7d22\u4e2d\u8bbf\u95ee\u8fc7\n            }\n        }\n        qx.pop();\n        qy.pop();\n        now.pop();//\u51fa\u961f\n    }\n    ans[turn]=sum;//\u5b58\u50a8\u7b2cturn\u6b21\u7684\u7ed3\u679c\n    return ;\n}\nint main(int argc, const char * argv[])\n{\n    cin>>n>>m;\n    register int i,j;//\u4e0d\u7528register\u4e5f\u4e0d\u4f1aT\n    char c;;\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            cin>>c;\n            if(c=='1') matrix[i][j]=true;//\u5b58\u77e9\u9635\uff08\u5730\u56fe\uff09\n        }\n    }\n    for(i=1;i<=m;i++)\n    {\n        cin>>x>>y;\n        if(!vis[x][y]) bfs(i,x,y);//\u5982\u679c\u8fd9\u4e2a\u70b9\u66fe\u7ecf\u6ca1\u6709\u5230\u8fc7\uff0c\u5c31\u641c\u4e00\u904d\n        else ans[i]=ans[vis[x][y]];//\u8981\u662f\u66fe\u7ecf\u5230\u8fc7\uff0c\u5c31\u5c06\u66fe\u7ecf\u7b2c\u51e0\u6b21\u5230\u7684\u90a3\u4e2a\u7b54\u6848\u4f5c\u4e3a\u672c\u6b21\u7b54\u6848\n    }\n    for(i=1;i<=m;i++)\n    {\n        cout<<ans[i]<<endl;//\u8f93\u51fa\n    }\n    return 0;\n}\n\n```",
        "postTime": 1491392887,
        "uid": 27539,
        "name": "f112358",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u6b63\u6b63\u7ecf\u7ecf\u7684\u5e76\u67e5\u96c6+DFS\uff0c\u6bd4\u8f83\u6b7b\u677f\uff0c\u4e0d\u8fc7\u4e5f\u6bd4\u8f83\u597d\u7406\u89e3\u3002\n\n\u770b\u4e86\u697c\u4e0b\u7684\u51e0\u4f4d\u65b9\u6cd5\u90fd\u4e0d\u662f\u6b63\u89c4\u5e76\u67e5\u96c6\uff0c\uff08\u5f53\u7136\u4ee3\u7801\u786e\u5b9e\u6bd4\u6211\u8fd9\u4e2a\u7b80\u5355\u4e00\u4e9b\uff09\n\n\u6240\u4ee5\u6211\u6765\u53d1\u4e00\u4e2a\n\n\u5e76\u67e5\u96c6\u90e8\u5206\u7684\u6e90\u7801\u6765\u81ea\u4e8e\n\n\n\n\n```cpp\nhttp://blog.csdn.net/sysucph/article/details/7263010\n#include<iostream>\n#include<cstring>\n#include<string>\nusing namespace std;\nstruct father\uff08\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u7236\u8282\u70b9\uff09\n{\n    int x,y;\n} ;\nfather fa[1005][1005];\nint num[1005][1005];\nint n,m,x,y;\nint a[1005][1005];\nbool visit[1005][1005];\uff08\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff09\nint dx[4]={1,-1,0,0};int dy[4]={0,0,1,-1};\nfather find(father t)\uff08\u9012\u5f52\u67e5\u627e\u7236\u8282\u70b9\u5e76\u8fdb\u884c\u8def\u5f84\u538b\u7f29\uff09\n{\n     if(fa[t.x][t.y].x!=t.x && fa[t.x][t.y].y!=t.y)\n      fa[t.x][t.y]=find(fa[t.x][t.y]);\n      return fa[t.x][t.y];\n}\nvoid dfs(int x,int y)\uff08\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u90e8\u5206\uff09\n{\n    visit[x][y]=1;\n    num[fa[x][y].x][fa[x][y].y]++;\n    for(int i=0;i<4;i++)\n        {\n            if(!visit[x+dx[i]][y+dy[i]] && a[x+dx[i]][y+dy[i]]+a[x][y] == 1)\n            {        \n                 fa[x+dx[i]][y+dy[i]]=find(fa[x][y]);\n                dfs(x+dx[i],y+dy[i]);\n            }\n        }\n}\nint cou(int x,int y)\uff08\u8fd9\u4e2a\u51fd\u6570\u5176\u5b9e\u6ca1\u5565\u7528\uff0c\u53ea\u662f\u8ba9\u4e3b\u51fd\u6570\u663e\u5f97\u77ed\u4e00\u70b9\uff09\n{\n    if(fa[x][y].x==0 && fa[x][y].y==0)\n        {\n            fa[x][y].x=x;\n            fa[x][y].y=y;\n            dfs(x,y);\n        }\n    return num[fa[x][y].x][fa[x][y].y];\n}\nint main()\n{\n    memset(a,1,sizeof(a));\n    string s[1005];\uff08\u539f\u8c05\u672c\u4eba\u4e0d\u662f\u7ade\u8d5b\u515a\uff0c\u53ea\u662f\u4e2a\u5927\u4e00\u7684\u55b3\u55b3\uff0c\u5b66\u7684\u53ea\u662f\u8001\u5e08\u6559\u7684c++\uff0c\u6240\u4ee5gets\uff08\uff09\u4ec0\u4e48\u7684\u51fd\u6570\u90fd\u4e0d\u4f1a\u7528..\u6240\u4ee5\u7528\u4e86\u8fd9\u79cd\u5f88\u8822\u7684\u529e\u6cd5.\uff09\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s[i];\n        for(int j=1;j<=n;j++)\n            a[i][j]=s[i][j-1]-'0';\n    }\n    for(int i=1;i<=m;i++)\n    {\n        cin>>x>>y;\n        cout<<cou(x,y)<<endl;\n    }\n}\n```",
        "postTime": 1482230818,
        "uid": 26879,
        "name": "mingx1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u4e00\u770b\u8fd9\u9898\u5c31\u662f\u88f8\u88f8\u7684\u641c\u7d22\u5475\n\n\n\n\n\n\n```cpp\nconst xx : array[1..4, 1..2] of integer = (\n        (-1, 0), (0, -1), (1, 0), (0, 1)\n    );\ntype fx = record\n    x, y : longint;\nend;      //\u6a2a\u7eb5\u4e0b\u6807\nvar\n    n, m, i, j, k, count, x, y: longint;\n    a : array[1..1000, 1..1000] of char;\n    used : array[1..1000, 1..1000] of boolean;\n    f : array[1..1000, 1..1000] of longint;\n    q : array[1..1000000] of fx;\n    xy: fx;\nfunction ok(x, y:longint): boolean;\nbegin\n    if ( x >= 1 ) and ( x <= n ) and (y >= 1) and (y<=n) then exit(true);\n    exit(false);\nend;\nprocedure dfs(x, y:longint);\nvar\n    xy : fx;\n    i : longint; \nbegin\n    //writeln('x:',x,',y:',y,',count:',count);\n    for i:=1 to 4 do\n    begin\n        if ok(x + xx[i, 1], y + xx[i, 2]) and ( not used[x + xx[i, 1], y + xx[i, 2]] ) and (a[x, y] <> a[x +xx[i, 1], y + xx[i, 2]] ) then\n        begin\n            used[x + xx[i, 1], y + xx[i, 2]] := true;\n            inc(count);\n            xy.x := x + xx[i, 1];\n            xy.y := y + xx[i, 2];\n            q[count] := xy;\n            dfs(x + xx[i, 1], y + xx[i, 2]);\n        end;\n    end;\nend;\nbegin\n    count := 1;\n    fillchar(used, sizeof(used), false);\n    readln(n, m);\n    for i:=1 to n do\n    begin\n        for j:=1 to n do\n        begin\n            read(a[i, j]);\n        end;\n        readln;\n    end;\n    for i:=1 to n do\n        for j:=1 to n do\n        begin\n            if not used[i, j] then \n            begin\n                //\u521d\u59cb\u5316\n                count := 1;        //\u521d\u59cb\u5316\n                xy.x := i;\n                xy.y := j;\n                q[count] := xy;\n                used[i, j] := true;\n                //\u641c\u7d22\n                dfs(i, j);\n                //\u586b\u503c\n                for k:=1 to count do\n                begin\n                    f[q[k].x, q[k].y] := count;              //\u628a\u4e00\u4e2a01\u533a\u57df\u5185\u7684\u586b\u503c\n                end;\n            end;\n        end;\n    for i:=1 to m do\n    begin\n        readln(x, y);\n        writeln(f[x, y]);      \n    end;\nend.\n```",
        "postTime": 1471323714,
        "uid": 9087,
        "name": "fl_334",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "**\u672c\u7a0b\u5e8f\u91c7\u7528\u5148\u5237len\u8868\uff0c\u7136\u540e\u76f4\u63a5\u67e5\u8868\u7684\u65b9\u5f0f\u3002\u53ef\u4ee5\u5728\u9650\u5b9a\u65f6\u95f4\u5185\u901a\u8fc7\u3002\u5bf9\u4e8e\u90e8\u5206\u4e0d\u5b8c\u5168\u6570\u636e\uff0c\u4e00\u8fb9\u67e5\u8868\u4e00\u8fb9\u5237\u8868\u7684\u5b8c\u5168\u8bb0\u5fc6\u65b9\u5f0f\u53ef\u80fd\u66f4\u5feb\u3002\u6ce8\u91ca\u8db3\u591f\u8be6\u5c3d\u3002**\n\n```cpp\n/////////////////////////\n// 0-1 Maze Solution (C++)\n//   (lg) 1141.cpp\n//  Author: Mollnn.F\n/////////////////////////\n// 0-1\u8ff7\u5bab \u89e3\u51b3\u65b9\u6848 (C++)\n//       \u6d1b\u8c371141\n//     \u4f5c\u8005\uff1aMollnn.F\n//  \u5b8c\u5168\u6ce8\u91ca\u7248 \n/////////////////////////\n// \u6ce8\u610f\n// 1.\u672c\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e86\u5168\u5c40\u53d8\u91cf\u3001STL\u5e93\u548c\u5b8f\u3002 \n//   \u60a8\u53ef\u80fd\u4e0d\u4e60\u60ef\u4f7f\u7528\u4ee5\u4e0a\u6280\u672f\u65b9\u6cd5\u3002 \n// 2.\u672c\u7a0b\u5e8f\u91c7\u7528\u5148\u5237len\u8868\uff0c\u7136\u540e\u76f4\u63a5\u67e5\u8868\u7684\u65b9\u5f0f\u3002\n//   \u5bf9\u4e8e\u90e8\u5206\u4e0d\u5b8c\u5168\u6570\u636e\uff0c\u4e00\u8fb9\u67e5\u8868\u4e00\u8fb9\u5237\u8868\u7684\n//   \u5b8c\u5168\u8bb0\u5fc6\u65b9\u5f0f\u53ef\u80fd\u66f4\u5feb\u3002\n///////////////////////// \n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n/////////////////////////\n```\n/\\* \u5168\u5c40\u53d8\u91cf\u5b9a\u4e49 \\*/\n\n```cpp\nint n,m; //\u6570\u76ee \nint si,sj; //\u7528\u4e8e\u4e34\u65f6\u4fdd\u5b58\u8d77\u70b9 \nchar map[1005][1005],used[1005][1005];//0-1\u8bb0\u5f55\u56fe\u548c\u8bbf\u95ee\u8bb0\u5f55 \nint len[1005][1005];//\u4ece\u5f53\u524d\u70b9\u80fd\u8d70\u7684\u6700\u5927\u957f\u5ea6 \n```\n/\\* \u8bbf\u95ee\u70b9\u7ba1\u7406 \\*/\nvector <int>v; //\u5355\u5411\u5bb9\u5668\uff0c\u7528\u4e8e\u50a8\u5b58\u8fd9\u4e00\u6b21\u8bbf\u95ee\u8fc7\u7684\u70b9\n\n#define geti(x) x/10000 // \u5b8f\uff0c\u7528\u4e8e\u4eceint\u5750\u6807\u548c\u4e2d\u5206\u79bb\u51fai,j\n\n\n    \n    \n\n```cpp\n#define getj(x) x%10000 // \u540c\u4e0a \n/////////////////////////\n// \u6df1\u641c\u51fd\u6570 \nint dfs(int i,int j) //\u5f53\u524d\u70b9\u7684i,j \n{\n    char ck=!map[i][j]; //check\uff0c\u6807\u8bc6\u8fd9\u4e00\u6b21\u8981\u5bfb\u627e\u7684\u70b9\u76840-1\u503c \n    v.push_back(i*10000+j);//\u8bbf\u95ee\u4e86\u8fd9\u4e2a\u70b9\uff0c\u5c06\u5176\u63a8\u5230\u5bb9\u5668\u4e2d \n    int cnt=1;//\u8bbf\u95ee\u8ba1\u6570\u5668\uff0c1\u4ee3\u8868\u81ea\u8eab\u70b9 \n    used[i][j]=1;//\u7f6e\u4f4d\uff0c\u5c06\u81ea\u8eab\u8bbe\u7f6e\u4e3a\u5df2\u7ecf\u88ab\u8bbf\u95ee \n    //\u4ee5\u4e0bif\u8bed\u53e5\uff0c\u524d\u4e24\u4e2a\u6761\u4ef6\u4e3a\u8d8a\u754c\u68c0\u67e5\uff0c3\u662f\u68c0\u67e5\u662f\u5426\u8d70\u8fc7\n    //  4\u662f\u68c0\u67e50-1\u503c\u662f\u5426\u7b26\u5408\u6761\u4ef6\uff0c\u5168\u90e8\u901a\u8fc7\u5c31\u8fdb\u4e00\u6b65\u641c\u7d22 \n    // \u56db\u53e5\u8bdd\u5206\u522b\u662f\u56db\u4e2a\u65b9\u5411\uff0c\u4e0d\u591a\u89e3\u91ca \n    if( i-1>=0 && i-1<n&& used[i-1][j]==0 && map[i-1][j]==ck )\n        cnt+=dfs(i-1,j);\n    if( i+1>=0 && i+1<n&& used[i+1][j]==0 && map[i+1][j]==ck )\n        cnt+=dfs(i+1,j);\n    if( j-1>=0 && j-1<n&& used[i][j-1]==0 && map[i][j-1]==ck )\n        cnt+=dfs(i,j-1);\n    if( j+1>=0 && j+1<n&& used[i][j+1]==0 && map[i][j+1]==ck )\n        cnt+=dfs(i,j+1);\n    //\u6ce8\u610f\u8fd9\u91cc\u4e0e\u591a\u6570\u6df1\u641c\u7684\u5dee\u522b\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u53ea\u8981\u78b0\u4e00\u6b21\uff0c\u6240\u4ee5\u65e0\u9700\u628aused\u590d\u4f4d \n    return cnt;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m); //\u8f93\u5165\u603b\u6570 \n    int i,j,l,tmp,st; //i,j,l\u5faa\u73af\u53d8\u91cf\n    // st\u7528\u4e8e\u4e34\u65f6\u8bb0\u5f55dfs\u7684\u7ed3\u679c\n    // tmp\u7528\u4e8e\u4e34\u65f6\u50a8\u5b58pop\u51fa\u6765\u7684\u5750\u6807 \n    for(i=0;i<n;i++)\n    {\n        scanf(\"%s\",&map[i]); //\u8f93\u5165\u77e9\u9635 \n        for(j=0;j<n;j++)\n            map[i][j]-='0'; //\u56e0\u4e3a\u662f\u5b57\u7b26\uff0c\u6240\u4ee5\u8981-'0' \n    }\n    memset(len,0,sizeof(len)); //\u521d\u59cb\u5316len\u6570\u7ec4\n    //\u904d\u5386\u6bcf\u4e00\u4e2a\u70b9\u6765\u786e\u5b9alen \n    for(i=0;i<n;i++)\n    {\n        for(j=0;j<n;j++)\n        {\n            if(len[i][j]==0) //\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u8fc7len\uff0c\u5c31dfs \n            {\n                st=dfs(i,j); //\u5f00\u59cb\u6df1\u641c \n                while(!v.empty()) //\u904d\u5386\u8fd9\u4e00\u6b21\u8bbf\u95ee\u7684\u6240\u6709\u70b9 \n                {\n                    tmp=v[v.size()-1]; //\u53d6\u51fa\u5750\u6807 \n                    len[geti(tmp)][getj(tmp)]=st; //\u8bbe\u7f6elen \n                    v.pop_back(); //\u5220\u9664\u8fd9\u4e2a\u70b9 \n                }\n            }\n        }\n    }\n    for(i=0;i<m;i++)\n    {\n        scanf(\"%d%d\",&si,&sj); //\u8f93\u5165\u5750\u6807 \n        printf(\"%d\\n\",len[--si][--sj]); //\u8f93\u51falen\u503c \n    }\n    return 0;\n}\n```",
        "postTime": 1471159802,
        "uid": 21832,
        "name": "mollnn",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u4e00\u5b9a\u8981\u7528BFS\uff0c\u7528DFS\u7206\u6808\uff0c\u5c31\u7b97\u52a0\u6df1\u5ea6\u9650\u5236\u4e5f\u4e0d\u884c\uff0c\u4eb2\u8eab\u8bd5\u9a8c\u4e3a\u8bc1\u3002\n\n\n\n\n\n```cpp\n#include <cstdio>\n#define X gx[head]+dx[i]\n#define Y gy[head]+dy[i]\nint dx[]={-1,1,0,0},dy[]={0,0,-1,1};\nint c[2000][2000],d[2000][2000];\nint gx[1000000],gy[1000000];\nchar g[2000][2000];\nint i,j,m,n,s,x,y,head,tail;\nvoid bfs(int x,int y,int z)\n{\n    head=1;tail=1,gx[head]=x,gy[head]=y,d[gx[head]][gy[head]]=z;\n    while (head<=tail)\n    {\n        for (int i=0;i<4;i++)\n            if ((X>0) && (X<=n) && (Y>0) && (Y<=n) && (d[X][Y]!=z) && (g[gx[head]][gy[head]]!=g[X][Y]))\n                tail++,gx[tail]=X,gy[tail]=Y,d[X][Y]=z;\n        head++;\n    }\n    c[x][y]=tail;\n    for (int i=1;i<=tail;i++)\n        c[gx[i]][gy[i]]=tail;\n    return;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (i=1;i<=n;i++)\n    {\n        getchar();\n        for (j=1;j<=n;j++)\n            g[i][j]=getchar()-48;\n    }\n    for (i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        if (c[x][y]==0)\n            bfs(x,y,i);\n        printf(\"%d\\n\",c[x][y]);\n    }\n    return 0;\n}\n```",
        "postTime": 1452760716,
        "uid": 1312,
        "name": "zhan8822",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u4e2a\u641c\u4f1a\u7206  \u6240\u4ee5\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u76ee\u6807\u5750\u6807\u662f\u5426\u88ab\u641c\u8fc7\n\n\uff08\u56e0\u4e3a\u4e00\u6b21\u6df1\u641c\u8fc7\u7684\u70b9\u7684\u7b54\u6848\u662f\u76f8\u540c\u7684\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint n,m,i,j,k,x,y,xx,yy,f[1205][1015],ff[1105][1205],h,t,tt,c[1000105],d[1000105];\nchar s[1205][1105];\nint p[4]={0,0,1,-1};\nint q[4]={1,-1,0,0}; \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (i=1; i<=n; i++)\n        for (j=1; j<=n; j++)\n            cin>>s[i][j];\n    for (k=1; k<=m; k++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        if (f[x][y]>0)\n        {\n            printf(\"%d\\n\",ff[x][y]);\n            continue;\n        }\n        tt++;\n        h=0; t=1;\n        c[1]=x;\n        d[1]=y;\n        f[x][y]=tt;\n        while (h<t)\n        {\n            h++;\n            for (i=0; i<=3; i++)\n            {\n                xx=c[h]+p[i];\n                yy=d[h]+q[i];\n                if (f[xx][yy]==0 && xx<=n && xx>=1 && yy<=n && yy>=1 && s[xx][yy]!=s[c[h]][d[h]])\n                {\n                    t++;\n                    c[t]=xx;\n                    d[t]=yy;\n                    f[xx][yy]=tt;\n                }\n            }\n        }\n        for (i=1; i<=t; i++)\n            ff[c[i]][d[i]]=t;\n        printf(\"%d\\n\",ff[x][y]);\n    }\n    return 0;\n}\n```",
        "postTime": 1452582607,
        "uid": 9193,
        "name": "a526955194",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5230\uff0c\u80fd\u591f\u4e92\u76f8\u5230\u8fbe\u7684\u70b9\u7684\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u6570\u662f\u4e00\u6837\u591a\u7684\uff0c\u8fd9\u6837\u6574\u4e2a\u68cb\u76d8\u5c31\u50cf\u662f\u5206\u6210\u4e86\u8bb8\u591a\u5757\uff0c\u6bcf\u4e00\u5757\u4e2d\u7684\u70b9\u7ed9\u51fa\u7684\u7b54\u6848\u90fd\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e00\u5f20\u8868\u4fdd\u5b58\u68cb\u76d8\u4e0a\u6bcf\u4e2a\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u70b9\u6570\uff0c\u6bcf\u6b21\u641c\u7d22\u540e\u628a\u5f53\u524d\u641c\u7d22\u8d70\u8fc7\u7684\u6240\u6709\u70b9\u5728\u8868\u4e0a\u8bb0\u5f55\u7b54\u6848\uff0c\u4e0b\u6b21\u67e5\u8be2\u5230\u8fd9\u4e00\u5757\u7684\u70b9\u65f6\u5c31\u4e0d\u7528\u91cd\u65b0\u641c\u7d22\u4e86\u3002\n\n```cpp\n\n#include<stdio.h>\n#include<memory.h>\nconst int dx[]={0,1,0,-1};\nconst int dy[]={1,0,-1,0};\nint n,m,i,j,x,y;\nunsigned char a[1000][1000];\nint f[1000][1000];\nbool v[1000][1000];//v for visit\nint xy[1000000][2];\nint bfs(int x,int y)\n{\n    if(f[x][y]+1)return f[x][y];\n    int s=0,head=0,tail=1,tx,ty;\n    **xy=x;xy[0][1]=y;\n    v[x][y]=true;\n    while(head<tail){\n        for(int i=0;i<4;i++){\n            if((tx=xy[head][0]+dx[i])>=0&&tx<n&&(ty=xy[head][1]+dy[i])>=0&&ty<n\n               &&!v[tx][ty]&&a[xy[head][0]][xy[head][1]]^a[tx][ty])\n                v[tx][ty]=true,xy[tail][0]=tx,xy[tail][1]=ty,tail++;\n        }\n        head++;\n        s++;\n    }\n    for(int i=0;i<tail;i++)f[xy[i][0]][xy[i][1]]=s;\n    return s;\n}\nint main()\n{\n    scanf(\"%d%d \",&n,&m);\n    memset(f,-1,sizeof(int)*1000*n);\n    for(;i<n;i++){for(j=0;j<n;j++)a[i][j]=getchar()-'0';getchar();}\n    for(i=0;i<m;i++){\n        scanf(\"%d%d\",&x,&y);\n        printf(\"%d\\n\",bfs(x-1,y-1));\n    }\n    \n    return 0;\n}\n\n```",
        "postTime": 1439433193,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n01\u8ff7\u5bab\u8fd9\u9053\u9898\u51fa\u7684\u975e\u5e38\u597d\uff0c\u8bf4\u96be\u4e0d\u96be\uff0c\u8bf4\u6613\u4e0d\u6613\uff0c\u6240\u4ee5\u672c\u4eba\u5f88\u8d1f\u8d23\u7684\u5bf9\u6b64\u9898\u8fdb\u884c\u8bb2\u89e3\u3002\u9996\u5148\uff0c\u8bf7\u4e0d\u8981\u8003\u8651\u4f7f\u7528\u56de\u6eaf\u641c\u7d22\uff0c\u8fd9\u6837\u6700\u591a\u53ea\u80fd\u62ff80\u5206\uff0c\u8fd8\u6709\u4e24\u4e2a\u6d4b\u8bd5\u70b9\u4f1a\u56e0\u4e3a\u9012\u5f52\u6df1\u5165\u8fc7\u5927\u6240\u4ee5\u7206\u8868\u3002\u90a3\u4e48\u8fd9\u9898\u5f88\u660e\u663e\u5c31\u662f\u4e3a\u5e7f\u641c\u7684\u521d\u5b66\u8005\u51c6\u5907\u7684\u4e86\uff01\n\n\u518d\u8bb2\u4e00\u4e0b\u601d\u8def\u5475\uff0c\u5176\u5b9e\u5c31\u662f\u7b80\u5355\u6a21\u5f0f\u7684\u5e7f\u641c\uff0c\u518d\u52a0\u4e0a\u4e00\u4e9b\u4f18\u5316\u3002\u90a3\u4e48\u8fd9\u91cc\u91cd\u70b9\u8bb2\u4e00\u4f18\u5316\uff1a\u56e0\u4e3a\u540c\u4e00\u6761\u8def\u7ebf\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u70b9\u6240\u80fd\u5ef6\u4f38\u51fa\u7684\u8def\u5c31\u53ea\u662f\u8fd9\u4e00\u6761\u7ebf\u800c\u5df2\uff0c\u90a3\u4e48\u5c31\u5728\u6bcf\u4e00\u6b21\u8bfb\u5165\u7684\u65f6\u5019\uff0c\u770b\u770b\u5b83\u6240\u5728\u7684\u70b9\u662f\u5426\u5904\u4e8e\u67d0\u4e2a\u5df2\u8d70\u8fc7\u7684\u8def\u7ebf\u5f53\u4e2d\uff0c\u5982\u679c\u662f\u5c31\u76f4\u63a5\u8f93\u51fa\u3002 \u90a3\u4e48\u8bf7\u770b\u4e00\u4e0b\u6807\u7a0b\u3002\n\n```delphi\nconst a:array[1..4]of shortint=(0,-1,0,1);\n      b:array[1..4]of shortint=(-1,0,1,0);\nvar l:array[0..1001,0..1001]of longint;\n    road:array[0..1000,0..1000] of longint;\n    s:ansistring;\n    c:array[1..1000000,1..2] of longint;\n    d:array[1..100000] of longint;\n    i,j,o,m,n,m1,n1,x1,y1,x,y:longint;\nprocedure dg(p,q,o:longint);\nvar i:longint;\nbegin\n  c[1,1]:=p;c[1,2]:=q;\n  m1:=1;n1:=2;\n  while m1<n1 do begin\n  for i:=1 to 4 do begin\n    x:=c[m1,1]+a[i];\n    y:=c[m1,2]+b[i];\n    if (x>0)and(x<=n)and(y>0)and(y<=n){\u5224\u65ad\u662f\u5426\u8d8a\u754c}\n    and(road[x,y]<>road[c[m1,1],c[m1,2]])and(l[x,y]=0){\u5224\u65ad\u80fd\u4e0d\u80fd\u8d70\u4e14\u6709\u6ca1\u6709\u8d70\u8fc7}\n    then begin\n      c[n1,1]:=x;\n      c[n1,2]:=y;\n      l[x,y]:=o;\n      inc(n1);\n    end;end;\n  inc(m1);\n  end;\n  d[o]:=n1-1;\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do begin{\u56e0\u4e3a\u8ff7\u5bab\u7684\u6570\u636e\u4e4b\u95f4\u6ca1\u6709\u7a7a\u683c\uff0c\u6240\u4ee5\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\u7136\u540e\u8f6c\u6362}\n    readln(s);\n    for j:=1 to n do\n    val(s[j],road[i,j]);\n  end;\n  for i:=1 to m do begin\n    read(x1,y1);{\u6bcf\u4e00\u6b21\u8bfb\u5165\u540e\u5c31\u76f4\u63a5\u5904\u7406}\n    if l[x1,y1]=0 then begin{\u5982\u679c\u6ca1\u6709\u8d70\u8fc7\u5c31\u8fdb\u884c\u5e7f\u641c}\n    l[x1,y1]:=i;\n    dg(x1,y1,i);\n    end;\n    write(d[l[x1,y1]]);writeln;{\u6700\u540e\u6253\u5370\u76f8\u5e94\u7684\u7b54\u6848}\n  end;\nend.\n```\n\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5957\u7528\u57fa\u672c\u7684\u5e7f\u641c\u7684\u6a21\u5f0f\uff0c\u518d\u52a0\u4e0a\u4e00\u4e9b\u4f18\u5316\uff0c\u5373\u53ef\u901a\u8fc7\u3002\u90a3\u4e48\u5728\u8fd9\u91cc\u63d0\u9192\u4e00\u4e0b\uff0c\u5343\u4e07\u4e0d\u8981\u5728\u6bcf\u4e00\u6b21\u5e7f\u641c\u4e4b\u524d\uff0c\u628a\u8bb0\u5f55\u7684\u6570\u7ec4\uff08\u4e5f\u5c31\u662f\u6807\u7a0b\u4e2d\u7684c\u6570\u7ec4\uff09\u6e05\u7a7a\uff0c\u8fd9\u6837\u4f1a\u8131\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u5bfc\u81f4\u7a0b\u5e8f\u65e0\u6cd5\u901a\u8fc7\uff01\n",
        "postTime": 1376915652,
        "uid": 147,
        "name": "\u91ce\u83dc\u6c64",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u597d\u51e0\u6b21\u7ec8\u4e8eA\u6389\u4e86\n\u9996\u5148\u56de\u987e\u4e00\u4e0b\u672c\u9898\u9898\u610f\uff1a\n\n\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u6700\u591a\u80fd\u8d70\u5230\u591a\u5c11\u4e2a\u683c\u5b50(\u5305\u62ec\u81ea\u8eab)\n\n\u90a3\u6211\u4eec\u53ea\u9700\u8981\u5229\u7528bfs\u5230\u76ee\u6807\u70b9\u8ddd\u79bb\u4e3a\u6700\u5c0f\u503c\u7684\u7279\u6027\uff0c\n\n\u901a\u8fc7\u67d3\u8272\u6cd5(\u6807\u8bb0)\uff0c\u8bb0\u5f55\u8d70\u8fc7\u7684\u683c\u5b50\uff0c\u4e5f\u5c31\u53ef\u4ee5\u6c42\u5f97\u89e3\n\n\u4f46\u5982\u679c\u76f4\u63a5\u7528bfs\u662fA\u4e0d\u6389\u672c\u9898\u7684...\u4f1a\u53613\u4e2a\u70b9\n\n\u6b64\u65f6\u5c31\u9700\u8981\u8bb0\u5fc6\u5316\u641c\u7d22(\u9009\u4e00\u79cd\u57fa\u7840STL\u7ed3\u6784\u8bb0\u5f55)+bfs\u5c31\u53ef\u4ee5\u4e86~\n\n\u4e0d\u61c2\u7684\u53ef\u4ee5\u7ee7\u7eed\u770b\u4ee3\u7801~ \u6ce8\u91ca\u5df2\u7ecf\u5199\u5f97\u5f88\u5168\u4e86~\n\n**\u5982\u6709\u4e0d\u8db3\u4e4b\u5904\uff0c\u6b22\u8fce\u6279\u8bc4\u6307\u6b63\uff0c\u8c22\u8c22~**\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nconst int MAXSIZE_N=1000;\nconst int MAXSIZE_M=100000;\nstruct state{\n    int x;\n    int y;\n};//\u517b\u6210\u597d\u4e60\u60ef~\u7ed3\u6784\u4f53\u6709\u5229\u4e8e\u6211\u4eec\u8c03\u6574\u7a0b\u5e8f\n\nbool IsUsed[MAXSIZE_N][MAXSIZE_N];//\u8bb0\u5f55\u8ff7\u5babbfs\u7684\u904d\u5386\u72b6\u6001\nbool maze[MAXSIZE_N][MAXSIZE_N];//maze\u7528\u4e8e\u8bb0\u5f55\u8ff7\u5bab\u672c\u8eab\nint lookUpTable[MAXSIZE_N][MAXSIZE_N]={0};//\u5efa\u7acb\u67e5\u8be2\u8868\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\n\nint n,m;\nint cnt=0;//\u8bb0\u5f55\u53ef\u8d70\u7684\u683c\u5b50\u6570\n\nstate dir[4]={{1,0},{-1,0},{0,1},{0,-1}};\n\nvoid InitAll()\n{\n//    memcpy(maze,neverMaze,sizeof(neverMaze));\n//    memcpy(IsUsed,neverUsed,sizeof(neverUsed));//\u901f\u5ea6\u8fc7\u6162\n    cnt=0;\n}\n\nbool IsSafe(state now,state next)\n{\n    return(next.x>=0&&next.x<n&&next.y>=0&&next.y<n)//\u5728\u8303\u56f4\u5185\n    &&(maze[next.x][next.y]!=maze[now.x][now.y])//\u9898\u76ee\u5b9a\u4e49\u7684\u89c4\u5219,\u53ea\u80fd0->1\u62161->0\n    &&(IsUsed[next.x][next.y]!=true);//\u6ca1\u6709\u67d3\u8fc7\u8272or\u6ca1\u8d70\u8fc7\n}\n\n\nvoid bfs(state start)\n{\n    queue<state> Q;\n    queue<state> memoryPos;//\u7528\u4e8e\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u8bb0\u5f55\u8d70\u8fc7\u7684\u70b9\uff0c\u63d0\u9ad8\u901f\u5ea6\n    IsUsed[start.x][start.y]=true;\n    cnt++;\n    Q.push(start);\n    memoryPos.push(start);\n    while(!Q.empty()){\n        state now=Q.front();\n        Q.pop();\n        for(int i=0;i<4;i++){\n            state next=now;\n            next.x+=dir[i].x;\n            next.y+=dir[i].y;\n            if(IsSafe(now,next)){\n                IsUsed[next.x][next.y]=true;\n                memoryPos.push(next);\n                cnt++;\n                Q.push(next);\n            }\n        }\n    }\n    while(!memoryPos.empty())\n    {\n        state next=memoryPos.front();\n        //\u628a\u8d70\u8fc7\u7684\u70b9\u90fd\u8bb0\u5230\u8868\u4e2d\n        memoryPos.pop();\n        lookUpTable[next.x][next.y]=cnt;\n    }\n}\n\nint main()\n{\n    std::ios::sync_with_stdio(false);//\u52a0\u5feb\u8f93\u5165\u6d41\u7684\u901f\u5ea6\n    cin>>n>>m;\n    string in[n];\n    state start[m];\n    for(int i=0;i<n;i++)    cin>>in[i];\n    for(int i=0;i<m;i++){\n        cin>>start[i].x>>start[i].y;\n        start[i].x-=1;//\u8c03\u6574\u8f93\u5165\u7684\u5750\u6807\u5230\u4ece\u96f6\u5f00\u59cb\u7684\u5750\u6807\n        start[i].y-=1;\n    }\n\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(in[i][j]=='0')\n                maze[i][j]=false;//\u8f93\u5165\u76840\u8bb0\u4e3afalse\n            else\n                maze[i][j]=true;//1\u8bb0\u4e3atrue\n        }\n    }\n\n    for(int i=0;i<m;i++)\n    {\n        if(lookUpTable[start[i].x][start[i].y]!=0){\n            cout<<lookUpTable[start[i].x][start[i].y]<<'\\n';//\u5efa\u7acb\u67e5\u8be2\u8868\n            continue;\n        }\n\n        InitAll();//\u5f00\u59cb\u662f\u7528memcpy\u521d\u59cb\u5316IsUsed\u7684..\u540e\u6765\u53d1\u73b0\u67d3\u8272\u6cd5\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981\u91cd\u65b0\u521d\u59cb\u5316\uff0c\u4f46\u8fd8\u662f\u4fdd\u7559\u4e86\u51fd\u6570\n        bfs(start[i]);//\u5bf9\u6bcf\u4e2a\u8f93\u5165\u7684\u70b9\u8fdb\u884cbfs\n        cout<<cnt<<'\\n';\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1573645632,
        "uid": 257348,
        "name": "theHermit",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u76ee\u7684\u601d\u60f3\u5c31\u662f**bfs**\uff0c\u6709\u4e9b\u56f0\u96be\u7684\u662f\u6570\u636e\u592a\u5927\uff0c\u4e0d\u80fd\u88f8\u641c\n\n\u56e0\u4e3a\u5f53\uff08x1,y1\uff09\u548c\uff08x2,y2\uff09\u662f**\u8fde\u901a**\u7684\u65f6\u5019\uff0c\u5b83\u4eec\u7684\u7b54\u6848**\u5fc5\u5b9a\u76f8\u7b49**\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u5c06\u641c\u5230\u7684\u70b9\u7684\u7b54\u6848\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u5230\u65f6\u5019\u76f4\u63a5\u62ff\u51fa\u6765\u7528\u5c31\u53ef\u4ee5\u4e86\uff01\n\n## $Code$\n```pascal\nconst dx:array[1..4] of longint=(0,1,0,-1);\n      dy:array[1..4] of longint=(1,0,-1,0);\nvar n,m,xx,yy,i,j:longint;\n    ans,a:array[0..1001,0..1001] of longint;\n    f:array[0..1001,0..1001] of boolean;\n    b:array[0..1000001] of record x,y:longint; end;\n    k:char;\n\nprocedure bfs(x1,y1:longint);\n  var h,t,i,t1,t2:longint;\n  begin\n    h:=0;t:=1;\n    b[1].x:=x1;\n    b[1].y:=y1;//\u672c\u4eba\u7684\u7a0b\u5e8f\u521a\u5f00\u59cb\u524d\u9762\u52a0\u4e86fillchar\u5c31TLE\u2026\u2026\n    f[x1][y1]:=true;\n    while(h<t)do\n    begin\n      inc(h);\n      for i:=1 to 4 do\n      begin\n        t1:=b[h].x+dx[i];\n        t2:=b[h].y+dy[i];\n        if (t1<1) or (t1>n) or (t2<1) or (t2>n) then continue;\n        if (not f[t1][t2]) and (1-a[b[h].x][b[h].y]=a[t1][t2]) then\n        begin\n          inc(t);\n          b[t].x:=t1;\n          b[t].y:=t2;\n          f[t1][t2]:=true;\n        end;\n      end;\n    end;\n    for i:=1 to t do ans[b[i].x][b[i].y]:=t;//\u5c06\u5df2\u7ecf\u8d70\u8fc7\u7684\u70b9\u7684\u7b54\u6848\u4fdd\u5b58\u4e0b\u6765\n  end;\n\nbegin\n  readln(n,m);\n  for i:=1 to n do\n  begin\n    for j:=1 to n do\n    begin\n      read(k);\n      a[i][j]:=ord(k)-48;\n    end;\n    readln;\n  end;\n  fillchar(ans,sizeof(ans),255);\n  for i:=1 to n do//\u5148\u5168\u90e8\u626b\u4e00\u904d\n    for j:=1 to n do\n      if not f[i][j] then bfs(i,j);\n  for i:=1 to m do\n  begin\n    readln(xx,yy);\n    writeln(ans[xx][yy]);\n  end;\nend.\n```\n\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u5982\u6709\u66f4\u597d\u7684\u5efa\u8bae\uff0c\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u54e6~~",
        "postTime": 1565682337,
        "uid": 59359,
        "name": "Kevin5308",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u7531\u4e8e\u4e4b\u524d\u6ca1\u63a5\u89e6\u8fc7\u8fd9\u79cd\u7c7b\u578b\u7684DFS\u9898\uff0c\u4e00\u5f00\u59cb\u505a\u7684\u65f6\u5019\u601d\u8003\u4e86\u4e0d\u5c11\u65f6\u95f4\uff0c\u4e0d\u8fc7\u60f3\u660e\u767d\u4e4b\u540e\u5c31\u77e5\u9053\u7528DFS\u8fde\u901a\u5757\u505a\u5c31\u597d\u4e86\uff0c\u548c[P1454](https://www.luogu.org/problem/P1454)\u5723\u8bde\u591c\u7684\u6781\u5149 \u6709\u70b9\u7c7b\u4f3c\uff0c\u90fd\u5c5e\u4e8e\u4e00\u8fb9\u5faa\u73af\u904d\u5386\u4e00\u8fb9\u641c\u7d22\u904d\u5386\u7684\u7c7b\u578b\u3002\u533a\u522b\u5728\u4e8e\u8fd9\u9053\u9898\u9700\u8981\u628a\u7b54\u6848\u5b58\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u65b9\u4fbf\u8bbf\u95ee\u3002\n```cpp\nvoid dfs1 (int x , int y)\n{\n    if (x <= 0 || x > n || y <= 0 || y > n) return;\n    if (to[x][y]) return; //\u53bb\u91cd\n    to[x][y] = -1; //\u6253\u6807\u8bb0\n    cnt++; //\u7edf\u8ba1\u8fde\u901a\u7684\u5757\u6570\n    int t = map[x][y];\n    for (int i = 1 ; i <= 4 ; i++)\n    {\n        int nx = x + dx[i];\n        int ny = y + dy[i];\n        if (map[nx][ny] != t)\n            dfs1(nx , ny); // \u641c\u7d22\u4e0b\u4e00\u7ea7\n    }\n}\n```\n\u5148\u901a\u8fc7\u7b2c\u4e00\u4e2aDFS\u704c\u6c34\u627e\u51fa\u6240\u6709\u8fde\u901a\u7684\u4f4d\u7f6e\uff0c\u5e76\u6253\u4e0a\u6807\u8bb0\n```cpp\nvoid dfs2 (int x , int y)\n{\n    if (x <= 0 || x > n || y <= 0 || y > n) return;\n    if (to[x][y] != -1) return; //\u53bb\u91cd\n    to[x][y] = cnt; //\u66ff\u6362\n    for (int i = 1 ; i <= 4 ; i++)\n    {\n        int nx = x + dx[i];\n        int ny = y + dy[i];\n        dfs2(nx , ny); //\u641c\u7d22\u4e0b\u4e00\u7ea7\n    }\n}\n```\n\u8c03\u7528\u7b2c\u4e8c\u7684DFS\uff0c\u628a\u904d\u5386\u8fc7\u6253\u4e86\u6807\u8bb0\u7684to\u6570\u7ec4\u66ff\u6362\u4e3a\u8fde\u901a\u5757\u6570\n\n------------\n\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <iostream>\nusing namespace std;\nint n , m , cnt = 0;\nint map[1005][1005];\nint to[1005][1005];\nint dx[5] = {0,0,0,1,-1};\nint dy[5] = {0,1,-1,0,0};\n\nvoid dfs1 (int x , int y)\n{\n    if (x <= 0 || x > n || y <= 0 || y > n) return;\n    if (to[x][y]) return;\n    to[x][y] = -1;\n    cnt++;\n    int t = map[x][y];\n    for (int i = 1 ; i <= 4 ; i++)\n    {\n        int nx = x + dx[i];\n        int ny = y + dy[i];\n        if (map[nx][ny] != t)\n            dfs1(nx , ny);\n    }\n}\nvoid dfs2 (int x , int y)\n{\n    if (x <= 0 || x > n || y <= 0 || y > n) return;\n    if (to[x][y] != -1) return;\n    to[x][y] = cnt;\n    for (int i = 1 ; i <= 4 ; i++)\n    {\n        int nx = x + dx[i];\n        int ny = y + dy[i];\n        dfs2(nx , ny);\n    }\n}\n\nint main ( )\n{\n    cin >> n >> m;\n    for (int i = 1 ; i <= n ; i++)\n        for (int j = 1 ; j <= n ; j++)\n        {\n            char a;\n            cin >> a;\n            map[i][j] = a =='0'? 0 : 1;\n\t\t}\n    for (int i = 1 ; i <= n ; i++)\n        for (int j = 1 ; j <= n ; j++)\n        {\n            if (!to[i][j])\n            {\n                cnt = 0;\n                dfs1(i , j);//\u704c\u6c34\u5e76\u7edf\u8ba1\u6570\u91cf\n                dfs2(i , j);//\u904d\u5386\u5e76\u628acnt\u5199\u5165to\n            }\n        }\n    for (int i = 1 ; i <= m ; i++)\n    {\n        int x , y;\n        cin >> x >> y;\n        cout << to[x][y] << endl;//\u8bbf\u95eeto\n    }\n    return 0;\n}\n```\n\u6700\u540e\u7b97\u4e0b\u6765\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6O(4*n^2 + m)\uff0c\u53ea\u8981\u4e0d\u5361\u5e38\u6570\u8fd8\u662f\u80fdAC\u7684\u3002\n\n",
        "postTime": 1565189039,
        "uid": 132284,
        "name": "YYX26362",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "## \u5199\u5728\u524d\u9762\n\u7ecf\u8fc7\u4e09\u6b21\u7684\u4f18\u5316,\u7ec8\u4e8eAC\u4e86\n\n+ \u7b2c\u4e00\u6b21: \u7528int\u6570\u7ec4\u5b58\u7684\u6570\u636e,\u8bfb\u6570\u636e\u7684\u65f6\u5019\u5c31\u82b1\u8d39\u4e86\u5f88\u591a\u65f6\u95f4,\u4e24\u4e2a\u6d4b\u8bd5\u70b9\u8d85\u65f6.**\u6539\u7528char\u6570\u7ec4**\n+ \u7b2c\u4e8c\u6b21: \u76f8\u540c\u7684\u683c\u5b50\u6570\u7528\u8bbf\u95ee\u6807\u8bb0\u53bb\u8bb0\u5f55,\u7528\u4e86\u4e24\u4e2afor, \u8d85\u65f6.**\u4f7f\u7528\u6307\u9488**\n+ \u7b2c\u4e09\u6b21: \u6bcf\u6b21bfs\u7684\u8bbf\u95ee\u6807\u8bb0\u90fd\u7528memset\u53bb\u6e050\u4e86, \u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u70b9\u8d85\u65f6.**\u53bb\u9664memset**\n\n## \u601d\u8def\n\n\u5f88\u660e\u663e,\u9898\u76ee\u95ee\u90a3\u4e2a\u70b9, \u6211\u4eec\u7528bfs\u8dd1\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86,\u4f46\u662f\u51e1\u662f\u80fd**\u4e92\u76f8\u8fde\u901a\u53ef\u8fbe**\u7684\u70b9\u7b54\u6848\u90fd\u662f\u4e00\u6837\u7684. \u8dd1\u5b8c\u4e00\u904d,\u8bb0\u5f55\u4e0b\u6765\u5373\u53ef.\n\n\u4f46\u662f\u6211\u770b\u5230\u5f88\u591a\u4eba\u90fd\u662f\u7528\u4e00\u4e2a\u6570\u7ec4\u53bb\u5b58\u8fd9\u4e9b\u70b9,\u6700\u540e\u624d\u4e00\u4e2a\u4e00\u4e2a\u5730\u53bb\u8bb0\u5f55.\n**\u65e2\u7136\u90fd\u662f\u7528c++\u4e3a\u4f55\u4e0d\u7528\u6307\u9488?** \u8ba9\u8fd9\u4e9b\u70b9\u7684\u8bb0\u5f55\u90fd\u6307\u5411\u540c\u4e00\u5757\u5730\u5740\u5c31\u53ef\u4ee5\u4e86\u5440!\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\n\nchar a[1001][1001];            //\u5730\u56fe\nbool flag[1001][1001]={false}; //\u8bbf\u95ee\u6807\u8bb0\n\nint* b[1001][1001]={NULL};    //\u533a\u57df\u683c\u5b50\u6570 \u6307\u9488\nint cnt[1001][1001]={0};     // \u533a\u57df\u683c\u5b50\u6570,\u5176\u5b9e\u662f\u4e3a\u4e86\u751f\u6210\u4e0d\u540c\u7684\u5730\u5740,\n// \u5982\u679c\u76f4\u63a5\u5728 \u51fd\u6570\u91cc int cnt; \u7f16\u8bd1\u5668\u53ef\u80fd\u6bcf\u6b21\u90fd\u7ed9\u4f60\u5206\u914d\u540c\u4e00\u4e2a\u5730\u5740\n\nint dir[4][2]={{0,1},{0,-1},{1,0},{-1,0}};\n\nstruct node{\n\tint x,y;\n\n\tnode(int a,int b){\n\t\tthis->x=a;\n\t\tthis->y=b;\n\t}\n};\n\nint bfs(int x,int y,int n){\n\n\tqueue<node> q;\n\n\tq.push(node(x,y));\n\tflag[x][y]=true;\n\tcnt[x][y]=1;\n\n\n\tb[x][y] = &cnt[x][y];\n\n\twhile(!q.empty()){\n\t\tnode p =q.front();\n\t\tq.pop();\n\n\t\tfor(int i=0;i<4;i++){\n\t\t\tint dirx = p.x+dir[i][0];\n\t\t\tint diry = p.y+dir[i][1];\n\n\t\t\tif(dirx<0||dirx>=n||diry<0||diry>=n) continue;\n\n\t\t\tif(a[dirx][diry]+a[p.x][p.y]==97&&flag[dirx][diry]==false){\n\n\t\t\t\tq.push(node(dirx,diry)); //\u53ef\u884c,\u5165\u961f\n\t\t\t\tflag[dirx][diry]=true;   //\u8bbf\u95ee\u6807\u8bb0\n\n\t\t\t\tb[dirx][diry]=&cnt[x][y]; //\u6307\u5411\u8bb0\u5f55\u4e2a\u6570\u5730\u5740\n\t\t\t\tcnt[x][y]++;              //\u6570\u91cf+1\n\t\t\t}\n\n\t\t}\n\t}\n\treturn cnt[x][y];\n\n}\n\n\nint main(){\n\n\tint n,m,x,y;\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%s\",a[i]);\n\t}\n\n\tfor(int i=0;i<m;i++){\n\t\tcin>>x>>y;\n\t\tx--;\n\t\ty--;\n\t\tif(b[x][y]!=NULL){\n\t\t\tcout<<*b[x][y]<<endl;\n\t\t}else{\n\t\t\tcout<<bfs(x,y,n)<<endl;\n\t\t}\n\t}\n\n}\n```\n\n",
        "postTime": 1563947455,
        "uid": 226325,
        "name": "yly8848",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "# P1141 01\u8ff7\u5bab \u9898\u89e3 \n\n## ~~\u597d\u50cf\u8fd8\u662f\u633a\u6c34\u7684~~\n\n\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u8981\u6211\u4eec\u6c42\u8f93\u5165\u70b9\u7684\u8054\u901a\u5757\u70b9\u6570\n\n\n**\u524d\u8a00**\uff1a\n------------\n\n### **\u5f15\u7406**\uff1a\n\t\t\u5982\u679c\u4ece\u4e00\u4e2a0\u53ef\u4ee5\u5230\u4e00\u4e2a1\uff0c\u90a3\u4e48\u8fd9\u4e2a0\u548c\u8fd9\u4e2a1\u5c31\u662f\u8054\u901a\u7684\uff0c\u4ed6\u4eec\u7684\u8054\u901a\u5757\u70b9\u6570\u662f\u76f8\u540c\u7684\uff1b\u5982\u679c\u4e00\u4e2a1\u53ef\u4ee5\u5230\u4e00\u4e2a0\uff0c\u7ed3\u8bba\u4e5f\u662f\u4e00\u6837\u7684\u3002\n\n### **\u8bc1\u660e**\uff1a\n\t\t\u5982\u679c\u67d0\u4e00\u4e2a0\u53ef\u4ee5\u5230\u67d0\u4e00\u4e2a1\uff0c\u90a3\u4e48\u8fd9\u4e2a1\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fd9\u4e2a0\uff1b\n        \u6211\u4eec\u8bf4\u8fd9\u4e2a0\u548c1\u4e4b\u95f4\u6709\u4e00\u6761\u201c\u8054\u901a\u7684\u8def\u5f84\u201d\uff0c\u8def\u5f84\u4e0a\u7684\u8054\u901a\u5757\u70b9\u6570\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u5ef6\u4f38\u51fa\u53bb\u7684\u8054\u901a\u5757\u70b9\u6570\u4e5f\u76f8\u540c\uff1a\n        \u5373\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u70b9\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff08\u5982\u4e00\u4e2a0\u548c\u4e00\u4e2a1\uff09\uff0c\u5b83\u4eec\u7684\u8054\u901a\u5757\u70b9\u6570\u76f8\u540c\u3002\n        \u8bc1\u6bd5\u3002\n        \n        \n\n**\u601d\u8def\u5206\u6790**\uff1a\n------------\n- \u6211\u4eec\u77e5\u9053\uff0c\u6c42\u8054\u901a\u5757\u70b9\u6570\u53ef\u4ee5\u9009\u62e9$DFS$\u548c$BFS$\uff0c\u5e76\u4e14$DFS$\u6bd4$BFS$\u8981\u5feb\u4e00\u4e9b\u3002\n\n### \u90a3\u4e48\u5148\u8bb2DFS\uff1a\n\n1. \u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e0e\u6bcf\u4e00\u7ec4\u8be2\u95ee\u6570\u636e\u90fd\u662f\u7279\u6b8a\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u7f16\u53f7\u4e0d\u540c(\u968f\u5faa\u73af\u53d8\u91cf\u6539\u53d8)\u3002\u90a3\u4e48\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u4e0a\u9762\u5f15\u7406\u5df2\u7ecf\u8bf4\u5230\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u662f\u8054\u901a\u7684\uff0c\u90a3\u5b83\u4eec\u80fd\u5230\u7684\u70b9\u6570\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6bcf\u4e00\u7ec4\u8be2\u95ee\u7f16\u53f7\u6765\u6807\u8bb0\u6bcf\u4e00\u6b21\u8be2\u95ee\u8d70\u5230\u8fc7\u7684\u70b9\uff0c\u5982\u679c\u540e\u9762\u53c8\u5728\u8bbf\u95ee\u8fc7\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9 $vis[i][j]$\uff08\u8bbf\u95ee\u6570\u7ec4\uff09\u76f4\u63a5\u6307\u5411\u8bbf\u95ee\u8fc7\u8fd9\u4e2a\u70b9$(i,j)$\u7684\u90a3\u7ec4\u6570\u636e\u7f16\u53f7\uff0c\u8fd9\u6837\u6211\u4eec\u4e0d\u4ec5\u5b9e\u73b0\u4e86\u5728\u7ebf\u7b97\u6cd5\uff0c\u8fd8\u5b9e\u73b0\u4e86\u6807\u8bb0\u6240\u6709\u8054\u901a\u5757\n1. \u5269\u4e0b\u7684\u5c31\u662f\u201c\u8d70\u8ff7\u5bab\u201d\u95ee\u9898\u4e86\uff1a\u4e0b\u4e00\u4e2a\u70b9\u4e0e\u5f53\u524d\u70b9\u7b26\u53f7\u76f8\u540c(\u53730\u4e0e0\uff1b1\u4e0e1)\u7684\uff0c\u4e0d\u80fd\u8d70\uff1b\u8d8a\u754c\u7684\u4e0d\u80fd\u8d70\uff1b\u8bbf\u95ee\u8fc7\u7684\u4e0d\u80fd\u8d70\u3002\n\n\u81f3\u6b64\uff0c\u7528$DFS$\u5b8c\u6210\u6b64\u9898\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\n\n~~\u6254\u4ee3\u7801~~\n\n```cpp\n#include<cstdio>\n#include<string>\nusing namespace std;\nint n,m,x,y,k[1001][1001],ans[100001];\nchar s[1001][1001];\ninline bool check(int x,int y)\n{\n    if(x>n || y>n || x<0 || y<0 || k[x][y])\n        return false;\n    return true;\n}\ninline void dfs(int _0or1,int i,int x,int y)\n{\n    if(_0or1!=s[x][y]-'0' || !check(x,y)) return;\n    k[x][y]=i; ans[i]++;\n    dfs(!_0or1,i,x-1,y);dfs(!_0or1,i,x+1,y);\n    dfs(!_0or1,i,x,y-1);dfs(!_0or1,i,x,y+1);\n  //!_0or1 \u7684\u610f\u601d\u662f\u4f20\u5230\u4e0b\u4e00\u4e2a\u70b9\u7684\u7b26\u53f7\u4e0e\u5f53\u524d\u4e0d\u540c\n  //\u82e5\u5f53\u524d _0or1 \u662f0,\u5219!_0or1=1;\u53cd\u4e4b\u4ea6\u7136\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++)\n        scanf(\"%s\",s[i]);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        --x;--y; \n  //\u8f93\u5165\u5b57\u7b26\u4ece0,0\u5f00\u59cb\u5b58\u7684\n  //\u53e6\u4e00\u79cd\u5b58\u56fe\u65b9\u5f0f\u770bbfs\n        if(!k[x][y])\n            dfs(s[x][y]-'0',i,x,y);\n        else ans[i]=ans[k[x][y]];\n        printf(\"%d\\n\",ans[i]);\n    }\n    return 0;\n}\n```\n\n\n### BFS\uff1a\n\n- \u601d\u8def\u4e0e$DFS$\u662f\u5927\u540c\u5c0f\u5f02\u7684\uff0c\u90a3\u4e48\u4e0a\u9762\u662f\u7528\u5b57\u7b26\u6570\u7ec4\u5b58\u7684\u56fe\uff0c\u4e0b\u9762$bfs$\u6211\u5c31\u5199\u4e00\u4e2a\u7528$bool$\u6570\u7ec4\u5b58\u7684\u56fe\u597d\u4e86($int$\u5b58\u4e5f\u53ef\u4ee5)\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\n\nconst int dx[]={0,0,1,-1},\n\t\t  dy[]={1,-1,0,0};\n\t\t  \nconst int N=1010;\nconst int M=100010;\t\t  \n\nstruct rec {\n\tbool op; //\u5b58\u7b26\u53f7 \n\tint x,y; //\u5b58\u5750\u6807 \n\t//int root;\n};\n\nbool a[N][N];\nint vis[N][N],ans[M];\nint n,m;\n\nvoid bfs(int x,int y,int s) {\n\tqueue<rec> p;  rec l;\n\tl.x=x, l.y=y, l.op=a[x][y];\n\tp.push(l); vis[x][y]=s;\n\twhile(p.size()) {\n\t\trec now=p.front(); p.pop();\n\t\tfor(int i=0;i<4;i++) {\n\t\t\tint rex=now.x+dx[i],\n\t\t\t\trey=now.y+dy[i];\n\t\t\tif(rex<1 || rey<1 || rex>n || rey>n) continue;\n\t\t\tif(a[rex][rey]==now.op || vis[rex][rey]) continue;\n\t\t\tvis[rex][rey]=s;\n\t\t\trec next; next.x=rex, next.y=rey, next.op=!now.op;\n\t\t\tans[s]++; p.push(next);\n\t\t}\n\t}\n\treturn;\n}\n\nint main() {\n\t\n\tscanf(\"%d %d\\n\",&n,&m);\n    //\u8fd9\u91cc\u8f93\u5165\u5fc5\u987b\u4e25\u683c\u6309\u7167\u8fd9\u79cd\u65b9\u5f0f \n\t//scanf(\"%d %d\\n\",&n,&m); \u4e0d\u5199 \\n \u4f1a\u70b8 \n\t//\u6bcf\u8f93\u5165\u4e00\u884c\u4e0d\u8bfb\u5165 \\n \u4f1a\u70b8\n\t//\u56e0\u4e3a\u8bfb\u5165\u5b57\u7b26 \u6709\u4e00\u4e2a'\\n'\uff08\u6362\u884c\u7b26\uff09 \u800c\u6570\u5b57\u4e0d\u4f1a \n\tfor(int i=1;i<=n;i++,scanf(\"\\n\")) \n\t  for(int j=1;j<=n;j++) {\n\t  \tchar c;\n\t  \tscanf(\"%c\",&c);\n\t  \tif(c=='1') a[i][j]=1;\t\t\n\t  }\n\n\tfor(int i=1;i<=m;i++) {\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(!vis[x][y]) ans[i]=1,bfs(x,y,i);\n\t\telse ans[i]=ans[vis[x][y]];\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}    \n\t\n\treturn 0;\n}\n```\n\n\n$END$\n------------\n**\u8bc4\u6d4b\u8bb0\u5f55**\uff1a\n\n$DFS$:[01\u8ff7\u5babDFS\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/recordnew/show/18747377)\n\n$BFS$:[01\u8ff7\u5babBFS\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/recordnew/show/20235933)\n\n~~\u8b66\u544a\u5df2\u6539\u6b63~~\n\n\n\n\n",
        "postTime": 1562159986,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u628a1E6\u5199\u62101E5\u800cWA\u4e86\u4e00\u4e2a\u70b9\u59cb\u7ec8\u8c03\u4e0d\u51fa\u6765\u7684zcy\u662f\u5c51\uff08\u786e\u4fe1\uff09\n## \u601d\u8def\u5206\u6790\n\u65e2\u71360\u53ef\u4ee5\u52301\uff0c1\u53ef\u4ee5\u52300\uff0c\u4e0d\u96be\u53d1\u73b0\u4e24\u4e2a\u683c\u5b50\u95f4\u7684\u5230\u8fbe\u662f\u53cc\u5411\u7684\uff0c\u800c\u4e14\u4ece\u67d0\u70b9\u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\uff08\u5305\u62ec\u81ea\u8eab\uff09\u6784\u6210\u7684\u96c6\u5408\u4e2d\u4efb\u610f\u4e24\u70b9\u90fd\u80fd\u4e92\u76f8\u5230\u8fbe\uff0c\u6362\u8a00\u4e4b\uff0c\u8fd9\u662f\u4e00\u4e2a\uff08\u56e0\u4e3a\u65e0\u5411\u56fe\u6240\u4ee5\u65e0\u6240\u8c13\u5f3a\u4e0d\u5f3a\uff09\u8054\u901a\u5206\u91cf\u3002\n### \u770b\u770b\u6570\u636e\u89c4\u6a211E5\u6b21\u8be2\u95ee\u6240\u4ee5\u80af\u5b9a\u4e0d\u80fd\u5728\u7ebf\u2026\u2026\n-  DFS\u627e\u5230\u8fde\u901a\u5206\u91cf\n\n- \u5bf9\u540c\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u91cc\u7684\u5404\u81ea\u67d3\u540c\u4e00\u79cd\u989c\u8272\n\n- \u628a\u67d3\u8fc7\u8272\u7684\u56fe\u626b\u4e00\u904d\u8bb0\u5f55\u6bcf\u79cd\u989c\u8272\u7684\u683c\u5b50\u6570\u76ee\n\n- \u5bf9\u6bcf\u7ec4\u8be2\u95ee\u67e5\u8868\u5373\u53ef\n## \u4ee3\u7801\u5b9e\u73b0\n\n\n\n```cpp\nfor (int i = 1; i <= n; i++)\n\tfor (int j = 1; j <= n; j++)\n\t\tif (!ts[i][j]) {\n\t\t\tdfs(i, j, graph[i][j]);\n\t\t\tindex++;\n\t\t}\n```\n\n\n------------\n\n\n```cpp\nvoid dfs(int x, int y, char val) {\n\tvis[x][y] = 1;\n\tts[x][y] = index;\n\tif ((!ts[x + 1][y]) && x + 1 <= n && graph[x + 1][y] != val && (!vis[x + 1][y])) dfs(x + 1, y, graph[x + 1][y]);\n\tif ((!ts[x - 1][y]) && x - 1 >= 1 && graph[x - 1][y] != val && (!vis[x - 1][y])) dfs(x - 1, y, graph[x - 1][y]);\n\tif ((!ts[x][y + 1]) && y + 1 <= n && graph[x][y + 1] != val && (!vis[x][y + 1])) dfs(x, y + 1, graph[x][y + 1]);\n\tif ((!ts[x][y - 1]) && y - 1 >= 1 && graph[x][y - 1] != val && (!vis[x][y - 1])) dfs(x, y - 1, graph[x][y - 1]);\n\tvis[x][y] = 0;\n}\n```\nindex\u662f\u4e00\u4e2a\u8bb0\u5f55\u989c\u8272\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u521d\u503c\u4e3a1\uff0c\u5728\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u65b0\u8fde\u901a\u5206\u91cf\u65f6\u52a0\u4e00\n\nts\u6570\u7ec4\u662f\u67d3\u8272\u540e\u7684\u56fe\uff0c\u800cvis\u6570\u7ec4\u7528\u4e8edfs\n\n\u53ea\u5bf9ts\u4e3a0\u7684\u70b9dfs\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u4e0a\u91cd\u590d\u8d70\u6765\u8d70\u53bb\n\n\n------------\n```cpp\nfor (int i = 1; i <= n; i++)\n\tfor (int j = 1; j <= n; j++)\n\t\tcolor[ts[i][j]]++;\nfor (int i = 1; i <= m; i++) {\n\tint a, b;\n\tscanf(\"%d%d\", &a, &b);\n\tprintf(\"%d\\n\", color[ts[a][b]]);\n}\n```\n\u8fd9\u91cc\u5c31\u662f\u5bf9\u989c\u8272\u8ba1\u6570\uff0c\u518d\u5904\u7406\u6bcf\u4e00\u7ec4\u8be2\u95ee\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nint n, m, index = 1, ts[1021][1021], vis[1021][1021];\nint color[1000021];\nchar graph[1021][1021];\n\nvoid dfs(int x, int y, char val);\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tcin >> graph[i][j];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tif (!ts[i][j]) {\n\t\t\t\tdfs(i, j, graph[i][j]);\n\t\t\t\tindex++;\n\t\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tcolor[ts[i][j]]++;\n\tfor (int i = 1; i <= m; i++) {\n\t\tint a, b;\n\t\tscanf(\"%d%d\", &a, &b);\n\t\tprintf(\"%d\\n\", color[ts[a][b]]);\n\t}\n\treturn 0;\n}\n\nvoid dfs(int x, int y, char val) {\n\tvis[x][y] = 1;\n\tts[x][y] = index;\n\tif ((!ts[x + 1][y]) && x + 1 <= n && graph[x + 1][y] != val && (!vis[x + 1][y])) dfs(x + 1, y, graph[x + 1][y]);\n\tif ((!ts[x - 1][y]) && x - 1 >= 1 && graph[x - 1][y] != val && (!vis[x - 1][y])) dfs(x - 1, y, graph[x - 1][y]);\n\tif ((!ts[x][y + 1]) && y + 1 <= n && graph[x][y + 1] != val && (!vis[x][y + 1])) dfs(x, y + 1, graph[x][y + 1]);\n\tif ((!ts[x][y - 1]) && y - 1 >= 1 && graph[x][y - 1] != val && (!vis[x][y - 1])) dfs(x, y - 1, graph[x][y - 1]);\n\tvis[x][y] = 0;\n}\n```",
        "postTime": 1562144834,
        "uid": 30848,
        "name": "zcyaya",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u975eSTL\u515a\u798f\u5229\n\u8fd9\u662f\u6211\u5199\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\n\u5178\u578b\u7684BFS\n\n\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u6709\u8be6\u7ec6\u89e3\u91ca\n```cpp\n#include <bits/stdc++.h> \nusing namespace std;\nint dx[4]={0,0,-1,1};\nint dy[4]={1,-1,0,0}; //4\u4e2a\u65b9\u5411 \nint n,m,q[935000][2];//n\u548cm\uff0c\u961f\u5217q\uff0c\u5176\u4e2d\u7b2c\u4e8c\u7ef40\u4ee3\u8868\u6a2a\u5750\u6807\uff0c1\u4ee3\u8868\u7eb5\u5750\u6807 \nint h[900000];//\u8bb0\u5f55\u8fde\u901a\u56fe,(\u5e76\u67e5\u96c6,h[1]\u8868\u793a\u7b2c\u4e00\u4e2a\u96c6\u5408(\u4e5f\u5c31\u662f\u8fde\u901a\u56fe)\u4e2d\u7684\u70b9\u6570) \nchar g[1035][1035];//\u8f93\u51650,1,\u7531\u4e8e\u4e2d\u95f4\u6ca1\u6709\u7a7a\u683c,\u5c31\u7528char\u4e86 \nint v[1035][1035];//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7,.v[a][b]\u7684\u503c\u5c31\u662fab\u8fd9\u4e2a\u70b9\u5728\u7b2cv[a][b]\u4e2a\u56fe\u4e2d,\u5c5e\u4e8e\u7b2cv[a][b]\u4e2a\u96c6\u5408 \nint T=0;\t//\u73b0\u5728\u6b63\u5728\u5904\u7406\u7b2cT\u4e2a\u96c6\u5408(\u8fde\u901a\u56fe) \nint main()\n{\n\tint i,j,k;\n\tscanf(\"%d%d\",&n,&m);//\u8f93\u5165 \u4e0d\u591a\u8bf4 \n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++) cin>>g[i][j];\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++)\n\t\t{\n\t\t\tif(!v[i][j])//\u5982\u679ci.j\u8fd9\u4e2a\u70b9\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7 ,\u90a3\u6211\u4eec\u5c31\u5f00\u59cb\u5427! \n\t\t\t{\n\t\t\t\t++T;//\u5b58\u5165\u65b0\u7684\u96c6\u5408 \n\t\t\t\tint f=1,r=1;//\u961f\u5934\u548c\u961f\u5c3e \n\t\t\t\tq[1][0]=i,q[1][1]=j;//\u521d\u59cb\u70b9\u5165\u961f \n\t\t\t\tv[i][j]=T;//\u6807\u8bb0\u8fd9\u4e2a\u70b9\u5728\u7b2cT\u4e2a\u96c6\u5408\u4e2d \n\t\t\t\twhile(f<=r) \n\t\t\t\t{\n\t\t\t\t\tint X=q[f][0],Y=q[f][1];//\u5148\u5b58\u5165\u8fd9\u4e2a\u70b9\u7684\u5750\u6807 \n\t\t\t\t\tfor(k=0;k<4;k++)//4\u4e2a\u65b9\u5411\u679a\u4e3e \n\t\t\t\t\t{\n\t\t\t\t\t\tif(X+dx[k]<=n&&X+dx[k]>0&&Y+dy[k]<=n&&Y+dy[k]>0&&!v[X+dx[k]][Y+dy[k]]&&g[X][Y]!=g[X+dx[k]][Y+dy[k]])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//\u8fd9\u4e2a\u70b9\u6ca1\u51fa\u754c\u5e76\u4e14\u8fd9\u4e2a\u70b9\u8fd8\u6ca1\u88ab\u8bbf\u95ee\u8fc7\n\t\t\t\t\t\t\t//\u5728\u8fd9\u91cc\u6ce8\u610f\u4e00\u4e0b,\u4e00\u65e6\u8bbf\u95ee\u8fc7\u4e00\u4e2a\u70b9,\u5fc5\u5b9a\u5c31\u662f\u7ed3\u679c,\u56e0\u4e3a\u8fd9\u662f\u8fde\u901a\u56fe,(\u96c6\u5408)\n\t\t\t\t\t\t\t//\u53ef\u4ee5\u8bc1\u660e\u6bcf\u4e2a\u70b9\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\tfor example:\n\t\t\t\t\t\t\t\u8bc1\u660e \n\t\t\t\t\t\t\t\u5047\u5982\u67d0\u4e2a\u70b9 \u65e2\u5c5e\u4e8e1\u96c6\u5408\uff0c\u53c8\u5c5e\u4e8e 2\u96c6\u5408\n\t\t\t\t\t\t\t\u90a3\u4e481,2\u96c6\u5408\u4e2d\u7684\u70b9\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\n\t\t\t\t\t\t\t1,2\u96c6\u5408\u662f\u540c\u4e00\u4e2a\u96c6\u5408 \n\t\t\t\t\t\t\t*/ \n\t\t\t\t\t\t\tq[++r][0]=X+dx[k];//\u8fd9\u4e2a\u70b9\u5165\u961f \n\t\t\t\t\t\t\tq[r][1]=Y+dy[k];\n\t\t\t\t\t\t\tv[q[r][0]][q[r][1]]=T;//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u7b2cT\u4e2a\u96c6\u5408 \n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\t++f;//\u641c\u7d22\u4e0b\u4e00\u4e2a,.\u961f\u5934+1(push\u6211\u4e0d\u4f1a\u7528,\u6211\u662f\u975eSTL\u515a) \n\t\t\t\t}\n\t\t\t\th[T]=r;//\u6240\u4ee5\u7efc\u4e0a,\u8fd9\u4e2a\u96c6\u5408\u5185\u6709r\u4e2a\u70b9!\u4e0d\u662ff!\u8fd9\u662f\u961f\u5217\u4e3a\u7a7a,\u6211\u8bbe\u7f6e\u7684f=r+1 \n\t\t\t}\n\t\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);//\u5206\u522b\u8f93\u5165xy\uff0c\u5f00\u59cb\u8be2\u95ee \n\t\tprintf(\"%d\\n\",h[v[x][y]]);//\u67e5\u627exy\u8fd9\u4e2a\u70b9\u5c5e\u4e8e\u7b2cv[x][y]\u4e2a\u96c6\u5408\uff0c\u7b2cv[x][y]\u4e2a\u96c6\u5408\u91cc\u6709h[v[x][y]] \u4e2a\u70b9\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef \n\t}\n\treturn 0;\n}\n\n```\n\u6700\u540e\u795d\u613f\u81ea\u5df1\u80fd\u57282019\u5e74AKNOIP~~(\u82e6\u903c\u7684\u81ea\u5df1\u662f\u6c5f\u82cf\u9ad8\u8003\u6700\u540e\u4e00\u5c4a\uff0c\u65e0\u6cd5\u590d\u8bfb)~~",
        "postTime": 1557045835,
        "uid": 115947,
        "name": "huangx607087",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "# **\u8bf4\u660e\uff1a** \n   \u521a\u5f00\u59cb\u9898\u610f\u7406\u89e3\u6709\u8bef\uff0c\u63d0\u8bae\u8981\u6c42\u627e\u51fa\u6240\u6709\u80fd\u591f\u5230\u8fbe\u7684\u5c31\u884c\uff0c\u6ca1\u6709\u4e00\u8d9f\u4e0b\u6765\u6240\u80fd\u5230\u8fbe\u7684\u6700\u5927\u5757\u6570\u7684\u9650\u5236\uff0c\u4ee5\u81f3\u4e8e\u4f7f\u7528\u4e86DFS\u641c\u7d22\uff0c\u65f6\u95f4\u4e0a\u8d85\u65f6\u4e86\u51e0\u4e2a\u6d4b\u8bd5\u70b9\uff0c\u7528BFS\u641c\u7d22\u66f4\u7b80\u5355\uff0c\u4f46\u61d2\u5f97\u6539\u4e86\uff0c\u5c31\u7528\u6df1\u5ea6\u5199\u4e86\uff0c\u5f53\u7ec3\u624b\u4e86\n\n## \u601d\u8def\uff1a## \n\u7528DFS\u4ece\u8d77\u59cb\u70b9\u4e00\u76f4\u641c\u7d22\u5230\u65e0\u6cd5\u518d\u8d70\uff0c\u5b9a\u4e49\u6570\u7ec4vis\u4fdd\u5b58\u5757\u662f\u5426\u8d70\u8fc7\uff0chow\u4fdd\u5b58\u5757\u6570\uff0c\u51e0\u4e2aif\u52a0switch\u5224\u65ad\u884c\u8d70\u65b9\u5411\u5e76\u8fed\u4ee3\u4ee5\u53ca\u5224\u65ad\u4e0b\u4e00\u4e2a\u9700\u8981\u7684\u5730\u5757\u6570\u5b57\u5373\u53ef\u3002\n\n## ps:\u53bb\u6389\u6ce8\u91ca\u90e8\u5206\u5219\u4e3a\u5982\u679c\u8981\u6c42\u4e00\u8eba\u4e0b\u6765\u5219\u80fd\u8d70\u8fc7\u7684\u6700\u591a\u5757\u6570\n\n------------\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio> \n#include <queue>\n#include <cstring>\n#define N 100001\nusing namespace std;\nint Mig[1001][1001];//\u8ff7\u5bab \nint vis[1001][1001];//\u6807\u8bb0 \nint star[N][2];\nchar MG[1001];\nint much=1,how=1;//\u8bb0\u5f55\u683c\u5b50\u6570 \n\n\n/*\n\t\u6709\u51e0\u4e2a\u6d4b\u8bd5\u70b9\u6ca1\u901a\u8fc7\uff0c\u540e\u6765\u53d1\u73b0\u662f\u627e\u6240\u6709\u80fd\u591f\u5230\u8fbe\u7684\u5757\uff0c\u800c\u4e0d\u662f\u4e00\u8d9f\u4e0b\u6765\u6700\u591a \n\t\u9898\u610f\u7406\u89e3\u9519\u8bef\uff0c\u8fd8\u662f\u5e7f\u5ea6\u66f4\u65b9\u4fbf\uff0c\u4f46\u61d2\u5f97\u6539\u4e86\n\t\u53bb\u6389\u6ce8\u91ca\u5c31\u662f\u4e00\u8d9f\u4e0b\u6765\u6700\u591a\u7684\u5feb\u6570 \n*/\nvoid dfs(int n,int star_x,int star_y)\n{\n\tvis[star_x][star_y]=1;\n\tswitch(Mig[star_x][star_y])\n\t{\n\t\tcase 1://\u5982\u679c\u5f53\u524d\u70b9\u4e3a1\uff0c\u5219\u56db\u4e2a\u65b9\u5411\u8fdb\u884c\u641c\u7d22 \n\t\t\tif(Mig[star_x+1][star_y]==0&&vis[star_x+1][star_y]==0&&star_x+1<=n)\n\t\t\t{\n\t\t\t\thow++;\n\t\t\t\tdfs(n,star_x+1,star_y);\n\t\t\t//\tvis[star_x+1][star_y]=0;\n\t\t\t\n\t\t\t}\n\t\t\tif(Mig[star_x-1][star_y]==0&&vis[star_x-1][star_y]==0&&star_x-1>0)\n\t\t\t{\n\t\t\t\thow++;\n\t\t\t\tdfs(n,star_x-1,star_y);\n\t\t\t//\tvis[star_x-1][star_y]=0;\n\t\t\t\n\t\t\t} \n\t\t\tif(Mig[star_x][star_y-1]==0&&vis[star_x][star_y-1]==0&&star_y-1>0)\n\t\t\t{\n\t\t\t\thow++;\n\t\t\t\tdfs(n,star_x,star_y-1);\n\t\t\t//\tvis[star_x][star_y-1]=0;\n\t\t\t\n\t\t\t}\n\t\t\tif(Mig[star_x][star_y+1]==0&&vis[star_x][star_y+1]==0&&star_y+1<=n)\n\t\t\t{\n\t\t\t\thow++;\n\t\t\t\tdfs(n,star_x,star_y+1);\n\t\t\t//\tvis[star_x][star_y+1]=0;\n\n\t\t\t}\n\t\t\t//\u82e5\u56db\u4e2a\u65b9\u5411\u90fd\u8d70\u4e0d\u4e86\n\t\t//\tvis[star_x][star_y]=0;\n\t\t//\tif(how>much)\n\t\t//\t\tmuch=how;\n\t\t//\thow--; \n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tif(Mig[star_x+1][star_y]==1&&vis[star_x+1][star_y]==0&&star_x+1<=n)\n\t\t\t{\n\t\t\t\thow++;\n\t\t\t\tdfs(n,star_x+1,star_y);\n\t\t//\t\tvis[star_x+1][star_y]=0;\n\t\t\t}\n\t\t\tif(Mig[star_x-1][star_y]==1&&vis[star_x-1][star_y]==0&&star_x-1>0)\n\t\t\t{\n\t\t\t\thow++;\n\t\t\t\tdfs(n,star_x-1,star_y);\n\t\t//\t\tvis[star_x-1][star_y]=0;\n\t\t\t} \n\t\t\tif(Mig[star_x][star_y-1]==1&&vis[star_x][star_y-1]==0&&star_y-1>0)\n\t\t\t{\n\t\t\t\thow++;\n\t\t\t\tdfs(n,star_x,star_y-1);\n\t\t//\t\tvis[star_x][star_y-1]=0;\n\t\t\t}\n\t\t\tif(Mig[star_x][star_y+1]==1&&vis[star_x][star_y+1]==0&&star_y+1<=n)\n\t\t\t{\n\t\t\t\thow++;\n\t\t\t\tdfs(n,star_x,star_y+1);\t\n\t\t//\t\tvis[star_x][star_y+1]=0;\n\t\t\t}\n\t\t\t//\u82e5\u56db\u4e2a\u65b9\u5411\u90fd\u8d70\u4e0d\u4e86 \n\t\t//\tvis[star_x][star_y]=0;\n\t//\t\tif(how>much)\n\t\t//\t\tmuch=how; \n\t\t\tbreak;\n\t} \n\t\n}\nint main() \n{\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",MG);\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tMig[i][j]=MG[j-1]-'0';\t\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d %d\",&star[i][0],&star[i][1]);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tdfs(n,star[i][0],star[i][1]);\n\t//\tprintf(\"%d\\n\",much);\n\t\tprintf(\"%d\\n\",how);\n\t\tmuch=1,how=1;\n\t}\n\t\t\n\treturn 0;\n}\n```",
        "postTime": 1548916225,
        "uid": 165784,
        "name": "wuyinyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\uff08\u5fd9\u4eba\u8bf7\u8df3\u8fc7\u5206\u5272\u7ebf\u5185\u7684\u90e8\u5206\uff09\n\n================\u5206\u5272\u7ebf===================\n\n\u5728\u6545\u4e8b\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u8981\u7ed9\u5927\u5bb6\u8bb2\u4e00\u4e2a\u6545\u4e8b\u3002\n\n\u4ece\u524d\uff0c\u6709\u4e00\u4e2a\u849f\u84bb\u3002\u4ed6\u4e0d\u4f1aBFS\uff0c\u9898\u89e3\u4e5f\u5199\u7684\u4ee4\u4ed6\u61f5\u903c\u3002\u4e8e\u662f\uff0c\u4ed6\u51b3\u5b9a--\u5199\u9898\u89e3\uff01\n\n\n================\u5206\u5272\u7ebf===================\n\n\n\u597d\u7684\u5404\u4f4d\u670b\u53cb\uff0c\u73b0\u5728\uff0c\u9898\u89e3\u6b63\u5f0f\u5f00\u59cb\u3002\n\n\u6211\u7684\u9898\u89e3\u8ddf\u5176\u4ed6\u4eba\u60f3\u6cd5\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u641c\u8054\u901a\u5757\u3002**\u4e00\u4e2a\u8054\u901a\u5757\u5185\u7684\u683c\u5b50\u80fd\u5230\u8fbe\u7684\u683c\u5b50\u6570\u662f\u76f8\u7b49\u7684\u3002**\uff08\u597d\u597d\u60f3\u60f3\uff09\u5047\u8bbeA\u683c\u5b50\u53ea\u80fd\u5230\u8fbeB\u683c\u5b50\u548cC\u683c\u5b50\uff0c\u5219B\u53ea\u80fd\u5230\u8fbeA/C\uff0cC\u53ea\u80fd\u5230\u8fbeA/B\u3002\n\n**\u6bcf\u4e00\u6b21DFS\uff0c\u5219\u4f1a\u641c\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u8054\u901a\u5757\uff0c\u6211\u4eec\u7ed9\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u6bcf\u4e00\u4e2a\u683c\u5b50\u6253\u4e0a\u4e00\u4e2a\u4e13\u5c5e\u4e8e\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u6807\u8bb0\u3002**\u518d\u8bbe\u7acb\u4e00\u4e2a\u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u4e2a\u8054\u901a\u5757\u7684\u6807\u8bb0\u4ee3\u8868\u7684\u503c\uff08**\u5373\u80fd\u5230\u8fbe\u7684\u683c\u5b50\u6570**\uff09\u3002\n\n\u4e8e\u662f\u8be2\u95ee\u65f6\uff0c\u53ea\u9700\u8981\u8f93\u51fa\u8be2\u95ee\u683c\u5b50\u7684\u6807\u8bb0\u6240\u4ee3\u8868\u7684\u503c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6:$O(2^n)$\u3002\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff0c\u4f1a\u8fdb\u884c\u66f4\u52a0\u8be6\u7ec6\u7684\u6ce8\u91ca\u3002\n\n```\n# include <bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\u4e0d\u89e3\u91ca\nusing namespace std;\nchar a[1001][1001];//\u4fdd\u5b58\u5730\u56fe\nint n,m;//\u5982\u9898\u76ee\u6240\u8ff0\nbool vst[1001][1001];//\u5224\u65ad\u662f\u5426\u8bbf\u95ee\uff08\u907f\u514d\u6b7b\u641c\u51fa\u4e0d\u6765\uff09\nint ls[1000323];//\u6570\u7ec4\u8981\u5f00\u5927\u4e00\u70b9\uff01ls\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u6807\u8bb0\u5bf9\u5e94\u7684\u683c\u5b50\u6570\nint lian[1001][1001];//\u6807\u8bb0\nint sum,liansum;//sum\u662f\u672c\u6b21\u641c\u7d22\uff08\u5373\u5f53\u524d\u8054\u901a\u5757\uff09\u7684\u683c\u5b50\u6570\u91cf\uff0cliansum\u662f\u5f53\u524d\u8054\u901a\u5757\u6570\u91cf\nint fx[5]={2,1,-1,0,0};\nint fy[5]={2,0,0,-1,1};//\u65b9\u4fbf\u641c\u7d22\nvoid dfs(int x,int y)//DFS\n{\n\tif(x<1||x>n||y<1||y>n)return;//\u68c0\u67e5\u8d8a\u754c\n\tsum++;//\u5f53\u524d\u8054\u901a\u5757\u7684\u683c\u5b50\u6570\u91cf\u589e\u52a0\n\tvst[x][y]=true;//\u5f53\u524d\u7684\u683c\u5b50\u8bbf\u95ee\u8fc7\u4e86\n\tlian[x][y]=liansum;//\u6253\u6807\u8bb0\n\tfor(int i=1;i<=4;i++)//\u641c\u7d22\u76f8\u90bb\u56db\u683c\n\t\tif(a[x+fx[i]][y+fy[i]]!=a[x][y]&&!vst[x+fx[i]][y+fy[i]])//\u5224\u65ad\n\t\t\tdfs(x+fx[i],y+fy[i]);//\u7ee7\u7eed\u641c\u7d22\n\treturn;//\u597d\u4e60\u60ef\n}\nint main()//\u4e3b\u51fd\u6570\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);//\u4f18\u5316I/O\u5e38\u6570\uff08C++\u6d41\uff09\n\tcin>>n>>m;//\n\tfor(register int i=1;i<=n;i++)\n\t\tfor(register int j=1;j<=n;j++)\n\t\t\tcin>>a[i][j];//\u8bfb\u5165\u5730\u56fe\n\tfor(register int i=1;i<=n;i++)\n\t\tfor(register int j=1;j<=n;j++)\n\t\tif(!vst[i][j])//\u4ece\u7b2c\u4e00\u4e2a\u683c\u5b50\u5f00\u59cb\u641c\u8054\u901a\u5757\n\t\t{\n\t\t\t++liansum;//\u5f53\u524d\u8054\u901a\u5757++\n\t\t\tsum=0;//\u6e05\u96f6\uff0c\u4e3a\u672c\u6b21\u641c\u7d22\u505a\u51c6\u5907\n\t\t\tdfs(i,j);//\u4ece\u5f53\u524d\u683c\u5b50\u5f00\u59cb\u641c\n\t\t\tls[liansum]=sum;//\u4fdd\u5b58\u8fd9\u4e2a\u8054\u901a\u5757\u6807\u8bb0\u5bf9\u5e94\u7684\u683c\u5b50\u6570\u91cf\n\t\t}\n\tint t1,t2;\n\tfor(register int i=1;i<=m;i++)\n\t\tcin>>t1>>t2,cout<<ls[lian[t1][t2]]<<\"\\n\";//\\n\u662f\u6362\u884c\u7b26\u3002\u53ea\u9700\u8f93\u51fa\u8be2\u95ee\u683c\u5b50\u7684\u6807\u8bb0\u6240\u4ee3\u8868\u7684\u503c\u5373\u53ef\u3002\n\treturn 0;//\u597d\u4e60\u60ef\n}\n```\n\n\u611f\u8c22\u60a8\u7684\u9605\u8bfb\u3002\u8bf7\u52ff\u76f4\u63a5\u6284\u88ad\u4ee3\u7801\u3002\u5982\u679c\u672c\u7bc7\u9898\u89e3\u6709\u4e0d\u8db3\u4e4b\u5904\uff0c\u8bf7\u5728\u8bc4\u8bba\u533a\u6307\u51fa\u6216\u79c1\u4fe1\u6211\u3002\u6700\u540e\uff0c\u8d34\u51fa[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/108949/)\uff01",
        "postTime": 1547970891,
        "uid": 108949,
        "name": "Meatherm",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u6765\u4e00\u6ce2\u5e38\u89c4bfs\u52a0\u67e5\u770b\u4f18\u5316\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define maxn 1111\n\nstruct node\n{\n\tint x,y;\n\tchar d;\n}q[9999999];//memset\u5361\u65f6\u95f4\uff0c\u6570\u7ec4\u5f00\u5927\u9632\u6b62\u8d8a\u754c\n\nstruct pos\n{\n\tint x,y;\n}f[1000110];\n\nint v[maxn][maxn],sum,sx,sy,tx[5] = {0,-1,1,0,0},ty[5] = {0,0,0,-1,1},vsum[maxn][maxn];\nchar a[maxn][maxn];\nint tot;\n\nvoid bfs()\n{\n\tsum = 1;\n\tint heap = 0,tail = 1;\n\tq[1].x = sx,q[1].y = sy,q[1].d = a[sx][sy],v[sx][sy] = tot;\n\twhile(heap < tail)\n\t{\n\t\theap++;\n\t\tfor(int i=1;i<=4;i++)\n\t\t{\n\t\t\tint xx = q[heap].x + tx[i];\n\t\t\tint yy = q[heap].y + ty[i];\n\t\t\tif(q[heap].d == '1')\n\t\t\t{\n\t\t\t\tif(!v[xx][yy] && a[xx][yy] == '0')\n\t\t\t\t{\n\t\t\t\t\ttail++;\n\t\t\t\t\tv[xx][yy] = tot;\n\t\t\t\t\tq[tail].x = xx,q[tail].y = yy,q[tail].d = a[xx][yy];\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(q[heap].d == '0')\n\t\t\t{\n\t\t\t\tif(!v[xx][yy] && a[xx][yy] == '1')\n\t\t\t\t{\n\t\t\t\t\ttail++;\n\t\t\t\t\tv[xx][yy] = tot;\n\t\t\t\t\tq[tail].x = xx,q[tail].y = yy,q[tail].d = a[xx][yy];\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%s\",a[i]+1);\n\tfor(int k=1;k<=m;k++)\n\t{\n\t\ttot++;//!!!!!\u91cd\u70b9\uff0c\u7528\u4e0d\u540c\u7684\u6570\u5b57\u8868\u793a\u4e0d\u540c\u7684\u8054\u901a\u5757\uff0c\u6bd4\u5e76\u67e5\u96c6\u5feb\n\t\tscanf(\"%d%d\",&sx,&sy);\n\t\tif(!v[sx][sy])\n\t\t{\n\t\t\tbfs();\n\t\t\tf[tot].x = sx,f[tot].y = sy;\n\t\t\tvsum[sx][sy] = sum;\n\t\t\tprintf(\"%d\\n\",sum);\n\t\t}\n\t\telse\n\t\t\tprintf(\"%d\\n\",vsum[f[v[sx][sy]].x][f[v[sx][sy]].y]);\n\t}\n\treturn 0;\n}\n```\n\u7b2c\u4e8c\u7b2c\u4e5d\u7b2c\u5341\u4e2a\u70b9\u6ca1\u6709\u4f18\u5316\u524dtle\uff0c\u4f18\u5316\u540e100ms\u4ee5\u4e0b",
        "postTime": 1537280734,
        "uid": 104598,
        "name": "cheater__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u5982\u679c\u666e\u901a\u7684\u641c\u7d22\uff0c\u4f1a\u8d85\u65f6\n\n\u6240\u4ee5\u8981\u7528\u5230\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u6269\u5c55\u8fc7\uff0c\u90a3\u4e48\u5b83\u7684\u503c\u5c31\u662f\u8d77\u70b9\u7684\u503c\n\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u501f\u7528\u7a0b\u5e8f\u7ed9\u5927\u5bb6\u5206\u6790\n\n\u6807\u7a0b\u2014\u2014\uff08by\uff1a\u697c\u5143\u57f9\u3001\u5f20\u5586\u5f67\uff09\n\nconst e:array[1..4,1..2] of longint=((-1,0),(0,-1),(1,0),(0,1));\n\n```cpp\nvar a,f:array[0..1000,0..1000] of char;\nf1:array[0..1000,0..1000] of boolean;\nd:array[0..1000,0..1000] of longint;  //d\u6570\u7ec4\u8868\u793a\nb,c:array[0..1000000] of longint;\ni,j,n,m,x,y:longint;\nprocedure sc(x,y:longint);  //\u5bbd\u641c\u7a0b\u5e8f\n var t,w,x1,y1,i,sum:longint;\n  begin\n   t:=1;w:=1;b[t]:=x;c[t]:=y;sum:=0;f1[x,y]:=true;\n   if d[x,y]<>-1 then exit;\n   while t<=w do\n    begin\n    inc(sum);\n     for i:=1 to 4 do\n      begin\n       x1:=b[t]+e[i,1];\n       y1:=c[t]+e[i,2];\n       if (x1>=1) and (y1>=1) and (x1<=n) and (y1<=n) and (f1[x1,y1]=false) then  //\u5224\u65ad\u6709\u6ca1\u6709\u8d8a\u754c\u548c\u6709\u6ca1\u6709\u505a\u8fc7\n       case a[b[t],c[t]] of\n        '0': if a[x1,y1]='1' then  //\u5982\u679c\u4e0a\u4e00\u4e2a\u70b9\u4e3a0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5fc5\u987b\u4e3a1\n             begin\n             w:=w+1;\n             b[w]:=x1;\n             c[w]:=y1;\n             f1[x1,y1]:=true;\n             end;\n        '1': if a[x1,y1]='0' then  //\u5982\u679c\u4e0a\u4e00\u4e2a\u70b9\u4e3a1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5fc5\u987b\u4e3a0\n             begin\n             w:=w+1;\n             b[w]:=x1;\n             c[w]:=y1;\n             f1[x1,y1]:=true;\n             end;\n        end;\n       end;\n       a[b[t],c[t]]:='2';\n      t:=t+1;\n     end;\n     for i:=1 to w do\n      d[b[i],c[i]]:=sum;  //\u8bb0\u5fc6\u5316\n   end;\n begin\n  readln(n,m);\n  fillchar(d,sizeof(d),255);\n  for i:=1 to n do\n   begin\n    for j:=1 to n do\n     read(a[i,j]);\n    readln;\n   end;\n   f:=a;\n   for i:=1 to n do\n     for j:=1 to n do sc(i,j);  //\u6bcf\u4e2a\u70b9\u90fd\u641c\u4e00\u904d\n  for i:=1 to m do\n   begin\n    readln(x,y);\n    writeln(d[x,y]);\n   end;\nend.\n```",
        "postTime": 1509276660,
        "uid": 57424,
        "name": "ZZY\u5f67",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u672c\u4ee5\u4e3a\u8fd9\u9053\u9898\u662f\u6c34\u9898\uff0c\u4ee5\u4e3a\u662f\u6700\u521d\u5b66bfs\u65f6\u5019\u7684\u8ff7\u5bab\u6700\u77ed\u8def\uff0c\u9898\u76ee\u90fd\u6ca1\u770b\u5c31\u6253\u4e86\u4e00\u534a\u3002\u56de\u8fc7\u5934\u770b\u4e86\u4e00\u773c\n\n\u5374\u53d1\u73b0\u9898\u76ee\u5927\u76f8\u5f84\u5ead\uff0c\u5b8c\u5168\u4e0d\u540c\u3002\n\n\u770b\u5b8c\u9898\u76ee\u4ee5\u540e\u6253\u4e86\u7b2c2\u4e2a\u7248\u672c\uff0c\u66b4\u529b\u5e7f\u641c\uff0c\u7ed3\u679c50\u5206\uff0c\u5269\u4e0b\u7684\u51e0\u4e2a\u70b9\u90fdTLE\u4e86\u3002\n\n\u4e8e\u662f\u5f00\u59cb\u5728\u6211\u7684\u5b50\u7a0b\u5e8f\u91cc\u68c0\u6d4b\u6bcf\u4e00\u6b21\u5e7f\u641c\u5b8c\u4e4b\u540e\u7684\u8bbf\u95ee\u8def\u5f84\u3002\uff08\u4e5f\u5c31\u662fvisited\u6570\u7ec4\uff09\u3002\u7ed3\u679c\u60ca\u5947\u7684\u53d1\u73b0\uff0c\n\n\u8fde\u7eed\u7684\u4e00\u6bb5\u8bbf\u95ee\u8def\u5f84\u603b\u662f\u4e00\u6837\u7684\u3002\n\n\u9898\u76ee\u7684\u7cbe\u9ad3\u5728\u4e8e\uff0c\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u80fd\u5230\u8fbe\u7684\u683c\u5b50\u6570\u4e00\u5b9a\u662f\u4e00\u6837\u7684\uff01\u8fd9\u4e9b\u683c\u5b50\u4e92\u76f8\u8054\u901a\uff0c\u5219\u90fd\u80fd\u4e92\u76f8\u5230\u8fbe\u3002\n\n\u6240\u4ee5\uff0c\u6807\u8bb0\u6574\u4e2a\u8fde\u901a\u5757\u3002\u5982\u679c\u5df2\u7ecf\u6807\u8bb0\u8fc7\u4e86\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u518dbfs\u4e00\u904d\u4e86\u3002\u5927\u5927\u964d\u4f4e\u4e86\u590d\u6742\u5ea6\u3002\n\n\u8fd9\u9053\u9898\u7684\u7a7a\u95f4\u4e0d\u662f\u95ee\u9898\uff0c\u91cd\u8981\u7684\u662f\u65f6\u95f4\u3002\u6240\u4ee5\uff0c\u8bb0\u5fc6\u662f\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\n\n\u6837\u4f8b\u6570\u636e\u6bd4\u8f83\u5f31\uff0c\u8981\u7ec6\u8c03\u7684\u8bdd\u6700\u597d\u81ea\u5df1\u9020\u4e00\u4e2a4x4\u7684\u6570\u636e\u6765\u8c03\u3002\n\n\n- \u8017\u65f6/\u5185\u5b58     240ms , 16800kb\n\n\n```cpp\n//This program is written by QiXingZhi \n\n#include <cstdio>\n#include <cstring>\n\n//m\u6bd4\u8f83\u5927\uff0c\u7528\u4e0a\u5feb\u8bfb\u4f1a\u597d\u4e00\u70b9\u3002 \ninline void read(int &x){\n    int w=1; char ch=0;\n    x=0;\n    while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if(ch=='-')w=-1,ch=getchar();\n    while(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n    x=x*w;\n}\n\nvoid write(int x)\n{\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar((int)x%10+'0');\n}\n \n//\u5efa\u7acb\u4e00\u4e2a\u5750\u6807\u7c7b\uff0c\u5305\u542bx,y\u5750\u6807 \nstruct POS { int x,y; };\n\n#define MAX_N    1001\nconst int plusx[]={1,-1,0,0};\nconst int plusy[]={0,0,1,-1};      //\u56db\u4e2a\u65b9\u5411\u7684\u5750\u6807\u53d8\u5316\uff0c\u5728\u5e7f\u641c\u7684\u65f6\u5019\u4f9d\u6b21\u52a0\u4e0a\u5c31\u597d\u4e86 \nchar G[MAX_N][MAX_N];  //\u8f93\u5165\u7684\u56fe          \nint ans[MAX_N][MAX_N];  //\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u80fd\u8bbf\u95ee\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u8981\u6c42\u7684 \nbool b[MAX_N][MAX_N];  //\u662f\u5426\u8bbf\u95ee\u8fc7\uff0c\u5728bfs\u4e2d\u7528\u5230\n/*\n * b\u6570\u7ec4\u4e0d\u7528\u6e05\u96f6\uff0c\u6e05\u96f6\u4f1a\u7528\u53bb\u5927\u91cf\u7684\u65f6\u95f4\n * \u4e4b\u6240\u4ee5\u4e0d\u7528\u6e05\u96f6\u662f\u56e0\u4e3a\uff0c\u4e0d\u540c\u7684\u8fde\u901a\u5757\u662f\u4e0d\u53ef\u80fd\u904d\u5386\u5230\u7684\uff0c\u6240\u4ee5\u76f8\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\uff0cb\u7684\u503c\u90fd\u4e3a0\uff0c\u6e05\u96f6\u662f\u6ca1\u6709\u610f\u4e49\u7684 \n */ \nbool used[MAX_N][MAX_N];  //\u8bb0\u5f55\u662f\u5426\u8bbf\u95ee\u8fc7\u6b64\u683c\u70b9 \nPOS q[1000001];  //\u5e7f\u641c\u7684\u961f\u5217\uff0c\u6bcf\u6b21\u90fd\u4f1a\u8986\u76d6\uff0c\u6240\u4ee5\u4e5f\u4e0d\u7528\u6e05\u96f6 \nPOS rmb[1000001]; //\u8bb0\u5fc6\u7684\u6570\u7ec4\uff0cremember\uff0c\u4e0d\u662f\u4eba\u6c11\u5e01\uff01 \nint n,m,h,t,sum;\n\ninline void push(int x,int y) {\n    if(x>n || x<1 || y<0 || y>=n) return;  //\u5224\u65ad\u51fa\u754c \n    if(b[x][y]) return;  //\u662f\u5426\u8bbf\u95ee \n    \n    //\u63a8\u5165\u961f\u5217\uff0cbfs\u7684\u57fa\u672c\u5957\u8def \n    t++;\n    q[t].x = x;\n    q[t].y = y;\n    b[x][y] = 1;\n    \n    sum++;    /* \u5c06\u80fd\u591f\u8bbf\u95ee\u7684\u603b\u70b9\u6570+1 */ \n    \n    rmb[sum].x = x;\n    rmb[sum].y = y;\n    /* \n     * \u8fd9\u91cc\u7406\u8bba\u4e0a\u5e94\u8be5\u65b0\u5f00\u8f9f\u4e00\u4e2a\u53d8\u91cf\u6765\u505armb\u6570\u7ec4\u7684\u5934\uff0c\u4f46\u662f\u7531\u4e8ermb\u6570\u7ec4\u7684\u5934\u4e00\u5b9a\u5c31\u662f\u5f53\u524d\u80fd\u8bbf\u95ee\n     * \u8282\u70b9\u7684\u603b\u6570\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u8c03\u7528\u4e86sum\u3002\n     * rmb\u4e5f\u987a\u4fbf\u8c03\u7528\u4e86POS\u7c7b\u6765\u8bb0\u5f55x\u5750\u6807\u4e0ey\u5750\u6807 \n     */ \n}\n\ninline void bfs(int x, int y) {\n    //init \n    h = 0, t = 0;\n    sum = 0;\n    \n    //\u63a8\u5165\u8d77\u70b9\uff0c\u4e00\u5b9a\u4e0d\u80fd\u5fd8\u3002 \n    push(x,y);\n    \n    while(h<t) {\n        h++;\n        for(int i=0; i<4; i++) {\n            /*\n             * 1\u53ea\u80fd\u8d70\u52300,0\u53ea\u80fd\u8d70\u52301\uff0c\u6240\u4ee5\u610f\u5473\u7740\u53ea\u80fd\u8d70\u5230\u503c\u4e0d\u76f8\u7b49\u7684\u70b9\u3002\n             * \u5f53\u524d\u5750\u6807\u52a0\u4e0a\u53d8\u5316\u5750\u6807 \u4e0e \u5f53\u524d\u5750\u6807 \u6bd4\u8f83\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u610f\u5473\u7740\u53ef\u4ee5\u8d70 \n             */ \n            if(G[q[h].x+plusx[i]][q[h].y+plusy[i]]!=G[q[h].x][q[h].y]) \n                push(q[h].x+plusx[i], q[h].y+plusy[i]);\n        }\n    }\n    \n    for(int i=1; i<=sum; i++) {\n        //\u904d\u5386\u8bb0\u5fc6\u7684\u6240\u6709\u8bbf\u95ee\u8fc7\u7684\u70b9\uff0c\u5c06ans\u7684\u503c\u8bbe\u5b9a\u4e3asum \n        ans[rmb[i].x][rmb[i].y] = sum;\n        //\u5e76\u5c06\u8fd9\u4e2a\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u8bbe\u7f6e\u4e3a\u8bbf\u95ee\u8fc7 \n        used[rmb[i].x][rmb[i].y] = 1;\n    }\n}\n\nint main()\n{\n    read(n),read(m);\n    for(int i=1; i<=n; i++) \n        scanf(\"%s\", G[i]);\n    for(int i=1; i<=n; i++) \n        for(int j=0; j<n; j++) \n            if(!used[i][j]) bfs(i,j);      //\u5982\u679c\u81f3\u4eca\u672a\u8bbf\u95ee\u8fc7\u5f53\u524d\u683c\u70b9\uff0c\u5219\u5e7f\u641c\u904d\u5386\u8fd9\u4e2a\u683c\u70b9\uff0c\u6c42\u51fa\u8fde\u901a\u5757 \n    for(int i=0; i<m; i++) {\n        int x,y;\n        read(x), read(y);\n        write(ans[x][y-1]); putchar('\\n');\n        //c++\u7684\u5b57\u7b26\u4e32\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u7684\u65f6\u5019\uff0c\u9700\u8981\u5148\u5c06y\u5750\u6807-1\uff0c\u7edf\u4e00\u6807\u51c6\u3002 \n    }\n    return 0;\n}\n```",
        "postTime": 1507277033,
        "uid": 41095,
        "name": "inexistent",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u7684\u8bdd\u6df1\u641c\u4f1a\u7206\u6808\uff0c\u6240\u4ee5\u8fd8\u662f\u7528BFS\u66f4\u597d\u4e00\u4e9b\uff0c\u56e0\u4e3a\u60f3\u5230\u4e86\u662f\u8fde\u901a\u5757\uff0c\u6240\u4ee5\u7528\u4e86\u5e76\u67e5\u96c6\uff0c\u5728\u5e76\u67e5\u96c6\u7684\u5904\u7406\u4e0a\uff0c\u53c8\u7528\u5230\u4e86\u54c8\u5e0c\u601d\u60f3\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u4e8c\u7ef4\u5750\u6807HASH\u4e3a\u4e00\u4e2a\u6570\uff0c\u5047\u8bbe\u5f53\u524d\u5904\u4e8ei\u884cj\u5217\uff0c\u90a3\u4e48\u4ed6\u7684\u54c8\u5e0c\u503c\u5c31\u662f\uff08i-1)\\*n+j,\u5176\u5b9e\u8fd9\u70b9\u5c31\u76f8\u5f53\u4e8e\u7ed9\u6bcf\u4e00\u70b9\u8fdb\u884c\u4e86\u7f16\u53f7\uff0c\u7b2c\u4e00\u884c1,2\uff0c....n,\u7b2c\u4e8c\u884cn+1\uff0cn+2 ...... 2n\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e00\u7ef4\u7684\u5e76\u67e5\u96c6\uff0c\u5728\u4e00\u5f00\u59cb\uff0c\u5c06\u5e76\u67e5\u96c6\u7684\u7236\u4eb2\u8bbe\u4e3a\u5176\u81ea\u5df1\uff0c\u5728\u4e4b\u540e\uff0c\u5f53\u6211\u4eec\u5728bfs\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5728\u6269\u5c55\u6bcf\u4e00\u6b65\u65f6\uff0c\u5c31\u5c06\u6269\u5c55\u8282\u70b9\u7684\u7236\u4eb2\u8bbe\u4e3a\u5f53\u524d\u8282\u70b9\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u53ea\u8fdb\u884c\u4e00\u6b21BFS\uff0c\u82e5\u67e5\u8be2\u5230\u67d0\u4e2a\u8fde\u901a\u5757\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u4e4b\u524d\u5df2\u7ecf\u88ab\u8be2\u95ee\u8fc7\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u7b54\u6848\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u518d\u68c0\u67e5\u8fd9\u4e2a\u70b9\u7684\u7236\u4eb2\u662f\u5426\u4e3a\u4ed6\u81ea\u5df1\uff0c\u5982\u679c\u662f\u5176\u81ea\u5df1\uff0c\u5219\u8bf4\u660e\u5176\u6240\u5c5e\u7684\u8fde\u901a\u5757\u672a\u88abBFS\u8fc7\uff0c\u6211\u4eec\u5c31\u5bf9\u4ed6\u8fdb\u884c\u6269\u5c55\uff0c\u5982\u679c\u5176\u7236\u4eb2\u4e0d\u662f\u4ed6\u81ea\u5df1\uff0c\u5219\u8bf4\u660e\u6b64\u8282\u70b9\u5df2\u7ecf\u88ab\u641c\u8fc7\uff0c\u90a3\u4e48\u6211\u4eec\u4fbf\u627e\u5230\u4ed6\u7684\u7b2c\u4e00\u4ee3\u7956\u5148\uff0c\u8fd4\u56de\u6b64\u7956\u5148\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u4ed6\u88ab\u8ba1\u7b97\u8fc7\u4e86\u3002\n\n\n\u53e6\u5916\uff0c\u6e90\u4ee3\u7801\u4e2d\u6709\u4e24\u4e2a\u51fd\u6570cul\\_num()\u4e0eID()\uff0c\u524d\u4e00\u4e2a\u662f\u5c06\u5750\u6807\u5316\u6570\u503c\uff0c\u540e\u4e00\u4e2a\u662f\u5c06\u6570\u503c\u5316\u5750\u6807\uff0c\u90fd\u7528\u4e86inline\uff0c\u56e0\u4e3a\u53ef\u4ee5\u52a0\u5feb\u901f\u5ea6\n\n\n\u6d4b\u8bd5\u6570\u636e\u65f6\u95f4\u6700\u957f\u7684\u4e00\u4e2a\u70b9\u4e3a228ms, \u7b97\u662f\u6bd4\u8f83\u5feb\u7684\uff0c\u4e0b\u9762\u8d34\u4ee3\u7801\uff0c\u90e8\u5206\u91cd\u8981\u7ec6\u8282\u5df2\u7ecf\u6ce8\u91ca\uff0c\u5982\u679c\u6709\u54ea\u4e9b\u4e0d\u61c2\u5f97\u5730\u65b9\uff0c\u53ef\u4ee5\u7ed9\u6211\u7559\u8a00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          \n```cpp\n#include<bits/stdc++.h>\n#define N 1009\nusing namespace std;\nint n;\nint G[N][N];                                     //\u56fe\u6570\u7ec4 \nint tx[] = {0,1,0,-1};                         //\u8f6c\u5411\u6570\u7ec4 \nint ty[] = {1,0,-1,0};\nbool inque[N][N];                              //\u662f\u5426\u88ab\u6269\u5c55\u8fc7 \nint fa[N*N];                                     //\u5e76\u67e5\u96c6\u6570\u7ec4\uff0c\u56e0\u4e3a\u662f\u4e8c\u7ef4\u8f6c\u4e00\u7ef4\uff0c\u6240\u4ee5\u8981\u5f00N*N \nint d[N][N];                                   //\u8bb0\u5fc6\u5316\u6570\u7ec4 \nstruct point{                                   //\u70b9\u5750\u6807 \n    int x,y;\n    point(int xx,int yy){\n        x = xx;\n        y = yy;\n    }\n};\nint read(){                                     //\u4f18\u5316\u8bfb\u6570 \n    int x = 0;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')ch = getchar();\n    while(ch >= '0' && ch <= '9'){\n        x = x * 10 + ch -'0';\n        ch = getchar();\n    }\n    return x;\n}\nint getf(int now){                            //\u5e26\u8def\u5f84\u538b\u7f29\u7684\u5e76\u67e5\u96c6\uff0c\u8fd4\u56de\u7b2c\u4e00\u4ee3\u7956\u5148\u7684\u54c8\u5e0c\u503c \n    if(fa[now] == now)return now;\n    else return fa[now] = getf(fa[now]);\n}\ninline point ID(int now){                         //\u5c06\u54c8\u5e0c\u503c\u8f6c\u5316\u4e3a\u5750\u6807\uff0c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u4e0a\u9762\u5b9a\u4e49\u7684\u5750\u6807\u7ed3\u6784\u4f53 \n    int x = now/n;\n    int y = now%n;\n    if(y == 0){\n        y = n;\n    }\n    else x = x+1;\n    return point(x,y);\n}\ninline int cul_num(int x,int y){         //\u5c06\u5750\u6807\u8f6c\u5316\u4e3a\u6570\u503c\uff0c\u7c7b\u4f3c\u4e8e\u54c8\u5e0c \n    return (x-1)*n+y;\n}\nint bfs(int x,int y){                    //\u5bbd\u641c\u51fd\u6570 \n    if(d[x][y]){                         //\u5982\u679cd[x][y]\u4e0d\u4e3a0\uff0c\u5219\u662f\u88ab\u6269\u5c55\u8fc7\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de\u7b54\u6848 \n        return d[x][y];\n    }\n    if(fa[cul_num(x,y)] != cul_num(x,y)){    //\u5982\u679c\u8282\u70b9(x,y)\u7684\u7956\u5148\u4e0d\u662f\u5176\u81ea\u5df1\uff0c\u5219\u6b64\u70b9\u4e5f\u88ab\n                                             //\u6269\u5c55\u8fc7\uff0c\u5219\u8fd4\u56de\u5176\u7b2c\u4e00\u4ee3\u7956\u5148\u7684\u8fde\u901a\u5757\u5927\u5c0f \n        point v = ID( getf( cul_num(x,y) ) );  //\u8ba1\u7b97\uff08x,y\uff09\u70b9\u54c8\u5e0c\u503c\u518d\u8f6c\u5165\u5e76\u67e5\u96c6\u67e5\u627e\uff0c\u4e4b\u540e\n                                               //\u5c06\u8fd4\u56de\u7684\u6570\u503c\u91cd\u65b0\u8f6c\u56de\u70b9\u5750\u6807 \n        d[x][y] = d[v.x][v.y];                 //\u8bb0\u5fc6\u5316 \n        return d[v.x][v.y];\n    }\n    int siz = 1;                              //\u4e0b\u9762\u4e3a\u6b63\u5e38\u5bbd\u641c\u6b65\u9aa4 \n    queue<point> que;\n    que.push(point(x,y));\n    while(que.size()){\n        point now = que.front();\n        que.pop();\n        inque[now.x][now.y] = true;\n        for(int i = 0; i < 4; i++){\n            int xx = now.x+tx[i];\n            int yy = now.y+ty[i];\n            if(xx >= 1 && xx <= n && yy >= 1 && yy <= n && G[now.x][now.y] != G[xx][yy] && !inque[xx][yy]){\n                siz++;\n                que.push(point(xx,yy));\n                inque[xx][yy] = 1;                             //\u6b64\u70b9\u88ab\u6269\u5c55\uff0c\u8fdb\u884c\u8bb0\u5f55 \n                fa[cul_num(xx,yy)] = cul_num(now.x,now.y);     //\u5c06\u6269\u5c55\u7684\u8282\u70b9\u7236\u4eb2\u8bbe\u4e3anow \n            }\n        }\n    }\n    d[x][y] = siz;                                       //\u8bb0\u5fc6\u5316 \n    return siz;                                            //\u8fd4\u56de\u7b54\u6848 \n}\nint main(){\n    int m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1; i <= n;  i++){\n        string s;\n        cin >> s;\n        int len = s.length();\n        for(int j = 0; j < len;j++){\n            if(s[j] == '0')G[i][j+1] = 0;\n          else G[i][j+1] = 1;\n          fa[(i-1)*n+j+1] = (i-1)*n+j+1;               //\u5e76\u67e5\u96c6\u521d\u59cb\u5316 \n        }\n    }\n    while(m--){\n        int x = read(),y = read();\n        printf(\"%d\\n\",bfs(x,y));                    //\u8f93\u51fa\u7b54\u6848 \n    }\n    return 0;\n}\n```",
        "postTime": 1505391152,
        "uid": 32526,
        "name": "\u9648\u65b0\u6708",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "###\u6211\u7684\u5929\uff0c\u5b9e\u5728\u662f\u5fcd\u4e0d\u4f4f\u8981\u5199\u9898\u89e3\u4e86\uff0c\u554a\u554a\u554a\uff0c\u672c\u849f\u84bb\u52a0\u4e0a\u4e86\u8bb0\u5fc6\u5316\u4e5f\u8fd8\u662fTLE\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u63d0\u4ea4\u4e86\u5f88\u591a\u5f88\u591a\u6b21\uff0c\u8fd8\u662f\u60f3\u4e0d\u901a\u4e3a\u4ec0\u4e48\u8d85\u65f6\uff0c\u6700\u540e\u624d\u60f3\u660e\u767d\u539f\u6765\u662fmemset\u554a\uff01\uff01\uff01\u8fd9\u9053\u9898\u4e0d\u5e94\u8be5\u7528memset\u4e5f\u6ca1\u6709\u7528memset\u7684\u5fc5\u8981\uff0c\u7528\u4e86\u5c31TLE\u6ca1\u8dd1\u7684\n\n\u554a\u554a\u554a\uff0c\u54b1\u4eec\u6765\u7ed3\u5408\u4ee3\u7801\u770b\u4e00\u4e0b\u5427\uff0c\u601d\u8def\u8fd8\u662f\u57fa\u7840\u7684\u5e7f\u641c\uff0c\u8bb8\u591a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\uff0c\u8bf7\u5927\u4f6c\u4eec\u539f\u8c05\u672c\u849f\u84bb\u7684\u4e2d\u4e8c\u9898\u89e3\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<string>\n#include<queue>\n#include<cstring>\n#include<cstdio>\n#define N 1001\n#define LL long long\nusing namespace std;\nbool map[N][N];\n//\u8bb0\u5fc6\u641c\u7d22\n//\uff08\u6b64\u5904\u8bf4\u4e00\u4e0b\uff0c\u5e73\u5e38\u5199\u5e7f\u641c\u90fd\u4f1a\u5b9a\u4e49\u4e00\u4e2abool vis[N][N]; \u7136\u540e\u6bcf\u6267\u884c\u5b8c\u4e00\u6b21\u5e7f\u641c\u5c31\u4f1a\u52a0\u4e0a\u4e00\u53e5memset(vis,false,sizeof vis)\u6765\u521d\u59cb\u5316\uff0c\u4f46\n//\u8fd9\u6837\u65e2\u8d39\u65f6\u4e5f\u6ca1\u6709\u592a\u5927\u610f\u4e49\uff0c\u56e0\u4e3a\u8bb0\u5fc6\u6570\u7ec4remenber\u91cc\u5c31\u80fd\u4ee3\u66ff\u5b83\u7684\u529f\u80fd\uff0c\u7531\u5e7f\u641c\u539f\u7406\u53ef\u77e5\uff0c\u4ece\u4e00\u4e2a\u8fde\u901a\u56fe\u5e76\u4e0d\u80fd\u641c\u5230\u53e6\u4e00\u4e2a\u72ec\u7acb\u7684\n//\u8fde\u901a\u56fe\uff0c\u6240\u4ee5\u53ea\u8981\u8fd9\u4e2a\u8bb0\u5fc6\u6570\u7ec4\u5c31\u80fd\u4ee3\u66ffvis[N][N]\u7684\u5168\u90e8\u529f\u80fd\uff0c\u5927\u5927\u8282\u7ea6\u4e86\u65f6\u95f4\uff09\nLL remenber[N][N]; \n LL ans[N*N];  //\u50a8\u5b58\u6bcf\u4e2a\u8054\u901a\u5757\u7684\u5927\u5c0f\uff08\u4e5f\u5c31\u662f\u6570\u91cf\uff09\nint n, m, xxx, yyy;\nLL num = 0;//\u8868\u793a\u7b2c\u51e0\u4e2a\u8054\u901a\u5757\nint dx[] = { 1,0,-1,0 };   \nint dy[] = { 0,1,0,-1 };\nstruct node   //\u6bcf\u4e00\u4e2a\u8282\u70b9\u7528\u7ed3\u6784\u4f53\u4f1a\u6bd4\u8f83\u65b9\u4fbf\n{\n    int x;\n    int y;\n    bool info; //\u89e3\u91ca\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u662f\u6bcf\u4e2a\u8282\u70b9\u7684\u5bf9\u5e94map[x][y]\u7684\u503c\n};\nLL bfs(int x, int y) //\u5f00\u59cb\u5e7f\u641c\n{\n    //bool vis[N][N];\n    LL sum = 0;\n    queue<node>q;\n    node s;\n    s.x = x; s.y = y;\n    sum++; num++;\n    s.info = map[x][y];\n    //vis[x][y] = true;\n    remenber[x][y] = num;\n    q.push(s);\n    while (!q.empty())\n    {\n        node u;\n        u = q.front();\n        q.pop();\n        for (int i = 0; i < 4; i++)\n        {\n            if (u.x + dx[i] < 1 || u.x + dx[i] > n || u.y + dy[i] < 1 || u.y + dy[i] > n || remenber[u.x + dx[i]][u.y + dy[i]])  //\u5224\u65ad\u8d8a\u754c\u4e0e\u91cd\u590d\n                continue;\n            node t;\n            t.x = u.x + dx[i]; t.y = u.y + dy[i]; t.info = map[t.x][t.y];\n            if (map[u.x][u.y] != map[t.x][t.y])\n            {\n                remenber[t.x][t.y] = num;\n                //vis[t.x][t.y] = true; //\u4ee5\u524d\u7684\u9519\u8bef\u793a\u8303\uff0c\u55ef\u5bf9\uff0c\u4ed6\u6ca1\u7528\u4e86\n                sum++;\n                q.push(t);\n            }\n        }\n    }\n    ans[num] = sum;\n    return sum;\n}\nint main()\n{\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)//\u8f93\u5165\u8f93\u51fa\n    {\n        string s;\n        cin >> s;\n        for (int j = 1; j <= n; j++)\n            map[i][j] = s[j - 1] - '0';\n    }\n    for (int i = 0; i < m; i++)\n    {\n        cin >> xxx >> yyy;\n        if (!remenber[xxx][yyy])\n        {\n            cout << bfs(xxx, yyy) << endl;\n            //memset(vis, false, sizeof vis);  //\u54c8\u54c8\u54c8\u54c8\uff0c\u4ee5\u524d\u5c31\u662f\u8fd9\u6837TLE\u7684\u5475\u5475\n        }\n        else\n            cout << ans[remenber[xxx][yyy]] << endl;  //\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u8054\u901a\u5757\u5bf9\u5e94\u7684\u503c\n    }\n    //system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1504773440,
        "uid": 34136,
        "name": "Nightfury12366",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u770b\u5230\u5404\u4f4ddalao\u4eec\u5728\u5199\u9898\u89e3\uff0c\u5fcd\u4e0d\u4f4f\u60f3\u5199\u4e00\u4e0b\u4e86233\u3002\n\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4e2a\u9898\u4e5f\u7b97\u662f\u4e00\u4e2a\u6bd4\u8f83\u57fa\u7840\u7684bfs\u4e86\uff08\u5f53\u7136dalao\u4eec\u6709\u66f4\u52a0NB\u7684\u9a9a\u64cd\u4f5c\uff09\uff0c\u53cd\u6b63\u6211\u662f\u4ee5\u849f\u84bb\u7684\u60f3\u6cd5\u6765\u60f3\u3002\n\n\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u9898\u6709\u4e00\u4e9b**\u6ce8\u610f\u70b9**\uff1a\n\n1.\u6ce8\u610f**\u8f93\u5165**\uff0c\u4ece\u6837\u4f8b\u6570\u636e\u53ef\u4ee5\u770b\u51fa\uff0c\u8ff7\u5bab\u8f93\u5165\u662f\n\n01\n10\n\u4e0d\u662f\n0 1\n1 0\n\u6240\u4ee5\u4e0d\u53ef\u4ee5\u7528\u6570\u7ec4\u76f4\u63a5\u8f93\u5165\uff08\u6211\u5f53\u65f6\u5c31\u6389\u8fdb\u53bb\u4e86233\uff0c\u6211\u60f3\u4f60\u65e2\u7136\u8fc7\u6765\u770b\u9898\u89e3\u4e86\uff0c\u5e94\u8be5\u4e5f\u6ce8\u610f\u5230\u4e86\uff0c\u6ca1\u6ce8\u610f\u5230\u73b0\u5728\u4e5f\u6ce8\u610f\u5230\u4e86233\uff09\n\n2.\u524d\u9762dalao\u63d0\u8fc7\uff0c\u7528bfs\u4e00\u5b9a\u8981**\u8bb0\u5fc6\u5316**\uff0c\u5426\u5219TLE\u6ca1\u5546\u91cf\uff08\u6211\u7684\u8bb0\u5fc6\u5316\u5f88\u7c97\u66b4\uff0c\u5404\u4f4ddalao\u4eec\u5410\u69fd\u5427\u3002\u3002\u3002\uff09\n\n3.\u6211\u662f\u7528\u624b\u6253bfs\uff0c\u6240\u4ee5\u6709\u961f\u5217\u6570\u7ec4\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u4e00\u5b9a\u8981**\u5f00\u5927**[\u6ed1\u7a3d]\uff0c\u4e0d\u5f00\u5927\u7684\u7ed3\u679c\u770b\u8ba8\u8bba\u533a\u6211\u53d1\u7684\u5427\u3002\u3002\n\n4...................**\u221e**\u9700\u8981\u4f60\u81ea\u5df1\u53d1\u73b0\u4e86\n\n\u9644\u4ee3\u7801\uff08\u5e94\u8be5\u6bd4\u8f83\u9002\u5408\u849f\u84bb\u7406\u89e3\uff09\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\nconst int dx[4]={-1,0,0,1},dy[4]={0,-1,1,0};\nint n,m,q[5000001][2],v[1001][1001],t=0,sum[100001];\nbool map[1001][1001];                        //\u5b9a\u4e49\u4e71\u4e03\u516b\u7cdf\u3002\u3002\u3002\u3002\u3002\u3002\nvoid bfs(int x,int y)\n{\n    if(v[x][y]!=0)\n    {\n        cout<<sum[v[x][y]]<<endl;\n        return;\n    }\n    t++;                                    //\u6211\u7684\u7c97\u66b4\u7684\u8bb0\u5fc6\u5316\n    int head=0,tail=1,s=1;\n    q[0][0]=x;\n    q[0][1]=y;\n    v[x][y]=t;\n    while(head<tail)                        //\u6bd4\u8f83\u4e2d\u89c4\u4e2d\u77e9\u7684bfs\n    {\n        int xx=q[head][0],yy=q[head][1];\n        for(int i=0;i<4;i++)\n        {\n            int xxx=xx+dx[i],yyy=yy+dy[i];\n            if(xxx>=1&&xxx<=n&&yyy>=1&&yyy<=n)    //\u9632\u8d8a\u754c\n            {\n                if(map[xxx][yyy]!=map[xx][yy]&&v[xxx][yyy]==0)\n                {\n                    q[tail][0]=xxx;\n                    q[tail][1]=yyy;                //\u5165\u961f\n                    v[xxx][yyy]=t;                //\u8bb0\u5f55\u662f\u5426\u88ab\u8bbf\u95ee\n                    s++;\n                    tail++;\n                }\n            }\n        }\n        head++;\n    }\n    cout<<s<<endl;\n    sum[t]=s;                                    //\u7c97\u66b4\u7684\u8bb0\u5fc6\u3002\u3002\u3002\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        string s;\n        cin>>s;                                //\u6ce8\u610f1.\u4e2d\u8bf4\u7684\u3002\u3002\u3002\n        for(int j=1;j<=n;j++)\n        {\n            if(s[j-1]=='0')\n            {\n                map[i][j]=false;\n            }\n            else\n            {\n                map[i][j]=true;\n            }\n        }\n    }\n    for(int i=0;i<m;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        bfs(x,y);                                //\u6ca1\u7528\u8fd4\u56de\u503c\u7684\uff0c\u76f4\u63a5\u5728\u91cc\u9762\u8f93\u51fa\u7684\n    }\n    return 0;\n}\n\u5c31\u8fd9\u4e9b\u4e86\uff0cdalao\u5c31\u4e0d\u8981\u770b\u4e86\uff0c\u849f\u84bb\uff08\u672c\u4eba\uff09\u745f\u745f\u53d1\u6296ing......\n```",
        "postTime": 1504098757,
        "uid": 37713,
        "name": "sdgmwjy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u8fd9\u9996\u4e00\u9053\u5178\u578b\u7684\u5bbd\u641c\u9898\u3002\n\n\n\u6211\u4eec\u6bcf\u8fdb\u884c\u4e00\u6b21\u6240\u641c\u7d22\uff0c\u5c31\u628a\u8def\u5f84\u4e0a\u6240\u6709\u7684\u70b9\u8bbe\u4e3atrue\uff08\u641c\u8fc7\uff09\uff0c\u6700\u540e\u628a\u70b9\u90fd\u53d8\u6210\u70b9\u6570\uff08\u76f8\u4e92\u7684\uff09\n\n\n\u5982\u4f8b\uff1a      \uff08t\u4e3a\u641c\u8fc7\uff0cf\u4e3a\u672a\u641c\uff09 \u7b2c\u4e00\u5f20\u4e3a\u884c\u8fdb\u56fe\uff0c\u7b2c\u4e8c\u5f20\u4e3a\u6570\u91cf\u56fe\n\n101\n011\n100\n\u4e00\u5f00\u59cb\uff1af f f               0 0 0\n\nf f f               0 0 0\n\nf f f               0 0 0\n\n\u7b2c\u4e00\u6b21\uff1at f f               1 0 0\n\nf f f                0 0 0\n\nf f f                0 0 0\n\n\u7b2c\u4e8c\u6b21\uff1at t f                2 2 0\n\nt f f                2 0 0\n\nf f f                0 0 0\n\n\u7b2c\u4e09\u6b21\uff1at t t              6 6 6\n\nt t f               6 6 0\n\nt f f               6 0 0\n\n\u7b2c\u56db\u6b21\uff1at t t               7 7 7\n\nt t f               7 7 0\n\nt t f               7 7 0(\u7b2c\u4e00\u6761\u8def\u5f84\u7ed3\u675f\uff09\n\n\u7b2c\u4e94\u6b21 \uff1at t t             7 7 7\n\nt t t              7 7 1\n\nt t f               7 7 0\n\n\u7b2c\u516d\u6b21\uff1a t t t              7 7 7\n\nt t t              7 7 2\n\nt t t              7 7 2\n\n\n\n\n```cpp\nvar\na,b,i,j,h,w:longint;\nc:array[1..1000000,1..2] of longint;   \ng:array[1..100000,1..2] of longint;\nm:array[0..1001,0..1001] of boolean;----------\u5224\u65ad\u6709\u6ca1\u6709\u641c\u8fc7\nn:array[0..1001,0..1001] of char;\nd:array[1..1000,1..1000] of longint;------------\u8bb0\u5f55 \nprocedure k(x,y:longint;v:char);-------------\u5bbd\u641c\nbegin\nif (x>0)and(x<=a)and(y>0)and(y<=a) then begin-----------\u9632\u6b62\u8d8a\u754c\nh:=h+1\uff1b\nc[h,1]:=x;\nc[h,2]:=y;\nif v='1' then v:='0' else v:='1';--------------\u628a\u5f53\u524d\u7684\u6570\u53d8\u6210\u76f8\u53cd\u7684\nm[x,y]:=true;-------------\u641c\u8fc7\u4e86\nif (n[x+1,y]=v) and (m[x+1,y]=false) then k(x+1,y,v);\nif (n[x-1,y]=v) and (m[x-1,y]=false) then k(x-1,y,v);\nif (n[x,y+1]=v) and (m[x,y+1]=false) then k(x,y+1,v);\nif (n[x,y-1]=v) and (m[x,y-1]=false) then k(x,y-1,v);------------\u5411\u56db\u9762\u516b\u65b9\u641c\nend;\nend;\nbegin\nreadln(a,b);\nfor i:=1 to a do\nbegin\nfor j:=1 to a do\nread(n[i,j]);\nreadln end;------------char\u8f93\u5165\uff0c\u770b\u4e0d\u61c2\u67d0\u4e9b\u4eba\u4e3a\u5565\u5b57\u7b26\u4e32\u8f93\u5165\uff0c\u518d\u5206\u5f00\nfor i:=1 to a do\nfor j:=1 to a do\nif m[i,j]=false then \nbegin\nh:=0;\nk(i,j,n[i,j]);\nfor w:=1 to h do-----------\u5343\u4e07\u4e0d\u8981\u6e05\u96f6\uff0c\u4f1a\u8d85\u65f6\nd[c[w,1],c[w,2]]:=h;\nend;\nfor i:=1 to b do\nreadln(g[i,1],g[i,2]);\nfor i:=1 to b do\nwriteln(d[g[i,1],g[i,2]]);\nend.\n\n```",
        "postTime": 1497352899,
        "uid": 32894,
        "name": "SKTT1Faker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u76f4\u63a5\u4ece\uff081,1\uff09\u70b9\u5f00\u59cb\u679a\u4e3e\u3002 \u82e5\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u88ab\u6807\u8bb0\u5c31\u4ece\u5f53\u524d\u8282\u70b9\u5f00\u59cbbfs\u5b8c\u80fd\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\uff0c \u7ec4\u6210\u4e00\u4e2a\u8fde\u901a\u56fe\u3002\n\n\u53c8\u56e0\u4e3a\u4e00\u4e2a\u8054\u901a\u56fe\u91cc\u7684\u6240\u6709\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u3002\u6240\u4ee5\u53ef\u5230\u8fbe\u7684\u70b9\u6570\u76f8\u7b49\u3002\n\n\u6240\u4ee5\u5728\u4ece\uff08x\uff0cy\uff09\u70b9\u5f00\u59cbbfs\u65f6\uff0c \u5c06\u5176\u4f5c\u4e3a\u8fd9\u4e2a\u8fde\u901a\u56fe\u7684\u4ee3\u8868\u5143\u3002\n\n\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u8f93\u51fa\u8981\u67e5\u8be2\u7684\u70b9\u7684\u4ee3\u8868\u5143\u7684cnt\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6700\u574f\u7684\u60c5\u51b5\u5e94\u8be5\u662fo\uff082n^2\uff09 \u6240\u4ee5\u8dd1\u7684\u8fd8\u662f\u6bd4\u8f83\u5feb\u3002\n\n\u6700\u540enaive\u7684\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\n\n\u00b7\u00b7\u00b7\n\n\n\n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<queue>\ntypedef long long Lovelive;\nusing namespace std;\ninline void scan(int &x) {\n    int f = 1; x = 0;char c = getchar();\n    while(c > '9' || c < '0') {if(c == '-') f= -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x*10 + c - '0', c = getchar();\n    f*x;\n}\nint g[1010][1010], n, m;\nchar a[1010][1010];\nbool vis[1010][1010];\nint xx[]={1, 0, -1, 0}, yy[]={0, 1 ,0 ,-1};\nstruct node {\n    int x, y;\n};\nnode fa[1010][1010];\nbool check(int x, int y) {\n    if(x>n||y>n||x<1||y<1) return false;\n    return true;\n}\nvoid bfs(int x, int y) {\n    node s; node res; queue<node>q; int cnt=1;\n    s.x=x; s.y=y; q.push(s); vis[x][y]=1; fa[x][y].x=x; fa[x][y].y=y;\n    while(!q.empty()) {\n        res=q.front(); q.pop(); \n        for(int i=0; i<4; i++) {\n            s.x=res.x+xx[i]; s.y=res.y+yy[i];\n            if(check(s.x, s.y) && !vis[s.x][s.y] && (a[res.x][res.y]+a[s.x][s.y]-'0'-'0')==1) cnt++, q.push(s), vis[s.x][s.y]=1, fa[s.x][s.y].x=x, fa[s.x][s.y].y=y;\n        }\n    }\n    g[x][y]=cnt;    \n}\nint main() {\n    scan(n); scan(m);\n    for(int i=1; i<=n; i++) for(int j=1; j<=n; j++) cin>>a[i][j];\n    for(int i=1; i<=n; i++) for(int j=1; j<=n; j++) if(!vis[i][j]) bfs(i, j);\n//    for(int i=1; i<=n; i++) for(int j=1; j<=n; j++) cout<<g[i][j]<<\" \";\n//    cout << endl;\n    while(m--) {\n        int x, y; scan(x); scan(y);\n        printf(\"%d\\n\", g[fa[x][y].x][fa[x][y].y]);\n    }\n    return 0;\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1495873039,
        "uid": 27859,
        "name": "minamikotori",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "```cpp\n//\u6700\u7b80\u5355\u7684\u89e3\u91ca\uff1a\u4e24\u4e2a\u8fde\u5728\u4e00\u8d77\u768401\u70b9\uff0c0\u80fd\u5230\u7684\u70b9\uff0c1\u4e5f\u80fd\u5230\u3002\u8fd9\u4e9b01\u70b9\u5c31\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a01\u5757\uff0c01\u5757\u7684\u6bcf\u4e2a\u70b9\u6240\u80fd\u5230\u8fbe\u768401\u6570\u91cf\u90fd\u662f\u76f8\u7b49\u7684\u3002 \n//\u6240\u4ee5\u5c31\u662f\u6c42\u591a\u5c11\u4e2a01\u5757\u7684\u5927\u5c0f\u7684\u95ee\u9898\u3002 \n//\u56e0\u6b64\u6700\u597d\u7528\u5e7f\u641c\u3002\n//\u4e4b\u540e\u8be2\u95ee\u8c03\u53d6\u5373\u53ef\u3002\u907f\u514d\u4e86DFS\u7b97\u6cd5\u4e2dO(N*M)\u7684\u590d\u6742\u5ea6\u3002 \n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=1010;\nconst int MQ=N*N;\n\nint n,m; \nbool maze[N][N];//\u8ff7\u5bab\u63cf\u8ff0 \nint block[N][N];//\u6240\u5c5e\u7684\u5757 \nint ans[N*N];//\u5757\u7684\u5927\u5c0f \nint tag=1;//\u5757\u7684\u8ba1\u6570 \n\nstruct Dot{\n    int x,y;\n}que[MQ];\nint head,tail,qlen;\ninline void ins(Dot a){\n    que[tail++]=a;\n    tail%=MQ,qlen++; \n}\ninline Dot del(){\n    Dot ret=que[head++];\n    head%=MQ,qlen--;\n    return ret;\n}//\u961f\u5217 \n\nint test[][2]={{0,-1},{0,1},{1,0},{-1,0}};\nvoid bfs(int x,int y){\n    Dot a;\n    a.x=x,a.y=y;\n    ins(a);\n    while(qlen){\n        a=del();\n        ans[tag]++;//\u589e\u52a0\u5757\u7684\u5927\u5c0f \n        int nx,ny;\n        for(int i=0;i<4;i++){\n            nx=a.x+test[i][0],ny=a.y+test[i][1];\n            if(nx>=0&&nx<n&&ny>=0&&ny<n&&!block[nx][ny]&&maze[nx][ny]==!maze[a.x][a.y]){//\u8fd9\u91cc\u5757\u7684\u63cf\u8ff0\u4e5f\u8d77\u5230\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\u7684\u4f5c\u7528 \n                block[nx][ny]=tag;\n                Dot b=a;\n                b.x=nx;\n                b.y=ny;\n                ins(b);\n            }\n        }\n    }\n}\n\nint main(){\n    cin>>n>>m;\n    char ch[N];\n    for(int i=0;i<n;i++){\n        scanf(\"%s\",ch);\n        for(int j=0;j<n;j++){\n            maze[i][j]=ch[j]-'0';\n        }\n    }\n    for(int i=0;i<n;i++)\n        for(int j=0;j<n;j++)\n            if(!block[i][j]){\n                block[i][j]=tag;\n                bfs(i,j);\n                tag++;//\u6df1\u641c\u8d77\u70b9 \n            }\n    int a,b;\n    for(int i=0;i<m;i++){\n        scanf(\"%d%d\",&a,&b);\n        printf(\"%d\\n\",ans[block[a-1][b-1]]);//\u8c03\u53d6\u8be2\u95ee\uff0c\u8f93\u51fa\u6240\u5c5e\u7684\u5757\u7684\u5927\u5c0f\u5373\u53ef \n    } \n    return 0; \n}\n```",
        "postTime": 1492264980,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "/\\*\u540c\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u91cc\u9762\u7684\u6240\u6709\u4f4d\u7f6e\u5b83\u80fd\u5230\u8fbe\u7684\u533a\u57df\u662f\u4e00\u6837\u591a\u7684\u3002\n\n\u6c42\u51fa\u6bcf\u4e00\u4e2a\u8054\u901a\u5206\u91cf\uff0c\u5e76\u8d4b\u503c\u4e00\u6837\u7684\u7ed3\u679c\u5373\u53ef\\*/\n\n\n\n            \n\n    \n   \n \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint a[1010][1010],v[1010][1010];//\u65b9\u9635 ,v\u4e3a\u6807\u5fd7\u6570\u7ec4 \nint n,m,num;\nint b[10010];\nchar c[1010];\nint f[][2]={{-1,0},{1,0},{0,-1},{0,1}};//\u56db\u4e2a\u65b9\u5411 \nstruct node{\n    int x,y;\n}cur,nxt; \n//queue<node> q;\nnode q[1000005];//\u7528\u6570\u7ec4\u4ee3\u66ffqueue\u961f\u5217 \nvoid bfs(int sx,int sy)\n{\n    int front,tail;//\u6807\u5fd7\u6570\u7ec4\u961f\u5217\u7684\u524d\u540e\u4f4d\u7f6e \n    front=0;tail=1;\n    cur.x=sx;\n    cur.y=sy;\n    q[front]=cur;// \u628a\u5f00\u59cb\u7684\u683c\u5b50\u5165\u961f\u5217\n    num=1;\n    v[sx][sy]=1;\n    while(front<tail)\n    {\n        cur=q[front];\n        front++;        \n        for(int i=0;i<4;i++)//4\u4e2a\u65b9\u5411\n        {\n            nxt.x=cur.x+f[i][0];\n            nxt.y=cur.y+f[i][1];\n            if(a[cur.x][cur.y]+a[nxt.x][nxt.y]==1&&!v[nxt.x][nxt.y])\n            {\n                num++;\n                q[tail++]=nxt;\n                v[nxt.x][nxt.y]=1;\n            }\n        } \n    }\n    for(int i=0;i<tail;i++)//\u6240\u6709\u8fdb\u5165\u961f\u5217\u7684\uff0c\u90fd\u4f4d\u4e8e\u540c\u4e00\u4e2a\u8054\u901a\u5206\u91cf\u91cc\u9762 \n        v[q[i].x][q[i].y]=num;\n}\nint main()\n{\n    int i,j;\n    int sx,sy;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<=n+1;i++)\n        for(j=0;j<=n+1;j++)\n        a[i][j]=2;//\u8bbe\u4e3a2\uff0c\u4e0d\u9700\u8981\u518d\u5224\u65ad\u8d8a\u754c \n    for(i=1;i<=n;i++) \n    {    \n        scanf(\"%s\",c);//\u8f93\u5165\u65b9\u9635\uff0c\u56e0\u65e0\u7a7a\u683c\uff0c\u7528\u5b57\u7b26\u8f93\u5165\u518d\u8f6c\u6362\n        for(j=1;j<=n;j++)\n         a[i][j]=c[j-1]-'0';\n    }\n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++)\n        if(!v[i][j]) bfs(i,j);//\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&sx,&sy);        \n        printf(\"%d\\n\",v[sx][sy]); \n    } \n}\n```",
        "postTime": 1476497910,
        "uid": 20547,
        "name": "Akashicw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u7ec8\u4e8eAC\u4e86\u2026\u2026\u8fd9\u9053\u6c34\u9898\u5c45\u7136\u4ea4\u4e86N\u904d\uff0c\u611f\u89c9\u81ea\u5df1\u8fd8\u9700\u8981\u5927\u52aa\u529b\uff01\n\n\u8c61\u5f81\u6027\u8bf4\u4e0b\u601d\u8def\uff1abfs\u6c42\u8fde\u901a\u5206\u91cf\uff0cbfs\u65f6\u8bb0\u5f55\u4e00\u4e0b\u5df2\u7ecf\u6269\u5c55\u7684\u8282\u70b9\u6570\u3002\u8bb0\u5f55\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u6269\u5c55\u7684\u8282\u70b9\u6570\u3002\n\n```cpp\n\n#include<cstdio>\n#include<iostream>\n#include<cctype>\n#include<queue>\nusing namespace std;\nconst int MAXN=1000+1;\nbool map[MAXN][MAXN];\nint n,m,v[MAXN][MAXN],ans[MAXN*MAXN],now=0;\ninline bool check(int x,int y){\n    return 1<=x&&x<=n&&1<=y&&y<=n;\n}\nstruct POS{\n    int x,y;\n    POS(int _x,int _y):x(_x),y(_y){};\n};\nqueue<POS> q;\nint bfs(POS p,int cur){ //\u8fd4\u56de\u8fde\u901a\u5206\u91cf\u7684\u70b9\u6570\uff0c\u4f20\u5165\u70b9\u548c\u672c\u6b21\u8fde\u901a\u5206\u91cf\u7f16\u53f7 \n    int cnt=0;\n    cnt++;\n    v[p.x][p.y]=cur;\n    q.push(p);\n    while(!q.empty()){\n        p=q.front();\n        q.pop();\n        for(int dx=-1;dx<=1;dx++) for(int dy=-1;dy<=1;dy++) \n        if(dx*dy==0&&check(p.x+dx,p.y+dy)&&v[p.x+dx][p.y+dy]==0&&map[p.x][p.y]!=map[p.x+dx][p.y+dy]) {\n            cnt++;\n            v[p.x+dx][p.y+dy]=cur;\n            q.push(POS(p.x+dx,p.y+dy));\n        }\n    }\n    return cnt;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    getchar();\n    for(int i=1;i<=n;i++,getchar()) for(int j=1;j<=n;j++) map[i][j]=getchar()-'0';\n    //for(int i=1;i<=n;i++,printf(\"\\n\")) for(int j=1;j<=n;j++) printf(\"%d\",map[i][j]);\n    for(int i=1;i<=n;i++) for(int j=1;j<=n;j++) if(v[i][j]==0) ans[++now]=bfs(POS(i,j),now);\n    while(m--){\n        int i,j;\n        scanf(\"%d%d\",&i,&j);\n        printf(\"%d\\n\",ans[v[i][j]]);\n    }\n}\n//\u4e3a\u4e86\u51cf\u5c11\u5e38\u6570\u5f00\u9500\uff0cdfs\u548cbfs\u90fd\u5e94\u8be5\u5728\u5c06\u8282\u70b9\u653e\u5165\u961f\u5217/\u8c03\u7528\u6808\u524d\u68c0\u67e5\u8282\u70b9\u662f\u5426\u5408\u6cd5\u5e76\u6807\u8bb0vis[] \n//\u6ce8\u610f\u5982\u679c\u6267\u884c\u4e0a\u8ff0\u4f18\u5316\uff0c\u521d\u59cb\u5316\u961f\u5217\u65f6\u8981\u5148\u5bf9\u6e90\u70b9\u8fdb\u884c\u68c0\u67e5/\u6807\u8bb0/\u8ba1\u7b97\u3002 \n\n```",
        "postTime": 1457433266,
        "uid": 15183,
        "name": "Rapiz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    },
    {
        "content": "\u597d\u50cf\u5199\u5f97\u957f\u4e86\u4e00\u70b9orz\n\n\u624b\u62bd\u5199\u4e86\u4e2a\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u7ed3\u6784\u4f53\u8bf7\u65e0\u89c6orz\n\n\n\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\u627e\u51fa\u6bcf\u4e00\u7ec4\u4e92\u76f8\u8fde\u901a\u7684\u683c\u5b50\uff0c\u5e76\u7ed9\u5b83\u4eec\u9644\u4e0a\u6807\u8bb0\u3002\u5177\u6765\u8bf4\u5c31\u662f\u4ece\u7b2c\u4e00\u4e2a\u70b9\u5faa\u73af\u5230\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u8fd8\u6ca1\u6709\u6807\u8bb0\u7684\u8bdd\u5c31\u5bf9\u8fd9\u4e2a\u70b9bfs\u4e00\u6ce2\u3002\n\n\nbfs\u91cc\u9762\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u4e0a\u4e0b\u5de6\u53f3\u5bfb\u627e\u53ef\u4ee5\u8d70\u7684\u70b9\u5e76\u4e14\u52a0\u5165\u961f\u5217\uff0c\u5f39\u51fa\u961f\u5217\u7684\u65f6\u5019\u7ed9\u8fd9\u4e2a\u70b9\u9644\u4e0a\u6807\u8bb0\u5e76\u4e14\u5728\u5bf9\u5e94\u6807\u8bb0\u7684\u8ba1\u6570\u6570\u7ec4\u91cc\u52a0\u4e00\uff0c\u5f53\u7136\u5982\u679c\u5df2\u7ecf\u6709\u6807\u8bb0\u5c31\u76f4\u63a5continue\u6389\u3002\u53ef\u4ee5\u5728push\u7684\u6761\u4ef6\u4e2d\u52a0\u4e0a\u5bf9\u5e94\u70b9\u6ca1\u6709\u6807\u8bb0\uff0c\u53ef\u4ee5\u7701\u4e00\u70b9\u7a7a\u95f4\uff0c\u4e0d\u8fc7\u6211\u61d2\u5f97\u5199\uff08\n\n\n\u67e5\u8be2\u9636\u6bb5\u5c31\u975e\u5e38\u8f7b\u677e\u4e86\uff0c\u53ea\u9700\u8981\u62ff\u5bf9\u5e94\u65b9\u683c\u7684\u6807\u8bb0\u503c\u5230\u8ba1\u6570\u6570\u7ec4\u91cc\u67e5\u4e00\u4e0b\u5c31\u7ed3\u675f\u4e86\u3002\n\n\n[codec]\n\n/\\* P1141\n\n\\* Au: SJoshua\n\n\\*/\n\n\n\n    \n\n```cpp\n#include <cstdio>\n#include <queue>\nusing namespace std;\nstruct block {\n    int type;\n} status[1001][1001];\nint n, m, count[1001*1001];\nchar map[1001][1001];\nvoid scan(int a, int b, int flag) {\n    queue < pair <int, int> > q;\n    q.push(make_pair(a, b));\n    while (!q.empty()) {\n        pair <int, int> tmp = q.front();\n        q.pop();\n        int x = tmp.first;\n        int y = tmp.second;\n        if (status[x][y].type) {\n            continue;\n        }\n        count[flag]++;\n        status[x][y].type = flag;\n        if (x+1 < n && map[x+1][y] != map[x][y]) {\n            q.push(make_pair(x+1, y));\n        }\n        if (y+1 < n && map[x][y+1] != map[x][y]) {\n            q.push(make_pair(x, y+1));\n        }\n        if (x-1 >= 0 && map[x-1][y] != map[x][y]) {\n            q.push(make_pair(x-1, y));\n        }\n        if (y-1 >= 0 && map[x][y-1] != map[x][y]) {\n            q.push(make_pair(x, y-1));\n        }\n    }\n}\nint main(void) {\n    int type = 0;\n    scanf(\"%d %d\", &n, &m);\n    for (int k = 0; k < n; k++) {\n        scanf(\"%s\", map[k]);\n    }\n    for (int k = 0; k < n; k++) {\n        for (int i = 0; i < n; i++) {\n            if (!status[k][i].type) {\n                scan(k, i, ++type);\n            }\n        }\n    }\n    for (int k = 0; k < m; k++) {\n        int x, y;\n        scanf(\"%d %d\", &x, &y);\n        printf(\"%d\\n\", count[status[x-1][y-1].type]);\n    }\n    return 0;\n}\n[/codec]\n```",
        "postTime": 1472186650,
        "uid": 790,
        "name": "\u7ea6\u4fee\u4e9a_RK",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1141 \u301001\u8ff7\u5bab\u3011"
    }
]