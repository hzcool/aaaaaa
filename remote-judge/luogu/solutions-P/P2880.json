[
    {
        "content": "## \u7ebf\u6bb5\u6811\u90fd\u6709\u4e86\uff0c\u600e\u80fd\u5c11\u4e86\u6811\u72b6\u6570\u7ec4\uff1f\uff1f\n\n\u90a3\u6211\u6765\u8865\u4e00\u53d1\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u6709\u5f88\u591a\u79cd\u89e3\u6cd5\uff0c\u4e5f\u6709\u5199$ST$\u8868\u7684\uff0c\u800c\u4e14\u8c8c\u4f3c\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u6bd4\u8f83\u4f18\u79c0\u3002\n\n\u4f46\u662f\u591a\u4e00\u79cd\u89e3\u6cd5\u6bd5\u7adf\u662f\u597d\u4e8b\uff0c\u53ef\u4ee5\u4ece\u4e0d\u540c\u89d2\u5ea6\u53bb\u505a\u4e00\u9053\u9898\u3002\n\n\u6709\u4e00\u4f4d\u5de8\u4f6c\u4e5f\u7528\u7684\u6811\u72b6\u6570\u7ec4\uff0c~~\u4f46\u662f\u8c8c\u4f3c\u53ea\u8d34\u4e86\u4e2a\u4ee3\u7801~~\uff0c\u6211\u8fd9\u91cc\u8fd8\u662f\u53d1\u4e00\u4e0b\u8be6\u7ec6\u7684\u9898\u89e3\uff0c\u6bd5\u7adf\u6709\u4e9b\u4eba\u53ef\u80fd\u4e0d\u77e5\u9053\u5982\u4f55\u7ef4\u62a4\u6700\u5927\u6700\u5c0f\u503c\u3002\n\n## \u8fdb\u5165\u6b63\u9898\uff1a\n\n\u65e2\u7136\u660e\u8bf4\u4e86\u9700\u8981\u6811\u72b6\u6570\u7ec4\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u77e5\u9053\u6811\u72b6\u6570\u7ec4\u662f\u4ec0\u4e48\n\n**\u4e0d\u77e5\u9053\u6811\u72b6\u6570\u7ec4\u662f\u4ec0\u4e48\u7684\u7ae5\u978b\u4eec[\u6233\u8fd9\u6233\u8fd9\u6233\u8fd9QWQ](https://www.luogu.org/blog/stonejuice/post-xue-xi-bi-ji-shu-zhuang-shuo-zu)**\n\n\u9605\u8bfb\u9898\u9762\uff0c\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5206\u522b\u7ef4\u62a4\u6240\u6709\u6570\u636e\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n- **\u6811\u72b6\u6570\u7ec4\u5fc5\u5907\uff1a\u6c42$lowbit$\uff1a**\n\n\u8fd9\u4e2a\u5c31\u4e0d\u8fc7\u591a\u8d58\u8ff0\u4e86\uff0c\u5e94\u8be5\u90fd\u61c2\u3002\n\n```cpp\nint lowbit(int x)\n{\n    return x & -x;\n}\n```\n\n- **\u5efa\u6811\uff0c\u7ef4\u62a4\u6700\u5927\u6700\u5c0f\u503c**\n\n\u9996\u5148\u4ece\u5efa\u6811\u5f00\u59cb\u3002\n\n\u524d\u9762\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u6211\u4eec\u4f7f\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c**\u6211\u4eec\u59d1\u4e14\u628a\u7ef4\u62a4\u6700\u5927\u503c\u7684\u6811\u72b6\u6570\u7ec4\u5b9a\u4e49\u4e3a$treex$\uff0c\u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u5219\u5b9a\u4e49\u4e3a$treen$**\n\n\u90a3\u4e48\uff0c\u5728\u5411\u4e0a\u4f20\u9012\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u6bcf\u4f20\u9012\u4e00\u5c42\uff0c\u5c31\u6bd4\u8f83\u4e00\u6b21\uff0c\u66f4\u65b0\u4e00\u6b21\u70b9\u3002\n\n\u8fd9\u91cc\u6253\u4e2a\u6bd4\u65b9\uff1a\n\n- 1\u3001\n```\n| \u8f93\u5165\u7684\u6570\u636e | 1 | / | / | / | / | / | / | / |\n| \u4e0b\u6807i     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| treex[i]  | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 1 |\n| treen[i]  | 1 | 1 |inf| 1 |inf|inf|inf| 1 |\n```\n- 2\u3001\n```\n| \u8f93\u5165\u7684\u6570\u636e | 1 | 5 | / | / | / | / | / | / |\n| \u4e0b\u6807i     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| treex[i]  | 1 | 5 | 0 | 5 | 0 | 0 | 0 | 5 |\n| treen[i]  | 1 | 1 |inf| 1 |inf|inf|inf| 1 |\n```\n- 3\u3001\n```\n| \u8f93\u5165\u7684\u6570\u636e | 1 | 5 | 3 | / | / | / | / | / |\n| \u4e0b\u6807i     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| treex[i]  | 1 | 5 | 3 | 5 | 0 | 0 | 0 | 5 |\n| treen[i]  | 1 | 1 | 3 | 1 |inf|inf|inf| 1 |\n```\n- 4\u3001\n```\n| \u8f93\u5165\u7684\u6570\u636e | 1 | 5 | 3 | 9 | / | / | / | / |\n| \u4e0b\u6807i     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| treex[i]  | 1 | 5 | 3 | 9 | 0 | 0 | 0 | 9 |\n| treen[i]  | 1 | 1 | 3 | 1 | inf | inf | inf | 1 |\n```\n- 5\u3001\n```\n| \u8f93\u5165\u7684\u6570\u636e | 1 | 5 | 3 | 9 | 4 | / | / | / |\n| \u4e0b\u6807i     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| treex[i]  | 1 | 5 | 3 | 9 | 4 | 4 | 0 | 9 |\n| treen[i]  | 1 | 1 | 3 | 1 | 4 | 4 | inf | 1 |\n```\n- 6\u3001\n```\n| \u8f93\u5165\u7684\u6570\u636e | 1 | 5 | 3 | 9 | 4 | 2 | / | / |\n| \u4e0b\u6807i     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| treex[i]  | 1 | 5 | 3 | 9 | 4 | 4 | 0 | 9 |\n| treen[i]  | 1 | 1 | 3 | 1 | 4 | 2 | inf | 1 |\n```\n- 7\u3001\n```\n| \u8f93\u5165\u7684\u6570\u636e | 1 | 5 | 3 | 9 | 4 | 2 | 11 | / |\n| \u4e0b\u6807i     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| treex[i]  | 1 | 5 | 3 | 9 | 4 | 4 | 11 | 12 |\n| treen[i]  | 1 | 1 | 3 | 1 | 4 | 2 | 11 | 1 |\n```\n- 8\u3001\n```\n| \u8f93\u5165\u7684\u6570\u636e | 1 | 5 | 3 | 9 | 4 | 2 | 11 | 14 |\n| \u4e0b\u6807i     | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 |\n| treex[i]  | 1 | 5 | 3 | 9 | 4 | 4 | 11 | 14 |\n| treen[i]  | 1 | 1 | 3 | 1 | 4 | 2 | 11 | 1 |\n```\n- $END$\n\n\u5c31\u50cf\u521a\u521a\u90a3\u6837\uff0c\u6bcf\u6b21\u4f20\u9012\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\uff08\u5c31\u662f\u628a\u6c42\u533a\u95f4\u548c\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u7d2f\u52a0\u6539\u4e3a\u4e86\u6c42\u6700\u503c\uff09\n\n\u5efa\u6811\u4ee3\u7801\uff1a\n\n```cpp\nvoid _add(int x, int k)//\u5efa\u6811QAQ \n{\n    for(;x <= n; x += lowbit(x))\n    {\n    \ttreex[x] = max(treex[x], k);\n    \ttreen[x] = min(treen[x], k);\n    }\n}\n```\n\n- **\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c**\n\n\u6211\u4eec\u521a\u521a\u8bf4\u8fc7\uff0c\u5efa\u6811\u65f6\u53ef\u4ee5\u76f4\u63a5\u5957\u533a\u95f4\u548c\u7684\u677f\u5b50\uff0c\u53ea\u9700\u8981\u628a\u7d2f\u52a0\u6539\u6210\u6c42\u6700\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u6c42\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u4e0d\u884c\u3002\u56e0\u4e3a\u4ed6\u6ca1\u6709\u50cf\u6c42\u533a\u95f4\u548c\u90a3\u6837\u7684\u6027\u8d28\u3002\n\n**\u56e0\u4e3a\u533a\u95f4\u5408\u4e2d\uff0c\u8981\u67e5\u8be2$[x,y]$\u7684\u533a\u95f4\u5408\uff0c\u662f\u6c42\u51fa$[1,x-1]$\u7684\u5408\u4e0e$[1,y]$\u7684\u5408\uff0c\u7136\u540e\u76f8\u51cf\u5c31\u5f97\u51fa\u4e86$[x,y]$\u533a\u95f4\u7684\u5408\u3002**\n\n\u4f46\u662f\u5f88\u660e\u663e\uff0c\u6c42\u6700\u503c\u662f\u4e0d\u80fd\u76f8\u51cf\u6c42\u5f97\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u8981\u60f3\u53e6\u5916\u4e00\u79cd\u529e\u6cd5\u3002\n\n\u6211\u4eec\u8fd9\u91cc\u5206\u4e24\u4e2d\u60c5\u51b5\u8ba8\u8bba\n\n- 1\u3001 $y-lowbit(y) > x$ \uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c**\u6211\u4eec\u53ef\u4ee5\u628a\u6c42$[x,y]$\u533a\u95f4\u7684\u6700\u503c\u62c6\u5206\u6210\u4e24\u90e8\u5206\uff0c\u5148\u6c42$[x,y-lowbit(y)]$\u4e2d\u6700\u503c\u4e0e$[y-lowbit(y)+1,y]$\u4e2d\u7684\u6700\u503c\uff0c\u518d\u6c42\u8fd9\u4e24\u8005\u7684\u6700\u503c\u3002**\n\n\t\u7a0d\u5fae\u7ec6\u5fc3\u4e00\u70b9\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0 $[y-lowbit(y)+1,y]$ \u5c31\u662f$tree[y]$\uff08\u53ef\u4ee5\u53e3\u6a21\u4e00\u4e0b\uff09\u3002\n    \n   \u4e8e\u662f\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff1a\u6c42 $[x,y-lowbit(y)]$\u4e2d\u6700\u503c \u4e0e $tree[y]$\u7684\u6700\u503c\u3002\n   \n- 2\u3001$y-lowbit(y) < x$\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c**\u6211\u4eec\u76f4\u63a5\u628a a[y]\uff08\u7b2c$y$\u4e2a\u8f93\u5165\u7684\u6570\u636e\uff09\u7ed9\u5265\u79bb\u51fa\u6765\uff0c\u4e8e\u662f\u539f\u95ee\u5c31\u53d8\u6210\u4e86\uff1a\u6c42 $[x,y-1]$\u4e2d\u6700\u503c \u4e0e $a[y]$ \u7684\u6700\u503c\u3002**\n\n\u8fd9\u4e24\u79cd\u60c5\u51b5\u60f3\u660e\u767d\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u7528**\u9012\u5f52**\u89e3\u51b3\u95ee\u9898\u4e86\u3002\n\n**\u9012\u5f52\u5230\u67d0\u4e00\u5c42\u65f6\uff0c$x == y$\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fd4\u56de $a[x]$ \u6216 $a[y]$ \u5c31\u884c\u4e86\u3002\uff08\u6bd5\u7adf $x == y$\u65f6\uff0c\u533a\u95f4$[x,y]$\u5c31\u53ea\u6709$a[x]$\u8fd9\u4e00\u4e2a\u6570\u636e\u4e86\uff09**\n\n\u8d34\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```cpp\n//\u4e0b\u9762\u4e24\u4e2a\u5b50\u51fd\u6570\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\n\nint _findmax(int x, int y)//\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c \n{ \n\tif(y > x)\n\t{\n\t\tif(y - lowbit(y) > x) return max(treex[y], _findmax(x, y - lowbit(y)));\n\t\telse return max(a[y], _findmax(x, y - 1));//\u5982\u4e0a\u6240\u8ff0\n\t}\n\treturn a[x];\n}\n\nint _findmin(int x, int y)//\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c \n{ \n\tif(y > x)\n\t{\n\t\tif(y - lowbit(y) > x) return min(treen[y], _findmin(x, y - lowbit(y)));\n\t\telse return min(a[y], _findmin(x, y - 1));\n\t}\n\treturn a[x];\n}\n```\n\n- **\u5408\u5e76\u4ee3\u7801**\n\n\u4e0a\u9762\u8fd9\u4e24\u4e2a\u5904\u7406\u5b8c\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5408\u5e76\u4ee3\u7801\u4e86\u3002\n\n\u6bd5\u7adf\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u5355\u70b9\u4fee\u6539\u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u70b9\uff1a**$treen$\uff08\u7ef4\u62a4\u6700\u5c0f\u503c\u7684\u6811\u72b6\u6570\u7ec4\uff09\u6700\u5f00\u59cb\u8981\u5168\u90e8\u8d4b\u503c\u4e3a$inf$\u3002\u6bd5\u7adf\u662f\u5b58\u6700\u5c0f\u503c\u3002\u800c$treex$\uff08\u7ef4\u62a4\u6700\u5927\u503c\u7684\u6811\u72b6\u6570\u7ec4\uff09\u5c31\u4e0d\u7ba1\u4e86\uff0c\u56e0\u4e3a\u6ca1\u6709\u6570\u636e\u5c0f\u4e8e$0$\u3002**\uff08\u5b9e\u9645\u4e0a\u5efa\u6811\u7684\u8868\u683c\u91cc\u5c31\u4f53\u73b0\u51fa\u8fd9\u4e00\u70b9\u4e86\uff09\n\n**\u6700\u540e\u6309\u7167\u9898\u76ee\u8981\u6c42\u6765\uff0c\u7528\u533a\u95f4\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86\u3002**\n\n## \u4e0a\u4ee3\u7801\uff01\n\n```cpp\n#include<bits/stdc++.h>\n#define mian main\n#define QWQ puts(\"QWQ\");\nusing namespace std;\n\nint n, m;\nint a[50005] ,treex[50005], treen[50005];\n\nint lowbit(int x)//\u6c42lowbit:2\u8fdb\u5236\u4e0b\u672b\u5c3e0\u7684\u4e2a\u6570\u3002\u53ef\u8868\u793atree\u4e2d\u5305\u542b\u6570\u636e\u6570\u91cf \n{\n    return x & -x;\n}\n\nvoid _add(int x, int k)//\u5efa\u6811QAQ \n{\n    for(;x <= n; x += lowbit(x))\n    {\n    \ttreex[x] = max(treex[x], k);\n    \ttreen[x] = min(treen[x], k);\n    }\n}\n\nint _findmax(int x, int y)//\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c \n{ \n\tif(y > x)\n\t{\n\t\tif(y - lowbit(y) > x) return max(treex[y], _findmax(x, y - lowbit(y)));\n\t\telse return max(a[y], _findmax(x, y - 1));\n\t}\n\treturn a[x];\n}\n\nint _findmin(int x, int y)//\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c \n{ \n\tif(y > x)\n\t{\n\t\tif(y - lowbit(y) > x) return min(treen[y], _findmin(x, y - lowbit(y)));\n\t\telse return min(a[y], _findmin(x, y - 1));\n\t}\n\treturn a[x];\n}\n\nint main()\n{\n    memset(treen, 0x3f3f3f3f, sizeof(treen));\n\tscanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i ++) \n    {\n        scanf(\"%d\", &a[i]);\n        _add(i, a[i]);\n    }\n    for(int i = 1; i <= m; i ++)\n    {\n        int l, r;\n        scanf(\"%d%d\", &l, &r);\n        cout << _findmax(l, r) - _findmin(l, r) << endl;\n    }\n    return 0;\n}\n```\n\n~~\uff08\u6084\u6084\u6c42\u8d5e\uff0c\u5e94\u8be5\u6ca1\u4eba\u53d1\u73b0\u6211QAQ\uff09~~",
        "postTime": 1565617415,
        "uid": 133426,
        "name": "stone_juice\u77f3\u6c41",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "~~\u597d\u5947\u4e3a\u5565\u6807\u7b7e\u6ca1ST\u8868~~\n\n\u8fd9\u9898\u8ba9\u6211\u4eec\u6c42\u67d0\u4e2a\u533a\u95f4\u7684\u6700\u5927\uff0c\u6700\u5c0f\u503c\u7684\u5dee\u503c\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c\u5c31\u77e5\u9053\u7528O(nlogn)\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u8fc7\n# \u4e00\u770b\u5c31\u77e5\u9053\u7528ST\u8868\u5199\n\u4e0d\u7528\u60f3\u592a\u590d\u6742QWQ\n\n\u5982\u679c\u4f60\u7406\u89e3\u4e86ST\u8868\u6a21\u677f\u5e76A\u4e86\uff0c\u628a\u6a21\u677f\u6539\u4e00\u4e0b\uff0c\u52a0\u4e2a\u6700\u5927\u503c\uff0c\u5c31\u884c\u4e86QWQ~~\u4f2a\u53cc\u500d\u7ecf\u9a8c~~\n\n\u5982\u679c\u4e0d\u77e5\u9053ST\u8868QWQ\uff0c\u6211\u79d1\u666e\u4e00\u4e0b\uff0c\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\uff0c\u53ef\u4ee5\u53bb\u505aST\u6a21\u677f\n\nST\u8868\u662f\u4e13\u95e8\u7528\u6765\u6c42\u591a\u4e2a\u533a\u95f4\u7684\u6700\u5927\uff0c\u6700\u5c0f\u503c\uff0c\u7528\u7684\u662f\u500d\u589e\u7684\u601d\u60f3\uff0c\u7c7b\u4f3c\u4e8e\u52a8\u89c4\n\n\u5148\u7528O(nlogn)\u548c\u4e00\u4e2a~~\u52a8\u89c4~~\u65b9\u7a0b\u8fdb\u884c\u5904\u7406\u6570\u7ec4\n\n\u4e4b\u540e\u5728O(1)\u8c03\u7528\u51fa\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\uff0c\u6700\u5c0f\u503cQWQ\n\n\u5728\u6c42\u5b8c\u5168\u4e0d\u5b9a\u533a\u95f4\u7684\u6700\u503c\u4e0a\uff0c\u4f18\u4e8e\u5355\u8c03\u961f\u5217\n\n\u662f\u4e0d\u662f\u4e00\u4e2a\u5f88\u795e\u5947\u7684\u7b97\u6cd5\uff0c\u800c\u4e14\u4ee3\u7801\u91cf\u4e0d\u591a\uff0c\u6c42\u4e00\u4e2a\u6700\u503c\u53ea\u8981\u51996\u884c\n\n# \u91cd\u70b9\u662f\u901f\u5ea6\u8d85\u5feb\u7684QWQ\n\n## \u4e00\u5171\u53ea\u7528\u4e86316ms\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff0c\u53ea\u670928\u884c\uff0c\u849f\u84bb~~\u61d2\u4eba~~\u798f\u5229QWQ\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint lxy[180010][22],hrb[180010][21],n,m,i,j,k,l,r;\n//lxy\u6570\u7ec4\u7528\u4e8e\u6c42\u6700\u5927\u503c\uff0chrb\u6570\u7ec4\u7528\u4e8e\u6c42\u6700\u5c0f\u503c\nint ST(int l,int r)//O(1)\u8c03\u7528QWQ\n{\n    int s=log2(r-l+1),x,y;\n    //log2(r-l+1)\u662f\u4ee52\u4e3a\u5e95\u7684\u5bf9\u6570\uff0c\u5199\u6210\u7b49\u5f0f\u5c31\u662f\uff0c2\u7684log2(r-l+1)\u6b21\u65b9\u7b49\u4e8e(r-l+1);\n    x=max(lxy[l][s],lxy[r-(1<<s)+1][s]);//\u533a\u95f4\u6700\u5927\n    y=min(hrb[l][s],hrb[r-(1<<s)+1][s]);//\u533a\u95f4\u6700\u5c0f\n    //\u795e\u5947\u7684\u51bb\u67dc\u65b9\u7a0bQWQ\uff0c\u8bb0\u4e0b\u6765\u5c31\u597d\uff0c\u53cd\u6b63\u4e0d\u957f\n    return x-y;//\u8fd4\u56de\u5dee\u503c\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);//\u8f93\u5165\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&lxy[i][0]),hrb[i][0]=lxy[i][0];//\u56e0\u4e3a\u8981\u7528\u4e24\u4e2a\u6570\u7ec4QWQ\n\tfor(i=1;i<=21;i++)//\u8fd9\u4e2a\u5faa\u73af\u7684\u4e0a\u754c\u51b3\u5b9a\u4e8e\u6570\u636e\u7684\u5927\u5c0f\uff0c\u53732\u768421\u6b21\u65b9\u5927\u4e8e\u6570\u636e\uff0c\u5982\u679c\u6570\u636e\u5728\u5927\u4e0a\u754c\u8c03\u9ad8\uff0clogn\u662f\u8fd9\u4e2a\u5faa\u73afQWQ\n\tfor(k=1;k+(1<<i)<=n+1;k++)//\u63a5\u8fdb\u4e8en\uff0c\u7b97\u6210n\uff0c\u5176\u5b9e\u6ca1\u90a3\u4e48\u5927\n\t{\n\t\tlxy[k][i]=max(lxy[k][i-1],lxy[k+(1<<(i-1))][i-1]);\n\t\thrb[k][i]=min(hrb[k][i-1],hrb[k+(1<<(i-1))][i-1]);\n        //\u795e\u5947\u51bb\u67dc\u65b9\u7a0b\u5904\u7406QWQ\uff0c\u4e0d\u7406\u89e3\uff0c\u4e5f\u53ef\u4ee5\u4e0b\u6765\uff0c\u53ea\u67094\u884c\n\t}\n\tfor(i=1;i<=m;i++)//O(1)\u8c03\u7528\u5f00\u59cb\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tprintf(\"%d\\n\",ST(l,r));//\u4e0a\u9762\u7684\u51fd\u6570\uff0c\u76f4\u63a5\u8f93\u51fa\u8fd4\u56de\u503c\n\t}\n\treturn 0;//\u7ed3\u675f\n}\n```\n\u662f\u4e0d\u662f\u5f88\u795e\u5947\u7684\u7b97\u6cd5\uff0c\u53ea\u898128\u884c\u5c31\u53ef\u4ee5\u5207\u4e00\u9053\u84dd\u9898\uff0c\u662f\u4e0d\u662f\u5f88\u5f00\u5fc3\n\n\u800c\u4e14\u77ed\uff0c\u5c11\uff0c\u5feb\u3002\u3002\u3002\n\n\u5b9e\u5728\u662f\u849f\u84bb\u5fc5\u5907\u7b97\u6cd5QWQ\n\n\u5f88\u5bb9\u6613\u5c31\u5b66\u4f1a\u4e86\n\n\u5982\u679c\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3ST\u8868\u7684\uff0c\u53ef\u4ee5\u5728\u6d1b\u8c37\u627e\u6a21\u677f\u9898\n\n~~\u5077\u5077\u8bf4\u4e00\u53e5\u5176\u5b9eST\u8868\u7684\u5f88\u591a\u9898\u76ee\u662f\u591a\u500d\u7ecf\u9a8cQWQ~~\n\n\u5982\u679c\u4f60\u8ba4\u53ef\u6211\u7684\u601d\u8def\u8bdd\n\n# \u8bf7\u70b9\u8d5e\uff0c\u5173\u6ce8\uff0c~~\u6295\u98df\uff0c\u7d20\u8d28\u4e09\u8fde~~\uff0c\u8c22\u8c22\u652f\u6301QWQ\n\n~~\u4e0d\u53ef\u4ee5\u62d2\u7edd\u7684\u62e5\u62b1~~",
        "postTime": 1541595659,
        "uid": 104710,
        "name": "\u767d\u70db\u8475",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\u4eca\u5929\u5b66\u4f1a\u7684RMQ\uff0c\u5982\u679c\u4f60\u8ddf\u7740\u6211\u7684\u811a\u6b65\u8d70\uff0c\u4f60\u4e5f\u4f1a\u5b66\u4f1a\u53c8\u77ed\u53c8\u5b9e\u7528\u7684RMQ\u4e86\uff01\uff01\uff01\n### \u9898\u610f\n\u5f88\u6e05\u6670\u4e86\uff0c\u5c31\u662f\u6c42\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u51cf\u6389\u6700\u5c0f\u503c\u4e86\uff0c\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\n### RMQ\nRMQ\u6307\u7684\u662f\u6c42\u4e00\u4e2a\u533a\u95f4\u7684\u67d0\u4e2a\u6570\u503c\uff08\u4f8b\u5982\uff1a\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c......)\n\n### \u5b9e\u73b0\n#### \u9884\u5904\u7406\n\n\u8bbe$a[i]$\u662f\u8981\u6c42\u533a\u95f4\u6700\u503c\u7684\u6570\u5217\uff0c$F[i, j]$\u8868\u793a\u4ece\u7b2ci\u4e2a\u6570\u8d77\u8fde\u7eed2^j\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\u3002\uff08DP\u7684\u72b6\u6001\uff09\n\n\u4f8b\u5982\uff1a\na\u6570\u5217\u4e3a\uff1a3 2 4 5 6 8 1 2 9 7\n\nF[1\uff0c0]\u8868\u793a\u7b2c1\u4e2a\u6570\u8d77\uff0c\u957f\u5ea6\u4e3a2^0=1\u7684\u6700\u5927\u503c\uff0c\u5176\u5b9e\u5c31\u662f3\u8fd9\u4e2a\u6570\u3002\n\n\u540c\u7406 F[1,1]=max(3,2)=3,F[1\uff0c2]=max(3,2,4,5) = 5 F[1\uff0c3] = max(3,2,4,5,6,8,1,2) = 8;\n\n\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u5bb9\u6613\u7684\u770b\u51faF[i,0]\u5c31\u7b49\u4e8ea[i]\u3002\uff08DP\u7684\u521d\u59cb\u503c\uff09\n\n\u6211\u4eec\u628aF[i\uff0cj]\u5e73\u5747\u5206\u6210\u4e24\u6bb5\uff08\u56e0\u4e3aF[i\uff0cj]\u4e00\u5b9a\u662f\u5076\u6570\u4e2a\u6570\u5b57\uff09\uff0c\n\u4ece i \u5230i + 2 ^ (j - 1) - 1\u4e3a\u4e00\u6bb5\uff0ci + 2 ^ (j - 1)\u5230i + 2 ^ j - 1\u4e3a\u4e00\u6bb5(\u957f\u5ea6\u90fd\u4e3a2 ^ (j - 1))\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b$F[i, j]$=$max$$\uff08F[ij-1],F[i+2^(j-1)\uff0cj-1]\uff09$\u3002\n\n\n#### \u67e5\u8be2\n\n\u5047\u5982\u6211\u4eec\u9700\u8981\u67e5\u8be2\u7684\u533a\u95f4\u4e3a(i,j)\uff0c\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u627e\u5230\u8986\u76d6\u8fd9\u4e2a\u95ed\u533a\u95f4(\u5de6\u8fb9\u754c\u53d6i\uff0c\u53f3\u8fb9\u754c\u53d6j) \u7684\u6700\u5c0f\u5e42\uff08\u53ef\u4ee5\u91cd\u590d\uff0c\u6bd4\u5982\u67e5\u8be21\uff0c2\uff0c3\uff0c4\uff0c5\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u8be21234\u548c2345\uff09\u3002\n\n\u56e0\u4e3a\u8fd9\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u4e3aj - i + 1,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53d6\nk=log( j - i + 1)(\u4ee52\u4e3a\u5e95\uff09\n\n\u5219\u6709\uff1aRMQ(i, j)=max{F[i , k], F[ j - 2 ^ k + 1, k]}\u3002\n\n```cpp\nvoid work(int n) \n{\n    for (re int i=1;i<=n;i++) f[i][0]=a[i];\n    for (re int j=1;(1<<j)<=n;j++) \n        for (re int i=1;i+(1<<j)-1<=n;i++) \n            f[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j - 1]);\n}\nint RMQ(int l, int r) \n{\n    re int k=0;\n    while ((1<<(k+1))<=r-l+1)\n         k++;\n    return max(f[l][k],f[r-(1<<k)+1][k]);\n}\n```\n\u4ee3\u7801\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u4e0a\u9762\u662f\u6c42\u6700\u5927\u7684\n\n\u4e0b\u9762\u662f\u6c42\u6700\u5c0f\u7684\n```cpp\nvoid work2(int n) \n{\n    for (re int i=1;i<=n;i++) dp[i][0]=a[i];\n    for (re int j=1;(1<<j)<=n;j++) \n        for (re int i=1;i+(1<<j)-1<=n;i++) \n            dp[i][j]=min(dp[i][j-1],dp[i+(1<<(j-1))][j - 1]);\n}\nint RMQ2(int l, int r) \n{\n    re int k=0;\n    while ((1<<(k+1))<=r-l+1)\n         k++;\n    return min(dp[l][k],dp[r-(1<<k)+1][k]);\n}\n```\n\n\u8fd9\u6837\u5c31\u80fd\u5f97\u51fa\u5168\u4ee3\u7801\u4e86\n```cpp\n#include<cstdio>\n#include<iostream>\n#define re register\nusing namespace std;\nint a[2000005],f[50005][20],dp[50005][20];\nvoid work(int n) \n{\n    for (re int i=1;i<=n;i++) f[i][0]=a[i];\n    for (re int j=1;(1<<j)<=n;j++) \n        for (re int i=1;i+(1<<j)-1<=n;i++) \n            f[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j - 1]);\n}\nint RMQ(int l, int r) \n{\n    re int k=0;\n    while ((1<<(k+1))<=r-l+1)\n         k++;\n    return max(f[l][k],f[r-(1<<k)+1][k]);\n}\nvoid work2(int n) \n{\n    for (re int i=1;i<=n;i++) dp[i][0]=a[i];\n    for (re int j=1;(1<<j)<=n;j++) \n        for (re int i=1;i+(1<<j)-1<=n;i++) \n            dp[i][j]=min(dp[i][j-1],dp[i+(1<<(j-1))][j - 1]);\n}\nint RMQ2(int l, int r) \n{\n    re int k=0;\n    while ((1<<(k+1))<=r-l+1)\n         k++;\n    return min(dp[l][k],dp[r-(1<<k)+1][k]);\n}\nint main()\n{\n    re int n,m;\n    scanf(\"%d %d\",&n,&m);\n    for (re int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i]);\n    work(n);    \n    work2(n);\n    for (int i=1;i<=m;i++)\n    {\n    \tint l,r;\n    \tcin>>l>>r;\n    \tprintf(\"%d\\n\",RMQ(l,r)-RMQ2(l,r));\n\t}\n}\n\n```\n\n\n\n\n",
        "postTime": 1553765843,
        "uid": 41988,
        "name": "RNG_XDD\u5c0f\u53ee\u5f53",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "#### \u8981\u6c42\u51fa\u6700\u9ad8\u548c\u6700\u4f4e\u5976\u725b\u4e4b\u95f4\u7684\u8eab\u9ad8\u5dee\uff0c\u81ea\u7136\u5c31\u8981\u77e5\u9053\u6700\u9ad8\u548c\u6700\u4f4e\u5976\u725b\u7684\u8eab\u9ad8\uff0c\u76f4\u63a5\u7684\u60f3\u6cd5\u5c31\u662f\u8d2a\u5fc3\u66b4\u529b\uff0c\u76f4\u63a5\u641c\u4e00\u904d\u533a\u95f4\uff0c\u4f46\u8fd9\u6837\u5f88\u660e\u663e\u5c31\u4f1a\u8d85\u65f6\uff0c\u90a3\u6211\u4eec\u5c31\u60f3\u4e00\u60f3\u5982\u4f55\u5148\u5c06\u6bcf\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u5976\u725b\u8eab\u9ad8\u6700\u9ad8\u548c\u6700\u4f4e\u6c42\u51fa\u6765\uff0c\u6bcf\u6b21\u8be2\u95ee\u76f4\u63a5\u8c03\u7528\u5c31\u597d\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u8981\u7528\u5230RMQ\u8fd9\u4e2a\u795e\u5947\u7684\u4e1c\u897f\uff08\u6211\u89c9\u5f97\u6bcf\u4e2a\u7b97\u6cd5\u90fd\u597d\u795e\u5947\u3001\u3001-_-|||\uff09\u3002\n### RMQ\uff08Range Minimum/Maximum Query\uff09\uff0c\u5373\u533a\u95f4\u6700\u503c\u67e5\u8be2\uff0c\u662f\u6307\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u5bf9\u4e8e\u957f\u5ea6\u4e3an\u7684\u6570\u5217A\uff0c\u56de\u7b54\u82e5\u5e72\u6b21\u8be2\u95eeRMQ(i,j)\uff0c\u8fd4\u56de\u6570\u5217A\u4e2d\u4e0b\u6807\u5728\u533a\u95f4[i,j]\u4e2d\u7684\u6700\u5c0f/\u5927\u503c\u3002RMQ\u5c31\u8981\u7528\u5230ST\u7b97\u6cd5\u8fd9\u4e2a\u4e5f\u5f88\u795e\u5947\u7684\u7b97\u6cd5\n## ST\uff08Sparse Table\uff09\u7b97\u6cd5\u53ef\u4ee5\u5728O(nlogn)\u65f6\u95f4\u5185\u8fdb\u884c\u9884\u5904\u7406\uff0c\u7136\u540e\u5728O(1)\u65f6\u95f4\u5185\u56de\u7b54\u6bcf\u4e2a\u67e5\u8be2\u3002\n\u8fd9\u4e2a\u9898\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662f\u9884\u5904\u7406\uff0c\uff08\u91cd\u70b9\u5728\u8fd9\u54c8\uff09\u8981\u7528\u5230ST\u7b97\u6cd5\u54c8\n\u8bbeA[i]\u662f\u8981\u6c42\u533a\u95f4\u6700\u503c\u7684\u6570\u5217\uff0cF[i, j]\u8868\u793a\u4ece\u7b2ci\u4e2a\u6570\u8d77\u8fde\u7eed2^j\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\u3002\n###### \u4f8b\u5982\n##### A\u6570\u5217\u4e3a\uff1a3 2 4 5 6 8 1 2 9 7\nF[1\uff0c0]\u8868\u793a\u7b2c1\u4e2a\u6570\u8d77\uff0c\u957f\u5ea6\u4e3a2^0=1\u7684\u6700\u5927\u503c\uff0c\u5176\u5b9e\u5c31\u662f3\u8fd9\u4e2a\u6570\u3002\n\u540c\u7406 F[1,1] = max(3,2) = 3, F[1\uff0c2]=max(3,2,4,5) = 5\uff0cF[1\uff0c3] = max(3,2,4,5,6,8,1,2) = 8;\n###### \u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u5bb9\u6613\u7684\u770b\u51faF[i,0]\u5c31\u7b49\u4e8eA[i]\u3002\n##### \u6211\u4eec\u628aF[i\uff0cj]\u5e73\u5747\u5206\u6210\u4e24\u6bb5\uff08\u56e0\u4e3aF[i\uff0cj]\u4e00\u5b9a\u662f\u5076\u6570\u4e2a\u6570\u5b57\uff09\uff0c\u4ece i \u5230i + 2 ^ (j - 1) - 1\u4e3a\u4e00\u6bb5\uff0ci + 2 ^ (j - 1)\u5230i + 2 ^ j - 1\u4e3a\u4e00\u6bb5(\u957f\u5ea6\u90fd\u4e3a2 ^ (j - 1))\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0bF[i, j]=max\uff08F[i\uff0cj-1], F[i + 2^(j-1)\uff0cj-1]\uff09\u3002\n\u7b2c\u4e8c\u90e8\u5206\u662f\u67e5\u8be2\u8fd9\u5c31\u5f88\u968f\u610f\u800c\u7b80\u5355\u5566\u4e00\u822c\u90fd\u662f\u6839\u636e\u9898\u76ee\u81ea\u5df1\u53d8\u7684\u3002\u3002\n\u5927\u81f4\u7684RMQ\u5c31\u8fd9\u6837\u5177\u4f53\u7684\u81ea\u5df1\u627e\u5ea6\u5a18\u6216\u662f\u4e2a\u968f\u4fbf\u4ec0\u4e48\u7f51\u7ad9\u4e00\u67e5\u5c31\u77e5\u9053\u4e86\uff0c\uff0c\n\u4e0b\u9762\u6765\u770b\u770b\u8fd9\u9898\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n using namespace std;\nconst int M=50005,N=50;\nint f1[M][N],f2[M][N],x;//\u56e0\u4e3a\u662f\u6c42\u6700\u5927\u548c\u6700\u5c0f\u503c\u6240\u4ee5\u6709\u4e24\u4e2af\u6570\u7ec4\nint n,q;\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;i++){\n\t    scanf(\"%d\",&x);//\u6211\u76f4\u63a5\u7701\u6389\u4e86A\u6570\u7ec4\u3002\u51d1\u4e2a\u6216\u8005\u770b\u5427\u256e(\u256f\u25bd\u2570)\u256d\u53cd\u6b63\u5185\u5bb9\u90fd\u4e00\u6837\u628aX\u5f53\u505aA\u5c31\u597d\u5566\n\t    f1[i][0]=f2[i][0]=x;//\u521d\u59cb\u5316\uff0c\u4ecei\u5934\u5976\u957f\u5ea6\u4e3a2^0\u7684\u533a\u95f4\u4e5f\u5c31\u662f\u81ea\u5df1\u3002\n\t}\n\tfor(int j=1;1<<j<=n;j++)//\u679a\u4e3e2\u7684j\u6b21\u65b9\n\t    for(int i=1;i+(1<<j)-1<=n;i++){//\u679a\u4e3e\u8d77\u70b9\n\t        f1[i][j]=max(f1[i][j-1],f1[i+(1<<j-1)][j-1]);//\u4ecei\u5f00\u59cb\u957f\u5ea6\u4e3a2^j\u7684\u533a\u95f4\u6700\u5927\u503c\u3002\uff082^j=2^(j-1)+2^(j-1)\u8fd9\u4e2a\u7b80\u5355\u7684\u4e1c\u897f\u5c31\u53ef\u4ee5\u89e3\u91caf1[i+(1<<j-1)][j-1]\u4e86\u3002                                            \n\t        f2[i][j]=min(f2[i][j-1],f2[i+(1<<j-1)][j-1]);//\u4e0e\u4e0a\u9762\u540c\u7406\n\t    }\n\twhile(q--){\n\t\tint a,b,k,m1,m2;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tk=log2(b-a+1);//\u6c42\u51fa\u533a\u95f4\u5185a\u6700\u591a\u52a0\u591a\u5c112\u6b21\u65b9\uff082^j\u4e2dj\u7684\u6700\u5927\u503c\uff09\n\t\tm1=max(f1[a][k],f1[b-(1<<k)+1][k]);//\u533a\u95f4\u5206\u4e3aa\u52302^K\u548cb-2^K+1\u5230b\u4e24\u90e8\u5206\n\t\tm2=min(f2[a][k],f2[b-(1<<k)+1][k]);\n\t\tprintf(\"%d\\n\",m1-m2);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1533103974,
        "uid": 17506,
        "name": "\u8f69\u69ff",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u4e00\u6bb5\u533a\u95f4\u7684\u6781\u5dee\u3002\n\n\u770b\u770bn<=50000\uff0c\u5fc5\u5b9a\u662f\u7528O\uff08nlogn\uff09\u65f6\u95f4\u590d\u6742\u5ea6\u7684RMQ\u3002\n\n\u4f46RMQ\u7684\u5b9e\u73b0\u65b9\u5f0f\u6709\u8bb8\u591a\u79cd\uff0c\u6811\u72b6\u6570\u7ec4\u3001\u7ebf\u6bb5\u6811\u3001ST\u8868\u90fd\u53ef\u4ee5\u3002\n\n\u9274\u4e8e\u524d\u9762\u7684\u5927\u4f6c\u53ea\u7ed9\u51fa\u4e86\u7ebf\u6bb5\u6811\u4e0eST\u8868\u505a\u6cd5\uff0c\u6211\u5c31\u6765\u4e00\u53d1\u5e38\u6570\u5c0f\u3001\u4ee3\u7801\u77ed\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u636e\u8bf4\u901f\u5ea6\u4e00\u4ea4\u5c31\u6392rank3\uff0c180ms\uff0c\u8fd8\u662f\u5f88\u5feb\u7684\u3002\n\n\u7528\u6811\u72b6\u6570\u7ec4\u539f\u7406\u540c\u65f6\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n```cpp\n    #include<iostream>\n        #include<cstdio>\n        #include<cmath>\n        #include<cstring>\n        #include<cstdlib>\n        #include<algorithm>\n        #include<queue>\n        #define ll long long\n        #define re register\n        #define il inline\n        #define fp(i,a,b) for(re int i=a;i<=b;i++)\n        #define fq(i,a,b) for(re int i=a;i>=b;i--)\n        using namespace std;\n        const int N=50005; \n        int n,q,c[N],b[N],s[N]; //b\u7ef4\u62a4\u6700\u5927\u503c\uff0cs\u7ef4\u62a4\u6700\u5c0f\u503c\n        il int gi()\n        {\n          re int x=0,t=1;\n          re char ch=getchar();\n          while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n          if(ch=='-') t=-1,ch=getchar();\n          while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n          return x*t;\n        }\n        il void add(re int x,re int k)//\u533a\u95f4\u7ef4\u62a4\u6700\u5927\u6700\u5c0f\u503c\n        {\n            for(;x<=n;x+=x&-x) b[x]=max(b[x],k),s[x]=min(s[x],k);\n        }\n        il int Query(re int l,re int r)//\u533a\u95f4\u67e5\u8be2\u6700\u5927\u6700\u5c0f\u503c\n        {\n            re int mn=2e9,mx=-1;\n            while(l<=r)\n            {\n                for(;r-(r&-r)>=l;r-=r&-r) mx=max(mx,b[r]),mn=min(mn,s[r]);\n                mx=max(c[r],mx);mn=min(mn,c[r]);\n                r--;//\u8fd8\u6709\u4e00\u90e8\u5206\u533a\u95f4\u672a\u6d89\u53ca\n            }\n            return mx-mn;\n        }\n        int main()\n        {\n            memset(s,63,sizeof(s));\n            n=gi();q=gi();\n            fp(i,1,n)\n            {\n                c[i]=gi();\n                add(i,c[i]);\n            }\n            fp(i,1,q) \n            {\n              re int l=gi(),r=gi();\n              printf(\"%d\\n\",Query(l,r));\n            }\n            return 0;\n}\n```",
        "postTime": 1515225703,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "  \u8fd9\u9898\u5c45\u7136\u6ca1\u6709p\u7684\u9898\u89e3\uff0c\u90a3\u6211\u6765\u53d1\u4e00\u53d1\n  \n  \u9898\u610f\uff1a\u6c42l-r\u8fd9\u4e2a\u533a\u95f4\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u7684\u5dee\n  \n  \u4e8e\u662f\u6211\u4eec\u8054\u60f3\u5230\u8fd9\u662f\u4e00\u4e2a~~(\u7ebf\u6bb5\u6811\u88f8\u9898)~~\u533a\u95f4\u6c42\u6700\u503c\u7684\u95ee\u9898\u3002\n  \n  \u533a\u95f4\u6c42\u6700\u503c\u6211\u7528\u7684\u662f\u7ebf\u6bb5\u6811\u3002 \n  \n  \u5982\u679c\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u8bf7\u81ea\u884c\u5b66\u4e60\n  \n  \u7ef4\u62a4\u4e24\u9897\u7ebf\u6bb5\u6811\uff0c\u7528tree\u7ef4\u62a4\u533a\u95f4\u5185\u7684\u6700\u5c0f\u503c\n  \n  \u540c\u65f6\u7528tree1\u7ef4\u62a4\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\uff0c\u5728\u6c42\u503c\u65f6\u5206\u522b\u6c42\u51fa\u6700\u5927\u4e0e\u6700\u5c0f\u503c\u76f8\u51cf\u5c31\u884c\u4e86\uff0c\u65f6\u95f4O(m lg n)\n  \n  \u4e0a\u4ee3\u7801(\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca)\n```pascal\nuses math;\n//math\u5e93\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u4f46\u6ce8\u610f\u5728\u6b63\u5f0f\u6bd4\u8d5b\u91cc\u5343\u4e07\u4e0d\u8981\u7528\uff0c\u52a0assign\u540e\u4f1a217\u9519\u8bef\nvar\n  i,j,n,k,m,oo,ans,p,mid,x,y,id:longint;\n  a,tree,tree1:array[0..4000009] of longint;//\u7ebf\u6bb5\u6811\u6ce8\u610f\u5f004\u500d\u7a7a\u95f4\nprocedure build(p,l,r:longint);//\u5efa\u6811\nvar\n  mid:longint;\nbegin\n  if (l=r) then begin tree[p]:=a[l]; tree1[p]:=a[l]; exit; end;\n  mid:=(l+r) div 2;\n  build(p*2,l,mid);\n  build(p*2+1,mid+1,r);\n  tree[p]:=min(tree[p+p],tree[p+p+1]);\n   tree1[p]:=max(tree1[p+p],tree1[p+p+1]);\nend;\n//\u6211\u4eec\u53ef\u4ee5\u7528teee\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\uff0c\u7528tree1\u7ef4\u62a4\u533a\u95f4\u6700\u5927\nfunction query(p,l,r,x,y:longint):longint;\nvar\n  mid:longint;\nbegin\n  mid:=(l+r) div 2;\n  if (l=x)and(r=y) then exit(tree[p])\n  else if y<=mid then exit(query(p*2,l,mid,x,y))\n  else if x>=mid+1 then exit(query(p*2+1,mid+1,r,x,y))\n  else exit(min(query(p*2,l,mid,x,mid),query(p*2+1,mid+1,r,mid+1,y)));\nend;\n//\u7ebf\u6bb5\u6811\u6c42\u6700\u5c0f\u503c\nfunction query1(p,l,r,x,y:longint):longint;\nvar\n  mid:longint;\nbegin\n  mid:=(l+r) div 2;\n  if (l=x)and(r=y) then exit(tree1[p])\n  else if y<=mid then exit(query1(p*2,l,mid,x,y))\n  else if x>=mid+1 then exit(query1(p*2+1,mid+1,r,x,y))\n  else exit(max(query1(p*2,l,mid,x,mid),query1(p*2+1,mid+1,r,mid+1,y)));\nend;\n//\u7ebf\u6bb5\u6811\u6c42\u6700\u5927\u503c(\u53ef\u4ee5\u628a\u6c42\u6700\u5c0f\u503c\u7684\u4ee3\u7801\u590d\u5236\u4e0b\u6765\u6539\u4e00\u6539(\u9003)\nbegin\n  oo:=100000000;\n  readln(n,m);\n  for i:=1 to n do readln(a[i]);\n  build(1,1,n);//\u5efa\u6811\n  for i:=1 to m do\n  begin\n    readln(x,y);\n    writeln(query1(1,1,n,x,y)-query(1,1,n,x,y));//\u6c42\u533a\u95f4\u6700\u503c\n  end;\nend.\n```\n\n",
        "postTime": 1534818575,
        "uid": 10601,
        "name": "shuiyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "## P2880 [USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\n[TOC]\n\n### \u5927\u4f53\u9898\u610f\n> \u7ed9\u4f60\u4e00\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u8ba9\u4f60\u6c42\u5f97\u8fd9\u4e2a\u533a\u95f4\u5185\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee.\n\n### \u601d\u8def\uff1a\n~~\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2aSB\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u548c\u533a\u95f4\u5dee\u561b\uff0c\u90fd\u4e0d\u7528\u5f85\u4fee\u6539\uff0c\u591a\u7b80\u5355~~\n\n\u597d\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c:\n\n\u5f88\u663e\u7136\u554a\uff0c\u5982\u679c\u4f60\u4f1a\u7ebf\u6bb5\u6811\u7684\u8bdd\u5f88\u5bb9\u6613\u5c31\u660e\u767d\u4e86\uff0c\u4e0d\u4f1a\u7684\u8bdd[\u8fd9\u91cc](https://www.cnblogs.com/TheRoadToTheGold/p/6254255.html)\n```cpp\nint query_max(int rt, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) return tree[rt].max;//\u5982\u679c\u5728\u533a\u95f4\u5185\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u533a\u95f4\u6700\u5927\u503c\n\tint mid = (l + r) >> 1, maxn = -1;//\u56e0\u4e3a\u8981\u53d6ma\u6240\u4ee5\u641e\u6210-1\n\tif (L <= mid) maxn = max(maxn, query_max(lson, l, mid, L, R));//\u5bf9\u4e24\u8fb9\u533a\u95f4\u90fd\u8981\u53d6max\n\tif (R > mid) maxn = max(maxn, query_max(rson, mid + 1, r, L, R));\n\treturn maxn;\n}\n```\n\n\u8fd9\u6837\u7684\u8bdd\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\u5c31\u5f88\u5bb9\u6613\u4e86.\n\n```cpp\nint query_min(int rt, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) return tree[rt].min;\n\tint mid = (l + r) >> 1, minn = 1e9 + 7;\n\tif (L <= mid) minn = min(minn, query_min(lson, l, mid, L, R));\n\tif (R > mid) minn = min(minn, query_min(rson, mid + 1, r, L, R));\n\treturn minn;\n}\n```\n### code \n```cpp\n#include <bits/stdc++.h>\n\n#define N 100010\n#define M 1010\n#define lson rt << 1\n#define rson rt << 1 | 1\n\nusing namespace std;\nint n, q;\nstruct node {\n\tint max, min;\n}tree[N << 1];\n\nint read() {\n\tint s = 0, f = 0; char ch = getchar();\n\twhile (!isdigit(ch)) f |= (ch == '-'), ch = getchar();\n\twhile (isdigit(ch)) s = s * 10 + (ch ^ 48), ch = getchar();\n\treturn f ? -s : s;\n}\n\nvoid push_up(int rt) {\n\ttree[rt].max = max(tree[lson].max, tree[rson].max);\n\ttree[rt].min = min(tree[lson].min, tree[rson].min);\n}\n\nvoid build(int rt, int l, int r) {\n\tif (l == r) {\n\t\ttree[rt].max = tree[rt].min = read();\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild(lson, l, mid);\n\tbuild(rson, mid + 1, r);\n\tpush_up(rt);\n}\n\nint query_max(int rt, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) return tree[rt].max;\n\tint mid = (l + r) >> 1, maxn = -1;\n\tif (L <= mid) maxn = max(maxn, query_max(lson, l, mid, L, R));\n\tif (R > mid) maxn = max(maxn, query_max(rson, mid + 1, r, L, R));\n\treturn maxn;\n}\n\nint query_min(int rt, int l, int r, int L, int R) {\n\tif (L <= l && r <= R) return tree[rt].min;\n\tint mid = (l + r) >> 1, minn = 1e9 + 7;\n\tif (L <= mid) minn = min(minn, query_min(lson, l, mid, L, R));\n\tif (R > mid) minn = min(minn, query_min(rson, mid + 1, r, L, R));\n\treturn minn;\n}\n\nint main() {\n\tn = read(), q = read();\n\tbuild(1, 1, n);\n\tfor (int i = 1, x, y; i <= q; i++) {\n\t\tx = read(), y = read();\n\t\tint ma = query_max(1, 1, n, x, y);\n\t\tint mi = query_min(1, 1, n, x, y);\n\t\tprintf(\"%d\\n\", ma - mi);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1579423789,
        "uid": 188155,
        "name": "K2sen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e0b\u5927\u5bb6\u505a\u6cd5\u4e3b\u8981:\n\n1.\u6734\u7d20STable O\uff08nlogn)\u9884\u5904\u7406+O\uff08q)\u8be2\u95ee\u3002\n\n2.\u7ebf\u6bb5\u6811O(n)\u9884\u5904\u7406+O(qlogn)\u8be2\u95ee\u3002\n\n\u8fd9\u91cc\u63d0\u4f9bO\uff08n)\u9884\u5904\u7406+\u671f\u671bO\uff08q)\u8be2\u95ee\u7684\u65b9\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u5206\u5757\uff0c\u5757\u7684\u5927\u5c0f\u662f(log2(n)) \uff08\u8fd9\u4e2a\u5757\u957f\u662f\u6709\u7528\u7684\uff09\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u5206\u5757\u3002\u7136\u540e\u6211\u4eec\u5904\u7406\u4ee5\u4e0b\u7684\u51e0\u4e2a\u6570\u7ec4\u3002\n\nminqianzhui[n] , maxqianzhui[n]\uff0cminhouzhui[n] , maxhouzhui[n] \u5206\u522b\u662f\u524d\u7f00\u6700\u5c0f\u503c\u548c\u524d\u7f00\u6700\u5927\u503c\uff0c\u540e\u7f00\u6700\u5c0f\u503c\u548c\u540e\u7f00\u6700\u5927\u503c\u3002\u8fd9\u91cc\u7684\u524d\u7f00\u540e\u7f00\u662f\u9488\u5bf9\u5206\u5757\u540e\u7684\u6570\u7ec4\u6765\u8bf4\u7684\u3002\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5757\u5185\u7684\u524d\u540e\u7f00\u3002\n\n\u4ee5\u53cafkminn[][] ,fkmaxx[]\uff0c \u8fd9\u91cc\u662f\u5bf9\u5757\u4e0e\u5757\u4e4b\u95f4\u5efa\u7acb\u6734\u7d20ST\u8868RMQ\uff0cfkminn[x][0]\u5373\u5bf9\u4e8ex\u5757\u7684\u6700\u5c0f\u503c\uff0cfkmaxx[x][2]\uff0c\u5373\u5bf9\u4e8e[x,x+(1<<2)-1]\u8fd9\u51e0\u4e2a\u5757\u91cc\u9762\u7684\u6700\u5927\u503c\u3002\uff08\u8fd9\u91cc\u7684\u5efa\u7acb\u65f6\u95f4\u590d\u6742\u5ea6\u5c0f\u4e8eO\uff08n\uff09\uff09\n\n\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4e86\u4e71\u641e\u4e86\uff01\u8003\u8651\u5230[l,r]\u533a\u95f4\uff0c\u5982\u679cl\u5230r\u4e4b\u95f4\u4e0d\u662f\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5O\uff081\uff09\u627e\u51fa\u4e2d\u95f4\u5757\u7684\u6700\u5927\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca\u901a\u8fc7\u540e\u7f00l\u548c\u524d\u7f00r\u627e\u51fa\u6765\u3002\n\n\u53ea\u6709\u5f53\u4e0d\u662f\u4e00\u4e2a\u5757\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u66b4\u529b\u4e71\u626b\u5427\uff01\u7531\u4e8e\u4e00\u4e2a\u5757\u7684\u957f\u5ea6\u4e3alogn\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u6700\u5dee\u4e5f\u4e0d\u4f1a\u5dee\u5230qlogn\u3002\n\n\u6570\u636e\u53ef\u80fd\u5361\u4f60\u59cb\u7ec8\u4e00\u4e2a\u5757\uff1f\u7edd\u4e0d\u53ef\u80fd\u3002\u9898\u76ee\u6570\u636e\u8303\u56f4\u80af\u5b9a\u4e0d\u53ef\u80fd\u4e00\u76f4\u51fa\u5728\u4e00\u4e2a\u5c0f\u8303\u56f4\u2014\u2013\u4e0d\u7136\u5c82\u4e0d\u662f\u66b4\u529b\u90fd\u53ef\u4ee5\u8fc7\uff1f\n\n\u6240\u4ee5\u53ef\u4ee5\u8fbe\u5230\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u9884\u5904\u7406O\uff08n\uff09+O (q)\u5566\uff01\n\n\u8fd9\u9053\u9898\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u770b\u4e0d\u51fa\u6765orz orz \n\ncode:\n```cpp\n#include<stdio.h>\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 50005;\nint n,q;\nint a[maxn];\nint blk,ks;\nint fk[maxn];\nint minqianzhui[maxn],minhouzhui[maxn],maxqianzhui[maxn],maxhouzhui[maxn];//\u524d\u7f00\u6700\u5927\\\u5c0f\u503c\uff0c\u540e\u7f00\u6700\u5927\\\u5c0f\u503c \nint logg[maxn];\nint fkminn[maxn][20],fkmaxx[maxn][20];//\u5206\u5757rmq\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tlogg[0]=-1;\n\tfor(int i=1;i<=n;i++) logg[i] = logg[i>>1]+1;//\u9884\u5904\u7406log2 \n\tblk = logg[n];\n\tint j=1;\n\tfor(int i=1;i<=n;i++) \n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tfk[i] = j;\n\t\tif(fk[i]==fk[i-1]) \n\t\t{ \n\t\t\tminqianzhui[i]=min(minqianzhui[i-1],a[i]);\n\t\t\tmaxqianzhui[i]=max(maxqianzhui[i-1],a[i]);\n\t\t} \n\t\telse\n\t\t{\n\t\t\tminqianzhui[i]=maxqianzhui[i]=a[i];\n\t\t}\n\t\tif(!(i%blk)) j++;\n\t}\n\tif(n%blk) ks=j;\n\telse ks=j-1;\n\tfor(int i=n;i;i--)\n\t{\n\t\tif(fk[i]==fk[i+1])\n\t\t{\n\t\t\tminhouzhui[i]=min(minhouzhui[i+1],a[i]);\n\t\t\tmaxhouzhui[i]=max(maxhouzhui[i+1],a[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminhouzhui[i]=maxhouzhui[i]=a[i];\n\t\t}\n\t}\n\tfor(int i=1;i<=ks;i++)\n\t{\n\t\tfkminn[i][0] = minhouzhui[blk*(i-1)+1];\n\t\tfkmaxx[i][0] = maxhouzhui[blk*(i-1)+1];\n\t}\n\tfor(int j=1;j<=logg[ks];j++)\n\t{\n\t\tfor(int i=1;i+(1<<j)-1<=ks;i++)\n\t\t{\n\t\t\tfkminn[i][j] = min( fkminn[i][j-1] , fkminn[i+(1<<(j-1))][j-1]  ); //\u5bf9\u5206\u5757\u95f4rmq \n\t\t\tfkmaxx[i][j] = max( fkmaxx[i][j-1] , fkmaxx[i+(1<<(j-1))][j-1] );\n\t\t}\n\t}\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tint fa = fk[l], fb =fk[r];\n\t\tif(fa!=fb)\n\t\t{\n\t\t\tfa+=1; fb-=1;\n\t\t\tint mmi=0x3f3f3f3f,mmx=-0x3f3f3f3f;\n\t\t\tif(fa<=fb)\n\t\t\t{\n\t\t\tint k = logg[fb-fa+1];\n\t\t\tmmi = min(fkminn[fa][k],fkminn[fb-(1<<k)+1][k]);\n\t\t\tmmx = max(fkmaxx[fa][k],fkmaxx[fb-(1<<k)+1][k]);\n\t\t\t}\n\t\t\tmmi = min(mmi,min(minhouzhui[l],minqianzhui[r]));\n\t\t\tmmx = max(mmx,max(maxhouzhui[l],maxqianzhui[r]));\n\t\t\tprintf(\"%d\\n\",mmx-mmi);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tint mmi = 0x3f3f3f3f,mmx = -0x3f3f3f3f;\n\t\t\tfor(int i=l;i<=r;i++) mmi=min(mmi,a[i]),mmx=max(mmx,a[i]);\n\t\t\tprintf(\"%d\\n\",mmx-mmi);\n\t\t}\n\t} \n}\n```\n//\u672c\u849f\u84bb\u535a\u5ba2\uff0c\u6b22\u8fce\u6765\u73a9\u554a\uff1a[Newuser\u5c0f\u7ad9](http://www.newuser.top/2018/06/03/on%e9%a2%84%e5%a4%84%e7%90%86st%e8%a1%a8rmq%e5%ad%a6%e4%b9%a0/)",
        "postTime": 1528036971,
        "uid": 55343,
        "name": "Newuser",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "## \u778e\u626f\n\u521a\u770b\u5230\u8fd9\u4e2a\u9898\u76ee\u7684\u65f6\u5019\u6211\u5c31\u5413\u7740\u4e86\uff1a\u84dd\u9898\uff1f\u6e9c\u4e86\u6e9c\u4e86\u2026\u2026\u4f46\u662f\u8fd8\u662f\u597d\u5947\u5730\u70b9\u8fdb\u53bb\u770b\u4e86\u4e00\u4e0b\u3002\u770b\u5b8c\u9898\u9762\u4e4b\u540e\uff0c\u6055\u6211\u5192\u6627\u8bf4\u4e00\u53e5\u8bdd\uff0c\u8fd9\u9898\u4e0d\u5e94\u8be5\u662f\u9ec4\u9898\u5417\uff1f\u600e\u4e48\u4f1a\u662f\u84dd\u9898\uff1f\u7b80\u76f4\u5c31\u662f\u660e\u663e\uff08luo\uff09\u5230\u4e0d\u80fd\u518d\u660e\u663e\uff08luo\uff09\u7684RMQ\u95ee\u9898\u3002\n\n## \u6b63\u9898\n\u6240\u8c13RMQ\u95ee\u9898\uff0c\u5c31\u662f\u627e\u4e00\u4e2a\u5e8f\u5217\u67d0\u6bb5\u533a\u95f4\u5f53\u4e2d\uff0c\u6700\u5927\u6216\u6700\u5c0f\u7684\u6570\u662f\u591a\u5c11\u3002\u800c\u89e3\u51b3\u5b83\u7684\u4e00\u79cd\u5de5\u5177\u5c31\u662f**ST\u8868**\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe$f_{i,j}$\u4e3a\u533a\u95f4$[i,i+2^j-1]$\u5185\u7684\u6700\u5927\u6216\u6700\u5c0f\u503c\u3002\u7136\u540e\u628a\u5b83\u4ece\u4e2d\u95f4\u5206\u5f00\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5206\u6210\u4e86$[i,i+2^{j-1}]$\u548c$[i+2^{j-1},i+2^{j-1}+2^{j-1}-1]\\rightarrow[i+2^{j-1},i+2^j-1]$\u8fd9\u4e24\u4e2a\u533a\u95f4\u3002\u6240\u4ee5\uff0c\u901a\u8fc7DP\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u4e0b\u9762\u4e24\u4e2a\u65b9\u7a0b\uff1a\n\n$$f1_{i,j}=\\max(f1_{i,j-1},f1_{i+2^j-1,j-1})$$\n\n$$f2_{i,j}=\\min(f2_{i,j-1},f2_{i+2^j-1,j-1})$$\n\n\u5176\u4e2d$f1$\u6570\u7ec4\u6c42\u7684\u662f\u533a\u95f4\u5185\u6700\u5927\u503c\uff0c$f2$\u6570\u7ec4\u6c42\u7684\u662f\u533a\u95f4\u5185\u6700\u5c0f\u503c\u3002\n\n\u672c\u9898\u7684\u76ee\u6807\u662f\u8981\u6c42$\\max(f1_{x,k},f1_{y-2^k+1,k})-min(f2_{x,k},f2_{y-2^k+1,k})$\uff0c\u867d\u7136\u533a\u95f4$[x,x+2^k-1]$\u548c$[y-2^k+1,y]$\u8fd9\u4e24\u4e2a\u533a\u95f4\u6709\u4ea4\u96c6\uff0c\u4f46\u5e76\u4e0d\u5f71\u54cd\u6c42\u6700\u503c\u3002\u8fd9\u5c31\u662fST\u7b97\u6cd5\u7684\u4f18\u52bf\u3002\n\n\u5176\u4ed6\u7684\u5185\u5bb9\u5b9e\u73b0\u5c31\u9760\u5927\u5bb6\u4e86\uff0c\u672c\u4eba\u7684\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n\nint f1[100007][21], f2[100007][21], n, m, log[100007], x, y;\n\ninline int read() {\n\tint f = 1, x = 0;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-')\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') {\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\nvoid pre() {\n\tfor(int j = 1; j <= 20; ++j)\n\t\tfor(int i = 1; i + (1 << j) - 1 <= n; ++i)\n\t\t\tf1[i][j] = max(f1[i][j - 1], f1[i + (1 << (j - 1))][j - 1]), f2[i][j] = min(f2[i][j - 1], f2[i + (1 << (j - 1))][j - 1]);\n}\n\nint main() {\n\tlog[0] = -1;\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; ++i) {\n\t\tf1[i][0] =  read();\n\t\tf2[i][0] = f1[i][0];\n\t\tlog[i] = log[i >> 1] + 1;\n\t}\n\tpre();\n\tfor(int i = 1; i <= m; ++i) {\n\t\tx = read(), y = read();\n\t\tint k = log[y - x + 1];\n\t\tprintf(\"%d\\n\", max(f1[x][k], f1[y - (1 << k) + 1][k]) - min(f2[x][k], f2[y - (1 << k) + 1][k]));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1578992925,
        "uid": 112917,
        "name": "Eason_AC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "# ST\u8868\u8be6\u89e3\n\n\u70b9\u4e86\u6700\u77ed\u8def\u7684\u6807\u7b7e\u51fa\u4e86\u8fd9\u9898...\n\u597d\u5427\u4e00\u770b\u5c31\u77e5\u9053\u662f\u7528ST\u8868\uff0c\u4e5f\u60f3\u8fc7\u7528\u7ebf\u6bb5\u6811\uff0c\u4e0d\u8fc7\u663e\u7136ST\u8868\u66f4\u4f18\u79c0\u3002\n\n\u6211\u5c31\u5148\u8be6\u8bb2ST\u7684\u539f\u7406\n\n\u6211\u4eec\u5148\u8bb2\u8bb2ST\u8868\u662f\u4ec0\u4e48\u3002\n\nST\u8868\u662f\u5229\u7528\u4e00\u79cd\u500d\u589e\u7684\u601d\u60f3\uff0c\u4e5f\u7b97\u662f\u52a8\u6001\u89c4\u5212\uff1f\n\n### \u6211\u4eec\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4st1 [ i ] [ j ] \u8868\u793a\u4ee5i\u4e3a\u8d77\u70b9\u5411\u53f3$2^j$\u7684\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\n\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4st2 [ i ] [ j ]\u8868\u793a\u4ee5i\u4e3a\u8d77\u70b9\u5411\u53f3$2^j$\u7684\u533a\u95f4\u7684\u6700\u5c0f\u503c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6765\u60f3\u600e\u4e48\u8f6c\u79fb\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u50cf\u4e0b\u9762\u8fd9\u6837\n\n### st1 [ i ] [ j ]\u53ef\u4ee5\u4ece i~i+$2^{j-1}$\u548ci+$2^{j-1}$~i+$2^j$\u8f6c\u79fb\u8fc7\u6765\uff0c\n\n\nst2\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u53ea\u4e0d\u8fc7\u662f\u53d6\u6700\u5927\u6700\u5c0f\u7f62\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/52938.png)\n\n------------\n\n\u8bb2\u5b8c\u4e86\u5236\u8868\uff0c\u6211\u4eec\u6765\u8bb2\u8bb2\u600e\u4e48\u67e5\u8be2\uff0c\u6211\u4eec\u8981\u7528\u5230\u4e00\u4e2a\u7092\u9e21\u597d\u7528\u7684\u51fd\u6570\u2014\u2014\u2014>$log_2$\n\n\u5bf9\u4e8e\u8981\u67e5\u8be2\u7684\u533a\u95f4l,r\uff0c\u6709\u53ef\u80fd\uff08l-r\uff09\u4e0d\u662f2\u7684\u5e42\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5408\u5e76\n\u8fd9\u6837\u5b50\u7684\u4e24\u4e2a\u533a\u95f4\n\n![](https://cdn.luogu.com.cn/upload/pic/52939.png)\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5408\u5e76\u8fd9\u4e2a\u7ea2\u8272\u548c\u7eff\u8272\u7684\u533a\u95f4\uff0c\u6709\u4e9b~~\u5c0f\u5929\u624d~~\u53ef\u80fd\u4f1a\u6709\u7591\u95ee\uff0c\n\u6bd4\u5982\uff0c\u8fd9\u4e2a\u91cd\u53e0\u90e8\u5206\u4f1a\u6709\u5f71\u54cd\uff0c\u7b54\u6848\u662f\n\n# \u5b8c\u5168\u6ca1\u6709\n\n\u56e0\u4e3a\u6700\u5927\u6700\u5c0f\u503c\u662f\u652f\u6301\u7ed3\u5408\u5f8b\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u4ee5\u4ece\u8fd9\u91cc\u63a8\u51faST\u8868\u7684\u4e00\u4e2a\u6027\u8d28\uff0c\n\nST\u8868\u652f\u6301\u7ed3\u5408\u5f8b\u7684\u533a\u95f4\u67e5\u8be2\u95ee\u9898\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5feb\u4e50\u7684\u4ee3\u7801\u65f6\u95f4\n\n```\n#include<bits/stdc++.h>\n#define swap mswap\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)//\u624b\u5199\u636e\u8bf4\u5e38\u6570\u5c0f\uff08\u5927\u96fe\uff09\nusing namespace std;\nvoid swap(int &x,int &y)\n{\n\tx^=y^=x^=y;\n}\nvoid read(int &x)\n{\n\tx=0;\n\tchar ch=getchar();\n\tint pd=1;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t{\n\t\t\tpd=-pd;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch<='9'&&ch>='0')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=pd;\n}\nvoid write(const int &x)\n{\n\tchar f[100001];\n\tint s=0;\n\tint tmp=x;\n\tif(tmp==0)\n\t{\n\t\tputchar('0');\n\t\treturn;\n\t}\n\tif(tmp<0)\n\t{\n\t\ttmp=-tmp;\n\t\tputchar('-');\n\t}\n\twhile(tmp>0)\n\t{\n\t\tf[s++]=tmp%10+'0';\n\t\ttmp/=10;\n\t}\n\twhile(s>0)\n\t{\n\t\tputchar(f[--s]);\n\t}\n}\nconst int N=5e4+10;\nint n,m,a[N],st1[N][21],st2[N][21];\nint main()\n{\n\tmemset(st2,60,sizeof(st2));//\u6700\u5c0f\u503c\u6ce8\u610f\u8d4b\u65e0\u7a77\u5927\n\tread(n);\n\tread(m);\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tread(a[i]);\n\t\tst1[i][0]=st2[i][0]=a[i];\n\t}\n\tfor(register int j=1;j<=21;++j)\n\t{\n\t\tfor(register int i=1;(i+(1<<j-1))<=n;++i)\n\t\t{\n\t\t\tst1[i][j]=max(st1[i][j-1],st1[i+(1<<j-1)][j-1]);st1\u8bb0\u5f55\u533a\u95f4\u6700\u5927\u503c\n\t\t\tst2[i][j]=min(st2[i][j-1],st2[i+(1<<j-1)][j-1]);st2\u6700\u5c0f\u503c\n\t\t}\n\t}\n\tfor(register int i=1;i<=m;++i)\n\t{\n\t\tint l,r;\n\t\tread(l);\n\t\tread(r);\n\t\tint k=log2(r-l+1);//+1\u9632\u6b62RE\uff1f\uff08\u96fe\uff09\n\t\twrite(max(st1[l][k],st1[r-(1<<k)+1][k])-min(st2[l][k],st2[r-(1<<k)+1][k]));;\n\t\tputs(\"\");\n\t}\n}\n```\n",
        "postTime": 1551417969,
        "uid": 87026,
        "name": "\u4e24\u5e74\u6253\u94c1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "### \u6211\u53c8\u6765\u53d1\u4e00\u7bc7\u9898\u89e3\u5566\n\n\u5176\u5b9e\u8fd9\u4e00\u9898\u53ea\u662f\u4e00\u9053\u677f\u5b50\u9898\uff0c~~\u4f46\u56e0\u4e3a\u6211\u5bf9RMQ\u53c8\u6709\u4e9b\u4e0d\u8bb0\u5f97\u4e86~~\n\n\u6240\u4ee5\u53d1\u7bc7\u9898\u89e3\u52a0\u6df1\u5370\u8c61\n\n#### \u76f4\u5165\u6b63\u9898\n\n\n\u6838\u5fc3\u601d\u60f3\u662fDP+\u500d\u589e\n\n\u4e0d\u59a8\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a1,2,3,4\uff0c\u2026\u20262^n\u7684\u4f8b\u5b50\n\n\u5b83\u7684\u6700\u5927\u503c\u4e00\u5b9a\u662f1~2^\uff08n-1\uff09\u7684max\u4e0e2^\uff08n-1\uff09+1\u7684max\u7684max\n\n\u8fd9\u6837\u6211\u4eec\u6bcf\u6b21\u7b97\u4e0b\u53bb\u5c31\u53ef\u4ee5\u5f88\u5feb\u5730\u5f97\u51fa\u7b54\u6848\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u679c\u6211\u4eec\u8be2\u95ee\u7684\u533a\u95f4\u4e0d\u662f\u957f\u5ea6\u4e3a2^n\u7684\u5462\uff1f\n\n\u4e0d\u59a8\u5047\u8bbe\u5b83\u7684\u957f\u5ea6\u4e3al\uff0c\u4ee4s=floor(log(l))(\u4ee5\u4e0b\u7684log\u5e95\u6570\u4e3a2)\n\n\u5219\u5b83\u7684\u6700\u5927\u503c\u4e00\u5b9a\u662f\u4ece\u5934\u53d62^s\u4e2a\u7684\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684max\u4e0e\u4ece\u5c3e\u53d62^s\u4e2a\u7684\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684max\uff08\u4e24\u8005\u4f1a\u6709\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u4e0d\u8fc7\u4e0d\u5f71\u54cd\uff09\n\n\u5982\u6b64\uff0c\u8fd9\u4e00\u9898\u5c31\u641e\u5b8c\u5566QAQ\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[50001];\nint logg[50001];\nint f_min[50001][20],f_max[50001][20];\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t  cin>>a[i];\n\tlogg[0]=-1;\n\tfor(int i=1;i<=n;i++)\n\t  f_min[i][0]=a[i],f_max[i][0]=a[i],logg[i]=logg[i>>1]+1;\n\tfor(int j=1;(1<<j)<=n;j++)\n\t  for(int i=1;i+(1<<j)-1<=n;i++)//\u5faa\u73af\u987a\u5e8f\u4e00\u5b9a\u4e0d\u80fd\u53d8\uff0c\u8981\u5148\u7b97\u51fa\u957f\u5ea6\u4e3a2^(j-1)\u624d\u80fd\u7b972^j\u7684\n\t  {\n\t  \tf_min[i][j]=min(f_min[i][j-1],f_min[i+(1<<j-1)][j-1]);\n\t  \tf_max[i][j]=max(f_max[i][j-1],f_max[i+(1<<j-1)][j-1]);\n\t  }\n\tfor(int i=1;i<=m;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        int s=logg[y-x+1];\n        cout<<max(f_max[x][s],f_max[y-(1<<s)+1][s])-min(f_min[x][s],f_min[y-(1<<s)+1][s])<<endl;\n    }\n}\n```",
        "postTime": 1534437094,
        "uid": 92496,
        "name": "\u6587\u6b66\u6b66\u667a\u969c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "#\u53d1\u4e00\u6ce2\u7ebf\u6bb5\u6811\n\n##\u53ea\u8981\u7ef4\u62a4\u6811\u7684\u6700\u5927\u503c\u6700\u5c0f\u503c\u5c31\u884c\u4e86\n\n##\u6807\u6ce8\u5728\u7a0b\u5e8f\u91cc\n\n###\u4e0d\u77e5\u9053\u7ed3\u6784\u4f53\u662f\u5e72\u4ec0\u4e48\u7684\u65e0\u89c6\u5c31\u884cXD\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long ll;//\u628along long\u7528ll\u4ee3\u66ff \nusing namespace std;\nconst int inf = 2000010;//\u968f\u4fbf\u53d6\u7684 \nint c[inf];\nstruct sgt//\u4e0d\u61c2\u5c31\u65e0\u89c6 \n{\n    int maxx[inf],minn[inf];\n    void push_up(int o,int lson,int rson)//O\u662f\u7f16\u53f7\uff0clson\uff0crson\u662f\u5f53\u524d\u5de6\u53f3\u5b69\u5b50 \n    {\n        maxx[o]=max(maxx[lson],maxx[rson]);\n        minn[o]=min(minn[lson],minn[rson]);\n    }\n    void build(int o,int l,int r)//O\u662f\u7f16\u53f7\uff0cl\uff0cr\u662f\u5f53\u524d\u5de6\u53f3 \n    {\n        if(l==r)maxx[o]=minn[o]=c[l];\n        else\n        {\n            int mid=(l+r)>>1;\n            int lson=o<<1;//\u5c31\u662flson=o*2\uff1b \n            int rson=lson|1;//\u5c31\u662frson=lson+1\uff08\u4e0d\u4ee3\u8868b=a|1\u5c31\u662fb=a+1\uff0c\u4e0d\u8981\u4e71\u7528\uff09 \n            build(lson,l,mid);\n            build(rson,mid+1,r);\n            push_up(o,lson,rson);\n        }\n    }\n    void query(int o,int l,int r,int a,int b,int &mx,int &mn)//O\u662f\u7f16\u53f7\uff0cl\uff0cr\u662f\u5f53\u524d\u5de6\u53f3\uff0ca\uff0cb\u662f\u6240\u6c42\u5de6\u53f3\uff0cmx\uff0cmn\u662f\u5f53\u524d\u533a\u95f4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c \n    {    \n        if(l>=a&&r<=b)\n        {\n            mx=max(maxx[o],mx),mn=min(minn[o],mn);//\u7ef4\u62a4\u6700\u5927\u503c\u6700\u5c0f\u503c \n            return;\n        }\n        int mid=(l+r)>>1;\n        int lson=o<<1;\n        int rson=lson|1;\n        if(a<=mid)query(lson,l,mid,a,b,mx,mn);\n        if(b>mid)query(rson,mid+1,r,a,b,mx,mn);\n    }\n};\nsgt tree;\nint n,m,f;\nint x,y,k;\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&c[i]);\n    tree.build(1,1,n);//\u5efa\u6811 \n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        int mx=0,mn=2100000000;\n        tree.query(1,1,n,x,y,mx,mn);\n        printf(\"%d\\n\",mx-mn);     \n    }\n    return 0;\n}\n```",
        "postTime": 1505811943,
        "uid": 34774,
        "name": "chrB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u7b2c\u4e00\u6b21\u4e00\u904d\u6253\u4e0b\u6765\u7684\u4ee3\u7801\u5c31ac\u7684\u849f\u84bb\u7279\u522b\u6fc0\u52a8\u7684\u6253\u51fa\u6765\u7684\u9898\u89e3\n\n\u56e0\u4e3a\u662f\u4e00\u904d\u8fc7\u6240\u4ee5\u5565\u4f18\u5316\u4e5f\u6ca1\u52a0\uff0c\u5c31\u662f\u88f8\u7684\u6700\u503c\u7ebf\u6bb5\u6811\uff0c\u6240\u4ee5\u65f6\u95f4\u4e0a\u6bd4\u8f83\u96be\u770b\u8bf7\u5927\u4f6c\u8f7b\u55b7\u3002\u3002\n\n\u601d\u8def\u7b80\u5355\u6e05\u695a\u7c97\u66b4\uff0c\u5c31\u662f\u5199\u4e00\u68f5\u6700\u5927\u6700\u5c0f\u503c\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u8f93\u51fa\u65f6\u5019\u53d6\u5dee\u3002\u3002\n\n\u4ee3\u7801\uff1a\n\n#include<iostream> //\u5176\u5b9e\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u6ca1\u6709\u4fee\u6539\u8fd8\u662f\u633a\u77ed\u7684\uff0c\u5c31\u662f\u6211\u6709\u82b1\u62ec\u53f7\u5206\u53f7\u6362\u884c\u5f3a\u8feb\u75c7\u6240\u4ee5\u770b\u7740\u7ec6\u957f\u3002\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,q,t[50001],x,y;\nstruct tree\n{\n    int l,r,mi,ma;//\u5de6\u3001\u53f3\u533a\u95f4\u3001\u533a\u95f4\u6700\u5c0f\u503c\u3001\u533a\u95f4\u6700\u5927\u503c \n}a[200001];//\u6211\u4e5f\u4e0d\u77e5\u9053\u8fd9\u4e2a\u5e26\u5de6\u53f3\u533a\u95f4\u7684\u7ebf\u6bb5\u6811\u53eb\u5565\u53cd\u6b63\u633a\u597d\u7528\u3002\u3002\u3002 \nvoid build(int ro,int l,int r)//\u5efa\u7acb\u6811 \u6ca1\u5565\u597d\u8bf4\u7684 \n{\n    a[ro].l=l;//\u987a\u4fbf\u628a\u5de6\u53f3\u533a\u95f4\u7684\u503c\u8d4b\u4e0a \n    a[ro].r=r;\n    if(l==r)\n    {\n        a[ro].mi=t[l];\n        a[ro].ma=t[l];\n    }\n    else\n    {\n        int mid=(l+r)>>1;\n        build(ro<<1,l,mid);\n        build(ro<<1|1,mid+1,r);\n        a[ro].ma=max(a[ro<<1].ma,a[ro<<1|1].ma);\n        a[ro].mi=min(a[ro<<1].mi,a[ro<<1|1].mi);\n    }\n    return;\n}\nint maxx(int ro,int l,int r)//\u67e5\u8be2\u6700\u5927\u503c \n{\n    if(a[ro].l==l&&a[ro].r==r)\n    return a[ro].ma;\n    int mid=(a[ro].l+a[ro].r)>>1;\n    if(r<=mid)//\u5728\u5de6\u8fb9\u641c \n    return maxx(ro<<1,l,r);\n    else if(l>mid)//\u5728\u53f3\u8fb9\u641c \n    return maxx(ro<<1|1,l,r);\n    else\n    return max(maxx(ro<<1,l,mid),maxx(ro<<1|1,mid+1,r));//\u5728\u4e24\u8fb9\u641c \u8fd4\u56de \u5de6\u53f3\u6700\u5927\u503c \n}\nint minn(int ro,int l,int r)//\u67e5\u8be2\u6700\u5c0f\u503c \n{\n    if(a[ro].l==l&&a[ro].r==r)\n    return a[ro].mi;\n    int mid=(a[ro].l+a[ro].r)>>1;\n    if(r<=mid)//\u5728\u5de6\u8fb9\u641c \n    return minn(ro<<1,l,r);\n    else if(l>mid)//\u5728\u53f3\u8fb9\u641c \n    return minn(ro<<1|1,l,r);\n    else\n    return min(minn(ro<<1,l,mid),minn(ro<<1|1,mid+1,r));//\u5728\u4e24\u8fb9\u641c \u8fd4\u56de \u5de6\u53f3\u6700\u5c0f\u503c \n}\nint main()\n{\n    ios::sync_with_stdio(false);//\u8fd9\u4e2a\u8fd8\u633a\u91cd\u8981\u7684 \n    cin>>n>>q;\n    for(int i=1;i<=n;i++)\n    cin>>t[i];\n    build(1,1,n);//\u5efa \n    while(q--)\n    {\n        cin>>x>>y;\n        cout<<maxx(1,x,y)-minn(1,x,y)<<endl;//\u8f93\u51fa\u6700\u5927\u6700\u5c0f\u503c\u7684\u5dee \n    }\n    return 0;\n}\n```",
        "postTime": 1497521194,
        "uid": 30587,
        "name": "lokiii",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "//\u8fd9\u9898\u7528RMQ\u6bd4\u8f83\u65b9\u4fbf\uff0c\u7528\u7ebf\u6bb5\u6811\u4f1a\u8d85\u65f6\u3002\u601d\u8def\u548c\u697c\u4e0b\u8bb2\u7684\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u5206\u4e86\u51e0\u4e2a\u51fd\u6570\uff0c\u5199\u8d77\u6765\u6bd4\u8f83\u6e05\u6670\u3002\n\n\n\u3010cpp\u3011\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n    \n    \n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst int maxx = 50000 + 10;\nint n,m,x,y;\nint Edge[maxx],fmax[maxx][30],fmin[maxx][30];//\u4e24\u4e2af\u3010i\u3011\u3010j\u3011\u90fd\u662f\u4ee3\u8868\u4ecei\u5f00\u59cb2^j\u4e2a\u5143\u7d20\u7684\u6700\u5927/\u5c0f\u503c \nvoid RmaxQ();//\u5904\u7406\u6700\u5927\u6570\u8868 \nvoid RminQ();//\u5904\u7406\u6700\u5c0f\u6570\u8868 \nint Query_min(int l,int r);//\u627e\u6700\u5c0f\u6570 \nint Query_max(int l,int r);//\u627e\u6700\u5927\u6570 \nint main()\n{\n    memset(fmax,0x7f,sizeof(fmax));//\u8bb0\u5f97\u627e\u6700\u5c0f\u65f6\u6570\u7ec4\u66f4\u65b0INF \n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&Edge[i]);\n    for(int i=1;i<=n;i++)\n        fmax[i][0]=Edge[i],fmin[i][0]=Edge[i];\n    RmaxQ();\n    RminQ();\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        printf(\"%d\\n\",Query_max(x,y)-Query_min(x,y));\n    } \n    return 0;\n}\nvoid RmaxQ()\n{\n    for(int i=1;(1<<i)<=n;i++)\n        for(int j=1;j+(1<<i)-1<=n;j++)\n            fmax[j][i]=max(fmax[j][i-1],fmax[j+(1<<(i-1))][i-1]);\n}\nvoid RminQ()\n{\n    for(int i=1;(1<<i)<=n;i++)\n        for(int j=1;j+(1<<i)-1<=n;j++)\n            fmin[j][i]=min(fmin[j][i-1],fmin[j+(1<<(i-1))][i-1]);\n```\n}//\u8fd9\u4e24\u4e2a\u51fd\u6570\u7528\u500d\u589e\u7684\u601d\u60f3\u9884\u5904\u7406\uff0c\u53ef\u4ee5\u5728\u7eb8\u4e0a\u624b\u63a8\uff0c\u4e07\u4e00\u4e0d\u4f1a\u53ef\u4ee5\u641cRMQ\n\n\n```cpp\nint Query_min(int l,int r)\n{\n    int k=0;\n    while( 1<<(k+1) <= r-l+1 ) k++;\n    return min(fmin[l][k],fmin[r-(1<<k)+1][k]);\n}\nint Query_max(int l,int r)\n{\n    int k=0;\n    while( 1<<(k+1) <= r-l+1 ) k++;\n    return max(fmax[l][k],fmax[r-(1<<k)+1][k]);\n}//\u73b0\u5728\u67e5\u8be2\u8d77\u6765\u5c31\u53ea\u8981O(1)\u7684\u590d\u6742\u5ea6\u4e86\n```",
        "postTime": 1484140755,
        "uid": 21673,
        "name": "Sor4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u7ed9\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u4e00\u6bb5\u533a\u95f4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u5dee\u3002\n\nRMQ\u95ee\u9898\uff0c\u4e00\u822c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4\uff0cST\u8868\u7b49\u6c42\u3002\n\n\u6811\u72b6\u6570\u7ec4\n```cpp\n#include <stdio.h>\n#include <iostream>\n#include <memory.h>\nusing namespace std;\nint n,m,a[50001],maxn[50001],minx[50001],s;\ninline int lowbit(int x)\n{\n\treturn x&-x;\n}\ninline void update(int x,int k)//\u533a\u95f4[x,n]\u4fee\u6539\u6700\u503c \n{\n\twhile(x<=n)\n\t{\n\t\tmaxn[x]=max(maxn[x],k);\n\t\tminx[x]=min(minx[x],k);\n\t\tx+=lowbit(x);\n\t}\n}\ninline int query(int l,int r)//\u533a\u95f4[l,r]\u67e5\u8be2\u6700\u503c \n{//\u5bf9\u6bd4\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u7684\u67e5\u8be2\u533a\u95f4\u548c\uff0c\u5176\u5b9e\u8fd8\u662f\u5f88\u50cf\u7684 \n\tregister int mn(2e9+7),mx(-2e9-7);\n\twhile(l<=r)\n\t{\n\t\twhile(r-lowbit(r)>=l)//while(r>0)\n\t\t{\n\t\t\tmx=max(mx,maxn[r]);\n\t\t\tmn=min(mn,minx[r]);\n\t\t\tr-=lowbit(r);\n\t\t}\n\t\tmx=max(a[r],mx);\n\t\tmn=min(a[r],mn);\n\t\tr--;\n\t}\n\treturn mx-mn;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tregister int i,j;\n\tmemset(minx,2E9+7,sizeof(minx));\n\tcin>>n>>m;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t\tupdate(i,a[i]);//\u5355\u70b9\u4fee\u6539 \n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tregister int l,r;\n\t\tcin>>l>>r;\n\t\tcout<<query(l,r)<<endl;//\u533a\u95f4\u67e5\u8be2\u6700\u503c \n\t}\n\treturn 0;\n}\n```\n\u7ebf\u6bb5\u6811\n```cpp\n#include <stdio.h>\n#include <iostream>\n#define ll long long \n#define maxn 50001\nusing namespace std;\nll int a[maxn],n,s,m,cnt,c,ans;//a\u662f\u5e8f\u5217\nll int minx[maxn<<2],maxx[maxn<<2];//\u533a\u95f4\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\ninline ll int leftnode(ll int p) {return p<<1;}//\u5de6\u8282\u70b9\uff08\u5de6\u513f\u5b50\uff09 \ninline ll int rightnode(ll int p) {return p<<1|1;}//\u53f3\u8282\u70b9\uff08\u53f3\u513f\u5b50\uff09 \ninline void push_up(ll int node)//\u7ef4\u62a4\u7236\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff08\u5408\u5e762\u4e2a\u513f\u5b50\u8282\u70b9\uff09 \n{\n\tminx[node]=min(minx[leftnode(node)],minx[rightnode(node)]);//\u6700\u5c0f\u503c\n\tmaxx[node]=max(maxx[leftnode(node)],maxx[rightnode(node)]);//\u6700\u5927\u503c\n}\nvoid build(ll int node,ll int start,ll int end)\n{\n\tif(start==end)\n\t{\n\t\tminx[node]=a[++cnt];//\u533a\u95f4\u6700\u5c0f\u503c\n\t\tmaxx[node]=a[cnt];//\u533a\u95f4\u6700\u5927\u503c\n\t\treturn; \n\t}\n\telse\n\t{\n\t\tregister ll int mid=(start+end)>>1;\n\t\tbuild(leftnode(node),start,mid);\n\t\tbuild(rightnode(node),mid+1,end);\n\t\tpush_up(node);\n\t}\n}\nll int min_query(ll int node,ll int start,ll int end,ll int cl,ll int cr)//node\u662f\u5f53\u524d\u8282\u70b9\uff0cstart\u548cend\u662f\u8303\u56f4\uff08\u662f\u6307a\u6570\u7ec4\u7684\u8303\u56f4\uff09\uff0cL\u548cR\u662f\u5728\u533a\u95f4[L,R]\u91cc\u8ba1\u7b97\u548c\n{//\u6700\u5c0f\u503c\u533a\u95f4\u67e5\u8be2\n\tif(start>=cl && end<=cr)//\u5982\u679c\u4fee\u6539\u7684\u533a\u95f4\u5305\u62ec\u5f53\u524d\u904d\u5386\u7684\u533a\u95f4 \n\t{\n\t\treturn minx[node];//\u8fd4\u56de\u8fd9\u4e00\u533a\u95f4\u7684\u533a\u95f4\u548c \n\t}\n\tregister ll int mid=(start+end)>>1,s(99999999);\n\tif(cl<=mid)\n\t{\n\t\ts=min(s,min_query(leftnode(node),start,mid,cl,cr));\n\t}\n\tif(mid<cr)\n\t{\n\t\ts=min(s,min_query(rightnode(node),mid+1,end,cl,cr));\n\t}\n\treturn s;\n}\nll int max_query(ll int node,ll int start,ll int end,ll int cl,ll int cr)//node\u662f\u5f53\u524d\u8282\u70b9\uff0cstart\u548cend\u662f\u8303\u56f4\uff08\u662f\u6307a\u6570\u7ec4\u7684\u8303\u56f4\uff09\uff0cL\u548cR\u662f\u5728\u533a\u95f4[L,R]\u91cc\u8ba1\u7b97\u548c\n{//\u6700\u5927\u503c\u533a\u95f4\u67e5\u8be2 \n\tif(start>=cl && end<=cr)//\u5982\u679c\u4fee\u6539\u7684\u533a\u95f4\u5305\u62ec\u5f53\u524d\u904d\u5386\u7684\u533a\u95f4 \n\t{\n\t\treturn maxx[node];//\u8fd4\u56de\u8fd9\u4e00\u533a\u95f4\u7684\u533a\u95f4\u548c \n\t}\n\tregister ll int mid=(start+end)>>1,s(-99999999);\n\tif(cl<=mid)\n\t{\n\t\ts=max(s,max_query(leftnode(node),start,mid,cl,cr));\n\t}\n\tif(mid<cr)\n\t{\n\t\ts=max(s,max_query(rightnode(node),mid+1,end,cl,cr));\n\t}\n\treturn s;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tregister ll int i;\n\tcin>>n>>m;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t}\n\tbuild(1,1,n);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint l,r;\n\t\tcin>>l>>r;\n\t\tcout<<max_query(1,1,n,l,r)-min_query(1,1,n,l,r)<<endl;//\u533a\u95f4\u6700\u5927\u503c-\u6700\u5c0f\u503c\n\t}\n\treturn 0;\n}\n```\n\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u7684\u6548\u7387\u5176\u5b9e\u5dee\u522b\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002\u6811\u72b6\u6570\u7ec4\u8dd1\u4e86\u5927\u6982$800ms$\uff0c\u7ebf\u6bb5\u6811\u8dd1\u4e86$1200ms$\u3002",
        "postTime": 1565360081,
        "uid": 72255,
        "name": "Apro1066",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u533a\u95f4\u6700\u503c\u7ef4\u62a4\uff1a\u8bdd\u8bf4\u8fd9\u9898\u7528st\u8868\u8c8c\u4f3c\u53c8\u5feb\u53c8\u65b9\u4fbf\uff08 ~~\u7136\u800c\u6211\u4e0d\u4f1a~~\uff09\n\n#### \u53ea\u597d\u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\n\u5bf9\u7ebf\u6bb5\u6811\u4e0d\u719f\u6089\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u4e0b\u8fd9\u7bc7\u535a\u5ba2:[\u7ebf\u6bb5\u6811\u8be6\u89e3](https://2016gdgzoi316.blog.luogu.org/post-chi-xu-geng-xin-xian-duan-shu-yang-xie-zong-ru-men-dao-ge-zhon)\n\n\u4ee5\u4e0b\u9644\u677f\u5b50\uff1a[P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1](https://www.luogu.org/problem/P3372)\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 100005;\n#define LL long long\nlong long a[MAXN],tag[MAXN * 4],tree[MAXN * 4],cnt;\nvoid push_up(LL now) {\n\ttree[now] = tree[now * 2] + tree[now * 2 + 1];\n} \nvoid build(LL now,LL l,LL r) {\n\tif(l == r) {\n\t\tcnt ++;\n\t\ttree[now] = a[cnt];\n\t}\n\telse {\n\t\tLL mid = (l + r) / 2;\n\t\tbuild(now * 2,l,mid);\n\t\tbuild(now * 2 + 1,mid + 1,r);\n\t\tpush_up(now);\n\t}\n}\nvoid push_down(LL now,LL l,LL r) {\n\tLL mid = (l + r) / 2;\n\ttree[now * 2] += (mid - l + 1) * tag[now];\n\ttree[now * 2 + 1] += (r - mid) * tag[now];\n\ttag[now * 2] += tag[now];\n\ttag[now * 2 + 1] += tag[now];\n\ttag[now] = 0; \n\tpush_up(now);\n}\nvoid update(LL now,LL l,LL r,LL x,LL y,LL t) {\n\tif(x <= l && y >= r) {\n\t\ttree[now] += (r - l + 1) * t;\n\t\ttag[now] += t;\n\t}\n\telse {\n\t\tpush_down(now,l,r);\n\t\tLL mid = (l + r) / 2;\n\t\tif(x <= mid) update(now * 2,l,mid,x,y,t);\n\t\tif(y > mid) update(now * 2 + 1,mid + 1,r,x,y,t);\n\t\tpush_up(now);\n\t}\n} \nLL look_up(LL now,LL l,LL r,LL x,LL y) {\n\tLL ans = 0;\n\tif(x <= l && y >= r) {\n\t\tans += tree[now];\n\t}\n\telse {\n\t\tpush_down(now,l,r);\n\t\tLL mid = (l + r) / 2;\n\t\tif(x <= mid) ans += look_up(now * 2,l,mid,x,y);\n\t\tif(y > mid) ans += look_up(now * 2 + 1,mid + 1,r,x,y);\n\t}\n\treturn ans;\n}\nint main() {\n\tLL n,m;\n\tscanf(\"%lld %lld\",&n,&m);\n\tfor(LL i = 1;i <= n;i ++) scanf(\"%lld\",&a[i]);\n\tbuild(1,1,n);\n\tfor(LL i = 1;i <= m;i ++) {\n\t\tLL num;\n\t\tscanf(\"%lld\",&num);\n\t\tif(num == 1) {\n\t\t\tLL x,y,k;\n\t\t\tscanf(\"%lld %lld %lld\",&x,&y,&k);\n\t\t\tupdate(1,1,n,x,y,k);\n\t\t}\n\t\telse {\n\t\t\tLL x,y;\n\t\t\tscanf(\"%lld %lld\",&x,&y);\n\t\t\tprintf(\"%lld\\n\",look_up(1,1,n,x,y));\n\t\t}\n\t}\n\treturn 0;\n}\n```\n------------\n\u601d\u8def\uff1a\u8fd9\u4e2a\u9898\u53ef\u4ee5\u8bf4\u5c31\u662f\u6700\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\uff0c\u4e5f\u4e0d\u9700\u8981\u61d2\u6807\u8bb0\u4ec0\u4e48\u7684\uff0c\u5f00\u4e24\u4e2a\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef.\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 200005;\nint a[MAXN],tree_min[MAXN * 4],tree_max[MAXN * 4],cnt;//\u7ebf\u6bb5\u6811\u6240\u9700\u7684\u6570\u7ec4\u5f00\u56db\u500d\nvoid push_up(int now) {//\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u6700\u5927\uff0c\u4e00\u4e2a\u6700\u5c0f\n\ttree_min[now] = min(tree_min[now * 2],tree_min[now * 2 + 1]);\n\ttree_max[now] = max(tree_max[now * 2],tree_max[now * 2 + 1]);\n}\nvoid build(int now,int l,int r) {//\u5efa\u6811\n\tif(l == r) {\n\t\tcnt ++;\n\t\ttree_min[now] =\ttree_max[now] = a[cnt];\n\t}\n\telse {\n\t\tint mid = (l + r) >> 1;\n\t\tbuild(now * 2,l,mid);\n\t\tbuild(now * 2 + 1,mid + 1,r);\n\t\tpush_up(now);\n\t}\n}\nint look_up(int now,int l,int r,int x,int y,int &Max,int &Min) {\n\tif(x <= l && y >= r) {//\u6ce8\u610f\u6bcf\u6b21\u67e5\u8be2\u7ef4\u62a4\u4e24\u4e2a\u503c\n\t\tMax = max(Max,tree_max[now]);\n\t\tMin = min(Min,tree_min[now]);\n\t}\n\telse {\n\t\tint mid = (l + r) >> 1;\n\t\tif(x <= mid) look_up(now * 2,l,mid,x,y,Max,Min);\n\t\tif(y > mid) look_up(now * 2 + 1,mid + 1,r,x,y,Max,Min);\n\t}\n}\nint main() {\n\tint n,m;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1;i <= n;i ++) scanf(\"%d\",&a[i]);\n\tbuild(1,1,n);\n\tfor(int i = 1;i <= m;i ++) {\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tint Min = 1000005,Max = 0;//\u5bf9Min\u5b9a\u4e49\u4e00\u4e2a\u6781\u5927\u503c\uff0cMax\u53cd\u4e4b\n\t\tlook_up(1,1,n,x,y,Max,Min);\n\t\tprintf(\"%d\\n\",Max - Min);//\u6781\u503c\u76f8\u51cf\n\t}\n\treturn 0;\n}\n```\n------------\n## \u8c22\u8c22\u56f4\u89c2\n\n\n\n\n",
        "postTime": 1564225385,
        "uid": 173484,
        "name": "C20212724\u6768\u4eac\u671d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\uff0c\u7b80\u76f4\u5c31\u662f\u7ebf\u6bb5\u6811\u6a21\u677f\n\n\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7684\u8bb0\u5f55\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\uff0c\u5728\u67e5\u8be2\u7684\u65f6\u5019\u8c03\u7528\u51fa\u6700\u5927\u6700\u5c0f\u503c\u518d\u76f8\u51cf\u5373\u53ef\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,m,a[50010],mx,mi=1000005;\nint minn[200010],maxx[200010];\nvoid build(int k,int l,int r)//\u5efa\u6811\n{\n\tif(l==r){minn[k]=a[l];maxx[k]=a[l];return;}//\u6bcf\u4e2a\u8282\u70b9\u50a8\u5b58\u4e24\u4e2a\u4fe1\u606f\u2014\u2014\u533a\u95f4\u6700\u5927\u503c\u548c\u533a\u95f4\u6700\u5c0f\u503c\n\tint mid=l+r>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n\tminn[k]=min(minn[k<<1],minn[k<<1|1]);//\u522b\u5fd8\u4e86\u66f4\u65b0\n\tmaxx[k]=max(maxx[k<<1],maxx[k<<1|1]);\n}\nvoid query(int k,int l,int r,int x,int y)//\u67e5\u8be2\n{\n\tif(l>=x&&r<=y)\n\t{\n\t\tmx=max(mx,maxx[k]);//\u67e5\u8be2\u65f6\u76f4\u63a5\u540c\u65f6\u4fee\u6539\u4e24\u4e2a\u5168\u5c40\u53d8\u91cf\u5373\u53ef\n\t\tmi=min(mi,minn[k]);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(x<=mid)query(k<<1,l,mid,x,y);\n\tif(y>mid)query(k<<1|1,mid+1,r,x,y);\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d\",&a[i]);\n\tbuild(1,1,n);\n\tint u,v;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tquery(1,1,n,u,v);\n\t\tprintf(\"%d\\n\",mx-mi);\n\t\tmx=0;mi=1000005;//\u522b\u5fd8\u4e86\u91cd\u65b0\u8d4b\u503c\uff0c\u5426\u5219\u53ef\u80fd\u4f1aWA\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1553943247,
        "uid": 105123,
        "name": "Protons",
        "ccfLevel": 0,
        "title": "P2880 \u8fdb\u51fb\u7684\u5976\u725b \u9898\u89e3"
    },
    {
        "content": "Halo \uff0c\u53c8\u5e26\u6765\u4e00\u7ec4\u8f83\u4e3a\u7b80\u5355\u8bc6\u522b\u7684\u4ee3\u7801\uff0c\u6bd4\u8f83\u9002\u5408\u50cf\u6211\u8fd9\u6837\u7684**\u849f\u84bb**\u9605\u8bfb\n\n\u60f3\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662fst\u8868\uff0c\u521d\u59cb\u4e00\u4e2amax\u7684\u548c\u4e00\u4e2amin\u7684st\u8868\uff0c\u7136\u540eRMQ\u4e00\u4e2amax\u7684\u4e00\u4e2amin\u7684\u5c31\u53ef\u4ee5\u4e86\uff1b\n\n    \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint a[50001],f_max[50002][21],f_min[50002][21],n,m;\nvoid ST_max()\n{\n    int k=log(n)/log(2);\n    for(int i=1;i<=n;i++)\n        f_max[i][0]=a[i];//\u521d\u59cb\u5316\n    for(int j=1;j<=k;j++)\n        for(int i=1;(i+(1<<j)-1)<=n;i++) \n             f_max[i][j]=max(f_max[i][j-1],f_max[i+(1<<(j-1))][j-1]);\n} \nint RMQ_max(int L,int R)\n{\n    int k=log(R-L+1)/log(2);//\u521d\u59cb\u5316k\n    return max(f_max[L][k],f_max[R-(1<<k)+1][k]); //\u533a\u95f4\u6700\u5927\u503c\n}\nvoid ST_min()\n{\n    int k=log(n)/log(2);\n    for(int i=1;i<=n;i++)\n        f_min[i][0]=a[i];//\u540c\u4e0a\n    for(int j=1;j<=k;j++)\n        for(int i=1;(i+(1<<j)-1)<=n;i++) \n             f_min[i][j]=min(f_min[i][j-1],f_min[i+(1<<(j-1))][j-1]);\n} \nint RMQ_min(int L,int R)//\u533a\u95f4\u6700\u5c0f\u503c\n{\n    int k=log(R-L+1)/log(2);\n    return min(f_min[L][k],f_min[R-(1<<k)+1][k]); \n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        cin>>a[i];\n    ST_max();\n    ST_min();\n    for(int i=1;i<=m;i++)\n        {\n            int x,y;\n            cin>>x>>y;\n            cout<<RMQ_max(x,y)-RMQ_min(x,y)<<endl;//\u968f\u7740\u8bfb\u5165\u968f\u7740\u8f93\u51fa\n        }\n    return 0;\n}\n```",
        "postTime": 1510060211,
        "uid": 35464,
        "name": "Leelzh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u7528ST\u7b97\u6cd5\u5b9e\u73b0\u7684RMQ\u3002\n\n\nRMQ\u5176\u5b9e\u5c31\u662f\u533a\u95f4\u6700\u503c\u3002\n\nRMQ\u5229\u7528\u4e86\u4e8c\u5206\uff08\u6216\u8005\u8bf4\u500d\u589e\uff09\u7684\u601d\u60f3\uff0c\u8fdb\u884cdp\u3002\n\n\u9884\u5904\u7406O\uff08nlogn\uff09,\u4e0e\u7ebf\u6bb5\u6811\u6bd4\u8f83\u7684\u4f18\u70b9\u662f\u67e5\u8be2O(1)\uff0c\u67e5\u8be2\u7684\u601d\u60f3\u5373\u662f\u7528\u4e24\u4e2a2^n\u7684\u533a\u95f4\u8986\u76d6\u8fd9\u4e2a\u5927\u533a\u95f4\u3002\n\n\u987a\u5e26\u4e00\u63d0\uff0cRMQ\u8fd8\u80fd\u7528\u4e8e\u5b9e\u73b0\u79bb\u7ebfLCA\u3002\n\n\n``` javascript\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint Min[50001][17],Max[50001][17],n,q;\nvoid RMQ(){\n    for(int j=1;(1<<j)<=n;j++){\n        for(int i=1;i+(1<<j)-1<=n;i++){\n            Min[i][j]=min(Min[i][j-1],Min[i+(1<<(j-1))][j-1]);\n            Max[i][j]=max(Max[i][j-1],Max[i+(1<<(j-1))][j-1]);\n        }\n    }\n}\nint main(){\n    while(~scanf(\"%d%d\",&n,&q)){\n        memset(Min,0,sizeof(Min));\n        memset(Max,0,sizeof(Max));\n        for(int i=1;i<=n;i++){\n            scanf(\"%d\",&Min[i][0]);\n            Max[i][0]=Min[i][0];\n        }\n        RMQ();\n        for(int i=1;i<=q;i++){\n            int x,y;\n            scanf(\"%d%d\",&x,&y);\n            int k=log(y-x+1)/log(2);\n            printf(\"%d\\n\",max(Max[x][k],Max[y-(1<<k)+1][k])-min(Min[x][k],Min[y-(1<<k)+1][k]));\n        }\n    }\n}\n```",
        "postTime": 1507027337,
        "uid": 52102,
        "name": "wycissilly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "```\nst\u8868\u6a21\u677f\n\u771f\u7684\u8fd9\u9898\u662f\u600e\u4e48\u84dd\u7684\nst\u8868\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u6c42rmq\u7684\u5de5\u5177\n\u4e3b\u8981\u539f\u7406\u662f\u5c06\u6570\u5217\u5206\u6210(1<<(k))\u7684\u5757\n\u9884\u5904\u7406\u5efa\u8868\u7136\u540eO1\u67e5\u8be2\n\u5982\u679c\u67e5\u8be2\u5927\uff0cst\u8868\u65e0\u8bba\u5728\u65f6\u95f4\u6216\u8005\u7a7a\u95f4\u662f\u8fdc\u4f18\u4e8e\u7ebf\u6bb5\u6811\u7684\n\n```\n```cpp\n#include<cstdio>\n#include<cstring>\n#define min(a,b) a>b?b:a\n#define max(a,b) a>b?a:b\nusing namespace std;\nconst int maxn=5e5+5,LOG=20;\nint log(int x){int ans=-1;for(;x;x>>=1)ans++;return ans;}\nint a[maxn];\nstruct ST_table//\u628ast\u8868\u88c5\u6210\u7ed3\u6784\u4f53\n{\n\tint f[maxn][LOG],n,usage;//usage\u662f\u6765\u63a7\u5236\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u7684\n\tvoid usage_select(int n){usage=n;}//\u66f4\u65b0usage\n\tvoid init()\n\t{\n\t\tfor(int i=1;i<=n;i++)f[i][0]=a[i];//\u5f88\u5bb9\u6613\u7684\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u6570\u7684\u540e\u4e00\u4e2a\u4e4b\u5185\u6781\u503c\u4e00\u5b9a\u662f\u5176\u672c\u8eab\n\t\tfor(int j=1;(1<<j)<=n;j++)\n\t\t{\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tif(usage==1)f[i][j]=min(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n\t\t\t\telse if(usage==0)f[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n                //\u628a\u5e8f\u5217\u62c6\u6210\u4e24\u534a\u66f4\u65b0\u6781\u503c\n\t\t\t}\n\t\t}\n\t}\n\tint find(int l,int r)\n\t{\n\t\tif(r<l){int k=l;l=r;r=k;}\n\t\tint k=log(r-l+1);\n\t\tif(usage==1)return min(f[l][k],f[r-(1<<k)+1][k]);\n\t\telse if(usage==0)return max(f[l][k],f[r-(1<<k)+1][k]);\n\t}\n}min_table,max_table; \nint main()\n{\n\tmin_table.usage_select(1);\n\tmax_table.usage_select(0);\n\tint N,Q;scanf(\"%d%d\",&N,&Q);min_table.n=max_table.n=N;\n\tfor(int i=1;i<=N;i++)scanf(\"%d\",&a[i]);\n\tmin_table.init();max_table.init();\n\tfor(int i=1;i<=Q;i++)\n\t{\n\t\tint L,R;scanf(\"%d%d\",&L,&R);\n\t\tprintf(\"%d\\n\",max_table.find(L,R)-min_table.find(L,R));\n\t}\n}\n```\n",
        "postTime": 1555420103,
        "uid": 88686,
        "name": "Shir\u03bf",
        "ccfLevel": 5,
        "title": "rmqn\u7684\u5feb\u901f\u6c42\u6cd5"
    },
    {
        "content": "### \u6700\u8fd1\u6211\u6709\u70b9\u5206\u5757\u4e2d\u6bd2\u4e86\n\n\u8fd9\u9053\u9898\u6211\u662f\u7528ST\u8868\u6c34\u8fc7\u53bb\u7684\n\n\u7136\u540e\u6211\u7ffb\u4e86\u7ffb\u9898\u89e3,\u53d1\u73b0\u5206\u5757\u7684\u9898\u89e3\u51e0\u4e4e\u6ca1\u6709~~(\u4ec5\u6709\u7684\u4e00\u7bc7\u6211\u8fd8\u770b\u4e0d\u61c2 \u54ed\u7b11.jpg)~~\n\n\u4e8e\u662f\u5c31\u51b3\u5b9a\u81ea\u5df1\u6765\u4e00\u53d1\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define maxn 100000\nusing namespace std ;\nint tag_max[maxn] , tag_min[maxn] ;//\u8bb0\u5f55\u5757\u5185\u6700\u5927\u6700\u5c0f\nint n , m , a[maxn] ;\nint N , pos[maxn] ;//\u5757\u6570\u4ee5\u53ca\u5757\nint l[maxn] , r[maxn] ;//\u521a\u4ece\u522b\u7684\u5730\u65b9\u5b66\u5230\u7684\u65b0\u6280\u80fd--\u5077\u61d2\nint query_max(int x , int y ) {//\u533a\u95f4\u6c42\u6700\u5927\u503c\n\tint ans = -1000 ;\n\tif(pos[x] == pos[y]) {\n\t\tfor(int i = x ; i <= y ; i ++) ans = max(ans , a[i]) ;//\u66b4\u529b\n\t}else {\n\t\tfor(int i = x ; i <= r[pos[x]] ; i ++ ) ans = max(ans,a[i]) ;//\u5de6\u8fb9\n\t\tfor(int i = l[pos[y]] ; i <= y ; i ++) ans = max(ans ,a[i]) ;//\u53f3\u8fb9\n\t\tfor(int i = pos[x] + 1 ; i <= pos[y] - 1 ; i ++) ans = max(ans,tag_max[i]) ;//\u4e2d\u95f4\n\t}\n\treturn ans ;\n}\nint query_min(int x , int y ) {//\u533a\u95f4\u6c42\u6700\u5c0f\u503c\n\tint ans = 0x7ffffff ;\n\tif(pos[x] == pos[y]) {\n\t\tfor(int i = x ; i <= y ; i ++) ans = min(ans , a[i]) ;\n\t}else {\n\t\tfor(int i = x ; i <= r[pos[x]] ; i ++ ) ans = min(ans,a[i]) ;\n\t\tfor(int i = l[pos[y]] ; i <= y ; i ++) ans = min(ans ,a[i]) ;\n\t\tfor(int i = pos[x] + 1 ; i <= pos[y] - 1 ; i ++) ans = min(ans,tag_min[i]) ;\n\t}\n\treturn ans ;\n}\nint main() { \n\tmemset(tag_min,0x3f,sizeof(tag_min)) ;\n\tmemset(tag_max,-1,sizeof(tag_max)) ;\n\tscanf(\"%d%d\",&n,&m) ;N = sqrt(n) ;\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\tpos[i] = (i-1)/N + 1 ;\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) l[i] = (i-1) * N + 1 , r[i] = i * N ;\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\tscanf(\"%d\",&a[i]) ;\n\t\ttag_max[pos[i]] = max(tag_max[pos[i]],a[i]) ;\n\t\ttag_min[pos[i]] = min(tag_min[pos[i]],a[i]) ;\n\t}\n\tfor(int i = 1 ; i <= m ; i ++) {\n\t\tint x , y ;\n\t\tscanf(\"%d%d\",&x,&y) ;\n\t\tcout << query_max(x,y) - query_min(x,y) << endl ;\n\t}\n\treturn 0 ;\n}\n```\n\n\u66b4\u529b\u5206\u5757\u771f\u795e\u5947!!\n\n\u5b8c\u7ed3\u6563\u82b1!!!",
        "postTime": 1539486772,
        "uid": 54752,
        "name": "L_Y_T",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "# \u2193EASY\u4e00\u70b9\u70b9\u7684\u505a\u6cd5(\u5206\u5757)\u2193\n####  \u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u53ef\u80fd\u5199\u7684\u4e0d\u592a\u597d\uff0c\u51d1\u6d3b\u7740\u770b\u5427\u3002\u3002\u3002\n\n------------\n##### \u4ee3\u7801\u6709\u70b9\u957f\uff0c\u770b\u8d77\u6765\u4e5f\u6709\u4e00\u4e9b\u6076\u5fc3\uff0c\u4e0d\u8fc7\u53ea\u8981\u4f1a\u4e86\u5199\u8d77\u6765\u5c31\u5341\u5206\u7b80\u5355\u3002\n\n#### \u5206\u5757\u7684\u601d\u60f3\uff1a \n\t\t\n#### \u5c06\u5e8f\u5217a\u5206\u6210sqrt(n)\u6216sqrt(n)+1\u4efd\uff0c\u56e0\u6b64\u6bcf\u4efd\u7684\u6700\u957f\u957f\u5ea6\u4e3asqrt(n)\u5c06\u6bcf\u5757\u4e2d\u7684\u4e00\u4e9b\u91cf(\u548c\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u4e58\u79ef)\u7b49\u9884\u5904\u7406\u51fa\u6765(\u6253\u4e0a\u533a\u95f4\u6807\u8bb0)\uff0c\u5728\u67e5\u627e\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u8fd9\u4e9b\u91cf\u65f6\uff0c\u5c06\u8be5\u533a\u95f4\u4e0d\u5168\u5728\u5757\u5185\u7684\u90e8\u5206\u4e00\u4e2a\u4e2a\u679a\u4e3e\u5904\u7406(\u6700\u591a2sqrt(n)\u6b21)\uff0c\u5168\u5728\u5757\u5185\u7684\u90e8\u5206\u7528\u533a\u95f4\u6807\u8bb0\u5904\u7406\u3002\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\uff0c\u7ed3\u5408\u7740\u7406\u89e3\u4e00\u4e0b\u5427\u3002\u3002\u3002\n\n\u6ce8\uff1a\u65f6\u95f4\u590d\u6742\u5ea6O(n) = qsqrt(n)\u76f8\u5bf9\u7ebf\u6bb5\u6811\u7684\u8981\u591a\u4e00\u70b9\uff0c\u4e00\u4e9b\u6570\u636e\u5927\u7684\u9898\u53ef\u80fd\u4f1aT\u6389\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint lft[100001],rit[100001];\n//left\u597d\u50cf\u662f\u5173\u952e\u8bcd(ono\u6c14)\u6240\u4ee5\u5c31\u628alft\u5199\u6210\u4e86lft\uff0cright\u5199\u6210rit\nint a[1000001],ma[10001],mi[100001],b[100001];\nint n,q,tot,len,l,r,ansma,ansmi;\n\ninline int read() {//\u5feb\u8bfb\n\tint x = 0 , f = 1;\n\tchar c = getchar();\n\twhile( c < '0' || c > '9' ) {\n\t\tif( c == '-' )f = -1;\n\t\tc = getchar();\n\t}\n\twhile( c >='0' && c <='9' ) {\n\t\tx = ( x << 3 ) + ( x << 1 ) + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\ninline int mma( int x , int y ) { return x > y ? x : y; }\ninline int mmi( int x , int y ) { return x < y ? x : y; }\n\nint main() {\n\t\n\tn = read(),q = read();\n\t\n\tint len = sqrt(n);//\u5206\u6210\u7684\u6bcf\u4e2a\u5757\u957f\u5ea6\u4e3alen \n\tint tot = n / len;//\u4e00\u5171\u5206\u6210tot\u4e2a\u5757 \n\tif( n%len )tot++; //\u5982\u679c\u672b\u5c3e\u5143\u7d20\u672a\u88ab\u52a0\u5165\u5757\u91cc\uff0c\u5757\u6570++\n\t\n\tfor( int i = 1 ; i <= tot ; ++i )mi[i] = 2147483647;\n\tfor( int i = 1 ; i <= n ; ++i ) {\n\t\ta[i] = read();\n\t\tb[i] = ( i - 1 ) / len + 1;\t   //\u7b2ci\u4e2a\u5143\u7d20\u6240\u5728\u7684\u5757\u4e3ab[i]\n\t\tma[b[i]] = mma( ma[b[i]] , a[i] );//\u8bb0\u5f55\u7b2cb[i]\u5757\u4e2d\u7684max\n\t\tmi[b[i]] = mmi( mi[b[i]] , a[i] );//\u8bb0\u5f55\u7b2cb[i]\u5757\u4e2d\u7684min\n\t}\n\tfor( int i = 1 ; i <= tot ; ++i ) {//\u9884\u5904\u7406\u51fa\u7b2ci\u5757\u7684\u5de6\u3001\u53f3\u7aef\u70b9\n\t\tlft[i] = ( i - 1 ) * len + 1;\n\t\trit[i] = i * len;\n\t}\n\t\n\tfor( int i = 1 ; i <= q ; ++i ) {\n\t\tl = read(),r = read();\n\t\tansma = 0,ansmi = 2147483647;//\u5206\u522b\u8bb0\u5f55l-r\u533a\u95f4\u7684\u6700\u5927\u3001\u6700\u5c0f\u503c\n\t\t\n\t\tfor( int i = l ; i <= mmi( r , rit[b[l]] ) ; ++i ) {\n        \t\t\t\t\t\t\t //\u66b4\u529b\u5904\u7406\u5de6\u7aef\u4e0d\u5168\u5728\u5757\u5185\u7684\u503c\n\t\t\tansma = mma( ansma , a[i] );\n\t\t\tansmi = mmi( ansmi , a[i] );\n\t\t}\n\t\tif( b[l] != b[r] ) {\t\t //\u5982\u679cl\u3001r\u4e0d\u5728\u540c\u4e00\u5757\u4e2d \n\t\t\tfor( int i = r ; i >= lft[b[r]] ; --i ) {\t\t\n            \t\t\t\t\t\t //\u66b4\u529b\u5904\u7406\u53f3\u7aef\u4e0d\u5168\u5728\u5757\u5185\u7684\u503c\n\t\t\t\tansma = mma( ansma , a[i] );\n\t\t\t\tansmi = mmi( ansmi , a[i] );\n\t\t\t}\n\t\t\tfor( int i = b[l] + 1 ; i <= b[r] - 1 ; ++i ) {\n            \t\t\t\t\t\t //\u5904\u7406\u5de6\u53f3\u7aef\u70b9\u6240\u5728\u5757\u4e2d\u95f4\u7684\u5757\n\t\t\t\tansma = mma( ansma , ma[i] );\n\t\t\t\tansmi = mmi( ansmi , mi[i] );\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%lld\\n\",(ansma - ansmi));\n\t}\n\t\n\treturn 0;\n}\n```\n\u611f\u8c22\u6536\u542c(\uff5eo\uffe33\uffe3)\uff5e",
        "postTime": 1539213741,
        "uid": 88348,
        "name": "Big_old",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "#### **\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u8981\u6c42\u6bcf\u4e2a\u8be2\u95ee\u4e2d\uff0c\u6700\u5927\u4e0e\u6700\u5c0f\u7684\u725b\u7684\u9ad8\u5ea6\u5dee\uff0c\u800c\u6bcf\u4e2a\u8be2\u95ee\u53c8\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u4e8e\u662f\u4e4e\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u8fd9\u662f\u4e00\u9053\u6c42\u533a\u95f4\u6700\u503c\u7684\u95ee\u9898**\n#### # \u6211\u4eec\u4fbf\u53ef\u4ee5\u4f7f\u7528ST\u7b97\u6cd5\uff0c\u6c42\u51faST\u8868\uff0c\u5229\u7528ST\u8868\u6765\u8868\u8fbe\u67d0\u4e2a\u533a\u95f4\u7684\u6781\u5927\u6216\u8005\u6781\u5c0f\u503c\uff0c\u55ef\uff01\u6ca1\u9519\uff01ST\u8868\u5c31\u662f\u8868\u793a\u67d0\u4e2a\u533a\u95f4\u6781\u503c\u7684\u4e1c\u4e1c\uff01\u5176\u6838\u5fc3\u601d\u60f3\u4fbf\u662f\u500d\u589e\uff0c\u4e0d\u4f1a\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u770b\u674e\u715c\u4e1c\u5927\u7287\u5199\u7684\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\u7684\u7b2c38\u9762\uff0c\u6216\u8005\u70b9\u51fb\u4e0b\u9762\u7684\u94fe\u63a5\uff1a\n[ST\u8868\u7b97\u6cd5\u8be6\u89e3](https://blog.csdn.net/Hanks_o/article/details/77547380)\n\n# ST\u8868\u771f\u662f\u4e2a\u597d\u4e1c\u897f\uff01\uff01\uff01\uff01\uff01\n### \u597d\u5566\u653e\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\nusing namespace std;\nlong long st_max[50000][21],st_min[50000][21],a[50005];\nint n,q;\nvoid ST(){\n\tfor(int i=1;i<=n;i++){\n\t\tst_max[i][0]=a[i];\n\t\tst_min[i][0]=a[i];\n\t}\n\tint t=log(n)/log(2)+1;\n\tfor(int j=1;j<t;j++){\n\t\tfor(int i=1;i<=n-(1<<j)+1;i++){\n\t\t\tst_max[i][j]=max(st_max[i][j-1],st_max[i+(1<<(j-1))][j-1]);\n\t\t\tst_min[i][j]=min(st_min[i][j-1],st_min[i+(1<<(j-1))][j-1]);\n\t\t}\n\t} \n}//\u6838\u5fc3\u4ee3\u7801\uff0c\u6c42ST\u8868 \nint st_maxn(int l,int r){\n\tint k=log(r-l+1)/log(2);\n\treturn max(st_max[l][k],st_max[r-(1<<k)+1][k]);\n}\nint st_minn(int l,int r){\n\tint k=log(r-l+1)/log(2);\n\treturn min(st_min[l][k],st_min[r-(1<<k)+1][k]);\n}\nint main(){\n\tscanf(\"%d %d\",&n,&q);\n\tfor(int i=1;i<=n;i++)\tscanf(\"%d\",&a[i]);\n\tST();\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(x>y)\tswap(x,y);\n\t\tprintf(\"%d\",st_maxn(x,y)-st_minn(x,y));\n\t}\n\t\t\n\treturn 0;\n}\n\n```",
        "postTime": 1532261802,
        "uid": 91559,
        "name": "\u8ffd\u68a6_Chen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "rmq\u5c31\u662f\u5728\u4e00\u4e2a\u533a\u95f4\u91cc\u627e\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c \u7528st\u7684\u505a\u6cd5\n\n\u7406\u89e3\u4e00\u4e0brmq\u7684\u539f\u7406\uff1a\u5047\u8bbe\u6211\u4eec\u8981\u67e5\u8be2\u7684\u8fd9\u4e2a\u6570\u503c\u5728\u533a\u95f4a[i]\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u7528f[i][j]\u6765\u8868\u793a\u8fd9\u4e2a\u6570\uff1b\u5177\u4f53\u542b\u4e49\u662f\u8fd9\u6837\u7684\uff1af[i][j]\u8868\u793a \u4ecei\u5f00\u59cb\u76842^j\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c \u90a3\u4e48\u5c31\u53ef\u4ee5\u786e\u5b9aa[i]=f[i][0]\uff1b\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a2^j\u7684\u6570\u5217\u6211\u4eec\u53ef\u4ee5\u628a\u4ed6\u5e73\u5747\u5206\u6210\u4e24\u6bb5 \u6bcf\u6bb5\u7684\u957f\u5ea6\u4e3a2^j-1;\u7b2c\u4e00\u6bb5\u662fi\u5230i+2^j-1 -1;\u7b2c\u4e8c\u6bb5\u662fi+2^j-1\u5230i+2^j-1\uff1b\n\n\u53ef\u4ee5\u5206\u522b\u8868\u793a\u4e3a\uff1af[i][j-1]  f[i+2^j-1][j-1]\n\n\u5219\u8bbe\u67092^k=j-i+1(\u5373\u4e00\u4e2a\u4ecei\u5230j\u7684\u533a\u95f4\u7684\u957f\u5ea6\uff09\u90a3\u4e48\u6709rmq\uff08i\uff0cj\uff09=max\uff08f[i][k],f[j-2^k+1][k]);(\u533a\u95f4\u6700\u5927\u503c \u6700\u5c0f\u503c\u540c\u7406\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint n,q,s,e,maxn,minn;\nint f1[200001][51],f2[200001][51],a[200001];\n\nint rmq(int i,int j){\n\tint k=0;\n\twhile((1<<(k+1))+i<=j+1) k++;//\u4ed4\u7ec6\u60f3\u4e00\u60f3\u5f88\u597d\u7406\u89e3\n\tminn=min(f2[i][k],f2[j-(1<<k)+1][k]);//\u533a\u95f4\u6700\u5c0f\u503c\n\tmaxn=max(f1[i][k],f1[j-(1<<k)+1][k]);//\u533a\u95f4\u6700\u5927\u503c\n\treturn maxn-minn;//\u8fd4\u56de\u4e24\u6570\u503c\u7684\u5dee\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\tfor(int i=1;i<=n;i++){\n\t\tf1[i][0]=f2[i][0]=a[i];\n\t}\n\tfor(int j=1;(1<<j)<=n;j++)\n\tfor(int i=1;i+(1<<j)<=n+1;i++){\n\t\tf1[i][j]=max(f1[i][j-1],f1[(1<<(j-1))+i][j-1]);\n\t\tf2[i][j]=min(f2[i][j-1],f2[(1<<(j-1))+i][j-1]);\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"%d%d\",&s,&e);\n\t\tcout<<rmq(s,e)<<endl;\n\t} \n\treturn 0;\n}\n```",
        "postTime": 1531969510,
        "uid": 51395,
        "name": "7wwwwth",
        "ccfLevel": 4,
        "title": "\u53ef\u4ee5\u8bf4\u662f\u6700\u57fa\u672c\u7684rmq\u4e86"
    },
    {
        "content": "\t\t\u6b64\u9898\u6211\u89c1\u6709\u4eba\u4f7f\u7528\u4e86\u7ed3\u6784\u4f53\uff0c\u5728\u6b64\u6211\u60f3\u53d1\u4e00\u4e2a\u4e00\u4f4d\u6570\u7ec4\u7684\u89e3\u6cd5\u3002\n    \n    \t\u9996\u5148\uff0c\u8bfb\u5165\u6570\u636e\uff0c\u5229\u7528\u6570\u636e\u6784\u9020\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4e4b\u540e\u5462\n\t\u8bfb\u5165\u6240\u9700\u8981\u64cd\u4f5c\u7684\u533a\u95f4\uff0c\u76f4\u63a5\u5728\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u4e2d\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\uff0c\u6700\u540e\u8f93\u51fa\u8eab\u9ad8\n    \u5dee\u3002\n    \n    \t\u5728\u6b64\u4ee3\u7801\u4e2d\uff0c\u6211\u7528\u4e86\u8f83\u591a\u7684inline\u51fd\u6570\u548c\u4f4d\u8fd0\u7b97\uff0c\u6ca1\u6709\u4f7f\u7528\u5934\u6587\u4ef6\u4e2d\u81ea\n\t\u5e26\u7684\u51fd\u6570\uff0c\u90fd\u662f\u4e3a\u4e86\u63d0\u9ad8\u4ee3\u7801\u8fd0\u884c\u901f\u5ea6\uff0c\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n    \n    \t(\u4f4d\u8fd0\u7b97\u89e3\u91ca:<<1\u662f\u53d8\u6210\u539f\u6765\u76842\u500d,>>1\u662f\u9664\u4ee52,<<1|1\u662f\u4e582\u52a01)\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=50001;\n\ninline int min(int p,int q){//\u624b\u5199\u6700\u5927\u503c\u51fd\u6570 \n\tif (p<q)return p;\n\treturn q;\n}\n\ninline int max(int p,int q){//\u624b\u5199\u6700\u5c0f\u503c\u51fd\u6570 \n\tif (p>q)return  p;\n\treturn q;\n}\n\ninline int read(){//\u5feb\u901f\u8bfb\u5165 \n    int k=0,f=1;\n    char c=getchar();\n    while(c>'9'||c<'0')\n        if(c=='-'){\n            f=-1;\n            c=getchar();\n        }\n    while(c<='9'&&c>='0'){\n        k=k*10+c-'0';\n        c=getchar();\n    }\n    return k*f;\n}\n\ninline void write (int x){//\u5feb\u901f\u8f93\u51fa(\u65e0\u804a\u7528,\u6ca1\u6709\u592a\u5927\u7684\u5b9e\u9645\u4f5c\u7528) \n\tif (x < 10) {\n\t\tputchar (x + '0');\n\t\treturn ;\n\t}\n\twrite (x / 10);\n\tputchar (x % 10 + '0');\n\treturn ;\n}\n\nint n,t,a[N],MAX[N<<2],MIN[N<<2],x,y;\n\nint makemax (int v,int i,int j){//\u7ef4\u62a4\u6700\u5927\u503c\u6570\u7ec4,\u9009\u62e9\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u4e2d\u8f83\u5927\u7684\u7ed3\u70b9\n\tif (i==j)return MAX[v]=a[i];\n\tint mid = i + j >> 1;\n\treturn MAX[v]=max(makemax(v<<1,i,mid),makemax(v<<1|1,mid+1,j));\n}\n\nint makemin (int v, int i, int j){//\u7ef4\u62a4\u6700\u5c0f\u503c\u6570\u7ec4,\u9009\u62e9\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u4e2d\u8f83\u5c0f\u7684\u7ed3\u70b9\n\tif(i==j)return MIN[v]=a[i];\n\tint mid=i+j>>1;\n\treturn MIN[v]=min(makemin(v<<1,i,mid),makemin(v<<1|1,mid+1,j));\n}\n\nint findmax (int v, int i, int j){//\u67e5\u8be2\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\n\tif(i>y || j<x)return 0;\n\tif (i>=x && j<=y)return MAX[v];\n\tint mid=i+j>>1;\n\treturn max(findmax(v<<1,i,mid),findmax(v<<1|1,mid+1,j));\n}\n\nint findmin(int v, int i, int j) {//\u67e5\u8be2\u533a\u95f4\u4e2d\u7684\u6700\u5c0f\u503c \n\tif(i>y || j<x)return (1<<30);\n\tif(i>=x && j<=y)return MIN[v];\n\tint mid=i+j>>1;\n\treturn min(findmin(v<<1,i,mid),findmin(v<<1|1,mid+1,j));\n}\n\nint main(){\n\tint i;\n\tn=read(),t=read();\n\tfor(i= 1;i<=n;i++)a[i]=read();\n\tx=makemax(1,1,n);\n\tx=makemin(1,1,n);\n\twhile(t--){\n\t\tx=read(),y=read();\n\t\tint a=findmax(1,1,n);//\u5bfb\u627e\u6700\u9ad8\u725b\u7684\u8eab\u9ad8 \n\t\tint b=findmin(1,1,n);//\u5bfb\u627e\u6700\u77ee\u725b\u7684\u8eab\u9ad8 \n\t\twrite(a-b);//\u8f93\u51fa\u6700\u5927\u8eab\u9ad8\u5dee \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1517843287,
        "uid": 30224,
        "name": "\u6c5f\u5357\u5c0f\u5deb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\\_RMQ\u662fDP+\u4e8c\u5206\u7684\u601d\u60f3\\_\n\n\\_f[i][j]\u8868\u793a\u7b2ci\u4e2a\u6570\u52302\u7684j\u6b21\u65b9-1\u7684\u533a\u95f4\u6700\u503c\\_\n\n\\_\u7a7a\u95f4\u590d\u6742\u5ea6\uff082\\*Nlog2N+N\uff09\\_\n\n\\_\u65f6\u95f4\u590d\u6742\u5ea6\uff082\\*Nlog2N+Q\uff09\\_\n\n\\_\u4ee3\u7801\u5982\u4e0b\\_\n\n/\\*\n\u5728\u5bb6\u81ea\u5b66\u4e86\u4e00\u4e0brmq =\u3002= \u7ebf\u6bb5\u6811\u4f3c\u4e4e\u4f1a\u8d85\u65f6 \u601d\u8def\u4e0a\u8fd8\u662f\u975e\u5e38\u7684\u6e05\u6670\u7684 \u5e0c\u671b\u5927\u5bb6\u6709\u65f6\u95f4\u53ef\u4ee5\u53bb\u535a\u5ba2\u770b\u770brmq\u7684\u89e3\u6cd5 \u6bd4\u7ebf\u6bb5\u6811\u7b80\u5355\u591a\u5566\uff01\n\n\\*/\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n;\nint m;\nint s;\nint e;\nint mini;\nint maxn;\nint a1[100001][20];//min\nint a2[100001][20];//max\nint b[1000001];\nvoid init(){\n    for(int i=1;i<=n;i++){\n        a1[i][0]=a2[i][0]=b[i];\n    }\n    for(int j=1;j<=20;j++){\n        for(int i=1;i+(1<<j)<=n+1;i++){\n            a1[i][j]=min(a1[i][j-1],a1[i+(1<<(j-1))][j-1]);//\u5c0f \n            a2[i][j]=max(a2[i][j-1],a2[i+(1<<(j-1))][j-1]);//\u5927 \n        }\n    }\n}\nint RMQ_MIN(int x,int y){//xiao\n    int k=0;\n    while((1<<(k+1))<=y-x+1){\n        k++;\n    }\n    return min(a1[x][k],a1[y-(1<<k)+1][k]);//\u6838\u5fc3\n} \nint RMQ_MAX(int x,int y){//da\n    int k=0;\n    while((1<<(k+1))<=y-x+1){\n        k++;\n    }\n    return max(a2[x][k],a2[y-(1<<k)+1][k]);\u6838\u5fc3\n}\nint main(){\n    cin>>n>>m;//\u8f93\u5165\n    for(int i=1;i<=n;i++){\n        cin>>b[i];\n    }\n    init();\n    for(int i=1;i<=m;i++){\n        cin>>s>>e;\n        mini=RMQ_MIN(s,e);//\u6700\u5c0f\n        maxn=RMQ_MAX(s,e);//\u6700\u5927\n        cout<<maxn-mini<<endl;//\u8f93\u51fa\n    }\n}\n\u5230\u6b64\u7ed3\u675f \u8bb0\u5f97\u4e0d\u61c2\u79c1\u4fe1\u54e6\uff01\n```",
        "postTime": 1502721034,
        "uid": 41490,
        "name": "qscqesze_lca",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u6c34\u4e00\u53d1zkw\u7ebf\u6bb5\u6811\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define maxn 50010\n#define lc i<<1\n#define rc i<<1|1\nusing namespace std;\ninline void read(int& x){\n    x=0;int flag=1;char c=getchar();\n    while(c<'0' || c>'9'){\n        if(c=='-')flag=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9'){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    x*=flag;\n}\nint n,m,dep=1,x,y;\nstruct node{\n    int min1,max1;\n}tree[maxn<<2];\nvoid build(){\n    while(dep<n)dep<<=1;\n    for(int i=dep;i<dep+n;i++){//\u76f4\u63a5\u8d4b\u5230\u53f6\u5b50\u8282\u70b9\u4e0a \n        read(tree[i].min1);\n        tree[i].max1=tree[i].min1;\n    }\n    for(int i=dep-1;i;i--){\n        tree[i].min1=min(tree[lc].min1,tree[rc].min1);//\u81ea\u5e95\u5411\u4e0a\u7ef4\u62a4 \n        tree[i].max1=max(tree[lc].max1,tree[rc].max1);\n    }\n}\ninline int query_min(int l,int r){\n    int res;\n    l+=dep-1;r+=dep-1;//\u53d8\u5230\u53f6\u5b50\u8282\u70b9\u4e0a \n    res=min(tree[l].min1,tree[r].min1);\n    if(l==r)return res;\n    for(;l^r^1;l>>=1,r>>=1){\n        if(~l&1)res=min(res,tree[l^1].min1);// ~l&1 -> l%2==0\n        if(r&1)res=min(res,tree[r^1].min1);// r&1 -> r%2!=0\n        //\u5bf9\u4e8e\u5de6\u7aef\u70b9\uff0c\u5982\u679c\u8be5\u70b9\u7684\u5e8f\u53f7\u80fd\u88ab2\u6574\u9664\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u662f\u5de6\u513f\u5b50\uff0c\u90a3\u4e48\u5b83\n        //\u7684\u5144\u5f1f(\u4e5f\u5c31\u662f\u5b83\u7684\u53f3\u8fb9)\u4e00\u5b9a\u5728\u5305\u542b\u7684\u533a\u95f4\u5185\uff0c\n        //\u540c\u6837\uff0c\u5bf9\u4e8e\u53f3\u7aef\u70b9\uff0c\u5982\u679c\u4ed6\u662f\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u5b83\u7684\u5144\u5f1f\u4e00\u5b9a\u5305\u542b\u5728\u533a\u95f4\u5185 \n    }\n    return res;\n}\ninline int query_max(int l,int r){\n    int res;\n    l+=dep-1;r+=dep-1;\n    res=max(tree[l].max1,tree[r].max1);\n    if(l==r)return res;\n    for(;l^r^1;l>>=1,r>>=1){\n        if(~l&1)res=max(res,tree[l^1].max1);\n        if(r&1)res=max(res,tree[r^1].max1);\n    }\n    return res;\n}\nint main(){\n    read(n);read(m);\n    build();\n    for(int i=1;i<=m;i++){\n        read(x);read(y);\n        printf(\"%d\\n\",query_max(x,y)-query_min(x,y));\n    }\n    return 0;\n}\n```",
        "postTime": 1499304532,
        "uid": 34531,
        "name": "DDOSvoid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "\u521a\u5b66\u5206\u5757\uff0c\u6765\u53d1\u4e00\u6ce2\u5206\u5757\u9898\u89e3\u3002\n\n\u56e0\u4e3a\u6700\u503c\u90fd\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u5408\u5e76\uff0c\u5206\u5757\u5199\u8d77\u6765\u4e5f\u5f88\u7b80\u4fbf\uff0c\u9884\u5904\u7406\u90e8\u5206\u53ea\u8981O(n)\u7684\u590d\u6742\u5ea6\uff0c\u800c\u8be2\u95ee\u53ea\u662f\u62c6\u6210\u51e0\u4e2a\u5757\u66b4\u529b\u5408\u5e76\u3002\n\n\u800c\u795e\u5947\u7684\u662f\uff0c\u5206\u5757\u8be2\u95eeO(m \\* \u6839\u53f7n)\u7684\u74f6\u9888\u590d\u6742\u5ea6\u7adf\u7136\u8dd1\u5f97\u7092\u9e21\u5feb\u3002\n\n\u4ee3\u7801\uff1a\n\n// mex[i][j] / mix[i][j] \u5206\u522b\u8868\u793a\u5757i ~ \u5757j\u7684\u6700\u5927/\u6700\u5c0f\u503c\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\nusing namespace std;\nconst int Maxn = 0x3f3f3f3f;\nconst int N = 5e4 + 5, M = 255;\nint a[N], bl[M], br[M], mex[M][M], mix[M][M];\nint n, Q, S, s;\ntemplate <class T> inline T Max(const T a, const T b) {return a > b? a : b;}\ntemplate <class T> inline T Min(const T a, const T b) {return a < b? a : b;}\ntemplate <class T> inline void CkMax(T &a, const T b) {if (a < b) a = b;}\ntemplate <class T> inline void CkMin(T &a, const T b) {if (a > b) a = b;}\ntemplate <class T> inline void Swap(T &a, T &b) {a ^= b; b ^= a; a ^= b;}\ninline int get()\n{\n    char ch; bool f = false; int res = 0;\n    while (((ch = getchar()) < '0' || ch > '9') && ch != '-');\n    if (ch == '-') f = true;\n     else res = ch - '0';\n    while ((ch = getchar()) >='0' && ch <= '9')\n        res = (res << 3) + (res << 1) + ch - '0';\n    return f? ~res + 1 : res;\n}\ninline void put(int x)\n{\n    if (x < 0)\n      x = ~x + 1, putchar('-');\n    if (x > 9) put(x / 10);\n    putchar(x % 10 + 48);\n}\ninline void Init()\n{\n    memset(mex, -Maxn, sizeof(mex));\n    memset(mix, Maxn, sizeof(mix));\n    for (int i = 1; i <= s; ++i)\n     for (int j = bl[i]; j <= br[i]; ++j)\n      CkMax(mex[i][i], a[j]), CkMin(mix[i][i], a[j]);\n    for (int i = 1; i < s; ++i)\n     for (int j = i + 1; j <= s; ++j)\n      CkMax(mex[i][j], Max(mex[i][j - 1], mex[j][j])),\n      CkMin(mix[i][j], Min(mix[i][j - 1], mix[j][j]));\n}\ninline int Que(const int l, const int r)\n{\n    int L = (l - 1) / S + 1, R = (r - 1) / S + 1, Ma = -Maxn, Mi = Maxn;\n    if (r - l < (S << 1)) // \u6ce8\u610f\u7279\u5224\u6ca1\u6709\u5b8c\u6574\u7684\u5757\u7684\u60c5\u51b5 \n    {\n        for (int i = l; i <= r; ++i)\n         CkMax(Ma, a[i]), CkMin(Mi, a[i]);\n        return Ma - Mi;\n    }    \n    if (l == bl[L]) L--;\n    if (r == br[R]) R++;\n    // \u5982\u679c[l,r]\u521a\u597d\u90fd\u5728\u5b8c\u6574\u7684\u5757\uff0c\u8fd9\u6837\u5c31\u80fd\u76f4\u63a5\u8fd4\u56de\u5757\u4e2d\u4fe1\u606f\uff0c\u65e0\u9700\u66b4\u529b\u5904\u7406\uff0c\u8282\u7701\u65f6\u95f4\u6548\u7387\n    Ma = mex[L + 1][R - 1]; Mi = mix[L + 1][R - 1];\n    int ed = br[L], st = bl[R];\n    for (int i = l; i <= ed; ++i) CkMax(Ma, a[i]), CkMin(Mi, a[i]);\n    for (int i = st; i <= r; ++i) CkMax(Ma, a[i]), CkMin(Mi, a[i]);\n    return Ma - Mi;\n}\nint main()\n{\n    while (scanf(\"%d%d\", &n, &Q) != EOF)\n    {\n        S = sqrt(n); s = 0;\n        for (int i = 1; i <= n; ++i) a[i] = get();\n        for (int i = 1; i <= n; ++i)\n         if (i % S == 1) br[s] = i - 1, bl[++s] = i;\n        br[s] = n; bl[s + 1] = br[s + 1] = n + 1;\n        Init(); int x, y;\n        while (Q--)\n        {\n            x = get(); y = get();\n            put(Que(x, y)), putchar('\\n');\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1495966984,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    },
    {
        "content": "ST\u8868\u6a21\u677f\u9898...\n\n\u7ebf\u6bb5\u6811\u4f30\u8ba1\u4f1a\u6302\uff0c\u56e0\u4e3a\u8be2\u95ee\u592a\u591a\u4e86\u3002\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint f1[16][50005],dat[50005],f2[16][50005],N,Q; \nint max(int a,int b){return (a>b)?a:b;}\nint min(int a,int b){return (a<b)?a:b;}\nvoid sttable(int n){\n    int i,j,p;\n    memcpy(f1[0],dat,sizeof(dat));\n    memcpy(f2[0],dat,sizeof(dat));\n    for(i=1;(1<<i)<=n;i++)\n        for(j=0,p=(1<<(i-1));j<n-p;j++)\n            f1[i][j]=max(f1[i-1][j],f1[i-1][j+p]),\n            f2[i][j]=min(f2[i-1][j],f2[i-1][j+p]);//\u540c\u65f6\u5bf9\u6700\u5927\u6700\u5c0f\u4e24\u4e2ast\u8868\u521d\u59cb\u5316\uff0c\u9012\u63a8\n}int rmq(int l,int r){\n    int k=0;while((1<<(k+1))<(r-l+1))k++;\n    return max(f1[k][l],f1[k][r-(1<<k)+1])-min(f2[k][l],f2[k][r-(1<<k)+1]);//\u8be2\u95ee\u90e8\u5206\n}int main(){\n    scanf(\"%d%d\",&N,&Q);\n    int i,l,r;\n    for(i=0;i<N;i++)\n        scanf(\"%d\",&dat[i]);\n    sttable(N);\n    for(i=0;i<Q;i++)\n        scanf(\"%d%d\",&l,&r),\n        printf(\"%d\\n\",rmq(l-1,r-1));\n    return 0;\n}  \n```",
        "postTime": 1475411881,
        "uid": 11765,
        "name": "zqy1018",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2880 \u3010[USACO07JAN]\u5e73\u8861\u7684\u9635\u5bb9Balanced Lineup\u3011"
    }
]