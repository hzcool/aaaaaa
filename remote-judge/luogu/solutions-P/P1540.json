[
    {
        "content": "\u7531\u4e8e\u672c\u9898\u6570\u636e\u8303\u56f4\u8f83\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6307\u9488\u7684\u65b9\u6cd5\u505a\u3002\n\n\u6ce8\uff1a\u672c\u6587\u4e2d\u7684\u201c\u6307\u9488\u201d\u6307\u7684\u662f\u201c\u6307\u9488\u7684\u601d\u60f3\u201d\uff0c\u5e76\u4e0d\u662f\u201c\u6307\u9488\u7c7b\u578b\u201d\u7684\u201c\u6307\u9488\u201d\u3002\n\n\u5148\u5f00\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u6570\u7ec4a\u5b58\u6807\u8bb0\uff0c\u5728\u8bfb\u5165\u5355\u8bcdx\u65f6\uff0c\u82e5\u5f53\u524d\u6570\u7ec4a\u4e2d\u7684\u7b2cx\u4f4d\u7684\u6807\u8bb0\u4e3a\u201c1\u201d\uff0c\u5219\u8868\u793a\u8be5\u5355\u8bcd\u5728\u5185\u5b58\u4e2d\uff0c\u82e5\u6807\u8bb0\u4e3a\u201c0\u201d\uff0c\u5219\u8868\u793a\u8be5\u5355\u8bcd\u4e0d\u5728\u5185\u5b58\u4e2d\uff0c\u8fd9\u6837\u505a\u5c31\u53ef\u4ee5\u4e00\u6b65\u5224\u65ad\u8bfb\u5165\u7684\u5355\u8bcd\u5728\u5f53\u524d\u662f\u5426\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u4e0d\u5fc5\u4ece\u5934\u5230\u5c3e\u627e\u3002\u8fd9\u6837\u505a\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u5728\u5b58\u5165\u5355\u8bcd\u65f6\u53ea\u9700\u8981\u628a\u6570\u7ec4a\u4e2d\u7684\u7b2cx\u4f4d\u7684\u6807\u8bb0\u201c0\u201d\u6539\u4e3a\u201c1\u201d\uff0c\u800c\u5728\u5220\u53bb\u5185\u5b58\u4e2d\u7684\u5355\u8bcdx\u65f6\uff0c\u53ea\u9700\u8981\u628a\u6570\u7ec4a\u7684\u7b2cx\u4f4d\u7684\u6807\u8bb0\u201c1\u201d\u6539\u4e3a\u201c0\u201d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230\u4e00\u6b65\u5230\u4f4d\uff0c\u5927\u5927\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u6548\u7387\u3002\u8fd9\u662f\u672c\u9898\u7684\u5173\u952e\u4e4b\u4e00\uff0c\u9700\u8981\u5404\u4f4d\u597d\u597d\u4f53\u4f1a\u4f53\u4f1a\uff0c\u7406\u89e3\u7406\u89e3\u3002\n\n\u518d\u8bf4\u53e6\u4e00\u4e2a\u6570\u7ec4b\u3002\u6570\u7ec4b\u5b58\u50a8\u7684\u662f\u5185\u5b58\u4e2d\u7684\u5355\u8bcd\uff0c\u800c\u4e14\u8981\u6309\u8bfb\u5165\u987a\u5e8f\u5b58\u5165\uff0c\u5982b[1]\u4e2d\u5b58\u50a8\u7684\u5355\u8bcdx\u662f\u5728\u65f6\u95f41\u5b58\u5165\u7684\u3002\u8981\u6ce8\u610f\u7684\u662f\uff0c\u82e5\u5f53\u524d\u8bfb\u5165\u7684\u5355\u8bcdx\u5df2\u7ecf\u5728\u5185\u5b58\u4e2d\uff08\u5373a[x]==1\uff09\u90a3\u5c31\u4e0d\u7528\u5b58\u5165\u6570\u7ec4b\u4e2d\uff0c\u9047\u5230\u5185\u5b58\u4e2d\u6ca1\u6709\u7684\u65b0\u5355\u8bcd\u624d\u5b58\u5165\u3002\n\n\u63a5\u4e0b\u6765\u8981\u8bb2\u6307\u9488\u3002\u6307\u9488\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662fl\uff0c\u6307\u5411\u5f53\u524d\u5185\u5b58\u4e2d\u7684\u5355\u8bcd\u4e2d\u6700\u5148\u4e00\u4e2a\u5b58\u5165\u7684\uff0c\u5982b[l]\u662f\u5f53\u524d\u5185\u5b58\u4e2d\u7b2c\u4e00\u4e2a\u5b58\u5165\u7684\u3002\u53e6\u4e00\u4e2a\u662fr\uff0c\u6307\u5411\u5f53\u524d\u5185\u5b58\u4e2d\u7684\u5355\u8bcd\u4e2d\u6700\u540e\u4e00\u4e2a\u5b58\u5165\u7684\uff0c\u5982b[r]\u662f\u5f53\u524d\u5185\u5b58\u4e2d\u6700\u540e\u4e00\u4e2a\u5b58\u5165\u7684\u3002\u6240\u4ee5\uff0c\u6570\u7ec4b\u7684\u7b2cl\u4f4d\u5230\u7b2cr\u4f4d\u5b58\u50a8\u7684\u5c31\u662f\u5f53\u524d\u5185\u5b58\u4e2d\u7684\u5355\u8bcd\u3002\n\n\u9047\u5230\u65b0\u5355\u8bcd\u65f6\uff08\u5373a[x]==0\uff09\uff0c\u60c5\u51b5\u6709\u4e24\u79cd\uff1a\n\n1.\u5185\u5b58\u6ca1\u88ab\u7528\u5b8c(\u5373r<=m)\u3002\u6b64\u65f6\u6307\u9488r\u5411\u53f3\u79fb\u4e00\u4f4d\uff0c\u5728b[r]\u4e2d\u5b58\u5165\u65b0\u5355\u8bcd\uff0c\u5e76\u5728\u6570\u7ec4a\u4e2d\u628a\u5355\u8bcdx\u7684\u6807\u8bb0\u6539\u4e3a1\uff1b\n\n2.\u5185\u5b58\u5df2\u6ee1\uff08\u5373r>m\uff09\u3002\u6b64\u65f6\u5148\u5220\u53bb\u5f53\u524d\u5185\u5b58\u4e2d\u6700\u5148\u5b58\u5165\u7684\u5355\u8bcd\uff08b[l]\uff09\u3002\u5220\u9664\u64cd\u4f5c\u4e0d\u7528\u592a\u590d\u6742\uff0c\u53ea\u9700\u8981\u5148\u628a\u6307\u9488l\u5411\u53f3\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u518d\u4fee\u6539a\u6570\u7ec4\u7684\u7b2cb[l]\u4f4d\u7684\u6807\u8bb0\u5c31\u53ef\u4ee5\u4e86\uff0c\u53ef\u8054\u7cfb\u4e0a\u6587\u52a0\u6df1\u7406\u89e3\u3002\u4e0d\u8981\u5fd8\u4e86\u6700\u540e\u5728b[r]\u4e2d\u5b58\u5165\u65b0\u5355\u8bcdx\u3002\n\n\u8fd9\u9898\u5927\u6982\u5c31\u662f\u8fd9\u6837\u505a\u4e86\uff0c\u5982\u679c\u4f60\u611f\u89c9\u53ef\u4ee5\u81ea\u5df1AC\u6389\uff0c\u5c31\u5148\u4e0d\u8981\u770b\u4ee5\u4e0b\u7a0b\u5e8f\uff0c\u81ea\u5df1\u8bd5\u7740\u6253\u6253\u7a0b\u5e8f\u3002\u5982\u679cWA\u4e86\u5c31\u518d\u8ba4\u771f\u770b\u770b\u4e0a\u6587\uff0c\u5982\u679cAC\u4e86\u5c31\u628a\u4f60\u7684\u7a0b\u5e8f\u548c\u4ee5\u4e0b\u7a0b\u5e8f\u5bf9\u6bd4\u5bf9\u6bd4\uff0c\u770b\u770b\u6709\u4ec0\u4e48\u53ef\u4ee5\u6539\u8fdb\u7684\u5730\u65b9\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n    \n    \n```cpp\n    #include <iostream>\n    #include <stdio.h>\n    #include <algorithm>\n    using namespace std;\n    int n,m,x,ans,l,r,a[1005],b[1005];\n    int main()\n    {\n        cin>>m>>n;\n        l=0;r=0;//\u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488\n        for (int i=1;i<=n;i++)\n         {\n             scanf(\"%d\",&x);//\u8fb9\u8bfb\u5165\u8fb9\u505a\n             if (a[x]==0) \n             {\n                 ans++;\n                r++;b[r]=x;a[x]=1;//\u56e0\u4e3a\u6bcf\u6b21\u9047\u5230\u65b0\u5355\u8bcd\u90fd\u8981\u505a\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u4e0d\u5982\u642c\u5230\u5224\u65ad\u8bed\u53e5\u5916\u505a\uff0c\u8fd9\u6837\u7a0b\u5e8f\u66f4\u7b80\u6d01\n                if (r>m) {l++;a[b[l]]=0;}\n             }\n         }\n        cout<<ans;\n        return 0;//\u5343\u4e07\u4e0d\u80fd\u5fd8\u8bb0\u6253\u8fd9\u53e5\uff0c\u4e0d\u7136\u5728\u6bd4\u8d5b\u4e2d\u4f1a\u51fa\u9519\n}\n```",
        "postTime": 1513949115,
        "uid": 48394,
        "name": "Apun",
        "ccfLevel": 0,
        "title": "P1540\u673a\u5668\u7ffb\u8bd1"
    },
    {
        "content": "\u6b64\u9898\u73b0\u6709\u7684\u6a21\u62df\u505a\u6cd5\u597d\u9ebb\u70e6\u554a\u3002\u6211\u6765\u8865\u5145\u4e00\u4e2a STL \u505a\u6cd5\u3002\n\n**\u4e3b\u8981\u601d\u8def\u662f**\uff1a\n+ \u4f7f\u7528\u4e00\u4e2a vector \u6765\u8868\u793a\u5185\u5b58\u3002\n+ \u4f9d\u6b21\u8bfb\u5982\u6570\u636e\uff0c\u5224\u65ad\u662f\u5426\u5728\u5185\u5b58\u4e2d\uff08find\uff09\u3002\u5982\u679c\u4e0d\u5728\uff0c\u5c31\u9700\u8981\u67e5\u8bcd\u5178\uff0c\u7136\u540e\u52a0\u5165\u5185\u5b58\u3001\u5c06\u7b54\u6848 + 1\u3002\n+ \u5982\u679c\u5185\u5b58\u6ee1\u4e86\uff0c\u5c31\u628a\u6700\u5148\u8fdb\u5165\u5185\u5b58\u7684\u5355\u8bcd\u5220\u6389\uff08erase\uff09\n\n\u81f3\u6b64\uff0c\u601d\u8def\u5206\u6790\u5b8c\u6bd5\uff0c\u8d34\u4e0a\u4e0d\u5230 $20$ \u884c\u7684 AC \u4ee3\u7801\u3002\n```cpp\n#include <vector>\n#include <iostream> \n#include <algorithm>\n\nint main() {\n\tint m, n, t, ans = 0;\n\tstd::cin >> m >> n;\n\tstd::vector<int> v; // \u7528\u6765\u8868\u793a\u5185\u5b58\n\twhile (std::cin >> t) {\n\t\tif (std::find(v.begin(), v.end(), t) == v.end()) { // \u5982\u679c\u4e0d\u5728\u5185\u5b58\u4e2d\n\t\t\tv.push_back(t); // \u52a0\u5165\u5185\u5b58\n\t\t\t++ans;\n\t\t}\n\t\tif (v.size() > m) // \u5185\u5b58\u6ee1\u4e86\n\t\t\tv.erase(v.begin()); // \u628a\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5220\u6389\n\t}\n\tstd::cout << ans << std::endl;\n}\n```",
        "postTime": 1519818795,
        "uid": 53062,
        "name": "Anguei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\u7684\u6a21\u62df\u3002\n\n\u770b\u5230\u201c\u6e05\u7a7a\u6700\u65e9\u8fdb\u5165\u5185\u5b58\u7684\u90a3\u4e2a\u5355\u8bcd\u201d\u8fd9\u4e2a\u8bed\u53e5\uff0c\u6211\u5c31\u60f3\u5230\u4e86\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\u3002\uff08\u4e3a\u4ec0\u4e48\u6211\u6ca1\u7528\u624b\u52a8\u961f\u5217\uff1f\u56e0\u4e3a~~\u6211\u61d2~~\uff09\n\n\u4e8e\u662f\u4e00\u5207\u5c31\u53d8\u5f97\u5f88\u5bb9\u6613\u4e86\u3002\n\n\u6211\u5f00\u4e86\u4e00\u4e2a\u961f\u5217 q \u6a21\u62df\u5185\u5b58\u60c5\u51b5\uff0c\u6570\u7ec4 inq \u6765\u5224\u65ad\u6bcf\u4e2a\u5355\u8bcd\u662f\u5426\u5728\u5185\u5b58\u4e2d\uff0c\u6bcf\u6b21\u9700\u8981\u53bb\u5916\u5b58\u67e5\u627e\u5c31ans++\u3002\u5177\u4f53\u7ec6\u8282\u89c1\u6ce8\u91ca\u3002\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<queue>\n\nusing namespace std;\n\nqueue<int> q;//\u961f\u5217\u6a21\u62df\u5185\u5b58\u60c5\u51b5\nint m,n,ans;\nbool inq[1010];//\u5224\u65ad\u5355\u8bcd\u662f\u5426\u5728\u5185\u5b58\u4e2d\n\nint main()\n{\n\tcin>>m>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x;\n\t\tcin>>x;\n\t\tif(inq[x])continue;//\u80fd\u591f\u5728\u5185\u5b58\u4e2d\u67e5\u627e\u5c31\u8df3\u8fc7\n\t\telse\n\t\t{\n        \t//\u5982\u679c\u5185\u5b58\u6ee1\u4e86\uff0c\u6700\u65e9\u8fdb\u5165\u5185\u5b58\u7684\u90a3\u4e2a\u5355\u8bcd\u51fa\u5217\n\t\t\tif(q.size()>=m)\n\t\t\t{\n\t\t\t\tinq[q.front()]=false;\n\t\t\t\tq.pop();\n\t\t\t}\n            //\u628a\u5916\u5b58\u7684\u7ed3\u679c\u52a0\u5165\u5185\u5b58\u4ee5\u4fbf\u4e0b\u6b21\u67e5\u627e\n\t\t\tq.push(x);\n\t\t\tinq[x]=true;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1537697063,
        "uid": 114279,
        "name": "\u71d5\u6708\u9f50\u6b4c\u706c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u672c\u4eba\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u8fd0\u7528c++\u8bed\u8a00\uff08~~\u597d\u50cf\u4e5f\u53ea\u4f1ac++~~\uff09\n\n\u5148\u6765\u4e0b\u9898\u76ee\n\n------------\n\n\u8fd9\u4e2a\u7ffb\u8bd1\u8f6f\u4ef6\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u5b83\u53ea\u662f\u4ece\u5934\u5230\u5c3e\uff0c\u4f9d\u6b21\u5c06\u6bcf\u4e2a\u82f1\u6587\u5355\u8bcd\u7528\u5bf9\u5e94\u7684\u4e2d\u6587\u542b\u4e49\u6765\u66ff\u6362\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u82f1\u6587\u5355\u8bcd\uff0c\u8f6f\u4ef6\u4f1a\u5148\u5728\u5185\u5b58\u4e2d\u67e5\u627e\u8fd9\u4e2a\u5355\u8bcd\u7684\u4e2d\u6587\u542b\u4e49\uff0c\u5982\u679c\u5185\u5b58\u4e2d\u6709\uff0c\u8f6f\u4ef6\u5c31\u4f1a\u7528\u5b83\u8fdb\u884c\u7ffb\u8bd1\uff1b\u5982\u679c\u5185\u5b58\u4e2d\u6ca1\u6709\uff0c\u8f6f\u4ef6\u5c31\u4f1a\u5728\u5916\u5b58\u4e2d\u7684\u8bcd\u5178\u5185\u67e5\u627e\uff0c\u67e5\u51fa\u5355\u8bcd\u7684\u4e2d\u6587\u542b\u4e49\u7136\u540e\u7ffb\u8bd1\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5355\u8bcd\u548c\u8bd1\u4e49\u653e\u5165\u5185\u5b58\uff0c\u4ee5\u5907\u540e\u7eed\u7684\u67e5\u627e\u548c\u7ffb\u8bd1\u3002\n\n\u5047\u8bbe\u5185\u5b58\u4e2d\u6709 M \u4e2a\u5355\u5143\uff0c\u6bcf\u5355\u5143\u80fd\u5b58\u653e\u4e00\u4e2a\u5355\u8bcd\u548c\u8bd1\u4e49\u3002\u6bcf\u5f53\u8f6f\u4ef6\u5c06\u4e00\u4e2a\u65b0\u5355\u8bcd\u5b58\u5165\u5185\u5b58\u524d\uff0c\u5982\u679c\u5f53\u524d\u5185\u5b58\u4e2d\u5df2\u5b58\u5165\u7684\u5355\u8bcd\u6570\u4e0d\u8d85\u8fc7 M\u22121 \uff0c\u8f6f\u4ef6\u4f1a\u5c06\u65b0\u5355\u8bcd\u5b58\u5165\u4e00\u4e2a\u672a\u4f7f\u7528\u7684\u5185\u5b58\u5355\u5143\uff1b\u82e5\u5185\u5b58\u4e2d\u5df2\u5b58\u5165 M \u4e2a\u5355\u8bcd\uff0c\u8f6f\u4ef6\u4f1a\u6e05\u7a7a\u6700\u65e9\u8fdb\u5165\u5185\u5b58\u7684\u90a3\u4e2a\u5355\u8bcd\uff0c\u817e\u51fa\u5355\u5143\u6765\uff0c\u5b58\u653e\u65b0\u5355\u8bcd\u3002\n\n\u5047\u8bbe\u4e00\u7bc7\u82f1\u8bed\u6587\u7ae0\u7684\u957f\u5ea6\u4e3a N \u4e2a\u5355\u8bcd\u3002\u7ed9\u5b9a\u8fd9\u7bc7\u5f85\u8bd1\u6587\u7ae0\uff0c\u7ffb\u8bd1\u8f6f\u4ef6\u9700\u8981\u53bb\u5916\u5b58\u67e5\u627e\u591a\u5c11\u6b21\u8bcd\u5178\uff1f\u5047\u8bbe\u5728\u7ffb\u8bd1\u5f00\u59cb\u524d\uff0c\u5185\u5b58\u4e2d\u6ca1\u6709\u4efb\u4f55\u5355\u8bcd\u3002\n\n------------\n\n\u672c\u9898\u5e76\u4e0d\u96be\uff0c~~\u662f2010\u5e74\u63d0\u9ad8\u7ec4\u91cc\u7684\u6c34\u9898\uff0c\u6c34\u6c34\u8fd8\u662f\u53ef\u4ee5\u8fc7\u7684~~\n\n\u6211\u505a\u8fd9\u9898\u7684\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u505a\u51fa\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u653e\u6587\u7ae0\uff0c\u4e00\u4e2a\u653e\u5185\u5b58\u5355\u5143\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5faa\u73af\u8f93\u5165\uff0c\u53ca\u5224\u65ad\uff0c\u5e76\u8fd0\u7528\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5bfb\u627e\u5355\u8bcd\u7684\u51fd\u6570\n\n _\u8fd8\u6709\uff0c\u6d4b\u8bd5\u70b9\u4e2d\u6709\u542b0\u7684\u6837\u4f8b\uff0c\u8c28\u9632\u5165\u5751_  \n\n\u9644\u4e0a\u6211\u4ee3\u7801\n\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nint a[10000],b[1000],m,n,s=0,j=0;\nint xz(int ddd){\n\tfor(int i=1;i<=m;i++){\n\t\tif(b[i]==ddd)\n\t\treturn 0;\n\t}\n\treturn 1;\n}\nint main()\n{\n\tcin>>m>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t\tif(a[i]==0)\n\t\ta[i]=-1;\n\t\tif(xz(a[i])==1){\n\t\t\ts++;\n\t\t\tif(j==m)\n\t\t\tj=0;\n\t\t\tj++;\n\t\t\tb[j]=a[i];\n\t\t}\n\t}\n\tcout<<s;\n\treturn 0;\n}\n```",
        "postTime": 1530515715,
        "uid": 98527,
        "name": "juju527",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "# \u4e00\u4e2a\u7b80\u5355\u7684\u961f\u5217\u64cd\u4f5c.\n### \u4e00\u3001\u961f\u5217\u662f\u4ec0\u4e48\n- \u961f\u5217\u662f\u4e00\u79cd\u53ef\u4ee5\u5b9e\u73b0\u201c\u5148\u8fdb\u5148\u51fa\u201d\u7684\u5b58\u50a8\u7ed3\u6784\u3002\n\n\u961f\u5217\u901a\u5e38\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a\n\n\u4e00\u3001\u987a\u5e8f\u961f\u5217\uff0c\u91c7\u7528\u987a\u5e8f\u5b58\u50a8\uff0c\u5f53\u957f\u5ea6\u786e\u5b9a\u65f6\u4f7f\u7528\u3002\n\n\u987a\u5e8f\u961f\u5217\u53c8\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u3000\u3000\u2460\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u961f\u5217\u7684\u79f0\u4e3a\u9759\u6001\u987a\u5e8f\u961f\u5217\u3002\n  \n\u3000\u3000\u2461\u4f7f\u7528\u52a8\u6001\u5206\u914d\u7684\u6307\u9488\u7684\u79f0\u4e3a\u52a8\u6001\u987a\u5e8f\u961f\u5217\u3002\n  \n\u4e8c\u3001\u94fe\u5f0f\u961f\u5217\uff0c\u91c7\u7528\u94fe\u5f0f\u5b58\u50a8\uff0c\u957f\u5ea6\u4e0d\u786e\u5b9a\u65f6\u4f7f\u7528\uff08\u7531\u94fe\u8868\u5b9e\u73b0\uff09\u3002\n\n\u7531\u4e8e\u94fe\u5f0f\u961f\u5217\u8ddf\u94fe\u8868\u5dee\u4e0d\u591a\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u53ea\u9488\u5bf9\u5faa\u73af(\u73af\u5f62)\u961f\u5217\u6765\u8bf4\u660e\u5e76\u5b9e\u8df5\u3002\n\n\u3000\u3000\u2460front,front\u6307\u5411\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002(front==head)\n  \n\u3000\u3000\u2461rear,rear\u6307\u5411\u961f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u6709\u6548\u5143\u7d20\u7684\u4e0b\u4e00\u5143\u7d20\u3002(rear==tail)\n\n\u961f\u5217\u7684\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c\uff1a\u51fa\u961f\u548c\u5165\u961f\u3002\n\n\n------------\n### \u4e8c\u3001\u961f\u5217\u7684\u7ed3\u6784\n![](http://dl.iteye.com/upload/picture/pic/110669/a63ecb7e-4b25-3851-b6ef-20b3b0655ffd.gif)\n\n\n### \u4e09\u3001\u961f\u5217\u7684\u64cd\u4f5c\n\u5165\u961f\uff08\u5c3e\u90e8\u5165\u961f\uff09 \n\n\u3000\u3000\u2460\u5c06\u503c\u5b58\u5165rear\u6240\u4ee3\u8868\u7684\u4f4d\u7f6e\u3002\n  \n\u3000\u3000\u2461rear = (rear+1)%\u6570\u7ec4\u7684\u957f\u5ea6\u3002\n  \n\u51fa\u961f\uff08\u5934\u90e8\u51fa\u961f\uff09 \n\n\u3000\u3000front = (front+1)%\u6570\u7ec4\u7684\u957f\u5ea6\u3002\n\u961f\u5217\u662f\u5426\u4e3a\u7a7a   \n\n\u3000\u3000front\u548crear\u7684\u503c\u76f8\u7b49\uff0c\u5219\u8be5\u961f\u5217\u5c31\u4e00\u5b9a\u4e3a\u7a7a\u3002\n  \n\u961f\u5217\u662f\u5426\u5df2\u6ee1\n\n\n\u5728\u5faa\u73af\u961f\u5217\u4e2d,\u201c\u961f\u6ee1\u201d\u548c\u201c\u961f\u7a7a\u201d\u7684\u6761\u4ef6\u6709\u53ef\u80fd\u662f\u76f8\u540c\u7684\uff0c\u90fd\u662ffront ==rear\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u65e0\u6cd5\u533a\u522b\u662f\u201c\u961f\u6ee1\u201d\u8fd8\u662f\u201c\u961f\u7a7a\u201d\u3002\n\n\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u67093\u79cd\u53ef\u80fd\u7684\u5904\u7406\u65b9\u6cd5\uff1a \u3010\u8fd9\u91cc\u91c7\u7528\u4e86\u7b2c3\u79cd\u5904\u7406\u65b9\u6cd5\u3011\n\n\uff081\uff09\u53e6\u8bbe\u4e00\u4e2a\u6807\u5fd7\u4ee5\u533a\u522b\u662f\u201c\u961f\u6ee1\u201d\u8fd8\u662f\u201c\u961f\u7a7a\u201d\u3002\uff08\u5373\u5165\u961f/\u51fa\u961f\u524d\u68c0\u67e5\u662f\u5426\u201c\u961f\u6ee1\u201d/\u201c\u961f\u7a7a\u201d\uff09\n\n\uff082\uff09\u8bbe\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u6b64\u65f6\u751a\u81f3\u8fd8\u53ef\u4ee5\u7701\u53bb\u4e00\u4e2a\u6307\u9488\u3002\n\n\uff083\uff09\u5c11\u7528\u4e00\u4e2a\u5143\u7d20\u7a7a\u95f4\uff0c\u5373\u7ea6\u5b9a\u961f\u5934\u6307\u9488\u5728\u961f\u5c3e\u6307\u9488\u7684\u4e0b\u4e00\u4f4d\u7f6e\u65f6\u5c31\u4f5c\u4e3a\u201c\u961f\u6ee1\u201d\u7684\u6807\u5fd7\uff0c\u5373\u201c\u961f\u6ee1\u201d\u6761\u4ef6\u4e3a\uff1a(pQueue->rear+1)%MAX_SIZE == pQueue->front\u3002\n\n\n------------\n\n## \u961f\u5217\u7684\u8fd0\u7528\uff1a\n\n\u5b9a\u4e49\u961f\u5217\u5982\u4e0b\uff1aqueue<int> q\uff1b\n  \nq.empty(); //\u5982\u679c\u961f\u5217\u7a7a\u8fd4\u56detrue \uff0c\u5426\u5219\u8fd4\u56defalse\uff1b\n  \nq.size(); //\u8fd4\u56de\u961f\u5217\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\n  \nq.pop();//\u5220\u9664\u961f\u5217\u9996\u5143\u7d20\u4f46\u4e0d\u8fd4\u56de\n  \nq.front();//\u8fd4\u56de\u961f\u5217\u9996\u5143\u7d20\u7684\u503c\u4e14\u4e0d\u5220\u9664\n \nq.back();//\u8fd4\u56de\u961f\u5217\u5c3e\u5143\u7d20\u7684\u503c\u4e14\u4e0d\u5220\u9664\n  \nq.push();//\u5728\u961f\u5c3e\u538b\u5165\u65b0\u5143\u7d20\n\n------------\n\n\u7cbe\u5f69\u7684\u6765\u4e86Code:\n------------\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nint m,n,ans;\nbool v[1005];\nqueue<int> q;\nint main(){\n\tscanf(\"%d%d\",&m,&n);\n\tint x;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&x);\n\t\tif(v[x])continue;\n\t\telse{\n\t\t\tif(q.size()>=m){\n\t\t\t\tv[q.front()]=0;\n\t\t\t\tq.pop();\n\t\t\t}\n\t\t\tq.push(x);\n\t\t\tv[x]=1;\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;//\u529f\u5fb7\u5706\u6ee1\n} \n```\n\n  ",
        "postTime": 1568806839,
        "uid": 82128,
        "name": "Yummy_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "#c++\u89e3\u9898\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u5207\u5165\u6b63\u9898\n\n##\u57fa\u672c\u601d\u8def\uff1a\u66b4\u529b \u6a21\u62df  AC\n\n###\u4ee3\u7801\u5949\u4e0a\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cmath>\n#include<cstdio>\n#include<cstring>//memset\u9700\u8981\uff0c\u4e0d\u7136\u7f16\u8bd1\u62a5\u9519\nusing namespace std;\nint rong[100000];//\u8bb0\u5f55\u8bcd\u5e93\u91cc\u7684\u5355\u8bcd\nint ci[100000];//\u7ed9\u5b9a\u7684\u5355\u8bcd\nint main()\n{\n    memset(rong,-1,100000*4);//\u521d\u59cb\u5316\u6570\u7ec4\uff08\u5168\u90e8\u4e3a-1\uff09\n    int m,n,l,r,sum=0,temp;\n    cin>>m>>n;//m\u8868\u793a\u5bb9\u91cf n\u8868\u793a\u8bcd\u7684\u4e2a\u6570 \n    l=1;r=m;temp=m+1;//l\u6307\u9488\u6307\u5411\u5de6\u8fb9 r\u6307\u9488\u6307\u5411\u53f3\u8fb9 temp\u4e3a\u65b0\u52a0\u5165\u7684\u8bcd\u6c47 \n    for(int k=1;k<=n;k++)\n    cin>>ci[k];//\u8f93\u5165\u5355\u8bcd\n    \n    for(int k=1;k<=n;k++)\n        for(int a=l;a<=r;a++)\n        {\n            if(rong[a]==ci[k])//\u6a21\u62df\u5224\u65ad+\u66b4\u529b\u641c\u7d22\n            break;\n            if(a==r&&rong[r]!=ci[k])//\u5224\u65ad\u5230\u6700\u540e\u90fd\u6ca1\u6709\u5339\u914d\u7684\uff0c\u90a3\u4e48sum++\uff0c\u5c06\u65b0\u7684\u4f20\u5165rong\uff1b\n            {\n                sum++;\n                rong[temp]=ci[k];\n                temp++;\n                l++;\n                r++;\n                //\u4e24\u4e2a\u90fd\u5411\u53f3\u504f\u79fb\u4e00\u4e2a\uff0c\u8fbe\u5230\u4e86\u8bb0\u5f55\u4e00\u4e2a\u65b0\u7684\uff0c\u820d\u53bb\u6700\u524d\u9762\u7684\n            }\n        }\n        cout<<sum;//\u8f93\u51fa\u6700\u540e\u7b54\u6848\n        return 0;\n}\n```\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a**\u5c0f\u9677\u9631**\uff0c\u6d1b\u8c37\u7684\u6570\u636e\u6d4b\u8bd5\u5355\u8bcd\u53ef\u80fd\u4e3a0\uff08\u4e0d\u662f\u6d4b\u8bd5\u5355\u8bcd\u6570\u4e3a\u96f6\uff0c\u800c\u662f**0\u53ef\u4ee5\u4ee3\u8868\u4e00\u4e2a\u5355\u8bcd**\uff09\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u5f53\u5bb9\u91cf\u8db3\u591f\u5927\u65f6\uff0c\u53ef\u80fd\u8fd8\u6ca1\u6709\u8fbe\u5230m-1\u5c31\u67090\u51fa\u73b0\uff0c\u90a3\u4e48\u7535\u8111\u5c31\u4ee5\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u7684\u7a7a\u4f4d\u7f6e\uff08\u6570\u7ec4\u6ca1\u5b9a\u4e49\uff0c\u5355\u5143\u683c\u662f0\uff09\u662f\u5355\u8bcd\u9700\u8981\u627e\u7684\uff0c\u90a3\u4e48sum\u5c31\u4e0d\u4f1a++\uff1b\n\n\uff08\u4e0d\u7136\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u70b9\u8fc7\u4e0d\u5230 \u5c31\u53ea\u670990\u5206\u54e6\uff09\n\n###memset\u8bed\u53e5\uff08\u6709\u540c\u5b66\u53cd\u6620\u4e0d\u6e05\u695amemset\uff09\n\n\u518d\u8865\u5145\u4e00\u4e2a\u5c0f\u5c0f\u7684\u77e5\u8bc6\u70b9\uff08~~\u6709\u4e9b\u540c\u5b66\u53ef\u80fd\u4e0d\u77e5\u9053memset\u7684\u76f8\u5173\u7528\u6cd5\uff0c~~\u5176\u5b9e\u4e0d\u7528memset\uff0c\u7528for\u540c\u6837\u53ef\u4ee5\u529e\u5230\uff09\uff1amemset\uff08\uff0c\uff0c\uff09\u4e00\u5171\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u9700\u8981\u521d\u59cb\u5316\u7684\u6570\u7ec4\uff0c\u7b2c\u4e8c\u4e2a\u662f\u521d\u59cb\u5316\u7684\u503c\uff0c\u7b2c\u4e09\u4e2a\u662f\u521d\u59cb\u5316\u7684\u6570\u91cf\\*\u5355\u4f4d\u5b57\u8282\uff08\u4f8b\u5982 char\u662f1\uff0cint\u662f4\uff0clong long\u662f8\uff09\n",
        "postTime": 1512892635,
        "uid": 45384,
        "name": "ybb756032937",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540"
    },
    {
        "content": "\u4e4b\u524dAC\u8fc7\u4e00\u6b21\uff0c\u4eca\u5929\u53c8\u6765\u770b\u8fd9\u9898\uff0c\u987f\u609f\u51fa\u4e00\u79cd\u7edd\u5999\u7684\u65b9\u6cd5\u3002\n\n\u6838\u5fc3\u70b9\uff1a\u7528\u5f53\u524d\u67e5\u627e\u6b21\u6570 \u5bf9 \u5185\u5b58\u5927\u5c0f \u53d6\u4f59\uff0c\u5c31\u662f\u2026\u2026\uff08\u6b64\u5904\u7701\u7565\u8bb8\u591a\u4e71\u4e03\u516b\u7cdf\u7684\u89e3\u91ca\uff0c\u76f4\u63a5\u89c1\u4ee3\u7801\uff09\n\n---\n\n\uff08\u4e0a\u9762\u662f\u4e00\u6761\u87d2\u86c7\u2014\u2014<\uff09\n\n```python\nm, n = map(int, input().split())\nw = [None] * m\nt = list(map(int, input().split()))\nd = 0\nfor i in range(n):\n    if w.count(t[i]) == 0:\n        w[d%m] = t[i]\n        d += 1\nprint(d)\n```",
        "postTime": 1532430027,
        "uid": 96137,
        "name": "Neoomgg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "##### \u62b1\u6b49\u4e4b\u524d\u7684\u8bf4\u660e\u8fc7\u5c11\uff0c\u91cd\u65b0\u6765\u904d\n\u8fd9\u9898\u96be\u5ea6\u8f83\u5c0f\uff0c20\u884c\u5185\u89e3\u51b3\u662f\u53ef\u4ee5\u7684\u3002\u8bf7\u770b\u7801\n```C\n#include<stdio.h>\nint main(){\n\tint M,N;\n\tscanf(\"%d %d\",&M,&N);\n\tint i,p,q,r=0,W[100],w,n=0;\n\tfor(i=0;i<M;i++)W[i]=-1;\n```\n\u524d\u9762\u662f\u57fa\u672c\u5f55\u5165\uff0c\u4f8b\u5982\u6570\u7ec4\u521d\u59cb\u5316\n\u6838\u5fc3\u90e8\u5206\u5230\u8fbe\uff0c\u8bbe\u7f6e\u7684\u6807\u8bc6\u7b26\u6709\u70b9\u7b80\u5355\uff0c\u5927\u5bb6\u5c31\u4e0d\u8981\u8d23\u602a\u6211\u8fd9\u4e2a\u849f\u84bb\u4e86\u3002\n\u4e3b\u8981\u770b\u6ce8\u91ca\n\u3002\n```C\n\tfor(i=0;i<N;i++){\n\t\tscanf(\"%d\",&w),q=1;\n\t\tfor(p=0;p<M;p++){//\u68c0\u7d22 \n\t\t\tif(w==W[p]){\n\t\t\t\tq--;break;\n\t\t\t}\t\t\n\t\t}\n\t\tif(q==0)continue;//\u5185\u5b58\u4e2d\u5b58\u5728\u5219\u8df3\u8fc7 \n\t\telse{\n\t\t\tW[r]=w;n++;r++;\n\t\t\tif(r==M)r=0;//\u5426\u5219\u8fdb\u884c\u67e5\u627e\u5e76\u5b58\u50a8\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u5de7\u5999\u5730\u5b9e\u73b0\u4e86\u5148\u8fdb\u5148\u51fa\uff1ar\u6765\u786e\u5b9a\u76ee\u524d\u8f6e\u5230\u8c01\u8fdb\u8c01\u51fa\n\t\t}\n\t}\n\tprintf(\"%d\",n);\n\treturn 0;\n}\n```\n### \u53ea\u8981\u7406\u6e05\u601d\u8def\uff0c\u5de7\u5999\u8bbe\u7f6e\u50a8\u5b58\u503c\uff0c\u5c31\u80fd\u8f7b\u677e\u5316\u89e3\u5566\u3002\n\u591a\u8c22\u89c2\u770b\uff0c\n\u7ed3\u675f",
        "postTime": 1571537105,
        "uid": 246367,
        "name": "\u738b\u724c\u7a7a\u88ad",
        "ccfLevel": 0,
        "title": "\u5de7\u5999\u8bbe\u7f6e\u50a8\u5b58\u503c\u7684\u91cd\u8981\u6027"
    },
    {
        "content": "[blog\u98df\u7528\u66f4\u5065\u5eb7](https://www.luogu.org/blog/MAGELDKI/)  \n~~\u8bdd\u8bf4\u8fd9\u4e2a\u7ffb\u8bd1\u673a\u6709\u70b9\u9b3c\u755c~~  \n\n\n------------\n\u8fd9\u9053\u9898~~\u6839\u636e\u7b97\u6cd5\u6807\u7b7e~~\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5c31\u662f\u7528\u961f\u5217\u6a21\u62df\uff0c\u89c4\u5219\u4e3b\u8981\u5c31\u662f\u5185\u5b58\u4e2d\u6709\u5c31\u7528\u539f\u672c\u6709\u7684\uff0c\u6ca1\u6709\u7684\u8bdd\u8981\u4e48\u52a0\u5165\uff0c\u8981\u4e48\u5f39\u51fa\u961f\u9996\u540e\u52a0\u5165  \n\u9996\u5148\u6211\u4eec\u8981\u6709\u4e00\u4e2asum = 0\u6765\u8ba1\u6570\uff0c\u4e00\u4e2aqueue<int> q\u6765\u6a21\u62df\uff08~~\u8fd8\u6709\u4e00\u4e2acz\u6765\u5b58\u7b2c\u4e00\u4e2a~~\uff09  \n\u6211\u4eec\u5148\u6765\u6a21\u62df\u4e00\u4e0b\n\n------------\n\u6211\u4eec\u5c31\u5148\u62ff\u9898\u76ee\u7684\u6837\u4f8b\u6a21\u62df\uff1a\u5185\u5b583\uff0c\u957f\u5ea67  \n![](https://cdn.luogu.com.cn/upload/image_hosting/ebmgsp52.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/xz4e5eu7.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/e0rk1gcx.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/c1y0rlba.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/tjcwsdga.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/mhihhy1w.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/6sf9ddag.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/dohybtpp.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/d1popdxf.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/3byu69br.png)  \n\n\n------------\n\u4e0a\u9762\u5c31\u662f\u6a21\u62df\u8fc7\u7a0b\uff0c\u539f\u8c05\u6211\u5728\u673a\u623f\u7684win7\u4e0a\u753b\u56fe\u753b\u4e0d\u597d  \n\u6240\u4ee5\u4ee3\u7801\u7684\u6838\u5fc3\u5176\u5b9e\u5c31\u662f\u6a21\u62df\u7684\u8fc7\u7a0b\uff1a  \n```cpp\n\tfor (int i = 1; i < n; ++i) {\n\t\tint x;\n\t\tbool flag = 0;\n\t\tscanf(\"%d\", &x);\n\t\tfor (int i = 0; i < q.size(); ++i) {\n\t\t\tif (q.front() == x) flag = 1;\n\t\t\tq.push(q.front());\n\t\t\tq.pop();\n\t\t}\n\t\tif (!flag) {\n\t\t\t++sum;\n\t\t\tif (q.size() == m) {\n\t\t\t\tq.pop();\n\t\t\t\tq.push(x);\n\t\t\t} else q.push(x);\n\t\t}\n\t}\n```\n\u9996\u5148\u8981\u6709\u4e00\u4e2aflag\u8bb0\u5f55\u961f\u5217\u4e2d\u662f\u5426\u6709x\uff0c\u7136\u540e\u8dd1\u4e00\u904d\u961f\u5217\uff0c\u6700\u540e\u5982\u679c\u78b0\u5230\u65b0\u7684\u5355\u8bcd\uff0c\u5c31\u52a0\u5165\u6216\u5f39\u51fa\u52a0\u5165  \n\u6700\u540e\u6309\u7167\u8981\u6c42\u4e0aAC\u4ee3\u7801\uff1a  \n  ```cpp\n#pragma GCC optimize(2)\n#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n\tint sum = 1;                                                           \n\tqueue<int> q;\n\tint m, n;\n\tscanf(\"%d %d\", &m, &n);\n\tint cz;\n\tscanf(\"%d\", &cz);\n\tq.push(cz);\n\tfor (int i = 1; i < n; ++i) {\n\t\tint x;\n\t\tbool flag = 0;\n\t\tscanf(\"%d\", &x);\n\t\tfor (int i = 0; i < q.size(); ++i) {\n\t\t\tif (q.front() == x) flag = 1;\n\t\t\tq.push(q.front());\n\t\t\tq.pop();\n\t\t}\n\t\tif (!flag) {\n\t\t\t++sum;\n\t\t\tif (q.size() == m) {\n\t\t\t\tq.pop();\n\t\t\t\tq.push(x);\n\t\t\t} else q.push(x);\n\t\t}\n\t}\n\tprintf(\"%d\", sum);\n\treturn 0;\n}\n```\n#### \u5173\u7231\u751f\u547d\uff0c\u62d2\u7edd\u6284\u88ad",
        "postTime": 1567913961,
        "uid": 199266,
        "name": "Liberty10",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u4e0a\u4e00\u6bb5\u53ea\u670927\u884c\u7684\u4ee3\u7801\uff0c\u7528\u4e24\u4e2a\u6570\u7ec4\u50a8\u5b58\u6570\u636e\uff0c\u7b80\u5355\u7684if-else\u8bed\u53e5\u5b9e\u73b0\uff0c\u76ee\u6d4b\u6bd4\u9898\u89e3\u9875\u9762\u5de8\u4f6c\u4eec\u7684\u601d\u8def\u66f4\u76f4\u63a5\u3002\n```c\n#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\nint main() {\n\tint m,n,i,count=0,sum=0,temp;\n\tscanf(\"%d%d\",&m,&n);\n\tint mem[m],art[n];\n\tint num[1000]={0};\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",&art[i]);\n\t\tif(num[art[i]]==1){\n\t\t}\n\t\telse if(count<m){\n\t\t\tmem[count++]=art[i];\n\t\t\tnum[art[i]]=1;\n\t\t}\n\t\telse{\n\t\t\ttemp=mem[count%m];\n\t\t\tmem[count%m]=art[i];\n\t\t\tcount++;\n\t\t\tnum[temp]=0;\n\t\t\tnum[art[i]]=1;\n\t\t}\n\t}\n\tprintf(\"%d\",count);\n\treturn 0;\n}\n```\n",
        "postTime": 1553161948,
        "uid": 178182,
        "name": "HeySearra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "### \u76ee\u6d4b\u6211\u7684\u8fd9\u7bc7\u9898\u89e3\u601d\u8def\u96be\u5ea6\u662f\u6700\u5c0f\u7684\n\n\u5148\u5ba1\u9898\uff08\u770b\u770b\u6709\u4ec0\u4e48\u64cd\u4f5c\uff09\uff0c\u53d1\u73b0\u9700\u89813\u79cd\u64cd\u4f5c\uff1a\n\n1\u3001\u67e5\u627e\u5185\u5b58\uff1b\n\n2\u3001\u67e5\u8bcd\uff1b\n\n3\u3001\u817e\u51fa\u5355\u5143\n\n\n\n------------\n\n# \u4e00\u3001\u67e5\u627e\u5185\u5b58\n\n### \u6b64\u90e8\u5206\u96be\u5ea6\u4e0d\u9ad8\uff0c\u4e3b\u8981\u601d\u8def\uff1a\u5faa\u73af\u67e5\u627e\uff08O(n))\n\n#### \u53d8\u91cf/\u51fd\u6570\uff1a\n\nnc:\u5185\u5b58\n\nfw:\u67e5\u8bcd\u51fd\u6570\n\nuz:\u5185\u5b58\u5bb9\u91cf\n\n### \u4ee3\u7801\uff1a\n\n```cpp\nbool fw(int n){\n\tfor(int i=1;i<=uz;i++){//uz\u4e3a\u5185\u5b58\u5bb9\u91cf\n\t\tif(n == nc[i]){//nc\u4e3a\u5185\u5b58\n\t\t\treturn true;//\u82e5\u5728\u5185\u5b58\u4e2d\u67e5\u5230\uff0c\u8fd4\u56detrue\n\t\t}\n\t}\n\treturn false;//\u5426\u5219\u8fd4\u56defalse\n}\n```\n\n\n\n------------\n\n# \u4e8c\u3001\u67e5\u8bcd\n\n### \u4e3b\u8981\u601d\u8def\uff1a\n\n1\u3001\u5148\u67e5\u5185\u5b58\uff08\u6709\u5219\u8df3\u8fc7\uff09\n\n2\u3001\u6ca1\u6709\u5c31\u5c06\u6b64\u8bcd\u585e\u5165\u5185\u5b58\uff08\u4e0d\u8003\u8651\u7a7a\u95f4\u5df2\u6ee1\u60c5\u51b5\uff09\n\n#### \u53d8\u91cf/\u51fd\u6570\uff1a\n\nudn:\u5df2\u7528\u5185\u5b58\n\nnc:\u5185\u5b58\n\nfw:\u4e0a\u90e8\u5206\u5199\u7684\u67e5\u8bcd\u51fd\u6570\n\nuz:\u5185\u5b58\u5bb9\u91cf\n\nwd:\u5355\u8bcd\n\n### \u4ee3\u7801\uff1a\n\n```cpp\nif(udn!=uz&&!fw(wd[i])){//\u82e5\u5185\u5b58\u672a\u6ee1\u5e76\u5185\u5b58\u4e2d\u6ca1\u6709\u6b64\u5355\u8bcd\uff0c\u5c06\u5355\u8bcd\u585e\u5165\u5185\u5b58\n\tnc[udn]=wd[i];//\u5c06\u5355\u8bcd\u585e\u5165\u5185\u5b58\n\tudn++;//\u66f4\u65b0\u5df2\u7528\u5185\u5b58\n}\n```\n\n\n------------\n\n# \u4e09\u3001\u817e\u51fa\u5185\u5b58\n\n### \u4e3b\u8981\u601d\u8def\uff1a\n\n1\u3001\u5c06\u5185\u5b58\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u5411\u524d\u8986\u76d6(O(n))\uff0c\u6240\u4ee5\u6700\u524d\u9762\u7684\u8bcd\u4f1a\u88ab\u8986\u76d6\u6389\n\n2\u3001\u5c06\u65b0\u5355\u8bcd\u585e\u5165\u5185\u5b58\n\n#### \u53d8\u91cf/\u51fd\u6570\uff1a\n\nudn:\u5df2\u7528\u5185\u5b58\n\nnc:\u5185\u5b58\n\nfw:\u4e0a\u90e8\u5206\u5199\u7684\u67e5\u8bcd\u51fd\u6570\n\nuz:\u5185\u5b58\u5bb9\u91cf\n\nwd:\u5355\u8bcd\n\n### \u4ee3\u7801\uff1a\n\n```cpp\nif(udn==uz&&!fw(wd[i])){//\u5982\u679c\u5185\u5b58\u5df2\u6ee1\u4e14\u5185\u5b58\u4e2d\u6ca1\u6709\u6b64\u5355\u8bcd\uff0c\u817e\u51fa\u5185\u5b58\n\tfor(int j=1;j<uz;j++){\n\t\tnc[j]=nc[j+1];//\u5c06\u5185\u5b58\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u5411\u524d\u8986\u76d6\u4e00\u683c\n\t}\n\tnc[uz]=wd[i];//\u6700\u540e\u5c06\u65b0\u8bcd\u585e\u5165\u5185\u5b58\n}\n```\n\n\n\n------------\n\n# \u56db\uff1a\u8865\u5168\u7a0b\u5e8f\n\n### \u4e3b\u8981\u601d\u8def\uff1a\n\n1\u3001\u8bfb\u5165\u5355\u8bcd\n\n2\u3001\u817e\u51fa\u5185\u5b58\uff08\u7279\u5224\uff09 -> \u67e5\u5b57\u5178 -> ans++;\n\n3\u3001\u585e\u5165\u65b0\u8bcd\uff08\u7279\u5224\uff09 -> \u67e5\u5b57\u5178 -> ans++;\n\n#### \u53d8\u91cf/\u51fd\u6570\uff1a\n\nudn:\u5df2\u7528\u5185\u5b58\n\nnc:\u5185\u5b58\n\nfw:\u4e0a\u90e8\u5206\u5199\u7684\u67e5\u8bcd\u51fd\u6570\n\nuz:\u5185\u5b58\u5bb9\u91cf\n\nwd:\u5355\u8bcd\n\nans:\u67e5\u5b57\u5178\u6b21\u6570\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\nusing namespace std;\nint uz;\nint nc[100002]={0};//\u5185\u5b58\u6e05\u7a7a\nbool fw(int n){//\u67e5\u627e\u5185\u5b58\u90e8\u5206\n\tfor(int i=1;i<=uz;i++){\n\t\tif(n == nc[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tcin >> uz;\n\tint n;\n\tcin >> n;\n\tint ans=0;\n\tint wd[n+1];\n\tint udn=1;\n\tfor(int i=1;i<=n;i++){\n\t\tcin >> wd[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(udn==uz&&!fw(wd[i])){//\u817e\u51fa\u5185\u5b58\u90e8\u5206\n\t\t\tfor(int j=1;j<uz;j++){\n\t\t\t\tnc[j]=nc[j+1];\n\t\t\t}\n\t\t\tnc[uz]=wd[i];\n\t\t\tans++;\n\t\t}\n\t\telse if(udn!=uz&&!fw(wd[i])){//\u67e5\u8bcd\u90e8\u5206\n\t\t\tnc[udn]=wd[i];\n\t\t\tudn++;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n## \u5174\u9ad8\u91c7\u70c8\u7684\u53bb\u4ea4\u4e86\u4ee3\u7801\uff0c\u7ed3\u679c\u2026\u2026\n\n# 90!?\n\n### \u522b\u7740\u6025\uff0c\u6211\u4eec\u518d\u8bfb\u4e00\u904d\u9898\n\n### \u9898\u76ee\u4e2d\u8bf4\u5355\u8bcd\u662f\u975e\u8d1f\u6574\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5355\u8bcd\u4e5f\u53ef\u4ee5\u7b49\u4e8e0\n\n## \u4f46\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u662f\u5c06\u6570\u636e\u6e05\u4e86\u96f6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e00\u4e2a\u5355\u8bcd\u662f\u96f6\u65f6\uff0c\u5c31\u4f1a\u663e\u793a\u5185\u5b58\u4e2d\u5df2\u6709\uff0c\u4f46\u6211\u4eec\u5374\u6839\u672c\u6ca1\u67e5\u8fc7\uff01\n\n### \u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5185\u5b58\u8d4b\u4e00\u4e2a\u8d1f\u6570\u7684\u521d\u59cb\u503c\uff08\u56e0\u4e3a\u5355\u8bcd\u7684\u6570\u636e\u8303\u56f4\u9650\u5236\u4e86\u5355\u8bcd\u4e0d\u80fd\u4e3a\u8d1f\u6570\uff09\n\n# \u4e0aAC\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\nint uz;\nint nc[100002];\nbool fw(int n){\n\tfor(int i=1;i<=uz;i++){\n\t\tif(n == nc[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tfor(int i=1;i<=100002;i++){\n\t\tnc[i]=-1;//\u7ed9\u5185\u5b58\u8d4b\u4e00\u4e2a\u8d1f\u6570\u7684\u521d\u59cb\u503c\n\t}\n\tcin >> uz;\n\tint n;\n\tcin >> n;\n\tint ans=0;\n\tint wd[n+1];\n\tint udn=1;\n\tfor(int i=1;i<=n;i++){\n\t\tcin >> wd[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(udn==uz&&!fw(wd[i])){\n\t\t\tfor(int j=1;j<uz;j++){\n\t\t\t\tnc[j]=nc[j+1];\n\t\t\t}\n\t\t\tnc[uz]=wd[i];\n\t\t\tans++;\n\t\t}\n\t\telse if(udn!=uz&&!fw(wd[i])){\n\t\t\tnc[udn]=wd[i];\n\t\t\tudn++;\n\t\t\tans++;\n\t\t}\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n\n$\\color{#00EEEE}\\texttt{\u6700\u540e\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u5bf9\u5927\u5bb6\u6709\u6240\u5e2e\u52a9\n}$\n\n# The end",
        "postTime": 1573315235,
        "uid": 219547,
        "name": "Kazdale",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u5f88\u6c34\u7684\u9898\uff0c\u4e0d\u9700\u8981\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784 \u4e0d\u9700\u8981\u4efb\u4f55\u4f18\u5316\n\n\u8bbe\u7f6e\u4e00\u4e2a\u6570\u7ec4Queue[]\n\n\u5728\u8bbe\u7f6e\u4e24\u4e2a\u53d8\u91cfleft right\n\n\u8868\u793a\u6b63\u5728\u3010\u4f7f\u7528\u7684\u5185\u5b58\u3011\u4eceQueue[left]\u5f00\u59cb\u5230Queue[right]\u7ed3\u675f\n\n\u5f00\u59cb\u8bfb\u5165\n\n\u8bfb\u5165\u4e00\u4e2a\u5c31\u5224\u65ad\u4e00\u4e0b \u3010\u6b63\u5728\u4f7f\u7528\u7684\u5185\u5b58\u3011\u4e2d\u6709\u6ca1\u6709\u8fd9\u4e2a\u5355\u8bcd\n\n\u6709\u7684\u8bdd\u5c31\u8df3\u8fc7\n\n\u6ca1\u6709\u7684\u8bdd\n\n\u5224\u65ad\u3010\u6b63\u5728\u4f7f\u7528\u7684\u5185\u5b58\u3011\u4e2d\u6709\u6ca1\u6709\u7a7a\u4f4d\uff08\u6b63\u5728\u4f7f\u7528\u7684\u5185\u5b58\u6700\u540e\u4e00\u4f4d\u662f\u5426\u662f\u7a7a\u4f4d\uff09\n\n\u5982\u679c\u6709\u7a7a\u4f4d \u76f4\u63a5\u63d2\u5165\u5185\u5b58\n\n\u8fd9\u91cc\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cfsmtot\u8bb0\u5f55\u5728\u5185\u5b58\u6ca1\u6cbe\u6ee1\u524d\u53ef\u63d2\u5165\u7684\u4f4d\u7f6e\n\n\u5728\u5185\u5b58\u5360\u6ee1\u5f00\u59cb\u632a\u52a8\u540e smtot\u5c31\u6ca1\u7528\u4e86\n\n\u5982\u679c\u6ca1\u6709\u7a7a\u4f4d\n\n\u5c31\u8ba9left+1 right+1\n\n\u8868\u793a\u6b63\u5728\u4f7f\u7528\u7684\u5185\u5b58\u5728Queue\u6570\u7ec4\u4e2d\u5411\u53f3\u632a\u52a8\u4e86\u4e00\u4f4d\uff08\u653e\u5f03\u524d\u9762\u7684\u5355\u8bcd \u52a0\u5165\u540e\u6765\u7684\u5355\u8bcd\uff09\n\n\u5c06\u5355\u8bcd\u63d2\u5165\u65b0\u7a7a\u4f4d\n\n\u5e76\u4e14\u8ba1\u6570\u5668+1\n\n\n\n\u8fd9\u79cd\u6c34\u9898\u6211\u7adf\u7136\u6253\u4e86\u90a3\u4e48\u591a\u5b57...\u5982\u679c\u6211\u7684\u9898\u89e3\u80fd\u5e2e\u5230\u4f60\u8bf7\u4e3a\u6211\u70b9\u8d5e...\n\n\n\n\n\n```cpp\n\n#include <cstdio>\n#include <cstring>\nint Queue[100000];\nint M,N;\nint main(){\n    memset(Queue,-1,sizeof(Queue));\n    scanf(\"%d %d\",&M,&N);\n    int left=1,right=M;\n    int tot=0,smtot=0;\n    for(int i=1;i<=N;i++){\n        int x,flag=0;\n        scanf(\"%d\",&x);\n        for(int l=left;l<=right;l++){\n            if(Queue[l]==x){\n                flag=1;\n            }\n        }\n        if(flag) continue;\n        tot++;\n        if(Queue[right]!=-1){\n            ++left;\n            ++right;\n            Queue[right]=x;\n        }\n        else{\n            ++smtot;\n            Queue[smtot]=x;\n        }\n        \n    }\n    printf(\"%d\",tot);\n    return 0;\n} \n\n```",
        "postTime": 1442497926,
        "uid": 896,
        "name": "SiTer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u53ea\u8981\u6a21\u62df\u4e00\u4e0b\u4e0b\u5c31\u884c\u4e86\u3002\u3002\u3002\n\n\u672c\u9898\u6570\u636e\u975e\u5e38\u5f31\uff0c\u76f4\u63a5\u7528\u6734\u7d20\uff0c\u4e0d\u65ad\u66f4\u65b0\u5185\u5b58\uff0c\u5171m\u6761\u8bed\u53e5\u7ffb\u8bd1\uff0c\u67e5\u627e\u66f4\u65b0\u9700\u8981n\u7684\u65f6\u95f4\uff0c\u7f6a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(MN)\u3002\u4e0b\u9762\u7528\u4e00\u4e2a\u4f18\u5316\uff0c\u5c06\u5185\u5b58\u4e2d\u7684\u8bed\u53e5\u7528\u5faa\u73af\u961f\u5217\uff0c\u6bcf\u6b21\u66f4\u65b0\u5934\u7ed3\u70b9\uff0c\u5e76\u5c06\u5934\u7ed3\u70b9\u53d8\u4e3a\u5c3e\u7ed3\u70b9\uff0c\u7406\u8bba\u4e0a\u5e76\u6ca1\u6709\u4f18\u5316\u65f6\u95f4\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u7701\u53bb\u4e86\u4e00\u822c\u7684\u65f6\u95f4\n\n```delphi\nvar\n  q:array[1..1000] of longint;\n  ans,m,n,ge,k,i,j,x:longint;\n  ff:boolean;\nbegin\n  readln(m,n);\n  ans:=0;\n\n  fillchar(q,sizeof(q),0);\n  ge:=0;{ge\u8868\u793a\u5185\u5b58\u5df2\u7ecf\u7528\u4e86\u7684\u7a7a\u95f4}\n  k:=0;{k\u6307\u9488\u8868\u793a\u5185\u5b58\u6ee1\u4e86\u4e4b\u540e\u5f53\u524d\u6700\u65e9\u5b58\u5165\u7684\u5355\u8bcd\u662f\u54ea\u4e2a\uff0c\u5185\u5b58\u6ee1\u4e4b\u524d\u4e0d\u4f7f\u7528}\n  for i:=1 to n do\n    begin\n    read(x);\n    ff:=true;\n    for j:=1 to ge do{\u6570\u636e\u5f88\u5c0f\uff0c\u5185\u5b58\u6700\u591a\u67091000\u4e2a\u5355\u5143\uff0c\u66b4\u641c}\n      if q[j]=x then\n        begin\n        ff:=false;\n        break;\n        end;\n    if ff then\n      begin\n      inc(ans);\n      if ge<=m then inc(ge);\n      if ge>m then{\u4e00\u65e6\u5185\u5b58\u6ee1\u4e86\u6267\u884ck\u6307\u9488}\n        begin\n        ge:=m;\n        inc(k);\n        if k>m then k:=1;\n        q[k]:=x;\n        end\n        else begin\n             q[ge]:=x;\n             end;\n      end;\n    end;\n  writeln(ans);\nend.\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3cO(nm)\uff1b\n",
        "postTime": 1387107273,
        "uid": 1790,
        "name": "Belongbb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u7ffb\u770b\u4e86\u8bb8\u591a\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u53d1\u73b0\u6ca1\u6709\u7528\u961f\u5217\u505a\u7684\uff0c\u4e8e\u662f\u6211\u6765\u5c0f\u79c0\uff08~~\u849f\u84bb\u5782\u6b7b\u6323\u624e~~\uff09\u4e00\u6ce2\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define IOS ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);//\u52a0\u5febcin\uff0ccout\u5e72\u8d27\n\nint t,ans = 0;\nbool vis[666666];\nqueue <int> v; //\u6807\u51c6\u961f\u5217\nint main(){\n    IOS;\n\tint n,m;;\n\tcin >> m >> n;\n\tfor(int i = 1;i <= n; i++){\n\t\tcin >> t;//\u8fb9\u8f93\u5165\u8fb9\u5904\u7406\u548c\u961f\u5217\u5b58\u50a8\u5dee\u4e0d\u591a\n\t\tif(!vis[t]){//\u5982\u679c\u672a\u5b58\u50a8\u5c31\u4e22\u8fdb\u53bb\n\t\t\tv.push(t);\n\t\t\tans++;\n\t\t\tvis[t] = 1;//\u6807\u8bb0\u4e00\u4e0b\uff0c\u5df2\u7ecf\u88ab\u4e22\u8fdb\u53bb\u4e86\n\t\t}\n\t\n\t\tif(v.size() > m){//\u5bb9\u5668\u5df2\u7ecf\u7206\u4e86\n\t\t\tvis[v.front()] = 0;\t//\u628a\u6700\u524d\u9762\u7684\u6807\u8bb0\u4e00\u4e0b\n\t\t\tv.pop();//\u6254\u6389\n\t\t}\n\t\t\t\n\t}\n\tcout << ans;\n\treturn 0;//perfect\n}\n```\n\u5176\u5b9e\u521a\u521a\u6709\u4e00\u4f4d\u7ba1\u7406\u5458\u5927\u5927\u7528\u4e86vector\uff0c\u4e5f\u53ef\u4ee5~~\u4f46\u662f\u4e0d\u89c9\u5f97\u7528queue\u66f4\u65b9\u4fbf\u4e86\uff0c\u9003~~\n",
        "postTime": 1570103276,
        "uid": 234224,
        "name": "\u9752\u9e1f_Blue_Bird",
        "ccfLevel": 5,
        "title": "\u4e00\u79cd\u961f\u5217\u505a\u6cd5"
    },
    {
        "content": "\u849f\u84bb\u7684\u6211\u53c8\u6765\u53d1\u9898\u89e3\u4e86\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u6a21\u62df\uff0c\u6211\u7528\u5230\u4e86\u961f\u5217\uff0c\u5c31\u662f\u7528\u961f\u5217\u5b58\u50a8\u5b57\u5178\u4e2d\u7684\u5185\u5bb9\uff0c\u8fd9\u6837\u65b9\u4fbf\u66f4\u65b0\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u961f\u5217\u7684\u521d\u59cb\u5316\uff0c\u4e8e\u662f\u6211\u60f3\u51fa\u4e86\u8fd9\u6837\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u653e\u5230\u4e00\u4e2a\u5faa\u73af\u91cc\uff0c\u5f53tail=M\u7684\u65f6\u5019\u5c31\u505c\u6b62\u521d\u59cb\u5316\uff0c\u8fd9\u6837\u961f\u5217\u5c31\u65b9\u4fbf\u66f4\u65b0\u4e86\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint que[5005],ans,m,n,a[2005];\nint head=1,tail=0;\nint main()\n{\n\tcin>>m>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t}\n\tint l=1;\n\twhile(1)\n\t{\n\t\tbool fl=0;\n\t\tfor(int i=head;i<=tail;i++)\n\t\t{\n\t\t\tif(que[i]==a[l]){fl=1;break;}\n\t\t}\n\t\tif(fl!=1)que[++tail]=a[l];\n\t\tif(tail==m)break;\n\t\tl++;\n\t}\n\t\n\t\t\t\n\t\n\tfor(int i=m+1;i<=n;i++)\n\t{\n\t\tbool fl=0;\n\t\tfor(int j=head;j<=tail;j++)\n\t\t{\n\t\t\tif(que[j]==a[i]){fl=1;break;}\n\t\t}\n\t\tif(fl!=1){head++;que[++tail]=a[i];ans++;}\n\t//\tcout<<head<<\" \"<<tail<<endl;\n\t}\n\tcout<<ans+m;\n\treturn 0;\n}\n```\n",
        "postTime": 1565665951,
        "uid": 121615,
        "name": "\u72c2\u4e3fKurumi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "# \u6765\u4e00\u4e2a\u6a21\u62df\u3002($STL$\u5927\u6cd5\u597d)\n\u8bfb\u9898\uff08**\u82e5\u5185\u5b58\u4e2d\u5df2\u5b58\u5165$M$\u4e2a\u5355\u8bcd\uff0c\u8f6f\u4ef6\u4f1a\u6e05\u7a7a\u6700\u65e9\u8fdb\u5165\u5185\u5b58\u7684\u90a3\u4e2a\u5355\u8bcd\uff0c\u817e\u51fa\u5355\u5143\u6765\uff0c\u5b58\u653e\u65b0\u5355\u8bcd\u3002**\uff09\u540e\uff0c\u53d1\u73b0\u6709\u5148\u5165\u5148\u51fa\u8fd9\u79cd\u89c4\u5f8b\uff0c\u4e8e\u662f\u5c31\u60f3\u5230\u4e86\u7528$queue$\u6765\u89e3\u51b3\u3002\n\nc++\u7684\u7f51\u7ad9\uff1a\uff08\u53ef\u4ee5\u5728\u91cc\u8fb9\u770b$queue$\uff09http://www.cplusplus.com/\n\n\u8fd8\u662f\u5f88\u6709\u7528\u7684\u3002\n\n\u65b9\u6cd5\uff1a\n1. \u5148\u5f00\u4e00\u4e2a\u6570\u7ec4\u6765\u5224\u65ad\u8be5\u5355\u8bcd\u662f\u5426\u5728\u5185\u5b58\u4e2d\u3002\n2. \u5982\u679c\u6709\uff0c\u5c31\u8df3\u8fc7\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u5c06\u5b83\u653e\u5165\u961f\u5217\u3001\u8ba1\u6570\u3001\u5185\u5b58\u8bb0\u4e3a$1$\u3002\n3. \u5982\u679c\u961f\u5217\u957f\u5927\u4e8e$m$,\u5c06\u9996\u5143\u7d20\u5f39\u51fa\u3002\u9996\u5143\u7d20\u7684\u5185\u5b58\u8c03\u4e3a$0$\u3002\n\u8fd9\u5c31\u662f\u6a21\u62df\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint m,n,cnt=0;\nbool a[1010];//\u5224\u65ad\u8be5\u6570\u662f\u5426\u5728\u5185\u5b58\u4e2d,\u4e5f\u53ef\u7528map\u3002\nqueue<int> q;//\u5b9a\u4e49\u4e00\u4e2a\u961f\u5217\nint main(){\n\tscanf(\"%d%d\",&m,&n);//\u8bfb\u5165mn\n\tfor(int i=1;i<=n;i++){\n\t\tint tmp;\n\t\tscanf(\"%d\",&tmp);\n\t\tif(a[tmp]){//\u65b9\u6cd51\n\t\t\tcontinue;\n\t\t}\n\t\telse{//\u65b9\u6cd52\n\t\t\tq.push(tmp);\n\t\t\ta[tmp]=1;\n\t\t\tcnt++;\n\t\t}\n\t\tif(q.size()>m){//\u65b9\u6cd53\n\t\t\ta[q.front()]=0;\n\t\t\tq.pop();\n\t\t}\n\t}\n\tprintf(\"%d\",cnt);//\u8f93\u51fa\u8ba1\u6570\n\treturn 0;\n} \n```\n\u5f53\u7136\uff0c$STL$\u6bd4\u624b\u5de5\u961f\u5217\u65b9\u4fbf\uff0c\u4f46\u8017\u65f6\u8f83\u591a\uff0c\u6709\u4e9b\u9898\u53ef\u80fd\u4e0d\u9002\u5408\u3002\u80fd\u624b\u6253\u5c31\u5c3d\u91cf\u624b\u6253\u3002",
        "postTime": 1548056781,
        "uid": 138061,
        "name": "la_un_ty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n\u6570\u636e\u53ef\u4ee5\u5728\u8f93\u5165\u7684\u65f6\u5019\u76f4\u63a5\u5904\u7406\n\n\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2avis\u6570\u7ec4\u5224\u65ad\u5f53\u524d\u5355\u8bcd\u662f\u5426\u5728\u5185\u5b58\u4e2d\n\n\u5982\u679c\u8fd9\u4e2a\u6570\u5728\u5185\u5b58\u4e2d\u5c31vis[a[i]]=1\n\n\u5bf9\u4e8e\u5185\u5b58\uff0c\u53ef\u4ee5\u5f00\u6570\u7ec4b[m]~~\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u961f\u5217\u4f46\u662f\u672c\u849f\u84bb\u4e0d\u4f1a\u961f\u5217\u6240\u4ee5\u5c31\u7528\u7684\u6570\u7ec4~~\n\n\u5b9a\u4e49\u4e00\u4e2acnt\u6307\u9488\u8868\u793a\u5f53\u524d\u7528\u7684\u662f\u7b2ccnt\u4e2a\u5185\u5b58\n\nb[cnt]=a[i]\u8868\u793a\u7b2ccnt\u4e2a\u5185\u5b58\u5b58\u7684\u5355\u8bcda[i]\n\n\u5f53\u7136\u5982\u679c\u5185\u5b58\u6ee1\u4e86\u5c31\u9700\u8981\u4e0d\u65ad\u53bb\u5934\u548c\u52a0\u5c3e\uff0c\u961f\u5217\u4f1a\u6bd4\u6570\u7ec4\u5feb\u5f88\u591a\n\n###### \u53ef\u60dc\u672c\u849f\u84bb\u4e0d\u4f1a\u961f\u5217\uff08\u54ed\n\n\u76f4\u63a5\u4e0aAC\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#define sc scanf\n#define pr printf //\u4e0d\u91cd\u8981\u7684\u5b8f\u5b9a\u4e49 \nusing namespace std;\n\nint m,n,ans;\nint a[1005]; \nint b[105]; // \u5185\u5b58 \nbool vis[1005]; \n\nint main (){\n\tsc(\"%d%d\",&m,&n);\n\tint cnt=0;// \u5f53\u524d\u5185\u5b58\u4f4d\u7f6e \n\tfor (int i=1;i<=n;i++){\n\t\tsc(\"%d\",&a[i]);\n\t\tif (!vis[a[i]]){ // \u5bf9\u4e8e\u5185\u5b58\u4e2d\u6ca1\u6709\u7684\u5355\u8bcd\u8fdb\u884c\u64cd\u4f5c \n\t\t\tif (cnt==m){ // \u5185\u5b58\u6ee1\u4e86\u8fdb\u884c\u6e05\u9664\u548c\u6dfb\u52a0\u64cd\u4f5c \n\t\t\t\tvis[b[1]]=0;// \u6e05\u9664\u961f\u9996 \n\t\t\t\tvis[a[i]]=1;// \u6dfb\u52a0\u65b0\u5355\u8bcd \n\t\t\t\tfor (int j=1;j<=m;j++)\n\t\t\t\t\tb[j]=b[j+1];// \u6574\u4f53\u524d\u79fb \n\t\t\t\tb[m]=a[i]; // \u65b0\u5355\u8bcd\u52a0\u5165\u961f\u5c3e \n\t\t\t\tans++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// \u5185\u5b58\u4e0d\u6ee1\u65f6\u64cd\u4f5c \n\t\t\tb[++cnt]=a[i];\n\t\t\tvis[a[i]]=1;\n\t\t\tans++;\n\t\t}\n\t}\n\tpr(\"%d\\n\",ans);\n\treturn 0 ;\t\n} \n```\n\n~~\u5b8c\u7f8e~~ AC\n\n~~\u6211\u8981\u662f\u4f1a\u961f\u5217\u591a\u597d\u554a~~",
        "postTime": 1536852760,
        "uid": 113081,
        "name": "Reico",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u6c34\u9898\u4e00\u9898\uff0c\u6309\u7167\u9898\u76ee\u610f\u601d\u53bb\u5b9a\u4e49\u6570\u7ec4\u5c31\u884c\u3002\n\n\u5faa\u73af\u5d4c\u5957\u4e0e\u6761\u4ef6\u5224\u65ad\u5d4c\u5957\u8f83\u591a\uff0c\u4e0d\u8981\u641e\u6df7\u4e86\n\n\u9644\u4e0a\u4ee3\u7801\u53ca\u89e3\u91ca\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint main()\n{\n     int a[101]={0},b,n,m,j=1;\n     cin>>n>>m;\n     cin>>b;//\u6682\u65f6\u50a8\u5b58\u6570\u636e\u7684\u53d8\u91cf\uff0c\u8282\u7701\u5185\u5b58\n     a[j]=b;a[0]++;//\u505a**\u7b2c\u4e00\u6b21\u8d4b\u503c**\uff08\u6709\u5f85\u6539\u52a8\uff09\uff0ca[0]\u4e3a\u50a8\u5b58\u6b21\u6570\u7684\u53d8\u91cf\n     for (int i=2;i<=m;i++)\uff08**\u7b2c\u4e8c\u6b21\u8d4b\u503c**\u81f3\u6700\u540e\u4e00\u6b21\uff09\n     {\n      cin>>b;\n      for (int l=1;l<=j;l++)\n       if (a[l]!=b&&l==j)//**\u7b2c\u4e00\u6b21\u5224\u65ad**\uff0c\u4ece\u5934\u5230\u5c3e\u786e\u5b9a\u6ca1\u6709\u8fd9\u4e2a\u53d8\u91cf\u53ef\u4ee5\u8c03\u7528\u3002\n       {\n         if (j+1<=n)     //**\u7b2c\u4e8c\u6b21\u5224\u65ad**\uff0c\u786e\u5b9a\u5185\u5b58\u6570\u503c\u672a\u6ee1\n         {\n             j++;\n             a[j]=b;\n             a[0]++;                 //\u5916\u5b58\u6b21\u6570\u52a01\n             break;\n         }\n         else            //**\u4e0e\u4e0a\u9762\u7b2c\u4e8c\u6b21\u5224\u65ad\u76f8\u53cd**\n         {\n             for (int p=1;p<=j-1;p++)//\u5f53\u6570\u7ec4\u6ee1\u4e86\u5c31\u4ece\u540e\u5f80\u524d\u63a8\uff0c\u4e3a\u540e\u9762\u817e\u51fa\u7a7a\u4f4d\n              a[p]=a[p+1];\n             a[j]=b;                 //\u817e\u51fa\u7a7a\u4f4d\u7684\u4f4d\u7f6e\u8d4b\u503c\u7ed9\u65b0\u7684\u53d8\u91cf\n             a[0]++;                 //\u5916\u5b58\u6b21\u6570\u52a01\n         }\n      }\n      else if (a[l]==b) break;       //**\u627f\u63a5\u7b2c\u4e00\u6b21\u5224\u65ad**\n     }\n     cout<<a[0];                         //\u6700\u540e\u6253\u5370\u5916\u5b58\u7684\u6b21\u6570\n     return 0;\n}\n```\n\u6ce8\u610f\uff01\u6761\u4ef6\u5224\u65ad\u7684\u5d4c\u5957\u4e0d\u8981\u641e\u6df7\uff01\n\u518d\u6b21\u8bf4\u660e\uff0c\u6761\u4ef6\u5224\u65ad\u7684\u5d4c\u5957\u4e0d\u8981\u641e\u6df7\uff01\n\n\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff01\n",
        "postTime": 1512784391,
        "uid": 66834,
        "name": "\u7a1azi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "## \u4f7f\u7528queue\u961f\u5217\u4e0eset\u5bb9\u5668\u6c42\u89e3---Java\n\n\u672c\u9898\u662f\u4e00\u9053\u7b80\u5355\u7684\u6a21\u62df\u9898\uff0c\u6a21\u62df\u9898\u8bf4\u767d\u4e86\u5c31\u662f\u6a21\u62df\u51fa\u9898\u76ee\u4e2d\u7684\u73af\u5883\u4e0e\u64cd\u4f5c\uff0c\u5fc5\u8981\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4e3a\u6a21\u62df\u64cd\u4f5c\u6765\u521b\u5efa\u6240\u9700\u7684\u73af\u5883\u3002\u901a\u8fc7\u5ba1\u9898\u6211\u4eec\u4e0d\u96be\u770b\u51fa\u672c\u9898\u9700\u8981\u6a21\u62df\u7684\u73af\u5883\u662f<\u5f85\u8bd1\u6587\u7ae0>\u3001<\u5185\u5b58\u5355\u5143>\uff0c\u9700\u8981\u6a21\u62df\u7684\u64cd\u4f5c\u4e3a<\u901a\u8fc7\u67e5\u5b57\u5178\u5c06\u65b0\u5355\u8bcd\u6dfb\u5165\u7684\u5185\u5b58\u5355\u5143>\u3001<\u5c06\u5b58\u5728\u65f6\u95f4\u6700\u957f\u7684\u5355\u8bcd\u79fb\u51fa\u5185\u5b58\u5355\u5143>\u3002\n   - <\u5f85\u8bd1\u6587\u7ae0> \u5f85\u8bd1\u6587\u7ae0\u5305\u542b\u5728\u8f93\u5165\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4e00\u6b21\u6027\u8bfb\u5165\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u4e4b\u540e\u6574\u4f53\u518d\u505a\u5904\u7406\uff0c\u4e5f\u53ef\u7528\u5faa\u73af\u4e00\u4e2a\u4e00\u4e2a\u5355\u8bcd\u7684\u8fb9\u8bfb\u5165\u8fb9\u5904\u7406\u3002\n   - <\u5185\u5b58\u5355\u5143> \u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6a21\u62df\u7684\u64cd\u4f5c\uff0c\u9009\u53d6\u9002\u5f53\u7684\u5bb9\u5668\u6765\u6a21\u62df\u5185\u5b58\u5355\u5143\u3002\u7531\u4e8e\u5b58\u5728<\u5c06\u5b58\u5728\u65f6\u95f4\u6700\u957f\u7684\u5355\u8bcd\u79fb\u51fa\u5185\u5b58\u5355\u5143>\u8fd9\u4e2a\u7279\u6b8a\u6027\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f7f\u7528\u961f\u5217\u5148\u5165\u5148\u51fa\u7684\u7279\u6027\u6765\u6a21\u62df\u8be5\u64cd\u4f5c\u3002\n   - <\u901a\u8fc7\u67e5\u5b57\u5178\u5c06\u65b0\u5355\u8bcd\u6dfb\u5165\u7684\u5185\u5b58\u5355\u5143> \u8fd9\u4e2a\u64cd\u4f5c\u4e2d\u91cd\u8981\u7684\u662f\u65b0\u5355\u8bcd\uff0c\u4e5f\u5c31\u662f\u8bf4\u5185\u5b58\u5355\u5143\u91cc\u5b58\u5728\u7684\u5355\u8bcd\u4e0d\u80fd\u586b\u5165\u5185\u5b58\u5355\u5143\uff0c\u8fd9\u5c31\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u662f\u5426\u53ef\u4ee5\u6dfb\u5165\u5176\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4f7f\u7528set\u5bb9\u5668\uff0c\u8ba9set\u5bb9\u5668\u4e0e\u5185\u5b58\u5355\u5143\u4e2d\u7684\u5143\u7d20\u4fdd\u6301\u4e00\u81f4\uff0c\u5229\u7528set\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e0d\u53ef\u91cd\u590d\u6027\uff0c\u6765\u5224\u65ad\u662f\u5426\u6dfb\u5165\u65b0\u5355\u8bcd\u5230\u5185\u5b58\u5355\u5143\u4e2d\u3002\n   - <\u5c06\u5b58\u5728\u65f6\u95f4\u6700\u957f\u7684\u5355\u8bcd\u79fb\u51fa\u5185\u5b58\u5355\u5143> \u7531\u4e8e\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u64cd\u4f5c\u9009\u53d6\u4e86queue\u5bb9\u5668\uff0c\u76f4\u63a5\u4f7f\u7528queue\u5bb9\u5668\u81ea\u5e26\u7684\u65b9\u6cd5\u5373\u53ef\u6a21\u62df\u3002\n\n\n\u81f3\u6b64\u6211\u4eec\u6a21\u62df\u5b8c\u4e86\u6240\u6709\u7684\u73af\u5883\u4e0e\u64cd\u4f5c\uff0c\u6700\u540e\u8f93\u51fa\u9898\u89e3\u5373\u53ef\u3002\nJava\u4ee3\u7801\u5982\u4e0b\n```java\nimport java.util.*;\nimport java.io.*;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        Set <Integer> s = new HashSet<Integer>();\n        Queue <Integer> q = new LinkedList<Integer>();\n        st.nextToken();\n        int n = (int)st.nval;\n        st.nextToken();\n        int m = (int)st.nval;\n        Integer t;\n        int cout = 0;\n        for(int i = 0,f = 0; i < m; i++) {\n            st.nextToken();\n            t = (int)st.nval;\n            if(q.isEmpty()) {\n                q.add(t);\n                s.add(t);\n                f++;\n                cout++;\n            }\n            else {\n                if(f < n && s.add(t)) {\n                    q.add(t);\n                    f++;\n                    cout++;\n                }\n                else if(f == n && s.add(t)) {\n                    q.add(t);\n                    s.remove(q.remove());\n                    cout++;\n                }\n            }\n        }\n        System.out.println(cout);\n    }\n}\n```\n\n  \n  ",
        "postTime": 1570089168,
        "uid": 260919,
        "name": "wowzbh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u5728[\u6211\u7684\u535a\u5ba2](https://www.hanzire.com/index.php/archives/74/)\u91cc\u9605\u8bfb\u4f53\u9a8c\u66f4\u597d\n## \u601d\u8def\n\n\u76f4\u63a5\u6a21\u62df\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd8\u8981\u7528\u5230\u961f\u5217\u3002\n\u5f00\u4e00\u4e2a\u6570\u7ec4`stuck`\u8bb0\u5f55\u6bcf\u4e2a\u5355\u8bcd\u662f\u5426\u5728\u5185\u5b58\u4e2d\uff0c\u5f00\u4e00\u4e2a\u961f\u5217\u8bb0\u5f55\u5185\u5b58\u4e2d\u7684\u5355\u8bcd\u3002\n\u5f53\u6709\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\u8bfb\u5165\u65f6\uff0c\u5148\u68c0\u67e5\u5b83\u5728\u4e0d\u5728\u5185\u5b58\u4e2d\uff1a\n1. \u5982\u5728\u5c31\u76f4\u63a5\u8df3\u8fc7\u3002\n2. \u5982\u679c\u4e0d\u5728\uff0c\u518d\u68c0\u67e5\u6b64\u65f6\u5185\u5b58\u662f\u5426\u5df2\u6ee1\uff0c\u901a\u8fc7`q.size()`\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u961f\u5217\u6b64\u65f6\u7684\u5927\u5c0f\u3002\u5982\u679c\u6ee1\u4e86\uff0c\u5c31\u628a`q.front()`\u8bb0\u5f55\u4e3a\u4e0d\u5728\u5185\u5b58\u4e2d\uff08\u5220\u9664\u4e86\uff09\uff0c\u56e0\u4e3a\u961f\u5934\u662f\u6700\u65e9\u5165\u961f\u7684\uff0c\u518d\u628a\u5b83\u5f39\u51fa\uff0c\u7136\u540e\u8bb0\u5f55\u65b0\u8bfb\u5165\u7684\u5355\u8bcd\u5728\u5185\u5b58\u4e2d\uff0c\u6700\u540e\u628a\u5b83\u63a8\u5165\u961f\u5217\u3002\n\u6211\u8fd9\u91cc\u7528\u7684\u662fSTL queue\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\n\nconst int N=1005;\nint n,m,ans,stuck[N];//\u4e3a\u4e86\u9632\u6b62\u91cd\u540d\u53d6\u7684\u5947\u602a\u6570\u7ec4 \nqueue<int> q;\n\ninline int get()\n{\n\tint res=0;char c=getchar();\n\twhile(c<'0'||c>'9')\n\t\tc=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tres=res*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tm=get(),n=get();\n\tint x;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tx=get();\n\t\tif(!stuck[x])\n\t\t{\n\t\t\tans++;\n\t\t\tif(q.size()==m)\n\t\t\t{\n\t\t\t\tstuck[q.front()]=0;\n\t\t\t\tq.pop();\n\t\t\t}\n\t\t\tq.push(x);\n\t\t\tstuck[x]=1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1571812749,
        "uid": 113696,
        "name": "Hanzire76",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "```\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=10100;\nint n,m,len=0,ans=0,s=1;\n//\u5509\uff0c\u4e00\u9053\u7b80\u5355\u9898\u5374\u505a\u4e86\u597d\u4e45\uff0c\u53d1\u4e00\u7bc7\u9898\u89e3\u5427\n//len\u8868\u793a\u5f53\u524d\u5185\u5b58\u4e2d\u5df2\u7ecf\u6709\u591a\u5c11\u5355\u8bcd\n//ans\u8bb0\u5f55\u6700\u7ec8\u7b54\u6848\n//s\u8868\u793a\u5185\u5b58\u4e2d\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u4f4d\u7f6e \nint b[maxn];\nbool v[maxn];\nint main()\n{\n    memset(v,false,sizeof(v));\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=n;i++)\n    {\n      int x;\n      scanf(\"%d\",&x);\n      if(!v[x] && x>=0)\n      {\n      //\u5982\u679c\u5185\u5b58\u4e2d\u6ca1\u6709x\n      //\u7b54\u6848\u7d2f\u52a0\n      //\u6807\u8bb0x\n      //\u628a\u4e4b\u524d\u5185\u5b58\u4e2d\u5355\u8bcd\u7684\u4e0b\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662fb[s+len]\u8d4b\u503c\u4e3ax \n        ans++;\n        v[x]=true;\n        b[s+len]=x;\n        if(len<m)\n          len++;\n        //\u5982\u679clen<m,\u76f4\u63a5\u7d2f\u52a0len \n        else\n        {\n        //\u5982\u679clen==m\n        //\u628a\u5185\u5b58\u4e2d\u7b2c\u4e00\u4e2a\u5355\u8bcdb[x]\u6807\u8bb0\u6389\n        //\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u4f4d\u7f6e\u589e\u52a0 \n          v[b[s]]=false;\n          s++;\n        }\n      }\n    }\n    printf(\"%d\\n\",ans);\n    system(\"pause\");\n    return 0;\n}\n\n```\n",
        "postTime": 1570008178,
        "uid": 148757,
        "name": "wanxiang_zx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "# 1.\u5206\u6790\n\n0. \u672c\u9898\u4e2d\uff0c\u67e5\u5b57\u5178\u7684\u65b9\u5f0f\u662f\u65b0\u7684\u5355\u8bcd\u4ece\u672b\u5c3e\u653e\u5165\u5185\u5b58\uff0c\u82e5\u5185\u5b58\u5df2\u6ee1\uff0c\u5219\u5c06\u7b2c\u4e00\u4e2a\u5355\u8bcd\u53bb\u9664\uff0c\u518d\u4ece\u672b\u5c3e\u653e\u5165\u5185\u5b58\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u7c7b\u4f3c\u4e8e**\u961f\u5217**$(queue)$\uff0c\u56e0\u6b64\u672c\u9898\u7528\u961f\u5217\u6765\u505a$($\u8981\u5f15\u5165\u5934\u6587\u4ef6$< queue >)$\uff1b\n  \n- \u961f\u5217\u4ecb\u7ecd\uff1a\n\n\t- \u5bf9\u4e8e\u961f\u5217$q$\uff0c\u9075\u5faa$FIFO($\u5148\u8fdb\u5148\u51fa\uff0c\u5373\u5148\u653e\u5165\u961f\u5217\u7684\u5148\u5f39\u51fa\u961f\u5217$)$\uff1b\n  \n\t- \u5f39\u51fa\u961f\u5217\u7684\u4e00\u7aef\u53eb\u505a\u961f\u9996\uff0c\u8fdb\u5165\u961f\u5217\u7684\u4e00\u7aef\u53eb\u505a\u961f\u5c3e\uff1b\n  \n\t- \u5b9a\u4e49\uff1a$queue< type >\\space name$\u8868\u793a\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a$name$\u7684$type$\u578b\u961f\u5217\u3002\n  \n- \u5e38\u7528\u51fd\u6570\uff1a\n\t- $q.push(x)$\uff1a\u5c06$x$\u4ece\u961f\u5c3e\u538b\u5165\u961f\u5217$q$\uff1b\n  \n\t- $q.pop()$\uff1a\u5c06\u961f\u5217$q$\u7684\u961f\u9996\u5143\u7d20$($\u5373\u9996\u5143\u7d20$)$\u5f39\u51fa\u961f\u5217\uff1b\n    \n    - $q.size()$\uff1a\u8fd4\u56de\u961f\u5217$q$\u7684\u957f\u5ea6$($\u5143\u7d20\u4e2a\u6570$)$\uff1b\n    \n    - $q.front()$\uff1a\u8bbf\u95ee\u961f\u5217$q$\u7684\u961f\u9996\u5143\u7d20\uff1b\n    \n    - $q.back()$\uff1a\u8bbf\u95ee\u961f\u5217$q$\u7684\u961f\u5c3e\u5143\u7d20\u3002\n\n1. $search\\_queue$\u51fd\u6570\uff1a\u5728\u961f\u5217$q$\u4e2d\u67e5\u627e$find$\uff0c\u82e5\u627e\u5230\u8fd4\u56de$true$\uff0c\u5426\u5219\u8fd4\u56de$false$\uff1b\n\n- \u6ce8\u610f\uff1a\u82f1\u6587\u8981\u5f39\u51fa\u961f\u9996\u5143\u7d20\uff0c\u82e5\u7528\u5730\u5740\u4f20\u9012\u4f1a\u5f71\u54cd\u539f\u961f\u5217\uff0c\u6240\u4ee5\u8fd9\u91cc\u7528\u503c\u4f20\u9012\uff1b\n\n- \u904d\u5386$q$\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u82e5\u961f\u9996\u5143\u7d20\u662f\u8981\u627e\u7684\u5143\u7d20$(q.front()==find)$\uff0c\u8fd4\u56de$true$\uff0c\u5426\u5219\u5f39\u51fa\u961f\u9996\u5143\u7d20$(q.pop())$\uff1b\n\n- \u82e5\u904d\u5386\u5b8c\u540e\u4ecd\u672a\u627e\u5230\uff0c\u8fd4\u56de$fals$e\u3002\n  \n2.\u4e3b\u51fd\u6570\uff1a \n\n- \u5faa\u73af$len$\u6b21\uff0c\u8bfb\u5165\u8981\u67e5\u627e\u7684\u5355\u8bcd$($\u4f46\u5176\u5b9e\u662f\u6570\u5b57$)$\uff1b\n\n- \u8c03\u7528$search\\_queue$\u51fd\u6570\u5728\u961f\u5217$memory$\u67e5\u627e$temp$\u662f\u5426\u5b58\u5728\uff0c\u82e5\u4e0d\u5b58\u5728$(!search\\_queue(memory, temp))$\uff0c\u5c06temp\u538b\u5165\u961f\u5c3e$(memory.push(temp))$\uff0c\u5373\u67e5\u4e00\u6b21\u5b57\u5178$(cnt++)$\uff1b\n\n- \u82e5\u961f\u5217\u5927\u5c0f\u8d85\u8fc7\u9650\u5b9a\u7684\u5185\u5b58\u5927\u5c0f$(memory.size()>size)$\uff0c\u5219\u5f39\u51fa\u961f\u9996\u5143\u7d20$(memory.pop())$\u3002\n\n# 2.\u4ee3\u7801\n\n  \n```cpp\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\nqueue<int> memory;  //\u961f\u5217\nint size;           //\u5185\u5b58\u5927\u5c0f\nint len;            //\u6587\u7ae0\u957f\u5ea6\nint cnt = 0;        //\u67e5\u627e\u5b57\u5178\u7684\u6b21\u6570\n\n//\u5728\u961f\u5217q\u4e2d\u67e5\u627efind\uff0c\u82e5\u627e\u5230\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\nbool search_queue(queue<int> q, int find)\n{\n\tint n = q.size();\n\t\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tif(q.front() == find)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tq.pop();\n\t\t}\n\t}\n\t\n\treturn false;\n}\n\nint main(void)\n{\n\tcin >> size >> len;\n\t\n\twhile(len--)\n\t{\n\t\tint temp;\n\t\tcin >> temp;\n\t\t\n\t\t//\u5728\u961f\u5217\u4e2d\u67e5\u627e\n\t\tif(!search_queue(memory, temp))\n  \t\t{\n  \t\t\tmemory.push(temp);\n\t\t\tcnt++;\n\t\t}\n\n\t\t//\u8d85\u8fc7\u5185\u5b58\u5927\u5c0f\uff0c\u5f39\u51fa\u961f\u5217\n\t\tif(memory.size() > size)\n\t\t{\n\t\t\tmemory.pop();\n\t\t}\n\t}\n\t\n\tcout << cnt;\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1566871897,
        "uid": 214264,
        "name": "SingularWind",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "#### \u8fd9\u9053\u9898\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u5faa\u73af\u89e3\uff0c\u4f46\u662f\u6709\u5f88\u591a\u5751\n#### \u9996\u5148\u662fm>=0\uff0c\u4e5f\u5c31\u662f\u8bf4m\u53ef\u80fd\u4e3a0\n#### \u5176\u6b21\u662f\u201cN\u4e2a\u975e\u8d1f\u6574\u6570\u201d\u8bf4\u660e\u8f93\u5165\u6570\u636e\u53ef\u80fd\u4e3a0\n### \u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,ans=0;\nint a[105],b[1005];\n\nint main()\n{\n\tcin>>m>>n;\n\tif(m==0)//\u5224\u65ad\uff0c\u82e5m=0\uff0c\u76f4\u63a5\u8f93\u51fan\n\t{\n\t\tcout<<n;\n\t\treturn 0;\n\t}\n\tmemset(a,-1,sizeof(a));//\u6570\u7ec4\u521d\u503c\u8d4b\u4e3a-1\uff0c\u9632\u6b62\u51fa\u73b0n=0\u65f6\uff0cans\u4e0d\u53d8\n\tfor(int i=0;i<n;i++)\n\t\tcin>>b[i];\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint k=0;//\u91cd\u7f6e\u6807\u8bb0\n\t\tfor(int j=0;j<m;j++)//\u5728a\u6570\u7ec4\u4e2d\u66b4\u529b\u67e5\u627e\n\t\t{\n\t\t\tif(a[j]!=b[i])continue;//\u672a\u627e\u5230\uff0c\u7ee7\u7eed\uff0c\n\t\t\tk=1;//\u82e5\u627e\u5230\u4e86\uff0c\u6807\u8bb0\n\t\t}\n\t\tif(!k)//\u5982\u679c\u672a\u88ab\u6807\u8bb0\uff0c\u8ba1\u5165\u6570\u7ec4\uff0cans\uff0b1\n\t\t{\n\t\t\tint s=ans%m;\n\t\t\tans++;\n\t\t\ta[s]=b[i];\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1564366700,
        "uid": 224229,
        "name": "Caicz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "### \u4f7f\u7528\u4f2a\u94fe\u8868\n\u4f7f int \u6570\u7ec4\u7684\u4e0b\u6807\u4f5c\u4e3a\u503c\uff0c\u5143\u7d20\u4f5c\u4e3a\u201c\u6307\u9488\u201d\uff0c\u6784\u9020\u4e00\u4e2a\u4f2a\u94fe\u8868\u3002\n\n\u4f8b\u5982\u4e0b\u56fe\u7684\u6570\u7ec4\u4ee5\u53ca\u4e0e\u4e4b\u7b49\u4ef7\u7684\u94fe\u8868\u3002\n\n![\u6570\u7ec4\u4e0e\u5bf9\u5e94\u94fe\u8868](https://cdn.luogu.com.cn/upload/image_hosting/k0z89ggr.png)\n\n\u6ce8\u610f\u5bf9\u7167\u4e0a\u56fe\u4e24\u8005\u7684\u5173\u7cfb\uff0c\u4ed4\u7ec6\u4f53\u4f1a\u4f2a\u94fe\u8868\u7684\u7ed3\u6784\u3002\n\n### \u4f2a\u94fe\u8868\u7684\u4f18\u70b9\n\n\u4f2a\u94fe\u8868\u517c\u5177\u6570\u7ec4\u4e0e\u94fe\u8868\u7684\u4f18\u70b9\uff0c\u53ef\u4ee5\u5728\u5e38\u6570\u65f6\u95f4\u5185\u8bbf\u95ee\u5143\u7d20\u4ee5\u53ca\u63d2\u5165/\u5220\u9664\u5143\u7d20\u3002\n\n### \u89e3\u9898\u601d\u8def\n\n\u8fd9\u5b66\u671f\u521a\u5b66\u4e86\u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\uff0c\u4e00\u770b\u8fd9\u4e2a\u9898\u76ee\uff1a\u8fd9\u4e0d\u5c31\u662f Cache \u5417\uff1f\n\n\u4e00\u4e2a **fully associative** \uff0c\u91c7\u7528**\u6700\u65e9\u8f7d\u5165\u66ff\u6362**\u7b56\u7565\u7684 Cache\u3002\n\uff08\u76f8\u5173\u6982\u5ff5\u53c2\u8003 CS\uff1aAPP\uff09\n\n\u8fd9\u9053\u9898\u76f8\u5f53\u4e8e\u95ee\u4f60 miss \u6570\uff0c\u7531\u4e8e\u662f fully associative \uff0c\u4e0d\u5b58\u5728 **conflict miss**\uff0c\u6211\u4eec\u53ea\u9700\u6a21\u62df\u8fd9\u79cd\u7b80\u5355\u7f13\u5b58\u7684\u884c\u4e3a\uff0c\u7edf\u8ba1 **cold miss** \u548c **capacity miss**\uff08\u5e76\u4e0d\u7528\u533a\u5206\uff09\u3002\n\n\u7528\u4eba\u8bdd\u8bf4\u5c31\u662f\uff1a\n1. \u67e5\u627e\u6307\u5b9a\u5143\u7d20\n2. \u627e\u89c1\u4e86\u5c31\u7b97\u4e86\uff0c\u5565\u4e5f\u4e0d\u7528\u505a\uff1b\u6ca1\u627e\u89c1\u5c31\u628a\u5b83\u52a0\u8fdb\u6765\uff0cmiss \u6570\u52a0\u4e00\u3002\n3. \u5982\u679c\u88c5\u6ee1\u4e86\uff0c\u5c31\u628a\u5446\u5f97\u6700\u4e45\u7684\u90a3\u4e2a\u5143\u7d20\u64b5\u51fa\u53bb\uff0c\u7ed9\u522b\u4eba\u817e\u5730\u65b9\u3002\n\n\u67e5\u627e\u5143\u7d20\u5f88\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u901a\u8fc7\u4e0b\u6807\u8bbf\u95ee\uff0c\u672a\u52a0\u5165\u7684\u5143\u7d20\u7528\u7279\u6b8a\u503c\u6807\u8bb0\uff08\u6bd4\u5982 -1\uff09\u3002\n\n\u7136\u540e\u94fe\u8868\u7684\u4f18\u52bf\u6765\u4e86\uff0c\u6bcf\u65b0\u52a0\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u628a\u5b83\u6302\u5728\u94fe\u8868\u6700\u540e\u9762\uff0c\u76f8\u5f53\u4e8e\u81ea\u5e26 time stamp\uff0c\u5934\u7ed3\u70b9\u5c31\u662f\u5446\u5f97\u6700\u4e45\u7684\u5bb6\u4f19\u3002\u6240\u4ee5\u88c5\u6ee1\u7684\u65f6\u5019\u5c31\u6458\u6389\u5934\u7ed3\u70b9\u5c31\u597d\u4e86\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint arr[1001];    //pseudo pointer\n\nclass Cache\n{\npublic:\n    Cache() { capacity = -1; head = -1; tail = -1; used = -1; };\n    Cache(int m, int h) { capacity = m; head = h; tail = h; used = 1; arr[h] = 0; };\n    void push(int t);\nprivate:\n    int capacity;\n    int head;\n    int tail;\n    int used;\n};\n\nint main()\n{\n    memset(arr, -1, 4004);\n    int m, n, h;\n    cin >> m >> n >> h;\n\n    if (m == 0)\n        return n;\n    if (n == 0)\n        return 0;\n\n    Cache c(m, h);\n    int p;\n    int miss = 1;   //the first word must cause cold miss\n\n    int i = 1;\n    while (i < n)\n    {\n        cin >> p;\n        if (arr[p] == -1)\n        {\n            c.push(p);\n            miss++;\n        }\n        i++;\n    }\n\n    cout << miss;\n    return 0;\n}\n\nvoid Cache::push(int t)\n{   \n    arr[tail] = t;\n    tail = t;\n    arr[t] = 0;    //or any number rather than -1\n\n    if (++used > capacity)    //attaching must be done first\n    {\n        int n = arr[head];\n        arr[head] = -1;\n        head = n;\n    }\n}\n```\n\n",
        "postTime": 1562001114,
        "uid": 219977,
        "name": "\u6211\u91d1\u68a8\u4e86",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u961f\u5217\u7684\u95ee\u9898\n\n\u68c0\u6d4b\u961f\u5217\u4e2d\u662f\u5426\u5b58\u5728\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2ap\u6570\u7ec4\uff0c\u957f\u5ea6\u4e3a1001\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c420\u2264N\u22641000\n\u9ed8\u8ba4p\u6570\u7ec4\u6bcf\u4e00\u4e2a\u90fd\u4e3a0\uff0c\u53ea\u8981p[N]==0\n\n\u5c31\u961f\u5217\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5143\u7d20\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2amap\u4e00\u4e00\u5bf9\u5e94\nN\u76f8\u5f53\u4e8ep\u7684\u4e0b\u6807  \u53ea\u8981\u68c0\u6d4bN\u4f5c\u4e3a\u4e0b\u6807\u6240\u5bf9\u5e94\u7684\u6570\u662f\u5426\u4e3a0\u5c31\u53ef\u4ee5\u68c0\u6d4b\u662f\u5426\u5b58\u5728\n\n\u6dfb\u52a0\u540ep[N]++ \u8fd9\u65f6\u518d\u6709\u540c\u6837\u5143\u7d20\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u5176\u4e0d\u4e3a0,\u6240\u4ee5\u4e0d\u7528\u7ffb\u5b57\u5178\n\n\u5f53\u961f\u5217\u8fbe\u5230\u6ee1\u7684\u65f6\u5019\uff0c\u961f\u5934\u51fa\u6765\uff0c\u961f\u5c3e\u6dfb\u52a0\u5143\u7d20\n\u8fd9\u65f6\u5019\u961f\u5934\u5143\u7d20\u4f5c\u4e3a\u4e0b\u6807\u5bf9\u5e94\u7684p\u5c31\u5e94\u8be5--\u7f6e0\n\u5e76\u540c\u65f6\u628ap[\u961f\u5c3e\u5143\u7d20]++\n\n\u540c\u65f6\u8bbe\u7f6e\u4e00\u4e2a\u68c0\u6d4b\u961f\u5217\u662f\u5426\u6ee1\u7684\u503c\u548c\u7ffb\u5b57\u5178\u7684\u6b21\u6570\u7684\u503c\u5373\u53ef\n\nJava\n\nimport java.util.*;\npublic class Main {\n\t\n    public static void main(String[] args) {\n    \n\t\tScanner sc = new Scanner(System.in);\n        \n\t\tint n = sc.nextInt();\n\t\tint m = sc.nextInt();\n\t\tint a[] = new int[m];\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\ta[i] = sc.nextInt();\n\t\t}\n\n\t\tint p[] = new int[1001];\n\t\tQueue<Integer> my = new LinkedList<Integer>();\n\t\tint index = 0;//\u961f\u5217\u957f\u5ea6\n\t\tint count = 0;\n\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (p[a[i]] == 0) {\n\t\t\t\tif(index<n) {\n\t\t\t\t\tp[a[i]]+=1;\n\t\t\t\t\tmy.add(a[i]);\n\t\t\t\t\tindex++;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tp[my.poll()]-=1;\n\t\t\t\t\tmy.add(a[i]);\n\t\t\t\t\tp[a[i]]+=1;\n\t\t\t\t\tcount++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} \n\t\t}\n\t\tSystem.out.println(count);\n\n\t}\n}",
        "postTime": 1541583740,
        "uid": 149512,
        "name": "ssddd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "# **\u672c\u9898\u4f7f\u7528stl\u4e2d\u7684queue+\u6570\u7ec4\u6807\u8bb0\u5143\u7d20\u662f\u5426\u8fdb\u961f\u6765\u89e3\u51b3\u95ee\u9898**\n\n\u8fd9\u9053\u9898\u52a0\u6df1\u4e86\u6211\u5bf9queue\u7684\u7406\u89e3\u3002\n\n\u56e0\u4e3aqueue\u672c\u8eab\u5c31\u662f\u4e00\u4e2a**\u5148\u8fdb\u5148\u51fa**\u7684\u961f\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u8c01\u5148\u8fdb\u5165\u961f\u5217\uff0c\u5373\u5728\u9898\u76ee\u4e2d\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u6700\u65e9\u8fdb\u5165\u5185\u5b58\u7684\u90a3\u4e2a\u5355\u8bcd\u7136\u540e\u5220\u9664\u5b83\u3002\n\n\u4f46\u6211\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5143\u7d20\u5728\u4e0d\u5728\u961f\u5217\u91cc\u9762\uff0c\u67e5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0queue\u7684\u6210\u5458\u51fd\u6570\u5982\u4e0b\uff1a\n1. push//\u8fdb\u961f\n2. pop//\u51fa\u961f\n3. size//\u8fd4\u56de\u961f\u5217\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\n4. empty//\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n5. front//\u8fd4\u56de\u503c\u4e3a\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n6. back//\u8fd4\u56de\u503c\u4e3a\u961f\u5217\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\n\u7136\u800c\u5e76\u4e0d\u652f\u6301\u67e5\u627e\u529f\u80fd\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u4e00\u4e2avis\u6570\u7ec4\u8868\u793a\u4e00\u4e2a\u6570\u6709\u6ca1\u6709\u8fdb\u5165\u961f\u5217\u3002\n\u8fd8\u662f\u770b\u4ee3\u7801\u5427\u3002\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u5e0c\u671b\u80fd\u8fc7\u3002\n\nCODE\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nbool vis[1010];\nint n,m,x,cnt,s,len;//cnt\u8868\u793a\u64cd\u4f5c\u6570\uff0clen\u8868\u793a\u961f\u5217\u7684\u957f\u5ea6\uff1b \nint main(){\n\tqueue<int>q;//\u58f0\u660e\u4e00\u4e2aqueue \n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&x);\n\t\tlen=q.size();\n\t\tif(vis[x]) continue;\n\t\tif(!vis[x]&&len<n){//\u5982\u679c\u8fd9\u4e2a\u6570\u4e0d\u5728\u961f\u5217\u91cc\uff0c\u5e76\u4e14\u957f\u5ea6\u5c0f\u4e8e\u5185\u5b58\uff1b \n\t\t\tvis[x]=1;//\u6807\u8bb0\u5b83\u4e3a\u8fdb\u961f \n\t\t\tq.push(x); //\u8fdb\u961f \n\t\t\tcnt++;//\u64cd\u4f5c\u6570+1 \n\t\t}\n\t\tif(!vis[x]&&len>=n){//\u5982\u679c\u8fd9\u4e2a\u6570\u4e0d\u5728\u961f\u5217\u91cc\uff0c\u5e76\u4e14\u957f\u5ea6\u5927\u4e8e\u5185\u5b58\uff0c\u8981\u8fdb\u884c\u5220\u5143\u7d20\u64cd\u4f5c; \n\t\t\ts=q.front();\n\t\t\tvis[s]=0;\n\t\t\tq.pop();\n\t\t\tq.push(x);\n\t\t\tvis[x]=1;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tprintf(\"%d\",cnt);\n\treturn 0;\n} \n} \n```\n",
        "postTime": 1539259735,
        "uid": 66357,
        "name": "\u6df1\u9083\u540a\u70b8\u5929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u6a21\u62df\u5c31\u597d\u4e86\uff0c\u6ce8\u610f\u6570\u636e\u8303\u56f4\uff0c\u6570\u53ef\u4ee5\u662f\u7b49\u4e8e0\u7684\n\n\u7528\u5e03\u5c14\u578b\u6570\u7ec4s\u6765\u8bb0\u5f55\u5f53\u524d\u6570\u662f\u5426\u5728\u5185\u5b58\u91cc\uff0c\n\n\u6574\u5f62\u6570\u7ec4a\u6765\u8bb0\u5f55\u5b58\u5165\u5185\u5b58\u7684\u987a\u5e8f\n\nt\u8868\u793a\u5185\u5b58\u91cc\u5220\u6570\u7684\u6b21\u5e8f\u3002\u4e0b\u6709\u6ce8\u89e3\u3002\n\n\n```cpp\nvar\n  s:array[0..1000] of boolean;\n  a:Array[1..1000] of longint;\n  m,n,i,ans,c,num,t,j:longint;\nbegin\n  readln(m,n);\n  t:=1;\n  for i:=1 to n do begin\n    read(num);\n    if s[num]=false then begin//\u5047\u5982\u8fd9\u4e2a\u6570\u4e0d\u5728\u5185\u5b58\u4e2d\u5c31...\n      s[num]:=true;//\u8bb0\u5165\u5185\u5b58\n      inc(ans);//\u6b21\u6570\u52a0\u4e00\n      if j<m then begin//\u5224\u65ad\u5185\u5b58\u5b58\u6ee1\u4e86\u6ca1\u6709\u6765\u6267\u884c\u662f\u5426\u5220\u5185\u5b58\n        inc(j);//\u8bb0\u5f55\u5f53\u524d\u6570\u7684\u6b21\u5e8f\u3002\u4e0b\u540c\u3002\n        a[j]:=num;\n      end\n      else begin\n        inc(j);\n        a[j]:=num;\n        s[a[t]]:=false; //\u5c06\u524d\u6570\u4ece\u5185\u5b58\u5220\u9664\n        inc(t);//\u4e0b\u4e00\u6b21\u5220\u4e0b\u4e00\u4e2a\u6570\u3002\n      end;\n    end;\n  end;\n  writeln(ans);\nend.\n```",
        "postTime": 1489585285,
        "uid": 22330,
        "name": "\u64a9\u59b9\u51db\u9171",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "1.\u552f\u4e00\u8981\u6ce8\u610f\u8bf4\u7684\u662f\"\u975e\u8d1f\u6574\u6570\",\u800c\u6570\u636e\u9ed8\u8ba4\u4e3a0,\u9700\u8981\u4fee\u6539.\n\n2.\u6bcf\u6b21\u4ee3\u6362\"\u6700\u65e9\",\u8fd9\u662f\u76f8\u5bf9\u800c\u8a00\u7684,\u5e94\u4e3a+1\u540emod m\n\n```delphi\n\nvar\n  c:array[1..101] of longint;\n  i,j,k,l,n,a,m:longint;\n  o:boolean;\nbegin\n  readln(m,n);\n  l:=1;\n  for i:=1 to 101 do c[i]:=-1;\n  for i:=1 to n do\n  begin\n    read(a);\n    o:=false;\n    for j:=1 to m do\n    if c[j]=a then begin o:=true;break;end;\n    if o=false then\n    begin\n      inc(k);\n      c[l]:=a;\n      if l+1>m then l:=1 else inc(l);\n    end;\n  end;\n  writeln(k);\nend.\n\n```",
        "postTime": 1435932611,
        "uid": 5991,
        "name": "parrot",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "C++\u7ec8\u4e8e\u6709\u70b9\u4f18\u8d8a\u6027\u4e86\uff0c\u7528\u7ebf\u6027\u7684\u5bb9\u5668\u90fd\u884c\u3002vector\u6765\u4e00\u53d1\u3002\n\n```cpp\n\n#include<iostream>\n#include<string>\n#include<iterator>\n#include<vector>\nusing namespace std;\n\nint main(){\n    int m, n,x,ans=0;\n    cin >> m >> n;\n    vector<int> mem(m,1001);\n    for (int i=0; i < n; i++){\n        cin >> x;\n        for (int j = 0; j < m; j++){\n            if (mem[j] == x){  break; }\n            else if (j==m-1){ ans++; mem.push_back(x); mem.erase(mem.begin()); }\n        }\n    }\n    cout << ans;\n    return 0;\n}\n```\uff08c/c++\uff09\n",
        "postTime": 1434629525,
        "uid": 6639,
        "name": "snxiang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u8bb0\u5fc6\u5316\u641c\u7d22+\u961f\u5217\uff0c\u7b80\u5355\u6a21\u62df\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(n)\u3002\n\n\u8fd9\u91cc\u4f7f\u7528\u4e86STL\u7684\u961f\u5217\uff0c\u624b\u5199\u4e5f\u53ef\u3002\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int MAXSIZE=105;\nbool marked[1005];\nint main()\n{\n    queue<int> q;\n    int m,n,ans=0,k;\n    memset(marked, 0, sizeof(marked));\n    scanf(\"%d%d\", &m, &n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\", &k);\n        if(not marked[k])\n        {\n            ans++;\n            if(q.size()<m)\n            {\n                marked[k]=true;\n                q.push(k);\n            }\n            else if(m!=0)\n            {\n                marked[q.front()]=false;\n                marked[k]=true;\n                q.pop();\n                q.push(k);\n            }\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\n```",
        "postTime": 1432294413,
        "uid": 1354,
        "name": "silveryelf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "```cpp\n\n#include <iostream>\nusing namespace std;\nint a[101],b,m;//b\u6570\u7ec4\u6a21\u62df\u5185\u5b58\nint sec(int l)//\u641c\u7d22\u5185\u5b58\u4e2d\u6709\u6ca1\u6709\u5df2\u5b58\u5728\u7684\n{\n    for(int i=0;i<m;i++)if(a[i]==l)return 1;\n    return 0;\n}\nint main()\n{\n    int num=0,n,i,p=0;\n    for(i=0;i<101;i++)a[i]=-1;//\u6ce8\u610f\u53ef\u80fd\u6709\u5355\u8bcd\u4e3a0\uff0c\u6240\u4ee5\u4e0d\u80fd\u9ed8\u8ba4\u6570\u7ec4\u4e3a0\n    cin >> m >> n;\n    for(i=0;i<n;i++)\n    {\n        cin >> b;\n        if(sec(b)==0)//\u5982\u679c\u5728\u5185\u5b58\u4e2d\u6ca1\u6709\u5b58\u5728\u5355\u8bcd\n        {\n            num++;//\u8ba1\u6570\u5668\u52a0\u4e00\n            a[p]=b;//\u5f53\u524dp\u6307\u5411\u7684\u5185\u5b58\uff0c\u52a0\u5165\u5185\u5bb9\n            if(p==m-1)p=0; //\u5982\u679cp+1\u5927\u4e8e\u5185\u5b58\u4e0a\u7ebf\u5219p=0\n            else p++;\n        }\n    }\n    cout << num;\n    return 0;\n}\n\n```",
        "postTime": 1428585867,
        "uid": 4138,
        "name": "linzihao1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u662f\u65f6\u5019\u4f53\u73b0C++\u4f18\u8d8a\u6027\u4e86\uff01\n\n\u4f7f\u7528STL[del]\u88e4[/del]\u4e2d\u7684set,queue \u6765\u4f7f\u7a0b\u5e8f\u7b80\u6d01\u660e\u4e86\n\n\u5229\u7528\u961f\u5217\u505a\u5230\u5148\u8fdb\u5148\u51fa\uff0c\u5e76\u7528\u96c6\u5408\u6765\u5b8c\u6210\u5b57\u5178\u4e2d\u7684\u53bb\u91cd\u4e0e\u67e5\u8be2\u3002\n\n\n```cpp\n\n#include <cstdio>\n#include <queue>\n#include <set>\n\nusing namespace std;\n\nint main()\n{\n    int m,n,a,ans=0;\n    scanf(\"%d%d\",&m,&n);\n    queue<int> q;\n    std::set<int> s;\n    for(int i=0;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        if (s.find(a)==s.end())\n            if (q.size()==m) {\n            s.erase(q.front());\n            q.pop();\n            q.push(a);\n            s.insert(a);\n            ans++;\n            }\n            else\n            {\n            q.push(a);\n            s.insert(a);\n            ans++;\n            }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1408258127,
        "uid": 265,
        "name": "Genius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u6211\u7684\u89e3\u6cd5\uff0c\u5c06\u5185\u5b58\u64cd\u4f5c\u90e8\u5206\u7528\u51fd\u6570\u6a21\u5757\u5316\uff0c\u5177\u4f53\u770b\u6ce8\u91ca\uff0c\u4e00\u904dAC\n\n```cpp\n\n#include <stdio.h>\n#include <string.h>\n#define MAXWORD 100\n#define MAXDIC 1000\nint word[MAXWORD];\nint dic[MAXDIC];\nint m,n,total=0;\nint search(int in)  //\u5185\u5b58\u4e2d\u6709\u8fd9\u4e2a\u5355\u8bcd\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n{\n    int i;\n    for(i=0;i<m;i++)\n        if(dic[i]==in)\n            return 1;\n    return 0;\n}\nint full() //\u5185\u5b58\u5df2\u6ee1\u8fd4\u56de1\uff0c\u6709\u7a7a\u8fd4\u56de0\n{\n    int i;\n    for(i=0;i<m;i++)\n        if(dic[i]==-1)\n            return 0;\n    return 1;\n}\nvoid add(int in) //\u5411\u7b2c\u4e00\u4e2a\u7a7a\u7684\u5185\u5b58\u52a0\u5165\u5355\u8bcd\n{\n    int i;\n    for(i=0;i<m;i++)\n        if(dic[i]==-1)\n        {\n            dic[i]=in;\n            total++;\n            return;\n        }\n}\nvoid move() //\u5c06\u7b2c\u4e00\u4e2a\u5185\u5b58\u6e05\u7a7a\uff0c\u5c06\u540e\u9762\u7684\u5355\u8bcd\u5f80\u524d\u79fb\u52a8\u4e00\u683c\uff0c\u817e\u51fa\u6700\u540e\u4e00\u683c\u5185\u5b58\n{\n    int i;\n    for(i=0;i<m-1;i++)\n        dic[i]=dic[i+1];\n    dic[m-1]=-1;\n}\nint main()\n{\n    int i;\n    memset(word,0,sizeof(int)*MAXWORD);\n    memset(dic,-1,sizeof(int)*MAXDIC);\n    scanf(\"%d%d\",&m,&n);\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d\",&word[i]);\n        if(search(word[i])==0)\n        {\n            if(full()==0)\n                add(word[i]);\n            else\n            {\n                move();\n                add(word[i]);\n            }\n        }\n    }\n    printf(\"%d\\n\",total);\n    return 0;\n}\n\n```",
        "postTime": 1397038200,
        "uid": 102,
        "name": "WHU2017301500335",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "###### \u770b\u5230\u524d\u9762\u5404\u4f4ddalao\u6ca1\u6709\u4f7f\u7528queue\u7684\u6211\u5728\u6b64\u732e\u4e0a\u6211\u7684\u849f\u84bb\u4ee3\u7801\n## \u6a21\u62df\u5185\u5b58\nqueue\uff1a\u65b0\u7684\u5143\u7d20\u5728\u961f\u5217\u6700\u540e\u5165\u961f\u6bcf\u6b21\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u51fa\u961f\\\n\u5f88\u660e\u663e\u8fd9\u5c31\u662f\u4e00\u4e2a\u961f\u5217\u5148\u8fdb\u7684\u5148\u51fa\u5f53\u961f\u5217\u957f\u5ea6\u7b49\u4e8em\u65f6\u5220\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20\u518d\u52a0\u5165\u65b0\u7684\u5143\u7d20\u3002\n## \u6807\u8bb0\u662f\u5426\u5df2\u5728\u5185\u5b58\u4e2d\n\u8fd9\u65f6\u53ea\u9700\u8981\u4e00\u4e2aflag\u6570\u7ec4\u5f53\u8fd9\u4e2a\u5143\u7d20\u5165\u961f\u65f6flag[t]=1\uff1b\uff08flag\u521d\u59cb\u5316\u4e3a0\uff09\\\n\u6bcf\u5f53flag.size()\u7b49\u4e8em\u65f6flag[l.front]=0\u4ece\u5185\u5b58\u4e2d\u5220\u6389\u8fd9\u4e2a\u5143\u7d20\n## \u4e0d\u591abb\u4e0a\u4ee3\u7801\n```\n#include<stdio.h>\n#include<stdlib.h>\n#include<queue>\nusing namespace std;\nqueue<int>l;\nbool flag[10001]={};\nint m,n,t,ans=0;\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(!flag[t])\n\t\t{\n\t\t\t//printf(\"%d\\n\",t);\n\t\t\tans++;\n\t\t\tif(l.size()==m)\n\t\t\t{\t\n\t\t\t\tflag[l.front()]=0;\n\t\t\t\tl.pop();\n\t\t\t\tl.push(t);\n\t\t\t\tflag[t]=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tl.push(t);\n\t\t\t\tflag[t]=1;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1565855572,
        "uid": 133383,
        "name": "0104154308_f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u4e3a\uff01\u4ec0\uff01\u4e48\uff01\u5c45\u7136\u6ca1\u6709\u4eba\u7528\u53cc\u7aef\u961f\u5217\n\n~~\u8fd9\u4e0d\u7b26\u5408\u4f60\u4eec\u7684\u98ce\u683c\u554a~~\n\n#  STL\u5927\u6cd5\u597d\n\u770b\u5230\u8fd9\u9053\u9898\n\n\u53c8\u540e\u9762\u8fdb\u53c8\u524d\u9762\u51fa\u7684\n\n~~\u600e\u4e48\u770b\u600e\u4e48\u50cf\u53cc\u7aef\u961f\u5217~~\n\n\u7528\u4e86\u4e00\u4e2amark\u6570\u7ec4\u6807\u8bb0\u5df2\u5b58\u5728\u4e8e\u961f\u5217\u4e2d\u7684\u6570\n\n\u5982\u679c\u961f\u5217\u957f\u5ea6\u8d85\u8fc7m\u5c31\u628a\u961f\u9996\u5f39\u51fa\uff0c\u7136\u540e\u52a0\u5165\u5728\u5916\u5b58\u4e2d\u7684\u8bcd\u5178\u5185\u67e5\u627e\u7684\u90a3\u4e2a\u6570\n\nans\u8bb0\u5f55\u5728\u5916\u5b58\u4e2d\u7684\u8bcd\u5178\u5185\u67e5\u627e\u6b21\u6570\n\n\u6700\u540e\u8f93\u9519ans\u5c31\u597d\u5566\n\n\u8bdd\u4e0d\u591a\u8bf4\u4e0a\u4ee3\u7801~~\uff08\u7801\u98ce\u5de8\u4e11\u65e0\u6bd4\uff09~~\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\n#include<queue>\nusing namespace std;\nint word[1001],m,n,ans;\nbool mark[1001];\ndeque <int> memory;\nint main(){\n\tscanf(\"%d%d\",&m,&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&word[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(mark[word[i]]==0){\n\t\t\tif(memory.size()==m){\n\t\t\t\tmark[memory.front()]=0;\n\t\t\t\tmemory.pop_front();\n\t\t\t\tmark[word[i]]=1;\n\t\t\t\tmemory.push_back(word[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmark[word[i]]=1;\n\t\t\t\tmemory.push_back(word[i]);\n\t\t\t}\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}\n```\n\u5176\u5b9e\u8fd9\u9053\u9898\u53ef\u4ee5\u4e0d\u7528\u8fd9\u4e2a\n\n\u4f46\u662f\u8fd8\u662f\u60f3\u591a\u7ed9\u5927\u5bb6\u666e\u53ca\u4e0b\u66f4\u591a\u65b9\u6cd5\n\n~~\uff08\u8d85\u7ea7\u5927\u849f\u84bb\u6ca1\u6709blog\uff09~~\n",
        "postTime": 1565694451,
        "uid": 232049,
        "name": "\u67d0SC\u849f\u84bb",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u7bc7\u9898\u89e3\u732e\u7ed91540~\n\n   \u9996\u5148\u58f0\u660e\u672c\u4eba\u8fd8\u5f88\u83dc^(*\uffe3(oo)\uffe3)^ \u4e0d\u8fc7\u4e2a\u4eba\u611f\u89c9\u8fd9\u6837\u505a\u601d\u8def\u6bd4\u8f83\u6e05\u6670~\n\n   \u6211\u91c7\u7528\u4e86\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u65b9\u6cd5\uff08\u7a7a\u95f4\u4e5f\u4e0d\u662f\u5f88\u5927\uff09\uff0c\u5f00\u4e863\u4e2a\u6570\u7ec4\uff0ca\uff08\u5b58\u653e\u6bcf\u4e2a\u8f93\u5165\u7684\u5355\u8bcd\u503c\uff09\uff0cexist\uff08bool\u7c7b\u578b\uff0c\u5b58\u653e\u6bcf\u4e2a\u5355\u8bcd\u662f\u5426\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff09\u548cmemory\uff08\u5b58\u653e\u5b58\u5230\u5185\u5b58\u4e2d\u7684\u6570\u503c\uff09\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\n   \u7528temp\u4f5c\u4e3a\u6307\u9488\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u5408\u9002\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u9650\u5236\u5f53temp=m\u65f6\u7acb\u523b\u6e05\u96f6\uff0c\u9632\u6b62memory\u6570\u7ec4\u8d8a\u754c\u3002\n   \u7528mnum\u5b58\u50a8memory\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u7528\u6765\u5224\u65ad\u5f53\u9700\u8981\u5c06\u67d0\u4e2a\u503c\u52a0\u5165\u5185\u5b58\u65f6\uff0c\u662f\u76f4\u63a5\u52a0\u5165\u8fd8\u662f\u9700\u8981\u8fdb\u884c\u66ff\u6362\uff08\u5f00\u59cb\u65f6\u5185\u5b58\u4e3a\u7a7a\u65e0\u987b\u66ff\u6362\uff09\uff0c\u8fd9\u91cc\u6211\u91c7\u7528\u8986\u76d6\u7684\u65b9\u6cd5\u8fdb\u884c\u66ff\u6362\u3002\n   ans\u5b58\u50a8\u67e5\u8be2\u7684\u4e2a\u6570\u3002\n   \u4e0a\u8ff0\u4e09\u4e2a\u503c\u5747\u521d\u59cb\u5316\u4e3a0\u3002\n\n   \u9996\u5148\u521d\u59cb\u5316exist\u6570\u7ec4\u4e3afalse\uff0c\u56e0\u4e3a\u5f00\u59cb\u65f6\u6ca1\u6709\u4efb\u4f55\u5355\u8bcd\u5728\u5185\u5b58\u4e2d\u3002\n```cpp\nmemset(exist,false,sizeof(exist));\n```\n\u7136\u540e\u904d\u5386\u8f93\u5165\u7684\u5355\u8bcd\uff0c\u5bf9\u6bcf\u4e2a\u5355\u8bcd\u6839\u636e\u5bf9\u5e94\u7684exist\u6570\u7ec4\u5143\u7d20\u5224\u65ad\u662f\u5426\u5728\u5185\u5b58\u4e2d~\n\u82e5\u4e0d\u5b58\u5728\uff0c\u9700\u8981\u5c06\u5219\u9996\u5148\u5224\u65admnum\u662f\u5426\u5927\u4e8em\u2014\u2014\\\n\n------------\n\n\n  \t\uff081\uff09\u5982**mnum<m**\u8bf4\u660e\u6b64\u65f6memory\u6570\u7ec4\u8fd8\u6ca1\u6ee1\uff0c\u5373\u5185\u5b58\u8fd8\u6ca1\u6ee1\uff0c\u76f4\u63a5\u5b58\u50a8\u8be5\u503c\u5230\u5185\u5b58\u4e2d\uff0c\u6307\u9488temp\u540e\u79fb\u4e00\u4f4d\uff0c\u5185\u5b58\u4e2d\u5143\u7d20\u4e2a\u6570mnum\u52a0\u4e00\u3002\\\n   \n\t\uff082\uff09\u82e5**mnum>=m**,\u8bf4\u660e\u6b64\u65f6memory\u6570\u7ec4\u5df2\u6ee1\uff0c\u9700\u8981\u8fdb\u884c\u5143\u7d20\u7684\u66ff\u6362\u3002\u6b64\u65f6temp\u6307\u9488\u6307\u5411\u7684\u4f4d\u7f6e\u6070\u597d\u5c31\u662f\u6700\u65e9\u8fdb\u5165\u5f53\u524d\u5185\u5b58\u6570\u7ec4\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u53ea\u9700\u5c06\u8be5\u5143\u7d20\u7684\u503c\u66ff\u6362\u4e3a\u5f53\u524d\u5143\u7d20\u7684\u503c\uff0c\u4e0d\u8fc7\uff0c**\u5728\u6b64\u4e4b\u524d**\u8981\u5148\u628a\u88ab\u66ff\u6362\u6389\u7684\u5143\u7d20\u7684\u503c\u5373memory[temp]\u5728exist\u4e2d\u76f8\u5e94\u7684\u503c\u8bbe\u7f6e\u4e3afalse\uff0c\u8868\u793a\u8be5\u5143\u7d20\u5df2\u7ecf\u79bb\u5f00\u5185\u5b58\u3002\\\n   \n\n------------\n\u4e0a\u8ff0(1)(2)\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u90fd\u9700\u8981\u5bf9temp\u7684\u503c\u8fdb\u884c\u5224\u65ad\uff0c\u786e\u4fdd\u5176\u4e0d\u8d85\u8fc7\u5185\u5b58\u957f\u5ea6m\uff0c\u5e76\u5c06\u5f53\u524d\u5143\u7d20\u503c\u5728exist\u4e2d\u7684\u503c\u8bbe\u7f6e\u4e3atrue\u3002\\\n   \u6700\u540e\u8f93\u51faans\u5373\u4e3a\u6240\u6c42\uff01\u5e0c\u671b\u53ef\u4ee5\u5e2e\u5230\u5927\u5bb6~\u52a0\u6cb9\u30fe(\u25cd\u00b0\u2207\u00b0\u25cd)\uff89\uff9e\n   \n\n\n\n\u5b8c\u6574AC\u4ee3\u7801\u5982\u4e0b~\n------------\n\n```cpp\n#include <iostream>\n#include<cstring>\nusing namespace std;\n\nint a[1001];\nbool exist[1001];\nint memory[101];\n\nint main()\n{\n    int m,n;\n    int temp=0;\n    int mnum=0;\n    int ans=0;\n    cin>>m>>n;\n    for(int i=0; i<n; i++)\n        cin>>a[i];\n    memset(exist,false,sizeof(exist));\n    for(int i=0; i<n; i++)\n    {\n        if(!exist[a[i]])  //\u4e0d\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\n        {\n            ans++;\n            if(mnum<m)  //\u5185\u5b58\u6709\u7a7a\u4f4d\n            {\n                memory[temp++]=a[i];\n                mnum++;\n            }\n            else  //\u628a\u6700\u5148\u5165\u5185\u5b58\u7684\u7528\u8be5\u503c\u66ff\u6362\n            {\n                exist[memory[temp]]=false;\n                memory[temp++]=a[i];\n            }\n            if(temp==m)\n                temp=0;\n            exist[a[i]]=true;\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n\n```\n",
        "postTime": 1565693093,
        "uid": 237242,
        "name": "yubing_lml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "## \u672c\u9898\uff0c\u4e2a\u4eba\u89c9\u5f97 ~~\u5f88\u6c34~~ \u4e0d\u96be\n\u611f\u89c9dalao\u4eec\u7684\u601d\u8def\u597d\u65b0\u5947\uff0c\u672c\u849f\u84bb\u4ecb\u7ecd\u4e00\u4e0b\u81ea\u5df1\u7684\u601d\u8def\u3002\n### \u7b80\u5355\u4ecb\u7ecd\u4e0b\u601d\u8def\n\u5f00\u4e00\u4e2abool\u6570\u7ec4\uff08\u521d\u59cb\u4e3a0\uff09\uff0c\u5b58\u653e\u662f\u5426\u5728\u8bcd\u5178\u5185\u5b58\u4e2d\uff0c\u8282\u7ea6\u65f6\u95f4\u590d\u6742\u5ea6\n~~\uff08\u597d\u50cf\u8fd9\u6570\u636e\u89c4\u6a21\u4e5f\u4e0d\u7528\u8282\u7ea6\uff09~~\u3002\u7136\u540e\u5728\u5f00\u4e00\u4e2a\u961f\u5217\uff0c\u82e5bool=0\uff0c\u5982\u679c\u5927\u5c0f\u5230\u4e86m\uff0c\u5148\u5220\u9664\u961f\u9996\u7684\u5143\u7d20\uff08bool\u8bbe\u4e3a0\uff09\uff0c\u518d\u52a0\u5165\uff08\u653e\u5165\u5e76\u628abool\u8bbe\u4e3a1\uff09\uff1b\u82e5bool=1\uff0c\u5219\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\n### \u4e0a\u4ee3\u7801 ~~\uff08\u4f60\u4eec\u6700\u559c\u6b22\u4e86\uff09~~\n\n```\n#include<queue>\n#include<iostream>\n#define N 1008611//1008611:\u627e\u6211\u5e72\u561b \nusing namespace std;\nbool b[N];//\u5b9a\u4e49bool\u7c7b\u578b\u6570\u7ec4 \nqueue<int>cd;//\u5b9a\u4e49\u961f\u5217\uff08\u672c\u4eba\u559c\u6b22\u7528stl\uff09 \nint main()\n{\n\tint m,n,q,s=0;//\u5b9a\u4e49\u4e0d\u7528\u8bf4 \n\tcin>>m>>n;//\u8f93\u5165\u4e0d\u7528\u8bf4 \n\tfor(int i=1;i<=n;i++)//\u5171\u6267\u884cn\u6b21\u64cd\u4f5c \n\t{\n\t\tcin>>q;//\u8f93\u5165\u8981\u7ffb\u8bd1\u7684\u8bcd/\u6570\u5b57 \n\t\tif(!b[q])//\u5982\u679c\u6ca1\u5728\u8bcd\u5178\u4e2d \n\t\t{\n\t\t\ts++;//\u67e5\u627e\u6b21\u6570+1 \n\t\t\tb[q]=1;//\u8bbe\u4e3a\u5728\u8bcd\u5178\u4e2d \n\t\t\tif(cd.size()==m)//\u82e5\u5185\u5b58==m\uff08stl\u81ea\u5e26size\uff09 \n\t\t\t{\n\t\t\t\tb[cd.front()]=0;//\u628a\u961f\u9996\u7684bool\u8bbe\u4e3a0 \n\t\t\t\tcd.pop();//\u5220\u9664\u961f\u9996\u5143\u7d20 \n\t\t\t}\n\t\t\tcd.push(q);//\u52a0\u5165\u65b0\u8f93\u5165\u7684\u8bcd \n\t\t}\n\t}\n\tcout<<s;//\u8f93\u51fa\u67e5\u627e\u6b21\u6570\n\treturn 0;//\u529f\u5fb7\u5706\u6ee1 \n}\n```\n------------\n## ~~\u5b8c\u7f8e~~AC\n\n# ~~\u6211\u7231\u961f\u5217~~",
        "postTime": 1565490876,
        "uid": 203743,
        "name": "\u6ed1\u5927\u7a3d",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u5b9a\u4e49\u4e86\u8f83\u591a\u7684\u53d8\u91cf\u6765\u5b9e\u73b0\u6a21\u62df\uff0c\u6240\u4ee5\u6709\u7f18\u80fd\u770b\u5230\u6211\u7684\u9898\u89e3\u7684\u540c\u5b66\u4e0d\u8981\u88ab\u5413\u5230\u3002\n\u8bf4\u660e\u4e00\u4e0b\u51e0\u4e2a\u8f83\u4e3a\u5173\u952e\u7684\u53d8\u91cf\uff1a\n1. m[100] \u2014\u2014 \u6a21\u62df\u5185\u5b58\uff1b\n2. temp \u2014\u2014 \u6682\u65f6\u5b58\u653e\u5355\u8bcd\uff1b\n3. flag \u2014\u2014 \u91cd\u590d\u4fe1\u53f7\uff0c\u82e5temp\u4e0e\u5185\u5b58\u4e2d\u5355\u8bcd\u6709\u91cd\u590d\u5219flag = 1,\u53cd\u4e4bflag = 0\uff1b\n4. l \u2014\u2014 \u8bb0\u5f55\u5185\u5b58\u4e2d\u5355\u8bcd\u7684\u4e2a\u6570\uff0c\u51cf\u5c11\u53ef\u4ee5\u51cf\u5c11\u4e00\u70b9\u5224\u65ad\u7684\u6b21\u6570\uff0c\u6bd4\u8f83\u9e21\u808b\uff1b\n5. sum \u2014\u2014 \u67e5\u5b57\u5178\u7684\u6b21\u6570\uff1b\n6. tracer[100] \u2014\u2014 \u4e0em[100]\u4e00\u4e00\u5bf9\u5e94\uff0c\u8bb0\u5f55\u5185\u5b58\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7684\u6539\u52a8\u987a\u5e8f\uff0c\u6bcf\u5b58\u5165\u4e00\u4e2a\u65b0\u5355\u8bcd\uff0c\u5c31\u628a\u8be5\u5355\u8bcd\u5728m[100]\u4e2d\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e0a\u5b58\u5165\u6b64\u65f6\u7684sum,\u5b9e\u73b0\u8bb0\u5f55\u5185\u5b58\u4e2d\u5355\u8bcd\u7684\u5b58\u5165\u987a\u5e8f\uff0c\u5185\u5b58\u6ee1\u540e\uff0c\u627e\u6700\u5c0f\u7684\u4e00\u9879\uff0c\u7136\u540e\u66ff\u6362\u5373\u53ef\uff1b\n7. h \u2014\u2014 \u89e3\u51b3 j \u521a\u597d\u7b49\u4e8e x\uff0c\u5373\u5185\u5b58\u521a\u6ee1\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u5982\u679c\u4f60\u628aj == x\u5f53\u4f5c\u5185\u5b58\u5df2\u6ee1\u7684\u6761\u4ef6\uff0c\u90a3\u4e48\u5f53 j \u521a\u597d\u7b49\u4e8e x\u65f6\uff0cm[0] \u548c m[x-1]\u90fd\u4f1a\u88ab\u4fee\u6539\u4e3a temp,\u6700\u7ec8\u5bfc\u81f4\u7a0b\u5e8f\u51fa\u9519;\n\n\n------------\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\n```c\n#include <stdio.h>\n\nint main()\n{\n    int x, y, m[100], temp, sum = 0, flag, l = 0, tracer[100], t, index;\n    scanf(\"%d\", &x);\n    scanf(\"%d\", &y);\n    int i, j = 0, k, p, h = 0;\n    for (i = 0; i < y; i ++)\n    {\n        scanf(\"%d\", &temp);\n\n        flag = 0;\n        for (k = 0; k < l; k ++)//\u68c0\u67e5\u91cd\u590d\n        {\n            if (temp == m[k])\n            {\n                flag = 1;\n                break;\n            }\n        }\n\n        if (j < x && flag == 0)//\u5185\u5b58\u672a\u6ee1\u4e14\u6ca1\u6709\u91cd\u590d\uff0c\u6309\u987a\u5e8f\u5b58\u653e, \u67e5\u5b57\u5178\u6b21\u6570\u52a01\n        {\n            m[j] = temp;\n            sum ++;\n            tracer[j] = sum;\n            j ++;\n\n            if (l >= x)\n                l = x;\n            else\n                l ++;\n        }\n\n        if (j == x) h ++;\n        if (h >= 2 && flag == 0)//\u5185\u5b58\u5df2\u6ee1\u4e14\u6ca1\u6709\u91cd\u590d\uff0c\u66ff\u6362\u6700\u65e9\u7684\u90a3\u4e2a\u5355\u8bcd\uff0c\u67e5\u5b57\u5178\u6b21\u6570\u52a01\n        {\n            t = 10000;\n            for (p = 0; p < x; p ++)\n            {\n                if (tracer[p] < t)\n                {\n                    index = p;\n                    t = tracer[p];\n                }\n            }\n            m[index] = temp;\n            sum ++;\n            tracer[index] = sum;\n        }\n    }\n\n    printf(\"%d\", sum);\n    return 0;\n}\n\n\n```\n",
        "postTime": 1565100708,
        "uid": 185989,
        "name": "\u5927\u5357",
        "ccfLevel": 0,
        "title": "C\u8bed\u8a00\uff0c\u6a21\u62df"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e3a\u4ec0\u4e48\u8981\u7528\u6307\u9488\u554a\uff1f\n\n## \u76f4\u63a5\u7528\u961f\u5217\u89e3\u51b3\u5c31\u884c\u4e86\uff01\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nqueue <int> q;//\u5b9a\u4e49\u961f\u5217\nint m,n,counter;//counter\u5b58\u50a8\u67e5\u8bcd\u5178\u6b21\u6570\nbool a[10001];//\u67d0\u4e2a\u6570\u5b57\u6709\u6ca1\u6709\nint main()\n{\n    cin>>m>>n;\n    for(int i=1;i<=n;i++)\n    {\n        int x;cin>>x;//\u5148\u8f93\u5165\uff0c\u5e76\u4e0d\u9700\u8981\u6570\u7ec4\n        if(a[x])continue;//\u76f4\u63a5\u8df3\u8fc7\n        else\n        {\n            if(q.size()>=m)//\u5185\u5b58\u6ee1\u4e86\n            {\n                a[q.front()]=false;\n                q.pop();\n            }\n            q.push(x);a[x]=true;counter++;\n            //\u90a3\u5c31\u628a\u7b2c\u4e00\u4e2a\u9876\u51fa\u6765\uff0c\u88c5\u65b0\u8fdb\u5165\u7684\u4e00\u4e2a\n        }\n    }\n    cout<<counter<<endl;//\u6700\u540e\u8f93\u51fa\n    return 0;\n}\n```\n\n\u6e29\u99a8\u63d0\u793a\uff1a\n\n\u6570\u636e\u91cc\u53ef\u80fd\u6709'0'\uff08\u7b2c2\u4e2a\u6570\u636e\u70b9\uff09\uff0c\u4e0d\u662f0\u4e2a\u6570\u636e\uff0c\u800c\u662f\u8bcd\u6761\u662f0\uff0c\u8fd9\u79cd\u4e8b\u4ef6\u5982\u679c\u4f7f\u7528\u6570\u7ec4\u5c31\u4f1a\u7206\u6389\uff0c\u56e0\u4e3a\u521d\u59cb\u503c\u662f0\uff1b\u4e00\u4e2a\u4e00\u4e2a\u7684\u8f93\u5165\u6070\u5de7\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898",
        "postTime": 1564739057,
        "uid": 177916,
        "name": "OIerSuperTer",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "AC\u4e0d\u96be\uff0c\u4f46\u5982\u679c\u6570\u636e\u91cf\u518d\u5927\u4e00\u70b9\uff0c\u6bd4\u5982100\u4e07\u4e2a\u5143\u7d20\uff0c\u600e\u4e48\u529e\uff1f\u4f60\u8fd8\u80fd\u6b21\u6b21\u904d\u5386\u67e5\u627e\u5417\uff1f\n\n\u8fd9\u5176\u5b9e\u5c31\u662f\u7f13\u5b58\u7f6e\u6362\u91cc\u9762\u7684FIFO\u7b97\u6cd5\uff0c\u5148\u8fdb\u5148\u51fa\u3002\u5173\u952e\u662f\uff0c\u5982\u4f55\u67e5\u627e\u76f8\u5e94\u7684\u5143\u7d20\u662f\u5426\u5b58\u5728\uff1f\n\n\u53cc\u5bb9\u5668\u3002\u4ec0\u4e48\u610f\u601d\uff0c\u5c31\u662f\u8bf4\u7528\u4e00\u4e2a\u96c6\u5408\uff08unordered_set\uff0c\u57fa\u4e8e\u54c8\u5e0c\u8868\u3002\u8fd9\u79cd\u5bb9\u5668\u7684\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u90fd\u51e0\u4e4e\u662fO(1)\u7684\u590d\u6742\u5ea6\uff09\u548c\u4e00\u4e2a\u961f\u5217\uff08queue\uff09\u6765\u5b58\u653e\u5f53\u524d\u5b58\u5728\u7684\u6570\u636e\u3002\u67e5\u627e\u7528\u96c6\u5408\uff0c\u5220\u9664\u63d2\u5165\u7528\u961f\u5217\uff0c\u540c\u65f6\u628a\u96c6\u5408\u4e2d\u76f8\u5e94\u7684\u5143\u7d20\u5220\u6389\u3002\u8fd8\u4e0d\u660e\u767d\uff1f\u6ca1\u4e8b\uff0c\u5177\u4f53\u8bf4\u4e0b\u3002\n\n\u6bcf\u5f53\u6709\u4e00\u4e2a\u5143\u7d20\u8fdb\u5165\uff0c\u5148\u68c0\u67e5\u5185\u5b58\u4e2d\u662f\u5426\u5b58\u5728\u8fd9\u4e2a\u5143\u7d20\u3002\u5982\u679c\u5b58\u5728\u5219\u7f6e\u4e4b\u4e0d\u7406\uff0c\u5426\u5219\uff0c\u5c31\u8fdb\u5165\u63d2\u5165\u6d41\u7a0b\uff08\u540c\u65f6\u8ba1\u6570\u5668\u52a01\uff09\u3002\n\n\u63d2\u5165\u8981\u63d2\u5165\u4e24\u4e2a\u5730\u65b9\uff0c\u961f\u5217\u548c\u96c6\u5408\u90fd\u9700\u8981\u3002\u63d2\u5165\u65f6\u9996\u5148\u68c0\u67e5\u961f\u5217\u662f\u5426\u5df2\u6ee1\uff0c\u5df2\u6ee1\u5219\u4ece\u961f\u5217\u4e2d\u5220\u9664\u961f\u5934\u5143\u7d20\uff0c\u540c\u65f6\u628a\u961f\u5934\u5143\u7d20\u4ece\u96c6\u5408\u4e2d\u5220\u6389\u3002\u4e4b\u540e\u5219\u5728\u961f\u5c3e\u63d2\u5165\u9700\u8981\u67e5\u627e\u7684\u5143\u7d20\uff0c\u540c\u65f6\u628a\u8fd9\u4e2a\u5143\u7d20\u63d2\u5165\u5230\u96c6\u5408\u4e2d\u3002\u8fd9\u5c31\u7efc\u5408\u8fd0\u7528\u4e86\u961f\u5217\u7684\u6027\u8d28\u548c\u96c6\u5408\u7684\u9ad8\u6548\u7387\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<queue>\n#include<unordered_set>\nusing namespace std;\nint main(int argc, char* argv[])\n{\n    queue<int> q;\n    unordered_set<int> s;\n    int m,n,x,ans=0;\n    scanf(\"%d %d\",&m,&n);\n    while(n--)\n    {\n        scanf(\"%d\",&x);\n        if(!s.count(x))\n        {\n            ans++;\n            if(q.size()>=m)\n            {\n                s.erase(q.front());\n                q.pop();\n            }\n            s.insert(x);\n            q.push(x);\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1554211425,
        "uid": 181612,
        "name": "wancong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "~~\u5c0f\u767d\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3:~~\n\n\u8fd9\u91cc\u5c0f\u767d\u60f3\u5230\u7684\u601d\u8def\u5c31\u662f\u66b4\u529b\u641c\u7d22\uff0c\u672c\u6765\u4ee5\u4e3a\u4f1a\u8d85\u65f6\u7684\uff0c\u4f46\u6700\u540e\u53d1\u73b0\u7adf\u7136\u8fc7\u4e86\uff01\n\n\u601d\u8def\u5c31\u662f\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u5b57\u5178\uff0c\u53e6\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u6587\u7ae0\u5355\u8bcd\u6570.\u521d\u59cb\u5316\u5b57\u5178\u6570\u7ec4\uff0c\u5e76\u4e14\u8bfb\u5165\u5355\u8bcd\u540e\u3002\u5f00\u59cb\u4ece\u5b57\u5178\u6570\u7ec4\u4e2d\u4e00\u4e2a\u4e2a\u5bf9\u6bd4\uff0c\u5982\u679c\u627e\u4e0d\u5230\u8fd9\u4e2a\u5355\u8bcd\u67e5\u5b57\u5178\u7684\u6b21\u6570cnt\u5c31\u8981+1\uff1b\n\n\u53e6\u5916\u8fd9\u4e2a\u9898\u76ee\u8981\u6c42\u5148\u8fdb\u5148\u51fa\uff0c\u4e8e\u662f\u6211\u53c8\u8bbe\u7f6e\u4e00\u4e2acircle\u53d8\u91cf\u7528\u6765\u8868\u793a\u6bcf\u6b21\u5b57\u5178\u6570\u7ec4\u6ee1\u4e86\u4e4b\u540e\u8981\u66ff\u6362\u7684\u5143\u7d20\u4f4d\u7f6e\u3002circle\u521d\u59cb\u5316\u4e3a0\uff0c\u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u627e\u4e0d\u5230\u7684\u8bdd\uff0ccnt++\uff0c\u5e76\u4e14circle++\uff0c\u5f53circle\u5230\u8fbe\u5185\u5b58\u5bb9\u91cf\u662f\uff0ccircle\u5f52\u96f6\n\n\u53e6\u5916\u7528\u6765\u8868\u793a\u5355\u8bcd\u7684\u662f\u975e\u8d1f\u6574\u6570\uff0c\u5176\u4e2d\u5305\u62ec0\uff0c\u4f46\u6211\u4e4b\u524d\u628a\u5b57\u5178\u6570\u7ec4\u521d\u59cb\u5316\u4e860\uff0c\u6240\u4ee5\u5c31\u9519\u4e86orz\n\n\u4e0b\u9762\u770b\u4ee3\u7801\u5427\n\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\nint main()\n{\n\tusing\tnamespace std;\n\tint cnt2=0;\n\tint m, n,i,cnt=0,isfind=0,j,circle=0;\n\tcin >> m >> n;\n\tint *p = new int[m];\n\tint*q = new int[n];\n\tfor (i = 0; i < n; i++)\n\t{\n\t\tcin >> q[i];\t\t\t\t//\u8bfb\u5165\u5355\u8bcd\u6570\n\t}\n\tfor(i = 0; i < m; i++)\n\t{\n\t\tp[i] = -1;\t\t\t\t//\u4f7f\u5b57\u5178\u4e2d\u7684\u6570\u521d\u59cb\u5316\u4e3a-1\uff1b\n\t}\n\tfor (i = 0; i < n; i++)\n\t{\n\n\t\tisfind = 0;\n\t\tfor (j = 0; j < m; j++)\t\t//\u5f00\u59cb\u4e0e\u5b57\u5178\u6bd4\u5bf9\n\t\t{\n\t\t\tif (q[i] == p[j])\n\t\t\t{\n\t\t\t\tisfind = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (isfind == 0)\n\t\t{\t\n\t\t\tp[circle] = q[i];\n\t\t\tcircle++;\t\t\t\t//\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c06\u65b0\u5355\u8bcd\u5b58\u5165\u5b57\u5178\n\t\t\tif (circle == m )\n\t\t\t{\n\t\t\t\tcircle = 0;\t\t\t\t//circle\u5230\u8fbe\u5185\u5b58\u5bb9\u91cf\uff0c\u8fdb\u884c\u5f52\u96f6\n\t\t\t}\n\t\t\tcnt++;\n\n\t\t}\n\t\t\n\t}\n\tcout << cnt;\n\n\n}\n```",
        "postTime": 1550311976,
        "uid": 149257,
        "name": "vegetableman",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u96be\u9053\u6ca1\u6709\u4eba\u7528\u961f\u5217\u505a\u5417\uff1f\u961f\u5217\u4f1a\u5f88\u4f24\u5fc3\u7684\u3002\n\u961f\u5217\u662fSTL\u6a21\u677f\u5e93\u91cc\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4ee5\u4e0b\u662f\u57fa\u672c\u7528\u6cd5\uff1a\n```cpp\nqueue<int>a;/*\u5b9a\u4e49\u4e00\u4e2a\u53eba\u7684\u961f\u5217\uff0c\u91cc\u9762\u7684\u6570\u636e\u7c7b\u578b\u662f\u6574\u5f62\u3002*/\na.push(b);//\u5411a\u7684\u672b\u5c3e\u8ffd\u52a0\u5143\u7d20b\u3002\na.pop();//\u5f39\u51faa\u7684\u9996\u5143\u7d20\u3002\na.front();//\u53d6\u9996\u5143\u7d20\uff08\u4f46\u4e0d\u5220\u9664\uff09\u3002\n```\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nqueue<int>a; //STL\u6a21\u677f\u7684\u961f\u5217\u6570\u636e\u7c7b\u578b\nbool cur(int x) //\u904d\u5386\u51fd\u6570\n{\n    int r,bs;\n    bs=a.size();\n    bool rt=true;\n    if(a.size()!=0)//\u662f\u5426\u6709\u5143\u7d20\n    {\n        for(int j=1;j<=bs;j++)\n        {\n            r=a.front();//\u53d6\u9996\u5143\u7d20\n            a.pop();//\u5f39\u51fa\u9996\u5143\u7d20\n            if(r==x)//\u5339\u914d\uff0c\u4e0d\u7528\u67e5\u8bcd\u5178\n            {\n                rt=false;\n            }\n            a.push(r);//\u5165\u961f\n        }\n        return (rt);\n    }\n    else\n    {\n        return true;//\u5982\u679c\u6ca1\u6709\u5143\u7d20\uff0c\u5c31\u8fdb\u884c\u67e5\u627e\n    }\n}\nint main(void)\n{\n    int b,n,m,ans=0;\n    bool flag=true;\n    cin >> m >> n;\n    for(int i=0;i<=n-1;i++)\n    {\n        cin >> b;\n        flag=cur(b);\n        if(flag)//\u5982\u679c\u9700\u8981\u67e5\u627e\n        {\n            if(a.size()==m)//\u5728\u5185\u5b58\u6ee1\u4e86\u7684\u60c5\u51b5\u4e0b\uff0c\u5f39\u51fa\u7b2c\u4e00\u4e2a\u5355\u8bcd\n            {\n                a.pop();\n            }\n            a.push(b);//\u653e\u5165\u65b0\u5355\u8bcd\n            ans++;//\u67e5\u627e\u4e00\u6b21\n        }\n    }\n    cout << ans;//\u8ba1\u6570\n    return 0;\n}\n```",
        "postTime": 1541582289,
        "uid": 147780,
        "name": "\u7a7a\u9280\u5b50",
        "ccfLevel": 0,
        "title": "\u961f\u5217\u505a\u6cd5"
    },
    {
        "content": "\u8bf7\u6559\u5927\u725b\uff1a\u6d4b\u8bd5\u6570\u636e\u7ed9\u7684M<=100\uff1b\u4e3a\u5565\u6211\u5f00[200]\u6570\u7ec4\u8fd8\u662fRE\n\u9644\u4ee3\u7801\uff08\u6700\u540e\u6539\u6210[1001]\u624dAC\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dl[1001];\nint main()\n{\n\tint m,n,num=0,tail=0;\n\tbool flag=0;\n\tscanf(\"%d%d\",&m,&n);\n\tint i,j,k;\n\tfor(i=1;i<=m;i++)dl[i]=-1;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tint a;scanf(\"%d\",&a);\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(dl[j]==a){\n\t\t\t\tflag=1;j=m+1;\n\t\t\t}\n\t\t}\n\t\tif(!flag){\n\t\t\tnum++;\n\t\t\tif(tail<m)dl[++tail]=a;\n\t\t\telse{\n\t\t\tfor(k=1;k<=n-1;k++)dl[k]=dl[k+1];\n\t\t\tdl[m]=a;\n\t\t\t}\n\t\t}\n\t\tflag=0;\n\t}\n\tprintf(\"%d\",num);\n\treturn 0;\n}\n```",
        "postTime": 1540706705,
        "uid": 123663,
        "name": "calmness",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "# \u8fd9\u9053\u9898\u53ea\u8981\u7eaf\u6a21\u62df!\n\u4e2a\u4eba\u8ba4\u4e3a\u4e0d\u80fd\u7b97\u5f97\u4e0a\u666e\u53ca\u9898\n\n\u65e2\u7136\u662f\u6a21\u62df\u6211\u4e5f\u5c31\u4e0d\u591a\u8bb2\u4e86\n\n### \u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3fffffff\nusing namespace std;\nint m,n,a[1005],p[1005],x=1,ans;//a\u4e3a\u5355\u8bcd\u6570\u7ec4\uff0cp\u4e3a\u50a8\u5b58\u5355\u5143\uff0cx\u4e3a\u65b0\u7684\u5355\u5143\u7684\u7f16\u53f7\nint main()\n{\n\tfor(int i=0;i<1005;i++)p[i]=inf;//\u9632\u6b62\u5355\u8bcd\u51fa\u73b00\uff0c\u521d\u59cb\u5316\u50a8\u5b58\u5355\u5143\u4e3ainf\n\tcin>>m>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(a[i]==p[j])break;//\u50a8\u5b58\u5355\u5143\u4e2d\u641c\u5230\u4e86\u5c31\u8df3\u8fc7\n\t\t\tif(j==m){//\u5982\u679c\u641c\u5230\u6700\u540e\u8fd8\u6ca1\u6709\n\t\t\t\tp[x]=a[i];//\u50a8\u5b58\n\t\t\t\tif(x==m)x=1;//\u50a8\u5b58\u6ee1\u4e86\u5c31\u5220\u9664\u7b2c\u4e00\u4e2a\u50a8\u5b58\u5355\u5143\u5e76\u8bfb\u5165\n\t\t\t\telse x++;\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1539248815,
        "uid": 51234,
        "name": "s5_gan",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u628a\u5355\u8bcd\u5b58\u5165\u5185\u5b58\uff0c\u5185\u5b58\u6ee1\u4e86\u5219\u6e05\u9664\u6700\u5148\u5b58\u5165\u7684\u5355\u8bcd\uff0c\u7b26\u5408\u5148\u8fdb\u5148\u51fa\uff0c\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u7528\u961f\u5217\u6765\u8fdb\u884c\u6a21\u62df\u3002\u81f3\u4e8e\u5982\u4f55\u4f7f\u7528\u961f\u5217\uff0c\u53ef\u4ee5\u4f7f\u7528c++\u4e2d\u7684STL\uff0c\u4f46\u5c31\u8fd9\u9053\u9898\u800c\u8a00\u5229\u7528\u6570\u7ec4\u6765\u6784\u5efa\u961f\u5217\u4f3c\u4e4e\u66f4\u52a0\u65b9\u4fbf\uff0c\u8fd9\u91cc\u7ed9\u51fa\u6211\u7684\u505a\u6cd5\uff0c\u4e3b\u8981\u601d\u8def\u662f\u5229\u7528\u6a21m\u5269\u4f59\u7c7b\n```c\n#include<stdio.h>\nint main()\n{int M,N,m[101],i,j,k,n,count=0;\n\tscanf(\"%d%d\",&M,&N);\n\tfor(i=0;i<M;i++)  m[i]=-1;//\u6ce8\u610f\u5355\u8bcd\u662f\u975e\u8d1f\u6574\u6570\u53ef\u80fd\u4e3a\u96f6\n\tfor(i=0;i<N;i++)\n\t{scanf(\"%d\",&n);\n\t\tfor(j=0;j<M;j++)  if(n==m[j])  goto abc;\n        m[count%M]=n;count++;//\u5982\u679c\u5355\u8bcd\u4e0d\u5728\u5185\u5b58\u4e2d\n\t\tabc:;\n\t}\n\tprintf(\"%d\",count);\n    return 0;\n}\n```",
        "postTime": 1537707877,
        "uid": 116830,
        "name": "\u4e94\u70b9\u5171\u5706",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "#### \u5199\u4e2a\u5e26\u7d22\u5f15\u7684\u4e00\u6b21\u5b9a\u4f4d\u9898\u89e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\n# \u601d\u8def\uff1a\n1\u3001\u8bbe\u7f6e\u4e00\u4e2a\u7d22\u5f15\u6570\u7ec4inMemory\uff0c\u7531\u4e8e\u6837\u672c\u7a7a\u95f4\u57281000\u4ee5\u5185\uff0c\u6240\u4ee5\u5927\u5c0f\u4e3a1005\n2\u3001\u8bbe\u7f6e\u4e00\u4e2a\u961f\u5217\u6570\u7ec4q\u7528\u4e8e\u6a21\u62df\u5185\u5b58\u7a7a\u95f4\n3\u3001\u8bbe\u7f6e\u4e00\u4e2a\u6307\u9488ind\u7528\u4e8e\u6307\u5411\u5f53\u524d\u961f\u5217\u7684\u5c3e\u90e8\n# \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<memory.h> \nusing namespace std;\n//\u8bbe\u7f6einmemory\u6570\u7ec4\u5b58\u653e\u6bcf\u79cd\u5355\u8bcd\u662f\u5426\u5728\u5185\u5b58\u4e2d\u5b58\u653e\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u7b49\u4e8e0\u4e0d\u5728\u5185\u5b58\u4e2d\n//\u8bbe\u7f6eq\u6570\u7ec4\u4e3a\u961f\u5217\uff0c\u91cc\u9762\u5b58\u653e\u5355\u8bcd\uff0c\u5982\u679c\u4e3a-1\uff0c\u5219\u8868\u793a\u7a7a\u5185\u5b58 \n//ind\u4e3a\u5f53\u524d\u5185\u5b58\u7684\u961f\u5217\u5c3e\u90e8\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e\u4e0d\u51fa\u961f\uff0c\u53ea\u662f\u8986\u76d6\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u961f\u5934\u6307\u9488 \nint main()\n{\n\tint inMemory[1005];\n\tint q[105]; \n\tint ind=1;\n\tmemset(inMemory,0,sizeof(int)*1005);//\u521d\u59cb\u5316\u7d22\u5f15 \n\tfor(int i = 1;i<=105;i++)//\u521d\u59cb\u5316\u961f\u5217 \n\t\tq[i]=-1;\n\tint m,n,count=0;\n\tcin >> m >> n;\n\tif(m==0)//\u9632\u5185\u5b58\u4e3a0\u7684\u5751 \n\t{\n\t\tcout << n;\n\t\treturn 0;\n\t}\n\tfor(int i = 1;i<=n;i++)\n\t{\n\t\tint input; \n\t\tcin >> input;\n\t\t//\u67e5\u627e\u662f\u5426\u5728\u5185\u5b58\u4e2d\n\t\tif(inMemory[input]<=0)//\u4e0d\u5728\u5185\u5b58\u4e2d \n\t\t{\n\t\t\tcount++;\n\t\t\tif(q[ind]>=0)//\u5185\u5b58\u4f4d\u7f6e\u6709\u6570\u636e\uff0c\u9700\u8981\u6e05\u9664\u539f\u6570\u636e \n\t\t\t\t inMemory[q[ind]]=0;\n\t\t\t//\u653e\u5165\u65b0\u6570\u636e\n\t\t\tq[ind]=input;//\u653e\u5165\u6570\u636e \n\t\t\tinMemory[q[ind]]=ind;//\u653e\u5165\u7d22\u5f15\n\t\t\tif(ind>=m)//\u8ba9\u5185\u5b58\u5faa\u73af\uff0c\u5e76\u6539\u53d8\u6307\u9488 \n\t\t\t\tind = 1;\n\t\t\telse\n\t\t\t\tind++;\t\n\t\t} \n\t}\n\tcout << count<<endl;\n\treturn 0; \n}\n```\n",
        "postTime": 1535446285,
        "uid": 55365,
        "name": "zty2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\nusing namespace std;\nint m,n,s=0;\nint a[15000];//\u6570\u7ec4\u5c3d\u91cf\u5f00\u5f97\u5927\u70b9\nint z[10001];//\u6570\u7ec4\u5c3d\u91cf\u5f00\u5f97\u5927\nbool chazhao(int x)\n{\n    for(int i=0;i<m;i++)\n    {\n        if(z[i]==x)return true;\n    }\n    for(int k=0;k<m-1;k++)z[k]=z[k+1];\n    z[m-1]=x;    \n    return false;\n}\nint main()\n{\n    cin>>m>>n;\n    for(int j=0;j<m;j++)z[j]=-1;//\u5728\u7b2c\u4e00\u6b21\u4ee3\u7801\u4e2d\u5168\u5c40\u6570\u7ec4\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u800c\u9898\u76ee\u4e2d\u8bf4\u5355\u8bcd\u6570\u662f\u975e\u8d1f\u6570\uff0c\u56e0\u6b64\u4e22\u638910\u5206\uff0cso,\u8fd9\u4e2a\u521d\u59cb\u503c\u4ee3\u7801\u5f88\u91cd\u8981\uff01\n    for(int i=0;i<n;i++)\n    {\n    cin>>a[i];\n    if(!chazhao(a[i]))s++;            \n    }\n    cout<<s;\n    return 0;\n}\n```",
        "postTime": 1527947277,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "### \u5e9f\u8bdd\u4e0d\u8bf4\uff0c\u76f4\u63a5\u628a\u4ee3\u7801\u5949\u4e0a\n~~\u5176\u5b9e\u662f\u56e0\u4e3a\u6211\u81ea\u5df1\u4e5f\u4e0d\u77e5\u9053\u6211\u662f\u7528\u4ec0\u4e48\u65b9\u6cd5\u505a\u7684~~\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,ans,t;\nbool b;\n\nint main(){\n\tcin>>m>>n;//\u8bfb\u5165\n\tint a[n];//\u5b9a\u4e49\u4e00\u4e2an\u5927\u5c0f\u7684\u6570\u7ec4\n\tmemset(a,0,sizeof(a));//\u6e05\u96f6\n\tfor(int i=0;i<n;i++)cin>>a[i];//\u5faa\u73af\u8bfb\u5165\n\tint nc[m];//\u5b9a\u4e49\u4e00\u4e2am\u5927\u5c0f\u7684\u6570\u7ec4\n\tmemset(nc,-1,sizeof(nc));//\u6e05\u7406\u6210-1\uff0c\u4e0d\u6e05\u96f6\u662f\u4e3a\u4e86\u4fbf\u4e8e\u67e5\u627e\uff0c\u9632\u6b62\u67090\u5b58\u5165\u5185\u5b58\n\tfor(int i=0;i<n;i++){//\u6328\u4e2a\u627e\uff0c\u770ba[i]\u5bf9\u5e94\u7684\u6570\u6709\u6ca1\u6709\u5728\u5185\u5b58\u91cc\u6709\n\t\tfor(int j=0;j<m;j++){\n\t\t\tif(a[i]==nc[j]){\n\t\t\t\tb=1;//\u5982\u679c\u6709\u90a3\u4e2a\u6807\u8bb0\u4e00\u4e0b\uff0c\u7136\u540e\u8df3\u51fa\u67e5\u627e\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!b){//\u5982\u679c\u6ca1\u6709\u6807\u8bb0\n\t\t\tans++;//\u67e5\u627e\u5b57\u5178\u7684\u6b21\u6570\u52a0\u4e00\n\t\t\tif(nc[m-1]!=-1){//\u5982\u679c\u5185\u5b58\u5df2\u7ecf\u5b58\u6ee1\u4e86\n\t\t\t\tnc[0]=-1;//\u628a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u6e05\u7a7a\u4e3a-1\n\t\t\t\tfor(int j=0;j<m-1;j++)swap(nc[j],nc[j+1]);//\u628a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u653e\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u628a\u5176\u4f59\u6240\u6709\u4f4d\u7f6e\u90fd\u5f80\u524d\u79fb\u4e00\u4f4d\n\t\t\t}\n\t\t\tfor(int j=m-1;j>=0;j--){//\u627e\u6ca1\u6709\u88ab\u8d4b\u503c\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\n\t\t\t\tif(nc[j]!=-1){\n\t\t\t\t\tt=j+1;//\u6ce8\u610f\u8981\u52a0\u4e00\uff0c\u5426\u5219\u5c31\u4f1a\u53d8\u6210\u8d4b\u503c\u8fc7\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\n\t\t\t\t\tbreak;//\u9000\u51fa\u67e5\u627e\n\t\t\t\t}\n\t\t\t}\n\t\t\tnc[t]=a[i];//\u628a\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u8d4b\u503c\u7684\u5185\u5b58\u8d4b\u503c\n\t\t}\n\t\tb=0;//\u6ce8\u610f\u8981\u8bb0\u5f97\u6e05\u7a7a\n\t}\n\tcout<<ans<<endl;//\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1524994690,
        "uid": 78456,
        "name": "Chiaro",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u7528stl\u7684\u540c\u5b66\u597d\u5c11\u554a\uff0c\u8d76\u7d27\u6765\u4e00\u53d1\u3002 \n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7528queue\u6a21\u62df\u5185\u5b58\uff0c\u4ee5\u4e0b\u4e3a\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint m,n,a,ans;\nint pop;\nqueue<int>s;\n\nint main()\n{\n    cin>>m>>n;\n    for(int i=0;i<n;i++)\n    {\n        cin>>a;\n        bool bo=true;\n        for(int j=0;j<s.size();j++)\n        {\n            pop=s.front();   //\u53d6\u6700\u524d\u7aef\u7684\u503c\n            s.pop();    //\u5f39\u51fa\n            s.push(pop);    //\u76f8\u5f53\u4e8e\u5faa\u73af\uff0c\u628a\u6700\u524d\u7aef\u7684\u503c\u5728\u5f39\u5165\n            if(a==pop && bo) bo=false;   //\u8fd9\u91cc\u4e0d\u80fd\u9000\u51fa\uff0c\u5426\u5219\u5c31\u6539\u53d8\u4e86\u5bf9\u5217\n        }\n        if(bo)\n        {\n            ans++;   //\u627e\u5230\u65b0\u5355\u8bcd\n            if(s.size()==m) s.pop();   //\u6ee1\u4e86\u5c31\u5f39\u51fa\n            s.push(a);    //\u52a0\u5165\u65b0\u5355\u8bcd\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1524198451,
        "uid": 51229,
        "name": "fanhy",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u88f8\u6a21\u62df\n\n\u8fb9\u8f93\u5165\u8fb9\u8ba1\u7b97\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u628a\u7b54\u6848\u52a0\u4e00\n\n\u8fd9\u9898\u7684\u96be\u70b9\u5e94\u8be5\u5728\u4e8e\u5185\u5b58\u5904\u7406\n\n\u641e\u8d77\u6765\u5f88\u9ebb\u70e6\u554a\n\n\u4e0d\u641e\u961f\u5217~~\uff08\u5176\u5b9e\u662f\u4e0d\u4f1a\uff09~~\n\n\u56e0\u4e3a\u65b0\u5355\u8bcd\u8fdb\u5165\u5185\u5b58\u7684\u6b21\u5e8f\u662f(\u4e0b\u68070\u5f00\u59cb)\n\n0   1   2   3 ... n-1   n  0   1   2   3  ...\n\n\u800c\u67e5\u627e\u6b21\u6570\u662f\n\n0   1   2   3 ... n-1   n n+1 n+2 n+3 n+4 ...\n\n\u6240\u4ee5\u7528\u5f53\u524d \u67e5\u627e\u6b21\u6570 mod \u5185\u5b58\u957f\u5ea6 \u5373\u53ef\u5f97\u51fa\u73b0\u5728\u7684\u5355\u8bcd\u5e94\u8be5\u653e\u54ea\u91cc\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u5185\u5b58\u4e2d\u6700\u65e9\u8fdb\u5165\u7684\u90a3\u4e2a\u5355\u8bcd\u7684\u4f4d\u7f6e\uff09\n\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,m,word[1010],ans,place[1010];\n//word\u5b58\u5355\u8bcd\uff0cplace\u662f\u5185\u5b58\uff0cans\u662f\u67e5\u627e\u6b21\u6570\nbool find(int x){//\u67e5\u627e\u5185\u5b58\u4e2d\u662f\u5426\u51fa\u73b0\u8fc7x\n    for(int i=0;i<m;++i){//\u6570\u636e\u4e0d\u5927\u76f4\u63a5\u66b4\u529b\u641e~~\uff08\u4e0d\u4f1a\u522b\u7684\uff09~~\n        if(place[i]==x){\n            return true;//\u627e\u5230\u4e86\u5c31\u8fd4\u56detrue\n        }\n    }\n    return false;\u6ca1\u6709\u627e\u5230\n}\nvoid set(int a[],int n,int x){//\u4e0d\u60f3\u7528memset\uff0c\u81ea\u5df1\u641e\u4e86\u4e00\u4e2a~~\uff08\u4e0d\u719f\uff09~~\n    for(int i=0;i<n;++i){//\u5168\u90e8\u7f6e\u4e3ax\n        a[i]=x;\n    }\n    return;\n}\nint main(){\n    cin>>m>>n;\n    set(word,n,-1);\n    set(place,m,-1);\n    //\u5148\u628a\u4e24\u4e2a\u6570\u7ec4\u90fd\u7f6e\u4e3a-1\uff08\u6709\u7684\u70b9\u4f1a\u51fa\u73b00\u7684\u6570\u636e\uff09\n    for(int i=0;i<n;++i){\n        cin>>word[i];\n        if(!find(word[i])){//\u5982\u679c\u6ca1\u6709\u627e\u5230\u8fd9\u4e2a\u5355\u8bcd\n            place[ans%m]=word[i];\n//\u7b2cans%m\u4e2a\u5c31\u662f\u5f53\u524d\u72b6\u6001\u4e0b\u6700\u65e9\u8fdb\u5165\u5185\u5b58\u7684\u5355\u8bcd\u7684\u4e0b\u6807\n            ++ans;\n        }\n    }\n    cout<<ans;//\u5b8c\u6210\u5566\n    return 0;\n}\n```\n\u6700\u540e\u7ed9\u81ea\u5df1\u6253\u4e2a\u5e7f\u544a\n\uff08\u849f\u84bb\u535a\u5ba2 https://www.luogu.org/blog/WAFUN/)\n",
        "postTime": 1515807544,
        "uid": 37539,
        "name": "_Qer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u65b9\u6cd5\u5206\u6790\uff1a\n\n1.\u8bfb\u5165m\u4e0en\u7684\u503c\uff1b\n\n2.\u5229\u7528for\u5faa\u73af\u8bed\u53e5\uff0c\u4e00\u8fb9\u8bfb\u5165\u4e00\u8fb9\u505a\uff1b\n\n3.\u7528\u4e00\u4e2abool\u6570\u7ec4\u5f53\u4f5c\u5185\u5b58\uff0c\u6876\u6392\u601d\u60f3\uff0cO(n)\u65f6\u95f4\u590d\u6742\u5ea6\uff1b\n\n4.\u7ed3\u675f\uff1b\n\nAC\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\uff0c\u8c22\u7eddctrl+c\uff0cctrl+v\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\nint m,n,k,t,c;\nbool b[10005];                   //\u5f00\u5927\u4e00\u70b9\uff0c\u4ee5\u514d\u7206\u6389\nint a[10005];                    //a\u6570\u7ec4\u5b58\u653e\u67e5\u5b57\u5178\u7684\u5148\u540e\u987a\u5e8f\uff0cb\u6570\u7ec4\u662f\u5224\u65ad\u5185\u5b58\u91cc\u6709\u6ca1\u6709\u8fd9\u4e2a\u6570\nint main()\n{\n    ios::sync_with_stdio;       //\u5c0f\u5c0f\u7684\u4f18\u5316\uff0c\u8ba9cin\u4e0escanf\u4e00\u6837\u5feb\n    cin>>m>>n;                  //\u8bfb\u5165m\u4e0en\u7684\u503c\n    for(int i=0;i<n;i++)\n    {\n        cin>>k;                 //\u8bfb\u5165\u5f53\u524d\u5355\u8bcd\n        if(b[k]==0)             //\u5982\u679c\u5185\u5b58\u4e2d\u6ca1\u6709\uff0c\u5219\u2014\u2014\n        {\n            a[t]=k;             //\u7528\u4e8e\u8bb0\u5f55\u662f\u7b2c\u51e0\u4e2a\uff0c\u65b9\u4fbf\u540e\u9762\u5220\u9664\u6700\u65e9\u7684\u4e00\u4e2a\n            b[k]=1;             //\u628a\u7b2ck\u6876\u53d8\u6210true\n            t++;                //\u7d2f\u52a0\u67e5\u5b57\u5178\u6b21\u6570\n            if(t%m>=0&&t>m)     //\u5224\u65ad\uff0c\u5982\u679c\u5f53\u524d\u5185\u5b58\u4e2d\u5df2\u5b58\u5165\u7684\u5355\u8bcd\u6570\u8d85\u8fc7m-1\uff0c\u5219\u2014\u2014\n            {\n                b[a[c]]=0;      //\u628a\u6700\u65e9\u8bfb\u5165\u7684\u6876\u53d8\u62100\n                c++;            //\u5c06c\u7684\u503c\u52a0\u4e00\n            }\n        }\n    }\n    cout<<t;                    //\u8f93\u51fat\u7684\u503c\n}\n```\n\u56de\u987e\uff1a\n\u8981\u6ce8\u610fbool\u7c7b\u578b\u5728\u5916\u9762\u5b9a\u4e49\u9ed8\u8ba4\u503c\u662f0\uff0c\u8fd8\u6709\u6570\u7ec4\u4e0d\u80fd\u5f00\u592a\u5c0f\u4e86\u3002\u5927\u5bb6\u4e5f\u53ef\u4ee5\u7528\u961f\u5217\u505a\u3002\n",
        "postTime": 1514021438,
        "uid": 57931,
        "name": "Well_whz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "    \n```cpp\n#include<cmath>\n#include<iostream>\n#include<cstdio>\n#define SIZE 1005 //\u8bb0\u5f97\u5f00\u5927\u4e00\u70b9\uff1b\u5c0f\u4e86\u4f1aWA\u6389\uff1b\nusing namespace std;\nint n,t=0,m=0;\nint num[SIZE],M[SIZE]; / /\u6a21\u62df\u961f\u5217\nint yon(int n)  //\u5224\u65ad\u662f\u4e0d\u662f\u5728\u961f\u5217\u91cc\n    {\n        for (int i=0;i<m;i++)\n        {\n            if(n==M[i])    //\u53ea\u8981\u5728\uff0c\u65e0\u8bba\u5728\u54ea\uff0c\u90fd\u4f1a\u8fd4\u56de \u771f\n            return 1;\n        }\n        return 0;//  \u4e0d\u5728\u961f\u5217\u91cc\u5c31\u8fd4\u56de \u5047\n    }\nint mset(int n)   // \u961f\u5217\u6a21\u62df\uff0c\u4ece\u540e\u9762\u5165\u961f\uff08\u8fd9\u9898\u6570\u636e\u6709\u5751\uff0c\u961f\u5217\u521d\u503c\u4e3a-1\uff1b\uff09\n    {\n        for (int i=1;i<m;i++)\n        {\n            M[i-1]=M[i];\n        }\n        M[m-1]=n;\n    }\nint main (void)\n{\n    for(int i=0;i<1001;i++)  //\u628a\u6a21\u62df\u7684\u961f\u5217 \u521d\u503c\u8d4b\u4e3a-1\uff1b\n    {M[i]=-1;}\n    scanf(\"%d %d\",&m,&n);\n    for (int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&num[i]);\n    }\n    for (int i=0;i<n;i++)\n    {\n        if (yon(num[i]));   //\u5224\u65ad\u662f\u4e0d\u662f\u5728\u961f\u5217\u91cc\uff0c\u5728\uff0c\u5c31\u6267\u884c\u4e00\u6761\u7a7a\u8bed\u53e5\uff1b\n        else\n        {\n            t++;\n            mset(num[i]);   //\u53ea\u6709\u4e0d\u5728\u961f\u5217\u91cc \u624d\u6267\u884c \u5165\u961f \u51fd\u6570\uff1b\n         }\n    }\n        printf(\"%d \",t);\n}\n```",
        "postTime": 1512092557,
        "uid": 72722,
        "name": "AndyXLaer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1vector\u7684\u9898\u89e3\u3002\n\n```cpp\n#include<vector>\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint main()\n{\n    int m,n,word,ans=0;\n    vector<int> dic;//\u5411\u91cf\n    scanf(\"%d%d\",&m,&n);\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&word);\n        if(find(dic.begin(),dic.end(),word)==dic.end())//\u6ca1\u627e\u5230\n        {\n            dic.push_back(word);//\u6dfb\u52a0\u81f3\u5185\u5b58\n            ans++;\n            if(dic.size()>m)dic.erase(dic.begin());//\u5220\u9664\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1485434509,
        "uid": 22659,
        "name": "\u8fdc\u5742\u51db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u75280\u6765\u5224\u65ad\uff0c\u7ed3\u679c\u53d1\u73b0\u597d\u51e0\u4e2a\u6570\u636e\u4e2d\u90fd\u67090\uff08\u5bb3\u6211\u627e\u4e86\u597d\u534a\u5929/(\u3112o\u3112)/~~\uff09\uff0c\u4e8e\u662f\u6539\u7528-1\u6765\u5224\u65ad\uff0c\u77ac\u95f4\u901a\u8fc7\n\n\u4e0b\u9762\u5949\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;//\u5b9a\u4e49\u6807\u793a\u7b26\nint m,n,i,j,s,g;//\u5b9a\u4e49\u53d8\u91cf\nbool b;\nint main()//\u5b9a\u4e49\u4e3b\u7a0b\u5e8f\n{\n        cin>>m>>n;//\u8bfb\u5165\u5185\u5b58\u5bb9\u91cf\u548c\u6587\u7ae0\u7684\u957f\u5ea6\n        int a[n]={0},r[m]={0};//\u5b9a\u4e49\u5185\u5b58\u548c\u6587\u7ae0\n        for(i=0;i<n;i++)//\u8bfb\u5165\u6587\u7ae0\n                cin>>a[i];\n        r[m-1]=-1; //\u5c06\u5185\u5b58\u7684\u6700\u540e\u4e00\u4f4d\u8bbe\u4e3a-1\n        for(i=0;i<n;i++)\n        {\n                b=false;//\u521d\u59cb\u5316b\n                for(j=0;j<g;j++)//\u4ece\u5185\u5b58\u4e2d\u627e\n                        if(a[i]==r[j])//\u5982\u679c\u627e\u5230\u4e86\u8fd9\u4e2a\u5355\u8bcd\n                        {\n                                b=true;//b\u53d8\u4e3a\u771f\n                                break;//\u9000\u51fa\u5faa\u73af\n                        }\n                if(b)//\u5982\u679c\u521a\u624d\u627e\u5230\u4e86\n                        continue;//\u9000\u51fa\u5faa\u73af\n                s++;//\u5916\u67e5\u5b57\u5178\u6b21\u6570+1\n                if(r[m-1]==-1)//\u5982\u679c\u5185\u5b58\u672a\u6ee1\uff08\u6700\u540e\u4e00\u4f4d\u8fd8\u672a\u4f7f\u7528\uff09\n                {\n                        r[g]=a[i];//\u5728\u5185\u5b58\u4e2d\u6dfb\u52a0\u6b64\u8bcd\n                        g++;\n                }\n                else//\u5426\u5219\uff08\u5185\u5b58\u5df2\u6ee1\uff09\n                {\n                        for(j=0;j<m-1;j++)//\u628a\u7b2c\u4e00\u4e2a\u50a8\u5b58\u7684\u66ff\u6362\u6389\n                            r[j]=r[j+1];\n                        r[m-1]=a[i];//\u5c06\u6700\u540e\u4e00\u4e2a\u8bbe\u4e3a\u6b64\u8bcd\n                }\n        }\n        cout<<s;//\u6253\u5370\u603b\u5916\u67e5\u5b57\u5178\u6b21\u6570\n        return 0;\n}\n\n```",
        "postTime": 1484707656,
        "uid": 24695,
        "name": "Wh_Xcjm",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u5faa\u73af\u961f\u5217\uff0c\u6c34\u9898\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#define MAXM 110\n#define MAXN 1010\nusing namespace std;\nint n,m,q[MAXM],a[MAXN],qo,qa,t,ans;\nvoid outque();\nvoid addque();\nint main(){\n    cin>>m>>n;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&t);\n        if(a[t]==0){\n            if(ans>=m)outque();\n            ans++;\n            addque();\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\nvoid outque(){//\u51fa\u961f\n    qo=(qo+1)%m;\n    a[q[qo]]=0;\n}\nvoid addque(){//\u5165\u961f\n    qa=(qa+1)%m;\n    q[qa]=t;\n    a[q[qa]]=1;\n}\n```",
        "postTime": 1482208988,
        "uid": 29172,
        "name": "shenchang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u7b2cn\u6b21\u653e\u7b2cn\u6a21m\u4f4d\u7f6e ,\u6a21\u62df\uff0c\u6c34\u9898\n\n  \n\n    \n     \n       \n\n    \n```cpp\n#include<iostream>    \nusing namespace std;  \nint m,n,i,j,l=0,sum=0;    \nint f=0;    \nint main()    \n{    \n    ios::sync_with_stdio(false);//\u4f18\u5316 \n    cin>>m>>n;   \n    int a[n],b[m]; \n    for(i=0;i<m;i++) b[i]=-1;    \n    for(i=0;i<n;i++) cin>>a[i]; \n    for(i=0;i<n;i++)    \n    {    \n        f=0;    \n        for(j=0;j<m;j++)    \n        {    \n            if(a[i]==b[j])    \n            {    \n                f=1;    \n                break;         \n            }    \n        }    \n            if(x==0)    \n            {    \n                b[l%m]=a[i];  \n                l++;  \n                sum++;      \n            }    \n    }    \n    cout<<sum;    \n}\n```",
        "postTime": 1481638947,
        "uid": 21860,
        "name": "cs_zhao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "```cpp\n#include<iostream> //\u7b80\u5355\u7684\u66ff\u6362\u95ee\u9898\uff0c\uff0c\uff0c        \nusing namespace std;\nint n,m,w=0,q;\nint a[100],s[1000],e=1;   //\u7533\u8bf7\u5185\u5b58a\u3010\u3011\uff0c\u6570\u7ec4s\u3010\u3011\uff1b \nint main()\n{\n    cin>>n>>m;\n    for(int i=0;i<n;i++){\n        a[i]=-1;          // \u91cd\u8981\u7684\u4e00\u6b65\uff0c\u6240\u6709\u9879\u4e3a-1\uff0c\u9632\u6b62\u662f\u3010\u3011\u4e2d\u76840\uff1b \n    }\n    for(int i=0;i<m;i++){\n        cin>>s[i];\n        bool bo=0;\n        for(int j=0;j<n;j++){\n            if(a[j]==s[i]){bo=1;break;}//\u5982\u679c\u627e\u5230\u8df3\u51fa\u5faa\u73af\uff0c\u4f7fbo\u4e3a\u771f\uff1b \n        }\n        if(!bo){                //\u5982\u679c\u672a\u88ab\u627e\u5230\uff0c\u66ff\u6362\uff1b \n            e%=n;                //\u4f7fa\u3010e\u3011\u59cb\u7ec8\u4e3a\u65e9\u8f93\u5165\u7684\u5185\u5b58\uff1b \n            a[e]=s[i];            //\u66ff\u6362 \n            e++;\n            w++;                //\u8bb0\u5f55\u5185\u5b58\u66ff\u6362\u6b21\u6570\uff1b \n        }\n    }\n    cout<<w;\n    return 0;\n}\n```",
        "postTime": 1479162794,
        "uid": 16213,
        "name": "\u51b0\u51bb\u8d64\u9053",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u6c34\u554a\uff0c\u7eaf\u6a21\u62df\uff0c\u4f46\u662f\u770b\u4f60\u4eec\u90fd\u5199\u7684\u597d\u957f\uff0c\u56e0\u4e3a\u6570\u636e<1000 \u6240\u4ee5\u8bb0\u5f55\u5934\u5c3e\uff0c\u628a\u6570\u636e\u5168\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\u4e0d\u5220\u9664\uff0c\u5f88\u65b9\u4fbf\u7684\uff0c\u518d\u5224\u65ad\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u9644\u4e0a\u4ee3\u7801\n\n\n```cpp\nvar a:array[1..2000] of longint;\n    m,n,i,j,k,ans,left,right:longint;\n    f:boolean;\nbegin\n  readln(m,n);\n  left:=1;\n  right:=0;\n  for i:=1 to n do\n  begin\n    f:=false;\n    read(k);\n    for j:=left to right do\n      if a[j]=k then begin f:=true; break; end;\n    if not f then\n    begin\n      inc(right);\n      a[right]:=k;\n    end;\n    if right-left+1>m then inc(left);\n  end;\n  writeln(right);\nend.\n```",
        "postTime": 1477657663,
        "uid": 13425,
        "name": "Ultimate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u6c34\u7684\u4e00\u9053\u9898\uff0c\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u53ef\u4ee5\u7528\u7ebf\u6027\u641c\u7d22\u3002\n\n\u4f46\u662f\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u5751\u7684\u9677\u9631\uff01\uff01\n\n\u4ee3\u7801\u9644\u4e0a\uff0c\u6709\u9677\u9631\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\n```cpp\n#include<cstdio>\nint word[2000];\nbool sch(int tgt,int range)//\u7ebf\u6027\u641c\u7d22\uff0c\u56e0\u4e3a\u6570\u636e<1000\uff0c\u4e0d\u4f1a\u8d85\u65f6\u3002 \n{\n    for(int i=0;i<range;i++)\n    {\n        if(word[i]==tgt)\n        {\n            return true;\n        }\n    }\n    return false;\n}\nint main()\n{\n    int mem,num,tm,wor,ans=0;\n    scanf(\"%d %d\",&mem,&num);\n    tm=0;\n    for(int i=0;i<2000;i++)\n    {\n        word[i]=-1;//\u6570\u7ec4\u521d\u59cb\u5316\u4e00\u5b9a\u8981\u521d\u59cb\u5316\u6210-1!!!!\n        //\u5b57\u6bcd\u4ee3\u53f7\u6709\u53ef\u80fd\u662f0\uff0c\u6240\u4ee5\u521d\u59cb\u5316\u62100\u4f1a\u51fa\u9519!!!!\n    }\n    for(int i=0;i<num;i++)\n    {\n        scanf(\"%d\",&wor);\n        //\u975e\u5e38\u8282\u7701\u7a7a\u95f4\u548c\u65f6\u95f4\u7684\u6a21\u62df  \n        if(tm>=mem)\n        {\n            tm=0;\n        }\n        if(!sch(wor,mem))\n        {\n            //\u81ea\u5df1\u8fdb\u884c\u8f6e\u56de\u3002\u3002\u3002 \n            ans++;\n            word[tm]=wor;\n            tm++;     \n        }\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1473053012,
        "uid": 20815,
        "name": "PhantasmDragon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5f88\u6c34\u7684\u9898\u76ee\u3002\u9996\u5148\u8bbe\u7acb\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u4e3aa\u548cb\uff0ca\u4e3a\u8981\u7ffb\u8bd1\u7684\u5355\u8bcd\uff0cb\u4e3a\u8bcd\u5e93\u3002\u5224\u65ada[i]\u662f\u5426\u548cb[j]\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u90a3\u4e48break\u3002\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48b\u6570\u7ec4\u5f53\u524d\u6240\u6709\u9879\u524d\u8fdb\u4e00\u4f4d\uff0c\u6700\u540e\u4e00\u4e2ab[m]\u7ed9\u6ca1\u6709\u67e5\u627e\u5230\u7684a[i]\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvar\n  m,n,i,j,k,num:longint;\n  a,b:array[1..10000] of longint;\n  t:boolean;\nbegin\n  num:=0;\n  readln(m,n);\n  for i:=1 to m do begin\n    b[i]:=1000000;\n  end;\n  for i:=1 to n do begin\n    read(a[i]);\n  end;\n  readln;\n  for i:=1 to n do begin\n    t:=false;\n    for j:=1 to m do begin\n      if a[i]=b[j] then begin\n        t:=true;\n        break;\n      end;\n    end;\n    if t=false then begin\n      inc(num);\n      for k:=2 to m do begin\n        b[k-1]:=b[k];\n      end;\n      b[m]:=a[i];\n    end;\n  end;\n  writeln(num);\nend.\n```",
        "postTime": 1471782441,
        "uid": 9464,
        "name": "ab1352574412",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "```cpp\nvar i,j,k,m,n,s,t:longint;\na,b:array[0..1000]of longint;\nf:boolean;\nbegin\n  read(m,n);\n  for i:=1 to n do read(a[i]);\n  fillchar(b,sizeof(b),0);\n  for i:=1 to n do\n  begin\n    f:=true;\n    for j:=1 to k do\n    if a[i]=b[j] then f:=false;//\u5982\u679c\u4e0d\u9700\u8981\u67e5\u5b57\u5178\uff0cF\u5b9a\u4e3afalse\n    if (f) and (k=m) then//\u5982\u679c\u5355\u5143\u5df2\u586b\u6ee1\u4e14\u6b64\u5355\u8bcd\u9700\u8981\u653e\u5165\u5185\u5b58\u4e2d\uff0c\u5219\uff1a\n    begin\n      for t:=1 to k do//\u628a\u5355\u5143\u4e2d\u7684\u5355\u8bcd\u5f80\u524d\u632a\u4e00\u683c\uff0c\u7a7a\u51fa\u4e00\u4e2a\u5185\u5b58\n      b[t-1]:=b[t];\n      b[k]:=a[i];//\u628a\u5355\u8bcd\u653e\u5165\u6700\u540e\u4e00\u4e2a\u5185\u5b58\u5355\u5143\u4e2d\n      b[0]:=0;//\u6e05\u7a7a\u6700\u65e9\u8fdb\u5165\u5185\u5b58\u7684\u90a3\u4e2a\u5355\u8bcd\n      s:=s+1;//\u67e5\u8bcd\u5178\u7684\u6b21\u6570+1\n    end;\n    if (f) and (k<m) then//\u5982\u679c\u5355\u5143\u672a\u586b\u6ee1\u4e14\u6b64\u5355\u8bcd\u9700\u8981\u653e\u5165\u5185\u5b58\u4e2d\uff0c\u5219\uff1a\n    begin\n      k:=k+1;\n      b[k]:=a[i];//\u5c06\u5355\u8bcd\u653e\u5165\u7b2ck\u4e2a\u5185\u5b58\n      s:=s+1;//\u67e5\u8bcd\u5178\u7684\u6b21\u6570+1\n    end;\n  end;\n  write(s);\nend.\n\u4e2a\u4eba\u8ba4\u4e3a\u4ee3\u7801\u633a\u7b80\u5355\u7684\uff0c\u6c42\u8fc7\u3002\u3002\u3002\u3002\n```",
        "postTime": 1468459372,
        "uid": 7496,
        "name": "\u8bfa\u8bfa_\u9648\u58a8\u77b3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684\u6a21\u62df\u9898\uff0c\u7528\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u770b\u8be5\u5355\u8bcd\u6709\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u53e6\u4e00\u4e2a\u6570\u7ec4\u7528\u6765\u5b58\u653em\u4e2a\u5185\u5b58\u5355\u4f4d\u91cc\u5df2\u5b58\u50a8\u7684\u5355\u8bcd\u3002\n\n```delphi\n\nvar\n  m,n,i,j,x,ans,la:longint;\n  a:array[1..100] of longint;\n  b:array[0..1000] of boolean;\nbegin\n  readln(m,n);\n  for i:=1 to n do\n  begin\n    read(x);\n    if b[x] then\n      continue{\u5df2\u51fa\u73b0\u8fc7\u7684\u5c31\u4e0d\u7528\u627e\u4e86}else\n    begin\n      inc(ans);{\u67e5\u627e\u6b21\u6570\u52a0\u4e00}\n      inc(la);{\u5b58\u50a8\u5360\u7528\u52a0\u4e00}\n      if la>m then{\u5982\u679cm\u4e2a\u5b58\u50a8\u5355\u5143\u6ee1\u4e86\uff0c\u5c31\u6570\u7ec4\u5e73\u79fb\u66ff\u6362}\n      begin\n        la:=m;\n        b[a[1]]:=false;\n        for j:=1 to m-1 do\n          a[j]:=a[j+1];\n      end;\n      a[la]:=x;{\u628a\u5f53\u524d\u7684\u653e\u8fdb\u6570\u7ec4}\n      b[x]:=true;\n    end;\n  end;\n  writeln(ans);\nend.\n\n```",
        "postTime": 1455585135,
        "uid": 10342,
        "name": "ArnoD",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u633a\u6c34\u7684\uff08\u5bf9\u4e8eC++\u515a\u6765\u8bf4\uff09\n\n\u6211\u4e2a\u4eba\u7528STL\u7684deque\u89e3\u51b3\u4e86\uff0c\u5176\u5b9e\u60f3\u60f3deque\u662f\u4e2a\u5f88\u4e0d\u9519\u7684\u89e3\u51b3\u65b9\u6848\u86e4:P\n\n\u8f93\u5165\u4e00\u6b21\u7acb\u523b\u5904\u7406\u6570\u636e\u3002\n\nPS\uff1aAC\u8fd8\u591a\u4e8f\u8fd9\u9898\u6570\u636e\u91cf\u4e0d\u662f\u5f88\u5927\u3002\n\n\u6570\u636e:mem\u4e3a\u9898\u76ee\u4e2d\u63cf\u8ff0\u7684\u5185\u5b58\uff1bw\u662f\u6bcf\u6b21\u8f93\u5165\u7684\u5355\u8bcd\u3002\n\n```cpp\n\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <queue>\nusing namespace std;\ndeque<int> mem;\nint w;\n\nint main() {\n    int m,n;\n    int ans=0;\n    bool flag;\n    cin>>m>>n;\n    for(int i=0; i<n; i++) {\n        flag=true;\n        scanf(\"%d\",&w);\n        //cout<<mem.size()<<endl;\n        for(int j=0; j<mem.size(); j++) {\n            if(mem[j]==w) {\n                flag=false;\n                break;\n            }\n        }\n        if(flag) {\n            if(mem.size()==m) {\n                mem.pop_front();\n                mem.push_back(w);\n                ans++;\n            } else {\n                mem.push_back(w);\n                ans++;\n            }\n        }\n        //cout<<\"ans\"<<i<<\":\"<<ans<<endl;\n    }\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1453908344,
        "uid": 14667,
        "name": "mike_he",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u4e00\u4e2a\u5355\u8bcd\u5f53\u524d\u5728\u4e0d\u5728\u5185\u5b58\u4e2d\u561b\u2026\u2026\u5c31\u4e0d\u7528\u6bcf\u6b21\u90fd\u904d\u5386\u4e86\u2026\u2026\n\n```cpp\n\n#include<iostream>\n#include<memory.h>\nusing namespace std;\nint m,n,ans,x,i,tail;\nbool f[1001];\nint main()\n{\n    cin>>m>>n;\n    int a[m];\n    memset(a,-1,sizeof(a));\n    for(;i<n;i++){\n        cin>>x;\n        if(!f[x]){//f[i]\u8868\u793ai\u5f53\u524d\u5728\u4e0d\u5728\u5185\u5b58\u4e2d\n            f[x]=++ans;\n            if(a[tail]==-1)a[tail]=x,tail=(tail+1)%m;\n            else f[a[tail]]=false,a[tail]=x,tail=(tail+1)%m;\n        }\n    }\n    cout<<ans;\n    \n    return 0;\n}\n\n```",
        "postTime": 1437492973,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "**C\u8bed\u8a00\uff0c\u961f\u5217+\u6a21\u62df\u3002**\n\ntail\u548ctop \u4f5c\u961f\u5217\u9996\u5c3e\uff0c\u76f8\u7b49\u65f6\u5185\u5b58\u4e3a\u7a7a\uff0c\u9996\u5c3e\u5dee=m\u65f6\u5185\u5b58\u5df2\u6ee1\u3002\n\n```cpp\n#include<stdio.h>\nint main(void)\n{\n    int Queue[2000],N[2000],m,n,i,j,top=1,tail=1,ans=0,flag; \n    scanf(\"%d %d\",&m,&n);\n    for(i=1;i<2000;i++)\n        Queue[i]=N[i]=-1; // \u6ce8\u610f\u4e0d\u80fd\u521d\u59cb\u5316\u4e3a0 \n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&N[i]);//\u8bfb\u53d6 \n    if(m==0){printf(\"%d\",n);return 0;} //\u7279\u5224\n    for(i=1;i<=n;i++)//\u904d\u5386\u6587\u7ae0 \n    {\n        flag=1;\n        for(j=tail;j<top;j++)     //\u904d\u5386\u5185\u5b58    \n            if(Queue[j] == N[i]) //\u5185\u5b58\u4e2d\u627e\u5230\u8be5\u5355\u8bcd \n                flag=0;\n        if(flag)                //\u5185\u5b58\u4e2d\u6ca1\u6709\u8be5\u5355\u8bcd \n        {\n            if(top-tail==m) //\u5185\u5b58\u5df2\u6ee1 \n                tail++;//\u5220\u53bb\u961f\u5c3e\u5143\u7d20\n            Queue[top++]=N[i];\n            ans++;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1436865802,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    },
    {
        "content": "\u8fd9\u662fc++\uff0c\u552f\u4e00\u4e00\u4e2a\u5389\u5bb3\u7684\u5730\u65b9\u5c31\u662f\u6211\u8fd9\u91cc\u4e0d\u628a\u4ed6\u6309\u987a\u5e8f\u5411\u524d\u632a\uff0c\u628a\u65b0\u6765\u7684\u5b57\u653e\u5728\u6700\u540e\uff0c\u800c\u662f\u628a\u5b83\u76f4\u63a5\u66ff\u6362\uff0c\u4e00\u4e2al\u8868\u793a\u66ff\u6362\u7684\u6b21\u6570\uff0c\u5e76\u4e14l\uff08mod\uff09m\uff0c\u8fd9\u6837\u5927\u6982\u5c31\u662f\u7b2c\u4e00\u6b21\u653e\u7b2c\u4e00\u4e2a\uff0c\u7b2c\u4e8c\u6b21\u653e\u7b2c\u4e8c\u4e2a\uff0c\u7b2cn\u6b21\u653e\u7b2cn%m\u90a3\u91cc\u3002\n\n```cpp\n\n#include<iostream>    \nusing namespace std;    \nint main()    \n{    \n    int m,n;    \n    int i,j,l=0,ans=0;    \n    bool x=false;    \n    cin>>m>>n;    \n    int w[n],nei[m];    \n    for(i=0;i<m;i++) nei[i]=-1;    \n    for(i=0;i<n;i++) cin>>w[i]; \n    for(i=0;i<n;i++)    \n    {    \n        x=false;    \n        for(j=0;j<m;j++)    \n        {    \n            if(w[i]==nei[j])    \n            {    \n                x=true;    \n                break;         \n            }    \n   \n        }    \n            if(x==false)    \n            {    \n                nei[l%m]=w[i];  \n                l++;  \n                ans++;      \n            }    \n    }    \n    cout<<ans;    \n}  \n\n```",
        "postTime": 1434690831,
        "uid": 6274,
        "name": "riven",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1540 \u3010\u673a\u5668\u7ffb\u8bd1\u3011"
    }
]