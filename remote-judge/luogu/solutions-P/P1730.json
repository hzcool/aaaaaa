[
    {
        "content": "#\u95ee\u9898\u7b80\u8ff0\n\n\u7ed9\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u6c42\u4efb\u4e24\u70b9\u95f4\u8ddd\u79bb\u9664\u4ee5\u8fb9\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n#\u7b97\u6cd5\u5206\u6790\n\n\u8003\u8651\u8f6c\u5316\u6210\u6211\u4eec\u719f\u6089\u7684\u95ee\u9898\u89e3\u51b3\u3002\n\n\u7531\u4e8e\u90fd\u662f\u6c42\u6700\u5c0f\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u548c\u6b64\u9898\u7c7b\u4f3c\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u6c42\u4efb\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\u80fd\u5426\u501f\u9274Floyd\u7b97\u6cd5\u6765\u89e3\u51b3\u5462\uff1f\n\n\u672c\u9898\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u8fd8\u8981\u9664\u4ee5\u4e00\u4e2a\u8fb9\u6570\u3002\u56e0\u4e3a\u8fd9\u4e2a\u9664\u6cd5\u7684\u7f18\u6545\uff0c\u4f7f\u5f97Floyd\u7b97\u6cd5\u7684\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u88ab\u7834\u574f\uff0c\u5047\u8bbe\u5b58\u5728\u8def\u5f84i -> k -> j\uff0c\u5b83\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u5e76\u4e0d\u4e00\u5b9a\u662fi -> k\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u52a0\u4e0ak -> j\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3002\n\n\u4f8b\uff1a\u8bbe[A, B]\u8868\u793a\u8def\u5f84\u7684\u6743\u503c\u548c\u4e3aA\uff0c\u901a\u8fc7\u4e86B\u6761\u8fb9\u3002\u5047\u8bbe\u4ecei -> k\u5b58\u5728\u7740\u4e24\u6761\u8def\u5f84L1[2, 3]\u4ee5\u53caL2[8, 10]\uff0c\u4ecek -> j\u5b58\u5728\u7740\u4e24\u6761\u8def\u5f84L3[1, 2]\u4ee5\u53caL4[51, 100]\uff0c\u5f88\u660e\u663ei -> k\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u662fL1\uff0ck -> j\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u662fL3\uff0c\u4f46\u662fi -> k -> j\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u5374\u662fL1 + L4\u3002\n\n\u6709\u5426\u529e\u6cd5\u53bb\u6389\u8fd9\u4e2a\u9664\u6cd5\u7684\u5f71\u54cd\uff1f\n\n\u56de\u5230\u95ee\u9898\u7279\u6027\uff0c\u662f\u6709\u5411\u65e0\u73af\u56fe\uff0c\u4e00\u6761\u8def\u5f84\u6700\u591a\u53ea\u80fd\u7ecf\u8fc7N-1\u6761\u8fb9\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fb9\u6570\u8fdb\u884c\u679a\u4e3e\uff0c\u5373\u628a\u7b54\u6848\u7684\u5206\u6bcd\u679a\u4e3e\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u8ba9\u7b54\u6848\u7684\u5206\u5b50\u6700\u5c0f\u5316\uff08\u7b54\u6848\u662f \u6743\u503c\u548c/\u8fb9\u6570\uff09\uff0c\u8fd9\u5c31\u56de\u5230\u6211\u4eec\u719f\u6089\u7684\u95ee\u9898\uff1a\u6c42\u6700\u77ed\u3002\n\n\u5728Floyd\u7684\u57fa\u7840\u4e0a\u91cd\u65b0\u5212\u5206\u9636\u6bb5\u5b9a\u4e49\u72b6\u6001\uff1a\n\n\u7b2ck\u4e2a\u9636\u6bb5\u8868\u793a\u6070\u597d\u901a\u8fc7k\u6761\u8fb9\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u6837\u7684\u8bdd\u6700\u4f18\u5b50\u7ed3\u6784\u4ee5\u53ca\u65e0\u540e\u6548\u6027\u90fd\u6ee1\u8db3\uff08k\u7684\u9636\u6bb5\u7684\u6700\u4f18\u53d6\u503c\u4e00\u5b9a\u9700\u8981\u9760\u4e4b\u524d\u9636\u6bb5\u7684\u6700\u4f18\u503c\uff0c\u5f53\u7136\u4e5f\u4e0d\u53ef\u80fd\u5f71\u54cd\u5230\u4e4b\u524d\u9636\u6bb5\u7684\u53d6\u503c\u4e86\u3002\uff09\n\n\u5b9a\u4e49\u72b6\u6001f(i,j,k)\u8868\u793a\u4ecei\u5230j\u6070\u597d\u7ecf\u8fc7k\u6761\u8fb9\u7684\u6700\u77ed\u8def\uff0c\u7c7b\u4f3cFloyd\u7684\u7b97\u6cd5\u5f97\u51faDP\u65b9\u7a0b\uff1a\n\n f(i,j,k)=Min{f(i,h,g)+f(h,j,k-g)}\u3002 \n\n\u8fd9\u4e2a\u65b9\u7a0b\u662f5\u7ef4\u7684\uff0c\u4f1a\u8d85\u65f6\uff0c\u5982\u4f55\u51cf\u5c0f\u7ef4\u6570\u5462\uff1f\n\n\u8003\u8651\u5728\u4f55\u5904\u91cd\u590d\u51b3\u7b56\u3002\u6ce8\u610f\u5230f\uff08i,j,k\uff09\u7684\u9009\u62e9\u8def\u5f84V1\uff0dV2\uff0d...\uff0dVk\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ea\u8981\u627e\u5230\u8fd9\u91cc\u7684\u4e00\u4e2a\u70b9\u51b3\u7b56\u5373\u53ef\uff0c\u800c\u4e0d\u9700\u6bcf\u4e2a\u70b9\u90fd\u5224\u65ad\u8fc7\u53bb\u3002\u8fd9\u6837\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u5728\u6700\u540e\u4e00\u4e2a\u70b9\u8fdb\u884c\u51b3\u7b56\u3002\n\nf(i,j,k)=Min{f(i,h,k-1)+f(h,j,1)}\u3002 \n\n#\u53c2\u8003\u7a0b\u5e8f\n\n```cpp\n#include<stdio.h>\nusing namespace std;\n#define INF 1000000000\nint n,m,q;\nint dis[60][60][1010];\nint main()\n{\n    int i,j,k,l;\n    scanf(\"%d %d\",&n,&m);//\u8bfb\u5165 \n    for(l=1;l<=m;l++)\n        for(i=1;i<=n;i++)\n            for(j=1;j<=n;j++)\n                dis[i][j][l]=INF;//\u521d\u59cb\u5316 \n    for(i=1;i<=m;i++)\n    {\n        long long a,b,w;\n        scanf(\"%lld %lld %lld\",&a,&b,&w);\n        if(dis[a][b][1]>w)\n            dis[a][b][1]=w;//\u6ce8\u610f\u6709\u91cd\u8fb9\u7684\u60c5\u51b5 \n    }\n    for(l=2;l<=m;l++)\n        for(k=1;k<=n;k++)\n            for(i=1;i<=n;i++)\n                for(j=1;j<=n;j++)\n                    if(dis[i][j][l]>dis[i][k][l-1]+dis[k][j][1])\n                        dis[i][j][l]=dis[i][k][l-1]+dis[k][j][1];//\u7c7b\u4f3cFloyd\u7b97\u6cd5\u7684DP \n    scanf(\"%d\",&q);\n    while(q--)\n    {\n        int x,y;\n        double ans=INF,min=INF;\n        scanf(\"%d %d\",&x,&y);//\u8bfb\u5165\u8be2\u95ee \n        for(l=1;l<=n;l++)\n        {\n            if(dis[x][y][l]<INF)\n                ans=double(dis[x][y][l])/double(l);\n            if(ans<min)\n                min=ans;\n        }//\u5bf9\u8fb9\u6570\u8fdb\u884c\u679a\u4e3e,\u7b97\u6743\u503c\u548c/\u8fb9\u6570 \n        if(min==INF)\n            printf(\"OMG!\\n\");\n        else\n            printf(\"%.3lf\\n\",min);//\u8f93\u51fa \n    }\n}\n```",
        "postTime": 1500102341,
        "uid": 23964,
        "name": "\u4f3c\u6c34\u5e74\u534e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cdn^2*m*logn\u7684\u505a\u6cd5\n\n\u9996\u5148\uff0c\u5f88\u663e\u7136\uff0c\u7b54\u6848\u662f\u53ef\u4ee5\u9884\u5904\u7406\u7684\uff0c\u5f00\u4e2a\u4e8c\u7ef4\u6570\u7ec4ans\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u8f93\u51fa\u5c31\u53ef\u4ee5\u3002\n\n\u6211\u4eec\u8981\u6c42\u7684\u662f\u4e2a\u5206\u5f0f\u5bf9\u5427\uff0c\u5373 \u03a3wi/k \uff081<=i<=k), i\u662f\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\uff0ck\u662f\u8fb9\u6570\uff0c\u53ef\u4ee5\n\u8bbe\u7b54\u6848\u4e3ax\n\n**\u63a5\u4e0b\u6765\u662f\u91cd\u70b9**\n\n\u5bf9\u7b49\u5f0f\u8fdb\u884c\u53d8\u5f62\n\n                    x=\u03a3wi/k\n \n                    x*k=\u03a3wi\n                    \n                    \u03a3wi-x*k=0\n                    \n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u786e\u5b9a\u7684x\uff0c\u9009\u62e9\u4e00\u6761\u8fb9\u7684\u4ee3\u4ef7\u4e3awi-x\u3002\n\n\u5982\u679c\u53ef\u4ee5\u627e\u5230\u4e00\u6761\u8def\u5f84\u4f7f\u03a3wi-x*k<0\uff0c\u5219\u8bf4\u660e\n\n                    \u03a3wi<x*k\n                    \n                    \u03a3wi/k<x\n\u8bf4\u660e\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u5f97\u5230\u4e00\u6761\u5bc6\u5ea6\u6bd4x\u66f4\u5c0f\u7684\u8def\u5f84\uff0cx\u8fd8\u53ef\u4ee5\u66f4\u5c0f\u3002\n\n\u5426\u5219\u5219\u8bf4\u660e\u65e0\u6cd5\u5f97\u5230\u5bc6\u5ea6\u4e3ax\u7684\u8def\u5f84\uff0cx\u9700\u8981\u5927\u4e00\u4e9b\u3002\n\n\u5f88\u663e\u7136\u8fd9\u4e2ax\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u6c42\u89e3\u3002\n\n\u8d34\u4e0a\u4ee3\u7801\n\n```cpp\n\n#include<iostream>\n#include<cctype>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#define N 1100\n#define M 110000\n#define inf 1e9+7\n#define eps 0.000001\n#define ll long long\nusing namespace std;\ninline ll read()\n{\n    ll x=0,flag=1;\n    char ch=0;\n    while(!isdigit(ch)){ch=getchar();if(ch=='-')flag=-1;}\n    while(isdigit(ch)) {x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*flag;\n}\nstruct edge\n{\n    ll to;\n    ll next;\n    long double w;\n}e[M*2];\nll num,head[N];\ninline void add(ll x,ll y,long double z)\n{\n    num++;\n    e[num].to=y;\n    e[num].next=head[x];\n    e[num].w=z;\n    head[x]=num;\n}\nqueue<ll>q;\nlong double dis[N],ans[N][N];\nbool in_queue[N];\nll n,m;\nvoid spfa(ll s,long double mid)\n{\n    for(ll i=1;i<=n;i++)\n    dis[i]=inf;\n    dis[s]=0;\n    q.push(s);\n    in_queue[s]=true;\n    while(!q.empty())\n    {\n        ll x=q.front();\n        //cout<<x<<\" \"<<dis[x]<<endl;\n        q.pop();\n        in_queue[x]=false;\n        for(ll i=head[x];i;i=e[i].next)\n        {\n            ll to=e[i].to;\n            if(dis[to]>dis[x]+e[i].w-mid)\n            {\n                dis[to]=dis[x]+e[i].w-mid;\n                if(!in_queue[to])\n                {\n                    in_queue[to]=true;\n                    q.push(to);\n                }\n            }\n        }\n    }\n    return;\n}\nint main()\n{\n    ll i,j,x,y,z;\n    n=read();\n    m=read();\n    for(i=1;i<=m;i++)\n    {\n        x=read();\n        y=read();\n        z=read();\n        add(x,y,(long double)z);\n    }\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        if(i!=j)\n        {\n        \tspfa(i,0);//\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u80fd\u5230\u8fbe\n        \tif(dis[j]==inf)\n        \t{\n        \t\tans[i][j]=-1;\n        \t\tcontinue;\n        \t}\n        \tlong double l=eps,r=inf;\n            while(true)\n            {\n            \tlong double mid=(l+r)/(2.0);\n                spfa(i,mid);\n                if(dis[j]<0)\n                {\n                \tr=mid+eps;\n                }\n                else\n                {\n                \tl=mid-eps;\n                }\n                if(abs(r-l)<=eps*10)\n                {\n                \tans[i][j]=l;\n                \tbreak;\n                }\n            }\n        }\n    }\n    ll qnum=read();\n    for(i=1;i<=qnum;i++)\n    {\n        x=read();\n        y=read();\n        if(ans[x][y]>=0)\n        printf(\"%.3Lf\\n\",ans[x][y]);\n        else\n        printf(\"OMG!\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1528802543,
        "uid": 45431,
        "name": "creed_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u51fa\u4e00\u5f20\u6709N\u4e2a\u70b9M\u6761\u8fb9\u7684\u52a0\u6743\u6709\u5411\u65e0\u73af\u56fe\uff0c\u63a5\u4e0b\u6765\u6709Q\u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u5305\u62ec2\u4e2a\u8282\u70b9X\u548cY\uff0c\u8981\u6c42\u7b97\u51fa\u4eceX\u5230Y\u7684\u4e00\u6761\u8def\u5f84\uff0c\u4f7f\u5f97\u5bc6\u5ea6\u6700\u5c0f\uff08\u5bc6\u5ea6\u7684\u5b9a\u4e49\u4e3a\uff0c\u8def\u5f84\u4e0a\u8fb9\u7684\u6743\u503c\u548c\u9664\u4ee5\u8fb9\u7684\u6570\u91cf\uff09\u3002\n1 \u2264 N \u2264 50\uff0c1 \u2264 M \u2264 1000\uff0c1 \u2264 W \u2264 100000\uff0c1 \u2264 Q \u2264 100000\n# \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u770b\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u53d1\u73b0n\u7684\u503c\u5f88\u5c0f\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5dfs\u7206\u641c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08n^2\uff09;\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint q;\nstruct node\n{\n\tint ver;\n\tint next;\n\tint val;\n}e[100004];\nint h[10005],cnt=0;\ndouble dis[55][55];//dis[x][y]\u8868\u793a\u4ecex\u5230y\u7684\u6700\u5c0f\u5bc6\u5ea6; \nvoid add(int u,int v,int w)\n{\n\te[++cnt].ver=v;\n\te[cnt].val=w;\n\te[cnt].next=h[u]; \n\th[u]=cnt;\n}\nvoid dfs(int x,double c,double t,int k)//c\u4e3a\u6743\u503c\uff0ct\u4e3a\u8d70\u8fc7\u7684\u8fb9\u6570; \n{\n\tdis[k][x]=min(dis[k][x],c/t);\n\tfor(int i=h[x];i;i=e[i].next)\n\t{\n\t\tint y=e[i].ver;\n\t\tdfs(y,c+e[i].val,t+1,k);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){int x,y,z;scanf(\"%d%d%d\",&x,&y,&z);add(x,y,z);}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tdis[i][j]=5000000.000;//\u8d4b\u521d\u503c; \n\t\t}\n\t\tdis[i][i]=0;//\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4e3a0; \n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdfs(i,0,0,i);\n\t}\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tif(dis[x][y]==5000000.000) printf(\"OMG!\\n\");//\u5982\u679cdis[x][y]\u4ecd\u7b49\u4e8e\u521d\u503c\uff0c\u5219\u8868\u793ax\u4e0ey\u4e0d\u8fde\u901a; \n\t\telse printf(\"%.3lf\\n\",dis[x][y]);\n\t}\n}\n```\n",
        "postTime": 1565237057,
        "uid": 112219,
        "name": "fmx0219",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "#### \u524d\u8a00\n\n\u770b\u6570\u636e\u8303\u56f4\u731c\u7b97\u6cd5\uff1a$Floyd$\n\n#### \u601d\u8def\n\n\u9996\u5148\uff0c\u770b\u5230\u70b9\u6570\u53ea\u670950\uff0c\u679c\u65ad\u90bb\u63a5\u8868\u554a\u3002\n\n\u7136\u540e\u6211\u4eec\u660e\u786e\u4e00\u70b9\uff1a$Floyd$\u7b97\u6cd5\u7684\u672c\u8d28\u5176\u5b9e\u5c31\u662f$dp$\n\n\u4eca\u5929\u65e9\u4e0a\u770b\u5230\u7684\u4e00\u4e2a\u5e16\u5b50\uff1a[$Floyd$\u7b97\u6cd5\u662f\u7ecf\u6eda\u86cb\u6570\u7ec4\u4f18\u5316\u7684$dp$](https://www.luogu.com.cn/discuss/show/279108)\n\n(\u56e0\u4e3a\u697c\u4e3b\u6253\u9519\u5b57\u7b11\u4e86\u6211\u597d\u4e45)\n\n\u7ed9\u7684\u70b9\u6570\u6bd4\u8f83\u5c11\uff0c\u4f46\u662f\u8be2\u95ee\u7279\u522b\u591a\u3002\u770b\u6837\u5b50\u5c31\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\u3002\n\n\u770b\u9898\u76ee\u7684\u5b9a\u4e49\uff1a\u201c\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u201d\u662f\u6307\u3000\u8def\u5f84\u4e0a\u8fb9\u7684\u6743\u503c\u548c\u9664\u4ee5\u8fb9\u7684\u6570\u91cf\n\n\u4e0d\u59a8\u5b9a\u4e49$DP$\u72b6\u6001\uff1a$DP[i][j][cnt]$\u8868\u793a\u70b9$i$\u5230\u70b9$j$\u7ecf\u8fc7$cnt$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u600e\u4e48\u8f6c\u79fb\uff1f\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u4e0a$Floyd$\u4e86\u3002\n\n$Floyd$ \u6709\u4e09\u91cd\u5faa\u73af\uff0c\u7b2c\u4e00\u4e8c\u91cd\u662f\u679a\u4e3e\u4e24\u4e2a\u8981\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u7684\u70b9\uff0c\u7b2c\u4e09\u91cd\u662f\u679a\u4e3e\u4e2d\u8f6c\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u5728\u8fd9\u4e2a\u9898\u76ee\u7684\u8f6c\u79fb\u4e2d\u5c31\u53ef\u4ee5\u7528\u5230\u8fd9\u4e2a\u4e2d\u8f6c\u70b9\u6765\u8f6c\u79fb\u72b6\u6001\u3002\n\n$DP[i][j][cnt_1] = DP[i][k][cnt_2] + DP[k][j][cnt_1-cnt_2]$\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8f6c\u79fb\u5462\uff1f\n\n\u6839\u636e$DP$\u4e2d\u72b6\u6001\u7684\u8bbe\u7acb\u611f\u6027\u7406\u89e3\u4e00\u4e0b:\n\n$DP[i][j][cnt_1]$\u662f\u6307$i$\u5230$j$\u8981\u7ecf\u8fc7$cnt_1$\u6761\u8fb9\u3002\n\n$DP[i][k][cnt_2]$\u5c31\u662f$i$\u5230$k$\u7ecf\u8fc7$cnt_2$\u6761\u8fb9\u3002\n\n\u56e0\u4e3a$i$\u5230$j$\u89c4\u5b9a\u4e86\u8981\u8d70$cnt_1$\u6761\u8fb9\uff0c\u90a3\u4e48\u5269\u4e0b\u7684$k$\u5230$j$\u5c31\u53ea\u80fd\u8d70$cnt_1 - cnt_2$\u6761\u8fb9\u4e86\u3002\n\n\u4e8e\u662f\u8fd9\u6837\u8f6c\u79fb\u662f\u53ef\u884c\u7684\u3002\n\n\u4f46\u662f\u65f6\u95f4\u4e0a\u8c8c\u4f3c\u70b8\u4e86\u3002\n\n\u4ed4\u7ec6\u7b97\u4e00\u7b97\u4f60\u4f1a\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u662f:O($n^3$ * $m^2$)\n\n\u663e\u7136\u8fc7\u4e0d\u4e86$n <= 50$,$m<= 1000$\u7684\u6570\u636e\u8303\u56f4\u3002\n\n\u62b1\u7740\u597d\u5947\u7684\u5fc3\u7406\u6211\u4ea4\u4e86\u4e00\u53d1\u66b4\u529b\uff1a\n\n$80pts$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int MAXN = 52,MAXM = 1005,INF = 1000000000000000;\n\nint dis[MAXN][MAXN][MAXM];\ndouble Min[MAXN][MAXN];\nint n , m;\n\nsigned main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint u,v,t;\n\t\tcin >> u >> v >> t;\n\t\tif(dis[u][v][1] != 0)\n\t\t\tdis[u][v][1] = min(t,dis[u][v][1]);\n\t\telse dis[u][v][1] = t;\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t\tfor(int k = 1 ; k <= m ; k ++)\n\t\tif(dis[i][j][k] == 0)\n\t\tdis[i][j][k] = INF;\n\t}\n\tfor(int w = 2 ; w <= m ; w ++)\n\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t{\n\t\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t\t\tfor(int k = 1 ; k <= n ; k ++)\n\t\t\t\t\tfor(int z = 1 ; z < w ; z ++)\n\t\t\tdis[i][j][w] = min(dis[i][j][w],dis[i][k][z]+dis[k][j][w - z]);\n\t\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t{\n\t\t\tMin[i][j] = (double) INF;\n\t\t\tfor(int w = 1 ; w <= m ; w ++)\n\t\t\tif(dis[i][j][w] != INF)\n\t\t\tMin[i][j] = min(Min[i][j],double(dis[i][j][w]) / double(w));\n\t\t}\n\t}\n\tint Q;\n\tcin >> Q;\n\tfor(int i = 1 ; i <= Q ; i ++)\n\t{\n\t\tint u,v;\n\t\tcin >> u >> v;\n\t\tif(Min[u][v] <= 1e13 && u != v)\n\t\tprintf(\"%.3lf\\n\",Min[u][v]);\n\t\telse cout <<\"OMG!\\n\";\n\t}\n\treturn 0;\n}\n```\n\n\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\n\n\u6839\u636e\u6211\u4eec\u7684\u7b97\u6cd5\uff0c$i$\u5230$j$\u7ecf\u8fc7$cnt_1$\u6761\u8fb9\u7684\u8def\u5f84\u4e0a\uff0c\u4f1a\u4e0d\u6b62\u6709\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u5230\uff0c\u56e0\u4e3a\u6211\u4eec\u679a\u4e3e\u4e86\u6240\u6709\u7684$k$\uff0c\u6211\u4eec\u603b\u4f1a\u679a\u4e3e\u5230\u4e00\u4e2a\u70b9\u662f\u76f4\u63a5\u4e0e$j$\u76f8\u90bb\u7684\u3002\n\n\u6253\u4e2a\u6bd4\u65b9\uff08\u8fd9\u662f$i$\u5230$j$\u7684\u8def\u5f84\u62bd\u8c61\u7248\uff09:\n\n$i$ -----> $a$ -----> $b$ -----> ... -----> $t$ ----- >$j$\n\n\u6211\u4eec\u5728\u679a\u4e3e\u6240\u6709\u4e2d\u8f6c\u70b9\u7684\u65f6\u5019\u80af\u5b9a\u4f1a\u679a\u4e3e\u5230$t$\uff0c\u90a3\u4e48\u56e0\u4e3a\u8fd9\u6761\u8def\u5f84\u4e00\u5171\u7ecf\u8fc7\u7684\u4e86$cnt_1$\u6761\u8fb9\uff0c\u90a3\u4e48$i$ \u5230 $t$\u5c31\u7ecf\u8fc7\u4e86 $cnt_1 - 1$\u3000\u6761\u8fb9\uff0c$t$\u5230$j$\u5c31\u662f\u4e00\u6761\u8fb9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u60f3\u5230\uff0c\u5b9e\u9645\u4e0a\u66f4\u65b0\u72b6\u6001\u7684\u65f6\u5019\u6ca1\u5fc5\u8981\u679a\u4e3e\u65b9\u7a0b\u4e2d\u7684$cnt_2$\uff0c\u53ea\u9700\u8981\u5c06$cnt_2$\u8bbe\u7f6e\u4e3a$1$(\u6216\u8005\u662f\u5c0f\u4e8e$cnt_1$\uff0c\u5927\u4e8e0\u7684\u4efb\u4f55\u6570)\n\n\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf\u5c11\u4e00\u5c42\u679a\u4e3e$cnt_2$\u7684\u590d\u6742\u5ea6\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u4e86O$(n^3m)$\u3002\n\n\u8ba1\u7b97\u5b8c\u4e86$DP[i][j][k]$\u6839\u636e\u5b9a\u4e49\u8bb0\u5f97\u9884\u5904\u7406\u7b97\u4e00\u7b97$i$ \u5230$j$\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u4fdd\u5b58\u8d77\u6765\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5O$(1)$\u56de\u7b54\u8be2\u95ee\u4e86\u3002\n\n\n\u5c31\u53ef\u4ee5\u8fc7\u6389\u8fd9\u4e00\u9898\u4e86:\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int MAXN = 52,MAXM = 1005,INF = 1000000000000000;\n\nint dis[MAXN][MAXN][MAXM];\ndouble Min[MAXN][MAXN];\nint n , m;\n\nsigned main()\n{\n\tcin >> n >> m;\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint u,v,t;\n\t\tcin >> u >> v >> t;\n\t\tif(dis[u][v][1] != 0)\n\t\t\tdis[u][v][1] = min(t,dis[u][v][1]);\n\t\telse dis[u][v][1] = t;//\u4e00\u5f00\u59cb\u7ecf\u8fc7\u4e00\u6761\u8def\u5f84\u7684\u6700\u77ed\u8def\u8981\u8ba1\u7b97\uff0c\u76f8\u5f53\u4e8edp\u8fb9\u754c\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t\tfor(int k = 1 ; k <= m ; k ++)\n\t\tif(dis[i][j][k] == 0)\n\t\tdis[i][j][k] = INF;\n\t}\n\tfor(int w = 2 ; w <= m ; w ++)\n\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t{\n\t\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t\t\tfor(int k = 1 ; k <= n ; k ++)\n\t\t\tdis[i][j][w] = min(dis[i][j][w],dis[i][k][w - 1]+dis[k][j][1]);\n\t\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tfor(int j = 1 ; j <= n ; j ++)\n\t\t{\n\t\t\tMin[i][j] = (double) INF;\n\t\t\tfor(int w = 1 ; w <= m ; w ++)\n\t\t\tif(dis[i][j][w] != INF)\n\t\t\tMin[i][j] = min(Min[i][j],double(dis[i][j][w]) / double(w));\n\t\t}//\u8ba1\u7b97\"\u6700\u5c0f\u5bc6\u5ea6\"\u8def\u5f84\n\t}\n\tint Q;\n\tcin >> Q;\n\tfor(int i = 1 ; i <= Q ; i ++)\n\t{\n\t\tint u,v;\n\t\tcin >> u >> v;\n\t\tif(Min[u][v] <= 1e13 && u != v)\n\t\tprintf(\"%.3lf\\n\",Min[u][v]);\n\t\telse cout <<\"OMG!\\n\";//\u5982\u679c\u6700\u77ed\u8def\u5f84\u65e0\u7a77\u5927\u5c31\u8868\u793a\u65e0\u89e3\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605844538,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "## [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1730)\n\n~~\u76ee\u524d\u662f\u6700\u4f18\u89e3\u3002~~\n\n\u9898\u76ee\u5927\u610f\uff1a\n\n\u6c42 $DAG$ \u4efb\u4e24\u70b9\u95f4\u8ddd\u79bb\u9664\u4ee5\u8fb9\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n~~\u5947\u602a\u7684DP??~~\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u9700\u8981\u5904\u7406\u51fa\u6240\u6709 $i$ \u5230 $ j$ \u7684 $k$ \u6761\u8def\u5f84\u7684\u8ddd\u79bb\u6700\u5c0f\u548c\uff0c\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u6c42\u51fa\u6765\u6700\u5c0f\u5bc6\u5ea6\u3002\n\n\u8003\u8651\u66b4\u529b\uff1a\n\n\u5b9a\u4e49 $Dp_{[i,j,k]}$ \u4e3a\u793a\u70b9 $i$  \u5230\u70b9 $j$ \u7ecf\u8fc7 $ k$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u72b6\u6001\u8f6c\u79fb->\u7c7b\u4f3c Floyd. \n\n$Dp_{[i,j,k]}=Dp_{[i,tot,k_1]}+Dp_{[tot,j,k-k_1]}$\n\n--------\n\n\u65e2\u7136\u5728\u56fe\u4e0a\u4e3a\u4ec0\u4e48\u4e0d\u8dd1\u4e00\u4e2a Toposort \u5462\uff1f\n\n\u65e2\u7136\u5728\u62d3\u6251\u5e8f\u4e2d\u4e3a\u4ec0\u4e48\u4e0d\u8dd1\u4e00\u4e2a Dp \u5462\uff1f\n\n\u5b9a\u4e49 $dis_{i,j}$ \u4e3a\u4ece $u$ \u8282\u70b9\u5230  $i$ \u8282\u70b9\u8d70 $j$ \u6761\u8def\u5f84\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 $i$ \uff0c\u90fd\u53ef\u4ee5\u6709:\n\n$dis_{v,j}=min(dis_{v,j},dis_{u,j-1})$\n\n-  **Initialization**\n\n\u5bf9\u4e8e\u8282\u70b9 $i$ \u4e3a\u8d77\u70b9\uff0c\u5904\u7406\u51fa\u80fd\u5230\u8fbe\u7684\u70b9\u548c\u5165\u5ea6\u3002\n```cpp\nvoid Init(int x)\n{\n\tfor(int i=fir[x];i;i=nex[i]) {\n\t\tint p=poi[i];\n\t\tin[p]++;\n\t\tif(v[p])\tcontinue;\n\t\tv[p]=1;\n\t\tInit(p);\n\t}\n}\n```\n\n-  **Toposort**\n\n\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9 $i$ \u4f5c\u4e3a\u8d77\u70b9\uff0c\u62d3\u6251\u5904\u7406\uff0c\u679a\u4e3e $j$ \u6761\u8def\u5f84\u72b6\u6001\u8f6c\u79fb\u3002\n\n\u6700\u540e\u5982\u679c\u53ef\u4ee5\u8dd1\u5230\u7684\u8bdd\uff0c\u5c06\u6700\u77ed\u8def\u8f6c\u5316\u4e3a\u6700\u5c0f\u5bc6\u5ea6\u3002\n\n```cpp\nvoid Toposort(int x)\n{\n\tClear(); Init(x);\n\tqueue<int > q;\n\tq.push(x); dis[x][0]=0;\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=fir[now];i;i=nex[i])\n\t\t{\n\t\t\tint p=poi[i];\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tdis[p][j]=min(dis[p][j],dis[now][j-1]+val[i]);\n\t\t\tin[p]--;\n\t\t\tif(!in[p])\tq.push(p);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(v[i])\tf[x][i]=min(f[x][i],dis[i][j]/j);\n}\n\n//\n\nfor(int i=1;i<=n;i++)\n\t\tToposort(i);\n```\n\u5173\u4e8e $OMG$ \uff1a\n\n\u5f88\u663e\u7136\uff0c\u5f53\u6700\u77ed\u5bc6\u5ea6\u6ca1\u6709\u66f4\u65b0\u65f6\uff0c\u4e24\u70b9\u5c31\u4e0d\u8fde\u901a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\u4e0d\u5230 $\\mathcal{O_{n^3}}$\n\n\n**\u4ee3\u7801\u5982\u4e0b:**\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<map>\n#define N 1010 \n#define INF 2147483647\nusing namespace std;\nint re() {\n\tint p=0,f=1; char i=getchar();\n\twhile(i<'0'||i>'9')\t{if(i=='-')  f=-1;i=getchar();}\n\twhile(i>='0'&&i<='9')\tp=p*10+i-'0',i=getchar();\n\treturn f*p;\n}\nint n,m,u,sum,cnt,T;\nint fir[N],poi[N],nex[N],val[N],in[N];\ndouble dis[60][60],f[60][60];\nbool v[N];\nvoid ins(int x,int y,int z) {\n\tnex[++sum]=fir[x];\n\tpoi[sum]=y;\n\tval[sum]=z;\n\tfir[x]=sum;\n}\nvoid Clear() {\n\tmemset(v,0,sizeof(v));\n\tmemset(in,0,sizeof(in));\n\tmemset(dis,0x7f,sizeof(dis));\n}\nvoid Init(int x)\n{\n\tfor(int i=fir[x];i;i=nex[i]) {\n\t\tint p=poi[i];\n\t\tin[p]++;\n\t\tif(v[p])\tcontinue;\n\t\tv[p]=1;\n\t\tInit(p);\n\t}\n}\nvoid Toposort(int x)\n{\n\tClear(); Init(x);\n\tqueue<int > q;\n\tq.push(x); dis[x][0]=0;\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tfor(int i=fir[now];i;i=nex[i])\n\t\t{\n\t\t\tint p=poi[i];\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tdis[p][j]=min(dis[p][j],dis[now][j-1]+val[i]);\n\t\t\tin[p]--;\n\t\t\tif(!in[p])\tq.push(p);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(v[i])\tf[x][i]=min(f[x][i],dis[i][j]/j);\n}\nint main()\n{\n\tn=re(); m=re(); \t\n\tmemset(f,0x7f,sizeof(f));\n\tfor(int i=1;i<=m;i++) {\n\t\tint a,b,c;\n\t\ta=re(); b=re(); c=re();\n\t\tins(a,b,c);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tToposort(i);\n\tT=re();\n\twhile(T--)\n\t{\n\t\tint a,b;\n\t\ta=re(); b=re();\n\t\tif(f[a][b]==f[a][0]) printf(\"OMG!\\n\");\n\t\telse printf(\"%.3lf\\n\",f[a][b]);\n\t}\n}\n```\n**\u5982\u6709\u4e0d\u59a5\uff0c\u8bf7\u4e0d\u8981\u541d\u556c\u60a8\u7684\u8bc4\u8bba!**\n\n\n\n",
        "postTime": 1621951753,
        "uid": 233816,
        "name": "_zy_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a$O(n^2m)$\u7684\u505a\u6cd5\n\n------------\n\n\u9996\u5148\u662f\u6570\u636e\u8303\u56f4\uff0c\u8fd9\u4e2a$10^5$\u7684\u8be2\u95ee\u53ef\u672c\u8d28\u4e0a\u53ea\u6709$n^2$~~\u662f\u4ec0\u4e48\u8ff7\u60d1\u64cd\u4f5c~~\uff0c\u56e0\u6b64\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5bf9\u76f4\u63a5\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u548c\u6700\u77ed\u8def\u5f84\u4e0d\u540c\uff0c\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u9700\u8981\u8003\u8651\u5230\u8def\u5f84\u7684\u957f\u5ea6\u4ee5\u53ca**\u8fb9\u7684\u6570\u91cf**\u3002\u56e0\u4e3a\u6570\u91cf\u7684\u5173\u7cfb\uff0c\u5bfc\u81f4\u6211\u4eec\u6ca1\u529e\u6cd5\u50cf\u6700\u77ed\u8def\u90a3\u6837\uff0c\u7528**\u4e09\u89d2\u4e0d\u7b49\u5f0f**\u4f18\u5316\u5f53\u524d\u70b9\u548c\u4e0b\u4e00\u70b9\u7684\u8ddd\u79bb\u3002\n\n\uff08\u6bd4\u5982\uff0c\u672c\u6765\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u4ece2\u53d8\u4e3a3\uff0c\u4f46\u662f\u8fb9\u7684\u6570\u91cf\u4ece1\u53d8\u6210\u4e862\uff0c\u6709\u53ef\u80fd\u5bf9**\u6700\u540e\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84**\u6709\u4fc3\u8fdb\u4f5c\u7528\uff0c\u4e5f\u53ef\u80fd\u4f1a\u6ca1\u6709\uff0c\u6240\u4ee5\u65e0\u6cd5\u4ece\u73b0\u5728\u65ad\u5b9a\uff09\n\n\u4e0d\u8fc7\u56e0\u4e3a\u672c\u9898\u7684$n$\u592a\u5c0f\uff0c\u800c\u4e14\u56fe\u662fDAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09\uff0c**\u4e00\u6761\u8def\u5f84\u6700\u957f\u53ea\u80fd\u4e3a$n$** \uff08\u56e0\u4e3a\u6ca1\u6709\u73af\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8def\u5f84\u7684\uff0c\u8fd9\u6837\u53ea\u8981\u4fdd\u8bc1**\u8fb9\u6570\u91cf\u76f8\u540c**\u7684\u60c5\u51b5\u4e0b\uff0c**\u957f\u5ea6\u6700\u5c0f**\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n------------\n\n\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\uff0c\u679a\u4e3e\u6bcf\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff08\u8bbe\u4e3a$s$\uff09\uff0c\u7136\u540e\u6c42\u8fd9\u4e2a\u70b9\u5bf9\u6bcf\u4e2a\u70b9\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3002\n\n\u6211\u4eec\u521a\u521a\u8bf4\u4e86\u8ba8\u8bba\u8fb9\u6570\u91cf\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u90a3\u6211\u4eec\u5c31\u8bbe\u4e00\u4e2a\u72b6\u6001$dp(i,j)$\u8868\u793a\u8d77\u70b9$s$\u5230$i$\u70b9\uff0c\u7ecf\u8fc7$j$\u6761\u8fb9**\u957f\u5ea6\u6700\u77ed**\u7684\u8def\u5f84\u3002\n\n\u6ee1\u8db3\u8f6c\u79fb\u65b9\u7a0b\uff08\u8bbe\u67d0\u6761\u8fb9\u7684\u53e6\u4e00\u70b9\u4e3a$v$,\u957f\u5ea6\u4e3a$w$\uff09\n$dp(v,j+1)=min(dp(v,j+1),dp(i,j)+w)$\n\n\u8fd9\u5c31\u53d8\u6210\u4e86DAG\u4e0a\u7684DP\uff0c\u5f88\u663e\u7136\u6211\u4eec\u9700\u8981\u7528\u62d3\u6251\u6392\u5e8f\u7684\u987a\u5e8f\u8f6c\u79fb\uff0c\u624d\u80fd\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u6ce8\u610f\u70b9\uff1a\u62d3\u6251\u6392\u5e8f\u7684\u5165\u5ea6\u5e76\u4e0d\u662f**\u539f\u56fe\u7684\u5165\u5ea6**\uff0c\u800c\u662f\u70b9$s$**\u80fd\u5230\u8fbe\u7684\u70b9**\u7684\u6700\u5927\u5b50\u56fe\u7684\u5165\u5ea6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ea\u6709$s$\u80fd\u5230\u8fbe\u7684\u8fb9\uff0c\u624d\u80fd\u7ed9\u4e0b\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6+1\u3002\n\n\uff08\u56e0\u4e3a\u4e0d\u80fd\u5230\u8fbe\u7684\u8fb9\u548c\u70b9\u5728\u5bf9$s$\u8ba8\u8bba\u65f6\u6839\u672c\u6ca1\u7528\uff0c\u5982\u679c\u7b97\u4e0a\u8fd9\u4e9b\u8fb9\u4f1a\u5bfc\u81f4\u62d3\u6251\u6392\u5e8f\u4e0d\u80fd\u8fdb\u884c\u5f7b\u5e95\uff09\n\n\u4f7f\u7528\u4e00\u4e2a\u4ece$s$\u5f00\u59cb\u7684DFS\uff0c\u4e0d\u8bbf\u95ee\u91cd\u590d\u7684\u70b9\u5373\u53ef\u7edf\u8ba1\u5165\u5ea6\uff08\u8be6\u60c5\u89c1\u4ee3\u7801\uff09\n\n\u6700\u540e\u5bf9\u4e8e\u7b54\u6848$ans(s,i)$\u8868\u793a$s$\u5230$i$\u7684\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\uff0c\u53ea\u9700\u8981\u679a\u4e3e$min(dp(i,j)/j),j\u2208[1,n]$ \u5373\u53ef\n\n\u4ee5\u53ca\u6ce8\u610f\u4e24\u70b9\u4e0d\u8fde\u901a\u65f6~~\u8ba9\u6211\u5931\u53bb1A\u7684~~\u201cOMG!\"\n\n------------\n\n\u679a\u4e3e\u6bcf\u4e2a\u70b9\u9700\u8981$n$\u6b21\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff1a\n\n- $n$\u6b21\u7684DFS\n- $m$\u6b21\u7684\u5165\u961f\u51fa\u961f\uff08\u62d3\u6251\u6392\u5e8f\uff09\n- - \u6bcf\u6b21DP\u7684\u8f6c\u79fb\u9700\u8981$n$\u6b21\n\n\u590d\u6742\u5ea6\u662f$n*(n+m * n)$\u7684\uff0c\u4e5f\u5c31\u662f$O(n^2m)$\n\n\n------------\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\n#include <iomanip>\nusing namespace std;\nconstexpr size_t MAXN = 55, MAXM = 1e3 + 5;\nint head[MAXM], nxt[MAXM], v[MAXM], w[MAXM], cnt;\ndouble ans[MAXN][MAXN];\nint n, m, q;\n\ninline void Addline(int x, int y, int z) { v[cnt] = y, w[cnt] = z, nxt[cnt] = head[x], head[x] = cnt++; }\n\ninline void DFS(int x, int* ind, int* vis)\n{\n\tfor (int i = head[x]; ~i; i = nxt[i])\n\t{\n\t\tind[v[i]]++;\n\t\tif (!vis[v[i]]) vis[v[i]] = true, DFS(v[i], ind, vis);\n\t}\n}\n\ninline void TopSort(int s)\n{\n\tint ind[MAXN], vis[MAXN], dp[MAXN][MAXN];\n\tmemset(ind, 0, sizeof ind), memset(vis, 0, sizeof vis);\n\tDFS(s, ind, vis);\n\tqueue<int> Q; Q.push(s);\n\tmemset(dp, 0x7f, sizeof dp), dp[s][0] = 0;\n\twhile (!Q.empty())\n\t{\n\t\tint x = Q.front(); Q.pop();\n\t\tfor (int i = head[x]; ~i; i = nxt[i])\n\t\t{\n\t\t\tfor (int j = 0; j < n; j++)\n\t\t\t\tdp[v[i]][j + 1] = min(dp[v[i]][j + 1], dp[x][j] + w[i]);\n\t\t\tif (!--ind[v[i]]) Q.push(v[i]);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tans[s][i] = min(ans[s][i], vis[i] ? (double)dp[i][j] / j : ans[s][i]);\n}\n\nsigned main(void)\n{\n\tios::sync_with_stdio(false), cin.tie(0);\n\tmemset(head, -1, sizeof head), memset(ans, 0x7f, sizeof ans);\n\tcin >> n >> m;\n\tfor (int i = 1, x, y, z; i <= m; i++)\n\t{\n\t\tcin >> x >> y >> z;\n\t\tAddline(x, y, z);\n\t}\n\tfor (int i = 1; i <= n; i++) TopSort(i);\n\tcin >> q;\n\tfor (int i = 1, x, y; i <= q; i++)\n\t{\n\t\tcin >> x >> y;\n\t\tif (ans[x][y] != ans[0][0])\n\t\t\tcout << setiosflags(ios::fixed) << setprecision(3) << ans[x][y] << '\\n';\n\t\telse\n\t\t\tcout << \"OMG!\\n\";\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1611835426,
        "uid": 29354,
        "name": "CodyTheWolf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": " \n \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int ma=100000000;\nint n,k,m,s,t,i,j,x,y,z,q;\nint a[101],v[101][101],f[101][101][1009],qa,qb;//v\u8bb0\u5f55\u4e24\u70b9\u8ddd\u79bb\uff0cf[x][y][t]\u8bb0\u5f55\u4e24\u70b9\u5728\u7b2ct\u6b65\u7684\u4e24\u70b9\u8ddd\u79bb\ndouble ans,mi;\nint main()\n{  scanf(\"%d%d\",&n,&m);\n   for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)v[i][j]=ma;\n   for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n     for(t=1;t<=m;t++)f[i][j][t]=ma;\n   for(i=1;i<=m;i++)\n   {scanf(\"%d%d%d\",&x,&y,&z);\n   if(z<v[x][y])v[x][y]=z,f[x][y][1]=z;}\n   scanf(\"%d\",&q);//\u8bfb\u5165\n  for(t=2;t<=n;t++)//\u8bb0\u5f55\u6b65\u6570\n   for(k=1;k<=n;k++)\n    for(i=1;i<=n;i++)\n     for(j=1;j<=n;j++)\n      if(f[i][k][t-1]+v[k][j]<f[i][j][t])f[i][j][t]=f[i][k][t-1]+v[k][j];//Floyed\u7b97\u6cd5\n  for(i=1;i<=q;i++)\n   {\n    mi=ma;\n    scanf(\"%d%d\",&qa,&qb);//\u8bfb\u5165\u95ee\u9898\n    for(t=1;t<=n;t++)\n   if(f[qa][qb][t]<ma){ans=(double)f[qa][qb][t]/t;\n   if(ans<mi)mi=ans;}\n   if(mi<ma)printf(\"%.3lf\\n\",mi);\n   else cout<<\"OMG!\"<<endl;\n}\nreturn 0;    \n}\n\n```",
        "postTime": 1499394069,
        "uid": 48357,
        "name": "Novice_TvT",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "#\u8fd9\u9898\u5176\u5b9e\u4e0d\u96be\n\n\u8fd9\u9898\u8981\u6c42\u8def\u5f84\u5bc6\u5ea6\u6700\u5c0f\uff0c\u5c31\u840c\u751f\u51fa\u4e86\u8981\u6c42\u51fa\u4efb\u610f\u6709\u5e8f\u70b9\u5bf9\uff08i\uff0cj)\u7ecf\u8fc7l\uff08\u8fd9\u662fL\u7684\u5c0f\u5199\uff09\u6761\u8fb9\u6700\u77ed\u8def\u7684\u60f3\u6cd5\uff1b\n\n\u56e0\u4e3a\u662f\u4efb\u610f\u4e24\u70b9\uff0c\u6240\u4ee5\u5f53\u7136\u662ffloyd\u5927\u6cd5\u597d\uff0c\u5c31\u662f\u6709\u4e00\u4e2a\u5751\uff0c\u6709\u91cd\u8fb9\uff0c\u6211\u56e0\u4e3a\u5077\u61d2\u6ca1\u6709\u7528map[i][j]\uff0c\u76f4\u63a5\u7ed9f\u6570\u7ec4\u8d4b\u503c\uff0c\u7ed3\u679c\u6ca1\u6709\u5224\u91cd\u8fb9\u88ab\u5751\u4e86\u597d\u591a\u6b21\uff1b\n\n\u63a5\u4e0b\u6765\u5904\u7406\u6700\u5c0f\u5bc6\u5ea6\u5c31\u76f4\u63a5\u679a\u4e3el\uff08\u8fd9\u662fL\u7684\u5c0f\u5199\uff09\u5373\u53ef\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u7c7b\u578b\u5f3a\u5236\u8f6c\u5316\uff0c\u4e0d\u7136\u51fa\u6765\u7684\u7b54\u6848\u5168\u662fx.000\uff1b\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8d34\u4ee3\u7801\n\n##############################################################################\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=110,M=1010;\nint n,m,l,i,j,k,q,x,y,z,f[M+1][N+1][N+1];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (l=1; l<=m; l++)\n    for (i=1; i<=n; i++)\n    for (j=1; j<=n; j++)\n    f[l][i][j]=1e9;\n    for (i=1; i<=m; i++) \n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        if (z<f[1][x][y]) f[1][x][y]=z;//\u91cd\u8fb9\u5904\u7406 \n    }\n    for (l=2; l<=m; l++)\n    for (k=1; k<=n; k++)\n    for (i=1; i<=n; i++)\n    for (j=1; j<=n; j++)\n        f[l][i][j]=min(f[l-1][i][k]+f[1][k][j],f[l][i][j]);\n    scanf(\"%d\",&q);\n    for (; q; q--)\n    {\n        scanf(\"%d%d\",&x,&y);\n        long double ans=1e9;\n        for (l=1; l<=m; l++)\n        if (f[l][x][y]<1e9&&f[l][x][y]<ans*l) ans=(long double)f[l][x][y]/(long double)l;\n        if (ans==1e9) printf(\"OMG!\\n\"); else printf(\"%.3Lf\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1494729039,
        "uid": 8742,
        "name": "zhaimingshuzms",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "\n# \u9898\u76ee\u5927\u610f\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P1730)\n\n\u9898\u76ee\u5927\u610f\uff1a\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\uff0c\u8fb9\u6743\u5747\u4e3a\u6b63\u6574\u6570\u3002\n\n\u5b9a\u4e49\u4e00\u6761\u8def\u5f84\u7684\u5bc6\u5ea6\u4e3a \u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u548c/\u8fb9\u6570\u3002\n\n\u5148\u6709q\u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u51faxy\uff0c\u6c42\u4ecex\u5230y\u7684\u82e5\u5e72\u6761\u8def\u5f84\u4e2d\u7684\u6700\u5c0f\u8def\u5f84\u5bc6\u5ea6\u662f\u591a\u5c11\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u4ee4c\u4e3a\u8fb9\u6743\uff0cd\u4e3a\u8def\u5f84\u6761\u6570\n\n\u90a3\u4e48\u6240\u6c42\u5373\u4e3a\uff1a$\\frac{\\sum{c}}{d}$\n\n\u8fd9\u662f\u4e00\u4e2a\u548c\u5f0f\u5206\u5f0f\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u9898\u76ee\uff0c\u6211\u4eec\u901a\u5e38\u7528\u4e00\u79cd\u65b9\u6cd5\u53eb\u505a [01\u5206\u6570\u89c4\u5212](https://blog.csdn.net/luyan0408/article/details/106750403)\n\n\u6211\u4eec\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5224\u65ad\u3002\n\n\u5224\u65ad\u8fc7\u7a0b\uff1a\u628a\u6bcf\u6761\u8fb9\u8fb9\u6743-\u4e8c\u5206\u7b54\u6848\u7136\u540e\u5224\u65ad\u6700\u77ed\u8def\u7684\u6b63\u8d1f\u6027\u3002\n\n\u5982\u679c\u6700\u77ed\u8def\u662f\u8d1f\u7684\u90a3\u4e48\u7b54\u6848\u4e0d\u5408\u6cd5\uff0c\u4fee\u6539r\n\n\u5426\u5219\u4fee\u6539l\n\n# \u4ee3\u7801\n\n\u4e0b\u9644AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read(){\n\tchar s;\n\tint x=0,f=1;\n\ts=getchar();\n\twhile(s<'0'||s>'9'){\n\t\tif(s=='-')f=-1;\n\t\ts=getchar();\n\t}\n\twhile(s>='0'&&s<='9'){\n\t\tx*=10;\n\t\tx+=s-'0';\n\t\ts=getchar();\n\t}\n\treturn x*f;\n}\nconst int N=55;\nint n,m;\nvector<int>v[N];\nvector<double>v1[N];\ndouble ans[N][N];\ndouble dist[N];\nbool in[N];\nqueue<int>q;\nbool spfa(int s,int ask,double limit){\n\tfor(int i=1;i<=n;i++){\n\t\tdist[i]=0x3f3f3f3f;\n\t\tin[i]=0;\n\t}\n\tdist[s]=0;\n\tq.push(s);\n\tin[s]=1;\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tin[x]=0;\n\t\tq.pop();\n\t\tfor(int i=0;i<v[x].size();i++){\n\t\t\tint k=v[x][i];\n\t\t\tif(dist[k]>dist[x]+v1[x][i]-limit){\n\t\t\t\tdist[k]=dist[x]+v1[x][i]-limit;\n\t\t\t\tif(!in[k]){\n\t\t\t\t\tin[k]=1;\n\t\t\t\t\tq.push(k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dist[ask]>0;\n}\ndouble maxn;\nvoid go(int x,int y){\n\tdouble l=0,r=maxn;\n\tspfa(x,y,0);\n\tif(dist[y]==0x3f3f3f3f){\n\t\tans[x][y]=-1;\n\t\treturn;\n\t}\n\twhile(r-l>1e-6){\n\t\tdouble mid=(l+r)/2;\n\t\tif(spfa(x,y,mid))l=mid;\n\t\telse r=mid;\n\t}\n\tans[x][y]=l;\n\treturn;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint a,b,c;\n\t\ta=read(),b=read(),c=read();\n\t\tmaxn+=c;\n\t\tv[a].push_back(b);\n\t\tv1[a].push_back(c);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(i==j)continue;\n\t\t\tgo(i,j);\n\t\t}\n\t}\n\tint Q=read();\n\tfor(int i=1;i<=Q;i++){\n\t\tint x=read(),y=read();\n\t\tif(ans[x][y]<0)printf(\"OMG!\\n\");\n\t\telse printf(\"%.3lf\\n\",ans[x][y]);\n\t}\n}\n```\n\n",
        "postTime": 1593993751,
        "uid": 120244,
        "name": "luyan",
        "ccfLevel": 6,
        "title": "P1730 \u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84-01\u5206\u6570\u89c4\u5212"
    },
    {
        "content": "\u6700\u8fd1$01$\u5206\u6570\u89c4\u5212\u7684\u9898\u76ee\u505a\u591a\u4e86\uff0c\u770b\u5230\u8fd9\u9898\u4e0b\u610f\u8bc6\u7801\u4e86$SPFA+$\u4e8c\u5206\uff0c\u624d\u770b\u5230$DAG$\u3002\n\n$SPFA+$\u4e8c\u5206\u4e5f\u53ef\u4ee5\u505a\u8fd9\u9053\u9898\u561b\u3002\n\n\u8fd9\u9053\u9898\u8be2\u95ee$10^5$\u7136\u800c\u672c\u8d28\u4e0d\u540c\u7684\u53ea\u6709$n^2$\u4e2a\u3002\n\n\u6240\u4ee5\u628a\u8be2\u95ee\u6253\u4e2a\u8868\uff0c\u6700\u540e\u67e5\u8868\u8f93\u51fa\u3002\n\n\u4ece\u5927\u4f6c\u90a3\u91cc\u542c\u6765\uff0c$DAG$\u4e0a$SPFA$\u597d\u50cf\u53ea\u80fd\u5361\u5230$max(N^2,kM)$(~~\u9519\u4e86\u522b\u55b7~~),\u6240\u4ee5\u76f4\u63a5\u5927\u529b$SPFA+01$\u5206\u6570\u89c4\u5212\u505a$N^2$\u6b21,\u590d\u6742\u5ea6\u4e5f\u5c31$O(n^4log(?))$,\u8fd8\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n$01$\u5206\u6570\u89c4\u5212\u4ec0\u4e48\u7684\u8fd8\u662f\u8001\u5957\u8def\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u8be2\u95ee$(from,to)$,\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848(\u5177\u6709\u5355\u8c03\u6027)\u3002\n\n\u731c\u6d4b\u7b54\u6848\u4e3a$limit$,\u5219$limit$\u5c0f\u4e8e\u7b49\u4e8e\u4efb\u4f55\u7684\u53ef\u884c\u89e3\u3002\n\n$\\sum{W[i]}/\\text{\u8fb9\u6570}>=limit$\n\n$\\sum{W[i]}/(\\text{\u8fb9\u6570}*limit)>=1$\n\n$\\sum{W[i]}>=(\\text{\u8fb9\u6570}*limit)$\n\n$\\sum{W[i]}-(\\text{\u8fb9\u6570}*limit)>=0$\n\n$\\sum{(W[i]-limit)}>=0$\n\n\u4e5f\u5c31\u662f\u8bf4$limit$\u4e3a\u5408\u53d1\u89e3\u53ef\u4ee5\u901a\u8fc7\u5728\u4e00\u4e2a\u8fb9\u6743\u4e3a$(W[i]-limit)$\u7684\u65b0\u56fe\u4e0a\u8dd1\u6700\u77ed\u8def\uff0c$(from,to)$\u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e0\u6765\u68c0\u9a8c\u3002\n\n\u7136\u540e\u8fd8\u6709\u4e2a\u5c0f\u4f18\u5316\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u4e8c\u5206\u7684$check$,\u6211\u4eec\u90fd\u8dd1\u4e86\u4e00\u6b21\u5355\u6e90\u6700\u77ed\u8def\uff0c\u4f46\u662f\u53ea\u5229\u7528\u4e86\u5176\u4e2d\u7684\u4e00\u4e2a\u4fe1\u606f\uff0c\u672a\u514d\u6d6a\u8d39\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5728\u4e8c\u5206\u7684\u8fb9\u754c\u4e0a\u505a\u624b\u811a(\u4e0d\u77e5\u9053\u5982\u4f55\u63cf\u8ff0\uff0c\u8fd8\u662f\u770b\u4ee3\u7801\u5427)\u3002\n\n\u4e0d\u77e5\u9053\u5361\u6389\u7684\u662f\u5e38\u6570\u8fd8\u662f\u590d\u6742\u5ea6\uff0c\u53cd\u6b63\u8dd1\u7684\u633a\u5feb\u3002\n\n~~\u53e6\u5916\uff0c\u6211\u5224\u65ad\u65e0\u89e3\u7684\u65b9\u5f0f\u6709\u70b9\u4ee4\u4eba\u65e0\u8bed~~\n\n**Code:**\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#define eps 1e-5\nusing namespace std;\nvector<int> g[55],l[55];\nint n,m,from,to,len,q;\ndouble ans[55][55],ll[55][55],rr[55][55],s[55];\nqueue<int> t;\nbool in[55];\n/*\n\u5047\u8bbeans>=limit\n\u5219sum(len)/sum(cnt) >= limit\n  sum(len)/(sum(cnt)*limit) >= 1\n  sum(len) >= sum(cnt)*limit\n  sum(len)-sum(cnt)*limit >= 0\n  sum(len-limit) > 0\n*/\nbool check(int from,int to,double limit)\n{\n  for (int i=1;i<=n;i++)s[i]=1e15;\n  s[from]=0;t.push(from);in[from]=1;\n  while(!t.empty()){\n  \tint u=t.front();\n  \tin[u]=0;\n  \tt.pop();\n  \tfor (int i=0,v;i<g[u].size();i++)\n  \t if (s[v=g[u][i]]>s[u]+l[u][i]-limit+eps){\n  \t   s[v]=s[u]+l[u][i]-limit;\n\t   //\u6ce8\u610f\u8fd9\u91cc\u8fb9\u6743 \n  \t   if (!in[v]){in[v]=1;t.push(v);}\n  \t }\n  }s[from]=1e15;\n  //SPFA,\u6ca1\u5565\u597d\u770b\u7684 \n  for (int i=1;i<=n;i++)\n    if (s[i]<eps)rr[from][i]=min(rr[from][i],limit);\n    else ll[from][i]=max(ll[from][i],limit);\n  //\u5728\u8fd9\u91cc\u505a\u4e86\u624b\u811a \n  return s[to]<eps;\n}\nvoid getans(int from,int to)\n{\n  if (!check(from,to,1e6))return ;\n  //\u5224\u65ad\u65e0\u89e3 \n  double l=ll[from][to],r=rr[from][to],mid;\n  while(r-l>eps){\n  \tmid=(l+r)/2;\n  \tif (check(from,to,mid))r=mid;\n  \telse l=mid;\n  }ans[from][to]=l;\n  //01\u5206\u6570\u89c4\u5212 \n}\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  for (int i=1;i<=m;i++){\n    scanf(\"%d%d%d\",&from,&to,&len);\n    g[from].push_back(to);\n    l[from].push_back(len);\n  }\n  for (int i=1;i<=n;i++)\n   for (int j=1;j<=n;j++){\n     ll[i][j]=0;rr[i][j]=100500;\n\t ans[i][j]=2.333333333;\n   }\n  for (int i=1;i<=n;i++)\n   for (int j=1;j<=n;j++)\n    if (i!=j)getans(i,j);\n  scanf(\"%d\",&q);\n  for (int i=1;i<=q;i++){\n  \tscanf(\"%d%d\",&from,&to);\n  \tif (2.33333333<ans[from][to]&&ans[from][to]<2.33333334)\n  \t puts(\"OMG!\");\n\telse printf(\"%.3lf\\n\",ans[from][to]);\n  }\n  return 0;\n}\n```\n\n~~Orz\u6bd4\u5404\u4f4ddp\u7684\u5de8\u4f6c\u6162\u591a\u4e86~~",
        "postTime": 1546432526,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u5f88\u7b80\u5355\u7684\u2026\u2026\u5e94\u8be5\u6ca1\u6709\u63d0\u9ad8+/\u7701\u9009-~~\uff08\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u62110\u52062\u6b21\uff1f\uff09~~\n\n\u6bd4\u8f83\u663e\u7136\u7684\u662f\uff0c**\u8be2\u95ee\u6b21\u6570\u975e\u5e38\u975e\u5e38\u591a\uff0c\u800cn\u53ea\u670950\u3002**\n\n\u603b\u5171\u7684\u8be2\u95ee\u65b9\u6848\u53ea\u6709(50\\*50)2500\u79cd\uff0c\u5b83\u5374\u95ee\u4f6010000\u4e0b\u2026\u2026\u4e0d\u4e86\u89e3\u662f\u51e0\u4e2a\u610f\u601d\u3001\n\n\u8003\u8651\u4e00\u4e0b\u666e\u901a\u6700\u77ed\u8def\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u8981\u8bb0\u5f55\u8d70\u5230\u8fd9\u91cc\u7684\u957f\u5ea6\u5c31\u597d\u4e86\u3002\u4f46\u8fd9\u4e2a\u8981\u6c42\u7684\u662f\u5e73\u5747\u957f\u5ea6\u2026\u2026\u90a3\u6211\u4eec\u5c31\u5728\u8bb0\u5f55\u4e00\u4e0b\u8d70\u5230\u8fd9\u91cc\u603b\u5171\u7528\u4e86k\u6b65\u5c31\u597d\u4e86\u3002\n\n\u6240\u4ee5\"\u72b6\u6001\"\u662fdp[now][k]\uff0c\u4ee3\u8868\u8d70\u5230\u4e86\u8fd9\u91cc\u65f6\u5df2\u7ecf\u8d70\u8fc7\u7684\u8ddd\u79bb\uff08\u4e0d\u4f5c\u9664\u6cd5\uff0c\u6545\u4e3a\u6574\u6570\uff09\u3002\n\n\u4e25\u683c\u6765\u8bf4\uff0c\u72b6\u6001\u91cc\u8fd8\u5e94\u8be5\u6709\u8d77\u59cb\u70b9\u548c\u7ec8\u70b9\uff0c\u8fd9\u6837\u5b50\u624d\u80fd\u52a8\u6001\u89c4\u5212\u3002\u4f46\u662f\u5728\u8fd9\u9898\u91cc\u9762\uff0c\u8fd9\u4e2adp\u6570\u7ec4\u5c31\u662f\u4e00\u4e2a\u8f85\u52a9\u7528\u7684\u6570\u7ec4\uff1a**\u771f\u6b63\u7684\u7b54\u6848\u53ea\u53d6\u51b3\u4e8e\u4ece\u54ea\u91cc\u6765\u548c\u5230\u54ea\u91cc\u53bb**\uff0c\u548c\u8fd9\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684now\u554ak\u554a\u5176\u5b9e\u4e00\u70b9\u5173\u7cfb\u90fd\u6ca1\u6709\u7684\u3002\u53ea\u662f\u4f60\u90a3\u6837\u5b50\u5b9a\u4e49\u72b6\u6001\u7684\u7684\u8bdd\u4f60\u7684\u72b6\u6001\u8f6c\u79fb\u2026\u2026\n\n\u6211\u4eec\u5728\u505a\u7684\u5176\u5b9e\u53ea\u662f**\u5229\u7528dp\u6570\u7ec4\u8ba1\u7b97\u51famem[fr][to]**\uff0c\u5b83\u4ee3\u8868\u4e86\u4ecefr\u5230to\u7684\u7b54\u6848\uff0c\u4e4b\u540e\u8bb0\u5f55\u4e00\u4e0b\u4ee5\u5907\u5b83\u518d\u6b21\u67e5\u8be2\u3002\u7528\u5b8c\u4e86\uff0cdp\u4e22\u4e86\u5c31\u597d\uff08\u521d\u59cb\u5316\uff09\uff0c\u6216\u8005\u4f60\u5f00dp[fr][to][now][k]\u4e5f\u884c\u7684\uff0c\u53ea\u662f**fr\uff0cto\u4e0d\u540c\u7684\u72b6\u6001\u95f4\u4e0d\u4f1a\u4ea7\u751f\u8f6c\u79fb**\u3002\n\n\u6211\u4eec\u7528bfs\u5e72\u8fd9\u4ef6\u4e8b\uff1a\u6bcf\u6b21\u53ef\u4ee5\u4ece\u72b6\u6001dp[now][k]\u8f6c\u79fb\u5230dp[next][k+1]\uff0c\u53ea\u8981\u4f60\u80fd\u8d70\u8fc7\u53bb\u800c\u4e14\u6bd4\u5148\u524d\u7684\u72b6\u6001\u4f18\uff08\u53c8\u6216\u8005\u4e4b\u524d\u5c31\u6ca1\u6709\u63a8\u51fa\u8fc7\u8fd9\u4e2a\u72b6\u6001\uff09\n\n\u6240\u4ee5\u8fd9\u5927\u6982\u7b97\u662f\u4e00\u4e2a\u5206\u5c42dp\u4e86\uff1a\u6bcf\u6b21\u4f60\u53ea\u80fd\u4ecek\u8d70\u5230k+1\u3002\n\n\u8003\u8651\u5230\u8fd9\u662f\u4e00\u4e2a\u65e0\u73af\u56fe\uff08\u636e\u8ba8\u8bba\u91cc\u8bf4\u662f\u6709\u73af\u7684\uff0c\u6211\u4e0d\u6e05\u695a\u2026\u2026\u4f46\u6211\u8fd9\u6837\u662fAC\u4e86\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u7684k\u53ea\u8981\u5f00\u5230\u548cn\u4e00\u6837\u5c31\u591f\u4e86\u2014\u2014**\u56e0\u4e3a\u6ca1\u6709\u73af\u6bcf\u6b21\u90fd\u53ea\u80fd\u5f80\u67d0\u4e2a\u65b9\u5411\uff0c\u5728\u67d0\u4e2a\u610f\u4e49\u4e0a\u7684\u524d\u8fdb\u800c\u4e0d\u53ef\u80fd\u8fd4\u56de\u3002**\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u904d\u5386\u5168\u56fe\u6700\u591ak\u4e5f\u5c31\u5230n-1\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\u5c31\u662f\u8d70\u4e0d\u5230\u3002\u3002\u53ea\u8981\u901a\u8fc7\u8bb0\u5f55\u4e00\u4e2abVal[fr][to]\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524dmem[fr][to]\u662f\u5426\u662f\u6709\u6548\u7684\u5c31\u597d\u4e86\uff0c\u5982\u679cbVis[fr][to] == true\uff08\u5df2\u7ecf\u67e5\u8be2\u8fc7\u8fd9\u5bf9fr\u548cto\u4e86\uff09\u800cbVal[fr][to] == false\uff0c\u5219\u8bf4\u660e\u4e0a\u6b21\u67e5\u8be2\u6ca1\u51fa\u7ed3\u679c\uff0c\u8fd9\u6b21\u5f53\u7136\u4e5f\u4e0d\u4f1a\u51fa\uff0c\u5c31\"OMG!\"\u4e86\uff08\u6211\u56e0\u4e3a\u8fd9\u91cc\u4e00\u6b21\u903b\u8f91\u5199\u6f0f\uff0c\u4e00\u6b21\u903b\u8f91\u5199\u53cd\uff0c\u5168\u90e8\"On linex \u2026\u2026 read OMG!,expect XXX\"\u2026\u2026\u201c\u6211\u60f3\uff0c\u8fd9\u5b9e\u5728\u662f\u65e0\u6cd5\u53ef\u60f3\u7684\u4e86\u3002\u201d\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n\n#include <queue>\n\n#define FOR_EDGE(i, pt) for (int i(iHead[pt]); i; i = all[i].next)\n\nclass edge\n{\npublic:\n    int to, val, len, next;\n}all[1123];\nint iEnd(2);\nint iHead[51];\n\nvoid add(int fr, int to, int len)\n{\n    all[iEnd].to = to;\n    all[iEnd].len = len;\n    all[iEnd].next = iHead[fr];\n    iHead[fr] = iEnd++;\n}\n\nint NextVis;\nint bInQue[51][51];//\u8fd9\u4e2a\u72b6\u6001\u5728\u961f\u5217\u91cc\u4e86\uff08\u83ab\u540dSPFA\u7684\u611f\u89c9\uff0c\u611f\u89c9\u4e5f\u7b97\u534a\u4e2aSPFA\u5427\uff0c\u53ea\u662f\u5168\u90e8\u6b63\u6743\u548c\u65e0\u73af\u66f4\u50cf\u5e7f\u641c\uff09\nint bVis[51][51];//\u5728\u5e7f\u641c\u65f6\u662f\u5426\u8bbf\u95ee\u8fc7\uff08\u8bbf\u95ee\u6807\u8bb0\uff0c\u4ee3\u8868\u5f53\u524ddp\u503c\u662f\u5426\u6709\u6548\uff09\nint dp[51][51];//\u8f85\u52a9\u6570\u7ec4dp\uff0c\u5982\u4e0a\u6240\u8ff0\n\nbool bMem[51][51], bVal[51][51];//\u662f\u5426\u67e5\u8be2\u8fc7\u8fd9\u5bf9(fr,to)\uff0c\u4ee5\u53ca\u662f\u5426\u6709\u89e3\ndouble mem[51][51];//\u5b9e\u8d28\u4e0a\u662f\u5b8c\u5168\u8bb0\u5f55\u4e86\u72b6\u6001\u7684\u6570\u7ec4\uff0c\u4f46\u662f\u5bf9\u4e8e\u8f6c\u79fb\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\u2026\u2026\u771f\u4e0d\u77e5\u9053\u600e\u4e48\u79f0\u547c\u597d\n\ndouble bfs(int fr, int to, bool& fail)\n{\n    if (bMem[fr][to] && !bVal[fr][to])\n    {\n        fail = true;//\u65e0\u89e3\n        return 0;\n    }\n    if (bMem[fr][to])\n    {\n        fail = false;//\u6709\u89e3\u6709\u89e3\uff08\u8fd9\u884c\u6211\u9519\u8bef\u4e24\u6b21\u2026\u2026\u5927\u6982AC\u5fc3\u5207\uff09\n        return mem[fr][to];\n    }\n    ++NextVis;\n    bMem[fr][to] = true;\n    std::queue<int> now, pass;\n    now.push(fr);\n    pass.push(0);\n    dp[fr][0] = 0;\n    while (!now.empty())\n    {\n        int n(now.front()), p(pass.front());\n        now.pop(); pass.pop();\n        bInQue[n][p] = 0;\n        if (n == to)\n        {\n            if (double(dp[n][p]) / double(p) < mem[fr][to] || !bVal[fr][to])\n            {\n                bVal[fr][to] = true;//\u627e\u5230\u4e00\u4e2a\u89e3\u4e86\uff0c\u5148\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5e7f\u641c\u5b8c\u8bd5\u8bd5\u8fd8\u6709\u6ca1\u6709\u66f4\u4f18\u7684\u89e3\uff08\uff1f\u6240\u4ee5\u4f60\u7528dijkstra\u5230\u4e86\u8fd9\u91cc\u5927\u6982\u53ef\u4ee5\u76f4\u63a5\u8d70\u4eba\u4e86\uff1f\uff09\n                mem[fr][to] = double(dp[n][p]) / double(p);\n            }\n        }\n        FOR_EDGE(i, n)\n        {\n\n            if (bVis[all[i].to][p + 1] ^ NextVis || dp[all[i].to][p + 1] > all[i].len + dp[n][p])\n            {\n                bVis[all[i].to][p + 1] = NextVis;//\u66f4\u4f18\u7684\u72b6\u6001\uff0c\u6216\u8005\u4e4b\u524d\u5c31\u6ca1\u6709\u8fd9\u4e2a\u72b6\u6001\n                dp[all[i].to][p + 1] = all[i].len + dp[n][p];\n                if (bInQue[all[i].to][p + 1] ^ NextVis)\n                {\n                    bInQue[all[i].to][p + 1] = NextVis;//\u5728\u961f\u5217\u91cc\u5c31\u4e0d\u5fc5\u5165\u961f\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5077\u6362\u4e86dp\u503c\u4e86\n                    now.push(all[i].to);\n                    pass.push(p + 1);\n                }\n            }\n        }\n    }\n    if (!bVal[fr][to])\n    {\n        fail = true;\n        return -1;\n    }\n    fail = false;\n    return mem[fr][to];\n}\n\nint n, m, q;\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);//\u8f93\u5165\uff0c\u5efa\u56fe\uff0c\u67e5\u8be2\uff0c\u8f93\u51fa\uff0c\u5e73\u6de1\u65e0\u5947\n    for (int i(0); i != m; ++i)\n    {\n        int fr, to, len;\n        scanf(\"%d%d%d\", &fr, &to, &len);\n        add(fr, to, len);\n    }\n    scanf(\"%d\", &q);\n    for (int i(0); i != q; ++i)\n    {\n        int fr, to;\n        scanf(\"%d%d\", &fr, &to);\n        bool fail;\n        double ans = bfs(fr, to, fail);\n        if (fail)\n        {\n            printf(\"OMG!\\n\");\n        }\n        else\n        {\n            printf(\"%.3f\\n\", ans);\n        }\n    }\n    //while (1);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1532012638,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    },
    {
        "content": "\u5728\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u4e2d\u627e\u5230\u4e00\u4e2a\u6700\uff08\uff09\u7684\u8def\u5f84\uff0c\u7136\u540e\u8f93\u51fa\u5176\u6700\uff08\uff09\u7684\u8def\u5f84\u503c\u3002\u4e00\u770b\u5c31\u662f\u6700\u77ed\u8def\u7684\u6a21\u578b\u3002\u8fd9\u79cd\u9898\u9762~~\u767d\u75f4~~\u76f4\u63a5\u7684\u9898\u78b0\u4e0a\u662f\u6700\u597d\u7684\uff0c\u4f46\u65e2\u7136\u8fd9\u6837\u7684\u9898\u5982\u6b64~~\u767d\u75f4~~\u76f4\u63a5\u7684\u95ee\u51fa\u6765\u4e00\u5b9a\u662f\u6709\u5b83\u7684\u96be\u5ea6\u7684\u3002\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u9053\u9898\u7531\u4e8e\u6570\u636e\u4e0d\u5927\uff0c\u53ef\u4ee5\u7528floyd\u76f4\u63a5\u505a\uff0c\u53ef\u89c1\u8fd9\u9898\u76ee\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff0c\u4f46\u4e5f\u8868\u73b0\u8fd9\u9898\u76ee\u8003\u7684\u4e0d\u662f\u6700\u77ed\u8def\uff0c\u800c\u662f\u4e0e\u6700\u77ed\u8def\u7ed3\u5408\u7684\u6570\u5b66\u57fa\u7840\u3002\n\n\u6211\u4eec\u7528floyd\u65f6\uff0c\u4f1a\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u800c\u6211\u4e00\u5f00\u59cb\u662f\u8fd9\u6837\u60f3\u7684\n\n```cpp\ndouble f[51][51]//\u4ecei\u5230j\u7684\u6700\u5c0f\u5bc6\u5ea6\u5bf9\u5e94\u7684\u957f\u5ea6\ndouble l[51][51]//\u4ecei\u5230j\u7684\u6700\u5c0f\u5bc6\u5ea6\u5bf9\u5e94\u7684\u8def\u7684\u6761\u6570\n\nfor(int k=1;k<=50;k++){\n\tfor(int i=1;i<=50;i++){\n    \tfor(int j=1;j<=n;j++){\n        \tdouble nt=(d[i][k]+d[k][j])/(l[i][k]+l[k][j]);\n            if(nt<d[i][j]/l[i][j]){\n            \td[i][j]=d[i][k]+d[k][j];\n                l[i][j]=l[i][k]+l[k][j];\n            }\n        }\n    }\n}\n```\n\n\u7136\u800cWA\uff0c\u6240\u4ee5\u53ea\u80fd\u518d\u601d\u8003\u7ed9\u51fa\u4e00\u4e2a\u6570\u636e\u6765\u793a\u8303\u4e00\u4e0b\u70b9A,B,C\nA\u5230B\u7684\u8def\u6709L1\uff081,2\uff09\u548cL2\uff0851,100\uff09B\u5230C\u7684\u8def\u6709L3\uff083,4\uff09\u548cL4\uff088,10\uff09\u82e5\u6309\u4e0a\u8ff0\u65b9\u6cd5\u4f1a\u9009\u4e2dL1\u548cL3\u5b9e\u9645\u4e0aL2\u548cL3\u662f\u6700\u77ed\u7684\uff0c\u4e00\u6b21\u8981\u628a\u6bcf\u4e00\u4e2a\u60c5\u51b5\u90fd\u7b97\u4e00\u904d\uff0c\u4e0d\u80fd\u53ea\u7528\u8d2a\u5fc3\n\n```\nfor(int l=2;l<=n;l++){\n\t\tfor(int k=1;k<=n;k++){\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\t\td[i][j][l]=min(d[i][k][l-1]+d[k][j][1],d[i][j][l]);\n//\t\t\t\t\tcout<<d[i][j][l]<<endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u8fd9\u662f\u6b63\u786e\u7684floyd\u8fc7\u7a0b\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801\n\n```\n#include<stdio.h>\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m,q;\nint map[51][51];\ndouble d[51][51][51];\ndouble li[51][51];\nconst int INF=0x7fffffff;\n\nvoid init(){\n\tfor(int i=1;i<n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tmap[i][j]=map[j][i]=li[i][j]=li[j][i]=INF;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfor(int k=0;k<=n;k++){\n\t\t\t\td[i][j][k]=INF;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\td[i][i][0]=0;\n\t}\n}\n\nvoid floyd(){\n\tfor(int l=2;l<=n;l++){\n\t\tfor(int k=1;k<=n;k++){\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tfor(int j=1;j<=n;j++){\n\t\t\t\t\td[i][j][l]=min(d[i][k][l-1]+d[k][j][1],d[i][j][l]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfor(int k=1;k<=n;k++){\n\t\t\t\tif(d[i][j][k]<INF){\n\t\t\t\t\tli[i][j]=min(li[i][j],d[i][j][k]/k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid solve(int x,int y){\n\tif(x==y||li[x][y]==INF){\n\t\tprintf(\"OMG!\\n\");\n\t\treturn;\n\t}\n\tprintf(\"%.3f\\n\",li[x][y]);\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tinit();\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,c;\n\t\tscanf(\"%d%d%d\",&x,&y,&c);\n\t\tif(c<map[x][y]) map[x][y]=d[x][y][1]=c;\n\t}\n\tfloyd();\n\tscanf(\"%d\",&q);\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tsolve(x,y);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1528446583,
        "uid": 71080,
        "name": "\u8363\u4e00\u9e23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1730 \u3010\u6700\u5c0f\u5bc6\u5ea6\u8def\u5f84\u3011"
    }
]