[
    {
        "content": "\u8fd9\u9898\u771f\u7684\u5f88\u9189\u5440\u3002\u3002\u3002\u3002\n\n\u9996\u5148\u6784\u5efa\u51faAC\u81ea\u52a8\u673a\n\n\u7136\u540e\u5728AC\u81ea\u52a8\u673a\u4e0a\u9762\u8dd1DP\n\n\u8f6c\u79fb\u5f88\u663e\u7136\u4eceTrie\u6811\u7684\u8282\u70b9\u8df3\u5230\u4ed6\u7684\u513f\u5b50\u8282\u70b9\n\n\u4f46\u662f\u8981\u6ce8\u610f\u4e00\u4e2a\u95ee\u9898\uff0c\n\n\u5728\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u52a0\u5165\u540e\u80fd\u591f\n\n\u9020\u6210\u7684\u8d21\u732e\n\n\u8981\u52a0\u4e0a\u4ed6\u7684\u5b50\u4e32\u7684\u8d21\u732e\n\n\u7136\u540e\u5c31\u662f\u4e11\u964b\u7684\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<algorithm>\nusing namespace std;\n#define INF 1000000\nint N,K;\nint tot=0,ans;\nchar s[20];\nint f[1100][400];\nstruct Node\n{\n    int vis[3];\n    int p;\n    int fail;\n}t[5000];\nvoid Add(char *s)\n{\n    int l=strlen(s);\n    int now=0;\n    for(int i=0;i<l;++i)\n    {\n        if(!t[now].vis[s[i]-'A'])\n            t[now].vis[s[i]-'A']=++tot;\n        now=t[now].vis[s[i]-'A'];\n    }\n    t[now].p++;\n}\nvoid Build()\n{\n    queue<int> Q;\n    for(int i=0;i<3;++i)\n        if(t[0].vis[i])Q.push(t[0].vis[i]);\n    while(!Q.empty())\n    {\n        int u=Q.front();Q.pop();\n        for(int i=0;i<3;++i)\n        {\n            if(t[u].vis[i])\n            {\n                t[t[u].vis[i]].fail=t[t[u].fail].vis[i];\n                Q.push(t[u].vis[i]);\n            }\n            else\n                t[u].vis[i]=t[t[u].fail].vis[i];\n        }\n        t[u].p+=t[t[u].fail].p;\n    }\n}\nvoid DP()\n{\n    for(int T=0;T<=K;++T)\n        for(int i=1;i<=tot;++i)\n            f[T][i]=-INF;\n    for(int T=1;T<=K;++T)\n    {\n        for(int i=0;i<=tot;++i)\n        {\n            for(int j=0;j<3;++j)\n                f[T][t[i].vis[j]]=max(f[T][t[i].vis[j]],f[T-1][i]+t[t[i].vis[j]].p);\n        }\n    }\n    for(int i=0;i<=tot;++i)ans=max(ans,f[K][i]);\n}\nint main()\n{\n    scanf(\"%d%d\",&N,&K);\n    for(int i=1;i<=N;++i)\n    {\n        scanf(\"%s\",s);\n        Add(s);\n    }\n    Build();\n    DP();\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1507565121,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3041 \u3010[USACO12JAN]\u89c6\u9891\u6e38\u620f\u7684\u8fde\u51fbVideo Game Combos\u3011"
    },
    {
        "content": "# \u5e7f\u544a\n\n### [\u849f\u84bb\u306eblog](http://www.cnblogs.com/dedicatus545/p/8907126.html)\n\n# \u601d\u8def\n\n\u9996\u5148\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u601d\u8def\u5c31\u662fdp\uff1a\n\n\u8bbe$dp[i][j]$\u8868\u793a\u524di\u4e2a\u5b57\u7b26\uff0c\u6700\u540e\u4e00\u4e2a\u4e3aj\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u6709\u540e\u6548\u6027\n\n\u6539\uff01\u8bbe$dp[i][j]$\u4ee3\u8868\u524di\u4e2a\u5b57\u7b26\uff0c\u6700\u540e15\u4e2a\u7684\u72b6\u6001\u4e3aj\uff08\u538b\u7f29\u4e00\u4e0b\uff09\uff0c\u8f6c\u79fb\u7684\u662f\u5019\u679a\u4e3e\u589e\u52a0\u90a3\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u770b\u4ece\u8c01\u53ef\u4ee5\u63a8\u8fc7\u6765\n\n\u7136\u540e\u5c31TLE\u4e86\uff0c\u5b8c\u5168\u65e0\u538b\u529b\n\n### \u600e\u4e48\u4f18\u5316\u8fd9\u4e2a\u7b97\u6cd5\uff1f\n\n\u663e\u7136\uff0c\u679a\u4e3e\u5b8c\u589e\u52a0\u54ea\u4e2a\u5b57\u7b26\u4ee5\u540e\uff0c\u53ef\u4ee5\u7528AC\u81ea\u52a8\u673a\u6765\u5b9e\u73b0\u591a\u6a21\u5339\u914d\n\n\u7136\u540e\u53d1\u73b0\uff1a\u6211\u4eec\u628aj\u7684\u5b9a\u4e49\u53d8\u6210AC\u81ea\u52a8\u673a\u4e0a\u9762\u7684\u70b9j\uff0c\u8fd9\u6837\u4e00\u4e2a\u70b9\u5c31\u4ee3\u8868\u4e00\u79cd\u72b6\u6001\uff0c\u72b6\u6001\u4e4b\u95f4\u4e92\u76f8\u4e0d\u91cd\u590d\uff0c\u800c\u4e14\u4e5f\u6ca1\u6709\u540e\u6548\u6027\n\n\u8fd9\u6837\u7684\u5b9a\u4e49\u65b9\u6cd5\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff1a\u72b6\u6001\u5c11\uff0c\u4ece$3^{15}$\u4e2a\u53d8\u6210\u4e86$300$\u4e2a\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u6700\u7ec8\u505a\u6cd5\uff1a\n\n### \u6700\u7ec8\u7b97\u6cd5\n\n\u5bf9\u4e8e\u8f93\u5165\u7684\u6a21\u677f\u4e32\u5efa\u7acbAC\u81ea\u52a8\u673a\n\n\u4ee4$dp[i][j]$\u8868\u793a\u524di\u4e2a\u5b57\u7b26\uff0c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u8dd1\u5230AC\u81ea\u52a8\u673a\u7684\u7b2cj\u4f4d\u4e0a\u7684\u6700\u5927\u7b54\u6848\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u6bcf\u4e2a$dp[i][j]$\u679a\u4e3e\u4e0b\u4e00\u4e2a\u662fA,B,C,\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9j'\uff0c\u7136\u540e\u8df3\u4e00\u904dfail\u6307\u9488\n\n\u5bf9\u4e8e\u5339\u914d\u5230\u7684\u4e00\u4e2a\u957f\u5ea6\u4e3ak\u7684\u6a21\u677f\u4e32\uff0c$dp[i+1][j']=max\\left(dp[i+1][j'],dp[i-k][j]\\right)$\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f$dp[K][i]$\u7684\u6700\u5927\u503c\n\n# Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nstruct node{\n    int num,fail,son[3];\n    node(){num=fail=0;memset(son,0,sizeof(son));}\n}a[510];int cnt;\nvoid add(char s[]){//\u63d2\u5165\u5b57\u7b26\u4e32\u5230trie\n    int len=strlen(s),i,cur=0;\n    for(i=0;i<len;i++){\n        if(!a[cur].son[s[i]-'A']) a[cur].son[s[i]-'A']=++cnt;\n        cur=a[cur].son[s[i]-'A'];\n    }\n    a[cur].num++;\n}\nvoid getfail(){//bfs\u6c42fail\u6307\u9488\n    int u,v,q[510],head=0,tail=0,i;\n    for(i=0;i<3;i++){\n        if(!a[0].son[i]) continue;\n        a[0].fail=0;q[tail++]=a[0].son[i];\n    }\n    while(head<tail){\n        u=q[head++];\n        for(i=0;i<3;i++){\n            v=a[u].son[i];\n            if(v) a[v].fail=a[a[u].fail].son[i],q[tail++]=v;\n            else a[u].son[i]=a[a[u].fail].son[i];\n        }\n    }\n}\nint m,n,dp[1010][510];bool vis[1010][510];\nint proc(int cur,int val){//\u8df3fail\u6307\u9488\u6c42\u503c\n    while(cur) val+=a[cur].num,cur=a[cur].fail;\n    return val;\n}\nint main(){\n    scanf(\"%d%d\",&m,&n);int i,j,k,tmp;char s[20];\n    for(i=1;i<=m;i++) scanf(\"%s\",s),add(s);\n    getfail();vis[0][0]=1;\n    for(i=0;i<n;i++){\n        for(j=0;j<=cnt;j++){\n            if(!vis[i][j]) continue;\n            for(k=0;k<3;k++){\n                tmp=a[j].son[k];\n                dp[i+1][tmp]=max(dp[i+1][tmp],proc(tmp,dp[i][j]));\n                vis[i+1][tmp]=1;\n            }\n        }\n    }\n    int ans=0;\n    for(i=0;i<=cnt;i++) ans=max(ans,dp[n][i]);\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1524378156,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3041 \u3010[USACO12JAN]\u89c6\u9891\u6e38\u620f\u7684\u8fde\u51fbVideo Game Combos\u3011"
    },
    {
        "content": "### $AC$\u81ea\u52a8\u673a$+dp$ \n\n~~\u5f53\u5e74\u88ab\u8fd9\u9053\u9898\u66b4\u6253\uff0c\u73b0\u5728\u56de\u6765\u590d\u4ec7~~\n\n#### 1.\u8bbe\u8ba1\u72b6\u6001\n$dp[i][j]$\u8868\u793a\u957f\u5ea6\u4e3a$i$\uff0c\u5f53\u524d\u5728$trie$\u4e0a\u7684$j$\u4f4d\u7f6e\u65f6\u7684\u6700\u5927\u5f97\u5206\n\n\u5176\u5b9eAC\u81ea\u52a8\u673a\u7684\u9898\u611f\u89c9\u72b6\u6001\u90fd\u662f\u8fd9\u6837\uff0c\u81f3\u5c11\u6211\u9047\u5230\u7684\u90fd\u662f\u8fd9\u6837\uff0c~~\u53ef\u80fd\u662f\u6211\u592a\u83dc\u4e86~~\n\n#### 2.\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n$dp[i][tr[j][k]]=max(dp[i-1][j]+is[tr[j][k])$\n\n\u5373\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\uff0c\u56e0\u4e3a\u672c\u9898\u8981\u6c42\u6c42\u6700\u5927\u503c\uff0c\u6240\u4ee5\u53d6max\u3002\n\n~~\u63a5\u4e0b\u6765\u5c31\u662f\u4f60\u4eec\u6700\u559c\u6b22\u7684\u4ee3\u7801~~\n\n## $Code$\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <string>\n#include <queue>\n#include <cstring>\nusing namespace std;\nconst int maxl=1e3+5,maxn=15*20+5;\nint tr[maxn*25][3],fail[maxn*25],tot,is[maxn*25];\nint dp[maxl*2][maxn*2],n,k;\n\ninline void insert(string s)\n{\n    int len=s.length(),u=0;\n    for(int i=0;i<len;i++)\n    {\n        int &v=tr[u][s[i]-'A'];\n        u=v?v:v=++tot;\n    }\n    is[u]++;\n}\n\nvoid get_fail()\n{\n    queue<int> que;\n    for(int i=0;i<3;i++)\n        if(tr[0][i]) que.push(tr[0][i]);\n    while(!que.empty())\n    {\n        int u=que.front();que.pop();\n        for(int i=0;i<3;i++)\n        {\n            int &v=tr[u][i];\n            if(v){\n                fail[v]=tr[fail[u]][i];\n                que.push(v);\n            }\n            else v=tr[fail[u]][i];\n        }\n        is[u]+=is[fail[u]];//\u8981\u52a0\u4e0afail[u]\u7684is\uff0c\u56e0\u4e3a\u8d70\u5230u\u540e\u9a6c\u4e0a\u4f1a\u8f6c\u79fb\u5230fail[u]\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    string s;\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s;insert(s);\n    }\n    get_fail();\n    memset(dp,-0x3f,sizeof(dp));//\u521d\u59cb\u5316dp\n    for(int i=0;i<=k;i++) dp[i][0]=0;//\u521d\u59cb\u5316dp\n    for(int i=1;i<=k;i++)\n        for(int j=0;j<=tot;j++)\n            for(int k=0;k<3;k++)\n                dp[i][tr[j][k]]=max(dp[i][tr[j][k]],dp[i-1][j]+is[tr[j][k]]);\n    int ans=-0x3f3f3f3f;\n    for(int i=0;i<=tot;i++)\n        ans=max(ans,dp[k][i]);//\u8bb0\u5f97\u53d6max\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\u7801\u5b57\u4e0d\u5bb9\u6613\uff0c\u6c42\u8fc7qwq\n",
        "postTime": 1587289724,
        "uid": 199750,
        "name": "\u8bd5\u8bd5\u4e8b\u5b9e\u4e0a\u5417",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3041 \u3010[USACO12JAN]Video Game G\u3011"
    },
    {
        "content": "[[USACO12JAN]\u89c6\u9891\u6e38\u620f\u7684\u8fde\u51fbVideo Game Combos](https://www.luogu.com.cn/problem/P3041)\n\n\n~~\u770b\u522b\u7684\u9898\u89e3\u5199\u7684\u90fd\u4e0d\u5f88\u5b8c\u5584\uff0c\u81ea\u5df1\u4f5c\u6b7b\u53d1\u4e00\u7bc7~~\n\n\u62ff\u5230\u9898\u76ee\uff0c\u4e00\u770b\uff0c\u5b57\u7b26\u4e32\u554a\uff0c\u800c\u4e14\u8fd8\u6709\u540e\u7f00\u7684\u5f71\u54cd\uff0c\u6700\u4f18\u5316\u95ee\u9898\uff0c\u679c\u65ad\u4e00\u4e2a AC \u81ea\u52a8\u673a+ DP \u4e0a\u53bb\n\n\u597d\u5427\uff0c\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u9053 AC+DP \u3002\u95f2\u8bdd\u5c11\u8bf4\uff0c\u76f4\u63a5\u89e3\u91ca\u3002\n\n## AC \u81ea\u52a8\u673a\n[AC Automation\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P3808)\n\n\u8fd9\u9053\u9898\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e9b\u5173\u952e\u7684\u8981\u7d20\n```cpp\nstruct node{\n\tint ch[4],//Trie\u6811\u4e0a\u7684\u5b69\u5b50\u8282\u70b9\n    \tnxt, //\u5931\u8d25\u6307\u9488\n    \tfin, //\u662f\u591a\u5c11\u4e2a\u6a21\u5f0f\u4e32\u7684\u7ed3\u5c3e\n   \tval; //\u6240\u80fd\u7ed9\u6700\u540e\u7684\u5b57\u7b26\u4e32\u5e26\u6765\u7684\u4ef7\u503c\n}tr[N];\n```\n```ch,nxt,fin```\u90fd\u662f AC \u81ea\u52a8\u673a\u6a21\u677f\u91cc\u7684\u4e1c\u897f\uff0c\u90a3\u4e48```val```\u600e\u4e48\u7b97\u5462\uff1f\n\n\u663e\u7136\uff0c\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\u6240\u80fd\u5e26\u6765\u7684\u4ee3\u4ef7\uff0c\u662f\u6709**\u591a\u5c11\u4e2a\u5b57\u7b26\u4e32\u4ee5\u5b83\u7ed3\u5c3e**\u3002  \n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6839\u636e AC \u81ea\u52a8\u673a\u7684\u7279\u6027\uff0cTrie \u6811\u4e0a\u7684\u6839\u5230$\\operatorname{nxt}_u$ \u7684\u8def\u5f84\u6240\u5f62\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u5e94\u8be5\u662f Trie \u6811\u4e0a\u6839\u5230 $u$ \u7684\u8def\u5f84\u6240\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a**\u540e\u7f00**\n\n\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u4e00\u65e6\u52a0\u5165\u4e86\u8282\u70b9$u$\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u4f46\u80fd\u83b7\u5f97```tr[u].fin```\u7684\u4ef7\u503c\uff0c\u8fd8\u80fd\u83b7\u5f97```tr[tr[u].nxt].val```\u7684\u4ef7\u503c\n\n\u90a3\u4e0d\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e DP \u7684\u4e1c\u897f\u561b\n\n\u6240\u4ee5\u5728\u8ba1\u7b97 ```nxt``` \u7684\u65f6\u5019\u6211\u4eec\u4e5f\u53ef\u4ee5\u987a\u5e26\u628a ```val```\u7ed9\u7b97\u51fa\u6765\n\n```cpp\nstruct node{\n\tint ch[4],nxt,fin,val;\n}tr[2009]; int tot=1;\nvoid ins(string s){ //Trie  \n\tint u=1;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(!tr[u].ch[s[i]-'A']) tr[u].ch[s[i]-'A']=++tot;\n\t\tu=tr[u].ch[s[i]-'A'];\n\t}\n\ttr[u].fin++;\n} \nvoid ac(){ //nxt \u548c val \uff08AC Automation\u6b63\u5e38\u64cd\u4f5c\uff09 \n\tfor(int i=0;i<3;i++) tr[0].ch[i]=1;\n\tqueue<int>q; q.push(1); tr[1].nxt=0;\n\twhile(!q.empty()){\n\t\tint u=q.front(); q.pop();\n\t\tfor(int i=0;i<3;i++)\n\t\t\tif(!tr[u].ch[i]) tr[u].ch[i]=tr[tr[u].nxt].ch[i];\n\t\t\telse{\n\t\t\t\tq.push(tr[u].ch[i]); int v=tr[u].nxt;\n\t\t\t\twhile(v&&!tr[v].ch[i]) v=tr[v].nxt;\n\t\t\t\ttr[tr[u].ch[i]].nxt=tr[v].ch[i];\n\t\t\t}\n\t\ttr[u].val=tr[u].fin+tr[tr[u].nxt].val;\n\t}\n}\n```\n\n## DP\n```f[i][u]```\u8868\u793a\u4e3a\u957f\u5ea6\u4e3a$i$\u7684\u5b57\u7b26\u4e32\uff0c\u4e14\u5f53\u524d\u5df2\u8ba1\u7b97\u7684\u8282\u70b9\u662f Trie \u4e0a\u7684\u7f16\u53f7\u4e3a$u$\u7684\u8282\u70b9\u7684\u6700\u5927\u5f97\u5206\n\n\u51b3\u7b56\uff1a$u$\u5230\u5b69\u5b50\u7684\u8fb9\uff0c\u9009 A \u8fd8\u662f B \u8fd8\u662f C\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a```f[i][tr[u].ch[k]]=max(f[i][tr[u].ch[k]],f[i-1][u]+tr[tr[u].ch[k]].val)```\n\n```cpp\n\tmemset(f,0xaf,sizeof(f));\n\tf[0][1]=0;\n\tfor(int i=1;i<=m;i++){ //dp\n\t\tfor(int u=1;u<=tot;u++){\n\t\t\tfor(int k=0;k<3;k++){\n\t\t\t\tf[i][tr[u].ch[k]]=\n\t\t\t\t\tmax(f[i][tr[u].ch[k]], f[i-1][u]+tr[tr[u].ch[k]].val);\n\t\t\t}\n\t\t}\n\t}\n```\n\n\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint ch[4],nxt,fin,val;\n}tr[2009]; int tot=1;\nvoid ins(string s){ //Trie  \n\tint u=1;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(!tr[u].ch[s[i]-'A']) tr[u].ch[s[i]-'A']=++tot;\n\t\tu=tr[u].ch[s[i]-'A'];\n\t}\n\ttr[u].fin++;\n} \nvoid ac(){ //nxt \u548c val \uff08AC Automation\u6b63\u5e38\u64cd\u4f5c\uff09 \n\tfor(int i=0;i<3;i++) tr[0].ch[i]=1;\n\tqueue<int>q; q.push(1); tr[1].nxt=0;\n\twhile(!q.empty()){\n\t\tint u=q.front(); q.pop();\n\t\tfor(int i=0;i<3;i++)\n\t\t\tif(!tr[u].ch[i]) tr[u].ch[i]=tr[tr[u].nxt].ch[i];\n\t\t\telse{\n\t\t\t\tq.push(tr[u].ch[i]); int v=tr[u].nxt;\n\t\t\t\twhile(v&&!tr[v].ch[i]) v=tr[v].nxt;\n\t\t\t\ttr[tr[u].ch[i]].nxt=tr[v].ch[i];\n\t\t\t}\n\t\ttr[u].val=tr[u].fin+tr[tr[u].nxt].val;\n\t}\n}\nint n,m,f[2009][409],ans;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){string s;cin>>s;ins(s);}\n\tac();\n\tmemset(f,0xaf,sizeof(f));\n\tf[0][1]=0;\n\tfor(int i=1;i<=m;i++){ //dp\n\t\tfor(int u=1;u<=tot;u++){\n\t\t\tfor(int k=0;k<3;k++){\n\t\t\t\tf[i][tr[u].ch[k]]=\n\t\t\t\t\tmax(f[i][tr[u].ch[k]], f[i-1][u]+tr[tr[u].ch[k]].val);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int u=1;u<=tot;u++) ans=max(ans,f[m][u]);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n\u4e8e\u662f\u5c31[**AC**](https://www.luogu.com.cn/record/30615418)\u81ea\u52a8\u673a\u4e86",
        "postTime": 1581736505,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3041 \u3010[USACO12JAN]\u89c6\u9891\u6e38\u620f\u7684\u8fde\u51fbVideo Game Combos\u3011"
    },
    {
        "content": "# \u603b\u7ed3\n[P3041 [USACO12JAN]Video Game G](https://www.luogu.com.cn/problem/P3041)\n```cpp\n/*\n\u76f8\u5f53\u4e8e\u662f\u5df2\u77e5\u591a\u4e2a\u6a21\u5f0f\u4e32\u6c42\u4e3b\u4e32\n\u7528AC\u81ea\u52a8\u673a\u9884\u5904\u7406\n\u8bbedp[i][j]\u8868\u793a\u524di\u4e2a\u5b57\u7b26\u4e2d\u9009\u62e9\u4e00\u4e9b \u4f4d\u4e8etrie\u6811\u4e2d\u7b2cj\u53f7\u8282\u70b9\u7684\u6700\u5927\u503c\n\u6bcf\u6b21\u9009\u62e90 1 2(A B C)\u4e09\u4e2a\u65b9\u5411 \u8ba1\u7b97val\u53d6max\n\n\u6ce8:trie\u6811\u7684\u6307\u9488\u7684\u521d\u59cb\u503c\u662f1 \n*/\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=1e9;\nstruct AC{\n\tint ch[26],end,fail;\n}a[305];\nint n,m,point=1,dp[1005][305];//point must be 1\nstring s;\nvoid build_trie(){\n\tint u=1;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(!a[u].ch[s[i]-'A'])a[u].ch[s[i]-'A']=++point;\n\t\tu=a[u].ch[s[i]-'A'];\n\t}\n\ta[u].end++;\n}\nvoid build_ac(){\n\tqueue<int>q;\n\tfor(int i=0;i<=2;i++)\n\t\ta[0].ch[i]=1;\n\tq.push(1);\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=0;i<=2;i++)\n\t\t\tif(!a[u].ch[i])a[u].ch[i]=a[a[u].fail].ch[i];\n\t\t\telse{\n\t\t\t\ta[a[u].ch[i]].fail=a[a[u].fail].ch[i];\n\t\t\t\tq.push(a[u].ch[i]);\n\t\t\t}\n\t}\n}\nint get_val(int v){\n\tint val=0;\n\twhile(v>1)val+=a[v].end,v=a[v].fail;\n\treturn val;\n}\nvoid DP(){\n\tfor(int i=0;i<=m;i++)\n\tfor(int j=0;j<=point;j++)\n\t\tdp[i][j]=-inf;\n\tdp[0][1]=0;\n\tfor(int i=0;i<m;i++)\n\tfor(int j=1;j<=point;j++){\n\t\tif(dp[i][j]==-inf)continue;\n\t\tfor(int k=0;k<=2;k++){\n\t\t\tint val=get_val(a[j].ch[k]);\n\t\t\tdp[i+1][a[j].ch[k]]=max(dp[i+1][a[j].ch[k]],dp[i][j]+val);\n\t\t}\n\t}\n\tint ans=-inf;\n\tfor(int i=1;i<=point;i++)\n\t\tans=max(ans,dp[m][i]);\n\tcout<<ans;\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>s;\n\t\tbuild_trie();\n\t}\n\tbuild_ac();\n\tDP();\n\treturn 0;\n}\n```\n",
        "postTime": 1607762086,
        "uid": 114168,
        "name": "yanchengzhi",
        "ccfLevel": 7,
        "title": "P3041 [USACO12JAN]Video Game G"
    },
    {
        "content": "\u7b2c\u4e00\u9053$AC$\u81ea\u52a8\u673a$+DP.$\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u81ea\u52a8\u673a\u4e0a$DP$\u7684\u5957\u8def\u662f\u8bbe$dp[i][j]$\u8868\u793a\u957f\u5ea6\u4e3a$i$\u5339\u914d\u5230$j$\u8282\u70b9\u7684\u6700\u4f18\u5f97\u5206\u3002\n\n\u90a3\u4e48\uff0c\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u5efa\u597d\u4e86$Trie$\u56fe\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u63d0\u524d\u628a\u8d70\u5230\u8282\u70b9$j$\u7684\u6240\u6709\u8fde\u51fb\u64cd\u4f5c\u5904\u7406\u51fa\u6765\u3002\n\n\u6709\u4e00\u6761\u663e\u7136\u7ed3\u8bba\uff1a\u5982\u679c\u5728$fail$\u6811\u4e0a\u7ecf\u8fc7\u4e86\u8fd9\u4e2a\u4e32\u7ed3\u5c3e\u8282\u70b9\u4e2d\u5b50\u6811\u4e2d\u7684\u4efb\u610f\u4e00\u70b9\uff0c\u5219\u8fd9\u6b21\u5339\u914d\u4e00\u5b9a\u4f1a\u5305\u542b\u8fd9\u4e2a\u4e32\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u5728\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u66f4\u65b0$fail$\u7684\u65f6\u5019\uff0c\u5176\u5206\u503c\u5e94\u8be5\u76f4\u63a5\u628a\u5176$fail$\u7684\u5206\u503c\u52a0\u4e0a\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8fdb\u884c$dp.$\n\n\u9996\u5148\u521d\u59cb\u503c\u90fd\u662f$-inf,$\u4f46\u5bf9\u4e8e\u5339\u914d\u8282\u70b9\u5728\u6839\u7684\u60c5\u51b5\u5e94\u8be5\u662f$0.$\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48$dp[0][*]$\u4e0d\u80fd\u8d4b\u503c\u4e3a$0,$\u662f\u56e0\u4e3a\u6839\u672c\u4e0d\u53ef\u80fd\u5b58\u5728\u8fd9\u79cd\u72b6\u6001\u3002\u5339\u914d\u957f\u5ea6\u4e3a$0$\u4e0d\u53ef\u80fd\u5339\u914d\u5230\u5176\u4ed6\u8282\u70b9\u3002\n\n\u4f46\u521d\u59cb\u65f6\uff0c\u4e0d\u7ba1\u54ea\u4e00\u4e2a\u8282\u70b9\u548c$0$\u5339\u914d\uff0c\u5176\u4e00\u5b9a\u4e0d\u4f1a\u6709\u4efb\u4f55\u5206\u6570\u3002\u6839\u8282\u70b9\u672c\u8eab\u662f\u4e00\u4e2a\u7a7a\u8282\u70b9\u3002\n\n\u89e3\u51b3\u521d\u59cb\u503c\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c$dp.$\n\n\u679a\u4e3e\u957f\u5ea6\uff0c\u679a\u4e3e\u8282\u70b9\uff0c\u518d\u679a\u4e3e\u5b57\u7b26\u3002\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u5e94\u8be5\u53d6\u6240\u6709\u80fd\u5230\u8fbe\u8fd9\u4e2a\u72b6\u6001\u7684$dp$\u503c\u7684$\\max.$\u56e0\u4e3a\u6211**\u53ea\u80fd**\u8f93\u5165$k$\u4e2a\u5b57\u7b26\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u6a21\u677f\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dp[5000][2000];\nconst int MAXN=4000;\nint pos[MAXN],cnt[MAXN];\nint tot,n;\nchar st[MAXN];\nstruct Tree{\n\tint ch[3],fail;\n}T[MAXN];\nvector<int>to[MAXN];\nint num[MAXN];\nint insert(char *str,int len){\n\tint u=0;\n\tfor(int i=0;i<len;++i){\n\t\tint x=str[i]-'A';\n\t\tif(!T[u].ch[x])T[u].ch[x]=++tot;\n\t\tu=T[u].ch[x];\n\t}\n\tnum[u]++;return u;\n}\nvoid bfs(){\n\tqueue<int>q;\n\tfor(int i=0;i<3;++i){\n\t\tif(T[0].ch[i]){\n\t\t\tint v=T[0].ch[i];\n\t\t\tT[v].fail=0;\n\t\t\tq.push(v);\n\t\t} \n\t}\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=0;i<3;++i){\n\t\t\tif(T[u].ch[i]){\n\t\t\t\tint v=T[u].ch[i];\n\t\t\t\tT[v].fail=T[T[u].fail].ch[i];\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t\telse T[u].ch[i]=T[T[u].fail].ch[i];\n\t\t} \n\t\tto[T[u].fail].push_back(u);\n\t\tnum[u]+=num[T[u].fail];\n\t}\n}\nint K;\n\nint main(){\n\tscanf(\"%d%d\",&n,&K);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%s\",st);\n\t\tint L=strlen(st);\n\t\tpos[i]=insert(st,L);\n\t}\n\tbfs();\n\tmemset(dp,128,sizeof(dp));\n\tfor(int i=0;i<=K;++i)dp[i][0]=0;\n\tfor(int i=1;i<=K;++i){\n\t\tfor(int j=0;j<=tot;++j){\n\t\t\tfor(int k=0;k<3;++k){\n\t\t\t\tdp[i][T[j].ch[k]]=max(dp[i][T[j].ch[k]],dp[i-1][j]+num[T[j].ch[k]]); \n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=0;i<=tot;++i)ans=max(ans,dp[K][i]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n} \n```\n",
        "postTime": 1597395196,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3041 \u3010[USACO12JAN]Video Game G\u3011"
    },
    {
        "content": "P3041\u603b\u7ed3\n\n\u3010\u9898\u76ee\u5927\u610f\u3011\n\u7ed9\u51fan\u4e2a\u5b57\u5178\u5355\u8bcd\uff0c\u95ee\u957f\u5ea6\u4e3ak\u7684\u5b57\u7b26\u4e32\u6700\u591a\u542b\u6709\u591a\u5c11\u4e2a\u5b57\u5178\u5355\u8bcd\u3002\n\n\u3010\u89e3\u9898\u601d\u8def\u3011\n\u5efa\u7acb\u4e00\u4e2aAC\u81ea\u52a8\u673a\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u8981\u7edf\u8ba1\u4e00\u4e32fail\u6307\u9488\u8fde\u63a5\u7684\u8282\u70b9\u7684\u6570\u91cf\uff0c\u56e0\u4e3a\u4e00\u4e32\u5b57\u7b26\u4e32\u7684\u5206\u6570\u5fc5\u7136\u5305\u542b\u5176\u524d\u7f00\u7684\u6570\u91cf\u3002\u7136\u540e\u7528DP\u7edf\u8ba1\u7b54\u6848\uff0c\u52a8\u6001\u8f6c\u79fb\u660e\u663e\u662f\u7236\u8282\u70b9\u8f6c\u79fb\u5230\u5b50\u8282\u70b9\uff0c\u589e\u52a0\u7684\u6570\u91cf\u662f\u5f53\u524d\u8282\u70b9\u7edf\u8ba1\u7684\u603b\u6570\u3002\n\n\u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n```\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n\nchar st[1000005],p[1000005];\nstruct TRIE{\n    int son[4];\n    int val;\n}trie[1000005];\nint fail[1000005],f[1005][1005];\nint L;\n\nvoid Fill_in(char *st,int rank)\n{\n    int len=strlen(st),u=0;\n    for (int i=0;i<len;i++)\n    {\n        int v=st[i]-'A';\n        if (!trie[u].son[v])\n            trie[u].son[v]=++L;\n        u=trie[u].son[v];\n    }\n    trie[u].val++;\n}\nvoid Build()\n{\n    queue <int> q;\n    for (int i=0;i<3;i++)\n        if (trie[0].son[i])\n        {\n            q.push(trie[0].son[i]);\n            fail[trie[0].son[i]]=0;\n        }\n    while (!q.empty())\n    {\n        int now=q.front();q.pop();\n        for (int i=0;i<3;i++)\n        {\n            if (trie[now].son[i])\n            {\n                fail[trie[now].son[i]]=trie[fail[now]].son[i];\n                q.push(trie[now].son[i]);\n            }else\n            trie[now].son[i]=trie[fail[now]].son[i];\n    \t\t\n\t\t}\n\t\ttrie[now].val+=trie[fail[now]].val;\n\t}\n}\nint main()\n{\n    int n,k;\n    scanf(\"%d%d\",&n,&k);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",st);\n        Fill_in(st,i);\n    }\n    Build();\n    int ans=0;\n    memset(f,-127,sizeof f);\n    f[0][0]=0;\n    for (int i=1;i<=k;i++)\n    \tfor (int j=0;j<=L;j++)\n    \t\tfor (int s=0;s<3;s++)\n    \t\t{\n    \t\t\tf[i][trie[j].son[s]]=\n\t\t\t\tmax(f[i][trie[j].son[s]],f[i-1][j]+trie[trie[j].son[s]].val);\n\t\t\t}\n\tfor (int i=0;i<=L;i++)\n\t\tans=max(ans,f[k][i]);\n\tprintf(\"%d\\n\",ans);\n    return 0;\n}",
        "postTime": 1521177026,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "P3041 [USACO12JAN]\u89c6\u9891\u6e38\u620f\u7684\u8fde\u51fbVideo Game Combos"
    },
    {
        "content": "\u5efa\u7acbAC\u81ea\u52a8\u673a\u540eDp\u6c34\u8fc7\n\n\u6ce8\u610ftot\u548cchild\u5bf9\u4e8e\u5931\u8d25\u6807\u8bb0\u7684\u5904\u7406\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdlib>\n#include<vector>\n#include<cstdio>\n#include<cmath>\n#include<queue>\nusing namespace std;\ninline const int Get_Int() {\n    int num=0,bj=1;\n    char x=getchar();\n    while(x<'0'||x>'9') {\n        if(x=='-')bj=-1;\n        x=getchar();\n    }\n    while(x>='0'&&x<='9') {\n        num=num*10+x-'0';\n        x=getchar();\n    }\n    return num*bj;\n}\nconst int maxn=30000;\nstruct Tree {\n    int child[26],fail,tot; //fail\u5931\u8d25\u6307\u9488\n    void clear() {\n        memset(child,0,sizeof(child));\n        fail=0;\n        tot=0;\n    }\n};\nint root=1;\nstruct Aho_Corasick_Automaton { //AC\u81ea\u52a8\u673a\n    int cnt;\n    Tree tree[maxn];\n    void init() {\n        cnt=1;\n        memset(tree,0,sizeof(tree));\n    }\n    void insert(string s) {\n        int now=root,len=s.length();\n        for(int i=0; i<len; i++) {\n            int j=s[i]-'A';\n            if(!tree[now].child[j]) {\n                tree[++cnt].clear();\n                tree[now].child[j]=cnt;\n            }\n            now=tree[now].child[j];\n        }\n        tree[now].tot++;\n    }\n    void buildfail() { //Bfs\u6784\u9020Fail\u6307\u9488\n        queue<int>Q;\n        Q.push(root);\n        while(!Q.empty()) {\n            int Now=Q.front();\n            Q.pop();\n            for(int i=0; i<3; i++) {\n                int Next=tree[Now].child[i];\n                if(Next==0) { //\u513f\u5b50\u4e0d\u5b58\u5728\n                    if(tree[tree[Now].fail].child[i])tree[Now].child[i]=tree[tree[Now].fail].child[i];\n                    else tree[Now].child[i]=root;\n                    continue;\n                }\n                Q.push(Next);\n                int fatherfail=tree[Now].fail; //\u7236\u4eb2\u7684\u5931\u8d25\u6307\u9488\n                while(fatherfail&&!tree[fatherfail].child[i])fatherfail=tree[fatherfail].fail; //\u5bfb\u627e\u53ef\u9000\u56de\u70b9\n                if(fatherfail)tree[Next].fail=tree[fatherfail].child[i]; //\u5982\u679c\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u5219\u8bbe\u7f6e\u5931\u8d25\u6307\u9488\n                else tree[Next].fail=root; //\u5426\u5219\u6307\u56deroot\n                tree[Next].tot+=tree[tree[Next].fail].tot;\n            }\n        }\n    }\n};\nAho_Corasick_Automaton ac;\nint n,k,f[1005][3005],ans=-0x7fffffff/2;\nint main() {\n    ios::sync_with_stdio(false);\n    cin>>n>>k;\n    ac.init();\n    for(int i=1; i<=n; i++) {\n        string s;\n        cin>>s;\n        ac.insert(s);\n    }\n    ac.buildfail();\n    for(int i=0; i<=k; i++)\n        for(int j=1; j<=ac.cnt; j++)\n            f[i][j]=-0x7fffffff/2;\n    f[0][1]=0;\n    for(int i=1; i<=k; i++)\n        for(int j=1; j<=ac.cnt; j++)\n            for(int k=0; k<3; k++)\n                f[i][ac.tree[j].child[k]]=max(f[i][ac.tree[j].child[k]],f[i-1][j]+ac.tree[ac.tree[j].child[k]].tot);\n    for(int i=1; i<=ac.cnt; i++)ans=max(ans,f[k][i]);\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1485440420,
        "uid": 31877,
        "name": "BillYang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3041 \u3010[USACO12JAN]\u89c6\u9891\u6e38\u620f\u7684\u8fde\u51fbVideo Game Combos\u3011"
    }
]