[
    {
        "content": "\u6839\u636e\u89d2\u5ea6\u79bb\u6563\u7ebf\u6bb5\u7aef\u70b9\u3002\n\n\u800c\u4e14\u5c04\u7ebf\u5fc5\u5b9a\u7ecf\u8fc7\u67d0\u4e2a\u7ebf\u6bb5\u7aef\u70b9\uff0c\u5426\u5219\u53ef\u4ee5\u79fb\u52a8\uff0c\u4e14\u4e0d\u4f1a\u66f4\u5dee\u3002\n\n\u53d8\u6210\u4e00\u4e9b\u533a\u95f4\uff0c\u9009\u62e9\u4e00\u4e9b\u70b9\uff0c\u4f7f\u5f97\u6d89\u53ca\u7684\u533a\u95f4\u6700\u591a\uff0c\u4e14\u6ca1\u6709\u533a\u95f4\u88ab\u91cd\u590d\u6d89\u53ca\u3002\n\n\u4e5f\u5c31\u662f\u6ca1\u6709\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u533a\u95f4\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u70b9i\u9009\u62e9\u540e\uff0c\u5269\u4e0b\u76841->i\u7684\u9009\u62e9\u4e00\u5b9a\u662f\u4e00\u6bb5\u524d\u7f00\u3002\u800c\u4e14\u662f\u4ecei\u6d89\u53ca\u7684\u533a\u95f4\u7684\u6700\u5de6\u7aef\u70b9left[i]\u7684\u5de6\u8fb9\u5f00\u59cb\u7684\u3002\n\nf[i][j]\u8868\u793a\u524di\u4e2a\u70b9\u9009\u62e9\u4e86j\u4e2a\u6700\u591a\u6d89\u53ca\u7684\u533a\u95f4\u3002\n\nf[i][j]=max(f[i-1][j],f[left[i]-1][j-1]+num[i])\n\n\u7a7a\u95f45\\*10^7\u4e2aint\u662f\u5f00\u4e0d\u4e0b\u7684\u3002\n\n\u6240\u4ee5\u679a\u4e3ej\uff0c\u518d\u679a\u4e3ei\uff0c\u4e4b\u540e\u53ef\u4ee5\u5728\u6570\u7ec4\u4e2d\u5220\u6389\u4e00\u7ef4\u3002\n\n(\u4e00\u5f00\u59cb\u5c11\u6253\u4e86\u4e2a0\uff0c\u7ed3\u679c95)\n\n```cpp\n#include<bits/stdc++.h>\nusing std::sort; \n\nvoid chmax(int &x,int y) { if(x<y)x=y; }\nvoid chmin(int &x,int y) { if(x>y)x=y; }\n#define ll long long\n#define B 800005\n#define N 2000010\nstruct point \n{\n    int x,y;\n    friend ll operator *(const point &x,const point &y)\n    {\n      return (ll)x.x*y.y-(ll)x.y*y.x;\n    }\n}p0[N],*p[N];\nint w[N];//\u79bb\u6563\u540e\u7684\u4f4d\u7f6e \nint t1;\nvoid ins(point *i)\n{\n    scanf(\"%d%d\",&i->x,&i->y);\n    p[++t1]=i; \n}\n\nbool xiao(point *x,point *y)//y\u5728x\u9006\u65f6\u9488\u65cb\u8f6c\u65b9\u5411 \u4e5f\u5c31\u662fx\u53c9\u79efy>0 \n{\n    return (*x)*(*y)>0;\n}\nint top;\nint left[N],num[N],f[N];\n\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n    int k,n,i;scanf(\"%d%d\",&k,&n);\n    for (i=1;i<=n;++i)\n    {\n        ins(p0+i);ins(p0+i+B);\n    }\n    sort(p+1,p+t1+1,xiao);\n    top=1;\n    int j=p[1]-p0;\n    point now=p0[j];\n    w[j]=1;\n    for (int i=2;i<=t1;++i) \n    {\n        int j=p[i]-p0;\n      if (p0[j]*now) {now=p0[j];++top;}\n      w[j]=top;\n    }\n    \n    int x,y;\n    for (i=1;i<=top;++i) left[i]=N;\n    for (i=1;i<=n;++i)\n    {\n      if (w[i]>w[B+i]) {x=w[B+i];y=w[i];}\n      else {x=w[i];y=w[B+i];} \n      chmin(left[y],x);//chmin(left[x..y],x) \u5148\u66f4\u65b0\u6700\u53f3\u7684 \u6700\u540e\u4ece\u53f3\u5f80\u5de6\u66f4\u65b0\u4e00\u904d\n      ++num[x];--num[y+1];//[x,y]+1,\u5dee\u5206 \n    }\n    for (i=1;i<=top;++i) num[i]+=num[i-1];\n    for (i=top-1;i>=1;--i)  chmin(left[i],left[i+1]);\n    \n    while (k--)\n    {\n        for (i=top;i;--i) chmax(f[i],f[left[i]-1]+num[i]);//\u9006\u7740\u6765,\u6b64\u65f6f[left[i]-1]\u8fd8\u662f\u4e0a\u4e00\u6b21\u7684 \n        for (i=1;i<=top;++i) chmax(f[i],f[i-1]);//\u987a\u7740\u6765\uff0c\u8fd9\u6837f[i-1]\u5c31\u662f\u8fd9\u4e00\u6b21\u7684 \n    }\n    printf(\"%d\",f[top]);\n}\n```",
        "postTime": 1488069251,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3562 \u3010[POI2013]LAS-Laser\u3011"
    },
    {
        "content": "#  [LG-P3562 [POI2013] LAS-Laser](https://www.luogu.com.cn/problem/P3562) Solution\n\n[TOC]\n\n## [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u6b64\u8fdb\u5165](http://blog.monkey-hyx.tech?t=LG-P3562-Solution)\n\n\uff08\u5efa\u8bae\u60a8\u4ece\u4e0a\u65b9\u94fe\u63a5\u8fdb\u5165\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u67e5\u770b\u6b64 Blog\uff0c\u5728 Luogu \u4e2d\u56fe\u7247\u4f1a\u88ab\u5899\u6389\uff0c\u90e8\u5206 Markdown \u4e5f\u4f1a\u5931\u6548\uff09\n\n## \u9898\u9762\n\n\u7ed9\u5b9a\u5e73\u9762\u4e0a\u7684 $ n $ \u6761\u7ebf\u6bb5\uff08\u7528\u70b9 $ (x_1, y_1), (x_2, y_2) $ \u8868\u793a\uff09\uff0c\u4f60\u53ef\u4ee5\u4ece\u539f\u70b9\u5f15\u51fa\u6700\u591a $ k $ \u6761\u5c04\u7ebf\uff0c\u4f7f\u5176\u7a7f\u8fc7\u5c3d\u53ef\u80fd\u591a\u7684\u7ebf\u6bb5\uff0c\u4e14\u6bcf\u6761\u7ebf\u6bb5\u6700\u591a\u88ab\u7a7f\u8fc7 $ 1 $ \u6b21\uff0c\u6c42\u6700\u591a\u53ef\u4ee5\u7a7f\u8fc7\u591a\u5c11\u6761\u7ebf\u6bb5\u3002\n\n$ 1 \\le n \\le 5 \\times 10^5, 1 \\le k \\le 100, 1 \\le x_1, y_1, x_2, y_2 \\le 10^5 $\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n> $ n, k $\n>\n> $ x_1, y_1, x_2, y_2 $\n>\n> $ \\cdots $ (n lines in total)\n\n## Solution\n\n\u9996\u5148\u672c\u9898\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u800c\u6613\u89c1\u7684\u8d2a\u5fc3\uff0c\u5373\u6700\u4f18\u7684\u60c5\u51b5\u4e0b\u6bcf\u6761\u5c04\u7ebf\u81f3\u5c11\u7a7f\u8fc7\u4e00\u6761\u7ebf\u6bb5\u7684\u7aef\u70b9\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u5982\u679c\u4e0d\u7a7f\u8fc7\u7aef\u70b9\u90a3\u4e48\u79fb\u52a8\u5230\u7aef\u70b9\u4e00\u5b9a\u662f\u4e0d\u52a3\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u7c7b\u4f3c\u6781\u89d2\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u628a\u6bcf\u4e00\u4e2a\u70b9\u5f53\u6210\u4e00\u4e2a\u5411\u91cf\u7684\u5750\u6807\u8868\u793a\uff0c\u6309\u7167\u89d2\u5ea6\u8fdb\u884c\u6392\u5e8f\u79bb\u6563\u5316\u5e76\u5c1d\u8bd5\u5bfb\u627e\u6027\u8d28\uff1a\n\n\u53ef\u4ee5\u770b\u4e0b\u56fe\uff1a\n\n![Oops! The image is blocked! Please visit my own website to observe the image! \u56fe\u7247\u88ab\u5899\u4e86\uff0c\u8bf7\u901a\u8fc7\u6587\u7ae0\u5934\u7684\u8df3\u8f6c\u94fe\u63a5\u8bbf\u95ee\uff01](http://monkey-hyx.tech/Images/Blog/2022_10_04_1.png)\n\n\u6392\u5e8f\u79bb\u6563\u5316\u540e\uff0c\u6bcf\u4e2a\u70b9\u65c1\u8fb9\u7684\u6570\u5b57\u5373\u4e3a\u5176\u79bb\u6563\u5316\u540e\u7684\u5750\u6807\uff0c\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e00\u6761\u7ebf\u6bb5\u90fd\u53d8\u6210\u4e86\u4e00\u4e2a\u533a\u95f4\uff1a\n\n$ \\left[ 1, 1 \\right], \\left[ 7, 8 \\right], \\left[ 3, 6 \\right], \\left[ 4, 5 \\right], \\left[ 5, 5 \\right], \\left[ 2, 9 \\right] $\u3002\n\n\u540c\u65f6\u6ce8\u610f\uff0c**\u79bb\u6563\u5316\u540e\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u662f\u81f3\u5c11\u4e00\u4e2a\u533a\u95f4\u7684\u7aef\u70b9**\uff01\n\n\u800c\u6211\u4eec\u4ece\u539f\u70b9\u5f15\u51fa\u7684\u6bcf\u4e00\u6761\u5c04\u7ebf\uff0c\u4e5f\u53ef\u4ee5\u62bd\u8c61\u6210\u4e00\u4e2a\u5411\u91cf\u7684\u5750\u6807\uff0c\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u662f\u8fd9\u4e9b\u533a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\n\n\u4e8e\u662f\u6b64\u65f6\u6211\u4eec\u4fbf\u53ef\u4ee5\u53d1\u73b0\u95ee\u9898\u53d8\u6210\u4e86\u5728\u7ed9\u5b9a\u533a\u95f4\u4e2d\u9009\u62e9\u4e00\u4e9b\u70b9\uff0c\u4f7f\u8fd9\u4e9b\u70b9\u6d89\u53ca\u7684\u533a\u95f4\u5c3d\u53ef\u80fd\u591a\uff0c\u4e14\u6bcf\u4e2a\u533a\u95f4\u4e2d\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u70b9\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u5e94\u8be5\u662f\u4e00\u4e2a\u663e\u7136\u7684 DP\uff0c\u6211\u4eec\u8003\u8651\u8bbe $ dp(i, j) $ \u8868\u793a\u5728\u524d $ i $ \u4e2a\u70b9\uff08\u7b49\u540c\u4e8e\u533a\u95f4\u7aef\u70b9\uff09\u4e2d\u9009\u62e9 $ j $ \u4e2a\u70b9\u6700\u591a\u53ef\u4ee5\u6d89\u53ca\u591a\u5c11\u4e2a\u533a\u95f4\u3002\n\n\u8003\u8651\u8f6c\u79fb\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7 $ dp(i - 1, j) $ \u8f6c\u79fb\uff0c\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u8003\u8651\u5982\u679c\u9009\u62e9\u7b2c $ i $ \u4e2a\u70b9\uff0c\u90a3\u4e48\u5e94\u8be5\u4ece\u4ec0\u4e48\u533a\u95f4\u8f6c\u79fb\u800c\u6765\uff1f\n\n\u663e\u7136\u9009\u62e9\u7b2c $ i $ \u4e2a\u70b9\u540e\uff0c\u5176\u6240\u6d89\u53ca\u7684\u6240\u6709\u533a\u95f4\u90fd\u4e0d\u80fd\u6709\u5176\u5b83\u7684\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8bb0\u5f55 $ i $ \u6240\u6d89\u53ca\u7684\u6240\u6709\u7684\u533a\u95f4\u4e2d\u6700\u5de6\u7684\u7aef\u70b9\uff0c\u8bb0\u5176\u4e3a $ lft(i) $\uff0c\u540c\u65f6\u8bb0\u70b9 $ i $ \u6d89\u53ca\u7684\u533a\u95f4\u7684\u6570\u91cf\u4e3a $ cnt(i) $\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u4ece $ dp(lft(i) - 1, j - 1) + cnt(i) $ \u8f6c\u79fb\u800c\u6765\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7684\u65b9\u7a0b\u4fbf\u4e3a $ dp(i, j) = \\max(dp(i - 1, j), dp(lft(i) - 1, j - 1) + cnt(i)) $\u3002\n\n\u901a\u8fc7\u5dee\u5206\u9884\u5904\u7406\u4e00\u4e0b $ lft $ \u548c $ cnt $ \u5373\u53ef\u3002\n\n\u7136\u540e\u6ce8\u610f\u89c2\u5bdf\u5230 $ i $ \u7684\u503c\u57df\u662f $ 5 \\times 10^5 $\uff0c$ j $ \u7684\u503c\u57df\u662f $ 10^2 $\uff0c\u6240\u4ee5\u7a7a\u95f4\u5360\u7528\u4e3a $ \\dfrac{5 \\times 10^5 \\times 10^2 \\times 4}{1024^2} \\gt 128 $\uff0c\u7a7a\u95f4\u4f1a\u70b8\uff0c\u53d1\u73b0 $ j $ \u53ea\u4f1a\u4ece $ j $ \u6216 $ j - 1 $ \u8f6c\u79fb\u800c\u6765\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ee5\u7c7b\u4f3c\u5199\u80cc\u5305\u65f6\u5019\u7684\u601d\u60f3\u628a $ j $ \u7684\u7ef4\u5ea6\u53bb\u6389\uff0c\u5c06\u4e0d\u540c\u7248\u672c\u8003\u8651\u597d\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $ O(n(\\log n + k)) $ \u7684\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u3002\n\nTips\uff1a\u5bf9\u4e8e\u5177\u4f53\u7684\u79bb\u6563\u5316\u5b9e\u73b0\uff0c\u53ef\u4ee5\u901a\u8fc7\u5411\u91cf\u7684\u5916\u79ef\uff0c\u5927\u4e8e\u96f6\u5219\u524d\u8005\u5728\u540e\u8005\u7684\u987a\u65f6\u9488\u65b9\u5411\uff0c\u53cd\u4e4b\u4ea6\u7136\uff0c\u53ef\u4ee5\u8003\u8651\u5199\u4e2a\u7ed3\u6784\u4f53\u91cd\u8f7d\u5c0f\u4e8e\u53f7\u548c\u7b49\u4e8e\u53f7\uff0c\u6216\u8005\u5728 `sort` \u548c `unique` \u548c `lower_bound` \u7684\u65f6\u5019\u5199\u4e2a lambda \u51fd\u6570\u4e5f\u884c\uff0c\u4ea6\u6216\u81ea\u5df1\u7eaf\u624b\u6413\u4e00\u4e2a\u79bb\u6563\u5316\u4e5f\u53ef\u4ee5\u5b9e\u73b0\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n## Code\n\n```cpp\n#define _USE_MATH_DEFINES\n#include <bits/extc++.h>\n\n#define PI M_PI\n#define E M_E\n#define npt nullptr\n#define SON i->to\n#define OPNEW void* operator new(size_t)\n#define ROPNEW(arr) void* Edge::operator new(size_t){static Edge* P = arr; return P++;}\n\n/******************************\nabbr\nsegl => line segment\nlft => left\n******************************/\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nmt19937 rnd(random_device{}());\nint rndd(int l, int r){return rnd() % (r - l + 1) + l;}\nbool rnddd(int x){return rndd(1, 100) <= x;}\n\ntypedef unsigned int uint;\ntypedef unsigned long long unll;\ntypedef long long ll;\ntypedef long double ld;\n\ntemplate<typename T = int>\ninline T read(void);\n\nstruct Point{\n    int x, y;\n    friend ll operator * (const Point &a, const Point &b){\n        return (ll)a.x * b.y - (ll)a.y * b.x;\n    }\n    friend bool operator < (const Point &a, const Point &b){\n        return a * b < 0;\n    }\n    friend bool operator == (const Point &a, const Point &b){\n        return a * b == 0;\n    }\n};\nint K, N;\npair < Point, Point > segl[510000];\npair < int, int > seg[510000];\nvector < Point > arr;\nint cnt[1100000];\nint lft[1100000];\nint dp[1100000];\n\nint main(){\n    K = read(), N = read();\n    for(int i = 1; i <= N; ++i){\n        int x1 = read(), y1 = read(), x2 = read(), y2 = read();\n        segl[i] = {Point{x1, y1}, Point{x2, y2}};\n        arr.push_back(Point{x1, y1}), arr.push_back(Point{x2, y2});\n    }\n    sort(arr.begin(), arr.end(), [](const Point &a, const Point &b)->bool{return a * b < 0;});\n    auto endpos = unique(arr.begin(), arr.end());\n    int siz = distance(arr.begin(), endpos);\n    for(int i = 1; i <= N; ++i){\n        seg[i].first = distance(arr.begin(), lower_bound(arr.begin(), endpos, segl[i].first) + 1);\n        seg[i].second = distance(arr.begin(), lower_bound(arr.begin(), endpos, segl[i].second) + 1);\n        if(seg[i].first > seg[i].second)swap(seg[i].first, seg[i].second);\n    }\n    for(int i = 1; i <= siz; ++i)lft[i] = siz;\n    for(int i = 1; i <= N; ++i){\n        ++cnt[seg[i].first], --cnt[seg[i].second + 1];\n        lft[seg[i].second] = min(lft[seg[i].second], seg[i].first);\n    }\n    for(int i = 1; i <= siz; ++i)cnt[i] += cnt[i - 1];\n    for(int i = siz - 1; i >= 1; --i)lft[i] = min(lft[i], lft[i + 1]);\n    for(int j = 1; j <= K; ++j){\n        for(int i = siz; i >= 1; --i)dp[i] = max(dp[i], dp[lft[i] - 1] + cnt[i]);\n        for(int i = 1; i <= siz; ++i)dp[i] = max(dp[i], dp[i - 1]);\n    }\n    printf(\"%d\\n\", dp[siz]);\n\n    fprintf(stderr, \"Time: %.6lf\\n\", (double)clock() / CLOCKS_PER_SEC);\n    return 0;\n}\n\ntemplate<typename T>\ninline T read(void){\n    T ret(0);\n    short flag(1);\n    char c = getchar();\n    while(c != '-' && !isdigit(c))c = getchar();\n    if(c == '-')flag = -1, c = getchar();\n    while(isdigit(c)){\n        ret *= 10;\n        ret += int(c - '0');\n        c = getchar();\n    }\n    ret *= flag;\n    return ret;\n}\n```\n\n## UPD\n\nupdate-2022_10_04 \u521d\u7a3f",
        "postTime": 1664854633,
        "uid": 362938,
        "name": "Tsawke",
        "ccfLevel": 6,
        "title": "LG-P3562 [POI2013] LAS-Laser \u9898\u89e3"
    }
]