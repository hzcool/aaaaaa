[
    {
        "content": "\u5148\u819c\u62dc\u4e00\u53d1 BF.\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217,\u6bcf\u6b21\u53ef\u4ee5\u5c06\u4e00\u6bb5\u533a\u95f4**\u8d4b\u503c**\u4e3a\u4e00\u6bb5\u516c\u5dee\u4e3a $1$ \u7684\u7b49\u5dee\u6570\u5217,\u6216\u8005\u67e5\u8be2\u8fd9\u4e2a\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570.\n\n# \u5206\u6790\n\n\u8bf7\u5148\u901a\u8fc7 [\u52a8\u6001\u9006\u5e8f\u5bf9](https://www.luogu.com.cn/problem/P3157),\u5e76\u4e14\u98df\u7528 [P4062](https://www.luogu.com.cn/problem/P4062) \u7684[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/Limit/solution-p4062).\n\n\u5982\u679c\u60a8\u5df2\u7ecf\u8ba4\u771f\u505a\u4e86\u4e0a\u9762\u4e24\u4ef6\u4e8b,\u90a3\u4e48\u591a\u5c11\u4f1a\u5bf9\u8fd9\u9898\u6709\u70b9\u601d\u8def\u4e86.\n\n(\u4e0b\u9762\u63d0\u5230\u7684 \u7b49\u5dee\u6570\u5217 \u5982\u679c\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\u5c31\u662f\u6307\u516c\u5dee\u4e3a $1$ \u7684\u7b49\u5dee\u6570\u5217)\n\n\u5148\u8003\u8651\u4e00\u6b21\u8986\u76d6\u4f1a\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570:\n\n\u9996\u5148\u53ef\u4ee5\u77e5\u9053\u5728\u8fd9\u6837\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u5185\u90e8\u662f\u4e0d\u4f1a\u6709\u9006\u5e8f\u5bf9\u7684.\n\n\u90a3\u4e48\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u5c31\u7b49\u4e8e\u5728\u7b49\u5dee\u6570\u5217\u524d\u9762\u7684\u6240\u6709\u6570\u5927\u4e8e\u7b49\u5dee\u6570\u5217\u4e2d\u7684\u6570\u7684\u4e2a\u6570\u7684\u603b\u548c.\u540e\u9762\u540c\u7406.\n\n\u52a8\u6001\u8ba1\u7b97\u8fd9\u4e2a\u4e1c\u897f\u81ea\u7136\u5c31\u4f1a\u60f3\u5230\u7528\u6811\u5957\u6811\u53bb\u7ef4\u62a4.\n\n\u4e0d\u8fc7\u8fd9\u91cc\u4e0d\u662f\u4e00\u4e2a\u6570,\u800c\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217,\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u5230[\u8fd9\u91cc](https://www.luogu.com.cn/blog/Limit/solution-p4062)\u6240\u63d0\u5230\u7684\u505a\u6cd5\u4e86,\u5bf9\u4e8e\u5185\u5c42\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e0a\u4e0d\u53ea\u8981\u7ef4\u62a4\u533a\u95f4\u548c($\\sum\\limits_{i=l}^{r}sum_i$)\u8fd8\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u4e58\u533a\u95f4\u5185\u7684\u6bcf\u4e2a\u6570($\\sum\\limits_{i=l}^{r}[(i-l+1)sum_i]$),\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u7b80\u5355\u7684\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a\u6dfb\u52a0\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u6240\u5f97\u7684\u8d21\u732e\u4e86.\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5220\u6389\u4e00\u6b21\u8986\u76d6.\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u9898\u5176\u5b9e\u53ea\u6709\u533a\u95f4\u8986\u76d6\u8fd9\u4e00\u4e2a\u64cd\u4f5c(\u9006\u5e8f\u5bf9\u4e2a\u6570\u662f\u65f6\u65f6\u8ba1\u7b97\u7684),\u6240\u4ee5 ODT \u5728\u8fd9\u9898\u4e2d\u7684\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684.\u4e00\u6b21\u8986\u76d6\u6700\u591a\u53ea\u4f1a\u589e\u52a0 $3$ \u4e2a\u533a\u95f4,\u603b\u533a\u95f4\u6570\u7684\u4e0a\u754c\u662f $n+3m$ \u663e\u7136\u662f\u53ef\u4ee5\u7684.\u6240\u4ee5\u6bcf\u6b21\u53ea\u9700\u8981\u5728 ODT \u4e0a\u628a\u8986\u76d6\u5230\u7684\u6240\u6709\u533a\u95f4\u7684\u8d21\u732e\u5728\u6811\u5957\u6811\u4e0a\u51cf\u6389,\u518d\u628a\u8fd9\u6b21\u8986\u76d6\u7684\u8d21\u732e\u52a0\u4e0a\u5c31\u53ef\u4ee5\u4e86.\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u4ee5\u53ca\u4e00\u4e2a ODT \u6765\u7ef4\u62a4\u4e86.(\u5176\u5b9e\u548c BF \u7684\u505a\u6cd5\u6ca1\u5565\u533a\u522b)\n\n\u4e0d\u8fc7,\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u89c1\u591a\u4e86\u4e5f\u5c31\u6ca1\u5565\u610f\u601d\u4e86,\u6240\u4ee5\u6765\u5206\u4eab\u4e00\u4e0b\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5.\n\n\u5bf9\u4e8e\u5916\u5c42\u7684\u7ebf\u6bb5\u6811\u4e0a\u662f\u533a\u95f4\u8986\u76d6\u7684\u6807\u8bb0,\u8003\u8651\u6807\u8bb0\u6c38\u4e45\u5316,\u5bf9\u4e8e\u5220\u6389\u7684\u8986\u76d6\u9700\u8981\u5c06\u8fd9\u4e9b\u6807\u8bb0\u4e5f\u5220\u6389,\u90a3\u4e48\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\u7684\u4e0a\u9762\u662f\u6709\u8986\u76d6\u6807\u8bb0\u7684,\u90a3\u4e48\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u7956\u5148\u548c\u5b50\u5b59\u4e2d\u662f\u4e0d\u53ef\u80fd\u6709\u5b58\u5728\u6807\u8bb0\u7684\u8282\u70b9,\u56e0\u4e3a\u6807\u8bb0\u4e0d\u80fd\u4e0b\u4f20\u7684\u539f\u56e0,\u6240\u4ee5\u5982\u679c\u9700\u8981\u67e5\u8be2\u7684\u8282\u70b9\u65f6\u67d0\u4e2a\u88ab\u8986\u76d6\u7684\u8282\u70b9\u7684\u5b50\u5b59,\u90a3\u4e48\u9700\u8981\u76f4\u63a5\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u6807\u8bb0\u4e0a\u67e5\u8be2,\u4e5f\u5c31\u662f\u8ba1\u7b97\u4e24\u4e2a\u7b49\u5dee\u6570\u5217\u76f8\u8fde\u4e4b\u540e\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570,\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u753b\u56fe\u548c\u8ba1\u7b97\u5f97\u51fa,\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\nint Calc(int a,int lena,int b,int lenb)//\u7b2c\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\u4e3a a,\u957f\u5ea6\u4e3a lena,\u7b2c\u4e8c\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\u4e3a b,\u957f\u5ea6\u4e3a lenb\n{\n\tif(a<=b)//\u5982\u679c a \u7684\u9996\u9879\u5c0f\u4e8e b,\u90a3\u4e48\u5c31\u628a a \u4e2d\u6ca1\u6709\u8d21\u732e\u7684\u90e8\u5206\u53bb\u6389,\u662f\u7684\u4fdd\u8bc1 a \u7684\u9996\u9879\u5927\u4e8e b\n\t{\n\t\tlena-=(b-a+1);\n\t\ta=b+1;\n\t}\n\tif(lena<=0)//\u5982\u679c\u51cf\u6389\u4e4b\u540e\u7b2c\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u4e0d\u5b58\u5728\u4e86,\u90a3\u4e48\u5c31\u5220\u6389\n\t{\n\t\treturn 0;\n\t}\n    //\u4e00\u4e0b\u5185\u5bb9\u5efa\u8bae\u81ea\u884c\u753b\u56fe\u7406\u89e3\n\tint f=min(a-b,lenb);\n\tint l=min(a-b+lena-1,lenb);\n\tint len=l-f+1;\n\treturn (f+l)*len/2+(lena-len)*lenb;\n}\n```\n\n\u5199\u51fa\u6765\u5e38\u6570\u53ef\u80fd\u6709\u70b9\u5927,\u9700\u8981\u4e00\u4e9b\u5361\u5e38\u6280\u5de7:\n\n\u5bf9\u4e8e\u5185\u5c42\u7684\u7ebf\u6bb5\u6811\u9700\u8981\u7528\u6807\u8bb0\u6c38\u4e45\u5316,\u4e0d\u7136\u6bcf\u6b21\u4e0b\u4f20\u6807\u8bb0\u7684\u65f6\u5019\u9700\u8981\u91cd\u65b0\u5f00\u8282\u70b9,\u4f1a\u5bfc\u81f4 MLE,\u5bf9\u4e8e\u5916\u5c42\u7684\u7ebf\u6bb5\u6811\u4fee\u6539\u65f6\u5bf9\u4e8e\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u533a\u95f4\u5c31\u4e0d\u9700\u8981\u5728\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u4e86,\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u7684\u8fd9\u4e2a `Calc` \u51fd\u6570.\n\n\u4ee3\u7801\u7ec6\u8282\u633a\u591a\u7684.\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define REP(i,first,last) for(int i=first;i<=last;++i)\n#define DOW(i,first,last) for(int i=first;i>=last;--i)\nnamespace IO\n//\u5feb\u8bfb\u6a21\u677f\nusing namespace IO;\nusing namespace std;\nconst int TOP=3e4+2;\nconst int MAXN=3e4+5;\nint n,m;\nint arr[MAXN];\nlong long answer=0;\nnamespace InSGT//\u5185\u5c42\u7ebf\u6bb5\u6811\u4e0e P4062 \u57fa\u672c\u76f8\u540c\n{\n\tstruct LazyTag\n\t{\n\t\tint add;\n\t\tinline void Clean()\n\t\t{\n\t\t\tadd=0;\n\t\t}\n\t}for_make;\n\tinline LazyTag MakeTag(int add)\n\t{\n\t\tfor_make.add=add;\n\t\treturn for_make;\n\t}\n\tstruct SegmentTree\n\t{\n\t\tint len,lson,rson,sum;\n\t\tlong long sum_;\n\t\tLazyTag tag;\n\t}sgt[MAXN*1000];\n\tint sgt_cnt=0;\n\t#define LSON sgt[now].lson\n\t#define RSON sgt[now].rson\n\t#define MIDDLE ((left+right)>>1)\n\t#define LEFT LSON,left,MIDDLE\n\t#define RIGHT RSON,MIDDLE+1,right\n\t#define NOW now_left,now_right\n\tinline void PushUp(int now)\n\t{\n        //\u56e0\u4e3a\u662f\u6807\u8bb0\u6c38\u4e45\u5316,\u6240\u4ee5\u9700\u8981\u5728 PushUp \u7684\u65f6\u5019\u628a\u5f53\u524d\u8282\u70b9\u7684\u6807\u8bb0\u7684\u8d21\u732e\u4e5f\u52a0\u4e0a\n\t\tsgt[now].sum=sgt[LSON].sum+sgt[RSON].sum+sgt[now].tag.add*sgt[now].len;\n\t\tsgt[now].sum_=sgt[RSON].sum_+1ll*sgt[RSON].sum*(sgt[now].len-sgt[RSON].len)+sgt[LSON].sum_+(sgt[now].len+1)*sgt[now].len/2*sgt[now].tag.add;\n\t}\n\tinline void Down(LazyTag tag,int &now,int left,int right)\n\t{\n\t\tsgt[now].tag.add+=tag.add;\n\t\tsgt[now].sum+=sgt[now].len*tag.add;\n\t\tsgt[now].sum_+=(sgt[now].len+1)*sgt[now].len/2*tag.add;\n\t}\n\tvoid UpdataAdd(int now_left,int now_right,int add,int &now,int left=1,int right=TOP)\n\t{\n\t\tif(now_right<left||right<now_left)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif(!now)\n\t\t{\n\t\t\tsgt[now=++sgt_cnt].len=right-left+1;\n\t\t}\n\t\tif(now_left<=left&&right<=now_right)\n\t\t{\n\t\t\tDown(MakeTag(add),now,left,right);\n\t\t\treturn;\n\t\t}\n\t\tUpdataAdd(NOW,add,LEFT);\n\t\tUpdataAdd(NOW,add,RIGHT);\n\t\tPushUp(now);\n\t}\n\tint QuerySum(int now_left,int now_right,int now,int left=1,int right=TOP,int tag=0)//\u5728\u67e5\u8be2\u7684\u65f6\u5019\u9700\u8981\u8bb0\u5f55\u4ece\u6839\u8282\u70b9\u5230\u5f53\u524d\u8282\u70b9\u4e00\u8def\u4e0a\u7684\u6807\u8bb0\u7684\u548c\n\t{\n\t\tif(now_right<left||right<now_left)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif(now_left<=left&&right<=now_right)\n\t\t{\n\t\t\treturn sgt[now].sum+tag*(right-left+1);\n\t\t}\n\t\treturn QuerySum(NOW,LEFT,tag+sgt[now].tag.add)+QuerySum(NOW,RIGHT,tag+sgt[now].tag.add);\n\t}\n\tint QuerySum_(int now_left,int now_right,int now,int left=1,int right=TOP,int tag=0)\n\t{\n\t\tif(now_right<left||right<now_left)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif(now_left<=left&&right<=now_right)\n\t\t{\n\t\t\tint len=right-left+1;\n\t\t\treturn sgt[now].sum_+(sgt[now].sum+tag*len)*(left-now_left)+(len+1)*len/2*tag;\n\t\t}\n\t\treturn QuerySum_(NOW,LEFT,tag+sgt[now].tag.add)+QuerySum_(NOW,RIGHT,tag+sgt[now].tag.add);\n\t}\n\t#undef LSON\n\t#undef RSON\n\t#undef MIDDLE\n\t#undef LEFT\n\t#undef RIGHT\n\t#undef NOW\n}\nnamespace OutSGT//\u5916\u5c42\u7ebf\u6bb5\u6811\u548c ODT\n{\n\tint Calc(int a,int lena,int b,int lenb)\n\t{\n\t\tif(a<=b)\n\t\t{\n\t\t\tlena-=(b-a+1);\n\t\t\ta=b+1;\n\t\t}\n\t\tif(lena<=0)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tint f=min(a-b,lenb);\n\t\tint l=min(a-b+lena-1,lenb);\n\t\tint len=l-f+1;\n\t\treturn (f+l)*len/2+(lena-len)*lenb;\n\t}\n\tstruct SegmentTree\n\t{\n\t\tint root,tag;\n\t}sgt[MAXN*4];\n\t#define LSON (now<<1)\n\t#define RSON (now<<1|1)\n\t#define MIDDLE ((left+right)>>1)\n\t#define LEFT LSON,left,MIDDLE\n\t#define RIGHT RSON,MIDDLE+1,right\n\t#define NOW now_left,now_right\n\tvoid Build(int now=1,int left=1,int right=n)\n\t{\n\t\tif(left==right)//\u5bf9\u4e8e\u53f6\u8282\u70b9\u76f8\u5f53\u4e8e\u662f\u8986\u76d6,\u6240\u4ee5\u53ea\u9700\u8981\u6253\u4e0a\u6807\u8bb0\n\t\t{\n\t\t\tsgt[now].tag=arr[left];\n\t\t\treturn;\n\t\t}\n\t\tREP(i,left,right)\n\t\t{\n\t\t\tInSGT::UpdataAdd(arr[i],arr[i],1,sgt[now].root);\n\t\t}\n\t\tBuild(LEFT);\n\t\tBuild(RIGHT);\n\t}\n\tvoid Cover(int now_left,int now_right,int val,int add,int now=1,int left=1,int right=n)\n\t{\n\t\tif(now_right<left||right<now_left)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif(now_left<=left&&right<=now_right)//\u5bf9\u4e8e\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u533a\u95f4\u53ea\u9700\u8981\u6253\u4e0a\u6807\u8bb0\n\t\t{\n\t\t\tsgt[now].tag+=add*(val+left-now_left);\n\t\t\treturn;\n\t\t}\n\t\tInSGT::UpdataAdd(val+max(now_left,left)-now_left,val+min(now_right,right)-now_left,add,sgt[now].root);//\u5728\u5185\u5b58\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\n\t\tCover(NOW,val,add,LEFT);\n\t\tCover(NOW,val,add,RIGHT);\n\t}\n\tint QueryL(int now_left,int now_right,int val,int now=1,int left=1,int right=n)//\u67e5\u8be2\u524d\u9762\u5927\u4e8e\u7684\u4e2a\u6570\n\t{\n\t\tif(now_left<=left)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif(sgt[now].tag)\n\t\t{\n\t\t\treturn Calc(sgt[now].tag,min(right,now_left-1)-left+1,val,now_right-now_left+1);\n\t\t}\n\t\tif(right<now_left)\n\t\t{\n\t\t\treturn InSGT::QuerySum_(val+1,val+now_right-now_left,sgt[now].root)+InSGT::QuerySum(val+now_right-now_left+1,TOP,sgt[now].root)*(now_right-now_left+1);\n\t\t}\n\t\treturn QueryL(NOW,val,LEFT)+QueryL(NOW,val,RIGHT);\n\t}\n\tint QueryR(int now_left,int now_right,int val,int now=1,int left=1,int right=n)//\u67e5\u8be2\u540e\u9762\u5c0f\u4e8e\u81ea\u5df1\u7684\u4e2a\u6570\n\t{\n\t\tif(right<=now_right)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tif(sgt[now].tag)\n\t\t{\n\t\t\treturn Calc(val,now_right-now_left+1,sgt[now].tag+max(left,now_right+1)-left,right-max(left,now_right+1)+1);\n\t\t}\n\t\tif(now_right<left)\n\t\t{\n\t\t\treturn InSGT::QuerySum(1,val+now_right-now_left,sgt[now].root)*(now_right-now_left+1)-InSGT::QuerySum_(val,val+now_right-now_left,sgt[now].root);\n\t\t}\n\t\treturn QueryR(NOW,val,LEFT)+QueryR(NOW,val,RIGHT);\n\t}\n\t#undef LSON\n\t#undef RSON\n\t#undef MIDDLE\n\t#undef LEFT\n\t#undef RIGHT\n\t#undef NOW\n\tstruct Node//ODT \u90e8\u5206\n\t{\n\t\tint l,r;\n\t\tmutable int val;\n\t\tNode(int left=0,int right=-1,int v=0)\n\t\t{\n\t\t\tl=left;\n\t\t\tr=right;\n\t\t\tval=v;\n\t\t}\n\t\tbool operator <(const Node &b)const\n\t\t{\n\t\t\treturn l<b.l;\n\t\t}\n\t};\n\tset<Node>s;\n\t#define IT set<Node>::iterator\n\tIT Split(int pos)//\u5206\u88c2\u533a\u95f4,ODT \u57fa\u672c\u64cd\u4f5c\n\t{\n\t\tIT place=s.lower_bound(Node(pos));\n\t\tif(place!=s.end()&&place->l==pos)\n\t\t{\n\t\t\treturn place;\n\t\t}\n\t\t--place;\n\t\tint left=place->l,right=place->r;\n\t\tint val=place->val;\n\t\tCover(left,right,val,-1);\n\t\ts.erase(place);\n\t\tCover(left,pos-1,val,1);\n\t\tCover(pos,right,val+pos-left,1);\n\t\ts.insert(Node(left,pos-1,val));\n\t\treturn s.insert(Node(pos,right,val+pos-left)).first;\n\t}\n\tvoid Assign(int left,int right,int val)//\u533a\u95f4\u8986\u76d6\u90e8\u5206\n\t{\n\t\tIT place_left=Split(left),place_right=Split(right+1);\n\t\twhile(1)\n\t\t{\n\t\t\tIT i=s.lower_bound(Node(left));\n\t\t\tif(i->l==right+1)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tanswer-=QueryL(i->l,i->r,i->val);\n\t\t\tanswer-=QueryR(i->l,i->r,i->val);\n\t\t\tCover(i->l,i->r,i->val,-1);\n\t\t\ts.erase(i);\n\t\t}\n\t\tCover(left,right,val,1);\n\t\tanswer+=QueryL(left,right,val);\n\t\tanswer+=QueryR(left,right,val);\n\t\ts.insert(Node(left,right,val));\n\t}\n\t#undef IT\n}\nnamespace ReversePair//\u6700\u5f00\u59cb\u65f6\u76f4\u63a5\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u9006\u5e8f\u5bf9\n{\n\tint tree[MAXN];\n\tint LowBit(int now)\n\t{\n\t\treturn now&-now;\n\t}\n\tvoid Add(int num)\n\t{\n\t\tfor(int now=num;now<=TOP;now+=LowBit(now))\n\t\t{\n\t\t\ttree[now]++;\n\t\t}\n\t}\n\tint Query(int num)\n\t{\n\t\tint result=0;\n\t\tfor(int now=num;now;now-=LowBit(now))\n\t\t{\n\t\t\tresult+=tree[now];\n\t\t}\n\t\treturn result;\n\t}\n\tvoid Calc()\n\t{\n\t\tREP(i,1,n)\n\t\t{\n\t\t\tAdd(arr[i]);\n\t\t\tanswer+=i-Query(arr[i]);\n\t\t}\n\t}\n}\nint main()\n{\n\tRead(n,m);\n\tREP(i,1,n)\n\t{\n\t\tRead(arr[i]);\n\t\tOutSGT::s.insert(OutSGT::Node(i,i,arr[i]));\n\t}\n\tOutSGT::s.insert(OutSGT::Node(n+1,n+1,0));\n\tOutSGT::Build();\n\tReversePair::Calc();\n\tint opt,l,r,val;\n\tREP(i,1,m)\n\t{\n\t\tRead(opt);\n\t\tif(opt==1)\n\t\t{\n\t\t\tRead(l,r,val);\n\t\t\tOutSGT::Assign(l,r,val);\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tWriteln(answer);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597804207,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6749 \u3010\u300eMdOI R3\u300fYoshino\u3011"
    },
    {
        "content": "\u653e\u4e00\u4e0b\u672c\u9898\u7684\u5b98\u65b9\u9898\u89e3\u5427\u3002\n\n\u5176\u5b9e\u8fd9\u4e2a\u9898\u5199\u6b63\u89e3\u4ee3\u7801\u96be\u5ea6\u76f8\u5f53\u7684\u9ad8\u3002\u4e3a\u4e86\u9632\u6b62\u7a7a\u95f4\u4e0d\u591f\u7528\u7684\u73b0\u8c61\uff0c\u6211\u628a\u672c\u9898\u7a7a\u95f4\u6539\u6210\u4e86 500MB\uff08\u4e0d\u8fc7\u7531\u4e8e\u6211\u4f7f\u7528\u4e86\u4e00\u4e9b\u4f18\u5316\uff0c\u6240\u4ee5\u6211\u7684\u7a7a\u95f4\u5176\u5b9e\u5c0f\u3002\n\n\u5bf9\u4e8e\u6709\u4e00\u4e9b\u66b4\u529b\u80fd\u591f\u8dd1\u8fc7\u672c\u9898\u7684\u60c5\u51b5\uff0c\u5176\u5b9e\u51fa\u9898\u4eba\u6839\u672c\u5c31\u6ca1\u6709\u60f3\u5230\u6709\u8fd9\u6837\u7684\u66b4\u529b\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5728\u8fd9\u91cc\u5411\u5927\u5bb6\u9053\u6b49\u3002\n\n\u4ee5\u4e0b\u662f\u672c\u9898\u7684\u5b98\u65b9\u9898\u89e3\u3002\n## Subtask 1\n\n\u8003\u8651\u66b4\u529b\u4fee\u6539\uff0c\u66b4\u529b\u67e5\u8be2\u9006\u5e8f\u5bf9\uff0c\u590d\u6742\u5ea6 $\\operatorname O(n^3)$\u3002\n\n## Subtask 2\n\n\u5c06\u9006\u5e8f\u5bf9\u6539\u7528\u5f52\u5e76\u6392\u5e8f\u6216\u6743\u503c\u6811\u67e5\u8be2\uff0c\u590d\u6742\u5ea6 $\\operatorname O(n^2\\log n)$\u3002\n\n## Subtask 3\n\n\u7531\u4e8e\u4fee\u6539\u957f\u5ea6\u662f $1$\uff0c\u76f4\u63a5\u8003\u8651\u4f7f\u7528\u6811\u5957\u6811\u7ef4\u62a4\u52a8\u6001\u9006\u5e8f\u5bf9\u3002\u5728\u4fee\u6539\u65f6\u67e5\u8be2 $[1,l-1]$ \u533a\u95f4\u5927\u4e8e\u539f\u6570\u7684\u548c $[r+1,n]$ \u533a\u95f4\u5c0f\u4e8e\u539f\u6570\u7684\u6570\u7684\u4e2a\u6570\u5e76\u51cf\u53bb\uff0c\u7136\u540e\u5bf9\u65b0\u6570\u505a\u7c7b\u4f3c\u7684\u67e5\u8be2\u5e76\u52a0\u4e0a\u3002\u5728\u67e5\u8be2\u9006\u5e8f\u5bf9\u65f6\uff0c\u53ef\u76f4\u63a5\u8f93\u51fa\u3002\u590d\u6742\u5ea6 $\\operatorname O(n\\log^2 n )$\n\n## Subtask 4\n\n\u663e\u800c\u6613\u89c1\uff0c\u5728\u503c\u57df\u7f29\u5c0f\u7684\u540c\u65f6\uff0c\u4fee\u6539\u533a\u95f4\u4e5f\u968f\u4e4b\u7f29\u5c0f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u6bcf\u4e2a\u503c\u5efa\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5982\u679c\u5bf9\u5e94\u4f4d\u7f6e\u6709\u8fd9\u4e2a\u503c\uff0c\u5219\u6811\u72b6\u6570\u7ec4\u8be5\u4f4d\u7f6e\u7684\u503c\u5c31\u662f $1$\uff0c\u5426\u5219\u662f $0$\u3002\n\n\u5728\u4fee\u6539\u65f6\uff0c\u5bf9 $[1,l-1]$ \u533a\u95f4\u7684\u6bcf\u4e2a\u503c\u5206\u522b\u505a\u4e00\u4e2a\u67e5\u8be2\u5e76\u505a\u4e00\u4e2a\u540e\u7f00\u548c\uff0c\u5bf9 $[r+1,n]$ \u533a\u95f4\u7684\u6bcf\u4e2a\u503c\u4e5f\u505a\u4e00\u4e2a\u67e5\u8be2\u5e76\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u503c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 $\\operatorname O(1)$ \u7684\u590d\u6742\u5ea6\u4fee\u6539\u5e76\u7ef4\u62a4\u4e86\u3002\n\n\u6ce8\u610f\u4e0d\u8981\u5fd8\u4e86\u6e05\u695a\u4fee\u6539\u533a\u95f4\u5185\u90e8\u5bf9\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u66b4\u529b\u3002\n\n\u7531\u4e8e\u503c\u57df\u53ef\u4ee5\u8ba4\u4e3a\u662f $\\operatorname O(\\log n)$\uff0c\u6545\u6b64\u5904\u7684\u590d\u6742\u5ea6\u4e3a $\\operatorname O(n\\log^2 n)$\u3002\n\n## Subtask 5\n\n\u7531\u4e8e\u7b2c\u4e24\u6b21\u64cd\u4f5c\u4e00\u5c31\u4f1a\u91cd\u7f6e\u4e00\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u76f4\u63a5\u7528\u6570\u5b66\u65b9\u6cd5\u8ba1\u7b97\u51fa\u4fee\u6539\u7684\u8d21\u732e\u3002\n\n\u5bf9\u4e8e\u5947\u6570\u6b21\u64cd\u4f5c\uff0c\u76f4\u63a5\u91cd\u7f6e\uff0c\u9006\u5e8f\u5bf9\u6e05\u96f6\u3002\n\n\u5bf9\u4e8e\u5076\u6570\u6b21\u64cd\u4f5c\uff0c\u5206\u4e3a $l<x$ \u548c $l>x$ \u4e24\u79cd\u3002\n\n\u5982\u679c $l<x$\uff0c\u5219\u6211\u4eec\u4fee\u6539\u5b8c\u540e\u7684\u8be5\u533a\u95f4\u7684\u503c\u4e3a $[x,x+r-l]$\uff0c\u6613\u77e5 $[l,r]$ \u4e0e $[x,x+r-l]$ \u7684\u4ea4\u96c6\u4e3a $[x,l-1]$\u3002\n\n\u5219\u5bf9\u4e8e\u503c\u5728 $[x,l-1] $ \u533a\u95f4\u7684\u6570\uff0c\u5bf9\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\u663e\u7136\u662f\u4e00\u4e2a\u516c\u5dee\u4e3a $-1$ \u7684\u7b49\u5dee\u6570\u5217\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u6b64\u8fdb\u884c\u6c42\u548c\u3002\n\n\u800c\u5bf9\u4e8e\u503c\u5728 $[l,x-r+l]$ \u533a\u95f4\u7684\u6570\uff0c\u663e\u7136\u5bf9\u9006\u5e8f\u5bf9\u6ca1\u6709\u8d21\u732e\uff0c\u76f4\u63a5\u5ffd\u7565\u3002\n\n\u5982\u679c $l>r$ \u5219\u7c7b\u4f3c\u8ba8\u8bba\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5 $\\operatorname O(1)$ \u5b8c\u6210\u5bf9\u9006\u5e8f\u5bf9\u4e2a\u6570\u7684\u8ba1\u6570\uff08\u6ce8\u610f\u6b64\u65f6\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u76f4\u63a5\u4fee\u6539\u8fd9\u4e2a\u6570\u5217\uff09\uff0c\u590d\u6742\u5ea6 $\\operatorname O(n)$\u3002\n\n## Subtask 6 \n\n\u8003\u8651\u989c\u8272\u6bb5\u5747\u644a\u3002\n\n\u8fd9\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u73c2\u6735\u8389\u6811\u7684 trick\uff08\u4e8b\u5b9e\u4e0a\u8fd9\u5c31\u662f\u73c2\u6735\u8389\u6811\u7684\u63a8\u5e73\u64cd\u4f5c\uff09\uff0c\u590d\u6742\u5ea6\u4e3a\u5747\u644a $\\operatorname O(n\\times k)$\uff0c\u5176\u4e2d $k$ \u4e3a\u5355\u6b21\u4fee\u6539\u7684\u590d\u6742\u5ea6\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u67d3\u8272\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u4e00\u4e2a\u533a\u95f4\u7ef4\u62a4\u4e3a\u4e00\u4e2a\u70b9\uff0c\u5e76\u4e14\u5c06\u4ed6\u88c5\u5165\u5728 $set$ \u6216\u5176\u4ed6\u5bb9\u5668\u4e2d\u3002\n\n\u5728\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u5728 $set $ \u4e2d\u627e\u5230\u6211\u4eec\u9700\u8981\u6e05\u9664\u7684\u6240\u6709\u533a\u95f4\uff08\u5982\u679c\u8fb9\u754c\u88ab\u5305\u542b\u5219\u5c06\u8fb9\u754c\u6240\u5728\u7684\u533a\u95f4\u65ad\u5f00\u53d8\u6210\u4e24\u4e2a\u533a\u95f4\uff09\uff0c\u5e76**\u66b4\u529b**\u5c06\u5b83\u4eec\u9010\u4e2a\u6e05\u9664\uff0c\u518d\u63d2\u5165\u65b0\u7684\u533a\u95f4\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u6765\u8bc1\u660e\u4e00\u4e0b\u3002\n\n\u6700\u521d\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u6570\u5355\u72ec\u6784\u6210\u4e00\u4e2a\u533a\u95f4\uff0c\u6240\u4ee5\u4e00\u5171\u6709 $n$ \u4e2a\u533a\u95f4\u3002\n\n\u800c\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u589e\u52a0\u7684\u533a\u95f4\u5305\u62ec\u65ad\u5f00\u5de6\u53f3\u8fb9\u754c\u533a\u95f4\u65f6\u589e\u52a0\u7684\u4e24\u4e2a\u533a\u95f4\uff0c\u4ee5\u53ca\u63d2\u5165\u7684\u65b0\u533a\u95f4\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6574\u4e2a\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u533a\u95f4\u7684\u603b\u4e2a\u6570\u5c31\u662f $n+3m$ \u4e2a\u3002\n\n\u800c\u663e\u7136\u4e00\u4e2a\u533a\u95f4\u6700\u591a\u88ab\u63d2\u5165\u4e00\u6b21\uff0c\u5220\u9664\u4e00\u6b21\uff0c\u4e14 $nm$ \u540c\u7ea7\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a\u5747\u644a $\\operatorname O(n\\times k)$\u3002 \n\n\u672c\u9898\u4e2d\u7684\u64cd\u4f5c\u4e00\u5e76\u4e0d\u662f\u989c\u8272\u6bb5\u5747\u644a\uff0c\u4f46\u663e\u7136\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u5747\u644a $\\operatorname O(n\\times k) $ \u5b8c\u6210\u4fee\u6539\u3002\n\n\u4f46\u6211\u4eec\u5728\u4fee\u6539\u7684\u540c\u65f6\uff0c\u8fd8\u9700\u8981\u518d\u7ef4\u62a4\u4e00\u4e2a\u52a8\u6001\u9006\u5e8f\u5bf9\uff0c\u4e8e\u662f\u8003\u8651\u4ee4 $k=\\log^2n$\uff0c\u4f7f\u7528\u6811\u5957\u6811\u4fee\u6539\n\n\u8003\u8651\u63d2\u5165\u4e00\u4e2a\u65b0\u6bb5\u5bf9\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\uff08\u5220\u9664\u5c31\u5c06\u8d21\u732e\u51cf\u53bb\uff09\u3002\n\n\u5047\u8bbe\u8fd9\u4e2a\u533a\u95f4\u662f $[l,r]$\uff0c\u8fd9\u4e2a\u533a\u95f4\u7684\u503c\u7684\u8303\u56f4\u662f $[x,y](r-l=y-x)$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5927\u81f4\u53ef\u4ee5\u5176\u4ed6\u7684\u6570\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a\n\n1. \u4f4d\u4e8e $[1,l-1]$ \u533a\u95f4\u4e14\u503c\u5c0f\u4e8e $x$ \u7684\u6570\u3002\u8fd9\u7c7b\u6570\u6ca1\u6709\u8d21\u732e\uff0c\u76f4\u63a5\u65e0\u89c6\u3002\n2. \u4f4d\u4e8e $[r+1,n]$ \u533a\u95f4\u4e14\u503c\u5927\u4e8e $y$ \u7684\u6570\u3002\u8fd9\u7c7b\u6570\u540c\u6837\u6ca1\u6709\u8d21\u732e\uff0c\u76f4\u63a5\u65e0\u89c6\u3002\n3. \u4f4d\u4e8e $[1,l-1]$ \u533a\u95f4\u4e14\u503c\u5927\u4e8e $y$ \u7684\u6570\u3002\u8fd9\u7c7b\u6570\u5bf9\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u90fd\u6709\u8d21\u732e\uff0c\u53ea\u9700\u7edf\u8ba1\u4e2a\u6570\u5e76\u4e58\u4ee5 $r-l+1$\u3002\n4. \u4f4d\u4e8e $[r+1,n]$ \u533a\u95f4\u4e14\u503c\u5c0f\u4e8e $x$ \u7684\u6570\u3002\u8fd9\u7c7b\u6570\u540c\u6837\u5bf9\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\u90fd\u6709\u8d21\u732e\uff0c\u5904\u7406\u65b9\u6cd5\u540c\u4e0a\u3002\n5. \u4f4d\u4e8e $[1,l-1]$ \u533a\u95f4\u4e14\u503c\u4f4d\u4e8e $[x,y]$ \u4e4b\u95f4\u7684\u6570\u3002\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u503c\u4e3a $t(t\\in[x,y])$ \u7684\u6570\uff0c\u5b83\u5bf9\u8fd9\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u4e3a $t-x$\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u533a\u95f4\u5185\u524d $t-x$ \u4e2a\u6570\u7684\u503c\u4f1a\u5c0f\u4e8e $t-x$\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9**\u6743\u503c**\u7ef4\u62a4\u533a\u95f4\u5185\u7684\u4e2a\u6570\u4ee5\u53ca\u533a\u95f4\u548c\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u8303\u56f4\u5185\u503c\u5728\u67d0\u4e2a\u533a\u95f4\u7684\u6570\u6709\u51e0\u4e2a\uff0c\u4ee5\u53ca\u8fd9\u51e0\u4e2a\u6570\u52a0\u8d77\u6765\u662f\u591a\u5c11\u3002\u7136\u540e\u7528\u548c\u51cf\u53bb\u4e2a\u6570\u4e58\u4ee5 $x$ \u5c31\u662f\u6211\u4eec\u6240\u8981\u7684\u7ed3\u679c\u3002\n6. \u4f4d\u4e8e $[r+1,n]$ \u533a\u95f4\u4e14\u503c\u4f4d\u4e8e $[x,y]$ \u4e4b\u95f4\u7684\u6570\u3002\u5904\u7406\u65b9\u5f0f\u7c7b\u4f3c\u4e8e\u7b2c\u4e94\u7c7b\u6570\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u5728\u4fee\u6539\u7684\u540c\u65f6\u5b8c\u6210\u4e86\u5bf9\u9006\u5e8f\u5bf9\u7684\u7ef4\u62a4\uff0c\u800c\u590d\u6742\u5ea6\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002\n\n\u4e8e\u662f\u6700\u7ec8\u7684\u590d\u6742\u5ea6\u5c31\u662f $\\operatorname O(n\\log^2 n)$\u3002\n\n## \u603b\u7ed3\n\n\u672c\u9898\u7684\u96be\u5ea6\u5e76\u4e0d\u9ad8\uff0c\u6ca1\u6709\u6d89\u53ca\u5230\u5f88\u590d\u6742\u7684\u7ef4\u62a4\u65b9\u6cd5\uff0c\u4e5f\u6ca1\u6709\u6d89\u53ca\u5230\u5f88\u9ad8\u7ea7\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u8fd8\u662f\u5bf9\u4e00\u4e9b\u57fa\u672c\u6280\u5de7\u7684\u7075\u6d3b\u5e94\u7528\u3002\u53e6\u5916\uff0c\u6709\u4e00\u4e2a\u989c\u8272\u6bb5\u5747\u644a\u7684\u64cd\u4f5c\u503c\u5f97\u5927\u5bb6\u638c\u63e1\u3002\n\n\u53e6\u5916\uff0c\u672c\u9898\u53ef\u80fd\u51fa\u73b0\u7a7a\u95f4\u4e0d\u591f\u7528\u7684\u60c5\u51b5\u3002\u5728\u672c\u9898\u7684 std \u4ee3\u7801\u4e2d\uff0c\u6811\u5957\u6811\u4e2d\u7684\u5185\u5c42\u7ebf\u6bb5\u6811\u4f7f\u7528\u7684\u662f\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u7ebf\u6bb5\u6811\uff0c\u8fd9\u4e5f\u5927\u5927\u8282\u7701\u4e86\u672c\u9898\u7684\u7a7a\u95f4\u3002\u51fa\u9898\u4eba\u6ca1\u6709\u6d4b\u8bd5\u8fc7\u4e0b\u653e\u7684\u7a7a\u95f4\uff0c\u4f46\u770b\u5230\u90e8\u5206\u5176\u4ed6\u7528\u6237\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u611f\u89c9\u4e0b\u653e\u7684\u786e\u7a7a\u95f4\u5927\u4e86\u597d\u591a\u3002\n\n\u8d34\u4e00\u4efd\u4ee3\u7801\u5427\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read(){\n\tregister int x=0;\n\tregister bool f=0;\n\tregister char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+c-48;\n\t\tc=getchar();\n\t}\n\treturn f?-x:x;\n}\nchar cr[200];int ttt;\ninline void print(register int x,register char k='\\n') {\n    if(!x) putchar('0');\n    while(x) cr[++ttt]=x%10+'0',x/=10;\n    while(ttt) putchar(cr[ttt--]);\n    putchar(k);\n}\ninline void printl(register ll x,register char k='\\n') {\n    if(!x) putchar('0');\n    while(x) cr[++ttt]=x%10+'0',x/=10;\n    while(ttt) putchar(cr[ttt--]);\n    putchar(k);\n}\nconst int maxn=52233;\nconst int len=30000;\nstruct seg{\n\tint v,ls,rs,tag;\n\tll sum;\n}t[maxn*160];\nstruct ask{\n\tint v;\n\tll sum;\n\tfriend ask operator +(ask a,ask b){\n\t\treturn (ask){a.v+b.v,a.sum+b.sum};\n\t}\n\tfriend ask operator -(ask a,ask b){\n\t\treturn (ask){a.v-b.v,a.sum-b.sum};\n\t}\n};\nint rt[maxn],m,n,tot,st[maxn*128],top,tem[maxn][2],cnt[2];\nint nnd(){\n\tif(top) return st[top--];\n\treturn ++tot;\n}\nint del(int o){\n\tif(t[o].tag||t[o].sum||t[o].v||t[o].ls||t[o].rs) return o;\n\tst[++top]=o;\n\treturn 0;\n}\ninline void change(int &o,register int l,register int r,register int ql,register int qr,register int v){\n\tif(!o) o=nnd();\n\tif(ql<=l&&r<=qr){\n\t\tt[o].v+=v*(r-l+1);\n\t\tt[o].sum+=v*(l+r)*(r-l+1)/2;\n\t\tt[o].tag+=v;\n\t\to=del(o);\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(ql<=mid) change(t[o].ls,l,mid,ql,qr,v);\n\tif(qr>mid) change(t[o].rs,mid+1,r,ql,qr,v);\n\tt[o].v=t[t[o].ls].v+t[t[o].rs].v+t[o].tag*(r-l+1);\n\tt[o].sum=t[t[o].ls].sum+t[t[o].rs].sum+(ll)t[o].tag*(l+r)*(r-l+1)/2;\n\to=del(o);\n}\ninline void add(register int x,register int ql,register int qr,register int v){\n\tfor(register int i=x;i<=n;i+=(i&-i)) \n\t\tchange(rt[i],1,len,ql,qr,v);\n}\ninline ask query(register int o,register int l,register int r,register int ql,register int qr,register ll tag){\n\tif(ql<=l&&r<=qr){\n\t\task res=(ask){0,0};\n\t\tres.v=t[o].v+tag*(r-l+1);\n\t\tres.sum=t[o].sum+tag*(r+l)*(r-l+1)/2;\n\t\treturn res;\n\t}\n\tint mid=l+r>>1;ask res=(ask){0,0};\n\tif(ql<=mid) res=res+query(t[o].ls,l,mid,ql,qr,tag+t[o].tag);\n\tif(qr>mid) res=res+query(t[o].rs,mid+1,r,ql,qr,tag+t[o].tag);\n\treturn res;\n}\nask find(register int l,register int r,register int ql,register int qr){\n\tif(ql>qr||l>r) return (ask){0,0};\n\tif(l>r) return (ask){0,0};\n\task res=(ask){0,0};\n\tfor(register int i=r;i;i-=(i&-i)) \n\t\tres=res+query(rt[i],1,len,ql,qr,0);\n\tfor(register int i=l-1;i;i-=(i&-i)) \n\t\tres=res-query(rt[i],1,len,ql,qr,0);\n\treturn res;\n}\nstruct node{\n\tint l,r,v;\n\tfriend bool operator <(node a,node b){\n\t\treturn a.l<b.l;\n\t}\n}tmp1,tmp2,tmp;\nset<node> s;\nset<node>::iterator it,it1,it2;\nll ans;\ninline void split(register int x){\n\tit=s.upper_bound((node){x,0,0});it--;\n\tif(it->l==x) return;\n\ttmp1=(node){it->l,x-1,it->v};\n\ttmp2=(node){x,it->r,it->v+x-it->l};\n\tadd(it->l,it->v+x-it->l,it->v+it->r-it->l,-1);\n\tadd(x,it->v+x-it->l,it->v+it->r-it->l,1);\n\ts.erase(*it);\n\ts.insert(tmp1);s.insert(tmp2);\n}\ninline void update(register int l,register int r,register int x){\n\tif(l!=1) split(l);\n\tif(r!=n) split(r+1);\n\twhile(1){\n\t\ttmp=*s.lower_bound((node){l,0,0});\n\t\tif(tmp.l==r+1) break;\n\t\tint tl=tmp.l,tr=tmp.r,vl=tmp.v,vr=tmp.v+tmp.r-tmp.l;\n\t\tadd(tl,vl,vr,-1);\n\t\tans-=find(1,tl-1,vr+1,len).v*(tr-tl+1)+find(tr+1,n,1,vl-1).v*(tr-tl+1);\n\t\task res=find(1,tl-1,vl,vr);\n\t\tans-=res.sum-res.v*vl;\n\t\tres=find(tr+1,n,vl,vr);\n\t\tans-=res.v*vr-res.sum;\n\t\ts.erase(tmp);\n\t}\n\ts.insert((node){l,r,x});\n\tadd(l,x,x+r-l,1);\n\tregister int vr=r-l+x,vl=x;\n\tans+=find(1,l-1,vr+1,len).v*(r-l+1)+find(r+1,n,1,vl-1).v*(r-l+1);\n\task res=find(1,l-1,vl,vr);\n\tans+=res.sum-res.v*vl;\n\tres=find(r+1,n,vl,vr);\n\tans+=res.v*vr-res.sum;\n}\nsigned main(){\n\tn=read();m=read();\n\tfor(register int i=1;i<=n;i++){\n\t\tint x=read();\n\t\ts.insert((node){i,i,x});\n\t\tadd(i,x,x,1);\n\t\tans+=find(1,i-1,x+1,len).v;\n\t}\n\ts.insert((node){n+1,0,0});\n\tfor(register int i=1;i<=m;i++){\n\t\tint opt=read();\n\t\tif(opt==1){\n\t\t\tint l=read(),r=read(),x=read();\n\t\t\tupdate(l,r,x);\n\t\t}\n\t\tif(opt==2) printl(ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1597162252,
        "uid": 120074,
        "name": "BFqwq",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6749 \u3010\u300eMdOI R3\u300fYoshino\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P6749)\n\n>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c \u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a  \n$1\\ l\\ r\\ x:$ \u533a\u95f4\u8986\u76d6\u4e3a\u4ece $x$ \u5f00\u59cb\u7684\u516c\u5dee\u4e3a $1$ \u7684\u7b49\u5dee\u6570\u5217\u3002  \n$2:$ \u67e5\u8be2\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n## $\\text{Step 1}$\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u88ab\u8986\u76d6\u7684\u533a\u95f4\uff0c\u5176\u5185\u90e8\u70b9\u5bf9\u4e4b\u95f4**\u6ca1\u6709**\u5bf9\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\u3002\n\n\u5e76\u4e14\u80fd\u4e0e\u8fd9\u90e8\u5206\u533a\u95f4\u5dee\u751f\u9006\u5e8f\u5bf9\u7684\u70b9**\u4e0b\u6807\u4e0e\u503c**\u90fd\u5728\u4e00\u4e2a\u53ef\u63a7\u7684\u8303\u56f4\u5185\u3002\n\n\u601d\u8def\u7c7b\u4f3c\u4e8e[\u955c\u4e2d\u7684\u6606\u866b](https://www.luogu.com.cn/problem/P4690)\u3002\n\n\u7528**\u73c2\u6735\u8389\u6811**\u7ef4\u62a4\u539f\u5e8f\u5217\u4e2d\u7684\u88ab\u8986\u76d6\u7684\u6bb5\uff0c\u90a3\u4e00\u6b21\u8986\u76d6\u64cd\u4f5c\u76f4\u63a5\u904d\u5386\u8fd9\u4e9b\u6bb5\u7684\u65f6\u95f4\u5c06\u662f $O(n+m)$\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e9b\u6bb5\uff0c\u53ef\u4ee5\u5148\u53bb\u9664\u5b83\u4e0e $[1,l-1]$ \u4e0e $[r+1,n]$ \u7684\u70b9\u4e4b\u95f4\u7684\u9006\u5e8f\u5bf9\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u6bb5\u4e4b\u95f4\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u4e8b\u5b9e\u4e0a\u8bbe\u5176\u4e2d\u4e00\u4e2a\u6bb5\u4e3a $[sl,sr]$\uff0c\u5219\u53ea\u9700\u5bf9 $[1,sl-1]$ \u4e0e $[r,n]$ \u67e5\u8be2\u5c31\u80fd\u5305\u542b\u5230\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u4e4b\u540e\u8fd8\u8981\u52a0\u4e0a\u65b0\u5f62\u6210\u7684\u6bb5\u4e0e $[1,l-1]$ \u4e0e $[r+1,n]$ \u7684\u9006\u5e8f\u5bf9\u3002\n\n## $\\text{Step 2}$\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5177\u4f53\u5b9e\u73b0\u3002\n\n\u53d1\u73b0\u4e0a\u9762\u8981\u6c42\u7684\u53ea\u662f\u4f4d\u4e8e $>r$ \u6216 $<l$ \u7684\u6bb5\u4e0e\u4e00\u4e2a\u6bb5\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u800c\u65f6\u95f4\u6233\u53c8\u662f\u5929\u7136\u53e6\u4e00\u7ef4\uff0c\u5f62\u6210\u4e86\u4e09\u7ef4\u504f\u5e8f\uff0c\u60f3\u5230 $\\text{cdq}$ \u5206\u6cbb\u3002\n\n$\\text{cdq}$ \u5148\u5e72\u6389\u65f6\u95f4\u4e0a\u7684\u9650\u5236\uff0c\u7136\u540e\u4f4d\u7f6e\u9650\u5236\u6392\u5e8f\u89e3\u51b3\uff0c\u5269\u4e0b\u662f\u503c\u57df\u4e0a\u7684\u504f\u5e8f\u3002\n\n\u6ce8\u610f\u8fd9\u5c42\u504f\u5e8f\u65e0\u8bba\u4fee\u6539\u8fd8\u662f\u67e5\u8be2\u90fd\u662f\u57fa\u4e8e\u4e00\u4e2a**\u8fde\u7eed\u7684\u503c\u57df\u533a\u95f4**\u3002\n\n\u5148\u53ea\u8003\u8651 $>r$ \u7684\u67e5\u8be2\uff0c\u8fd9\u9700\u8981\u5bf9\u503c\u57df\u533a\u95f4\u5185\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u627e\u51fa\u503c\u5c0f\u4e8e\u7684\u5b83\u7684\u4e2a\u6570\u4e4b\u548c\u3002\n\n\u4f46\u53ef\u4ee5\u53cd\u8fc7\u6765\u5bf9\u4fee\u6539\u8003\u8651\u5bf9\u67e5\u8be2\u7684\u8d21\u732e\u3002\n\n\u8bbe\u4e00\u6b21\u4fee\u6539\u4e3a\u533a\u95f4 $[sv,tv]$\uff0c\u90a3\u5c31\u80fd\u5bf9 $i\\in[sv+1,tv+1]$ \u7684\u503c $i$ \u52a0\u4e0a $i-sv$\uff0c\u800c\u5bf9 $i>tv+1$ \u7684\u503c $i$ \u52a0\u4e0a $tv-sv+1$\u3002\n\n\u8fd9\u5c31\u662f\u4e2a**\u4e8c\u7ef4\u524d\u7f00\u548c**\uff0c\u5bf9 $sv+1$ \u5904 $+1$ \u800c\u5bf9 $tv+2$ \u5904 $-1$\u3002\n\n\u8fd9\u6837\u5bf9\u4e00\u4e2a\u503c\u53ea\u9700\u770b\u5176\u88ab\u52a0\u4e86\u51e0\u6b21\uff0c\u5c31\u76f8\u5f53\u4e8e\u771f\u6b63\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\u3002\n\n\u4f46\u5bf9\u4e8e\u4e00\u4e2a\u67e5\u8be2\u7684\u533a\u95f4 $[sv,tv]$ \u8981\u7d2f\u52a0\u8303\u56f4\u5185\u7684\u6bcf\u4e00\u4e2a\u70b9\u88ab\u52a0\u51e0\u6b21\u3002\n\n\u7136\u540e\u53d1\u73b0\u53c8\u591a\u4e86\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u6210\u529f\u6210\u4e3a**\u4e09\u7ef4\u524d\u7f00\u548c**\u3002\n\n\u4e0d\u59a8\u624b\u63a8\u4e00\u4e0b\u5f97\u5230\u5f0f\u5b50\uff1a\n$$\\sum_{i=1}^{l}\\sum_{j=1}^{i}\\sum_{k=1}^{j}t_k=\\dfrac{1}{2}\\left((l+1)(l+2)\\sum\\limits_{i=1}^{l}t_i-(2l+3)\\sum\\limits_{i=1}^{l}it_i+\\sum\\limits_{i=1}^{l}i^2t_i\\right)$$\n\n\u5bf9\u540e\u9762\u7684\u4e09\u4e2a\u6c42\u548c\uff0c\u6811\u72b6\u6570\u7ec4\u80fd\u5341\u5206\u65b9\u4fbf\u7ef4\u62a4\u3002\n\n\u800c\u5bf9\u4e8e $<l$ \u7684\u67e5\u8be2\uff0c\u9700\u8981\u5bf9\u503c\u57df\u533a\u95f4\u6bcf\u4e2a\u70b9\uff0c\u627e\u51fa\u6bd4\u5b83\u5927\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u53ef\u901a\u8fc7\u53cd\u8f6c\u503c\u57df\u4ee5\u540c\u6837\u7684\u65b9\u6cd5\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u9ed8\u8ba4 $n,m,V$ \u540c\u9636\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=1e6+10;\nint n,nn,m,x,y,opt,l,r,v,tt,totq,totp;\nint a[N];int tmp,res,ans[N];\nchar ch;int at[N],_a;\ninline void read(int &x){\n\tx=0;ch=getchar();while(ch<48)ch=getchar();\n\twhile(ch>47)x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n}\ninline void write(ll x){if(x>9)write(x/10);putchar(48|x%10);}\ninline int max(int a,int b){return a<b?b:a;}\ninline int min(int a,int b){return b<a?b:a;}\n#define lowbit(i) i&(-i)\nstruct bit{\n\tint t[N],res;\n\tvoid clear(){for(int i=1;i<=nn;++i)t[i]=0;}\n\tinline void clear(int i){for(;i<=nn;i+=lowbit(i))t[i]=0;}\n\tinline void inquiry(int i){res=0;for(;i;i-=lowbit(i))res+=t[i];}\n\tinline void update(int i,int v){for(;i<=nn;i+=lowbit(i))t[i]+=v;}\n}T,T_,T__;\nstruct cdq{\n\tint i,pos,l,r,v;char opt;cdq()=default;\n\tcdq(int _i,int _pos,int _l,int _r,int _v,char _opt):\n\t\ti(_i),pos(_pos),l(_l),r(_r),v(_v),opt(_opt){}\n\t//opt=1/-1:inq || opt=0:mdf\n}q[N],q0[N],p[N],p0[N];// q for < || p for >\ninline void clear(int pos){T.clear(pos);T_.clear(pos);T__.clear(pos);}\ninline void update(int pos,int v){\n\tT.update(pos,v);T_.update(pos,v*pos);T__.update(pos,v*pos*pos);\n}\ninline void inquiry(int pos){\n\tT.inquiry(pos);T_.inquiry(pos);T__.inquiry(pos);\n\tres=(T.res*(pos+1)*(pos+2)-T_.res*(2*pos+3)+T__.res)>>1;\n}\ninline bool cmpq(const cdq a,const cdq b){return a.pos^b.pos?a.pos<b.pos:b.opt;}\ninline bool cmpp(const cdq a,const cdq b){return a.pos^b.pos?a.pos>b.pos:b.opt;}\nvoid solveq(int l,int r){if(l^r){\n\tint mid=(l+r)>>1;register int i;\n\tsolveq(l,mid);solveq(mid+1,r);\n\tmerge(q+l,q+mid+1,q+mid+1,q+r+1,q0+l,cmpq);\n\tfor(i=l;i<=r;++i)q[i]=q0[i];\n\tfor(i=l;i<=r;++i){\n\t\tif(q[i].i<=mid&&!q[i].opt){\n\t\t\tupdate(nn-q[i].r+2,q[i].v);\n\t\t\tupdate(nn-q[i].l+3,-q[i].v);\n\t\t}\n\t\telse if(q[i].i>mid&&q[i].opt){\n\t\t\tinquiry(nn-q[i].l+1);ans[q[i].v]+=q[i].opt*res;\n\t\t\tinquiry(nn-q[i].r);ans[q[i].v]-=q[i].opt*res;\n\t\t}\n\t}\n\tfor(i=l;i<=r;++i)if(q[i].i<=mid&&!q[i].opt)\n\t\tclear(nn-q[i].r+2),clear(nn-q[i].l+3);\n}}\nvoid solvep(int l,int r){if(l^r){\n\tint mid=(l+r)>>1;register int i;\n\tsolvep(l,mid);solvep(mid+1,r);\n\tmerge(p+l,p+mid+1,p+mid+1,p+r+1,p0+l,cmpp);\n\tfor(i=l;i<=r;++i)p[i]=p0[i];\n\tfor(i=l;i<=r;++i){\n\t\tif(p[i].i<=mid&&!p[i].opt){\n\t\t\tupdate(p[i].l+1,p[i].v);\n\t\t\tupdate(p[i].r+2,-p[i].v);\n\t\t}\n\t\telse if(p[i].i>mid&&p[i].opt){\n\t\t\tinquiry(p[i].r);ans[p[i].v]+=p[i].opt*res;\n\t\t\tinquiry(p[i].l-1);ans[p[i].v]-=p[i].opt*res;\n\t\t}\n\t}\n\tfor(i=l;i<=r;++i)if(p[i].i<=mid&&!p[i].opt)\n\t\tclear(p[i].l+1),clear(p[i].r+2);\n}}\nstruct node{\n\tint l,v;mutable int r;node(int _l):l(_l){}\n\tnode(int _l,int _r,int _v):l(_l),r(_r),v(_v){}\n\tinline bool operator <(const node a)const{return l<a.l;}\n};\nset<node> s;\n#define sit set<node>::iterator\nsit itl,itr,its,it;int sl,sr,sv,tv;\ninline void split(int pos){\n\tits=s.lower_bound(node(pos));\n\tif(its==s.end()||its->l^pos){\n\t\t--its;\n\t\tsl=its->l,sr=its->r,sv=its->v;\n\t\t++totq,q[totq]=cdq(totq,sl,sv,sv+sr-sl,-1,0);\n\t\t++totp,p[totp]=cdq(totp,sr,sv,sv+sr-sl,-1,0);\n\t\tits->r=pos-1;\n\t\t++totq,q[totq]=cdq(totq,sl,sv,sv+pos-1-sl,1,0);\n\t\t++totp,p[totp]=cdq(totp,pos-1,sv,sv+pos-1-sl,1,0);\n\t\tits=s.insert(node(pos,sr,sv+pos-sl)).first;\n\t\t++totq,q[totq]=cdq(totq,pos,sv+pos-sl,sv+sr-sl,1,0);\n\t\t++totp,p[totp]=cdq(totp,sr,sv+pos-sl,sv+sr-sl,1,0);\n\t}\n}\nmain(){\n\tnn=3e4;register int i;\n\tread(n);read(m);\n\tfor(i=1;i<=n;++i){\n\t\tread(x);T.update(x,1);\n\t\ts.insert(node(i,i,x));\n\t\tT.inquiry(x),ans[0]+=i-T.res;\n\t\t++totq,q[totq]=cdq(totq,i,x,x,1,0);\n\t\t++totp,p[totp]=cdq(totp,i,x,x,1,0);\n\t}\n\tT.clear();\n\tfor(i=1;i<=m;++i){\n\t\tread(opt);\n\t\tif(opt==1){\n\t\t\tread(l),read(r),read(v);++tt;\n\t\t\titl=l^1?(split(l),its):s.begin();\n\t\t\titr=r^n?(split(r+1),its):s.end();\n\t\t\tfor(it=itl;it!=itr;++it){\n\t\t\t\tsl=it->l,sr=it->r;\n\t\t\t\tsv=it->v;tv=sv+sr-sl;\n\t\t\t\tif(sl^1)++totq,q[totq]=cdq(totq,sl-1,sv,tv,tt,-1);\n\t\t\t\tif(r^n)++totp,p[totp]=cdq(totp,r+1,sv,tv,tt,-1);\n\t\t\t}\n\t\t\tfor(it=itl;it!=itr;++it){\n\t\t\t\tsl=it->l,sr=it->r;\n\t\t\t\tsv=it->v;tv=sv+sr-sl;\n\t\t\t\t++totq,q[totq]=cdq(totq,sl,sv,tv,-1,0);\n\t\t\t\t++totp,p[totp]=cdq(totp,sr,sv,tv,-1,0);\n\t\t\t}\n\t\t\ts.erase(itl,itr);s.insert(node(l,r,v));tv=v+r-l;\n\t\t\tif(l^1)++totq,q[totq]=cdq(totq,l-1,v,tv,tt,1);\n\t\t\tif(r^n)++totp,p[totp]=cdq(totp,r+1,v,tv,tt,1);\n\t\t\t++totq,q[totq]=cdq(totq,l,v,tv,1,0);\n\t\t\t++totp,p[totp]=cdq(totp,r,v,tv,1,0);\n\t\t}\n\t\telse at[++_a]=tt;\n\t}\n\tsolveq(1,totq);solvep(1,totp);\n\tfor(i=1;i<=tt;++i)ans[i]+=ans[i-1];\n\tfor(i=1;i<=_a;++i)write(ans[at[i]]),putchar('\\n');\n}\n```",
        "postTime": 1637504235,
        "uid": 334380,
        "name": "Y_B_X",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[P6749 Yoshino]"
    }
]