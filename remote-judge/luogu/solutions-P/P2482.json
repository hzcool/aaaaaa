[
    {
        "content": "\u7531\u4e8e\u6700\u8fd1\u6bd4\u8f83\u9893\uff0c\u903c\u81ea\u5df1\u5237\u4e00\u9053\u5927\u6a21\u62df\u3002\uff08\u5176\u5b9e\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u6d77\u4e0a\u633a\u6709\u7528\u7684\uff09\n\n\n\u770b\u4e86\u8fd9\u9053\u5927\u6a21\u62df\u540e\uff0c\u8111\u5b50\u6bd4\u8f83\u6df7\u4e71\u3002\n\n\n\u5148\u5217\u4e86\u4e00\u4e0b\u6709\u7528\u4fe1\u606f\uff08\u5efa\u8bae\u8ba4\u771f\u8bfb\uff0c\u81f3\u5c11\u8bfb\u4e2a5\u904d\uff09\uff1a\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\nsection 1:\n\n\u4e3b\u732a\uff08MP\uff09\uff1a\u81ea\u5df1\u5b58\u6d3b\u7684\u60c5\u51b5\u4e0b\u6d88\u706d\u6240\u6709\u7684\u53cd\u732a\u3002\n\n\u5fe0\u732a\uff08ZP\uff09\uff1a\u4e0d\u60dc\u4e00\u5207\u4fdd\u62a4\u4e3b\u732a\uff0c\u80dc\u5229\u6761\u4ef6\u4e0e\u4e3b\u732a\u76f8\u540c\u3002\n\n\u53cd\u732a\uff08AP\uff09\uff1a\u6740\u6b7b\u4e3b\u732a\u3002\n\nsection 2:\n\n\u6e38\u620f\u5f00\u59cb\u65f6\u5019\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u624b\u91cc\u90fd\u4f1a\u67094\u5f20\u724c\uff0c\u4e14\u4f53\u529b\u4e0a\u9650\u548c\u521d\u59cb\u4f53\u529b\u90fd\u662f4\u3002\n\n\u5f00\u59cb\u6e38\u620f\u65f6\uff0c\u4ece\u4e3b\u732a\u5f00\u59cb\uff0c\u6309\u7167\u9006\u65f6\u9488\u65b9\u5411\uff08\u6570\u636e\u4e2d\u5c31\u662f\u6309\u7167\u7f16\u53f7\u4ece1,2,3..n,1..\u7684\u987a\u5e8f\uff09\u4f9d\u6b21\u884c\u52a8\u3002\n\n\u6478\u724c\u9636\u6bb5\uff1a\u4ece\u724c\u5806\u9876\u90e8\u6478\u4e24\u5f20\u724c\uff0c\u4f9d\u6b21\u653e\u5230\u624b\u724c\u7684\u6700\u53f3\u8fb9\uff1b\n\n\u51fa\u724c\u9636\u6bb5\uff1a\u4f60\u53ef\u4ee5\u4f7f\u75280\u5f20\u5230\u4efb\u610f\u5f20\u724c\uff0c\u6bcf\u6b21\u4f7f\u7528\u724c\u7684\u65f6\u5019\u90fd\u4f7f\u7528\u6700\u9760\u5de6\u7684\u80fd\u591f\u4f7f\u7528\u7684\u724c\u3002\n\n\u5f53\u7136\uff0c\u8981\u6ee1\u8db3\u5982\u4e0b\u89c4\u5219\uff1a\n\n1.\u5982\u679c\u6ca1\u6709\u732a\u54e5\u8fde\u5f29\uff0c\u6bcf\u4e2a\u51fa\u724c\u9636\u6bb5\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u201c\u6740\u201d\u6765\u653b\u51fb\uff1b\n\n2.\u4efb\u4f55\u724c\u88ab\u4f7f\u7528\u540e\u88ab\u5f03\u7f6e\uff08\u6b66\u5668\u662f\u88c5\u5907\u4e0a\uff09\uff1b\n\n\u88ab\u5f03\u7f6e\u7684\u724c\u4ee5\u540e\u90fd\u4e0d\u80fd\u518d\u7528\uff0c\u5373\u4e0e\u6e38\u620f\u65e0\u5173\uff1b\n\nsection 3:\n\n\u300e\u6843(P)\u300f\uff1a\u5728\u81ea\u5df1\u7684\u56de\u5408\u5185\uff0c\u5982\u679c\u81ea\u5df1\u7684\u4f53\u529b\u503c\u4e0d\u7b49\u4e8e\u4f53\u529b\u4e0a\u9650\uff0c\u90a3\u4e48\u4f7f\u7528\u4e00\u4e2a\u6843\u53ef\u4ee5\u4e3a\u81ea\u5df1\u8865\u5145\u4e00\u70b9\u4f53\u529b\uff0c\u5426\u5219\u4e0d\u80fd\u4f7f\u7528\u6843\uff1b\u6843\u53ea\u80fd\u5bf9\u81ea\u5df1\u4f7f\u7528\uff1b\u5728\u81ea\u5df1\u7684\u56de\u5408\u5916\uff0c\u5982\u679c\u81ea\u5df1\u7684\u8840\u53d8\u4e3a0\u6216\u8005\u66f4\u4f4e\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff1b\n\n\u300e\u6740(K)\u300f\uff1a\u5728\u81ea\u5df1\u7684\u56de\u5408\u5185\uff0c\u5bf9\u653b\u51fb\u8303\u56f4\u5185\u9664\u81ea\u5df1\u4ee5\u5916\u7684\u4e00\u540d\u89d2\u8272\u4f7f\u7528\u3002\u5982\u679c\u6ca1\u6709\u88ab\u300e\u95ea\u300f\u62b5\u6d88\uff0c\u5219\u9020\u62101\u70b9\u4f24\u5bb3\u3002\u65e0\u8bba\u6709\u65e0\u6b66\u5668\uff0c\u6740\u7684\u653b\u51fb\u8303\u56f4\u90fd\u662f1\uff1b\n\n\u300e\u95ea(D)\u300f\uff1a\u5f53\u4f60\u53d7\u5230\u6740\u7684\u653b\u51fb\u65f6\uff0c\u53ef\u4ee5\u5f03\u7f6e\u4e00\u5f20\u95ea\u6765\u62b5\u6d88\u6740\u7684\u6548\u679c\uff1b\n\n\u300e\u51b3\u6597(F)\u300f\uff1a\u51fa\u724c\u9636\u6bb5\uff0c\u5bf9\u9664\u81ea\u5df1\u4ee5\u5916\u4efb\u610f\u4e00\u540d\u89d2\u8272\u4f7f\u7528\uff0c\u7531\u76ee\u6807\u89d2\u8272\u5148\u5f00\u59cb\uff0c\u81ea\u5df1\u548c\u76ee\u6807\u89d2\u8272\u8f6e\u6d41\u5f03\u7f6e\u4e00\u5f20\u6740\uff0c\u9996\u5148\u6ca1\u6709\u6740\u53ef\u5f03\u7684\u4e00\u65b9\u53d7\u52301\u70b9\u4f24\u5bb3\uff0c\u53e6\u4e00\u65b9\u89c6\u4e3a\u6b64\u4f24\u5bb3\u7684\u6765\u6e90\uff1b\n\n\u300e\u5357\u732a\u5165\u4fb5(N)\u300f\uff1a\u51fa\u724c\u9636\u6bb5\uff0c\u5bf9\u9664\u4f60\u4ee5\u5916\u6240\u6709\u89d2\u8272\u4f7f\u7528\uff0c\u6309\u9006\u65f6\u9488\u987a\u5e8f\u4ece\u4f7f\u7528\u8005\u4e0b\u5bb6\u5f00\u59cb\u4f9d\u6b21\u7ed3\u7b97\uff0c\u9664\u975e\u5f03\u7f6e\u4e00\u5f20\u6740\uff0c\u5426\u5219\u53d7\u52301\u70b9\u4f24\u5bb3\uff1b\n\n\u300e\u4e07\u7bad\u9f50\u53d1(W)\u300f\uff1a\u548c\u5357\u732a\u5165\u4fb5\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8981\u5f03\u7f6e\u7684\u4e0d\u662f\u6740\u800c\u662f\u95ea\uff1b\n\n\u300e\u65e0\u61c8\u53ef\u51fb(J)\u300f\uff1a\u5728\u76ee\u6807\u9526\u56ca\u751f\u6548\u524d\u62b5\u6d88\u5176\u6548\u679c\u3002\u6bcf\u6b21\u6709\u4e00\u5f20\u9526\u56ca\u5373\u5c06\u751f\u6548\u65f6\uff0c\u4ece\u4f7f\u7528\u8fd9\u5f20\u9526\u56ca\u7684\u732a\u5f00\u59cb\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f\uff0c\u4f9d\u6b21\u5f97\u5230\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\u673a\u4f1a\uff1b\n\n\u6548\u679c\uff1a\u7528\u4e8e\u51b3\u6597\u65f6\uff0c\u51b3\u6597\u65e0\u6548\u5e76\u5f03\u7f6e\uff1b\u7528\u4e8e\u5357\u732a\u5165\u4fb5\u6216\u4e07\u7bad\u9f50\u53d1\u65f6\uff0c\u5f53\u7ed3\u7b97\u5230\u67d0\u4e2a\u89d2\u8272\u65f6\u624d\u80fd\u4f7f\u7528\uff0c\u5f53\u524d\u89d2\u8272\u4e0d\u9700\u5f03\u7f6e\u724c\u5e76\u4e14\u4e0d\u4f1a\u53d7\u5230\u4f24\u5bb3\uff08\u4ec5\u5bf9\u4e00\u4e2a\u89d2\u8272\u4ea7\u751f\u6548\u679c\uff09\uff1b\u7528\u4e8e\u65e0\u61c8\u53ef\u51fb\u65f6\uff0c\u6210\u4e3a\u76ee\u6807\u7684\u65e0\u61c8\u53ef\u51fb\u88ab\u65e0\u6548\u3002\n\n\u300e\u732a\u54e5\u8fde\u5f29(Z)\u300f\uff1a\u6b66\u5668\uff0c\u653b\u51fb\u8303\u56f41\uff0c\u51fa\u724c\u9636\u6bb5\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u5f20\u6740\uff1b\n\n\u540c\u4e00\u65f6\u523b\u6700\u591a\u53ea\u80fd\u88c5\u4e00\u4e2a\u6b66\u5668\uff1b\u5982\u679c\u5148\u524d\u5df2\u7ecf\u6709\u4e86\u4e00\u628a\u6b66\u5668\uff0c\u90a3\u4e48\u4e4b\u540e\u518d\u88c5\u6b66\u5668\u7684\u8bdd\uff0c\u4f1a\u5f03\u7f6e\u4ee5\u524d\u7684\u6b66\u5668\u6765\u88c5\u73b0\u5728\u7684\u6b66\u5668\uff1b\n\nsection 4:\n\n\u4f24\u5bb3\u6765\u6e90\uff1a\u6740\u3001\u5357\u732a\u5165\u4fb5\u3001\u4e07\u7bad\u9f50\u53d1\u7684\u4f24\u5bb3\u6765\u6e90\u5747\u662f\u4f7f\u7528\u8be5\u724c\u7684\u732a\uff0c\u51b3\u6597\u7684\u4f24\u5bb3\u6765\u6e90\u5982\u4e0a\uff1b\n\n\u8ddd\u79bb\uff1a\u4e24\u53ea\u732a\u7684\u8ddd\u79bb\u5b9a\u4e49\u4e3a\u6cbf\u7740\u9006\u65f6\u9488\u65b9\u5411\u95f4\u9694\u7684\u732a\u6570\uff0b1\u3002\u5373\u521d\u59cb\u65f61\u548c2\u7684\u8ddd\u79bb\u4e3a1\uff0c\u4f46\u662f2\u548c1\u7684\u8ddd\u79bb\u5c31\u662fn-1\u3002\u6ce8\u610f\u4e00\u4e2a\u89d2\u8272\u7684\u6b7b\u4ea1\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u732a\u8ddd\u79bb\u7684\u6539\u53d8\uff1b\n\n\u73a9\u5bb6\u6b7b\u4ea1\uff1a\u5982\u679c\u8be5\u73a9\u5bb6\u7684\u4f53\u529b\u964d\u52300\u6216\u8005\u66f4\u4f4e\uff0c\u5e76\u4e14\u81ea\u5df1\u624b\u4e2d\u6ca1\u6709\u8db3\u591f\u7684\u6843\u4f7f\u5f97\u81ea\u5df1\u7684\u4f53\u529b\u503c\u56de\u52301\uff0c\u90a3\u4e48\u5c31\u6b7b\u4ea1\u4e86\uff0c\u6b7b\u4ea1\u540e\u6240\u6709\u7684\u724c\uff08\u88c5\u5907\u533a\uff0c\u624b\u724c\u533a\uff09\u88ab\u5f03\u7f6e\uff1b\n\n\u5956\u52b1\u4e0e\u60e9\u7f5a\uff1a\u53cd\u732a\u6b7b\u4ea1\u65f6\uff0c\u6700\u540e\u4e00\u4e2a\u4f24\u5bb3\u6765\u6e90\u5904\uff08\u5373\u4f7f\u662f\u53cd\u732a\uff09\u7acb\u5373\u6478\u4e09\u5f20\u724c\u3002\u5fe0\u732a\u6b7b\u4ea1\u65f6\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u4f24\u5bb3\u6765\u6e90\u662f\u4e3b\u732a\uff0c\u90a3\u4e48\u4e3b\u732a\u6240\u6709\u88c5\u5907\u724c\u3001\u624b\u724c\u88ab\u5f03\u7f6e\uff1b\n\n\u6ce8\u610f\uff0c\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f\u7acb\u523b\u7ed3\u675f\uff0c\u56e0\u6b64\u5373\u4f7f\u4f1a\u64783\u5f20\u724c\u6216\u8005\u8fd8\u6709\u724c\u53ef\u4ee5\u7528\u4e5f\u4e0d\u7528\u6267\u884c\u4e86\u3002\n\nsection 5:\n\n\u5df2\u7ecf\u77e5\u9053\u6bcf\u53ea\u732a\u7684\u89d2\u8272\u3001\u624b\u724c\uff0c\u8fd8\u6709\u724c\u5806\u521d\u59cb\u60c5\u51b5\uff0c\u5e76\u4e14\u5047\u8bbe\u6bcf\u4e2a\u89d2\u8272\u4f1a\u6309\u7167\u5982\u4e0b\u7684\u884c\u4e3a\u51c6\u5219\u8fdb\u884c\u6e38\u620f\u3002\n\nsection 6:\n\n\u732e\u6bb7\u52e4\uff1a\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u6321\u4e0b\u5357\u732a\u5165\u4fb5\u3001\u4e07\u7bad\u9f50\u53d1\u3001\u51b3\u6597\uff1b\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\u8868\u654c\u610f\uff1b\n\n\u8868\u654c\u610f\uff1a\u5bf9\u67d0\u4e2a\u89d2\u8272\u4f7f\u7528\u6740\u3001\u51b3\u6597\uff1b\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\u732e\u6bb7\u52e4\uff1b\n\n\u8df3\u5fe0\uff1a\u5373\u901a\u8fc7\u884c\u52a8\u8868\u793a\u81ea\u5df1\u662f\u5fe0\u732a\u3002\u8df3\u5fe0\u884c\u52a8\u5c31\u662f\u5bf9\u4e3b\u732a\u6216\u5bf9\u67d0\u53ea\u5df2\u7ecf\u8df3\u5fe0\u7684\u732a\u732e\u6bb7\u52e4\uff0c\u6216\u8005\u5bf9\u67d0\u53ea\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u8868\u654c\u610f\uff1b\n\n\u8df3\u53cd\uff1a\u5373\u901a\u8fc7\u884c\u52a8\u8868\u793a\u81ea\u5df1\u662f\u53cd\u732a\u3002\u8df3\u53cd\u884c\u52a8\u5c31\u662f\u5bf9\u4e3b\u732a\u6216\u5bf9\u67d0\u53ea\u5df2\u7ecf\u8df3\u5fe0\u7684\u732a\u8868\u654c\u610f\uff0c\u6216\u8005\u5bf9\u67d0\u53ea\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u732e\u6bb7\u52e4\uff1b\n\n\u5fe0\u732a\u4e0d\u4f1a\u8df3\u53cd\uff0c\u53cd\u732a\u4e5f\u4e0d\u4f1a\u8df3\u5fe0\uff1b\u4e0d\u7ba1\u662f\u5fe0\u732a\u8fd8\u662f\u53cd\u732a\uff0c\u80fd\u591f\u8df3\u5fc5\u7136\u8df3\uff1b\n\nsection 7:\n\n\u884c\u52a8\u51c6\u5219\uff08\u5171\u6027\uff09\uff1a\u6bcf\u4e2a\u89d2\u8272\u5982\u679c\u624b\u91cc\u6709\u6843\u4e14\u751f\u547d\u503c\u672a\u6ee1\uff0c\u90a3\u4e48\u5fc5\u7136\u5403\u6389\uff1b\u6709\u5357\u732a\u5165\u4fb5\u3001\u4e07\u7bad\u9f50\u53d1\u3001\u5fc5\u7136\u4f7f\u7528\uff1b\u6709\u88c5\u5907\u5fc5\u7136\u88c5\u4e0a\uff1b\u53d7\u5230\u6740\u65f6\uff0c\u6709\u95ea\u5fc5\u7136\u5f03\u7f6e\uff1b\u54cd\u5e94\u5357\u732a\u5165\u4fb5\u6216\u8005\u4e07\u7bad\u9f50\u53d1\u65f6\u5019\uff0c\u6709\u6740/\u95ea\u5fc5\u7136\u5f03\u7f6e\uff1b\u4e0d\u4f1a\u5bf9\u672a\u8868\u660e\u8eab\u4efd\u7684\u732a\u732e\u6bb7\u52e4\uff08\u5305\u62ec\u81ea\u5df1\uff09\uff1b\n\nsection 8:\n\n\u4e3b\u732a\uff1a\u4e3b\u732a\u4f1a\u8ba4\u4e3a\uff0c\u6ca1\u6709\u8df3\u8eab\u4efd\u4e14\u7528\u5357\u732a\u5165\u4fb5/\u4e07\u7bad\u9f50\u53d1\u5bf9\u81ea\u5df1\u9020\u6210\u4f24\u5bb3\u7684\u732a\u662f\u201c\u7c7b\u53cd\u732a\u201d\uff08\u6ca1\u4f24\u5bb3\u5230\u4e0d\u7b97\uff0c\u6ce8\u610f\u201c\u7c7b\u53cd\u732a\u201d\u5e76\u6ca1\u6709\u8868\u660e\u8eab\u4efd\uff09\uff0c\u5982\u679c\u4e4b\u540e\u8df3\u4e86\uff0c\u90a3\u4e48\u4e3b\u732a\u4f1a\u91cd\u65b0\u8ba4\u8bc6\u8fd9\u53ea\u732a\uff1b\u5bf9\u4e8e\u6bcf\u79cd\u8868\u654c\u610f\u7684\u65b9\u5f0f\uff0c\u5bf9\u9006\u65f6\u9488\u65b9\u5411\u80fd\u591f\u6267\u884c\u5230\u7684\u7b2c\u4e00\u53ea\u201c\u7c7b\u53cd\u732a\u201d\u6216\u8005\u5df2\u8df3\u53cd\u732a\u8868\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5c31\u4e0d\u8868\u654c\u610f\uff1b\u51b3\u6597\u65f6\u4f1a\u4e0d\u9057\u4f59\u529b\u5f03\u7f6e\u6740\uff1b\u5982\u679c\u80fd\u5bf9\u5df2\u7ecf\u8df3\u5fe0\u7684\u732a\u6216\u81ea\u5df1\u732e\u6bb7\u52e4\uff0c\u90a3\u4e48\u4e00\u5b9a\u732e\uff1b\u5982\u679c\u80fd\u591f\u5bf9\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u8868\u654c\u610f\uff0c\u90a3\u4e48\u4e00\u5b9a\u8868\uff1b\n\n\u5fe0\u732a\uff1a\u5bf9\u4e8e\u6bcf\u79cd\u8868\u654c\u610f\u7684\u65b9\u5f0f\uff0c\u5bf9\u9006\u65f6\u9488\u65b9\u5411\u80fd\u591f\u6267\u884c\u5230\u7684\u7b2c\u4e00\u53ea\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u8868\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5c31\u4e0d\u8868\u654c\u610f\uff1b\u51b3\u6597\u65f6\uff0c\u5982\u679c\u5bf9\u65b9\u662f\u4e3b\u732a\uff0c\u90a3\u4e48\u4e0d\u4f1a\u5f03\u7f6e\u6740\uff0c\u5426\u5219\uff0c\u4f1a\u4e0d\u9057\u4f59\u529b\u5f03\u7f6e\u6740\uff1b\u5982\u679c\u6709\u673a\u4f1a\u5bf9\u4e3b\u732a\u6216\u8005\u5df2\u7ecf\u8df3\u5fe0\u7684\u732a\u732e\u6bb7\u52e4\uff0c\u90a3\u4e48\u4e00\u5b9a\u732e\uff1b\n\n\u53cd\u732a\uff1a\u5bf9\u4e8e\u6bcf\u79cd\u8868\u654c\u610f\u7684\u65b9\u5f0f\uff0c\u5982\u679c\u6709\u673a\u4f1a\u5219\u5bf9\u4e3b\u732a\u8868\uff0c\u5426\u5219\uff0c\u5bf9\u9006\u65f6\u9488\u65b9\u5411\u80fd\u591f\u6267\u884c\u5230\u7684\u7b2c\u4e00\u53ea\u5df2\u7ecf\u8df3\u5fe0\u7684\u732a\u8868\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5c31\u4e0d\u8868\u654c\u610f\uff1b\u51b3\u6597\u65f6\u4f1a\u4e0d\u9057\u4f59\u529b\u5f03\u7f6e\u6740\uff1b\u5982\u679c\u6709\u673a\u4f1a\u5bf9\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u732e\u6bb7\u52e4\uff0c\u90a3\u4e48\u4e00\u5b9a\u732e\uff1b\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n\u597d\u5427\uff0c\u5176\u5b9e\u90fd\u662f\u633a\u6709\u7528\u7684\uff0c\u5373\u4f7f\u5df2\u7ecf\u73a9\u8fc7\uff08\u751a\u81f3\u719f\u77e5\uff09\u4e09\u56fd\u6740\uff0c\u4e5f\u9700\u8981\u975e\u5e38\u4ed4\u7ec6\u7684\u770b\u61c2\uff0c\u770b\u6e05\u9898\u76ee\u3002\n\n\n\u6211\u8fd8\u662f\u4e00\u6b65\u4e00\u6b65\u6765\u8003\u8651\u7684\u3002\n\n\n\u5148\u770b\u6ca1\u6709\u9526\u56ca\u724c\u7684\u60c5\u51b5\u3002\n\n\n\u5728\u81ea\u5df1\u56de\u5408\u5185\uff0c\u6709\u6b66\u5668\u5f53\u7136\u662f\u88c5\u4e0a\u3002\u95ea\u4e00\u5b9a\u662f\u5728\u975e\u81ea\u5df1\u56de\u5408\u51fa\u7684\u3002\u6843\u7684\u8bdd\u8840\u6ca1\u6709\u6ee1\u5c31\u5403\uff0c\u6740\u7684\u8bdd\u80fd\u6740\u5c31\u6740\uff0c\u4f46\u662f\u8981\u627e\u6e05\u76ee\u6807\uff08\u5fc5\u987b\u8ddd\u79bb\u4e3a1\uff09\u3002\n\n\n\u6240\u8c13\u627e\u6e05\u76ee\u6807\uff0c\u5c31\u662f\u2014\u2014\u53cd\u8d3c\u627e\u4e3b\u516c\u6216\u8868\u660e\u8eab\u4efd\u7684\u5fe0\u81e3\uff0c\u5fe0\u81e3\u627e\u5df2\u7ecf\u8868\u660e\u8eab\u4efd\u7684\u53cd\u8d3c\uff0c\u4e3b\u516c\u627e\u5df2\u7ecf\u8868\u660e\u8eab\u4efd\u7684\u53cd\u8d3c\u6216\u7c7b\u53cd\u8d3c\u3002\n\n\n\u8fd9\u5e94\u8be5\u662f\u6700\u7b80\u5355\u7684\u90e8\u5206\u4e86\u3002\u4f46\u662f\u6211WA\u4e86\u4e00\u4e24\u6b21\u624d\u62ff\u523010\u5206\u3002\n\n\n\u9519\u56e0\u6709\uff1a\n\n\n1.\u6ca1\u6709\u5b8c\u5168\u627e\u6e05\u76ee\u6807\uff1b\n\n\n2.\u88c5\u4e0a\u8bf8\u845b\u8fde\u5f29\u540e\uff0c\u6ca1\u6709\u53d1\u73b0\u524d\u9762\u7684\u6740\u4e5f\u80fd\u7528\uff1b\n\n\n\u90a3\u4e48\u7ee7\u7eed\uff0c\u541130\u5206\u53d1\u8d77\u51b2\u51fb\u3002\n\n\n30\u5206\u7684\u8981\u6c42\u662f\u2014\u2014\u6709\u9526\u56ca\u724c\uff0c\u4f46\u662f\u6ca1\u6709\u65e0\u61c8\u53ef\u51fb\u3002\u597d\u5427\uff0c\u6211\u5f97\u627f\u8ba4\uff0c\u6ca1\u6709\u65e0\u61c8\u53ef\u51fb\u4e5f\u8981\u5199\u5f88\u4e45\u3002\n\n\n\u9996\u5148\uff0c\u51b3\u6597\u3002\u8fd8\u662f\u8981\u627e\u6e05\u76ee\u6807\u2014\u2014\u53cd\u8d3c\u51b3\u6597\u76ee\u6807\u4e00\u5b9a\u662f\u4e3b\u516c\uff0c\u5fe0\u81e3\u51b3\u6597\u76ee\u6807\u4e00\u5b9a\u662f\u8868\u660e\u8eab\u4efd\u7684\u53cd\u8d3c\uff0c\u4e3b\u516c\u51b3\u6597\u76ee\u6807\u662f\u8868\u660e\u8eab\u4efd\u7684\u53cd\u8d3c\u6216\u7c7b\u53cd\u8d3c\u3002\n\n\n\u7136\u540e\u662f\u4e07\u7bad\u9f50\u53d1\u548c\u5357\u86ee\u5165\u4fb5\u3002\u8fd9\u662f\u4e2a\u591a\u91cd\u76ee\u6807\u653b\u51fb\uff0c\u6240\u4ee5\u8981\u5bf9\u6bcf\u4e00\u4e2a\u5b58\u6d3b\u7684\u975e\u653b\u51fb\u53d1\u8d77\u8005\u53d1\u8d77\u4e00\u6b21\u5355\u5411\u8fdb\u653b\u3002\n\n\n\u8fd9\u4e2a\u90e8\u5206\u9700\u8981\u6ce8\u610f\u5f88\u591a\uff1a\n\n\n3.\u51b3\u6597\u65f6\uff0c\u8fdb\u653b\u53d1\u8d77\u8005\u53ef\u4ee5\u8981\u4f7f\u7528\u591a\u5f20\u6740\uff0c\u6240\u4ee5\u8981\u5904\u7406\u597d\u51b3\u6597\u540e\uff0c\u624b\u724c\u5269\u4f59\u90e8\u5206\uff1b\n\n\n4.\u51b3\u6597\u65f6\uff0c\u53ef\u80fd\u8fdb\u653b\u53d1\u8d77\u8005\u4f1aGG\uff08\u4e0d\u77e5\u9053\u4ed6\u600e\u4e48\u60f3\u7684\uff0c\u4e0d\u6127\u662fpig\uff09\uff0c\u6b64\u65f6\u8981\u505c\u6b62\u4ed6\u7684\u56de\u5408\uff1b\n\n\n5.\u4e07\u7bad\u9f50\u53d1\uff08\u5357\u86ee\u5165\u4fb5\uff09\u65f6\uff0c\u53ef\u80fd\u4f1a\u6709\u591a\u4ebaGG\uff0c\u53ef\u80fd\u4f1a\u6478\u591a\u6b21\u724c\uff1b\n\n\n6.\u4e07\u7bad\u9f50\u53d1\uff08\u5357\u86ee\u5165\u4fb5\uff09\u65f6\uff0c\u53ef\u80fd\u4f1a\u6709\u591a\u4ebaGG\uff0c\u540c\u65f6\u53d1\u52a8\u8005\u662f\u4e3b\u516c\uff0c\u4e0d\u4ec5\u6740\u6b7b\u4e86\u5fe0\u81e3\uff0c\u4e5f\u6740\u6b7b\u4e86\u53cd\u8d3c\uff0c\u6b64\u65f6\u4e5f\u8981\u8003\u8651\u5f03\u6389\u6240\u6709\u624b\u724c\u548c\u6478\u4e09\u5f20\u724c\u7684\u987a\u5e8f\uff1b\n\n\n7.\u51b3\u6597\u65f6\uff0c\u4e3b\u516c\u8ba4\u4e3a\u5bf9\u9762\u662f\u7c7b\u53cd\u8d3c\uff0c\u5b9e\u9645\u4e0a\u662f\u5fe0\u81e3\uff0c\u5fe0\u81e3\u8981\u727a\u7272\u4e00\u6ef4\u8840\uff1b\n\n\n8.\u5728\u51b3\u6597\u65f6\uff0c\u53d1\u8d77\u8005\u4f1a\u660e\u786e\u8eab\u4efd\uff1b\u5728\u4e07\u7bad\u9f50\u53d1\uff08\u5357\u86ee\u5165\u4fb5\uff09\u65f6\uff0c\u53ef\u80fd\u5e76\u4e0d\u4f1a\uff0c\u4f46\u6709\u53ef\u80fd\u6210\u4e3a\u7c7b\u53cd\u8d3c\uff1b\n\n\n30\u5206\u7684\u6bb5\u4e5fWA\u4e2a\u4e0d\u505c\uff0c\u4f46\u603b\u7b97\u8fd8\u662f\u8fbe\u5230\u4e86\u3002\n\n\n\u5269\u4e0b\u5c31\u662f\u65e0\u61c8\u53ef\u51fb\u4e86\u3002\n\n\n\u8fd9\u662f\u4e00\u4e2a\u96be\u70b9\uff0c\u4f46\u6211\u8ba4\u4e3a\uff0c\u8981\u7a81\u7834\u5b83\uff0c\u9996\u5148\u8981\u641e\u6e05\u65e0\u61c8\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u4e86\u4f5c\u7528\uff0c\u8fd8\u6709\u2014\u2014\u5b83\u4e00\u5b9a\u5728\u9526\u56ca\u724c\u751f\u6548\u4e4b\u524d\u4f7f\u7528\u3002\n\n\n\u9898\u76ee\u4e2d\u5b9a\u4e49\uff0c\u5982\u679c\u67d0\u4eba\u4f7f\u7528\u4e86\u4e00\u5f20\u9526\u56ca\u724c\uff0c\u90a3\u4e48\u4ece\u4ed6\u540e\u9762\u7684\u732a\u5f00\u59cb\uff0c\u4f9d\u6b21\u6709\u51fa\u65e0\u61c8\u7684\u673a\u4f1a\uff08\u5f53\u7136\u5bf9\u4e8e\u4e00\u5f20\u9526\u56ca\u724c\uff0c\u6700\u591a\u53ea\u67091\u5f20\u65e0\u61c8\u9488\u5bf9\u4ed6\u672c\u8eab\uff09\u3002\n\n\n\u90a3\u4e48\uff0c\u5047\u5982A\u5bf9B\u51fa\u4e86\u4e00\u5f20\u9526\u56ca\u724c\uff0c\u9996\u5148\uff0c\u9700\u8981\u4fdd\u8bc1B\u7684\u8eab\u4efd\u5df2\u7ecf\u4eae\u660e\uff08\u5426\u5219\u6ca1\u6709\u4eba\u4f1a\u5e2e\u4ed6\uff0c\u5305\u62ec\u4ed6\u81ea\u5df1\uff09\n\n\n\u7136\u540e\uff0c\u548cB\u4e00\u6d3e\u7684\uff0c\u4e00\u5b9a\u60f3\u65b9\u8bbe\u6cd5\u4f7f\u521d\u59cb\u9526\u56ca\u724c\u65e0\u6548\uff1b\u548cB\u4e0d\u4e00\u6d3e\u7684\uff0c\u4e00\u5b9a\u60f3\u65b9\u8bbe\u6cd5\u4f7f\u521d\u59cb\u9526\u56ca\u724c\u751f\u6548\u3002\n\n\n\u90a3\u4e48\uff0c\u8fd9\u53ef\u4ee5\u5199\u4e2a\u7b80\u6613\u7684dfs\uff08\u987a\u4fbf\u5728\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u80fd\u4e14\u6709\u5fc5\u8981\u51fa\u65e0\u61c8\uff0c\u5c31\u76f4\u63a5\u51fa\u6389\u4e86\uff09\u3002\n\n\n\u7136\u540e\uff0c\u65e0\u61c8\u4e0d\u53ef\u80fd\u5f53\u505a\u7b2c\u4e00\u5f20\u9526\u56ca\u724c\u6253\u51fa\uff08\u76f8\u5f53\u4e8e\u6c38\u8fdc\u662f\u540e\u624b\uff09\u3002\n\n\n\u5bf9\u4e8e\u65e0\u61c8\u800c\u8a00\uff0c\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\n\n\n9.\u65e0\u61c8\u4e0d\u53ef\u80fd\u5148\u624b\u6253\u51fa\uff0c\u5e76\u4e0d\u4ee3\u8868\u5728\u81ea\u5df1\u56de\u5408\u5185\u5c31\u4e0d\u7528\u51fa\u65e0\u61c8\uff1b\n\n\n10.\u65e0\u61c8\u7684\u4f18\u5148\u7ea7\u5f88\u9ad8\uff08\u6bd4\u4e00\u822c\u9526\u56ca\u724c\u90fd\u9ad8\uff09\uff1b\n\n\n11.\u5f53\u4e00\u4e2a\u4eba\u4f7f\u7528\u4e86\u65e0\u61c8\uff0c\u4ed6\u7684\u8eab\u4efd\u5c31\u5b8c\u5168\u8868\u660e\u4e86\uff1b\n\n\n12.\u65e0\u61c8\u770b\u4f3c\u662f\u6700\u590d\u6742\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u76f8\u5f53\u4e8e\u4e00\u4e2a\u8865\u4e01\uff08\u5c3d\u7ba1\u6709\u633a\u591a\u7684\u7ec6\u8282\uff09\uff1b\n\n\n\u4ee5\u4e0a\u662f\u5927\u81f4\u7684\u505a\u6cd5\uff0c\u4ece10pts->30pts->100pts\uff0c\u800c\u5b9e\u9645\u4e0a\uff0c\u6211\u7206\u51fa\u4e86\u5f62\u5f62\u8272\u8272\u7684\u90e8\u5206\u5206\uff08\u7b49\u4e0b\u4f1a\u5c55\u793a\uff09\n\n\n\u4e0b\u9762\u8fd8\u6709\u4e00\u4e9b\u5168\u5c40\u7684\u6ce8\u610f\u70b9\uff1a\n\n\n13.\u4e3b\u516c\u6740\u6b7b\u5fe0\u81e3\uff0c\u4e00\u5b9a\u8981\u628a\u88c5\u5907\u7ed9\u5f03\u4e86\uff1b\n\n\n14.\u5173\u4e8e\u4e00\u8f6e\u80fd\u5426\u51fa\u591a\u6b21\u6740\uff0c\u8981\u6ce8\u610f\u5224\u65ad\uff1b\n\n\n15.\u4e00\u5f20\u724c\uff0c\u4f60\u51fa\u4e86\uff0c\u5c31\u76f8\u5f53\u4e8e\u5f03\u7f6e\u4e86\uff0c\u4e0d\u7ba1\u6700\u540e\u662f\u5426\u751f\u6548\uff1b\n\n\n16.\u6700\u5f62\u8c61\u7684\u65b9\u6cd5\u5b58\u624b\u724c\u663e\u7136\u662f\u94fe\u8868\uff0c\u4f46\u8003\u8651\u5230\u5b9e\u9645\u9700\u8981\uff0c\u4e00\u822c\u76f4\u63a5\u5f00\u6570\u7ec4\uff1b\n\n\n17.\u8981\u5206\u6e05\u5728\u81ea\u5df1\u7684\u56de\u5408\u51fa\u724c\u548c\u5728\u522b\u4eba\u7684\u56de\u5408\u51fa\u724c\uff0c\u6700\u597d\u7528\u4e0d\u540c\u65b9\u6cd5\u5904\u7406\uff0c\u4f46\u5904\u7406\u4e5f\u6709\u5f88\u591a\u7ec6\u8282\uff08\u56e0\u4eba\u800c\u5f02\uff09\uff1b\n\n\n18.\u6ce8\u610f\u4e3b\u516c\u4e5f\u4f1a\u5bf9\u7c7b\u53cd\u8d3c\u8868\u654c\u610f\uff1b\n\n\n19.\u6740\uff0c\u6843\uff0c\u65e0\u61c8\u90fd\u662f\u6709\u53ef\u80fd\u5728\u81ea\u5df1\u56de\u5408\u6253\u51fa\u7684\u201c\u54cd\u5e94\u724c\u201d\uff08\u5c31\u662f\u56de\u51fb\u522b\u4eba\u7684\u724c\uff09\uff0c\u8981\u6ce8\u610f\u5904\u7406\u65b9\u6cd5\uff08\u8981\u770b\u6e05\u662f\u81ea\u5df1\u56de\u5408\u8fd8\u662f\u4ed6\u4eba\u56de\u5408\u51fa\u7684\u724c\uff09\uff1b\n\n\n20.\u4e25\u683c\u610f\u4e49\u4e0a\uff0c\u9664\u4e86\u201c\u6843\u201d\uff0c\u5728\u81ea\u5df1\u56de\u5408\u51fa\u4e86\u6bcf\u4e00\u5f20\u724c\u540e\uff0c\u53ef\u80fd\u4f1a\u6fc0\u6d3b\u8fd9\u5f20\u724c\u524d\u9762\u7684\u724c\uff1b\n\n\n21.\u6ce8\u610f\u8fd9\u91cc\u7684\u8ddd\u79bb\u662f\u5355\u5411\u7684\uff0c\u800c\u4e0d\u662f\u53cc\u5411\u7684\uff0c\u800c\u4e14\u6052\u4e3a1\uff1b\n\n\n22.\u5b58\u5728\u7528\u65e0\u61c8\u65e0\u61c8\u6389\u81ea\u5df1\u7684\u9526\u56ca\u724c\u7684\u60c5\u51b5\uff1b\n\n\n23.\u9635\u4ea1\u7684\u4eba\u5df2\u7ecf\u6ca1\u6709\u4efb\u4f55\u4ef7\u503c\uff0c\u76f4\u63a5\u8df3\u8fc7\u4ed6\uff1b\n\n\n24.\u4e00\u65e6\u51fa\u73b0\u80dc\u5229\u5c40\u9762\uff0c\u5c31\u8981\u505c\u6b62\u4e00\u5207\u64cd\u4f5c\uff0c\u4f46\u662f\u9700\u8981\u628a\u6ca1\u6709\u6574\u7406\u597d\u7684\u624b\u724c\u6574\u7406\u597d\uff1b\n\n\n25.\u5bf9\u4e8e\u4e00\u4e2a\u4eba\uff0c\u8981\u662f\u628a\u624b\u724c\u626b\u4e86\u4e00\u904d\uff0c\u6ca1\u6709\u51fa\u4efb\u4f55\u724c\uff0c\u5c31\u7ed3\u675f\u51fa\u724c\uff1b\n\n\n26.\u4e00\u4e2a\u4eba\u6b7b\u4e86\u540e\uff0c\u5373\u4f7f\u66f4\u65b0\u4e0a\u4e00\u4e2a\u73a9\u5bb6\u7684\u4e0b\u4e00\u4e2a\u73a9\u5bb6nxt\uff08\u4e0d\u5fc5o1\u6c42\uff09\uff1b\n\n\n27.\u6ce8\u610f\u4e00\u4e2a\u4eba\u5904\u4e8e\u6fd2\u6b7b\u72b6\u6001\u7684\u5904\u7406\uff0c\u6ca1\u5f53\u6709\u4e00\u4e2a\u4eba\u6b7b\u4e86\uff0c\u90fd\u8981\u5224\u65ad\u4e00\u4e0b\u6e38\u620f\u662f\u5426\u7ed3\u675f\u4e86\uff1b\n\n\n28.\u9898\u76ee\u6709\u4e00\u4e2a\u5c0fbug\uff0c\u5f53\u724c\u5806\u6ca1\u6709\u724c\u65f6\uff0c\u8981\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c\u3002\n\n\n\u8fd9\u662f\u6211\u8ba4\u4e3a\u8fd9\u9898\u5b58\u5728\u7684\u7ec6\u8282\uff08\u53ef\u80fd\u8fd8\u6709\u6211\u6570\u4e0d\u8fc7\u6765\u4e86\uff09\uff0c\u8fd9\u4e9b\u7ec6\u8282\u6709\u4e9b\u662f\u6bd4\u8f83\u91cd\u8981\u7684\uff0c\u6709\u4e9b\u662f\u8981\u770b\u5199\u6cd5\u7684\u3002\n\n\n\u5bf9\u4e8e\u8fd9\u4e00\u9898\u6211\u4e5f\u6709\u4e00\u4e9b\u81ea\u5df1\u7684\u770b\u6cd5\u2014\u2014\n\n\n\u8fd9\u9898\u5176\u5b9e\u5f88\u597d\uff0c\u5927\u91cf\u7684\u4ee3\u7801\uff0c\u6761\u4ef6\u548c\u60c5\u51b5\u80fd\u953b\u70bc\u4e00\u4e2a\u4eba\u7684\u4ee3\u7801\u6c34\u5e73\u548c\u601d\u7ef4\u80fd\u529b\u3002\u5c3d\u7ba1\u6709\u4e9b\u65b9\u9762\u4e0d\u662f\u7279\u522b\u597d\uff08\u6bd4\u5982\u51fa\u5728\u4e86\u7701\u9009\u91cc\u9762\uff0c\u4f30\u8ba1\u6ca1\u6709\u4ec0\u4e48\u4eba\u80fd\u6253\u5b8c\u5e76AC\uff09\u3002\n\n\n\u7136\u540e\u6211\u53d1\u73b0\u5728luogu\u91cc\u9762\uff0c\u8fd9\u9898\u7684\u5206\u7c7b\u6709\u4e00\u4e2aAOE\u3002\u4e3a\u4ec0\u4e48\u6807AOE\uff1f\u6709\u4e9b\u4eba\u8bf4\u56e0\u4e3a\u5357\u86ee\u548c\u4e07\u7bad\u662f\u7fa4\u4f53\u653b\u51fb\u3002\n\n\n\u6211\u5e76\u4e0d\u662f\u8fd9\u6837\u8ba4\u4e3a\u7684\uff08\u5f53\u7136\u4e5f\u6709\u53ef\u80fd\u6211\u7406\u89e3\u9519\u4e86\uff09\u2014\u2014\n\n\n\u56e0\u4e3a\u8fd9\u4e2a\u9898\u76ee\u4f9d\u8d56\u4e8e\u4e3b\u516c\u4eae\u660e\u4e86\u8eab\u4efd\u3002\u8fd9\u4e2a\u6761\u4ef6\u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u800c\u662f\u6781\u5176\u5fc5\u8981\u7684\u3002\n\n\n\u56e0\u4e3a\uff0c\u9664\u4e3b\u516c\u5916\u4efb\u610f\u4e00\u4e2a\u4eba\u8981\u8868\u660e\u8eab\u4efd\uff0c\u5fc5\u987b\u8981\u653b\u51fb\u4e00\u4e2a\u4ee5\u8868\u660e\u8eab\u4efd\u7684\u4eba\uff0c\u8fd9\u5c31\u6784\u6210\u4e86\u4e00\u4e2aDAG\uff08\u5176\u5b9e\u4e5f\u662f\u4e00\u9897\u6811\uff09\u3002\n\n\n\u8fd9\u4e2aDAG\u5c31\u662fAOE\u7f51\u3002\n\n\n\u8fd8\u6709\uff0c\u6211\u53ea\u662f\u5199\u4e86\u201c\u4e09\u56fd\u6740\u201d\u91cc\u7684\u5f88\u5c0f\u7684\u4e00\u90e8\u5206\u5c31\u51fa\u4e86\u8fd9\u4e48\u591abug\uff0c\u5982\u679c\u662f\u771f\u6b63\u7684\u4e09\u56fd\u6740\uff0c\u90a3\u771f\u662f\u65e0\u6cd5\u53ef\u60f3\u3002\u3002\n\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst bool diff[3][3]={{0,0,1},{0,0,1},{1,1,0}};\nconst int M=2005;\nint n,m,fanzhu,deadfan,rounds,tmp[M],used[M]; char ch,cu;\nstruct PIGS {int iden,bloods,perfo,dead,nxt,equip,cnt; char cards[M];}a[15];\ndeque <char> cards_pile;\nvoid _file() {\n    freopen(\"pigs.in\",\"r\",stdin);\n    freopen(\"pigs.out\",\"w\",stdout);\n}\ninline char read() {\n    ch=getchar();\n    while (ch<'A'||ch>'Z') ch=getchar();\n    return ch;\n}\nvoid _init() {\n    scanf(\"%d%d\",&n,&m),fanzhu=deadfan=0;\n    for (int i=1,las=0; i<=n; i++) {\n        a[i].bloods=a[i].cnt=4,a[i].dead=a[i].perfo=a[i].equip=0,a[i].nxt=i%n+1;\n        cu=read(),fanzhu+=(cu=='F'),a[i].iden=(cu!='F')?((cu!='Z')?0:1):2,cu=read();\n        for (int j=1; j<=4; j++) a[i].cards[j]=read();\n    }\n    a[1].perfo=1;\n    for (int i=1; i<=m; i++) cards_pile.push_back(read());\n}\nvoid get_cards(int cur) {\n    a[cur].cards[++a[cur].cnt]=cards_pile.front();\n    if (cards_pile.size()>1) cards_pile.pop_front();\n}\nbool ought(int cur) {\n    int nxt=a[cur].nxt;\n    if (a[nxt].perfo==0) return 0; else\n    if (a[nxt].perfo==1) return diff[a[cur].iden][a[nxt].iden];\n    else return a[cur].iden==0;\n}\nint atk(int cur) {\n    if (a[cur].iden==2) return 1;\n    for (int nxt=a[cur].nxt; nxt!=cur; nxt=a[nxt].nxt) if (!a[nxt].dead)\n        if ((a[nxt].iden==2&&a[nxt].perfo==1)||(a[cur].iden==0&&a[nxt].perfo==-1)) return nxt;\n    return -1;\n}\nvoid pend(int x,int y) {\n    if (a[x].iden==0&&a[y].iden==1) {\n        for (int i=1; i<=a[x].cnt; i++) used[i]=rounds; a[x].equip=0;\n    }\n    else if (a[y].iden==2) get_cards(x),get_cards(x),get_cards(x);\n}\nint find(int cur,char aim) {\n    for (int i=1; i<=a[cur].cnt; i++) if (a[cur].cards[i]==aim) return i;\n    return 0;\n}\nvoid adjust(int cur,int s,int t) {\n    for (int i=s; i<t; i++) a[cur].cards[i]=a[cur].cards[i+1];\n}\nvoid respond_peach(int cur,int user) {\n    int re=find(cur,'P');\n    if (cur==user) {\n        re=0;\n        for (int i=1; i<=a[cur].cnt; i++) if (used[i]!=rounds&&a[cur].cards[i]=='P') {re=i; break;}\n        if (re) used[re]=rounds,a[cur].bloods++;\n        return;\n    }\n    if (re) a[cur].bloods++,adjust(cur,re,a[cur].cnt),a[cur].cnt--;\n}\nbool respond_dodge(int cur) {\n    int re=find(cur,'D');\n    if (re) adjust(cur,re,a[cur].cnt),a[cur].cnt--;\n    return re;\n}\nbool respond_kill(int cur,int user) {\n    int re=find(cur,'K');\n    if (cur==user) {\n        re=0;\n        for (int i=1; i<=a[cur].cnt; i++) if (used[i]!=rounds&&a[cur].cards[i]=='K') {re=i; break;}\n        if (re) used[re]=rounds;\n        return re;\n    }\n    if (re) adjust(cur,re,a[cur].cnt),a[cur].cnt--;\n    return re;\n}\nbool respond_wuxie(int cur,int user) {\n    int re=find(cur,'J');\n    if (cur==user) {\n        re=0;\n        for (int i=1; i<=a[cur].cnt; i++) if (used[i]!=rounds&&a[cur].cards[i]=='J') {re=i; break;}\n        if (re) used[re]=rounds;\n        return re;\n    }\n    if (re) adjust(cur,re,a[cur].cnt),a[cur].cnt--;\n    return re;\n}\nvoid lose_blood(int cur,int user) {\n    a[cur].bloods--; if (a[cur].bloods<1) respond_peach(cur,user);\n}\nvoid change_link(int cur) {\n    for (int pre=1; pre<=n; pre++)\n        if (!a[pre].dead&&a[pre].nxt==cur) {a[pre].nxt=a[cur].nxt; break;}\n}\nvoid do_peach(int cur) {\n    a[cur].bloods++;\n}\nvoid do_kill(int cur) {\n    int nxt=a[cur].nxt;\n    a[cur].perfo=1;\n    if (!respond_dodge(nxt)) {\n        lose_blood(nxt,cur);\n        if (a[nxt].bloods<1) deadfan+=(a[nxt].iden==2),a[nxt].dead=1,a[cur].nxt=a[nxt].nxt;\n        if (fanzhu==deadfan||a[1].dead) return;\n        if (a[nxt].bloods<1) pend(cur,nxt);\n    }\n}\nbool do_wuxie(int user,int cur,int aim,int now) {\n    bool ret=now;\n    for (int nxt=cur; ; ) if (!a[nxt].dead) {\n        if (!now) {\n            if (!diff[a[nxt].iden][a[aim].iden])\n                if (respond_wuxie(nxt,user)) {a[nxt].perfo=1; return do_wuxie(user,nxt,aim,1-now);}\n        }else {\n            if (diff[a[nxt].iden][a[aim].iden])\n                if (respond_wuxie(nxt,user)) {a[nxt].perfo=1; return do_wuxie(user,nxt,aim,1-now);}\n        }\n        nxt=a[nxt].nxt; if (nxt==cur) break;\n    }\n    return ret;\n}\nvoid do_fight(int cur,int aim,int user) {\n    a[cur].perfo=1;\n    if (a[aim].perfo==1) {\n        if (do_wuxie(cur,cur,aim,0)) return;\n    }\n    for (; ;) {\n        if (a[cur].iden==0&&a[aim].iden==1) {\n            lose_blood(aim,user);\n            if (a[aim].bloods<1) deadfan+=(a[aim].iden==2),a[aim].dead=1,change_link(aim);\n            if (fanzhu==deadfan||a[1].dead) return;\n            if (a[aim].bloods<1) pend(cur,aim);\n            return;\n        }else\n        if (!respond_kill(aim,user)) {\n            lose_blood(aim,user);\n            if (a[aim].bloods<1) deadfan+=(a[aim].iden==2),a[aim].dead=1,change_link(aim);\n            if (fanzhu==deadfan||a[1].dead) return;\n            if (a[aim].bloods<1) pend(cur,aim);\n            return;\n        }\n        if (!respond_kill(cur,user)) {\n            lose_blood(cur,user);\n            if (a[cur].bloods<1) deadfan+=(a[cur].iden==2),a[cur].dead=1,change_link(cur);\n            if (fanzhu==deadfan||a[1].dead) return;\n            if (a[cur].bloods<1) pend(aim,cur);\n            return;\n        }\n    }\n}\nvoid do_nanzhu(int cur) {\n    for (int nxt=a[cur].nxt; nxt!=cur; nxt=a[nxt].nxt) if (!a[nxt].dead) {\n        if (a[nxt].perfo==1) {\n            if (do_wuxie(cur,cur,nxt,0)) continue;\n        }\n        if (!respond_kill(nxt,cur)) {\n            lose_blood(nxt,cur); if (nxt==1&&a[cur].perfo==0) a[cur].perfo=-1;\n            if (a[nxt].bloods<1) deadfan+=(a[nxt].iden==2),a[nxt].dead=1,change_link(nxt);\n            if (fanzhu==deadfan||a[1].dead) return;\n            if (a[nxt].bloods<1) pend(cur,nxt);\n        }\n    }\n}\nvoid do_wanjian(int cur) {\n    for (int nxt=a[cur].nxt; nxt!=cur; nxt=a[nxt].nxt) if (!a[nxt].dead) {\n        if (a[nxt].perfo==1) {\n            if (do_wuxie(cur,cur,nxt,0)) continue;\n        }\n        if (!respond_dodge(nxt)) {\n            lose_blood(nxt,cur); if (nxt==1&&a[cur].perfo==0) a[cur].perfo=-1;\n            if (a[nxt].bloods<1) deadfan+=(a[nxt].iden==2),a[nxt].dead=1,change_link(nxt);\n            if (fanzhu==deadfan||a[1].dead) return;\n            if (a[nxt].bloods<1) pend(cur,nxt);\n        }\n    }\n}\nvoid do_zhuge(int cur) {\n    a[cur].equip=1;\n}\nbool dis_cards(int cur) {\n    memset(used,0,sizeof used);\n    int i,cntused,totkill=0,counts,ret=-1,aim; char now;\n    for (rounds=1; ; rounds++) {\n        cntused=counts=0;\n        for (i=1; i<=a[cur].cnt; i++) if (used[i]!=rounds) {\n            now=a[cur].cards[i];\n            switch (now) {\n                case 'P':\n                    if (a[cur].bloods<4) do_peach(cur),used[i]=rounds,cntused++,i=a[cur].cnt;\n                    break;\n                case 'K':\n                    if ((!totkill||a[cur].equip)&&ought(cur)) do_kill(cur),used[i]=rounds,cntused++,totkill++,i=a[cur].cnt;\n                    break;\n                case 'F':\n                    aim=atk(cur); if (aim!=-1) do_fight(cur,aim,cur),used[i]=rounds,cntused++,i=a[cur].cnt;\n                    break;\n                case 'N':\n                    do_nanzhu(cur),used[i]=rounds,cntused++,i=a[cur].cnt;\n                    break;\n                case 'W':\n                    do_wanjian(cur),used[i]=rounds,cntused++,i=a[cur].cnt;\n                    break;\n                case 'Z':\n                    do_zhuge(cur),used[i]=rounds,cntused++,i=a[cur].cnt;\n                    break;\n                default:\n                    break;\n            }\n            if (fanzhu==deadfan||a[1].dead) {ret=1; break;}\n            if (a[cur].dead) {ret=0; break;}\n        }\n        for (int i=1; i<=a[cur].cnt; i++) if (used[i]!=rounds) tmp[++counts]=a[cur].cards[i];\n        for (int i=1; i<=counts; i++) a[cur].cards[i]=tmp[i]; a[cur].cnt=counts;\n        if (!cntused&&ret!=1) ret=0;\n        if (ret>-1) return ret;\n    }\n}\nbool playing(int cur) {\n    get_cards(cur),get_cards(cur);\n    return dis_cards(cur);\n}\nvoid _duel() {\n    for (int i=1,event=0; !event&&fanzhu>0; i=a[i].nxt) if (!a[i].dead) event=playing(i);\n}\nvoid _print() {\n    printf(\"%s\\n\",a[1].dead?\"FP\":\"MP\");\n    for (int i=1; i<=n; i++) {\n        if (a[i].dead) printf(\"%s\",\"DEAD\"); else {\n            if (a[i].cnt>0) printf(\"%c\",a[i].cards[1]);\n            for (int j=2; j<=a[i].cnt; j++) printf(\" %c\",a[i].cards[j]);\n        }\n        puts(\"\");\n    }\n}\nint main() {\n    _init();\n    _duel();\n    _print();\n    return 0;\n}\n```",
        "postTime": 1507448891,
        "uid": 21158,
        "name": "pinkex",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u4e4b\u524d\u8fd9\u4e2a\u4ee3\u7801\u6709\u4e9b\u6ce8\u91ca\u6709bug\uff0c\u73b0\u5df2\u4fee\u590d\u91cd\u65b0\u63d0\u4ea4\u3010\u7ed9\u6211\u8fc7\u5427$QAQ$\u6211\u8fa3\u4e48\u53ef\u601c\u3011\n\n-----\n\n\u9996\u5148\u6211\u7684\u8fd9\u6bb5\u4ee3\u7801\u53c2\u8003\u8fc7\u4e86[hzwer](https://www.cnblogs.com/nietzsche-oier/p/9093673.html)dalao\u7684\u505a\u6cd5\u4f46\u662f\u5927\u6982\u67b6\u6784\u662f\u6211\u6253\u7684\u53ea\u662f\u6709\u4e9b\u5c0fbug\u548c\u4ed6\u7684\u4ee3\u7801\u5bf9\u62cd\u800c\u5df2QAQ  \n\u56db\u4f4ddalao\u90fd\u628a\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\u548c\u5c0f\u5751\u90fd\u7ed9\u5217\u51fa\u6765\u4e86\uff0c\u6211\u5c31\u8d34\u4e2a\u6709\u6ce8\u91ca\u7684\u4ee3\u7801\u5427\u2026\u2026\u3010\u6253\u4e86\u6211\u56db\u4e2a\u4e2d\u5348\u8fd8\u9e3d\u4e86\u4e00\u4f1aQAQ\u3011\n```cpp\n/*\n\u724c\u5e93\u4e3a\u7a7a\u4e4b\u540e\u518d\u62bd\u724c\uff0c\u4f1a\u91cd\u590d\u62bd\u6700\u540e\u4e00\u5f20\u88ab\u62bd\u8d70\u724c\n\u4e3b\u516c\u6b7b\u6216\u53cd\u8d3c\u5168\u6b7b\u90fd\u4e2d\u65ad\u6e38\u620f\uff0c\u76f4\u63a5\u8fdb\u5165\u8f93\u51fa\u9636\u6bb5\n\u6240\u6709\u4eba\u4e00\u5f00\u59cb\u90fd\u77e5\u9053\u4e3b\u516c\u7684\u8eab\u4efd\n\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u65e0\u6761\u4ef6\u5e2e\u961f\u53cb\u65e0\u61c8\u6389\u51b3\u6597\u3010\u4e07\u7bad\u3011\u3010\u5357\u86ee\u3011\n\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u65e0\u6761\u4ef6\u3010\u65e0\u61c8\u3011\u6389\u5bf9\u624b\u7684\u3010\u65e0\u61c8\u3011\n\u6bcf\u4e2a\u4eba\u90fd\u4e0d\u4f1a\u3010\u65e0\u61c8\u3011\u6389\u961f\u53cb\u7684\u3010\u65e0\u61c8\u3011\n\u53cd\u8d3c\u53ea\u4f1a\u3010\u51b3\u6597\u3011\u4e3b\u516c\n\u5fe0\u81e3\u88ab\u4e3b\u516c\u3010\u51b3\u6597\u3011\u5e76\u4e0d\u80fd\u7b97\u8df3\u5fe0\n\u4e3b\u516c\u6740\u4e86\u5fe0\u81e3\u8981\u6e05\u7a7a\u6240\u6709\u724c\u4ee5\u53ca\u3010\u8bf8\u845b\u8fde\u5f29\u3011\n\u6740\u6b7b\u53cd\u8d3c\u6478\u4e09\u5f20\u724c\n*/\n/*\n\u6843 P\n\u6740 K\n\u95ea D\n\u51b3\u6597 F\n\u5357\u86ee\u5165\u4fb5 N\n\u4e07\u7bad\u9f50\u53d1 W\n\u65e0\u61c8\u53ef\u51fb J\n\u8bf8\u845b\u8fde\u5f29 Z \n*/\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct node{\n    int cs,hp,next,last;\n    //cs=cardsize=\u624b\u724c\u6570\n\t//hp \u751f\u547d\u503c \n    char id,card[2010];\n    //id=identity=\u8eab\u4efd \n\tbool zgln;\n\t//\u662f\u5426\u88c5\u5907\u4e86\u3010\u8bf8\u845b\u8fde\u5f29\u3011 \n}a[20];\nchar kn[11],kpd[2010],sss[10];\n//kn\u8868\u793a\u5728\u4e3b\u516c\u773c\u91cc\u8fd9\u53ea\u732a\u7684\u8eab\u4efd\n//kpd \u5361\u724c\u5806 \nint n,m,fz;\n//fz \u53cd\u8d3c\u6570\u91cf \nbool ed;\n\nvoid mp(int x)\n//\u3010\u6478\u724c\u3011\n{\n    if(!m) m++;\n    a[x].card[++a[x].cs]=kpd[m];\n    m--;\n}\n\nvoid js(int x1,int x2)\n//\u3010\u51fb\u6740\u3011 \n{\n    for(int i=1;i<=a[x2].cs;i++)\n        if(a[x2].card[i]=='P')\n        //\u5224\u65ad\u662f\u5426\u6709\u3010\u6843\u3011 \n\t\t{\n            a[x2].card[i]='U';\n            a[x2].hp++;\n            return ;\n        }\n    a[a[x2].next].last=a[x2].last;\n    a[a[x2].last].next=a[x2].next;\n    //\u6b7b\u4ea1\u540e\u6539\u53d8\u653b\u51fb\u8ddd\u79bb \n    if(x2==1){ed=true;return ;}\n    if(a[x2].id=='F') fz--;\n    if(!fz){ed=true;return ;}\n    //\u6ca1\u6709\u53cd\u8d3c\u6e38\u620f\u7ed3\u675f \n    if(a[x2].id=='F') mp(x1),mp(x1),mp(x1);\n    //\u51fb\u6740\u53cd\u8d3c\u6478\u4e09\u5f20\u724c \n    if(a[x2].id=='Z' && a[x1].id=='M') a[x1].cs=0,a[x1].zgln=false;\n    //\u5982\u679c\u4e3b\u516c\u628a\u5fe0\u81e3\u6740\u4e86\u90a3\u5c31\u8981\u5f03\u724c \n}\n\nvoid Kil(int x1,int x2)\n//\u3010\u6740\u3011 \n{\n    for(int i=1;i<=a[x2].cs;i++)\n        if(a[x2].card[i]=='D')\n\t\t{\n            a[x2].card[i]='U';\n            return ;\n        }\n    a[x2].hp--;\n    if(!a[x2].hp) js(x1,x2);\n    //\u6bcf\u6b21\u9020\u6210\u4f24\u5bb3\u90fd\u8981\u5224\u65ad\u88ab\u653b\u51fb\u8005\u662f\u5426\u7a7a\u8840\n\t//\u7136\u540e\u8fdb\u5165\u3010\u51fb\u6740\u3011\u73af\u8282 \n}\n\nbool wxkj(int x1,int x2,int x3)\n//\u3010\u65e0\u61c8\u53ef\u51fb\u3011 \n{\n    int i=x1,pd=x3?x2:x1;\n    while(1)\n\t{\n        if(x3==1)\n\t\t{\n            if(kn[x2]==a[i].id || (kn[x2]=='M' && a[i].id=='Z') || (kn[x2]=='Z' && a[i].id=='M'))\n            //\u5047\u5982\u662f\u654c\u5bf9\u7684\u90a3\u5c31\u3010\u65e0\u61c8\u53ef\u51fb\u3011\u6389\n                for(int j=1;j<=a[i].cs;j++)\n                    if(a[i].card[j]=='J')\n\t\t\t\t\t{\n                        a[i].card[j]='U';\n                        kn[i]=a[i].id;\n                        return !wxkj(i,x1,0);\n                    }\n        }\n        else\n\t\t{\n            if(((a[i].id=='M' || a[i].id=='Z') && kn[x1]=='F') || (a[i].id=='F' && (kn[x1]=='M' || kn[x1]=='Z')))\n                for(int j=1;j<=a[i].cs;j++)\n                    if(a[i].card[j]=='J')\n\t\t\t\t\t{\n                        a[i].card[j]='U';\n                        kn[i]=a[i].id;\n                        return !wxkj(i,x1,0);\n                    }\n        }\n        i=a[i].next;\n        if(i==x1) break;\n        //\u6ca1\u6709\u4eba\u7528\u3010\u65e0\u61c8\u53ef\u51fb\u3011\u62b5\u6321\u6b64\u3010\u65e0\u61c8\u53ef\u51fb\u3011\u90a3\u4e48\u8fd9\u5f20\u724c\u5c31\u751f\u6548 \n    }\n    return false;\n}\n\nvoid nmrq(int x1)\n//\u3010\u5357\u86ee\u5165\u4fb5\u3011\n{\n    for(int x2=a[x1].next;x2!=x1;x2=a[x2].next)\n    //\u8fdb\u884c\u4e00\u4e2a\u5faa\u73af\u6765\u51fa\u724c \n        if(!wxkj(x1,x2,1))\n        //\u5224\u65ad\u662f\u5426\u88ab\u3010\u65e0\u61c8\u53ef\u51fb\u3011\u6389 \n\t\t{\n\t\t\tint i;\n            for(i=1;i<=a[x2].cs;i++)\n                if(a[x2].card[i]=='K')\n\t\t\t\t{\n                    a[x2].card[i]='U';\n                    break;\n                }\n            if(i>a[x2].cs)\n\t\t\t{\n                a[x2].hp--;\n                if(x2==1 && kn[x1]=='U') kn[x1]='L';\n                if(!a[x2].hp) js(x1,x2);\n                if(ed) return ;\n            }\n        }\n}\n\nvoid wjqf(int x1)\n//\u3010\u4e07\u7bad\u9f50\u53d1\u3011 \n{\n    for(int x2=a[x1].next;x2!=x1;x2=a[x2].next)\n        if(!wxkj(x1,x2,1))\n        //\u5224\u65ad\u662f\u5426\u88ab\u3010\u65e0\u61c8\u53ef\u51fb\u3011\u6389 \n\t\t{\n\t\t\tint i;\n            for(i=1;i<=a[x2].cs;i++)\n                if(a[x2].card[i]=='D')\n\t\t\t\t{\n                    a[x2].card[i]='U';\n                    break;\n                }\n            if(i>a[x2].cs)\n\t\t\t{\n                a[x2].hp--;\n                if(x2==1 && kn[x1]=='U') kn[x1]='L';\n                if(!a[x2].hp) js(x1,x2);\n                if(ed) return ;\n            }\n        }\n}\n\nvoid jd(int x1,int x2)\n//\u3010\u51b3\u6597\u3011 \n{\n    int i,j,k;\n    if(wxkj(x1,x2,1)) return ;\n    //\u5224\u65ad\u662f\u5426\u88ab\u3010\u65e0\u61c8\u53ef\u51fb\u3011\u6389 \n    if(x1==1 && a[x2].id=='Z')\n\t{\n        a[x2].hp--;\n        if(!a[x2].hp) js(x1,x2);\n        return ;\n    }\n    j=k=1;\n    while(1)\n\t{\n        while(a[x2].card[j]!='K' && j<=a[x2].cs) j++;\n        if(j>a[x2].cs)\n\t\t{\n            a[x2].hp--;\n            if(!a[x2].hp) js(x1,x2);\n            return ;\n        }\n        else a[x2].card[j]='U';\n        while(a[x1].card[k]!='K' && k<=a[x1].cs) k++;\n        if(k>a[x1].cs)\n\t\t{\n            a[x1].hp--;\n            if(!a[x1].hp) js(x2,x1);\n            return ;\n        }\n        else a[x1].card[k]='U';\n    }\n}\n\nvoid hh()\n//\u8fdb\u5165\u56de\u5408 \n{\n    char nc;\n    ed=true;\n    if(fz) ed=false;\n    if(ed) return ;\n    for(int i=1;i;i=a[i].next)\n\t{\n        mp(i),mp(i);\n        bool kill=true;\n        for(int j=1;j<=a[i].cs;j++)\n            if(a[i].card[j]!='U')\n            //=='U'\u5c31\u662f\u88ab\u4f7f\u7528\u8fc7\uff0c\u5f03\u7f6e\u4e86 \n\t\t\t{\n                if(!a[i].hp) break;\n                nc=a[i].card[j];\n                //nc=now-card=\u73b0\u5728\u7684\u624b\u724c \n                if(nc=='P')\n                //\u4f7f\u7528\u3010\u6843\u3011\n\t\t\t\t{\n                    if(a[i].hp!=4) a[i].hp++,a[i].card[j]='U';\n                    continue;\n                }\n                if(nc=='K')\n                //\u4f7f\u7528\u3010\u6740\u3011 \n\t\t\t\t{\n                    if(!kill && !a[i].zgln) continue;\n                    if(a[i].id=='M' && kn[a[i].next]!='L' && kn[a[i].next]!='F') continue;\n                    if(a[i].id=='Z' && kn[a[i].next]!='F') continue;\n                    if(a[i].id=='F' && kn[a[i].next]!='Z' && kn[a[i].next]!='M') continue;\n                    a[i].card[j]='U';\n                    Kil(i,a[i].next);\n                    kn[i]=a[i].id,kill=false;\n                    if(ed) return ;\n                    continue;\n                }\n                if(nc=='F')\n                //\u4f7f\u7528\u3010\u51b3\u6597\u3011\n\t\t\t\t{\n                    if(a[i].id=='F')\n\t\t\t\t\t{\n                        a[i].card[j]='U',jd(i,1);\n                        kn[i]=a[i].id;\n                        if(ed) return ;\n                        j=0;\n                        continue;\n                    }\n                    for(int k=a[i].next;k!=i;k=a[k].next)\n                        if((a[i].id=='M' && (kn[k]=='L' || kn[k]=='F')) || (a[i].id=='Z' && kn[k]=='F'))\n\t\t\t\t\t\t{\n                            a[i].card[j]='U',jd(i,k);\n                            kn[i]=a[i].id;\n                            if(ed) return ;\n                            j=0;\n                            break;\n                        }\n                    continue;\n                }\n                if(nc=='N')\n                //\u4f7f\u7528\u3010\u5357\u86ee\u5165\u4fb5\u3011\n\t\t\t\t{\n                    a[i].card[j]='U';\n                    nmrq(i);\n                    if(ed) return ;\n                    j=0;\n                    continue;\n                }\n                if(nc=='W')\n                //\u4f7f\u7528\u3010\u4e07\u7bad\u9f50\u53d1\u3011 \n\t\t\t\t{\n                    a[i].card[j]='U';\n                    wjqf(i);\n                    if(ed) return ;\n                    j=0;\n                    continue;\n                }\n                if(nc=='Z')\n                //\u88c5\u5907\u3010\u8bf8\u845b\u8fde\u5f29\u3011 \n\t\t\t\t{\n                    a[i].zgln=true;\n                    a[i].card[j]='U';\n                    j=0;\n                    continue;\n                }\n            }\n    }\n}\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;i++) a[i].next=i+1,a[i].last=i-1;\n    //\u653b\u51fb\u8ddd\u79bb \n    a[n].next=1,a[1].last=n;\n    for(int i=1;i<=n;i++)\n\t{\n        for(int j=1;j<2010;j++) a[i].card[j]='U';\n        scanf(\"%s\",sss);a[i].id=sss[0];\n        for(int j=1;j<=4;j++) scanf(\"%s\",sss),a[i].card[j]=sss[0];\n        a[i].cs=a[i].hp=4;\n        //\u624b\u724c\u4e0a\u9650\u548c\u8840\u91cf\u4e0a\u9650\u90fd\u662f4 \n        if(a[i].id=='F') fz++;\n        //\u7edf\u8ba1\u53cd\u8d3c\u7684\u6570\u91cf \n        a[i].zgln=false;\n    }\n    for(int i=2;i<=n;i++) kn[i]='U';\n    kn[1]='M';\n    for(int i=1;i<=m;i++) scanf(\"%s\",sss),kpd[m-i+1]=sss[0];\n    hh();\n    //\u8fdb\u5165\u56de\u5408 \n    if(a[1].hp<=0) printf(\"FP\\n\");\n    else printf(\"MP\\n\");\n    //\u770b\u770b\u4e3b\u516c\u6709\u6ca1\u6709\u6302 \n    for(int i=1;i<=n;i++)\n\t{\n        if(a[i].hp<=0) printf(\"DEAD\\n\");\n        //\u7a7a\u8840\u51c9\u51c9 \n        else\n        //\u4eae\u724c \n\t\t{\n            for(int j=1;j<=a[i].cs;j++)\n                if(a[i].card[j]!='U') printf(\"%c \",a[i].card[j]);\n                //\u82e5\u8be5\u624b\u724c\u6ca1\u6709\u88ab\u5f03\u7f6e\u5219\u8f93\u51fa \n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1536903675,
        "uid": 41785,
        "name": "\u591c\u5200\u795e\u5341\u9999\u10e6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u6b64\u9898\u5c45\u7136\u6ca1\u6709<=100\u884c\u4ee3\u7801\u7684\u9898\u89e3\uff1f\u6211\u6765\u53d1\u4e00\u6ce2\n\n\uff08\u6ce8\uff1a**\u7801\u98ce\u4ec5\u4f9b\u5a31\u4e50\u5411\uff0c\u8bf7\u52ff\u5b66\u4e60\u8fd9\u79cd\u7801\u98ce\uff01\uff01\uff01**\uff09\n\n\uff08\u53e6\u6ce8\uff1a\u4e4b\u524d\u8c8c\u4f3c\u56e0\u4e3aAFO\u6240\u4ee5\u5bfc\u81f4\u6709\u4e9b\u9519\u8bef\u6ca1\u80fd\u5904\u7406\uff0c\u8bf7\u8c05\u89e3\uff09\n\n\u9996\u5148\u6b64\u9898\u5751\u70b9\u5f88\u591a\uff0c\u800c\u6211\u672c\u4eba\u8bed\u6587\u4e0d\u597d\uff0c\u591a\u6b21\u7406\u89e3\u9519\u9898\u610f\uff0c\u5bfc\u81f4\u4ea4\u4e86\u4e00\u9762\u624dAC\uff08\u7406\u6e05\u601d\u8def\u540e\u8fd8\u662f\u80fd\u505a\u5230300\u884c\u5185\u7684\uff09\n\n1. \u9996\u5148\u5173\u4e8e\u9898\u76ee\u8bf4\u7684\u4ec0\u4e48\u724c\u591f\u7528\uff1f\u54ea\u91cc\u591f\u7528\u4e86...\u660e\u660e\u4f1aRE\u4e24\u4e2a\u70b9\uff0c\u6240\u4ee5\u4e0d\u591f\u7528\u7684\u65f6\u5019\u4e00\u76f4\u62ff\u6700\u540e\u4e00\u5f20\u724c\uff08\u53cd\u4eba\u7c7b\uff09\n\n1. \u5de8\u5413\u4eba\u7684\u9012\u5f52\u65e0\u61c8...$A$\u65e0\u61c8\u6389$B$\u5bf9$C$\u65e0\u61c8\u6389$D$\u65e0\u61c8\u6389E\u5bf9....\u8fd9\u91cc\u5176\u5b9e\u5224\u65ad\u4e5f\u5f88\u597d\u5224\u65ad\uff0c\u5047\u8bbe\u4e00\u5f00\u59cb\u6211\u4eec$x$\u7684\u9526\u56ca\u751f\u6548\u524d,\u6211\u4eec\u9700\u8981\u5e2e\u4ed6\u65e0\u61c8,\u6b64\u65f6\u9ed8\u8ba4x\u662f\u53d7\u5bb3\u8005\uff0c\u90a3\u4e48$y$\u5e2e$x$\uff0c$y$\u548c$x$\u5c31\u662f\u4e00\u8fb9\u7684,$z$\u65e0\u61c8$y,z$\u548c$x$\u5c31\u662f\u654c\u4eba\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u4e09\u4e2a\u4fe1\u606f$\uff1a$\u662f\u8c01\u7684\u9526\u56ca\u724c,\u6700\u4e00\u5f00\u59cb\u7684\u76ee\u6807\u662f\u8c01,\u6211\u662f\u732e\u6bb7\u52e4\uff0c\u8fd8\u662f\u8868\u654c\u610f\u3002\u6bcf\u6b21\u9012\u5f52\u7684\u65f6\u5019\uff0c\u8868\u654c\u610f$--->$\u732e\u6bb7\u52e4,\u732e\u6bb7\u52e4$--->$\u8868\u654c\u610f \u5373\u53ef \uff08\u56e0\u4e3a\u6b64\u65f6\u65e0\u61c8\u7684\u4eba\u662f $x$\u7684\u670b\u53cb\uff0c\u654c\u4eba\u8f6e\u6362\u6765\u7684\uff09\n\n1. \u51b3\u6597\u628a\u81ea\u5df1\u6253\u6b7b\u4e86\uff1f\u8fd9\u91cc\u6211\u6ca1\u5224\u65adTLE25\u5206\u597d\u6c14\u554a\uff01\u4e00\u5b9a\u6ce8\u610f\u51b3\u6597\u540e\u5224\u65ad\u81ea\u5df1\u662f\u5426$die$\n\n1. \u5357\u86ee\u5165\u4fb5 \u548c \u4e07\u7bad\u9f50\u53d1 \u662f\u5728$x$\u51fa$\\ $\u6740/\u95ea$\\ $\u524d\u522b\u4eba\u5e2e\u51fa\u65e0\u61c8,\u6211\u786c\u662f\u8ba4\u4e3a\u662f\u81ea\u5df1\u6ca1\u6709\u624d\u51fa\uff08\u56e0\u4e3a\u6211\u73a9\u4e09\u56fd\u6740\u7684\u65f6\u5019\u7ecf\u5e38\u8fd9\u6837\u5b50\uff0c\u6ed1\u7a3d\uff09\n\n1. \u6ce8\u610f\u4e86,\u56e0\u4e3a\u6bcf\u6b21\u662f\u627e\u5230\u6700\u5de6\u8fb9\u7684\u53ef\u4ee5\u4f7f\u7528\u7684\u724c\uff0c\u7136\u800c\u4f60\u7684\u6740\u53ea\u80fd\u5bf9\u53f3\u8fb9\u4e00\u4e2a\u4f7f\u7528,\u4f60\u7684\u51b3\u6597\u8981\u548c\u660e\u786e\u8eab\u4efd\u7684\u4eba\u51b3\u6597\uff0c\u4f60\u7684\u6843\u8981\u4f60\u6263\u8840\u624d\u80fd\u7528\uff0c\u4f60\u7684\u6740\u53ea\u80fd\u7528\u4e00\u6b21\uff01\u6240\u4ee5\u4f1a\u53d1\u73b0\uff0c\u5f53\u4f60$\\ \\ $\u5357\u86ee$\\ \\ $\u6216\u8005$\\ \\ $\u4e07\u7bad $\\ \\ $\u65f6\u53ef\u80fd**\u51fb\u6740\u4e86\u4f60\u53f3\u8fb9\u548c\u4f60\u540c\u9635\u8425\u7684**\uff08\u65e0\u8111\u6740\u961f\u53cb\uff09,\u7136\u540e\u5982\u679c**\u4f60\u7684\u53f3\u8fb9\u522b\u6210\u4e86\u4f60\u7684\u654c\u4eba**\uff0c\u4f60\u5c31\u53ef\u4ee5\u5bf9\u4ed6\u4f7f\u7528\u5de6\u8fb9\u6ca1\u7528\u7684\u6740\uff0c\u800c\u4e4b\u524d\u662f\u4e0d\u80fd\u7528\u7684\u56e0\u4e3a\u4f60\u4e0d\u80fd\u6740\u4f60\u961f\u53cb,\u8fd8\u6709\u53ef\u80fd\u5c31\u662f **\u5357\u86ee$/$\u4e07\u7bad \u66b4\u9732\u4e86\u67d0\u4e9b\u4eba\u7684\u8eab\u4efd**\uff0c\u4f60\u5c31\u53ef\u4ee5\u5bf9\u4ed6\u4eec\u4f7f\u7528\u51b3\u6597\uff0c\u6216\u8005\u5728\u53f3\u8fb9\u7684\u654c\u4eba\u4f7f\u7528\u6740\uff0c\u7136\u540e\u5c31\u662f\u51b3\u6597\uff0c\u4f60\u53ef\u80fd\u4f1a\u8ba9\u81ea\u5df1\u6263\u8840\uff0c\u90a3\u4e48\u5982\u679c\u4f60\u4e4b\u524d\u662f\u6ee1\u8840\uff0c\u5c31\u56e0\u4e3a\u5f3a\u5236\u4e0d\u8ba9\u5403\u6843\u5b50\uff0c\u800c\u5b58\u4e86\u8d77\u6765\uff0c\u800c\u6263\u8840\u540e\u53c8\u8981\u8fd4\u56de\u5de6\u8fb9\u53bb\u5403\u6843\u5b50\uff0c \u4ea6\u6216\u8005\u662f\u4f60\u88c5\u4e86\u4e00\u4e2a\u8bf8\u845b\u8fde\u5f29\uff0c\u53d1\u73b0\u5de6\u8fb9\u8fd8\u6709\u6740\u53ef\u7528\u3002\u6240\u4ee5\u4e3a\u4e86\u7b80\u5316\u4ee3\u7801\uff0c\u53ef\u4ee5**\u5f53\u4f60\u7528\u4e86\u9664\u6843\u4ee5\u5916\u7684\u724c**\u65f6\u5c31\u8981\u4ee4$i=0$\u4ece\u5934\u518d\u626b\u4e00\u904d\uff08\u8bf7\u6ce8\u610f\uff01\u6b64\u9898\u7edd\u5bf9\u4e0d\u5361\u65f6\u95f4\uff0c\u8bf7\u653e\u5fc3\u5927\u80c6\u7684\u66b4\u529b\uff09\n\n1. \u5982\u679c\u53cd\u8d3c\u51b3\u6597\uff0c\u4e00\u5b9a\u662f\u627e\u4e3bpig\uff0c\u65e0\u8bba\u662f\u5426\u5df2\u7ecf\u66b4\u9732\u8eab\u4efd\uff0c\u90fd\u4f1a\u627e\u4e3bpig!\n\nPS:\u56e0\u4e3a\u6211\u7684\u4ee3\u7801\u6bd4\u8f83\u7684~~\u7b80\u6d01\u660e\u4e86~~\uff0c\u6240\u4ee5\u6ca1\u90a3\u4e48\u591a\u8981\u6ce8\u610f\u7684~~~\n\n\uff08\u4f46\u662f\u6211\u88ab\u7b2c3\u70b9\u5361\u4e863\u6b21,\u7b2c5\u70b9\u5361\u4e862\u6b21,\u7b2c6\u70b9\u5361\u4e862\u6b21... $(>\ufe4f<)$\uff09\n\n\u63a5\u4e0b\u6765\u5bf9\u4ee3\u7801\u6838\u5fc3\u90e8\u4f4d\u8fdb\u884c\u8bb2\u89e3\n\n\u5176\u5b9e\u4e0d\u96be\u53d1\u73b0\u5f88\u591a\u5730\u65b9\u8981\u5224\u65ad $x$\u5bf9$y$\u662f\u732e\u6bb7\u52e4\u8fd8\u662f\u8868\u654c\u610f\u4ea6\u6216\u8005\u662f\u4e0d\u8f7b\u4e3e\u5984\u52a8\n\n\u90a3\u6211\u8fd9\u91cc\u505a\u4e86\u4e2a$f(x,y)$\u51fd\u6570\uff08**\u6838\u5fc3\u90e8\u5206**\uff09\n\n1. $y$\u8eab\u4efd\u4e0d\u660e,\u8c01\u4e5f\u4e0d\u80fd\u62ff\u4ed6\u600e\u4e48\u6837\uff08\u8bf4\u4e0d\u597d\u542c\u70b9\u5c31\u662f\u6709\u4f60\u6ca1\u4f60\u90fd\u4e00\u6837\uff09\uff0c\u8fd4\u56de-1\uff08\u5373\u4e0d\u732e\u6bb7\u52e4\uff0c\u4e5f\u4e0d\u8868\u654c\u610f\uff09\n\n1. $y$\u662f\u7c7b\u53cd$pig$\uff08\u795e\u79d8$pig$\uff09,\u5982\u679c$x$\u662f\u4e3b$pig$,\u5c31\u8fd4\u56de0(\u654c\u610f\uff0c\u65e0\u8bba\u8c01\u6253\u6211\u6211\u4e00\u5b9a\u8fd8\u51fb\uff0c\u771f\u6ed1\u7a3d\u8fd9\u4e2a\u4e3b$pig$),\u5426\u5219\u8fd4\u56de-1(\u5426\u5219\u4e00\u68d2\u6253\u6b7b\u81ea\u5df1\u4eba\u5212\u4e0d\u6765)\n\n1. $x$\u662f\u4e3b$pig$,\u5982\u679cy\u662f\u5fe0$pig$\u8fd4\u56de$1$\uff08\u732e\u6bb7\u52e4\uff09\uff0c\u5426\u5219\u8fd4\u56de$0$(\u56e0\u4e3a\u524d\u4e24\u79cd\u5df2\u7ecf\u8ba8\u8bba\u4e86\u4e0d\u660e\u8eab\u4efd\u6216\u8005\u662f\u7c7b\u53cd$pig$\uff0c\u6240\u4ee5$y$\u4e00\u5b9a\u660e\u786e\u8eab\u4efd)\n\n1. $x$\u662f\u5fe0$pig$\uff0c\u5982\u679c$y$\u662f\u4e3b$/$\u5fe0$pig$,&emsp;\u8fd4\u56de1,&emsp;\u5426\u5219\u8fd4\u56de0\n\n1. $x$\u662f\u53cd$pig$\uff0c\u5982\u679c$y$\u662f\u4e3b$/$\u5fe0$pig$,&emsp;\u8fd4\u56de0,&emsp;\u5426\u5219\u8fd4\u56de1\n\n\u4ee3\u7801\u91cc\u9762\uff0c$pig$\uff0c\u624b\u724c\u90fd\u662f\u7528\u94fe\u8868\u5199\u7684,\u611f\u89c9\u8fd9\u6837\u597d\u5199\u591a\u4e86nxt[i]\u4e3a\u4e0b\u4e00\u5f20\u724c,pre[i]\u4e3a\u4e0a\u4e00\u5f20,nxt[0]\u4e3a\u7b2c\u4e00\u5f20\u724c\n\n\n\n$upd(int\\ x,int\\ y,int\\ v):$\u4e5f\u662f\u4e2a**\u6838\u5fc3\u90e8\u5206**\uff0c\u662f\u7528\u6765\u6839\u636e$x$\u5bf9$y$\u4f7f\u7528\u4e86\u4ec0\u4e48(v\u4ee3\u8868\u7684),\u6765\u5224\u5b9a$x$\u7684\u8eab\u4efd\uff0c$v$\u5f52\u7eb3\u4e3a\u4e24\u79cd\n\n$0:$ \u4f7f\u7528\u65e0\u61c8,\u6740\uff0c\u51b3\u6597\uff08\u53ef\u4ee5\u660e\u786e\u8eab\u4efd\uff09\n\n$1:$\u4f7f\u7528\u5357\u86ee\u5165\u4fb5\uff0c\u4e07\u7bad\u9f50\u53d1\uff08\u5df2\u7ecf\u9020\u6210\u4e86\u4f24\u5bb3\uff09\uff08\u53ea\u80fd\u53d8\u4e3a\u7c7b\u53cdpig\uff09\n\n\u9996\u5148\u5982\u679c$x$\u8eab\u4efd\u5df2\u7ecf\u660e\u786e\uff08$0<=id<=2$\uff09\u8fd4\u56de\n\n\u5426\u5219$id=pid$\u5373\u53ef\uff08pid\u4e3a\u521d\u59cb\u8eab\u4efd,id\u4e3a\u5f53\u524d\u66b4\u9732\u51fa\u7684\u8eab\u4efd\uff09\n\n\u5176\u4f59\u7684\u4ec0\u4e48\u6478\u724c\uff0c\u5f03\u7f6e\uff0c\u56de\u548c\u5f00\u59cb\u6478\u724c\uff0c\u5224\u5b9a\u662f\u5426\u7ed3\u675f\uff0c\u7ed3\u675f\u51fd\u6570\uff0c\u5956\u52b1$/$\u60e9\u7f5a\u51fd\u6570\uff0c\u5224\u65ad\u662f\u5956\u52b1\u8fd8\u662f\u60e9\u7f5a\u51fd\u6570,\u5403\u6843\u51fd\u6570,\u6fd2\u6b7b\u51fd\u6570,\u653b\u51fb\u51fd\u6570,\u65e0\u61c8\u51fd\u6570\uff08\u9012\u5f52\uff09\uff0c\u5357\u86ee$/$\u4e07\u7bad\u51fd\u6570\uff08\u6211\u6ca1\u5f52\u5230\u4e00\u8d77\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\uff09,\u56de\u5408\u51fd\u6570,\u548c\u4e3b\u51fd\u6570 \u5c31\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u4e86\uff0c\u5206\u5f00\u5199\u5c31\u5f88\u5bb9\u6613\u5199\u51fa\u6765\u7684\uff0c\u4e4b\u540e\u53ea\u7528\u8c03\u7528\u5373\u53ef\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff0893\u884c\uff01)\n\n\u8fd9\u91cc\u6709\u4e24\u4e2a\u7248\u672c\uff0c\u7b2c\u4e00\u4e2a\u662f\u6211\u89c9\u5f97\u770b\u4e0a\u53bb\u66f4\u8212\u670d\uff0c\u66f4\u6e05\u723d\u7684\uff08\u5176\u5b9e\u5c31\u662f\u5f3a\u884c\u538b\u884c...\u5f53\u7136\u4e5f\u53ef\u80fd\u4f1a\u4f7f\u6709\u7684\u4eba\u6765\u8bf4\u5341\u5206\u7a92\u606f\uff09\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6211\u4ee5\u524d\u7684\u7801\u98ce\uff08\u51c6\u786e\u6765\u8bf4\u662f\u4ee5\u524d\u7684\u7801\u98ce\u683c\u5f0f\u5316\u540e\u7684\uff0c250\u591a\u884c\uff09\n\nfirst:\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;//\u4efb\u4f55\u9526\u56ca\u724c\u5bf9x\u751f\u6548\u524d,\u5224\u65ad\u548cx\u4e00\u8fb9\u7684\u662f\u5426\u6709\u65e0\u61c8,\u5224\u65ad\u548cx\u4e0d\u662f\u4e00\u8fb9\u7684\u662f\u5426\u6709\u65e0\u61c8\u65e0\u61c8\u6389\u65e0\u61c8,dfs\u5224\u65ad\nint n,m,L,len;\nconst int N=15,M=2010;\nchar s[M];//id=-1\u672a\u8868\u660e ,(id=0\u4e3bpig) (id=1 \u5fe0pig) (id=2 \u53cdpig) (id=3\u7c7b\u53cdpid)(\u8868\u660e\u8eab\u4efd) \n//pid:\u7ed9\u5b9a\u8eab\u4efd ,nt\u4e0b\u4e00\u4e2a,pr\u4e0a\u4e00\u4e2apig,cnt:\u724c\u6570 zgln:\u8bf8\u845b\u8fde\u5f29 s:\u724c\n//nxt:\u4e0b\u4e00\u5f20\u724c,pre\u4e0a\u4e00\u5f20\u724c ,end:\u6700\u540e\u4e00\u5f20\u724c \nstruct Pig{int HP,id,pid,nt,pr,cnt;bool zgln;char s[M];int nxt[M],pre[M],end;}a[N];\nint Pig[3];//p[0]:\u4e3bpig p[1]:\u5fe0pig p[2]:\u53cdpig\ninline void ins(int x,char c){int p=++a[x].cnt;a[x].nxt[a[x].end]=p;a[x].pre[p]=a[x].end;a[x].end=p;a[x].s[p]=c;}//\u6478\u724c\ninline char get(){if(L<=m)return s[L++];return s[m];}//\u5f97\u5230\u724c \ninline void start(int x){ins(x,get());ins(x,get());}//\u56de\u5408\u5f00\u59cb\u6478\u4e24\u5f20 \ninline void del(int x,int pos){a[x].nxt[a[x].pre[pos]]=a[x].nxt[pos];a[x].pre[a[x].nxt[pos]]=a[x].pre[pos];if(a[x].end==pos)a[x].end=a[x].pre[pos];}//\u5f03\u7f6e \ninline void clear(){a[1].end=0;a[1].nxt[0]=0;a[1].zgln=0;}//\u4e3b\u732a\u8bef\u6740 ,\u5f03\u6389\u6240\u6709\u724c\u548czgln \ninline void end(){//\u7ed3\u675f\n    if(!Pig[0])printf(\"FP\\n\");else if(!Pig[2])printf(\"MP\\n\");\n    for(int i=1;i<=n;++i){if(a[i].HP<=0)printf(\"DEAD\");else {for(int j=a[i].nxt[0];j;j=a[i].nxt[j])printf(\"%c \",a[i].s[j]);}printf(\"\\n\");}\n\texit(0);\n}\ninline int f(int x,int y){//x-->y\u732e\u6bb7\u52e4\u6216\u8005\u8868\u654c\u610f,0\u654c\u610f,1\u6bb7\u52e4,\u6838\u5fc3\u4ee3\u7801 \n    if(a[y].id==-1)return -1;//y\u672a\u660e\u786e\u8eab\u4efd,x\u4e0d\u8f7b\u4e3e\u5984\u52a8\n    if(a[y].id==3){if(a[x].pid==0)return 0;else return -1;}//\u4e3bpig\u5bf9\u7c7b\u53cdpig\u4e5f\u662f\u654c\u610f,\u5176\u4f59\u5bf9\u7c7b\u53cdpid\u4e0d\u8f7b\u4e3e\u5984\u52a8 \n    if(a[x].pid==0){if(a[y].id==1||a[y].id==0)return 1;else return 0;}\n    if(a[x].pid==1){if(a[y].id==0||a[y].id==1)return 1;else return 0;}\n    if(a[x].pid==2){if(a[y].id==0||a[y].id==1)return 0;else return 1;}\n    return -1;\n}\ninline void is_end(){if(Pig[0]&&Pig[2])return;end();}//\u662f\u5426\u7ed3\u675f,\u4e3bpig,\u6216\u8005\u53cdpig\u6b7b\u4ea1\u5c31\u7b97\u7ed3\u675f \ninline void jl(int x){ins(x,get());ins(x,get());ins(x,get());}//\u5956\u52b1\ninline void pd(int dead,int killer){if(a[dead].pid==2)jl(killer);if(a[dead].pid==1&&a[killer].pid==0)clear();}\ninline void P(int x,int pos){if(a[x].HP==4)return;a[x].HP++;del(x,pos);}//\u5403\u6843,\u81ea\u5df1\u7684\u56de\u5408\u80fd\u5403\u5c31\u5403\ninline void is_dead(int x,int y){//\u6fd2\u6b7b,\u53ef\u4ee5\u5403\u6843 \n    if(a[x].HP>0)return;\n    for(int i=a[x].nxt[0];i;i=a[x].nxt[i]){if(a[x].s[i]=='P')P(x,i);if(a[x].HP>0)break;}\n    if(a[x].HP<=0){a[a[x].nt].pr=a[x].pr;a[a[x].pr].nt=a[x].nt;Pig[a[x].pid]--;is_end();pd(x,y);}//\u6b7b\u4ea1\u5c31\u53bb\u6389\u8fd9\u4e2a\u4eba,\u5148\u5224\u65ad\u662f\u5426\u7ed3\u675f \n}\ninline void upd(int x,int y,int v){if(a[x].id>=0&&a[x].id<=2)return;//\u5df2\u7ecf\u8df3\u4e86,\u5c31\u8fd4\u56de \n    if(v==1){if(a[y].pid==0)a[x].id=3;return;}//\u5bf9\u4e3bpig\u9020\u6210\u4f24\u5bb3\u53d8\u4e3a\u7c7b\u53cdpig\n    a[x].id=a[x].pid;\n}//x\u5bf9y:v=0:\u4f7f\u7528\u65e0\u61c8,\u6740,\u51b3\u6597,: v=1\u4f7f\u7528\u5357\u86ee,\u4e07\u7bad\ninline void attack(int x,int y){a[y].HP--;is_dead(y,x);}//x\u653b\u51fby,\u5224\u65ady\u662f\u5426\u6b7b\u4ea1,\u653b\u51fb\u6765\u6e90\u662fx,\u6fd2\u6b7b\u53ef\u4ee5\u5403\u6843\ninline bool have(int x,char c){for(int i=a[x].nxt[0];i;i=a[x].nxt[i])if(a[x].s[i]==c){del(x,i);return 1;}return 0;}//\u662f\u5426\u6709c\u8fd9\u5f20\u724c,\u6709\u5219\u4e22 \ninline bool K(int x,int pos){//\u51b3\u5b9a\u662f\u5426\u5bf9\u4e0b\u4e00\u4e2a\u6253\u6740\u53d6\u51b3\u4e8e\u732e\u6bb7\u52e4\u8fd8\u662f\u8868\u654c\u610f \n    int y=a[x].nt;int p=f(x,y);if(p==-1)return 0;//\u672a\u4f7f\u7528\n    if(p==0){del(x,pos);upd(x,y,0);if(!have(y,'D'))attack(x,y);return 1;}//\u8868\u654c\u610f,\u6740\u4e00\u4e0b,\u5bf9\u9762\u6ca1\u6709\u95ea\u5219\u9020\u6210\u4f24\u5bb3 \n    return 0; //\u65e0\u8bba\u662f\u5426\u9020\u6210\u4f24\u5bb3\u90fd\u8981\u66f4\u65b0\u4ed6\u7684\u8eab\u4efdid \n}\ninline bool J(int x,int y,int v){\n    if(f(x,y)==v&&have(x,'J')){upd(x,y,0);if(!J(x,y,v^1))return 1;}\n    for(int i=a[x].nt;i!=x;i=a[i].nt){if(f(i,y)==v&&have(i,'J')){upd(i,y,0);if(!J(i,y,v^1))return 1;}}\n    return 0;\n}//\u4ecex\u5f00\u59cb,\u9700\u8981\u7ed9y\u51fa\u4ec0\u4e48,v=0\u8868\u793a\u6211\u662f\u4ed6\u654c\u4eba,\u6211\u8981\u65e0\u61c8\u4ed6\u7684\u65e0\u61c8,v=1\u8868\u793a\u6211\u548c\u4ed6\u662f\u4e00\u8fb9\u7684,\u6211\u8981\u5e2e\u4ed6\u65e0\u61c8 \ninline void F(int x,int y){//x\u5bf9y\u7528\u51b3\u6597,y\u5148\u51fa\n    if(J(x,y,1))return;\n    while(1){swap(x,y);if((a[x].pid==1&&a[y].pid==0)||(!have(x,'K'))){attack(y,x);return;}}//x\u6ca1\u6740,\u6216\u8005x\u662f\u5fe0pig,y\u662f\u4e3bpig\n}inline void Nmrq(int x,int y){//x\u5bf9y\u4f7f\u7528\n    if(!J(x,y,1)&&!have(y,'K')){attack(x,y);upd(x,y,1);}\n}inline void Wjqf(int x,int y){\n    if(!J(x,y,1)&&!have(y,'D')){attack(x,y);upd(x,y,1);}\n}\ninline void work(int x){\n    start(x);int is_K=0;\n    for(int i=a[x].nxt[0];i;i=a[x].nxt[i]){\n        if(a[x].s[i]=='P')P(x,i);\n        if(a[x].s[i]=='K'&&(!is_K||a[x].zgln))if(K(x,i)){is_K++;i=0;}\n        if(a[x].s[i]=='F'){\n\t\t\tif(a[x].pid==2){del(x,i);upd(x,1,0);F(x,1);i=0;}\n\t\t\telse for(int j=a[x].nt;j!=x;j=a[j].nt){int p=f(x,j);if(p==0){del(x,i);upd(x,j,0);F(x,j);i=0;break;}\n\t\t\t}if(a[x].HP<=0)return;\n\t\t}\n        if(a[x].s[i]=='N'){del(x,i);for(int j=a[x].nt;j!=x;j=a[j].nt)Nmrq(x,j);i=0;}\n        if(a[x].s[i]=='W'){del(x,i);for(int j=a[x].nt;j!=x;j=a[j].nt)Wjqf(x,j);i=0;}\n        if(a[x].s[i]=='Z'){a[x].zgln=1;del(x,i);i=0;}\n    }\n}\ninline void slove(){\n    scanf(\"%d%d\",&n,&m);\n    char S[5];int kase;\n    for(int i=1;i<=n;++i){\n        scanf(\"%s\",S+1);kase=0;\n        if(S[1]=='M')a[i].pid=0;else if(S[1]=='Z')a[i].pid=1;else a[i].pid=2;\n        Pig[a[i].pid]++;\n        while(++kase<=4){scanf(\"%s\",S+1);ins(i,S[1]);}\n    }for(int i=1;i<=m;++i){scanf(\"%s\",S+1);s[i]=S[1];}\n    for(int i=1;i<=n;++i){a[i].nt=(i==n?1:i+1);a[i].pr=(i==1?n:i-1);a[i].HP=4;a[i].id=-1;}\n    L=1;a[1].id=0;is_end();\n    for(int i=1;;i=a[i].nt)work(i);\n}\nint main(){slove();return 0;}\n```\n\nsecond:\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;//\u4efb\u4f55\u9526\u56ca\u724c\u5bf9x\u751f\u6548\u524d,\u5224\u65ad\u548cx\u4e00\u8fb9\u7684\u662f\u5426\u6709\u65e0\u61c8,\u5224\u65ad\u548cx\u4e0d\u662f\u4e00\u8fb9\u7684\u662f\u5426\u6709\u65e0\u61c8\u65e0\u61c8\u6389\u65e0\u61c8,dfs\u5224\u65ad\nint n,m,L,len;\nconst int N=15,M=2010;\nchar s[M];//id=-1\u672a\u8868\u660e ,(id=0\u4e3bpig) (id=1 \u5fe0pig) (id=2 \u53cdpig) (id=3\u7c7b\u53cdpid)(\u8868\u660e\u8eab\u4efd)\n//pid:\u7ed9\u5b9a\u8eab\u4efd ,nt\u4e0b\u4e00\u4e2a,pr\u4e0a\u4e00\u4e2apig,cnt:\u724c\u6570 zgln:\u8bf8\u845b\u8fde\u5f29 s:\u724c\n//nxt:\u4e0b\u4e00\u5f20\u724c,pre\u4e0a\u4e00\u5f20\u724c ,end:\u6700\u540e\u4e00\u5f20\u724c\nstruct Pig {\n\tint HP,id,pid,nt,pr,cnt;\n\tbool zgln;\n\tchar s[M];\n\tint nxt[M],pre[M],end;\n} a[N];\nint Pig[3];//p[0]:\u4e3bpig p[1]:\u5fe0pig p[2]:\u53cdpig\ninline void ins(int x,char c) {\n\tint p=++a[x].cnt;    //\u6478\u724c\n\ta[x].nxt[a[x].end]=p;\n\ta[x].pre[p]=a[x].end;\n\ta[x].end=p;\n\ta[x].s[p]=c;\n}\ninline char get() {\n\tif(L<=m)return s[L++];    //\u5f97\u5230\u724c\n\treturn s[m];\n}\ninline void start(int x) {\n\tins(x,get());    //\u56de\u5408\u5f00\u59cb\u6478\u4e24\u5f20\n\tins(x,get());\n}\ninline void del(int x,int pos) {\n\ta[x].nxt[a[x].pre[pos]]=a[x].nxt[pos];    //\u5f03\u7f6e\n\ta[x].pre[a[x].nxt[pos]]=a[x].pre[pos];\n\tif(a[x].end==pos)a[x].end=a[x].pre[pos];\n}\ninline void clear() {\n\ta[1].end=0;    //\u4e3b\u732a\u8bef\u6740 ,\u5f03\u6389\u6240\u6709\u724c\u548czgln\n\ta[1].nxt[0]=0;\n\ta[1].zgln=0;\n}\ninline void end() { //\u7ed3\u675f\n\tif(!Pig[0])printf(\"FP\\n\");\n\telse if(!Pig[2])printf(\"MP\\n\");\n\tfor(int i=1; i<=n; ++i) {\n\t\tif(a[i].HP<=0)printf(\"DEAD\");\n\t\telse {\n\t\t\tfor(int j=a[i].nxt[0]; j; j=a[i].nxt[j])printf(\"%c \",a[i].s[j]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\texit(0);\n}\ninline int f(int x,int y) { //x-->y\u732e\u6bb7\u52e4\u6216\u8005\u8868\u654c\u610f,0\u654c\u610f,1\u6bb7\u52e4,\u6838\u5fc3\u4ee3\u7801\n\tif(a[y].id==-1)return -1;//y\u672a\u660e\u786e\u8eab\u4efd,x\u4e0d\u8f7b\u4e3e\u5984\u52a8\n\tif(a[y].id==3) {\n\t\tif(a[x].pid==0)return 0;    //\u4e3bpig\u5bf9\u7c7b\u53cdpig\u4e5f\u662f\u654c\u610f,\u5176\u4f59\u5bf9\u7c7b\u53cdpid\u4e0d\u8f7b\u4e3e\u5984\u52a8\n\t\telse return -1;\n\t}\n\tif(a[x].pid==0) {\n\t\tif(a[y].id==1||a[y].id==0)return 1;\n\t\telse return 0;\n\t}\n\tif(a[x].pid==1) {\n\t\tif(a[y].id==0||a[y].id==1)return 1;\n\t\telse return 0;\n\t}\n\tif(a[x].pid==2) {\n\t\tif(a[y].id==0||a[y].id==1)return 0;\n\t\telse return 1;\n\t}\n\treturn -1;\n}\ninline void is_end() {\n\tif(Pig[0]&&Pig[2])return;    //\u662f\u5426\u7ed3\u675f,\u4e3bpig,\u6216\u8005\u53cdpig\u6b7b\u4ea1\u5c31\u7b97\u7ed3\u675f\n\tend();\n}\ninline void jl(int x) {\n\tins(x,get());    //\u5956\u52b1\n\tins(x,get());\n\tins(x,get());\n}\ninline void pd(int dead,int killer) {\n\tif(a[dead].pid==2)jl(killer);\n\tif(a[dead].pid==1&&a[killer].pid==0)clear();\n}\ninline void P(int x,int pos) {\n\tif(a[x].HP==4)return;    //\u5403\u6843,\u81ea\u5df1\u7684\u56de\u5408\u80fd\u5403\u5c31\u5403\n\ta[x].HP++;\n\tdel(x,pos);\n}\ninline void is_dead(int x,int y) { //\u6fd2\u6b7b,\u53ef\u4ee5\u5403\u6843\n\tif(a[x].HP>0)return;\n\tfor(int i=a[x].nxt[0]; i; i=a[x].nxt[i]) {\n\t\tif(a[x].s[i]=='P')P(x,i);\n\t\tif(a[x].HP>0)break;\n\t}\n\tif(a[x].HP<=0) {\n\t\ta[a[x].nt].pr=a[x].pr;    //\u6b7b\u4ea1\u5c31\u53bb\u6389\u8fd9\u4e2a\u4eba,\u5148\u5224\u65ad\u662f\u5426\u7ed3\u675f\n\t\ta[a[x].pr].nt=a[x].nt;\n\t\tPig[a[x].pid]--;\n\t\tis_end();\n\t\tpd(x,y);\n\t}\n}\ninline void upd(int x,int y,int v) {\n\tif(a[x].id>=0&&a[x].id<=2)return;//\u5df2\u7ecf\u8df3\u4e86,\u5c31\u8fd4\u56de\n\tif(v==1) {\n\t\tif(a[y].pid==0)a[x].id=3;    //\u5bf9\u4e3bpig\u9020\u6210\u4f24\u5bb3\u53d8\u4e3a\u7c7b\u53cdpig\n\t\treturn;\n\t}\n\ta[x].id=a[x].pid;\n}//x\u5bf9y:v=0:\u4f7f\u7528\u65e0\u61c8,\u6740,\u51b3\u6597,: v=1\u4f7f\u7528\u5357\u86ee,\u4e07\u7bad\ninline void attack(int x,int y) {\n\ta[y].HP--;    //x\u653b\u51fby,\u5224\u65ady\u662f\u5426\u6b7b\u4ea1,\u653b\u51fb\u6765\u6e90\u662fx,\u6fd2\u6b7b\u53ef\u4ee5\u5403\u6843\n\tis_dead(y,x);\n}\ninline bool have(int x,char c) {\n\tfor(int i=a[x].nxt[0]; i; i=a[x].nxt[i])if(a[x].s[i]==c) {\n\t\t\tdel(x,i);    //\u662f\u5426\u6709c\u8fd9\u5f20\u724c,\u6709\u5219\u4e22\n\t\t\treturn 1;\n\t\t}\n\treturn 0;\n}\ninline bool K(int x,int pos) { //\u51b3\u5b9a\u662f\u5426\u5bf9\u4e0b\u4e00\u4e2a\u6253\u6740\u53d6\u51b3\u4e8e\u732e\u6bb7\u52e4\u8fd8\u662f\u8868\u654c\u610f\n\tint y=a[x].nt;\n\tint p=f(x,y);\n\tif(p==-1)return 0;//\u672a\u4f7f\u7528\n\tif(p==0) {\n\t\tdel(x,pos);    //\u8868\u654c\u610f,\u6740\u4e00\u4e0b,\u5bf9\u9762\u6ca1\u6709\u95ea\u5219\u9020\u6210\u4f24\u5bb3\n\t\tupd(x,y,0);\n\t\tif(!have(y,'D'))attack(x,y);\n\t\treturn 1;\n\t}\n\treturn 0; //\u65e0\u8bba\u662f\u5426\u9020\u6210\u4f24\u5bb3\u90fd\u8981\u66f4\u65b0\u4ed6\u7684\u8eab\u4efdid\n}\ninline bool J(int x,int y,int v) {\n\tif(f(x,y)==v&&have(x,'J')) {\n\t\tupd(x,y,0);\n\t\tif(!J(x,y,v^1))return 1;\n\t}\n\tfor(int i=a[x].nt; i!=x; i=a[i].nt) {\n\t\tif(f(i,y)==v&&have(i,'J')) {\n\t\t\tupd(i,y,0);\n\t\t\tif(!J(i,y,v^1))return 1;\n\t\t}\n\t}\n\treturn 0;\n}//\u4ecex\u5f00\u59cb,\u9700\u8981\u7ed9y\u51fa\u4ec0\u4e48,v=0\u8868\u793a\u6211\u662f\u4ed6\u654c\u4eba,\u6211\u8981\u65e0\u61c8\u4ed6\u7684\u65e0\u61c8,v=1\u8868\u793a\u6211\u548c\u4ed6\u662f\u4e00\u8fb9\u7684,\u6211\u8981\u5e2e\u4ed6\u65e0\u61c8\ninline void F(int x,int y) { //x\u5bf9y\u7528\u51b3\u6597,y\u5148\u51fa\n\tif(J(x,y,1))return;\n\twhile(1) {\n\t\tswap(x,y);    //x\u6ca1\u6740,\u6216\u8005x\u662f\u5fe0pig,y\u662f\u4e3bpig\n\t\tif((a[x].pid==1&&a[y].pid==0)||(!have(x,'K'))) {\n\t\t\tattack(y,x);\n\t\t\treturn;\n\t\t}\n\t}\n}\ninline void Nmrq(int x,int y) { //x\u5bf9y\u4f7f\u7528\n\tif(!J(x,y,1)&&!have(y,'K')) {\n\t\tattack(x,y);\n\t\tupd(x,y,1);\n\t}\n}\ninline void Wjqf(int x,int y) {\n\tif(!J(x,y,1)&&!have(y,'D')) {\n\t\tattack(x,y);\n\t\tupd(x,y,1);\n\t}\n}\ninline void work(int x) {\n\tstart(x);\n\tint is_K=0;\n\tfor(int i=a[x].nxt[0]; i; i=a[x].nxt[i]) {\n\t\tif(a[x].s[i]=='P')P(x,i);\n\t\tif(a[x].s[i]=='K'&&(!is_K||a[x].zgln))if(K(x,i)) {\n\t\t\t\tis_K++;\n\t\t\t\ti=0;\n\t\t\t}\n\t\tif(a[x].s[i]=='F') {\n\t\t\tif(a[x].pid==2) {\n\t\t\t\tdel(x,i);\n\t\t\t\tupd(x,1,0);\n\t\t\t\tF(x,1);\n\t\t\t\ti=0;\n\t\t\t} else for(int j=a[x].nt; j!=x; j=a[j].nt) {\n\t\t\t\t\tint p=f(x,j);\n\t\t\t\t\tif(p==0) {\n\t\t\t\t\t\tdel(x,i);\n\t\t\t\t\t\tupd(x,j,0);\n\t\t\t\t\t\tF(x,j);\n\t\t\t\t\t\ti=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tif(a[x].HP<=0)return;\n\t\t}\n\t\tif(a[x].s[i]=='N') {\n\t\t\tdel(x,i);\n\t\t\tfor(int j=a[x].nt; j!=x; j=a[j].nt)Nmrq(x,j);\n\t\t\ti=0;\n\t\t}\n\t\tif(a[x].s[i]=='W') {\n\t\t\tdel(x,i);\n\t\t\tfor(int j=a[x].nt; j!=x; j=a[j].nt)Wjqf(x,j);\n\t\t\ti=0;\n\t\t}\n\t\tif(a[x].s[i]=='Z') {\n\t\t\ta[x].zgln=1;\n\t\t\tdel(x,i);\n\t\t\ti=0;\n\t\t}\n\t}\n}\ninline void slove() {\n\tscanf(\"%d%d\",&n,&m);\n\tchar S[5];\n\tint kase;\n\tfor(int i=1; i<=n; ++i) {\n\t\tscanf(\"%s\",S+1);\n\t\tkase=0;\n\t\tif(S[1]=='M')a[i].pid=0;\n\t\telse if(S[1]=='Z')a[i].pid=1;\n\t\telse a[i].pid=2;\n\t\tPig[a[i].pid]++;\n\t\twhile(++kase<=4) {\n\t\t\tscanf(\"%s\",S+1);\n\t\t\tins(i,S[1]);\n\t\t}\n\t}\n\tfor(int i=1; i<=m; ++i) {\n\t\tscanf(\"%s\",S+1);\n\t\ts[i]=S[1];\n\t}\n\tfor(int i=1; i<=n; ++i) {\n\t\ta[i].nt=(i==n?1:i+1);\n\t\ta[i].pr=(i==1?n:i-1);\n\t\ta[i].HP=4;\n\t\ta[i].id=-1;\n\t}\n\tL=1;\n\ta[1].id=0;\n\tis_end();\n\tfor(int i=1;; i=a[i].nt)work(i);\n}\nint main() {\n\tslove();\n\treturn 0;\n}\n```\n",
        "postTime": 1551767793,
        "uid": 54113,
        "name": "ecnerwaIa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "   \u849f\u84bb\u6211\u548c\u673a\u623foier\u4eec\u5ba3\u5e03\u8981\u572811\u6708\u5e95\u5199\u5b8c\u732a\u56fd\u6740\uff0c\u4e8e\u662f\u572811\u670831\u65e5\u5199\u5b8c\u4e86\uff08\u4f17\u6240\u5468\u77e511\u6708\u81f3\u5c11\u670931\u5929\uff09\u3002\u6211\u7801\u7684\u65f6\u5019\u4e5f\u9047\u5230\u4e86\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u6709\uff1a\n   \n   1. \u4f7f\u7528\u67d0\u4e9b\u724c\u540e\uff0c\u53ef\u80fd\u4f7f\u5b83\u4e4b\u524d\u7684\u624b\u724c\u53d8\u5f97\u53ef\u7528\uff0c\u6240\u4ee5\u4f7f\u7528\u624b\u724c\u540e\uff0c\u8981\u4ece\u5934\u626b\u63cf\u624b\u724c\u3002\n   2. \u51b3\u6597\u53ef\u80fd\u4f1a\u4f7f\u6b63\u5728\u8fdb\u884c\u56de\u5408\u7684\u732a\u6b7b\u4ea1\uff08\u6240\u4ee5\u679c\u7136\u662f\u732a\u5417\u2026\u2026\uff09\uff0c\u6b64\u65f6\u8981\u8d76\u7d27\u8fd4\u56de\uff0c\u4e0d\u80fd\u8ba9\u5df2\u7ecf\u6b7b\u4ea1\u7684\u732a\u7ee7\u7eed\u4f7f\u7528\u624b\u724c\u3002\n   3. \u5fe0\u732a\u9762\u5bf9\u6765\u81ea\u4e3b\u732a\u7684\u51b3\u6597\uff0c\u4f1a\u76f4\u63a5\u81ea\u6b8b\u3002\n   4. \u5bfb\u627e\u6740\u548c\u51b3\u6597\u7b49\u7684\u5bf9\u8c61\uff0c\u8981\u8df3\u8fc7\u5df2\u7ecf\u6b7b\u4ea1\u7684\u732a\u3002\n   5. \u51b3\u6597\u3001\u5357\u732a\u3001\u4e07\u7bad\u7684\u65e0\u61c8\u8be2\u95ee\u662f\u4ece\u51fa\u9526\u56ca\u724c\u7684\u732a\u5f00\u59cb\u7684\u3002\n   \n ###  \u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u70b9\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u724c\u5806\u53ef\u80fd\u88ab\u62bd\u7a7a\u3002\u62bd\u7a7a\u540e\uff0c\u8981\u4e0d\u65ad\u62bd\u724c\u5806\u6700\u540e\u4e00\u5f20\u724c\u3002\u8fd9\u5e94\u8be5\u5c5e\u4e8e\u51fa\u9898\u4eba\u7684\u5931\u8bef\u3002\n###   \u4f5c\u4e3a\u849f\u84bb\uff0c\u8fd9\u4e48\u5927\u7684\u6a21\u62df\u6211\u5199\u4e0d\u4e86\u9762\u5411\u8fc7\u7a0b\uff0c\u53ea\u80fd\u7528\u4e09\u811a\u732b\u7684\u9762\u5411\u5bf9\u8c61\u60f9\u3002\n### \u4ee5\u4e0b\u4e3aAC\u4ee3\u7801\uff0c\u4f9b\u5404\u4f4ddalao\u9119\u89c6QwQ\n   \n \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#define for_i_in_hand for(itr i = hand.begin();i < hand.end();i++)\n#define itr std::vector<card>::iterator\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\n\nstruct card\n{\n\tbool avai;\n\tchar card;\n};\n\nclass Pig\n{\n\tpublic:\n\t\t//\u65b9\u6cd5 \n\t\tvoid\tidentity_set\t(char id);//\u8eab\u4efd\u521d\u59cb\u5316 \n\t\t\n\t\tvoid\tturn_start\t\t();//\u56de\u5408\u5f00\u59cb \n\t\tvoid\tdraw\t\t\t();//\u62bd\u4e00\u5f20\u724c \n\t\tvoid\tact\t\t\t\t();//\u51fa\u724c\u9636\u6bb5 \n\t\t\n\t\tvoid\tuse_card\t\t(itr i,char ch);//\u4f7f\u7528\u5361\u724c \n\t\tbool\tfind_and_use\t(char ch);//\u5728\u624b\u724c\u4e2d\u5bfb\u627e\u5e76\u6253\u51fa\u4e00\u5f20\u724c \n\t\tint\t\tdec_health\t\t();//\u751f\u547d\u503c\u51cf\u5c11 \n\t\tint \tinc_health\t\t();//\u751f\u547d\u503c\u589e\u52a0 \n\t\tvoid\tjump\t\t\t();//\u8df3\u8eab\u4efd \n\t\tvoid\tgo_rebel_like\t();//\u8fdb\u5165\u7c7b\u53cd\u72b6\u6001 \n\t\tvoid\tungo_rebel_like\t();//\u53d6\u6d88\u7c7b\u53cd\u72b6\u6001 \n\t\tvoid\tunequip\t\t\t();//\u5378\u4e0b\u8bf8\u845b\u8fde\u5f29 \n\t\tvoid\thurt\t\t\t(Pig &that);//\u5bf9that\u9020\u6210\u4f24\u5bb3 \n\t\tbool\tclose_to_death\t();//\u8fdb\u5165\u6fd2\u6b7b\u72b6\u6001 \n\t\tvoid\tslay\t\t\t(Pig &that);//\u6740\u6b7bthat\n\t\tvoid\tslain\t\t\t();//\u88ab\u6740\u6b7b \n\t\t\n\t\tbool \tuse_admission\t(char ch);//\u662f\u5426\u53ef\u80fd\u5728\u51fa\u724c\u9636\u6bb5\u4f7f\u7528\u8be5\u5361\u724c \n\t\tint\t\ttry_kill\t\t();//\u5bfb\u627e\u6740\u5bf9\u8c61 \n\t\tvoid\tkill\t\t\t(Pig &that);//\u6740 \n\t\tbool\tkill_respond\t();//\u54cd\u5e94\u6740 \n\t\tint\t\ttry_fight\t\t();//\u5bfb\u627e\u51b3\u6597\u5bf9\u8c61\n\t\tvoid\tfight\t\t\t(Pig &that);//\u51b3\u6597 \n\t\tvoid\tinvasion\t\t();//\u5357\u86ee\u5165\u4fb5 \n\t\tbool\tinvasion_respond();//\u54cd\u5e94\u5357\u86ee\u5165\u4fb5 \n\t\tvoid\tarrows\t\t\t();//\u4e07\u7bad\u9f50\u53d1 \n\t\tbool\tarrows_respond\t();//\u54cd\u5e94\u4e07\u7bad\u9f50\u53d1 \n\t\tvoid\tcrossbow\t\t();//\u88c5\u5907\u8bf8\u845b\u8fde\u5f29 \n\t\tbool\tfirst_watertight_ask\t(Pig &that);//\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\u7b2c\u4e00\u9636\u6bb5 \n\t\tbool\tagainst_watertight_ask\t();//\u65e0\u61c8\u53ef\u51fb\u7684\u5bf9\u6297\u9636\u6bb5 \n\t\t\n\t\t//\u53d8\u91cf \n\t\tint \tnum;//\u5728\u6570\u7ec4\u4e2d\u7684\u7f16\u53f7 \n\t\tstd::vector<card> hand;//\u624b\u724c \n\t\tchar\tidentity;//\u8eab\u4efd \n\t\tint \thealth;//\u5269\u4f59\u751f\u547d\u503c\n\t\t \n\t\tbool \tequipped;//\u662f\u5426\u88c5\u5907\u7740\u8bf8\u845b\u8fde\u5f29 \n\t\tbool \tdead;//\u662f\u5426\u6b7b\u4ea1 \n\t\tbool \tkill_used;//\u672c\u56de\u5408\u662f\u5426\u5df2\u7ecf\u4f7f\u7528\u8fc7\u6740 \n\t\tbool\tjumped;//\u662f\u5426\u5df2\u7ecf\u8df3\u8eab\u4efd \n\t\tbool\trebel_liked;//\u662f\u5426\u5904\u4e8e\u7c7b\u53cd\u72b6\u6001 \n};\n\nclass Input\n{\n\tpublic:\n\t\tvoid\tmain_input();//\u4e3b\u8f93\u5165 \n\t\t\n\t\tvoid\tin_n_and_m();//\u8f93\u5165n\u548cm \n\t\tvoid\tin_id_and_cards();//\u8f93\u5165\u8eab\u4efd\u548c\u8d77\u59cb\u624b\u724c \n\t\tvoid\tin_card_heap();//\u8f93\u5165\u724c\u5806 \n};\n\nint n,m;//n\u8868\u793a\u603b\u732a\u6570\uff0cm\u8868\u793a\u724c\u5806\u7684\u724c\u6570\u91cf \nint main_pig;//\u4e3b\u732a\u7f16\u53f7 \nint anti_num = 0;//\u5f53\u524d\u5269\u4f59\u53cd\u732a\u6570\u91cf \nint heap_top = 1;//\u724c\u5806\u9876 \nbool gameover;//\u662f\u5426\u53ef\u4ee5\u7ed3\u675f\u6e38\u620f \nchar win;//\u80dc\u5229\u65b9 \nchar card_heap[20000];//\u724c\u5806 \nInput In;//Input\u5bf9\u8c61 \nPig\tpig[20];//\u8bb0\u5f55\u5404\u732a \n\nconst bool debug = false;//\u8c03\u8bd5\u5165\u53e3\uff0c\u6539\u4e3a\u771f\u5373\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f \n\nvoid num_set();//\u4ece\u6570\u7ec4\u7f16\u53f7\u5411\u5404\u732anum\u5c5e\u6027\u6620\u5c04 \nvoid heap_copy();//\u590d\u5236\u724c\u5806\u6700\u540e\u4e00\u5f20\u724c \nvoid print();//\u8f93\u51fa\u7ed3\u679c \nvoid initialize();//\u732a\u7684\u521d\u59cb\u5316 \n\nint main()//entrance\n{\n\tIn.main_input();//\u8f93\u5165 \n\tinitialize();\n\tnum_set();\n\theap_copy();\n\tpig[main_pig].jump();//\u4e3b\u732a\u4e00\u5f00\u59cb\u662f\u8df3\u7684 \n\tif(anti_num == 0)//\u7279\u5224\uff1a\u573a\u4e0a\u6ca1\u6709\u53cd\u732a\uff0c\u4e3b\u732a\u65b9\u76f4\u63a5\u80dc\u5229 \n\t{\n\t\twin = 'M';\n\t\tprint();\n\t\treturn 0;\n\t}\n\tregister int i = 0;//\u8f6e\u5230\u7684\u732a \n\twhile(1)//\u4e3b\u5faa\u73af \n\t{\n\t\ti = i % n + 1;\n\t\tif(pig[i].dead) continue;//\u8df3\u8fc7\u6b7b\u4ea1\u7684\u732a \n\t\tif(debug) printf(\"%d's turn started\\n\\n\",i);\n\t\tpig[i].turn_start();//\u56de\u5408\u5f00\u59cb \n\t\tif(gameover)//\u68c0\u6d4b\u6e38\u620f\u662f\u5426\u7ed3\u675f \n\t\t{\n\t\t\tprint();\n\t\t\tbreak;//\u8f93\u51fa\u7ed3\u679c\uff0c\u7a0b\u5e8f\u7ed3\u675f \n\t\t}\n\t}\n\treturn 0;\n}\n\nvoid num_set()\n{\n\tfor(register int i = 1;i <= n;++i) pig[i].num = i;\n}\n\nvoid heap_copy()\n{\n\tregister char ch = card_heap[m];\n\tfor(register int i = m + 1;i <= 5000;i++)\n\t{\n\t\tcard_heap[i] = ch;//\u590d\u5236\u6700\u540e\u4e00\u5f20\u724c \n\t}\n}\n\nvoid print()\n{\n\tif(win == 'M')\n\t{\n\t\tprintf(\"MP\\n\");\n\t}\n\telse\n\t{\n\t\tprintf(\"FP\\n\");\n\t}\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tif(pig[i].dead)\n\t\t{\n\t\t\tprintf(\"DEAD\\n\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tPig s = pig[i];\n\t\t\tfor(itr i = s.hand.begin();i < s.hand.end();i++)\n\t\t\t{\n\t\t\t\tif(i->avai) printf(\"%c \",i->card);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}\n\nvoid initialize()\n{\n\tfor(int i = 1;i <= n;i++)//\u4fe1\u606f\u521d\u59cb\u5316 \n\t{\n\t\tpig[i].health = 4;\n\t\tpig[i].equipped = false;\n\t\tpig[i].dead = false;\n\t\tpig[i].kill_used = false;\n\t\tpig[i].jumped = false;\n\t\tpig[i].rebel_liked = false;\n\t}\n}\n\nvoid Input::main_input()\n{\n\tin_n_and_m();\n\tin_id_and_cards();\n\tin_card_heap();\n}\n\nvoid Input::in_n_and_m()//\n{\n\tscanf(\"%d %d\",&n,&m);\n}\n\nvoid Input::in_id_and_cards()//\n{\n\tchar s[10];\n\tchar ch;\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tif(s[0] == 'M')\n\t\t{\n\t\t\tmain_pig = i;//\u8bb0\u5f55\u4e3b\u732a\u7f16\u53f7 \n\t\t}\n\t\telse if(s[0] == 'F')\n\t\t{\n\t\t\tanti_num++;//\u8bb0\u5f55\u53cd\u8d3c\u6570\u91cf \n\t\t}\n\t\tpig[i].identity_set(s[0]);//\u8eab\u4efd\u521d\u59cb\u5316 \n\t\twhile((ch = getchar()) != '\\n')//\u5bfb\u627e\u4e0b\u4e00\u5f20\u624b\u724c \n\t\t{\n\t\t\tif(ch >= 'A' && ch <= 'Z')\n\t\t\t{\n\t\t\t\tpig[i].hand.push_back(card{true,ch});//\u52a0\u5165\u624b\u724c \n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid Input::in_card_heap()\n{\n\tchar ch;\n\tfor(register int i = 1;i <= m;++i)\n\t{\n\t\twhile( ( ch = getchar() ) < 'A' || ch > 'Z' ) continue;\n\t\tcard_heap[i] = ch;\n\t}\n}\n\n\nvoid Pig::identity_set(char id)\n{\n\tidentity = id;\n}\n\nvoid Pig::turn_start()\n{\n\tdraw();\n\tdraw();//\u62bd\u4e24\u5f20\u724c \n\tif(debug)\n\t{\n\t\tfor(int i = 1;i<=n;i++)\n\t\t{\n\t\t\tif(pig[i].dead)continue;\n\t\t\tprintf(\"%d %c %d:\",pig[i].num,pig[i].identity,pig[i].health);\n\t\t\tPig s = pig[i];\n\t\t\tfor(itr i = s.hand.begin();i < s.hand.end();i++) if(i->avai) printf(\"%c \",i->card);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\tact();//\u51fa\u724c\u9636\u6bb5\u5f00\u59cb \n\tkill_used = false;//\u91cd\u7f6e\u51fa\u6740\u68c0\u6d4b \n\tif(debug) cout<<endl;\n}\n\nvoid Pig::draw()\n{\n\thand.push_back(card{true,card_heap[heap_top++]});//\u52a0\u5165\u4e00\u5f20\u624b\u724c\uff0c\u724c\u5806\u9876\u540e\u79fb \n}\n\nvoid Pig::act()\n{\n\tbool flag=true;\n\twhile(flag)//\u626b\u4e86\u4e00\u904d\u624b\u724c\uff0c\u5982\u679c\u6ca1\u6709\u51fa\u724c\uff0c\u5219\u7ed3\u675f\u51fa\u724c\u9636\u6bb5 \n\t{\n\t\tflag = false;\n\t\tfor(itr i = hand.begin();i != hand.end();i++)\n\t\t{\n\t\t\tif(i->avai&&use_admission(i->card))\n\t\t\t{\n\t\t\t\tuse_card(i,i->card);\n\t\t\t\tif(dead || gameover) return;\n\t\t\t\t//\u6ce8\u610f\uff1a\u8fd9\u53ea\u732a\u6709\u53ef\u80fd\u5728\u51b3\u6597\u4e2d\u81ea\u6740\u8eab\u4ea1\uff0c\u8fd9\u65f6\u4e0d\u80fd\u8ba9\u5b83\u7ee7\u7eed\u51fa\u724c \n\t\t\t\t//\u5982\u679c\u6e38\u620f\u7ed3\u675f\uff0c\u90a3\u4e48\u7acb\u5373\u8fd4\u56de \n\t\t\t\ti = hand.begin() - 1;\n\t\t\t\t//\u4f7f\u7528\u4e00\u5f20\u724c\u540e\uff0c\u524d\u9762\u7684\u724c\u53ef\u80fd\u53d8\u5f97\u53ef\u7528\uff0c\u6b64\u65f6\u9700\u8981\u56de\u5230\u7b2c\u4e00\u5f20\u624b\u724c\u91cd\u65b0\u626b\u63cf\u624b\u724c\n\t\t\t\t//\u4e4b\u6240\u4ee5\u8981-1\uff0c\u662f\u56e0\u4e3a\u5728for\u5faa\u73af\u672b\u5c3ei++ \n\t\t\t\tflag = true;//\u4f7f\u7528\u4e86\u724c \n\t\t\t}\n\t\t}\n\t}\n}\n\nbool Pig::find_and_use(char ch)\n{\n\tfor_i_in_hand\n\t{\n\t\tif(i->card == ch && i->avai)//\u5982\u679c\u662f\u60f3\u8981\u7684\u724c\u800c\u4e14\u6ca1\u51fa\u8fc7 \n\t\t{\n\t\t\ti->avai = false;//\u61d2\u60f0\u5220\u9664\uff0c\u6807\u8bb0\u724c\u5df2\u4f7f\u7528\u8fc7 \n\t\t\tif(debug) cout<<num<<\" used a \"<<ch<<endl; \n\t\t\treturn true;//\u4f7f\u7528\u4e86\u724c\uff0c\u8fd4\u56de\u771f \n\t\t}\n\t}\n\treturn false;//\u627e\u4e0d\u5230\u724c\uff0c\u8fd4\u56de\u5047 \n}\n\nvoid Pig::use_card(itr i,char ch)\n{\n\tint tmp;\n\tswitch(ch)\n\t{\n\t\tcase 'K'://\u6740 \n\t\t\tif(tmp = try_kill())//\u7528tmp\u8bb0\u4e0b\u6740\u7684\u5bf9\u8c61\uff0c\u51b3\u6597\u540c \n\t\t\t{\n\t\t\t\ti->avai = false;\n\t\t\t\tif(debug) printf(\"%d used a kill to %d\\n\",num,tmp);\n\t\t\t\tkill(pig[tmp]);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'P'://\u6843 \n\t\t\ti->avai = false;\n\t\t\tif(debug) printf(\"%d used a peach\\n\",num);\n\t\t\tinc_health();\n\t\t\tbreak;\n\t\tcase 'F':\n\t\t\tif(tmp = try_fight())\n\t\t\t{\n\t\t\t\ti->avai = false;\n\t\t\t\tif(debug) printf(\"%d used a fight to %d\\n\",num,tmp);\n\t\t\t\tfight(pig[tmp]);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'N':\n\t\t\ti->avai = false;\n\t\t\tif(debug) printf(\"%d used a invasion\\n\",num);\n\t\t\tinvasion();\n\t\t\tbreak;\n\t\tcase 'W':\n\t\t\ti->avai = false;\n\t\t\tif(debug) printf(\"%d used a arrows\\n\",num);\n\t\t\tarrows();\n\t\t\tbreak;\n\t\tcase 'Z':\n\t\t\ti->avai = false;\n\t\t\tif(debug) printf(\"%d used a crossbow\\n\",num);\n\t\t\tcrossbow();\n\t}\n}\n\ninline int Pig::dec_health()\n{\n\treturn --health;\n}\n\ninline int Pig::inc_health()\n{\n\treturn ++health;\n}\n\ninline void Pig::jump()\n{\n\tjumped = true;\n}\n\ninline void Pig::go_rebel_like()\n{\n\trebel_liked = true;\n}\n\ninline void Pig::ungo_rebel_like()\n{\n\trebel_liked = false;\n}\n\ninline void Pig::unequip()\n{\n\tequipped = false;\n}\n\ninline void Pig::hurt(Pig &that)\n{\n\tthat.dec_health();//\u751f\u547d\u503c\u51cf\u5c11 \n\tif(debug) printf(\"%d hurts %d,left health %d\\n\",num,that.num,that.health);\n\tif(that.health == 0 && that.close_to_death())//\u6fd2\u6b7b\u68c0\u67e5 \n\t{\n\t\tif(debug) cout<<that.num<<\" died\"<<endl;\n\t\tthis->slay(that);//\u51fb\u6740\u5904\u7406 \n\t}\n}\n\nbool Pig::close_to_death()\n{\n\t//\u627e\u6843 \n\tfor(itr i = hand.begin();i < hand.end();i++)\n\t{\n\t\tif(i->card == 'P' && i->avai)\n\t\t{\n\t\t\ti->avai = false;\n\t\t\tinc_health();\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvoid Pig::slay(Pig &that)\n{\n\tthat.slain();\n\tif(that.identity == 'M')//\u4e3b\u516c\u6b7b\u4ea1\uff0c\u53cd\u8d3c\u80dc\u5229 \n\t{\n\t\twin = 'F';\n\t\tgameover = true;\n\t}\n\telse if(that.identity == 'F')//\u53cd\u8d3c\u6b7b\u4ea1 \n\t{\n\t\tanti_num--;\n\t\tif(anti_num == 0)//\u53cd\u8d3c\u5168\u706d\uff0c\u4e3b\u516c\u80dc\u5229 \n\t\t{\n\t\t\twin = 'M';\n\t\t\tgameover = true;\n\t\t\treturn;//\u80dc\u5229\u540e\u4e0d\u8fdb\u884c\u5956\u52b1\u62bd\u724c \n\t\t}\n\t\tdraw(),draw(),draw();\n\t}\n\telse if(identity  == 'M' && that.identity == 'Z')//\u4e3b\u516c\u6740\u5fe0\u81e3 \n\t{\n\t\tfor(itr i = hand.begin();i < hand.end();i++)\n\t\t{\n\t\t\ti->avai = false;\n\t\t}\n\t\tunequip();\n\t}\n}\n\ninline void Pig::slain()//\n{\n\tdead = true;\n}\n\n bool Pig::use_admission(char ch)//\n{\n\tif(ch == 'P' && health < 4) return true;//\u751f\u547d\u503c\u4e0d\u6ee1\u65f6\u624d\u5141\u8bb8\u4f7f\u7528\u6843 \n\telse if((ch == 'K' && try_kill()) || (ch == 'F' && try_fight()) || ch == 'N' || ch == 'W' || ch == 'Z') return true;//\u4f7f\u7528\u6740\u548c\u51b3\u6597\u5fc5\u987b\u6709\u5bf9\u8c61 \n\treturn false;\n}\n\nint Pig::try_kill()\n{\n\t//\u8fd4\u56de\u503c\u4e3a0\uff0c\u8868\u793a\u65e0\u732a\u53ef\u6740\u3002\u8fd4\u56de\u503c\u4e0d\u4e3a0\uff0c\u5373\u4e3a\u88ab\u6307\u5b9a\u4e3a\u6740\u7684\u5bf9\u8c61\u7684\u732a\u7684\u7f16\u53f7 \n\tif(kill_used && !equipped) return 0;//\u672c\u56de\u5408\u4e0d\u5f97\u518d\u51fa\u6740 \n\tif(identity == 'M')//\u4e3b\u732a\u6740\u732a \n\t{\n\t\tfor(int i = num % n + 1;i != num;i = i % n + 1)\n\t\t{\n\t\t\tif(pig[i].dead) continue;//\u8df3\u8fc7\u6b7b\u4ea1\u732a\uff0c\u5bfb\u627e\u9006\u65f6\u9488\u7b2c\u4e00\u53ea\u732a\uff0c\u4e0b\u540c \n\t\t\tif(pig[i].rebel_liked || (pig[i].identity == 'F' && pig[i].jumped))//\u68c0\u6d4b\u4e0b\u4e00\u53ea\u732a\u662f\u5426\u4e3a\u7c7b\u53cd\u732a\u6216\u53cd\u732a \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\telse//\u4e0d\u662f\uff0c\u4e0d\u6740 \n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\telse if(identity == 'Z')//\u5fe0\u732a\u6740\u732a \n\t{\n\t\tfor(int i = num % n + 1;i != num;i = i % n + 1)\n\t\t{\n\t\t\tif(pig[i].dead) continue;\n\t\t\tif(pig[i].identity == 'F' && pig[i].jumped)//\u9700\u6c42\u53cd\u732a \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\telse//\u53cd\u732a\u6740\u732a \n\t{\n\t\tint i;\n\t\tfor(i = num % n + 1;i != num;i = i % n + 1)\n\t\t{\n\t\t\tif(pig[i].dead) continue;\n\t\t\tif(pig[i].identity != 'F' && pig[i].jumped)//\u9700\u6c42\u53cd\u732a \n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void Pig::kill(Pig &that)\n{\n\tjump();//\u6740\u5fc5\u7136\u8df3\u8eab\u4efd \n\tungo_rebel_like();//\u6740\u5fc5\u7136\u8131\u79bb\u7c7b\u53cd\u72b6\u6001 \n\tkill_used = true;//\u672c\u56de\u5408\u4f7f\u7528\u4e86\u6740 \n\tif(!that.kill_respond())//\u54cd\u5e94\u4e3a\u5047\uff0c\u8bf4\u660e\u65e0\u95ea\u53ef\u51fa \n\t{\n\t\thurt(that); \n\t}\n}\n\ninline bool Pig::kill_respond()\n{\n\treturn find_and_use('D');//\u5728\u624b\u724c\u4e2d\u5bfb\u627e\u95ea\u6765\u62b5\u6d88\u6740 \n}\n\nint Pig::try_fight()\n{\n\tif(identity == 'M')\n\t{\n\t\tfor(int i = num % n + 1;i != num;i = i % n + 1)\n\t\t{\n\t\t\tif(pig[i].dead) continue;\n\t\t\tif(pig[i].rebel_liked || (pig[i].identity == 'F' && pig[i].jumped))\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\telse if(identity == 'Z')\n\t{\n\t\tfor(int i = num % n + 1;i != num;i = i % n + 1)\n\t\t{\n\t\t\tif(pig[i].dead) continue;\n\t\t\tif(pig[i].identity == 'F' && pig[i].jumped)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\telse//\u53cd\u732a\u5fc5\u7136\u5bf9\u4e3b\u732a\u51b3\u6597 \n\t{\n\t\treturn main_pig;\n\t}\n\treturn 0;\n}\n\nvoid Pig::fight(Pig &that)\n{\n\tjump();\n\tungo_rebel_like();\n\tif(first_watertight_ask(that)) return;//\u4e3a\u5bf9\u65b9\u8be2\u95ee\u65e0\u61c8\u53ef\u51fb \n\tif(identity == 'M' && that.identity == 'Z')//\u4e3b\u732a\u51b3\u6597\u5fe0\u732a\uff0c\u5fe0\u732a\u5fc5\u7136\u653e\u5f03 \n\t{\n\t\thurt(that);\n\t\treturn;\n\t}\n\tint hurted;//\u8bb0\u5f55\u88ab\u6740\u8005 \n\twhile(1)//\u76f4\u5230\u4e00\u65b9\u65e0\u6740\u624d\u8df3\u51fa\u5faa\u73af \n\t{\n\t\tif(!that.find_and_use('K'))\n\t\t{\n\t\t\thurted = 2;\n\t\t\tbreak;\n\t\t}\n\t\tif(!find_and_use('K'))\n\t\t{\n\t\t\thurted = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(hurted == 1)\n\t{\n\t\tthat.hurt(*this);\n\t}\n\telse\n\t{\n\t\thurt(that);\n\t}\n}\n\nvoid Pig::invasion()\n{\n\tfor(int i = num % n + 1;i != num;i = i % n + 1)\n\t{\n\t\tif(pig[i].dead) continue;\n\t\tif(debug) cout<<\"invasion->\"<<i<<endl;\n\t\tif(first_watertight_ask(pig[i])) continue;\n\t\tif(!pig[i].invasion_respond())\n\t\t{\n\t\t\thurt(pig[i]);\n\t\t\tif(gameover) return;\n\t\t\tif(pig[i].identity == 'M' && !jumped)//\u7c7b\u53cd\u732a\u5224\u5b9a \n\t\t\t{\n\t\t\t\tgo_rebel_like();\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline bool Pig::invasion_respond()\n{\n\treturn find_and_use('K');\n}\n\nvoid Pig::arrows()\n{\n\tfor(int i = num % n + 1;i != num;i = i % n + 1)\n\t{\n\t\tif(pig[i].dead) continue;\n\t\tif(debug) cout<<\"arrows->\"<<i<<endl;\n\t\tif(first_watertight_ask(pig[i])) continue;\n\t\tif(!pig[i].arrows_respond())\n\t\t{\n\t\t\thurt(pig[i]);\n\t\t\tif(gameover) return;\n\t\t\tif(pig[i].identity == 'M' && !jumped)\n\t\t\t{\n\t\t\t\tgo_rebel_like();\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline bool Pig::arrows_respond()\n{\n\treturn find_and_use('D');\n}\n\ninline void Pig::crossbow()\n{\n\tequipped = true;\n}\n\nbool Pig::first_watertight_ask(Pig &that)\n{\n\tif(!that.jumped) return false;//\u65e0\u732a\uff08\u6ce8\u610f\uff1a\u5305\u62ec\u5b83\u81ea\u5df1\uff09\u4e3a\u672a\u8df3\u8005\u8fdb\u884c\u65e0\u61c8\u53ef\u51fb \n\tbool flag = true;\n\tfor(int i = num;i != num || flag;i = i % n + 1)\n\t{ \n\t\tflag = false;\n\t\tif(pig[i].dead) continue;\n\t\tif(that.identity == 'M' && pig[i].identity == 'F') continue;\n\t\tif(that.identity == 'Z' && pig[i].identity == 'F') continue;\n\t\tif(that.identity == 'F' && pig[i].identity == 'Z') continue;\n\t\tif(that.identity == 'F' && pig[i].identity == 'M') continue;//\u5bfb\u627e\u540c\u52bf\u529b \n\t\tif(pig[i].find_and_use('J'))\n\t\t{\n\t\t\tpig[i].jump();\n\t\t\treturn !pig[i].against_watertight_ask();//\u5bf9\u6297\u5f00\u59cb \n\t\t}\n\t}\n\treturn false;\n}\n\nbool Pig::against_watertight_ask()\n{\n\tfor(int i = num % n + 1;i != num;i = i % n + 1)\n\t{\n\t\tif(pig[i].dead) continue;\n\t\tif(identity == 'M' && pig[i].identity == 'Z') continue;\n\t\tif(identity == 'Z' && pig[i].identity == 'Z') continue;\n\t\tif(identity == 'F' && pig[i].identity == 'F') continue;\n\t\tif(identity == 'Z' && pig[i].identity == 'M') continue;//\u5bfb\u627e\u5f02\u52bf\u529b \n\t\tif(pig[i].find_and_use('J'))\n\t\t{\n\t\t\tpig[i].jump();\n\t\t\treturn !pig[i].against_watertight_ask();\n\t\t}\n\t}\n\treturn false;\n}\n```",
        "postTime": 1543685307,
        "uid": 90600,
        "name": "\u5386\u53f2\u7684\u884c\u7a0b",
        "ccfLevel": 0,
        "title": "P2482 [SDOI2010]\u732a\u56fd\u6740 \u9898\u89e3"
    },
    {
        "content": "## [Pig Country Kill](https://www.luogu.com.cn/problem/P2482)\n\n\u5f88\u53e4\u602a\u7684\u7ffb\u8bd1\uff0c\u4e0d\u8fc7\u5b83\u786e\u5b9e\u53eb\u732a(Pig)\u56fd(Country)\u6740(Kill)\u3002\n\n\u6211\u4eec\u6765\u597d\u597d\u6574\u7406\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\u3002\u9898\u9762\u867d\u8f83\u957f\uff0c\u4f46\u5185\u5bb9\u57fa\u672c\u6e05\u6670\uff0c\u53ea\u662f\u6709\u90e8\u5206\u5f88Pig\u7684\u64cd\u4f5c\u90e8\u5206\uff0c\u5f88\u5bb9\u6613\u8ba9\u7b2c\u4e00\u6b21\u770b\u89c1\u8fd9\u9053\u9898\u76ee\u7684\u4eba\u767e\u601d\u4e0d\u5f97\u5176\u89e3\u3002\n\n\u5148\u6574\u7406\u4e00\u4e0b\u8fd9\u9053\u957f\u957f\u7684\u9898\u9762\u3002\n\n------\n\n### First\uff1a\u4eba\u7269\n\n\u56db\u4f4d\u73a9\u5bb6\uff0c\u521d\u59cb\u56db\u5f20\u624b\u724c\uff0c\u8840\u91cf\u4e0a\u9650$4$\uff0c\u521d\u59cb\u8840\u91cf$4$\uff0c\u4f1a\u544a\u8bc9\u4f60\u6574\u4e2a\u724c\u5806\u7684\u724c\uff0c\u6bcf\u4f4d\u73a9\u5bb6\u6bcf\u4e2a\u56de\u5408\u4ece**\u724c\u5806\u9876\u90e8**\u62bd\u8d70\u4e24\u5f20\u724c\uff0c\u653e\u5728\u81ea\u5df1\u624b\u724c\u7684**\u53f3\u4fa7**\u3002\u4eba\u7269\u5206\u4e3b\u732a\uff0c\u5fe0\u732a\uff0c\u548c\u53cd\u732a\uff0c\u4e3b\u732a\u53ea\u6709\u4e00\u53ea\uff0c\u53cd\u732a\u548c\u5fe0\u732a\u53ef\u4ee5\u6709\u591a\u53ea\uff0c**\u53cd\u732a\u5168\u6b7b\u4e3b\u732a\u83b7\u80dc\uff0c\u4e3b\u732a\u6b7b\u4ea1\u53cd\u732a\u83b7\u80dc**\u3002\n\n------------\n\n### Second\uff1a\u5173\u4e8e\u51fa\u724c\n\n\u4ece\u4e3b\u732a\u5f00\u59cb\u9006\u65f6\u9488\u65cb\u8f6c\uff0c\u5c31\u662f\u6cbf\u5e8f\u53f7\u4e3a$1$ $2$ $3$ $...$ $n$\u7684\u987a\u5e8f\u4f9d\u6b21\u51fa\u724c\u3002\u6bcf\u5934\u732a\u5728\u51fa\u724c\u7684\u65f6\u5019\u90fd\u4f1a\u4ece\u5de6\u5f80\u53f3\u6328\u4e2a\u5224\u65ad\u6bcf\u5f20\u724c\u662f\u5426\u53ef\u7528\uff0c\u5c06\u53ef\u7528\u7684\u724c\u76f4\u63a5\u7528\u6389\u3002\u724c\u5206\u4e3a$P$(\u6843)\uff0c$K$(\u6740)\uff0c$D$(\u95ea)\u548c\u9526\u56ca\u724c$F$(\u51b3\u6597)\uff0c$N$(\u5357\u732a\u5165\u4fb5)\uff0c$W$(\u4e07\u7bad\u9f50\u53d1)\uff0c$J$(\u65e0\u61c8\u53ef\u51fb)\u548c\u88c5\u5907\u724c$Z$(\u732a\u54e5\u8fde\u5f29)\u3002\u5177\u4f53\u64cd\u4f5c\u4f1a\u5728\u4e0b\u9762\u8d34\u4ee3\u7801\u7684\u5730\u65b9\u8bf4\u660e\u3002\n\n------------\n\n### Third\uff1a\u732a\u7684\u7279\u6027\n\n\u6709\u5357\u732a\u5165\u4fb5\u548c\u4e07\u7bad\u9f50\u53d1\u4e00\u5b9a\u7528\uff0c\u6709\u6843\u4e14\u751f\u547d\u503c\u6ca1\u6ee1\u4e00\u5b9a\u5403\uff0c\u6709\u732a\u54e5\u8fde\u5f29\u4e00\u5b9a\u88c5\uff0c\u53d7\u5230\u6740\uff0c\u5357\u732a\u5165\u4fb5\uff0c\u4e07\u7bad\u9f50\u53d1\u53ef\u4ee5\u7528\u95ea\uff0c\u6740\uff0c\u95ea\u62b5\u6d88\u4e00\u5b9a\u62b5\u6d88\u3002\n\n------------\n\n### Forth\uff1a\u9ad8\u7ea7\u64cd\u4f5c\n\n\u8df3\u5fe0\u548c\u8df3\u53cd\uff0c\u5373\u8868\u660e\u81ea\u5df1\u662f\u5fe0\u732a\u6216\u662f\u53cd\u732a\uff0c\u4e3b\u732a\u5f00\u5c40\u76f4\u63a5\u8df3\uff0c\u5fe0\u732a\u53ea\u4f1a\u8df3\u5fe0\uff0c\u53cd\u732a\u53ea\u4f1a\u8df3\u53cd\u3002\u5df2\u7ecf\u8df3\uff08\u540e\u9762\u6211\u4eec\u5c06\u8df3\u5fe0\u548c\u8df3\u53cd\u7edf\u79f0\u4e3a\u8df3\uff0c\u56e0\u4e3a\u5fe0\u732a\u4e0d\u4f1a\u8df3\u53cd\uff0c\u53cd\u732a\u4e0d\u4f1a\u8df3\u5fe0\uff09\u4e86\u7684\u732a\u53ea\u4f1a\u5bf9\u540c\u6837\u8df3\u4e86\u7684\u540c\u7c7b\u732e\u6bb7\u52e4\uff0c\u540c\u65f6\u5bf9\u8df3\u4e86\u7684\u654c\u732a\u8868\u654c\u610f\u3002\u8df3\u53cd\u732a\u540c\u65f6\u4f1a\u5bf9\u4e3b\u732a\u8868\u654c\u610f\uff0c\u56e0\u4e3a\u4e3b\u732a\u548c\u5fe0\u732a\u662f\u7edf\u4e00\u9635\u8425\u3002\n\n------------\n\n### Fifth\uff1a\u732e\u6bb7\u52e4\u548c\u8868\u654c\u610f\n\n\u732aA\u5bf9\u732aB\u4f7f\u7528\u4e86\u6740\u6216\u662f\u51b3\u6597\uff0c\u53eb\u4f5c\u732a$A$\u5bf9\u732a$B$\u8868\u654c\u610f\u3002\u732a$A$\u7528\u65e0\u61c8\u53ef\u51fb\u5e2e\u732a$B$\u62b5\u6321\u4f4f\u653b\u51fb\u6027\u9526\u56ca\u724c\uff0c\u53eb\u4f5c\u732a$A$\u5bf9\u732a$B$\u732e\u6bb7\u52e4\u3002\u732a$C$\u5bf9\u732a$B$\u8868\u654c\u610f\uff0c\u88ab\u732a$A$\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6321\u4f4f\uff0c\u53eb\u4f5c\u732a$A$\u5bf9\u732a$B$\u5148\u6bb7\u52e4\u3002\u732a$C$\u5bf9\u732a$B$\u732e\u6bb7\u52e4\uff0c\u88ab\u732a$A$\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\uff0c\u53eb\u4f5c\u732a$A$\u5bf9\u732a$B$\u8868\u654c\u610f\u3002\n\n------------\n\n### Sixth\uff1a\u67d0\u4e9b\u732a\u7684\u7279\u6027\n\n\u4e3b\u732a\u4f1a\u7aed\u529b\u4fdd\u62a4\u81ea\u5df1\uff0c\u4f1a\u5bf9\u8df3\u5fe0\u732a\u732e\u6bb7\u52e4\uff0c\u5bf9\u8df3\u53cd\u732a\u8868\u654c\u610f\u3002\u6709\u201c\u7c7b\u53cd\u732a\u201d\u4e00\u6982\u5ff5\uff0c\u6240\u6709\u5bf9\u4ed6\u4ea7\u751f\u4f24\u5bb3\u7684\u732a\u90fd\u662f\u201c\u7c7b\u53cd\u732a\u201d\uff08\u624d\u6709\u4e86\u6837\u4f8b\u4e2d\u7684~~\u7f8e\u597d~~\u7ed3\u5c40\uff09\uff0c**\u4e3b\u732a\u540c\u65f6\u4f1a\u5bf9\u7c7b\u53cd\u732a\u8868\u654c\u610f**\uff1b\u5bf9\u5fe0\u732a\u6765\u8bf4\uff0c\u5b83\u4f1a\u5bf9\u8df3\u53cd\u732a\uff08**\u6ca1\u6709\u7c7b\u53cd\u732a**\uff09\u8868\u654c\u610f\uff0c**\u89d2\u6597\u65f6\u5982\u679c\u5bf9\u65b9\u662f\u4e3b\u732a\uff0c\u90a3\u4e48\u4e0d\u4f1a\u51fa\u6740\uff0c\u4f1a\u81ea\u613f\u6263\u8840\uff0c\u5373\u4f7f\u81ea\u5df1\u4f1a\u6b7b**\uff0c\u4f1a\u5bf9\u4e3b\u732a\u548c\u5df2\u7ecf\u8df3\u5fe0\u7684\u732a\u732e\u6bb7\u52e4\uff1b\u5bf9\u53cd\u732a\u6765\u8bf4\uff0c\u5982\u679c\u80fd\u6740\u5230\u4e3b\u732a\uff0c\u4e00\u5b9a\u5bf9\u4e3b\u732a\u8868\u654c\u610f\uff08*\u51b3\u6597\u4e00\u5b9a\u6253\u4e3b\u732a*\uff09\uff0c\u5982\u679c\u6740\u4e0d\u5230\uff0c\u5bf9\u8df3\u5fe0\u732a\u8868\u654c\u610f\uff0c\u5bf9\u8df3\u53cd\u732a\u4e00\u5b9a\u732e\u6bb7\u52e4\u3002\n\n\u4e0a\u9762\u7684\u60c5\u51b5\u5982\u679c\u53ef\u4ee5\u540c\u65f6\u6709\u591a\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u8868\u654c\u610f\u6216\u732e\u6bb7\u52e4\uff0c\u9009\u53d6\u9006\u65f6\u9488\u627e\u5230\u7684\u7b2c\u4e00\u4f4d\u3002**\u4e14\u5982\u679c\u80fd\u732e\u6bb7\u52e4\u6216\u8868\u654c\u610f\uff0c\u4e00\u5b9a\u505a**\u3002\n\n------------\n\n### Seventh\uff1a\u5176\u4ed6\n\n\u5982\u679c\u4e3b\u732a\u6b7b\u4ea1\uff0c\u6e38\u620f\u7ed3\u675f\u3002\u5982\u679c\u4e3b\u732a\u6740\u6b7b\u4e86\u5fe0\u732a\uff0c\u4e3b\u732a\u6240\u6709\u7684\u624b\u724c\uff08\u5305\u62ec\u88c5\u5907\uff09\u5168\u90e8\u5f03\u7f6e\u3002\u5982\u679c\u53cd\u732a\u5168\u90e8\u6b7b\u4ea1\uff0c\u6e38\u620f\u7ed3\u675f\u3002\u53cd\u732a\u6b7b\u4ea1\u540e\uff0c\u6740\u4ed6\u7684\u732a\u4ece\u724c\u5806\u5904\u6478\u4e09\u5f20\u724c\uff08*\u5373\u4f7f\u4ed6\u662f\u53cd\u732a*\uff09\u3002**\u5982\u679c\u6e38\u620f\u7ed3\u675f\uff0c\u90a3\u4e48\u6e38\u620f\u76f4\u63a5\u5728\u6b64\u65f6\u505c\u6b62\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u505a\u7684\u6240\u6709\u4e8b\u60c5\u90fd\u88ab\u622a\u6b62**\u3002\u6740\u53ea\u80fd\u6253\u5230\u81ea\u5df1\u6b63\u540e\u9762\u7684\u90a3\u4e00\u5934\u732a\uff0c\u51b3\u6597\u53ef\u4ee5\u968f\u4fbf\u51b3\u6597\u3002\u4e07\u7bad\u9f50\u53d1\u548c\u5357\u732a\u5165\u4fb5\u5bf9\u9664\u81ea\u5df1\u4ee5\u5916\u7684\u6240\u6709\u4eba\u987a\u65f6\u9488\u4f7f\u7528\u3002\u65e0\u61c8\u53ef\u51fb\u53ef\u4ee5\u5bf9\u4efb\u4f55\u4eba\u4f7f\u7528\uff0c\u65e0\u61c8\u53ef\u51fb\u53ef\u4ee5\u4f7f\u65e0\u61c8\u53ef\u51fb\u65e0\u6548\uff0c\u53ef\u4ee5\u4f7f\u51b3\u6597\u62a5\u5e9f\uff08**\u4e0d\u4f7f\u4efb\u4f55\u4e00\u65b9\u53d7\u5230\u4f24\u5bb3**\uff09\u3002\u5927\u90e8\u5206\u624b\u724c\u65e0\u6cd5\u5728\u975e\u81ea\u5df1\u7684\u56de\u5408\u4f7f\u7528\uff0c\u5728\u81ea\u5df1\u6fd2\u6b7b\u65f6\uff08\u8840\u91cf\u4e3a$0$\uff09\u53ef\u4ee5\u4f7f\u7528\u6843\uff08**\u81ea\u5df1\u7684**\uff09\uff0c\u5728\u81ea\u5df1\u7684\u732e\u6bb7\u52e4\u5bf9\u8c61\u88ab\u8868\u654c\u610f\u65f6\u53ef\u4ee5\u51fa\u65e0\u61c8\u53ef\u51fb\uff0c\u5728\u81ea\u5df1\u7684\u8868\u654c\u610f\u5bf9\u8c61\u88ab\u732e\u6bb7\u52e4\u65f6\u53ef\u4ee5\u51fa\u65e0\u61c8\u53ef\u51fb\u3002**\u6ce8\u610f\u6709\u7684\u732a\u6b7b\u53bb\u540e\u4f1a\u4f7f\u4e00\u4e9b\u732a\u4e4b\u95f4\u7684\u8ddd\u79bb\u4ea7\u751f\u53d8\u5316**\u3002\n\n\u6e38\u620f\u5185\u5bb9\u5dee\u4e0d\u591a\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u5982\u679c\u770b\u4e0d\u61c2\uff0c\u591a\u770b\u51e0\u904d\u4e5f\u80fd\u7406\u89e3\uff0c\u5982\u679c\u8fd8\u662f\u96be\u4ee5\u7406\u89e3\u7684\u8bdd\uff0c\u53ef\u4ee5\u5f80\u4e0b\u770b\u672c\u4eba\u7684AC\u4ee3\u7801\u4ee5\u53ca\u89e3\u91ca\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u52a0\u6df1\u5bf9\u672c\u9898\u7684\u7406\u89e3\u3002\n\n------\n\n## \u4ee3\u7801\n\n### \u5b9a\u4e49\n\n```cpp\n#include <iostream>\n#include <fstream>\n#include <vector>\n#include <cstdlib> \n//\u5934\u6587\u4ef6 \n\nusing std::ios;\n//\u7528using namespace\u5c31\u4e0d\u7528\u8fd9\u4e2a\u4e86 \n\n//\u4ee5\u4e0b\u5b9a\u4e49\u867d\u590d\u6742\uff0c\u4f46\u662f\u65b9\u4fbf\u5728\u7a0b\u5e8f\u4e2d\u68b3\u7406\u601d\u8def\uff0c\u8ba9\u6211\u4eec\u4e0d\u6613\u6df7\u6dc6true\u548cfalse\u7684\u5173\u7cfb \n#define CANNOT_USE_THIS_CARD      true           //\u4e0d\u80fd\u4f7f\u7528\u8fd9\u5f20\u724c \n#define CAN_USE_THIS_CARD         false          //\u53ef\u4ee5\u4f7f\u7528\u8fd9\u5f20\u724c \n#define THIS_PIG_IS_DEAD          true           //\u8fd9\u5934\u732a\u6b7b\u4e86 \n#define THIS_PIG_IS_NOT_DEAD      false          //\u8fd9\u5934\u732a\u8fd8\u6ca1\u6b7b \n#define THIS_PIG_IS_JUMP          true           //\u8fd9\u5934\u732a\u5df2\u7ecf\u8df3\u4e86 \n#define THIS_PIG_IS_NOT_JUMP      false          //\u8fd9\u5934\u732a\u8fd8\u6ca1\u6709\u8df3 \n#define THIS_PIG_LIKE_BAD         true           //\u8fd9\u5934\u732a\u7c7b\u53cd \n#define THIS_PIG_DO_NOT_LIKE_BAD  false          //\u8fd9\u5934\u732a\u4e0d\u7c7b\u53cd \n#define CROSSBOW_ON               true           //\u88c5\u5907\u732a\u54e5\u8fde\u5f29 \n#define CROSSBOW_DOWN             false          //\u6ca1\u6709\u88c5\u5907\u732a\u54e5\u8fde\u5f29 \n#define THIS_TURN_USED_KILL       true           //\u8fd9\u4e00\u56de\u5408\u5df2\u7ecf\u4f7f\u7528\u6740 \n#define THIS_TURN_DO_NOT_USE_KILL false          //\u8fd9\u4e00\u56de\u5408\u8fd8\u6ca1\u6709\u4f7f\u7528\u8fc7\u6740\n\nstruct card                                          //\u5bf9\u6bcf\u4e00\u5f20\u5361\u724c\u5236\u9020\u7684\u7ed3\u6784\u4f53 \n{\n    char                    which                   ;//\u724c\u7684\u79cd\u7c7b\n    bool                    use                     ;//\u724c\u662f\u5426\u5df2\u7528\n};\n\ntypedef std::vector<card>::iterator myit;            //\u8fd9\u662f\u724c\u5806\u7684\u6307\u9488\u7c7b\u578b \n\nclass pig                                            //\u5bf9\u6bcf\u5934\u732a\u4f7f\u7528\u7684\u7c7b \n{\nprivate:                                             //\u79c1\u6709 \n    int                     hp                      ;//\u751f\u547d\u503c \n    bool                    use_kill                ;//\u8fd9\u4e2a\u56de\u5408\n    bool                    crossbow                ;//\u662f\u5426\u6709\u88c5\u732a\u54e5\u8fde\u5f29 \n    bool                    jumped                  ;//\u662f\u5426\u5df2\u8df3\n    bool                    like_bad                ;//\u662f\u5426\u7c7b\u53cd\n    void                    die         (int)       ;//\u6b7b\u6389\u4e86\n    void                    clear       (void)      ;//\u6e05\u7a7a \n    void                    del         (myit&)     ;//\u5220\u9664\u67d0\u8fed\u4ee3\u5668\u6307\u5411\u7684\u73a9\u610f\n    myit                    find        (char)      ;//\u627e\u67d0\u5f20\u724c\n    void                    cut         (void)      ;//\u62ff\u4e00\u5f20\u724c\n    void                    use         (card&)     ;//\u7528\u6389\u67d0\u5f20\u724c\n    void                    hurt        (int)       ;//\u53d7\u5230\u4f24\u5bb3\n    bool                    canuse      (char)      ;//\u53ef\u4ee5\u4f7f\u7528\u8fd9\u5f20\u724c\n    int                     find_K      (void)      ;//\u627e\u6740\u7684\u5bf9\u8c61\n    int                     find_F      (void)      ;//\u627e\u4eba\u51b3\u6597\n    bool                    K_respond   (void)      ;//\u53cd\u5e94\u6740\n    bool                    N_respond   (void)      ;//\u53cd\u5e94\u5357\u732a\u5165\u4fb5\n    bool                    W_respond   (void)      ;//\u53cd\u5e94\u4e07\u7bad\u9f50\u53d1\n    bool                    ask_J       (int)       ;//\u8be2\u95ee\u662f\u5426\u51fa\u65e0\u61c8\u53ef\u51fb \n    bool                    back_J      (int)       ;//\u53cd\u5e94\u65e0\u61c8\u53ef\u51fb \npublic:                                              //\u516c\u5171 \n                            pig         (void)      ;//\u6790\u6784\u51fd\u6570 \n    int                     num                     ;//\u5e8f\u53f7\n    bool                    dead                    ;//\u6b7b\u6ca1\u6b7b\n    std::string             name                    ;//\u8eab\u4efd\n    std::vector<card>       cards                   ;//\u624b\u724c\n    void                    myturn      (void)      ;//\u5230\u6211\u7684\u56de\u5408\u4e86\n    void                    jump        (void)      ;//\u8df3\n    void                    K           (int)       ;//\u6740\n    void                    F           (int)       ;//\u51b3\u6597\n    void                    N           (void)      ;//\u5357\u732a\u5165\u4fb5\n    void                    W           (void)      ;//\u4e07\u7bad\u9f50\u53d1 \n};\n\nvoid gameover(std::string);//\u6e38\u620f\u7ed3\u675f \n\nint n,m;//\u732a\u5934\u6570\u91cf\u548c\u724c\u5806\u6df1\u5ea6\nint FP;//\u53cd\u732a\u6570\u91cf \ncard stack[2005];//\u724c\u5806\uff08\u4e4b\u524d\u60f3\u5199\u6808\u53d1\u73b0\u4e0d\u7528\u90a3\u4e48\u505a\uff09 \npig member[15];//\u6bcf\u5934\u732a \nint top=1;//\u724c\u5806\u6307\u9488 \n```\n\n\u5b9a\u4e49\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u53ea\u8981\u5bf9\u7740\u4e0a\u9762\u7684\u5b9a\u4e49\u5b9e\u73b0\u6bcf\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n*\u867d\u7136\u8fd9\u91cc\u7684\u5b8f\u5b9a\u4e49\u540d\u79f0\u975e\u5e38\u957f\uff0c\u4f46\u662f\u5728\u4ee5\u4e0b\u7684\u4ee3\u7801\u4e2d\u5c31\u53ef\u4ee5\u5c06\u96be\u4ee5\u5206\u8fa8\u7684$true$ & $false$\u7528\u6613\u4e8e\u7406\u89e3\u7684\u6807\u8bc6\u7b26\u4ee3\u66ff\uff0c\u4f7f\u4e0b\u6587\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\uff0cDebug\u65f6\u66f4\u52a0\u65b9\u4fbf*\n\n-----\n\n### \u4e3b\u51fd\u6570\n\n```cpp\nint main()\n{\n    ios::sync_with_stdio(false);//\u6d41\u4f18\u5316 \n    cin>>n>>m;//\u8f93\u5165 \n    for(register int i=1;i<=n;i++)\n    {\n        cin>>member[i].name;//\u8f93\u5165\u732a\u5934\u540d\u5b57 \n        member[i].num=i;//\u732a\u5934\u5e8f\u53f7 \n        if(member[i].name==\"FP\") FP++;//\u53cd\u732a\u6570\u91cf \n        for(register int j=1;j<=4;j++)\n        {\n            card c;\n            cin>>c.which;//\u6bcf\u5f20\u624b\u724c \n            c.use=CAN_USE_THIS_CARD;//\u53ef\u4ee5\u7528\n            member[i].cards.push_back(c);//\u624b\u724c\u653e\u7f6e\n        }\n    }\n    for(top=1;top<=m;top++)\n    {//\u724c\u5806 \n        card c;\n        cin>>c.which;//\u8f93\u5165\u724c\u5806\u4e2d\u6bcf\u4e00\u5f20\u724c\u7684\u4fe1\u606f\n        c.use=CAN_USE_THIS_CARD;//\u53ef\u4ee5\u7528\n        stack[top]=c;//\u628a\u724c\u653e\u8fdb\u724c\u5806 \n    }\n    top=1;//\u539f\u6765\u60f3\u5199\u4e2astack\uff0c\u540e\u6765\u5e9f\u4e86\n    int point=0;//\u8f6e\u5230\u8c01\u4e86\n    member[1].jump();//\u4e3b\u732a\u8df3\u51fa\u6765\n    while(true)\n    {\n        point=point%n+1;//\u4e00\u4e2a\u5708 \n        if(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u5982\u679c\u4ed6\u6b7b\u4e86\uff0c\u8df3\u8fc7 \n        member[point].myturn();//\u8fd9\u662f\u4ed6\u7684\u56de\u5408 \n    }\n}\n```\n\n\u4e3b\u51fd\u6570\u7ed3\u6784\u57fa\u672c\u6e05\u6670\uff0c\u5904\u7406\u4e86\u8f93\u5165\uff0c\u724c\u5806\uff0c\u624b\u724c\uff0c\u8fd8\u6709\u56de\u5408\u7684\u95ee\u9898\u3002\n\n\u6253\u5b8c\u4e86\u8fd9\u4e9b\uff0c\u6e38\u620f\u57fa\u672c\u683c\u5c40\u5c31\u4ee5\u786e\u5b9a\uff0c\u63a5\u4e0b\u6765\u5b9e\u73b0\u6e38\u620f\u5185\u5bb9\u3002\n\n-----\n\n### \u6e38\u620f\u7ed3\u675f\u5904\u7406\n\n```cpp\nvoid gameover(std::string who)//\u8c01\u8d62\u4e86 \n{//\u6b7b\u6389\u4e86 \n    cout<<who<<std::endl;//\u8f93\u51fa\u8c01\u8d62\u4e86 \n    for(register int i=1;i<=n;i++)\n    {\n        if(member[i].dead==THIS_PIG_IS_DEAD) cout<<\"DEAD\";//\u5982\u679c\u4ed6\u6b7b\u4e86\n        else for(myit it=member[i].cards.begin();it!=member[i].cards.end();it++)\n        {//\u8f93\u51fa\u4ed6\u7684\u724c\n            if(it->use==CANNOT_USE_THIS_CARD) continue;//\u5982\u679c\u8fd9\u5f20\u724c\u5df2\u7ecf\u4f7f\u7528\u8fc7\uff0c\u90a3\u4e48\u4e0d\u5b58\u5728\u4e8e\u724c\u5806 \n            cout<<it->which<<' ';//\u8f93\u51fa\u624b\u724c\u7684\u4fe1\u606f\uff0c\u7136\u540e\u6253\u4e2a\u7a7a\u683c \n        }\n        cout<<std::endl;//\u6362\u884c \n    }\n    exit(0);//\u7ed3\u675f\u8fd9\u4e2a\u7a0b\u5e8f \n}\n```\n\n---\n\n### \u6b7b\u4ea1\u5904\u7406\n\n```cpp\nvoid pig::die(int who)\n{//\u6b7b\u4e86\n    this->dead=THIS_PIG_IS_DEAD;//\u8fd9\u73a9\u610f\u6b7b\u4e86 \n    if(this->name==\"MP\")//\u5982\u679c\u4e3b\u732a\u6b7b\u4e86 \n    {\n        gameover(\"FP\");//\u53cd\u732a\u8d62\u4e86 \n    }\n    if(this->name==\"FP\") FP--;//\u5982\u679c\u53cd\u732a\u6b7b\u4e86\uff0c\u603b\u6570\u51cf\u51cf \n    if(FP==0) gameover(\"MP\");//\u5982\u679c\u53cd\u732a\u6b7b\u5149\u4e86 \n    if(this->name==\"FP\")//\u5982\u679c\u6740\u6b7b\u4e86\u662f\u53cd\u732a \n    {\n        member[who].cut();//\u62ff\u724cx1 \n        member[who].cut();//\u62ff\u724cx2 \n        member[who].cut();//\u62ff\u724cx3 \n    }\n    if(this->name==\"ZP\"&&member[who].name==\"MP\")\n    {//\u5982\u679c\u4e3b\u732a\u6740\u6389\u4e86\u5fe0\u732a\n        member[who].clear();//\u6e05\u7a7a \n    }\n    return ;\n}\n```\n\n---\n\n### \u624b\u724c\u7684\u6e05\u7a7a\u3001\u5220\u9664\u3001\u5bfb\u627e\u548c\u62ff\u724c\u7b49\n\n\n```cpp\nvoid pig::clear(void)\n{\n    this->cards.clear();//\u81ea\u5df1\u7684\u624b\u724c\u6e05\u7a7a \n    this->crossbow=CROSSBOW_DOWN;//\u628a\u5f29\u5378\u6389 \n    return ;\n}\n\nvoid pig::del(myit& it)\n{//\u5220\u9664\u67d0\u5f20\u724c\n    it->use=CANNOT_USE_THIS_CARD;//\u5220\u9664\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u7684\u724c\uff0c\u8ba9\u5b83\u4e0d\u53ef\u7528\n    return ;\n}\n\nmyit pig::find(char which)\n{//\u5bfb\u627e\u67d0\u5f20\u724c\n    for(myit it=this->cards.begin();it!=this->cards.end();it++)\n    {//\u641c\u7d22\u6bcf\u4e00\u5f20\u724c\n        if(it->use==CANNOT_USE_THIS_CARD) continue;//\u5982\u679c\u7528\u8fc7\u4e86 \n        if(it->which==which) return it;//\u5982\u679c\u8fd9\u662f\u6211\u8981\u627e\u7684\u724c \n    }\n    return this->cards.end();//\u627e\u4e0d\u5230\uff0c\u8f93\u51favector\u7684end \n}\n\nvoid pig::cut(void)\n{\n    this->cards.push_back(stack[top++]);//\u628a\u724c\u5806\u4e0a\u9762\u7684\u62ff\u6389\n    if(top>m) top=m;//\u597d\u50cf\u6709\u6570\u636e\u8bf4\u724c\u4e0d\u591f\n    return;\n}\n\nvoid pig::use(card& c)\n{//\u7528\u67d0\u5f20\u724c \n    if(c.which=='K')\n    {//\u5982\u679c\u8fd9\u662f\u6740 \n        int who;\n        who=this->find_K();//\u627e\u4e00\u4e2a\u4eba\u6765\u6740 \n        if(who!=0)//\u5982\u679c\u627e\u5230\u4e86 \n        {\n            c.use=CANNOT_USE_THIS_CARD;//\u7528\u6389 \n            this->K(who);//\u6740\u5b83 \n        }\n    }\n    else if(c.which=='P')\n    {//\u5982\u679c\u8fd9\u662f\u6843 \n        if(this->hp<4)//\u5982\u679c\u5b83\u7684\u751f\u547d\u503c\u6ca1\u6709\u6ee1 \n        {\n            c.use=CANNOT_USE_THIS_CARD;//\u7528\u6389 \n            this->hp++;//\u751f\u547d\u503c\u52a0\u4e00\u70b9 \n        }\n    }\n    else if(c.which=='F')\n    {//\u5982\u679c\u8fd9\u662f\u51b3\u6597\n        int who;\n        who=this->find_F();//\u627e\u4e2a\u4eba\u6765\u51b3\u6597\n        if(who!=0)//\u5982\u679c\u627e\u5230\u4e86\n        {\n            c.use=CANNOT_USE_THIS_CARD;//\u7528\u6389\n            this->F(who);//\u51b3\u6597\u4ed6\n        }\n    }\n    else if(c.which=='N')\n    {//\u5357\u732a\u5165\u4fb5 \n        c.use=CANNOT_USE_THIS_CARD;//\u7528\u6389 \n        this->N();//\u4f7f\u7528\u5357\u732a\u5165\u4fb5 \n    }\n    else if(c.which=='W')\n    {//\u4e07\u7bad\u9f50\u53d1 \n        c.use=CANNOT_USE_THIS_CARD;//\u7528\u6389 \n        this->W();//\u4f7f\u7528\u4e07\u7bad\u9f50\u53d1 \n    }\n    else if(c.which=='Z')\n    {//\u732a\u54e5\u8fde\u5f29 \n        c.use=CANNOT_USE_THIS_CARD;//\u7528\u6389 \n        this->crossbow=CROSSBOW_ON;//\u88c5\u4e0a \n    }\n}\n\nvoid pig::hurt(int who)//\u8c01\u6740\u7684 \n{\n    this->hp--;//\u53d7\u5230\u4f24\u5bb3 \n    if(this->hp==0)//\u5982\u679c\u4ed6\u6b7b\u4e86\n    {\n        myit t=this->find('P');//\u627e\u6843\n        if(t==this->cards.end()) this->die(who);//\u627e\u4e0d\u5230\uff0c\u6b7b\u6389\n        else\n        {\n            this->del(t);//\u627e\u5230\u4e86\uff0c\u7528\u6389\n            this->hp++;//\u751f\u547d\u503c\u52a0\u4e00\u70b9 \n        }\n    }\n}\n\nbool pig::canuse(char c)\n{//\u5224\u65ad\u80fd\u5426\u4f7f\u7528\n    if(c=='P'&&this->hp<4) return true;//\u5982\u679c\u662f\u6843\u5b50\u4e14\u751f\u547d\u503c\u672a\u6ee1\n    if((c=='K'&&this->find_K()!=0)||(c=='F'&&this->find_F()!=0)||c=='N'||c=='W'||c=='Z') return true;//\u5982\u679c\u53ef\u4ee5\u7528\n    return false;//\u4e0d\u7136\u5c31\u4e0d\u8be5\u7528\n}\n```\n\n-----\n\n#### \u4ee5\u4e0a\u5185\u5bb9\u7406\u89e3\u8d77\u6765\u90fd\u8f83\u4e3a\u7b80\u5355\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u96be\u5ea6\u4f1a\u6709\u6240\u63d0\u9ad8\n\n### \u5bfb\u627e'\u6740'\u7684\u76ee\u6807\n\n\u5bf9\u4e8e\u4e3b\u732a\u3001\u5fe0\u732a\u548c\u53cd\u732a\u6765\u8bf4\uff0c\u4ed6\u4eec\u7684\u76ee\u7684\u4e0d\u540c\uff0c\u4f46\u6740\u7684\u8ddd\u79bb\u90fd\u76f8\u540c\uff0c\u4e3a$1$\uff0c\u5bf9\u4e8e\u6bcf\u5934\u732a\uff0c\u6211\u4eec\u627e\u5230\u4ed6\u540e\u65b9\u7684\u7b2c\u4e00\u5934\u732a\uff08\u4e5f\u662f\u5b83\u552f\u4e00\u80fd\u6740\u5230\u7684\u4e00\u5934\u732a\uff09\uff0c\u5224\u65ad\u662f\u5426\u5e94\u8be5\u5bf9\u5b83\u7528\u6740\uff0c\u5982\u679c\u8be5\u7528\uff0c\u8fd4\u56de\u8fd9\u5934\u732a\u7684\u7f16\u53f7\uff1b\u5982\u679c\u4e0d\u8be5\u7528\uff0c\u76f4\u63a5\u7ed3\u675f\u51fd\u6570\uff0c\u8fd4\u56de$0$\uff08\u8868\u793a\u6ca1\u6709\u627e\u5230\u6740\u7684\u732a\uff09\u3002\n\n\u4e3b\u732a\u8981\u627e\u7684\u662f\u8df3\u53cd\u732a\u548c\u7c7b\u53cd\u732a\uff0c\u5fe0\u732a\u8981\u627e\u7684\u662f\u8df3\u53cd\u732a\uff0c\u53cd\u732a\u8981\u627e\u7684\u662f\u8df3\u5fe0\u732a\u6216\u662f\u4e3b\u732a\u3002\n\n\n```cpp\nint pig::find_K(void)\n{//\u627e\u4e2a\u4eba\u6765\u6740\n    if(this->use_kill==THIS_TURN_USED_KILL&&this->crossbow==CROSSBOW_DOWN) return 0;//\u5982\u679c\u8fd9\u56de\u5408\u5df2\u7ecf\u7528\u8fc7\u4e86\u6740\u800c\u6ca1\u6709\u88c5\u8fc7\u732a\u54e5\u8fde\u5f29 \n    if(this->name==\"MP\")\n    {//\u6211\u662f\u4e3b\u732a \n        for(register int point=this->num%n+1;point!=this->num;point=point%n+1)\n        {//\u9006\u65f6\u9488\u5bfb\u627e \n            if(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u5982\u679c\u6b7b\u6389\u4e86\uff0c\u8df3\u8fc7\u53bb \n            if(member[point].like_bad==THIS_PIG_LIKE_BAD||(member[point].name==\"FP\"&&member[point].jumped==THIS_PIG_IS_JUMP))\n            {//\u5982\u679c\u8fd9\u732a\u662f\u7c7b\u53cd\u732a\u6216\u662f\u5df2\u7ecf\u8df3\u53cd \n                return point;//\u5c31\u51b3\u6597\u4ed6 \n            }//\u5426\u5219\u7ee7\u7eed\u627e \n            else return 0; \n        }\n    }\n    else if(this->name==\"ZP\")\n    {//\u6211\u662f\u5fe0\u732a \n        for(register int point=this->num%n+1;point!=this->num;point=point%n+1)\n        {//\u9006\u65f6\u9488\u5bfb\u627e \n            if(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u8fd9\u73a9\u610f\u6b7b\u4e86\uff0c\u8df3\u8fc7\u53bb \n            if(member[point].name==\"FP\"&&member[point].jumped==THIS_PIG_IS_JUMP)\n            {//\u5982\u679c\u8fd9\u662f\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u5934\n                return point;//\u5c31\u6740\u4ed6 \n            }\n            else return 0;\n        }\n    }\n    else if(this->name==\"FP\")\n    {//\u6211\u662f\u53cd\u732a \n        for(register int point=this->num%n+1;point!=this->num;point=point%n+1)\n        {//\u9006\u65f6\u9488\u5bfb\u627e \n            if(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u5982\u679c\u6b7b\u6389\u4e86\uff0c\u5148\u8fc7\u53bb \n            if(member[point].name!=\"FP\"&&member[point].jumped==THIS_PIG_IS_JUMP)//\u627e\u5230\u7b2c\u4e00\u5934\u732a\uff0c\u5982\u679c\u5b83\u8df3\u5fe0\u6216\u662f\u662f\u4e3b\u732a \n            {\n                return point;//\u6740\u4ed6 \n            }\n            else\n            {\n                return 0;//\u6740\u4e0d\u5230 \n            }\n        }\n    }\n    return 0;\n}\n```\n\n---\n\n### \u5bfb\u627e'\u51b3\u6597'\u7684\u76ee\u6807\n\n\u4e0e'\u6740'\u7c7b\u4f3c\uff0c\u5bf9\u4e8e\u4e3b\u732a\u3001\u5fe0\u732a\u548c\u53cd\u732a\u6765\u8bf4\uff0c\u4ed6\u4eec\u5bfb\u627e\u51b3\u6597\u76ee\u6807\u7684\u76ee\u7684\u4e5f\u4e0d\u540c\uff0c\u4f46\u8003\u8651\u5230\u51b3\u6597\u724c\u65e0\u8ddd\u79bb\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u653b\u51fb\u6e38\u620f\u4e0a\u5b58\u6d3b\u7684\u4efb\u4f55\u4e00\u5934\u732a\u3002\n\n\u4e3b\u732a\u6740\u7684\u662f\u9006\u65f6\u9488\u4e0b\u53bb\u7684\u7b2c\u4e00\u5934\u8df3\u53cd\u732a\u6216\u7c7b\u53cd\u732a\uff0c\u5fe0\u732a\u6740\u7684\u662f\u9006\u65f6\u9488\u4e0b\u53bb\u7684\u7b2c\u4e00\u5934\u8df3\u53cd\u732a\uff0c**\u53cd\u732a\u76f4\u63a5\u6740\u4e3b\u732a**\u3002\n\n```cpp\nint pig::find_F(void)\n{//\u627e\u4e00\u4e2a\u4eba\u6765\u51b3\u6597\n    if(this->name==\"MP\")\n    {//\u6211\u662f\u4e3b\u732a \n        for(register int point=this->num%n+1;point!=this->num;point=point%n+1)\n        {//\u9006\u65f6\u9488\u5bfb\u627e \n            if(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u5982\u679c\u6b7b\u6389\u4e86\uff0c\u8df3\u8fc7\u53bb \n            if(member[point].like_bad==THIS_PIG_LIKE_BAD||(member[point].name==\"FP\"&&member[point].jumped==THIS_PIG_IS_JUMP))\n            {//\u5982\u679c\u8fd9\u732a\u662f\u7c7b\u53cd\u732a\u6216\u662f\u5df2\u7ecf\u8df3\u53cd\n                return point;//\u5c31\u51b3\u6597\u4ed6 \n            }//\u5426\u5219\u7ee7\u7eed\u627e \n        }\n    }\n    else if(this->name==\"ZP\")\n    {//\u6211\u662f\u5fe0\u732a \n        for(register int point=this->num%n+1;point!=this->num;point=point%n+1)\n        {//\u9006\u65f6\u9488\u5bfb\u627e \n            if(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u8fd9\u73a9\u610f\u6b7b\u4e86\uff0c\u8df3\u8fc7\u53bb \n            if(member[point].name==\"FP\"&&member[point].jumped==THIS_PIG_IS_JUMP)\n            {//\u5982\u679c\u8fd9\u662f\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u5934 \n                return point;//\u5c31\u51b3\u6597\u4ed6 \n            }\n        }\n    }\n    else if(this->name==\"FP\")\n    {//\u6211\u662f\u53cd\u732a \n        return 1;//\u6740\u4e3b\u732a \n    }\n    return 0;\n}\n```\n\n---\n\n### \u653b\u51fb\u7684\u53cd\u5e94\u51fd\u6570\n\n\u4efb\u4f55\u88ab\u4f7f\u7528\u6740\u3001\u5357\u732a\u5165\u4fb5\u3001\u4e07\u7bad\u9f50\u53d1\u7684\u732a\u90fd\u4f1a\u5728\u80cc\u540e\u8fd0\u884c\u8fd9\u4e9b\u51fd\u6570\u3002\n\n\u6740\u7684\u53cd\u5e94\u51fd\u6570\u5bfb\u627e\u624b\u724c\u4e2d\u662f\u5426\u6709\u95ea\uff0c\u5357\u732a\u5165\u4fb5\u7684\u53cd\u5e94\u51fd\u6570\u5bfb\u627e\u624b\u724c\u4e2d\u662f\u5426\u6709\u6740\uff0c\u4e07\u7bad\u9f50\u53d1\u7684\u53cd\u5e94\u51fd\u6570\u5bfb\u627e\u624b\u724c\u4e2d\u662f\u5426\u6709\u6740\u3002\n\n```cpp\nbool pig::K_respond(void)\n{//\u6740\u7684\u53cd\u5e94\n    myit it=this->find('D');//\u627e\u4e00\u627e\u6709\u6ca1\u6709\u95ea \n    if(it==this->cards.end()) return false;//\u6ca1\u6709\u95ea\uff0c\u53cd\u5e94\u65e0\u6548 \n    this->del(it);//\u5220\u6389\u95ea\n    return true;//\u6709\u6548\u53cd\u5e94 \n}\n\nbool pig::N_respond(void)\n{//\u56de\u5e94\u5357\u732a\u5165\u4fb5\n    myit it=this->find('K');//\u627e\u4e00\u627e\u6740 \n    if(it==this->cards.end()) return false;//\u627e\u4e0d\u5230 \n    this->del(it);//\u5220\u6389\u5b83\n    return true;\n}\n\nbool pig::W_respond(void)\n{//\u56de\u5e94\u4e07\u7bad\u9f50\u53d1 \n    myit it=this->find('D');//\u627e\u95ea \n    if(it==this->cards.end()) return false;//\u6ca1\u627e\u5230 \n    this->del(it);//\u7528\u6389\u5b83\n    return true;\n}\n```\n\n---\n\n#### **\u63a5\u4e0b\u6765\u91cd\u70b9\u4e2d\u7684\u91cd\u70b9\u4e86**\n\n### \u65e0\u61c8\u53ef\u51fb\n\n\u8fd9\u91cc\u6211\u4eec\u5199\u4e24\u4e2a\u9012\u5f52\u51fd\u6570\uff0c\u5148\u770b\u6211\u4eec\u7b2c\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u662f\u88ab\u653b\u51fb\u6027\u9526\u56ca\u653b\u51fb\u7684\u4eba\u8c03\u7528\u7684\u51fd\u6570\uff0c\u5f62\u53c2\u8868\u660e\u8c01\u4f24\u5bb3\u7684\u81ea\u5df1\uff0c\u5bfb\u627e\u9006\u65f6\u9488\uff08**\u6ce8\u610f\u4ece\u81ea\u5df1\u5f00\u59cb\uff0c\u4e0d\u662f\u4ece\u81ea\u5df1\u540e\u9762\u7684\u90a3\u4e00\u4f4d\u5f00\u59cb\uff0c\u56e0\u4e3a\u81ea\u5df1\u5982\u679c\u8df3\u4e86\u4e5f\u662f\u4f1a\u4fdd\u62a4\u81ea\u5df1\u7684**\uff09\u627e\u5230\u7684\u7b2c\u4e00\u5934\u6709\u65e0\u61c8\u53ef\u51fb\u7684\u540c\u7c7b\uff0c\u8ba9\u5b83\u6765\u5e2e\u4f60\u51fa\u65e0\u61c8\u53ef\u51fb\u3002\n\n*\u5982\u679c\u8fd9\u5934\u732a\u8fd8\u6ca1\u6709\u8df3\u662f\u4e0d\u53ef\u4ee5\u5bfb\u6c42\u5e2e\u52a9\u7684*\n\n```cpp\nbool pig::ask_J(int who)//\u627e\u4eba\u7ed9\u6211\u6321\u724c\uff0cwho\u5bf9\u6211\u53d1\u8d77\u653b\u51fb \n{//\u8be2\u95ee\u65e0\u61c8\u53ef\u51fb \n    bool check=true;\n    if(this->jumped==THIS_PIG_IS_NOT_JUMP) return false;//\u5982\u679c\u6ca1\u6709\u8df3\uff0c\u90a3\u5c31\u4e0d\u7528 \n    for(register int point=who;point!=who||check==true;point=point%n+1)\n    {//\u9006\u65f6\u9488\u67e5\u8be2 \n        if(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u5982\u679c\u6b7b\u6389\u4e86\n        check=false;\n        if(this->name!=\"FP\"&&member[point].name==\"FP\") continue;//\u5982\u679c\u6709\u654c\u610f\uff0c\u4e0d\u7528 \n        if(this->name==\"FP\"&&member[point].name!=\"FP\") continue;//\u5982\u679c\u8981\u6253\u4e0a\uff0c\u4e0d\u7528 \n        myit it=member[point].find('J');//\u627e\u627e\u65e0\u61c8\u53ef\u51fb \n        if(it!=member[point].cards.end())\n        {\n            member[point].del(it);//\u5220\u6389\u8fd9\u5f20\u724c \n            member[point].jump();//\u8df3\n            return !member[point].back_J(this->num);//\u5bf9\u6297\u4e00\u4e0b \n        }\n    }\n    return false;\n}\n\n\n```\n\n\u8003\u8651\u5230\u4e0a\u65b9\u7684\u732e\u6bb7\u52e4\u53ef\u80fd\u4f1a\u88ab\u8868\u654c\u610f\u7ed9\u65e0\u6548\u6389\uff0c\u6240\u4ee5\u624d\u6709\u4e86\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\u3002\u8c03\u7528\u8fc7\u4e0a\u9762\u7684\u51fd\u6570\u7684\u732a\u90fd\u8981\u8ba9\u5e2e\u4ed6\u51fa\u724c\u7684\u90a3\u5934\u732a\u7ee7\u7eed\u505a\u4e0b\u9762\u7684\u5de5\u4f5c\n\n\u5185\u5bb9\uff1a\u627e\u5230\u9006\u65f6\u9488\u7684\u7b2c\u4e00\u5934\u6709\u65e0\u61c8\u53ef\u51fb\u7684\u654c\u732a\uff0c\u8ba9\u5b83\u5bf9\u81ea\u5df1\u7684\u65e0\u61c8\u53ef\u51fb\u51fa\u65e0\u61c8\u53ef\u51fb\u3002\n\n\u5176\u5b9e\u4f60\u6d4b\u8fc7\u51e0\u4e2a\u4f8b\u5b50\u5c31\u4f1a\u53d1\u73b0\uff0c\u6bcf\u5f53\u4e3b\u732a\u53d7\u5230\u4f24\u5bb3\u540e\uff0c\u5fe0\u732a\u548c\u53cd\u732a\u4e24\u9635\u8425\u4e00\u5b9a\u6709\u4e00\u65b9\u4e00\u5f20\u65e0\u61c8\u53ef\u51fb\u90fd\u6ca1\u6709\u4e86\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\n\n~~\u771f\u7684\u662fPig\u601d\u7ef4\u554a~~\n\n```cpp\nbool pig::back_J(int to)\n{//\u65e0\u61c8\u53ef\u51fb\u7684\u5bf9\u6297 \n    for(register int point=this->num%n+1;point!=this->num;point=point%n+1)\n    {//\u9006\u65f6\u9488\u626b\u63cf \n        if(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u5df2\u901d\u8005\u5148\u884c\n        if(this->name!=\"FP\"&&member[point].name==\"ZP\") continue;//\u5982\u679c\u540c\u7c7b\uff0c\u4e0d\u6253\n        if(this->name==\"FP\"&&member[point].name==\"FP\") continue;//\u5982\u679c\u540c\u7c7b\uff0c\u4e0d\u6253\n        if(this->name==\"ZP\"&&member[point].name!=\"FP\") continue;//\u5982\u679c\u53cb\u597d\uff0c\u4e0d\u6253\n        myit it=member[point].find('J');//\u627e\u4e00\u5f20\u65e0\u61c8\u53ef\u51fb \n        if(it!=member[point].cards.end())\n        {\n            member[point].del(it);//\u7528\u5b83 \n            member[point].jump();//\u540c\u65f6\u81ea\u5df1\u5f97\u8df3\n            return !member[to].ask_J(point);//\u518d\u56de\u51fb\u4e00\u4e0b\uff08\u5f88\u9a9a\u554a\uff09 \n        }\n    }\n    return false;\n}\n\n\n```\n\n---\n\n### \u8865\u4e00\u4e2a\u6784\u9020\u51fd\u6570\n\n```cpp\npig::pig(void)\n{\n    this->hp=4;//\u751f\u547d\u503c \n    this->dead=THIS_PIG_IS_NOT_DEAD;//\u6ca1\u6b7b \n    this->jumped=THIS_PIG_IS_NOT_JUMP;//\u6709\u6ca1\u6709\u8df3 \n    this->crossbow=CROSSBOW_DOWN;//\u6709\u6ca1\u6709\u88c5\u5f29 \n    this->like_bad=THIS_PIG_DO_NOT_LIKE_BAD;//\u662f\u5426\u7c7b\u53cd \n    this->use_kill=THIS_TURN_DO_NOT_USE_KILL;//\u8fd9\u56de\u5408\u6ca1\u6709\u4f7f\u7528\u8fc7\u6740 \n}\n\n\n```\n\n---\n\n### \u518d\u8865\u4e00\u4e2a\u56de\u5408\u51fd\u6570\n\n\u57fa\u4e8e\u672c\u4eba\u5728\u6700\u4e0a\u9762$class$\u91cc\u9762\u5199\u7684\u72ec\u7279\u7684\u4ece$private$\u5230$public$\u7684\u987a\u5e8f\uff0c\u52a0\u4e0a\u672c\u4eba\u7684\u5f3a\u8feb\u75c7\uff08\u5fc5\u987b\u6309\u7167\u58f0\u660e\u7684\u987a\u5e8f\u5b9e\u73b0\u51fd\u6570\uff09\uff0c\u6240\u4ee5\u4e0b\u65b9\u7684\u51fd\u6570\u90fd\u6bd4\u8f83~~\u6c34~~ *\n\n\u8fd9\u4e2a\u56de\u5408\u51fd\u6570\u5f88\u6a21\u62df\uff0c\u6309\u7167\u9898\u610f\uff0c\u6478\u4e24\u5f20\u724c\uff0c\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\u624b\u724c\uff0c\u5bf9\u6bcf\u5f20\u724c\u6765\u4e2a\u5224\u65ad\uff0c\u80fd\u901a\u8fc7\u5224\u65ad\u7684\u724c\u7528\u6389\u3002\n\n**\u6ce8\u610f\u7528\u6389\u4e00\u5f20\u724c\u540e\u9700\u8981\u4ece\u5934\u5f00\u59cb\u518d\u626b\u4e00\u904d\u624b\u724c\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f**\u3002\n\n\u5982\u679c\u624b\u724c\u662f`KKKKZKK`\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u4e86\u3002\n\n```cpp\nvoid pig::myturn(void)\n{\n    this->cut();//\u62ff\u724cx1\n    this->cut();//\u62ff\u724cx2\n    bool check=true;//\u6709\u724c\u62ff\n    while(check) \n    {//\u53ea\u8981\u4e0d\u7ed3\u675f \n        check=false;//\u6709\u6ca1\u6709\u7528\u724c\n        for(myit it=this->cards.begin();it!=this->cards.end();it++)\n        {//\u5728\u624b\u724c\u4e2d\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d\n            if(it->use==CANNOT_USE_THIS_CARD) continue;//\u5982\u679c\u4e0d\u80fd\u7528\u4e86\n            if(canuse(it->which)==false) continue;//\u5224\u65ad\u4e00\u4e0b\u73b0\u5728\u80fd\u4e0d\u80fd\u7528\n            use(*it);//\u7528\u5b83\n            if(this->dead==THIS_PIG_IS_DEAD) return;//\u5982\u679c\u8fd9\u73a9\u610f\u6b7b\u4e86\n            it=this->cards.begin()-1;//\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u626b\n            check=true;//\u7528\u8fc7\u724c\u4e86\n        }\n    }\n    member[this->num].use_kill=THIS_TURN_DO_NOT_USE_KILL;//\u91cd\u7f6e\u662f\u5426\u7528\u8fc7\u6740\n    return;\n}\n\n\n```\n\n---\n\n### \u8df3\n\n\u8003\u8651\u5230\u5fe0\u732a\u53ea\u4f1a\u8df3\u5fe0\uff0c\u53cd\u732a\u53ea\u4f1a\u8df3\u53cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u77e5\u9053\u8fd9\u5934\u732a\u7684\u8eab\u4efd\u4ee5\u53ca\u4ed6\u6709\u6ca1\u6709\u8df3\u5c31\u53ef\u4ee5\u5f97\u77e5\u5b83\u662f\u8df3\u5fe0\u8fd8\u662f\u8df3\u53cd\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5bf9\u6bcf\u5934\u732a\u90fd\u5f00\u4e00\u4e2a$bool$\u6807\u8bc6\u8868\u793a\u8fd9\u5934\u732a\u6709\u6ca1\u6709\u8df3\u3002\n\n```cpp\nvoid pig::jump(void)\n{//\u8df3 \n    this->jumped=THIS_PIG_IS_JUMP;//\u5f00\u542f\u6807\u8bc6 \n    return ;\n}\n\n\n```\n\n---\n\n### \u6740\n\n\u55ef\uff0c**\u63a5\u4e0b\u6765\u7684\u4e00\u4e9b\u64cd\u4f5c\u4e5f\u6bd4\u8f83\u91cd\u8981 ,\u53cd\u6b63\u6ca1\u6709\u65e0\u61c8\u53ef\u51fb\u96be\u5c31\u5bf9\u4e86 **\n\n\u8003\u8651\u5230\u6740\u5fc5\u7136\u4f1a\u4f7f\u51fa\u6740\u8005\u8df3\u3002\u56e0\u4e3a\u6740\u4e3b\u732a\u7684\u732a\u4e00\u5b9a\u662f\u53cd\u732a\uff0c\u6740\u5fe0\u732a\u7684\u732a\u4e5f\u662f\u8df3\u53cd\u732a\uff0c\u6740\u53cd\u732a\u7684\u732a\u4e00\u5b9a\u662f\u5fe0\u732a\u6216\u662f\u4e3b\u732a\u3002\u6240\u4ee5\u53ea\u8981\u4f60\u7528\u4e86\u6740\uff0c\u4f60\u5c31\u8df3\u4e86\u3002\n\n\u5176\u6b21\uff0c\u8df3\u4e86\u4e4b\u540e\u4f60\u5c31\u53ef\u4ee5\u53d6\u6d88\u7c7b\u53cd\u6807\u8bc6\u4e86\uff08\u5373\u4f7f\u4f60\u8df3\u53cd\u4e86\uff0c\u53d6\u6d88\u4e86\u6807\u8bc6\u4f9d\u65e7\u88ab\u6253\uff09\u3002\n\n\u7136\u540e\uff0c\u5c31\u6ca1\u6709\u4ec0\u4e48\u82b1\u5934\u4e86\uff0c\u6740\u7684\u4eba\u5728\u524d\u9762\u51fd\u6570\u4e2d\u5df2\u7ecf\u9009\u5b9a\uff0c\u7167\u7740\u6253\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n```cpp\nvoid pig::K(int to)\n{//\u6740\n    if(this->use_kill==THIS_TURN_USED_KILL&&this->crossbow==false) return;//\u5982\u679c\u8fd9\u56de\u5408\u4f7f\u7528\u8fc7\u6740\u800c\u6ca1\u6709\u4f7f\u7528\u732a\u54e5\u8fde\u5f29 \n    this->jump();//\u5fc5\u7136\u8df3 \n    this->like_bad=THIS_PIG_DO_NOT_LIKE_BAD;//\u53d6\u6d88\u7c7b\u53cd\uff08\u5373\u4f7f\u6210\u4e3a\u8df3\u53cd\u732a\uff09 \n    this->use_kill=THIS_TURN_USED_KILL;//\u7528\u8fc7\u6740\u4e86 \n    if(member[to].K_respond()==false)\n    {//\u5982\u679c\u5bf9\u65b9\u6ca1\u6709\u5bf9\u6740\u4ea7\u751f\u6709\u6548\u53cd\u5e94 \n        member[to].hurt(this->num);//\u4f24\u5b83\u4e00\u6ef4\u8840 \n    }\n}\n\n\n```\n\n---\n\n### \u51b3\u6597\n\n\u4e0e\u6740\u76f8\u4f3c\uff0c\u53ea\u8981\u4f60\u7528\u4e86\u51b3\u6597\u4f60\u5c31\u5fc5\u7136\u8df3\uff0c**\u6ce8\u610f\u5982\u679c\u5fe0\u732a\u88ab\u4e3b\u732a\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\uff0c\u5b83\u4f1a\u76f4\u63a5\u625b\u4e0a\u4e00\u70b9\u4f24\u5bb3\uff0c\u7136\u540e\u7ed3\u675f\u51b3\u6597**\u3002\n\n\u6b64\u5916\u8fd8\u9700\u6ce8\u610f\u8bb0\u5f55\u5230\u5e95\u662f\u8c01\u51fa\u7684\u6700\u540e\u4e00\u5f20\u6740\uff0c\u51b3\u5b9a\u4e86\u8c01\u53d7\u5230\u53e6\u4e00\u65b9\u7684\u4f24\u5bb3\u3002\n\n```cpp\nvoid pig::F(int to)\n{//\u51b3\u6597\n#ifdef DEBUG\n\tprintf(\"%d\u5bf9%d\u4f7f\u7528\u4e86\u51b3\u6597\\n\",this->num,to);\n#endif \n\tthis->jump();//\u5148\u8df3\u518d\u8bf4 \n\tthis->like_bad=THIS_PIG_DO_NOT_LIKE_BAD;//\u7c7b\u53cd\u732a\u53d6\u6d88 \n\tif(member[to].ask_J(this->num)==true) return;//\u8be2\u95ee\u65e0\u61c8\u53ef\u51fb\uff0c\u5982\u679c\u4f7f\u7528\uff0c\u8df3\u8fc7 \n\tif(this->name==\"MP\"&&member[to].name==\"ZP\")\n\t{//\u5982\u679c\u4e3b\u732a\u5bf9\u5fe0\u732a\u7528 \n\t\tmember[to].hurt(this->num);//\u5fe0\u732a\u53d7\u4f24 \n\t\treturn;\n\t}\n\tint who;//\u5224\u5b9a\u8c01\u63d0\u4f9b\u4f24\u5bb3 \n\twhile(true)\n\t{\n\t\tmyit t;\n\t\tt=member[to].find('K');//\u627e\u6740 \n\t\tif(t==member[to].cards.end())//\u6ca1\u627e\u5230 \n\t\t{\n\t\t\twho=2;//\u6211\u5bf9\u4f60\u4ea7\u751f\u4f24\u5bb3 \n\t\t\tbreak;\n\t\t}\n\t\telse member[to].del(t); //\u7528\u6389\u8fd9\u5f20\u724c \n\t\tt=this->find('K');//\u4ece\u6211\u8fd9\u91cc\u627e\u6740 \n\t\tif(t==this->cards.end())\n\t\t{\n\t\t\twho=1;//\u4f60\u5bf9\u6211\u4ea7\u751f\u4f24\u5bb3 \n\t\t\tbreak;\n\t\t}\n\t\telse this->del(t);//\u5220\u6389\u8fd9\u5f20\u724c \n\t}\n\tif(who==2)\n\t{//\u4f60\u4f24\u4e86\u6211 \n\t\tmember[to].hurt(this->num);//\u4f24\u5bb3\u51fd\u6570 \n\t}\n\tif(who==1)\n\t{//\u6211\u4f24\u4e86\u4f60 \n\t\tthis->hurt(to);//\u4f24\u5bb3\u51fd\u6570 \n\t}\n}\n\n\n\n```\n\n---\n\n### \u5357\u732a\u5165\u4fb5\n\n\u7136\u540e\u5c31\u662f\u5357\u732a\u5165\u4fb5\u4e86\u3002\u4ece\u51fa\u724c\u8005\u7684\u4e0b\u4e00\u4f4d\u5f00\u59cb\uff0c\u9006\u65f6\u9488\u65cb\u8f6c\u4e00\u5468\uff0c\u5bf9\u6bcf\u4e2a\u4eba\u8fdb\u884c\u65e0\u61c8\u53ef\u51fb\u5224\u5b9a\u548c\u5357\u732a\u5165\u4fb5\u56de\u5e94\u5224\u5b9a\u3002\n\n```cpp\nvoid pig::N(void)\n{//\u5357\u732a\u5165\u4fb5\n#ifdef DEBUG\n\tprintf(\"%d\u4f7f\u7528\u4e86\u5357\u732a\u5165\u4fb5\\n\",this->num);\n#endif \n\tfor(register int point=this->num%n+1;point!=this->num;point=point%n+1)\n\t{//\u9006\u65f6\u9488\u67e5\u8be2 \n\t\tif(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u6b7b\u6389\u4e86\uff0c\u8df3\u8fc7\u53bb \n\t\tif(member[point].ask_J(this->num)==true) continue;//\u770b\u770b\u6709\u6ca1\u6709\u65e0\u61c8\u53ef\u51fb \n\t\tif(member[point].N_respond()==false) \n\t\t{//\u5224\u65ad\u662f\u5426\u53cd\u5e94 \n\t\t\tmember[point].hurt(this->num);//\u53d7\u5230\u4f24\u5bb3 \n\t\t\tif(member[point].name==\"MP\"&&this->jumped==THIS_PIG_IS_NOT_JUMP)\n\t\t\t{//\u5982\u679c\u4e3b\u732a\u53d7\u5230\u4e86\u653b\u51fb\u4e14\u8be5\u732a\u6ca1\u6709\u8df3 \n\t\t\t\tthis->like_bad=THIS_PIG_LIKE_BAD;//\u5b9a\u4e49\u4e3a\u7c7b\u53cd\u732a \n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n```\n\n---\n\n### \u4e07\u7bad\u9f50\u53d1\n\n\u8ddf\u5357\u732a\u5165\u4fb5\u5927\u4f53\u76f8\u540c\uff0c\u5c31\u662f\u6539\u4e86\u51e0\u4e2a\u5b57\u3002\n\n\n```cpp\nvoid pig::W(void)\n{//\u4e07\u7bad\u9f50\u53d1 \n#ifdef DEBUG\n\tprintf(\"%d\u4f7f\u7528\u4e86\u4e07\u7bad\u9f50\u53d1\\n\",this->num);\n#endif\n\tfor(register int point=this->num%n+1;point!=this->num;point=point%n+1)\n\t{//\u9006\u65f6\u9488\u641c\u7d22\n\t\tif(member[point].dead==THIS_PIG_IS_DEAD) continue;//\u5982\u679c\u6b7b\u4e86\uff0c\u8df3\u8fc7\n\t\tif(member[point].ask_J(this->num)==true) continue;//\u8be2\u95ee\u662f\u5426\u6709\u65e0\u61c8\u53ef\u51fb\n\t\tif(member[point].W_respond()==false)//\u56de\u5e94\u4e07\u7bad\u9f50\u53d1\n\t\t{\n\t\t\tmember[point].hurt(this->num);//\u53d7\u5230\u4f24\u5bb3\n\t\t\tif(member[point].name==\"MP\"&&this->jumped==THIS_PIG_IS_NOT_JUMP)\n\t\t\t{//\u4e3b\u732a\u53d7\u5230\u653b\u51fb\uff0c\u8fd9\u5934\u732a\u6ca1\u6709\u8df3\n\t\t\t\tthis->like_bad=THIS_PIG_LIKE_BAD;//\u5b9a\u4e49\u4e3a\u7c7b\u53cd\u732a\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n```\n\n[\u672c\u9898\u5b8c\u6574\u4ee3\u7801](https://www.luogu.com.cn/blog/Kysic-Studio/code-P2482)",
        "postTime": 1573648919,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "P2482"
    },
    {
        "content": "~~\u8fd9\u662f\u4e00\u9053\u65e0\u6bd4\u6c34\u7684\u6a21\u62df\u9898%%~~\n\n** NOI/NOI+/CTSC** \u7684\u96be\u5ea6\u6807\u7b7e\u544a\u8bc9\u6211\u4eec\uff0c\u6a21\u62df\u7684\u8def\u4e0d\u597d\u8d70\u554a~~\n# \u6ce8\u610f \uff01#\n\n1.\u53cd\u732a\u662fFP\uff0c\u4e0d\u662fAP\uff0c\u9898\u76ee\u63cf\u8ff0\u9519\u8bef\uff08\u4e0d\u8fc7\u6837\u4f8b\u662f\u5bf9\u7684\uff09\n\n2.\u4eb2\u6d4b\uff0c\u732a\u7684\u6570\u91cf\u4e3a**2\u2264n\u226410**\uff0c\u6570\u636e\u8303\u56f4\u6709\u8bef\uff08\u73b0\u5728\u5df2\u7ecf\u66f4\u6539\uff09\n\n3.\u9006\u65f6\u9488\u662f\u7f16\u53f7\u4ece**1,2,3...n,1...**\u7684\u987a\u5e8f\n\n3.\u5173\u4e8e\u51b3\u6597\u6211\u4eec\u8981\u6ce8\u610f\n\n\uff081\uff09\u53cd\u732a\u51b3\u6597\u5bf9\u8c61\u4e00\u76f4\u662f\u4e3b\u732a\n\n\uff082\uff09\u51b3\u6597\u4e0d\u9650\u5236\u8ddd\u79bb\uff0c\u6240\u4ee5\u67e5\u627e\u5bf9\u8c61\u65f6\u4e0d\u80fd\u53ea\u627e\u4e0b\u4e00\u5934\n\n\uff083\uff09\u4e3b\u732a\u627e\u5fe0\u732a\u51b3\u6597\uff0c\u5fe0\u732a\u4e00\u5b9a\u6389\u8840\n\n\uff084\uff09\u4f7f\u7528\u51b3\u6597\u7684\u732a\u53ef\u80fd\u81ea\u5df1\u6b7b\u4ea1\uff0c\u6b64\u65f6\u5b83\u7684\u56de\u5408\u5fc5\u987b\u7acb\u5373\u7ed3\u675f\n\n4.\u65e0\u61c8\u53ef\u51fb\u7684\u54cd\u5e94\u987a\u5e8f\u662f**\u4ece\u4f7f\u7528\u8fd9\u5f20\u9526\u56ca\u7684\u732a\u5f00\u59cb\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f**\uff0c\u4f9d\u6b21\u5f97\u5230\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\u673a\u4f1a\n\n5.\u4f7f\u7528\u6740\uff0c\u51b3\u6597\uff0c\u65e0\u61c8\u53ef\u51fb\u610f\u5473\u7740\u4f60\u8df3\u4e86\u8eab\u4efd\n\n6.\u9664\u4e86\u6843\uff0c\u4f7f\u7528\u5176\u4ed6\u724c\u53ef\u80fd\u5bfc\u81f4\u6700\u5de6\u8fb9\u53ef\u4ee5\u4f7f\u7528\u7684\u724c\u53d1\u751f\u53d8\u5316\n\n\uff081\uff09\u4f7f\u7528\u8bf8\u845b\u8fde\u5f29\uff0c\u4e4b\u524d\u626b\u8fc7\u7684\u6740\u8fd8\u80fd\u7528\n\n\uff082\uff09\u4f7f\u7528\u9526\u56ca\u724c\uff0c\u82e5\u4ed6\u732a\u54cd\u5e94\u65e0\u61c8\u53ef\u51fb\uff0c\u5c31\u8df3\u4e86\u8eab\u4efd\uff0c\u53ef\u80fd\u5bfc\u81f4\u4e4b\u524d\u7684\u6740\uff0c\u51b3\u6597\u627e\u5230\u5bf9\u8c61\uff0c\u53d8\u5f97\u53ef\u4ee5\u4f7f\u7528\n\n\uff083\uff09\u7efc\u4e0a\u8ff0\u4e24\u6761\uff0c\u6bcf\u4f7f\u7528\u4e00\u5f20\u724c\uff08\u9664\u4e86\u6843\uff09\uff0c\u5c31\u8981\u91cd\u65b0\u5c06\u4e0b\u6807\u56de\u5230\u6700\u5de6\u8fb9\uff0c\u518d\u626b\u4e00\u6b21\n\n7.\u7c7b\u53cd\u732a\u4e00\u5b9a\u53ea\u5bf9\u4e3b\u732a\u800c\u8a00\uff0c\u4e14\u5176\u672a\u8df3\u8eab\u4efd\n\n8.\u628a\u53cd\u732a\u6740\u6b7b\u4e86\uff08\u82e5\u6e38\u620f\u8fd8\u672a\u7ed3\u675f\uff09\u8981\u6478\u4e09\u5f20\u724c\uff0c\u4e3b\u732a\u6740\u6b7b\u4e86\u5fe0\u732a\u8981\u5f03\u6389\u5168\u90e8\u724c\uff0c\u5305\u62ec\u732a\u54e5\u8fde\u5f29\n\n9.\u724c\u5806\u53ea\u5269\u4e00\u5f20\u724c\u65f6\uff0c\u5c31\u4e00\u76f4\u6478\u8fd9\u5f20\u724c\n\n10.\u4e00\u5207\u6267\u884c\u7684\u524d\u63d0\u662f**\u6e38\u620f\u5c1a\u672a\u7ed3\u675f**\uff0c\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f\u7acb\u523b\u7ed3\u675f\uff0c\u56e0\u6b64\u5373\u4f7f\u4f1a\u64783\u5f20\u724c\u6216\u8005\u8fd8\u6709\u724c\u53ef\u4ee5\u7528\u4e5f\u4e0d\u7528\u6267\u884c\u4e86\n\n11.\u5bf9\u4e8e\u4e0b\u6807\u8981\u638c\u63e1\u597d,\u4f7f\u7528\u4e00\u5f20\u724c\u540e\u4e0b\u6807\u8981\u81ea\u51cf\uff08\u81ea\u51cf1\u6216\u76f4\u63a5\u53d8\u62100\uff09\uff0c\u53d8\u6210\u96f6\u610f\u5473\u7740\u91cd\u65b0\u627e\u6700\u5de6\u8fb9\u53ef\u4ee5\u4f7f\u7528\u7684\u724c\n\n12.\u732a\u7684\u6b7b\u4ea1\u5bfc\u81f4\u732a\u8ddd\u79bb\u7684\u6539\u53d8 \n\n\n\n~~\u6ce8\u610f\u4e86\u8fd9\u4e9b\u540e\uff0c\u5c31\u662f\u4e00\u987f\u4e71\u641e\u4e86233~~\n\n\u7ec6\u8282\u5341\u5206\u91cd\u8981\uff0c\u8981\u6709\u8010\u5fc3\uff0c\u4ed4\u7ec6\uff0c\u601d\u8003\u6e05\u695a\u540e\u518d\u6253\u4ee3\u7801\u3002\n\n\u4e0b\u9762\u8d34\u51fa\u6211\u7684\u4ee3\u7801\uff0c\u4e3a\u4e86\u4f7f\u7ed3\u6784\u6e05\u695a\uff0c\u53ef\u4ee5\u591a\u4f7f\u7528\u51fd\u6570\uff0c\u672c\u849f\u84bb\u4ee3\u7801\u4e11\uff0c\u4e0d\u8fc7\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u3002\n\n\u5f53\u7136\uff0c\u5982\u679c\u4f60\u53ea\u662f\u90e8\u5206\u9519\u8bef\uff0c\u8fd8\u662f\u53bb\u68c0\u67e5\u4e00\u4e0b\u6211\u521a\u521a\u8bf4\u7684\u51e0\u70b9\uff0c\u81ea\u5df1\u67e5\u9519\u4f1a\u66f4\u597d\u54e6\uff08\u4e0a\u9762\u7684\u591a\u770b\u51e0\u904d\uff09\n\n**Code\uff1a**\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\n\nstruct pig\n{\n    int shenfen;//1\u662f\u4e3b\u732a  2\u662f\u5fe0\u732a  3\u662f\u53cd\u732a\n    int life;//\u5269\u4f59\u4f53\u529b\uff0c\u521d\u59cb\u4e3a4\n    int first_kill;//\u6740 \u9996\u8981\u653b\u51fb\u5bf9\u8c61,0\u8868\u793a\u4e0d\u6740\u6216\u6740\u4e0d\u5230 \n    int first_fight;//\u51b3\u6597 \u9996\u8981\u653b\u51fb\u5bf9\u8c61\n    int num_kill;//\u6740 \u7684\u6570\u91cf \n    int num_shan;//\u95ea \u7684\u6570\u91cf \n    int num_peach;//\u6843 \u7684\u6570\u91cf\n    int num_cards;//\u624b\u724c\u6570\u91cf \n    int num_wuxiekeji;//\u65e0\u61c8\u53ef\u51fb \u6570\u91cf \n    int pig_before;//\u524d\u4e00\u5934\u6d3b\u7740\u7684\u732a \n    int pig_next;//\u4e0b\u4e00\u5934\u6d3b\u7740\u7684\u732a \n    int situation;//\u5bf9\u4e8e\u5168\u5c40\u7684\u72b6\u6001  0\u672a\u77e5 1\u662f\u8df3\u5fe0  2\u662f\u8df3\u53cd  3\u662f\u7c7b\u53cd  \n    bool is_it_alive;//\u6b7b\u4e86\u5417 \n    bool is_it_zhugeliannu;//\u6709\u6ca1\u6709\u732a\u54e5\u8fde\u5f29 \n    char had_cards[2010];//\u624b\u724c  \u4ece 1 \u5f00\u59cb \n}pigs[11];\n\nint tot_cards,tot_pigs,tot_fanpigs;//\u5361\u724c\u603b\u6570,\u732a\u603b\u6570,\u5b58\u6d3b\u7684\u53cd\u732a\u6570\u91cf\nint now_top,u=1;\nchar card[2010]; \nint winner;//1\u662f\u4e3b\u732a\u80dc\u5229  2\u662f\u53cd\u732a\u80dc\u5229 \n\nvoid faqi_kill(int,int);//\u53d1\u8d77\u6740 \nchar getcard();//\u4ecestdin\u8bfb\u5165\u4e00\u5f20\u724c \nvoid first_in(int);//\u5904\u7406\u521d\u59cb\u72b6\u6001 \nbool gameover();//\u6e38\u620f\u662f\u5426\u7ed3\u675f \nvoid round(int);//rank \u7684\u56de\u5408 \nvoid faqi_kill(int,int);// \u53d1\u8d77 \u6740  \nvoid die(int);//\u6709\u732a\u5f7b\u5e95\u6b7b\u4e86 \nchar pd_getcard(); //\u724c\u5806\u62ff\u724c \nvoid printans();//\u8f93\u51fa\u7b54\u6848 \nvoid faqi_fight(int,int);//\u53d1\u8d77\u51b3\u6597\nvoid faqi_nanzhuruqin(int); // \u53d1\u8d77\u5357\u732a\u5165\u4fb5 \nvoid faqi_wanjianqifa(int); // \u53d1\u8d77\u4e07\u7bad\u9f50\u53d1 \nbool ask_for_wuxiekeji(int,int);//\u7b49\u5f85\u54cd\u5e94\u65e0\u61c8\u53ef\u51fb \nvoid find_goal_to_fight(int);//\u67e5\u627e\u51b3\u6597\u5bf9\u8c61\uff08\u53cd\u732a\u4e0d\u9700\u8981\uff09 \nvoid find_goal_to_kill(int);//\u67e5\u627e\u6740\u5bf9\u8c61 \nvoid near_die(int,int);//\u6fd2\u6b7b\u72b6\u6001\u5904\u7406 \n\nvoid near_die(int killer,int sufferer)\n{\n    bool have_peach=false;\n    if(pigs[sufferer].num_peach>0)\n    {\n        register int i;\n        have_peach=true;\n        for(i=1;pigs[sufferer].had_cards[i]!='P';i++);\n     \tfor(i=i+1;i<=pigs[sufferer].num_cards;i++)\n        pigs[sufferer].had_cards[i-1]=pigs[sufferer].had_cards[i];\n        pigs[sufferer].num_peach--,pigs[sufferer].num_cards--,++pigs[sufferer].life;\n    }    \n    if(have_peach==false)\n    { \n        die(sufferer);\n        if(killer==1&&pigs[sufferer].shenfen==2)\n        {\n        \tpigs[1].is_it_zhugeliannu=pigs[1].num_cards=pigs[1].num_kill=pigs[1].num_peach=pigs[1].num_shan=pigs[1].num_wuxiekeji=0;\n\t\t    memset(pigs[1].had_cards,0,sizeof(pigs[1].had_cards));\n\t\t}\n        if(pigs[sufferer].shenfen==3)\n        {\n            for(register int j=1;j<=3;j++)\n            {\n                pigs[killer].had_cards[++pigs[killer].num_cards]=pd_getcard();\n                if(pigs[killer].had_cards[pigs[killer].num_cards]=='K')         \n                pigs[killer].num_kill++;\n                else if(pigs[killer].had_cards[pigs[killer].num_cards]=='D') \n                pigs[killer].num_shan++; \n                else if(pigs[killer].had_cards[pigs[killer].num_cards]=='P')\n                pigs[killer].num_peach++;\n                else if(pigs[killer].had_cards[pigs[killer].num_cards]=='J')\n                pigs[killer].num_wuxiekeji++;\n            }\n        }\n    }\n}\nvoid printans()\n{\n    cout<<(winner==1?\"MP\":\"FP\")<<endl;\n    for(register int i=1;i<=tot_pigs;i++)\n    {\n        if(pigs[i].is_it_alive==false)\n        {\n            cout<<\"DEAD\"<<endl;\n            continue;\n        }\n        else if(pigs[i].num_cards>0)\n        {\n            for(register int j=1;j<pigs[i].num_cards;j++)\n            cout<<pigs[i].had_cards[j]<<\" \";\n            cout<<pigs[i].had_cards[pigs[i].num_cards]<<endl;\n        }\n        else  cout<<endl;\n    }\n}\n\nchar pd_getcard()//\u724c\u5806\u62ff\u724c \n{\n    char c=card[now_top];\n    if(now_top!=1)\n\tnow_top--;\n    return c; \n}\nchar getcard()//\u4ecestdin\u8bfb\u5165\u4e00\u5f20\u724c \n{\n    char c=getchar();\n    for(;c<'A'||c>'Z';c=getchar());\n    return c;\n} \n\nvoid first_in(int rank)\n{\n    char temp[2];\n    scanf(\"%s\",temp);\n    if(temp[0]=='M')\n    pigs[rank].shenfen=1,pigs[rank].situation=1;\n    else if(temp[0]=='Z')\n    pigs[rank].shenfen=2;\n    else if(temp[0]=='F')\n    pigs[rank].shenfen=3,pigs[rank].first_fight=1,tot_fanpigs++;   //\u53cd\u732a\u51b3\u6597\u6c38\u8fdc\u627e\u4e3b\u732a \n    for(register int i=1;i<=4;i++)\n    {\n        pigs[rank].had_cards[i]=getcard();\n        if(pigs[rank].had_cards[i]=='K')\n        pigs[rank].num_kill++;\n        else if(pigs[rank].had_cards[i]=='D')\n        pigs[rank].num_shan++; \n        else if(pigs[rank].had_cards[i]=='P')\n        pigs[rank].num_peach++;\n        else if(pigs[rank].had_cards[i]=='J')\n        pigs[rank].num_wuxiekeji++;\n    }\n    pigs[rank].num_cards=4,pigs[rank].life=4;\n    pigs[rank].pig_before=(rank==1?tot_pigs:rank-1);\n    pigs[rank].pig_next=(rank==tot_pigs?1:rank+1);\n    pigs[rank].is_it_alive=true;\n} \n\nbool gameover()\n{\n    if(tot_fanpigs==0)\n    {\n        winner=1;\n        return true; \n    } \n    if(pigs[1].is_it_alive==false)\n    {\n        winner=2;\n        return true;\n    }\n    return false;\n}\n\nvoid die(int rank)\n{\n    pigs[rank].is_it_alive=false;\n    if(rank==1)\n    winner=2,printans(),exit(0);\n    if(pigs[rank].shenfen==3)\n    if(--tot_fanpigs==0)\n    winner=1,printans(),exit(0);\n    pigs[pigs[rank].pig_before].pig_next=pigs[rank].pig_next;\n    pigs[pigs[rank].pig_next].pig_before=pigs[rank].pig_before;\n}\n\nvoid find_goal_to_kill(int rank)  //\u7406\u6e05\u6253\u7684\u76ee\u6807 \n{\n    if(pigs[rank].shenfen==2)\n    pigs[rank].first_kill=(pigs[pigs[rank].pig_next].situation==2?pigs[rank].pig_next:0);\n    else if(pigs[rank].shenfen==1)\n    pigs[rank].first_kill=(pigs[pigs[rank].pig_next].situation==2||pigs[pigs[rank].pig_next].situation==3?pigs[rank].pig_next:0);\n    else if(pigs[rank].shenfen==3)\n    pigs[rank].first_kill=(pigs[pigs[rank].pig_next].situation==1?pigs[rank].pig_next:0);\n}\n\nvoid find_goal_to_fight(int rank)\n{\n    for(register int i=pigs[rank].pig_next;i!=rank;i=pigs[i].pig_next)\n    {\n        if((rank==1&&(pigs[i].situation==2||pigs[i].situation==3))||(pigs[i].situation==2&&pigs[rank].shenfen==2))\n        {\n            pigs[rank].first_fight=i;\n            return;\n        }\n    }\n    pigs[rank].first_fight=0;\n}\n \nvoid round(int rank)  //rank\u7684\u56de\u5408  \n{                                                                             \n    for(register int i=1;i<=2;i++)\n    {\n        pigs[rank].had_cards[++(pigs[rank].num_cards)]=pd_getcard();\n        if(pigs[rank].had_cards[pigs[rank].num_cards]=='K')\n        pigs[rank].num_kill++;\n        else if(pigs[rank].had_cards[pigs[rank].num_cards]=='D')\n        pigs[rank].num_shan++; \n        else if(pigs[rank].had_cards[pigs[rank].num_cards]=='P')\n        pigs[rank].num_peach++;\n        else if(pigs[rank].had_cards[pigs[rank].num_cards]=='J')\n        pigs[rank].num_wuxiekeji++;\n    }\n    int sum_kill=0;//\u6ca1\u6709\u732a\u54e5\u8fde\u5f29\u5c31\u53ea\u80fd\u6740\u4e00\u6b21                                                   \n    for(register int i=1;i<=pigs[rank].num_cards&&pigs[rank].num_cards>0;i++) \n    {\n        if(pigs[rank].had_cards[i]=='Z')\n        {\n            register int j;\n            for(j=i+1;j<=pigs[rank].num_cards;j++)\n            pigs[rank].had_cards[j-1]=pigs[rank].had_cards[j];\n            pigs[rank].num_cards--,pigs[rank].is_it_zhugeliannu=1,i=0;               \n        }\n        if(pigs[rank].had_cards[i]=='F')\n        {\n            if(pigs[rank].shenfen!=3)\n            find_goal_to_fight(rank);\n            if(pigs[rank].first_fight!=0)\n            {\n                register int j;\n                for(j=i+1;j<=pigs[rank].num_cards;j++)\n                pigs[rank].had_cards[j-1]=pigs[rank].had_cards[j];\n                pigs[rank].num_cards--,faqi_fight(rank,pigs[rank].first_fight),i=0;\n                if(pigs[rank].is_it_alive==false)   return; //\u91cd\u8981,\u5982\u679c\u51b3\u6597\u6b7b\u4e86\u5c31\u7acb\u5373\u7ed3\u675f\u56de\u5408\n            }\n        } \n        if(pigs[rank].had_cards[i]=='K'&&(sum_kill==0||pigs[rank].is_it_zhugeliannu==1))\n        {\n            find_goal_to_kill(rank);\n            if(pigs[rank].first_kill!=0)\n            {\n                register int j;\n                for(j=i+1;j<=pigs[rank].num_cards;j++)\n                pigs[rank].had_cards[j-1]=pigs[rank].had_cards[j];\n                pigs[rank].num_cards--,pigs[rank].num_kill--;\n                faqi_kill(rank,pigs[rank].first_kill),sum_kill++,i=0;\n            }\n        }\n        if(pigs[rank].had_cards[i]=='P'&&pigs[rank].life<4)\n        {\n            register int j;\n            for(j=i+1;j<=pigs[rank].num_cards;j++)\n            pigs[rank].had_cards[j-1]=pigs[rank].had_cards[j];\n            pigs[rank].num_cards--,pigs[rank].num_peach--,pigs[rank].life++,i--;\n        }\n        if(pigs[rank].had_cards[i]=='N')\n        {\n            register int j;\n            for(j=i+1;j<=pigs[rank].num_cards;j++)\n            pigs[rank].had_cards[j-1]=pigs[rank].had_cards[j];\n            pigs[rank].num_cards--,faqi_nanzhuruqin(rank),i=0;           \n        }\n        if(pigs[rank].had_cards[i]=='W')\n        {\n            register int j;\n            for(j=i+1;j<=pigs[rank].num_cards;j++)\n            pigs[rank].had_cards[j-1]=pigs[rank].had_cards[j];\n            pigs[rank].num_cards--,faqi_wanjianqifa(rank),i=0;            \n        }\n    }\n}\n\nvoid faqi_fight(int from,int goal)\n{\n    register int i,fi,gi;\n    if(pigs[from].situation==0||pigs[from].situation==3)\n    pigs[from].situation=(pigs[goal].situation==1?2:1);\n    bool can_miss=ask_for_wuxiekeji(from,pigs[goal].situation);\n    if(can_miss==true)   return;\n    if(pigs[goal].shenfen==2&&from==1)  //\u90a3\u4e48\u6389\u8840 \n    {\n        if(--pigs[goal].life<=0)\n        near_die(from,goal);\n        return;\n    }\n    i=goal;\n    while(pigs[i].num_kill>0)\n    {\n        for(fi=1;fi<=pigs[i].num_cards&&pigs[i].had_cards[fi]!='K';fi++);\n        for(register int k=fi+1;k<=pigs[i].num_cards;k++)\n        pigs[i].had_cards[k-1]=pigs[i].had_cards[k];\n        pigs[i].num_cards--,pigs[i].num_kill--;\n        i=(i==goal?from:goal);\n    }\n    int failer=i,winner_in=(from==failer?goal:from);\n    if(--pigs[failer].life<=0)\n    near_die(winner_in,failer);\n}\n\nbool ask_for_wuxiekeji(int rank,int situation)\n{\n    if((situation==0)||situation==3)//\u672a\u8868\u660e\u8eab\u4efd\u7684\u732a\u4e0e\u7c7b\u53cd\u732a\u4e0d\u4f1a\u6709\u732a\u54cd\u5e94\u65e0\u61c8\u53ef\u51fb \n    return false;\n    for(register int i=rank;;i=pigs[i].pig_next)\n    {\n        if(pigs[i].num_wuxiekeji>0)\n        {\n            if(situation==1&&(pigs[i].shenfen==1||pigs[i].shenfen==2))\n            {\n                register int j;\n                for(j=1;j<=pigs[i].num_cards&&pigs[i].had_cards[j]!='J';j++);\n                for(j=j+1;j<=pigs[i].num_cards;j++)\n                pigs[i].had_cards[j-1]=pigs[i].had_cards[j];\n                pigs[i].num_cards--,pigs[i].num_wuxiekeji--;\n                if(pigs[i].situation==0||pigs[i].situation==3)\n                pigs[i].situation=1;\n                return !ask_for_wuxiekeji(i,2);//\u5411\u76f8\u53cd\u8eab\u4efd\u6c42\u65e0\u61c8\u53ef\u51fb \n            }\n            else if(situation==2&&pigs[i].shenfen==3)\n            {\n                register int j;\n                for(j=1;j<=pigs[i].num_cards&&pigs[i].had_cards[j]!='J';j++);\n                for(j=j+1;j<=pigs[i].num_cards;j++)\n                pigs[i].had_cards[j-1]=pigs[i].had_cards[j];\n                pigs[i].num_cards--,pigs[i].num_wuxiekeji--;\n                if(pigs[i].situation==0||pigs[i].situation==3)\n                pigs[i].situation=2;\n                return !ask_for_wuxiekeji(i,1);//\u5411\u76f8\u53cd\u8eab\u4efd\u6c42\u65e0\u61c8\u53ef\u51fb \n            }\n        }\n        if(i==pigs[rank].pig_before)//\u9012\u5f52\u8fb9\u754c \n        return false;\n    }\n}\n\nvoid faqi_nanzhuruqin(int from)\n{\n    for(register int i=pigs[from].pig_next;i!=from;i=pigs[i].pig_next)\n    {\n        bool can_miss=ask_for_wuxiekeji(from,pigs[i].situation);\n        if(can_miss==true)   continue;\n        if(pigs[i].num_kill>0)\n        {\n            register int j;\n            for(j=1;pigs[i].had_cards[j]!='K';j++);\n            for(j=j+1;j<=pigs[i].num_cards;j++)\n            pigs[i].had_cards[j-1]=pigs[i].had_cards[j];\n            pigs[i].num_cards--,pigs[i].num_kill--;\n            can_miss=true;\n        }\n        if(can_miss==true)   continue;\n        if(i==1&&pigs[from].situation==0)\n        pigs[from].situation=3;\n        if(--pigs[i].life<=0)\n        near_die(from,i);\n    }\n}\n\nvoid faqi_wanjianqifa(int from)\n{\n    for(register int i=pigs[from].pig_next;i!=from;i=pigs[i].pig_next)\n    {\n        bool can_miss=ask_for_wuxiekeji(from,pigs[i].situation);\n        if(can_miss==true)   continue;\n        if(pigs[i].num_shan>0)\n        {\n            register int j;\n            for(j=1;pigs[i].had_cards[j]!='D';j++);\n            for(j=j+1;j<=pigs[i].num_cards;j++)\n            pigs[i].had_cards[j-1]=pigs[i].had_cards[j];\n            pigs[i].num_cards--,pigs[i].num_shan--;\n            can_miss=true;\n        }\n        if(can_miss==true)   continue;\n        if(i==1&&pigs[from].situation==0)\n        pigs[from].situation=3;\n        if(--pigs[i].life<=0)\n        near_die(from,i);\n    }\n}\nvoid faqi_kill(int from,int goal)//\u53d1\u8d77 \u6740 \n{\n    register int i;\n    if(pigs[from].situation==0||pigs[from].situation==3)\n    pigs[from].situation=(pigs[goal].situation==1?2:1);\n    if(pigs[goal].num_shan>0)\n    {\n        for(i=1;pigs[goal].had_cards[i]!='D';i++);\n        for(i=i+1;i<=pigs[goal].num_cards;i++)\n        pigs[goal].had_cards[i-1]=pigs[goal].had_cards[i];\n        pigs[goal].num_shan--,pigs[goal].num_cards--;\n    }\n    else if(--pigs[goal].life<=0) \n    near_die(from,goal);\n}\n\nint main()\n{\n    cin>>tot_pigs>>tot_cards;\n    now_top=tot_cards;\n    for(register int i=1;i<=tot_pigs;i++)\n    pigs[i].num_kill=pigs[i].num_peach=pigs[i].num_shan=pigs[i].num_wuxiekeji=0;\n    for(register int i=1;i<=tot_pigs;i++)\n    first_in(i); //\u521d\u59cb\u5316\u6bcf\u5934\u732a \n    for(register int i=tot_cards;i>=1;i--)\n    card[i]=getcard();  //\u521d\u59cb\u5316\u724c\u5806                  \n    while(gameover()==false)\n    round(u),u=pigs[u].pig_next;\n    printans();\n    return 0; \n}\n```\n\n\n",
        "postTime": 1518941318,
        "uid": 68975,
        "name": "\u5b66\u65e0\u6b62\u5883",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "## \u732a\u5e74\u603b\u5f97\u5199\u4e00\u9053\u548c\u732a\u6709\u5173\u7684\u5927\u6a21\u62df\u5427\n\n### \u7b2c\u4e00\u6b21\u7ed9\u9ed1\u9898\u5199\u9898\u89e3\uff0c\u53ef\u80fd\u5199\u5f97\u4e0d\u600e\u4e48\u597dqwq\n\n\u8fd9\u9053\u9898\u5c31\u662f\u5927\u6a21\u62df\uff0c\u6ca1\u6709\u4efb\u4f55\u65b9\u6cd5\u53ef\u8a00\uff0c\u5927\u7ea6$300$\u884c\u5de6\u53f3\u7684\u4ee3\u7801\u3002\u4e00\u5b9a\u8981\u8010\u5fc3\uff0c\u4e0d\u65ad\u627e\u51fa\u7a0b\u5e8f\u4e2d\u7684\u5c0f$BUG$\uff0c\u7136\u540e\u624d\u80fd\u89e3\u51b3\u3002\u6570\u636e\u53ef\u4ee5\u4ece$loj.ac$\u4e0b\u8f7d\u3002\n\n\u524d\u9762\u7684\u9898\u89e3\u5df2\u7ecf\u628a\u5f88\u591a\u4e1c\u897f\u8bf4\u5f97\u5f88\u660e\u767d\u4e86\uff0c\u6211\u5c31\u6765\u8bf4\u4e00\u8bf4\u6211\u6389\u8fc7\u7684\u4e00\u4e9b\u5751\u5427\u3002\n\n\t1.\u51b3\u6597\u53ef\u4ee5\u5bf9\u4efb\u4f55\u732a\u91ca\u653e\uff0c\u4e0d\u9700\u8981\u76f8\u90bb\uff0c\u53cd\u732a\u5fc5\u5b9a\u5bf9\u4e3b\u732a\u91ca\u653e\uff0c\u5176\u4ed6\u732a\u5bf9\u540e\u9762\u4e00\u53ea\u4e0e\u5b83\u654c\u5bf9\u7684\u732a\u91ca\u653e\u3002\n    2.\u65e0\u61c8\u53ef\u51fb\u53ef\u4ee5\u5faa\u73af\u91ca\u653e\uff0c\u6700\u597d\u7528\u9012\u5f52\u5b9e\u73b0\u3002\n    3.\u8981\u5b9e\u65f6\u66f4\u65b0\u6bcf\u53ea\u732a\u7684\u663e\u73b0\u8eab\u4efd\u548c\u5b58\u6d3b\u60c5\u51b5\uff0c\u9047\u5230\u6e38\u620f\u7ed3\u675f\u53ca\u65f6\u8fd4\u56de\u3002\n    4.\u9664\u4e86\u6843\u4ee5\u5916\uff0c\u5176\u4ed6\u6240\u6709\u7684\u724c\u91ca\u653e\u540e\u90fd\u5fc5\u987b\u4ece\u7b2c\u4e00\u5f20\u5f00\u59cb\u91cd\u65b0\u6a21\u62df\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u724c\u53ef\u80fd\u53c8\u80fd\u591f\u4f7f\u7528\u4e86\u3002\n    5.\u724c\u5806\u6ca1\u6709\u724c\u65f6\uff0c\u8981\u4e0d\u65ad\u6700\u540e\u4e00\u5f20\u724c\u3002\n    \n\u4e0b\u9762\u662f\u7a0b\u5e8f\u5206\u6bb5\u8bb2\u89e3\uff1a\n\n### $Part0:$\u5b9a\u4e49\u548c\u5c0f\u51fd\u6570\n\n\u5173\u4e8e\u6bcf\u53ea\u732a\u7684$struct$\u5b9a\u4e49\n\n```\nstruct player{\n\tint id;//\u771f\u5b9e\u8eab\u4efd\n\tint hp;//\u751f\u547d\n\tint cnt;//\u724c\u6570\n\tchar card[M];//\u724c\n\tint pre;//\u524d\u9762\u7684\u90a3\u53ea\u732a\n\tint nxt;//\u540e\u9762\u7684\u90a3\u53ea\u732a\n\tint pigid;//\u66b4\u9732\u8eab\u4efd\n\tbool special;//\u662f\u5426\u4e3a\u7c7b\u53cd\u732a\n\tbool weapon;//\u662f\u5426\u88c5\u5907\u6b66\u5668\n}pig[N];\n```\n\n\u591a\u7528\u7528\u5c0f\u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u53d8\u5f97\u66f4\u52a0\u7b80\u6d01\uff0c\u4ece\u800c\u4e0d\u81f3\u4e8e\u8fbe\u5230$600-1000$\u884c\u7684\u6050\u6016\u6c34\u5e73\u3002\n\n#### $a.$\u6253\u5370\u7b2c$i$\u53ea\u732a\u7684\u624b\u724c\uff1a\n\n\u5927\u5bb6\u53ef\u80fd\u4f1a\u628a\u5b83\u5199\u8fdb\u4e3b\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u53ea\u4f1a\u7528\u5230\u4e00\u6b21\uff0c\u4f46\u662f\u5728\u8c03\u8bd5\u4e2d\u8fd9\u6bb5\u8bed\u53e5\u53ef\u4ee5\u5e2e\u4f60\u5927\u5fd9\u3002\n\n```\nvoid printcard(int i){\n\tbool first=true;\n\tfor (int j=1;j<=pig[i].cnt;++j){\n\t\tif (pig[i].card[j]=='X') continue;\n\t\t\tif (!first){\n\t\t\t\tprintf(\" \");\n\t\t\t}else first=false;\n\t\tprintf(\"%c\",pig[i].card[j]);\n\t}\n\tprintf(\"\\n\");\n}\n```\n\n#### $b.$\u5bfb\u627e\u5e76\u6263\u9664\u5361\u724c\uff1a\n\n\u627e\u5230\u5361\u724c\u5c31\u8fd4\u56de$true$\u5e76\u6263\u9664\uff0c\u6ca1\u627e\u5230\u5c31\u8fd4\u56de$false$\u3002\n\n```\nint findcard(int x,char card){//x\u4ee3\u8868\u662f\u54ea\u5934\u732a\uff0ccard\u8868\u793a\u5361\u724c\u7b26\u53f7\n\tfor (int i=1;i<=pig[x].cnt;++i){\n\t\tif (pig[x].card[i]==card){\n\t\t\tpig[x].card[i]='X';\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n```\n\n#### $c.$\u6478\u724c\uff1a\n\n\u8fd9\u4e2a\u5982\u679c\u4e0d\u5199\u5230\u8fc7\u7a0b\u91cc\u53bb\u7684\u8bdd\uff0c\u90a3\u6211\u5f88\u4f69\u670d\u4f60\u7684\u610f\u5fd7\u3002\n\n```\nvoid getcard(int i){\n\tif (top>m) top=m;//\u724c\u5806\u6ca1\u724c\u4e86\uff0c\u5c31\u4e0d\u65ad\u6478\u6700\u4e0a\u9762\u4e00\u5f20\n\tpig[i].cnt++;\n\tpig[i].card[pig[i].cnt]=cards[top];\n\ttop++;//top\u8868\u793a\u724c\u5806\u7684\u9876\u90e8\n}\n```\n### $Part1:$\u6263\u8840\u7684\u5b9e\u73b0\n\n\u8fd9\u4e00\u6b21\uff0c\u6211\u4eec\u628a\u6263\u8840\u548c\u6b7b\u4ea1\u7ed3\u7b97\u653e\u5728\u4e00\u5757\u8fd0\u884c\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u5934\u732a\u6b7b\u4e86\uff0c\u5982\u4f55\u66f4\u65b0\u6574\u4e2a\u73af\uff08\u94fe\u8868\uff1f\uff09\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\uff0c\u8fd9\u5c31\u662f\u6211\u4e3a\u4ec0\u4e48\u8981\u5f00\u8bbe$nxt$\u548c$pre$\u4e86\uff0c\u4e00\u4e2a\u524d\u5bfc\u548c\u540e\u7ee7\u53ef\u4ee5\u89e3\u51b3\u6240\u6709\u95ee\u9898\u3002\n\n$pig[pig[i].pre].nxt=pig[i].nxt;$\u5b83\u524d\u9762\u7684\u732a\u6307\u5411\u5b83\u540e\u9762\u7684\u732a\n\n$pig[pig[i].nxt].pre=pig[i].pre;$\u5b83\u540e\u9762\u7684\u732a\u6307\u5411\u5b83\u524d\u9762\u7684\u732a\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7528\u66b4\u529b$O(n)$\u6c42\u89e3\u7684\u8bdd\uff0c\u4e5f\u4e0d\u4f1a\u8d85\u65f6\u3002\n\n```\nvoid dechp(int x,int i){//x\u662f\u4f24\u5bb3\u6765\u6e90\u8005\uff0ci\u662f\u4f24\u5bb3\u627f\u53d7\u8005\n\tpig[i].hp--;//\u6263\u8840\n\twhile (pig[i].hp<=0 && findcard(i,'P')){\n\t\tpig[i].hp++;//\u5982\u679c\u6709\u6843\u8d76\u5feb\u7528\n\t}\n\tif (pig[i].hp<=0){//\u5982\u679c\u8840\u8fd8\u662f\u6ca1\u52300\u5c31\u56de\u5929\u4e4f\u672f\u4e86\n\t\tpig[i].cnt=0;\n\t\tpig[i].weapon=false;//\u6e05\u7a7a\u8fd9\u4e2a\u4eba\u7684\u8d44\u6599\n\t\tif (pig[i].id==1){\n\t\t\tgameover=true;//\u4e3b\u732a\u6b7b\u4e86\u6e38\u620f\u7acb\u523b\u7ed3\u675f\n\t\t\treturn;\n\t\t}else if (pig[i].id==2){\n\t\t\tif (pig[x].id==1){//\u4e3b\u732a\u6740\u4e86\u5fe0\u732a\uff0c\u6309\u9898\u76ee\u8981\u6c42\u6e05\u7a7a\u4e3b\u732a\u7684\u624b\u724c\n\t\t\t\tpig[x].cnt=0;\n\t\t\t\tpig[x].weapon=false;//\u522b\u5fd8\u4e86\u6e05\u7a7a\u6b66\u5668\n\t\t\t}\n\t\t}else if (pig[i].id==3){\n\t\t\tFPcnt--;//\u53cd\u732a\u7684\u6570\u91cf\u51cf1\n\t\t\tif (FPcnt==0){//\u5982\u679c\u5df2\u7ecf\u6ca1\u6709\u53cd\u732a\u7684\u8bdd\n\t\t\t\tgameover=true;//\u6e38\u620f\u7ed3\u675f\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgetcard(x);getcard(x);getcard(x);//\u6478\u724c\uff0c\u8bb0\u5f97\u5343\u4e07\u4e0d\u8981\u653e\u5728\u4e0a\u9762\u7684if\u8bed\u53e5\u524d\u9762\n\t\t}\n\t\tpig[pig[i].pre].nxt=pig[i].nxt;//\u66f4\u65b0\u524d\u9a71\u540e\u7ee7\n\t\tpig[pig[i].nxt].pre=pig[i].pre;\n\t}\n}\n```\n### $Part2:$\u5173\u7cfb\u7684\u5b9e\u73b0\n\n\u4e0b\u9762\u51fd\u6570\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u8868\u793a\u8be2\u95ee$x$\u548c$y$\u662f\u4e0d\u662f\u654c\u4eba\uff0c\u7b2c\u4e8c\u4e2a\u5219\u8be2\u95ee\u4e24\u4eba\u662f\u4e0d\u662f\u540c\u4f19\uff0c\u7b2c\u4e09\u4e2a\u8868\u793a$x$\u5411$y$\u732e\u6bb7\u52e4\uff0c\u7b2c\u56db\u4e2a\u8868\u793a$x$\u5411$y$\u8868\u654c\u610f\u3002\n\n\u8be2\u95ee\u6216\u53d8\u66f4\u7684\u65f6\u5019\u8981\u4ee5$x$\u51fa\u53d1\uff0c\u5e94\u5f53\u5224\u65ad$x$\u7684\u771f\u5b9e\u8eab\u4efd\u548c$y$\u7684\u663e\u9732\u8eab\u4efd\u3002$y$\u6ca1\u6709\u663e\u9732\u8eab\u4efd\u5219\u4e0d\u80fd\u8fdb\u884c\u4e0b\u53bb\u3002\n\n```\nbool enemy(int x,int y){\n\tif (pig[x].id==1 && pig[y].special==true) return true;//\u5bf9\u4e3b\u732a\u800c\u8a00\uff0c\u7c7b\u53cd\u732a\u662f\u654c\u4eba\n\tif (pig[y].pigid==0) return false;//y\u6ca1\u6709\u663e\u9732\u8eab\u4efd\uff0c\u8fd4\u56defalse\n\tif (pig[x].id!=3 && pig[y].pigid==3) return true;//\u5bf9\u5176\u4ed6\u732a\u800c\u8a00\uff0c\u8eab\u4efd\u4e0d\u7b26\u7684\u662f\u654c\u4eba\n\tif (pig[x].id==3 && pig[y].pigid!=3) return true;\n\treturn false;\n}\nbool friendly(int x,int y){//\u540c\u7406\n\tif (pig[y].pigid==0) return false;\n\tif (pig[x].id!=3 && pig[y].pigid!=3) return true;\n\tif (pig[x].id==3 && pig[y].pigid==3) return true;\n\treturn false;\t\n}\nvoid getfriend(int x,int y){\n\tif (pig[y].pigid==0) return;//\u5982\u679cy\u6ca1\u6709\u663e\u9732\u8eab\u4efd\uff0c\u4ea4\u670b\u53cb\u6ca1\u6709\u610f\u4e49\n\tif (pig[y].pigid!=3) pig[x].special=false,pig[x].pigid=1;//\u5426\u5219\u5c31\u663e\u9732\u548cy\u76f8\u540c\u7684\u8eab\u4efd\uff0c\u8bb0\u5f97\u5904\u7406\u7c7b\u53cd\u732a\u7684\u5934\u8854\u3002\n\tif (pig[y].pigid==3) pig[x].special=true,pig[x].pigid=3;\n}\nvoid getenemy(int x,int y){//\u540c\u7406\n\tif (pig[y].pigid==0) return;\n\tif (pig[y].pigid!=3) pig[x].pigid=3,pig[x].special=true;\n\tif (pig[y].pigid==3) pig[x].pigid=1,pig[x].special=false;\n}\n```\n\n### $Part3:$\u90e8\u5206\u5361\u724c\u7684\u4f7f\u7528\n\n\u8fd9\u91cc\u7684\u90e8\u5206\u5361\u724c\uff0c\u5305\u62ec\uff1a\n\n\u4e07\u7bad\u9f50\u53d1\uff0c\u51b3\u6597\uff0c\u5357\u732a\u5165\u4fb5\uff0c\u6740\uff08\u95ea\uff09\uff0c\u65e0\u61c8\u53ef\u51fb\n\n#### $a.$\u6740\uff08\u95ea\uff09\n\n\u76f8\u5bf9\u4e8e\u5176\u4ed6\u51e0\u90e8\u5206\uff0c\u8fd9\u4e00\u90e8\u5206\u76f8\u5bf9\u5bb9\u6613\u4e9b\u3002\n\n```\nvoid usecard_k(int from,int to){\n\tgetenemy(from,to);//\u8fd9\u662f\u4e00\u79cd\u8868\u654c\u610f\u7684\u884c\u4e3a\n\tbool p=findcard(to,'D');//\u5c1d\u8bd5\u53bb\u76ee\u6807\u7684\u724c\u5e93\u5bfb\u627e\u95ea\n\tif (p==false){\n\t\tdechp(from,to);//\u627e\u4e0d\u5230\uff0c\u5c31\u6263\u8840\n\t}\n}\n```\n#### $b.$\u51b3\u6597\n\n\u51b3\u6597\u88ab\u65e0\u61c8\u53ef\u51fb\u6321\u4f4f\u7684\u60c5\u51b5\u6211\u4eec\u5728\u8fd9\u91cc\u6682\u4e0d\u8ba8\u8bba\uff0c\u8fd9\u91cc\u8ba8\u8bba\u7684\u662f\u5982\u679c$from$\u5bf9$to$\u7684\u51b3\u6597\u751f\u6548\u7684\u60c5\u51b5\u3002\n\n```\nvoid usecard_f(int from,int to){\n\tif (pig[from].id==1 && pig[to].id==2){//\u5982\u679c\u662f\u4e3b\u732a\u5bf9\u5fe0\u732a\u4e0b\u7684\u624b\uff0c\u5fe0\u732a\u4e0d\u4f1a\u8fd8\u624b\n\t\tdechp(from,to);\n\t\treturn;\n\t}\n\twhile (true){\n\t\tbool flag1=findcard(to,'K');//\u8f6e\u6d41\u5728\u4e24\u4eba\u7684\u724c\u5e93\u91cc\u5bfb\u627e\u6740\uff0c\u627e\u4e0d\u5230\u5c31\u6263\u8840\uff0c\u9000\u51fa\u3002\n\t\tif (!flag1){\n\t\t\tdechp(from,to);\n\t\t\treturn;\n\t\t}\n\t\tbool flag2=findcard(from,'K');\n\t\tif (!flag2){\n\t\t\tdechp(to,from);//\u5982\u679c\u81ea\u5df1\u51fa\u7684\u724c\u5bb3\u4e86\u81ea\u5df1\uff0c\u5219\u9700\u8981\u628a\u4e24\u4eba\u7684\u653b\u51fb\u5173\u7cfb\u53cd\u4e00\u4e0b\n\t\t\treturn;\n\t\t}\n\t}\n}\n```\n\n#### $c.$\u5357\u732a\u5165\u4fb5\uff0c\u4e07\u7bad\u9f50\u53d1\n\n\u8fd9\u4e24\u4e2a\u53ef\u4ee5\u653e\u5728\u4e00\u8d77\u8ba8\u8bba\u3002\n\n```\nvoid usecard_n(int from,int to){//\u5357\u732a\u5165\u4fb5\n\twhile (true){\n\t\tif (gameover) return;//\u6c38\u8fdc\u8981\u6ce8\u610f\u5b9e\u65f6\u66f4\u65b0\u6e38\u620f\u662f\u5426\u7ed3\u675f\n\t\tif (!usecard_j(from,to,0)){//\u5982\u679c\u6ca1\u6709\u88ab\u65e0\u61c8\u53ef\u51fb\u6321\u4f4f\u7684\u8bdd\n\t\t\tbool flag=findcard(to,'K');//\u5728\u724c\u5e93\u4e2d\u5bfb\u627e\u6740\n\t\t\tif (!flag){\n\t\t\t\tif (pig[to].id==1 && pig[from].pigid==0){\n\t\t\t\t\tpig[from].special=true;//\u5982\u679c\u662f\u5fe0\u732a\u8bef\u4f24\u4e86\u4e3b\u732a\uff0c\u4e14\u5fe0\u732a\u8fd8\u672a\u8868\u9732\u8eab\u4efd\uff0c\u5219\u89c6\u4e3a\u7c7b\u53cd\u732a\n\t\t\t\t}\n\t\t\t\tdechp(from,to);//\u6263\u8840\n\t\t\t}\n\t\t}\n\t\tto=pig[to].nxt;\t\n\t\tif (to==from) return;//\u4e00\u5708\u8f6e\u5b8c\uff0c\u5c31\u9000\u51fa\n\t}\n}\nvoid usecard_w(int from,int to){//\u4e07\u7bad\u9f50\u53d1\n\twhile (true){\n\t\tif (gameover) return;\n\t\tif (!usecard_j(from,to,0)){\n\t\t\tbool flag=findcard(to,'D');//\u628a\u8fd9\u91cc\u6539\u6210D\u5c31\u53ef\u4ee5\u4e86\n\t\t\tif (!flag){\n\t\t\t\tif (pig[to].id==1 && pig[from].pigid==0){\n\t\t\t\t\tpig[from].special=true;\n\t\t\t\t}\n\t\t\t\tdechp(from,to);\n\t\t\t}\n\t\t}\n\t\tto=pig[to].nxt;\t\n\t\tif (to==from) return;\n\t}\n}\n```\n\n#### $d.$\u65e0\u61c8\u53ef\u51fb\n\n\u8fd9\u91cc\u5c31\u663e\u5f97\u6bd4\u8f83\u590d\u6742\u4e86\u3002\u6211\u4eec\u7528$from$\u8868\u793a\u9526\u56ca\u724c\u7684\u53d1\u51fa\u8005\uff0c$to$\u8868\u793a\u9526\u56ca\u724c\u7684\u627f\u53d7\u8005\uff0c$last$\u8868\u793a\u4e0a\u4e00\u4e2a\u65e0\u61c8\u53ef\u51fb\u7684\u53d1\u51fa\u8005\u3002$last$\u521d\u59cb\u4e3a$0$\u3002\n\n```\nbool usecard_j(int from,int to,int last){\n\tint now=from;//\u8f6e\u6d41\u5f00\u59cb\u51fa\u65e0\u61c8\u53ef\u51fb\n\twhile (true){\n\t\tif ((last==0 && friendly(now,to)) || (last!=0 && enemy(now,last))){//\u5982\u679c\u4f60\u548c\u9526\u56ca\u724c\u7684\u627f\u53d7\u8005\u662f\u670b\u53cb\u6216\u8005\u548c\u4e0a\u4e00\u5f20\u65e0\u61c8\u53ef\u51fb\u7684\u53d1\u51fa\u8005\u662f\u654c\u4eba\uff0c\u90a3\u4e48\u5c31\u662f\u7528\u65e0\u61c8\u53ef\u51fb\u3002last\u7684\u503c\u786e\u5b9a\u4e86\u662f\u54ea\u79cd\u60c5\u51b5\n\t\t\tif (findcard(now,'J')){//\u5982\u679c\u6709\u65e0\u61c8\u53ef\u51fb\u53ef\u4ee5\u51fa\n\t\t\t\tif (last==0 && friendly(now,to)) getfriend(now,to);\n\t\t\t\tif (last!=0 && enemy(now,last)) getenemy(now,last);//\u670b\u53cb\u548c\u654c\u4eba\u5173\u7cfb\u66f4\u65b0\uff0c\u56e0\u4e3a\u8fd9\u662f\u732e\u6bb7\u52e4\u548c\u8868\u654c\u610f\u884c\u4e3a\n\t\t\t\tif (!usecard_j(pig[now].nxt,to,now)){\n\t\t\t\t\treturn true;//\u5982\u679c\u6ca1\u6709\u88ab\u5176\u4ed6\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\uff0c\u90a3\u4e48\u8fd9\u5f20\u65e0\u61c8\u53ef\u51fb\u5c31\u662f\u6709\u6548\u7684\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnow=pig[now].nxt;\n\t\tif (now==from) return false;//\u7ed5\u5b8c\u4e00\u5708\u5c31\u9000\u51fa\n\t}\n}\n```\n\n### $Part4:$\u8bfb\u5165/\u521d\u59cb\u5316/\u7ed3\u675f\u90e8\u5206\n\n\u55ef\uff0c\u6ca1\u9519\uff0c\u6211\u4eec\u5148\u8bb2\u8fd9\u4e2a\uff0c\u6700\u540e\u518d\u6765\u8bb2\u5982\u4f55\u8fd0\u884c\u6574\u4e2a\u6e38\u620f\u3002\n\n```\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<N;++i){\n\t\tfor (int j=1;j<M;++j){\n\t\t\tpig[i].card[j]='X';//X\u8868\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u7a7a\u4f4d\n\t\t}\n\t\tpig[i].hp=4;//\u521d\u59cb\u751f\u547d\u4e3a4\n\t}\n\tfor (int i=1;i<=n;++i){\n\t\tchar names[5],s[5];\n\t\tscanf(\"%s\",names);\n\t\tfor (int j=1;j<=4;++j){\n\t\t\tscanf(\"%s\",s);\n\t\t\tpig[i].card[j]=s[0];//\u4f9d\u6b21\u8bfb\u51654\u5f20\u724c\n\t\t}\n\t\tpig[i].cnt=4;\n\t\tif (names[0]=='M') pig[i].id=1,pig[i].pigid=1;//\u4e3b\u732a\u7684\u8eab\u4efd\u4e00\u5f00\u59cb\u5c31\u66b4\u9732\u7684\n\t\telse if (names[0]=='Z') pig[i].id=2;\n\t\telse pig[i].id=3,FPcnt++;//\u53cd\u732a\uff0c\u8ba1\u6570\u5668\u52a0\u4e00\n\t\tpig[i].nxt=i+1;//\u524d\u9a71\u540e\u7ee7\u7684\u521d\u59cb\u5316\n\t\tpig[i].pre=i-1;\n\t}\n\tpig[n].nxt=1;//\u7279\u6b8a\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u6784\u6210\u6574\u4e2a\u73af\n\tpig[1].pre=n;\n\tfor (int i=1;i<=m;++i){\n\t\tchar s[5];\n\t\tscanf(\"%s\",s);\n\t\tcards[i]=s[0];//\u8bfb\u5165\u724c\u5e93\u7684\u724c\n\t}\n\ttop=1;//\u6307\u9488\u6307\u5411\u724c\u5e93\u7684\u7b2c\u4e00\u5f20\u724c\n\trungame();//\u8fd0\u884c\u6e38\u620f\uff08\u5728\u4e0b\u4e00\u90e8\u5206\uff09\n\tif (pig[1].hp<=0) printf(\"FP\\n\");\n\telse printf(\"MP\\n\");//\u83b7\u80dc\u8005\u8f93\u51fa\n\tfor (int i=1;i<=n;++i){//\u4f9d\u6b21\u8f93\u51fa\u6bcf\u4e2a\u4eba\u7684\u724c\n\t\tif (pig[i].hp<=0) printf(\"DEAD\\n\");\n\t\telse{\n\t\t\tprintcard(i);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n### $Part5:$\u6e38\u620f\u7684\u8fd0\u884c\n\n\u7531\u4e8e\u6240\u6709\u90e8\u5206\u90fd\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\n```\nvoid rungame(){\n\twhile (true){//\u6e38\u620f\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\t\n\t\tfor (int i=1;i<=n;++i){\n\t\t\tif (gameover) return;//\u5b9e\u65f6\u51c6\u5907\u6e38\u620f\u7ed3\u675f\n\t\t\tif (pig[i].hp<=0) continue;//\u732a\u6b7b\u4e86\u5c31\u76f4\u63a5\u8df3\u8fc7\n\t\t\tgetcard(i);getcard(i);//\u6478\u724c\n\t\t\tbool use_k=true;//\u8868\u793a\u8fd9\u5934\u732a\u662f\u5426\u51fa\u8fc7\u6740\n\t\t\tfor (int j=1;j<=pig[i].cnt;++j){\n\t\t\t\tif (pig[i].card[j]=='X') continue;//\u7a7a\u724c\uff0c\u76f4\u63a5\u8df3\u8fc7\n\t\t\t\tif (gameover) return;\n\t\t\t\tswitch (pig[i].card[j]){\n\t\t\t\t\tcase 'P':{\n\t\t\t\t\t\tif (pig[i].hp<4){//\u5982\u679c\u80fd\u5403\u6843\u5c31\u5403\n\t\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\t\tpig[i].hp++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'K':{\n\t\t\t\t\t\tif (use_k && enemy(i,pig[i].nxt)){//\u5982\u679c\u548c\u540e\u9762\u7684\u4e00\u53ea\u732a\u662f\u654c\u4eba\n\t\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\t\tusecard_k(i,pig[i].nxt);//\u76f4\u63a5\u4e0a\n\t\t\t\t\t\t\tif (!pig[i].weapon){\n\t\t\t\t\t\t\t\tuse_k=false;//\u6ca1\u6709\u8fde\u5f29\u7684\u8bdd\u5c31\u4e0d\u80fd\u518d\u51fa\u6740\u4e86\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tj=0;//\u4ece\u5934\u518d\u6765\uff0c\u56e0\u4e3a\u6574\u4e2a\u573a\u9762\u53ef\u80fd\u53d1\u751f\u6539\u53d8\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t}\n\t\t\t\t\tcase 'F':{//\u51b3\u6597\uff0c\u76f8\u5bf9\u6765\u8bf4\u96be\u5b9e\u73b0\u4e00\u4e9b\n\t\t\t\t\t\tif (pig[i].id==3){//\u5982\u679c\u662f\u53cd\u732a\uff0c\u76ee\u6807\u5c31\u662f\u4e3b\u732a\n\t\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\t\tgetenemy(i,1);//\u548c\u4e3b\u732a\u8868\u654c\u610f\n\t\t\t\t\t\t\tif (usecard_j(i,1,0)) break;//\u5982\u679c\u88ab\u65e0\u61c8\u53ef\u51fb\u6321\u4f4f\u7684\u8bdd\u5c31\u9000\u51fa\n\t\t\t\t\t\t\tusecard_f(i,1);\n\t\t\t\t\t\t\tj=0;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tint to=pig[i].nxt;//\u8fd8\u662f\u9006\u65f6\u9488\u5faa\u73af\u627e\u6700\u8fd1\u7684\u654c\u5bf9\u7684\u732a\n\t\t\t\t\t\t\twhile (true){\n\t\t\t\t\t\t\t\tif (enemy(i,to)){\n\t\t\t\t\t\t\t\t    pig[i].card[j]='X';\n\t\t\t\t\t\t\t\t\tgetenemy(i,to);\n\t\t\t\t\t\t\t\t\tif (usecard_j(i,to,0)) break;\n\t\t\t\t\t\t\t\t\tusecard_f(i,to);\n\t\t\t\t\t\t\t\t\tj=0;\n\t\t\t\t\t\t  \t\t  break;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tto=pig[to].nxt;\n\t\t\t\t\t\t\t\tif (to==i) break;//\u8f6c\u5b8c\u4e00\u5708\u5c31\u9000\u51fa\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'N':{//\u5357\u732a\u5165\u4fb5\u548c\u4e07\u7bad\u9f50\u53d1\u53ea\u8981\u8c03\u7528\u51fd\u6570\u5c31\u884c\u4e86\n\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\tusecard_n(i,pig[i].nxt);\n\t\t\t\t\t\tj=0;\n                        break;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'W':{\n\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\tusecard_w(i,pig[i].nxt);\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'Z':{//\u88c5\u5907\u8fde\u5f29\n\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\tpig[i].weapon=true;\n\t\t\t\t\t\tuse_k=true;\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (pig[i].card[pig[i].cnt]=='X') pig[i].cnt--;//\u4e00\u4e2a\u4f18\u5316\uff0c\u6e05\u6389\u6700\u540e\u6ca1\u6709\u7684\u724c\n\t\t\t}\n\t\t}\n\t}\n}\n```\n### $Part6:$\u5b8c\u6574\u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 11\n#define M 2222\nstruct player{\n\tint id; \n\tint hp;\n\tint cnt;\n\tchar card[M];\n\tint pre;\n\tint nxt;\n\tint pigid;\n\tbool special; \n\tbool weapon;\n}pig[N];\nint n,m;\nint top;\nchar cards[M];\nbool gameover;\nint FPcnt;\nvoid printcard(int i){\n\tbool first=true;\n\tfor (int j=1;j<=pig[i].cnt;++j){\n\t\tif (pig[i].card[j]=='X') continue;\n\t\t\tif (!first){\n\t\t\t\tprintf(\" \");\n\t\t\t}else first=false;\n\t\tprintf(\"%c\",pig[i].card[j]);\n\t}\n\tprintf(\"\\n\");\n}\nvoid getcard(int i){\n\tif (top>m) top=m;\n\tpig[i].cnt++;\n\tpig[i].card[pig[i].cnt]=cards[top];\n\ttop++;\n}\nint findcard(int x,char card){\n\tfor (int i=1;i<=pig[x].cnt;++i){\n\t\tif (pig[x].card[i]==card){\n\t\t\tpig[x].card[i]='X';\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nvoid getfriend(int x,int y){\n\tif (pig[y].pigid==0) return;\n\tif (pig[y].pigid!=3) pig[x].special=false,pig[x].pigid=1;\n\tif (pig[y].pigid==3) pig[x].special=true,pig[x].pigid=3;\n}\nvoid getenemy(int x,int y){\n\tif (pig[y].pigid==0) return;\n\tif (pig[y].pigid!=3) pig[x].pigid=3,pig[x].special=true;\n\tif (pig[y].pigid==3) pig[x].pigid=1,pig[x].special=false;\n}\nvoid dechp(int x,int i){\n\tpig[i].hp--;\n\twhile (pig[i].hp<=0 && findcard(i,'P')){\n\t\tpig[i].hp++;\n\t}\n\tif (pig[i].hp<=0){\n\t\tpig[i].cnt=0;\n\t\tpig[i].weapon=false;\n\t\tif (pig[i].id==1){\n\t\t\tgameover=true;\n\t\t\treturn;\n\t\t}else if (pig[i].id==2){\n\t\t\tif (pig[x].id==1){\n\t\t\t\tpig[x].cnt=0;\n\t\t\t\tpig[x].weapon=false;\n\t\t\t}\n\t\t}else if (pig[i].id==3){\n\t\t\tFPcnt--;\n\t\t\tif (FPcnt==0){\n\t\t\t\tgameover=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tgetcard(x);getcard(x);getcard(x);\n\t\t}\n\t\tpig[pig[i].pre].nxt=pig[i].nxt;\n\t\tpig[pig[i].nxt].pre=pig[i].pre;\n\t}\n}\nbool enemy(int x,int y){\n\tif (pig[x].id==1 && pig[y].special==true) return true;\t\n\tif (pig[y].pigid==0) return false;\n\tif (pig[x].id!=3 && pig[y].pigid==3) return true;\n\tif (pig[x].id==3 && pig[y].pigid!=3) return true;\n\treturn false;\n}\nbool friendly(int x,int y){\n\tif (pig[y].pigid==0) return false;\n\tif (pig[x].id!=3 && pig[y].pigid!=3) return true;\n\tif (pig[x].id==3 && pig[y].pigid==3) return true;\n\treturn false;\t\n}\n\nbool usecard_j(int from,int to,int last){\n\tint now=from;\n\twhile (true){\n\t\tif ((last==0 && friendly(now,to)) || (last!=0 && enemy(now,last))){\n\t\t\tif (findcard(now,'J')){\n\t\t\t\tif (last==0 && friendly(now,to)) getfriend(now,to);\n\t\t\t\tif (last!=0 && enemy(now,last)) getenemy(now,last);\n\t\t\t\tif (!usecard_j(pig[now].nxt,to,now)){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tnow=pig[now].nxt;\n\t\tif (now==from) return false;\n\t}\n}\nvoid usecard_k(int from,int to){\n\tgetenemy(from,to);\n\tbool p=findcard(to,'D');\n\tif (p==false){\n\t\tdechp(from,to);\n\t}\n}\nvoid usecard_f(int from,int to){\n\tif (pig[from].id==1 && pig[to].id==2){\n\t\tdechp(from,to);\n\t\treturn;\n\t}\n\twhile (true){\n\t\tbool flag1=findcard(to,'K');\n\t\tif (!flag1){\n\t\t\tdechp(from,to);\n\t\t\treturn;\n\t\t}\n\t\tbool flag2=findcard(from,'K');\n\t\tif (!flag2){\n\t\t\tdechp(to,from);\n\t\t\treturn;\n\t\t}\n\t}\n}\nvoid usecard_n(int from,int to){\n\twhile (true){\n\t\tif (gameover) return;\n\t\tif (!usecard_j(from,to,0)){\n\t\t\tbool flag=findcard(to,'K');\n\t\t\tif (!flag){\n\t\t\t\tif (pig[to].id==1 && pig[from].pigid==0){\n\t\t\t\t\tpig[from].special=true;\n\t\t\t\t}\n\t\t\t\tdechp(from,to);\n\t\t\t}\n\t\t}\n\t\tto=pig[to].nxt;\t\n\t\tif (to==from) return;\n\t}\n}\nvoid usecard_w(int from,int to){\n\twhile (true){\n\t\tif (gameover) return;\n\t\tif (!usecard_j(from,to,0)){\n\t\t\tbool flag=findcard(to,'D');\n\t\t\tif (!flag){\n\t\t\t\tif (pig[to].id==1 && pig[from].pigid==0){\n\t\t\t\t\tpig[from].special=true;\n\t\t\t\t}\n\t\t\t\tdechp(from,to);\n\t\t\t}\n\t\t}\n\t\tto=pig[to].nxt;\t\n\t\tif (to==from) return;\n\t}\n}\nvoid rungame(){\n\twhile (true){\t\n\t\tfor (int i=1;i<=n;++i){\n\t\t\tif (gameover) return;\n\t\t\tif (pig[i].hp<=0) continue;\n\t\t\tgetcard(i);getcard(i);\n\t\t\tbool use_k=true;\n\t\t\tfor (int j=1;j<=pig[i].cnt;++j){\n\t\t\t\tif (pig[i].card[j]=='X') continue;\n\t\t\t\tif (gameover) return;\n\t\t\t\tswitch (pig[i].card[j]){\n\t\t\t\t\tcase 'P':{\n\t\t\t\t\t\tif (pig[i].hp<4){\n\t\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\t\tpig[i].hp++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'K':{\n\t\t\t\t\t\tif (use_k && enemy(i,pig[i].nxt)){\n\t\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\t\tusecard_k(i,pig[i].nxt);\n\t\t\t\t\t\t\tif (!pig[i].weapon){\n\t\t\t\t\t\t\t\tuse_k=false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tj=0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t}\n\t\t\t\t\tcase 'F':{\n\t\t\t\t\t\tif (pig[i].id==3){\n\t\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\t\tgetenemy(i,1);\n\t\t\t\t\t\t\tif (usecard_j(i,1,0)) break;\n\t\t\t\t\t\t\tusecard_f(i,1);\n\t\t\t\t\t\t\tj=0;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tint to=pig[i].nxt;\n\t\t\t\t\t\t\twhile (true){\n\t\t\t\t\t\t\t\tif (enemy(i,to)){\n\t\t\t\t\t\t\t\t    pig[i].card[j]='X';\n\t\t\t\t\t\t\t\t\tgetenemy(i,to);\n\t\t\t\t\t\t\t\t\tif (usecard_j(i,to,0)) break;\n\t\t\t\t\t\t\t\t\tusecard_f(i,to);\n\t\t\t\t\t\t\t\t\tj=0;\n\t\t\t\t\t\t  \t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tto=pig[to].nxt;\n\t\t\t\t\t\t\t\tif (to==i) break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'N':{\n\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\tusecard_n(i,pig[i].nxt);\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'W':{\n\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\tusecard_w(i,pig[i].nxt);\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'Z':{\n\t\t\t\t\t\tpig[i].card[j]='X';\n\t\t\t\t\t\tpig[i].weapon=true;\n\t\t\t\t\t\tuse_k=true;\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (pig[i].card[pig[i].cnt]=='X') pig[i].cnt--;\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<N;++i){\n\t\tfor (int j=1;j<M;++j){\n\t\t\tpig[i].card[j]='X';\n\t\t}\n\t\tpig[i].hp=4;\n\t}\n\tfor (int i=1;i<=n;++i){\n\t\tchar names[5],s[5];\n\t\tscanf(\"%s\",names);\n\t\tfor (int j=1;j<=4;++j){\n\t\t\tscanf(\"%s\",s);\n\t\t\tpig[i].card[j]=s[0];\n\t\t}\n\t\tpig[i].cnt=4;\n\t\tif (names[0]=='M') pig[i].id=1,pig[i].pigid=1;\n\t\telse if (names[0]=='Z') pig[i].id=2;\n\t\telse pig[i].id=3,FPcnt++;\n\t\tpig[i].nxt=i+1;\n\t\tpig[i].pre=i-1;\n\t}\n\tpig[n].nxt=1;\n\tpig[1].pre=n;\n\tfor (int i=1;i<=m;++i){\n\t\tchar s[5];\n\t\tscanf(\"%s\",s);\n\t\tcards[i]=s[0];\n\t}\n\ttop=1;\n\trungame();\n\tif (pig[1].hp<=0) printf(\"FP\\n\");\n\telse printf(\"MP\\n\");\n\tfor (int i=1;i<=n;++i){\n\t\tif (pig[i].hp<=0) printf(\"DEAD\\n\");\n\t\telse{\n\t\t\tprintcard(i);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1550211027,
        "uid": 107231,
        "name": "zombie462",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u5148\u65e0\u826f\u5ba3\u4f20\u4e00\u4e0b\u535a\u5ba2 $wwwwww$    \n[\u6587\u7ae0\u5217\u8868 - \u5730\u7075\u6bbf - \u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/koishikoishi/)\n\n------------\n\n\u5751\u70b9\u90fd\u88ab\u697c\u4e0a\u7684 $Dalao$ \u6574\u7406\u5f97\u5dee\u4e0d\u591a\u4e86 ,   \n\u6211\u4e5f\u6ca1\u6709\u8d58\u8ff0\u7684\u5fc5\u8981\u4e86 = =\n\n\u5728\u8fd9\u91cc\u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u505a\u6b64\u9898\u7684\u4e00\u4e9b\u6280\u5de7:\n\n------------\n\n\n1. \u5148\u5199\u5927\u7eb2 :  \n\n    \u50cf\u8fd9\u79cd\u5927\u6a21\u62df , \u4e00\u822c\u662f\u4e0d\u9700\u8981 ~~\u8111\u5b50~~ \u601d\u7ef4\u6280\u5de7 \u7684  \n    \u53ea\u9700\u8981\u6309\u7167\u9898\u610f\u6a21\u62df\u5373\u53ef   \n    \u8fd9\u65f6\u5019\u8981\u683c\u5916\u6ce8\u610f\u7ec6\u8282   \n\n    \u6240\u4ee5\u63a8\u8350,\u5728\u505a\u9898\u4e4b\u524d, \u5148\u5199\u4e00\u4efd \u4f2a\u4ee3\u7801   \n    \u5728\u5199\u4f2a\u4ee3\u7801\u8fc7\u7a0b\u4e2d , \n    \n    1. \u6574\u7406\u597d\u5927\u81f4\u601d\u8def  \n    2. \u7528\u6ce8\u91ca\u7684\u5f62\u5f0f, \u8bb0\u5f55 \u5751\u70b9 \u548c \u7591\u95ee  \n\n    \u786e\u4fdd\u4f2a\u4ee3\u7801\u65e0\u8bef\u540e ,  \u518d\u53bb\u5199 \u771f\u4ee3\u7801  \n\n2. $string$\u7c7b \u51fd\u6570:  \n\n    \u5176\u5b9e\u5bf9\u4e8e$string$,\u4e00\u5f00\u59cb\u6211\u662f\u62d2\u7edd\u7684  \n    \u4f46\u662f\u53d1\u73b0 $find$ , $erase$ , $replace$ \u7684\u5e05\u6c14\u9177\u70ab\u4e4b\u540e   \n    **$string$   \u4e16\u754c\u4e00\u4f4d ! !  !**\n\n    \u5728\u4f7f\u7528\u624b\u724c\u7684\u65f6\u5019 ,   \n    \u53ef\u4ee5\u4f7f\u7528 $find$ \u4e0e $erase$ \u8fdb\u884c\u7ed3\u5408 :  \n    \u4f7f\u7528 $find$ \u5224\u65ad\u624b\u724c\u4e2d\u6709\u65e0\u6b64\u724c   \n    \u4f7f\u7528 $erase$ \u6765\u5220\u9664\u624b\u724c\u4e2d\u7684\u8fd9\u5f20\u724c  \n    \u53ef\u4ee5\u5341\u5206\u65b9\u4fbf\u5730\u5b8c\u6210\u6307\u5b9a\u7684\u64cd\u4f5c\n\n    \u90e8\u5206\u4ee3\u7801\u5982\u4e0b:\n    ```cpp\n    bool use_ca(int so,string card)\n    {\n\t    int po=-1;\n\t    po=p[so].ca.find(card);\n\t    if(po==-1) return 0;\n\t    p[so].ca.erase(po,1);\n\t    return 1;\n    }\n    ```\n3. \u5173\u4e8e\u7f29\u8fdb:\n\n    \u50cf\u8fd9\u79cd\u7801\u91cf\u5982\u6b64\u9b3c\u755c\u7684\u4ee3\u7801 ,   \n    \u4ee3\u7801 \u957f\u51e0\u884c\u77ed\u51e0\u884c \u5176\u5b9e\u65e0\u6240\u8c13\u4e86 = =   \n    \u53ef\u8bfb\u6027\u624d\u662f\u6700\u91cd\u8981\u7684   \n    \u4e3a\u4e86\u4e00\u65f6\u7684\u538b\u884c,\u7834\u574f\u89c2\u770b\u4f53\u9a8c   \n    \u4e0d\u4ec5\u4f1a\u5f88\u96be\u53d7 ,  \n    \u8fd8\u4f1a\u51fa\u610f\u60f3\u4e0d\u5230\u7684bug = =\n\n    \u5c31\u50cf\u67d0\u4e2a $DD$ \u4e00\u6837:\n    ```cpp\n    if(now_ca==\"P\" && p[now].bl<4) {p[now].ca.erase(i,1); ca_use=1; p[now].bl++;}\n\tif(now_ca==\"Z\") {p[now].ca.erase(i,1); ca_use=1; p[now].bo=1;}\n\tif(now_ca==\"N\") {p[now].ca.erase(i,1); ca_use=1; nanman(now);}\n\tif(now_ca==\"W\") {p[now].ca.erase(i,1); ca_use=1; wanjian(now);}\n\tif(now_ca==\"F\") {int ta=find_duel(now);if(ta==-1) continue;p[now].ca.erase(i,1); ca_use=1;if(judge_duel(now,ta)) duel(now,ta);}\n    ```\n    \u5c31\u56e0\u4e3a\u9b3c\u755c\u7684\u538b\u884c , \u591a\u8c03\u4e86 $2h+$ = =\n\n---\n\n\n------------\n\n## \u4f2a\u4ee3\u7801 (\u5927\u7eb2)\uff1a\n\n``` cpp\n\u732a\u56fd\u6740\n\u76ee\u5f55\uff1a\n\n\u4e3b\u51fd\u6570\n\u5907\u6ce8\n\u53d8\u91cf\u5217\u8868\n\u5b50\u51fd\u6570\u5217\u8868\n\n\n\n\n\n\n\n\n\u4e3b\u51fd\u6570\uff1a\nint main()\n{\n\t\u8f93\u5165()\n\twhile(1)\n  \t  {\n  \t\tbool  \u5224\u65ad\u662f\u5426\u7528\u8fc7\u6740=0;\n\t\tbool \u4f7f\u7528\u4e86\u724c=0;\n\t\t\u6478\u724c(\u5f53\u524d\u732a)x2;\n\t\twhile(1)\n\t\t  {\n\t\t  \tint i=0(\u724c\u6307\u9488)\n\t\t    For(i=\u6240\u6709\u724c,\u521d\u503c\u4e3a0)\n  \t\t      {\n  \t\t  \t    string \u5f53\u524d\u724c;\n\t\t\t    \u5f53\u524d\u724c+=\u624b\u724c[i];\n\t\t\t    If(\u6843 && \u8840\u91cf<4)\n\u3000\u3000\t\t      \u624b\u724c.earse(i,1),\u4f7f\u7528\u4e86\u724c,\u8840\u91cf+1;\n                if(\u8bf8\u845b\u8fde\u5f29)\n                  \u624b\u724c.earse(i,1),\u4f7f\u7528\u4e86\u724c,\u88c5\u5907; \n\t\t\t    if(\u5357\u86ee\u5165\u4fb5||\u4e07\u7bad\u9f50\u53d1)\n  \t\t\t      \u624b\u724c.earse(i,1),\u4f7f\u7528\u4e86\u724c,\u5f53\u524d\u724c(\u4f7f\u7528\u732a);\n\t\t\t    if(\u51b3\u6597)\n      \t\t      {\n\t\t\t\t\tint \u51b3\u6597\u5bf9\u8c61=\u51b3\u6597\u80fd\u5426\u751f\u6548(\u5f53\u524d\u732a);\n\t\t\t\t\tif(\u51b3\u6597\u5bf9\u8c61==-1)\n\t\t\t\t\t  continue; \n      \t\t      \t\u624b\u724c.earse(i,1),\u4f7f\u7528\u4e86\u724c;\n\t\t\t\t    if(\u51b3\u6597\u662f\u5426\u751f\u6548(\u4f7f\u7528\u732a,\u88ab\u4f7f\u7528\u732a))\n\t\t\t          \u51b3\u6597(\u5f53\u524d\u732a,\u51b3\u6597\u5bf9\u8c61); \n\t\t          }\n\t\t\t    if(\u80fd\u653b\u51fb(\u5f53\u524d\u732a,\u4e0b\u4e00\u732a) && \u6740)\n  \t\t\t  \t  if(\u6ca1\u6709\u4f7f\u7528\u6740||\u8bf8\u845b\u8fde\u5f29) \n      \t\t\t    \u624b\u724c.earse(i,1),\u4f7f\u7528\u4e86\u724c,\u6740(\u5f53\u524d\u732a,\u4e0b\u4e00\u732a),\u4f7f\u7528\u4e86\u6740;\n      \t       if(\u4f7f\u7528\u4e86\u724c)\n\t\t\t     break;\n\t\t\t  }\n\t\t    if(!\u4f7f\u7528\u4e86\u724c) break;\n\t\t\tif(\u5f53\u524d\u732a:\u8840<=0) break;\n\t\t\ti=0; \n\t\t  }\n     \t\u5f53\u524d\u732a=\u4e0b\u4e00\u732a; \n      }\n}\n\n\n\n\n\n\u5907\u6ce8:\n1.\t\u961f\u5217\u5b58\u624b\u724c,\u724c\u5806(\u624b\u724c\u7528\u6570\u7ec4\u6a21\u62df,\u724c\u5806\u7528stl)\n2.\t\u94fe\u8868\u5b58\u732a\u7684\u987a\u5e8f(\u94fe\u8868\u6307\u5411\u4e0b\u4e00\u732a)\n3.  0\u4e3b\u516c\uff0c1\u5fe0\u81e3\uff0c2\u53cd\u8d3c \n\n\n\u53d8\u91cf\u5217\u8868:\n1.\t\u7ed3\u6784\u4f53\u5b58\u67d0\u4e00\u732a\n{\n\tint\u578b \u8840\u91cf;\n\tint\u578b \u8eab\u4efd;(0\u4e3b\u516c\uff0c1\u5fe0\u81e3\uff0c2\u53cd\u8d3c ) \n\tint\u578b \u503e\u5411(0\u8868\u793a\u6ca1\u6709\u8df3 1\u786e\u5b9a\u503e\u5411\u4e3b\u516c,2\u786e\u5b9a\u503e\u5411\u53cd\u8d3c,3\u503e\u5411\u7c7b\u53cd\u8d3c)\n\tstring\u578b \u624b\u724c;\n\tbool\u578b \u662f\u5426\u88c5\u5907\u8bf8\u845b\u8fde\u5f29;\n}\n2 int\u578b\u4e8c\u7ef4\u6570\u7ec4,\u94fe\u8868\u5b58\u4e0a\u4e00\u732a,\u4e0b\u4e00\u732a;\n3 bool\u578b\u53d8\u91cf\uff0c\u5224\u65ad\u4e3b\u516c\u662f\u5426\u6b7b\u4ea1\uff0c\u521d\u59cb\u4e3a1;\n4 int\u578b\u53d8\u91cf\uff0c\u8bb0\u5f55\u5b58\u6d3b\u7684\u53cd\u8d3c\u4e2a\u6570; \n\n\n\n\u5b50\u51fd\u6570\u5217\u8868\uff1a\n1.\tVoid \u8f93\u5165\n{\n\tFor(i=\u4eba\u6570)\n      {\n\t    \u8eab\u4efd,\u6478\u724c(i)x4;\n\t\t\u8bb0\u5f55\u8eab\u4efd;\n\t\tif(\u9635\u8425\u4e3a\u4e3b\u516c)\n\t\t  \u503e\u5411=\u4e3b\u516c; \n\t\t\u8840\u91cf=4;\n\t\tIf(\u53cd\u8d3c) \u53cd\u8d3c\u5b58\u6d3b\u6570+1;\n\t  }\n    for(i=\u724c\u5806\u724c\u6570)\n   \t  \u8f93\u5165,\u538b\u5165\u724c\u5806\u961f\u5217;\n}\n2.\tVoid \u6478\u724c(\u732a\u7f16\u53f7)\n{\n\tstring \u6478\u5f97\u724c;\n\t\u6478\u5f97\u724c=\u724c\u5806.front();\n\tif(\u4e0d\u662f\u6700\u540e\u4e00\u5f20\u724c) \n\t  {\n\t\t\u724c\u5806\u724c\u6570--; \n\t\t\u724c\u5806.pop();\n\t  }\n    \u6b64\u732a\u624b\u724c+\u6478\u5f97\u724c;\n\treturn ;\n}\n\uff13.void \u6740(\u4f7f\u7528\u732a\u7f16\u53f7,\u88ab\u4f7f\u7528\u732a\u7f16\u53f7)\n{\n\tif(\u88ab\u4f7f\u7528\u732a\u503e\u5411\u4e3a\u53cd\u8d3c) \u4f7f\u7528\u732a\u503e\u5411=\u4e3b\u516c;\n\tif(\u88ab\u4f7f\u7528\u732a\u503e\u5411\u4e3b\u516c) \u4f7f\u7528\u732a\u503e\u5411=\u53cd\u8d3c;\n    If(!\u4f7f\u7528\u67d0\u5f20\u724c(\u88ab\u4f7f\u7528\u732a,\u95ea)) \n  \t  \u88ab\u4f7f\u7528\u732a:\u8840\u91cf-1; \n\tif(\u88ab\u4f7f\u7528\u732a:\u8840\u91cf<=0)\n  \t  \u6fd2\u6b7b(\u4f7f\u7528\u732a,\u88ab\u4f7f\u7528\u732a);\n}\n\uff14. void \u6fd2\u6b7b(\u4f7f\u7528\u732a,\u88ab\u4f7f\u7528\u732a)\n{ \n\twhile(\u88ab\u4f7f\u7528\u732a:\u8840\u91cf<=0) \n      {\n      \tif(\u4f7f\u7528\u67d0\u5f20\u724c(\u88ab\u4f7f\u7528\u732a,\u6843))  \u88ab\u4f7f\u7528\u732a:\u8840\u91cf+1;\n\t    else break; \n\t  }\n\tif(\u88ab\u4f7f\u7528\u732a:\u8840\u91cf<=0)\n      {\n\t\tif(\u88ab\u4f7f\u7528\u732a\u4e3a\u53cd\u8d3c) \n\t\t  {\n            \u53cd\u8d3c\u6570-1;\n\t\t\t\u6e38\u620f\u7ed3\u675f(); \n\t\t\t\u6478\u724c(\u4f7f\u7528\u732a)x3; \n\t\t  }\n        if(\u88ab\u4f7f\u7528\u732a\u4e3a\u5fe0\u81e3 &&\u3000\u4f7f\u7528\u732a\u4e3a\u4e3b\u516c)\n\u3000\u3000\u3000\u3000\u3000\u4e3b\u516c\u624b\u724c=\"\",\u88c5\u5907\u724c\u5f03\u9664;\n\t\tif(\u88ab\u4f7f\u7528\u732a\u4e3a\u4e3b\u516c)\n          {\n\t\t    \u4e3b\u516c\u6b7b\u4ea1;\n\t\t    \u6e38\u620f\u7ed3\u675f();\n\t\t  }\n\t\t\u88ab\u6307\u7528\u732a\u7684\u4e0a\u4e00\u732a,\u94fe\u8868\u6307\u5411\u88ab\u4f7f\u7528\u732a\u7684\u4e0b\u4e00\u732a; \n\t  }\n}\n5.void \u6e38\u620f\u7ed3\u675f()\n{\n\tif(\u4e3b\u732a\u6b7b\u4ea1 || \u53cd\u8d3c\u6570==0)\n  \t  {\n  \t  \t\u8f93\u51fa;\n\t\texit(0);\n\t  }\n\treturn ;\n}\n6.void \u5357\u86ee\u5165\u4fb5(\u4f7f\u7528\u732a)\n{\n\tfor(i=\u5b58\u6d3b\u6240\u6709\u732a)\n  \t  {\n      \tbool \u662f\u5426\u88ab\u65e0\u61c8; \n     \tif(i\u732a\u8df3\u8eab\u4efd)\n\t\t  for(j=\u4ee5\u4f7f\u7528\u732a\u4e3a\u8d77\u70b9\u9006\u65f6\u9488\u904d\u5386\u732a)\n   \t\t\tif(j\u732a\u9635\u8425=i\u732a\u503e\u5411)\n\t\t\t  if(\u4f7f\u7528\u67d0\u5f20\u724c(j\u732a,\u65e0\u61c8\u53ef\u51fb))\n\u3000\u3000 \t\t\t{\n\t\t\t\t  j\u732a\u503e\u5411=i\u732a\u503e\u5411;\n\t\t\t\t  if(\u65e0\u61c8(j\u732a))\n \t\t\t\t\t\u662f\u5426\u88ab\u65e0\u61c8=\u771f, break;\n\t\t\t\t}\n\t\tif(\u88ab\u65e0\u61c8)continue;\n\t\tif(!\u4f7f\u7528\u67d0\u5f20\u724c(i\u732a,\u6740))\n\t\t  {\n\t\t\t\u8840-1; \n\t\t\tif(i\u732a\u4e3a\u4e3b\u516c&&\u4f7f\u7528\u732a\u65e0\u503e\u5411) \u4f7f\u7528\u732a\u503e\u5411\u7c7b\u53cd\u8d3c; \n\t\t  }\n       \tIf(i\u732a\u8840<=0) \u6fd2\u6b7b(\u4f7f\u7528\u732a,i\u732a);\n\t  }\n}\n7.\u4e07\u7bad\u9f50\u53d1(\u4f7f\u7528\u732a)\n{\n\tfor(i=\u5b58\u6d3b\u6240\u6709\u732a)\n  \t  {\n      \tbool \u662f\u5426\u88ab\u65e0\u61c8; \n     \tif(i\u732a\u8df3\u8eab\u4efd)\n\t\t  for(j=\u4ee5\u4f7f\u7528\u732a\u4e3a\u8d77\u70b9\u9006\u65f6\u9488\u904d\u5386\u732a)\n   \t\t\tif(j\u732a\u9635\u8425=i\u732a\u503e\u5411)\n\t\t\t  if(\u4f7f\u7528\u67d0\u5f20\u724c(j\u732a,\u65e0\u61c8\u53ef\u51fb))\n\u3000\u3000 \t\t\t{\n\t\t\t\t  j\u732a\u503e\u5411=i\u732a\u503e\u5411;\n\t\t\t\t  if(\u65e0\u61c8(j\u732a))\n \t\t\t\t\t\u662f\u5426\u88ab\u65e0\u61c8=\u771f, break;\n\t\t\t\t}\n\t\tif(\u88ab\u65e0\u61c8)continue;\n\t\tif(!\u4f7f\u7528\u67d0\u5f20\u724c(i\u732a,\u95ea))\n\t\t  {\n\t\t\t\u8840-1; \n\t\t\tif(i\u732a\u4e3a\u4e3b\u516c&&\u4f7f\u7528\u732a\u65e0\u503e\u5411) \u4f7f\u7528\u732a\u503e\u5411\u7c7b\u53cd\u8d3c; \n\t\t  }\n       \tif(i\u732a\u8840<=0) \u6fd2\u6b7b(\u4f7f\u7528\u732a,i\u732a);\n\t  }\n}\n8 .bool \u65e0\u61c8\u53ef\u51fb(\u4f7f\u7528\u732a)\n{\n\tbool \u662f\u5426\u88ab\u62b5\u6d88; \n\tfor(i=\u9006\u65f6\u9488\u904d\u5386\u4ece\u4f7f\u7528\u732a\u4e4b\u540e\u7684\u732a)\n\t  if(i\u732a\u4e0e\u4f7f\u7528\u732a\u76f8\u53cd\u9635\u8425)\n\t    if(\u4f7f\u7528\u67d0\u5f20\u724c(i\u732a,\u65e0\u61c8\u53ef\u51fb))\n\t      {\n\t        i\u732a\u503e\u5411=(!\u4f7f\u7528\u732a\u503e\u5411)\n\t\t    if(\u65e0\u61c8\u53ef\u51fb(i\u732a)) \n\t\t      {\n\t\t\t    \u662f\u5426\u88ab\u62b5\u6d88=\u771f;\n\t\t\t    break;\n\t\t\t  }\n\t      }\n\tif(\u88ab\u62b5\u6d88) return 0;\n\treturn 1; \n}\n9 .void \u51b3\u6597(\u4f7f\u7528\u732a,\u88ab\u4f7f\u7528\u732a)\n{\n\tif(\u88ab\u4f7f\u7528\u732a\u8eab\u4efd\u4e3a\u5fe0 && \u4f7f\u7528\u732a\u4e3a\u4e3b)\n\t  {\n\t  \t\u88ab\u4f7f\u7528\u732a:\u8840-1;\n\t\tif(\u88ab\u4f7f\u7528\u732a:\u8840<=0)\n\t\t  \u6fd2\u6b7b(\u4f7f\u7528\u732a,\u88ab\u4f7f\u7528\u732a)\n\t\treturn ;\n\t  }\n\tif(\u4f7f\u7528\u67d0\u5f20\u724c(\u88ab\u4f7f\u7528\u732a,\u6740))\n\t  \u51b3\u6597(\u88ab\u4f7f\u7528\u732a,\u4f7f\u7528\u732a);\n\telse\n\t  {\n\t  \t\u88ab\u4f7f\u7528\u732a:\u8840-1;\n\t\tif(\u88ab\u4f7f\u7528\u732a:\u8840<=0)\n\t\t  \u6fd2\u6b7b(\u4f7f\u7528\u732a,\u88ab\u4f7f\u7528\u732a) \n\t\treturn ; \n\t  }\n}\n10 .bool \u5224\u65ad\u662f\u5426\u53ef\u653b\u51fb(\u732a1\uff0c\u732a2)\n{\n\tif(\u732a1==\u4e3b\u732a && \u732a2\u9635\u8425!=\u732a1\u9635\u8425)\n\t  return 1;\n\tif(\u732a1==\u5fe0\u732a && \u732a2\u9635\u8425==\u53cd\u732a)\n\t  return 1;\n\tif(\u732a1==\u53cd\u732a && \u732a2\u9635\u8425!=\u732a1\u9635\u8425)\n\t  return 1;\n\treturn 0; \n}\n11 .int \u627e\u51b3\u6597\u76ee\u6807(\u4f7f\u7528\u732a)\n{\n\tint \u88ab\u4f7f\u7528\u732a=-1;\n\tif(\u4f7f\u7528\u732a\u4e3a\u53cd\u732a)\n\t  {\n\t  \t\u88ab\u4f7f\u7528\u732a=\u4e3b\u732a; \n\t\t\u4f7f\u7528\u732a\u503e\u5411=\u53cd\u732a;\n\t  }\n\tif(\u4f7f\u7528\u732a\u4e3a\u4e3b\u732a)\n\t  {\n\t  \tfor(i=\u9006\u65f6\u9488\u904d\u5386\u6240\u6709\u732a)\n\t\t  if(i\u732a\u8df3\u53cd/\u7c7b\u53cd)\n\t\t    \u88ab\u4f7f\u7528\u732a=\u8be5\u732a,break;\n\t  }\n\tif(\u4f7f\u7528\u732a\u4e3a\u5fe0\u732a)\n\t  {\n\t  \tfor(i=\u9006\u65f6\u9488\u904d\u5386\u6240\u6709\u732a)\n\t\t  if(i\u732a\u8df3\u53cd)\n\t\t    {\n\t\t      \u88ab\u4f7f\u7528\u732a=\u8be5\u732a,break;\n\t\t\t  \u4f7f\u7528\u732a\u503e\u5411=\u4e3b\u732a; \n\t\t\t}\n\t  }\n\treturn \u88ab\u4f7f\u7528\u732a;\n}\n12 .bool \u51b3\u6597\u662f\u5426\u751f\u6548(\u4f7f\u7528\u732a,\u88ab\u4f7f\u7528\u732a)\n{\n\tbool \u662f\u5426\u88ab\u65e0\u61c8;\n\tif(\u88ab\u4f7f\u7528\u732a\u8df3\u8eab\u4efd)\n\t  For(j=\u9006\u65f6\u9488\u904d\u5386\u4ece\u4f7f\u7528\u732a\u4e4b\u540e\u7684\u732a)\n   \t    If(j\u732a\u9635\u8425=\u88ab\u4f7f\u7528\u732a\u9635\u8425)\n\t\t  if(\u4f7f\u7528\u67d0\u5f20\u724c(j\u732a,\u65e0\u61c8\u53ef\u51fb))\n   \t        {\n\t\t   \t   j\u732a\u503e\u5411=\u88ab\u4f7f\u7528\u732a\u503e\u5411;\n\t\t   \t   if(\u65e0\u61c8(j\u732a))\n \t\t\t    \u662f\u5426\u88ab\u65e0\u61c8=\u771f, break;\n\t\t    }\n\tif(\u88ab\u65e0\u61c8) return 0;\n\treturn 1; \n} \n13. bool \u4f7f\u7528\u67d0\u5f20\u724c(\u4f7f\u7528\u732a,\u67d0\u5f20\u724c)\n{\n\tint \u724c\u4f4d\u7f6e=-1; \n\t\u724c\u4f4d\u7f6e=\u4f7f\u7528\u732a\u624b\u724c.find(\u67d0\u5f20\u724c);\n\tif(\u724c\u4f4d\u7f6e==-1)\n\t  return 0;\n\t\u624b\u724c.earse(\u724c\u4f4d\u7f6e,1);\n\treturn 1; \n}\n\n```\n\n## \u4ee3\u7801:\n\n``` cpp\n\n//\u4eba\u751f\u7b2c\u4e00\u9ed1 \n//\u5927\u7eb2,\u5df2\u7ecf\u5199\u7684\u975e\u5e38\u8be6\u7ec6\u4e86 \n//\u8bf7\u6055\u6211\u4e0d\u5199\u6ce8\u91ca= = \n#include<iostream>\n#include<cstdlib>\n#include<queue>\n#include<string>\nusing namespace std;\n//=============\u53d8\u91cf=============================\nint pigs_count,pile_count;\nstruct each_pig\n{\n\tint bl;\n\tint id;\n\tint gr;\n\tbool bo;\n\tstring ca;\n}p[15];\nint ne_p[15];\nint pre_p[15];\nbool dead_MP=0;\nint alive_FP=0;\nint now=1; \nqueue <string> pile;\n//============\u5b50\u51fd\u6570\u5217\u8868===========================\nvoid read();\nvoid get_ca(int);\nvoid attack(int,int);\nvoid dying(int,int);\nvoid game_end();\nvoid nanman(int);\nvoid wanjian(int);\nbool wuxie(int);\nvoid duel(int,int);\nbool judge_attack(int,int);\nbool judge_duel(int,int);\nint find_duel(int);\nbool use_ca(int,string);\n//==============\u4e3b\u51fd\u6570================================\nint main()\n{\n\tread();\n\twhile(1)\n\t{\n\t  bool attack_use=0;\n\t  get_ca(now);\n\t  get_ca(now);\n\t  while(1)\n\t  {\n\t  \tbool ca_use=0;\n\t  \tint i=0;\n\t  \tfor(i;p[now].ca[i];i++)\n\t  \t{\n\t  \t  string now_ca;\n\t  \t  now_ca+=p[now].ca[i];\n\t  \t  if(now_ca==\"P\" && p[now].bl<4)\n\t  \t    {p[now].ca.erase(i,1); ca_use=1; p[now].bl++;}\n\t  \t  if(now_ca==\"Z\")\n\t  \t  \t{p[now].ca.erase(i,1); ca_use=1; p[now].bo=1;}\n\t\t  if(now_ca==\"N\")\n\t\t\t{p[now].ca.erase(i,1); ca_use=1; nanman(now);}\n\t\t  if(now_ca==\"W\")\n\t\t\t{p[now].ca.erase(i,1); ca_use=1; wanjian(now);}\n\t\t  if(now_ca==\"F\")\n\t\t\t{\n\t\t\t  int ta=find_duel(now);\n\t\t\t  if(ta==-1) continue;\n\t\t\t  p[now].ca.erase(i,1); ca_use=1;\n\t\t\t  if(judge_duel(now,ta)) duel(now,ta);\n\t\t\t}\n\t\t  if(now_ca==\"K\" && judge_attack(now,ne_p[now]))\n\t\t    if(!attack_use || p[now].bo)\n\t\t\t{\n\t\t\t  p[now].ca.erase(i,1);\n\t\t\t  ca_use=1;attack_use=1;\n\t\t\t  attack(now,ne_p[now]);\n\t\t\t}\n\t\t  if(ca_use) break;\n\t\t}\n\t\tif(!ca_use) break;\n\t\tif(p[now].bl<=0) break;\n\t\ti=0;\n\t  }\n\t  now=ne_p[now];\n\t}\n}\n//==============\u5b50\u51fd\u6570================================ \nvoid read()\n{\n\tcin>>pigs_count>>pile_count;\n\tfor(int i=1;i<=pigs_count;i++)\n\t  {\n\t  \tif(i==1) pre_p[i]=pigs_count;\n\t  \telse  pre_p[i]=i-1;\n\t  \tif(i==pigs_count) ne_p[i]=1;\n\t  \telse ne_p[i]=i+1;\n\t  }\n\tfor(int i=1;i<=pigs_count;i++)\n\t  {\n\t  \tstring shenfen;\n\t  \tcin>>shenfen;\n\t  \tp[i].bl=4;\n\t  \tif(shenfen==\"MP\") p[i].id=0,p[i].gr=1;\n\t  \tif(shenfen==\"ZP\") p[i].id=1;\n\t  \tif(shenfen==\"FP\") p[i].id=2,alive_FP++;\n\t\tfor(int j=1;j<=4;j++)\n\t\t  {\n\t\t  \tstring cin_ca;\n\t\t  \tcin>>cin_ca;\n\t\t  \tp[i].ca+=cin_ca;\n\t\t  }\n\t  }\n\tfor(int i=1;i<=pile_count;i++)\n\t  {\n\t  \tstring cin_ca;\n\t  \tcin>>cin_ca;\n\t  \tpile.push(cin_ca);\n\t  }\n}\nvoid get_ca(int so)\n{\n\tstring cin_ca;\n\tcin_ca=pile.front();\n\tif(pile_count>1)\n\t  {\n\t  \tpile_count--;\n\t  \tpile.pop();\n\t  }\n\tp[so].ca+=cin_ca;\n\treturn ;\n}\nvoid attack(int so,int ta)\n{\n\tif(p[ta].gr==2) p[so].gr=1;\n\tif(p[ta].gr==1) p[so].gr=2;\n\tif(!use_ca(ta,\"D\"))\n\t  p[ta].bl--;\n\tif(p[ta].bl<=0)\n\t  dying(so,ta);\n}\nvoid dying(int so,int ta)\n{\n\twhile(p[ta].bl<=0)\n\t  {\n\t  \tif(use_ca(ta,\"P\")) p[ta].bl++;\n\t  \telse  break;\n\t  }\n\tif(p[ta].bl<=0)\n\t  {\n\t  \tif(p[ta].id==2)\n\t  \t  {\n\t  \t  \talive_FP--;\n\t  \t  \tgame_end();\n\t  \t  \tget_ca(so);\n\t  \t  \tget_ca(so);\n\t  \t  \tget_ca(so);\n\t\t  }\n\t\tif(p[ta].id==1 && p[so].id==0)\n\t\t  {p[so].ca.clear(),p[so].bo=0;}\n\t\tif(p[ta].id==0)\n\t\t  {\n\t\t  \tdead_MP=1;\n\t\t  \tgame_end();\n\t\t  }\n\t\tne_p[pre_p[ta]]=ne_p[ta];\n\t\tpre_p[ne_p[ta]]=pre_p[ta];\n\t  }\n}\nvoid game_end()\n{\n\tif(dead_MP || !alive_FP)\n\t  {\n\t  \tif(dead_MP) cout<<\"FP\"<<endl;\n\t  \telse cout<<\"MP\"<<endl;\n\t  \tfor(int i=1;i<=pigs_count;i++)\n\t  \t  {\n\t  \t  \tif(p[i].bl<=0) cout<<\"DEAD\"<<endl;\n\t  \t  \telse\n\t  \t  \t  {\n\t\t\t\tfor(int j=0;p[i].ca[j];j++)\n\t  \t  \t      cout<<p[i].ca[j]<<\" \";\n\t  \t  \t    cout<<endl;\n\t  \t  \t  }\n\t\t  }\n\t\texit(0);\n\t  }\n\treturn ;\n}\nvoid nanman(int so)\n{\n\tfor(int i=ne_p[so];i!=so;i=ne_p[i])\n\t  {\n\t  \tbool wuxie_use=0;\n\t  \tif(p[i].gr && p[i].gr!=3)\n\t  \t  {\n\t  \t  \tint vi[15]={0};\n\t  \t  \tfor(int j=so;j;j=ne_p[j])\n\t  \t  \t  if(vi[j]++) break;\n\t  \t  \t  else \n\t\t\t\tif(p[j].id==p[i].gr || p[j].gr==p[i].gr)\n\t\t\t\t  if(use_ca(j,\"J\"))\n\t\t\t\t    {\n\t\t\t\t      p[j].gr=p[i].gr;\n\t\t\t\t      if(wuxie(j))\n\t\t\t\t        {\n\t\t\t\t          wuxie_use=1;\n\t\t\t\t          break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t  }\n\t\tif(wuxie_use) continue;\n\t\tif(!use_ca(i,\"K\"))\n\t\t  {\n\t\t  \tp[i].bl--;\n\t\t  \tif(p[i].id==0 && !p[so].gr)\n\t\t  \t  p[so].gr=3;\n\t\t  }\n\t\tif(p[i].bl<=0) dying(so,i);\n\t  }\n}\nvoid wanjian(int so)\n{\n\tfor(int i=ne_p[so];i!=so;i=ne_p[i])\n\t  {\n\t  \tbool wuxie_use=0;\n\t  \tif(p[i].gr && p[i].gr!=3)\n\t  \t  {\n\t  \t  \tint vi[15]={0};\n\t  \t  \tfor(int j=so;j;j=ne_p[j])\n\t  \t  \t  if(vi[j]++) break;\n\t  \t  \t  else \n\t\t\t\tif(p[j].id==p[i].gr || p[j].gr==p[i].gr) \n\t\t\t\t  if(use_ca(j,\"J\"))\n\t\t\t\t    {\n\t\t\t\t      p[j].gr=p[i].gr;\n\t\t\t\t      if(wuxie(j))\n\t\t\t\t        {\n\t\t\t\t          wuxie_use=1;\n\t\t\t\t          break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t  }\n\t\tif(wuxie_use) continue;\n\t\tif(!use_ca(i,\"D\"))\n\t\t  {\n\t\t  \tp[i].bl--;\n\t\t  \tif(p[i].id==0 && !p[so].gr)\n\t\t  \t  p[so].gr=3;\n\t\t  }\n\t\tif(p[i].bl<=0) dying(so,i);\n\t  }\n}\nbool wuxie(int so)\n{\n\tbool wuxie_use=0;\n\tint vi[15]={0};\n\tfor(int i=so;i;i=ne_p[i])\n\t  if(vi[i]++)\n\t    break;\n\t  else \n\t    if(judge_attack(i,so))\n\t      if(use_ca(i,\"J\"))\n\t        {\n\t      \t  p[i].gr=p[so].gr==1?2:1;\n\t      \t  if(wuxie(i))\n\t      \t    {\n\t      \t      wuxie_use=1;\n\t      \t  \t  break;\n\t\t\t    }\n\t\t    }\n\tif(wuxie_use) \n\t  return 0;\n\treturn 1;\n}\nvoid duel(int so,int ta)\n{\n\tif(p[ta].id==1 && p[so].id==0)\n\t  {\n\t  \tp[ta].bl--;\n\t  \tif(p[ta].bl<=0)\n\t  \t  dying(so,ta);\n\t  \treturn ;\n\t  }\n\tif(use_ca(ta,\"K\")) \n\t  duel(ta,so);\n\telse\n\t  {\n\t  \tp[ta].bl--;\n\t  \tif(p[ta].bl<=0)\n\t  \t  dying(so,ta);\n\t  \treturn ;\n\t  }\n}\nbool judge_attack(int so,int ta)\n{\n\tif(p[so].id==0 && p[so].gr!=p[ta].gr && p[ta].gr) return 1;\n\tif(p[so].id==1 && p[ta].gr==2) return 1;\n\tif(p[so].id==2 && p[so].id!=p[ta].gr && p[ta].gr && p[ta].gr!=3) return 1;\n\treturn 0;\n}\nint find_duel(int so)\n{\n\tint ta=-1;\n\tif(p[so].id==2)\n\t  {\n\t  \tta=1;\n\t  \tp[so].gr=2;\n\t  }\n\telse\n\t  for(int i=ne_p[so];i!=so;i=ne_p[i])\n\t  \tif(p[i].gr==2 || (p[i].gr==3 && p[so].id==0))\n\t  \t  {\n\t  \t  \tp[so].gr=1;\n\t  \t    ta=i;\n\t  \t    break;\n\t\t  }\n\treturn ta;\n}\nbool judge_duel(int so,int ta)\n{\n\tbool wuxie_use=0;\n\tif(p[ta].gr!=0 && p[ta].gr!=3)\n\t  for(int i=ne_p[so];i!=so;i=ne_p[i]) \n\t    if(p[i].id==p[ta].gr || p[ta].gr==p[i].gr)\n\t      if(use_ca(i,\"J\"))\n\t\t\t{\n\t\t\t  p[i].gr=p[ta].gr;\n\t\t\t  if(wuxie(i))\n\t\t\t\t{\n\t\t\t\t  wuxie_use=1;\n\t\t\t\t  break;\n\t\t\t\t}\n\t\t\t}\n\tif(wuxie_use) return 0;\n\treturn 1;\n}\nbool use_ca(int so,string card)\n{\n\tint po=-1;\n\tpo=p[so].ca.find(card);\n\tif(po==-1)\n\t  return 0;\n\tp[so].ca.erase(po,1);\n\treturn 1;\n}\n```\n\n\u53e6\u5916 , \u8be5\u4ee3\u7801\u662f $Baka$ \u963f\u7a7a\u7684\u65e9\u671f\u4f5c\u54c1  ,   \n\u7801\u98ce\u6781\u4e11 , \u8bed\u6cd5\u6df7\u4e71 , \u5404\u4f4d\u51d1\u6d3b\u7740\u770b = =",
        "postTime": 1563970213,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u4e8e [Studying Father's Blog](https://studyingfather.com/archives/756)\u3002\r\n\r\n------------\r\n\r\n\u7b2c\u4e00\u6b21\u5237\u6bd2\u7624\u6a21\u62df\u9898\uff0c\u4e5f\u78b0\u4e86\u597d\u51e0\u6b21\u58c1\uff0c\u8fd9\u91cc\u628a\u81ea\u5df1 AC \u6b64\u9898\u7684\u60e8\u75db\u7ecf\u5386\u5199\u5728\u8fd9\u91cc\u3002\r\n\r\n## Part 1 \u5b58\u50a8\u7ed3\u6784\r\n\r\n\u6211\u4eec\u7528\u4e00\u4e2a pig \u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u6bcf\u53ea\u732a\u7684\u6240\u6709\u4fe1\u606f\u3002\r\n\r\n```cpp\r\nstruct pig\r\n{\r\n int front,next;//\u4ee5\u94fe\u5f0f\u7ed3\u6784\u5b58\u50a8\u8be5\u732a\u4e4b\u524d\u7684\u732a\u548c\u4e0b\u4e00\u53ea\u732a\r\n int id;//\u732a\u7684\u8eab\u4efd\r\n        //0\u4e3a\u4e3b\u732a\uff08MP\uff09\uff0c1\u4e3a\u5fe0\u732a\uff08ZP\uff09\uff0c2\u4e3a\u53cd\u732a\uff08FP\uff09\r\n int hp;//\u5f53\u524d\u751f\u547d\u503c\r\n int used_card;//\u8be5\u732a\u7d2f\u8ba1\u6478\u5230\u7684\u724c\u6570\uff08\u4e0d\u662f\u5f53\u524d\u624b\u4e2d\u724c\u6570\uff09\r\n int global_id;//\u5bf9\u5916\u5c55\u793a\u7684\u8eab\u4efd\r\n               //0\u4e3a\u672a\u66b4\u9732\u8eab\u4efd\uff0c1\u4e3a\u5df2\u7ecf\u66b4\u9732\u8eab\u4efd\uff0c2\u4e3a\u7c7b\u53cd\u732a\r\n bool zb;//\u662f\u5426\u88c5\u5907\u8bf8\u845b\u8fde\u5f29\r\n bool alive;//\u662f\u5426\u5b58\u6d3b\r\n char card[2005];//\u8be5\u732a\u6478\u8fc7\u7684\u6240\u6709\u724c\r\n bool is_used[2005];//\u5bf9\u5e94\u4f4d\u7f6e\u7684\u724c\u662f\u5426\u4f7f\u7528\u8fc7\r\n}p[15];\r\n```\r\n\r\n\u8fd9\u90e8\u5206\u5176\u5b9e\u95ee\u9898\u4e0d\u7b97\u592a\u5927\uff0c\u7406\u6e05\u601d\u8def\u5c31\u53ef\u4ee5\u641e\u5b9a\u3002\r\n\r\n## Part 2 \u51c6\u5907\u9636\u6bb5\r\n\r\n\u5728\u51c6\u5907\u9636\u6bb5\uff0c\u9996\u5148\u9700\u8981\u8bfb\u5165\u53c2\u52a0\u6e38\u620f\u7684\u732a\u7684\u6570\u91cf $ n $ \uff0c\u4ee5\u53ca\u724c\u5806\u5927\u5c0f $ m $ \u3002\r\n\r\n\u7136\u540e\uff0c\u8bfb\u5165\u6bcf\u53ea\u732a\u7684\u8eab\u4efd\u53ca\u521d\u59cb\u624b\u724c\uff0c\u6700\u540e\u8bfb\u5165\u724c\u5806\u3002\r\n\r\n```cpp\r\nvoid get_initial_info(int cur)//\u8bfb\u53d6\u6bcf\u53ea\u732a\u7684\u8eab\u4efd\uff0c\u521d\u59cb\u624b\u724c\uff0c\u5e76\u505a\u521d\u59cb\u5316\r\n{\r\n judge_identity(cur);\r\n get_initial_card(cur);\r\n if(cur==1)p[cur].front=n;\r\n else p[cur].front=cur-1;\r\n if(cur==n)p[cur].next=1;\r\n else p[cur].next=cur+1;\r\n p[cur].alive=true;\r\n p[cur].hp=4;\r\n}\r\n```\r\n\r\n```cpp\r\nvoid judge_identity(int cur)//\u5224\u65ad\u8eab\u4efd\r\n{\r\n char s[5];\r\n scanf(\"%s\",s);\r\n if(s[0]=='M')p[cur].id=0,p[cur].global_id=1;\r\n else if(s[0]=='Z')p[cur].id=1;\r\n else p[cur].id=2,alive_fp++;\r\n}\r\n```\r\n\r\n```cpp\r\nvoid get_initial_card(int cur)//\u8bfb\u5165\u521d\u59cb\u724c\r\n{\r\n char s[5];\r\n for(int i=1;i<=4;i++)\r\n {\r\n  scanf(\"%s\",s);\r\n  p[cur].used_card++;\r\n  p[cur].card[i]=s[0];\r\n }\r\n}\r\n```\r\n\r\n```cpp\r\nvoid get_card_queue()//\u8bfb\u5165\u724c\u5806\r\n{\r\n for(int i=1;i<=m;i++)\r\n {\r\n  char s[5];\r\n  scanf(\"%s\",s);\r\n  que[i]=s[0];\r\n }\r\n}\r\n```\r\n\r\n\u8fd9\u51e0\u4e2a\u6a21\u5757\u5b9e\u73b0\u96be\u5ea6\u4e5f\u5f88\u4f4e\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u5751\u70b9\u3002\r\n\r\n\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u724c\u5806\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u591f\u7528\uff0c\u8fd9\u4e2a\u95ee\u9898\u540e\u9762\u518d\u8bf4\u3002\r\n\r\n## Part 3 \u6e38\u620f\u9636\u6bb5\r\n\r\n\u6e38\u620f\u9636\u6bb5\u662f\u672c\u9898\u7684\u91cd\u5934\u620f\uff0c\u5751\u70b9\u4f17\u591a\u3002\u4e0b\u9762\u5c06\u4f1a\u8be6\u7ec6\u8bb2\u8ff0\u3002\r\n\r\n### Part 3.1 \u6e38\u620f\u9636\u6bb5\u6846\u67b6\r\n\r\n\u6846\u67b6\u5e76\u4e0d\u7b97\u592a\u590d\u6742\uff0c\u56e0\u4e3a\u7edd\u5927\u591a\u6570\u529f\u80fd\u90fd\u88ab\u5c01\u88c5\u5728\u51fd\u6570\u5f53\u4e2d\u5b9e\u73b0\u4e86\u3002\r\n\r\n```cpp\r\n//\u6e38\u620f\u9636\u6bb5\u5f00\u59cb\r\nwhile(res==-1)\r\n for(int i=1;i<=n;i=p[i].next)\r\n {\r\n  get_card(i),get_card(i);//\u6478\u724c\u9636\u6bb5\uff0c\u6478\u4e24\u5f20\u724c\r\n  int use_kill_num=0;//\u6ca1\u6709\u88c5\u5907\u8bf8\u845b\u8fde\u5f29\u7684\u732a\u4e00\u56de\u5408\u53ea\u80fd\u4f7f\u7528\u4e00\u5f20\u6740\r\n  for(int j=1;j<=p[i].used_card;j++)\r\n   if(!p[i].is_used[j])//\u6ca1\u6709\u4f7f\u7528\u8be5\u624b\u724c\u5c31\u4f7f\u7528\u5b83\r\n   {\r\n    bool is_used=false;\r\n    if(p[i].card[j]=='P')is_used=use_peach(i);//\u5403\u6843\r\n    else if(p[i].card[j]=='K')//\u6253\u51fa\u6740\r\n    {\r\n     if(use_kill_num==0||p[i].zb)is_used=use_kill(i);\r\n     if(is_used)use_kill_num++;\r\n    }\r\n    else if(p[i].card[j]=='F')is_used=use_fight(i);//\u6253\u51fa\u51b3\u6597\r\n    else if(p[i].card[j]=='Z')is_used=use_zgln(i);//\u88c5\u5907\u8bf8\u845b\u8fde\u5f29\r\n    else if(p[i].card[j]=='N')is_used=use_nzrq(i);//\u6253\u51fa\u5357\u86ee\u5165\u4fb5\r\n    else if(p[i].card[j]=='W')is_used=use_wjqf(i);//\u6253\u51fa\u4e07\u7bad\u9f50\u53d1\r\n    if(is_used)\r\n    {\r\n     if(i==1&&clear_mark)clear_mark=false;//\u8fd9\u53e5\u8bdd\u662f\u4e3a\u4e86\u907f\u514d\u4e00\u4e2a\u5c0fbug\uff0c\u4e0b\u9762\u4f1a\u8bb2\u5230\r\n     else p[i].is_used[j]=true;\r\n     j=0;//\u4f7f\u7528\u4e00\u5f20\u624b\u724c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u524d\u9762\u7684\u624b\u724c\u53d8\u4e3a\u53ef\u7528\uff0c\u56e0\u6b64\u8981\u4ece\u5934\u5f00\u59cb\u5224\u65ad\u6bcf\u4e00\u5f20\u724c\r\n    }\r\n    if(!p[i].alive)break;//\u5982\u679c\u8be5\u732a\u5df2\u7ecf\u6b7b\u4ea1\uff0c\u5c31\u7ed3\u675f\u5b83\u7684\u9636\u6bb5\r\n    if(res!=-1)break;//\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f\u7acb\u523b\u7ec8\u6b62\r\n   }\r\n  if(res!=-1)break;//\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f\u7acb\u523b\u7ec8\u6b62\r\n }\r\n//\u6e38\u620f\u9636\u6bb5\u7ed3\u675f\r\n```\r\n\r\n\u4ee5\u4e0a\u4ee3\u7801\u6a21\u62df\u4e86\u6bcf\u4e2a\u56de\u5408\u7684\u8fdb\u884c\u8fc7\u7a0b\uff0c\u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879\u8fd8\u662f\u6709\u5fc5\u8981\u518d\u8bf4\u660e\u4e00\u4e0b\uff1a\r\n\r\n1. \u4f7f\u7528\u4e00\u5f20\u624b\u724c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u524d\u9762\u7684\u624b\u724c\u53d8\u4e3a\u53ef\u7528\uff0c\u56e0\u6b64\u8981\u4ece\u5934\u5f00\u59cb\u5224\u65ad\u6bcf\u4e00\u5f20\u724c\uff1b\r\n2. \u5982\u679c\u5f53\u524d\u51fa\u724c\u7684\u732a\u6302\u4e86\uff0c**\u7acb\u523b**\u7ed3\u675f\u5b83\u7684\u9636\u6bb5\u3002\r\n\r\n\u5728\u63a5\u4e0b\u6765\u7684\u90e8\u5206\u4e2d\uff0c\u6211\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u6bcf\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u53ca\u5176\u6ce8\u610f\u4e8b\u9879\u3002\r\n\r\n### Part 3.2 \u6478\u724c\r\n\r\n\u6478\u724c\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u7b97\u96be\uff0c\u53ea\u9700\u8981\u5c06\u6478\u5230\u7684\u724c\u7ed9\u5bf9\u5e94\u7684\u732a\u5373\u53ef\u3002\r\n\r\n\u4f46\u6709\u4e00\u4e2a\u5751\u70b9\uff1a\u724c\u5806\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u591f\u7528\uff0c\u5982\u679c\u6ca1\u724c\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8981\u4e00\u76f4\u6478**\u6700\u540e\u4e00\u5f20\u724c**\u3002\r\n\r\n```cpp\r\nvoid get_card(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6478\u4e00\u5f20\u724c\r\n{\r\n p[cur].card[++p[cur].used_card]=que[curc];\r\n if(curc!=m)curc++;//\u724c\u5806\u7528\u5b8c\u7684\u65f6\u5019\uff0c\u8981\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c\r\n}\r\n```\r\n\r\n### Part 3.3 \u5403\u6843\r\n\r\n\u8fd9\u4e2a\u4e5f\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u6839\u636e\u9898\u610f\uff0c\u5982\u679c\u751f\u547d\u503c\u672a\u6ee1\uff0c\u6709\u6843\u4e00\u5b9a\u5403\u6389\u3002\r\n\r\n```cpp\r\nbool use_peach(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u4f7f\u7528\u4e00\u5f20\u6843\r\n{\r\n if(p[cur].hp<4)//\u751f\u547d\u672a\u6ee1\u7684\u65f6\u5019\u5c31\u5403\u6389\r\n {\r\n  p[cur].hp++;\r\n  return true;\r\n }\r\n else return false;//\u751f\u547d\u6ee1\u7684\u65f6\u5019\u5c31\u4e0d\u5403\u6843\u4e86\r\n}\r\n```\r\n\r\n### Part 3.4 \u88c5\u5907\u8bf8\u845b\u8fde\u5f29\r\n\r\n\u867d\u7136\u8fd9\u4e2a\u53ea\u9700\u8981\u4e00\u884c\uff0c\u4f46\u4e3a\u4e86\u7f8e\u89c2\uff0c\u6211\u4eec\u8fd8\u662f\u5c01\u88c5\u4e00\u4e0b\u3002\r\n\r\n```cpp\r\nbool use_zgln(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u88c5\u5907\u8bf8\u845b\u8fde\u5f29\r\n{\r\n p[cur].zb=true;\r\n return true;\r\n}\r\n```\r\n\r\n### Part 3.5 \u6253\u51fa\u6740/\u4ee5\u95ea\u6765\u54cd\u5e94\u6740\r\n\r\n\u524d\u9762\u51e0\u4e2a\u51fd\u6570\u90fd\u5341\u5206\u7b80\u5355\uff0c\u539f\u56e0\u5728\u4e8e\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f\u5bf9\u81ea\u8eab\u7684\u64cd\u4f5c\uff0c\u800c\u4e14\u4e0d\u4f1a\u66b4\u9732\u8eab\u4efd\u3002\r\n\r\n\u4ece\u8fd9\u90e8\u5206\u5f00\u59cb\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u90fd\u4f1a\u6709\u9009\u62e9\u76ee\u6807\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u53ef\u80fd\u9020\u6210\u7684\u8eab\u4efd\u7684\u66b4\u9732\u3002\r\n\r\n\u9996\u5148\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5728\u672c\u9898\u4e2d\uff0c\u8ddd\u79bb\u662f**\u5355\u5411**\u7684\u3002\u56e0\u6b64\u6211\u4eec\u5728\u6253\u51fa\u6740\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8003\u8651\u80fd\u5426\u5bf9\u5f53\u524d\u732a\u7684\u4e0b\u5bb6\u4f7f\u7528\u6740\u5373\u53ef\u3002\r\n\r\n\u7b2c\u4e8c\u70b9\u5c31\u662f\uff0c\u6ca1\u6709\u8bf8\u845b\u8fde\u5f29\u7684\u732a\u4e00\u56de\u5408\u53ea\u80fd\u6253\u51fa**\u4e00\u5f20**\u6740\u3002\r\n\r\n\u7b2c\u4e09\u70b9\uff0c\u4e00\u65e6\u4e00\u53ea\u732a\u6253\u51fa\u4e86\u6740\uff0c\u5b83\u7684\u8eab\u4efd\u5c31\u66b4\u9732\u4e86\u3002\r\n\r\n```cpp\r\nbool use_kill(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6253\u51fa\u4e00\u5f20\u6740\r\n{\r\n if(p[cur].id==2)//\u53cd\u732a\u4f1a\u5bf9\u4e3b\u732a\u548c\u8df3\u5fe0\u7684\u732a\u6253\u51fa\u6740\r\n {\r\n  if(p[p[cur].next].global_id==1&&(p[p[cur].next].id==1||p[p[cur].next].id==0))\r\n  {\r\n   p[cur].global_id=1;//\u6253\u51fa\u6740\u4f1a\u66b4\u9732\u8eab\u4efd\r\n   use_shan(p[cur].next);//\u88ab\u6740\u7684\u732a\u54cd\u5e94\u95ea\r\n   if(p[p[cur].next].hp<=0)die(p[cur].next,cur);//\u6fd2\u6b7b\u72b6\u6001\u5224\u5b9a\r\n   return true;\r\n  }\r\n }\r\n else if(p[cur].id==1)//\u5fe0\u732a\u4f1a\u5bf9\u8df3\u53cd\u7684\u732a\u6253\u51fa\u6740\r\n {\r\n  if(p[p[cur].next].global_id==1&&p[p[cur].next].id==2)\r\n  {\r\n   p[cur].global_id=1;\r\n   use_shan(p[cur].next);\r\n   if(p[p[cur].next].hp<=0)die(p[cur].next,cur);\r\n   return true;\r\n  }\r\n }\r\n else //\u4e3b\u732a\u4f1a\u5bf9\u8df3\u53cd\u7684\u732a\u6216\u7c7b\u53cd\u732a\u6253\u51fa\u6740\r\n {\r\n  if((p[p[cur].next].global_id==2)||(p[p[cur].next].global_id==1&&p[p[cur].next].id==2))\r\n  {\r\n   use_shan(p[cur].next);\r\n   if(p[p[cur].next].hp<=0)die(p[cur].next,cur);\r\n   return true;\r\n  }\r\n }\r\n return false;//\u6ca1\u6709\u53ef\u4ee5\u6253\u51fa\u6740\u7684\u5bf9\u8c61\r\n}\r\n```\r\n\r\n\u4ee5\u95ea\u6765\u54cd\u5e94\u6740\u7684\u8fc7\u7a0b\u5c31\u7b80\u5355\u591a\u4e86\u3002\u53ea\u9700\u5bfb\u627e\u662f\u5426\u6709\u95ea\uff0c\u5e76\u5f03\u7f6e\u95ea\u5373\u53ef\u3002\r\n\r\n```cpp\r\nvoid use_shan(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u9700\u8981\u6253\u51fa\u4e00\u5f20\u95ea\u6765\u54cd\u5e94\u6740\r\n{\r\n bool used_shan=false;\r\n for(int i=1;i<=p[cur].used_card;i++)\r\n  if(p[cur].card[i]=='D'&&p[cur].is_used[i]==false)\r\n  {\r\n   used_shan=true;\r\n   p[cur].is_used[i]=true;\r\n   break;\r\n  }\r\n if(!used_shan)p[cur].hp--;//\u6ca1\u6709\u95ea\u65f6\u8981\u6389\u8840\r\n}\r\n```\r\n\r\n### Part 3.6 \u6253\u51fa\u5357\u86ee\u5165\u4fb5/\u4e07\u7bad\u9f50\u53d1\r\n\r\n\u8fd9\u4e24\u4e2a\u9526\u56ca\u724c\u51e0\u4e4e\u76f8\u540c\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u653e\u4e00\u8d77\u8bb2\u4e86\u3002\r\n\r\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u6253\u51fa\u8fd9\u4e24\u5f20\u9526\u56ca\u724c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u66b4\u9732\u81ea\u5df1\u7684\u8eab\u4efd\uff0c\u4f46\u4e4b\u524d\u6ca1\u6709\u8df3\u5fe0/\u8df3\u53cd\u7684\u732a\uff0c\u6709\u53ef\u80fd\u5728\u6253\u51fa\u8fd9\u4e24\u5f20\u9526\u56ca\u724c\u4e4b\u540e\u4f1a\u88ab\u4e3b\u732a\u5224\u65ad\u4e3a\u7c7b\u53cd\u732a\u3002\u800c\u5df2\u7ecf\u8df3\u5fe0/\u8df3\u53cd\u7684\u732a\uff0c\u5b83\u4eec\u518d\u5bf9\u4e3b\u516c\u9020\u6210\u4f24\u5bb3\u65f6\uff0c\u4e0d\u4f1a\u88ab\u5224\u5b9a\u4e3a\u7c7b\u53cd\u732a\u3002\r\n\r\n\u8fd9\u91cc\u7684\u51e0\u4e2a\u5751\u70b9\uff1a\r\n\r\n1. \u65e0\u61c8\u53ef\u51fb\u53ea\u4f1a\u514d\u9664\u5bf9**\u4e00\u4e2a\u76ee\u6807**\u7684\u9526\u56ca\u6548\u679c\uff0c\u5e76\u4e0d\u4f1a\u4f7f\u6574\u4e2a\u9526\u56ca\u5931\u6548\uff1b\r\n2. \u5728\u7ed3\u7b97\u5357\u86ee\u5165\u4fb5/\u4e07\u7bad\u9f50\u53d1\u7684\u65f6\u5019\uff0c\u4e00\u65e6\u6e38\u620f\u7ed3\u675f\u6761\u4ef6\u8fbe\u6210\uff0c\u5c31**\u7acb\u523b\u7ec8\u6b62**\u9526\u56ca\u7ed3\u7b97\u8fc7\u7a0b\u3002\r\n\r\n```cpp\r\n//\u8fd9\u91cc\u53ea\u7ed9\u51fa\u5357\u86ee\u5165\u4fb5\u7684\u5b9e\u73b0\uff0c\u4e07\u7bad\u9f50\u53d1\u7684\u5b9e\u73b0\u7565\u53bb\r\nbool use_nzrq(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6253\u51fa\u5357\u86ee\u5165\u4fb5\r\n{\r\n for(int i=p[cur].next;i!=cur;i=p[i].next)\r\n {\r\n  bool used_kill=false;\r\n  if(p[i].global_id==1)//\u53ea\u6709\u66b4\u9732\u8eab\u4efd\u7684\u732a\u624d\u6709\u5176\u4ed6\u732a\u5bf9\u5b83\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\uff0c\u539f\u56e0\u89c1\u4e0b\u6587\r\n   if(use_wxkj(cur,p[i].id==0?1:p[i].id))continue;\r\n  //\u9700\u8981\u6ce8\u610f\uff0c\u65e0\u61c8\u53ef\u51fb\u53ea\u4f1a\u514d\u9664\u5bf9\u4e00\u4e2a\u76ee\u6807\u7684\u9526\u56ca\u6548\u679c\uff0c\u5e76\u4e0d\u4f1a\u4f7f\u6574\u4e2a\u9526\u56ca\u5931\u6548\r\n  for(int j=1;j<=p[i].used_card;j++)\r\n   if(p[i].card[j]=='K'&&p[i].is_used[j]==false)\r\n   {\r\n    p[i].is_used[j]=true;\r\n    used_kill=true;\r\n    break;\r\n   }\r\n  if(!used_kill)\r\n  {\r\n   p[i].hp--;\r\n   if(p[i].hp<=0)die(i,cur);\r\n   if(i==1&&p[cur].global_id==0)p[cur].global_id=2;\r\n   //\u6ca1\u66b4\u9732\u8eab\u4efd\uff0c\u4e14\u5bf9\u4e3b\u732a\u9020\u6210\u4f24\u5bb3\u7684\u732a\u4f1a\u88ab\u5224\u65ad\u4e3a\u7c7b\u53cd\u732a\r\n   if(res!=-1)return true;//\u4e00\u65e6\u6e38\u620f\u7ed3\u675f\u6761\u4ef6\u8fbe\u6210\uff0c\u7acb\u523b\u7ec8\u6b62\u9526\u56ca\u7ed3\u7b97\u8fc7\u7a0b\r\n  }\r\n }\r\n return true;\r\n}\r\n```\r\n\r\n### Part 3.7 \u51b3\u6597\r\n\r\n\u5173\u4e8e\u5bfb\u627e\u51b3\u6597\u76ee\u6807\uff0c\u5751\u70b9\u4e5f\u4e0d\u5c11\uff1a\u4e00\u65e6\u627e\u5230\u51b3\u6597\u76ee\u6807\uff0c\u8be5\u9526\u56ca\u5c31\u7acb\u523b\u88ab\u4f7f\u7528\uff08\u5373\u4f7f\u8be5\u9526\u56ca\u88ab\u65e0\u61c8\uff0c\u4e5f\u4e0d\u80fd\u627e\u4e0b\u4e00\u4e2a\u76ee\u6807\uff09\u3002\r\n\r\n```cpp\r\nbool use_fight(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6253\u51fa\u4e00\u5f20\u51b3\u6597\r\n{\r\n if(p[cur].id==2)//\u53cd\u732a\u51b3\u6597\u65f6\u603b\u662f\u627e\u4e3b\u732a\r\n {\r\n  p[cur].global_id=1;\r\n  bool flag=use_wxkj(cur,1);\r\n  if(!flag)battle(cur,1);//\u6267\u884c\u51b3\u6597\u8fc7\u7a0b\r\n  return true;//\u65e0\u8bba\u8be5\u9526\u56ca\u662f\u5426\u88ab\u65e0\u61c8\uff0c\u8be5\u9526\u56ca\u90fd\u5df2\u7ecf\u88ab\u6253\u51fa\r\n }\r\n else if(p[cur].id==1)\r\n {\r\n  for(int i=p[cur].next;i!=cur;i=p[i].next)\r\n   if(p[i].global_id==1&&p[i].id==2)//\u5fe0\u732a\u627e\u8df3\u53cd\u7684\u732a\u51b3\u6597\r\n   {\r\n    p[cur].global_id=1;\r\n    bool flag=false;\r\n    if(p[i].global_id==1)flag=use_wxkj(cur,2);\r\n    if(!flag)battle(cur,i);\r\n    return true;\r\n   }\r\n }\r\n else\r\n {\r\n  for(int i=p[cur].next;i!=cur;i=p[i].next)\r\n   if((p[i].global_id==1&&p[i].id==2)||p[i].global_id==2)//\u4e3b\u732a\u627e\u8df3\u53cd\u7684\u732a\u548c\u7c7b\u53cd\u732a\r\n   {\r\n    bool flag=false;\r\n    if(p[i].global_id==1)flag=use_wxkj(cur,2);\r\n    if(!flag)battle(1,i);\r\n    return true;\r\n   }\r\n }\r\n return false;//\u6ca1\u6709\u76ee\u6807\u53ef\u4ee5\u8fdb\u884c\u51b3\u6597\r\n}\r\n```\r\n\r\n\u6267\u884c\u51b3\u6597\u8fc7\u7a0b\u65f6\uff0c\u9700\u8981\u6ce8\u610f\uff1a\r\n\r\n1. \u51b3\u6597\u7684\u4f24\u5bb3\u6765\u6e90\u662f**\u6ca1\u6709\u53d7\u5230\u4f24\u5bb3\u7684\u4e00\u65b9**\u3002\r\n2. \u5fe0\u732a\u5728\u4e0e\u4e3b\u732a\u8fdb\u884c\u51b3\u6597\u65f6\uff0c**\u5fc5\u5b9a**\u6389\u8840\uff08\u4e8e\u662f\u5fe0\u732a\u5c31\u767d\u767d\u6210\u4e3a\u4e86\u4e3b\u732a\u7684\u727a\u7272\u54c1\uff09\u3002\r\n\r\n```cpp\r\nvoid battle(int attacker,int defender)//\u6267\u884c\u51b3\u6597\u8fc7\u7a0b\r\n{\r\n if(attacker==1&&p[defender].id==1)//\u5fe0\u732a\u5728\u4e0e\u4e3b\u732a\u51b3\u6597\u65f6\uff0c\u5fc5\u5b9a\u6389\u8840\r\n {\r\n  p[defender].hp--;\r\n  if(p[defender].hp<=0)die(defender,attacker);\r\n  return;\r\n }\r\n int curp=defender;\r\n while(1)\r\n {\r\n  bool flag=false;\r\n  for(int i=1;i<=p[curp].used_card;i++)\r\n   if(p[curp].card[i]=='K'&&p[curp].is_used[i]==false)\r\n   {\r\n    p[curp].is_used[i]=true;\r\n    flag=true;\r\n    break;\r\n   }\r\n  if(flag)curp=(curp==defender?attacker:defender);//\u8f6e\u5230\u5bf9\u65b9\u5f03\u7f6e\u6740\r\n  else\r\n  {\r\n   p[curp].hp--;\r\n   if(p[curp].hp<=0)die(curp,attacker==curp?defender:attacker);//\u6ca1\u6709\u53d7\u5230\u4f24\u5bb3\u7684\u4e00\u65b9\u4e3a\u4f24\u5bb3\u6765\u6e90\r\n   return;\r\n  }\r\n }\r\n}\r\n```\r\n\r\n### Part 3.8 \u6fd2\u6b7b\u7ed3\u7b97\r\n\r\n\u5728\u770b\u4e0b\u9762\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u8bf7\u8ba4\u771f\u9605\u8bfb\u4e0b\u9762\u8fd9\u53e5\u8bdd\u81f3\u5c11\u4e09\u904d\uff1a\r\n\r\n> \u6ce8\u610f\uff0c\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f**\u7acb\u523b**\u7ed3\u675f\uff0c\u56e0\u6b64\u5373\u4f7f\u4f1a\u64783\u5f20\u724c\u6216\u8005\u8fd8\u6709\u724c\u53ef\u4ee5\u7528\u4e5f\u4e0d\u7528\u6267\u884c\u4e86\u3002\r\n\r\n\u8fd9\u610f\u5473\u7740\uff0c\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\u90fd\u662f\u4e0d\u8be5\u53d1\u751f\u7684\uff1a\r\n\r\n1. \u628a\u6700\u540e\u4e00\u53ea\u53cd\u732a\u6740\u6b7b\u540e\uff0c\u6740\u6b7b\u53cd\u732a\u7684\u732a\u5148\u6478 3 \u5f20\u724c\uff0c\u7136\u540e\u7ed3\u675f\u6e38\u620f\u3002\r\n2. \u5728\u6e38\u620f\u80dc\u5229\u6761\u4ef6\u8fbe\u6210\u540e\uff0c\u672a\u5b8c\u6210\u7ed3\u7b97\u7684\u9526\u56ca\u7ee7\u7eed\u8fdb\u884c\u7ed3\u7b97\uff0c\u53c8\u8ba9\u51e0\u53ea\u732a\u6302\u6389\u3002\r\n\r\n\u60c5\u51b5 2 \u7684\u5e94\u5bf9\u65b9\u6cd5\u521a\u624d\u5728\u8bb2\u5357\u86ee\u5165\u4fb5\u7684\u5b9e\u73b0\u65f6\u5df2\u7ecf\u7ed9\u51fa\u4e86\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\r\n\r\n\u73b0\u5728\u5c31\u53ef\u4ee5\u7ed9\u51fa\u6fd2\u6b7b\u7ed3\u7b97\u7684\u5224\u65ad\u4ee3\u7801\u4e86\uff1a\r\n\r\n```cpp\r\nvoid die(int cur,int killer)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6b63\u5904\u5728\u6fd2\u6b7b\u72b6\u6001\uff0c\u6740\u624b\u4e3akiller\r\n{\r\n for(int i=1;i<=p[cur].used_card;i++)\r\n  if(p[cur].card[i]=='P'&&p[cur].is_used[i]==false)\r\n  {\r\n   p[cur].hp++;\r\n   p[cur].is_used[i]=true;\r\n   if(p[cur].hp>0)return;//\u8be5\u732a\u6446\u8131\u4e86\u6fd2\u6b7b\u72b6\u6001\r\n  }\r\n p[cur].alive=false;//\u5c06\u8be5\u732a\u6807\u8bb0\u4e3a\u6b7b\u4ea1\r\n p[p[cur].front].next=p[cur].next;//\u6539\u53d8\u51fa\u724c\u987a\u5e8f\r\n p[p[cur].next].front=p[cur].front;\r\n if(p[cur].id==0)//\u4e3b\u732a\u6b7b\u4ea1\uff0c\u53cd\u732a\u80dc\u5229\r\n {\r\n  res=1;\r\n  return;\r\n }\r\n if(p[cur].id==2)\r\n {\r\n  alive_fp--;\r\n  if(alive_fp==0)//\u5148\u5224\u65ad\u6e38\u620f\u80dc\u5229\u6761\u4ef6\u662f\u5426\u8fbe\u6210\uff0c\u5982\u679c\u8fbe\u6210\uff0c\u5c31\u4e0d\u518d\u6478\u724c\u4e86\r\n  {\r\n   res=0;\r\n   return;\r\n  }\r\n  get_card(killer),get_card(killer),get_card(killer);//\u6740\u6b7b\u53cd\u732a\u7684\u732a\u64783\u5f20\u724c\r\n }\r\n else if(p[cur].id==1&&killer==1)//\u4e3b\u732a\u6740\u6b7b\u5fe0\u732a\uff0c\u5f03\u7f6e\u6240\u6709\u624b\u724c\u548c\u88c5\u5907\r\n {\r\n  p[1].used_card=0;//\u6e05\u7a7a\u724c\u5806\r\n  memset(p[1].card,0,sizeof(p[1].card));\r\n  memset(p[1].is_used,false,sizeof(p[1].is_used));\r\n  p[1].zb=false;//\u5378\u6389\u88c5\u5907\r\n  clear_mark=true;//\u9632\u6b62\u724c\u6253\u51fa\u72b6\u6001\u88ab\u610f\u5916\u6539\u53d8\r\n }\r\n}\r\n```\r\n\r\n\u4f60\u4e5f\u8bb8\u4f1a\u5947\u602a\u5f00\u59cb\u7a0b\u5e8f\u6846\u67b6\u4e2d\u7684 `clear_mark` \u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u73b0\u5728\u53ef\u4ee5\u7ed9\u51fa\u7b54\u6848\u4e86\u3002\r\n\r\n\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bb0\u3002\r\n\r\n\u7531\u4e8e mark \u5df2\u7ecf\u4f7f\u7528\u7684\u724c\u662f\u5728\u724c\u7ed3\u7b97\u5b8c\u6210\u4e4b\u540e\uff08\u4e5f\u5728\u6fd2\u6b7b\u7ed3\u7b97\u4e4b\u540e\uff09\uff0cmark \u64cd\u4f5c\u4f1a\u5bfc\u81f4\u5df2\u7ecf\u88ab\u6e05\u7a7a\u7684\u4e3b\u732a\u724c\u5806\u4e2d\u7684\u4e00\u5f20\u4e0d\u5b58\u5728\u7684\u724c\u88ab\u6253\u4e0a\u4e00\u4e2a\u9519\u8bef\u7684\u6807\u8bb0\u3002\uff08\u8fd9\u4e2a\u5c0f bug \u5bfc\u81f4\u6211\u672c\u6765 AC \u7684\u7a0b\u5e8f\u53d8\u6210\u4e86 95 \u5206\uff09\r\n\r\n\u6240\u4ee5\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6807\u8bb0\uff0c\u6211\u4eec\u5224\u65ad\u4e3b\u732a\u7684\u6807\u8bb0\u662f\u5426\u88ab\u6e05\u7a7a\uff0c\u5982\u679c\u4e3b\u732a\u7684\u6807\u8bb0\u5df2\u7ecf\u88ab\u6e05\u7a7a\uff0c\u5c31\u4e0d\u8981\u6253\u9519\u8bef\u7684\u6807\u8bb0\u4e86\u3002\r\n\r\n### Part 3.9 \u6253\u51fa\u65e0\u61c8\u53ef\u51fb\r\n\r\n\u5982\u679c\u4f60\u5b8c\u6210\u4e86\u4e0a\u9762\u51e0\u4e2a\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u606d\u559c\u4f60\u5df2\u7ecf\u62ff\u5230\u4e86 30 \u5206\uff01\r\n\r\n\u63a5\u4e0b\u6765\u5c31\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u91cd\u5934\u620f\uff1a\u65e0\u61c8\u53ef\u51fb\u3002\r\n\r\n\u4f3c\u4e4e\u65e0\u61c8\u53ef\u51fb\u7684\u4f7f\u7528\u89c4\u5219\u5f88\u590d\u6742\uff1f\u90a3\u5c31\u91cd\u65b0\u8bfb\u4e00\u904d\u4e0b\u9762\u7684\u5185\u5bb9\u5427\uff01\r\n\r\n> \u732e\u6bb7\u52e4\uff1a\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u6321\u4e0b\u5357\u732a\u5165\u4fb5\u3001\u4e07\u7bad\u9f50\u53d1\u3001\u51b3\u6597\uff1b\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\u8868\u654c\u610f\uff1b\r\n\r\n> \u8868\u654c\u610f\uff1a\u2026\u2026\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\u732e\u6bb7\u52e4\uff1b\r\n\r\n> \u5171\u6027\uff1a\u2026\u2026**\u4e0d\u4f1a**\u5bf9\u672a\u8868\u660e\u8eab\u4efd\u7684\u732a\u732e\u6bb7\u52e4\uff08**\u5305\u62ec\u81ea\u5df1**\uff09\uff1b\r\n\r\n\u4ece\u4e0a\u9762\u8fd9\u6bb5\u8bdd\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u51fa\u4ee5\u4e0b\u51e0\u4e2a\u89c4\u5f8b\uff1a\r\n\r\n1. \u5bf9\u4e8e\u4e00\u4e2a\u6ca1\u6709\u66b4\u9732\u8eab\u4efd\u7684\u732a\uff0c\u6ca1\u6709\u732a\u80fd\u7ed9\u5b83\u51fa\u65e0\u61c8\u53ef\u51fb\u3002\uff08\u5b83\u81ea\u5df1\u4e5f\u4e0d\u884c\uff09\r\n2. \u56e0\u4e3a\u5728\u8be5\u95ee\u9898\u4e2d\uff0c\u6240\u6709\u7684\u9526\u56ca\u90fd\u4f1a\u5bf9\u9526\u56ca\u76ee\u6807\u9020\u6210\u4f24\u5bb3\uff0c\u90a3\u4e48\u5047\u5982\u9526\u56ca\u724c\u7684\u76ee\u6807\u4e3a A\uff0c\u90a3\u4e48\u548c A \u4e00\u6d3e\u7684\u732a\uff0c\u4e00\u5b9a\u4f1a\u4f7f\u9526\u56ca\u65e0\u6548\uff08\u5373\u5bf9 A \u732e\u6bb7\u52e4\uff09\uff1b\u4e0d\u548c A \u4e00\u6d3e\u7684\u732a\uff0c\u4e00\u5b9a\u4f1a\u4f7f\u9526\u56ca\u751f\u6548\uff08\u5373\u5bf9 A \u8868\u654c\u610f\uff09\u3002\r\n3. \u4e00\u53ea\u732a\u6253\u51fa\u4e86\u65e0\u61c8\u53ef\u51fb\uff0c\u5c31\u4f1a\u66b4\u9732\u81ea\u5df1\u7684\u8eab\u4efd\u3002\r\n\r\n\u4f3c\u4e4e\u6709\u4e86\u4e00\u70b9\u5934\u7eea\uff1a\u6211\u4eec\u53ef\u4ee5\u5c06\u51fa\u65e0\u61c8\u53ef\u51fb\u7684\u8fc7\u7a0b\u7528\u9012\u5f52\u5b9e\u73b0\u3002\r\n\r\n\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u8bbe\u4e3b\u732a\u4e00\u6d3e\u4e3a 1 \u65b9\uff0c\u53cd\u732a\u4e00\u6d3e\u4e3a 2 \u65b9\u3002\u5047\u5982\u6709\u4eba\u5bf9 1 \u65b9\u7684\u732a\u51fa\u4e86\u4e00\u5f20\u9526\u56ca\uff0c\u90a3\u4e48\u5c31\u5148\u7531 1 \u65b9\u7684\u732a\u51fa\u65e0\u61c8\u53ef\u51fb\u62b5\u9500\u8be5\u9526\u56ca\u7684\u6548\u679c\uff0c\u7136\u540e\u7531 2 \u65b9\u62b5\u95001\u65b9\u51fa\u7684\u65e0\u61c8\u53ef\u51fb\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\uff08\u53cd\u4e4b\u4e5f\u540c\u7406\uff09\r\n\r\n\u5b9e\u73b0\u65f6\u6709\u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879\uff1a\r\n\r\n1. \u51fa\u65e0\u61c8\u53ef\u51fb\u7684\u987a\u5e8f\u662f\uff1a\u4ece**\u4f7f\u7528\u9526\u56ca\u7684\u732a**\u5f00\u59cb\uff0c\u6309\u9006\u65f6\u9488\u987a\u5e8f\u51fa\u65e0\u61c8\u53ef\u51fb\u3002\uff08\u4e4b\u524d\u8bef\u4ee5\u4e3a\u662f\u4ece\u9526\u56ca\u7684\u76ee\u6807\u5f00\u59cb\uff0c\u7ed3\u679c\u9519\u7684\u5f88\u60e8\uff09\r\n2. \u522b\u5fd8\u4e86\u628a\u51fa\u65e0\u61c8\u53ef\u51fb\u7684\u732a\u7684\u8eab\u4efd\u66b4\u9732\u51fa\u6765\u3002\r\n\r\n```cpp\r\nbool use_wxkj(int cur,int sit)\r\n//\u8f6e\u5230\u7f16\u53f7cur\u7684\u732a\u51fa\u65e0\u61c8\u53ef\u51fb\uff0c\u9526\u56ca\u724c\u7684\u76ee\u6807\u4e3asit\u4e00\u65b9\uff081\u4ee3\u8868\u4e3b\u732a\u4e00\u65b9\uff0c2\u4ee3\u8868\u53cd\u732a\u4e00\u65b9\uff09\r\n{\r\n int curp=cur;\r\n do\r\n {\r\n  if(p[curp].id!=2&&sit==1)\r\n  {\r\n   for(int i=1;i<=p[curp].used_card;i++)\r\n    if(p[curp].card[i]=='J'&&p[curp].is_used[i]==false)\r\n    {\r\n     p[curp].is_used[i]=true;\r\n     if(p[curp].global_id!=1)p[curp].global_id=1;\r\n     return !use_wxkj(curp,2);//\u8f6e\u5230\u76f8\u53cd\u4e00\u65b9\u51fa\u65e0\u61c8\u53ef\u51fb\r\n    }\r\n  }\r\n  if(p[curp].id==2&&sit==2)\r\n  {\r\n   for(int i=1;i<=p[curp].used_card;i++)\r\n    if(p[curp].card[i]=='J'&&p[curp].is_used[i]==false)\r\n    {\r\n     p[curp].is_used[i]=true;\r\n     if(p[curp].global_id!=1)p[curp].global_id=1;\r\n     return !use_wxkj(curp,1);\r\n    }\r\n  }\r\n  curp=p[curp].next;\r\n }while(curp!=cur);\r\n return false;\r\n}\r\n```\r\n\r\n## Part 4 \u8f93\u51fa\u7ed3\u679c\u9636\u6bb5\r\n\r\n\u5982\u679c\u4f60\u770b\u5b8c\u4e86\u524d\u9762\u8fd9\u4e00\u5927\u6bb5\u5185\u5bb9\uff0c\u8fd9\u5269\u4e0b\u7684\u5185\u5bb9\u5c31\u7b80\u5355\u591a\u4e86\u3002\r\n\r\n```cpp\r\n//\u8f93\u51fa\u7ed3\u679c\u9636\u6bb5\u5f00\u59cb\r\nif(res==0)puts(\"MP\");\r\nelse puts(\"FP\");\r\nfor(int i=1;i<=n;i++)\r\n{\r\n if(!p[i].alive)\r\n {\r\n  puts(\"DEAD\");\r\n  continue;\r\n }\r\n for(int j=1;j<=p[i].used_card;j++)\r\n  if(!p[i].is_used[j])printf(\"%c \",p[i].card[j]);\r\n puts(\"\");\r\n}\r\n//\u8f93\u51fa\u7ed3\u679c\u9636\u6bb5\u7ed3\u675f\r\n```\r\n\r\n## \u5b8c\u6574\u4ee3\u7801\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\nusing namespace std;\r\nstruct pig\r\n{\r\n int front,next;//\u4ee5\u94fe\u5f0f\u7ed3\u6784\u5b58\u50a8\u8be5\u732a\u4e4b\u524d\u7684\u732a\u548c\u4e0b\u4e00\u53ea\u732a\r\n int id;//\u732a\u7684\u8eab\u4efd\r\n        //0\u4e3a\u4e3b\u732a\uff08MP\uff09\uff0c1\u4e3a\u5fe0\u732a\uff08ZP\uff09\uff0c2\u4e3a\u53cd\u732a\uff08FP\uff09\r\n int hp;//\u5f53\u524d\u751f\u547d\u503c\r\n int used_card;//\u8be5\u732a\u7d2f\u8ba1\u6478\u5230\u7684\u724c\u6570\uff08\u4e0d\u662f\u5f53\u524d\u624b\u4e2d\u724c\u6570\uff09\r\n int global_id;//\u5bf9\u5916\u5c55\u793a\u7684\u8eab\u4efd\r\n               //0\u4e3a\u672a\u66b4\u9732\u8eab\u4efd\uff0c1\u4e3a\u5df2\u7ecf\u66b4\u9732\u8eab\u4efd\uff0c2\u4e3a\u7c7b\u53cd\u732a\r\n bool zb;//\u662f\u5426\u88c5\u5907\u8bf8\u845b\u8fde\u5f29\r\n bool alive;//\u662f\u5426\u5b58\u6d3b\r\n char card[2005];//\u8be5\u732a\u6478\u8fc7\u7684\u6240\u6709\u724c\r\n bool is_used[2005];//\u5bf9\u5e94\u4f4d\u7f6e\u7684\u724c\u662f\u5426\u4f7f\u7528\u8fc7\r\n}p[15];\r\nint n,m,curc=1;//curc\uff1a\u724c\u5806\u9876\u7aef\u4f4d\u7f6e\r\nint alive_fp;//\u5b58\u6d3b\u732a\u7684\u6570\u91cf\r\nint res=-1;//\u6e38\u620f\u7ed3\u679c\r\n           //-1\uff1a\u6e38\u620f\u672a\u7ed3\u675f\uff0c0\uff1a\u4e3b\u732a\u80dc\uff0c1\uff1a\u53cd\u732a\u80dc\r\nchar que[2005];//card queue(a.k.a. pai dui)\r\nbool clear_mark;//\u4e3b\u732a\u724c\u5806\u6e05\u7a7a\u6807\u8bb0\uff08\u9632\u6b62\u610f\u5916\u6807\u8bb0\uff09\r\nvoid judge_identity(int cur)//\u5224\u65ad\u8eab\u4efd\r\n{\r\n char s[5];\r\n scanf(\"%s\",s);\r\n if(s[0]=='M')p[cur].id=0,p[cur].global_id=1;\r\n else if(s[0]=='Z')p[cur].id=1;\r\n else p[cur].id=2,alive_fp++;\r\n}\r\nvoid get_initial_card(int cur)//\u8bfb\u5165\u521d\u59cb\u724c\r\n{\r\n char s[5];\r\n for(int i=1;i<=4;i++)\r\n {\r\n  scanf(\"%s\",s);\r\n  p[cur].used_card++;\r\n  p[cur].card[i]=s[0];\r\n }\r\n}\r\nvoid get_card(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6478\u4e00\u5f20\u724c\r\n{\r\n p[cur].card[++p[cur].used_card]=que[curc];\r\n if(curc!=m)curc++;//\u724c\u5806\u7528\u5b8c\u7684\u65f6\u5019\uff0c\u8981\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c\r\n}\r\nvoid die(int cur,int killer)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6b63\u5904\u5728\u6fd2\u6b7b\u72b6\u6001\uff0c\u6740\u624b\u4e3akiller\r\n{\r\n for(int i=1;i<=p[cur].used_card;i++)\r\n  if(p[cur].card[i]=='P'&&p[cur].is_used[i]==false)\r\n  {\r\n   p[cur].hp++;\r\n   p[cur].is_used[i]=true;\r\n   if(p[cur].hp>0)return;//\u8be5\u732a\u6446\u8131\u4e86\u6fd2\u6b7b\u72b6\u6001\r\n  }\r\n p[cur].alive=false;//\u5c06\u8be5\u732a\u6807\u8bb0\u4e3a\u6b7b\u4ea1\r\n p[p[cur].front].next=p[cur].next;//\u6539\u53d8\u51fa\u724c\u987a\u5e8f\r\n p[p[cur].next].front=p[cur].front;\r\n if(p[cur].id==0)//\u4e3b\u732a\u6b7b\u4ea1\uff0c\u53cd\u732a\u80dc\u5229\r\n {\r\n  res=1;\r\n  return;\r\n }\r\n if(p[cur].id==2)\r\n {\r\n  alive_fp--;\r\n  if(alive_fp==0)//\u5148\u5224\u65ad\u6e38\u620f\u80dc\u5229\u6761\u4ef6\u662f\u5426\u8fbe\u6210\uff0c\u5982\u679c\u8fbe\u6210\uff0c\u5c31\u4e0d\u518d\u6478\u724c\u4e86\r\n  {\r\n   res=0;\r\n   return;\r\n  }\r\n  get_card(killer),get_card(killer),get_card(killer);//\u6740\u6b7b\u53cd\u732a\u7684\u732a\u64783\u5f20\u724c\r\n }\r\n else if(p[cur].id==1&&killer==1)//\u4e3b\u732a\u6740\u6b7b\u5fe0\u732a\uff0c\u5f03\u7f6e\u6240\u6709\u624b\u724c\u548c\u88c5\u5907\r\n {\r\n  p[1].used_card=0;//\u6e05\u7a7a\u724c\u5806\r\n  memset(p[1].card,0,sizeof(p[1].card));\r\n  memset(p[1].is_used,false,sizeof(p[1].is_used));\r\n  p[1].zb=false;//\u5378\u6389\u88c5\u5907\r\n  clear_mark=true;//\u9632\u6b62\u724c\u6253\u51fa\u72b6\u6001\u88ab\u610f\u5916\u6539\u53d8\r\n }\r\n}\r\nbool use_peach(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u4f7f\u7528\u4e00\u5f20\u6843\r\n{\r\n if(p[cur].hp<4)//\u751f\u547d\u672a\u6ee1\u7684\u65f6\u5019\u5c31\u5403\u6389\r\n {\r\n  p[cur].hp++;\r\n  return true;\r\n }\r\n else return false;//\u751f\u547d\u6ee1\u7684\u65f6\u5019\u5c31\u4e0d\u5403\u6843\u4e86\r\n}\r\nbool use_wxkj(int cur,int sit)\r\n//\u8f6e\u5230\u7f16\u53f7cur\u7684\u732a\u51fa\u65e0\u61c8\u53ef\u51fb\uff0c\u9526\u56ca\u724c\u7684\u76ee\u6807\u4e3asit\u4e00\u65b9\uff081\u4ee3\u8868\u4e3b\u732a\u4e00\u65b9\uff0c2\u4ee3\u8868\u53cd\u732a\u4e00\u65b9\uff09\r\n{\r\n int curp=cur;\r\n do\r\n {\r\n  if(p[curp].id!=2&&sit==1)\r\n  {\r\n   for(int i=1;i<=p[curp].used_card;i++)\r\n    if(p[curp].card[i]=='J'&&p[curp].is_used[i]==false)\r\n    {\r\n     p[curp].is_used[i]=true;\r\n     if(p[curp].global_id!=1)p[curp].global_id=1;\r\n     return !use_wxkj(curp,2);//\u8f6e\u5230\u76f8\u53cd\u4e00\u65b9\u51fa\u65e0\u61c8\u53ef\u51fb\r\n    }\r\n  }\r\n  if(p[curp].id==2&&sit==2)\r\n  {\r\n   for(int i=1;i<=p[curp].used_card;i++)\r\n    if(p[curp].card[i]=='J'&&p[curp].is_used[i]==false)\r\n    {\r\n     p[curp].is_used[i]=true;\r\n     if(p[curp].global_id!=1)p[curp].global_id=1;\r\n     return !use_wxkj(curp,1);\r\n    }\r\n  }\r\n  curp=p[curp].next;\r\n }while(curp!=cur);\r\n return false;\r\n}\r\nvoid use_shan(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u9700\u8981\u6253\u51fa\u4e00\u5f20\u95ea\u6765\u54cd\u5e94\u6740\r\n{\r\n bool used_shan=false;\r\n for(int i=1;i<=p[cur].used_card;i++)\r\n  if(p[cur].card[i]=='D'&&p[cur].is_used[i]==false)\r\n  {\r\n   used_shan=true;\r\n   p[cur].is_used[i]=true;\r\n   break;\r\n  }\r\n if(!used_shan)p[cur].hp--;//\u6ca1\u6709\u95ea\u65f6\u8981\u6389\u8840\r\n}\r\nbool use_kill(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6253\u51fa\u4e00\u5f20\u6740\r\n{\r\n if(p[cur].id==2)//\u53cd\u732a\u4f1a\u5bf9\u4e3b\u732a\u548c\u8df3\u5fe0\u7684\u732a\u6253\u51fa\u6740\r\n {\r\n  if(p[p[cur].next].global_id==1&&(p[p[cur].next].id==1||p[p[cur].next].id==0))\r\n  {\r\n   p[cur].global_id=1;\r\n   use_shan(p[cur].next);//\u88ab\u6740\u7684\u732a\u54cd\u5e94\u95ea\r\n   if(p[p[cur].next].hp<=0)die(p[cur].next,cur);//\u6fd2\u6b7b\u72b6\u6001\u5224\u5b9a\r\n   return true;\r\n  }\r\n }\r\n else if(p[cur].id==1)//\u5fe0\u732a\u4f1a\u5bf9\u8df3\u53cd\u7684\u732a\u6253\u51fa\u6740\r\n {\r\n  if(p[p[cur].next].global_id==1&&p[p[cur].next].id==2)\r\n  {\r\n   p[cur].global_id=1;\r\n   use_shan(p[cur].next);\r\n   if(p[p[cur].next].hp<=0)die(p[cur].next,cur);\r\n   return true;\r\n  }\r\n }\r\n else //\u4e3b\u732a\u4f1a\u5bf9\u8df3\u53cd\u7684\u732a\u6216\u7c7b\u53cd\u732a\u6253\u51fa\u6740\r\n {\r\n  if((p[p[cur].next].global_id==2)||(p[p[cur].next].global_id==1&&p[p[cur].next].id==2))\r\n  {\r\n   use_shan(p[cur].next);\r\n   if(p[p[cur].next].hp<=0)die(p[cur].next,cur);\r\n   return true;\r\n  }\r\n }\r\n return false;//\u6ca1\u6709\u53ef\u4ee5\u6253\u51fa\u6740\u7684\u5bf9\u8c61\r\n}\r\nvoid battle(int attacker,int defender)//\u6267\u884c\u51b3\u6597\u8fc7\u7a0b\r\n{\r\n if(attacker==1&&p[defender].id==1)//\u5fe0\u732a\u5728\u4e0e\u4e3b\u732a\u51b3\u6597\u65f6\uff0c\u5fc5\u5b9a\u6389\u8840\r\n {\r\n  p[defender].hp--;\r\n  if(p[defender].hp<=0)die(defender,attacker);\r\n  return;\r\n }\r\n int curp=defender;\r\n while(1)\r\n {\r\n  bool flag=false;\r\n  for(int i=1;i<=p[curp].used_card;i++)\r\n   if(p[curp].card[i]=='K'&&p[curp].is_used[i]==false)\r\n   {\r\n    p[curp].is_used[i]=true;\r\n    flag=true;\r\n    break;\r\n   }\r\n  if(flag)curp=(curp==defender?attacker:defender);//\u8f6e\u5230\u5bf9\u65b9\u5f03\u7f6e\u6740\r\n  else\r\n  {\r\n   p[curp].hp--;\r\n   if(p[curp].hp<=0)die(curp,attacker==curp?defender:attacker);//\u6ca1\u6709\u53d7\u5230\u4f24\u5bb3\u7684\u4e00\u65b9\u4e3a\u4f24\u5bb3\u6765\u6e90\r\n   return;\r\n  }\r\n }\r\n}\r\nbool use_fight(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6253\u51fa\u4e00\u5f20\u51b3\u6597\r\n{\r\n if(p[cur].id==2)//\u53cd\u732a\u51b3\u6597\u65f6\u603b\u662f\u627e\u4e3b\u732a\r\n {\r\n  p[cur].global_id=1;\r\n  bool flag=use_wxkj(cur,1);\r\n  if(!flag)battle(cur,1);//\u6267\u884c\u51b3\u6597\u8fc7\u7a0b\r\n  return true;//\u65e0\u8bba\u8be5\u9526\u56ca\u662f\u5426\u88ab\u65e0\u61c8\uff0c\u8be5\u9526\u56ca\u90fd\u5df2\u7ecf\u88ab\u6253\u51fa\r\n }\r\n else if(p[cur].id==1)\r\n {\r\n  for(int i=p[cur].next;i!=cur;i=p[i].next)\r\n   if(p[i].global_id==1&&p[i].id==2)//\u5fe0\u732a\u627e\u8df3\u53cd\u7684\u732a\u51b3\u6597\r\n   {\r\n    p[cur].global_id=1;\r\n    bool flag=false;\r\n    if(p[i].global_id==1)flag=use_wxkj(cur,2);\r\n    if(!flag)battle(cur,i);\r\n    return true;\r\n   }\r\n }\r\n else\r\n {\r\n  for(int i=p[cur].next;i!=cur;i=p[i].next)\r\n   if((p[i].global_id==1&&p[i].id==2)||p[i].global_id==2)//\u4e3b\u732a\u627e\u8df3\u53cd\u7684\u732a\u548c\u7c7b\u53cd\u732a\r\n   {\r\n    bool flag=false;\r\n    if(p[i].global_id==1)flag=use_wxkj(cur,2);\r\n    if(!flag)battle(1,i);\r\n    return true;\r\n   }\r\n }\r\n return false;//\u6ca1\u6709\u76ee\u6807\u53ef\u4ee5\u8fdb\u884c\u51b3\u6597\r\n}\r\nbool use_zgln(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u88c5\u5907\u8bf8\u845b\u8fde\u5f29\r\n{\r\n p[cur].zb=true;\r\n return true;\r\n}\r\nbool use_nzrq(int cur)//\u7f16\u53f7\u4e3acur\u7684\u732a\u6253\u51fa\u5357\u86ee\u5165\u4fb5\r\n{\r\n for(int i=p[cur].next;i!=cur;i=p[i].next)\r\n {\r\n  bool used_kill=false;\r\n  if(p[i].global_id==1)//\u53ea\u6709\u66b4\u9732\u8eab\u4efd\u7684\u732a\u624d\u6709\u5176\u4ed6\u732a\u5bf9\u5b83\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\r\n   if(use_wxkj(cur,p[i].id==0?1:p[i].id))continue;\r\n  //\u9700\u8981\u6ce8\u610f\uff0c\u65e0\u61c8\u53ef\u51fb\u53ea\u4f1a\u514d\u9664\u5bf9\u4e00\u4e2a\u76ee\u6807\u7684\u9526\u56ca\u6548\u679c\uff0c\u5e76\u4e0d\u4f1a\u4f7f\u6574\u4e2a\u9526\u56ca\u5931\u6548\r\n  for(int j=1;j<=p[i].used_card;j++)\r\n   if(p[i].card[j]=='K'&&p[i].is_used[j]==false)\r\n   {\r\n    p[i].is_used[j]=true;\r\n    used_kill=true;\r\n    break;\r\n   }\r\n  if(!used_kill)\r\n  {\r\n   p[i].hp--;\r\n   if(p[i].hp<=0)die(i,cur);\r\n   if(i==1&&p[cur].global_id==0)p[cur].global_id=2;\r\n   //\u6ca1\u66b4\u9732\u8eab\u4efd\uff0c\u4e14\u5bf9\u4e3b\u732a\u9020\u6210\u4f24\u5bb3\u7684\u732a\u4f1a\u88ab\u5224\u65ad\u4e3a\u7c7b\u53cd\u732a\r\n   if(res!=-1)return true;//\u4e00\u65e6\u6e38\u620f\u7ed3\u675f\u6761\u4ef6\u8fbe\u6210\uff0c\u7acb\u523b\u7ec8\u6b62\u9526\u56ca\u7ed3\u7b97\u8fc7\u7a0b\r\n  }\r\n }\r\n return true;\r\n}\r\nbool use_wjqf(int cur)\r\n{\r\n for(int i=p[cur].next;i!=cur;i=p[i].next)\r\n {\r\n  bool used_kill=false;\r\n  if(p[i].global_id==1)\r\n   if(use_wxkj(cur,p[i].id==0?1:p[i].id))continue;\r\n  for(int j=1;j<=p[i].used_card;j++)\r\n   if(p[i].card[j]=='D'&&p[i].is_used[j]==false)\r\n   {\r\n    p[i].is_used[j]=true;\r\n    used_kill=true;\r\n    break;\r\n   }\r\n  if(!used_kill)\r\n  {\r\n   p[i].hp--;\r\n   if(p[i].hp<=0)die(i,cur);\r\n   if(i==1&&p[cur].global_id==0)p[cur].global_id=2;\r\n   if(res!=-1)return true;\r\n  }\r\n }\r\n return true;\r\n}\r\nvoid get_initial_info(int cur)//\u8bfb\u53d6\u6bcf\u53ea\u732a\u7684\u8eab\u4efd\uff0c\u521d\u59cb\u624b\u724c\uff0c\u5e76\u505a\u521d\u59cb\u5316\r\n{\r\n judge_identity(cur);\r\n get_initial_card(cur);\r\n if(cur==1)p[cur].front=n;\r\n else p[cur].front=cur-1;\r\n if(cur==n)p[cur].next=1;\r\n else p[cur].next=cur+1;\r\n p[cur].alive=true;\r\n p[cur].hp=4;\r\n}\r\nvoid get_card_queue()//\u8bfb\u5165\u724c\u5806\r\n{\r\n for(int i=1;i<=m;i++)\r\n {\r\n  char s[5];\r\n  scanf(\"%s\",s);\r\n  que[i]=s[0];\r\n }\r\n}\r\nint main()\r\n{\r\n //\u51c6\u5907\u9636\u6bb5\u5f00\u59cb\r\n scanf(\"%d%d\",&n,&m);\r\n for(int i=1;i<=n;i++)\r\n  get_initial_info(i);\r\n get_card_queue();\r\n //\u51c6\u5907\u9636\u6bb5\u7ed3\u675f\r\n //\u6e38\u620f\u9636\u6bb5\u5f00\u59cb\r\n while(res==-1)\r\n  for(int i=1;i<=n;i=p[i].next)\r\n  {\r\n   get_card(i),get_card(i);//\u6478\u724c\u9636\u6bb5\uff0c\u6478\u4e24\u5f20\u724c\r\n   int use_kill_num=0;\r\n   //\u6ca1\u6709\u88c5\u5907\u8bf8\u845b\u8fde\u5f29\u7684\u732a\u4e00\u56de\u5408\u53ea\u80fd\u4f7f\u7528\u4e00\u5f20\u6740\r\n   for(int j=1;j<=p[i].used_card;j++)\r\n    if(!p[i].is_used[j])//\u6ca1\u6709\u4f7f\u7528\u8be5\u624b\u724c\u5c31\u4f7f\u7528\u5b83\r\n    {\r\n     bool is_used=false;\r\n     if(p[i].card[j]=='P')is_used=use_peach(i);//\u5403\u6843\r\n     else if(p[i].card[j]=='K')//\u4f7f\u7528\u6740\r\n     {\r\n      if(use_kill_num==0||p[i].zb)is_used=use_kill(i);\r\n      if(is_used)use_kill_num++;\r\n     }\r\n     else if(p[i].card[j]=='F')is_used=use_fight(i);//\u6253\u51fa\u51b3\u6597\r\n     else if(p[i].card[j]=='Z')is_used=use_zgln(i);//\u88c5\u5907\u8bf8\u845b\u8fde\u5f29\r\n     else if(p[i].card[j]=='N')is_used=use_nzrq(i);//\u6253\u51fa\u5357\u86ee\u5165\u4fb5\r\n     else if(p[i].card[j]=='W')is_used=use_wjqf(i);//\u6253\u51fa\u4e07\u7bad\u9f50\u53d1\r\n     if(is_used)\r\n     {\r\n      if(i==1&&clear_mark)clear_mark=false;//\u8fd9\u53e5\u8bdd\u662f\u4e3a\u4e86\u907f\u514d\u4e00\u4e2a\u5c0fbug\r\n\t  else p[i].is_used[j]=true;\r\n      j=0;//\u4f7f\u7528\u4e00\u5f20\u624b\u724c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u524d\u9762\u7684\u624b\u724c\u53d8\u4e3a\u53ef\u7528\uff0c\u56e0\u6b64\u8981\u4ece\u5934\u5f00\u59cb\u5224\u65ad\u6bcf\u4e00\u5f20\u724c\r\n     }\r\n     if(!p[i].alive)break;//\u5982\u679c\u8be5\u732a\u5df2\u7ecf\u6b7b\u4ea1\uff0c\u5c31\u7ed3\u675f\u5b83\u7684\u9636\u6bb5\r\n     if(res!=-1)break;//\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f\u7acb\u523b\u7ec8\u6b62\r\n    }\r\n   if(res!=-1)break;//\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f\u7acb\u523b\u7ec8\u6b62\r\n  }\r\n //\u6e38\u620f\u9636\u6bb5\u7ed3\u675f\r\n //\u8f93\u51fa\u7ed3\u679c\u9636\u6bb5\u5f00\u59cb\r\n if(res==0)puts(\"MP\");\r\n else puts(\"FP\");\r\n for(int i=1;i<=n;i++)\r\n {\r\n  if(!p[i].alive)\r\n  {\r\n   puts(\"DEAD\");\r\n   continue;\r\n  }\r\n  for(int j=1;j<=p[i].used_card;j++)\r\n   if(!p[i].is_used[j])printf(\"%c \",p[i].card[j]);\r\n  puts(\"\");\r\n }\r\n //\u8f93\u51fa\u7ed3\u679c\u9636\u6bb5\u7ed3\u675f\r\n return 0;\r\n}\r\n```\r\n\r\n## \u540e\u8bb0\r\n\r\n\u4e3a\u4ec0\u4e48\u7a81\u7136\u8981\u60f3\u5230\u5237\u8fd9\u4e48\u5927\u4e00\u9053\u6a21\u62df\u9898\u5462\uff1f\u5176\u5b9e\u662f\u5728 NOIp2018 \u539f\u5730\u7206\u70b8\u4e4b\u540e\u7a81\u7136\u5174\u8d77\u7684\u4e00\u4e2a\u6bd2\u7624\u60f3\u6cd5\uff08\uff1f\uff09\u3002\r\n\r\n11 \u6708 13 \u53f7\u5c31\u5f00\u59cb\u6253\u8fd9\u9053\u9898\uff0c\u6253\u4e86\u4e00\u4e2a\u661f\u671f\uff0c\u7edd\u5927\u591a\u6570\u529f\u80fd\u90fd\u5b9e\u73b0\u7684\u5dee\u4e0d\u591a\u4e86\uff08\u7136\u800c\u8fd9\u90e8\u5206\u5185\u5bb9\u4e5f\u5c31\u662f 10pts \u7684\u90e8\u5206\u2026\uff09\uff0c\u7531\u4e8e\u65b0\u7684\u8bad\u7ec3\u8ba1\u5212\u7684\u5230\u6765\uff0cA \u6389\u8fd9\u9053\u6bd2\u7624\u9898\u7684\u8ba1\u5212\uff0c\u5c31\u6682\u65f6\u5495\u5495\u4e86\u3002\uff08\u7ed3\u679c\u5495\u4e86\u6574\u6574\u4e00\u4e2a\u6708\uff09\r\n\r\n\u524d\u51e0\u5929\u91cd\u65b0\u628a\u8fd9\u9898\u62fe\u8d77\u6765\uff0c\u628a\u5269\u4e0b\u7684\u90e8\u5206\u5b9e\u73b0\u4e4b\u540e\uff0c\u5c31\u662f\u6f2b\u957f\u7684\u8c03\u8bd5\u8fc7\u7a0b\u3002\r\n\r\n\u7b2c\u4e00\u6b21\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u8df3\u51fa\u6765\u4e00\u5806\u9519\u8bef\u4fe1\u606f\uff08\u91cd\u6784\u51fd\u6570\u7684\u65f6\u5019\u5fd8\u4e86\u6539\u8c03\u7528\uff09\u3002\u597d\u4e0d\u5bb9\u6613\u6392\u9664\u4e86\u7f16\u8bd1\u9519\u8bef\u4e4b\u540e\uff0c\u6837\u4f8b\uff08\u610f\u6599\u4e4b\u4e2d\uff09\u6302\u4e86\u3002\r\n\r\n\u4e8e\u662f\u5f00\u59cb\u5355\u6b65\u8ddf\u8e2a\u6bcf\u53ea\u732a\u7684\u72b6\u6001\uff0c\u8fd9\u4e2a\u65f6\u5019\u591a\u4e8f\u4e4b\u524d\u6709\u4eba\u7559\u4e0b\u7684 [\u6a21\u62df\u5668](https://www.luogu.org/discuss/show/81283)\uff0c\u8ba9\u8c03\u8bd5\u8fc7\u7a0b\u65b9\u4fbf\u4e86\u8bb8\u591a\u3002\r\n\r\n\u5c31\u8fd9\u6837\u628a\u4e00\u4e2a\u63a5\u4e00\u4e2a\u7684 bug \u7ffb\u51fa\u6765\uff0c\u63d0\u4ea4\u7684\u5206\u6570\u4ece\u521a\u5f00\u59cb\u7684 5 \u5206\uff0c\u5230\u6700\u540e\u7684 100 \u5206\uff08\u4e2d\u95f4\u8fd8\u6709\u4e24\u6b21\u63d0\u4ea4\u5fd8\u4e86\u5220\u6587\u4ef6 IO\uff09\uff0c\u771f\u662f\u8270\u96be\u7684\u5386\u7a0b\u3002\uff08[\u63d0\u4ea4\u8bb0\u5f55\u6233\u8fd9\u91cc](https://www.luogu.org/recordnew/lists?uid=22030&pid=P2482)\uff09\r\n\r\n\u8fd9\u9898\u867d\u7136\u6781\u5176\u6bd2\u7624\uff0c\u4f46\u5bf9\u4e8e\u4ee3\u7801\u80fd\u529b\u63d0\u5347\u7684\u5e2e\u52a9\uff0c\u4e5f\u662f\u5f88\u5927\u7684\u3002",
        "postTime": 1545920768,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "# \u6982\u8ff0\n\u8fd9\u4e2a\u663e\u7136\u662f\u4e00\u9053\u5927\u6a21\u62df\n\u6bd4\u8f83\u5751\u7684\u5730\u65b9\u662f\u5982\u679c\u5927\u724c\u5806\u6ca1\u6709\u4e86\uff0c\u5c31\u8981~~\u4eba\u5de5\u5236\u9020~~\u4e0d\u65ad\u8fd4\u56de\u6700\u540e\u4e00\u5f20\u724c\n\n\u53ef\u80fd\u662f\u6211\u6bd4\u8f83\u5f31\u5427\uff0c\u6211\u5199\u4e864\u5929812\u884c\uff0c\u5728\u5199\u5230600\u591a\u884c\u7684\u65f6\u5019\u53d1\u73b0\u65e0\u6cd5\u5904\u7406\"\u65e0\u61c8\u53ef\u51fb\u64cd\u4f5c\"\u8fd8\u5220\u6389\u4e86400\u591a\u884c~~2333~~\n\n\u6211\u7684\u4ee3\u7801\u6709\u5f88\u591acerr\u548cstderr\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u8fd9\u4e9b~~\u6c99\u96d5~~\u732a\u662f\u5982\u4f55\u73a9\u7684\uff0c\u5c31\u628a\u6ce8\u91ca\u90fd\u6253\u5f00\u5c31\u53ef\u4ee5\u4e86,\u53ef\u4ee5~~\u51b7\u9759~~\u80e1\u4e71\u5206\u6790\n\n\u8fd9\u53ef\u80fd\u9898\u89e3\u4eec\u4e2d\u4e0d\u591a\u7684\u51e0\u7bc7\u4f7f\u7528\u771f\u00b7\u6307\u9488\u7684\u4ee3\u7801\uff0c\u786e\u5b9e\u8003\u9a8c\u4eba\uff0c\u6211\u5c31\u56e0\u4e3a\u641e\u4e86\u4e2a\u91ce\u6307\u9488\uff0cdebug\u4e86\u534a\u5929~~233333~~\n\n\u6700\u540eNOIP2018rp++\n\n812\u884c\u4ee3\u7801\u9884\u8b66\n# \u4ee3\u7801\n\n\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u6c99\u96d5\u7684\u5199\u4e86\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u5904\u7406\u724c\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include<cstring>\n#include<string>\n#include<cctype>\n#include<cstdlib>\n#include<map>\n#include<ctime>\n#define debuglog(x) cerr<<\"\\tdebug:\"<<#x<<endl\n#define debug(x) cerr<<\"\\tdebug:\"<<#x<<\"=\"<<(x)<<endl\n#define debugg(x,y) cerr<<\"\\tdebug;\"<<(x)<<\":\"<<#y<<\"=\"<<(y)<<endl\n#define debugzu(x,a,b) \tcerr<<\"\\tdebug:\"<<#x<<\"=\\n\\t\";for(int i=a;i<b;i++)cerr<<x[i]<<\" \";fprintf(stderr,\"\\n\");\n#define debugerzu(x,a,b,c,d) \tcerr<<\"\\tdebug:\"<<#x<<\"=\\n\\t\";for(int i=a;i<b;i++,fprintf(stderr,\"\\n\\t\"))for(int j=c;j<d;j++)cerr<<x[i][j]<<\" \";fprintf(stderr,\"\\n\");\n#define START clock_t __start=clock();\n#define STOP fprintf(stderr,\"\\n\\nUse Time:%fs\\n\",((double)(clock()-__start)/CLOCKS_PER_SEC));\nusing namespace std;\n#define MAXN 11\n#define MAXM 2011\n#define PAI_USED 0 //\u7528\u8fc7\u4e86\n#define P 1 //\u6843\n#define K 2 //\u6740\n#define D 3 //\u95ea\n#define F 4 //\u51b3\u6597\n#define N 5 //\u5357\u732a\u5165\u4fb5\n#define W 6 //\u4e07\u7bad\u9f50\u53d1\n#define J 7 //\u65e0\u61c8\u53ef\u51fb\n#define Z 8 //\u732a\u54e5\u8fde\u5f29\n#define TYPE_UNKNOW 0//\u7c7b\u578b\u672a\u77e5\n#define\tMP\t1\t//\u4e3b\u732a \n#define\tZP\t2\t//\u5fe0\u732a\n#define\tFP\t3\t//\u53cd\u732a\n#define\tLZP\t4\t//\u7c7b\u5fe0\u732a\n#define\tLFP\t5\t//\u7c7b\u53cd\u732a\ninline long long read()\n{\n\tregister long long x;register bool f;register char c;\n\tfor (f=0; (c=getchar())<'0'||c>'9'; f=c=='-');\n\tfor (x=c-'0'; (c=getchar())>='0'&&c<='9'; x=(x<<3)+(x<<1)+c-'0');\n\treturn f?-x:x;\n}\ninline char readc()\n{\n\tregister char c;\n\tfor (;((c=getchar())<'A'||c>'Z')&&(c<'a'||c>'z'););\n\treturn c;\n}\ninline int readpai()\n{\n\tswitch(readc())\n\t{\n\t\tcase 'P':\n\t\t\treturn P;\n\t\tcase 'K' :\n\t\t\treturn K;\n\t\tcase 'D':\n\t\t\treturn D;\n\t\tcase 'F' :\n\t\t\treturn F;\n\t\tcase 'N':\n\t\t\treturn N;\n\t\tcase 'W' :\n\t\t\treturn W;\n\t\tcase 'J' :\n\t\t\treturn J;\n\t\tcase 'Z' :\n\t\t\treturn Z;\t\t\t\t\n\t}\n}\ninline char getpai(int pai)\n{\n\tswitch(pai)\n\t{\n\t\tcase P:\n\t\t\treturn 'P';\n\t\tcase K :\n\t\t\treturn 'K';\n\t\tcase D:\n\t\t\treturn 'D';\n\t\tcase F :\n\t\t\treturn 'F';\n\t\tcase N:\n\t\t\treturn 'N';\n\t\tcase W :\n\t\t\treturn 'W';\n\t\tcase J :\n\t\t\treturn 'J';\n\t\tcase Z :\n\t\t\treturn 'Z';\n\t\tcase PAI_USED :\n\t\t\treturn 'U';\n\t\tdefault :\n\t\t\treturn '!';\n\t}\t\n}\ninline int readtype()\n{\n\tstring s;\n\tcin>>s;\n\tif(s==\"MP\")\n\t\treturn MP;\n\telse if(s==\"ZP\")\n\t\treturn ZP;\n\telse if(s==\"FP\")\n\t\treturn FP;\n}\ninline string gettype(int x)\n{\n\tif(x==MP)\n\t\treturn \"MP\";\n\telse if(x==ZP)\n\t\treturn \"ZP\";\n\telse if(x==FP)\n\t\treturn \"FP\";\n}\nclass pai_class\n{\n\tprivate:\n\t\tint pai[MAXM];\n\t\tint head;\n\t\tint tail;\n\tpublic:\n\t\tinline int add\t\t(int type)\t\t\t{pai[tail++]=type;return tail-1;}\n\t\tinline int get\t\t()\t\t\t\t\t{return pai[head];}\n\t\tinline int count\t()\t\t\t\t\t{return tail-head;}\n\t\tinline int del\t\t()\t\t\t\t\t{int tmp=pai[head];if(count()>1){head++;}return tmp;}\n};\npai_class all_pai;\nclass link_list\n{\n\tprivate:\n\t\tint val;\n\t\tlink_list *pro;\n\t\tlink_list *nxt;\n\tpublic :\n\t\tinline\tint\t\t\tget\t\t\t()\t\t\t\t{return val;}\n\t\tinline\tint\t\t\tset\t\t\t(int v)\t\t\t{return val=v;}\n\t\tinline\tlink_list*\tget_nxt\t\t()\t\t\t\t{return nxt;}\n\t\tinline\tlink_list*\tget_pro\t\t()\t\t\t\t{return pro;}\n\t\tinline\tlink_list*\tset_nxt\t\t(link_list* p)\t{return nxt=p;}\n\t\tinline\tlink_list*\tset_pro\t\t(link_list* p)\t{return pro=p;}\n\t\tinline\tvoid\t\tdel\t\t\t()\t\t\t\t{val=0;if(pro!=NULL)pro->nxt=nxt;if(nxt!=NULL)nxt->pro=pro;nxt=NULL;pro=NULL;}\n};\nclass zhu_pai_class\n{\n\tprivate:\n\t\tlink_list pai[MAXM];\n\t\tint p_count,d_count,j_count;\n\t\tbool z_flag;\n\t\tlink_list *now,*head,*tail;\n\tpublic :\n\t\tinline void reset_now()\n\t\t{\n\t\t\tnow=head;\n\t\t}\n\t\tinline void reset_now_to_tail()\n\t\t{\n\t\t\tnow=tail;\n\t\t}\t\t\n\t\tinline void reset_tail()\n\t\t{\n\t\t\ttail=head;\n\t\t}\n\t\tzhu_pai_class()\n\t\t{\n\t\t\tp_count=d_count=j_count=0;\n\t\t\tz_flag=false;\n\t\t\thead=pai;\n\t\t\treset_now();\n\t\t\treset_tail();\n\t\t\tnow->set_nxt(NULL);\n\t\t\tnow->set_pro(NULL);\n\t\t}\n\t\tinline void add(int type)\n\t\t{\n\t\t\tif(type==P)\t\t\t\t\t//\u6843\u5b50\n\t\t\t\tp_count++;\n\t\t\tif(type==J)\t\t\t\t\t//\u65e0\u61c8\u53ef\u51fb\n\t\t\t\tj_count++;\n\t\t\tif(type==D)\t\t\t\t\t//\u95ea\n\t\t\t\td_count++;\n\t\t\tif(now==NULL)\n\t\t\t\tnow=tail;\n\t\t\tnow->set(type);\n\t\t\tnow->set_nxt(now+1);\n\t\t\tnow->get_nxt()->set_pro(now);\n\t\t\tnow->get_nxt()->set_nxt(NULL);\n\t\t\ttail=now=now->get_nxt();\n\t\t}\n\t\tinline bool del(link_list * v)\n\t\t{\n\t\t\tif(v==NULL)\n\t\t\t\treturn false;\n\t\t\tif(v->get()==P)\n\t\t\t\tp_count--;\n\t\t\tif(v->get()==J)\n\t\t\t\tj_count--;\n\t\t\tif(v->get()==D)\n\t\t\t\td_count--;\n\t\t\tif(head==v)\n\t\t\t{\n\t\t\t\thead=v->get_nxt();\n//\t\t\t\tcerr<<\"\\treset head\"<<endl;\n\t\t\t}\n\t\t\tif(now==v)\n\t\t\t{\n\t\t\t\tnow=v->get_nxt();\n//\t\t\t\tcerr<<\"\\treset now\"<<endl;\t\t\t\t\n\t\t\t}\n//\t\t\tcerr<<\"\\t\\t lose \"<<getpai(v->get())<<endl;\n\t\t\tv->del();\n\t\t\treturn true;\n\t\t}\n\t\tinline link_list *get_now()\n\t\t{\n\t\t\treturn now;\n\t\t}\n\t\tinline link_list *get_nxt()\n\t\t{\n\t\t\tif(tail==head)\n\t\t\t\treturn NULL;\n\t\t\treturn now=now->get_nxt();\n\t\t}\n\t\tinline link_list * find_d()\t\t//\u8fd4\u56de\u7b2c\u4e00\u5f20\u95ea\n\t\t{\n\t\t\treset_now();\n\t\t\tlink_list *tmp=get_now();\n\t\t\tif(tmp==NULL)\n\t\t\t\treturn NULL;\n\t\t\tdo\n\t\t\t\tif(tmp->get()==D)\n\t\t\t\t\tbreak;\n\t\t\twhile((tmp=get_nxt())!=NULL);\n\t\t\treturn tmp;\n\t\t}\n\t\tinline link_list * find_p()\t\t//\u8fd4\u56de\u7b2c\u4e00\u5f20\u6843\n\t\t{\n\t\t\treset_now();\n\t\t\tlink_list *tmp=get_now();\n\t\t\tif(tmp==NULL)\n\t\t\t\treturn NULL;\n\t\t\tdo\n\t\t\t\tif(tmp->get()==P)\n\t\t\t\t\tbreak;\n\t\t\twhile((tmp=get_nxt())!=NULL);\n\t\t\treturn tmp;\n\t\t}\n\t\tinline link_list * find_j()\t\t//\u8fd4\u56de\u7b2c\u4e00\u5f20\u65e0\u61c8\u53ef\u51fb\n\t\t{\n\t\t\treset_now();\n\t\t\tlink_list *tmp=get_now();\n\t\t\tif(tmp==NULL)\n\t\t\t\treturn NULL;\n\t\t\tdo\n\t\t\t\tif(tmp->get()==J)\n\t\t\t\t\tbreak;\n\t\t\twhile((tmp=get_nxt())!=NULL);\n\t\t\treturn tmp;\n\t\t}\n\t\tinline bool try_use_k()\t\t\t//\u5c1d\u8bd5\u6253\u51fa\u4e00\u5f20\u6740\n\t\t{\n\t\t\treset_now();\n\t\t\tlink_list *tmp=get_now();\n\t\t\tif(tmp==NULL)\n\t\t\t\treturn false;\t\t\t\n\t\t\tdo\n\t\t\t\tif(tmp->get()==K)\n\t\t\t\t{\n\t\t\t\t\tdel(tmp);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\twhile((tmp=get_nxt())!=NULL);\n\t\t\treturn false;\n\t\t}\n\t\tinline bool try_use_d()\t\t\t//\u5c1d\u8bd5\u6253\u51fa\u4e00\u5f20\u95ea\n\t\t{\n\t\t\tif(d_count)\n\t\t\t\treturn del(find_d());\n\t\t\treturn false;\n\t\t}\n\t\tinline bool try_use_p()\t\t\t//\u5c1d\u8bd5\u6253\u51fa\u4e00\u5f20\u6843\n\t\t{\n\t\t\tif(p_count)\n\t\t\t{\n//\t\t\t\tcerr<<\"eat tao\"<<endl;\n\t\t\t\treturn del(find_p());\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tinline bool try_use_j()\t\t\t//\u5c1d\u8bd5\u6253\u51fa\u4e00\u5f20\u65e0\u61c8\u53ef\u51fb\n\t\t{\n\t\t\tif(j_count)\n\t\t\t\treturn del(find_j());\n\t\t\treturn false;\n\t\t}\n\t\tinline void print_all(FILE *f)\n\t\t{\n\t\t\tlink_list *buf=now,*tmp;\n\t\t\treset_now();\n\t\t\ttmp=now;\n\t\t\tif(tmp==NULL)\n\t\t\t\treturn ;\n\t\t\tbool flag=false;\n\t\t\tdo\n\t\t\t{\n\t\t\t\tif(tmp->get())\n\t\t\t\t{\n\t\t\t\t\tif(flag)\n\t\t\t\t\t\tfprintf(f,\" \");\n\t\t\t\t\tflag=true;\n\t\t\t\t\tfprintf(f,\"%c\",getpai(tmp->get()));\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile((tmp=get_nxt())!=NULL);\n\t\t\tfprintf(f,\"\\n\");\n\t\t\tnow=buf;\n\t\t}\n\t\tinline bool have_z()\n\t\t{\n\t\t\treturn z_flag;\n\t\t}\n\t\tinline void add_z()\n\t\t{\n\t\t\tz_flag=true;\n\t\t}\n\t\tinline void del_all()\n\t\t{\n\t\t\tp_count=d_count=j_count=0;\n\t\t\tz_flag=false;\n\t\t\treset_now();\n\t\t\tfor(link_list *tmp=get_now(),*tmp2=tmp;tmp2;tmp2=tmp->get_nxt(),tmp->del(),tmp=tmp2);\n\t\t\thead=pai;\n\t\t\treset_now();\n\t\t\treset_tail();\n\t\t\tnow->set(0);\n\t\t\tnow->set_nxt(NULL);\n\t\t\tnow->set_pro(NULL);\t\t\n\t\t}\n};\nint alive_fanzei_count=0;\nint alive_zhongzhu_count=0;\nint n,m;\nint ans;\n#define UNKNOW 0\n#define MPWIN 1\n#define FPWIN 2\nbool check_MP_alive();\nvoid recal_all();\nint in_zhuzu[MAXN];//\u5728\u4e3b\u732a\u5fc3\u4e2d\u7c7b\u578b\nclass pig_class;\npig_class* get_mp();\nbool start_wx_circle(pig_class * start,bool y_is_fan);\nclass pig_class\n{\n\tprivate :\n\t\tint type;//\u732a\u7684\u7c7b\u578b\n\t\tint csf;//\u5f53\u524d\u7c7b\u578b0\u6ca1\u8df3 1\u7c7b\u53cd 2\u8df3\u5fe0 3\u8df3\u53cd\n\t\tbool alive;//\u6d3b\u7740\u6ca1\n\t\tpig_class *next;\n\t\tpig_class *pro;\n\t\tpig_class *shouyao;//\u9996\u8981\u653b\u51fb\u76ee\u6807\n\t\tpig_class *last;//\u6700\u540e\u4e00\u4e2a\u4f24\u5bb3\u6765\u6e90\n\t\tint id;\n\t\tint tili;\n\tpublic :\n\t\tzhu_pai_class pai;//\u724c\n\t\t\t\t\t\t\tpig_class\t()\t\t\t\t{tili=4;alive=true;type=TYPE_UNKNOW;shouyao=NULL;}\n\t\tinline\tpig_class*\tset_next\t(pig_class *n)\t{return next=n;}\n\t\tinline\tpig_class*\tset_pro\t\t(pig_class *p)\t{return pro=p;}\n\t\tinline\tpig_class*\tget_next\t()\t\t\t\t{return next;}\n\t\tinline\tpig_class*\tget_pro\t\t()\t\t\t\t{return pro;}\n\t\tinline\tint\t\t\tadd_tili\t()\t\t\t\t{return ++tili;}\n\t\tinline\tint\t\t\tdel_tili\t()\t\t\t\t{return --tili;}\n\t\tinline\tint\t\t\tget_tili\t()\t\t\t\t{return tili;}\t\t\n\t\tinline\tint\t\t\tset_id\t\t(int i)\t\t\t{return id=i;}\n\t\tinline\tint\t\t\tget_id\t\t()\t\t\t\t{return id;}\n\t\tinline\tint\t\t\tset_type\t(int i)\t\t\t{if(i==FP)alive_fanzei_count++;else alive_zhongzhu_count++;return type=i;}\n\t\tinline\tint\t\t\tget_type\t()\t\t\t\t{return type;}\n\t\tinline\tint\t\t\tset_csf\t\t(int i)\t\t\t{return csf=i;}\n\t\tinline\tint\t\t\tget_csf\t\t()\t\t\t\t{return csf;}\n\t\tinline\tbool\t\tifalive\t\t()\t\t\t\t{return alive;}\n\t\tvoid die(pig_class *from)\t\t\t\t\t\t\t//\u6599\u7406\u8fd9\u53ea\u732a\u7684\u540e\u4e8b\n\t\t{\n//\t\t\tcerr<<\"\\t\"<<get_id()<<\" die by \"<<from->get_id()<<endl;\n\t\t\tif(type==FP)\n\t\t\t\talive_fanzei_count--;\n\t\t\telse\n\t\t\t\talive_zhongzhu_count--;\n\t\t\tget_pro()->set_next(get_next());\n\t\t\tget_next()->set_pro(get_pro());\n\t\t\talive=false;\n\t\t\tif(get_type()!=MP)\n\t\t\t\tif(get_type()==ZP&&from->get_type()==MP)\n\t\t\t\t{\n//\t\t\t\t\tcerr<<\"\\tMP lose all pai\"<<endl;\n\t\t\t\t\tfrom->pai.del_all();\n\t\t\t\t}\n\t\t\tif(alive_fanzei_count<=0)\n\t\t\t{\n\t\t\t\tans=MPWIN;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if(alive_zhongzhu_count<=0)\n\t\t\t{\n\t\t\t\tans=FPWIN;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if(!check_MP_alive())//\u4e3b\u732a\u6b7b\u4e86\n\t\t\t{\n\t\t\t\tans=FPWIN;\n\t\t\t\treturn;\n\t\t\t}\t\t\t\n\t\t\tif(get_type()==FP&&(!ans))\n\t\t\t{\n//\t\t\t\tlast->pai.print_all(stderr);\n\t\t\t\tlast->pai.reset_now_to_tail();\n\t\t\t\tlast->pai.add(all_pai.del());\n\t\t\t\tlast->pai.add(all_pai.del());\n\t\t\t\tlast->pai.add(all_pai.del());\n//\t\t\t\tcerr<<\"\\t\"<<last->get_id()<<\" get 3 pai have\";last->pai.print_all(stderr);\n\t\t\t}\n\t\t\trecal_all();\n\t\t}\n\t\tvoid hurt(pig_class *from)\t\t\t//\u6765\u81eafrom\u7684\u732a\u4f7f\u8fd9\u53ea\u732a-1s\n\t\t{\n\t\t\tlast=from;\n\t\t\tif(del_tili()==0)\t\t\t\t//\u5feb\u6b7b\u4e86\n\t\t\t\tif(pai.try_use_p())\t\t\t//\u5c1d\u8bd5+1s\n\t\t\t\t\tadd_tili();\t\t\t\t//+1s\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdie(from);\t\t\t\t//\u62dc\u62dc\u751c\u751c\u5708\n\t\t\t\t\treturn ;\n\t\t\t\t}\n//\t\t\tcerr<<\"\\t\"<<from->get_id()<<\" hurt \"<<get_id()<<\" tili:\"<<get_tili()<<endl;\n\t\t}\n\t\tvoid recal()\t\t\t\t\t\t//\u4f9d\u636e\u8fd9\u53ea\u732a\u7684\u4fe1\u606f\u66f4\u65b0\u5176\u4ed6\u732a\n\t\t{\n\t\t\tpig_class* y=get_next();\n\t\t\tif(get_type()==MP)\n\t\t\t{\n\t\t\t\twhile(y!=this)\n\t\t\t\t{\n\t\t\t\t\tif(y->get_csf()==1||y->get_csf()==3)\n\t\t\t\t\t{\n\t\t\t\t\t\tshouyao=y;\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\n\t\t\t\t\ty=y->get_next();\n\t\t\t\t}\n\t\t\t\tshouyao=NULL;\n\t\t\t}\n\t\t\telse if(get_type()==ZP)\n\t\t\t{\n\t\t\t\twhile(y!=this)\n\t\t\t\t{\n\t\t\t\t\tif(y->get_csf()==3)\n\t\t\t\t\t{\n\t\t\t\t\t\tshouyao=y;\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\n\t\t\t\t\ty=y->get_next();\n\t\t\t\t}\n\t\t\t\tshouyao=NULL;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile(y!=this)\n\t\t\t\t{\n\t\t\t\t\tif(y->get_csf()==2||y->get_type()==1)\n\t\t\t\t\t{\n\t\t\t\t\t\tshouyao=y;\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\n\t\t\t\t\ty=y->get_next();\n\t\t\t\t}\n\t\t\t\tshouyao=NULL;\n\t\t\t}\n\t\t}\n\t\tvoid round()\n\t\t{\n\t\t\tpai.reset_now_to_tail();\n\t\t\tpai.add(all_pai.del());\n\t\t\tpai.add(all_pai.del());\t\t\n\t\t\tpai.reset_now();bool flag=false;\n\t\t\tbool usedsha=false;\n\t\t\tlink_list *tmp=pai.get_now();\n//\t\t\tcerr<<\"\"<<get_id()<<\" have \";pai.print_all(stderr);\n\t\t\twhile((!ans)&&(tmp=(flag?(pai.get_nxt()):(pai.get_now()))))\n\t\t\t{\n\t\t\t\tif(tmp==NULL)\n\t\t\t\t\treturn;\n\t\t\t\tif(!tmp->get())\n\t\t\t\t\treturn;\n//\t\t\t\tpai.print_all(stderr);\n\t\t\t\tflag=true;\n//\t\t\t\tcerr<<\"\\t\"<<get_id()<<\"use \"<<getpai(tmp->get())<<endl;\n\t\t\t\tif(tmp->get()==D||tmp->get()==J)\n\t\t\t\t\tcontinue;\n\t\t\t\tif(get_tili()!=4&&tmp->get()==P)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5403\u6843\u5b50\n\t\t\t\t{\n\t\t\t\t\tpai.del(tmp);\n\t\t\t\t\tpai.reset_now();flag=false;\n\t\t\t\t\tadd_tili();\n//\t\t\t\t\tcerr<<\"\\t\"<<get_id()<<\"have \"<<get_tili()<<\" tili\"<<endl;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(tmp->get()==K)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u6740\n\t\t\t\t{\n\t\t\t\t\tif(shouyao==get_next()&&shouyao->ifalive())\n\t\t\t\t\t{\n\t\t\t\t\t\tif(!usedsha||pai.have_z())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpai.del(tmp);\n\t\t\t\t\t\t\tusedsha=true;\n\t\t\t\t\t\t\tif(get_type()!=MP&&get_csf()<2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(shouyao->get_type()==FP)\n\t\t\t\t\t\t\t\t\tset_csf(2);\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tset_csf(3);\n\t\t\t\t\t\t\t\trecal_all();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!shouyao->pai.try_use_d())\n\t\t\t\t\t\t\t\tshouyao->hurt(this);\n//\t\t\t\t\t\t\telse\n//\t\t\t\t\t\t\t\tcerr<<\"\\t\"<<shouyao->get_id()<<\" lose D now have \";shouyao->pai.print_all(stderr);\n\t\t\t\t\t\t\tpai.reset_now();flag=false;\n\t\t\t\t\t\t\tif(ans||(!ifalive()))\n\t\t\t\t\t\t\t\treturn ;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(tmp->get()==Z)\n\t\t\t\t{\n\t\t\t\t\tpai.del(tmp);\n\t\t\t\t\tpai.add_z();\n\t\t\t\t\tpai.reset_now();flag=false;\n\t\t\t\t}\n\t\t\t\tif(tmp->get()==F)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u51b3\u6597\n\t\t\t\t{\n\t\t\t\t\tif(shouyao==NULL)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u6ca1\u6709\u653b\u51fb\u76ee\u6807\n\t\t\t\t\t\tcontinue;\n//\t\t\t\t\tcerr<<\"shouyao=\"<<shouyao->get_id()<<endl;\n\t\t\t\t\tif(!shouyao->ifalive())\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tpai.del(tmp);\n\t\t\t\t\tpig_class* tmp=shouyao;\t\t\t\t\t\n\t\t\t\t\tif(get_type()==FP)\n\t\t\t\t\t\ttmp=get_mp();\n\t\t\t\t\tpig_class* buf=tmp;\n\t\t\t\t\tif(get_type()!=MP&&get_csf()<2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(buf->get_type()==3)\n\t\t\t\t\t\t\tset_csf(2);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tset_csf(3);\n\t\t\t\t\t\trecal_all();\n\t\t\t\t\t}\n\t\t\t\t\tif(buf->get_type()==1||buf->get_csf()>=2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(buf->get_type()==1||buf->get_csf()==2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(start_wx_circle(this,0))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpai.reset_now();flag=false;\n\t\t\t\t\t\t\t\tif(ans||(!ifalive()))\n\t\t\t\t\t\t\t\t\treturn ;\n\t\t\t\t\t\t\t\tcontinue ;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(start_wx_circle(this,1))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpai.reset_now();flag=false;\n\t\t\t\t\t\t\t\tif(ans||(!ifalive()))\n\t\t\t\t\t\t\t\t\treturn ;\n\t\t\t\t\t\t\t\tcontinue ;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(get_type()==MP&&tmp->get_type()==ZP)\n\t\t\t\t\t\ttmp->hurt(this);\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twhile(1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(!tmp->pai.try_use_k())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttmp->hurt(this);\n\t\t\t\t\t\t\t\tbreak ;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!pai.try_use_k())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thurt(tmp);\n\t\t\t\t\t\t\t\tbreak ;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpai.reset_now();flag=false;\n\t\t\t\t\tif(ans||(!ifalive()))\n\t\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tif(tmp->get()==N)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u5357\u732a\u5165\u4fb5\n\t\t\t\t{\n\t\t\t\t\tpai.del(tmp);\n\t\t\t\t\tpig_class* buf=get_next();//\u4ece\u4e0b\u4e00\u53ea\u732a\u5f00\u59cb\n\t\t\t\t\twhile(buf!=this)//\u4e0d\u662f\u8fd9\u4e2a\u732a\n\t\t\t\t\t{\n//\t\t\t\t\t\tcerr<<\"\\t\"<<buf->get_id()<<\" csf=\"<<buf->get_csf()<<endl;\n\t\t\t\t\t\tif(buf->get_type()==MP||buf->get_csf()>=2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(buf->get_type()==MP||buf->get_csf()==2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(start_wx_circle(this,0))\n\t\t\t\t\t\t\t\t{\n//\t\t\t\t\t\t\t\t\tcerr<<\"\\t\"<<buf->get_id()<<\" lose J now have \";buf->pai.print_all(stderr);\n\t\t\t\t\t\t\t\t\tbuf=buf->get_next();\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(start_wx_circle(this,1))\n\t\t\t\t\t\t\t\t{\n//\t\t\t\t\t\t\t\t\tcerr<<\"\\t\"<<buf->get_id()<<\" lose J now have \";buf->pai.print_all(stderr);\n\t\t\t\t\t\t\t\t\tbuf=buf->get_next();\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!buf->pai.try_use_k())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbuf->hurt(this);\n\t\t\t\t\t\t\tif(ans)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tif(buf==get_mp()&&get_csf()==0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tset_csf(1);\n\t\t\t\t\t\t\t\trecal_all();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n//\t\t\t\t\t\t\tcerr<<\"\\t\"<<buf->get_id()<<\" lose K now have \";buf->pai.print_all(stderr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuf=buf->get_next();\n\t\t\t\t\t}\n\t\t\t\t\tpai.reset_now();flag=false;\n\t\t\t\t\tif(ans)\n\t\t\t\t\t\treturn ;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(tmp->get()==W)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u4e07\u7bad\u9f50\u53d1\n\t\t\t\t{\n\t\t\t\t\tpai.del(tmp);\n\t\t\t\t\tpig_class* buf=get_next();//\u4ece\u4e0b\u4e00\u53ea\u732a\u5f00\u59cb\t\t\t\t\t\n\t\t\t\t\twhile(buf!=this)//\u4e0d\u662f\u8fd9\u4e2a\u732a\n\t\t\t\t\t{\n//\t\t\t\t\t\tcerr<<\"\\t\"<<buf->get_id()<<\" csf=\"<<buf->get_csf()<<\" type=\"<<buf->get_type()<<endl;\n\t\t\t\t\t\tif(buf->get_type()==MP||buf->get_csf()>=2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(buf->get_type()==MP||buf->get_csf()==2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(start_wx_circle(this,0))\n\t\t\t\t\t\t\t\t{\n//\t\t\t\t\t\t\t\t\tcerr<<\"\\t\"<<buf->get_id()<<\" lose J now have \";buf->pai.print_all(stderr);\n\t\t\t\t\t\t\t\t\tbuf=buf->get_next();\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(start_wx_circle(this,1))\n\t\t\t\t\t\t\t\t{\n//\t\t\t\t\t\t\t\t\tcerr<<\"\\t\"<<buf->get_id()<<\" lose J now have \";buf->pai.print_all(stderr);\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tbuf=buf->get_next();\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!buf->pai.try_use_d())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbuf->hurt(this);\n\t\t\t\t\t\t\tif(ans)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tif(buf==get_mp()&&get_csf()==0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tset_csf(1);\n\t\t\t\t\t\t\t\trecal_all();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n//\t\t\t\t\t\t\tcerr<<\"\\t\"<<buf->get_id()<<\" lose D now have \";buf->pai.print_all(stderr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbuf=buf->get_next();\n\t\t\t\t\t}\n\t\t\t\t\tpai.reset_now();flag=false;\n\t\t\t\t\tif(ans)\n\t\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\npig_class pig[MAXN];\nvoid recal_all()\n{\n\tpig_class* x=&pig[1];\n\tdo\n\t{\n\t\tx->recal();\n\t\tx=x->get_next();\n\t}\t\n\twhile(x!=&pig[1]);\n}\npig_class* get_mp()\n{\n\treturn &pig[1];\n}\nbool check_MP_alive()\n{\n\treturn pig[1].ifalive();\n}\nbool start_wx_circle(pig_class * start,bool y_is_fan)\n{\n\tbool st=y_is_fan;\n\tpig_class *lastdachu=start,*x=start;\n\tif(y_is_fan==(x->get_type()==FP))\n\t{\n\t\tif(x->pai.try_use_j())\n\t\t{\n\t\t\tlastdachu=x;\n\t\t\ty_is_fan^=1;\n\t\t\tif(x->get_csf()<=2)\n\t\t\t{\n//\t\t\t\tcerr<<\"\\tset \"<<x->get_id()<<\" csf to \"<<3-y_is_fan<<endl;\n\t\t\t\tx->set_csf(3-y_is_fan);\n\t\t\t\trecal_all();\n\t\t\t}\n\t\t}\n\t}\n\tx=x->get_next();\n\twhile(x!=lastdachu)\n\t{\n\t\tif(y_is_fan==(x->get_type()==3))\n\t\t{\n\t\t\tif(x->pai.try_use_j())\n\t\t\t{\n\t\t\t\tlastdachu=x;\n\t\t\t\ty_is_fan^=1;\n\t\t\t\tif(x->get_csf()<=2)\n\t\t\t\t{\n//\t\t\t\t\tcerr<<\"\\tset \"<<x->get_id()<<\" csf to \"<<3-y_is_fan<<endl;\n\t\t\t\t\tx->set_csf(3-y_is_fan);\n\t\t\t\t\trecal_all();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tx=x->get_next();\n\t}\n\treturn (st!=y_is_fan);\n}\nint main()\n{\n \tfreopen(\"2482.in\",\"r\",stdin);\n// \tfreopen(\"2482.out\",\"w\",stdout);\n// \tfreopen(\"2482.err\",\"w\",stderr);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tpig[i].set_id(i);\n\t\tpig[i].set_pro(&pig[i-1]);\n\t\tpig[i].set_next(&pig[i+1]);\n\t\tpig[i].set_type(readtype());\n\t\tpig[i].pai.add(readpai());\n\t\tpig[i].pai.add(readpai());\n\t\tpig[i].pai.add(readpai());\n\t\tpig[i].pai.add(readpai());\n//\t\tpig[i].pai.print_all(stderr);\n\t}\n\tpig[1].set_pro(&pig[n]);\n\tpig[n].set_next(&pig[1]);\n\trecal_all();\n\tfor(int i=0;i<m;i++)\n\t\tall_pai.add(readpai());\n\tpig_class *pig_now=&pig[1];\n\twhile(!ans)\n\t{\n\t\tpig_now->round();\n\t\tpig_now->pai.reset_now();\n\t\tpig_now=pig_now->get_next();\n\t}\n\tif(ans==MPWIN)\n\t\tputs(\"MP\");\n\telse\n\t\tputs(\"FP\");\n\tfor(int i=1;i<=n;i++)\n\t\tif(!pig[i].ifalive())\n\t\t\tputs(\"DEAD\");\n\t\telse\n\t\t{\n//\t\t\tputs(\"ALIVE\");\n\t\t\tpig[i].pai.print_all(stdout);\n\t\t}\n\tfclose(stdin);\n\tfclose(stdout);\n \treturn 0;\n}\n\n```\n# \u63d0\u793a\u4e0e\u8e29\u8fc7\u7684\u5751\n\u51e0\u4e2a\u8981\u70b9\u63d0\u793a\u5427\n\n1. \u5148\u770b\u9898\uff0c\u6700\u597d\u628a\u9898\u80cc\u8fc7\u518d\u5f00\u59cb\u5199\n2. \u5982\u679c\u53ef\u80fd\uff0c\u628a\u4f60\u7684\u663e\u793a\u5668\u7ad6\u8d77\u6765\uff0c\u56e0\u4e3a\u8fd9\u9898\u4ee3\u7801\u662f\u5728\u592a\u957f\u4e86\uff0c\u9f20\u6807\u4e00\u6eda\u5c31\u627e\u4e0d\u7740\u4e86\n\n\u6700\u96be\u4e5f\u662f\u6700\u91cd\u8981\u7684\u5c31\u662f\u8003\u8651\u6240\u6709\u60c5\u51b5\uff0c\u5e76\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u53ca\u4ee3\u7801\u4e0d\u8981\u5199\u6302\n\n\u7f57\u5217\u4e00\u4e0b\u6211\u8e29\u8fc7\u7684\u5751\n1. \u8bfb\u4e0d\u8fdb\u6765\u724c\n2. \u4e3b\u732a\u9519\u8bef\u5e72\u6389\u5fe0\u732a\u65f6\u6e05\u7a7a\u724c\u6ca1\u6e05\u5e72\u51c0\n3. \u5404\u79cd\u7279\u5224\u7ec6\u8282\n4. \u4e0d\u505c\u4f7f\u7528\u540c\u4e00\u5f20\u724c\n5. \u724c\u5806\u88ab\u9519\u8bef\u62bd\u7a7a\n6. \u6570\u7ec4\u5f00\u5c0f~~23333\u6211\u4ea4\u4e86\u597d\u51e0\u904d\u624d\u53d1\u73b0RE\u662f\u56e0\u4e3a\u8fd9\u4e2a~~\n7. \u6539\u9519\u4ee3\u7801~~\"\u5357\u732a\u5165\u4fb5\"\u548c\"\u4e07\u7bad\u9f50\u53d1\"\u4e24\u6bb5\u4ee3\u7801\u975e\u5e38\u50cf~~\n8. \u5728\u9519\u8bef\u7684\u65f6\u88c5\u5907\"\u732a\u54e5\u8fde\u5f29\"\n\n# \u6700\u540e\u7ed9\u51fa\u697c\u4e0bdalao\u7ed9\u51fa\u7684\u5c0f\u6837\u4f8b\u7684\u7b54\u6848\n\nerr\u662f\u6211\u7684\u4ee3\u7801\u4ecestderr\u6570\u636e\u6d41\u8f93\u51fa\u7684debug\u4fe1\u606f\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u7406\u89e3\u732a\u5e72\u4e86\u5565\n\n\u6bd4\u5982\u5728 x use N\u540e\u51fa\u73b0\u4e86y lose K now have zzz x hurt k tili:a\u8868\u793ax\u53d1\u8d77\u5357\u732a\u5165\u4fb5\u540e y\u901a\u8fc7\u9057\u5f03K\u907f\u514d\u6389\u8840,\u8fd8\u6709zzz\u4e2a\u724c\n\n\u800ck\u6bd4\u8f83\u60e8\uff0c\u88ab\u5e72\u4e86\uff0c\u8fd8\u6709a\u4e2a\u8840\n\nk die by s\u662fk\u88abs\u5e72\u6b7b\u4e86\n\n\u5bf9\u7740\u4ee3\u7801\u5c31\u53ef\u4ee5\u7406\u89e3\u732a\u7684\u524d\u4e16\u4eca\u751f,\u6211\u89c9\u5f97\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u5355\u7eaf\u770b\u7740\u6570\u636e\u8bb2\u597d\u7406\u89e3\n\n\u5148\u7ed9\u51fa\u7684\u662f\u6837\u4f8b\uff0c\u53ca\u7b54\u6848\uff0c\u53caerr\n\n\n--------\n```\ndata:\n3 10\nMP D D F F\nZP N N N D\nFP J J J J\nF F D D J J F F K D\nans:\nFP\nDEAD\nDEAD\nJ J J J J J D\nerr:\nD D F F\nN N N D\nJ J J J\n1 have D D F F F F\n\t1use D\n\t1use D\n\t1use F\n\t1use F\n\t1use F\n\t1use F\n2 have N N N D D D\n\t2use N\n\t2 hurt 3 tili:3\n\t2 hurt 1 tili:3\n\t2use N\n\t2 hurt 3 tili:2\n\t2 hurt 1 tili:2\n\t2use N\n\t2 hurt 3 tili:1\n\t2 hurt 1 tili:1\n\t2use D\n\t2use D\n\t2use D\n3 have J J J J J J\n\t3use J\n\t3use J\n\t3use J\n\t3use J\n\t3use J\n\t3use J\n1 have D D F F F F F F\n\t1use D\n\t1use D\n\t1use F\nshouyao=2\n\t1 hurt 2 tili:3\n\t1use D\n\t1use D\n\t1use F\nshouyao=2\n\t1 hurt 2 tili:2\n\t1use D\n\t1use D\n\t1use F\nshouyao=2\n\t1 hurt 2 tili:1\n\t1use D\n\t1use D\n\t1use F\nshouyao=2\n\t2 die by 1\n\tMP lose all pai\n3 have J J J J J J K D\n\t3use J\n\t3use J\n\t3use J\n\t3use J\n\t3use J\n\t3use J\n\t3use K\n\t1 die by 3\n\n```\n\n\u6700\u540e\u7ed9\u51fa\u697c\u4e0bdalao\u7ed9\u51fa\u7684\u5c0f\u6837\u4f8b\u7684\u7b54\u6848\n\n------------\n\n```\ndata:\n3 4  \nMP J J K N   \nZP J D K W   \nFP P N P K   \nJ J K W \n\nans:\nMP\nK\nK\nDEAD\n\nerr:\nJ J K N\nJ D K W\nP N P K\n1 have J J K N J J\n\t1use J\n\t1use J\n\t1use K\n\t1use N\n\t2 lose K now have J D W\n\t3 lose K now have P N P\n\t1use J\n\t1use J\n\t1use K\n\t1use J\n\t1use J\n2 have J D W K W\n\t2use J\n\t2use D\n\t2use W\n\t2 hurt 3 tili:3\n\tset 2 csf to 2\n\t1 lose J now have J J K J J\n\t2use D\n\t2use K\n\t2use W\n\t2 hurt 3 tili:2\n\tset 1 csf to 2\n\t1 lose J now have J K J J\n\t2use D\n\t2use K\n3 have P N P W W\n\t3use P\n\t3have 3 tili\n\t3use N\n\tset 1 csf to 2\n\t1 lose J now have K J J\n\tset 1 csf to 2\n\t2 lose J now have D K\n\t3use P\n\t3have 4 tili\n\t3use W\n\tset 1 csf to 2\n\t1 lose J now have K\n\t2 lose D now have K\n\t3use W\n\t3 hurt 1 tili:3\n\t3 hurt 2 tili:3\n1 have K W W\n\t1use K\n\t1use W\n\t1 hurt 2 tili:2\n\t1 hurt 3 tili:3\n\t1use K\n\t1use W\n\t1 hurt 2 tili:1\n\t1 hurt 3 tili:2\n\t1use K\n2 have K W W\n\t2use K\n\t2use W\n\t2 hurt 3 tili:1\n\t2 hurt 1 tili:2\n\t2use K\n\t2use W\n\t3 die by 2\n```\n\n\n------------\n\n```\ndata:\n3 1  \nMP D N F K  \nZP F W F N  \nFP D N N D  \nK  \nans:\nMP\nK\nF K K\nDEAD\nerr:\nD N F K\nF W F N\nD N N D\n1 have D N F K K K\n\t1use D\n\t1use N\n\t1 hurt 2 tili:3\n\t1 hurt 3 tili:3\n\t1use D\n\t1use F\n\t1use K\n\t1use K\n\t1use K\n2 have F W F N K K\n\t2use F\n\t2use W\n\t3 lose D now have N N D\n\t1 lose D now have F K K K\n\t2use F\n\t2use F\n\t2use N\n\t2 hurt 3 tili:2\n\t1 lose K now have F K K\n\t2use F\n\t2use F\n\t2use K\n\t2use K\n3 have N N D K K\n\t3use N\n\t1 lose K now have F K\n\t2 lose K now have F F K\n\t3use N\n\t1 lose K now have F\n\t2 lose K now have F F\n\t3use D\n\t3use K\n\t3 hurt 1 tili:3\nF\n\t3use D\n\t3use K\n1 have F K K\n\t1use F\nshouyao=3\n\t1 hurt 3 tili:1\n\t1use K\n2 have F F K K\n\t2use F\nshouyao=3\n\t3 die by 2\n\n```\n\n\n------------\n\n```\ndata:\n5 10  \nMP W D F K   \nZP N N D D   \nFP F W W K   \nZP K K N D   \nFP K D P W   \nJ K W K D N N K J N\nans:\nMP\nF N\nD\nDEAD\n\nDEAD\nerr:\nW D F K\nN N D D\nF W W K\nK K N D\nK D P W\n1 have W D F K J K\n\t1use W\n\t2 lose D now have N N D\n\t1 hurt 3 tili:3\n\t4 lose D now have K K N\n\t5 lose D now have K P W\n\t1use D\n\t1use F\n\t1use K\n\t1use J\n\t1use K\n2 have N N D W K\n\t2use N\n\t3 lose K now have F W W\n\t4 lose K now have K N\n\t5 lose K now have P W\n\tset 1 csf to 2\n\t1 lose J now have D F K K\n\t2use N\n\t2 hurt 3 tili:2\n\t4 lose K now have N\n\t2 hurt 5 tili:3\n\t1 lose K now have D F K\n\t2use D\n\t2use W\n\t2 hurt 3 tili:1\n\t2 hurt 4 tili:3\n\t2 hurt 5 tili:2\n\t1 lose D now have F K\n\t2use D\n\t2use K\n3 have F W W D N\n\t3use F\nshouyao=1\n\t3 die by 1\nF\n\t1 get 3 pai haveF N K J\n4 have N N N\n\t4use N\n\t4 hurt 5 tili:1\n\tset 1 csf to 2\n\t1 lose J now have F N K\n\t2 lose K now have D\n\t4use N\neat tao\n\t4 hurt 5 tili:1\n\t1 lose K now have F N\n\t4 hurt 2 tili:3\n\t4use N\n\t5 die by 4\n\n```\n\n\n------------\n\n```\ndata:\n3 10  \nMP W D J W   \nZP J P D N   \nFP N D F F   \nJ D N N F J J D K W \nans:\nMP\nD J D\n\nDEAD\n\nerr:\nW D J W\nJ P D N\nN D F F\n1 have W D J W J D\n\t1use W\n\t2 lose D now have J P N\n\t3 lose D now have N F F\n\t1use D\n\t1use J\n\t1use W\n\t1 hurt 2 tili:3\n\t1 hurt 3 tili:3\n\t1use D\n\t1use J\n\t1use J\n\t1use D\n2 have J P N N N\n\t2use J\n\t2use P\n\t2have 4 tili\n\t2use J\n\t2use N\n\t2 hurt 3 tili:2\n\tset 2 csf to 2\n\t1 lose J now have D J J D\n\t2use N\n\t2 hurt 3 tili:1\n\tset 1 csf to 2\n\t1 lose J now have D J D\n\t2use N\n\t3 die by 2\n```\n\n\n------------\n\n```\ndata:\n3 6\nMP W J J D\nFP N F F K\nZP J J F F\nP P K K F W\nans:\nMP\nP W\nDEAD\nDEAD\n\nerr:\nW J J D\nN F F K\nJ J F F\n1 have W J J D P P\n\t1use W\n\t1 hurt 2 tili:3\n\t1 hurt 3 tili:3\n\t1use J\n\t1use J\n\t1use D\n\t1use P\n\t1use P\n2 have N F F K K K\n\t2use N\n\t2 hurt 3 tili:2\n\tset 3 csf to 2\n\t1 lose J now have J J D P P\n\t2use F\nshouyao=3\n\tset 3 csf to 2\n\t2use F\nshouyao=3\n\tset 1 csf to 2\n\t2use K\n\t2 hurt 3 tili:1\nF F\n\t2use K\n\t2use K\n3 have F F F W\n\t3use F\nshouyao=2\n\t3 die by 2\n1 have J D P P W W\n\t1use J\n\t1use D\n\t1use P\n\t1use P\n\t1use W\n\t1 hurt 2 tili:2\n\t1use J\n\t1use D\n\t1use P\n\t1use P\n\t1use W\n\t1 hurt 2 tili:1\n\t1use J\n\t1use D\n\t1use P\n\t1use P\n2 have K W W\n\t2use K\n\t1 lose D now have J P P\n\t2use W\n\tset 1 csf to 2\n\t1 lose J now have P P\n\t2use W\n\t2 hurt 1 tili:3\n1 have P P W W\n\t1use P\n\t1have 4 tili\n\t1use P\n\t1use W\n\t2 die by 1\n\n```",
        "postTime": 1541408792,
        "uid": 22926,
        "name": "\u706b\u661f\u5927\u738b",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\n\n~~\u4ee3\u7801\u6210\u529f\u5361\u5230$600$\u884c\u4ee5\u5185~~\n\n\u66fe\u7ecf\u53d1\u8a93\u4e00\u5929\u5207\u6389\u7684\u6211\u6253\u4e86\u4e24\u5468\u3002\u3002\u3002\n\n\u5148\u770b\u9898\n\n\u8981\u70b9\u8fd8\u662f\u633a\u591a\u7684\uff0c\u5373\u4f7f\u662f~~\u50cf\u6211\u8fd9\u6837~~\u719f\u6089\u4e09\u56fd\u6740\u7684\u540c\uff08$w\u00e1n$\uff09\u5b66\uff08$ ji\u0101$\uff09\uff0c\u4e5f\u8981\u8ba4\u771f\u770b\u3002\n\n\n------------\n\n\u9996\u5148\u662f\u57fa\u672c\u724c\u7684\u90e8\u5206\u3002\n\n\n\n\u6740\uff1a\u5728\u81ea\u5df1\u7684\u56de\u5408\u5185\uff0c\u5bf9\u653b\u51fb\u8303\u56f4\u5185\u9664\u81ea\u5df1\u4ee5\u5916\u7684\u4e00\u540d\u89d2\u8272\u4f7f\u7528\u3002\u5982\u679c\u6ca1\u6709\u88ab\u300e\u95ea\u300f\u62b5\u6d88\uff0c\u5219\u9020\u62101\u70b9\u4f24\u5bb3\u3002\u65e0\u8bba\u6709\u65e0\u6b66\u5668\uff0c\u6740\u7684\u653b\u51fb\u8303\u56f4\u90fd\u662f1\uff1b\n\n\u76f4\u63a5\u770b\u770b\u81ea\u5df1\u7684\u4e0b\u5bb6\u8df3\u6ca1\u8df3\uff0c\u8df3\u4e86\u7684\u8bdd\u5c31\u770b\u770b\u662f\u4e0d\u662f\u4e00\u4f19\u7136\u540e\u4e00\u5200\u780d\u4e0b\u53bb\uff0c\u6ca1\u8df3\u76f4\u63a5$return$\u3002\n\n\u6ce8\u610f\uff0c\u7528\u4e86\u6740\u4e4b\u540e\u81ea\u5df1\u7684\u8eab\u4efd\u5c31\u5b8c\u5168\u66b4\u9732\u4e86\u3002\n\n\n------------\n\n\u95ea\uff1a\u5f53\u4f60\u53d7\u5230\u6740\u7684\u653b\u51fb\u65f6\uff0c\u53ef\u4ee5\u5f03\u7f6e\u4e00\u5f20\u95ea\u6765\u62b5\u6d88\u6740\u7684\u6548\u679c\uff1b\n\n\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u9700\u8981\u89e3\u91ca\u7684\u5427\uff0c\u76f4\u63a5\u66b4\u529b\u770b\u770b\u6709\u6ca1\u6709\u95ea\u5c31\u884c\u4e86\u3002\n\n\n------------\n\u6843\uff1a\u5728\u81ea\u5df1\u7684\u56de\u5408\u5185\uff0c\u5982\u679c\u81ea\u5df1\u7684\u4f53\u529b\u503c\u4e0d\u7b49\u4e8e\u4f53\u529b\u4e0a\u9650\uff0c\u90a3\u4e48\u4f7f\u7528\u4e00\u4e2a\u6843\u53ef\u4ee5\u4e3a\u81ea\u5df1\u8865\u5145\u4e00\u70b9\u4f53\u529b\uff0c\u5426\u5219\u4e0d\u80fd\u4f7f\u7528\u6843\uff1b\u6843\u53ea\u80fd\u5bf9\u81ea\u5df1\u4f7f\u7528\uff1b\u5728\u81ea\u5df1\u7684\u56de\u5408\u5916\uff0c\u5982\u679c\u81ea\u5df1\u7684\u8840\u53d8\u4e3a0\u6216\u8005\u66f4\u4f4e\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff1b\n\n\u6ce8\u610f\uff1a\u4e0d\u80fd\u5bf9\u522b\u4eba\u4f7f\u7528\uff01\uff01\uff01\n\n\n\n------------\n\n\u732a\u54e5\u8fde\u5f29\uff1a\u6b66\u5668\uff0c\u653b\u51fb\u8303\u56f41\uff0c\u51fa\u724c\u9636\u6bb5\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u5f20\u6740\uff1b\n\n\u6ce8\u610f\uff1a\u5373\u4f7f\u4e4b\u524d\u6709\u4e86\u4e5f\u8981\u518d\u88c5\u4e00\u904d\uff0c\u628a\u4e4b\u524d\u7684\u9876\u6389\uff08\u4e0d\u6127\u662f\u732a\uff09\u3002\n\n\n------------\n\n\u770b\u4e0a\u53bb\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u7ec6\u8282\u5f88\u591a\u3002\n\n\u9996\u5148\u5c31\u662f\u88c5\u4e0a\u732a\u54e5\u8fde\u5f29\u4e4b\u540e\u524d\u9762\u7684\u6740\u4e5f\u662f\u53ef\u4ee5\u7528\u7684\uff0c\u9700\u8981$i=0$\u91cd\u65b0\u626b\u4e00\u904d\u3002\n\n\u8fd8\u6709\u9898\u76ee\u63cf\u8ff0\u4e2d\u8bf4\u4fdd\u8bc1\u724c\u6570\u591f\u7528\uff0c\u4e0d\u8981\u76f8\u4fe1\u5b83\uff0c\u724c\u5806\u6ca1\u4e86\u5c31\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c\u3002\n\n\u4e00\u4e2a\u56de\u5408\u53ea\u80fd\u7528\u4e00\u6b21\u6740\uff08\u9664\u975e\u88c5\u4e86\u732a\u54e5\u8fde\u5f29\uff09\u3002\n\n\n------------\n\u597d\u4e86\u73b0\u5728$10$\u5206\u5230\u624b\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u9526\u56ca\u724c\u3002\n\n\u51b3\u6597\uff1a\u51fa\u724c\u9636\u6bb5\uff0c\u5bf9\u9664\u81ea\u5df1\u4ee5\u5916\u4efb\u610f\u4e00\u540d\u89d2\u8272\u4f7f\u7528\uff0c\u7531\u76ee\u6807\u89d2\u8272\u5148\u5f00\u59cb\uff0c\u81ea\u5df1\u548c\u76ee\u6807\u89d2\u8272\u8f6e\u6d41\u5f03\u7f6e\u4e00\u5f20\u6740\uff0c\u9996\u5148\u6ca1\u6709\u6740\u53ef\u5f03\u7684\u4e00\u65b9\u53d7\u52301\u70b9\u4f24\u5bb3\uff0c\u53e6\u4e00\u65b9\u89c6\u4e3a\u6b64\u4f24\u5bb3\u7684\u6765\u6e90\uff1b\n\n\u8fd9\u4e2a\u5c31\u4e00\u4e2a$while$\u5c31\u66b4\u529b\u5224\u65ad\u4e00\u4e0b\u6709\u6ca1\u6709\u6740\u5c31\u5b8c\u4e8b\u4e86\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5fe0\u81e3\u63a5\u6536\u5230\u4e3b\u516c\u7684\u6740\u8981\u76f4\u63a5\u6389\u8840\u3002\n\n\u8fd8\u6709\u4f24\u5bb3\u6765\u6e90\u4e0d\u662f\u7528\u724c\u8005\u800c\u662f\u5bf9\u65b9\u3002\n\n\u8981\u5224\u65ad\u662f\u8df3\u53cd\u8fd8\u662f\u8df3\u5fe0\u3002\n\n------------\n\u5357\u732a\u5165\u4fb5\uff1a\u51fa\u724c\u9636\u6bb5\uff0c\u5bf9\u9664\u4f60\u4ee5\u5916\u6240\u6709\u89d2\u8272\u4f7f\u7528\uff0c\u6309\u9006\u65f6\u9488\u987a\u5e8f\u4ece\u4f7f\u7528\u8005\u4e0b\u5bb6\u5f00\u59cb\u4f9d\u6b21\u7ed3\u7b97\uff0c\u9664\u975e\u5f03\u7f6e\u4e00\u5f20\u6740\uff0c\u5426\u5219\u53d7\u52301\u70b9\u4f24\u5bb3\uff1b\n\n\u8fd9\u91cc\u5224\u65ad\u4e00\u4e0b\u6b7b\u4e86\u5c31\u76f4\u63a5\u8df3\u8fc7\uff0c\u849f\u84bb\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u597d\u51e0\u5929\u3002\u3002\u3002\n\n\u6bcf\u4e2a\u4eba\u90fd\u8981\u5224\u65ad\u3002\n\n\n\n------------\n\u4e07\u7bad\u9f50\u53d1\uff1a\u548c\u5357\u732a\u5165\u4fb5\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8981\u5f03\u7f6e\u7684\u4e0d\u662f\u6740\u800c\u662f\u95ea\uff1b\n\n\u505a\u6cd5\u548c\u9898\u4e0a\u8bf4\u7684\u4e5f\u4e00\u6837\uff0c\u628a\u6740\u6362\u6210\u95ea\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\n------------\n\u8fd8\u662f\u5f88\u9ebb\u70e6\u7684\uff0c\u6700\u540e\u63d0\u9192\u4e00\u4e0b\u6309\u7406\u6765\u8bf4\u9664\u4e86\u6843\u4f7f\u7528\u4efb\u610f\u4e00\u5f20\u624b\u724c\u540e\u90fd\u8981\u91cd\u65b0\u626b\u4e00\u904d\uff0c\u6bd4\u5982\u8bf4\u4e07\u7bad\u9f50\u53d1\u6740\u6b7b\u4e86\u4f60\u7684\u4e0b\u5bb6\uff0c\u7136\u540e\u524d\u9762\u7684\u6740\u6709\u53ef\u80fd\u5c31\u6709\u4e86\u76ee\u6807\u3002\n\n\u597d\u7684\u73b0\u5728\u6211\u4eec\u62ff\u5230$30$\u5206\u4e86\u3002\n\n\n------------\n\u6700\u540e\u4e00\u4e2a\u6700\u6076\u5fc3\u7684\u90e8\u5206\u2014\u2014\u65e0\u61c8\u53ef\u51fb\u3002\n\norz\u4e00\u4e0b\u5404\u8def\u7528\u5947\u5076\u6027\u6765\u5224\u65ad\u7684\u795e\u4ed9\u3002\n\n\u849f\u84bb\u53ea\u4f1a\u9012\u5f52\u3002\u3002\u3002\n\n\u90a3\u4e48\u660e\u786e\u4e00\u4e0b\uff0c\u65e0\u61c8\u53ef\u51fb\u540e\uff0c\u81ea\u5df1\u548c\u5bf9\u65b9\u7684\u8eab\u4efd\u90fd\u5df2\u7ecf\u66b4\u9732\u4e86\u3002\n\n\u5224\u65ad\u4e00\u4e0b\u53d7\u653b\u51fb\u7684\u4eba\u8df3\u6ca1\u8df3\u8eab\u4efd\uff0c\u5982\u679c\u6ca1\u8df3\u5c31\u76f4\u63a5$return$\u3002\n\n\u8bb0\u5f55\u4e00\u4e2a$flag$\u5224\u65ad\u662f\u5728\u732e\u6bb7\u52e4\u8fd8\u662f\u8868\u654c\u610f\u3002\n\n\u7136\u540e\u66b4\u529b\u679a\u4e3e\u5224\u65ad\u5c31\u884c\u4e86\uff0c\u627e\u5230\u4e4b\u540e\u4e0b\u4e00\u5c42\u9012\u5f52\u8981$flag$^=$1$\n\n\u81f3\u6b64\uff0c\u732a\u56fd\u6740\u6210\u529f$AC$\u3002\n\n\n------------\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define N 2001001\n#define MAX 2001\n#define re register\n#define inf 1e18\n#define eps 1e-10\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ninline void read(re ll &ret)\n{\n\tret=0;re char c=getchar();re bool pd=false;\n\twhile(!isdigit(c)){pd|=c=='-';c=getchar();}\n\twhile(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();}\n\tret=pd?-ret:ret;\n\treturn;\n}\nll n,m;\nstruct zhu\n{\n\tll paishu,leixing,xueliang;//leixing=1\u4e3a\u4e3b\u732a\uff0c2\u4e3a\u5fe0\u732a\uff0c3\u4e3a\u53cd\u732a \n\tchar pai[1000001];\n\tbool zhuge,si,tiaozhong,tiaofan,leifan;\n}a[11];\nchar s[N];\nchar paidui[2001];\nll head;\ninline void print()\n{\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tif(a[i].si)\n\t\t\tprintf(\"DEAD\\n\");\n\t\telse\n\t\t{\n//\t\t\tcout<<i<<\" \"<<a[i].xueliang<<endl;\n\t\t\tfor(re int j=1;j<=a[i].paishu;j++)\n\t\t\t{\n\t\t\t\tif(j>1)\n\t\t\t\t\tputchar(' ');\n\t\t\t\tputchar(a[i].pai[j]);\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn;\n}\ninline void init()\n{\n\tread(n);\n\tread(m);\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\ta[i].si=false;\n\t\ta[i].xueliang=4;\n\t\ta[i].zhuge=false;\n\t\tscanf(\"%s\",s+1);\n\t\tif(s[1]=='M')\n\t\t\ta[i].leixing=1;\n\t\telse if(s[1]=='Z')\n\t\t\ta[i].leixing=2;\n\t\telse\n\t\t\ta[i].leixing=3;\n\t\tfor(re int j=1;j<=4;j++)\n\t\t{\n\t\t\tscanf(\"%s\",s+1);\n\t\t\ta[i].pai[++a[i].paishu]=s[1];\n\t\t}\n\t}\n\tfor(re int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",s+1);\n\t\tpaidui[i]=s[1];\n\t}\n}\ninline void yongpai(re ll num,re ll pos)\n{\n\tfor(re int i=pos+1;i<=a[num].paishu;i++)\n\t\ta[num].pai[i-1]=a[num].pai[i];\n\ta[num].paishu--;\n\treturn;\n}\n\ninline void jieshu()\n{\n\tre bool mp=true,fp=true;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tif(a[i].xueliang!=0&&a[i].leixing==3)\n\t\t\tmp=false;\n\t\tif(a[i].xueliang!=0&&a[i].leixing==1)\n\t\t\tfp=false;\n\t}\n\tif(mp)\n\t{\n\t\tprintf(\"MP\\n\");\n\t\tprint();\n\t\texit(0);\n\t}\n\tif(fp)\n\t{\n\t\tprintf(\"FP\\n\");\n\t\tprint();\n\t\texit(0);\n\t}\n\treturn;\n}\ninline void mopai(re ll pos,re ll num)\n{\n\tfor(re int i=1;i<=num;i++)\n\t{\n\t\tif(++head>m)\n\t\t\thead=m;\n\t\ta[pos].pai[++a[pos].paishu]=paidui[head];\n\t}\n\t\t\n\treturn;\n}\ninline void si(re ll num,re ll laiyuan)\n{\n//\tcout<<num<<\" \"<<laiyuan<<endl;\n\tif(a[num].xueliang>=1)\n\t\treturn;\n\tfor(re int i=1;i<=a[num].paishu;i++)\n\t{\n\t\tif(a[num].pai[i]=='P')\n\t\t{\n\t\t\tyongpai(num,i);\n\t\t\ta[num].xueliang++;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(a[num].xueliang<1)\n\t{\n\t\ta[num].si=true;\n\t\tjieshu();\n\t\tif(a[num].leixing==3)\n\t\t\tmopai(laiyuan,3);\n\t\telse if(a[num].leixing==2&&a[laiyuan].leixing==1)\n\t\t{\n\t\t\ta[laiyuan].paishu=0;\n\t\t\ta[laiyuan].zhuge=false;\n\t\t}\n\t}\n\treturn;\n}\ninline bool shan(re ll pos)\n{\n\tfor(re int i=1;i<=a[pos].paishu;i++)\n\t{\n\t\tif(a[pos].pai[i]=='D')\n\t\t{\n\t\t\tyongpai(pos,i);\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\ninline bool sha(re ll pos,re ll num)\n{\n\tfor(re int i=pos+1;i<=n;i++)\n\t{\n\t\tif(a[i].si)continue;\n\t\tif((a[pos].leixing==1&&(a[i].tiaofan||a[i].leifan))||(a[pos].leixing==2&&a[i].tiaofan)||(a[pos].leixing==3&&(a[i].leixing==1||a[i].tiaozhong)))\n\t\t{\n\t\t\tyongpai(pos,num);\n\t\t\tif(a[i].tiaofan)\n\t\t\t{\n\t\t\t\ta[pos].tiaozhong=true;\n\t\t\t\ta[pos].leifan=false;\n\t\t\t}\n\t\t\telse if(a[i].tiaozhong||a[i].leixing==1)\n\t\t\t\ta[pos].tiaofan=true;\n\t\t\tif(!shan(i))\n\t\t\t{\n\t\t\t\ta[i].xueliang--;\n\t\t\t\tsi(i,pos);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\t\n\t}\n\tfor(re int i=1;i<pos;i++)\n\t{\n\t\tif(a[i].si)continue;\n\t\tif((a[pos].leixing==1&&(a[i].tiaofan||a[i].leifan))||(a[pos].leixing==2&&a[i].tiaofan)||(a[pos].leixing==3&&(a[i].leixing==1||a[i].tiaozhong)))\n\t\t{\n\t\t\tyongpai(pos,num);\n\t\t\tif(a[i].tiaofan)\n\t\t\t{\n\t\t\t\ta[pos].tiaozhong=true;\n\t\t\t\ta[pos].leifan=false;\n\t\t\t}\n\t\t\telse if(a[i].tiaozhong||a[i].leixing==1)\n\t\t\t\ta[pos].tiaofan=true;\n\t\t\tif(!shan(i))\n\t\t\t{\n\t\t\t\ta[i].xueliang--;\n\t\t\t\tsi(i,pos);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\t\n\t}\n}\ninline bool wuxie(re ll pos,re ll to,re bool pd)\n{\n\tif(!a[to].tiaofan&&!a[to].tiaozhong&&a[to].leixing!=1)return false;\n\tif(pd)\n\t{\n\t\tre bool flag=false;\n\t\tfor(re int i=pos;i<=n;i++)\n\t\t{\n\t\t\tif(a[i].si)continue;\n\t\t\tif((a[to].leixing==1&&(a[i].leixing==3))||(a[to].tiaozhong&&(a[i].leixing==3))||(a[to].tiaofan&&(a[i].leixing==1||a[i].leixing==2)))\n\t\t\t\tcontinue;\n\t\t\tfor(re int j=1;j<=a[i].paishu;j++)\n\t\t\t{\n\t\t\t\tif(a[i].pai[j]=='J')\n\t\t\t\t{\n\t\t\t\t\tyongpai(i,j);\n\t\t\t\t\tif(a[to].leixing==1)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaozhong=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\telse if(a[to].leixing==2)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaozhong=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaofan=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t//\tif((a[i].leixing==1&&a[pos].leixing==2)||(a[i].leixing==2&&(a[pos].leixing==1||a[pos].leixing==2))||(a[i].leixing==3&&a[pos].leixing==3))\n\t\t\t\t\treturn !wuxie(i,to,false);\n\t\t\t\t//\telse\n\t\t\t\t//\t\treturn !wuxie(i,to,true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(re int i=1;i<pos;i++)\n\t\t{\n\t\t\tif(a[i].si)continue;\n\t\t\tif((a[to].leixing==1&&(a[i].leixing==3))||(a[to].tiaozhong&&(a[i].leixing==3))||(a[to].tiaofan&&(a[i].leixing==1||a[i].leixing==2)))\n\t\t\t\tcontinue;\n\t\t\tfor(re int j=1;j<=a[i].paishu;j++)\n\t\t\t{\n\t\t\t\tif(a[i].pai[j]=='J')\n\t\t\t\t{\n\t\t\t\t\tyongpai(i,j);\n\t\t\t\t\tif(a[to].leixing==1)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaozhong=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\telse if(a[to].leixing==2)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaozhong=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaofan=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t//\t\tif((a[i].leixing==1&&a[pos].leixing==2)||(a[i].leixing==2&&(a[pos].leixing==1||a[pos].leixing==2))||(a[i].leixing==3&&a[pos].leixing==3))\n\t\t\t\t\t\treturn !wuxie(i,to,false);\n\t\t\t//\t\telse\n\t\t\t//\t\t\treturn !wuxie(i,to,true);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\tre bool flag=false;\n\t\tfor(re int i=pos;i<=n;i++)\n\t\t{\n\t\t\tif(a[i].si)continue;\n\t\t\tif(!((a[to].leixing==1&&(a[i].leixing==3))||(a[to].tiaozhong&&(a[i].leixing==3))||(a[to].tiaofan&&(a[i].leixing==1||a[i].leixing==2))))\n\t\t\t\tcontinue;\n\t\t\tfor(re int j=1;j<=a[i].paishu;j++)\n\t\t\t{\n\t\t\t\tif(a[i].pai[j]=='J')\n\t\t\t\t{\n\t\t\t\t\tyongpai(i,j);\n\t\t\t\t\tif(a[to].leixing==1)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaofan=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\telse if(a[to].leixing==2)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaofan=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaozhong=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\treturn !wuxie(i,to,true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(re int i=1;i<pos;i++)\n\t\t{\n\t\t\tif(a[i].si)continue;\n\t\t\tif(!((a[to].leixing==1&&(a[i].leixing==3))||(a[to].tiaozhong&&(a[i].leixing==3))||(a[to].tiaofan&&(a[i].leixing==1||a[i].leixing==2))))\n\t\t\t\tcontinue;\n\t\t\tfor(re int j=1;j<=a[i].paishu;j++)\n\t\t\t{\n\t\t\t\tif(a[i].pai[j]=='J')\n\t\t\t\t{\n\t\t\t\t\tyongpai(i,j);\n\t\t\t\t\tif(a[to].leixing==1)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaofan=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\telse if(a[to].leixing==2)\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaofan=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i].tiaozhong=true;\n\t\t\t\t\t\ta[i].leifan=false;\n\t\t\t\t\t}\n\t\t\t\t\treturn !wuxie(i,to,true);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn false;\n\t}\n}\ninline bool juedou(re ll pos,re ll num)\n{\n\tfor(re int i=pos+1;i<=n;i++)\n\t{\n\t\tif(a[i].si)continue;\n\t\tif((a[pos].leixing==1&&(a[i].tiaofan||a[i].leifan))||(a[pos].leixing==2&&a[i].tiaofan)||(a[pos].leixing==3&&a[i].leixing==1))\n\t\t{\n\t\t\tyongpai(pos,num);\n\t\t\tif(a[i].leixing==3)\n\t\t\t{\n\t\t\t\ta[pos].tiaozhong=true;\n\t\t\t\ta[pos].leifan=false;\n\t\t\t}\n\t\t\telse if(a[i].tiaozhong||a[i].leixing==1)\n\t\t\t\ta[pos].tiaofan=true;\n\t\t\tif(wuxie(pos,i,true))\n\t\t\t\treturn true;\n\t\t\tif(a[pos].leixing==1&&a[i].leixing==2)\n\t\t\t{\n\t\t\t\ta[i].xueliang--;\n\t\t\t\tsi(i,pos);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tre ll turn=i;\n\t\t\twhile(true)\n\t\t\t{\n\t\t\t\tre bool flag=false;\n\t\t\t\tfor(re int j=1;j<=a[turn].paishu;j++)\n\t\t\t\t{\n\t\t\t\t\tif(a[turn].pai[j]=='K')\n\t\t\t\t\t{\n\t\t\t\t\t\tyongpai(turn,j);\n\t\t\t\t\t\tflag=true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!flag)\n\t\t\t\t{\n\t\t\t\t\ta[turn].xueliang--;\n\t\t\t\t\tsi(turn,turn==pos?i:pos);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif(turn==i)\n\t\t\t\t\tturn=pos;\n\t\t\t\telse\n\t\t\t\t\tturn=i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(re int i=1;i<pos;i++)\n\t{\n\t\tif(a[i].si)continue;\n\t\tif((a[pos].leixing==1&&(a[i].tiaofan||a[i].leifan))||(a[pos].leixing==2&&a[i].tiaofan)||(a[pos].leixing==3&&a[i].leixing==1))\n\t\t{\n\t\t\tyongpai(pos,num);\n\t\t\tif(a[i].leixing==3)\n\t\t\t{\n\t\t\t\ta[pos].tiaozhong=true;\n\t\t\t\ta[pos].leifan=false;\n\t\t\t}\n\t\t\telse if(a[i].tiaozhong||a[i].leixing==1)\n\t\t\t\ta[pos].tiaofan=true;\n\t\t\tif(wuxie(pos,i,true))\n\t\t\t\treturn true;\n\t\t\tif(a[pos].leixing==1&&a[i].leixing==2)\n\t\t\t{\n\t\t\t\ta[i].xueliang--;\n\t\t\t\tsi(i,pos);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tre ll turn=i;\n\t\t\twhile(true)\n\t\t\t{\n\t\t\t\tre bool flag=false;\n\t\t\t\tfor(re int j=1;j<=a[turn].paishu;j++)\n\t\t\t\t{\n\t\t\t\t\tif(a[turn].pai[j]=='K')\n\t\t\t\t\t{\n\t\t\t\t\t\tyongpai(turn,j);\n\t\t\t\t\t\tflag=true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!flag)\n\t\t\t\t{\n\t\t\t\t\ta[turn].xueliang--;\n\t\t\t\t\tsi(turn,turn==pos?i:pos);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif(turn==i)\n\t\t\t\t\tturn=pos;\n\t\t\t\telse\n\t\t\t\t\tturn=i;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\ninline void nanman(re ll pos,re ll num)\n{\n//\tcout<<pos<<\" \"<<num<<endl;\n\tyongpai(pos,num);\n\tfor(re int i=pos+1;i<=n;i++)\n\t{\n\t\tif(a[i].si)continue;\n\t\tif(wuxie(pos,i,true))continue;\n\t\tre bool flag=false;\n\t\tfor(re int j=1;j<=a[i].paishu;j++)\n\t\t{\n\t\t\tif(a[i].pai[j]=='K')\n\t\t\t{\n\t\t\t\tyongpai(i,j);\n\t\t\t\tflag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\ta[i].xueliang--;\n\t\t\tif(a[i].leixing==1&&!a[pos].tiaozhong&&!a[pos].tiaofan)\n\t\t\t\ta[pos].leifan=true;\n\t\t\tsi(i,pos);\n\t\t}\n\t}\n\tfor(re int i=1;i<pos;i++)\n\t{\n\t\tif(a[i].si)continue;\n\t\tif(wuxie(pos,i,true))continue;\n\t\tre bool flag=false;\n\t\tfor(re int j=1;j<=a[i].paishu;j++)\n\t\t{\n\t\t\tif(a[i].pai[j]=='K')\n\t\t\t{\n\t\t\t\tyongpai(i,j);\n\t\t\t\tflag=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\ta[i].xueliang--;\n\t\t\tif(a[i].leixing==1&&!a[pos].tiaozhong&&!a[pos].tiaofan)\n\t\t\t\ta[pos].leifan=true;\n\t\t\tsi(i,pos);\n\t\t}\n\t}\n\treturn;\n}\ninline void wanjian(re ll pos,re ll num)\n{\n//\tcout<<pos<<\" \"<<num<<endl;\n\tyongpai(pos,num);\n\tfor(re int i=pos+1;i<=n;i++)\n\t{\n\t\tif(a[i].si)continue;\n\t\tif(wuxie(pos,i,true))continue;\n\t\tif(!shan(i))\n\t\t{\n\t\t\ta[i].xueliang--;\n\t\t\tif(a[i].leixing==1&&!a[pos].tiaozhong&&!a[pos].tiaofan)\n\t\t\t\ta[pos].leifan=true;\n\t\t\tsi(i,pos);\n\t\t}\n\t}\n\tfor(re int i=1;i<pos;i++)\n\t{\n\t\tif(a[i].si)continue;\n\t\tif(wuxie(pos,i,true))continue;\n\t\tif(!shan(i))\n\t\t{\n\t\t\ta[i].xueliang--;\n\t\t\tif(a[i].leixing==1&&!a[pos].tiaozhong&&!a[pos].tiaofan)\n\t\t\t\ta[pos].leifan=true;\n\t\t\tsi(i,pos);\n\t\t}\n\t}\n\treturn;\n}\ninline void chupai(re ll pos)\n{\n\tre bool chuguosha=false;\n\tfor(re int i=1;i<=a[pos].paishu;i++)\n\t{\n\t\tif(a[pos].si)\n\t\t\treturn;\n\t\tif(a[pos].pai[i]=='P')\n\t\t{\n\t\t\tif(a[pos].xueliang<4)\n\t\t\t{\n\t\t\t\tyongpai(pos,i);\n\t\t\t\ti=0;\n\t\t\t\ta[pos].xueliang++;\n\t\t\t}\n\t\t}\n\t\telse if(a[pos].pai[i]=='K'&&(!chuguosha||a[pos].zhuge))\n\t\t{\n\t\t\tif(sha(pos,i))\n\t\t\t{\n\t\t\t\ti=0;\n\t\t\t\tchuguosha=true;\n\t\t\t}\n\t\t}\n\t\telse if(a[pos].pai[i]=='F')\n\t\t{\n\t\t\tif(juedou(pos,i))\n\t\t\t\ti=0;\n\t\t}\n\t\telse if(a[pos].pai[i]=='N')\n\t\t{\n\t\t\tnanman(pos,i);\n\t\t\ti=0;\n\t\t}\n\t\telse if(a[pos].pai[i]=='W')\n\t\t{\n\t\t\twanjian(pos,i);\n\t\t\ti=0;\n\t\t}\n\t\telse if(a[pos].pai[i]=='Z')\n\t\t{\n\t\t\ta[pos].zhuge=true;\n\t\t\tyongpai(pos,i);\n\t\t\ti=0;\n\t\t}\n\t//\tcout<<i<<endl;\n\t}\n\treturn;\n}\n/*\n\u300e\u6843(P)\u300f\n\u300e\u6740(K)\u300f\n\u300e\u95ea(D)\u300f\n\u300e\u51b3\u6597(F)\u300f\n\u300e\u5357\u732a\u5165\u4fb5(N)\u300f\n\u300e\u4e07\u7bad\u9f50\u53d1(W)\u300f\n\u300e\u65e0\u61c8\u53ef\u51fb(J)\u300f\n\u300e\u732a\u54e5\u8fde\u5f29(Z)\u300f\n*/\ninline void work()\n{\n\tre ll num=0;\n\twhile(true)\n\t{\n\t\tnum%=n;\n\t\tnum++;\n\t\tif(a[num].si)\n\t\t\tcontinue;\n\t\tmopai(num,2);\n\t\tchupai(num);\n\t}\n}\nsigned main()\n{\n\tinit();\n\twork();\n\texit(0);\n}\n//[SDOI2010]\u732a\u56fd\u6740\n```\n",
        "postTime": 1577858344,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u8d85\u7ea7\u65e0\u654c\u5927\u7684\u6a21\u62df\uff0c\u5148\u6765\u770b\u9898\u76ee\n\u9996\u5148\u5206\u4e3a\u4e09\u79cd\u4eba \u4f46\u662f\u5728\u4e09\u79cd\u4eba\u4e4b\u5916\u8fd8\u5b58\u5728\u7b2c\u56db\u79cd\u201c\u5047\u4eba\u201d\uff0c\u6211\u4eec\u79f0\u4e3a\u7c7b\u53cd\u732a\uff08\u56e0\u4e3a\u5357\u86ee\u6216\u8005\u4e07\u7bad\u4e0d\u5c0f\u5fc3\u6253\u5230\u4e3b\u516c\u5bfc\u81f4\u88ab\u6253\u5165\u51b7\u5bab\uff09\n\u4e00\u5c42\u5c42\u6765\u5206\u6790\n\u9996\u5148\u662f\u6740\uff0c\u5982\u679c\u80fd\u6740\u5c31\u6740\uff0c\u80fd\u6551\u5c31\u6551\n\u51b3\u6597\u662f\u6311\u4e00\u4e2a\u53cd\u732a\u6216\u8005\u7c7b\u53cd\u732a\uff0c\u4f46\u662f\u51b3\u6597\u6253\u5fe0\u732a\uff0c\u5fe0\u732a\u662f\u4e0d\u80fd\u56de\u624b\u7684\uff08\u59d4\u5c48\uff09\n\u4e07\u7bad\u6216\u8005\u5357\u86ee\u90fd\u662f\u53ef\u4ee5\u88ab\u65e0\u61c8\u6389\u7684\uff0c\u65e0\u61c8\u7684\u6761\u4ef6\u5c31\u662f\u53d7\u6cd5\u8005\u548c\u5f53\u524d\u7684\u51fa\u724c\u8005\u662f\u540c\u76df\uff0c\u5c31\u53ef\u4ee5\u65e0\u61c8\u6389\uff0c\u5f53\u7136\u65e0\u61c8\u4e5f\u53ef\u4ee5\u65e0\u61c8\u6389\u65e0\u61c8\n\uff0c\u6761\u4ef6\u662f\u65bd\u6cd5\u8005\u548c\u53d7\u6cd5\u8005\u5f97\u662f\u4e0d\u540c\u8054\u76df\n\u8bf8\u845b\u6709\u88c5\u5c31\u88c5\uff0c\u5177\u4f53\u8be6\u89c1\u4ee3\u7801\uff0c\u6709\u6ce8\u91ca\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M = 2000;\nconst int N = 100;\nstruct stl{\n    int next,last;\n    int hp,card_sz;\n    bool zgln;\n    char id;\n    char card[M + 5];\n}a[N + 5];\nchar card_a[M * 5 + 5];\nint n,m;\nint fz;\nchar kn[N + 5];\nvoid wjqf(int x1);\nvoid jd(int x1,int x2);\nvoid mp(int x);\nvoid kil(int x1,int x2);\nvoid js(int x1,int x2);\nbool wxkj(int x1,int x2,int x3);\nbool ed;\nvoid mp(int x)//\u62bd\u724c\n{\n    if(!m) m ++;\n    a[x].card[++ a[x].card_sz] = card_a[m];\n    m --;\n}\nvoid jd(int x1,int x2)\n{\n    int i,j,k;\n    if(wxkj(x1,x2,1)) return;//\u5982\u679c\u88ab\u540c\u4f19\u65e0\u61c8\u4e86\u5c31\u8df3\u8fc7\n    if(x1 == 1 && a[x2].id == 'Z')//\u5982\u679c\u6253\u5fe0\u732a\u4e0d\u80fd\u8fd8\u624b\n    {\n        a[x2].hp --;\n        if(! a[x2].hp) js(x1,x2);\n        return;\n    }\n    j = k = 1;\n    while(1)\n    {\n        while(a[x2].card[j] != 'K' && j <= a[x2].card_sz) j ++;//\u8f6e\u6d41\u51fa\u6740\uff0c\u7b2c\u4e00\u4e2a\u6ca1\u6709\u7684\u6263\u8840\n        if(j > a[x2].card_sz)\n        {\n            a[x2].hp --;\n            if(! a[x2].hp) js(x1,x2);\n            return;\n        }\n        a[x2].card[j] = 'U';\n        while(a[x1].card[k] != 'K' && k <= a[x1].card_sz) k ++;\n        if(k > a[x1].card_sz)\n        {\n            a[x1].hp --;\n            if(! a[x1].hp) js(x2,x1);\n            return;\n        }\n        a[x1].card[k] = 'U';\n    }\n}\nvoid kil(int x1,int x2)\n{\n    for(int i = 1;i <= a[x2].card_sz;i ++)\n    {\n        if(a[x2].card[i] == 'D')\n        {\n            a[x2].card[i] = 'U';\t\n            return;\n        }\n    }\n    a[x2].hp --;\n    if(! a[x2].hp)\n        js(x1,x2);\n}\nvoid js(int x1,int x2)\n{\n    for(int i = 1;i <= a[x2].card_sz;i ++)\n    {\n        if(a[x2].card[i] == 'P')//\u8fd8\u80fd\u4e0d\u80fd\u62a2\u6551\u4e00\u4e0b\n        {\n            a[x2].hp ++;\n            a[x2].card[i] = 'U';\n            return;\n        }\n    }\n\ta[a[x2].last].next = a[x2].next;//\u6784\u6210\u65b0\u7684\u73af\n    a[a[x2].next].last = a[x2].last;\n    if(x2 == 1)//\u4e3b\u732a\u6b7b\u4e86\n    {\n        ed = true;\n        return;\n    }\n    if(a[x2].id == 'F') fz --;\n    if(! fz)//\u6ca1\u53cd\u732a\u4e86\n    {\n        ed = true;\n        return;\n    }\n    if(a[x2].id == 'F') mp(x1),mp(x1),mp(x1);//\u5e72\u6b7b\u53cd\u732a\n    if(a[x2].id == 'Z' && a[x1].id == 'M') a[x1].card_sz = 0,a[x1].zgln = false;//\u4e3b\u732a\u6740\u53cd\u732a\u4ed8\u51fa\u4ee3\u4ef7\n    return;\n}\nbool wxkj(int x1,int x2,int x3)\n{\n    int i = x1;\n    while(1)\n    {\n        if(x3 == 1)//\u4e00\u79cd\u662f\u540c\u7c7b\u5e2e\u5fd9\u65e0\u61c8\n        {\n            if((kn[x2] == a[i].id) || (a[i].id == 'M' && kn[x2] == 'Z') || (a[i].id == 'Z' && kn[x2] == 'M'))\n            {\n                for(int j = 1;j <= a[i].card_sz;j ++)\n                {\n                    if(a[i].card[j] == 'J')\n                    {\n                        a[i].card[j] = 'U';\n                        kn[i] = a[i].id;\n                        return !wxkj(i,x1,0);\n                    }\n                }\n            }\n        }\n        else\n        {\n            if(((a[i].id == 'Z' || a[i].id == 'M') && kn[x1] == 'F') || (a[i].id == 'F' && (kn[x1] == 'Z' || kn[x1] == 'M')))//\u4e00\u79cd\u662f\u5bf9\u624b\u53d6\u6d88\u65e0\u61c8\n            {\n                for(int j = 1;j <= a[i].card_sz;j ++)\n                {\n                    if(a[i].card[j] == 'J')\n                    {\n                        a[i].card[j] = 'U';\n                        kn[i] = a[i].id;\n                        return !wxkj(i,x1,0);\n                    }\n                }\n            }\n        }\n        i = a[i].next;\n        if(i == x1) break;\n    }\n    return false;\n}\nvoid nmrq(int x1)\n{\n    for(int i = a[x1].next;i != x1;i = a[i].next)\n    {\n        if(! wxkj(x1,i,1))\n        {\n            int j;\n            for(j = 1;j <= a[i].card_sz;j ++)\n            {\n                if(a[i].card[j] == 'K')//\n                {\n                    a[i].card[j] = 'U';\n                    break;\n                }\n            }\n            if(j > a[i].card_sz)//\u6ca1\u6709\u6740\u5c31\u6263\u8840\n            {\n                a[i].hp --;\n                if(! a[i].hp) js(x1,i);\n                if(i == 1 && kn[x1] == 'U') \n                    kn[x1] = 'L';\n                if(ed) return;\n            }\n        }\n    }\n}\nvoid wjqf(int x1)\n{\n    for(int i = a[x1].next;i != x1;i = a[i].next)\n    {\n        if(! wxkj(x1,i,1))\n        {\n            int j;\n            for(j = 1;j <= a[i].card_sz;j ++)\n            {\n                if(a[i].card[j] == 'D')\n                {\n                    a[i].card[j] = 'U';\n                    break;\n                }\n            }\n            if(j > a[i].card_sz)\n            {\n                a[i].hp --;\n                if(! a[i].hp) js(x1,i);\n                if(i == 1 && kn[x1] == 'U') \n                    kn[x1] = 'L';\n                if(ed) return;\n            }\n        }\n    }\n}\nvoid hh()\n{\n    ed = true;\n    if(fz) ed = false;//\u5982\u679c\u521a\u5f00\u59cb\u5c31\u6ca1\u6709\u53cd\u732a\u5c31\u76f4\u63a5\u9000\u51fa\n    if(ed) return;\n    for(int i = 1;i;i = a[i].next)\n    {\n        mp(i);\n        mp(i);\n        bool kill = true;//\u4e00\u4eba\u53ea\u6709\u4e00\u6b21\u673a\u4f1a\n        for(int j = 1;j <= a[i].card_sz;j ++)\n        {\n            if(! a[i].hp) break;//\u5982\u679c\u5df2\u7ecf\u6b7b\u4e86\u5c31\u8df3\u8fc7\n            if(a[i].card[j] == 'U') continue;\n            if(a[i].card[j] == 'P')//\u6843\u80fd\u52a0\u5c31\u52a0\n            {\n                if(a[i].hp != 4)\n                {\n                    a[i].hp ++;\n                    a[i].card[j] = 'U';\n                    continue;\n                }\n            }\n            if(a[i].card[j] == 'K')\n            {\n                if(! kill && ! a[i].zgln) continue;\n                if(a[i].id == 'M' && (kn[a[i].next] != 'L' && kn[a[i].next] != 'F')) continue;//\u5982\u679c\u4e3b\u732a\u4e0b\u9762\u4e0d\u662f\u7c7b\u53cd\u732a\u548c\u53cd\u732a\u5c31\u8df3\u8fc7\uff0c\u4e0b\u9762\u540c\u4e0a\n                if(a[i].id == 'F' && (kn[a[i].next] != 'M' && kn[a[i].next] != 'Z')) continue;\n                if(a[i].id == 'Z' && (kn[a[i].next] != 'F')) continue;\n                a[i].card[j] = 'U';\n                kil(i,a[i].next);\n                kn[i] = a[i].id;//\u6807\u660e\u8eab\u4efd\uff0c\u56e0\u4e3a\u780d\u4eba\u5c31\u4ee3\u8868\u4e86\u81ea\u5df1\u7684\u8eab\u4efd\u4e86\n                kill = false;//\u6807\u8bb0\u5df2\u7ecf\u6740\u8fc7\u4e86\n                if(ed) return;\n                continue;\n            }\n            if(a[i].card[j] == 'F')\n            {\n                if(a[i].id == 'F')\n                {\n                    a[i].card[j] = 'U';\n                    jd(i,1);//\u5982\u679c\u53cd\u732a\u5c31\u76f4\u63a5\u6253\u4e3b\u732a\n                    kn[i] = a[i].id;//\u6807\u660e\u8eab\u4efd\n                    if(ed) return;\n                    j = 0;\n                    continue;\n                }\n                for(int k = a[i].next;k != i;k = a[k].next)\n                {\n                    if((a[i].id == 'M' && (kn[k] == 'L' || kn[k] == 'F')) || (a[i].id == 'Z' && kn[k] == 'F'))//\u5982\u679c\u4e3b\u732a\u6253\u53cd\u732a\u548c\u7c7b\u53cd\u732a\uff0c\u5fe0\u732a\u6253\u53cd\u732a\n                    {\n                        a[i].card[j] = 'U';\n                        jd(i,k);\n                        kn[i] = a[i].id;\n                        if(ed) return;\n                        j = 0;\n                        break;\n                    }\n                }\n                continue;\n            }\n            if(a[i].card[j] == 'N')\n            {\n                a[i].card[j] = 'U';\n                nmrq(i);\n                if(ed) return;\n                j = 0;//\u4ece\u5934\u5f00\u59cb\u9632\u6b62\u4e3b\u732a\u6253\u6b7b\u5fe0\u732a\u5f03\u724c\u4e4b\u7c7b\u7684\n                continue;\n            }\n            if(a[i].card[j] == 'W')//\u540c\u4e0a\n            {\n                a[i].card[j] = 'U';\n                wjqf(i);\n                if(ed) return;\n                j = 0;\n                continue;\n            }\n            if(a[i].card[j] == 'Z')//\u88c5\u5907\u8bf8\u845b\n            {\n                a[i].card[j] = 'U';\n                a[i].zgln = 1;\n                j = 0;\n                continue;\n            }\n        }\n        /*for(int i_1 = 1;i_1 <= n;i_1 ++)\n            cout << a[i_1].hp << \" \";\n        cout << endl;*/\n    }\n}\nint main()\n{\t\n    cin >> n >> m;\n    for(int i = 1;i <= n;i ++)//\u5efa\u6210\u4e00\u4e2a\u5706\n    {\n        a[i].next = i + 1;\n        a[i].last = i - 1;\n    }\n    a[n].next = 1;\n    a[1].last = n;\n    for(int i = 2;i <= n;i ++)\n        kn[i] = 'U';\n    kn[1] = 'M';\n    for(int i = 1;i <= n;i ++)//\u8f93\u5165\uff0c\u6807\u8bb0\u8eab\u4efd\uff0c\u62ff\u521d\u59cb\u724c\n    {\n        string s;\n        cin >> s;\n        for(int j = 1;j <= 2001;j ++)\n            a[i].card[j] = 'U';\n        a[i].zgln = false; \n        a[i].id = s[0];\n        a[i].hp = 4;\n        a[i].card_sz = 4;\n        if(a[i].id == 'F')\n            fz ++;\n        for(int j = 1;j <= 4;j ++)\n        {\n            cin >> s;\n            a[i].card[j] = s[0];\n        }\n    }\n    for(int i = 1;i <= m;i ++)//\u585e\u724c\u5e93\n    {\n        string s;\n        cin >> s;\n        card_a[m - i + 1] = s[0];\n    }\n    hh();\n    if(a[1].hp <= 0) cout << \"FP\" << endl;\n    else cout << \"MP\" << endl;\n    for(int i = 1;i <= n;i ++)\n    {\n        if(a[i].hp <= 0) cout << \"DEAD\" << endl;\n        else\n        {\n            for(int j = 1;j <= a[i].card_sz;j ++)\n            {\n                if(a[i].card[j] != 'U')\n                    cout << a[i].card[j] << \" \";\n            }\n            cout << endl;\n        }\n    }\n    return 0;\n}\n```\n\n\u7b2c\u4e8c\u9053\u9ed1\u9898\n",
        "postTime": 1563590207,
        "uid": 54135,
        "name": "king_more",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u9898\u76ee\u7684\u4e00\u4e2a\u5c0fBUG\uff1a\u724c\u5806\u53ef\u80fd\u4e3a\u7a7a\uff0c\u8fd9\u65f6\u4e0d\u65ad\u590d\u5236\u6700\u540e\u4e00\u5f20\u724c\u5373\u53ef\uff0c\u5426\u5219\u4f1a\u4e94\u5f69\u7f24\u7eb7\uff08\u5176\u5b9e\u53ea\u67094\u79cd\u989c\u8272\uff09\n\n\u8fd9\u9898\u662f\u8d85\u7ea7\u201c\u7b80\u5355\u201d\u7684\u6a21\u62df\u9898\uff0c\u5751\u70b9\u5f88\u201c\u5c11\u201d\n\n\u594b\u6218\u4e867\u4e2a\u5c0f\u65f6\uff0c\u7ec8\u4e8e\u5199\u51fa\u6765\u4e86\uff0c554\u884c\uff08\u6211\u5199\u8fc7\u7684\u6700\u957f\u4ee3\u7801\uff09\n\n\u8fd9\u9898\u662f\u76ee\u524d\u4e3a\u6b62\u6211\u7f16\u7a0b\u7528\u65f6\u7b2c\u4e8c\u7684\u9898\uff08\u7b2c\u4e00\u662f\u901b\u516c\u56ed 9h\uff09\n\n~~\u6309\u9898\u610f\u6a21\u62df\u5373\u53ef~~\n\n\u8fd9\u79cd\u5927\u6a21\u62df(\u57fa\u672c)\u4e0d\u7528\u8003\u8651\u6027\u80fd\uff0c\u5e94\u8be5\u5c3d\u91cf\u964d\u4f4e\u7f16\u7a0b\u590d\u6742\u5ea6\u548c\u8c03\u8bd5\u96be\u5ea6\n\n\u8003\u8651\u6e05\u695a\u540e\u518d\u7f16\u7a0b\n\n------------\n\n\u6211\u5199\u7684\u5f88\u9762\u5411\u5bf9\u8c61\uff0c~~\u7136\u540e\u6709\u4e00\u4e2a\u7c7b\u5305\u542b8\u4e2a\u7c7b\u51fd\u6570~~\uff0c\u53e6\u5916\u7528\u4e86\u5927\u91cf\u6307\u9488\n\n\u6839\u636e\u9898\u610f\uff0c\u5b9e\u9645\u53ef\u4ee5\u4e0d\u8003\u8651\u732e\u6bb7\u52e4\u548c\u8868\u654c\u610f\u672c\u8eab\n\n\u76f4\u63a5\u8003\u8651\u8df3\u5fe0\u548c\u8df3\u53cd\u5373\u53ef\n\n\u53ef\u4ee5\u8ba4\u4e3a\u4e3b\u516c\u4e5f\u662f\u8bd5\u56fe\u8df3\u5fe0\uff0c\u7edd\u4e0d\u8df3\u53cd\n\n\u5efa\u7acb\u73a9\u5bb6\u548c\u624b\u724c\u7c7b\n\n\u9700\u8981\u8003\u8651\u5982\u4f55\u8bb0\u5f55\u8db3\u591f\u7684\u4fe1\u606f\uff0c\u5e76\u8bbe\u8ba1\u4e00\u4e9b\u7c7b\u51fd\u6570\n\n\u8fd9\u662f\u6211\u8003\u8651\u7684\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\n\n\u73a9\u5bb6\uff1a\u53d8\u91cf\u6709\uff1a\u624b\u724c\uff0c\u4f53\u529b\u503c\uff0c\u662f\u5426\u6709\u5f29\uff0c\u8eab\u4efd\uff0c\u66b4\u9732\u7684\u8eab\u4efd\uff1b \u64cd\u4f5c\u6709\uff1a\u6478\u724c\uff0c\u51fa\u724c\uff0c\u6e05\u7a7a\u724c\u5806\uff0c\u5bf9\u5176\u4ed6\u73a9\u5bb6\u51fa\u7684\u724c\u4f5c\u51fa\u53cd\u5e94\uff0c\u53d7\u5230\u4f24\u5bb3\uff0c\u6b7b\u4ea1\n\n\u8bb0\u5f55\u624b\u724c\u65f6\u6211\u7ed9\u6bcf\u79cd\u724c\u5f00\u4e86\u4e00\u4e2a\u94fe\u8868\n\n\u724c\uff1a\u7c7b\u578b\uff0c\u4f7f\u7528\n\n\u7136\u540e\u6211\u53c8\u5199\u4e86\u4e00\u4e2a\u6e38\u620f\u7c7b\n\n\u53d8\u91cf\u6709\uff1a\u73a9\u5bb6\u5217\u8868\uff0c\u73a9\u5bb6\u6570\uff0c\u5269\u4f59\u53cd\u8d3c\u6570\n\n\u64cd\u4f5c\u6709\uff1a\u4f7f\u7528\u5357\u86ee\u5165\u4fb5\\\u4e07\u7bad\u9f50\u53d1\uff0c\u8bf7\u6c42\u51fa\u65e0\u61c8\u53ef\u51fb\n\n\u5199\u7a7a\u51fd\u6570\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u6392\u5217\u987a\u5e8f\uff0c\u7f3a\u5565\u5c31\u5b9e\u73b0\u5565\uff0c\u7528\u4e0d\u5230\u7684\u53ef\u4ee5\u53ea\u5199\u7a7a\u51fd\u6570\uff0c\u4e0d\u5b9e\u73b0\uff0c\u4e5f\u4e0d\u4f1aCE\n\n\u5199\u597d\u540e\u9010\u4e2a\u5b9e\u73b0\u51fd\u6570\u5373\u53ef\uff0c\u53d1\u73b0\u9700\u8981\u5176\u5b83\u51fd\u6570\u5c31\u76f4\u63a5\u52a0\u4e0a\u4e00\u4e2a\uff0c\u7136\u540e\u5b9e\u73b0\n\n\u663e\u793a\u724c\u7684\u8fc7\u7a0b\u6211\u76f4\u63a5\u628a\u724c\u6254\u8fdb\u4e00\u4e2a\u6570\u7ec4\uff0c\u7136\u540esort\u540e\u8f93\u51fa\n\n\n------------\n\n\u5c0f\u5fc3\u7ec6\u8282\n\n\u6740\uff1a\u53ea\u80fd\u5f53\u4e0b\u4e00\u4e2a\u73a9\u5bb6\u66b4\u9732\u8eab\u4efd\u540e\u624d\u80fd\u7528\uff0c\u522b\u5fd8\u4e86\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4e00\u56de\u5408\u4f7f\u7528\u591a\u6b21\uff0c\u53ea\u80fd\u653b\u51fb\u4e0b\u4e00\u4e2a\u73a9\u5bb6\n\n\u51b3\u6597\uff1a\u6ce8\u610f\u53cd\u8d3c\u53ea\u4f1a\u5bf9\u4e3b\u516c\u4f7f\u7528\u51b3\u6597\uff0c\u5fe0\u81e3\u4e0d\u4f1a\u5728\u4e0e\u4e3b\u516c\u51b3\u6597\u65f6\u51fa\u6740\uff0c\u4e00\u65e6\u51fa\u4e86\u6740\uff0c\u5c31\u4e0d\u4f1a\u88ab\u65e0\u61c8\u6389\n\n\u5982\u679c\u628a\u81ea\u5df1\u5e72\u6389\uff0c\u5c31\u4e0d\u80fd\u7ee7\u7eed\u51fa\u724c\n\n\u5357\u86ee&\u4e07\u7bad\uff1a\u4f1a\u4ea7\u751f\u7c7b\u53cd\u732a\uff0c\u4f46\u5e76\u672a\u66b4\u9732\u8eab\u4efd\n\n\u8fd9\u4e24\u4e2a\u5f88\u76f8\u4f3c\uff0c\u5e94\u8be5\u6ce8\u610f\u533a\u5206\uff0c\u6539\u7684\u65f6\u5019\u901a\u5e38\u8981\u4e00\u8d77\u6539\n\n\u65e0\u61c8\u53ef\u51fb\uff1a\u4ece\u4f7f\u7528\u9526\u56ca\u7684\u73a9\u5bb6\u5f00\u59cb\u51b3\u5b9a\u662f\u5426\u51fa\uff0c\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u540e\u4ece\u51fa\u65e0\u61c8\u53ef\u51fb\u7684\u4eba\u5f00\u59cb\u51b3\u5b9a\u662f\u5426\u51fa\uff0c\u800c\u4e0d\u662f\u51fa\u7b2c\u4e00\u4e2a\u9526\u56ca\u7684\u4eba\u5148\u51b3\u5b9a\n\n\u5982\u679c\u6309\u6211\u8fd9\u4e2a\u601d\u8def\uff0c\u6839\u636e\u56de\u5e94\u6267\u884c\u64cd\u4f5c\u65f6\u4e0d\u8981\u8c03\u7528\u4e24\u6b21\u56de\u5e94\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u6b7b\u5f97\u5f88\u60e8\n\n\u5c0f\u5fc3\u4e0d\u8981\u91cd\u590d\u6267\u884c\u64cd\u4f5c\n\n\u4e0d\u8981\u628a\u56de\u5e94\u52a8\u4f5c\u5f04\u6df7\uff0c\u6700\u597d\u5b9a\u4e49\u5e38\u91cf\uff0c\u7136\u540e\u5224\u76f8\u7b49\n\n\u53ef\u4ee5\u628a\u5e38\u91cf\u5f04\u5f97\u5404\u4e0d\u76f8\u540c\uff0c\u8fd9\u6837\u5982\u679c\u6df7\u7528\u4f1a\u5bb9\u6613\u53d1\u73b0\n\n\u6e05\u7a7a\u4e3b\u516c\u7684\u724c\u65f6\u8981\u628a\u5f29\u5378\u6389\n\n\u5b9e\u5728\u4e0d\u884c\u627e\u7bc7\u9898\u89e3\u201c\u5bf9\u62cd\u201d\u67e5\u9519\n\n------------\n\n\u4e0d\u5efa\u8bae\u5199\u4e00\u5806\u6570\u7ec4\u8bb0\u5f55\uff0c\u8fd9\u6837\u5f88\u96be\u8c03\u8bd5\n\n\u9762\u5411\u5bf9\u8c61\u548c\u6a21\u5757\u5316\u7684\u7a0b\u5e8f\u5f88\u5bb9\u6613\u627e\u51fa\u9519\u8bef\u7684\u5730\u65b9\n\n\u9012\u5f52\u4e5f\u662f\u4e2a\u597d\u4e1c\u897f\n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff0c\u6709\u6ce8\u91ca\uff0c\u5e94\u8be5\u80fd\u770b\u61c2\n\nDEBUG\u53d8\u91cf\u4e3atrue\u65f6\u4f1a\u8f93\u51fa\u51fa\u5b8c\u6bcf\u5f20\u724c\u540e\u7684\u5c40\u9762\n\n~~\u6bd4\u8d5b\u65f6\u5343\u4e07\u522b\u5fd8\u4e86\u53bb\u6389\u8c03\u8bd5\u4fe1\u606f~~\n\n[\u4ee3\u7801](https://www.luogu.org/paste/qsxjc217)\uff08\u9632\u6b62~~\u5f15\u4eba\u6ce8\u76ee~~\u5360\u7248\u9762\uff09",
        "postTime": 1541496159,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u7591\u4f3c\u53f2\u4e0a ~~\u6700\u6613\u7406\u89e3~~\u4ee3\u7801\u6700\u957f \u732a\u56fd\u6740\n\n\u542c\u8bf4\u67d0\u4f4d\u849fda\u84bblao\u56e0\u4e3a\u4e0d\u4f1a\u9762\u5411\u8fc7\u7a0b\u5199\u4e86\u9762\u5411\u5bf9\u8c61\u3002~~\u6211oi\u767d\u5b66\u3002~~\n\n\u9664\u4e86\u4e0a\u9762\u7684\u5927\u4f6c\u4eec\u63d0\u5230\u7684\u5751\u70b9\uff0c\u52a0\u4e0a\u51e0\u4e2a\u6211\u81ea\u5df1\u5199\u7684\u65f6\u5019\u53d1\u73b0\u7684\u6ce8\u610f\u70b9\uff1a\n1. **\u65e0\u8bba\u9526\u56ca\u724c\u662f\u4e0d\u662f\u751f\u6548\uff0c\u51fa\u4e86\u5c31\u4f1a\u89e6\u53d1\u732e\u6bb7\u52e4/\u8868\u654c\u610f\u3002**\n2. **\t\u8df3\u8eab\u4efd\u5f88\u597d\u5904\u7406\uff0c\u53ea\u8981\u89e6\u53d1\u4e86\u732e\u6bb7\u52e4/\u8868\u654c\u610f\uff0c\u628a\u81ea\u5df1\u7684\u8eab\u4efd\u8868\u660e\u5c31\u597d\u4e86\u3002**\n3. \t\u732a\u90fd\u5f88\u803f\u76f4\uff0c\u80fd\u8868\u660e\u8eab\u4efd\u5c31\u8868\u660e\u8eab\u4efd\u3002\n4. \t\u65e0\u61c8\u53ef\u51fb\u662f\u5bf9\u88ab\u653b\u51fb\u7684\u732a\u732e\u6bb7\u52e4/\u8868\u654c\u610f\u3002\n\n\u5199\u5b8c30\u5206\u7684\u65f6\u5019\u8fc7\u4e86\u4e00\u904d\u4ee3\u7801\u903b\u8f91\uff0c\u603b\u4f53\u5e94\u8be5\u8fd8\u662f\u633a\u6e05\u6670\u7684\uff0c\u4ee3\u7801\u91cc\u4e5f\u6709\u4e9b\u4e2d\u82f1\u6df7\u6742\u7684\u6ce8\u91ca\u3002~~\u6240\u4ee5\u4e0d\u60f3\u989d\u5916\u52a0\u6ce8\u91ca\u4e86\u3002~~\n\n\u4ee3\u7801\u6548\u7387\u4e0d\u9ad8\uff0c\u4e5f\u6709\u51e0\u4e2a\u51d1\u6d3b\u7684\u5730\u65b9\uff0c\u6bd4\u5982class_world::piglist\u5e94\u8be5\u662f\u4e00\u4e2a\u73af\u72b6\u94fe\u8868\uff0c\u518d\u7528\u4e00\u4e2a\u6570\u7ec4\u505a\u7d22\u5f15\u8fdb\u884co\uff081\uff09\u7684\u67e5\u627e\u548c\u5220\u9664\uff08world\u7c7b\u5916\u90e8\u6301\u6709list::iterator\u603b\u89c9\u5f97\u4e0d\u592a\u597d\uff09\n\nclass_basic_pig::cardlist\u4e5f\u5e94\u8be5\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u7136\u540e\u6211\u5c31\u5168\u90fdvector\u89e3\u51b3\u4e86\u3002\u3002\u3002\u3002\n\n\u5e94\u8be5\u6ca1\u6709\u4ec0\u4e48\u9690\u853d\u7684\u9519\u8bef\u3002\u53ea\u662f\u867d\u7136\u6211\u5f88\u5c3d\u529b\u4e86\uff0c\u8026\u5408\u8c8c\u4f3c\u8fd8\u662f\u86ee\u9ad8\u7684\u3002\u3002\u3002\u3002\u3002\n\n\u5f00\u53d1\u89c4\u8303\u672c\u6765\u5c31\u6ca1\u6709\u6b63\u7ecf\u5b66\u4e60\uff0c\u73b0\u5728\u4e5f\u5fd8\u5f97\u5f88\u5e72\u51c0\u4e86\u3002\n\n\u4f46\u662f\u7a0b\u5e8f\u4e2d\u5404\u79cd\u547d\u540d\u8fd8\u662f\u5c3d\u529b\u4fdd\u8bc1\u53ef\u8bfb\u6027\uff0c\u8bd5\u56fe\u53bb\u9075\u5b88\u4e00\u4e0b\u547d\u540d\u89c4\u8303\u7684\uff08\u867d\u7136\u6ca1\u6210\u529f\u5427\uff09\u3002~~\u4e0d\u8fc7\u540e\u6765\u6539bug\u5bfc\u81f4\u67d0\u4e9b\u547d\u540d\u548c\u5176\u5b83\u547d\u540d\u4e0d\u592a\u4e00\u81f4\u3002 \u5927\u5bb6\u8c05\u89e3\u4e00\u4e0b\u3002~~\n\n\u867d\u7136\u4ee3\u78011000\u6765\u884c\uff0c\u4e0d\u8fc7\u53ef\u8bfb\u6027\u5e94\u8be5\u8fd8\u884c\u5427...~~\uff08\u5fc3\u865a\uff09~~\n\n**\u4e0d\u60f3\u770b\u4ee3\u7801\u5efa\u8bae\u76f4\u63a5\u770b\u7ed3\u5c3e\uff0c\u63d0\u4f9bvs2015 project\u4e0b\u8f7d\uff0c\u89c2\u8d4f\u6548\u679c\u66f4\u4f73\u3002**\n### \u4e0b\u9762\u5927\u91cf\u7c7b\u7ee7\u627f\uff0c\u591a\u6001\u8b66\u544a\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include <vector>\n#include <queue>\n#include <list>\n#include <iostream>\n#include <cstdlib>\nusing namespace std;\nenum enum_status\n{\n    DEAD = 0, UNKNOW = 1, FRIEND = 2, ENEMY = 3, ETBE = 4\n};\nenum enum_card\n{\n    BLOOD = 1, KILL = 2, MISS = 3, FIGHT = 4, N_ATK = 5, W_ATK = 6, J_DF = 7, ARM = 8\n};//\u65e0\u61c8\u53ef\u51fb\u662fJ_DF\uff0c\u8fd9\u4e2a\u9b3c\u4e1c\u897f\u6211\u662f\u771f\u4e0d\u4f1a\u8d77\u540d\u4e86\nenum enum_kind\n{\n    MAIN_PIG = 1, FRIEND_PIG = 2, ENEMY_PIG = 3\n};\n#define reg register\n#define null NULL\n#define MAXBLOOD 4\nstruct Event;\nclass class_basic_pig\n{\npublic:\n    enum_kind Kind;\n    enum_status Status;\n    bool Armed;\n    int num;//\u6570\u7ec4\u4e0b\u6807\n    int Blood;\n    vector<enum_card> CardList;\n\n    class_basic_pig(const int _num, enum_kind _kind) :num(_num), Kind(_kind),Armed(false),Blood(MAXBLOOD),Status(UNKNOW){};\n\n    void N_Attack();\n    void W_Attack();\n\n    virtual void N_AttackBy(class_basic_pig*)=0;\n    virtual void W_AttackBy(class_basic_pig*)=0;\n    virtual void C_AttackBy(class_basic_pig*)=0;\n\n    void StartFightWith(class_basic_pig*);//start to fight with ptr\n    virtual const bool FightWith(class_basic_pig*)=0;//fight with ptr\n    bool DropCard(enum_card);//return true if pig has this card to drop,or false if hasnt\n\n    void Hurt();//pig is hurt,try to heal\uff0cupdata pigs status\n    //virtual void Updata();//updata pigs status\n\n    //virtual void SpecialDefence();//if use special defence card\n\n    virtual bool Usable(const enum_card&,bool&);//if the card usable//\u5b50\u7c7b\u91cd\u8f7d\u5e76\u4e14\u8c03\u7528basic\u7c7b\u7684\u51fd\u6570\n    virtual const bool IsEnemy(const enum_status&)=0;//\u5224\u65ad\u662f\u5426\u4e3a\u654c\u4eba\n\n    virtual void CheckAfterAttack(class_basic_pig* ptr) = 0;//\u9020\u6210\u4f24\u5bb3\u540e\u7ed3\u7b97\n\n    void Turn();\n\n    virtual void UseCard(enum_card)=0;\n\n    virtual bool UseSpecialDefence(Event)=0;//true: used,false: didnt use\n\n    virtual void UpdataIdentity() = 0;\n};\n\n\nstruct Event\n{\n    class_basic_pig* source;//\u9526\u56ca\u724c\u53d1\u51fa\u8005\n    class_basic_pig* target;//\u9526\u56ca\u724c\u63a5\u53d7\u8005\n    bool Good;//true:\u732e\u6bb7\u52e4\uff0cfalse:\u8868\u654c\u610f\n    Event(class_basic_pig* s = null, class_basic_pig* t = null, bool b = false) :source(s), target(t), Good(b) {};\n};\nclass class_world\n{\npublic:\n    vector<class_basic_pig*> PigList;\n    queue<enum_card> CardPool;\n    class_basic_pig* GetEnemy(int num, class_basic_pig* ptr);\n    class_basic_pig* GetNext(int num);\n    class_basic_pig* GetLast(int num);\n    enum_card GetCard()\n    {\n        enum_card t = CardPool.front();\n        if (CardPool.size() > 1)\n        {\n            CardPool.pop();\n        }\n        return t;\n    }\n    void EndGame();\n    void GameBegin();\n    bool CheckSpecialDefnece(Event);//if oridary event can happen,return true,else return false\n}World;\n\nclass class_main_pig:public class_basic_pig\n{\npublic:\n    class_main_pig(const int _num):class_basic_pig(_num, MAIN_PIG){};\n    virtual void N_AttackBy(class_basic_pig*);\n    virtual void W_AttackBy(class_basic_pig*);\n    virtual void C_AttackBy(class_basic_pig*);\n\n    virtual bool Usable(const enum_card&,bool&);\n    virtual const bool IsEnemy(const enum_status&);\n\n    virtual const bool FightWith(class_basic_pig*);\n\n    virtual void CheckAfterAttack(class_basic_pig*);\n\n    virtual void UseCard(enum_card);\n\n    virtual bool UseSpecialDefence(Event);\n\n    virtual void UpdataIdentity() {};\n};\n\nclass class_friend_pig :public class_basic_pig\n{\npublic:\n    class_friend_pig(const int _num) :class_basic_pig(_num, FRIEND_PIG) {};\n    virtual void N_AttackBy(class_basic_pig*);\n    virtual void W_AttackBy(class_basic_pig*);\n    virtual void C_AttackBy(class_basic_pig*);\n\n    virtual bool Usable(const enum_card&, bool&);\n    virtual const bool IsEnemy(const enum_status&);\n\n    virtual const bool FightWith(class_basic_pig*);\n\n    virtual void CheckAfterAttack(class_basic_pig*);\n\n    virtual void UseCard(enum_card);\n\n    virtual bool UseSpecialDefence(Event);\n\n    virtual void UpdataIdentity();\n};\n\n\nclass class_enemy_pig :public class_basic_pig\n{\npublic:\n    class_enemy_pig(const int _num) :class_basic_pig(_num, ENEMY_PIG) {};\n    virtual void N_AttackBy(class_basic_pig*);\n    virtual void W_AttackBy(class_basic_pig*);\n    virtual void C_AttackBy(class_basic_pig*);\n\n    virtual bool Usable(const enum_card&, bool&);\n    virtual const bool IsEnemy(const enum_status&);\n\n    virtual const bool FightWith(class_basic_pig*);\n\n    virtual void CheckAfterAttack(class_basic_pig*);\n\n    virtual void UseCard(enum_card);\n\n    virtual bool UseSpecialDefence(Event);\n\n    virtual void UpdataIdentity();\n};\n\nchar un_translate(enum_card card)\n{\n    char ch;\n    switch (card)\n    {\n    case BLOOD:\n        ch = 'P';\n        break;\n\n    case KILL:\n        ch = 'K';\n        break;\n\n    case MISS:\n        ch = 'D';\n        break;\n\n    case FIGHT:\n        ch = 'F';\n        break;\n\n    case N_ATK:\n        ch = 'N';\n        break;\n\n    case W_ATK:\n        ch = 'W';\n        break;\n\n    case J_DF:\n        ch = 'J';\n        break;\n\n    case ARM:\n        ch = 'Z';\n        break;\n    }\n    return ch;\n}\n\n\nvoid class_basic_pig::N_Attack()\n{\n    class_basic_pig* ptr = null;\n    int pos = num;\n    while ((ptr = World.GetNext(pos)) && ptr->num!=num )\n    {\n        pos = ptr->num;\n        ptr->N_AttackBy(this);\n        CheckAfterAttack(ptr);\n    }\n}\nvoid class_basic_pig::W_Attack()\n{\n    class_basic_pig* ptr = null;\n    int pos = num;\n    while ((ptr = World.GetNext(pos)) && ptr->num != num)\n    {\n        pos = ptr->num;\n        ptr->W_AttackBy(this);\n        CheckAfterAttack(ptr);\n    }\n}\n\nbool class_basic_pig::DropCard(enum_card c)\n{\n    int s = CardList.size();\n    for (reg int i = 0; i < s; ++i)\n    {\n        if (CardList[i] == c)\n        {\n            CardList.erase(CardList.begin()+i);\n            return true;\n        }\n    }\n    return false;\n}\n\nbool class_basic_pig::Usable(const enum_card& c,bool& tag)\n{\n    if ((c == BLOOD&&Blood < MAXBLOOD) ||\n        c == N_ATK || c == W_ATK || c == ARM)\n        return true;\n    class_basic_pig* ptr = World.GetNext(num);//\u6740\n    if ((Armed || (!tag)) && c == KILL && IsEnemy(ptr->Status))\n    {\n        tag = true;\n        return true;\n    }\n    return false;\n}\n\nvoid class_basic_pig::StartFightWith(class_basic_pig* ptr)\n{\n    UpdataIdentity();\n    if (!World.CheckSpecialDefnece(Event(this, ptr, false)))\n    {\n        return;\n    }\n    int i = 1;\n    while (i % 2 ?\n        ptr->FightWith(this) :\n        FightWith(ptr))\n    {\n        ++i;//do nothing\n    }\n    if (i % 2)//ptr hurt\n    {\n        CheckAfterAttack(ptr);\n    }\n    else\n    {\n        ptr->CheckAfterAttack(this);\n    }\n}\nvoid class_basic_pig::Hurt()\n{\n    --Blood;\n    if (Blood < 1)\n    {\n        while (Blood < 1 && DropCard(BLOOD))\n            ++Blood;//heal\n        if (Blood < 1)\n        {\n            Status = DEAD;\n            if (Kind == MAIN_PIG)\n            {\n                World.EndGame();\n            }\n            bool tag = false;\n            for (reg int j = 0; j < World.PigList.size(); ++j)\n            {\n                if (World.PigList[j]->Kind == ENEMY_PIG&&World.PigList[j]->Status != DEAD)\n                {\n                    tag = true;\n                }\n            }\n            if (!tag)\n            {\n                World.EndGame();\n            }\n        }\n    }\n}\n\n\nvoid class_basic_pig::Turn()\n{\n    CardList.push_back(World.GetCard());\n    CardList.push_back(World.GetCard());\n    bool tag = true;\n    bool kill_tag = false;\n    while (tag&&Status!=DEAD)\n    {\n        tag = false;\n        for (reg int i = 0; i < CardList.size(); ++i)\n        {\n            if (Usable(CardList[i], kill_tag))\n            {\n                tag = true;\n                UseCard(CardList[i]);\n                break;\n            }\n        }\n    }\n}\n\nclass_basic_pig* class_world::GetEnemy(int num, class_basic_pig* ptr)//\t(now pos,check func)\n{\n    int tot = PigList.size();\n    for (reg int i = 0; i < tot; ++i)\n    {\n        if (ptr->IsEnemy(PigList[(++num) % tot]->Status))//pig is able to attack because of the status\n        {\n            return PigList[num%tot];\n        }\n    }\n    return null;\n}\n\nclass_basic_pig* class_world::GetNext(int num)//now pos\n{\n    int tot = PigList.size();\n    for (reg int i = 0; i < tot; ++i)\n    {\n        if (PigList[(++num) % tot]->Status != DEAD)//pig is alive\n        {\n            return PigList[num % tot];\n        }\n    }\n    return null;\n}\n\nclass_basic_pig* class_world::GetLast(int num)//now pos\n{\n    int tot = PigList.size();\n    for (reg int i = 0; i < tot; ++i)\n    {\n        if (PigList[(tot + (--num)) % tot]->Status != DEAD)//pig is alive\n        {\n            return PigList[(tot + (num)) % tot];\n        }\n    }\n    return null;\n}\n\nvoid class_world::EndGame()\n{\n    if (PigList[0]->Status == DEAD)\n        cout << \"FP\" << endl;\n    else\n        cout << \"MP\" << endl;\n    for (reg int i = 0; i < PigList.size(); ++i)\n    {\n        if (PigList[i]->Status == DEAD)\n        {\n            cout << \"DEAD\" << endl;\n        }\n        else\n        {\n            for (reg int j = 0; j < PigList[i]->CardList.size(); ++j)\n            {\n                cout << un_translate(PigList[i]->CardList[j]) << ' ';\n            }\n            cout << endl;\n        }\n    }\n    exit(-1);//i think this might stop you from AC on luogu if  you just copy the code.\n}\n\nvoid class_world::GameBegin()\n{\n    int tot=PigList.size();\n    for (reg int i = 0;; ++i)\n    {\n        i = i%tot;\n        if(PigList[i]->Status!=DEAD) \n            PigList[i]->Turn();\n    }\n}\nbool class_world::CheckSpecialDefnece(Event e)//if oridary event can happen,return true,else return false\n{\n    class_basic_pig* ptr = e.source;\n    if (!ptr)\n        return true;\n    int num = ptr->num;\n    do\n    {\n        if (ptr->UseSpecialDefence(e))\n        {\n            ptr->UpdataIdentity();\n            if (CheckSpecialDefnece(Event(ptr, e.target, !e.Good)))//happend\n            {\n                return false;\n            }\n            return true;\n        }\n    } while ((ptr = GetNext(ptr->num))->num != num);\n    return true;\n}\n\nvoid class_main_pig::N_AttackBy(class_basic_pig* ptr)\n{\n    if (!World.CheckSpecialDefnece(Event(ptr, this, false)))\n    {\n        return;\n    }\n    if (DropCard(KILL))\n    {\n        return;//\u4e22\u5f03\u6740\n    }\n    else\n    {\n        if (ptr->Status == UNKNOW)\n            ptr->Status = ETBE;\n        Hurt();\n    }\n}\nvoid class_main_pig::W_AttackBy(class_basic_pig* ptr)\n{\n    if (!World.CheckSpecialDefnece(Event(ptr, this, false)))\n    {\n        return;\n    }\n    if (DropCard(MISS))\n    {\n        return;//\u4e22\u5f03\u95ea\n    }\n    else\n    {\n        if (ptr->Status == UNKNOW)\n            ptr->Status = ETBE;\n        Hurt();\n    }\n}\n\nbool class_main_pig::Usable(const enum_card& c,bool& tag)//check if this card usable\n{\n    if (class_basic_pig::Usable(c,tag))\n    {\n        return true;\n    }\n    //ptr = World.GetEnemy(num, ((const bool (class_basic_pig::*)(const enum_status&))this->IsEnemy));\n    if (c == FIGHT)\n    {\n        if (World.GetEnemy(num, this))//have enemy\n            return true;\n    }\n    return false;\n}\n\nconst bool class_main_pig::IsEnemy(const enum_status& s) \n{\n    return s == ENEMY || s == ETBE;\n}\n\nvoid class_main_pig::C_AttackBy(class_basic_pig* ptr)\n{\n    ptr->Status = ENEMY;\n    if (DropCard(MISS))\n    {\n        ;//\u4e22\u5f03\u95ea\n    }\n    else\n    {\n        Hurt();\n    }\n}\n\nconst bool class_main_pig::FightWith(class_basic_pig* ptr)//fight with ptr\n{\n    if (DropCard(KILL))\n    {\n        return true;\n    }\n    else\n    {\n        Hurt();\n        return false;\n    }\n}\n\nvoid class_main_pig::CheckAfterAttack(class_basic_pig* ptr)//\u80dc\u8005\u7ed3\u7b97\n{\n    if(ptr->Status == DEAD)\n    {\n        if (ptr->Kind == FRIEND_PIG)\n        {\n            CardList.clear();\n            Armed = false;\n        }\n        else\n        {\n            CardList.push_back(World.GetCard());\n            CardList.push_back(World.GetCard());\n            CardList.push_back(World.GetCard());\n        }\n    }\n}\n\n\nvoid class_main_pig::UseCard(enum_card c)\n{\n    DropCard(c);\n    class_basic_pig* ptr;\n    switch (c)\n    {\n    case KILL:\n        ptr = World.GetNext(num);\n        ptr->C_AttackBy(this);\n        CheckAfterAttack(ptr);\n        break;\n\n    case BLOOD:\n        ++Blood;\n        break;\n\n    case N_ATK:\n        N_Attack();\n        break;\n\n    case W_ATK:\n        W_Attack();\n        break;\n\n    case ARM:\n        Armed = true;\n        break;\n\n    case FIGHT:\n        ptr=World.GetEnemy(num, this);\n        StartFightWith(ptr);\n        break;\n    }\n}\n\nbool class_main_pig::UseSpecialDefence(Event e)\n{\n    bool tag = false;\n    if (e.target->Status == FRIEND)\n    {\n        if (!e.Good)//event\u8868\u793a\u5bf9\u53cb\u519b\u8868\u654c\u610f\n        {\n            tag= true;//\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u732e\u6bb7\u52e4\n        }\n    }\n    if (e.target->Status == ENEMY)\n    {\n        if (e.Good)//\u5bf9\u654c\u519b\u732e\u6bb7\u52e4\n        {\n            tag= true;//\u8868\u654c\u610f\n        }\n    }\n    if (tag)\n    {\n        tag = DropCard(J_DF);\n    }\n    return tag;\n}\n//////////////////////////////////////////////////////////////////////\n\nvoid class_friend_pig::N_AttackBy(class_basic_pig* ptr)\n{\n    if (!World.CheckSpecialDefnece(Event(ptr, this, false)))\n    {\n        return;\n    }\n    if (DropCard(KILL))\n    {\n        return;//\u4e22\u5f03\u6740\n    }\n    else\n    {\n        Hurt();\n    }\n}\nvoid class_friend_pig::W_AttackBy(class_basic_pig* ptr)\n{\n    if (!World.CheckSpecialDefnece(Event(ptr, this, false)))\n    {\n        return;\n    }\n    if (DropCard(MISS))\n    {\n        return;//\u4e22\u5f03\u95ea\n    }\n    else\n    {\n        Hurt();\n    }\n}\n\n\nbool class_friend_pig::Usable(const enum_card& c, bool& tag)//check if this card usable\n{\n    if (class_basic_pig::Usable(c, tag))\n    {\n        return true;\n    }\n    //ptr = World.GetEnemy(num, ((const bool (class_basic_pig::*)(const enum_status&))this->IsEnemy));\n    if (c == FIGHT)\n    {\n        if (World.GetEnemy(num,this))//have enemy\n            return true;\n    }\n    return false;\n}\n\nconst bool class_friend_pig::IsEnemy(const enum_status& s)\n{\n    return s == ENEMY;\n}\n\nvoid class_friend_pig::C_AttackBy(class_basic_pig* ptr)\n{\n    if (ptr->Kind == MAIN_PIG)//\n        ;\n    else\n        ptr->Status = ENEMY;\n    if (DropCard(MISS))\n    {\n        ;//\u4e22\u5f03\u95ea\n    }\n    else\n    {\n        Hurt();\n    }\n}\n\nconst bool class_friend_pig::FightWith(class_basic_pig* ptr)//fight with ptr\n{\n    if (ptr->Kind == MAIN_PIG)\n    {\n        Hurt();\n        return false;\n    }\n    if (DropCard(KILL))\n    {\n        return true;\n    }\n    else\n    {\n        Hurt();\n        return false;\n    }\n    return false;\n}\n\nvoid class_friend_pig::CheckAfterAttack(class_basic_pig* ptr)//\u80dc\u8005(\u653b\u51fb\u8005\uff09\u7ed3\u7b97\n{\n    if (ptr->Status == DEAD)\n    {\n        if(ptr->Kind==ENEMY_PIG)\n        {\n            CardList.push_back(World.GetCard());\n            CardList.push_back(World.GetCard());\n            CardList.push_back(World.GetCard());\n        }\n    }\n}\n\nvoid class_friend_pig::UseCard(enum_card c)\n{\n    DropCard(c);\n    class_basic_pig* ptr;\n    switch (c)\n    {\n    case KILL:\n        ptr = World.GetNext(num);\n        ptr->C_AttackBy(this);\n        CheckAfterAttack(ptr);\n        break;\n\n    case BLOOD:\n        ++Blood;\n        break;\n\n    case N_ATK:\n        N_Attack();\n        break;\n\n    case W_ATK:\n        W_Attack();\n        break;\n\n    case ARM:\n        Armed = true;\n        break;\n\n    case FIGHT:\n        ptr = World.GetEnemy(num, this);\n        StartFightWith(ptr);\n        break;\n    }\n}\n\n\nbool class_friend_pig::UseSpecialDefence(Event e)\n{\n    bool tag = false;\n    if (e.target->Status == FRIEND)\n    {\n        if (!e.Good)//event\u8868\u793a\u5bf9\u53cb\u519b\u8868\u654c\u610f\n        {\n            tag= true;//\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u732e\u6bb7\u52e4\n        }\n    }\n    if (e.target->Status == ENEMY)\n    {\n        if (e.Good)//\u5bf9\u654c\u519b\u732e\u6bb7\u52e4\n        {\n            tag= true;//\u8868\u654c\u610f\n        }\n    }\n    if (tag)\n    {\n        tag = DropCard(J_DF);\n    }\n    return tag;\n}\n\n\nvoid class_friend_pig::UpdataIdentity()\n{\n    Status = FRIEND;\n}\n/////////////////////////////////////////////////////////////////////\nvoid class_enemy_pig::N_AttackBy(class_basic_pig* ptr)\n{\n    if (!World.CheckSpecialDefnece(Event(ptr, this, false)))\n    {\n        return;\n    }\n    if (DropCard(KILL))\n    {\n        return;//\u4e22\u5f03\u6740\n    }\n    else\n    {\n        Hurt();\n    }\n}\nvoid class_enemy_pig::W_AttackBy(class_basic_pig* ptr)\n{\n    if (!World.CheckSpecialDefnece(Event(ptr, this, false)))\n    {\n        return;\n    }\n    if (DropCard(MISS))\n    {\n        return;//\u4e22\u5f03\u95ea\n    }\n    else\n    {\n        Hurt();\n    }\n}\n\nbool class_enemy_pig::Usable(const enum_card& c, bool& tag)//check if this card usable\n{\n    if (class_basic_pig::Usable(c, tag))\n    {\n        return true;\n    }\n    //ptr = World.GetEnemy(num, ((const bool (class_basic_pig::*)(const enum_status&))this->IsEnemy));\n    if (c == FIGHT)\n    {\n            return true;\n    }\n    return false;\n}\n\nconst bool class_enemy_pig::IsEnemy(const enum_status& s)\n{\n    return s == FRIEND;\n}\n\n\nvoid class_enemy_pig::C_AttackBy(class_basic_pig* ptr)\n{\n    ptr->Status = FRIEND;\n    if (DropCard(MISS))\n    {\n        ;//\u4e22\u5f03\u95ea\n    }\n    else\n    {\n        Hurt();\n    }\n}\n\nconst bool class_enemy_pig::FightWith(class_basic_pig* ptr)//fight with ptr\n{\n    if (DropCard(KILL))\n    {\n        return true;\n    }\n    else\n    {\n        Hurt();\n        return false;\n    }\n    return false;\n}\n\nvoid class_enemy_pig::CheckAfterAttack(class_basic_pig* ptr)//\u80dc\u8005\u7ed3\u7b97\n{\n    if (ptr->Status == DEAD)\n    {\n        if (ptr->Kind == ENEMY_PIG)\n        {\n            CardList.push_back(World.GetCard());\n            CardList.push_back(World.GetCard());\n            CardList.push_back(World.GetCard());\n        }\n    }\n}\n\nvoid class_enemy_pig::UseCard(enum_card c)\n{\n    DropCard(c);\n    class_basic_pig* ptr;\n    switch (c)\n    {  \n    case KILL:\n        ptr = World.GetNext(num);\n        ptr-> C_AttackBy(this);\n        CheckAfterAttack(ptr);\n        break;\n\n    case BLOOD:\n        ++Blood;\n        break;\n\n    case N_ATK:\n        N_Attack();\n        break;\n\n    case W_ATK:\n        W_Attack();\n        break;\n\n    case ARM:\n        Armed = true;\n        break;\n\n    case FIGHT:\n        ptr = World.PigList[0];//\u4e3b\u732a\n        StartFightWith(ptr);\n        break;\n    }\n}\n\nbool class_enemy_pig::UseSpecialDefence(Event e)\n{\n    bool tag = false;\n    if (e.target->Status == ENEMY)\n    {\n        if (!e.Good)//event\u8868\u793a\u5bf9\u53cb\u519b\u8868\u654c\u610f\n        {\n            tag= true;//\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u732e\u6bb7\u52e4\n        }\n    }\n    if (e.target->Status == FRIEND)\n    {\n        if (e.Good)//\u5bf9\u654c\u519b\u732e\u6bb7\u52e4\n        {\n            tag= true;//\u8868\u654c\u610f\n        }\n    }\n    if (tag)\n    {\n        tag = DropCard(J_DF);\n    }\n    return tag;\n}\n\nvoid class_enemy_pig::UpdataIdentity()\n{\n    Status = ENEMY;\n}\nenum_card translate(char ch)\n{\n    enum_card card;\n    switch (ch)\n    {\n    case 'P':\n        card = BLOOD;\n        break;\n\n    case 'K':\n        card = KILL;\n        break;\n\n    case 'D':\n        card = MISS;\n        break;\n\n    case 'F':\n        card = FIGHT;\n        break;\n\n    case 'N':\n        card = N_ATK;\n        break;\n\n    case 'W':\n        card = W_ATK;\n        break;\n\n    case 'J':\n        card = J_DF;\n        break;\n\n    case 'Z':\n        card = ARM;\n        break;\n    }\n    return card;\n}\nint main()\n{\n    int n, m;\n    char ch;\n    cin >> n >> m;\n    class_basic_pig* ptr;\n    for (reg int i = 0; i < n; ++i)\n    {\n        cin >> ch;\n        switch (ch)\n        {\n        case 'M':\n            ptr = new class_main_pig(i);\n            break;\n\n        case 'Z':\n            ptr = new class_friend_pig(i);\n            break;\n\n        case 'F':\n            ptr = new class_enemy_pig(i);\n            break;\n        }\n        World.PigList.push_back(ptr);\n        cin >> ch;\n        for (reg int j = 0; j < 4; ++j)\n        {\n            cin >> ch;\n            ptr->CardList.push_back(translate(ch));\n        }\n    }\n    World.PigList[0]->Status = FRIEND;\n    for (reg int i = 0; i < m; ++i)\n    {\n        cin >> ch;\n        World.CardPool.push(translate(ch));\n    }\n    World.GameBegin();\n    return 0;\n}\n```\n\n\u521a\u521a\u4e0a\u4f20\u5de5\u7a0b\u624d\u53d1\u73b0\u6587\u4ef6\u5939\u53ea\u670910\u51e0mb\u5927\uff0c\u5370\u8c61\u4e2dvs\u4e00\u4e2a\u5de5\u7a0b100\u591amb\u7684\u6837\u5b50\u554a\u3002\u3002\u3002\u3002\n\n**\u5206\u4eab\u94fe\u63a5\u4e2d\uff0c\u6d4b\u8bd5\u6570\u636e\u6765\u81eaLOJ\u3002**\n\n**vs2015 project\u4e0b\u8f7d\uff1a**\n[\u5ea6\u76d8\u94fe\u63a5](https://pan.baidu.com/s/1eoVcX2Zz1LkBpbVHyGZKxA)\n\u63d0\u53d6\u7801\uff1a6nbh\n\n\u5e0c\u671b\u7ba1\u7406\u5927\u5927\u7ed9\u4e2a\u901a\u8fc7\u3002",
        "postTime": 1545040626,
        "uid": 56184,
        "name": "_\u8679_",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u4e09\u56fd\u6740\u7684\u89c4\u5219\u7684\u53ef\u4ee5\u5148\u53bb [www.sanguosha.com](www.sanguosha.com) \u73a9\u4e00\u4e2a\u6708\u518d\u6765\u505a\u8fd9\u9898\n\n~~\u51c9\u4f01\u73b0\u5728\u4e0d\u4ec5\u5708\u73a9\u5bb6\u7684\u94b1\uff0c\u8fd8\u8981\u641e\u51fa\u5927\u6a21\u62df\u6bd2\u5bb3\u5b66\u751f~~\n\n\u9996\u5148\uff0c\u300a\u4e09\u56fd\u6740\u300b\u662f\u4e00\u4e2a\u5361\u724c\u6e38\u620f\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u8981\u4ece\u5361\u724c\u7684\u89d2\u5ea6\u6765\u5206\u6790\u8fd9\u9053\u9898\n\n\u4e09\u56fd\u6740\u6709\u4e09\u5927\u7c7b\u724c\uff1a\n1. \u8eab\u4efd\u724c\n2. \u6b66\u5c06\u724c\n3. \u624b\u724c\n\n\u8fd9\u91cc\u6ca1\u6709\u6b66\u5c06\u724c\uff0c\u6211\u4eec\u4ece\u8eab\u4efd\u724c\u548c\u624b\u724c\u7684\u89d2\u5ea6\u6765\u5206\u6790\n\n\u8fd9\u91cc\u7684\u8eab\u4efd\u724c\u53ea\u6709\u4e3b\u5fe0\u53cd\uff0c\u6ca1\u6709\u5185\uff0c\u6bd4\u6b63\u89c4\u7684\u4e09\u56fd\u6740\u7b80\u5355\u5f88\u591a\n\n\u90a3\u4e48\u91cd\u70b9\u663e\u7136\u662f\u624b\u724c\n\n\u624b\u724c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e3b\u52a8\u624b\u724c\u548c\u88ab\u52a8\u624b\u724c\n\n\u4e3b\u52a8\u624b\u724c\u5177\u4f53\u5206\u6790\u5982\u4e0b\uff1a\n\n**\u57fa\u672c\u724c**\n\n1. \u6740\n\t- \u8fd9\u9898\u6740\u53ea\u80fd\u5bf9\u81ea\u5df1\u4e0b\u5bb6\u7528\n   - \u7528\u4e86\u6740\u4e4b\u540e\u8eab\u4efd\u5c31\u8df3\u660e\u4e86\uff08\u4e0d\u5b58\u5728\u201c\u7c7b\u53cd\u732a\u201d\uff09\n   - \u6ca1\u6709\u88c5\u5907AK47\u65f6\u6bcf\u56de\u5408\u53ea\u80fd\u7528\u4e00\u5f20\u6740\n   - \u4eba\u5bb6\u5f00A\u6216\u51b3\u6597\u65f6\u8981\u7528\n\n2. \u6843\n\t- \u6843\u53ea\u80fd\u7ed9\u81ea\u5df1\u7528\uff0c\u4e0d\u80fd\u6551\u961f\u53cb\n   - \u6843\u53ea\u80fd\u5728\u6fd2\u6b7b\u6216\u81ea\u5df1\u56de\u5408\u975e\u6ee1\u8840\u65f6\u4f7f\u7528\n\n**\u9526\u56ca\u724c**\n\n3. \u5357\u86ee\u5165\u4fb5\n\t- \u5fe0\u7684A\u4f24\u5230\u4e3b\u4f1a\u88ab\u4e3b\u8ba4\u4e3a\u662f\u201c\u7c7b\u53cd\u732a\u201d\uff0c\u6ca1\u4f24\u5230\u4e0d\u7b97\n\n4. \u4e07\u7bad\u9f50\u53d1\n\t- \u5fe0\u7684\u4e07\u4f24\u5230\u4e3b\u4f1a\u88ab\u4e3b\u8ba4\u4e3a\u662f\u201c\u7c7b\u53cd\u732a\u201d\uff0c\u6ca1\u4f24\u5230\u4e0d\u7b97\n\n5. \u51b3\u6597\n\t- \u4e3b\u5fe0\u65b9\u7684\u51b3\u6597\u4e00\u5b9a\u6253\u79bb\u81ea\u5df1\u6700\u8fd1\u7684\u53cd\u6216\u7c7b\u53cd\n   - \u53cd\u7684\u51b3\u6597\u4e00\u5b9a\u7ed9\u4e3b\n   - \u7528\u4e86\u51b3\u6597\u4e4b\u540e\u8eab\u4efd\u5c31\u8df3\u660e\u4e86\uff08\u4e0d\u5b58\u5728\u201c\u7c7b\u53cd\u732a\u201d\uff09\n   - \u51b3\u6597\u662f\u552f\u4e00\u4e00\u5f20\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u4eba\u5728\u81ea\u5df1\u7684\u56de\u5408\u91cc\u8ba9\u81ea\u5df1\u6b7b\u4ea1\u7684\u724c\n   - \u4e3b\u6253\u7c7b\u53cd\uff0c\u5982\u679c\u7c7b\u53cd\u662f\u5fe0\u7c7b\u53cd\u8981\u6389\u8840\n\n**\u88c5\u5907\u724c**\n\n6. \u8bf8\u845b\u8fde\u5f29\n\t- \u88c5\u5907\u4e86AK47\u4e4b\u540e\u53ef\u4ee5\u51fa\u65e0\u9650\u5f20\u6740\n    \n\u88ab\u52a8\u624b\u724c\u5177\u4f53\u5206\u6790\u5982\u4e0b\uff1a\n\n**\u9526\u56ca\u724c**\n\n7. \u65e0\u61c8\u53ef\u51fb\n\t- \u5728A\u6216\u4e07\u6216\u51b3\u6597\u751f\u6548\u4e4b\u524d\u7528\n   - \u7528\u4e86\u65e0\u4e4b\u540e\u8eab\u4efd\u5c31\u8df3\u660e\u4e86\uff08\u4e0d\u5b58\u5728\u201c\u7c7b\u53cd\u732a\u201d\uff09\n   - \u4e0e\u4f7f\u7528\u65b9\u540c\u961f\u7684\u60f3\u8ba9\u8fd9\u5f20\u724c\u751f\u6548\uff0c\u4e0e\u4f7f\u7528\u65b9\u4e0d\u540c\u961f\u7684\u60f3\u8ba9\u8fd9\u5f20\u724c\u65e0\u6548\n   - \u5b58\u5728\u7528\u4e00\u5f20\u65e0\u53bb\u8ba9\u53e6\u4e00\u5f20\u65e0\u5931\u6548\u7684\u60c5\u51b5\uff08\u6240\u8c13\u201c\u65e0\u61c8\u5927\u6218\u201d\uff09\n\n**\u57fa\u672c\u724c**\n\n8. \u95ea\n\t- \u62b5\u6d88\u6740\u548c\u751f\u6548\u7684\u4e07\n\n\u597d\u4e86\uff0c\u73b0\u5728\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nstruct node{\n    ll blood,next,prev;//\u5b9e\u9645\u8840\u91cf\uff0c\u4e0a\u4e0b\u5bb6\n    char identity;//\u8eab\u4efd\n\tvector<char> card;//\u624b\u724c\n    bool AK47;//\u6709\u6ca1\u6709AK\n}a[20];\nchar know[11],card[2010];//\u660e\u7684\u8eab\u4efd\uff0c\u5361\u724c\u5806\nll n,m,green;//\u53cd\u732a\u6570\u91cf\nbool gameEnd;\n\ninline void getcard(ll x){//\u6478\u724c\n    if(!m) m++;\n    a[x].card.push_back(card[m]);\n    m--;\n}\n\ninline void killed(ll x1,ll x2){//x1\u628ax2\u6253\u8fdb\u6fd2\u6b7b\n    for(ll i=0; i<(ll)a[x2].card.size(); i++)\n        if(a[x2].card[i]=='P'){//\u6709\u6843\n        \ta[x2].card.erase(a[x2].card.begin()+i); i--;\n            a[x2].blood++;//\u81ea\u6551\n            return;\n        }\n    a[a[x2].next].prev=a[x2].prev; a[a[x2].prev].next=a[x2].next;//GG\uff0c\u5220\u6389\u8fd9\u4e2a\u4eba\n    if(x2==1){//\u4e3b\u516cGG\n\t\tgameEnd=1;\n\t\treturn;\n\t}\n    if(a[x2].identity=='F') green--;//\u53cd\u8d3cGG\n    if(!green){//\u53cd\u8d3c\u6b7b\u5149\u4e86\n\t\tgameEnd=1;\n\t\treturn;\n\t}\n    if(a[x2].identity=='F'){getcard(x1);getcard(x1);getcard(x1);}//\u6740\u6b7b\u53cd\u8d3c\u7684\u5956\u52b1\n    if(a[x2].identity=='Z'&&a[x1].identity=='M'){//\u4e3b\u6740\u5fe0\n    \ta[x1].card.clear();//\u5f03\u5149\u6240\u6709\u724c\n\t\ta[x1].AK47=0;//\u4e22AK\n\t}\n}\n\nnamespace cardlist{//\u5404\u79cd\u5361\n\tinline void kill(ll x1,ll x2){//x1\u6740x2\n\t    for(ll i=0; i<(ll)a[x2].card.size(); i++){\n\t    \tif(a[x2].card[i]=='D'){//x2\u6709\u95ea\n\t            a[x2].card.erase(a[x2].card.begin()+i); i--;\n\t            return;\n\t        }\n\t\t}\n\t    a[x2].blood--;//\u6ca1\u95ea\n\t    if(!a[x2].blood) killed(x1,x2);//\u6fd2\u6b7b\u7ed3\u7b97\n\t}\n\t\n\tinline void peach(ll x){//\u5403\u6843\n\t\ta[x].blood++;\n\t}\n\t\n\tinline void AK47(ll x){//\u88c5AK\n\t\ta[x].AK47=1;\n\t}\n\t\n\tinline bool unable(ll x1,ll x2,ll pd){//\u65e0\u90aa\u53ef\u51fb\n\t\tll i=x1;\n\t\twhile(1){\n\t\t\tif(pd){\n\t\t\t\tif(know[x2]==a[i].identity||(know[x2]=='M'&&a[i].identity=='Z')||(know[x2]=='Z'&&a[i].identity=='M')){//\u654c\u65b9\n\t\t\t\t\tfor(ll j=0; j<(ll)a[i].card.size(); j++){\n\t\t\t\t\t\tif(a[i].card[j]=='J'){\n\t\t\t\t\t\t\ta[i].card.erase(a[i].card.begin()+j); j--;\n\t\t\t\t\t\t\tknow[i]=a[i].identity;\n\t\t\t\t\t\t\treturn !unable(i,x1,0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif((a[i].identity=='M'||a[i].identity=='Z')&&know[x1]=='F'||(a[i].identity=='F'&&(know[x1]=='M'||know[x1]=='Z'))){//\u53cb\u65b9\n\t\t\t\t\tfor(ll j=0; j<(ll)a[i].card.size(); j++){\n\t\t\t\t\t\tif(a[i].card[j]=='J'){\n\t\t\t\t\t\t\ta[i].card.erase(a[i].card.begin()+j); j--;\n\t\t\t\t\t\t\tknow[i]=a[i].identity;\n\t\t\t\t\t\t\treturn !unable(i,x1,0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ti=a[i].next;\n\t\t\tif(i==x1) break;\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tinline void A(ll x1){//\u5357\u86ee\u5165\u4fb5\n\t\tfor(ll x2=a[x1].next; x1!=x2; x2=a[x2].next){\n\t\t\tif(unable(x1,x2,1)) continue;//\u88ab\u65e0\u6389\u4e86\n\t\t\tbool flag=0;\n\t\t\tfor(ll i=0; i<(ll)a[x2].card.size(); i++){\n\t\t\t\tif(a[x2].card[i]=='K'){//\u6709\u6740\n\t\t\t\t\ta[x2].card.erase(a[x2].card.begin()+i); i--;\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag) continue;\n\t\t\ta[x2].blood--;//\u6ca1\u6740\uff0c\u6389\u8840\n\t\t\tif(x2==1&&know[x1]=='U') know[x1]='L';//\u6807\u8bb0\u7c7b\u53cd\u732a\n\t\t\tif(!a[x2].blood) killed(x1,x2);//\u6fd2\u6b7b\u7ed3\u7b97\n\t\t\tif(gameEnd) return;//\u6e38\u620f\u7ed3\u675f\n\t\t}\n\t}\n\t\n\tinline void W(ll x1){//\u4e07\u7bad\u9f50\u53d1\n\t\tfor(ll x2=a[x1].next; x1!=x2; x2=a[x2].next){\n\t\t\tif(unable(x1,x2,1)) continue;//\u88ab\u65e0\u6389\u4e86\n\t\t\tbool flag=0;\n\t\t\tfor(ll i=0; i<(ll)a[x2].card.size(); i++){\n\t\t\t\tif(a[x2].card[i]=='D'){//\u6709\u95ea\n\t\t\t\t\ta[x2].card.erase(a[x2].card.begin()+i); i--;\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag) continue;\n\t\t\ta[x2].blood--;//\u6ca1\u95ea\uff0c\u6389\u8840\n\t\t\tif(x2==1&&know[x1]=='U') know[x1]='L';//\u6807\u8bb0\u7c7b\u53cd\u732a\n\t\t\tif(!a[x2].blood) killed(x1,x2);//\u6fd2\u6b7b\u7ed3\u7b97\n\t\t\tif(gameEnd) return;//\u6e38\u620f\u7ed3\u675f\n\t\t}\n\t}\n\t\n\tinline void fire(ll x1,ll x2){\n\t\tif(unable(x1,x2,1)) return;//\u88ab\u65e0\u6389\u4e86\n\t\tif(x1==1&&a[x2].identity=='Z'){//\u4e3b\u516c\u6253\u5fe0\u81e3\n\t\t\ta[x2].blood--;\n\t\t\tif(!a[x2].blood) killed(x1,x2);//\u6fd2\u6b7b\u7ed3\u7b97\n\t\t\treturn;\n\t\t}\n\t\tll j=0,k=0;\n\t\twhile(1){\n        //\u540e\u624b\u65b9\uff08\u4e0d\u662f\u4f7f\u7528\u51b3\u6597\u7684\u4e00\u65b9\uff09\u51fa\u6740\n\t\t\twhile(j<(ll)a[x2].card.size()&&a[x2].card[j]!='K') j++;\n\t\t\tif(j==a[x2].card.size()){\n\t\t\t\ta[x2].blood--;\n\t\t\t\tif(!a[x2].blood) killed(x1,x2);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ta[x2].card.erase(a[x2].card.begin()+j); j--;\n\t\t\t}\n\t\t\t//\u5148\u624b\u65b9\uff08\u4f7f\u7528\u51b3\u6597\u7684\u4e00\u65b9\uff09\u51fa\u6740\n\t\t\twhile(k<(ll)a[x1].card.size()&&a[x1].card[k]!='K') k++;\n\t\t\tif(k==(ll)a[x1].card.size()){\n\t\t\t\ta[x1].blood--;\n\t\t\t\tif(!a[x1].blood) killed(x2,x1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ta[x1].card.erase(a[x1].card.begin()+k); k--;\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void solve(){//\u8fdb\u5165\u6e38\u620f\uff0c\u6a21\u62df\n    if(!green) return;//\u573a\u4e0a\u65e0\u53cd\u732a\n\tgameEnd=0;\n    for(ll i=1; i; i=a[i].next){\n        getcard(i); getcard(i);//\u6478\u724c\n        bool usekill=1;//\u7528\u8fc7\u6740\u6ca1\u6709\n        for(ll j=0; j<(ll)a[i].card.size(); j++){\n            if(!a[i].blood) break;\n            switch(a[i].card[j]){\n            \tcase 'P':{//\u6843\n\t            \tif(a[i].blood!=4){\n\t            \t\tcardlist::peach(i);\n\t\t\t\t\t\ta[i].card.erase(a[i].card.begin()+j); j--;\n\t\t\t\t\t}\t\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'K':{//\u6740\n\t\t\t\t\tif(!usekill&&!a[i].AK47) continue;//\u5982\u679c\u7528\u8fc7\u6740\u5e76\u4e14\u6ca1\u6709AK\u5c31\u8df3\u8fc7\n\t                if(a[i].identity=='M'&&know[a[i].next]!='L'&&know[a[i].next]!='F') continue;//\u4e3b\u516c\u51fa\u6740\u4e0b\u5bb6\u4e0d\u662f\u53cd\u6216\u7c7b\u53cd\uff0c\u8df3\u8fc7\n\t                if(a[i].identity=='Z'&&know[a[i].next]!='F') continue;//\u5fe0\u4e0b\u5bb6\u4e0d\u662f\u53cd\uff0c\u8df3\u8fc7\n\t                if(a[i].identity=='F'&&know[a[i].next]!='Z'&&know[a[i].next]!='M') continue;//\u53cd\u4e0b\u5bb6\u4e0d\u662f\u4e3b\u5fe0\uff0c\u8df3\u8fc7\n\t                a[i].card.erase(a[i].card.begin()+j); j--;\n\t                cardlist::kill(i,a[i].next);//\u51fa\u6740\n\t                know[i]=a[i].identity; usekill=0;//\u660e\u8eab\u4efd\uff0c\u6740\u7528\u8fc7\u4e86\n\t                if(gameEnd) return;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'Z':{//AK47\n\t\t\t\t\ta[i].card.erase(a[i].card.begin()+j); j=-1;\n\t\t\t\t\tcardlist::AK47(i);\n                    continue;\n\t\t\t\t}\n\t\t\t\tcase 'N':{//A\n\t\t\t\t\ta[i].card.erase(a[i].card.begin()+j); j--;\n\t\t\t\t\tcardlist::A(i);\n\t\t\t\t\tif(gameEnd) return;\n\t\t\t\t\tj=-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'W':{//\u4e07\n\t\t\t\t\ta[i].card.erase(a[i].card.begin()+j); j--;\n\t\t\t\t\tcardlist::W(i);\n\t\t\t\t\tif(gameEnd) return;\n\t\t\t\t\tj=-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'F':{//\u51b3\u6597\n\t\t\t\t\tif(a[i].identity=='F'){//\u53cd\u7684\u51b3\u6597\n\t\t\t\t\t\ta[i].card.erase(a[i].card.begin()+j); j--;\n\t\t\t\t\t\tcardlist::fire(i,1);\n\t\t\t\t\t\tknow[i]=a[i].identity;\n\t\t\t\t\t\tif(gameEnd) return;\n\t\t\t\t\t\tj=-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tfor(ll k=a[i].next; i!=k; k=a[k].next){//\u4e3b\u5fe0\u7684\u51b3\u6597\n\t\t\t\t\t\tif(a[i].identity=='M'&&(know[k]=='L'||know[k]=='F')||(a[i].identity=='Z'&&know[k]=='F')){\n\t\t\t\t\t\t\ta[i].card.erase(a[i].card.begin()+j); j--;\n\t\t\t\t\t\t\tcardlist::fire(i,k);\n\t\t\t\t\t\t\tknow[i]=a[i].identity;\n\t\t\t\t\t\t\tif(gameEnd) return;\n\t\t\t\t\t\t\tj=-1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n        }\n    }\n}\n\nint main(){\n\tios::sync_with_stdio(0);\n    cin>>n>>m;\n    for(ll i=1; i<=n; i++){\n    \ta[i].next=i+1;\n\t\ta[i].prev=i-1;\n\t}\n    a[n].next=1; a[1].prev=n;\n    for(ll i=1; i<=n; i++){\n        string s; cin>>s;\n\t\ta[i].identity=s[0];\n        for(ll j=1; j<=4; j++){\n        \tchar ch; cin>>ch;\n\t\t\ta[i].card.push_back(ch);\n\t\t}\n        a[i].blood=4;\n        if(a[i].identity=='F') green++;\n        a[i].AK47=0;\n    }\n    for(ll i=2; i<=n; i++) know[i]='U';\n    know[1]='M';\n    for(ll i=1; i<=m; i++){\n    \tchar ch; cin>>ch;\n\t\tcard[m-i+1]=ch;\n\t}\n    solve();\n    if(a[1].blood<=0) cout<<\"FP\\n\";\n    else cout<<\"MP\\n\";\n    for(ll i=1; i<=n; i++){\n        if(a[i].blood<=0) cout<<\"DEAD\\n\";\n        else{\n            for(ll j=0; j<(ll)a[i].card.size(); j++) cout<<a[i].card[j]<<' ';\n            cout<<endl;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1571788675,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "[My](https://blog.csdn.net/qq_42993486/article/details/100876881) [blog](https://www.cnblogs.com/hht2005/p/11526075.html)\n# \u9898\u76ee\u94fe\u63a5\uff1a\n[\u6d1b\u8c37P2482](https://www.luogu.org/problem/P2482)\n\n[loj2885](https://loj.ac/problem/2885)\n\n[bzoj1972](https://www.lydsy.com/JudgeOnline/problem.php?id=1972)\n\n\u63a8\u8350\u53bbloj\u770b\u9898\uff0c\u53ef\u4ee5\u4e0b\u6570\u636e~~\u56e0\u4e3a\u7279\u522b\u5bb9\u6613\u51fa\u9519~~\u3002\n# sol\n\u5176\u5b9e\u8fd9\u9898\u7801\u91cf\u4e5f\u6ca1\u90a3\u5927\uff0c\u683c\u5f0f\u5316\u540e\u6211\u7684\u4ee3\u7801\u53ea\u6709141\u884c\uff0c\u5728loj\u76ee\u524d\u6700\u77ed\u3002\u6700\u597d\u591a\u4e9b\u4e00\u4e9b\u51fd\u6570\uff0c\u7ed9\u6bcf\u4e2a\u732a\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\n\n## \u6e38\u620f\u7ed3\u675f\u3001\u4e00\u4e9b\u6570\u7ec4/\u53d8\u91cf\n\n\u4e4b\u6240\u4ee5\u4e00\u5f00\u59cb\u5c31\u5199\u7ed3\u675f\uff0c\u662f\u56e0\u4e3a\u4ee5\u540e\u8981\u7528\u3002\n\n```cpp\nvoid end() {\n\tputs(a[1].xue?\"MP\":\"FP\");//\u5224\u65ad\u8f93\u8d62\n\tfor(int i=1; i<=n; i++) {//\u8f93\u51fa\u6bcf\u53ea\u732a\u7684\u72b6\u6001\n\t\tif(a[i].xue==0)puts(\"DEAD\");\n\t\telse {\n\t\t\tfor(int j=0; j<a[i].s-1; j++)\n\t\t\t\tprintf(\"%c \",a[i].pai[j]);\n\t\t\tif(a[i].s)printf(\"%c\",a[i].pai[a[i].s-1]);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\texit(0);//\u9000\u51fa\u6574\u4e2a\u7a0b\u5e8f\n}\n```\n\u6570\u7ec4/\u53d8\u91cf\n```cpp\nint nxt[15],las[15],top,f,n,m;\n//nxt,las\u4e3a\u94fe\u8868\uff0c\u540e\u4f1a\u89e3\u91ca\uff0ctop\u4e3a\u724c\u5806\u9876\uff0cf\u4e3a\u53cd\u732a\u6570\u91cf\uff0cn\u4e3a\u603b\u732a\u6570\uff0cm\u4e3a\u603b\u724c\u6570\nchar tem[5],paidui[2010];//tem\u7528\u6765\u8f93\u5165\uff0cpaidui\u5c31\u662f\u724c\u5806\n```\n## \u6bcf\u4e2a\u732a\u7684\u7ed3\u6784\u4f53\uff1a\n```cpp\nstruct pig {\n\tchar tp,pai[2010];//tp:\u771f\u5b9e\u8eab\u4efd,M\u4e3b\u732a,Z\u5fe0\u732a,F\u53cd\u732a,pai:\u624b\u724c\n\tint xue,s,z,t;\n\t//xue:\u8840\u91cf,s:\u724c\u6570,z:\u662f\u5426\u6709\u732a\u54e5\u8fde\u5f29(Z),t:\u8868\u9762\u8eab\u4efd,0:\u672a\u77e5,1:\u5fe0\u732a,2:\u53cd\u732a,3:\u7c7b\u53cd\u732a\n\tvoid qizhi(int &x) {//\u5c06\u7b2cx\u5f20\u724c\u5f03\u7f6e\n\t\ts--;\n\t\tfor(int i=x; i<s; i++)\n\t\t\tpai[i]=pai[i+1];\n\t\tx--;\n\t}\n\tint seach(char ch) {//\u641c\u7d22\u7b2c\u4e00\u5f20\u4e3ach\u7684\u724c\uff0c\u6709\u5c31\u5f03\u7f6e\uff0c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n\t\tfor(int i=0; i<s; i++)\n\t\t\tif(pai[i]==ch) {\n\t\t\t\tqizhi(i);\n\t\t\t\treturn 1;\n\t\t\t}\n\t\treturn 0;\n\t}\n\tvoid mopai(int x) {//\u4ece\u724c\u5806\u4e2d\u6478x\u5f20\u724c\n\t\tfor(int i=1; i<=x; i++) {\n\t\t\tpai[s++]=paidui[top++];\n\t\t\tif(top==m)top--;\n\t\t}\n\t}\n} a[15];\n```\n\u5f03\u7f6e\u6211\u662f\u66b4\u529b\u5220\uff0c\u53ef\u4ee5\u7528`vector<char>`\uff0c\u7136\u540e\u6478\u724c\u6709\u4e00\u4e2abug\uff0c\u724c\u4e0d\u591f\u7528\uff0c\u8981\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c\u3002\n\n## \u732e\u6bb7\u52e4\u3001\u8868\u654c\u610f\u3001\u8df3\u5fe0\u3001\u8df3\u53cd\n\n\u5148`define`\u4e24\u4e2a\u8bed\u53e5\n\n```cpp\n#define dipig(x,y) ((a[x].tp=='M'&&(a[y].t==2||a[y].t==3))||(a[x].tp=='Z'&&a[y].t==2)||(a[x].tp=='F'&&a[y].t==1))\n\\\\x\u80fd\u5426\u5bf9y\u8868\u654c\u610f\n#define youpig(x,y) (((a[x].tp=='M'||a[x].tp=='Z')&&a[y].t==1)||(a[x].tp=='F'&&a[y].t==2))\n\\\\x\u80fd\u5426\u5bf9y\u732e\u6bb7\u52e4\n\\\\y\u82e5\u672a\u8868\u660e\u8eab\u4efd\u5219\u90fd\u4e0d\u80fd\n```\n\u8df3\u5fe0\u3001\u8df3\u53cd\u5f88\u7b80\u5355\uff0c\u5982\u679c\u4ed6\u4f7f\u7528\u4e86\u300e\u6740(K)\u300f\uff0c\u300e\u51b3\u6597(F)\u300f\uff0c\u300e\u65e0\u61c8\u53ef\u51fb(J)\u300f\uff0c\u5c31\u8868\u660e\u4e86\u8eab\u4efd\uff0c\u90a3\u4e48\u5fe0\u732a\u8df3\u5fe0\uff0c\u53cd\u732a\u8df3\u53cd\u3002\u8fd9\u91cc\u6211\u628a\u4e3b\u732a\u5f53\u6210\u4e00\u79cd\u7279\u6b8a\u7684\u5fe0\u732a\uff0c\u4e00\u5f00\u59cb\u5c31\u8df3\u5fe0\u3002\n\n## \u4f24\u5bb3\u3001\u6b7b\u4ea1\n\n\u7531\u4e8e\u732a\u4f1a\u6b7b\u4ea1\uff0c\u4e14\u4ed6\u4eec\u5750\u6210\u4e00\u5708\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u94fe\u8868\u3002\n```cpp\nint nxt[15],las[15];//\u53cc\u5411\u94fe\u8868\nvoid killed(int g,int p) {//g\u6740\u6b7b\u4e86p\n\tif(a[p].tp=='M')end();//\u4e3b\u732a\u6b7b\u4e86\uff0c\u7ed3\u675f\n\tif(a[p].tp=='F') {\n\t\tif(!--f)end();//\u6ca1\u6709\u53cd\u732a\u4e86\uff0c\u7ed3\u675f\n\t\ta[g].mopai(3);//\u6478\u4e09\u5f20\u5956\u52b1\u724c\n\t} else if(a[p].tp=='Z'&&a[g].tp=='M')a[g].s=a[g].z=0;\n\t//\u4e3b\u732a\u6740\u4e86\u5fe0\u732a\uff0c\u5f03\u7f6e\u6240\u4ee5\u724c\u548c\u88c5\u5907\n\tnxt[las[p]]=nxt[p];//\u4ece\u94fe\u8868\u4ece\u5220\u9664p\n\tlas[nxt[p]]=las[p];\n}\nvoid kouxue(int x,int y) {//\u4ee5x\u4e3a\u4f24\u5bb3\u6765\u6e90\uff0c\u653b\u51fby\n\ta[y].xue--;\n\tif(!a[y].xue)a[y].xue+=a[y].seach('P');//\u6fd2\u6b7b\uff0c\u53ef\u4ee5\u5403\u4e00\u4e2a\u6843\n\tif(!a[y].xue)killed(x,y);//\u4f9d\u7136\u6fd2\u6b7b\uff0c\u5219y\u6b7b\u4ea1\n}\n```\n## \u65e0\u61c8\u53ef\u51fb\n\u8fd9\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u724c\uff0c\u53ef\u80fd\u53ef\u4ee5\u9012\u5f52\u4f7f\u7528\u3002\n```cpp\nint wxkj(int s,int x) {//\u65e0\u61c8\u53ef\u51fb\u6210\u529f\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n\tfor(int i=s,f=0; !f||i!=s; i=nxt[i],f=1) {//\u4eces\u5f00\u59cb\n\t\tif((!x?(dipig(i,s)):(youpig(i,x)))&&a[i].seach('J')) {\n\t\t//\u5982\u679cx\u4e0d\u4e3a0\uff0c\u8bf4\u660es\u5bf9x\u4f7f\u7528\u9526\u56ca\u724c\uff0c\u5426\u5219\u8bf4\u660es\u662f\u4e0a\u4e00\u6b21\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\n\t\t//\u6839\u636e\u9898\u610f\u5224\u65ad\u662f\u5426\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\n\t\t\ta[i].t=a[i].tp=='F'?2:1;//i\u7684\u8eab\u4efd\u660e\u786e\n\t\t\treturn !wxkj(i,0);//\u9012\u5f52\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\n\t\t}\n\t}\n\treturn 0;\n}\n```\n## \u4e3b\u8981\u64cd\u4f5c\n\u7ec8\u4e8e\u5230\u4e3b\u8981\u64cd\u4f5c\u4e86~\n```cpp\n\tint now=1;//now\u4e3a\u5f53\u524d\u56de\u5408\u7684\u732a\n\ta[1].t=1;//\u4e3b\u732a\u4e00\u5f00\u59cb\u5c31\u8df3\u5fe0\n\tif(!f)end();//\u4e00\u5f00\u59cb\u5c31\u6ca1\u53cd\u732a\n\twhile(1) {\n\t\tint kill=0;//\u662f\u5426\u4f7f\u7528\u8fc7\u6740\n\t\ta[now].mopai(2);//\u64782\u5f20\u724c\n\t\tfor(int i=0; i<a[now].s&&a[now].xue; i++) {//\u679a\u4e3e\u6bcf\u5f20\u724c\n\t\t\tif(a[now].pai[i]=='Z') {//\u88c5\u5907\u4e00\u5b9a\u88c5\u5907\u4e0a\uff0c\u4e0d\u7ba1\u539f\u6765\u662f\u5426\u88c5\u5907\n\t\t\t\ta[now].z=1,a[now].qizhi(i);\n\t\t\t\ti=-1;//\u53ef\u80fd\u4e4b\u524d\u6740\u53ef\u7528\uff0c\u8981\u4ece\u5934\u679a\u4e3e\n\t\t\t} else if(a[now].pai[i]=='P'&&a[now].xue<4) {//\u6709\u6843\u4e00\u5b9a\u5403\n\t\t\t\ta[now].xue++,a[now].qizhi(i);\n\t\t\t} else if(a[now].pai[i]=='K'&&(a[now].z||!kill)) {//\u80fd\u7528\u6740\n\t\t\t\tint nx=nxt[now];//\u53ea\u80fd\u6253\u4e0b\u4e00\u4e2a\n\t\t\t\tif(dipig(now,nx)) {//\u80fd\u8868\u654c\u610f\n\t\t\t\t\ta[now].t=a[now].tp=='F'?2:1;//now\u8eab\u4efd\u660e\u786e\n\t\t\t\t\ta[now].qizhi(i);\n\t\t\t\t\tkill=1;\n\t\t\t\t\tif(!a[nx].seach('D'))kouxue(now,nx);//nx\u6ca1\u95ea\u5c31\u6263\u8840\n\t\t\t\t}\n\t\t\t} else if(a[now].pai[i]=='F') {//\u6709\u51b3\u6597\u4e00\u5b9a\u7528\n\t\t\t\tfor(int j=a[now].tp=='F'?1:nxt[now]; j!=now; j=nxt[j])\n\t\t\t\t//\u53cd\u732a\u4e00\u5b9a\u4e0e\u4e3b\u732a\u51b3\u6597\n\t\t\t\t\tif(dipig(now,j)) {\n\t\t\t\t\t\ta[now].qizhi(i);\n\t\t\t\t\t\ta[now].t=a[now].tp=='F'?2:1;//now\u8eab\u4efd\u660e\u786e\n\t\t\t\t\t\tif(wxkj(now,j))break;//\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\n\t\t\t\t\t\tif(a[j].tp=='Z'&&a[now].tp=='M') {\n\t\t\t\t\t\t\tkouxue(now,j);//\u4e3b\u732a\u4e0e\u5fe0\u732a\u51b3\u6597\u5fe0\u732a\u76f4\u63a5\u6263\u8840\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint t=1;\n\t\t\t\t\t\twhile(1) {//\u51b3\u6597\n\t\t\t\t\t\t\tif(t==1) {\n\t\t\t\t\t\t\t\tif(!a[j].seach('K')) {\n\t\t\t\t\t\t\t\t\tkouxue(now,j);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if(!a[now].seach('K')) {\n\t\t\t\t\t\t\t\tkouxue(j,now),i=max(-1,i-1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tt^=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti=-1;\n\t\t\t\t\t\t//\u51b3\u6597\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u732a\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\uff0c\u660e\u786e\u8eab\u4efd\uff0c\u8981\u4ece\u5934\u5f00\u59cb\u679a\u4e3e\u724c\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t} else if(a[now].pai[i]=='N'||a[now].pai[i]=='W') {\n\t\t\t\t//\u6709\u5357\u732a\u5165\u4fb5\u548c\u4e07\u7bad\u9f50\u53d1\u4e00\u5b9a\u7528\n\t\t\t\tchar ch=a[now].pai[i];//\u4fdd\u5b58\u662f\u54ea\u79cd\n\t\t\t\ta[now].qizhi(i);\n\t\t\t\tfor(int j=nxt[now]; j!=now; j=nxt[j]) {//\u4f9d\u6b21\u7ed3\u7b97\n\t\t\t\t\tif(!wxkj(now,j)&&!a[j].seach(ch=='N'?'K':'D')) {\n\t\t\t\t\t\tif(a[j].tp=='M'&&!a[now].t)a[now].t=3;\n\t\t\t\t\t\t//j\u662f\u4e3b\u732a\uff0cnow\u672a\u8868\u660e\u8eab\u4efd\uff0c\u5219now\u4e3a\u7c7b\u53cd\u732a\n\t\t\t\t\t\tkouxue(now,j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti=-1;//\u540c\u51b3\u6597\uff0c\u8981\u4ece\u5934\u5f00\u59cb\u679a\u4e3e\u724c\n\t\t\t}\n\t\t}\n\t\tnow=nxt[now];\n\t}\n```\n## \u5b8c\u6574\u4ee3\u7801\n\u6ce8\u91ca\u5c31\u4e0d\u6253\u4e86\n### AC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define dipig(x,y) ((a[x].tp=='M'&&(a[y].t==2||a[y].t==3))||(a[x].tp=='Z'&&a[y].t==2)||(a[x].tp=='F'&&a[y].t==1))\n#define youpig(x,y) (((a[x].tp=='M'||a[x].tp=='Z')&&a[y].t==1)||(a[x].tp=='F'&&a[y].t==2))\nint nxt[15],las[15],top,f,n,m;\nchar tem[5],paidui[2010];\nstruct pig {\n\tchar tp,pai[2010];\n\tint xue,s,z,t;\n\tvoid qizhi(int &x) {\n\t\ts--;\n\t\tfor(int i=x; i<s; i++)\n\t\t\tpai[i]=pai[i+1];\n\t\tx--;\n\t}\n\tint seach(char ch) {\n\t\tfor(int i=0; i<s; i++)\n\t\t\tif(pai[i]==ch) {\n\t\t\t\tqizhi(i);\n\t\t\t\treturn 1;\n\t\t\t}\n\t\treturn 0;\n\t}\n\tvoid mopai(int x) {\n\t\tfor(int i=1; i<=x; i++) {\n\t\t\tpai[s++]=paidui[top++];\n\t\t\tif(top==m)top--;\n\t\t}\n\t}\n} a[15];\nvoid end() {\n\tputs(a[1].xue?\"MP\":\"FP\");\n\tfor(int i=1; i<=n; i++) {\n\t\tif(a[i].xue==0)puts(\"DEAD\");\n\t\telse {\n\t\t\tfor(int j=0; j<a[i].s-1; j++)\n\t\t\t\tprintf(\"%c \",a[i].pai[j]);\n\t\t\tif(a[i].s)printf(\"%c\",a[i].pai[a[i].s-1]);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\texit(0);\n}\nvoid killed(int g,int p) {\n\tif(a[p].tp=='M')end();\n\tif(a[p].tp=='F') {\n\t\tif(!--f)end();\n\t\ta[g].mopai(3);\n\t} else if(a[p].tp=='Z'&&a[g].tp=='M')a[g].s=a[g].z=0;\n\tnxt[las[p]]=nxt[p];\n\tlas[nxt[p]]=las[p];\n}\nvoid kouxue(int x,int y) {\n\ta[y].xue--;\n\tif(!a[y].xue)a[y].xue+=a[y].seach('P');\n\tif(!a[y].xue)killed(x,y);\n}\nint wxkj(int s,int x) {\n\tfor(int i=s,f=0; !f||i!=s; i=nxt[i],f=1) {\n\t\tif((!x?(dipig(i,s)):(youpig(i,x)))&&a[i].seach('J')) {\n\t\t\ta[i].t=a[i].tp=='F'?2:1;\n\t\t\treturn !wxkj(i,0);\n\t\t}\n\t}\n\treturn 0;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%s\",tem);\n\t\ta[i].tp=tem[0];\n\t\tf+=tem[0]=='F';\n\t\tfor(int j=0; j<4; j++)\n\t\t\tcin>>a[i].pai[j];\n\t\tnxt[i]=i+1,las[i]=i-1;\n\t\ta[i].s=a[i].xue=4;\n\t}\n\tfor(int i=0; i<m; i++)cin>>paidui[i];\n\tnxt[n]=1,las[1]=n;\n\tint now=1;\n\ta[1].t=1;\n\tif(!f)end();\n\twhile(1) {\n\t\tint kill=0;\n\t\ta[now].mopai(2);\n\t\tfor(int i=0; i<a[now].s&&a[now].xue; i++) {\n\t\t\tif(a[now].pai[i]=='Z') {\n\t\t\t\ta[now].z=1,a[now].qizhi(i);\n\t\t\t\ti=-1;\n\t\t\t} else if(a[now].pai[i]=='P'&&a[now].xue<4) {\n\t\t\t\ta[now].xue++,a[now].qizhi(i);\n\t\t\t} else if(a[now].pai[i]=='K'&&(a[now].z||!kill)) {\n\t\t\t\tint nx=nxt[now];\n\t\t\t\tif(dipig(now,nx)) {\n\t\t\t\t\ta[now].t=a[now].tp=='F'?2:1;\n\t\t\t\t\ta[now].qizhi(i);\n\t\t\t\t\tkill=1;\n\t\t\t\t\tif(!a[nx].seach('D'))kouxue(now,nx);\n\t\t\t\t}\n\t\t\t} else if(a[now].pai[i]=='F') {\n\t\t\t\tfor(int j=a[now].tp=='F'?1:nxt[now]; j!=now; j=nxt[j])\n\t\t\t\t\tif(dipig(now,j)) {\n\t\t\t\t\t\ta[now].qizhi(i);\n\t\t\t\t\t\ta[now].t=a[now].tp=='F'?2:1;\n\t\t\t\t\t\tif(wxkj(now,j))break;\n\t\t\t\t\t\tif(a[j].tp=='Z'&&a[now].tp=='M') {\n\t\t\t\t\t\t\tkouxue(now,j);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint t=1;\n\t\t\t\t\t\twhile(1) {\n\t\t\t\t\t\t\tif(t==1) {\n\t\t\t\t\t\t\t\tif(!a[j].seach('K')) {\n\t\t\t\t\t\t\t\t\tkouxue(now,j);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if(!a[now].seach('K')) {\n\t\t\t\t\t\t\t\tkouxue(j,now),i=max(-1,i-1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tt^=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti=-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t} else if(a[now].pai[i]=='N'||a[now].pai[i]=='W') {\n\t\t\t\tchar ch=a[now].pai[i];\n\t\t\t\ta[now].qizhi(i);\n\t\t\t\tfor(int j=nxt[now]; j!=now; j=nxt[j]) {\n\t\t\t\t\tif(!wxkj(now,j)&&!a[j].seach(ch=='N'?'K':'D')) {\n\t\t\t\t\t\tif(a[j].tp=='M'&&!a[now].t)a[now].t=3;\n\t\t\t\t\t\tkouxue(now,j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti=-1;\n\t\t\t}\n\t\t}\n\t\tnow=nxt[now];\n\t}\n\treturn 0;\n}\n```\n### \u89c2\u6218\u6a21\u5f0f\n\u8fd9\u4e2a\u4ee3\u7801\u8f93\u51fa\u4e86\u6bcf\u4e00\u6b65\uff0c\u6bcf\u56de\u5408\uff0c\u6709\u4e00\u4e2a`getchar`\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define dipig(x,y) ((a[x].tp=='M'&&(a[y].t==2||a[y].t==3))||(a[x].tp=='Z'&&a[y].t==2)||(a[x].tp=='F'&&a[y].t==1))\n#define youpig(x,y) (((a[x].tp=='M'||a[x].tp=='Z')&&a[y].t==1)||(a[x].tp=='F'&&a[y].t==2))\nint nxt[15],las[15],top,f,n,m;\nchar tem[5],paidui[2010];\nstruct pig {\n\tchar tp,pai[2010];\n\tint xue,s,z,t;\n\tvoid qizhi(int &x) {\n\t\ts--;\n\t\tfor(int i=x; i<s; i++)\n\t\t\tpai[i]=pai[i+1];\n\t\tx--;\n\t}\n\tint seach(char ch) {\n\t\tfor(int i=0; i<s; i++)\n\t\t\tif(pai[i]==ch) {\n\t\t\t\tqizhi(i);\n\t\t\t\treturn 1;\n\t\t\t}\n\t\treturn 0;\n\t}\n\tvoid mopai(int x) {\n\t\tfor(int i=1; i<=x; i++) {\n\t\t\tpai[s++]=paidui[top++];\n\t\t\tif(top==m)top--;\n\t\t}\n\t}\n} a[15];\nvoid end() {\n\tputs(a[1].xue?\"MP\":\"FP\");\n\tfor(int i=1; i<=n; i++) {\n\t\tif(a[i].xue==0)puts(\"DEAD\");\n\t\telse {\n\t\t\tfor(int j=0; j<a[i].s-1; j++)\n\t\t\t\tprintf(\"%c \",a[i].pai[j]);\n\t\t\tif(a[i].s)printf(\"%c\",a[i].pai[a[i].s-1]);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\texit(0);\n}\nvoid killed(int g,int p) {\n\tif(a[p].tp=='M')end();\n\tif(a[p].tp=='F') {\n\t\tif(!--f)end();\n\t\ta[g].mopai(3);\n\t} else if(a[p].tp=='Z'&&a[g].tp=='M')a[g].s=a[g].z=0;\n\tnxt[las[p]]=nxt[p];\n\tlas[nxt[p]]=las[p];\n}\nvoid kouxue(int x,int y) {\n\ta[y].xue--;\n\tif(!a[y].xue)\n\t\tif(a[y].seach('P'))a[y].xue++,cerr<<'P'<<' '<<y<<endl;\n\tif(!a[y].xue)killed(x,y);\n}\nint wxkj(int s,int x) {\n\tfor(int i=s,f=0; !f||i!=s; i=nxt[i],f=1) {\n\t\tif((!x?(dipig(i,s)):(youpig(i,x)))&&a[i].seach('J')) {\n\t\t\ta[i].t=a[i].tp=='F'?2:1;\n\t\t\tcerr<<'J'<<' '<<i<<endl;\n\t\t\treturn !wxkj(i,0);\n\t\t}\n\t}\n\treturn 0;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%s\",tem);\n\t\ta[i].tp=tem[0];\n\t\tf+=tem[0]=='F';\n\t\tfor(int j=0; j<4; j++)\n\t\t\tcin>>a[i].pai[j];\n\t\tnxt[i]=i+1,las[i]=i-1;\n\t\ta[i].s=a[i].xue=4;\n\t}\n\tfor(int i=0; i<m; i++)cin>>paidui[i];\n\tnxt[n]=1,las[1]=n;\n\tint now=1;\n\ta[1].t=1;\n\tif(!f)end();\n\twhile(1) {\n\t\tint kill=0;\n\t\ta[now].mopai(2);\n\t\tgetchar();\n\t\tcerr<<now<<' '<<a[now].xue<<' '<<a[now].t<<' '<<a[now].z<<endl;\n\t\tfor(int i=0; i<a[now].s; i++)cerr<<a[now].pai[i]<<' ';\n\t\tcerr<<endl;\n\t\tfor(int i=0; i<a[now].s&&a[now].xue; i++) {\n\t\t\tif(a[now].pai[i]=='Z') {\n\t\t\t\tcerr<<'Z'<<endl;\n\t\t\t\ta[now].z=1,a[now].qizhi(i);\n\t\t\t\ti=-1;\n\t\t\t} else if(a[now].pai[i]=='P'&&a[now].xue<4) {\n\t\t\t\tcerr<<'P'<<endl;\n\t\t\t\ta[now].xue++,a[now].qizhi(i);\n\t\t\t} else if(a[now].pai[i]=='K'&&(a[now].z||!kill)) {\n\t\t\t\tint nx=nxt[now];\n\t\t\t\tif(dipig(now,nx)) {\n\t\t\t\t\tcerr<<'K'<<' '<<nx<<endl;\n\t\t\t\t\ta[now].t=a[now].tp=='F'?2:1;\n\t\t\t\t\ta[now].qizhi(i);\n\t\t\t\t\tkill=1;\n\t\t\t\t\tif(!a[nx].seach('D'))kouxue(now,nx);\n\t\t\t\t\telse cerr<<'D'<<endl;\n\t\t\t\t}\n\t\t\t} else if(a[now].pai[i]=='F') {\n\t\t\t\tfor(int j=a[now].tp=='F'?1:nxt[now]; j!=now; j=nxt[j])\n\t\t\t\t\tif(dipig(now,j)) {\n\t\t\t\t\t\tcerr<<'F'<<' '<<j<<endl;\n\t\t\t\t\t\ta[now].qizhi(i);\n\t\t\t\t\t\ta[now].t=a[now].tp=='F'?2:1;\n\t\t\t\t\t\tif(wxkj(now,j))break;\n\t\t\t\t\t\tif(a[j].tp=='Z'&&a[now].tp=='M') {\n\t\t\t\t\t\t\tkouxue(now,j);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint t=1;\n\t\t\t\t\t\twhile(1) {\n\t\t\t\t\t\t\tif(t==1) {\n\t\t\t\t\t\t\t\tif(!a[j].seach('K')) {\n\t\t\t\t\t\t\t\t\tkouxue(now,j);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else cerr<<'K'<<endl;\n\t\t\t\t\t\t\t} else if(!a[now].seach('K')) {\n\t\t\t\t\t\t\t\tkouxue(j,now),i=max(-1,i-1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else cerr<<'K'<<endl;\n\t\t\t\t\t\t\tt^=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti=-1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t} else if(a[now].pai[i]=='N'||a[now].pai[i]=='W') {\n\t\t\t\tchar ch=a[now].pai[i];\n\t\t\t\ta[now].qizhi(i);\n\t\t\t\tcerr<<ch<<endl;\n\t\t\t\tfor(int j=nxt[now]; j!=now; j=nxt[j]) {\n\t\t\t\t\tif(wxkj(now,j))continue;\n\t\t\t\t\tif(!a[j].seach(ch=='N'?'K':'D')) {\n\t\t\t\t\t\tif(a[j].tp=='M'&&!a[now].t)a[now].t=3;\n\t\t\t\t\t\tkouxue(now,j);\n\t\t\t\t\t} else cerr<<(ch=='N'?'K':'D')<<endl;\n\t\t\t\t}\n\t\t\t\ti=-1;\n\t\t\t}\n\t\t}\n\t\tnow=nxt[now];\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1568601723,
        "uid": 151722,
        "name": "hht2005",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "## SDOI\u6700\u6bd2\u7624\u9898\u76ee-------\u732a\u56fd\u6740\uff1f\n### \u6211\u771f\u5fc3\u5410\u69fd\u4e00\u53e5\u8fd9\u9898\u5b9a\u4e49\u53d8\u91cf\u90fd\u662f\u4e2a\u95ee\u9898\n\n\u4e09\u4f19\u4eba\uff1a\u5fe0\u81e3\uff0c\u53cd\u8d3c\uff0c\u4e3b\u516c\uff08\u5206\u6e05\u654c\u6211\u5173\u7cfb\uff09\n\n\u7b80\u5316\u9898\u610f\uff1a\n\n1.\u4e3b\u516c\u5fe0\u81e3\u4e00\u4f19\uff0c\u53cd\u8d3c\u5355\u72ec\u4e00\u4f19\n\n2.\u8868\u654c\u610f\uff1a\u5bf9\u81ea\u5df1\u4e0d\u540c\u4f19\u7684\u4eba\u4f7f\u7528\u6740\u3001\u51b3\u6216\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\uff08\u4eba\u5bb6\u51fa\u724c\u4f60\u65e0\u61c8\u53ef\u51fb\u4f60\u80af\u5b9a\u662f\u8868\u654c\u610f\u554a\uff09\n\n3.\u732e\u6bb7\u52e4\uff1a\u5c31\u662f\u5e2e\u4f60\u4f19\u7684\u4eba\u7528\u65e0\u61c8\u53ef\u51fb\u6321\u4f24\u5bb3\uff08\u8fd9\u4e2a\u9898\u4e0d\u80fd\u7ed9\u522b\u4eba\u7528\u6843\uff09\n\n4.\u884c\u52a8\u51c6\u5219\uff1a\u6bcf\u4e2a\u89d2\u8272\u5982\u679c\u624b\u91cc\u6709\u6843\u4e14\u751f\u547d\u503c\u672a\u6ee1\uff0c\u90a3\u4e48\u5fc5\u7136\u5403\u6389\uff1b\u6709\u5357\u732a\u5165\u4fb5\u3001\u4e07\u7bad\u9f50\u53d1\u3001\u5fc5\u7136\u4f7f\u7528\uff1b\u6709\u88c5\u5907\u5fc5\u7136\u88c5\u4e0a\uff1b\u53d7\u5230\u6740\u65f6\uff0c\u6709\u95ea\u5fc5\u7136\u5f03\u7f6e\uff1b\u54cd\u5e94\u5357\u732a\u5165\u4fb5\u6216\u8005\u4e07\u7bad\u9f50\u53d1\u65f6\u5019\uff0c\u6709\u6740/\u95ea\u5fc5\u7136\u5f03\u7f6e\uff1b\u4e0d\u4f1a\u5bf9\u672a\u8868\u660e\u8eab\u4efd\u7684\u732a\u732e\u6bb7\u52e4\uff08\u5305\u62ec\u81ea\u5df1\uff09\uff1b\uff08\u5176\u5b9e\u8fd9\u5c31\u662f\u624b\u91cc\u9664\u4e86\u6740\u5565\u90fd\u7528\uff09\n\n5.\u7c7b\u53cd\u8d3c\uff1a\u5c31\u662f\u6bd4\u5982\u5fe0\u81e3\u7528\u4e86\u5357\u86ee\u5165\u4fb5\uff0c\u4e3b\u516c\u6ca1\u6740\uff0c\u90a3\u4e48\n\u4e3b\u516c\u6263\u8840\uff0c\u51fa\u724c\u8005\u88ab\u6807\u4e3a\u7c7b\u53cd\u8d3c.\u4f46\u662f\u5982\u679c\u4e4b\u540e\u8fd9\u4e2a\u4eba\u5e2e\u4e3b\u516c\u7528\u4e86\u65e0\u61c8\u53ef\u51fb\uff0c\u4ed6\u5c31\u4f1a\u6210\u4e3a\u5fe0\u81e3\uff08\u8df3\u5fe0\uff09\uff0c\u5982\u679c\u4ed6\u6740\u4e3b\u516c\uff0c\u4ed6\u5c31\u6210\u4e3a\u4e86\u53cd\u8d3c\uff08\u8df3\u53cd\uff09\uff1b\u8df3\u53cd\u8df3\u5fe0\u540e\u8eab\u4efd\u4e0d\u518d\u6539\u53d8\uff08\u56e0\u4e3a\u4f60\u672c\u6765\u5c31\u662f\u8fd9\u4e2a\u8eab\u4efd\u554a\uff09\n\n6.\u4e3b\u516c\u51fa\u724c\u65f6\u4f1a\u5bf9\u53cd\u8d3c\u6216\uff01\u7c7b\u53cd\u8d3c\uff01\u8868\u654c\u610f\uff08\u6740\u4ed6\uff09\n\n7.\u5fe0\u81e3\u51fa\u724c\u65f6\u4f1a\u53cd\u8d3c\uff01\uff08\u6ca1\u6709\u7c7b\u53cd\u8d3c\uff09\uff01\u8868\u654c\u610f\n\n8.\u53cd\u8d3c\u4f1a\u4f18\u5148\u6740\u4e3b\u516c\uff0c\u6740\u4e0d\u4e86\u6740\u5fe0\u81e3\n\n9.\u6240\u6709\u4eba\u4e00\u5b9a\u4f1a\u5c3d\u529b\u5e2e\u81ea\u5df1\u4f19\u7684\u4eba\uff08\u732e\u6bb7\u52e4\uff09\n\n10.\u6570\u636e\u4e0d\u4fdd\u8bc1\u5361\u724c\u591f\u7528\uff01\uff01\uff01\uff08\u5636\u2014\u2014\u2014\uff09\n\n\u4ee5\u4e0a\u5341\u70b9\u8bb0\u4f4f\u5c31\u597d\uff0c\u5982\u679c\u4f60\u6ca1\u73a9\u8fc7\u4e09\u56fd\u6740\u9898\u610f\u4e0d\u660e\u767d\u4f46\u8bf7\u7ee7\u7eed\u770b\uff0c\u4f1a\u6709\u8bb2\u89e3\u7684\uff0c\u4e00\u4e9b\u7ec6\u8282\u6211\u4f1a\u5728\u4e0b\u9762\u7ed9\u51fa\n\n#### \u4ee3\u7801\u601d\u8def\uff08\u501f\u9274\u591c\u5200\u795e\u5341\u9999\u5927\u4f6c\uff09\n\n\u9996\u5148\u5b9a\u4e49\u53d8\u91cf\uff1a\n\n1.\u8840\u91cf\uff0c\u5361\u724c\u6570\uff0c\u8eab\u4efd\uff0c\u5361\u724c\u662f\u5565\uff0c\u8bf8\u845b\u8fde\u5f29\u662f\u5426\u88c5\u5907\n\n2.\u56e0\u4e3a\u6211\u4eec\u7528\u73af\u5f62\u94fe\u8868\uff08\u6570\u7ec4\u6a21\u62df\uff09\u4e00\u4e2a\u5708\uff0c\u5c31\u8981\u5b58\u8fd9\u4e2a\u4eba\u7684\u4e0a\u4e00\u4f4d\u548c\u4e0b\u4e00\u4f4d\uff0c\u5b58\u4e0a\u4e00\u4f4d\u662f\u56e0\u4e3a\u5982\u679c\u8fd9\u4e2a\u4eba\u6b7b\u4e86\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u4ed6\u4e0a\u4e00\u4f4d\u7684\u4e0b\u4e00\u4f4d\u53d8\u6210\u8fd9\u4e2a\u4eba\u7684\u4e0b\u4e00\u4f4d\uff08\u5c31\u662f\u66f4\u65b0\u73af\u72b6\u5173\u7cfb\uff0c\u56e0\u4e3a\u4ed6\u6b7b\u4e86\u5c31\u76f8\u5f53\u4e8e\u5220\u6389\u4e86\uff09\n\n```cpp\nstruct node{\n\tint hp,cs,id,next,last;\n        //hp\u8840\u91cf\uff0ccs\u5361\u724c\u6570\uff0cid\u662f\u8eab\u4efd,last\u662f\u4ed6\u4e0a\u4e00\u4f4d\u4eba\u7684\u7f16\u53f7\uff0cnext\u662f\u4ed6\u4e0b\u4e00\u4f4d\u4eba\u7684\u7f16\u53f7\n\tchar card[3000];\n        //card\u662f\u4ed6\u724c\u7684\u5c5e\u6027\n\tbool zgln;\n        //\u8bf8\u845b\u8fde\u5f29\u6709\u6ca1\u6709\n}a[20];\nchar kn[20],kpd[2300],s[10];//kn\u5b58\u73b0\u5728\u724c\u5c40\u6211\u4eec\u5df2\u66b4\u9732\u7684\u8fd9\u4e2a\u4eba\u662f\u5565\uff0c\u56e0\u4e3a\u6709\u7c7b\u53cd\u8d3c\u8fd9\u4e2a\u4e1c\u897f\uff0ckpd\u8868\u793a\u5361\u724c\u5806\u7684\u724c\uff0cs\u662f\u8f93\u5165\u7528\u7684\u5148\u4e0d\u7ba1\nint n,m,fz;//n\u8bb0\u5f55\u4eba\u6570,m\u8bb0\u5f55\u6478\u724c\u65f6\u5361\u724c\u5806\u7684\u5361\u724c\u7f16\u53f7,fz\u8bb0\u5f55\u53cd\u8d3c\u7684\u6570\u91cf\nbool flag;//\u8868\u793a\u6e38\u620f\u7ed3\u6ca1\u7ed3\u675f\uff0c\u5373\u53cd\u8d3c\u6570(fz)\u662f\u5426\u4e3a\u96f6\uff0c\u4e3b\u516c\u6b7b\u6ca1\u6b7b\n```\n\u5b9a\u4e49\u53d8\u91cf\u5b8c\u6210\u3002\u3002\u3002\n\n\u8bfb\u5165\u6570\u636e\uff1a\n\n\u6211\u4eec\u9996\u5148\u5b9a\u4e49\uff1a\n|  \u5b9a\u4e49|  \u5b57\u6bcd\u8868\u793a|\n| :----------- | :----------- |\n|  \u6843|  P|\n|  \u6740|  K|\n|  \u95ea|  D|\n|  \u51b3\u6597|  F|\n|  \u5357\u86ee\u5165\u4fb5|  N|\n|  \u4e07\u7bad\u9f50\u53d1|  W|\n|  \u65e0\u61c8\u53ef\u51fb|  J|\n|  \u8bf8\u845b\u8fde\u5f29|  Z|\n|  \u6ca1\u6709\uff08\u5361\u724c\uff09|  U|\n|  \u8eab\u4efd\u4e0d\u786e\u5b9a|  U|\n|  \u4e3b\u516c |M \n|  \u5fe0\u81e3 |Z\n|  \u53cd\u8d3c |F\n|  \u7c7b\u53cd\u8d3c|L\n\n\u597d\u4e86...\n```cpp\nscanf(\"%d%d\",&n,&m);\nfor(int i=1;i<=n;i++) a[i].next=i+1,a[i].last=i-1;\na[n].next=1;\na[1].last=n;//\u5b58\u524d\u540e\u4eba\nfor(int i=1;i<=n;i++){\n\tfor(int j=1;j<=2990;j++) a[i].card[j]='U';//\u521d\u59cb\u5316\n\t\tscanf(\"%s\",s);//\u8bfb\u5165\u6570\u636escanf\u4e0d\u8bc6\u522b\u7a7a\u683c\u8bfb\u5165\u7684\u5c31\u662f\u6bd4\u5982\"F \"\n\t\ta[i].id=s[0];\n\t\tfor(int j=1;j<=4;j++){\n\t\t\tscanf(\"%s\",s);\n\t\t\ta[i].card[j]=s[0];\n\t\t}\n\t\ta[i].cs=a[i].hp=4;//\u8840\u91cf\n\t\tif(a[i].id=='F') fz++;//\u53cd\u8d3c\u6570\n\t\ta[i].zgln=false;//\u521d\u59cb\u5316\u8bf8\u845b\u8fde\u5f29\n\t}\n\tfor(int i=2;i<=n;i++) \n\t\tkn[i]='U';//\u521d\u59cb\u5316\u8eab\u4efd\n\tkn[1]='M';//\u4e3b\u516c\u8eab\u4efd\u4e3aM\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%s\",s),kpd[m-i+1]=s[0];//\u5361\u724c\u5806\u4ece\u4e0a\u5230\u4e0b\n```\n\u6211\u4eec\u673a\u623f\u7b2c\u4e00\u7684\u5927\u4f6cnederland\u8bfb\u4e86\u6570\u636e\u5c31\u81ea\u95ed\u4e86\uff08\u6211\u4eec\u5f53\u7136\u4e5f\u81ea\u95ed\u4e86\uff09\n\n\u56de\u5408\u5f00\u59cb\uff1a\n```cpp\nvoid zgswcnm(){\n\tchar now;//\u5f53\u524d\u7684\u724c\n\tflag=true;\n\tif(fz) flag=false;//\u5982\u679c\u6ca1\u6709\u53cd\u8d3c\u5c31\u9000\u51fa\n\tif(flag) return;//\u5982\u679c\u6e38\u620f\u7ed3\u675f\u9000\u51fa\n\tfor(int i=1;i;i=a[i].next){//\u73af\u72b6\u65e0\u9650\u5faa\u73af\uff0c\u4e2d\u95f4\u4f60\u6539\u6210i!=-999\u4ec0\u4e48\u7684\u90fd\u53ef\u4ee5..\n\t\tmp(i),mp(i);//\u6478\u724c\uff0c\u53ef\u4ee5\u8df3\u8fc7\u4e00\u4f1a\u4f1a\u8bb2\n\t\tbool kill=true;//\u53ef\u4ee5\u6740\n\t\tfor(int j=1;j<=a[i].cs;j++)//\u904d\u5386\u8fd9\u4e2a\u4eba\u7684\u5361\u724c\n\t\t\tif(a[i].card[j]!='U'){\n\t\t\t\tif(!a[i].hp) break;//\u8840\u7a7a\n\t\t\t\tnow=a[i].card[j];\n\t\t\t\tif(now=='P'){//\u6843\u5c31\u5224\u65ad\u4e00\u4e0b\u76f4\u63a5\u7528\n\t\t\t\t\tif(a[i].hp!=4){\n\t\t\t\t\t\ta[i].hp++;\n\t\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='K'){//\u6740\n\t\t\t\t\tif(!kill&&!a[i].zgln) continue;//\u5982\u679c\u4e0d\u80fd\u6740\u5e76\u4e14\u6ca1\u6709\u8bf8\u845b\u8fde\u5f29\uff0c\u9000\u51fa\n\t\t\t\t\t//\u56e0\u4e3a\u88c5\u4e0d\u88c5\u8bf8\u845b\u8fde\u5f29\u653b\u51fb\u8303\u56f4\u90fd\u662f\u4e00\uff0c\u4e14\u770b\u770b\u9898\u91cc\u7684\u8bf4\u660e\uff0c\u5c31\u53ea\u80fd\u653b\u51fb\u4ed6\u4e0b\u4e00\u4e2a\u4eba\t\n    \t            if(a[i].id=='M'&&kn[a[i].next]!='L'&&kn[a[i].next]!='F') continue;//\u5982\u679c\u4e3b\u5fe0\u5c31\u4e0d\u6740\n\t\t\t\t\tif(a[i].id=='Z'&&kn[a[i].next]!='F') continue;//\u5982\u679c\u662f\u5fe0\u81e3\u5c31\u53ea\u80fd\u6740\u53cd\u8d3c\uff01\uff01\uff01\u5fe0\u81e3\u4e0d\u4f1a\u6740\u7c7b\u53cd\u8d3c\uff01\uff01\uff01\n\t\t\t\t\tif(a[i].id=='F'&&kn[a[i].next]!='Z'&&kn[a[i].next]!='M') continue;//\u5982\u679c\u53cd\u8d3c\u5c31\u53ea\u80fd\u6740\u5fe0\u81e3\n\t\t\t\t\ta[i].card[j]='U';//\u5361\u724c\u7528\u6389\u4e86\n\t\t\t\t\tKil(i,a[i].next);//\u51fd\u6570Kil\n\t\t\t\t\tkn[i]=a[i].id;//\u8fd9\u4e2a\u4eba\u8eab\u4efd\u66b4\u9732\u4e86\n\t\t\t\t\tkill=false;//\u6740\u4e0d\u4e86\u4e86\n\t\t\t\t\tif(flag) return;\n\t\t\t\t\tcontinue;//\u5224\u5b9a\n\t\t\t\t}\n\t\t\t\tif(now=='F'){//\u51b3\u6597\n\t\t\t\t\tif(a[i].id=='F'){\n\t\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\t\tjd(i,1);//\u8fd8\u8981\u5199\u51fd\u6570\uff08\u8fd9\u53cd\u8d3c\u51b3\u6597\u4e3b\u516c\uff09\n\t\t\t\t\t\tkn[i]=a[i].id;\n\t\t\t\t\t\tif(flag) return;\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfor(int k=a[i].next;k!=i;k=a[k].next){\n\t\t\t\t\t\tif((a[i].id=='M' && (kn[k]=='L' || kn[k]=='F')) || (a[i].id=='Z' && kn[k]=='F'))\n                        {\n                            //\u4e3b\u516c\u5fe0\u81e3\u65b9\uff08\u6ce8\u610f\uff01\u5fe0\u81e3\u4e0d\u4f1a\u6740\u7c7b\u53cd\u8d3c\uff01\uff09\n                            a[i].card[j]='U',jd(i,k);\n                            kn[i]=a[i].id;\n                            if(flag) return ;\n                            j=0;\n                            break;\n                        }\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='N'){//\u5357\u86ee\u5165\u4fb5\u51fd\u6570\n\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\tnmrq(i);\n\t\t\t\t\tif(flag) return;\n\t\t\t\t\tj=0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='W'){//\u4e07\u7bad\u9f50\u53d1\u51fd\u6570\n\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\twjqf(i);\n\t\t\t\t\tif(flag) return;\n\t\t\t\t\tj=0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='Z'){//\u8bf8\u845b\u8fde\u5f29\n\t\t\t\t\ta[i].zgln=true;//\u88c5\u5907\n\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\tj=0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\n```\n\n\u6211\u4eec\u7edf\u8ba1\u4e00\u4e0b\u6211\u4eec\u8981\u5199\u51e0\u4e2a\u51fd\u6570\uff1a\n\n1.mp\u51fd\u6570\uff08\u6478\u724c\uff09\n\n2.Kil\u51fd\u6570\uff08\u6740\uff09\n\n3.js\u51fd\u6570\uff08\u51fb\u6740\uff09\n\n4.jd\u51fd\u6570\uff08\u51b3\u6597\uff09\n\n5.nmrq\u51fd\u6570\uff08\u5357\u86ee\u5165\u4fb5\uff09\n\n6.wjqf\u51fd\u6570\uff08\u4e07\u7bad\u9f50\u53d1\uff09\n\n\u597d\u5427\n\n1.mp\u51fd\u6570\uff08\u6478\u724c\uff09\uff1a\n```cpp\nvoid mp(int x){\n\tif(!m) m++;\n\ta[x].card[++a[x].cs]=kpd[m];\n    m--;\n}\n```\n\n\u8fd9\u4e2a\u5e94\u8be5\u53ef\u4ee5\u7406\u89e3\u5427\n\n2.Kil\u51fd\u6570\uff08\u6740\uff09\uff1a\n```cpp\nvoid Kil(int x1,int x2){//x1\u6740x2\n    for(int i=1;i<=a[x2].cs;i++)\n        if(a[x2].card[i]=='D'){//x2\u6709\u95ea \n            a[x2].card[i]='U';\n            return ;\n        }\n    a[x2].hp--;\n    if(!a[x2].hp) js(x1,x2);\n    //\u6bcf\u6b21\u9020\u6210\u4f24\u5bb3\u90fd\u8981\u5224\u65ad\u88ab\u653b\u51fb\u8005\u662f\u5426\u7a7a\u8840\n    //\u7136\u540e\u8fdb\u5165\u3010\u51fb\u6740\u3011\u73af\u8282 \uff08\u51fb\u6740\u5199\u5728Kil\u524d\uff09\n}\n```\n3.js\u51fd\u6570\uff08\u51fb\u6740\uff09\uff1a\n```cpp\nvoid js(int x1,int x2){//x1\u51fb\u6740x2\n    for(int i=1;i<=a[x2].cs;i++)\n        if(a[x2].card[i]=='P'){//\u5224\u65ad\u6709\u6ca1\u6709\u6843\n            a[x2].card[i]='U';\n            a[x2].hp++;\n            return;\n        }\n    a[a[x2].next].last=a[x2].last;//\u5982\u679c\u8fd9\u4eba\u6b7b\u4e86\u5c31\u66f4\u65b0\u73af\u72b6\u5173\u7cfb\n    a[a[x2].last].next=a[x2].next;\n    if(x2==1){\n\tflag=1;//\u5982\u679c\u4e3b\u516c\u6b7b\u4e86\n\treturn;\n\t}\n    if(a[x2].id=='F') \n\t\tfz--;\n    if(!fz){//\u5982\u679c\u53cd\u8d3c\u6b7b\u4e86\n\t\tflag=1;\n\t\treturn;\n\t}\n    //\u6ca1\u6709\u53cd\u8d3c\u6e38\u620f\u7ed3\u675f \n    //\u6ce8\u610f\uff01\uff01\uff01\uff01\uff01\u6e38\u620f\u7ed3\u675f\u4e0d\u80fd\u6478\u724c\uff0c\u4e00\u5b9a\u5199\u5728\u524d\u9762\uff01\uff01\uff01\uff01\uff01\n    if(a[x2].id=='F') \n\t\tmp(x1),mp(x1),mp(x1);\n    //\u51fb\u6740\u53cd\u8d3c\u6478\u4e09\u5f20\u724c \n    if(a[x2].id=='Z'&&a[x1].id=='M') \n\t\ta[x1].cs=0,a[x1].zgln=false;\n    //\u5982\u679c\u4e3b\u516c\u628a\u5fe0\u81e3\u6740\u4e86\u90a3\u5c31\u8981\u5f03\u724c \n}\n```\n\u63a5\u4e0b\u6765\u662f\u4e09\u5f20\u9526\u56ca\u724c\u4ee5\u53ca\u65e0\u61c8\u53ef\u51fb\uff08\u6076\u5fc3\uff09\n\n\u65e0\u61c8\u53ef\u51fb\uff1a\n\n```cpp\nbool wxkj(int x1,int x2,int x3){//\u8868\u793a\u4ecex2\u5f00\u59cb\u662f\u5426\u6709\u4eba\u662f\u5426\u65e0\u61c8\u53ef\u51fbx1\u5e76\u5411\u4e0b\u9012\u5f52\n\tint i=x1;\n    //\u6211\u4eec\u8bb0\u5f55x1\n\twhile(true){\n\t\tif(x3==1){//\u6211\u8ba4\u4e3ax3==1\u8868\u793a\u7b2c\u4e00\u6b21\u56e0\u4e3a\u88ab\u4f7f\u7528\u9526\u56ca\u724c\u7684\u4eba\u4e00\u5b9a\u4f1a\u8bd5\u56fe\u901a\u8fc7\u81ea\u5df1\u6216\u81ea\u5df1\u4e00\u4f19\u7684\u4eba\u8bf7\u6c42\u65e0\u61c8\u53ef\u51fb\n\t\t\tif(kn[x2]==a[i].id||(kn[x2]=='M'&&a[i].id=='Z')||(kn[x2]=='Z'&&a[i].id=='M')){//\u5982\u679c\u662f\u4e00\u4f19\u7684\n\t\t\t\tfor(int j=1;j<=a[i].cs;j++){\n\t\t\t\t\tif(a[i].card[j]=='J'){\n\t\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\t\tkn[i]=a[i].id;//\u627e\u5230\u4e86\u65e0\u61c8\u53ef\u51fb\u5e76\u4f7f\u7528\n\t\t\t\t\t\treturn !wxkj(i,x1,0);//\u90a3\u4e48\u6211\u4eec\u770b\u662f\u5426\u654c\u65b9\u4f1a\u65e0\u61c8\u53ef\u51fb\u6211\u4eec\u7684\u65e0\u61c8\u53ef\u51fb\uff08\u7384\u5b66\uff09\uff0c\u8fd4\u56de\u503c\u4e0b\u9762\u8bb2\u89e3\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(((a[i].id=='M' || a[i].id=='Z') && kn[x1]=='F') || (a[i].id=='F' && (kn[x1]=='M' || kn[x1]=='Z'))){//\u4e0d\u662f\u4e00\u4f19\u7684\n\t\t\t\tfor(int j=1;j<=a[i].cs;j++){\n\t\t\t\t\tif(a[i].card[j]=='J'){\n\t\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\t\tkn[i]=a[i].id;\n\t\t\t\t\t\treturn !wxkj(i,x1,0);//\u90a3\u6211\u4eec\u627e\u5f00\u59cb\u7684\u53cb\u519b\u662f\u4e0d\u662f\u5c31\u76f8\u5f53\u4e8e\u627e\u4ed6\u654c\u519b\u7684\u654c\u519b\uff1f\uff08\u770b\u4e0b\u9762\uff09\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti=a[i].next;//\u66f4\u65b0i,\u5982\u679c\u4e0b\u4e00\u6b21while\u5faa\u73af\u65f6i\u65f6\u521a\u624d\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u4eba\u7684\u5730\u65b9,\u90a3i\u6709\u65e0\u61c8\u53ef\u51fb\u5c31\u4e00\u5b9a\u4f1a\u51fa\uff0c\u5f80\u8fd4\u9012\u5f52\u4e0b\u53bb\n\t\tif(i==x1) break;//\u5982\u679c\u627e\u4e86\u4e00\u904d\uff0c\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\uff08\u654c\u519b\u4e14\u6709\u65e0\u61c8\u53ef\u51fb\uff09\u7684\u4eba\uff0c\u5c31\u9000\u51fa\n\t}\n\treturn false;//\u8fd9\u4e2a\u5c31\u5f88NB\uff0c\u6bd4\u5982\u6211\u4eec\u8fd4\u56de\u65f6\u8fd4\u56de\u7684\u662ffalse\uff0c\u90a3\u4e48\u8868\u793a\u6211\u627e\u654c\u519b\u6ca1\u6210\u529f\uff0c\u5c31\u53ef\u4ee5\u7528\u8fd9\u5f20\u724c\uff0c\u8fd4\u56defalse.....\u4f60\u53ef\u4ee5\u81ea\u5df1\u6a21\u62df\u6a21\u62df\uff0c\u53cd\u590d\u53d6\u53cd\u3002\u5982\u679c\u8fd4\u56de\u6570\u662f\u5947\u6570\uff0c\u5c31\u8bf4\u660e\u8fd9\u5f20\u724c\u88ab\u65e0\u61c8\u53ef\u51fb\u6389\u4e86\uff0c\u53cd\u4e4b\u6ca1\u6709\n}\n```\n\n\u8fd9\u662f\u591c\u5200\u795e\u5341\u9999\u5927\u4f6c\u4ee3\u7801\u6211\u8499\u4e86\uff08\u592a\u5f3a\u4e86 tql orz\uff09...\n\n\u771f\u7684\u8fd9\u4e2a\u6ca1\u6709\u70b9\u4e1c\u897f\u5199\u4e0d\u51fa\u6765...\n\n\u597d\u4e86\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5c31\u7b80\u5355\u4e86\n\n4.jd\u51fd\u6570\uff08\u51b3\u6597\uff09\uff1a\n\n```cpp\nvoid jd(int x1,int x2){\n\tint i,j,k;\n\tif(wxkj(x1,x2,1)) return;//\u65e0\u61c8\u53ef\u51fb\u5224\u65ad\n\tif(x1==1&&a[x2].id=='Z'){\n\t\ta[x2].hp--;\n\t\tif(!a[x2].hp) js(x1,x2);//\u7b2c\u4e00\u904d\u626b\u4e3b\u516c\u6740\u5fe0\u81e3\u5176\u5b9e\u53ef\u4ee5\u5199\u5728\u51fd\u6570\u91cc\u9762\n\t\treturn;\n\t}\n\tj=k=1;//j\u5b58x1,k\u5b58x2\n\twhile(true){\n\t\twhile(a[x2].card[j]!='K'&&j<=a[x2].cs) j++;\n\t\tif(j>a[x2].cs){//\u6ca1\u627e\u5230\n\t\t\ta[x2].hp--;\n\t\t\tif(!a[x2].hp) js(x1,x2);\n\t\t\treturn;\n\t\t}\n\t\telse a[x2].card[j]='U';\n\t\twhile(a[x1].card[k]!='K'&&k<=a[x1].cs) k++;\n\t\tif(k>a[x1].cs){//\u4e00\u6837\n\t\t\ta[x1].hp--;\n\t\t\tif(!a[x1].hp) js(x2,x1);\n\t\t\treturn;\n\t\t}\n\t\telse a[x1].card[k]='U';\n\t}\n}\n```\n\n\n5.nmrq\u51fd\u6570\uff08\u5357\u86ee\u5165\u4fb5\uff09\uff1a\n\n```cpp\nvoid nmrq(int x1){\n\tfor(int x2=a[x1].next;x2!=x1;x2=a[x2].next){\n\t\tif(!wxkj(x1,x2,1)){//\u5982\u679c\u6ca1\u88ab\u65e0\u61c8\u53ef\u51fb\n\t\t\tint i;\n\t\t\tfor(i=1;i<=a[x2].cs;i++)\n\t\t\t\tif(a[x2].card[i]=='K'){\n\t\t\t\t\ta[x2].card[i]='U';\n\t\t\t\t\tbreak;//\u627e\u6740\n\t\t\t\t}\n\t\t\tif(i>a[x2].cs){\n\t\t\t\ta[x2].hp--;//\u5982\u679c\u6ca1\u6740\n\t\t\t\tif(x2==1&&kn[x1]=='U') kn[x1]='L';\n\t\t\t\tif(!a[x2].hp) js(x1,x2);//\u4e00\u5b9a\u5224\u65ad\u51fb\u6740\n\t\t\t\tif(flag) return;\n\t\t\t\t}\n\t\t}\n\t}\n}\n```\n\n6.wjqf\u51fd\u6570\uff08\u4e07\u7bad\u9f50\u53d1\uff09\uff1a\uff08\u4e0d\u89e3\u91ca\u4e86\u548c\u5357\u86ee\u5165\u4fb5\u4e00\u6837\uff09\n\n```cpp\nvoid wjqf(int x1){\n\tfor(int x2=a[x1].next;x2!=x1;x2=a[x2].next){\n\t\tif(!wxkj(x1,x2,1)){\n\t\t\tint i;\n\t\t\tfor(i=1;i<=a[x2].cs;i++)\n\t\t\t\tif(a[x2].card[i]=='D'){\n\t\t\t\t\ta[x2].card[i]='U';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(i>a[x2].cs){\n\t\t\t\ta[x2].hp--;\n\t\t\t\tif(x2==1&&kn[x1]=='U') kn[x1]='L';\n\t\t\t\tif(!a[x2].hp) js(x1,x2);\n\t\t\t\tif(flag) return;\n\t\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u7ec8\u4e8e\u5199\u5b8c\u4e86....\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n/*\n\u6843 P\n\u6740 K\n\u95ea D\n\u51b3\u6597 F\n\u5357\u86ee\u5165\u4fb5 N\n\u4e07\u7bad\u9f50\u53d1 W\n\u65e0\u61c8\u53ef\u51fb J\n\u8bf8\u845b\u8fde\u5f29 Z\n*/\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nstruct node{\n\tint hp,cs,id,next,last;\n\tchar card[3000];\n\tbool zgln;\n}a[20];\nchar kn[20],kpd[2300],s[10];\nint n,m,fz;\nbool flag;\nvoid mp(int x){\n\tif(!m) m++;\n\ta[x].card[++a[x].cs]=kpd[m];\n    m--;\n}\nvoid js(int x1,int x2){//x1\u51fb\u6740x2\n    for(int i=1;i<=a[x2].cs;i++)\n        if(a[x2].card[i]=='P'){\n            a[x2].card[i]='U';\n            a[x2].hp++;\n            return;\n        }\n    a[a[x2].next].last=a[x2].last;\n    a[a[x2].last].next=a[x2].next;\n    if(x2==1){\n\tflag=1;\n\treturn;\n\t}\n    if(a[x2].id=='F') \n\t\tfz--;\n    if(!fz){\n\t\tflag=1;\n\t\treturn;\n\t}\n    //\u6ca1\u6709\u53cd\u8d3c\u6e38\u620f\u7ed3\u675f \n    if(a[x2].id=='F') \n\t\tmp(x1),mp(x1),mp(x1);\n    //\u51fb\u6740\u53cd\u8d3c\u6478\u4e09\u5f20\u724c \n    if(a[x2].id=='Z'&&a[x1].id=='M') \n\t\ta[x1].cs=0,a[x1].zgln=false;\n    //\u5982\u679c\u4e3b\u516c\u628a\u5fe0\u81e3\u6740\u4e86\u90a3\u5c31\u8981\u5f03\u724c \n}\nvoid Kil(int x1,int x2)\n//\u3010\u6740\u3011 \n{\n    for(int i=1;i<=a[x2].cs;i++)\n        if(a[x2].card[i]=='D'){//x2\u6709\u95ea \n            a[x2].card[i]='U';\n            return ;\n        }\n    a[x2].hp--;\n    if(!a[x2].hp) js(x1,x2);\n    //\u6bcf\u6b21\u9020\u6210\u4f24\u5bb3\u90fd\u8981\u5224\u65ad\u88ab\u653b\u51fb\u8005\u662f\u5426\u7a7a\u8840\n    //\u7136\u540e\u8fdb\u5165\u3010\u51fb\u6740\u3011\u73af\u8282 \n}\nbool wxkj(int x1,int x2,int x3){\n\tint i=x1;\n\twhile(true){\n\t\tif(x3==1){\n\t\t\tif(kn[x2]==a[i].id||(kn[x2]=='M'&&a[i].id=='Z')||(kn[x2]=='Z'&&a[i].id=='M')){\n\t\t\t\tfor(int j=1;j<=a[i].cs;j++){\n\t\t\t\t\tif(a[i].card[j]=='J'){\n\t\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\t\tkn[i]=a[i].id;\n\t\t\t\t\t\treturn !wxkj(i,x1,0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(((a[i].id=='M' || a[i].id=='Z') && kn[x1]=='F') || (a[i].id=='F' && (kn[x1]=='M' || kn[x1]=='Z'))){\n\t\t\t\tfor(int j=1;j<=a[i].cs;j++){\n\t\t\t\t\tif(a[i].card[j]=='J'){\n\t\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\t\tkn[i]=a[i].id;\n\t\t\t\t\t\treturn !wxkj(i,x1,0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti=a[i].next;\n\t\tif(i==x1) break;\n\t}\n\treturn false;\n}\nvoid nmrq(int x1){\n\tfor(int x2=a[x1].next;x2!=x1;x2=a[x2].next){\n\t\tif(!wxkj(x1,x2,1)){\n\t\t\tint i;\n\t\t\tfor(i=1;i<=a[x2].cs;i++)\n\t\t\t\tif(a[x2].card[i]=='K'){\n\t\t\t\t\ta[x2].card[i]='U';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(i>a[x2].cs){\n\t\t\t\ta[x2].hp--;\n\t\t\t\tif(x2==1&&kn[x1]=='U') kn[x1]='L';\n\t\t\t\tif(!a[x2].hp) js(x1,x2);\n\t\t\t\tif(flag) return;\n\t\t\t\t}\n\t\t}\n\t}\n}\nvoid wjqf(int x1){\n\tfor(int x2=a[x1].next;x2!=x1;x2=a[x2].next){\n\t\tif(!wxkj(x1,x2,1)){\n\t\t\tint i;\n\t\t\tfor(i=1;i<=a[x2].cs;i++)\n\t\t\t\tif(a[x2].card[i]=='D'){\n\t\t\t\t\ta[x2].card[i]='U';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(i>a[x2].cs){\n\t\t\t\ta[x2].hp--;\n\t\t\t\tif(x2==1&&kn[x1]=='U') kn[x1]='L';\n\t\t\t\tif(!a[x2].hp) js(x1,x2);\n\t\t\t\tif(flag) return;\n\t\t\t\t}\n\t\t}\n\t}\n}\nvoid jd(int x1,int x2){\n\tint i,j,k;\n\tif(wxkj(x1,x2,1)) return;\n\tif(x1==1&&a[x2].id=='Z'){\n\t\ta[x2].hp--;\n\t\tif(!a[x2].hp) js(x1,x2);\n\t\treturn;\n\t}\n\tj=k=1;\n\twhile(true){\n\t\twhile(a[x2].card[j]!='K'&&j<=a[x2].cs) j++;\n\t\tif(j>a[x2].cs){\n\t\t\ta[x2].hp--;\n\t\t\tif(!a[x2].hp) js(x1,x2);\n\t\t\treturn;\n\t\t}\n\t\telse a[x2].card[j]='U';\n\t\twhile(a[x1].card[k]!='K'&&k<=a[x1].cs) k++;\n\t\tif(k>a[x1].cs){\n\t\t\ta[x1].hp--;\n\t\t\tif(!a[x1].hp) js(x2,x1);\n\t\t\treturn;\n\t\t}\n\t\telse a[x1].card[k]='U';\n\t}\n}\nvoid zgswcnm(){\n\tchar now;\n\tflag=true;\n\tif(fz) flag=false;\n\tif(flag) return;\n\tfor(int i=1;i!=-999;i=a[i].next){\n\t\tmp(i),mp(i);\n\t\tbool kill=true;\n\t\tfor(int j=1;j<=a[i].cs;j++)\n\t\t\tif(a[i].card[j]!='U'){\n\t\t\t\tif(!a[i].hp) break;\n\t\t\t\tnow=a[i].card[j];\n\t\t\t\tif(now=='P'){\n\t\t\t\t\tif(a[i].hp!=4){\n\t\t\t\t\t\ta[i].hp++;\n\t\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='K'){\n\t\t\t\t\tif(!kill&&!a[i].zgln) continue;\n\t\t\t\t\tif(a[i].id=='M'&&kn[a[i].next]!='L'&&kn[a[i].next]!='F') continue;\n\t\t\t\t\tif(a[i].id=='Z'&&kn[a[i].next]!='F') continue;\n\t\t\t\t\tif(a[i].id=='F'&&kn[a[i].next]!='Z'&&kn[a[i].next]!='M') continue;\n\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\tKil(i,a[i].next);\n\t\t\t\t\tkn[i]=a[i].id;\n\t\t\t\t\tkill=false;\n\t\t\t\t\tif(flag) return;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='F'){\n\t\t\t\t\tif(a[i].id=='F'){\n\t\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\t\tjd(i,1);\n\t\t\t\t\t\tkn[i]=a[i].id;\n\t\t\t\t\t\tif(flag) return;\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfor(int k=a[i].next;k!=i;k=a[k].next){\n\t\t\t\t\t\tif((a[i].id=='M' && (kn[k]=='L' || kn[k]=='F')) || (a[i].id=='Z' && kn[k]=='F'))\n                        {\n                            a[i].card[j]='U',jd(i,k);\n                            kn[i]=a[i].id;\n                            if(flag) return ;\n                            j=0;\n                            break;\n                        }\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='N'){\n\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\tnmrq(i);\n\t\t\t\t\tif(flag) return;\n\t\t\t\t\tj=0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='W'){\n\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\twjqf(i);\n\t\t\t\t\tif(flag) return;\n\t\t\t\t\tj=0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(now=='Z'){\n\t\t\t\t\ta[i].zgln=true;\n\t\t\t\t\ta[i].card[j]='U';\n\t\t\t\t\tj=0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) a[i].next=i+1,a[i].last=i-1;\n\ta[n].next=1;\n\ta[1].last=n;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=2990;j++) a[i].card[j]='U';\n\t\tscanf(\"%s\",s);\n\t\ta[i].id=s[0];\n\t\tfor(int j=1;j<=4;j++){\n\t\t\tscanf(\"%s\",s);\n\t\t\ta[i].card[j]=s[0];\n\t\t}\n\t\ta[i].cs=a[i].hp=4;\n\t\tif(a[i].id=='F') fz++;\n\t\ta[i].zgln=false;\n\t}\n\tfor(int i=2;i<=n;i++) \n\t\tkn[i]='U';\n\tkn[1]='M';\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%s\",s),kpd[m-i+1]=s[0];\n\tzgswcnm();\n\tif(a[1].hp>0) printf(\"MP\\n\");\n\telse printf(\"FP\\n\");//\u8f93\u51fa\u5224\u65ad\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[i].hp<=0) printf(\"DEAD\\n\");\n\t\telse{\n\t\t\tfor(int j=1;j<=a[i].cs;j++)\n\t\t\t\tif(a[i].card[j]!='U')\n\t\t\t\t\tprintf(\"%c \",a[i].card[j]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\t\n```\n\n## \u795d\u5927\u5bb6CSP NOI XXXOI RP++! ! !",
        "postTime": 1567678573,
        "uid": 221615,
        "name": "S_S_H",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "## \u6b64\u9898\u5c31\u662f\u4e00\u4e2a\u5927\u6a21\u62df\uff0c\u6ca1\u6709\u4ec0\u4e48\u592a\u8003\u9a8c\u7b97\u6cd5\u7684\u5730\u65b9\u3002  \n\u5bf9\u4e8e\u539f\u7248\u4e09\u56fd\u6740\u800c\u8a00\uff0c\u76f8\u5dee\u7684\u5730\u65b9\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\uff0c\u6211\u5148\u4e00\u4e00\u5217\u4e3e\u51fa\u6765\uff1a\n- \u6843\u53ea\u80fd\u7ed9**\u81ea\u5df1**\u4f7f\u7528\uff1b\n- \u6ca1\u6709\u5185\u5978\u3001\u9632\u5177\u3001\u522b\u7684\u6b66\u5668\u548c\u4e00\u4e9b\u522b\u7684\u9526\u56ca\u724c\uff1b\n- \u8840\u91cf\u4e0a\u9650\u59cb\u7ec8\u4e3a4\u70b9\uff0c**\u4e0d\u8bba\u662f\u4ec0\u4e48\u8eab\u4efd**\uff1b\n- \u73a9\u5bb6\u4e4b\u95f4\u7684\u8ddd\u79bb\u8ba1\u7b97\u53ea\u80fd\u6cbf\u9006\u65f6\u9488\u6765\u8ba1\u7b97\uff0c\u5373\u73a9\u5bb61\u5230\u73a9\u5bb62\u7684\u8ddd\u79bb\u4e3a1\uff0c\u53ef\u662f\u73a9\u5bb62\u5230\u73a9\u5bb61\u7684\u8ddd\u79bb\u4e3an-1\uff1b\uff08\u6240\u6709\u73a9\u5bb6\u5b58\u6d3b\u72b6\u51b5\u4e0b\uff09\n\n\u5f53\u7136\u8fd9\u9053\u9898\u76ee\u5751\u70b9\u4e5f\u4e0d\u5c11\uff1a\n- **\u724c\u5806\u662f\u53ef\u80fd\u88ab\u62bd\u7a7a\u7684**\uff0c\u8fd9\u65f6\u5019\uff0c\u4fbf\u9700\u8981 ~~\u53cd\u4eba\u7c7b\u5730~~ \u4e00\u76f4\u62bd**\u724c\u5806\u7684\u6700\u540e\u4e00\u5f20\u724c**\uff08\u8fd9\u662f\u9898\u76ee\u6ca1\u6709\u63d0\u5230\u7684\uff09\uff1b\n- **\u5bf9\u4e8e\u53cd\u732a\u800c\u8a00\uff0c\u51b3\u6597\u65e0\u8bba\u5982\u4f55\u90fd\u8981\u7784\u51c6\u4e3b\u732a**\uff0c\u800c\u4e0d\u4f1a\u7784\u51c6\u5df2\u7ecf\u8df3\u5fe0\u7684\u5fe0\u732a\uff08\u56e0\u4e3a\u51b3\u6597\u65e0\u8ddd\u79bb\u9650\u5236\uff09\uff1b\u5bf9\u4e8e\u4e3b\u732a\u800c\u8a00\uff0c\u51b3\u6597\u4f1a\u4ece\u4ed6\u81ea\u8eab\u5f00\u59cb\uff0c\u9006\u65f6\u9488\u9010\u4e00\u5bfb\u627e**\u6ca1\u6709\u8df3\u8eab\u4efd\u7684\u7c7b\u53cd\u732a**\u6216\u8005**\u5df2\u7ecf\u8df3\u53cd\u7684\u53cd\u732a**\uff1b\n- \u5bf9\u4e8e\u4e00\u5f20\u9526\u56ca\u724c\u7684\u65e0\u61c8\u53ef\u51fb\u8be2\u95ee\uff0c\u662f\u4ece**\u51fa\u8fd9\u5f20\u9526\u56ca\u724c\u7684\u73a9\u5bb6\u5f00\u59cb\uff0c\u6cbf\u9006\u65f6\u9488\u65b9\u5411\u4f9d\u6b21\u83b7\u5f97\u65e0\u61c8\u53ef\u51fb\u7684\u51fa\u724c\u673a\u4f1a\u6743**\uff1b\n- \u4e00\u822c\u800c\u8a00\uff0c\u9664\u975e\u51fa\u7684\u724c\u4e3a\u6843\u6216\u8005\u6740\uff0c\u5426\u5219\u524d\u9762\u626b\u8fc7\u7684\u724c\u6709\u53ef\u80fd\u4f1a\u53ef\u4ee5\u51fa\uff1b\uff08\u9526\u56ca\u724c\u53ef\u4ee5\u901a\u8fc7\u65e0\u61c8\u53ef\u51fb\u6765\u8df3\u8eab\u4efd\uff0c\u8bf8\u845b\u8fde\u5f29\u4f1a\u4f7f\u4e4b\u524d\u7684\u6740\u53ef\u4ee5\u4f7f\u7528\uff0c\u53c8\u6216\u662f\u5fe0\u732a\u901a\u8fc7\u4e00\u4e2a\u5357\u86ee\u6216\u8005\u4e07\u7bad\u8ba9\u53cd\u732a\u8df3\u8eab\u4efd\uff0c\u8ba9\u524d\u9762\u7684\u51b3\u6597\u6709\u76ee\u6807\u2026\u2026\uff09\n- \u540c\u4e0a\uff0c\u5982\u679c\u4f60\u51fa\u4e86**\u6740\u3001\u65e0\u61c8\u53ef\u51fb\u3001\u51b3\u6597**\uff0c\u4fbf\u610f\u5473\u7740\u4f60\u8df3\u4e86\u8eab\u4efd\uff1b\n- \u65e0\u61c8\u53ef\u51fb\u7684\u64cd\u4f5c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e24\u4e2a\u6d3e\u5728\u4e92\u76f8\u6597\u4e89\uff1b\uff08\u4e3b\u732a\u548c\u5fe0\u732a\u4e3a\u4e00\u6d3e\uff0c\u53cd\u732a\u4e3a\u4e00\u6d3e\uff09\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u76ee\u91cc\u9762\u7684\u9526\u56ca\u9664\u65e0\u61c8\u53ef\u51fb\u5916\u90fd\u662f\u4f1a\u9020\u6210\u4f24\u5bb3\u7684\uff0c\u6240\u4ee5\u770b\u89c1\u81ea\u5df1\u7684\u961f\u53cb\u5e76\u6ca1\u6709\u88ab\u65e0\u61c8\u6389\u7684\u8bdd\uff0c\u5c31\u4e00\u5b9a\u8981\u732e\u6bb7\u52e4\uff0c\u540c\u7406\uff0c\u770b\u89c1\u654c\u4eba\u88ab\u65e0\u61c8\u6389\u4e86\uff0c\u5c31\u8981\u53bb\u8868\u654c\u610f\uff09\n- **\u6709\u53ef\u80fd\u4e00\u5f00\u5c40\u4fbf\u6ca1\u6709\u53cd\u732a**\uff0c\u8fd9\u9700\u8981\u7279\u6b8a\u5904\u7406\uff1b\n- \u5982\u679c\u5bf9\u5c40\u4e00\u7ed3\u675f\uff0c\u6240\u6709\u7684\u4e8b\u4ef6\u90fd\u8981\u7acb\u523b\u7ed3\u675f\uff0c\u8fd9\u5305\u62ec**\u6740\u6b7b\u53cd\u732a\u7684\u6478\u4e09\u5f20\u724c**\u3001**\u672a\u7ed3\u7b97\u5b8c\u6bd5\u7684\u5357\u86ee\u6216\u8005\u4e07\u7bad**\uff1b\n- \u4efb\u4f55\u4e00\u5f20\u4f1a\u9020\u6210\u4f24\u5bb3\u7684\u724c\u90fd\u53ef\u80fd\u5f15\u8d77\u6fd2\u6b7b\uff0c\u8fdb\u4e00\u6b65\u4e5f\u5c31\u53ef\u80fd\u5f15\u8d77\u724c\u5c40\u7684\u7ed3\u675f\uff0c\u6240\u4ee5\u8981\u5c06\u8fd9\u4e2a\u5904\u7406\u597d\uff1b\n- \u5fe0\u732a\u53d7\u5230\u4e86\u4e3b\u732a\u7684\u51b3\u6597\uff0c\u8981\u4e0d\u7136\u5c31\u662f\u7528\u65e0\u61c8\u53ef\u51fb\uff0c\u8981\u4e0d\u7136\u5c31\u6263\u4e00\u6ef4\u8840\uff1b\n- \u7c7b\u53cd\u732a\u53ea\u662f\u5bf9\u4e3b\u732a\u6709\u6548\uff0c\u540c\u6837\u7684\uff0c\u7c7b\u53cd\u732a\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u53cd\u732a\u7684\u961f\u53cb\uff1b\n- \u6ce8\u610f\u662f\u5426\u62e5\u6709\u8bf8\u845b\u8fde\u5f29\uff0c\u8fd9\u5bf9\u4e8e\u6740\u7684\u6570\u91cf\u5f88\u91cd\u8981\uff1b\n- \u5bf9\u4e8e\u4ee5\u4e0b\u60c5\u51b5\uff0c\u9700\u8981\u8df3\u8fc7\u5df2\u7ecf\u6b7b\u4ea1\u7684\u73a9\u5bb6\uff1a\u5357\u86ee\u548c\u4e07\u7bad\u7684\u5168\u573a\u4f24\u5bb3\u3001\u6740\u548c\u51b3\u6597\u7684\u5bf9\u8c61\u7684\u5bfb\u627e\u3001\u65e0\u61c8\u53ef\u51fb\u7684\u8be2\u95ee\uff0c\u5982\u679c\u6ca1\u6709\u8df3\u8fc7\uff0c\u4f1a\u6781\u5927\u5f71\u54cd\u7ed3\u679c\u3002\n\n## \u597d\u4e86\uff0c\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u518d\u8bf4\u4e00\u4e9b\u505a\u8fd9\u9053\u9898\u76ee\u7684\u6280\u5de7\uff1a\n- \u5c06\u4e00\u4e2a\u73a9\u5bb6\u7684\u6240\u6709\u76f8\u5173\u7684\u4e1c\u897f\u90fd\u7528\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\uff0c\u65b9\u4fbf\u8c03\u7528\uff1b\n- \u5c06\u5bf9\u7acb\u7684\u8eab\u4efd\u7528\u51fd\u6570\u6765\u5b58\u50a8\uff0c\u540e\u9762\u5224\u65ad\u662f\u5426\u5bf9\u7acb\u7684\u8bdd\u76f4\u63a5\u8c03\u7528\u5373\u53ef\uff1b\n- \u5b58\u50a8\u5361\u724c\u548c\u724c\u5806\u7528$string$\u4f1a\u597d\u5f88\u591a\uff0c\u56e0\u4e3a$string$\u6709$+$\u3001$erase$\u7b49~~\u4eae\u778e\u773c\u7684~~\u65b9\u4fbf\u7684\u64cd\u4f5c\uff0c\u800c\u4e14\u6548\u7387\u8fd8\u51fa\u5947\u7684\u5feb\uff1b\n- \u5c06\u51fa\u724c\u8fd9\u4e2a\u884c\u4e3a\u7528\u51fd\u6570\u6765\u4ee3\u66ff\uff0c\u4e0d\u8981\u770b\u53ea\u4e0d\u8fc7\u7701\u4e86\u51e0\u884c\uff0c\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u662f\u5f88\u65b9\u4fbf\u7684\uff1b\n- \u5efa\u8bae\u4e00\u8fb9\u6253\u4e00\u8fb9\u628a\u6ce8\u91ca\u4e5f\u5f04\u4e86\uff0c\u4e0d\u7136\u8c03\u8bd5\u7684\u65f6\u5019\u4f1a\u6df7\u4e71\u3002\n- \u5176\u5b9e\u732e\u6bb7\u52e4\u548c\u8868\u654c\u610f\u65e0\u975e\u5c31\u662f\u8df3\u8eab\u4efd\uff0c\u4e0d\u9700\u8981\u7279\u610f\u7684\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u5728\u5904\u7406\u5bf9\u7acb\u8eab\u4efd\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5927\u6982\u7684\u5904\u7406\u597d\u4e86\u3002\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff0c\u5e26\u6709\u6ce8\u91ca\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u6ca1\u6709\u63d0\u5230\u7684\u4e1c\u897f\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct player{//\u73a9\u5bb6\u7684\u4fe1\u606f\n\tstring sf,card;\n\tint tot,HP,zg,dead,t,lfz[11];\n\tplayer(){memset(lfz,0,sizeof(lfz));HP=4;dead=0;zg=0;tot=4;t=0;}//\u7c7b\u53cd\u732a\uff08\u8fd9\u91cc\u6211\u8111\u5b50\u77ed\u8def\u4e86\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ed3\u6784\u4f53\uff0c\u56e0\u4e3a\u7c7b\u53cd\u732a\u53ea\u5bf9\u4e3b\u732a\u6709\u6548\uff09\u3001\u8840\u91cf\u4e3a4\u3001\u672a\u6b7b\u4ea1\u3001\u8bf8\u845b\u8fde\u5f29\u672a\u88c5\u4e0a\u3001\u724c\u7684\u603b\u6570\u4e3a4\u3001\u6ca1\u6709\u8df3\u8eab\u4efd\n}p[11];\nchar a;\nstring cardd;//\u724c\u5806\nint n,m,now,only;\nbool dl(int i,int j)//\u5904\u7406\u5bf9\u7acb\u8eab\u4efd\n{\n\tif(p[i].sf==\"MP\")//\u5982\u679ci\u4e3a\u4e3b\u732a\n\t\tif((p[i].lfz[j]==1&&p[j].t==0)||(p[j].sf==\"FP\"&&p[j].t==1))return 1;//\u6709\u4e24\u4e2a\u60c5\u51b5\uff1a1\u3001\u4e3a\u7c7b\u53cd\u732a\u5e76\u4e14\u6ca1\u6709\u8df3\u8eab\u4efd\uff1b2\u3001\u4e3a\u53cd\u732a\u800c\u4e14\u8df3\u4e86\u8eab\u4efd\uff0c\u5c31\u610f\u5473\u7740\u662f\u5bf9\u7acb\u7684\n\t\t\telse return 0;//\u4e0d\u662f\u5bf9\u7acb\u7684\uff08\u6216\u662f\u6ca1\u6709\u8df3\u8eab\u4efd\u7684\uff09\n\tif(p[i].sf==\"ZP\")//\u5fe0\u732a\n\t\tif(p[j].sf==\"FP\"&&p[j].t==1)return 1;//\u5bf9\u7acb\u7684\u60c5\u51b5\u53ea\u6709\u4e3a\u53cd\u732a\u800c\u4e14\u8df3\u4e86\u8eab\u4efd\n\t\t\telse return 0;\n\tif(p[i].sf==\"FP\")//\u53cd\u732a\n\t\tif(p[j].sf==\"MP\"||(p[j].sf==\"ZP\"&&p[j].t==1))return 1;//\u4e3a\u4e3b\u732a\uff0c\u6216\u8005\u4e3a\u5fe0\u732a\u800c\u4e14\u8df3\u4e86\u8eab\u4efd\n\t\t\telse return 0;\n}\nvoid use(int user,int pos)//\u51fa\u724c\u5904\u7406\n{\n\tp[user].tot--;//\u603b\u6570--\n\tp[user].card.erase(pos,1);//erase\uff0c\u5220\u9664\n}\nvoid add(int i,int sum)//\u4ece\u724c\u5806\u9876\u6478\u724c\n{\n\tp[i].tot+=sum;//\u603b\u6570\u5148\u589e\u52a0\n\tif(m==sum)//\u8fd9\u91cc\u662f\u5bf9\u724c\u5806\u7684\u7279\u5224\n\t{\n\t\tfor(int j=1;j<=sum;j++)\n\t\t\tp[i].card+=cardd[j];\n\t\tcardd.erase(1,sum-1);\n\t\tm=1;\n\t}\n\telse\n\tif(m==1)//\u724c\u5806\u53ea\u5269\u4e00\u5f20\u724c\uff0c\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\n\t\tfor(int j=1;j<=sum;j++)\n\t\t\tp[i].card+=cardd[1];\n\telse\n\t{\n\t\tfor(int j=1;j<=sum;j++)\n\t\t\tp[i].card+=cardd[j];\n\t\tcardd.erase(1,sum);\n\t\tm-=sum;\n\t}\n}\nbool wfordr(int i,int last,int tot)//\u65e0\u61c8\u53ef\u51fb\u7684\u8be2\u95ee\u8fc7\u7a0b\uff08\u201c\u53d7\u5bb3\u8005\u201d\uff0c\u4e0a\u4e00\u5f20\u9526\u56ca\u724c\u7684\u4f7f\u7528\u8005\uff0c\u76ee\u524d\u7684\u8f6e\u6570\uff09\n{\n\t//cout<<\"k\"<<endl;\n    //\u8c03\u8bd5\u7528\u7684\uff0c\u540e\u9762\u4e5f\u6709\n\tif(p[last].card.find('J')!=-1)//\u5148\u67e5\u8be2\u81ea\u5df1\uff0cif\u91cc\u9762\u5224\u65ad\u7684\u662f\u6709\u6ca1\u6709\u65e0\u61c8\u53ef\u51fb\n\t{\n\t\tif(!dl(last,i)&&p[i].t==1&&tot%2==0)//\u91cd\u70b9\uff1a\u5982\u679c\u4e0d\u662f\u5bf9\u7acb\u8eab\u4efd\uff0c\u4e14\u8df3\u4e86\u8eab\u4efd\uff0c\u5e76\u4e14\u8fd9\u5f20\u9526\u56ca\u672a\u88ab\u65e0\u61c8\uff08\u5373\u603b\u8f6e\u6570\u4e3a\u5076\u6570\uff09\n\t\t{\n\t\t\t//cout<<last<<\" use J for\"<<i<<endl;\n            //\u5c31\u732e\u6bb7\u52e4+\u8df3\u8eab\u4efd\n\t\t\tuse(last,p[last].card.find('J'));\n\t\t\tp[last].t=1;\n\t\t\treturn wfordr(i,last,tot+1);//\u8fdb\u884c\u4e0b\u4e00\u8f6e\n\t\t}\n\t\tif(dl(last,i)&&p[i].t==1&&tot%2==1)//\u5bf9\u7acb\u8eab\u4efd\uff0c\u4e14\u8fd9\u5f20\u9526\u56ca\u724c\u5df2\u88ab\u65e0\u61c8\uff0c\u9700\u8981\u8868\u654c\u610f\n\t\t{\n\t\t\t//cout<<last<<\" use J For\"<<i<<endl;\n\t\t\tuse(last,p[last].card.find('J'));\n\t\t\tp[last].t=1;\n\t\t\treturn wfordr(i,last,tot+1);\n\t\t}\n\t}\n\tfor(int j=last+1;j!=last;j++)//\u8fd9\u91cc\u540c\u7406\uff0c\u53ea\u4e0d\u8fc7\u6a21\u62df\u9006\u65f6\u9488\u7684\u987a\u5e8f\n\t{\n\t\tif(j>n)j=1;//\u8fd9\u91cc\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u8fd9\u6837\u5b50\u5199\uff08\u540e\u9762\u4e5f\u662f\u8fd9\u6837\u5199\u7684\uff09\n\t\tif(j==last)break;\n\t\tif(p[j].dead)continue;\n\t\tif(p[j].card.find('J')!=-1)\n\t\t{\n\t\t\tif(!dl(j,i)&&p[i].t==1&&tot%2==0)\n\t\t\t{\n\t\t\t\t//cout<<j<<\"use J for\"<<i<<endl;\n\t\t\t\tuse(j,p[j].card.find('J'));\n\t\t\t\tp[j].t=1;\n\t\t\t\treturn wfordr(i,j,tot+1);\n\t\t\t}\n\t\t\tif(dl(j,i)&&p[i].t==1&&tot%2==1)\n\t\t\t{\n\t\t\t\t//cout<<j<<\"use J For\"<<i<<endl;\n\t\t\t\tuse(j,p[j].card.find('J'));\n\t\t\t\tp[j].t=1;\n\t\t\t\treturn wfordr(i,j,tot+1);\n\t\t\t}\n\t\t}\n\t\tif(j==n)j=0;\n\t}\n\t//cout<<tot<<endl;\n\treturn tot%2==0;//\u5076\u6570\u8f6e\uff0c\u4ee3\u8868\u672a\u88ab\u65e0\u61c8\u6389\uff0c\u5947\u6570\u8f6e\uff0c\u4ee3\u8868\u5df2\u7ecf\u88ab\u65e0\u61c8\u6389\u4e86\n}\nstring sl()//\u5224\u65ad\u80dc\u5229\u6761\u4ef6\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32\n{\n\tif(p[1].dead)return \"FP\";//\u4e3b\u732a\u6b7b\u4ea1\uff0c\u53cd\u732a\u80dc\u5229\n\tint flag=1;//\u770b\u53cd\u732a\u662f\u5426\u5168\u90e8\u6b7b\u4ea1\n\tfor(int i=1;i<=n;i++)\n\t\tif(p[i].dead==0&&p[i].sf==\"FP\")flag=0;\n\tif(flag==1)return \"MP\";//\u4e3b\u732a\u8fbe\u5230\u80dc\u5229\u6761\u4ef6\n\treturn \"continue\";//\u90fd\u6ca1\u6709\u8fbe\u5230\u80dc\u5229\u6761\u4ef6\uff0c\u7ee7\u7eed\n}\nvoid show()//\u8f93\u51fa\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(p[i].dead)cout<<\"DEAD\"<<endl;\n\t\telse\n\t\t{\n\t\t\t//cout<<p[i].tot<<\"  \";\n\t\t\tfor(int j=1;j<p[i].tot;j++)\n\t\t\t\tcout<<p[i].card[j]<<\" \";\n\t\t\tcout<<p[i].card[p[i].tot]<<endl;\n\t\t}\n\t}\n}\nvoid bs(int i,int j)//\u6fd2\u6b7b\u64cd\u4f5c\uff0ci\u6fd2\u6b7b\uff0cj\u5e72\u7684\n{\t\n\tif(p[i].card.find('P')!=-1)//\u81ea\u5df1\u624b\u4e0a\u6709\u6843\n\t{\n\t\t//cout<<\"f \"<<i<<endl;\n\t\tuse(i,p[i].card.find('P'));//\u4f7f\u7528\uff0c\u56de\u8840\n\t\tp[i].HP=1;\n\t}\n\telse\n\t{\n\t\t//cout<<\"gg \"<<i<<endl;\n\t\tp[i].dead=1;//\u6b7b\u4ea1\n\t\tp[i].tot=0;//\u6e05\u7a7a\u624b\u4e0a\u7684\u724c\n\t\tif(p[i].sf==\"FP\")//\u5982\u679c\u6b7b\u4ea1\u7684\u662f\u53cd\u732a\n\t\t{\n\t\t\tif(sl()==\"MP\")//\u4f18\u5148\u5224\u65ad\u724c\u5c40\u662f\u5426\u7ed3\u675f\n\t\t\t{\n\t\t\t\tcout<<\"MP\"<<endl;\n\t\t\t\tshow();\n\t\t\t\texit(0);//exit\uff0c\u76f4\u63a5\u7ec8\u7ed3\u6574\u4e2a\u7a0b\u5e8f\uff0c\u4e0d\u6267\u884c\u522b\u7684\u4e1c\u897f\u4e86\n\t\t\t}\n\t\t\tadd(j,3);//\u4e0d\u7ba1\u662f\u8c01\uff0c\u90fd\u8981\u6478\u724c\n\t\t}\n\t\tif(p[i].sf==\"ZP\"&&p[j].sf==\"MP\")//\u4e3b\u732a\u6740\u4e86\u5fe0\u732a\n\t\t{\n\t\t\tp[j].card=\" \";//\u8981\u5c06\u724c\u6e05\u7a7a\uff08\u5305\u62ec\u8bf8\u845b\u8fde\u5f29\uff09\n\t\t\tp[j].tot=0;\n\t\t\tp[j].zg=0;\n\t\t}\n\t\tif(p[i].sf==\"MP\")//\u4e3b\u732a\u6b7b\u4ea1\uff0c\u4e0d\u7ba1\u8c01\u5e72\u7684\uff0c\u603b\u4e4b\u53cd\u732a\u80dc\u5229\n\t\t{\n\t\t\tcout<<\"FP\"<<endl;\n\t\t\tshow();\n\t\t\texit(0);\n\t\t}\n\t}\n}\nint jl(int i,int j)//\u8ba1\u7b97\u8ddd\u79bb\n{\n\tint deadsum=0,tot=0;//\u6b7b\u4ea1\u7684\u73a9\u5bb6\u7684\u6570\u91cf\n\twhile(i!=j)\n\t{\n\t\tif(p[i].dead)deadsum++;\n\t\ttot++;\n\t\ti++;\n\t\tif(i>n)i=1;\n\t}\n\treturn tot-deadsum;\n}\nvoid s(int i,int j)//i\u6740j\n{\n\t//cout<<\"sha \"<<i<<\"->\"<<j<<endl;\n\tif(p[j].card.find('D')!=-1)//\u6709\u95ea\u5c31\u51fa\n\t\tuse(j,p[j].card.find('D'));\n\telse//\u4e0d\u7136\u7684\u8bdd\u5c31\u6389\u8840\n\t{\n\t\tp[j].HP--;\n\t\tif(p[j].sf==\"MP\"&&p[i].t==0)p[j].lfz[i]=1;//\u8fd9\u91cc\u662f\u56e0\u4e3a\u6211\u5c06\u4e07\u7bad\u89c6\u4e3a\u5bf9\u5168\u573a\u4f7f\u7528\u6740\n\t\tif(p[j].HP==0)bs(j,i);//\u4efb\u4f55\u4f24\u5bb3\u90fd\u53ef\u80fd\u6fd2\u6b7b\n\t}\n}\nvoid nm(int user)//\u5357\u86ee\u5165\u4fb5\uff0cuser\u4f7f\u7528\u7684\n{\n\t//cout<<\"nm \"<<user<<endl;\n\tfor(int i=user+1;i!=user;i++)//\u4eceuser\u5f00\u59cb\uff0c\u9006\u65f6\u9488\u8be2\u95ee\u65e0\u61c8\u53ef\u51fb\n\t{\n\t\t//cout<<\"n \"<<user<<\"->\"<<i<<endl;\n\t\tif(i>n)i=1;\n\t\tif(p[i].dead)continue;\n\t\tif(wfordr(i,user,0))//\u5982\u679c\u672a\u88ab\u65e0\u61c8\n\t\t{\n\t\t\tif(p[i].card.find('K')!=-1)//\u6709\u6740\u5c31\u51fa\n\t\t\t\tuse(i,p[i].card.find('K'));\n\t\t\telse//\u6ca1\u6709\u6740\uff0c\u5904\u7406\u7c7b\u4f3c\u6740\n\t\t\t{\n\t\t\t\tif(p[i].sf==\"MP\"&&p[user].t==0)p[i].lfz[user]=1;\n\t\t\t\tp[i].HP--;\n\t\t\t\tif(p[i].HP==0)bs(i,user);\n\t\t\t}\n\t\t}\n\t\tif(i==n)i=0;\n\t}\n}\nvoid wj(int user)//\u4e07\u7bad\uff0cuser\u4f7f\u7528\u7684\n{\n\t//cout<<\"wj \"<<user<<endl;\n\tfor(int i=user+1;i!=user;i++)//\u89c6\u4e3a\u5bf9\u5168\u573a\u4f7f\u7528\u6740\n\t{\n\t\tif(i>n)i=1;\n\t\tif(p[i].dead)continue;\n\t\tif(wfordr(i,user,0))s(user,i);\n\t\tif(i==n)i=0;\n\t}\n}\nvoid jd(int i,int j)//\u51b3\u6597\uff0c\u8fd9\u91cc\u6211\u5199\u9519\u4e86\u597d\u591a\u6b21\uff0c\u9700\u8981\u6ce8\u610f\n{\n\tif(p[i].sf==\"MP\"&&p[j].sf==\"ZP\")//\u4e3b\u732a\u5bf9\u5fe0\u732a\u51b3\u6597\uff0c\u5fe0\u732a\u7edd\u5bf9\u6389\u8840\n\t{\n\t\tp[j].HP--;\n\t\tif(p[j].HP==0)bs(j,i);\n\t\treturn;//\u4e0e\u540e\u9762\u65e0\u5173\u4e86\n\t}\n\tint turn=0;//\u56de\u5408\n\twhile(1)\n\t{\n\t\tif(turn==2)turn=0;\n\t\tif(turn==0)//\u5076\u6570\u56de\u5408\uff0cj\u9700\u8981\u5f03\u7f6e\u6740\n\t\t{\n\t\t\t//cout<<\"b turn\"<<endl;\n\t\t\tif(p[j].card.find('K')!=-1)\n\t\t\t{\n\t\t\t\tp[j].t=1;\n\t\t\t\tuse(j,p[j].card.find('K'));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tp[j].HP--;\n\t\t\t\tif(p[j].HP==0)bs(j,i);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif(turn==1)//\u540c\u7406\n\t\t{\n\t\t\t//cout<<\"a turn\"<<endl;\n\t\t\tif(p[i].card.find('K')!=-1)\n\t\t\t{\n\t\t\t\tp[i].t=1;\n\t\t\t\tuse(i,p[i].card.find('K'));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tp[i].HP--;\n\t\t\t\tif(p[i].HP==0)bs(i,j);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tturn++;\n\t}\n}\nvoid cp(int i)//\u51fa\u724c\u9636\u6bb5\n{\n\tadd(i,2);//\u6478\u724c\u9636\u6bb5\n\tint ss=p[i].zg?1<<30:1;//ss\u4ee3\u8868\u53ef\u4ee5\u4f7f\u7528\u7684\u6740\u7684\u6570\u91cf\uff0c\u5982\u679c\u6709\u8bf8\u845b\u8fde\u5f29\u5c31\u53ef\u4ee5\u51fa\u65e0\u9650\u5f20\uff08\u8fd9\u91cc\u8bbe\u4e3a\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u5b57\u5373\u53ef\uff09\n\tfor(int j=1;j<=p[i].tot;j++)//\u4ece\u5de6\u5230\u53f3\u904d\u5386\n\t{\n\t\tif(p[i].HP==0)return;//\u5df2\u7ecfgg\uff0c\u76f4\u63a5\u7ed3\u675f\u8fd9\u4e2a\u56de\u5408\n\t\tif(p[i].card[j]=='Z')//\u8bf8\u845b\u8fde\u5f29\uff0c\u4e00\u5b9a\u8981\u51fa\n\t\t{\n\t\t\t//cout<<i<<\" use Z\"<<endl;\n\t\t\tuse(i,j);\n\t\t\tp[i].zg=1;//\u66f4\u6539\u4fe1\u606f\n\t\t\tss=1<<30;\n\t\t\tj=0;//\u91cd\u65b0\u904d\u5386\n\t\t}\n\t\tif(p[i].card[j]=='P')//\u6843\u5b50\n\t\t{\n\t\t\tif(p[i].HP<4)//\u6ca1\u6709\u6ee1\u8840\uff0c\u5c31\u51fa\n\t\t\t{\n\t\t\t\t//cout<<i<<\" use P\"<<endl;\n\t\t\t\tp[i].HP++;\n\t\t\t\tuse(i,j);\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\tif(p[i].card[j]=='K'&&ss)//\u6740\uff0c\u6709\u70b9\u957f\n\t\t{\n\t\t\tif(p[i].sf==\"FP\")//\u53cd\u732a\n\t\t\t{\n\t\t\t\tfor(int _find=i+1;_find!=i;_find++)//\u53ef\u4ee5\u6253\u4e3b\u732a\u5c31\u5148\u6253\u4e3b\u732a\n\t\t\t\t{\n\t\t\t\t\tif(_find>n)_find=1;\n\t\t\t\t\tif(p[_find].dead)continue;\n\t\t\t\t\tif(p[i].card[j]=='K'&&p[_find].t==1&&p[_find].sf==\"MP\"&&jl(i,_find)==1&&ss)\n\t\t\t\t\t{\n\t\t\t\t\t\tp[i].t=1;//\u81ea\u5df1\u8df3\u8eab\u4efd\u4e86\n\t\t\t\t\t\tp[1].lfz[i]=0;//\u6e05\u7a7a\u7c7b\u53cd\u732a\uff0c\u56e0\u4e3a\u88ab\u91cd\u65b0\u8ba4\u8bc6\u4e86\n\t\t\t\t\t\tuse(i,j);\n\t\t\t\t\t\ts(i,_find);//\u6740\n\t\t\t\t\t\tss--;//\u53ef\u4f7f\u7528\u7684\u6b21\u6570--\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_find==n)_find=0;\n\t\t\t\t}\n\t\t\t\tfor(int _find=i+1;_find!=i;_find++)//\u5bf9\u8df3\u4e86\u8eab\u4efd\u7684\u5fe0\u732a\u4f7f\u7528\n\t\t\t\t{\n\t\t\t\t\tif(_find>n)_find=1;\n\t\t\t\t\tif(p[_find].dead)continue;\n\t\t\t\t\tif(p[i].card[j]=='K'&&dl(i,_find)&&jl(i,_find)==1&&ss)\n\t\t\t\t\t{\n\t\t\t\t\t\tp[i].t=1;\n\t\t\t\t\t\tp[1].lfz[i]=0;\n\t\t\t\t\t\tuse(i,j);\n\t\t\t\t\t\ts(i,_find);\n\t\t\t\t\t\tss--;\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_find==n)_find=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse//\u5426\u5219\u5c31\u662f\u4e3b\u732a\u6216\u8005\u5fe0\u732a\n\t\t\t{\n\t\t\t\tfor(int _find=i+1;_find!=i;_find++)\n\t\t\t\t{\n\t\t\t\t\tif(_find>n)_find=1;\n\t\t\t\t\tif(p[_find].dead)continue;\n\t\t\t\t\tif(p[i].card[j]=='K'&&dl(i,_find)&&jl(i,_find)==1&&ss)//\u5bf9\u7acb\u7684\u8eab\u4efd\uff0c\u8df3\u4e86\u8eab\u4efd\uff08\u6216\u8005\u662f\u88ab\u89c6\u4e3a\u7c7b\u53cd\u732a\uff09\uff0c\u591f\u8ddd\u79bb\n\t\t\t\t\t{\n\t\t\t\t\t\tp[i].t=1;\n\t\t\t\t\t\tp[1].lfz[i]=0;\n\t\t\t\t\t\tuse(i,j);\n\t\t\t\t\t\ts(i,_find);\n\t\t\t\t\t\tss--;\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_find==n)_find=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(p[i].card[j]=='N')//\u5357\u86ee\u5165\u4fb5\n\t\t{\n\t\t\tuse(i,j);\n\t\t\tnm(i);\n\t\t\tj=0;//\u91cd\u65b0\u626b\u4e00\u904d\n\t\t}\n\t\tif(p[i].card[j]=='W')//\u4e07\u7bad\u9f50\u53d1\n\t\t{\n\t\t\tuse(i,j);\n\t\t\twj(i);\n\t\t\tj=0;//\u91cd\u65b0\u626b\u4e00\u904d\n\t\t}\n\t\tif(p[i].card[j]=='F')//\u51b3\u6597\n\t\t{\n\t\t\tif(p[i].sf==\"FP\"&&p[i].card[j]=='F')//\u53cd\u732a\uff0c\u4fbf\u4e00\u5b9a\u4e0e\u4e3b\u732a\u51b3\u6597\n\t\t\t{\n\t\t\t\tp[i].t=1;//\u8df3\u4e86\u8eab\u4efd\uff0c\u5e76\u88ab\u91cd\u65b0\u8ba4\u8bc6\n\t\t\t\tp[1].lfz[i]=0;\n\t\t\t\tuse(i,j);\n\t\t\t\t//cout<<\"jd \"<<i<<\"->\"<<1<<endl;\n\t\t\t\tif(wfordr(1,i,0))jd(i,1);//\u672a\u88ab\u65e0\u61c8\u53ef\u51fb\u5c31\u51b3\u6597\n\t\t\t\tj=0;\n\t\t\t}\n\t\t\tif((p[i].sf==\"MP\"||p[i].sf==\"ZP\")&&p[i].card[j]=='F')\n\t\t\t{\n\t\t\t\tfor(int _find=i+1;_find!=i;_find++)//\u5bfb\u627e\u76ee\u6807\n\t\t\t\t{\n\t\t\t\t\tif(_find>n)_find=1;\n\t\t\t\t\tif(_find==i)break;\n\t\t\t\t\tif(p[_find].dead)continue;//\u8981\u8df3\u8fc7\u5df2\u7ecf\u6b7b\u4ea1\u7684\u73a9\u5bb6\n\t\t\t\t\tif(p[i].card[j]=='F'&&dl(i,_find))//\u5bf9\u7acb\u8eab\u4efd\n\t\t\t\t\t{\n\t\t\t\t\t\tuse(i,j);\n\t\t\t\t\t\t//cout<<\"jd \"<<i<<\"->\"<<_find<<endl;\n\t\t\t\t\t\tif(wfordr(_find,i,0))jd(i,_find);\n\t\t\t\t\t\tj=0;\n\t\t\t\t\t}\n\t\t\t\t\tif(_find==n)_find=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\t//freopen(\"\u732a\u56fd\u6740.in\",\"r\",stdin);\n\t//freopen(\"\u732a\u56fd\u6740.out\",\"w\",stdout); \n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>p[i].sf;//\u8eab\u4efd\n\t\tp[i].card=' '+p[i].card;//\u5c06\u7b2c0\u4f4d\u7f6e\u7a7a\n\t\tfor(int j=1;j<=4;j++)\n\t\t\tcin>>a,p[i].card+=a;//\u7528\u8fde\u63a5\u7b26\u53f7\uff0c\u65b9\u4fbf\u5904\u7406\n\t}\n\tcardd=' '+cardd;//\u7f6e\u7a7a\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>a;\n\t\tcardd+=a;\n\t}\n\tp[1].t=1;//\u4e3b\u732a\u89c6\u4e3a\u4e0d\u4f1a\u8df3\u8eab\u4efd\uff08\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5df2\u7ecf\u8df3\u4e86\u8eab\u4efd\uff09\n\twhile(1)\n\t{\n\t\tif(sl()!=\"continue\")//\u5df2\u7ecf\u6709\u4e00\u65b9\u80dc\u5229\u4e86\n\t\t{\n\t\t\tcout<<sl()<<endl;\n\t\t\tshow();\n\t\t\treturn 0;\n\t\t}\n\t\tnow++;//\u5faa\u73af\n\t\tif(now>n)now=1;\n\t\tif(p[now].dead)continue;//\u8df3\u8fc7\u6b7b\u4ea1\u7684\u73a9\u5bb6\n\t\tcp(now);//\u51fa\u724c\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1564116674,
        "uid": 112661,
        "name": "NKL\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5f00\u59cb\u5206\u4eab\u672c\u4eba\u505a\u8fd9\u9053\u9898\u76ee\u65f6\u7684\u601d\u8def\u3002\n\u6574\u7406\u4e86\u4e00\u4e0b\u6709\u7528\u4fe1\u606f\uff1a  \n  \n\u8eab\u4efd\uff1a  \n\u4e3b\u732a\uff08MP\uff09\uff1a\u81ea\u5df1\u5b58\u6d3b\u7684\u60c5\u51b5\u4e0b\u6d88\u706d\u6240\u6709\u7684\u53cd\u732a\u3002  \n\u5fe0\u732a\uff08ZP\uff09\uff1a\u4e0d\u60dc\u4e00\u5207\u4fdd\u62a4\u4e3b\u732a\uff0c\u80dc\u5229\u6761\u4ef6\u4e0e\u4e3b\u732a\u76f8\u540c\u3002  \n\u53cd\u732a\uff08FP\uff09\uff1a\u6740\u6b7b\u4e3b\u732a\u3002\n\n\u653b\u51fb\u8303\u56f4\uff1a  \n\u6309\u9006\u65f6\u9488\u6392\u5217\uff0c1\u53f7\u4e0e2\u53f7\u8ddd\u79bb\u4e3a1\uff0c2\u53f7\u4e0e3\u53f7\u8ddd\u79bb\u4e3a1\u2026\u2026\uff0cn\u53f7\u4e0e1\u53f7\u8ddd\u79bb\u4e3a1\uff0c\u4f462\u53f7\u4e0e1\u53f7\u8ddd\u79bb\u4e0d\u4e3a1\uff0c\u4e5f\u5c31\u662f2\u53f7\u4e0d\u53ef\u4ee5\u5bf91\u53f7\u51fa\u6740\uff0c\u4f461\u53f7\u53ef\u4ee5\u5bf92\u53f7\u51fa\u6740\n\n\u57fa\u672c\u724c\u53ca\u6b66\u5668\uff1a  \n\u6843(P)\uff1a\u5728\u81ea\u5df1\u7684\u56de\u5408\u5185\uff0c\u5982\u679c\u81ea\u5df1\u7684\u4f53\u529b\u503c\u4e0d\u7b49\u4e8e\u4f53\u529b\u4e0a\u9650\uff0c\u90a3\u4e48\u4f7f\u7528\u4e00\u4e2a\u6843\u53ef\u4ee5\u4e3a\u81ea\u5df1\u8865\u5145\u4e00\u70b9\u4f53\u529b\uff0c\u5426\u5219\u4e0d\u80fd\u4f7f\u7528\u6843\uff1b\u6843\u53ea\u80fd\u5bf9\u81ea\u5df1\u4f7f\u7528\uff1b\u5728\u81ea\u5df1\u7684\u56de\u5408\u5916\uff0c\u5982\u679c\u81ea\u5df1\u7684\u8840\u53d8\u4e3a0\u6216\u8005\u66f4\u4f4e\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff1b\n\n\u6740(K)\uff1a\u5728\u81ea\u5df1\u7684\u56de\u5408\u5185\uff0c\u5bf9\u653b\u51fb\u8303\u56f4\u5185\u9664\u81ea\u5df1\u4ee5\u5916\u7684\u4e00\u540d\u89d2\u8272\u4f7f\u7528\u3002\u5982\u679c\u6ca1\u6709\u88ab\u95ea\u62b5\u6d88\uff0c\u5219\u9020\u62101\u70b9\u4f24\u5bb3\u3002\u65e0\u8bba\u6709\u65e0\u6b66\u5668\uff0c\u6740\u7684\u653b\u51fb\u8303\u56f4\u90fd\u662f1\uff1b\n\n\u95ea(D)\uff1a\u5f53\u4f60\u53d7\u5230\u6740\u7684\u653b\u51fb\u65f6\uff0c\u53ef\u4ee5\u5f03\u7f6e\u4e00\u5f20\u95ea\u6765\u62b5\u6d88\u6740\u7684\u6548\u679c\uff1b\n\n\u732a\u54e5\u8fde\u5f29(Z)\uff1a\u6b66\u5668\uff0c\u653b\u51fb\u8303\u56f41\uff0c\u51fa\u724c\u9636\u6bb5\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u5f20\u6740\uff1b\n\nPS\uff1a\u4e5f\u5c31\u662f\u8bf4\u6740\u5728\u786e\u5b9a\u76ee\u6807\u4e14\u80fd\u7528\u7684\u60c5\u51b5\u4e0b\u5fc5\u5b9a\u7528\uff0c\u95ea\u5728\u53d7\u5230\u6740\u65f6\u5fc5\u5b9a\u6253\u51fa\uff0c\u6843\u5728\u81ea\u5df1\u56de\u5408\u8840\u91cf\u4e0d\u6ee1\u65f6\u4e00\u5b9a\u7528\uff0c\u5728\u4ed6\u4eba\u56de\u5408\u6fd2\u4e34\u6b7b\u4ea1\u65f6\u4e00\u5b9a\u7528\uff0c\u732a\u54e5\u8fde\u5f29\u5728\u81ea\u5df1\u56de\u5408\u4e00\u5b9a\u4f1a\u7528\u3002\n\n\u9526\u56ca\u724c\uff1a  \n\u51b3\u6597(F)\uff1a\u51fa\u724c\u9636\u6bb5\uff0c\u5bf9\u9664\u81ea\u5df1\u4ee5\u5916\u4efb\u610f\u4e00\u540d\u89d2\u8272\u4f7f\u7528\uff0c\u7531\u76ee\u6807\u89d2\u8272\u5148\u5f00\u59cb\uff0c\u81ea\u5df1\u548c\u76ee\u6807\u89d2\u8272\u8f6e\u6d41\u5f03\u7f6e\u4e00\u5f20\u6740\uff0c\u9996\u5148\u6ca1\u6709\u6740\u53ef\u5f03\u7684\u4e00\u65b9\u53d7\u52301\u70b9\u4f24\u5bb3\uff0c\u53e6\u4e00\u65b9\u89c6\u4e3a\u6b64\u4f24\u5bb3\u7684\u6765\u6e90\uff1b\n\n\u5357\u732a\u5165\u4fb5(N)\uff1a\u51fa\u724c\u9636\u6bb5\uff0c\u5bf9\u9664\u4f60\u4ee5\u5916\u6240\u6709\u89d2\u8272\u4f7f\u7528\uff0c\u6309\u9006\u65f6\u9488\u987a\u5e8f\u4ece\u4f7f\u7528\u8005\u4e0b\u5bb6\u5f00\u59cb\u4f9d\u6b21\u7ed3\u7b97\uff0c\u9664\u975e\u5f03\u7f6e\u4e00\u5f20\u6740\uff0c\u5426\u5219\u53d7\u52301\u70b9\u4f24\u5bb3\uff1b\n\n\u4e07\u7bad\u9f50\u53d1(W)\uff1a\u548c\u5357\u732a\u5165\u4fb5\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8981\u5f03\u7f6e\u7684\u4e0d\u662f\u6740\u800c\u662f\u95ea\uff1b\n\n\u65e0\u61c8\u53ef\u51fb(J)\uff1a\u5728\u76ee\u6807\u9526\u56ca\u751f\u6548\u524d\u62b5\u6d88\u5176\u6548\u679c\u3002\u6bcf\u6b21\u6709\u4e00\u5f20\u9526\u56ca\u5373\u5c06\u751f\u6548\u65f6\uff0c\u4ece\u4f7f\u7528\u8fd9\u5f20\u9526\u56ca\u7684\u732a\u5f00\u59cb\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f\uff0c\u4f9d\u6b21\u5f97\u5230\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\u673a\u4f1a\uff1b\n\n\u6548\u679c\uff1a\u7528\u4e8e\u51b3\u6597\u65f6\uff0c\u51b3\u6597\u65e0\u6548\u5e76\u5f03\u7f6e\uff1b\u7528\u4e8e\u5357\u732a\u5165\u4fb5\u6216\u4e07\u7bad\u9f50\u53d1\u65f6\uff0c\u5f53\u7ed3\u7b97\u5230\u67d0\u4e2a\u89d2\u8272\u65f6\u624d\u80fd\u4f7f\u7528\uff0c\u5f53\u524d\u89d2\u8272\u4e0d\u9700\u5f03\u7f6e\u724c\u5e76\u4e14\u4e0d\u4f1a\u53d7\u5230\u4f24\u5bb3\uff08\u4ec5\u5bf9\u4e00\u4e2a\u89d2\u8272\u4ea7\u751f\u6548\u679c\uff09\uff1b\u7528\u4e8e\u65e0\u61c8\u53ef\u51fb\u65f6\uff0c\u6210\u4e3a\u76ee\u6807\u7684\u65e0\u61c8\u53ef\u51fb\u88ab\u65e0\u6548\u3002\n\n## PS\uff1a  \n1.\u4e00\u53ea\u732a\u7684\u6b7b\u4ea1\u4f1a\u9020\u6210\u8fd9\u53ea\u732a\u524d\u540e\u4e24\u732a\u7684\u8ddd\u79bb\u6539\u53d8\u3002  \n\n2.\u5f53\u53cd\u732a\u5168\u90e8\u6b7b\u4ea1\u6216\u4e3b\u732a\u6b7b\u4ea1\u65f6\u76f4\u63a5\u7ed3\u675f\u6e38\u620f\uff0c\u4e0d\u9700\u8981\u518d\u8fdb\u884c\u56de\u5408\u548c\u624b\u724c\u7684\u6478\u53d6\u3002  \n\n3.\u5f53\u51fa\u4e86\u6740\u3001\u51b3\u6597\u548c\u65e0\u61c8\u53ef\u51fb\uff0c\u89d2\u8272\u7684\u8eab\u4efd\u5c31\u786e\u5b9a\u4e86\u3002  \n\n4.\u53cd\u732a\u51b3\u6597\u7684\u76ee\u6807\u6c38\u8fdc\u662f\u4e3b\u732a\u3002\n\n5.\uff08\u6211\u7684\u60c5\u51b5\uff09\u5982\u679c\u89d2\u8272\u94fe\u8868\u53ea\u5b58\u4e0b\u4e00\u4e2a\uff0c\u90a3\u4e48\u5728\u66f4\u65b0\u94fe\u8868\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u5bfc\u81f4\u94fe\u8868\u65ad\u88c2\uff0c\u9700\u8981\u518d\u5b58\u4e0a\u4e00\u4e2a\u732a\u3002  \n\n6.\u5728\u4e3b\u732a\u8bef\u6740\u5fe0\u732a\u540e\u6e05\u7a7a\u624b\u724c\u65f6\u8981\u5c06\u88c5\u5907\u533a\u7684\u732a\u54e5\u8fde\u5f29\u4e5f\u6e05\u9664\u3002  \n\n7.\u666e\u901a\u6478\u724c\u64782\u5f20\uff0c\u6740\u53cd\u732a\u64783\u5f20\u3002  \n\n8.\uff08\u6211\u7684\u60c5\u51b5\uff09\u6740\u8ba1\u6570\u65f6\uff0c\u8bef\u5c06\u8ba1\u6570\u653e\u5728\u6709\u6548\u6740\u5916\uff0c\u5bfc\u81f4\u6740\u7684\u591a\u8ba1\u6570\u3002\n\n9.\u5f53\u56de\u5408\u5185\u4f7f\u7528\u5b8c\u4e00\u5f20\u624b\u724c\u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u67d0\u4e9b\u732a\u7684\u8eab\u4efd\u53d1\u751f\u6539\u53d8\uff0c\u6240\u6709\u9700\u8981\u91cd\u65b0\u5faa\u73af\u5224\u65ad\u624b\u724c\u7684\u6253\u51fa\u3002\n\n10.\u5fe0\u732a\u9762\u5bf9\u4e3b\u732a\u7684\u51b3\u6597\u76f4\u63a5\u4f1a\u6389\u8840\u3002\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff08\u5e94\u8be5\u8fd8\u633a\u597d\u7406\u89e3\u7684\uff09\nwho\u662f\u5b9e\u9645\u8eab\u4efd\uff0cfight\u662f\u56de\u5408\u4e2d\u8eab\u4efd\u3002  \nfight=1\u4e3a\u4e3b\u732a\u6216\u5fe0\u732a\uff0cfight=2\u4e3a\u53cd\u732a\uff0cfight=3\u4e3a\u7c7b\u53cd\u732a\n\n```cpp    \n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,killer,point=1;\nchar cdstack[2010];\nstruct node {\n    int who,next,fight,blood,fire,sum,last;\n    char card[20010];\n} pig[12];\nvoid init() {\n    string s,s5,s1,s2,s3,s4;\n    int np;\n    cin>>n>>m;\n    for(register int i=1; i<=n; ++i) {\n        cin>>s>>s1>>s2>>s3>>s4;\n        pig[i].next=i+1;\n        pig[i].last=i-1;\n        pig[i].blood=4;\n        if(s[0]=='M')pig[i].who=1;\n        else if(s[0]=='Z')pig[i].who=2;\n        else pig[i].who=3,killer++;\n        pig[i].card[++pig[i].sum]=s1[0];\n        pig[i].card[++pig[i].sum]=s2[0];\n        pig[i].card[++pig[i].sum]=s3[0];\n        pig[i].card[++pig[i].sum]=s4[0];\n    }\n    pig[1].last=n;\n    pig[n].next=1;\n    pig[1].fight=1;\n    for(register int i=1; i<=m; ++i) {\n        cin>>s5;\n        cdstack[++np]=s5[0];\n    }\n}\nvoid print() {\n    if(pig[1].fight==-1)cout<<\"FP\"<<endl;\n    else cout<<\"MP\"<<endl;\n    for(register int i=1; i<=n; ++i) {\n        if(pig[i].blood<=0) {\n            cout<<\"DEAD\"<<endl;\n        } else {\n            for(register int j=1; j<=pig[i].sum; ++j) {\n                if(pig[i].card[j]!=-1)cout<<pig[i].card[j]<<\" \";\n            }\n            cout<<endl;\n        }\n    }\n}\nbool nochange(int i,int j,int now){\n    int check=i;\n    do{\n        if(now==1&&((pig[j].fight==1&&pig[i].who!=3)||(pig[j].fight==2&&pig[i].who==3))){\n            for(register int k=1;k<=pig[i].sum;++k){\n                if(pig[i].card[k]=='J'){\n                    pig[i].card[k]=-1;\n                    if(pig[i].who!=3)pig[i].fight=1;\n                    else pig[i].fight=2;\n                    return !nochange(i,check,0);\n                }\n            }\n        }\n        else if(now==0&&((pig[check].fight==1&&pig[i].who==3)||(pig[check].fight==2&&pig[i].who!=3))){\n            for(register int k=1;k<=pig[i].sum;++k){\n                if(pig[i].card[k]=='J'){\n                    pig[i].card[k]=-1;\n                    if(pig[i].who!=3)pig[i].fight=1;\n                    else pig[i].fight=2;\n                    return !nochange(i,check,0);\n                }\n            }\n        }\n        i=pig[i].next;\n    }while(i!=check);\n    return false;\n}\nvoid aoe(int i,char c) {\n    if(c=='N')c='K';\n    else c='D';\n    for(register int j=pig[i].next; j!=i; j=pig[j].next) {\n        if(i!=j&&!nochange(i,j,1)) {\n            int temp=0;\n            for(register int k=1; k<=pig[j].sum; ++k) {\n                if(pig[j].card[k]==c) {\n                    pig[j].card[k]=-1;\n                    temp=1;\n                    break;\n                }\n            }\n            if(!temp) {\n                --pig[j].blood;\n                if(j==1&&!pig[i].fight)pig[i].fight=3;\n                if(!pig[j].blood) {\n                    for(register int k=1; k<=pig[j].sum; ++k) {\n                        if(pig[j].card[k]=='P') {\n                            temp=1;\n                            pig[j].blood++;\n                            pig[j].card[k]=-1;\n                            break;\n                        }\n                    }\n                    if(!temp) {\n                        pig[j].fight=-1;\n                        if(pig[j].who==3) {\n                            --killer;\n                            if(!killer) {\n                                print();\n                                return;\n                            }\n                            int cnt=1;\n                            while(cnt<=3) {\n                                pig[i].card[++pig[i].sum]=cdstack[point];\n                                if(point<m)++point;\n                                ++cnt;\n                            }\n                        } else if(pig[j].who==2&&pig[i].who==1) {\n                            for(register int k=1; k<=pig[i].sum; ++k) {\n                                pig[i].card[k]=-1;\n                            }\n                            pig[i].fire=0;\n                        } else if(pig[1].fight==-1) {\n                            print();\n                            return;\n                        }\n                        pig[pig[j].last].next=pig[j].next,pig[pig[j].next].last=pig[j].last;\n                    }\n                }\n            }\n        }\n    }\n}\nvoid kill(int i) {\n    int temp=0;\n    for(register int k=1; k<=pig[pig[i].next].sum; ++k) {\n        if(pig[pig[i].next].card[k]=='D') {\n            temp=1;\n            pig[pig[i].next].card[k]=-1;\n            break;\n        }\n    }\n    if(!temp) {\n        --pig[pig[i].next].blood;\n        if(!pig[pig[i].next].blood) {\n            for(register int k=1; k<=pig[pig[i].next].sum; ++k) {\n                if(pig[pig[i].next].card[k]=='P') {\n                    temp=1;\n                    pig[pig[i].next].card[k]=-1;\n                    pig[pig[i].next].blood++;\n                    break;\n                }\n            }\n            if(!temp) {\n                pig[pig[i].next].fight=-1;\n                if(pig[pig[i].next].who==3) {\n                    --killer;\n                    if(!killer) {\n                        print();\n                        return;\n                    }\n                    int cnt=1;\n                    while(cnt<=3) {\n                        pig[i].card[++pig[i].sum]=cdstack[point];\n                        if(point<m)++point;\n                        ++cnt;\n                    }\n                } else if(pig[pig[i].next].who==2&&pig[i].who==1) {\n                    for(register int j=1; j<=pig[i].sum; ++j) {\n                        pig[i].card[j]=-1;\n                    }\n                    pig[i].fire=0;\n                } else if(pig[1].fight==-1) {\n                    print();\n                    return;\n                }\n                pig[i].next=pig[pig[i].next].next,pig[pig[i].next].last=pig[i].last;\n            }\n        }\n    }\n}\nvoid pk(int i,int j) {\n    int temp=0;\n    if(nochange(i,j,1))return;\n    if(pig[i].who==1&&pig[j].who==2) {\n        --pig[j].blood;\n        if(!pig[j].blood) {\n            for(register int k=1; k<=pig[j].sum; ++k) {\n                if(pig[j].card[k]=='P') {\n                    temp=1;\n                    ++pig[j].blood;\n                    pig[j].card[k]=-1;\n                    break;\n                }\n            }\n            if(!temp) {\n                pig[j].fight=-1;\n                for(register int k=1; k<=pig[i].sum; ++k) {\n                    pig[i].card[k]=-1;\n                }\n                pig[i].fire=0;\n                pig[pig[j].last].next=pig[j].next,pig[pig[j].next].last=pig[j].last;\n            }\n        }\n        return;\n    } else if(pig[i].who<=2&&pig[j].who==3) {\n        int pick=0;\n        while(1) {\n            pick=0;\n            for(register int k=1; k<=pig[j].sum; ++k) {\n                if(pig[j].card[k]=='K') {\n                    pig[j].card[k]=-1;\n                    pick=1;\n                    break;\n                }\n            }\n            if(!pick) {\n                pick=2;\n                break;\n            }\n            pick=0;\n            for(register int k=1; k<=pig[i].sum; ++k) {\n                if(pig[i].card[k]=='K') {\n                    pig[i].card[k]=-1;\n                    pick=1;\n                    break;\n                }\n            }\n            if(!pick) {\n                pick=3;\n                break;\n            }\n        }\n        if(pick==2) {\n            --pig[j].blood;\n            if(!pig[j].blood) {\n                for(register int k=1; k<=pig[j].sum; ++k) {\n                    if(pig[j].card[k]=='P') {\n                        temp=1;\n                        ++pig[j].blood;\n                        pig[j].card[k]=-1;\n                        break;\n                    }\n                }\n                if(!temp) {\n                    pig[j].fight=-1;\n                    --killer;\n                    if(!killer) {\n                        print();\n                        return;\n                    }\n                    int cnt=1;\n                    while(cnt<=3) {\n                        pig[i].card[++pig[i].sum]=cdstack[point];\n                        if(point<m)++point;\n                        ++cnt;\n                    }\n                    pig[pig[j].last].next=pig[j].next,pig[pig[j].next].last=pig[j].last;\n                }\n            }\n        } else {\n            --pig[i].blood;\n            if(!pig[i].blood) {\n                for(register int k=1; k<=pig[i].sum; ++k) {\n                    if(pig[i].card[k]=='P') {\n                        ++pig[i].blood;\n                        temp=1;\n                        pig[i].card[k]=-1;\n                        break;\n                    }\n                }\n                if(!temp) {\n                    pig[i].fight=-1;\n                    if(pig[i].who==1) {\n                        print();\n                        return;\n                    }\n                    pig[pig[i].last].next=pig[i].next,pig[pig[i].next].last=pig[i].last;\n                }\n            }\n        }\n        return;\n    } else if(pig[i].who==3) {\n        int pick=0;\n        while(1) {\n            pick=0;\n            for(register int k=1; k<=pig[j].sum; ++k) {\n                if(pig[j].card[k]=='K') {\n                    pig[j].card[k]=-1;\n                    pick=1;\n                    break;\n                }\n            }\n            if(!pick) {\n                pick=2;\n                break;\n            }\n            pick=0;\n            for(register int k=1; k<=pig[i].sum; ++k) {\n                if(pig[i].card[k]=='K') {\n                    pig[i].card[k]=-1;\n                    pick=1;\n                    break;\n                }\n            }\n            if(!pick) {\n                pick=3;\n                break;\n            }\n        }\n        if(pick==2) {\n            --pig[j].blood;\n            if(!pig[j].blood) {\n                for(register int k=1; k<=pig[j].sum; ++k) {\n                    if(pig[j].card[k]=='P') {\n                        temp=1;\n                        ++pig[j].blood;\n                        pig[j].card[k]=-1;\n                        break;\n                    }\n                }\n                if(!temp) {\n                    pig[j].fight=-1;\n                    if(pig[j].who==1) {\n                        print();\n                        return;\n                    }\n                    pig[pig[j].last].next=pig[j].next,pig[pig[j].next].last=pig[j].last;\n                }\n            }\n        } else {\n            --pig[i].blood;\n            if(!pig[i].blood) {\n                for(register int k=1; k<=pig[i].sum; ++k) {\n                    if(pig[i].card[k]=='P') {\n                        ++pig[i].blood;\n                        temp=1;\n                        pig[i].card[k]=-1;\n                        break;\n                    }\n                }\n                if(!temp) {\n                    pig[i].fight=-1;\n                    --killer;\n                    if(!killer) {\n                        print();\n                        return;\n                    }\n                    int cnt=1;\n                    while(cnt<=3) {\n                        pig[j].card[++pig[j].sum]=cdstack[point];\n                        if(point<m)++point;\n                        ++cnt;\n                    }\n                    pig[pig[i].last].next=pig[i].next,pig[pig[i].next].last=pig[i].last;\n                }\n            }\n        }\n        return;\n    }\n}\nvoid game() {\n    while(1) {\n        for(register int i=1; i<=n; ++i) {\n            if(pig[i].fight!=-1) {\n                int cnt=1;\n                while(cnt<=2) {\n                    pig[i].card[++pig[i].sum]=cdstack[point];\n                    if(point<m)++point;\n                    ++cnt;\n                }\n                int nowfire=0;\n                for(register int j=1; j<=pig[i].sum; ++j) {\n                    if(pig[i].card[j]!=-1&&pig[i].fight!=-1) {\n                    \tif(pig[i].card[j]=='K'&&(nowfire==0||pig[i].fire==1)) {\n                        \tif(pig[i].who==3&&pig[pig[i].next].who==1) {\n                                pig[i].fight=2;\n                                pig[i].card[j]=-1;\n                                kill(i);\n                                j=0;\n                                ++nowfire;\n                            } else if(pig[i].who==3&&pig[pig[i].next].fight==1) {\n                                pig[i].fight=2;\n                                pig[i].card[j]=-1;\n                                kill(i);\n                                j=0;\n                                ++nowfire;\n                            } else if(pig[i].who==1&&pig[pig[i].next].fight==2) {\n                                pig[i].card[j]=-1;\n                                kill(i);\n                                j=0;\n                                ++nowfire;\n                            } else if(pig[i].who==2&&pig[pig[i].next].fight==2) {\n                                pig[i].fight=1;\n                                pig[i].card[j]=-1;\n                                kill(i);\n                                j=0;\n                                ++nowfire;\n                            } else if(pig[i].who==1&&pig[pig[i].next].fight==3) {\n                                pig[i].card[j]=-1;\n                                kill(i);\n                                j=0;\n                                ++nowfire;\n                            }\n                        } else if(pig[i].card[j]=='P'&&pig[i].blood<4) {\n                            pig[i].card[j]=-1;\n                            ++pig[i].blood;\n                        } else if(pig[i].card[j]=='Z') {\n                            pig[i].card[j]=-1;\n                            pig[i].fire=1;\n                            j=0;\n                        } else if(pig[i].card[j]=='N'||pig[i].card[j]=='W') {\n                            char cc=pig[i].card[j];\n                            pig[i].card[j]=-1;\n                            aoe(i,cc);\n                            j=0;\n                        } else if(pig[i].card[j]=='F') {\n                            if(pig[i].who==1) {\n                                int nowpig=0;\n                                for(register int k=pig[i].next; k!=i; k=pig[k].next) {\n                                    if(pig[k].fight>=2) {\n                                        nowpig=k;\n                                        break;\n                                    }\n                                }\n                                if(nowpig) {\n                                    pig[i].card[j]=-1;\n                                    pk(i,nowpig);\n                                    j=0;\n                                }\n                            } else if(pig[i].who==3) {\n                                pig[i].fight=2;\n                                pig[i].card[j]=-1;\n                                pk(i,1);\n                                j=0;\n                            } else if(pig[i].who==2) {\n                                int nowpig=0;\n                                for(register int k=pig[i].next; k!=i; k=pig[k].next) {\n                                    if(pig[k].fight==2) {\n                                        nowpig=k;\n                                        break;\n                                    }\n                                }\n                                if(nowpig) {\n                                    pig[i].fight=1;\n                                    pig[i].card[j]=-1;\n                                    pk(i,nowpig);\n                                    j=0;\n                                }\n                            }\n                        }\n                        if(pig[1].fight==-1||!killer)return;\n                    }\n                }\n            }\n        }\n    }\n}\nint main() {\n    init();\n    game();\n    return 0;\n}\n```\n",
        "postTime": 1554118696,
        "uid": 85514,
        "name": "\u4e07\u4e07\u6ca1\u60f3\u5230",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2482\u3010SDOI2010\u3011\u732a\u56fd\u6740"
    },
    {
        "content": "## \u4e00\u4e2a\u6b63\u5e38\u4eba\u662f\u4e0d\u4f1a\u505a\u8fd9\u79cd\u9898\u7684...\n\n\u67d0\u5e74\u67d0\u6708\u67d0\u5929\uff0c\u6211\u6821\u673a\u623f\u6709\u4e2a\u53ef\u601c\u4eba\u88ab\u4eba\u5f3a\u884c\u7acb\u4e86\u4e2aflag:9\u6708\u6708\u5e95\u505a\u4e0d\u51fa\u6765luoguP2482\u5c31\u5973\u88c5\uff01\u4e8e\u662f\u4ed6\u62fc\u547d\u7684\u8c03\u4ee3\u7801\u30025\u5206\uff0c10\u5206\uff0c25\u5206......95\u5206\u3002\u6700\u540e\u5b9e\u5728\u4e0d\u884c\u4e86\u6c42\u6551\u4e86\u673a\u623f\u5927\u4f6cWY\u624dAC\u3002\n\n\u8fd9\u4f4d\u540c\u5fd7\u7684\u7cbe\u795e\u611f\u52a8\u4e86\u673a\u623f\uff0c\u4e8e\u662f\u5168\u673a\u623f\u90fd\u5f00\u59cb\u75af\u72c2\u7684\u8c03\u8fd9\u9053\u9898\u3002\u6211\u4e5f~~\u4e0d\u5e78~~\u5e78\u8fd0\u7684\u6210\u4e3a\u4e86\u5176\u4e2d\u7684\u4e00\u5458\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u6a21\u62df\uff0c\u5927\u6982\u662f\u56e0\u4e3a\u6211\u5e73\u65f6\u95f2\u7684\u6ca1\u4e8b\u559c\u6b22\u505a\u6e38\u620f\uff0c\u6240\u4ee5\u611f\u89c9\u633a\u7b80\u5355\u7684\u3002\n\n\u628a\u5404\u79cd\u884c\u4e3a\u5c01\u88c5\u6210\u81ea\u7531\u51fd\u6570\uff0c\u5f53\u7136\u5982\u679c\u4f60\u60f3\u5efaclass\u4e5f\u6ca1\u6709\u95ee\u9898\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\n/*\n\u00a1\u00be\u00cc\u00d2\u00a1\u00bf P\n\u00a1\u00be\u00c9\u00b1\u00a1\u00bf K\n\u00a1\u00be\u00c9\u00c1\u00a1\u00bf D\n\u00a1\u00be\u00be\u00f6\u00b6\u00b7\u00a1\u00bf F\n\u00a1\u00be\u00c4\u00cf\u00c2\u00f9\u00c8\u00eb\u00c7\u00d6\u00a1\u00bf N\n\u00a1\u00be\u00cd\u00f2\u00bc\u00fd\u00c6\u00eb\u00b7\u00a2\u00a1\u00bf W\n\u00a1\u00be\u00ce\u00de\u00d0\u00b8\u00bf\u00c9\u00bb\u00f7\u00a1\u00bf J\n\u00a1\u00be\u00d6\u00ee\u00b8\u00f0\u00c1\u00ac\u00e5\u00f3\u00a1\u00bf Z\n*/\n\nconst int MAX_PLAYER_NUM = 100 + 5;\nconst int MAX_CARD_NUM = 2000 + 5;\nclass PIG\n{\npublic:\n\tint\t\tcard_num;\n\tint\t\tlife_num;\n\tint\t\t_next;\n\tint\t\t_last;\n\tchar\tidentity;\n\tchar\tcard[MAX_CARD_NUM];\n\tbool\tisGetedZgln;\n} A[MAX_PLAYER_NUM];\nchar\tid_in_king[MAX_PLAYER_NUM]; \t//\u5728\u4e3b\u516c\u773c\u91cc\u8bf8\u732a\u7684\u8eab\u4efd\nchar\tcard_set[MAX_CARD_NUM];\nchar\tscanner[MAX_PLAYER_NUM];\nint\t\tn, m, bad_man_num;\nbool\tGG;  //\u4e3b\u516c\u662f\u5426GG\n\ninline\t void\t\tinitt(\t \t \t\t   \t    );\ninline\t void\t\tstart(\t\t  \t \t \t    );\ninline\t void\t\tmopai(       int fuck       );  //\u4e0d\u77e5\u9053\u600e\u4e48\u547d\u540d\u4e86...\ninline\t void\t\tnmrqq(\t\t int fuck       );\ninline\t void\t\twjqff(\t\t int fuck       );\ninline\t void\t\tjisha( int Killer, int GGer );\ninline\t void\t\tkilll( int Killer, int GGer );\ninline\t void\t\tjdddd( int Killer, int GGer );\ninline\t bool\t\twxkjj(int x1, int x2, int x3);   //\u4e3a\u4e86\u5bf9\u9f50\n\nsigned main()\n{\n\tinitt();\n\tstart();\n\tif (A[1].life_num <= 0)\tputs(\"FP\");\n\telse puts(\"MP\");\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (A[i].life_num <= 0)\tputs(\"DEAD\");\n\t\telse\n\t\t{\n\t\t\tfor (int j = 1; j <= A[i].card_num; ++j)\n\t\t\t\tif (A[i].card[j] != 'U')\tprintf(\"%c \", A[i].card[j]);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}\n\ninline void\tinitt()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; ++i)\tA[i]._next = i + 1, A[i]._last = i - 1;\n\tA[n]._next = 1, A[1]._last = n;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tfor (int j = 1; j < MAX_CARD_NUM; ++j)\tA[i].card[j] = 'U';\n\t\tscanf(\"%s\", scanner);\n\t\tA[i].identity = scanner[0];\n\t\tfor (int j = 1; j < 5; ++j)\tscanf(\"%s\", scanner), A[i].card[j] = scanner[0];\n\t\tA[i].life_num = A[i].card_num = 4;\n\t\tif (A[i].identity == 'F')\tbad_man_num++;\n\t\tA[i].isGetedZgln = false;\n\t}\n\tid_in_king[1] = 'M';\n\tfor (int i = 2; i <= n; ++i)\tid_in_king[i] = 'U';\n\tfor (int i = 1; i <= m; ++i)\tscanf(\"%s\", scanner), card_set[m - i + 1] = scanner[0];\n}\n\ninline void start()\n{\n\tchar now_card;\n\tGG = true;\n\tif (bad_man_num) GG = false;\n\tif (GG)\t\treturn;\n\tfor (int i = 1; i; i = A[i]._next)\n\t{\n\t\tmopai(i), mopai(i);\n\t\tbool isKilled = true;\n\t\tfor (int j = 1; j <= A[i].card_num; ++j)\n\t\t{\n\t\t\tif (A[i].card[j] != 'U')\n\t\t\t{\n\t\t\t\tif (!A[i].life_num)\tbreak;\n\t\t\t\tnow_card = A[i].card[j];\n\n\t\t\t\tif (now_card == 'P')\n\t\t\t\t{\n\t\t\t\t\tif (A[i].life_num != 4)\tA[i].life_num++, A[i].card[j] = 'U';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (now_card == 'K')\n\t\t\t\t{\n\t\t\t\t\tif (!isKilled && !A[i].isGetedZgln)\tcontinue;\n\t\t\t\t\tif ((A[i].identity == 'M') && (id_in_king[A[i]._next] != 'L') && (id_in_king[A[i]._next] != 'F'))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif ((A[i].identity == 'Z') && (id_in_king[A[i]._next] != 'F'))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif ((A[i].identity == 'F') && (id_in_king[A[i]._next] != 'Z') && (id_in_king[A[i]._next] != 'M'))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tA[i].card[j] = 'U';\n\t\t\t\t\tkilll(i, A[i]._next);\n\t\t\t\t\tid_in_king[i] = A[i].identity;\n\t\t\t\t\tisKilled = false;\n\t\t\t\t\tif (GG)\treturn;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (now_card == 'F')\n\t\t\t\t{\n\t\t\t\t\tif (A[i].identity == 'F')\n\t\t\t\t\t{\n\t\t\t\t\t\tA[i].card[j] = 'U';\n\t\t\t\t\t\tjdddd(i, 1);\n\t\t\t\t\t\tid_in_king[i] = A[i].identity;\n\t\t\t\t\t\tif (GG)\treturn;\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfor (int k = A[i]._next; k != i; k = A[k]._next)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ((A[i].identity == 'M' && (id_in_king[k] == 'L' || id_in_king[k] == 'F')) || (A[i].identity == 'Z' && id_in_king[k] == 'F'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tA[i].card[j] = 'U';\n\t\t\t\t\t\t\tjdddd(i, k);\n\t\t\t\t\t\t\tid_in_king[i] = A[i].identity;\n\t\t\t\t\t\t\tif (GG)\treturn;\n\t\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\t\n\n\t\t\t\tif (now_card == 'N')\n\t\t\t\t{\n\t\t\t\t\tA[i].card[j] = 'U';\n\t\t\t\t\tnmrqq(i);\n\t\t\t\t\tif (GG)\treturn;\n\t\t\t\t\tj = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (now_card == 'W')\n\t\t\t\t{\n\t\t\t\t\tA[i].card[j] = 'U';\n\t\t\t\t\twjqff(i);\n\t\t\t\t\tif (GG)\treturn;\n\t\t\t\t\tj = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (now_card == 'Z')\n\t\t\t\t{\n\t\t\t\t\tA[i].isGetedZgln = true;\n\t\t\t\t\tA[i].card[j] = 'U';\n\t\t\t\t\tj = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void mopai(int fuck)\n{\n\tif (!m)\tm++;\n\tA[fuck].card[++A[fuck].card_num] = card_set[m];\n\tm--;\n}\n\ninline void nmrqq(int fuck)\n{\n\tfor (int shit = A[fuck]._next; shit != fuck; shit = A[shit]._next)\n\t{\n\t\tif (!wxkjj(fuck, shit, 1))\n\t\t{\n\t\t\tint i;\n\t\t\tfor (i = 1; i <= A[shit].card_num; ++i)\n\t\t\t{\n\t\t\t\tif (A[shit].card[i] == 'K')\n\t\t\t\t{\n\t\t\t\t\tA[shit].card[i] = 'U';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i > A[shit].card_num)\n\t\t\t{\n\t\t\t\tA[shit].life_num--;\n\t\t\t\tif (shit == 1 && id_in_king[fuck] == 'U')\tid_in_king[fuck] = 'L';\n\t\t\t\tif (!A[shit].life_num) jisha(fuck, shit);\n\t\t\t\tif (GG)\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void wjqff(int fuck)\n{\n\tfor (int shit = A[fuck]._next; shit != fuck; shit = A[shit]._next)\n\t{\n\t\tif (!wxkjj(fuck, shit, 1))\n\t\t{\n\t\t\tint i;\n\t\t\tfor (i = 1; i <= A[shit].card_num; ++i)\n\t\t\t{\n\t\t\t\tif (A[shit].card[i] == 'D')\n\t\t\t\t{\n\t\t\t\t\tA[shit].card[i] = 'U';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i > A[shit].card_num)\n\t\t\t{\n\t\t\t\tA[shit].life_num--;\n\t\t\t\tif (shit == 1 && id_in_king[fuck] == 'U')\tid_in_king[fuck] = 'L';\n\t\t\t\tif (!A[shit].life_num)\tjisha(fuck, shit);\n\t\t\t\tif (GG)\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void jisha(int Killer, int GGer)\n{\n\tfor (int i = 1; i <= A[GGer].card_num; ++i)\n\t{\n\t\tif (A[GGer].card[i] == 'P')\n\t\t{\n\t\t\tA[GGer].card[i] = 'U';\n\t\t\tA[GGer].life_num++;\n\t\t\treturn ;\n\t\t}\n\t}\n\t\n\tA[A[GGer]._next]._last = A[GGer]._last;\n\tA[A[GGer]._last]._next = A[GGer]._next;\n\t\n\tif (GGer == 1)\n\t{\n\t\tGG = true;\n\t\treturn ;\n\t}\n\t\n\tif (A[GGer].identity == 'F')\tbad_man_num--;\n\t\n\tif (!bad_man_num)\n\t{\n\t\tGG = true;\n\t\treturn ;\n\t}\n\t\n\tif (A[GGer].identity == 'F')\tmopai(Killer), mopai(Killer), mopai(Killer);\n\t\n\tif (A[GGer].identity == 'Z' && A[Killer].identity == 'M')\tA[Killer].card_num = 0, A[Killer].isGetedZgln = false;\n}\n\ninline void killl(int Killer, int GGer)\n{\n\tfor (int i = 1; i <= A[GGer].card_num; ++i)\n\t{\n\t\tif (A[GGer].card[i] == 'D')\n\t\t{\n\t\t\tA[GGer].card[i] = 'U';\n\t\t\treturn ;\n\t\t}\n\t}\n\tA[GGer].life_num--;\n\tif (!A[GGer].life_num)\tjisha(Killer, GGer);\n}\n\ninline void jdddd(int Killer, int GGer)\n{\n\tint fuck, shit;\n\tif (wxkjj(Killer, GGer, 1))\treturn ;\n\t\n\tif (Killer == 1 && A[GGer].identity == 'Z')\n\t{\n\t\tA[GGer].life_num--;\n\t\tif (!A[GGer].life_num)\tjisha(Killer, GGer);\n\t\treturn ;\n\t}\n\t\n\tfuck = shit = 1;\n\t\n\twhile (233)\n\t{\n\t\twhile (A[GGer].card[fuck] != 'K' && fuck <= A[GGer].card_num)\t++fuck;\n\t\tif (fuck > A[GGer].card_num)\n\t\t{\n\t\t\tA[GGer].life_num--;\n\t\t\tif (!A[GGer].life_num)\tjisha(Killer, GGer);\n\t\t\treturn ;\n\t\t}\n\t\telse A[GGer].card[fuck] = 'U';\n\t\t\n\t\twhile (A[Killer].card[shit] != 'K' && shit <= A[Killer].card_num)\t++shit;\n\t\tif (shit > A[Killer].card_num)\n\t\t{\n\t\t\tA[Killer].life_num--;\n\t\t\tif (!A[Killer].life_num)\tjisha(GGer, Killer);\n\t\t\treturn ;\n\t\t}\n\t\telse A[Killer].card[shit] = 'U';\n\t}\n}\n\ninline bool wxkjj(int x1, int x2, int x3)\n{\n\tint i = x1;\n\twhile (233)\n\t{\n\t\tif (x3 == 1)\n\t\t{\n\t\t\tif (id_in_king[x2] == A[i].identity || (id_in_king[x2] == 'M' && A[i].identity == 'Z') || (id_in_king[x2] == 'Z' && A[i].identity == 'M'))\n\t\t\t{\n\t\t\t\tfor (int j = 1; j <= A[i].card_num; ++j)\n\t\t\t\t{\n\t\t\t\t\tif (A[i].card[j] == 'J')\n\t\t\t\t\t{\n\t\t\t\t\t\tA[i].card[j] = 'U';\n\t\t\t\t\t\tid_in_king[i] = A[i].identity;\n\t\t\t\t\t\treturn !wxkjj(i, x1, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tif (((A[i].identity == 'M' || A[i].identity == 'Z') && id_in_king[x1] == 'F') || (A[i].identity == 'F' && (id_in_king[x1] == 'M' || id_in_king[x1] == 'Z')))\n\t\t\t{\n\t\t\t\tfor (int j = 1; j <= A[i].card_num; ++j)\n\t\t\t\t{\n\t\t\t\t\tif (A[i].card[j] == 'J')\n\t\t\t\t\t{\n\t\t\t\t\t\tA[i].card[j] = 'U';\n\t\t\t\t\t\tid_in_king[i] = A[i].identity;\n\t\t\t\t\t\treturn !wxkjj(i, x1, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ti = A[i]._next;\n\t\tif (i == x1)\tbreak;\n\t}\n\treturn false;\n}\n```\n\n",
        "postTime": 1570098464,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u4ece7.20\u505a\u52308.5\uff0c\u7ec8\u4e8eA\u4e86\u8fd9\u9898\n\n\u8fd9\u7bc7\u9898\u89e3\u7684\u601d\u8def\u53ef\u80fd\u6709\u4e9b\u4e0d\u540c\uff0c\u7528\u5230\u4e86std::list\uff0c\u7ee7\u627f\u3001\u591a\u6001\u4e0e\u865a\u51fd\u6570\u3002\n\n## \u603b\u4f53\u601d\u8def\n\n### \u54cd\u5e94\n\n\u73a9\u8fc7\u4e09\u56fd\u6740\u7684\u540c\u5b66\u4eec\uff0c\u53ef\u80fd\u4f1a\u8bb0\u5f97\u9ec4\u5fe0\u6280\u80fd\u4e2d\u6709\u8fd9\u6837\u4e00\u6bb5\u8bdd\uff1a\u201c\u2026\u2026\uff0c\u5219\u6b64\u3010\u6740\u3011\u4e0d\u80fd\u88ab\u3010\u95ea\u3011**\u54cd\u5e94**\u3002\u201d\n\n\u8fd9\u6837\u53ef\u4ee5\u770b\u51fa\uff0c\u4e09\u56fd\u6740\u4e2d\uff0c\u3010\u95ea\u3011\u5176\u5b9e\u5c31\u662f\u4e00\u79cd**\u54cd\u5e94**\u624b\u6bb5\uff0c\u800c\u4e07\u7bad\u3001\u5357\u86ee\u4e0e\u51b3\u6597\u4e2d\u6253\u51fa\u7684\u3010\u6740\u3011\u548c\u3010\u95ea\u3011\u3001\u6fd2\u6b7b\u7684\u3010\u6843\u3011\u4e5f\u90fd\u662f**\u54cd\u5e94**\u3002\u66f4\u8fdb\u4e00\u6b65\uff0c\u6263\u8840\u56de\u8840\u4e5f\u80fd\u79f0\u4f5c\u54cd\u5e94\u3002\n\n\u5728\u8fd9\u4e2a\u601d\u60f3\u4e0b\uff0c\u4ee3\u7801\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u5927\u5934\u51fd\u6570Player::react()\uff0c\u4e13\u95e8\u7528\u4e8e\u54cd\u5e94\u3002\n\n### \u591a\u6001\n\n\u8bb8\u591a\u9898\u89e3\u7684\u753b\u98ce\u90fd\u662f\uff1a\u4e3a\u6bcf\u79cd\u724c\u5355\u72ec\u5199\u4e2a\u51fd\u6570\uff0c\u5230\u65f6\u5019\u5224\u65ad\u662f\u54ea\u79cd\u724c\uff0c\u7136\u540e\u8c03\u7528\u3002\n\n\u8fd0\u7528C++\u81ea\u5e26\u7684\u591a\u6001\u673a\u5236\uff0c\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\u6613\u61c2\uff08~~\u867d\u7136\u8fd8\u662f\u6709\u5c06\u8fd1500\u884c~~\uff09\u3002\n\n\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6240\u6709\u5361\u724c\u90fd\u662fCard\u7c7b\u7684\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\uff1b\u5b83\u4eec\u90fd\u91cd\u8f7d\u4e86Card::use()\u51fd\u6570\u3002\u7136\u800c\u8981\u6ce8\u610f\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u5fc5\u987b\u901a\u8fc7\u6307\u9488\u8c03\u7528\uff1b\u6240\u4ee5\u9700\u8981new\u3002\n\n\u7531\u4e8e\u8fd9\u9898\u4ec0\u4e48\u90fd\u4e0d\u5361\uff0c\u6240\u4ee5\u4e0d\u9700\u8981delete\u3002\u7a0b\u5e8f\u7ed3\u675f\u4f1a\u81ea\u52a8\u91ca\u653e\u5185\u5b58\u7684\u3002\n\n### \u5c0f\u6280\u5de7\n\n#### 1\n\n\u5199\u4e86\u5f88\u591a\u8c03\u8bd5\u7684printf\uff1f\u63d0\u4ea4\u7684\u65f6\u5019\u4e00\u4e2a\u4e00\u4e2a\u5220\u5f88\u9ebb\u70e6\uff1f\n```cpp\n#define printf(...) 1\n```\n\u8fd9\u53e5\u8bdd\u53ef\u4ee5\u5341\u5206\u5b8c\u7f8e\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e0d\u8fc7\u8f93\u51fa\u5c31\u8981\u7528cout\u4e86\u3002\n\ndefine\u4e3a1\u7684\u539f\u56e0\u662f\uff0cprintf()\u662f\u8fd4\u56deint\u7684\u51fd\u6570\u3002\u5176\u5b9edefine\u6210void()\u4e5f\u6ca1\u6709\u5173\u7cfb\uff0c\u4f46define\u4e3a\u7a7a\u7684\u8bdd\u53ef\u80fd\u4f1aCE\uff0c\u6bd4\u5982\u653e\u5728\u4e00\u8fde\u4e32\u9017\u53f7\u63a5\u8d77\u6765\u7684\u8bed\u53e5\u91cc\u9762\u3002\n\n#### 2\n\u8c03\u8bd5\u51fa\u4e86\u95ee\u9898\uff1f\u8fd9\u9898\u7684\u8ba8\u8bba\u533a\u91cc\u6709\u4e2a\u633a\u597d\u7684\u6570\u636e\u751f\u6210\u5668\uff0c\u7136\u540e\u62ff\u8d70\u8fd9\u7bc7\u9898\u89e3\uff0c\u53bb\u5bf9\u62cd\u5427:)\n\n\u5982\u679c\u8fd9\u7bc7\u9898\u89e3\u9677\u5165\u4e86\u6b7b\u5faa\u73af\uff0c\u90a3\u4e48\u53ef\u80fd\u662f\u751f\u6210\u6570\u636e\u7684\u95ee\u9898\u3002\n\n## \u8e29\u5751\n\n\u4e0b\u9762\u8bf4\u4e00\u4e0b\u81ea\u5df1\u8e29\u8fc7\u7684\u5751\uff08\u524d\u9762\u7684\u9898\u89e3\u8bf4\u4e86\u7684\u5c31\u4e0d\u8bf4\u4e86\uff09\uff1a\n\n1. \u9996\u5148\uff0c\u7528\u5b8c\u4e00\u5f20\u724c\u4e4b\u540e\u8981\u518d\u626b\u4e00\u904d\u6240\u6709\u724c\uff1b\u8fd9\u4e2a\u65f6\u5019\uff0c\u5982\u679c\u76f4\u63a5\u8d4b\u503ci = cards.begin()\uff0c\u9047\u5230for\u91cc\u7684i++\u4f1a\u518d\u52a01\u3002\u6240\u4ee5\u9700\u8981\u7279\u5224\u3002\n2. \u540c\u7406\uff0c\u5728\u8be2\u95ee\u65e0\u61c8\u7684\u65f6\u5019\uff0c\u5982\u679c\u6709\u4eba\u51fa\u4e86\u65e0\u61c8\uff0c\u9700\u8981i = (\u6b63\u5728\u6267\u884c\u7684\u6b66\u5c06)\uff0c\u9047\u5230for\u91cc\u7684i++\u4e5f\u4f1a\u52a01\uff0c\u4e5f\u8981\u7279\u5224\u3002\n3. \u8bfb\u5165\u724c\u7684\u65f6\u5019\"\\r\\n\"\u53ef\u80fd\u9020\u6210\u8bfb\u4e0d\u8fdb\u53bb\uff1b\u8fd8\u8981\u8bb0\u4f4fisblank()\u548cisspace()\u7684\u533a\u522b\u3002\n4. \u3010\u51b3\u6597\u3011\u4f7f\u7528\u7684\u90a3\u4e00\u523b\u5c31\u53ef\u4ee5\u5224\u65ad\u8eab\u4efd\u4e86\uff0c\u800c\u4e0d\u662f\u751f\u6548\u4e86\u624d\u5224\u65ad\uff0c\u56e0\u4e3a\u53ef\u80fd\u6839\u672c\u4e0d\u80fd\u751f\u6548\u3002\n5. \u7528\u5b8c\u7684\u624b\u724c\u6700\u597d\u4e0d\u8981\u76f4\u63a5\u5220\uff0c\u800c\u662f\u6253\u4e2a\u6807\u8bb0\u7b49\u4e0b\u56de\u5408\u518d\u5220\u3002\u56e0\u4e3a\u5982\u679c\u8fd9\u662f\u5728\u54cd\u5e94\u8fc7\u7a0b\u4e2d\uff0c\u5220\u724c\u53ef\u80fd\u4f1a\u628alist::iterator\u5f04\u4e71\u3002\n6. \u540c\u7406\uff0c\u5982\u679c\u5728\u81ea\u5df1\u7684\u56de\u5408\u6b7b\u4ea1\uff0c\u4e5f\u4e0d\u8981\u6025\u7740cards.clear()\uff0c\u5426\u5219list::iterator\u4e5f\u4f1a\u4e71\u6389\u3002\n7. \u5220\u724c\u7684\u65f6\u5019\u4e0d\u80fd\u76f4\u63a5cards.erase(i)\uff0c\u5426\u5219\u5faa\u73af\u5c31\u574f\u4e86\u3002\n8. \u4e3b\u516c\u7684\u8eab\u4efd\u4e00\u76f4\u90fd\u662f\u5df2\u77e5\u7684\u3002\n9. Player\u5728\u6570\u7ec4\u4e2d\u5b58\u50a8\u3002\u4f46\u662f\u901a\u8fc7list<>\u8bbf\u95ee\u7684\u65f6\u5019\u9700\u8981\u7528Player*\uff0c\u5426\u5219\u6539\u4e0d\u4e86\u6570\u7ec4\u91cc\u7684\u503c\u3002\n10. \u5357\u86ee\u4e07\u7bad\u5bb9\u6613\u5199\u6210\u4e00\u65e6\u88ab\u65e0\u61c8\u5c31\u5bf9\u4efb\u4f55\u4eba\u90fd\u4e0d\u751f\u6548\uff0c\u9700\u8981\u6ce8\u610f\u3002\n11. \u5728\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u7528\u7684\u662f\u6307\u9488\uff0c\u4e0d\u80fd\u76f4\u63a5\u8d4b\u503c\uff08\u5426\u5219\u6240\u6709\u4eba\u90fd\u662f\u7528\u7684\u540c\u4e00\u5f20\u724c\uff09\uff0c\u9700\u8981\u590d\u5236\u4e00\u5f20\u518d\u8d4b\u503c\u3002\n12. \u63d0\u4ea4\u7684\u65f6\u5019\u8981\u5220\u6389freopen()\u3002\uff08\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e0a\u9762\u7684define\u5c0f\u6280\u5de7\uff09\n\n\u6700\u540e\u63a8\u4e00\u4e0b\u81ea\u5df1\u7684[\u535a\u5ba2](https://www.luogu.org/blog/user64757/)\uff0c\u7136\u540e\u4e0a\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n\n### \u7c7b\u4e0e\u53d8\u91cf\u7684\u5b9a\u4e49\n\n\u5176\u4e2d\u6709\u4e9b\u53d8\u91cf\u53ef\u80fd\u662f\u4ee5\u524d\u7684\u4ee3\u7801\u4e2d\u7528\u8fc7\uff0c\u540e\u6765\u4e0d\u9700\u8981\u4e86\u7684\u53d8\u91cf\u3002\n\n```cpp\nenum Event {\t\t\t//\u6807\u8bb0\u5404\u79cd\u54cd\u5e94\u7684\u4e8b\u4ef6\n\tslashed, \t\t//\u88ab\u6740\n\trecovered, \t\t//\u56de\u8840\uff08\u5403\u6843\uff09\n\tnullification, \t\t//\u65e0\u61c8\u53ef\u51fb\n\tdueled, \t\t//\u88ab\u51b3\u6597\u6307\u5b9a\u4e3a\u76ee\u6807\n\tduel_affected,\t\t//\u51b3\u6597\u4e2d\uff0c\u9700\u8981\u51fa\u3010\u6740\u3011\n\tsavage_assulted, \t//\u88ab\u5357\u86ee\n\tarchery_attacked,\t//\u88ab\u4e07\u7bad\n\tdamaged,\t\t//\u88ab\u6263\u8840\n\tdying, \t\t\t//0\u8840\uff0c\u6fd2\u6b7b\n\tinf_slash \t\t//\u88c5\u5907\u8bf8\u845b\u5f29\n};\n\nstruct Sudden_death {}; //\u5728\u81ea\u5df1\u7684\u56de\u5408\u4e2d\u7a81\u7136\u53bb\u4e16\nstruct Player;\nstruct Card {\n\tchar self; \t//\u4ee3\u8868\u81ea\u5df1\u7684\u5b57\u7b26\uff08\u6bd4\u5982K, F, D, N\uff09\n\tint type;\t//\u81ea\u5df1\u7684\u79cd\u7c7b\uff08\u7528\u4e8e\u540e\u9762\u7684filter()\uff09\n\tbool used;\t//\u662f\u5426\u7528\u8fc7\n\tvirtual void use(Player*, list<Player*>) { } //\u7ed9\u5b50\u7c7b\u91cd\u8f7d\u7528\u7684\uff0c\u6bcf\u4f7f\u7528\u4e00\u5f20\u724c\u90fd\u4f1a\u8c03\u7528\u5b83\u7684use()\n};\n\ntypedef list<Card*> Pile;\t//\u724c\u5806\nPile pile;\n\nstruct Player {\n\tPile cards;\t//\u624b\u724c\n\tint role; \t//\u8eab\u4efd\u30021: \u4e3b; 2: \u5fe0; 3: \u53cd\n\tint seem; \t//\u8df3\u7684\u8eab\u4efd\u30020: \u6ca1\u8df3; 1: \u7c7b\u53cd; 2: \u5fe0; 3: \u53cd\n\tint hp;\t\t//\u5269\u4f59\u4f53\u529b\n\tbool dead;\t//\u662f\u5426\u6b7b\u4ea1\n\tbool used_slash;//\u662f\u5426\u7528\u4e86\u6740\n\tbool inf_slash;\t//\u662f\u5426\u88c5\u4e86\u8fde\u5f29\n\n\tvoid set_role(const string&);\t//\u628aMP ZP FP\u8f6c\u5316\u6210\u8eab\u4efd\n\tvoid execute();\t\t\t//\u6267\u884c\u56de\u5408\n\tvoid react(Event, Player*);\t//\u54cd\u5e94Player*\u9020\u6210\u7684\u4e8b\u4ef6\n\tvoid draw_cards(int);\t\t//\u6478\u724c\n\tbool usable(const Card*);\t//\u8be5\u724c\u662f\u5426\u80fd\u7528\n\tbool is_friend(const Player*);\t//\u5bf9\u65b9\u662f\u5426\u961f\u53cb\n\n\tPile::iterator ask_for(char);\t//\u627e\u4e00\u5f20\u5bf9\u5e94\u5b57\u7b26\u7684\u724c\n\n\tPlayer() : hp(4) {}\t//\u521d\u59cb\u5316\uff1ahp = 4\n} players[12];\nint loyalist, rebellion;\t//\u5206\u522b\u662f\u5fe0\u81e3\u6570\u4e0e\u53cd\u8d3c\u6570\nint executing; \t\t\t//\u6b63\u5728\u6267\u884c\u56de\u5408\u7684\u4eba\nbool is_effective = true, effect_changed; //\u7528\u4e8e\u65e0\u61c8\u53ef\u51fb\nbool death_caused;\t\t//\u56de\u5408\u5185\u662f\u5426\u6740\u6b7b\u89d2\u8272\nlist<Player*> targets;\t\t//\u4e00\u5f20\u724c\u7684\u76ee\u6807\n```\n\n### \u5404\u79cd\u724c\u7684\u5b9a\u4e49\nuse(Player* from, list<Player*> x)\u4e2d\uff0cfrom\u662f\u8fd9\u5f20\u724c\u7684\u4f7f\u7528\u8005\uff0cx\u662f\u8fd9\u5f20\u724c\u7684\u76ee\u6807\uff1b\u5982\u679cx\u4e3a\u7a7a\uff0c\u5219\u8fd9\u5f20\u724c\u4e0d\u80fd\u4f7f\u7528\u3002\n\n\u4e0b\u9762\u7684\u90e8\u5206\u5e94\u8be5\u6bd4\u8f83\u6d45\u663e\u6613\u61c2\uff0c\u5c31\u4e0d\u8fc7\u591a\u89e3\u91ca\u4e86\u3002\n```cpp\nstruct Slash : Card {\n\tSlash() { type = 1; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\tif (!x.size()) return;\n\t\t(*x.begin())->react(slashed, from);\n\t}\n};\n\nstruct Peach : Card {\n\tPeach() { type = 2; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\t(*x.begin())->react(recovered, from);\n\t}\n};\n\nstruct Duel : Card {\n\tDuel() { type = 3; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\tif (!x.size()) return;\n\t\t(*x.begin())->react(dueled, from); //\u6210\u4e3a\u4e86\u76ee\u6807\uff0c\u786e\u5b9a\u5bf9\u65b9\u8eab\u4efd\n\tagain: //\u5584\u7528goto\n\t\tfor (int j = executing; players[j].role; ++j)\n\t\t\tif (players[j].react(nullification, *x.begin()), effect_changed)\n\t\t\t\teffect_changed = false, j = executing - 1;\n\t\tfor (int j = 0; j < executing; ++j)\n\t\t\tif (players[j].react(nullification, *x.begin()), effect_changed) {\n\t\t\t\tgoto again;\n\t\t\t\teffect_changed = false;\n\t\t\t} //\u8fd9\u5168\u90fd\u662f\u5904\u7406\u65e0\u61c8\u53ef\u51fb\u7684\u4ee3\u7801\n\t\tif (is_effective)\n\t\t\t(*x.begin())->react(duel_affected, from);\n\t\tis_effective = true;\n\t}\n};\n\nstruct SavageAssault : Card {\n\tSavageAssault() { type = 4; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\tfor (list<Player*>::iterator i = x.begin(); i != x.end(); ++i) {\n\t\tagain:\n\t\t\tfor (int j = executing; players[j].role; ++j)\n\t\t\t\tif (players[j].react(nullification, *i), effect_changed)\n\t\t\t\t\teffect_changed = false, j = executing - 1;\n\t\t\tfor (int j = 0; j < executing; ++j)\n\t\t\t\tif (players[j].react(nullification, *i), effect_changed) {\n\t\t\t\t\tgoto again;\n\t\t\t\t\teffect_changed = false;\n\t\t\t\t}\n\t\t\tif (is_effective)\n\t\t\t\t(*i)->react(savage_assulted, from);\n\t\t\tis_effective = true;\n\t\t}\n\t}\n};\n\nstruct ArcheryAttack : Card {\n\tArcheryAttack() { type = 5; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\tfor (list<Player*>::iterator i = x.begin(); i != x.end(); ++i) {\n\t\tagain:\n\t\t\tfor (int j = executing; players[j].role; ++j)\n\t\t\t\tif (players[j].react(nullification, *i), effect_changed)\n\t\t\t\t\teffect_changed = false, j = executing - 1;\n\t\t\tfor (int j = 0; j < executing; ++j)\n\t\t\t\tif (players[j].react(nullification, *i), effect_changed) {\n\t\t\t\t\tgoto again;\n\t\t\t\t\teffect_changed = false;\n\t\t\t\t}\n\t\t\tif (is_effective)\n\t\t\t\t(*i)->react(archery_attacked, from);\n\t\t\tis_effective = true;\n\t\t}\n\t}\n};\n\nstruct Liannu : Card {\n\tLiannu() { type = 6; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\t(*x.begin())->react(inf_slash, from);\n\t}\n};\n```\n### Player\u7684\u5404\u79cd\u51fd\u6570\n```cpp\nvoid Player::set_role(const string& x) { //\u8fd9\u4e2a\u5199\u8d77\u6765\u5f88\u7b80\u5355\n\tif (x == \"MP\") role = 1;\n\tif (x == \"ZP\") role = 2;\n\tif (x == \"FP\") role = 3;\n}\n\nvoid Player::execute() {\n\tif (dead)\n\t\treturn;\n\tprintf(\"\\nIt's Player #%d's turn.\\n\", executing); //\u8bb0\u5f97\u5417\uff1fprintf()\u90fd\u88abdefine\u6389\u4e86\n\tdraw_cards(2);\n\tbool flag = false; //\u4e3a\u4e86\u7279\u5224\u6709\u6ca1\u6709\u91cd\u7f6e\u5faa\u73af\u53d8\u91cfi\n\tfor (Pile::iterator i = cards.begin(); i != cards.end(); flag ? flag = false, i : ++i) //\u5220\u6389\u7528\u8fc7\u7684\u724c\uff08\u8fd9\u91cc\u4e0d\u4f1a\u51fa\u73b0\u54cd\u5e94\uff0c\u6240\u4ee5\u53ef\u4ee5\u653e\u5fc3\u5220\uff09\n\t\tif ((*i)->used) {\n\t\t\tPile::iterator other = i; ++i;\n\t\t\tcards.erase(other); flag = true;\n\t\t}\n\tflag = false;\n\tfor (Pile::iterator i = cards.begin(); i != cards.end(); flag ? flag = false, i : ++i)\n\t\tif (usable(*i)) { //\u5224\u65ad\u662f\u5426\u51fa\u8fc7\u6740\u7684\u64cd\u4f5c\u5df2\u7ecf\u5728usable()\u4e2d\u5b8c\u6210\u4e86\n\t\t\tCard* card = *i;\n\t\t\tcard->used = true;\n\t\t\tprintf(\"Player #%d used %c.\\n\", executing, card->self);\n\t\t\tcard->use(this, targets);\n\t\t\tif (card->self == 'P') continue;\n\t\t\ti = cards.begin(); flag = true;\n\t\t}\n\tused_slash = false;\n\tprintf(\"Player #%d ended his stage.\\n\", executing);\n}\n\nbool Player::is_friend(const Player* x) {\n\tswitch (role) {\n\tcase 1:\n\t\treturn x->seem == 2; //\u4e3b\u516c\u7684seem\u4e5f\u8bbe\u4e3a\u4e862\uff0c\u56e0\u4e3a\u4e0e\u5fe0\u81e3\u7684\u8868\u73b0\u5341\u5206\u76f8\u4f3c\n\tcase 2:\n\t\treturn x->seem && x->seem != 3;\n\tcase 3:\n\t\treturn x->seem == 3;\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nPile::iterator Player::ask_for(char x) { //\u5176\u5b9e\u53ef\u4ee5\u7528std::find()\uff0c\u4f46\u662f\u8c03\u7528\u9ebb\u70e6\n\tfor (Pile::iterator i = cards.begin(); i != cards.end(); ++i)\n\t\tif (!(*i)->used && (*i)->self == x)\n\t\t\treturn i;\n\treturn cards.end();\n}\n\nvoid Player::react(Event ev, Player* from) {\n\tswitch (ev) {\n\n\tcase slashed: {\n\t\tif (seem == 2) //\u66f4\u65b0\u8eab\u4efd\n\t\t\tfrom->seem = 3;\n\t\tif (seem == 3)\n\t\t\tfrom->seem = 2;\n\t\tPile::iterator i = ask_for('D'); //\u627e\u95ea\uff0c\u6ca1\u6709\u6263\u8840\n\t\tif (i == cards.end())\n\t\t\treact(damaged, from);\n\t\telse\n\t\t\t(*i)->used = true;\n\t\tbreak;\n\t}\n\tcase archery_attacked: {\n\t\tPile::iterator i = ask_for('D');\n\t\tif (i == cards.end()) {\n\t\t\tif (role == 1 && !from->seem) //\u7c7b\u53cd\u732a\u7684\u7279\u5224\n\t\t\t\tfrom->seem = 1;\n\t\t\treact(damaged, from);\n\t\t}\n\t\telse (*i)->used = true;\n\t\tbreak;\n\t}\n\tcase dueled: \n\t\tif (seem == 2) //\u53ea\u5224\u65ad\u8eab\u4efd\uff0c\u522b\u7684\u7559\u7ed9duel_affected\u505a\n\t\t\tfrom->seem = 3;\n\t\tif (seem == 3)\n\t\t\tfrom->seem = 2;\n\t\tbreak;\n\tcase duel_affected: {\n\t\tPile::iterator i = ask_for('K');\n\t\tif (i == cards.end() || (role == 2 && from->role == 1)) //\u5fe0\u81e3\u88ab\u4e3b\u516c\u51b3\u6597\u9700\u8981\u76f4\u63a5\u6263\u8840\n\t\t\treact(damaged, from);\n\t\telse\n\t\t\t(*i)->used = true, from->react(duel_affected, this);\n            \t\t//\u4ea4\u6362\u51b3\u6597\u53cc\u65b9\uff0c\u8f6e\u5230\u4f7f\u7528\u8005\u51fa\u6740\u4e86\n\t\tbreak;\n\t}\n\tcase savage_assulted: {\n\t\tPile::iterator i = ask_for('K');\n\t\tif (i == cards.end()) {\n\t\t\tif (role == 1 && !from->seem) //\u4e0e\u4e07\u7bad\u6bd4\u8f83\u50cf\n\t\t\t\tfrom->seem = 1;\n\t\t\treact(damaged, from);\n\t\t}\n\t\telse (*i)->used = true;\n\t\tbreak;\n\t}\n\tcase nullification:\n\t\tif (from->seem < 2) break; //\u6ca1\u8df3\u8eab\u4efd\uff0c\u4e0d\u7ba1\n\t\tif (is_friend(from) ^ !is_effective) { //\u8fd9\u4e2a\u4e0d\u592a\u597d\u89e3\u91ca\u6e05\uff0c\u53ef\u4ee5\u679a\u4e3e\u4e00\u4e0btrue\u548cfalse\u4f53\u4f1a\u4e00\u4e0b\n\t\t\tPile::iterator i = ask_for('J');\n\t\t\tif (i != cards.end()) {\n\t\t\t\t(*i)->used = true;\n\t\t\t\tif ((from->seem == 3) ^ (is_effective = !is_effective)) //\u8fd9\u4e2a\u4e5f\u662f\n\t\t\t\t\tseem = 3;\n\t\t\t\telse seem = 2;\n\t\t\t\teffect_changed = true;\n\t\t\t\tprintf(\"Nullificated by a pig seeming like %d.\\n\", seem);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase damaged:\n\t\tfor (int i = 0; i < 10; ++i)\n\t\t\tif (&players[i] == this)\n\t\t\t\tprintf(\"Player #%d is damaged by Player #%d, having hp %d.\\n\", i, executing, hp - 1);\n\t\tif (role == 1 && from->seem < 2)\n\t\t    from->seem = 1;\n\t\tif (--hp <= 0)\n\t\t\treact(dying, from);\n\t\tbreak;\n\tcase dying: {\n\t\tPile::iterator i;\n\t\twhile (hp <= 0 && (i = ask_for('P')) != cards.end()) //\u6fd2\u6b7b\n\t\t\t(*i)->used = true, ++hp;\n\t\tif (hp <= 0) {\n\t\t\tdead = true;\n\t\t\tdeath_caused = true;\n\t\t\tif (from->role == 1 && role == 2) { //\u4e3b\u516c\u6740\u5fe0\u81e3\uff0c\u6b64\u65f6\u53ef\u80fd\u5728\u4e3b\u516c\u7684\u56de\u5408\u5185\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5clear()\n\t\t\t\tfor (Pile::iterator it = from->cards.begin(); it != from->cards.end(); ++it)\n\t\t\t\t\t(*it)->used = true;\n\t\t\t\tfrom->inf_slash = false;\n\t\t\t}\n\t\t\tif (role == 3) { //\u4e00\u540d\u89d2\u8272\u6b7b\u4ea1\u540e\uff0c\u8981\u66f4\u65b0\u5bf9\u5e94\u7684\u8eab\u4efd\u8ba1\u6570\n\t\t\t\tif (!--rebellion) //\u53cd\u8d3c\u6b7b\u5149\u4e86\u5c31\u6e38\u620f\u7ed3\u675f\uff0c\u7528throw\u5feb\u901f\u9000\u5230main()\u91cc\u7684try-catch\u5757\u4e2d\n\t\t\t\t\tthrow 0;\n\t\t\t\tfrom->draw_cards(3);\n\t\t\t}\n\t\t\tif (role == 2)\n\t\t\t\t--loyalist;\n\t\t\tif (role == 1)\n\t\t\t\tthrow 0;\n\t\t\tif (&players[executing] != this) //\u6b7b\u7684\u4e0d\u662f\u5f53\u524d\u56de\u5408\u89d2\u8272\u7684\u8bdd\u53ef\u4ee5\u653e\u5fc3\u5220\u724c\n\t\t\t\tcards.clear();\n\t\t\telse for (Pile::iterator it = cards.begin(); it != cards.end(); ++it) //\u5426\u5219\u4e0d\u884c\n\t\t\t\t(*it)->used = true;\n\t\t}\n\t\tbreak;\n\t}\n\tcase ::inf_slash: //\u5168\u5c40\u7684inf_slash\u548cPlayer::inf_slash\u91cd\u540d\uff0c\u8981\u6ce8\u610f\u4e00\u4e0b\n\t\tinf_slash = true;\n\t\tbreak;\n\tcase recovered:\n\t\t++hp;\n\t\tbreak;\n\t}\n\n}\n\nbool Player::usable(const Card* x) {\n\tif (x->used) return false; //\u7528\u8fc7\u4e86\u5f53\u7136\u5c31\u4e0d\u80fd\u7528\u4e86\n\tbool used_slash_old = used_slash; //filter()\u53ef\u80fd\u4f1a\u66f4\u6539used_slash\n\ttargets = filter(x, this); //filter()\u7684\u4f5c\u7528\u662f\u9009\u62e9\u53ef\u80fd\u7684\u76ee\u6807\n\tif (!targets.size()) return false; //\u8981\u662f\u6ca1\u6709\u76ee\u6807\u5c31\u7528\u4e0d\u4e86\n\tswitch (x->self) {\n\tcase 'K':\n\t\treturn inf_slash || !used_slash_old;\n\tcase 'P':\n\t\treturn hp < 4;\n\tcase 'Z':\n\tcase 'F':\n\tcase 'N':\n\tcase 'W':\n\t\treturn true;\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nvoid Player::draw_cards(int x) {\n\twhile (x--) {\n\t\tcards.push_back(*pile.begin());\n\t\tif (pile.size() != 2) //\u7531\u4e8e\u5947\u602a\u7684\u539f\u56e0\uff0c\u6700\u540e\u4e00\u5f20\u201c\u724c\u201d\u4e00\u5b9a\u662f'\\r'\uff0c\u6240\u4ee5\u5c31\u5269\u4e24\u5f20\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u518d\u6478\u4e86\n\t\t\tpile.pop_front();\n\t\telse { //\u53ea\u6709\u6700\u540e\u4e00\u5f20\u724c\u7684\u65f6\u5019\u8981\u4e00\u76f4\u6478\uff0c\u800c\u4e14\u662f\u590d\u5236\u4e00\u5f20\n\t\t\tCard* x = *pile.begin();\n\t\t\tCard* c;\n\t\t\tswitch (x->type) {\n\t\t\tcase 5:\n\t\t\t\tc = new ArcheryAttack(); break;\n\t\t\tcase 4:\n\t\t\t\tc = new SavageAssault(); break;\n\t\t\tcase 1:\n\t\t\t\tc = new Slash(); break;\n\t\t\tcase 6:\n\t\t\t\tc = new Liannu(); break;\n\t\t\tcase 3:\n\t\t\t\tc = new Duel(); break;\n\t\t\tcase 2:\n\t\t\t\tc = new Peach(); break;\n\t\t\tdefault:\n\t\t\t\tc = new Card();\n\t\t\t}\n\t\t\tc->used = false;\n\t\t\tc->self = x->self;\n\t\t\tpile.pop_front();\n\t\t\tpile.push_front(c);\n\t\t}\n\t}\n}\n```\n\n### \u5176\u4ed6\u51fd\u6570\n```cpp\nCard* read_card() { //\u8bfb\u724c\n\twhile (isspace(cin.peek())) cin.get(); //cin.peek():\u5176\u5b9e\u5c31\u662fcin.get()\uff0c\u4f46\u662f\u4e0b\u4e00\u6b21get()\u7684\u65f6\u5019get\u5230\u7684\u662f\u8fd9\u4e2a\u5b57\u7b26\u800c\u4e0d\u662f\u4e0b\u4e00\u4e2a\n\tchar self = cin.get();\n\tCard* c;\n\tswitch (self) {\n\tcase 'W':\n\t\tc = new ArcheryAttack(); break;\n\tcase 'N':\n\t\tc = new SavageAssault(); break;\n\tcase 'K':\n\t\tc = new Slash(); break;\n\tcase 'Z':\n\t\tc = new Liannu(); break;\n\tcase 'F':\n\t\tc = new Duel(); break;\n\tcase 'P':\n\t\tc = new Peach(); break;\n\tdefault:\n\t\tc = new Card();\n\t}\n\tc->self = self;\n\tc->used = false;\n\treturn c;\n}\n\nlist<Player*> filter(const Card* x, Player* from) {\n\tlist<Player*> ans(0); //\u6240\u6709\u76ee\u6807\n\tif (x->type == 4 || x->type == 5) { //\u5357\u86ee\u4e07\u7bad\uff0c\u9700\u8981\u987a\u6b21\u628a\u73a9\u5bb6\u52a0\u5165\u76ee\u6807\n\t\tfor (int i = executing + 1; i < 12; ++i)\n\t\t\tif (!players[i].role) break;\n\t\t\telse if (!players[i].dead)\n\t\t\t\tans.push_back(&players[i]);\n\t\tfor (int i = 0; i < executing; ++i)\n\t\t\tif (!players[i].dead)\n\t\t\t\tans.push_back(&players[i]);\n\t\treturn ans;\n\t}\n\tif (x->type == 3) { //\u51b3\u6597\n\t\tfor (int i = executing + 1; i < 12; ++i) {\n\t\t\tif (!players[i].role) break;\n\t\t\tif (players[i].dead) continue;\n\t\t\tif (from->role == 3) { //\u53cd\u8d3c\u76f4\u63a5\u627e\u4e3b\u516c\n\t\t\t\tans.push_back(&players[0]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\tif (from->role == 2 && players[i].seem == 3) { //\u5fe0\u81e3\u627e\u53cd\u8d3c\n\t\t\t\tans.push_back(&players[i]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\tif (from->role == 1 && players[i].seem != 2 && players[i].seem != 0) { //\u4e3b\u516c\u627e\u53cd\u8d3c\u548c\u7c7b\u53cd\u732a\n\t\t\t\tans.push_back(&players[i]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < executing; ++i) { //\u628a\u6ca1\u5faa\u73af\u5b8c\u7684\u5728\u5faa\u73af\u4e00\u904d\n\t\t\tif (players[i].dead) continue;\n\t\t\tif (from->role == 3) {\n\t\t\t\tans.push_back(&players[0]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\tif (from->role == 2 && players[i].seem == 3) {\n\t\t\t\tans.push_back(&players[i]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\tif (from->role == 1 && players[i].seem != 2 && players[i].seem != 0) {\n\t\t\t\tans.push_back(&players[i]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t}\n\t}\n\tif (x->type == 2 || x->type == 6) { //\u6843\u548c\u8bf8\u845b\u5f29\uff0c\u53ea\u80fd\u6307\u5b9a\u81ea\u5df1\u4e3a\u76ee\u6807\n\t\tans.push_back(from);\n\t\treturn ans;\n\t}\n\tif (x->type == 1) { //\u6740\n\t\tPlayer* to = &players[executing];\n\t\tdo\n\t\t\tif (!(++to)->role)\n\t\t\t\tto = players;\n\t\twhile (to->dead); //\u6309\u987a\u5e8f\u627e\u7b2c\u4e00\u4e2a\u6d3b\u7740\u7684\u76ee\u6807\n\t\tif ((to->seem > 1 && !from->is_friend(to)) || (to->seem == 1 && from->role == 1) || (to->role == 1 && from->role == 3)) //\u5982\u679c\u53ef\u4ee5\u6740\n\t\t\tfrom->used_slash = true,\n\t\t\tans.push_back(to);\n\t\treturn ans;\n\t}\n\treturn ans;\n}\n```\n\n### \u4e3b\u51fd\u6570\n```cpp\nint main() {\n\tfreopen(\"temp.in\", \"r\", stdin);\n\tfreopen(\"temp2.out\", \"w\", stdout); //freopen\u50cfprintf\u4e00\u6837\uff0c\u88abdefine\u4e86\n\tint n, m; cin >> n >> m;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring s; cin >> s; Card x;\n\t\tplayers[i].set_role(s); //\u8bfb\u53d6\u8eab\u4efd\n\t\tif (players[i].role == 2)\n\t\t\t++loyalist;\n\t\tif (players[i].role == 3)\n\t\t\t++rebellion;\n\t\tfor (int j = 0; j < 4; ++j) //\u8bfb\u53d6\u624b\u724c\n\t\t\tplayers[i].cards.push_back(read_card());\n\t}\n\tplayers[0].seem = 2; //\u8ba4\u4e3a\u4e3b\u516c\u8df3\u7684\u662f2\uff08\u5fe0\u81e3\uff09\n\tfor (int i = 0; i <= m; ++i)\n\t\tpile.push_back(read_card()); //\u8bfb\u5165\u724c\u5806\n\ttry { //try... catch \u7528\u4e8e\u6355\u6349react()\u4e2dthrow\u51fa\u6765\u7684\u5f02\u5e38(0)\n\t\tfor (;;)\n\t\t\tfor (int i = 0; i < n; ++i)\n\t\t\t\texecuting = i,\n\t\t\t\tplayers[i].execute();\n\t}\n\tcatch (int) {\n\t\tcout << (rebellion ? \"FP\\n\" : \"MP\\n\"); //\u5982\u679c\u53cd\u8d3c\u6b7b\u5149\u4e86\uff0c\u4e3b\u516c\u80dc\u5229\uff0c\u5426\u5219\u5c31\u662f\u53cd\u8d3c\u80dc\u5229\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tif (players[i].dead)\n\t\t\t\tcout << \"DEAD\";\n\t\t\telse for (Pile::iterator it = players[i].cards.begin(); it != players[i].cards.end(); ++it)\n\t\t\t\tif (!(*it)->used) //\u7528\u8fc7\u7684\u724c\u5c31\u4e0d\u8f93\u51fa\u4e86\n\t\t\t\t\tcout << (*it)->self << ' ';\n\t\t\tcout << '\\n';\n\t\t}\n\t\treturn 0;\n\t}\n}\n```\n\n### \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <string>\n#include <cctype>\n#include <list>\n#define printf(...) 1\n#define freopen(...) \nusing namespace std;\n\nenum Event {\n\tslashed,\n\trecovered,\n\tnullification,\n\tdueled,\n\tduel_affected,\n\tsavage_assulted,\n\tarchery_attacked,\n\tdamaged,\n\tdying,\n\tinf_slash\n};\n\nstruct Sudden_death {};\nstruct Player;\nstruct Card {\n\tchar self;\n\tint type;\n\tbool used;\n\tvirtual void use(Player*, list<Player*>) { }\n};\n\ntypedef list<Card*> Pile;\nPile pile;\n\nstruct Player {\n\tPile cards;\n\tint role; //1: ZHU;      2: ZHONG;    3: FAN\n\tint seem; //1: seem_FAN; 2: ZHONG;    3: FAN\n\tint hp;\n\tbool dead;\n\tbool used_slash;\n\tbool inf_slash;\n\n\tvoid set_role(const string&);\n\tvoid execute();\n\tvoid react(Event, Player*);\n\tvoid draw_cards(int);\n\tbool usable(const Card*);\n\tbool is_friend(const Player*);\n\n\tPile::iterator ask_for(char);\n\n\tPlayer() : hp(4) {}\n} players[12];\nint loyalist, rebellion;\nint executing;\nbool is_effective = true, effect_changed;\nbool death_caused;\nlist<Player*> targets;\n\nstruct Slash : Card {\n\tSlash() { type = 1; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\tif (!x.size()) return;\n\t\t(*x.begin())->react(slashed, from);\n\t}\n};\n\nstruct Peach : Card {\n\tPeach() { type = 2; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\t(*x.begin())->react(recovered, from);\n\t}\n};\n\nstruct Duel : Card {\n\tDuel() { type = 3; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\tif (!x.size()) return;\n\t\t(*x.begin())->react(dueled, from);\n\tagain:\n\t\tfor (int j = executing; players[j].role; ++j)\n\t\t\tif (players[j].react(nullification, *x.begin()), effect_changed)\n\t\t\t\teffect_changed = false, j = executing - 1;\n\t\tfor (int j = 0; j < executing; ++j)\n\t\t\tif (players[j].react(nullification, *x.begin()), effect_changed) {\n\t\t\t\tgoto again;\n\t\t\t\teffect_changed = false;\n\t\t\t}\n\t\tif (is_effective)\n\t\t\t(*x.begin())->react(duel_affected, from);\n\t\tis_effective = true;\n\t}\n};\n\nstruct SavageAssault : Card {\n\tSavageAssault() { type = 4; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\tfor (list<Player*>::iterator i = x.begin(); i != x.end(); ++i) {\n\t\tagain:\n\t\t\tfor (int j = executing; players[j].role; ++j)\n\t\t\t\tif (players[j].react(nullification, *i), effect_changed)\n\t\t\t\t\teffect_changed = false, j = executing - 1;\n\t\t\tfor (int j = 0; j < executing; ++j)\n\t\t\t\tif (players[j].react(nullification, *i), effect_changed) {\n\t\t\t\t\tgoto again;\n\t\t\t\t\teffect_changed = false;\n\t\t\t\t}\n\t\t\tif (is_effective)\n\t\t\t\t(*i)->react(savage_assulted, from);\n\t\t\tis_effective = true;\n\t\t}\n\t}\n};\n\nstruct ArcheryAttack : Card {\n\tArcheryAttack() { type = 5; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\tfor (list<Player*>::iterator i = x.begin(); i != x.end(); ++i) {\n\t\tagain:\n\t\t\tfor (int j = executing; players[j].role; ++j)\n\t\t\t\tif (players[j].react(nullification, *i), effect_changed)\n\t\t\t\t\teffect_changed = false, j = executing - 1;\n\t\t\tfor (int j = 0; j < executing; ++j)\n\t\t\t\tif (players[j].react(nullification, *i), effect_changed) {\n\t\t\t\t\tgoto again;\n\t\t\t\t\teffect_changed = false;\n\t\t\t\t}\n\t\t\tif (is_effective)\n\t\t\t\t(*i)->react(archery_attacked, from);\n\t\t\tis_effective = true;\n\t\t}\n\t}\n};\n\nstruct Liannu : Card {\n\tLiannu() { type = 6; }\n\tvoid use(Player* from, list<Player*> x) {\n\t\t(*x.begin())->react(inf_slash, from);\n\t}\n};\n\nCard* read_card() {\n\twhile (isspace(cin.peek())) cin.get();\n\tchar self = cin.get();\n\tCard* c;\n\tswitch (self) {\n\tcase 'W':\n\t\tc = new ArcheryAttack(); break;\n\tcase 'N':\n\t\tc = new SavageAssault(); break;\n\tcase 'K':\n\t\tc = new Slash(); break;\n\tcase 'Z':\n\t\tc = new Liannu(); break;\n\tcase 'F':\n\t\tc = new Duel(); break;\n\tcase 'P':\n\t\tc = new Peach(); break;\n\tdefault:\n\t\tc = new Card();\n\t}\n\tc->self = self;\n\tc->used = false;\n\treturn c;\n}\n\nvoid Player::set_role(const string& x) {\n\tif (x == \"MP\") role = 1;\n\tif (x == \"ZP\") role = 2;\n\tif (x == \"FP\") role = 3;\n}\n\nlist<Player*> filter(const Card* x, Player* from) {\n\tlist<Player*> ans(0);\n\tif (x->type == 4 || x->type == 5) {\n\t\tfor (int i = executing + 1; i < 12; ++i)\n\t\t\tif (!players[i].role) break;\n\t\t\telse if (!players[i].dead)\n\t\t\t\tans.push_back(&players[i]);\n\t\tfor (int i = 0; i < executing; ++i)\n\t\t\tif (!players[i].dead)\n\t\t\t\tans.push_back(&players[i]);\n\t\treturn ans;\n\t}\n\tif (x->type == 3) {\n\t\tfor (int i = executing + 1; i < 12; ++i) {\n\t\t\tif (!players[i].role) break;\n\t\t\tif (players[i].dead) continue;\n\t\t\tif (from->role == 3) {\n\t\t\t\tans.push_back(&players[0]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\tif (from->role == 2 && players[i].seem == 3) {\n\t\t\t\tans.push_back(&players[i]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\tif (from->role == 1 && players[i].seem != 2 && players[i].seem != 0) {\n\t\t\t\tans.push_back(&players[i]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < executing; ++i) {\n\t\t\tif (players[i].dead) continue;\n\t\t\tif (from->role == 3) {\n\t\t\t\tans.push_back(&players[0]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\tif (from->role == 2 && players[i].seem == 3) {\n\t\t\t\tans.push_back(&players[i]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t\tif (from->role == 1 && players[i].seem != 2 && players[i].seem != 0) {\n\t\t\t\tans.push_back(&players[i]);\n\t\t\t\treturn ans;\n\t\t\t}\n\t\t}\n\t}\n\tif (x->type == 2 || x->type == 6) {\n\t\tans.push_back(from);\n\t\treturn ans;\n\t}\n\tif (x->type == 1) {\n\t\tPlayer* to = &players[executing];\n\t\tdo\n\t\t\tif (!(++to)->role)\n\t\t\t\tto = players;\n\t\twhile (to->dead);\n\t\tif ((to->seem > 1 && !from->is_friend(to)) || (to->seem == 1 && from->role == 1) || (to->role == 1 && from->role == 3))\n\t\t\tfrom->used_slash = true,\n\t\t\tans.push_back(to);\n\t\treturn ans;\n\t}\n\treturn ans;\n}\n\nvoid Player::execute() {\n\tif (dead)\n\t\treturn;\n\tprintf(\"\\nIt's Player #%d's turn.\\n\", executing);\n\tdraw_cards(2);\n\tbool flag = false;\n\tfor (Pile::iterator i = cards.begin(); i != cards.end(); flag ? flag = false, i : ++i)\n\t\tif ((*i)->used) {\n\t\t\tPile::iterator other = i; ++i;\n\t\t\tcards.erase(other); flag = true;\n\t\t}\n\tflag = false;\n\tfor (Pile::iterator i = cards.begin(); i != cards.end(); flag ? flag = false, i : ++i)\n\t\tif (usable(*i)) {\n\t\t\tCard* card = *i;\n\t\t\tcard->used = true;\n\t\t\tprintf(\"Player #%d used %c.\\n\", executing, card->self);\n\t\t\tcard->use(this, targets);\n\t\t\tif (card->self == 'P') continue;\n\t\t\ti = cards.begin(); flag = true;\n\t\t}\n\tused_slash = false;\n\tprintf(\"Player #%d ended his stage.\\n\", executing);\n}\n\nbool Player::is_friend(const Player* x) {\n\tswitch (role) {\n\tcase 1:\n\t\treturn x->seem == 2;\n\tcase 2:\n\t\treturn x->seem && x->seem != 3;\n\tcase 3:\n\t\treturn x->seem == 3;\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nPile::iterator Player::ask_for(char x) {\n\tfor (Pile::iterator i = cards.begin(); i != cards.end(); ++i)\n\t\tif (!(*i)->used && (*i)->self == x)\n\t\t\treturn i;\n\treturn cards.end();\n}\n\nvoid Player::react(Event ev, Player* from) {\n\tswitch (ev) {\n\n\tcase slashed: {\n\t\tif (seem == 2)\n\t\t\tfrom->seem = 3;\n\t\tif (seem == 3)\n\t\t\tfrom->seem = 2;\n\t\tPile::iterator i = ask_for('D');\n\t\tif (i == cards.end())\n\t\t\treact(damaged, from);\n\t\telse\n\t\t\t(*i)->used = true;\n\t\tbreak;\n\t}\n\tcase archery_attacked: {\n\t\tPile::iterator i = ask_for('D');\n\t\tif (i == cards.end()) {\n\t\t\tif (role == 1 && !from->seem)\n\t\t\t\tfrom->seem = 1;\n\t\t\treact(damaged, from);\n\t\t}\n\t\telse (*i)->used = true;\n\t\tbreak;\n\t}\n\tcase dueled: \n\t\tif (seem == 2)\n\t\t\tfrom->seem = 3;\n\t\tif (seem == 3)\n\t\t\tfrom->seem = 2;\n\t\tbreak;\n\tcase duel_affected: {\n\t\tPile::iterator i = ask_for('K');\n\t\tif (i == cards.end() || (role == 2 && from->role == 1))\n\t\t\treact(damaged, from);\n\t\telse\n\t\t\t(*i)->used = true, from->react(duel_affected, this);\n\t\tbreak;\n\t}\n\tcase savage_assulted: {\n\t\tPile::iterator i = ask_for('K');\n\t\tif (i == cards.end()) {\n\t\t\tif (role == 1 && !from->seem)\n\t\t\t\tfrom->seem = 1;\n\t\t\treact(damaged, from);\n\t\t}\n\t\telse (*i)->used = true;\n\t\tbreak;\n\t}\n\tcase nullification:\n\t\tif (from->seem < 2) break;\n\t\tif (is_friend(from) ^ !is_effective) {\n\t\t\tPile::iterator i = ask_for('J');\n\t\t\tif (i != cards.end()) {\n\t\t\t\t(*i)->used = true;\n\t\t\t\tif ((from->seem == 3) ^ (is_effective = !is_effective))\n\t\t\t\t\tseem = 3;\n\t\t\t\telse seem = 2;\n\t\t\t\teffect_changed = true;\n\t\t\t\tprintf(\"Nullificated by a pig seeming like %d.\\n\", seem);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase damaged:\n\t\tfor (int i = 0; i < 7; ++i)\n\t\t\tif (&players[i] == this)\n\t\t\t\tprintf(\"Player #%d is damaged by Player #%d, having hp %d.\\n\", i, executing, hp - 1);\n\t\tif (role == 1 && from->seem < 2)\n\t\t    from->seem = 1;\n\t\tif (--hp <= 0)\n\t\t\treact(dying, from);\n\t\tbreak;\n\tcase dying: {\n\t\tPile::iterator i;\n\t\twhile (hp <= 0 && (i = ask_for('P')) != cards.end())\n\t\t\t(*i)->used = true, ++hp;\n\t\tif (hp <= 0) {\n\t\t\tdead = true;\n\t\t\tdeath_caused = true;\n\t\t\tif (from->role == 1 && role == 2) {\n\t\t\t\tfor (Pile::iterator it = from->cards.begin(); it != from->cards.end(); ++it)\n\t\t\t\t\t(*it)->used = true;\n\t\t\t\tfrom->inf_slash = false;\n\t\t\t}\n\t\t\tif (role == 3) {\n\t\t\t\tif (!--rebellion)\n\t\t\t\t\tthrow 0;\n\t\t\t\tfrom->draw_cards(3);\n\t\t\t}\n\t\t\tif (role == 2)\n\t\t\t\t--loyalist;\n\t\t\tif (role == 1)\n\t\t\t\tthrow 0;\n\t\t\tif (&players[executing] != this)\n\t\t\t\tcards.clear();\n\t\t\telse for (Pile::iterator it = cards.begin(); it != cards.end(); ++it)\n\t\t\t\t(*it)->used = true;\n\t\t}\n\t\tbreak;\n\t}\n\tcase ::inf_slash:\n\t\tinf_slash = true;\n\t\tbreak;\n\tcase recovered:\n\t\t++hp;\n\t\tbreak;\n\t}\n\n}\n\nbool Player::usable(const Card* x) {\n\tif (x->used) return false;\n\tbool used_slash_old = used_slash;\n\ttargets = filter(x, this);\n\tif (!targets.size()) return false;\n\tswitch (x->self) {\n\tcase 'K':\n\t\treturn inf_slash || !used_slash_old;\n\tcase 'P':\n\t\treturn hp < 4;\n\tcase 'Z':\n\tcase 'F':\n\tcase 'N':\n\tcase 'W':\n\t\treturn true;\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nvoid Player::draw_cards(int x) {\n\twhile (x--) {\n\t\tcards.push_back(*pile.begin());\n\t\tif (pile.size() != 2)\n\t\t\tpile.pop_front();\n\t\telse {\n\t\t\tCard* x = *pile.begin();\n\t\t\tCard* c;\n\t\t\tswitch (x->type) {\n\t\t\tcase 5:\n\t\t\t\tc = new ArcheryAttack(); break;\n\t\t\tcase 4:\n\t\t\t\tc = new SavageAssault(); break;\n\t\t\tcase 1:\n\t\t\t\tc = new Slash(); break;\n\t\t\tcase 6:\n\t\t\t\tc = new Liannu(); break;\n\t\t\tcase 3:\n\t\t\t\tc = new Duel(); break;\n\t\t\tcase 2:\n\t\t\t\tc = new Peach(); break;\n\t\t\tdefault:\n\t\t\t\tc = new Card();\n\t\t\t}\n\t\t\tc->used = false;\n\t\t\tc->self = x->self;\n\t\t\tpile.pop_front();\n\t\t\tpile.push_front(c);\n\t\t}\n\t}\n}\n\nint main() {\n\tfreopen(\"temp.in\", \"r\", stdin);\n\tfreopen(\"temp2.out\", \"w\", stdout);\n\tint n, m; cin >> n >> m;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring s; cin >> s; Card x;\n\t\tplayers[i].set_role(s);\n\t\tif (players[i].role == 2)\n\t\t\t++loyalist;\n\t\tif (players[i].role == 3)\n\t\t\t++rebellion;\n\t\tfor (int j = 0; j < 4; ++j)\n\t\t\tplayers[i].cards.push_back(read_card());\n\t}\n\tplayers[0].seem = 2;\n\tfor (int i = 0; i <= m; ++i)\n\t\tpile.push_back(read_card());\n\ttry {\n\t\tfor (;;)\n\t\t\tfor (int i = 0; i < n; ++i)\n\t\t\t\texecuting = i,\n\t\t\t\tplayers[i].execute();\n\t}\n\tcatch (int) {\n\t\tcout << (rebellion ? \"FP\\n\" : \"MP\\n\");\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tif (players[i].dead)\n\t\t\t\tcout << \"DEAD\";\n\t\t\telse for (Pile::iterator it = players[i].cards.begin(); it != players[i].cards.end(); ++it)\n\t\t\t\tif (!(*it)->used)\n\t\t\t\t\tcout << (*it)->self << ' ';\n\t\t\tcout << '\\n';\n\t\t}\n\t\treturn 0;\n\t}\n}\n```",
        "postTime": 1565010252,
        "uid": 64757,
        "name": "huang_yue",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5728**\u6a21\u62df**\u754c\u5730\u4f4d\u4e0d\u4e9a\u4e8e[Luogu P4604 [WC2017]\u6311\u6218](https://www.luogu.org/problemnew/show/P4604)\u5728**\u5361\u5e38**\u754c\u7684\u5730\u4f4d\u4e86\u5427\u3002\n\n\u65e9\u4e0a\u5230\u673a\u623f\u5f00\u59cb\u5199\uff0c\u4e2d\u95f4\u56e0\u4e3a\u6709\u6a21\u62df\u8d5b\u4e00\u76f4\u52301\u70b9\u8fc7\u624d\u6b63\u5f0f\u5f00\u59cb\u7801\u3002\n\n~~\u4e00\u8fb9\u819c\u62dcCXR dalao\u4e00\u8fb9\u5199\u52303\u70b9\u5de6\u53f3~~\uff0c\u7136\u540e\u8c03\u554a\u8c03\n\n\u6700\u540e\u53d1\u73b0\u6740\u6b7b\u53cd\u732a\u62bd\u7684\u724c\u5e76\u6ca1\u6709\u88ab\u6740\u6b7b\u5b83\u7684\u4eba\u62bd\u8d70\uff08\u5927\u96fe\uff09\uff0c4\u70b9\u5de6\u53f3\u7ec8\u4e8e\u662f\u5199\u5b8c\u4e86\n\n\u770b\u5b8c\u9898\u76ee\uff08\u770b\u90fd\u898110min\uff09\u611f\u89c9\u8fd9\u80af\u5b9a\u4e0d\u662f\u4ec0\u4e48**\u5efa\u56fe\u8dd1XX\u7b97\u6cd5**\u6216\u8005**\u5957\u4e00\u4e2a\u6570\u636e\u7ed3\u6784**\u7684\u9898\n\n\u7136\u800c\u6570\u636e\u8303\u56f4\u4e5f\u5f88\u9ed8\u5951\uff0c\u732a\u548c\u724c\u7684\u6570\u91cf\u90fd\u4e0d\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u796d\u51fa\u88ab\u6211\u4eec\u9057\u5f03\u7684\u66b4\u529b\u7b97\u6cd5\u2014\u2014\u6a21\u62df\u3002\n\n\u9898\u76ee\u610f\u601d\u90fd\u4e0d\u591a\u8bf4\u4e86\uff0c\u4ee5\u4e0b\u8bb2\u4e00\u4e0b\u5927\u81f4\u7684\u601d\u8def\uff1a\n\n1. \u6bcf\u4e2a\u732a\u5e94\u8be5\u6709**\u4e24\u4e2a**\u8eab\u4efd\u8981\u8bb0\u5f55\u3002\u4e00\u4e2a\u662f**\u771f\u5b9e\u8eab\u4efd**\uff0c\u53e6\u4e00\u4e2a\u662f\u5f53\u524d\u5728\u6e38\u620f\u4e2d**\u76ee\u524d\u7684\u8eab\u4efd**\uff0c\u5373\u6709\u53ef\u80fd\u662f\u672a\u77e5\u548c\u7c7b\u53cd\u732a\n2. \u5173\u4e8e\u732a\u672c\u8eab\u4e00\u4e9b\u624b\u724c\uff0c\u8840\u91cf\uff0c\u6709\u6ca1\u6709\u6b66\u5668\uff0c\u4e0b\u4e00\u5934\u732a\uff08\u56e0\u4e3a\u53ef\u80fd\u6709\u732a\u4f1a\u6b7b\u6389\uff09\u7b49\u8981\u8bb0\u5f55\u7684\u5c31\u4e0d\u591a\u8bf4\u4e86\n3. \u6bcf\u4e2a\u56de\u5408\u91cc\u5206\u522b\u4fbf\u5229\u5f53\u524d\u732a\u7684\u6240\u6709\u624b\u724c\u5e76\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u6253\u51fa\uff08\u6ca1\u6709\u76ee\u6807\u81ea\u7136\u662f\u4e0d\u80fd\u51fa\u7684\uff09\n4. \u5224\u65ad\u6bcf\u4e2a\u884c\u52a8\u4ee5\u53ca\u66f4\u65b0\u5728\u6b64\u8fc7\u7a0b\u4e2d**\u53ef\u80fd\u4f1a\u88ab\u66f4\u65b0\u7684\u8eab\u4efd\u4fe1\u606f**\n5. \u65e0\u61c8\u53ef\u51fb\u7684\u60c5\u51b5\u8981\u7279\u522b\u5224\u65ad\uff0c\u5199\u4e00\u4e2a\u9012\u5f52\u5373\u53ef\uff08\u5b9e\u73b0\u770b\u4ee3\u7801\uff09\n\n\u5927\u81f4\u601d\u8def\u5c31\u662f\u8fd9\u6837\u4e86\uff0c~~\u4e3a\u4e86\u9020\u798f\u4eba\u7c7b~~\u8fd8\u662f\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u5751\u70b9\uff1a\n\n1. \u9898\u76ee\u4e2d\u63cf\u8ff0\u53cd\u732a\u4e3a`AP`\uff0c\u5b9e\u9645\u4e0a\u662f`FP`\uff08\u770b\u6837\u4f8b\u5c31\u77e5\u9053\u4e86\uff09\n2. \u9898\u76ee\u91cc\u8bf4\u201c\u6570\u636e\u4fdd\u8bc1\u724c\u7684\u6570\u91cf\u591f\u7528\u3002\u201d\u5c31\u662f\u5728\u626f\u6de1\u3002\u5982\u679c\u6ca1\u724c\u8981**\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c**\n3. `MP`\u5e72\u6389`ZP`\u540e\u6b66\u5668\u4e5f\u5f97\u5f03\u4e86\n4. \u65e0\u61c8\u53bb\u65e0\u61c8\u522b\u4eba\u7684\u65e0\u61c8\u65f6\u8981\u6ce8\u610f\u548c\u539f\u6765\u7684\u884c\u4e3a\u6027\u8d28\u521a\u597d\u76f8\u53cd\uff08\u56e0\u4e3a**\u53ea\u6709\u654c\u4eba\u4f1a\u65e0\u61c8\u4f60\u7684\u65e0\u61c8**\uff09\n5. \u4e00\u5934\u732a\u5728\u81ea\u5df1\u56de\u5408\u4e5f\u4f1aGG\uff08\u51b3\u6597\u628a\u81ea\u5df1\u73a9\u6b7b\uff09\uff0c\u540c\u65f6\u5728\u81ea\u5df1\u56de\u5408\u4e5f\u53ef\u80fd\u6478\u724c\uff08`FP`\u548c\u4f60\u51b3\u6597\u7136\u540e\u5b83GG\u4e86\uff09\n6. \u9664\u4e86\u6843\u4e4b\u5916\u7684\u724c\u5176\u4ed6\u7684\u724c\u5728\u6253\u51fa\u540e\u90fd\u5f97\u91cd\u65b0\u626b\u63cf\u624b\u724c\uff08\u56e0\u4e3a\u53ef\u80fd\u56e0\u4e3a\u6709\u6b66\u5668\u4f7f\u5f97\u4e4b\u524d\u7684\u6740\u4e5f\u53ef\u4ee5\u7528\u4e86\uff0c\u6216\u8005\u662f\u7531\u4e8e\u4e00\u4e9b\u732a**\u8eab\u4efd\u7684\u516c\u5f00**\u4f7f\u5f97\u4e4b\u524d\u7684\u4e00\u4e9b\u724c\u6709\u76ee\u6807\u4e86\uff09\n7. \u53ea\u6709`MP`\u4f1a\u653b\u51fb\u7c7b\u53cd\u732a\uff0c`ZP`\u662f\u4e0d\u4f1a\u5bf9\u7c7b\u53cd\u732a\u8868\u654c\u610f\u7684\n8. \u653eAOE\u6280\u80fd\u65f6\u53ef\u80fd\u4f1a\u4e00\u6b21\u5e72\u6389\u5f88\u591a\u4eba\uff0c\u5c31\u4f1a\u4ea7\u751f\u6bd4\u5982\u4e00\u56de\u5408\u6478\u8bb8\u591a\u724c\u7684\u60c5\u51b5\n9. \u540c\u4e0a\uff0c`MP`\u7528AOE\u6280\u80fd\u65f6\u8981\u6ce8\u610f**\u7ed3\u7b97\u7684\u987a\u5e8f**\uff0c\u5c24\u5176\u662f\u6740\u4e86`ZP`\u53c8\u6740\u6b7b`FP`\u4f1a\u5bfc\u81f4\u624b\u4e0a\u8fd8\u6709\u724c\uff0c\u800c\u5148\u6740\u6b7b`FP`\u518d\u6740`ZP`\u5c31\u4e00\u5f20\u724c\u90fd\u6ca1\u6709\u4e86\n10. `MP`\u6216**\u6240\u6709**`FP`\u6b7b\u4e86\u6e38\u620f**\u7acb\u5373\u7ed3\u675f**\uff0c\u610f\u5473\u7740\u6709\u724c\u6478\u7684\u4e5f\u4e0d\u7528\u6478\u4e86\n\n\u5927\u81f4\u5c31\u662f\u8fd9\u4e9b\u4e86\uff0c\u8fd8\u6709\u5f3a\u70c8\u5efa\u8bae\u5199\u7684\u65f6\u5019\u6253\u70b9\u6ce8\u91ca\u4e0a\u53bb\u7701\u7684\u5230\u65f6\u5019\u81ea\u5df1\u90fd\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u5199\u4ec0\u4e48~~\u5fc3\u6001\u7206\u70b8~~\n\n\u8d34\u4e00\u4e0bCODE\uff08\u6ce8\u91ca\u90fd\u662f\u5199\u7684\u65f6\u5019\u6253\u4e0a\u53bb\u7684\uff09\uff0c\u5982\u679c\u8981\u770b**\u8d85\u7ea7\u8be6\u7ec6\u7684\u89e3\u6790CODE**\u7684\u79fb\u6b65[CXR dalao's blog](https://blog.csdn.net/chenxiaoran666/article/details/83314341)\n\nCODE\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstdlib>\n#include<cstring>\n#define RI register int\n#define GC(x) P[x].hand_cards[++P[x].tot]=getcard(); //x\u6478\u724c\uff0c\u592a\u957f\u4e86\u6240\u4ee5\u7528\u4e0bdefine \nusing namespace std;\nconst int M=2005;\nclass FileInputOutput\n{\n    private:\n        #define tc() (A==B&&(B=(A=Fin)+fread(Fin,1,S,stdin),A==B)?EOF:*A++)\n        #define S 1<<21\n        char Fin[S],Fout[S],*A,*B; int Ftop;\n    public:\n        FileInputOutput() { A=B=Fin; }\n        inline void pc(char ch)\n        {\n            Ftop<S?Fout[Ftop++]=ch:(fwrite(Fout,1,S,stdout),Fout[(Ftop=0)++]=ch);\n        }\n        inline void gc(char &ch)\n        {\n            while (!isalpha(ch=tc()));\n        }\n        inline void ps(const char *s)\n        {\n            int len=strlen(s); for (RI i=0;i<len;++i) pc(s[i]);\n        }\n        inline void read(int &x)\n        {\n            x=0; char ch; while (!isdigit(ch=tc()));\n            while (x=(x<<3)+(x<<1)+(ch&15),isdigit(ch=tc()));\n        }\n        inline void Fend(void)\n        {\n            fwrite(Fout,1,Ftop,stdout);\n        }\n        #undef tc\n        #undef S\n}File;\nstruct Pig\n{\n    int type,status,tot,hp,nxt; char hand_cards[M]; //hand_cards\u624b\u724c\uff0c\u82e5\u4e3a'U'\u5219\u8868\u793a\u8fd9\u5f20\u724c\u51fa\u6389\u4e86 \n    //type\u8868\u793a\u771f\u5b9e\u8eab\u4efd(1:MP;2:ZP;3:FP),status\u8868\u793a\u8868\u9732\u51fa\u7684\u8eab\u4efd(0:\u672a\u77e5;1:MP;2:ZP;3:FP:4:\u7c7b\u53cd)\n    bool isZ,isalive; //isZ\u8868\u793a\u662f\u5426\u88c5\u5907\u732a\u54e5\u8fde\u5f29,isalive\u8868\u793a\u662f\u5426\u5b58\u6d3b \n}P[12]; int n,m,cnt,now; char cards[M],ch;\ninline char getcard(void)\n{\n    if (cnt<m) return cards[++cnt]; else return cards[cnt];\n}\ninline int getnext(int x) //\u627e\u4e0b\u4e00\u5934\u732a\uff0c\u53ef\u4ee5\u8def\u5f84\u538b\u7f29 \n{\n    return P[P[x].nxt].isalive?P[x].nxt:P[x].nxt=getnext(P[x].nxt);\n}\ninline int find(int x,char y) //\u67e5\u627ex\u662f\u5426\u6709\u724cy,\u6709\u8fd4\u56de\u4f4d\u7f6e\uff0c\u5426\u5219\u8fd4\u56de-1\n{\n    for (RI i=1;i<=P[x].tot;++i) if (P[x].hand_cards[i]==y) return i; return -1;\n}\ninline void Endgame(void) //\u6e38\u620f\u7ed3\u675f\uff0c\u8f93\u51fa\u7ed3\u679c \n{\n    if (P[1].isalive) File.ps(\"MP\\n\"); else File.ps(\"FP\\n\");\n    for (RI i=1;i<=n;++i)\n    {\n        if (!P[i].isalive) { File.ps(\"DEAD\\n\"); continue; }\n        for (RI j=1;j<=P[i].tot;++j) if (P[i].hand_cards[j]!='U')\n        File.pc(P[i].hand_cards[j]),File.pc(' '); File.pc('\\n');\n    }\n    File.Fend(); exit(0);\n}\ninline void Hurt(int x,int y) //x\u5bf9y\u9020\u6210\u4e86\u4e00\u70b9\u4f24\u5bb3\n{\n    if (--P[y].hp) return; int pos=find(y,'P');\n    if (~pos) return (void)(++P[y].hp,P[y].hand_cards[pos]='U');\n    P[y].tot=-1; P[y].isalive=0; if (P[y].type==1) Endgame();\n    if (P[y].type==2&&P[x].type==1) P[x].tot=0,P[x].isZ=0;\n    if (P[y].type!=3) return; bool isFP=0; RI fr=0,nxt=1;\n    for (;fr!=nxt;nxt=getnext(nxt),fr=1) if (P[nxt].type==3) { isFP=1; break; }\n    if (!isFP) Endgame(); GC(x); GC(x); GC(x);\n}\ninline int indentfy(int x,int y) //\u9274\u5b9ax,y\u7684\u5173\u7cfb(\u6839\u636e\u8df3\u7684\u60c5\u51b5\u5224\u65ad\uff0c\u6ce8\u610fMP\u8981\u7279\u5224\n//(1:\u540c\u4f19;2:\u654c\u4eba;3:y\u8eab\u4efd\u672a\u77e5)\n{\n    if (!P[y].status) return 3; switch (P[x].type)\n    {\n        case 1:\n            if (P[y].status==1||P[y].status==2) return 1;\n            if (P[y].status==3||P[y].status==4) return 2;\n            break;\n        case 2:\n            if (P[y].status==1||P[y].status==2) return 1;\n            if (P[y].status==3) return 2; if (P[y].status==4) return 3;\n            break;\n        case 3:\n            if (P[y].status==1||P[y].status==2) return 2;\n            if (P[y].status==3) return 1; if (P[y].status==4) return 3;\n    }\n    return 3;\n}\ninline void Make_Friendly(int x,int y) //x\u5411y\u732e\u6bb7\u52e4\uff0c\u8981\u66f4\u65b0\u5173\u7cfb\n{\n    if ((P[y].status==1||P[y].status==2)&&P[x].type!=1) P[x].status=2;\n    if (P[y].status==3) P[x].status=3;\n}\ninline void Make_Antily(int x,int y) //x\u5411y\u8868\u654c\u610f\uff0c\u4e5f\u8981\u66f4\u65b0\u5173\u7cfb \n{\n    if (P[y].status==1||P[y].status==2) P[x].status=3;\n    if (P[y].status==3&&P[x].type!=1) P[x].status=2;\n}\ninline void K(int x,int y) //x\u5411y\u6253\u51fa\u4e00\u5f20\u6740\n{\n    Make_Antily(x,y); int pos=find(y,'D');\n    if (~pos) P[y].hand_cards[pos]='U'; else Hurt(x,y);\n}\ninline bool J(int x,int y,int opt) //\u4f9d\u6b21\u51b3\u5b9a\u5bf9\u4e8ex\u5bf9y\u6253\u51fa\u7684\u9526\u56ca\u662f\u5426\u6709\u4eba\u54cd\u5e94\u65e0\u61c8 \n//opt\u8868\u793a\u8fd9\u6b21\u65e0\u61c8\u884c\u4e3a\u662f\u732e\u6bb7\u52e4(1)\u8fd8\u662f\u8868\u654c\u610f(2)\n{\n    for (RI nxt=x,fr=0;nxt!=fr;nxt=getnext(nxt),fr=x)\n    {\n        if (indentfy(nxt,y)!=opt) continue;\n        int pos=find(nxt,'J'); if (~pos) \n        {\n            P[nxt].hand_cards[pos]='U';\n            if (opt==1) Make_Friendly(nxt,y); else Make_Antily(nxt,y);\n            return J(nxt,y,3-opt)^1;\n        }\n    }\n    return 0;\n}\ninline void F(int x,int y) //x\u5411y\u8fdb\u884c\u51b3\u6597\n{\n    Make_Antily(x,y); if (J(x,y,1)) return; \n    if (P[x].type==1&&P[y].type==2) return Hurt(x,y); \n    int pos; for (;;)\n    {\n        pos=find(y,'K'); if (~pos) P[y].hand_cards[pos]='U'; else return Hurt(x,y);\n        pos=find(x,'K'); if (~pos) P[x].hand_cards[pos]='U'; else return Hurt(y,x);\n    }\n}\ninline void N(int x) //x\u6253\u51fa\u5357\u732a\u5165\u4fb5\n{\n    for (int nxt=getnext(x);nxt!=x;nxt=getnext(nxt))\n    {\n        if (J(x,nxt,1)) continue; int pos=find(nxt,'K');\n        if (~pos) { P[nxt].hand_cards[pos]='U'; continue; }\n        if (P[nxt].type==1&&!P[x].status) P[x].status=4; Hurt(x,nxt);\n    }\n}\ninline void W(int x) //x\u6253\u51fa\u4e07\u7bad\u9f50\u53d1\n{\n    for (int nxt=getnext(x);nxt!=x;nxt=getnext(nxt))\n    {\n        if (J(x,nxt,1)) continue; int pos=find(nxt,'D');\n        if (~pos) { P[nxt].hand_cards[pos]='U'; continue; }\n        if (P[nxt].type==1&&!P[x].status) P[x].status=4; Hurt(x,nxt);\n    }\n}\ninline void Play(void) //\u4e00\u56de\u5408\n{\n    GC(now); GC(now); bool iskilled=0; int nxt;\n    for (RI i=1;i<=P[now].tot;++i)\n    {\n        char &opt=P[now].hand_cards[i]; switch (opt)\n        {\n            case 'K':\n                if (iskilled&&!P[now].isZ) break;\n                if (indentfy(now,nxt=getnext(now))==2) { opt='U'; iskilled=1; K(now,nxt); i=0; break; } //\u662f\u654c\u5bf9\u5173\u7cfb\u624d\u80fd\u6740 \n                break;\n            case 'F':\n                if (P[now].type==3) { opt='U'; F(now,1); i=0; break; } //FP\u4f18\u5148\u6740MP \n                for (nxt=getnext(now);nxt!=now;nxt=getnext(nxt))\n                if (indentfy(now,nxt)==2) { opt='U'; F(now,nxt); i=0; break; } //\u6309\u987a\u5e8f\u627e\u4eba\u51b3\u6597 \n                break;\n            case 'N':\n                opt='U'; N(now); i=0; break;\n            case 'W':\n                opt='U'; W(now); i=0; break;\n            case 'P':\n                if (P[now].hp<4) opt='U',++P[now].hp; break;\n            case 'Z':\n                opt='U'; P[now].isZ=1; i=0; break;\n        }\n    }\n}\n#undef GC\nint main()\n{\n    //freopen(\"CODE.in\",\"r\",stdin); freopen(\"CODE.out\",\"w\",stdout);\n    RI i,j; for (File.read(n),File.read(m),i=1;i<=n;++i)\n    {\n        File.gc(ch); P[i].type=ch=='M'?1:(ch=='Z'?2:3); if (P[i].type==1) P[i].status=1;\n        P[i].tot=4; for (File.gc(ch),j=1;j<=4;++j) File.gc(P[i].hand_cards[j]);\n        if(i^n) P[i].nxt=i+1; else P[i].nxt=1; P[i].isalive=1; P[i].hp=4;\n    }\n    for (i=1;i<=m;++i) File.gc(cards[i]); for (now=1;;now=getnext(now)) Play(); return 0;\n}\n```",
        "postTime": 1548423203,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "NOIP Day0 A\u6389\u732a\u56fd\u6740\u8d85\u7ea7\u5f00\u5fc3\u554a\u55f7\u55f7\n\nemmmmm\u2026\u2026\u5927\u6a21\u62df\u6ca1\u5565\u601d\u8def\u53ef\u8bf4\u2026\u2026\n\n\u4e00\u70b9\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1\u3001\u732a\u5728\u53d7\u5230\u5357\u86ee\u5165\u4fb5\u548c\u4e07\u7bad\u9f50\u53d1\u65f6\u5148\u5224\u65ad\u6709\u6ca1\u6709\u4eba\u7ed9\u4ed6\u51fa\u65e0\u61c8\u53ef\u51fb\uff0c\u7136\u540e\u518d\u51fa\u95eaor\u6740\u3002\n\n2\u3001\u5224\u5b9a\u65e0\u61c8\u53ef\u51fb\u65f6\uff0c\u4ece\u51fa\u9526\u56ca\u724c\u7684\u732a\u5f00\u59cb\u5224\u5b9a\uff0c\u53cb\u89c6\u88ab\u5bb3\u732a\u7684\u732a\u4f1a\u65e0\u61c8\u6389\u653b\u51fb\u724c\uff0c\u4ec7\u89c6\u88ab\u5bb3\u732a\u7684\u732a\u4f1a\u65e0\u61c8\u6389\u65e0\u61c8\u653b\u51fb\u7684\u724c\u3002\n\n3\u3001\u4e0d\u8bba\u9526\u56ca\u724c\u662f\u5426\u88ab\u65e0\u61c8\u6389\uff0c\u4e00\u7ecf\u6253\u51fa\u5c31\u5df2\u7ecf\u4f7f\u7528\u4e86\u3002\n\n4\u3001\u732a\u88ab\u52a8\u4f7f\u7528\u6740\u3001\u95ea\u3001\u6843\u3001\u65e0\u61c8\u53ef\u51fb\u65f6\u6309\u7167\u4ece\u5de6\u81f3\u53f3\u7684\u987a\u5e8f\u3002\n\n5\u3001\u4f7f\u7528\u4e00\u5f20\u9664\u4e86\u6740\u548c\u6843\u7684\u724c\u6709\u53ef\u80fd\u4f1a\u66b4\u9732\u5176\u4ed6\u732a\u7684\u8eab\u4efd\u6216\u53ef\u4ee5\u4f7f\u7528\u591a\u5f20\u6740\uff0c\u6b64\u65f6\u6211\u4eec\u5e94\u91cd\u65b0\u5224\u5b9a\u8be5\u5f20\u724c\u524d\u9762\u7684\u724c\u80fd\u5426\u4f7f\u7528\u3002\n\n6\u3001\u5728\u6740\u6b7b\u53cd\u732a\u65f6\u4f1a\u83b7\u5f973\u5f20\u724c\uff0c\u672c\u56de\u5408\u8fd9\u4e09\u5f20\u724c\u4e5f\u53ef\u80fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5224\u5b9a\u4ed6\u4eec\u3002\n\n7\u3001\u4e0d\u8bba\u662f\u5426\u80fd\u591f\u6253\u8d62\u90fd\u4e00\u5b9a\u4f1a\u4f7f\u7528\u51b3\u6597\u724c\uff0c\u51b3\u6597\u724c\u53ef\u80fd\u4f1a\u4f7f\u81ea\u5df1\u6b7b\u4ea1\u3002\u6b64\u65f6\u82e5\u81ea\u5df1\u662f\u53cd\u732a\uff0c\u5bf9\u65b9\u4f1a\u5f97\u52303\u5f20\u724c\uff0c\u5e76\u4e14\u5e94\u7acb\u5373\u505c\u6b62\u672c\u8f6e\u540e\u7eed\u724c\u7684\u5224\u65ad\u3002\n\n8\u3001\u6b63\u5728\u51fa\u724c\u7684\u732a\u4e5f\u53ef\u80fd\u4f1a\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\uff0c\u4e0d\u8981\u5fd8\u8bb0\u5224\u5b9a\u3002\n```cpp\n/*\n\tCoded by Ice_teapoy\n*/\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nstruct pig\n{\n\tstring ide,sur;\n\tchar c[1001];\n\tint n,hp,arms,C[27],a[27];\n}a[11];\nint v[1001],o,n,m,i,j,nxt[11],fr[11],now=1,kill=1,MP,sMP,sFP,sZP,oo,ooo,P='P'-'A',K='K'-'A',D='D'-'A',F='F'-'A',N='N'-'A',W='W'-'A',J='J'-'A',Z='Z'-'A';\nchar c[1000001];\nvoid draw(int aa)\n{\n\ta[aa].C[c[m]-'A']++,a[aa].c[++a[aa].n]=c[m--];\n}\nbool hos(int x,int y)\n{\n\too=0;\n\tif ((a[x].ide==\"ZP\"&&a[y].sur==\"FP\")||(a[x].ide==\"MP\"&&(a[y].sur==\"FP\"||a[y].sur==\"LFP\"))||(a[x].ide==\"FP\"&&(a[y].sur==\"MP\"||a[y].sur==\"ZP\"))) a[x].sur=a[x].ide,oo=1;\n\treturn oo;\n}\nbool friends(int x,int y)\n{\n\too=0;\n\tif ((a[x].ide==\"FP\"&&a[y].sur==\"FP\")||(a[x].ide==\"MP\"&&(a[y].sur==\"ZP\"||a[y].sur==\"MP\"))||(a[x].ide==\"ZP\"&&(a[y].sur==\"MP\"||a[y].sur==\"ZP\"))) a[x].sur=a[x].ide,oo=1;\n\treturn oo;\n}\nbool Dead(const int xx,const int x)\n{\t\n\tif (--a[x].hp) return 0;\n\tif (a[x].C[P])\n\t{\n\t\ta[x].hp++,a[x].C[P]--,a[x].a[P]++;\n\t\treturn 0;\n\t}\n\telse if (a[x].ide==\"MP\") sMP--;\n\telse if (a[x].ide==\"ZP\") \n\t\tif (xx==MP) a[xx].arms=0,a[xx].n=0,memset(a[xx].a,0,sizeof(a[xx].a)),memset(a[xx].c,0,sizeof(a[xx].c)),memset(a[xx].C,0,sizeof(a[xx].C)),sZP--;\n\t\telse sZP--;\n\telse if (a[x].ide==\"FP\")\n\t\tif (sFP>1) draw(xx),draw(xx),draw(xx),sFP--;\n\t\telse sFP--;\n\telse 1;\n\tnxt[fr[x]]=nxt[x],fr[nxt[x]]=fr[x];\n\treturn (sMP==0||sFP==0);\n } \nbool qaq(int t,int ying,int x)\n{\n\tv[t]=1;\n\tif (a[x].C[ying]) a[x].C[ying]--,a[x].a[ying]++;\n\telse \n\t{\n\t\tif (a[x].ide==\"MP\"&&a[now].sur!=\"FP\"&&a[now].sur!=\"ZP\") a[now].sur=\"LFP\";\n\t\tif (Dead(now,x)) return 1;\n\t}\n\treturn 0;\n}\nbool FF(int x,int y)\n{\n\tif (a[x].ide==\"MP\"&&a[y].ide==\"ZP\") oo=y,ooo=x;\n\telse if (a[x].C[K]<a[y].C[K]) oo=x,ooo=y,a[y].C[K]-=a[x].C[K]+1,a[y].a[K]+=a[x].C[K]+1,a[x].a[K]+=a[x].C[K],a[x].C[K]=0;\n\telse ooo=x,oo=y,a[x].C[K]-=a[y].C[K],a[x].a[K]+=a[y].C[K],a[y].a[K]+=a[y].C[K],a[y].C[K]=0;\n\tif (Dead(ooo,oo)) return 1;\n\treturn 0;\n}\nbool inv(int x,int y,int tot)\n{\n\tfor (int i=x,j=1;j<=sMP+sFP+sZP;i=nxt[i],j++)\n\t\tif (a[i].C[J]&&((tot%2&&friends(i,y))||((!(tot%2))&&hos(i,y))))\n\t\t{\n\t\t\ta[i].a[J]++,a[i].C[J]--;\n\t\t\treturn !inv(i,y,tot+1);\n\t\t}\n\treturn 0;\n}\nbool qwq(int nn,int tottt)\n{\n\tfor (int i=1,j;i<=(tottt?a[now].n:nn);++i)\n\t{\n\t\tif (v[i]) continue;\n\t\tif (a[now].a[a[now].c[i]-'A'])\n\t\t{\n\t\t\tv[i]=1,a[now].a[a[now].c[i]-'A']--;\n\t\t\tcontinue;\n\t\t}\n\t\tif (a[now].c[i]=='Z') v[i]=1,a[now].arms=1;\n\t\telse if (a[now].c[i]=='K'&&(kill||a[now].arms)&&hos(now,nxt[now]))\n\t\t{\n\t\t\tkill=0;\n\t\t\tif (qaq(i,D,nxt[now])) return 1;\n\t\t}\n\t\telse if (a[now].c[i]=='P'&&a[now].hp<4) v[i]=1,a[now].hp++;\n\t\telse if (a[now].c[i]=='N')\n\t\t\tfor (v[i]=1,j=nxt[now];j!=now;j=nxt[j])\n\t\t\t\tif ((!inv(now,j,1))&&qaq(i,K,j)) return 1;\n\t\t\t\telse continue;\n\t\telse if (a[now].c[i]=='W')\n\t\t\tfor (v[i]=1,j=nxt[now];j!=now;j=nxt[j])\n\t\t\t\tif ((!inv(now,j,1))&&qaq(i,D,j)) return 1;\n\t\t\t\telse continue;\n\t\telse if (a[now].c[i]=='F')\n\t\t{\n\t\t\tif (a[now].ide==\"FP\")\n\t\t\t{\n\t\t\t\ta[now].sur=\"FP\",v[i]=1;\n\t\t\t\tif (!inv(now,MP,1)&&FF(now,MP)) return 1;\n\t\t\t}\n\t\t\telse for (j=nxt[now];j!=now;j=nxt[j])\n\t\t\t\tif (hos(now,j)&&(v[i]=1))\n\t\t\t\t\tif (!inv(now,j,1)&&FF(now,j)) return 1;\n\t\t\t\t\telse break;\n\t\t\t\telse continue;\n\t\t\tif (!a[now].hp) return 0;\n\t\t}\n\t\tif (v[i]) a[now].C[a[now].c[i]-'A']--;\n\t\tif (v[i]&&a[now].c[i]!='K'&&a[now].c[i]!='P'&&qwq(i-1,0)) return 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (i=1;i<=n;++i)\n\t{\n\t\tfor (nxt[i]=i+1,fr[i]=i-1,a[i].hp=4,cin>>a[i].ide,a[i].n=4,j=1;j<=4;++j) cin>>a[i].c[j],a[i].C[a[i].c[j]-'A']++;\n\t\tif (a[i].ide==\"FP\") sFP++;\n\t\telse if (a[i].ide==\"ZP\") sZP++;\n\t\telse MP=now=i,sMP++;\n\t}\n\tfor (i=1000000,j=1;j<=m;--i,++j) cin>>c[i];\n\tfor (;i;i--) c[i]=c[i+1];\n\tfor (nxt[n]=1,fr[1]=n,a[now].sur=\"MP\",m=1000000;sMP&&sFP&&m>0;)\n\t{\n\t\tdraw(now),draw(now),o=!qwq(a[now].n,1);\n\t\tfor (i=0,j=1;j<=a[now].n;++j)\n\t\t\tif (!v[j]) a[now].c[++i]=a[now].c[j];\n\t\ta[now].n=i,memset(v,0,sizeof(v)),kill=1;\n\t\tif (!o) break;\n\t\tmemset(a[now].a,0,sizeof(a[now].a)),now=nxt[now];\n\t}\n\tcout<<(sFP?\"FP\":\"MP\")<<\"\\n\";\n\tfor (i=1;i<=n;++i,puts(\"\"))\n\t\tif (a[i].hp) \n\t\t\tfor (j=1;j<=a[i].n;++j) \n\t\t\t\tif (a[i].a[a[i].c[j]-'A']) a[i].a[a[i].c[j]-'A']--;\n\t\t\t\telse cout<<a[i].c[j]<<\" \";\n\t\telse printf(\"DEAD\");\n\treturn 0;\n}\n```\n\u4ee5\u4e0a\u662f\u4ee3\u7801qwq\n\nemmmm\u2026\u2026\u867d\u7136\u5df2\u7ecf\u6709\u5f88\u591a\u6a21\u62df\u5668\u7684\u6837\u5b50\u2026\u2026\n\n\u4f46\u662f\u65e2\u7136\u662f\u7eaa\u5ff5\uff0c\u4f9d\u7136\u653e\u4e0a\u6211\u81ea\u5df1\u7684\u6a21\u62df\u5668qwq\n```cpp\n/*\n\tcoded by Ice_teapoy\n*/\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nstruct pig\n{\n\tstring identity,surface;\n\tchar card[1001];\n\tint n,hp,arms,Card[27],a[27];\n}a[11];\nint o,n,m,i,j,order[11],front[11],Current=1,kill=1,MP,sMP,sFP,sZP,oo,ooo,P='P'-'A',K='K'-'A',D='D'-'A',F='F'-'A',N='N'-'A',W='W'-'A',J='J'-'A',Z='Z'-'A';\nchar card[1000001];\nbool v[1001];\nvoid draw(int aa)\n{\n\ta[aa].Card[card[m]-'A']++,a[aa].card[++a[aa].n]=card[m--];\n}\nbool hostile(int x,int y)\n{\n\too=0;\n\tif (a[x].identity==\"MP\"&&(a[y].surface==\"FP\"||a[y].surface==\"LFP\")) oo=1;\n\telse if (a[x].identity==\"ZP\"&&a[y].surface==\"FP\") a[x].surface=\"ZP\",oo=1;\n\telse if (a[x].identity==\"FP\"&&(a[y].surface==\"MP\"||a[y].surface==\"ZP\")) a[x].surface=\"FP\",oo=1;\n\treturn oo;\n}\nbool friends(int x,int y)\n{\n\too=0;\n\tif (a[x].identity==\"ZP\"&&(a[y].surface==\"MP\"||a[y].surface==\"ZP\")) a[x].surface=\"ZP\",oo=1;\n\telse if (a[x].identity==\"MP\"&&(a[y].surface==\"ZP\"||a[y].surface==\"MP\")) oo=1;\n\telse if (a[x].identity==\"FP\"&&a[y].surface==\"FP\") a[x].surface=\"FP\",oo=1;\n\treturn oo;\n}\nbool Dead(const int xx,const int x)\n{\t\n\tif (--a[x].hp) return 0;\n\tcout<<\"\u3000\u3000\u3010\"<<x<<\"\u6b7b\u4ea1\u4e86\uff01\\n\" ;\n\tif (a[x].Card[P])\n\t{\n\t\tcout<<\"\u3000\u3000\u3010\"<<x<<\"\u4f7f\u7528\u4e86\u6843\uff01\\n\";\n\t\ta[x].hp++,a[x].Card[P]--,a[x].a[P]++;\n\t\treturn 0;\n\t}\n\telse if (a[x].identity==\"MP\") sMP--;\n\telse if (a[x].identity==\"ZP\") \n\t\tif (xx==MP) a[xx].arms=0,a[xx].n=0,memset(a[xx].a,0,sizeof(a[xx].a)),memset(a[xx].card,0,sizeof(a[xx].card)),memset(a[xx].Card,0,sizeof(a[xx].Card)),sZP--;\n\t\telse sZP--;\n\telse if (a[x].identity==\"FP\")\n\t{\n\t\tif (sFP>1) draw(xx),draw(xx),draw(xx),sFP--;\n\t\telse sFP--;\n\t\tprintf(\"------------------------\\n%3d \",j);\n\t\tcout<<a[xx].identity<<\" \"<<a[xx].surface<<\" hp:\"<<a[xx].hp<<\" n:\"<<a[xx].n<<\" arms:\"<<a[xx].arms<<\"\\n\";\n\t\tfor (i=1;i<=a[xx].n;i++) cout<<a[xx].card[i]<<\" \";\n\t\tcout<<\"\\n    K D P J F W N Z\\n\";\n\t\tcout<<\"    \"<<a[xx].Card[K]<<\" \"<<a[xx].Card[D]<<\" \"<<a[xx].Card[P]<<\" \"<<a[xx].Card[J]<<\" \"<<a[xx].Card[F]<<\" \"<<a[xx].Card[W]<<\" \"<<a[xx].Card[N]<<\" \"<<a[xx].Card[Z]<<\"\\n\";\n\t\tcout<<\"    \"<<a[xx].a[K]<<\" \"<<a[xx].a[D]<<\" \"<<a[xx].a[P]<<\" \"<<a[xx].a[J]<<\" \"<<a[xx].a[F]<<\" \"<<a[xx].a[W]<<\" \"<<a[xx].a[N]<<\" \"<<a[xx].a[Z]<<\"\\n\";\n\t\tprintf(\"------------------------\\n\");\n\t}\n\torder[front[x]]=order[x],front[order[x]]=front[x];\n\tcout<<\"\uff08\u5f53\u524d\u573a\u4e0a\u8fd8\u6709MP: \"<<sMP<<\" ZP: \"<<sZP<<\" FP: \"<<sFP<<\"\\n\"; \n\treturn (sMP==0||sFP==0);\n } \nbool qaq(int t,int ying,int x)\n{\n\tv[t]=1;\n\tif (a[x].Card[ying])\n\t{\n\t\ta[x].Card[ying]--,a[x].a[ying]++;\n\t\tcout<<\"\u3000\u3010\"<<x<<\"\u4f7f\u7528\u4e86\"<<char('A'+ying)<<\"\uff0c\"<<Current<<\"\u7684\u653b\u51fb\u843d\u7a7a\u4e86\uff01\\n\";\n\t}\n\telse \n\t{\n\t\tcout<<\"\u3000\u3010\"<<Current<<\"\u5bf9\"<<x<<\"\u9020\u62101\u70b9\u4f24\u5bb3\uff0c\"<<x<<\"\u8fd8\u6709\"<<a[x].hp-1<<\"\u70b9\u8840\uff01\\n\";\n\t\tif (a[x].identity==\"MP\"&&a[Current].surface!=\"FP\"&&a[Current].surface!=\"ZP\")\n\t\t{\n\t\t\tcout<<\"\u3000\u3010\"<<Current<<\"\u88ab\u8ba4\u4e3a\u662fLFP\uff01\\n\";\n\t\t\ta[Current].surface=\"LFP\";\n\t\t}\n\t\tif (Dead(Current,x)) return 1;\n\t}\n\treturn 0;\n}\nbool Fight(int x,int y)\n{\n\tif (a[x].identity==\"MP\"&&a[y].identity==\"ZP\") oo=y,ooo=x;\n\telse if (a[x].Card[K]<a[y].Card[K]) oo=x,ooo=y,a[y].Card[K]-=a[x].Card[K]+1,a[y].a[K]+=a[x].Card[K]+1,a[x].a[K]+=a[x].Card[K],a[x].Card[K]=0;\n\telse ooo=x,oo=y,a[x].Card[K]-=a[y].Card[K],a[x].a[K]+=a[y].Card[K],a[y].a[K]+=a[y].Card[K],a[y].Card[K]=0;\n\tcout<<\"\u3010\"<<ooo<<\"\u5bf9\"<<oo<<\"\u9020\u6210\u4e861\u70b9\u4f24\u5bb3\uff01\"<<oo<<\"\u8fd8\u6709\"<<a[oo].hp<<\"\u70b9\u8840\u3002\"; \n\tif (Dead(ooo,oo)) return 1;\n\treturn 0;\n}\nbool invulnerable(int x,int y,int tot)\n{\n\tfor (int iii=1;iii<=tot;++iii) cout<<\"\u3000\";\n\tcout<<\"\u3010\";\n\tif (tot%2) cout<<\"\u4e3a\u4fdd\u62a4\"<<y<<\"\u8bf7\u6c42J: \\n\";\n\telse cout<<\"\u4e3a\u653b\u51fb\"<<y<<\"\u8bf7\u6c42J: \\n\";\n\tfor (int i=x,j=1;j<=sMP+sFP+sZP;i=order[i],j++)\n\t\tif (a[i].Card[J]&&((tot%2&&friends(i,y))||((!(tot%2))&&hostile(i,y))))\n\t\t{\n\t\t\tfor (int iii=1;iii<=tot;++iii) cout<<\"\u3000\";\n\t\t\tcout<<\" [\"<<i<<\"\u4f7f\u7528\u4e86J\uff01\\n\";\n\t\t\tfor (int iii=1;iii<=tot;++iii) cout<<\"\u3000\";\n\t\t\tcout<<\" [\"<<i<<\"\u7684\u8eab\u4efd\u66b4\u9732\u4e86\uff0c\u4ed6\u662f\"<<a[i].surface<<\"\u3002\\n\";\n\t\t\ta[i].a[J]++,a[i].Card[J]--;\n\t\t\treturn !invulnerable(i,y,tot+1);\n\t\t}\n\tfor (int iii=1;iii<=tot;++iii) cout<<\"\u3000\";\n\tcout<<\"\u3010\"<<x<<\"\u7684\u9526\u56ca\u724c\u751f\u6548\u4e86\uff01\\n\";\n\treturn 0;\n}\nbool qwq(int nn,int tottt)\n{\n\tfor (int i=1,j;i<=(tottt?a[Current].n:nn);++i)\n\t{\n\t\tif (v[i]) continue;\n\t\tif (a[Current].a[a[Current].card[i]-'A'])\n\t\t{\n\t\t\tv[i]=1,a[Current].a[a[Current].card[i]-'A']--;\n\t\t\tcontinue;\n\t\t}\n\t\tif (a[Current].card[i]=='Z')\n\t\t{\n\t\t\tv[i]=1,a[Current].arms=1;\n\t\t\tcout<<\"\u3010\"<<Current<<\"\u88c5\u5907\u4e86Z\uff01\\n\"; \n\t\t}\n\t\telse if (a[Current].card[i]=='K'&&(kill||a[Current].arms)&&hostile(Current,order[Current]))\n\t\t{\n\t\t\tkill=0;\n\t\t\tcout<<\"\u3010\"<<Current<<\"\u5bf9\"<<order[Current]<<\"\u4f7f\u7528\u4e86K\uff01\\n\";\n\t\t\tcout<<\"\u3000\u3010\"<<Current<<\"\u66b4\u9732\u4e86\u8eab\u4efd\uff0c\u4ed6\u662f\"<<a[Current].surface<<\"\\n\";\n\t\t\tif (qaq(i,D,order[Current])) return 1;\n\t\t}\n\t\telse if (a[Current].card[i]=='P'&&a[Current].hp<4)\n\t\t{\n\t\t\tcout<<\"\u3010\"<<Current<<\"\u4f7f\u7528\u4e86P\uff01\u4ed6\u5f53\u524d\u6709\"<<a[Current].hp<<\"\u6ef4\u8840\u3002\\n\";\n\t\t\tv[i]=1,a[Current].hp++;\n\t\t}\n\t\telse if (a[Current].card[i]=='N')\n\t\t{\n\t\t\tcout<<\"\u3010\"<<Current<<\"\u4f7f\u7528\u4e86N\uff01\\n\";\n\t\t\tfor (v[i]=1,j=order[Current];j!=Current;j=order[j])\n\t\t\t\tif ((!invulnerable(Current,j,1))&&qaq(i,K,j)) return 1;\n\t\t\t\telse continue;\n\t\t}\n\t\telse if (a[Current].card[i]=='W')\n\t\t{\n\t\t\tcout<<\"\u3010\"<<Current<<\"\u4f7f\u7528\u4e86W\uff01\\n\";\n\t\t\tfor (v[i]=1,j=order[Current];j!=Current;j=order[j])\n\t\t\t\tif ((!invulnerable(Current,j,1))&&qaq(i,D,j)) return 1;\n\t\t\t\telse continue;\n\t\t} \n\t\telse if (a[Current].card[i]=='F')\n\t\t{\n\t\t\tif (a[Current].identity==\"FP\")\n\t\t\t{\n\t\t\t\ta[Current].surface=\"FP\",v[i]=1;\n\t\t\t\tcout<<\"\u3010\"<<Current<<\"\u5bf9\"<<MP<<\"\u4f7f\u7528\u4e86K\uff01\\n\";\n\t\t\t\tcout<<\"\u3000\u3010\"<<Current<<\"\u66b4\u9732\u4e86\u8eab\u4efd\uff0c\u4ed6\u662f\"<<a[Current].surface<<\"\\n\";\n\t\t\t\tif (!invulnerable(Current,MP,1)&&Fight(Current,MP)) return 1;\n\t\t\t}\n\t\t\telse for (j=order[Current];j!=Current;j=order[j])\n\t\t\t\tif (hostile(Current,j)&&(v[i]=1))\n\t\t\t\t{\n\t\t\t\t\tcout<<\"\u3010\"<<Current<<\"\u5bf9\"<<j<<\"\u4f7f\u7528\u4e86F\uff01\\n\";\n\t\t\t\t\tcout<<\"\u3000\u3010\"<<Current<<\"\u66b4\u9732\u4e86\u8eab\u4efd\uff0c\u4ed6\u662f\"<<a[Current].surface<<\"\\n\";\n\t\t\t\t\tif (!invulnerable(Current,j,1)&&Fight(Current,j)) return 1;\n\t\t\t\t\telse break;\n\t\t\t\t}\n\t\t\t\telse continue;\n\t\t\tif (!a[Current].hp) return 0;\n\t\t}\n\t\tif (v[i]) a[Current].Card[a[Current].card[i]-'A']--;\n\t\tif (v[i]&&a[Current].card[i]!='K'&&a[Current].card[i]!='P'&&qwq(i-1,0)) return 1;\n\t}\n\treturn 0;\n}\nvoid Clean()\n{\n\tfor (i=1;i<=a[Current].n;++i) cout<<v[i]<<\" \";\n\tfor (puts(\"\"),i=0,j=1;j<=a[Current].n;++j)\n\t\tif (!v[j]) a[Current].card[++i]=a[Current].card[j];\n\ta[Current].n=i;\n\tmemset(v,0,sizeof(v)),kill=1;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (i=1;i<=n;++i)\n\t{\n\t\tfor (a[i].surface=\"??\",order[i]=i+1,front[i]=i-1,a[i].hp=4,cin>>a[i].identity,a[i].n=4,j=1;j<=4;++j) cin>>a[i].card[j],a[i].Card[a[i].card[j]-'A']++;\n\t\tif (a[i].identity==\"FP\") sFP++;\n\t\telse if (a[i].identity==\"ZP\") sZP++;\n\t\telse MP=Current=i,sMP++;\n\t}\n\tfor (i=1000000,j=1;j<=m;--i,++j) cin>>card[i];\n\tfor (;i;i--) card[i]=card[i+1];\n\tfor (i=1;i<=n;++i) ;\n\torder[n]=1,front[1]=n,a[Current].surface=\"MP\",m=1000000;\n\tint tt;\n\twhile (sMP&&sFP&&m>0)\n\t{\n\t\tdraw(Current),draw(Current);\n\t\tcout<<\"\\n\\n*\u7b2c\"<<(++tt )<<\"\u8f6e\uff0c\u7531\u7b2c\"<<Current<<\"\u53ea\u732a\u51fa\u724c\u3002*\\n\";\n\t\tfor (j=1;j<=n;++j)\n\t\t{\n\t\t\tprintf(\"------------------------\\n%3d \",j);\n\t\t\tcout<<a[j].identity<<\" \"<<a[j].surface<<\" hp:\"<<a[j].hp<<\" n:\"<<a[j].n<<\" arms:\"<<a[j].arms<<\"\\n\";\n\t\t\tfor (i=1;i<=a[j].n;i++) cout<<a[j].card[i]<<\" \";\n\t\t\tcout<<\"\\n    K D P J F W N Z\\n\";\n\t\t\tcout<<\"    \"<<a[j].Card[K]<<\" \"<<a[j].Card[D]<<\" \"<<a[j].Card[P]<<\" \"<<a[j].Card[J]<<\" \"<<a[j].Card[F]<<\" \"<<a[j].Card[W]<<\" \"<<a[j].Card[N]<<\" \"<<a[j].Card[Z]<<\"\\n\";\n\t\t\tcout<<\"    \"<<a[j].a[K]<<\" \"<<a[j].a[D]<<\" \"<<a[j].a[P]<<\" \"<<a[j].a[J]<<\" \"<<a[j].a[F]<<\" \"<<a[j].a[W]<<\" \"<<a[j].a[N]<<\" \"<<a[j].a[Z]<<\"\\n\";\n\t\t}\n\t\to=(!qwq(a[Current].n,1)),Clean();\n\t\tif (!o) break;\n\t\tmemset(a[Current].a,0,sizeof(a[Current].a));\n\t\tCurrent=order[Current];\n\t}\n\tif (sFP) printf(\"FP\\n\");\n\telse printf(\"MP\\n\");\n\tfor (i=1;i<=n;++i,puts(\"\"))\n\t\tif (a[i].hp) \n\t\t\tfor (j=1;j<=a[i].n;++j) \n\t\t\t\tif (a[i].a[a[i].card[j]-'A']) a[i].a[a[i].card[j]-'A']--;\n\t\t\t\telse cout<<a[i].card[j]<<\" \";\n\t\telse printf(\"DEAD\");\n\treturn 0;\n}\n```",
        "postTime": 1541734798,
        "uid": 23035,
        "name": "Ice_teapoy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\n\u9898\u89e3\n------------\n\n\u3000\u3000\u4e3a\u4e86\u7ed9\u540e\u9762\u5165\u5751\u7684\u4eba\u4e00\u4e9b\u63d0\u9192\uff0c\u672c\u9898\u9898\u76ee\u8f83\u957f\uff0c\u8bf7\u8010\u5fc3\u8bfb\u5b8c\u9898\u76ee\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4T,WA,E\u636e\u8bf4\u5982\u679c\u4f60\u8010\u5fc3\u7167\u7740\u9898\u76ee\u6253\u4f60\u4f1a\u5f97\u523030\u5206\uff0c\u4e8e\u662f\u826f\u5fc3\u7684\u6211\u5c31\u5148\u8bf4\u4e00\u4e9b\u9898\u76ee\u6ca1\u8bf4\u6216\u8bf4\u7684\u6a21\u7cca\u6216\u4f1a\u5751\u4f60\u534a\u4e2a\u5c0f\u65f6\u7684\u4e1c\u897f\u3002\n  \n\u30001.n<=10.\n    \n\u30002.\u724c\u5806\u4f1a\u88ab\u6478\u5b8c\uff0c\u6b64\u65f6\u4e00\u76f4\u53d6\u6700\u540e\u4e00\u5f20\u3002\uff08\u8bdd\u8bf4\u4e0d\u80fd\u91cd\u65b0\u628a\u5e9f\u724c\u6d17\u4e00\u5417\uff09\n    \n\u30003.\u65e0\u61c8\u53ef\u51fb\u5bf9\u975e\u65e0\u61c8\u53ef\u51fb\u662f\u7528\u65f6\u76ee\u7684\u662f\u8981\u4fdd\u62a4\u76ee\u6807\u800c\u4e0d\u662f\u6076\u5fc3\u51fa\u724c\u4eba\u3002\n    \n\u30004.\u53ef\u4ee5\u7ed9\u4ed6\u4eba\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\n    \n\u30005.\u53ef\u4ee5\u4e0d\u65ad\u7528\u65e0\u61c8\u53ef\u51fb\u65e0\u61c8\u65e0\u61c8\u53ef\u51fb\u3002\n    \n\u30006.\u65e0\u61c8\u53ef\u51fb\u4f7f\u7528\u65f6\u5148\u4ece\u51fa\u9526\u56ca\u724c\u7684\u4eba\u5f00\u59cb\u5224\u5b9a\u662f\u5426\u6253\u51fa\u65e0\u61c8\u3002\n    \n\u30007.\u4f7f\u7528\u51b3\u6597\u628a\u81ea\u5df1\u5e72\u6b7b\u65f6\u8bb0\u5f97\u81ea\u5df1\u5c31\u4e0d\u8981\u51fa\u724c\u4e86\u3002\n    \n\u30008.\u7c7b\u53cd\u732a\u4e0d\u7b97\u8eab\u4efd\u660e\u4e86\uff0c\u8be5\u8eab\u4efd\u552f\u4e00\u7684\u76ee\u7684\u5c31\u662f\u8ba9\u4e3b\u516c\u53bb\u6253\u4ed6\u3002\n    \n\u30009.\u4e0d\u8981\u778e\u6253else\uff0c\u535a\u4e3b\u88ab\u81ea\u5df1\u6253\u7684else\u5751\u4e86\u597d\u51e0\u6b21\u3002\n    \n  10.~~\u5e73\u65f6\u4e0d\u8981\u53ea\u5b66\u4e60\uff0c\u591a\u6253\u70b9\u6e38\u620f\u5f88\u91cd\u8981\uff0c\u8bf4\u4e0d\u5b9a\u4e0b\u6b21\u8054\u8d5b\u5c31\u8003\u4e86\u72fc\u4eba\u6740~~\n    \n\u300011.\u6570\u7ec4\u5728\u80fd\u5f00\u5927\u7684\u65f6\u5019\u5c3d\u91cf\u5f00\u5927\u70b9\uff0c\u5c31\u7b97\u662f\u8054\u8d5b\u4e5f\u4f1a\u51fa\u73b0\u6570\u636e\u5927\u4e8e\u7ed9\u51fa\u7684\u8303\u56f4\u7684\u60c5\u51b5\u3002\n \n\u3000\u3000\u8bf4\u5230\u5e95\uff0c\u8fd8\u662f\u4e00\u4e2a\u5927\u6a21\u62df\uff0c\u7b97\u6cd5\u4ec0\u4e48\u7684\u771f\u7684\u7528\u4e0d\u5230\u592a\u9ad8\u7ea7\u7684\uff0c\u6491\u6b7b\u5c31\u662f\u94fe\u8868\u3002\n\n\u89e3\u6cd5\n------------\n\n\u3000\u3000\u597d\u5728\u9898\u76ee\u6ca1\u6709\u7ed9\u51fa\u5185\u5978\uff0c\u95ea\u7535\uff0c\u9632\u5177\uff0c\u9e92\u9e9f\u5f13\uff0c\u732a\u7269\u6280\u80fd\u7b49\u8bbe\u5b9a\uff0c\u6211\u4eec\u5bf9\u4e8e\u5927\u90e8\u5206\u64cd\u4f5c\u6211\u4eec\u57fa\u672c\u5bf9\u5404\u4e2a\u8eab\u4efd\u7684\u732a\u4e00\u89c6\u540c\u4ec1\uff0c\u6e38\u620f\u89c4\u5219\u9664\u4e86\u6843\u53ea\u80fd\u81ea\u5df1\u7528\u4ee5\u5916\u548c\u4e09\u56fd\u6740\u6ca1\u4ec0\u4e48\u4e0d\u540c\u3002\n\u3000\u3000\u6700\u6076\u5fc3\u4eba\u7684\u53ef\u80fd\u5c31\u53ea\u6709\u4e24\u70b9\uff0c\u4e00\u4e2a\u662f\u65e0\u61c8\u53ef\u51fb\uff0c\u4e00\u4e2a\u662f\u8eab\u4efd\u5224\u65ad\uff0c\u56e0\u6b64\u6211\u5c31\u53ea\u8bf4\u8fd9\u4e24\u4e2a\u4e86\uff0c\u522b\u7684\u5c31\u6309\u7167\u66b4\u529b\u5b9e\u73b0\u5c31\u597d\u4e86\u3002\n\u3000\u3000\u3000\u5bf9\u4e8e\u65e0\u61c8\u53ef\u51fb\uff0c\u4f7f\u7528\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\u3000\u3000\u3000\u3000\u3000\u30001.\u5bf9\u4e8e\u65e0\u61c8\u53ef\u51fb\u4f7f\u7528\uff0c\u662f\u5bf9\u90a3\u5f20\u65e0\u61c8\u53ef\u51fb\u7684\u4f7f\u7528\u8005\u8868\u654c\u610f\uff0c\u8eab\u4efd\u663e\u73b0\u3002\u5e76\u4e14\u7b26\u5408\u654c\u4eba\u7684\u654c\u4eba\u5c31\u662f\u670b\u53cb\u7684\u6027\u8d28\u3002\n\u3000\u3000\u3000\u3000\u3000\u30002.\u5bf9\u4e8e\u5176\u4ed6\u9526\u56ca\u724c\u4f7f\u7528\uff0c\u5bf9\u4e8e\u5373\u5c06\u6328\u6253\u7684\u90a3\u4e00\u65b9\u732e\u6bb7\u52e4\uff0c\u8eab\u4efd\u663e\u73b0\u3002\n\u3000\u3000\u3000\u3000\u3000\u56e0\u6b64\u6211\u4eec\u5bf9\u4e8e\u5bf9\u65e0\u61c8\u53ef\u51fb\u5bf9\u65e0\u61c8\u53ef\u51fb\u4f7f\u7528\u7684\u60c5\u51b5\u5355\u72ec\u6253\u4e00\u4e2a\u51fd\u6570\uff0c\u56e0\u4e3a\u4ed6\u4f1a\u65e0\u9650\u9012\u5f52\u3002\u800c\u5bf9\u4e8e\u9526\u56ca\u724c\u4f7f\u7528\u65e0\u61c8\uff0c\u6211\u4eec\u5355\u72ec\u590d\u5236\u7c98\u8d34\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\u3000\u3000\u3000\u5bf9\u4e8e\u8eab\u4efd\uff1a\n\u3000\u3000\u3000\u3000\u3000\u6211\u4eec\u57fa\u672c\u53ef\u4ee5\u8ba4\u4e3a\u53ea\u8981\u51fa\u4e00\u5f20\u975e\u5357\u86ee\u548c\u4e07\u7bad\u7684\u9526\u56ca\u724c\u5c31\u4f1a\u8868\u793a\u8eab\u4efd\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6211\u4eec\u8981\u5728\u51fa\u8fd9\u5f20\u724c\u4e4b\u524d\u628a\u4ed6\u7684\u8eab\u4efd\u66f4\u65b0\uff0c\u8fd9\u6837\u5c31\u4f1a\u4e3a\u65e0\u61c8\u53ef\u51fb\u63d0\u4f9b\u76ee\u6807\u3002\u7c7b\u53cd\u732a\u53ea\u662f\u4e00\u4e2a\u4e34\u65f6\u8eab\u4efd\uff0c\u4e00\u65e6\u4ed6\u8df3\u5fe0\u540e\u5c31\u4e0d\u4f1a\u518d\u88ab\u8ba4\u4e3a\u662f\u7c7b\u53cd\u732a\uff0c\u54ea\u6015\u4ed6\u4e0d\u7ba1\u4e3b\u516c\u6b7b\u6d3b\u72c2\u5237\u5357\u86ee\u3002\n\u3000\u3000\u81f3\u4e8e\u5176\u4ed6\u7684\uff0c\u81ea\u5df1\u6253\u4e00\u6253\u4e5f\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\n    \u8d34\u4e0aAC\u4ee3\u7801\n\n\u4ee3\u7801\n------------\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#include <cmath>\n#include <map>\n#include <set>\n#define N 15\n#define M 2105\n#define tao 1\n#define sha 2\n#define shan 3\n#define jue 4\n#define man 5\n#define wan 6\n#define wu 7\n#define nu 8\nusing namespace std;\nint pre[N],fro[N],n,m;\nint st[M],top;//\u724c\u5806\uff0c\u6ce8\u610f\u4e3a0\u65f6\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c\nstruct pi\n{    \n    int ip;//\u8eab\u4efd\n    int jump;//\u662f\u5426\u8df3\u53cd/\u5fe0    \n    int q[M],en,hea,hp;//\u8840\u91cf\n    bool ln;//\u662f\u5426\u6709\u8fde\u5f29\n}pig[N];\nchar bbb[20];\nvoid print()//\u8f93\u51fa\u6bcf\u4e00\u53ea\u732a\u7684\u8840\u91cf\uff0c\u8eab\u4efd\uff0c\u662f\u5426\u8df3\u8eab\u4efd\n{\n    for(int i=1;i<=n;i++)\n    {\n        cout<<pig[i].hp<<' '<<pig[i].ip<<' '<<pig[i].jump<<endl;\n    }\n    cout<<endl;\n}\nvoid print2()//\u8f93\u51fa\u573a\u4e0a\u6709\u54ea\u4e9b\u73a9\u5bb6\u5b58\u6d3b\n{\n    int now=1;bool yx=1;\n    while(now!=1||yx)\n    {\n        yx=0;\n        cout<<now<<' ';\n        now=fro[now];\n    }\n    cout<<endl;\n}\nvoid show(int x)//\u5c55\u793a\u624b\u724c\n{\n    for(int i=pig[x].hea;i<=pig[x].en;i++)\n    {\n        if(pig[x].q[i])\n        {\n            cout<<pig[x].q[i]<<' ';\n        }\n    }\n    cout<<endl<<endl;\n}\nint check(char x)\n{    \n    if(x=='P') return tao;\n    else if(x=='K') return sha;\n    else if(x=='D') return shan;\n    else if(x=='F') return jue;\n    else if(x=='N') return man;\n    else if(x=='W') return wan;\n    else if(x=='J') return wu;\n    else return nu;\n}\nvoid get_pok(int x,int js)//\u7b2cx\u53ea\u732a\u6478\u7684\u7b2cjs\u5f20\u724c\n{\n    if(js==3)return;\n    if(!top) top=1;\n    pig[x].en++;\n    pig[x].q[pig[x].en]=st[top];\n    top--;\n    get_pok(x,js+1);\n}\nvoid zl(int x)//\u6574\u7406\u73a9\u5bb6x\u624b\u4e2d\u7684\u724c\n{\n    for(int j=pig[x].hea;j<=pig[x].en;j++)\n    {\n        if(pig[x].q[j]!=0)\n        {\n            pig[x].hea=j;\n            for(int k=pig[x].en;k>=pig[x].hea;k--)\n            {\n                if(pig[x].q[k]!=0)\n                {\n                    pig[x].en=k;\n                    break;\n                }\n            }\n            break;\n        }\n        if(j==pig[x].en)\n        {\n            pig[x].en=0;\n            pig[x].hea=pig[x].en+1;\n        }\n    }\n}\nvoid come_to_end(int x)//\u4e00\u5207\u90fd\u7ed3\u675f\u4e86\n{\n    if(x==1)\n        printf(\"MP\\n\");\n    else\n        printf(\"FP\\n\");\n    int js=0;\n    for(int i=1;i<=n;i++)\n        if(pig[i].hp)js++;\n    for(int i=1;i<=n;i++)\n    {\n        if(pig[i].hp==0) printf(\"DEAD\\n\");\n        else\n        {\n            zl(i);\n            for(int j=pig[i].hea;j<pig[i].en;j++)\n            {\n                if(!pig[i].q[j])continue;\n                int y=pig[i].q[j];\n                if(y==tao)printf(\"P \");\n                else if(y==sha)printf(\"K \");\n                else if(y==shan)printf(\"D \");\n                else if(y==nu) printf(\"Z \");\n                else if(y==jue) printf(\"F \");\n                else if(y==man) printf(\"N \");\n                else if(y==wan) printf(\"W \");\n                else if(y==wu) printf(\"J \");\n            }\n            int y=pig[i].q[pig[i].en];\n            if(y==tao)printf(\"P\");\n            else if(y==sha)printf(\"K\");\n            else if(y==shan)printf(\"D\");\n            else if(y==nu) printf(\"Z\");\n            else if(y==jue) printf(\"F\");\n            else if(y==man) printf(\"N\");\n            else if(y==wan) printf(\"W\");\n            else if(y==wu) printf(\"J\");\n            printf(\"\\n\");\n        }\n    }\n    exit(0);\n}\nvoid gua(int x,int from)//\u88abfrom\u6253\u6302\u4e86\n{\n    cout<<from<<\"has killed \"<<x<<endl;\n    pre[fro[x]]=pre[x];\n    fro[pre[x]]=fro[x];\n    if(x==1) come_to_end(3);\n    int now=fro[1];\n    bool yx=1;\n    while(now!=1)\n    {\n        if(pig[now].ip==3)\n        {\n            yx=0;\n            break;\n        }\n        now=fro[now];\n    }\n    if(yx)come_to_end(1);\n    if(pig[x].ip==2&&pig[from].ip==1)\n    {\n        memset(pig[from].q,0,sizeof(pig[from].q));\n        pig[from].ln=0;\n        pig[from].hea=1,pig[from].en=0;\n    }\n    else if(pig[x].ip==3)\n        get_pok(from,0);\n}\nvoid lost(int x,int from)//\u68c0\u67e5\u662f\u5426\u6b7b\u900f\n{\n    if(pig[x].hp==0)\n    {\n        for(int i=pig[x].hea;i<=pig[x].en;i++)\n        {\n            if(pig[x].q[i]==tao)\n            {\n                pig[x].hp++;\n                pig[x].q[i]=0;\n                zl(x);\n                return ;\n            }\n        }\n        gua(x,from);\n    }\n}\nvoid kill(int x)//x\u5bf9\u4e0b\u5bb6\u51fa\u6740\n{\n    int to=fro[x];\n    cout<<x<<\" hit \"<<to<<endl;\n    bool yx=1;\n    for(int i=pig[to].hea;i<=pig[to].en;i++)\n    {\n        if(pig[to].q[i]==shan)\n        {\n            pig[to].q[i]=0;\n            yx=0;\n            zl(to);\n            break;\n        }\n    }\n    if(yx)\n    {\n        cout<<to<<\"is hurt!\"<<endl;\n        pig[to].hp--;\n        lost(to,x);\n    }\n}\nbool use_wu(int x)//x\u4f7f\u7528\u65e0\u61c8\u662f\u5426\u6210\u529f\n{\n    int now=fro[x];\n    while(now!=x)\n    {\n        if((pig[now].ip==3&&pig[x].jump!=3)||(pig[now].ip!=3&&pig[x].jump==3))\n        {\n            for(int i=pig[now].hea;i<=pig[now].en;i++)\n            {\n                if(pig[now].q[i]==wu)\n                {\n                    pig[now].q[i]=0;\n                    if(pig[now].ip==3)pig[now].jump=3;\n                    else if(pig[now].ip==2) pig[now].jump=2;\n                    zl(now);\n                    if(use_wu(now))    return 0;\n                    else return 1;\n                }\n            }\n        }\n        now=fro[now];\n    }\n    return 1;\n}\nvoid come_to_fight(int x,int y)//x\u5bf9y\u51b3\u6597\n{\n    cout<<x<<\"want to fight with \"<<y<<endl;\n    int now=fro[x];\n    if(pig[y].jump&&pig[y].jump!=-1)\n    {\n        while(now!=x)\n        {\n            if((pig[now].ip==3&&pig[y].jump==3)||(pig[y].jump!=3&&pig[now].ip!=3))\n            {\n                bool yx=1;\n                for(int i=pig[now].hea;i<=pig[now].en;i++)\n                {\n                    if(pig[now].q[i]==wu)\n                    {    \n                        pig[now].q[i]=0;\n                        if(pig[now].ip==3)pig[now].jump=3;\n                        else if(pig[now].ip==2) pig[now].jump=2;\n                        zl(now);\n                        yx=0;\n                        if(use_wu(now))return;\n                    }\n                }\n                if(!yx)break;\n            }\n            now=fro[now];\n        }\n    }\n    if(pig[x].ip==1&&pig[y].ip==2)\n    {\n        pig[y].hp--;\n        lost(y,x);\n        return;\n    }\n    int js1=0,js2=0;\n    for(int i=pig[x].hea;i<=pig[x].en;i++)\n        if(pig[x].q[i]==sha)js1++;\n    for(int i=pig[y].hea;i<=pig[y].en;i++)\n        if(pig[y].q[i]==sha) js2++;\n    if(js1<js2)\n    {\n        int js3=0;\n        for(int i=pig[y].hea;i<=pig[y].en;i++)\n        {\n            if(pig[y].q[i]==sha)\n            {\n                js3++;\n                pig[y].q[i]=0;\n                if(js3==js1+1)break;\n            }\n        }\n        for(int i=pig[x].hea;i<=pig[x].en;i++)\n        {\n            if(pig[x].q[i]==sha)\n            {\n                pig[x].q[i]=0;    \n            }\n        }\n        zl(x),zl(y);\n        pig[x].hp--;\n        lost(x,y);\n        cout<<x<<\"failed!\"<<endl;\n    }\n    else\n    {\n        int js3=0;\n        for(int i=pig[x].hea;i<=pig[x].en;i++)\n        {\n            if(pig[x].q[i]==sha)\n            {\n                if(js3==js2)break;\n                js3++;\n                pig[x].q[i]=0;\n            }\n        }\n        for(int i=pig[y].hea;i<=pig[y].en;i++)\n        {\n            if(pig[y].q[i]==sha)\n                pig[y].q[i]=0;    \n        }\n        zl(x),zl(y);\n        pig[y].hp--;\n        lost(y,x);\n        cout<<y<<\"failed!\"<<endl;\n    }\n}\nvoid nanman(int x) //\u5357\u86ee\u5165\u4fb5\n{\n    cout<<\"everyone need to give up a K or you will hurt by \"<<x<<endl;\n    int now=fro[x];\n    while(now!=x)\n    {\n        if(pig[now].jump&&pig[now].jump!=-1)\n        {\n            bool yx2=0;\n            int now2=x;\n            bool yxxx=1;\n            while(now2!=x||yxxx)\n            {\n                yxxx=0;\n                if((pig[now2].ip==3&&pig[now].jump==3)||(pig[now2].ip!=3&&pig[now].jump!=3))\n                {\n                    bool yx=1;\n                    for(int i=pig[now2].hea;i<=pig[now2].en;i++)\n                    {\n                        if(pig[now2].q[i]==wu)\n                        {    \n                            pig[now2].q[i]=0;\n                            if(pig[now2].ip==3)pig[now2].jump=3;\n                            else if(pig[now2].ip==2) pig[now2].jump=2;\n                            zl(now2);\n                            yx=0;\n                            if(use_wu(now2))\n                            {\n                                yx2=1;\n                                break;\n                            }\n                            else break;\n                        }\n                    }\n                    if(!yx)break;\n                }\n                if(yx2)break;\n                now2=fro[now2];\n            }\n            if(yx2)\n            {\n                now=fro[now];continue;\n            }\n        }\n        bool yx=1;\n        for(int i=pig[now].hea;i<=pig[now].en;i++)\n        {\n            if(pig[now].q[i]==sha)\n            {\n                pig[now].q[i]=0;\n                zl(now);\n                yx=0;\n                break;\n            }\n        }\n        if(yx)\n        {\n            pig[now].hp--;\n            if(now==1&&!pig[x].jump)pig[x].jump=-1;\n            lost(now,x);\n        }\n        now=fro[now];\n    }\n}\nvoid wanjian(int x) //\u4e07\u7bad\u9f50\u53d1\n{\n    cout<<\"everyone need to give up a D or you will hurt by \"<<x<<endl;\n    int now=fro[x];\n    while(now!=x)\n    {\n        if(pig[now].jump&&pig[now].jump!=-1)\n        {\n            bool yx2=0;\n            int now2=x;\n            bool yxxx=1;\n            while((now2!=x)||yxxx)\n            {\n                yxxx=0;\n                if((pig[now2].ip==3&&pig[now].jump==3)||(pig[now2].ip!=3&&pig[now].jump!=3))\n                {\n                    bool yx=1;\n                    for(int i=pig[now2].hea;i<=pig[now2].en;i++)\n                    {\n                        if(pig[now2].q[i]==wu)\n                        {    \n                            pig[now2].q[i]=0;\n                            if(pig[now2].ip==3)pig[now2].jump=3;\n                            else if(pig[now2].ip==2) pig[now2].jump=2;\n                            zl(now2);\n                            yx=0;\n                            if(use_wu(now2))\n                            {\n                                yx2=1;\n                                break;\n                            }\n                            else break;\n                        }\n                    }\n                    if(!yx)break;\n                }\n                if(yx2)break;\n                now2=fro[now2];\n            }\n            if(yx2)\n            {\n                now=fro[now];continue;\n            }\n        }\n        bool yx=1;\n        for(int i=pig[now].hea;i<=pig[now].en;i++)\n        {\n            if(pig[now].q[i]==shan)\n            {\n\n                pig[now].q[i]=0;\n                zl(now);\n                yx=0;\n                break;\n            }\n        }\n        if(yx)\n        {\n            pig[now].hp--;\n            if(now==1&&!pig[x].jump)pig[x].jump=-1;\n            lost(now,x);\n        }\n        now=fro[now];\n    }\n}\nvoid second_stage(int x,int js) //\u51fa\u724c\u9636\u6bb5\uff0c\u51fa\u4e86\u51e0\u5f20\u6740\n{\n    cout<<x<<' '<<js<<endl;\n    print();\n    for(int i=pig[x].hea;i<=pig[x].en;i++)\n    {\n        if(!pig[x].q[i]||pig[x].q[i]==shan||pig[x].q[i]==wu||(pig[x].q[i]==sha&&js&&!pig[x].ln))continue;\n        if(pig[x].hp!=4&&pig[x].q[i]==tao)\n        {\n            cout<<x<<\"come back to life\"<<endl;\n            pig[x].hp++;\n            pig[x].q[i]=0;\n            zl(x);\n            second_stage(x,js);\n            return;\n        }\n        else if(pig[x].q[i]==sha)\n        {\n            if(pig[x].ip==1&&pig[fro[x]].jump&&pig[fro[x]].jump!=2)\n            {\n                pig[x].q[i]=0; zl(x);\n                kill(x);\n                second_stage(x,js+1);\n                return;\n            }\n            else if(pig[x].ip==2&&pig[fro[x]].jump==3)\n            {\n                pig[x].jump=2;\n                pig[x].q[i]=0; zl(x);\n                kill(x);\n                second_stage(x,js+1);\n                return;\n            }\n            else if(pig[x].ip==3&&(pig[fro[x]].jump==1||pig[fro[x]].jump==2))\n            {\n                pig[x].jump=3;\n                pig[x].q[i]=0; zl(x);\n                kill(x);\n                second_stage(x,js+1);\n                return;\n            }\n        }\n        else if(pig[x].q[i]==nu)\n        {\n            pig[x].q[i]=0;\n            pig[x].ln=1;\n            zl(x);\n            second_stage(x,js);\n            return;\n        }\n        else if(pig[x].q[i]==jue)\n        {\n            if(pig[x].ip==1)\n            {\n                int now=fro[1];\n                while(now!=1)\n                {\n                    if(pig[now].jump==-1||pig[now].jump==3)\n                    {\n                        pig[x].q[i]=0;\n                        zl(x);\n                        come_to_fight(x,now);\n                        if(pig[x].hp==0)return;\n                        second_stage(x,js);\n                        return;\n                        break;\n                    }\n                    now=fro[now];\n                }\n            }\n            else if(pig[x].ip==2)\n            {\n                int now=fro[x];\n                while(now!=x)\n                {\n                    if(pig[now].jump==3)\n                    {\n                        pig[x].q[i]=0;\n                        zl(x);\n                        pig[x].jump=2;\n                        come_to_fight(x,now);\n                        if(pig[x].hp==0)return;\n                        second_stage(x,js);\n                        return;\n                        break;\n                    }\n                    now=fro[now];\n                }\n            }\n            else \n            {\n                pig[x].jump=3;\n                pig[x].q[i]=0;\n                zl(x);\n                come_to_fight(x,1);\n                if(pig[x].hp==0)return;\n                second_stage(x,js);\n                return;\n            }\n        }\n        else if(pig[x].q[i]==man)\n        {\n            pig[x].q[i]=0;\n            zl(x);\n            nanman(x);\n            second_stage(x,js);\n            return;\n        }\n        else if(pig[x].q[i]==wan)\n        {\n            pig[x].q[i]=0;\n            zl(x);\n            wanjian(x);\n            second_stage(x,js);\n            return;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        pre[i]=i-1;\n        fro[i]=i+1;\n        pig[i].hp=4;\n        scanf(\"%s\",bbb);\n        if(bbb[0]=='M')pig[i].jump=pig[i].ip=1;//\u4e3b\u516c\n        else if(bbb[0]=='Z') pig[i].ip=2;//\u5fe0\u81e3\n        else pig[i].ip=3;//\u53cd\u8d3c\n        pig[i].hea=1;\n        for(int j=1;j<=4;j++)\n        {\n            scanf(\"%s\",bbb);\n            pig[i].en++;\n            pig[i].q[pig[i].en]=check(bbb[0]);\n        }\n    }\n    pre[1]=n;\n    fro[n]=1;\n    top=m;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%s\",bbb);\n        st[top-i+1]=check(bbb[0]);\n    }\n    int now=1;\n    while(1)\n    {\n        get_pok(now,1);//\u5f53\u524d\u732a\u6478\u724c\n        second_stage(now,0);\n        now=fro[now];\n    }\n    return 0;\n}\n/*3 4  \nMP J J K N   \nZP J D K W   \nFP P N P K   \nJ J K W \n\n3 1  \nMP D N F K  \nZP F W F N  \nFP D N N D  \nK  \n\n5 10  \nMP W D F K   \nZP N N D D   \nFP F W W K   \nZP K K N D   \nFP K D P W   \nJ K W K D N N K J N\n\n3 10  \nMP W D J W   \nZP J P D N   \nFP N D F F   \nJ D N N F J J D K W \n\n3 6\nMP W J J D\nFP N F F K\nZP J J F F\nP P K K F W\n*/ \n\n\u5e26\u6ce8\u91ca\u4ee3\u7801\uff08\u9644\u5e26\u5c0f\u6837\u4f8b\uff09\n```\n\n\u5475\u5475\uff0c\u516d\u767e\u884c\u4ee3\u7801",
        "postTime": 1534578815,
        "uid": 109955,
        "name": "gongbangrui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "### \u7b80\u8ff0\n~~\u7b80\u8ff0\u4e2a\u9b3c~~\n[\u601d\u7ef4\u5bfc\u56fe\u7248\u672c](https://mubu.com/doc/PLHEif1xo)\n\n### Solution\n\n\u6211\u5199\u4e4b\u524d\u5b66\u4e60\u4e86[loj\u8fd9\u4f4d\u5927\u4f6c\u7684\u63d0\u4ea4](https://loj.ac/submission/606249)(\u6211\u4e0d\u4f1a\u8bf4\u662f\u6211\u5199\u5230\u4e00\u534a\u53d1\u73b0\u65e0\u61c8\u53ef\u51fb\u4e0d\u600e\u4e48\u4f1a\u5199),\u7136\u540e\u540e\u6765\u5c31\u628a\u5176\u4ed6\u90e8\u5206\u6539\u5f97\u8ddf\u4ed6\u4e00\u81f4\u4e86(\u4ed6\u5199\u5f97\u592a\u7cbe\u7b80\u4e86\uff0c\u4e0b\u9762\u4f1a\u8bf4\u660e),\u5e0c\u671b\u4e3a\u4ed6\u8d77\u4e00\u4e2a\u6ce8\u89e3\u7684\u4f5c\u7528\n\n\u8fd9\u662f\u4e00\u4e2a\u7c7b\u4f3c(~~\u6284\u88ad~~)\u4e09\u56fd\u6740\u7684\u6e38\u620f\n\n\u6211\u4eec\u4e00\u53e5\u4e00\u53e5\u7684\u6765\u770b\u4e00\u53ea\u732a\u6709\u90a3\u4e9b\u4fe1\u606f:\n\n>\u4e3b\u732a\uff08MP\uff09\uff1a\u81ea\u5df1\u5b58\u6d3b\u7684\u60c5\u51b5\u4e0b\u6d88\u706d\u6240\u6709\u7684\u53cd\u732a\u3002\n\u5fe0\u732a\uff08ZP\uff09\uff1a\u4e0d\u60dc\u4e00\u5207\u4fdd\u62a4\u4e3b\u732a\uff0c\u80dc\u5229\u6761\u4ef6\u4e0e\u4e3b\u732a\u76f8\u540c\u3002\n\u53cd\u732a\uff08AP\uff09\uff1a\u6740\u6b7b\u4e3b\u732a\u3002\n\n\u8fd9\u662f\u7c7b\u578b\n\n>\u6e38\u620f\u5f00\u59cb\u65f6\u5019\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u624b\u91cc\u90fd\u4f1a\u67094\u5f20\u724c\uff0c\u4e14\u4f53\u529b\u4e0a\u9650\u548c\u521d\u59cb\u4f53\u529b\u90fd\u662f4\u3002\n\n\u8fd9\u662f\u4f53\u529b\uff0c\u548c\u724c\n\n>1.\u5982\u679c\u6ca1\u6709\u732a\u54e5\u8fde\u5f29\uff0c\u6bcf\u4e2a\u51fa\u724c\u9636\u6bb5\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u201c\u6740\u201d\u6765\u653b\u51fb\uff1b\n2.\u4efb\u4f55\u724c\u88ab\u4f7f\u7528\u540e\u88ab\u5f03\u7f6e\uff08\u6b66\u5668\u662f\u88c5\u5907\u4e0a\uff09\uff1b\n\n\u724c\u5206\u4e3a\u624b\u724c(\u6d88\u8017\u54c1),\u6b66\u88c5(\u6c38\u4e45\u54c1):\u53ea\u6709\u732a\u54e5\u8fde\u5f29\n\n>\u25ce\u732e\u6bb7\u52e4\uff1a\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u6321\u4e0b\u5357\u732a\u5165\u4fb5\u3001\u4e07\u7bad\u9f50\u53d1\u3001\u51b3\u6597\uff1b\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\u8868\u654c\u610f\uff1b\n\u25ce\u8868\u654c\u610f\uff1a\u5bf9\u67d0\u4e2a\u89d2\u8272\u4f7f\u7528\u6740\u3001\u51b3\u6597\uff1b\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\u732e\u6bb7\u52e4\uff1b\n\u25ce\u8df3\u5fe0\uff1a\u5373\u901a\u8fc7\u884c\u52a8\u8868\u793a\u81ea\u5df1\u662f\u5fe0\u732a\u3002\u8df3\u5fe0\u884c\u52a8\u5c31\u662f\u5bf9\u4e3b\u732a\u6216\u5bf9\u67d0\u53ea\u5df2\u7ecf\u8df3\u5fe0\u7684\u732a\u732e\u6bb7\u52e4\uff0c\u6216\u8005\u5bf9\u67d0\u53ea\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u8868\u654c\u610f\uff1b\n\u25ce\u8df3\u53cd\uff1a\u5373\u901a\u8fc7\u884c\u52a8\u8868\u793a\u81ea\u5df1\u662f\u53cd\u732a\u3002\u8df3\u53cd\u884c\u52a8\u5c31\u662f\u5bf9\u4e3b\u732a\u6216\u5bf9\u67d0\u53ea\u5df2\u7ecf\u8df3\u5fe0\u7684\u732a\u8868\u654c\u610f\uff0c\u6216\u8005\u5bf9\u67d0\u53ea\u5df2\u7ecf\u8df3\u53cd\u7684\u732a\u732e\u6bb7\u52e4\uff1b\n\u5fe0\u732a\u4e0d\u4f1a\u8df3\u53cd\uff0c\u53cd\u732a\u4e5f\u4e0d\u4f1a\u8df3\u5fe0\uff1b\u4e0d\u7ba1\u662f\u5fe0\u732a\u8fd8\u662f\u53cd\u732a\uff0c\u80fd\u591f\u8df3\u5fc5\u7136\u8df3\uff1b\n\n\u9664\u4e86\u4e3b\u732a\u5916\u53ea\u6709\u901a\u8fc7\u8df3\u8eab\u4efd\u7684\u529e\u6cd5\u6765\u663e\u793a\u8eab\u4efd\n\n\u6240\u4ee5\u6211\u4eec\u5b9a\u4e49\u4e00\u53ea\u732a\n```cpp\nstruct Pig{\n\tchar type,card[M],weapon,show;//\u7c7b\u578b,\u5361,\u6b66\u5668\u6709\u65e0,\u6211\u8868\u793a(\u4e0d\u8868\u793a0)\u6211\u662f\u4ec0\u4e48\u8eab\u4efd(1\u5fe0/\u4e3b\u732a,2\u53cd\u732a,3\u7c7b\u53cd\u732a)\n\tint heal,cardnum;//\u8840\u91cf,\u5361\u6570 \n}a[N];\n```\n\n\u4ed6\u7684\u884c\u4e3a\u6709\u62bd\u724c\uff0c\u7528\u724c\uff0c\u627e\u724c(\u5e76\u7528\u6389)\n\n```cpp\nstruct Pig{\n\tchar type,card[M],weapon,show;//\u7c7b\u578b,\u5361,\u6b66\u5668\u6709\u65e0,\u6211\u8868\u793a(\u4e0d\u8868\u793a0)\u6211\u662f\u4ec0\u4e48\u8eab\u4efd \n\tint heal,cardnum;//\u8840\u91cf,\u5361\u6570 \n\tinline void Delete(re int&x){re int i;--cardnum;for(i=x;i<=cardnum;++i)card[i]=card[i+1];--x;}//\u4e22\u6389\u7b2cx\u5f20\u724c\n\tinline char Find(re char a){re int i;for(i=1;i<=cardnum;++i)if(card[i]==a)return Delete(i),1;return 0;}//\u68c0\u67e5\u624b\u724c\u6709\u6ca1\u6709a\n\tinline void Get(re int x){while(x--){card[++cardnum]=st[++top];if(top==m)--top;}}//\u724c\u5806\u6478x\u5f20 \n}a[N];\n```\n\n\u53e6\u5916\u6211\u4eec\u7528\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u6765\u7ef4\u62a4\u732a\u4e4b\u95f4\u4f4d\u7f6e\u5173\u7cfb\uff0c\u8fd9\u6837\u5220\u9664\u5f88\u65b9\u4fbf\n\n\u63a5\u4e0b\u6765\u770b\u624b\u724c\n\n>\u25ce\u57fa\u672c\u724c\uff1a\n\u300e\u6843(P)\u300f\uff1a\u5728\u81ea\u5df1\u7684\u56de\u5408\u5185\uff0c\u5982\u679c\u81ea\u5df1\u7684\u4f53\u529b\u503c\u4e0d\u7b49\u4e8e\u4f53\u529b\u4e0a\u9650\uff0c\u90a3\u4e48\u4f7f\u7528\u4e00\u4e2a\u6843\u53ef\u4ee5\u4e3a\u81ea\u5df1\u8865\u5145\u4e00\u70b9\u4f53\u529b\uff0c\u5426\u5219\u4e0d\u80fd\u4f7f\u7528\u6843\uff1b\u6843\u53ea\u80fd\u5bf9\u81ea\u5df1\u4f7f\u7528\uff1b\u5728\u81ea\u5df1\u7684\u56de\u5408\u5916\uff0c\u5982\u679c\u81ea\u5df1\u7684\u8840\u53d8\u4e3a0\u6216\u8005\u66f4\u4f4e\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff1b\n\u300e\u6740(K)\u300f\uff1a\u5728\u81ea\u5df1\u7684\u56de\u5408\u5185\uff0c\u5bf9\u653b\u51fb\u8303\u56f4\u5185\u9664\u81ea\u5df1\u4ee5\u5916\u7684\u4e00\u540d\u89d2\u8272\u4f7f\u7528\u3002\u5982\u679c\u6ca1\u6709\u88ab\u300e\u95ea\u300f\u62b5\u6d88\uff0c\u5219\u9020\u62101\u70b9\u4f24\u5bb3\u3002\u65e0\u8bba\u6709\u65e0\u6b66\u5668\uff0c\u6740\u7684\u653b\u51fb\u8303\u56f4\u90fd\u662f1\uff1b\n\u300e\u95ea(D)\u300f\uff1a\u5f53\u4f60\u53d7\u5230\u6740\u7684\u653b\u51fb\u65f6\uff0c\u53ef\u4ee5\u5f03\u7f6e\u4e00\u5f20\u95ea\u6765\u62b5\u6d88\u6740\u7684\u6548\u679c\uff1b\n\u25ce\u9526\u56ca\u724c\uff1a\n\u300e\u51b3\u6597(F)\u300f\uff1a\u51fa\u724c\u9636\u6bb5\uff0c\u5bf9\u9664\u81ea\u5df1\u4ee5\u5916\u4efb\u610f\u4e00\u540d\u89d2\u8272\u4f7f\u7528\uff0c\u7531\u76ee\u6807\u89d2\u8272\u5148\u5f00\u59cb\uff0c\u81ea\u5df1\u548c\u76ee\u6807\u89d2\u8272\u8f6e\u6d41\u5f03\u7f6e\u4e00\u5f20\u6740\uff0c\u9996\u5148\u6ca1\u6709\u6740\u53ef\u5f03\u7684\u4e00\u65b9\u53d7\u52301\u70b9\u4f24\u5bb3\uff0c\u53e6\u4e00\u65b9\u89c6\u4e3a\u6b64\u4f24\u5bb3\u7684\u6765\u6e90\uff1b\n\u300e\u5357\u732a\u5165\u4fb5(N)\u300f\uff1a\u51fa\u724c\u9636\u6bb5\uff0c\u5bf9\u9664\u4f60\u4ee5\u5916\u6240\u6709\u89d2\u8272\u4f7f\u7528\uff0c\u6309\u9006\u65f6\u9488\u987a\u5e8f\u4ece\u4f7f\u7528\u8005\u4e0b\u5bb6\u5f00\u59cb\u4f9d\u6b21\u7ed3\u7b97\uff0c\u9664\u975e\u5f03\u7f6e\u4e00\u5f20\u6740\uff0c\u5426\u5219\u53d7\u52301\u70b9\u4f24\u5bb3\uff1b\n\u300e\u4e07\u7bad\u9f50\u53d1(W)\u300f\uff1a\u548c\u5357\u732a\u5165\u4fb5\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u8981\u5f03\u7f6e\u7684\u4e0d\u662f\u6740\u800c\u662f\u95ea\uff1b\n\u300e\u65e0\u61c8\u53ef\u51fb(J)\u300f\uff1a\u5728\u76ee\u6807\u9526\u56ca\u751f\u6548\u524d\u62b5\u6d88\u5176\u6548\u679c\u3002\u6bcf\u6b21\u6709\u4e00\u5f20\u9526\u56ca\u5373\u5c06\u751f\u6548\u65f6\uff0c\u4ece\u4f7f\u7528\u8fd9\u5f20\u9526\u56ca\u7684\u732a\u5f00\u59cb\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f\uff0c\u4f9d\u6b21\u5f97\u5230\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\u673a\u4f1a\uff1b\n\u6548\u679c\uff1a\u7528\u4e8e\u51b3\u6597\u65f6\uff0c\u51b3\u6597\u65e0\u6548\u5e76\u5f03\u7f6e\uff1b\u7528\u4e8e\u5357\u732a\u5165\u4fb5\u6216\u4e07\u7bad\u9f50\u53d1\u65f6\uff0c\u5f53\u7ed3\u7b97\u5230\u67d0\u4e2a\u89d2\u8272\u65f6\u624d\u80fd\u4f7f\u7528\uff0c\u5f53\u524d\u89d2\u8272\u4e0d\u9700\u5f03\u7f6e\u724c\u5e76\u4e14\u4e0d\u4f1a\u53d7\u5230\u4f24\u5bb3\uff08\u4ec5\u5bf9\u4e00\u4e2a\u89d2\u8272\u4ea7\u751f\u6548\u679c\uff09\uff1b\u7528\u4e8e\u65e0\u61c8\u53ef\u51fb\u65f6\uff0c\u6210\u4e3a\u76ee\u6807\u7684\u65e0\u61c8\u53ef\u51fb\u88ab\u65e0\u6548\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u300e\u6740(K)\u300f\u300e\u5357\u732a\u5165\u4fb5(N)\u300f\u300e\u4e07\u7bad\u9f50\u53d1(W)\u300f\u653b\u51fb\u529b\u90fd\u662f1,\u65b0\u5efa\u4e00\u4e2a\u529f\u80fd$Defend(x,y)$\u8868\u793a$x$\u6210\u529f\u4f24\u5bb3$y$,\u6ce8\u610f\u5230\u8fd9\u4e00\u6b21\u53ef\u80fd\u89e6\u53d1\n\n>\u5982\u679c\u81ea\u5df1\u7684\u8840\u53d8\u4e3a0\u6216\u8005\u66f4\u4f4e\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6843\n\n\u8fd8\u53ef\u80fd\u6740\u6b7b\u5b83\u732a\n\n```cpp\ninline void Defend(re int x,re int y){//x\u780dy\u4e00\u70b9\u8840 \n\tif(!--a[y].heal)a[y].heal+=a[y].Find('P');//\u80fd\u7528\u6843\u5c31\u7528 \n\tif(!a[y].heal)Kill(x,y);//\u6740\u6b7b\u4e86\n}\n```\n\n\u5bf9\u4e8e$x$\u6740\u6b7b$y$\uff0c\u5148\u770b\u80dc\u5229\u6761\u4ef6\n>\u4e3b\u732a\uff08MP\uff09\uff1a\u81ea\u5df1\u5b58\u6d3b\u7684\u60c5\u51b5\u4e0b\u6d88\u706d\u6240\u6709\u7684\u53cd\u732a\u3002\n\u5fe0\u732a\uff08ZP\uff09\uff1a\u4e0d\u60dc\u4e00\u5207\u4fdd\u62a4\u4e3b\u732a\uff0c\u80dc\u5229\u6761\u4ef6\u4e0e\u4e3b\u732a\u76f8\u540c\u3002\n\u53cd\u732a\uff08AP\uff09\uff1a\u6740\u6b7b\u4e3b\u732a\u3002\n\n\u518d\u5224\u4e00\u4e0b\u51e0\u79cd\u60c5\u51b5\n\n>\u25ce\u73a9\u5bb6\u6b7b\u4ea1\uff1a\u5982\u679c\u8be5\u73a9\u5bb6\u7684\u4f53\u529b\u964d\u52300\u6216\u8005\u66f4\u4f4e\uff0c\u5e76\u4e14\u81ea\u5df1\u624b\u4e2d\u6ca1\u6709\u8db3\u591f\u7684\u6843\u4f7f\u5f97\u81ea\u5df1\u7684\u4f53\u529b\u503c\u56de\u52301\uff0c\u90a3\u4e48\u5c31\u6b7b\u4ea1\u4e86\uff0c\u6b7b\u4ea1\u540e\u6240\u6709\u7684\u724c\uff08\u88c5\u5907\u533a\uff0c\u624b\u724c\u533a\uff09\u88ab\u5f03\u7f6e\uff1b\n\u25ce\u5956\u52b1\u4e0e\u60e9\u7f5a\uff1a\u53cd\u732a\u6b7b\u4ea1\u65f6\uff0c\u6700\u540e\u4e00\u4e2a\u4f24\u5bb3\u6765\u6e90\u5904\uff08\u5373\u4f7f\u662f\u53cd\u732a\uff09\u7acb\u5373\u6478\u4e09\u5f20\u724c\u3002\u5fe0\u732a\u6b7b\u4ea1\u65f6\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u4f24\u5bb3\u6765\u6e90\u662f\u4e3b\u732a\uff0c\u90a3\u4e48\u4e3b\u732a\u6240\u6709\u88c5\u5907\u724c\u3001\u624b\u724c\u88ab\u5f03\u7f6e\uff1b\n\u25ce\u6ce8\u610f\uff0c\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f\u7acb\u523b\u7ed3\u675f\uff0c\u56e0\u6b64\u5373\u4f7f\u4f1a\u64783\u5f20\u724c\u6216\u8005\u8fd8\u6709\u724c\u53ef\u4ee5\u7528\u4e5f\u4e0d\u7528\u6267\u884c\u4e86\u3002\n\n```cpp\ninline void Kill(re int x,re int y){//x\u628ay\u6740\u4e86\u7684\u7ed3\u679c \n\tif(a[y].type=='M')Print();//\u5fe0\u732a\u88ab\u6740 \n\tif(a[y].type=='F'){\n\t\tif(!(--enemynum))Print();//\u654c\u4eba\u6740\u5b8c \n\t\ta[x].Get(3);//\u6ca1\u7ed3\u675f\u8981\u6478\u724c\n\t}\n\telse if(a[x].type=='M'&&a[y].type=='Z')a[x].cardnum=a[x].weapon=0;//\u6211\u6740\u6211\u5fe0\u732a\n\tr[l[y]]=r[y],l[r[y]]=l[y];//\u53bb\u6389y\n}\n```\n\n\u6700\u56f0\u96be\u7684\u5224\u5b9a\u662f\u65e0\u61c8\u53ef\u51fb\uff0c\u6211\u4eec\u8981\u770b$x$\u53ef\u4e0d\u53ef\u4ee5\u653b\u51fb$y$,\u9996\u5148\u770b$y$\u53ef\u4e0d\u53ef\u4ee5\u88ab\u961f\u53cb(\u8fd9\u5730\u65b9\u5c31\u6d89\u53ca\u5230\u663e\u793a\u7684\u8eab\u4efd)\u65e0\u6548\uff0c\u7136\u540e\u518d\u770b\u8fd9\u4e2a\u65e0\u6548\u53ef\u4e0d\u53ef\u4ee5\u88ab**\u6210\u529f**\u65e0\u6548(\u6210\u529f\u65e0\u6548\u5c31\u4ee3\u8868\u4e4b\u540e\u518d\u6ca1\u6709\u4e00\u4e2a\u65e0\u6548)\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u8fc7\u7a0b\uff0c\u91cd\u70b9\u662f\u7406\u89e3\u65e0\u6548\u672c\u8eab\u662f\u4e00\u79cd\u4f1a\u88ab\u65e0\u6548\u7684\u884c\u4e3a\n\n```cpp\ninline char WXKJ(re int x,re int y){\n\tre int i;re char first; \n\tfor(i=x,first=1;(first||(i^x));i=r[i],first=0)\n\t\tif((!y?CanDefend(i,x):MyPig(i,y))&&a[i].Find('J')){//\u6709y\u662f\u770b\u53cb\u519b\u53ef\u4e0d\u53ef\u4ee5\u65e0\u6548\u522b\u4eba\u653b\u51fb\u4fdd\u62a4\u4f60\uff0c\u6ca1y\u662f\u770b\u654c\u4eba\u53ef\u4e0d\u53ef\u4ee5\u65e0\u6548\u4f60\u7684\u65e0\u6548,\u9012\u5f52\u6b21\u6570%2\u8868\u793a\u5230\u5e95\u5b9e\u5728\u963b\u6b62\u8fd9\u573a\u653b\u51fb\u53d1\u751f \n\t\t\ta[i].show=(a[i].type=='F'?2:1);\n\t\t\treturn !WXKJ(i,0);//\u4f60\u4e0d\u80fd\u65e0\u6548\u6211\u624d\u53d1\u52a8\u884c\u4e3a(\u5305\u62ec\u65e0\u6548)\u6210\u529f\n\t\t}\n\treturn 0;\n}\n```\n\n\u5728\u8fd9\u91cc\u5224\u5b9a\u522b\u4eba\u662f\u4ec0\u4e48\u732a\u5c31\u8981\u7528\u5230\u522b\u4eba\u663e\u793a\u7684\u8eab\u4efd(\u800c\u4e0d\u662f\u771f\u5b9e\u8eab\u4efd)\n\n```cpp\ninline char CanDefend(re int x,re int y){\n\treturn ((a[x].type=='M'&&(a[y].show==2||a[y].show==3))||(a[x].type=='Z'&&a[y].show==2)||(a[x].type=='F'&&a[y].show==1));\n}\ninline char MyPig(re int x,re int y){\n\treturn (((a[x].type=='M'||a[x].type=='Z')&&a[y].show==1)||(a[x].type=='F'&&a[y].show==2));\n}\n```\n\n\u7136\u540e\u5177\u4f53\u5199\u6bcf\u4e2a\u624b\u724c\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\n\n### Code\n[\u8fd9\u91cc](https://paste.ubuntu.com/p/NBqMWgmdDt/)",
        "postTime": 1578123061,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "## \u795e\u4ed9\u6a21\u62df\u9898 \u7b80\u79f0\u5783\u573e\u9898\n\n\u610f\u8bc6\u5230\u81ea\u5df1\u7684\u6a21\u62df\u6c34\u5e73\u5f88\u5dee\uff0c\u4e8e\u662f\u6765\u505a\u6b64\u9898 ~~\u5176\u5b9e\u8fd8\u662f\u5403\u9971\u4e86\u6ca1\u4e8b\u5e72~~\n\n--------> [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P2482)\n\n~~\u9996\u5148 \u521a\u70b9\u5f00\u9898 \u770b\u5230\u90a3\u4e48\u957f\u7684\u9898\u610f \u5c31\u60f3\u7740\u7b97\u4e86\u61d2\u5f97\u505a\u4e86\u7136\u540e\u5173\u6389 \u627e\u5176\u5b83\u7684~~\n \n\u6211\u4eec\u4e0d\u80fd\u88ab\u9898\u610f\u6240\u5413\u5012 \u73a9\u8fc7 \u4e09\u56fd\u6740 \u7684\u670b\u53cb\u4eec\u53ef\u80fd\u7406\u89e3\u8d77\u6765\u8981\u8f7b\u677e\u4e00\u70b9\n\n```\n\u6e38\u620f\u76ee\u7684\uff1a\n\n\u4e3b\u732a\uff08MP\uff09\uff1a\u81ea\u5df1\u5b58\u6d3b\u7684\u60c5\u51b5\u4e0b\u6d88\u706d\u6240\u6709\u7684\u53cd\u732a\u3002\n\n\u5fe0\u732a\uff08ZP\uff09\uff1a\u4e0d\u60dc\u4e00\u5207\u4fdd\u62a4\u4e3b\u732a\uff0c\u80dc\u5229\u6761\u4ef6\u4e0e\u4e3b\u732a\u76f8\u540c\u3002\n\n\u53cd\u732a\uff08FP\uff09\uff1a\u6740\u6b7b\u4e3b\u732a\u3002\n```\n\n#### \u603b\u7ed3\u4e00\u4e0b\u5c31\u662f $FP$ \u8981\u6740\u6b7b $MP$ \u800c $ZP$ \u9700\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\u4fdd\u62a4 $MP$\n\n```\n\u6e38\u620f\u5f00\u59cb\u65f6\u5019\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u624b\u91cc\u90fd\u4f1a\u67094\u5f20\u724c\uff0c\u4e14\u4f53\u529b\u4e0a\u9650\u548c\u521d\u59cb\u4f53\u529b\u90fd\u662f4\u3002\n\n\u5f00\u59cb\u6e38\u620f\u65f6\uff0c\u4ece\u4e3b\u732a\u5f00\u59cb\uff0c\u6309\u7167\u9006\u65f6\u9488\u65b9\u5411\uff08\u6570\u636e\u4e2d\u5c31\u662f\u6309\u7167\u7f16\u53f7\u4ece1,2,3..n,1..\u7684\u987a\u5e8f\uff09\u4f9d\u6b21\u884c\u52a8\u3002\n\n\u6bcf\u4e2a\u73a9\u5bb6\u81ea\u5df1\u7684\u56de\u5408\u53ef\u4ee5\u5206\u4e3a\u4e0b\u9762\u7684\u9636\u6bb5\uff1a\n\n\u25ce\u6478\u724c\u9636\u6bb5\uff1a\u4ece\u724c\u5806\u9876\u90e8\u6478\u4e24\u5f20\u724c\uff0c\u4f9d\u6b21\u653e\u5230\u624b\u724c\u7684\u6700\u53f3\u8fb9\uff1b\n\n\u25ce\u51fa\u724c\u9636\u6bb5\uff1a\u4f60\u53ef\u4ee5\u4f7f\u75280\u5f20\u5230\u4efb\u610f\u5f20\u724c\uff0c\u6bcf\u6b21\u4f7f\u7528\u724c\u7684\u65f6\u5019\u90fd\u4f7f\u7528\u6700\u9760\u5de6\u7684\u80fd\u591f\u4f7f\u7528\u7684\u724c\u3002\u5f53\u7136\uff0c\u8981\u6ee1\u8db3\u5982\u4e0b\u89c4\u5219\uff1a\n\n1.\u5982\u679c\u6ca1\u6709\u732a\u54e5\u8fde\u5f29\uff0c\u6bcf\u4e2a\u51fa\u724c\u9636\u6bb5\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u201c\u6740\u201d\u6765\u653b\u51fb\uff1b\n\n2.\u4efb\u4f55\u724c\u88ab\u4f7f\u7528\u540e\u88ab\u5f03\u7f6e\uff08\u6b66\u5668\u662f\u88c5\u5907\u4e0a\uff09\uff1b\n\n\u88ab\u5f03\u7f6e\u7684\u724c\u4ee5\u540e\u90fd\u4e0d\u80fd\u518d\u7528\uff0c\u5373\u4e0e\u6e38\u620f\u65e0\u5173\uff1b\n\n\u5404\u79cd\u724c\u4ecb\u7ecd\uff1a\n```\n#### \u8fd9\u91cc\u5c31\u662f\u6211\u4eec\u5e73\u5e38\u73a9\u5361\u724c\u6e38\u620f\u7684\u89c4\u5219\u4e86 \u521d\u59cb\u8840\u91cf\u4e3a4 \u67094\u5f20\u624b\u724c \u6309\u987a\u5e8f\u6478\u724c\u4ee5\u53ca\u51fa\u724c \n\n\n------------\n\n##### \u724c\u578b\u5206\u4e3a\u666e\u901a\u724c \u88c5\u5907\u724c  \u8fd9\u91cc\u4e0d\u591a\u505a\u4ecb\u7ecd\n```\n**\u91cd\u70b9\u5c31\u662f \u5728\u780d\u5176\u4ed6\u73a9\u5bb6\u65f6\u90fd\u9700\u5224\u65ad\u6709\u6ca1\u6709\u6843 \u4ee5\u53ca\u6fd2\u6b7b\u65f6\u7684\u5224\u5b9a\n**\u5728\u51fa\u6740\u65f6\u4f18\u5148\u5224\u5b9a\u662f\u5426\u53ef\u4ee5\u88ab\u95ea\u907f\n**\u5728\u6709\u732a\u54e5\u8fde\u5f29\u65f6\u989d\u5916\u8fdb\u884c\u5224\u5b9a \u6740\u7684\u4e2a\u6570\n**\u6211\u8fd9\u91cc\u7684\u624b\u724c\u8ba1\u6570\u8fd0\u7528\u7684\u662f \u961f\u5217\n```\n------------\n\n## \u8fd9\u91cc\u9700\u8981\u6ce8\u610f:\n\n```\n\u6ce8\u610f\uff0c\u4e00\u65e6\u8fbe\u6210\u80dc\u5229\u6761\u4ef6\uff0c\u6e38\u620f\u7acb\u523b\u7ed3\u675f\uff0c\u56e0\u6b64\u5373\u4f7f\u4f1a\u64783\u5f20\u724c\u6216\u8005\u8fd8\u6709\u724c\u53ef\u4ee5\u7528\u4e5f\u4e0d\u7528\u6267\u884c\u4e86\n```\n\n\u597d\u7684 \u9898\u7b97\u662f\u8bfb\u5b8c\u4e86 \u5982\u679c\u8fd8\u6ca1\u6709\u770b\u61c2\u9898\u7684\u8bf7\u8f6c\u6b64 ------->[\u4e09\u56fd\u6740\u89c4\u5219](https://zh.wikipedia.org/zh-hans/%E4%B8%89%E5%9B%BD%E6%9D%80)\n\n\u770b\u5b8c\u4ee5\u4e0a\u4e4b\u540e \u5927\u5bb6\u80af\u5b9a\u60f3\u7740\u76f4\u63a5\u6a21\u62df\u4e86 \n\n# \u4e0d\n\n\u770b\u770b\u6570\u636e\u8303\u56f4 \uff1a\n```\n\u6570\u636e\u8bf4\u660e\uff1a\u4e00\u517120\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u6bcf\u4e2a\u70b95\u5206\u300210%\u7684\u6570\u636e\u6ca1\u6709\u9526\u56ca\u724c\uff0c\u53e6\u591620%\u7684\u6570\u636e\u6ca1\u6709\u65e0\u61c8\u53ef\u51fb\n```\n\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u65e0\u61c8\u53ef\u51fb\u5c06\u6210\u4e3a\u672c\u9898\u96be\u70b9\n\n~~\u56e0\u4e3a\u5224\u65ad\u5b9e\u5728\u8fc7\u591a~~\n\n1 \uff1a \u4e07\u7bad\u9f50\u53d1\n\n2 \uff1a \u5357\u732a\u5165\u4fb5\n\n3 \uff1a \u51b3\u6597\n\n\u505a\u8fd9\u79cd\u9898 \u4e00\u5b9a\u8981\u4fdd\u6301\u5934\u8111\u6e05\u9192 \u540c\u65f6 \u8981\u96c6\u4e2d\u7cbe\u795e \u8111\u5b50\u4e0d\u80fd\u77ed\u8def \u53d8\u91cf\u540d\u6700\u597d\u7528\u81ea\u5df1\u660e\u767d\u7684 \u4e0d\u7136\u7ed3\u6784\u4f1a\u7a81\u7136\u4e71\u6389 \n\n~~\u8981\u662f\u505a\u9519\u4e86 sorry \u91cd\u6784\u628a0w0 \u6bd5\u7adf600\u591a\u884c \u5176\u5b9e\u6709\u65f6\u5019\u91cd\u6784\u6bd4\u68c0\u67e5\u7684\u65f6\u95f4\u8981\u77ed~~\n\nok \u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u770b\u4ee3\u7801\u4e86\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint N, M;\n\nstruct node{\n    queue<int> card[10]; //\u624b\u724c\n    char id[4];\n    int blood; //\u8840\n    bool dead, zs, fs, fl, zg, as;\n    int cnt;           //\u724c\u7684\u603b\u6570\n    int killsum;       //\u6740\u6709\u51e0\u4e2a\n    int Flashcnt;      //\u95ea\u6709\u51e0\u4e2a\n    int peachtot;      //\u6843\u6709\u51e0\u4e2a\n    int Invincibleans; //\u65e0\u61c8\u53ef\u51fb\u6709\u51e0\u4e2a\n} name_id[20];\n\nchar str[20];\n\nqueue<int> q;\nmap<char, int> m;\nmap<int, char> minecard;\n\nint fanzei;         //\u5269\u4f59\u53cd\u8d3c\u6570\u91cf\nint next_id[10001]; //\u4e0b\u4e00\u4e2a\u6821\u8272\nbool gameover;\n\nint findfight(int x) //\u5bfb\u627e\u89d2\u8272x\u7684\u51b3\u6597\u5bf9\u8c61\n{\n    if (name_id[x].id[0] == 'F')\n    {\n        return 1;\n    }\n    for (int i = next_id[x]; i != x; i = next_id[i])\n    {\n        if (name_id[x].id[0] == 'M' && (name_id[i].fs == 1 || name_id[i].fl == 1))\n        {\n            return i;\n        }\n        else if (name_id[x].id[0] == 'Z' && name_id[i].fs == 1)\n        {\n            return i;\n        }\n    }\n    return 0;\n}\n\nint findcard(int x, bool right_card) //\u5bfb\u627e\u89d2\u8272x\u7684\u6700\u5de6\u8fb9\u4e00\u5f20\u53ef\u7528\u624b\u724c\n{\n    int cnt = 0;\n    int play = 0x7f7f7f7f;\n    for (int i = 1; i <= 8; i++)\n    {\n        if (name_id[x].card[i].size() && name_id[x].card[i].front() < play) //\u5982\u679c\u8fd9\u5f20\u6bd4\u4e4b\u524d\u53ef\u7528\u4f4d\u7f6e\u66f4\u9760\u5de6\n        {\n\n            if (right_card == 0 && i == 2 && (name_id[x].zg == 0 && name_id[x].as == 1)) //\u5982\u679c\u6ca1\u6709\u8fde\u5f29,\u4e0d\u80fd\u51fa\u591a\u5f20\u6740\n            {\n                continue;\n            }\n\n            else if (right_card == 0 && (i == 3 || i == 7)) //\u56de\u5408\u4e2d\u4e0d\u80fd\u51fa\u95ea    \u65e0\u61c8\u53ef\u51fb\n            {\n                continue;\n            }\n\n            else if (right_card == 0 && (i == 1 && name_id[x].blood == 4)) //\u8840\u91cf\u6ee1\u65f6 \u4e0d\u80fd\u5403\u6843\n            {\n                continue;\n            }\n\n            else if (right_card == 0 && i == 2) //\u89d2\u8272\u51fa\u6740\u80fd\u5426\u627e\u5230\u653b\u51fb\u5bf9\u8c61\n            {\n                if (name_id[x].id[0] == 'M')\n                {\n                    if (name_id[next_id[x]].fs == 0 && name_id[next_id[x]].fl == 0)\n                    {\n                        continue;\n                    }\n                }\n\n                else if (name_id[x].id[0] == 'Z')\n                {\n                    if (name_id[next_id[x]].fs == 0)\n                    {\n                        continue;\n                    }\n                }\n\n                else\n                {\n                    if (name_id[next_id[x]].id[0] != 'M' && name_id[next_id[x]].zs == 0)\n                    {\n                        continue;\n                    }\n                }\n            }\n\n            else if (right_card == 0 && findfight(x) == 0 && i == 4) //\u89d2\u8272\u51fa\u51b3\u6597\u80fd\u5426\u627e\u5230\u51b3\u6597\u5bf9\u8c61\n            {\n                continue;\n            }\n\n            play = name_id[x].card[i].front();\n            cnt = i;\n        }\n    }\n    return cnt;\n}\n\nvoid get(int x) //\u89d2\u8272x\u6478\u724c\n{\n    int a = q.front();\n    if (q.size() != 1)\n    {\n        q.pop();\n    }\n    name_id[x].card[a].push(name_id[x].cnt);\n    name_id[x].cnt++;\n    if (a == 1)\n    {\n        name_id[x].peachtot++;\n    }\n    else if (a == 2)\n    {\n        name_id[x].killsum++;\n    }\n    else if (a == 3)\n    {\n        name_id[x].Flashcnt++;\n    }\n    else if (a == 7)\n    {\n        name_id[x].Invincibleans++;\n    }\n    return;\n}\n\nvoid print() //\u7ed3\u7b97\u8f93\u51fa\n{\n    if (name_id[1].dead)\n    {\n        cout << \"FP\" << endl;\n    }\n    else\n    {\n        cout << \"MP\" << endl;\n    }\n    for (int i = 1; i <= N; i++)\n    {\n        if (name_id[i].dead)\n        {\n            cout << \"DEAD\" << endl;\n        }\n        else\n        {\n            name_id[i].zg = 1;\n            while (findcard(i, 1) != 0)\n            {\n                int cd = findcard(i, 1);\n                name_id[i].card[cd].pop();\n                cout << minecard[cd] << \" \";\n            }\n            cout << endl;\n        }\n    }\n}\n\nvoid dixiao(int x) //\u88ab\u6740x\u8bd5\u56fe\u51fa\u95ea\u6765\u62b5\u6d88\u6740\n{\n    if (name_id[x].Flashcnt != 0)\n    {\n        name_id[x].Flashcnt--;\n        name_id[x].card[3].pop();\n    }\n    else\n    {\n        name_id[x].blood--;\n    }\n    return;\n}\nvoid kill_x(int fr, int x) //\n{\n    name_id[x].dead = 1;\n    if (name_id[x].id[0] == 'F')\n    {\n        fanzei--;\n    }\n    if (fanzei == 0 || name_id[1].dead == 1)\n    {\n        gameover = 1;\n        print();\n        return; //\u5982\u679c\u7ed3\u675f\u6761\u4ef6\u8fbe\u6210,\u5fc5\u987b\u7acb\u523b\u7ed3\u675f,\u4e0d\u80fd\u8fdb\u884c\u5956\u60e9\n    }\n    else\n    {\n        if (name_id[x].id[0] == 'F')\n        {\n            for (int i = 1; i <= 3; i++)\n            {\n                get(fr); //\u6b7b\u4e86\u5c31\u6478\u724c\n            }\n        }\n        else if (name_id[x].id[0] == 'Z' && name_id[fr].id[0] == 'M')\n        {\n            name_id[fr].zg = 0;\n            for (int i = 1; i <= 8; i++)\n            {\n                while (name_id[fr].card[i].size())\n                {\n                    name_id[fr].card[i].pop();\n                }\n            }\n            name_id[fr].killsum = 0;\n            name_id[fr].Flashcnt = 0;\n            name_id[fr].peachtot = 0;\n            name_id[fr].Invincibleans = 0; //\u8be5\u89d2\u8272\u6e050\n        }\n    }\n    for (int i = 1; i <= N; i++)\n    {\n        if (next_id[i] == x)\n        {\n            next_id[i] = next_id[x]; //\u91cd\u7f6e\u4e0b\u5bb6\n        }\n    }\n    return;\n}\n\nvoid peach(int x) //\u89d2\u8272x\u8bd5\u56fe\u7528\u6843\u6765\u633d\u6551\u81ea\u5df1\n{\n    name_id[x].blood++;\n    if (name_id[x].peachtot != 0)\n    {\n        name_id[x].peachtot--;\n        name_id[x].card[1].pop();\n    }\n    else\n    {\n        name_id[x].blood--;\n    }\n    return;\n}\n\nbool wuxiekeji(int fr, int x, bool dep) //\u65e0\u61c8\u53ef\u51fb\n{\n    bool flag = 0;\n    int f = 0;\n    if (dep == 1)\n    {\n        if (name_id[x].zs == 0 && name_id[x].fs == 0 && name_id[x].id[0] != 'M')\n        {\n            return 1;\n        }\n    }\n    for (int i = fr; i != fr || flag == 0; i = next_id[i], flag = 1)\n    {\n        if (name_id[i].Invincibleans != 0)\n        {\n            if (name_id[x].id[0] == 'M' || name_id[x].zs == 1)\n            {\n                if (dep == 0 && name_id[i].id[0] == 'F')\n                {\n                    name_id[i].fs = 1;\n                    name_id[i].fl = 0;\n                    f = i;\n                    name_id[i].card[7].pop();\n                    name_id[i].Invincibleans--;\n                    break;\n                }\n                else if (dep == 1 && name_id[i].id[0] != 'F')\n                {\n                    if (name_id[i].id[0] == 'Z')\n                    {\n                        name_id[i].zs = 1;\n                        name_id[i].fl = 0;\n                    }\n                    f = i;\n                    name_id[i].card[7].pop();\n                    name_id[i].Invincibleans--;\n                    break;\n                }\n            }\n            else if (name_id[x].fs == 1)\n            {\n                if (dep == 0 && name_id[i].id[0] != 'F')\n                {\n                    if (name_id[i].id[0] == 'Z')\n                    {\n                        name_id[i].zs = 1;\n                        name_id[i].fl = 0;\n                    }\n                    f = i;\n                    name_id[i].card[7].pop();\n                    name_id[i].Invincibleans--;\n                    break;\n                }\n                else if (dep == 1 && name_id[i].id[0] == 'F')\n                {\n                    name_id[i].fs = 1;\n                    name_id[i].fl = 0;\n                    f = i;\n                    name_id[i].card[7].pop();\n                    name_id[i].Invincibleans--;\n                    break;\n                }\n            }\n        }\n    }\n    if (f == 0)\n    {\n        return 1;\n    }\n    else\n    {\n        return wuxiekeji(f, x, dep ^ 1) ^ 1;\n    }\n}\n\nvoid judge(int fr, int x) //\u5357????\u5224\u5b9a\u5230x\n{\n    if (wuxiekeji(fr, x, 1)) //\u5224\u5b9a\u662f\u5426\u88ab\u65e0\u61c8,\u5176\u4ed6\u9526\u56ca\u4e0e\u6b64\u76f8\u540c\n    {\n        if (name_id[x].killsum != 0)\n        {\n            name_id[x].killsum--;\n            name_id[x].card[2].pop();\n        }\n        else\n        {\n            name_id[x].blood--;\n            if (name_id[fr].zs == 0 && name_id[fr].fs == 0 && name_id[x].id[0] == 'M')\n            {\n                name_id[fr].fl = 1;\n            }\n            if (name_id[x].blood == 0)\n            {\n                peach(x); //\u662f\u5426\u6709\u6843\u5403\n            }\n            if (name_id[x].blood == 0)\n            {\n                kill_x(fr, x);\n            }\n        }\n    }\n    return;\n}\n\nvoid shoot(int fr, int x) //\u4e07\u7bad\u9f50\u53d1\n{\n    if (wuxiekeji(fr, x, 1))\n    {\n        if (name_id[x].Flashcnt)\n        {\n            name_id[x].Flashcnt--;\n            name_id[x].card[3].pop();\n        }\n        else\n        {\n            name_id[x].blood--;\n            if (name_id[fr].zs == 0 && name_id[fr].fs == 0 && name_id[x].id[0] == 'M')\n            {\n                name_id[fr].fl = 1;\n            }\n            if (name_id[x].blood == 0)\n            {\n                peach(x); //\u6843\n            }\n            if (name_id[x].blood == 0)\n            {\n                kill_x(fr, x);\n            }\n        }\n    }\n    return;\n}\n\nvoid fight(int fr, int x) //\u51b3\u6597\n{\n    if (name_id[fr].id[0] == 'F')\n    {\n        name_id[fr].fs = 1;\n        name_id[fr].fl = 0;\n    }\n    else if (name_id[fr].id[0] == 'Z')\n    {\n        name_id[fr].zs = 1;\n        name_id[fr].fl = 0;\n    }\n    if (wuxiekeji(fr, x, 1))\n    {\n        if (name_id[fr].id[0] == 'M' && name_id[x].id[0] == 'Z')\n        {\n            name_id[x].blood--;\n            if (name_id[x].blood == 0)\n            {\n                peach(x);\n            }\n            if (name_id[x].blood == 0)\n            {\n                kill_x(fr, x);\n            }\n        }\n        else\n        {\n            if (name_id[fr].killsum >= name_id[x].killsum)\n            {\n                name_id[x].blood--;\n                name_id[fr].killsum -= name_id[x].killsum;\n                name_id[x].killsum = 0;\n                if (name_id[x].blood == 0)\n                {\n                    peach(x);\n                }\n                if (name_id[x].blood == 0)\n                {\n                    kill_x(fr, x);\n                }\n                while (name_id[x].card[2].size())\n                {\n                    name_id[x].card[2].pop();\n                }\n                while (name_id[fr].card[2].size() > name_id[fr].killsum)\n                {\n                    name_id[fr].card[2].pop();\n                }\n            }\n            else\n            {\n                name_id[fr].blood--;\n                name_id[x].killsum -= (name_id[fr].killsum + 1);\n                name_id[fr].killsum = 0;\n                if (name_id[fr].blood == 0)\n                {\n                    peach(fr);\n                }\n                if (name_id[fr].blood == 0)\n                {\n                    kill_x(x, fr);\n                }\n                while (name_id[fr].card[2].size())\n                {\n                    name_id[fr].card[2].pop();\n                }\n                while (name_id[x].card[2].size() > name_id[x].killsum)\n                {\n                    name_id[x].card[2].pop();\n                }\n            }\n        }\n    }\n}\n\nvoid mykill(int fr, int x) //\u6740\n{\n    dixiao(x); //\u95ea\n    if (name_id[x].blood == 0)\n    {\n        peach(x);\n    }\n    if (name_id[x].blood == 0)\n    {\n        kill_x(fr, x);\n    }\n    return;\n}\n\nvoid pig_game()\n{\n    int cnt = 1;\n\n    while (fanzei != 0 && name_id[1].dead == 0)\n    {\n        for (int i = 1; i <= 2; i++)\n        {\n            get(cnt); //\u6bcf\u56de\u5408get 2 \u624b\u724c\n        }\n        while (findcard(cnt, 0) != 0)\n        {\n            int cd = findcard(cnt, 0);\n\n            if (cd == 1) //\u95ea\n            {\n                name_id[cnt].blood++;\n                name_id[cnt].card[1].pop();\n                name_id[cnt].peachtot--;\n            }\n\n            else if (cd == 2) //\u6740\n            {\n                name_id[cnt].card[2].pop();\n                name_id[cnt].killsum--;\n               mykill(cnt, next_id[cnt]);\n\n                if (name_id[cnt].id[0] == 'Z')\n                {\n                    name_id[cnt].zs = 1;\n                    name_id[cnt].fl = 0;\n                }\n\n                else if (name_id[cnt].id[0] == 'F')\n                {\n                    name_id[cnt].fs = 1;\n                    name_id[cnt].fl = 0;\n                }\n\n                name_id[cnt].as = 1;\n\n                if (gameover)\n                {\n                    return;\n                }\n            }\n\n            else if (cd == 4) //\u51b3\u6597\n            {\n                name_id[cnt].card[4].pop();\n                int x = findfight(cnt);\n                fight(cnt, x);\n\n                if (gameover)\n                {\n                    return;\n                }\n\n                if (name_id[cnt].dead == 1)\n                {\n                    goto A;\n                }\n            }\n\n            else if (cd == 5) //\u5357\u732a\u5165\u4fb5\n            {\n                name_id[cnt].card[5].pop();\n                for (int i = next_id[cnt]; i != cnt; i = next_id[i])\n                {\n                    judge(cnt, i);\n                    if (gameover)\n                    {\n                        return;\n                    }\n                }\n            }\n\n            else if (cd == 6) //\u4e07\u7bad\u9f50\u53d1\n            {\n                name_id[cnt].card[6].pop();\n                for (int i = next_id[cnt]; i != cnt; i = next_id[i])\n                {\n                    shoot(cnt, i);\n                    if (gameover)\n                    {\n                        return;\n                    }\n                }\n            }\n\n            else if (cd == 8) //\u8bf8\u845b\u8fde\u5f29\n            {\n                name_id[cnt].card[8].pop();\n                name_id[cnt].zg = 1;\n            }\n        }\n        name_id[cnt].as = 0;\n    A:\n        cnt = next_id[cnt]; //\u662f\u5426\u51b3\u6597\u5bf9\u8c61\u51c9\u51c9 \u51c9\u51c9\u7684\u8bdd\u76f4\u63a5\u7ee7\u627f\u624b\u724c\n    }\n    return;\n}\n\nint main()\n{\n    cin >> N >> M;\n    m['P'] = 1; //\u6843 \n    minecard[1] = 'P';\n    m['K'] = 2; //\u6740 \n    minecard[2] = 'K';\n    m['D'] = 3; //\u95ea\n    minecard[3] = 'D';\n    m['F'] = 4; //\u51b3\u6597\n    minecard[4] = 'F';\n    m['N'] = 5; //\u5357\u732a\u5165\u4fb5\n    minecard[5] = 'N';\n    m['W'] = 6; //\u4e07\u7bad\u9f50\u53d1\n    minecard[6] = 'W';\n    m['J'] = 7; //\u65e0\u61c8\u53ef\u51fb\n    minecard[7] = 'J';\n    m['Z'] = 8; //\u732a\u54e5\u8fde\u5f29\n    minecard[8] = 'Z';\n    //\u9884\u5904\u7406\n    for (int i = 1; i <= N; i++)\n    {\n        cin >> name_id[i].id;\n        name_id[i].blood = 4;\n        name_id[i].cnt = 5;\n        if (name_id[i].id[0] == 'F')\n        {\n            fanzei++;\n        }\n        for (int j = 1; j <= 4; j++)\n        {\n            scanf(\"%s\", str);\n            name_id[i].card[m[str[0]]].push(j);\n            if (str[0] == 'K')\n            {\n                name_id[i].killsum++;\n            }\n            else if (str[0] == 'D')\n            {\n                name_id[i].Flashcnt++;\n            }\n            else if (str[0] == 'P')\n            {\n                name_id[i].peachtot++;\n            }\n            else if (str[0] == 'J')\n            {\n                name_id[i].Invincibleans++;\n            }\n        }\n    }\n    for (int i = 1; i <= M; i++)\n    {\n        scanf(\"%s\", str);//\u522b\u7528gets C++11 \u6b7b\u7684\u5f88\u60e8...\n        q.push(m[str[0]]);\n    }\n    for (int i = 1; i <= N; i++)\n    {\n        next_id[i] = i + 1;\n    }\n\n    next_id[N] = 1;\n\n    pig_game();\n\n    return 0;\n}\n```\n\n\u5176\u5b9e\u505a\u5b8c\u53d1\u73b0\u4e5f\u4e0d\u662f\u5f88\u96be \u4e3b\u8981\u662f\u65f6\u95f4 \u4e0e \u8010\u5fc3\n\n\u5f53\u7136\u5728\u8003\u8bd5\u65f6\u9047\u5230\u5927\u6a21\u62df \u5148\u628a\u7b80\u5355\u7684\u6a21\u62df\u5199\u4e0a \u7136\u540e\u518d\u6162\u6162\u6269\u5c55\n\n|\n\n|\n\n|\n\n|\n\n\u50cf\u8fd9\u9053\u9898 \u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u628a\u6ca1\u6709 \u65e0\u61c8\u53ef\u51fb \u7684\u60c5\u51b5 \u6253\u51fa\u6765 \u4fdd\u8bc1 $30pts$ \u5230\u624b\n\u518d\u8fdb\u884c\u5199\u6b63\u89e3\n\n# \u6ce8\u610f\u6ce8\u610f \uff1a \u6253\u4e07\u80fd\u5934\u7684\u76c6\u53cb\u4eec kill \u4e5f\u662f\u4e2a\u51fd\u6570\u540d\u5b57 \u4f1aCE\n\n###### \u5728\u8fd9\u5361\u4e86\u597d\u4e45......\n",
        "postTime": 1577378796,
        "uid": 111016,
        "name": "S1gMa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u732a\u56fd\u6740.......\n\n\u6211\u53ea\u8bb2\u4e2a\u5927\u6982\u5427....\n\n\u6700\u96be\u7684\u7684\u5c31\u662f\u65e0\u61c8\u53ef\u51fb\u7684\u51fd\u6570\u4e86\uff0c\u6211\u8fd9\u91cc\u7528\u4e86\u548c\u6211\u540c\u4e00\u673a\u623f\u7684\u5927\u4f6c\u7684\u9012\u5f52\u65b9\u6cd5\uff0c\u4e3b\u8981\u5c31\u662f\u5206\u6e05\u695a\u732e\u6bb7\u52e4\u548c\u8868\u654c\u610f\u7684\u5bf9\u8c61\u5c31\u884c\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\n\n\u6211\u4eec\u53ef\u4ee5\u8bbe$From$\u8868\u793a\u8fd9\u4e2a\u52a8\u4f5c\u7684\u53d1\u8d77\u8005\uff0c$to$\u4e3a\u627f\u53d7\u8005\uff0c\u518d\u6709\u4e00\u4e2a$ty$\u8868\u793a\u8fd9\u4e2a\u52a8\u4f5c\u7684\u7c7b\u578b(\u8868\u654c\u610f\u6216\u732e\u6bb7\u52e4)\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u6211\u4eec\u9012\u5f52\u51fd\u6570\u7684\u53d8\u91cf\u5b9a\u4e49\u4e86\n```cpp\nbool No_way(int From,int to,int ty)//ty==1\u4e3a\u8868\u654c\u610f\uff0cty==0\u4e3a\u732e\u6bb7\u52e4\n\n```\n\u518d\u770b\u770b\u9898\u76ee\n\n```\n\u300e\u65e0\u61c8\u53ef\u51fb(J)\u300f\uff1a\u5728\u76ee\u6807\u9526\u56ca\u751f\u6548\u524d\u62b5\u6d88\u5176\u6548\u679c\u3002\u6bcf\u6b21\u6709\u4e00\u5f20\u9526\u56ca\u5373\u5c06\u751f\u6548\u65f6,\n\u4ece\u4f7f\u7528\u8fd9\u5f20\u9526\u56ca\u7684\u732a\u5f00\u59cb\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f\uff0c\u4f9d\u6b21\u5f97\u5230\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\u673a\u4f1a;\n```\n\u8bf4\u660e\u4f7f\u7528\u8fd9\u5f20\u9526\u56ca\u724c\u7684\u732a\u4e5f\u662f\u53ef\u4ee5\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\uff0c\u6240\u4ee5\u5185\u90e8\u7684\u5faa\u73af\u51fd\u6570\u6211\u4eec\u8981\u4ece$From$\u5f00\u59cb\uff0c\u4e5f\u662f\u5230$From$\u7ed3\u675f,\u5927\u81f4\u5982\u4e0b\uff1a\n```cpp\nint tag=0,x=From;\nfor(;x!=From||!tag;x=pl[x].nxt){ \n\ttag=1;//tag\u4f7f\u6211\u4eec\u4fdd\u8bc1\u8fd9\u5f20\u724c\u7684\u53d1\u8d77\u8005\u4e5f\u53ef\u4ee5\u7528\u65e0\u61c8\u53ef\u51fb\n   \n   \tyour code here.....\n    \n} \n\treturn 0;\n```\n\u6211\u4eec\u518d\u8003\u8651\uff1a\u65e0\u61c8\u53ef\u51fb\u662f\u53ef\u4ee5\u591a\u4eba\u4e4b\u95f4\u4e92\u76f8\u7528\u6765\u7528\u53bb\u7684\uff0c\u800c\u4e14\u6839\u636e\u9898\u76ee\n```\n\u732e\u6bb7\u52e4\uff1a\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u6321\u4e0b\u5357\u732a\u5165\u4fb5\u3001\u4e07\u7bad\u9f50\u53d1\u3001\u51b3\u6597\uff1b\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\u8868\u654c\u610f\uff1b\n\u8868\u654c\u610f\uff1a\u5bf9\u67d0\u4e2a\u89d2\u8272\u4f7f\u7528\u6740\u3001\u51b3\u6597\uff1b\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u62b5\u6d88\u732e\u6bb7\u52e4\uff1b\n```\n\u8bf4\u660e\u80fd\u51fa\u5c31\u4e00\u5b9a\u4f1a\u51fa\uff0c\u800c\u4e14\u51fa\u4e86\u65e0\u61c8\u53ef\u51fb\u7684\u732a\u5b83\u7684\u8eab\u4efd\u4e00\u5b9a\u4f1a\u8868\u660e\u7684\uff0c\u6211\u601d\u7d22\u4e86\u5f88\u4e45\uff0c\u5199\u51fa\u4e86\u4ee5\u4e0b\u4ee3\u7801:\n```cpp\nif((!ty&&Fuck(x,to))||(ty&&Kiss(x,to))){  \n\tif(pd(x,7)){ \n\t\tpl[x].Jump=1;if(!No_way(x,to,ty^1)) return 1;\n\t} \n}\n\treturn 0;\n```\n\u5176\u4e2dF__k\u51fd\u6570\u4e3a\u5224\u65ad\u8868\u654c\u610f\u662f\u5426\u6210\u529f\u7684\u51fd\u6570\uff0cKiss\u5219\u662f\u5224\u65ad\u732e\u6bb7\u52e4\u662f\u5426\u6210\u529f\u7684\u51fd\u6570\uff0c\u5177\u4f53\u5b9e\u73b0\u53ea\u9700\u5217\u4e3e$x$\u4e0e$to$\u7684\u8eab\u4efd\u7136\u540e\u9010\u4e00\u5224\u65ad\u5373\u53ef\n\n\u51fd\u6570\u89e3\u91ca\uff1a\n\n$x$\u4e3a\u6211\u4eec\u679a\u4e3e\u5230\u7684\u732a\uff0c\u82e5$From$\u662f\u5411$to$\u732e\u6bb7\u52e4\uff0c\u90a3\u4e48\u8981\u62b5\u6d88\u732e\u6bb7\u52e4\u7684\u884c\u4e3a\u4fbf\u662f\u8868\u654c\u610f\uff0c\u53cd\u4e4b\u5219\u662f\u732e\u6bb7\u52e4\uff0c$pd$\u51fd\u6570\u5f88\u7b80\u5355\uff0c\u5355\u7eaf\u7684\u5224\u65ad$x$\u6709\u6ca1\u6709\u65e0\u61c8\u53ef\u51fb\u5982\u679c\u6709\u5c31\u5220\u9664\u8fd4\u56de1\uff0c\u6ca1\u6709\u8fd4\u56de0\u3002\u6211\u7684$pl$\u7ed3\u6784\u4f53\u5b58\u6bcf\u53ea\u732a\u7684\u72b6\u6001\uff0c$Jump$\u6807\u8bb0\u8868\u793a\u8fd9\u53ea\u732a\u8df3\u6ca1\u8df3\uff0c\u4e0d\u7ba1\u8fd9\u53ea\u732a\u7684\u8eab\u4efd\u662f\u4ec0\u4e48\uff0c\u53ea\u8981\u7528\u4e86\u65e0\u61c8\u53ef\u51fb\u5c31\u4e00\u5b9a\u8df3\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u9012\u5f52\u7684\u5224\u65ad\u8fd8\u6709\u6ca1\u6709\u522b\u7684\u732a\u80fd\u62b5\u6d88\u8fd9\u53ea\u732a\u7684\u65e0\u61c8\u53ef\u51fb\u5c31\u884c\u4e86\uff0c\u603b\u4f53\u5982\u4e0b:\n```cpp\nbool No_way(int From,int to,int ty){ int tag=0,x=From;\n\tfor(;x!=From||!tag;x=pl[x].nxt){ tag=1;\n\t\tif((!ty&&Fuck(x,to))||(ty&&Kiss(x,to))){  \n\t\t\tif(pd(x,7)){ \n\t\t\t\tpl[x].Jump=1;if(!No_way(x,to,ty^1)) return 1;\n\t\t\t} \n\t\t}\n\t} \n\treturn 0;\n} \n```\n\u518d\u4f7f\u7528\u9526\u56ca\u724c\u4e4b\u524d\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u51fd\u6570\u5373\u53ef\u3002\u4e0b\u9762\u7ed9\u51fa\u9526\u56ca\u724c\u7684\u51fd\u6570\n\n(\u5148\u7ed9\u51fa\u6bcf\u5f20\u724c\u7684\u5bf9\u5e94\u51fd\u6570)\n\n```cpp\nint bian(char a){ \n\tif(a=='P') return 1;//\u6843 \n\tif(a=='K') return 2;//\u6740 \n\tif(a=='D') return 3;//\u95ea \n\tif(a=='F') return 4;//\u51b3\u6597 \n\tif(a=='N') return 5;//\u5357\u86ee\u5165\u4fb5 \n\tif(a=='W') return 6;//\u4e07\u7bad\u9f50\u53d1 \n\tif(a=='J') return 7;//\u65e0\u61c8\u53ef\u51fb \n\tif(a=='Z') return 8;//\u8bf8\u845b\u8fde\u5f29 \n} \n```\n\u51b3\u6597\uff1a\n```cpp\n\u8fd9\u4e2a\u51fd\u6570\u65e0\u61c8\u53ef\u51fb\u6211\u662f\u653e\u5728\u5916\u9762\u5224\u7684\uff0c\u6ca1\u4eba\u80fd\u51fa\u65e0\u61c8\u624d\u8fdb\u8fd9\u4e2a\u51fd\u6570\ncd[x][y]\u8868\u793ax\u732a\u7684\u7f16\u53f7\u4e3ay\u7684\u724c\uff0c\u6211\u662f\u7528\u94fe\u8868\u5b58\u724c\u7684\uff0c\u94fe\u8868\u8d77\u70b9\u6052\u4e3a0\uff0c\u7ec8\u70b9\u5219\u4e3aEnd;\ncd[x][y].sel\u8868\u793a\u8fd9\u5f20\u724c\u7684\u7c7b\u578b\uff1b\nvoid Solo(int From,int to){ \n\tint x,y,flag,pig;//pig\u4e3a\u8fd9\u6b21\u51b3\u6597\u6263\u8840\u7684\u732a\n\tif(!(pl[From].sel==1&&pl[to].sel==2)){ \n\t\twhile(1){\n\t\t\tflag=0;\n\t\t\tx=0,y=0;\n\t\t\twhile(x!=End){\n\t\t\t\tif(cd[to][x].sel==2){ \n\t\t\t\t\tDel_card(to,x),flag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t\tx=cd[to][x].nxt;\n\t\t\t} \n\t\t\tif(!flag){ \n\t\t\t\tpig=to;break; \n\t\t\t} \n\t\t\tflag=0; \n\t\t\twhile(y!=End){ \n\t\t\t\tif(cd[From][y].sel==2){ \n\t\t\t\t\tDel_card(From,y),flag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t\ty=cd[From][y].nxt;\n\t\t\t} \n\t\t\tif(!flag){ \n\t\t\t\tpig=From;break ;\n\t\t\t} \n\t\t}  \n\t} \n\telse pig=to;\n\tpl[pig].blood--;\n\tif(Dead_or_alive(pig)){ //\u5224\u65ad\u6b7b\u6ca1\u6b7b\n\t\tDel_pig(pig); \n\t\tif(pl[pig].sel==3){ \n\t\t\tnum_of_fz--;\n\t\t\tif(!num_of_fz){ \n\t\t\t\tGame_end=1;return;\n\t\t\t} \n\t\t\tif(pig==From) mopai(to,3);\n\t\t\telse mopai(From,3);//\u6740\u53cd\u732a\u6478\u724c\n\t\t} \n\t\telse if(pl[pig].sel==1){ \n\t\t\tGame_end=1;return;\n\t\t} \n\t\telse{ \n\t\t\tif(pig==to&&pl[From].sel==1) quanqi(From);//\u4e3b\u732a\u6740\u5fe0\u732a\u5f03\u724c\n\t\t} \n\t} \n} \n```\n\u5357\u732a\u5165\u4fb5\uff1a\n\n```cpp\n\u610f\u601d\u591a\u76f8\u540c\uff0c\u6ce8\u610f\u5357\u732a\u5165\u4fb5\u4e0e\u4e07\u7bad\u9f50\u53d1\u5728\u679a\u4e3e\u5230\u6bcf\u4e2a\u627f\u53d7\u8005\u65f6\u90fd\u8981\u5224\u65ad\u65e0\u61c8\u53ef\u51fb\nvoid Pig_attack(int From){ \n\tint x=pl[From].nxt;\n\twhile(x!=From){ \n\t\tif(!No_way(From,x,1)){ \n\t\t\tint y=0,flag=0;\n\t\t\twhile(y!=End){ \n\t\t\t\tif(cd[x][y].sel==2){ \n\t\t\t\t\tDel_card(x,y);flag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t\ty=cd[x][y].nxt;\n\t\t\t} \n\t\t\tif(!flag){ \n\t\t\t\tpl[x].blood--;\n\t\t\t\tif(pl[x].sel==1&&!pl[From].Jump) pl[From].lf=1;\n\t\t\t\tif(Dead_or_alive(x)){ \n\t\t\t\t\tDel_pig(x);\n\t\t\t\t\tif(pl[x].sel==1||(pl[x].sel==3&&num_of_fz==1)){ \n\t\t\t\t\t\tGame_end=1;return;\n\t\t\t\t\t} \n\t\t\t\t\telse if(pl[x].sel==3) mopai(From,3),num_of_fz--;\n\t\t\t\t\telse if(pl[x].sel==2&&pl[From].sel==1)\tquanqi(From);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tx=pl[x].nxt;\n\t}\n}\n```\n\u4e07\u7bad\u9f50\u53d1\u548c\u5357\u732a\u5165\u4fb5\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u662f\u8eb2\u907f\u724c\u7531\u6740\u53d8\u6210\u4e86\u95ea\uff1b\n\n\u5176\u4ed6\u51fd\u6570~~~~\u8fc7\u4e8e\u7b80\u5355~~~~\u8fd9\u91cc\u5c31\u4e0d\u653e\u51fa\u6765\u4e86\n\n\u6ce8\u610f\u6bcf\u7528\u4e00\u5f20\u724c\u90fd\u8981\u4ece\u5934\u91cd\u65b0\u679a\u4e3e\u624b\u724c\n\n\u795d\u5927\u5bb6\u65e9\u65e5A\u4e86\u8fd9\u9898~~",
        "postTime": 1573256776,
        "uid": 203825,
        "name": "\u5207\u683c\u74e6\u00b7\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u732a\u56fd\u6740\uff0c\u6a21\u62df\u9898\u7684\u4e00\u9897\u8000\u773c\u7684\u660e\u73e0\uff0c\u6210\u957f\u5927\u725b\u3001\u953b\u70bc\u7801\u529b\u5fc5\u5199\u9898\uff01\n\n\u6a21\u62df\u9898\u6ca1\u4ec0\u4e48\u601d\u7ef4\u96be\u5ea6\u3002\u53ea\u8981\u6309\u90e8\u5c31\u73ed\u5730\u53bb\u505a\u5c31\u662f\u3002\u6a21\u62df\u7b80\u5355\u5728\u8fd9\uff0c\u96be\u4e5f\u5728\u8fd9\u3002\u56e0\u4e3a\u9898\u9762\u5de8\u957f\uff0c\u6761\u4ef6\u5de8\u591a\uff0c\u5ffd\u758f\u4e00\u70b9\u90fd\u6709\u53ef\u80fd\u5168\u76d8\u7686\u8f93\u3002\u6545\u63a8\u8350\u8003\u8bd5\u65f6\u78b0\u89c1\u4e86\uff0c\u9664\u975e\u771f\u7684\u95f2\u7684\u6ca1\u4e8b\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u78b0\u3002\u4e00\u65e6\u9677\u5165\u7ec6\u8282\u6df7\u4e71\u7684\u6df1\u6e0a\uff0c\u4f30\u8ba1\u4e00\u4e0a\u5348/\u4e0b\u5348\u7684\u8003\u8bd5\u5c31\u6df7\u8fc7\u53bb\u4e86\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u505a\u9898\u7684\u6ce8\u610f\u70b9\uff1a\n\n\u3000\u30001\u3001\u5ba1\u9898\u662f\u6700\u57fa\u672c\u7684\uff01\n\n\u3000\u3000\u3000\u3000\u3000\u505a\u5927\u6a21\u62df\u9898\u65f6\uff0c\u5fc5\u987b\u8981\u8ba4\u771f\u8bfb\u9898\uff0c\u53ef\u80fd\u7684\u8bdd\uff0c\u8981\u628a\u6240\u6709\u6761\u4ef6\u90fd\u5217\u4e3e\u51fa\u6765\uff08\u4e0d\u7136\u5c31\u4f1a\u50cf\u6211\u4e00\u6837\uff0c\u8c03\u4e86\u4e00\u4e0a\u5348\u624d\u53d1\u73b0\u5c31\u662f\u5fd8\u4e86\u51e0\u4e2a\u9898\u76ee\u4e2d\u63d0\u5230\u7684\u6761\u4ef6\u6216\u8981\u6c42\uff09\u3002\n\n\u3000\u30002\u3001\u7406\u6e05\u601d\u8def\u3002\n\n\u3000\u3000\u3000\u3000\u3000\u4e0d\u8981\u541d\u556c\u8349\u7a3f\u7eb8\uff0c\u628a\u6846\u67b6\u3001\u6ce8\u610f\u70b9\u90fd\u5199\u51fa\u6765\u3002\u76f8\u4fe1\u6211\uff0c\u9664\u975e\u60a8\u662f~~AKIOI/NOI/CSP~~\u5f88\u5f3a\u7684\u5927\u4f6c\uff0c\u5426\u5219\u5728\u6572\u4e86\u51e0\u767e\u884c\u4ee3\u7801\u540e\uff0c\u80af\u5b9a\u4f1a\u5fd8\u4e86\u4e9b\u4ec0\u4e48\u7684\u3002\u800c\u5fd8\u4e86\u7684\uff0c\u90fd\u4f1a\u6210\u4e3a\u4e8b\u540e\u8270\u96be\u8c03\u8bd5\u7684\u6839\u6e90\u4e4b\u4e00\u3002\n\u3000\u3000\u3000\u3000\u3000\n     \n   \u540c\u65f6\uff0c\u5199\u4ee3\u7801\u65f6\u63a8\u8350\u591a\u5229\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u53d8\u91cf\u540d\u5c3d\u91cf\u90fd\u7528\u81ea\u5df1\u719f\u6089\u7684\u3001\u89c1\u540d\u77e5\u610f\u7684\u3002\u8fd9\u6837\u4e0d\u4ec5\u4f7f\u7a0b\u5e8f\u5c42\u6b21\u6e05\u6670\u3001\u6613\u4e8e\u7406\u89e3\uff0c\u8fd8\u65b9\u4fbf\u540e\u671f\u7684\u8c03\u8bd5\uff08\u4e0d\u7136\u5199\u4e86500\u884c\u4ee3\u7801\u540e\u518d\u56de\u6765\u770ba1,a2..\u4ec0\u4e48\u7684\u81ea\u5df1\u90fd\u4e0d\u77e5\u9053\u610f\u4e49\u7684\u53d8\u91cf\uff0c\u60f3\u6b7b\u7684\u5fc3\u90fd\u6709\u4e86\uff09\n\n\u3000\u30003\u3001\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0c\u627e\u51c6\u5bf9\u8c61\u3001\u660e\u786e\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u884c\u4e3a\u7684\u5dee\u522b\u4e5f\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002\u8fd9\u79cd\u7ec6\u8282\u7279\u522b\u5bb9\u6613\u5fd8\uff0c\u800c\u627e\u8d77\u6765\u4e0d\u7559\u610f\u7684\u8bdd\u4e5f\u5f88\u96be\u627e\u3002\n\n \n\n\u63a5\u4e0b\u6765\u8bf4\u4e00\u4e0b~~\u6211\u72af\u8fc7\u7684~~\u5bb9\u6613\u6389\u7684\u5751\u5427\uff0c\u6ce8\u610f\u4e00\u4e0b\uff0c\u8fd9\u4e5f\u7b97\u662f\u8fd9\u7247\u9898\u89e3\u7684\u4e3b\u4f53\uff08~~\u6ca1\u51c6\u60a8\u5c31\u6389\u8fdb\u8fd9\u4e9b\u5751\u4e2d\u5462\uff1f~~\uff09\uff1a\n\n\u3000\u30001\u3001\u6740\u6b7b\u53cd\u732a\u540e\u4f1a\u6478\u724c\uff0c\u8981\u6ce8\u610f\u732a\u80fd\u5426\u518d\u51fa\u724c\n\n\u3000\u30002\u3001 \u53cd\u732a\u51b3\u6597\u4f18\u5148\u6253\u4e3b\u516c\uff08\u8bfb\u9898\uff09\n\n\u3000\u30003\u3001\u51b3\u6597\u53ef\u80fd\u4f1a\u81ea\u6740\n\n\u3000\u30004\u3001\u51b3\u6597\u53ea\u80fd\u5728\u7b2c\u4e00\u4e2a\u4eba\u51fa\u6740\u524d\u88ab\u65e0\u61c8\u53ef\u51fb\u6389\n\n\u3000\u30005\u3001\u8981\u6ce8\u610f\u7528\u724c\u7684\u987a\u5e8f\uff08\u4ece\u5de6\u5230\u53f3\uff09\uff0c\u4ee5\u4fbf\u8f93\u51fa\n\n\u3000\u30006\u3001\u6740\u3001\u51b3\u6597\u3001\u65e0\u61c8\u53ef\u51fb\u90fd\u4f1a\u6807\u660e\u8eab\u4efd\uff0c\u5357\u732a\u5165\u4fb5\u548c\u4e07\u7bad\u9f50\u53d1\u9876\u591a\u5728\u672a\u8868\u660e\u8eab\u4efd\u65f6\u88ab\u4e3b\u732a\u8ba4\u4e3a\u7c7b\u53cd\u8d3c\n\n\u3000\u30007\u3001\u51b3\u6597\u65f6\uff0c\u4e3b\u516c\u8ba4\u4e3a\u5bf9\u9762\u662f\u7c7b\u53cd\u8d3c\uff0c\u5b9e\u9645\u4e0a\u662f\u5fe0\u81e3\u7684\u60c5\u51b5\u4e0b\uff0c\u5fe0\u81e3\u8981\u727a\u7272\u4e00\u6ef4\u8840\uff08\u8fde\u65e0\u61c8\u53ef\u51fb\u4e5f\u4e0d\u80fd\u51fa\uff09\n\n\u3000\u30008\u3001\u5f53\u81ea\u5df1\u6ca1\u8868\u660e\u8eab\u4efd\u65f6\uff0c\u4e0d\u80fd\u5bf9\u81ea\u5df1\u7528\u65e0\u61c8\u53ef\u51fb\n\n\u3000\u30009\u3001\u724c\u80fd\u7528\uff0c\u8981\u5148\u628a\u7528\u724c\u7684\u6807\u8bb0\u6253\u4e0a\uff0c\u514d\u5f97\u4e3b\u6740\u5fe0\u5f03\u724c\u540e\u518d\u6253\u6807\u8bb0\u5bfc\u81f4\u9519\u8bef\n\n\u3000\u300010\u3001\u88c5\u4e0a\u732a\u54e5\u8fde\u5f29\u6709\u53ef\u80fd\u4f7f\u524d\u9762\u7684\u6740\u80fd\u7528\n\n\u3000\u300011\u3001\u4e2d\u9014\u6709\u65b0\u7684\u732a\u8868\u660e\u8eab\u4efd\u540e\uff0c\u4e5f\u6709\u53ef\u80fd\u80fd\u8ba9\u524d\u9762\u7684\u51b3\u6597\u6216\u6740\u80fd\u7528\u3002\n\n\u3000\u300012\u3001\u8981\u6bcf\u6b21\u90fd\u7528\u6700\u5de6\u8fb9\u7684\u80fd\u7528\u7684\u724c\uff0c\u662f\u5bf9\u5168\u4f53\u6765\u8bf4\uff0c\u800c\u4e0d\u662f\u5bf9\u67d0\u79cd\u6765\u8bf4\uff01\n\n\u3000\u300013\u3001\u201c\u65e0\u61c8\u53ef\u51fb\uff1a\u5728\u76ee\u6807\u9526\u56ca\u751f\u6548\u524d\u62b5\u6d88\u5176\u6548\u679c\u3002\u6bcf\u6b21\u6709\u4e00\u5f20\u9526\u56ca\u5373\u5c06\u751f\u6548\u65f6\uff0c\u4ece\u4f7f\u7528\u8fd9\u5f20\u9526\u56ca\u7684\u732a\u5f00\u59cb\uff0c\u6309\u7167\u9006\u65f6\u9488\u987a\u5e8f\uff0c\u4f9d\u6b21\u5f97\u5230\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\u673a\u4f1a\u201d\u3002\u8fd9\u4e00\u70b9\u4e0e\u4e09\u56fd\u6740\u4e0d\u540c\uff0c\u4e09\u56fd\u6740\u662f\u4ece\u9526\u56ca\u724c\u7684\u5bf9\u8c61\u5f00\u59cb\u7684\u3002\u4f46\u8fd9\u91cc\u662f\u732a\u56fd\u6740\n\n\u3000\u300014\u3001for\u5faa\u73af\u540ei\u4f1a+1\uff0c\u5982\u91cd\u65b0\u4ece\u5de6\u5230\u53f3\u770b\u724c\uff0ci\u4e0d\u80fd\u53d61\uff0c\u8981\u53d60\u3002\t\n  \n  15\u3001\u5f53\u724c\u5806\u6ca1\u6709\u724c\u65f6\uff0c\u4f1a\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c\u3002\uff08\u8fd9\u5c31\u662fRE\u70b9\u7684\u539f\u56e0\u5427\uff09\n  \n  580\u884c\u4ee3\u7801\u8b66\u544a\uff1a\n  ```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nconst int N=15,M=2005;\n\nint n,m,win,top,fan,usesha,liangshengfen;\n\nchar ch,pai;\n\nbool vis[N][M],allsf[N];\n\nstruct PIG{\n\tint liv,rit,tot,iden,leifan,biao,zhuge,xie;\n\tint wuxie,sha,shan,tao;\n\tchar card[M+4];\n\tint used[M+4];\n}pig[N];\n\nchar Card[M],sf[10];\n\ninline char readch()\n{\n\tch=getchar();\n\twhile(ch<'A'||ch>'Z') \n\t\tch=getchar();\n\treturn ch;\n}\n\ninline void init()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tpig[i].liv=1;pig[i].xie=4;\n\t\tscanf(\"%s\",sf);\n\t\tswitch(sf[0])\n\t\t{\n\t\t\tcase 'M':pig[i].iden=3;pig[i].biao=1;break;\n\t\t\tcase 'Z':pig[i].iden=1;break;\n\t\t\tdefault:\n\t\t\t\tfan++;\n\t\t}\n\t\tfor(int j=1;j<=4;++j)\n\t\t{\n\t\t\tpai=readch();\n\t\t\tswitch(pai)\n\t\t\t{\n\t\t\t\tcase 'J':\n\t\t\t\t\tpig[i].wuxie++;break;\n\t\t\t\tcase 'K':\n\t\t\t\t\tpig[i].sha++;break;\n\t\t\t\tcase 'D':\n\t\t\t\t\tpig[i].shan++;break;\n\t\t\t\tcase 'P':\n\t\t\t\t\tpig[i].tao++;break;\n\t\t\t\t\t\n\t\t\t}\n\t\t\tpig[i].tot++;\n\t\t\tpig[i].card[++pig[i].rit]=pai;\n\t\t}\n\t\t\t\n\t}\n\tfor(int i=1;i<=m;++i)\n\t\tCard[i]=readch();\n\ttop=1;\n}\n\ninline void yongtao(int u)\n{\n\tfor(int i=1;i<=pig[u].rit;++i)\n\tif(!pig[u].used[i]&&pig[u].card[i]=='P')\n\t{\n\t\tpig[u].used[i]=1;\n\t\treturn;\n\t}\n}\n\ninline void yonggewuxie(int u)\n{\n\tfor(int i=1;i<=pig[u].rit;++i)\n\t\tif(!pig[u].used[i]&&pig[u].card[i]=='J')\n\t\t{\n\t\t\tpig[u].used[i]=1;\n\t\t\treturn;\n\t\t}\n}\n\ninline void yongsha(int u,int ge)\n{\n\tif(!ge)\n\t\treturn;\n\tfor(int i=1;i<=pig[u].rit;++i)\n\t\tif(!pig[u].used[i]&&pig[u].card[i]=='K')\n\t\t{\n\t\t\tpig[u].used[i]=1;\n\t\t\tge--;\n\t\t\tif(!ge)\n\t\t\t\treturn;\n\t\t}\n}\n\ninline void yongshan(int u)\n{\n\tfor(int i=1;i<=pig[u].rit;++i)\n\t\tif(!pig[u].used[i]&&pig[u].card[i]=='D')\n\t\t{\n\t\t\tpig[u].used[i]=1;\n\t\t\treturn;\n\t\t}\n}\n\nint yongwuxie(int u,int good,int sta)//\u8868\u8eab\u4efd \n{\n\tif(pig[u].biao==0) \n\t{\n\t\tif(pig[u].leifan==1)\n\t\t{\n\t\t\tif(good) return 0;\n\t\t\tif(pig[1].wuxie)\n\t\t\t{\n\t\t\t\tpig[1].wuxie--;\n\t\t\t\tpig[1].tot--;\n\t\t\t\tyonggewuxie(1);\n\t\t\t\tif(!yongwuxie(1,0,1)) return 1;\n\t\t\t\telse return 0;\n\t\t\t}\n\t\t}\n\t\telse \n\t\t\treturn 0;\n\t}\n\tint k=n,now=sta-1;\n\tif(good)\n\t{\n\t\twhile(k--)\n\t\t{\n\t\t\tnow++;\n\t\t\tif(now>n) \n\t\t\t\tnow=1;\n\t\t\tif(!pig[now].liv) continue;\n\t\t\tif((pig[now].iden&1)==(pig[u].iden&1)&&pig[now].wuxie)\n\t\t\t{\n\t\t\t\tpig[now].wuxie--;\n\t\t\t\tpig[now].tot--;\n\t\t\t\tyonggewuxie(now);\n\t\t\t\tif(pig[now].biao==0)\n\t\t\t\tpig[now].biao=1,liangshengfen=1;\n\t\t\t\tif(!yongwuxie(now,0,now)) return 1;\n\t\t\t\telse return 0;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\telse\n\t{\n\t\twhile(k--)\n\t\t{\n\t\t\tnow++;\n\t\t\tif(now>n) \n\t\t\t\tnow=1;\n\t\t\tif(!pig[now].liv) continue;\n\t\t\tif((pig[now].iden&1)!=(pig[u].iden&1)&&pig[now].wuxie)\n\t\t\t{\n\t\t\t\tpig[now].wuxie--;\n\t\t\t\tpig[now].tot--;\n\t\t\t\tyonggewuxie(now);\n\t\t\t\tif(pig[now].biao==0)\n\t\t\t\tpig[now].biao=1,liangshengfen=1;\n\t\t\t\tif(!yongwuxie(now,0,now)) return 1;\n\t\t\t\telse return 0;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}\n\ninline void mosanzhang(int u)\n{\n\tfor(int j=1;j<=3;++j)\n\t{\n\t\tpai=Card[top++];\n\t\tif(top>m) top=m;\n\t\tswitch(pai)\n\t\t{\n\t\t\tcase 'J':\n\t\t\t\tpig[u].wuxie++;break;\n\t\t\tcase 'K':\n\t\t\t\tpig[u].sha++;break;\n\t\t\tcase 'D':\n\t\t\t\tpig[u].shan++;break;\n\t\t\tcase 'P':\n\t\t\t\tpig[u].tao++;break;\n\t\t}\n\t\tpig[u].tot++;\n\t\tpig[u].card[++pig[u].rit]=pai;\n\t}\n}\n\ninline void diaoxie(int u,int now)//u\u4f7fnow\u6389\u8840,\u5904\u7406\u6b7b\u4ea1\uff08\u4e0d\u5904\u7406\u4ec7\u6068\uff09 \n{\n\tpig[now].xie--;\n\tif(pig[now].xie==0)\n\t{\n\t\tif(pig[now].tao)\n\t\t{\n\t\t\tpig[now].xie=1;\n\t\t\tpig[now].tot--;\n\t\t\tpig[now].tao--;\n\t\t\tyongtao(now);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpig[now].liv=0;\n\t\t\tif(pig[now].iden==3)\n\t\t\t{\n\t\t\t\twin=2;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(pig[now].iden==1)\n\t\t\t{\n\t\t\t\tif(pig[u].iden==3)\n\t\t\t\t{\n\t\t\t\t\tpig[u].zhuge=0;\n\t\t\t\t\tpig[u].tao=pig[u].sha=pig[u].shan=pig[u].wuxie=0;\n\t\t\t\t\tfor(int i=1;i<=pig[u].rit;++i)\n\t\t\t\t\t\tpig[u].used[i]=0;\n\t\t\t\t\tpig[u].rit=pig[u].tot=0;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(pig[now].iden==0)\n\t\t\t{\n\t\t\t\tfan--;\n\t\t\t\tif(fan==0) \n\t\t\t\t{\n\t\t\t\t\twin=1;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmosanzhang(u);\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void nanman(int u)//\u65e0\u4ec7\u6068\uff0c\u53ea\u7c7b\u53cd \n{\n\tint k=n-1,now=u;\n\twhile(k--)\n\t{\n\t\tnow++;\n\t\tif(now>n) now=1;\n\t\tif(!pig[now].liv) continue;\n\t\tif(!yongwuxie(now,1,u))\n\t\t{\n\t\t\tif(pig[now].sha>0)\n\t\t\t{\n\t\t\t\tpig[now].sha--;\n\t\t\t\tpig[now].tot--;\n\t\t\t\tyongsha(now,1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiaoxie(u,now);\n\t\t\t\tif(pig[now].iden==3&&pig[u].biao==0)\n\t\t\t\t\tpig[u].leifan=1; \n\t\t\t} \n\t\t}\n\t\tif(win) return;\n\t}\n}\n\ninline void wanjian(int u)\n{\n\tint k=n-1,now=u;\n\twhile(k--)\n\t{\n\t\tnow++;\n\t\tif(now>n) \n\t\t\tnow=1;\n\t\tif(!pig[now].liv) continue;\n\t\tif(!yongwuxie(now,1,u))\n\t\t{\n\t\t\tif(pig[now].shan>0)\n\t\t\t{\n\t\t\t\tpig[now].shan--;\n\t\t\t\tpig[now].tot--;\n\t\t\t\tyongshan(now);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiaoxie(u,now);\n\t\t\t\tif(pig[now].iden==3&&pig[u].biao==0)\n\t\t\t\t\tpig[u].leifan=1; \n\t\t\t} \n\t\t}\n\t\tif(win) return;\n\t}\n}\n\ninline int doumubiao(int u)\n{\n\tif(!pig[u].iden)\n\t\treturn 1;\n\tint now=u,k=n-1;\n\twhile(k--)\n\t{\n\t\tnow++;\n\t\tif(now>n)\n\t\t\tnow=1;\n\t\tif(!pig[now].liv) \n\t\t\tcontinue;\n\t\tif(pig[now].biao==0)\n\t\t{\n\t\t\tif(u==1&&pig[now].leifan)\n\t\t\t\treturn now;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif((pig[now].iden&1)!=(pig[u].iden&1))\n\t\t\t\treturn now;\n\t\t}\n\t}\n\treturn 0;\n}\n\ninline int juedou(int u,int now)//\u53ea\u8ba1\u7b97\u6389\u8840\u3001\u6740 \n{\n\tif(u==1&&pig[now].iden)\n\t{\n\t\tdiaoxie(1,now);\n\t\treturn 0;\n\t}\n\tif(yongwuxie(now,1,u)) \n\t\treturn 0;\n\tif(!pig[now].sha)\n\t{\n\t\tdiaoxie(u,now);\n\t\treturn 0;\n\t}\n\tpig[now].sha--;\n\tpig[now].tot--;\n\tyongsha(now,1);\n//\tif(yongwuxie(u,1))\n//\t\treturn 0;\n\tif(!pig[u].sha)\n\t{\n\t\tdiaoxie(now,u);\n\t\treturn 1;\n\t}\n\tpig[u].sha--;\n\tpig[u].tot--;\n\tyongsha(u,1);\n\tif(pig[now].sha>pig[u].sha)\n\t{\n\t\tpig[now].sha-=pig[u].sha+1;\n\t\tpig[now].tot-=pig[u].sha+1;\n\t\tyongsha(now,pig[u].sha+1);\n\t\tyongsha(u,pig[u].sha);\n\t\tpig[u].tot-=pig[u].sha;\n\t\tpig[u].sha=0;\n\t\tdiaoxie(now,u);\n\t\treturn 1;\n\t}\n\telse \n\t{\n\t\tpig[u].sha-=pig[now].sha;\n\t\tpig[u].tot-=pig[now].sha;\n\t\tyongsha(u,pig[now].sha);\n\t\tyongsha(now,pig[now].sha);\n\t\tpig[now].tot-=pig[now].sha;\n\t\tpig[now].sha=0;\n\t\tdiaoxie(u,now);\n\t\treturn 0;\n\t}\n}\n\ninline void zhengli(int u)\n{\n\tint ccnt=0;\n\tfor(int i=1;i<=pig[u].rit;++i)\n\t{\n\t\tif(!pig[u].used[i])\n\t\t\tpig[u].card[++ccnt]=pig[u].card[i];\n\t\telse\n\t\t\tpig[u].used[i]=0;\n\t}\n\tpig[u].rit=ccnt;\n}\n\ninline int nengyongsha(int u)\n{\n\tint k=n-1,now=u;\n\twhile(k--)\n\t{\n\t\tnow++;\n\t\tif(now>n) now=1;\n\t\tif(!pig[now].liv) continue;\n\t\tif(pig[u].iden==3)\n\t\t{\n\t\t\tif(pig[now].biao==1)\n\t\t\t{\n\t\t\t\tif(pig[now].iden==0)\n\t\t\t\t\treturn now;\n\t\t\t\telse\n\t\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse\n\t\t\t\tif(pig[now].leifan)\n\t\t\t\t\treturn now;\n\t\t\t\telse \n\t\t\t\t\treturn 0;\n\t\t}\n\t\tif(pig[now].biao==0) \n\t\t\treturn 0;\n\t\tif((pig[now].iden&1)!=(pig[u].iden&1)) \n\t\t\treturn now;\n\t\telse \n\t\t\treturn 0;\n\t}\n\treturn 0;\n}\n\ninline void chupai(int u)\n{\n\tint t;\n\tint weiyongdou=0,weiyongsha=0,weiyongtao=0;\n\tliangshengfen=0;\n\tusesha=0;\n\tfor(int i=1;i<=pig[u].rit;++i)\n\tif(!pig[u].used[i])\n\t{\n\t\tswitch(pig[u].card[i])\n\t\t{\n\t\t\tcase 'N':\n\t\t\t\tpig[u].tot--;\n\t\t\t\tpig[u].used[i]=1;\n\t\t\t\tnanman(u);\n\t\t\t\tbreak;\n\t\t\tcase 'F':\n\t\t\t\tif(t=doumubiao(u))\n\t\t\t\t{\n\t\t\t\t\tpig[u].used[i]=1;\n\t\t\t\t\tpig[u].tot--;\n\t\t\t\t\tpig[u].biao=1;\n\t\t\t\t\tif(juedou(u,t))//\u81ea\u5df1\u6389\u8840 \n\t\t\t\t\t{\n\t\t\t\t\t\tif(weiyongtao>0) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tyongtao(u);\n\t\t\t\t\t\t\tpig[u].xie++;\n\t\t\t\t\t\t\tpig[u].tao--;\n\t\t\t\t\t\t\tpig[u].tot--;\n\t\t\t\t\t\t\tweiyongtao--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tweiyongdou=1;\n\t\t\t\tbreak;\t\n\t\t\tcase 'W':\n\t\t\t\tpig[u].tot--;\n\t\t\t\tpig[u].used[i]=1;\n\t\t\t\twanjian(u);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t\tpig[u].zhuge=1;\n\t\t\t\t\tpig[u].used[i]=1;\n\t\t\t\t\tpig[u].tot--;\n\t\t\t\t\tbreak;\n\t\t\tcase 'D':break;\n\t\t\tcase 'J':break;\n\t\t\tcase 'P':\n\t\t\t\t\tif(pig[u].xie<4)\n\t\t\t\t\t{\n\t\t\t\t\t\tpig[u].xie++;\n\t\t\t\t\t\tpig[u].tao--;\n\t\t\t\t\t\tpig[u].used[i]=1;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tweiyongtao++;\n\t\t\t\t\tbreak;\n\t\t\tcase 'K':\n\t\t\t\tif(!usesha||(pig[u].zhuge))\n\t\t\t\t{\n\t\t\t\t\tif(t=nengyongsha(u))\n\t\t\t\t\t{\n\t\t\t\t\t\tusesha=1;\n\t\t\t\t\t\tpig[u].biao=1;\n\t\t\t\t\t\tpig[u].used[i]=1;\n\t\t\t\t\t\tpig[u].tot--;\n\t\t\t\t\t\tpig[u].sha--;\n\t\t\t\t\t\tif(pig[t].shan)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpig[t].shan--;\n\t\t\t\t\t\t\tyongshan(t);\n\t\t\t\t\t\t\tpig[t].tot--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdiaoxie(u,t);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tweiyongsha=1;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t\tweiyongsha=1;\n\t\t\t\tbreak;\n\t\t}\n\t\tif(!pig[u].liv)\n\t\t\treturn;\n\t\tif(win) return;\n\t\tif(liangshengfen&&weiyongdou)\n\t\t{\n\t\t\tliangshengfen=0;weiyongdou=0;\n\t\t\ti=0;\n\t\t}\n\t\telse\n\t\t\tif(weiyongsha&&(!usesha||pig[u].zhuge)&&nengyongsha(u))\n\t\t\t{\n\t\t\t\tweiyongsha=0;\n\t\t\t\ti=0;\n\t\t\t}\n\t}\n\tif(pig[u].rit>(pig[u].tot<<1))\n\t\tzhengli(u);\n}\n\nint main()\n{\n\tinit();\n\tint now=1;\n\twhile(!win)\n\t{\n\t\tif(pig[now].liv)\n\t\t{\n\t\t\tfor(int j=1;j<=2;++j)\n\t\t\t{\n\t\t\t\tpai=Card[top++];\n\t\t\t\tif(top>m) top=m;\n\t\t\t\tswitch(pai)\n\t\t\t\t{\n\t\t\t\t\tcase 'J':\n\t\t\t\t\t\tpig[now].wuxie++;break;\n\t\t\t\t\tcase 'K':\n\t\t\t\t\t\tpig[now].sha++;break;\n\t\t\t\t\tcase 'D':\n\t\t\t\t\t\tpig[now].shan++;break;\n\t\t\t\t\tcase 'P':\n\t\t\t\t\t\tpig[now].tao++;break;\n\t\t\t\t}\n\t\t\t\tpig[now].tot++;\n\t\t\t\tpig[now].card[++pig[now].rit]=pai;\n\t\t\t}\n\t\t\tchupai(now);\n\t\t}\n\t\tnow++;\n\t\tif(now>n)\n\t\t\tnow=1;\n\t}\n\tif(win==1)\n\t\tprintf(\"MP\\n\");\n\telse\n\t\tprintf(\"FP\\n\");\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(!pig[i].liv)\n\t\t\tprintf(\"DEAD\\n\");\n\t\telse\n\t\t{\n\t\t\tfor(int j=1;j<=pig[i].rit;++j)\n\t\t\t\tif(!pig[i].used[j])\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%c \",pig[i].card[j]);\n\t\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u4ee3\u7801\u53d8\u91cf\u540d\u6216\u51fd\u6570\u540d\u5927\u90e8\u5206\u4ee5\u6c49\u8bed\u62fc\u97f3\u547d\u540d\u3002\n\n\uff08\u5199\u4e86\u8fd9\u4e48\u591a\uff0c\u5e94\u8be5\u80fd\u61c2\u5427\u3002\u540c\u6b65\u53d1\u8868\u4e8e[\u535a\u5ba2\u56ed](https://www.cnblogs.com/InductiveSorting-QYF/p/11755208.html)\uff0c\u6d1b\u8c37\u7248\u6709\u589e\u91cf\u5185\u5bb9\uff09\n\n\uff08\u61c2\u4e86\u7684\u8bdd\u8bf7\u7559\u4e2a\u8d5e\uff0c\u8ba9\u66f4\u591a\u4eba\u770b\u5230\uff1b\u4e0d\u61c2\u7684\u8bdd\uff1f\u95ee\u5c31\u597d\u4e86~\uff09\n\n(\u6700\u540e\u518dbb\u4e00\u53e5\uff1a\u5bf9\u62cd\u771f\u662f\u4e2a\u597d\u4e1c\u897f\u3002\u5b9e\u5728\u627e\u4e0d\u51fa\u9519\u7684\u8bdd\uff0c\u5bf9\u62cd\u4e00\u4e0b\uff0c\u5f88\u5feb\u5c31\u80fd\u627e\u5230\u4e00\u7ec4hack\u5c0f\u6570\u636e\uff0c\u7b80\u76f4\u5c31\u662f~~\u5c45\u5bb6\u65c5\u884c\u5fc5\u5907~~\u8c03\u8bd5\u795e\u5668\uff09",
        "postTime": 1572264889,
        "uid": 45543,
        "name": "YHASDY",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898,\u6216\u8bb8\u662f\u6211\u505a\u7684\u6a21\u62df\u4e2d,\u7801\u91cf\u6700\u5927\u7684\u4e00\u9053\u4e86(~~\u4e4b\u524d,\u6211\u4e00\u76f4\u4ee5\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u96be,\u73b0\u5728\u4e0d\u8fd9\u4e48\u8ba4\u4e3a\u4e86,\u8868\u793a\u4ee5\u540e\u518d\u4e5f\u4e0d\u60f3\u505a\u6a21\u62df\u4e86~~)\n\n\u4e0d\u8fc7,\u8fd9\u9898\u7ec3\u4ee3\u7801\u80fd\u529b\u4e5f\u4e0d\u9519,\u90a3\u6211\u5c31\u6765H3BO3\u4e00\u53d1\u5427\n\n\u5728\u6a21\u62df\u65f6\uff0c\u627e\u5230\u7b2c\u4e00\u5f20\u624b\u724c\u662f\u5173\u952e\uff0c\u6211\u7528\u4e868\u6761\u961f\u5217\u7ef4\u62a4\u6bcf\u4e00\u5f20\u724c\u662f\u7b2c\u51e0\u6b21\u6478\u7684\n\n\u63a5\u4e0b\u6765\uff0c\u5206\u6790\u4e00\u4e0b\u6bcf\u4e2a\u5206\u503c\u7684\u66b4\u529b\uff08\u6b63\u89e3\uff09\u7684\u6ce8\u610f\u70b9\uff1a\n\n10pts\uff1a\n\n- \u5751\uff1a\u724c\u5806\u4e2d\u7684\u724c\u4e0d\u4e00\u5b9a\u591f\u7528\uff0c\u8fd9\u65f6\uff0c\u9700\u8981\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\n- \u6700\u5f00\u59cb\uff0c\u53ea\u6709\u4e3b\u516c\u4eae\u660e\u8eab\u4efd\uff0c\u6240\u4ee5\u6b64\u65f6n\u53f7\u89d2\u8272\u4e00\u5b9a\u662f\u53cd\u8d3c\uff0c\u5426\u5219\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u89d2\u8272\u80fd\u591f\u8df3\u5fe0\uff08\u53cd\uff09\n- \u5728\u8fd9\u6b65\uff0c\u5b9e\u9645\u4e0d\u9700\u8981\u8bb0\u5f55\u201c\u7c7b\u53cd\u732a\u201d\uff0c\u56e0\u4e3a\u6ca1\u6709AOE\u9526\u56ca\n- \u5728\u89d2\u8272\u7684\u56de\u5408\u4e2d\u4e0d\u80fd\u51fa\u95ea\n- \u88c5\u5907\u6b66\u5668\u65f6\uff0c\u6240\u6709\u7684\u6b66\u5668\u724c\u90fd\u4f1a\u88ab\u6253\u51fa\uff0c\u4e0d\u80fd\u53ea\u51fa\u4e00\u5f20\n\n30pts\uff1a\n\n- \u53cd\u8d3c\u7684\u51b3\u6597\u5bf9\u8c61\u6c38\u8fdc\u662f\u4e3b\u516c\n- \u4f7f\u7528AOE\u9526\u56ca\u65f6\uff0c\u4f7f\u7528\u8005\u4e0d\u4f1a\u4eae\u660e\u8eab\u4efd\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u6210\u4e3a\u201c\u7c7b\u53cd\u732a\u201d\n- \u4e0a\u8ff0\u4e24\u70b9\u4e5f\u51b3\u5b9a\u4e8610\u5206\u65f6\u201cn\u4e00\u5b9a\u662f\u53cd\u8d3c\u201d\u4e0d\u6210\u7acb\u4e86\uff0c\u56e0\u4e3a\u6709\u4e86\u5176\u4ed6\u9014\u5f84\u8868\u660e\u8eab\u4efd\n- AOE\u9526\u56ca\u53ef\u80fd\u5bfc\u81f4\u591a\u4e2a\u89d2\u8272\u6b7b\u4ea1\uff0c\u9700\u8981\u8003\u8651\u6478\u724c\u3001\u4e3b\u516c\u5f03\u724c\u7684\u987a\u5e8f\uff0c\u53e6\u5916\uff0c\u6e38\u620f\u7ed3\u675f\u6761\u4ef6\u4e00\u65e6\u8fbe\u6210\uff0c\u6e38\u620f\u8981\u7acb\u523b\u7ed3\u675f\uff0c\u4e0d\u80fd\u7ee7\u7eed\u5224\u5b9aAOE\n- \u4f7f\u7528\u51b3\u6597\u53ef\u80fd\u5bfc\u81f4\u4f7f\u7528\u8005\u6b7b\u4ea1\uff0c\u6b64\u65f6\u5b83\u7684\u56de\u5408\u5fc5\u987b\u7acb\u523b\u7ed3\u675f\n- \u201c\u7c7b\u53cd\u732a\u201d\u53ea\u5728\u4e3b\u516c\u7684\u89c6\u89d2\u624d\u6210\u7acb\uff0c\u5728\u5176\u4ed6\u89d2\u8272\u770b\u6765\uff0c\u5b83\u7684\u8eab\u4efd\u662f\u672a\u77e5\u7684\n\n100pts\uff1a\n\n- \u65e0\u61c8\u53ef\u51fb\u9700\u8981\u9012\u5f52\uff0c\u6765\u5224\u65ad\u6700\u7ec8\u662f\u5426\u751f\u6548\n- \u5224\u5b9a\u65e0\u61c8\u65f6\uff0c\u9700\u8981\u8003\u8651\u65e0\u61c8\u4f7f\u7528\u540e\uff0c\u9526\u56ca\u662f\u5426\u751f\u6548\uff0c\u8fd9\u4e5f\u51b3\u5b9a\u4e86\u4f7f\u7528\u65e0\u61c8\u662f\u732e\u6bb7\u52e4\u8fd8\u662f\u8868\u654c\u610f\n- \u6ce8\u610f\u4f7f\u7528\u65e0\u61c8\u53ef\u51fb\u7684\u987a\u5e8f\n- \u89d2\u8272\u7684\u56de\u5408\u4e2d\u4e0d\u80fd\u51fa\u65e0\u61c8\u53ef\u51fb\n\n\u5b9e\u9645\u4e0a\uff0c\u4ece\u9898\u9762\u6765\u770b\uff0c\u53ea\u6709\u8fd93\u4e2a\u5206\u503c\uff0c\u4e0d\u8fc7\uff0c\u5f53\u4f60\u771f\u6b63\u5199\u7684\u65f6\u5019\uff0c\u4f1a\u7ecf\u5386\u5404\u79cd\u5199\u6302\u3001\u88ab\u5751\u3001\u6253\u8865\u4e01\uff0c\u4e5f\u5c31\u6709\u4e86\u5404\u79cd\u5404\u6837\u7684\u90e8\u5206\u5206\n\nAC\u4ee3\u7801\uff1a\uff08~~\u7801\u91cf\u786e\u5b9e\u5f88\u5927~~\uff09\n\n```cpp\n#include<map>\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint N,M;\nstruct node\n{\n    char id[3];\n    int bl;\n    bool dead;\n    bool zs;\n    bool fs;\n    bool fl;\n    queue<int>card[9];\n    int cnt;\n    int kcnt;\n    int dcnt;\n    int pcnt;\n    int jcnt;\n    bool zg;\n    bool as;\n}nd[16];\nchar str[2];\nqueue<int>q;\nmap<char,int>m;\nmap<int,char>mt;\nint fc;//\u5269\u4f59\u53cd\u8d3c\u6570\u91cf \nint nxt[16];//\u6bcf\u4e2a\u89d2\u8272\u7684\u4e0b\u5bb6 \nbool gameover;\nint search(int x)//\u5bfb\u627e\u89d2\u8272x\u7684\u51b3\u6597\u5bf9\u8c61 \n{\n    if(nd[x].id[0]=='F')\n    {\n        return 1;\n    }\n    for(int i=nxt[x];i!=x;i=nxt[i])\n    {\n        if(nd[x].id[0]=='M'&&(nd[i].fs==1||nd[i].fl==1))\n        {\n            return i;\n        }else if(nd[x].id[0]=='Z'&&nd[i].fs==1)\n        {\n            return i;\n        }\n    }\n    return 0;\n}\nint fcard(int x,bool gover)//\u5bfb\u627e\u89d2\u8272x\u7684\u6700\u5de6\u8fb9\u4e00\u5f20\u53ef\u7528\u624b\u724c \n{\n    int cnt=0;\n    int pla=0x3f3f3f3f;\n    for(int i=1;i<=8;i++)\n    {\n        if(nd[x].card[i].size()&&nd[x].card[i].front()<pla)//\u5982\u679c\u8fd9\u5f20\u6bd4\u4e4b\u524d\u53ef\u7528\u4f4d\u7f6e\u66f4\u9760\u5de6 \n        {\n            if(gover==0&&i==2&&(nd[x].zg==0&&nd[x].as==1))//\u5982\u679c\u6ca1\u6709\u8fde\u5f29,\u4e0d\u80fd\u51fa\u591a\u5f20\u6740 \n            {\n                continue;\n            }else if(gover==0&&(i==3||i==7))//\u56de\u5408\u4e2d\u4e0d\u80fd\u51fa\u95ea/\u65e0\u61c8\u53ef\u51fb \n            {\n                continue;\n            }else if(gover==0&&(i==1&&nd[x].bl==4))//\u8840\u91cf\u6ee1\u65f6,\u4e0d\u80fd\u5403\u6843 \n            {\n                continue;\n            }else if(gover==0&&i==2)//\u89d2\u8272\u51fa\u6740\u80fd\u5426\u627e\u5230\u653b\u51fb\u5bf9\u8c61 \n            {\n                if(nd[x].id[0]=='M')\n                {\n                    if(nd[nxt[x]].fs==0&&nd[nxt[x]].fl==0)\n                    {\n                        continue;\n                    }\n                }else if(nd[x].id[0]=='Z')\n                {\n                    if(nd[nxt[x]].fs==0)\n                    {\n                        continue;\n                    }\n                }else\n                {\n                    if(nd[nxt[x]].id[0]!='M'&&nd[nxt[x]].zs==0)\n                    {\n                        continue;\n                    }\n                }\n            }else if(gover==0&&search(x)==0&&i==4)//\u89d2\u8272\u51fa\u51b3\u6597\u80fd\u5426\u627e\u5230\u51b3\u6597\u5bf9\u8c61 \n            {\n                continue;\n            }\n            pla=nd[x].card[i].front();\n            cnt=i;\n        }\n    }\n    return cnt;//\u5982\u679ccnt==0,\u8868\u793a\u65e0\u724c\u53ef\u51fa \n}\nvoid print()//\u7ed3\u7b97\u8f93\u51fa \n{\n    if(nd[1].dead)\n    {\n        printf(\"FP\\n\");\n    }else\n    {\n        printf(\"MP\\n\");\n    }\n    for(int i=1;i<=N;i++)\n    {\n        if(nd[i].dead)\n        {\n            printf(\"DEAD\\n\");\n        }else\n        {\n            nd[i].zg=1;\n            while(fcard(i,1)!=0)\n            {\n                int cd=fcard(i,1);\n                nd[i].card[cd].pop();\n                printf(\"%c \",mt[cd]);\t\t\t\t\n            }\n            printf(\"\\n\");\n        }\n    }\n}\nvoid get(int x)//\u89d2\u8272x\u6478\u724c \n{\n    int a=q.front();\n    if(q.size()!=1)\n    {\n        q.pop();\n    }\n    nd[x].card[a].push(nd[x].cnt);\n    nd[x].cnt++;\n    if(a==1)\n    {\n        nd[x].pcnt++;\n    }else if(a==2)\n    {\n        nd[x].kcnt++;\n    }else if(a==3)\n    {\n        nd[x].dcnt++;\n    }else if(a==7)\n    {\n        nd[x].jcnt++;\n    }\n    return;\n}\nvoid die(int fr,int x)//\u89d2\u8272fr\u6740\u6b7b\u4e86\u89d2\u8272x \n{\n    nd[x].dead=1;\n    if(nd[x].id[0]=='F')\n    {\n        fc--;\n    }\n    if(fc==0||nd[1].dead==1)\n    {\n        gameover=1;\n        print();\n        return;//\u5982\u679c\u7ed3\u675f\u6761\u4ef6\u8fbe\u6210,\u5fc5\u987b\u7acb\u523b\u7ed3\u675f,\u4e0d\u80fd\u8fdb\u884c\u5956\u60e9 \n    }else\n    {\n        if(nd[x].id[0]=='F')\n        {\n            for(int i=1;i<=3;i++)\n            {\n                get(fr);\n            }\n        }else if(nd[x].id[0]=='Z'&&nd[fr].id[0]=='M')\n        {\n            nd[fr].zg=0;\n            for(int i=1;i<=8;i++)\n            {\n                while(nd[fr].card[i].size())\n                {\n                    nd[fr].card[i].pop();\n                }\n            }\n            nd[fr].kcnt=0;\n            nd[fr].dcnt=0;\n            nd[fr].pcnt=0;\n            nd[fr].jcnt=0;\n        }\n    }\n    for(int i=1;i<=N;i++)\n    {\n        if(nxt[i]==x)\n        {\n            nxt[i]=nxt[x];//\u91cd\u7f6e\u4e0b\u5bb6 \n        }\n    }\n    return;\n}\nvoid def(int x)//\u89d2\u8272x\u8bd5\u56fe\u51fa\u95ea\u6765\u62b5\u6d88\u6740 \n{\n    if(nd[x].dcnt)\n    {\n        nd[x].dcnt--;\n        nd[x].card[3].pop();\n    }else\n    {\n        nd[x].bl--;\n    }\n    return;\n}\nvoid peach(int x)//\u89d2\u8272x\u8bd5\u56fe\u7528\u6843\u6765\u633d\u6551\u81ea\u5df1 \n{\n    nd[x].bl++;\n    if(nd[x].pcnt)\n    {\n        nd[x].pcnt--;\n        nd[x].card[1].pop();\n    }else\n    {\n        nd[x].bl--;\n    }\n    return;\n}\nbool cancl(int fr,int x,bool dep)//\u65e0\u61c8\u53ef\u51fb \n{\n    if(dep==1)\n    {\n        if(nd[x].zs==0&&nd[x].fs==0&&nd[x].id[0]!='M')\n        {\n            return 1;\n        }\n    }\n    bool fl=0;\n    int f=0;\n    for(int i=fr;i!=fr||fl==0;i=nxt[i],fl=1)\n    {\n        if(nd[i].jcnt)\n        {\n            if(nd[x].id[0]=='M'||nd[x].zs==1)\n            {\n                if(dep==0&&nd[i].id[0]=='F')\n                {\n                    nd[i].fs=1;\n                    nd[i].fl=0;\n                    f=i;\n                    nd[i].card[7].pop();\n                    nd[i].jcnt--;\n                    break;\n                }else if(dep==1&&nd[i].id[0]!='F')\n                {\n                    if(nd[i].id[0]=='Z')\n                    {\n                        nd[i].zs=1;\n                        nd[i].fl=0;\n                    }\n                    f=i;\n                    nd[i].card[7].pop();\n                    nd[i].jcnt--;\n                    break;\n                }\n            }else if(nd[x].fs==1)\n            {\n                if(dep==0&&nd[i].id[0]!='F')\n                {\n                    if(nd[i].id[0]=='Z')\n                    {\n                        nd[i].zs=1;\n                        nd[i].fl=0;\n                    }\n                    f=i;\n                    nd[i].card[7].pop();\n                    nd[i].jcnt--;\n                    break;\n                }else if(dep==1&&nd[i].id[0]=='F')\n                {\n                    nd[i].fs=1;\n                    nd[i].fl=0;\n                    f=i;\n                    nd[i].card[7].pop();\n                    nd[i].jcnt--;\n                    break;\n                }\n            }\n        }\n    }\n    if(f==0)\n    {\n        return 1;\n    }else\n    {\n        return cancl(f,x,dep^1)^1;\n    }\n    \n}\nvoid invade(int fr,int x)//fr\u51fa\u4e86\u5357\u86ee,\u73b0\u5224\u5b9a\u5230\u89d2\u8272x \n{\n    if(cancl(fr,x,1))//\u5224\u5b9a\u662f\u5426\u88ab\u65e0\u61c8,\u5176\u4ed6\u9526\u56ca\u4e0e\u6b64\u76f8\u540c \n    {\n        if(nd[x].kcnt)\n        {\n            nd[x].kcnt--;\n            nd[x].card[2].pop();\n        }else\n        {\n            nd[x].bl--;\n            if(nd[fr].zs==0&&nd[fr].fs==0&&nd[x].id[0]=='M')\n            {\n                nd[fr].fl=1;\n            }\n            if(nd[x].bl==0)\n            {\n                peach(x);\n            }\n            if(nd[x].bl==0)\n            {\n                die(fr,x);\n            }\n        }\n    }\n    return;\n}\nvoid shoot(int fr,int x)//\u4e07\u7bad\u9f50\u53d1 \n{\n    if(cancl(fr,x,1))\n    {\n        if(nd[x].dcnt)\n        {\n            nd[x].dcnt--;\n            nd[x].card[3].pop();\n        }else\n        {\n            nd[x].bl--;\n            if(nd[fr].zs==0&&nd[fr].fs==0&&nd[x].id[0]=='M')\n            {\n                nd[fr].fl=1;\n            }\n            if(nd[x].bl==0)\n            {\n                peach(x);\n            }\n            if(nd[x].bl==0)\n            {\n                die(fr,x);\n            }\n        }\n    }\n    return;\n}\nvoid fight(int fr,int x)//\u51b3\u6597 \n{\n    if(nd[fr].id[0]=='F')\n    {\n        nd[fr].fs=1;\n        nd[fr].fl=0;\n    }else if(nd[fr].id[0]=='Z')\n    {\n        nd[fr].zs=1;\n        nd[fr].fl=0;\n    }\n    if(cancl(fr,x,1))\n    {\n        if(nd[fr].id[0]=='M'&&nd[x].id[0]=='Z')\n        {\n            nd[x].bl--;\n            if(nd[x].bl==0)\n            {\n                peach(x);\n            }\n            if(nd[x].bl==0)\n            {\n                die(fr,x);\n            }\n        }else\n        {\n            if(nd[fr].kcnt>=nd[x].kcnt)\n            {\n                nd[x].bl--;\n                nd[fr].kcnt-=nd[x].kcnt;\n                nd[x].kcnt=0;\n                if(nd[x].bl==0)\n                {\n                    peach(x);\n                }\n                if(nd[x].bl==0)\n                {\n                    die(fr,x);\n                }\n                while(nd[x].card[2].size())\n                {\n                    nd[x].card[2].pop();\n                }\n                while(nd[fr].card[2].size()>nd[fr].kcnt)\n                {\n                    nd[fr].card[2].pop();\n                }\n            }else\n            {\n                nd[fr].bl--;\n                nd[x].kcnt-=(nd[fr].kcnt+1);\n                nd[fr].kcnt=0;\n                if(nd[fr].bl==0)\n                {\n                    peach(fr);\n                }\n                if(nd[fr].bl==0)\n                {\n                    die(x,fr);\n                }\n                while(nd[fr].card[2].size())\n                {\n                    nd[fr].card[2].pop();\n                }\n                while(nd[x].card[2].size()>nd[x].kcnt)\n                {\n                    nd[x].card[2].pop();\n                }\n            }\n        }\n    }\n}\nvoid kill(int fr,int x)//\u6740 \n{\n    def(x);\n    if(nd[x].bl==0)\n    {\n        peach(x);\n    }\n    if(nd[x].bl==0)\n    {\n        die(fr,x);\n    }\n    return;\n}\nvoid play()\n{\n    int cnt=1;\n    while(fc&&nd[1].dead==0)\n    {\n        for(int i=1;i<=2;i++)\n        {\n            get(cnt);\n        }\n        while(fcard(cnt,0)!=0)\n        {\n            int cd=fcard(cnt,0);\n            if(cd==1)\n            {\n                nd[cnt].bl++;\n                nd[cnt].card[1].pop();\n                nd[cnt].pcnt--;\n            }else if(cd==2)\n            {\n                nd[cnt].card[2].pop();\n                nd[cnt].kcnt--;\n                kill(cnt,nxt[cnt]);\n                if(nd[cnt].id[0]=='Z')\n                {\n                    nd[cnt].zs=1;\n                    nd[cnt].fl=0;\n                }else if(nd[cnt].id[0]=='F')\n                {\n                    nd[cnt].fs=1;\n                    nd[cnt].fl=0;\n                }\n                nd[cnt].as=1;\n                if(gameover)\n                {\n                    return;\n                }\n            }else if(cd==4)\n            {\n                nd[cnt].card[4].pop();\n                int x=search(cnt);\n                fight(cnt,x);\n                if(gameover)\n                {\n                    return;\n                }\n                if(nd[cnt].dead==1)\n                {\n                    goto A;\n                }\n            }else if(cd==5)\n            {\n                nd[cnt].card[5].pop();\n                for(int i=nxt[cnt];i!=cnt;i=nxt[i])\n                {\n                    invade(cnt,i);\n                    if(gameover)\n                    {\n                        return;\n                    }\n                }\n            }else if(cd==6)\n            {\n                nd[cnt].card[6].pop();\n                for(int i=nxt[cnt];i!=cnt;i=nxt[i])\n                {\n                    shoot(cnt,i);\n                    if(gameover)\n                    {\n                        return;\n                    }\n                }\n            }else if(cd==8)\n            {\n                nd[cnt].card[8].pop();\n                nd[cnt].zg=1;\n            }\n        }\n        nd[cnt].as=0;\n        A:cnt=nxt[cnt];\n    }\n    return;\n}\nint main()\n{\n    scanf(\"%d%d\",&N,&M);\n    m['P']=1;\n    m['K']=2;\n    m['D']=3;\n    m['F']=4;\n    m['N']=5;\n    m['W']=6;\n    m['J']=7;\n    m['Z']=8;\n    mt[1]='P';\n    mt[2]='K';\n    mt[3]='D';\n    mt[4]='F';\n    mt[5]='N';\n    mt[6]='W';\n    mt[7]='J';\n    mt[8]='Z';\n    for(int i=1;i<=N;i++)\n    {\n        scanf(\"%s\",nd[i].id);\n        nd[i].bl=4;\n        nd[i].cnt=5;\n        if(nd[i].id[0]=='F')\n        {\n            fc++;\n        }\n        for(int j=1;j<=4;j++)\n        {\n            scanf(\"%s\",str);\n            nd[i].card[m[str[0]]].push(j);\n            if(str[0]=='K')\n            {\n                nd[i].kcnt++;\n            }else if(str[0]=='D')\n            {\n                nd[i].dcnt++;\n            }else if(str[0]=='P')\n            {\n                nd[i].pcnt++;\n            }else if(str[0]=='J')\n            {\n                nd[i].jcnt++;\n            }\n        }\n    }\n    for(int i=1;i<=M;i++)\n    {\n        scanf(\"%s\",str);\n        q.push(m[str[0]]);\n    }\n    for(int i=1;i<N;i++)\n    {\n        nxt[i]=i+1;\n    }\n    nxt[N]=1;\n    play();\n    return 0;\n}\n\n```",
        "postTime": 1551505816,
        "uid": 158849,
        "name": "renhr2002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    },
    {
        "content": "# \u9898\u89e3:\u5927\u6a21\u62df~~\u3001\u5b57\u7b26\u4e32~~\n\n\u8fd9\u9053\u9898\u6a21\u62df\u5373\u53ef~~\u3001\u5751\u70b9\u8fc7\u591a\uff0c\u4e5f\u4e0d\u77e5\u9053\u8003\u573a\u4e0a\u6709\u6ca1\u6709\u4eba\u80fd\u5199\u51fa\u6765~~\n\n\u76d8\u70b9\u4e00\u4e0b\u5751\u70b9\uff0c\u7a0b\u5e8f\u4e2d\u6709\u4f53\u73b0~~\uff08\u524d\u4eba\u586b\u5751\u5229\u540e\u4eba\uff09~~\n\n### 1. \u6843\u6fd2\u6b7b\u65f6\u5403\u5b8c\u8bb0\u5f97\u56de\u8840,\u4e0d\u8981\u78d5\u5b8c\u6843\u8fd8\u662f0\u8840\u72b6\u6001\n\n### 2. \u7528\u724c\u4e4b\u524d\u5c31\u8981\u6807\u8bb0\u597d\u4e0d\u80fd\u518d\u7528\u4e86\n\n### 3. \u4e3b\u516c\uff08\u732a\uff09\u5f03\u724c\u8981\u5f03\u88c5\u5907\uff08\u732a\u54e5\u8fde\u5f29\uff09\n\n### 4. \u5bf9\u4e8e\u9526\u56ca\u724c\u5148\u7528\u61c8\u518d\u5224\u5b9a\uff0c\u56e0\u4e3a\u51fa\u9526\u56ca\u7684~~\u4eba~~\uff08\u732a\uff09\u662f\u6709\u53ef\u80fd\u65e0\u61c8\u6389\u8fd9\u4e2a\u9526\u56ca\u7684\uff08~~\u8fd9\u4e2a\u662f\u771f\u6ef4\u76ae~~\uff09\n\n### 5.\u6709\u4eba\uff08\u732a\uff09\u6b7b\u4ea1\u7684\u65f6\u5019\u8981\u91cd\u65b0\u66f4\u65b0\u7b2c\u4e00\u76ee\u6807\n\n### 6.\u51fa\u51b3\u6597\u7684\u4eba\uff08\u732a\uff09\u53ef\u80fd\u6b7b\u5728\u81ea\u5df1\u56de\u5408\u91cc\uff0c\u8fd9\u65f6\u5019\u7acb\u5373\u7ec8\u6b62\u4ed6\uff08\u5b83\uff09\u7684\u51fa\u724c\u9636\u6bb5\n\n### 7.~~\uff08\u5751\u7684\u6781\u81f4\uff09~~\u5f53\u724c\u5806\u7684\u6700\u540e\u4e00\u5f20\u724c\u6ca1\u4e86\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u4e00\u76f4\u6478\u6700\u540e\u4e00\u5f20\u724c~~\uff08\u6240\u4ee5\u53eb\u732a\u56fd\u6740\u662f\u5427\uff09~~\n\n##  \u00b7\u5927\u4f6c\u7684\u6837\u4f8b\u6765\u4e00\u6ce2\uff08\u90fd\u662f\u4e3b\u732a\u83b7\u80dc\uff0c\u53cd\u732a\u5168\u90e8\u6b7b\u4ea1\u60c5\u51b5~~\u3010\u4eb2\u6d4b\u3011~~\uff0c\u5efa\u8bae\u8c03\u8bd5\u65f6\u8f93\u51fa\u4e3b\u732a\u4e0e\u5fe0\u732a\u7684\u8840\u91cf\uff09~~\uff08\u90fd\u662f\u5957\u8def\uff09~~:\n\n1. 1\n\n   \t 5 10\n  \t  MP W D F K \n  \t  ZP N N D D \n  \t  FP F W W K \n  \t  ZP K K N D \n  \t  FP K D P W \n  \t  J K W K D N N K J N \n2. 2\n\n  \t  3 4\n  \t  MP J J K N \n  \t  ZP J D K W \n   \t FP P N P K \n   \t J J K W \n\n3. 3\n\n  \t  3 10\n   \t MP W D J W \n   \t ZP J P D N \n  \t  FP N D F F \n  \t  J D N N F J J D K W \n      \n4. 4\n\n   \t 3 1\n   \t MP D N F K\n   \t ZP F W F N\n  \t  FP D N N D\n   \t K\n\n# Talk is cheap, show me the code.\n\n```\n#include<iostream>\n#include<cstdio>\n#define N 5010\nusing namespace std;\nint n,m, L[N],R[N],cnt,/*\u53cc\u5411\u94fe\u8868*/ realID[11],Fpig_alive/*\u53cd\u732a\u6570\u91cf*/,GameOver,NowRound;\nchar kind[N],card_unused[3010]/*\u724c\u5806*/;int top;\ninline char Card(){return top==m?card_unused[top]:card_unused[++top];}\ninline void judge(int &t,int &w,int &p,int &f){\n    kind[++cnt]=Card();L[cnt]=t;\n    if(kind[cnt]=='J')w++; if(kind[cnt]=='P')p++; if(kind[cnt]=='D')f++;\n}\nvoid Sha(int,int);void Fight(int,int);void Nanpig(int);void Wanjian(int);\nstruct Pig{\n    int showingID, head,tail,now,pos, blood, wuxie,peach,flash, first_attack, Lpig,Rpig, dead,weapon,num;\n    void S_card(){//\u65e0\u61c8\u53ef\u51fb\u3001\u6843\u3001\u95ea\u2014\u2014\u7279\u5224\n        judge(tail,wuxie,peach,flash);\n        if(head==0) head=tail=cnt;\n        else R[tail]=cnt,tail=cnt;\n        judge(tail,wuxie,peach,flash),R[tail]=cnt,tail=cnt;\n        judge(tail,wuxie,peach,flash),R[tail]=cnt,tail=cnt;\n    }\n    void Punish(){//\u6e05\u7a7a\u624b\u724c\n        head=tail=now=wuxie=peach=flash=weapon=0;\n    }\n    void CardStage(){//\u6478\u724c\u51fd\u6570\n        judge(tail,wuxie,peach,flash);\n        if(head==0) head=tail=cnt;\n        else R[tail]=cnt,tail=cnt;\n        judge(tail,wuxie,peach,flash),R[tail]=cnt,tail=cnt;\n    }\n    void Use(int x){//\u51fa\u724c\n        if(kind[x]=='J')wuxie--; if(kind[x]=='P')peach--; if(kind[x]=='D')flash--;\n        if(x==head&&x==tail) head=0,tail=0;//\u6838\u5fc3\u64cd\u4f5c:\u91cd\u94f8\u94fe\u8868\n        else if(x==head) head=R[x],L[R[x]]=0;\n        else if(x==tail) tail=L[x],R[L[x]]=0;\n        else L[R[x]]=L[x],R[L[x]]=R[x];\n    }\n    char GetNext(){//\u4e0b\u4e00\u5934\u732a\n        if(!now) return 0;\n        pos=now,now=R[now];\n        return kind[pos];\n    }\n    void Output(){//\u8f93\u51fa\u51fd\u6570\n        if(dead) puts(\"DEAD\");\n        else {\n            while(head!=0){\n                cout<<kind[head];\n                if(head!=tail) printf(\" \");\n                head=R[head];\n            }\n            printf(\"\\n\");\n        }\n    }\n    int find1(){now=head; for(char i;i!='D';i=GetNext()); return pos;}\n    int find2(){now=head; for(char i;i!='P';i=GetNext()); return pos;}\n    int find3(){now=head; for(char i;i!='J';i=GetNext()); return pos;}\n    bool Q_K(){//\u6740\n        now=head;char i;\n        while(i=GetNext())\n            if(i=='K'){ Use(pos);return 1;}\n        return 0;\n    }\n    bool Q_F(){if(flash){ Use(find1());return 1;} return 0;}\n    bool Q_P(){if(peach){ Use(find2());return 1;} return 0;}\n    bool Q_W(){if(wuxie){ Use(find3());return 1;} return 0;}\n    void Round(){//\u56de\u5408\u51fd\u6570\n        CardStage();\n        now=head;char i;bool useKill=0;\n        while((i=GetNext())&&!GameOver){\n            switch(i){//\u51fa\u724c\u6548\u679c\n                case 'D': continue;\n                case 'J': continue;\n                case 'P':if(blood!=4) blood++,Use(pos); continue;\n                case 'K':{\n                    if(first_attack==Rpig&&(!useKill||weapon)){\n                        Use(pos),Sha(num,first_attack),now=head,useKill=1;\n                        if(GameOver) return;\n                    } continue;\n                }\n                case 'F':{\n                    if(!first_attack) continue; Use(pos);\n                    if(realID[num]==3) Fight(num,1);\n                    else Fight(num,first_attack); now=head;\n                    if(GameOver||dead) return;\n                     continue;\n                }\n                case 'N':Use(pos),Nanpig(num),now=head;if(GameOver) return; continue;\n                case 'W':Use(pos),Wanjian(num),now=head;if(GameOver) return; continue;\n                case 'Z':Use(pos),weapon=1,now=head; continue;\n            }\n        }\n    }\n}pig[11];\nvoid Update(int x){//\u66f4\u65b0\u6001\u5ea6\n    int i=pig[x].Rpig;\n    if(realID[x]==1){\n        while(i!=x){\n            if(pig[i].showingID==1||pig[i].showingID==3){\n                pig[x].first_attack=i;\n                return;\n            }\n            i=pig[i].Rpig;\n        }\n        pig[x].first_attack=0;\n    }\n    else if(realID[x]==2){\n        while(i!=x){\n            if(pig[i].showingID==3){\n                pig[x].first_attack=i;\n                return;\n            }\n            i=pig[i].Rpig;\n        }\n        pig[x].first_attack=0;\n    }\n    else{\n        while(i!=x){\n            if(pig[i].showingID==2||realID[i]==1){\n                pig[x].first_attack=i;\n                return;\n            }\n            i=pig[i].Rpig;\n        }\n        pig[x].first_attack=0;\n    }\n}\nvoid Update_all(){//\u91cd\u89c6\u6bcf\u5934\u732a\n    int r=pig[1].Rpig;\n    Update(1);\n    while(r!=1) Update(r),r=pig[r].Rpig;\n}\nvoid Kill(int x,int y){//\u51fb\u6740\n    pig[y].dead=true;\n    if(realID[y]==1){GameOver=true;return;}\n    if(realID[y]==3){\n        Fpig_alive--;\n        if(!Fpig_alive){GameOver=true;return;}\n        pig[x].S_card();\n    }\n    if(realID[y]==2&&realID[x]==1) pig[x].Punish();\n    int l=pig[y].Lpig,r=pig[y].Rpig;//\u66f4\u65b0\u94fe\u8868\n    pig[l].Rpig=r,pig[r].Lpig=l;\n    Update_all();\n}\nvoid Hurt(int x,int y){//\u6389\u8840\u3001\u52a0\u8840\n    pig[y].blood--;\n    if(!pig[y].blood){\n        if(pig[y].Q_P()) pig[y].blood++;\n        else Kill(x,y);\n    }\n}\nvoid Sha(int x,int y){//\u6740\n    if(realID[x]!=1&&pig[x].showingID<2){\n        if(realID[y]==3) pig[x].showingID=2;\n        else pig[x].showingID=3;\n        Update_all();\n    }\n    if(pig[y].Q_F()) return;\n    Hurt(x,y);\n}\nbool WX_cycling(int x,bool vis){//\u6838\u5fc3\u64cd\u4f5c:\u65e0\u61c8\u5faa\u73af\n    int viss=vis,pos=x,i=x;\n    if(vis==(realID[i]==3)){\n        if(pig[i].Q_W()){\n            pos=i,vis^=1;\n            if(pig[i].showingID<=2) pig[i].showingID=3-vis,Update_all();\n        }\n    }\n    for(i=pig[i].Rpig;i!=pos;i=pig[i].Rpig)if(vis==(realID[i]==3)){\n            if(pig[i].Q_W()){\n                pos=i,vis^=1;\n                if(pig[i].showingID<=2) pig[i].showingID=3-vis,Update_all();\n            }\n        }\n    return viss!=vis;\n}\nvoid Fight(int x,int y){//\u51b3\u6597\n    if(realID[x]!=1&&pig[x].showingID<2){\n        if(realID[y]==3) pig[x].showingID=2;\n        else pig[x].showingID=3;\n        Update_all();\n    }\n    if(realID[y]==1||pig[y].showingID>=2){\n        if(realID[y]==1||pig[y].showingID==2){\n            if(WX_cycling(x,0)) return;\n        }\n        else {if(WX_cycling(x,1)) return;}\n    }\n    if(realID[x]==1&&realID[y]==2) Hurt(x,y);\n    else {\n        while(1){\n            if(!pig[y].Q_K()) {Hurt(x,y);return;}\n            if(!pig[x].Q_K()) {Hurt(y,x);return;}\n        }\n    }\n}\nvoid Nanpig(int x){//\u5357\u732a\u5165\u4fb5\n    int i=pig[x].Rpig;\n    while(i!=x){\n        if(realID[i]==1||pig[i].showingID>=2){\n            if(realID[i]==1||pig[i].showingID==2){\n                if(WX_cycling(x,0)){i=pig[i].Rpig; continue;}\n            }\n            else {\n                if(WX_cycling(x,1)){i=pig[i].Rpig; continue;}\n            }\n        }\n        if(!pig[i].Q_K()){\n            Hurt(x,i);\n            if(GameOver) return;\n            if(i==1&&!pig[x].showingID) pig[x].showingID=1,Update_all();\n        }\n        i=pig[i].Rpig;\n    }\n}\nvoid Wanjian(int x){//\u4e07\u7bad\u9f50\u53d1\n    int i=pig[x].Rpig;\n    while(i!=x){\n        if(realID[i]==1||pig[i].showingID>=2){\n            if(realID[i]==1||pig[i].showingID==2){\n                if(WX_cycling(x,0)){i=pig[i].Rpig; continue;}\n            }\n            else {\n                if(WX_cycling(x,1)){i=pig[i].Rpig; continue;}\n            }\n        }\n        if(!pig[i].Q_F()){\n            Hurt(x,i);\n            if(GameOver) return;\n            if(i==1&&!pig[x].showingID) pig[x].showingID=1,Update_all();\n        }\n        i=pig[i].Rpig;\n    }\n}\nvoid addcard(int &pos){char s[10];scanf(\"%s\",s),card_unused[++pos]=s[0];}//\u6dfb\u724c\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++) pig[i].Rpig=i+1,pig[i].Lpig=i-1;//\u53cc\u5411\u94fe\u8868\n    pig[n].Rpig=1,pig[1].Lpig=n;\n    int pos=0;\n    for(int i=1;i<=n;i++){//\u8bfb\u724c\n        char s[10];scanf(\"%s\",s);\n        if(s[0]=='M') realID[i]=1;\n        else if(s[0]=='Z') realID[i]=2;\n        else if(s[0]=='F') realID[i]=3,Fpig_alive++;\n        for(int i=1;i<=4;i++) addcard(pos);\n    }\n    for(int i=1;i<=m;i++) addcard(pos);\n    m+=4*n;\n    for(int i=1;i<=n;i++){\n        pig[i].CardStage(),pig[i].CardStage();//\u6478\u724c\n        pig[i].num=i,pig[i].blood=4;//\u521d\u59cb\u5316\n    }\n    Update_all();\n    for(int i=1;!GameOver;i=pig[i].Rpig) NowRound=i,pig[i].Round();//\u56de\u5408\n    if(pig[1].dead) puts(\"FP\");\n    else puts(\"MP\");\n    for(int i=1;i<=n;i++) pig[i].Output();//\u51fa\u724c\n}\n```",
        "postTime": 1539563062,
        "uid": 90615,
        "name": "opened",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2482 \u3010[SDOI2010]\u732a\u56fd\u6740\u3011"
    }
]