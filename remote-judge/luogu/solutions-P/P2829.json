[
    {
        "content": "\u5148\u5bf9\u8d77\u70b9\u548c\u7ec8\u70b9\u5206\u522b\u8dd1\u4e00\u8fb9SPFA,\u90a3\u4e48\u6b21\u77ed\u8def\u4e00\u5b9a\u662f:\n\n\u67d0\u4e00\u6761\u8fb9\u7684w + \u8d77\u70b9\u5230\u8be5\u8fb9\u4e00\u7aef\u70b9\u7684\u6700\u77ed\u8def + \u7ec8\u70b9\u5230\u8be5\u8fb9\u53e6\u4e00\u7aef\u70b9\u7684\u6700\u77ed\u8def\n\n(\u6ce8\u610f\u5230\u53cd\u590d\u7ecf\u8fc7\u7684\u8fb9\u5fc5\u7136\u53ea\u6709\u4e00\u6761\u5e76\u4e14\u53cd\u590d\u8fc7\u4e0d\u8d85\u8fc73\u6b21,\u5426\u5219\u7edd\u4e0d\u662f\u6b21\u77ed\u8def,\u90a3\u4e48\u6211\u4eec\u5047\u8bbe\u5168\u56fe\u6700\u77ed\u8def\u662fdist[S][i]+cost[i][j]+dsit[j][T],\u53cd\u590d\u7ecf\u8fc7\u8fb9\u7684\u60c5\u51b5\u53ef\u4ee5\u5904\u7406\u6210:dist[S][j]+cost[i][j]+dist[i][T])\n\n\u56e0\u6b64\u518d\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9,\u8ba1\u7b97\u6b21\u77ed\u8def\u5e76\u628a\u4e0e\u5168\u56fe\u6700\u77ed\u8def\u957f\u5ea6\u76f8\u7b49\u7684\u7b5b\u6389\u5373\u53ef\n\n**\u6bd4\u8f83\u5751\u7684\u4e00\u70b9**:\u9898\u76ee\u6709\u91cd\u8fb9,\u4e0d\u80fd\u7b80\u5355\u7edf\u8ba1\u8282\u70b9\u7684\u51fa\u73b0\u6b21\u6570\u6765\u5224\u65ad\u662f\u5426\u5408\u6cd5(>=k),\u5177\u4f53\u89c1\u4ee3\u7801:\n\n\n---\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int N=5002,M=100002,INF=1e9+7;\nint n,m,k,cnt,u,v,w,mindist,secdist=INF;//mindist\u6700\u77ed\u8def,secdist\u6b21\u77ed\u8def\nint last[N],t[N],dist[2][N];//t\u662f\u6bcf\u4e2a\u70b9\u7684\u51fa\u8fb9\u6570\nbool used[N],vis[N];\nstruct edg{\n    int to,next,w;\n}edge[2*M];//\u90bb\u63a5\u8868\nvoid insert(int u,int v,int w)//\u8fde\u8fb9\n{\n    edge[++cnt]=(edg){v,last[u],w};last[u]=cnt;\n    edge[++cnt]=(edg){u,last[v],w};last[v]=cnt;\n}\nvoid SPFA(int S,int op)//op=0\u662f\u8d77\u70b9\u7684\u53c2\u6570,op=1\u662f\u7ec8\u70b9\u7684\u53c2\u6570\n{\n    for(int i=1;i<=n;i++)dist[op][i]=INF,used[i]=0;//\u521d\u59cb\u5316\n    queue<int> Q;\n    Q.push(S);\n    used[S]=1;\n    dist[op][S]=0;\n    while(!Q.empty())\n    {\n        int now=Q.front();Q.pop();\n        used[now]=0;\n        for(int i=last[now];i;i=edge[i].next)\n        {\n            int v=edge[i].to;\n            if(dist[op][now]+edge[i].w<dist[op][v]&&t[v]>=k)//\u7b5b\u6389\u4e0d\u5408\u6cd5\u7684(\u5373\u5c0f\u4e8ek\u7684)\n            {\n                dist[op][v]=dist[op][now]+edge[i].w;\n                if(!used[v]){Q.push(v);used[v]=1;}\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        insert(u,v,w);\n    }\n    for(int i=2;i<n;i++)//\u5168\u56fe\u626b\u4e00\u904d\u5904\u7406\u6bcf\u4e2a\u70b9\u7684t\u503c\n    {\n        memset(vis,0,sizeof(vis));\n        for(int j=last[i];j;j=edge[j].next)\n        {\n            int v=edge[j].to;\n            if(!vis[v]){vis[v]=1;t[i]++;}\n        }\n    }\n    t[1]=INF;t[n]=INF;\n    SPFA(1,0);\n    SPFA(n,1);\n    mindist=dist[0][n];\n    for(int i=1;i<=n;i++)\n    {\n        if(t[i]<k)continue;\n        for(int j=last[i];j;j=edge[j].next)//\u679a\u4e3e\u6bcf\u6761\u8fb9\n        {\n            int v=edge[j].to;\n            int len=dist[0][i]+edge[j].w+dist[1][v];\n            if(len>mindist&&t[v]>=k)secdist=min(secdist,len);\n        }\n    }\n    printf(\"%d\\n\",secdist>=INF?-1:secdist);\n    return 0;\n}\n```",
        "postTime": 1510215406,
        "uid": 59646,
        "name": "\u4e2d\u56fd\u98de\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "\u4e25\u683c\u6b21\u77ed\u8def\uff0c\u53ea\u4e0d\u8fc7\u6bd4[\u667a\uff08\u5212\u6389   \u8def\uff09\u969c](https://www.luogu.com.cn/problem/P2865)\u591a\u4e86\u4e00\u4e2a\u5224\u65ad\u8fde\u8fb9\u7684\u6761\u6570\u4ee5\u53ca\u81ea\u73af\u7b49\u95ee\u9898\u3002\n\n\u5e94\u5bf9\u6b21\u77ed\u8def\u6211\u5f00\u4e86\u4e24\u4e2adis\uff0c\u5177\u4f53\u89e3\u51b3\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u4ee4dis[1]\u4e3a\u6700\u77ed\u8def \uff0c\u7b2cdis[2]\u4e3a\u6b21\u77ed\u8def\n\n1.\u5047\u5982 $dis[1][v] > dis[1][u] + map[i].w$ \u5373\u8bf4\u660e\u5f53\u524d\u7684\u6700\u77ed\u8def\u88ab\u66f4\u65b0 \uff0c\u6240\u4ee5\u6b21\u77ed\u8def\u5e94\u88ab\u66f4\u65b0\u4e3a\u4e4b\u524d\u7684\u6700\u77ed\u8def\uff1b\n\n2. \u5047\u5982 $dis[2][v] > dis[1][u] + map[i].w$  \u5373\u8bf4\u660e\u5f53\u524d\u7684\u6700\u77ed\u8def\u65e0\u987b\u66f4\u65b0\uff0c\u4f46\u6b21\u77ed\u8def\u53ef\u4ee5\u4ece\u4e4b\u524d\u7684\u6700\u77ed\u8def\u66f4\u65b0\uff1b\n\n3. \u5047\u5982 $dis[2][v] > dis[2][u] + map[i].w$ \u5373\u8bf4\u660e\u5f53\u524d\u7684\u6b21\u77ed\u8def\u53ea\u80fd\u4ece\u4e4b\u524d\u7684\u6b21\u77ed\u8def\u66f4\u65b0\uff1b\n\n\u53e6\u5916\u8fd8\u8981\u5224\u65ad\u81ea\u73af\u7b49\u95ee\u9898\uff0c\u4fbf\u53ef\u4ee5\u8fc7\u4e86\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define INF 0x3f3f3f3f\n#define N 5055\n#define int long long\nusing namespace std;\nint u ,v ,w ,n ,m ,head[N * 8] ,tot ,k;\nint dis[3][N * 8] ,q[N * N] ,col[N * 8] ,link[N * 8];\nbool vis[N * 8] ,yeah[N][N] , dog[N][N] ,yet;\nstruct edge\n{\n    int next ,to ,w;\n} map[N * N];\nvoid add(int u ,int v ,int w)\n{\n    map[++tot].next = head[u];\n    head[u] = tot;\n    map[tot].to = v;\n    map[tot].w = w;  \n}\nvoid SPFA(int st)\n{\n    for(int i = 2 ; i <= n ; ++ i)\n    dis[1][i] = dis[2][i] = INF ,vis[i] = false;\n    int l = 1 , r = 0;\n    q[++r] = st ,dis[2][st] = INF ,vis[st] = true;\n    while(l <= r){\n        int u = q[l++];\n        vis[u] = false;\n        for(int i = head[u] ; i ; i = map[i].next)\n        if(link[map[i].to] >= k || map[i].to == n || map[i].to == 1){\n            yet = false;\n            v = map[i].to;\n\t\t\tif(dis[1][v] > dis[1][u] + map[i].w) \n                dis[2][v] = dis[1][v] ,dis[1][v] = dis[1][u] + map[i].w ,yet=true;\n            if(dis[2][v] > dis[1][u] + map[i].w && dis[1][v] != dis[1][u] + map[i].w)\n                dis[2][v] = dis[1][u] + map[i].w ,yet = true;\n            if(dis[2][v] > dis[2][u] + map[i].w) \n            dis[2][v] = dis[2][u] + map[i].w ,yet = true;\n            if(!vis[v] && yet) q[++r] = v ,vis[v] = true;\n        }\n    }\n}\nsigned main()\n{\n    scanf(\"%lld%lld%lld\" ,&n ,&m ,&k);\n    for(int i = 1 ; i <= m ; ++ i){\n        scanf(\"%lld%lld%lld\" ,&u ,&v ,&w);\n        add(u ,v ,w) ,add(v ,u ,w) ;\n        if(dog[u][v] == true || dog[v][u] == true) --link[u] ,--link[v];//dog\u6570\u7ec4\u7528\u6765\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u5165\u5ea6\n        ++link[u] ,++link[v];\n        dog[u][v] = dog[v][u] = true;\n    }\n    SPFA(1);\n    if(dis[2][n] == INF)\n    printf(\"-1\");\n    else printf(\"%lld\" ,dis[2][n]);\n    return 0;\n}\n```\n\u5728\u4e0b\u7801\u98ce\u4e0d\u662f\u5f88\u597d\uff0c\u6709\u4ec0\u4e48\u5199\u7684\u4e0d\u8be6\u7ec6\u7684\u53ef\u4ee5\u6307\u51fa\u6216\u79c1\u4fe1\u6211\uff08\u9003",
        "postTime": 1575289517,
        "uid": 44505,
        "name": "lemonfor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "spfa\uff0c\u5982\u679cx\u70b9\u7684\u6700\u77ed\u8def\u80fd\u66f4\u65b0y\u70b9\u6700\u77ed\u8def\uff0c\u90a3\u4e48x\u70b9\u6700\u77ed\u8def\u66f4\u65b0y\u70b9\u6700\u77ed\u8def\uff0cx\u70b9\u6b21\u77ed\u8def \u4f01\u56fe\u66f4\u65b0y\u70b9\u6700\u77ed\u8def\uff0c\u5982\u679cx\u70b9\u7684\u6700\u77ed\u8def\u4e0d\u80fd\u66f4\u65b0y\u70b9\u6700\u77ed\u8def\uff0c\u90a3\u4e48\u5c31\u7528x\u70b9\u7684\u6700\u77ed\u8def\u66f4\u65b0y\u70b9\u6b21\u77ed\u8def\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\u3002\u8fd9\u53e5\u8bdd\u600e\u4e48\u597d\u50cf\u54ea\u91cc\u542c\u8fc7\u554a\u3002\u3002\u3002\uff09\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct Edge{\n    int from,to,dist;\n    Edge(int u,int v,int d):from(u),to(v),dist(d){}\n};\nconst int INF=1e9;\nint inq[5002],d[5002],S[5002],n,m,hh[5002],hhh[5002],uu,k;\nvector<int>g[5002];\nvector<Edge>edges;\nvoid spfa(int s){\n    queue<int>q;\n    for (int i=1;i<=n;i++)d[i]=S[i]=INF;\n    d[s]=0;\n    inq[s]=1;\n    q.push(s);\n    while(!q.empty())\n    {\n        int u=q.front();q.pop();\n        inq[u]=0;\n        for (int i=0;i<g[u].size();i++)\n        {\n            Edge& e=edges[g[u][i]];if (hh[e.to])continue;\n            if (d[e.to]>=d[u]+e.dist)\n            {\n                S[e.to]=min(S[e.to],S[u]+e.dist);\n                d[e.to]=d[u]+e.dist;\n                if (!inq[e.to]){q.push(e.to);inq[e.to]=1;}\n            }\n            else if (S[e.to]>d[u]+e.dist)\n            {S[e.to]=d[u]+e.dist;if (!inq[e.to]){q.push(e.to);inq[e.to]=1;}}\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for (int i=0;i<m;i++)\n    {\n        int a,b,c;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        edges.push_back(Edge(a,b,c));g[a].push_back(edges.size()-1);\n        edges.push_back(Edge(b,a,c));g[b].push_back(edges.size()-1);\n    }\n    for (int i=2;i<n;i++)\n    {\n        memset(hhh,0,sizeof(hhh));hhh[i]=1;uu=0;\n        for (int j=0;j<g[i].size();j++)\n        {Edge& e=edges[g[i][j]];if (!hhh[e.to]){uu++;hhh[e.to]=1;}}\n        if (uu<k)hh[i]=1;\n    }\n    spfa(1);\n    if (S[n]<1e9)printf(\"%d\",S[n]);else printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1473856149,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u6c42\u627e\u5230\u4e25\u683c\u6b21\u5c0f\u7684\u8def\u5f84\uff0c\u521a\u5f00\u59cb\u6211\u60f3\u7528dijkstra\uff0c\u4f46\u662f\u6211\u53d1\u73b0dijkstra\u9700\u8981\u7ef4\u62a4\u7684\u987a\u5e8f\u662f\u4e0d\u80fd\u4fdd\u8bc1\u6b63\u786e\u6027\u7684\u3002\n\ndijkstra\u672c\u8d28\u662f\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4f46\u662f\u663e\u7136\u8fd9\u9053\u9898\u76ee\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u503c\uff1a\u6700\u5c0f\u503c\u548c\u6b21\u5c0f\u503c\uff0c\u5bf9\u6b64\uff0c\u4f60\u65e0\u6cd5\u5b9a\u4e49\u4e00\u4e2a\u5148\u540e\u987a\u5e8f\u4f7f\u5b83\u80fd\u591f\u6ee1\u8db3\u8d2a\u5fc3\u3002\n\n\u672c\u9898\u53ef\u4ee5\u91cd\u590d\u8d70\u8fb9\uff0c\u53c8\u4e0d\u80fd\u7528dijkstra\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86SPFA\u3002\n\n## \u5177\u4f53\u64cd\u4f5c\uff1a\n\n- \u5f53\u524d\u70b9 \u6700\u77ed\u8def \u66f4\u65b0\u76ee\u6807\u70b9 \u6700\u77ed\u8def\u548c\u6b21\u77ed\u8def\u3002\n\n- \u5f53\u524d\u70b9 \u6b21\u77ed\u8def \u66f4\u65b0\u76ee\u6807\u70b9 \u6b21\u77ed\u8def\u3002\n\n\u5176\u4ed6\u7684\u5c31\u662fSPFA\u7684\u64cd\u4f5c\uff0c\u5f53\u76ee\u6807\u70b9\u88ab\u5f53\u524d\u70b9\u66f4\u65b0\u540e\u5c31\u52a0\u5165\u961f\u5217\uff0c\u7136\u540e\u63a5\u7740\u8dd1\u3002\n\n## \u6ce8\u610f\u4e8b\u9879\uff1a\n\n- \u672c\u9898\u6709\u91cd\u8fb9\uff0c\u81ea\u73af\u7b49\u5751\u70b9\uff0c\u6240\u4ee5\u4f60\u8981\u624b\u52a8\u5904\u7406\u5ea6\u6570\uff0c\u4e0d\u80fd\u52a0\u8fb9\u65f6\u5c31\u64cd\u4f5c\u3002\uff08\u6211\u88ab\u5751\u4e867\u904d\u63d0\u4ea4\u545c\u545c\uff09\n\n- \u8981\u6c42\u4e3a\u4e25\u683c\u6700\u77ed\u8def\u3002\n\n## \u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\nstruct road\n{\n    int to,val;\n};\nqueue<int>que;\nvector<road>side[5010];\nbool used[5010];\nint minn[5010],val[5010],du[5010],vis[5010];\ninline void read(int &x)\n{\n\tx=0;char c=getchar();\n\tfor(;c>'9'||c<'0';)c=getchar();\n\tfor(;c<='9'&&c>='0';)\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n}\nint main()\n{\n    int n,m,k,a,b,c;\n    read(n);read(m);read(k);\n    for(int i=1;i<=m;++i)\n    {\n        read(a);read(b);read(c);\n        if(a!=b)\n        {\n\t\t\tside[a].push_back((road){b,c});\n        \tside[b].push_back((road){a,c});\n\t\t}\n\t\telse side[a].push_back((road){b,c});\n    }\n    for(int i=2;i<n;++i)           //\u5904\u7406\u5ea6\u6570\n    for(int j=0;j<side[i].size();++j)\n    {\n    \tint to=side[i][j].to;\n    \tif(vis[to]==i)continue;\n    \tvis[to]=i;++du[i];\n\t}\n\tdu[1]=du[n]=999999;\n    memset(minn,0x3f,sizeof(minn));\n    memset(val,0x3f,sizeof(val));\n    minn[1]=0;val[1]=999999990;\n    que.push(1);\n    while(!que.empty())\n    {\n        int x=que.front();que.pop();used[x]=0;\n        if(du[x]<k)continue;\n        for(int i=0;i<side[x].size();++i)\n        {\n            int to=side[x][i].to;\n            int cos=side[x][i].val;\n            //\u5404\u79cd\u66f4\u65b0\n            if(val[x]+cos<val[to]&&val[x]+cos!=minn[to])\n            {\n                val[to]=val[x]+cos;\n                if(!used[to])\n                {\n                    que.push(to);\n                    used[to]=1;\n                }\n            }\n            if(minn[x]+cos<minn[to])\n            {\n                val[to]=min(val[to],minn[to]);\n                minn[to]=minn[x]+cos;\n                if(!used[to])\n                {\n                    used[to]=1;\n                    que.push(to);\n                }\n            }\n            else if(minn[x]+cos!=minn[to])\n            {\n                if(val[to]>minn[x]+cos)\n                {\n                    val[to]=minn[x]+cos;\n                    if(!used[to])\n                    {\n                        used[to]=1;\n                        que.push(to);\n                    }\n                }\n            }\n        }\n    }\n    if(val[n]>=1000000000)cout<<\"-1\";\n\telse cout<<val[n];\n}\n```",
        "postTime": 1571916166,
        "uid": 89785,
        "name": "\u7a7a\u306e\u8ecc\u8de1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "\u4e00\u9053\u6a21\u677f\u7684\u6b21\u77ed\u8def\n\n\u8bbe $dis[x],dist[x]$ \u5206\u522b\u4e3a\u70b9 $1$ \u5230 $x$ \u7684\u6700\u77ed\u8def\u548c\u6b21\u77ed\u8def\u957f\u5ea6\n\n\u6211\u4eec\u53ea\u9700\u5728\u8dd1\u6700\u77ed\u8def\u65f6\uff0c\u987a\u5e26\u66f4\u65b0\u4e00\u4e0b\u6b21\u77ed\u8def  \n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u7ecf\u8fc7\u591a\u6b21\uff0c\u6211\u4eec\u53ea\u80fd\u4f7f\u7528 SPFA\n\n\u5bf9\u4e8e\u6bcf\u6761\u8fb9 $[x,y]$\uff0c\u8003\u8651 $dist[y]$ \u7684\u8f6c\u79fb\uff1a\n\n1. \u6700\u65e0\u8111\u7684\u4e00\u79cd\uff0c$dist[y]=dist[x]+w(x,y)$\uff0c\u5176\u4e2d $w(x,y)$ \u4e3a\u5f53\u524d\u8fb9\u7684\u957f\u5ea6\n2. \u5728\u6700\u77ed\u8def\u4e2d\uff0c\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\u540e\uff0c\u6ee1\u8db3\u5f53\u524d\u7684 $dis[y]$ \u5c0f\u4e8e\u677e\u5f1b\u524d\u7684 $dis[y]$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u677e\u5f1b\u524d\u7684 $dis[y]$ \u53bb\u66f4\u65b0 $dist[y]$\n3. \u5982\u679c\uff0c$dis[y]<dis[x]+w(x,y)$\uff0c\u8bf4\u660e $dis[x]+w(x,y)$ \u662f\u4e00\u6761\u6b21\u77ed\u8def\uff0c\u6240\u4ee5 $dist[y]=min(dist[y],dis[x]+w(x,y))$\u3002\u6ce8\u610f\uff1a\u8fd9\u91cc\u66f4\u65b0\u7684\u65f6\u95f4\u662f\u5728\u677e\u5f1b\u64cd\u4f5c\u4e4b\u540e\n\n\u5173\u952e\u4ee3\u7801\n\n```cpp\nfor(int i=0;i<e[x].size();++i)\n{\n\tint y=e[x][i].v;\n\tif(d[y]<k && y>1 && y<n)continue;\n\tint tmp=dis[x]+e[x][i].len;\n\tif(dis[y]>tmp) // \u677e\u5f1b\n\t{\n\t\tdist[y]=dis[y]; // \u7528\u8001\u7684 dis[y] \u66f4\u65b0 dist[y]\n\t\tdis[y]=tmp;\n\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t}\n\telse if(dist[y]>tmp && tmp!=dis[y]) // \u5982\u679c dis[x]+e[x][i].len \u662f\u4e00\u6761\u6b21\u77ed\u8def\n\t{\n\t\tdist[y]=tmp;\n\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t}\n\tif(dist[y]>dist[x]+e[x][i].len)\n\t{\n\t\tdist[y]=dist[x]+e[x][i].len;\n\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t}\n}\n```\n\n\u8fd9\u91cc\u8bf4\u4e00\u4e0b\uff0c\u9898\u76ee\u4e2d\u63d0\u5230\u7684\uff1a\u4e00\u4e2a\u70b9\u6240\u76f4\u63a5\u8fde\u63a5\u7684\u5730\u65b9\u6570\u91cf  \n\u8fd9\u91cc\u7684\u6570\u91cf\u5e76\u4e0d\u7b49\u4e8e\u8fd9\u4e2a\u8282\u70b9\u7684\u5ea6\u6570\uff08\u8fde\u8fb9\u6570\uff09\uff0c\u56e0\u4e3a\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u53ef\u80fd\u6709\u591a\u6761\u8fb9\u3002\u8fd9\u624d\u662f\u6b63\u786e\u7684\u6253\u5f00\u65b9\u5f0f\uff1a  \n```cpp\nfor(int x=1;x<=n;++x)\n{\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i].v;\n\t\tif(!vis[y])++d[x];\n\t\tvis[y]=1;\n\t}\n\tmemset(vis,0,sizeof(vis));\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int Maxn=10010,inf=0x3f3f3f3f;\nstruct edge{\n\tint v,len;\n\tedge(int x,int y)\n\t{\n\t\tv=x,len=y;\n\t}\n};\nint dis[Maxn],dist[Maxn],d[Maxn];\nbool vis[Maxn];\nint n,m,k;\nvector <edge> e[Maxn];\nvoid spfa()\n{\n\tfill(dis,dis+2+n,inf);\n\tfill(dist,dist+2+n,inf);\n\tqueue <int> q;\n\tq.push(1),vis[1]=1,dis[1]=0;\n\twhile(q.size())\n\t{\n\t\tint x=q.front();\n\t\tvis[x]=0;\n\t\tq.pop();\n\t\tfor(int i=0;i<e[x].size();++i)\n\t\t{\n\t\t\tint y=e[x][i].v;\n\t\t\tif(d[y]<k && y>1 && y<n)continue;\n\t\t\tint tmp=dis[x]+e[x][i].len;\n\t\t\tif(dis[y]>tmp)\n\t\t\t{\n\t\t\t\tdist[y]=dis[y];\n\t\t\t\tdis[y]=tmp;\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t\t\t}\n\t\t\telse if(dist[y]>tmp && tmp!=dis[y])\n\t\t\t{\n\t\t\t\tdist[y]=tmp;\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t\t\t}\n\t\t\tif(dist[y]>dist[x]+e[x][i].len)\n\t\t\t{\n\t\t\t\tdist[y]=dist[x]+e[x][i].len;\n\t\t\t\tif(!vis[y])vis[y]=1,q.push(y);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x,y,c;\n\t\tscanf(\"%d%d%d\",&x,&y,&c);\n\t\te[x].push_back(edge(y,c));\n\t\te[y].push_back(edge(x,c));\n\t}\n\tfor(int x=1;x<=n;++x)\n\t{\n\t\tfor(int i=0;i<e[x].size();++i)\n\t\t{\n\t\t\tint y=e[x][i].v;\n\t\t\tif(!vis[y])++d[x];\n\t\t\tvis[y]=1;\n\t\t}\n\t\tmemset(vis,0,sizeof(vis));\n\t}\n\tspfa();\n\tif(dist[n]==inf)puts(\"-1\");\n\telse printf(\"%d\\n\",dist[n]);\n\treturn 0;\n}\n```",
        "postTime": 1587440516,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u9053\u6807\u51c6\u7684\u4e25\u683c\u6b21\u77ed\u8def\u95ee\u9898\u3002\n\u672c\u9898\u89e3\u4e0d\u7528\u5224\u65ad\u81ea\u73af\u95ee\u9898\n\n##### \u90a3\u4e25\u683c\u6b21\u77ed\u8def\u8be5\u600e\u4e48\u505a\u5462\uff0c\u6211\u7528\u7684\u662f SPFA \u6cd5\uff0c\u7528\u4e862\u4e2adp\u6570\u7ec4\uff0c\u5206\u522b\u7528\u4e8e\u8bb0\u5f55\u4ece1\u70b9\u5230\u73b0\u5728\u70b9\u7684\u6700\u77ed\u8def\u548c\u4e25\u683c\u6b21\u77ed\u8def\u3002\n\u63a5\u4e0b\u6765\u8bf4\u4e00\u4e0b\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff08\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u53f7\u5982\u4ee3\u7801\u4e2d\uff09\uff1a\n\n1. \u5982\u679c1\u5230u\u7684\u6700\u77ed\u8def\u52a0u\u5230v\u7684\u957f\u5ea6\u6bd4\u539f\u672c1\u5230v\u6700\u77ed\u8def\u77ed\uff0c\u5219\u5c061\u5230v\u6b21\u77ed\u8def\u66f4\u65b0\u4e3a\u539f\u672c1\u5230v\u6700\u77ed\u8def\uff0c\u628a1\u5230v\u6700\u77ed\u8def\u66f4\u65b0\u4e3a1\u5230u\u6700\u77ed\u8def\u52a0u\u5230v\u8ddd\u79bb\u3002\n2. \u5982\u679c1\u5230u\u7684\u6700\u77ed\u8def\u52a0u\u5230v\u7684\u957f\u5ea6\u6bd4\u539f\u672c1\u5230v\u6700\u77ed\u8def\u957f\uff0c\u800c1\u5230u\u7684\u6700\u77ed\u8def\u52a0u\u5230v\u7684\u957f\u5ea6\u6bd4\u539f\u672c1\u5230v\u6b21\u77ed\u8def\u77ed\uff0c\u5219\u5c061\u5230v\u6b21\u77ed\u8def\u66f4\u65b0\u4e3a1\u5230u\u6700\u77ed\u8def\u52a0u\u5230v\u8ddd\u79bb\u3002\n3. \u5982\u679c1\u5230u\u7684\u6b21\u77ed\u8def\u52a0u\u5230v\u7684\u957f\u5ea6\u6bd4\u539f\u672c1\u5230v\u6b21\u77ed\u8def\u77ed\uff0c\u5219\u5c061\u5230v\u6b21\u77ed\u8def\u66f4\u65b0\u4e3a1\u5230u\u6b21\u77ed\u8def\u52a0u\u5230v\u8ddd\u79bb\u3002\n4. \uff08\u6ce8\u610f\u70b9\uff09\u6ce8\u610f1\u5230u\u7684\u6b21\u77ed\u8def\u4e0d\u7528\u548c1\u5230v\u6700\u77ed\u8def\u6bd4\u8f83\uff0c\u56e0\u4e3a\u5982\u679c1\u5230u\u6b21\u77ed\u8def\u52a0u\u5230v\u8ddd\u79bb\u6bd41\u5230v\u6700\u77ed\u8def\u77ed\u52191\u5230u\u6700\u77ed\u8def\u52a0u\u5230v\u8ddd\u79bb\u5fc5\u5b9a\u6bd4\u8fd9\u6761\u6700\u77ed\u8def\u77ed\uff0c\u5373\u6ee1\u8db3\u7b2c1\u70b9\uff0c\u6240\u4ee5\u91cd\u590d\u4e0d\u7528\u64cd\u4f5c\u3002\n```\nfor(int i=vex[u];i;i=zz[i].next){\n\tint v=zz[i].v;\n    //1\n\tif(du[v]<k&&v!=1&&v!=n) continue;\n\tif(dis[v]>dis[u]+zz[i].w){\n\t\tdis2[v]=dis[v];\n\t\tdis[v]=dis[u]+zz[i].w;\n\t\tif(!vis[v]){\n\t\t\tvis[v]=1;\n\t\t\tq.push(v);\n\t\t}\n\t}\n    //2.\n\tif(dis[v]<dis[u]+zz[i].w&&dis2[v]>dis[u]+zz[i].w){\n\t\tdis2[v]=dis[u]+zz[i].w;\n\t\tif(!vis[v]){\n\t\t\tvis[v]=1;\n\t\t\tq.push(v);\n\t\t}\n\t}\n    //3.\n\tif(dis2[v]>dis2[u]+zz[i].w){\n\t\tdis2[v]=dis2[u]+zz[i].w;\n\t\tif(!vis[v]){\n\t\t\tvis[v]=1;\n\t\t    q.push(v);\n\t\t}\n\t}\n}\n```\n##### \u77e5\u9053\u4e86\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u540e\u5c31\u597d\u6253\u4e86\uff0c\u4e0d\u8fc7\u4e0b\u9762\u8fd8\u6709\u9700\u8981\u6ce8\u610f\u7684\u6574\u4f53\u95ee\u9898\uff08dalao\u8bf7\u8df3\u8fc7\uff09\uff1a\n1. \u8bb0\u4f4f\u8fd9\u662f\u65e0\u5411\u56fe\uff0c\u4e0d\u8981\u5efa\u6210\u6709\u5411\u56fe~~\u767e\u5e74\u4e0d\u53d8\u7684\u95ee\u9898~~\u3002\n2. \u8fd9\u4e2a\u623f\u95f4\u5982\u679c\u6ca1\u6709\u901a\u5411\u8db3\u591f\u623f\u95f4\u5c31\u4e0d\u80fd\u8fdb\u5165\uff0c\u6240\u4ee5\u8981\u5728\u8f93\u5165\u65f6\u8bb0\u5f55\u5ea6\uff0c\u8fd8\u4e0d\u8981\u5fd8\u8bb0\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u8bb0\u5f55\u662f\u5426\u8bb0\u5f55\u8fc7\u8fd9\u4e24\u70b9\u7684\u5176\u4e2d\u4e00\u6761\u9053\u8def\n3. \u5982\u679c\u6ca1\u6709\u6b21\u77ed\u8def\u5230\u7ec8\u70b9\u8bb0\u4f4f\u8f93\u51fa\u201c-1\u201d\u3002\n4. \u6ce8\u610f\u521d\u59cb\u5316\u8bb0\u5f55\u6700\u77ed\u8def\u548c\u6b21\u77ed\u8def\u7684\u6570\u7ec4\u3002\n## \u6700\u540e\u4e0a\u6210\u54c1\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,ans=1e9,g[5005][5005],du[50005],vex[50005],fx,dis[50005],dis2[50005],vis[50005];\nstruct dd{\n\tint u,v,w,next;\n}zz[555555];\nqueue<int>q;\nvoid push(int u,int v,int w){\n\tfx++;\n\tzz[fx].u=u;\n\tzz[fx].v=v;\n\tzz[fx].w=w;\n\tzz[fx].next=vex[u];\n\tvex[u]=fx;\n\treturn;\n}\nvoid spfa(){\n\tq.push(1);\n\tfor(int i=1;i<=n;i++) dis[i]=1e9;\n\tfor(int i=1;i<=n;i++) dis2[i]=1e9;\n\tdis[1]=0;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=vex[u];i;i=zz[i].next){\n\t\t\tint v=zz[i].v;\n\t\t\tif(du[v]<k&&v!=1&&v!=n) continue;\n\t\t\tif(dis[v]>dis[u]+zz[i].w){\n\t\t\t\tdis2[v]=dis[v];\n\t\t\t\tdis[v]=dis[u]+zz[i].w;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t    vis[v]=1;\n\t\t\t\t    q.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(dis[v]<dis[u]+zz[i].w&&dis2[v]>dis[u]+zz[i].w){\n\t\t\t\tdis2[v]=dis[u]+zz[i].w;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t    vis[v]=1;\n\t\t\t\t    q.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(dis2[v]>dis2[u]+zz[i].w){\n\t\t\t\tdis2[v]=dis2[u]+zz[i].w;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t    vis[v]=1;\n\t\t\t\t    q.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint main() {\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++){\n\t\tint q,h,z;\n\t\tcin>>q>>h>>z;\n\t    if(!g[q][h]&&!g[h][q]){\n\t    \tdu[q]++;\n\t\t    du[h]++;\n\t\t    g[q][h]=1;\n\t\t}\n\t\tpush(q,h,z);\n\t\tpush(h,q,z);\n\t}\n\tspfa();\n\tif(dis2[n]!=1e9)cout<<dis2[n];\n\telse cout<<\"-1\";\n\treturn 0;\n}\n```\n\n",
        "postTime": 1585208868,
        "uid": 220969,
        "name": "zc_li",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "# P2829 \u5927\u9003\u79bb\n[\u539f\u9898\u5730\u5740](https://www.luogu.org/problemnew/show/P2829)\n\n[Github\u9898\u89e3](https://github.com/jerrykcode/luogu)\n\n## \u601d\u8def\n\nA*\u6c42\u6b21\u77ed\u8def\uff0c\u53cd\u5411Dijkstra\u8ba1\u7b97\u51fa\u7684\u6bcf\u4e2a\u9876\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u4e3a\u4f30\u4ef7\u51fd\u6570\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\n#include <queue>\nusing namespace std;\n\ntypedef unsigned short Vertex; //\u9876\u70b9\n#define NO_VALUE -1\n\n//\u90bb\u63a5\u70b9\u7ed3\u6784\u4f53\nstruct AdjNode {\n    Vertex adj_v; //\u90bb\u63a5\u70b9\n    short adj_weight; //\u90bb\u63a5\u8fb9\u6743\u91cd\n    AdjNode(Vertex adj_v, short adj_weight) : adj_v(adj_v), adj_weight(adj_weight) {}\n};\n\n//\u8ba1\u7b97\u65e0\u5411\u56fe\u6b21\u77ed\u8def\u7684\u7c7b\nclass SecondShortestPath {\npublic:\n    /* \u8ba1\u7b97\u65e0\u5411\u56fe\u6b21\u77ed\u8def\u3002\n        @param graph \u56fe\n        @param nv \u9876\u70b9\u6570\n        @param src \u6e90\n        @param des \u7ec8\u70b9\n        @param num \u6570\u7ec4\uff0c\u5b58\u50a8\u6bcf\u4e2a\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u6570\uff08graph\u53ef\u80fd\u6709\u91cd\u8fb9\uff09\n        @param k \u6269\u5c55\u90bb\u63a5\u70b9\u65f6\uff0c\u82e5\u90bb\u63a5\u70b9\u4e0d\u662fsrc\u548cdes\uff0c\u4e14\u5176\u90bb\u63a5\u70b9\u6570\u5c0f\u4e8ek\uff0c\u5219\u4e0d\u6269\u5c55\u8be5\u90bb\u63a5\u70b9\n        @param p_second_shortest_dist \u6307\u9488\uff0c\u4f20\u51fa\u6b21\u77ed\u8def\u957f\u5ea6\n        @return bool \u82e5\u6b21\u77ed\u8def\u5b58\u5728\u5219\u8fd4\u56detrue\n    */\n    bool getSecondShortestPath(vector<AdjNode> *graph, int nv, int src, int des, int *num, int k, int *p_second_shortest_dist);\nprivate:\n    /* Dijkstra\u8ba1\u7b97\u6700\u77ed\u8def\u3002\n        @param graph \u56fe\n        @param nv \u9876\u70b9\u6570\n        @param src \u6e90\n        @param des \u7ec8\u70b9\n        @param num \u6570\u7ec4\uff0c\u5b58\u50a8\u6bcf\u4e2a\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u6570\uff08graph\u53ef\u80fd\u6709\u91cd\u8fb9\uff09\n        @param k \u6269\u5c55\u90bb\u63a5\u70b9\u65f6\uff0c\u82e5\u90bb\u63a5\u70b9\u4e0d\u662fsrc\u548cdes\uff0c\u4e14\u5176\u90bb\u63a5\u70b9\u6570\u5c0f\u4e8ek\uff0c\u5219\u4e0d\u6269\u5c55\u8be5\u90bb\u63a5\u70b9\n        @param dist \u6570\u7ec4\uff0c\u4f20\u51fasrc\u5230\u6bcf\u4e00\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n        @return bool \u82e5src\u53ef\u8fbedes\u5219\u8fd4\u56detrue\n    */\n    bool dijkstra(vector<AdjNode> *graph, int nv, int src, int des, int *num, int k, int *dist);\n\n    /* A*\u8ba1\u7b97\u6b21\u77ed\u8def\u3002\n        @param graph \u56fe\n        @param h \u6570\u7ec4 A*\u7b97\u6cd5\u7684\u4f30\u503c\u51fd\u6570\n        @param nv \u9876\u70b9\u6570\n        @param src \u6e90\n        @param des \u7ec8\u70b9\n        @param num \u6570\u7ec4\uff0c\u5b58\u50a8\u6bcf\u4e2a\u9876\u70b9\u7684\u90bb\u63a5\u70b9\u6570\uff08graph\u53ef\u80fd\u6709\u91cd\u8fb9\uff09\n        @param k \u6269\u5c55\u90bb\u63a5\u70b9\u65f6\uff0c\u82e5\u90bb\u63a5\u70b9\u4e0d\u662fsrc\u548cdes\uff0c\u4e14\u5176\u90bb\u63a5\u70b9\u6570\u5c0f\u4e8ek\uff0c\u5219\u4e0d\u6269\u5c55\u8be5\u90bb\u63a5\u70b9\n        @param p_second_shortest_dist \u6307\u9488\uff0c\u4f20\u51fa\u6b21\u77ed\u8def\u957f\u5ea6\n        @return bool \u82e5\u6b21\u77ed\u8def\u5b58\u5728\u5219\u8fd4\u56detrue\n    */\n    bool astar(vector<AdjNode> *graph, int *h, int nv, int src, int des, int *num, int k, int *p_second_shortest_dist);\n\n    //Dijkstra\u4f18\u5148\u961f\u5217\u4f7f\u7528\u7684\u7ed3\u6784\u4f53\n    struct PriorityNode {\n        Vertex v;\n        int dist;\n        PriorityNode(Vertex v, int dist) : v(v), dist(dist) {}\n    };\n\n    //A*\u4f18\u5148\u961f\u5217\u4f7f\u7528\u7684\u7ed3\u6784\u4f53\uff0c\u7ee7\u627f\u4e86PriorityNode\n    struct AstarNode : public PriorityNode {\n        //f = dist\n        int g;\n        AstarNode(Vertex v, int g, int f) : PriorityNode(v, f), g(g) {}\n    };\n\n    //\u4f18\u5148\u961f\u5217\u7528\u4e8e\u6bd4\u8f83\u7684\u7ed3\u6784\u4f53\n    struct cmp {\n        bool operator () (PriorityNode& a, PriorityNode& b) {\n            return a.dist > b.dist;\n        }\n    };\n};\n\nbool SecondShortestPath::getSecondShortestPath(vector<AdjNode>* graph, int nv, int src, int des, int *num, int k, int *p_second_shortest_dist) {\n    int *h = new int[nv];\n    bool result;\n    if (dijkstra(graph, nv, des, src, num, k, h)) { //\u53cd\u5411\u8ba1\u7b97\u6700\u77ed\u8def\uff0c\u4f5c\u4e3aA*\u7684\u4f30\u503c\u51fd\u6570\n        result = astar(graph, h, nv, src, des, num, k, p_second_shortest_dist); //A*\n    }\n    else result = false;\n    free(h);\n    return result;\n}\n\nbool SecondShortestPath::dijkstra(vector<AdjNode>* graph, int nv, int src, int des, int *num, int k, int * dist) {\n    fill(dist, dist + nv, NO_VALUE);\n    bool *collected = new bool[nv];\n    fill(collected, collected + nv, false);\n    dist[src] = 0;\n    priority_queue<PriorityNode, vector<PriorityNode>, cmp> q;\n    q.push(PriorityNode(src, 0));\n    Vertex top_v, adj_v;\n    int tmp_dist;\n    while (!q.empty()) {\n        top_v = q.top().v;\n        q.pop();\n        if (collected[top_v]) continue;\n        collected[top_v] = true;\n        for (auto it = graph[top_v].begin(); it != graph[top_v].end(); it++) { //\u904d\u5386\u90bb\u63a5\u70b9\n            adj_v = it->adj_v;\n            if ((num[adj_v] >= k || adj_v == des) && !collected[adj_v]) { //\u90bb\u63a5\u70b9\u7684\u90bb\u63a5\u70b9\u6570\u76ee\u9700\u8981>=k\uff0c\u6216\u8005\u90bb\u63a5\u70b9\u5c31\u662fdes\n                tmp_dist = dist[top_v] + (int)it->adj_weight;\n                if (tmp_dist < dist[adj_v] || dist[adj_v] == NO_VALUE) {\n                    dist[adj_v] = tmp_dist;\n                    q.push(PriorityNode(adj_v, tmp_dist));\n                }\n            }\n        } //for\n    } //while\n    free(collected);\n    return dist[des] != NO_VALUE;\n}\n\nbool SecondShortestPath::astar(vector<AdjNode>* graph, int *h, int nv, int src, int des, int *num, int k, int * p_second_shortest_dist) {\n    priority_queue<AstarNode, vector<AstarNode>, cmp> q;\n    q.push(AstarNode(src, 0, h[src]));\n    Vertex top_v, adj_v;\n    int top_g, last_g = NO_VALUE, tmp_g, count = 0;\n    while (!q.empty()) {\n        top_v = q.top().v;\n        top_g = q.top().g;\n        q.pop();\n        if (top_v == des && top_g != last_g) { //\u5f39\u51fades\uff0c\u4e14des\u7684g\u503c\u548c\u4e0a\u6b21\u5f39\u51fades\u7684g\u503c\u4e0d\u540c\n            if (++count == 2) { //\u8ba1\u6570\n                while (!q.empty()) q.pop();\n                *p_second_shortest_dist = top_g;\n                return true;\n            }\n            last_g = top_g; //\u66f4\u65b0last_g\u4e3a\u8fd9\u6b21\u5f39\u51fades\u7684g\u503c\n        }\n        for (auto it = graph[top_v].begin(); it != graph[top_v].end(); it++) { //\u904d\u5386\u90bb\u63a5\u70b9\n            adj_v = it->adj_v;\n            if (num[adj_v] >= k || adj_v == src || adj_v == des) { //\u90bb\u63a5\u70b9\u9700\u8981>=k\u6216\u8005\u90bb\u63a5\u70b9\u5c31\u662fsrc\u6216\u8005des\n                tmp_g = top_g + (int)it->adj_weight;\n                q.push(AstarNode(adj_v, tmp_g, tmp_g + h[adj_v]));\n            }\n        }\n    }\n    return false;\n}\n\nint main() {\n    int n, m, k;\n    scanf(\"%d %d %d\", &n, &m, &k);\n    vector<AdjNode> *graph = new vector<AdjNode>[n];\n    int *num = new int[n];\n    fill(num, num + n, 0);\n    for (int i = 0, u, v, w; i < m; i++) {\n        scanf(\"%d %d %d\", &u, &v, &w);\n        u--; v--;\n        graph[u].push_back(AdjNode(v, w));\n        graph[v].push_back(AdjNode(u, w));\n    }\n    bool *appeared = new bool[n];\t\n    for (int i = 0; i < n; i++) {\n        fill(appeared, appeared + n, false);\n        for (auto it = graph[i].begin(); it != graph[i].end(); it++) {\n            if (appeared[it->adj_v]) continue;\n            else {\n                num[i]++;\n                appeared[it->adj_v] = true;\n            }\n        }\n    }\n    SecondShortestPath ssp;\n    int second_shortest_dist;\n    if (ssp.getSecondShortestPath(graph, n, 0, n - 1, num, k, &second_shortest_dist)) {\n        printf(\"%d\", second_shortest_dist);\n    }\n    else printf(\"-1\");\n    free(num);\n    for (int i = 0; i < n; i++)\n        vector<AdjNode>().swap(graph[i]);\t\n    return 0;\n}\n\n```",
        "postTime": 1556013486,
        "uid": 194439,
        "name": "rediserver",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "**\u5148\u6c42s\u5230t\u7684\u6700\u77ed\u8def\uff0c\u628a\u6700\u77ed\u8def\u4e0a\u7ecf\u8fc7\u7684\u8fb9\u6807\u8bb0\u4e00\u4e0b\uff0c\u6bcf\u6b21\u679a\u4e3e\u6c42\u6700\u5c0f\u7684\u6b64\u77ed\u8def\uff0c\uff01\uff01\uff01\uff01\u6ce8\u610f\uff0ck\u662f\u6307\u6bcf\u4e2a\u70b9\u6240\u8fde\u7684\u70b9\u6570\uff0c\u5e76\u4e0d\u662f\u8fb9\u6570\u3002**\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#define MAXX 1000100\nusing namespace std;\nint n,m,k,x,y,z,du[MAXX],fa[MAXX],s1=1e9;\nint vis[MAXX],dist[MAXX];\nint head[MAXX],cnt;\nint v[5010][5010];\nstruct E{\n\tint to,next,dis;\n}e[MAXX*2];\n\nvoid add(int from,int to,int dis){\n\te[++cnt].to=to;\n\te[cnt].dis=dis;\n\te[cnt].next=head[from];\n\thead[from]=cnt;\n}\npriority_queue< pair<int,int> > q;\nvoid dijk(){\n\tfor(int i=1;i<=n;i++) dist[i]=MAXX;\n\tdist[1]=0;\n\tq.push(make_pair(0,1));\n\twhile(!q.empty()){\n\t\tint u=q.top().second;q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif(dist[v]>dist[u]+e[i].dis&&du[v]>=k){\n\t\t\t\tdist[v]=dist[u]+e[i].dis;\n\t\t\t\tfa[v]=u;\n\t\t\t\tq.push(make_pair(-dist[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nint dis[MAXX],ins[MAXX],ans=1e9;\npriority_queue<pair<int,int> > q1;\nvoid dij(){\n\tfor(int i=1;i<=n;i++) dis[i]=MAXX,vis[i]=0;\n\tdis[1]=0;\n\tq1.push(make_pair(0,1));\n\twhile(!q1.empty()){\n\t\tint u=q1.top().second;q1.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[u]+e[i].dis&&!ins[i]&&du[v]>=k){\n\t\t\t\tdis[v]=dis[u]+e[i].dis;\n\t\t\t\tq1.push(make_pair(-dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n//\tprintf(\"%d\\n\",dis[n]);\n\tif(dis[n]!=dist[n]) ans=min(ans,dis[n]);\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif(!v[x][y]&&!v[y][x]) du[x]++,du[y]++,v[x][y]=1,v[y][x]=1;\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tdu[1]=du[n]=MAXX;\n\tdijk();\n\t\n\tint now=n,f,j;\n\twhile(fa[now]){\n\t\tf=fa[now];\n\t\tfor(j=head[f];j;j=e[j].next){\n\t\t\tint to=e[j].to;\n\t\t\tif(dist[f]+e[j].dis==dist[now]&&to==now) {\n\t\t\t   ins[j]=1;\n\t\t\t   break;\n\t\t\t}\n\t\t}\n\t\tdij();\n\t\tins[j]=0;now=f;\n\t}\n\t\n\tnow=n;\n\twhile(fa[now]){\n\t\tf=fa[now];\n\t\tfor(int i=head[f];i;i=e[i].next){\n\t\t\tint to=e[i].to;\n\t\t\tif(dist[f]+e[i].dis==dist[now]&&to==now) {\n\t\t\t\ts1=min(s1,e[i].dis);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tnow=f;\n\t}\n\tans=min(ans,dist[n]+s1*2);\n\tif(ans<1e9)printf(\"%d\\n\",ans);\n\telse printf(\"-1\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1552096647,
        "uid": 95594,
        "name": "\u0f3a\u8acb\u0f12\u764c\u0f3b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "\u6b21\u77ed\u8def\n\nA* \u548c\u8dd1\u4e24\u6b21\u6700\u77ed\u8def\u90fd\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u6700\u4f18\u89e3\u662f\u8dd1\u4e00\u6b21\u6700\u77ed\u8def\uff08\u53c2\u8003P2865\uff09\n\n\u5148\u8003\u8651\u6211\u4eec\u5982\u4f55\u6c42\u6570\u7ec4\u4e2d\u7684\u6b21\u5927\u503c\uff1a\n```cpp\nint min1=inf,min2=inf+1;\nfor(int i=1;i<=n;i++){\n\tif(a[i]<min1)min2=min1,min1=a[i];\n\telse if(a[i]<min2)min2=a[i];\n}\ncout<<min2;\n```\n\u6c42\u6b21\u77ed\u8def\u4e5f\u662f\u7c7b\u4f3c\u7684\u60f3\u6cd5\uff1a\n```cpp\ninline void spfa(){\n\tmemset(d,62,sizeof(d)),memset(e,63,sizeof(e));//d\u6570\u7ec4\u5b58\u6700\u77ed\u8def\uff0ce\u6570\u7ec4\u5b58\u6b21\u77ed\u8def\n\td[1]=0,f[1]=1,q.push(1);//\u8d77\u70b9\u5165\u961f\n\twhile(!q.empty()){\n\t\ta=q.front(),q.pop(),f[a]=0;//\u51fa\u961f\n\t\tfor(int i=he[a];i;i=ne[i]){\n\t\t\tb=to[i];\n\t\t\tif(ok[b])continue;\n\t\t\tc=len[i];\n\t\t\tif(d[b]>d[a]+c){//\u6700\u77ed\u8def\u53ef\u66f4\u65b0\u65f6\uff0c\u8981\u5148\u66f4\u65b0\u6b21\u77ed\u8def\n\t\t\t\te[b]=min(d[b],e[a]+c);\n\t\t\t\td[b]=d[a]+c;\n\t\t\t\tif(!f[b])f[b]=1,q.push(b);//\u5165\u961f\n\t\t\t}else if(e[b]>d[a]+c&&d[b]<d[a]+c){//\u7531\u4e8e\u662f\u4e25\u683c\u6b21\u77ed\u8def\uff0cd[b]\u4e0d\u80fd\u4e0ed[a]+c\u76f8\u7b49\n\t\t\t\te[b]=d[a]+c;\n\t\t\t\tif(!f[b])f[b]=1,q.push(b);\n\t\t\t}else if(e[b]>e[a]+c){\n\t\t\t\te[b]=e[a]+c;\n\t\t\t\tif(!f[b])f[b]=1,q.push(b);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\u8fd8\u8981\u6ce8\u610f\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u4f1a\u5f71\u54cd\u5ea6\u7684\u7edf\u8ba1\uff1a\n```cpp\nfor(int i=2;i<n;i++){//\u4e0d\u8003\u8651\u8d77\u70b9\u548c\u7ec8\u70b9\n\t\tmemset(v,0,sizeof(v)),s=0;//\u7528\u4e00\u7ef4\u6570\u7ec4v\u5b58\u50a8\u70b9i\u4e0e\u70b9j\u662f\u5426\u76f4\u63a5\u8fde\u901a\uff0c\u8282\u7ea6\u7a7a\u95f4\n\t\tfor(int j=he[i];j;j=ne[j]){\n\t\t\tif(!v[to[j]])v[to[j]]=1,s++;//\u91cd\u8fb9\u53ea\u7edf\u8ba1\u4e00\u6b21\n\t\t}\n\t\tif(s<k)f[i]=1;//\u6807\u8bb0\n\t}\n```\n\u6b64\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6O\uff08km\uff09\uff0c60ms\u5185\u53efac",
        "postTime": 1566123257,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u8003\u70b9\u662f\u6b21\u77ed\u8def,\u8fd9\u91cc\u6709\u9053\u88f8\u9898[ P2865 [USACO06NOV]\u8def\u969cRoadblocks](https://www.luogu.org/problem/P2865)  \n\u8fd9\u9053\u9898\u5728\u6c42\u6b21\u77ed\u8def\u7684\u57fa\u7840\u4e0a\u65b0\u589e\u4e86\u4e00\u4e9b\u9650\u5236,\u5c31\u662f\u975e\u8d77\u70b9/\u7ec8\u70b9\u7684\u7ed3\u70b9,\u5982\u679c\u548c\u5b83\u6709\u8fb9\u76f8\u8fde\u7684**\u4e0d\u540c**\u7ed3\u70b9\u6570\u5c0f\u4e8ek\u5c31\u4e0d\u80fd\u8bbf\u95ee  \n\u8fd9\u4e2a\u5f88\u597d\u5904\u7406,\u7c7b\u4f3c\u4e8e\u8bb0\u5f55\u51fa\u5ea6\u5165\u5ea6degree  \n\u5f53\u6211\u4eec\u65b0\u589e\u4e00\u6761\u4ecex\u5230y\u7684\u8fb9\u7684\u65f6\u5019,\u4e24\u4e2a\u70b9\u7684degree\u90fd\u52a0\u4e00  \n\u4e0d\u8fc7\u9898\u76ee\u6bd4\u8f83\u5751\u7239\u7684\u5c31\u662f\u6709\u91cd\u8fb9\u548c\u81ea\u73af,\u4f46\u6211\u4eec\u9700\u8981\u7684\u662f\u4e0d\u540c\u7684\u70b9\u7684\u6570\u91cf  \n\u6211\u7684\u505a\u6cd5\u662f\u7528\u4e00\u4e2a5000*5000\u7684bool\u6570\u7ec4\u6765\u8bb0\u5f55\u8fd9\u4e24\u4e2a\u70b9\u662f\u5426\u6709\u8fb9  \n```cpp\nbool book[5001][5001];\n   ...\n   ...\nif(x==y)continue;\n    if(!book[x][y])\n    degree[x]++,\n    degree[y]++,                           \n    book[x][y]=book[y][x]=true;\n    ...\n    ...\n```\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u548c\u6a21\u677f\u771f\u6ca1\u4ec0\u4e48\u533a\u522b\u4e86,\u8be6\u7ec6\u76f4\u63a5\u770b\u4ee3\u7801\u5c31\u597d\n```cpp\n/**************************************************************/\n\u57fa\u672c\u601d\u8def\uff1a\n\u628a\u6c42\u6700\u77ed\u8def\u65f6\u66f4\u65b0\u6700\u77ed\u8def\u7684\u90a3\u90e8\u5206\u6539\u4e00\u4e0b\u3002\ndis1\uff0cdis2\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u5230\u8be5\u70b9\u7684\u6700\u77ed\u8def\u548c\u6b21\u77ed\u8def\n\u5206\u4e09\u79cd\u60c5\u51b5\uff1a\n    1.\u82e5\u8be5\u70b9\u6700\u77ed\u8def+\u4e0b\u4e00\u6761\u8fb9\u6bd4\u5230\u4e0b\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u77ed\uff0c\u5219\u66f4\u65b0\u4e0b\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u540c\u65f6\u66f4\u65b0\u6b21\u77ed\u8def\u4e3a\u539f\u6700\u77ed\u8def\n    2.\u82e5\u8be5\u70b9\u6b21\u77ed\u8def+\u4e0b\u4e00\u6761\u8fb9\u6bd4\u5230\u4e0b\u4e2a\u70b9\u7684\u6b21\u77ed\u8def\u77ed\uff0c\u5219\u66f4\u65b0\u4e0b\u4e2a\u70b9\u7684\u6b21\u77ed\u8def\n    3.\u82e5\u8be5\u70b9\u6700\u77ed\u8def+\u4e0b\u4e00\u6761\u8fb9\u6bd4\u5230\u4e0b\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u957f\u540c\u65f6\u6bd4\u4e0b\u4e2a\u70b9\u7684\u6b21\u77ed\u8def\u77ed\uff0c\u5219\u66f4\u65b0\u4e0b\u4e2a\u70b9\u7684\u6b21\u77ed\u8def\n\n/*************************************************************/\n#include<iostream>\n#include<queue>\n#define MAXN 2000000\n#define INF 0x7f7f7f7f\nstruct node                                             \n{\n\tint u,d;  //\u70b9\u7f16\u53f7,\u5230\u8d77\u70b9\u957f\u5ea6 \n\tbool friend operator<(const node&a,const node&b){return a.d>b.d;}   \n};\nstruct Edge\n{\n\tint from,to,next,w;\n}edge[MAXN];\nint head[MAXN],dis1[MAXN],dis2[MAXN],degree[MAXN],len,n,m,KK;  //dis1 \u6700\u77ed\u8def dis2 \u6b21\u77ed\u8def \nbool book[5001][5001];    //\u6807\u8bb0x-y\u662f\u5426\u6709\u8fb9 \nusing namespace std;\nvoid ins(int x,int y,int d)\n{\n\tedge[++len]=(Edge){x,y,head[x],d};\n\thead[x]=len;\n}\nvoid Dijkstra(int st)\n{\n\tpriority_queue<node,vector<node>,less<node> >q;\n\tfor(int i=1;i<=n;i++)dis1[i]=dis2[i]=INF;\n\tdis1[st]=0;q.push((node){st,0});                    //\u4e0d\u80fd\u5199dis2[2]=0,\u4f1a\u51fa\u95ee\u9898.\n\twhile(q.size())                                     //\u6211\u53ea\u662f\u53d1\u73b0\u4e86\u8fd9\u4e2a\u95ee\u9898,\u5c1a\u672a\u89e3\u51b3,\u7559\u7ed9\u5927\u4f6c\u51fa\u6765 \n\t{\n\t\tnode now=q.top();q.pop();\n\t\tif(dis2[now.u]<now.d)continue;\n\t\tfor(int k=head[now.u];k;k=edge[k].next)\n\t\t{\n\t\t\tint dis=edge[k].w+now.d,to=edge[k].to;\n\t\t\tif(to!=1&&to!=n&&degree[to]<KK)continue;    //\u4f9d\u9898,\u5f53\u524d\u8bbf\u95ee\u70b9\u76f4\u63a5\u8fde\u63a5\u7684\u70b9\u5c0f\u4e8ek\u4e14\u4e0d\u662f\u8d77\u70b9\u6216\u91cd\u70b9 \n\t\t\tif(dis1[to]>dis)                            //\u66f4\u65b0\u6700\u77ed\u8def \n\t\t\t{\n\t\t\t\tswap(dis1[to],dis);  \n\t\t\t\tq.push((node){to,dis1[to]});\n\t\t\t}\n\t\t\tif(dis1[to]<dis&&dis2[to]>dis)              //\u66f4\u65b0\u6b21\u77ed\u8def.\u53bb\u6389swap\u5b9e\u9645\u4e0a\u662f\u6709\u4e09\u79cd\u60c5\u51b5\u7684 \n\t\t\t{\n\t\t\t\tdis2[to]=dis;\n\t\t\t\tq.push((node){to,dis2[to]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m>>KK;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,d;cin>>x>>y>>d;\n        if(x==y)continue;\n\t\tif(!book[x][y])                               //\u8fd9\u91cc\u8981\u6392\u9664\u91cd\u8fb9\u548c\u81ea\u73af\u7684\u60c5\u51b5\n\t\t{\n\t\t\n            degree[x]++;                              //\u56e0\u4e3adegree\u8bb0\u5f55\u7684\u662f\u548c\u8be5\u70b9\u6709\u76f4\u63a5\u8054\u7cfb\u7684\u70b9\u7684\u4e2a\u6570 \n\t\t\tdegree[y]++;                           \n            book[x][y]=book[y][x]=true;               //\u8fd9\u53e5\u8bdd\u503c20\u5206 \n\t\t\tins(x,y,d);\n\t\t\tins(y,x,d);\n\t\t}\n\t}\n\tDijkstra(1);\n    cout<<(dis2[n]==INF?-1:dis2[n]);                  //\u8fd9\u53e5\u8bdd\u8d77\u780110\u5206 \n}\n\n\n\n```\n\u66f4\u65b0\uff1a2019/10/9   \n\u5f88\u62b1\u6b49\u53ef\u80fd\u662f\u6211\u5199\u9898\u89e3\u65f6\u5019\u7684\u5931\u8bef   \n\u4e3a\u4e86\u8ba9\u4ee3\u7801\u53ef\u8bfb\u6027\u63d0\u9ad8  (\u8f7b\u5fae\u538b\u884c)     \n\u4e34\u65f6\u6539\u52a8\u4e86\u4ee3\u7801    \n\u5bfc\u81f4\u8fd9\u7bc7\u9898\u89e3\u53ea\u670930\u5206  \nAC\u7684\u4ee3\u7801\u5728\u8fd9\u91cc   \n\u5224\u91cd\u90a3\u91cc\u88ab\u6211\u6539\u6302\u4e86      \n\u5f88\u62b1\u6b49\u8ba9\u5927\u5bb6AC\u7387--\u4e86   \n--    \n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\n#define MAXN 2000000\n#define INF 0x7f7f7f7f\nstruct node\n{\n\tint u,d;\n\tbool friend operator<(const node&a,const node&b){return a.d>b.d;}\n};\nstruct Edge{int from,to,next,w;}edge[MAXN];\nint head[MAXN],dis1[MAXN],dis2[MAXN],degree[MAXN],len,n,m,KK;\nbool book[5001][5001];\nusing namespace std;\nvoid ins(int x,int y,int d){edge[++len]=(Edge){x,y,head[x],d};head[x]=len;}\nvoid Dijkstra(int st)\n{\n\tpriority_queue<node,vector<node>,less<node> >q;\n\tfor(int i=1;i<=n;i++)dis1[i]=dis2[i]=INF;\n\tdis1[st]=0;q.push((node){st,0});\n\twhile(q.size())\n\t{\n\t\tnode now=q.top();q.pop();\n\t\tif(dis2[now.u]<now.d)continue;\n\t\tfor(int k=head[now.u];k;k=edge[k].next)\n\t\t{\n\t\t\tint dis=edge[k].w+now.d,to=edge[k].to;\n\t\t\tif(to!=1&&to!=n&&degree[to]<KK)continue;\n\t\t\tif(dis1[to]>dis)\n\t\t\t{\n\t\t\t\tswap(dis1[to],dis);\n\t\t\t\tq.push((node){to,dis1[to]});\n\t\t\t}\n\t\t\tif(dis1[to]<dis&&dis2[to]>dis)\n\t\t\t{\n\t\t\t\tdis2[to]=dis;\n\t\t\t\tq.push((node){to,dis2[to]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>m>>KK;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,d;cin>>x>>y>>d;\n        if(x==y)continue;\n\t\tins(x,y,d);ins(y,x,d);     //\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u628ains\u51fd\u6570\u653e\u5230if\u91cc\u9762\u53bb\u4e86,\u5bfc\u81f4AC->30\u5206\n\t\tif(!book[x][y])\n        {\n            degree[x]++;\n\t\t\tdegree[y]++;\n            book[x][y]=book[y][x]=true;\n        }\n\t}\n\tDijkstra(1);\n    cout<<(dis2[n]==INF?-1:dis2[n]);\n}\n```  \n\u518d\u6b21\u5411\u5927\u5bb6\u9053\u6b49  \n\u795d\u5927\u5bb6AC\u7387++\n",
        "postTime": 1564429271,
        "uid": 229609,
        "name": "NewSjf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "## Solve\n\n1.\u6b21\u77ed\u8def\u95ee\u9898+SPFA\u3002\n\n2.\u8bbe\u8d77\u70b9\u4e3as,\u7ec8\u70b9t\u3002\n\n3.\u8bbedis1[i]\u4e3as\u5230\u8282\u70b9i\u7684\u6700\u77ed\u8def\uff0cdis2[i]\u4e3at\u5230\u8282\u70b92\u7684\u6700\u77ed\u8def\u3002\n\n4.\u8bbe\u6b21\u77ed\u8defans\u3002\n\n5.ans\u5373\u4e3amin{dis1[u]+w+dis2[v]}(u,v,w\u8868\u793a\u6bcf\u6761\u8fb9\u7684\u4e24\u4fa7\u7aef\u70b9\u548c\u6743\u503c)\uff0cans!=dis1[t]\u3002\n\n## Tip\n\n1.\u849f\u84bb\u7684\u6211\u5e76\u4e0d\u4f1a\u8bc1\u660e\u8be5\u8fc7\u7a0b\u7684\u6b63\u786e\u6027\u3002\n\n2.![](https://cdn.luogu.com.cn/upload/pic/63781.png )\u6b64\u5904\u6307\u7684\u662f\u70b9\u6570\u3002\n\n## Code\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define N 400010\nusing namespace std;  //\u6807\u51c6\u5f00\u5934\nint n,m,k;  //\u540c\u9898\nint e,r,dist;  //\u8f93\u5165\u65f6\u7684\u7aef\u70b9\uff0c\u6743\u503c\nint ans=1e9;  //\u7b54\u6848\nint du[N];  //\u76f4\u63a5\u8fde\u63a5\u7684\u70b9\u6570\nint dis1[N],dis2[N];  //\u540cSolve\nint first[N],next[N],len;  //\u90bb\u63a5\u8868\uff0clen\u8868\u793a\u8fb9\u6570\nbool vis[N];\nint f[5001][5001];  //f[i][j]>0,\u8868\u793ai\u4e0ej\u76f4\u63a5\u76f8\u8fde\nstruct note{  //\u90bb\u63a5\u8868\n\tint u,v,w;\n}d[N];\nvoid add(int e,int r,int dist){  //\u90bb\u63a5\u8868\n\td[++len].u=e;\n\td[len].v=r;\n\td[len].w=dist;\n\tnext[len]=first[e];\n\tfirst[e]=len;\n}\nvoid spfa(int s,int *dis){  //\u6807\u51c6SPFA\n\tmemset(vis,false,sizeof(vis));\n\tdis[s]=0;\n\tqueue<int> q;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint e=q.front();\n\t\tq.pop();\n\t\tvis[e]=false;\n\t\tfor(int i=first[e];i!=-1;i=next[i]){\n\t\t\tif(du[d[i].v]<k&&d[i].v!=1&&d[i].v!=n) continue;  //\u6392\u9664\u5ea6\u6570\u5c0f\u4e8ek\n\t\t\tif(dis[d[i].v]>dis[e]+d[i].w){\n\t\t\t\tdis[d[i].v]=dis[e]+d[i].w;\n\t\t\t\tif(!vis[d[i].v]){\n\t\t\t\t\tvis[d[i].v]=true;\n\t\t\t\t\tq.push(d[i].v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(first,-1,sizeof(first));\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n;i++) dis1[i]=dis2[i]=1e9;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&e,&r,&dist);\n\t\tf[e][r]++;\n\t\tf[r][e]++;\n\t\tadd(e,r,dist);\n\t\tadd(r,e,dist);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++) if(f[i][j]) du[i]++;\n\t}\n\tspfa(1,dis1);\n\tspfa(n,dis2);\n\tfor(int i=1;i<=len;i++){\n\t\tif(dis1[d[i].u]+d[i].w+dis2[d[i].v]!=dis1[n]&&ans>dis1[d[i].u]+d[i].w+dis2[d[i].v]) ans=dis1[d[i].u]+d[i].w+dis2[d[i].v]; \n\t}\n\tif(ans==1e9) printf(\"-1\");\n\telse printf(\"%d\",ans);\n\treturn 0; \n}\n```\n",
        "postTime": 1563155956,
        "uid": 70151,
        "name": "\u52a0\u52d2\u6bd4\u00b7\u53f2\u52aa\u6bd4",
        "ccfLevel": 0,
        "title": "P2829 \u3010\u5927\u9003\u79bb\u3011"
    },
    {
        "content": "\u9898\u610f\u4e0d\u662f\u5f88\u6e05\u695a\u3002\n\n\u89e3\u91ca\u4e00\u4e0b\uff0c\u81ea\u73af\u7b97\u201c\u6240\u76f4\u63a5\u8fde\u63a5\u7684\u5730\u65b9\u201d\u4e4b\u4e00\u3002\u201c\u8d77\u70b9\u548c\u7ec8\u70b9\u9664\u5916\u201d\u4e0d\u662f\u8bf4\u201c\u6240\u76f4\u63a5\u8fde\u63a5\u7684\u5730\u65b9\u201d\u4e0d\u7b97\u8d77\u70b9\u7ec8\u70b9\uff0c\u800c\u662f\u201c\u90a3\u4e48\u4ed6\u5c31\u4e0d\u6562\u8fdb\u53bb\u201d\u7684\u5730\u65b9\u4e0d\u5305\u62ec\u8d77\u70b9\u7ec8\u70b9\uff0c\u5373\u4f7f\u4e0e\u8d77\u70b9\u7ec8\u70b9\u201c\u6240\u76f4\u63a5\u8fde\u63a5\u7684\u5730\u65b9\u201d\u5c0f\u4e8e $k$ \u4e2a\u3002\n\n\u8fd9\u4e2a\u73c2\u4ee5\u5728 spfa \u7684\u66f4\u65b0\u524d\u5224\u65ad\u4e00\u4e0b\u3002\u5982\u679c\u201c\u6240\u76f4\u63a5\u8fde\u63a5\u7684\u5730\u65b9\u201d\u5c0f\u4e8e $k$ \u4e2a\uff0c\u90a3\u4e48\u5c31\u4e0d\u8ba9\u4ed6\u66f4\u65b0\u3001\u5165\u961f\u3002\n\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u8fd9\u6837:`if(v>1&&v<n&&sze[v]<k)continue;`\u3002\n\n\u6700\u540e\uff0c\u6b21\u77ed\u8def\u600e\u4e48\u6c42\uff1f~~\u6211\u4f1a\u53ef\u6301\u4e45\u5316\u53ef\u5e76\u5806\uff01\u6211\u4f1aA*\uff01~~\n\n\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u6b21\u77ed\u8def\uff0c\u66f4\u65b0\u65f6\u5206\u7c7b\u8ba8\u8bba($dis(u,0)$ \u6700\u77ed\u8def\uff0c$dis(u,1)$ \u6b21\u77ed\u8def)\u3002\n\n$\\texttt{if}\\ dis(u,0)+w<dis(v,0)\\ \\texttt{then}$\n\n$\\ \\ \\ \\ dis(v,1)\\gets dis(v,0),dis(v,0)\\gets dis(u,0)+w$\n\n$\\texttt{if}\\ dis(u,0)+w<dis(v,1)\\ \\texttt{and}\\ dis(u,0)+w\\neq dis(v,0)\\ \\texttt{then}$\n\n$\\ \\ \\ \\ dis(v,1)\\gets dis(u,0)+w$\n\n$\\texttt{if}\\ dis(u,1)+w<dis(v,1)\\ \\texttt{then}$\n\n$\\ \\ \\ \\ dis(v,1)\\gets dis(u,1)+w$\n\n\u4e3a\u4ec0\u4e48\uff1f\u5148\u770b\u7b2c\u4e00\u4e2a\uff1a\n\n$\\texttt{if}\\ dis(u,0)+w<dis(v,0)\\ \\texttt{then}$\n\n$\\ \\ \\ \\ dis(v,1)\\gets dis(v,0),dis(v,0)\\gets dis(u,0)+w$\n\n\u6b64\u65f6\u73c2\u4ee5\u66f4\u65b0\u6700\u77ed\u8def\uff0c\u6b21\u77ed\u8def\u81ea\u7136\u5c31\u662f\u4e4b\u524d\u7684\u6700\u77ed\u8def\u3002\n\n\u7b2c\u4e8c\u4e2a\uff1a\n\n$\\texttt{if}\\ dis(u,0)+w<dis(v,1)\\ \\texttt{and}\\ dis(u,0)+w\\neq dis(v,0)\\ \\texttt{then}$\n\n$\\ \\ \\ \\ dis(v,1)\\gets dis(u,0)+w$\n\n\u6b64\u65f6\u53ea\u80fd\u4e0d\u80fd\u66f4\u65b0\u6700\u77ed\u8def\uff0c\u66f4\u65b0\u6b21\u77ed\u8def\u3002\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u66f4\u65b0\u6700\u77ed\u3001\u6b21\u77ed\u8def\uff0c\u8981\u52a0\u4e0a\u540e\u9762\u7684\u5224\u65ad\u3002\n\n$\\texttt{if}\\ dis(u,1)+w<dis(v,1)\\ \\texttt{then}$\n\n$\\ \\ \\ \\ dis(v,1)\\gets dis(u,1)+w$\n\n$u$ \u7684\u6b21\u77ed\u8def\u66f4\u65b0 $v$ \u7684\u6b21\u77ed\u8def\u3002\n\n\u4e3a\u4ec0\u4e48 $u$ \u7684\u6b21\u77ed\u8def\u53ea\u80fd\u66f4\u65b0 $v$ \u7684\u6b21\u77ed\u8def\uff1f\u56e0\u4e3a\u5982\u679c $v$ \u7684\u6700\u77ed\u8def\u80fd\u88ab $u$ \u7684\u6b21\u77ed\u8def\u66f4\u65b0\uff0c\u4ed6\u4e00\u5b9a\u5df2\u7ecf\u88ab\u66f4\u4f18\u7684 $u$ \u7684\u6700\u77ed\u8def\u66f4\u65b0\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\n\n```cpp\n\t\t\tif(dis[u][0]+w<dis[v][0]){\n\t\t\t\tdis[v][1]=dis[v][0];\n\t\t\t\tdis[v][0]=dis[u][0]+w;\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}\n\t\t\tif(dis[u][0]+w<dis[v][1]&&dis[u][0]+w!=dis[v][0]){\n\t\t\t\tdis[v][1]=dis[u][0]+w;\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}\n\t\t\tif(dis[u][1]+w<dis[v][1]){\n\t\t\t\tdis[v][1]=dis[u][1]+w;\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}      \n```\n\n\n\n\u4ee3\u7801\u5c31\u5f88\u5bb9\u6613\u4e86\u3002~~\u6e05\u6c34\u51fa\u8299\u84c9\uff0c\u5929\u7136\u53bb\u6ce8\u91ca~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxn=5e4+5;\nint n,m,k;\nconst int INF=0x3f3f3f3f;\nstruct edge{\n\tint v,w;\n\tedge(){}\n\tedge(int a,int b):v(a),w(b){}\n};\nvector<edge> e[maxn];\nqueue<int> q;\nbool is[maxn];\nint dis[maxn][2],sze[maxn];\nbool vis[maxn];\nvoid spfa(int s){\n    for(int i=1;i<=n;i++)dis[i][0]=dis[i][1]=INF;\n\tmemset(vis,0,sizeof(vis));\n\tdis[s][0]=0;\n\tq.push(s);\n\tvis[s]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(auto E:e[u]){\n\t\t\tint v=E.v,w=E.w;\n                        if(v>1&&v<n&&sze[v]<k)continue;\n\t\t\tif(dis[u][0]+w<dis[v][0]){\n\t\t\t\tdis[v][1]=dis[v][0];\n\t\t\t\tdis[v][0]=dis[u][0]+w;\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}\n\t\t\tif(dis[u][0]+w<dis[v][1]&&dis[u][0]+w!=dis[v][0]){\n\t\t\t\tdis[v][1]=dis[u][0]+w;\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}\n\t\t\tif(dis[u][1]+w<dis[v][1]){\n\t\t\t\tdis[v][1]=dis[u][1]+w;\n\t\t\t\tif(!vis[v])vis[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main(){\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,w;\n\t\tcin>>x>>y>>w;\n\t\te[x].push_back(edge(y,w));\n\t\te[y].push_back(edge(x,w));\n\t}\n    for(int i=2;i<n;i++){\n        memset(is,0,sizeof(is));\n        for(auto E:e[i]){\n            if(!is[E.v])sze[i]++;//\u201c\u6240\u76f4\u63a5\u8fde\u63a5\u7684\u5730\u65b9\u201d\n            is[E.v]=1;\n        }\n    }\n\tspfa(1);\n\tif(dis[n][1]>=INF){\n\t\tcout<<-1;\n\t}\n\telse cout<<dis[n][1];\n\treturn 0;\n}\n```",
        "postTime": 1628992677,
        "uid": 342076,
        "name": "British_Union",
        "ccfLevel": 5,
        "title": "\u5927\u9003\u79bb"
    }
]