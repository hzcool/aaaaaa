[
    {
        "content": "## \u601d\u8def\n\n[\u9996\u53d1\u4e8e\u4e2a\u4eba\u535a\u5ba2\u3002](https://www.xgzepto.cn/post/bzoj-3038)\n\n\n\u6211\u4e0d\u4f1a\u652f\u6301\u533a\u95f4\u5f00\u65b9\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u66b4\u529b\u5355\u70b9\u4fee\u6539\uff0c\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u67e5\u8be2\u3002\n\n\u56e0\u4e3a1e12\u7684\u6570\u5f00\u65b96\u6b21\u5c31\u53d8\u6210\u4e861\uff0c\u6240\u4ee5\u9700\u8981\u4fee\u6539\u7684\u6b21\u6570\u5b9e\u9645\u4e0a\u5f88\u5c11\uff0c\u7528\u5e76\u67e5\u96c6\u53ef\u4ee5\u8df3\u8fc7\u5c0f\u4e8e\u7b49\u4e8e1\u7684\u6570\uff0c\u7136\u540e\u3002\u3002\u3002\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002\u6ca1\u5f00O2\uff0c\u6700\u6162\u7684\u70b9\u5927\u6982\u5c31\u662f250ms\uff0c\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684\u3002\n\n## \u4ee3\u7801\n\n\u975e\u5e38\u77ed\u3002\u3002\u3002\n\n\u6811\u72b6\u6570\u7ec4\u4e24\u884c\u641e\u5b9a\uff0c\u5e76\u67e5\u96c6\u4e00\u884c\u641e\u5b9a\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u662f\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8e1\uff0c\u662f\u7684\u8bdd\u5c31\u66f4\u65b0\u4e00\u4e0bfa\u6570\u7ec4\uff0c\u5177\u4f53\u770b\u4e00\u4e0b\u6ce8\u91ca\u3002\n\n```\n#include <bits/stdc++.h>\n#define maxn 100100\n#define ll long long\nusing namespace std;\nll tree[maxn*4],a[maxn];int fa[maxn],m,n,q,l,r,t;\nint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}//\u5e76\u67e5\u96c6\uff0c\u8def\u5f84\u538b\u7f29\nvoid add(int x,ll y){while(x<=n)tree[x]+=y,x+=(x&-x);}\nll qry(int x){ll r=0;while(x)r+=tree[x],x-=(x&-x);return r;}\nint main(){\n\tscanf(\"%d\",&n);for (int i=1;i<=n;i++)\n\tscanf(\"%lld\",&a[i]),add(i,a[i]),fa[i]=i;scanf(\"%d\",&m);fa[n+1]=n+1;\n\twhile(m--){scanf(\"%d%d%d\",&q,&l,&r);if (l>r) swap(l,r); \n\t\tif (q==1) printf(\"%lld\\n\",qry(r)-qry(l-1));\n\t\telse for (int i=l;i<=r;add(i,(t=(int)sqrt(a[i]))-a[i]),a[i]=t,fa[i]=(a[i]<=1)?i+1:i,i=(find(i)==i)?i+1:fa[i]);\n\t}\n    //\u4e0a\u9762\u8fd9\u884c\u4fe1\u606f\u91cf\u5f88\u5927\u3002\u3002\u3002\u505a\u4e86\u5355\u70b9\u4fee\u6539\u7684\u64cd\u4f5c\uff0ca\u6570\u7ec4\u4fdd\u5b58\u4e86\u6bcf\u4e2a\u70b9\u7684\u5b9e\u9645\u503c\uff0c\u5f53a[i]<=1\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u4e2a\u70b9\uff0c\u7ed3\u675f\u3002\u53ef\u4ee5\u624b\u7b97\u4e00\u4e0b\uff0c\u5c31\u80fd\u5f88\u5feb\u7406\u89e3\u4e86\u3002\n}\n```",
        "postTime": 1525438248,
        "uid": 37158,
        "name": "XG_Zepto",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2\uff08\u82b1\u795e\u6e38\u5386\u5404\u56fd\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u5173\u952e\u5728\u4e8e\uff0csqrt(1)==1\n\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u4e3a1\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u8fd9\u6bb5\u533a\u95f4\u7684\u4fee\u6539\u3002\u53ea\u6709\u6700\u5927\u503c\u5927\u4e8e1\u65f6\u624d\u6709\u4fee\u6539\u7684\u5fc5\u8981\u3002\n\n\n\u800c\u9898\u4e2d\u7684\u6570\u503c\u5927\u5c0f\u8303\u56f4\u5728(0,1e12)\u4e4b\u95f4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u8ba1\u7b97\u5668\u5f97\u77e5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/13485.png)\n\n\u6bcf\u4e2a\u6570\u81f3\u591a\u516d\u6b21\u5f00\u5e73\u65b9\u4fbf\u53ef\u5f97\u52301\n\n\n\u6bcf\u6b21\u66b4\u529b\u4fee\u6539\u590d\u6742\u5ea6\u4e3alogn\uff0c\u603b\u590d\u6742\u5ea6nlogn\u3002\u6570\u636e\u8303\u56f4\u53ea\u67091e5\uff0c\u56e0\u6b64\u4e0d\u7528\u5728\u610f\u5e38\u6570\u7684\u5f71\u54cd\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<cmath>\n#define LL long long\n\nconst int INF = 1000000010;\n\nLL int Read()//\u5feb\u8bfb\n{\n    LL x = 0;char c = getchar();\n    while(!isdigit(c))\n        c = getchar();\n    while(isdigit(c))\n    {\n        x = (x << 3) + (x << 1) + c -'0';\n        c = getchar();\n    }\n    return x;\n}\n\nstruct Node\n{\n    int l, r;\n    LL sum, maxn;\n}seg_tree[400000];  \n\nvoid Update(int p)//\u5411\u4e0a\u4fee\u6539\n{\n    seg_tree[p].sum = seg_tree[p << 1].sum + seg_tree[p << 1 | 1].sum;\n    seg_tree[p].maxn = seg_tree[p << 1].maxn > seg_tree[p << 1 | 1].maxn ? seg_tree[p << 1].maxn : seg_tree[p << 1 | 1].maxn;\n}\n\nLL num[100005];\n\nvoid Build(int p, int l, int r)\n{\n    seg_tree[p].l = l;\n    seg_tree[p].r = r;\n    if(l == r)\n    {\n        seg_tree[p].sum = seg_tree[p].maxn = num[l];\n        return;\n    }\n    int mid = l + r >> 1;\n    Build(p << 1, l, mid);\n    Build(p << 1 | 1, mid + 1, r);\n    Update(p);\n}\n\nvoid Change(int p, int l, int r)\n{\n    if(seg_tree[p].l == seg_tree[p].r)\n    {\n        seg_tree[p].sum = sqrt(seg_tree[p].sum);\n        seg_tree[p].maxn = sqrt(seg_tree[p].maxn);\n        return;\n    }\n    int mid = seg_tree[p].l + seg_tree[p].r >> 1;\n    if(l <= mid && seg_tree[p << 1].maxn > 1)\n        Change(p << 1, l, r);\n    if(mid < r && seg_tree[p << 1 | 1].maxn > 1)\n        Change(p << 1 | 1, l, r);\n    \n    //\u5f53maxn > 1\u65f6\u66b4\u529b\u4fee\u6539\n    \n    Update(p);\n}\n\nLL Query(int p, int l, int r)\n{\n    if(l <= seg_tree[p].l && seg_tree[p].r <= r)\n        return seg_tree[p].sum;\n    int mid = seg_tree[p].l + seg_tree[p].r >> 1;\n    LL ans = 0;\n    if(l <= mid)\n        ans += Query(p << 1,l,r);\n    if(mid < r)\n        ans += Query(p << 1 | 1,l,r);\n    return ans;\n}\n\nint main()\n{\n    int n = Read();\n    for(int i = 1; i <= n; ++i)\n        num[i] = Read();\n    Build(1, 1, n);\n    \n    int m = Read(), opt, l, r;\n    while(m--)\n    {\n        opt = Read(), l = Read(), r = Read();\n        if(l > r)\n        {\n            int swap = l;\n            l = r;\n            r = swap;\n        }\n        if(opt == 0)\n            Change(1,l,r);\n        else\n            printf(\"%lld\\n\",Query(1,l,r));\n    }\n    return 0;\n}\n```",
        "postTime": 1516695157,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2\u3011"
    },
    {
        "content": "### [P4145\u82b1\u795e\u6e38\u5386\u5404\u56fd](https://www.luogu.org/problem/P4145)  \n **\u65f6\u96944\u4e2a\u6708\u518d\u770b\u8fd9\u9053\u9898\uff0c\u77ac\u95f4\u795e\u6e05\u5176\u723d\uff0c\u7406\u89e3\u4e86\u4e0d\u5c11**       \n\u6392\u7248\u3002\u3002\u3002\u6ca1\u95ee\u9898\u5427QAQ  \n\u4e3b\u8981\u8bf4\u4e0b\u672c\u4eba\u5bf9\u7ebf\u6bb5\u6811\u5728\u4e0d\u540c\u9636\u6bb5\u7684\u7406\u89e3\uff0c\u5e0c\u671b\u5bf9\u540e\u6765\u7684OIer\u4eec\u6709\u6240\u5e2e\u52a9  \n\u7b80\u5355\u8bf4\u4e0bA\u8fd9\u9053\u9898\u7684\u5386\u7a0b  \n3.10 \u5f00\u59cb\u7740\u624b\u8fd9\u9053\u9898\uff0c\u7eaf\u66b4\u529b\u6c3440\u5206  \n3.12 \u5199\u4e86\u5feb\u8bfb\uff0c\u5f00\u4e86O2\u8bd5\u56fe\u5361\u8fc7\u53bb\uff08\u5f53\u65f6\u597d\u8822  \n3.13 \u4e71\u641e\u4e00\u901a\uff0c\u5f04\u621010\u5206\uff0c\u5f7b\u5e95\u653e\u5f03  \n4.01 \u4e8e\u662f\u65f6\u95f4\u6765\u5230\u4e86\u611a\u4eba\u8282\uff0c\u7b2c\u4e00\u53d1\u76f4\u63a5\u72060\uff0c\u6700\u540e\u501f\u52a9\u9898\u89e3\u4e00\u8138\u61f5\u903c\u7684\u6284\u8fc7\u4e86  \n\n\n\u7136\u540e\uff0c\u5c31\u4e00\u76f4\u653e\u5230\u4e86\u4eca\u5929\uff0c\u8bf4\u5b9e\u8bdd\uff0c\u6700\u8fd1\u4e24\u5929\u518d\u809d\u7ebf\u6bb5\u6811\u4e13\u9898\uff0c\u6240\u4ee5\u5bf9\u7ebf\u6bb5\u6811\u53c8\u6709\u4e86\u65b0\u7684\u7406\u89e3\u548c\u8ba4\u8bc6  \n\n\u8fd9\u4e2a\u9898\u5728\u7ebf\u6bb5\u6811\u7684\u5177\u4f53\u5206\u7c7b\u4e0a\u53eb\u505a**\u5c0f\u6e05\u65b0\u7ebf\u6bb5\u6811**\uff0c\u867d\u7136\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u5565\u8981\u8fd9\u6837\u53eb\u3002\u5c0f\u6e05\u65b0\u7ebf\u6bb5\u6811\u7684\u6982\u5ff5\u662f\u7531 jiry_2 \u63d0\u51fa\u7684,\u533a\u522b\u4e8e**zkw(\u91cd\u53e3\u5473)** \u7ebf\u6bb5\u6811\u547d\u540d\u3002   \n\u5b9a\u4e49\u662f\u8fd9\u6837\u7684\uff1a\u5c0f\u6e05\u65b0\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5f52\u4e3a\u4e00\u7c7b\u7ed3\u5408\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\u4ee5\u53ca\u61d2\u6807\u8bb0\u5e94\u7528\u7684\u975e\u4f20\u7edf\u7ebf\u6bb5\u6811\u3002  \n\u53cd\u6b63\u6211\u7406\u89e3\u6210\u4e86\u5e26\u7740\u526a\u679d\u7684\u666e\u901a\u7ebf\u6bb5\u6811\u3002  \n\u5177\u4f53\u7684\uff0c\u5c0f\u6e05\u65b0\u7ebf\u6bb5\u6811\u9664\u4e86\u4f20\u7edf\u7684zkw\u7ebf\u6bb5\u6811\u64cd\u4f5c\uff0c\u8fd8\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u6574\u9664\u3001\u533a\u95f4mod\u6570\u3001\u628a\u6570\u53d8\u6210\u6b27\u62c9\u51fd\u6570\u7b49\u5404\u79cd\u9a9a\u64cd\u4f5c\u3002  \nzkw\u548c\u5c0f\u6e05\u65b0\u6700\u5927\u7684\u533a\u522b\uff1a\u524d\u8005\u5e38\u6570\u5c0f\u3001\u8dd1\u7684\u5feb\uff0c\u4f46\u662f\u540e\u8005\u8981\u901a\u8fc7\u52bf\u80fd\u5206\u6790\u786e\u5b9a\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4ece\u800c\u786e\u5b9a\u4ee3\u7801\u600e\u4e48\u5199\uff08\u8dd1\u7684\u4e5f\u4e0d\u6162\uff0c\u4f46\u662f\u8981\u56e0\u9898\u800c\u5f02qwq  \n\n\n\n\u5177\u4f53\u6765\u770b\u9898  \n### [P4145\u82b1\u795e\u6e38\u5386\u5404\u56fd](https://www.luogu.org/problem/P4145)  \n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6709\u4e2a\u552f\u4e00\u7684\u8003\u70b9\uff0c\u5c31\u662f\u5728\u5982\u4f55\u53d6\u6839\u53f7\u4e0a\uff0c\u7531\u4e8e\u671f\u95f4\u4fe1\u606f\u65e0\u6cd5\u5feb\u901f\u66f4\u65b0\uff0c\u6240\u4ee5\u65e0\u6cd5\u4f7f\u7528\u5ef6\u8fdf\u6807\u8bb0lazytag**\uff08\u54e6\uff0c\u8fd9\u592a\u53ef\u6015\u4e86QAQ\uff09** \uff0c\u6240\u4ee5\u5927\u5bb6\u90fd\u6ce8\u610f\u5230\u4e86$ 10^9 $\u6700\u591a\u5f005\u6b21\u5c31\u4e0d\u53d8\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u628a\u4fee\u6539\u66b4\u529b\u9012\u5f52\u4e0b\u53bb\uff0c\u76f4\u5230\u5f53\u524d\u533a\u95f4\u5df2\u7ecf\u5168\u662f0\u62161\u4e3a\u6b62\uff0c\u7136\u540ereturn\u5c31\u597d\u4e86\u3002    \n\u4f3c\u4e4e\u8fd9\u9898\u76ee\u524d\u53ea\u6709\u8fd9\u4e00\u79cd\u89e3\u6cd5\uff0c\u6240\u4ee5\u8bf4\u4e0d\u662f\u975e\u5e38\u7684\u65b0\u9c9c\uff0c**\u672c\u9898\u89e3\u4e3b\u8981\u5c31\u662f\u8bb0\u5f55\u4e00\u79cd\u601d\u60f3\u548c\u5386\u7a0b\uff0c\u5b66\u4e60\u4e00\u79cd\u7ed3\u6784\uff0c\u4e00\u5b9a\u8981\u641e\u6e05\u695a\u539f\u7406\u540e\u518d\u56de\u5934\u770b\u770b\uff0c\u6709\u65f6\u5019\u4f1a\u67f3\u6697\u82b1\u660e\u53c8\u4e00\u6751**   \n\u5173\u4e8e\u4ee3\u7801\u561b\uff0c\u5927\u5bb6\u7684\u5176\u5b9e\u90fd\u5927\u540c\u5c0f\u5f02\uff0c\u558f   \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#define int long long\n#define ls k<<1\n#define rs k<<1|1\nusing namespace std;\n\nconst int maxn=1000005;\nint n,m;\nint a[maxn],maxx[maxn<<2],sum[maxn<<2];\n\ninline int read(){\n    int x=0,w=1;\n    char ch=getchar();\n    for(;ch>'9'||ch<'0';ch=getchar()) if(ch=='-') w=-1;\n    for(;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-'0';\n    return x*w;\n}\n\ninline void up(int k){\n    maxx[k]=max(maxx[ls],maxx[rs]);\n    sum[k]=sum[ls]+sum[rs];\n}\n\ninline void build(int k,int l,int r){\n    if(l==r){\n        sum[k]=maxx[k]=a[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    up(k);\n}\n\ninline void change(int k,int l,int r,int L,int R){\n    if(l==r && l>=L && r<=R){\n        sum[k]=maxx[k]=sqrt(sum[k]);\n        return ;\n    }   \n    int mid=(l+r)>>1;\n    if(L<=mid && maxx[ls]>1) change(ls,l,mid,L,R);\n    if(mid<R && maxx[rs]>1) change(rs,mid+1,r,L,R);\n    up(k);\n}\n\ninline int query(int k,int l,int r,int L,int R){\n    if(L<=l && r<=R) return sum[k];\n    int mid=(l+r)>>1;\n    int ans=0;\n    if(L<=mid) ans+=query(ls,l,mid,L,R);\n    if(mid<R) ans+=query(rs,mid+1,r,L,R);\n    return ans;\n}\n\nsigned main(){\n        n=read();\n        memset(sum,0,sizeof sum);\n        memset(maxx,0,sizeof maxx);\n        for(int i=1;i<=n;i++) a[i]=read();\n        build(1,1,n);\n        m=read();\n        while(m--){\n            int op=read(),l=read(),r=read();\n            if(l>r) swap(l,r);\n            if(op==0) change(1,1,n,l,r);\n            else cout<<query(1,1,n,l,r)<<endl;\n        }\n        cout<<endl;\n}\n```  \n\u7ebf\u6bb5\u6811\u662f\u4e2a\u975e\u5e38\u7f8e\u5999\u7684\u4e1c\u4e1c\uff0c\u65e5\u5747\u4e00\u68f5\u6811\uff0c\u6709\u6613\u4e8e\u8eab\u5fc3\u5065\u5eb7",
        "postTime": 1564317105,
        "uid": 154412,
        "name": "Gary818",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "\u5206\u5757\u8ba9\u4eba\u5feb\u4e50\u3002\n\n\u5f53a[i]=1\u65f6\uff0c\u5f00\u65b9\u4fbf\u4e0d\u518d\u6709\u610f\u4e49\u3002\n\n\u52a0\u4e0a\u6bcf\u4e2a\u6570\u4e0d\u5927\u4e8ele12\uff0c\u6240\u4ee5\u6bcf\u4e2a\u6570\u81f3\u591a\u88ab\u5f00\u65b96\u6b21\u3002\n\n\u76f4\u63a5\u5206\u5757\u66b4\u529b\uff0c\u7ef4\u62a4\u533a\u95f4\u548c\u548c\u4e00\u4e2a\u6807\u8bb0\u8868\u793a\u662f\u5426\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e3a1\u3002\n\n\u5982\u679c\u6bcf\u6b21\u533a\u95f4\u5f00\u65b9\u53ea\u4e0d\u6d89\u53ca\u5b8c\u6574\u7684\u5757\uff0c\u4e0d\u8d85\u8fc72\u221an\u4e2a\u5143\u7d20\uff0c\u76f4\u63a5\u66b4\u529b\u5373\u53ef\u3002\n\n\u5982\u679c\u6d89\u53ca\u4e86\u4e00\u4e9b\u5b8c\u6574\u7684\u5757\uff0c\u8fd9\u4e9b\u5757\u7ecf\u8fc7\u51e0\u6b21\u64cd\u4f5c\u4ee5\u540e\u5c31\u4f1a\u90fd\u53d8\u6210 1\uff0c\u533a\u95f4\u4fee\u6539\u65f6\u8df3\u8fc7\u90a3\u4e9b\u5168\u4e3a 1 \u7684\u5757\u5373\u53ef\u3002\n\n\u4f53\u611f\u4e00\u4e0b\u590d\u6742\u5ea6\u548c\u6bcf\u4e2a\u5143\u7d20\u88ab\u5f00\u65b9\u6b21\u6570\u6709\u5173\uff0c\u6240\u4ee5\u662f\u53ef\u884c\u7684\u3002\n\n```cpp\n#define ll long long\n#include<iostream>\n#include<cstdio>\n#define N 100005\n#include<cmath>\n#define B 400\nusing namespace std;\nint bg[N],l[N],r[N],fl[N],n,m;\nll a[N],sum[N];\nvoid Turn()\n{\n    int u,v;scanf(\"%d%d\",&u,&v);if(u>v) swap(u,v);\n    if(bg[u]==bg[v])\n    {\n        if(fl[bg[u]]) return;\n        for(int i=u;i<=v;++i) sum[bg[u]]-=a[i],a[i]=sqrt(a[i]),sum[bg[u]]+=a[i];\n        if(sum[bg[u]]==r[bg[u]]-l[bg[u]]+1) fl[bg[u]]=1;\n    }\n    else\n    {\n        for(int i=bg[u]+1;i<bg[v];++i)\n        {\n            if(fl[i]) continue;\n            for(int j=l[i];j<=r[i];++j) sum[i]-=a[j],a[j]=sqrt(a[j]),sum[i]+=a[j];\n            if(sum[i]==r[i]-l[i]+1) fl[i]=1;\n        }\n        for(int i=u;i<=r[bg[u]];++i) sum[bg[u]]-=a[i],a[i]=sqrt(a[i]),sum[bg[u]]+=a[i];\n        for(int i=l[bg[v]];i<=v;++i) sum[bg[v]]-=a[i],a[i]=sqrt(a[i]),sum[bg[v]]+=a[i];\n        if(sum[bg[u]]==r[bg[u]]-l[bg[u]]+1) fl[bg[u]]=1;\n        if(sum[bg[v]]==r[bg[v]]-l[bg[v]]+1) fl[bg[v]]=1;\n    }\n}\nvoid Ask()\n{\n    int u,v;ll ans=0;scanf(\"%d%d\",&u,&v);if(u>v) swap(u,v);\n    if(bg[u]==bg[v])\n    {\n        for(int i=u;i<=v;++i) ans+=a[i];\n    }\n    else\n    {\n        for(int i=bg[u]+1;i<bg[v];++i) ans+=sum[i];\n        for(int i=u;i<=r[bg[u]];++i) ans+=a[i];\n        for(int i=l[bg[v]];i<=v;++i) ans+=a[i];\n    }\n    printf(\"%lld\\n\",ans);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%lld\",&a[i]);\n        bg[i]=i/B;\n        l[bg[i]]=!l[bg[i]]?i:l[bg[i]];\n        r[bg[i]]=i;sum[bg[i]]+=a[i];\n    }scanf(\"%d\",&m);\n    for(int i=1;i<=m;++i)\n    {\n        int fl;scanf(\"%d\",&fl);\n        if(fl) Ask();\n        else Turn();\n    }\n    return 0;\n}\n```",
        "postTime": 1516704191,
        "uid": 35718,
        "name": "MloVtry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2\u3011"
    },
    {
        "content": "\u4e00. \u524d\u8a00\n\n\u4e0a\u8bfe\u65f6\u8001\u5e08\u8bb2\u4e86\u8fd9\u9053\u9898\uff0c\u7528\u7684\u662f\u6811\u72b6\u6570\u7ec4+\u5e76\u67e5\u96c6\uff0c\u770b\u4e00\u697c\u5927\u4f6c\u7528\u7684\u4e5f\u662f\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u592a\u5f31\u4e86\uff0c\u6ca1\u6709\u770b\u61c2\uff08\u4e5f\u6709\u70b9\u6643\u773c\uff09\uff0c\u5c31\u5199\u4e86\u4e00\u53d1\u9898\u89e3\u6765\u52a0\u6df1\u8bb0\u5fc6\uff0c\u540c\u65f6\u5e0c\u671b\u53ef\u4ee5\u5e2e\u5230\u548c\u6211\u4e00\u6837\u7684\u840c\u65b0.\n\n\u4e8c. \u5177\u4f53\u89e3\u6cd5\n\n- \u901a\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u5f97\u5230\uff0c\u5728\u6b64\u9898\u6570\u636e\u8303\u56f4\u5185\u4e00\u4e2a\u6570\u5f00\u65b9 6 \u6b21\u5c31\u4e00\u5b9a\u4f1a\u53d8\u6210 1 \uff0c\u6211\u4eec\u5c31\u6ca1\u5fc5\u8981\u518d\u5bf9\u8fd9\u4e2a\u6570\u5f00\u65b9\u4e86\uff0c\u53ef\u4ee5\u5229\u7528\u5e76\u67e5\u96c6\u76f4\u63a5\u8df3\u8fc7.\n\n- \u6211\u4eec\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n\n      \u5bf9\u4e8e\u7b2c i \u4e2a\u6570 a[ i ],\u5f53 a[ i ] \u4e0d\u7b49\u4e8e 1 \u65f6\uff0c\u4ed6\u7684\u7956\u5148\u662f\u4ed6\u81ea\u5df1,\u5373 f[ i ] = i,\u5f53 a[ i ] = 1 \u65f6\uff0cf[ i ] = \u4e0b\u4e00\u4e2a\u4e0d\u7b49\u4e8e 1 \u7684\u6570\u7684\u4f4d\u7f6e j \uff08i < j <=n+1\uff09,\u8fd9\u91cc\u8981\u6ce8\u610f f[ n + 1 ] = n + 1.\n      \n      \u7136\u540e\u6211\u4eec\u5728 l ~ r \u533a\u95f4\u5185\u5bfb\u627e\u7956\u5148\u662f\u81ea\u5df1\u7684\u6570\u4fee\u6539\u5373\u53ef\uff0c\u5177\u4f53\u53ef\u7528\u6307\u9488\u4e0d\u65ad\u66f4\u65b0\uff0cfind \u627e\u7956\u5148.\n      \n- \u7136\u540e\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef.\n\n\u4e09. \u4ee3\u7801\n\n\u52a0\u4e86\u4e2a\u5feb\u8bfb\u6ca1\u5f00 O2 \u6700\u6162\u70b9 45ms, \u5f00 O2 \u6700\u6162\u70b929ms\uff0c\u4ee3\u7801\u53bb\u6389\u7a7a\u884c\u540e40\u6765\u884c\uff0c\u4e5f\u662f\u6bd4\u8f83\u77ed\u4e86.\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff08\u6211\u77e5\u9053\u5404\u4f4d\u5927\u4f6c\u4e5f\u4e0d\u9700\u8981\u4ee3\u7801\uff09\uff1a\n\n```\n#include<iostream>\n#include<cmath>\n\n#define LL long long\n#define N 100010\n\nusing namespace std;\n\nLL c[N<<2],a[N],f[N],n,m,x,l,r,t;\n\nLL find(LL x)\n{\n\treturn f[x]==x?x:f[x]=find(f[x]);//\u4e00\u5b9a\u8def\u5f84\u538b\u7f29\uff0c\u6211T\u4e86\u4e03\u516b\u6b21\u3002\u3002\u3002 \n}\n\nvoid add(LL x,LL y)\n{\n\tfor(;x<=n;x+=x&-x)  c[x]+=y;\n}\n\nLL ask(LL x)\n{\n\tLL res=0;\n\tfor(;x;x-=x&-x)  res+=c[x];\n\treturn res;\n}//\u666e\u901a\u7684\u6811\u72b6\u6570\u7ec4add\u548cask\u51fd\u6570 \n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t\tadd(i,a[i]);\n\t\tf[i]=i;\n\t}//\u521d\u59cb\u5316 \n\tf[n+1]=n+1;//\u56e0\u4e3an\u8981\u5408\u5e76\u5230n+1 \n\t\n\tcin>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>l>>r;\n\t\tif(l>r)  swap(l,r);//\u4ea4\u6362 \n\t\tif(x)  cout<<ask(r)-ask(l-1)<<'\\n';\n\t\telse while(l<=r)//\u8fd9\u91cc\u76f4\u63a5\u7528l\u6a21\u62df\u6307\u9488 \n\t\t{\n\t\t\tLL t=(LL)sqrt(a[l]);//\u8981\u51cf\u5c11a[l]-t\n\t\t\tadd(l,t-a[l]);a[l]=t;//\u66f4\u65b0 \n\t\t\tf[l]=a[l]<=1?l+1:l;//\u5f00\u65b9\u52301\u540e\u76f4\u63a5\u628a\u7236\u4eb2\u66f4\u6539\u4e3a\u4e0b\u4e00\u4e2a\u6570 \n\t\t\tl=f[l]==l?l+1:find(f[l]);//\u5982\u679c\u8fd9\u4e2a\u6570\u6ca1\u6709\u5f00\u65b9\u52301\uff0c\u5230\u4e0b\u4e00\u4e2a\u6570\uff0c\u5426\u5219\u627e\u4e0b\u4e00\u4e2a\u4e3a1\u7684\u6570 \n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n###  _[Plus Ultra!](https://www.luogu.org/blog/OnePunchManGO/)_ ",
        "postTime": 1569124390,
        "uid": 126136,
        "name": "Plus_Ultra",
        "ccfLevel": 0,
        "title": "P4145\u82b1\u795e\u6e38\u5386\u5404\u56fd"
    },
    {
        "content": "#  _**\u672c\u849f\u84bb\u63a5\u89e6OI\u534a\u5e74\u6765\u7b2c\u4e00\u7bc7\u9898\u89e3**_ \n\n\n------------\n##  _**\u597d\u5427\uff0c\u8fdb\u5165\u6b63\u9898\u2014\u2014\u2014\u2014\u5206\u5757\u88f8\u9898**_ \n\n------------\n\u76f8\u540c\u7684\u9898[\u6570\u5217\u5206\u5757\u5165\u95e8 5](https://loj.ac/problem/6281)\n&[GSS4](https://www.luogu.com.cn/problem/SP2713)\n\n\n------------\n\u8fd9\u9053\u9898\u7684\u8bdd\uff0c\u5176\u4ed6\u5f88\u591a\u6570\u636e\u7ed3\u6784\u4e5f\u80fd\u89e3\u51b3\uff0c\u6bd4\u5982\u7ebf\u6bb5\u6811\u4ec0\u4e48\u7684\uff0c\u4f46\u6211\u4eec\u8003\u8651\u5206\u5757\u505a\u6cd5\u3002~~\uff08\u56e0\u4e3a\u4ee3\u7801\u7b80\u5355\uff09~~\n\n\n----------\n# _**\u5206\u5757**_ \uff1a\n\u5c06\u539f\u5e8f\u5217\u5904\u7406\u6210\u82e5\u5e72\u4e2a\u5c0f\u5757\uff0c\u76ee\u7684\u662f\u5c3d\u91cf\u5730\u8fbe\u5230\u5904\u7406\u548c\u8be2\u95ee\u4e4b\u95f4\u7684\u5e73\u8861\u3002\u6bcf\u6b21\u4fee\u6539\u65f6\u5982\u679c\u662f\u6210\u5757\u7684\u5c31\u53ef\u4ee5\u8fdb\u884c\u6253mark\uff08\u6807\u8bb0\uff09\u7b49\u64cd\u4f5c\uff0c\u5426\u5219\u66b4\u529b\u4fee\u6539\uff0c\u6bcf\u6b21\u67e5\u8be2\u65f6\u6210\u5757\u7684\u53ef\u4ee5\u505a\u5230O(1)\u6216O(logn)\u67e5\u8be2\uff0c\u5176\u4f59\u76f4\u63a5\u66b4\u529b\u67e5\u8be2\u3002\n\n## \u518d\u6765\u770b\u672c\u9898\n\u6c42\u548c\u64cd\u4f5c\u4e0d\u96be\u5b9e\u73b0\u53ea\u9700\u8981\u7edf\u8ba1\u6bcf\u5757\u5185\u6570\u7684\u603b\u548c\n\n\u5173\u952e\u5c31\u662f\u5f00\u65b9\u64cd\u4f5c\u4e86\uff0c\u56e0\u4e3a\u4f60\u65e0\u6cd5\u5bf9\u4e00\u6574\u5757\u8fdb\u884c\u5f00\u65b9\u64cd\u4f5c\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u8003\u8651\u5230\u7531\u4e8e\u5f00\u65b9\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\uff0c\u5f00\u65b9\u51e0\u6b21\u540e\u5c31\n\u53d8\u6210\u4e861\uff0c\u4ece\u540e\u518d\u5f00\u65b9\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5bf9\u4e00\u6574\u5757\u90fd\u4e3a1\u7684\n\u5757\u6253\u4e00\u4e0b\u6807\u8bb0\uff0c\u8fd9\u4e9b\u6570\u4ee5\u540e\u4e0d\u7528\u8fdb\u884c\u5f00\u65b9\u64cd\u4f5c\uff0c\u5176\u4f59\u7684\u66b4\u529b\u5904\u7406\u5373\u53ef\u3002\n\n\u5176\u5b9e\u4e0d\u96be\u53d1\u73b0\uff0c\u5373\u4f7f\u662f\u5f00\u65b9\uff0c\u64cd\u4f5c\u91cf\u4e5f\u4e0d\u662f\u5f88\u5927 \u5c31\u62ff\u6700\u5927\u503c 2^31\u6765\n\u8bf4 \u5f005\u6b21\u5e73\u65b9\u5c31\u5df2\u7ecf\u5c0f\u4e8e2\u63a5\u8fd11\u4e86 \u6240\u4ee5\u5f53\u4e00\u4e2a\u6570\u5df2\u7ecf\u5c0f\u4e8e\u7b49\u4e8e1\u7684\u65f6\n\u5019 \u5f00\u65b9\u4e5f\u6ca1\u6709\u4ec0\u4e48\u610f\u4e49\u4e86\uff08\u5411\u4e0b\u53d6\u6574\u4e0d\u662f0\u5c31\u662f1 1^n=1 0^n=0\uff09 \u540c\n\u7406\uff0c\u6211\u4eec\u53c2\u7167\u4e0a\u9762\u7684\u601d\u8def\u5f00\u591a\u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u8fd9\u4e2a\u5757\u5185\u7684\u6570\u662f\u4e0d\u662f\u5168\u90fd\n\u5c0f\u4e8e\u7b49\u4e8e1\u4e86\uff0c\u662f\u7684\u8bdd\u76f4\u63a5\u4e0d\u7528\u66f4\u65b0\u5c31ok\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int maxn=1e5+5;\nll n,m,N,l,r,c,op;\nll s[maxn];ll ans;\nint pos[maxn];//\u6807\u8bb0\u6570\u6240\u5728\u7684\u5757 \nbool vis[maxn];//\u6807\u8bb0\u5f53\u524d\u5757\u662f\u5426\u9700\u8981\u7ee7\u7eed\u5f00\u65b9\nll sum[maxn];//\u5f53\u524d\u5757\u5185\u6570\u7684\u603b\u548c \n\nvoid check_sqrt(int p)//\u5224\u65ad\n{\n\tif(vis[p]>0)\n\treturn;\n\tvis[p]=1;sum[p]=0;\n\tfor(int i=(p-1)*m+1;i<=p*m;i++)\n\t{\n\t\ts[i]=sqrt(s[i]);\n\t\tsum[p]+=s[i];\n\t\tif(s[i]>1)\n\t\tvis[p]=0; \n\t} \n}\n\nvoid change(ll l,ll r,ll c)//\u5f00\u65b9\u4fee\u6539 \n{\n\tif(!vis[pos[l]])\n\t{\n\t\tfor(ll i=l;i<=min(pos[l]*m,r);i++)\n\t\t{\n\t\t\tsum[pos[i]]-=s[i];\n\t\t\ts[i]=sqrt(s[i]);\n\t\t\tsum[pos[i]]+=s[i];\n\t\t}\n\t\tvis[pos[l]]=1;\n\t\tfor(ll i=(pos[l]-1)*m+1;i<=pos[l]*m;i++)//\u5224\u65ad \n\t\tif(s[i]>1)\n\t\t{\n\t\t\tvis[pos[l]]=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(pos[l]!=pos[r]&&vis[pos[r]]==0)\n\t{\n\t\t\n\t\tfor(ll i=(pos[r]-1)*m+1;i<=r;i++)\n\t\t{\n\t\t\tsum[pos[i]]-=s[i];\n\t\t\ts[i]=sqrt(s[i]);\n\t\t\tsum[pos[i]]+=s[i];\n\t\t}\n\t\tvis[pos[r]]=1;\n\t\tfor(ll i=(pos[r]-1)*m+1;i<=pos[r]*m;i++)//\u5224\u65ad \n\t\tif(s[i]>1)\n\t\t{\n\t\t\tvis[pos[r]]=0;\n\t\t\tbreak;\n\t\t}\t\t\n\t}\n\tfor(ll i=pos[l]+1;i<=pos[r]-1;i++)\n\tcheck_sqrt(i);\n}\n\nvoid getsum(ll l,ll r)//\u6c42\u548c \n{\n\tans=0;\n\tfor(ll i=l;i<=min(pos[l]*m,r);i++)\n\tans=ans+s[i];\n\tif(pos[l]!=pos[r])\n\t{\n\t\tfor(ll i=(pos[r]-1)*m+1;i<=r;i++)\n\t\tans=ans+s[i]; \n\t}\n\tfor(ll i=pos[l]+1;i<=pos[r]-1;i++)\n\tans=ans+sum[i];\n\tprintf(\"%lld\\n\",ans);\n}\n\nint main(){\n\tscanf(\"%lld\",&n);m=sqrt(n);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%lld\",&s[i]);\n\tcin>>N;\n\tfor(int i=1;i<=n;i++)//\u6807\u8bb0\u6570\u6240\u5728\u7684\u5757 \n\tpos[i]=(i-1)/m+1;\n\tfor(int i=1;i<=n;i++)\n\tsum[pos[i]]+=s[i];\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tscanf(\"%lld%lld%lld\",&op,&l,&r);\n\t\tif(l>r)\n\t\tswap(l,r);\n\t\tif(op==0)\n\t\tchange(l,r,c);\n\t\tif(op==1)\n\t\tgetsum(l,r);\n\t}\n\treturn 0;\n} \n```\n#### ~~\u6700\u540e\uff0c\u6211\u7231\u5206\u5757\uff0c\u6211\u7231\u66b4\u529b~~\n\n\n\n\n",
        "postTime": 1579232654,
        "uid": 229376,
        "name": "Out_of_control",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "\u8fd9\u79cd\u533a\u95f4\u4fee\u6539\u7684\u9898\u76ee\uff0c\u600e\u4e48\u80fd\u5c11\u4e86\u73c2\u6735\u8389\u6811\u5462QAQ\n\n\u7ffb\u904d\u9898\u89e3\u533a\uff0c\u4e5f\u6ca1\u6709\u627e\u5230\u73c2\u6735\u8389\u6811\u7684\u7b97\u6cd5QwQ\n\n![](https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=652991353,583400638&fm=26&gp=0.jpg)\n\n\u4e8e\u662f\u672c\u849f\u84bb\u5c31\u6765\u732e\u4e11\u4e86QwQ\n\n\u9996\u5148\u73c2\u6735\u8389\u6811\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u652f\u6301\u5408\u5e76\u548c\u5206\u88c2\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u76ee\u53ef\u4ee5\u7528\u73c2\u6735\u8389\u505a\uff08\u4e8b\u5b9e\u4e0a\uff0c\u57fa\u672c\u4e0a\u80fd\u7528\u5206\u5757\u505a\u7684\u9898\u76ee\uff0c\u4e00\u822c\u90fd\u53ef\u4ee5\u7528\u73c2\u6735\u8389\u6811\u8fc7\uff09\n\n\u6211\u4eec\u89c2\u5bdf\u5230$10^{12}$\u4ee5\u5185\u7684\u6570\uff0c\u6700\u591a\u53ea\u9700\u8981\u5f00$6$\u6b21\u65b9\uff0c\u5c31\u53ef\u4ee5\u53d8\u62101\uff0c\u800c$\\sqrt 1=1$\uff0c\u5f88\u660e\u663e\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u53ea\u8981\u4fee\u6539\u64cd\u4f5c\u8db3\u591f\u591a\uff0c\u90a3\u4e48\u5230\u6700\u540e\u51e0\u4e4e\u53ef\u4ee5\u5168\u90e8\u53d8\u6210$1$\uff0c\u4e3a\u6b64\uff0c\u6211\u4eec\u60f3\u5230\u4e86\u73c2\u6735\u8389\u6811\u7684\u505a\u6cd5\u3002\n\n\u4ee3\u7801:\n```\n//Copyright (c) 2019 by xiao_mmQF. All Rights Reserved.\n#include<bits/stdc++.h>\n#include<bits/extc++.h>\n#define int long long\n#define inl inline\n#define reg register\n#define db long double\nusing namespace std;\nusing namespace __gnu_pbds;\nconst int MAXN=100050;\ninl int read(){ int x=0,f=0; char ch=0; while(!isdigit(ch))f|=(ch=='-'),ch=getchar(); while(isdigit(ch))(x*=10)+=(ch^48),ch=getchar(); return f?-x:x; }\ninl void Print(reg int x) { if(x<0)putchar('-'),x=-x; if(x>=10)Print(x/10); putchar(x%10+'0'); }\ninl void Println(reg int x){Print(x);putchar('\\n');}\ninl int Max(reg int x,reg int y){return x>y?x:y;}\ninl int Min(reg int x,reg int y){return x<y?x:y;}\ninl int Abs(reg int x){return x<0?-x:x;}\n//\u4ee5\u4e0a\u662f\u6a21\u677f\nstruct Node{\n    int l,r;\n    mutable int val;//mutable\u7528\u6765\u5904\u7406\u64cd\u4f5c\n    bool operator<(const Node &rhs)const{\n        return l<rhs.l;\n    }\n};\nset<Node>st;\n#define It set<Node>::iterator\nIt split(int pos){\n    It iter=st.lower_bound((Node){pos,0,0});\n    if(iter!=st.end()&&iter->l==pos)return iter;\n    iter--;\n    int l=iter->l,r=iter->r,val=iter->val;\n    if(pos>iter->r)return st.end();\n    st.erase(iter);\n    st.insert((Node){l,pos-1,val});\n    return st.insert((Node){pos,r,val}).first;\n}\n//\u6807\u51c6\u7684split\u64cd\u4f5c\nvoid assign(int l,int r,int val){\n    It iter2=split(r+1),iter=split(l);\n    st.erase(iter,iter2);\n    st.insert((Node){l,r,val});\n}\n//\u6807\u51c6\u7684assign\u64cd\u4f5c\ninl void chg(reg int l,reg int r){\n    reg int tl=0,tr=0,val=0;\n    It ir=split(r+1),il=split(l);\n    for(It iter=il;iter!=ir;iter++){\n        if(iter->val!=1)iter->val=sqrt(iter->val);//\u6734\u7d20\u5f00\u65b9\n        if(iter->val==val)tr=iter->r;//\u83b7\u5f97\u8fde\u7eed\u533a\u95f4\u7684\u503c\n        else {\n            if(val)//\u7b2c\u4e00\u6b21val\u7684\u521d\u503c\u662f0\uff0c\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\n            assign(tl,tr,val);//\u63a8\u5e73\u533a\u95f4\n            tl=iter->l,tr=iter->r,val=iter->val;\n        }\n    }\n    assign(tl,tr,val);//\u63a8\u5e73\u533a\u95f4\n}\n//\u5f00\u65b9\u64cd\u4f5c\ninl int query(reg int l,reg int r){\n    int ret=0;\n    for(reg It iter2=split(r+1),iter=split(l);iter!=iter2;iter++)\n    ret+=(iter->r-iter->l+1)*iter->val;//\u6734\u7d20\u64cd\u4f5c\n    return ret;\n}\n//\u67e5\u8be2\u64cd\u4f5c\nint n,m;\nint a[MAXN];\nsigned main(){\n    n=read();\n    for(reg int i=1;i<=n;i++)\n    a[i]=read(),st.insert((Node){i,i,a[i]});//\u521d\u59cb\u5316\u73c2\u6735\u8389\u6811\n    m=read();\n    while(m--){\n        // for(reg It iter=st.begin();iter!=st.end();iter++)\n        // printf(\"[%lld %lld %lld]\\n\",iter->l,iter->r,iter->val);//DEBUG \u7528\n        int op=read(),l=read(),r=read();\n        if(l>r)swap(l,r);//\u5fd8\u4e86\u8fd9\u53e5\u8bddT5\u4e2a\u70b9QAQ\n        if(op==1)Println(query(l,r));\n        else chg(l,r);\n    }\n    return 0;\n}\n\n```\n\n\u80fd\u7528\u5206\u5757\u7684\u9898\u57fa\u672c\u90fd\u80fd\u7528\u73c2\u6735\u8389\u54e6\uff01~~\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389.jpg~~",
        "postTime": 1567648996,
        "uid": 58399,
        "name": "\u72f8\u72f8\u517b\u7684\u654f\u654f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u5bf9\u7ebf\u6bb5\u6811\u7684\u53c8\u4e00\u6b21\u900f\u5f7b\n\n\u6709\u4e00\u6b21\u8003\u8bd5\u8003\u7684\u8fd9\u9053\u9898\n\n\u849f\u84bb\u4fe1\u5fc3\u6162\u6162\u7684\u6253\u4e86\u8fd9\u7bc7\u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(3)\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<map>\n#include<stack>\n#include<list>\n#include<set>\n#include<deque>\n#include<vector>\n#include<ctime>\n#define ll long long\n#define inf 0x7fffffff\n#define N 500008\n#define IL inline\n#define M 1008611\n#define D double\n#define ull unsigned long long\n#define R register\nusing namespace std;\ntemplate<typename T>void read(T &a)\n{\n    T x=0,f=1;char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-')f=0;ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=(x<<1)+(x<<3)+ch-'0';ch=getchar();\n    }\n    a=f?x:-x;\n}\n/*-------------OI\u4f7f\u6211\u5feb\u4e50-------------*/\nll num[N];\nll n,m;\nIL void xiugai(ll le,ll ri){\n\tif(le==ri) {\n\t\tnum[le]=floor(sqrt(num[le]));\n\t    return;\n\t}\n\tll mid=(le+ri)>>1;\n\txiugai(le,mid);xiugai(mid+1,ri);\n}\nIL ll qury(ll le,ll ri){\n\tif(le==ri) return num[le];\n\tll mid=(le+ri)>>1;\n\treturn qury(le,mid)+qury(mid+1,ri);\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n    read(n);\n    for(R ll i=1;i<=n;++i) read(num[i]);\n    read(m);\n    while(m--){\n    \tll key,xi,yi;\n    \tread(key);read(xi);read(yi);\n    \tif(xi>yi) swap(xi,yi);\n    \tif(key==0) xiugai(xi,yi);\n    \telse printf(\"%lld\\n\",qury(xi,yi));\n\t}\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n\n```\n\n\u5f53\u65f6\u849f\u84bb\u5929\u771f\u7684\u4ee5\u4e3a\u8fd9\u7bc7\u4ee3\u7801\u4f1a\u6253\u51fa\u4e8c\u5206logn\u7684\u590d\u6742\u5ea6\n\n\u53ef\u662f\u73b0\u5b9e [\u5341\u5206\u6b8b\u9177](https://www.luogu.org/record/show?rid=10416051)\n\n\u53ea\u62ff\u4e86\u66b4\u529b\u5206 \u53ea\u597d\u53bb\u67e5\u8be2\u6b63\u89e3\n\n# \u6b63\u89e3 \uff1a \u7384\u5b66\u7ebf\u6bb5\u6811\n\n\n-----------------------------------\u5410\u69fd\u65f6\u95f4--------------------------------------\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u5c0f\u5b9a\u7406 \uff1a\n\n0\u00d70=0 \u2234sqrt(0)=0\n\n1\u00d71=1 \u2234sqrt(1)=1\n\n\u6240\u4ee5 \u4f46\u4e00\u4e2a\u6570\u5217\u4e2d\u7684\u6570\u503c \u53ea\u662f1\u6216\u80050\u65f6 \u76f4\u63a5pass\n\n\u800c\u4e00\u4e2a\u6570\uff08<=10^12\uff09 \u9876\u591a\u5f00\u65b9\u52a0\u4e0b\u53d6\u6574\u4e0d\u523010\u6b21\n\n\u5c31\u4e3a\u6210\u4e3a\u8fd9\u4e2a\u5b8c\u7f8e\u7684\u6570\u503c\n\n\u2234\u6211\u4eec\u7ed9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u5e8f\u5217 \u6253\u4e0a\u6807\u8bb0\n\n# \u5168\u662f 1 \u6216 0 \u5c31\u76f4\u63a5pass\n\n\u66b4\u529b\u5f00\u65b9\u5230\u76ee\u6807\u72b6\u6001\u4e0d\u4f1a\u8017\u8d39\u592a\u591a\u65f6\u95f4\n\n\u5b8c\u7f8eAC\n\n# CODE\uff1a\n\n```cpp\n#pragma GCC optimize(3)\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<map>\n#include<stack>\n#include<list>\n#include<set>\n#include<deque>\n#include<vector>\n#include<ctime>\n#define ll long long\n#define inf 0x7fffffff\n#define N 500008\n#define IL inline\n#define M 1008611\n#define D double\n#define ull unsigned long long\n#define R register\nusing namespace std;\ntemplate<typename T>void read(T &a)\n{\n    T x=0,f=1;char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-')f=0;ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=(x<<1)+(x<<3)+ch-'0';ch=getchar();\n    }\n    a=f?x:-x;\n}\n/*-------------OI\u4f7f\u6211\u5feb\u4e50-------------*/\nstruct node{\n\tll num;\n\tbool flag;//\u5e8f\u5217\u662f\u5426\u4e3a\u76ee\u6807\u5e8f\u5217\u7684\u6807\u8bb0\n}tre[N];\nll n,m;\nll zhi[N];\nIL void build(ll si,ll le,ll ri){\n\tif(le==ri){\n\t\ttre[si].num=zhi[le];\n\t\ttre[si].flag=(tre[si].num==1 || tre[si].num==0);\n\t\treturn;\n\t}\n\tll mid=(le+ri)>>1;\n\tbuild(si<<1,le,mid);build(si<<1|1,mid+1,ri);\n\ttre[si].num=tre[si<<1].num+tre[si<<1|1].num;\n\ttre[si].flag=tre[si<<1].flag&tre[si<<1|1].flag;//\u6807\u8bb0\u7ef4\u62a4\n}\nIL void update(ll si,ll lenow,ll rinow,ll le,ll ri){\n\tif(tre[si].flag) return;//\u662f\u5219\u76f4\u63a5pass\n\tif(lenow==rinow) \n\t{\n\t\ttre[si].num=floor(sqrt(tre[si].num));\n\t\ttre[si].flag=(tre[si].num==1 || tre[si].num==0);\n\t\treturn;\n\t}\n\tll mid=(lenow+rinow)>>1;\n\tif(le<=mid) update(si<<1,lenow,mid,le,ri);\n\tif(mid<ri) update(si<<1|1,mid+1,rinow,le,ri);\n\ttre[si].num=tre[si<<1].num+tre[si<<1|1].num;\n\ttre[si].flag=tre[si<<1].flag&tre[si<<1|1].flag;//\u7ef4\u62a4\u6807\u8bb0\n}\nIL ll qury(ll si,ll lenow,ll rinow,ll le,ll ri){\n\tif(le<=lenow && rinow<=ri){\n\t\treturn tre[si].num;\n\t}\n\tll mid=(lenow+rinow)>>1,ans=0;\n\tif(le<=mid) ans+=qury(si<<1,lenow,mid,le,ri);\n\tif(mid<ri) ans+=qury(si<<1|1,mid+1,rinow,le,ri);\n\treturn ans;\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n    read(n);\n    for(R int i=1;i<=n;++i) read(zhi[i]);\n    build(1,1,n);\n\tread(m);\n\twhile(m--){\n\t\tll key,xi,yi;\n\t\tread(key);read(xi);read(yi);\n\t\tif(xi>yi) swap(xi,yi);\n\t\tif(key==0) update(1,1,n,xi,yi);\n\t\tif(key==1) printf(\"%lld\\n\",qury(1,1,n,xi,yi));\n\t\t\n\t}\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n\n```\n\nNOIP 2018 \u5373\u5c06\u5230\u6765 \n\n\u8877\u5fc3\u795d\u613f\u5404\u4f4d RP++ \u5168\u573aAK",
        "postTime": 1535887969,
        "uid": 87931,
        "name": "tcswuzb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "10\u5206\u949f\u7adf\u7136\u5207\u4e86\u9053\u84dd\u9898\uff0c\u5f00\u68ee\n\n------------\n**\u9898\u76ee\u5927\u610f**\uff1a\n\n\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u5f00\u65b9\u4e0e\u6c42\u548c\u64cd\u4f5c\u3002\n\n**\u7b97\u6cd5**\uff1a\u7ebf\u6bb5\u6811\u5b9e\u73b0**\u5f00\u65b9\u4fee\u6539**\u4e0e\u533a\u95f4\u6c42\u548c\n\n**\u5206\u6790**\uff1a\n-  \u663e\u7136\uff0c\u8fd9\u9053\u9898\u7684\u6c42\u548c\u64cd\u4f5c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\n- \u4f46\u662f\u5982\u4f55\u6765\u5b9e\u73b0\u533a\u95f4\u5f00\u65b9\u5462\n- \u5927\u5bb6\u6709\u6ca1\u6709\u8fd9\u6837\u7684\u7ecf\u5386\uff1a\u73a9\u8ba1\u7b97\u5668\u7684\u65f6\u5019\uff0c**\u628a\u4e00\u4e2a\u6570\u75af\u72c2\u7684\u6309\u5f00\u65b9\uff0c\u6700\u540e\u603b\u4f1a\u53d8\u6210 $1$\uff0c\u4e4b\u540e\u5728\u600e\u6837\u5f00\u65b9\u4e5f\u662f $1$ ($\\sqrt1=1$)**\n- \u540c\u6837\u7684\uff0c$\\sqrt0=0$\n- **\u6240\u4ee5\uff0c\u53ea\u8981\u4e00\u6bb5\u533a\u95f4\u91cc\u7684\u6240\u6709\u6570\u5168\u90fd $\\leq 1$ \u4e86\uff0c\u4fbf\u53ef\u4ee5\u4e0d\u53bb\u4fee\u6539\u5b83**\n\n**\u5b9e\u73b0**\uff1a\n- \u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c $sum$ \u4e0e\u6700\u5927\u503c $Max$\n- \u5728\u4fee\u6539\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u53bb\u4fee\u6539 $Max > 1$ \u7684\u533a\u95f4\n- \u5230\u4e86\u53f6\u5b50\u8282\u70b9\u5bf9$sum$\u548c$Max$\u8fdb\u884c\u5f00\u65b9\u5c31\u884c\u4e86\n\n**\u590d\u6742\u5ea6**\uff1a\n- \u6bcf\u4e2a\u6570 $\\leq 10 ^ {12}$,\u6240\u4ee5\u81f3\u591a\u5f00\u65b9$6$\u6b21\u4fbf\u53ef\u4ee5\u5f97\u5230$1$\n- \u6bcf\u6b21\u64cd\u4f5c\u662f $\\log n$\u7684\uff0c\u603b\u590d\u6742\u5ea6$O(n \\log n)$\n\n**\u6ce8\u610f\u4e8b\u9879**\uff1a\n- **\u8bf7\u4f7f\u7528long long**\n- **\u53ef\u80fd $l > r$**~~(\u628a\u6211\u5751\u4e86)~~\n\n**\u4ee3\u7801**:\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\n\nusing namespace std;\ntypedef long long LL;\nconst int MAXN = 100100;\n\nint n, m;\nint cnt;\nLL a[MAXN];\nstruct node\n{\n\tint left, right;\n\tLL s, Max;\n\tnode *ch[2];\n}pool[MAXN << 2], *root;\n\ninline void pushup(node *r)\n{\n\tr->s = r->ch[0]->s + r->ch[1]->s;\n\tr->Max = max(r->ch[0]->Max, r->ch[1]->Max);\n}\n\ninline void Build_Tree(node *r, int left, int right)\n{\n\tr->left = left;\n\tr->right = right;\n\tif(left == right)\n\t{\n\t\tr->s = r->Max = a[left];\n\t\treturn ;\n\t}\n\tint mid = (left + right) / 2;\n\tnode *lson = &pool[++cnt];\n\tnode *rson = &pool[++cnt];\n\tr->ch[0] = lson;\n\tr->ch[1] = rson;\n\tBuild_Tree(lson, left, mid);\n\tBuild_Tree(rson, mid + 1, right);\n\tpushup(r);\n}\n\ninline void change(node *r, int left, int right)\n{\n\tif(r->left == r->right)\n\t{\n\t\tr->s = sqrt(r->s);\n\t\tr->Max = sqrt(r->Max);\n\t\treturn ;\n\t}\n\t\n\tint mid = (r->left +r-> right) / 2;\n\tif(left <= mid && r->ch[0]->Max > 1) change(r->ch[0], left, right);\n\tif(mid < right && r->ch[1]->Max > 1) change(r->ch[1], left, right);\n\tpushup(r);\n}\n\ninline LL query(node *r, int left, int right)\n{\n\tif(r->left == left && r->right == right)\n\t\treturn r->s;\n\tif(r->ch[0]->right >= right) return query(r->ch[0], left, right);\n\telse if(r->ch[1]->left <= left) return query(r->ch[1], left, right);\n\telse\n\t\treturn query(r->ch[0], left, r->ch[0]->right) + \n\t\t       query(r->ch[1], r->ch[1]->left, right);\n}\nint main()\n{\n    scanf(\"%d\", &n);\n    root = &pool[0];\n    for(int i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\n    scanf(\"%d\", &m);\n    Build_Tree(root, 1, n);\n    for(int i = 1; i <= m; i++)\n    {\n    \tint opt, l, r;\n    \tscanf(\"%d%d%d\", &opt, &l, &r);\n    \tif(l > r) swap(l, r);\n    \tif(opt) printf(\"%lld\\n\", query(root, l, r));\n    \telse change(root, l, r);\n\t}\n \treturn 1; //\u9632\u6284\n}\n```\n\n\n\n",
        "postTime": 1520152491,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2\uff08\u82b1\u795e\u6e38\u5386\u5404\u56fd\uff09\u3011"
    },
    {
        "content": "\u6ca1\u6709Pascal\u9898\u89e3\uff0c\u6765\u4e00\u53d1~~~\n\n\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f\u7ebf\u6bb5\u6811\u7ecf\u5178\u9898\uff08\u5f53\u7136\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7528\u5206\u5757\uff09\u3002\n\n\u9996\u5148\uff0c\u76f4\u63a5\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u7528\u5355\u70b9\u4fee\u6539\u3002\n\n\u4e0d\u8fc7\uff0c\u8fd9\u6837\u7684\u6548\u7387\u5f88\u4f4e\u3002\u8003\u8651\u50cf\u641c\u7d22\u4e00\u6837\u526a\u679d\u3002\n\n\u663e\u7136\uff0c$\\lfloor \\sqrt{1} \\rfloor=1$\uff0c\u6240\u4ee5\u5f53\u4e00\u4e2a\u70b9\u7b49\u4e8e$1$\u65f6\u5c31\u6ca1\u6709\u66f4\u65b0\u7684\u5fc5\u8981\u4e86\u3002\n\n\u540c\u7406\uff0c\u5f53\u4e00\u4e2a\u533a\u95f4\u91cc\u9762\u5168\u662f$1$\u7684\u8bdd\uff0c\u4e5f\u5c31\u6ca1\u6709\u66f4\u65b0\u7684\u5fc5\u8981\u4e86\u3002\u8fd9\u91cc\u8bf4\u6570\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u90fd\u5927\u4e8e$0$\uff0c\u6211\u4eec\u53ea\u8981\u5224\u65ad\u533a\u95f4\u548c\u662f\u5426\u7b49\u4e8e$r-l+1$\u5c31\u884c\u4e86\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u8f7b\u677e\u7684\u5199\u51fa\u4ee3\u7801\uff08\u7ebf\u6bb5\u6811\u7248\uff09\uff1a\n\n```pas\nvar\n  a:array[1..100000]of int64;\n  s:array[1..400000]of int64;  //\u7ebf\u6bb5\u6811\u4e00\u822c\u6570\u7ec4\u5f004\u500d\n  n,q,i,l,r,x,t:longint;\nprocedure pushup(x:longint);   //\u5411\u4e0a\u66f4\u65b0\nbegin\n  s[x]:=s[x*2]+s[x*2+1];\nend;\nprocedure build(l,r,x:longint);//\u5efa\u6811\nbegin\n  if l=r then\n  begin\n    s[x]:=a[l];\n    exit;\n  end;\n  build(l,(l+r) div 2,x*2);\n  build((l+r) div 2+1,r,x*2+1);\n  pushup(x);\nend;\nprocedure update(l,r,tl,tr,x:longint);//\u66f4\u65b0\nbegin\n  if l=r then                  //\u5355\u70b9\u4fee\u6539\n  begin\n    s[x]:=trunc(sqrt(s[x]));\n    exit;\n  end;\n  if (l>=tl) and (r<=tr) and (s[x]=r-l+1) then//\u628a\u5168\u662f1\u7684\u533a\u95f4\u526a\u679d\u526a\u6389\u4e86\n    exit;\n  if tl<=(l+r) div 2 then\n    update(l,(l+r) div 2,tl,tr,x*2);\n  if tr>(l+r) div 2 then\n    update((l+r) div 2+1,r,tl,tr,x*2+1);\n  pushup(x);\nend;\nfunction query(l,r,tl,tr,x:longint):int64;//\u67e5\u8be2\nbegin\n  if (l>=tl) and (r<=tr) then\n    exit(s[x]);\n  query:=0;\n  if tl<=(l+r) div 2 then\n    inc(query,query(l,(l+r) div 2,tl,tr,x*2));\n  if tr>(l+r) div 2 then\n    inc(query,query((l+r) div 2+1,r,tl,tr,x*2+1));\n  pushup(x);\nend;\nbegin\n  read(n);\n  for i:=1 to n do\n    read(a[i]);\n  build(1,n,1);\n  read(q);\n  for i:=1 to q do\n  begin\n    read(x,l,r);\n    if l>r then                //\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff01r\u53ef\u80fd\u5927\u4e8el\n    begin\n      t:=l;\n      l:=r;\n      r:=t;\n    end;\n    if x=0 then\n      update(1,n,l,r,1)\n    else\n      writeln(query(1,n,l,r,1));\n  end;\nend.\n```",
        "postTime": 1544962798,
        "uid": 40241,
        "name": "dblark",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "\u5f00\u65b9\u4ec0\u4e48\u9b3c\u554a\uff0c\u53ea\u80fd\u66b4\u529b\u4fee\u6539...\n\n\n\u4f46\u662f$\\sqrt{1}=1$\uff0c$\\sqrt{0}=0$\uff0c\u800c\u4e14\u5f00\u65b9\u4e5f\u4e0d\u8fc7$log$\u6b21\uff0c\u90a3\u5c31\u53ef\u4ee5\u5f88\u66b4\u529b\u7684\u4f18\u5316\u4e86\u3002\u3002\n\n\n\u6ce8\u610f\u8f93\u5165\u6570\u636e\u53ef\u80fd\u6709$l>r$\uff0c~~\u6211\u77e5\u9053\u9898\u9762\u4e0a\u5199\u7684\u6709\uff0c\u8fd9\u4e0e\u6211\u5fd8\u8bb0\u5224\u65ad\u5e76\u4e0d\u77db\u76fe~~\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define ls x << 1\n#define rs x << 1 | 1\nconst int MAX = 110000;\nint n, m;\nint read()\n{\n    int x = 0, f = 1; char ch = getchar();\n    while (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\n    while (isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }\n    return x * f;\n}\nstruct SegmentTree\n{\n    int sum[MAX << 2]; bool tag[MAX << 2];\n    void pushup(int x, int l, int r)\n    {\n        sum[x] = sum[ls] + sum[rs];\n        tag[x] = (tag[ls] & tag[rs]);\n    }\n    void update(int x, int l, int r, int L, int R)\n    {\n        if (tag[x]) return;\n        if (l == r)\n        {\n            sum[x] = sqrt(sum[x]);\n            if (sum[x] == 0 || sum[x] == 1)\n                tag[x] = 1;\n            return;\n        }\n        int mid = (l + r) >> 1;\n        if (L <= mid) update(ls, l, mid, L, R);\n        if (R > mid) update(rs, mid + 1, r, L, R);\n        pushup(x, l, r);\n    }\n    int query(int x, int l, int r, int L, int R)\n    {\n        if (L <= l && r <= R)\n            return sum[x];\n        int mid = (l + r) >> 1, re = 0;\n        if (L <= mid) re += query(ls, l, mid, L, R);\n        if (R > mid) re += query(rs, mid + 1, r, L, R);\n        return re;\n     }\n     void buildtree(int x, int l, int r)\n     {\n         if (l == r)\n         {\n             sum[x] = read();\n             tag[x] = (sum[x] == 0 || sum[x] == 1);\n             return;\n         }\n         int mid = (l + r) >> 1;\n         buildtree(ls, l, mid);\n         buildtree(rs, mid + 1, r);\n         pushup(x, l, r);\n     }\n} sgt;\nmain()\n{\n    n = read();\n    sgt.buildtree(1, 1, n);\n    m = read();\n    while (m--)\n    {\n        int opt = read(), L = read(), R = read();\n        if (L > R) swap(L, R);\n        if (opt) printf(\"%lld\\n\", sgt.query(1, 1, n, L, R));\n        else sgt.update(1, 1, n, L, R);\n    }\n    return 0;\n}\n```",
        "postTime": 1516694686,
        "uid": 37070,
        "name": "Ameyax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2\u3011"
    },
    {
        "content": "/*$upd\\ on 2018/11/6$*/\n\n\u4e4b\u524d\u7684\u535a\u5ba2\u94fe\u63a5$404$\u4e86\uff0c\u5df2\u7ecf\u4fee\u590dqwq\n\n~~\u6211\u7231\u5206\u5757~~\n\n\u542c\u8bf4\u5f00\u6839\u548c\u5206\u5757\u66f4\u914d\u54e6\n\n\u8fd9\u9053\u9898\u4e00\u770b\u5c31\u662f\u5206\u5757\u88f8\u9898\u554a$\\text{qwq}$\n\n$\\text{orz}$\u7ebf\u6bb5\u6811$\\text{dalao}$\u4eec\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u7edf\u8ba1\u51fa\u5b83\u7684\u603b\u548c\uff0c\u4ee5\u53ca\u4ed6\u73b0\u5728\u662f\u4e0d\u662f$1$\n\n\u56e0\u4e3a\u53d1\u73b0\u57fa\u672c\u4e0a$\\sqrt{\\sqrt{\\sqrt{\\sqrt{\\sqrt{\\sqrt n}}}}}$\u90fd\u7b49\u4e8e$1$\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u6bcf\u4e2a\u5757\uff0c\u6700\u591a\u5f00$6$\u6b21\u65b9\uff0c\u6253\u4e2a\u6807\u8bb0\u5173\u4e8e\u5176\u662f\u5426\u5168\u4e3a$1$\u5373\u53ef\n\n\u7136\u540e\u8fb9\u5757\u89d2\u5757\u66b4\u529b\u5f00\u6839\uff0c\u8bb0\u5f97\u8981\u5148\u7528\u603b\u548c\u51cf\u53bb\u5f53\u524d\u503c\uff0c\u5f00\u6839\u540e\u518d\u52a0\u4e0a\uff0c\u5c31\u53ef\u4ee5\u7b97\u51fa\u7b54\u6848\u4e86\n\n\u6bcf\u6b21\u8fb9\u5757\u89d2\u5757\u4fee\u6539\u540e\u4e5f\u7edf\u8ba1\u4e00\u4e0b\u662f\u5426\u5168\u4e3a$1$\uff0c\u8bf4\u4e0d\u5b9a\u7528\u51e0\u6b21$O(\\sqrt n)$\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5927\u5927\u51cf\u5c0f\u5e38\u6570~~\u5bf9\u4e8e\u975e\u6d32\u4eba\u6765\u8bf4\u5f88\u6709\u5fc5\u8981\u7684~~\n\n\u8fd8\u6709\u5c31\u662f\u5173\u4e8e\u5206\u5757\u5757\u5927\u5c0f\u7684\u95ee\u9898\uff0c\u6211\u8fd9\u91cc\u662f\u6309\u7167\u7406\u8bba\u6700\u4f18$\\sqrt{\\frac{n+2}{3}}$\u5904\u7406\u7684\uff0c[\u5177\u4f53\u8bc1\u660e\u53ef\u4ee5\u770b\u6211\u7684\u535a\u5ba2](http://blog.illusionalsky.cn/184/)\n\n\u4e0a\u4ee3\u7801qwq\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nint belong[100010],isone[4000],sum[4000];\nint a[100010],n,m,block;\nvoid update(int blockn)\n{\n    for(int i=(blockn-1)*block+1;i<=blockn*block;i++)\n    {\n        if(a[i]!=1)\n        {\n            isone[blockn]=0;\n            return ;\n        }\n    }\n    isone[blockn]=1;\n}\nvoid getsqrt(int l,int r)\n{\n    int flag=0;\n    for(int i=l;i<=min(r,belong[l]*block);i++)\n    {\n        if(isone[belong[l]])\n        {\n            flag=1;\n            break;\n        }\n        sum[belong[i]]-=a[i];\n        a[i]=sqrt(a[i]);\n        sum[belong[i]]+=a[i];\n    }\n    if(!flag)\n    {\n        update(belong[l]);\n    }\n    flag=0;\n    if(belong[l]!=belong[r])\n    {\n        for(int i=(belong[r]-1)*block+1;i<=r;i++)\n        {\n            if(isone[belong[r]])\n            {\n                flag=1;\n                break;\n            }\n            sum[belong[i]]-=a[i];\n            a[i]=sqrt(a[i]);\n            sum[belong[i]]+=a[i];\n        }\n        if(!flag)\n        {\n            update(belong[r]);\n        }\n    }\n    for(int i=belong[l]+1;i<belong[r];i++)\n    {\n        if(isone[i])\n        {\n            continue;\n        }\n        for(int j=(i-1)*block+1;j<=i*block;j++)\n        {\n            sum[i]-=a[j];\n            a[j]=sqrt(a[j]);\n            sum[i]+=a[j];\n        }\n        update(i);\n    }\n}\nint query(int l,int r)\n{\n    int ans=0;\n    for(int i=l;i<=min(r,belong[l]*block);i++)\n    {\n        ans+=a[i];\n    }\n    if(belong[l]!=belong[r])\n    {\n        for(int i=(belong[r]-1)*block+1;i<=r;i++)\n        {\n            ans+=a[i];\n        }\n    }\n    for(int i=belong[l]+1;i<belong[r];i++)\n    {\n        ans+=sum[i];\n    }\n    return ans;\n}\nmain()\n{\n    cin>>n;\n    block=sqrt((n+2)/3);\n    for(int i=1;i<=n;i++)\n    {\n        belong[i]=(i-1)/block+1;\n        scanf(\"%lld\",&a[i]);\n        sum[belong[i]]+=a[i];\n    }\n    cin>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int opt,l,r;\n        scanf(\"%lld%lld%lld\",&opt,&l,&r);\n        if(l>r)\n        {\n            swap(l,r);\n        }\n        if(opt==0)\n        {\n            getsqrt(l,r);\n        }\n        else\n        {\n            printf(\"%lld\\n\",query(l,r));\n        }\n    }\n} \n```",
        "postTime": 1537272692,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "# [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u6233\u8fd9\u91cc](https://www.cnblogs.com/owencodeisking/p/9736440.html)\n\n\u597d\u5427\uff0c\u697c\u4e0b\u6709\u5206\u5757\u7684\u89e3\u6cd5\uff0c\u90a3\u4e48\u6211\u5c31\u518d\u9610\u8ff0\u4e00\u904d\u597d\u4e86\n\n\u672c\u4ee5\u4e3a\u66b4\u529b\u5206\u5757\u4e3a$TLE$\u7684\uff0c\u7ed3\u679c\u53d1\u73b0\u540a\u6253\u7ebf\u6bb5\u6811\uff0c\u7528\u5947\u6280\u6deb\u5de7\u7684\u5361\u5e38\u6280\u672f\u5361\u5230\u7b2c\u4e00\u9875\n\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/record/show?rid=11363506)\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u6570\u5217\u5206\u5757\u5165\u95e8$5$\u561b\uff0c\u53d1\u73b0\u4e00\u4e2a\u6570\u53ea\u80fd\u88ab\u4e0d\u8d85\u8fc7$6$\u6b21\u5f00\u65b9\uff0c\u90a3\u4e48\u66b4\u529b\u4fee\u6539\uff0c\u7528\u4e00\u4e2a\u6807\u8bb0\u770b\u770b\u6574\u5757\u662f\u5426\u6709\u5927\u4e8e$1$\u7684\u6570\n\n\u90a3\u4e48\u6211\u5c31\u732e\u4e0a\u4e00\u4e2a\u672a\u5361\u5e38\u7684\u5206\u5757\u89e3\u6cd5\n\n$Code\\ Below:$\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=100000+10;\nll n,m,a[maxn],sum[330],v[330],pos[maxn],blo;\n\nvoid change(ll x){\n    if(!v[x]){\n        v[x]=1;sum[x]=0;\n        for(ll i=(x-1)*blo+1;i<=x*blo;i++){\n            a[i]=sqrt(a[i]);\n            sum[x]+=a[i];\n            if(a[i]>1) v[x]=0;\n        }\n    }\n}\n\nvoid update(ll l,ll r){\n    if(!v[pos[l]]){\n        for(ll i=l;i<=min(pos[l]*blo,r);i++){\n            sum[pos[i]]-=a[i];\n            a[i]=sqrt(a[i]);\n            sum[pos[i]]+=a[i];\n        }\n        v[pos[l]]=1;\n        for(ll i=(pos[l]-1)*blo+1;i<=min(pos[l]*blo,n);i++){\n            if(a[i]>1){v[pos[l]]=0;break;}\n        }\n    }\n    if(pos[l]!=pos[r]){\n        if(!v[pos[r]]){\n            for(ll i=(pos[r]-1)*blo+1;i<=r;i++){\n                sum[pos[i]]-=a[i];\n                a[i]=sqrt(a[i]);\n                sum[pos[i]]+=a[i];\n            }\n            v[pos[r]]=1;\n            for(ll i=(pos[r]-1)*blo+1;i<=min(pos[r]*blo,n);i++){\n                if(a[i]>1){v[pos[r]]=0;break;}\n            }\n        }\n    }\n    for(ll i=pos[l]+1;i<=pos[r]-1;i++) change(i);\n}\n\nll query(ll l,ll r){\n    ll ans=0;\n    for(ll i=l;i<=min(pos[l]*blo,r);i++) ans+=a[i];\n    if(pos[l]!=pos[r])\n        for(ll i=(pos[r]-1)*blo+1;i<=r;i++) ans+=a[i];\n    for(ll i=pos[l]+1;i<=pos[r]-1;i++) ans+=sum[i];\n    return ans;\n}\n\nint main()\n{\n    scanf(\"%lld\",&n);blo=sqrt(n);\n    for(ll i=1;i<=n;i++){\n        scanf(\"%lld\",&a[i]);\n        pos[i]=(i-1)/blo+1;\n        sum[pos[i]]+=a[i];\n    }\n    scanf(\"%lld\",&m);\n    ll opt,l,r;\n    while(m--){\n        scanf(\"%lld%lld%lld\",&opt,&l,&r);\n        if(l>r) swap(l,r);\n        if(opt==0) update(l,r);\n        else printf(\"%lld\\n\",query(l,r));\n    }\n    return 0;\n}\n```",
        "postTime": 1538446511,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7279\u522b\u597d\u7684\u7ebf\u6bb5\u6811\u7684\u9898(\u4f60\u8bf4\u4ec0\u4e48,\u4e0d\u652f\u6301\u5f00\u65b9,\u7eaf\u7ebf\u6bb5\u6811\u505a\u4e0d\u4e86QAQ),\u90a3\u662f\u4e0d\u53ef\u80fd\u7684,\u65e2\u7136\u4e00\u68f5\u505a\u4e0d\u4e86,\u5c31\u5f00\u4e24\u68f5\u554a,(???\u4e24\u68f5\u600e\u4e48\u505aQAQ),\u5176\u5b9e\u4ed4\u7ec6\u7684\u7814(wan)\u7a76(ji)\u9898(suan)\u76ee(qi),\u5c31\u4f1a\u53d1\u73b0,\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u4fee\u6539\u4e0d\u5230\u5341\u6b21.\u6700\u540e,\u4ed6\u5c31\u4f1a\u795e\u5947\u7684\u53d8\u621001\u5b57\u4e32QAQ,\u90a3\u8fd9\u4e2a\u5b57\u4e32\u6709\u4ec0\u4e48\u6027\u8d28\u5462?\u5f53\u7136\u662f\u6700\u5927\u503c\u4e3a\u4e00\u4e86(\u8fd9\u4e0d\u7b49\u4e8e\u767d\u8bf4\u5417QAQ),\u4f46\u4f60\u6ce8\u610f,\u6700\u5927\u503c,\u54c7\u53c8\u662f\u4e00\u68f5\u7ebf\u6bb5\u6811,\u90a3\u4e48\u4e24\u68f5\u7ebf\u6bb5\u6811\u5c31\u51fa\u6765\u4e86,so,\u8ba9\u6211\u4eec\u5728\u7814\u7a76\u53e6\u5916\u4e00\u68f5\u7ebf\u6bb5\u6811(\u5176\u5b9e\u6211\u63a8\u4e8613\u4e2a\u5c0f\u65f6\u7684pushdown,\u771f\u7684,\u662f\u81f3\u5c1113\u4e2a\u5c0f\u65f6).\u5982\u679c\u4f60\u53d1\u73b0\u4e0d\u4f1a,\u90a3\u4e48\u76f4\u63a5\u66b4\u529b\u641c\u5230\u5e95\u5c31\u884c\u4e86\u554a.\u50cf\u8fd9\u6837\n\n```cpp\nif(nl>r||nr<l)\n{\n\treturn;\n}\nif(nl==nr)\n{\n\ttree[v].max=tree[v].val=sqrt(tree[v].val);\n\treturn;\n}\n```\n\n\u60ca\u4e0d\u60ca\u559c,\u610f\u4e0d\u610f\u5916,(\u8fd9\u8fd8\u662f\u7ebf\u6bb5\u6811\u5417??)\u5f53\u7136\u662f\u4e86,\u4f46\u662f\u6709\u6781\u5176\u5927\u7684\u5e38\u6570,\u597d\u89e3\u8bf4\u5230\u6b64,\u5f00\u59cb\u8d34\u4ee3\u7801.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<iomanip>\n#include<ctime>\n#include<cstdlib>\n#include<queue>\n#include<vector>\n#include<map>\n#include<stack>\n#include<cmath>\n#define ll long long\nusing namespace std;\nll n;\ninline ll read()\n{\n\tll x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-')\n\t\t{\n\t\t\tf=-1;\n\t\t}\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\nstruct node\n{\n\tll max,val,lazy;\n}tree[4000001];\ninline void build(ll v,ll l,ll r)\n{\n\tif(l==r)\n\t{\n\t\ttree[v].val=tree[v].max=read();\n\t\treturn;\n\t}\n\tll mid=(l+r)>>1;\n\tbuild(v<<1,l,mid);\n\tbuild(v<<1|1,mid+1,r);\n\ttree[v].max=max(tree[v<<1].max,tree[v<<1|1].max);\n\ttree[v].val=tree[v<<1].val+tree[v<<1|1].val;\n}\ninline ll query(ll v,ll l,ll r,ll nl,ll nr)\n{\n\tif(nl>=l&&nr<=r)\n\t{\n\t\treturn tree[v].val;\n\t}\n\tif(nl>r||nr<l)\n\t{\n\t\treturn 0;\n\t}\n\tll mid=(nl+nr)>>1;\n\treturn query(v<<1,l,r,nl,mid)+query(v<<1|1,l,r,mid+1,nr);\n}\ninline ll querym(ll v,ll l,ll r,ll nl,ll nr)\n{\n\tif(nl>=l&&nr<=r)\n\t{\n\t\treturn tree[v].max;\n\t}\n\tif(nl>r||nr<l)\n\t{\n\t\treturn 0;\n\t}\n\tll mid=(nl+nr)>>1;\n\treturn max(query(v<<1,l,r,nl,mid),query(v<<1|1,l,r,mid+1,r));\n}\ninline void add(ll v,ll l,ll r,ll nl,ll nr)\n{\n\tif(nl>r||nr<l)\n\t{\n\t\treturn;\n\t}\n\tif(nl==nr)\n\t{\n\t\ttree[v].max=tree[v].val=sqrt(tree[v].val);\n\t\treturn;\n\t}\n\tll mid=(nl+nr)>>1;\n\tif(tree[v<<1].max>1)\n\t{\n\t\tadd(v<<1,l,r,nl,mid);\n\t}\n\tif(tree[v<<1|1].max>1)\n\t{\n\t\tadd(v<<1|1,l,r,mid+1,nr);\n\t}\n\ttree[v].val=tree[v<<1].val+tree[v<<1|1].val;\n\ttree[v].max=max(tree[v<<1].max,tree[v<<1|1].max);\n}\nint main()\n{\n\tn=read();\n\tbuild(1,1,n);\n\tint m=read();\n\twhile(m--)\n\t{\n\t\tll judge=read(),x=read(),y=read();\n\t\tll l=min(x,y),r=max(x,y);\n\t\tif(judge==0)\n\t\t{\n\t\t\tll pop=querym(1,l,r,1,n);\n\t\t\tif(pop<=1)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tadd(1,l,r,1,n);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%lld\\n\",query(1,l,r,1,n));\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1544591850,
        "uid": 38427,
        "name": "Mr_\u6d53\u6c28",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "### [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/9954162.html)\n\n#### [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4145)\n\n#### \u8fd9\u9053\u9898\u5b9e\u9645\u548cGSS4\u662f\u4e00\u6837\u7684\uff0c\u53ea\u662f\u8f93\u5165\u65b9\u5f0f\u6709\u70b9\u533a\u522b\n\n#### [GSS4\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/SP2713#sub)\n\n\u8fd9\u9053\u9898\u66b4\u529b\u5c31\u80fd\u8fc7qaq\uff08\u8fd9\u91cc\u66b4\u529b\u6307\u7ebf\u6bb5\u6811\uff09\n\n\u6570\u636e\u6bd4\u8f83\u6c34\n\n\u5f00\u65b9\u4fee\u6539\u5728\u7ebf\u6bb5\u6811\u4e2d\u679a\u4e3e\u53f6\u8282\u70b9sqrt\n\n\u67e5\u8be2\u533a\u95f4\u548c\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\n\n\u8fd9\u5c31\u53ef\u4ee5ac\n\n#### \u4e0b\u9762\u6709\u4e24\u4e2a\u4f18\u5316\uff0c\u6ca1\u5728\u4ee3\u7801\u4e2d\u4f53\u73b0\n\n1.\u52a0\u5f00\u65b9\u7684\u61d2\u6807\u8bb0\n\n2.\u6700\u5927\u7684\u6570\u5f88\u5c0f\uff0c\u53ea\u8981\u5f00\u65b96\u6b21\u5c31\u53ef\u4ee5\u53d8\u62101\n\n\u6240\u4ee5\u7ebf\u6bb5\u6811\u4e2d\u518d\u8bb0\u5f55\u533a\u95f4\u6700\u5927\u503c\n\n\u5f53\u6700\u5927\u503c\u662f1\u65f6\uff0c\u5c31\u53ef\u4ee5\u4e0d\u7528\u5f00\u65b9\n\n\u66b4\u529b\u7684\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=100005;\nlong long a[MAXN];\nlong long f[MAXN<<2];\nlong long read(long long &x)\n{\n    long long f=1;char ch=getchar();\n    x=0;\n    while(ch<'0' || ch>'9')\n    {\n        if(ch=='-')\n        f=-1;\n        ch=getchar();\n    }\n\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n\n    }\n    return x*f;\n}\nint readline(int &x)\n{\n    int f=1;char ch=getchar();\n    x=0;\n    while(ch<'0' || ch>'9')\n    {\n        if(ch=='-')\n        f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid build(int root,int left,int right)\n{\n    if(left==right)\n    {\n        f[root]=a[left];\n        return;\n    }\n    int mid=(left+right)/2;\n    build(2*root,left,mid);\n    build(2*root+1,mid+1,right);\n    f[root]=f[2*root]+f[2*root+1];\n}\n\nvoid update(int root,int left,int right,int qleft,int qright)\n{\n    int mid,ans,i;\n    if(right-left+1==f[root])\n        return;\n    if(left==right)\n    {\n        f[root]=sqrt(f[root]);\n        return;\n    }\t\n    mid=(left+right)/2;\n    if(qleft<=mid)\n        update(2*root,left,mid,qleft,qright);\n    if(mid<qright)\n        update(2*root+1,mid+1,right,qleft,qright);\n    f[root]=f[root*2]+f[root*2+1];\n}\nlong long query(int root,int left,int right,int qleft,int qright)\n{\n    long long ans=0;\n    if(qleft<=left&&right<=qright)\n        return f[root];\n    int mid=(left+right)/2;\n    if(qleft<=mid)\n        ans=query(2*root,left,mid,qleft,qright);\n    if(mid<qright)\n        ans+=query(2*root+1,mid+1,right,qleft,qright);\n    return ans;\n}\nint main()\n{\n    int n,i,x,y,j,way,k=0,m;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        read(a[i]);\n    build(1,1,n);\n    readline(m);\n    for(i=1;i<=m;i++)\n    {\n        readline(way);readline(x);readline(y);\n        if(x>y)\n        \tswap(x,y);\n        if(way==1)\n            printf(\"%lld\\n\",query(1,1,n,x,y));\n        else \n            update(1,1,n,x,y);\n    }\n    return 0;\n}\n```",
        "postTime": 1542108408,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "\uff08\u7ebf\u6bb5\u6811\u505a\u6cd5\uff0c\u53ef\u4ee5\u5e76\u67e5\u96c6\u505a\uff0c\u5e76\u67e5\u96c6\u7c7b\u4f3c\u4e8eBZOJ\u75af\u72c2\u7684\u9992\u5934\uff09\n\u67e5\u8be2\u64cd\u4f5c\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6bb5\u6811\u6c42\u548c\u64cd\u4f5c\n\u91cd\u70b9\u5728\u4fee\u6539\u64cd\u4f5c\n\n\u8003\u8651\u5230\u5f53\u4e00\u4e2a\u5355\u70b9\u7684\u503c\u5982\u679c\u4e3a1\u62160\u65f6\uff0c\u8fd9\u4e2a\u70b9\u5f00\u6839\u53f7\u4e4b\u540e\u6ca1\u6709\u610f\u4e49\u4e0d\u4f1a\u6539\u53d8\u503c\u3002\u56e0\u6b64\u6211\u4eec\u5bf9\u8fd9\u6837\u7684\u70b9\u4f5c\u4e00\u4e2a\u6807\u8bb0\uff0c\u5982\u679c\u78b0\u5230\u8fd9\u4e2a\u70b9\u5c31\u4e0d\u4fee\u6539\u3002\n\n\u5bf9\u4e8e\u4e00\u822c\u7684\u7ed3\u70b9\uff0c\u5219\u5f53\u4e24\u4e2a\u513f\u5b50\u90fd\u88ab\u505a\u4e86\u6807\u8bb0\uff0c\u90a3\u4e48\u5c31\u7ed9\u8fd9\u4e2a\u70b9\u52a0\u6807\u8bb0\uff0c\u4ee5\u540e\u4e0d\u5bf9\u8be5\u7ed3\u70b9\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\uff08\u5982\u679c\u64cd\u4f5c\u4e4b\u540e\u5176sum\u503c\u4f9d\u7136\u4e0d\u4f1a\u53d8\uff09\n\n\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogn) \n\n\u4ee3\u7801\uff1a\n\n\t#include<cstdio>\n    #include<iostream>\n\t#include<cmath>\n\t#define ll long long \n\t#define maxn 100005\n\tusing namespace std;\n\n\n\tvoid read(ll &x) \n\t{\n\n    bool flag = false;\n    char c=getchar();\n    while((c<'0' || c>'9') && c != '-')c=getchar();\n    if (c == '-') {\n        x = 0;\n        flag = true;\n    } else {\n        x = c - '0';\n    }\n    c = getchar();\n    while(c>='0' && c<='9') {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    x = flag ? -x : x;\n    return;\n\t} \n\n\tstruct node{\n\tll a,b,c;\n\tbool lazy;\n\t}z[maxn<<3];\n\tll n,a[maxn];\n\n\tvoid maketree(ll p,ll l,ll r)\n\t{\n\tz[p].a=l; z[p].b=r;\n\tif(l==r){ z[p].c=a[l]; if(z[p].c==1||z[p].c==0)z[p].lazy=1; return; }\n\tmaketree(p<<1,l,((l+r)>>1));\n\tmaketree(p<<1|1,((l+r)>>1)+1,r);\n\tz[p].c=z[p<<1].c+z[p<<1|1].c;\n\t\tif(z[p<<1].lazy==1&&z[p<<1|1].lazy==1) z[p].lazy=1;\n\t}\n\n\n\n\tvoid update(ll p,ll &x,ll &y)\n\t{\n\n\tif(z[p].a==z[p].b)\n\t{\n\t\tz[p].c=floor(sqrt(z[p].c));\n\t\tif(z[p].c==1||z[p].c==0){ z[p].lazy=1; }\n\t\treturn;\n\t}\n    \n\tif(y>=z[p<<1].a&&x<=z[p<<1].b&&(!z[p<<1].lazy))\n\n    update(p<<1,x,y);\n    \n\tif(y>=z[p<<1|1].a&&x<=z[p<<1|1].b&&(!z[p<<1|1].lazy)) update(p<<1|1,x,y);\n\tz[p].c=z[p<<1].c+z[p<<1|1].c;\n\tif(z[p<<1].lazy==1&&z[p<<1|1].lazy==1) z[p].lazy=1;\n\t}\n\n\tll getsum(ll p,ll &x,ll &y)\n\t{\n\tif(x<=z[p].a&&z[p].b<=y)\n\t{\n\t\treturn z[p].c;\n\t}\n\tll sum=0;\n\tif(y>=z[p<<1].a&&x<=z[p<<1].b) sum+=getsum(p<<1,x,y);\n\tif(y>=z[p<<1|1].a&&x<=z[p<<1|1].b) sum+=getsum(p<<1|1,x,y);\n\treturn sum;\n\t}\n\n\tint main()\n\t{\n\tll i;\n\tread(n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tread(a[i]);\n\t}\n\tmaketree(1,1,n);\n\tll m,ask,x,y;\n\tread(m);\n\twhile(m--)\n\t{\n\t\tread(ask); read(x); read(y);\n        if(x>y) swap(x,y);\n\t\tif(ask==1)\n\t\t{\n\t\t\tprintf(\"%lld\\n\",getsum(1,x,y));\n\t\t}\n\t\telse update(1,x,y);\n\t}\n\t}",
        "postTime": 1518069349,
        "uid": 55343,
        "name": "Newuser",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4145\u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811 / \u5206\u5757\u3002\n\n\u548c\u9694\u58c1\u7684 GSS \u91cd\u5230\u4e86\u5462\u2026\u2026\n\n\u8fd9\u9053\u9898\u8fd8\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u8003\u8651\u600e\u4e48\u5904\u7406\u5f00\u65b9\u64cd\u4f5c\uff0c\u6ce8\u610f\u5230\u6700\u5927\u7684\u6570 $10^{12}$ \u6700\u591a\u88ab\u5f00\u65b9 $log_210^{12}=39$ \u6b21\uff0c\u6240\u4ee5\u6700\u591a\u6bcf\u4e2a\u4f4d\u7f6e\u5904\u7406 $39$ \u6b21\uff0c\u5373 $\\text{O}(39\\times 100000)$\uff0c\u663e\u7136\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u533a\u95f4\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\uff0c\u4e5f\u53ef\u4ee5\u7528\u5206\u5757\u3002\n\n\u7ebf\u6bb5\u6811\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define MAXN 100005\nusing namespace std;\nint n,m;\nll a[MAXN],t[MAXN<<2],maxn[MAXN<<2];\nvoid PushUp(int rt)\n{\n    t[rt]=t[rt<<1]+t[rt<<1|1];\n    maxn[rt]=max(maxn[rt<<1],maxn[rt<<1|1]);\n}\nvoid BuildSegmentTree(int rt,int l,int r)\n{\n    if(l==r)\n    {\n        t[rt]=maxn[rt]=a[l];\n        return;\n    }\n    int mid=l+r>>1;\n    BuildSegmentTree(rt<<1,l,mid);\n    BuildSegmentTree(rt<<1|1,mid+1,r);\n    PushUp(rt);\n}\nvoid Modify(int rt,int l,int r,int tl,int tr)\n{\n    if(l==r)\n    {\n        t[rt]=sqrt(t[rt]);\n        maxn[rt]=t[rt];\n        return;\n    }\n    int mid=l+r>>1;\n    if(tl<=mid && maxn[rt<<1]>1) Modify(rt<<1,l,mid,tl,tr);\n    if(tr>mid && maxn[rt<<1|1]>1) Modify(rt<<1|1,mid+1,r,tl,tr);\n    PushUp(rt);\n}\nll Query(int rt,int l,int r,int tl,int tr)\n{\n    if(tl<=l && r<=tr) return t[rt];\n    int mid=l+r>>1;\n    ll res=0;\n    if(tl<=mid) res+=Query(rt<<1,l,mid,tl,tr);\n    if(tr>mid) res+=Query(rt<<1|1,mid+1,r,tl,tr);\n    return res;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n    BuildSegmentTree(1,1,n);\n    scanf(\"%d\",&m);\n    while(m--)\n    {\n        int opt,x,y;\n        scanf(\"%d %d %d\",&opt,&x,&y);\n        if(x>y) swap(x,y);\n        if(!opt) Modify(1,1,n,x,y);\n        else printf(\"%lld\\n\",Query(1,1,n,x,y));\n    }\n    return 0;\n}\n```\n\n\u5206\u5757\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define MAXN 200005\nusing namespace std;\nint n,m,unt,pos[MAXN];\nll sum[MAXN],val[MAXN];\nbool fg[MAXN];\ntemplate <typename T> void Read(T &x)\n{\n    int fu=1;\n    x=0;\n    char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') fu=-1;\n    for(;isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+(ch-48);\n    x*=fu;\n}\nvoid ModifyBlock(int x)\n{\n    if(fg[x]) return;\n    fg[x]=1;\n    sum[x]=0;\n    for(int i=(x-1)*unt+1;i<=x*unt;i++)\n    {\n        val[i]=sqrt(val[i]);\n        sum[x]+=val[i];\n        if(val[i]>1) fg[x]=0;\n    }\n}\nvoid Modify(int l,int r)\n{\n    for(int i=l;i<=min(pos[l]*unt,r);i++)\n    {\n        sum[pos[l]]-=val[i];\n        val[i]=sqrt(val[i]);\n        sum[pos[l]]+=val[i];\n    }\n    if(pos[l]!=pos[r])\n    {\n        for(int i=(pos[r]-1)*unt+1;i<=r;i++)\n        {\n            sum[pos[r]]-=val[i];\n            val[i]=sqrt(val[i]);\n            sum[pos[r]]+=val[i];\n        }\n    }\n    for(int i=pos[l]+1;i<=pos[r]-1;i++) ModifyBlock(i);\n}\nll Query(int l,int r)\n{\n    ll res=0;\n    for(int i=l;i<=min(pos[l]*unt,r);i++) res+=val[i];\n    if(pos[l]!=pos[r]) for(int i=(pos[r]-1)*unt+1;i<=r;i++) res+=val[i];\n    for(int i=pos[l]+1;i<=pos[r]-1;i++) res+=sum[i];\n    return res;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    unt=sqrt(n);\n    for(int i=1;i<=n;i++) Read(val[i]);\n    for(int i=1;i<=n;i++)\n    {\n        pos[i]=(i-1)/unt+1;\n        sum[pos[i]]+=val[i];\n    }\n    Read(m);\n    while(m--)\n    {\n        int opt,x,y;\n        Read(opt);\n        Read(x);\n        Read(y);\n        if(x>y) swap(x,y);\n        if(!opt) Modify(x,y);\n        else printf(\"%lld\\n\",Query(x,y));\n    }\n    return 0;\n}\n```",
        "postTime": 1554116449,
        "uid": 52734,
        "name": "vocaloid",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2 / \u82b1\u795e\u6e38\u5386\u5404\u56fd\u3011"
    },
    {
        "content": "/*\u533a\u95f4\u4fee\u6539\u5168\u90e8\u4e0b\u653e\u5230\u53f6\u5b50\u8282\u70b9 \r\n\u5bf9\u4e8e\u5f00\u65b9\u52300\u62161\u4e0d\u7528\u518d\u4fee\u6539\u7684\u70b9\u6253\u6807\u8bb0\r\n*/\r\n```\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define N 100005 \r\n#define LL long long\r\ninline int gi(){\r\n    char ch=getchar();int x=0,q=0;\r\n    while(ch<'0' || ch>'9') ch=='-'?q=1:0,ch=getchar();\r\n    while(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\r\n    return q?(-x):x;\r\n}\r\nLL n,m;\r\nLL sum[N<<2];\r\nbool flag[N<<2];\r\nvoid pushup(int now){\r\n\tsum[now]=sum[now<<1]+sum[now<<1|1];\r\n\tflag[now]=flag[now<<1]&&flag[now<<1|1];\r\n} \r\nvoid build (int L,int R,int now){\r\n\tint mid=(L+R)>>1;\r\n\tif(L==R){\r\n\t\tsum[now]=gi();\r\n\t\tif (sum[now]==0||sum[now]==1) flag[now]=1;\r\n\t\treturn ;\r\n\t}\r\n\tbuild (L,mid,now<<1);\r\n\tbuild (mid+1,R,now<<1|1);\r\n\tpushup(now);\r\n}\r\nvoid update(int L,int R,int l,int r,int now){\r\n\tint mid=(l+r)>>1;\r\n\tif(l==r){\r\n\t\tsum[now]=(LL)(sqrt(sum[now]));\r\n\t\tif(sum[now]==0||sum[now]==1) flag[now]=1;\r\n\t\treturn ;\r\n\t}\r\n\tif(L<=mid&&!flag[now<<1])\r\n\t  update(L,R,l,mid,now<<1);\r\n\tif(mid<R&&!flag[now<<1|1])\r\n\t  update(L,R,mid+1,r,now<<1|1);\r\n\tpushup(now);\r\n}\r\nLL query(int L,int R,int l,int r,int now){\r\n\tLL Sum=0;\r\n\tint mid=(l+r)>>1;\r\n\tif(L<=l&&R>=r){\r\n\t\treturn sum[now];\r\n\t}\r\n\tif(L<=mid)\r\n\t  Sum+=query(L,R,l,mid,now<<1);\r\n\tif(mid<R)\r\n\t  Sum+=query(L,R,mid+1,r,now<<1|1);\r\n\treturn Sum;\r\n}\r\nint main(){\r\n\tn=gi();\r\n\tbuild (1,n,1);\r\n\tm=gi();\r\n\tint x,l,r;\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tx=gi();l=gi();r=gi();\r\n\t\tif(x==1){\r\n\t\t\tcout<<query(l,r,1,n,1)<<endl;\r\n\t\t}\r\n\t\tif(x==2){\r\n\t\t\tupdate(l,r,1,n,1);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n\r\n```",
        "postTime": 1518071929,
        "uid": 61360,
        "name": "KingBenQi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4145 \u3010\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f2\u3011"
    }
]