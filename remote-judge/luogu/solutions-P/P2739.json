[
    {
        "content": "\u4e0d\u5c11\u9898\u89e3\u90fd\u7528\u4e86\u627e\u89c4\u5f8b\u7684\u65b9\u6cd5\uff0c\u5176\u5b9e\u6211\u89c9\u5f97\u8fd9\u624d\u662f\u6b63\u89e3\uff0c\n\n\u6bd5\u7adf\u641c\u7d22\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6709\u4eba\u7684\u51cf\u679d\u8fd8\u662f\u6839\u636e\u4e0d\u77e5\u600e\u4e48\u63a8\u51fa\u7684\u7b54\u6848\u6765\u9650\u5236\u6700\u5927\u503c\uff0c\u5982\u679c\u662f\u8003\u8bd5\u53ef\u4ee5\uff0c\u4f46\u5e73\u5e38\u505a\u9898\u8fd8\u662f\u4e0d\u8981\u8fd9\u6837\uff08\u90a3\u8fd8\u4e0d\u5982\u6253\u8868\uff09\n\n\u867d\u7136\u6709\u4e0d\u5c11\u627e\u89c4\u5f8b\u7684\u9898\u89e3\uff0c\u4f46\u90fd\u4ec5\u9650\u4e8e\u627e\u89c4\u5f8b\uff0c\u5e76\u6ca1\u6709\u8bf4\u660e\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u91cc\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b\u3002\n\n\u6211\u76f8\u4fe1\u5927\u5bb6\u7684\u627e\u89c4\u5f8b\u80fd\u529b\n\n\u5e94\u8be5\u90fd\u80fd\u53d1\u73b0\n\n\u6211\u4eec\u628a\u8fd8\u672a\u79fb\u52a8\u65f6\u7684\u4e2a\u7a7a\u4f4d\u4e5f\u7b97\u4e0a\u7684\u8bdd\n\n$4$ $3$ $5$ $6$ $4$ $2$ $1$ $3$ $5$ $7$ $6$ $4$ $2$ $3$ $5$ $4$ $(n=3)$\n\n$5$ $4$ $6$ $7$ $5$ $3$ $2$ $4$ $6$ $8$ $9$ $7$ $5$ $3$ $1$ $2$ $4$ $6$ $8$ $7$ $5$ $3$ $4$ $6$ $5$$(n=4)$\n\n\u6392\u4e00\u4e0b\n\n$4$ $ $ $ $ $35$ $ $ $ $ $642$ $ $ $ $ $1357$ $ $ $ $ $642$ $ $ $ $ $35$ $ $ $ $ $4$\n\n$5$ $ $ $ $ $4 6$ $ $ $ $ $7 5 3$ $ $ $ $ $2 4 6 8$ $ $ $ $ $9 7 5 3 1$ $ $ $ $ $2 4 6 8$ $ $ $ $ $7 5 3$ $ $ $ $ $4 6$ $ $ $ $ $5$\n\n\u89c4\u5f8b\u633a\u660e\u663e\n\n\u5171$2n+1$\u4e2a\u7b49\u5dee\u5e8f\u5217\uff0c\u957f\u5ea6\u4ece$1$\u5230$n$\u518d\u5230$1$\uff0c\u800c\u4e14\u540e\u9762\u4e0e\u524d\u9762\u662f\u5bf9\u79f0\u7684\n\n\u6211\u4eec\u8ba8\u8bba\u7b2c$1$~$n+1$\u7ec4\u5e8f\u5217\uff0c\u8fd9\u4e9b\u5e8f\u5217\u6ee1\u8db3\n\n\n- \u7b2c\u5947\u6570\u4e2a\u5e8f\u5217\u516c\u5dee\u4e3a$-2$\uff0c\u7b2c\u5076\u6570\u4e2a\u5e8f\u5217\u516c\u5dee\u4e3a$2$\n\n- \u5bf9\u4e8e\u7b2c$i$\u4e2a\u5e8f\u5217$(1<=i<=n+1)$,\u82e5\u4e3a\u7b2c\u5947\u6570\u4e2a\u5e8f\u5217\u5219\u9996\u9879\u4e3a$n+i$\uff0c\u7b2c\u5076\u6570\u4e2a\u5e8f\u5217\u5219\u9996\u9879\u4e3a$n-i+2$\n\n\u90a3\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\n\n\u6211\u4eec\u7814\u7a76\u4e00\u4e0b\u4e0b\u5b83\u7684\u89c4\u5219\n\n\u6ce8\uff1a\u4e0b\u6587\u7686\u7528\"\u79fb\"\u8868\u793a\u79fb\u5230\u76f8\u90bb\u7a7a\u683c\uff0c\"\u8df3\"\u8868\u793a\u8df3\u8fc7\u4e00\u4e2a\u68cb\u5b50,\u4e14\u5f00\u59cb\u5de6\u767d\u53f3\u9ed1\n\n\u6bcf\u6b21\u90fd\u662f\u767d\u8272\u68cb\u5b50\u79fb\u8fc7\u53bb\uff0c\u9ed1\u8272\u68cb\u5b50\u8df3\u8fc7\u6765\uff0c\u7136\u540e\u9ed1\u8272\u68cb\u5b50\u79fb\u8fc7\u6765\uff0c\u767d\u8272\u68cb\u5b50\u8df3\u8fc7\u53bb\uff0c\u767d\u8272\u68cb\u5b50\u8df3\u8fc7\u53bb\uff0c\u767d\u8272\u68cb\u5b50\u79fb\u8fc7\u53bb\uff0c\u9ed1\u8272\u68cb\u5b50\u8df3\u8fc7\u6765\uff0c\u9ed1\u8272\u68cb\u5b50\u8df3\u8fc7\u6765\uff0c\u9ed1\u8272\u68cb\u5b50\u8df3\u8fc7\u6765\uff0c\n\n\u5c31\u662f\u8bf4\u6bcf\u6b21\u5148\u79fb\u52a8\u4e00\u6b65\uff0c\u7136\u540e\u5bf9\u5e94\u989c\u8272\u7684\u68cb\u5b50\u4e00\u76f4\u8df3\uff0c\u76f4\u5230\u4e0d\u80fd\u8df3\u4e3a\u6b62\uff0c\u63a5\u4e0b\u6765\u6362\u53e6\u4e00\u79cd\u989c\u8272\u68cb\u5b50\u79fb\u4e00\u6b65\uff0c\u518d\u7ee7\u7eed\u8df3\u554a\u8df3\n\n\uff08\u5efa\u8bae\u753b\u56fe\uff0c\u4f1a\u975e\u5e38\u6e05\u695a\uff09\n\n\u9ed1\u68cb\u53ea\u5f80\u5de6\u8d70\uff0c\u767d\u68cb\u53ea\u5411\u53f3\u8d70\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u6837\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\n\n\u8fd9\u6837\u524d\u534a\u90e8\u5206\u5c31\u8bf4\u5b8c\u4e86\n\n\u81f3\u4e8e\u540e\u534a\u90e8\u5206\u4e3a\u4ec0\u4e48\u662f\u5bf9\u79f0\u7684\u5462\n\n\u6211\u4eec\u8fdb\u884c\u5b8c\u524d$n$\u7ec4\u540e\uff0c\u68cb\u76d8\u4f1a\u53d8\u6210\uff1a\n\n\u7a7a \u767d \u9ed1 \u767d \u9ed1 ... \u767d \u9ed1\n\n\u7b2c$n+1$\u7ec4\u540e\uff0c\u68cb\u76d8\u5c31\u53d8\u6210\u4e86\uff1a\n\n\u9ed1 \u767d \u9ed1 \u767d ...\u9ed1 \u767d \u7a7a\n\n\u8fd9\u4e24\u8005\u662f\u5bf9\u79f0\u7684\uff0c\u6211\u4eec\u4e4b\u524d\u4ece\u5f00\u59cb\u5c40\u9762\u5230$n$\u5c40\u9762\u505a\u7684\n\n\u53cd\u8fc7\u6765\u505a\u4e00\u904d\u5c31\u53ef\u4ee5\u4ece$n+1$\u5c40\u9762\u5230\u7b2c$2n+1$\u5c40\u9762\n\n\u5c31\u662f\u8bf4\uff0c\u7b2c$n+1$\u904d\u7684\u4f5c\u7528\u662f\u4f7f\u5e8f\u5217\u7ffb\u8f6c\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5012\u8fc7\u6765\u518d\u505a\n\n\u8fd9\u5c31\u662f\u5bf9\u79f0\u7684\u539f\u56e0\n\n\u4ee5\u4e0a\n\n\u5e0c\u671b\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<ctype.h>\nusing namespace std;\ninline int read(){\n    int x=0,f=0;char ch=getchar();\n    while(!isdigit(ch))f|=ch=='-',ch=getchar();\n    while(isdigit(ch))x=x*10+(ch^48),ch=getchar();\n    return f?-x:x;\n}\nint f[17][17];\ninline void check(int x){\n\tif(x%20==0)puts(\"\");\n}\nint main(){\n\tint n=read(),cnt=0;\n\tfor(int i=1;i<=n+1;++i){\n\t\tif(i&1)for(int j=0;j<i;++j)f[i][j]=n+i-j-j;\n\t\telse for(int j=0;j<i;++j)f[i][j]=n-i+j+j+2;\n\t}\n\tfor(int i=2;i<=n+1;++i)for(int j=0;j<i;++j)printf(\"%d \",f[i][j]),check(++cnt);\n\tfor(int i=n;i>=1;--i)for(int j=0;j<i;++j)printf(\"%d \",f[i][j]),check(++cnt);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1563793769,
        "uid": 56653,
        "name": "\u73c5\u8090",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2739 \u3010[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u3011"
    },
    {
        "content": "# P2739 [USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u9898\u89e3\n\u8fd9\u662f\u4e00\u9053\u53ef\u4ee5\u7ec3\u4e60\u641c\u7d22\u7684\u597d\u9898\uff0c\u6211\u91c7\u7528\u7684\u662fdfs\u548c\u526a\u679d\u4f18\u5316\u3002\n\n\u89c2\u5bdf\u6837\u4f8b\uff0c\u53d1\u73b0\u767d\u5b50\u53ea\u5f80\u53f3\u8d70\u3001\u9ed1\u5b50\u53ea\u5f80\u5de6\u8d70\uff0c\u90a3\u4e48\u641c\u7d22\u603b\u5171\u4e5f\u5c31\u56db\u79cd\u60c5\u51b5\uff1a\u767d\u5b50\u632a\u4e00\u683c\u3001\u767d\u5b50\u8df3\u4e00\u683c\u3001\u9ed1\u5b50\u632a\u4e00\u683c\u3001\u9ed1\u5b50\u8df3\u4e00\u683c\u3002\uff08\u6ce8\u610f\u53ea\u80fd\u8df3\u8fc7\u4e00\u4e2a**\u4e0d\u540c**\u989c\u8272\u7684\u68cb\u5b50\uff09\n\n\u526a\u679d\u4e5f\u5f88\u597d\u60f3\uff0c\u8bb0\u5f55\u6700\u5c11\u6240\u7528\u7684\u6b65\u6570\uff0c\u5982\u679c\u5f53\u524d\u6b65\u6570\u5df2\u7ecf\u6bd4\u5b83\u5927\u4e86\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u907f\u514d\u56e0\u591a\u6b21\u9012\u5f52\u800c\u8d85\u65f6\u3002\n\n\u5949\u4e0aAC\u4ee3\u7801$\\;$[\u901a\u8fc7\u8bb0\u5f55](https://www.luogu.com.cn/record/34800659)\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nint n,a[10005],b[10005],sum = 2147483647;\nstring now = \" \",tar = \" \";//now\u662f\u5f53\u524d\u72b6\u6001\uff0ctar\u662f\u76ee\u6807\u72b6\u6001\nvoid dfs(int step,int pos)//step\u662f\u5df2\u7528\u6b65\u6570\uff0cpos\u662f\u7a7a\u683c\u4f4d\u7f6e\n{\n\tif (step >= sum)//\u526a\u679d\n\t\treturn ;\n\tif (now == tar)//\u66f4\u65b0\u7b54\u6848\n\t{\n\t\tsum = step;\n\t\tfor (int i = 1;i <= step;i++)\n\t\t{\n\t\t\ta[i] = b[i];\n\t\t}\n\t\treturn ;\n\t}\n\tif (pos - 2 > 0 && now[pos - 2] == 'W' && now[pos - 1] == 'B')//\u767d\u5b50\u8df3\u4e00\u683c \n\t{\n\t\tb[step + 1] = pos - 2;\n\t\tnow[pos - 2] = ' ';\n\t\tnow[pos] = 'W';\n\t\tdfs(step + 1,pos - 2);\n\t\tb[step + 1] = 0;//\u56de\u6eaf\n\t\tnow[pos - 2] = 'W';\n\t\tnow[pos] = ' ';\n\t}\n\tif (pos - 1 > 0 && now[pos - 1] == 'W')//\u767d\u5b50\u632a\u4e00\u683c \n\t{\n\t\tb[step + 1] = pos - 1;\n\t\tnow[pos - 1] = ' ';\n\t\tnow[pos] = 'W';\n\t\tdfs(step + 1,pos - 1);\n\t\tb[step + 1] = 0;\n\t\tnow[pos - 1] = 'W';\n\t\tnow[pos] = ' ';\n\t}\n\tif (pos + 1 <= n * 2 + 1 && now[pos + 1] == 'B')//\u9ed1\u5b50\u632a\u4e00\u683c \n\t{\n\t\tb[step + 1] = pos + 1;\n\t\tnow[pos + 1] = ' ';\n\t\tnow[pos] = 'B';\n\t\tdfs(step + 1,pos + 1);\n\t\tb[step + 1] = 0;\n\t\tnow[pos + 1] = 'B';\n\t\tnow[pos] = ' ';\n\t}\n\tif (pos + 2 <= n * 2 + 1 && now[pos + 2] == 'B' && now[pos + 1] == 'W')//\u9ed1\u5b50\u8df3\u4e00\u683c \n\t{\n\t\tb[step + 1] = pos + 2;\n\t\tnow[pos + 2] = ' ';\n\t\tnow[pos] = 'B';\n\t\tdfs(step + 1,pos + 2);\n\t\tb[step + 1] = 0;\n\t\tnow[pos + 2] = 'B';\n\t\tnow[pos] = ' ';\n\t}\n\treturn ;\n}\n\nint main()\n{\n\tcin >> n;\n\tfor (int i = 1;i <= n;i++)//\u4ea7\u751f\u521d\u59cb\u72b6\u6001\u4e0e\u76ee\u6807\u72b6\u6001\n\t{\n\t\tnow += 'W';\n\t\ttar += 'B';\n\t}\n\tnow += ' ';\n\ttar += ' ';\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tnow += 'B';\n\t\ttar += 'W';\n\t}\n\tdfs(0,n + 1);\n\tfor (int i = 1;i <= sum;i++)\n\t{\n\t\tcout << a[i] << \" \";\n\t\tif (i % 20 == 0)//\u6bcf\u884c20\u4e2a\u6570\n\t\t\tcout << endl;\n\t}\n\tcout << endl;\n    return 0;\n}\n```\n\u70b9\u4e2a\u8d5e\u518d\u8d70\u5427\uff01",
        "postTime": 1593695590,
        "uid": 191754,
        "name": "yhk1001",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2739 \u3010[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u3011"
    },
    {
        "content": "\n//\u5927\u5bb6\u90fd\u662f\u641c\u7d22\u7684\uff0c\u6211\u6765\u53d1\u4e00\u7bc7\u89c4\u5f8b\u7684\u9898\u89e3\u5427\u3002[\u5b89\u5229\u4e00\u4e0b\u81ea\u5df1\u7684blog](https://blog.csdn.net/Dadatu_Zhao)\n\n\u6211\u4eec\u5148\u6765\u624b\u73a9\u51e0\u7ec4\u6570\u636e\n\nn=1\t1 3 2 1\n\nn=2\t2 4 5 3 1 2 4 3\n\nn=3\t3 5 6 4 2 1 3 5 7 6 4 2 3 5 4\n\n\u6211\u4eec\u6765\u628a\u4e2d\u95f4\u7a7a\u7740\u90a3\u4e2a\u683c\u5b50\u653e\u5230\u7b2c\u4e00\u4f4d\uff0c\u518d\u8c03\u6574\u4e00\u4e0b\u5e03\u5c40\u3002\n\nn=1\t2 13 2\n\nn=2\t3 24 531 24 3\n\nn=3\t4 35 642 1357 642 35 4\n\n\u603b\u7ed3\u4e00\u4e0b\u89c4\u5f8b\n\n1 \u524dn+1\u7ec4\u6570\u6bcf\u7ec4\u7684\u5927\u5c0f\u7b49\u4e8e\u7ec4\u5e8f\u6570\uff0c\u5e76\u4e14\u540e\u4ee5n+1\u7ec4\u6570\u4e3a\u4e0e\u4e4b\u524d\u5bf9\u79f0\n\n2 \u6bcf\u7ec4\u6570\u5185\u516c\u5dee\u4e3a2\n\n3 \u5947\u6570\u7ec4\u4e3a\u964d\u5e8f\u4e14\u9996\u9879\u4e3an+i\n\n4 \u5076\u6570\u7ec4\u4e3a\u5347\u5e8f\u4e14\u9996\u9879\u4e3an-i+2\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5199\u7a0b\u5e8f\u5566\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n\nint res[1010];\nint n,tot,len;\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n+1;i++)//i\u8868\u793a\u7ec4\u6570\n\t{\n\t\tif (!(i%2))//\u5947\u6570\u7ec4\n\t\t\tfor (int j=0;j<i;j++) res[++tot]=n-i+2+2*j;\n\t\telse//\u5076\u6570\u7ec4\n\t\t\tfor (int j=0;j<i;j++) res[++tot]=n+i-2*j;\n\t}\n\t//\u8f93\u51fa\n\tfor (int i=2;i<=tot;i++) \n\t{\n\t\t//\u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u5199\u4e2a\u51fd\u6570\uff0c\u61d2\u5f97\u6539\u4e86=\u3002=\n\t\tlen++;if (len%20==0) len=0;\n\t\tif (!len) printf(\"%d\\n\",res[i]);\n\t\telse printf(\"%d \",res[i]);\n\t}\n\tfor (int i=n;i>=1;i--)\n\t{\n\t\tfor (int j=(i*i-i)/2+1;j<=(i*i+i)/2;j++)//\u7528\u7684\u662f\u7b49\u5dee\u6570\u5217\u7684\u548c\uff0c(\u9996\u9879+\u5c3e\u9879)*\u9879\u6570/2\uff0c\u6765\u8f93\u51fa\u5bf9\u79f0\u7684\u7b2ci\u7ec4\u6570\n\t\t{\n\t\t\tlen++;if (len%20==0) len=0;\n\t\t\tif (!len) printf(\"%d\\n\",res[j]);\n\t\t\telse printf(\"%d \",res[j]);\n\t\t}\n\n\t}\n\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1528989123,
        "uid": 1689,
        "name": "Dadatu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2739 \u3010[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u6211\u4eec\u91c7\u7528\u6df1\u641c+\u526a\u679d\uff0c\u7167\u6837\u662f0ms\uff0c\u8fd0\u884c\u5185\u5b58\n\n2175kb\uff0c\u8fd8\u7b97\u4e0d\u9519\u4e86\uff0c\u8fd9\u4e00\u9053\u9898\u7684\u6b63\u89e3\u5176\u5b9e\u662f\u8d2a\u5fc3\uff0c\u4f46\u662f\u6211\u5c31\n\n\u76f4\u63a5\u641c\u7d22\u4e86\uff0c\u5bbd\u641c\u5176\u5b9e\u53ef\u4ee5\u66f4\u5feb\n\n\u7ecf\u8fc7\u89c2\u5bdf\u53d1\u73b0:\u767d\u53ea\u5f80\u53f3\uff0c\u9ed1\u53ea\u5f80\u5de6\n\n\u5176\u5b9e\u6bcf\u6b21\u641c\u7d22\u4e5f\u5c31\u53ea\u67094\u79cd\u60c5\u51b5\n\n\u8fd8\u6709\u7b2c\u4e8c\u79cd\u8df3\u6cd5\u68cb\u5b50\u53ea\u80fd\u8df3\u8fc7\u4e00\u4e2a\u68cb\u5b50\uff08\u6211\u88ab\u8fd9\u91cc\u5751\u4e86\u597d\u4e45\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nint bk=false,minn=168,a[51];//min\u4e3an=12\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u5355\u9760\u8fd9\u4e00\u4e2a\uff0c\u5c31\u53ef\u4ee5\u5927\u91cf\u7684\u526a\u679d \nint k[210],d[210];\nvoid dfs(int s,int p,int t)//s\u4e3a\u5f53\u524d\u6b65\u6570\uff0cp\u4e3a\u7a7a\u683c\u7684\u4f4d\u7f6e\uff0ct\u4e3a\u6700\u5de6\u8fb9\u7684\u767d\u5b50\u7684\u4f4d\u7f6e \n{\n\tif(s-1>minn) return;//\u5982\u679c\u8d85\u8fc7\u4e86\u6700\u5927\u503c \n\tif(s-1==minn && bk==true) return;//\u5982\u679c\u7b49\u4e8e\u6700\u5927\u503c\u800c\u4e14\u5df2\u7ecf\u88ab\u641c\u8fc7\u4e86 \n\tif(p==n+1 && t==n+2)//\u5982\u679c\u6392\u597d\u4e86 \n\t{\n\t\tminn=s-1;bk=true;\n\t\tfor(int i=1;i<=minn;i++) d[i]=k[i];//\u8bb0\u5f55\u4e0b\u6765 \n\t}\n\tint tt;\n\tif(p-1>=1 && a[p-1]==1)//\u5de6\u8fb9\u7684\u767d\u5b50\u8df3\u5230\u7a7a\u683c \n\t{\n\t\tk[s]=p-1;\n\t\tif(t==p-1) tt=p;//\u5224\u65ad\u6700\u5de6\u8fb9 \n\t\telse tt=t;\n\t\tswap(a[p-1],a[p]);\n\t\tdfs(s+1,p-1,tt);\n\t\tswap(a[p-1],a[p]);\n\t}\n\tif(p+1<=n*2+1 && a[p+1]==2)//\u53f3\u8fb9\u7684\u9ed1\u5b50\u8df3\u5230\u7a7a\u683c \n\t{\n\t\tk[s]=p+1;\n\t\tswap(a[p],a[p+1]);\n\t\tdfs(s+1,p+1,t);\n\t\tswap(a[p],a[p+1]);\n\t}\n\tif(p-2>=1 && a[p-2]==1 && a[p-1]==2)//\u5de6\u8fb9\u7684\u767d\u5b50\u8df3\u8fc7\u9ed1\u5b50\u5230\u8fbe\u7a7a\u683c \n\t{\n\t\tk[s]=p-2;\n\t\tif(t==p-2) tt=p;\n\t\telse tt=t;\n\t\tswap(a[p-2],a[p]);\n\t\tdfs(s+1,p-2,tt);\n\t\tswap(a[p-2],a[p]);\n\t}\n\tif(p+2<=n*2+1 && a[p+2]==2 && a[p+1]==1)//\u53f3\u8fb9\u7684\u9ed1\u5b50\u8fdb\u8fc7\u767d\u5b50\u8df3\u5230\u7a7a\u683c \n\t{\n\t\tk[s]=p+2;\n\t\tswap(a[p],a[p+2]);\n\t\tdfs(s+1,p+2,t);\n\t\tswap(a[p],a[p+2]);\n\t}\n}\nint main()\n{\n\tint i;\n\tscanf(\"%d\",&n);\n\tmemset(a,63,sizeof(a));\n\ta[n+1]=0;\n\tfor(i=1;i<=n;i++) //\u521d\u59cb\u5316 \n\t{\n\t\ta[i]=1;\n\t\ta[n+1+i]=2;\n\t}\n\tdfs(1,n+1,1);\n\tfor(i=1;i<=minn;i++) //\u8f93\u51fa \n\t{\n\t\tprintf(\"%d \",d[i]);\n\t\tif(i%20==0) printf(\"\\n\");\n\t}\n\tif(minn%20!=0) printf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1526807487,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2739 \u3010[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u3011"
    },
    {
        "content": "//\u5927\u4f6c\u4eec\u4ee3\u7801\u5199\u8fa3\u4e48\u77ed\uff0c\u83dc\u83dc\u53d1\u6296\u4e2d\n\n\u505a\u6cd5\uff1a\u53cc\u5411 bfs\n\n\u6700\u8fd1\u5b66\u4e86\u8fd9\u4e2a\u77e5\u8bc6\u70b9\uff0c\u4e8e\u662f\u8003\u573a\u4e0a\u538b\u6839\u6ca1\u5f80 DFS \u6216\u8005\u627e\u89c4\u5f8b\u90a3\u4e00\u5757\u60f3\uff0c\u6700\u540e\u6253\u4e86\u4e2a\u6ca1\u6709\u4f18\u5316\u53cc\u5411 bfs\uff0c\u5e76\u4e14\u6ca1\u6709\u8f93\u51fa\u6362\u884c\uff0c\u559c\u63d0 20pts.\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u7684\u8d77\u59cb\u72b6\u6001\u90fd\u5df2\u786e\u5b9a\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u8d77\u59cb\u4e24\u72b6\u6001\u90fd\u653e\u5165\u961f\u5217\uff0c\u5e76\u6253\u4e0a\u662f\u4ece\u8d77\u70b9\u5f00\u59cb\u8fd8\u662f\u4ece\u7ec8\u70b9\u5f00\u59cb\u7684\u6807\u8bb0 mp \uff0c\u52a0\u5165\u50a8\u5b58\u7a7a\u683c\u4f4d\u7f6e\u7684 ans \uff0c\u7136\u540e\u5f00\u59cb\u5e7f\u641c\u3002\n\n\u7531\u4e8e\u8003\u573a\u4e0a\u60f3\u6253\u8868\uff0c\u4e8e\u662f\u6211\u76f4\u63a5\u66b4\u529b\u4f7f\u7528 string \u5b58\u7684\u72b6\u6001\uff0c\u6807\u8bb0\u76f4\u63a5\u7528 map \uff0c\u50a8\u5b58\u7b54\u6848\u7528 vector\n\n\u5bf9\u4e8e\u5f53\u524d\u641c\u7d22\u5230\u7684\u72b6\u6001 pre \uff0c\u901a\u8fc7\u79fb\u52a8\u68cb\u5b50\u5f97\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001 f \uff0c\u5982\u679c $mp[pre] = mp[f]$ \u8bf4\u660e\u5b83\u4eec\u90fd\u662f\u4ece\u8d77\u70b9\u6216\u7ec8\u70b9\u641c\u8fc7\u6765\u7684\uff0c\u4e0d\u9700\u8981\u7ba1\uff1b\u5982\u679c $mp[f] = 0$ \uff0c\u5982\u679c $mp[pre] != mp[f]$ \u8bf4\u660e\u5b83\u4eec\u5206\u522b\u4ece\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u8fc7\u6765\uff0c\u53cc\u5411\u641c\u7d22\u7b2c\u4e00\u6b21\u76f8\u9047\u5373\u662f\u6700\u4f18\u89e3\uff0c\u5c06\u7b54\u6848\u8f93\u51fa\uff0c\u8fd9\u91cc\u8981\u6ce8\u610f\u4ece\u7ec8\u70b9\u641c\u8fc7\u6765\u7684\u70b9\u8981\u5012\u53d9\u8f93\u51fa\u3002\n\n\u5149\u662f\u8fd9\u6837\u8fd8\u4e0d\u591f\uff0c\u7531\u4e8e\u6709\u56db\u79cd\u8f6c\u79fb\u65b9\u5f0f\uff0c\u800c\u5e8f\u5217\u957f\u5ea6\u4e3a 25 \uff0c\u6700\u574f\u8981\u8dd1 $O(4^{24})$ \uff0c\u8003\u8651\u526a\u679d\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u6700\u4f18\u89e3\u7684\u60c5\u51b5\u4e0b\u767d\u8d77\u5fc5\u5b9a\u5f80\u53f3\u8d70\uff0c\u9ed1\u68cb\u5fc5\u5b9a\u5f80\u5de6\u8d70\uff08\u5426\u5219\u5c31\u6ca1\u6709\u610f\u4e49\uff0c\u591a\u4f59\u4e86\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u679a\u4e3e\u72b6\u6001\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u3002\n\n\u6700\u540e\u4ee5 909ms \u7684\u4f18\u79c0\u6210\u7ee9\u8dd1\u8fc7\u4e86\uff0c\u559c\u63d0\u6700\u4f18\u89e3\u6700\u540e\u4e00\u540d\u3002\n\n\n\u76ee\u524d\u6765\u8bf4\u5e94\u8be5\u662f\u6700\u957f\uff08 110 \u884c\uff09\u4e5f\u662f\u6700\u590d\u6742\u7684\u4ee3\u7801\uff0c ~~\u522b\u8ddf\u6211\u8bf4\u538b\u884c~~\n\n```cpp\n#include<cstdio>\n#include<iomanip>\n#include<queue>\n#include<iostream>\n#include<vector>\n#include<map>\nusing namespace std;\nconst int N=1e6+50;\nconst int M=2e6+50;\nmap<string,string> ans;\nmap<string,int> mp;\nstring st,ed;\nint n;\nqueue<string> que;\nvoid Init()//\u8d77\u59cb\u72b6\u6001\u9884\u5904\u7406\n{\n\tfor(int i=1;i<=n;i++) st+='W',ed+='B';\n\tst+='_',ed+='_';\n\tfor(int i=1;i<=n;i++) st+='B',ed+='W';\n}\nbool Check(string pre,string f,int pos,int opt)\n{\n\tif(mp[f]==opt) return false;//f\u548cpre\u90fd\u662f\u4ece\u8d77\u70b9\u6216\u7ec8\u70b9\u8fc7\u6765\u7684\uff0c\u4e0d\u7ba1\n\tif(mp[f]==0){//f\u8fd8\u6ca1\u6709\u904d\u5386\u5230\n\t\tmp[f]=opt;\n\t\tans[f]=ans[pre]+char(pos);//\u52a0\u4e0a\u5f53\u524d\u7a7a\u683c\u4f4d\u7f6e\n\t\tque.push(f);\n\t\treturn false;\n\t}\n\t//\u82e5mp[f]!=mp[pre]\uff0c\u5219\u8f93\u51fa\n\tint ed=ans[pre].size();\n\tint sss=0;\n\tfor(int i=1;i<ed;i++){\n\t\tsss++;\n\t\tprintf(\"%d\",ans[pre][i]);\n\t\tif(sss%20==0) printf(\"\\n\");\n\t\telse printf(\" \");\n\t}\n\ted=ans[f].size();\n\tfor(int i=ed-1;i>=0;i--){//\u4ece\u7ec8\u70b9\u641c\u7684\u90a3\u4e00\u6bb5\u8981\u5012\u53d9\n\t\tsss++;\n\t\tprintf(\"%d \",ans[f][i]);\n\t\tif(sss%20==0) printf(\"\\n\");\n\t\telse printf(\" \");\n\t}\n\treturn true;\n}\nint Get(string f)//\u83b7\u53d6\u7a7a\u683c\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u672c\u6765\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\u7684\uff0c\u4f46\u662f\u6211\u61d2\u5f97\u5199\u4e86\uff08bushi\n{\n\tint ed=f.size();\n\tfor(int i=0;i<ed;i++){\n\t\tif(f[i]=='_') return i;\n\t}\n\treturn 0;\n}\nvoid BFS()\n{\n\tque.push(st),que.push(ed);\n\tmp[st]=-1,mp[ed]=1;\n\tans[st].push_back(char(n+1));\n\tans[ed].push_back(char(n+1));\n\t\n\twhile(!que.empty()){\n\t\t\n\t\tstring f=que.front();\n\t\tstring pre=f;\n\t\tque.pop();\n\t\tint pos=Get(f)+1;//\u8fd9\u91cc\u7684pos\u662f\u9898\u76ee\u4e2d\u7684\u7a7a\u683c\u4f4d\u7f6e\uff0c\u6240\u4ee5\u4e0b\u9762\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u90fd\u8981-1\n\t\t\n\t\t/* \u5de6->\u53f3 \u8df3  */\n\t\tif(pos-3>=0&&f[pos-3]=='W'&&f[pos-2]!=f[pos-3]){\n\t\t\tswap(f[pos-3],f[pos-1]);\n\t\t\tif(Check(pre,f,pos-2,mp[pre])) break;\n\t\t\tswap(f[pos-1],f[pos-3]);\n\t\t}\n\t\t/* */\n\t\t\n\t\t/* \u76f8\u90bb \u8df3 */\n\t\tif(pos-2>=0&&f[pos-2]=='W'){\n\t\t\tswap(f[pos-1],f[pos-2]);\n\t\t\tif(Check(pre,f,pos-1,mp[pre])) break;\n\t\t\tswap(f[pos-2],f[pos-1]);\n\t\t}\n\t\n\t\n\t\tif(pos<2*n+1&&f[pos]=='B'){ \n\t\t\tswap(f[pos],f[pos-1]);\n\t\t\tif(Check(pre,f,pos+1,mp[pre])) break;\n\t\t\tswap(f[pos-1],f[pos]);\n\t\t} \n\t\t/* */\n\t\t\n\t\t\n\t\t/* \u53f3->\u5de6 \u8df3 */\n\t\tif(pos+1<2*n+1&&f[pos+1]=='B'&&f[pos]!=f[pos+1]){\n\t\t\tswap(f[pos-1],f[pos+1]);\n\t\t\tif(Check(pre,f,pos+2,mp[pre])) break;\n\t\t\tswap(f[pos+1],f[pos-1]);\n\t\t} \n\t\t/*   */\n\t\t\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tInit();\n\tBFS();\n\treturn 0;\n}\n```",
        "postTime": 1629810820,
        "uid": 67493,
        "name": "Higanbana_",
        "ccfLevel": 5,
        "title": "P2739 [USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle \u9898\u89e3"
    },
    {
        "content": "\u53ef\u80fd\u4e4b\u524d\u5927\u4f6c\u4eec\u4e5f\u7528\u8fc7\u6211\u8fd9\u79cd\u65b9\u6cd5......\u4e0d\u8fc7\u6211\u770b\u5230\u7684\u57fa\u672c\u4e0a\u90fd\u662f\u7528\u8d2a\u5fc3\u7684\uff08\u592a\u5f3a\u4e86\uff09\u3002\u6211\u592a\u83dc\u4e86\uff0c\u4e0d\u4f1a\u63a8\u516c\u5f0f\uff0c\u4e8e\u662f\u5c31\u5f88\u66b4\u529b\u5730\u7528BFS\u505a\u7684\u3002\n\n\u8fd8\u6709\u5c31\u662f\u987a\u5e8f\u8981\u8003\u8651\u4e00\u4e0b\u3002\u5982\u679c\u6709\u591a\u7ec4\u89e3\u7684\u8bdd\u5c31\u662f\u6309\u5b57\u5178\u5e8f\u6392\uff0c\u6240\u4ee5\u4e0b\u9762\u7684\u5224\u65ad\u987a\u5e8f\u662f\u8981\u4e25\u683c\u8bb2\u7a76\u7684\u3002\n\n\u597d\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\u3002\n\n```cpp\n/*\nID:zhangji78\nLANG:C++\nTASK:shuttle\n*/\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n\tint tx,fa;\n\tshort int x[26];\n    //\u8fd9\u91cc\u5361\u5185\u5b58\uff0c\u5f00\u523026\u5c31\u53ef\u4ee5\u4e86\uff0812*2+1\uff09\n    //tx\u5b58\u8be5\u72b6\u6001\u4e2d\u7a7a\u683c\u7684\u4f4d\u7f6e\n    //fa\u8868\u793a\u8be5\u72b6\u6001\u662f\u7531\u54ea\u4e2a\u72b6\u6001\u6f14\u53d8\u8fc7\u6765\u7684\n    //x\u6570\u7ec4\u8868\u793a\u8be5\u72b6\u6001\n}list[120000];\nint n,m,a[26],b[26],head,tail,d[169],len;\nbool pd(int x)\n{\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(list[x].x[i]!=list[0].x[i])return false;\n\t}\n    //list[0]\u4e2d\u5b58\u7684\u662f\u76ee\u6807\u72b6\u6001\n\treturn true;\n}\nvoid pnt(int x)\n{\n\tlen=0;memset(d,0,sizeof(d));\n\twhile(list[x].fa!=-1)\n\t{\n\t\td[++len]=list[x].tx;\n\t\tx=list[x].fa;//fa\u7684\u4f5c\u7528\uff1a\u5bfb\u627e\u4e0e\u8bb0\u5f55\n\t}\n\tint t=0;\n\tfor(int i=len;i>1;i--)\n\t{\n\t\tt++;\n\t\tif(t%20!=0)printf(\"%d \",d[i]);//\u6ce8\u610f\u6bcf20\u4e2a\u6362\u4e00\u6b21\u884c\n\t\telse printf(\"%d\\n\",d[i]);\n\t}\n\tprintf(\"%d\\n\",d[1]);\n\treturn ;\n}\nvoid bfs()\n{\n\twhile(head<tail)\n\t{\n\t\tint i;\n        //\u987a\u5e8f\uff1aleft 2->left 1->right 1->right 2\n\t\ti=list[head].tx-2;\n\t\tif(i>=1&&list[head].x[i]==1&&list[head].x[i+1]==2)\n\t\t{\n\t\t\tfor(int j=1;j<=m;j++)list[tail].x[j]=list[head].x[j];\n\t\t\tlist[tail].x[i]=list[head].x[list[head].tx];\n\t\t\tlist[tail].x[list[head].tx]=list[head].x[i];\n\t\t\tlist[tail].tx=i;\n\t\t\tlist[tail].fa=head;\n\t\t\tif(pd(tail)==true)break;\n\t\t\ttail++;\n\t\t}\n\t\ti=list[head].tx-1;\n\t\tif(i>=1&&list[head].x[i]==1)\n\t\t{\n\t\t\tfor(int j=1;j<=m;j++)list[tail].x[j]=list[head].x[j];\n\t\t\tlist[tail].x[i]=list[head].x[list[head].tx];\n\t\t\tlist[tail].x[list[head].tx]=list[head].x[i];\n\t\t\tlist[tail].tx=i;\n\t\t\tlist[tail].fa=head;\n\t\t\tif(pd(tail)==true)break;\n\t\t\ttail++;\n\t\t}\n\t\ti=list[head].tx+1;\n\t\tif(i<=m&&list[head].x[i]==2)\n\t\t{\n\t\t\tfor(int j=1;j<=m;j++)list[tail].x[j]=list[head].x[j];\n\t\t\tlist[tail].x[i]=list[head].x[list[head].tx];\n\t\t\tlist[tail].x[list[head].tx]=list[head].x[i];\n\t\t\tlist[tail].tx=i;\n\t\t\tlist[tail].fa=head;\n\t\t\tif(pd(tail)==true)break;\n\t\t\ttail++;\n\t\t}\n\t\ti=list[head].tx+2;\n\t\tif(i<=m&&list[head].x[i]==2&&list[head].x[i-1]==1)\n\t\t{\n\t\t\tfor(int j=1;j<=m;j++)list[tail].x[j]=list[head].x[j];\n\t\t\tlist[tail].x[i]=list[head].x[list[head].tx];\n\t\t\tlist[tail].x[list[head].tx]=list[head].x[i];\n\t\t\tlist[tail].tx=i;\n\t\t\tlist[tail].fa=head;\n\t\t\tif(pd(tail)==true)break;\n\t\t\ttail++;\n\t\t}\n\t\thead++;\n\t}\n\tpnt(tail);\n\treturn ;\n}\nint main()\n{\n//\tfreopen(\"shuttle.in\",\"r\",stdin);freopen(\"shuttle.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tm=n*2+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tlist[1].x[i]=1;//\u521d\u59cb\u72b6\u6001\n\t\tlist[1].x[i+n+1]=2;\n\t\tlist[0].x[i]=2;//\u76ee\u6807\u72b6\u6001\n\t\tlist[0].x[i+n+1]=1;\n        //1\u8868\u793aW\uff0c2\u8868\u793aB\uff0c0\u8868\u793a\u7a7a\u683c\n\t}\n\thead=1;tail=2;list[1].tx=n+1;list[1].fa=-1;\n    //\u7b80\u5355\u7684\u521d\u59cb\u5316\uff08\u53ef\u4ee5\u653e\u5728bfs\u4e2d\uff09\n\tbfs();\n\treturn 0;\n}\n```",
        "postTime": 1525233284,
        "uid": 44157,
        "name": "zhangjianweivv",
        "ccfLevel": 0,
        "title": "[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle"
    },
    {
        "content": "\u697c\u4e0a\u7684\u9898\u89e3\u4f3c\u4e4e\u6ca1\u6709\u7528\u4f4d\u8fd0\u7b97\u7684\uff0c\u6211\u6765\u5199\u4e00\u4e2a^\\_^\n\n- \u601d\u8def\n\n\n\u548c\u697c\u4e0a\u7684\u9898\u89e3\u76f8\u4f3c\uff0c\u8bbe\u767d\u5b50\u53ea\u80fd\u50cf\u524d\uff08\u53f3\uff09\u8d70\uff0c\u9ed1\u5b50\u53ea\u80fd\u5411\u540e\uff08\u5de6\uff09\u8d70\uff0c\u5219\u72b6\u6001\u6570\u4e00\u5b9a\u662f\u6709\u9650\u7684\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u53d1\u751f\u65e0\u9650\u9012\u5f52\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\n\u56e0\u4e3a\u767d\u5b50\u548c\u9ed1\u5b50\u53ef\u4ee5\u5206\u522b\u75281\u548c0\u8868\u793a\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u8868\u793adfs\u7684\u72b6\u6001\u3002\u6b64\u5916\uff0c\u68cb\u76d8\u4e2d\u7684\u7a7a\u4f4d\u4e5f\u75280\u8868\u793a\uff0c\u5e76\u5728dfs\u4e2d\u8bb0\u5f55\u4e00\u4e2ap\u8868\u793a\u7a7a\u683c\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u641c\u7d22\u4e86^\\_^\n\n- \u521d\u59cb\u5316\n\n\n\u6211\u4eec\u7b2c\u4e00\u4e2a\u72b6\u6001\u662f\u524dn\u4f4d\u90fd\u662f\u767d\u5b50\uff081\uff09\uff0c\u7b2cn+1\u4f4d\u662f\u7a7a\u4f4d\uff0cn+2\u4f4d\u52302n+1\u4f4d\u90fd\u662f\u9ed1\u5b50\uff080\uff09\u3002\n\n\n\u6bd4\u5982\u5f53n=3\u65f6\uff0c\u7b2c\u4e00\u4e2a\u72b6\u6001\u662f111**0**000\uff08\u52a0\u7c97\u90e8\u5206\u662f\u7a7a\u4f4d\uff09\n\n\n\u8fd9\u4e2a\u72b6\u6001\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u7684\u5f0f\u5b50`(1<<(n<<1|1))-1^(1<<n+1)-1`\u8868\u793a\uff08\u8fd9\u91cc\u7684n<<1|1\u53ef\u4ee5\u4ee3\u66ff2\\*n+1\uff0c\u4f4d\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u8bf7\u81ea\u884c\u767e\u5ea6\uff09\u3002\n\n- \u641c\u7d22\n\n\n\u641c\u7d22\u7684\u8fb9\u754c\u662f\u5f53\u524d\u72b6\u6001\u7b49\u4e8e\u76ee\u6807\u72b6\u6001\u3002\u76ee\u6807\u72b6\u6001\u5c31\u662f`(1<<n)-1`\uff0c\u522b\u5fd8\u4e86\u8fd8\u9700\u8981\u5224\u65ad\u7a7a\u4f4d\u4f4d\u7f6e`p==n+1`\u3002\n\n\n\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\u7a7a\u4f4d\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53ea\u679a\u4e3e\u7a7a\u683c\u524d\u540e\u5404\u4e24\u4e2a\u4f4d\u7f6e\u4e86\u3002\n\n\nminn\u8bb0\u5f55\u6700\u5c11\u6b65\u6570\uff0cd\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u65b9\u6848\uff0cans\u6570\u7ec4\u8bb0\u5f55\u7b54\u6848\u65b9\u6848\n\n\n- \u4ee3\u7801\n\n\n0ms AC\uff0c\u81ea\u8ba4\u4e3a\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u77ed\u7684\uff0c\u7ec6\u8282\u8bf7\u53c2\u89c1\u6ce8\u91ca\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int MAXN=200; // \u5f53n<=12\u65f6\uff0c\u7b54\u6848\u6700\u591a168\u6b65\nint n, minn=MAXN;\nint d[MAXN], ans[MAXN];\nvoid dfs(int x, int p, int step) // x\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\uff0cp\u8bb0\u5f55\u7a7a\u4f4d\u4f4d\u7f6e\uff0cstep\u8bb0\u5f55\u5f53\u524d\u6b65\u6570\n{\n    if (step>=minn) return ; // \u526a\u679d\n    if (x==(1<<n)-1&&p==n+1) // \u8fb9\u754c\u6761\u4ef6\n    {\n        minn=step; // \u66f4\u65b0\u7b54\u6848\n        memcpy(ans, d, sizeof ans);\n        return ;\n    }\n    for (int i=p-2>1?p-2:1; i<=p+2&&i<=(n<<1|1); i++) // \u679a\u4e3e\u4e0b\u4e00\u4e2a\u72b6\u6001\uff0c\u6ce8\u610f\u68cb\u5b50\u7684\u8fb9\u754c\u4f4d\u7f6e\n        if (i<p&&x&1<<(n<<1|1)-i||i>p&&!(x&1<<(n<<1|1)-i)) // \u767d\u5b50\u53ea\u80fd\u5f80\u53f3\uff0c\u9ed1\u5b50\u53ea\u80fd\u5f80\u5de6\n            // \u901a\u8fc7\u4f4d\u8fd0\u7b97\u5904\u7406\u4e0b\u4e00\u6b65\u72b6\u6001\uff0ci\u662f\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u7a7a\u4f4d\u7684\u4f4d\u7f6e\n            d[step]=i, dfs((x|((x&1<<(n<<1|1)-i)>>p-i))&~(1<<(n<<1|1)-i), i, step+1);\n}\nint main()\n{\n    scanf(\"%d\", &n);\n    dfs((1<<(n<<1|1))-1^(1<<n+1)-1, n+1, 0); // \u5904\u7406\u7b2c\u4e00\u4e2a\u72b6\u6001\u5e76\u641c\u7d22\n    for (int i=0; i<minn; i++) // \u8f93\u51fa\u7b54\u6848\n    {\n        printf(\"%d \", ans[i]);\n        if (i%20==19) printf(\"\\n\"); // \u8bb0\u5f9720\u4e2a\u6570\u6362\u4e00\u6b21\u884c\n    }\n    return 0;\n}\n```",
        "postTime": 1517373932,
        "uid": 43064,
        "name": "\u6500\u5ca9\u9ad8\u624b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2739 \u3010[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u3011"
    },
    {
        "content": "### \u89e3\u6cd5\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u7279\u522b\u66b4\u529b\u4f46\u662f\u7279\u522b\u597d\u60f3\u7684\u505a\u6cd5\u2026\u2026\n\n\u9996\u5148\uff0c\u6700\u66b4\u529b\u7684\u601d\u60f3\u662f\u641c\u7d22\uff0c\u4e8e\u662f\u6211\u4eec\u8fd9\u91cc\u5c31\u53ef\u4ee5\u60f3\u641c\u7d22\u505a\u6cd5\u3002\n\n\u672c\u4eba\u4e0d\u600e\u4e48\u559c\u6b22\u5199 `dfs`\uff0c\u6240\u4ee5\u8fd9\u91cc\u7528\u7684\u662f `bfs` \u7684\u505a\u6cd5\u3002\n\n\u521d\u59cb\u5316\u4e0d\u7528\u591a\u8bf4\uff0c\u6211\u4eec\u8003\u8651 `while` \u5faa\u73af\u91cc\u9762\u7684\u5185\u5bb9\uff1b\n\n\u8fd9\u9053\u9898\u6240\u63cf\u8ff0\u7684\u53d8\u91cf\u5f88\u591a\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7ed3\u6784\u4f53\u3002\n\n\u9898\u9762\u4e2d\u63cf\u8ff0\uff0c\u4e00\u4e2a\u68cb\u5b50\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u540c\u989c\u8272\u7684\u68cb\u5b50\u5e76\u4e14\u53ef\u4ee5\u5f80\u65c1\u8fb9\u7684\u7a7a\u683c\u79fb\u52a8\uff0c\u5e76\u4e14\u7a7a\u683c\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f80\u7ed3\u6784\u4f53\u5b58\u5165\u7a7a\u683c\u7684\u4f4d\u7f6e\uff1b\n\n\u6211\u4eec\u8fd8\u8981\u83b7\u53d6\u5f53\u524d\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\uff0c\u5c06\u8fd9\u4e2a\u4e5f\u5b58\u5165\u7ed3\u6784\u4f53\uff1b\n\n\u6700\u7ec8\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u6574\u6570\u7c7b\u578b\u64cd\u4f5c\u5e8f\u5217\u3002\u8fd9\u4e2a\u6709\u8bb8\u591a\u79cd\u5b58\u6cd5\uff0c\u4f46\u662f\u6211\u4eec\u8981\u8ffd\u6c42 ~~\u65e0\u8111~~ \u6613\u61c2\u7684\u4ee3\u7801\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u8fd9\u4e9b\u6574\u6570\u7c7b\u578b\u7684\u5e8f\u5217\u8f6c\u5316\u6210\u5b57\u7b26\u4e32\u5b58\u5165\u7ed3\u6784\u4f53\uff0c\u8f93\u51fa\u65f6\u76f4\u63a5\u7528\u4e00\u4e2a\u51fd\u6570\u8f6c\u5316\u6210\u6574\u6570\u8f93\u51fa\u3002\n\n\u63a5\u4e0b\u6765\u5e94\u8be5\u5bf9\u72b6\u6001\u8fdb\u884c\u64cd\u4f5c\u4e86\u3002\u5982\u679c\u76f4\u63a5\u6309\u5e38\u89c4\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u4f60\u7684\u7a0b\u5e8f\u5728 $n=12$ \u65f6\u4ec5\u4ec5\u53ea\u8dd1\u4e86 $10000+$ \u79d2\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u6781\u5176\u6709\u6548\u7684\u526a\u679d\u3002\n\n\u65e2\u7136\u6700\u540e\u767d\u68cb\u90fd\u5f97\u8d70\u5411\u5de6\u8fb9\uff0c\u9ed1\u68cb\u90fd\u5f97\u8d70\u5411\u53f3\u8fb9\uff0c\u5c31\u6ca1\u5fc5\u8981\u5904\u7406\u4e0e\u5176\u76f8\u53cd\u7684\u72b6\u51b5\u4e86\u3002\u6240\u4ee5\u5728\u72b6\u6001\u5904\u7406\u7684\u65f6\u5019\uff0c\u780d\u6389\u5411\u53f3\u8fb9\u8d70\u7684\u767d\u68cb\u548c\u5411\u5de6\u8fb9\u8d70\u7684\u9ed1\u68cb\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u641c\u7d22\u6811\u5c31\u5c0f\u4e86\u5f88\u591a\u3002\n\n\u6700\u540e\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u8fd9\u4e2a\u7b97\u6cd5\u7b2c\u4e00\u4e2a\u641c\u5230\u7684\u5408\u6cd5\u72b6\u6001\u4e0d\u4e00\u5b9a\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u72b6\u6001\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u641c\u5230\u7b2c\u4e8c\u4e2a\u7b26\u5408\u8981\u6c42\u5e76\u4e14\u5b57\u5178\u5e8f\u6bd4\u6700\u5f00\u59cb\u641c\u7d22\u5230\u7684\u89e3\u5c0f\u7684\u89e3\u65f6\u8f93\u51fa\u3002\u4e3a\u4ec0\u4e48\u4e0d\u7528\u7ee7\u7eed\u5f80\u4e0b\u641c\uff1f\u56e0\u4e3a `BFS` \u662f\u6309\u7167\u641c\u7d22\u6811\u4e00\u5c42\u4e00\u5c42\u641c\u7684\uff0c\u8fd9\u4e00\u5c42\u7684\u6700\u4f18\u89e3\u5df2\u7ecf\u641c\u5230\u4e86\uff0c\u518d\u7ee7\u7eed\u5f80\u4e0b\u641c\u957f\u5ea6\u4e00\u5b9a\u6bd4\u4e4b\u524d\u7684\u5927\u4e86\u3002\n\n\u8fd9\u91cc\u76f4\u63a5\u653e\u4ee3\u7801\uff0c\u770b\u6ce8\u91ca\u770b\u7684\u53ef\u80fd\u66f4\u6e05\u695a\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,cnt=0;\nstring ans=\"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\";\n//ans\u7684\u521d\u59cb\u72b6\u6001\u8981\u8bbe\u5927\u4e00\u70b9 \nmap<string,string> ma;\nstring goal=\"X\",sta=\"X\";//\u521d\u59cb\u5316\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a1\uff0c\u5728\u5faa\u73af\u65f6\u5c31\u53ef\u4ee5\u6309\u666e\u901a\u6570\u5217\u64cd\u4f5c\u4e86 \nstruct node{\n\tstring str;//\u5f53\u524d\u68cb\u76d8\u72b6\u6001 \n\tint pos;//\u7a7a\u7684\u4f4d\u7f6e \n\tstring rec;//\u5f53\u524d\u7684\u64cd\u4f5c\u5e8f\u5217 \n};\nqueue<node> q;\nbool check(string c,string d){\n\tif(c.length()<d.length()){\n\t\treturn true;\n\t}else if(c.length()==d.length()){\n\t\tfor(int i=1;i<=c.length();i++){\n\t\t\tif(c[i]>d[i]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse if(c[i]<d[i])return true;\n\t\t}\n\t}\n\treturn false;\n}//\u5bf9\u6bd4\u5f53\u524d\u64cd\u4f5c\u5e8f\u5217\u5b57\u5178\u5e8f\u662f\u5426\u66f4\u5c0f \nstring num(int x){\n\tstring g=\"\";\n\tif(x>=48&&x<=57){\n\t\treturn g+char(x);\n\t}else if(x>=58&&x<=67){\n\t\treturn g+\"1\"+char(x-10);\n\t}else{\n\t\treturn g+\"2\"+char(x-20);\n\t}\n}//\u5c06\u662f\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u5e8f\u5217\u8f6c\u5316\u6210\u6574\u6570 \nint main(){\n\tcin>>n;\n\tfor(int i=0;i<n;i++){\n\t\tgoal+=\"B\";//goal\u662f\u76ee\u6807\u72b6\u6001 \n\t\tsta+=\"W\";//sta\u662f\u5f00\u59cb\u72b6\u6001 \n\t}\n\tgoal+=\" \";\n\tsta+=\" \";\n\tfor(int i=0;i<n;i++){\n\t\tgoal+=\"W\";\n\t\tsta+=\"B\";\n\t}\n\tq.push((node){sta,n+1,\"\"});//\u521a\u5f00\u59cb\u7684\u72b6\u6001 \n\twhile(!q.empty()){\n\t\tnode tmp=q.front();\n\t\tq.pop();\n\t\tif(tmp.str==goal){//\u5982\u679c\u8fbe\u5230\u76ee\u6807\u72b6\u6001 \n\t\t\tif(tmp.rec.length()<ans.length()){\n\t\t\t\tans=tmp.rec;\n\t\t\t\tcnt++;\n\t\t\t}else if(tmp.rec.length()==ans.length()){\n\t\t\t\tfor(int i=0;i<tmp.rec.length();i++){\n\t\t\t\t\tif(ans[i]>tmp.rec[i]){\n\t\t\t\t\t\tans=tmp.rec;\n\t\t\t\t\t\tcnt++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t\t//\u6bd4\u8f83 \n\t\t\tint l=0;\n\t\t\tif(cnt==2){//\u5982\u679c\u662f\u7b2c\u4e8c\u4e2a\u6bd4\u539f\u6765\u5c0f\u7684\u5e8f\u5217\u4e86 \n\t\t\t\tfor(int i=0;i<ans.length();i++){\n\t\t\t\t\tl++;\n\t\t\t\t\tcout<<num(ans[i])<<\" \";\n\t\t\t\t\tif(l==20){\n\t\t\t\t\t\tl=0;\n\t\t\t\t\t\tcout<<endl;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}//\u8f93\u51fa \n\t\t}\n\t\tstring sp=tmp.str;\n\t\tif(tmp.pos+1<=2*n+1){//\u5904\u7406\u5411\u53f3\u79fb\u52a8 \n\t\t\tif(sp[tmp.pos+1]=='B'){\n\t\t\t\tswap(sp[tmp.pos+1],sp[tmp.pos]);\t\t\n\t\t    \tif(ma[sp]==\"\"||check(ma[sp],tmp.rec+(char)(tmp.pos+1+48))){\n\t\t\t\t\tq.push((node){sp,tmp.pos+1,tmp.rec+(char)(tmp.pos+1+48)});\n\t\t\t\t\tma[sp]=tmp.rec+(char)(tmp.pos+1+48);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//ma\u8bb0\u5fc6\u5316\u6b64\u72b6\u6001\u662f\u5426\u641c\u7d22\u8fc7\uff0c\u5df2\u7ecf\u641c\u7d22\u8fc7\u5e76\u4e14\u4e0d\u6bd4\u539f\u6765\u7684\u89e3\u4f18\u5c31\u4e0d\u641c\uff08\u867d\u7136\u597d\u50cf\u6ca1\u4ec0\u4e48\u7528\uff0c\u5220\u4e86\u4e5f\u884c\uff09 \n\t\tsp=tmp.str;//\u91cd\u7f6e \n\t\tif(tmp.pos-1>=1){//\u5904\u7406\u5411\u5de6\u79fb\u52a8 \n\t\t\tif(sp[tmp.pos-1]=='W'){\n\t\t\t\tswap(sp[tmp.pos-1],sp[tmp.pos]);\n\t\t\t\tif(ma[sp]==\"\"||check(ma[sp],tmp.rec+(char)(tmp.pos-1+48))){\n\t\t    \t\tq.push((node){sp,tmp.pos-1,tmp.rec+(char)(tmp.pos-1+48)});\n\t\t    \t\tma[sp]=tmp.rec+(char)(tmp.pos-1+48);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsp=tmp.str;\n\t\tif(tmp.pos+2<=2*n+1){//\u5904\u7406\u5411\u5de6\u8df3 \n\t\t\tif(sp[tmp.pos+1]!=sp[tmp.pos+2]&&sp[tmp.pos+2]=='B'){\n\t\t\t\tswap(sp[tmp.pos],sp[tmp.pos+2]);\n\t\t\t\tif(ma[sp]==\"\"||check(ma[sp],tmp.rec+(char)(tmp.pos+2+48))){\n\t\t    \t\tq.push((node){sp,tmp.pos+2,tmp.rec+(char)(tmp.pos+2+48)});\n\t\t    \t\tma[sp]=tmp.rec+(char)(tmp.pos+2+48);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsp=tmp.str;\n\t\t\tif(sp[tmp.pos-1]!=sp[tmp.pos-2]&&sp[tmp.pos-2]=='W'){//\u5904\u7406\u5411\u53f3\u8df3 \n\t\t\t\tswap(sp[tmp.pos],sp[tmp.pos-2]);\n\t\t\t\tif(ma[sp]==\"\"||check(ma[sp],tmp.rec+(char)(tmp.pos-2+48))){\n\t\t    \t\tq.push((node){sp,tmp.pos-2,tmp.rec+(char)(tmp.pos-2+48)});\n\t\t    \t\tma[sp]=tmp.rec+(char)(tmp.pos-2+48);\n\t\t    \t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u8fd9\u4efd\u4ee3\u7801\u662f\u5b8c\u5168\u53ef\u4ee5\u7528\u66f4\u806a\u660e\u7684\u65b9\u6cd5\u8ba9\u5b83\u53d8\u5f97\u66f4\u597d\u770b\uff0c\u4f46\u662f\u6211\u4eec\u65e2\u7136\u8981 ~~\u65e0\u8111~~ \u6613\u61c2\uff0c\u4e5f\u5c31\u65e0\u4f24\u5927\u96c5\u4e86\u3002 ",
        "postTime": 1660642164,
        "uid": 506475,
        "name": "\u3046\u3063\u305b\u3047\u308f",
        "ccfLevel": 0,
        "title": "P2739 [USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle \u9898\u89e3"
    },
    {
        "content": "## Description\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $2 \\times n-1$ \u7684\u5b57\u7b26\u4e32\uff0c\u5f62\u5982 $\\overbrace{\\texttt{WWW}\\cdots \\texttt{W}}^{n\\text{\u4e2a}\\texttt{W}}\\texttt{\\_}\\overbrace{\\texttt{BBB}\\cdots \\texttt{B}}^{n\\text{\u4e2a}\\texttt{B}}$\uff0c\u73b0\u5728\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n1. \u5c06\u4e00\u4e2a\u5b57\u7b26\u79fb\u5230\u548c\u5b83\u76f8\u90bb\u7684\u7a7a\u683c\u4e2d\u3002\n2. \u628a\u4e00\u4e2a\u5b57\u7b26\u8df3\u8fc7\u4e00\u4e2a\uff08\u4ec5\u4e00\u4e2a\uff09\u4e0e\u5b83\u4e0d\u540c\u8272\u7684\u68cb\u5b50\u5230\u8fbe\u7a7a\u683c\u3002\n\n\u8981\u6c42\u4e00\u4e2a\u79fb\u52a8\u6b65\u6570\u6700\u5c11\u4e14\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u4f7f\u5f97\u5b57\u7b26\u4e32\u53d8\u4e3a $\\overbrace{\\texttt{BBB}\\cdots \\texttt{B}}^{n\\text{\u4e2a}\\texttt{B}}\\texttt{\\_}\\overbrace{\\texttt{WWW}\\cdots \\texttt{W}}^{n\\text{\u4e2a}\\texttt{W}}$\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le n \\le 12$\u3002\n\n## Solution\n\n\u505a\u6cd5\uff1a\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22\u3002\n\n\u6ce8\u610f\u5230\u8fd9\u9898\u8303\u56f4\u6781\u5c0f\u7684 $n$\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u641c\u7d22\u6765\u505a\u3002\n\n\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u8bbe\u5b9a\u4e00\u4e2a\u641c\u7d22\u7684\u6700\u5927\u6df1\u5ea6 $dep$\uff0c\u6bcf\u6b21\u641c\u7d22\u5230\u8fbe\u8fd9\u4e2a\u6df1\u5ea6\u5c31\u8fd4\u56de\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63a7\u5236\u6b65\u6570\u6700\u5c0f\u3002\u5728\u8fd9\u4e2a\u524d\u63d0\u4e0b\uff0c\u6211\u4eec\u6bcf\u6b21\u4fdd\u5b58\u4e00\u4e2a\u7a7a\u683c\u7684\u4f4d\u7f6e\uff0c\u4e0e\u5b83\u76f8\u90bb\u7684 $4$ \u4e2a\u4f4d\u7f6e\u4ece\u5de6\u5230\u53f3**\u4f9d\u6b21**\u5224\u65ad\u8fc7\u53bb\u5373\u53ef\uff0c\u8fd9\u6837\u4fdd\u8bc1\u4e86\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u540c\u65f6\uff0c\u672c\u9898\u8fd8\u9700\u8981\u52a0\u4e00\u4e2a\u91cd\u8981\u7684\u526a\u679d\u4f18\u5316\uff1a\u6211\u4eec\u9650\u5236 $\\tt W$ \u53ea\u80fd\u5411\u540e\u8df3\uff0c\u56e0\u4e3a\u5411\u524d\u8df3\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff0c\u540c\u7406\uff0c$\\tt B$ \u53ea\u80fd\u5411\u524d\u8df3\u3002\n\n## Code\n\n```cpp\n/*\n  \tAuthor: TheSky233\n\tWindows 11 Creation. All rights reserved.\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Multicase() for(int T = read() ; T ; T--)\n#define F(i,a,b) for(int i=(a) ;i<=(b);++i)\n#define F2(i,a,b) for(int i=(a);i< (b);++i)\n#define dF(i,a,b) for(int i=(a);i>=(b);--i)\n#define endl '\\n'\n#define pb emplace_back\n#define ENDL putchar('\\n')\n\nconst int N=5e5+5;\nconst int M=1e6+5;\nconst int MN=1e3+5;\n\nvoid Solve();\n\nint n,m,q,k,p;\nint a[N],b[N],f[N];\nvector<int> step;\nstring chess,now,goal;\n\nint main(){\n\tSolve();\n}\n\nint dep;\n\nbool IDDFS(int space,int x,const int dep){\n\tif(x>dep)\n\t\treturn now==goal;\n\tif(space>1 && now[space-1]!=now[space-2] && now[space-2]=='W'){\n\t\tswap(now[space],now[space-2]);\n\t\tstep.pb(space-2);\n\t\tif(IDDFS(space-2,x+1,dep)) return true;\n\t\tstep.pop_back();\n\t\tswap(now[space],now[space-2]);\n\t}\n\tif(space>0 && now[space-1]=='W'){\n\t\tswap(now[space],now[space-1]);\n\t\tstep.pb(space-1);\n\t\tif(IDDFS(space-1,x+1,dep)) return true;\n\t\tstep.pop_back();\n\t\tswap(now[space],now[space-1]);\n\t}\n\tif(space<=2*n && now[space+1]=='B'){\n\t\tswap(now[space],now[space+1]);\n\t\tstep.pb(space+1);\n\t\tif(IDDFS(space+1,x+1,dep)) return true;\n\t\tstep.pop_back();\n\t\tswap(now[space],now[space+1]);\n\t}\n\tif(space<2*n && now[space+1]!=now[space+2] && now[space+2]=='B'){\n\t\tswap(now[space],now[space+2]);\n\t\tstep.pb(space+2);\n\t\tif(IDDFS(space+2,x+1,dep)) return true;\n\t\tstep.pop_back();\n\t\tswap(now[space],now[space+2]);\n\t}\n\treturn false;\n}\n\nvoid Solve(){\n\tcin>>n;\n\tF(i,1,n) chess+='W'; chess+=' ';\n\tF(i,1,n) chess+='B';\n\tF(i,1,n) goal+='B'; goal+=' ';\n\tF(i,1,n) goal+='W';\n\tnow=chess;\n\tfor(;!IDDFS(n,0,dep);dep++) now=chess;\n\tfor(int i=0;i<step.size();i++){\n\t\tcout<<step[i]+1<<' ';\n\t\tif((i+1)%20==0) ENDL;\n\t}\n\treturn;\n}\n```",
        "postTime": 1660022627,
        "uid": 501865,
        "name": "TheSky233",
        "ccfLevel": 4,
        "title": "P2739 [USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle \u9898\u89e3"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u9053\u9898\u96be\u5ea6\u662f\u88ab\u4f4e\u4f30\u4e86\uff0c\u8003\u8651\u5230\u6df1\u641c\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u9650\u5236\uff0c\u5c31\u4f1a\u4e00\u76f4\u5361\u4e0b\u53bb\uff0c\u5c1d\u8bd5\u52a0\u8fc7\u4e00\u4e2a\u7f9e\u803b\u6027\u526a\u679d\uff08++cnt > 100000\uff1bbreak\uff1b\uff09\u53d1\u73b0\u6beb\u65e0\u610f\u4e49\uff0c\u7136\u540e\u5c31\u5f00\u59cb\u5bf9\u8fd9\u9053\u9898\u8fdb\u884c\u6df1\u5165\u5730\u5206\u6790\uff0c\u7136\u540e\u5c31\u6709\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u4e5f\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\uff0c\u628a\u6837\u4f8b\u8fc7\u4e86\uff0c\u53d1\u73b0\u5c45\u7136A\u4e86\uff0c\u597d\u795e\u5947\uff0c\u770b\u4e86\u9898\u89e3\u53d1\u73b0\u8ddf\u697c\u4e0b\u8bfa\u8bfa\u7684\u60f3\u6cd5\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f1\u4e00\u76f4\u5f80\u540e\u8d70\uff0c2\u4e00\u76f4\u5f80\u524d\u8d70\uff0c\u7136\u540e\u5c31\u4e0d\u4f1a\u6709\u65e0\u9650\u9012\u5f52\u7684\u95ee\u9898\u4e86\uff0c\u4e5f\u6ca1\u6709\u5224\u91cd\u7684\u5fc5\u8981\uff08\u5f00\u59cb\u7528hash\u548cmap\u53d1\u73b0\u6beb\u65e0\u610f\u4e49\uff09\uff0c\u5c31\u8fd9\u6837\u5c31\u597d\u4e86\uff0c\u633a\u5feb\u7684\uff0c1ms\uff0c\u6bd4\u697c\u4e0b\u90a3\u4f4d\u5feb\u4e86\u4e0d\u5c11\u3002\uff08\u4f46\u662f\u597d\u50cf\u5199\u6cd5\u662f\u4e00\u6837\u7684\uff0c\u4f30\u8ba1\u662f\u4eba\u957f\u5f97\u592a\u5e05\u4e86\u6ca1\u529e\u6cd5\uff09\n\n/*************************************************************************\n\n    > Author: Drinkwater-cnyali\n    > Created Time: 2017/5/5 21:57:06\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\ntypedef long long LL;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nconst int maxn = 100000;\nconst int inf = 0x3f3f3f3f;\nint n,a[20],pre[maxn],cnt;\nbool check()\n{\n    REP(i,1,n/2)if(a[i] == 1)return 0;\n    if(a[n/2+1]!=0)return 0;\n    return 1;\n}\nint ans[maxn],ff = inf;\nint ccc = 0;\nvoid dfs(int x)\n{\n    if(cnt > ff)return ;\n    if(check())\n    {\n        if(cnt < ff)\n        {\n            ff = cnt;\n            REP(i,1,cnt)ans[i] = pre[i];\n        }\n        else\n        {\n            int flag = 0;\n            REP(i,1,cnt)if(ans[i] < pre[i]){flag = 1;break;}\n            if(!flag)REP(i,1,ff)ans[i] = pre[i];\n        }\n        return ;\n    }\n    if(x > 1 && a[x-1] == 1)\n    {\n        int tmp = a[x-1];\n        a[x-1] = 0,a[x] = tmp,pre[++cnt] = x-1;\n        dfs(x-1);\n        a[x-1] = tmp,a[x] = 0,--cnt;\n    }\n    if(x < n && a[x+1] == 2)\n    {\n        int tmp = a[x+1];\n        a[x+1] = 0,a[x] = tmp,pre[++cnt] = x+1;\n        dfs(x+1);\n        a[x+1] = tmp,a[x] = 0,--cnt;\n    }\n    if(x > 2 && a[x-2] == 1 && a[x-1] == 2)\n    {\n        int tmp = a[x-2];\n        a[x-2] = 0,a[x] = tmp,pre[++cnt] = x-2;\n        dfs(x-2);\n        a[x-2] = tmp,a[x] = 0,--cnt;\n    }\n    if(x < n - 1 && a[x+2] == 2 && a[x+1] == 1)\n    {\n        int tmp = a[x+2];\n        a[x+2] = 0,a[x] = tmp,pre[++cnt] = x+2;\n        dfs(x+2);\n        a[x+2] = tmp,a[x] = 0,--cnt;\n    }\n}\nint main()\n{\n    n = read();\n    n = n * 2 + 1;\n    REP(i,1,n/2)a[i] = 1;\n    REP(i,n/2+2,n)a[i] = 2;\n    dfs(n/2+1);\n    REP(i,1,ff)\n    {\n        cout<<ans[i]<<\" \";\n        if(i%20 == 0)cout<<endl;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1494000027,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2739 \u3010[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u3011"
    },
    {
        "content": "\u5173\u4e8e\u8fd9\u9053\u9898\uff0c \u5c31\u662f\u6df1\u641c\n\n\u4e0d\u8fc7\uff0c \u5982\u679c\u662f\u6bcf\u6b21\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c \u5c31\u4f1aT\uff0830\u5206\uff09\n\n\u5982\u679c\u6bcf\u6b21\u79fb\u52a8\u662f\u4efb\u610f\u7684\uff0c \u5c31\u4f1a\u65e0\u9650\u9012\u5f52\n\n\u6240\u4ee5\uff0c \u6709\u4ee5\u4e0b\u4e24\u70b9\uff1a\n\n1:    1\uff08\u9ed1\uff09 \u53ea\u80fd\u5411\u540e\u8d70\uff0c 2\uff08\u767d\uff09 \u53ea\u80fd\u5411\u524d\u8d70\n\n2:    \u6211\u4eecdfs\u4e2d\u8bb0\u5f55\u6bcf\u5c420\uff08\u7a7a\u683c\uff09\u7684\u4f4d\u7f6e\uff0c \u5c31\u53ea\u9700\u8981\u5224\u65ad\u5b83\u9644\u8fd1\u76844\u4e2a\u4f4d\u7f6e\u5c31\u884c\u4e86\n\n\u7ec6\u8282\uff1a\n\n1\uff1a\u68cb\u5b50\u8d8a\u754c\n\n2\uff1a\u8f93\u51fa\u6ca1\u6709\u5206\u884c\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\nusing namespace std;\nint n, b[30];\nint q[300000];\nint Ans = 300000, a[300000];\nbool P(){            //\u5224\u65ad\u662f\u5426\u7ed3\u675f\n    int i;\n    if(b[n + 1]) return 0;\n    for(i = 1; i <= n; ++i) if(b[i] == 1) return 0;\n    return 1;\n}\nvoid get_ans(int cnt){          //\u66f4\u65b0\u7b54\u6848\n    int i;\n    if(cnt < Ans){\n        Ans = cnt;\n        for(i = 1; i <= cnt; ++i) a[i] = q[i];\n        return ;\n    }\n    bool flag = 1;\n    for(i = 1; i <= cnt; ++i)\n        if(a[i] < q[i]){\n            flag = 0;\n            break;\n        }\n    if(flag) for(i = 1; i <= cnt; ++i) a[i] = q[i];\n}\nvoid dfs(int x, int now){\n    int i;\n    if(now > Ans) return ;            //\u663e\u7136\u526a\u679d\u3002\u3002\u3002\n    if(P()){\n        get_ans(now);\n        return ;\n    }\n    if(b[x - 1] == 1){             //\u679a\u4e3e4\u4e2a\u65b9\u6848\n        b[x] = 1;\n        b[x - 1] = 0;\n        q[now + 1] = x - 1;\n        dfs(x - 1, now + 1);\n        b[x - 1] = 1;\n        b[x] = 0;\n    }\n    if(b[x + 1] == 2){\n        b[x] = 2;\n        b[x + 1] = 0;\n        q[now + 1] = x + 1;\n        dfs(x + 1, now + 1);\n        b[x + 1] = 2;\n        b[x] = 0;\n    }\n    if(x > 1 && b[x - 1] == 2 && b[x - 2] == 1){\n        b[x] = 1;\n        b[x - 2] = 0;\n        q[now + 1] = x - 2;\n        dfs(x - 2, now + 1);\n        b[x - 2] = 1;\n        b[x] = 0;\n    }\n    if(x < (n << 1) + 1 && b[x + 1] == 1 && b[x + 2] == 2){\n        b[x] = 2;\n        b[x + 2] = 0;\n        q[now + 1] = x + 2;\n        dfs(x + 2, now + 1);\n        b[x + 2] = 2;\n        b[x] = 0;\n    }\n}\nint main(){\n#ifndef ONLINE_JUDGE\n    freopen(\"Usa.in\", \"r\", stdin);\n    freopen(\"Usa.out\",\"w\",stdout);\n#endif\n    int i;\n    scanf(\"%d\", &n);\n    for(i = 1; i <= n; ++i) b[i] = 1;\n    for(i = n + 2; i <= (n << 1) + 1; ++i) b[i] = 2;\n    dfs(n + 1, 0);\n    for(i = 1; i <= Ans; ++i){\n        printf(\"%d \", a[i]);\n        if(!(i % 20)) printf(\"\\n\");                    //\u8bb0\u5f97\u5206\u884c\n    }\n    return 0;\n}\n```",
        "postTime": 1492076036,
        "uid": 19683,
        "name": "Till_Gloam",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2739 \u3010[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u597d\u50cf\u96be\u5ea6\u5b9a\u4f4e\u4e86\u5427\uff0c\u81f3\u5c11\u4e5f\u6709\u63d0\u9ad8-\u554a\u3002\n\n\u5982\u679c\u6ca1\u60f3\u5230\u627e\u89c4\u5f8b\u7684\u8bdd\u5927\u90e8\u5206\u4eba\u90fd\u4f1adfs+\u526a\u679d\u5427\u3002\n\n\u90a3\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u64cd\u4f5c\u56fe\u6709\u4ec0\u4e48\u7279\u70b9\u3002\n\n1\u3001\u82e5\u603b\u884c\u6570\u4e3an,\u5f88\u5bb9\u6613\u53d1\u73b0\u4ee5\uff08n/2)\uff08\u5411\u4e0a\u53d6\u6574\uff09\u7684\u90a3\u4e00\u884c\u5448\u4e2d\u5fc3\u5bf9\u79f0\u3002\uff08\u5bf9\u79f0\u6027\uff09\n\n2\u3001\u7a7a\u683c\u7684\u79fb\u52a8\u603b\u662f\u8d77\u59cb\u5148\u5411\u5de6\u79fb\u4e00\u683c\uff0c\u518d\u5411\u53f3\u79fb\u52a8\u5230\u884c\u672b\uff0c\u518d\u5411\u5de6......\uff08\u7279\u6b8a\u89c4\u5f8b\uff09\n\n\u8fd9\u4e24\u4e2a\u89c4\u5f8b\u5c31\u5f88\u6709\u7528\u4e86\uff0c\u4f46\u6211\u4eec\u8fd8\u9700\u8981\u505a\u51fa\u8fdb\u4e00\u6b65\u63a8\u8bba\u3002\n\n\u8ba9\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u64cd\u4f5c\u7684\u89c4\u5f8b\uff0c\u8bb0\u79fb\u52a8\u4e3a1\uff0c\u8df3\u4e3a2\uff0c\u5de6l\u53f3r\u3002\n\n\u90a3\u4e48\uff0c\u5f53n=1\u65f6\uff0c\u64cd\u4f5c\u60c5\u51b5\u4e3a 1r 2l 1r.\n\nn=2:1r,2l, 1l,2r,2r 1l,2l,  1r\n\nn=3:1r,2l,1l,2r,2r,  1r,2l,2l,2l,  1r,2r,2r,1l,2l, 1r\n\nn>3\u61d2\u5f97\u5217\u4e3e\u3002\n\n\u4f60\u4f1a\u53d1\u73b0\u79fb\u52a8\u89c4\u5f8b\u603b\u662f1\u4e00\u6b652\u597d\u51e0\u6b65\uff0c\u800c\u4e142\u7684\u6b65\u6570\u8fd8\u6709\u4e00\u4e2a\u5148\u589e\u540e\u51cf\u7684\u5173\u7cfb\uff0c\u800c\u4e14\u65b9\u5411\u4e0a\u4e5f\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u5173\u7cfb\uff0c\uff08\u6211\u5c31\u4e0d\u8bf4\u592a\u660e\u4e86\u81ea\u5df1\u601d\u8003\u5427\uff09\u3002\u8bf4\u660e\u8fd9\u4e9b\u5355\u8c03\u6027\u548c\u5bf9\u79f0\u6027\u90fd\u662f\u5f88\u91cd\u8981\u7684\u3002\u5982\u679c\u8fd9\u9053\u9898\u7528dfs\u7684\u8bdd\uff0c\u6700\u591a\u6709c(25,3)\\*c(25,1)\u4e2a\u72b6\u6001\uff0c\u90a3\u5c31\u7206\u4e86\u554a\u3002\n\n\u7136\u540e\u5c31\u662f\u5f88\u7b80\u5355\u7684\u6a21\u62df\u4e86\uff08\u4f60\u8981\u662f\u6253\u8868\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\u3002\u8bdd\u8bf4\u8fd9\u662fpart4\u4e3a\u6570\u4e0d\u591a\u7684\u6211\u6ca1\u770b\u9898\u89e3\u505a\u51fa\u6765\u7684\u9898\u3002\n\n\u7136\u540e\u732e\u4e0a\u672c\u849f\u84bb\u4e11\u964b\u7684\u4ee3\u7801\u3002\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<cstdio>\n#include<queue>\n#include<stack>\n#include<set>\n#include<map>\n#include<vector>\n#include<climits>\n#define rep(i,s,n) for(int (i)=(s);(i)<=(n);(i)++)\nusing namespace std;\nint n,a[200],cur,cnt=1;\nvoid work(int dep,int mv)\n{\n    if(dep==n)\n    {\n        a[cnt++]=cur;cur+=mv*2;\n        rep(i,1,n-1) a[cnt++]=cur,cur+=mv*2;\n        a[cnt++]=cur,cur-=mv;\n    }\n    else\n    {\n        a[cnt++]=cur;cur+=mv*2;\n        rep(i,1,dep-1) a[cnt++]=cur,cur+=mv*2;\n        a[cnt++]=cur,cur+=mv;\n        work(dep+1,mv/-1);\n        a[cnt++]=cur;cur+=mv*2;\n        rep(i,1,dep-1) a[cnt++]=cur,cur+=mv*2;\n        a[cnt++]=cur,cur-=mv;\n    }\n}\nint main()\n{\n    freopen(\"e:/out.txt\",\"w\",stdout);\n     scanf(\"%d\",&n);\n     cur=n;\n     work(1,1);// 1 right,-1 left\n     a[cnt++]=cur;\n     for(int i=1;i<n*(n+2);)\n     {\n         for(int j=1;j<=20&&i<n*(n+2);i++,j++)\n         {\n             printf(\"%d \",a[i]);\n      }\n      if(i==n*(n+2)) printf(\"%d\",a[i]);\n      else printf(\"\\n\");\n  }\n    return 0;\n}//by lyyz-ljy\n\n```",
        "postTime": 1474615367,
        "uid": 17378,
        "name": "Vin_1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2739 \u3010[USACO4.4]\u68cb\u76d8\u6e38\u620fShuttle Puzzle\u3011"
    }
]