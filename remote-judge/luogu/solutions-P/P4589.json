[
    {
        "content": "## \u9898\u76ee\u94fe\u63a5 ##\n[\u6d1b\u8c37P4589](https://www.luogu.org/problemnew/show/P4589)\n\u9898\u610f\u53ef\u80fd\u4e0d\u6e05\uff0c\u5c31\u662f\u7ed9\u51fa\u4e00\u4e2a\u5e26\u6743\u6709\u5411\u56fe\uff0c\u9009\u51fa$n + 1$\u6761\u94fe\uff0c\u95ee\u80fd\u5426\u5168\u90e8\u70b9\u8986\u76d6\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u95ee\u4e0d\u80fd\u8986\u76d6\u7684\u70b9\u6743\u6700\u5c0f\u503c\u6700\u5927\u662f\u591a\u5c11\n## \u9898\u89e3 ##\n\u5982\u679c\u8981\u95ee\u5168\u90e8\u8986\u76d6\uff0c\u5c31\u662f\u7ecf\u5178\u7684\u53ef\u91cd\u70b9\u7684DAG\u6700\u5c0f\u8def\u5f84\u8986\u76d6\uff0cfloyd\u6c42\u51fa\u4f20\u9012\u95ed\u5305\u540e\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\n\u5982\u679c\u4e0d\u80fd\u5168\u90e8\u8986\u76d6\uff0c\u5c31\u4e8c\u5206\u7b54\u6848\uff0c\u770b\u770b\u80fd\u5426\u8986\u76d6\u6389\u6bd4\u4e8c\u5206\u51fa\u6765\u7684\u503c\u5c0f\u7684\u6240\u6709\u70b9\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<map>\n#define Redge(u) for (int k = h[u],to; k; k = ed[k].nxt)\n#define REP(i,n) for (int i = 1; i <= (n); i++)\n#define mp(a,b) make_pair<int,int>(a,b)\n#define cls(s) memset(s,0,sizeof(s))\n#define cp pair<int,int>\n#define LL long long int\nusing namespace std;\nconst int maxn = 505,maxm = 100005,INF = 1000000000;\ninline int read(){\n\tint out = 0,flag = 1; char c = getchar();\n\twhile (c < 48 || c > 57){if (c == '-') flag = -1; c = getchar();}\n\twhile (c >= 48 && c <= 57){out = (out << 3) + (out << 1) + c - 48; c = getchar();}\n\treturn out * flag;\n}\nint G[maxn][maxn],g[maxn][maxn],val[maxn],b[maxn],tot,n,m;\nint lk[maxn],vis[maxn];\nbool find(int u){\n\tREP(i,n) if (g[u][i] && !vis[i]){\n\t\tvis[i] = true;\n\t\tif (!lk[i] || find(lk[i])){\n\t\t\tlk[i] = u; return true;\n\t\t}\n\t}\n\treturn false;\n}\nbool check(int v){\n\tint cnt = 0;\n\tREP(i,n) if (val[i] < v) cnt++;\n\tREP(i,n) REP(j,n)\n\t\tif (val[i] < v && val[j] < v) g[i][j] = G[i][j];\n\t\telse g[i][j] = 0;\n\tcls(lk);\n\tREP(i,n) if (val[i] < v){\n\t\tcls(vis); if (find(i)) cnt--;\n\t}\n\treturn cnt <= m + 1;\n}\nint main(){\n\tm = read(); n = read(); int tmp;\n\tREP(i,n){\n\t\tb[i] = val[i] = read();\n\t\ttmp = read();\n\t\twhile (tmp--) G[i][read()] = true;\n\t}\n\tREP(k,n) REP(i,n) REP(j,n) G[i][j] |= (G[i][k] & G[k][j]);\n\tsort(b + 1,b + 1 + n); tot = 1;\n\tfor (int i = 2; i <= n; i++) if (b[i] != b[tot]) b[++tot] = b[i];\n\tfor (int i = 1; i <= n; i++) val[i] = lower_bound(b + 1,b + 1 + tot,val[i]) - b;\n\tREP(i,n) REP(j,n) g[i][j] = G[i][j];\n\tif (check(tot + 1)){puts(\"AK\"); return 0;}\n\tint l = 1,r = tot,mid;\n\twhile (l < r){\n\t\tmid = l + r + 1 >> 1;\n\t\tif (check(mid)) l = mid;\n\t\telse r = mid - 1;\n\t}\n\tprintf(\"%d\\n\",b[l]);\n\treturn 0;\n}\n\n```",
        "postTime": 1526528502,
        "uid": 32842,
        "name": "Mychael",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4589 \u3010[TJOI2018]\u667a\u529b\u7ade\u8d5b\u3011"
    },
    {
        "content": "#### \u9996\u5148\u8865\u5145\u4e00\u4e0b\u9898\u610f\n\n- \u540e\u7ee7\u5173\u7cfb\u4e0d\u6784\u6210\u73af\n\n- \u4e00\u4e2a\u9898\u53ef\u4ee5\u91cd\u590d\u56de\u7b54\n\n\u7406\u89e3\u9519\u9898\u7684\u5148\u56de\u53bb\u601d\u8003\u4e00\u4f1a\u518d\u5f80\u4e0b\u770b~~\u6216\u8005\u79d2\u4e86\u8fd9\u9898~~\n\n### \u4e00\u53e5\u8bdd\u9898\u610f\n\n\u5bf9\u4e8e\u4e00\u4e2a$DAG$\uff0c\u9009$n+1$\u6761\u53ef\u76f8\u4ea4\u7684\u94fe\u8fdb\u884c\u8986\u76d6\uff0c**\u6700\u5927\u5316**\u6ca1\u6709\u88ab\u8986\u76d6\u7684\u70b9\u7684\u6743\u503c\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u628a\u70b9\u6309\u70b9\u6743\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u80fd\u8986\u76d6\u5230\u54ea\u4e9b\u70b9\n\n#### \u6ce8\u610f\u5927\u4e8e$mid$\u7684\u70b9\u4e0d\u80fd\u76f4\u63a5\u6254\u6389\n\n\u89c1[\u8fd9\u4e2a\u8ba8\u8bba](https://www.luogu.org/discuss/show/106652)\uff0c\u5982\u679c\u5904\u7406\u65f6\u76f4\u63a5\u628a\u4e0d\u8981\u6c42\u8986\u76d6\u7684\u70b9\u6254\u5230\u4f1a\u6302\uff08~~\u7136\u800c\u6570\u636e\u6ca1\u5361\u53ef\u4ee5\u4e0d\u7ba1~~\uff09\n\n------------\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u7ecf\u5178\u9898\u76ee\n\n$DAG$\u7684\u6700\u5c0f**\u53ef\u76f8\u4ea4**\u94fe\u8986\u76d6\n\n\u7136\u800c\u6211\u53ea\u60f3\u8bb2\u4e00\u4e2a\u975e\u6807\u89e3\uff0c\u5173\u4e8e$DAG$\u7684\u6700\u5c0f\u94fe\u8986\u76d6[\u8fd9\u4e2a\u535a\u5ba2](https://www.cnblogs.com/justPassBy/p/5369930.html)\u8bb2\u7684~~\u5f88~~\uff08\u76f8\u5bf9\uff09\u8be6\u7ec6\n\n- \u89e3\u91ca\u4e0b$floyd$\u4f20\u9012\u95ed\u5305\n\n\u5c31\u662f\u7528\u7c7b\u4f3c$floyd$\u6c42\u6700\u77ed\u8def\u7684\u505a\u6cd5\u6c42\u51fa\u6bcf\u4e2a\u70b9\u80fd**\u5230\u8fbe**\u7684\u70b9\u96c6\n\n\u628a$floyd$\u6700\u77ed\u8def\u4e2d\u7684$dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j])$\u6539\u6210$f[i][j]|=f[i][k]\\&f[k][j]$\u5373\u53ef\uff08$f[i][j]$\u8868\u793a\u4ece$i$\u51fa\u53d1\u80fd\u5426\u8d70\u5230$j$\uff09\n\n## \u8fdb\u5165\u6b63\u9898\n\n$DAG$\u7684\u6700\u5c0f**\u53ef\u76f8\u4ea4**\u94fe\u8986\u76d6\u53ef\u4ee5\u5f53\u4f5c\u4e00\u9053**\u7eaf\u7f51\u7edc\u6d41**\u9898\u76ee\u505a\uff08\u867d\u7136\u8fd9\u6837\u505a\u590d\u6742\u5ea6\u66f4\u9ad8\uff09\n\n~~\u5f53\u4f5c\u953b\u70bc\u7f51\u7edc\u6d41\u5efa\u6a21\u80fd\u529b\u4e86~~\n\n\u89c2\u5bdf\u8fd9\u4e2a\u9898\n\n- \u6211\u4eec\u6709$n+1$\uff08\u4e3a\u4e86\u65b9\u9762\u540e\u9762\u8bbe$N=n+1$\uff09\u6761\u53ef\u4ee5\u76f8\u4ea4\u7684**\u94fe**\n\n\u8fd9\u548c\u5728\u539f\u56fe\u4e0a\u7684\u5927\u5c0f\u4e3a$N$\u7684**\u6d41**\u4e00\u6837\n\n- \u6bcf\u6761\u94fe\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u5f00\u59cb/\u7ed3\u675f\n\n$S$\u5411\u6bcf\u4e2a\u70b9\u8fde$inf$\u7684\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u5411$T$\u8fde$inf$\u7684\u8fb9\n\n\u4e3a\u4e86\u9650\u5236\u6d41\u6700\u591a\u4e3a$N$\u6211\u4eec\u8bbe\u7f6e\u8d85\u7ea7\u6c47\u70b9$TT$\uff0c$T->TT,d\\text{(\u6d41\u91cf)}=N$\n\n- \u8981\u7ecf\u8fc7\u5c3d\u53ef\u80fd\u591a\u7684\u70b9\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u6210\u5165\u70b9$i$\u548c\u51fa\u70b9$i'$\uff0c\u8fde\u5411\u8fd9\u4e2a\u70b9\u7684\u8fb9\u8fde\u5230$i$\uff0c\u8fd9\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u8fb9\u4ece$i'$\u51fa\u53bb\n\n\u7136\u540e\uff0c$i->i',d=1,c\\text{(\u8d39\u7528)}=1$\uff08\u7b2c\u4e00\u6b21\u7ecf\u8fc7\u65f6\u591a\u8986\u76d6\u4e86\u4e00\u4e2a\u70b9\uff09\uff0c$i->i',d=inf,c=0$\uff08\u4e4b\u540e\u8fd8\u53ef\u4ee5\u7ecf\u8fc7\u4f46\u662f\u8986\u76d6\u7684\u70b9\u6570\u4e0d\u53d8\uff09\n\n#### \u8fd9\u662f\u6838\u5fc3\u548c\u6b63\u786e\u6027\u7684\u4fdd\u8bc1\n\n\u5373\u4f7f\u5f97**\u6d41**\u548c**\u94fe**\u7b49\u4ef7\uff0c**\u8d39\u7528**\u548c**\u8986\u76d6\u7684\u70b9\u6570**\u7b49\u4ef7\n\n\u7136\u540e\u8dd1\u5b8c\u8d39\u7528\u6d41\uff0c\u8d39\u7528\u5c31\u662f\u8986\u76d6\u7684\u70b9\u6570\u4e86\n\n- \u4e8c\u5206\u4e2d\u4e0d\u7528\u8986\u76d6\u7684\u70b9\n\n\u524d\u9762\u5df2\u7ecf\u8bf4\u4e86\u8fd9\u4e9b\u70b9\u4e0d\u80fd\u76f4\u63a5\u5220\u6389\uff0c\u90a3\u600e\u4e48\u5904\u7406\uff1f\n\n#### \u4e0d\u8fde\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u6709\u8d39\u7528\u7684\u90a3\u6761\u8fb9\n\n\u8fd9\u6837\u5b83\u5c31\u53ea\u8d77\u5230\u8fde\u63a5\u5176\u4ed6\u70b9\u7684\u4f5c\u7528\u800c\u4e0d\u5f71\u54cd\u8d39\u7528\uff08\u8986\u76d6\u7684\u70b9\u6570\uff09\u4e86\n\n\u5373\u8ba4\u4e3a\u8986\u76d6\u4e86\u8fd9\u4e2a\u70b9\u7b49\u4e8e\u6ca1\u8986\u76d6\uff08\u56e0\u4e3a\u672c\u6765\u5c31\u4e0d\u5173\u7cfb\u662f\u5426\u8986\u76d6\u5b83\uff0c\u53ea\u5173\u5fc3\u662f\u5426\u8986\u76d6\u524d$mid$\u4e2a\u70b9\uff09\n\n- $done$\n\n\u73b0\u5728\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff08\u524d\u9762\u6ca1\u63d0\u5230\u8d39\u7528\u7684\u8fb9\u90fd\u662f$c=0$\uff09,\u5c31\u80fd\u6c42\u51fa\u80fd\u8986\u76d6\u7684\u70b9\u6570\uff0c\u5982\u679c\u7b49\u4e8e$mid$\u5c31\u8bf4\u660e\u80fd\u8986\u76d6\u524d$mid$\u4e2a\u70b9\n\n\u7136\u540e\u4e8c\u5206\u5c31\u5b8c\u4e86\n\n------------\n\n~~\u53ea\u7528\u4e86\u7f51\u7edc\u6d41\u53ca\u5176\u5efa\u6a21\u662f\u4e0d\u662f\u5f88\u5999\u554a~~\n\n\uff08\u5982\u679c\u8981\u6c42\u4e0d\u76f8\u4ea4\u94fe\u8986\u76d6\uff0c\u53ea\u8981\u4e0d\u8fde\u5165\u70b9\u51fa\u70b9\u4e4b\u95f4\u90a3\u6761$inf$\u7684\u8fb9\u5373\u53ef\uff09~~\u7136\u800c\u590d\u6742\u5ea6\u6bd4\u4e8c\u5206\u56fe\u5339\u914d\u9ad8\u591a\u4e86~~\n\n\uff08\u5982\u679c\u662f\u8fd9\u4e2a\u9898\u4e8c\u5206\u65f6\u7684\u6761\u4ef6\uff08\u4e00\u4e9b\u70b9\u4e0d\u7528\u8986\u76d6\u4f46\u4e0d\u80fd\u6254\uff09\u5e76\u4e14\u8981\u6c42\u94fe\u4e0d\u76f8\u4ea4\uff0c\u5c31\u628a\u4e0d\u9009\u7684\u70b9\u90a3\u6761$d=1,c=1$\u7684\u8fb9\u6539\u6210$d=1,c=0$\uff09\n\n\u8fd9\u4e24\u4e2a\u6b63\u786e\u6027\u7559\u4f5c\u601d\u8003\u9898\uff08~~\u660e\u660e\u5f88\u663e\u7136\u770b\u4e86\u5c31\u77e5\u9053\u4e86\u5427~~\uff09\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n\uff08\u56e0\u4e3a\u61d2\uff0c\u8d39\u7528\u6d41\u5199\u7684\u6700\u6162\u7684\u505a\u6cd5\uff0c\u8dd1\u5230$5000ms$\uff0c\u5982\u679c\u6362\u4f18\u79c0\u7684\u8d39\u7528\u6d41\u5e94\u8be5\u4f1a\u5feb\u5f88\u591a\uff09\n\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define inf 0x7ffffff\n#define S 0\n#define T 1209\n#define T0 1205\nusing namespace std;\n\nint n,m,i,j,k,v,t[505][505];\n\nint L,R,mid;\n\nstruct way\n{\n\tint v,d,c,next;\n};\nway e[300000];\nint head[1505],cnt;\nvoid add(int u,int v,int d,int c)\n{\n\te[cnt].v=v;e[cnt].d=d;e[cnt].c=c;e[cnt].next=head[u];head[u]=cnt++;\n\te[cnt].v=u;e[cnt].d=0;e[cnt].c=-c;e[cnt].next=head[v];head[v]=cnt++;\n}\n\nstruct node\n{\n\tint v,id;\n\tbool operator <(const node&a)const\n\t{\n\t\treturn v<a.v;\n\t}\n};\nnode p[505];\n\nint dist[1500],pre[1500],f[1500],in[1500];\nstruct cmp\n{\n\tbool operator ()(int a,int b)\n\t{\n\t\treturn dist[a]<dist[b];\n\t}\n};\npriority_queue<int,vector<int>,cmp> q;\nvoid spfa()\n{\n\tmemset(dist,-1,sizeof(dist));\n\tmemset(f,0,sizeof(f));\n\tdist[S]=0;q.push(S);f[0]=inf;\n\tint x;\n\twhile(!q.empty())\n\t{\n\t\tx=q.top();q.pop();in[x]=0;\n\t\tfor(int i=head[x];~i;i=e[i].next)\n\t\t\tif(e[i].d&&dist[x]+e[i].c>dist[e[i].v])\n\t\t\t\tdist[e[i].v]=dist[x]+e[i].c,f[e[i].v]=min(f[x],e[i].d),pre[e[i].v]=i,in[e[i].v]?0:(q.push(e[i].v),in[e[i].v]=1);\n\t}\n}\n\nint flow,cost;\nint fee_flow()\n{\n\tflow=0;cost=0;\n\twhile(1)\n\t{\n\t\tspfa();\n\t\tflow+=f[T];cost+=f[T]*dist[T];\n\t\tif(!f[T]||!dist[T])\n\t\t\treturn cost;\n\t\tint x=T;\n\t\twhile(x!=S)\n\t\t{\n\t\t\te[pre[x]].d-=f[T];e[pre[x]^1].d+=f[T];\n\t\t\tx=e[pre[x]^1].v;\n\t\t}\n\t}\n}\n\nint check(int x)\n{\n\tmemset(head,-1,sizeof(head));cnt=0;\n\tfor(int i=1;i<=m;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(t[i][j])\n\t\t\t\tadd(i+m,j,inf,0);\n\tfor(int i=1;i<=x;i++)\n\t\tadd(p[i].id,p[i].id+m,1,1),add(p[i].id,p[i].id+m,inf,0),add(S,p[i].id,inf,0),add(p[i].id+m,T0,inf,0);\n\tfor(int i=x+1;i<=m;i++)\n\t\tadd(p[i].id,p[i].id+m,inf,0),add(S,p[i].id,inf,0),add(p[i].id+m,T0,inf,0);\n\tadd(T0,T,n,0);\n\treturn fee_flow()>=x;\n}\n\nint ret;\nvoid work()\n{\n\twhile(fee_flow()<i)\n\t\tret++,add(T0,T,1,0);\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n\tcin>>n>>m;n++;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tp[i].id=i;cin>>p[i].v>>k;\n\t\tfor(;k;k--)\n\t\t\tcin>>v,t[i][v]=1;\n\t}\n\tsort(p+1,p+m+1);\n\tL=1;R=m;\n\twhile(L<R)\n\t{\n\t\tmid=(L+R+1)>>1;\n\t\tif(check(mid))\n\t\t\tL=mid;\n\t\telse R=mid-1;\n\t}\n\tif(L==m)\n\t\tcout<<\"AK\";\n\telse cout<<p[L+1].v;\n\treturn 0;\n}\n```",
        "postTime": 1553528244,
        "uid": 9517,
        "name": "a2956331800",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4589 \u3010[TJOI2018]\u667a\u529b\u7ade\u8d5b\u3011"
    },
    {
        "content": "\u6ca1\u89c1\u8fc7\uff0c\u6211\u90fd\u80fd\u5207\u7701\u9009\u9898\u4e86 $......$\n\n## \u4e00\u3001\u9898\u76ee\n\n[\u70b9\u6b64\u770b\u9898](https://www.luogu.com.cn/problem/P4589)\n\n## \u4e8c\u3001\u89e3\u6cd5\n\n\u6211\u770b\u4e86\u9898\u89e3\u533a\uff0c\u597d\u50cf\u6ca1\u6709\u4eba\u5199 __\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41__ \uff0c\u6700\u5927\u6d41\u4f1a\u4f24\u5fc3\u7684\u3002\n\n\u5148\u8bf4\u4e00\u4e0b\u5efa\u56fe\u65b9\u6cd5\uff0c\u56e0\u4e3a\u672c\u9898\u7684\u9650\u5236\u5728\u70b9\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 __\u62c6\u70b9__ \u7684\u65b9\u6cd5\uff1a\n\n- \u6e90\u70b9\u8fde $\\tt jzm$ \uff0c\u5bb9\u91cf\u8303\u56f4\u4e3a $[0,n+1]$ \uff0c\u8868\u793a\u53ef\u4ee5\u63d0\u4f9b\u8fd9\u4e48\u591a\u6d41\u91cf\u3002\n- $\\tt jzm$ \u8fde\u6bcf\u4e2a $i$ \uff0c\u5bb9\u91cf\u8303\u56f4\u4e3a $[0,inf]$ \uff0c\u8868\u793a\u4ece\u8fd9\u4e9b\u70b9\u5f00\u59cb\u8d70\u3002\n- \u4e8c\u5206\u4e00\u4e2a $x$ \uff0c\u5982\u679c $val[i]<x$ \uff0c\u8bf4\u660e\u8fd9\u4e9b\u70b9\u5fc5\u987b\u8d70\u4e00\u904d\uff0c$i$ \u8fde $i'$ \uff0c\u5bb9\u91cf\u8303\u56f4\u4e3a $[1,inf]$\n- $i'$ \u8fde\u6c47\u70b9\uff0c\u5bb9\u91cf\u8303\u56f4\u4e3a $[0,inf]$ \uff0c\u8868\u793a\u7ed3\u675f\u3002\n\n\u7136\u540e\u5bf9\u8fd9\u4e2a\u56fe\u8dd1\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u53ef\u884c\u6d41\u6765\u5224\u65ad $x$ \u7684\u60c5\u51b5\u4e0b\u6709\u6ca1\u6709\u89e3\uff0c\u6ce8\u610f\u6700\u5927\u6d41\u4e00\u5b9a\u8981\u52a0\u5f53\u524d\u5f27\u4f18\u5316\uff0c\u8981\u4e0d\u7136\u76f4\u63a5 $\\tt T$ \u6210 $30$ \u5206\u3002\u52a0\u4e86\u5f53\u524d\u5f27\u4e4b\u540e\u8fd8\u8dd1\u5f97\u633a\u5feb\u7684\u3002\n\n\u4ec0\u4e48\uff0c\u4f60\u4e0d\u4f1a\u5e26\u4e0a\u4e0b\u754c\u7684\u7f51\u7edc\u6d41\u3002~~\u90a3\u8fd8\u4e0d\u53bb\u5b66~~\uff1a[\u8fd9\u91cc](https://www.cnblogs.com/C202044zxy/p/14349814.html)\n\n```c++\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\nusing namespace std;\nconst int M = 1010;\nconst int inf = 0x3f3f3f3f;\nint read()\n{\n\tint x=0,f=1;char c;\n\twhile((c=getchar())<'0' || c>'9') {if(c=='-') f=-1;}\n\twhile(c>='0' && c<='9') {x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n\treturn x*f;\n}\nint n,m,k,s,t,ss,tt,zy,tot,ans,dis[M],cur[M],f[M],v[M],a[M][M];\nstruct edge\n{\n\tint v,c,next;\n\tedge(int V=0,int C=0,int N=0) : v(V) , c(C) , next(N) {}\n}e[M*M];\nvoid add(int u,int v,int c)\n{\n\te[++tot]=edge(v,c,f[u]),f[u]=tot;\n\te[++tot]=edge(u,0,f[v]),f[v]=tot;\n}\nint bfs()\n{\n\tqueue<int> q;\n\tmemset(dis,0,sizeof dis);\n\tq.push(s);dis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tif(u==t) return 1;\n\t\tfor(int i=f[u];i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(!dis[v] && e[i].c>0)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint dfs(int u,int ept)\n{\n\tif(u==t) return ept;\n\tint flow=0,tmp=0;\n\tfor(int &i=cur[u];i;i=e[i].next)\n\t{\n\t\tint v=e[i].v;\n\t\tif(dis[v]==dis[u]+1 && e[i].c>0)\n\t\t{\n\t\t\ttmp=dfs(v,min(ept,e[i].c));\n\t\t\tif(!tmp) continue;\n\t\t\tflow+=tmp;\n\t\t\te[i].c-=tmp;\n\t\t\te[i^1].c+=tmp;\n\t\t\tept-=tmp;\n\t\t\tif(!ept) break;\n\t\t}\n\t}\n\treturn flow;\n}\nint check(int x)\n{\n\ttot=1;int res=0;\n\tss=0;tt=2*m+1;zy=2*m+2;s=2*m+3;t=2*m+4;\n\tfor(int i=0;i<=t;i++) f[i]=0;\n\tadd(ss,zy,n);//\u7528\u6765\u9650\u6d41 \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tadd(zy,i,inf);\n\t\tadd(i+m,tt,inf);\n\t\tadd(i,i+m,inf);\n\t\tif(v[i]<x)\n\t\t{\n\t\t\tadd(i,t,1);\n\t\t\tadd(s,i+m,1);\n\t\t\tres++;\n\t\t}\n\t\tfor(int j=1;j<=a[i][0];j++)\n\t\t\tadd(i+m,a[i][j],inf);\n\t}\n\tadd(tt,ss,inf);//\u73af\u6d41\n\twhile(bfs())\n\t{\n\t\tfor(int i=0;i<=t;i++) cur[i]=f[i];\n\t\tres-=dfs(s,inf);\n\t}\n\treturn res==0;//\u4e00\u5b9a\u8981\u6ee1\u6d41 \n}\nvoid dich(int l,int r)\n{\n\tif(l>r) return ;\n\tint mid=(l+r)>>1;\n\tif(check(mid))\n\t{\n\t\tans=mid;\n\t\tdich(mid+1,r);\n\t}\n\telse dich(l,mid-1);\n}\nsigned main()\n{\n\tn=read()+1;m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tv[i]=read();a[i][0]=read();\n\t\tfor(int j=1;j<=a[i][0];j++)\n\t\t\ta[i][j]=read();\n\t}\n\tdich(1,inf);\n\tif(ans==inf) puts(\"AK\");\n\telse printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1612422547,
        "uid": 128239,
        "name": "C20203030",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4589 \u3010[TJOI2018]\u667a\u529b\u7ade\u8d5b\u3011"
    },
    {
        "content": "\u8868\u793a\u5e76\u4e0d\u80fd\u770b\u61c2\u8fd9\u4e2a\u51fa\u9898\u4eba\u5199\u7684\u9898\u9762\uff08\n\n\u9898\u610f\u5927\u6982\u662f\u7ed9\u5b9a\u4e00\u4e2a $m$ \u4e2a\u70b9\u7684 DAG\uff0c\u8be2\u95ee\u80fd\u5426\u7528 $n + 1$ \u6761\u8def\u5f84\u80fd\u5426\u8986\u76d6\u5168\u90e8\u70b9\uff0c\u4e0d\u80fd\u8986\u76d6\u7684\u70b9\u7684\u6700\u5c0f\u6743\u503c\u7684\u6700\u5927\u503c\u662f\u591a\u5c11\u3002\n\n\u8003\u8651\u4e8c\u5206\u6700\u5c0f\u70b9\u6743\u503c\u7684\u6700\u5927\u503c\uff0c\u8bbe\u8fd9\u4e2a\u4e8c\u5206\u51fa\u6765\u7684\u6570\u4e3a mid\uff0c\u6bcf\u6b21 check \u7684\u65f6\u5019\u5224\u65ad\u662f\u5426\u80fd\u591f\u8986\u76d6\u70b9\u6743\u5c0f\u4e8e\u7b49\u4e8e mid \u7684\u6240\u6709\u70b9\u3002\u5982\u679c\u6700\u540e mid \u5927\u4e8e\u6240\u6709\u70b9\u6743\u503c\u7684\u6700\u5927\u503c\uff0c\u5c31\u8bf4\u660e\u53ef\u4ee5\u8986\u76d6\u5230\u5168\u90e8\u70b9\u3002\n\n\u6bcf\u6b21 check \u7684\u65f6\u5019\u628a\u70b9\u6743\u5927\u4e8e mid \u7684\u70b9\u5ffd\u7565\u6389\u7136\u540e\u5efa\u51fa\u4e00\u4e2a\u65b0\u56fe\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u8fd9\u4e2a\u65b0\u56fe\u7684\u6700\u5c0f\u53ef\u76f8\u4ea4\u8def\u5f84\u8986\u76d6\u6761\u6570\u3002\u663e\u7136\u8fd9\u4e2a\u65b0\u56fe\u662f\u539f\u6765 DAG \u7684\u4e00\u4e2a\u5b50\u56fe\uff0c\u4e5f\u662f\u4e00\u4e2a DAG\u3002\u4f17\u6240\u5468\u77e5\u5bf9\u4e8e\u8fd9\u4e2a DAG \u7684\u6700\u5c0f\u4e0d\u76f8\u4ea4\u8def\u5f84\u8986\u76d6\u6761\u6570\u53ef\u4ee5\u8f6c\u5316\u6210\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\u3002\n\n\u6700\u5c0f\u53ef\u76f8\u4ea4\u8def\u5f84\u95ee\u9898\u53ef\u4ee5\u5148\u5728 DAG \u4e0a\u8dd1\u4e00\u904d Floyd \u4f20\u9012\u95ed\u5305\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u70b9 $i,j$\uff0c\u5982\u679c\u4ece $i$ \u70b9\u80fd\u5230\u8fbe $j$ \u70b9\u5c31\u8fde\u8fb9 $(i,j)$\u3002\u663e\u7136\u8fde\u5b8c\u8fb9\u540e\u7684\u56fe\u8fd8\u662f\u4e00\u4e2a DAG\uff0c\u4e8e\u662f\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u8fd9\u4e2a DAG \u4e0a\u7684\u6700\u5c0f\u4e0d\u76f8\u4ea4\u8def\u5f84\u8986\u76d6\u95ee\u9898\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(m^3\\log v)$\u3002\n\n```cpp\n#include <cmath>\n#include <queue>\n#include <vector>\n#include <cstdio>\n#include <cstring>\t\n#include <iostream>\n#include <algorithm>\ntypedef long long ll;\nusing namespace std;\n\ninline int read() {\n\tint x = 0, w = 1;char ch = getchar();\n\twhile (ch > '9' || ch < '0') { if (ch == '-')w = -1;ch = getchar(); }\n\twhile (ch >= '0' && ch <= '9')x = x * 10 + ch - '0', ch = getchar();\n\treturn x * w;\n}\ninline void write(int x) {\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\t\n\nconst int maxn = 1e3 + 5;\nconst int maxm = 1e6 + 5;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f3f3f3f3f;\n\ninline int min(int x, int y) { return x < y ? x : y; }\ninline int max(int x, int y) { return x > y ? x : y; }\n\nstruct node {\n    int nxt, to;\n}edge[maxm << 1];\nint n, m, t, tot, l, r; \nbool vis[maxn], g[maxn][maxn], f[maxn][maxn];\nint head[maxn], mat[maxn], v[maxn];\n\ninline void addedge(int u, int v) {\n    edge[++tot] = (node){head[u], v}, head[u] = tot;\n}\ninline bool find(int u) {\n    for (int i = head[u];i;i = edge[i].nxt) {\n        int v = edge[i].to;\n        if (vis[v]) continue; vis[v] = true;\n        if (!mat[v] || find(mat[v])) {\n            mat[v] = u; return true;\n        }\n    }\n    return false;\n}\ninline void init() {\n\ttot = 0;\n\tmemset(head, 0, sizeof(head));\n\tmemset(f, 0, sizeof(f));\n\tmemset(mat, 0, sizeof(mat));\n}\ninline bool check(int mid) { init();\n\tint res = 0;\n\tfor (int i = 1;i <= n;i++)\n\t\tfor (int j = 1;j <= n;j++)\n\t\t\tif (g[i][j] && v[i] <= mid && v[j] <= mid) f[i][j] = true;\n\tfor (int k = 1;k <= n;k++) {\n\t\tfor (int i = 1;i <= n;i++) {\n\t\t\tif (!f[i][k]) continue;\n\t\t\tfor (int j = 1;j <= n;j++)\n\t\t\t\tf[i][j] |= f[i][k] & f[k][j];\n\t\t}\n\t}\n\tfor (int i = 1;i <= n;i++) {\n\t\tif (v[i] > mid) continue; res++;\n\t\tfor (int j = 1;j <= n;j++)\n\t\t\tif (f[i][j]) addedge(i, j);\n\t}\n\tfor (int i = 1;i <= n;i++) {\n\t\tif (v[i] > mid) continue;\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tif (find(i)) res--;\n\t}\n\treturn res <= m;\n}\n\nint main(void) { \n\tm = read() + 1, n = read(), l = inf, r = 0;\n\tfor (int i = 1, k;i <= n;i++) {\n\t\tv[i] = read(), k = read(), l = min(l, v[i]), r = max(r, v[i]);\n\t\twhile (k--) g[i][read()] = true;\n\t}\n\tfor (int k = 1;k <= n;k++) {\n\t\tfor (int i = 1;i <= n;i++) {\n\t\t\tif (!g[i][k]) continue;\n\t\t\tfor (int j = 1;j <= n;j++) {\n\t\t\t\tif (i == j) continue;\n\t\t\t\tg[i][j] |= g[i][k] & g[k][j];\n\t\t\t}\n\t\t}\n\t}\n\tint tmp = r;\n\twhile (l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif (check(mid)) l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\tl > tmp ? puts(\"AK\") : printf(\"%d\\n\", l);\n\treturn 0;  \n}\n```\n",
        "postTime": 1609923891,
        "uid": 246019,
        "name": "_came11ia_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4589 \u3010[TJOI2018]\u667a\u529b\u7ade\u8d5b\u3011"
    },
    {
        "content": "\u7ed9\u5b9a\u4e00\u4e2aDAG \u53ef\u4ee5\u7528n+1\u6761\u8def\u5f84\u8986\u76d6\u6c42\u4e0d\u80fd\u8986\u76d6\u7684\u70b9\u4e2d\u6700\u5c0f\u503c\u6700\u5927\n\u51fa\u9898\u4eba\u7684\u8bed\u6587\u6c34\u5e73+elijahqi\u7684\u8bed\u6587\u6c34\u5e73\u4e3a\u8d1f\u65e0\u7a77 \u8bfb\u9519\u9898\u53ea\u670910\u5206\u7cfb\u5217\n\u8003\u8651\u4e8c\u5206\u7b54\u6848 \u7136\u540e\u4e8c\u5206\u56fe\u5339\u914d \u6c42\u6700\u5c0f\u53ef\u76f8\u4ea4\u8def\u5f84\u8986\u76d6\u95ee\u9898\n\u6ce8\u610f\u4e8c\u5206\u7b54\u6848\u7684\u5355\u8c03\u6027 \u5373 \u82e53->6\u4e4b\u95f4\u6709\u4e00\u4e2a8 \u7136\u800c\u8fd9\u6b21\u4e8c\u5206\u7684\u7b54\u6848\u662f7 \u4ed6\u4eec\u8fd9\u6761\u8fb9\u4e5f\u5e94\u8be5\u89c6\u4e3a\u5b58\u5728\n```\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ninline char gc(){\n\tstatic char now[1<<16],*S,*T;\n\tif (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n\treturn *S++;\n}\ninline int read(){\n\tint x=0,f=1;char ch=gc();\n\twhile(!isdigit(ch)) {if (ch=='-') f=-1;ch=gc();}\n\twhile(isdigit(ch)) x=x*10+ch-'0',ch=gc();\n\treturn x*f;\n}\nconst int inf=0x3f3f3f3f;\nconst int N=550;\nstruct node{\n\tint y,next;\n}data[N*N];\nint h[N],g[N],num,v[N],n,m;\nbool mp[N][N],mp1[N][N],used[N];\ninline bool find(int x){\n\tfor (int i=h[x];i;i=data[i].next){\n\t\tint y=data[i].y;if (used[y]) continue;used[y]=1;\n\t\tif (!g[y]||find(g[y])){\n\t\t\tg[y]=x;return 1;\n\t\t}\n\t}return 0;\n}\ninline void insert1(int x,int y){\n\tdata[++num].y=y;data[num].next=h[x];h[x]=num;\n}\ninline bool check(int md){\n\tmemset(mp1,0,sizeof(mp1));\n\tmemset(h,0,sizeof(h));num=0;\n\tfor (int i=1;i<=m;++i){\n\t\tfor (int j=1;j<=m;++j){\n\t\t\tif (v[i]<=md&&v[j]<=md&&mp[i][j]) mp1[i][j]=1;\n\t\t}\n\t}int ans=0;\n\tfor (int k=1;k<=m;++k)\n\t\tfor (int i=1;i<=m;++i){\n\t\t\tif (!mp1[i][k]) continue;\n\t\t\tfor (int j=1;j<=m;++j)\n\t\t\t\tmp1[i][j]|=mp1[i][k]&mp1[k][j];\n\t\t}\n\tfor (int i=1;i<=m;++i){\n\t\tif (v[i]<=md) ++ans;else continue;\n\t\tfor (int j=1;j<=m;++j){\n\t\t\tif (mp1[i][j]) insert1(i,j);\n\t\t}\n\t}memset(g,0,sizeof(g));\n\tfor (int i=1;i<=m;++i){\n\t\tif (v[i]>md) continue; \n\t\tmemset(used,0,sizeof(used));\n\t\tif (find(i)) --ans;\n\t}\n\treturn ans<=n;\n}\nint main(){\n\tfreopen(\"contest.in\",\"r\",stdin);\n\tfreopen(\"contest.out\",\"w\",stdout);\n\tn=read()+1;m=read();int l=inf,r=0;\n\tfor (int i=1;i<=m;++i){\n\t\tv[i]=read();int k=read();l=min(l,v[i]);r=max(r,v[i]);\n\t\tfor (int j=1;j<=k;++j) mp[i][read()]=1;\n\t}\n\tfor (int k=1;k<=m;++k){\n\t\tfor (int i=1;i<=m;++i){\n\t\t\tif (!mp[i][k]) continue;\n\t\t\tfor (int j=1;j<=m;++j){\n\t\t\t\tif (i==j) continue;\n\t\t\t\tmp[i][j]|=mp[i][k]&mp[k][j];\n\t\t\t}\n\t\t}\n\t}\n\tint mx=r;\n\twhile(l<=r){\n\t\tint mid=l+r>>1;\n\t\tif (check(mid)) l=mid+1;else r=mid-1;\n\t}\n\tif (l>mx) puts(\"AK\");else printf(\"%d\\n\",l);\n\treturn 0;\n}\n  ```",
        "postTime": 1526470065,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4589 \u3010[TJOI2018]\u667a\u529b\u7ade\u8d5b\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6570\u636e\u5e94\u8be5\u86ee\u6c34\u7684\uff0c\u76f4\u63a5\u628a\u5927\u4e8e\u4e8c\u5206\u503c\u7684\u70b9\u53bb\u6389\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f\u6709\u95ee\u9898\u7684\u3002\u7136\u800c\u9898\u89e3\u533a\u91cc\u90fd\u5199\u7684\u662f\u8fd9\u79cd\u505a\u6cd5\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e3b\u8981\u5bf9\u5982\u4f55\u5904\u7406\u5927\u4e8e\u4e8c\u5206\u503c\u7684\u70b9\u505a\u5206\u6790\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u5927\u4e8e\u4e8c\u5206\u503c\u7684\u70b9\u7684\u610f\u4e49\u662f\u300c\u53ef\u4ee5\u8d70\uff0c\u4f46\u8d70\u4e86\u4e0d\u8d21\u732e\u300d\uff0c\u56e0\u6b64\u53ef\u80fd\u5bf9\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u7684\u53bb\u9664\u5176\u4e3a\u8d77\u70b9 / \u7ec8\u70b9\u7684\u64cd\u4f5c\u6b21\u6570\u5f71\u54cd\u3002\u5904\u7406\u65b9\u6cd5\u5e94\u8be5\u4e3a\u628a\u5927\u4e8e\u4e8c\u5206\u503c\u7684\u70b9\u5de6\u90e8\u548c\u53f3\u90e8\u4e4b\u95f4\u8fde\uff0c\u5373\u8fde $(u_s,u_t),v_u>mid$\u3002\n\n\u7136\u540e\u5c31\u662f\u5176\u4ed6\u9898\u89e3\u7684\u505a\u6cd5\u4e86\uff0c\u4e8c\u5206\u540e\u8dd1\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define cmin(x, y) x = min(x, y)\n#define cmax(x, y) x = max(x, y)\ntemplate<typename T=int> T read() {\n\tT x=0; char IO=getchar(); bool f=0;\n\twhile(IO<'0' || IO>'9')\tf|=IO=='-',IO=getchar();\n\twhile(IO>='0' && IO<='9')\tx=x*10+(IO&15),IO=getchar();\n\treturn f?-x:x;\n}\nint n,K,mat[1100],vis[1100],dp[600][600],dp2[600][600],a[600];\nvector<vector<int>> e;\nvoid add(const int one,const int ano) {\n\te[one].push_back(ano);\n}\nbool DFS(const int now) {\n\tassert(now < int(e.size()));\n\tif(vis[now]) return 0;\n\tvis[now] = 1;\n\tfor(const int y : e[now]) if(!mat[y] || DFS(mat[y])) return bool((mat[y] = now,1));\n\treturn 0;\n}\nbool check(const int cur) {\n\tvector<vector<int>>().swap(e);\n\tmemset(dp2, 0, sizeof dp2);\n\tmemset(mat, 0, sizeof mat);\n\te.resize(n + 5);\n\tint res = 0;\n\tfor(int i=1; i<=n; ++i) {\n\t\tfor(int j=1; j<=n; ++j) {\n\t\t\tif(dp[i][j] && ((a[i] <= cur && a[j] <= cur) || i == j)) dp2[i][j] = 1;\n\t\t}\n\t}\n\tfor(int i=1; i<=n; ++i) if(a[i] > cur) dp2[i][i] = 1;\n\tfor(int k=1; k<=n; ++k) {\n\t\tfor(int i=1; i<=n; ++i) {\n\t\t\tfor(int j=1; j<=n; ++j) dp2[i][j] |= dp2[i][k]&dp2[k][j];\n\t\t}\n\t}\n\tfor(int i=1; i<=n; ++i) {\n\t\tfor(int j=1; j<=n; ++j) if(dp2[i][j]) add(i, j);\n\t}\n\tfor(int i=1; i<=n; ++i) memset(vis+1, 0, n<<2),res += DFS(i);\n\treturn n - res <= K;\n}\nsigned main() {\n\tK = read() + 1,n = read();\n\tint l = 1e9,r = 0;\n\tfor(int i=1,k; i<=n; ++i) {\n\t\ta[i] = read(),k = read();\n\t\tcmin(l, a[i]),cmax(r, a[i]);\n\t\twhile(k--) dp[i][read()] = 1;\n\t}\n\tfor(int k=1; k<=n; ++k) {\n\t\tfor(int i=1; i<=n; ++i) {\n\t\t\tfor(int j=1; j<=n; ++j) if(i != j) dp[i][j] |= dp[i][k]&dp[k][j];\n\t\t}\n\t}\n\tint tmp = r;\n\tfor(int mid; l <= r;) {\n\t\tmid = (l + r)>>1;\n\t\tif(check(mid)) l = mid + 1;\n\t\telse r = mid - 1;\n\t}\n\tif(l > tmp) puts(\"AK\");\n\telse printf(\"%d\\n\", l);\n\treturn 0;\n}\n```",
        "postTime": 1641105491,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u7528\u5fc3\u5199\u9898\u610f\uff0c\u7528\u811a\u9020\u6570\u636e"
    },
    {
        "content": "## \u524d\u8a00\n\n\u672c\u9898\u89e3\u662f[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/Mychael/solution-p4589)\u505a\u6cd5\u7684\u4f18\u5316\uff08\u5199\u6cd5\u66f4\u7b80\u5355\uff09\u3002\u57fa\u672c\u601d\u8def\u4e0e\u4e4b\u76f8\u540c\uff0c\u6240\u4e0d\u540c\u7684\u662f\u53ef\u4ee5\u4e0d\u7528\u6bcf\u6b21\u91cd\u65b0\u521b\u5efa\u4e00\u6b21\u56fe\u3002\n\n\u8fd8\u6709\u6709\u4e00\u9053\u9898\u505a\u6cd5\u4e0e\u4e4b\u7c7b\u4f3c\u7684\u9898[P4251](https://www.luogu.com.cn/problem/P4251)\u3002\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a $m$ \u4e2a\u70b9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743\uff0c\u6c42\u662f\u5426\u53ef\u4ee5\u7528 $n+1$ \u6761\u8fb9\u5b8c\u5168\u8986\u76d6\u3002\u5982\u679c\u4e0d\u80fd\uff0c\u6c42\u51fa\u4e0d\u80fd\u8986\u76d6\u7684\u70b9\u6743\u7684\u6700\u5927\u503c\u6700\u5c0f\u662f\u591a\u5c11\u3002\n\n## \u9898\u89e3\n\n\u522b\u7684\u9898\u89e3\u5df2\u7ecf\u5199\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u5c31\u91cd\u590d\u4e00\u904d\u3002\n\n\u5bf9\u4e8e\u80fd\u7684\u60c5\u51b5\u5c31\u662f\u5148\u7528 *Floyd* \u8dd1\u51fa\u4f20\u9012\u80cc\u5305\uff08\u5c31\u662f\u80fd\u5230\u8fbe\u7684\u70b9\uff09\uff0c\u7136\u540e\u5bf9\u8fd9\u4e24\u4e2a\u70b9\u8fde\u8fb9\uff0c\u95ee\u9898\u5c31\u662f\u5bf9\u8fd9\u4e2a\u56fe\u6c42\u6700\u5c0f\u4e0d\u76f8\u4ea4\u8def\u5f84\u8986\u76d6\u95ee\u9898\u3002\u53ef\u4ee5\u4f7f\u7528\u5308\u7259\u5229\u7b97\u6cd5\u3002\n\n\u5bf9\u4e8e\u4e0d\u80fd\u7684\u60c5\u51b5\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u3002\n\n\u4f46\u662f\u6570\u636e $v \\leq 10^9$ \uff0c\u4e0d\u80fd\u76f4\u63a5\u4e8c\u5206\uff0c\u5148\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u7136\u540e\u6839\u636e\u4e0a\u8fb9\u7684\u60c5\u51b5\u5bb9\u6613\u60f3\u5230\u5148\u524d\u9898\u89e3\u4e2d\u7684\u505a\u6cd5\uff0c\u5373\uff1a\u628a\u503c\u6bd4 $mid$ \u5927\u7684\u70b9\u5ffd\u7565\u6389\uff0c\u7136\u540e\u518d\u5efa\u4e00\u4e2a\u56fe\u548c\u4e4b\u524d\u4e00\u6837\u7528\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n## \u4e00\u4e9b\u6539\u8fdb\n\n\u53ef\u4ee5\u53d1\u73b0\u5e76\u4e0d\u7528\u6bcf\u6b21\u91cd\u65b0\u5efa\u4e00\u6b21\u56fe\uff0c\u53ea\u9700\u8981\u6bcf\u6b21\u5224\u65ad\u6bcf\u6b21\u5f85\u5339\u914d\u7684\u70b9\u7684\u6743\u503c\u662f\u5426\u5927\u4e8e $mid$ \u5373\u53ef\uff0c\u5982\u679c\u5927\u4e8e\u53ef\u80fd\u662f\u4e0d\u80fd\u5230\u8fbe\uff0c\u5219\u8df3\u8fc7\u5373\u53ef\u3002\u8fd9\u6837\u5b50\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf $mid$ \uff0c\u7136\u540e\u6bcf\u6b21\u627e\u589e\u5e7f\u8def\u7684\u662f\u5426\u5224\u65ad\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n### \u4e00\u4e2a\u5e38\u89c1\u7684\u6280\u5de7\n\n\u6bcf\u6b21\u5339\u914d\u4e0b\u4e00\u4e2a\u70b9\u65f6\u5019 $vis$ \u6570\u7ec4\u4e0d\u7528\u6e05\u7a7a\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u65f6\u95f4\u6233 $tim$ ,\u6bcf\u6b21\u5224\u65ad $vis_i=tim$ \u5c31\u884c\u4e86\u3002\u5982\u679c\u76f8\u7b49\u5c31\u8bf4\u660e\u5df2\u7ecf\u5230\u8fbe\u8fc7\u4e86\u3002\n\n### \u4e00\u4e9b\u53d8\u52a8\n\n\u56e0\u4e3a\u9898\u76ee\u7ed9\u51fa\u7684 $n,m$ \u4e0d\u592a\u7b26\u5408\u5e38\u89c4\u601d\u7ef4\uff0c\u6240\u4ee5\u5728\u4ee3\u7801\u4e2d\u7528 $n$ \u6765\u8868\u793a\u9898\u76ee\u6570\u91cf\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1002;\nint m,n,val[N],mat[N],vis[N],tim,mps[N][N],lis[N],cntv,lim;\nvoid floyd(){//\u6c42\u4f20\u9012\u80cc\u5305\n\tfor(int k=1;k<=n;++k)\n\t\tfor(int i=1;i<=n;++i)\n\t\t\tfor(int j=1;j<=n;++j)\n\t\t\t\tmps[i][j]|=(mps[i][k]&mps[k][j]);\n}\nbool findadp(int u){//\u5e38\u89c4\u4e8c\u5206\u56fe\u5339\u914d\u5308\u7259\u5229\u7b97\u6cd5\n\tif(val[u]>=lim)return 0;\n\tfor(int i=1;i<=n;++i){\n\t\tif(vis[i]==tim||!mps[u][i]||val[i]>=lim)continue;\n\t\tvis[i]=tim;\n\t\tif(!mat[i]||findadp(mat[i]))\n\t\t\t{mat[i]=u;return 1;}\n\t}return 0;\n}\nbool check(){\n\tint sum=0;tim=0;\n\tfor(int i=1;i<=n;++i)if(val[i]<lim)++sum;//\u6700\u591a\u80fd\u83b7\u5f97\u7684\u70b9\n\tmemset(mat,0,sizeof(mat));\n\tmemset(vis,-1,sizeof(vis));\n\tfor(int i=1;i<=n;++i,++tim)\n\t\tsum-=findadp(i);\n\treturn sum<=m+1;\n}\nint main(){\n\tscanf(\"%d%d\",&m,&n);//\u6ce8\u610f\u8fd9\u91cc\u548c\u9898\u76ee\u7684m,n\u76f8\u53cd\n\tfor(int i=1,t,v;i<=n;++i){\n\t\tscanf(\"%d%d\",&val[i],&t);lis[i]=val[i];\n\t\twhile(t--){scanf(\"%d\",&v);mps[i][v]=1;}\n\t}\n\tfloyd();//\u8054\u901a\u5230\u8fbe\n\tsort(lis+1,lis+1+n);//\u79bb\u6563\u5316\n\tcntv=unique(lis+1,lis+1+n)-lis-1;\n\tfor(int i=1;i<=n;++i)val[i]=lower_bound(lis+1,lis+1+cntv,val[i])-lis;\n\tlim=cntv+1;//[1,lim) \u5de6\u95ed\u53f3\u5f00\n\tif(check()){puts(\"AK\");return 0;}\n\tint l=1,r=cntv;\n\twhile(l<r){//\u4e8c\u5206\u7b54\u6848\n\t\tlim=(l+r+1)>>1;\n\t\tif(check())l=lim;\n\t\telse r=lim-1;\n\t}\n\tprintf(\"%d\\n\",lis[l]);\n\treturn 0;\n}\n```\n",
        "postTime": 1632831474,
        "uid": 360491,
        "name": "BigSmall_En",
        "ccfLevel": 6,
        "title": "P4589 [TJOI2018]\u667a\u529b\u7ade\u8d5b--\u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/16387666.html)\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684\u5e26\u6743\u6709\u5411\u56fe $G$\uff0c\u9009\u51fa $m+1$ \u6761\u94fe\uff0c\u95ee\u80fd\u5426\u5168\u90e8\u70b9\u8986\u76d6\uff0c\u5982\u679c\u4e0d\u80fd\uff0c\u95ee **\u4e0d\u80fd** \u8986\u76d6\u7684\u70b9\u6743\u6700\u5c0f\u503c\u6700\u5927\u662f\u591a\u5c11\u3002\n\n\uff08\u8fd9\u91cc\u7684 $n,m$ \u548c\u539f\u9898\u662f\u53cd\u7740\u7684\uff09\n\n# \u9898\u76ee\u5206\u6790\n\n\u5176\u5b9e\u5c31\u662f\u6c42 $\\verb!DAG!$ \u7684\u6700\u5c0f\u53ef\u91cd\u590d\u8def\u5f84\u70b9\u8986\u76d6\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u8fd9\u4e2a\u56fe\u4f20\u9012\u95ed\u5305\uff0c\u6c42\u51fa\u4e24\u4e2a\u70b9\u662f\u5426\u80fd\u76f8\u4e92\u62b5\u8fbe\uff0c\u80fd\u5219\u6309\u987a\u5e8f\u8fde\u8fb9\u3002\u6700\u540e\u5c31\u8f6c\u6362\u4e3a\u4e86\u6c42 $\\verb!DAG!$ \u7684\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u95ee\u9898\u3002\n\n\u7136\u540e\u6211\u4eec\u53c8\u77e5\u9053\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u6570\u7b49\u4e8e\u70b9\u6570\u51cf\u53bb\u6700\u5927\u5339\u914d\u6570\uff0c\u6240\u4ee5\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u89e3\u5373\u53ef\u3002\n\n------------\n\n\u53ef\u9898\u76ee\u8981\u6211\u4eec\u6700\u5927\u5316\u4e0d\u80fd\u5168\u90e8\u70b9\u8986\u76d6\u7684\u70b9\u6743\u7684\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u6700\u5927\uff0c\u5f53\u201c\u6700\u5c0f\u201d\u201c\u6700\u5927\u201d\u8fde\u5728\u4e00\u8d77\u7684\u65f6\u5019\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0d\u662f\u4e8c\u5206\u5c31\u662f Kruskal \u91cd\u6784\u6811\u3002\u8fd9\u91cc\u5f88\u663e\u7136\u662f\u4e8c\u5206\u7b54\u6848\u3002\n\n\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a\u503c $now$\uff0c\u5224\u65ad \u5f53\u56fe\u7684\u70b9\u6743\u6700\u5927\u503c\u4e3a $now$ \u65f6\u662f\u5426\u80fd\u591f\u5168\u90e8\u70b9\u8986\u76d6\uff0c\u65b9\u6cd5\u4e0e\u4e0a\u9762\u7c7b\u4f3c\uff08\u7279\u522b\u6ce8\u610f\u70b9\u7684\u603b\u6570\u4e0d\u662f $n$\uff09\uff0c\u5982\u679c\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u6570\u4e0d\u8d85\u8fc7 $m+1$ \u5c31\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u6c42\u7684\u662f\u201c\u4e0d\u80fd\u201d\u8986\u76d6\u7684\u70b9\u6743\u7684\u6700\u5c0f\u503c\uff0c\u4e5f\u5c31\u662f\u201c\u80fd\u201d\u8986\u76d6\u7684\u70b9\u6743\u7684\u6700\u5927\u503c\uff08\u6ee1\u8db3\u8fd9\u4e2a\u6700\u5927\u503c\u6700\u5927\uff09\u518d **\u52a0\u4e00**\u3002\n\n-------\n\n\u65f6\u9650\u4f1a\u88ab\u5361\uff0c\u5308\u7259\u5229\u7b97\u6cd5\u6253\u4e0a\u65f6\u95f4\u6233\u3001floyd \u7b80\u5355\u526a\u679d\u5c31\u80fd\u8fc7\u4e86\u3002\n\n# \u4ee3\u7801\n\n```cpp\n// Problem: P4589 [TJOI2018]\u667a\u529b\u7ade\u8d5b\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P4589\n// Memory Limit: 250 MB\n// Time Limit: 1000 ms\n// Date:2022-06-18 08:23\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <cmath>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline double double_read() {\n\t\tlong long ret = 0,w = 1,aft = 0,dot = 0,num = 0;\n\t\tchar ch = getchar();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif (ch == '-') w = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch) || ch == '.') {\n\t\t\tif (ch == '.') {\n\t\t\t\tdot = 1;\n\t\t\t} else if (dot == 0) {\n\t\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\t} else {\n\t\t\t\taft = (aft << 3) + (aft << 1) + ch - '0';\n\t\t\t\tnum ++;\n\t\t\t}\n\t\t\tch = getchar();\n\t\t}\n\t\treturn (pow(0.1,num) * aft + ret) * w;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int INF = 0x3f3f3f3f;\nconst int N = 505;\nstruct Graph {\n\tint v,nxt;\n} gra[N * N];\nint head[N],val[N],vis[N],mat[N];\nbool G[N][N],E[N][N];\nint n,m,idx,nowidx;\ninline void add(int u,int v) {\n\tgra[++ idx] = (Graph){v,head[u]},head[u] = idx;\n}\ninline bool dfs(int now) {\n\tfor (register int i = head[now];i;i = gra[i].nxt) {\n\t\tint v = gra[i].v;\n\t\tif (vis[v] != nowidx) {\n\t\t\tvis[v] = nowidx;\n\t\t\tif (!mat[v] || dfs(mat[v])) {\n\t\t\t\tmat[v] = now;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\ninline void floyd(bool F[][N]) {\n\tfor (register int k = 1;k <= n; ++ k) {\n\t\tfor (register int i = 1;i <= n; ++ i) {\n\t\t\tif (!F[i][k]) continue;\n\t\t\tfor (register int j = 1;j <= n; ++ j) {\n\t\t\t\tif (F[i][k] && F[k][j]) {\n\t\t\t\t\tF[i][j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n//\u56fe\u7684\u70b9\u6743\u6700\u5927\u503c\u4e3a now \u65f6\u662f\u5426\u80fd\u591f\u5168\u90e8\u70b9\u8986\u76d6\ninline bool check(int now) {\n\tidx = nowidx = 0;\n\tmst(gra,0),mst(E,false),mst(vis,0),mst(mat,0),mst(head,0);\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tfor (register int j = 1;j <= n; ++ j) {\n\t\t\tif (G[i][j] && val[i] <= now && val[j] <= now) {\n\t\t\t\tE[i][j] = true;\n\t\t\t}\n\t\t}\n\t}\n\tfloyd(E);\n\tint num = 0,ans = 0;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (val[i] <= now) {\n\t\t\tnum ++;\n\t\t\tfor (register int j = 1;j <= n; ++ j) {\n\t\t\t\tif (E[i][j]) {\n\t\t\t\t\tadd(i,j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (val[i] <= now) {\n\t\t\tnowidx ++;\n\t\t\tif (dfs(i)) ans ++;\n\t\t}\n\t}\n\treturn num - ans <= m;\n}\nint main(void) {\n\tm = read() + 1,n = read();\n\tint l = INF,r = 0;\n\tfor (register int i = 1,t;i <= n; ++ i) {\n\t\tval[i] = read(),t = read();\n\t\tl = std::min(l,val[i]),r = std::max(r,val[i]);\n\t\twhile (t --) {\n\t\t\tint x = read();\n\t\t\tG[i][x] = true;\n\t\t}\n\t}\n\tfloyd(G);\n\tint ans = -1;\n\twhile (l <= r) {\n\t\tint mid = l + r >> 1;\n\t\tif (check(mid)) l = mid + 1,ans = mid;\n\t\telse r = mid - 1;\n\t}\n\tint maxx = 0;\n\tfor (register int i = 1;i <= n; ++ i) maxx = std::max(maxx,val[i]);\n\tif (ans + 1 > maxx) puts(\"AK\");\n\telse printf(\"%d\\n\",ans + 1);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1655514641,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P4589 [TJOI2018]\u667a\u529b\u7ade\u8d5b"
    }
]