[
    {
        "content": "# Sol\n\u4e3d\u6d01\u59d0\u7684\u9898\u76ee\u8fd8\u662f\u68d2\u68d2\u7684\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\n\n$Check?$\n\u628a\u5c0f\u4e8e\u5b83\u7684\u8bbe\u4e3a$-1$\uff0c\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u8bbe\u4e3a$1$\n\n$[a, b]$\u6c42\u4e00\u4e2a\u6700\u5927\u540e\u7f00\u5b50\u6bb5\u548c\n$[c, d]$\u6c42\u4e00\u4e2a\u6700\u5927\u524d\u7f00\u5b50\u6bb5\u548c\n$[b+1, c-1]$\u6c42\u4e00\u4e2a\u548c\n\n\u52a0\u8d77\u6765\u5982\u679c\u5927\u4e8e\u7b49\u4e8e$0$\uff0c\u90a3\u4e48\u6ee1\u8db3\u8981\u6c42\n\u4e14\u8fd9\u4e2a\u6570\u8fd8\u53ef\u4ee5\u53d8\u5927\uff0c\u5426\u5219\u5c31\u53ea\u80fd\u7f29\u5c0f\n\n\u6bcf\u4e2a\u6570\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u505a\uff0c\u7a7a\u95f4\u5f00\u4e0d\u4e0b\uff0c\u7528\u4e3b\u5e2d\u6811\u5373\u53ef\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\n**\u4f1a\u4e0d\u4f1a\u4e8c\u5206\u7684\u7b54\u6848\u4e0d\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u5462\uff1f**\n\u663e\u7136\u662f\u4e0d\u4f1a\u7684\uff0c\u5982\u679c\u533a\u95f4\u5916\u6709\u4e2a\u6570\u6ee1\u8db3\u8981\u6c42\uff0c\u90a3\u4e48\u533a\u95f4\u5185\u4e00\u5b9a\u4f1a\u6709\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e\u5b83\uff0c\u663e\u7136\u533a\u95f4\u5185\u7684\u90a3\u4e2a\u6570\u6700\u4f18\uff0c\u800c\u4e14\u4e5f\u662f\u6ee1\u8db3\u8981\u6c42\u7684\n\n\u90a3\u4e48\u505a\u5b8c\u4e86\n\n```cpp\n# include <bits/stdc++.h>\n# define RG register\n# define IL inline\n# define Fill(a, b) memset(a, b, sizeof(a))\nusing namespace std;\ntypedef long long ll;\nconst int _(1e5 + 5);\n\nIL int Input(){\n    RG int x = 0, z = 1; RG char c = getchar();\n    for(; c < '0' || c > '9'; c = getchar()) z = c == '-' ? -1 : 1;\n    for(; c >= '0' && c <= '9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n    return x * z;\n}\n\nint rt[_], a[_], n, tot, q[4], id[_];\nstruct Mx{\n\tint lmax, rmax, sum, mx;\n\n\tIL void Init(){\n\t\tlmax = rmax = -_, sum = 0;\n\t}\n} Ans;\nstruct HJT{\n\tint ls, rs;\n\tMx v;\n} T[_ * 20];\n\nIL Mx Merge(RG Mx A, RG Mx B){\n\tRG Mx C;\n\tC.lmax = max(A.lmax, A.sum + B.lmax);\n\tC.rmax = max(B.rmax, A.rmax + B.sum);\n\tC.sum = A.sum + B.sum;\n\treturn C;\n}\n\nIL void Build(RG int &x, RG int l, RG int r){\n\tx = ++tot;\n\tT[x].v.lmax = T[x].v.rmax = T[x].v.sum = r - l + 1;\n\tif(l == r) return;\n\tRG int mid = (l + r) >> 1;\n\tBuild(T[x].ls, l, mid), Build(T[x].rs, mid + 1, r);\n}\n\n\nIL void Modify(RG int &x, RG int l, RG int r, RG int p){\n\tT[++tot] = T[x], x = tot;\n\tif(l == r){\n\t\tT[x].v.lmax = T[x].v.rmax = T[x].v.sum = -1;\n\t\treturn;\n\t}\n\tRG int mid = (l + r) >> 1;\n\tif(p <= mid) Modify(T[x].ls, l, mid, p);\n\telse Modify(T[x].rs, mid + 1, r, p);\n\tT[x].v = Merge(T[T[x].ls].v, T[T[x].rs].v);\n}\n\nIL void Query(RG int x, RG int l, RG int r, RG int L, RG int R){\n\tif(L <= l && R >= r){\n\t\tAns = Merge(Ans, T[x].v);\n\t\treturn;\n\t}\n\tRG int mid = (l + r) >> 1;\n\tif(L <= mid) Query(T[x].ls, l, mid, L, R);\n\tif(R > mid) Query(T[x].rs, mid + 1, r, L, R);\n}\n\nIL int Check(RG int mid){\n\tRG int val = 0;\n\tif(q[1] + 1 <= q[2] - 1) Ans.Init(), Query(rt[mid], 1, n, q[1] + 1, q[2] - 1), val += Ans.sum;\n\tAns.Init(), Query(rt[mid], 1, n, q[0], q[1]), val += Ans.rmax;\n\tAns.Init(), Query(rt[mid], 1, n, q[2], q[3]), val += Ans.lmax;\n\treturn val >= 0;\n}\n\nIL int Cmp(RG int x, RG int y){\n\treturn a[x] < a[y];\n}\n\nint main(RG int argc, RG char* argv[]){\n\tn = Input(), Build(rt[1], 1, n), T[0].v.Init();\n\tfor(RG int i = 1; i <= n; ++i) a[i] = Input(), id[i] = i;\n\tsort(id + 1, id + n + 1, Cmp);\n\tfor(RG int i = 2; i <= n; ++i) rt[i] = rt[i - 1], Modify(rt[i], 1, n, id[i - 1]);\n\tfor(RG int Q = Input(), ans = 0; Q; --Q){\n\t\tfor(RG int i = 0; i < 4; ++i) q[i] = (Input() + ans) % n + 1;\n\t\tsort(q, q + 4);\n\t\tRG int l = 1, r = n;\n\t\twhile(l <= r){\n\t\t\tRG int mid = (l + r) >> 1;\n\t\t\tif(Check(mid)) ans = a[id[mid]], l = mid + 1;\n\t\t\telse r = mid - 1;\n\t\t}\n\t\tprintf(\"%d\\n\", ans);\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1520858403,
        "uid": 47640,
        "name": "Cyhlnj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "\u5c45\u7136\u6ca1\u4eba\u5199\u9898\u89e3\uff0c\u7adf\u7136\u8f6e\u5230\u4e86\u672c\u849f\u84bb\u6765\u5077\u5077\u5199\u4e00\u7bc7\u8dd1\u7684\u5de8\u6162\u7684\u8fa3\u9e21\u9898\u89e3  \n\u8fd9\u9898\u771f\u662fDSM  \n\u672c\u9898\u7684\u60f3\u6cd5\u5f88\u503c\u5f97\u501f\u9274  \n\u5bfb\u627e\u4e2d\u4f4d\u6570\u7528\u4e8c\u5206\u6765\u5b9e\u73b0  \n\u4e2d\u9014\u4f18\u5316\u7528\u4e3b\u5e2d\u6811\u6765\u5b9e\u73b0  \n\u96be\u9053\u8fd9\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684\u4e8c\u5206\u5957\u4e3b\u5e2d\u6811  \n\u60ca\u4e86  \n## \u4e8c\u5206+\u4e3b\u5e2d\u6811  \n\u8003\u8651\u5c06\u533a\u95f4\u5185\u7684\u6570\u5b57\u8fdb\u884c\u4e00\u4e9b\u5904\u7406\uff0c  \n\u5f53\u6211\u4eec\u5c1d\u8bd5x\u662f\u5426\u662f\u4e2d\u4f4d\u6570\u65f6\uff0c\u5c06\u5927\u4e8e\u7b49\u4e8ex\u7684\u6570\u7f6e\u62101\uff0c\u5176\u4f59\u7684\u6570\u7f6e\u6210-1\uff0c  \n\u663e\u7136\u5f53\u533a\u95f4\u548c\u5927\u4e8e\u7b49\u4e8e0\u65f6$\\le$\u4e2d\u4f4d\u6570\uff0c\u5426\u5219\u5c31\u662f$\\ge$\u4e2d\u4f4d\u6570  \n\u6839\u636e\u8fd9\u4e00\u60f3\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\u4e2d\u4f4d\u6570  \n\u4f46\u662f\u8fd9\u6837\u5355\u6b21\u5904\u7406\u7684\u590d\u6742\u5ea6\u662f$O(n)$\u7684  \n\u67e5\u8be2\u4e00\u6b21\u5c31\u662f$O(nlog_2{n})$\u7684\uff0c\u4e0dgg\u624d\u5947\u602a  \n\u8003\u8651\u7528\u4e3b\u5e2d\u6811\u8fdb\u884c\u9884\u5904\u7406  \n\u5c06\u6bcf\u4e2a\u6570\u4e8c\u5206\u65f6\u76841/-1\u5e8f\u5217\u5904\u7406\u51fa\u6765  \n\u663e\u7136\u5c06\u6570\u7ec4\u6392\u5e8f\u540e\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\u524d\u7f00\u4fe1\u606f  \n\u4f7f\u7528\u65f6\u590d\u6742\u5ea6\u4e3a$O(log_2{n})$\n\u5355\u8bcd\u67e5\u8be2\u590d\u6742\u5ea6$P(log_2^{2}{n})$\u4f18\u8d8a\u4e86\u4e0d\u5c11  \n\u603b\u7684\u590d\u6742\u5ea6$O(nlog_2{n}+Qlog_2^{2}{n})$\u663e\u7136\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9053\u9898  \n## \u5bf9\u4e8e$[a,b],[c,d]$\u7684\u7aef\u70b9\u9009\u62e9\u95ee\u9898  \n\u6211\u4eec\u5e0c\u671b\u5f97\u5230\u7684\u4e2d\u4f4d\u6570\u8d8a\u5927\u8d8a\u597d\uff0c\u4e5f\u5c31\u662f\u533a\u95f4\u548c\u8d8a\u5927\u8d8a\u597d  \n$[b+1,c-1]$\u7684\u548c\u662f\u5fc5\u987b\u53d6\u7684\uff0c$[a,b]$\u5e94\u53d6\u53f3\u6700\u5927\u8fde\u7eed\u5b50\u5e8f\u5217\uff0c  \n$[c,d]$\u5e94\u53d6\u5de6\u6700\u5927\u8fde\u7eed\u5b50\u5e8f\u5217  \n\u5c31\u53ef\u4ee5\u5c3d\u53ef\u80fd\u662f\u533a\u95f4\u548c\u6700\u5927\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\n#define N 20010\n#define MAXN 1000010\n#define inf (1<<29)\nusing namespace std;\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline void read(int &x)\n{\n    int s=0,w=1;\n    char c=nc();\n    while(!isdigit(c)){if(c=='-')w=-1;c=nc();}\n    while(isdigit(c)){s=(s<<3)+(s<<1)+c-'0';c=nc();}\n    x=s*w;\n}\ninline void write(int x)\n{\n    if(x<0)x=-x,putchar('-');\n    if(x>9)write(x/10);\n    putchar(x%10+'0');\n}\nstruct node\n{\n    int lmax,rmax,ls,rs,sum;\n}t[MAXN];\nint cnt,Root[N];\ninline void push_up(int root)\n{\n    t[root].sum=t[t[root].ls].sum+t[t[root].rs].sum;\n    t[root].lmax=max(t[t[root].ls].lmax,t[t[root].rs].lmax+t[t[root].ls].sum);\n    t[root].rmax=max(t[t[root].rs].rmax,t[t[root].ls].rmax+t[t[root].rs].sum);\n}\nint build(int l,int r)\n{\n    int root=++cnt;\n    if(l==r)\n    {\n        t[root].lmax=t[root].rmax=t[root].sum=1;\n        return root;\n    }\n    int mid=(l+r)>>1;\n    t[root].ls=build(l,mid);\n    t[root].rs=build(mid+1,r);\n    push_up(root);\n    return root;\n}\nvoid insert(int &root,int lastroot,int l,int r,int x,int y)\n{\n    root=++cnt;\n    t[root]=t[lastroot];\n    if(l==r)\n    {\n        t[root].lmax=t[root].rmax=t[root].sum=y;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    if(x<=mid)t[root].rs=t[lastroot].rs,insert(t[root].ls,t[lastroot].ls,l,mid,x,y);\n    else t[root].ls=t[lastroot].ls,insert(t[root].rs,t[lastroot].rs,mid+1,r,x,y);\n    push_up(root);\n}\nint query_sum(int root,int l,int r,int left,int right)\n{\n    if(l>=left&&r<=right)return t[root].sum;\n    int mid=(l+r)>>1;\n    if(right<=mid)return query_sum(t[root].ls,l,mid,left,right);\n    else if(left>=mid+1)return query_sum(t[root].rs,mid+1,r,left,right);\n    else return query_sum(t[root].ls,l,mid,left,mid)+query_sum(t[root].rs,mid+1,r,mid+1,right);\n}\nint query_lmax(int root,int l,int r,int left,int right)\n{\n    if(l>=left&&r<=right)return t[root].lmax;\n    int mid=(l+r)>>1;\n    if(right<=mid)return query_lmax(t[root].ls,l,mid,left,right);\n    else if(left>=mid+1)return query_lmax(t[root].rs,mid+1,r,left,right);\n    else return max(query_lmax(t[root].ls,l,mid,left,mid),query_sum(t[root].ls,l,mid,left,mid)+query_lmax(t[root].rs,mid+1,r,mid+1,right));\n}\nint query_rmax(int root,int l,int r,int left,int right)\n{\n    if(l>=left&&r<=right)return t[root].rmax;\n    int mid=(l+r)>>1;\n    if(right<=mid)return query_rmax(t[root].ls,l,mid,left,right);\n    else if(left>=mid+1)return query_rmax(t[root].rs,mid+1,r,left,right);\n    else return max(query_rmax(t[root].rs,mid+1,r,mid+1,right),query_sum(t[root].rs,mid+1,r,mid+1,right)+query_rmax(t[root].ls,l,mid,left,mid));\n}\nint n,Q;\nint q[4];\ninline bool check(int k,int a,int b,int c,int d)\n{\n    int sum=0;\n    if(c-1>=b+1)sum+=query_sum(Root[k],1,n,b+1,c-1);\n    sum+=query_rmax(Root[k],1,n,a,b);\n    sum+=query_lmax(Root[k],1,n,c,d);\n    return sum>=0;\n}\nstruct fafa\n{\n    int pos,x;\n}a[N];\ninline bool cmp(const fafa &a,const fafa &b)\n{\n    return a.x<b.x;\n}\nint pre;\nint main()\n{\n    read(n);\n    for(register int i=1;i<=n;i++)\n    {\n        read(a[i].x);\n        a[i].pos=i;\n    }\n    sort(a+1,a+n+1,cmp);\n    Root[1]=build(1,n);\n    for(register int i=2;i<=n+1;i++)\n        insert(Root[i],Root[i-1],1,n,a[i-1].pos,-1);\n    read(Q);\n    while(Q--)\n    {\n        read(q[0]),read(q[1]),read(q[2]),read(q[3]);\n        for(register int i=0;i<4;i++)q[i]=(q[i]+pre)%n;\n        sort(q,q+4);\n        int l=1,r=n,ans;\n        while(l<=r)\n        {\n            int mid=(l+r)>>1;\n            if(check(mid,q[0]+1,q[1]+1,q[2]+1,q[3]+1))l=mid+1,ans=mid;\n            else r=mid-1;\n        }\n        write(a[ans].x),putchar(10),pre=a[ans].x;\n    }\n}\n\n```",
        "postTime": 1519818751,
        "uid": 60462,
        "name": "sherlock55341",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "\u597d\u725b\u903c\u76841\u9053\u9898,\u601d\u8def\u771f\u5fc3\u4e0d\u597d\u60f3\n\n\u5148\u4e8c\u5206\u7b54\u6848$mid$,\u770b\u5230\u4e2d\u4f4d\u6570\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u628a\u533a\u95f4\u4e2d\u5927\u4e8e\u7b49\u4e8e$mid$\u7684\u53d61,\u5c0f\u4e8e$mid$\u7684\u53d6-1,\u5982\u679c\u533a\u95f4\u4e4b\u548c\u5927\u4e8e\u7b49\u4e8e0(\u770b\u9898,\u867d\u7136\u662f\u5411\u4e0b\u53d6\u6574\u4f46\u662f\u5e8f\u53f7\u4ece0\u5f00\u59cb,\u5176\u5b9e\u5c31\u662f\u4ece1\u5f00\u59cb,\u5411\u4e0a\u53d6\u6574,\u6240\u4ee5\u7b49\u4e8e0\u4e5f\u53ef\u4ee5),\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570\u5c31\u5927\u4e8e\u7b49\u4e8e$mid$.\u8fd9\u4e2a\u4e1c\u897f\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4,\u540c\u65f6\u4e5f\u5f88\u597d\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u524d\u7f00\u548c\u4ee5\u53ca\u533a\u95f4\u6700\u5927\u540e\u7f00\u548c,\u7edf\u8ba1\u65b9\u5f0f\u4e3a:\n\n\u8bbe$suf[x]$\u4e3a\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u524d\u7f00,$Ls$\u4e3a\u5de6\u533a\u95f4,$Rs$\u4e3a\u53f3\u533a\u95f4,\u5904\u7406\u5b8c\u5de6\u53f3\u513f\u5b50\u4e4b\u540e:\n\n$$suf[x]=max(suf[Ls],sum[Ls]+suf[Rs])$$\n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u4fdd\u8bc1$suf$\u662f\u8fde\u7740\u533a\u95f4\u5f00\u5934\u4e14\u662f\u6700\u5927\u7684\n\n\u533a\u95f4\u6700\u5927\u540e\u7f00$pre[x]$\u540c\u7406:\n\n$$pre[x]=max(pre[Rs],sum[Rs]+pre[Ls])$$\n\n\u6709\u4ec0\u4e48\u7528\u5462?\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee$a,b,c,d$,$[b,c]$\u7684\u533a\u95f4\u662f\u80af\u5b9a\u5305\u542b\u5728\u5185\u7684,\u6240\u4ee5\u6211\u4eec\u8981\u5728\u7ebf\u6bb5\u6811\u4e2d\u67e5\u8be2\u533a\u95f4$[b,c]$\u7684\u548c\n\u4ee5\u53ca$[a,b-1]$\u7684\u6700\u5927\u540e\u7f00\u548c,$[c+1,d]$\u7684\u6700\u5927\u524d\u7f00\u548c,\u8fd9\u6837\u5c31\u80fd\u7ec4\u62101\u4e2a\u8fde\u7eed\u7684\u533a\u95f4,\u82e5\u8be5\u533a\u95f4\u5927\u4e8e\u7b49\u4e8e0,\u90a3\u4e48$mid$\u5c31\u5408\u6cd5\u4e86.\n\n\u6709\u6ca1\u6709\u53ef\u80fd\u4e8c\u5206\u51fa\u7684\u7b54\u6848\u4e0d\u5728\u533a\u95f4\u4e2d\u5462?\u4e0d\u53ef\u80fd,\u56e0\u4e3a\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u7684$mid$\u7b26\u5408\u6761\u4ef6\u4f46\u662f\u533a\u95f4\u4e2d\u6ca1\u6709,\u90a3\u4e48\u628a$mid$\u589e\u5927\u4e3a\u533a\u95f4\u4e2d\u51fa\u73b0\u8fc7\u76841\u4e2a\u66f4\u5927\u7684\u6570,\u5fc5\u5b9a\u4e5f\u7b26\u5408\u6761\u4ef6,\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u80af\u5b9a\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u8fc7.\n\n\u4f46\u662f\u8fd9\u53ea\u662f\u7b2c\u4e00\u6b65.\u63a5\u4e0b\u6765\u8981\u89e3\u51b3\u600e\u4e48\u628a\u533a\u95f4\u4e2d\u7684\u6570\u53d8\u62100\u548c1,\u5982\u679c\u6bcf\u4e8c\u5206\u4e00\u6b21\u90fd\u8fdb\u884c\u8be5\u64cd\u4f5c,\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u662f\u5355\u6b21$O(n)$,\u6bcf\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(n\\log_2n)$,\u8fd8\u4e0d\u5982\u76f4\u63a5sort\u5462\n\n\u4e8e\u662f\u6211\u4eec\u7ee7\u7eed\u601d\u8003,\u4e00\u4e2a\u6570$a_i$\u7684\u8d21\u732e\u7531-1\u53d8\u62101\u662f\u5728\u4ec0\u4e48\u65f6\u5019\u5462?\u53ea\u6709\u5f53$mid$\u4ece\u6bd4$a_i$\u5927\u53d8\u6210\u6bd4$a_i$\u5c0f\u7684\u65f6\u5019,\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u628a$mid$\u589e\u5927,\u53ea\u4f1a\u5bf9$a_i=mid$\u7684\u4f4d\u7f6e\u9020\u6210\u5f71\u54cd,$mid$\u4ece\u6700\u5c0f\u7684$a_i$\u589e\u5927\u5230\u6bd4\u6700\u5927\u7684$a_i$\u8fd8\u5927\u65f6,\u6bcf\u4e2a\u6570\u7684\u8d21\u732e\u90fd\u53ea\u4f1a\u6539\u53d81\u6b21,\u5176\u5b83\u90e8\u5206\u90fd\u53ef\u4ee5\u5171\u7528.\n\n\u770b\u5230\u5171\u7528,\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u4e3b\u5e2d\u6811\u4e86,\u4e8e\u662f\u6211\u4eec\u628a\u6240\u6709\u53ef\u80fd\u7684mid\u7684\u60c5\u51b5\u4e00\u8d77\u5148\u5efa1\u68f5\u4e3b\u5e2d\u6811,\u90a3\u4e48\u6bcf\u4e2a$mid$\u8ba1\u7b97\u533a\u95f4\u548c\u7684\u590d\u6742\u5ea6\u5c31\u53ea\u9700\u8981$log_2n$\u4e86,\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log_2^2n)$,\u7a7a\u95f4\u590d\u6742\u5ea6$O(n\\log_2n)$\n\n\n### \u4ee3\u7801\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define MN 20005\n#define Ls Tree[x].ls\n#define Rs Tree[x].rs\n#define getchar() (p1==p2 and (p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<23],*p1=buf,*p2=buf;\ninline int read(){\n\tint a=0;char c=getchar();\n\twhile(c>57 or c<48)c=getchar();\n\twhile(47<c and c<58){\n\t\ta=a*10+c-48;\n\t\tc=getchar();\n\t}\n\treturn a;\n}//\u5feb\u8bfb\nstruct tree{\n\tint sum,pre,suf,ls,rs;\n}Tree[MN<<6|1];\n//\u4e3b\u5e2d\u6811\nint v[MN],q[4],n,m,cnt,N,root[MN],a[MN];\n//v\u7528\u4e8e\u79bb\u6563\u5316,a\u7528\u4e8e\u8f93\u5165\nvector<int>num[MN];//\u8bb0\u5f55\u6bcf\u79cd\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\nint low_bnd(int x){\n\tint l=1,r=N+1;\n\twhile(l+1<r){\n\t\tint mid=(l+r)>>1;\n\t\tif(v[mid]>x)r=mid;\n\t\t\telse l=mid;\n\t}\n\treturn l;\n}//\u624b\u52a8\u4e8c\u5206\nvoid change(int &x,int l,int r,int loc,int v){\n\tTree[++cnt]=Tree[x];x=cnt;\n\tif(l==r&&loc==l){Tree[x].sum=v;if(v>0)Tree[x].pre=Tree[x].suf=v;return;}\n\tif(l>loc||r<loc)return;\n\tint mid=(l+r)>>1;\n\tchange(Ls,l,mid,loc,v);change(Rs,mid+1,r,loc,v);\n\tTree[x].sum=Tree[Ls].sum+Tree[Rs].sum;\n\tTree[x].suf=max(Tree[Ls].suf,Tree[Ls].sum+Tree[Rs].suf);\n\tTree[x].pre=max(Tree[Rs].pre,Tree[Rs].sum+Tree[Ls].pre);\n}//\u7ef4\u62a4\u533a\u95f4\u548c,\u533a\u95f4\u6700\u5927\u524d\u7f00\u548c,\u533a\u95f4\u6700\u5927\u554a\u540e\u7f00\u548c\nint asksum(int x,int l,int r,int b,int e){\n\tif(b<=l&r<=e)return Tree[x].sum;\n\tif(b>r||e<l)return 0;\n\tint mid=(l+r)>>1;\n\treturn asksum(Ls,l,mid,b,e)+asksum(Rs,mid+1,r,b,e);\n}//\u6c42\u533a\u95f4\u548c\nint asksuf(int x,int l,int r,int b,int e){\n\tif(b<=l&&r<=e) return Tree[x].suf;\n\tif(b>r||e<l)return 0;\n\tint mid=(l+r)>>1;\n\treturn max(asksum(Ls,l,mid,b,e)+asksuf(Rs,mid+1,r,b,e),asksuf(Ls,l,mid,b,e));\n}//\u6c42\u6700\u5927\u524d\u7f00\nint askpre(int x,int l,int r,int b,int e){\n\tif(b<=l&&r<=e)return Tree[x].pre;\n\tif(b>r||e<l)return 0;\n\tint mid=(l+r)>>1;\n\treturn max(askpre(Ls,l,mid,b,e)+asksum(Rs,mid+1,r,b,e),askpre(Rs,mid+1,r,b,e));\n}//\u6c42\u6700\u5927\u540e\u7f00\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i){v[i]=a[i]=read();}\n\tm=read();\n\tsort(v+1,v+1+n);\n\tN=unique(v+1,v+1+n)-1-v;\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]=low_bnd(a[i]);\n\t\tnum[a[i]].push_back(i);\n\t}//\u79bb\u6563\u5316,\u8bb0\u5f55\u5404\u4e2a\u6570\u5b57\u7684\u4f4d\u7f6e\n\tfor(int i=1;i<=n;++i)change(root[N+1],1,n,i,-1);\n\tfor(int i=N;i;--i){\n\t\troot[i]=root[i+1];\n\t\tfor(int j=0;j<num[i].size();++j){\n\t\t\tchange(root[i],1,n,num[i][j],1);\n\t\t}\n\t}\n    //\u5efa\u6811,\u4e0d\u4e00\u5b9a\u662f\u5355\u6b21O(logn),\u4f46\u662f\u80af\u5b9a\u662f\u5747\u644aO(nlogn)\u7684\n\tint ans=0,a,b,c,d;\n\tfor(int i=1;i<=m;++i){\n\t\ta=read();b=read();c=read();d=read();\n\t\tq[0]=(a+ans)%n;q[1]=(b+ans)%n;q[2]=(c+ans)%n;q[3]=(d+ans)%n;\n\t\tsort(q,q+4);\n\t\ta=q[0]+1;b=q[1]+1;c=q[2]+1;d=q[3]+1;\n        //\n\t\tint l=1,r=N+1;\n\t\twhile(l+1<r){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tint midans=asksum(root[mid],1,n,b,c);\n\t\t\tint lans=askpre(root[mid],1,n,a,b-1);\n\t\t\tint rans=asksuf(root[mid],1,n,c+1,d);\n\t\t\tif(midans+lans+rans>=0) l=mid;\n\t\t\t\telse r=mid;\n\t\t}\n        //\u4e8c\u5206\n\t\tans=v[l];\n\t\tprintf(\"%d\\n\",v[l]);\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1562075319,
        "uid": 7480,
        "name": "skydogli",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "\uff08\u8c03\u6574\u5b8c\u683c\u5f0f\u540e\uff0c\u7b2c\u4e09\u6b21\u63d0\u4ea4\u3002\u671b\u8bf7\u6279\u51c6\uff01\uff09\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u4e3b\u5e2d\u6811\uff0c\u4e8c\u5206\u7b54\u6848\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\u5de6\u53f3\u6700\u5927\u5b50\u6bb5\u548c\u601d\u60f3\u3002\n\n\u4e0d\u4f1a\u4e3b\u5e2d\u6811\u7684\uff0c\u8df3\u8f6c\uff1a[P3834 \u3010\u6a21\u677f\u3011\u4e3b\u5e2d\u6811](https://www.luogu.org/problemnew/show/P3834)\n\n\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u5408\u5e76\u5de6\u53f3\u6700\u5927\u5b50\u6bb5\u548c\u7684\uff0c\u53ef\u4ee5\u53bb\u505a\uff1a[P3792 \u5927\u6bcd\u795e](https://www.luogu.org/problemnew/show/P3792)\n\nps\uff1a\u4e24\u5230\u7d2b\u9898\u518d\u52a0\u4e00\u4e2a\u4e8c\u5206\u5c31\u662f\u96c6\u8bad\u961f\u9ed1\u9898\u60f9\uff08\u96fe\uff09\n\n\u770b\u5230\u5927\u5bb6\u7684\u7801\u98ce\u90fd\u6e05\u5947\u4fca\u79c0\uff08\u6709\u7684\u7528\u4e0b\u5212\u7ebf\u5f53\u53d8\u91cf\uff0c\u6709\u7684\u4e0d\u6253\u7a7a\u683c\u5728\u538b\u884c\uff09\uff0c\u6211\u6765\u63d0\u4f9b\u4e00\u4efd\u6bd4\u8f83\u6b63\u5e38\u7684\u9898\u89e3\u3002\n\n\u770b\u5230\u533a\u95f4\u4e2d\u4f4d\u6570\uff0c\u8001\u53f8\u673a\u4e00\u822c\u90fd\u4f1a\u60f3\u5230\u7528\u4e8c\u5206\uff0cnum >= mid\u8bbe1\uff0c\nnum < mid\u8bbe-1\u3002\u5982\u679c\u533a\u95f4\u548c\u5927\u4e8e0\uff0cl = mid + 1 \u5426\u5219 r = mid - 1\n\n\u4f46\u6b64\u9898\uff0c\u533a\u95f4\u4e0d\u56fa\u5b9a\uff08\u5927\u96fe\uff09\u3002\u6211\u4eec\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u8003\u8651\u4e00\u4e0bcheck\u51fd\u6570\u3002\n\n\u4ee5(\u524d\u533a\u95f4rmax + \u540e\u533a\u95f4lmax + \u5fc5\u9009\u533a\u95f4[b + 1, c - 1]\u7684tot \u662f\u5426>= 0)\u6765\u5224\u65ad\n\nCheck\u51fd\u6570:\n\n```cpp\ninline bool check(int id, int A, int B, int C, int D)\n{\n    int ret = 0;\n    if (B + 2 <= C) ret += pst.query(root[id], 1, n, B + 1, C - 1).tot;\n    ret += pst.query(root[id], 1, n, A, B).rmax;\n    ret += pst.query(root[id], 1, n, C, D).lmax;\n    return ret >= 0;\n}\n```\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff0c\u5fc5\u9009\u533a\u95f4\u4e0d\u8bf4\uff0c\u5269\u4e0b\u4e24\u533a\u95f4\u8981\u662f1\u5c3d\u53ef\u80fd\u591a\u6240\u4ee5\u5982\u6b64check\u4e86\u3002\n\n\u800clmax\uff0crmax\uff0c\u548ctot\u5c31\u8981\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5566\u3002\n\n\n```cpp\n//Program written by Liu Zhaozhou ~~~\n#include <bits/stdc++.h>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <vector>\n#include <deque>\n#include <string>\n\n#define lowbit(x) x & -x\n\n#pragma GCC optimize(3)\n\nusing namespace std;\n\nusing namespace std;\n\nnamespace Base {\n    inline char gc(void)\n    {\n        static char buf[100000], *p1 = buf, *p2 = buf;\n        return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;\n    }\n    \n    #define gc() getchar()\n        \n    template <class T> inline void read(T &x)\n    {\n        T flag = (T) 1; x = 0; static char ch = gc();\n        for (; !isdigit(ch); ch = gc()) if (ch == '-') flag = -1;\n        for (; isdigit(ch); ch = gc()) x = x * 10 + ch - 48;\n        if (ch == '.') {\n            T dgt = 0.1;\n            for (ch = gc(); isdigit(ch); ch = gc())\n                x = x + dgt * (ch - 48), dgt *= 0.1;\n        } x *= flag; return;\n    }\n    \n    template <class T> inline void write(T x) {\n        if (x < 0) putchar('-'), x = -x;\n        register T y = 1; int len = 1;\n        for (; y <= x / 10; y *= 10) ++len;\n        for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n    }\n    \n    template <class T> inline void writeln(T x) {write(x); puts(\"\");}\n    template <class T> inline void writeln(T x, char c) {write(x); putchar(c);}\n    template <class T> inline void writeln(char c, T x) {putchar(c); write(x);}\n    \n    template <class T> inline void chkmax(T &x, const T y) {x > y ? x = x : x = y;}\n    template <class T> inline void chkmin(T &x, const T y) {x < y ? x = x : x = y;}\n    \n    typedef long long ll;\n    typedef unsigned long long ull;\n    typedef double ld;\n    \n    #define Ms(arr, opt) memset(arr, opt, sizeof(arr))\n    #define Mp(x, y) make_pair(x, y)\n    \n    inline void file(string str) {\n        freopen((str + \".in\").c_str(), \"r\", stdin);\n        freopen((str + \".out\").c_str(), \"w\", stdout);\n    }\n}\n\nusing namespace Base;\n\nenum {\n    Maxn = 20005\n};\n\nint n, cnt, m, lastans, q[4], root[Maxn];\nstruct State {\npublic:\n    int id, num;\n    inline bool operator < (const State&x) const{\n        return num < x.num;\n    }\n} a[Maxn << 2 | 1];\n\nclass Info {\npublic:\n    int tot, lmax, rmax;\n    inline Info operator + (const Info&opt)\n    const {\n        return (Info) {\n            tot + opt.tot,\n            max(lmax, tot + opt.lmax),\n            max(opt.rmax, opt.tot + rmax)\n        };\n    }\n    inline void Init(int _t, int _l, int _r) {\n    \ttot = _t, lmax = _l, rmax = _r;\n\t}\n};\nclass Node {\npublic:\n    int ls, rs; Info sum;\n} t[Maxn * 40 + 5];\n\nclass PST {\npublic:\n    inline void pushup(int pos) {\n        t[pos].sum = t[t[pos].ls].sum + t[t[pos].rs].sum;\n    }\n    \n    inline void build(int &u, int l, int r) {\n        int tmp = u; u = ++cnt; t[u] = t[tmp];\n    \tif (l == r) {t[u].sum.Init(1, 1, 1); return;}\n    \tint mid = l + r >> 1;\n    \tbuild(t[u].ls, l, mid),\n    \tbuild(t[u].rs, mid + 1, r);\n    \tpushup(u);\n    }\n    \n    inline void modify(int &u, int l, int r, int x) {\n    \tint tmp = u; u = ++cnt; t[u] = t[tmp];\n    \tif (l == r) {t[u].sum.Init(-1, -1, -1); return;}\n    \tint mid = l + r >> 1;\n    \tif (x <= mid) modify(t[u].ls, l, mid, x);\n    \telse modify(t[u].rs, mid + 1, r, x);\n    \tpushup(u);\n    }\n    \n    inline Info query(int u, int l, int r, int L, int R) {\n    \tif (L <= l && r <= R) return t[u].sum;\n    \tint mid = l + r >> 1;\n    \tif (R <= mid) return query(t[u].ls, l, mid, L, R);\n    \telse if (mid < L) return query(t[u].rs, mid + 1, r, L, R);\n    \telse return query(t[u].ls, l, mid, L, mid)\n         + query(t[u].rs, mid + 1, r, mid + 1, R);\n    }\n} pst;\n\ninline bool check(int id, int A, int B, int C, int D)\n{\n    int ret = 0;\n    if (B + 2 <= C) ret += pst.query(root[id], 1, n, B + 1, C - 1).tot;\n    ret += pst.query(root[id], 1, n, A, B).rmax;\n    ret += pst.query(root[id], 1, n, C, D).lmax;\n    return ret >= 0;\n}\n\nsigned main(void) {\n    //file(\"PST\");\n    read(n);\n    for (int i = 1; i <= n; i++)\n        read(a[i].num), a[i].id = i;\n        \n    sort(a + 1, a + n + 1);\n    pst.build(root[1], 1, n);\n    for (int i = 2; i <= n; i++)\n        root[i] = root[i - 1],\n        pst.modify(root[i], 1, n, a[i - 1].id);\n    \n    read(m);\n    while (m--) {\n        for(int i = 0; i < 4; i++)\n            read(q[i]), q[i] = (q[i] + lastans) % n + 1;\n        sort(q, q + 4); \n        \n        int l = 1, r = n, mid, ans;\n        while(l <= r){\n            mid = l + r >> 1;\n            if (check(mid, q[0], q[1], q[2], q[3]))\n                ans = mid, l = mid + 1;\n            else r = mid - 1;\n        }\n        writeln(lastans = a[ans].num);\n    }\n    return 0;\n}\n/**/\n\n\n```\n\n\u8c22\u8c22\u5179\u78c1\uff01\n",
        "postTime": 1562580010,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "\u4e3b\u5e2d\u6811\u7684\u60f3\u6cd5\u611f\u89c9\u633a\u5999\u7684\uff0c\u4f46\u662f\u8fd9\u9898\u6570\u636e\u8303\u56f4\u8fd9\u4e48\u5c0f\uff0c\u76f4\u63a5\u5206\u5757\u8349\u8fc7\u53bb\u4e0d\u5c31\u597d\u4e86\u5417\n\n\u4e8c\u5206\u662f\u8981\u4e8c\u5206\u7684\uff0c\u628a$<x$\u7f6e$-1$\uff0c$\\ge x$\u7684\u7f6e$1$\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u53d6\u4e00\u4e2a$\\ge 0$\u7684\u533a\u95f4\n\n\u5bf9\u8be2\u95ee$a,b,c,d$\uff0c\u5176\u4e2d$[b,c]$\u662f\u5fc5\u9009\u7684,$[a,b-1]$\u53d6\u540e\u7f00\u6700\u5927\u548c\uff0c$[c+1,d]$\u53d6\u524d\u7f00\u6700\u5927\u548c\n\n\u6211\u4eec\u76f4\u63a5\u5206\u5757\uff0c\u5bf9\u6bcf\u4e2a\u5757\u7684\u6bcf\u4e2a\u7b54\u6848$x$\u7ef4\u62a4\u4e00\u4e2a\u5757\u5185\u548c\uff0c\u524d\u7f00\u6700\u5927\u548c\u548c\u540e\u7f00\u6700\u5927\u548c\u5c31\u53ef\u4ee5\u4e86\n\n\u7136\u540e\u8be2\u95ee\u7684\u65f6\u5019\u66b4\u529b\u8df3\u5757\u5c31\u597d\u4e86\n\n\u590d\u6742\u5ea6$O(n\\sqrt n+n\\sqrt n \\log n)$\n\n------\n\n**Code:**\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\nconst int N=30010;\nusing std::min;\nusing std::max;\ntemplate <class T>\nvoid read(T &x)\n{\n\tx=0;char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\n}\nint yuul[200][N],yuur[200][N],bee[200][N],belong[N];\nint a[N],b[N],L[200],R[200],qry[5],n,m,q;\nint cal(int l,int r,int x)\n{\n\tint lp=belong[l],rp=belong[r],ret=0;\n\tif(rp-lp<=1)\n    {\n        for(int i=l;i<=r;i++) ret+=a[i]<x?-1:1;\n        return ret;\n    }\n\tfor(int i=l;i<=R[lp];i++) ret+=a[i]<x?-1:1;\n\tfor(int i=L[rp];i<=r;i++) ret+=a[i]<x?-1:1;\n\tfor(int i=lp+1;i<rp;i++) ret+=bee[i][x];\n\treturn ret;\n}\nint rig(int l,int r,int x)\n{\n\tif(l>r) return 0;\n\tint lp=belong[l],rp=belong[r],sum=0,mx=0;\n\tif(rp-lp<=1)\n\t{\n\t\tfor(int i=l;i<=r;i++)\n\t\t{\n\t\t\tsum+=a[i]<x?-1:1;\n\t\t\tmx=max(mx,sum);\n\t\t}\n\t\treturn mx;\n\t}\n\tfor(int i=l;i<=R[lp];i++)\n\t{\n\t\tsum+=a[i]<x?-1:1;\n\t\tmx=max(mx,sum);\n\t}\n\tfor(int i=lp+1;i<rp;i++)\n\t{\n\t\tmx=max(mx,sum+yuul[i][x]);\n\t\tsum+=bee[i][x];\n\t}\n\tfor(int i=L[rp];i<=r;i++)\n\t{\n\t\tsum+=a[i]<x?-1:1;\n\t\tmx=max(mx,sum);\n\t}\n\treturn mx;\n}\nint lef(int l,int r,int x)\n{\n\tif(l>r) return 0;\n\tint lp=belong[l],rp=belong[r],sum=0,mx=0;\n\tif(rp-lp<=1)\n\t{\n\t\tfor(int i=r;i>=l;i--)\n\t\t{\n\t\t\tsum+=a[i]<x?-1:1;\n\t\t\tmx=max(sum,mx);\n\t\t}\n\t\treturn mx;\n\t}\n\tfor(int i=r;i>=L[rp];i--)\n\t{\n\t\tsum+=a[i]<x?-1:1;\n\t\tmx=max(sum,mx);\n\t}\n\tfor(int i=rp-1;i>lp;i--)\n\t{\n\t\tmx=max(mx,sum+yuur[i][x]);\n\t\tsum+=bee[i][x];\n\t}\n\tfor(int i=R[lp];i>=l;i--)\n\t{\n\t\tsum+=a[i]<x?-1:1;\n\t\tmx=max(sum,mx);\n\t}\n\treturn mx;\n}\nbool check(int a,int b,int c,int d,int x)\n{\n\treturn lef(a,b-1,x)+cal(b,c,x)+rig(c+1,d,x)>=0;\n}\nint query(int a,int b,int c,int d)\n{\n\tint l=1,r=m;\n\twhile(l<r)\n\t{\n\t\tint mid=l+r+1>>1;\n\t\tif(check(a,b,c,d,mid)) l=mid;\n\t\telse r=mid-1;\n\t}\n\treturn l;\n}\nint main()\n{\n    memset(bee,-0x3f,sizeof bee);\n    memset(yuul,-0x3f,sizeof yuul);\n    memset(yuur,-0x3f,sizeof yuur);\n\tread(n);\n\tfor(int i=1;i<=n;i++) read(a[i]),b[i]=a[i];\n\tstd::sort(b+1,b+1+n);\n\tm=std::unique(b+1,b+1+n)-b-1;\n\tfor(int i=1;i<=n;i++) a[i]=std::lower_bound(b+1,b+1+m,a[i])-b;\n\tint B=sqrt(n)+1,T=(n-1)/B+1;\n\tfor(int i=1;i<=T;i++)\n\t{\n\t\tL[i]=R[i-1]+1,R[i]=min(L[i]+B-1,n);\n\t\tfor(int j=L[i];j<=R[i];j++)\n\t\t{\n\t\t\tbelong[j]=i;\n\t\t\tint sum=0,mx=0,x=a[j];\n\t\t\tfor(int k=L[i];k<=R[i];k++)\n\t\t\t{\n\t\t\t\tsum+=a[k]<x?-1:1;\n\t\t\t\tmx=max(mx,sum);\n\t\t\t}\n\t\t\tyuul[i][x]=mx;\n\t\t\tsum=0,mx=0;\n\t\t\tfor(int k=R[i];k>=L[i];k--)\n\t\t\t{\n\t\t\t\tsum+=a[k]<x?-1:1;\n\t\t\t\tmx=max(mx,sum);\n\t\t\t}\n\t\t\tyuur[i][x]=mx;\n\t\t\tbee[i][x]=sum;\n\t\t}\n\t\tbee[i][m+1]=yuul[i][m+1]=yuur[i][m+1]=-B;\n\t\tfor(int j=m;j;j--)\n\t\t{\n\t\t\tbee[i][j]=max(bee[i][j],bee[i][j+1]);\n\t\t\tyuul[i][j]=max(yuul[i][j],yuul[i][j+1]);\n\t\t\tyuur[i][j]=max(yuur[i][j],yuur[i][j+1]);\n\t\t}\n\t}\n\tread(q);\n\tfor(int las=0,i=1;i<=q;i++)\n\t{\n\t\tfor(int j=1;j<=4;j++)\n\t\t{\n\t\t\tread(qry[j]);\n\t\t\tqry[j]=(qry[j]+las)%n+1;\n\t\t}\n\t\tstd::sort(qry+1,qry+5);\n\t\tprintf(\"%d\\n\",las=b[query(qry[1],qry[2],qry[3],qry[4])]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1552786076,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u5148\u8003\u8651\u79bb\u6563\u5316\n\n\u79bb\u6563\u8bdd\u540e\u662f$1\uff5en$\n\n\u4e00\u822c\u8981\u6c42\u4e2d\u4f4d\u6570\u53ef\u4ee5:\n\n\u4e8c\u5206\u4e2d\u4f4d\u6570$x$\n\n\u5c06\u533a\u95f4\u4e2d$<x$\u7684\u8d4b\u503c\u4e3a$-1$,$\\ge x$\u7684\u8d4b\u503c\u4e3a$-1$\n\n\u82e5\u533a\u95f4\u548c\u4e3a$0$,\u90a3\u4e48$x$\u5c31\u662f\u4e2d\u4f4d\u6570\n\n\u9898\u76ee\u662f\u8981\u6c42\u5de6\u7aef\u70b9\u5728$[a,b]$\uff0c\u53f3\u7aef\u70b9\u5728$[c,d]$\u7684\u5e8f\u5217\u7684\u6700\u5927\u4e2d\u4f4d\u6570\n\n\u533a\u95f4$[b+1,c-1]$\u662f\u5fc5\u9009\u7684\n\n\u6211\u4eec\u53ef\u4ee5\u6c42$[a,b]$\u7684\u6700\u5927\u540e\u7f00\u548c$[c,d]$\u7684\u6700\u5927\u524d\u7f00\n\n\u5982\u679c\u8fd9\u4e09\u4e2a\u90e8\u5206\u7684\u548c\u5927\u4e8e\u96f6\uff0c\u90a3\u4e48\u5f53\u524d\u4e8c\u5206\u7684\u503c\u662f\u5408\u6cd5\u7684\n\n~~\u8fd9\u4e2a\u4e00\u770b\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4~~\n\n---\n\n\u6211\u4eec\u518d\u6765\u8003\u8651$x$\u53d8\u6210$x+1$\u4f1a\u6709\u4ec0\u4e48\u53d8\u5316\uff1a\n\n1. \u539f\u6765$<x$\u7684\u8fd8\u662f$-1$\n2. \u539f\u6765$>x$\u7684\u8fd8\u662f$1$\n3. \u539f\u6765$=x$\u53d8\u6210$-1$\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u4fee\u6539\u503c\u4e3a$x$\u7684\u4f4d\u7f6e(\u53ef\u4ee5\u5148\u7528\u94fe\u8868\u6216$vector$\u5b58\u4e0b\u6240\u6709\u503c\u4e3a$x$\u7684\u4f4d\u7f6e)\n\n\u5176\u5b9e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u6309\u987a\u5e8f\u66f4\u6539\u5c31\u5b8c\u4e8b\u4e86\n\n\u6570\u79bb\u6563\u5316\u540e\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7$n$\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u6240\u6709$x$(\u4e2d\u4f4d\u6570)\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\n\n\u53ef\u662f\u7a7a\u95f4\u4e0d\u591f\u554a\n\n\u8fd9\u65f6\u5019\u4e3b\u5e2d\u6811\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\n\n\u4e0b\u9762\u662f\u7b80\u6d01\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 20011\nint n,la=0;\nstruct node{\n    int v,p;\n    bool operator<(node x){return v<x.v;}\n}b[N];\nint ls[N*15],rs[N*15],rt[N],s[N*15],lm[N*15],rm[N*15],sz=0;\nvoid pu(int x){\n    s[x]=s[ls[x]]+s[rs[x]];\n    lm[x]=max(lm[ls[x]],s[ls[x]]+lm[rs[x]]);\n    rm[x]=max(rm[rs[x]],s[rs[x]]+rm[ls[x]]);\n}\nvoid build(int l,int r,int &x){\n    x=++sz;\n    if(l==r){\n        s[x]=lm[x]=rm[x]=1;\n        return;\n    }\n    int m=(l+r)>>1;\n    build(l,m,ls[x]);build(m+1,r,rs[x]);\n    pu(x);\n}\nvoid upd(int l,int r,int p,int &x,int pre){\n    if(!x)x=++sz;\n    if(l==r){\n        s[x]=lm[x]=rm[x]=-1;\n        return;\n    }\n    int m=(l+r)>>1;\n    if(p<=m)upd(l,m,p,ls[x],ls[pre]),rs[x]=rs[pre];\n    else upd(m+1,r,p,rs[x],rs[pre]),ls[x]=ls[pre];\n    pu(x);\n}\nint qs(int L,int R,int l,int r,int x){\n    if(L<=l&&r<=R)return s[x];\n    int m=(l+r)>>1;\n    if(L<=m&&R>m)return qs(L,R,l,m,ls[x])+qs(L,R,m+1,r,rs[x]);\n    else if(L<=m)return qs(L,R,l,m,ls[x]);\n    else return qs(L,R,m+1,r,rs[x]);\n}\nstruct tr{int s,lm,rm;};\ntr operator+(tr x,tr y){\n    tr ans;\n    ans.s=x.s+y.s;\n    ans.lm=max(x.lm,x.s+y.lm);\n    ans.rm=max(y.rm,y.s+x.rm);\n    return ans;\n}\ntr qm(int L,int R,int l,int r,int x){\n    if(L<=l&&r<=R)return tr{s[x],lm[x],rm[x]};\n    int m=(l+r)>>1;\n    if(L<=m&&R>m)return qm(L,R,l,m,ls[x])+qm(L,R,m+1,r,rs[x]);\n    else if(L<=m)return qm(L,R,l,m,ls[x]);\n    else return qm(L,R,m+1,r,rs[x]);\n}\nvoid work(){\n    int A,B,C,D,q[4];\n    scanf(\"%d%d%d%d\",q+0,q+1,q+2,q+3);\n    q[0]=(q[0]+la)%n+1;\n    q[1]=(q[1]+la)%n+1;\n    q[2]=(q[2]+la)%n+1;\n    q[3]=(q[3]+la)%n+1;\n    sort(q,q+4);\n    A=q[0],B=q[1],C=q[2],D=q[3];\n    int l=1,r=n,ans;\n    while(l<=r){\n        int m=(l+r)>>1,tot=0;\n        if(B+1<=C-1)tot=qs(B+1,C-1,1,n,rt[m]);\n        tot+=qm(A,B,1,n,rt[m]).rm+qm(C,D,1,n,rt[m]).lm;\n        if(tot>=0)ans=m,l=m+1;\n        else r=m-1;\n    }\n    printf(\"%d\\n\",la=b[ans].v);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)scanf(\"%d\",&b[i]),b[i].p=i;\n    sort(b+1,b+n+1);\n    build(1,n,rt[1]);\n    for(int i=2;i<=n;++i)\n        upd(1,n,b[i-1].p,rt[i],rt[i-1]);\n    int q;scanf(\"%d\",&q);\n    while(q--)work();\n}\n```",
        "postTime": 1577450683,
        "uid": 36532,
        "name": "localhost",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "### Description\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u56db\u4e2a\u6570 $a,b,c,d$\uff0c\u6c42\u6240\u6709\u533a\u95f4 $[l,r]$ \u6ee1\u8db3 $l \\in [a,b], r \\in [c,d]$ \u7684\u4e2d\u4f4d\u6570\u7684\u6700\u5927\u503c\u3002\u5f3a\u5236\u5728\u7ebf\n\n$n \\leq 20000, Q \\leq 25000,a_i \\leq 10^9$\n\n### Solution\n\n\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\u5047\u8bbe\u73b0\u5728\u4e8c\u5206\u51fa\u6765\u7684\u662f $x$ \uff0c\u90a3\u4e48\u628a $\\ge x$ \u7684\u4f4d\u7f6e\u8bbe\u6210 $1$ \uff0c$< x$ \u7684\u8bbe\u4e3a $-1$ \u3002\u90a3\u4e48\u4e00\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570 $\\ge x$ \u7b49\u4ef7\u4e8e\u8fd9\u4e2a\u533a\u95f4\u7684\u548c $\\ge 0$\n\n\u5982\u4f55\u5904\u7406\u9898\u76ee\u7ed9\u7684\u5de6\u53f3\u7aef\u70b9\u7684\u9650\u5236\uff1f\n\n\u53ef\u4ee5\u53d1\u73b0 $[l,r]$ \u5fc5\u7136\u5305\u542b $[b+1,c-1]$ (\u5982\u679c $b+1 \\leq c+1$ \u7684\u8bdd\uff09\u6240\u4ee5 $[l, r]$ \u7684\u548c\u5fc5\u7136\u5305\u542b $[b+1, c-1]$ \u7684\u548c\n\n\u663e\u7136\u8ba9 $[l,r]$ \u7684\u548c\u6700\u5927\u7684\u65b9\u6848\u662f\u53d6 $[a,b]$ \u7684\u6700\u5927\u53f3\u6bb5\u548c \u548c $[c,d]$ \u7684\u6700\u5927\u5de6\u6bb5\u548c\n\n\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u4f46\u8fd9\u6837\u9700\u8981\u6bcf\u4e2a\u6570\u90fd\u5f00\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u7a7a\u95f4\u7206\u70b8\u3002\n\n\u628a\u6570\u7ec4\u6392\u5e8f\uff0c\u8fd9\u6837\u6bcf\u4e2a\u6570\u7684\u7ebf\u6bb5\u6811\u663e\u7136\u53ea\u662f\u7531\u524d\u4e00\u4e2a\u6570\u7684\u7ebf\u6bb5\u6811\u628a\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u4ece $1$ \u6539\u4e3a $-1$ \u3002\u53ef\u4ee5\u4f7f\u7528\u4e3b\u5e2d\u6811\u7684\u601d\u60f3\uff08\u8c8c\u4f3c\u5c31\u662f\u4e3b\u5e2d\u6811\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\u590d\u6742\u5ea6 $O(m \\log^2 n)$ \n\n### Code\n[\u770b\u4ee3\u7801\u6233\u8fd9\u91cc](https://acfunction.github.io/2019/01/20/BZOJ2653/)",
        "postTime": 1547951952,
        "uid": 54745,
        "name": "Gypsophila",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "\u9898\u610f\uff1ahttps://www.luogu.org/problem/P2839\n\n\u5047\u8bbe\u662f\u627e\u533a\u95f4\u4e2d\u4f4d\u6570(\u5373$a=b$,$c=d$\u7684\u60c5\u51b5):\n\n\u4e8c\u5206\u7b54\u6848$mid$,\u5c06$>mid$\u7684\u6570\u7f6e\u4e3a$-1$,\u5c0f\u4e8e\u7b49\u4e8e$mid$\u7684\u6570\u7f6e\u4e3a$1$,\u67e5\u8be2\u533a\u95f4\u548c,$>=0$\u8bf4\u660e\u4f17\u6570$>=mid$,\u53cd\u4e4b\u5219\u4f17\u6570\u5c0f\u4e8e$mid$\n\n\u4f46\u662f\u5bf9\u6bcf\u4e00\u4e2a\u503c\u5f00\u4e00\u4e2a\u7ebf\u6bb5\u6811\u662f\u4e0d\u53ef\u80fd\u7684,\u53d1\u73b0x\u548cx+1(\u79bb\u6563\u5316\u540e)\u7684\u7ebf\u6bb5\u6811\u6307\u6709\u7b49\u4e8ex\u7684\u4f4d\u7f6e\u4e0d\u540c(x+1\u7684\u662f-1,x\u7684\u662f1),\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u89e3\u51b3\n\n\u8003\u8651\u6709\u4e86\u9650\u5236\u600e\u4e48\u505a\n\n\u8981\u6c42\u662f\u6700\u5927\u7684\u4e2d\u4f4d\u6570,\u90a3\u4e48\u5bf9\u4e8e\u4e8c\u5206\u7684\u503c,\u6c42\u51fa\u7684\u533a\u95f4\u548c\u8d8a\u5927\u8d8a\u597d,\u5bf9\u6bcf\u4e2a\u533a\u95f4\u8bb0\u5f55\u6700\u5927\u524d\u7f00$lmax$,\u6700\u5927\u540e\u7f00$rmax$\u548c\u533a\u95f4\u548c$sum$,\u67e5\u8be2\u662f\u53d6$[a,b-1]$\u7684$rmax$,$[b,c]$\u7684$sum$,$[c+1,d]$\u7684$lmax$\u5373\u53ef\n\ncode:\n```\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\n#define lc(p) (seg[p].lc)\n#define rc(p) (seg[p].rc)\n#define sum(p) (seg[p].sum)\n#define lmax(p) (seg[p].lmax)\n#define rmax(p) (seg[p].rmax)\nconst int maxn=20010;\nint n,m,tot,lastans,aa,bb,cc,dd;;\nint a[maxn],b[maxn],root[maxn];\nvector<int>pos[maxn];\nstruct Seg\n{\n\tint lc,rc;\n\tint sum,lmax,rmax;\n}seg[maxn*60];\ninline bool\tcmp(int x,int y){return a[x]<a[y];}\ninline void\tup(int p)\n{\n\tsum(p)=sum(lc(p))+sum(rc(p));\n\tlmax(p)=max(lmax(lc(p)),sum(lc(p))+lmax(rc(p)));\n\trmax(p)=max(rmax(rc(p)),sum(rc(p))+rmax(lc(p)));\n}\nvoid build(int &p,int l,int r)\n{\n\tp=++tot;\n\tif(l==r){sum(p)=lmax(p)=rmax(p)=-1;return;}\n\tint mid=(l+r)>>1;\n\tbuild(lc(p),l,mid);build(rc(p),mid+1,r);\n\tup(p);\n}\nvoid insert(int pre,int &p,int L,int R,int pos)\n{\n\tif(!p)p=++tot;\n\tif(L==R){sum(p)=lmax(p)=rmax(p)=1;return;}\n\tint mid=(L+R)>>1;\n\tif(pos<=mid)rc(p)=rc(pre),insert(lc(pre),lc(p),L,mid,pos);\n\telse lc(p)=lc(pre),insert(rc(pre),rc(p),mid+1,R,pos);\n\tup(p);\n}\nSeg query(int p,int L,int R,int l,int r)\n{\n\tif(L>=l&&R<=r)return seg[p];\n\tint mid=(L+R)>>1;\n\tif(l>mid)return query(rc(p),mid+1,R,l,r);\n\telse if(r<=mid)return query(lc(p),L,mid,l,r);\n\telse \n\t{\n\t\tSeg ans,lson=query(lc(p),L,mid,l,r),rson=query(rc(p),mid+1,R,l,r);\n\t\tans.sum=(lson.sum+rson.sum);\n\t\tans.lmax=max(lson.lmax,lson.sum+rson.lmax);\n\t\tans.rmax=max(rson.rmax,rson.sum+lson.rmax);\n\t\treturn ans; \t\n\t}\n}\ninline bool check(int mid)\n{\n\t//printf(\"test::%d %d %d %d %d\\n\",aa,bb,cc,dd,b[mid]);\n\tint res=0;Seg ans;\n\tans=query(root[mid],1,n,aa,bb);res+=ans.rmax;\n\t//printf(\"rmax::%d \",ans.rmax);\n\tif(bb+1<=cc-1)ans=query(root[mid],1,n,bb+1,cc-1),res+=ans.sum;\n\tans=query(root[mid],1,n,cc,dd);res+=ans.lmax;\n\t//printf(\"lmax::%d \\n\",ans.lmax);\n\treturn res>=0;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),b[i]=i;\n\tsort(b+1,b+n+1,cmp);//int cnt=unique(b+1,b+cnt+1)-(b+1);\n\tbuild(root[n+1],1,n);\n\tfor(int i=n;i;i--)insert(root[i+1],root[i],1,n,b[i]);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&aa,&bb,&cc,&dd);\n\t\taa=(aa+lastans)%n+1;bb=(bb+lastans)%n+1;\n\t\tcc=(cc+lastans)%n+1;dd=(dd+lastans)%n+1;\n\t\tint tmp[5]={0,aa,bb,cc,dd};\n\t\tsort(tmp+1,tmp+4+1);\n\t\taa=tmp[1],bb=tmp[2],cc=tmp[3],dd=tmp[4];\n\t\tint l=1,r=n,ans;\n\t\twhile(l<=r)\n\t\t{\n\t\t\t//puts(\"!!\");\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(check(mid))ans=mid,l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tprintf(\"%d\\n\",lastans=a[b[ans]]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1569780833,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P2839 [\u56fd\u5bb6\u96c6\u8bad\u961f]middle"
    },
    {
        "content": "\u6709\u8c01\u80fd\u60f3\u5230\u8fd9\u9898\u4f1a\u7528\u5230\u4e3b\u5e2d\u6811\u5462\uff08~~\u67d0\u5927\u4f6c\uff1a\u201c\u6211\u201d~~\uff09\uff1f\uff08\u4e0d\u6127\u662fWJMZBMR\u51fa\u7684\u9898\uff09\n\n\u9996\u5148\u8003\u8651\u5982\u679c\u533a\u95f4\u662f\u56fa\u5b9a\u7684\u8bdd\uff0c\u4e2d\u4f4d\u6570\u8be5\u600e\u4e48\u6c42\u3002\n\u6ca1\u9519\uff0c\u4e8c\u5206\u3002\u5982\u679c\u5927\u4e8e\u5f53\u524d\u4e8c\u5206\u503c$mid$\u7684\u6570\u6bd4\u5c0f\u4e8e$mid$\u7684\u6570\u591a\uff0c\u8bf4\u660e$mid$\u8fd8\u53ef\u4ee5\u518d\u53d8\u5927\uff0c\u5411\u53f3\u4e8c\u5206\uff1b\u5426\u5219\u5411\u5de6\u4e8c\u5206\u3002\n\n\u5982\u679c\u6211\u4eec\u628a\u5c0f\u4e8e$mid$\u7684\u6570\u90fd\u6807\u8bb0\u6210$-1$\uff0c\u5927\u4e8e\u7684\u6807\u8bb0\u6210$1$\uff0c\u90a3\u4e48\u53ea\u7528\u5224\u65ad\u8fd9\u4e2a\u533a\u95f4\u7684\u548c\u662f\u5426$\\geqslant 0$\u5c31\u884c\u4e86\u3002\n\n\u4f46\u73b0\u5728\u533a\u95f4\u4e0d\u56fa\u5b9a\u3002\u9996\u5148$[b + 1, c - 1]$\u662f\u4e00\u5b9a\u8981\u9009\u7684\u3002\u5bf9\u4e8e$[a, b]$\u548c$[c, d]$\uff0c\u56e0\u4e3a\u8981\u8ba9\u4e2d\u4f4d\u6570\u5c3d\u91cf\u5927\uff0c\u6240\u4ee5\u5e94\u8be5\u9009$[a, b]$\u7684\u6700\u5927\u540e\u7f00\u548c\u4ee5\u53ca$[c, d]$\u7684\u6700\u5927\u524d\u7f00\u548c\u3002\n\n\u4e3b\u8981\u601d\u8def\u5c31\u662f\u8fd9\u4e9b\uff0c\u4f46\u5355\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f$O(n \\log{n})$\u7684\uff0c\u8fc7\u4e0d\u4e86\u3002\u5f97\u60f3\u529e\u6cd5\u4f18\u5316\u3002\n\n\u5982\u679c\u5bf9\u6bcf\u4e00\u4e2a\u4e8c\u5206\u7684\u503c\u5efa\u4e00\u68f5\u533a\u95f4\u7ebf\u6bb5\u6811\uff08\u8fd9\u91cc\u7684\u4e8c\u5206\u5728\u5e8f\u5217\u4e2d\u7684\u503c\u4e2d\u8fdb\u884c\u5c31\u884c\uff0c\u800c\u4e0d\u662f$1$\u5230$1e9$\uff0c\u6240\u4ee5\u53ea\u7528\u5efa$n$\u68f5\uff09\uff0c\u628a\u5c0f\u4e8e\u4ed6\u7684\u90fd\u6807\u8bb0\u6210$1$\uff0c\u5927\u4e8e\u6807\u8bb0\u6210$-1$\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u67e5\u8be2\u5c31\u80fd\u8fbe\u5230$O(\\log ^ 2{n})$\u4e86\u3002\n\n\u4f46\u662f\u5f88\u663e\u7136\u8fd9\u6837\u7a7a\u95f4\u5f00\u4e0d\u4e0b\uff0c\u800c\u4e14\u9884\u5904\u7406\u590d\u6742\u5ea6\u8fc7\u9ad8\u3002\u6240\u4ee5\u73b0\u5728\u5f97\u60f3\u529e\u6cd5\u51cf\u5c11\u9884\u5904\u7406\u7684\u65f6\u95f4\u3002\n\n\u5982\u679c\u628a\u5e8f\u5217\u4e2d\u7684\u6570\u6392\u4e00\u4e2a\u5e8f\uff0c\u4f1a\u53d1\u73b0\u5bf9\u4e8e\u76f8\u90bb\u7684\u4e24\u4e2a\u4e0d\u4e00\u6837\u7684\u6570\uff08\u56e0\u4e3a\u6570\u5b57\u53ef\u80fd\u6709\u91cd\uff09\uff0c\u5efa\u7684\u7ebf\u6bb5\u6811\u53ea\u6709\u4e00\u5904\u4e0d\u4e00\u6837\uff0c\u800c\u8fd9\u4e00\u5904\u4e0d\u4e00\u6837\u53ea\u4f1a\u5bfc\u81f4\u7ebf\u6bb5\u6811\u4e2d\u7684\u4e00\u6761\u94fe\u6539\u53d8\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5355\u72ec\u628a\u8fd9\u6761\u94fe\u63d0\u5efa\u51fa\u6765\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u5c31\u4f1a\u53d1\u73b0\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u68f5\u4e3b\u5e2d\u6811\u5440\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u5199\u5b8c\u4e86\u3002\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<vector>\n#include<stack>\n#include<queue>\nusing namespace std;\n#define enter puts(\"\") \n#define space putchar(' ')\n#define Mem(a, x) memset(a, x, sizeof(a))\n#define rg register\ntypedef long long ll;\ntypedef double db;\nconst int INF = 0x3f3f3f3f;\nconst db eps = 1e-8;\nconst int maxn = 2e4 + 5;\nconst int maxt = 2e6 + 5;\ninline ll read()\n{\n  ll ans = 0;\n  char ch = getchar(), last = ' ';\n  while(!isdigit(ch)) {last = ch; ch = getchar();}\n  while(isdigit(ch)) {ans = (ans << 1) + (ans << 3) + ch - '0'; ch = getchar();}\n  if(last == '-') ans = -ans;\n  return ans;\n}\ninline void write(ll x)\n{\n  if(x < 0) x = -x, putchar('-');\n  if(x >= 10) write(x / 10);\n  putchar(x % 10 + '0');\n}\n\nint n, _n, m, a[maxn], b[maxn], q[4];\nvector<int> v[maxn];\n\nstruct Tree\n{\n  int ls, rs;\n  int sum, lmax, rmax;\n}t[maxt];\nint root[maxn], cnt = 0;\nvoid pushup(int now)\n{\n  t[now].sum = t[t[now].ls].sum + t[t[now].rs].sum;\n  t[now].lmax = max(t[t[now].ls].lmax, t[t[now].ls].sum + t[t[now].rs].lmax);\n  t[now].rmax = max(t[t[now].rs].rmax, t[t[now].rs].sum + t[t[now].ls].rmax);\n}\nvoid build(int& now, int l, int r)\n{\n  if(!now) now = ++cnt;\n  if(l == r) {t[now].sum = t[now].lmax = t[now].rmax = 1; return;}\n  int mid = (l + r) >> 1;\n  build(t[now].ls, l, mid);\n  build(t[now].rs, mid + 1, r);\n  pushup(now);\n}\nvoid insert(int old, int& now, int l, int r, int id)\n{\n  t[now = ++cnt] = t[old];\n  if(l == r) {t[now].sum = t[now].lmax = t[now].rmax = -1; return;}\n  int mid = (l + r) >> 1;\n  if(id <= mid) insert(t[old].ls, t[now].ls, l, mid, id);\n  else insert(t[old].rs, t[now].rs, mid + 1, r, id);\n  pushup(now);\n}\nint querySum(int now, int l, int r, int L, int R)\n{\n  if(R < L) return 0;\n  if(l == L && r == R) return t[now].sum;\n  int mid = (l + r) >> 1;\n  if(R <= mid) return querySum(t[now].ls, l, mid, L, R);\n  else if(L > mid) return querySum(t[now].rs, mid + 1, r, L, R);\n  else return querySum(t[now].ls, l, mid, L, mid) + querySum(t[now].rs, mid + 1, r, mid + 1, R);\n}\nint queryL(int now, int l, int r, int L, int R)\n{\n  if(l == L && r == R) return t[now].lmax;\n  int mid = (l + r) >> 1;\n  if(R <= mid) return queryL(t[now].ls, l, mid, L, R);\n  else if(L > mid) return queryL(t[now].rs, mid + 1, r, L, R);\n  else\n    {\n      int ret1 = queryL(t[now].ls, l, mid, L, mid);\n      int ret2 = querySum(t[now].ls, l, mid, L, mid) + queryL(t[now].rs, mid + 1, r, mid + 1, R);\n      return max(ret1, ret2);\n    }\n}\nint queryR(int now, int l, int r, int L, int R)\n{\n  if(l == L && r == R) return t[now].rmax;\n  int mid = (l + r) >> 1;\n  if(R <= mid) return queryR(t[now].ls, l, mid, L, R);\n  else if(L > mid) return queryR(t[now].rs, mid + 1, r, L, R);\n  else\n    {\n      int ret1 = queryR(t[now].rs, mid + 1, r, mid + 1, R);\n      int ret2 = querySum(t[now].rs, mid + 1, r, mid + 1, R) + queryR(t[now].ls, l, mid, L, mid);\n      return max(ret1, ret2);\n    }\n}\n\nbool judge(int x)\n{\n  int ans1 = querySum(root[x], 1, n, q[1] + 1, q[2] - 1);\n  int ans2 = queryR(root[x], 1, n, q[0], q[1]);\n  int ans3 = queryL(root[x], 1, n, q[2], q[3]);\n  return ans1 + ans2 + ans3 >= 0;\n}\nint solve()\n{\n  int L = 1, R = _n;\n  while(L < R)\n    {\n      int mid = (L + R + 1) >> 1;\n      if(judge(mid)) L = mid;\n      else R = mid - 1;\n    }\n  return L;\n}\n\nint main()\n{\n  n = read();\n  build(root[0], 1, n);\n  for(int i = 1; i <= n; ++i) a[i] = b[i] = read();\n  sort(b + 1, b + n + 1);\n  _n = unique(b + 1, b + n + 1) - b - 1;\n  for(int i = 1; i <= n; ++i)\n    {\n      a[i] = lower_bound(b + 1, b + _n + 1, a[i]) - b;\n      v[a[i]].push_back(i);\n    }\n  for(int i = 1; i <= _n; ++i)\n    {\n      root[i] = root[i - 1];\n      for(int j = 0; j < (int)v[i - 1].size(); ++j)\n\tinsert(root[i], root[i], 1, n, v[i - 1][j]);\n    }\n  m = read();\n  for(int i = 1, ans = 0; i <= m; ++i)\n    {\n      for(int j = 0; j < 4; ++j) q[j] = read();\n      for(int j = 0; j < 4; ++j) q[j] = (q[j] + ans) % n + 1;\n      sort(q, q + 4);\n      ans = b[solve()];\n      write(ans), enter;\n    }\n  return 0;\n}\n```",
        "postTime": 1544056264,
        "uid": 55965,
        "name": "mrclr",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217s\u3002\n\n\u56de\u7b54Q\u4e2a\u8fd9\u6837\u7684\u8be2\u95ee\uff1as\u7684\u5de6\u7aef\u70b9\u5728[a,b]\u4e4b\u95f4,\u53f3\u7aef\u70b9\u5728[c,d]\u4e4b\u95f4\u7684\u5b50\u5e8f\u5217\u4e2d\uff0c\u6700\u5927\u7684\u4e2d\u4f4d\u6570\u3002\n\u5f3a\u5236\u5728\u7ebf\u3002\n\n\u601d\u8def\uff1a\u9996\u5148\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u5224\u65ad\u53ef\u884c\u7684\u65b9\u6cd5\u5219\u662f\u770b\u662f\u5426\u5927\u4e8e\u4ed6\u7684\u6570\u53ef\u4ee5\u6bd4\u5c0f\u4e8e\u4ed6\u7684\u6570\u591a\u3002\u5219\u8003\u8651\u5bf9\u4e8e[b+1, c-1]\u76f4\u63a5\u6c42\u51fa\u6765\uff0c\u5bf9\u4e8e[a, b]\u6c42\u6700\u5927\u7684\u5927\u7684\u51cf\u5c0f\u7684\u540e\u7f00\uff0c[c, d]\u6c42\u6700\u5927\u524d\u7f00\uff0c\u53ef\u4ee5\u5efa\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5efa\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u5219\u7a7a\u95f4\u7206\u4e86,\u8003\u8651\u4f7f\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\n\n\u505a\u6cd5\uff1a\u5bf9\u4e8e\u7b2ci\u9897\u4e3b\u5e2d\u6811\uff0c\u5219\u662f\u5c0f\u4e8e i \u7684\u90fd\u662f-1\uff0c\u5927\u4e8e\u7b49\u4e8ei\u7684\u662f1\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u4e8c\u5206\u7b54\u6848\u67e5\u8be2\u5728\u6392\u540di\u7684\u8fd9\u9897\u4e3b\u5e2d\u6811\u4e0a\u662f\u5426\u80fd\u9009\u51fa\u5e8f\u5217\u4f7f\u5f97\u548c\u5927\u4e8e\u7b49\u4e8e0\n\nhttps://www.luogu.org/problemnew/show/P2839\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#define MAXN 20050\nusing namespace std;\ninline int read(){\n    int f = 1, ret = 0; char ch = getchar();\n    while(ch < '0' || ch > '9') if(ch == '-') f = -1, ch = getchar();\n    while(ch >= '0' && ch <= '9') ret = ret*10+int(ch-'0'), ch = getchar();\n    return ret*f;\n}\nvoid print(int x){\n    if(x < 10) putchar(x+'0');\n    else{\n        print(x/10);\n        putchar(x%10+'0');\n    }\n}\nint n, cnt, Q, lastans, q[4], root[MAXN];\nstruct node1{\n    int id, num;\n    bool operator < (const node1 &x) const{\n        return num < x.num;\n    }\n    node1(){}\n    node1(int _id, int _num){\n        id = _id, num = _num;\n    }\n}a[MAXN<<2];\nstruct data{\n    int lmax, rmax, tot;\n};\nstruct node{\n    int ls, rs;\n    data d;\n}t[MAXN<<6];\ndata merge(data a, data b){\n    data ret;\n    ret.tot = a.tot + b.tot;\n    ret.lmax = max(a.lmax, a.tot + b.lmax);\n    ret.rmax = max(b.rmax, b.tot + a.rmax);\n    return ret;\n}\nvoid build(int &u, int l, int r){\n    int tmp = u; u = ++cnt; t[u] = t[tmp];\n    if(l == r) {t[u].d.tot = t[u].d.lmax = t[u].d.rmax = 1; return;}\n    int mid = (l+r)>>1;\n    build(t[u].ls, l, mid);\n    build(t[u].rs, mid+1, r);\n    t[u].d = merge(t[t[u].ls].d, t[t[u].rs].d);\n}\nvoid update(int &u, int l, int r, int x){\n    int tmp = u; u = ++cnt; t[u] = t[tmp];\n    if(l == r){t[u].d.tot = t[u].d.lmax = t[u].d.rmax = -1; return;}\n    int mid = (l+r)>>1;\n    if(x <= mid) update(t[u].ls, l, mid, x);\n    else update(t[u].rs, mid+1, r, x);\n    t[u].d = merge(t[t[u].ls].d, t[t[u].rs].d);\n}\ndata query(int u, int l, int r, int tl, int tr){\n    if(tl <= l && r <= tr) return t[u].d;\n    int mid = (l+r)>>1;\n    if(tr <= mid) return query(t[u].ls, l, mid, tl, tr);\n    if(mid < tl) return query(t[u].rs, mid+1, r, tl, tr);\n    else return merge(query(t[u].ls, l, mid, tl, tr), query(t[u].rs, mid+1, r, tl, tr));\n}\nbool check(int id, int l1, int r1, int l2, int r2){\n    int ret = 0;\n    if(r1+1 <= l2-1) ret += query(root[id], 1, n, r1+1, l2-1).tot;\n    ret += query(root[id], 1, n, l1, r1).rmax;\n    ret += query(root[id], 1, n, l2, r2).lmax;\n    //printf(\"%d %d\\n\", id, ret);\n    return ret>=0;\n}\n/*\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u5e8f\u5217\u957f\u5ea6n\u3002\n\u63a5\u4e0b\u6765n\u884c\u6309\u987a\u5e8f\u7ed9\u51faa\u4e2d\u7684\u6570\u3002\n\u63a5\u4e0b\u6765\u4e00\u884cQ\n\u7136\u540eQ\u884c\u6bcf\u884ca,b,c,d\uff0c\u6211\u4eec\u4ee4\u4e0a\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u662fx(\u5982\u679c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u8be2\u95ee\u5219x=0)\u3002\n\u4ee4\u6570\u7ec4q={(a+x)%n,(b+x)%n,(c+x)%n,(d+x)%n}\u3002\n\n\u5c06q\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e4b\u540e\uff0c\u4ee4\u771f\u6b63\u7684\u8981\u8be2\u95ee\u7684a=q[0],b=q[1],c=q[2],d=q[3]\u3002\nn<=20000,Q<=25000*/\nint main(){\n    //freopen(\"1.in\", \"r\", stdin);\n    //freopen(\"1.out\", \"w\", stdout);\n    scanf(\"%d\", &n);\n    //n = read();\n    for(int i = 1; i <= n; i++){\n        scanf(\"%d\", &a[i].num); a[i].id = i;\n        //a[i] = node1(i, read());\n    }\n    sort(a+1, a+n+1);\n    build(root[1], 1, n);\n    for(int i = 2; i <= n; i++) root[i] = root[i-1], update(root[i], 1, n, a[i-1].id);\n    scanf(\"%d\", &Q);//Q = read();\n    while(Q--){\n        for(int i = 0; i < 4; i++) scanf(\"%d\", &q[i]), q[i] = (q[i]+lastans)%n;//q[i] = (read()+lastans)%n;\n        sort(q, q+4); for(int i = 0; i < 4; i++) q[i]++;\n        int l = 1, r = n, mid, ans;\n        while(l <= r){\n            mid = (l+r)>>1;\n            if(check(mid, q[0], q[1], q[2], q[3])) ans = mid, l = mid+1;\n            else r = mid-1;\n        }\n        printf(\"%d\\n\", lastans = a[ans].num);\n        //print(lastans = a[ans].num); putchar('\\n'); \n    }\n    return 0;\n}\n```",
        "postTime": 1525492249,
        "uid": 3369,
        "name": "hychyc",
        "ccfLevel": 0,
        "title": "P2839 middle"
    },
    {
        "content": "[\u672c\u849f\u84bb\u7684Blog](https://www.chnxuzhiyuan.cn/2019/03/29/%E3%80%8C%E5%9B%BD%E5%AE%B6%E9%9B%86%E8%AE%AD%E9%98%9F%E3%80%8Dmiddle-Solution/)\n\n\u4e3d\u6d01\u59d0\u7684\u9898\u76ee\uff0c\u4e0d\u9519\u4e0d\u9519\u3002\n\n\n### \u9898\u89e3\n\n\u8fd9\u9898\u8fd8\u662f\u633a\u597d\u73a9\u7684\u3002\n\n\u9996\u5148\u53ef\u4ee5\u4e8c\u5206\u679a\u4e3e\u7b54\u6848\u3002\u8bbe\u5f53\u524d\u679a\u4e3e\u5230\u7684\u7b54\u6848\u4e3a$mid$\uff0c\u90a3\u4e48\u5c31\u628a\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u7b54\u6848\u7684\u6570\u6807\u4e3a1\uff0c\u5c0f\u4e8e\u7684\u6807\u4e3a-1\u3002\u5982\u679c\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u5728\u6307\u5b9a\u533a\u95f4\u5185\u7684\u52a0\u548c\u6700\u5927\u7684\u533a\u95f4\u7684\u52a0\u548c\u5927\u4e8e\u7b49\u4e8e0\uff0c\u90a3\u4e48\u5f53\u524d\u4e8c\u5206\u5230\u7684\u503c\u53ef\u4ee5\u518d\u5927\u4e00\u4e9b\uff0c\u5426\u5219\u5c31\u5e94\u8be5\u5c0f\u4e00\u4e9b\u3002\n\n\u7531\u4e8e\u6700\u540e\u7684\u533a\u95f4\u5fc5\u7136\u5305\u62ec$[b+1,c-1]$\uff0c\u6240\u4ee5\u9700\u8981\u6c42\u51fa\u533a\u95f4$[a,b]$\u7684\u6700\u5927\u540e\u7f00\u548c\u4ee5\u53ca\u533a\u95f4$[c,d]$\u7684\u6700\u5927\u524d\u7f00\u548c\u3002\n\n\u5148\u5bf9\u539f\u5e8f\u5217\u79bb\u6563\u5316\uff0c\u8fd9\u6837\u6700\u540e\u53ef\u80fd\u4e8c\u5206\u5230\u7684\u7b54\u6848\u5c31\u53ea\u5269\u4e0b$n$\u4e2a\u3002\u7136\u4ee5\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u4e8c\u5206\u5230\u7684\u7b54\u6848\uff0c\u5c06\u4ee5\u5b83\u4e3a\u57fa\u51c6\u6784\u9020\u51fa\u7684\u75311\u548c-1\u7ec4\u6210\u7684\u5e8f\u5217\u9884\u5904\u7406\u51fa\u6765\uff0c\u7528\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u7684\u52a0\u548c\u3001\u6700\u5927\u524d\u7f00\u548c\u3001\u6700\u5927\u540e\u7f00\u548c\u3002\u4f46\u662f\u8fd9\u6837\u590d\u6742\u5ea6\u662f\u7206\u70b8\u7684\u3002\u6240\u4ee5\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u7136\u540e\u7531\u4e8e\u6bcf\u6b21\u6309\u987a\u5e8f\u4fee\u6539\u57fa\u51c6\u6570\u53ea\u4f1a\u5c06\u4e00\u4e2a\u4f4d\u7f6e\u7684\u503c\u75311\u6539\u4e3a-1\uff0c\u6240\u4ee5\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\n\n\u539f\u5e8f\u5217\u4e2d\u53ef\u80fd\u6709\u76f8\u540c\u5143\u6570\u5b57\uff0c\u6ce8\u610f\u7ec6\u8282\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<map>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=20005,LOG=16;\nint n,Q,cnt,A[maxn],id[maxn],q[10],ans;map<int,int> CR;\ninline int read()\n{\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){ret=ret*10+ch-'0';ch=getchar();}\n\treturn ret*f;\n}\nstruct ChairmanTree\n{\n\tint tot,R[maxn];\n\tstruct Node{int L,R,Sum,FMS,BMS;}Tree[maxn*2*LOG];\n\tinline void PushUp(int rt)\n\t{\n\t\tTree[rt].Sum=Tree[Tree[rt].L].Sum+Tree[Tree[rt].R].Sum;\n\t\tTree[rt].FMS=max(Tree[Tree[rt].L].FMS,Tree[Tree[rt].L].Sum+Tree[Tree[rt].R].FMS);\n\t\tTree[rt].BMS=max(Tree[Tree[rt].R].BMS,Tree[Tree[rt].R].Sum+Tree[Tree[rt].L].BMS);\n\t}\n\tinline int New(){return ++tot;}\n\tvoid Build(int rt,int L=1,int R=n)\n\t{\n\t\tif(L==R){Tree[rt].Sum=Tree[rt].FMS=Tree[rt].BMS=1;return;}\n\t\tTree[rt].L=New();\n\t\tTree[rt].R=New();\n\t\tint M=(L+R)>>1;\n\t\tBuild(Tree[rt].L,L,M);\n\t\tBuild(Tree[rt].R,M+1,R);\n\t\tPushUp(rt);\n\t}\n\tvoid Update(int rt,int pre,int p,int L=1,int R=n)\n\t{\n\t\tif(L==R){Tree[rt].Sum=Tree[rt].FMS=Tree[rt].BMS=-1;return;}\n\t\tTree[rt]=Tree[pre];\n\t\tint M=(L+R)>>1;\n\t\tif(p<=M)\n\t\t{\n\t\t\tTree[rt].L=New();\n\t\t\tUpdate(Tree[rt].L,Tree[pre].L,p,L,M);\n\t\t}\n\t\tif(M<p)\n\t\t{\n\t\t\tTree[rt].R=New();\n\t\t\tUpdate(Tree[rt].R,Tree[pre].R,p,M+1,R);\n\t\t}\n\t\tPushUp(rt);\n\t}\n\tNode Query(int rt,int LL,int RR,int L=1,int R=n)\n\t{\n\t\tif(LL>RR){return (Node){0,0,0,0,0};}\n\t\tif(LL<=L&&R<=RR) return Tree[rt];\n\t\tint M=(L+R)>>1;Node IL,IR,ret;\n\t\tif(LL<=M) IL=Query(Tree[rt].L,LL,RR,L,M);\n\t\tif(M<RR) IR=Query(Tree[rt].R,LL,RR,M+1,R);\n\t\tif(LL<=M&&M>=RR) return IL;\n\t\tif(LL>M&&M<RR) return IR;\n\t\tret.Sum=IL.Sum+IR.Sum;\n\t\tret.FMS=max(IL.FMS,IL.Sum+IR.FMS);\n\t\tret.BMS=max(IR.BMS,IR.Sum+IL.BMS);\n\t\treturn ret;\n\t}\n}CT;\ninline bool cmp(int x,int y){return A[x]<A[y];}\ninline void Solve(int a,int b,int c,int d)\n{\n\tint L=1,R=n,mid;\n\twhile(L<=R)\n\t{\n\t\tmid=(L+R)>>1;\n\t\tChairmanTree::Node IL=CT.Query(CT.R[CR[A[id[mid]]]],a,b),IM=CT.Query(CT.R[CR[A[id[mid]]]],b+1,c-1),IR=CT.Query(CT.R[CR[A[id[mid]]]],c,d);\n\t\tIL.BMS+IM.Sum+IR.FMS>=0?L=mid+1:R=mid-1;\n\t}\n\tans=A[id[R]];\n\tprintf(\"%d\\n\",ans);\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++) A[i]=read();\n\tfor(int i=1;i<=n;i++) id[i]=i;\n\tsort(id+1,id+1+n,cmp);\n\tCT.R[1]=CT.New();CT.Build(1);CR[A[id[1]]]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tCT.R[i]=CT.New();\n\t\tif(!CR[A[id[i]]]) CR[A[id[i]]]=i;\n\t\tCT.Update(CT.R[i],CT.R[i-1],id[i-1]);\n\t}\n\tQ=read();\n\twhile(Q--)\n\t{\n\t\tq[1]=(read()+ans)%n+1;q[2]=(read()+ans)%n+1;q[3]=(read()+ans)%n+1;q[4]=(read()+ans)%n+1;\n\t\tsort(q+1,q+1+4);\n\t\tSolve(q[1],q[2],q[3],q[4]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1553864515,
        "uid": 42392,
        "name": "\u5f90\u81f4\u8fdc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "### [\u56fd\u5bb6\u96c6\u8bad\u961f]middle  \n\u4e8c\u5206\u7b54\u6848\u60f3\u5230\u4e86\uff0c\u7136\u540e\u5c0f\u4e8e\u7684\u4e3a-1\uff0c\u5927\u4e8e\u7b49\u4e8e\u7684\u4e3a1\uff0c\u4e2d\u95f4\u4e00\u5757\u52a0\u4e0a\uff0c\u4e00\u4e2a\u6700\u5927\u524d\u7f00\uff0c\u4e00\u4e2a\u6700\u5927\u540e\u7f00\u7684\u5957\u8def\u4e5f\u77e5\u9053\uff0c\u7136\u540e\u5c31\u4e0d\u4f1a\u4e86\u3002    \n~~\u542c\u8bf4\u662f\u9648\u7acb\u6770\u51fa\u7684\u9898~~    \n\u7136\u540e\u8be5\u600e\u4e48\u529e\uff1f\u4e0a\u4e3b\u5e2d\u6811\uff0c\u6211\u4eec\u4e00\u4e2a\u521d\u6b65\u7684\u60f3\u6cd5\u662f\u6bcf\u4e00\u4e2a\u6743\u503c\uff0c\u90fd\u5efa\u4e00\u98971\u548c-1\u7684\u666e\u901a\u7ebf\u6bb5\u6811\u4e0a\u9762\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u533a\u95f4\u6700\u5927\u524d\u7f00\uff0c\u6700\u5927\u540e\u7f00\u3002\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u76f8\u90bb\u4e24\u4e2a\u6743\u503c\u7684\u7ebf\u6bb5\u6811\uff0c\u5f88\u76f8\u8fd1\uff0c\u53ea\u6709\u4e00\u4e2a\u6743\u503c\u7684\u70b9\u4e0d\u4e00\u6837\uff0c\u53ea\u9700\u8981\u6539$logn$\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5c31\u662f\u4e3b\u5e2d\u6811\u4e86\u3002\u90a3\u4e48\u5047\u5982\u4e00\u4e2a\u6743\u503c\u6709\u5f88\u591a\u70b9\u8be5\u600e\u4e48\u529e\u3002\u53ea\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u63d2\u5165\uff0c\u7136\u540e\u4ee5\u6700\u540e\u4e00\u6b21\u63d2\u5165\u5b8c\u6210\u540e\u7684\u6839\u4f5c\u4e3a\u8fd9\u4e2a\u6743\u503c\u7684\u6839\u5c31\u884c\u4e86\u3002  \n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int N=20100;\nvector<int> vec[N];\nint n,m,a[N],b[N],ans,root[N],num,q[6];\nint sum[N*20],ml[N*20],mr[N*20],tot,ch[N*20][2];\nint read(){\n    int sum=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){sum=sum*10+ch-'0';ch=getchar();}\n    return sum*f;\n}\nvoid update(int now){\n    sum[now]=sum[ch[now][0]]+sum[ch[now][1]];\n    ml[now]=max(ml[ch[now][0]]+sum[ch[now][1]],ml[ch[now][1]]);\n    mr[now]=max(mr[ch[now][1]]+sum[ch[now][0]],mr[ch[now][0]]);\n}\nvoid build(int l,int r,int &now){\n    if(now==0)now=++tot;\n    if(l==r){\n        sum[now]=ml[now]=mr[now]=1;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(l,mid,ch[now][0]);\n    build(mid+1,r,ch[now][1]);\n    update(now);\n}\nvoid add(int l,int r,int x,int pre,int &now){\n    now=++tot;\n    if(l==r){sum[now]=ml[now]=mr[now]=-1;return;}\n    ch[now][0]=ch[pre][0];\n    ch[now][1]=ch[pre][1];\n    int mid=(l+r)>>1;\n    if(x>mid)add(mid+1,r,x,ch[pre][1],ch[now][1]);\n    else add(l,mid,x,ch[pre][0],ch[now][0]);\n    update(now);\n}\nint check(int l,int r,int L,int R,int now){\n    if(L>R)return 0;\n    if(l==L&&r==R){\n        return sum[now];\n    }\n    int mid=(l+r)>>1;\n    if(L>mid)return check(mid+1,r,L,R,ch[now][1]);\n    else if(R<=mid)return check(l,mid,L,R,ch[now][0]);\n    else return check(l,mid,L,mid,ch[now][0])+check(mid+1,r,mid+1,R,ch[now][1]); \n}\nint check_L(int l,int r,int L,int R,int now){\n    if(l==L&&r==R)return ml[now];\n    int mid=(l+r)>>1;\n    if(L>mid)return check_L(mid+1,r,L,R,ch[now][1]);\n    else if(R<=mid)return check_L(l,mid,L,R,ch[now][0]);\n    else{\n        int tmp1=check_L(mid+1,r,mid+1,R,ch[now][1]);\n        int tmp2=check(mid+1,r,mid+1,R,ch[now][1])+check_L(l,mid,L,mid,ch[now][0]);\n        return max(tmp1,tmp2);\n    }\n}\nint check_R(int l,int r,int L,int R,int now){\n    if(l==L&&r==R)return mr[now];\n    int mid=(l+r)>>1;\n    if(L>mid)return check_R(mid+1,r,L,R,ch[now][1]);\n    else if(R<=mid)return check_R(l,mid,L,R,ch[now][0]);\n    else{\n        int tmp1=check_R(l,mid,L,mid,ch[now][0]);\n        int tmp2=check(l,mid,L,mid,ch[now][0])+check_R(mid+1,r,mid+1,R,ch[now][1]);\n        return max(tmp1,tmp2);\n    }\n}\nbool judge(int x){\n    int tmp1=check(1,n,q[2]+1,q[3]-1,root[x]);\n    int tmp2=check_L(1,n,q[1],q[2],root[x]);\n    int tmp3=check_R(1,n,q[3],q[4],root[x]);\n    if(tmp1+tmp2+tmp3>=0)return true;\n    else return false; \n}\nint work(){\n    int l=1,r=num,tmp;\n    while(l<=r){\n        int mid=(l+r)>>1;\n        if(judge(mid)){\n            tmp=mid;\n            l=mid+1;\n        }\n        else r=mid-1;\n    }\n    return tmp;\n}\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++)a[i]=read(),b[i]=a[i];\n    sort(b+1,b+1+n);\n    num=unique(b+1,b+1+n)-b-1;\n    build(1,n,root[0]);\n    for(int i=1;i<=n;i++){\n        a[i]=lower_bound(b+1,b+1+num,a[i])-b;\n        vec[a[i]].push_back(i);\n    }\n    for(int i=1;i<=num;i++){\n        root[i]=root[i-1];\n        if(vec[i-1].size())for(int j=0;j<vec[i-1].size();j++)\n            add(1,n,vec[i-1][j],root[i],root[i]);\n    }\n    m=read();\n    while(m--){\n        q[1]=(read()+ans)%n+1,q[2]=(read()+ans)%n+1,q[3]=(read()+ans)%n+1,q[4]=(read()+ans)%n+1;\n    //\tq[1]=read(),q[2]=read(),q[3]=read(),q[4]=read();\n        sort(q+1,q+1+4);\n        ans=work();\n        printf(\"%d\\n\",b[ans]);\n        ans=b[ans];\n    }\n    return 0;\n}\n```",
        "postTime": 1546215836,
        "uid": 52173,
        "name": "xudaxia",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    },
    {
        "content": "#### \u7b2c\u4e00\u7bc7\u9ed1\u9898\u9898\u89e3\u6709\u4e9b\u5c0f\u6fc0\u52a8\uff0c\u9898\u89e3\u6709\u70b9\u5570\u55e6\u5927\u4f6c\u52ff\u55b7qwq\n## \u8fd9\u9053\u9898\u5bf9\u4e8e\u52a0\u6df1\u5bf9\u4e3b\u5e2d\u6811\u7684\u7406\u89e3\uff08\u800c\u4e0d\u662f\u53ea\u505c\u7559\u5728\u9759\u6001\u533a\u95f4\u7b2cK\u5927\u4e0a\uff09\u6709\u5f88\u5927\u7684\u5e2e\u52a9\uff01\uff01\uff01\n#### $30pts$\u505a\u6cd5\uff1a\n#### \u679a\u4e3e\u5de6\u53f3\u7aef\u70b9\u5e76\u7ef4\u62a4\u4e2d\u4f4d\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u5bf9\u9876\u5806\u6216\u8005\u533a\u95f4\u7b2cK\u5927\u5f62\u5f0f\u7684\u4e3b\u5e2d\u6811\n#### \u590d\u6742\u5ea6\u90fd\u662f$O(n^2Qlog_2n)$\uff0c\u52a0\u4e00\u4e9b\u7384\u5b66\u5361\u5e38\u6216\u8bb8\u53ef\u4ee5\u591a\u8fc7\u4e00\u4e24\u4e2a\u6d4b\u8bd5\u70b9\n#### \u671f\u671b\u5f97\u520630\uff0c\u5b9e\u9645\u5f97\u52060-30\u4e0d\u7b49\uff1f\n### $100pts$\u6b63\u89e3\uff1a\n### \u89c2\u5bdf$100 \\%$\u7684\u6570\u636e\u89c4\u6a21\uff0c$n,Q$\u7684\u89c4\u6a21\u90fd\u8fbe\u5230\u4e86$2 \\times 10^4,O(nQ)$\u7684\u505a\u6cd5\u90fd\u6bd4\u8f83\u5403\u529b\uff0c\u6240\u4ee5\u8003\u8651\u4f7f\u7528log\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u7ef4\u62a4\u83b7\u5f97$O(Qlog_2n)$\u6216\u8005$O(Qlog_2^2n)$\u7684\u7b97\u6cd5\u3002\n### \u6545\u8003\u8651\u5230\u4f7f\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\uff0c\u540c\u65f6\u4f7f\u7528\u4e8c\u5206\u7684\u65b9\u5f0f\u5bfb\u627e\u6bcf\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\uff0c\n### \u5176\u4e2dcheck\u7684\u5185\u5bb9\u5c31\u662f\u5bfb\u627e\u662f\u5426\u6709\u6ee1\u8db3\u8be5\u8be2\u95ee\u6761\u4ef6\u7684\u533a\u95f4\uff0c\u5728\u5176\u4e2d\uff08\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u4e8c\u5206\u7684\u6570\u7684\u6570\u5b57\u4e2a\u6570\uff09\u8981\u5927\u4e8e\u7b49\u4e8e\uff08\u5c0f\u4e8e\u5f53\u524d\u4e8c\u5206\u7684\u6570\u7684\u6570\u5b57\u4e2a\u6570\uff09\u3002~~\uff08\u65ad\u53e5\u7565\u5947\u602a\uff09~~\n### \u4e0d\u59a8\u5c06\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u4e8c\u5206\u7684\u6570\u7684\u6570\u5b57\u7684\u6743\u503c\u8bbe\u4e3a1\uff0c\u5c0f\u4e8e\u5f53\u524d\u4e8c\u5206\u7684\u6570\u7684\u6570\u5b57\u7684\u6743\u503c\u8bbe\u4e3a-1\uff0ccheck\u7684\u5185\u5bb9\u5c31\u7b49\u4ef7\u4e8e\u8be2\u95ee\n### $max(\\sum_{i=x}^y w_i) \\geq 0 (x \\in {[a , b]} , y \\in{[c , d]})$\n### \u662f\u5426\u6210\u7acb\u3002\n### \u6240\u4ee5\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\u5efa\u7acb\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5b58\u50a8\u6743\u503c\uff0c\u5728\u6bcf\u4e00\u6b21\u4e8c\u5206\u8be2\u95ee\u65f6\u6c42\u51fa\u5bf9\u5e94\u7ebf\u6bb5\u6811\u4e2d$x \\in {[a , b]} , y \\in{[c , d]},\\sum_{i=b+1}^{c-1} w_i + max(\\sum_{i=x}^b w_i)+max(max(\\sum_{i=c}^y w_i))$\u662f\u5426\u5927\u4e8e0\uff0c\u521a\u597d\u8fd9\u4e09\u4e2a\u5f0f\u5b50\u5bf9\u5e94\u533a\u95f4\u548c\u3001\u533a\u95f4\u6700\u5927\u540e\u7f00\u3001\u533a\u95f4\u6700\u5927\u524d\u7f00\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\n### \u7136\u540e\u4f1a\u53d1\u73b0\u7a7a\u95f4\u7206\u70b8\uff0c\u7136\u540e\u53d1\u73b0\u6392\u5b8c\u5e8f\u540e\u4ece\u7b2c$i$\u4e2a\u7ebf\u6bb5\u6811\u5230\u7b2c$i+1$\u4e2a\u7ebf\u6bb5\u6811\u53ea\u6709\u4e00\u4e2a\u70b9\u6743\u503c\u4ece$1$\u53d8\u4e3a$-1$\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u8fdb\u884c\u7ef4\u62a4\uff0c\u7136\u540e\u5c31\u53ef\u4ee5happy\u5730\u5207\u6389\u8fd9\u9053\u9898\u4e86\n### \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(Qlog_2^2n)$\uff0c\u7b26\u5408\u672c\u9898\u6570\u636e\u8303\u56f4\n### \u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5947\u4e11\u65e0\u6bd4\uff0c\u4e0b\u9762\u7684\u5f88\u591adalao\u6bd4\u6211\u5199\u5f97\u597d\u591a\u4e86qwq\n```\n#include<bits/stdc++.h>\n#define MAXN 100002\nusing namespace std;\ninline int read(){\n    int a = 0;\n    bool f = 0;\n    char c = getchar();\n    while(!isdigit(c)){\n        if(c == '-')\n            f = 1;\n        c = getchar();\n    }\n    while(isdigit(c)){\n        a = (a << 3) + (a << 1) + (c ^ '0');\n        c = getchar();\n    }\n    return f ? -a : a;\n}\nchar output[12];\ninline void print(int x){\n    int dirN = 11;\n    if(x == 0)\n    \tfwrite(\"0\" , sizeof(char) , 1 , stdout);\n    else{\n    \tif(x < 0){\n    \t\tx = -x;\n    \t\tfwrite(\"-\" , sizeof(char) , 1 , stdout);\n        }\n        while(x){\n       \t    output[--dirN] = x % 10 + 48;\n    \t    x /= 10;\n    \t}\n    \tfwrite(output + dirN , 1 , strlen(output + dirN) , stdout);\n    }\n    fwrite(\"\\n\" , 1 , 1 , stdout);\n}\nstruct node{\n    int sum , lMax , rMax , l , r;\n}Tree[22 * MAXN];\nstruct sortNum{//\u7528\u4e8e\u6392\u5e8f\n    int ind , num;\n    bool operator <(sortNum a){\n        return num < a.num;\n    }\n}sorted[MAXN];\nint num[MAXN] , root[MAXN];\nint N , cntNode = 1 , rMax , rSum , lMax , lSum;\n\ninline int max(int a , int b){\n    return a > b ? a : b;\n}\n\ninline void swap(int &a , int &b){\n    int t = a;\n    a = b;\n    b = t;\n}\n\n//\u521d\u59cb\u5316\u4e00\u4e2a\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u6743\u503c\u90fd\u4e3a1\u7684\u7ebf\u6bb5\u6811\nvoid init(int dir , int l , int r){\n    Tree[dir].sum = Tree[dir].lMax = Tree[dir].rMax = r - l + 1;\n    if(l != r){\n        init(Tree[dir].l = ++cntNode , l , l + r >> 1);\n        init(Tree[dir].r = ++cntNode , (l + r >> 1) + 1 , r);\n    }\n}\n\ninline void pushup(int dir){\n    Tree[dir].lMax = max(Tree[Tree[dir].l].lMax , Tree[Tree[dir].l].sum + Tree[Tree[dir].r].lMax);\n    Tree[dir].rMax = max(Tree[Tree[dir].r].rMax , Tree[Tree[dir].r].sum + Tree[Tree[dir].l].rMax);\n    Tree[dir].sum = Tree[Tree[dir].l].sum + Tree[Tree[dir].r].sum;\n}\n\n//\u66f4\u65b0\u7248\u672c\nvoid update(int now , int last , int l , int r , int dir){\n    if(l == r){\n        Tree[now].lMax = Tree[now].rMax = 0;\n        Tree[now].sum = -1;\n    }\n    else{\n        if(dir > l + r >> 1){\n            Tree[now].l = Tree[last].l;\n            update(Tree[now].r = ++cntNode , Tree[last].r , (l + r >> 1) + 1 , r , dir);\n        }\n        else{\n            Tree[now].r = Tree[last].r;\n            update(Tree[now].l = ++cntNode , Tree[last].l , l , l + r >> 1 , dir);\n        }\n        pushup(now);\n    }\n}\n\n//\u533a\u95f4\u548c\nint findSum(int dir , int l , int r , int L , int R){\n    if(L >= l && R <= r)\n        return Tree[dir].sum;\n    int sum = 0;\n    if(l <= L + R >> 1)\n        sum += findSum(Tree[dir].l , l , r , L , L + R >> 1);\n    if(r > R + L >> 1)\n        sum += findSum(Tree[dir].r , l , r , (L + R >> 1) + 1 , R);\n    return sum;\n}\n\n//\u533a\u95f4\u6700\u5927\u540e\u7f00\nvoid findRightMax(int dir , int l , int r , int L , int R){\n    if(L >= l && R <= r){\n        rMax = max(rMax , Tree[dir].rMax + rSum);\n        rSum += Tree[dir].sum;\n        return;\n    }\n    if(r > L + R >> 1)\n        findRightMax(Tree[dir].r , l , r , (L + R >> 1) + 1 , R);\n    if(l <= L + R >> 1)\n        findRightMax(Tree[dir].l , l , r , L , L + R >> 1);\n}\n\n//\u533a\u95f4\u6700\u5927\u524d\u7f00\nvoid findLeftMax(int dir , int l , int r , int L , int R){\n    if(L >= l && R <= r){\n        lMax = max(lMax , Tree[dir].lMax + lSum);\n        lSum += Tree[dir].sum;\n        return;\n    }\n    if(l <= L + R >> 1)\n        findLeftMax(Tree[dir].l , l , r , L , L + R >> 1);\n    if(r > L + R >> 1)\n        findLeftMax(Tree[dir].r , l , r , (L + R >> 1) + 1 , R);\n}\n\n//\u4e8c\u5206check\n//\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\u8fd9\u91cc\u7684\u4ee3\u7801\u4e0e\u4e0a\u9762\u7684\u516c\u5f0f\u7a0d\u6709\u4e0d\u540c\ninline bool check(int mid , int a , int b , int c , int d){\n    lSum = rSum = 0;\n    lMax = rMax = -1;\n    findRightMax(root[mid] , a , b - 1 , 1 , N);\n    findLeftMax(root[mid] , c + 1 , d , 1 , N);\n    return findSum(root[mid] , b , c , 1 , N) + lMax + rMax >= 0;\n}\n\nint main(){\n    N = read();\n    long long lastans = 0;\n    for(int i = 1 ; i <= N ; i++)\n        num[sorted[i].ind = i] = sorted[i].num = read();\n    init(root[1] = 1 , 1 , N);\n    sort(sorted + 1 , sorted + N + 1);\n    for(int i = 1 ; i <= N ; i++)\n        update(root[i + 1] = ++cntNode , root[i] , 1 , N , sorted[i].ind); \n    for(int Q = read() ; Q ; Q--){\n        int a = (read() + lastans) % N + 1 , b = (read() + lastans) % N + 1 , c = (read() + lastans) % N + 1 , d = (read() + lastans) % N + 1;\n        if(a > b)\n            swap(a , b);\n        if(a > c)\n            swap(a , c);\n        if(a > d)\n            swap(a , d);\n        if(b > c)\n            swap(b , c);\n        if(b > d)\n            swap(b , d);\n        if(c > d)\n            swap(c , d);\n        int l = 1 , r = N;\n        while(l < r){\n            int mid = l + r + 1 >> 1;\n            if(check(mid , a , b , c , d))\n                l = mid;\n            else\n                r = mid - 1;\n        }\n        printf(\"%d\\n\" , lastans = sorted[l].num);\n    }\n    return 0;\n}\n```\n### ~~\u8bdd\u8bf4\u6a21\u62df\u8d5b\u8003\u8fd9\u4e2a\uff0c\u9898\u89e3\u4e2d\u8d6b\u7136\u5199\u4e0a\u4e86\u201c\u9632AK\u9898\u201d\u6211\u4e5f\u662f\u5f88mengbi\u7684~~",
        "postTime": 1534603102,
        "uid": 96296,
        "name": "Itst",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]middle\u3011"
    }
]