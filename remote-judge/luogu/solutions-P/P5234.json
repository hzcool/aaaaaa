[
    {
        "content": "\u524d\u8a00:~~\u597d\u591a\u9898\u89e3\u88ab hack \u4e86\u554a\u3002~~\n\n### Problem \n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u5f20\u56fe\uff0c$A$ \u5148\u6dfb\u52a0 $1$ \u6761\u8fb9\uff0c$B$ \u518d\u5220\u53bb\u4e00\u6761\u8fb9\u4f7f\u5f97\u56fe\u4e0d\u8fde\u901a\uff0c$A$ \u8981\u6700\u5927\u5316\u5220\u9664\u8fb9\u7684\u6743\u503c\uff0c$B$ \u8981\u6700\u5c0f\u5316\u5220\u9664\u8fb9\u7684\u6743\u503c\uff0c\u95ee\u6700\u7ec8\u7684\u6743\u503c\u662f\u591a\u5c11\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a $n \\leq 5 \\times 10^5,m \\leq 10^6$\u3002\n\n### Solution\n\n\u524d\u7f6e\u829d\u58eb\uff1a\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u663e\u7136\uff0c\u8fb9\u53cc\u4e2d\u7684\u8fb9\u662f\u80af\u5b9a\u4e0d\u80fd\u5220\u7684\uff0c\u56e0\u4e3a\u5220\u9664\u4e86\u4e5f\u5e76\u4e0d\u4f1a\u4f7f\u56fe\u4e0d\u8fde\u901a\u3002\u6240\u4ee5\u6211\u4eec\u6709\u4e2a\u81ea\u7136\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fb9\u53cc\u7f29\u70b9\uff0c\u5728\u91cd\u65b0\u5efa\u56fe\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u7b80\u5316\u4e3a\u4e86\u6811\u4e0a\u95ee\u9898\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u6811\u4e0a\u600e\u4e48\u505a\uff0c\u60f3\u4e00\u60f3\u4f1a\u53d1\u73b0\uff0c$A$ \u7684\u64cd\u4f5c\u94fe\u63a5 $i,j$ \u7b49\u4ef7\u4e8e\u5c06\u6811\u4e0a $i,j$ \u7f29\u70b9\u4e4b\u540e\u7684\u7f16\u53f7 $i',j'$ \u94fe\u4e0a\u7684\u8fb9\u53bb\u6389\u4e86\uff0c\u56e0\u4e3a\u52a0\u8fb9\u540e\u8fd9\u6761\u94fe\u4f1a\u6784\u6210\u4e00\u4e2a\u8fb9\u53cc\uff0c\u5220\u9664\u8fb9\u53cc\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u90fd\u662f\u65e0\u6cd5\u4f7f\u56fe\u4e0d\u8fde\u901a\u7684\uff0c\u8fd9\u4e2a\u5f88\u663e\u7136\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8003\u8651\uff0c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u770b\u770b\u679a\u4e3e\u7684\u8fd9\u6761\u8fb9\u548c\u4e4b\u524d\u7684\u8fb9\u80fd\u5426\u6784\u6210\u4e00\u6761\u94fe\uff0c\u5982\u679c\u4e0d\u80fd\u6784\u6210\u90a3\u4e48\u663e\u7136\u8fd9\u6761\u8fb9\u5c31\u662f\u7b54\u6848\uff0c\u5426\u5219\u82e5\u6240\u6709\u8fb9\u90fd\u53ef\u4ee5\u6784\u6210\u4e00\u6761\u94fe\uff0c\u90a3\u4e48\u8f93\u51fa $-1$ \u5373\u53ef\u3002\n\n\u81f3\u4e8e\u5982\u4f55\u5224\u65ad\u80fd\u5426\u6784\u6210\u94fe\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u4ee5\u6700\u5c0f\u7684\u8fb9\u7684\u4efb\u610f\u4e00\u4e2a\u7aef\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u9664\u4e86\u6839\u8282\u70b9\uff0c\u663e\u7136\u6bcf\u4e00\u4e2a\u70b9\u53ea\u80fd\u6709\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u5b83\u7684\u513f\u5b50\uff0c\u82e5\u65b0\u52a0\u8fb9\u7684\u7aef\u70b9\u5f80\u4e0a\u8df3\uff0c\u82e5\u8df3\u5230\u4e00\u4e2a\u70b9\u6709\u513f\u5b50\u4e14\u4e0d\u662f\u81ea\u5df1\uff0c\u90a3\u4e48\u5c31\u591f\u4e0d\u6210\u94fe\u3002\u6839\u8282\u70b9\u8981\u7279\u5224\u4e00\u4e0b\u3002\n\n\n\u81f3\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u672c\u6765\u6211\u60f3\u7528\u500d\u589e\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a\u70b9\u53ea\u4f1a\u88ab\u66f4\u65b0\u4e00\u6b21\uff0c\u66f4\u65b0\u7b2c\u4e8c\u6b21\u8981\u4e48\u76f4\u63a5\u9000\u51fa\uff08\u5373\u53d1\u73b0\u6784\u4e0d\u6210\u94fe\uff09\uff0c\u6216\u8005\u4e0d\u7528\u5f80\u4e0a\u8df3\u4e86\uff08\u663e\u7136\uff0c\u5f53\u524d\u8282\u70b9\u6ee1\u8db3\uff0c\u7956\u5148\u8282\u70b9\u663e\u7136\u4e0d\u5f71\u54cd\uff09\u3002\u6240\u4ee5\u66b4\u529b\u8df3\u662f\u5747\u644a\u7684\u590d\u6742\u5ea6\uff0c\u662f\u6bd4\u975e\u5747\u644a\u7684\u500d\u589e\u8fd8\u5feb\u7684\u3002\n\n\u7ed3\u5408\u4ee3\u7801\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u54c8\uff01\n\n~~\u622a\u6b62 $2023.2.9$\uff0c\u6682\u65f6\u8fc7\u4e86\u6240\u6709 hack\u3002~~\n\n### Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e6+7232;\nint n,m,x,y,z;\nstruct hl{\n\tint v,nxt,w;\n}e[N];\nstruct len{\n\tint u,v,w;\n}t[N];\nint h[N],cnt=1;\nbitset<N> vis;\nvoid add(int u,int v,int w)\n{\n\te[++cnt].v=v;e[cnt].nxt=h[u];h[u]=cnt;e[cnt].w=w;\n}\nint mi(int x,int y){return x<y?x:y;}\nint dfn[N],low[N],tot,now;\nvoid tarjan(int x,int fx)\n{\n\tdfn[x]=low[x]=++tot;\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(e[i].v==fx) continue;\n\t\tif(!dfn[e[i].v])\n\t\t{\n\t\t\ttarjan(e[i].v,x);\n\t\t\tlow[x]=mi(low[x],low[e[i].v]);\n\t\t\tif(low[e[i].v]>dfn[x]) vis[i]=vis[i^1]=1;\n\t\t}\n\t\telse low[x]=mi(low[x],dfn[e[i].v]);\n\t}\n}\nint ecc[N];\nvoid dfs(int x)\n{\n\tecc[x]=now;\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(vis[i]||ecc[e[i].v]) continue;\n\t\tdfs(e[i].v);\n\t}\n}\nbool cmp(len x,len y)\n{\n\treturn x.w<y.w;\n}\nint fa[N],dis[N],dep[N],son;\nvoid dfss(int x,int fx)\n{\n\tfa[x]=fx;dep[x]=dep[fx]+1;\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(e[i].v==fx) continue;\n\t\tdfss(e[i].v,x);\n \t}\n}\nint num;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t\tt[i]={x,y,z};\n\t}\n\tfor(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i,i);\n\tfor(int i=1;i<=n;i++) if(!ecc[i]) ++now,dfs(i);//\u627e\u8fb9\u53cc\n\tmemset(h,0,sizeof(h));cnt=0;\n\tfor(int i=1;i<=m;i++)\n\t\tif(ecc[t[i].u]!=ecc[t[i].v]) add(ecc[t[i].u],ecc[t[i].v],t[i].w),add(ecc[t[i].v],ecc[t[i].u],t[i].w),t[++num]=t[i];\n\t//\u91cd\u65b0\u52a0\u8fb9\n\tsort(t+1,t+num+1,cmp);\n\tdfss(ecc[t[1].u],0);dis[ecc[t[1].u]]=ecc[t[1].v];//\u4ee5\u6700\u5c0f\u7684\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\u4f5c\u4e3a\u6839\n\tfor(int i=2;i<=num;i++)\n\t{\n\t\tint k=dep[ecc[t[i].u]]>dep[ecc[t[i].v]]?ecc[t[i].u]:ecc[t[i].v];//\u4ece\u6df1\u5ea6\u6df1\u7684\u8df3\n\t\twhile(!dis[fa[k]]) dis[fa[k]]=k,k=fa[k];//\u8df3\u5230\u4e00\u4e2a\u56fa\u5b9a\u513f\u5b50\u7684\u70b9\n\t\tif(son==0&&fa[k]==ecc[t[1].u]&&dis[fa[k]]!=k) son=k;//\u82e5\u4e3a\u6839\uff0c\u7279\u5224\n\t\telse if(dis[fa[k]]==k||fa[k]==ecc[t[1].u]&&son==k) ;//\u82e5\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u5728\u94fe\u4e0a\u7684\u513f\u5b50\u5c31\u662f\u81ea\u5df1\uff0c\u90a3\u4e48\u9000\u51fa\n\t\telse //\u5426\u5219\u8f93\u51fa\u8fb9\u7684\u6743\u503c\n\t\t{\n\t\t\tprintf(\"%d\\n\",t[i].w);\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"-1\\n\");\n}\n```\n\n",
        "postTime": 1675933584,
        "uid": 478885,
        "name": "lenlen",
        "ccfLevel": 6,
        "title": "P5234 [JSOI2012]\u8d8a\u72f1\u8001\u864e\u6865 \u9898\u89e3"
    },
    {
        "content": "\u6211\u4e0d\u559c\u6b22\u8fc7\u4e8e\u590d\u6742\u7684\u5206\u7c7b\u8ba8\u8bba\uff0c\u8fd9\u9053\u9898\u4e5f\u4e0d\u9700\u8981 LCA\u3002\u8001\u5e08\u8bb2\u9898\u65f6\u5c31\u53e3\u80e1\u4e86\u4e00\u4e0b\uff1a\u5148\u8fb9\u53cc\u7f29\u70b9\uff0c\u5c06\u5272\u8fb9\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4ee5\u6700\u5c0f\u7684\u8fb9\u7684\u67d0\u4e00\u7aef\u70b9\u4e3a\u6839\uff0c\u53e6\u4e00\u7aef\u70b9\u505a\u201c\u7279\u6b8a\u8d35\u5ba2\u201d\uff0c\u4ece\u5c0f\u5230\u5927\u5904\u7406\uff0c\u6bcf\u6b21\u5c06\u8fb9\u7684\u8f83\u6df1\u7aef\u70b9 Access\uff0c\u5982\u679c\u65ad\u4e86\u8fb9\uff0c\u8868\u793a\u8fd9\u6761\u8fb9\u4e0d\u80fd\u518d\u52a0\u5230\u94fe\u91cc\u9762\uff0c\u8fd9\u6761\u8fb9\u5c31\u662f\u7b54\u6848\uff0c\u5982\u679c\u5168\u90e8\u90fd\u53ef\u4ee5\u6dfb\u52a0\uff0c\u5c31\u8f93\u51fa $-1$\u3002\n\n\u672c\u6765\u60f3\u7740\u53ef\u4ee5\u7528 Link-Cut-Tree \u7ef4\u62a4\uff0c\u4f46\u7531\u4e8e\u672c\u9898\u6bcf\u4e00\u6761\u8fb9\u53ea\u4f1a\u88ab\u5f71\u54cd\u4e00\u6b21\uff0c\u6240\u4ee5\u66b4\u529b\u7ef4\u62a4\u5c31\u597d\uff0c\u590d\u6742\u5ea6 $O(n+m)$\u3002\n\n\u5173\u4e8e\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u5176\u5b9e\u5c31\u662f\u5c06\u5272\u8fb9\u53bb\u6389\u7684\u8054\u901a\u5b50\u56fe\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u4e9b\u5b50\u56fe\u5185\u90e8\u7684\u4efb\u610f\u4e00\u6761\u8fb9\u88ab\u5272\u6389\u90fd\u4e0d\u4f1a\u9020\u6210\u5f71\u54cd\uff0c\u4e8e\u662f\u5c06\u5b83\u4eec\u7f29\u70b9\uff0c\u800c\u7f29\u5b8c\u70b9\u7684\u56fe\u6ca1\u6709\u4e86\u73af\uff0c\u4e5f\u5c31\u53d8\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u4f46\u662f\u654c\u4eba\u4f1a\u589e\u52a0\u4e00\u6761\u8fb9\u4ee5\u81f3\u4e8e\u6811\u4e0a\u6709\u4e00\u6761\u94fe\u4e0d\u80fd\u9009\uff0c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u90a3\u6761\u94fe\u4f1a\u5c06\u5c3d\u91cf\u591a\u7684\u5c0f\u8fb9\u5305\u542b\uff0c\u6700\u5c0f\u4e00\u4e2a\u4e0d\u80fd\u5305\u542b\u7684\u5c31\u662f\u7b54\u6848\uff0c\u4e5f\u5c31\u6709\u4e86\u4ee5\u4e0a\u64cd\u4f5c\u3002\n\n### Update on 2023-2-09:\n\n\u7531\u4e8e\u53ef\u80fd\u67d0\u4e00\u6761\u8fb9\u6700\u5f00\u59cb\u5c31\u88ab\u8986\u76d6\u4e86\uff0c\u8fd9\u65f6\u8981\u7279\u5224\u6389\uff0c\u4e0d\u7136\u4f1a\u88ab Hack\u3002\n\n\u770b\u4e86\u4ee3\u7801\u5c31\u7406\u89e3\u4e86\uff01\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e5+5,M=2e6+6;\nchar buf[M+5],*p1,*p2,c;\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,M,stdin),p1==p2))?EOF:*p1++\ninline int read(){\n\tint an=0,f=1;while(!isdigit(c=gc))if(c=='-')f=-f;\n\tdo an=an*10+(48^c);while(isdigit(c=gc));return an*f; \n}\nint f[N],wt[N];\nint n,m,ed[M],w[M],dfn[N],low[N],dlt;\nvector<int>lk[N];\nstruct Edge{int u,v,w;}g[N];\ninline bool operator<(const Edge &x,const Edge &y){\n\treturn x.w<y.w;\n}\nbitset<M>Cut;\nvoid dfs1(int x,int pr){\n\tint y;dfn[x]=low[x]=++dlt;\n\tfor(int i:lk[x]){\n\t\tif(i==pr)continue;\n\t\tif(dfn[y=ed[i]]){\n\t\t\tif(dfn[y]<low[x])\n\t\t\t\tlow[x]=dfn[y];\n\t\t}else{\n\t\t\tdfs1(y,i^1);\n\t\t\tif(low[y]<low[x])low[x]=low[y];\n\t\t\telse Cut[i>>1]=low[y]>dfn[x];\n\t\t}\n\t}\n}\nvoid dfs2(int x){\n\tdfn[x]=dlt;\n\tfor(int i:lk[x])\n\t\tif(!Cut[i>>1]&&!dfn[ed[i]])\n\t\t\tdfs2(ed[i]);\n}\nvoid dfs3(int x){\n\tfor(int y:lk[x])\n\t\tif(y!=f[x])\n\t\t\tf[y]=x,dfs3(y);\n}\nint main(){\n\tn=read(),m=read();int i,x,y;\n\tfor(i=1;i<=m;++i){\n\t\tx=read(),y=read();\n\t\tw[i+i+1]=w[i+i]=read();\n\t\ted[i+i+1]=y;\n\t\tlk[x].push_back(i+i+1);\n\t\ted[i+i]=x;\n\t\tlk[y].push_back(i+i);\n\t}\n\tfor(x=1;x<=n;++x)\n\t\tif(!dfn[x])dfs1(x,-1);\n\tfor(x=1;x<=n;++x)dfn[x]=0;dlt=0;\n\tfor(x=1;x<=n;++x)\n\t\tif(!dfn[x])++dlt,dfs2(x);\n\tfor(x=1,m=0;x<=n;++x)\n\t\tfor(int i:lk[x]){\n\t\t\tif(dfn[y=ed[i]]>dfn[x])\n\t\t\t\tg[m++]={dfn[x],dfn[y],w[i]};\n\t\t}\n\tn=dlt;stable_sort(g,g+m);\n\tfor(x=1;x<=n;++x)lk[x].clear();\n\tfor(i=0;i<m;++i){\n\t\tlk[g[i].u].push_back(g[i].v);\n\t\tlk[g[i].v].push_back(g[i].u);\n\t}\n\tdfs3(g[0].u);\n\tfor(i=1;i<m;++i){\n\t\tx=g[i].u,y=g[i].v;\n\t\tif(f[x]==y)x^=y^=x^=y;\n\t\tif(wt[x]==y)continue;\n\t\twhile(x!=g[0].u&&wt[x]!=y){\n\t\t\tif(wt[x]){printf(\"%d\\n\",g[i].w);return 0;}\n\t\t\telse wt[x]=y,x=f[y=x];\n\t\t}\n\t\tif(x==g[0].u)\n\t\t\tif(y!=g[0].v){\n\t\t\t\tif(wt[x]){printf(\"%d\\n\",g[i].w);return 0;}\n\t\t\t\telse wt[x]=y;\n\t\t\t}\n\t}puts(\"-1\");\n\treturn 0;\n} \n```",
        "postTime": 1645580490,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7565\u89e3"
    },
    {
        "content": "# \u6d1b\u8c37 P5234 \u9898\u89e3\n\n[$\\text{Link}$](https://www.luogu.com.cn/problem/P5234)\n\n## \u601d\u8def\u5206\u6790\n\n\u663e\u7136\uff0c\u4efb\u4f55\u4e00\u6761\u4e0d\u662f\u6865\u7684\u8fb9\u90fd\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\uff08\u56e0\u4e3a\u5728\u4e00\u4e2a E-DCC \u4e2d\uff0c\u4efb\u610f\u5220\u53bb\u4e00\u6761\u8fb9\u90fd\u4e0d\u53ef\u80fd\u4f7f\u56fe\u4e0d\u8fde\u901a\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u539f\u56fe\u5efa\u7acb dfs \u641c\u7d22\u6811\u5e76\u4e14\u6c42\u51fa\u6865\uff0c\u5c06\u6240\u6709\u6811\u4e0a\u975e\u6865\u7684\u8fb9\u7684\u8fb9\u6743\u90fd\u8bbe\u4e3a $+\\infty$\n\n\u5047\u8bbe\u8fde\u4e86\u67d0\u4e00\u6761\u8fb9 $(u,v)$ \uff0c\u4f7f\u5f97\u7b54\u6848\u4e3a $k$\uff0c\u5219\u6240\u6709\u8fb9\u6743 $<k$ \u7684\u8fb9\u90fd\u5e94\u8be5\u5728\u7b80\u5355\u8def\u5f84 $(u,v)$ \u4e0a\n\n\u8003\u8651\u5bf9\u7b54\u6848\u4e8c\u5206\uff0c\u5982\u679c\u9700\u8981\u68c0\u67e5\u67d0\u4e2a $k$ \u662f\u5426\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u6761\u8def\u5f84 $(u,v)$ \u8986\u76d6\u6240\u6709\u8fb9\u6743 $<k$ \u7684\u8fb9\u5373\u53ef\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u6761\u8fb9\u6743 $<k$ \u7684\u8fb9\u8bbe\u4e3a $1$ \u5426\u5219\u8bbe\u4e3a $0$\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u8fb9\u6743\u6c42\u4e00\u904d\u6811\u7684\u76f4\u5f84\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u76f4\u5f84\u957f\u5ea6\u662f\u5426\u7b49\u4e8e\u8fb9\u6743 $<k$ \u7684\u8fb9\u7684\u6570\u91cf\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log T)$\n\n### \u4ee3\u7801\u5448\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=5e5+1,INF=1e9;\nstruct node {\n\tint des,val,lst;\n} edge[MAXN<<1],tr[MAXN<<1];\nint low[MAXN],dfn[MAXN],head1[MAXN],head2[MAXN],cnt[MAXN],dp[MAXN],tot=0,ans=0,dfncnt,totedge=1,tottree=0,n,m;\ninline void addedge(int u,int v,int w) {\n\tedge[++totedge]=(node){v,w,head1[u]};\n\thead1[u]=totedge;\n}\ninline void addtree(int u,int v,int w) {\n\ttr[++tottree]=(node){v,w,head2[u]};\n\thead2[u]=tottree;\n}\ninline void tarjan(int p,int uid) {\n\tlow[p]=dfn[p]=++dfncnt;\n\tfor(int i=head1[p];i;i=edge[i].lst) {\n\t\tint v=edge[i].des;\n\t\tif(!dfn[v]) {\n\t\t\ttarjan(v,i);\n\t\t\tlow[p]=min(low[p],low[v]);\n\t\t\tif(low[v]<=dfn[p]) addtree(p,v,INF);\n\t\t\telse addtree(p,v,edge[i].val);\n\t\t} else if(i!=(uid^1)) low[p]=min(low[p],dfn[v]);\n\t}\n\treturn ;\n}\ninline void dfs(int p,int l) {\n\tvector <int> vec;\n\tif(!head2[p]) dp[p]=cnt[p];\n\tfor(int i=head2[p];i;i=tr[i].lst) {\n\t\tint v=tr[i].des;\n\t\tcnt[v]=cnt[p];\n\t\tif(tr[i].val<l) ++cnt[v],++tot;\n\t\tdfs(v,l);\n\t\tvec.push_back(dp[v]);\n\t}\n\tsort(vec.begin(),vec.end(),greater<int>());\n\tif(vec.size()>0) dp[p]=vec[0],ans=max(vec[0]-cnt[p],ans);\n\tif(vec.size()>1) ans=max(ans,vec[0]+vec[1]-cnt[p]*2);\n}\ninline bool check(int x) {\n\tmemset(cnt,0,sizeof(cnt));\n\tmemset(dp,0,sizeof(dp));\n\tans=tot=0;\n\tdfs(1,x);\n\treturn ans==tot;\n}\nsigned main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;++i) {\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\taddedge(u,v,w);\n\t\taddedge(v,u,w);\n\t}\n\ttarjan(1,0);\n\tint l=0,r=INF,res=-1;\n\twhile(l<=r) {\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) l=mid+1,res=mid;\n\t\telse r=mid-1;\n\t}\n\tif(res==INF) res=-1;\n\tprintf(\"%d\\n\",res);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1659356264,
        "uid": 539618,
        "name": "DaiRuiChen007",
        "ccfLevel": 6,
        "title": "\u6d1b\u8c37 P5234 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u5148\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u53cc\u5411\u8fb9\u7684\u65e0\u5411\u56fe\u3002\n\n\u5728\u4efb\u610f\u52a0\u5165\u4e00\u6761\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u6c42\u5272\u4e00\u6761\u8fb9\u4f7f\u56fe\u4e0d\u8fde\u901a\u7684\u6700\u5c0f\u5272\u8fb9\u7684\u6700\u5927\u503c\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u5148\u7528 $\\rm Tarjan$ \u7b97\u6cd5\u6c42\u51fa\u6240\u6709\u7684\u5272\u8fb9\uff0c\u7136\u540e\u628a\u56fe\u7f29\u70b9\uff0c\u56e0\u4e3a\u73af\u5185\u7684\u8fb9\u5bf9\u7b54\u6848\u662f\u6ca1\u6709\u7528\u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u52a0\u5165\u4e00\u6761\u8fb9 $(u,v)$\uff0c\u5b83\u4f1a\u4f7f\u5f97\u6211\u4eec\u65e0\u8bba\u5272\u6389 $(u,v)$ \u8def\u5f84\u4e0a\u7684\u54ea\u4e00\u6761\u5272\u8fb9\u90fd\u4e0d\u4f1a\u4f7f\u539f\u56fe\u4e0d\u8fde\u901a\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u8981\u6700\u5927\u5316\u6700\u5c0f\u5272\u8fb9\u7684\u503c\uff0c\u6545\u4e0d\u59a8\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u89e3\u9898\uff1a\n\n\u4ece\u5c0f\u5230\u5927\u52a0\u5165\u5272\u8fb9\uff0c\u5982\u679c\u52a0\u5230\u67d0\u4e00\u65f6\u523b\u8fd9\u4e9b\u8fb9\u4e0d\u80fd\u6784\u6210\u4e00\u6761\u94fe\u4e86\uff08\u5c31\u662f\u8bf4\u4e0d\u80fd\u8fde\u5728\u4e00\u8d77\u4e86\uff09\uff0c\u8bf4\u660e\u5982\u679c\u518d\u9009\u662f\u4e0d\u53ef\u80fd\u6ee1\u8db3\u201c\u4efb\u610f\u52a0\u5165\u4e00\u6761\u8fb9\u201d\u90fd\u80fd\u5272\u4e00\u6761\u8fb9\u4f7f\u5f97\u7f29\u70b9\u540e\u7684\u56fe\u4e0d\u8fde\u901a\u4e86\u3002\n\n\u4ee3\u7801\u4e2d\uff0c\u5224\u65ad\u662f\u5426\u5728\u4e00\u6761\u94fe\u4e0a\u91c7\u7528\u4e86\u89c2\u5bdf $\\rm lca$ \u7684\u65b9\u6cd5\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u94fe\u7684\u5f62\u72b6\uff0c\u5e76\u4e14\u7ef4\u62a4\u201c\u65e0\u5f2f\u66f2\u201d\u7684\u90a3\u90e8\u5206\u94fe\uff0c\u5982\u679c\u65b0\u52a0\u5165\u7684\u8fb9\u65e0\u6cd5\u4e0e\u5f53\u524d\u7684\u94fe\u8fde\u63a5\u8d77\u6765\uff0c\u5219\u8f93\u51fa\u5f53\u524d\u65b0\u52a0\u5165\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u3002\n\n# \u4ee3\u7801\n\n```cpp\n// Problem: P5234 [JSOI2012]\u8d8a\u72f1\u8001\u864e\u6865\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P5234\n// Memory Limit: 128 MB\n// Time Limit: 1000 ms\n// Date:2022-05-29 22:27\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <cmath>\n#include <stack>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getchar();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getchar();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline double double_read() {\n\t\tlong long ret = 0,w = 1,aft = 0,dot = 0,num = 0;\n\t\tchar ch = getchar();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif (ch == '-') w = -1;\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (isdigit(ch) || ch == '.') {\n\t\t\tif (ch == '.') {\n\t\t\t\tdot = 1;\n\t\t\t} else if (dot == 0) {\n\t\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\t} else {\n\t\t\t\taft = (aft << 3) + (aft << 1) + ch - '0';\n\t\t\t\tnum ++;\n\t\t\t}\n\t\t\tch = getchar();\n\t\t}\n\t\treturn (pow(0.1,num) * aft + ret) * w;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int N = 1e6 + 5;\nstruct Graph {\n\tstruct Node {\n\t\tint v,w,nxt;\n\t} gra[N << 1];\n\tint head[N];\n\tint idx = 1;\n\tinline void add(int u,int v,int w) {\n\t\tgra[++ idx] = (Node){v,w,head[u]},head[u] = idx;\n\t}\n} g1,g2;\nstruct Edge {\n\tint u,v,w;\n} edges[N];\nint dfn[N],low[N],col[N],fr[N],to[N],wi[N],dep[N],fa[N],top[N],siz[N],son[N];\nbool in_stack[N];\nstd::stack<int>st;\nint n,m,num,cnt,num_edges;\ninline void tarjan(int now,int pre) {\n\tdfn[now] = low[now] = ++ num,in_stack[now] = true;\n\tst.push(now);\n\tfor (register int i = g1.head[now];i;i = g1.gra[i].nxt) {\n\t\tif (i != (pre ^ 1)) {\n\t\t\tint v = g1.gra[i].v;\n\t\t\tif (!dfn[v]) {\n\t\t\t\ttarjan(v,i);\n\t\t\t\tlow[now] = std::min(low[now],low[v]);\n\t\t\t} else if (in_stack[v]) {\n\t\t\t\tlow[now] = std::min(low[now],dfn[v]);\n\t\t\t}\n\t\t}\n\t}\n\tif (dfn[now] == low[now]) {\n\t\tcnt ++;\n\t\tint u;\n\t\tdo {\n\t\t\tu = st.top();st.pop();\n\t\t\tin_stack[u] = false,col[u] = cnt;\n\t\t} while (u != now);\n\t}\n}\ninline bool cmp(Edge x,Edge y) {\n\treturn x.w < y.w;\n}\nstruct chain {\n\tinline void dfs1(int now,int fath,int depth) {\n\t\tdep[now] = depth,fa[now] = fath,siz[now] = 1;\n\t\tfor (register int i = g2.head[now];i;i = g2.gra[i].nxt) {\n\t\t\tint v = g2.gra[i].v;\n\t\t\tif (v != fath) {\n\t\t\t\tdfs1(v,now,depth + 1);\n\t\t\t\tsiz[now] += siz[v];\n\t\t\t\tif (siz[son[now]] < siz[v]) {\n\t\t\t\t\tson[now] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinline void dfs2(int now,int topf) {\n\t\ttop[now] = topf;\n\t\tif (son[now]) {\n\t\t\tdfs2(son[now],topf);\n\t\t\tfor (register int i = g2.head[now];i;i = g2.gra[i].nxt) {\n\t\t\t\tint v = g2.gra[i].v;\n\t\t\t\tif (v != fa[now] && v != son[now]) {\n\t\t\t\t\tdfs2(v,v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinline int getlca(int x,int y) {\n\t\twhile (top[x] != top[y]) {\n\t\t\tif (dep[top[x]] < dep[top[y]]) std::swap(x,y);\n\t\t\tx = fa[top[x]];\n\t\t}\n\t\tif (dep[x] > dep[y]) std::swap(x,y);\n\t\treturn x;\n\t}\n} ch;\nint main(void) {\n\tn = read(),m = read();\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tfr[i] = read(),to[i] = read(),wi[i] = read();\n\t\tg1.add(fr[i],to[i],wi[i]),g1.add(to[i],fr[i],wi[i]);\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tif (!dfn[i]) {\n\t\t\ttarjan(i,-1);\n\t\t}\n\t}\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tif (col[fr[i]] != col[to[i]]) {\t\n\t\t\tg2.add(col[fr[i]],col[to[i]],wi[i]),g2.add(col[to[i]],col[fr[i]],wi[i]);\n\t\t\tedges[++ num_edges] = (Edge){col[fr[i]],col[to[i]],wi[i]};\n\t\t}\n\t}\n\tch.dfs1(1,0,1),ch.dfs2(1,1);\n\tstd::sort(edges + 1,edges + num_edges + 1,cmp);\n\tint a = edges[1].u,b = edges[1].v;\n\tint pre = ch.getlca(a,b);\n\tif (dep[a] > dep[b]) std::swap(a,b);\n\tfor (register int i = 2;i <= num_edges; ++ i) {\n\t\tint c = edges[i].u,d = edges[i].v;\n\t\tif (dep[c] > dep[d]) std::swap(c,d);\n\t\tint t1 = ch.getlca(a,c),t2 = ch.getlca(a,d),t3 = ch.getlca(b,c),t4 = ch.getlca(b,d);\n\t\tif (pre == a) {\n\t\t\tif (t1 == a && t2 == a && t3 == c && t4 == d) {\n\t\t\t\t/*\n\t\t\t\ta\n\t\t\t\tc\n\t\t\t\td\n\t\t\t\tb\n\t\t\t\t*/\n\t\t\t\tcontinue;\n\t\t\t} else if (t1 == c && t2 == d) {\n\t\t\t\t/*\n\t\t\t\tc\n\t\t\t\td\n\t\t\t\tx\n\t\t\t\tx\n\t\t\t\t*/\n\t\t\t\ta = pre = c;\n\t\t\t\tcontinue;\n\t\t\t} else if (t3 == b && t4 == b) {\n\t\t\t\t/*\n\t\t\t\ta\n\t\t\t\tb\n\t\t\t\tc\n\t\t\t\td\n\t\t\t\t*/\n\t\t\t\tb = d;\n\t\t\t\tcontinue;\n\t\t\t} else if (dep[t3] <= dep[a]) {\n\t\t\t\ta = d;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",edges[i].w);\n\t\t\tstop;\n\t\t} else {\n\t\t\tif (dep[c] >= dep[pre] && t1 == c && t2 == d) {\n\t\t\t\tcontinue;\n\t\t\t} else if (dep[c] >= dep[pre] && t3 == c && t4 == d) {\n\t\t\t\tcontinue;\n\t\t\t} else if (t1 == a && t2 == a) {\n\t\t\t\ta = d;\n\t\t\t\tcontinue;\n\t\t\t} else if (t3 == b && t4 == b) {\n\t\t\t\tb = d;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",edges[i].w);\n\t\t\tstop;\n\t\t}\n\t}\n\tputs(\"-1\");\n\t\n\treturn 0;\n}\n```",
        "postTime": 1653837231,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P5234 [JSOI2012]\u8d8a\u72f1\u8001\u864e\u6865"
    }
]