[
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u7531 $r \\times c$ \u4e2a\u65b9\u683c\u7ec4\u6210\u7684\u77e9\u5f62\uff0c\u5de6\u4e0a\u89d2\u7f16\u53f7\u4e3a $(0,0)$\uff0c\u53f3\u4e0b\u89d2\u7f16\u53f7\u4e3a $(r-1,c-1)$ \uff0c\u5bf9\u4e8e\u4e00\u4e2a\u65b9\u683c $(x,y)$ \uff0c\u5982\u679c $x+y=x \\bigoplus y$ \u5219\u65b9\u683c\u4e3a\u7070\u8272\uff0c\u5426\u5219\u4e3a\u767d\u8272\u3002\n\n\u7136\u540e\u4e00\u4e2a\u4eba\u6309\u7167\u4e0b\u56fe\u89c4\u5f8b\u4ece $(0,0)$ \u659c\u7740\u8d70\u5411 $(r-1,c-1)$\uff0c\u95ee\u4ed6\u8d70\u5230\u7b2c $k$ \u4e2a\u683c\u5b50\u65f6\u603b\u5171\u8d70\u8fc7\u4e86\u591a\u5c11\u7070\u8272\u683c\u5b50\u3002\n\n[![](http://42.193.171.148/wp-content/uploads/2022/09/wp_editor_md_7fbc9488fcf544ae2b5d682fdf65bfbc.jpg)](http://42.193.171.148/wp-content/uploads/2022/09/wp_editor_md_7fbc9488fcf544ae2b5d682fdf65bfbc.jpg)\n\n### \u601d\u8def\n\n\n\u5148\u5047\u8bbe $r \\leq c$\uff0c\u5bf9\u4e8e $r>c$ \u7684\u60c5\u51b5\u53ef\u4ee5\u5c06 $r,c$ \u4ea4\u6362\uff0c\u7136\u540e\u6539\u53d8\u51fa\u53d1\u7684\u65b9\u5411\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u4eba\u662f\u659c\u7740\u8d70\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece\u659c\u5411\u8003\u8651\uff0c\u5bf9\u4e8e\u4e00\u6761\u659c\u7ebf\uff0c\u4e0a\u9762\u6240\u6709\u7684 $x+y$ \u90fd\u662f\u76f8\u7b49\u7684\uff0c\u6211\u4eec\u8bb0\u4e3a $S$\uff0c\u8fd9\u6837\u5c31\u53ea\u9700\u8981\u627e\u6709\u591a\u5c11 $x,y$ \u6ee1\u8db3 $x \\bigoplus y=S$\u3002\n\n\u56e0\u4e3a\u5f02\u6216\u7684\u6027\u8d28\uff0c$S$ \u4e8c\u8fdb\u5236\u5982\u679c\u67d0\u4e00\u4f4d\u4e3a `1` \uff0c\u90a3\u4e48 $x$ \u548c $y$ \u4e2d\u8be5\u4f4d\u53ea\u80fd\u6709\u4e00\u4e2a `1`\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u4e3a `0` \uff0c\u90a3\u4e48 $x$ \u548c $y$ \u8be5\u4f4d\u7f6e\u8981\u4e48\u540c\u4e3a `0` \u8981\u4e48\u540c\u4e3a `1`\uff0c\u5982\u679c\u4e24\u4e2a\u4f4d\u7f6e\u540c\u4e3a `1`\uff0c\u800c\u4e14\u5728 $S$ \u4e2d\u8be5\u4f4d\u7f6e\u5de6\u8fb9\u4e00\u4f4d\u4e3a `0` \uff0c\u56e0\u4e3a\u76f8\u52a0\u8fdb\u4f4d\u7684\u5173\u7cfb\uff0c$x$ \u548c $y$ \u4e2d\u8fd9\u4e00\u4f4d\u6709\u4e14\u53ea\u6709\u4e00\u4e2a `1` \u624d\u80fd\u4fdd\u8bc1 $x+y=S$\uff0c\u4f46\u662f\u8fd9\u4e00\u4f4d\u5f02\u6216\u5c31\u4e0d\u53ef\u80fd\u4e3a `0`\uff0c\u540c\u7406\uff0c\u5982\u679c\u5de6\u8fb9\u4e00\u4f4d\u4e3a $1$ \u65f6\u4e5f\u4e0d\u5408\u6cd5\uff0c\u6545 $S$ \u4e8c\u8fdb\u5236\u4e0b\u5982\u679c\u67d0\u4e00\u4f4d\u4e3a `0`\uff0c $x$ \u548c $y$ \u4e2d\u8be5\u4f4d\u4e5f\u53ea\u80fd\u4e3a `0`\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e $S$ \u7684\u6bcf\u4e00\u4f4d\uff0c\u5982\u679c\u4e3a `0`\uff0c\u90a3\u4e48 $x$ \u548c $y$ \u8fd9\u4e00\u4f4d\u53ea\u80fd\u4e3a `0`\uff0c\u5426\u5219 $x$ \u548c $y$ \u8fd9\u4e00\u4f4d\u53ea\u5b58\u5728\u4e00\u4e2a `1`\uff0c\u8bb0 $n$ \u4e3a $S$ \u4e8c\u8fdb\u5236\u4e0b `1` \u7684\u6570\u76ee\uff0c\u5bf9\u4e8e $x$ \u53ea\u6709\u8fd9\u4e00\u4f4d\u9009\u4e0d\u9009 `1` \uff0c\u6545\u8fd9\u6761\u659c\u7ebf\u4e0a\u7070\u8272\u683c\u5b50\u7684\u6570\u91cf\u6700\u5927\u503c\u4e3a $2^n$\u3002\n\n\u800c\u5f53\u6211\u4eec\u4ece $(0,y)$ \u8d70\u5230 $(x,y-x)$ \u65f6\uff0c\u6240\u4ee5\u8bf4\u5982\u679c\u8981\u6c42\u51fa\u9014\u4e2d\u7ecf\u8fc7\u7684\u7070\u8272\u683c\u5b50\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u5230\u4e00\u4e2a $x'$ \u6ee1\u8db3 $x' \\leq x$ \u4e14 $x'$ \u7684\u4e8c\u8fdb\u5236\u4e0b\u6bcf\u4e00\u4f4d `1` \u5728 $y$ \u4e2d\u8be5\u4f4d\u7f6e\u4e5f\u4e3a `1` \uff0c\u7136\u540e\u5c06 $x'$ \u7684\u4e8c\u8fdb\u5236\u4e0b\u548c $y$ \u540c\u65f6\u4e3a `0` \u7684\u4f4d\u7f6e\u53bb\u6389\uff0c\u6b64\u65f6\u5f97\u5230\u7684\u6570\u5b57\u5c31\u662f\u5728\u8303\u56f4\u5185\u4f60\u6bcf\u4e00\u4f4d\u9009\u62e9\u9009\u6216\u8005\u4e0d\u9009\u5f97\u5230\u7684\u7b54\u6848\u6570\uff0c\u5c06\u8fd9\u4e2a\u6570\u52a0\u4e0a\u4e00\uff0c\u4e5f\u5c31\u662f\u5168\u4e0d\u9009\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u8def\u5f84\u4e0a\u7070\u8272\u683c\u5b50\u7684\u6570\u76ee\u4e86\u3002\n\n```cpp\nint Fun(int y, int x) {\n    int num = 0, res = 1;\n    while (y) {  //\u627e\u5230y\u4e2d\u6bcf\u4e00\u4f4d1\u5e76\u8bb0\u5f55\u5bf9\u5e94\u7684\u503c\n        if (y & 1) {\n            Bit[num] = res;\n            num++;\n        }\n        y >>= 1;\n        res <<= 1;\n    }\n    int tmp = 0;  // tmp\u8bb0\u5f55\u683c\u5b50\u6570\n    for (int i = num - 1; i >= 0; --i) {\n        if (x - Bit[i] >= 0) {  //\u8fd9\u91cc\u53ef\u4ee5\u627e\u5230\u6700\u5927\u7684\u7070\u8272\u683c\u5b50\u4f4d\u7f6e\n            x -= Bit[i];\n            tmp = tmp | (1 << (i));  //\u56e0\u4e3a\u8bb0\u5f55\u4e86y\u4e2d\u6bcf\u4e00\u4f4d1\uff0c\u6240\u4ee5\u8bf4\u76f4\u63a5\u53ef\u4ee5\u6c42\u51fa\u6700\u7ec8\u7b54\u6848\u6570\n        }\n    }\n    ++tmp; //\u6700\u540e\u52a0\u4e0a\u5168\u4e0d\u9009\u7684\u7b54\u6848\n    return tmp;\n}\n```\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\u8def\u5f84\u4e0a\u6bcf\u4e00\u6761\u8d70\u6ee1\u7684\u659c\u7ebf\u4e0a\u7070\u8272\u683c\u5b50\u6570\uff0c\u5bf9\u4e8e\u6700\u540e\u53ef\u80fd\u8d70\u4e0d\u6ee1\u7684\u659c\u7ebf\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u6c42\u89e3\uff0c\u4e5f\u53ef\u4ee5\u505a\u5dee\u6c42\u89e3\u5373\u53ef\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nint Bit[128];\nint Fun(int y, int x) {\n    int num = 0, res = 1;\n    while (y) {  //\u627e\u5230y\u4e2d\u6bcf\u4e00\u4f4d1\u5e76\u8bb0\u5f55\u5bf9\u5e94\u7684\u503c\n        if (y & 1) {\n            Bit[num] = res;\n            num++;\n        }\n        y >>= 1;\n        res <<= 1;\n    }\n    int tmp = 0;  // tmp\u8bb0\u5f55\u683c\u5b50\u6570\n    for (int i = num - 1; i >= 0; --i) {\n        if (x - Bit[i] >= 0) {  //\u8fd9\u91cc\u53ef\u4ee5\u627e\u5230\u6700\u5927\u7684\u7070\u8272\u683c\u5b50\u4f4d\u7f6e\n            x -= Bit[i];\n            tmp = tmp | (1 << (i));  //\u56e0\u4e3a\u8bb0\u5f55\u4e86y\u4e2d\u6bcf\u4e00\u4f4d1\uff0c\u6240\u4ee5\u8bf4\u76f4\u63a5\u53ef\u4ee5\u6c42\u51fa\u6700\u7ec8\u7b54\u6848\u6570\n        }\n    }\n    ++tmp;  //\u6700\u540e\u52a0\u4e0a\u5168\u4e0d\u9009\u7684\u7b54\u6848\n    return tmp;\n}\nsigned main() {\n    int r, c, k;\n    int Now = 0;\n    int ans = 0;\n    bool dirt = true;\n    scanf(\"%lld %lld %lld\", &r, &c, &k);\n    if (c < r) {\n        swap(c, r);\n        dirt = false;\n    }\n    --r;\n    --c;\n    for (int i = 0; i <= c; ++i) {  //\u5206\u4e24\u90e8\u5206\u89e3\u51b3\uff0c\u7b2c\u4e00\u90e8\u5206\u662f\u4ece\u9876\u90e8\u5f00\u59cb\u7684\u659c\u7ebf\n        int step = min(r, i) + 1;\n        int cnt = Fun(i, min(r, i));\n        if (Now + step < k) {\n            Now += step;\n            ans += cnt;\n        } else {\n            if (dirt) {\n                int x = min(i, r);\n                int y = i - x;\n                while (Now < k) {\n                    if (x + y == (x ^ y))\n                        ++ans;\n                    x--;\n                    y++;\n                    ++Now;\n                }\n            } else {\n                int x = 0;\n                int y = i;\n                while (Now < k) {\n                    if (x + y == (x ^ y))\n                        ++ans;\n                    x++;\n                    y--;\n                    ++Now;\n                }\n            }\n            break;\n        }\n        dirt ^= 1;\n    }\n    if (Now == k) {\n        printf(\"%lld\\n\", ans);\n        return 0;\n    }\n    for (int i = 1; i <= r; ++i) {  //\u7b2c\u4e8c\u90e8\u5206\u662f\u4ece\u53f3\u4fa7\u5f00\u59cb\u7684\u659c\u7ebf\n        int step = r - i + 1;\n        int cnt = Fun(c + i, r) - Fun(c + i, i - 1);\n        if (Now + step < k) {\n            Now += step;\n            ans += cnt;\n        } else {\n            if (dirt) {\n                int x = r;\n                int y = c - (r - i);\n                while (Now < k) {\n                    if (x + y == (x ^ y))\n                        ++ans;\n                    x--;\n                    y++;\n                    ++Now;\n                }\n            } else {\n                int x = i;\n                int y = c;\n                while (Now < k) {\n                    if (x + y == (x ^ y))\n                        ++ans;\n                    x++;\n                    y--;\n                    ++Now;\n                }\n            }\n            break;\n        }\n        dirt ^= 1;\n    }\n    printf(\"%lld\\n\", ans);\n}\n```",
        "postTime": 1664594028,
        "uid": 138440,
        "name": "Bbaka",
        "ccfLevel": 0,
        "title": "[COCI2008-2009#1] JEZ \u9898\u89e3"
    }
]