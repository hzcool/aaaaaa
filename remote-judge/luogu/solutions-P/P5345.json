[
    {
        "content": "\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/LuoguP5345.html](https://www.cnblogs.com/PinkRabbit/p/LuoguP5345.html)\u3002\n\n\u5f88\u8363\u5e78\u4e3a [X Round 1](https://www.luogu.org/contestnew/show/16551) \u8d21\u732e\u4e86\u81ea\u5df1\u7684\u4e00\u9898\u3002\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a $n$ \u7ec4 $k_i,g_i,r_i$\uff08$0\\le k_i,r_i<g_i\\le 10^7$\uff09\u3002\n\n\u6c42\u5173\u4e8e $x$ \u7684\u65b9\u7a0b\u7ec4 $\\left\\{\\begin{matrix}k_1^x\\equiv r_1\\pmod{g_1}\\\\k_2^x\\equiv r_2\\pmod{g_2}\\\\\\vdots\\\\k_n^x\\equiv r_n\\pmod{g_n}\\end{matrix}\\right.$\uff08\u5b9a\u4e49 $0^0=1$\uff09\u5728 $[0,10^9]$ \u5185\u7684\u6700\u5c0f\u6574\u6570\u89e3\uff0c\u6216\u5224\u65ad\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u65e0\u89e3\u3002\n\n### \u9898\u89e3\uff1a\n\n\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u89e3\u51b3\u3002\n\n#### \u7b2c\u4e00\u90e8\u5206\uff1a\u5206\u522b\u6c42\u51fa\u6bcf\u4e2a\u65b9\u7a0b\u7684\u89e3\u3002\n\n\u9996\u5148\u89c2\u5bdf $k^j\\bmod g$ \u7684\u89c4\u5f8b\uff0c\u4ee5 $g=495616$\uff0c$k=124$ \u4e3a\u4f8b\uff1a\n\n\u5b9a\u4e49 $f(i)=ki\\bmod g$\uff0c\u5219\u628a\u6bcf\u4e2a\u5728 $[0,g)$ \u4e4b\u95f4\u7684\u6574\u6570\u770b\u4f5c\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u5f62\u6210\u4e86\u4e00\u4e2a\u57fa\u73af\u5185\u5411\u68ee\u6797\u3002\n\n\u4ece $1\\bmod g$ \u5f00\u59cb\u8d70\u552f\u4e00\u7684\u51fa\u8fb9\uff0c\u5fc5\u7136\u5f62\u6210\u4e00\u4e2a $\\rho$ \u5f62\u7ed3\u6784\uff0c\u8ba9\u6211\u4eec\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/58118.png)\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u51fa\u73b0\u4e86\u957f\u5ea6\u4e3a $5$ \u7684\u5faa\u73af\u3002\n\n1. \u5982\u679c $r=245760$\uff0c\u5219 $x\\equiv 7\\pmod{5}$\uff0c\u4e14 $x\\ge 7$\u3002\n\n2. \u5982\u679c $r=12544$\uff0c\u5219 $x=4$\u3002\n\n3. \u5982\u679c $r=2$\uff0c\u5219\u65e0\u89e3\u3002\n\n\u4ee5\u4e0a\u5c31\u662f\u6bcf\u4e2a\u65b9\u7a0b\u7684 $3$ \u79cd\u89e3\uff0c\u65e0\u9650\u89e3\uff0c\u552f\u4e00\u89e3\u6216\u65e0\u89e3\u3002\n\n\u90a3\u4e48\uff0c\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u533a\u5206\u8fd9 $3$ \u79cd\u89e3\uff0c\u4ee5\u53ca\u5982\u4f55\u6c42\u51fa\u89e3\u3002\n\n\u9996\u5148\uff0c\u9700\u8981\u5c06 $\\rho$ \u5f62\u7684\u201c\u5c3e\u5df4\u201d\u548c\u5faa\u73af\u5206\u5f00\u8003\u8651\uff0c\u4e0d\u96be\u8bc1\u660e\u201c\u5c3e\u5df4\u201d\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7 $\\log_2g$\u3002\n\n\u800c\u4e14\u53ef\u4ee5\u53d1\u73b0\uff0c\u82e5\u5728\u201c\u5c3e\u5df4\u201d\u4e0a\u627e\u5230\u4e86\u89e3\uff0c\u90a3\u4e48\u5c31\u53ea\u6709\u4e00\u7ec4\u89e3\u3002\u6240\u4ee5\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u503c\u662f\u5426\u5728\u5c3e\u5df4\u4e0a\u3002\n\n\u5176\u5b9e\u8fd9\u662f\u5f88\u7b80\u5355\u7684\uff0c\u5982\u679c $\\gcd(x,m)\\neq\\gcd(f(x),m)$\uff0c\u90a3\u4e48 $x$ \u5c31\u5728\u5c3e\u5df4\u4e0a\uff0c\u53cd\u4e4b\u5c31\u5728\u5faa\u73af\u5185\u3002\n\n\u636e\u6b64\uff0c\u6211\u4eec\u533a\u5206\u4e86\u5728\u201c\u5c3e\u5df4\u201d\u4e0a\u7684\u89e3\uff0c\u4e5f\u5c31\u662f\u53ea\u6709\u4e00\u7ec4\u89e3\u7684\u60c5\u51b5\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u4e0d\u5728\u201c\u5c3e\u5df4\u201d\u4e0a\u7684\u60c5\u51b5\u3002\n\n\u56e0\u4e3a\u89e3\u4e0d\u5728\u201c\u5c3e\u5df4\u201d\u4e0a\uff0c\u5219\u5982\u679c\u89e3\u4e0d\u5728\u5faa\u73af\u5185\u5c31\u662f\u65e0\u89e3\u4e86\uff0c\u6240\u4ee5\u9996\u5148\u5224\u65ad\u89e3\u662f\u5426\u5728\u5faa\u73af\u5185\u3002\n\n\u5047\u8bbe\u7b2c\u4e00\u4e2a\u5728\u5faa\u73af\u4e0a\u7684\u6570\u4e3a $c$\uff0c\u5c3e\u5df4\u957f\u5ea6\u4e3a $o$\uff0c\u5219\u6709 $c\\equiv k^o\\pmod{g}$\u3002\n\n\u4ee4 $d=\\gcd(c,g)$\uff0c\u5219\u539f\u65b9\u7a0b $k^x\\equiv r\\pmod{g}$ \u53ef\u5316\u4e3a $c\\cdot k^{x-o}\\equiv r\\pmod{g}$ \u4e14 $x\\ge o$\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5047\u5b9a\u89e3\u4e00\u5b9a\u5728\u5faa\u73af\u5185\u3002\n\n\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5316\u4e3a $k^{x-o}\\equiv\\frac{r}{d}\\left(\\frac{c}{d}\\right)^{-1}\\pmod{\\frac{g}{d}}$\uff0c\u82e5 $r$ \u4e0d\u662f $d$ \u7684\u500d\u6570\u5219\u65e0\u89e3\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\u5faa\u73af\u5185\u7684\u503c\u5747\u662f $d$ \u7684\u500d\u6570\uff0c\u53ef\u4ee5\u8ba9\u65b9\u7a0b\u540c\u9664 $d$\uff0c\u53c8\u56e0\u4e3a $\\frac{c}{d}\\perp\\frac{g}{d}$\uff0c\u53ef\u4ee5\u53d6\u9006\u5143\u3002\n\n\u4ee4 $a=k,b=\\frac{r}{d}\\left(\\frac{c}{d}\\right)^{-1},m=\\frac{g}{d}$\uff0c\u5219\u6709 $a\\perp m$\u3002\n\n\u4f7f\u7528 BSGS \u6c42\u51fa $a^y\\equiv b\\pmod{m}$ \u7684\u6700\u5c0f\u81ea\u7136\u6570\u89e3 $y$ \u540e\uff0c\u6709\u539f\u65b9\u7a0b\u7684\u6700\u5c0f\u81ea\u7136\u6570\u89e3\u4e3a $y+o$\u3002\n\n\u518d\u4f7f\u7528 BSGS \u6c42\u51fa $a^z\\equiv 1\\pmod{m}$ \u7684\u6700\u5c0f\u6b63\u6574\u6570\u89e3 $z$\uff0c\u5373 $a$ \u5bf9 $m$ \u7684\u9636\u3002\n\n\u5219\u539f\u65b9\u7a0b\u7684\u89e3\u4e3a $x\\equiv y+o\\pmod{z}$ \u4e14 $x\\ge y+o$\u3002\n\n\u81f3\u6b64\uff0c\u7b2c\u4e00\u90e8\u5206\u89e3\u51b3\u3002\n\n#### \u7b2c\u4e8c\u90e8\u5206\uff1a\u5408\u5e76\u6bcf\u4e2a\u65b9\u7a0b\u7684\u89e3\u3002\n\n\u9996\u5148\uff0c\u82e5\u524d\u9762\u7684\u65b9\u7a0b\u51fa\u73b0\u4e86\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u5219\u65b9\u7a0b\u7ec4\u4e5f\u65e0\u89e3\u3002\n\n\u82e5\u524d\u9762\u7684\u65b9\u7a0b\u51fa\u73b0\u4e86\u53ea\u6709\u552f\u4e00\u89e3\u7684\u60c5\u51b5\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u6b64\u552f\u4e00\u89e3\u662f\u5426\u6ee1\u8db3\u6240\u6709\u65b9\u7a0b\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8ba8\u8bba\u4ee5\u4e0a\u6bcf\u4e2a\u65b9\u7a0b\u7684\u89e3\u5747\u5f62\u5982 $x\\equiv r\\pmod{q}$ \u4e14 $x\\ge r$ \u7684\u5f62\u5f0f\u3002\n\n\u5206\u5f00\u8003\u8651\u524d\u534a\u90e8\u5206\u548c\u540e\u534a\u90e8\u5206\uff0c\u5bf9\u4e8e\u524d\u534a\u90e8\u5206\uff0c\u663e\u7136\u662f ExCRT \u7684\u5f62\u5f0f\u3002\n\n\u5bf9\u4e8e\u540e\u534a\u90e8\u5206\uff0c\u53ef\u4ee5\u5316\u4e3a $x\\ge\\max r_i$\uff0c\u4ee4 $\\max r_i=x_0$\uff0c\u653e\u5230\u6700\u540e\u8003\u8651\u3002\n\n\u8003\u8651\u4f7f\u7528 ExCRT \u89e3\u51b3\u524d\u534a\u90e8\u5206\uff0c\u4ee4\u524d $i$ \u4e2a\u65b9\u7a0b\u7ec4\u7684\u89e3\u4e3a $x\\equiv P_i\\pmod{Q_i}$\uff0c\u6709 $P_0=0,Q_0=1$\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f $P_i,Q_i$ \u53ef\u80fd\u5f88\u5927\uff0c\u4f46\u662f\u8fd9\u91cc\u5176\u5b9e\u6ca1\u5fc5\u8981\u4f7f\u7528\u9ad8\u7cbe\u5ea6\uff0c\u8981\u600e\u4e48\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u5462\uff1f\n\n\u56e0\u4e3a\u4ee5\u4e0a\u65b9\u7a0b\u7684\u89e3 $x\\equiv r\\pmod{q}$ \u4e2d\uff0c$q$ \u5747\u5c0f\u4e8e $10^7$\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u62c5\u5fc3\u8fd9\u90e8\u5206\u3002\n\n\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a$Q_{i-1}>10^9$\uff0c\u800c\u518d\u5408\u5e76\u8fdb $x\\equiv r_i\\pmod{q_i}$ \u53ef\u80fd\u4f1a\u8ba9 $Q_i$ \u8d85\u51fa `long long` \u80fd\u591f\u8868\u793a\u7684\u8303\u56f4\u3002\n\n\u8fd9\u65f6\u5176\u5b9e\u4e0d\u9700\u8981\u518d\u5408\u5e76\u4e86\uff0c\u53ea\u9700\u8981\u5224\u65ad $P_{i-1}$ \u662f\u5426\u6ee1\u8db3\u7b2c $i$ \u4e2a\u65b9\u7a0b\u5373\u53ef\u3002\u56e0\u4e3a\u82e5\u4e0d\u6ee1\u8db3\uff0c\u5408\u5e76\u540e $x$ \u5fc5\u7136\u4f1a\u81f3\u5c11\u589e\u52a0\u4e00\u500d\u7684 $Q_{i-1}$\uff0c\u8fd9\u5c31\u8d85\u51fa\u4e86 $10^9$ \u7684\u8303\u56f4\uff0c\u4ece\u800c\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u65e0\u89e3\u3002\n\n\u6700\u540e\uff0c\u5f53\u65b9\u7a0b\u6210\u529f\u5408\u5e76\u5b8c\u4e4b\u540e\uff0c$Q_n$ \u53ef\u80fd\u4e0d\u662f\u771f\u5b9e\u503c\uff0c\u4f46\u662f\u5f53 $Q_n\\le 10^9$ \u65f6\u5fc5\u7136\u662f\u771f\u5b9e\u503c\u3002\n\n\u6b64\u65f6\u53ef\u4ee5\u518d\u8003\u8651 $x_0$\uff0c\u771f\u5b9e\u7684\u89e3\u5e94\u8be5\u4e3a $x=\\left\\lceil\\frac{x_0-P_n}{Q_n}\\right\\rceil\\cdot Q_n+P_n$\u3002\n\n\u82e5 $Q_n> 10^9$\uff0c\u5219\u5fc5\u7136\u8981\u6ee1\u8db3 $P_n\\ge x_0$\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u636e\u6b64\u5199\u51fa\u4ee3\u7801\uff0c\u590d\u6742\u5ea6 $\\mathcal{O}\\left(\\sum_{i=1}^{n}\\left(\\sqrt{g_i}+\\log g_i\\right)\\right)$\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n\n#define Fail return puts(\"Impossible\"), 0\n#define mp std::make_pair\n\ntypedef long long LL;\ntypedef std::pair<int, int> pii;\nconst int MG = 10000005, MS = 3175;\nconst int U = 1e9;\n\nint gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\n\ntemplate<typename T>\nT exgcd(T a, T b, T &x, T &y) {\n\tif (!b) return x = 1, y = 0, a;\n\tint d = exgcd(b, a % b, y, x);\n\treturn y -= a / b * x, d;\n}\n\nint buk[MG], stk[MS];\ninline int BSGS(int a, int b, int m) {\n\tint S = sqrt(m - 1) + 1;\n\tint A = 1, f = -1, t = 0;\n\tfor (int i = 0; i < S; ++i) {\n\t\tbuk[stk[++t] = (LL)b * A % m] = i;\n\t\tA = (LL)A * a % m;\n\t}\n\tint C = 1;\n\tfor (int i = 1; !~f &&  i <= S; ++i)\n\t\tif (~buk[C = (LL)C * A % m])\n\t\t\tf = i * S - buk[C];\n\twhile (t) buk[stk[t--]] = -1;\n\treturn f;\n}\n\ninline pii ExBSGS(int a, int b, int m) {\n\tint o = 0, A = 1 % m, d = 1, nd, x, y;\n\twhile (1) {\n\t\tif (d == (nd = gcd((LL)A * a % m, m))) break;\n\t\tif (A == b) return mp(o, -1);\n\t\t++o, A = (LL)A * a % m, d = nd;\n\t}\n\tif (b % d) return mp(-1, -1);\n\tm /= d, b /= d, A /= d;\n\texgcd(A, m, x, y);\n\tb = (LL)b * (x + m) % m;\n\tx = BSGS(a, b, m);\n\tif (!~x) return mp(-1, -1);\n\ty = BSGS(a, 1 % m, m);\n\treturn mp(x % y + o, y);\n}\n\ninline bool Combine(LL &a1, LL &m1, LL a2, LL m2) {\n\tLL k1, k2, g = exgcd(m1, m2, k1, k2);\n\tif ((a2 - a1) % g) return 0;\n\ta1 += (k1 * ((a2 - a1) / g) % m2 + m2) * m1 % (m1 / g * m2);\n\treturn a1 %= m1 *= m2 / g, 1;\n}\n\nconst int MN = 1005;\n\nint N;\nint k[MN], r[MN], g[MN];\nint x[MN], q[MN], X, MaxX;\n\nint main() {\n\tmemset(buk, -1, sizeof buk), X = -1;\n\tscanf(\"%d\", &N);\n\tfor (int i = 1; i <= N; ++i) {\n\t\tscanf(\"%d%d%d\", &k[i], &g[i], &r[i]);\n\t\tpii ans = ExBSGS(k[i] % g[i], r[i] % g[i], g[i]);\n\t\tx[i] = ans.first, q[i] = ans.second;\n\t\tif (!~x[i]) Fail;\n\t\tif (!~q[i]) X = x[i];\n\t\tMaxX = std::max(MaxX, x[i]);\n\t}\n\tif (~X) {\n\t\tfor (int i = 1; i <= N; ++i) {\n\t\t\tif (~q[i] && (X < x[i] || (X - x[i]) % q[i])) Fail;\n\t\t\tif (!~q[i] && X != x[i]) Fail;\n\t\t}\n\t\treturn printf(\"%d\\n\", X), 0;\n\t}\n\tLL P = 0, Q = 1;\n\tfor (int i = 1; i <= N; ++i) {\n\t\tif (Q > U && (P - x[i]) % q[i]) Fail;\n\t\tif (Q <= U && !Combine(P, Q, x[i] % q[i], q[i])) Fail;\n\t}\n\tif (P < MaxX) P += ((MaxX - P - 1) / Q + 1) * Q;\n\tif (P > U) Fail;\n\tprintf(\"%lld\\n\", P);\n\treturn 0;\n}\n```",
        "postTime": 1557053590,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5345 \u3010\u3010XR-1\u3011\u5feb\u4e50\u80a5\u5b85\u3011"
    },
    {
        "content": "[P5345 \u3010XR-1\u3011\u5feb\u4e50\u80a5\u5b85](https://www.luogu.com.cn/problem/P5345)\n\n## Preface\n\n\u597d\u9898\uff01\uff01\uff01\n\n\u5f53\u7136\u4e5f\u5f88\u6bd2\u7624\u3002\n\n\u7a81\u7136\u611f\u5230\u5c60\u9f99\u52c7\u58eb\u5728\u8fd9\u9898\u9762\u524d\n\n\u5c31\u662f\u900a\u5185\uff01\uff01\uff01\n\n## Description\n\n\u7ed9\u5b9a\u9ad8\u6b21\u540c\u4f59\u65b9\u7a0b\u7ec4\n$$\n\\begin{cases}\nk_1^x\\equiv r_1\\pmod {g_1}\\\\\nk_2^x\\equiv r_2\\pmod {g_2}\\\\\n\\cdots\\\\\nk_n^x\\equiv r_n\\pmod {g_n}\n\\end{cases}\n$$\n\u8bf7\u6c42\u51fa\u8be5\u65b9\u7a0b\u7ec4\u7684\u6700\u5c0f **\u975e\u8d1f** \u6574\u6570\u89e3\uff0c\u82e5 **\u65e0\u89e3** \u6216 **\u6700\u5c0f\u89e3 $\\ge 10^9$**\uff0c\u8f93\u51fa `Impossible`\u3002\n\n- \u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c$1 \\le n \\le 10^3$\uff0c$1 \\le k_i, r_i \\le g_i \\le 10^7$\u3002\n\n## Solution\n\n**\u524d\u7f6e\u829d\u58eb\uff1a**\n\n- `exBSGS`\n- `exCRT`\n\n### \u4e00\u3001\u6c42\u51fa\u5355\u4e2a\u540c\u4f59\u65b9\u7a0b\u7684\u89e3\n\n\u5bf9\u4e8e $a^x\\bmod p$\uff0c\u7ed3\u679c\u5e94\u8be5\u5206\u4e3a\u4e00\u6bb5\u201c\u5c3e\u5df4\u201d\u548c\u4e00\u6bb5\u5faa\u73af\u90e8\u5206\uff0c\u4f8b\u5982 $124^x\\bmod 495616$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/58118.png)\n\n~~\u611f\u8c22\u5154\u961f\u7684\u56fe~~\n\n\u8fd9\u65f6\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570 $b$\uff0c$a^x\\equiv b\\pmod p$ \u7684\u89e3\u6709 $3$ \u79cd\u60c5\u51b5\uff1a\n\n- \u552f\u4e00\u89e3\uff1a\u5373 $x$ \u5728\u5c3e\u5df4\u4e0a\u3002\u4f8b\u5982 $b=15376$ \u65f6\uff0c$x=2$\u3002\n- \u65e0\u7a77\u89e3\uff1a\u5373 $x$ \u5728\u5faa\u73af\u4e0a\u3002\u4f8b\u5982 $b=241664$ \u65f6\uff0c$x\\equiv 3+5\\pmod 5$ \u4e14 $x\\ge 3+5$\uff0c\u5176\u4e2d $3$ \u8868\u793a $b$ \u662f\u5faa\u73af\u4e2d\u7684\u7b2c $3$ \u4e2a\uff0c$+5$ \u8868\u793a\u5c3e\u5df4\u7684\u957f\u5ea6\uff0c\u6a21\u6570\u4e3a $5$ \u8868\u793a\u5faa\u73af\u7684\u957f\u5ea6\uff0c\u4e0d\u7b49\u5f0f\u662f\u4e3a\u4e86\u4fdd\u8bc1 $x$ \u5728\u5faa\u73af\u4e0a\u3002\n- \u65e0\u89e3\uff1a\u4f8b\u5982 $b=114514$ \u65f6\u3002\n\n\u5728 `exBSGS` \u4e2d\uff0c\u9664\u5230 $\\gcd(a,p)=1$ \u65f6\uff0c\u5148\u7528 `BSGS` \u6c42\u51fa $a^x\\equiv b\\pmod p$ \u7684\u6700\u5c0f\u975e\u8d1f\u6574\u6570\u89e3\uff0c\u518d\u6c42\u51fa $a$ \u6a21 $p$ \u7684\u9636\uff08$\\gcd(a,p)=1$ \u65f6\u9636\u4e00\u5b9a\u5b58\u5728\uff09\uff0c\u90a3\u4e48\u9636\u5c31\u662f\u5faa\u73af\u957f\u5ea6\u3002\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u8fd4\u56de\u4e00\u4e2a $\\operatorname{pair}$\uff0c\u7b2c\u4e00\u4e2a\u6570\u8868\u793a\u6700\u5c0f\u89e3\uff08\u5982\u679c\u65e0\u89e3\u5219\u4e3a $-1$\uff09\uff0c\u7b2c\u4e8c\u4e2a\u6570\u8868\u793a\u9636\uff08\u5982\u679c\u4e0d\u5b58\u5728\u5219\u4e3a $-1$\uff09\u3002\n\n\u4e0e `exBSGS` \u6a21\u677f\u4e00\u6837\uff0c\u9700\u8981\u7279\u5224 $b=1$ \u6216 $p=1$ \u7684\u60c5\u51b5\u3002\n\n```cpp\npair<int, int> exBSGS(int a, int b, int p)\n{\n\tif (p == 1)\n\t{\n\t\treturn make_pair(0, 1);\n\t}\n\ta %= p, b %= p;\n\tint g = exgcd(a, p), f = 1, k = 0;\n\twhile (g > 1)\n\t{\n\t\tif (b % g)\n\t\t{\n\t\t\tif (b == 1)\n\t\t\t{\n\t\t\t\treturn make_pair(0, -1);\n\t\t\t}\n\t\t\treturn make_pair(-1, -1);\n\t\t}\n\t\tk++;\n\t\tb /= g, p /= g;\n\t\tf = (ll)f * (a / g) % p;\n\t\tg = exgcd(a, p);\n\t\tif (f == b)\n\t\t{\n\t\t\tif (g > 1)\n\t\t\t{\n\t\t\t\treturn make_pair(k, -1);\n\t\t\t}\n\t\t\tint y = BSGS(a, 1, p);\n\t\t\treturn make_pair(k, y);\n\t\t}\n\t}\n\tint x = BSGS(a, (ll)b * inv(f, p) % p, p);\n\tif (x == -1)\n\t{\n\t\treturn make_pair(-1, -1);\n\t}\n\tint y = BSGS(a, 1, p);\n\treturn make_pair(x % y + k, y);\n}\n```\n\n\u5728\u4e3b\u51fd\u6570\u4e2d\uff1a\n\n```cpp\npair<int, int> res = exBSGS(k, r, g);\nb[i] = res.first, a[i] = res.second;\nif (b[i] == -1) // x \u65e0\u89e3\u5c31\u80af\u5b9a\u65e0\u89e3\n{\n    puts(\"Impossible\");\n    return 0;\n}\nelse if (a[i] == -1) // \u9636\u4e0d\u5b58\u5728\uff0c\u7528\u4e00\u4e2a X \u8bb0\u5f55\u552f\u4e00\u7684\u89e3\n{\n    X = b[i];\n    continue;\n}\nmn = max(mn, b[i]); // x \u2265 mn\n```\n\n### \u4e8c\u3001\u5408\u5e76\u89e3\n\n\u5982\u679c\u51fa\u73b0\u4e86\u552f\u4e00\u89e3\uff08\u5373\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 $X\\ne -1$\uff09\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u5c06\u8fd9\u4e2a $X$ \u5e26\u5165\u5269\u4e0b\u7684\u65b9\u7a0b\u4e2d\u68c0\u9a8c\u5373\u53ef\u3002\n\n\u5426\u5219\u76f4\u63a5\u7528 `exCRT` \u5408\u5e76\u5373\u53ef\uff0c\u6ce8\u610f\u8981\u52a0\u4e0a $\\operatorname{lcm}(a_1,a_2,\\dots,a_n)$ \u7684\u500d\u6570\u4f7f\u5f97\u7b54\u6848\u4e0d\u5c0f\u4e8e\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 $mn$\u3002\n\n\u6211\u4eec\u8bbe\u524d $(i-1)$ \u4e2a\u65b9\u7a0b\u7ec4\u5408\u5e76\u540e\u7684\u89e3\u4e3a $x\\equiv B\\pmod A$\uff0c\u7b2c $i$ \u4e2a\u65b9\u7a0b\u4e3a $x\\equiv b\\pmod a$\u3002\n\n\u95ee\u9898\u6765\u4e86\uff0c $10^3$ \u4e2a $10^7$\uff0c\u5408\u5e76\u540e $A,B$ \u90fd\u6709\u53ef\u80fd\u7206 `long long`\u3002\n\n\u89c2\u5bdf\u9898\u76ee\u4e2d\u7684\u8981\u6c42\uff1a\n\n> \u82e5\u65e0\u89e3\u6216 **\u6700\u5c0f\u89e3 $\\ge 10^9$**\uff0c\u8f93\u51fa `Impossible`\u3002\n\n\u5f53 $A>10^9$ \u65f6\uff0c\u76f4\u63a5\u68c0\u6d4b $B$ \u662f\u5426\u6ee1\u8db3 $B\\equiv b\\pmod a$ \u5373\u53ef\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u90a3\u4e48\u4e00\u5b9a\u8981\u52a0\u4e0a\u82e5\u5e72\u4e2a $A$\uff0c\u90a3\u4e48\u4e00\u5b9a\u8d85\u8fc7\u4e86 $10^9$\uff0c\u4e0d\u6ee1\u8db3\u8981\u6c42\u3002\n\n\u5168\u90e8\u5408\u5e76\u5b8c\u4e4b\u540e\u8bb0\u5f97\u4e5f\u8981\u5224\u65ad $B$ \u662f\u5426\u5728 $10^9$ \u5185\u3002\n\n## Code\n\n```cpp\n//18 = 9 + 9 = 18.\n#include <iostream>\n#include <cstdio>\n#include <map>\n#include <cmath>\n#define Debug(x) cout << #x << \"=\" << x << endl\ntypedef long long ll;\nusing namespace std;\n\nll x, y;\n\nll exgcd(ll a, ll b)\n{\n\tif (!b)\n\t{\n\t\tx = 1, y = 0;\n\t\treturn a;\n\t}\n\tll Gcd = exgcd(b, a % b);\n\tll tmp = x;\n\tx = y;\n\ty = tmp - a / b * y;\n\treturn Gcd;\n}\n\nll A, B;\n\nint merge(ll a, ll b)\n{\n\tll Gcd = exgcd(A, a), c = B - b;\n\tif (c % Gcd)\n\t{\n\t\treturn -1;\n\t}\n\tc /= Gcd;\n\tx = (x * c % a + a) % a;\n\tll Lcm = A / Gcd * a;\n\tB = (B - A * x % Lcm + Lcm) % Lcm;\n\tA = Lcm;\n\treturn 1;\n}\n\nint div_ceil(int a, int b)\n{\n\treturn (a - 1) / b + 1;\n}\n\nconst int MAXN = 1e3 + 5;\nconst int D = 1e9;\n\nint a[MAXN], b[MAXN];\n\nint exCRT(int n, int mn)\n{\n\tA = a[1], B = b[1];\n\tfor (int i = 2; i <= n; i++)\n\t{\n\t\tif (A > D && (B - b[i]) % a[i])\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (A <= D && merge(a[i], b[i]) == -1)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t}\n\tif (B < mn)\n\t{\n\t\tB += div_ceil(mn - B, A) * A;\n\t}\n\tif (B > D)\n\t{\n\t\treturn -1;\n\t}\n\treturn B;\n}\n\nint inv(int a, int p)\n{\n\texgcd(a, p);\n\tx = (x % p + p) % p;\n\treturn x;\n}\n\nint phi(int p)\n{\n\tint ans = p;\n\tfor (int i = 2; i * i <= p; i++)\n\t{\n\t\tif (p % i == 0)\n\t\t{\n\t\t\tans = ans / i * (i - 1);\n\t\t\twhile (p % i == 0)\n\t\t\t{\n\t\t\t\tp /= i;\n\t\t\t}\n\t\t}\n\t}\n\tif (p != 1)\n\t{\n\t\tans = ans / p * (p - 1);\n\t}\n\treturn ans;\n}\n\nint BSGS(int a, int b, int p)\n{\n\tmap<int, int> hash;\n\tint t = ceil(sqrt(phi(p))), aj = 1;\n\tfor (int j = 0; j < t; j++)\n\t{\n\t\tint val = (ll)b * aj % p;\n\t\thash[val] = j;\n\t\taj = (ll)aj * a % p;\n\t}\n\ta = aj;\n\tint ai = 1;\n\tfor (int i = 1; i <= t; i++)\n\t{\n\t\tai = (ll)ai * a % p;\n\t\tif (hash.find(ai) != hash.end())\n\t\t{\n\t\t\tint j = hash[ai];\n\t\t\tif (i * t - j >= 0)\n\t\t\t{\n\t\t\t\treturn i * t - j;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\n\npair<int, int> exBSGS(int a, int b, int p)\n{\n\tif (p == 1)\n\t{\n\t\treturn make_pair(0, 1);\n\t}\n\ta %= p, b %= p;\n\tint g = exgcd(a, p), f = 1, k = 0;\n\twhile (g > 1)\n\t{\n\t\tif (b % g)\n\t\t{\n\t\t\tif (b == 1)\n\t\t\t{\n\t\t\t\treturn make_pair(0, -1);\n\t\t\t}\n\t\t\treturn make_pair(-1, -1);\n\t\t}\n\t\tk++;\n\t\tb /= g, p /= g;\n\t\tf = (ll)f * (a / g) % p;\n\t\tg = exgcd(a, p);\n\t\tif (f == b)\n\t\t{\n\t\t\tif (g > 1)\n\t\t\t{\n\t\t\t\treturn make_pair(k, -1);\n\t\t\t}\n\t\t\tint y = BSGS(a, 1, p);\n\t\t\treturn make_pair(k, y);\n\t\t}\n\t}\n\tint x = BSGS(a, (ll)b * inv(f, p) % p, p);\n\tif (x == -1)\n\t{\n\t\treturn make_pair(-1, -1);\n\t}\n\tint y = BSGS(a, 1, p);\n\treturn make_pair(x % y + k, y);\n}\n\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tint mn = 0, X = -1;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint k, g, r;\n\t\tscanf(\"%d%d%d\", &k, &g, &r);\n\t\tpair<int, int> res = exBSGS(k, r, g);\n\t\tb[i] = res.first, a[i] = res.second;\n\t\tif (b[i] == -1)\n\t\t{\n\t\t\tputs(\"Impossible\");\n\t\t\treturn 0;\n\t\t}\n\t\telse if (a[i] == -1)\n\t\t{\n\t\t\tX = b[i];\n\t\t\tcontinue;\n\t\t}\n\t\tmn = max(mn, b[i]);\n\t}\n\tif (X != -1)\n\t{\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tif ((a[i] == -1 && X != b[i]) || (a[i] != -1 && (X < b[i] || (X - b[i]) % a[i])))\n\t\t\t{\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", X);\n\t\treturn 0;\n\t}\n\tint ans = exCRT(n, mn);\n\tif (ans == -1)\n\t{\n\t\tputs(\"Impossible\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n## References\n\n- [1] \u5c0f\u7c89\u5154\uff1a[\u6d1b\u8c37 P5345: \u3010XR-1\u3011\u5feb\u4e50\u80a5\u5b85](https://www.cnblogs.com/PinkRabbit/p/LuoguP5345.html)\n\n",
        "postTime": 1639190063,
        "uid": 305532,
        "name": "mango09",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011Luogu-P5345 \u3010XR-1\u3011\u5feb\u4e50\u80a5\u5b85"
    },
    {
        "content": "## \u9898\u89e3\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u80a5\u5b85 $i$ \u8003\u8651\uff0c\u7b2c $m$ \u5929\u7684\u4f53\u91cd\u663e\u7136\u5e94\u8be5\u662f $k_i^m\\bmod g_i$\uff0c\u5bf9\u4e8e\u76ee\u6807\u4f53\u91cd $r_i$\uff0c\u4f1a\u5f97\u5230\u5982\u4e0b\u5f0f\u5b50\uff1a\n$$\nk_i^x\\equiv r_i\\pmod{g_i}\n$$\n\u6362\u4e2a\u663e\u7136\u7684\u5f62\u5f0f\uff1a\n$$\na^x\\equiv b\\pmod{p}\n$$\n\u6ce8\u610f\u5230\u8fd9\u91cc $p$ \u4e0d\u662f\u8d28\u6570\uff0c\u663e\u7136\u662f\u4e00\u4e2a exBSGS \u53ef\u4ee5\u6c42\u89e3\u7684\u95ee\u9898\u3002\n\n\u7136\u800c\u53ea\u6709\u4e00\u4e2a\u7279\u89e3 $u$ \u5e76\u4e0d\u80fd\u89e3\u51b3\u300c\u6709\u591a\u4e2a\u80a5\u5b85\uff0c\u6c42\u81f3\u5c11\u9700\u8981\u7ecf\u8fc7\u7684\u5929\u6570\u300d\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u5b83\u7684\u901a\u89e3\u3002\n\n\u5047\u8bbe\u73b0\u5728\u7528 exBSGS \u6c42\u51fa\u4e86\u4e00\u4e2a\u7279\u89e3 $u$\uff0c\u8bbe\u518d\u8fc7 $d$ \u5929\u53c8\u80fd\u7b26\u5408\u6761\u4ef6\u3002\n\n\u663e\u7136\u8fd9\u4e2a $d$ \u5c31\u662f\u6ee1\u8db3 $a^{u+d}\\equiv a^u\\pmod{p}$ \u7684\u6700\u5c0f\u6b63\u6574\u6570\u89e3\u3002\n\n\u770b\u8d77\u6765\u662f\u8981\u6c42 $a^d\\equiv1\\pmod{p}$ \u7684\u6700\u5c0f\u6b63\u6574\u6570\u89e3\u3002\n\n\u8fd9\u91cc\u5df2\u7ecf\u975e\u5e38\u663e\u7136\u4e86\uff0c\u6839\u636e[**\u9636**](http://oi-wiki.com/math/number-theory/primitive-root/#_2)\u6709\u5173\u7684\u77e5\u8bc6\uff0c\u5176\u5b9e\u5c31\u662f\u6c42 $\\delta_p(a)$\u3002\n\n\u6c42\u9636\u7684\u65b9\u5f0f\u4e5f\u5f88\u7b80\u5355\uff1a\n\n- \u82e5 $\\gcd(a,p)>1$ \u65f6\u65e0\u89e3\uff0c\u6b64\u65f6\u539f\u540c\u4f59\u65b9\u7a0b\u53ea\u6709\u4e00\u4e2a\u7279\u89e3 $u$\u3002\n- \u5426\u5219\u6709 $a^{\\varphi(p)}\\equiv1\\pmod{p}$\uff0c\u5fc5\u6709 $\\delta_p(a)\\mid\\varphi(p)$\uff0c\u5bf9 $\\varphi(p)$ \u4e0d\u65ad\u8bd5\u9664\u8d28\u56e0\u5b50\u5373\u53ef\u5f97\u5230 $\\delta_p(a)$\u3002\u539f\u540c\u4f59\u65b9\u7a0b\u7684\u901a\u89e3\u4e3a $x\\equiv u\\pmod{\\delta_p(a)}$\u3002\n\n\u5f53\u4f60\u8feb\u4e0d\u53ca\u5f85\u5730\u6c42\u51fa\u9636\u540e\uff0c\u4fbf\u5f00\u5fc3\u5730\u53d1\u73b0\u81ea\u5df1\u5728\u6837\u4f8b #4\uff08$a=14,b=44,p=60$\uff09WA \u4e86\u3002\n\n\u5b9e\u9645\u4e0a\u8981\u6c42\u7684\u5e76\u4e0d\u662f $\\delta_p(a)$\u3002\n\n\u770b\u4e0b\u539f\u76ee\u6807\uff1a$a^{u+d}\\equiv a^u\\pmod{p}$\uff0c\u5373 $a^db\\equiv b\\pmod{p}$\u3002\n\n\u6b64\u5904\u5e76\u6ca1\u6709\u8bf4 $b\\perp p$\uff0c$b^{-1}$ \u53ef\u80fd\u5e76\u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u6d88\u6389 $b$\u3002\n\n\u4e5f\u633a\u597d\u89e3\u51b3\u7684\uff0c\u8bb0 $t=\\gcd(p,b),p'=\\frac{p}{t}$\uff0c\u6709$a^d\\times\\frac{b}{t}\\equiv\\frac{b}{t}\\pmod{p'}$\uff0c\u6b64\u65f6 $\\frac{b}{t}\\perp p'$\uff0c\u53ef\u4ee5\u76f4\u63a5\u6d88\u6389\u3002\n\n\u6240\u4ee5\u8981\u6c42\u7684\u5e94\u8be5\u662f $\\delta_{p'}(a)$\u3002\n\n\u73b0\u5728\u53d8\u6210\u4e86\u6c42\u9636\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4\u4e86\uff08$g_i'=\\frac{g_i}{\\gcd(g_i,r_i)}$\uff0c\u5e94\u8be5\u633a\u663e\u7136\u7684\uff09\uff1a\n$$\n\\begin{cases}\nx&\\equiv& u_1\\pmod{\\delta_{g_1'}(k_1)}\\\\\nx&\\equiv& u_2\\pmod{\\delta_{g_2'}(k_2)}\\\\\n&\\vdots&\\\\\nx&\\equiv& u_n\\pmod{\\delta_{g_n'}(k_n)}\n\\end{cases}\n$$\n\u6b64\u5904\u663e\u7136\u4e5f\u4e0d\u4fdd\u8bc1\u6a21\u6570\u4e92\u8d28\uff0c\u9700\u8981\u4f7f\u7528 exCRT\u3002\n\n\u5f53\u4f60\u8feb\u4e0d\u53ca\u5f85\u5730\u6c42\u51fa\u7b54\u6848\u540e\uff0c\u53d1\u73b0\u81ea\u5df1\u53c8\u542c\u53d6 WA \u58f0\u4e00\u7247\uff1a\n\n![image.png](https://s2.loli.net/2022/02/24/sxBA2MmtRCHqDiX.png)\n\n**\u6b63\u786e\u64cd\u4f5c**\uff1a\u5f53\u53d1\u73b0\u8981\u505a CRT \u4e4b\u540e\uff0c\u7b2c\u4e00\u65f6\u95f4\u89c2\u5bdf $g_i$ \u7684 $\\operatorname{lcm}$ \u6027\u8d28\u3002\u53d1\u73b0\uff0c\u6ca1\u6709\u6027\u8d28\u3002~~\u4e0a\u9ad8\u7cbe~~\n\n\u5408\u5e76 $\\operatorname{lcm}$ \u662f\u505a\u4e0d\u4e86\u4e86\uff0c\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4e0d\u5408\u5e76\u3002\n\n\u5982\u679c\u6c42\u51fa\u4e86\u67d0\u4e2a\u7b54\u6848 $x$\uff0c\u53d1\u73b0\u5b83\u80fd\u7b26\u5408\u6240\u6709\u7684\u540c\u4f59\u65b9\u7a0b\uff0c\u8fd9\u65f6\u5019\u663e\u7136\u6ca1\u6709\u5fc5\u8981\u53bb\u53d6 $\\operatorname{lcm}$ \u4e86\u3002\n\n\u5047\u8bbe\u524d $k$ \u4e2a\u540c\u4f59\u65b9\u7a0b\u89e3\u51fa\u7684\u7b54\u6848\u662f $x\\equiv ans\\pmod{M}$\uff08$M>10^9$\uff09\uff0c\u6211\u4eec\u8003\u8651\u76f4\u63a5\u5c1d\u8bd5 $A$ \u80fd\u5426\u7b26\u5408\u7b2c $k+1$ \u4e2a\u65b9\u7a0b\u3002\u5982\u679c\u4e0d\u884c\u7684\u8bdd\uff0c\u663e\u7136\u8981\u5408\u5e76\u3002\n\n\u770b\u4e0b\u5982\u679c\u8981\u5408\u5e76\uff0cexCRT \u8001\u5e08\u4f1a\u53d1\u751f\u751a\u4e48\u4e8b\uff08\u4ee3\u7801\u6765\u81ea [exCRT \u6a21\u677f](https://www.luogu.com.cn/problem/P4777)\u7684\u67d0\u7bc7[\u9898\u89e3](https://www.luogu.com.cn/blog/_post/52490)\uff09\uff1a\n\n![image.png](https://s2.loli.net/2022/02/24/uIlmdZsrhoOSCcy.png)\n\n`ans += x*M`\uff01\u7b54\u6848\u76f4\u63a5\u52a0\u4e0a\u82e5\u5e72\u4e2a $M$\uff0c\u663e\u7136\u662f\u8d85\u8fc7 $10^9$ \u8303\u56f4\u4e86\uff0c\u6b64\u65f6\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u65e0\u89e3\u3002\n\n\u5f53\u7136\uff0c\u548c\u5c60\u9f99\u52c7\u58eb\u7c7b\u4f3c\uff0c\u672c\u9898\u7684\u6700\u7ec8\u7b54\u6848\u4e00\u5b9a\u8981\u5927\u4e8e $\\max\\{u_i\\}$\uff0c\u6700\u540e\u9700\u8981\u52a0\u4e00\u4e0b\u3002\n\n## CODE\n\n```cpp\n// Problem: P5345 \u3010XR-1\u3011\u5feb\u4e50\u80a5\u5b85\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P5345\n// Time: 2022-02-23 21:22\n// Memory Limit: 256 MB\n// Time Limit: 1000 ms\n// Author: lingfunny\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\nconst int mxn = 1e3+10, inf = 1e9;\n\nint n, a[mxn], p[mxn], b[mxn];\nLL legal[mxn], m[mxn], mx, A, M;\ninline int mul(int x, int y, int mod) { return (LL)x*y%mod; }\ninline int qpow(int x, int k, int mod) {\n\tint res = 1;\n\tx %= mod;\n\twhile(k) {\n\t\tif(k&1) res = mul(res, x, mod);\n\t\tx = mul(x, x, mod);\n\t\tk >>= 1;\n\t}\n\treturn res;\n}\n\nnamespace PHI {\n\tinline int phi(int x) {\n\t\tint res = 1;\n\t\tfor(int i = 2; i * i <= x; ++i) if(x % i == 0){\n\t\t\tint p = 1;\n\t\t\tx /= i;\n\t\t\twhile(x % i == 0) p *= i, x /= i;\n\t\t\tres *= p*(i-1);\n\t\t}\n\t\tif(x != 1) res *= x-1;\n\t\treturn res;\n\t}\n};\n\nnamespace BSGS {\n\tusing namespace PHI;\n\tint p;\n\tinline int mul(int x, int y) { return (LL)x*y%p; }\n\tinline int qpow(int x, int k) {\n\t\tint res = 1;\n\t\tx %= p;\n\t\twhile(k) {\n\t\t\tif(k&1) res = mul(res, x);\n\t\t\tx = mul(x, x);\n\t\t\tk >>= 1;\n\t\t}\n\t\treturn res;\n\t}\n\tinline int BSGS(int a, int b) {\n\t\ta %= p; b %= p;\n\t\tif(b == 1) return 0;\n\t\tif(p == 1) return a?0:1;\n\t\tint S = ceil(sqrt(p)), aps = 1, left;\n\t\tmap <int, int> mp;\n\t\t// \u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48 BSGS \u7528 map\n\t\t// \u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48 BSGS \u7528 map\n\t\t// \u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48 BSGS \u7528 map\n\t\tfor(int i = 0; i <= S; ++i) {\n\t\t\tmp[mul(aps, b)] = i;\n\t\t\tif(i != S) aps = mul(aps, a);\n\t\t}\n\t\tleft = aps;\n\t\tfor(int i = 1; i <= S; ++i) {\n\t\t\tif(mp.find(left) != mp.end()) return i*S-mp[left];\n\t\t\tleft = mul(left, aps);\n\t\t}\n\t\treturn -1;\n\t}\n\tinline int exBSGS(int a, int b, int P) {\n\t\tp = P;\n\t\ta %= P; b %= P;\n\t\tif(b == 1 || P == 1) return 0;\n\t\tint d, k = 0, dlt = 1;\n\t\twhile((d = __gcd(a, p)) > 1) {\n\t\t\tif(b%d) return -1;\n\t\t\tb /= d;\n\t\t\tp /= d;\n\t\t\tdlt = mul(dlt, a/d);\n\t\t\t++k;\n\t\t\tif(b == dlt) return k;\n\t\t}\n\t\tint res = BSGS(a, mul(b, qpow(dlt, phi(p)-1)));\n\t\treturn res<0?-1:res+k;\n\t}\n};\n\nnamespace JIE {\n\tusing namespace PHI;\n\tinline int GET(int m, int a) {\n\t\ta %= m;\n\t\tif(__gcd(m, a) > 1) return -1;\n\t\tif(a == 1) return 1;\n\t\tint res = phi(m), num = phi(m);\n\t\tfor(int i = 2; i * i <= num; ++i) if(num % i == 0) {\n\t\t\twhile(num % i == 0 && qpow(a, res/i, m) == 1) res /= i, num /= i;\n\t\t\twhile(num % i == 0) num /= i;\n\t\t}\n\t\tif(num > 1 && qpow(a, res/num, m) == 1) res /= num;\n\t\treturn res;\n\t}\n\tinline int findm(int a, int b, int p) {\n\t\tint d = __gcd(b, p);\n\t\tp /= d;\n\t\tif(__gcd(a, p) > 1) return 1e9+7;\n\t\treturn GET(p, a);\n\t}\n};\nnamespace CRT {\n\tvoid exgcd(LL a, LL b, LL& x, LL& y) {\n\t\tif(!b) return x = 1, y = 0, void();\n\t\texgcd(b, a%b, y, x); y -= a/b*x;\n\t}\n\tinline bool merge(LL& a1, LL& p1, LL a2, LL p2) {\n\t\t// printf(\"a1 = %lld, p1 = %lld, a2 = %lld, p2 = %lld\\n\", a1, p1, a2, p2);\n\t\tLL k1, k2, C = ((a2-a1)%p2+p2)%p2, D = __gcd(p1, p2);\n\t\t// printf(\"C = %lld, D = %lld\\n\", C, D);\n\t\tif(C % D) return false;\n\t\texgcd(p1, p2, k1, k2);\n\t\t// printf(\"k1 = %lld\\n\", k1);\n\t\tk1 = (k1%p2+p2)%p2;\n\t\ta1 += (k1 * (C/D) % p2) * p1 % (p2 / D * p1);\n\t\tp1*=p2/D;\n\t\ta1 %= p1;\n\t\treturn true;\n\t}\n}\n\nsigned main() {\n\t// int k = 1;\n\t// for(int i = 0; i <= 10000; ++i, k = mul(k, 14, 60)) printf(\"i = %d, %d = 1 (mod 60)\\n\", i, k);\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++i) scanf(\"%d%d%d\", &a[i], &p[i], &b[i]);\n\tfor(int i = 1; i <= n; ++i) {\n\t\tlegal[i] = BSGS::exBSGS(a[i], b[i], p[i]);\n\t\tmx = max(mx, legal[i]);\n\t\t// printf(\"legal[%d] = %lld\\n\", i, legal[i]);\n\t\t// if(qpow(a[i]%p[i], legal[i], p[i]) != b[i]%p[i]) puts(\"What the fuck!?\");\n\t\tif(legal[i] < 0) {\n\t\t\tputs(\"Impossible\");\n\t\t\treturn 0;\n\t\t}\n\n\t\tm[i] = JIE::findm(a[i], b[i], p[i]);\n\t\t// int oth = 1, delta = 1;\n\t\t// for(; ; ++oth) if(mul(delta = mul(delta, a[i], p[i]), b[i], p[i]) == b[i]%p[i]) break;\n\t\t// if(oth != m[i]) puts(\"What the fuck\");\n\t\t// printf(\"m[%d] = %lld\\n\", i, m[i]);\n\t}\n\tA = 0, M = 1;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tif(M <= inf) {\n\t\t\tif(!CRT::merge(A, M, legal[i], m[i])) {\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\tif(A%m[i] != legal[i]%m[i]) {\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\t// printf(\"mx = %lld, A = %lld\\n\", mx, A);\n\tif(A < mx) A += (mx-A+M-1)/M*M;\n\tif(A > inf) puts(\"Impossible\");\n\telse printf(\"%lld\\n\", A);\n\treturn 0;\n}\n```",
        "postTime": 1645679841,
        "uid": 280800,
        "name": "lingfunny",
        "ccfLevel": 7,
        "title": "P5345 \u5feb\u4e50\u80a5\u5b85 \u9898\u89e3"
    },
    {
        "content": "\u4e00\u4e2a\u590d\u6742\u5ea6\u8f83\u52a3\u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u8bb0 $M=10^9$\uff0c\u6211\u4eec\u5e0c\u671b\u6c42\u5f97 $x\\in[0,M]$ \u4e2d\u6700\u5c0f\u7684 $x$\uff0c\u4f7f\u5f97 $\\forall i\\in[1,n]$\uff0c\u6709 $k_i^x\\equiv r_i\\pmod {g_i}$\u3002\n\n\u6ce8\u610f\u5230\u5982\u679c\u6211\u4eec\u5355\u72ec\u6c42 BSGS\uff0c\u8981\u5408\u5e76\u7b54\u6848\u662f\u8f83\u4e3a\u56f0\u96be\u7684\uff0c\u4e8e\u662f\u8003\u8651\u5bf9\u6574\u4e2a\u5e8f\u5217\u4e00\u8d77\u505a BSGS\u3002\u5b9a\u4e49\u5e8f\u5217\u7684\u4e58\u6cd5\u4e3a\u5bf9\u5e94\u9879\u76f8\u4e58\u540e\u6bcf\u9879\u6a21 $g_i$\uff0c\u5219\u8981\u89e3\u65b9\u7a0b $k^x=r$\uff0c\u4f46\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u89e3\uff0c\u53ea\u9700\u8003\u8651 $x\\le M$ \u7684\u60c5\u51b5\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u8fd9\u4e2a\u533a\u95f4\u8fdb\u884c\u5206\u5757\uff0c\u76f4\u63a5\u8bb0 $B=\\left\\lfloor\\sqrt {M}\\right\\rfloor$\uff0c\u90a3\u4e48\u7c7b\u4f3c\u4e00\u822c\u7684 BSGS\uff0c\u6211\u4eec\u4ee4 $x=aB+c\\ (0\\le c\\lt B)$ \u5219 $k^{aB+c} = r\\implies k^c=rk^{-aB}$\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u679a\u4e3e $c\\in[0,B)$ \u9884\u5904\u7406\u51fa $k^c$\uff0c\u7136\u540e\u5b58\u5165 Hash \u8868 / Trie \u6811\uff0c\u679a\u4e3e\u6240\u6709 $a$\uff0c\u8ba1\u7b97\u51fa $rk^{-aB}$ \u7684 Hash \u503c\uff0c\u7136\u540e\u67e5\u4e00\u4e0b\u8868\u5c31\u597d\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8e\u6b64\u65f6\u53ef\u80fd $k^{-aB}$ \u662f\u4e0d\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ecd\u7136\u9700\u8981\u505a\u4e00\u4e2a\u7c7b\u4f3c exBSGS \u7684\u64cd\u4f5c\uff0c\u66f4\u5177\u4f53\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684 $K = \\left\\lfloor\\log_2 \\max g_i\\right\\rfloor$\uff0c\u6211\u4eec\u5047\u8bbe\u6c42\u89e3\u7684\u7b54\u6848\u5373\u4e3a\u6240\u6709 $x\\gt K$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6bcf\u4e2a $k_i^K$ \u548c $g_i$ \u63d0\u516c\u56e0\u5b50\u6d88\u6210 $k_i,g_i$ \u4e92\u8d28\uff0c\u7136\u540e\u9006\u5143\u5c31\u90fd\u5b58\u5728\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\sqrt M)$\u3002\n\n```cpp\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nconst int N = 5e5 + 5, P = 19260817, M = 1e9, K = 35;\n\nint Exgcd(int a, int b, int &x, int &y) {\n\tif(!b) return x = 1, y = 0, a;\n\tint g = Exgcd(b, a % b, y, x);\n\ty -= a / b * x;\n\treturn g;\n}\nint Inv(int a, int p) { int x, y; Exgcd(a, p, x, y); return (x % p + p) % p; }\nint Gcd(int a, int b) { return b ? Gcd(b, a % b) : a; }\n\nint n, B = sqrt(M), k[N], g[N], r[N], w[N], p[N];\nstd::unordered_map <ull, int> s;\null Hash(int a[]) {\n\tull res = 0;\n\tfor(int i = 1; i <= n; ++i)\n\t\tres = 1ULL * res * P + a[p[i]];\n\treturn res;\n}\n\nvoid Answer(int x) {\n\tif(x >= 0 && x <= M) printf(\"%d\\n\", x);\n\telse printf(\"Impossible\\n\");\n\texit(0);\n}\n\nint main() {\n\tsrand(time(0));\n\trd(n);\n\tfor(int i = 1; i <= n; ++i) p[i] = i;\n\tstd::random_shuffle(p + 1, p + n + 1);\n\tfor(int i = 1; i <= n; ++i) {\n\t\trd(k[i], g[i], r[i]);\n\t\tk[i] %= g[i]; r[i] %= g[i];\n\t\tw[i] = 1 % g[i];\n\t}\n\tull t = Hash(r);\n\tfor(int i = 0; i < K; ++i) {\n\t\tull cur = Hash(w);\n\t\tif(cur == t) Answer(i);\n\t\tfor(int j = 1; j <= n; ++j)\n\t\t\tw[j] = 1LL * w[j] * k[j] % g[j];\n\t}\n\tfor(int i = 0; i < K; ++i)\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tint d = Gcd(k[j], g[j]);\n\t\t\tif(r[j] % d != 0) Answer(-1);\n\t\t\tg[j] /= d; r[j] /= d;\n\t\t\tr[j] = 1LL * r[j] * Inv(k[j] / d, g[j]) % g[j];\n\t\t}\n\tfor(int i = 1; i <= n; ++i) w[i] = 1 % g[i];\n\tfor(int i = 0; i < B; ++i) {\n\t\tull cur = Hash(w);\n\t\tif(!s.count(cur)) s[cur] = i;\n\t\tfor(int j = 1; j <= n; ++j)\n\t\t\tw[j] = 1LL * w[j] * k[j] % g[j];\n\t}\n\tfor(int i = 1; i <= n; ++i)\n\t\tw[i] = Inv(w[i], g[i]);\n\tfor(int i = 0; i * B + K <= M; ++i) {\n\t\tull cur = Hash(r);\n\t\tif(s.count(cur)) Answer(i * B + K + s[cur]);\n\t\tfor(int j = 1; j <= n; ++j)\n\t\t\tr[j] = 1LL * r[j] * w[j] % g[j];\n\t}\n\tAnswer(-1);\n\treturn 0;\n}\n```",
        "postTime": 1643184416,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "P5345"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\n\nexBSGS, exCRT\n\n## \u5206\u6790\n\n\u4e00\u773c\u770b\u4e0a\u53bb\u8fd9\u9053\u9898\u633a\u677f\u5b50\u7684\uff0c\u4f46\u662f\u7ec6\u8282 **\u7279\u522b\u591a**\n\n\u9996\u5148\uff0c $k^t \\mod g$ \u662f\u4e00\u4e2a $\\rho$ \u5f62\uff0c\u6709\u4e2a\u9884\u5faa\u73af\u7684\u5c3e\u5df4\u548c\u5faa\u73af\u4f53\u3002\n\n\u5f15\u7528\u4e00\u4e0b\u5154\u961f\u7684\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/58118.png)\n\n\u6211\u4eec\u53ef\u4ee5\u7528 exBSGS \u627e\u5230\u7b2c\u4e00\u4e2a\u6b21\u6570\uff0c\u800c\u540e\u9762\u7684\u5faa\u73af\u4f53\u957f\u5ea6\u5219\u9700\u8981\u4fee\u6539 exBSGS \u6c42\u3002\u9996\u5148\uff0cexBSGS \u7684\u201c\u5c3e\u5df4\u201d\u662f\u4e0d\u5faa\u73af\u7684\uff0c\u5728 exBSGS \u7684 $b \\mod g \\ne 1$ \u7684\u60c5\u51b5\u4e0b\u5224\u65ad\u6709\u6ca1\u6709\u5faa\u73af\u8282\u3002\n\n\u63a5\u4e0b\u6765\u662f\u5224\u65ad\u6709\u6ca1\u6709\u5faa\u73af\u8282\u7684\u60c5\u51b5\u3002\u56e0\u4e3a\u8fd9\u65f6\u5e95\u6570\u548c\u6a21\u6570\u5df2\u7ecf\u88ab\u6211\u4eec\u9664\u5230\u4e92\u8d28\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u662f\u7528 BSGS \u6c42\u5faa\u73af\u8282\u957f\u5ea6\u4e86\u3002\n\nexBSGS \u4ee3\u7801:\n\n```cpp\nArray<lld> BSGS(int a, int b, int p) {\n\tif (p == 1) return Array<lld>({0, 1});\n\ta %= p, b %= p;\n\tlld g = gcd(a, p), f = 1, k = 0;\n\twhile (g > 1) {\n\t\tif (b % g) {\n\t\t\tif (b == 1) return Array<lld>({0, -1});\n\t\t\treturn Array<lld>({-1, -1});\n\t\t}\n\t\t++ k;\n\t\tb /= g, p /= g;\n\t\tf = (lld) f * (a / g) % p;\n\t\tg = gcd(a, p);\n\t\tif (f == b) {\n\t\t\tif (g > 1) return Array<lld>({k, -1});\n\t\t\tint y = _BSGS(a, 1, p);\n\t\t\treturn Array<lld>({k, y});\n\t\t}\n\t}\n\tlld x = _BSGS(a, b * inv(f, p) % p, p);\n\tif (x == -1) return Array<lld>({-1, -1});\n\tint y = _BSGS(a, 1, p);\n\treturn Array<lld>({x % y + k, y});\n}\n```\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4e00\u4e2a\u88f8\u7684 exCRT \u561b\uff0c\u4e0d\u8fc7\u6211\u8c03\u4e86\u5341\u5206\u4e45\uff08\u56e0\u4e3a\u6211\u7684\u5199\u6cd5\u548c\u522b\u4eba\u7684\u5199\u6cd5\u5b8c\u5168\u4e0d\u4e00\u6837\uff09\u3002\u63a5\u4e0b\u6765\u5c31\u53ea\u9700\u8981\u627e\u5230\u7b54\u6848\u53ef\u80fd\u8d85\u8fc7 $10^9$ \u7684\u5730\u65b9\u5373\u53ef\u3002\u770b\u8d77\u6765\u5341\u5206\u7b80\u5355\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u5728\u4e2d\u95f4\u7206 `long long`\uff0c\u6240\u4ee5\u8981\u7279\u5224\u5f53\u524d\u5468\u671f\u662f\u5426\u5927\u4e8e $10^9$\uff0c\u800c\u4e14\u9700\u8981\u52a0\u4e0a\u5468\u671f\u7684\u60c5\u51b5\u3002\u8fd9\u662f\u6211\u7684 exCRT \u4ee3\u7801\n\n```cpp\n\nArray<lld> CRT(Array<ModLinearFormula> arr) {\n\tif (!arr.size()) return Array<lld>({0, 1});\n\tlld x, y;\n\tlld nowmod = arr[1].p, ans = arr[1].a;\n\tlld a, b, c, g, bg;\n\tfor (int i = 2; i <= arr.size(); ++ i) {\n\t\tif (nowmod <= MX) {\n\t\t\ta = nowmod, b = arr[i].p, c = (arr[i].a - ans % b + b) % b;\n\t\t\tg = gcd(a, b);\n\t\t\tunpack(exgcd(a, b), {&x, &y});\n\t\t\tbg = b / g;\n\t\t\tif (c % g) return Array<lld>({-1, -1});\n\t\t\tx = c / g * x % bg;\n\t\t\tans += x * nowmod;\n\t\t\tif (ans > MX) return Array<lld>({-1, -1});\n\t\t\tnowmod *= bg;\n\t\t\tans %= nowmod;\n\t\t}\n\t}\n\treturn Array<lld>({(ans + nowmod) % nowmod, nowmod });\n}\n```\n\n\n\u6700\u540e\uff0c\u7528\u5728\u4e00\u8d77\u65f6\u522b\u5fd8\u4e86\u6709\u4e00\u4e2a\u65b9\u7a0b\u89e3\u5728\u201c\u5c3e\u5df4\u201d\u4e0a\u7684\u60c5\u51b5\uff0c\u518d\u7279\u5224\u4e00\u4e0b\u3002\u8fd8\u6709\u4e00\u4e2a\u65b9\u7a0b\u89e3\u5728\u5faa\u73af\u4e0a\u65f6\uff0c\u522b\u5fd8\u4e86\u628a\u7b54\u6848\u52a0\u5230\u201c\u5c3e\u5df4\u201d\u957f\u5ea6\u4ee5\u4e0a\u7684\u60c5\u51b5\u3002\n\n\u606d\u559c\u4f60\u505a\u51fa\u4e86\u6211\u5199\u4e86\u4e09\u5929\u7684\u9898\uff01\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h> \n#define lld long long\nusing namespace std;\nconst lld MX = 1e9;\ntemplate<class T> struct Array { vector<T> vec; Array() { } Array(int n) { vec.resize(n); } Array(initializer_list<T> ini) { vec = vector<T>(ini); } T & operator[](int t) { return vec[t - 1]; } int size() const { return vec.size(); } void resize(int n) { vec.resize(n); } void push(T x) { vec.push_back(x); } };\ntemplate<class T> void unpack(Array<T> arr, initializer_list<T*> args) { for (int i = 0; i < args.size(); ++ i) **(args.begin() + i) = arr[i + 1]; }\nnamespace Maths {\n\tlld gcd(lld x, lld y) { return y ? gcd(y, x % y) : x; }\n\tArray<lld> exgcd(lld x, lld y) { if (!y) return Array<lld>({1, 0}); Array<lld> t(2); lld a, b; unpack(exgcd(y, x % y), {&a, &b}); t[1] = b; t[2] = a - (x / y) * b; return t; }\n\tlld qpow(lld a, lld b, lld p) { lld ret = 1; for (; b; b >>= 1, a = a * a % p) if (b & 1) ret = ret * a % p; return ret; }\n\tstruct ModLinearFormula { lld a, p; };\n\tArray<lld> CRT(Array<ModLinearFormula> arr) {\n\t\tif (!arr.size()) return Array<lld>({0, 1});\n\t\tlld x, y;\n\t\tlld nowmod = arr[1].p, ans = arr[1].a;\n\t\tlld a, b, c, g, bg;\n\t\tfor (int i = 2; i <= arr.size(); ++ i) {\n\t\t\tif (nowmod <= MX) {\n\t\t\t\ta = nowmod, b = arr[i].p, c = (arr[i].a - ans % b + b) % b;\n\t\t\t\tg = gcd(a, b);\n\t\t\t\tunpack(exgcd(a, b), {&x, &y});\n\t\t\t\tbg = b / g;\n\t\t\t\tif (c % g) return Array<lld>({-1, -1});\n\t\t\t\tx = c / g * x % bg;\n\t\t\t\tans += x * nowmod;\n\t\t\t\tif (ans > MX) return Array<lld>({-1, -1});\n\t\t\t\tnowmod *= bg;\n\t\t\t\tans %= nowmod;\n\t\t\t}\n\t\t}\n\t\treturn Array<lld>({(ans + nowmod) % nowmod, nowmod });\n\t}\n\tlld phi(lld n) {\n\t\tlld ret = n;\n\t\tif (!(n & 1)) {\n\t\t\tret >>= 1;\n\t\t\twhile (!(n & 1)) n >>= 1;\n\t\t}\n\t\tfor (lld i = 3; i * i <= n; i += 2) \n\t\t\tif (n % i == 0) {\n\t\t\t\tret = ret / i * (i - 1);\n\t\t\t\tn /= i;\n\t\t\t\twhile (n % i == 0) n /= i;\n\t\t\t}\n\t\tif (n > 1) ret = ret / n * (n - 1);\n\t\treturn ret;\n\t}\n\tlld inv(lld x, lld n) {\n\t\tlld a;\n\t\tunpack(exgcd(x, n), {&a});\n\t\treturn (a % n + n) % n;\n\t}\n\tlld _BSGS(lld a, lld b, lld p) {\n\t\tmap<lld, lld> _hash;\n\t\tlld t = ceil(sqrt(phi(p))), aj = 1;\n\t\tfor (lld j = 0; j < t; ++ j) {\n\t\t\tlld val = b * aj % p;\n\t\t\t_hash[val] = j;\n\t\t\taj = aj * a % p;\n\t\t}\n\t\ta = aj;\n\t\tlld ai = 1;\n\t\tfor (lld i = 1; i <= t; ++ i) {\n\t\t\tai = ai * a % p;\n\t\t\tif (_hash.find(ai) != _hash.end()) {\n\t\t\t\tlld j = _hash[ai];\n\t\t\t\tif (i * t - j >= 0) return i * t - j;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tArray<lld> BSGS(int a, int b, int p) {\n\t\tif (p == 1) return Array<lld>({0, 1});\n\t\ta %= p, b %= p;\n\t\tlld g = gcd(a, p), f = 1, k = 0;\n\t\twhile (g > 1) {\n\t\t\tif (b % g) {\n\t\t\t\tif (b == 1) return Array<lld>({0, -1});\n\t\t\t\treturn Array<lld>({-1, -1});\n\t\t\t}\n\t\t\t++ k;\n\t\t\tb /= g, p /= g;\n\t\t\tf = (lld) f * (a / g) % p;\n\t\t\tg = gcd(a, p);\n\t\t\tif (f == b) {\n\t\t\t\tif (g > 1) return Array<lld>({k, -1});\n\t\t\t\tint y = _BSGS(a, 1, p);\n\t\t\t\treturn Array<lld>({k, y});\n\t\t\t}\n\t\t}\n\t\tlld x = _BSGS(a, b * inv(f, p) % p, p);\n\t\tif (x == -1) return Array<lld>({-1, -1});\n\t\tint y = _BSGS(a, 1, p);\n\t\treturn Array<lld>({x % y + k, y});\n\t}\n}\nusing namespace Maths;\nint n;\nlld k[1010], g[1010], r[1010];\nlld p[1010], d[1010];\nArray<ModLinearFormula> formula;\nint main() {\n\tscanf(\"%d\", &n);\n\tlld X = -1;\n\tlld mn = 0;\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%lld%lld%lld\", k + i, g + i, r + i);\n\t\tunpack(BSGS(k[i], r[i], g[i]), {p + i, d + i});\n\t\tif (p[i] == -1) {\n\t\t\tputs(\"Impossible\");\n\t\t\treturn 0;\n\t\t} else if (d[i] == -1) {\n\t\t\tX = p[i];\n\t\t\tcontinue;\n\t\t}\n\t\tmn = max(mn, p[i]);\n\t\tformula.push((ModLinearFormula){p[i], d[i]});\n\t}\n\tif (X >= 0) {\n\t\tfor (int i = 1; i <= n; ++ i)\n\t\t\tif ((d[i] == -1 && X != p[i]) || (d[i] != -1 && (X < p[i] || (X - p[i]) % d[i]))) {\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\tprintf(\"%d\\n\", X);\n\t\treturn 0;\n\t}\n\tlld ret, len;\n\tunpack(CRT(formula), {&ret, &len});\n\tif (ret == -1) {\n\t\tputs(\"Impossible\");\n\t\treturn 0;\n\t}\n\tret = (ret % len + len) % len;\n\tret += (mn - ret + len - 1) / len * len;\n\tif (ret > MX) {\n\t\tputs(\"Impossible\");\n\t\treturn 0;\n\t}\n\tprintf(\"%lld\\n\", ret);\n}\n```",
        "postTime": 1639737405,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "P5345 \u3010XR-1\u3011\u5feb\u4e50\u80a5\u5b85 \u9898\u89e3"
    },
    {
        "content": "\uff08\u5154\u961f\u7684\u9898\u89e3\u5ba1\u6838\u597d\u4e25\u8c28\u554a\uff09\n\n\u7ed9\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u89e3\u6cd5\u3002\n\n\u9996\u5148\u95ee\u9898\u53ef\u5316\u7b80\u4e3a\uff08\u8fd9\u4e00\u6b65\u4e0d\u4e25\u8c28\uff0c\u56e0\u4e3a\u82e5\u4f53\u91cd\u4e3a $g_i$ \u5219\u4e0d\u4f1a\u51cf\u6210 $0$\uff0c\u4e0d\u8fc7\u597d\u50cf\u53ef\u4ee5\u5ffd\u7565\uff0c\u56e0\u4e3a\u80fd AC\uff09\n$$\nk_i^{x}\\equiv r_i\\pmod{g_i}\\quad(1\\leq i\\leq n)\n$$\n\u6c42\u6700\u5c0f\u7684\u89e3 $x$\u3002\n\n\u5f88\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684\u65b9\u7a0b\n$$\nk_i^{x}\\equiv r_i\\pmod{g_i}\n$$\n\u5176\u53ea\u6709\u4e09\u79cd\u60c5\u51b5\uff0c\u8981\u4e48\u53ea\u6709\u4e00\u4e2a\u89e3\uff0c\u8981\u4e48\u6709\u65e0\u9650\u7684\u5468\u671f\u89e3\uff0c\u5426\u5219\u65e0\u89e3\u3002\n\n\u82e5\u67d0\u7279\u5b9a\u65b9\u7a0b\u65e0\u89e3\uff0c\u90a3\u6574\u4e2a\u95ee\u9898\u80af\u5b9a\u4e5f\u65e0\u89e3\uff0c\u8f93\u51fa ```Impossible``` \u5c31\u884c\u4e86\u3002\n\n\u82e5\u67d0\u7279\u5b9a\u65b9\u7a0b\u6709\u552f\u4e00\u89e3\uff0c\u90a3\u4e48\u5224\u65ad\u8fd9\u4e2a\u552f\u4e00\u89e3\u662f\u5426\u6ee1\u8db3\u6240\u6709\u65b9\u7a0b\uff0c\u82e5\u4e0d\u6ee1\u8db3\u5219\u8bf4\u660e\u65e0\u89e3\uff0c\u8f93\u51fa ```Impossible``` \u5c31\u884c\u4e86\uff0c\u5426\u5219\u8fd9\u4e2a\u552f\u4e00\u89e3\u5c31\u662f\u6240\u6709\u65b9\u7a0b\u7684\u89e3\uff0c\u76f4\u63a5\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u6240\u4ee5\u4e0d\u59a8\u5047\u8bbe\u6240\u6709\u65b9\u7a0b\u5747\u6709\u65e0\u9650\u7684\u5468\u671f\u89e3\uff0c\u8bbe\u7b2c $i$ \u4e2a\u65b9\u7a0b\u6700\u5c0f\u7684\u89e3\u4e3a $s_i$\uff0c\u6b21\u5c0f\u7684\u89e3\u4e3a $t_i$\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u89e3\u65b9\u7a0b\u7ec4\n$$\nx\\equiv s_i\\pmod{(t_i-s_i)}\n$$\n\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u7528\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u89e3\u51b3\uff0c\u82e5\u5728\u7528\u6269\u5c55\u4e2d\u56fd\u5b9a\u7406\u6c42\u89e3\u65b9\u7a0b\u7b54\u6848\u65f6\u53d1\u73b0\u76ee\u524d\u7684\u89e3\u5df2\u7ecf\u5927\u4e8e $10^9$ \u5219\u8f93\u51fa ```Impossible```\uff08\u6ce8\u610f\u4e0d\u662f $(t_i-s_i)$ \u7684 $\\text{LCM}$ \u5927\u4e8e $1000000009$ \u5c31\u8f93\u51fa ```Impossible```\uff0c\u56e0\u4e3a\u5373\u4fbf\u51fa\u73b0\u4e86\u8fd9\u79cd\u60c5\u51b5\u4e5f\u53ef\u80fd\u6709\u89e3\u3002\n\n\u8bbe $mxs=\\max\\{t_i-s_i\\}$\uff0c$lcm=\\text{LCM}(t_i-s_i)$\uff0c\u5e76\u5047\u8bbe\u73b0\u5728\u5df2\u7ecf\u901a\u8fc7\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u6c42\u51fa\u4e86\u4e00\u4e2a\u89e3 $x_0$\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u5224\u65ad\u4e00\u4e0b $x_0$ \u662f\u5426\u5927\u4e8e $mxs$\u3002\n\n\u82e5 $x_0\\geq mxs$\uff0c\u5219\u8bf4\u660e $x_0$ \u662f\u539f\u95ee\u9898\u7684\u89e3\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n\u82e5 $x_0<mxs$ \uff08\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u5f62\u662f $(t_i-s_i)\\leq s_i$\uff09\uff0c\u663e\u7136\u8981\u91cd\u65b0\u6574\u7406\u4e00\u4e0b\u7b54\u6848\uff0c\u5373\u53d6\u7b54\u6848\u4e3a $(\\lfloor(mxs-x_0-1)/lcm\\rfloor\\cdot lcm + x_0)$\uff0c\u8fd9\u6837\u7b54\u6848\u5c31\u662f\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6240\u6709\u65b9\u7a0b\u4e14\u5927\u4e8e\u7b49\u4e8e $mxs$ \u7684\u89e3\u4e86\uff0c\u5f53\u7136\u82e5 $lcm > 10^9$ \u5219\u8bf4\u660e\u65e0\u89e3\u3002\n\n\n\n\u6240\u4ee5\u95ee\u9898\u7684\u5173\u952e\u662f\u5728\u6709\u65e0\u9650\u5468\u671f\u89e3\u7684\u60c5\u51b5\u4e0b\u5982\u4f55\u5feb\u901f\u7684\u5bf9\u6bcf\u4e2a\u65b9\u7a0b $k_i^{x}\\equiv r_i\\pmod{g_i}$ \u6c42\u51fa\u6700\u5c0f\u89e3 $s_i$ \u4e0e\u6b21\u5c0f\u89e3 $t_i$\uff0c\u8003\u8651\u5bf9 $\\text{BSGS}$ \u7b97\u6cd5\u548c $\\text{exBSGS}$ \u7b97\u6cd5\u8fdb\u884c\u6539\u9020\u4f7f\u5176\u80fd\u540c\u65f6\u6c42\u51fa\u6700\u5c0f\u89e3\u548c\u6b21\u5c0f\u89e3\u3002\n\n\u5148\u8003\u8651\u5bf9 $\\text{BSGS}$ \u7b97\u6cd5\u6539\u9020\u3002\n\n\u8fd9\u5341\u5206\u7b80\u5355\uff0c\u5f00\u4e24\u4e2a ```unordered_map``` \u5c31\u80fd\u5f88\u8f7b\u677e\u7684\u89e3\u51b3\u3002\n\n```cpp\n#define re register\n#define ll long long\nvoid bsgs(re int a, re int b, re int p, re int &a1, re int &a2){\n\ta1 = a2 = -1; if (b == 1) a1 = 0;\n\tunordered_map<int, int> mp1, mp2; re int t = sqrt(2*p+0.5)+1, at = 1;\n\ta %= p; b %= p;\n\tfor(re int i = 0; i < t; ++i){\n\t\tif (mp1.count(b)) mp2[b] = mp1[b], mp1[b] = i;\n\t\telse mp1[b] = i;\n\t\tb = (ll)b*a%p, at = (ll)at*a%p;\n\t}\n\ta = at;\n\tfor(re int i = 1; i <= t; ++i){\n\t\tif (mp1.count(a)){\n\t\t\tif (a1 != -1){ a2 = i*t-mp1[a]; return; }\n\t\t\telse{\n\t\t\t\ta1 = i*t-mp1[a];\n\t\t\t\tif (mp2.count(a)){ a2 = i*t-mp2[a]; return; }\n\t\t\t}\n\t\t}\n\t\ta = (ll)a*at%p;\n\t}\n}\n```\n\n\u5176\u4e2d $a1$ \u88c5\u7684\u662f\u6700\u5c0f\u89e3\uff0c $a2$ \u88c5\u7684\u662f\u6b21\u5c0f\u89e3\uff0c\u82e5\u6b21\u5c0f\u89e3\u4e0d\u5b58\u5728\u5219 $a2=-1$\uff0c\u82e5\u6700\u5c0f\u89e3\u4e0d\u5b58\u5728\u5219 $a1=-1$\u3002\n\n\u7136\u540e\u662f\u5bf9 $\\text{exBSGS}$ \u7b97\u6cd5\u7684\u6539\u9020\u3002\n\n\u663e\u7136\u5728 $\\gcd(a,p)\\neq 1$ \u65f6\u7684\u5faa\u73af\u4e2d\u82e5\u53d1\u73b0\u65b9\u7a0b\u5de6\u53f3\u4e24\u8fb9\u76f8\u7b49\u4e86\u5219\u4e0d\u80fd\u50cf\u666e\u901a\u7684 $\\text{exBSGS}$ \u4e00\u6837\u5c31\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u4e86\uff0c\u8fd8\u8981\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u89e3\uff0c\u5e76\u6839\u636e\u6b64\u5224\u65ad\u662f\u5426\u8981\u7ee7\u7eed\u5faa\u73af\u3002\n\n```cpp\nll mul(re ll a, re ll b, re ll m){ return ((a*b-(ll)((long double)a*b/m)*m)%m+m)%m; }\nll gcd(re ll a, re ll b){ while(b) a%=b, a^=b^=a^=b; return a; }\nvoid exgcd(ll a, ll b, ll &g, ll &x, ll &y){\n\tif (!b) g = a, x = 1, y = 0;\n\telse exgcd(b, a%b, g, y, x), y -= x*(a/b);\n}\nvoid exbsgs(re int a, re int b, re int p, re int &a1, re int &a2){\n\tif (gcd(a, p) == 1) return bsgs(a, b, p, a1, a2);\n\ta1 = a2 = -1; if (b == 1) a1 = 0;\n\ta %= p; b %= p;\n\tre int g, k = 0, d = 1;\n\twhile((g = gcd(a, p)) != 1){\n\t\tif (b % g) return;\n\t\tp /= g; b /= g; ++k; d = (ll)d*(a/g)%p;\n\t\tif (d == b){\n\t\t\tif (a1 != -1){ a2 = k; return; }\n\t\t\ta1 = k;\n\t\t}\n\t}\n\tre int t1, t2;\n\tbsgs(a, (ll)b*get_inv(d, p)%p, p, t1, t2);\n\tif (a1 != -1){\n\t\ta2 = t1>=0?t1+k:-1;\n\t\tif (a2 == a1) a2 = t2>=0?t2+k:-1;\n\t}\n\telse a1 = t1>=0?t1+k:-1, a2 = t2>=0?t2+k:-1;\n}\n```\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u3002\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <iostream>\n#include <assert.h>\n#include <unordered_map>\n#include <cmath>\nusing namespace std;\n\n#define re register\n#define sf scanf\n#define pf printf\n#define nl() putchar('\\n')\n#define ms(x, val) memset(x, val, sizeof(x))\n#define ll long long\n#define _for(i, a, b) for(re int (i) = (a); (i) < (b); ++(i))\n#define _rfor(i, a, b) for(re int (i) = (a); (i) <= (b); ++(i))\n#define _fev(p, u) for(re int (p) = head[(u)]; (p); (p) = nex[(p)])\n#define inf 0x7fffffff\n#define maxn 1005\n#define cut 1000000000\n\ntemplate <class T>\nvoid print(string name, T arr[], int n, int flag = 1){\n\tcout<<name<<\":\";\n\t_for(i, 0, n)cout<<\" \"<<arr[i+flag];\n\tcout<<endl;\n}\n\nint rdnt(){\n\tre int x = 0, sign = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') sign = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (c ^ 48), c = getchar();\n\treturn x * sign;\n}\n\nint fp(re int x, re int n, re int p){\n\tre int y = 1%p;\n\tfor(; n; x = (ll)x*x%p, n >>= 1) if (n&1) y = (ll)x*y%p;\n\treturn y;\n}\n\nll mul(re ll a, re ll b, re ll m){ return ((a*b-(ll)((long double)a*b/m)*m)%m+m)%m; }\nll gcd(re ll a, re ll b){ while(b) a%=b, a^=b^=a^=b; return a; }\nvoid exgcd(ll a, ll b, ll &g, ll &x, ll &y){\n\tif (!b) g = a, x = 1, y = 0;\n\telse exgcd(b, a%b, g, y, x), y -= x*(a/b);\n}\nll get_inv(re ll a, re ll p){\n\tre ll g, x, y;\n\texgcd(a, p, g, x, y);\n\tif (g != 1) assert(false);\n\n\treturn (x%p+p)%p;\n}\n\nstruct exCRT{\n\tll a[maxn], m[maxn];\n\tll solve(re int n){\n\t\tre ll M = 1, x = 0, g, mm;\n\t\t_rfor(i, 1, n){\n\t\t\tif (x % m[i] == a[i]%m[i]){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ta[i] %= m[i];\n\t\t\tg = gcd(M, m[i]); mm = M/g*m[i];\n\t\t\tif (mm < M) return -1;\n\t\t\tif ((x-a[i])%g) return -1;\n\t\t\tx = (mul(mul(get_inv(m[i]/g, M/g), m[i], mm), (x>=a[i]?x-a[i]:mm-a[i]+x)/g, mm)+a[i])%mm;\n\t\t\tif (x > cut){ return -1; }\n\t\t\tM = mm;\n\t\t}\n\t\treturn x;\n\t}\n} crt;\n\nvoid bsgs(re int a, re int b, re int p, re int &a1, re int &a2){\n\ta1 = a2 = -1; if (b == 1) a1 = 0;\n\tunordered_map<int, int> mp1, mp2; re int t = sqrt(2*p+0.5)+1, at = 1;\n\ta %= p; b %= p;\n\t_for(i, 0, t){\n\t\tif (mp1.count(b)) mp2[b] = mp1[b], mp1[b] = i;\n\t\telse mp1[b] = i;\n\t\tb = (ll)b*a%p, at = (ll)at*a%p;\n\t}\n\ta = at;\n\t_rfor(i, 1, t){\n\t\tif (mp1.count(a)){\n\t\t\tif (a1 != -1){ a2 = i*t-mp1[a]; return; }\n\t\t\telse{\n\t\t\t\ta1 = i*t-mp1[a];\n\t\t\t\tif (mp2.count(a)){ a2 = i*t-mp2[a]; return; }\n\t\t\t}\n\t\t}\n\t\ta = (ll)a*at%p;\n\t}\n}\n\nvoid exbsgs(re int a, re int b, re int p, re int &a1, re int &a2){\n\tif (gcd(a, p) == 1) return bsgs(a, b, p, a1, a2);\n\ta1 = a2 = -1; if (b == 1) a1 = 0;\n\ta %= p; b %= p;\n\tre int g, k = 0, d = 1;\n\twhile((g = gcd(a, p)) != 1){\n\t\tif (b % g) return;\n\t\tp /= g; b /= g; ++k; d = (ll)d*(a/g)%p;\n\t\tif (d == b){\n\t\t\tif (a1 != -1){ a2 = k; return; }\n\t\t\ta1 = k;\n\t\t}\n\t}\n\tre int t1, t2;\n\tbsgs(a, (ll)b*get_inv(d, p)%p, p, t1, t2);\n\tif (a1 != -1){\n\t\ta2 = t1>=0?t1+k:-1;\n\t\tif (a2 == a1) a2 = t2>=0?t2+k:-1;\n\t}\n\telse a1 = t1>=0?t1+k:-1, a2 = t2>=0?t2+k:-1;\n}\n\nint k[maxn], g[maxn], r[maxn], s[maxn], t[maxn];\n\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"sample.in\", \"r\", stdin);\n\tfreopen(\"sample.out\", \"w\", stdout);\n\t#endif\n\t\n\tre int n = rdnt();\n\t_rfor(i, 1, n){\n\t\tk[i] = rdnt(), g[i] = rdnt(), r[i] = rdnt();\n\t\texbsgs(k[i], r[i], g[i], s[i], t[i]);\n\t\tif (s[i] != -1){\n\t\t\tassert(fp(k[i], s[i], g[i]) == r[i]%g[i]);\n\t\t}\n\t\tif (t[i] != -1){\n\t\t\tassert(s[i] != -1);\n\t\t\tassert(s[i] != t[i]); assert(s[i] < t[i]);\n\t\t\tassert(fp(k[i], t[i], g[i]) == r[i]%g[i]);\n\t\t}\n\t}\n\tre int mxt = 0, mxs = 0;\n\t_rfor(i, 1, n) mxt = max(mxt, t[i]), mxs = max(mxs, s[i]);\n\tre ll lcm = 1; re bool flag = false;\n\t_rfor(i, 1, n){\n\t\tif (s[i] == -1 && t[i] == -1){ pf(\"Impossible\\n\"); return 0; }\n\t\tif (t[i] == -1){\n\t\t\t_rfor(j, 1, n){\n\t\t\t\tif (fp(k[j], s[i], g[j]) != r[j]%g[j]){ pf(\"Impossible\\n\"); return 0; }\n\t\t\t}\n\t\t\tpf(\"%d\\n\", s[i]); return 0;\n\t\t}\n\t\tcrt.a[i] = s[i]; crt.m[i] = t[i]-s[i];\n\t\tlcm = lcm/gcd(lcm, t[i]-s[i])*(t[i]-s[i]);\n\t\tif (lcm >= (ll)cut*cut) flag = true;\n\t}\n\tre int as = crt.solve(n);\n\tif (as == -1){ pf(\"Impossible\\n\"); return 0; }\n\tif (as < mxs){\n\t\tif (!flag) as = ((mxs-as-1)/lcm+1)*lcm+as;\n\t\telse as = -1;\n\t}\n\tif (as != -1) pf(\"%d\\n\", as);\n\telse pf(\"Impossible\\n\");\n\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1639060051,
        "uid": 474113,
        "name": "MoYuFang",
        "ccfLevel": 7,
        "title": "\u3010P5345 \u3010XR-1\u3011\u5feb\u4e50\u80a5\u5b85\u3011\u9898\u89e3"
    }
]