[
    {
        "content": "[$$\\Large\\texttt{My Blog}$$](https://hydingsy.github.io/)\n\n---\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[Luogu 4011](https://www.luogu.org/problemnew/show/P4011)\n\n1944 \u5e74\uff0c\u7279\u79cd\u5175\u9ea6\u514b\u63a5\u5230\u56fd\u9632\u90e8\u7684\u547d\u4ee4\uff0c\u8981\u6c42\u7acb\u5373\u8d76\u8d74\u592a\u5e73\u6d0b\u4e0a\u7684\u4e00\u4e2a\u5b64\u5c9b\uff0c\u8425\u6551\u88ab\u654c\u519b\u4fd8\u864f\u7684\u5927\u5175\u745e\u6069\u3002\u745e\u6069\u88ab\u5173\u62bc\u5728\u4e00\u4e2a\u8ff7\u5bab\u91cc\uff0c\u8ff7\u5bab\u5730\u5f62\u590d\u6742\uff0c\u4f46\u5e78\u597d\u9ea6\u514b\u5f97\u5230\u4e86\u8ff7\u5bab\u7684\u5730\u5f62\u56fe\u3002\u8ff7\u5bab\u7684\u5916\u5f62\u662f\u4e00\u4e2a\u957f\u65b9\u5f62\uff0c\u5176\u5357\u5317\u65b9\u5411\u88ab\u5212\u5206\u4e3a $N$ \u884c\uff0c\u4e1c\u897f\u65b9\u5411\u88ab\u5212\u5206\u4e3a $M$ \u5217\uff0c\u4e8e\u662f\u6574\u4e2a\u8ff7\u5bab\u88ab\u5212\u5206\u4e3a $N\\times M$ \u4e2a\u5355\u5143\u3002\u6bcf\u4e00\u4e2a\u5355\u5143\u7684\u4f4d\u7f6e\u53ef\u7528\u4e00\u4e2a\u6709\u5e8f\u6570\u5bf9\uff08\u5355\u5143\u7684\u884c\u53f7\uff0c\u5355\u5143\u7684\u5217\u53f7\uff09\u6765\u8868\u793a\u3002\u5357\u5317\u6216\u4e1c\u897f\u65b9\u5411\u76f8\u90bb\u7684 $2$ \u4e2a\u5355\u5143\u4e4b\u95f4\u53ef\u80fd\u4e92\u901a\uff0c\u4e5f\u53ef\u80fd\u6709\u4e00\u6247\u9501\u7740\u7684\u95e8\uff0c\u6216\u8005\u662f\u4e00\u5835\u4e0d\u53ef\u903e\u8d8a\u7684\u5899\u3002\u8ff7\u5bab\u4e2d\u6709\u4e00\u4e9b\u5355\u5143\u5b58\u653e\u7740\u94a5\u5319\uff0c\u5e76\u4e14\u6240\u6709\u7684\u95e8\u88ab\u5206\u6210 $P$ \u7c7b\uff0c\u6253\u5f00\u540c\u4e00\u7c7b\u7684\u95e8\u7684\u94a5\u5319\u76f8\u540c\uff0c\u4e0d\u540c\u7c7b\u95e8\u7684\u94a5\u5319\u4e0d\u540c\u3002\n\n\u5927\u5175\u745e\u6069\u88ab\u5173\u62bc\u5728\u8ff7\u5bab\u7684\u4e1c\u5357\u89d2\uff0c\u5373 $(N,M)$ \u5355\u5143\u91cc\uff0c\u5e76\u5df2\u7ecf\u660f\u8ff7\u3002\u8ff7\u5bab\u53ea\u6709\u4e00\u4e2a\u5165\u53e3\uff0c\u5728\u897f\u5317\u89d2\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u9ea6\u514b\u53ef\u4ee5\u76f4\u63a5\u8fdb\u5165 $(1,1)$ \u5355\u5143\u3002\u53e6\u5916\uff0c\u9ea6\u514b\u4ece\u4e00\u4e2a\u5355\u5143\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u76f8\u90bb\u5355\u5143\u7684\u65f6\u95f4\u4e3a $1$\uff0c\u62ff\u53d6\u6240\u5728\u5355\u5143\u7684\u94a5\u5319\u7684\u65f6\u95f4\u4ee5\u53ca\u7528\u94a5\u5319\u5f00\u95e8\u7684\u65f6\u95f4\u53ef\u5ffd\u7565\u4e0d\u8ba1\u3002\n\n\u8bd5\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5e2e\u52a9\u9ea6\u514b\u4ee5\u6700\u5feb\u7684\u65b9\u5f0f\u5230\u8fbe\u745e\u6069\u6240\u5728\u5355\u5143\uff0c\u8425\u6551\u5927\u5175\u745e\u6069\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le N,M,P\\le 10$\n\n------\n\n## Solution\n\n\u7531\u4e8e\u6bcf\u6b21\u79fb\u52a8\u7684\u4ee3\u4ef7\u90fd\u662f $1$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651 $\\texttt{01BFS}$\uff1b\u53c8\u56e0\u4e3a $P$ \u7684\u8303\u56f4\u5f88\u5c0f\uff0c\u53ef\u4ee5\u5bf9 $P$ \u8fdb\u884c\u72b6\u538b\uff0c\u8bb0 $cost(i,j,k)$ \u8868\u793a\u5230 $(i,j)$ \u62e5\u6709\u7684\u94a5\u5319\u96c6\u5408\u4e3a $k$ \u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u7ef4\u62a4 $i,j,k$ \u8fdb\u884c $\\texttt{01BFS}$\uff0c\u4e00\u65e6\u6709\u89e3\u76f4\u63a5\u8fd4\u56de\uff0c\u9700\u8981\u5224\u65ad\u65e0\u89e3\u60c5\u51b5\u3002\n\n\u6ce8\u610f\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u653e\u7f6e\u591a\u4e2a\u94a5\u5319\uff0c\u94a5\u5319\u4f7f\u7528\u540e\u8fd8\u662f\u5b58\u5728\u7684\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a$O(NM\\cdot 2^P)$\n\n------\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n\nconst int N=12;\nconst int dx[]={1,-1,0,0},dy[]={0,0,1,-1};\nint n,m,e[N][N][N][N],cnt[N][N],key[N][N][N];\nbool vis[N][N][1<<14];\nstruct node {\n    int x,y,k,d;\n    node() {x=y=k=d=0;}\n    node(int _x,int _y,int _k,int _d) {\n        x=_x,y=_y,k=_k,d=_d;\n    }\n};\n\nint getkey(int x,int y) {\n    int ans=0;\n    for(int i=1;i<=cnt[x][y];++i) ans|=(1<<(key[x][y][i]-1));\n    return ans;\n}\nint bfs(int sx,int sy) {\n    std::queue<node> q;\n    int sk=getkey(sx,sy);\n    q.push(node(sx,sy,sk,0)),vis[sx][sy][sk]=1;\n    while(!q.empty()) {\n        node u=q.front(); q.pop();\n        if(u.x==n&&u.y==m) return u.d;\n        int ux=u.x,uy=u.y;\n        for(int i=0;i<4;++i) {\n            int vx=ux+dx[i],vy=uy+dy[i],opt=e[ux][uy][vx][vy];\n            if(vx<1||vx>n||vy<1||vy>m||opt<0||(opt&&!(u.k&(1<<(opt-1))))) continue;\n            int nxt=u.k|getkey(vx,vy);\n            if(vis[vx][vy][nxt]) continue;\n            q.push(node(vx,vy,nxt,u.d+1)),vis[vx][vy][nxt]=1;\n        }\n    }\n    return -1;\n}\nint main() {\n    int k,s;\n    scanf(\"%d%d%*d\",&n,&m);\n    for(scanf(\"%d\",&k);k--;) {\n        int x1,y1,x2,y2,g;\n        scanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&g);\n        if(g) e[x1][y1][x2][y2]=e[x2][y2][x1][y1]=g;\n        else e[x1][y1][x2][y2]=e[x2][y2][x1][y1]=-1;\n    }\n    for(scanf(\"%d\",&s);s--;) {\n        int x,y,q;\n        scanf(\"%d%d%d\",&x,&y,&q);\n        key[x][y][++cnt[x][y]]=q;\n    }\n    printf(\"%d\\n\",bfs(1,1));\n    return 0;\n}\n```\n\n",
        "postTime": 1545045134,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "\u7c7b\u578b\uff1a\u72b6\u538b+BFS\n\n\u4e0d\u662f\u7f51\u7edc\u6d41\uff08\u6ed1\u7a3d\n\n\u5f88\u660e\u663e\u662f\u4e2a\u72b6\u538b\u561b\u3002\n\n\u6211\u4eec\u72b6\u6001\u538b\u7f29\u94a5\u5319\u3002\n\n$vis[x][y][S]$ \u8868\u793a\u5728x y\u8fd9\u4e2a\u4f4d\u7f6e\u6301\u6709\u94a5\u5319\u72b6\u6001\u4e3aS\u662f\u5426\u6765\u8fc7\n\nBFS\u961f\u5217\u91cc\u5b584\u4e2a\u53d8\u91cf\n\n\u5206\u522b\u4e3a\u5f53\u524d\u6a2a\u7eb5\u5750\u6807\uff0c\u6b65\u6570\u4ee5\u53ca\u94a5\u5319\u72b6\u6001\n\nmap[x1][y1][x2][y2]\u8868\u793a\u4e24\u4e2a\u70b9\u76f4\u63a5\u662f\u5426\u6709\u5899\u6216\u8005\u662f\u95e8\u3002\n\npas[x][y][i]\u8868\u793ax y\u8fd9\u4e2a\u70b9\u653e\u7684\u94a5\u5319\u7684\u79cd\u7c7b\n\nnum[x][y]\u8868\u793a\u5f53\u524d\u70b9\u94a5\u5319\u6570\u76ee\n\n\u5751\u70b9\uff1a\n\n1.\u94a5\u5319\u4e0d\u662f\u7528\u4e86\u5c31\u6ca1\u4e86\uff08(#`O\u2032)\u5582\uff0c\u6ca1\u4e86\u624d\u6709\u95ee\u9898\u5427\n\n2.\u4e00\u4e2a\u70b9\u53ef\u4ee5\u653e\u591a\u4e2a\u94a5\u5319\uff08\u4eba\u5bb6\u53c8\u6ca1\u8bf4\u53ea\u653e\u4e00\u4e2a\u3002\n\n3.\u521d\u59cb\u70b9\u53ef\u4ee5\u653e\u94a5\u5319\n\n4.\u522b\u5fd8\u4e86\u8f93\u51fa-1....\n\n~~\u867d\u7136\u6211\u53ea\u88ab2\u5751\u4e86~~\n\nCODE\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4011)\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <queue> \n#define il inline \nusing namespace std;\nbool vis[11][11][(1<<11)];\nint map[11][11][11][11];\nint pas[11][11][11],num[11][11];\nstruct node{\n    int x,y,step,cos;\n}; \nqueue <node> dl;\nint n,m,p,k;\nint dx[]={0,1,-1,0,0},dy[]={0,0,0,1,-1};\nil int BFS()\n{\n    int nows=0;\n    for(int i=1;i<=num[1][1];i++)\n     nows|=(1<<(pas[1][1][i]-1));\n    vis[1][1][nows]=1;\n    dl.push((node){1,1,0,nows});\n    while(!dl.empty())\n    {\n        node now=dl.front();\n        dl.pop();\n        if(now.x==n&&now.y==m)\n         return now.step; \n        for(int i=1;i<=4;i++) \n         {\n           int xx=now.x+dx[i],yy=now.y+dy[i],t;\n           if(xx<1||yy<1||xx>n||yy>m) continue;\n           if(map[now.x][now.y][xx][yy]==-1) continue;\n           if((t=map[now.x][now.y][xx][yy])!=0)\n            if((now.cos&(1<<(t-1)))==0) continue;\n           int cosx=now.cos;\n           for(int j=1;j<=num[xx][yy];j++)\n            cosx|=(1<<(pas[xx][yy][j]-1));\n           if(vis[xx][yy][cosx]) continue;\n           vis[xx][yy][cosx]=1;\n           dl.push((node){xx,yy,now.step+1,cosx});\n         }\n    }\n    return -1;\n}\nint main()\n{\n    //freopen(\"rescue.in\",\"r\",stdin);\n    //freopen(\"rescue.out\",\"w\",stdout);\n    scanf(\"%d%d%d%d\",&n,&m,&p,&k);\n    for(int i=1;i<=k;i++)\n    {\n        int x1,x2,y1,y2,g;\n        scanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&g);\n        if(g==0) map[x1][y1][x2][y2]=map[x2][y2][x1][y1]=-1;\n        else map[x1][y1][x2][y2]=map[x2][y2][x1][y1]=g;\n    }\n    int s;\n    scanf(\"%d\",&s);\n    for(int i=1;i<=s;i++)\n    {\n        int x,y,p;\n        scanf(\"%d%d%d\",&x,&y,&p);\n        pas[x][y][++num[x][y]]=p;\n    }\n    printf(\"%d\\n\",BFS());\n    return 0;\n} \n```",
        "postTime": 1515550856,
        "uid": 19842,
        "name": "\u534a\u4ed9\u80e1\u5c0f\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "\uff08DIJSKRAL\u5e94\u8be5\u4e5f\u80fd\u505a\uff09\n\u672c\u9898\u5229\u7528\u5206\u5c42\u56fe\u5efa\u7acb\u6a21\u578b\uff0c\u82e5\u6ca1\u6709\u94a5\u5319\u548c\u95e8\uff0c\u53ef\u76f4\u63a5\u7528\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u89e3\n\n------------\n\u4f46\u6709\u4e86\u95e8\u7684\u56e0\u7d20\uff0c\u53ef\u5efa\u7acb2\u7684p\u6b21\u65b9\u5c42\uff08\u5171\u6709p\u79cd\u94a5\u5319\uff0c\u6bcf\u79cd\u94a5\u5319\u6709\u6709\u4e0e\u6ca1\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u5171\u8ba12\u7684p\u6b21\u65b9\uff09\u3002\n\n------------\n# \u5bf9\u4e8e\u5206\u5c42\u56fe\u8fde\u8fb9\n\n------------\n\u518d\u540c\u4e00\u5c42\u4e2d\uff0c\u5728\u76f8\u90bb\u4e24\u70b9\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\uff08\u53cc\u5411\uff09\uff0c\u82e5\u8be5\u70b9\u6709\u4e00\u628ak\u79cd\u94a5\u5319\uff0c\u5219\u5728\u8be5\u70b9\u4e0e\u6709\u7b2ck\u79cd\u94a5\u5319\u72b6\u6001\u7684\u90a3\u4e00\u5c42\u8fde\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\uff0c\u7136\u540eBFS\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint to,next,w;\n}a[1000000];\nstruct typekey{\n\tint x,y;\n}key[15][20];\nint n,M,tot=0,row,line,keyn;\nint layer,r,num[20][20];\nint fg[200][200],kn[15],frist[102405],dis[102405];\nint q[1000000],inf=1e9;\nbool vst[102405];\ninline void scan()\n{\n\tint i,j,x,y,p,k=0;\n\tscanf(\"%d %d %d %d\",&row,&line,&keyn,&r);\n\tfor(i=1;i<=row;i++)\n\t{\n\t\tfor(j=1;j<=line;j++)\n\t\tnum[i][j]=++k;         //\u7f16\u53f7\n\t}\n\tfor(i=1;i<=r;i++)\n\t{\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tj=num[x][y];\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tk=num[x][y];\n\t\tscanf(\"%d\",&p);\n\t\tif(p==0) p=-1;            //\u8868\u793a\u56f4\u5899\n\t\tfg[j][k]=fg[k][j]=p;\n\t}\n\tscanf(\"%d\",&r);\n\tfor(i=1;i<=r;i++)\n\t{\n\t\tscanf(\"%d %d %d\",&x,&y,&p);\n\t\tkn[p]++;\n\t\tkey[p][kn[p]].x=x;      //key[p][kn[p]]\u4e3a\u7b2cp\u7c7b\u94a5\u5319\u7684\u7b2ckn[p]\u628a\u6240\u5728\u7684\u4f4d\u7f6e\n\t\tkey[p][kn[p]].y=y;\n\t}\n}\ninline void add_edge( int x,int y,int w)\n{\n\ttot++;\n\ta[tot].to=y;\n\ta[tot].w=w;\n\ta[tot].next=frist[x];\n\tfrist[x]=tot;\n\t\n}\ninline void process()\n{\n\tint i,j,k,x,y,t;\n\tbool havekey[15]={0};\n\tM=row*line;         //\u6bcf\u5c42\u8282\u70b9\u6570\n\tlayer=1<<keyn;     //\u5171\u6709layer\u5c42\u6570 \n\tn=M*layer;           //\u603b\u8282\u70b9\u6570\n\tfor(k=0;k<layer;k++)         //\u5bf9\u6bcf\u5c42\u5904\u7406\n\t{\n\t\tfor(i=1;i<=keyn;i++)\n\t\tif(k&(1<<(i-1))) havekey[i]=true;\n\t\telse havekey[i]=false;\n\t\tfor(i=1;i<=row;i++)         //\u5728\u672c\u5c42\u8fde\u8fb9\n\t\t{\n\t\t\tfor(j=1;j<=line;j++)\n\t\t\t{\n\t\t\t\tx=num[i][j];\n\t\t\t\ty=num[i][j+1];       //\u5411\u53f3\u8fde\u63a5\n\t\t\t\tif(y!=0&&fg[x][y]!=-1)   //\u6709\u8282\u70b9\u4e14\u4e24\u70b9\u95f4\u65e0\u5899\n\t\t\t\t{\n\t\t\t\t\tif(fg[x][y]==0||havekey[fg[x][y]])\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_edge(k*M+x,k*M+y,1);\n\t\t\t\t\t\tadd_edge(k*M+y,k*M+x,1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ty=num[i+1][j];            //\u5411\u4e0b\u8fde\u8fb9\n\t\t\t\tif(y!=0&&fg[x][y]!=-1)\n\t\t\t\t{\n\t\t\t\t\tif(fg[x][y]==0||havekey[fg[x][y]])\n\t\t\t\t\t{\n\t\t\t\t\t\tadd_edge(k*M+x,k*M+y,1);\n\t\t\t\t\t\tadd_edge(k*M+y,k*M+x,1);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\n\t\t\t}\n\t\t}\n\t\tfor(i=1;i<=keyn;i++)           //\u8f6c\u79fb\u5230\u5176\u4ed6\u72b6\u6001\n\t\t{\n\t\t\tif(!havekey[i])            //\u672a\u6301\u6709i\u7c7b\u94a5\u5319\u8f6c\u79fb\n\t\t\t{\n\t\t\t\tt=k+(1<<(i-1));       //\u5f97\u5230i\u7c7b\u94a5\u5319\u7684\u5c42\n\t\t\t\tfor(j=1;j<=kn[i];j++)     //\u5faa\u73afi\u7c7b\u94a5\u5319\u4f4d\u7f6e\n\t\t\t\t{\n\t\t\t\t\tx=num[key[i][j].x][key[i][j].y];\n\t\t\t\t\tadd_edge(k*M+x,t*M+x,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} \n}\ninline void SPFA()\n{\n\tint i,j,k,head,tail;\n\tfor(i=1;i<=n;i++) dis[i]=inf;\n\tdis[1]=0;vst[1]=true;head=tail=1;q[1]=1;\n\twhile(head<=tail)\n\t{\n\t\ti=q[head];\n\t\tfor(k=frist[i];k;k=a[k].next)\n\t\t{\n\t\t\tj=a[k].to;\n\t\t\tif(dis[j]>dis[i]+a[k].w)\n\t\t\t{\n\t\t\t\tdis[j]=dis[i]+a[k].w;\n\t\t\t\tif(!vst[j])\n\t\t\t\t{\n\t\t\t\t\tq[++tail]=j;\n\t\t\t\t\tvst[j]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvst[i]=false;\n\t\thead++;\n\t}\n}\ninline void end()\n{\n\tint i,ans=inf,T;\n\tSPFA();\n\tT=num[row][line];\n\tfor(i=0;i<layer;i++)\n\tans=min(ans,dis[i*M+T]);\n\tif(ans<inf) printf(\"%d\",ans);\n\telse printf(\"-1\");\n}\nint main()\n{\n\tscan();\n\tprocess();//\u5efa\u56fe\n\tend();\n\treturn 0;\n}\n```\n",
        "postTime": 1570956767,
        "uid": 228395,
        "name": "\u5b64\u53f6\u6b8b\u5f71",
        "ccfLevel": 4,
        "title": "\u7b80\u5355\u7684SPFA"
    },
    {
        "content": "# Solution  \n\u8fd9\u9053\u9898\u76ee\u53ef\u4ee5\u8f7b\u677e\u5730\u770b\u51fa\u5e94\u8be5\u8003\u8651\u5bbd\u641c\u7b97\u6cd5\u6765\u89e3\u51b3\uff0c\u5176\u4ed6\u9898\u89e3\u4e2d\u6ca1\u6709\u8bb2\u660e\u767d\u5982\u4f55\u51c6\u786e\u538b\u4f4d\uff0c\u6240\u4ee5\u672c\u849f\u84bb\u6765\u8bb2\u4e00\u4e0b\u3002  \n### \u4ec0\u4e48\u662f\u538b\u4f4d\uff1f  \n\u538b\u4f4d\u901a\u4fd7\u7684\u8bf4\u5c31\u662f\u628a\u4e00\u4e2a**\u4e0d\u53ef**\u6216**\u5f88\u96be**\u76f4\u63a5\u6807\u8bb0\u7684\u72b6\u6001\u53d8\u5f97\u66f4\u597d\u6807\u8bb0\u3002  \n### \u5982\u4f55\u538b\u4f4d\uff1f  \n\u4ee5\u672c\u9898\u4e3a\u4f8b\uff0c\u9898\u76ee\u5f53\u4e2d\u94a5\u5319\u53ef\u80fd\u670910\u79cd\uff0c\u6309\u7167\u6211\u4eec\u4e4b\u524d\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u5f00\u4e00\u4e2a10\u7ef4\u7684\u5e03\u5c14\u6570\u7ec4\u6765\u8fdb\u884c\u6807\u8bb0\uff0c\u4f46\u8fd9\u65e0\u7591\u4e3a\u5224\u91cd\u5e26\u6765\u4e86\u5de8\u5927\u7684\u9ebb\u70e6\u3002\u4e8e\u662f\u6211\u4eec\u89c2\u5bdf\u6bcf\u628a\u94a5\u5319\u7684\u72b6\u6001\uff0c\u53d1\u73b0\u94a5\u5319\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u6709\u8fd8\u662f\u6ca1\u6709\u3002\u4e8e\u662f\u8003\u8651\u4e8c\u8fdb\u5236\u3002\u7528\u4e00\u4e2a10\u4f4d\u4e8c\u8fdb\u5236\u6570\u6765\u8868\u793a\u6bcf\u4e00\u628a\u94a5\u5319\u7684\u72b6\u6001\uff0c\u5982``0000000000``\u5c31\u8868\u793a\u76ee\u524d\u4f60\u4e00\u628a\u94a5\u5319\u90fd\u6ca1\u6709\uff0c\u800c``0000001000``\u5c31\u8868\u793a\u4f60\u6709\u7b2c4\u628a\u94a5\u5319\uff0c\u90a3\u6211\u4eec\u5982\u4f55\u5b9e\u73b0\u5462\uff1f  \n\u9996\u5148\u4f60\u5148\u786e\u4fdd\u4f60\u660e\u767d\u4e8c\u8fdb\u5236\u7684\u8fd0\u7b97\u540e\u518d\u770b\u4e0b\u6587\u3002  \n\u5047\u5982\u6211\u4eec\u73b0\u5728\u4e00\u628a\u94a5\u5319\u90fd\u6ca1\u6709\uff0c\u6765\u5230\u4e86\u4e00\u4e2a\u6709\u7b2c4\u628a\u94a5\u5319\u7684~~\u98ce\u6c34\u5b9d\u5730~~\uff0c\u6211\u4eec\u5c31\u9700\u8981\u62ff\u8d77\u8fd9\u4e00\u628a\u94a5\u5319\uff0c\u4f7f\u5f97\u4e8c\u8fdb\u5236\u6570``0000000000``\u53d8\u6210``0000001000``\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u628a\u6570\u5b57``1``\u5411\u5de6\u79fb\u52a8``3``\u4e2a\u5355\u4f4d\uff0c\u4e0b\u9762\u753b\u4e2a\u56fe\u8fdb\u884c\u7406\u89e3\uff1a  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hhssv9gp.png)  \n\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6211\u4eec\u53d6\u4e86\u7b2c $q$ \u628a\u94a5\u5319\uff0c\u6211\u4eec\u9700\u8981\u628a\u5b83\u538b\u5165\u72b6\u6001\u53ea\u9700\u8981\u5c06\u5b83\u5411\u5de6\u79fb\u52a8 $q-1$ \u4f4d\uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a  \n```cpp\ngetk(q)\n\tx = 1 << (q-1)\n```\n\u90a3\u4e48\u5982\u679c\u8bf4\u6211\u4eec\u6709\u591a\u628a\u94a5\u5319\u5462\uff1f  \n\u90a3\u6211\u4eec\u5c31\u8003\u8651**\u6309\u4f4d\u6216**\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u73b0\u5728\u6709\u4e86\u7b2c\u4e09\u628a\u94a5\u5319\uff0c\u4f60\u53c8\u62ff\u5230\u4e86\u7b2c\u56db\u628a\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u6309\u4f4d\u6216\u4e00\u4e0b\u5373\u53ef\u3002  \n\u753b\u4e2a\u56fe\uff1a  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9d1p7bbo.png)  \n\u54e6\u5bf9\u4e86\uff0c\u56fe\u4e0a\u7684\u90a3\u4e2a**xor\u662f\u6309\u4f4d\u6216\uff0c\u4e0d\u662f\u6309\u4f4d\u5f02\u6216**\uff0c\u6253\u9519\u4e86\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5c06\u4e24\u628a\u94a5\u5319\u5408\u5e76\u53ea\u9700\u8981\u6309\u4f4d\u6216\u4e00\u4e0b\u5373\u53ef\uff0c\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a  \n```cpp\nmerge(q) \n\tp |= q  //p\u662f\u539f\u6765\u7684\u94a5\u5319\u72b6\u6001\uff0cq\u662f\u65b0\u6765\u7684\u3002\n```\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u89e3\u51b3\u4e86\u62ff\u94a5\u5319\u7684\u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u5224\u91cd\u7684\u95ee\u9898\uff0c\u600e\u4e48\u89e3\u51b3\u5462\uff1f  \n\u8fd9\u6b21\u6211\u4eec\u7528**\u6309\u4f4d\u4e0e**\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u73b0\u5728\u6709\u4e86\u7b2c2,3,4,7,9\u628a\u94a5\u5319\uff0c\u800c\u8fd9\u6247\u95e8\u9700\u8981\u7b2c\u516b\u628a\u94a5\u5319\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u4f60\u624b\u4e2d\u6709\u7684\u94a5\u5319\u7684\u72b6\u6001\u548c\u7b2c\u516b\u628a\u94a5\u5319\u7684\u72b6\u6001\u6309\u4f4d\u4e0e\uff0c\u5982\u679c\u7ed3\u679c\u4e3a0\uff0c\u5219\u6ca1\u6709\u8fd9\u4e00\u628a\u94a5\u5319\uff0c\u5426\u5219\u5c31\u6709\u8fd9\u628a\u94a5\u5319\uff0c\u753b\u4e2a\u56fe\uff1a  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0zt2idea.png)  \n![](https://cdn.luogu.com.cn/upload/image_hosting/k14ts94z.png)  \n\n\u4f46\u662f\u4f60\u8981\u6ce8\u610f\uff0c\u7b2c $p$ \u628a\u94a5\u5319\u7684\u72b6\u6001\u65f6\u4e8c\u8fdb\u5236\u6570\u5de6\u79fb $p-1$ \u4f4d\u7684\uff0c\u4e0d\u80fd\u641e\u9519\u3002  \n\n\u8fd9\u9053\u9898\u76ee\u597d\u50cf\u96be\u7684\u5c31\u662f\u72b6\u6001\u7684\u538b\u7f29\u5427\uff0c\u5176\u4ed6\u4f60\u5e94\u8be5\u53ef\u4ee5\u81ea\u5df1\u505a\u51fa\u6765\u7684\uff0c\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\u3002",
        "postTime": 1594260928,
        "uid": 86971,
        "name": "TRZ_2007",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u9053\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u9898\u76ee\n\n\u5728\u8fd9\u4e2a\u9898\u76ee\u4e2d\uff0c\u5f53\u524d\u7684\u72b6\u6001\u662f\u201c\u8d70\u5230\u54ea\u201d\u548c\u201c\u6709\u54ea\u4e9b\u94a5\u5319\u201d\uff0c\u6240\u4ee5\u7528\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u961f\u5217\u3002\u8003\u8651\u5230\u60c5\u51b5\u6bd4\u8f83\u591a\uff0c\u53ef\u4ee5\u5f00\u4e00\u4e2a\u591a\u7ef4map\u6765\u8bb0\u5f55\u54ea\u4e9b\u72b6\u6001\u5df2\u7ecf\u6709\u8fc7\u4e86\uff0c\u9632\u6b62bfs\u65f6\u91cd\u590d\u5165\u961f\n\n\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a01\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u6bcf\u4e00\u628a\u94a5\u5319\u7684\u72b6\u6001\uff08\u5f00\u5934\u52a0\u4e00\u4e2a\u6ca1\u6709\u610f\u4e49\u7684\u20180\u2019\uff09\u3002\u6bd4\u5982\uff0c\u73b0\u5728\u6211\u7684\u72b6\u6001\u662f\u201c0011001000\u201d\uff0c\u8868\u793a\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u7b2c\u4e8c\u3001\u4e09\u3001\u516d\u628a\u94a5\u5319\u3002\u5f53\u6211\u8d70\u5230\u4e00\u4e2a\u683c\u5b50\uff0c\u91cc\u9762\u6709\u56db\u3001\u4e03\u53f7\u94a5\u5319\uff0c\u53ea\u8981\u628as[4]\uff0cs[7]\u6539\u4e3a\u20181\u2019\u5c31\u884c\u4e86\uff0c\u72b6\u6001\u66f4\u65b0\u4e3a\u201c0011101100\u201d\u3002\n\n\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u6837\u6bd4\u8f83\u76f4\u89c2\uff0c\u4fee\u6539\u65f6\u4e5f\u6bd4\u8f83\u65b9\u4fbf\uff0c(\u53ef\u80fd)\u4fbf\u4e8e\u7406\u89e3 \uff08\u4e3b\u8981\u662f\u4e0d\u4f1a\u4e8c\u8fdb\u5236\u72b6\u538blol\uff09\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,p,k,s;\nint bar[12][12][12][12];//\u5b58\u5899\u548c\u95e8\uff0c\u56db\u4e2a\u7ef4\u5ea6\u5206\u522b\u662fx1,y1,x2,y2\uff0c\u5b58\u50a8\u7684\u503c\u662f\u95e8\u7684\u5e8f\u53f7\uff08\u6216\u8005\u5899\uff09\nstring key[12][12];//\u5b58\u6bcf\u4e00\u683c\u6709\u54ea\u4e9b\u94a5\u5319\nstruct cell{\n\tint x,y,step;//\u5206\u522b\u662f\u6a2a\u5750\u6807\u3001\u7eb5\u5750\u6807\u548c\u6b65\u6570\n\tstring l;//\u5f53\u524d\u6709\u54ea\u4e9b\u94a5\u5319\n\t}que[1000005];//\u6a21\u62df\u961f\u5217\nmap<pair<string,pair<int,int>  >,bool>jud;//\u7528\u4e8e\u53bb\u91cd\uff0cstring\u662f\u94a5\u5319\u72b6\u6001\uff0c\u91cc\u9762\u7684pair\u662f\u5750\u6807\nint fx[4][2]={{1,0},{-1,0},{0,-1},{0,1}};//\u65b9\u5411\u6570\u7ec4\nint main(){\n\tstd::ios::sync_with_stdio(false);//\u7a0d\u5fae\u52a0\u5feb\u4e00\u4e0bcin\u3001cout\u7684\u901f\u5ea6\uff0c\u4e5f\u53ef\u4ee5\u5199\u5feb\u8bfb\n\tcin>>n>>m>>p>>k;\n\tfor(int i=1;i<=k;i++){\n\t\tint x1,y1,x2,y2,z;\n\t\tcin>>x1>>y1>>x2>>y2>>z;\n\t\tif(z==0)z=-1;//\u8fd9\u91cc\u8f6c\u6362\u4e00\u4e0b\uff0c\u7528-1\u8868\u793a\u5899\uff0c\u4e0d\u7136\u4f1a\u51fa\u9505\n\t\tbar[x1][y1][x2][y2]=z;\n\t\tbar[x2][y2][x1][y1]=z;//\u95e8\u662f\u53cc\u5411\u7684\uff0c\u6240\u4ee5\u8981\u5b58\u4e24\u904d\n\t\t}\n\tcin>>s;\t\n\tfor(int i=1;i<=s;i++){\n\t\tint x,y;\n\t\tchar z;\n\t\tcin>>x>>y>>z;\n\t\tkey[x][y]+=z;//\u5b58\u653e\u8fd9\u4e2a\u70b9\u6709\u54ea\u4e9b\u94a5\u5319\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f\u2018+z\u2019\uff0c\u770b\u540e\u9762\uff09\n\t\t}\n\tstring ll=\"\";\n\tfor(int i=0;i<=p;i++){\n\t\tll+='0';\n\t\t}//\u521d\u59cb\u5316\u4e00\u4e0b\u94a5\u5319\u72b6\u6001\uff0c\u628a\u6bcf\u4e2a\u4f4d\u90fd\u5b9a\u4e3a0\n\tint le=0,ri=0;\t\n\tcell a;\t\n\ta.x=1;a.y=1;a.l=ll;a.step=0;\n\tque[le]=a;//\u8d77\u70b9\u5165\u961f\n\tbool bj=0;//\u5224\u65ad\u662f\u5426\u6709\u89e3\n\twhile(le<=ri){//bfs\u57fa\u672c\u64cd\u4f5c\n\t\tint xx=que[le].x,yy=que[le].y,how=que[le].step;\n\t\tstring v=que[le].l;\n\t\tjud[make_pair(v,make_pair(xx,yy))]=1;//\u8fd9\u4e2a\u72b6\u6001\u5df2\u7ecf\u5b58\u5728\u8fc7\u4e86\uff0c\u6807\u8bb0\u4e00\u4e0b\n\t\tif(xx==n&&yy==m){//\u5230\u8fbe\u7ec8\u70b9\u8bf4\u660e\u6709\u89e3\uff0c\u76f4\u63a5\u7ed3\u675f\n\t\t\tcout<<how;\n\t\t\tbj=1;\n\t\t\tbreak;\n\t\t\t}\n\t\t++le;\n\tfor(int q=0;q<4;q++){\n\t\t\tstring now=v;\n\t\t\tint i=xx+fx[q][0],j=yy+fx[q][1];\n\t\t\tif(i<1||i>n||j<1||j>m)continue;//\u5224\u65ad\u8d8a\u754c\n\t\t\tif(bar[xx][yy][i][j]==-1)continue;//\u5224\u65ad\u6709\u65e0\u5899\n\t\t\tfor(int u=0;u<key[i][j].length();u++){//\u770b\u770b\u8fd9\u4e2a\u70b9\u6709\u54ea\u4e9b\u94a5\u5319\n\t\t\t\tint h=key[i][j][u]-'0';\n\t\t\t\tnow[h]='1';//\u4fee\u6539\u94a5\u5319\u72b6\u6001\n\t\t\t\t}\n\t\t\tif(jud[make_pair(now,make_pair(i,j))]==1)continue;//\u5224\u91cd\t\n \t\t\tif(bar[xx][yy][i][j]>0){//\u5047\u5982\u6709\u95e8\n\t\t\t\tif(now[bar[xx][yy][i][j]]=='0')continue;//\u5224\u65ad\u6709\u6ca1\u6709\u5f00\u8fd9\u4e2a\u95e8\u7684\u94a5\u5319\n\t\t\t\t}\n\t\t\tcell b;\n\t\t\tb.x=i;b.y=j;b.step=how+1;b.l=now;\n\t\t\t++ri;\n\t\t\tque[ri]=b;//\u8fdb\u961f\n\t\t\t}\t\t\t\t\t\t\t\t\t\t\n\t\t}\t\t\t\t\t\t\t\t\n\tif(bj==0){\n\t\tcout<<-1;//\u65e0\u89e3\u8f93\u51fa-1\n\t\t}\t\n\treturn 0;\n\t}\n```\n\n\u5de8\u5751\uff1a\u4e00\u4e2a\u70b9\u53ef\u4ee5\u653e\u591a\u628a\u94a5\u5319\uff08\u6240\u4ee5\u5728\u66f4\u65b0key\u6570\u7ec4\u662f\u662f\u52a0\u4e0a\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4fee\u6539\uff09\n\n\u7a0b\u5e8f\u8dd1\u7684\u5f88\u6162\uff0c\u4f46\u662f\u89e3\u51b3\u8fd9\u9053\u9898\u7ef0\u7ef0\u6709\u4f59\n\n\uff08\u8868\u8fbe\u80fd\u529b\u8f83\u5dee\uff0c\u62b1\u6b49\uff09",
        "postTime": 1558074395,
        "uid": 178864,
        "name": "LordLeft",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "###\u5206\u5c42\u56fe+dp\n\n\u8fd9\u4e2a\u662f\u7f51\u7edc\u6d41?\u9707\u60ca\uff01\n\n\u4ece$(1,1)$\u5230$(n,m)$\u4e2d\u5728\u67d0\u4e9b\u9650\u5236\u4e0b\u6700\u5c11\u8d70\u591a\u5c11\u6b65\u3002\n\n\u90a3\u4e48\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u8fd9\u4e9b\u9650\u5236\u600e\u4e48\u5224\u65ad\u3002\n\n\u7531\u4e8e\u94a5\u5319\u7684\u79cd\u6570\u6709\u9650\u3002\u4e14$\\le 14$\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u6709\u6ca1\u6709\u5728\u62ff\u5230\u5f53\u524d\u94a5\u5319\u3002\n\n\u4e8e\u662f,\u8bb0\u5f55$dis[x][y][z]$\u4e3a\u5f53\u524d\u94a5\u5319\u72b6\u6001\u662fz,\u8d70\u5230\u4e86$(x,y)$\u8fd9\u4e2a\u70b9\u6700\u5c11\u9700\u8981\u7684\u6b65\u6570\u3002\n\n\u5f53\u524d\u80fd\u8f6c\u79fb\u7684\u6761\u4ef6\u662f\u5bf9\u4e8e\u6240\u6709\u95e8\u7684\u4e8c\u8fdb\u5236\u7684\u7b2c$i$\u4f4d\u4e3a1\u7684,\u90fd\u6709$(1<<i)\\&z\\ne 0$\n\n\u4e8e\u662f\u5bf9\u4e8e\u5899\u7684\u72b6\u6001,\u5219\u53ef\u4ee5\u7528$2^k$\u8fd9\u6837\u8868\u793a,\uff08\u56e0\u4e3a\u6ca1\u6709\u8fd9\u6837\u7684\u94a5\u5319~~(\u7b11~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<queue>\n#include<cstring>\n#define y1 bibalabalab__bibibili \nusing namespace std;\nconst int maxn=12;\nconst int xx[5]={0,0,1,-1},yy[5]={1,-1,0,0};\ninline int read(){\n    int an=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){ch=getchar();}\n    while('0'<=ch&&ch<='9'){an=an*10+(ch^48);ch=getchar();}\n    return an;\n}\nint n,m,P,K,KEY;\nstruct saber{\nint x,y,key;\n};\ntypedef saber ssr;\nint b[maxn][maxn][maxn][maxn];//P\u79cd\u94a5\u53190-(1<<p)-1 \nint dis[maxn][maxn][1<<16];\nint key[maxn][maxn];\ninline bool get(int x,int y){\n    for(;x;x-=x&-x){//\u63d0\u53d6\u6700\u540e\u4e00\u4f4d\u4e3a1\u7684\u4f4d\u7f6e\n        int now=x&-x;\n        if(!(y&now))return 0;\n    }\n    return 1;\n}\nqueue<saber>q;\nint main(){\n    n=read();m=read();P=read();\n    K=read();\n    for(int i=K;i;i--){\n        int x0=read(),y0=read(),x1=read(),y1=read(),kind=read();\n        if(kind){\n        b[x0][y0][x1][y1]|=1<<kind-1;\n        b[x1][y1][x0][y0]|=1<<kind-1;\n        }\n        else {\n        b[x0][y0][x1][y1]|=1<<P;\n        b[x1][y1][x0][y0]|=1<<P;\n        }\n    }\n    KEY=read();\n    for(int i=KEY;i;i--){\n        int x=read(),y=read(),z=read();\n        key[x][y]|=1<<z-1;\n    }\n    memset(dis,0x3f3f3f,sizeof dis);\n    q.push((saber){1,1,0});\n    dis[1][1][0]=0;\n    while(!q.empty()){\n        ssr p=q.front();q.pop();\n        for(int i=0;i<5;i++){\n            int x=p.x+xx[i];\n            int y=p.y+yy[i];\n            if(x<1||y<1||x>n||y>m)continue;\n            bool ok=get(b[p.x][p.y][x][y],p.key);\n            if(ok){\n                if(dis[x][y][p.key|key[x][y]]>dis[p.x][p.y][p.key]+1){\n                    dis[x][y][p.key|key[x][y]]=dis[p.x][p.y][p.key]+1;\n                    q.push((saber){x,y,p.key|key[x][y]});\n                }\n            }\n        }\n    }\n    int ans=0x3f3f3f;\n    for(int i=0;i<(1<<P);i++)ans=min(ans,dis[n][m][i]);\n    if(ans==0x3f3f3f)cout<<-1;\n    else cout<<ans;\n    return 0;\n}\n```\n[\u6700\u540e\u63a8\u8350\u4e00\u9053\u7c7b\u4f3c\u9898,\u540c\u6837\u90fd\u662f\u7528\u4e86\u72b6\u538b\u7684bfs](https://www.luogu.org/problemnew/show/P3786)\n",
        "postTime": 1513863349,
        "uid": 24570,
        "name": "s_a_b_e_r",
        "ccfLevel": 0,
        "title": "P4011 \u5b64\u5c9b\u8425\u6551\u95ee\u9898"
    },
    {
        "content": "# SPFA\u5927\u6cd5\u597d\n\u7b2c\u4e00\u9053\u7d2b\u9898\u2026\u2026\n\n\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u4e2a\u7f51\u7edc\u6d41\u9898\u5c45\u7136\u662f\u7d2b\u5413\u4e86\u4e00\u8df3\uff0c\u7785\u4e86\u7785\u89c9\u5f97\u5982\u679c\u7528bfs\u5e94\u8be5\u6ca1\u6709\u90a3\u4e48\u96be\uff0c\u7528SPFA\u7ec3\u7ec3\u624b\u4e4b\u540e\u53d1\u73b0\u597d\u50cf\u5982\u679c\u4e0d\u7528bfs\u771f\u7684\u503c\u8fd9\u4e48\u96be\uff0c\u4e0d\u8fc7\u597d\u50cf\u9898\u89e3\u5e76\u6ca1\u6709SPFA\u7684\n### SPFA\u6b7b\u4e86\uff1f\n## \u4e0d\u53ef\u80fd\uff01\n### \u4e24\u4e2a\u5751\u70b9\n\u7b2c\u4e00\u4e2a\u662f\u4e00\u628a\u94a5\u5319\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\u3002\u867d\u7136\u662f\u5e38\u8bc6\u2014\u2014\u4f46\u662f\u4e0d\u6392\u9664\u6709\u4eba\u4f1a\u843d\u6389\n\n\u7b2c\u4e8c\u4e2a\u662f\u4e00\u4e2a\u623f\u95f4\u53ef\u4ee5\u6709\u591a\u628a\u94a5\u5319\uff0c\u4f46\u662f\u4e24\u4e2a\u623f\u95f4\u4e4b\u95f4\u53ea\u53ef\u80fd\u6709\u4e00\uff01\u6247\uff01\u95e8\uff01\u5927\u90e8\u5206WA\u90fd\u662f\u8fd9\u6765\u7684\n#### \u601d\u8def\n1.\u4e00\u4e2amap\u6570\u7ec4\u628a\u5730\u56fe\u4fe1\u606f\u5b58\u8fdb\u53bb\uff08\u5efa\u56fe\uff09\n\n2.\u5224\u65ad\uff1a\u8d8a\u754c\uff0c\u6709\u5899 \uff0c\u6ca1\u94a5\u5319\u5f00\u95e8\u2014\u2014\u90fd\u4e0d\u884c\n\n3.\u8dd1SPFA\u6309\u5957\u8def\u66f4\u65b0\uff0c\u8f93\u51fa\n\nbingo\uff01\uff08\u8fd9\u9053\u9898\u8f93\u5165\u592a\u2026\u2026\uff09\n#### CODE\n```c\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,m,p,k,s,x1,y1,x2,y2,dis[18][18][1030],g,zz,ans=2e9;\nint dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};//\u65b9\u5411\nbool flag[18][18][1030];\nint c[18][18],map[18][18][4];\nstruct node\n{\n    int x,y,z; \n}u,f;\nqueue<node>q;\nvoid add_map(int a,int b,int aaa,int bbb,int c)//\u5efa\u56fe\n{\n  //\u56db\u4e2a\u65b9\u5411\u50a8\u5b58\n    if(aaa==a-1&&bbb==b)\n\t{\n\t\tmap[a][b][0]=c;\n\t\tmap[aaa][bbb][2]=c;\n\t\treturn;\n\t}\n    if(aaa==a&&bbb==b+1)\n\t{\n\t\tmap[a][b][1]=c;\n\t\tmap[aaa][bbb][3]=c;\n\t\treturn;\n\t}\n    if(aaa==a+1&&bbb==b)\n\t{\n\t\tmap[a][b][2]=c;\n\t\tmap[aaa][bbb][0]=c;\n\t\treturn;\n\t}\n    if(aaa==a&&bbb==b-1)\n\t{\n\t\tmap[a][b][3]=c;\n\t\tmap[aaa][bbb][1]=c;\n\t\treturn;\n\t}\n}\nint main()\n{\n    memset(map,-1,sizeof(map));//-1\u9ed8\u8ba4\u683c\u5b50\u4e4b\u95f4\u6ca1\u6709\u969c\u788d\n\tscanf(\"%d%d%d%d\",&n,&m,&p,&k);//\u8f93\u5165\u4e0d\u7528\u8bf4\u4e86\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&g);\n        add_map(x1,y1,x2,y2,g);\n    }\n    scanf(\"%d\",&s);\n    for(int i=1;i<=s;i++)\n    {\n    \tint a,b,d;\n        scanf(\"%d%d%d\",&a,&b,&d);\n        c[a][b]|=(1<<(d-1));//\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5b58\u591a\u4e2a\u94a5\u5319\uff01\n    }\n    memset(dis,63,sizeof(dis));//\u6e05\u7a7adis\u6570\u7ec4\n    f.x=1;\n    f.y=1;\n    f.z=c[1][1];\n    q.push(f);\n    flag[1][1][f.z]=1;\n    dis[1][1][f.z]=0;\n    while(!q.empty())\n    {\n        f=q.front();q.pop();\n        flag[f.x][f.y][f.z]=0;\n        for(int i=0;i<4;i++)\n        {\n            u.x=f.x+dx[i];\n            u.y=f.y+dy[i];\n            u.z=f.z|c[u.x][u.y]; \n            if(u.x<1||u.x>n||u.y<1||u.y>m||map[f.x][f.y][i]==0||map[f.x][f.y][i]>0&&!(f.z&(1<<(map[f.x][f.y][i]-1))))\n            continue;  //\u6321\u7740\uff0c\u6ca1\u94a5\u5319\uff0c\u8d8a\u754c\uff0c\u90fdpass\u6389  \n            if(dis[u.x][u.y][u.z]>dis[f.x][f.y][f.z]+1)//\u6309\u5957\u8def\u8dd1\u4e00\u8dd1\n            {\n        \t\tdis[u.x][u.y][u.z]=dis[f.x][f.y][f.z]+1;\n                if(!flag[u.x][u.y][u.z])\n                {\n                    flag[u.x][u.y][u.z]=1;\n                    q.push(u);\n                }\n            }\n        }\n    }\n    for(int i=0;i<(1<<p);i++)\n    ans=min(ans,dis[n][m][i]);\n    if(ans<1e8)\n    printf(\"%d\\n\",ans);\n    else\n    printf(\"-1\\n\");\n    return 0;\n}\n```\n\u7801\u98ce\u6e05\u5947\u2026\u2026\n\n\u6211\u7231SPFA\uff0cSPFA\u4f7f\u6211\u5feb\u4e50\n\n\u5ba1\u6838\u771f\u597d\u770b\uff01\u7ed9\u8fc7\u5427QWQ",
        "postTime": 1577001452,
        "uid": 224579,
        "name": "FXY\u662f\u849f\u84bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "#### [\u9898\u9762](https://www.luogu.org/problemnew/show/P4011)\n---\n## \u5927\u81f4\u9898\u610f\n\u8d77\u70b9\u4e3a $(1,1),$  \u7ec8\u70b9\u4e3a$(n,m)$\u3002\u6709\u4e9b\u683c\u5b50\u4e0a\u6709\u82e5\u5e72\u4e2a\u94a5\u5319\uff0c\u4e24\u4e2a\u683c\u5b50\u4e4b\u95f4\u53ef\u80fd\u6709\u4e00\u5835\u5899\u6216\u8005\u4e00\u6247\u53ef\u4ee5\u7528\u5bf9\u5e94\u94a5\u5319\u6253\u5f00\u7684\u95e8\u3002\u6bcf\u6b21\u79fb\u52a8\u9700\u8981 $1$ \u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u5176\u4ed6\u52a8\u4f5c\u4e0d\u9700\u8981\u65f6\u95f4\uff0c\u6c42\u6700\u5c11\u9700\u8981\u591a\u5c11\u65f6\u95f4\u80fd\u4ece\u8d77\u70b9\u5230\u8fbe\u7ec8\u70b9\u3002\n\n---\n## \u601d\u8def\n\u72b6\u538b$+bfs$\n\n\u8fd9\u79cd\u9898\u5f88\u5bb9\u6613\u60f3\u5230\u7528 $bfs,$ \u4f46\u662f\u95ee\u9898\u5728\u8d70\u7684\u65f6\u5019\u5982\u679c\u4e24\u4e2a\u683c\u5b50\u4e4b\u95f4\u6709\u95e8\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u53bb\u5224\u65ad\u5f53\u524d\u624b\u4e0a\u6240\u6709\u7684\u94a5\u5319\u91cc\u6709\u6ca1\u6709\u80fd\u6253\u5f00\u8fd9\u6247\u95e8\u7684\u94a5\u5319\u3002\u6211\u4eec\u6ce8\u610f\u5230\u94a5\u5319\u7684\u79cd\u7c7b\u6700\u591a\u53ea\u6709 $14$ \u79cd\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528\u72b6\u538b\u6765\u8868\u793a\u5f53\u524d\u641c\u5230\u7684\u94a5\u5319\u7684\u72b6\u6001\u3002\n\n\u4e00\u4e9b\u6570\u7ec4\u7684\u610f\u601d\uff1a\n\n$pw_i=2^{i-1}$\n    \n$Key_{i,j}$ \u8868\u793a\u5728\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u683c\u5b50\u80fd\u83b7\u5f97\u7684\u94a5\u5319\uff08\u7528\u4e8c\u8fdb\u5236\u5b58\u50a8\uff09\n\n$vis_{i,j,s}$ \u8868\u793a\u5728\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u683c\u5b50\u4e14\u6301\u6709\u94a5\u5319\u7684\u72b6\u6001\u4e3a $s$ \u7684\u60c5\u51b5\u4e4b\u524d\u6709\u6ca1\u6709\u641c\u5230\u8fc7\n\n$mp_{x_1,y_1,x_2,y_2}$ \u8868\u793a\u7b2c $x_1$ \u884c\u7b2c $y_1$ \u5217\u7684\u683c\u5b50\u4e0e\u7b2c $x_2$ \u884c\u7b2c $y_2$ \u5217\u7684\u683c\u5b50\u4e4b\u95f4\u6709\u6ca1\u6709\u5899\u6216\u95e8\uff0c\u5982\u679c\u90fd\u6ca1\u6709\u7684\u8bdd\u4e3a0\uff0c\u5982\u679c\u6709\u5899\u7684\u8bdd\u4e3a-1\uff0c\u5982\u679c\u662f\u95e8\u7684\u8bdd\u5219\u4e3a$pw_i$ ($i$\u4e3a\u5bf9\u5e94\u80fd\u6253\u5f00\u8be5\u95e8\u7684\u94a5\u5319\u7684\u7f16\u53f7)\n\n\u5177\u4f53\u7684\u4f1a\u5728\u4ee3\u7801\u91cc\u8bb2\u7684\u3002\n\n---\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int dx[]={1,-1,0,0};//\u589e\u91cf\u6570\u7ec4\nconst int dy[]={0,0,1,-1};\nint vis[25][25][40005],x,y,xx,yy,g,pw[105],mp[16][16][16][16],Key[20][20],n,m,tot;\nstruct tzg{int x,y,key,stp;}q[5000005];//q\u4e3a\u5e7f\u641c\u7528\u7684\u961f\u5217\nint bfs(){\n\tint h=1,t=1;\n\tvis[1][1][Key[1][1]]=1;//\u4e00\u5f00\u59cb\u5c31\u6709\u4f4d\u4e8e(1,1)\u7684\u94a5\u5319\n\tq[t]=(tzg){1,1,Key[1][1],0};\n\tfor(;h<=t;++h){\n\t\ttzg u=q[h];//\u53d6\u961f\u5934\n\t\tfor(int k=0;k<4;++k){\n\t\t\tint x=u.x+dx[k],y=u.y+dy[k],key=u.key,stp=u.stp;\n\t\t\tif(x<1||y<1||x>n||y>m)continue;//\u5982\u679c\u8d85\u51fa\u683c\u5b50\u5219\u8df3\u8fc7\n\t\t\tif(mp[x][y][u.x][u.y]==-1)continue;//\u5982\u679c\u4e24\u4e2a\u683c\u5b50\u4e4b\u95f4\u6709\u5899\u5219\u8df3\u8fc7\n\t\t\tif((mp[x][y][u.x][u.y]&key)!=mp[x][y][u.x][u.y])continue;//\u5982\u679c\u4e24\u4e2a\u683c\u5b50\u4e4b\u95f4\u6709\u95e8\u800c\u4e14\u624b\u4e0a\u6240\u6709\u7684\u94a5\u5319\u91cc\u6ca1\u6709\u80fd\u6253\u5f00\u8be5\u95e8\u7684\u94a5\u5319\u5219\u8df3\u8fc7\n\t\t\tkey|=Key[x][y];\n\t\t\tif(vis[x][y][key])continue;//\u5982\u679c\u4e4b\u524d\u641c\u5230\u8fc7\u8fd9\u4e2a\u72b6\u6001\u5219\u8df3\u8fc7\n\t\t\tvis[x][y][key]=1;stp++;//\u53ef\u4ee5\u5219\u6269\u5c55\n            q[++t]=(tzg){x,y,key,stp};\n\t\t\tif(x==n&&y==m)return stp;//\u5982\u679c\u5df2\u7ecf\u8d70\u5230(n,m)\u5219\u8fd4\u56de\u7b54\u6848\n\t\t}\n\t}\n\treturn -1;//\u65e0\u6cd5\u62b5\u8fbe\n}\nint main(){\n\tpw[1]=1;for(int i=2;i<=15;++i)pw[i]=pw[i-1]<<1;//\u9884\u5904\u7406pw\u6570\u7ec4\n\tscanf(\"%d%d%d\",&n,&m,&g);\n\tscanf(\"%d\",&tot);\n\twhile(tot--){\n\t\tscanf(\"%d%d%d%d%d\",&x,&y,&xx,&yy,&g);\n\t\tmp[x][y][xx][yy]=mp[xx][yy][x][y]=(g==0?-1:pw[g]);//\u5982\u679c\u662f\u5899\u5219\u8d4b\u503c\u4e3a-1,\u5426\u5219\u4e3a\u5bf9\u5e94\u94a5\u5319\u7f16\u53f7\n\t}\n\tscanf(\"%d\",&tot);\n\twhile(tot--){\n\t\tscanf(\"%d%d%d\",&x,&y,&g);\n\t\tKey[x][y]|=pw[g];//\u8868\u793a\u5728(x,y)\u70b9\u4e0a\u6709\u7f16\u53f7\u4e3ag\u7684\u94a5\u5319\n\t}\n\tcout<<bfs();\n\treturn 0;\n}\n```\n",
        "postTime": 1546948889,
        "uid": 41834,
        "name": "Aryzec",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u5b64\u5c9b\u8425\u6551\u95ee\u9898"
    },
    {
        "content": "\u89e3\u9898\u65b9\u6cd5\uff1a\u72b6\u6001\u538b\u7f29+BFS\n\n\u6211\u4eec\u628a\u94a5\u5319\u5148\u72b6\u6001\u538b\u7f29\uff08\u611f\u89c9\u8fd9\u9898\u4e0d\u662f\u7f51\u8def\u6d41\uff09\n\n\u5b9a\u4e49\u4e2a\u7ed3\u6784\u4f53\n\nx\uff0cy\u8868\u793a\u5750\u6807\uff0ck\u8868\u793a\u6b65\u6570\uff0ckey\u8868\u793a\u94a5\u5319\u7684\u60c5\u51b5\n\nv[x][y][tt]\u8868\u793a\u70b9\uff08x,y)\u5e26\u6709\u8fd9\u4e48\u591a\u7684\u94a5\u5319\u662f\u5426\u6765\u8fc7\n\nmap[x1][y1][x2][y2]\u8868\u793a\u4e24\u4e2a\u70b9\u76f4\u63a5\u662f\u5426\u6709\u5899\u6216\u8005\u662f\u95e8\uff0c0\u8868\u793a\u53ef\u4ee5\u5b57\u8282\u901a\u8fc7\n\nnum[x][y]\u8868\u793a\u70b9\uff08x,y)\u6709\u591a\u5c11\u628a\u94a5\u5319\n\ng[x][y][i]\u8868\u793a\u70b9\uff08x,y\uff09\u653e\u7684\u7b2ci\u628a\u94a5\u5319\n\n\u5751\u70b9\uff1a\uff08\u548c\u697c\u4e0b\u5927\u4f6c\u4e00\u6837\uff09\n\n1.\u94a5\u5319\u4e0d\u662f\u7528\u4e86\u5c31\u6ca1\u4e86\n\n2.\u4e00\u4e2a\u70b9\u53ef\u4ee5\u653e\u591a\u4e2a\u94a5\u5319\n\n3.\u521d\u59cb\u70b9\u53ef\u4ee5\u653e\u94a5\u5319\n\n4.\u522b\u5fd8\u4e86\u8f93\u51fa-1....\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<queue>\nusing namespace std;\nstruct node\n{\n    int x,y,k,key;\n};\nqueue<node> q;\nbool v[11][11][1<<11];\nint map[11][11][11][11];\nint g[11][11][11];\nint num[11][11];\nint n,m,p,k;\nint dx[4]={-1,1,0,0};\nint dy[4]={0,0,-1,1};\ninline int BFS()\n{\n    int tt=0;\n    for(int i=1;i<=num[1][1];i++) tt=tt|(1<<(g[1][1][i]-1));//\u628a\u70b9\u8d77\u70b9\u7684\u94a5\u5319\u72b6\u6001\u538b\u7f29\uff0c\u7136\u540e\u5b58\u5230\u6808\u91cc\u9762 \n    v[1][1][tt]=1;q.push((node){1,1,0,tt});\n    while(!q.empty())\n    {\n        node x=q.front();q.pop();\n        if(x.x==n && x.y==m) return x.k;//\u56e0\u4e3a\u662fBFS\uff0c\u627e\u5230\u5c31\u76f4\u63a5\u8f93\u51fa \n        for(int i=0;i<=3;i++)\n        {\n            int xx=x.x+dx[i];\n            int yy=x.y+dy[i];\n            if(1<=xx && xx<=n && 1<=yy && yy<=m)//\u5224\u65ad\u8fb9\u754c \n            {\n                if(map[x.x][x.y][xx][yy]==-1) continue;//\u5982\u679c\u4e0d\u80fd\u8d70 \n                int t;\n                if((t=map[x.x][x.y][xx][yy])!=0)//\u5982\u679c\u6ca1\u6709\u95e8\u7684\u94a5\u5319 \n                \tif((x.key&(1<<(t-1)))==0) continue;\n                int tt=x.key;//\u538b\u7f29\u4e00\u4e0b\u6361\u5230\u7684\u94a5\u5319 \n                for(int j=1;j<=num[xx][yy];j++)\n                \ttt=tt|(1<<(g[xx][yy][j]-1));\n                if(v[xx][yy][tt]) continue;//\u5982\u679c\u8fd9\u79cd\u65b9\u6848\u5df2\u7ecf\u88ab\u627e\u8fc7\u4e86\uff0c\u5c31\u4e0d\u7528\u518d\u627e\u4e86 \n                v[xx][yy][tt]=1;//\u8bb0\u5f55\u4e3a\u627e\u8fc7 \n                q.push((node){xx,yy,x.k+1,tt});//\u5165\u6808 \n            }\n        }\n    }\n    return -1;\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&p,&k);//\u8f93\u5165\u4ee5\u53ca\u521d\u59cb\u5316 \n    for(int i=1;i<=k;i++)\n    {\n        int x1,x2,y1,y2,g;\n        scanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&g);\n        if(g==0) map[x1][y1][x2][y2]=map[x2][y2][x1][y1]=-1;\n        else     map[x1][y1][x2][y2]=map[x2][y2][x1][y1]=g;\n    }\n    int s;\n    scanf(\"%d\",&s);\n    for(int i=1;i<=s;i++)\n    {\n        int x,y,p;\n        scanf(\"%d%d%d\",&x,&y,&p);\n        g[x][y][++num[x][y]]=p;\n    }\n    printf(\"%d\\n\",BFS());//\u8f93\u51fa \n    return 0;\n}\n```\n\n\u89e3\u7b54\u4ee5\u4e0b\u7591\u95ee\uff1a\n\n\u95ee\uff1a\u6b64\u9898\u4e3a\u4ec0\u4e48\u7528BFS\u800c\u4e0d\u662f\u6700\u77ed\u8def\n\n\u7b54\uff1a\u6b64\u9898\u4e3a\u4e00\u4e2a\u77e9\u9635\uff0c\u4e0d\u7528\u591a\u6b21\u66f4\u65b0\u4e00\u4e2a\u70b9\uff0c\u5148\u627e\u5230\u7684\u80af\u5b9a\u4e0d\u4f1a\u6bd4\u540e\u627e\u5230\u7684\u6b65\u6570\u8981\u591a",
        "postTime": 1533690823,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4e00\u4e2a\u8ff7\u5bab\uff0c\u6709\u4e9b\u5730\u65b9\u53ef\u4ee5\u8d70\uff0c\u6709\u4e9b\u5730\u65b9\u6709\u5899\u4e0d\u80fd\u8d70\uff0c\u6709\u4e9b\u5730\u65b9\u6709\u95e8\uff0c\u6709\u94a5\u5319\u624d\u80fd\u8d70\u3002\u95ee\u4ece$(1,1)$\u8d70\u5230$(n,m)$\u7684\u6700\u5c0f\u6b65\u6570\u3002\n\n\u627e\u6700\u5c0f\u6b65\u6570\uff0c\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230$\\text{bfs.}$\n\n\u90a3\u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\u8d70\u5230\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u54ea\u4e9b\u4fe1\u606f\u3002\n\n\u6709\uff1a\u5f53\u524d\u70b9\u5750\u6807$(i,j)$,\u5f53\u524d\u6b65\u6570$s$,\u5f53\u524d\u62e5\u6709\u7684\u94a5\u5319$v$.\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u72b6\u538b\u89e3\u51b3\u72b6\u6001\u95ee\u9898\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u53ef\u4ee5\u5f00\u542f$Q$\u7c7b\u95e8\uff0c\u90a3\u4e48\u8fd9\u4e2a$v$\u5bf9\u5e94\u4e8c\u8fdb\u5236\u7b2c$Q$\u4f4d\u5c31\u5e94\u8be5\u662f$1$.\n\n\u5f53\u6211\u4eec\u9047\u5230\u4e00\u6247\u95e8\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5224\u65ad:\n```cpp \nv>>d[x][y][xx][yy]&1\n```\n\u5373\u53ef\u3002\u8fd9\u6bb5\u610f\u601d\u662f\uff0c\u5982\u679c\u8fd9\u6247\u95e8\u5bf9\u5e94\u7c7b\u578b$(d[x][y][xx][yy])$\u5bf9\u5e94\u4f4d\u7f6e\u4e3a$1$,\u5219\u53ef\u4ee5\u5230\uff1b\u5982\u679c\u4e0d\u4e3a$1$\uff0c\u5219\u4e0d\u80fd\u8d70\u3002\n\n\u56e0\u4e3a\u90a3\u5c0f\u7684\u53ef\u601c\u7684\u6570\u636e\u8303\u56f4\uff0c\u6240\u4ee5\u8fd9\u4e2a\u56db\u7ef4\u6570\u7ec4\u663e\u7136\u5f00\u7684\u4e0b\u3002\n\n\u6211\u4eec\u8d70\u5230\u4e00\u4e2a\u683c\u5b50\uff0c\u8981\u5728\u62fe\u53d6\u5b83\u7684\u94a5\u5319\u4e4b\u524d\u5224\u65ad\uff0c\u800c\u4e0d\u662f\u5148\u62fe\u53d6\uff0c\u540e\u5224\u65ad\u3002\n\n\u66f4\u65b0\u72b6\u6001\u7684\u65f6\u5019\u4e0d\u8981\u4e0d\u5c0f\u5fc3\u628a\u57fa\u672c\u72b6\u6001\u7ed9\u6539\u4e86\u3002\n\n\u5f53\u4f60\u6572\u534a\u5929\u6572\u5b8c\u4ee3\u7801\uff0c\u53d1\u73b0$52points$,\u4e24\u4e2a$MLE$,\u4e00\u4e2a$TLE$.\n\n\u8003\u8651\u526a\u679d\u4e00\u6ce2\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u8d70\u5230\u8fd9\u91cc\uff0c\u8981\u66f4\u65b0\u7684\u4fe1\u606f\u6709\u54ea\u4e9b\uff1f\n\n\u66f4\u6539\u6b65\u6570\uff0c\u94a5\u5319\u4fe1\u606f\u3002\n\n\u90a3\uff0c\u5982\u679c\u6211\u4eec\u8d70\u5230\u8fd9\u4e2a\u70b9\uff0c\u5e76\u4e14\u94a5\u5319\u4fe1\u606f\u76f8\u540c\u7684\u8bdd\uff0c\u663e\u7136\u5c31\u4e0d\u7528\u518d\u8d70\u4e86\u3002\n\n\u5f00\u4e00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u4fe1\u606f\u526a\u679d\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,p,k,N,a[11][11];\nint d[11][11][11][11];\nconst int dx[4]={1,0,-1,0};\nconst int dy[4]={0,1,0,-1};\nstruct node{int i,j,v,s;};\nqueue<node>q;\nint v[11][11][1<<11];\nvoid solve(){\n\tint f=0;\n\tq.push((node){1,1,a[1][1],0});\n\twhile(!q.empty()){\n\t\tnode tmp=q.front();\n\t\tq.pop();\n\t\tint x=tmp.i,y=tmp.j,sta=tmp.v;\n\t\tif(x==n&&y==m){\n\t\t\tprintf(\"%d\\n\",tmp.s);\n\t\t\tf=1;break;\n\t\t}\n\t\tfor(int i=0;i<4;++i){\n\t\t\tint xx=dx[i]+x,yy=dy[i]+y;\n\t\t\tif(xx<1||yy<1||xx>n||yy>m||d[x][y][xx][yy]==2147483647||(xx==x&&yy==y))continue;\n\t\t\tif(!d[x][y][xx][yy]){\n\t\t\t\tif(v[xx][yy][sta|a[xx][yy]])continue;\n\t\t\t\tq.push((node){xx,yy,sta|a[xx][yy],tmp.s+1});v[xx][yy][sta|a[xx][yy]]=tmp.s+1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(!(sta>>d[x][y][xx][yy]&1))continue;\n\t\t\t\tif(v[xx][yy][sta|a[xx][yy]])continue;\n\t\t\t\tq.push((node){xx,yy,sta|a[xx][yy],tmp.s+1});\n\t\t\t\tv[xx][yy][sta|a[xx][yy]]=tmp.s+1;\n\t\t\t}\n\t\t}\n\t}\n\tif(!f)printf(\"-1\\n\");\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&p,&k);\n\tfor(int i=1;i<=k;++i){\n\t\tint x1,y1,x2,y2,g;\n\t\tscanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&g);\n\t\tif(g>=1){\n\t\t\td[x1][y1][x2][y2]=d[x2][y2][x1][y1]=g;\n\t\t\tcontinue;\n\t\t}\n\t\telse d[x1][y1][x2][y2]=d[x2][y2][x1][y1]=2147483647;\n\t}\n\tscanf(\"%d\",&N);\n\tfor(int i=1;i<=N;++i){\n\t\tint x1,y1,Q;\n\t\tscanf(\"%d%d%d\",&x1,&y1,&Q);\n\t\ta[x1][y1]|=(1<<Q);\n\t}\n\tsolve();\n\treturn 0;\n}\n```\n",
        "postTime": 1586420883,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u79cd\u72b6\u538b\u52a0\u6700\u77ed\u8def\u7684\u5957\u8def\u5728\u6211\u6821\u4eca\u5929\u7684\u96c6\u8bad\u91cc\u9762\u4f5c\u4e3a\u7b7e\u5230\u9898\u51fa\u73b0\u4e86\uff08\u751a\u81f3\u90a3\u9053\u9898\u66f4\u96be\uff09\uff0c\u7136\u540e\u665a\u4e0a\u5c31\u770b\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u987a\u624b\u5c31\u628a\u5b83\u5207\u4e86\u3002\u770b\u5230\u9898\u89e3\u91cc\u9762\u6ca1\u6709\u8fd9\u79cd\u5806\u4f18\u5316$dijkstra$\u7684\u505a\u6cd5\u4e8e\u662f\u5199\u4e00\u53d1\u9898\u89e3\u3002\n\n\u8fd9\u9053\u9898\u7684\u9898\u610f\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u65e0\u5411\u8fde\u901a\u56fe\uff0c\u901a\u8fc7\u67d0\u4e9b\u8fb9\u9700\u8981\u6ee1\u8db3\u7279\u5b9a\u7684\u6761\u4ef6\uff0c\u6c42\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u3002\u7531\u4e8e\u8fd9\u9053\u9898\u4e2d\u94a5\u5319\u79cd\u7c7b\u5f88\u5c11\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u72b6\u538b\u3002\u4e00\u4e2a\u4f4d\u7f6e\u62e5\u6709\u67d0\u4e2a\u94a5\u5319$q$\u5219\u5c06\u5230\u8fbe\u8fd9\u4e2a\u70b9\u53ef\u83b7\u5f97\u7684\u72b6\u6001\u6216\u4e0a\u4e00\u4e2a$(1 << (q - 1))$\uff0c\u67d0\u4f4d\u7f6e$i$\u4e0e$j$\u95f4\u6709\u95e8$g$\u5219\u7b49\u4ef7\u4e8e\u5230\u8fbe$i$\u65f6\u7684\u72b6\u6001\u8981\u5305\u542b$(1 << ( g - 1))$\u624d\u80fd\u901a\u8fc7\u8fd9\u6761\u8def\u3002\u7136\u540e\u5efa\u8fb9\u65f6\u5c06\u9650\u5236\u52a0\u8fdb\u53bb\uff0c\u8dd1\u6700\u77ed\u8def\u65f6\u66f4\u65b0\u5f53\u524d\u72b6\u6001\u5373\u53ef(\u8be6\u89c1\u4ee3\u7801)\u3002\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u5176\u5b9e\u53ef\u4ee5\u51fa\u5f97\u66f4\u96be\uff0c\u5373\u652f\u6301\u968f\u610f\u8fde\u8fb9\u53ca\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u6709\u5f88\u591a\u9053\u95e8\u3002\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline void read(int &x){\n    char c = getchar();\n    int p = 1;\n    x = 0;\n    while(!isdigit(c)){\n        if(c == '-')p = -1;\n        c = getchar();\n    }\n    while(isdigit(c)){\n        x = (x << 1) + (x << 3) + (c ^ '0');\n        c = getchar();\n    }\n    x *= p;\n}\nconst int mx = 405;\nstruct edge{\n    int to, next, lim, w;\n}e[mx << 1];\nint head[mx], tot, dis[mx][(1 << 11)], n, m, p, k, s, to[mx];\nint dir[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nmap<pair<int, int>, int>ma1, ma2;\ninline int get_pos(int xx, int yy){\n    return (xx - 1) * m + yy;\n}\n#define x first\n#define y second\n#define mp make_pair\ntypedef pair<pair<int, int>, int> pii;\npriority_queue<pii, vector<pii >, greater<pii > >qu;\ninline void add(int u, int v, int w, int lim){\n    e[++tot].to = v;\n    e[tot].w = w;\n    e[tot].lim = lim;\n    e[tot].next = head[u];\n    head[u] = tot;\n}\ninline int _min(int a, int b){\n    return a < b ? a : b;\n}\ninline void dij(){\n    qu.push(mp(mp(0, 1), 0));\n    memset(dis, 0x3f, sizeof(dis));\n    int ans = INT_MAX;\n    dis[1][0] = 0;\n    int N = get_pos(n, m);\n    pii tmp;\n    while(!qu.empty()){\n        tmp = qu.top();\n        qu.pop();\n        int u = tmp.x.y, w = tmp.x.x, con = tmp.y;\n        if(dis[u][con] < w)continue;\n        if(u == N)ans = _min(ans, w);\n        con |= to[u];\n        for(register int i = head[u]; i; i = e[i].next){\n            if((con | e[i].lim) != con)continue;\n            int v = e[i].to;\n            if(dis[v][con] > w + e[i].w){\n                dis[v][con] = w + e[i].w;\n                qu.push(mp(mp(dis[v][con], v), con));\n            }\n        }\n    }\n    if(ans == INT_MAX)puts(\"-1\");\n    else printf(\"%d\\n\", ans);\n}\nint main(){\n    //freopen(\".in\", \"r\", stdin);\n    //freopen(\".out\", \"w\", stdout);\n    read(n), read(m), read(p);\n    read(k);\n    int xx1, yy1, xx2, yy2, g;\n    for(register int i = 1; i <= k; ++i){\n        read(xx1), read(yy1), read(xx2), read(yy2), read(g);\n        int pos1 = get_pos(xx1, yy1), pos2 = get_pos(xx2, yy2);\n        if(g == 0)ma2[mp(pos1, pos2)] = 1, ma2[mp(pos2, pos1)] = 1;\n        else ma1[mp(pos1, pos2)] = (1 << (g - 1)), ma1[mp(pos2, pos1)] = (1 << (g - 1));\n    }\n    read(s);\n    int xx, yy, q;\n    for(register int i = 1; i <= s; ++i){\n        read(xx), read(yy), read(q);\n        to[get_pos(xx, yy)] |= (1 << (q - 1));\n    }\n    for(register int i = 1; i <= n; ++i){\n        for(register int j = 1; j <= m; ++j){\n            int pos1 = get_pos(i, j);\n            for(register int d = 0; d < 4; ++d){\n                int xx = i + dir[d][0], yy = j + dir[d][1];\n                if(xx >= 1 && xx <= n && yy >= 1 && yy <= m){\n                    int pos2 = get_pos(xx, yy);\n                    if(ma2[mp(pos1, pos2)]){\n                        continue;\n                    }\n                    add(pos1, pos2, 1, ma1[mp(pos1, pos2)]);\n                    add(pos2, pos1, 1, ma1[mp(pos1, pos2)]);\n                }\n            }\n        }\n    }\n    dij();\n    return 0;\n}\n```",
        "postTime": 1534771419,
        "uid": 20865,
        "name": "lizongru",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Point\n{\n    int x,y,step;\n    int key;\n};\nint det[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\nPoint q[500000],s;\nint f=1,e=1;\nbool used[20][20][1024];\nint g[20][20][20][20];\nint n,m,p,k,ks;\nint gk[20][20][10],len[20][20];\nint main()\n{\n    cin>>n>>m>>p>>k;\n    for (int i=1;i<=k;i++)\n    {\n        int xa,ya,xb,yb;\n        cin>>xa>>ya>>xb>>yb;\n        cin>>g[xa][ya][xb][yb];\n        if (g[xa][ya][xb][yb] == 0) g[xa][ya][xb][yb] = -1;\n        g[xb][yb][xa][ya] = g[xa][ya][xb][yb];\n    }\n    cin>>ks;\n    for (int i=1;i<=ks;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        len[x][y]++;\n        cin>>gk[x][y][len[x][y]]; \n    }\n    s.x=1,s.y=1;\n    s.step=0,s.key=0;\n    used[1][1][0]=1;\n    q[1]=s;\n    while(f<=e)\n    {\n        Point u=q[f];\n        f++;\n        for (int i=0; i<4;i++)\n        {\n            Point v;\n            v.x=u.x+det[i][0], v.y=u.y+det[i][1];\n            v.step=u.step+1;\n            v.key=u.key;\n            if (v.x<1||v.x>n) continue;\n            if (v.y<1||v.y>m) continue;\n            if (g[u.x][u.y][v.x][v.y]==-1) continue;\n            int tmp=g[u.x][u.y][v.x][v.y];\n            if (tmp>0) \n            { \n                if ((u.key>>(tmp-1))%2== 0)\n                    continue;\n            }\n            if (len[v.x][v.y]!=0)\n            {\n                for (int j=1;j<=len[v.x][v.y];j++)\n                {\n                    int tmp=gk[v.x][v.y][j];\n                    if ((u.key>>(tmp-1))%2==0)\n                        v.key+=(1<<(tmp-1)) ;\n                }\n            }\n            if (used[v.x][v.y][v.key]==0)\n            {\n                e++;\n                q[e]=v;\n                used[v.x][v.y][v.key]=1;\n                if (v.x==n&&v.y==m) \n                {\n                    cout<<v.step<<endl;\n                    return 0;\n                }\n            }\n        }\n    }\n    cout<<-1;\n    return 0;\n}\n```\n\u8fd9\u662f\u4e00\u9053\u5f88\u96be\u5f88\u96be\u7684\u5bbd\u641c\u7684\u9898\u76ee\uff08\u7d2b\u9898\uff01\uff09\uff0c\u4f46\u53ea\u8981\u5f04\u6e05\u601d\u8def\u96be\u5ea6\u4e0d\u5927\uff08\u600e\u6837\u8868\u793a\u5f53\u524d\u72b6\u6001\uff09\u3002\n\n\u5728\u8fd9\u4e2a\u9898\u76ee\u4e2d\uff0c**\u5173\u952e\u662f\u600e\u4e48\u8868\u793a\u5f53\u524d\u62ff\u5230\u94a5\u5319\u7684\u72b6\u6001**\uff0c\u7528\u7ed3\u6784\u4f53\u6765\u6a21\u62df\u961f\u5217\u2014\u2014\u6700\u57fa\u672c\u7684\u601d\u8def\u3002\u53ef\u4ee5\u5f00\u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4\u6765\u8bb0\u5f55\u54ea\u4e9b\u72b6\u6001\u5df2\u7ecf\u6709\u8fc7\u4e86\uff0c\u9632\u6b62\u91cd\u590d\u5165\u961f\u5bfc\u81f4\u7b54\u6848\u51fa\u9519\u3002\n\n\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u6bcf\u4e00\u628a\u94a5\u5319\u7684\u72b6\u6001\u62ff\u5230\u94a5\u5319\u662f1\uff0c\u6ca1\u6709\u62ff\u5230\u662f0\uff0c\u7b2c\u4e00\u4f4d\u662f0.\u6bd4\u5982\uff0c\u73b0\u5728\u6211\u7684\u72b6\u6001\u662f\u201c000000000\u201d\uff0c\u8868\u793a\u6ca1\u6709\u94a5\u5319\u3002\u5f53\u6211\u8d70\u5230\u4e00\u4e2a\u683c\u5b50\uff0c\u91cc\u9762\u6709\u56db\u3001\u4e03\u53f7\u94a5\u5319\uff0c\u53ea\u8981\u628as[4]\uff0cs[7]\u6539\u4e3a\u20181\u2019\u5c31\u884c\u4e86\uff0c\u72b6\u6001\u66f4\u65b0\u4e3a\u201c0000100100\u201d\u3002\u4e4b\u540e\u5c31\u662f\u57fa\u672c\u7684\u5bbd\u641c\u5957\u8def\uff0c\u8bb0\u5f97\u4e0d\u884c\u8f93\u51fa-1.\n\n\u5e0c\u671b\u6211\u7684\u89e3\u8bf4\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\u3002\n",
        "postTime": 1571317122,
        "uid": 189012,
        "name": "SKTelecomT1_Faker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "\u867d\u7136\u8fd9\u9898\u5728\u7f51\u7edc\u6d4124\u9898\u91cc\uff0c\u4f46\u662f\u8fd9\u9898\u53ef\u4ee5\u7528**BFS**\u505a   \n\n\u57fa\u7840BFS\u4e2d \u72b6\u6001\u4e00\u822c\u90fd\u662f\u67d0\u4e2a\u4f4d\u7f6e$(x,y)$\u548c\u6b65\u6570$step$  \n\u8fd9\u9898\u8fd8\u9700\u8981\u8bb0\u5f55**\u76ee\u524d\u62e5\u6709\u94a5\u5319**\u7684\u60c5\u51b5  \n\u5373\u4f7f\u5904\u5728\u540c\u4e00\u4f4d\u7f6e\uff0c\u62ff\u8fc7\u94a5\u5319\u548c\u6ca1\u62ff\u94a5\u5319\u7684\u72b6\u6001\u662f\u4e00\u5b9a\u4e0d\u4e00\u6837\u7684\uff0c\u6700\u76f4\u89c2\u7684\u7406\u89e3\u65b9\u5f0f\u5c31\u662f\u8fb9\u4e0a\u6709\u4e00\u6247\u95e8\uff0c\u5f00\u95e8\u4e86\u76f4\u63a5\u5230\u7ec8\u70b9\uff0c\u5426\u5219\u7ed5\u5f88\u8fdc\u7684\u8def  \n\n\u8bb0\u5f55\u65b9\u5f0f:**\u72b6\u538b(\u72b6\u6001\u538b\u7f29)**  \n**\u4e8c\u8fdb\u5236\u7b2ci\u4f4d\u4ee3\u8868\u662f\u5426\u62e5\u6709\u80fd\u5f00i\u7c7b\u95e8\u94a5\u5319**  \n$p<=10$ \u5b8c\u5168\u6ca1\u95ee\u9898  \n\u7531\u4e8e\u540c\u7c7b\u94a5\u5319\u4f5c\u7528\u76f8\u540c \u53ea\u7528\u8bb0\u5f55\u7c7b\u522b \u5373\u6309\u95e8\u8bb0\u5f55\u94a5\u5319\u83b7\u53d6\u72b6\u51b5  \n\n\u6700\u540e\u5c31\u662fbfs\u6a21\u677f\u4e86  \n\n\u72b6\u538b\u4f7f\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c \u53ef\u4ee5\u5f88\u65b9\u4fbf\u8fd8\u5feb\u5730\u5b9e\u73b0\u5f88\u591a\u64cd\u4f5c  \n\n\u5c0f\u6280\u5de7:0\u76f4\u63a5\u89c6\u4e3a\u6ca1\u6709\u5bf9\u5e94\u94a5\u5319\u7684\u95e8\n\n## code:\n```cpp\n#include <map>\n#include <list>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define LL long long\nusing namespace std;\n\nchar vis[11][11][4000] = {0}; // vis[x][y][z]\u8868\u793a\u5728x,y \u62e5\u6709\u94a5\u5319\u60c5\u51b5\u4e3az\nint key[11][11] = {0}; // \u8bb0\u5f55\u4e00\u4e2a\u70b9\u94a5\u5319\u60c5\u51b5(\u8fd8\u662f\u72b6\u6001\u538b\u7f29\u8fc7\u7684) \u6ce8\u610f\u4e00\u4e2a\u70b9\u53ef\u80fd\u6709\u591a\u628a\u94a5\u5319\nint dor[11][11][11][11] = {0}; // \u5899\u76f4\u63a5\u66b4\u529b\u56db\u7ef4\u5b58 \u65b9\u4fbf\u5b9e\u73b0\n\nint n,m,p,k,a,b,c,d,e,tx,ty,i,cnt = 0;\nint dx[4] = {-1, 0, 1, 0}; // \u65b9\u4f4d\u6570\u7ec4\nint dy[4] = { 0,-1, 0, 1};\n\nstruct node{\n\tint x,y,step,key; // \u5750\u6807\uff0c\u6b65\u6570\uff0c\u94a5\u5319\n}h,t;\n\nqueue <node> q;\n\nvoid bfs(){\n\th.x = 1; h.y = 1; h.step = 0; h.key = key[1][1]; vis[h.x][h.y][h.key] = 1; q.push(h);\n\twhile(!q.empty()){\n\t\th = q.front(); q.pop();\n\t\tcnt ++;\n\t\tif(h.x == n && h.y == m){\n\t\t\tprintf(\"%lld\\n\",h.step); // \u5230\u7ec8\u70b9\n\t\t\treturn;\n\t\t}\n\t\tfor(i = 0;i < 4;i ++){\n\t\t\ttx = h.x + dx[i],ty = h.y + dy[i];\n\t\t\tif(tx < 1 || ty < 1 || tx > n || ty > m) continue;\n\t\t\tif(dor[h.x][h.y][tx][ty] >= 0) if(!(h.key & (1 << dor[h.x][h.y][tx][ty]))) continue;\n        // \u662f\u5426\u6709\u95e8/\u662f\u5426\u6709\u5f00\u8fd9\u95e8\u7684\u94a5\u5319\n\t\t\tt.x = tx; t.y = ty; t.step = h.step + 1;\n\t\t\tt.key = h.key | key[tx][ty]; // \u76f4\u63a5\u6309\u4f4d\u6216\u5f53\u524d\u683c\u7684\u94a5\u5319\n\t\t\tif(vis[tx][ty][t.key]) continue; // \u76ee\u524d\u72b6\u6001\u5df2\u8bbf\u95ee\u8fc7\n\t\t\tvis[tx][ty][t.key] = 1;\n\t\t\tq.push(t);\n\t\t}\n\t}\n\tprintf(\"-1\\n\"); // \u65e0\u89e3\n\treturn;\n}\n\nint main(){\n\tmemset(dor,-1,sizeof(dor));\n\tscanf(\"%d %d %d\",&n,&m,&p);\n\tscanf(\"%d\",&k);\n\twhile(k --){\n\t\tscanf(\"%d %d %d %d %d\",&a,&b,&c,&d,&e);\n\t\tdor[a][b][c][d] = e;\n\t\tdor[c][d][a][b] = e; // \u5b58\u5899\n\t}\n\tscanf(\"%d\",&k);\n\twhile(k --){\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\tkey[a][b] |= (1 << c); // \u6309\u4f4d\u6216\n\t}\n\tbfs();\n\treturn 0;\n}\n```",
        "postTime": 1553002277,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "### \u601d\u8def\uff1a\n**\u5206\u5c42\u56fe**+\uff08\u7a00\u6709\u7684\uff09**dijkstra**\n### \u89e3\u9898\u6b65\u9aa4\uff1a\n#### 0. \u8bfb\u5165\n1). \u8fd9\u4e00\u6b65\u2026\u2026\u4e0d\u8bb2\u4e86\u5427\uff01\n#### 1. \u5efa\u56fe\n1). \u5206\u5c42\u56fe\u662f\u5c06\u56fe\u5206\u6210\uff08**1<<\u94a5\u5319\u79cd\u7c7b**\uff09\u5c42\uff08\u6ce8\u610f\uff1a\u6211\u53d1\u73b0\u5176\u4ed6dalao\u4eec\u90fd\u662f\u4ee5**p**\u4e3a**\u94a5\u5319\u79cd\u7c7b**\uff0c\u6211\u8ba4\u4e3a\u4e0d\u59a5\u3002\u56e0\u4e3a\u9898\u76ee\u4e2d**p**\u4e5f**\u5305\u542b\u4e86\u5899**\uff0c\u56e0\u6b64**\u52a0\u5927\u4e86\u8ba1\u7b97\u91cf**\uff01\uff01\uff01\uff09\uff1b\n\n2). \u8fde\u63a5\u5c42\u5185\u8fde\u8fb9\uff1a\u4ece\u6bcf\u4e2a\u70b9**\u5411\u4e0b**\u548c**\u5411\u53f3**\u8fde\u8fb9\u3002\u5982\u679c\u6709\u5899\uff0c\u5c31\u4e0d\u8fde\uff0c\u5426\u5219\u8fde\u4e00\u6761**\u6743\u503c\u4e3a1**\u7684\u8fb9\uff1b\n\n3). \u5404\u5c42\u95f4\u8fde\u8fb9\uff1a\u7528\u2018&\u2019\u4f4d\u8fd0\u7b97\u6765\u67e5\u627e**\u54ea\u4e00\u5c42\u6709\u6240\u9700\u8981\u7684\u94a5\u5319**\uff0c\u5728\u4e24\u4e2a\u4f4d\u7f6e\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\u3002\n#### 2. \u6700\u77ed\u8def\u6c42\u7b54\u6848\n1). \u6700\u77ed\u8def\u6c42\u51fa**dis**\u6570\u7ec4\uff1b\n\n2). \u679a\u4e3e**\u6bcf\u4e00\u5c42**\u7684\u201c\u5165\u53e3\u201d\uff0c\u6c42\u51fa\u7b54\u6848\u3002\n\n\n\n------------\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read()\n{\n\tint f=1,res=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') res=res*10+ch-'0',ch=getchar();\n\treturn res*f;\n}\n#define inf 999999\nstruct node\n{\n    int k,dis;\n    bool operator<(const node &a)const\n    {\n        return a.dis<dis;\n    }\n};\npriority_queue<node> q;\nstruct edge{int x,y;}kypos[20][20];\nint ans=inf,row,line,p,keyn,K,S,tot=0,sum=0,all=0,layer=0;\nint dis[(1<<14)*100],v[(1<<14)*100],kycnt[15],cc[15],num[200][200],fg[200][200];\nvector<int> nxt[(1<<14)*100],far[(1<<14)*100];\nvoid init()\n{\n\trow=read(),line=read(),p=read(),K=read();\n\tfor(int i=1; i<=row; i++)\n\t\tfor(int j=1; j<=line; j++) num[i][j]=++sum;\n\tfor(int i=1; i<=K; i++)\n\t{\n\t\tint x1=read(),y1=read(),x2=read(),y2=read(),g=read();\n\t\tint j=num[x1][y1],k=num[x2][y2];\n\t\tif(g&&!cc[g]) cc[g]++,keyn++;\n\t\tif(!g) g=-1;\n\t\tfg[j][k]=g;\n\t}\n\tS=read();\n\tfor(int i=1; i<=S; i++)\n\t{\n\t\tint x=read(),y=read(),q=read();\n\t\tif(!cc[q]) cc[q]++,keyn++;\n\t\tkycnt[q]++,kypos[q][kycnt[q]].x=x,kypos[q][kycnt[q]].y=y;\n\t}\n\tkeyn++;\n}\nvoid add(int x,int y,int w)\n{\n\tnxt[x].push_back(y),far[x].push_back(w);\n}\nvoid build()\n{\n\tbool kyflag[20]={0};\n\tsum=row*line,layer=1<<keyn,all=layer*sum;\n\tfor(int k=0; k<layer; k++)\n\t{\n\t\tfor(int i=1; i<=keyn; i++)\n\t\t\tif(k&(1<<(i-1))) kyflag[i]=true;\n\t\t\telse kyflag[i]=false;\n\t\tfor(int i=1; i<=row; i++)\n\t\t\tfor(int j=1; j<=line; j++)\n\t\t\t{\n\t\t\t\tint x=num[i][j],y=num[i+1][j];\n\t\t\t\tif(y&&fg[x][y]!=-1)\n\t\t\t\t\tif(!fg[x][y]||kyflag[fg[x][y]]) add(k*sum+x,k*sum+y,1),add(k*sum+y,k*sum+x,1);\n\t\t\t\ty=num[i][j+1];\n\t\t\t\tif(y&&fg[x][y]!=-1)\n\t\t\t\t\tif(!fg[x][y]||kyflag[fg[x][y]]) add(k*sum+x,k*sum+y,1),add(k*sum+y,k*sum+x,1);\n\t\t\t}\n\t\tfor(int i=1; i<=keyn; i++)\n\t\t\tif(!kyflag[i])\n\t\t\t{\n\t\t\t\tint x=k+(1<<(i-1));\n\t\t\t\tfor(int j=1; j<=kycnt[i]; j++)\n\t\t\t\t{\n\t\t\t\t\tint p=num[kypos[i][j].x][kypos[i][j].y];\n\t\t\t\t\tadd(k*sum+p,x*sum+p,0);\n\t\t\t\t}\n\t\t\t}\n\t}\n}\nvoid dijkstra()\n{\n    memset(v,0,sizeof(v));\n    for(int i=1; i<=all; i++) dis[i]=inf;\n    dis[1]=0,q.push((node){1,0});\n    while(!q.empty())\n    {\n        int x=q.top().k;q.pop();\n        if(v[x]) continue;v[x]=1;\n        for(int i=0; i<nxt[x].size(); i++) \n        {\n            int y=nxt[x][i],z=far[x][i];\n            if(dis[y]>dis[x]+z)\n            {\n                dis[y]=dis[x]+z;\n            \tq.push((node){y,dis[y]});\n    \t\t}\n\t\t}\n\t}\n}\nvoid solve()\n{\n\tint i,T;\n\tdijkstra();\n\tT=num[row][line];\n\tfor(int i=0; i<layer; i++) ans=min(ans,dis[i*sum+T]);\n\t/*\n\tint x=0;\n\tfor(int i=0; i<layer; i++)\n\t{\n\t\tfor(int j=1; j<=row; j++)\n\t\t{\n\t\t\tfor(int k=1; k<=line; k++) cout<<dis[++x]<<\" \";\n\t\t\tcout<<endl;\n\t\t}\n\t\tcout<<endl;\n\t}\n\t*/\n\tif(ans<inf) printf(\"%d\\n\",ans);\n\telse puts(\"-1\");\n}\nint main()\n{\n\tinit();\n\tbuild();\n\tsolve();\n\treturn 0;\n}\n```\n",
        "postTime": 1550920120,
        "uid": 133548,
        "name": "Conrad",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u4e00\u4e2a\u8ff7\u5bab\uff0c\u7ed9\u5b9a\u4e00\u4e2aN*M\u7684\u8ff7\u5bab\uff0c\u7ed9\u51fa\u95e8\u4e0e\u5899\u7684\u4f4d\u7f6e\u8fd8\u6709\u94a5\u5319\u7684\u4f4d\u7f6e\n\u6c42\u51fa\u4ece(1,1)\u5230\uff08n,m\uff09\u7684\u6700\u77ed\u8def\u5f84\u3002\n### \u89e3\u6cd5\nBFS\u65e0\u654c\u3002\n### \u96be\u70b9\n\u4f1a\u6709\u591a\u628a\u94a5\u5319\u51e0\u591a\u4e2a\u95e8\uff0c\u4e14\u95e8\u662f\u53cc\u5411\u7684 \u3002\n### \u4e00\u822c\u4eba\u4e0d\u4f1a\u8e29\u5230\u7684\u5751\n\u4e00\u628a\u94a5\u5319\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c~~\u9b54\u5854\u7684\u9505~~\u3002\n### \u89e3\u9898\u601d\u8def\n\u4ece\uff081,1\uff09\u5f00\u59cb\u76f4\u63a5\u8dd1BFS\uff0c\u7136\u540e\u5728BFS\u91cc\u5224\u65ad\u94a5\u5319\u548c\u95e8\u3002\n### \u4e0b\u9762\u76f4\u63a5\u8d34\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>//\u7f8e\u7f8e\u7684\u4e07\u80fd\u5934 \nusing namespace std;\nstruct Point\n{\n\tint x, y, step;\n\tbool b[11];//\u8bb0\u5f55\u662f\u5426\u94a5\u5319 \n}s; \nbool used[11][11][2100];\nint det[4][2] ={{1,0},{-1,0},{0,1},{0,-1}};\nint n, m, p, k, hk;\nint g[11][11][11][11];\nbool h[11][11][11];\nPoint q[2001510];//\u961f\u5217\u5f00\u5927\u4e9b\uff0c\u4e0d\u6015\u7206\u7a7a\u95f4 \nint f = 1, e = 0;\nint gen(Point u)\n{\n\tint res = 0, tmp = 1;\n\tfor (int i = 1; i <= 10; i++)\n\t{\n\t\tif (u.b[i] == 1)\n\t\t{\n\t\t\tres = res + tmp;\n\t\t}\n\t\ttmp = tmp * 2;\n\t}\n\treturn res;\n}//\u4e8c\u8fdb\u5236\u538b\u4f4d \nint main()\n{\n\tmemset(g, -1, sizeof(g));//memset\u662f\u597d\u4e60\u60ef \n\tcin >> n >> m >> p >> k;\n\tif (n == 1 && m == 1)\n\t{\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}//\u7279\u5224\u5730\u56fe\u5927\u5c0f\u4e3a1 \n\tfor (int i = 1; i <= k; i++)\n\t{\n\t\tint x1, y1, x2, y2;\n\t\tcin >> x1 >> y1 >> x2 >> y2;\n\t\tcin >> g[x1][y1][x2][y2];\n\t\tg[x2][y2][x1][y1] = g[x1][y1][x2][y2];//\u95e8\u662f\u53cc\u5411\u7684 \n\t}\n\tcin >> hk;\n\tfor (int i = 1; i <= hk; i++)\n\t{\n\t\tint x1, y1, z1;\n\t\tcin >> x1 >> y1 >> z1;\n\t\th[x1][y1][z1] = 1; \n\t}\n\ts.x = 1, s.y = 1, s.step = 0;\n\tmemset(s.b, 0, sizeof(s.b));//\u6e05\u7a7a\u94a5\u5319 \n\te++;\n\tq[e] = s;\n\tused[1][1][0] = 1;\n\twhile (f <= e)//\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a \n\t{\n\t\tPoint u = q[f];\n\t\tf++;\n\t\tfor (int i = 0; i < 4; i++)\n\t\t{\n\t\t\tPoint v = u;\n\t\t\tv.x = u.x + det[i][0], v.y = u.y + det[i][1], v.step = u.step + 1;\n\t\t\tif (v.x < 1 || v.x > n || v.y < 1 || v.y > m) continue;//\u82e5\u679c\u8d8a\u754c \n\t\t\tif (g[u.x][u.y][v.x][v.y] == 0) continue;//\u5982\u679c\u662f\u5899 \n\t\t\tif (g[u.x][u.y][v.x][v.y] > 0 && v.b[   g[u.x][u.y][v.x][v.y]   ] == 0) continue;//\u5982\u679c\u662f\u95e8\u4e14\u6ca1\u6709\u94a5\u5319 \n\t\t\tfor (int i = 1; i <= 10; i++)\n\t\t\t{\n\t\t\t\tif (h[v.x][v.y][i]  == 1)\n\t\t\t\t\tv.b[i]  = 1;//\u6361\u94a5\u5319 \n\t\t\t}\n\t\t\tif (used[v.x][v.y][gen(v)] == 1) continue; //\u54c8\u5e0c\u5224\u91cd \n\t\t\tif (v.x == n && v.y == m)\n\t\t\t{\n\t\t\t\tcout << v.step << endl;\n\t\t\t\treturn 0;//\u627e\u5230\u7ec8\u70b9 \n\t\t\t}\n\t\t\te++;\n\t\t\tq[e] = v;\n\t\t\tused[v.x][v.y][gen(v)] = 1;//\u8fdb\u961f\u5217 \n\t\t}\n\t}\n\tcout << -1 << endl;//\u5982\u679c\u65e0\u89e3 \n\treturn 0;//\u534e\u4e3d\u7684\u7ed3\u675f \n}\n```",
        "postTime": 1546856205,
        "uid": 55995,
        "name": "\u6e90\u6c0f\u53ef\u4ee5\u5403\u5417",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "# bfs+\u4e8c\u8fdb\u5236\u72b6\u538b\n\u8fd9\u8ddf\u7f51\u7edc\u6d41\u6709\u4e2a\u5c41\u5173\u7cfb\uff08\u867d\u7136\u4e0d\u786e\u5b9a\u662f\u4e0d\u662f\u53ef\u4ee5\u7f51\u7edc\u6d41\u4e71\u8111\u4e00\u6ce2\u6df7\u8fc7\u53bb\uff09\n\n\u9996\u5148\u770b\u5230\u8fd9\u9898\uff0c\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662fbfs\u66b4\u529b\u3002\u4f46\u662f\u8fd9\u6837\u5c31\u8003\u8651\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u56e0\u4e3a\u6709\u53ef\u80fd\u4e3a\u4e86\u53d6\u94a5\u5319\u800c\u591a\u8d70\u5f88\u591a\u8def\u6216\u6298\u8fd4\uff0c\u6240\u4ee5\u5c31\u4e0d\u80fd\u8bbevis\u6216dis\u6570\u7ec4\uff0c\u6240\u4ee5\u5f88\u6709\u53ef\u80fd\u5b58\u4e0d\u4e0b~~\u660e\u660e\u662f\u7684\u786e\u5b58\u4e0d\u4e0b~~\n\n50\u5206\u4ee3\u7801\uff1a\n\n```cpp\n#include<queue>\n#include<cstring>\n#include<cstdio>\n \n#define N 15\n \nusing namespace std;\n \nint n,m,p,k,s,door[N][N][N][N],fx[4]= {-1,0,1,0},fy[4]= {0,1,0,-1},key[N][N];\nbool vis[N][N];\n \nstruct data {\n    int x,y,s;\n    bool key[N];\n//  bool operator < (const data &c) const {\n//      return s>c.s;\n//  }\n} now,a;\n \nqueue<data>q;\n \nint read(){\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=10*x+ch-'0';\n        ch=getchar();\n    }\n    return x;\n}\n \nbool right(int x,int y) {\n    if(x>=1&&x<=n&&y>=1&&y<=m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n \nint dijkstra() {\n    a.x=1;\n    a.y=1;\n    a.key[key[1][1]]=true;\n//  vis[1][1]=true;\n    q.push(a);\n    while(!q.empty()&&(q.front().x!=n||q.front().y!=m)) {\n        now=q.front();\n        q.pop();\n//      printf(\"%d %d %d\\n\",now.x,now.y,now.s);\n//      if(vis[now.x][now.y]){\n//          continue;\n//      }\n//      vis[now.x][now.y]=true;\n        for(int i=0; i<4; i++) {\n            int xi=now.x+fx[i];\n            int yi=now.y+fy[i];\n            if(right(xi,yi)/*&&!vis[xi][yi]*/&&(door[now.x][now.y][xi][yi]&&(door[now.x][now.y][xi][yi]==-1||(now.key[door[now.x][now.y][xi][yi]])))) {\n                a=now;\n                a.x=xi;\n                a.y=yi;\n                a.s++;\n                a.key[key[xi][yi]]=true;\n                q.push(a);\n            }\n        }\n    }\n    if(q.empty()) {\n        return -1;\n    } else {\n        return q.front().s;\n    }\n}\n \nint main() {\n    memset(door,-1,sizeof(door));\n    n=read();m=read();p=read();k=read();\n    for(int i=1; i<=k; i++) {\n        int xi1,yi1,xi2,yi2,num;\n        xi1=read();yi1=read();xi2=read();yi2=read();num=read();\n        door[xi1][yi1][xi2][yi2]=num;\n        door[xi2][yi2][xi1][yi1]=num;\n    }\n    s=read();\n    for(int i=1; i<=s; i++) {\n        int xi,yi,num;\n        xi=read();yi=read();num=read();\n        key[xi][yi]=num;\n    }\n    printf(\"%d\\n\",dijkstra());\n    return 0;\n}\n```\n\n\u7136\u540e\u5c31MLE\u4e862\u4e2a\u70b9\uff0cTLE\u4e861\u4e2a\u70b9\u3002\n\n\u6240\u4ee5\u8fd9\u662f\u6211\u4eec\u8981\u60f3\uff0c\u600e\u4e48\u53bb\u4f18\u5316\u2014\u2014**\u72b6\u538b**\u3002\n\n**\u72b6\u538b\u7684\u4e3b\u4f53\u601d\u8def\u662f\uff1a\u7528\u4e8c\u8fdb\u5236\u6765\u5b58\u662f\u5426\u6709\u8fd9\u4e2a\u94a5\u5319\uff0c\u5982\u679c\u6709\u90a3\u4e00\u4f4d\u5c31\u662f1\uff0c\u5426\u5219\u4e3a0\uff0c\u8fd9\u4e48\u505a\u56e0\u4e3a2\u8fdb\u5236\u53ea\u67090\u62161\u3002\u6bd4\u5982\uff0c\u67095\u79cd\u94a5\u5319\uff0c\u4f46\u6211\u53ea\u67091\u53f7\u30013\u53f7\u94a5\u5319\uff0c\u5c31\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u5b58\u4e3a\uff1a00101\u3002**\n\n**\u81f3\u4e8e\u5177\u4f53\u7684\u5b58\u6cd5\uff0c\u5c31\u5f97\u6d89\u53ca\u5230\u4f4d\u8fd0\u7b97\u7b26\u201c|\u201d\uff0c\u5b83\u80fd\u5c06\u4e24\u4e2a\u6570\u8f6c\u4e3a\u4e8c\u8fdb\u5236\uff0c\u7136\u540e\u4f9d\u6b21\u6bd4\u8f83\u6bcf\u4e00\u4f4d\uff0c\u53ea\u8981\u8fd9\u4e24\u4e2a\u6570\u7684\u67d0\u4e00\u4f4d\u4e0a\u6709\u4e00\u4e2a\u4e3a1\uff0c\u90a3\u4e48\u7b54\u6848\u7684\u8fd9\u4e00\u4f4d\u5c31\u4e3a1\uff0c\u5426\u5219\u4e3a0\uff0c\u8fd9\u6837\u5c31\u80fd\u66f4\u65b0\u5df2\u6709\u7684\u94a5\u5319\u3002\u81f3\u4e8e\u770b\u67d0\u4e00\u4e2a\u94a5\u5319\u4ed6\u6709\u6ca1\u6709\uff0c\u53ea\u7528\u5c06\u5df2\u6709\u7684\u94a5\u5319\u7684\u4e8c\u8fdb\u5236\u6570\u53f3\u79fb\uff08>>\uff09\u9700\u8981\u7684\u94a5\u5319\u6570\u4f4d\u5c31\u884c\u4e86\u518d\u53d6\u672b\u4f4d\u5c31\u884c\u4e86\u3002**\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<queue>\n#include<cstring>\n#include<cstdio>\n  \n#define N 11\n\nusing namespace std;\n  \nint n,m,p,k,s,door[N][N][N][N],fx[4]= {-1,0,1,0},fy[4]= {0,1,0,-1},key[N][N];\nbool vis[N][N][1000];//\u524d\u4e24\u4e2a\u6846\u5185\u662f\u5750\u6807\uff0c\u540e\u9762\u662f\u5b58\u94a5\u5319\u7684cos\n\nstruct data {\n    int x,y,s,cos;//\u524d\u4e24\u4e2a\u6846\u5185\u662f\u5750\u6807\uff0c\u540e\u9762\u662f\u65f6\u95f4\u548c\u5b58\u94a5\u5319\u7684cos\n} now,a;\n  \nqueue<data>q;\n  \nint read(){//\u5feb\u8bfb\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=10*x+ch-'0';\n        ch=getchar();\n    }\n    return x;\n}\n  \nbool right(int x,int y) {//\u5224\u65ad\u8fb9\u754c\n    if(x>=1&&x<=n&&y>=1&&y<=m) {\n        return true;\n    } else {\n        return false;\n    }\n}\n  \nbool check(int x,int y,int z,int h,int sum){//\u5224\u65ad\u94a5\u5319\u662f\u5426\u5b58\u5728\n    int ans=door[x][y][z][h];\n    if(!door[x][y][z][h]){//\u5982\u679c\u662f\u5899\n        return 0;\n    }\n    if(door[x][y][z][h]==-1){//\u5982\u679c\u65e2\u6ca1\u95e8\u4e5f\u6ca1\u5899\n        return 1;\n    }\n    return (sum>>ans)&1;//\u5224\u65ad\u6709\u6ca1\u6709\u94a5\u5319\n} \n \nint bfs() {\n    q.push((data){1,1,0,0});\n    while(!q.empty()&&(q.front().x!=n||q.front().y!=m)) {\n        now=q.front();\n        q.pop();\n        if(vis[now.x][now.y][now.cos]){//\u5982\u679c\u8bbf\u95ee\u8fc7\n            continue;\n        }\n        vis[now.x][now.y][now.cos]=true;//\u6807\u8bb0\n        for(int i=0; i<4; i++) {\n            int xi=now.x+fx[i];\n            int yi=now.y+fy[i];\n            if(right(xi,yi)&&check(now.x,now.y,xi,yi,now.cos)&&!vis[xi][yi][now.cos]){//\u5224\u65ad\n                q.push((data){xi,yi,now.s+1,cos|key[xi][yi]});//\u66f4\u65b0\u5df2\u6709\u94a5\u5319\n            }\n        }\n    }\n    if(q.empty()) {//\u961f\u5217\u7a7a\u4e86\u8868\u793a\u5230\u4e0d\u4e86\n        return -1;\n    } else {\n        return q.front().s;//return \u65f6\u95f4\n    }\n}\n  \nint main() {\n    memset(door,-1,sizeof(door));//\u521d\u59cb\u5316\n    n=read();m=read();p=read();k=read();\n    for(int i=1; i<=k; i++) {\n        int xi1,yi1,xi2,yi2,num;\n        xi1=read();yi1=read();xi2=read();yi2=read();num=read();\n        door[xi1][yi1][xi2][yi2]=num;//\u8bb0\u4f4f\uff1a\u53cc\u5411\u90fd\u8981\u5efa\u95e8\n        door[xi2][yi2][xi1][yi1]=num;\n    }\n    s=read();\n    for(int i=1; i<=s; i++) {\n        int xi,yi,num;\n        xi=read();yi=read();num=read();\n        key[xi][yi]+=1<<num;//\u66f4\u65b0\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u94a5\u5319\u6570\uff081<<num\u662f2^num\u6b21\u65b9\u7684\u610f\u601d\uff0c\u4e5f\u5c31\u662f\u5c06\u7b2cnum\u4f4d\u8bbe\u4e3a1\uff09\n    }\n    printf(\"%d\\n\",bfs());\n    return 0;\n}\n```\n\u6253\u6ce2\u5e7f\u544a\uff1a[My blog](https://www.luogu.org/blog/lc-2018-Canton/)",
        "postTime": 1537008471,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "#### spfa\u5927\u6cd5\u597d\uff01\u91ca\u4e49\u89c1\u4ee3\u7801\n\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n,m,p,k,s,x,y,xx,yy,dis[18][18][1030],z,zz,ans=2e9;\nstruct node\n{\n    int x,y,z;//x,y\u6240\u5728\u7684\u70b9\uff0cy\u5f53\u524d\u94a5\u5319\u60c5\u51b5 \n}u,f;\nqueue<node>q;\nint dx[]={-1,0,1,0};\nint dy[]={0,1,0,-1};\nbool v[18][18][1030];\nint c[18][18],g[18][18][4];\nvoid add(int x,int y,int xx,int yy,int z)\n{\n    if(xx==x-1&&yy==y){g[x][y][0]=z;g[xx][yy][2]=z;return;}\n    if(xx==x&&yy==y+1){g[x][y][1]=z;g[xx][yy][3]=z;return;}\n    if(xx==x+1&&yy==y){g[x][y][2]=z;g[xx][yy][0]=z;return;}\n    if(xx==x&&yy==y-1){g[x][y][3]=z;g[xx][yy][1]=z;return;}\n    //0,1,2,3\u4e0edx[],dy[]\u65b9\u5411\u4e00\u81f4 \n}\nint main()\n{\n    cin>>n>>m>>p>>k;\n    memset(g,-1,sizeof(g));//g[\u6240\u5728\u7684x][\u6240\u5728\u7684y][\u8981\u53bb\u7684\u65b9\u5411] \n                            //g=-1:\u6ca1\u9650\u5236 \uff1bg=0\uff1a\u5899\uff0c\u4e0d\u80fd\u8d70 \uff1bg>=1&&g<=p \u6709\u94a5\u5319\u7684\u624d\u5f00\u95e8 \n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d%d%d%d%d\",&x,&y,&xx,&yy,&z);\n        add(x,y,xx,yy,z);//\u5efa\u7acb\u65b9\u5411\u9650\u5236 \n    }\n    cin>>s;//\u8f93\u5165\u94a5\u5319 \n    for(int i=1;i<=s;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        c[x][y]|=(1<<(z-1));//c[][]:\u8be5\u70b9\u6240\u6709\u7684\u94a5\u5319\u60c5\u51b5 \n        // \u4e00\u70b9\u53ef\u653e\u591a\u4e2a\u94a5\u5319\uff0c \n    }\n    memset(dis,63,sizeof(dis));//spfa \n    f.x=1;\n    f.y=1;\n    f.z=c[1][1];//\u8d77\u70b9\u53ef\u4ee5\u6709\u94a5\u5319 \n    q.push(f);\n    v[1][1][f.z]=1;\n    dis[1][1][f.z]=0;\n    while(!q.empty())\n    {\n        f=q.front();q.pop();\n        v[f.x][f.y][f.z]=0;\n        for(int i=0;i<4;i++)//\u5411\u56db\u5468\u8d70 \n        {\n            u.x=f.x+dx[i];\n            u.y=f.y+dy[i];\n            u.z=f.z|c[u.x][u.y];//u\uff1a\u8981\u53bb\u7684\u70b9\u7684\u60c5\u51b5 \n            if(u.x<1||u.x>n||u.y<1||u.y>m||g[f.x][f.y][i]==0||g[f.x][f.y][i]>0&&!(f.z&(1<<(g[f.x][f.y][i]-1))))\n            continue;//\u8d8a\u754c\uff0c\u6709\u5899 \uff0c\u6ca1\u94a5\u5319\u5f00\u95e8  \u90fd\u4e0d\u884c            \n            if(dis[u.x][u.y][u.z]>dis[f.x][f.y][f.z]+1)//\u66f4\u65b0\uff08\u5957\u8def\uff09 \n            {\n                dis[u.x][u.y][u.z]=dis[f.x][f.y][f.z]+1;\n                if(!v[u.x][u.y][u.z])\n                {\n                    v[u.x][u.y][u.z]=1;\n                    q.push(u);\n                }\n            }\n        }\n    }\n    for(int i=0;i<(1<<p);i++)\n    ans=min(ans,dis[n][m][i]);//\u6700\u77ed\u65f6\u95f4 \n    if(ans<1e8)cout<<ans;\n    else cout<<-1<<endl;//\u65e0\u89e3 \n    return 0;\n}\n```",
        "postTime": 1533350879,
        "uid": 36626,
        "name": "0123a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "~~\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u662f\u7f51\u7edc\u6d41\u554aqwq~~\n\n\u524d\u9762\u4e24\u4f4d\u5927\u4f6c\u76f4\u63a5\u5bf9\u72b6\u6001bfs\u4e86\uff0c\u6211\u518d\u63d0\u4f9b\u4e00\u4efd\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\u7684\u4ee3\u7801\u597d\u4e86=-=\n\n\u628a\u6709\u6ca1\u6709\u6bcf\u79cd\u94a5\u5319\u5206\u6210\uff081<<p\uff09\u5c42\uff0c\u7136\u540e\u7ed9\u6bcf\u5c42\u7684\u6bcf\u4e2a\u70b9\u7f16\u53f7\u3002\n\n\u5728\u6bcf\u5c42\u56fe\u4e2d\u5982\u679c\u76f8\u90bb\u70b9\u4e4b\u95f4\u53ef\u8fbe\u5c31\u8fde\u8ddd\u79bb\u4e3a1\u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6709\u94a5\u5319k\u7684\u623f\u95f4\uff0c\u628a\u6bcf\u4e00\u4e2a\u6ca1\u6709\u8be5\u94a5\u5319k\u7684\u5c42s\u4e2d\u7684\u8be5\u623f\u95f4\u5411s^(1<<(k-1)) [\u62ff\u5230\u8be5\u94a5\u5319\u7684\u5c42] \u7684\u8be5\u623f\u95f4\u8fde\u4e00\u6761\u8ddd\u79bb\u4e3a0\u7684\u8fb9\u3002\n\n\u8d77\u70b9\u662f\u7b2c0\u5c42\uff08\u4e00\u4e2a\u94a5\u5319\u90fd\u6ca1\u6709\uff09\u4e2d\u7684\uff081,1\uff09\uff0c\u6bcf\u5c42\u56fe\u4e2d\u7684(n,m)\u5411\u7ec8\u70b9t\u8fde\u4e00\u6761\u8ddd\u79bb\u4e3a0\u7684\u8fb9\uff0c\u6700\u540e\u8dd1spfa\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<bitset>\n#define LL long long\n#define RI register int\nusing namespace std;\nconst int INF = 0x7ffffff ;\nconst int N = 10 + 2 ;\nconst int CC = 100 + 10 ;\nconst int M = 1e6 + 10 ;\nconst int NN = 1e6 + 10 ;\n\nconst int cx[] = {-1,0,0,1} ;\nconst int cy[] = {0,1,-1,0} ;\n\ninline int read() {\n\tint k = 0 , f = 1 ; char c = getchar() ;\n\tfor( ; !isdigit(c) ; c = getchar())\n\t  if(c == '-') f = -1 ;\n\tfor( ; isdigit(c) ; c = getchar())\n\t  k = k*10 + c-'0' ;\n\treturn k*f ;\n}\nstruct Edge {\n\tint to, next, val ;\n}e[M] ;\nint n, m, p, k, t ; int head[NN], dis[NN] ;\nint noo[N][N][N][N] ; // 11\u8868\u793a\u5899\uff0c\u5176\u4ed6\u6b63\u6574\u6570\u8868\u793a\u54ea\u4e2a\u94a5\u5319\u53ef\u4ee5\u5f00\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u95e8\uff0c0\u8868\u793a\u7545\u901a \ninline void add_edge(int x,int y,int vv) {\n\tstatic int cnt = 1 ;\n\te[++cnt].to = y, e[cnt].next = head[x], head[x] = cnt, e[cnt].val = vv ;\n}\n\ninline void spfa() {\n\tfor(int i=1;i<=NN;i++) dis[i] = INF ; int s = 1 ;\n\tdeque<int>q ; q.push_back(s) ; dis[s] = 0 ; bitset<NN>inq ;  // \u53cc\u5411\u961f\u5217\u4f18\u5316\n\twhile(!q.empty()) {\n\t\tint x = q.front() ; q.pop_front() ;\n\t\tfor(int i=head[x];i;i=e[i].next) {\n\t\t\tint y = e[i].to ;\n\t\t\tif(dis[y] > dis[x]+e[i].val) {\n\t\t\t\tdis[y] = dis[x]+e[i].val ;\n\t\t\t\tif(!inq[y]) {\n\t\t\t\t\tif(!q.empty() && dis[y] < dis[q.front()]) q.push_front(y) ;\n\t\t\t\t\telse q.push_back(y) ;\n\t\t\t\t\tinq[y] = 1 ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tinq[x] = 0 ;\n\t}\n\tif(dis[t] == INF) printf(\"-1\") ;\n\telse printf(\"%d\",dis[t]) ;\n}\n\nint main() {\n\tn = read(), m = read(), p = read(), k = read() ; t = NN-10 ;\n\tint x1, y1, x2, y2, ii ;\n\tfor(int i=1;i<=k;i++) {\n\t\tx1 = read(), y1 = read(), x2 = read(), y2 = read(), ii = read() ;\n\t\tif(!ii) {\n\t\t\tnoo[x1][y1][x2][y2] = noo[x2][y2][x1][y1] = 11 ;\n\t\t} else noo[x1][y1][x2][y2] = noo[x2][y2][x1][y1] = ii ;\n\t}\n\tfor(int s=0;s<(1<<p);s++) {    // \u5bf9\u4e8e\u6bcf\u4e00\u5c42\u5efa\u56fe \n\t\tfor(int i=1;i<=n;i++) {\n\t\t\tfor(int j=1;j<=m;j++) {\n\t\t\t\tint p = s*CC + (i-1)*m + j ;\n\t\t\t\tfor(int k=0;k<4;k++) {\n\t\t\t\t\tint xx = i+cx[k], yy = j+cy[k] ;\n\t\t\t\t\tif(!xx || !yy || xx > n || yy > m) continue ;\n\t\t\t\t\tint pp = s*CC + (xx-1)*m + yy ;\n\t\t\t\t\tif( !noo[i][j][xx][yy] || (s&(1<<(noo[i][j][xx][yy]-1))) ) \n\t\t\t\t\t  add_edge(p,pp,1), add_edge(pp,p,1) ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint nn = read() ;\n\tfor(int i=1;i<=nn;i++) {   // \u4e0d\u540c\u5c42\u4e4b\u95f4\u7684\u5904\u7406 \n\t\tint x = read(), y = read(), kk = read() ;\n\t\tfor(int s=0;s<(1<<p);s++) {\n\t\t\tif(!(s&(1<<(kk-1)))) { // \u6ca1\u6709\u8be5\u94a5\u5319\u7684\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\u5230\u6709\u8be5\u94a5\u5319\u7684\u72b6\u6001 \n\t\t\t\tint p1 = s*CC + (x-1)*m + y, p2 = (s^(1<<(kk-1)))*CC + (x-1)*m + y ;\n\t\t\t\tadd_edge(p1,p2,0) ;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int s=0;s<(1<<p);s++) add_edge(s*CC+n*m,t,0) ;\n\tspfa() ;\n\treturn 0 ;\n}\n```\n\n\uff08\u5728\u7f16\u53f7\u5efa\u56fe\u65f6\u7f16\u53f7\u7684\u4e0d\u91cd\u590d\u5f88\u5173\u952eqwq\uff09",
        "postTime": 1522636322,
        "uid": 27388,
        "name": "zubizakeli",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    },
    {
        "content": "$Back$ $to$ $OI$ $!!!$\n\n\u4eca\u5929\u5237\u4e86\u4e00\u9053\u72b6\u538b\uff0c\u611f\u89c9\u662f\u5047\u7d2b\u9898\u3002\uff08\u867d\u7136\u4e0d\u52a0\u526a\u679d\u5361\u523052\u5206\uff09\n\n\u9898\u76ee\u63cf\u8ff0\uff1a\u7ed9\u5b9a$n\\times m$\u7684\u8ff7\u5bab\uff0c\u6709\u4e9b\u683c\u5b50\u95f4\u6709\u5899\u548c\u95e8\uff0c\u800c\u6709\u4e9b\u683c\u5b50\u91cc\u6709\u5bf9\n\n\u5e94\u95e8\u7684\u94a5\u5319\uff0c\u6c42\u51fa$(1,1)$\u5230$(n,m)$\u7684\u6700\u77ed\u8def\u3002\n\n\u6570\u636e\u8303\u56f4:$n,m<=10$\uff0c\u94a5\u5319\u6570$p<=14$\n\n\u6570\u636e\u8303\u56f4\u5c0f\u4e8e20\uff0c~~\u4e0d\u662f\u7206\u641c\u5c31\u662f\u72b6\u538b~~\u3002\n\n\u7531\u4e8e\u5730\u56fe\u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u56db\u7ef4$check$\u6570\u7ec4\u5b58\u4fe1\u606f\u3002\n\n\u800c\u672c\u9898\u6c42\u6700\u77ed\u8def\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528$BFS$\u6765\u6c42\u3002\n\n\u8fd9\u91cc\u5c31\u53ef\u4ee5\u7528\u72b6\u538b\u6765\u538b\u7f29\u94a5\u5319\u7684\u72b6\u6001\uff0c\u5e76\u7528\u4f4d\u8fd0\u7b97\u6765\u5224\u65ad\u80fd\u5426\u901a\u8fc7\u95e8\u3002\n\n\u7136\u800c\u672c\u9898\u5230\u8fd9\u91cc\u5c31\u53ea\u6709$52$\u5206$......$\u56e0\u4e3a\u6ca1\u6709\u526a\u679d\uff01\uff01\uff01\n\n\u68cb\u76d8\u5f88\u5c0f\uff0c\u6700\u5927\u5c31\u662f$10\\times 10$\uff0c\u6240\u4ee5\u72b6\u6001\u4f1a\u5f88\u5197\u6742\uff0c\u6211\u4eec\u5c31\u9700\u8981\u526a\u679d\u3002\n\n\u5f88\u57fa\u672c\u7684\u526a\u679d\u5566\uff0c\u8bb0\u4e00\u4e0b\u5728\u67d0\u4e00\u4e2a\u70b9\u4e0a\u7684\u94a5\u5319\u72b6\u6001\u6709\u6ca1\u6709\u88ab\u7ecf\u8fc7\u5c31\u597d\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e9b\u7ec6\u8282\u5566\uff1a\n\n1.\u8d77\u59cb\u70b9\u53ef\u4ee5\u653e\u94a5\u5319\u3002\n\n2.\u4e00\u4e2a\u683c\u5b50\u53ef\u4ee5\u6709\u5f88\u591a\u94a5\u5319\u3002\n\n$Code$:\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nint n,m,p,k,s,map[12][12],check[12][12][12][12];\nint tx[6]={1,-1,0,0};\nint ty[6]={0,0,1,-1};\nbool vis[12][12][32768];\nstruct node{\n\tint x,y,step,key;//\u5750\u6807\uff0c\u6b65\u6570\uff0c\u94a5\u5319\n};\nint bfs(){\n\tif(n==1&&m==1) return 0;//\u7279\u5224\uff0c\u6570\u636e\u4e2d\u5e76\u6ca1\u6709\u5361\u8fd9\u4e2a\u70b9\n\tqueue<node>q;\n\tnode now=(node){1,1,0,map[1][1]};//\u8d77\u59cb\u70b9\u53ef\u4ee5\u6709\u94a5\u5319\n\tq.push(now);\n\twhile(q.size()){\n\t\tnode now=q.front();\n\t\tfor(int i=0;i<=3;i++){\n\t\t\tint kx=now.x+tx[i];\n\t\t\tint ky=now.y+ty[i];\n\t\t\tif(kx>=1&&kx<=n&&ky>=1&&ky<=m){\n\t\t\t\tif((now.key&check[now.x][now.y][kx][ky])||(!check[now.x][now.y][kx][ky])){//\u8fd9\u4e2a\u662f\u4f4d\u8fd0\u7b97\uff0c\u56e0\u4e3a\u683c\u5b50\u95f4\u7684\u94a5\u5319\u552f\u4e00\uff0c\u5982\u679c\u624b\u4e2d\u6709\u7684\u8bdd\u8fdb\u884c\u4e00\u4e0b\u4e0e\u8fd0\u7b97\u5c31\u53ef\u4ee5\u5224\u65ad\n\t\t\t\t\tnode to=(node){kx,ky,now.step+1,now.key|map[kx][ky]};\n\t\t\t\t\tif(kx==n&&ky==m) return now.step+1;\n\t\t\t\t\tif(vis[kx][ky][to.key]) continue;//\u8fd9\u91cc\u662f\u526a\u679d\n\t\t\t\t\tvis[kx][ky][to.key]=true;\n\t\t\t\t\tq.push(to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tq.pop();\n\t}\n\treturn -1;\n}\nint main(){\n\tscanf(\"%d%d%d%d\",&n,&m,&p,&k);\n\tfor(int i=1;i<=k;i++){\n\t\tint x1,y1,x2,y2,d;\n\t\tscanf(\"%d%d%d%d%d\",&x1,&y1,&x2,&y2,&d);\n\t\tif(!d) check[x1][y1][x2][y2]=check[x2][y2][x1][y1]=1<<p;\n\t\telse check[x1][y1][x2][y2]=check[x2][y2][x1][y1]=1<<(d-1);//\u8fd9\u91cc\u8bf4\u4e00\u4e0b\uff0c\u56e0\u4e3a\u5899\u4e0d\u80fd\u8d70\uff08\u6ca1\u6709\u94a5\u5319\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b83\u8bbe\u4e3a1<<p\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u51fa\u73b0\u53ef\u4ee5\u7b26\u5408\u5899\u7684\u94a5\u5319\n\t}\n\tscanf(\"%d\",&s);\n\tfor(int i=1;i<=s;i++){\n\t\tint x,y,d;\n\t\tscanf(\"%d%d%d\",&x,&y,&d);\n\t\tmap[x][y]|=1<<(d-1);//\u6ce8\u610f\u8fd9\u91cc\uff0c\u53ef\u80fd\u6709\u591a\u628a\u94a5\u5319\n\t}\n\tprintf(\"%d\\n\",bfs());\n\treturn 0;\n}\n```\n\u795d\u5927\u5bb6$2020$ $CSP$ $NOI$ $XXXOI$ $RP++!!!$",
        "postTime": 1579059742,
        "uid": 221615,
        "name": "S_S_H",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4011 \u3010\u5b64\u5c9b\u8425\u6551\u95ee\u9898\u3011"
    }
]