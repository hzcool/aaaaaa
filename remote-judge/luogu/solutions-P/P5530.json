[
    {
        "content": "## [\u9898\u76ee\u63cf\u8ff0](http://ybt.ssoier.cn:8088/problem_show.php?pid=1505)\n### \u9898\u76ee\u5927\u610f\n\u5728\u4e00\u5f20\u65e0\u5411\u56fe\u4e2d\uff0c\u6211\u4eec\u7ed9\u51fa\u4e00\u4e9b\u8fb9\uff0c\u8fd9\u4e00\u6761\u8fb9\u6709\u6211\u4eec\u5bf9\u5e94\u9700\u8981\u7684\u901a\u8fc7\u8fd9\u6761\u8fb9\u7684\u65f6\u95f4\u548c\u82b1\u8d39\uff0c\u4eceA\u70b9\u5230B\u70b9\u53ef\u80fd\u6709N\u591a\u79cd\u65b9\u5f0f\u5230\u8fbe\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u65b9\u5f0f\u5f53\u6211\u4eec\u7684\u82b1\u8d39\u548c\u65f6\u95f4\u90fd\u6bd4\u5176\u4e2d\u4e00\u79cd\u65b9\u5f0f\u5927\u65f6\uff0c\u6b64\u79cd\u65b9\u5f0f\u4e0d\u662f\u6700\u77ed\u8def\uff0c\u4f46\u662f\u5982\u679c\u4e00\u79cd\u65b9\u5f0f\u82b1\u8d39\u5c0f\u800c\u65f6\u95f4\u5927\uff0c\u4e00\u79cd\u65b9\u5f0f\u65f6\u95f4\u5927\u800c\u82b1\u8d39\u5c0f\uff0c\u8fd9\u6837\u6211\u4eec\u65e0\u6cd5\u6bd4\u8f83\uff0c\u4e24\u79cd\u65b9\u5f0f\u90fd\u6682\u65f6\u5c5e\u4e8e\u6211\u4eec\u7684\u6700\u77ed\u8def\u3002\n### \u9898\u76ee\u5206\u6790\n\u672c\u9898\u7684\u9898\u76ee\u8981\u6c42\u6c42\u51fa\u4ece s \u5230 e \u7684\u6700\u5c0f\u8def\u5f84\u6761\u6570\n\n\u5728\u6211\u4eec\u7406\u89e3\u4e86\u9898\u610f\u4e4b\u540e\uff0c\u5e94\u8be5\u662f\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u51fa\u53cc\u9650\u5236\u7684\u6700\u77ed\u8def\u505a\u6cd5\uff08\u628a\u6211\u4eec\u7684dis\u503c\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6765\u8868\u793a\uff09\n\n\u666e\u901a\u6700\u77ed\u8def\u5c31\u662f\u8ddd\u79bb\u9650\u5236\uff0c\u6211\u4eec\u901a\u8fc7 dis[x] \u8868\u793a\u5230\u8fbe\u70b9 x \u7684\u6700\u5c0f\u8ddd\u79bb\n\n\u672c\u9898\u6700\u77ed\u8def\u5219\u662f\u9650\u5236\u8ddd\u79bb\uff08\u65f6\u95f4\uff09\u548c\u82b1\u8d39\uff0c\u90a3\u6211\u4eec\u5c31\u52a0\u4e00\u7ef4\u4f7f\u5176\u53d8\u6210\u4e8c\u7ef4\u6570\u7ec4\uff0c\u90a3\u4e48\u6211\u4eec\u7684dis\u5c31\u4f1a\u6709\u4e24\u4e2a\u503c\u6765\u63a7\u5236\u3002\n\n\u2014\u2014 \u7528 dis[x][y] \u8868\u793a\u5230\u8fbe\u70b9 x \u82b1\u8d39 y \u5757\u94b1\u7684\u6700\u5c0f\u8ddd\u79bb\uff08\u65f6\u95f4\uff09\n\n\u6700\u540e\u679a\u4e3e\u82b1\u8d39 i \uff0c\u7136\u540e\u627e\u5230\u6ee1\u8db3\u6700\u77ed\u8def\u5f84\u7684\u70b9 dis[e][i]\uff0c\u6709\u591a\u5c11\u8fd9\u6837\u7684\u70b9\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u7d2f\u52a0\u5668ans\u6765\u7d2f\u8ba1\u7b54\u6848\uff0c\u6700\u540e\u8f93\u51fa\u5c31\u884c\u4e86\n\n\u600e\u4e48\u5224\u65ad\u662f\u5426\u662f\u6ee1\u8db3\u6700\u77ed\u8def\u5f84\u7684\u70b9\uff1f\n\n\u8bbe\u4e00\u4e2a\u53d8\u91cf last\uff08\u6211\u7528\u7684\u662flast\uff0c\u81ea\u5df1\u53ef\u4ee5\u968f\u4fbf\u5b9a\u4e49\uff09 == 0x3f3f3f3f\uff08\u6781\u5927\u503c\u5c31\u53ef\u4ee5\uff09 \uff0c\u5982\u679c\u5f53\u524d\u7684 dis[e][i] <ans \uff0c\u5219\u662f\u6ee1\u8db3\u6211\u4eec\u6761\u4ef6\u7684\u70b9\uff08 ans \u8868\u793a\u7684\u662f\u65f6\u95f4\uff09\n\n### \u4ee3\u7801\n```\n#include <bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint n,m,st,ed;\nstruct edge{\u7ed3\u6784\u4f53\n\tint v;\n\tint w;\n\tint t;\n};\nvector<edge> e[105];//\u7ed3\u6784\u4f53\u6570\u7ec4e\u4e2d\u6709 i v w t\u56db\u4e2a\u6570\u8868\u793a\u4ecei\u70b9\u5230v\u70b9\u7684\u8ddd\u79bb\u4e3aw\uff0c\u65f6\u95f4\u4e3at\nint d[105][100005];//\u8fd9\u4e2ad\u6570\u7ec4\u7b2c\u4e00\u7ef4\u662f\u8868\u793a\u7b2c\u51e0\u79cd\u65b9\u5f0f\u7b2c\u4e8c\u7ef4\u8868\u793a\u65f6\u95f4\u503c\u8868\u793a\u91d1\u94b1\uff08\u82b1\u8d39\uff09\nbool vis[105];//\u8bb0\u5f55\u662f\u5426\u91cd\u590d\u5224\u65ad\nint main() {\n\tmemset(vis,0,sizeof(vis));\n\tmemset(d,127,sizeof(d));//\u201c127\u201d\u4ee3\u8868\u7684\u662f\u4e00\u4e2a\u6781\u5927\u7684\u503c\n\tcin>>n>>m>>st>>ed;\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w,t;\n\t\tcin>>u>>v>>w>>t;\n\t\te[u].push_back((edge){v,w,t});\n\t\te[v].push_back((edge){u,w,t});\n\t}//\u9884\u5904\u7406\n\tqueue<int> q;\n\tq.push(st);\n\tvis[st]=1;\n\tfor(int i=1;i<=10000;i++)d[st][i]=0;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=0;i<e[u].size();i++){\n\t\t\tint v=e[u][i].v,w=e[u][i].w,t=e[u][i].t;\n\t\t\tbool flag=0;\n\t\t\tfor(int j=0;j<=10000-w;j++){\n\t\t\t\tif(d[v][j+w]>d[u][j]+t){\n\t\t\t\t\td[v][j+w]=d[u][j]+t;\n\t\t\t\t\tflag=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag){\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}//spfa\u7684\u6a21\u677f\n\tint ans=0,last=99999999;\n\t/*\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=15;j++){\n\t\t\tcout<<d[i][j]<<' ';\n\t\t}\n\t\tcout<<endl;\n\t}\n\t*/ //\u5f53\u65f6\u8c03\u8bd5\u7528\u7684\uff0c\u4e0d\u5f71\u54cd\n\tfor(int i=0;i<=10000;i++){\n\t\tif(d[ed][i]>=last)continue;\n\t\tlast=d[ed][i];\n\t\tans++;//ans\u7d2f\u52a0\uff0c\u8f93\u51fa\u7b54\u6848\n\t}\n\tcout<<ans;\n\treturn 0;//\u7ed3\u675f\u7a0b\u5e8f\n}\n```",
        "postTime": 1595853955,
        "uid": 118877,
        "name": "\u54f2\u5b66\u5bb6",
        "ccfLevel": 0,
        "title": "\u53cc\u8c03\u8def\u5f84"
    },
    {
        "content": "> \u5927\u5bb6\u53ef\u4ee5\u5230[\u8fd9\u4e2a\u94fe\u63a5](https://ctj12461.netlify.com/2019/d8d9cac8)\u6216\u8005[\u8fd9\u4e2a\u94fe\u63a5](https://www.cnblogs.com/ctjcalc/p/d8d9cac8.html)\u9605\u8bfb\u3002\n\n\u8fd9\u662f\u4e00\u9053\u53cc\u6743\u503c`SPFA`\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u6700\u77ed\u8def\u3002\n\n# \u7b97\u6cd5\u5206\u6790\n\n\u9996\u5148\uff0c\u6211\u4eec\u4ece\u9898\u610f\u4e2d\u77e5\u9053\u8fd9\u4e2a\u6700\u77ed\u8def\u662f\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u6743\u503c\u7684\u3002\u5f88\u663e\u7136\uff0c\u66b4\u529b\u679a\u4e3e\u4e24\u79cd\u503c\u662f\u4f1a`TLE`\u7684\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e00\u4e9b\u8f6c\u5316\u3002**\u5f53\u8d39\u7528\u786e\u5b9a\u65f6\uff0c\u65f6\u95f4\u66f4\u77ed\u7684\u8def\u5f84\u662f\u66f4\u4f18\u7684\u3002** \u4e8e\u662f\uff0c**\u6211\u4eec\u501f\u7528\u80cc\u5305`DP`\u7684\u601d\u60f3\uff0c\u628a\u8d39\u7528\u770b\u4f5c\u9700\u8981\u6d88\u8017\u7684\u5bb9\u91cf\uff0c\u65f6\u95f4\u770b\u505a\u4ef7\u503c\u3002** \u6211\u4eec\u628a\u5404\u79cd\u72b6\u6001\u52a0\u4e0a\u4e00\u7ef4\uff0c\u7b2c\u4e00\u7ef4\u8868\u793a\u7ed3\u70b9\u7f16\u53f7\uff0c\u7b2c\u4e8c\u7ef4\u8868\u793a\u8d39\u7528\uff0c\u5c31\u662f\u80cc\u5305`DP`\u7684\u72b6\u6001\uff0c\u5373$dis_{i,j}$\uff0c**\u8868\u793a\u5728**$i$**\u8fd9\u4e2a\u7ed3\u70b9\u65f6\uff0c\u5f53\u8d39\u7528\u4e3a**$j$**\u65f6\u6240\u9700\u6700\u5c0f\u65f6\u95f4**\uff0c\u5219\u6709\uff1a\n$$ dis_{i,j}=min\\{f_{k,i-cost_{k,i}}+time_{k,i} | edge_{k,i}\\} $$\n\u679a\u4e3e\u6bcf\u4e00\u6761\u4e0e$i$\u76f8\u8fde\u63a5\u7684\u70b9$k$\uff0c\u4ece$k$\u7ed3\u70b9\u8f6c\u79fb\u5230$i$\u7ed3\u70b9\uff0c\u8d39\u7528\u52a0\u4e86$cost_{k,i}$\uff0c\u65f6\u95f4\u52a0\u4e86$time_{i,j}$\u3002**\u518d\u4ece\u6700\u77ed\u8def\u7684\u89d2\u5ea6\u770b\uff0c\u6211\u4eec\u8fd8\u662f\u8dd1`SPFA`\uff0c\u5728\u961f\u5217\u4e2d\u5b58\u4e24\u4e2a\u503c\uff1a\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7f16\u53f7\u4e0e\u8d39\u7528\u3002**\u5728\u5bf9\u5e94\u7684$dis$\u91cc\u66f4\u65b0\u3002\n\n\u6700\u540e\uff0c\u6211\u4eec\u518d\u7edf\u8ba1\u4e00\u4e0b\u7b54\u6848\uff0c\u8bb0\u4e00\u4e2a$now$ \u521d\u59cb$now= \\infty$\u8d39\u7528\u4e0d\u65ad\u9012\u589e\uff0c\u5982\u679c$dis_{t,i} < now$\uff0c\u5373\u53c8\u6709\u4e00\u6761\u53ef\u884c\u7684\u8def\u5f84\uff0c\u7b54\u6848\u52a0\u4e00\uff0c$now = dis_{t,i}$\u3002\n\n\u4f46\u662f\uff0c~~\u65f6\u95f4\u8fd8\u662f\u5361\u4e0d\u8fc7\u53bb~~\u3002\u6709\u6ca1\u6709\u4ec0\u4e48\u6280\u5de7\u80fd\u591f\u8dd1\u66f4\u5feb\u5417\uff1f\n\n\u8003\u8651\u8fd9\u6837\u7684\u4e00\u4e2a\u526a\u679d\uff1a**\u5bf9\u4e8e\u72b6\u6001**$dis_{i,j}$**\uff0c\u5982\u679c**$min\\{dis_{i,0 \\rightarrow j}\\} > f_{i,j}$**\uff0c\u5219\u8fdb\u884c\u66f4\u65b0\u3002**\u4e3a\u4ec0\u4e48\u8fd9\u662f\u6b63\u786e\u7684\u5462\uff1f\u770b\u4e00\u770b$dis_{i,j}$\u7684\u5b9a\u4e49\uff1a**\u8868\u793a\u5728**$i$**\u8fd9\u4e2a\u7ed3\u70b9\u65f6\uff0c\u5f53\u8d39\u7528\u4e3a**$j$**\u65f6\u6240\u9700\u6700\u5c0f\u65f6\u95f4**\u3002\u5982\u679c\u8d39\u7528\u589e\u52a0\u4e86\uff0c\u65f6\u95f4\u5374\u6ca1\u6709\u51cf\u5c11\uff0c\u8d70\u8fd9\u6761\u8def\u663e\u7136\u6ca1\u6709\u4e4b\u524d\u7684\u90a3\u6761\u597d\u3002\u5177\u4f53\u7684\uff0c**\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4**$[0,j]$**\u7684\u6700\u5c0f\u503c**\u3002\u5f53\u7136\u7ebf\u6bb5\u6811\u4e5f\u884c\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u9700\u8981\u90a3\u4e48\u591a\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u7ebf\u6bb5\u6811\u5e38\u6570\u65f6\u95f4\u8f83\u5927\uff0c\u8fd9\u9053\u9898\u4e0d\u9002\u7528\u3002\n\n# \u4ee3\u7801\u5b9e\u73b0\n\n> \u8d85\u957f\u4ee3\u7801\u8b66\u544a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n// IO\u4f18\u5316\nnamespace IO\n{\n    char buf[1<<15],*fs,*ft;\n    char out[1<<28],*fe=out;\n    inline char getc(){\n        return (ft==fs&&(ft=(fs=buf)+fread(buf,1,1<<15,stdin),ft==fs))?0:*fs++;\n    }\n    \n    template <typename T>\n    inline void read(T &x){\n        x=0;\n        bool f=false;\n        char ch=getchar();\n        while (!isdigit(ch) && ch^'-') ch=getchar();\n        if (ch=='-') f=true, ch=getchar();\n        while (isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48), ch=getchar();\n        if(f)\n            x=-x;\n        return;\n    }\n\n    \n    inline void flush(){\n        fwrite(out,1,fe-out,stdout);\n        fe=out;\n    }\n\n    template <typename T>\n    inline void writeln(T x){\n        if (!x) *fe++=48;\n        if (x<0) *fe++='-', x=-x;\n        T num=0, ch[20];\n        while (x) ch[++num]=x%10+48, x/=10;\n        while (num) *fe++=ch[num--];\n        *fe++='\\n';\n    }\n\n    template <typename T>\n    inline void writesp(T x){\n        if (!x) *fe++=48;\n        if (x<0) *fe++='-', x=-x;\n        T num=0, ch[20];\n        while (x) ch[++num]=x%10+48, x/=10;\n        while (num) *fe++=ch[num--];\n        *fe++=' ';\n    }\n}\n\nint tot,n,m,s,t,ans;\n// \u6811\u72b6\u6570\u7ec4\u7c7b\u4f53\nclass BinaryIndexedTree\n{\nprivate:\n    int Arr[100005];\n    int lowbit(int x){\n        return x&-x;\n    }\npublic:\n    void modify(int pos,int val){ // \u4fee\u6539\uff0c\u7ef4\u62a4\u6700\u5c0f\u503c\n        pos++;\n        for(;pos<=n*100;pos+=lowbit(pos)){\n            Arr[pos]=min(Arr[pos],val);\n        }\n    }\n\n    int query(int pos){ // \u67e5\u8be2\u6700\u5c0f\u503c\n        ++pos;\n        int ans=0x3f3f3f3f;\n        for(;pos;pos-=lowbit(pos)){\n            ans=min(ans,Arr[pos]);\n        }\n        return ans;\n    }\n\n    void clear(){ // \u6e05\u7a7a\n        memset(Arr,0x3f,sizeof(Arr));\n    }\n};\n\nstruct Edge\n{\n    int To,Next,Weight,Time; // \u94fe\u5f0f\u524d\u5411\u661f\n};\n\nBinaryIndexedTree tree[105];\nEdge e[605];\nint head[105];\nint dis[105][100005],vis[105][100005];\n\nvoid link(int from,int to,int len,int tim){\n    e[++tot].To=to;\n    e[tot].Weight=len;\n    e[tot].Time=tim;\n    e[tot].Next=head[from];\n    head[from]=tot;\n}\n\nvoid spfa(int start){\n    queue<pair<int,int> > q;\n    memset(vis,0,sizeof(vis));\n    memset(dis,0x3f,sizeof(dis));\n    for(int i=0;i<=n;i++) tree[i].clear();\n    q.push(make_pair(start,0));\n    tree[start].modify(0,0);\n    dis[start][0]=0;\n    vis[start][0]=1;\n    while(!q.empty()){\n        int u=q.front().first,w=q.front().second; \n\t\tq.pop(); \n\t\tvis[u][w]=0;\n        for(int i=head[u];i;i=e[i].Next){\n            int v=e[i].To,neww=w+e[i].Weight; // w\uff1a\u8d39\u7528\uff0cneww\uff1a\u65b0\u7684\u8d39\u7528\n            if(tree[v].query(neww)>dis[u][w]+e[i].Time){ // \u526a\u679d\n                dis[v][neww]=dis[u][w]+e[i].Time; // \u66f4\u65b0\n                tree[v].modify(neww,dis[v][neww]);\n                if(!vis[v][neww]){\n                    vis[v][neww]=1;\n                    q.push(make_pair(v,neww));\n                }\n            }\n        }\n    }\n}\n\nint main(){\n    IO::read(n); IO::read(m); IO::read(s); IO::read(t);\n    for(int i=1;i<=m;i++){\n        int x,y,l,t;\n        IO::read(x); IO::read(y); IO::read(l); IO::read(t);\n        link(x,y,l,t); link(y,x,l,t);\n    }\n    spfa(s);\n    int now=dis[0][0];\n    for(int i=0;i<=n*100;i++){\n        if(dis[t][i]<now){\n            ans++;\n            now=dis[t][i];\n        }\n    }\n    IO::writeln(ans);\n    IO::flush();\n    return 0;\n}\n```\n~~\u7136\u800c\uff0c\u8fd9\u4efd\u4ee3\u7801\u662f\u4e0d\u80fd`AC`\u7684\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u7ecf\u8fc7\u4e00\u4e9b\u53d8\u52a8\u540e\uff0c\u65f6\u9650~~$1000ms \\rightarrow 100ms$~~\uff0c\u5e38\u6570\u5927\u7684\u4ee3\u7801\u8fc7\u4e0d\u53bb\u4e86\u3002~~\n\u6240\u4ee5\u4e0b\u9762\u8fd8\u6709\u4e00\u4efd\u901f\u5ea6\u66f4\u5feb\u4f46~~\u66f4\u4e11~~\u7684\u4ee3\u7801\uff0c\u5b9e\u6d4b\u53ef\u4ee5`AC`\u3002QAQ\\~\\~\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace IO\n{\n    char buf[1<<15],*fs,*ft;\n    char out[1<<28],*fe=out;\n    inline char getc(){\n        return (ft==fs&&(ft=(fs=buf)+fread(buf,1,1<<15,stdin),ft==fs))?0:*fs++;\n    }\n\n    template <typename T>\n    inline void read(T &x){\n        x=0;\n        bool f=false;\n        char ch=getchar();\n        while (!isdigit(ch) && ch^'-') ch=getchar();\n        if (ch=='-') f=true, ch=getchar();\n        while (isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48), ch=getchar();\n        if(f)\n            x=-x;\n        return;\n    }\n\n    inline void flush(){\n        fwrite(out,1,fe-out,stdout);\n        fe=out;\n    }\n\n    template <typename T>\n    inline void writeln(T x){\n        if (!x) *fe++=48;\n        if (x<0) *fe++='-', x=-x;\n        T num=0, ch[20];\n        while (x) ch[++num]=x%10+48, x/=10;\n        while (num) *fe++=ch[num--];\n        *fe++='\\n';\n    }\n\n    template <typename T>\n    inline void writesp(T x){\n        if (!x) *fe++=48;\n        if (x<0) *fe++='-', x=-x;\n        T num=0, ch[20];\n        while (x) ch[++num]=x%10+48, x/=10;\n        while (num) *fe++=ch[num--];\n        *fe++=' ';\n    }\n}\n\nconst int lim = 1e4 + 5;\nint nxt[605], tim[605], cost[605], edge[605], head[605];\nint q[1000005][2], dis[105][lim], vis[105][lim];\nint minval[105][lim];\nint tot, n, m, s, t, ans;\n\nvoid link(int x, int y, int c, int t) {\n    nxt[++tot] = head[x];\n    head[x] = tot;\n    edge[tot] = y;\n    tim[tot] = t;\n    cost[tot] = c;\n}\n\nint query(int x, int y) {\n    ++y;\n    int mn = 1e7;\n    for (; y; y -= (y & -y)) {\n        mn = min(mn, minval[x][y]);\n    }\n    return mn;\n}\n\nvoid modify(int x, int y, int val) {\n    ++y;\n    for (; y <= n * 100; y += (y & -y)) {\n        minval[x][y] = min(minval[x][y], val);\n    }\n}\n\nvoid spfa() {\n    memset(dis, 63, sizeof(dis));\n    memset(minval, 63, sizeof(minval));\n    q[1][0] = s;\n    q[1][1] = 0;\n    dis[s][0] = 0;\n    vis[s][0] = 1;\n    modify(s, 0, 0);\n    for (int front = 1, back = 1; front <= back; ++front) {\n        int x = q[front][0], c = q[front][1];\n        vis[x][c] = 0;\n        for (int i = head[x], y; y = edge[i], i; i = nxt[i]) {\n            int newc = c + cost[i];\n            if (query(y, newc) > dis[x][c] + tim[i]) {\n                dis[y][newc] = dis[x][c] + tim[i];\n                modify(y, newc, dis[y][newc]);\n                if (!vis[y][newc]) {\n                    vis[y][newc] = 1;\n                    q[++back][0] = y;\n                    q[back][1] = newc;\n                }\n            }\n        }\n    }\n}\n\nint main() {\n    IO::read(n); IO::read(m); IO::read(s); IO::read(t);\n    for (int i = 1; i <= m; ++i) {\n        int x, y, c, t;\n        IO::read(x); IO::read(y); IO::read(c); IO::read(t);\n        link(x, y, c, t);\n        link(y, x, c, t);\n    }\n    spfa();\n    int now = 0x3f3f3f3f;\n    for (int i = 0; i <= n * 100; ++i) {\n        if (dis[t][i] < now) {\n            ++ans;\n            now = dis[t][i];\n        }\n    }\n    IO::writeln(ans);\n    IO::flush();\n    return 0;\n}\n```\n",
        "postTime": 1567074745,
        "uid": 219538,
        "name": "ctj12461",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011\u53cc\u8c03\u8def\u5f84"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684\u80cc\u5305+spfa\n\n\u6211\u4eec\u9996\u5148\u5206\u6790\u4e00\u4e0b\u9898\u76ee\n\n\u8fd9\u548c\u6211\u4eec\u5e73\u65f6\u505a\u7684\u6a21\u677f\u9898\u4e0d\u4e00\u6837\n\n\u4e0d\u4e00\u6837\u4e4b\u5904\u5c31\u662f\u8fd9\u52a0\u4e86\u4e00\u4e2a\u9650\u5236\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u60f3\u529e\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u9650\u5236\n\n\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u5462\uff1f\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u5c06\u4ece$s$\u5230$i$\u7684\u6240\u6709\u8017\u8d39\u90fd\u5b58\u5165```dis[i]```\n\n\u4f46\u662f\u5f88\u663e\u7136\u4f1a\u8d85\u65f6\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u7b80\u5316\n\n\u6bd4\u5982\u8bf4\u5bf9\u4e8e\u5230\u540c\u4e00\u4e2a\u5730\u70b9\n\n$$\n(2,6)\n\n(2,7)\n$$\n\n\u5f88\u663e\u7136\u9009\u62e9$(2,6)$\n\n\u90a3\u6211\u6211\u4eec\u600e\u4e48\u786e\u5b9a\u8fd9\u4e2a\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u7ed9```dis```\u591a\u52a0\u4e00\u7ef4\n\n```dis[i][j]```\u8868\u793a\u5230```i```\u70b9\u8017\u8d39```j```\u4ee3\u4ef7\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n\u7136\u540e\u7b54\u6848\u5728\u54ea\u91cc\u5462?\n\n\u6211\u4eec\u5c31\u4ece\u5c0f\u5230\u5927\u679a\u4e3e```j```\n\n\u5982\u679c\u5982\u679c```dis[\u7ec8\u70b9][j]```\u53d8\u5c0f\u4e86,\u5c31\u7b54\u6848+1\n\n\u90a3\u6211\u4eec\u8dd1\u4e00\u6b21spfa\u6c42\u51fa```dis```\u5c31\u89e3\u51b3\u4e86\n\n```\n\u6b64\u4ee3\u7801o2\u8fc7,\u6216\u8005\u5361\u4e00\u4e0b\u5e38(\u672c\u4eba\u61d2,\u4e0d\u60f3\u5361\n#include<bits/stdc++.h>\n#define N 1011\n#define M 3011\n#define V 100011\n#define INF 20041026\nusing namespace std;\nint n,m,s,t;\nint nex[M],head[N],val_1[M],val_2[M],to[M],tot;\ninline void build(int x,int y,int v1,int v2){\n\tval_1[++tot]=v1;\n\tval_2[tot]=v2;\n\tto[tot]=y;\n\tnex[tot]=head[x];\n\thead[x]=tot;\n}\nint dis[N][V];\nbool vis[N];\ninline void spfa( ){\n\tqueue<int>q;\n\tint x,y,v1,v2;\n\tint i,j;\n\tfor(i=1;i<=n;++i)\n\tfor(j=0;j<V;++j)\n\tdis[i][j]=INF;\n\tvis[s]=1;\n\tdis[s][0]=0;\n\tq.push(s);\n\twhile(!q.empty( )){\n\t\tx=q.front( );\n\t\tq.pop( );\n\t\tfor(i=head[x];!!i;i=nex[i]){\n\t\t\ty=to[i];v1=val_1[i];v2=val_2[i];\n\t\t\tfor(j=0;j+v1<=n*100;++j)\n\t\t\tif(dis[y][j+v1]>dis[x][j]+v2){\n\t\t\t\tdis[y][j+v1]=dis[x][j]+v2;\n\t\t\t\tif(!vis[y]){\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t\tq.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[x]=0;\n\t}\n\tint sum=0;\n\tint best=INF;\n\tfor(i=0;i<=n*100;++i)\n\tif(best>dis[t][i]){\n\t\tbest=dis[t][i];\n\t\t++sum;\n\t}\n\tprintf(\"%d\",sum);\n}\nint main( ){\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&t);\n\tint x,y,v1,v2;\n\twhile(m--){\n\t\tscanf(\"%d%d%d%d\",&x,&y,&v1,&v2);\n\t\tbuild(x,y,v1,v2);\n\t\tbuild(y,x,v1,v2);\n\t}\n\tspfa( );\n}\n```",
        "postTime": 1595504762,
        "uid": 117658,
        "name": "Space_Gold_Trash",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5530 \u3010[BOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "# \u53cc\u8c03\u8def\u5f84\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5530)\n\n#### \u524d\u8a00\n\n\u53ef\u80fd\u662f\u6211\u8bed\u6587\u4e0d\u592a\u597d\uff0c\u9898\u76ee\u6ca1\u8bfb\u61c2\uff0c\u611f\u8c22[\u540c\u684c\u5e2e\u52a9\u6211\u7406\u6e05\u9898\u610f](https://www.cnblogs.com/Poetic-Rain/?tdsourcetag=s_pctim_aiomsg)\n\n------------\n#### \u9898\u610f\n\n\u5bf9\u7740\u56fe\u8bb2\u5427\uff1a\n\n![](https://img2020.cnblogs.com/blog/2055990/202007/2055990-20200724150608524-23685340.png)\n\n\u5982\u56fe\uff0c\u6a2a\u8f74\u8868\u793a\u82b1\u8d39\u7684\u91d1\u94b1\uff0c\u7eb5\u8f74\u8868\u793a\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u70b9\u8868\u793a\u4e00\u6761\u8def\u5f84\n\n1. \u70b9$\uff085,5\uff09$\u548c\u70b9$\uff0830,3\uff09$\u662f\u4f18\u79c0\u70b9\n\n2. \u70b9$\uff0810\uff0c10\uff09$\u3001\u70b9$\uff0815,5\uff09$\u548c\u70b9$\uff0823,8\uff09$\u662f\u65e0\u7528\u70b9\n\n\u6765\u89e3\u91ca\u4e00\u4e0b\uff1a\n\n1. \u70b9$\uff085,5\uff09$\u660e\u663e\u6bd4\u70b9$\uff0815,5\uff09$\u4f18\u79c0\uff0c\u56e0\u4e3a\u82b1\u8d39\u540c\u6837\u65f6\u95f4\uff0c\u82b1\u8d39\u91d1\u94b1\u5c11\u7684\u4f18\u79c0\n\n2. \u70b9$\uff0810,10\uff09$\u548c\u70b9$\uff0823,8\uff09$\u5219\u80af\u5b9a\u662f\u65e0\u7528\u70b9\uff0c\u56e0\u4e3a\u5b83\u4eec\u82b1\u8d39\u7684\u65f6\u95f4\u548c\u91d1\u94b1\u90fd\u591a\n\n3. \u70b9$\uff085,5\uff09$\u548c\u70b9$\uff0830,3\uff09$\u90fd\u662f\u4f18\u79c0\u70b9\uff0c\u56e0\u4e3a\u4e00\u4e2a\u82b1\u8d39\u7684\u91d1\u94b1\u5c11\uff0c\u4e00\u4e2a\u82b1\u8d39\u7684\u65f6\u95f4\u5c11\uff08\u76f8\u5f53\u4e8e\u4e0d\u540c\u7ef4\u5ea6\uff09\n\n\u63a8\u5e7f\u4e3a\u4e00\u822c\u6027\u95ee\u9898\uff1a\n\n\u8bbe\u6211\u4eec\u5f53\u524d\u7684\u8def\u5f84\u8868\u793a\u4e3a$\uff08x\uff0cy\uff09$\uff0c\u4e0b\u4e00\u6761\u8def\u5f84\u8868\u793a\u4e3a$\uff08u\uff0cv\uff09$\n\n1. \u5982\u679c $u$ \u6bd4 $x$ \u5c0f\u4f46 $v$ \u6bd4 $y$ \u5927\uff0c\u90a3\u4e48\u4e24\u6761\u8def\u90fd\u6682\u4e3a\u4f18\u79c0\n\n2. \u5982\u679c $u$ \u6bd4 $x$ \u5927\u4f46 $v$ \u6bd4 $y$ \u5c0f\uff0c\u90a3\u4e48\u4e24\u6761\u8def\u90fd\u6682\u4e3a\u4f18\u79c0\n\n3. \u5982\u679c $u$ \u6bd4 $x$ \u5c0f\u4e14 $v$ \u6bd4 $y$ \u5c0f\uff0c\u90a3\u4e48$\uff08u\uff0cv\uff09$\u6682\u4e3a\u4f18\u79c0\uff0c\u800c$\uff08x\uff0cy\uff09$\u4e00\u5b9a\u4e3a\u65e0\u7528\u70b9\n\n------------\n#### \u5206\u6790\n\n\u9898\u76ee\u8981\u6c42\u6c42\u51fa\u4ece $s$ \u5230 $e$ \u7684\u6700\u5c0f\u8def\u5f84\u6761\u6570\n\n\u7406\u89e3\u4e86\u9898\u610f\uff0c\u90a3\u4e48\u5e94\u8be5\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u51fa**\u53cc\u9650\u5236\u7684\u6700\u77ed\u8def**\u505a\u6cd5\u5427\uff08\u522b\u5728\u610f\u540d\u5b57...\uff09\n\n\u4ec0\u4e48\u610f\u601d\uff1f\n\n\u666e\u901a\u6700\u77ed\u8def\u5c31\u662f\u8ddd\u79bb\u9650\u5236\uff0c\u6211\u4eec\u901a\u8fc7 $dis[x]$ \u8868\u793a\u5230\u8fbe\u70b9 $x$ \u7684\u6700\u5c0f\u8ddd\u79bb\n\n\u672c\u9898\u6700\u77ed\u8def\u5219\u662f\u9650\u5236\u8ddd\u79bb\uff08\u65f6\u95f4\uff09\u548c\u82b1\u8d39\uff0c\u90a3\u6211\u4eec\u5c31\u52a0\u4e00\u7ef4\u561b\uff01\n\n\u2014\u2014 **\u7528 $dis[x][y]$ \u8868\u793a\u5230\u8fbe\u70b9 $x$ \u82b1\u8d39 $y$ \u5757\u94b1\u7684\u6700\u5c0f\u8ddd\u79bb\uff08\u65f6\u95f4\uff09**\n\n\u6700\u540e**\u679a\u4e3e\u82b1\u8d39 $i$** \uff0c\u7136\u540e\u627e\u5230\u4f18\u79c0\u70b9 $dis[e][i]$\uff0c\u6709\u591a\u5c11\u4f18\u79c0\u70b9\u7b54\u6848\u5c31\u662f\u591a\u5c11\n\n\u600e\u4e48\u5224\u65ad\u662f\u5426\u662f\u4f18\u79c0\u70b9\uff1f\n\n\u8bbe\u4e00\u4e2a\u53d8\u91cf $ans$ $=$ $2005020600$\uff08\u6781\u5927\u503c\u5c31\u53ef\u4ee5\uff09 \uff0c\u5982\u679c\u5f53\u524d\u7684 $dis[e][i]$ $<$ $ans$ \uff0c\u5219\u662f\u4f18\u79c0\u70b9\uff08 $ans$ \u8868\u793a\u7684\u662f\u65f6\u95f4\uff09\n\n------------\n#### \u4ee3\u7801\n\n\u611f\u89c9\u4e0a\u9762\u8bb2\u7684\u8fd8\u662f\u633a\u6e05\u695a\u4e86qwq\uff0c\u73b0\u5728\u8d34\u51fa\u4ee3\u7801\uff1a\n\nPS\uff1a\u6ca1\u52a0\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u4ec0\u4e48\u7684\uff0c\u8dd1\u5f97\u786e\u5b9e\u6709\u70b9\u6162\uff0c$1s+$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nqueue<pair<int,int> > q;\nint n,m,s,E,p,r,c,t,tot,sum,ans=2005020600,maxn;\nint dis[101][30001],vis[101][3001],head[520010];\n\nstruct node {\n\tint to,ti,val,net;\n} e[520010];\n\ninline void add(int u,int v,int w,int tim) {\n\te[++tot].ti=tim;\n\te[tot].to=v;\n\te[tot].val=w;\n\te[tot].net=head[u];\n\thead[u]=tot;\n}\n\ninline void spfa(int s) {   //\u5176\u5b9e\u5c31\u662f\u677f\u5b50 \n\tfor(register int i=1;i<=n;i++) {\n\t\tfor(register int j=0;j<=maxn;j++) {\n\t\t\tdis[i][j]=2005020600;\n\t\t}\n\t}\n\tdis[s][0]=0;    //\u5230\u8fbe\u70b9s\u82b1\u8d390\u7684\u6700\u77ed\u65f6\u95f4\u4e3a0 \n\tvis[s][0]=1;\n\tq.push(make_pair(s,0));   //\u4e3a\u4e86\u4e0d\u5f00\u4e24\u4e2aqueue\uff0c\u6211\u9009\u62e9\u5f00pair \n\twhile(!q.empty()) {\n\t\tint x=q.front().first;\n\t\tint y=q.front().second;\n\t\tq.pop();\n\t\tvis[x][y]=0;\n\t\tfor(register int i=head[x];i;i=e[i].net) {\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v][y+e[i].val]>dis[x][y]+e[i].ti) {\n\t\t\t\tdis[v][y+e[i].val]=dis[x][y]+e[i].ti;\n\t\t\t\tif(!vis[v][y+e[i].val]) {\n\t\t\t\t\tvis[v][y+e[i].val]=1;\n\t\t\t\t\tq.push(make_pair(v,y+e[i].val));  //\u6ce8\u610f\u7b2c\u4e8c\u4e2a\u5b58\u7684\u662f\u82b1\u8d39\u8fd8\u4e0d\u662fdis[v][y+e[i].val]\uff01 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&E);\n\tfor(register int i=1;i<=m;i++) {\n\t\tscanf(\"%d%d%d%d\",&p,&r,&c,&t);\n\t\tadd(p,r,c,t);\n\t\tadd(r,p,c,t);\n\t\tmaxn+=c;   //maxn\u8868\u793a\u6700\u591a\u7684\u82b1\u8d39\u4e0a\u9650 \n\t}\n\tspfa(s);\n\tfor(register int i=0;i<=maxn;i++) {  //\u679a\u4e3e\u82b1\u8d39\u627e\u7b54\u6848 \n\t\tif(dis[E][i]<ans) {\n\t\t\tsum++;\n\t\t\tans=dis[E][i];\n\t\t}\n\t}\n\tprintf(\"%d\",sum);\n\treturn 0;\n}\n```\n\n------------\n\n\u6700\u540e\uff0c\u5982\u679c\u8fd9\u7bc7\u9898\u89e3\u6709\u4efb\u4f55\u95ee\u9898\u6216\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u4e0b\u65b9\u7559\u8a00\u533a\u8bc4\u8bba\uff0c\u6211\u4f1a\u53ca\u65f6\u56de\u590d\u3001\u6539\u6b63\uff0c\u8c22\u8c22\u5927\u5bb6\u554aorz\n\n------------\n\n\n\n\n\n",
        "postTime": 1595576437,
        "uid": 145205,
        "name": "Eleven\u8c26",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5530 \u3010[BOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "~~\u6211\u597d\u5feb\u554a 38ms~~\n# \u770b\u4e0d\u61c2\u80cc\u5305\u7684\u540c\u5b66\u770b\u8fc7\u6765\n\n\u989d\u7b2c\u4e00\u773c\u770b\u8fc7\u53bb\uff0c\u8fd9\u4e0d\u662f\u6700\u77ed\u8def\u677f\u9898\uff0c\u518d\u5b9a\u775b\u4e00\u770b\uff0c\u72b6\u6001\u67092\u7ef4\uff08\u6211\u4eec\u8bbe\u65f6\u95f4\u4e3adis1 \u8d39\u7528\u4e3adis2\uff09\u3002\n\n\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e24\u7ef4\u53ef\u4ee5\u76f8\u4e92\u7d2f\u52a0\uff0c\u5047\u8bbe\u6211\u4eec\u4eces\u5230t\u6709k\u6761\u8def\u5f84\uff0c\u6bcf\u6761\u8def\u5f84\u7684\u90fd\u4f1a\u6709\u4e00\u4e2adis1 \u548c dis2\uff0c\u6211\u4eec\u53ef\u4ee5\u628adis1\u548cdis2\u770b\u6210\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u8fd9\u6837\u6700\u7ec8\u7b54\u6848\u5c31\u662f\u6240\u6709\u70b9\u4e2d\uff0c\u968f\u7740dis1\u9012\u589edis2\u9012\u51cf\u7684\u90a3\u4e2a\u7c7b\u4f3c\u51f8\u5305\uff08\u53ef\u80fd\u4e0d\u662f\u51f8\u5305\uff0c\u81ea\u5df1\u753b\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\uff09\u7684\u96c6\u5408\u4e2d\u7684\u6240\u6709\u70b9\u3002\n\n\u518d\u8fdb\u4e00\u6b65\u7684\u601d\u8003\uff0c\u6211\u4eec\u53d1\u73b0\u4eces\u5230t\u7684\u8def\u5f84\u5f88\u591a\uff0c\u4f46\u6700\u7ec8\u7684\u6709\u7528\u72b6\u6001\u5f88\u5c11\uff0c~~\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u4ece\u8fd9\u91cc\u5165\u624b\u4f18\u5316\uff0c\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff08\u611f\u89c9\u81ea\u5df1\u5728\u5e9f\u8bdd\uff09~~ \u6211\u4eec\u53ef\u4ee5\u4ece\u8fd9\u91cc\u4f18\u5316,\u6211\u4eec\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a\u4e0a\u6bb5\u63d0\u5230\u7684\u7c7b\u4f3c\u51f8\u5305\u7684\u4e1c\u897f\uff0c\u6bcf\u6b21\u8d70\u4e00\u6761\u8fb9\uff08x\uff0cy\uff09\uff0c\u76f8\u5f53\u4e0e\u5bf9x\u96c6\u5408\u5185\u7684\u6240\u6709\u70b9\u52a0\u4e86\u4e00\u4e2a\u5411\u91cf\uff0c\u90a3 **x\u96c6\u5408+\u8fb9\uff08x\uff0cy\uff09** \u7684\u6700\u4f18\u96c6\u5408\u7684\u4e2d\u7684\u70b9\u7684\u76f8\u5bf9\u4f4d\u7f6e\u662f\u4e0d\u53d8\u7684\uff0c\u6211\u4eec\u7528 **\"x\u96c6\u5408+\u8fb9\uff08x\uff0cy\uff09\"** \u53bb\u66f4\u65b0y\u70b9\u7684\u96c6\u5408\uff0c\u5982\u679c\u80fd\u66f4\u65b0\uff0c\u5c31\u653e\u8fdbspfa\u7684\u961f\u5217\uff0c\u56e0\u4e3ay\u70b9\u96c6\u5408\u53ef\u80fd\u66f4\u65b0\u66f4\u591a\u7684\u96c6\u5408\u3002\n\n\u4e00\u5f00\u59cbs\u96c6\u5408\u5185\u6709\u70b9(0,0)\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4ee3\u7801\u5927\u90e8\u5206\u4f7f\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u5177\u4f53\u7684\u7ec6\u8282\u8bf7\u770b\u4e0b\u9762\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rg register\ninline int read(){\n\trg char ch=getchar();\n\trg int x=0,f=0;\n\twhile(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nconst int N=110,M=630;\nstruct Point{\n\tint x,y;\n\tinline bool operator != (const Point &rhs) const {\n\t\treturn x!=rhs.x||y!=rhs.y;\n\t} \n\tinline Point operator + (const Point &rhs) const {\n\t\tPoint a;\n\t\ta.x=x+rhs.x;\n\t\ta.y=y+rhs.y;\n\t\treturn a;\n\t}\n};\nstruct lie{//\u7ef4\u62a4\u4e00\u5217\u70b9\uff0c\u8d77\u540d\u65b9\u6cd5\u597d\u5947\u602a\u3002\u3002\u3002\n\tvector<Point> v;\n\tlie(){\n\t\tv.clear();\n\t}\n\tinline void insert(const Point &rhs){\n\t\tif(v.empty()) v.push_back(rhs);\n\t\telse if(rhs.x==(*(v.end()-1)).x){\n\t\t\tif(rhs.y<(*(v.end()-1)).y) v.pop_back();\n\t\t\tif(v.empty()) v.push_back(rhs);\n\t\t\telse if(rhs.y<(*(v.end()-1)).y) v.push_back(rhs);//\u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u8981\u5199\u5c0f\u4e8e\u53f7\uff0c\u56e0\u4e3a\u91cd\u590d\u7684\u70b9\u5bf9\u4e0d\u4f1a\u8bb0\u5165\u7b54\u6848\n\t\t}else if(rhs.y<(*(v.end()-1)).y) v.push_back(rhs);\n\t}\n\tinline bool operator != (const lie &rhs) const {\n\t\tif(v.size()!=rhs.v.size()) return true;\n\t\tfor(int i=0,il=v.size();i<il;++i){\n\t\t\tif(v[i]!=rhs.v[i]) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tinline lie operator + (const lie &rhs) const {//\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\uff0c\u8fd9\u91cc\u4f7f\u7528\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\u7684\u65b9\u6cd5\uff0c\u590d\u6742\u5ea6\u7ebf\u6027\n\t\tlie rev;\n\t\tint l1=0,r1=v.size(),l2=0,r2=rhs.v.size();\n\t\twhile(l1<r1&&l2<r2){\n\t\t\tif(v[l1].x<rhs.v[l2].x){\n\t\t\t\trev.insert(v[l1]);\n\t\t\t\t++l1;\n\t\t\t}else{\n\t\t\t\trev.insert(rhs.v[l2]);\n\t\t\t\t++l2;\n\t\t\t}\n\t\t}\n\t\tfor(;l1<r1;++l1) rev.insert(v[l1]);\n\t\tfor(;l2<r2;++l2) rev.insert(rhs.v[l2]);\n\t\treturn rev;\n\t}\n\tinline lie operator + (const Point &rhs) const {//\u52a0\u8fb9\u7684\u5411\u91cf\n\t\tlie rev;\n\t\tfor(int i=0,il=v.size();i<il;++i){\n\t\t\trev.insert((Point){v[i].x+rhs.x,v[i].y+rhs.y});\n\t\t}\n\t\treturn rev;\n\t}\n}dis[N];\nint head[N],nxt[M],ver[M],tot,vis[N];\nPoint edge[M];\nint n,m,s,t;\ninline void add(int x,int y,Point z){\n\tver[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n\tedge[tot]=z;\n}\ninline int spfa(){\n\tqueue<int> q;\n\tdis[s].insert((Point){0,0});\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tvis[x]=false;\n\t\tfor(int y,i=head[x];i;i=nxt[i]){\n\t\t\ty=ver[i];\n\t\t\tlie Dis=dis[y]+(dis[x]+edge[i]);\n\t\t\tif(Dis!=dis[y]){//\u5982\u679cy\u96c6\u5408\u88ab\u6539\u53d8\uff0c\u8bf4\u660e\u6709\u65b0\u7684\u70b9\u52a0\u5165\uff0c\u628ay\u653e\u5165\u961f\u5217\n\t\t\t\tdis[y]=Dis;\n\t\t\t\tif(!vis[y]){\n\t\t\t\t\tvis[y]=true;\n\t\t\t\t\tq.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t].v.size();\n}\nint main(){\n\tn=read(),m=read();s=read(),t=read();\n\tfor(int x,y,u,v,i=1;i<=m;++i){\n\t\tx=read(),y=read(),u=read(),v=read();\n\t\tadd(x,y,(Point){u,v});\n\t\tadd(y,x,(Point){u,v});\n\t}\n\tcout<<spfa()<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1567582781,
        "uid": 121618,
        "name": "Accoty_AM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5530 \u3010[BalticOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "\u53cc\u8fb9\u6743\u6700\u77ed\u8def\uff0c\u90a3\u5c31\u7528`dp`\u5427\n\n\u8bbe`dis[i][j]`\u8868\u793a\u5728`i`\u70b9\u4e14\u5df2\u7528\u8d39\u7528\u4e3a`j`\u65f6\u7684\u6700\u5c0f\u65f6\u95f4\n\n$dis[i][j] = min(dis[k][j-cost[k][i]]+time[k][i],dis[i][j])$\n\n\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u5c31\u53ef\u4ee5\u5728\u8fb9\u8dd1`SPFA`\u7684\u65f6\u5019\u8fb9\u7b97\uff0c\u7528`vis`\u6570\u7ec4\u6807\u8bb0\u6bcf\u4e2a\u72b6\u6001\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u8dd1\u4e00\u904d`SPFA`\u5373\u53ef\n\n\u56e0\u4e3a\u6709\u53cc\u8fb9\u6743\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8868\u793a\u5230`i`\u8fd9\u4e2a\u70b9\u4e00\u79cd\u8fb9\u6743\u4e3a`j`\u65f6\u53e6\u4e00\u79cd\u8fb9\u6743\u4e3a\u591a\u5c11\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#define ll long long\n#define re register int\n#define maxn 40050\n#define MAXN 605\nusing namespace std;\ninline int read() {\n    int x = 0, f = 1;\n    char ch = getchar();\n    for (; !isdigit(ch); ch = getchar())\n        if (ch == '-')\n            f = -1;\n    for (; isdigit(ch); ch = getchar()) x = x * 10 + ch - '0';\n    return x * f;\n}\nstruct tu {\n    int u, v, w1, w2, nxt;\n} e[MAXN];\nint head[MAXN], cnt, f[110][maxn], dis[110][maxn];\nvoid add(int u, int v, int w1, int w2) {\n    e[++cnt].u = u;\n    e[cnt].v = v;\n    e[cnt].w1 = w1;\n    e[cnt].w2 = w2;\n    e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\nqueue<pair<int, int> > q;\nint vis[MAXN][maxn];\nint s, t;\nint n, m;\nvoid spfa() {\n    memset(dis, 0x3f, sizeof(dis));\n    dis[s][0] = 0;\n    vis[s][0] = 1;\n    q.push(make_pair(s, 0));\n    while (!q.empty()) {\n        int w = q.front().second, u = q.front().first;\n        q.pop();\n        vis[u][w] = 0;\n        for (re i = head[u]; i; i = e[i].nxt) {\n            int v = e[i].v;\n            int w1 = e[i].w1, w2 = e[i].w2;\n            vis[u][w] = 0;\n            int w3 = w + w1;\n            if (w3 <= 10000 && dis[v][w3] > dis[u][w] + e[i].w2) {\n                dis[e[i].v][w3] = dis[u][w] + e[i].w2;\n                if (!vis[v][w3]) {\n                    vis[v][w3] = 1;\n                    q.push(make_pair(v, w3));\n                }\n            }\n        }\n    }\n}\nint main() {\n    n = read();\n    m = read();\n    s = read();\n    t = read();\n    for (re i = 1; i <= m; i++) {\n        int a1, a2, a3, a4;\n        a1 = read(), a2 = read(), a3 = read(), a4 = read();\n        add(a1, a2, a3, a4);\n        add(a2, a1, a3, a4);\n    }\n    spfa();\n    int mmin = 0x3f3f3f3f, ans = 0;\n    for (re i = 0; i <= 10000; i++) {\n        if (dis[t][i] < mmin)\n            mmin = dis[t][i], ans++;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n\u636e~~\u6bd2\u7624~~\u51fa\u9898\u4eba\u8bf4\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u8fd8\u4e0d\u591f\u4f18\u79c0\uff0c\u6211\u4eec\u53d1\u73b0\n`dis[i][j]`\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u4e00\u72b6\u6001`dis[i][k]`,\u6ee1\u8db3$ k<j $\n\u4e14\n$ dis[i][k]<dis[i][j] $\uff0c\u90a3\u4e48`dis[i][j]`\u5c31\u662f\u65e0\u7528\u7684\u72b6\u6001\n\n\u5c31\u53ef\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4$dp[i][0-j]$\u6700\u5c0f\u503c,\u5b9e\u73b0\u5feb\u901f\u67e5\u627e\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#define ll long long\n#define re register int\n#define maxn 10010\n#define MAXN 605\nusing namespace std;\ninline int read() {\n    int x = 0, f = 1;\n    char ch = getchar();\n    for (; !isdigit(ch); ch = getchar())\n        if (ch == '-')\n            f = -1;\n    for (; isdigit(ch); ch = getchar()) x = x * 10 + ch - '0';\n    return x * f;\n}\nstruct tu {\n    int u, v, w1, w2, nxt;\n} e[MAXN];\nint head[MAXN], cnt, f[110][maxn], dis[110][maxn];\nint c[105][maxn];\ninline int lowbit(int x) { return x & (-x); }\nint vis[MAXN][maxn];\nint s, t;\nint n, m;\nint ask(int x, int y) {\n    y++;\n    int mmin = 0x7fffffff;\n    while (y >= 1) {\n        mmin = min(mmin, c[x][y]);\n        y -= lowbit(y);\n    }\n    return mmin;\n}\nvoid change(int x, int y, int v) {\n    y++;\n    while (y < 10100) {\n        c[x][y] = min(c[x][y], v);\n        y += lowbit(y);\n    }\n}\nvoid add(int u, int v, int w1, int w2) {\n    e[++cnt].u = u;\n    e[cnt].v = v;\n    e[cnt].w1 = w1;  //\u8d39\u7528\n    e[cnt].w2 = w2;  //\u65f6\u95f4\n    e[cnt].nxt = head[u];\n    head[u] = cnt;\n}\nqueue<pair<int, int> > q;\nvoid spfa() {\n    memset(dis, 0x3f, sizeof(dis));\n    memset(c, 0x3f, sizeof(c));\n    dis[s][0] = 0;\n    vis[s][0] = 1;\n    q.push(make_pair(s, 0));\n    change(s, 0, 0);\n    while (!q.empty()) {\n        int w = q.front().second, u = q.front().first;\n        q.pop();\n        vis[u][w] = 0;\n        for (re i = head[u]; i; i = e[i].nxt) {\n            int v = e[i].v;\n            int w1 = e[i].w1, w2 = e[i].w2;  //\u8d39\u7528\u548c\u65f6\u95f4\n            int w3 = w + w1;\n            if (ask(v, w3) > dis[u][w] + w2) {\n                dis[v][w3] = dis[u][w] + w2;\n                change(v, w3, dis[v][w3]);\n                if (!vis[v][w3]) {\n                    vis[v][w3] = 1;\n                    q.push(make_pair(v, w3));\n                }\n            }\n        }\n    }\n}\nint main() {\n    n = read();\n    m = read();\n    s = read();\n    t = read();\n    for (re i = 1; i <= m; i++) {\n        int a1, a2, a3, a4;\n        a1 = read(), a2 = read(), a3 = read(), a4 = read();\n        add(a1, a2, a3, a4);\n        add(a2, a1, a3, a4);\n    }\n    spfa();\n    int mmin = 0x3f3f3f3f, ans = 0;\n    for (re i = 0; i <= 10000; i++) {\n        if (dis[t][i] < mmin)\n            mmin = dis[t][i], ans++;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1567001326,
        "uid": 57823,
        "name": "\u7ea2\u8272OI\u518d\u4e34",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5530 \u3010[BalticOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u663e\u7136\u662f\u7528\u80cc\u5305\u505a\uff0c\u8bbe $t_{i,j}$ \u4e3a\u5728\u7b2c $i$ \u4e2a\u8def\u53e3\u8d39\u7528\u4e3a $j$ \u65f6\u6240\u8017\u7684\u6700\u5c0f\u65f6\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$t_{i,j}=\\min(dis_{k,j}+c_{k,i})$\uff08$k$ \u4ee3\u8868\u70b9 $i$ \u80fd\u901a\u8fc7\u4e00\u6761\u8fb9\u5230\u8fbe\u7684\u6240\u6709\u8282\u70b9\u7f16\u53f7\u4e4b\u4e00\uff09\n\n\u628a\u8fd9\u4e2a\u4ee3\u5165\u5230 SPFA \u4e2d\u5373\u53ef\u6c42\u89e3\u3002\n\n\u6ce8\u610f\uff1a\u5728\u8fd9\u91cc\u6211\u4eec\u8981\u5efa $n\\max\\{c_{i,j}\\}(n-1)$ \u4e2a\u70b9\uff0c\u8fd9\u6837\u4ee3\u8868\u4e86\u6bcf\u4e2a\u72b6\u6001\uff0c\u4f46\u662f\u8fb9\u7684\u8bdd\u4e0d\u7528\u5efa $\\max\\{c_{i,j}\\}(n-1)$ \u500d\uff0c\u53ea\u9700\u8981\u5728\u5bf9\u5e94\u7684\u8282\u70b9\u4e2d\u7528\u5c31\u884c\u4e86\uff0c\u5728 SPFA \u4e2d\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u7684\u597d\u5904\u662f\u53ef\u4ee5\u53bb\u9664\u5927\u91cf\u65e0\u7528\u7684\u8f6c\u79fb\uff0c\u5426\u5219\u4f60\u53ea\u80fd\u62ff\u5230 $56$ \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u6700\u540e\u5c31\u662f\u6c42\u6700\u5c0f\u8def\u5f84\u7684\u6761\u6570\uff0c\u6211\u770b\u5927\u5bb6\u7684\u9898\u89e3\u4e2d\u6709\u7528\u6811\u72b6\u6570\u7ec4\u7684\uff0c\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ebf\u6027\u679a\u4e3e $j$ \u6bcf\u6b21\u679a\u4e3e\u5e76\u66f4\u65b0\u4e00\u4e0b\u6700\u5c0f\u7684 $t$\uff0c\u4ee3\u8868\u6d88\u8017\u4e0d\u8d85\u8fc7 $j$ \u65f6\u6240\u9700\u8981\u7684\u65f6\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u82e5\u6bd4\u5b83\u8fd8\u5c0f\uff0c\u5c31\u8bf4\u660e\u8fd9\u662f\u4e00\u6761\u6700\u5c0f\u8def\u5f84\uff0c\u6b64\u65f6\u8def\u5f84\u6570$+1$\u3002\u5e76\u66f4\u65b0 $t$\u3002\n\n**\u6ce8\u610f**\uff1a\u5728\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u51fa\u73b0**\u8d70\u91cd\u8fb9**\u6216**\u8def\u5f84\u6210\u73af**\u7684\u73b0\u8c61\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u603b\u8d39\u7528\u4f1a**\u5927\u4e8e** $\\max\\{c_{i,j}\\}(n-1)$ **\u90a3\u4e48\u4f1a RE\uff0c\u6240\u4ee5\u5728\u8f6c\u79fb\u8fc7\u7a0b\u4e2d\u8981\u8bb0\u5f97\u7279\u5224\u4e00\u4e0b\uff01\uff01\uff01**\n\n# AC code:\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\nvector<pair<int,pair<int,int> > > edge[105];\nbool vis[105][9905];\nint dis[105][9905];\nint main(){\n\tint n,m,s,e,minn=9901,ans=0;\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&e);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<=(n-1)*100;j++){\n\t\t\tdis[i][j]=9901;\n\t\t}\n\t}\n\twhile(m--){\n\t\tint p,r,c,t;\n\t\tscanf(\"%d%d%d%d\",&p,&r,&c,&t);\n\t\tedge[p].push_back(make_pair(r,make_pair(c,t)));\n\t\tedge[r].push_back(make_pair(p,make_pair(c,t)));\n\t}\n\tqueue<pair<int,int> > q;\n\tq.push(make_pair(s,0));\n\tvis[s][0]=1;\n\tdis[s][0]=0;\n\twhile(!q.empty()){\n\t\tint i;\n\t\tpair<int,int> f=q.front();\n\t\tq.pop();\n\t\tvis[f.first][f.second]=0;\n\t\tfor(i=0;i<edge[f.first].size();i++){\n\t\t\tif(edge[f.first][i].second.first+f.second<=(n-1)*100&&dis[edge[f.first][i].first][edge[f.first][i].second.first+f.second]>dis[f.first][f.second]+edge[f.first][i].second.second){\n\t\t\t\tdis[edge[f.first][i].first][edge[f.first][i].second.first+f.second]=dis[f.first][f.second]+edge[f.first][i].second.second;\n\t\t\t\tif(!vis[edge[f.first][i].first][edge[f.first][i].second.first+f.second]){\n\t\t\t\t\tvis[edge[f.first][i].first][edge[f.first][i].second.first+f.second]=1;\n\t\t\t\t\tq.push(make_pair(edge[f.first][i].first,edge[f.first][i].second.first+f.second));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=(n-1)*100;i++){\n\t\tif(minn>dis[e][i]){\n\t\t\tminn=dis[e][i];\n\t\t\tans++;\n\t    }\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1612254351,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5530 \u3010[BOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "# \u53cc\u8c03\u8def\u5f84\n\n### \u524d\u8a00\n\n> \u8fd9\u9898\u786e\u5b9e\u9700\u8981\u80cc\u5305\uff0c\u4f46\u662f\u52a0\u4e0a $SPFA$ \u6811\u72b6\u6570\u7ec4\u4f18\u5316\u4f1a\u66f4\u5feb\uff0c\u5feb\u5230\u5413\u4eba\uff01\n\n### \u601d\u8def\n\n- \u4e0e\u5f80\u5e38\u4e0d\u540c\u7684\u662f\u8fd9\u6b21\u6700\u77ed\u8def\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u90a3\u4e48\u65b9\u5411\u5c31\u5e94\u8be5\u6539\u53d8\u4e86\uff0c\u591a\u72b6\u51b5\u7c7b\u578b\uff0c\u4e0d\u662f\u5206\u5c42\u56fe\u5c31\u662fDP\u8dd1\u6700\u77ed\u8def\uff08*\u5dee\u4e0d\u591a*\uff09\n- \u5bf9\u4e8e\u6700\u77ed\u8def\uff0c\u672c\u4e8b\u5c31\u662fDP\u7684\u8fc7\u7a0b\uff0c\u6570\u7ec4 $dis$ \u4e0d\u5c31\u662f\u5417\uff1f\uff0c\u8be5\u9898\u76ee\u4e2d\u5b58\u5728\u4e24\u79cd\u6743\u503c\uff0c\u56e0\u6b64\u5c31\u9700\u8981\u5728\u52a0\u4e00\u7ef4\uff0c\u5373\n\n$$\nf_{i,j}\n$$\n\n- \u8868\u793a\u5728$i$\u70b9\u8d39\u7528\u4e3a $j$ \u65f6\u6240\u9700\u7684\u6700\u5c0f\u65f6\u95f4\uff0c\u7c7b\u4f3c\u80cc\u5305\uff0c\u4e0d\u96be\u770b\u51fa\u8f6c\u79fb\u65b9\u7a0b\u5f0f\n\n$$\nf_{i,j}=min(f_{k,i-len(k,i)}+time(k,i))(k = head[u]->e[i].next)\n$$\n\n- \u66b4\u529b\u7684\u8bdd\u4ee5\u524d\u662f\u53ef\u4ee5\u8fc7\u7684\uff0c\u4e0d\u8fc7\u4ed6\u6539\u4e86\uff0c\u56e0\u6b64\u8fd9\u91cc\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u8dd1 $spfa$,\u5927\u4f53\u7684\u4f5c\u7528\u5c31\u662f\u7ef4\u62a4 $dis$ \u6570\u7ec4\uff0c\u5728\u6811\u91cc\u8dd1 $DP$\n- \u5feb!\n\n### Code\n\n```c\n/*\n  \u6811\u72b6\u6570\u7ec4\u4f18\u5316\u7248\u672cSPFA  + \u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\n*/\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define ll long long\n#define N 1100\n#define M 3100\n#define C 10010\nusing namespace std;\n\nconst int A = 1e5 + 11;\nconst int B = 2050;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\ninline int read() {\n  char c = getchar();\n  int x = 0, f = 1;\n  for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n  for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n  return x * f;\n}\nint n,m,s,t,head[N],cnt=0,dis[N][C],tree[N][C];\nbool vis[N][C];\nstruct node{\n  int v,nxt ;\n  int w1;\n  int w2;\n} ed[B << 1];\n\n\nvoid add(int u, int v, int c, int t){\n  ed[++cnt].nxt = head[u]; \n  ed[cnt].v = v; \n  ed[cnt].w1 = c; \n  ed[cnt].w2 = t; \n  head[u] = cnt;\n  return; \n}\n\n\nint lowbit(int x) {return x & (-x);}\n\nvoid change(int x, int y, int z){\n  y++;\n  while(y < 10100){\n    tree[x][y] = min(tree[x][y], z);//DP\n    y +=  lowbit(y);\n  }\n  return; \n}\n\nint ask(int x, int y){\n  y++;\n  int mn = 0x7fffffff;\n  while(y >= 1){\n    mn = min(mn, tree[x][y]);\n    y -= lowbit(y);\n  }\n  return mn;\n}\n\nvoid spfa(){\n  queue<pair<int,int> > q;\n  memset(dis, 0x3f, sizeof(dis));\n  memset(tree, 0x3f, sizeof(tree));\n  memset(vis, 0, sizeof(vis));\n  dis[s][0] = 0; //\u4e8c\u7ef4\u53d8\u91cf\n  vis[s][0] = 1;\n  q.push(make_pair(s, 0));\n  change(s, 0, 0);\n  while(!q.empty()){\n    int w = q.front().second, u = q.front().first;\n      //u \u4f4d\u7f6e\uff0cw \u4e3a \u5230u \u8d70\u8fc7\u7684\u8def\u5f84\uff0c\u6ce8\u610fdis\u6570\u7ec4\u6c42\u5f97\u662f\u65f6\u95f4\u800c\u975e\u957f\u5ea6 \n    q.pop();\n    vis[u][w] = 0;\n    for(int i = head[u]; i; i = ed[i].nxt){\n      int v = ed[i].v, w1 = ed[i].w1, w2 = ed[i].w2;\n      int ww = w + w1;\n      if(ask(v,ww) > dis[u][w] + w2)\n      {\n        dis[v][ww] = dis[u][w] + w2;\n        change(v, ww, dis[v][ww]);\n        if(!vis[v][ww]){\n          q.push(make_pair(v,ww));\n          vis[v][ww] = 1;\n        }\n      }\n    }\n  }\n  return;\n}\nint main() {\n//  freopen(\".in\", \"r\", stdin);\n//  freopen(\"cc.out\", \"w\", stdout);\n  cin >> n >> m >> s >> t;\n  for (int i = 1; i <= m; i++){\n    int u, v, w1, w2;\n    cin >> u >> v >> w1 >> w2;\n    add(u, v, w1, w2);\n    add(v, u, w1, w2);\n  } \n  spfa();\n  int minx = 0x3f3f3f3f, ans = 0;\n    for (int i = 1; i <= 10000; i++) {\n      //cout << dis[t][i] << endl;\n\t\tif (dis[t][i] < minx)//\u77e5\u9053\u4e0d\u540c\u79cd\u7c7b\u7684\u6570\u91cf\n            minx = dis[t][i], ans++;\n           // cout << minx << endl;\n    }\n  printf(\"%d\\n\",ans); \n  fclose(stdin);\n  fclose(stdout);\n  return 0;\n  \n}\n\n\n```\n\n",
        "postTime": 1612136990,
        "uid": 230808,
        "name": "Zxsoul",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5530 \u3010[BOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u68d2\u7684\u53cc\u6743\u503c SPFA \u4f18\u5316\u9898\u76ee\u3002\n\n\u672c\u9898\u663e\u7136\u662f\u6700\u77ed\u8def\u7684\u9898\u76ee\u3002\u4f46\u662f\u770b\u5b8c\u9898\u76ee\u53d1\u73b0\u6bcf\u6761\u8fb9\u6709**\u4e24\u79cd\u6743\u503c**\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u6bcf\u4e2a\u7ed3\u70b9\u5904\u589e\u52a0\u4e00\u7ef4\u72b6\u6001\u3002\n\n\u7528 $f_{i,j}$ \u8868\u793a\u5728\u7b2c $i$ \u4e2a\u70b9\u4e14\u5df2\u7528\u8d39\u7528\u4e3a $j$ \u65f6\u7684\u6700\u5c0f\u65f6\u95f4\u3002\u6839\u636e\u80cc\u5305\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u5982\u4e0b\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$f_{i,j}=\\min\\{f_{k,i-\\operatorname{cost}_{k,i}}+\\operatorname{time}_{k,j}\\ |\\ \\operatorname{foreach} \\operatorname{edge}_{i,j}\\}$$\n\u5176\u4e2d $\\operatorname{cost}_{i,j}$ \u8868\u793a $i,j$ \u95f4\u7684\u8fb9\u7684\u8def\u8d39\uff0c$\\operatorname{time}_{i,j}$ \u7c7b\u4f3c\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528 SPFA \u8fdb\u884c\u6c42\u89e3\u3002\u5176\u671f\u671b\u590d\u6742\u5ea6\u4e3a $O(K\\times N^2\\times V)$ \uff08$K$ \u4e3a~~\u7384\u5b66\u7684~~\u671f\u671b\u8fed\u4ee3\u5e38\u6570\uff09\u3002\u7136\u800c\u5176\u72b6\u6001\u53ef\u80fd\u4f1a\u8fbe\u5230 $100^3$ \u5373 $10^6$ \u7ea7\u522b\uff0c\u5373\u4f7f\u5728\u5b9e\u9645\u4e2d\u7b97\u6cd5\u8fd0\u884c\u8f83\u5feb\uff0c\u6211\u4eec\u4e5f\u4e0d\u5e94\u8be5\u6b62\u6b65\u4e8e\u6b64\uff0c\u800c\u8981\u8fdb\u4e00\u6b65\u8fdb\u884c\u4f18\u5316\u3002\n\n\u8fed\u4ee3\u6c42\u89e3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8003\u8651\u5230\u4efb\u610f\u65b0\u72b6\u6001 $f_{i,j}$\uff0c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u65b0\u72b6\u6001 $f_{i,k}$ \u6ee1\u8db3 $k<j$ \u4e14 $f_{i,k}<f_{i,j}$\uff0c\u90a3\u4e48\u663e\u7136\u5f53\u524d\u72b6\u6001 $f_{i,j}$ \u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u6545\u6ca1\u6709\u7ee7\u7eed\u8fed\u4ee3\u7684\u5fc5\u8981\uff0c\u76f4\u63a5\u526a\u679d\u526a\u6389\u5373\u53ef\uff0c\u4e0d\u5fc5\u52a0\u5165\u961f\u5217\u3002\n\n\u5177\u4f53\u526a\u679d\u6d41\u7a0b\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u72b6\u6001 $f_{i,j}$\uff0c\u67e5\u8be2 $f_{i,0\\cdots j}$ \u4e2d\u7684\u6700\u5c0f\u65f6\u95f4\u503c $Timemin$\uff0c\u5f53 $Timemin>f_{i,j}$ \u65f6\u518d\u8fdb\u884c\u66f4\u65b0\u3002\u5728\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a $f_i$ \u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\u52a0\u5feb\u67e5\u8be2\u3002\n\n\u867d\u7136\u671f\u671b\u590d\u6742\u5ea6\u53d8\u4e3a\u4e86 $O(K\\times N^2 \\times V \\times \\log N)$\uff0c\u4f46\u662f\u5176\u5b9e\u9645\u6548\u7387\u662f\u60ca\u4eba\u7684\uff0c\u51e0\u4e4e\u4e0d\u8017\u65f6\u95f4\u5730\u901a\u8fc7\u4e86\u6240\u6709\u6570\u636e\u3002\uff08\u5f53\u7136\u8fd9\u5728 luogu \u662f\u4e0d\u53ef\u80fd\u7684 /xyx\uff09\u3002\n\n\u8003\u573a\u4e0a\u7684\u65f6\u95f4\u6548\u7387\u5bf9\u6bd4\u5982\u4e0b\uff1a\n\n\u7b97\u6cd5 | SPFA\uff08\u672a\u4f18\u5316\uff09 | SPFA\uff08\u6811\u72b6\u6570\u7ec4\u4f18\u5316\uff09 | \u5b98\u65b9\u6807\u7a0b\uff08\u5806\uff09\n-|-|-|-\n\u5168\u90e8\u6570\u636e\u6240\u7528\u65f6\u95f4    | 2.09s | 0.24s | 2.60s\n\n\u53ef\u89c1\u526a\u679d\u4f18\u5316\u80fd\u529b\u4e4b\u5de8\u5927\u548c SPFA \u8fed\u4ee3\u7684\u76f2\u76ee\u6027\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n//P5530 BOI2002 \u53cc\u8c03\u8def\u5f84 \u6811\u72b6\u6570\u7ec4\u4f18\u5316\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e4+5;\nint nxt[605],tim[605],fee[605],end[605],poi[605];\nint que[1000005][2],dis[105][N],vis[105][N];\nint delt[105][N];\nint tot,n,m,s,t,ans;\ninline int read() {  //\u5feb\u8bfb\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    int x=0;\n    while(ch>='0'&&ch<='9') x=x*10+(ch^48),ch=getchar();\n    return x;\n}\ninline void add(int x, int y, int z, int w) {  //\u524d\u5411\u661f\n    nxt[++tot]=poi[x],poi[x]=tot,end[tot]=y,tim[tot]=z,fee[tot]=w;\n}\ninline int min(int x, int y) {  //\u66ff\u6362 STL \u4e2d\u7684\u5783\u573e\u51fd\u6570\n    return x<y?x:y;\n}\ninline int query(int x, int y) {  //\u6811\u72b6\u6570\u7ec4\u67e5\u8be2 dis[x][0...y] \u7684\u6700\u5c0f\u503c\n    ++y;  //\u6811\u72b6\u6570\u7ec4\u4e0d\u652f\u6301\u4e0b\u6807\u4e3a0\uff0c\u6574\u4f53\u52a01\n    int mn=1e7;\n    for(;y;y-=(y&-y)) mn=min(mn,delt[x][y]);\n    return mn;\n}\ninline void updata(int x, int y, int val) {  //\u6811\u72b6\u6570\u7ec4\u66f4\u65b0\n    ++y; \n    for(;y<=n*100;y+=(y&-y)) delt[x][y]=min(delt[x][y],val);\n}\nvoid spfa() {\n    memset(dis,63,sizeof(dis));\n    memset(delt,63,sizeof(delt));\n    que[1][0]=s,que[1][1]=0;\n    dis[s][0]=0;\n    updata(s,0,0);\n    for(int q1=1,q2=1;q1<=q2;++q1) {\n        int x=que[q1][0],f1=que[q1][1];\n        vis[x][f1]=0;\n        for(int i=poi[x],y;y=end[i],i;i=nxt[i]) {\n            int f2=f1+fee[i];\n            if(query(y,f2)>dis[x][f1]+tim[i]) {  //\u82e5\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u53ef\u80fd\u5bf9\u7b54\u6848\u6709\u8d21\u732e\n                dis[y][f2]=dis[x][f1]+tim[i];\n                updata(y,f2,/*\u8fd9\u91cc\u586b\u4ec0\u4e48\u7559\u5f85\u8bfb\u8005\u601d\u8003*/);\n                if(!vis[y][f2]) vis[y][f2]=1,que[++q2][0]=y,que[q2][1]=f2;\n            }\n        }\n    }\n}\nint main(void) {\n    n=read(),m=read(),s=read(),t=read();\n    for(int i=1;i<=m;i++) {\n        int x=read(),y=read(),w=read(),z=read();\n        add(x,y,z,w),add(y,x,z,w);\n    }\n    spfa();\n    int mn=dis[0][0];\n    for(int i=0;i<=n*100;++i) if(dis[t][i]<mn) ++ans,mn=dis[t][i];  //\u8d39\u7528\u9012\u589e\uff0c\u65f6\u95f4\u9012\u51cf\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n## \u5b8c\u7ed3\u6492\u82b1\uff0c\u6c42\u8d5e\u6c42\u4e92\u5173QAQ~",
        "postTime": 1601528714,
        "uid": 372299,
        "name": "\u8d85\u7ea7\u739b\u4e3d\u738b\u5b50",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5530 \u3010[BOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "### \u7a81\u7136\u53d1\u73b0\u8fd9\u9898\u7684\u9898\u89e3\u597d\u5c11\u554aqwq\n\n# \u89e3\u9898\u601d\u8def\uff1a\n\n\u7531\u4e8e\u6b64\u9898\u4e0e\u4e00\u822c\u6700\u77ed\u8def\u4e0d\u540c,\u8fb9\u6709\u4e24\u79cd\u6743\u503c,\u6240\u4ee5\u9700\u8981\u5728\u6bcf\u4e2a\u7ed3\u70b9\u5904\u589e\u52a0\u4e00\u7ef4\u72b6\u6001.\u5373\u7528$f[i][j]$\u8868\u793a\u5728$i$\u70b9\u4e14\u5df2\u7528\u8d39\u4e3a$j$\u65f6\u7684\u6700\u5c11\u65f6\u95f4.\u5219\uff1a$F[i][j]=Min(F[k][i-Cost(k,i)]+Time(k,i)|For  each edge(k,i))$.\n\n\u6211\u4eec\u53ef\u4ee5\u7531\u6b64\u76f4\u63a5\u4f7f\u7528$SPFA$\u7b97\u6cd5\u8fdb\u884c\u6c42\u89e3,\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(K*N^2*V)$ \uff08K\u4e3a\u5e38\u6570\uff09.\n\n## \u4ee3\u7801\uff1a(\u8d85\u957f\u8b66\u544a)\n\n```cpp\n//\u672a\u4f18\u5316\n#include<bits/stdc++.h>\n#define INF 100001\n#define MAXN 0x3f3f3f3f\nusing namespace std;\nint n,m,s,e,maxn,head[INF],cnt,vis[101][10001],min_val=MAXN,ans;\nstruct node\n{\n\tint to,next,len,val;\n}edge[INF];\nstruct nn\n{\n\tint mon,sum;\n}dp[101][10001];\nstruct mm\n{\n\tint pos,dis;\n};\nqueue<mm>q;\ninline int read()//\u5feb\u8bfb \n{\n\tregister int number_read=0,if_ok_read=1;\n\tchar ch_read=getchar();\n\twhile(ch_read<'0'||ch_read>'9')\n\t{\n\t\tif(ch_read=='-')\n\t\t\tif_ok_read=-1;\n\t\tch_read=getchar();\n\t}\n\twhile(ch_read>='0'&&ch_read<='9')\n\t{\n\t\tnumber_read=number_read*10+ch_read-'0';\n\t\tch_read=getchar();\n\t}\n\treturn number_read*if_ok_read;\n}\ninline void write(register int x_write)//\u5feb\u5199 \n{\n    if(x_write<0)\n\t{\n    \tputchar('-');\n\t\tx_write=-x_write;\n\t}\n    if(x_write>9)\n\t\twrite(x_write/10);\n    putchar(x_write%10+'0');\n    return ;\n}\ninline void add(int f,int t,int l,int v)//\u8fde\u8fb9 \n{\n\tedge[cnt].to=t;\n\tedge[cnt].len=l;\n\tedge[cnt].val=v;\n\tedge[cnt].next=head[f];\n\thead[f]=cnt++;\n\treturn ;\n}\ninline void dij()//\u6838\u5fc3\u7a0b\u5e8f \n{\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=0;j<10001;j++)\n\t\t{\n\t\t\tdp[i][j].mon=MAXN;\n\t\t\tdp[i][j].sum=0;\n\t\t}\n\tdp[s][0].mon=0;\n\tdp[s][0].sum=1;\n\tvis[s][0]=1;\n\tmm st;\n\tst.pos=s;\n\tst.dis=0;\n\tq.push(st);\n\twhile(!q.empty())\n\t{\n\t\tmm u=q.front();\n\t\tq.pop();\n\t\tvis[u.pos][u.dis]=0;\n\t\tfor(int i=head[u.pos];i!=-1;i=edge[i].next)\n\t\t{\n\t\t\tif(u.dis+edge[i].len>maxn+1)\n\t\t\t\tcontinue;\n\t\t\tif(dp[u.pos][u.dis].mon+edge[i].val<dp[edge[i].to][u.dis+edge[i].len].mon)\n\t\t\t{\n\t\t\t\tdp[edge[i].to][u.dis+edge[i].len].mon=dp[u.pos][u.dis].mon+edge[i].val;\n\t\t\t\tdp[edge[i].to][u.dis+edge[i].len].sum=1;\n\t\t\t\tif(!(vis[edge[i].to][u.dis+edge[i].len]))ertaideshijianxiao \n\t\t\t\t{\n\t\t\t\t\tmm vv;\n\t\t\t\t\tvv.pos=edge[i].to;\n\t\t\t\t\tvv.dis=u.dis+edge[i].len;\n\t\t\t\t\tvis[edge[i].to][u.dis+edge[i].len]=1;\n\t\t\t\t\tq.push(vv);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read();\n\tm=read();\n\ts=read();\n\te=read();\n\tmemset(head,-1,sizeof(head));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a=read(),b=read(),c=read(),d=read();\n\t\tadd(a,b,c,d);\n\t\tadd(b,a,c,d);\n\t}\n\tmaxn=(n-1)*100;\n\tdij();\n\tfor(int i=0;i<=maxn+5;i++)\n\t{\n\t\tif(!dp[e][i].sum)\n\t\t\tcontinue;\n\t\tif(dp[e][i].mon<min_val)//\u65f6\u95f4\u957f\u4f46\u94b1\u6570\u5c11 \n\t\t{\n\t\t\tans++;\n\t\t\tmin_val=dp[e][i].mon;\n\t\t}\n\t}\n\twrite(ans);\n\tputchar('\\n');\n\treturn 0;\n}\n\n```\n\n\u7136\u800c\u6b64\u7a0b\u5e8f\u53ea\u80fd\u5f97\u523056\u5206\uff0c\u72b6\u6001\u8fbe\u5230$100^3$\u7ea7\u522b\uff0c\u867d\u7136\u5b9e\u9645\u4e2d\u7b97\u6cd5\u8fd0\u884c\u6bd4\u8f83\u5feb\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u5c31\u6b64\u7ec8\u6b62\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8fdb\u884c\u4f18\u5316\n\n# \u7b97\u6cd5\u4f18\u5316\uff1a\n\n\u5728\u6c42\u89e3\u8fc7\u7a0b\u4e2d\uff0c\u8003\u8651\u4efb\u610f\u4e00\u79cd\u65b0\u72b6\u6001$F[i][j]$,\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u4e00\u79cd\u72b6\u6001$F[i][k]$\uff0c\u6ee1\u8db3$k<j$\u4e14$F[i][k]<F[i][j]$,\u5219\u663e\u7136\u5f53\u524d\u72b6\u6001$F[i][j]$\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u4e5f\u6ca1\u6709\u7ee7\u7eed\u66f4\u65b0\u7684\u5fc5\u8981\uff0c\u6211\u4eec\u5927\u53ef\u4e0d\u5fc5\u5c06\u5176\u52a0\u5165\u961f\u5217\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u52a0\u5165\u8fd9\u6837\u4e00\u4e2a\u526a\u679d\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u72b6\u6001$F[i][j]$\uff0c\u6211\u4eec\u67e5\u8be2$F[i][0...j]$\u4e2d\u7684\u6700\u5c0f\u503c$Timemin$,\u5f53$Timemin>F[i][j]$\u65f6\u624d\u66f4\u65b0\u3002\u5728\u5b9e\u73b0\u65f6\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a$F[i]$\u7ef4\u62a4\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u4ee5\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\uff0c\u8fd9\u6837\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u4e3a$O(K*N^2*V*Log^N)$\uff0c\u800c\u5b83\u7684\u5b9e\u9645\u6548\u7387\u5374\u662f\u60ca\u4eba\u7684\uff0c\u51e0\u4e4e\u4e0d\u8017\u65f6\u95f4\u5730\u901a\u8fc7\u4e86\u6240\u6709\u6570\u636e\u3002\n\n## AC\u4ee3\u7801\uff1a(\u8d85\u957f\u8b66\u544a)\n\n```cpp\n//\u6811\u72b6\u6570\u7ec4\u4f18\u5316 \n#include<bits/stdc++.h>\n#define INF (int)1e4+5\n#define MAXN 1000001\n#define X 101\nusing namespace std;\nint nxt[MAXN],tim[MAXN],fee[MAXN],e[MAXN],poi[MAXN],que[MAXN][2],dis[X][INF],vis[X][INF],delt[X][INF],tot,n,m,s,t,ans;\ninline int read()//\u5feb\u8bfb \n{\n\tregister int number_read=0,if_ok_read=1;\n\tchar ch_read=getchar();\n\twhile(ch_read<'0'||ch_read>'9')\n\t{\n\t\tif(ch_read=='-')\n\t\t\tif_ok_read=-1;\n\t\tch_read=getchar();\n\t}\n\twhile(ch_read>='0'&&ch_read<='9')\n\t{\n\t\tnumber_read=number_read*10+ch_read-'0';\n\t\tch_read=getchar();\n\t}\n\treturn number_read*if_ok_read;\n}\ninline void write(register int x_write)//\u5feb\u5199 \n{\n    if(x_write<0)\n\t{\n    \tputchar('-');\n\t\tx_write=-x_write;\n\t}\n    if(x_write>9)\n\t\twrite(x_write/10);\n    putchar(x_write%10+'0');\n    return ;\n}\ninline void add(int x,int y,int z,int w)//\u8fde\u8fb9 \n{\n\tnxt[++tot]=poi[x];\n\tpoi[x]=tot;\n\te[tot]=y;\n\ttim[tot]=z;\n\tfee[tot]=w;\n\treturn ;\n}\ninline int query(int x,int y)//\u67e5\u8be2dis[x][0...y]\u7684\u6700\u5c0f\u503c \n{\n\ty++;//\u6811\u72b6\u6570\u7ec4\u4e0d\u652f\u6301\u4e0b\u6807\u4e3a0,\u6240\u4ee5\u4e0b\u6807\u6574\u4f53\u52a0\u4e00 \n\tint mn=1e7;\n\tfor(;y;y-=(y&-y))\n\t\tmn=min(mn,delt[x][y]);\n\treturn mn;\n}\ninline void updata(int x,int y,int val)//\u6811\u72b6\u6570\u7ec4\u7684\u66f4\u65b0 \n{\n\ty++;//\u6811\u72b6\u6570\u7ec4\u4e0d\u652f\u6301\u4e0b\u6807\u4e3a0,\u6240\u4ee5\u4e0b\u6807\u6574\u4f53\u52a0\u4e00 \n\tfor(;y<=n*100;y+=(y&-y))\n\t\tdelt[x][y]=min(delt[x][y],val);\n\treturn ;\n}\ninline void spfa()//SPFA \n{\n\tmemset(dis,63,sizeof(dis));\n\tmemset(delt,63,sizeof(delt));\n\tque[1][0]=s;\n\tque[1][1]=dis[s][0]=0;\n\tupdata(s,0,0);\n\tfor(int q1=1,q2=1;q1<=q2;++q1)\n\t{\n\t\tint x=que[q1][0],f1=que[q1][1];\n\t\tvis[x][f1]=0;\n\t\tfor(int i=poi[x],y;y=e[i],i;i=nxt[i])\n\t\t{\n\t\t\tint f2=f1+fee[i];\n\t\t\tif(query(y,f2)>dis[x][f1]+tim[i])//\u5982\u679c\u6ee1\u8db3\u6761\u4ef6,\u5219\u53ef\u80fd\u5bf9\u7b54\u6848\u6709\u6240\u8d21\u732e \n\t\t\t{\n\t\t\t\tdis[y][f2]=dis[x][f1]+tim[i];\n\t\t\t\tupdata(y,f2,dis[y][f2]);\n\t\t\t\tif(!vis[y][f2])\n\t\t\t\t{\n\t\t\t\t\tvis[y][f2]=1;\n\t\t\t\t\tque[++q2][0]=y;\n\t\t\t\t\tque[q2][1]=f2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\nint main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read();\n\tm=read();\n\ts=read();\n\tt=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read(),y=read(),w=read(),z=read();\n\t\tadd(x,y,z,w);\n\t\tadd(y,x,z,w);\n\t}\n\tspfa();\n\tint mn=dis[0][0];\n\tfor(int i=0;i<=n*100;++i)// \u8d39\u7528\u9012\u589e,\u65f6\u95f4\u9012\u51cf \n\t\tif(dis[t][i]<mn)\n\t\t{\n\t\t\tans++;\n\t\t\tmn=dis[t][i];\n\t\t}\n\twrite(ans);\n\tputchar('\\n');\n\treturn 0;\n}\n\n```",
        "postTime": 1573640137,
        "uid": 186516,
        "name": "__wzy__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5530 \u3010[BalticOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u662f\u4e00\u9053\u6700\u77ed\u8def\u7684\u9898\u76ee\u3002\u7531\u4e8e\u8def\u5f84\u7684\u4f18\u52a3\u540c\u65f6\u4e0e\u4e24\u4e2a\u91cf\u76f8\u5173\uff0c\u9700\u8981\u4f7f\u7528\u4e8c\u7ef4\u7684dis\u6570\u7ec4\u3002\n\n\u8003\u8651\u4f7f\u7528 $dp_{x,len}$ \u8868\u793a\u76ee\u524d\u5728 $x$ \u70b9\uff0c\u4e14\u5df2\u6709\u82b1\u8d39\u4e3a $len$ \u65f6\u7684\u6700\u77ed\u65f6\u95f4\u3002\u6211\u4eec\u53ea\u8981\u8f6c\u6362\u4e00\u4e0b\u961f\u5217\u5b58\u50a8\u7684\u7c7b\u578b\u4ee5\u53ca\u66f4\u65b0\u65f6\u7528\u7684\u4e0d\u7b49\u5f0f\u5373\u53ef\u3002\n\n\u5f53\u4e00\u904dspfa/dijkstra\u8dd1\u5b8c\u540e\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4ece\u8d77\u70b9\u51fa\u53d1\u5230\u6240\u6709\u70b9\u4e0d\u540c\u82b1\u8d39\u7684\u6700\u77ed\u65f6\u95f4\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u8bfb\u5165\u65f6\u8ba1\u7b97\u51fa\u6700\u5927\u7684\u53ef\u80fd\u82b1\u8d39\uff0c\u5373\u6240\u6709\u9053\u8def\u7684\u82b1\u8d39\u603b\u548c\uff0c\u7136\u540e\u4ece0\u5f00\u59cb\u5faa\u73af\uff0c\u5e76\u7528minn\u8bb0\u5f55\u5f53\u524d\u7684\u6700\u77ed\u65f6\u95f4\u3002\n\n\u7531\u4e8e\u6211\u4eec\u7684\u82b1\u8d39\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u5982\u679c\u8fd9\u4e2a\u82b1\u8d39\u7528\u7684\u6700\u77ed\u65f6\u95f4\u6bd4\u4e4b\u524d\u8bb0\u5f55\u7684\u6700\u77ed\u65f6\u95f4minn\u66f4\u5c0f\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u6761\u7c7b\u578b\u4e0d\u540c\u7684\u6700\u77ed\u8def\u5f84\uff0c\u8fd9\u65f6\u6211\u4eec\u7684ans\u52a01\uff0c\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u8def\u5f84\u603b\u6570\u4e5f\u5c31\u7edf\u8ba1\u5b8c\u4e86\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,m,s,e,head[100110],p,ans,maxn;\nstruct edge{\n\tint to,next,len,w;\n}a[101100];\nbool ex[305][10010];\nvoid add(int x,int y,int c,int t)\n{\n\ta[++p].to=y;a[p].w=t;a[p].len=c;\n\ta[p].next=head[x];head[x]=p;\n}\nstruct node{\n\tint pos,dis;\n};\nint dp[305][30010];\nvoid spfa(int s)\n{\n\tqueue<node>q;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=0;j<=maxn;j++)\n\tdp[i][j]=0x3f3f3f3f;\n\tnode st;st.dis=0;st.pos=s;\n\tq.push(st);dp[s][0]=0;ex[s][0]=1;\n\twhile(!q.empty())\n\t{\n\t\tnode tmp=q.front();q.pop();\n\t\tint u=tmp.pos,dis=tmp.dis;\n\t\tex[u][dis]=0;\n\t\tfor(int i=head[u];i;i=a[i].next)\n\t\t{\n\t\t\tint w=a[i].w,len=a[i].len,v=a[i].to;\n\t\t\tif(w+dp[u][dis]<dp[v][dis+len])\n\t\t\t{\n\t\t\t\tdp[v][dis+len]=w+dp[u][dis];\n\t\t\t\tif(ex[v][dis+len]==0)\n\t\t\t\t{\n\t\t\t\t\tex[v][dis+len]=1;\n\t\t\t\t\tnode t;\n\t\t\t\t\tt.dis=dis+len,t.pos=v;\n\t\t\t\t\tq.push(t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&m,&s,&e);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b,c,d;\n\t\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\n\t\tadd(a,b,c,d);\n\t\tadd(b,a,c,d);\n\t\tmaxn+=c;\n\t}\n\tspfa(s);int minn=0x3f3f3f3f;\n\tfor(int i=0;i<=maxn;i++)\n\t{\n\t\tif(dp[e][i]<minn)\n\t\t{\n\t\t\tans++;\n\t\t\tminn=dp[e][i];\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1606738519,
        "uid": 363285,
        "name": "\u6d1b\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5530 \u3010[BOI 2002]\u53cc\u8c03\u8def\u5f84\u3011"
    },
    {
        "content": "[P5530 [BalticOI 2002]\u53cc\u8c03\u8def\u5f84](https://www.luogu.org/problem/P5530)\n```\n\u8f93\u5165\u6837\u4f8b\uff1a\n4 5 1 4\n2 1 2 1\n3 4 3 1\n2 3 1 2\n3 1 1 4\n2 4 2 4\n```\n\n\u6837\u4f8b\u8bf4\u660e\uff1a\n\n\u4ece1\u52304\u67094\u6761\u8def\u5f84\u3002\u4e3a1\u21922\u21924(\u8d39\u7528\u4e3a4,\u65f6\u95f4\u4e3a5) ,1\u21923\u21924(\u8d39\u7528\u4e3a4,\u65f6\u95f4\u4e3a5) ,1\u21922\u21923\u21924(\u8d39\u7528\u4e3a6,\u65f6\u95f4\u4e3a4) ,1\u21923\u21922\u21924(\u8d39\u7528\u4e3a4,\u65f6\u95f4\u4e3a10)\u3002 1\u21923\u21924\u548c1\u21922\u21924\u6bd41\u21923\u21922\u21924\u66f4\u597d\u3002\u6709\u4e24\u79cd\u6700\u4f73\u8def\u5f84:\u8d39\u7528\u4e3a4 ,\u65f6\u95f4\u4e3a5(1\u21922\u21924\u548c1\u21923\u21924)\u548c\u8d39\u7528\u4e3a6,\u65f6\u95f4\u4e3a4 (1\u21922\u21923\u21924)\u3002\n\n## \u5206\u6790\n\u6700\u77ed\u8def\u7684\u8fb9\u6709\u4e24\u79cd\u6743\u503c\uff0c\u6240\u4ee5\u8003\u8651\u5728\u6bcf\u4e2a\u8282\u70b9\u589e\u52a0\u4e00\u7ef4\u72b6\u6001\uff0cd\u3010i\u3011\u3010j\u3011\uff1a\u5230\u8fbe\u8282\u70b9i\u4e14\u8d39\u7528\u4e3aj\u65f6\u6240\u7528\u6700\u5c11\u65f6\u95f4\uff0c\u5219d\u3010v\u3011\u3010j\u3011=min{d\u3010u\u3011\u3010j-cost\uff08u\uff0cv\uff09\u3011}+time\uff08u\uff0cv\uff09\n\n\u7528SPFA\u5373\u53ef\uff0c 533ms /  6.12MB\uff0c#8#9TLE\uff0c86\u5206\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\n#define R register\nstruct edge {\n    int v,w,t,h;\n} e[610];\nint h[110],d[110][10100],cnt,mn;\nint u,v,w,n,m,S,T;\nbool vis[110][10100];//\u7b2c\u4e8c\u7ef4\u8bb0\u5f97\u5f00\u5927\u4e00\u4e9b\n\ninline void add(int u,int v,int w,int t) {\n    e[++cnt]=(edge) {v,w,t,h[u]},h[u]=cnt;\n}\n\nqueue<pair<int,int> >q;//\u4e8c\u7ef4\u8bb0\u5f55\u8282\u70b9u\u548c\u6240\u7528cost\ninline void spfa() {\n    memset(d,0x3f,sizeof d);\n    mn=99999999;\n    q.push(make_pair(S,d[S][0]=0)),vis[S][0]=1;\n    while(!q.empty()) {\n        u=q.front().first,w=q.front().second;\n        vis[u][w]=0,q.pop();\n        for (R int i=h[u],_w; i; i=e[i].h)\n            if ((_w=w+e[i].w)<=10010) {//w\u662f\u5230\u8fbeu\u7684cost\uff0c_w\u662f\u7531u\u5230\u8fbev\u6240\u7528cost\uff0c_w\u8d85\u51fa100*100\u76f4\u63a5\u820d\u53bb\n                if (d[v=e[i].v][_w]>d[u][w]+e[i].t) {//\u540c\u6837\u7684cost\u6240\u7528time\u662f\u5426\u6bd4\u539f\u6765\u66f4\u5c11\n                    d[v][_w]=d[u][w]+e[i].t;\n                    if(!vis[v][_w]) q.push(make_pair(v,_w)),vis[v][_w]=1;\n                }\n            }\n    }\n}\n\nint main() {\n    scanf(\"%d%d%d%d\",&n,&m,&S,&T);\n    for (R int t; m; m--)\n        scanf(\"%d%d%d%d\",&u,&v,&w,&t),add(u,v,w,t),add(v,u,w,t);\n    spfa();\n\n    cnt=0;\n    for (R int i=0; i<=10000; i++)\n        if(d[T][i]<mn) mn=d[T][i],cnt++;//cost\u9010\u6e10\u589e\u957f\uff0c\u90a3\u4e48time\u53ea\u6709\u5c0f\u4e8e\u5176\u4ed6\u7684time\u624d\u80fd\u7b97\u201c\u6700\u5c0f\u8def\u5f84\u201d\n    printf(\"%d\",cnt);\n}\n```\n\n## \u4f18\u5316\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u5bf9\u4e8ed\u3010i\u3011\u3010j\u3011\uff0c\u5982\u679c\u6709k\uff08k<j\uff09\u4e14d\u3010i\u3011\u3010k\u3011<d\u3010i\u3011\u3010j\u3011\uff08\u5230\u8fbei\u6240\u7528cost\u548ctime\u90fd\u66f4\u5c11\uff09\uff0c\u90a3\u4e48d\u3010i\u3011\u3010j\u3011\u4e5f\u5c31\u6ca1\u5fc5\u8981\u66f4\u65b0\u4e86\u3002\u6240\u4ee5\u52a0\u5165\u526a\u679d\uff1a\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4d\u3010i\u3011\u30100~j\u3011\u7684\u6700\u5c0f\u503c\uff0c\u53ea\u6709d\u3010i\u3011\u3010j\u3011<\u6700\u5c0f\u503c\u624d\u66f4\u65b0\n\n\u5b9e\u9645\u6548\u7387\u63d0\u9ad8\u4e0d\u5c11\uff0c 93ms /  9.93MB\uff0cAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<iostream>\nusing namespace std;\n#define R register\nstruct edge {\n    int v,w,t,h;\n} e[610];\nint h[110],d[110][10100],tr[110][10100],cnt,mn;\nint u,v,w,n,m,S,T;\nbool vis[110][10100];\n\ninline void add(int u,int v,int w,int t) {\n    e[++cnt]=(edge) {v,w,t,h[u]},h[u]=cnt;\n}\n\n//\u7528val\u66f4\u65b0d\u3010x\u3011\u30100~y\u3011\u6700\u5c0f\u503c    \ninline void upd(int x,int y,int val){\n    for (y++;y<10100;y+=y&-y) tr[x][y]=min(tr[x][y],val);\n}//\u6811\u72b6\u6570\u7ec4\u4e0b\u6807\u4e0d\u80fd\u4e3a0\uff0c\u6240\u4ee5y++\n\n//\u67e5\u8be2d\u3010x\u3011\u30100~y\u3011\u6700\u5c0f\u503c\ninline int qry(int x,int y){\n    int ans=1e7;\n    for (y++;y;y-=y&-y) ans=min(tr[x][y],ans);\n    return ans;\n}\n\nqueue<pair<int,int> >q;\ninline void spfa() {\n    memset(d,0x3f,sizeof d);\n    memset(tr,0x3f,sizeof d);//\u522b\u5fd8\u4e86\u521d\u59cb\u5316\n    q.push(make_pair(S,d[S][0]=0)),vis[S][0]=1;\n    upd(S,0,0);\n    while(!q.empty()) {\n        u=q.front().first,w=q.front().second;\n        vis[u][w]=0,q.pop();\n        for (R int i=h[u],_w; i; i=e[i].h)\n                if (qry(v=e[i].v,_w=w+e[i].w)>d[u][w]+e[i].t) {//\u53ea\u6709d\u3010i\u3011\u3010j\u3011<\u6700\u5c0f\u503c\u624d\u66f4\u65b0\n                    d[v][_w]=d[u][w]+e[i].t;\n                    upd(v,_w,d[v][_w]);//\u66f4\u65b0\u6700\u5c0f\u503c\n                    if(!vis[v][_w]) q.push(make_pair(v,_w)),vis[v][_w]=1;\n                }\n    }\n}\n\nint main() {\n    scanf(\"%d%d%d%d\",&n,&m,&S,&T);\n    for (R int t; m; m--)\n        scanf(\"%d%d%d%d\",&u,&v,&w,&t),add(u,v,w,t),add(v,u,w,t);\n    spfa();\n\n    cnt=0,mn=99999999;\n    for (R int i=0; i<=10000; i++)\n        if(d[T][i]<mn) mn=d[T][i],cnt++;\n    printf(\"%d\",cnt);\n}\n```",
        "postTime": 1567039118,
        "uid": 68706,
        "name": "Randolph\u3001",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5530 [BalticOI 2002]\u53cc\u8c03\u8def\u5f84"
    }
]