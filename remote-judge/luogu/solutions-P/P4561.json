[
    {
        "content": "\n### \u5410\u69fd\n\n\u6837\u4f8b\u89e3\u91ca\u771f\u7684\u7ed9\u4e86\u6211\u5f88\u5927\u7684\u63d0\u793a\u3002\u6211\u7684\u671f\u671b\u5b66\u7684\u4e0d\u597d\uff0c\u7ed3\u679c\u6837\u4f8b\u89e3\u91ca\u76f4\u63a5\u5c31\u544a\u8bc9\u4e86\u6211\u8f6e\u6570\u671f\u671b\u5c31\u662f\u4e00\u6b21\u6210\u529f\u6982\u7387\u7684\u5012\u6570\uff0c\u8fd9\u4e00\u70b9\u5409\u8001\u5e08\u771f\u7684\u5f88\u826f\u5fc3\u4e86\n\n\u7136\u540e\u672c\u9898\u7684\u4e24\u4e2a\u5173\u952e\u7ed3\u8bba\uff0c\u6211\u5728\u8003\u573a\u4e0a\u771f\u7684\u5168\u90fd\u60f3\u5230\u4e86\uff0c\u4f46\u5f53\u65f6\u4ee3\u7801\u80fd\u529b\u5b9e\u5728\u662f\u5dee\uff0c\u5957\u8def\u53c8\u5b66\u7684\u4e0d\u591f\u591a\uff0c\u5bfc\u81f4\u60f3\u5230\u4e86\u7ed3\u8bba\u90fd\u4e0d\u77e5\u9053\u600e\u4e48\u505a\n\n### \u9898\u89e3\n\n\u4ece\u7b80\u5355\u7684\u5f00\u59cb\u60f3\u8d77\u3002\u82e5\u6570\u5217\u4e2d\u6709$cnt$\u4e2a\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6700\u5c0f\u503c\u53ef\u4ee5\u653e\u5728$1$\u5230$cnt$\u4e4b\u95f4\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u4e8e\u662f\u5b83\u4eec\u6709$cnt!$\u79cd\u53ef\u884c\u6392\u5217\u65b9\u5f0f\u3002\u518d\u7528\u4e00\u6837\u7684\u65b9\u5f0f\u53bb\u8003\u8651\u5176\u5b83\u7684\u503c\u3002\u90a3\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u4e00\u6b21\u6210\u529f\u7684\u6982\u7387\u663e\u7136\u5c31\u662f$\\frac{\\prod cnt_x!}{n!}$\n\n\u7136\u540e\u611f\u8c22\u5409\u8001\u5e08\u7684\u6837\u4f8b\u89e3\u91ca\uff0c\u8ba9\u6211\u77e5\u9053\u4e86\u671f\u671b\u5c31\u662f\u5b83\u7684\u5012\u6570\uff1a$\\frac{n!}{\\prod cnt_x!}$\n\n\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u8ba9$cnt_x!$\u7684\u4e58\u79ef\u5c3d\u53ef\u80fd\u5c0f\uff0c\u8fd9\u6837\u671f\u671b\u624d\u4f1a\u5c3d\u53ef\u80fd\u5927\n\n\u4e8e\u662f\u4e0d\u96be\u60f3\u5230\u8d2a\u5fc3\u3002\u6bcf\u6b21\u9009$cnt$\u6700\u5c0f\u7684\u6570$x$\uff0c\u628a\u5b83\u52a0\u5165\u6570\u5217\uff0c\u5e76\u66f4\u65b0\u7b54\u6848\n\n\u9009\u6700\u5c0f\u6570\uff1f\u96be\u4e0d\u6210\u7528\u5806\uff1f\u4e0d\u884c\uff01\u63d2\u5165\u7684\u6b21\u6570\u8fbe\u5230\u4e86$10^7$\u7684\u7ea7\u522b\uff0c\u518d\u52a0\u4e4b\u6709$10^5$\u7ec4\u8be2\u95ee\uff0c\u6211\u4eec\u7684\u590d\u6742\u5ea6\u751a\u81f3\u4e0d\u80fd\u548c$m$\u626f\u4e0a\u534a\u6bdb\u94b1\u5173\u7cfb\uff0c\u5426\u5219\u5c31\u53ea\u80fd\u62ff\u5230$50$\u5206\u7684\u66b4\u529b\u5206\u4e86\uff01\n\n\u8003\u8651\u628a\u539f\u6570\u5217\u79bb\u6563\u5316\u3002\u7136\u540e\u5bf9\u4e8e\u533a\u95f4$[l, r]$\u5185\u7684\u6570$x$\uff0c\u5c06\u5b83\u7684$cnt$\u4fdd\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u5c06\u4fdd\u5b58\u4e0b\u7684\u6240\u6709$cnt$\u6392\u4e2a\u5e8f\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u5de6\u5f80\u53f3\u626b$cnt$\u6570\u7ec4\uff0c\u5bf9\u4e8e\u7b2c$i$\u4e2a$cnt$\uff0c\u6211\u4eec\u5c06$cnt_i$\u53ca\u5176\u524d\u9762\u7684\u6240\u6709$cnt$\u586b\u5e73\u5230$cnt_{i+1}$\u7684\u9ad8\u5ea6\uff0c\u7b54\u6848\u4e5f\u5c31\u9700\u8981\u4e58\u4e0a$\\left(\\frac{cnt_{i+1}!}{cnt_i!}\\right)^i$\uff0c\u9884\u5904\u7406\u9636\u4e58\u53ca\u5176\u9006\u5143\uff0c\u518d\u5199\u4e00\u4e2a\u5feb\u901f\u5e42\u5373\u53ef\n\n\u5f53\u7136\uff0c\u5e76\u4e0d\u662f\u8981\u4e00\u76f4\u586b\u5e73\u3002\u82e5\u7ee7\u7eed\u586b\u5e73\u4f1a\u5bfc\u81f4\u64cd\u4f5c\u6b21\u6570\u5927\u4e8e$m$\uff0c\u663e\u7136\u9700\u8981\u505c\u6b62\u3002\u8bbe$c$\u4e3a\u6b64\u65f6\u5269\u4f59\u64cd\u4f5c\u6b21\u6570\uff0c\u6b64\u65f6\u53ea\u8981\u586b\u5e73\u5230$\\left\\lfloor\\frac{c}{i}\\right\\rfloor$\u7684\u9ad8\u5ea6\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u518d\u5904\u7406\u4e00\u4e0b\u5269\u4f59\u7684$c\\mod i$\u6b21\u64cd\u4f5c\u5373\u53ef\n\n\u8003\u8651\u5230$l$\u548c$r$\u7684\u8de8\u5ea6\u53ef\u80fd\u6bd4\u8f83\u5927\uff0c\u4e2d\u95f4\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u5143\u7d20\u662f\u539f\u6570\u5217\u91cc\u6ca1\u6709\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8ba1\u7b97\u51fa$[l, r]$\u4e2d\u5728\u539f\u6570\u5217\u91cc\u6ca1\u6709\u51fa\u73b0\u7684\u5143\u7d20\u6570\u91cf$s$\uff0c\u5728\u6392\u5e8f\u540e\u7684$cnt$\u6570\u7ec4\u5934\u90e8\u52a0\u4e00\u4e2a$0$\uff0c\u5e76\u4e14\u7ed9\u5b83\u9644\u4e0a\u4e00\u4e2a\u7cfb\u6570$s$\u5373\u53ef\n\n\u8bb0\u4f4f\u4e0d\u8981\u6bcf\u6b21\u8be2\u95ee\u90fd\u628a$cnt$\u6570\u7ec4\u6574\u4e2amemset\u4e00\u904d\uff0c\u5426\u5219\u590d\u6742\u5ea6\u4f1a\u9000\u5316\u6210$O(T\\times 10^5)$\u3002\u53ea\u9700\u6e05\u7a7a$cnt$\u6570\u7ec4\u7684\u524d$n$\u4e2a\u5143\u7d20\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nnamespace IO\n{\n    const int S=(1<<20)+5;\n    char buf[S],*H,*T;\n    inline char Get()\n    {\n        if(H==T) T=(H=buf)+fread(buf,1,S,stdin);\n        if(H==T) return -1;return *H++;\n    }\n    inline int read()\n    {\n        int x=0;char c=Get();\n        while(!isdigit(c)) c=Get();\n        while(isdigit(c)) x=x*10+c-'0',c=Get();\n        return x;\n    }\n    char obuf[S],*oS=obuf,*oT=oS+S-1,c,qu[55];int qr;\n    inline void flush(){fwrite(obuf,1,oS-obuf,stdout);oS=obuf;}\n    inline void putc(char x){*oS++ =x;if(oS==oT) flush();}\n    template <class I>inline void print(I x)\n    {\n        if(!x) putc('0');\n        if(x<0) putc('-'),x=-x;\n        while(x) qu[++qr]=x%10+'0',x/=10;\n        while(qr) putc(qu[qr--]);\n    }\n}\n\nusing namespace IO;\nconst int N=200010;\nconst int M=10200010;\nconst int ha=998244353;\nint n,m,l,r,cnt[N],sum[N];\nint a[N],Hash[N],hs;\nint fac[M],ifac[M];\n\nint Pow(int a,int b)\n{\n    int ans=1;\n    for(;b;b>>=1,a=1ll*a*a%ha)\n        if(b&1) ans=1ll*ans*a%ha;\n    return ans;\n}\n\nvoid Init(int n)\n{\n    fac[0]=1;\n    for(int i=1;i<=n;i++)\n        fac[i]=1ll*fac[i-1]*i%ha;\n    ifac[n]=Pow(fac[n],ha-2);\n    for(int i=n-1;i>=0;i--)\n        ifac[i]=1ll*ifac[i+1]*(i+1)%ha;\n}\n\nint main()\n{\n    Init(10200000);\n    for(int T_T=read();T_T;T_T--)\n    {\n        n=read();m=read();l=read();r=read();\n        memset(cnt,0,sizeof(int)*(n+5));\n        memset(sum,0,sizeof(int)*(n+5));\n        int all=fac[n+m],rest=r-l+1,ans=1;\n        for(int i=1;i<=n;i++) Hash[i]=a[i]=read();\n        sort(Hash+1,Hash+1+n);\n        hs=unique(Hash+1,Hash+1+n)-(Hash+1);\n        for(int i=1;i<=hs;i++) rest-=(Hash[i]>=l&&Hash[i]<=r);\n        for(int i=1;i<=n;i++)\n        {\n            a[i]=lower_bound(Hash+1,Hash+1+hs,a[i])-Hash;\n            if(Hash[a[i]]>=l&&Hash[a[i]]<=r) cnt[a[i]]++;\n            sum[a[i]]++;ans=1ll*ans*sum[a[i]]%ha;\n        }\n        sort(cnt+1,cnt+1+hs);int zero=0;\n        for(int i=1;i<=hs;i++) if(cnt[i]==0) zero=i;\n        for(int i=1;i<=hs-zero;i++) cnt[i]=cnt[i+zero]%ha;\n        n=hs-zero;\n        for(int i=0;i<n;i++)\n        {\n            if(cnt[i+1]==cnt[i]) continue;\n            if(1ll*(cnt[i+1]-cnt[i])*(i+rest)<=m)\n            {\n                m-=(cnt[i+1]-cnt[i])*(i+rest);\n                int x=1ll*fac[cnt[i+1]]*ifac[cnt[i]]%ha;\n                ans=1ll*ans*Pow(x,i+rest)%ha;\n            }\n            else\n            {\n                int x=m/(i+rest);\n                int t=1ll*fac[cnt[i]+x]*ifac[cnt[i]]%ha;\n                ans=1ll*ans*Pow(t,i+rest)%ha;\n                ans=1ll*ans*Pow(cnt[i]+x+1,m%(i+rest))%ha;\n                m=0;break;\n            }\n        }\n        if(m>0)\n        {\n            int x=m/(r-l+1);\n            int t=1ll*fac[cnt[n]+x]*ifac[cnt[n]]%ha;\n            ans=1ll*ans*Pow(t,r-l+1)%ha;\n            ans=1ll*ans*Pow(cnt[n]+x+1,m%(r-l+1))%ha;\n        }\n        ans=1ll*all*Pow(ans,ha-2)%ha;\n        print(ans);putc('\\n');\n    }\n    flush();\n    return 0;\n}\n```\n\n",
        "postTime": 1540012622,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4561 \u3010[JXOI2018]\u6392\u5e8f\u95ee\u9898\u3011"
    },
    {
        "content": "\u770b\u5230\u767d\u767d\u80d6\u80d6\u7684\u4e24\u4e2a\u6837\u4f8b\u96be\u9053\u6ca1\u6709\u4e00\u70b9\u60f3\u6cd5\uff1f\n\n~~\u4e0d\u4f1a\u6570\u5b66\u671f\u671b\u4e5f\u7cca\u5f04\u5f97\u51fa\u7b54\u6848\u7684\u6838\u5fc3\u89e3\u6cd5\uff1a~~\n\n\u4ee4$b_i$\u4e3a$i$\u5728\u6700\u7ec8\u7684\u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\n\n\u5219$ans=A^{n+m}_{n+m}\\times\\prod_{i} \\frac{1}{b_i!}$\n\n\u4f46\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u5feb\u901f\u6c42\u89e3\uff1a\n\n\u6280\u5de7\u4e00 **\u9636\u4e58\u9884\u5904\u7406**\n\n\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684,\u5e94\u8be5\u90fd\u60f3\u5f97\u5230~~\u7ebf\u6027\u6c42\u9636\u4e58\u9006\u5143~~\u628a\u5206\u6bcd\u4e58\u8d77\u6765\u540e\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42\u9006\u5143\n\n\u6280\u5de7\u4e8c **\u7b5b\u53bb\u56fa\u70b9**\n\n\u5728\u5df2\u77e5\u7684$n$\u4e2a\u70b9\u4e2d\u6392\u5e8f\n\n\u5c0f\u4e8e$l$\u6216\u5927\u4e8e$r$\u7684\u70b9\u63d0\u53d6\u51fa\u8d21\u732e\n\n\u5728$l$\u4e0e$r$\u4e4b\u95f4\u7684\u5b58\u8d77\u6765(\u5b58\u51fa\u73b0\u7684\u6b21\u6570)\n```cpp\nif(l<=a[i]&&a[i]<=r){\n\tmp[++tot]=1;\n\twhile(a[i+1]==a[i]){mp[tot]++;i++;}\n}else{\n\tint sum=1;\n\twhile(a[i+1]==a[i]){sum++;i++;}\n\tans=(ll)ans*inv[sum]%mod;\n}\n```\n\u6280\u5de7\u4e09 **\u6c34\u5f80\u4f4e\u5904\u6d41**\n\n\u5b58\u8d77\u6765\u540e\u6570\u672c\u8eab\u5df2\u7ecf\u4e0d\u91cd\u8981,\u800c\u6570\u51fa\u73b0\u7684\u6b21\u6570\u662f\u5df2\u77e5\u7684\u4fe1\u606f\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5171$m$\u6b21\uff0c\u6bcf\u6b21\u589e\u52a0\u7684\u4e00\u5b9a\u662f\u51fa\u73b0\u6b21\u6570\u6700\u5c11\u7684\u90a3\u4e9b\u6570\u5b57\n\n$50pts$\u601d\u8def **\u5806**\n\n$100pts$\u601d\u8def\n\n\u6392\u5b8c\u5e8f\u540e,\u6570$i(i\\in~[l,r])$\u7684\u51fa\u73b0\u6b21\u6570\u6392\u6210\u4e00\u4e2a\u5355\u589e\u5f62\u72b6\n\n\u6b64\u65f6\u60f3\u8c61\u6709$m$\u6ef4\u6c34,\u6c34\u5f80\u4f4e\u5904\u6d41\u8865\u5728\u4f4e\u6d3c\u5904,\u7b26\u5408\u6211\u4eec\u7684\u8d2a\u5fc3\u601d\u8def\n\n\u4e8e\u662f\u5c31\u628a\u65b0\u6570\u5217\u5206\u6210\u6c34\u533a(\u540e$m$\u4e2a\u6570)\u4e0e\u9646\u5730(\u524d$n$\u4e2a\u6570)(\u4e5f\u53ef\u4ee5~~\u6c34\u6df9\u5927\u9646~~\u6ca1\u6709\u9646\u5730)\n\n\u9646\u5730:\u5355\u72ec\u5904\u7406\u63d0\u53d6\u8d21\u732e\n\n\u6c34\u533a:\u7531\u4e8e\u53ef\u80fd\u5269\u4f59\u4e00\u4e9b\u6c34\u65e0\u6cd5\u5e03\u6ee1\u5f53\u524d\u7684\u6c34\u9762,\u4e8e\u662f\u5c06\u6c34\u533a\u53c8\u5212\u5206\u4e3a\u9ad8\u5ea6(\u4ee3\u8868\u6b21\u6570)\u4e3a$m/len(len$\u4e3a\u6c34\u9762\u5bbd\u5ea6$)$\u548c$len/m+1$\u4e24\u90e8\u5206\u7528\u5feb\u901f\u5e42\u6c42\u51fa\u8d21\u732e\n\n\u5728\u6c42\u89e3\u65f6\u53ef\u4ee5\u628a\u56fa\u5b9a\u7684\u6b21\u6570(\u9646\u5730)\u5148\u5316\u4e3a\u53ef\u52a8\u7684\u6b21\u6570(\u6c34\u6ef4)\n\u518d\u5c1d\u8bd5\u4ece\u53f3\u7aef\u6700\u9ad8\u5904\u5411\u5de6\u4f9d\u6b21\u5224\u65ad\u6b64\u65f6\u6c34\u9762\u80fd\u5426\u8fbe\u5230\u8be5\u5904\u7684\u56fa\u5b9a\u6b21\u6570,\u5f53\u80fd\u8fbe\u5230\u65f6,\u518d\u5f80\u5de6\u4e00\u5b9a\u6c34\u9762\u9ad8\u4e8e\u539f\u9646\u5730,\u6b64\u65f6\u4fbf\u662f\u6700\u4f18\u89e3\u7684\u72b6\u6001\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define MX 10200005\n#define MXN 2000005\n#define mod 998244353 \nusing namespace std;\nint n,m,l,r;\nint T;\nint jc[MX];\nint inv[MX];\nint mp[MX],tot=0;\nint a[MXN];\nint ans=0,jcn=0;\nint power(int x,int y){\n\tint sum=1;\n\tfor(;y;y>>=1){\n\t\tif(y&1) sum=(ll)sum*x%mod;\n\t\tx=(ll)x*x%mod;\n\t}\n\treturn sum;\n}\nvoid Init(){\n\tjc[0]=1;\n\tfor(int i=1;i<=MX-3;++i){\n\t\tjc[i]=(ll)jc[i-1]*i%mod;\n\t}\n}\nint main(){\n\t//freopen(\"sort.in\",\"r\",stdin); \n\t//freopen(\"sort.out\",\"w\",stdout);\n\tscanf(\"%d\",&T);\n\tInit();\n\twhile(T--){\n\t\tscanf(\"%d%d%d%d\",&n,&m,&l,&r);\n\t\tint len=r-l+1;\n\t\tjcn=jc[n+m];\n\t\tfor(int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n\t\ta[n+1]=0;\n\t\tsort(a+1,a+n+1);\n\t\ttot=0,ans=1;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif(l<=a[i]&&a[i]<=r){\n\t\t\t\tmp[++tot]=1;\n\t\t\t\twhile(a[i+1]==a[i]){mp[tot]++;i++;}\n\t\t\t\tm+=mp[tot];//\u5c06\u9646\u5730\u5316\u4e3a\u6c34\u6ef4\n\t\t\t}else{\n\t\t\t\tint sum=1;\n\t\t\t\twhile(a[i+1]==a[i]){sum++;i++;}\n\t\t\t\tans=(ll)ans*jc[sum]%mod;//\u63d0\u53d6\u8d21\u732e\n\t\t\t}\n\t\t}\n\t\tsort(mp+1,mp+tot+1);\n\t\tfor(int i=tot;i>=0;--i) {\n\t\t\tif(m/len>=mp[i]) {//\u6c34\u9ad8\u4e8e\u5f53\u524d\u9646\u5730\n\t\t\t\tans=(ll)power(jc[m/len+1],m%len)*ans%mod*power(jc[m/len],len-m%len)%mod;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tm-=mp[i];//\u6c34\u65e0\u6cd5\u8fbe\u5230i\u5904\u672c\u9700\u7684\u9ad8\u5ea6,\u5316\u4e3a\u9646\u5730\n\t\t\t--len;//\u51cf\u5c11\u6c34\u9762\u5bbd\u5ea6\n\t\t\tans=(ll)ans*jc[mp[i]]%mod;//\u63d0\u53d6\u8d21\u732e\n\t\t}\n\t\tans=(ll)power(ans,mod-2)*jcn%mod;//\u5206\u6bcd\u6c42\u9006\u5143\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\u53e3\u624d\u4e0d\u597d,\u8bf7\u539f\u8c05~~\u6211\u5728\u8fd9\u778e\u626f\u6d6a\u8d39\u5927\u5bb6\u65f6\u95f4~~",
        "postTime": 1570006516,
        "uid": 166115,
        "name": "Midvoy_\u5c3a",
        "ccfLevel": 0,
        "title": "[JXOI2018]\u6392\u5e8f\u95ee\u9898"
    },
    {
        "content": "\u70b9\u51fb\u98df\u7528\u6548\u679c\u66f4\u4f73:[$blog$](https://www.cnblogs.com/hbxblog/p/10422957.html)\n\n### $Solution$\n\n#### $50\\ pts$\n\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u9898\u76ee,\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5199\u51fa\u6765\u7b54\u6848\u7684\u5f0f\u5b50:\n\n$$\\frac{(n+m)!}{a_1!a_2!...a_{tot}!}$$\n\n$a_1,a_2,...,a_{tot}$\u4e3a$n+m$\u4e2a\u6570\u4e2d\u4e0d\u540c\u7684\u6570\u51fa\u73b0\u7684\u4e2a\u6570\n\n\u90a3\u4e48$50$\u4fbf\u5f88\u597d\u60f3\u4e86.\n\n\u6211\u4eec\u73b0\u5728\u8981\u6c42\u7684\u662f\u671f\u671b\u8f6e\u6570\u6700\u591a,\u6240\u4ee5${a_1!a_2!...a_{tot}!}$\u8981\u5c3d\u91cf\u5c0f\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u6c42\u89e3,\u6bcf\u6b21\u627e\u51fa$[l,r]$\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u5c11\u7684\u6570,\u627e$m$\u6b21\u5373\u53ef,\u8fd9\u7528\u4e2a\u5806\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\n\n#### $100 \\ pts$\n\n\u6211\u4eec\u8fd8\u662f\u9700\u8981${a_1!a_2!...a_{tot}!}$\u5c3d\u91cf\u5c0f\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u51fa$a_1,a_2,...,a_{tot}$\u4e2d\u7684\u6700\u5c0f\u503c\u7684\u6700\u5927\u503c\uff0c\u6211\u4eec\u4ee4\u8fd9\u4e2a\u503c\u4e3a$ans$\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u5c31\u53ef\u4ee5\u77e5\u9053\u4e86$a_1,a_2,...,a_{tot}$\u7684\u5206\u5e03\n\n\u5bf9\u4e8e$>ans$\u7684\u6216\u4e0d\u5728[l,r]\u8fd9\u4e2a\u533a\u95f4\u5185\u7684,\u76f4\u63a5\u5c06\u4ed6\u4eec\u9636\u4e58\u4e58\u8d77\u6765\u5373\u53ef.\n\n\u5bf9\u4e8e[l,r]\u5185\u4e2a\u6570$<=ans$\u7684,\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c:\n\n\u7b97\u51fa\u5c06[l,r]\u5185\u4e2a\u6570$<=ans$\u7684\u8fb9\u6210$ans$\u540e\u5269\u4e0b$m$\u4e2a\u6570\u8fd8\u5269\u4e0b\u51e0\u4e2a.\u6211\u4eec\u4ee4\u8fd9\u4e2a\u6570\u4e3a$c$,[l,r]\u5185\u53bb\u89c1\u4e2a\u6570$<=ans$\u7684\u6570\u6709$k$\u4e2a\n\n\u6211\u4eec\u5c06\u8fd9$c$\u4e2a\u6570\u5206\u6210\u4e0d\u540c\u7684$c$\u4e2a\u63d2\u5165\u6570\u5217\u5373\u53ef.\n\n\u6240\u4ee5\u73b0\u5728\u7684\u4e2a\u6570\u4e3a:\n\n$c$ \u4e2a\u4e2a\u6570\u4e3a $ans+1$    \n\n$k-c$\u4e2a\u4e2a\u6570\u4e3a $ans$\n\n\u76f4\u63a5\u5feb\u901f\u5e42\u6c42,\u6700\u540e\u5427\u6c42\u7684\u4e58\u8d77\u6765,\u7528$(n+m)!$\u9664\u4ed6\u5c31\u597d\u4e86.\n\n\n### $Code$\n\n``` cpp\n#include<bits/stdc++.h>\n#define int long long\n#define rg register\n#define file(x) freopen(x\".in\",\"r\",stdin);freopen(x\".out\",\"w\",stdout);\nusing namespace std;\nconst int mod=998244353;\ninline int read(){\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9') f=(c=='-')?-1:1,c=getchar();\n    while(c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n    return f*x;\n}\nint n,m,tot,a[2000010],sum[2000010];\ninline int check(int x,int len){\n    int ans=0,flag=0;\n    for(int i=1;i<=tot;i++){\n        if(sum[i]>x)\n            break;\n        ans+=sum[i],flag=i;\n    }\n    int k=(len-tot+flag);\n    return m-(k*x-ans);\n}\ninline int ksm(int a,int b){\n    int ans=1;\n    while(b){\n        if(b&1)\n            ans=ans*a%mod;\n        a=a*a%mod,b>>=1;\n    }\n    return ans;\n}\nint jc[20000010];\nmain(){\n    int T=read(),l,r;\n    jc[0]=1;\n    for(int i=1;i<=10200000;i++)\n        jc[i]=jc[i-1]*i%mod;\n    while(T--){\n        n=read(),m=read(),l=read(),r=read(),tot=0;\n        for(int i=1;i<=n;i++)\n            a[i]=read();\n        sort(a+1,a+1+n);\n        int p=0,js=1;\n        a[n+1]=-2147483647;\n        for(int i=1;i<=n+1;i++){\n            if(a[i]!=a[i+1]){\n                if(a[i]<=r&&a[i]>=l)\n                    sum[++tot]=i-p;\n                else js=js*jc[(i-p)]%mod;\n            p=i;\n            }\n        }\n        sort(sum+1,sum+1+tot);\n        int L=0,R=m+n,maxx=0;\n        while(L<=R){\n            int mid=(L+R)>>1;\n            if(check(mid,(r-l+1))>=0)\n                L=mid+1,maxx=max(maxx,mid);\n            else R=mid-1;\n        }\n        int ans=0,flag=0,len=(r-l+1);\n        for(int i=1;i<=tot;i++) {\n            if(sum[i]>maxx) break;\n            ans+=sum[i],flag=i;\n        }\n        int k=(len-tot+flag),c=m-(k*maxx-ans);\n        for(int i=flag+1;i<=tot;i++) js=js*jc[sum[i]]%mod;\n        js=js*ksm(jc[maxx+1],c)%mod,js=js*ksm(jc[maxx],k-c)%mod;\n        printf(\"%lld\\n\",jc[n+m]*ksm(js,mod-2)%mod);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1550908642,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4561 \u3010[JXOI2018]\u6392\u5e8f\u95ee\u9898\u3011"
    },
    {
        "content": "\u5077\u61d2\u4f7f\u4e86unordered_map\u7ed3\u679ct\u98de\u4e86\u2026\u2026\n\n\u4e8b\u5b9e\u8bc1\u660e\u624b\u5199hash\u8868\u4fdd\u5e73\u5b89\u2026\u2026\n\n_____________\n### ~~(\u53ef\u4ee5\u8df3\u8fc7\u7684)~~\u524d\u7f6e\u829d\u58eb:\u79bb\u6563\u968f\u673a\u53d8\u91cf\u7684\u51e0\u4f55\u5206\u5e03\n\n~~\u5982\u679c\u5bf9\u6570\u5b66\u65e0\u611f\u53ef\u4ee5\u8df3\u8fc7\u6b64\u90e8\u5206~~\n\n\u5bf9\u4e8e\u4e00\u4e2a\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cfX\uff0c\u5982\u679c$P([x==k])=(1-p)^{k-1}p$(\u4e2dk\u4e3a\u6b63\u6574\u6570\uff0c$P([x==k])$\u8868\u793ax\u53d6k\u8fd9\u4e2a\u503c\u7684\u6982\u7387)\u7684\u8bdd\n\n\u6211\u4eec\u8bf4\u8fd9\u4e2a\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cfX\u670d\u4ece**\u53c2\u6570\u4e3ap\u7684\u51e0\u4f55\u5206\u5e03**\n\n\u4e00\u4e2a\u6bd4\u8f83\u5b9e\u9645\u7684\u4f8b\u5b50\u662f\u4e0d\u505c\u7684\u629b\u4e00\u4e2a\u6b63\u9762\u671d\u4e0a\u6982\u7387\u4e3ap\u7684\u786c\u5e01\uff0c\u629b\u5230\u6b63\u9762\u4e4b\u540e\u7acb\u5373\u505c\u6b62\uff0c\u6b64\u65f6\u629b\u786c\u5e01\u7684\u6b65\u6570\u5c31**\u670d\u4ece\u53c2\u6570\u4e3ap\u7684\u51e0\u4f55\u5206\u5e03**\n\n\u90a3\u4e48\u626f\u8fd9\u4e2a\u7384\u5b66\u7684\u4e1c\u897f\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\u670d\u4ece\u51e0\u4f55\u5206\u5e03\uff0c\u5b83\u7684\u671f\u671b\u548c\u65b9\u5dee\u5c31\u4f1a\u975e\u5e38\u975e\u5e38\u7684\u597d\u7b97\n\n\u90a3\u4e48\u8ba9\u6211\u4eec\u5c1d\u8bd5\u7740\u63a8\u5bfc\u4e00\u53d1\u670d\u4ece\u51e0\u4f55\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\u7684\u671f\u671b\n\n## $E(X)=p\\sum_{i=1}^{\\infty}i(1-p)^{i-1}$\n\n\u540e\u8fb9\u7684\u4e1c\u897f\u662f\u5927\u5bb6\u5728\u9ad8\u4e2d\u6570\u5b66\u4e2d\u5e38\u89c1\u7684\u7b49\u5dee\u6570\u5217\u4e58\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u7684\u5f62\u5f0f\u4e86\n\n\u53ef\u4ee5\u8bc1\u660e\u540e\u8fb9\u7684\u5f0f\u5b50\u662f$\\frac{1}{p^2}$\n\n\u6240\u4ee5\uff0c\u670d\u4ece\u51e0\u4f55\u5206\u5e03\u7684\u53d8\u91cf\u7684\u671f\u671b\u51fa\u5947\u7684\u597d\u7b97\u2026\u2026\n\n## $E(x)=p\\frac{1}{p^2}=\\frac{1}{p}$\n\n\u8fd9\u91cc\u987a\u4fbf\u7ed9\u51fa\u670d\u4ece\u53c2\u6570\u4e3ap\u7684\u96c6\u5408\u5206\u5e03\u7684\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u7684\u65b9\u5dee(\u5c3d\u7ba1\u548c\u8fd9\u9053\u9898\u5173\u7cfb\u4e0d\u5927\u5c31\u662f\u4e86)\n\n## $V(x)=\\frac{1-p}{p^2}$\n\n\n# \u672c\u9898\u9898\u89e3\n\n\u5148\u6765\u8bc1\u660e\u4e00\u53d1\u671f\u671b\u8fd0\u884c\u6b21\u6570\u5230\u5e95\u600e\u4e48\u7b97\n\n\u5047\u8bbe\u8fd9\u4e2a\u5e8f\u5217\u6709x\u4e2a\u5408\u6cd5\u7684\u6709\u5e8f\u5e8f\u5217(\u6bd4\u5982\u8bf4\u5e8f\u5217\u5143\u7d20\u5168\u90e8\u4e00\u6837\u7684\u65f6\u5019$x=N!$)\n\n\u90a3\u4e48\u663e\u7136\u7b97\u6cd5\u6bcf\u4e00\u8f6e\u7ed3\u675f\u7684\u6982\u7387\u662f$\\frac{x}{N!}$\u56e0\u4e3a\u4f60\u53ea\u9700\u8981ran\u51fa\u6765\u4e00\u4e2a\u5408\u6cd5\u7684\u5e8f\u5217\u5c31\u53ef\u4ee5\u4e86\n\n\u6240\u4ee5\u8bf4\u7b97\u6cd5\u5728\u6070\u597d\u7b2ck\u8f6e\u7ed3\u675f\u7684\u6982\u7387\u662f$(1-\\frac{x}{N!})^{k-1}\\frac{x}{N!}$\n\n\u6240\u4ee5\u8bf4\u7b97\u6cd5\u8fd0\u884c\u7684\u8f6e\u6570\u670d\u4ece\u53c2\u6570\u4e3a$\\frac{x}{N!}$\u7684\u51e0\u4f55\u5206\u5e03\n\n\u90a3\u4e48\u7b97\u6cd5\u671f\u671b\u8fd0\u884c\u8f6e\u6570\u81ea\u7136\u5c31\u662f$\\frac{N!}{x}$\u4e86(\u5982\u679c\u4f60\u8df3\u8fc7\u4e86\u521a\u624d\u7684\u6570\u5b66\u90e8\u5206\uff0c\u73b0\u5728\u53ea\u9700\u8981\u77e5\u9053\u7b97\u6cd5\u7684\u671f\u671b\u8fd0\u884c\u8f6e\u6570\u662f$\\frac{N!}{x}$\u5c31\u597d\u4e86)\n\n________________\n\n\u6240\u4ee5\u95ee\u9898\u6765\u4e86x\u600e\u4e48\u7b97\n\n\u663e\u7136\u5982\u679c\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u6240\u6709\u6570\u5b57\u4e92\u4e0d\u76f8\u540c\u7684\u8bddx=1\n\n\u4f46\u662f\u5982\u679c\u6709\u76f8\u540c\u7684\u6570\u5b57\u7684\u8bdd\uff0c\u7531\u4e8e\u76f8\u540c\u7684\u6570\u5b57\u957f\u7684\u5b8c\u5168\u4e00\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u76f8\u540c\u7684\u6570\u5b57\u6362\u6765\u6362\u53bb\u800c\u4e0d\u5f71\u54cd\u8fd9\u4e2a\u5e8f\u5217\u7684\u6709\u5e8f\u6027\n\n\u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u8bbe$cnt_{i}$\u8868\u793ai\u8fd9\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u7684\u8bdd\uff0c\u6211\u4eec\u7684x\u53ef\u4ee5\u8fd9\u4e48\u7b97(\u5f53\u7136\uff0c\u8fd9\u91cc\u8ba4\u4e3a0\u7684\u9636\u4e58\u662f1)\n\n## $x=\\prod_{i=1}^{\\infty}cnt_{i}!$\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u8981\u5411\u8fd9\u4e2a\u5e8f\u5217\u91cc\u989d\u5916\u653em\u4e2a\u5143\u7d20\u2026\u2026\u6240\u4ee5\u663e\u7136\u5206\u5b50\u5df2\u7ecf\u5b9a\u4e86\u5c31\u662f$(n+m)!$\u6211\u4eec\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u5206\u6bcdx\n\n\u7136\u540e\u8fd9\u91cc\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7684\u7ed3\u8bba\u5c31\u662f\u5404\u4e2acnt\u4e4b\u95f4\u5e94\u8be5\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\n\n\u6362\u53e5\u8bdd\u8bf4\u9664\u975e\u78b0\u5230\u4e86\u4e0d\u53ef\u8c03\u6574\u7684\u60c5\u51b5\uff0c\u5426\u5219\u6211\u4eec\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u5e94\u8be5\u53ea\u6709\u4e24\u79cd\u503c\uff0c\u5e76\u4e14\u8fd9\u4e24\u79cd\u503c\u53ea\u5dee1\n\n\u8bc1\u660e\u561b\u5c31\u662f\u8ba9\u51fa\u73b0i\u6b21\u7684\u6570\u5b57\u5c11\u51fa\u73b01\u7136\u540e\u51fa\u73b0j\u6b21\u7684\u6570\u5b57\u591a\u51fa\u73b01\u7684\u8bdd\uff0cx\u4f1a\u4e58\u4e0a\u4e00\u4e2a$\\frac{j+1}{i}$\u5982\u679ci>j\u7684\u8bdd\u6211\u4eec\u603b\u662f\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0d\u52a3\u7684\u89e3\uff0c\u7531\u4e8ei\u548cj\u521a\u597d\u5dee1\u7684\u60c5\u51b5\u662fx\u4e0d\u52a8\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u6700\u4f18\u89e3\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u5404\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u5e94\u8be5\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\uff0c\u9664\u975e\u8fd9\u4e2a\u6570\u5b57\u4e0d\u5728$[l,r]$\u4e4b\u5185(\u6b64\u65f6\u6211\u4eec\u653em\u4e2a\u6570\u6839\u672c\u6539\u53d8\u4e0d\u4e86\u5b83\u7684\u51fa\u73b0\u6b21\u6570)\u6216\u8005\u4ed6\u51fa\u73b0\u7684\u8fc7\u4e8e\u591a\u4e86\uff0c\u4ee5\u81f3\u4e8e\u6211\u4eec\u6700\u540e\u65e0\u6cd5\u8ba9\u4ed6\u548c\u5176\u4ed6\u7684\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u53ea\u5dee1\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8fd9\u6837\u4e00\u4e2a\u6a21\u578b\n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a$r-l+1$\u7684\u6c34\u6c60\u91cc\u8fb9\u6709\u4e00\u4e9b\u7a81\u51fa\u7684\u5bbd\u4e3a1\u9ad8\u4e3a$cnt_{i}$\u7684\u6321\u677f\n\n\u7136\u540e\u6211\u4eec\u73b0\u5728\u5411\u91cc\u8fb9\u6ce8\u5165m\u4e2a\u5355\u4f4d\u7684\u6c34\uff0c\u6c42\u6700\u540e\u6c34\u9762\u7684\u9ad8\u5ea6\n\n\u5f53\u7136\u8fd9\u91cc\u6700\u540e\u4f60\u6c42\u51fa\u6240\u8c13\u7684\"\u6c34\u9762\u9ad8\u5ea6\"\u4e4b\u540e\u5176\u5b9e\u8fd8\u662f\u8981\u53d6\u6210\u6574\u6570\u7684\n\n\u6700\u540e\u5728l,r\u5185\u90e8\u7684\u7684\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u5e94\u8be5\u662f\u6709\u4e00\u90e8\u5206\u662fa\u53e6\u4e00\u90e8\u5206\u662fa+1\u8fd8\u6709\u4e00\u4e9b\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u9ad8\u51fa\u4e86\"\u6c34\u9762\"\u8fd9\u4e2a\u4e1c\u897f\u6211\u4eec\u5c31\u7ba1\u4e0d\u4e86\u2026\u2026\n\n\u6240\u4ee5\u600e\u4e48\u7b97\u6c34\u9762\u9ad8\u5ea6\u5462\uff1f\n\n~~(\u548c\u6211\u4e00\u6837\u60f3\u5230\u4e8c\u5206\u7684\u81ea\u89c9\u9762\u58c1\u53bb\uff0c\u5b9e\u5728\u662f\u592a\u8822\u4e86)~~\n\n\u6211\u4eec\u628a\u5728\u539f\u5e8f\u5217\u4e2d\uff0c\u503c\u5728$[l,r]$\u8303\u56f4\u5185\u7684\u6570\u5b57\u6309\u7167**\u51fa\u73b0\u6b21\u6570**\u6392\u4e00\u4e2a\u5e8f\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u5904\u7406\u51fa\u6765\u8fd9\u6837\u4e00\u4e2a\u503c\n\n\u5982\u679c\u6c34\u9762\u9ad8\u5ea6\u548c\u5b83\u7684\u9ad8\u5ea6(\u4e5f\u5c31\u662f\u8fd9\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570)\u5e73\u9f50\uff0c\u90a3\u4e48\u6c34\u6c60\u91cc\u6709\u591a\u5c11\u6c34\uff0c\u59d1\u4e14\u53ef\u4ee5\u8bb0\u505a$Fil$\u4ec0\u4e48\u7684\n\n~~\u7136\u540e\u4f60\u53ef\u4ee5\u50cf\u6211\u4e00\u6837\u8822\u5f97\u4e0d\u884c\u7684\u4f7f\u7528lower_bound\u627e\u5230\u90a3\u4e9b\u6570\u5b57\u662f\u9ad8\u51fa\u6c34\u9762\u7684~~\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u4ece\u6700\u9ad8\u7684\u70b9\u4ece\u53f3\u5411\u5de6\u626b\u4e00\u904d\uff0c\u770b\u8fd9\u4e2a\u70b9\u7684$Fil$\u503c\u4ec0\u4e48\u65f6\u5019\u5c0f\u4e8em\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u4e4b\u524d\u7ecf\u8fc7\u7684$Fil$\u503c\u5927\u4e8em\u7684\u70b9\u5c31\u662f\u6240\u8c13\u7684\"\u9ad8\u51fa\u6c34\u9762\u7684\u70b9\"\n\n\u7136\u540e\u4f60\u6839\u636e\u9ad8\u5ea6\u7684\u524d\u7f00\u548c+m\u4e00\u7c7b\u7684\u4e1c\u897f\u7b97\u51fa\u603b\u4f53\u79ef\uff0c\u7136\u540e\u9664\u4e00\u4e0b\u6b64\u65f6\u7684\u957f\u5ea6\u5c31\u662f\u6240\u8c13\u7684\u6c34\u9762\u9ad8\u5ea6\uff0c\u7136\u540e\u4f53\u79ef\u819c\u4e00\u4e0blen\u5c31\u662f\u9ad8\u51fa\u6c34\u97621\u4e2a\u9ad8\u5ea6\u7684\u6570\u5b57\u7684\u4e2a\u6570\u4e86\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u5feb\u901f\u5e42\u7b97\u51fa\u8fd9\u90e8\u5206\u6570\u5b57\u7684\u8d21\u732e\u4e86\n\n\u81f3\u4e8e\u9ad8\u51fa\u6c34\u9762\u7684\u90e8\u5206\uff0c\u6211\u4eec\u5355\u7b97\u8d21\u732e\u66b4\u529b\u9636\u4e58\u5373\u53ef\n\n\u7136\u540e\u6211\u4eec\u7b97\u51fa\u4e86x\u4e4b\u540e\u8f93\u51fa$\\frac{(n+m)!}{x}$\u5373\u53ef\n\n(\u8fd9\u6837\u5e72\u8bb2\u4e0d\u662f\u975e\u5e38\u660e\u767d\uff0c\u53ef\u4ee5\u901a\u8fc7\u753b\u56fe\u548c\u770b\u4ee3\u7801\u52a0\u6df1\u7406\u89e3)\n\n\u7edf\u8ba1\u6bcf\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u51e0\u6b21\u53ef\u4ee5\u901a\u8fc7$std::map$(T\u98de)\u548c$std::tr1::unordered\\_map$(\u8fd8\u662fT)\u548c\u624b\u5199\u7684hash\u8868\u6765\u89e3\u51b3\n\n\u5176\u5b9e\u4ee3\u7801\u8fd8\u662f\u5f88\u597d\u5199\u7684~\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=2*1e5+10;const int M=1e7+N;typedef long long ll;const ll mod=998244353;\nconst int Md=(1<<25)-1;\nstruct hsh_map\\\\&\u54c8\u5e0c\u5927\u6cd5\u597d\uff01\n{\n    int f[N];int v[N];int ct;int x[N];int al[Md+10];\n    inline void clear(){for(int i=1;i<=ct;i++)al[v[i]&Md]=0;for(int i=1;i<=ct;i++)f[i]=0;ct=0;}\n    inline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}\n    int& operator [](int va)\\\\\u91cd\u8f7d\u4e86[]\u65b9\u4fbf\u5199\u4ee3\u7801\n    {for(int i=al[va&Md];i;i=x[i])if(v[i]==va)return f[i];add(va&Md,va);return f[ct];}\n}cnt1,cnt2;\nint n;int m;int L;int R;ll fac[M];ll res;int ct;int T;\nstruct data{int v;ll fil;int sum;friend bool operator <(data a,data b){return a.v<b.v;}}s[N];\ninline ll po(ll a,ll p){ll r=1;for(;p;p>>=1,a=a*a%mod)if(p&1)r=r*a%mod;return r;}\ninline bool cmp(const data& a,const data& b){return a.fil<b.fil;}\ninline void solve()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&L,&R);\n    res=1;int len=R-L+1;\n    for(int i=1,t;i<=n;i++){scanf(\"%d\",&t);((L<=t&&t<=R)?cnt1:cnt2)[t]++;}\n    if(m==0)//\u7279\u5224m=0\u4e0d\u7136\u4f1are\n    {\n        for(int i=1;i<=cnt2.ct;++i)(res*=fac[cnt2.f[i]])%=mod;\n        for(int i=1;i<=cnt1.ct;++i)(res*=fac[cnt1.f[i]])%=mod;\n        printf(\"%lld\\n\",fac[n]*po(res,mod-2)%mod);return;\n    }\n    for(int i=1;i<=cnt2.ct;++i){(res*=fac[cnt2.f[i]])%=mod;}//\u5355\u7b97\u4e0d\u5728l,r\u8303\u56f4\u5185\u7684\u6570\u5b57\n    for(int i=1;i<=cnt1.ct;++i){s[++ct]=(data){cnt1.f[i],0};}sort(s+1,s+ct+1);//\u6309\u51fa\u73b0\u6b21\u6570\u6392\u5e8f\n    for(int i=1,sum=0;i<=ct;i++){sum+=s[i].v;s[i].fil=(ll)(len-ct+i)*s[i].v-sum;s[i].sum=sum;}\n    data *p=lower_bound(s+1,s+ct+1,(data){0,m,0},cmp);int sum=(p-1)->sum;//\u8822\u5f97\u4e0d\u884c\u7684\u7528\u4e86lower_bound\n    for(;p!=s+ct+1;++p,len--)(res*=fac[p->v])%=mod;//\u8ba1\u7b97\u9ad8\u51fa\u6c34\u9762\u90e8\u5206\n    (res*=po(fac[(m+sum)/len],len))%=mod;(res*=po((m+sum)/len+1,(m+sum)%len))%=mod;//\u7136\u540e\u5feb\u901f\u5e42\u8ba1\u7b97\u6c34\u9762\u4e0b\u90e8\u5206\n    printf(\"%lld\\n\",fac[n+m]*po(res,mod-2)%mod);\n}\ninline void clear(){cnt1.clear();cnt2.clear();ct=0;}\nint main()\n{\n    fac[0]=1;for(int i=1;i<=M-10;i++)fac[i]=(fac[i-1]*i)%mod;scanf(\"%d\",&T);\n    for(int z=1;z<=T;z++){solve();clear();}return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1528377297,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4561 \u3010[JXOI2018]\u6392\u5e8f\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u4eca\u5929\u505a\u7684\u7b2c\u4e8c\u9053\u4e5d\u6761\u53ef\u601c\u7684\u9898\uff0c\u73b0\u5728\u5bf9\u4ed6\u7684\u9898\u7684\u5370\u8c61\u662f\uff1a\u8868\u9762\u6e05\u771f\u53ef\u505a\uff0c\u5b9e\u5219\u6bd2\u7624\u5751\u4eba\u3002\n\n\u4e0d\u8fc7\u9996\u5148\u8981\u611f\u8c22\u5409\u53f8\u673a\uff0c\u6211\u671f\u671b\u5b66\u7684\u7279\u70c2\uff0c\u597d\u5728\u6837\u4f8b\u76f4\u63a5\u544a\u8bc9\u6211\u4eec\u671f\u671b\u600e\u4e48\u6c42\u4e86\u3002\n\u4ee4$b_i$\u8868\u793a\u7b2c$i$\u4e2a\u4e0d\u540c\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u4e48\u671f\u671b\u5c31\u662f\n$$\\frac{(n + m)!}{b_1! * b_2! * \\ldots b_{tot}!}$$\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8ba9\u5206\u6bcd\u5c3d\u91cf\u5c0f\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u4e5f\u4e0d\u96be\uff0c\u60f3\u60f3\u5c31\u77e5\u9053\uff0c\u53ea\u8981\u8ba9\u6240\u6709$b_i$\u5c3d\u53ef\u80fd\u63a5\u8fd1\u5c31\u884c\u4e86\u3002\n\n\u8bc1\u660e\u5f88\u7b80\u5355\uff0c\u4ee5\u4e24\u4e2a\u6570\u4e3a\u4f8b\uff1a\u5982\u679c$a + b = x$\uff0c\u95ee$a, b$\u53d6\u4ec0\u4e48\u503c\u7684\u65f6\u5019$a! * b!$\u6700\u5c0f\u3002\n\u8bbe$a_1 + b_1 = x, a_2 + b_2 = x$\uff0c\u5176\u4e2d$a_1 \\geqslant b_1, a_2 \\geqslant b_2, a_1 > a_2, b_1 < b_2$\uff0c\u90a3\u4e48$a_1! * b_1! = a_2! * b_2! * \\frac{(a_2 + 1) * (a_2 + 2) * \\ldots * a_1}{(b_1 + 1) * (b_1 + 2) * \\ldots * b_2}$\u3002\u56e0\u4e3a$a_1 = a_2 + \\Delta t, b_1 = b_2 - \\Delta t$\uff0c\u6240\u4ee5\u540e\u9762\u7684\u5206\u6570\u7684\u5206\u5b50\u5206\u6bcd\u9879\u6570\u76f8\u540c\uff0c\u800c\u5206\u5b50\u7684\u6bcf\u4e00\u9879\u90fd\u5927\u4e8e\u5206\u6bcd\uff0c\u6240\u4ee5\u6574\u4e2a\u5206\u6570\u5fc5\u5b9a\u5927\u4e8e1.\n\n\u5c3d\u91cf\u63a5\u8fd1\uff0c\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f\u6700\u5927\u7684\u6700\u5c0f\uff0c\u90a3\u4e48\u81ea\u7136\u60f3\u5230\u4e8c\u5206\u3002\u7136\u540e\u4f3c\u4e4e\u5c31\u6ca1\u4e86\u3002\n\n\u4f46\u4e3a\u4ec0\u4e48\u88f8\u4e8c\u5206\u4e0d\u5bf9\u5462\uff0c\u56e0\u4e3a\u6709\u7684$b_i$\u53ef\u80fd\u5728\u539f\u6570\u5217\u4e2d\u5b58\u5728\uff0c\u4e14\u975e\u5e38\u5927\uff0c\u90a3\u4e48\u4e8c\u5206\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u8003\u8651\u4ed6\u4e86\uff0c\u5fc5\u987b\u5728\u540e\u9762\u5355\u72ec\u7b97\u8d21\u732e\u3002\n\n\u4ee4\u4e8c\u5206\u7684\u7b54\u6848\u662f$x$\uff0c\u6211\u4eec\u518d\u5217\u4e00\u4e2a\u4e8c\u5143\u4e00\u6b21\u65b9\u7a0b\u7ec4\u89e3\u51fa\u6765\u54ea\u4e9b$b_i$\u7b49\u4e8e$x$\uff0c\u54ea\u4e9b$b_i$\u662f$x - 1$\u3002\uff08\u624b\u7b97\u4e00\u4e0b\u5c31\u884c\uff09\n\n\u8fd9\u9898\u6700\u540e\u4e00\u4e2a\u5751\u70b9\u5c31\u662f\u7528map\u4f1a\u8d85\u65f6\uff0c\u79c9\u7740\u6b7b\u4e5f\u4e0d\u5199\u54c8\u5e0c\u8868\u7684\u7cbe\u795e\uff0c\u79bb\u6563\u5316\u540e\u76f4\u63a5$O(nlogn)$\u9884\u5904\u7406\u52a0\u4e0a\u5438\u6c27\uff0c\u603b\u7b97\u7ed9\u8fc7\u4e86\uff08loj\u5c31\u53ef\u4ee5\u8fc7\uff09\u3002\u867d\u7136\u90fd\u5e26\u4e2a$log$\uff0c\u4f46map\u5e38\u6570\u4f3c\u4e4e\u771f\u4e0d\u5c0f\u2026\u2026\n\n\u4ee3\u7801\u5949\u4e0a\n```c++\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<map>\nusing namespace std;\n#define enter puts(\"\") \n#define space putchar(' ')\n#define Mem(a, x) memset(a, x, sizeof(a))\n#define In inline\n//#define int long long\ntypedef long long ll;\ntypedef double db;\nconst int INF = 0x3f3f3f3f;\nconst db eps = 1e-8;\nconst int maxn = 2e6 + 5;\nconst int maxN = 1.2e7 + 5;\nconst ll mod = 998244353;\nconst int base = 999979;\ninline ll read()\n{\n  ll ans = 0;\n  char ch = getchar(), last = ' ';\n  while(!isdigit(ch)) last = ch, ch = getchar();\n  while(isdigit(ch)) ans = (ans << 1) + (ans << 3) + ch - '0', ch = getchar();\n  if(last == '-') ans = -ans;\n  return ans;\n}\ninline void write(ll x)\n{\n  if(x < 0) x = -x, putchar('-');\n  if(x >= 10) write(x / 10);\n  putchar(x % 10 + '0');\n}\n\nint n, _n, m, l, r;\nll a[maxn], b[maxn], c[maxn], cnt = 0, tot = 0;\nll bnum[maxn], cnum[maxn];\n\nIn ll quickpow(ll a, ll b)\n{\n  ll ret = 1;\n  for(; b; b >>= 1, a = a * a % mod)\n    if(b & 1) ret = ret * a % mod;\n  return ret;\n}\n\nll fac[maxN], inv[maxN];\nIn void init()\n{\n  fac[0] = inv[0] = 1;\n  for(int i = 1; i < maxN; ++i) fac[i] = fac[i - 1] * i % mod;\n  inv[maxN - 1] = quickpow(fac[maxN - 1], mod - 2);\n  for(int i = maxN - 2; i; --i) inv[i] = inv[i + 1] * (i + 1) % mod;\n}\n\nIn bool judge(int x)\n{\n  ll sum = cnt * x;\n  for(int i = 1; i <= tot; ++i) if(cnum[i] < x) sum += x - cnum[i];\n  return sum >= m;\n}\n\nIn ll solve()\n{\n  n = read(), m = read(), l = read(), r = read();\n  cnt = r - l + 1, tot = 0;\n  for(int i = 1; i <= n; ++i)\n    {\n      a[i] = b[i] = read(); \n      bnum[i] = 0;\n    }\n  sort(b + 1, b + n + 1);\n  _n = unique(b + 1, b + n + 1) - b - 1;\n  for(int i = 1; i <= n; ++i)\n    ++bnum[lower_bound(b + 1, b + _n + 1, a[i]) - b];\n  for(int i = 1; i <= _n; ++i)\n      if(b[i] >= l && b[i] <= r) c[++tot] = b[i], cnum[tot] = bnum[i], --cnt;\n  ll L = 0, R = m + n;\n  while(L < R)\n    {\n      int mid = (L + R) >> 1;\n      if(judge(mid)) R = mid;\n      else L = mid + 1;\n    }\n  ll cnt2 = cnt, sum = 0;\n  for(int i = 1; i <= tot; ++i) if(cnum[i] < L) ++cnt2, sum += cnum[i];\n  ll ans = fac[n + m];\n  if(cnt2 * L == m + sum) ans = ans * quickpow(inv[L], cnt2) % mod;\n  else\n    {\n      ll x = (1 - L) * cnt2 + m + sum, y = cnt2 * L - m - sum;\n      ll tp1 = quickpow(inv[L], x), tp2 = quickpow(inv[L - 1], y);\n      ans = ans * tp1 % mod * tp2 % mod;\n    }\n  for(int i = 1; i <= _n; ++i) if(b[i] < l || b[i] > r) ans = ans * inv[bnum[i]] % mod;\n  for(int i = 1; i <= tot; ++i) if(cnum[i] >= L) ans = ans * inv[cnum[i]] % mod;\n  return ans;\n}\n\nint main()\n{\n  init();\n  int T = read();\n  while(T--) write(solve()), enter;\n  return 0;\n}\n```",
        "postTime": 1553070650,
        "uid": 55965,
        "name": "mrclr",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4561 \u3010[JXOI2018]\u6392\u5e8f\u95ee\u9898\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u8003\u8651\u5230\u82e5\u751f\u6210\u4e00\u4e2a\u6392\u5217\u5408\u6cd5\u7684\u6982\u7387\u4e3a $p$\uff0c\u5219\u671f\u671b\u6b21\u6570\u4e3a $1 \\over p$\uff0c\u90a3\u4e48\uff0c\u6700\u5927\u5316\u671f\u671b\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u6700\u5c0f\u5316\u6982\u7387\u3002\n\u6211\u4eec\u53c8\u53ef\u4ee5\u53d1\u73b0\uff0c$p={\\prod cnt_i! \\over n!}$,\u5176\u4e2d $n$ \u4e3a\u603b\u957f\u5ea6\uff0c $cnt_i$ \u4e3a\u503c $i$ \u51fa\u73b0\u7684\u6b21\u6570\u3002\u56e0\u4e3a\u6bcf\u6b21\u53ea\u80fd\u63d2\u5165\u503c\u5728 $[l,r]$ \u7684\u6570\uff0c\u8003\u8651\u6700\u5c0f\u5316 $\\prod_{i=l} ^ r cnt_i$\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u6bcf\u6b21\u5c06\u6700\u5c0f\u7684 $cnt_i$ \u5c3d\u91cf\u5411\u7b2c\u4e8c\u5c0f\u7684 $cnt_i$ \u9760\uff0c\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u56e0\u4e3a\u5728\u6ca1\u52a0 $m$ \u4e2a\u6570\u65f6\u7684 $cnt_i$ \u7684\u6570\u76ee\u662f $O(n)$ \u7ea7\u522b\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u5c0f\u5f80\u5927\u679a\u4e3e $cnt_i$ \u5e76\u4e0d\u65ad\u8ba9\u5176\u52a0\u4e00\uff0c\u6700\u540e\u82e5\u6240\u6709\u6570\u90fd\u53d8\u6210\u4e86 $n$  \u4e14\u8fd8\u6709\u6b65\u6570\uff0c\u5373\u5c06\u5176\u6574\u4f53\u5c3d\u91cf\u5f80\u540e\u52a0\u5373\u53ef\u3002\u6700\u540e\u518d\u7b97\u9664\u6389 $[l,r]$ \u4e4b\u95f4\u7684\u6570\u7684 $cnt$\uff0c\u76f4\u63a5\u5e26\u5165\u5f0f\u5b50\u8ba1\u7b97\u5373\u53ef\u3002\u6700\u540e\u63d0\u4e2a\u9192\uff0c\u8fd9\u9898\u6709\u4e9b\u8bb8\u5361\u5e38\uff0c\u5982\u679c\u4f60\u7528\u7684\u662f ``` unordered_map``` \u6765\u5b9e\u73b0\u79bb\u6563\uff0c\u8bf7\u52ff\u6bcf\u6b21\u505a $clear$\uff0c\u56e0\u4e3a\u8fd9\u6837\u5e38\u6570\u5de8\u5927\uff0c\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u5f00\u4e2a\u54c8\u5e0c\u8868\u3002\n\n[Code](https://www.luogu.com.cn/paste/f83af7vn)",
        "postTime": 1683293963,
        "uid": 360977,
        "name": "541forever",
        "ccfLevel": 0,
        "title": "P4561"
    }
]