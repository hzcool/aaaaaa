[
    {
        "content": "#### \u524d\u8a00\n\n\u4eca\u5929\u4e0b\u5348\u540c\u5b66 YLWang \u7a81\u7136\u544a\u8bc9\u6211\u6709\u8fd9\u6837\u4e00\u4e2a[\u5e16\u5b50](https://www.luogu.com.cn/discuss/show/270466)\uff0c\u4e8e\u662f\u601d\u8003\u4e86\u4e00\u4e0b\u6b64\u9898\u4e0d\u6253\u8868\u7684\u505a\u6cd5\uff0c\u5c31\u6709\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\n\n----\n#### \u524d\u7f6e\u77e5\u8bc6\uff1a\u9ad8\u65af\u6d88\u5143\uff0cburnside \u5f15\u7406\n\n\u6211\u4eec\u5c06 $ 1 $ \u770b\u6210 $ (-1)^0 $\uff0c$ -1 $ \u770b\u6210 $ (-1)^1 $\uff0c\u6211\u4eec\u6c42\u4e24\u4e2a\u6570\u7684\u4e58\u79ef\u5c31\u53ef\u4ee5\u53d8\u6210\u5e42\u6b21\u76f8\u52a0\u7684\u6027\u8d28\uff0c\u53c8\u56e0\u4e3a\u6709 $ (-1)^2 = (-1)^0 $\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u5e42\u6b21\u76f8\u52a0\u662f\u5728 $ \\mod 2 $ \u610f\u4e49\u4e0b\u8fdb\u884c\u7684\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u5c31\u662f\u5f02\u6216\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9898\u76ee\u8f6c\u6362\u4e3a\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u586b\u4e0a $ 0/1 $\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u6570\u7b49\u4e8e\u76f8\u90bb\u7684\u56db\u4e2a\u6570\u7684\u5f02\u6216\u548c\uff0c\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u65b9\u6848\u6570\u3002\n\n\u5982\u679c\u4e0d\u7528\u8003\u8651\u672c\u8d28\u4e0d\u540c\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e $ (i, j) $ \u5217\u51fa\u5f0f\u5b50 $ x_{i, j} \\oplus x_{i - 1, j} \\oplus x_{i + 1, j} \\oplus x_{i, j - 1} \\oplus x_{i, j + 1} = 0 $\uff0c\u5176\u4e2d $ \\oplus $ \u662f\u5f02\u6216\uff0c\u6211\u4eec\u6c42\u51fa\u8fd9\u4e2a\u65b9\u7a0b\u7ec4\u7684\u89e3\u7684\u4e2a\u6570\u5c31\u884c\u4e86\uff0c\u65b9\u7a0b\u7ec4\u89e3\u7684\u4e2a\u6570\u662f $ 2 $ \u7684\u65b9\u7a0b\u7ec4\u81ea\u7531\u5143\u4e2a\u6570\u6b21\u5e42\uff0c\u53ef\u4ee5\u7528\u9ad8\u65af\u6d88\u5143 $ O(n^6) $\u6c42\u51fa\uff0c\u7531\u4e8e\u662f\u7528\u9ad8\u65af\u6d88\u5143\u6c42\u89e3\u5f02\u6216\u65b9\u7a0b\u7ec4\uff0c\u53ef\u4ee5\u7528 bitset \u5c06\u590d\u6742\u5ea6\u4f18\u5316\u81f3 $ O(\\frac{n^6}{w}) $\u3002\n\n\u5982\u679c\u8981\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u65b9\u6848\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 burnside \u5f15\u7406\u6765\u89e3\u51b3\uff0c\u5bb9\u6613\u53d1\u73b0\u53ea\u6709\u7ffb\u8f6c\u548c\u65cb\u8f6c\u7684\u7f6e\u6362\u7fa4\u5927\u5c0f\u662f\u5e38\u6570\u7ea7\u522b\u7684\uff08\u5c0f\u4e8e\u7b49\u4e8e $ 8 $\uff09\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u79cd\u7f6e\u6362\u7fa4\u628a\u4e0d\u52a8\u70b9\u538b\u6210\u4e00\u4e2a\u53d8\u91cf\uff0c\u6c42\u4e00\u4e0b\u65b9\u6848\u6570\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $ O(\\frac{n^6}{w}) $\uff0c\u5b9e\u9645\u4e0a $ n=100 $ \u4e5f\u80fd\u5728 $ 1 $ \u79d2\u4e4b\u5185\u8dd1\u51fa\u89e3\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(i, a, b) for (int i = a; i <= b; i++)\n#define per(i, a, b) for (int i = a; i >= b; i--)\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef pair <int, int> pii;\ntypedef long long ll;\n\ntemplate <typename _T>\ninline void read(_T &f) {\n    f = 0; _T fu = 1; char c = getchar();\n    while (c < '0' || c > '9') { if (c == '-') { fu = -1; } c = getchar(); }\n    while (c >= '0' && c <= '9') { f = (f << 3) + (f << 1) + (c & 15); c = getchar(); }\n    f *= fu;\n}\n\ntemplate <typename T>\nvoid print(T x) {\n    if (x < 0) putchar('-'), x = -x;\n    if (x < 10) putchar(x + 48);\n    else print(x / 10), putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid print(T x, char t) {\n    print(x); putchar(t);\n}\n\nconst int N = 35;\nconst int dx[4] = {1, -1, 0, 0};\nconst int dy[4] = {0, 0, 1, -1};\n\nbitset <N * N> mat[N * N];\n\nint gauss(int n, int m) {\n    int ans = 1;\n    for (int i = 1; i <= m; i++) {\n        int id = 0;\n        for (int j = i; j <= n; j++) {\n            if (mat[j][i] == 1) {\n                id = j;\n                break;\n            }\n        }\n        if (!id) {\n            ans <<= 1;\n            continue;\n        }\n        if (id != i) swap(mat[i], mat[id]);\n        for (int j = i + 1; j <= n; j++) {\n            if (mat[j][i]) {\n                mat[j] ^= mat[i];\n            }\n        }\n    }\n    return ans;\n}\n\nint go[N * N], used[N * N], id[N * N];\nint n, len, tot, ans;\n\nstruct Matrix { int a[N][N]; };\n\nbool operator < (const Matrix a, const Matrix b) {\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            if (a.a[i][j] != b.a[i][j]) {\n                return a.a[i][j] < b.a[i][j];\n            }\n        }\n    }\n    return 0;\n}\n\nset <Matrix> states;\nset <Matrix> :: iterator it;\nqueue <Matrix> q;\n\nMatrix rotate(Matrix a) {\n    Matrix ans;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            ans.a[j][n - i + 1] = a.a[i][j];\n        }\n    }\n    return ans;\n}\n\nMatrix flip(Matrix a) {\n    Matrix ans;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            ans.a[n - i + 1][j] = a.a[i][j];\n        }\n    }\n    return ans;\n}\n\ninline int calc(int x, int y) {\n    return (x - 1) * n + y;\n}\n\nint main() {\n    read(n);\n    Matrix a;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            a.a[i][j] = calc(i, j);\n        }\n    }\n    states.insert(a); q.push(a);\n    while (!q.empty()) {\n        Matrix u = q.front(), v; q.pop();\n        v = rotate(u);\n        if (!states.count(v)) {\n            states.insert(v);\n            q.push(v);\n        }\n        v = flip(u);\n        if (!states.count(v)) {\n            states.insert(v);\n            q.push(v);\n        }\n    }\n    for (it = states.begin(); it != states.end(); ++it) {\n        Matrix u = *it;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                go[u.a[i][j]] = calc(i, j);\n            }\n        }\n        memset(used, 0, sizeof(used)); tot = 0;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                int now = calc(i, j);\n                if (!used[now]) {\n                    ++tot;\n                    while (!used[now]) {\n                        used[now] = 1;\n                        id[now] = tot;\n                        now = go[now];\n                    }\n                }\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                int now = calc(i, j);\n                mat[now].reset(); mat[now][id[now]] = 1;\n                for (int k = 0; k < 4; k++) {\n                    int x = i + dx[k], y = j + dy[k];\n                    if (x <= 0 || y <= 0 || x > n || y > n) continue;\n                    int v = id[calc(x, y)];\n                    mat[now][v] = 1 - mat[now][v];\n                }\n            }\n        }\n        ans += gauss(n * n, tot);\n    }\n    ans /= (int)states.size();\n    print(ans, '\\n');\n    return 0;\n}\n```\n\nupd\uff1a\u53ef\u4ee5\u5c06\u6b64\u505a\u6cd5\u4f18\u5316\u81f3 $ O(\\frac{n^4}{w}) $\uff0c\u611f\u8c22 @142857cs \u7684\u63d0\u70b9\n\n\u6211\u4eec\u53ea\u628a\u7b2c\u4e00\u884c\u8bbe\u4e3a\u672a\u77e5\u6570\uff0c\u5269\u4e0b\u7684\u683c\u5b50\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u884c\u8868\u793a\u51fa\u6765\uff0c\u8fd9\u6837\u5c31\u53ea\u6709 $ n^2 $ \u4e2a\u65b9\u7a0b\u548c $ n $ \u4e2a\u7cfb\u6570\u4e86\n\n[code](https://www.luogu.com.cn/paste/3g7hvxfe)",
        "postTime": 1603780019,
        "uid": 51815,
        "name": "LJC00118",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2225 \u3010[HNOI2001]\u68cb\u76d8\u53d8\u6362\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u662f\u6765\u8bef\u5bfc\u65b0\u4eba\u7684(x\n\n\u8fd9\u9053\u9898\u4e0d\u61c2\u600e\u4e48\u505a\uff0c\u4f46\u662f\u8f93\u5165\u53ea\u6709\u4e00\u4e2a\u6570\uff0c\u8fd8\u662f1-29\u4e4b\u95f4\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e71\u641e\u4e00\u4e0b\n\n\u5bf9\uff0c\u5c31\u662f\u6253\u8868\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u7701\u9009\u51fa\u4e86\u7684\u8bdd\u8bb2\u9053\u7406\u6253\u8868\u53ef\u4ee5\u505a\u5230100\u5206\u7684\uff0c\u867d\u7136\u8fd8\u4e0d\u77e5\u9053\u6b63\u89e3\u662f\u4ec0\u4e48\uff0c\u8fd9\u91cc\u5c31\u8bef\u5bfc\u65b0\u4eba\u7684\u53d1\u4e00\u4e0b\u6253\u8868\u505a\u6cd5\u5427\n\n\u6253\u8868\u6700\u91cd\u8981\u7684\u662f\u66b4\u529b\n\n\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2aN\u6211\u4eec\u8981\u5728\u4e0d\u5927\u7684\u590d\u6742\u5ea6\u5185\u7b97\u51fa\u6765\u51c6\u786e\u7684\u7ed3\u679c\uff0c\u5f53\u7136\u592a\u59275\u4e2a\u5c0f\u65f6\u4e5f\u8dd1\u4e0d\u5b8c\u7684\u8bdd\u6211\u4e5f\u5e2e\u4e0d\u4e86\u4f60\n\n\u5bf9\u4e8eN\\*N\u7684\u68cb\u76d8\n\n\u6211\u4eec\u53ef\u4ee5$O(2^N)$\u679a\u4e3e\u7b2c\u4e00\u884c\u67d0\u4e00\u4f4d\u662f1\u8fd8\u662f-1\uff0c\u7136\u540e\u5f80\u4e0b\u53ef\u4ee5$O(N^2)$\u9012\u63a8\u51fa\u5176\u4ed6\u683c\u5b50\u7684\u552f\u4e00\u72b6\u6001\uff0c\u867d\u7136\u4e0d\u4fdd\u8bc1\u72b6\u6001\u5408\u6cd5\u4f46\u662f\u80fd\u4fdd\u8bc1\u552f\u4e00\n\n\u5bf9\u4e8e\u5f97\u5230\u7684\u4e00\u4e2aN\\*N\u7684\u68cb\u76d8\uff0c\u7ecf\u8fc7\u4e09\u6b21\u65cb\u8f6c\uff0c\u56db\u6b21\u955c\u50cf\uff0c\u56db\u6b21\u4e0a\u4e0b\u98a0\u5012\u540e\u5f97\u523012\u4e2a\u68cb\u76d8\n\n\u5982\u679c\u90fd\u6ca1\u5728\u96c6\u5408\u91cc\u5c31\u7ed9\u7b54\u6848+1\uff0c\u5e76\u628a\u8fd9\u4e9b\u53d8\u6362\u77e9\u9635\u90fd\u52a0\u5165\u96c6\u5408\n\n\u96c6\u5408\u53ef\u4ee5\u7528set\u5b9e\u73b0\uff0c\u77e9\u9635\u6211\u4eec\u53ef\u4ee5hash\u538b\u7f29\u4e00\u4e0b\u518d\u653e\u5165set\n\n\u8fd9\u6837\u7684\u66b4\u529b\u6253\u8868\u590d\u6742\u5ea6\u662f$O(2^N*(N^2+logK))$\n\nK\u6309\u7167\u9898\u76ee\u63cf\u8ff0\u7684\u8bdd\u5927\u6982\u5c31\u662f9000\\*12\u5427,\u4e0d\u7ba1\u600e\u4e48\u8bf4\u590d\u6742\u5ea6\u6bd4$2^{N^2}$\u597d\u591a\u4e86\n\n\u8fd9\u6837\u6253\u8868\u7684\u8bdd\u4eb2\u6d4b29\u6570\u636e\u5927\u69821500s\n\n28\u5927\u6982750s\uff0c\u56e0\u4e3a\u590d\u6742\u5ea6\u91cd\u70b9\u662f\u91cc\u9762\u90a3\u4e2a\u6307\u6570\n\n\u90a3\u6837\u6253\u8868\u6253\u51fa1-29\u7684\u5927\u6982\u9700\u89813000s\uff0c\u4e5f\u624d\u4e00\u4e2a\u5c0f\u65f6\u800c\u5df2\uff0c\u8fd9\u671f\u95f4\u53ef\u4ee5\u505a\u5176\u4ed6\u9898\n\n\u7136\u540e\u628a\u6253\u51fa\u6765\u7684\u8868\u653e\u5165\u5341\u51e0\u884c\u7684\u7a0b\u5e8f\u4e2d\u4ea4\u4e0a\u53bb\u5c31\u884c\u4e86\n\n\u867d\u7136\u4e0d\u662f\u6b63\u89e3\uff0c\u4f46\u662f\u8fd9\u65b9\u6cd5\u5728\u6bd4\u8d5b\u4e2d\u4e5f\u9002\u7528\n\n\u4ee3\u7801\u6ca1\u5fc5\u8981\u8d34\uff0c\u76f4\u63a5\u8d34\u6253\u8868\u7684\u73a9\u610f\u5427\n\nhttp://paste.ubuntu.com/25539072/\n",
        "postTime": 1505462839,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2225 \u3010[HNOI2001]\u68cb\u76d8\u53d8\u6362\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u7bc7\u9898\u89e3\u7b97\u662f\u6253\u8868\u9898\u89e3\u3002\u4e0d\u8fc7\u7531\u4e8e\u5b9e\u9645\u590d\u6742\u5ea6\u4e3a $\\mathcal O(\\frac{n^2}{w}\\cdot 2^n)$ \uff08\u5176\u4e2d $w=32$ \uff09\uff0c\u6bd4\u53e6\u5916\u4e00\u7bc7\u9898\u89e3\u7684 $\\mathcal O(n^2\\cdot 2^n)$ \u5feb\u4e0d\u5c11\uff08\u5927\u6982\u51e0\u5206\u949f\u5c31\u80fd\u5168\u90e8\u6253\u5b8c\uff09\uff0c\u6240\u4ee5\u8fd8\u662f\u6709\u4e00\u5b9a\u53c2\u8003\u4ef7\u503c\u7684\uff08\uff1f\uff09\n\n## \u9898\u89e3\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6570\u5b57 $-1$ \uff0c\u5b83\u7684\u56db\u5468\u5e94\u5f53\u6709\u5947\u6570\u4e2a $-1$ \uff1b\u5bf9\u4e8e $1$ \uff0c\u5b83\u7684\u56db\u5468\u5e94\u5f53\u6709\u5076\u6570\u4e2a $-1$ \u3002\u7edf\u4e00\u4e00\u4e0b\uff0c\u5c31\u662f\u8fde\u5e26\u81ea\u8eab\uff0c\u4e00\u5171\u6709\u5076\u6570\u4e2a $-1$ \u3002\u4e8e\u662f\u6211\u4eec\u628a $-1$ \u7f16\u53f7\u4e3a $1$ \uff0c\u628a $1$ \u7f16\u53f7\u4e3a $0$ \uff0c\u7b26\u5408\u6761\u4ef6\u7684\u68cb\u76d8\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u60c5\u5f62\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u53ca\u5b83\u56db\u5468\u7684\u56db\u4e2a\u4f4d\u7f6e\uff0c $1$ \u7684\u4e2a\u6570\u4e3a\u5076\u6570\u3002\n\n\u6309\u7167\u5f80\u5e38\u5957\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a**\u5047\u5982\u786e\u5b9a\u4e86\u7b2c\u4e00\u884c\uff0c\u5c31\u80fd\u786e\u5b9a\u51fa\u6bcf\u4e00\u884c**\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c $n=4$ \uff0c\u7b2c\u4e00\u884c\u662f $\\{1,0,1,1\\}$ \u3002\u90a3\u4e48\u7b2c\u4e8c\u884c\u7b2c\u4e00\u4e2a\u6570\u5b57\u5fc5\u7136\u662f $1$ \uff0c\u4e0d\u7136\u7b2c\u4e00\u884c\u7b2c\u4e00\u4e2a\u6570\u5b57\u7684\u4f4d\u7f6e\u4e0d\u5408\u6761\u4ef6\uff1b\u540c\u7406\uff0c\u7b2c\u4e8c\u884c\u7b2c\u4e8c\u4e2a\u6570\u5b57\u5fc5\u7136\u662f $0$ \uff0c\u7b2c\u4e09\u4e2a\u5fc5\u7136\u662f $0$ \uff0c\u7b2c\u56db\u4e2a\u5fc5\u7136\u662f $0$ \u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u51fa\u7b2c\u4e8c\u884c\u4e3a $\\{1,0,0,0\\}$ \u3002\u7531\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u7b2c\u4e00\u884c\u63a8\u51fa\u7b2c\u4e8c\u884c\uff0c\u7531\u7b2c\u4e8c\u884c\u63a8\u51fa\u7b2c\u4e09\u884c\u2026\u2026\n\n\u8003\u8651\u4ece\u7b2c $i$ \u884c\u63a8\u51fa\u7b2c $i+1$ \u884c\u3002\u5bf9\u4e8e\u7b2c $i+1$ \u884c\u7684\u7b2c $j$ \u4e2a\u6570\u5b57\uff0c\u5b83\u4e0e\u7b2c $i$ \u884c\u7684\u7b2c $j-1,j,j+1$ \u4e2a\u6570\u5b57\u4ee5\u53ca\u7b2c $i-1$ \u884c\u7684\u7b2c $j$ \u4e2a\u6570\u5b57\u6709\u5173\u3002\u5047\u5982\u6211\u4eec\u91c7\u7528**\u72b6\u538b** $\\bm {dp}$ \u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e00\u884c\u538b\u7f29\u4e3a\u4e00\u4e2a\u72b6\u6001 $s$ \uff0c $s$ \u7684\u4e8c\u8fdb\u5236\u4e0b\u7b2c $j$ \u4f4d\u8868\u793a\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u503c\uff0c\u90a3\u4e48\u6709\uff1a\n\n$$s_i=\\big((s_{i-1}\\operatorname{lshift} 1)\\oplus(s_{i-1}\\operatorname{rshift} 1) \\oplus s_{i-1}\\oplus s_{i-2} \\big)\\operatorname{and} (2^n-1)$$\n\n\u5176\u4e2d\uff0c $\\operatorname{lshift}$ \u548c $\\operatorname{rshift}$ \u5206\u522b\u662f\u4e8c\u8fdb\u5236\u4e0b\u7684\u5de6\u79fb\u3001\u53f3\u79fb\uff08\u5bf9\u5e94\u4e8e C++ \u4e2d\u7684 `<<` \u548c `>>` \uff09\uff1b $\\oplus$ \u662f\u4e8c\u8fdb\u5236\u4e0b\u7684\u5f02\u6216\u64cd\u4f5c\u3002\n\n\u7136\u540e\u6211\u4eec\u8ba1\u7b97\u51fa $\\bm{s_{n+1}}$ \uff0c\u82e5\u5b83\u5168\u90e8\u90fd\u662f $0$ \uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u5bf9\u4e8e\u5176\u4ed6\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u7b26\u5408\u6761\u4ef6\u3002\n\n\u7531\u4e8e\u672c\u9898\u6709\u4e2a\u6bd4\u8f83\u9ebb\u70e6\u7684\u70b9\uff0c\u5c31\u662f**\u672c\u8d28\u4e0d\u540c\u7684\u65b9\u6848\u6570**\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528\u54c8\u5e0c\u8868\u8fdb\u884c\u5904\u7406\u3002\u5047\u5982 $s_1=x$ \u65f6\u5408\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u51fa $s_1,s_2\\cdots$ \u7ec4\u6210\u7684 $01$ \u77e9\u9635\u7684\u7b2c\u4e00\u5217 $p$ \u3001\u6700\u540e\u4e00\u5217 $q$ \u3001\u6700\u540e\u4e00\u884c $y$ \u3002\u7136\u540e\u628a\u5b83\u4eec\uff0c\u4ee5\u53ca\u5b83\u4eec\u7ffb\u8f6c\u540e\u7684\u503c\u63d2\u5165\u54c8\u5e0c\u8868\u5f53\u4e2d\u3002\u7531\u4e8e\u786e\u5b9a\u4e86\u68cb\u76d8\u7684\u7b2c\u4e00\u884c\u5c31\u80fd\u786e\u5b9a\u6574\u4e2a\u68cb\u76d8\uff0c\u56e0\u6b64\u53ea\u8981\u628a\u5408\u6cd5\u68cb\u76d8\u4e2d\u53ef\u80fd\u653e\u5728\u7b2c\u4e00\u884c\u7684\u4e1c\u897f\u5168\u90e8\u63d2\u5165\u54c8\u5e0c\u8868\u4e2d\u5c31\u884c\u4e86\u3002\n\n\u7531\u4e8e $\\text{STL}$ \u7684 $\\text{map}$ \u7b49\u6bd4\u8f83\u6162\uff0c\u6240\u4ee5\u5efa\u8bae\u624b\u5199\u4e00\u4e2a\u54c8\u5e0c\u8868\u3002\u5728\u672c\u5730\u5f00 $\\text{O3}$ \u4f18\u5316\uff0c\u6700\u5927\u7684 $n=30$ \u8dd1\u4e86\u4e00\u5206\u949f\u5de6\u53f3\uff0c\u800c\u672c\u9898\u5b9e\u9645\u6570\u636e\u6700\u5927\u7684\u70b9 \uff08 $n=29$ \uff09\u5219\u53ea\u8981\u534a\u5206\u949f\u4e0d\u5230\u3002\u56e0\u6b64\u5728\u8d5b\u573a\u4e0a\u53ef\u4ee5\u8f7b\u677e\u6109\u5feb\u5730\u6253\u51fa\u8868\u4e86\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define up(l,r,i) for(int i=l,END##i=r;i<=END##i;++i)\n#define dn(r,l,i) for(int i=r,END##i=l;i>=END##i;--i)\nusing namespace std;\ntypedef long long i64;\ntypedef unsigned int       u32;\ntypedef unsigned long long u64;\nconst int INF =2147483647;\nconst int MAXT=1<<16;\nu32 n,ans,R[MAXT];\nint qread(){\n    int w=1,c,ret;\n    while((c=getchar())> '9'||c< '0') w=(c=='-'?-1:1); ret=c-'0';\n    while((c=getchar())>='0'&&c<='9') ret=ret*10+c-'0';\n    return ret*w;\n}\nvoid out(int x){\n    dn(31,0,i) putchar(x&(1<<i)?'1':'0'); puts(\"\");\n}\nnamespace Hash{\n    const int SIZ=5999997;\n    int H[SIZ],N[SIZ],V[SIZ],t;\n    void cln(){memset(H,0,sizeof(H)),t=0;}\n    void add(int x){int p=x%SIZ; V[++t]=x,N[t]=H[p],H[p]=t;}\n    bool fnd(int x){for(int p=H[x%SIZ];p;p=N[p]) if(V[p]==x) return true; return false;}\n};\nu32 _swp(u32 x){\n    u32 t=0; up(0,15,i) if(x&(1<<(15-i))) t|=1<<i; return t;\n}\nu32 swp(u32 x){\n    x<<=32-n; return (R[x>>16])|(R[x&0xffff]<<16);\n}\nint main(){\n    up(0,(1<<16)-1,i) R[i]=_swp(i);\n    up(1,30,i){\n        n=i,ans=0; Hash::cln();\n        up(0,(1<<n)-1,i){\n            if(i>swp(i)) continue;\n            u32 x=i,y=0,p=x&1,q=x>>n-1,l=x,ll=0;\n            up(1,n-1,j){\n                x=((x<<1)^(x>>1)^x^ll)&((1<<n)-1),ll=l,l=x;\n                p|=(x&1)<<j,q|=(x>>n-1)<<j;\n            }\n            if(!Hash::fnd(i)&&!(((x<<1)^(x>>1)^x^ll)&((1<<n)-1))){\n                ++ans;\n                Hash::add(i),Hash::add(x),Hash::add(swp(i)),Hash::add(swp(x));\n                Hash::add(p),Hash::add(q),Hash::add(swp(p)),Hash::add(swp(q));\n            }\n        }\n        printf(\"%u,\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1626276910,
        "uid": 330759,
        "name": "\u56e7\u4ed9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2225 \u3010[HNOI2001]\u68cb\u76d8\u53d8\u6362\u3011"
    }
]