[
    {
        "content": "**\u901a\u6cd5\uff1a\u968f\u673a\u5316\u8d2a\u5fc3\uff0c\u5e76\u4e14\u52a0\u4e0a\u5404\u79cd\u4f18\u5316\u3002**\n\u5148\u8bf4\u8ba1\u7b97\u51fa\u4eceA\u51fa\u53d1\uff0c\u8ffd\u8d76\u4e00\u4e2a\u5f53\u524d\u4f4d\u7f6e\u4e3aB\uff0c\u4ee5\u901f\u5ea6v\u79fb\u52a8\u7684\u5c0f\u867e\u6240\u9700\u65f6\u95f4\u7684\u65b9\u6cd5\u5982\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/70417.png)\n\n\u5982\u56fe\u6240\u793a\uff0c\u6839\u636e\u4f59\u5f26\u5b9a\u7406\uff0c\u6709\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/70419.png)\n\n\u5373\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/70420.png)\n\n\u4e5f\u5373\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/70428.png)\n\n\u53ea\u9700\u8981\u7528\u6c42\u6839\u516c\u5f0f\u6c42\u89e3\u5373\u53ef\uff08\u53d6\u4e24\u6839\u4e2d\u7684\u8f83\u5c0f\u6b63\u6839\uff09\u3002\n\n\u6734\u7d20\u7684\u968f\u673a\u5316\u8d2a\u5fc3\u7b97\u6cd5\u5982\u4e0b\u3002\n\n\u5148\u5c06\u6240\u6709\u7684\u5c0f\u867e\u6309\u4f53\u91cd\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u6bcf\u6b21\u5c06\u6240\u6709\u5c0f\u867e\u6309\u7167\u5355\u4f4d\u65f6\u95f4\u7684\u6536\u76ca\uff08\u589e\u91cd\u6bd4\u4e0a\u65f6\u95f4\uff09\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u9009\u53d6\u4e00\u4e2a\u6700\u4f18\u7684\u5c0f\u867e\uff0c\u6216\u8005\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\u66f4\u5dee\u7684\u5c0f\u867e\uff08\u5e76\u8fed\u4ee3\u8fdb\u884c\uff0c\u5373\u518d\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\u66f4\u5dee\u7684\u5c0f\u867e\uff09\uff0c\u8fd9\u4e2a\u6982\u7387\u53ef\u4ee5\u662f0.5\uff0c\u62161/e\u3002\n\n\u4f18\u53161\uff1a\u8d2a\u5fc3\u591a\u6b21\uff0c\u53d6\u6700\u5c0f\u503c\uff1b\n\n\u4f18\u53162\uff1a\u5bf9\u66f4\u5dee\u7684\u89e3\u8fdb\u884c\u9650\u5236\uff08\u5982\u679c\u592a\u5dee\u5c31\u76f4\u63a5\u820d\u53bb\uff09\uff1b\n\n\u4f18\u53163\uff1a\u63d0\u9ad8\u65f6\u95f4\u6240\u5360\u7684\u6bd4\u91cd\uff08\u6309\u589e\u91cd\u6bd4\u4e0a\u65f6\u95f4\u7684\u5e73\u65b9\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff09\uff1b\n\n\u4f18\u53164\uff1a\u5f15\u5165\u6a21\u62df\u9000\u706b\u7684\u601d\u60f3\uff0c\u5373\u4f7f\u9047\u5230\u975e\u5e38\u5dee\u7684\u89e3\uff0c\u4ecd\u7136\u4ee5\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\u5b83\uff08\u8fd9\u4e2a\u6982\u7387\u8ddf\u6e29\u5ea6\u6709\u5173\uff0c\u6bcf\u8d2a\u5fc3\u4e00\u6b21\u5c31\u6309\u7167\u4e00\u5b9a\u89c4\u5f8b\u964d\u6e29\uff08\u5982\u5c06\u6e29\u5ea6\u51cf\u534a\uff09\uff09\u3002\n\n\u52a0\u4e0a\u8fd9\u4e9b\u4f18\u5316\u57fa\u672c\u4e0a\u5c31\u53ef\u4ee5\u5f97\u5168\u5206\u4e86\u3002\n\n\u9644\u7a0b\u5e8f\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <complex>\n#include <ctime>\n#include <cmath>\n \nusing namespace std;\n \nconst int maxN = 10010;\nconst double zero = 1e-12, INF = 1e198;\nstruct Res\n{\n\tdouble t; complex <double> p; int ord; Res() {}\n\tRes(double t, complex <double> p, int ord):\n\t\tt(t), p(p), ord(ord) {}\n} res[maxN], _res[maxN]; bool eaten[maxN];\ncomplex <double> p[maxN], v[maxN];\ndouble w[maxN], V, _deltaw, deltaw, T, tem;\nvector <pair <double, int> > ls;\nvector <pair <double, int> >::iterator iter;\nint ord[maxN], n, cnt, _cnt;\n \ninline bool cmp(const int &a, const int &b)\n{return w[a] < w[b];}\n \ninline double sqr(double x) {return x * x;}\n \ninline double sqr(complex <double> z)\n{return sqr(real(z)) + sqr(imag(z));}\n \ninline double solve(complex <double> p,\n\t\t\t\t\tcomplex <double> v,\n\t\t\t\t\tcomplex <double> O)\n{\n\tdouble a = sqr(v) - sqr(V),\n\tb = -2 * (real(v) * real(O - p) + imag(v) * imag(O - p)),\n\tc = sqr(p - O),\n\tdelta = sqr(b) - 4 * a * c;\n\tif (delta < -zero) return INF;\n\tif (fabs(a) < zero)\n\t\treturn (b > -zero) ? INF : (-c / b);\n\tdouble ans = INF,\n\t\t   x1 = (-b - sqrt(delta)) / (2 * a),\n\t\t   x2 = (-b + sqrt(delta)) / (2 * a);\n\tif (x1 > -zero) ans = x1;\n\tif (x2 > -zero && x2 < ans) ans = x2;\n\treturn ans;\n} //\u8ba1\u7b97\u51fa\u4eceO\u51fa\u53d1\uff0c\u8ffd\u8d76\u4e00\u4e2a\u5f53\u524d\u4f4d\u7f6e\u4e3ap\uff0c\u4ee5\u901f\u5ea6v\u79fb\u52a8\u7684\u5c0f\u867e\u6240\u9700\u65f6\u95f4\u3002\n \ninline double _rand() {return (double)rand() / RAND_MAX;}\n \ninline bool judge()\n{\n\tif (++iter == ls.end()) {--iter; return 0;}\n\tif (rand() & 1) {--iter; return 0;}\n\t//\u5148\u4ee50.5\u7684\u6982\u7387\u521d\u6b65\u6dd8\u6c70\u8f83\u5dee\u7684\u89e3\u3002\n\tdouble nxt = iter -> first;\n\t--iter; double ths = iter -> first;\n\tdouble delta = (ths - nxt);\n\tif (delta / ths < 3.40e-2) return 1;\n\t//\u82e5\u8f83\u5dee\u7684\u89e3\u6bd4\u5f53\u524d\u89e3\u5dee3.4%\u4ee5\u4e0a\uff0c\u76f4\u63a5\u6dd8\u6c70\u3002\n\treturn _rand() < 1 / exp(delta / tem);\n\t//\u5426\u5219\u4ee5\u6982\u7387e ^ (-delta / tem)\u7684\u6982\u7387\u63a5\u53d7\u66f4\u5dee\u7684\u89e3\u3002\n}\n \nint main()\n{\n\tfreopen(\"nemo10.in\", \"r\", stdin);\n\tfreopen(\"nemo10.out\", \"w\", stdout);\n\tsrand(time(NULL));\n\tscanf(\"%lf%lf%lf%lf%lf%d\", w + 0, &V, &T, &p[0].real(), &p[0].imag(), &n);\n\tcomplex <double> p0 = p[0]; double w0 = w[0];\n\tfor (int i = 1; i < n + 1; ord[i] = i, ++i)\n\t\tscanf(\"%lf%lf%lf%lf%lf\", w + i, &p[i].real(), &p[i].imag(), &v[i].real(), &v[i].imag());\n\tsort(ord + 1, ord + n + 1, cmp); //\u5c06\u5c0f\u867e\u6309\u4f53\u91cd\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\u3002\n\ttem = 1; //\u521d\u59cb\u6e29\u5ea6\u8bbe\u4e3a1\u3002\n\tfor (int k = 0; k < 15; ++k)\n\t{\n\t\tmemset(eaten, 0, sizeof eaten);\n\t\t_deltaw = 0; _cnt = 0; p[0] = p0; w[0] = w0;\n\t\tfor (double t = 0; t < T;)\n\t\t{\n\t\t\tls.clear();\n\t\t\tfor (int i = 1; w[ord[i]] < w[0]; ++i)\n\t\t\tif (!eaten[ord[i]])\n\t\t\t\tls.push_back(make_pair(w[ord[i]] / sqr(solve(p[ord[i]] + t * v[ord[i]], v[ord[i]], p[0])), ord[i]));\n\t\t\tsort(ls.begin(), ls.end(), greater <pair <double, int> > ());\n\t\t\titer = ls.begin(); if (iter == ls.end()) break;\n\t\t\twhile (judge()) ++iter;\n\t\t\tint pos = iter -> second;\n\t\t\tif (T - (t += solve(p[pos] + t * v[pos], v[pos], p[0])) < -zero) break;\n\t\t\t_deltaw += w[pos], w[0] += w[pos]; eaten[pos] = 1;\n\t\t\t_res[_cnt++] = Res(t, p[0] = p[pos] + t * v[pos], pos);\n\t\t}\n\t\tif (_deltaw > deltaw)\n\t\t{\n\t\t\tdeltaw = _deltaw;\n\t\t\tfor (cnt = 0; cnt < _cnt; ++cnt) res[cnt] = _res[cnt];\n\t\t} //\u66f4\u65b0\u6700\u4f18\u89e3\u3002\n\t\ttem *= .5;\n\t}\n\tprintf(\"%d\\n%.9lf\\n\", cnt, deltaw);\n\tfor (int i = 0; i < cnt; ++i)\n\t\tprintf(\"%.9lf %.9lf %.9lf %d\\n\", res[i].t, res[i].p.real(), res[i].p.imag(), res[i].ord);\n\treturn 0;\n}\n```\n\u5bf9\u4e8e\u4e0d\u540c\u7684\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u7528\u7279\u6b8a\u65b9\u6cd5\u6c42\u89e3\u3002\n\n\u7b2c\u4e00\u7ec4\u6570\u636e\u663e\u7136\u624b\u7b97\uff0c\u4e0d\u591a\u8bf4\u3002\n\n\u7b2c\u4e8c\u7ec4\u6570\u636e\u8f83\u5c0f\uff0c\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\uff0c\u9644\u7a0b\u5e8f\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <complex>\n \nusing namespace std;\n \nconst int maxN = 10010;\nconst double zero = 1e-12, INF = 1e198;\nstruct Res\n{\n\tdouble t; complex <double> p; int ord; Res() {}\n\tRes(double t, complex <double> p, int ord):\n\t\tt(t), p(p), ord(ord) {}\n} res[maxN], tmp[maxN]; bool eaten[maxN];\ncomplex <double> p[maxN], v[maxN];\ndouble w[maxN], V, deltaw, T;\nint n, cnt;\n \ninline double sqr(double x) {return x * x;}\n \ninline double sqr(complex <double> z)\n{return sqr(real(z)) + sqr(imag(z));}\n \ninline double solve(complex <double> p,\n\t\t\t\t\tcomplex <double> v,\n\t\t\t\t\tcomplex <double> O)\n{\n\tdouble a = sqr(v) - sqr(V),\n\tb = -2 * (real(v) * real(O - p) + imag(v) * imag(O - p)),\n\tc = sqr(p - O),\n\tdelta = sqr(b) - 4 * a * c;\n\tif (delta < -zero) return INF;\n\tif (fabs(a) < zero)\n\t\treturn (b > -zero) ? INF : (-c / b);\n\tdouble ans = INF,\n\t\t   x1 = (-b - sqrt(delta)) / (2 * a),\n\t\t   x2 = (-b + sqrt(delta)) / (2 * a);\n\tif (x1 > -zero) ans = x1;\n\tif (x2 > -zero && x2 < ans) ans = x2;\n\treturn ans;\n}\n \nvoid Dfs(int i, double w0, double t, complex <double> p0)\n{\n\tfor (int j = 1; j < n + 1; ++j)\n\tif (!eaten[j] && w[j] < w0)\n\t{\n\t\tdouble ths = solve(p[j] + t * v[j], v[j], p0);\n\t\tif (t + ths - T > zero) continue;\n\t\tcomplex <double> pos = p[j] + (t + ths) * v[j];\n\t\teaten[j] = 1;\n\t\ttmp[i] = Res(t + ths, pos, j);\n\t\tDfs(i + 1, w0 + w[j], t + ths, pos);\n\t\ttmp[i] = Res(0, 0, 0);\n\t\teaten[j] = 0;\n\t}\n\tif (w0 - w[0] > deltaw)\n\t{\n\t\tdeltaw = w0 - w[0];\n\t\tfor (cnt = 0; tmp[cnt].t > zero; ++cnt)\n\t\t\tres[cnt] = tmp[cnt];\n\t}\n\treturn;\n}\nint main()\n{\n\tfreopen(\"nemo2.in\", \"r\", stdin);\n\tfreopen(\"nemo2.out\", \"w\", stdout);\n\tscanf(\"%lf%lf%lf%lf%lf%d\", w + 0, &V, &T, &p[0].real(), &p[0].imag(), &n);\n\tfor (int i = 1; i < n + 1; ++i)\n\t\tscanf(\"%lf%lf%lf%lf%lf\", w + i, &p[i].real(), &p[i].imag(), &v[i].real(), &v[i].imag());\n\tDfs(0, w[0], 0, p[0]);\n\tprintf(\"%d\\n%.9lf\\n\", cnt, deltaw);\n\tfor (int i = 0; i < cnt; ++i)\n\t\tprintf(\"%.9lf %.9lf %.9lf %d\\n\", res[i].t, res[i].p.real(), res[i].p.imag(), res[i].ord);\n\treturn 0;\n}\n```\n\u7b2c\u4e09\u7ec4\u6570\u636e\u5c0f\u867e\u7684\u4f53\u91cd\u6709\u89c4\u5f8b\uff0c\u6309\u987a\u5e8f\u5403\u5c31\u662f\u4e86\uff0c\u9644\u7a0b\u5e8f\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <complex>\n \nusing namespace std;\n \nconst int maxN = 10010;\nconst double zero = 1e-12, INF = 1e198;\nstruct Res\n{\n\tdouble t; complex <double> p; int ord; Res() {}\n\tRes(double t, complex <double> p, int ord):\n\t\tt(t), p(p), ord(ord) {}\n} res[maxN]; bool eaten[maxN];\ncomplex <double> p[maxN], v[maxN];\ndouble w[maxN], V, deltaw, T;\nint ord[maxN], n, cnt;\n \ninline bool cmp(const int &a, const int &b)\n{return w[a] < w[b];}\n \ninline double sqr(double x) {return x * x;}\n \ninline double sqr(complex <double> z)\n{return sqr(real(z)) + sqr(imag(z));}\n \ninline double solve(complex <double> p,\n\t\t\t\t\tcomplex <double> v,\n\t\t\t\t\tcomplex <double> O)\n{\n\tdouble a = sqr(v) - sqr(V),\n\tb = -2 * (real(v) * real(O - p) + imag(v) * imag(O - p)),\n\tc = sqr(p - O),\n\tdelta = sqr(b) - 4 * a * c;\n\tif (delta < -zero) return INF;\n\tif (fabs(a) < zero)\n\t\treturn (b > -zero) ? INF : (-c / b);\n\tdouble ans = INF,\n\t\t   x1 = (-b - sqrt(delta)) / (2 * a),\n\t\t   x2 = (-b + sqrt(delta)) / (2 * a);\n\tif (x1 > -zero) ans = x1;\n\tif (x2 > -zero && x2 < ans) ans = x2;\n\treturn ans;\n}\n \nint main()\n{\n\tfreopen(\"nemo3.in\", \"r\", stdin);\n\tfreopen(\"nemo3.out\", \"w\", stdout);\n\tscanf(\"%lf%lf%lf%lf%lf%d\", w + 0, &V, &T, &p[0].real(), &p[0].imag(), &n);\n\tfor (int i = 1; i < n + 1; ord[i] = i, ++i)\n\t\tscanf(\"%lf%lf%lf%lf%lf\", w + i, &p[i].real(), &p[i].imag(), &v[i].real(), &v[i].imag());\n\tsort(ord + 1, ord + n + 1, cmp);\n\tfor (double t = 0; T - t > zero;)\n\t{\n\t\tstatic int i = 0; ++i; if (i > n) break;\n\t\tdouble Min = solve(p[ord[i]] + t * v[ord[i]], v[ord[i]], p[0]);\n\t\tint pos = ord[i];\n\t\tif (fabs(Min - INF) < zero) break;\n\t\tif (T - (t += Min) < -zero) break;\n\t\tw[0] += w[pos]; deltaw += w[pos]; eaten[pos] = 1;\n\t\tres[cnt++] = Res(t, p[0] = p[pos] + t * v[pos], pos);\n\t}\n\tprintf(\"%d\\n%.9lf\\n\", cnt, deltaw);\n\tfor (int i = 0; i < cnt; ++i)\n\t\tprintf(\"%.9lf %.9lf %.9lf %d\\n\", res[i].t, res[i].p.real(), res[i].p.imag(), res[i].ord);\n\treturn 0;\n}\n```\n\u7b2c\u56db\u7ec4\u6570\u636e\u4e2d\u6240\u6709\u5c0f\u867e\u9759\u6b62\u4e0d\u52a8\u4e14\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u636e\u8bf4\u662f\u533a\u95f4\u52a8\u6001\u89c4\u5212\uff0c\u65b9\u6cd5\u81f3\u4eca\u672a\u77e5\u3002\n\n\u7b2c\u4e94\u3001\u516d\u7ec4\u6570\u636e\u4e2d\u6240\u6709\u5c0f\u867e\u90fd\u5728\u9ad8\u901f\u5411\u4e0b\u6389\uff0c\u800cNemo\u7684\u79fb\u52a8\u901f\u5ea6\u5f88\u5c0f\uff0c\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5cNemo\u5728\u53ea\u80fd\u6c34\u5e73\u79fb\u52a8\u7684\u60c5\u51b5\u4e0b\u53bb\u63a5\u4f4f\u5c0f\u867e\u6765\u5403\u3002\n\n\u5148\u5c06\u5c0f\u867e\u6309\u7ad6\u76f4\u65b9\u5411\u6392\u5e8f\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u4e0b\u64cd\u4f5c\u3002\n\n\u8bbef[i]\u8868\u793a\u524di\u4e2a\u5c0f\u867e\u4e2d\u6070\u597d\u7b2ci\u4e2a\u88ab\u5403\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u6536\u76ca\uff0c\u53ea\u9700\u8981\u4e00\u4e2an^2\u7684\u52a8\u6001\u89c4\u5212\u5373\u53ef\u6c42\u89e3\u3002\n\n\u9644\u7a0b\u5e8f\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <complex>\n \nusing namespace std;\n \nconst int maxN = 10010;\nconst double zero = 1e-12, INF = 1e198;\nstruct Res\n{\n\tdouble t; complex <double> p; int ord; Res() {}\n\tRes(double t, complex <double> p, int ord):\n\t\tt(t), p(p), ord(ord) {}\n} res[maxN]; bool eaten[maxN];\ncomplex <double> p[maxN], v[maxN];\ndouble f[maxN], w[maxN], V, deltaw, T;\nint ord[maxN], g[maxN], n, cnt;\n \ninline bool cmp(const int &a, const int &b)\n{return imag(p[a]) < imag(p[b]);}\n \nvoid calc(int i)\n{\n\tif (g[i]) calc(g[i]);\n\tres[cnt++] = Res(imag(p[i]) / 1000, p[i], i);\n\tdeltaw += w[i];\n\treturn;\n}\n \nint main()\n{\n\tfreopen(\"nemo5.in\", \"r\", stdin);\n\tfreopen(\"nemo5.out\", \"w\", stdout);\n\tscanf(\"%lf%lf%lf%lf%lf%d\", w + 0, &V, &T, &p[0].real(), &p[0].imag(), &n);\n\tfor (int i = 1; i < n + 1; ord[i] = i, ++i)\n\t\tscanf(\"%lf%lf%lf%lf%lf\", w + i, &p[i].real(), &p[i].imag(), &v[i].real(), &v[i].imag());\n\tsort(ord + 1, ord + n + 1, cmp);\n\tint st = 1;\n\twhile (imag(p[ord[st]]) / 1000 - real(p[ord[st]]) / V < -zero) ++st;\n\tf[ord[st]] = w[ord[st]];\n\tfor (int i = 1; i < st; ++i) f[ord[i]] = -INF;\n\tfor (int i = 0; i < n; ++i)\n\tif (f[ord[i]] > -INF)\n\tfor (int j = i + 1; j < n + 1; ++j)\n\t{\n\t\tif (imag(p[ord[j]] - p[ord[i]]) / 1000 - fabs(real(p[ord[i]] - p[ord[j]])) / V > -zero)\n\t\tif (f[ord[i]] + w[ord[j]] > f[ord[j]])\n\t\t\tf[ord[j]] = f[ord[i]] + w[ord[j]],\n\t\t\tg[ord[j]] = ord[i];\n\t}\n\tint pos = ord[n];\n\tfor (int i = 1; i < n + 1; ++i) if (f[i] > f[pos]) pos = i;\n\tcalc(pos);\n\tprintf(\"%d\\n%.9lf\\n\", cnt, deltaw);\n\tfor (int i = 0; i < cnt; ++i)\n\t\tprintf(\"%.9lf %.9lf %.9lf %d\\n\", res[i].t, res[i].p.real(), 0., res[i].ord);\n\treturn 0;\n}\n```\n\u7b2c\u4e03\u3001\u516b\u7ec4\u6570\u636e\u4e2d\u53ef\u4ee5\u53d1\u73b0\u5c0f\u867e\u7684\u4f4d\u7f6e\u5448\u73b0\u6570\u5b57\u4e09\u89d2\u5f62\u7684\u5f62\u72b6\uff0c\u53ea\u9700\u8981\u6309\u6570\u5b57\u4e09\u89d2\u5f62\u7684\u65b9\u6cd5\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u5373\u53ef\u3002\n\n\u9644\u7a0b\u5e8f\uff1a\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <complex>\n \nusing namespace std;\n \nconst int maxN = 2010, INF = 0x3f3f3f3f;\nconst double zero = 1e-12;\nstruct Res\n{\n\tdouble t; complex <int> p; int ord; Res() {}\n\tRes(double t, complex <int> p, int ord):\n\t\tt(t), p(p), ord(ord) {}\n} res[maxN], tmp[maxN]; bool eaten[maxN];\ncomplex <int> p[maxN], v[maxN];\ndouble w[maxN], deltaw, V, T, f[maxN][maxN];\nint ord[maxN][maxN], g[maxN], n, cnt;\n \ninline double sqr(double x) {return x * x;}\n \ninline double sqr(complex <double> z)\n{return sqr(real(z)) + sqr(imag(z));}\n \nint main()\n{\n\tfreopen(\"nemo8.in\", \"r\", stdin);\n\tfreopen(\"nemo8.out\", \"w\", stdout);\n\tscanf(\"%lf%lf%lf%d%d%d\", w + 0, &V, &T, &p[0].real(), &p[0].imag(), &n);\n\tfor (int i = 1; i < n + 1; ++i)\n\t\tscanf(\"%lf%d%d%d%d\", w + i, &p[i].real(), &p[i].imag(), &v[i].real(), &v[i].imag());\n\tfor (int i = 1; i < n + 1; ++i)\n\t\tord[real(p[i])][imag(p[i])] = i;\n\tint i = n;\n\tfor (; i; --i)\n\t{\n\t\tf[real(p[i])][imag(p[i])] = w[i];\n\t\tif (imag(p[i - 1]) < imag(p[i])) break;\n\t}\n\twhile (--i)\n\t{\n\t\tint x = real(p[i]), y = imag(p[i]), ths = ord[x][y];\n\t\tif (f[x - 1][y + 1] > f[x + 1][y + 1])\n\t\t{\n\t\t\tf[x][y] = w[i] + f[x - 1][y + 1];\n\t\t\tg[ths] = ord[x - 1][y + 1];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf[x][y] = w[i] + f[x + 1][y + 1];\n\t\t\tg[ths] = ord[x + 1][y + 1];\n\t\t}\n\t}\n\tdouble t = 0;\n\tres[cnt++] = Res(t = abs(p[1] - p[0]) / V, p[1], 1);\n\tfor (int ths = 1; g[ths]; ths = g[ths])\n\t\tres[cnt++] = Res(t += abs(complex <double> (real(p[g[ths]] - p[ths]), imag(p[g[ths]] - p[ths]))) / V, p[g[ths]], g[ths]);\n\tfor (int i = 0; i < cnt; ++i) deltaw += w[res[i].ord];\n\tprintf(\"%d\\n%lf\\n\", cnt, deltaw);\n\tfor (int i = 0; i < cnt; ++i)\n\t\tprintf(\"%.9lf %d %d %d\\n\", res[i].t, res[i].p.real(), res[i].p.imag(), res[i].ord);\n\treturn 0;\n}\n```\n\u7b2c\u4e5d\u7ec4\u6570\u636e\u4e2d\u6240\u6709\u5c0f\u867e\u90fd\u9759\u6b62\u4e0d\u52a8\uff0c\u7b80\u5355\u7684\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u8fc7\u3002\n\n\u7b2c\u5341\u7ec4\u6570\u636e\u53ef\u80fd\u5c31\u53ea\u6709\u968f\u673a\u5316\u8d2a\u5fc3\u80fd\u591f\u89e3\u51b3\u4e86\u2026\u2026",
        "postTime": 1565264346,
        "uid": 169601,
        "name": "panzhicun",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1915 \u3010[NOI2010]\u6210\u957f\u5feb\u4e50\u3011"
    },
    {
        "content": "[\u8fdb\u5165\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.luogu.com.cn/blog/LeonXY-blog/solution-p1915)\n\n\u540c\u5fd7\u4eec\u597d\u3002\n\u8fd8\u6709\u591a\u5c11\u540c\u5fd7\u4eec\u4e3a\u8fd9\u9898\u82e6\u601d\u51a5\u60f3\uff1f\n\n\u6211\u6765\u62ef\u6551\u4f60\u4eec\u4e86\n\n\u4f5c\u4e3a\u4e00\u4e2aP\u515a\uff0c\u59cb\u7ec8\u6ca1\u60f3\u660e\u767d\u4e3a\u5565\u5b50\u7b2c\u56db\u4e2a\u70b9**\u968f\u673a\u5316\u8d2a\u5fc3**\u8fc7\u4e0d\u4e86\uff0c\u53ea\u80fd\u5f97\u56db\u5206\u3002\n\n# \u8fdb\u5165\u6b63\u9898\uff08\u6e29\u99a8\u63d0\u793a\uff1a\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u6709\u60ca\u559c\uff09\n\n\u770b\u5230\u8fd9\u9898\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u6211\u7b11\u4e86\u3002\u624b\u7b97\u5373\u53ef\u3002\n\n\u4ee5\u4e0b\u4e3a\u4e00\u7ec4\u53ef\u884c\u89e3\uff1a\n```latex\n2\n20\n1.111111 0 11.111111 1\n3 13 0 2\n```\n\n\u7b2c\u4e8c\u7ec4\u6570\u636e\u76f4\u63a5$DFS$\u66b4\u641c\u5373\u53ef\uff0c\u8d34\u4ee3\u7801\uff1a\n```pascal\nprogram nemo2;\nconst zero=1e-10;\n      max=10000000;\ntype\n  ty1=record\n    w,x,y,p,q:extended;\n  end;\n  ty2=record\n    t,x,y:extended;\n    s:longint;\n  end;\n \nvar\n  v,w,x,y,tot_t,all:extended;\n  n,i,tot:longint;\n  fish:array[0..10000] of ty1;\n  step,tmp:array[0..10000] of ty2;\n  get:array[0..10000] of boolean;\nprocedure find(s:longint x,y,w,now:extended);\nvar\n  j:longint;\n  a,b,c,d,fx,fy,t:extended;\nbegin\n  if (s=n+1)or(now-tot_t>zero) then exit;\n \n  for j:=1 to n do\n  if not get[j] and (fish[j].w-w<-zero) then\n  begin\n    fx:=fish[j].x+fish[j].p*now;\n    fy:=fish[j].y+fish[j].q*now;\n    a:=sqr(v)-sqr(fish[j].p)-sqr(fish[j].q);\n    b:=2*fish[j].p*(x-fx)+2*fish[j].q*(y-fy);\n    c:=-sqr(x-fx)-sqr(y-fy);\n    t:=max;\n    if abs(a)<zero then\n    begin\n      if abs(b)<zero then continue;\n      if -c/b>-zero then t:=-c/b;\n    end else\n    begin\n      if sqr(b)-4*a*c<-zero then continue;\n      d:=(-b+sqrt(sqr(b)-4*a*c))/(2*a);\n      if d>-zero then t:=d;\n      d:=(-b-sqrt(sqr(b)-4*a*c))/(2*a);\n      if (d>-zero)and(d>t) then t:=d;\n    end;\n    if t-max>-zero then continue;\n    tmp[s+1].x:=fx+fish[j].p*t;\n    tmp[s+1].y:=fy+fish[j].q*t;\n    tmp[s+1].s:=j;\n    tmp[s+1].t:=now+t;\n    get[j]:=true;\n    find(s+1,tmp[s+1].x,tmp[s+1].y,w+fish[j].w,now+t);\n    get[j]:=false;\n  end;\n \n  if all-w<-zero then\n  begin\n    tot:=s; all:=w;\n    for j:=1 to s do step[j]:=tmp[j];\n  end;\nend;\nbegin\n  assign(input,'nemo2.in'); reset(input);\n  assign(output,'nemo2.out'); rewrite(output);\n  read(w,v,tot_t,x,y);\n  read(n); tot:=0; all:=0;\n  for i:=1 to n do read(fish[i].w,fish[i].x,fish[i].y,fish[i].p,fish[i].q);\n  find(0,x,y,w,0);\n  writeln(tot);\n  writeln(all-w:0:6);\n  for i:=1 to tot do\n  writeln(step[i].t:0:6,' ',step[i].x:0:6,' ',step[i].y:0:6,' ',step[i].s);\n  close(input); close(output);\nend.\n```\n\u7b2c\u4e09\u7ec4\u6570\u636e~~\u50bb\u5b50\u90fd\u80fd\u770b\u51fa\u6765~~\u76f4\u63a5\u6a21\u62df\n```pascal\nprogram nemo3;\nconst zero=1e-10;\n      max=100000000;\ntype\n  ty1=record\n    w,x,y,p,q:extended;\n  end;\n  ty2=record\n    t,x,y:extended;\n    s:longint;\n  end;\n \nvar\n  v,w,x,y,tot_t,a,b,c,d,now,time,all:extended;\n  n,i,j,t,tot:longint;\n  fish:array[0..10000] of ty1;\n  step:array[0..10000] of ty2;\n  dis:array[0..10000] of extended;\n  get:array[0..10000] of boolean;\nbegin\n  assign(input,'nemo3.in'); reset(input);\n  assign(output,'nemo3.out'); rewrite(output);\n  read(w,v,tot_t,x,y);\n  read(n); time:=0; tot:=0; all:=0;\n  for i:=1 to n do read(fish[i].w,fish[i].x,fish[i].y,fish[i].p,fish[i].q);\n  for i:=1 to n do\n  begin\n    for j:=1 to n do dis[j]:=max;\n    for j:=1 to n do\n    if not get[j] and (fish[j].w-w<-zero) then\n    begin\n      a:=sqr(v)-sqr(fish[j].p)-sqr(fish[j].q);\n      b:=2*fish[j].p*(x-fish[j].x)+2*fish[j].q*(y-fish[j].y);\n      c:=-sqr(x-fish[j].x)-sqr(y-fish[j].y);\n      if abs(a)<zero then\n      begin\n        if abs(b)<zero then continue;\n        dis[j]:=-c/b;\n        if dis[j]<-zero then dis[j]:=max;\n      end else\n      begin\n        if sqr(b)-4*a*c<-zero then continue;\n        d:=(-b+sqrt(sqr(b)-4*a*c))/(2*a);\n        if d>-zero then dis[j]:=d;\n        d:=(-b-sqrt(sqr(b)-4*a*c))/(2*a);\n        if d>-zero then dis[j]:=d;\n      end;\n    end;\n    now:=max; t:=0;\n    for j:=1 to n do\n    if not get[j] and (fish[j].w-w<-zero) and (now-dis[j]>zero) then\n    begin\n      t:=j;\n      now:=dis[j];\n    end;\n    if t=0 then break;\n    time:=time+now;\n    if time-tot_t>zero then break;\n    get[t]:=true;\n    inc(tot);\n    step[tot].x:=fish[t].x+fish[t].p*now;\n    step[tot].y:=fish[t].y+fish[t].q*now;\n    step[tot].s:=t;\n    step[tot].t:=time;\n    x:=step[tot].x; y:=step[tot].y;\n    w:=w+fish[t].w;\n    all:=all+fish[t].w;\n    for j:=1 to n do\n    if not get[j] then\n    begin\n      fish[j].x:=fish[j].x+fish[j].p*now;\n      fish[j].y:=fish[j].y+fish[j].q*now;\n    end;\n  end;\n  writeln(tot);\n  writeln(all:0:6);\n  for i:=1 to tot do\n  writeln(step[i].t:0:6,' ',step[i].x:0:6,' ',step[i].y:0:6,' ',step[i].s);\n  close(input); close(output);\nend.\n```\n\u7b2c\u56db\u7ec4\u548c\u7b2c\u5341\u7ec4\u90fd\u53ef\u4ee5\u7528\u968f\u673a\u5316\u8d2a\u5fc3+\u6a21\u62df\u9000\u706b\uff08\u4f46\u662f\u7b2c\u56db\u4e2a\u70b9\u62ff\u4e0d\u5230\u5168\u5206\uff09\n\n~~\u6b8b\u7f3a\u4ee3\u7801~~\n```pascal\nprogram nemo4;\n{for case 4/10}\nconst zero=1e-10;\n      max=10000000;\ntype\n  ty1=record\n    w,x,y,p,q:extended;\n  end;\n  ty2=record\n    t,x,y:extended;\n    s:longint;\n  end;\nvar\n  v,w0,x0,y0,tot_t,all,x,y:extended;\n  n,tot,i,tot_s,t:longint;\n  fish:array[0..10000] of ty1;\n  step,tmp:array[0..10000] of ty2;\n  get:array[0..10000] of boolean;\n  sx:array[0..10000] of longint;\n  s:array[0..10000] of extended;\nprocedure sort(l,r:longint);\nvar\n  i,j,tmp1:longint;\n  tmp2,m:extended;\nbegin\n  i:=l; j:=r; m:=s[(i+j) >> 1];\n  repeat\n    while s[i]>m do inc(i);\n    while s[j]<m do dec(j);\n    if i<=j then\n    begin\n      tmp1:=sx[i]; sx[i]:=sx[j]; sx[j]:=tmp1;\n      tmp2:=s[i]; s[i]:=s[j]; s[j]:=tmp2;\n      inc(i); dec(j);\n    end;\n  until i>j;\n  if i<r then sort(i,r);\n  if j>l then sort(l,j);\nend;\nfunction calc(t:longint; x,y,now:extended):extended;\nvar\n  fx,fy,a,b,c,d,k:extended;\nbegin\n  k:=max;\n  fx:=fish[t].x+now*fish[t].p;\n  fy:=fish[t].y+now*fish[t].q;\n  a:=sqr(v)-sqr(fish[t].p)-sqr(fish[t].q);\n  b:=2*fish[t].p*(x-fx)+2*fish[t].q*(y-fy);\n  c:=-sqr(x-fx)-sqr(y-fy);\n  if abs(a)<zero then\n  begin\n    if abs(b)<zero then exit(k);\n    if -c/b>-zero then k:=-c/b;\n  end else\n  begin\n    if sqr(b)-4*a*c<-zero then exit(k);\n    d:=(-b+sqrt(sqr(b)-4*a*c))/(2*a);\n    if d>-zero then k:=d;\n    d:=(-b-sqrt(sqr(b)-4*a*c))/(2*a);\n    if (d>-zero)and(d>k) then k:=d;\n  end;\n  exit(k);\nend;\nprocedure insert(fx:longint; now:extended);\nbegin\n  inc(tot_s);\n  s[tot_s]:=fish[fx].w/sqr(sqr(calc(fx,x,y,now)));\n  sx[tot_s]:=fx;\nend;\nfunction get_rand:longint;\nvar\n  i,j,k:longint;\nbegin\n  for j:=1 to tot_s do\n  if (s[j]-s[j+1])/s[j]>0.031 then break;\n  for k:=1 to j do\n  if random(maxlongint) and 1=1 then break;\n  for i:=1 to k do\n  begin\n    if random() < exp(-10/t) then break;\n  end;\n  exit(sx[i]);\nend;\nprocedure main;\nvar\n  now,w,turn:extended;\n  now_tot,t,j,i:longint;\nbegin\n  fillchar(get,sizeof(get),0);\n  fillchar(tmp,sizeof(tmp),0);\n  now:=0; now_tot:=0; x:=x0; y:=y0; w:=w0;\n  for j:=1 to n do\n  begin\n    tot_s:=0;\n    for i:=1 to n do\n    if not get[i] and(fish[i].w-w<-zero) then insert(i,now);\n    sort(1,tot_s);\n    if tot_s<1 then break;\n    t:=get_rand;\n    turn:=calc(t,x,y,now);\n    if turn>max-1000 then continue;\n    now:=now+turn;\n    if now-tot_t>zero then break;\n    get[t]:=true;\n    inc(now_tot);\n    tmp[now_tot].x:=fish[t].x+fish[t].p*now;\n    tmp[now_tot].y:=fish[t].y+fish[t].q*now;\n    tmp[now_tot].s:=t;\n    tmp[now_tot].t:=now;\n    x:=tmp[now_tot].x; y:=tmp[now_tot].y;\n    w:=w+fish[t].w;\n  end;\n  if w>all then\n  begin\n    tot:=now_tot;\n    all=w;\n    step:=tmp;\n  end;\nend;\nbegin\n  assign(input,'nemo10.in'); reset(input);\n  assign(output,'nemo10.out'); rewrite(output);\n  randomize;\n  read(w0,v,tot_t,x0,y0);\n  read(n); all:=all+w0;\n  for i:=1 to n do read(fish[i].w,fish[i].x,fish[i].y,fish[i].p,fish[i].q);\n  t:=20;\n  while t>0 do\n  begin\n    main;\n    dec(t);\n  end;\n  writeln(tot);\n  writeln(all-w0:0:6);\n  for i:=1 to tot do\n  writeln(step[i].t:0:6,' ',step[i].x:0:6,' ',step[i].y:0:6,' ',step[i].s);\n  close(input); close(output);\nend.\n```\n\u7b2c\u4e94\u7ec4\u548c\u7b2c\u516d\u7ec4\u6570\u636e\u8bf7\u81ea\u884c\u89c2\u5bdf\u89c4\u5f8b\n```pascal\nprogram nemo6;\n{for case 5/6}\nconst zero=1e-10;\ntype\n  ty1=record\n    w,x,y,p,q:extended;\n  end;\n  ty2=record\n    t,x,y:extended;\n    s:longint;\n  end;\nvar\n  v,w0,x0,y0,tot_t,all,best:extended;\n  n,tot,i,j,t:longint;\n  fish:array[0..10000] of ty1;\n  step:array[0..10000] of ty2;\n  f,fall:array[0..10000] of extended;\n  sa,g:array[0..10000] of longint;\nprocedure sort(l,r:longint);\nvar\n  i,j,tmp1:longint;\n  tmp2,m:extended;\nbegin\n  i:=l; j:=r; m:=fall[(i+j) >> 1];\n  repeat\n    while fall[i]<m do inc(i);\n    while fall[j]>m do dec(j);\n    if i<=j then\n    begin\n      tmp2:=fall[i]; fall[i]:=fall[j]; fall[j]:=tmp2;\n      tmp1:=sa[i]; sa[i]:=sa[j]; sa[j]:=tmp1;\n      inc(i); dec(j);\n    end;\n  until i>j;\n  if i<r then sort(i,r);\n  if j>l then sort(l,j);\nend;\nfunction check(l,r:longint):boolean;\nbegin\n  if abs(fish[sa[l]].x-fish[sa[r]].x)/v+fall[l]-fall[r]>zero then exit(false);\n  exit(true);\nend;\nprocedure huisu(x:longint);\nbegin\n  if g[x]>0 then huisu(g[x]);\n  inc(tot);\n  all:=all+fish[sa[x]].w;\n  step[tot].s:=sa[x];\n  step[tot].x:=fish[sa[x]].x;\n  step[tot].t:=fall[x];\nend;\nbegin\n  assign(input,'nemo6.in'); reset(input);\n  assign(output,'nemo6.out'); rewrite(output);\n  randomize;\n  read(w0,v,tot_t,x0,y0);\n  read(n); all:=0;\n  for i:=1 to n do\n  begin\n    read(fish[i].w,fish[i].x,fish[i].y,fish[i].p,fish[i].q);\n    fall[i]:=abs(fish[i].y-y0)/abs(fish[i].q);\n    sa[i]:=i;\n  end;\n  sort(1,n);\n  for i:=1 to n do f[i]:=-100000000;\n  f[0]:=0;\n  for i:=1 to n do\n  begin\n    for j:=0 to i-1 do\n    if check(j,i) and (f[i]<f[j]+fish[sa[i]].w) then\n    begin\n      f[i]:=f[j]+fish[sa[i]].w;\n      g[i]:=j;\n    end;\n    if best<f[i] then\n    begin\n      best:=f[i];\n      t:=i;\n    end;\n  end;\n  huisu(t);\n  writeln(tot);\n  writeln(all:0:6);\n  for i:=1 to tot do\n  writeln(step[i].t:0:6,' ',step[i].x:0:6,' ',step[i].y:0:6,' ',step[i].s);\n  close(input); close(output);\nend.\n```\n\u7b2c\u4e03\u7ec4\u548c\u7b2c\u516b\u7ec4\u601d\u8def\u53c2\u89c1\u9012\u63a8\u9898\u76ee [P1216 \u6570\u5b57\u4e09\u89d2\u5f62](https://www.luogu.com.cn/problem/P1216)\n```pascal\nprogram nemo7;\n{for case7/8}\nuses math;\ntype\n  ty=record\n    t,x,y:extended;\n    s:int64;\n  end;\n \nvar\n  n,tx,tot,p,q,maxq,ans,wi:int64;\n  i,j:longint;\n  w,v,t,x0,y0,time:extended;\n  fash,id:array[0..2000,0..2000] of int64;\n  step:array[0..2000] of ty;\n  f,g:array[0..2000,0..2000] of int64;\nprocedure huisu(x,y:int64);\nbegin\n  if x>1 then huisu(x-1,g[x,y]);\n  inc(tot);\n  //writeln(x,' ',y);\n  time:=time+sqrt(sqr(x-y0)+sqr(y-x0))/v;\n  step[tot].t:=time;\n  step[tot].x:=y; step[tot].y:=x;\n  x0:=y; y0:=x;\n  step[tot].s:=id[x,y];\nend;\nbegin\n  assign(input,'nemo7.in'); reset(input);\n  assign(output,'nemo7.out'); rewrite(output);\n  read(w,v,t,x0,y0);\n  read(n);\n  fillchar(fash,sizeof(fash),$fe);\n  for i:=1 to n do\n  begin\n    read(wi);\n    read(p,q); fash[q,p]:=wi;\n    id[q,p]:=i;\n    if maxq<q then maxq:=q; read(p,q);\n  end;\n  fillchar(f,sizeof(f),$fe);\n  for i:=0 to 2000 do\n  f[0,i]:=0;\n  for i:=1 to maxq do\n  for j:=0 to 2000 do\n  if f[i-1,j+1]>f[i-1,j-1] then\n  begin\n    f[i,j]:=f[i-1,j+1]+fash[i,j];\n    g[i,j]:=j+1;\n  end else\n  begin\n    f[i,j]:=f[i-1,j-1]+fash[i,j];\n    g[i,j]:=j-1;\n  end;\n  for i:=0 to 2000 do\n  if ans<f[maxq,i] then\n  begin\n    ans:=f[maxq,i];\n    tx:=i;\n  end;\n  writeln(maxq);\n  writeln(extended(ans):0:6);\n  time:=0;\n  huisu(maxq,tx);\n  for i:=1 to maxq do\n  writeln(step[i].t:0:6,' ',step[i].x:0:6,' ',step[i].y:0:6,' ',step[i].s);\n  close(input); close(output);\nend.\n```\n\n\u7b2c\u4e5d\u7ec4\u6570\u636e\u7b80\u5355\u8d2a\u5fc3\u5373\u53ef\n```pascal\nprogram nemo;\n{for case 9}\nconst max=10000000;\n      zero=1e-6;\ntype\n  ty1=record\n    w,x,y,p,q:extended;\n  end;\n  ty2=record\n    t,x,y:extended;\n    s:longint;\n  end;\nvar\n  w,x,y,v,tot_t,now_t,ans,d:extended;\n  n,i,j,t,tot:longint;\n  f:array[0..10000] of ty1;\n  get:array[0..10000] of boolean;\n  step:array[0..10000] of ty2;\nfunction dis(i:longint; x,y:extended):extended;\nbegin\n  exit(sqrt(sqr(x-f[i].x)+sqr(y-f[i].y)));\nend;\nbegin\n  assign(input,'nemo9.in'); reset(input);\n  assign(output,'nemo9.out'); rewrite(output);\n  read(w,v,tot_t,x,y);\n  read(n); ans:=0; tot:=0; now_t:=0;\n  fillchar(get,sizeof(get),false);\n  for i:=1 to n do read(f[i].w,f[i].x,f[i].y,f[i].p,f[i].q);\n  for i:=1 to n do\n  begin\n    d:=max; t:=0;\n    for j:=1 to n do\n    if not get[j] and (f[j].w-w<-zero) and (dis(j,x,y)<d)  then\n    begin\n      t:=j;\n      d:=dis(j,x,y);\n    end;\n    if t=0 then break;\n    now_t:=now_t+dis(t,x,y)/v;\n    if now_t-tot_t>zero then break;\n    get[t]:=true;\n    w:=w+f[t].w;\n    ans:=ans+f[t].w;\n    inc(tot);\n    step[tot].t:=now_t;\n    step[tot].s:=t;\n    step[tot].x:=f[t].x;\n    step[tot].y:=f[t].y;\n    x:=f[t].x; y:=f[t].y;\n  end;\n  writeln(tot);\n  writeln(ans:0:6);\n  for i:=1 to tot do\n  writeln(step[i].t:0:6,' ',step[i].x:0:6,' ',step[i].y:0:6,' ',step[i].s);\n  close(input); close(output);\nend.\n```\n\n\u671b\u7ba1\u7406\u5927\u5927\u901a\u8fc7T_T\n\n\u770b\u6211\u8fd9\u4e48\u665a\u4e86\u8fd8\u5728\u5199\u9898\u89e3\uff0c\u4e0d\u70b9\u4e2a\u8d5e\u518d\u8d70\u561b\uff1f\n\n\u9644\u4e00\u4e2a\u6709\u8da3\u7684\u6253\u98de\u673a\u6e38\u620f\uff08\u6e90\u7801\u6709\u9700\u8981\u8bf7\u627e\u6211\u79c1\u4fe1\u7d22\u8981\uff09\n\n[\u4f20\u9001\u95e8\uff08\u63d0\u53d6\u7801\uff1axamg\uff09](https://pan.baidu.com/s/1sXE__4YTtm-T9MOHWGQxPg)\n\n\u611f\u8c22\u795e\u7287\u4eec\u5149\u987e\u849f\u84bb\u7684\u9898\u89e3Orz",
        "postTime": 1591454198,
        "uid": 280636,
        "name": "LeonXY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1915 \u3010[NOI2010]\u6210\u957f\u5feb\u4e50\u3011"
    },
    {
        "content": "\n#### \u521d\u6b65\u5206\u6790\n\n\u200b\t**nemo \u80af\u5b9a\u8d70\u76f4\u7ebf**\u3002\n\n\u200b\t\u4e0d\u59a8\u628a nemo \u60f3\u8c61\u6210\u53ea\u80fd\u4ee5\u901f\u5ea6 $v$ \u8fd0\u52a8\u6216\u9759\u6b62\u3002\u800c\u5728\u6700\u4f18\u7b56\u7565\u4e2d\uff0cnemo \u663e\u7136\u4e0d\u4f1a\u9759\u6b62\u4e0d\u52a8\u3002\n\n\u200b\t\u6240\u4ee5 nemo \u7684\u6700\u4f18\u7b56\u7565\u4e00\u5b9a\u53d6\u5982\u4e0b\u5f62\u6001\uff1a**\u4ee5\u67d0\u79cd\u987a\u5e8f\u628a\u98df\u7269\u6392\u6210\u4e00\u5217 $\\{p_i\\}$\uff0c\u4ece $\\{p_1\\}$ \u5f00\u59cb\u4e00\u4e2a\u4e00\u4e2a\u5403\uff0c\u6bcf\u6b21\u90fd\u8d70\u5f53\u524d\u6700\u77ed\u65f6\u95f4\u5bf9\u5e94\u8def\u5f84**\u3002\n\n\u200b\t\u56e0\u4e3a nemo \u5df2\u77e5\u4e86\u5404\u98df\u7269\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff0cnemo \u53ef\u4ee5\u5728\u76ee\u6807\u98df\u7269\u7684\u8def\u5f84\u4e0a\u67d0\u70b9\u7b49\u5f85\uff0c\u800c\u6700\u4f18\u7684\u8be5\u70b9\u5fc5\u7136\u6ee1\u8db3 nemo \u548c\u98df\u7269\u540c\u65f6\u5230\u8fbe\u3002\u56e0\u800c\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5176\u5230\u5355\u4e2a\u98df\u7269\u6240\u9700\u7684\u6700\u77ed\u65f6\u95f4\u3002\n\n\u200b\t\u7b80\u5355\u7684\u9ad8\u4e2d\u89e3\u4e09\u89d2\u5f62\u95ee\u9898\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u8bbe nemo \u4e0e\u98df\u7269\u8ddd\u79bb\u4e3a $s$\uff0c\u98df\u7269\u8fd0\u52a8\u7684\u65b9\u5411\u4e0e nemo \u76f8\u5bf9\u4e8e\u98df\u7269\u7684\u65b9\u5411\u5939\u89d2\u4e3a $\\theta$\uff0cnemo \u901f\u5ea6\u4e3a $v$\uff0c\u98df\u7269\u901f\u5ea6\u4e3a $u$\uff0c\u8054\u5408\u8fd0\u7528\u5411\u91cf\u70b9\u79ef\u548c\u4f59\u5f26\u5b9a\u7406\u5f97\u51fa nemo \u8d70\u5230\u98df\u7269\u7684\u6700\u77ed\u65f6\u95f4\u4e3a\n$$\nt=s\\frac{u\\cos\\theta\\pm\\sqrt{u^2(\\cos^2\\theta-1)+v^2}}{u^2-v^2}\n$$\n\u200b\t\u7b49\u5f0f\u6210\u7acb\u6027\u4e0e\u52a0\u51cf\u53f7\u53d6\u6cd5\uff1a\n\n- \u5f53 $\\Delta=u^2(\\cos^2\\theta-1)+v^2<0$ \u6216 $\\cos\\theta<0\\&\\& u>v$ \u65f6\uff0cnemo \u8ffd\u4e0d\u4e0a\u3002\n- \u5426\u5219**\u53d6\u51cf\u53f7\u4e00\u5b9a\u66f4\u4f18**\u5e76\u4e14 $t$ \u5fc5\u4e3a\u6b63\u3002\u8bc1\u660e\u5c31\u662f\u7528 $\\Delta\\ge 0$ \u5316\u4e00\u4e0b\u3002\n- \u7279\u522b\u5730\uff0c$u=v$ \u7279\u5224\u6389\u3002\n\n\u200b\t\u76ee\u6807\u53d8\u4e3a\u6c42**\u6700\u4f18\u7684\u6392\u5217** $\\{p_i\\}$\u3002\n\n#### \u70b9\u4e00\n\n\u200b\t\u5c31\u4e24\u4e2a\u70b9\u624b\u73a9\u90fd\u53ef\u4ee5\u554a\u5582\n\n#### \u70b9\u4e8c\n\n\u200b\t\u679a\u4e3e\u5168\u90e8 $8!=40320$ \u79cd\u6392\u5217\u3002\n\n#### \u70b9\u4e09\n\n\u200b\t\u7279\u70b9\uff1anemo \u4e00\u5f00\u59cb\u4f53\u91cd\u592a\u5c0f\u800c\u98df\u7269\u6743\u503c\u5448 $2$ \u7684\u6574\u6b21\u5e42\u3002\n\n\u200b\t\u53ea\u80fd\u4ece\u5c0f\u5f80\u5927\u5403\u3002\n\n#### \u70b9\u56db\n\n\u200b\t\u7279\u70b9\uff1a\u6240\u6709\u98df\u7269\u4e0e nemo \u5171\u7ebf\u4e14\u9759\u6b62\u4e0d\u52a8\u3002\u6240\u6709\u98df\u7269\u6743\u503c\u4e0d\u8fc7 200\u3002\n\n\u200b\t\u5148\u6162\u6162\u589e\u5927\u81ea\u5df1\u7684\u4f53\u91cd\uff0c\u8fbe\u5230\u4e00\u5b9a\u91cf\u53ef\u4ee5\u5403\u6240\u6709\u98df\u7269\u540e\u8fdb\u884c\u533a\u95f4 DP \u5373\u53ef\u3002\n\n#### \u70b9\u4e94\uff0c\u516d\n\n\u200b\t\u7279\u70b9\uff1a\u6240\u6709\u98df\u7269\u5728\u9ad8\u7a7a\u4ee5\u9ad8\u901f\u4e0b\u843d\uff0c\u6c34\u5e73\u4f4d\u7f6e\u76f8\u9694\u8fd1\u3002nemo \u901f\u5ea6\u5c0f\uff0c\u4f46\u53ef\u4ee5\u5403\u6240\u6709\u98df\u7269\u3002\n\n\u200b\t\u53ef\u4ee5\u770b\u505a nemo \u53ea\u80fd\u5728\u6a2a\u8f74\u4e0a\u8fd0\u52a8\uff0c\u63a5\u4f4f\u4e0b\u843d\u7684\u98df\u7269\u3002\n\n\u200b\t\u8bbe $f_i$ \u8868\u793a\u63a5\u4f4f\u7b2c $i$ \u4e2a\u98df\u7269\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4f53\u91cd\uff0c\u76f4\u63a5\u8f6c\u79fb\u3002\n\n\u200b\t\u70b9\u516d\u6709\u4e00\u4e2a\u5751\u5728\u4e8e\u6709\u4e24\u4e2a\u98df\u7269\u4f1a\u540c\u65f6\u4e0b\u843d\u5230\u76f8\u540c\u4f4d\u7f6e\u3002\n\n#### \u70b9\u4e03\uff0c\u516b\n![](https://cdn.luogu.com.cn/upload/image_hosting/2nmsbss3.png)\n\n\u200b\t\u7279\u70b9\uff1a\u5982\u56fe\u3002\u6570\u5b57\u4e09\u89d2\u5f62\u7684\u5f62\u6001\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\u3002\u89c2\u5bdf\u6743\u503c\u53d1\u73b0\u6bcf\u4e00\u884c\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\u800c\u65f6\u95f4\u6070\u597d\u591f nemo \u8d70\u5230\u6700\u540e\u4e00\u6392\u3002\n\n\u200b\t\u6570\u5b57\u4e09\u89d2\u5f62\u5373\u53ef\u3002\n\n#### \u70b9\u4e5d\n\n\u200b\t\u7279\u70b9\uff1a\u6240\u6709\u98df\u7269\u9759\u6b62\n\n\u200b\t\u8ddf\u70b9\u5341\u4e00\u8d77\u505a\u3002\n\n#### \u70b9\u5341\n\n\u200b\t\u7279\u70b9\uff1a\u597d\u50cf\u6ca1\u6709\n\n\u200b\t\u8fd9\u9053\u9898\u552f\u4e00\u6298\u78e8\u4eba\u7684\u70b9\u3002\n\n\u200b\t\u8003\u8651\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\uff1a\u6bcf\u6b21\u5728\u5f53\u524d\u6240\u6709\u80fd\u5403\u7684\u98df\u7269\u4e2d\u6309\u67d0\u79cd\u5173\u7cfb\u9009\u51fa\u6700\u4f18\u7684\u90a3\u4e00\u4e2a\u5e76\u5403\u6389\u3002\u91cd\u590d\u8be5\u6d41\u7a0b\u76f4\u81f3\u627e\u4e0d\u5230\u53ef\u4ee5\u5403\u7684\u98df\u7269\u4e3a\u6b62\u3002\n\n\u200b\t\u8bbe\u5bf9\u4e8e\u4e00\u4e2a\u98df\u7269 $i$\uff0c\u5176\u6743\u503c\u4e3a $w_i$\uff0cnemo \u5403\u6389\u5b83\u6240\u9700\u65f6\u95f4\u4e3a $t_i$\uff0cnemo \u5403\u6389\u5b83\u65f6 nemo \u7684\u4f4d\u7f6e\u8ddd\u5f53\u524d\u4f4d\u7f6e\u4e3a $d_i$\u3002\n\n\u200b\t\u80af\u5b9a\u4f1a\u6709\u4e00\u4e9b\u611f\u6027\u7684\u8ba4\u8bc6\uff1a$w_i$ \u8d8a\u5927\u8d8a\u597d\uff0c$t_i$ \u8d8a\u5c0f\u8d8a\u597d\uff0c$d_i$ \u8d8a\u5c0f\u8d8a\u597d\uff0c$\\frac{w_i}{t_i}$ \u8d8a\u5927\u8d8a\u597d $\\cdots$\n\n\u200b\t\u5404\u4eba\u6709\u5404\u4eba\u7684\u504f\u597d\uff0c\u5404\u79cd\u8c03\u53c2\u65b9\u6cd5\u90fd\u80fd\u8fc7\uff0c\u4f46\u8c03\u53c2\u7684\u8fc7\u7a0b\u65e0\u4e00\u4f8b\u5916\u7684\u6298\u78e8\u3002\u8fd9\u91cc\u9898\u89e3\u91c7\u7528\n$$\nk_i=\\frac{w_i}{t_i^2}+\\frac{1}{K_1d_i}+K_2\n$$\n\u200b\t\u6bcf\u6b21\u9009 $k_i$ \u6700\u5927\u7684\u5403\u3002$K_1,K_2$ \u4e3a\u4e24\u4e2a $[1,10]$ \u7684\u968f\u673a\u6570\u3002\n\n\u200b\t**\u591a\u6b21\u8d2a\u5fc3\u53d6\u6700\u4f18\u89e3**\u3002\u5b9e\u6d4b\u5728 10 \u6b21\u4e4b\u5185\u53ef\u4ee5\u51fa\u7b54\u6848\uff0c\u6240\u82b1\u65f6\u95f4\u4e0d\u8d85\u8fc7 5s\u3002\n\n```\ndouble eat2(){\n\twhile(!pq.empty())pq.pop();\n\tdouble ct,nans=w0,nt=0;nx=fx,ny=fy,pa=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfl[i]=0;\n\t\tif(w[i]<nans){\n\t\t\tct=calnt(i,nt);\n\t\t\tpq.push(make_pair(w[i]/(ct*ct)+G/dis(nx,ny,ax[i]+nt*mx[i],ay[i]+nt*my[i])+rand()%10,i));\n\t\t}\n\t}\n\twhile(!pq.empty()){\n\t\tint ng=pq.top().second;pq.pop();\n\t\tfl[ng]=1,ct=calnt(ng,nt);\n\t\tif(nt+ct>T)break;\n\t\tnx=ax[ng]+(nt+ct)*mx[ng];\n\t\tny=ay[ng]+(nt+ct)*my[ng];\n\t\tna[++pa]=(eve){nt+ct,nx,ny,ng};\n\t\tnans+=w[ng];\n\t\tnt+=ct;\n\t\twhile(!pq.empty())pq.pop();\n\t\tfor(int i=1;i<=n;i++)if(w[i]<nans&&!fl[i])ct=calnt(i,nt),pq.push(make_pair(w[i]/(ct*ct)+G/dis(nx,ny,ax[i]+nt*mx[i],ay[i]+nt*my[i])+rand()%10,i));\n\t}\n\tif(nans>aans){\n\t\taans=nans,pans=pa;\n\t\tfor(int i=1;i<=pa;i++)ans[i]=na[i];\n\t}\n\treturn nans;\n}\n```\n\n",
        "postTime": 1619438366,
        "uid": 259028,
        "name": "Aly_",
        "ccfLevel": 9,
        "title": "P1915 [NOI2010] \u6210\u957f\u5feb\u4e50 \u9898\u89e3"
    }
]