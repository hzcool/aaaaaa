[
    {
        "content": "\u9996\u5148\u4e0d\u8003\u8651\u52a0\u8fb9\uff0c\u82e5\u4ec5\u8ba1\u7b97\u4ee5\u67d0\u4e2a\u70b9\u4e3a\u6839\u65f6\u6811\u4e2d\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e0e\u70b9\u6743\u4e58\u79ef\u4e4b\u548c\uff0c\u53ef\u4ee5\u7528\u6362\u6839 DP \u5904\u7406\u3002\n\n\u6307\u5b9a $u$ \u4e3a\u57fa\u73af\u6811\u73af\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u4e14\u4e0d\u662f\u65b0\u52a0\u7684\u8fb9\u7684\u7aef\u70b9\uff0c\u5c06\u5176\u63d0\u4e3a\u6811\u6839\u3002\n\n\u8bbe\u4ee5 $u$ \u4e3a\u6839\u65f6\uff0c$i$ \u5728\u6811\u4e2d\u7684\u7236\u8282\u70b9\u4e3a $f_i$\uff0c\u4ee5\u70b9 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684\u70b9\u6743\u548c\u4e3a $s_i$\uff0c$\\operatorname{dis}(i,j)$ \u4e3a\u6811\u4e0a\u70b9 $i$ \u4e0e\u70b9 $j$ \u7684\u8ddd\u79bb\uff0c$dep_i=dis(u,i)$\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u68f5\u6811\u4e3a\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4b53ds1s.png)\n\n\u4e3a\u4fdd\u8bc1 $u$ \u5728\u73af\u4e0a\uff0c\u53d6\u4f4d\u4e8e\u4e0d\u540c\u5b50\u6811\u4e2d\u7684 $v,w$ \u4e24\u70b9\u8fde\u8fb9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bcwj0aev.png)\n\n\u5219\u6240\u6709\u70b9\u5728\u57fa\u73af\u6811\u4e2d\u7684\u6df1\u5ea6\u53d8\u4e3a\u5b83\u5230\u73af\u4e0a\u7684\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u53ef\u4ee5\u53d1\u73b0\u79bb\u4e00\u4e2a\u70b9\u6700\u8fd1\u7684\u73af\u4e0a\u7684\u70b9\u5fc5\u7136\u662f\u5176\u672c\u8eab\u6216\u5176\u7956\u5148\u8282\u70b9\u4e2d\u5728\u73af\u4e0a\u7684\u6df1\u5ea6\u6700\u6df1\u7684\u70b9\u3002\u8fd9\u91cc\u8bbe\u79bb\u70b9 $i$ \u6700\u8fd1\u7684\u73af\u4e0a\u7684\u70b9\u4e3a $d_i$\uff0c\u5219\u57fa\u73af\u6811\u4e2d\u70b9 $i$ \u7684\u6df1\u5ea6\u76f8\u6bd4\u539f\u5148\u5728\u6811\u4e2d\u7684\u6df1\u5ea6\u51cf\u5c11 $\\operatorname{dis}(u,i)-\\operatorname{dis}(d_i,i)=\\operatorname{dis}(u,d_i)=dep_{d_i}$\uff0c\u6545\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u76f8\u6bd4\u539f\u5148\u51cf\u5c11 $w_i dep_{d_i}$\u3002\n\n\u8003\u8651\u5c06 $d_i$ \u76f8\u540c\u7684\u70b9\u4e00\u8d77\u8ba1\u7b97\u3002\u8bbe\u73af\u4e0a\u7684\u70b9\u96c6\u4e3a $S$\uff0c\u5219\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u51cf\u5c11\u91cf\u5f62\u5982 $\\sum_{i\\in S} t_i dep_i$\uff0c\u5176\u4e2d $t_i=\\sum_{j=1}^{n}[d_j=i]w_j$\u3002\u63a5\u4e0b\u6765\u8003\u8651 $d_i$ \u76f8\u540c\u7684\u70b9\u7684\u6761\u4ef6\u3002\u8bbe\u73af\u4e0a\u6709\u4e00\u70b9\u5bf9 $(x,y)$\uff0c\u6ee1\u8db3\u5728\u539f\u5148\u7684\u6811\u4e2d $x$ \u662f $y$ \u7684\u7236\u8282\u70b9\uff0c\u5219\u82e5\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u4e00\u70b9 $i$ \u6ee1\u8db3 $d_i \\neq x$\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u4ee5 $y$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u70b9\uff0c\u6545 $t_x=s_x-s_y$\u3002\u8003\u8651\u5230\u70b9 $u$ \u5728\u6811\u4e2d\u6ca1\u6709\u7236\u8282\u70b9\uff0c\u4e14 $dep_u=0$\uff0c\u6545 $d_i=u$ \u7684\u70b9\u4e0d\u5bf9\u7b54\u6848\u7684\u51cf\u5c11\u9020\u6210\u5f71\u54cd\u3002\u5c06\u4e0a\u5f0f $s_x-s_y$ \u4e2d $-s_y$ \u7684\u8d21\u732e\u79fb\u81f3\u70b9 $y$ \u8fdb\u884c\u8ba1\u7b97\uff0c\u53ef\u5f97\u51fa\u7b54\u6848\u8d21\u732e\u51cf\u5c11\u91cf\u4e3a $\\sum_{i \\in S \\land i \\neq u} s_i dep_i-s_i dep_{f_i}$\uff0c\u7531\u4e8e\u7236\u5b50\u8282\u70b9\u6df1\u5ea6\u5dee\u4e3a 1\uff0c\u6545\u6700\u7ec8\u5f97\u51fa\u7684\u8d21\u732e\u51cf\u5c11\u91cf\u4e3a $\\sum_{i \\in S \\land i \\neq u} s_i$\u3002\n\n\u6240\u4ee5\u6700\u7ec8\u7684\u95ee\u9898\u5c31\u662f\u627e\u51fa\u4e24\u6761\u4e0e $u$ \u76f8\u8fde\u4e14\u65e0\u91cd\u53e0\u90e8\u5206\u7684\u4e24\u6761\u94fe\uff0c\u6ee1\u8db3\u4e24\u6761\u94fe\u4e0a\u6240\u6709\u70b9\u7684 $s_i$ \u4e4b\u548c\u6700\u5c0f\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u6362\u6839 DP \u7684\u65b9\u6cd5\u5904\u7406\u3002\n\n\u6700\u7ec8\u53ea\u9700\u8981\u679a\u4e3e\u70b9 $u$\uff0c\u5229\u7528\u6362\u6839 DP \u5f97\u5230\u7684\u4fe1\u606f\u6c42\u51fa\u4ee5 $u$ \u4e3a\u6839\u7684\u6811\u7684\u7b54\u6848\u3002\u5047\u8bbe\u4ee5 $u$ \u4e3a\u6839\u65f6\u6811\u4e2d\u6240\u6709\u70b9\u7684\u6df1\u5ea6\u4e0e\u70b9\u6743\u4e58\u79ef\u4e4b\u548c\u4e3a $t_u$\uff0c\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u4e24\u6761\u94fe\u4e0a\u6240\u6709\u70b9\u7684 $s_i$ \u4e4b\u548c\u4e3a $l_u$\uff08\u8fd9\u91cc\u7684\u4e24\u6761\u94fe\u4e0d\u5305\u62ec\u70b9 $u$\uff09\uff0c\u5219\u4ee5 $u$ \u4e3a\u6839\u7684\u6811\u7684\u7b54\u6848\u4e3a $t_u-l_u$\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u4ee3\u7801\uff1a\n```\n//\u4f3c\u4e4e\u633a\u591a\u4eba\u53cd\u6620\u7ec6\u8282\u591aqwq\uff0c\u4f46\u51fa\u9898\u4eba\u611f\u89c9\u8fd9\u4e48\u60f3\u7ec6\u8282\u5e76\u4e0d\u4f1a\u592a\u591a\uff1f\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#define MaxN (1000005)\nusing namespace std;\ntypedef long long ll;\nvoid Read(int &x){\n    static char c;\n    static int f;\n    f=1;\n    while(!isdigit(c=getchar()))\n        if(c=='-')\n            f=-1;\n    x=(c^48);\n    while(isdigit(c=getchar()))\n        x=x*10+(c^48);\n    x*=f;\n    return;\n}\nvoid Print(ll x){\n    if(x<0)\n        putchar('-'),x=-x;\n    static ll i;\n    for(i=1;i*10LL<=x;i*=10);\n    for(;i;i/=10)\n        putchar(x/i%10|48);\n    putchar('\\n');\n    return;\n}\ninline ll mmax(ll a,ll b){return a>b?a:b;}\ninline ll mmin(ll a,ll b){return a<b?a:b;}\nstruct LnkNode{\n    int v,nxt;\n}edge[MaxN*2];\nint etot,fst[MaxN];\ninline void addedge(int u,int v){\n    ++etot;\n    edge[etot].v=v;\n    edge[etot].nxt=fst[u];\n    fst[u]=etot;\n    return;\n}\nint n,w[MaxN],s[MaxN];\nll d[MaxN],dm[MaxN],sdm[MaxN],res=-9223372036854775807LL;\nvoid dfs1(int x,int f){\n    s[x]=w[x];\n    ll t;\n    for(int i=fst[x];i;i=edge[i].nxt)\n        if(edge[i].v!=f){\n            dfs1(edge[i].v,x);\n            s[x]+=s[edge[i].v];\n            d[x]+=d[edge[i].v]+s[edge[i].v];\n            t=s[edge[i].v]+mmin(dm[edge[i].v],0);\n            if(t<dm[x])\n                sdm[x]=dm[x],dm[x]=t;\n            else if(t<sdm[x])\n                sdm[x]=t;\n        }\n    return;\n}\nvoid dfs2(int x,int f){\n    if(f){\n        d[x]=d[f]+s[1]-s[x]*2;\n        ll t=s[1]-s[x]+mmin((dm[f]!=s[x]+mmin(dm[x],0))?(dm[f]):(sdm[f]),0);\n        if(t<dm[x])\n            sdm[x]=dm[x],dm[x]=t;\n        else if(t<sdm[x])\n            sdm[x]=t;\n    }\n    if(sdm[x]!=0x3f3f3f3f3f3f3f3fLL && d[x]-dm[x]-sdm[x]>res)\n        res=d[x]-dm[x]-sdm[x];\n    for(int i=fst[x];i;i=edge[i].nxt)\n        if(edge[i].v!=f)\n            dfs2(edge[i].v,x);\n    return;\n}\nint main(){\n    int a,b;\n    Read(n);\n    memset(dm+1,0x3f,sizeof(ll)*n);\n    memset(sdm+1,0x3f,sizeof(ll)*n);\n    for(int i=1;i<=n;++i)\n        Read(w[i]);\n    for(int i=1;i<n;++i){\n        Read(a);\n        Read(b);\n        addedge(a,b);\n        addedge(b,a);\n    }\n    dfs1(1,0);\n    dfs2(1,0);\n    Print(res);\n    return 0;\n}\n```",
        "postTime": 1588606446,
        "uid": 105110,
        "name": "xuezhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6513 \u3010[QkOI#R1] Quark and Tree\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u548c\u57fa\u73af\u6811\u5e76\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\uff0c\u76f8\u5f53\u4e8e\u4ee5\u4e00\u4e2a\u70b9\u4e3a\u6839\u9009 $2$ \u6761\u94fe\u3002\n\n\u5148\u7b97\u51fa\u4e0d\u52a0\u8fb9\u603b\u7b54\u6848,\u6bcf\u9009\u4e00\u4e2a\u70b9\u4f1a\u5bf9\u7b54\u6848\u51cf\u5c11\u7684\u8d21\u732e\u7b49\u4e8e\u8be5\u70b9\u5b50\u6811\u7684\u70b9\u6743\u4e4b\u548c\u3002\n\n\u5148\u8003\u8651\u4ee5 $1$ \u4e3a\u6839.\n\n\u7528 $dp1_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u51cf\u5c11\u8d21\u732e\u6700\u5c0f\u7684\u94fe,\u7528 $dp2_i$ \u8868\u793a\u6b21\u5c0f\u7684\u94fe.\n\n\u5f97\u51fa\u8f6c\u79fb\u65b9\u7a0b $dp1_u = \\min \\{ \\min\\{dp1_v, 0\\} + sum_v\\}$ \uff0c$dp2_u$ \u540c\u7406\u4e3a\u6b21\u5c0f\u7684.\n\n\u521d\u503c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u7684 $dp1$ \u4e3a0.\n\n$sum_v$ \u8868\u793a\u4ee5 $v$ \u4e3a\u6839\u7684\u5b50\u6811\u70b9\u6743\u4e4b\u548c.\n\n\u7136\u540e\u8003\u8651\u6362\u6839.\n\n\u5c06\u6839\u4ece $u$ \u6362\u5230 $v$,\u603b\u7b54\u6848\u4f1a\u52a0\u4e0a $sum_1 - 2 \\cdot sum_v$.\n\n\u7528 $dp3_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u5411\u4e0a\u7684\u94fe\u4f1a\u51cf\u5c11\u7684\u8d21\u732e\u7684\u6700\u5c11\u503c.\n\n\u5bf9\u4e8e\u4e00\u5bf9\u76f8\u90bb\u7684\u70b9 $u,v$,\u5176\u4e2d $u$ \u662f $v$ \u7684\u7236\u4eb2.\n\n\u9996\u5148 $(u,v)$ \u8fd9\u6761\u8fb9\u5fc5\u9009\uff0c\u8d21\u732e\u4e3a $sum_1 - sum_v$,\u4ece $u$ \u8f6c\u79fb\u6709\u4e09\u79cd\u53ef\u80fd:\u4e0d\u9009\u4efb\u4f55\u5176\u4ed6\u8fb9\uff0c\u9009 $u$ \u70b9\u4ee5\u4e0a\u7684\u94fe\uff0c\u9009\u4ee5 $u$ \u4e3a\u6839\u7684\u6700\u5c0f\u7684\u94fe(\u5982\u679c\u6700\u5c0f\u90a3\u6761\u94fe\u7ecf\u8fc7 $v$,\u5c31\u9009\u6b21\u5c0f\u7684\u94fe)\n\n\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9 $i$ ,\u7b54\u6848\u4e3a\n\n\u603b\u7b54\u6848$ - dp1_i - min(dp2_i,dp_3) - sum_1$\uff08\u56e0\u4e3a $i$ \u70b9\u7684\u8d21\u732e\u6ca1\u6709\u51cf\u6240\u4ee5\u8981\u51cf\u53bb\u603b\u70b9\u6743 $sum_1$ \uff09\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(x, l, r) for(int x = l; x <= r; x++)\n#define clr(x, y) memset(x, y, sizeof(x))\nusing namespace std;\ntypedef long long ll;\nconst int MAXN = 1000005;\nconst ll INF = 1ll << 60;\n\nint cnt = 0;\nll ans = -INF, res = 0;\nll a[MAXN], sum[MAXN];\nint head[MAXN], nxt[MAXN << 1], to[MAXN << 1];\nll dp1[MAXN], dp2[MAXN], dp3[MAXN], d[MAXN];\n\nvoid addedge(int u, int v){\n\tnxt[cnt] = head[u];\n\thead[u] = cnt;\n\tto[cnt] = v;\n\tcnt++;\n}\n\nvoid dfs1(int u, int fa){\n\tint flag = 0;\n\tsum[u] = a[u];\n\tfor(int e = head[u]; e != -1; e = nxt[e]){\n\t\tint v = to[e];\n\t\tif(v == fa) continue;\n\t\tflag = 1;\n\t\tdfs1(v, u);\n\t\tsum[u] += sum[v];\n\t\tif(min(0ll, dp1[v]) + sum[v] < dp1[u]){\n\t\t\tdp2[u] = dp1[u];\n\t\t\tdp1[u] = min(0ll, dp1[v]) + sum[v];\n\t\t\td[u] = v;\n\t\t}\n\t\telse dp2[u] = min(dp2[u], min(0ll, dp1[v]) + sum[v]);\n\t}\n\tif(!flag) dp1[u] = 0;\n\tres += sum[u];\n}\n\nvoid dfs2(int u, int fa, ll res){\n\tint flag = 0;\n\t//printf(\"%d %lld\\n\", u, res);\n\tfor(int e = head[u]; e != -1; e = nxt[e]){\n\t\tint v = to[e];\n\t\tif(v == fa) continue;\n\t\tflag = 1;\n\t\tif(v == d[u]) dp3[v] = min(0ll, min(dp2[u], dp3[u])) + sum[1] - sum[v];\n\t\telse dp3[v] = min(0ll, min(dp1[u], dp3[u])) + sum[1] - sum[v];\n\t\tdfs2(v, u, res + sum[1] - 2 * sum[v]);\n\t}\n\tif(flag) ans = max(ans, res - dp1[u] - min(dp2[u], dp3[u]) - sum[1]);\n}\n\nint main(){\n\tclr(head, -1); \n\tint n;\n\tscanf(\"%d\", &n);\n\trep(i, 1, n){\n\t\tscanf(\"%lld\", &a[i]);\n\t\tdp1[i] = dp2[i] = dp3[i] = INF;\n\t}\n\trep(i, 1, n - 1){\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\taddedge(x, y);\n\t\taddedge(y, x);\n\t}\n\tdfs1(1, -1);\n\tdfs2(1, -1, res);\n\t//rep(i, 1, n) printf(\"%lld %lld %lld %lld\\n\", i, dp1[i], dp2[i], dp3[i]);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1594361615,
        "uid": 149312,
        "name": "wze\u63cd\u6241\u4e86nm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6513 \u3010[QkOI#R1] Quark and Tree\u3011"
    },
    {
        "content": "\u6ce8\uff1a\u539f\u6765\u4e00\u7bc7 Markdown \u70b8\u4e86\n\n### \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u68f5\u5e26\u6743\u6811 $(1 \\le n \\le 10^6)$\uff0c\u6dfb\u52a0\u4e00\u6761\u8fb9\uff08\u4e0d\u80fd\u662f\u91cd\u8fb9/\u81ea\u73af\uff09\uff0c\u6c42\u57fa\u73af\u6811\u4e2d $\\sum value_i \\times depth_i$ \u7684\u6700\u5927\u503c\u3002\n\n### \u7b97\u6cd5\uff08$O(n)$\uff09\n\n\u8003\u8651\u4e0e\u52a0\u7684\u8fd9\u6761\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\uff0c\u5206\u4e3a\u7956\u5b59\u5173\u7cfb\u548c\u5728\u4e24\u68f5\u5b50\u6811\u5185\u3002\n- \u7956\u5b59\u5173\u7cfb\uff1a\n\n```\n  1   <-\n / \\\n2   3 <-\n```\n\n- \u975e\u7956\u5b59\u5173\u7cfb\uff1a\n\n```\n     1\n    / \\\n-> 2   3 <-\n```\n\n\u8bbe\u7ed3\u70b9 $i$ \u4e3a\u7956\u5148\u7ed3\u70b9\u65f6\uff0c**\u7956\u5b59\u5173\u7cfb**\u5728\u5b50\u6811 $i$ \u4e2d\u7b54\u6848\u4e3a $g_i$\uff0c\u5219 $g_i=g_{son}+$\uff08\u5176\u4ed6\u5b50\u6811+\uff08\u6574\u68f5\u6811-\u5b50\u6811 $i$\uff09\uff09\u5230\u8be5\u8282\u70b9\u7684 `\u6743\u503c` \u4e58 `\u8ddd\u79bb`\uff08\u5373\u57fa\u73af\u6811\u4e2d\u7684\u6df1\u5ea6\uff09\u3002\u8fb9\u754c\u60c5\u51b5\u4e3a\uff1a\n\n```\n1\n|\n2\n|\n3\n```\n\n\u5373\u957f\u5ea6\u4e3a $3$ \u7684\u94fe\uff0c\u679a\u4e3e\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5373\u53ef\u3002\n\n\u8bbe\u7ed3\u70b9 $i$ \u4e3a**\u975e\u7956\u5b59\u5173\u7cfb**\u4e2d\uff0c\u5c06\u57fa\u73af\u6811\u7684\u73af\u5728\u539f\u6811\u4e0a\u7684\u70b9\u770b\u4f5c\u201c\u4eba\u201d\u5f62\u7684\u201c\u4e24\u652f\u201d\uff0c\u5176\u4e2d\u201c\u4e00\u652f\u201d\u8ddd\u79bb `LCA` \u6700\u8fd1\u7684\u7ed3\u70b9\u4e3a $i$\uff0c\u5219\u5728\u5b50\u6811 $i$ \u4e2d\u7684 `\u6743\u503c` \u4e58 `\u8ddd\u79bb` \u4e3a $f_i$\uff0c\u5219 $f_i$ \u4e0e $g_i$ \u9012\u63a8\u5173\u7cfb\u76f8\u540c\u3002\u8fb9\u754c\u60c5\u51b5\u4e3a $f_i=$ \u5b50\u6811 $i$ \u4e2d\u7684 `\u6743\u503c` \u4e58 `\u8ddd\u79bb`\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u4e00\u4e9b\u6570\u7ec4\u6765\u6c42 $f,g$\uff08\u53d8\u91cf\u7f29\u5199\uff0c\u62ec\u53f7\u5185\u4e3a\u539f\u8bcd\uff09\uff1a\n- $s_i$ \u8868\u793a\u5b50\u6811 $i$ \u7684 \u6743\u503c \u548c\uff08$sum$\uff09\uff0c$s_i=v_i+\\sum s_{son}$\n- $sd_i$ \u8868\u793a\u5b50\u6811 $i$ \u7684 \u6743\u503c\u4e58\u8ddd\u79bb \u548c\uff08$sum-distance$\uff09\uff0c$sd_i=\\sum sd_{son}+s_{son}$\n- $s1_i$ \u8868\u793a\uff08\u6574\u68f5\u6811-\u5b50\u6811 $i$\uff09\u7684 \u6743\u503c \u548c\uff08$sum'$\uff09\uff0c$s1_i=s1_{father}+s_{father}-s_i$\n- $sd1_i$ \u8868\u793a\uff08\u6574\u68f5\u6811-\u5b50\u6811 $i$\uff09\u7684 \u6743\u503c\u4e58\u8ddd\u79bb \u548c\uff08$sum-distance'$\uff09\uff0c$sd_i=sd_{father}+sd_{father}-(sd_i+s_i)+s1_i$\n\n\u5219\n\n$f_i=\\max\\{sd_i,f_{son}+sd_i-(sd_{son}+s_{son})\\}$\n\n$g_i=\\max\\{sd_i-(sd_{son}+s_{son})+sd_{son}-(sd_{son_{son}}+s_{son_{son}}+sd_{son_{son}}) =sd_i-s_{son}-s_{son_{son}},g_{son}+sd_i-{sd_{son}+s_{son}}\\}$\n\n\u6700\u540e\u7684\u7b54\u6848 $ans=\\max\\{g_i+sd1_i,f_{son1}+f_{son2}+sd_i-(sd_{son1}+s_{son1})-(sd_{son2}+s_{son2})\\}$\uff0c\u679a\u4e3e\u5173\u4e8e $f$ \u7b54\u6848\u65f6\u53ef\u5c06 $f_{son}-(sd_{son}+s_{son})$ \u89c6\u4f5c\u6574\u4f53\u6c42\u6700\u5927\u503c\u4e0e\u6b21\u5927\u503c\u3002\n\n\u6574\u4e2a\u7b97\u6cd5\u4e2d\uff0c\u516c\u5f0f\u63a8\u5bfc\u96be\u5ea6\u4e0d\u5927\uff0c\u5c31\u662f\u6bd4\u8f83\u591a\uff0c\u8981\u4ed4\u7ec6\u3002\u6ce8\u610f\u521d\u503c\u53d6 $-\\infty$\u3002\n\n\u6c42\u8fd9\u4e9b\u6570\u7ec4\u65f6\uff0c\u6d89\u53ca\u679a\u4e3e\u5b50\u8282\u70b9/\u5b50\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c$O(\\sum son)=O(n)$\u3002\n\n### \u4ee3\u7801\n\n``` cpp\n// \u7ec6\u8282\u5f88\u591a\uff0c\u8981\u6ce8\u610f\n#include <cstdio>\n#include <algorithm>\n\nusing namespace std;\n#define N 1000000\n\nstruct edge {\n  int a, b;\n  bool operator< (const edge& edge) const { return a < edge.a; }\n};\nedge a[2 * N + 10];\nint n, head[N + 10], e[2 * N + 10];\nint s[N + 10], s1[N + 10];\nlong long ans, sd[N + 10], sd1[N + 10], f[N + 10], g[N + 10];\n\nvoid dfs1(int x, int fa) {\n  for (int i = head[x]; i < head[x + 1]; ++i)\n    if (e[i] != fa) {\n      dfs1(e[i], x);\n      s[x] += s[e[i]];\n      sd[x] += sd[e[i]] + s[e[i]];\n    }\n  f[x] = sd[x];\n  for (int i = head[x]; i < head[x + 1]; ++i)\n    if (e[i] != fa) {\n      f[x] = max(f[x], f[e[i]] + sd[x] - (sd[e[i]] + s[e[i]]));\n      g[x] = max(g[x], g[e[i]] + sd[x] - (sd[e[i]] + s[e[i]]));\n      for (int j = head[e[i]]; j < head[e[i] + 1]; ++j)\n        if (e[j] != x)\n          g[x] = max(g[x], sd[e[j]] + sd[e[i]] - (sd[e[j]] + s[e[j]]) +\n              sd[x] - (sd[e[i]] + s[e[i]]));\n    }\n}\n\nvoid dfs2(int x, int fa) {\n  if (x > 1) {\n    s1[x] = s1[fa] + s[fa] - s[x];\n    sd1[x] = sd1[fa] + sd[fa] - (sd[x] + s[x]) + s1[x];\n  }\n  long long m1 = -1e17, m2 = -1e17;\n  for (int i = head[x]; i < head[x + 1]; ++i) \n    if (e[i] != fa) {\n      dfs2(e[i], x);\n      long long tmp = f[e[i]] - (sd[e[i]] + s[e[i]]);\n      if (tmp > m1) {\n        m2 = m1;\n        m1 = tmp;\n      } else if (tmp > m2) m2 = tmp;\n    }\n  ans = max(ans, max(m1 + m2 + sd[x] + sd1[x], g[x] + sd1[x]));\n}\n\nint main() {\n  scanf(\"%d\", &n);\n  for (int i = 1; i <= n; ++i) {\n    scanf(\"%d\", &s[i]);\n    g[i] = -1e17;\n  }\n  for (int i = 1; i < n; ++i) {\n    scanf(\"%d%d\", &a[i].a, &a[i].b);\n    a[n + i] = {a[i].b, a[i].a};\n  }\n  sort(a + 1, a + n + n);\n  head[1] = 1;\n  for (int i = 1, j = 0; i < n + n; ++i) {\n    while (a[i].a != j) {\n      head[j + 2] = head[j + 1];\n      ++j;\n    }\n    ++head[j + 1];\n    e[i] = a[i].b;\n  }\n  head[n + 1] = n + n;\n  dfs1(1, 0);\n  ans = -1e17;\n  dfs2(1, 0);\n  printf(\"%lld\\n\", ans);\n  return 0;\n}\n```",
        "postTime": 1588595632,
        "uid": 40428,
        "name": "hhhyyyfff",
        "ccfLevel": 7,
        "title": "P6513 [QkOI#R1] Quark and Tree\u9898\u89e3"
    }
]