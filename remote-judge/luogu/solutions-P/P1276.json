[
    {
        "content": "\u8fd9\u9053\u9898\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u505a\u7684\uff0c\u4e0d\u8fc7\u6709\u70b9\u95f2\u7684\u6ca1\u4e8b\u5e72\n\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nstruct Seg_Tree\n{\n    int left,right,value;//value\u8868\u793a\uff1a2\u4e3a\u6811\u82d7 1\u4e3a\u6811\u6728 0\u4e3a\u6ca1\u6709\u6811 -1\u4e3a\u4e0d\u80fd\u5f53\u505a\u6574\u4f53 \u53ef\u4ee5\u7701\u7565\u4e00\u4e2a\u6807\u8bb0 \n}son[150000];\n\nint l,n,ans1=0,ans2=0;\n\nvoid Build(int id,int left,int right) //\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u5efa\u6811 \n{\n    son[id].left=left;\n    son[id].right=right;\n    son[id].value=1;\n    if (left==right) return;\n    Build(id<<1,left,(left+right)>>1);\n    Build(id<<1|1,((left+right)>>1)+1,right);\n}\n\nvoid Update_Cut(int id,int left,int right) //\u780d\u6811 \n{\n    int mid=(son[id].left+son[id].right)>>1; //\u8ba1\u7b97\u5206\u6bb5\u7684\u4f4d\u7f6e \n    if (son[id].value!=1 && son[id].value!=-1) son[id<<1].value=son[id<<1|1].value=son[id].value; //\u7ee7\u627f \n    if (left==son[id].left && right==son[id].right)\n    {//\u6b64\u5904\u4ee3\u7801\u53ef\u4ee5\u4f18\u5316\u5230\u66f4\u77ed \n        if (son[id].value==0) return; //\u6ca1\u6709\u6811\u53ef\u4ee5\u4e0d\u780d \n        if (son[id].value==1) son[id].value=0; //\u6709\u6811\u6728\u76f4\u63a5\u780d\u6389 \n        if (son[id].value==2)\n        {\n            son[id].value=0; //\u6811\u82d7\u4e5f\u8981\u780d \n            ans1+=(son[id].right-son[id].left)+1; //\u8ba1\u7b97\u79cd\u4e0a\u88ab\u780d\u6389\u7684\u6811\u82d7 \n            ans2=ans2-(son[id].right-son[id].left+1); //\u8ba1\u7b97\u7559\u4e0b\u7684\u6811\u82d7 \n        }\n        if (son[id].value==-1) //\u4e0d\u80fd\u4e00\u8d77\u505a\u5c31\u4ea4\u7ed9\u81ea\u5df1\u7684\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u505a \n        {\n            son[id].value=0;\n            Update_Cut(id<<1,left,(left+right)>>1);\n            Update_Cut(id<<1|1,((left+right)>>1)+1,right);\n        }\n    }\n    else\n    {\n        if (right<=mid) Update_Cut(id<<1,left,right);\n        else if (left>mid) Update_Cut(id<<1|1,left,right);\n        else\n        {\n            Update_Cut(id<<1,left,mid);\n            Update_Cut(id<<1|1,mid+1,right);\n        } //\u201c\u4e09\u90e8\u66f2\u201d\u5f80\u4e0b\u63a8 \n        if (son[id<<1].value!=son[id<<1|1].value) son[id].value=-1;\n            else son[id].value=son[id<<1].value; //\u5224\u65ad\u5de6\u53f3\u513f\u5b50\u662f\u5426\u76f8\u7b49\uff0c\u786e\u5b9a\u662f\u5426\u8981\u6574\u4f53\u4e00\u8d77\u505a \n    }\n}\n\nvoid Update_Plant(int id,int left,int right)\n{\n    int mid=(son[id].left+son[id].right)>>1;\n    if (son[id].value!=1 && son[id].value!=-1) son[id<<1].value=son[id<<1|1].value=son[id].value; //\u540c\u4e0a \n    if (left==son[id].left && right==son[id].right)\n    {\n        if (son[id].value==1 || son[id].value==2) return; //\u6811\u6728\u4e0d\u8981\u79cd\uff01 \n        if (son[id].value==0)\n        {\n            son[id].value=2;\n            ans2+=(son[id].right-son[id].left)+1; //\u8ba1\u7b97\u6811\u82d7\u7684\u4e2a\u6570 \n        }\n        if (son[id].value==-1) //\u9632\u6b62\u4e0b\u9762\u6709\u6811\u6728\uff0c\u6240\u4ee5\u4e0d\u8981\u5728\u8fd9\u91cc\u505ason[id].value=2 \n        {\n            Update_Plant(id<<1,left,(left+right)>>1);\n            Update_Plant(id<<1|1,((left+right)>>1)+1,right);\n        }\n    }\n    else\n    {\n        if (right<=mid) Update_Plant(id<<1,left,right);\n        else if (left>mid) Update_Plant(id<<1|1,left,right);\n        else\n        {\n            Update_Plant(id<<1,left,mid);\n            Update_Plant(id<<1|1,mid+1,right);\n        }\n        if (son[id<<1].value!=son[id<<1|1].value) son[id].value=-1;\n            else son[id].value=son[id<<1].value; //\u540c\u4e0a \n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&l,&n);\n    Build(1,0,l);\n    for (int i=1;i<=n;i++)\n    {\n        int c,a,b;\n        scanf(\"%d%d%d\",&c,&a,&b);\n        if (a>b) swap(a,b); //\u9632\u6b62a>b \n        if (c==0) Update_Cut(1,a,b);\n            else Update_Plant(1,a,b);\n    }\n    printf(\"%d\\n%d\\n\",ans2,ans1);\n    return 0;\n}\n```",
        "postTime": 1495973636,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "## \u9996\u5148\u63d0\u4e00\u4e0b\u672c\u9898\u7684\u51e0\u4e2a\u5bb9\u6613\u5ffd\u7565\u7684~~\u5751\u70b9~~\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u65b9\u5427\n\n### 1.\n\n> \u95ee\u6700\u7ec8\u6821\u95e8\u5916\u7559\u4e0b\u7684\u6811\u82d7\u591a\u5c11\u68f5\uff1f\n\n\u662f\u4e0d\u662f\u4e00\u5f00\u59cb\u770b\u5230\u65f6\u5c31\u4e0d\u7ecf\u8fc7\u8111\u5b50\u7684\u76f4\u63a5\u8f93\u51fa\u6821\u95e8\u53e3\u7684\u6811\u7684\u68f5\u6570\u5566(\u5176\u5b9e\u9898\u76ee\u6709\u8bf4\u4e00\u5f00\u59cb\u5c31\u5b58\u5728\u7684\u662f\u6811\uff0c\u540e\u9762\u79cd\u4e0b\u53bb\u7684\u662f\u6811\u82d7)~~(\u7136\u540e\u4f60\u5c31\u4f1a\u83b7\u5f9780\u6216\u800520\u5206\u7684\u597d\u6210\u7ee9)\uff0c\u53ef\u80fd\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u770b\u9519\u4e86\u5427$QWQ$~~\n\n### 2.\n\n> \u690d\u6811\u8005\u79cd\u4e0a\u53c8\u88ab\u780d\u6389\u7684\u6811\u82d7\u6709\u591a\u5c11\u68f5\uff1f\n\n\u8fd9\u4e2a\u53ef\u80fd\u9519\u7684\u4eba\u6bd4\u8f83\u5c11\uff0c\u5b83\u7684\u610f\u601d\u662f\u6bcf\u9022\u780d\u6811\u8005\u628a\u6811\u82d7\u780d\u4e86\u5c31\u628a$ans++$\uff0c\u5e76\u4e0d\u662f\u5728\u4e00\u4e2a\u6811\u5751\u4e2d\u53ea\u80fd$ans++$\u4e00\u6b21\n\n### 3.\n\n> \u6821\u95e8\u5916\u9a6c\u8def\u4e0a\u672c\u6765\u4ece\u7f16\u53f70\u5230$L$\uff0c\u6bcf\u4e00\u7f16\u53f7\u7684\u4f4d\u7f6e\u90fd\u67091\u68f5\u6811\u3002\n\n\u628a\u7f16\u53f7\u770b\u9519\u7684\u5e94\u8be5\u4e0d\u6b62\u6211\u4e00\u4e2a\u4eba\u5427(~~\u8bd5\u56fe\u81ea\u6211\u5b89\u6170~~)\n\n\n\n\u7ec8\u4e0a\u6240\u8ff0\uff0c\u5ba1\u9898\u4e00\u5b9a\u8981\u597d\u597d\u5ba1\uff0c\u4e0d\u7136\u539f\u6765\u5b8c\u5168\u5bf9\u7684\u7a0b\u5e8f\u4e5f\u4f1a\u7206\u96f6(\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u4e3a\u4e86\u627e\u51fa\u8fd9\u4e9b\u5751\u70b9\u7ed9\u6d1b\u8c37\u63d0\u4f9b\u4e86\u4e00\u9875\u7684\u63d0\u4ea4\u8bb0\u5f55\u5462)\n\n***\n\n## \u518d\u517b\u6210\u4e00\u4e2a\u597d\u4e60\u60ef\n\n\u505a\u9898\u524d\u5148\u770b\u770b\u4e00\u4e0b\u6570\u636e\u7684\u5927\u5c0f\n\n\u8fd9\u9898\u7684\u6570\u636e\u662f$L\uff081 <= L <= 10000\uff09$\u548c $N\uff081 <= N <= 100\uff09$\n\n\u54ce\uff0c$O(n^2)$\u7684\u6a21\u62df\u597d\u50cf\u53ef\u4ee5$*$\u8fc7\u53bb\uff1f\n\n\u90a3\u6765\u5427\uff0c\u5199\u6a21\u62df(\u53ef\u4ee5\u5199\u6a21\u62df\u7684\u5c31\u4e0d\u8981\u5199\u7ebf\u6bb5\u6811\u4e86\u561b\uff0c\u7ebf\u6bb5\u6811\u90a3\u4e2a\u7801\u91cf\u4e0d\u6562\u606d\u7ef4)\n\n```cpp\n#pragma GCC optimize(3)\n#include<bits/stdc++.h>\n#define ll long long//\u968f\u624blong long\u597d\u4e60\u60ef\n\nusing namespace std;\n\nconst ll FFF=10000+5;\n\nll l,n;\nbool opt;//\u5224\u65ad\u662f\u780d\u6811\u8fd8\u662f\u79cd\u6811\nll a,b;\nll flag[FFF];//flag=1\u65f6\u662f\u6811(\u5c31\u662f\u4e00\u5f00\u59cb\u5c31\u5b58\u5728\u7684)\uff0cflag=2\u65f6\u662f\u6811\u82d7(\u5c31\u662f\u540e\u6765\u79cd\u4e0b\u7684)\uff0cflag=0\u65f6\u662f\u7a7a\u6c14(\u7a7a\u5751)\nll ans_1,ans_2;//ans_1\u8bb0\u5f55\u6700\u7ec8\u6821\u95e8\u5916\u7559\u4e0b\u7684\u6811\u82d7\u68f5\u6570\uff0cans_2\u8bb0\u5f55\u690d\u6811\u8005\u79cd\u4e0a\u53c8\u88ab\u780d\u6389\u7684\u6811\u82d7\u68f5\u6570\n\nint main()\n{\n    //if(fopen(\".in\", \"r\"))\n    //{\n    //\tfreopen(\".in\", \"r\", stdin);\n    //\tfreopen(\".out\", \"w\", stdout);\n    //}\n    ios::sync_with_stdio(false);//\u5173\u95ed\u6d41\u540c\u6b65\uff0c\u8ba9cin\u3001cout\u53d8\u5f97\u548cscanf\u3001printf\u4e00\u6837\u5feb\n    cin>>l>>n;\n    for(int i=0;i<=l;++i)//\u8bb0\u4f4f\u7f16\u53f7\u4ece0\u5f00\u59cb\uff0c\u5230l\u7ed3\u675f\n    {\n        flag[i]=1;//\u521d\u59cb\u5316\uff0c\u628a\u6811\u90fd\u79cd\u4e0a\n    }\n    for(int i=0;i<n;++i)\n    {\n        cin>>opt>>a>>b;\n        if(opt==0)//\u5982\u679c\u662f\u780d\u6811\n        {\n            for(int j=a;j<=b;++j)//\u90a3\u5c31\u780d\u5457\uff0c\u4ecea\u5230b\n            {\n                if(flag[j]==2)//\u5982\u679c\u780d\u7684\u662f\u6811\u82d7\n                {\n                    ans_2+=1;//ans_2++\n                }\n                flag[j]=0;//\u8ba9flag=0\uff0c\u5373\u8bb0\u4e3a\u7a7a\u5751\n            }\n        }\n        else//\u5982\u679c\u662f\u79cd\u6811\n        {\n            for(int j=a;j<=b;++j)\n            {\n                if(flag[j]==0)//\u5982\u679c\u9047\u5230\u4e00\u4e2a\u7a7a\u5751\n                {\n                    flag[j]=2;//\u5c31\u628a\u6811\u82d7\u79cd\u4e0a\uff0c\u628aflag\u53d8\u4e3a2(\u6ce8\u610f\uff0c\u662f\u6811\u82d7\u4e86\uff0c\u4e0d\u80fd\u628aflag\u53d8\u62101)\n                }\n            }\n        }\n    }\n    for(int i=0;i<=l;++i)//\u6700\u540e\u5904\u7406\n    {\n        if(flag[i]==2)//\u5982\u679c\u6821\u95e8\u53e3\u6709\u6811\u82d7\u7684\u8bdd\n        {\n            ans_1+=1;//ans_1++\n        }\n    }\n    cout<<ans_1<<endl<<ans_2;//\u8f93\u51fa\uff0c\u5b8c\u7ed3\u6492\u82b1\n    return 0;\n}\n```\n\n",
        "postTime": 1552046458,
        "uid": 172719,
        "name": "\u5e94\u541f\u541f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u79cd\u7ebf\u6bb5\u6811\u7684\u9898\u53ef\u4ee5\u7528STL\u6c34\u4e00\u53d1\nbitset\nbitset\u5b9e\u9645\u4e0a\u5c31\u662f\u5e03\u5c14\u6570\u7ec4\uff0c\u4f46\u662f\u6211\u4eec\u7528\u5b83\u662f\u56e0\u5b83\u6bd4\u5b9e\u9645\u4e0a\u7684\u5e03\u5c14\u6570\u7ec4\u8282\u7701\u516b\u500d\u7a7a\u95f4\uff0c(\u56e0\u4e3a\u5e03\u5c14\u6570\u7ec4\u75288bit\u5b58\u50a8\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u6b64\u7269\u53ea\u75281bit)\n\u4e00\u4e9b\u64cd\u4f5c\n\u82e5a,b\u662f\u4e24\u4e2abitset\n\u53ef\u4ee5\u7528\uff1a\n```\nbitset<\u4e00\u4e2a\u5e38\u91cf>a;\n//\u5f00\u4e00\u4e2a\u5b58\u50a80..\u4e00\u4e2a\u5e38\u91cf-1\u7684bitset\nbitset<\u4e00\u4e2a\u5e38\u91cf>b(\u4e00\u4e2a\u53ea\u5305\u542b'0'\u548c'1'\u7684string);\na^=b\na&=b\na|=b\na<<=\u4e00\u4e2a\u6570\na>>=\u4e00\u4e2a\u6570\n~a\na<<\u4e00\u4e2a\u6570\na>>\u4e00\u4e2a\u6570\na==b\na!=b\na&b\na|b\na^b\n\u4ee5\u4e0a\u64cd\u4f5c\u7c7b\u6bd4\u6574\u6570\u4f4d\u8fd0\u7b97\n\u83b7\u53d6\u5355\u4e2a\u5143\u7d20\u7684\u5f15\u7528(\u5e76\u6539\u53d8\u503c)\na[num]=0\na[num2]=1\n\u7136\u540e\u662fset\u548creset:\na.set()//\u521d\u59cb\u5316\u4e3a1\na.reset()//\u521d\u59cb\u5316\u4e3a0\na.set(num)//\u5c06a[num]\u53d8\u4e3a1\na.reset(num)//\u5c06a[num]\u53d8\u4e3a0\n\u8fd8\u6709\u4e9b\u5947\u602a\u7684\u4e1c\u897f\uff1a\na.flip()//\u987e\u540d\u601d\u4e49\na.flip(num)//\u987e\u540d\u601d\u4e49\na.any()//\u8fd4\u56de\u662f\u5426\u67091\na.none()//\u8fd4\u56de\u662f\u5426\u6ca1\u67091\na.count()//\u8fd4\u56de1\u7684\u4e2a\u6570\na.to_ulong()//\u8fd4\u56de\u8f6c\u5316\u4e3aunsigned long\u7684\u7ed3\u679c\uff0c\u8d85\u51fa\u8303\u56f4\u62a5\u9519\u3002\na.to_ullong()//\u540c\u4e0a\uff0c\u8fd4\u56de\u8f6c\u5316\u4e3aull\u7684\n\u5f53\u7136\u8fd8\u6709STL\u6e05\u4e00\u8272\u7684\na.size()//\u8fd4\u56de\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f\u4f4d\u6570\n\n```\n\u5e9f\u8bdd\u5b8c\u6bd5\uff0c\u5f00\u59cb\u6b63\u9898\uff0c\n\n\u7531\u9898\u76ee\u53ef\u4ee5\u77e5\u9053\u6211\u4eec\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u662f\u6811\uff0c\u6811\u82d7\uff0c\u7a7a\u6c14\u3002\u6240\u4ee5\u6839\u636e\u4fe1\u606f\u5b66\u7684\u67d0\u4e2a\u5b9a\u7406\u6211\u4eec\u53ef\u4ee5\u5f00\u4e24\u4e2abool\u6570\u7ec4\u5b58\u72b6\u6001\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u8ba9(x,y)\u8868\u793a\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u7684\u72b6\u6001\uff0c(1,1)\u4e3a\u6811\uff0c(1,0)\u4e3a\u6811\u82d7\uff0c(0,0)\u4e3a\u7a7a\u6c14\uff0c\u9898\u4e2d\u9700\u8981\u6211\u4eec1.\u780d\u6811\uff0c\u8ba9x=0,y=0\u30022.\u5224\u65ad\u662f\u5426\u4e3a\u6811\u82d7\uff0c\u8fd4\u56dex XOR y\u5373\u53ef\u30023.\u628a\u7a7a\u6c14\u53d8\u6210\u6811\u82d7\uff0c\u53ea\u9700\u8981\u8ba9x=1\uff0c\u8fd9\u6837\u5982\u679cx=1\u4e14y=1\uff0c\u6216\u8005\u662fx=1\u4e14y=0\uff0c\u8fd9\u6837\u4ed6\u4eec\u8fd8\u662f\u539f\u6837\uff0c\u5982\u679cx=0\u4e14y=0\uff0c\u4ed6\u5c31\u53d8\u6210x=1\u4e14y=0\uff0c\u7a7a\u6c14\u53d8\u6210\u4e86\u6811\u82d7\u4e86\u3002\n\n\u6ca1\u780d\u4e00\u6b21\u6811\u5224\u65ad\u4e00\u4e0bx XOR y\uff0c\u4e5f\u5c31\u662f\u662f\u5426\u4e3a\u6811\u82d7\uff0c\u5982\u679c\u662f\u7684\u8bddans2++\u3002\n\u6574\u4e2a\u8fc7\u7a0b\u5b8c\u6210\u7edf\u8ba1\u6811\u82d7\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u7d2f\u52a0\u6240\u6709\u7684x XOR y\n\n\u4ee3\u7801\u3001\n```cpp\n#include <cstdio>\n#include<iostream>\n#include<bitset> \nusing namespace std;\nbitset<10011>a,b;\nint main()\n{\n\tint l,n;\n\tscanf(\"%d%d\",&l,&n);\n\ta.set();\n\tb.set();\n\t//(0,0)\u7a7a\u7a74 (1,1)\u6811 (1,0)\u6811\u82d7 \n\tint x,y,z;\n\tint ans1=0,ans2=0;\n//\tcout<<a<<endl<<b<<endl; \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tif(x==0)\n\t\t{\n\t\t\tfor(int i=y;i<=z;i++)\n\t\t\t{\n\t\t\t\tans2+=a[i]^b[i];\n\t\t\t\ta.reset(i);\n\t\t\t\tb.reset(i);\n\t\t\t}\n\t\t}\n\t\tif(x==1)\n\t\t\tfor(int i=y;i<=z;i++)\n\t\t\t\ta.set(i);\n//\t\tcout<<a<<endl<<b<<endl; \n\t}\n\tfor(int i=0;i<=l;i++)\n\t\tans1+=a[i]^b[i];\n\tprintf(\"%d\\n%d\\n\",ans1,ans2);\n\treturn 0; \n}\n\n```\n ",
        "postTime": 1520755657,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u7ebf\u6bb5\u6811\u5199\u7684\u90fd\u592a\u8fc7\u9ebb\u70e6\uff0c\u8fd9\u662f\u56e0\u4e3a\u697c\u4e0b\u7684\u7ebf\u6bb5\u6811\u5747\u4e3a\u53ca\u65f6\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4f46\u662f\uff0c\u8be2\u95ee\u53ea\u6709\u4e00\u6b21\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8d39\u529b\u5bf9\u6bcf\u6b21\u8be2\u95ee\u7ef4\u62a4\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u95ee\uff0c\u7559\u4e0b\u7684\u6811\u82d7\u6570\u7b49\u4e8e\uff1a\u7559\u4e0b\u7684\uff08\u6811\u4e0e\u6811\u82d7\uff09\u603b\u6570\u51cf\u53bb\u7559\u4e0b\u7684\uff08\u6811\uff09\u7684\u603b\u6570\u3002\n\n\u5bf9\u4e8ev\u7b2c\u4e8c\u95ee\uff0c\u79cd\u4e0a\u53c8\u88ab\u62d4\u6389\u7684\u6811\u82d7\u6570\u7b49\u4e8e\uff1a\u88ab\u780d\u6389\u7684\uff08\u6811\u4e0e\u6811\u82d7\uff09\u603b\u6570\u51cf\u53bb\u88ab\u780d\u6389\u7684\uff08\u6811\uff09\u7684\u603b\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u6709\u591a\u5c11\uff08\u6811\uff09\u88ab\u780d\u6389\u548c\u6709\u591a\u5c11\uff08\u6811\u4e0e\u6811\u82d7\uff09\u88ab\u780d\u6389\u5c31\u597d\u4e86\u3002\n\n\u5bf9\u4e8e\u524d\u8005\uff0c\u6211\u4eec\u53ea\u9700\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u65e0\u89c6\u79cd\u6811\u82d7\u64cd\u4f5c\uff0c\u6bcf\u6b21\u7edf\u8ba1\u88ab\u780d\u6389\u591a\u5c11\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u540e\u8005\uff0c\u6211\u4eec\u4e5f\u5efa\u7acb\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u540c\u65f6\u7ef4\u62a4\u79cd\u6811\u4e0e\u780d\u6811\uff0c\u6bcf\u6b21\u7edf\u8ba1\u6210\u529f\u780d\u6389\u591a\u5c11\uff08\u6811\u4e0e\u6811\u82d7\uff09\u5373\u53ef\u3002\n\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define lson o<<1\n#define rson o<<1|1\n#define mid ((l+r)>>1)\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\nusing namespace std;\nconst int maxn=11111;\n\ntree[0]\u7ef4\u62a4\u7684\u662f\u6811\uff0ctree[1]\u7ef4\u62a4\u7684\u662f\u6811\u548c\u6811\u82d7\u3002\ntree[0].Ans,tree[1].Ans\u5206\u522b\u8868\u793a\u603b\u5171\u88ab\u780d\u6389\u7684\u6811/\u6811\u4e0e\u6811\u82d7\u7684\u603b\u6570\u3002\nstruct Segtree{\n\tint sum[maxn*4],ly[maxn*4],Ans;\n\tSegtree(){\n\t\tAns=0;\n\t\tmemset(ly,0,sizeof(ly));\n\t\tmemset(sum,0,sizeof(sum));\n\t}\n\tvoid build(int o,int l,int r){\n\t\tif(l==r){\n\t\t\tsum[o]=1;\n\t\t\treturn;\n\t\t}\n\t\tbuild(lson,l,mid);\n\t\tbuild(rson,mid+1,r);\n\t\tsum[o]=sum[lson]+sum[rson];\n\t}\n\tvoid down(int o,int l,int r){\n\t\tif(ly[o]==1){\n\t\t\tly[lson]=1;\n\t\t\tly[rson]=1;\n\t\t\tsum[lson]=mid-l+1;\n\t\t\tsum[rson]=r-mid;\n\t\t}\n\t\tif(ly[o]==-1){\n\t\t\tly[lson]=-1;\n\t\t\tly[rson]=-1;\n\t\t\tsum[lson]=0;\n\t\t\tsum[rson]=0;\n\t\t}\n\t\tly[o]=0;//\u7b2c\u4e00\u6b21\u5199\u7684\u65f6\u5019\u5fd8\u4e86\u8d4b\u56de0\u771f\u662f\u602a\u4e11\u3002\u3002\u3002\n\t}\n\tvoid zhong(int o,int l,int r,int L,int R){\n\t\tif(L<=l&&r<=R){\n\t\t\tly[o]=1;\n\t\t\tsum[o]=r-l+1;\n\t\t\treturn;\n\t\t}\n\t\tdown(o,l,r);\n\t\tif(L<=mid)zhong(lson,l,mid,L,R);\n\t\tif(mid+1<=R)zhong(rson,mid+1,r,L,R);\n\t\tsum[o]=sum[lson]+sum[rson];\n\t}\n\tvoid cut(int o,int l,int r,int L,int R){\n\t\tif(L<=l&&r<=R){\n\t\t\tAns+=sum[o];\n\t\t\tly[o]=-1;\n\t\t\tsum[o]=0;\n\t\t\treturn;\n\t\t}\n\t\tdown(o,l,r);\n\t\tif(L<=mid)cut(lson,l,mid,L,R);\n\t\tif(mid+1<=R)cut(rson,mid+1,r,L,R);\n\t\tsum[o]=sum[lson]+sum[rson];\n\t}\n}tree[2];\n\nint n,m;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tn++;\n\ttree[0].build(1,1,n);\n\ttree[1].build(1,1,n);\n\trep(i,1,m){\n\t\tint ops,l,r;\n\t\tscanf(\"%d%d%d\",&ops,&l,&r);\n\t\tl++,r++;\n\t\tif(ops==0)tree[0].cut(1,1,n,l,r),tree[1].cut(1,1,n,l,r);\n\t\tif(ops==1)tree[0].zhong(1,1,n,l,r);\n\t}\n\tcout<<tree[0].sum[1]-tree[1].sum[1]<<endl;\n\tcout<<tree[0].Ans-tree[1].Ans;\n\treturn 0;\n}\n```",
        "postTime": 1540081983,
        "uid": 59098,
        "name": "Mizuhara",
        "ccfLevel": 0,
        "title": "P1276 \u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6216\u6811\u72b6\u6570\u7ec4\u505a\uff0c\u4f46\u7531\u4e8e\u6570\u636e\u6bd4\u8f83\u6c34\uff0c\u6240\u4ee5\u7eaf\u6a21\u62df\u4e5f\u662f\u53ef\u4ee5\u8fc7\u5730\u3002\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[10001],ans1,ans2;//ans1\u662f\u62d4\u53bb\u6811\u82d7\u7684\u6570\u91cf\nint main()\n{\n    int L,n;\n    cin>>L>>n;\n    memset(a,1,sizeof(a));\n    for(int i=1;i<=n;i++)\n    {\n        int k,t1,t2;\n        scanf(\"%d%d%d\",&k,&t1,&t2);\n        if(k==0)\n        {\n            for(int j=t1;j<=t2;j++)\n            {\n                if(a[j]==2)\n                    ans1++;\n                a[j]=0;\n            }\n        }\n        else\n        {\n            for(int j=t1;j<=t2;j++)\n            {\n                if(a[j]==0)\n                    a[j]=2;\n            }\n        }\n    }\n    for(int i=0;i<=L;i++)\n        if(a[i]==2)\n            ans2++;\n    cout<<ans2<<endl<<ans1;\n    return 0;\n}\n\n```",
        "postTime": 1507114616,
        "uid": 47894,
        "name": "ElevenX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[$luogu$](https://www.luogu.org/problem/P1276).\n# \u9898\u89e3\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5199\u7ebf\u6bb5\u6811\u5e72\u561b, \u73c2\u6735\u8389\u6811\u591a\u597d\u5462!  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u597d\u50cf\u9898\u89e3\u91cc\u8fd8\u6ca1\u6709\u73c2\u6735\u8389\u6811\u7684\u505a\u6cd5, \u8003\u8651\u5230\u8fd9\u91cc\u65b0\u840c\u6bd4\u8f83\u591a, \u60f3\u6df1\u5165\u5b66\u4e60\u73c2\u6735\u8389\u6811\u7684\u540c\u5b66\u53ef\u4ee5\u770b[\u6211\u7684\u535a\u5ba2](https://krain.blog.luogu.org/Chtholly-Tree).  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5728\u73c2\u6735\u8389\u6811\u4e2d, \u6211\u4eec\u4ee4\u533a\u95f4\u7684\u503c$Val=0/1/2$, \u5206\u522b\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u6ca1\u6709\u6811; \u5168\u90e8\u662f\u8001\u6811; \u5168\u90e8\u662f\u6811\u82d7. \u5bf9\u4e8e\u780d\u6811\u64cd\u4f5c, \u5176\u5b9e\u5c31\u662f\u5148\u66b4\u529b\u62ff\u51fa\u6bcf\u6bb5\u533a\u95f4\u7edf\u8ba1\u5c06\u88ab\u780d\u6389\u7684\u6811\u82d7\u4e2a\u6570, \u7136\u540e\u533a\u95f4\u63a8\u5e73. \u5bf9\u4e8e\u690d\u6811\u64cd\u4f5c, \u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u63a8\u5e73, \u56e0\u4e3a\u8fd9\u4f1a\u628a\u4e00\u4e9b\u8001\u6811\u8bef\u8ba4\u4e3a\u6811\u82d7, \u800c\u76f4\u63a5\u4fee\u6539\u6bcf\u6bb5$Val=0$\u7684\u533a\u95f4\u7684\u503c\u5373\u53ef.  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u90a3\u5c31\u4e0a\u4ee3\u7801\u5427!\n# \u4ee3\u7801\n```cpp\n#include <set>\n#include <cstdio>\n\n#define Int register int\n\nusing namespace std;\n\nint L, N, Ans2; // L, N\u5982\u9898\u76ee\u63cf\u8ff0, Ans2\u662f\u7b2c\u4e8c\u4e2a\u7b54\u6848.\n\nclass Chtholly_Tree { // \u5c01\u88c5\u7248\u73c2\u6735\u8389\u6811.\nprivate:\n\tstruct Node { // \u7ed3\u70b9.\n\t\tint l, r;\n\t\tmutable int Val; // Val=1\u8868\u793a\u662f\u4e00\u5f00\u59cb\u5c31\u6709\u7684\u6811, Val=0\u8868\u793a\u88ab\u780d\u6389\u4e86, Val=2\u8868\u793a\u662f\u65b0\u683d\u7684\u6811.\n\t\tfriend inline bool operator < ( const Node a, const Node b ) { return a.l < b.l; }\n\t};\n\tset<Node> S;\n\ttypedef set<Node> :: iterator IT;\n\npublic:\n\tinline void Init () { S.insert ( { -1, L + 1, 1 } ); } // \u6ce8\u610f\u8fd9\u91cc\u8981\u4ece-1\u5230L+1, \u907f\u514dSplit\u7684\u65f6\u5019\u51fa\u73b0\u5947\u602a\u7684\u9519\u8bef.\n\tinline IT Split ( const int Indx ) { // Split\u5206\u88c2\u533a\u95f4.\n\t\tIT it = S.lower_bound ( { Indx, 0, 0 } );\n\t\tif ( it -> l == Indx ) return it;\n\t\t-- it;\n\t\tint l = it -> l, r = it -> r, v = it -> Val;\n\t\tS.erase ( it ), S.insert ( { l, Indx - 1, v } );\n\t\treturn S.insert ( { Indx, r, v } ).first;\n\t}\n\tinline void Cut ( const int l, const int r ) { // \u780d\u6811, \u7c7b\u4f3c\u4e8e\u63a8\u5e73\u64cd\u4f5c.\n\t\tIT rit = Split ( r + 1 ), lit = Split ( l );\n\t\tfor ( ; lit != rit; ++ lit ) Ans2 += ( lit -> Val == 2 ) * ( lit -> r - lit -> l + 1 );\n\t\trit = Split ( r + 1 ), lit = Split ( l );\n\t\tS.erase ( lit, rit ), S.insert ( { l, r, 0 } ); // \u63a8\u5e73, \u4fdd\u8bc1\u590d\u6742\u5ea6 ( \u867d\u7136\u66b4\u529b\u90fd\u80fd\u8fc7 ).\n\t}\n\tinline void Plant ( const int l, const int r ) { // \u683d\u6811, \u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u76f4\u63a5\u63a8\u5e73, \u4e0d\u7136\u4f1a\u628a\u539f\u6765\u6709\u7684\u6811\u7b97\u6210\u6811\u82d7.\n\t\tIT rit = Split ( r + 1 ), lit = Split ( l );\n\t\tfor ( ; lit != rit; ++ lit ) {\n\t\t\tif ( ! lit -> Val ) {\n\t\t\t\tlit -> Val = 2;\n\t\t\t}\n\t\t}\n\t}\n\tinline int Total ( const int l, const int r ) { // \u7edf\u8ba1\u6811\u82d7.\n\t\tint ret = 0;\n\t\tIT rit = Split ( r + 1 ), lit = Split ( l );\n\t\tfor ( ; lit != rit; ++ lit ) ret += ( lit -> Val == 2 ) * ( lit -> r - lit -> l + 1 );\n\t\treturn ret;\n\t}\n} CT;\n\ninline void Work () {\n\tscanf ( \"%d %d\", &L, &N );\n\tCT.Init (); // \u8bb0\u5f97\u521d\u59cb\u5316.\n\tfor ( Int opt, l, r; N --; ) {\n\t\tscanf ( \"%d %d %d\", &opt, &l, &r );\n\t\tif ( opt ) CT.Plant ( l, r );\n\t\telse CT.Cut ( l, r );\n\t}\n\tprintf ( \"%d\\n%d\\n\", CT.Total ( 0, L ), Ans2 );\n}\n\nint main () {\n\tWork ();\n\treturn 0;\n}\n```",
        "postTime": 1574477151,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6c34\u9898\uff0c\u867d\u7136\u662f\u5347\u7ea7\u7248\u7684\uff0c\u4f46\u662f\u5f00\u6570\u7ec4\u6a21\u62df\u5c31\u591f\u4e86\uff0c\u5e76\u4e0d\u9700\u8981\u7528\u5230\u7ebf\u6bb5\u6811\u2026\u2026\n\n```delphi\n\nvar l,n,zs,i,j,s,x,y,z:longint;\n    b:array[0..10001] of 0..3;\nbegin\n    read(l,n);\n    s:=0;\n    zs:=0;\n    fillchar(b,sizeof(b),1);\n    for i:=1 to n do\n    begin\n    read(x,y,z);\n    case x of\n        0:begin\n                    for j:=y to z do\n                    begin\n                            if b[j]=2 then begin dec(s);inc(zs); end;\n                        b[j]:=0\n                end; end;\n                    1:begin\n              for j:=y to z do\n              begin\n                  if b[j]=0 then begin inc(s);\n                  b[j]:=2;            end;\n              end;\n          end;\n    end;\n    end;\n    writeln(s);\n    writeln(zs);\nend.\n\n\n```",
        "postTime": 1437040867,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "### \u3010\u601d\u8def\u3011\n**\u6a21\u62df**\uff0c\u4e00\u5171\u4e24\u79cd\u72b6\u6001\uff0c\u4e00\u4e2a\u662f\u780d\u6811\uff0c\u53e6\u4e00\u4e2a\u662f\u79cd\u6811\u3002\n> 1. \u780d\u6811.\n>   1.\u628a\u8be5\u533a\u95f4\u7684\u6811\u90fd\u780d\u6389,\u5305\u62ec\u5e7c\u82d7\u548c\u6811.\n>   2.\u5982\u679c\u780d\u7684\u662f\u5e7c\u82d7\uff0c\u90a3\u4e48\u8ba1\u6570\u5668\u52a0\u52a0.\n> 2. \u79cd\u6811.\n>   1.\u79cd\u7684\u53ea\u662f\u5e7c\u82d7.\n>   2.\u770b\u4e00\u4e0b\u5982\u679c\u88ab\u780d\u4e86\uff0c\u6807\u8bb0\u4e00\u4e0b\u88ab\u780d\u4e86\u7684\u4e0b\u6807.\n\n\u8bf4\u5b8c\u601d\u8def\u5410\u69fd\u4e00\u4e0b**\u5751\u70b9**\u3002\n- \u7b2c\u4e00\u95ee\u4ed6\u662f\u95ee\u7684\u6811\u82d7\u7684\u4e2a\u6570\uff0c\u6211\u5374\u4e00\u5f00\u59cb\u50bb\u50bb\u7684\u7b97\u6811\u7684\u4e2a\u6570\uff0c\u4e00\u76f4\u51fa8\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u96be\u7684\uff0c\u4f46\u662f\u6ce8\u91ca\u6709\u8bb8\u591a\u6ca1\u7528\u7684\uff0c\u6240\u4ee5\u51c6\u5907\u4e86\u4e24\u4efd\u3002\n### \u6ce8\u91cacode\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n//jud\u662f\u5224\u65ad1\u6216\u80050\uff0c\u5373\u780d\u6811\u8fd8\u662f\u79cd\u6811\uff0cans1\u662f\u5e7c\u82d7\u7684\u4e2a\u6570 \uff0cans2\u662f\u79cd\u4e86\u53c8\u780d\u6389\n\n\u7684\u4e2a\u6570 \nint n,l,jud,ans1=0,x,y,ans2=0;\nint pla[10001],cut[10001],miao[10001]={0};\n//pla=plant\u8868\u793a\u5404\u4e2a\u70b9\u7684\u6811\uff0ccut\u8868\u793a\u5df2\u7ecf\u780d\u4e86\u7684\u6811 \uff0cmiao\u8868\u793a\u6811\u82d7 \nint main()\n{\n\tmemset(pla,1,sizeof pla);//\u521d\u59cb\u5316\u6811\u4e3a1\uff0c\u90fd\u6709 \n\tmemset(cut,0,sizeof cut);//\u521d\u59cb\u5316\u6ca1\u780d\u6811 \n\tscanf(\"%d\",&l);\t//\u5916\u9762\u6811\u7684\u957f\u5ea6 \n\tscanf(\"%d\",&n);\t//\u780d\u6216\u8005\u79cd\u7684\u4e2a\u6570 \n\tfor(int i=1;i<=n;++i) {\n\t\tscanf(\"%d%d%d\",&jud,&x,&y);\n\t\tif(jud==0)\t//\u8981\u780d\u6811\u4e86 \n\t\t\tfor(int j=x;j<=y;++j) {\n\t\t\t\tpla[j]=0;\t//\u4e0d\u7ba1\u4e4b\u524d\u6709\u6ca1\u6709\u6811\uff0c\u90fd\n\n\u780d\u6389\uff0c\u5bf9\u540e\u9762\u7684\u8ba1\u7b97\u6ca1\u6709\u5f71\u54cd \n\t\t\t\tmiao[j]=0;\t//\u6811\u82d7\u4e5f\u780d\u6389 \n\t\t\t\tif(cut[j]==1) {\t//\u8fd9\u4e2a\u6811\u4e4b\u524d\u780d\u8fc7\u4e00\u6b21 \n\t\t\t\t\t++ans2;\t\t//\u7b2c\u4e8c\u4e2a\u8ba1\u6570\u5668\n\n\u5f00\u59cb\u52a0\u52a0 \n\t\t\t\t\tcut[j]=0;\t//\u8fd8\u539f\n\t\t\t\t}\n\t\t\t}\n\t\telse\t//\u79cd\u6811\u4e86 \n\t\t\tfor(int j=x;j<=y;++j) {\n\t\t\t\tif(pla[j]==0) {\t//\u8fd9\u91cc\u88ab\u780d\u4e86 \n\t\t\t\t\tcut[j]=1;\t//\u780d\u6811\u6570\u7ec4\u6807\u8bb0 \n\t\t\t\t\tmiao[j]=1;\t//\u5728\u79cd\u6811\u7684\u8bdd\uff0c\n\n\u79cd\u7684\u53ea\u80fd\u662f\u6811\u82d7 \n\t\t\t\t}\n\t\t\t\tpla[j]=1;\t\t//\u522b\u7ba1\u780d\u6ca1\u780d\uff0c\n\n\u53cd\u6b63\u5c31\u79cd\u4e86 \n\t\t\t}\n\t}\n\tfor(int i=0;i<=l;++i) {\n\t\tif(miao[i]==1)\t//\u627e\u6811\u82d7 \n\t\t\tans1++;\t//\u7b2c\u4e00\u4e2a\u8ba1\u6570\u5668\u52a0\u52a0 \n\t}\n\tprintf(\"%d\\n\",ans1);//\u4e00\u5b9a\u6362\u884c \n\tprintf(\"%d\",ans2);\n\treturn 0;\t//\u7ed3\u675f \n}\n```\n--------**\u7f8e\u4e3d\u7684\u5206\u5272\u7ebf**--------\n### \u65e0\u6ce8\u91cacode\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\nint n,l,jud,ans1=0,x,y,ans2=0;\nint pla[10001],cut[10001],miao[10001]={0};\n\nint main()\n{\n\tmemset(pla,1,sizeof pla); \n\tmemset(cut,0,sizeof cut); \n\tscanf(\"%d\",&l); \n\tscanf(\"%d\",&n); \n\tfor(int i=1;i<=n;++i) {\n\t\tscanf(\"%d%d%d\",&jud,&x,&y);\n\t\tif(jud==0) \n\t\t\tfor(int j=x;j<=y;++j) {\n\t\t\t\tpla[j]=0;\n\t\t\t\tmiao[j]=0;\n\t\t\t\tif(cut[j]==1) {\n\t\t\t\t\t++ans2;\n\t\t\t\t\tcut[j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\telse \n\t\t\tfor(int j=x;j<=y;++j) {\n\t\t\t\tif(pla[j]==0) {\n\t\t\t\t\tcut[j]=1;\n\t\t\t\t\tmiao[j]=1;\n\t\t\t\t}\n\t\t\t\tpla[j]=1;\n\t\t\t}\n\t}\n\tfor(int i=0;i<=l;++i) {\n\t\tif(miao[i]==1) \n\t\t\tans1++; \n\t}\n\tprintf(\"%d\\n\",ans1); \n\tprintf(\"%d\",ans2);\n\treturn 0; \n}\n```",
        "postTime": 1557229064,
        "uid": 186534,
        "name": "Atmizz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u9996\u5148\u8c08\u8bba\u4e00\u4e0b\n#### \u9898\u76ee\u5e38\u89c1\u95ee\u9898\n1.\u9898\u76ee\u95ee\u7684\u662f\u7559\u4e0b\u7684\u6811\u82d7,\u6ce8\u610f\u662f\u6811\u82d7\u4e0d\u662f\u6811\u6728(\u5176\u5b9e\u6211\u4e00\u5f00\u59cb\u5c31\u4ee5\u4e3a\u662f\u6811\u6728)\n\n### \u5475,\u4e0d\u8981\u5728\u610f\u8fd9\u4e9b\u7ec6\u8282\n\n2.\u9898\u76ee\u7b2c2\u95ee\u662f\u6c42\u780d\u6389\u7684\u6811\u82d7,\u4e0d\u662f\u6811\u6728!(\u8981\u6ce8\u610f,\u6211\u4f1a\u5f3a\u8c03\u4e00\u4e0b\u7684)\n\n\u89e3\u51b3\u4e86\u5e38\u89c1\u95ee\u9898\u4ee5\u540e,\u5c31\u8bf4\u4e00\u4e0b\u6211\u7684\u89e3\u9898\u601d\u8def\n\n------------\n\n### 1.\u5c31\u4e09\u79cd\u60c5\u51b5:\u6811\u6728(\u4e00\u5f00\u59cb\u5c31\u6709),\u5751(\u5c31\u662f\u6811\u6728\u88ab\u780d\u4e86),\u6811\u82d7(\u780d\u4e86\u6811\u53c8\u79cd\u7684)\n\n\u627f\u8ba4\u5427,\u5f88\u7b80\u5355\u4e0d\u662f\u5417?\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\nusing namespace std;   //l<=10000,n<=100 \u6570\u636e\u8303\u56f4......\u989d...... \nint a,b,c,l,n,sm[20000]={0},s=0,z=0;//l:\u6811\u6728\u68f5\u6570,n:\u780d\u4f10(\u6216\u79cd\u690d)\u6b21\u6570,sm[20000]:\u6811\u6728\u60c5\u51b5{0\u4ee3\u8868\u6811\u6728,1\u4ee3\u8868\u5751,2\u4ee3\u8868\u6811\u82d7},s:\u6811\u82d7\u68f5\u6570,z:\u6811\u82d7\u88ab\u780d\u4f10\u68f5\u6570 \nint main()\n{\n\tcin>>l>>n;//\u8f93\u5165\u6811\u6728\u68f5\u6570\u548c\u79cd\u690d(\u6216\u780d\u4f10)\u6b21\u6570 \n\tfor(int i=1;i<=n;i++)//\u4ece\u7b2c1\u6b21\u5230\u7b2cn\u6b21 \n```\n------------\n\u4e3e\u4e2a\u4f8b\u5b50(\u6837\u4f8b1):\n\n\u9996\u5148\u90fd\u662f\u6811(\u5982\u4e0b)\n\n0 0 0 0 0 0 0 0 0 0 0\n\n\u780d2\u20146\u68f5\u6811\n0 0 1 1 1 1 1 0 0 0 0\n\n\u79cd1\u20148\u68f5\u6811\n0 0 2 2 2 2 2 0 0 0 0\n\n\u780d5\u20147\u68f5\u6811\n0 0 2 2 2 1 1 1 0 0 0\n\n\u7b54\u6848\u5c31\u663e\u800c\u6613\u89c1\u4e86,\u54c8\n\n### 2.\u8282\u7701\u65f6\u95f4(\u8fb9\u8f93\u5165\u8fb9\u8fd0\u7b97)\n\n------------\n```\n\t{\n\t\tcin>>a>>b>>c;//a:\u79cd\u690d\u6216\u780d\u4f10{0\u4ee3\u8868\u780d\u4f10,1\u4ee3\u8868\u79cd\u690d},b:\u8d77\u59cb\u4f4d\u7f6e,c:\u7ec8\u70b9\u4f4d\u7f6e \n\t\tif(a==1)//\u5982\u679c\u662f\u79cd\u690d,\u90a3\u4e48...... \n\t\t{\n\t\t\tfor(int j=b;j<=c;j++)//\u4ece\u7b2cb\u68f5\u6811\u5230\u7b2cc\u68f5\u6570 \n\t\t\t    if(sm[j]==1)//\u5982\u679c\u8fd9\u91cc\u662f\u4e2a\u5751 \n\t\t\t\t   sm[j]=2;//\u90a3\u4e48\u79cd\u68f5\u6811\u82d7 \n\t\t}\n\t\telse if(a==0)//\u5982\u679c\u662f\u780d\u4f10,\u90a3\u4e48...... \n\t\t{\n\t\t\tfor(int j=b;j<=c;j++)//\u4ece\u7b2cb\u68f5\u6811\u5230\u7b2cc\u68f5\u6811 \n\t\t\t{\n\t\t\t\tif(sm[j]==2)z++;//\u5982\u679c\u8fd9\u91cc\u662f\u68f5\u6811\u82d7,\u90a3\u4e48\u6811\u82d7\u88ab\u780d\u4f10\u6570+1 \n\t\t\t\tsm[j]=1;//\u8fd9\u91cc\u53d8\u6210\u5751 \n\t\t\t}\n\t\t}\n\t}//\u8fd9\u91cc\u7ee7\u4e0a\u4e00\u4e2afor\u5faa\u73af\n\tfor(int i=0;i<=l;i++)//\u4ece\u7b2c1\u68f5\u6570\u5230\u7b2cl+1\u68f5\u6811 \n\t    if(sm[i]==2)//\u5982\u679c\u7b2ci\u4e2a\u5730\u65b9\u662f\u6811\u82d7,\u90a3\u4e48...... \n\t       s++;//\u6811\u82d7\u68f5\u6811+1 \n\tcout<<s<<endl<<z;//\u8f93\u51fa\u6811\u82d7\u68f5\u6570\u548c\u6811\u82d7\u88ab\u780d\u4f10\u68f5\u6570 \n\treturn 0;\n}\n```\n------------\n## *\u518d\u6b21\u63d0\u9192\u7559\u4e0b\u7684\u662f\u6811\u82d7\u4e0d\u662f\u6811\u6728\uff01\n## *\u518d\u6b21\u63d0\u9192\u7559\u4e0b\u7684\u662f\u6811\u82d7\u4e0d\u662f\u6811\u6728\uff01\n## *\u518d\u6b21\u63d0\u9192\u7559\u4e0b\u7684\u662f\u6811\u82d7\u4e0d\u662f\u6811\u6728\uff01(\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u4fbf)",
        "postTime": 1566976808,
        "uid": 220078,
        "name": "Gao_Shang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "# \u4ee3\u7801\u601d\u8def\n**\u548cchen_zhe\u5927\u4f6c\u7684\u5dee\u4e0d\u591a\uff0c\u770b\u5230\u9898\u76ee\u5c31\u60f3\u5230\u601d\u8def\u4e86\uff1a\u5c31\u662f\u7ebf\u6bb5\u6811\u561b!([\u8fd9\u5c31\u662f\u7ebf\u6bb5\u6811](https://www.cnblogs.com/null00/archive/2012/04/22/2464583.html))**\n**\uff08\u548cchen_zhe\u5927\u4f6c\u7684\u533a\u522b\u5c31\u662f\u628a\u64cd\u4f5c\u7ed9\u6574\u5408\u4e86\u4e00\u4e0b\uff0c\u8ba9\u7801\u91cf ~~\u53ef\u4ee5\u63a5\u53d7~~ \u66f4\u53ef\u89c2\u4e86\u4e9b\uff09**\n(\u6807\u9898\u884c\u5c31\u56db\u4e2a\u5b57\u4e86\uff0c\u6c42\u8fc7\u4e86\u5427)\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define N 10010\nusing namespace std;\nstruct tree\n{\n\tint l,r,cover;\n   tree(){cover=1;]//\u6784\u9020\u51fd\u6570\n}T[N<<2];//\u8981\u5f004\u500d\u7a7a\u95f4\u9884\u9632RE\nint n,m,ans1,ans2;\nvoid build(int i,int l,int r)//\u987e\u540d\u601d\u4e49-\u5efa\u6811\n{\n\tT[i].l=l;T[i].r=r;\n\tif(l==r) return;\n\tint mid=l+r>>1;\n\tbuild(i<<1,l,mid);\n\tbuild(i<<1|1,mid+1,r);\n}\nvoid Cut(int i,int l,int r,int b)//b\u8868\u793a\u8fdb\u884c\u7684\u64cd\u4f5c 0\u62d4 1\u79cd\n{\n\tint mid=(T[i].l+T[i].r)>>1;//\u4f4d\u8fd0\u7b97\u5361\u5e38\n\tif(T[i].cover!=1&&T[i].cover!=-1) T[i<<1].cover=T[i<<1|1].cover=T[i].cover;//\u7ee7\u627f\u72b6\u6001\n\tif(T[i].l==l&&T[i].r==r)\n\t{\n\t\tif(T[i].cover==-1)//\u9996\u5148\u5982\u679c\u4e0d\u53ef\u4ee5\u4e00\u8d77\u5904\u7406,\u5c31\u5f80\u4e0b\u5904\u7406\n\t\t{\n\t\t\tif(!b) T[i].cover=0;//\u5982\u679c\u662f\u79cd\u690d\u7684\u8bdd\u4e0d\u53ef\u4ee5=2(\u5f53\u7136\u4e5f\u4e0d\u53ef\u4ee5=0)\n\t\t\tCut(i<<1,l,l+r>>1,b);//\u5f80\u4e0b\u5904\u7406\n\t\t\tCut(i<<1|1,(l+r>>1)+1,r,b);\n\t\t\treturn;//\u7ed3\u675f\u51fd\u6570\u4ee5\u514d\u51fa\u9519\n\t\t}\n\t\tif(!b)//\u5224\u65ad\u64cd\u4f5c\n\t\t{\n\t\t\tif(T[i].cover<=1)//\u780d\u6811\u7684\u65f6\u5019\u5982\u679c\u6ca1\u6811\u6216\u8005\u6ca1\u6811\u82d7\u780d\u5b8c\u5c31\u53ea\u5269\u6ca1\u6811\u4e00\u4e2a\u7ed3\u679c\n\t\t\t{\n\t\t\t\tT[i].cover=0;//\u6811\u6e05\u7a7a\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(T[i].cover==2)//\u6709\u6811\u82d7\n\t\t\t{\n\t\t\t\tT[i].cover=0;//\u6811\u6e05\u7a7a\n\t\t\t\tans1+=T[i].r-T[i].l+1;//\u7d2f\u52a0\u62d4\u6389\u7684\u6811\u82d7\n\t\t\t\tans2-=(T[i].r-T[i].l+1);//\u8bb0\u5f55\u5269\u4e0b\u7684\u6811\u82d7\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse//\u79cd\u6811\u64cd\u4f5c\n\t\t{\n\t\t\tif(T[i].cover>=1) return;//\u5982\u679c\u6709\u6811(\u82d7)\u5c31\u4e0d\u7528\u64cd\u4f5c\n\t\t\tif(T[i].cover==0)//\u5982\u679c\u6ca1\u6709\u6811\n\t\t\t{\n\t\t\t\tT[i].cover=2;//\u79cd\u4e0a\u6811\n\t\t\t\tans2+=(T[i].r-T[i].l)+1;//\u8bb0\u5f55\u6709\u591a\u5c11\u6811\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(r<=mid) Cut(i<<1,l,r,b);//\u5982\u679c\u4e0d\u5339\u914d\u8303\u56f4\u5c31\u5411\u4e0b\u67e5\u8be2\u64cd\u4f5c\n\t\telse \n\t\t{\n\t\t\tif(l>mid) Cut(i<<1|1,l,r,b);\n\t\t\telse\n\t\t\t{\n\t\t\t\tCut(i<<1,l,mid,b);\n\t\t\t\tCut(i<<1|1,mid+1,r,b);\n\t\t\t}\n\t\t}\n\t}\n\tif(T[i<<1].cover==T[i<<1|1].cover) T[i].cover=T[i<<1].cover;\n\telse T[i].cover=-1;//\u5904\u7406\u5b8c\u4e4b\u540e\u770b\u72b6\u6001(\u542c\u53d6\u81ea\u5df1\u513f\u5b50\u7684\u610f\u89c1)\n}\nint main()\n{\n\tcin >> n >> m;\n\tbuild(1,0,n);//\u5efa\u6811(\u8bb0\u5f97\u7f16\u53f7\u91cc\u67090,\u6211RE\u4e86\u4e4b\u540e\u8001\u4e45\u624d\u53d1\u73b0)\n\tfor(int i=1;i<=m;i++)//\u8fdb\u884c\u64cd\u4f5c\n\t{\n\t\tbool b;\n\t\tint l,r;\n\t\tif(l>r) swap(l,r);//\u9884\u9632\u6bd2\u7624\u6570\u636e\n\t\tcin >> b >> l >> r;\n\t\tCut(1,l,r,b);//\u8fdb\u884c\u780d/\u79cd\u6811\u64cd\u4f5c\n\t}\n\tcout << ans2 << '\\n' << ans1;//\u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01\n\treturn 0;\n}\n\n```\n**\uff08\u7801\u98ce\u6709\u70b9\u5947\u7279\u5927\u5bb6\u5fcd\u4e00\u4e0b\uff09**",
        "postTime": 1574782263,
        "uid": 172516,
        "name": "empty_zhm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u7528\u7ebf\u6bb5\u6811\u7a0b\u5e8f. \u7a0b\u5e8f\u91cc\u9762\u6709\u5f88\u591a\u6ce8\u91ca, \u53e6\u5916\u53d8\u91cf\u540d\u4e5f\u4e0d\u662f\u80e1\u4e71\u8d77\u7684, \u5b66\u8fc7\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u5e94\u8be5\u80fd\u770b\u61c2.\n\ncnt \u8868\u793a\u780d\u6389\u7684\u6811\u82d7\u6570\u91cf.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint L, N;\nint cnt = 0;\nstruct SegTreeNode {\n    int left = -1, right = -1; //\u533a\u95f4\u7684\u5de6\u53f3\u8fb9\u754c(\u90fd\u662f\u95ed\u533a\u95f4)\n    int num_big = 0; //\u533a\u95f4\u5185\u5927\u6811\u7684\u6570\u91cf\n    int num_small = 0; //\u533a\u95f4\u5185\u6811\u82d7\u7684\u6570\u91cf\n    int num_ground = 0; //\u533a\u95f4\u5185\u7a7a\u5730\u7684\u6570\u91cf\n    bool iscut = false;\n    bool isadd = false;\n}SegTree[40000];\nvoid build(int root) {\n    // \u521d\u59cb\u5316\u7ebf\u6bb5\u6811, \u81ea\u4e0a\u800c\u4e0b\u8d4b\u503c, \u6839\u90e8\u7684\u4e0b\u6807\u4e3a1\n    SegTreeNode& self = SegTree[root];\n    if (root == 1) {\n        self.left = 0;\n        self.right = L;\n        self.num_big = self.right - self.left + 1;\n    }\n    else {\n        SegTreeNode& father = SegTree[root / 2];\n        int mid = (father.left + father.right) / 2;\n        if (root == root / 2 * 2) {\n            //\u81ea\u5df1\u662f\u7236\u4eb2\u7684\u5de6\u513f\u5b50\n            self.left = father.left;\n            self.right = mid;\n            self.num_big = self.right - self.left + 1;\n        }\n        else {\n            //\u81ea\u5df1\u662f\u7236\u4eb2\u7684\u53f3\u513f\u5b50\n            self.left = mid + 1;\n            self.right = father.right;\n            self.num_big = self.right - self.left + 1;\n        }\n    }\n    if (self.right > self.left) {\n        build(2 * root);\n        build(2 * root + 1);\n    }\n}\nvoid cut(SegTreeNode& self) {\n    self.num_big = 0;\n    self.num_small = 0;\n    self.num_ground = self.right - self.left + 1;\n    self.iscut = true;\n    self.isadd = false;\n}\nvoid add(SegTreeNode& self) {\n    //self.num_big \u4e0d\u53d8\n    self.num_small = self.right - self.left + 1 - self.num_big;\n    self.num_ground = 0;\n    self.iscut = false;\n    self.isadd = true;\n}\nvoid pushdown(int root, int type) {\n    //\u5c06\u6807\u8bb0\u547d\u4ee4pushdown\n    // type==0 \u8868\u793a\u780d\u6811, type==1 \u8868\u793a\u79cd\u6811\n    SegTreeNode& self = SegTree[root];\n    if (self.left == self.right) {\n        return;\n    }\n    SegTreeNode& leftchild = SegTree[2 * root];\n    SegTreeNode& rightchild = SegTree[2 * root + 1];\n    if (type == 0) {\n        if (leftchild.isadd) pushdown(2 * root, 1);\n        cut(leftchild);\n        if (rightchild.isadd) pushdown(2 * root + 1, 1);\n        cut(rightchild);\n    }\n    else {\n        if (leftchild.iscut) pushdown(2 * root, 0);\n        add(leftchild);\n        if (rightchild.iscut) pushdown(2 * root + 1, 0);\n        add(rightchild);\n    }\n}\nvoid cut_tree(int root, int left, int right) {\n    //\u780d\u6811\n    SegTreeNode& self = SegTree[root];\n    int num_small_old;\n    if (root == 1) {\n        num_small_old = self.num_small;\n    }\n    if (self.right < left || self.left > right) {\n        //\u65e0\u4ea4\u96c6\n        return;\n    }\n    if (self.left >= left && self.right <= right) {\n        //\u8282\u70b9\u8303\u56f4\u5305\u542b\u5728\u780d\u6811\u8303\u56f4\u4e4b\u5185\n        if (self.isadd) pushdown(root, 1);\n        cut(self);\n        if (root == 1) {\n            if (num_small_old > self.num_small) {\n                cnt += num_small_old - self.num_small;\n            }\n        }\n        return;\n    }\n    // \u6267\u884c\u5230\u8fd9\u91cc\u7684, \u80af\u5b9a\u4e0d\u662f\u53f6\u8282\u70b9\n    if (self.isadd) pushdown(root, 1);\n    if (self.iscut) pushdown(root, 0);\n    self.isadd = false;\n    self.iscut = false;\n    cut_tree(2 * root, left, right);\n    cut_tree(2 * root + 1, left, right);\n    SegTreeNode& leftchild = SegTree[2 * root];\n    SegTreeNode& rightchild = SegTree[2 * root + 1];\n    self.num_big = leftchild.num_big + rightchild.num_big;\n    self.num_small = leftchild.num_small + rightchild.num_small;\n    self.num_ground = leftchild.num_ground + rightchild.num_ground;\n    if (root == 1) {\n        if (num_small_old > self.num_small) {\n            cnt += num_small_old - self.num_small;\n        }\n    }\n}\nvoid add_tree(int root, int left, int right) {\n    //\u79cd\u6811\n    SegTreeNode& self = SegTree[root];\n    if (self.right < left || self.left > right) {\n        //\u65e0\u4ea4\u96c6\n        return;\n    }\n    if (self.left >= left && self.right <= right) {\n        //\u8282\u70b9\u8303\u56f4\u5305\u542b\u5728\u79cd\u6811\u8303\u56f4\u4e4b\u5185\n        if (self.iscut) pushdown(root, 0);\n        add(self);\n        return;\n    }\n    // \u6267\u884c\u5230\u8fd9\u91cc\u7684, \u80af\u5b9a\u4e0d\u662f\u53f6\u8282\u70b9\n    if (self.isadd) pushdown(root, 1);\n    if (self.iscut) pushdown(root, 0);\n    self.isadd = false;\n    self.iscut = false;\n    add_tree(2 * root, left, right);\n    add_tree(2 * root + 1, left, right);\n    SegTreeNode& leftchild = SegTree[2 * root];\n    SegTreeNode& rightchild = SegTree[2 * root + 1];\n    self.num_big = leftchild.num_big + rightchild.num_big;\n    self.num_small = leftchild.num_small + rightchild.num_small;\n    self.num_ground = leftchild.num_ground + rightchild.num_ground;\n}\nint main() {\n    freopen(\"in.txt\", \"r\", stdin);\n    freopen(\"out.txt\", \"w\", stdout);\n    scanf(\"%d%d\", &L, &N);\n    build(1);\n    int type, left, right;\n    for (int i = 0;i < N;i++) {\n        scanf(\"%d%d%d\", &type, &left, &right);\n        if (type == 0) cut_tree(1, left, right);\n        else add_tree(1, left, right);\n    }\n    cout << SegTree[1].num_small << endl;\n    cout << cnt << endl;\n    return 0;\n}\n```",
        "postTime": 1506567565,
        "uid": 58214,
        "name": "li1127217ye",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "# \u6ce8\u610f\u6811\u82d7\u4e0d\u4f1a\u957f\u5927\n\n# \u800c\u4e14\u662f\u4ece0\u5230w\u7684\n\n~~\u8fd9\u4e24\u4e2a\u5751\u80fd\u6454\u6b7b\u4eba\uff0c\u6211WA\u4e863\u6b21\u624dAC~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,w,i,j,a,b,c,ans1=0,ans2=0;//w\u662f\u957f\u5ea6\nint h[10001];//\u7528\u6765\u5b58\u50a8\u662f\u5751\u8fd8\u662f\u6811\u82d7\u8fd8\u662f\u5927\u6811\nint main()\n{\n    scanf(\"%d%d\",&w,&n);\n\tfor(i=0;i<=w;i++)h[i]=1;//\u7531\u4e8ememset(h,1,sizeof(h))\u7528\u4e0d\u4e86(\u662f\u6211\u7535\u8111\u574f\u4e86\u5427)\uff0c\u6240\u4ee5\u7528for\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);//a\u4e3a\u72b6\u6001\uff0cb\u548cc\u4e3a\u533a\u95f4\n        if(a==1)//\u79cd\u6811\n        {\n            for(j=b;j<=c;j++)\n            if(h[j]==0)//\u5982\u679c\u662f\u5751\u5c31\u79cd\u6811\u82d7\uff0c\u5176\u4ed6\u8df3\u8fc7\n            h[j]=2;\n        }\n        else//\u780d\u6811\n        for(j=b;j<=c;j++)\n        {\n            if(h[j]==2)//\u780d\u6389\u7684\u662f\u6811\u82d7\u5c31++\uff0c\u518d\u8d4b\u4e3a\u5751\n            ans2++;\n            h[j]=0;\n        }\n    }\n    for(i=0;i<=w;i++)\n    if(h[i]==2)//\u627e\u6811\u82d7\u7684\u4e2a\u6570\n    ans1++;\n    printf(\"%d\\n%d\\n\",ans1,ans2);\n    return 0;\n}\n```\n\n\u5176\u5b9e\u9898\u76ee\u770b\u4ed4\u7ec6\u5c31\u597d\u4e86\uff0c\u5b9e\u73b0\u5e76\u4e0d\u96be\u3002\u3002\u3002\n\n\u795d\u5927\u5bb6while(1)\n\t\t\n         CSP_score++,CSP_rp++;",
        "postTime": 1571138429,
        "uid": 196526,
        "name": "\u9eef\u9ed1\u306e\u591c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u672c\u9898\u76f8\u5bf9\u4e8eP1047\u6765\u8bf4\uff0c\u591a\u52a0\u4e86\u5c0f\u6811\u82d7\u4ee5\u53ca\u5bf9\u5c0f\u6811\u82d7\u88ab\u62d4\u53bb\u7684\u5224\u65ad\uff0c\u4f46\u57fa\u672c\u601d\u8def\u8fd8\u662f\u7c7b\u4f3c\u4e8e\u6876\u3002\u5173\u952e\u662f\u533a\u5206\u5927\u6811\uff0c\u5c0f\u6811\u82d7\uff0c\u5c0f\u6811\u82d7\u53c8\u88ab\u62d4\u53bb\n\n\u9644\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\nusing namespace std; // _\u5934\u6587\u4ef6\u8fd9\u4e9b\u5c31\u591f_ \nint l,m,ss[10001],x,y,z,k,zb;\nint main(){\n\tcin>>l>>m; // _\u7b2c\u4e00\u884c\u7684\u8f93\u5165_ \n\tfor(int j=0;j<=l;j++)\n\t\tss[j]=1;\n        // _\u521d\u59cb\u5316\u4e3a1\uff0c\u5373\u5927\u6811\u4e3a1_ \n\tfor(int i=0;i<m;i++){\n\t\tcin>>z>>x>>y;\n        //for\u5faa\u73af\u8fb9\u8bfb\u5165\u8fb9\u8fdb\u884c\uff0c\u7b2c2\u6b21\u76f4\u63a5\u8986\u76d6\uff0c\u4e0d\u7528\u8003\u8651\u91cd\u590d\n\t\tif(z==0){\n\t\t\tfor(int j=x;j<=y;j++){\n\t\t\t\tif(ss[j]==-1) zb++;//**\u5982\u679c\u4f4d\u7f6e\u4e0a\u662f\u5c0f\u6811\u82d7\uff0c\u5e76\u4e14\u8981\u88ab\u780d\u53bb\uff0czb++\uff1b**\n\t\t\tss[j]=0;\n\t\t\t}\n\t// _\u5982\u679c\u5f97\u5230\u7684\u7b2c\u4e00\u4e2a\u6570\u662f0\uff0c\u5c31\u628a\u6811\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u4e3a0\uff0c\u5373 \u5751_ \n\t\t}\n\t\tif(z==1){\n\t\t\tfor(int j=x;j<=y;j++){\n\t\t\t\tif(ss[j]!=1) ss[j]=-1;\n\t\t\t}\n\t// _\u5982\u679c\u5f97\u5230\u7684\u7b2c\u4e00\u4e2a\u6570\u662f1\uff0c\u5e76\u4e14\u539f\u4f4d\u7f6e\u6ca1\u6709\u5927\u6811\uff0c\u5c31\u628a\u6811\u7684\u4f4d\u7f6e\u521d\u59cb\u5316\u4e3a-1\uff0c\u5373\u628a \u5751\u53d8\u6210\u5c0f\u6811\u82d7_ \n\t\t}\n\t}\n\tfor(int i=0;i<=l;i++){\n\t\tif(ss[i]==-1) k++;\n\t}//\u6570\u5c0f\u6811\u82d7\u7684\u4e2a\u6570\n\tcout<<k<<zb;\n\treturn 0;\n}\n```\n",
        "postTime": 1552179742,
        "uid": 169651,
        "name": "\u674e\u8fbe\u5eb7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u770b\u5230\u524d\u9762CZ\u5927\u4f6c\u7528\u7ebf\u6bb5\u6811\uff0c\u8fd8\u662f\u86ee\u4f69\u670d\uff0c\u4e0d\u8fc7\u6211\u8fd9\u849f\u84bb\u8fd8\u662f\u7b80\u5355\u70b9\uff0c\u6807\u8bb0\u6570\u7ec4\u5c31\u597d\u4e86.\u8fd9\u9053\u9898\u548c\u6ca1\u5347\u7ea7\u7248\u7684\u6821\u95e8\u5916\u7684\u4e66\u6ca1\u6709\u5f88\u5927\u5dee\u522b\uff0c\u4ee3\u7801\u91cc\u6709\u8be6\u89e3\uff0c\u81ea\u5df1\u770b\u770b\u5427\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint forest[1000010]={0},i,j;//forest\u662f\u6807\u8bb0\u6570\u7ec4 \nint t,p,buf;//\u4e4b\u6240\u4ee5\u6807\u8bb0\u6570\u7ec4\u4e0d\u7528bool\u5b9a\u4e49\u662f\u522b\u6709\u7528\u610f\u7684 \nint l,n,sum=0,cur=0;//\u4e24\u4e2a\u8ba1\u6570 \nint main(){\n\tcin>>l>>n;//\u8bfb\u5165 \n\tl++;//\u5171\u6709l+1\u4e2a\u6811 \n\tfor(i=0;i<=l;i++)//\u7ebf\u6bb5\u521d\u59cb\u5316 \n\tforest[i]=1;\n\tfor(i=1;i<=n;i++){ \n\t\tcin>>buf>>t>>p;//\u8bfb\u5165\u4e00\u4e2a\u5904\u7406\u4e00\u4e2a\uff0c\u7701\u7a7a\u95f4\n\t\tif(buf==0)//\u5982\u679c\u662f\u780d\u6811 \n\t\tfor(j=t;j<=p;j++){//\u6807\u8bb0\u7ebf\u6bb5 \n\t\t\tif(forest[j]==2)//\u5982\u679c\u8fd9\u68f5\u6811\u5df2\u7ecf\u88ab\u79cd\u690d\u8fc7\u4e00\u6b21\u4e86 \n\t\t\t\tsum++;//\u8ba1\u6570 \n\t\t\t\tforest[j]=3;//\u518d\u780d\u6389 \n\t\t}\n\t\telse{//\u5426\u5219\u662f\u79cd\u6811 \n\t\t\tfor(j=t;j<=p;j++)//\u6807\u8bb0\u7ebf\u6bb5 \n\t\t\tif(forest[j]==3)//\u5982\u679c\u5b83\u88ab\u780d\u6389\u4e86 \n\t\t\tforest[j]=2;//\u79cd\u4e0a \n\t\t}\n\t}\n\tfor(i=0;i<=l;i++)//\u7edf\u8ba1\u6574\u4e2a\u7ebf\u6bb5\u4e2d \n\tif(forest[i]==2)//\u88ab\u79cd\u4e0a\u4e86\u51e0\u68f5\u6811 \n\tcur++;//\u8ba1\u6570 \n\tcout<<cur<<endl<<sum;//\u8f93\u51fa\n\t//\u7279\u522b\u5751\u7239\uff0c\u8fd9\u91cc\u4e00\u5b9a\u8981\u8f93\u51fa\u6362\u884c\u7b26\uff0c\u7a7a\u683c\u5565\u5b50\u7684\u4e0d\u884c\n\t//\u6211\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u88ab\u5361\u4e863\u6b21\uff0c\u6362\u884c\u7b26\uff01\u6362\u884c\u7b26\uff01\u4e0d\u662f\u7a7a\u683c\uff01 \n}\n```",
        "postTime": 1531967014,
        "uid": 85683,
        "name": "\u65e0\u989cing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u6c34\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u901a\u8fc7\u7387\u8fd9\u4e48\u4f4e\uff08~~\u6211\u592a\u849f\u4e86~~\uff09\n\n\n\u6211\u89c9\u5f97\uff0c\u8fd9\u9898\u7528\u6570\u7ec4\u505a\u5c31\u4e0d\u597d\u73a9\u4e86\uff08\u6ed1\u7a3d\uff09\uff0c\u6211\u51b3\u5b9a\u7528\u7ed3\u6784\u4f53\u6c34\u4e00\u53d1\n\n\u56e0\u4e3a\u8fd9\u9898\u6570\u636e\u6c34\uff0c\u6240\u4ee5\u66b4\u529b\u6a21\u62df\u6bcf\u4e00\u4e2a\u6811\u5751\u7684\u8bdd\u662f\u53ef\u4ee5\u51fa\u5947\u8ff9\u7684\n\n\u4e0a\u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint sum1,sum2,a,b,c,d,e;\nstruct node{\n    bool is_littletree;//\u6811\u82d7\n    bool is_tree;//\u6811\n}tree[100000];\ninline void Init(){\n    scanf(\"%d%d\",&a,&b);\n    for(int x=0;x<=a;x++)tree[x].is_tree=1;//\u6bcf\u4e00\u4e2a\u5751\u4e0a\u90fd\u6709\u5927\u6811\n       return;}\ninline void Work(){\n    for(int x=1;x<=b;x++){\n        scanf(\"%d%d%d\",&c,&d,&e);\n        if(c==1){\n            for(int y=d;y<=e;y++){\n                if(tree[y].is_tree==0){//\u5982\u679c\u6ca1\u6709\u5927\u6811\uff0c\u5c31\u683d\u6811\u82d7\n                    tree[y].is_littletree=1;\n                }\n            }\n        }\n        else{\n            for(int y=d;y<=e;y++){\n                if(tree[y].is_tree==1)tree[y].is_tree=0;\n                else{\n                    if(tree[y].is_littletree==1){/*\u8fd9\u4e2a\u5730\u65b9\u6709\u70b9\u5751\n                    \uff0c\u6211\u539f\u6765\u662f\u628a\u7edf\u8ba1\u653e\u5728\u6700\u540e\u7684\uff0c\u540e\u6765\u53d1\u73b0\u5e94\u8be5\u7edf\u8ba1\u62d4\u6389\u7684\u6811\u82d7\n                    \u800c\u4e0d\u662f\u62d4\u6389\u6811\u82d7\u7684\u6811\u5751\uff0c\u8fd9\u4e24\u8005\u662f\u6709\u533a\u522b\u7684*/\n                        sum2++;\n                        tree[y].is_littletree=0;\n                    }\n                }\n            }\n        }\n    }\n       return ;}\ninline void Export(){\n    for(int x=0;x<=a;x++){\n        if(tree[x].is_littletree==1)sum1++;\n    }\n    printf(\"%d\\n%d\",sum1,sum2);//\u8f93\u51fa\n       return;}\nint main()\n{//\u534e\u4e3d\u7684\u4e3b\u51fd\u6570\nInit();\nWork();\nExport();\n    return 0;\n}\n\n```\n\n",
        "postTime": 1520746473,
        "uid": 59566,
        "name": "niHaorn",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "1\u8868\u793a\u6811\uff0c0\u8868\u793a\u7a7a\uff0c2\u8868\u793a\u6811\u82d7\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint rd[10001];\nint main()\n{\n    int l,n,ans=0,ans1=0;//ans1\u5224\u65ad\u6811\u82d7\u88ab\u780d\u6389\uff0cans\u5224\u65ad\u5269\u4f59\u6811\u82d7\n    cin>>l>>n;\n    for(int i=0;i<=l;i++) rd[i]=1;//\u521d\u59cb\u5316\uff0c\u628al\u4ee5\u5185\u7684\u90fd\u8bbe\u4e3a1\uff0c0\u4e5f\u8981\n    for(int i=0;i<n;i++)\n    {\n        int x,c,d;\n        cin>>x>>c>>d;\n        if(x)//\u5224\u65ad\u64cd\u4f5c\n        {\n            for(int i=c;i<=d;i++)\n            {\n                if(!rd[i]) rd[i]=2;//\u79cd\u6811\u82d7\n            }\n        }\n        else\n        {\n            for(int i=c;i<=d;i++)\n            {\n                if(rd[i]==2) ans1++;\n                rd[i]=0;\n            }\n        }\n    }\n    for(int i=0;i<=l;i++)\n    {\n        if(rd[i]==2) ans++;//\u6811\u82d7\u603b\u6570\n    }\n    cout<<ans<<'\\n'<<ans1<<endl;\n    return 0;\n}\n```",
        "postTime": 1501986668,
        "uid": 51704,
        "name": "\u900d\u9065__\u5929\u8d50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6ca1\u4ec0\u4e48\u7279\u6b8a\u6280\u5de7\n\n\u5c31\u662f\u7eaf\u6a21\u62df\n\n\u6ce8\u610f**0\u8fd9\u4e2a\u70b9\u662f\u6709\u6811\u7684**\uff0c\u6211\u5728\u8fd9wa\u4e863\u6b21\u6ca1\u67e5\u51fa\u6765QAQ\n\n\u8fd8\u6709\u8981**\u6ce8\u610f\u603b\u957f\u5ea6**\uff0c\u79cd\u6811\u4e0d\u8981\u79cd\u8d85\u4e86\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nint n,ll,ans,S;\nint l[40001];\nint a,b,c;\nint main(){\n    cin>>ll>>n;\n    for(int i=0;i<=ll;i++)l[i]=1;\n    for(int i=1;i<=n;i++){\n     cin>>a>>b>>c;\n     if(a==0){\n      for(int i=b;i<=c&&i<=ll;i++)\n       if(l[i]==2)ans++,l[i]=0,S--;\n       else l[i]=0;\n     }\n     if(a==1) {\n        for(int i=b;i<=c&&i<=ll;i++)\n        if(l[i]==0)S++,l[i]=2;\n          }\n    }\n    cout<<S<<endl<<ans;\n    return 0;\n}\n```",
        "postTime": 1493983520,
        "uid": 24570,
        "name": "s_a_b_e_r",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u5347\u7ea7\u7248\u7684\u554a\u3002\u3002\u7136\u800c\u8fd8\u662f\u6a21\u62df\n\n\u4f46\u662f\u6211\u6ca1\u770b\u9898\u610f\u786c\u662f\u63d0\u4ea4\u4e86\u5dee\u4e0d\u591a10\u6b21\u624d\u8fc7\u3002\u3002\u6211\u628a\u7559\u4e0b\u7684\u6811\u82d7\u6570\u770b\u6210\u4e86\u5269\u4e0b\u7684\u6811\u7684\u6570\u76ee\uff0c\u5bfc\u81f4\u4e00\u76f4\u63d0\u4ea4\u4ee3\u7801\u90fd\u8fc7\u4e0d\u4e86\n\n\u4e00\u4e2a\u4e00\u4f4d\u6570\u7ec4\uff0c\u548c\u4e4b\u524d\u90a3\u4e2a\u4e00\u6837\uff0c\u4e0d\u540c\u7684\u5730\u65b9\u662f\u6316\u8d70\u7684\u5730\u65b9\u6807\u8bb0\u4e3a0\uff0c\u800c\u6811\u82d7\u7684\u5730\u65b9\u6807\u8bb0\u4e3a2\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5faa\u73af\u7edf\u8ba1\u4e86\uff08\u6570\u636e\u5f31\uff09\n\n\u770b\u6e05\u9898\u9762\uff01\u770b\u6e05\u9898\u9762\uff01\u770b\u6e05\u9898\u9762\uff01\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\u3002\u3002\n\n\n\n        \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint all[10000+10] = {0},n,l,pd,L,R,ans=0,ans2=0;\nint main()\n{\n    memset(all,1,sizeof(all));\n    cin>>l>>n;\n    for(int i = 1;i<=n;i++)\n    {\n        cin>>pd>>L>>R;\n        if(pd==0) \n            for(int j = L;j<=R;j++)\n               if(all[j]==2) {ans2++; all[j] = 0;}\n               else all[j] = 0;\n        if(pd==1){\n            for(int j = L;j<=R;j++){\n                 if(all[j]==0) all[j] = 2; \n            } \n        } \n    }\n    for(int i = 0;i<=l;i++) if(all[i]==2) ans++;\n    cout<<ans<<endl<<ans2<<endl;\n    return 0;\n}\n```",
        "postTime": 1486036345,
        "uid": 36129,
        "name": "Decide",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u975e\u5e38\u7b80\u5355\u7684\u6a21\u62df\u9898\uff0c\u53ea\u9700\u7528\u4e00\u4e2a\u6570\u7ec4f\u8bb0\u5f55\u67d0\u4e00\u4f4d\u7f6e\u662f\u5426\u6709\u6811\uff0c\u518d\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u67d0\u4e00\u4f4d\u7f6e\u662f\u5426\u6709\u6811\u82d7\uff0c\u7136\u540e\u6a21\u62df\u64cd\u4f5c\u5373\u53ef\u3002\u4f46\u8981\u6ce8\u610f\uff1a\u6b64\u9898\u6709\u9677\u9631\uff01\uff01\uff01\uff08\u8def\u662f\u4ece0\u5f00\u59cb\u7684\uff1b\u8981\u6c42\u7684\u662f\u201d\u6811\u82d7\u201c\u800c\u4e0d\u662f\u201c\u6811\u201c\uff09\u7136\u540e\u5c31\u662f\u7b80\u5355\u7684\u6a21\u62df\u4e86\uff0c\u7528\u4e24\u4e2a\u53d8\u91cf\u8bb0\u5f55\u79cd\u6811\u82d7\u603b\u6570\uff08count\uff09\u548c\u79cd\u4e86\u53c8\u780d\u4e86\u7684\u6811\u82d7\u6570\uff08sum\uff09\uff0c\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u5269\u4f59\u6811\u82d7\u6570=\u79cd\u6811\u82d7\u603b\u6570-\u79cd\u4e86\u53c8\u780d\u4e86\u7684\u6811\u82d7\u6570\u3002\n\n\u9644\u4e0aAC\u6e90\u4ee3\u7801\u200b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define MAXN 1000010\nint n,m,f[MAXN],num,a,b,i,count=0,sum=0,r[MAXN];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    memset(f,0,sizeof(f));\n    memset(r,0,sizeof(r));\n    while(m--)\n    {\n        scanf(\"%d%d%d\",&num,&a,&b);\n        if(num)\n        {\n            for(i=a;i<=b;i++)\n                if(f[i]){f[i]=0;r[i]=1;count++;}\n        }\n        else for(i=a;i<=b;i++)\n            if(!f[i])\n            {\n                if(r[i]){sum++;;r[i]=0;}\n                f[i]=1;\n            }\n    }\n    printf(\"%d\\n\",count-sum);\n    printf(\"%d\\n\",sum);\n    return 0;\n}\n\n```",
        "postTime": 1447919340,
        "uid": 8683,
        "name": "ROOToj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u7684\u786e\u662f\u4e00\u9053\u5f88\u6c34\u7684\u5165\u95e8\u9898\uff0c\u867d\u7136\u6bd4\u539f\u9898\u96be\u4e86\u8bb8\u591a\uff0c\u4f46\u4f9d\u7136\u53ea\u9700\u8981\u5f00\u4e2a\u8db3\u591f\u5927\u7684\u6570\u7ec4\u6a21\u62df\uff0c\u8d85\u5185\u5b58\u8d85\u65f6\u9650\u90fd\u4e0d\u7528\u8003\u8651\u3002\u697c\u4e0a\u7684\u7a0b\u5e8f\u6bd4\u6211\u7684\u957f\u3002\u3002\u3002\u3002\u3002\u3002\u4f46\u601d\u60f3\u662f\u4e00\u6837\u7684\u3002\u7a0b\u5e8f\u5c31\u4e0d\u591a\u89e3\u91ca\u4e86\uff0c\u867d\u7136\u957f\uff0c\u4f46\u5f88\u5bb9\u6613\u770b\u61c2\u3002\n\n```delphi\nvar\n s:array[0..10000] of longint;\n l,Y,a,b,c,d,i,j,n,x:longint;\nbegin\n readln(l,d);\n for i:=0 to l do s[i]:=1;\n n:=0;\n x:=0;\n for i:=1 to d do\n  begin\n   readln(a,b,c);\n   if a=0 then\n     for j:=b to c do\n      if s[j]=1 then s[j]:=0\n       else if s[j]=2 then\n         begin\n          s[j]:=0;\n          x:=x+1;\n        end;\n   if a=1 then\n    for j:=b to c do\n       if s[j]=0 then s[j]:=2;\n    end;\n  for i:=0 to l do\n  if s[i]=2 then n:=n+1;\n  writeln(n);\n  writeln(x);\nend.\n```",
        "postTime": 1425995566,
        "uid": 3425,
        "name": "\u678d\u66ae77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u60f3\u6cd5:\n\n \n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint main()\n{\n    int l,n,flag,a,b,c,d,f1=0,f2=0,e[10001];\n    memset(e, 2, sizeof(e));\n    cin>>l>>n;\n    for(int i=1;i<=n;i++)\n    {\n            cin>>flag;\n            if(flag==0)\n            {\n                cin>>a>>b;\n                for(int j=a;j<=b;j++)\n                {\n                        if(e[j]==1) f1++;\n                        e[j]=0;\n                        }\n                       }\n            if(flag==1)\n              {\n                       cin>>c>>d;\n                       for(int k=c;k<=d;k++)\n                       if(e[k]==0)  e[k]=1;\n                       }\n            }\n    for(int z=0;z<=l;z++)\n        if(e[z]==1)   f2++;\n    cout<<f2<<endl;\n    cout<<f1<<endl;\n    return 0;\n    } \n\n```",
        "postTime": 1409379373,
        "uid": 513,
        "name": "xiaoxi27",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "\u60f3\u6cd5:\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7eaf\u7cb9\u7684\u6a21\u62df\u9898\uff0c\u5e76\u4e0d\u9700\u8981\u7528\u9ad8\u6df1\u7684\u7b97\u6cd5\uff0c10000\\*100\u8ba1\u7b97\u673a\u4e00\u79d2\u80fd\u591f\u63a5\u53d7\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6bcf\u6b21\u8bfb\u5165\u6307\u4ee4\u518d\u6a21\u62df\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86\uff0c\u6ce8\u610f\u6811\u7684\u533a\u95f4\u4e3a[0\uff0cn]\uff0c\u4e0d\u8981\u9057\u6f0f\u5173\u4e8e0\u8fd9\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86.\n\n\u7a0b\u5e8f:\n\n```delphi\n\nvar\na:array[0..10000] of longint;\nc,n,m,i,j,s,t,x,y:longint;\n\nbegin\n  fillchar(a,sizeof(a),1);\n  read(n,m);\n  for i:=1 to m do\n   begin\n    read(c);\n    if c=0 then\n     begin\n      read(x,y);\n      for j:=x to y do\n       begin\n        if a[j]=2 then\n         begin\n          s:=s-1;t:=t+1;\n        end;\n        a[j]:=0;\n      end;\n    end;\n    if c=1 then\n     begin\n      read(x,y);\n      for j:=x to y do\n       begin\n        if a[j]=0 then\n         begin\n          s:=s+1;a[j]:=2;\n        end;\n      end;\n    end;\n  end;\n  writeln(s);\n  writeln(t);\nend.\n\n```",
        "postTime": 1399044424,
        "uid": 1423,
        "name": "taophee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint r[10002];                     //\u8fd9\u4e2a\u6570\u7ec4\u91cc\u7684\u6bcf\u4e00\u4e2a\u6570\u53ea\u6709\u4e09\u6001\uff0c0\u8868\u793a\u88ab\u780d\u6389\uff0c1\u8868\u793a\u5927\u6811\uff0c2\u8868\u793a\u6811\u82d7\nint main() {\n    int n,l,a,b,x;\n    int sum=0;                    //sum\u53d8\u91cf\u7528\u4e8e\u5b58\u50a8\u79cd\u4e0a\u53c8\u88ab\u62d4\u6389\u7684\u6811\u82d7\u6570\u76ee\n    cin >> l >> n;\n    for (int i=0;i<=l;i++)\n        r[i]=1;                   //\u690d\u6811\n    for (int i=0;i<n;i++) {\n        cin >> x >> a >> b;\n        if (x==0)                 //\u5982\u679c\u662f\u780d\u6811\n            for (int j=a;j<=b;j++) {\n                if (r[j]==2)      //\u5982\u679c\u780d\u7684\u662f\u6811\u82d7\n                    sum++;\n                r[j]=0;\n            }\n        else if (x==1)\n            for (int j=a;j<=b;j++)\n                if (r[j]==0)      //\u5982\u679c\u88ab\u780d\u6389\u4e86\n                    r[j]=2;       //\u8bb0\uff01\u4f4f\uff01\u79cd\uff01\u7684\uff01\u662f\uff01\u6811\uff01\u82d7\uff01\n    }\n    int count=0;                  //count\u53d8\u91cf\u7528\u4e8e\u5b58\u50a8\u5269\u4e0b\u7684\u6811\u82d7\n    for (int i=0;i<=l;i++) {      //\u7edf\u8ba1\n        if (r[i]==2)              //\u5982\u679c\u662f\u6811\u82d7\n            count++;\n    }\n    printf(\"%d\\n%d\",count,sum);\n    return 0;\n}\n```\n\n### \u5206\u6790\n\n\u5982\u9898\uff0c\u8fd9\u9898\u5f88\u5751\n\n#### \u4e00\u53f7\u5751\n\n$L$\u662f\u4ece0\u5f00\u59cb\u800c\u4e0d\u662f1\uff0c~~\u8fd9\u4e2a\u5751\u80fd\u6454\u6b7b\u4eba~~\n\n#### \u4e8c\u53f7\u5751\n\n\u79cd\u4e0b\u53bb\u7684\u662f\u6811\u82d7\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u957f\u6210\u5927\u6811\n\n\u5176\u4ed6\u597d\u50cf\u5c31\u6ca1\u6709\u4e86",
        "postTime": 1565615452,
        "uid": 155107,
        "name": "\u5144\u4e3b\u7684\u4ed9\u4eba\u638c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    },
    {
        "content": "MINECRAFT \u4f18\u8d28\u9898\u89e3-\u7b2c\u4e00\u9898 P1276\u6821\u95e8\u5916\u7684\u6811\n\u8fd9\u9053~~\u6c34\u9898~~\u6211\u770b\u6709\u5f88\u591a\u5927\u4f6c\u7528\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u505a\uff0c\u6211\u662f\u4e2a\u849f\u84bb\uff0c\u770b\u4e0d\u61c2\u3002\u3002\u3002\u6240\u4ee5\u7528\u4e86\u666e\u901a\u7684\u6570\u7ec4\u505a\u8fd9\u9053\u9898\u3002\u3002\u3002\n\n\u548c\u6821\u95e8\u5916\u7684\u6811\u539f\u7248\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u591a\u4e86\u4e00\u79cd\u60c5\u51b5\uff1a\u79cd\u6811\u82d7\uff0c\u4f46\u5176\u5b9e\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002\u521d\u59cb\u6240\u6709\u4f4d\u7f6e\u90fd\u79cd\u5927\u6811\uff0ca[i]\u75280\u8868\u793a\uff0c\u7a7a\u4f4d\u75281\u8868\u793a\uff0c\u79cd\u6811\u82d7\u75282\u8868\u793a\u3002\u5982\u679c\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u6811\u6216\u6811\u82d7\u88ab\u780d\uff0c\u5c31\u5427a[i]=1\uff1b\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u88ab\u8865\u79cd\u4e86\u6811\u82d7\uff0c\u5c31\u628aa[i]=2\uff1b\u7136\u540e\u7edf\u8ba1\u5c31\u53ef\u4ee5\u4e86\u3002\u7eaf\u6a21\u62df\u3002\n\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100008]={0};\n//a[i]\u8868\u793a\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u72b6\u6001\uff0c0\u8868\u793a\u79cd\u690d\u4e86\u5927\u6811\uff0c1\u8868\u793a\u7a7a\uff0c2\u8868\u793a\u79cd\u690d\u4e86\u6811\u82d7\n//a[i]\u521d\u59cb\u5168\u90e8\u7ed90\uff0c\u8868\u793a\u5168\u90fd\u79cd\u4e0a\u5927\u6811 \nint main()\n{\n\tint n,i,j,m,L,l,r,ans1=0,ans2=0;\n\tscanf(\"%d %d\",&L,&n);\n\tbool f;//f\u4e3afalse\u8868\u793a\u780d\u6811\u8005\uff0ctrue\u8868\u793a\u690d\u6811\u8005 \n\tfor(i=1;i<=n;i++)\n\t{\n\t\tcin>>f;    //scanf\u6ca1\u6cd5\u8bfb\u5165bool\u578b\u7684\u53d8\u91cf \n\t\tscanf(\"%d %d\",&l,&r);\n\t\t//\u4ecea[l]\u5230a[r]\u6765\u690d\u6811\u6216\u780d\u6811\n\t\tif(!f)    //\u780d\u6811 \n\t\t{\n\t\t\tfor(j=l;j<=r;j++)\n\t\t\t{\n\t\t\t\tif(a[j]==0) a[j]=1;\n\t\t\t\tif(a[j]==2) //\n\t\t\t\t{\n\t\t\t\t\tans2++;\n\t\t\t\t\ta[j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse for(j=l;j<=r;j++) if(a[j]==1) a[j]=2;    //\u79cd\u6811 \n\t}\n\tfor(i=0;i<=L;i++) if(a[i]==2) ans1++;    //\u7edf\u8ba1 \n\tprintf(\"%d\\n%d\",ans1,ans2);\n\treturn 0;    //\u597d\u4e60\u60ef \n}\n\n```\n\u6ce8\u610f\u662f\u9898\u76ee\u7684\u8981\u6c42\u662f\u7edf\u8ba1**\u8865\u79cd\u7684\u6811\u82d7\u53c8\u88ab\u780d\u7684\u603b\u6570**\u800c\u4e0d\u662f\u6700\u540e\u6709\u591a\u5c11\u4e2a\u6811\u82d7\u88ab\u780d\n\n\u8c22\u8c22\u5927\u5bb6(^_^)",
        "postTime": 1529732352,
        "uid": 84773,
        "name": "minecraft_herobrine",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1276 \u3010\u6821\u95e8\u5916\u7684\u6811\uff08\u589e\u5f3a\u7248\uff09\u3011"
    }
]