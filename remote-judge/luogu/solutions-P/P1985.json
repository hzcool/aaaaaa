[
    {
        "content": "> ## [[ \u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c ]](https://www.luogu.org/blog/execute/solution-p1985)\n> ## [[    \u539f\u9898\u9762    ]](https://www.luogu.org/problemnew/show/P1985)\n------------\n\n### \u7b2c\u96f6\u90e8\u5206 \u2014\u2014 \u9605\u8bfb\u9898\u76ee\n\n- \u9898\u76ee\u5927\u610f\uff1a\u6709 M*N \u4e2a\u683c\u5b50\uff0c\u4e00\u9762\u662f\u767d\u8272\uff0c\u53e6\u4e00\u9762\u662f\u9ed1\u8272\u3002\u7ed9\u4f60\u4e00\u4e2a\u64cd\u4f5c\uff0c\u7ffb\u8f6c\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u4f7f\u8fd9\u4e2a\u4f4d\u7f6e\u548c\u4e0e\u5b83\u6709\u516c\u5171\u8fb9\u7684\u6240\u6709\u683c\u5b50\u53d8\u6362\u4e00\u6b21\u989c\u8272\uff08\u9ed1->\u767d\uff0c\u767d->\u9ed1\uff09\u3002\u73b0\u5728\uff0c\u7ed9\u4f60\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\uff0c\u95ee\u4f60\u5982\u4f55\u7ffb\u8f6c\uff0c\u624d\u80fd\u4f7f\u7ffb\u8f6c\u6b21\u6570\u6700\u5c0f\uff0c\u5982\u6709\u591a\u4e2a\u89e3\uff0c\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u5982\u679c\u65e0\u89e3\uff0c\u8f93\u51fa\u201cIMPOSSIBLE\"\uff08\u5ffd\u7565\u5f15\u53f7\uff09\n\n- \u6570\u636e\u8303\u56f4\uff1a1 \u2264 M, N \u2264 15\n\n- So\uff0c\u770b\u5230\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u51fa\u9898\u4eba\u5f88\u826f\u5fc3\uff0c\u4f46\u5728\u770b\u5b8c\u9898\u76ee\u4e4b\u540e\uff0c\u53d1\u73b0 2^30 \u592a\u5927\u4e86 ~~\uff08\u8fdeint\u90fd\u5feb\u5b58\u4e0d\u4e0b\u4e86\uff09~~ \u51e0\u4e4e\u65e0\u6cd5\u5f97\u5206\n\n------------\n### \u7b2c\u4e00\u90e8\u5206 \u2014\u2014 \u5f00\u59cb\u5206\u6790\n- \u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u6570\u636e\u8303\u56f4\u77e5\u9053\uff0c\u5355\u7eaf\u5730\u53bb\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7ffb\u8f6c\u60c5\u51b5\u662f\u4e00\u5b9a\u8fc7\u4e0d\u4e86\u5168\u90e8\u7684\u6d4b\u8bd5\u70b9\u7684\n\n- \u8fd9\u6837\u679a\u4e3e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u662f O\uff082^(n+m)\uff09\uff0c\u56e0\u4e3a\u603b\u5171 n*m \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u53cd\u8f6c\u6216\u8005\u4e0d\u53cd\u8f6c\n\n- So\uff0c\u4e0a\u9762\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6211\u4eec\u65e0\u6cd5\u63a5\u53d7\u7684\uff0c\u5fc5\u987b\u964d\u4e0b\u6765\n\n------------\n### \u7b2c\u4e8c\u90e8\u5206 \u2014\u2014 \u521d\u73b0\u601d\u8def\n\n- \u901a\u8fc7\u9898\u76ee\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u8981\u628a\u6240\u6709\u70b9\u53cd\u8f6c\u6210\u767d\u8272\n\n- So\uff0c\u6211\u4eec\u8981\u5c3d\u53ef\u80fd\u5730\u8ba9\u67d0\u4e00\u90e8\u5206\u90fd\u53d8\u6210\u767d\u8272\uff0c\u7136\u540e\u5728\u4fdd\u8bc1\u4e4b\u524d\u7684\u767d\u8272\u90e8\u5206\u4e0d\u4f1a\u7f29\u5c0f\u7684\u6761\u4ef6\u4e0b\uff0c\u6162\u6162\u5730\u6269\u5927\uff0c\u76f4\u5230\u8986\u76d6\u6574\u4e2a\u68cb\u76d8 ~~\uff08 \u6709\u6ca1\u6709\u4e00\u70b9\u50cf\u8f6c\u9b54\u65b9\uff1f \uff09~~\n\n------------\n### \u7b2c\u4e09\u90e8\u5206 \u2014\u2014 \u6df1\u5165\u601d\u8003\n\n- \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u60f3\u51fa\u4e00\u79cd\u65b9\u6cd5 ~~\uff08\u5f53\u7136\uff0c\u6ca1\u770b\u8fc7\u9898\u89e3 QAQ\uff09~~\uff1a\u8fd8\u662f\u679a\u4e3e ~~\uff08\u5584\u53d8\u7684\u6211\uff09~~\n\n- \u5148\u679a\u4e3e\u7b2c\u4e00\u884c\uff08\u5176\u5b9e\u679a\u4e3e\u4efb\u4f55\u4e00\u884c\uff0c\u6216\u4efb\u4f55\u4e00\u5217\u90fd\u53ef\u4ee5\u5f97\u51fa\u7ed3\u679c\uff0c\u89c1\u5ef6\u4f38\u9605\u8bfb\u2460  \uff09\n\n- \u518d\u6839\u636e\u4e4b\u524d\u8bf4\u7684\uff1a\u201c\u6211\u4eec\u8981\u6162\u6162\u6269\u5927\uff0c\u76f4\u5230\u8986\u76d6\u6574\u4e2a\u68cb\u76d8\u201d \uff0c\u4f46\u662f\u8fd9\u53e5\u8bdd\u7684\u6839\u672c\u6761\u4ef6\u662f\u4fdd\u8bc1\u767d\u8272\u90e8\u5206\u4e0d\u4f1a\u7f29\u5c0f\u3002\n\n- So\uff0c\u5982\u4f55\u4fdd\u8bc1\u767d\u8272\u533a\u57df\u4e0d\u4f1a\u7f29\u5c0f\uff0c\u662f\u8fd9\u9053\u9898\u7684\u7a81\u7834\u53e3\n\n\n------------\n### \u7b2c\u56db\u90e8\u5206 \u2014\u2014 \u89e3\u51b3\u95ee\u9898\n- ~~\uff08\u8fd9\u4e00\u90e8\u5206\u7684\u6807\u9898\u662f\u4e0d\u662f\u5f88\u50cf\u5927\u90e8\u5206\u6570\u5b66\u8bd5\u5377\u7684\u6700\u540e\u4e00\u5927\u9898\uff1f\uff09~~\n\n- \u63a5\u7740\uff0c\u5206\u6790\u9898\u76ee\uff0c\u6bcf\u4e00\u6b21\u53cd\u8f6c\uff0c\u90fd\u4f1a\u628a\u4e00\u4e2a\u201c\u5341\u201d\u5b57\u5f62\u533a\u57df\u53d6\u53cd\uff0cit looks like this\uff1a\n\n         ...+---+---+---+...\n         ...|   | * |   |...\n         ...+---+---+---+...\n         ...| * | * | * |...\n         ...+---+---+---+...\n         ...|   | * |   |...\n         ...+---+---+---+...\n          \uff08\u661f\u53f7\u6807\u6ce8\u533a\u53d6\u53cd\uff09\n           Tips: \u53d6\u53cd  1->0  0->1 ,\u76f8\u5f53\u4e8e not \u6216 ! \n           \t\t \u4f46\u662f\u4ee3\u7801\u4e2d\uff0c\u672c\u4eba\u559c\u6b22\u4f7f\u7528 1-X \u6765\u53d6\u53cd\n\n- ~~\uff08\u65b0\u5947\u7684\u753b\u98ce\uff09~~\n\n- \u5982\u679c\u54ea\u4e00\u683c\u4e0d\u662f0\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5b83\u7684\u4e0b\u65b9\u8fdb\u884c\u53cd\u8f6c\u3002\uff08\u5177\u4f53\u4e3a\u4ec0\u4e48\u662f\u4e0b\u65b9\uff0c\u89c1 \u5ef6\u4f38\u9605\u8bfb\u2460 \uff09\n\n- \u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u9664\u4e86\u7b2c\u4e00\u884c\u4ee5\u5916\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u89e3\u51b3\uff0c\u53ea\u7528\u5728\u5b8c\u6210\u4e4b\u540e\uff0c\u5224\u65ad\u4e00\u4e0b\uff0c\u6700\u540e\u4e00\u884c\u662f\u4e0d\u662f\u90fd\u662f0\uff0c\u5982\u679c\u662f\uff0c\u6211\u4eec\u5c31\u5f97\u51fa\u4e86\u4e00\u4e2a\u7b54\u6848\uff0c\u5728\u52a0\u4e0a\u4e00\u4e9b\u5224\u65ad\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u5c31\u5b8c\u6210\u4e86\n\n- \u5728\u8fd9\u4e00\u90e8\u5206\u4ee3\u7801\u5b8c\u6210\u662f\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u90fd\u8981\u51fa\u73b0\u4e00\u4e2aShadow\u6570\u7ec4\uff0c\u5728\u6bcf\u6b21\u64cd\u4f5c ~~\uff08\u9a9a\u64cd\u4f5c\uff1f\uff09~~ \u4e4b\u524d\uff0c\u5fc5\u987b\u4fdd\u5b58\u73b0\u573a\uff0c~~\uff08Sounds like a search algorithm\uff09~~\uff0c\u5728\u6700\u540e\u8fd8\u539f\u3002\n\n- So\uff0c\u5728\u679a\u4e3e\u65f6\uff0c\u6211\u4eec\u7528\u641c\u7d22\u89e3\u51b3\u597d\u4e86 ~~\uff08\u8fd9\u66f4\u4f53\u73b0\u51fa\u4e86\u6211\u7684\u5584\u53d8\uff0c o(*////\u25bd////*)q \uff09~~ \uff0c\u5728\u52a0\u4e0a\u524d\u9762\u7684\u601d\u8def\uff0c\u4e0e\u8f93\u5165\u8f93\u51fa\uff0c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5f00\u59cb\u6253\u5566\u3002<(\uffe3\ufe36\uffe3)\u2197[GO!]\n\n\n------------\n\n### \u7b2c\u4e94\u90e8\u5206 \u2014\u2014 \u4ee3\u7801\u5b9e\u73b0\n\n- \u8f93\u5165\u90e8\u5206\uff0c\u6211\u76f8\u4fe1\u5927\u5bb6\u90fd\u5199\u5f97\u51fa\u5566\n\n- \u53cd\u8f6c\u90e8\u5206\uff0c\u8fd9\u5341\u5206\u7684\u7b80\u5355\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u5982\u679c\u4f7f\u7528\u5750\u6807\u4f4d\u7f6e\u4e0d\u8981\u641e\u6df7\n\n- \u641c\u7d22\u90e8\u5206\uff0c\u4e07\u4e00\u6709\u6bd4\u6211\u8fd8\u5f31\u7684\u849f\u84bb\u7684\u8bdd\uff0c\u6211\u53ea\u597d\u5199\u51fa\u6765\u4e86\uff1a\n\n```cpp\nvoid Work(int k)\n{\n\tif (!k) Doit();              // \u5168\u90e8\u679a\u4e3e\u597d\u4e86\n\telse\n\t{\n\t\tWork(k - 1);               // \u9012\u5f52\u4e0d\u53cd\u8f6c\n\t\tReversal(1, k), ++b;       // \u7ffb\u8f6c\u4e00\u4e0b\uff0c\u7528\u6765\u9012\u5f52\u7ffb\u8f6c\u60c5\u51b5\n\t\tWork(k - 1);               // \u9012\u5f52\u7ffb\u8f6c\n\t\tReversal(1, k), --b;       // \u7ffb\u8f6c\u4e00\u4e0b\uff0c\u7528\u6765\u8fd8\u539f\n\t}\n}\n```\n- \u8fd9\u4e2a\u51fd\u6570\u5199\u7684\u4e0d\u662f\u7279\u522b\u7f8e\u89c2 ~~\uff08\u5982\u679c\u6709 int main(){} \u8fd9\u6837\u7684\u51fd\u6570\u5c31\u597d\u4e86\uff09~~ \u4f46\u4e5f\u53ef\u4ee5\u51d1\u5408\u770b\u770b\n\n- \u5176\u4e2d\u7684 k \u8868\u793a\u8fd8\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u6ca1\u6709\u9009\uff0cb\u8868\u793a\u7ffb\u8f6c\u4e86\u591a\u5c11\u6b21\uff0c\u56e0\u4e3a\u9700\u8981\u8f93\u51fa\u6700\u5c11\u7ffb\u8f6c\u6b21\u6570\n\n- \u4e5f\u8bb8\u6709\u7684\u540c\u5b66\u4f1a\u95ee\uff1a\u4e3a\u4ec0\u4e48\u4e0d\u7528\u201c\u9009\u4e86\u591a\u5c11\u4e2a\u4f4d\u7f6e\u201d\u6765\u8868\u793ak\u5462\uff1f\u4e3a\u4e86\u4ee3\u7801\u77ed\uff0c\u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u4e60\u60ef\uff0c\u8bf7\u4e0d\u8981\u5b66\u672c\u4eba\n\n- Doit\uff0c\u8fd9\u53ea\u9700\u8981\u628a\u601d\u8def\u7ffb\u8bd1\u6210\u4ee3\u7801\u5c31\u597d\u4e86\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u89c9\u5f97\u51fa\u793a\u4e00\u4e0b ~~\u4f2a~~ \u4ee3\u7801\u66f4\u597d\u4e00\u70b9\uff1a\n\n```cpp\nvoid Doit()\n{\n\tMap = Shadow\n\tFor (i = 1..n-1)\n\t\tFor (j = 1..m)\n\t\t\tIf (Map[i][j])\n\t\t\t\tReversal(i+1,j),++p;//\u6ce8\u610fi\u4ece1\u5230n-1\n\tFlag = 1;\n\tfor (int j=1..m; Flag&=(!Map[n][j++]));     //\u5224\u65ad\u6700\u540e\u4e00\u884c\u662f\u4e0d\u662f\u5168\u4e3a0\n\tif ((p+b<D || (p+b==D && Judger()) || D==-1) && Flag)\n\t{\n\t\tAns = ans\n\t\tD = p+b\n\t}                                           //\u5224\u65ad\u662f\u5426\u7b26\u5408\u66ff\u6362\u8981\u6c42\n\tShadow = Map\n    Ans[2][1] ~ Ans[n][m] = 0\n}\n```\n\n- \u5176\u4e2dD\u8868\u793a\u76ee\u524d\u6700\u4f18\u89e3\u7684\u53cd\u8f6c\u6b21\u6570\uff0cJudger\u8868\u793a\u4e0e\u5f53\u524d\u89e3\u8fdb\u884c\u5b57\u5178\u5e8f\u6bd4\u8f83\uff0c\u5176\u4ed6\u5c31\u81ea\u5df1\u53bb\u7406\u89e3\u5427\u3002 (>\u25bd<)\n\n- \u8f93\u51fa\uff0c\u76f8\u4fe1\u4f60\u4eec\u4f1a\u5199\u7684\u6bd4\u672c\u4eba\u597d\u7684\uff0c\u6211\u5c31\u4e0d\u6d6a\u8d39\u7b14\u58a8\u4e86\uff0c\u4e3b\u8981\u5c31\u662f\u65e0\u89e3\u65f6\u9700\u8981\u8f93\u51fa\u201cIMPOSSIBLE\u201d\u9700\u8981\u6ce8\u610f\n\n- So\uff0c\u7b2c\u4e94\u90e8\u5206\u7684\u4ee3\u7801\u5b9e\u73b0\u5c31\u89e3\u51b3\u4e86\uff0c\u662f\u4e0d\u662f\u89c9\u5f97\u8fd8\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd8\u6709\u672c\u4eba\u7b2c\u4e00\u6b21\u5728\u6d1b\u8c37\u53d1\u5e03\u9898\u89e3\uff0c\u4e0d\u77e5\u9053\u5982\u4f55\u5199\u624d\u597d\uff0c\u5982\u679c\u6709\u6ca1\u8bb2\u6e05\u695a\u7684\u5730\u65b9\uff0c\u5c3d\u7ba1\u5728\u8bc4\u8bba\u4e2d\u56de\u590d\uff0c\u6211\u5c3d\u91cf\u505a\u5230\u6709\u95ee\u5fc5\u7b54\u3002\n\n------------\n\n### \u7b2c\u516d\u90e8\u5206 \u2014\u2014 \u540e\u8bb0\uff1f\n\n- \u7ba1\u7406\u5458\u5927\u5927\u8981\u4f53\u8c05\u6211\u8fd9\u4e2a\u5927\u5e74\u521d\u4e00\u5728\u5bb6\u4e00\u4e2a\u4eba\u7801\u4ee3\u7801\u7684\u4eba ~~\uff08\u7a7a\u5de2\u5bc2\u5bde\u8001\u4eba\uff1f\uff1f\uff1f\uff09~~ \u6211\u5df2\u7ecf\u5c3d\u529b\u628a\u8fd9\u7bc7\u9898\u89e3\u5199\u597d\u4e86\uff0c\u5982\u679c\u8fd8\u6709\u4ec0\u4e48\u5730\u65b9\u5199\u7684\u4e0d\u597d\u7684 ~~(\u56e0\u4e3a\u6211\u4eec\u662f\u4e3a\u4eba\u6c11\u670d\u52a1\u7684QAQ)~~ \uff0c\u6211\u4f1a\u7ee7\u7eed\u6539\u8fdb\u7684\n\n- \u5f53\u7136\uff0c\u8fd9\u4e0d\u662f\u771f\u6b63\u7684\u540e\u8bb0\uff0c\u8fd8\u6709\u5ef6\u4f38\u9605\u8bfb\u6ca1\u6709\u5199\u5462\n\n- So\uff0c\u5927\u5bb6\u6240\u671f\u671b\u7684\u5ef6\u4f38\u9605\u8bfb\u5c31\u6210\u4e86\u7b2c\u4e03\u90e8\u5206 ~~\uff08\u4e5f\u8bb8\u53ea\u6709\u6211\u671f\u671b\uff09~~\n\n\n------------\n\n### \u7b2c\u4e03\u90e8\u5206 \u2014\u2014 \u5ef6\u4f38\u9605\u8bfb\u2460\n\n- \u5f53\u7136\uff0c\u5e76\u6ca1\u6709\u5ef6\u4f38\u9605\u8bfb\u2461\n\n- \u4f60\u53ef\u4ee5\u9009\u62e9\u4efb\u4f55\u4e00\u884c\u6216\u4e00\u5217\n\n- \u5982\u679c\u4f60\u9009\u62e9\u67d0\u4e00\u884c\uff0c\u4f46\u662f\u5b83\u4e0d\u662f\u7b2c\u4e00\u884c\uff0c\u6216\u6700\u540e\u4e00\u884c\u7684\u8bdd\uff0c\u90a3\u4e48\u6bcf\u4e2a\u6570\u5b57\uff0c\u4e0d\u7ba1\u4f60\u60f3\u628a\u4ed6\u4ece\u201c1\u201d\u53d8\u6210\u201c0\u201d\uff0c\u8fd8\u662f\u4ece\u201c0\u201d\u53d8\u6210\u201c0\u201d\uff0c\u90fd\u4f1a\u51fa\u73b0\u4e24\u79cd\u65b9\u6848\n\n- \u56e0\u4e3a\u5728\u4f60\u60f3\u628a\u201c1\u201d\u53d8\u6210\u201c0\u201d\u65f6\uff0c\u53ef\u4ee5\u5728\u4e0a\u65b9\u7ffb\u8f6c\uff0c\u6216\u662f\u5728\u4e0b\u65b9\u7ffb\u8f6c\u3002\u5f53\u4f60\u60f3\u628a\u201c0\u201d\u53d8\u6210\u201c0\u201d\u65f6\uff0c\u6709\u53ef\u80fd\u65f6\u4e0a\u4e0b\u90fd\u4e0d\u7ffb\u8f6c\uff0c\u6216\u662f\u4e0a\u4e0b\u540c\u65f6\u7ffb\u8f6c\n\n- \u8fd9\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u4f1a\u98d9\u5347\uff0c\u56e0\u4e3a\u4f60\u53c8\u9700\u8981\u679a\u4e3e\u7684\u6b21\u6570\u8981\u589e\u52a0 2^n \u6b21\uff0c\u4f46\u6700\u540e\u603b\u662f\u80fd\u5f97\u51fa\u6b63\u786e\u7b54\u6848\uff0c\u4f46\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(2^(n+1)+n^2)\n\n- \u5217\u4e5f\u4e00\u6837\uff0c\u6700\u597d\u9009\u62e9\u7b2c\u4e00\u5217\u6216\u6700\u540e\u4e00\u5217\n\n- \u8fd9\u6837\uff0c\u5982\u679c\u4e0d\u662f\u7528\u7b2c\u4e00\u884c\uff08\u5217\uff09\u6216\u6700\u540e\u4e00\u884c\uff08\u5217\uff09\u7684\u8bdd\uff0c\u4f1a\u975e\u5e38\u9ebb\u70e6\uff0c\u4ee3\u7801\u4e0d\u597d\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u66f4\u6253\u5927\uff0c\u8fd9\u662f\u5f97\u4e0d\u507f\u5931\u7684\n\n- So\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u7528\u7b2c\u4e00\u884c\u4f5c\u4e3a\u8d77\u59cb\u884c\u4e86 ~~\uff08\u5f53\u7136\uff0c\u7b2c\u4e00\u5217\u4e5f\u53ef\u4ee5\uff09~~\n\n\n\n------------\n\n### \u7b2c\u516b\u90e8\u5206 \u2014\u2014 \u771f\u00b7\u540e\u8bb0\n\n- \u4e0d\u77e5\u4e0d\u89c9\u5c31\u5199\u4e86\u8fd9\u4e48\u591a\u4e86\u5462\uff0c\u5e0c\u671b\u5404\u4f4d\u7ed9\u6211\u4e00\u4e2a\u8d5e\uff0c\u6216\u662f\u7ed9\u4e88\u6211\u60a8\u7684\u5b9d\u8d35\u7684\u610f\u89c1\n\n- So\uff0c\u9898\u89e3\u5c31\u5230\u8fd9\u4e86\u5427",
        "postTime": 1549355783,
        "uid": 115196,
        "name": "world_execute",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1985 \u3010[USACO07OPEN]\u7ffb\u8f6c\u68cb\u3011"
    },
    {
        "content": "## \u8bb2\u8bb2\u6211\u7684\u505a\u6cd5\n\n\u521a\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u770b\u5230 $n<=15$\uff0c\u6211\u8fd9\u4e2a $6$ \u5e74\u7ea7\u7684\u849f\u84bb\u7684\u7b2c1\u53cd\u5e94\u662f\u72b6\u538b $dp$\u3002\u8c8c\u4f3c\u4e0d\u597d\u505a\u3002\u7136\u800c\uff0c\u7b49\u5230\u6211\u5728\u7701\u4e2d\u96c6\u8bad\u7684\u65f6\u5019\uff0c\u8001\u5e08\u7684\u4e00\u5e2d\u8bdd\uff0c\u8ba9\u6211\u8c41\u7136\u5f00\u6717\u3002\u4eca\u5929\u6211\u51c6\u5907\u6765\u5206\u4eab\u4e00\u4e0b\u3002\n**\u8001\u5e08\u7684\u8bdd\u662f\uff1a\u9664\u4e86\u7b2c1\u884c\uff0c\u5176\u4ed6\u683c\u5b50\u8981\u4e0d\u8981\u7ffb\u662f\u7531\u4e0a\u4e00\u884c\u51b3\u5b9a\u7684\u3002**\n\u542c\u5230\u8fd9\u91cc\uff0c\u6211\u60f3\u5e94\u8be5\u8ddf\u90a3\u65f6\u7684\u6211\u4e00\u6837\u2014\u2014\u8c41\u7136\u5f00\u6717\u4e86\u3002\n\n\u7528 $dfs$ \u6216\u75282\u8fdb\u5236\u6765\u679a\u4e3e\u7b2c1\u884c\u8981\u4e0d\u8981\u7ffb\uff08\u63a8\u8350\u7528 $dfs$\uff0c\u4e0d\u5bb9\u6613 $WA$\uff0c\u5e76\u4e14\u65f6\u95f4\u5145\u88d5\u7684\u5f88\uff09\uff0c\u7136\u540e\u53bb\u6a21\u62df\u540e\u9762\u7684\u683c\u5b50\uff0c\u6700\u540e\u518d\u770b\u6700\u540e\u4e00\u884c\u662f\u5426\u5168\u597d\u4e86\u3002\n\n\u6211\u4eec\u5148\u6765\u770b\u770b $dfs$ \u8be5\u600e\u4e48\u5199\n\n$code$\uff1a\n\n```cpp\nvoid dfs(int x){\n\tif(x==m+1){\n\t\tcheck();//\u6253\u64c2\u6cd5\n\t\treturn;//\u4e0d\u8981\u518d\u505a\u4e0b\u53bb\u4e86\uff0c\u5df2\u7ecf\u662f\u7ec8\u70b9\u4e86\n\t}\n\tf[x]=0;//\u5148\u8bd50\u7684\u60c5\u51b5\n\tdfs(x+1);//\u9012\u5f52\u4e0b\u53bb\n\tf[x]=1;//\u518d\u8bd51\u7684\u60c5\u51b5\n\tdfs(x+1);//\u9012\u5f52\u4e0b\u53bb\n}\n```\n\u6211\u4e5f\u653e\u4e00\u4e0b\u4e8c\u8fdb\u5236\u7684\u4ee3\u7801\u5427\n```cpp\nfor(int i=0;i<(1<<m);i++){\n\tfor(int j=0;j<m;j++)f[j+1]=(i>>j)&1;\n\tcheck();\n}\n```\n\u5927\u5bb6\u53d1\u73b0\u6211\u8fd9\u4e2a $check$ \u7adf\u7136\u6ca1\u6709\u7528$bool$\uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u7b2c $1$ \u6b21\u627e\u5230\u7684\u7b54\u6848\u4e0d\u4e00\u5b9a\u5c31\u662f\u6700\u4f18\u89e3\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u6211\u4eec\u662f\u901a\u8fc7\u6253\u64c2\u6cd5\u6c42\u51fa\u6765\u7684\u3002\n\n\u7ed9\u5927\u5bb6\u770b\u4e00\u770b $check$ \u51fd\u6570\u7684\u5b9e\u73b0\u8fc7\u7a0b\n\n```cpp\nvoid work(int x,int y){\n\tc[x][y]=1-c[x][y];\n\tc[x-1][y]=1-c[x-1][y];\n\tc[x+1][y]=1-c[x+1][y];\n\tc[x][y-1]=1-c[x][y-1];\n\tc[x][y+1]=1-c[x][y+1];\n}//\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u5199\u4e86\u4e2a\u51fd\u6570\u6765\u6a21\u62df\u7ffb\u683c\u5b50\nvoid check(){\n    memset(b,0,sizeof(b));\n    int s=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            c[i][j]=a[i][j];//\u521d\u59cb\u5316\n    for(int i=1;i<=m;i++)\n        if(f[i]){\n            work(1,i);//\u6a21\u62df\u51fa\u7b2c\u4e00\u884c\u7684\u53cd\u8f6c\u60c5\u51b5\n            b[1][i]=1;\n        }\n    for(int i=2;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(c[i-1][j])b[i][j]=1,work(i,j);//\u8ddf\u636e\u8001\u5e08\u7684\u90a3\u53e5\u8bdd\uff0c\u53bb\u6a21\u62df\n    for(int i=1;i<=m;i++)\n        if(c[n][i])return;//\u5982\u679c\u662f1\u76f4\u63a5\u7ed3\u675f\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(b[i][j]==1)s++;//\u8ba1\u7b97\u503c\n    if(s<ans){//\u6253\u64c2\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=m;j++)\n                d[i][j]=b[i][j];\n        ans=s;\n    }\n}\n```\n\u5e94\u8be5\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\n\n\u6211\u4eec\u6765\u770b\u4e00\u770b\u5b8c\u6574\u7684\u4ee3\u7801\u5427\n\n$dfs:$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    register int s=0,f=1;\n    register char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f*=-1;ch=getchar();}\n    while(isdigit(ch))s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n    return s*f;\n}//\u5feb\u8bfb\nvoid write(int x){\n    if(x>9)write(x/10);\n    putchar(x%10+48);\n}\nint a[25][25],f[25],n,m,b[25][25],c[25][25],ans=INT_MAX,d[25][25];\nvoid work(int x,int y){\n\tc[x][y]=1-c[x][y];\n\tc[x-1][y]=1-c[x-1][y];\n\tc[x+1][y]=1-c[x+1][y];\n\tc[x][y-1]=1-c[x][y-1];\n\tc[x][y+1]=1-c[x][y+1];\n}//\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u5199\u4e86\u4e2a\u51fd\u6570\u6765\u6a21\u62df\u7ffb\u683c\u5b50\nvoid check(){\n    memset(b,0,sizeof(b));\n    int s=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            c[i][j]=a[i][j];//\u521d\u59cb\u5316\n    for(int i=1;i<=m;i++)\n        if(f[i]){\n            work(1,i);//\u6a21\u62df\u51fa\u7b2c\u4e00\u884c\u7684\u53cd\u8f6c\u60c5\u51b5\n            b[1][i]=1;\n        }\n    for(int i=2;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(c[i-1][j])b[i][j]=1,work(i,j);//\u8ddf\u636e\u8001\u5e08\u7684\u90a3\u53e5\u8bdd\uff0c\u53bb\u6a21\u62df\n    for(int i=1;i<=m;i++)\n        if(c[n][i])return;//\u5982\u679c\u662f1\u76f4\u63a5\u7ed3\u675f\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(b[i][j]==1)s++;//\u8ba1\u7b97\u503c\n    if(s<ans){//\u6253\u64c2\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=m;j++)\n                d[i][j]=b[i][j];//\u66f4\u65b0\u503c\n        ans=s;\n    }\n}\nvoid dfs(int x){\n    if(x==m+1){\n        check();\n        return;\n    }\n    f[x]=0;\n    dfs(x+1);\n    f[x]=1;\n    dfs(x+1);\n}\nint main(){\n    n=read(),m=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            a[i][j]=read();//\u8bfb\u5165\n    dfs(1);\n    if(ans==INT_MAX)puts(\"IMPOSSIBLE\");\n    else{\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=m;j++)cout<<d[i][j]<<' ';\n            cout<<endl;\n        }\n    }\n    return 0;\n}\n```\n\u4e8c\u8fdb\u5236\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n    register int s=0,f=1;\n    register char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f*=-1;ch=getchar();}\n    while(isdigit(ch))s=(s<<1)+(s<<3)+(ch^48),ch=getchar();\n    return s*f;\n}\nvoid write(int x){\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}\nint a[25][25],f[25],n,m,b[25][25],c[25][25],ans=INT_MAX,d[25][25];\nvoid work(int x,int y){\n    c[x][y]=1-c[x][y];\n    c[x-1][y]=1-c[x-1][y];\n    c[x+1][y]=1-c[x+1][y];\n    c[x][y-1]=1-c[x][y-1];\n    c[x][y+1]=1-c[x][y+1];\n}//\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u5199\u4e86\u4e2a\u51fd\u6570\u6765\u6a21\u62df\u7ffb\u683c\u5b50\nvoid check(){\n    memset(b,0,sizeof(b));\n    int s=0;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            c[i][j]=a[i][j];//\u521d\u59cb\u5316\n    for(int i=1;i<=m;i++)\n        if(f[i]){\n            work(1,i);//\u6a21\u62df\u51fa\u7b2c\u4e00\u884c\u7684\u53cd\u8f6c\u60c5\u51b5\n            b[1][i]=1;\n        }\n    for(int i=2;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(c[i-1][j])b[i][j]=1,work(i,j);//\u8ddf\u636e\u8001\u5e08\u7684\u90a3\u53e5\u8bdd\uff0c\u53bb\u6a21\u62df\n    for(int i=1;i<=m;i++)\n        if(c[n][i])return;//\u5982\u679c\u662f1\u76f4\u63a5\u7ed3\u675f\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(b[i][j]==1)s++;//\u8ba1\u7b97\u503c\n    if(s<ans){//\u6253\u64c2\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=m;j++)\n                d[i][j]=b[i][j];\n        ans=s;\n    }\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\ta[i][j]=read();\n\tfor(int i=0;i<(1<<m);i++){\n\t    for(int j=0;j<m;j++)f[j+1]=(i>>j)&1;\n\t    check();\n\t}\n\tif(ans==INT_MAX)puts(\"IMPOSSIBLE\");\n\telse{\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++)cout<<d[i][j]<<' ';\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n## \u540e\u8bb0\n**Update\uff1a\u8877\u5fc3\u611f\u8c22 @\u9f99\u00b7\u6d77\u6d41 \u5927\u4f6c\u5e2e\u6211\u6307\u51fa\u4e86\u4e00\u4e2a\u81f4\u547d\u7684\u9519\u8bef**\n\n**Update\uff1a\u8877\u5fc3\u611f\u8c22 @TheStars \u5927\u4f6c\u5e2e\u6211\u6307\u51fa\u4e86\u4e00\u4e2a\u81f4\u547d\u7684\u9519\u8bef**\n\n\u8fd9\u662f\u6211[\u539f\u6765\u7684\u4ee3\u7801](https://www.luogu.org/paste/05qcgwu7)\n\n**\u6ce8\u610f\u9898\u76ee\u4e2d\u8bf4\u7684\u662f\u7ffb\u8f6c\u6b21\u6570\u5c11\u7684\u4f18\u5148\uff0c\u5982\u679c\u4e00\u6837\uff0c\u518d\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217\u3002**\u6211\u81ea\u5df1\u4e0d\u8ba4\u771f\u8bfb\u9898\uff0c\u8fd8\u53bb\u602a\u6570\u636e\u9519\u8bef\uff0c\u8fd8\u7279\u5224\u4e86\u6570\u636e\u3002\n\n\u8877\u5fc3\u611f\u8c22\u7701\u4e2d\u96c6\u8bad\u7684\u90a3\u4f4d\u8001\u5e08~~\u8ba9\u6211AC\u4e86\u4e00\u9053\u84dd\u9898~~\u3002\u3002\n\n\u5982\u679c\u6211\u7684\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u8bf7\u70b9\u4e2a\u8d5e\uff0c\u8c22\u8c22\u3002\u3002\n\n\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8bc4\u8bba\u6216\u79c1\u4fe1\u6211\u8fd9\u4e2a$6$\u5e74\u7ea7\u7684\u849f\u84bb\uff0c\u8c22\u8c22\u3002",
        "postTime": 1571653919,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1985 \u3010[USACO07OPEN]\u7ffb\u8f6c\u68cb\u3011"
    },
    {
        "content": "\u4f4d\u8fd0\u7b97\u597d\u9898\u3002\r\n\r\n---\r\n\r\n\u6211\u4eec\u8003\u8651\u5c06\u8f93\u5165\u8fdb\u6765\u7684 $01$ \u6570\u7ec4\u8f6c\u6362\u4e3a\u4e00\u7ef4\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u628a\u6bcf\u4e00\u884c\u770b\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u518d\u8f6c\u5316\u6210\u6570\u5b57\u3002\r\n\r\n\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\uff0c\u4e2d\u95f4\u8fdb\u884c\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u65b9\u4fbf\u5f88\u591a\u3002\u53ea\u9700\u8981\u884c\u548c\u884c\u4e4b\u95f4\u8fdb\u884c\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u5982\u4f55\u8f6c\u5316\u5462\uff1f\u53ef\u4ee5\u53c2\u8003\u6574\u6570\u8f93\u5165\u7684\u4f8b\u5b50\u3002\r\n\r\n\u4f8b\u5982\uff1a\u6211\u4eec\u8981\u8f93\u5165\u4e00\u4e2a\u6570\u7ec4\uff1a$1\\ 1\\ 4\\ 5\\ 1\\ 4$\uff0c\u6211\u4eec\u8981\u5c06\u5176\u8f6c\u5316\u6210\u53d8\u91cf $114514$\u3002\r\n\r\n\u6bcf\u6b21\u8bfb\u5165\u7684\u65f6\u5019\u5c06\u539f\u5148\u7684\u7b54\u6848 $\\times 10$\uff0c\u5c06\u8981\u8f93\u5165\u8fdb\u6765\u7684\u6570\u5b57\u7a7a\u51fa\u4f4d\u7f6e\u3002\r\n\r\n\u8bbe\u8f93\u5165\u7684\u6570\u4e3a $x$\uff0c\u6bcf\u6b21\u53ea\u8981\u5c06 $a_i \\times 10+x$ \u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n\u540c\u6837\uff0c\u5728 $01$ \u4e32\u4e0b\uff0c\u6bcf\u6b21\u53ef\u4ee5\u5c06\u6570\u5b57\u5de6\u79fb\u4e00\u4f4d\u2014\u2014 $111 \\rightarrow 1110$\uff0c\u518d\u6216\u4e00\u4e0b\u65b0\u7684 $0/1$ \u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n\u4e5f\u5c31\u662f `a[i] = (a[i] << 1) | x`\u3002\r\n\r\n\u8fd9\u6837\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u8f93\u5165\u7684\u95ee\u9898\u3002\r\n\r\n```cpp\r\nfor(int i = 1; i<=n; i++) {\r\n\tt[i] = 0;\r\n\tfor(int j = 1; j<=m; j++) {\r\n\t\tcin>>x;\r\n\t\tt[i] = t[i]<<1|x;\r\n\t}\r\n}\r\n```\r\n\r\n---\r\n\r\n\u8fd9\u91cc\u8865\u5145\u4e00\u4e0b\u4f4d\u8fd0\u7b97\u7684\u4e00\u4e9b\u7b80\u5355\u7684\u6027\u8d28\u3002\u4f1a\u7684\u5c31\u4e0d\u7528\u770b\u4e86\u3002\r\n\r\n\u5982\u679c\u60f3\u622a\u53d6\u4e00\u4e2a\u6570\u5b57 $x$ \u7684\u540e $n$ \u4f4d\uff08\u5728\u4e8c\u8fdb\u5236\u4e0b\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528 `x & ((1 << n) - 1)` \u6765\u89e3\u51b3\u3002\r\n\r\n`1<<n` \u4ee3\u8868 $n$ \u4f4d\u7684 $10000 \\cdots$\uff08\u5171 $n-1$ \u4e2a $0$\uff09\uff0c\u6211\u4eec\u5982\u679c\u5c06\u5b83 $-1$ \u8fd9\u4e2a $01$\u4e32\u5c31\u4f1a\u53d8\u6210 $11111 \\cdots$\uff08$n-1$ \u4e2a $1$\uff09\u3002\u4f17\u6240\u5468\u77e5\uff0c\u4e0e \u8fd0\u7b97\u7b26\u53ea\u6709\u5728\u4e24\u4f4d\u540c\u65f6\u4e3a $1$ \u7684\u65f6\u5019\u624d\u4f1a\u4e3a $1$\uff0c\u6240\u4ee5 $x$ \u591a\u51fa $n$ \u7684\u90a3\u51e0\u4f4d\u90fd\u4f1a\u4e3a $0$\uff0c\u8fd9\u6837\u4e5f\u5c31\u5b8c\u7f8e\u7684\u622a\u53d6\u4e86 $x$ \u7684\u524d $n$ \u4f4d\u3002\r\n\r\n---\r\n\r\n\u8fd9\u9053\u9898\u6d89\u53ca\u4e00\u4e2a\u9012\u63a8\u7684\u6027\u8d28\u3002\r\n\r\n\u5982\u4f55\u9012\u63a8\u5462\uff1f\u53ea\u9700\u8981\u586b\u51fa\u7b2c\u4e00\u884c\uff0c\u540e\u9762\u7684\u5c31\u53ef\u4ee5\u6309\u7167\u524d\u9762\u7684\u8d2a\u5fc3\u5730\u6765\u53d8\u5316\u3002\r\n\r\n\u8fd9\u6837\u53ea\u8981\u679a\u4e3e\u7b2c\u4e00\u884c\u7684\u6240\u6709\u4fee\u6539\u53ef\u80fd\uff0c\u7136\u540e**\u6bcf\u6b21\u6309\u7167\u4e0a\u6b21\u6ca1\u6709\u6539\u8fc7\u6765\u7684 $1$ \u5c3d\u91cf\u8ba9\u4ed6\u53d8\u6210 $0$ \u5c31\u53ef\u4ee5\u4e86\u3002**\uff08\u8d2a\u5fc3\u7b56\u7565\uff09\r\n\r\n\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4ec5\u4e3a $\\mathcal{O}(2^m n)$\u3002\r\n\r\n```cpp\r\ncz[1] = i;\r\nfor(int j = 1; j<=n; j++) a[j] = t[j];//\u56e0\u4e3aa\u6570\u7ec4\u4f1a\u6539\u53d8\uff0ct\u6570\u7ec4\u624d\u662f\u521d\u59cb\u6570\u7ec4\r\n\tfor(int j = 1; j<=n; j++) {\r\n\t\tcnt+=ljp(cz[j]);//\u7edf\u8ba1\r\n\t\ta[j]^=(cz[j]^(cz[j]>>1)^(cz[j]<<1))&((1<<m)-1);//\u64cd\u4f5c\u5f53\u524d\u5217\r\n\t\ta[j+1]^=cz[j];//\u5148\u64cd\u4f5c\u4e0b\u4e00\u884c\u3002\r\n\t\tcz[j+1] = a[j];//\u4e0b\u4e00\u5217\u7684\u64cd\u4f5c\u662f\u8fd9\u4e00\u5217\u3002\r\n\t}\r\n```\r\n\r\n\u7136\u540e\u6211\u4eec\u8981\u6253\u64c2\u53f0\u53d6\u6700\u5c0f\uff0c\u7f16\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u6570\u5b57\u4e2d\u6709\u591a\u5c11\u4e2a $1$\u3002\u4ee5\u6b64\u5224\u65ad\u51fa\u662f\u5426\u662f\u6700\u4f18\u89e3\u3002\r\n\r\n\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 `__builtin_popcount` \u6765\u89e3\u51b3\u3002\r\n\r\n```cpp\r\nint ljp(int n) {\r\n\tint sum = 0;//\u8ba1\u6570\u5668\r\n\twhile(n>0) {\r\n\t\tif(n&1==1) sum++;//\u5982\u679c\u5f53\u524d\u4f4d\u662f1\u8ba1\u6570\u5668\u5c31+1\r\n\t\tn>>=1;//\u8fd9\u4e00\u4f4d\u770b\u5b8c\u4e86\uff0c\u770b\u4e0b\u4e00\u4f4d\u3002\r\n\t}\r\n\treturn sum;\r\n}\r\n```\r\n\r\n\u5bf9\u4e8e\u65e0\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7b54\u6848\u8fd8\u662f\u539f\u6765\u7684\u503c\uff0c\u5c31\u8f93\u51fa $\\texttt{IMPOSSIBLE}$\u3002\r\n\r\n---\r\n\r\n\u5b8c\u6574\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m,x,cnt,mn = INT_MAX,ans[17],t[17],a[17],cz[17];//ans\u4e3a\u5b58\u50a8\u7b54\u6848\uff0ct\u4e3a\u521d\u59cb\u6570\u7ec4\uff0ccz\u4e3a\u64cd\u4f5c\u3002\r\nint ljp(int n) {//\u7edf\u8ba1\u6709\u51e0\u4e2a1\r\n\tint sum = 0;\r\n\twhile(n>0) {\r\n\t\tif(n&1==1) sum++;\r\n\t\tn>>=1;\r\n\t}\r\n\treturn sum;\r\n}\r\nint main() {\r\n\tcin>>n>>m;\r\n\tfor(int i = 1; i<=n; i++) {\r\n\t\tt[i] = 0;\r\n\t\tfor(int j = 1; j<=m; j++) {\r\n\t\t\tcin>>x;\r\n\t\t\tt[i] = t[i]<<1|x;//\u8f93\u5165\u64cd\u4f5c\r\n\t\t}\r\n\t}\r\n\tfor(int i = 0; i<(1<<m); i++) {\r\n\t\tcnt = 0;\r\n\t\tcz[1] = i;\r\n\t\tfor(int j = 1; j<=n; j++) a[j] = t[j];\r\n\t\tfor(int j = 1; j<=n; j++) {\r\n\t\t\tcnt+=ljp(cz[j]);\r\n\t\t\ta[j]^=(cz[j]^(cz[j]>>1)^(cz[j]<<1))&((1<<m)-1);\r\n\t\t\ta[j+1]^=cz[j];\r\n\t\t\tcz[j+1] = a[j];\r\n\t\t}\r\n\t\tif(a[n]==0&&cnt<mn) {//\u53d6\u6700\u5c0f\r\n\t\t\tmn = cnt;\r\n\t\t\tfor(int k = 1; k<=n; k++) ans[k] = cz[k];//\u4fdd\u5b58\u7b54\u6848\r\n\t\t}\r\n\t}\r\n\tif(mn==INT_MAX) {//\u5224\u65ad\u65e0\u89e3\r\n\t\tcout<<\"IMPOSSIBLE\"<<endl;\r\n\t\treturn 0;\r\n\t}\r\n\tfor(int i = 1; i<=n; i++) {\r\n\t\tfor(int j = m; j>=1; j--) {\r\n\t\t\tcout<<(ans[i]>>(j-1)&1)<<' ';//\u8f93\u51fa\uff0c\u6ce8\u610f\u8981\u8fd8\u539f\u3002\r\n\t\t}\r\n\t\tcout<<endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\n",
        "postTime": 1672889997,
        "uid": 714084,
        "name": "LN_CurrentCreator_",
        "ccfLevel": 0,
        "title": "[P1985] \u9898\u89e3"
    },
    {
        "content": "\u4eca\u5929\u4e0a\u5348\u8003\u4e86\u8fd9\u9053\u9898\uff0c\u5f97\u4e8660\u5206\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u5f53\u65f6\u7684\u601d\u8def\u548c\u73b0\u5728AC\u7684\u601d\u8def\n\n\u9898\u76ee\u5173\u952e\u5b57\uff1a\u6700\u5c0f\u6b21\u6570\u3001\u5b57\u5178\u5e8f\n\n\u9996\u5148\u5927\u5bb6\u53ef\u4ee5\u60f3\u4e00\u60f3\uff0c\u7ffb\u52a8\u987a\u5e8f\u6539\u53d8\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u540c\u4e00\u4e2a\u70b9\u7ffb\u4e24\u6b21\u7b49\u4e8e\u6ca1\u7ffb\u3002\n\nso\uff0c\u6bcf\u4e2a\u70b9\u7684\u7ffb\u52a8\u6b21\u6570\u53ea\u53ef\u80fd\u662f0\u62161\n\n\u8fd9\u81ea\u7136\u8ba9\u6211\u4eec\u60f3\u5230\u4e86dfs\uff0c\u6211\u4eec\u4ece\u70b9\uff081,1\uff09\u5f00\u59cb\uff0c\u6bcf\u4e2a\u70b9\u4f9d\u6b21\u653e\u7f6e0\u548c1\uff0c\u5e76\u4e14\u65f6\u523b\u7559\u610f\u526a\u679d\uff1b\n\n\u526a\u679d\u7684\u6761\u4ef6\u662f\u9171\u7d2b\u7684\uff1a\u56e0\u4e3a\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u7684\u7ffb\u52a8\u4f1a\u5f71\u54cd\u5230\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u4f9d\u5b57\u5178\u5e8f\u641c\u5230\u4e86\u67d0\u4e00\u4f4d\u7f6e\u5e76\u5b8c\u6210\u4e86\u7ffb\u52a8\uff0c\u5c31\u5e94\u8be5\u53bb\u68c0\u67e5\u5176\u4e0a\u65b9\u7684\u4f4d\u7f6e\u662f\u5426\u5df2\u7ecf\u6ee1\u8db3\u8981\u6c42\uff08\u7ffb\u6210\u767d\u8272\uff09\uff0c\u82e5\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5219\u526a\u679d\n\n\u5f53\u6211\u4eec\u641c\u5230\u76ee\u6807\u8282\u70b9\uff08m,n\uff09\u65f6\uff0c\u524dm-1\u884c\u90fd\u5df2\u7ecf\u7ffb\u5b8c\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u53bb\u5224\u65ad\u662f\u5426\u6700\u540e\u4e00\u884c\u53ef\u4ee5\u7ffb\u5b8c\n\n\u4e00\u4e2a\u95ee\u9898\uff1a\u7b2c\u4e00\u4e2a\u641c\u5230\u7684\u4e0d\u662f\u6b63\u89e3\uff01\u7b2c\u4e00\u4e2a\u641c\u5230\u7684\u4e0d\u662f\u6b63\u89e3\uff01\u7b2c\u4e00\u4e2a\u641c\u5230\u7684\u4e0d\u662f\u6b63\u89e3\uff01\n\n\u5982\u679c\u6211\u4eec\u53ea\u770b\u5b57\u5178\u5e8f\u7684\u8bdd\uff0c\u5c31\u4e0d\u80fd\u4fdd\u8bc1\u7ffb\u52a8\u6b21\u6570\u4e00\u5b9a\u6700\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e2arecord\u51fd\u6570\uff0c\u7528\u4e8e\u8bb0\u5f55\u6700\u4f18\u89e3\n\n\u7cbe\u9ad3dfs\u6700\u597d\u5e26\u4e09\u4e2a\u53c2\uff0c\u8868\u793a\u5f53\u524d\u70b9\u7684\u5750\u6807\u4ee5\u53ca\u5df2\u7ecf\u7ffb\u52a8\u4e86\u591a\u5c11\u6b21\uff0c\u4e0e\u5df2\u8bb0\u5f55\u5230\u7684\u6700\u5c0f\u503c\u6bd4\u8f83\n\n\n\u5177\u4f53\u8be6\u89c1\u4ee3\u7801\n\n//\u56e0\u4e3a\u4e0b\u4e00\u884c\u7ffb\u52a8\u4f1a\u5f71\u54cd\u4e0a\u4e00\u884c \u6240\u4ee5\u5728i>=2\u65f6\u53ea\u68c0\u67e5\u4e0a\u70b9\uff08\u53ea\u6709\u4e0a\u70b9\u80fd\u786e\u4fdd\u4e0d\u518d\u88ab\u7ffb\u52a8\uff09\n\n//\u90a3\u4e48 \u5728\u641c\u5230\u5e95\u7684\u65f6\u5019 \u8fd8\u8981\u68c0\u67e5\u6700\u4e0b\u9762\u4e00\u884c\u662f\u5426\u6ee1\u8db3\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nbool map[16][16]={0};//\u5f53\u524d\u68cb\u76d8\u7684\u5f62\u5f0f 1\u4e3a\u9ed1(\u9700\u8981\u7ffb\u8f6c) 0\u4e3a\u767d(\u4e0d\u9700\u8981\u7ffb\u8f6c) \nbool ans[16][16]={0};//\u8bb0\u5f55\u7b54\u6848 1\u4e3a\u7ffb\u52a8\u4e86 0\u4e3a\u6ca1\u6709\u7ffb\u52a8 \nbool final[16][16]={0};//\u8bb0\u5f55\u6700\u4f18\u89e3 \nint m,n;\nint Min=2147483647;\nbool check(int x,int y)\n{\n    if (x>=2)\n    {\n        if (map[x-1][y]==0) return true;\n        else return false;\n    }\n    else return true;\n}\nbool check_final()\n{\n    for (int a=1;a<=n;a++)\n       if (map[m][a]) return false;//\u4e00\u65e6\u67091\u5c31\u8bf4\u660e\u4e0d\u901a\u8fc7 \n    return true; \n}\n//\u672c\u9898\u4e0d\u662f\u5355\u7eaf\u5b57\u5178\u5e8f\uff01 \u672c\u9898\u4e0d\u662f\u5355\u7eaf\u5b57\u5178\u5e8f\uff01 \u672c\u9898\u4e0d\u662f\u5355\u7eaf\u5b57\u5178\u5e8f\uff01 \n// \u8fd9\u91cc\u6807\u6ce8\u4e00\u4e2a\u95ee\u9898\uff1a\u672c\u9898\u5148\u6c421\u6570\u76ee\u6700\u5c11\u7684 \u518d\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684 \n//so \u627e\u5230\u7b2c\u4e00\u4e2a\u5e76\u4e0d\u80fd\u76f4\u63a5\u8f93\u51fa \nvoid record(int t)\n{\n    if (t<Min)\n    {\n        for (int i=1;i<=m;i++)\n           for (int j=1;j<=n;j++)\n              final[i][j]=ans[i][j];\n        Min=t;\n    }\n}\nvoid turn(int x,int y)//\u5bf9\u4f4d\u7f6ex y\u8fdb\u884c\u7ffb\u8f6c \n{\n    map[x][y]=map[x][y]?0:1;\n    if (x>1) map[x-1][y]=map[x-1][y]?0:1;\n    if (x<m) map[x+1][y]=map[x+1][y]?0:1;\n    if (y>1) map[x][y-1]=map[x][y-1]?0:1;\n    if (y<n) map[x][y+1]=map[x][y+1]?0:1;\n}\nvoid dfs(int i,int j,int t)//\u4f4d\u7f6e\u662f(i,j) \u5f53\u524d\u7ffb\u8f6c\u7684\u6b21\u6570\u4e3at\n{\n    for (int k=0;k<=1;k++)//\u9009\u62e9\u7ffb\u8fd8\u662f\u4e0d\u7ffb \u5148\u90090\u518d\u90091 \n    {\n        ans[i][j]=k;\n        if (k==1) turn(i,j);\n        if (check(i,j)==0) //\u82e5\u4e0d\u6ee1\u8db3\u5219\u526a\u6389 \n        {\n            if (k==1) turn(i,j);\n            continue;\n        }\n        if (i==m&&j==n) //\u5982\u679c\u5230\u4e86\u76ee\u6807\u70b9 \n        {\n            if (check_final()==1) record(t+k);//\u82e5\u6700\u7ec8\u68c0\u67e5\u4e0d\u901a\u8fc7 \u4e5f\u4e0d\u80fd\u8fc7 \n        }\n        else if (j==n) dfs(i+1,1,t+k);\n        else dfs(i,j+1,t+k);\n        if (k==1) turn(i,j);\n        if (t>=Min) return ;\n    }\n}\nint main()\n{\n    //freopen(\"fliptile.in\",\"r\",stdin);\n    //freopen(\"fliptile.out\",\"w\",stdout);\n    scanf(\"%d %d\",&m,&n);\n    for (int i=1;i<=m;i++)\n       for (int j=1;j<=n;j++)\n          scanf(\"%d\",&map[i][j]);\n    dfs(1,1,0); \n    if (Min==2147483647) printf(\"IMPOSSIBLE\");\n    else for (int i=1;i<=m;i++)\n    {\n        for (int j=1;j<=n;j++)\n            printf(\"%d \",final[i][j]);\n        printf(\"\\n\");  \n    }\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1498986213,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1985 \u3010\u7ffb\u8f6c\u68cb\u3011"
    },
    {
        "content": "\u6b64\u9898\u53ef\u5efa\u7acb\u5f02\u6216\u65b9\u7a0b\u7ec4\uff0c\u518d\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u6765\u89e3\u3002\n\n\u9996\u5148\u5efa\u7acb\u4e00\u4e2a$mn$\u4e2a\u5f02\u6216\u65b9\u7a0b\uff1a\n\n$a_{11}x_{1}$ XOR $a_{12}x_{2}$ XOR ... XOR $a_{1mn}x_{mn}$ = $b_{1}$\n\n$a_{21}x_{1}$ XOR $a_{22}x_{2}$ XOR ... XOR $a_{2mn}x_{mn}$ = $b_{2}$\n\n... ... ...\n\n$a_{mn1}x_{1}$ XOR $a_{mn2}x_{2}$ XOR ... XOR $a_{mnmn}x_{mn}$ = $b_{mn}$\n\n\u5176\u4e2d$b_{i}$\u8868\u793a$i$\u4f4d\u7f6e\u7684\u521d\u59cb\u72b6\u6001\uff1b$a_{ij}$\u82e5\u4e3a1\uff0c\u5219\u8868\u793a$i$\u4f4d\u7f6e\u72b6\u6001\u4f1a\u968f$j$\u4f4d\u7f6e\u72b6\u6001\u7684\u6539\u53d8\u800c\u6539\u53d8\uff08\u6ce8\u610f$i$\u548c$j$\u4e0d\u8981\u8bb0\u53cd\uff09\uff0c\u663e\u7136\uff0c\u5728\u6b64\u9898\u4e2d\uff0c\u5bf9\u4e8e\u4efb\u610f$ni+j$\uff0c\u4ec5$a_{ni+j,ni+j}$ \u3001$a_{(n-1)i+j,ni+j}$ \u3001$a_{(n+1)i+j,ni+j}$\u3001$a_{ni+j-1,ni+j}$\u3001$a_{ni+j+1,ni+j}$\u4e3a1;$x_i$\u82e5\u4e3a1\uff0c\u5219\u8868\u793a\u8981\u7ffb$i$\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u5efa\u7acb\u589e\u5e7f\u77e9\u9635\uff0c\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u6d88\u6210\u9636\u68af\u5f62\u77e9\u9635\uff0c\u5373\uff1a\n\n$a_{11}$ $a_{12}$ $a_{13}$  ... $a_{1mn}$ $b_{1}$  \n\n0  $a_{22}$ $a_{23}$ ... $a_{2mn}$ $b_{2}$ \n\n0  0  $a_{33}$ ... $a_{3mn}$ $b_{3}$\n\n... ... ...\n\n0 0 0 ... $a_{mnmn}$ $b_{mn}$   \n\n\u6ce8\u610f\u6bcf\u6b21\u6d88\u662f\u5f02\u6216\u6574\u884c\uff0c\u4e0d\u662f\u52a0\u6216\u51cf\u3002\n\n\u4e4b\u540e\u518d\u4ece\u4e0b\u5f80\u4e0a\u6d88\u3002\u82e5\u67d0\u884c$a_{ii}$ \u4e3a 1 \uff0c\u5219$x_{i}$\u53ea\u6709\u4e00\u4e2a\u53d6\u503c$b_{i}$\uff1b\u82e5$a_{ii}$\u4e0e$b_{i}$\u5747\u4e3a0\uff0c\u5219$x_{i}$\u4e3a1\u62160\u5747\u53ef\uff0c\u5206\u522b\u4ee3\u5165\u540e\u53d6\u8f83\u4f18\u7684\uff1b\u82e5$a_{ii}$\u4e3a0\u4f46$b_{i}$\u4e3a1\uff0c\u663e\u7136\u662f\u65e0\u89e3\u7684\u3002           \n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(m^3n^3)$\uff0c\u4f46\u662f\u5e38\u6570\u8f83\u5c0f\uff0c\u53ef\u4ee50ms\u8dd1\u8fc7\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#define LL long long\n#define Max(a,b) (((a)>(b))?(a):(b))\n#define Min(a,b) (((a)>(b))?(b):(a))\n#define For(a,b,c,d) for(register int a=b;a<=c;a+=d)\n#define FOR(a,b,c,d) for(register int a=b;a<c;a+=d)\n#define Rep(a,b,c,d) for(register int a=b;a>=c;a-=d)\n#define REP(a,b,c,d) for(register int a=b;a>c;a-=d)\n#define INF 0xffffff\n\nconst int N = 230 , mx[ 4 ] = { 1 , 0 , -1 , 0 } , my[ 4 ] = { 0 , 1 , 0 , -1 } ;\nint n , m , r ; \nint a[ N ][ N ] , ans[ N ] , b[ N ] , minn ;\n\ninline void Swap( int i , int j , int p ) {\n    For( k , p , r , 1 ) {\n        std::swap( a[ i ][ k ] , a[ j ][ k ] ) ;\n    }\n}\n\ninline void Xor( int i , int j , int p ) {\n    For( k , p , r , 1 ) {\n        a[ i ][ k ] ^= a[ j ][ k ] ;\n    }\n}\n\nvoid dfs( int res , int cnt ) {\n\tif( cnt > minn )\n\t\treturn ;\n\tif( res < 0 ) {\n\t\tFOR( i , 0 , r , 1 ) {\n\t\t\tans[ i ] = b[ i ] ;\n\t\t}\n\t\tminn = Min( minn , cnt ) ;\n\t\treturn ; \n\t}\n \tif( !a[ res ][ res ] && a[ res ][ r ] ) {\n    \treturn ;\n    }\n    std::vector< int > vis ;\n    if( !a[ res ][ res ] && !a[ res ][ r ] ) {\n    \tb[ res ] = a[ res ][ r ] = 1 ;\n        Rep( j , res - 1 , 0 , 1 ) {\n\t        if( a[ j ][ res ] ) {\n\t            a[ j ][ r ] ^= 1 ;\n\t            vis.push_back( j ) ;\n\t        }\n    \t}\n    \tdfs( res - 1 , cnt + 1 ) ;\n\t\tRep( j , vis.size() - 1 , 0 , 1 ) {\n\t\t\ta[ vis[ j ] ][ r ] ^= 1 ;\n\t\t}\n\t\ta[ res ][ r ] = b[ res ] = 0 ; \n    \tdfs( res - 1 , cnt ) ;\n    \treturn ;\n    }\n    b[ res ] = a[ res ][ r ] ;\n    if( b[ res ] ) {\n\t    Rep( j , res - 1 , 0 , 1 ) {\n\t        if( a[ j ][ res ] ) {\n\t            a[ j ][ r ] ^= 1 ;\n\t            vis.push_back( j ) ;\n\t        }\n\t    }\n\t\tdfs( res - 1 , cnt + b[ res ] ) ; \n\t\tRep( j , vis.size() - 1 , 0 , 1 ) {\n\t\t\ta[ vis[ j ] ][ r ] ^= 1 ;\n\t\t}\n\t}\n\telse {\n\t\tdfs( res - 1 , cnt ) ;\n\t}\n}\n\nint main() {\n    scanf(\"%d %d \", &n , &m ) ;\n    int t , p , tx , ty ;\n    r = m * n ;\n    FOR( i , 0 , n , 1 ) {\n        FOR( j , 0 , m , 1 ) {\n            p = i * m + j ;\n            scanf(\"%d\", &t ) ;\n            if( t )\n                a[ p ][ r ] = 1 ;\n            a[ p ][ p ] = 1 ;\n            For( k , 0 , 3 , 1 ) {\n                tx = i + mx[ k ] ;\n                ty = j + my[ k ] ;\n                if( tx < 0 || ty < 0 || tx >= n || ty >= m )\n                    continue ; \n                a[ tx * m + ty ][ p ] = 1 ;\n            }\n        } \n    }\n    bool flag ;\n    FOR( i , 0 , r , 1 ) {\n        flag = 0 ;\n        FOR( j , i , r , 1 ) {\n            if( a[ j ][ i ] ) {\n                flag = 1 ;\n                Swap( j , i , i ) ;\n                break ;\n            }\n        }\n        if( !flag )\n            continue ;\n        FOR( j , i + 1 , r , 1 ) {\n            if( a[ j ][ i ] )\n                Xor( j , i , i ) ;\n        }\n    }\n    minn = INF ;\n    dfs( r - 1 , 0 ) ;\n\tif( minn == INF ) {\n\t\tprintf(\"IMPOSSIBLE\") ;\n    \texit( 0 ) ;\n\t}\n    FOR( i , 0 , n , 1 ) {\n        FOR( j , 0 , m , 1 ) {\n            printf(\"%d \" , ans[ i * m + j ] ) ;\n        }\n        printf(\"\\n\") ;\n    }\n    return 0 ;\n} \n```\n",
        "postTime": 1518847800,
        "uid": 30042,
        "name": "\u6797\u5219\u5f90",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1985 \u3010[USACO07OPEN]\u7ffb\u8f6c\u68cb\u3011"
    },
    {
        "content": "## \u679a\u4e3e\n\n\u6211\u4eec\u53d1\u73b0\u5f53\u7b2c\u4e00\u884c\u786e\u5b9a\u4e0b\u6765\u4e4b\u540e,\u8981\u6ee1\u8db3\u5408\u6cd5,\u53ea\u80fd\u901a\u8fc7\u6539\u53d8\u4e0b\u4e00\u884c\u7684\u60c5\u51b5\u6765\u4f7f\u4e0a\u4e00\u884c\u5408\u6cd5.\n\n\u4e5f\u5c31\u662f\u8bf4,\u5f53\u524d\u884c\u53ef\u4ee5\u4e0d\u7528\u5408\u6cd5,\u4f46\u662f\u518d\u4e0b\u4e00\u884c\u8fdb\u884c\u7684\u64cd\u4f5c\u4e00\u5b9a\u53ef\u4ee5\u4f7f\u5f53\u524d\u884c\u5408\u6cd5\u3002\n\n\u6240\u4ee5\u5f53\u524d\u4f4d\u7f6e$(x_i,y_i)$\u9700\u8981\u6539\u53d8\u7684\u6761\u4ef6\u5c31\u662f$(x_{i-1},y_i)$\u5728\u672c\u6b21\u64cd\u4f5c\u524d\u662f1\n\n\u8fd9\u6b21\u64cd\u4f5c\u5168\u90e8\u5408\u6cd5\u5c31\u662f\u6700\u540e\u4e00\u884c\u6539\u53d8\u540e\u5168\u662f0;\n\n\u4e8e\u662f\u5c31\u679a\u4e3e\u7b2c\u4e00\u884c\u7684\u6539\u53d8,\u5269\u4e0b\u7684\u884c\u548c\u5217\u5c31\u9012\u63a8\u51fa\u6765\u3002\n\n\u6211\u679a\u4e3e\u7684\u65b9\u5f0f\u662f\u4e8c\u8fdb\u5236~~(\u5176\u5b9e\u662f\u4e0d\u592a\u4f1adfs)~~\u5f53\u524d\u4f4d\u7f6e\u9700\u8981\u6539\u53d8\u5c31\u662f\u5f53\u524d\u6240\u5728\u7684\u4e8c\u8fdb\u5236\u6570\u662f1\n\n\u5224\u65ad\u5f53\u524d\u662f\u5426\u6539\u53d8,\u53ea\u8981\u770b\u5f53\u524d\u6240\u679a\u4e3e\u7684\u6570x and(1<<\u4f4d\u7f6e)\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<cmath>\n#define ll long long\nusing namespace std;\nconst int maxn=20;\ninline int read(){\n    int an=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while('0'<=ch&&ch<='9'){an=(an<<3)+(an<<1)+ch-'0';ch=getchar();}\n    return an*f;\n}\nint n,m,map[maxn][maxn];\nint Kasumi[maxn][maxn];\nint remember[maxn][maxn];//\u8f93\u51fa\u7b54\u6848\nbool change[maxn][maxn];//\u5f53\u524d\u6539\u53d8\u7684\u4f4d\u7f6e\nint tep=2333333;//\u5f53\u524d\u7b54\u6848\u7684\u64cd\u4f5c\u6b21\u6570\ninline void kk(){\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)Kasumi[i][j]=map[i][j];\n    memset(change,0,sizeof change);\n}\ninline void dfs(int prepare){\n    kk();int tot=0;\n    for(int i=1;i<=m;i++){\n        if(!prepare)continue;\n        if(prepare&(1<<i-1)){//\u4ece\u5c0f\u5230\u5927,\u5b57\u5178\u5e8f\u6700\u4f18\n        int now=m-i+1;tot++;\n        Kasumi[1][now-1]^=1;\n        Kasumi[1][now+1]^=1;\n        Kasumi[1][now]^=1;\n        Kasumi[2][now]^=1;\n        change[1][now]=1;\n        }\n    }\n    for(int i=2;i<=n;i++)\n    for(int j=1;j<=m;j++){\n        if(Kasumi[i-1][j]){\n        tot++;\n        Kasumi[i][j-1]^=1;\n        Kasumi[i][j+1]^=1;\n        Kasumi[i][j]^=1;\n        Kasumi[i+1][j]^=1;\n        change[i][j]=1;\n        }\n    }\n    if(tot<tep){\n        for(int i=1;i<=m;i++)if(Kasumi[n][i])return ;//\u5224\u65ad\u6700\u540e\u4e00\u884c\n        tep=tot;\n        for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        remember[i][j]=change[i][j];\n    }\n}\nint main(){\n    n=read();m=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)map[i][j]=read();\n    for(int i=0;i<=(1<<m)-1;i++){//\u679a\u4e3e\n        dfs(i);\n    }\n    if(tep==2333333)cout<<\"IMPOSSIBLE\";\n    else{\n        for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++)cout<<remember[i][j]<<\" \";\n        cout<<endl;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1508725434,
        "uid": 24570,
        "name": "s_a_b_e_r",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1985 \u3010\u7ffb\u8f6c\u68cb\u3011"
    },
    {
        "content": "# 1 \u9898\u76ee\u7b80\u4ecb\n## 1.1 \u9898\u76ee\u5927\u7eb2\n\u5728\u4e00\u4e2a $N\u00d7M$ \u7684\u68cb\u76d8\u91cc\uff0c\u6bcf\u4e2a\u683c\u5b50\u7684\u989c\u8272\u8981\u4e0d\u662f\u9ed1\uff0c\u8981\u4e0d\u662f\u767d\u3002\n\u8fd9\u65f6\uff0c\u7ea6\u7ff0FJ \u53eb\u5976\u725b\u4eec\u5728\u8fd9\u79cd\u68cb\u76d8\u4e0a\u8fdb\u884c\u4e00\u79cd\u64cd\u4f5c\uff1a\u9009\u5b9a\u4efb\u610f\u4e00\u4e2a\uff0c\u8be5\u683c\u548c\u8fd9\u4e2a\u683c\u5b50\u76f8\u90bb\u7684\u56db\u4e2a\u683c\u5b50\u90fd\u4f1a\u53d8\u8272\u3002\u8bf7\u627e\u51fa\u4e00\u79cd\u529e\u6cd5\uff0c\u4f7f\u7528\u5c3d\u91cf\u5c11\u7684\u64cd\u4f5c\uff0c\u4f7f\u5f97\u68cb\u4e0a\u7684\u6240\u6709\u683c\u5b50\u90fd\u4e3a\u767d\u8272\u3002\n## 1.2 \u9898\u76ee\u96be\u5ea6\n\u5185\u5bb9|\u5b9e\u9645\u96be\u5ea6\n:-: | :-:\n\u601d\u8def\u96be\u5ea6|\u620a\n\u4ee3\u7801\u96be\u5ea6|\u4e19\n\u7ec6\u8282\u96be\u5ea6|\u4e59\n# 2 \u601d\u8def\u5206\u6790\n\u8fd9\u4e00\u9898\uff0c\u770b\u8d77\u6765\u86ee\u96be\u7684\uff0c\u5176\u5b9e\u4e0d\u96be\u3002\u5927\u5bb6\u7684\u601d\u8def\u4e5f\u8bb8\u662f\u2014\u2014\u7eaf\u7cb9\u66b4\u529b\u679a\u4e3e\u3002\u5f53\u7136\uff0c\u8fd9\u9053\u9898\u7684\u6b63\u89e3\u5c31\u662f\u66b4\u529b\u679a\u4e3e\u5566\u2026\u2026\u53ef\uff0c\u5173\u952e\u662f\u600e\u6837\u66b4\u529b\u679a\u4e3e\u3002\u63d0\u4f9b\u6709\u4e24\u79cd\u529e\u6cd5\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\n\n**\u601d\u8def\u4e00**\n\n\u6700\u7b80\u5355\u53c8\u6700\u7b80\u6734\u7684\u601d\u8def\uff1a\u5c31\u662f\u6bcf\u4e00\u79cd\u5168\u90e8\u5224\u5b9a\u4e00\u904d\u5566\u2026\u2026\u9996\u5148\uff0c\u5f97\u660e\u767d\u4e3a\u4ec0\u4e48\u6bcf\u4e00\u4e2a\u65b9\u683c\u8981\u4e0d\u7ffb\u8f6c\u4e00\u904d\uff0c\u8981\u4e0d\u4e0d\u7ffb\u8f6c\u3002\u56e0\u4e3a\uff1a\u82e5\u5f53\u4efb\u610f\u4e00\u4e2a\u5df2\u7ecf\u7ffb\u8fc7\u4e00\u904d\u4e86\uff0c\u518d\u7ffb\u7b2c\u4e8c\u904d\uff0c\u663e\u7136\uff0c\u7b2c\u4e00\u904d\u7ffb\u8fc7\u7684\u683c\u5b50\u7b2c\u4e8c\u904d\u53c8\u88ab\u7ffb\u8fc7\u4e00\u6b21\uff0c\u6062\u590d\u539f\u6837\uff0c\u6ca1\u6709\u610f\u4e49\u3002\u6240\u4ee5\u6700\u591a\u7ffb\u4e00\u904d\u3002\u6bcf\u79cd\u683c\u5b50\u8981\u4e0d\u7ffb\u4e00\u904d\uff0c\u8981\u4e0d\u4e0d\u7ffb\u3002\u6240\u4ee5\u6211\u4eec\u9012\u5f52\u7684\u641c\u7d22\u6bcf\u4e00\u4e2a\u683c\u5b50\uff0c\u6267\u884c\u4e24\u79cd\u60c5\u51b5\uff1a\u7ffb\u548c\u4e0d\u7ffb\u3002\n\n**DFS \u641c\u7d22**\n\n\u63a5\u4e0b\u6765\u5c31\u8981\u641c\u7d22\u5566\uff01\n\u641c\u7d22\u7684\u603b\u601d\u8def\u5982\u4e0b\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u4e24\u79cd\u60c5\u51b5\uff08\u5982\u4e0a\u8ff0\uff09\uff1b\u78b0\u5230\u8be5\u884c\u8fb9\u754c\u65f6\uff0c\u8df3\u5230\u4e0b\u4e00\u884c\u53bb\uff0c\u7ee7\u7eed\u641c\u7d22\u3002\u90a3\u6709\u7684\u540c\u5b66\u4f1a\u95ee\u4e86\uff1a\u65e2\u7136\u8981\u6700\u5c0f\u503c\uff0c\u90a3\u600e\u4e48\u7edf\u8ba1\u5462\uff1f\u6ca1\u5173\u7cfb\uff0c\u76f4\u5230\u6240\u6709\u7684\u9012\u5f52\u641c\u7d22\u6267\u884c\u5b8c\u6bd5\uff0c\u4e5f\u5c31\u662f\u9012\u5f52\u5230\u7b2c $m+1$ \u884c\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6267\u884c\u7edf\u8ba1\u3002\u800c\u8fd9\u4e2a\u7edf\u8ba1\u4e5f\u662f\u7a0d\u8f83\u9ebb\u70e6\u7684\u3002\u9996\u5148\uff0c\u6211\u4eec\u628a\u6240\u6709\u7684\u72b6\u6001\u5168\u90e8\u7edf\u8ba1\u51fa\u6765\u4e86\uff0c\u5176\u4e2d\u5fc5\u5b9a\u6709\u4e0d\u662f\u7b26\u5408\u6807\u51c6\u7684\u72b6\u6001\uff0c\u8fd9\u79cd\u9519\u8bef\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u683c\u5b50\u91cc\u6709\u9ed1\u8272\u68cb\u5b50\u7684 ($1$) \u3002\u6211\u4eec\u5c31\u8981\u5728\u7edf\u8ba1\u4e4b\u524d\uff0c\u628a\u8fd9\u79cd\u60c5\u51b5\u7684\u72b6\u6001\u7ed3\u675f\u8fd0\u884c\u3002\u81f3\u4e8e\u600e\u4e48\u5199\u4ee3\u7801\uff0c\u5c31\u7b80\u5355\u4e86\u3002\u4ece\u7b2c $1$ \u884c\u7b2c $1$ \u5217\u5230\u7b2c $m$ \u884c\u7b2c $n$ \u5217\uff0c\u6301\u7eed\u641c\u7d22\u6709\u6ca1\u6709\u51fa\u73b0 $1$ \u7684\uff0c\u82e5\u6709\uff0c\u51fd\u6570 $return;$ \uff0c\u5426\u5219\uff0c\u7ee7\u7eed\u8fd0\u884c\u3002\n\n```cpp\nvoid search_dfs(int x,int y){//\u53c2\u6570\u7528\u6765\u8868\u793a\u7b2cx\u884c\u7b2cy\u5217\n\tif(y==m+1){//\u5f53\u524d\u8282\u70b9\u8d8a\u754c\uff08\u884c\uff09\n\t\tsearch_dfs(x+1,1);//\u8df3\u81f3\u4e0b\u4e00\u884c\n\t\treturn;//\u522b\u5fd8\u8bb0\u4e86\uff0c\u4e0d\u7136\u6570\u7ec4\u8d8a\u754c\u5c31\u9ebb\u70e6\u4e86\n\t}\n\tif(x==n+1){//\u5f53\u524d\u8282\u70b9\u8d8a\u754c\uff08\u5217\uff09\n\t\tint sum=0;//\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u7ffb\u8f6c\u603b\u6570\n\t\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++){\n\t\t\tif(a[i][j])return;//a\u6570\u7ec4\u50a8\u5b58\u5f53\u524d\u72b6\u6001\n\t\t\tif(b[i][j])sum++;//b\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7ffb\u8f6c\u6570\n\t\t}\n\t\th=1;//h\u4fdd\u5b58\u662f\u5426\u5b58\u5728\u53ef\u884c\u60c5\u51b5\n\t\tif(sum<minx){//\u5f53\u5f53\u524d\u503c\u5c0f\u4e8e\u6700\u5c0f\u503c\n\t\t\tminx=sum;//\u4fdd\u5b58\n\t\t\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++){\n\t\t\t\tc[i][j]=b[i][j];//\u4fdd\u5b58\u6700\u4f18\u72b6\u6001\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tsearch_dfs(x,y+1);//\u5b57\u5178\u5e8f\uff0c\u51480\u540e1\n\tfor(int i=0;i<=4;i++){//\u7ffb\u8f6c\u540e\uff0ca\u7684\u72b6\u6001\u8981\u6539\u53d8\n\t\ta[x+d[i]][y+e[i]]=1-a[x+d[i]][y+e[i]];//\u5f53\u524d\u3001\u524d\u540e\u5de6\u53f3\n\t}\n\tb[x][y]=1;//\u5f53\u524d\u8282\u70b9\u5df2\u7ffb\u8f6c\u8fc7\n\tsearch_dfs(x,y+1);\n\t//\u4e0b\u9762\u5747\u4e3a\u56de\u6eaf\u6d41\u7a0b\n\tfor(int i=0;i<=4;i++){\n\t\ta[x+d[i]][y+e[i]]=1-a[x+d[i]][y+e[i]];\n\t}\n\tb[x][y]=0;\n}\n```\n$but$\uff0c\u5b9e\u6d4b $47$ \uff0cTLE $6$ \u4e2a\u6570\u636e\u70b9\u3002\u8fd8\u662f\u8981\u4f18\u5316\u6ef4~\n\n**\u601d\u8def\u4e8c**\n\n\u4e0a\u4e00\u4e2a\u601d\u8defTLE\u4e86\u2026\u2026\n\u90a3\u600e\u4e48\u4f18\u5316\u5462\uff1f\u8fd9\u4e2a\u53ef\u662f\u4e2a\u96be\u70b9\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u60f3\u5230\u5982\u679c\u7b2c\u4e00\u884c\u7684\u72b6\u6001\u786e\u5b9a\u4e0b\u6765\u4e86\uff0c\u7b2c\u4e8c\u884c\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u5176\u5b9e\u8fd9\u5f88\u597d\u60f3\u7684\u3002\u56e0\u4e3a\u4ee5\u7b2c $1$ \u884c\u7b2c $1$ \u5217\u4e3a\u4f8b\uff0c\u82e5\u5f53\u524d\u72b6\u6001\u4e3a $1$ \uff0c\u7b2c $2$ \u884c\u7b2c $1$ \u5217\u5fc5\u987b\u662f $1$ \uff0c\u8fd9\u6837\u624d\u80fd\u6ee1\u8db3  $1-1=0$ \u3002\u7b80\u5355\u5427\uff01\n\n**DFS \u641c\u7d22**\n\nDFS \u641c\u7d22\u548c\u524d\u9762\u6ca1\u4ec0\u4e48\u533a\u522b\u5566\u2026\u2026\u5c31\u662f\u786e\u5b9a\u7b2c\u4e00\u884c\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u53ea\u5e26\u4e00\u4e2a\u53c2\u6570\n\n```cpp\nvoid search_dfs(int x){\n\tif(x==m+1){//\u6570\u7ec4\u8d8a\u754c\n\t\tdp_xxpanduan(2,1);//\u8df3\u5230\u5224\u65ad\u5373\u53ef\n\t\treturn;\n\t}\n\tsearch_dfs(x+1);\n\tfor(int i=0;i<=4;i++){\n\t\ta[1+d[i]][x+e[i]]=1-a[1+d[i]][x+e[i]];\n\t}\n\tb[1][x]=1;\n\tsearch_dfs(x+1);\n\tfor(int i=0;i<=4;i++){\n\t\ta[1+d[i]][x+e[i]]=1-a[1+d[i]][x+e[i]];\n\t}\n\tb[1][x]=0;\n}\n```\n\n**\u5224\u65ad**\n\n\u96be\u5728\u5224\u65ad\u554a\uff01\u5176\u5b9e\u4e5f\u4e0d\u96be\u3002\u6839\u636e\u524d\u9762\u7684\u63a8\u5bfc\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u5982\u4e0b\u9012\u63a8\u5f0f\uff1a $dp_{i,j}=1-dp_{i-1,j}$\u3002\u7136\u540e\uff0c\u63a8\u51fa\u7b2c $2$ \u884c\u81f3\u7b2c $n$ \u884c\u3002\u4f46\u662f\u63a8\u5b8c\u540e\uff0c\u6211\u4eec\u8fd8\u4e0d\u80fd\u786e\u5b9a\u5f53\u524d\u72b6\u6001\u662f\u5426\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u8fd8\u8981\u52a0\u4ee5\u5224\u65ad\u5566\uff01\u5176\u5b9e\u601d\u8def\u4e8c\u5927\u90e8\u5206\u4ee3\u7801\u548c\u601d\u8def\u4e00\u5dee\u4e0d\u591a\u3002\n\n```cpp\nvoid dp_xxpanduan(int x,int y){\n\tif(y==m+1){\n\t\tdp_xxpanduan(x+1,1);\n\t\treturn;\n\t}\n\tif(x==n+1){\n\t\tint sum=0;\n\t\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++){\n\t\t\tif(a[i][j])return;\n\t\t\tif(b[i][j])sum++;\n\t\t}\n\t\th=1;\n\t\tif(sum<minx){\n\t\t\tminx=sum;\n\t\t\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++){\n\t\t\t\tc[i][j]=b[i][j];\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tif(!a[x-1][y]){//\u51480\u540e1\n\t\tdp_xxpanduan(x,y+1);\n\t}else{\n\t\tfor(int i=0;i<=4;i++){\n\t\t\ta[x+d[i]][y+e[i]]=1-a[x+d[i]][y+e[i]];\n\t\t}\n\t\tb[x][y]=1;\n\t\tdp_xxpanduan(x,y+1);\n\t\tfor(int i=0;i<=4;i++){\n\t\t\ta[x+d[i]][y+e[i]]=1-a[x+d[i]][y+e[i]];\n\t\t}\n\t\tb[x][y]=0;\n\t}\n}\n```\n\n# 3 AC\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,m,a[20][20],b[20][20],c[20][20],d[5]={0,0,1,0,-1},e[5]={0,1,0,-1,0},minx,h;\nvoid dp_xxpanduan(int x,int y){\n\tif(y==m+1){\n\t\tdp_xxpanduan(x+1,1);\n\t\treturn;\n\t}\n\tif(x==n+1){\n\t\tint sum=0;\n\t\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++){\n\t\t\tif(a[i][j])return;\n\t\t\tif(b[i][j])sum++;\n\t\t}\n\t\th=1;\n\t\tif(sum<minx){\n\t\t\tminx=sum;\n\t\t\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++){\n\t\t\t\tc[i][j]=b[i][j];\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tif(!a[x-1][y]){\n\t\tdp_xxpanduan(x,y+1);\n\t}else{\n\t\tfor(int i=0;i<=4;i++){\n\t\t\ta[x+d[i]][y+e[i]]=1-a[x+d[i]][y+e[i]];\n\t\t}\n\t\tb[x][y]=1;\n\t\tdp_xxpanduan(x,y+1);\n\t\tfor(int i=0;i<=4;i++){\n\t\t\ta[x+d[i]][y+e[i]]=1-a[x+d[i]][y+e[i]];\n\t\t}\n\t\tb[x][y]=0;\n\t}\n}\nvoid search_dfs(int x){\n\tif(x==m+1){\n\t\tdp_xxpanduan(2,1);\n\t\treturn;\n\t}\n\tsearch_dfs(x+1);\n\tfor(int i=0;i<=4;i++){\n\t\ta[1+d[i]][x+e[i]]=1-a[1+d[i]][x+e[i]];\n\t}\n\tb[1][x]=1;\n\tsearch_dfs(x+1);\n\tfor(int i=0;i<=4;i++){\n\t\ta[1+d[i]][x+e[i]]=1-a[1+d[i]][x+e[i]];\n\t}\n\tb[1][x]=0;\n}\nint main(){\n\th=0;\n\tminx=400;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=m;j++){\n\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tsearch_dfs(1);\n\tif(h){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tprintf(\"%d \",c[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}else{\n\t\tif(minx==400)printf(\"IMPOSSIBLE\");\n\t\telse{for(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tprintf(\"%d \",0);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n//\u9009\u81ea\u672c\u4ebaCSDN\u535a\u5ba2",
        "postTime": 1596720094,
        "uid": 305891,
        "name": "little_vegetable",
        "ccfLevel": 5,
        "title": "P1985 \u7ffb\u8f6c\u68cb"
    },
    {
        "content": "\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u6765\u4f18\u5316\u8fd9\u9053\u9898\u76ee\uff1b\n\n\u867d\u7136\u597d\u50cf\u6ca1\u6709\u67d0\u4e9b\u53cc\u4e0b\u5212\u7ebf\u8dd1\u7684\u5feb\u54c7\uff1b\n\n\u9898\u76ee\u600e\u4e48\u505a\u5462\u5c31\u662f\u6211\u4eec\u628a\u7b2c\u4e00\u884c\u8981\u6539\u7684\u679a\u4e3e\u4e00\u8fb9\uff0c\u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u884c\u7684\u72b6\u6001\u76f4\u63a5\u786e\u5b9a\u7b2c\u4e8c\u884c\u7684\u72b6\u6001\u4e86\uff1b\n\n\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\n\n2^16\\*16\\*16\n\n\u90a3\u4e48\u6211\u4eec\u7528\u4f4d\u8fd0\u7b97\u53bb\u538b\u6389\u4e00\u4f4d\u7684\u65f6\u5019\n\n\u5e38\u6570\u7406\u8bba\u4e0a\u5c31\u4f1a\u51cf\u5c0f16\uff1b\n\n\u4ee3\u7801\u8c8c\u4f3c\u4e5f\u4f1a\u77ed\u4e00\u70b9\uff1b\n\n\u548b\u4e48\u4e8c\u8fdb\u5236\u4e0d\u8bf4\u4e86\uff0c\u60f3\u4e0d\u901a\u53ef\u4ee5\u770b\u770b\u6211\u7684B\u51fd\u6570\n\n```cpp\n#include<bits/stdc++.h>\n#define Ll long long\nusing namespace std;\nconst int N=20;\nint a[N],b[N],c[N],d[N],p[1<<15];\nint n,m,ans=1e9,x;\nvoid B(int i,int v){//\u628ab[i]\u8fd9\u4e2a\u503c\u7528v\u7684\u64cd\u4f5c\u53cd\u8f6c\uff0cv\u4e8c\u8fdb\u5236\u4e2d\u7684\u4e00\u4f4d\u5982\u679c\u662f1\u5c31\u5e26\u8868\u8fd9\u4e00\u4f4d\u53cd\u8f6c \n    int x=b[i]&v;\n    int y=v-x;\n    b[i]&=~x;\n    b[i]|=y;\n}\nvoid dfs(int k,int v,int sum){//\u5f53\u524d\u5728\u505ab[k]\uff0cv\u662f\u8fd9\u4e00\u884c\u8be5\u600e\u4e48\u53cd\u8f6c\uff0csum\u5c31\u662f\u7ffb\u4e86\u51e0\u4e2a \n    sum+=p[v];\n    if(sum>=ans)return;\n    if(k>n){\n        if(v!=0)return;\n        ans=sum;\n        for(int i=1;i<=n;i++)d[i]=c[i];\n        return;\n    }\n    c[k]=v;\n    B(k,v);B(k+1,v);B(k,(v<<1)&((1<<m)-1));B(k,(v>>1));\n    dfs(k+1,(~b[k])&((1<<m)-1),sum);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<(1<<m);i++)\n        for(int k=i;k;k-=k&-k)p[i]++;//\u8fd9\u4e2a\u53eblowbit \n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            scanf(\"%d\",&x);\n            a[i]=a[i]*2+x^1;//\u7531\u4e8e\u6211\u7684\u7b97\u6cd5\u539f\u56e0\uff0c\u8f93\u5165\u8981\u53cd\u4e00\u4e0b \n        }\n    for(int i=0;i<(1<<m);i++){\n        for(int j=1;j<=n;j++)b[j]=a[j];\n        dfs(1,i,0);\n    }\n    if(ans==1e9)puts(\"IMPOSSIBLE\");else \n    for(int i=1;i<=n;i++){\n        for(int j=m;j;j--)\n            if(d[i]>=(1<<(j-1)))d[i]-=(1<<(j-1)),printf(\"1 \");else printf(\"0 \");\n        puts(\"\");\n    }\n}\n```",
        "postTime": 1507622669,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2892 \u3010[USACO07OPEN]Fliptile\u3011"
    },
    {
        "content": "\u7531\u4e8e\u7b2c\u4e00\u884c\u7684\u4fee\u6539\u65b9\u6848\u786e\u5b9a\u4e4b\u540e\uff0c\u6bcf\u4e00\u884c\u7684\u4fee\u6539\u65b9\u6848\u5c31\u786e\u5b9a\u4e86\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u7528dfs\u679a\u4e3e\u7b2c\u4e00\u884c\u7684\u4fee\u6539\u65b9\u6848\u3002\n\n\u800c\u63a5\u4e0b\u6765\u7684\u884c\u6570\u4fee\u6539\u7684\u6700\u4f73\u65b9\u6848\u662f\u5c06\u4e3a1\u7684\u6570\u7684\u6b63\u4e0b\u65b9\u7684\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u8fd9\u6837\u7684\u597d\u5904\u662f\u6bcf\u884c\u5904\u7406\u5b8c\u53ea\u9700\u8981\u8003\u8651\u4e0b\u4e00\u884c\uff0c\u4e0d\u9700\u8981\u8003\u8651\u4ee5\u4e0a\u7684\u884c\u6570\u3002\n\n              \n            \n                \n                \n```cpp\n#include<cstdio>  \n#include<cstring>  \n#include<iostream>  \n#include<algorithm>  \nusing namespace std;  \nint n,m,f[1001][1001],ans[1001][1001],cz[1001][1001],a[1001][1001],minn=1000000009;  \nvoid dfs(int);\nint main()  \n{  \n    scanf(\"%d%d\",&n,&m);  \n    for(int i=1;i<=n;i++)  \n            for(int j=1;j<=m;j++)  \n               cin>>a[i][j];\n   dfs(1);  \n        if(minn==1000000009) cout<<\"IMPOSSIBLE\";  //\u6700\u5c0f\u503c\u6ca1\u6709\u6539\u53d8\uff0c\u5373\u4e0d\u53ef\u80fd\n    else  \n    {  \n        for(int i=1;i<=n;i++)  \n        {  \n            for(int j=1;j<=m;j++)  \n            cout<<ans[i][j]<<\" \";  \n               cout<<endl;\n        }  \n    }  \n}\nvoid dfs(int lie)  \n{  \n    if(lie>m)  \n    {  \n        for(int i=1;i<=n;i++)  \n            for(int j=1;j<=m;j++)  \n            cz[i][j]=a[i][j];//\u5b9a\u4e49\u4e00\u4e2a\u64cd\u4f5c\u6570\u7ec4\u6765\u4fdd\u5b58a\u6570\u7ec4\uff1b\n        for(int i=1;i<=m;i++)  \n            if(f[1][i])  //\u5df2\u77e5\u7b2c\u4e00\u884c\u7684\u4fee\u6539\u65b9\u6848\uff0c\u8fdb\u884c\u9898\u76ee\u8981\u6c42\u4fee\u6539\u3002\n                {  \n                cz[1][i]^=1,cz[2][i]^=1;  \n                    cz[1][i+1]^=1,cz[1][i-1]^=1;  \n                }  \n        for(int i=2;i<=n;i++)  \n                for(int j=1;j<=m;j++)  \n                {  \n                if(cz[i-1][j]==1)  \n                {  \n                f[i][j]=1;  \n                cz[i][j]^=1;  \n                cz[i][j+1]^=1,cz[i][j-1]^=1;  \n                cz[i+1][j]^=1,cz[i-1][j]^=1;  //\u82e5\u7b2ci\u884c\u4e3a1\uff0c\u5219\u4fee\u6539i+1\u884c\uff0c\u5e76\u6309\u7167\u9898\u76ee\u8981\u6c42\u4fee\u6539\u65c1\u8fb9\u5404\u70b9\u3002\n                  }  \n            else f[i][j]=0;  \n                if(cz[i-1][j]) return;  \n        }  \n        bool pd=false;  \n        for(int i=1;i<=n;i++)  \n               for(int j=1;j<=m;j++)  \n            if(cz[i][j])  //\u4fee\u6539\u5b8c\u540e\uff0c\u4f9d\u7136\u5b58\u57281\uff0c\u80af\u5b9aimpossible\uff1b\n            {  \n                pd=true;  \n                    break;  \n                }  \n        if(!pd)  \n        {  \n            int sum=0;  \n            for(int i=1;i<=n;i++)  \n                   for(int j=1;j<=m;j++)  \n                if(f[i][j]) sum++;  \n                if(sum>=minn) return;  \n                minn=sum;  \n            for(int i=1;i<=n;i++)  \n                for(int j=1;j<=m;j++)  \n                ans[i][j]=f[i][j];  \n        }  \n        return;  \n    }  \n    for(int i=0;i<=1;i++)  \n        {  \n                f[1][lie]=i;  \n               dfs(lie+1);  //dfs\u7b2c\u4e00\u884c\u7684\u4fee\u6539\u65b9\u6848\n        }  \n}\n```",
        "postTime": 1479389817,
        "uid": 18492,
        "name": "\u72ec\u5b64\u706c\u660a\u660a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1985 \u3010\u7ffb\u8f6c\u68cb\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528](https://www.ftoaj.xyz/index.php/archives/17/)\n\n\u4eca\u5929\u5b66\u641c\u7d22\uff0c\u6b63\u597d\u6c34\u4e00\u53d1\u4ee5\u524d\u505a\u7684\u8fd9\u9053\u6bd2\u7624\u9898\n\n\u8bdd\u8bf4\u8fd9\u9053\u9898\u505a\u4e86\u6211\u4e00\u5929\uff0c\u522b\u4eba\u90fd\u662f\u5404\u79cd\u4f18\u5316\uff0c\u4e0d\u8d85100\u884c\n\n\u5929\u771f\u7684\u6211\u786c\u6838\u521a\u4e86220\u884c\uff0c\u5168\u7a0b0\u4f18\u5316\u6c34\u8fc7\n\n~~\u4f46\u5176\u5b9e\u4e0d\u7528\u8fd9\u4e48\u957f\uff0c\u6211\u6709\u7684\u51fd\u6570\u5199\u7684\u6709\u70b9\u91cd\u590d\u4e86\uff08~~\n\n#### \u601d\u8def\uff1a\n\n\u663e\u7136\u662fdfs\uff0c\u4e00\u884c\u4e00\u884c\u7684\u6765\n\n\u641c\u5230[i, j]\u65f6(i > 1)\uff0c\u770b[i - 1, j]\u662f\u5426\u4e3a\u9ed1\uff0c\u662f\u7684\u8bdd\u5c31\u7ffb\u8f6c[i, j],\n\n\u4e5f\u5c31\u662f\u8bf4\u641c\u5b8c\u5f53\u524d\u884c\u5c31\u8981\u4fdd\u8bc1\u4e0a\u4e00\u884c\u7684\u68cb\u5168\u90fd\u7ffb\u6210\u4e86\u767d\u8272\n\n\u5f53\u641c\u5230\u6700\u540e\u4e00\u884c\u65f6\uff0c\n\n\u65e2\u8981\u4fdd\u8bc1\u4e0a\u4e00\u884c\u7ffb\u6210\u767d\u8272\uff0c\u8fd8\u8981\u4fdd\u8bc1\u81ea\u5df1\u4e5f\u90fd\u7ffb\u6210\u767d\u8272\uff0c\n\n\u6700\u540e\u8fd8\u8981\u7279\u5224\u4e00\u4e0b\u6700\u540e\u4e24\u4e2a\u7684\u7ffb\u8f6c.\n\n\n\u5f53\u65f6\u5e74\u5c11\u8f7b\u72c2\uff0c\u6211\u60f3\u7740\u5c42\u6b21\u4e00\u5b9a\u8981\u6e05\u6670\uff0c\n\u4e8e\u662f\u5c31SB\u5730\u5206\u522b\u6253\u4e86\u56db\u4e2a\u51fd\u6570\uff1a\n\n1. \u7279\u5224\u7b2c\u4e00\u884c,firstLineS\n2. \u5f53\u53ea\u6709\u4e00\u5217\u7684\u65f6\u5019,dfs1\n3. \u5f53\u641c\u5230\u6700\u540e\u4e00\u884c\u65f6\u6216\u672c\u6765\u53ea\u6709\u4e00\u884c\u65f6\uff0cdfsn\n4. \u6b63\u5e38\u641c\u7d22,dfs\n\n\n##### \u8fd9\u4e2a\u9898\u6709\u4e2a\u5751\uff0c92\u5206\u5361\u4e86\u4e00\u4e0b\u5348:  \u641c\u5230\u7684\u7b2c\u4e00\u4e2a\u89e3\u4e0d\u80fd\u76f4\u63a5\u8f93\u51fa\uff0c\u5b83\u662f\u6700\u4f18\u89e3\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u7ee7\u7eed\u641c\u5b8c\n\n\u4e22\u8138\u7684\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, m, a, minans = 99999;\nint Chess[25][25], ans[25][25], minan[25][25];\n\nvoid c(int i, int j) \n{\n\tif(Chess[i][j]%2 == 0) Chess[i][j] = 1;\n\telse Chess[i][j] = 0;\n}\nvoid print() \n{\n\ta = 0;\n\tfor (int i = 1; i <= m; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tif (Chess[i][j] % 2 == 1) return ;\n\tfor (int i = 1; i <= m; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\ta += ans[i][j] % 2;\n\tif(minans > a) \n    {\n\t    minans = a;\n\t    for (int i = 1; i <= m; i++)\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tminan[i][j] = ans[i][j] % 2;\n\t}\n}\nint back1(int p) \n{\n\tif ( Chess[m][p] == 1 && p == n)\n\t\treturn 1;\n\telse if (p != n)\n\t\treturn 1;\n\treturn 0;\n}\nint back2(int p) \n{\n\tif ( Chess[m][p] == 0 && p == n)\n\t\treturn 0;\n\telse if (p != n)\n\t\treturn 0;\n\treturn 1;\n}\nvoid dfsn(int num) {\t\n    if (num == n + 1) {\n\t\tprint();\n\t\treturn ;\n    }\n    int line = m;\n    if (m == 1)\n    {\n    \tif (num == 1)\n    \t{\n\t\t\tdfsn(num + 1);    \n\t\t    c(line, num + 1);\n\t\t    c(line, num);\n\t\t    ans[line][num]++;\n\t\t\tdfsn(num + 1);\n\t\t}\n\t\tif (Chess[line][num - 1]==0 && back2(num)==0)\n\t\t\tdfsn(num+1);\n\t\telse if (Chess[line][num - 1]==1 && back1(num)==1)\n    \t{\n\t\t\tc(line, num - 1);\n\t\t\tc(line, num + 1);\n\t\t\tc(line, num);\n\t\t\tans[line][num]++;\n\t\t\n\t\t\tdfsn(num + 1);\n\t\t}\n\t}\n\telse if (num == 1)\n\t{\n\t\tif (Chess[m - 1][1] == 0)\n\t    \tdfsn(2);\t\n    \n\t\telse \n\t\t{\n\t    \tc(m - 1 , 1);\n\t\t\tc(m, 2);\n\t\t\tc(m, 1);\n\t\t\tans[m][1]++;\n\t\t\n\t\t\tdfsn(2);\n\t\t}\n\t}\n\t\n    else if (Chess[line - 1][num]==1 && Chess[line][num - 1]==1 && back1(num)==1)\n\t{\n\t    c(line - 1 , num);\n\t\tc(line, num - 1);\n\t\tc(line, num + 1);\n\t\tc(line, num);\n\t\tans[line][num]++;\n\t\t\n\t\tdfsn(num + 1);\n\t\t/*\t\n\t\tans[line][num]--;\n\t\tc(line - 1, num);\n\t\tc(line, num - 1);\n\t\tc(line, num + 1);\n\t\tc(line, num);\n\t\t*/\n\t}\n    else if (Chess[line - 1][num] == 0 && Chess[line - 1][num] == 0 && back2(num) == 0)\n\t    dfsn(num + 1);\n}\nvoid dfs(int line, int num)\n{\n\tif (num == n + 1 && line == m - 1)\n\t{\n\t\tdfsn(1);\n\t\treturn ;\n\t}\n\tif (num == n + 1)\n\t{\n\t\tdfs(line + 1, 1);\n\t\treturn ;\n\t}\n\tif (Chess[line - 1][num] == 0)\n\t\tdfs(line, num + 1);\n\telse\n\t{\n\t    c(line - 1, num);\n\t\tc(line + 1, num);\n\t\tc(line, num - 1);\n\t\tc(line, num + 1);\n\t\tc(line, num);\n\t\tans[line][num]++;\n\t\tdfs(line, num + 1);\n /*\n\t\tans[line][num]--;\t\t\n\t\tc(line - 1, num);\n\t\tc(line + 1, num);\n\t\tc(line, num - 1);\n\t\tc(line, num + 1);\n\t\tc(line, num);\n*/\n\t}\n}\nvoid firstLineS(int k)\n{\n\tif (k == n + 1) \n\t{\n\t\tif (m > 2)\n\t    \tdfs(2, 1);\n\t\telse if (m == 2)\n\t\t\tdfsn(1);\n\t    return ;\n    } \n\tfirstLineS(k + 1);\n\tc(1, k);\n\tc(1, k - 1);\n\tc(1, k + 1);\n\tc(2, k);\n    ans[1][k]++;\n\tfirstLineS(k + 1);\n\tans[1][k]--;\n    c(1, k);\n    c(1, k - 1);\n\tc(1, k + 1);\n\tc(2, k);\n}\nvoid dfs1(int num)\n{\n    if (num == m + 1) \n    {\n    \tprint();\n    \treturn ;\n\t}\n\tif (num == 1)\n\t{\n\t\tdfs1(num + 1);\n\t\tans[num][1]++;\n\t\tc(num, 1);\n\t\tc(num + 1, 1);\n\t\tdfs1(num + 1);\n\t\tans[num][1]--;\n\t\tc(num, 1);\n\t\tc(num + 1, 1);\n\t}\n\tif(Chess[num - 1][1] == 0)\n\t    dfs1(num + 1);\n\telse  {\n\t\tans[num][1]++;\n\t\tc(num, 1);\n\t\tc(num + 1, 1);\n\t\tc(num - 1, 1);\n\t\t\n\t\tdfs1(num + 1); \n\t\t\n\t\tans[num][1]--;\n\t\tc(num + 1, 1);\n\t\tc(num - 1, 1);\n\t\tc(num, 1);\n\t}\n}\n\nint main()   \n{\n\tcin >> m>> n;\n    for (int i = 1; i <= m; i++)\n    \tfor (int j = 1; j <= n; j++)\n    \t    cin >> Chess[i][j];\n    if (m == 1) dfsn(1);\n    if (n == 1) dfs1(1);\n    firstLineS(1);\n    if (minans==99999)\n    \tcout<<\"IMPOSSIBLE\"<<endl;\n    else\n        for (int i = 1; i <= m; i++)\n\t\t{\t\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tcout << minan[i][j]%2<<\" \";\n\t\t\tcout << endl;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1550132665,
        "uid": 69495,
        "name": "marTixx",
        "ccfLevel": 0,
        "title": "P1985 [USACO07OPEN]\u7ffb\u8f6c\u68cb"
    },
    {
        "content": "\u8bb0\u5f97\u8fd9\u9053\u9898\u5728\u6211\u521d\u4e8c\u7684\u65f6\u5019\uff0c\u8001\u5e08\u7ed9\u8fc7\u4e00\u9053\u5dee\u4e0d\u591a\u7684\u9898\uff0c\u552f\u4e00\u533a\u522b\u5728\u4e8e\uff0c\u90a3\u9053\u9898\u662f\u6253\u67aa\u5f71\u54cd\u4e94\u4e2a\uff0c\u8fd9\u9053\u9898\u662f\u7ffb\u74e6\u7247\u3002\n\n\n\u5514\uff0c\u9996\u5148\u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u641c\u7d22\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5148\u786e\u5b9a\u4e86\u7b2c\u4e00\u884c\u54ea\u4e9b\u8981\u7ffb\uff0c\u54ea\u4e9b\u4e0d\u8981\u7ffb\uff0c\u4e4b\u540e\uff0c\u7b2c\u4e00\u884c\u7684\u72b6\u6001\u5c31\u786e\u5b9a\u4e86\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u60f3\u628a\u7b2c\u4e00\u884c\u4e0a\u7684\u9ed1\u74e6\u7247\u7ffb\u6210\u767d\u74e6\u7247\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u5728\u4e0b\u4e00\u884c\u5f53\u524d\u9ed1\u74e6\u7247\u7684\u6b63\u4e0b\u65b9\u6253\u4e00\u67aa\uff0c\u800c\u4e14\u5fc5\u987b\u5728\u90a3\u91cc\u6253\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u679a\u4e3e\u7b2c\u4e00\u884c\u54ea\u4e9b\u8981\u7ffb\u54ea\u4e9b\u4e0d\u8981\u7ffb\uff0c\u63a5\u4e0b\u6765\u7684\u7ffb\u7684\u6b21\u6570\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e86\u3002\u5982\u679c\uff0c\u7ffb\u5b8c\u540e\uff0c\u6700\u540e\u4e00\u884c\u5168\u4e3a\u767d\u74e6\u7247\u5c31\u53ef\u4ee5\u62ff\u53bb\u66f4\u65b0\u7b54\u6848\u4e86\u3002\u81f3\u4e8e\u5b57\u5178\u5e8f\u7684\u95ee\u9898\uff0c\u6211\u662f\u4ece0\u679a\u4e3e\u52301\u7684\uff0c\u6240\u4ee5\u8d8a\u65e9\u5f97\u5230\u7684\u7b54\u6848\uff0c\u5b57\u5178\u5e8f\u8d8a\u4f18\u3002\n\n\n\u5177\u4f53\u7684\u8bdd\u770b\u4e00\u4e0b\u7a0b\u5e8f\u5427\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#define INF 2100000000\nusing namespace std;\nint n,m,ans1,tot[20][20],h[5]={0,-1,1,0,0},l[5]={0,0,0,-1,1},a[20][20];\nint ans2[20][20],s[20],b[20][20];\nbool check(int x,int y)\n{\n  if ((x<=0)||(x>m)||(y>n)||(y<=0)) return false;\n  return true;\n}\nvoid dfs(int x)\n{\n  if (x==n+1)\n//\u5982\u679c\u7b2c\u4e00\u884c\u7684\u7ffb\u4e0e\u4e0d\u7ffb\u7684\u72b6\u6001\u5df2\u7ecf\u786e\u5b9a\u4e0b\u6765\u4e86\uff0c\u5c31\u8fdb\u884c\u6240\u9700\u6b21\u6570\u7684\u7edf\u8ba1\n  {\n      for (int i=1;i<=m;i++)\n       for (int j=1;j<=n;j++)\n       a[i][j]=b[i][j];\n      int sum=0; \n      for (int i=1;i<=n;i++)\n      if (s[i]==1) \n      {\n        tot[1][i]=1;\n        for (int j=0;j<=4;j++)\n        if (check(1+h[j],i+l[j])) a[1+h[j]][i+l[j]]=a[1+h[j]][i+l[j]]^1;\n//\u6539\u53d8\u4e3a\u76f8\u53cd\u7684\u72b6\u6001\n        sum++;\n    }\n    else tot[1][i]=0;\n    for (int i=2;i<=m;i++)\n    for (int j=1;j<=n;j++)\n    if (a[i-1][j]==1)\n//\u7531\u4e0a\u4e00\u884c\u6765\u51b3\u5b9a\u8fd9\u4e00\u884c\u662f\u5426\u8981\u7ffb\n    {\n      tot[i][j]=1;\n      for (int k=0;k<=4;k++)\n      if (check(i+h[k],j+l[k])) a[i+h[k]][j+l[k]]=a[i+h[k]][j+l[k]]^1;\n        sum++; \n    }\n    else tot[i][j]=0;\n    for (int i=1;i<=n;i++)if (a[m][i]==1) return ;\n//\u5982\u679c\u6700\u540e\u4e00\u884c\u8fd8\u6709\u9ed1\u74e6\u7247\uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u6848\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u76f4\u63a5\u9000\u51fa\n//\u66f4\u65b0\u7b54\u6848\n    if (sum<ans1) \n    {\n      ans1=sum;\n      for (int i=1;i<=m;i++)\n       for (int j=1;j<=n;j++)\n       ans2[i][j]=tot[i][j];\n    }\n    return;\n  }\n  else for (int i=0;i<2;i++) \n  {\n    s[x]=i;\n//\u679a\u4e3e\u72b6\u6001\n    dfs(x+1);\n  }\n}\nint main()\n{\n  scanf(\"%d%d\",&m,&n); getchar();\n  ans1=INF;\n  for (int i=1;i<=m;i++)\n   for (int j=1;j<=n;j++)\n    scanf(\"%d\",&b[i][j]);\n  dfs(1);\n  if (ans1!=INF)\n  {\n  for (int i=1;i<=m;i++)\n   for (int j=1;j<=n;j++)\n   {\n        printf(\"%d\",ans2[i][j]);\n        if (j==n) putchar('\\n');\n        else putchar(' ');\n   }\n  }\n  else printf(\"IMPOSSIBLE\\n\");\n  return 0;\n}\n\n```",
        "postTime": 1491154589,
        "uid": 21621,
        "name": "nihanchu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2892 \u3010[USACO07OPEN]Fliptile\u3011"
    },
    {
        "content": "\u5176\u5b9e\u80fd\u8fc7\u7684\u4eba\u90fd\u77e5\u9053\u4e00\u65e6\u7b2c\u4e00\u884c\u72b6\u6001\u786e\u5b9a\u4e86\uff0c\u5c31\u80fd\u8ba1\u7b97\u51fa\u6700\u540e\u80fd\u4e0d\u80fd\u6210\u529f\u3002\u8fd9\u91cc\u5173\u952e\u662f\u679a\u4e3e\u7b2c\u4e00\u884c\u7684\u72b6\u6001\uff0c\u7136\u540e\u4f60\u8981\u60f3\u6e05\u695a\u8981\u5f00\u591a\u5c11\u4e2a\u56fe\u6765\u4fdd\u5b58\u505a\u8fc7\u7684\u4e8b\u3002\u7136\u540e\u6781\u7b80\u7684DFS\u4ece\u7b2c\u4e00\u884c\u7684\u64cd\u4f5c\uff08\u6ce8\u610f\u662f\u64cd\u4f5c\uff01\uff090 0 0 0 . . .\u5f00\u59cb\u641c\u3002\u6700\u5c11\u6b65\u6570\u4e5f\u662f\u86ee\u4ee4\u4eba\u5934\u75bc\u7684\uff0c\u6240\u4ee5\u53c8\u5f00\u4e86\u5f88\u591a\u6570\u7ec4\u3002\u5f53\u4f60\u77e5\u9053\u4ec0\u4e48\u4e1c\u897f\u5b58\u5728\u54ea\u91cc\u65f6\uff0c\u7a0b\u5e8f\u5c31\u6e05\u6670\u5f88\u591a\u3002\u3002\n\n\u8fd8\u6709\u628a\u56fe\u4ece1 1\u5f00\u59cb\u5b58\u5c31\u4e0d\u7528\u5224\u8fb9\u754c\u4e86233\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n```cpp\n#include<stdio.h>\n#include<stdlib.h>\nint premap[20][20]; //\u539f\u56fe\nint nextmap[20][20];  //\u8ba1\u7b97\u51fa\u7684\u67d0\u6b21\u7b2c\u4e00\u884c\u64cd\u4f5c\u540e\u7684\u56fe\nint moves[20]; //\u679a\u4e3e\u7684\u7b2c\u4e00\u884c\u7684\u64cd\u4f5c\nint ans[20][20]; //\u8bb0\u5f55\u6bcf\u6b21\u8ba1\u7b97\u7684\u7b54\u6848\nint finalans[20][20]; //\u8bb0\u5f55\u6700\u5c11\u6b65\u6570\u7684\u7b54\u6848\nint vol=0x7f, voltmp=0; //\u8bb0\u5f55\u6bcf\u6b21\u8ba1\u7b97\u7684\u6b65\u6570\nint m, n;\nvoid printnextmap(){\n    for(int i=1;i<=m;i++){\n        for(int j=1;j<=n;j++)\n        {\n            printf(\"%d \",nextmap[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\nvoid flip(int n, int m){   //\u7ffb\u8f6c\u4e0d\u7528\u5224\u8fb9\u754c\u662f\u56e0\u4e3a\u56fe\u4ece1 1\u5f00\u59cb\n    nextmap[n-1][m]=1-nextmap[n-1][m];\n    nextmap[n][m-1]=1-nextmap[n][m-1];\n    nextmap[n][m]=1-nextmap[n][m];\n    nextmap[n][m+1]=1-nextmap[n][m+1];\n    nextmap[n+1][m]=1-nextmap[n+1][m];\n}\nvoid copy(){\n    for(int i=1;i<=n;i++)\n        finalans[1][i]=moves[i];    //\u5c06\u7b2c\u4e00\u884c\u7684\u64cd\u4f5c\u4e5f\u6253\u4e0a\u53bb\n    for(int i=2;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            finalans[i][j]=ans[i][j];\n    vol=voltmp;\n}\nvoid expand(){   //\u5bfc\u51fa\u72b6\u6001\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            nextmap[i][j]=premap[i][j];\n    for(int e=1;e<=m;e++){\n        if(moves[e])\n        {\n            nextmap[1][e-1]=1-nextmap[1][e-1];\n            nextmap[1][e+1]=1-nextmap[1][e+1];\n            nextmap[1][e]=1-nextmap[1][e];\n            nextmap[2][e]=1-nextmap[2][e];\n        }\n    }\n}\nvoid calculate(){  //\u8ba1\u7b97\u6b65\u6570\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            ans[i][j]=0;\n    for(int i=2;i<=m;i++)\n        for(int j=1;j<=n;j++)\n        {\n            if(nextmap[i-1][j])\n            {        \n                flip(i,j);\n                ans[i][j]=1;\n                voltmp++;\n            }\n        }\n    for(int i=1;i<=n;i++)\n        if(nextmap[m][i])\n        {\n            return ;\n        }\n    if(voltmp<vol)\n        copy();\n    return ;\n}\nvoid dfs(int step){\n    if(step>=n)    {\n        expand();\n        //for(int q=1;q<=n;q++)    {printf(\"%d \",moves[q]);}\n        //printf(\"\\n\");\n        //printnextmap();\n        int err=0;\n        for(int i=1;i<=n;i++)\n            if(moves[i])\n                err++;\n        voltmp=err;  //\u7b2c\u4e00\u884c\u7684\u64cd\u4f5c\u6b65\u6570\u4e5f\u8981\u52a0\u4e0a\u53bb\n        calculate();\n        return ;\n    }\n    step++;\n    moves[step]=0;   //\u4ee5\u4e0b4\u884c\u662f\u6734\u7d20DFS\n    dfs(step);\n    moves[step]=1;\n    dfs(step);\n}\nint main(){\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n        {\n            scanf(\"%d\",&premap[i][j]);\n        }\n    dfs(0);\n    if(vol<0x7f)    {\n        for(int i=1;i<=m;i++){\n            for(int j=1;j<=n;j++)\n            {\n                printf(\"%d \",finalans[i][j]);\n            }\n            printf(\"\\n\");\n        }\n    }\n    else{\n        printf(\"IMPOSSIBLE\");\n    }\n    return 0;\n}\n\n```",
        "postTime": 1503309129,
        "uid": 11974,
        "name": "LLLM",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2892 \u3010[USACO07OPEN]Fliptile\u3011"
    }
]