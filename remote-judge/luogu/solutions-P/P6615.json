[
    {
        "content": "### \u600e\u4e48\u662f\u9ec4\u9898\u554azbl\uff0c\u770b\u6765\u6211\u5df2\u7ecf\u5f31\u5230\u8fde\u9ec4\u9898\u90fd\u4e0d\u4f1a\u4e86\u3002\u3002\n\n\u611f\u89c9\u662f\u4e00\u9053\u6bd4\u8f83\u597d\u7684\u6784\u9020\u9898\u3002\n\n\u6211\u4eec\u5148\u5206\u6790\u4e00\u4e0b\u9898\u610f\u5427\u3002\u6709\u4e24\u4e2a\u96c6\u5408\uff0c\u4e00\u4e2a\u5b58\u7740\u4f60\u9009\u8fc7\u7684\u70b9\uff0c\u53e6\u4e00\u4e2a\u5b58\u7740\u4f60\u9009\u70b9\u8fc7\u7a0b\u4e2d\u7684\u4e24\u70b9\u95f4\u8def\u5f84\u7684\u6700\u5c0f\u503c\u3002\u8ba9\u4f60\u6700\u5927\u5316\u6240\u6709\u9009\u7684\u70b9\u6743 + \u6700\u5c0f\u503c\u7684\u4e58\u79ef\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u9009\u8fc7\u7684\u70b9\u4e0d\u8bba\u4f60\u9009\u591a\u5c11\u6b21\u90fd\u7b97\u4e00\u6b21\uff0c\u4e0d\u4ee3\u8868\u4f60\u4e0d\u53ef\u4ee5\u9009\u591a\u4e2a\u70b9\u3002\n\n\u597d\u4e86\uff0c\u770b\u4e86\u8fd9\u4e2a\u9898\uff0c\u6211\u4e00\u70b9\u601d\u8def\u90fd\u6ca1\u6709\uff0c\u4e8e\u662f\u5f00\u59cb\u770bsubtask\u3002\n\n\u76f4\u63a5\u8f93\u51fa0\u5c31\u53ef\u4ee5\u5f97\u52301\u5206\u3002\u8fd9\u5c31\u662f\u6211\u6bd4\u8d5b\u7684\u5206\u6570\u3002\n\n\u9996\u5148\u770b\u94fe\u7684\u90e8\u5206\u5206\u3002\u5148\u8bf4\u4e00\u4e2a\u7ed3\u8bba\uff1a\u4e00\u5b9a\u9009\u7684\u662f\u8fd9\u4e2a\u94fe\u7684\u4e00\u6bb5\u524d\u7f00\u548c\u4e00\u6bb5\u540e\u7f00\u3002![](https://cdn.luogu.com.cn/upload/image_hosting/8692qh2f.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u7f16\u53f7\uff0c\u4ece1~5\u3002\n\n\u9996\u5148\u8003\u8651\u8def\u5f84\u6700\u5c0f\u503c\u600e\u4e48\u7b97\u3002\u90a3\u663e\u7136\u662f1~4\u7684\u957f\u5ea6\u548c2~5\u7684\u957f\u5ea6\u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a\u6211\u53ef\u4ee5\u6309\u71671\u30015\u30011\u30014\u30011\u30015\u30012\u8fd9\u6837\u7684\u987a\u5e8f\u53bb\u9009\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u6700\u5927\u5316\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u3002\n\n\u7136\u540e\u5982\u679c\u9009\u7684\u4e0d\u662f\u4e00\u6bb5\u524d\u7f00\u548c\u4e00\u6bb5\u540e\u7f00\uff0c\u90a3\u663e\u7136\u4e0d\u5982\u9009\u4e0a\u3002\u56e0\u4e3a\u8fd9\u6837\u6700\u5c0f\u8ddd\u79bb\u662f\u4e0d\u53d8\u7684\uff0c\u800c\u70b9\u6743\u53d8\u5927\u4e86\u3002\n\n\u597d\u4e86\uff0c\u94fe\u7684\u90e8\u5206\u5c31\u8fd9\u4e9b\u3002\n\n\u5982\u679c\u662f\u6811\u7684\u8bdd\uff0c\u7c7b\u6bd4\u94fe\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u628a\u76f4\u5f84\u627e\u51fa\u6765\u3002\u50cf\u8fd9\u6837\u7684\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/16dqav1m.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u627e\u5230\u76f4\u5f84\u4e4b\u540e\uff0c\u5047\u8bbe\u90a3\u4e2a\u7ea2\u8272\u7684\u662f\u76f4\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u94fe\u7684\u65b9\u6cd5\uff0c\u6bcf\u6b21\u6784\u9020\u9009\u70b9\u7684\u987a\u5e8f\uff0c\u90fd\u662f\u8003\u8651\u8d70\u5230\u8ddd\u79bb\u4f60\u60f3\u9009\u7684\u70b9\u6700\u8fdc\u7684\u90a3\u4e2a\u70b9\uff0c\u7136\u540e\u518d\u9009\u90a3\u4e2a\u70b9\uff0c\u7136\u540e\u518d\u8df3\u56de\u8ddd\u79bb\u4f60\u9009\u7684\u70b9\u6700\u8fdc\u7684\u70b9\u3002\n\n\u8fd9\u6837\u6bcf\u4e2a\u70b9\u5bf9\u4e8e\u8def\u5f84\u6700\u5c0f\u503c\u7684\u8d21\u732e\uff0c\u5c31\u662f\u79bb\u8fd9\u4e2a\u70b9\u6700\u8fdc\u7684\u70b9\u4e0e\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u539f\u6765\u7684\u601d\u8def\uff0c\u628a\u6bcf\u4e2a\u70b9\u548c\u8ddd\u79bb\u4ed6\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u7b97\u51fa\u6765\u6392\u5e8f\uff0c\u6700\u7ec8\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u663e\u7136\u8ddd\u79bb\u6bcf\u4e2a\u70b9\u6700\u8fdc\u7684\u70b9\u662f\u76f4\u5f84\u4e24\u4e2a\u7aef\u70b9\u4e2d\u7684\u4e00\u4e2a\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\u4e86\uff0c\u5177\u4f53\u770b\u4ee3\u780182~91\u884c\u3002\n\n\u590d\u6742\u5ea6\u662fO\uff08n log n\uff09\uff0c\u74f6\u9888\u5728\u4e8e\u6392\u5e8f\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define int long long\nusing std::max;\nusing std::min;\nusing std::sort;\nconst int maxn = 300005;\nstruct stu{\n\tint to,nxt,w;\n}sexy[600005];\nlong long ans;\nint n,hd[maxn],cnt,a[maxn];\nvoid add(int x,int y,int z)\n{\n\tsexy[++cnt].to = y;\n\tsexy[cnt].nxt = hd[x];\n\thd[x] = cnt;\n\tsexy[cnt].w = z;\n}\nint dep1[maxn],dep2[maxn],rt1,rt2,dep[maxn];\nvoid dfs1(int x,int fa){\n\tfor(int i=hd[x];i;i=sexy[i].nxt){\n\t\tint v = sexy[i].to;\n\t\tif(v == fa) continue;\n\t\tdep[v] = dep[x] + sexy[i].w;\n\t\tdfs1(v,x);\n\t}\n}\nstruct akk{\n\tint as,bs;\n}chz[maxn];\nbool xtt(akk a,akk b){\n\treturn a.as > b.as;\n}\nvoid dfs2(int x,int fa){\n\tfor(int i=hd[x];i;i=sexy[i].nxt){\n\t\tint v = sexy[i].to;\n\t\tif(v == fa) continue;\n\t\tdep1[v] = dep1[x] + sexy[i].w;\n\t\tdfs2(v,x);\n\t}\n}\nint zhijing; \nvoid dfs3(int x,int fa){\n\tfor(int i=hd[x];i;i=sexy[i].nxt){\n\t\tint v = sexy[i].to;\n\t\tif(v == fa) continue;\n\t\tdep2[v] = dep2[x] + sexy[i].w;\n\t\tdfs3(v,x);\n\t}\n}\nlong long sum1[maxn],sum2[maxn]; \nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&a[i]);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y,z;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t} \n\tdfs1(1,0);\n\tint maxx = 0; \n\tfor(int i=1;i<=n;i++){\n\t\tif(maxx < dep[i]){\n\t\t\tmaxx = dep[i];\n\t\t\trt1 = i;\n\t\t}\n\t}\n\tdfs2(rt1,0);\n\tmaxx = 0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(maxx < dep1[i]){\n\t\t\tmaxx = dep1[i];\n\t\t\trt2 = i;\n\t\t}\n\t}\n\tdfs3(rt2,0); \n\tfor(int i=1;i<=n;i++){\n\t\tchz[i].as = max(dep1[i],dep2[i]);\n\t\tchz[i].bs = a[i];\n\t}\n\tsort(chz + 1,chz + n + 1,xtt);\n\tmaxx = 0;\n\tfor(int i=1;i<=n;i++){\n\t\tmaxx += chz[i].bs;\n\t\tans = max(ans,maxx * chz[i].as);\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n",
        "postTime": 1592210519,
        "uid": 65610,
        "name": "szhlg",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6615 \u3010\u8349\u8393 Strawberry\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u505a\u4e0d\u6765\uff0c\u770b\u4e86\u773c\u9898\u89e3\uff0c\u53d1\u73b0\u548c\u76f4\u5f84\u6709\u5173\u5c31\u6709\u601d\u8def\u4e86\uff0c\u7136\u540e\uff0c\u53c8\u4e0d\u5f00**long long**\u89c1\u7956\u5b97\u3002\u8fd9\u7adf\u662f\u9ec4\u9898\uff0czbl\uff0c\u5199\u7bc7\u9898\u89e3\u6574\u7406\u4e00\u4e0b\u601d\u8def\u3002\n\n**\u524d\u7f6e\u77e5\u8bc6:** \u6700\u5927\u751f\u6210\u6811\u7684\u6c42\u6cd5\u53ca\u6027\u8d28&\u76f4\u5f84\u7684\u6c42\u6cd5\u53ca\u6027\u8d28\n\n\u6211\u4eec\u628a\u6811\u4e0a\u4efb\u610f\u4e24\u70b9\u89c1\u7684\u8ddd\u79bb\u4f5c\u8fb9\u6743\uff0c\u628a\u6811\u53d8\u6210\u4e00\u4e2a\u56fe\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u70b9\u96c6\uff0c\u70b9\u6743\u548c\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u4f7f\u7b54\u6848\u6700\u5927\u7684\u4e00\u5b9a\u662f\u8fd9\u4e9b\u70b9\u7684\u6700\u5927\u751f\u6210\u6811\uff08\u6ce8\u610f\u4e00\u4e2a\u70b9\u662f\u53ef\u4ee5\u91cd\u590d\u9009\u7684\uff0c\u53ea\u662f\u70b9\u6743\u4e0d\u91cd\u590d\u7edf\u8ba1\u800c\u5df2\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u53ef\u4ee5\u6784\u9020\u4efb\u610f\u4e00\u68f5\u751f\u6210\u6811\u7684\uff09\n\n\u4f46\u679a\u4e3e\u70b9\u96c6\u7684\u590d\u6742\u5ea6\u662f\u5341\u5206\u9ad8\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u679a\u4e3e\u8fb9\u96c6\u3002\u8fdb\u884c\u7c7b\u4f3c**kruskal**\u7684\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5757\u800c\u8a00\uff0c\u6700\u5c0f\u8fb9\u6743\u9012\u51cf\u800c\u70b9\u6743\u548c\u9012\u589e\uff0c\u4e14\u5728\u6bcf\u4e00\u4e2a\u65f6\u523b\uff0c\u70b9\u6743\u548c\u4e00\u5b9a\u662f\u5f53\u524d\u8fb9\u96c6\u80fd\u53d6\u5230\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u53ea\u8981\u5b8c\u6210\u8fd9\u4e2a**kruskal**\u7684\u8fc7\u7a0b\u5c31\u4e00\u5b9a\u80fd\u6c42\u51fa\u7b54\u6848\n\n\u4f46\u590d\u6742\u5ea6\u8fd8\u662f\u592a\u9ad8\u4e86\uff0c\u56e0\u4e3a\u5b8c\u5168\u56fe\u6709$\\frac{n(n-1)}{2}$\u6761\u8fb9\uff0c\u867d\u7136\u6c42\u7b54\u6848\u7684\u8fc7\u7a0b\u53ea\u9700\u8981$n-1$\u6761\u8fb9\uff0c\u4f46\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u65e0\u6cd5\u627f\u53d7\uff0c\u6211\u4eec\u7528\u76f4\u5f84\u7684\u4e00\u4e9b\u6027\u8d28\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n\n**\u76f4\u5f84\u7684\u6027\u8d28\uff1a**\u5bf9\u4e8e\u6811\u4e0a\u6bcf\u4e2a\u70b9\uff0c\u79bb\u5b83\u6700\u8fdc\u7684\u7684\u70b9\u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u4e00\uff0c\u8bc1\u660e\u4e0d\u96be\uff0c\u800c\u4e14\u60f3\u5fc5\u5927\u5bb6\u90fd\u638c\u63e1\u4e86\u8fd9\u4e2a**\u524d\u7f6e\u77e5\u8bc6**\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5199\u8bc1\u660e\u4e86\n\n\u90a3\u4e48\u7528\u53cd\u8bc1\u6cd5\u6613\u8bc1\uff0c\u6211\u4eec\u8fd9\u4e2a\u7c7b**kruskal**\u8fc7\u7a0b\u4e2d\u6240\u7528\u8fb9\u4e00\u5b9a**\u53ef\u4ee5**\u662f\u76f4\u5f84\u52a0\u4e0a\u5176\u4ed6$n-2$\u4e2a\u70b9\u5230\u6700\u8fdc\u7684\u70b9\u7684\u8def\u5f84\u3002\u6240\u4ee5\u6211\u4eec\u4e5f\u5c31\u4e0d\u7528\u518d\u6c42\u51fa\u6240\u6709\u7684\u8def\u5f84\u957f\uff0c\u53ea\u75283\u6b21**dfs**\u6c42\u51fa\u6240\u9700\u5373\u53ef\u3002\u6b64\u5916\u7531\u4e8e\u6bcf\u6b21\u662f\u628a\u4e00\u4e2a\u5b64\u7acb\u7684\u70b9\u52a0\u5165\u76f4\u5f84\u6240\u5728\u96c6\u5408\u4e2d\uff0c\u6240\u4ee5\u6bcf\u65f6\u6bcf\u523b\u90fd\u53ea\u6709\u4e00\u4e2a\u96c6\u5408\uff0c\u5e76\u67e5\u96c6\u4e5f\u4e0d\u9700\u8981\u4e86\u3002\n\n\u81f3\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(nlongn)$\uff0c\u5176\u4e2d\u6392\u5e8f$O(nlogn)$\uff0c\u6c42\u89e3\u8fc7\u7a0b\u53ea\u6709$O(n)$\uff0c\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u8fd8\u662f**kruskal**\uff0c\u4f46\u4ee3\u7801\u5df2\u7ecf\u957f\u5f97\u4e00\u70b9\u4e5f\u4e0d\u50cf\u4e86\n\n$\\text{ugly CODE}\\downarrow$\n\n```c++\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN = 500000;\nint last[MAXN], ver[MAXN], nxt[MAXN], w[MAXN], dis[MAXN][3], cnt, sm, mn, n;\n//dis\u7528\u6765\u5b583\u6b21dfs\u7684\u7ed3\u679c\uff0csm\u662f\u70b9\u6743\u548c\uff0cmn\u662f\u6700\u5c0f\u8fb9\u6743\nstruct node\n{\n\tint v, p;\n\tfriend bool operator < (const node& a, const node& b) {return a.p > b.p;}\n}c[MAXN];\n//v\u662f\u70b9\u6743\uff0cp\u662f\u6700\u8fdc\u8def\u5f84\u957f\uff0c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7528\u4e8e\u6392\u5e8f\uff0c\u4f60\u5199cmp\u4e5f\u662f\u4e00\u6837\u7684\n\nint T, far;\n//T\u4ee3\u8868dfs\u7684\u6b21\u6570\uff0c\u7528\u6765\u6307\u5bfcdis\u7684\u50a8\u5b58\uff0cfar\u91cc\u5b58\u7684\u662f\u6700\u8fdc\u70b9\uff0c\u7528\u6765\u627e\u76f4\u5f84\nvoid dfs(int x, int from)\n{\n\tint to;\n\tif(dis[x][T] > dis[far][T]) far = x;\n\tfor(int i = last[x]; i; i = nxt[i])\n\t{\n\t\tto = ver[i];\n\t\tif(to == from) continue;\n\t\tdis[to][T] = dis[x][T] + w[i];\n\t\tdfs(to, x);\n\t}\n}\n\ninline int read()\n{\n\tint x = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') ch = getchar();\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x*10 + ch - 48;\n\t\tch = getchar();\n\t}\n\treturn x;\n}\n\ninline void add(int& x, int &y, int& z)\n{\n\tnxt[++cnt] = last[x];\n\tlast[x] = cnt;\n\tver[cnt] = y;\n\tw[cnt] = z;\n}\n\nint main()\n{\n\t//part.1 \u8bfb\u5165\u6570\u636e\n\tn = read();\n\tint x, y, z;\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\tc[i].v = read();\n\t}\n\tfor(int i = 1; i < n; ++i)\n\t{\n\t\tx = read();\n\t\ty = read();\n\t\tz = read();\n\t\tadd(x, y, z);\n\t\tadd(y, x, z);\n\t}\n\t//part.2 3\u6b21dfs\n    //\u8fd9\u6bb5\u5199\u5f97\u6bd4\u8f83\u4e11\uff0cT\u548cfar\u7684\u542b\u4e49\u524d\u9762\u6709\u8bb2\uff0cx\uff0cy\u7528\u6765\u4e34\u65f6\u5b58\u4e00\u4e0b\u76f4\u5f84\u7aef\u70b9\n\tT = 0;\n\tfar = 0;\n\tdfs(1, 0);\n\tx = far;\n\tfar = 0;\n\tT = 1;\n\tdfs(x, 0);\n\ty = far;\n\tfar = 0;\n\tT = 2;\n\tdfs(y, 0);\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\tc[i].p = max(dis[i][1], dis[i][2]);\n\t}\n\tsort(c+1, c+n+1);//\u8bb0\u5f97\u6392\u5e8f\n\t//\u6c42\u7b54\u6848\n\tsm = c[1].v;\n\tlong long ans = 0;\n\tfor(int i = 2; i <= n; ++i)\n\t{\n\t\tsm += c[i].v;\n\t\tmn = c[i].p;\n\t\tans = max(ans, (long long)sm*mn);//\u8bb0\u5f97long long\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1592727052,
        "uid": 56501,
        "name": "\u26a1current\u26a1",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P6615 \u3010\u8349\u8393 Strawberry\u3011"
    }
]