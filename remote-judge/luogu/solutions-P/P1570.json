[
    {
        "content": "\u597d\u4e45\u6ca1\u6709\u5199\u4e8c\u5206\u7b54\u6848\u4e86\uff0c\u6765\u590d\u4e60\u590d\u4e60\u3002\u987a\u4fbf\u8865\u5145\u4e2a\u50cf\u6837\u7684\u6709$\\LaTeX$\u7684\u9898\u89e3\u3002\n\n------------\n\n\u521a\u5f00\u59cb\u770b\u5230\u9898\u76ee\u8fd8\u4ee5\u4e3a\u662f01\u80cc\u5305\uff0c\u4f46\u5374\u662f\u6c42\u5e73\u5747\u503c\u6700\u5927\uff0c\u6545\u4e0d\u8003\u8651\u3002\n\n\u4f46\u662f\u4e0d\u597d\u601d\u8003\u5462\u2026\u2026\u90a3\u5148\u4ece\u5f0f\u5b50\u5165\u624b\uff1a\n\n\u5047\u8bbe\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u89e3$ans$\uff0c\u5219\n\n$$\\large ans=\\frac{\\sum^m_{i=1}v_i}{\\sum^m_{i=1}c_i}$$\n\n\u5f0f\u5b50\u592a\u590d\u6742\uff1f\u5c1d\u8bd5\u5316\u4e00\u4e0b\u3002\n\n$$\\text{\u53bb\u5206\u6bcd\u5f97\uff0c}\\sum^m_{i=1}c_i\u00b7ans=\\sum^m_{i=1}v_i$$\n\n$$\\text{\u79fb\u9879\u5f97\uff0c}\\sum^m_{i=1}c_i\u00b7ans-\\sum^m_{i=1}v_i=0$$\n\n-----------------------\n\n\u89c2\u5bdf\u5f0f\u5b50\uff0c\u4e0d\u96be\u53d1\u73b0\u6700\u4f18\u89e3$ans$\u4f1a\u4f7f\u5f97\u5de6\u8fb9$=0$\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u5c3d\u53ef\u80fd\u5730\u7684\u9760\u8fd1$0$\u3002\u52a0\u4e0a$ans$\u5177\u6709\u5355\u8c03\u6027\uff0c\u8fd9\u65f6\u5c31\u8003\u8651\u5230\u4e8c\u5206\u3002\n\n`check()`\u4e5f\u5c31\u5f88\u597d\u5199\u4e86\u3002\u7531\u4e8e\u6211\u4eec\u60f3\u8ba9\u5de6\u8fb9\u5c3d\u53ef\u80fd$<0$\uff0c\u5219\u8003\u8651\u8d2a\u5fc3\uff0c\u6392\u5e8f\u5e76\u9009\u524d$m$\u4e2a\u6700\u5c0f\u7684\u6743\u503c\u5e76\u5f97\u5230\u4e4b\u548c$tot$\u3002\n\n\u6b64\u65f6\u8981\u5bf9`check()`\u5f97\u5230\u7684$tot$\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\u4e86\uff1a\n\n- \u5f53$tot<0$\u65f6\uff0c\u8bf4\u660e$ans$\u8fd8\u80fd\u518d\u5927\u4e00\u70b9\uff0c\u6545\u4e8c\u5206\u65f6$l=mid$\uff0c\u5f80\u53f3\u9760\u3002\n\n- \u5f53$tot>0$\u65f6\uff0c\u8bf4\u660e$ans$\u8fd8\u80fd\u518d\u5c0f\u4e00\u70b9\uff0c\u6545\u4e8c\u5206\u65f6$r=mid$\uff0c\u5f80\u5de6\u9760\u3002\n\n- \u5f53$tot=0$\u65f6\uff0c\u5c31\u662f\u7b54\u6848\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ed3\u675f\u4e8c\u5206\u3002\n\n\u53e6\u5916\uff0c\u7531\u4e8e\u6709\u5c0f\u6570\uff0c\u4e8c\u5206\u7ed3\u675f\u6761\u4ef6$l,r$\u4e4b\u95f4\u5c31\u4e0d\u662f$r-l\\ge 1$\uff0c\u800c\u662f\u5f62\u5982$r-l\\le 10^{-5}$\u4fdd\u8bc1\u7cbe\u5ea6\u3002\n\n---------------------\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n- \u8f93\u5165\uff1a$\\Theta(n)$\n\n- \u4e8c\u5206\uff1a$\\Theta(\\log\\max\\large\\{\\frac{v_i}{v_i}\\})$\n\n- \u6392\u5e8f\uff1a$\\Theta(n\\log n)$\n\n- \u8ba1\u6570$tot$\uff1a$\\Theta(m)$\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1a\n\n$$\\large\\Theta(n+(m+n\\log n)\\log\\max\\{\\frac{v_i}{v_i}\\})$$\n\n$$\\large\\approx\\Theta(n\\log n \\log \\max\\{\\frac{v_i}{v_i}\\})$$\n\n\u6700\u574f\u4e5f\u4e0d\u8fc7\u8fbe\u5230\u5927\u7ea6$2\\times 10^4$\u3002\n\n\n------------------------\n\n\u8bb2\u5f97\u5f88\u7ec6\u4e86\uff0c\u4ee3\u7801\u6ce8\u91ca\u5c31\u4e0d\u7ed9\u90a3\u4e48\u591a\u4e86\u3002\u5206\u6790\u91cc\u90fd\u6709\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN=500;\nint n,m;\nstruct coffee\n{\n\tint v,t;\n\tdouble avr;//\u7b97\u6743\u503ct*x-v\n\tbool operator<(const coffee a)const\n\t{\n\t\treturn avr<a.avr;\n\t}\n}a[MAXN];\ndouble ans,l,r;\n\n\nvoid input(void)\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t cin>>a[i].v;\n\tfor(int i=1;i<=n;i++)\n \t cin>>a[i].t;\n}\n\nbool check(const double x)\n{\n\tfor(int i=1;i<=n;i++)\n\t a[i].avr=x*a[i].t-a[i].v;//\u7b97\u6bcf\u4e2a\u7684\u6743\u503c\n    sort(a+1,a+n+1);//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\tdouble tot=0;\n\tfor(int i=1;i<=m;i++)//\u53d6\u524dm\u4e2a\u5c0f\u7684\n\t tot+=a[i].avr;\n\treturn tot<=0;\n}\n\nvoid binary(void)\n{\n\tfor(int i=1;i<=n;i++)\n\t if(a[i].v*1.0/a[i].t>r)\n\t  r=a[i].v*1.0/a[i].t;//\u7b97\u51fa\u4e0a\u754c\n\twhile(r-l>1e-5)\n\t{\n\t\tconst double mid=(l+r)/2.0;\n\t\tif(check(mid))//\u6ce8\u610f\u5206\u7c7b\u8ba8\u8bba\uff08\u8fd9\u91cc\u7ed3\u5408\u4e8c\u5206\u6c42\u4e0a\u4e0b\u754c\uff09\n\t\t l=mid;\n\t\telse\n\t\t r=mid;\n\t}\n\tans=l;\n}\n\nint main()\n{\n\tinput();\n\tbinary();\n\tprintf(\"%.3f\\n\",ans);\n\treturn 0;\n}\n```\n\n--------------------\n\n### \u8fd8\u6ca1\u7ed3\u675f\u5462\uff01\n\n\u73b0\u5728\u4ed4\u7ec6\u60f3\u60f3\uff0c\u6216\u8bb8\u53ef\u4ee5\u4e0d\u7528\u4e8c\u5206\uff08\u4f18\u52bf\u5728\u4e8e\u907f\u514d\u5206\u7c7b\u8ba8\u8bba\u548c\u4e0a\u4e0b\u754c\u95ee\u9898\uff09\uff0c\u8003\u8651\u679a\u4e3e$x(x\\in[0,\\max\\large\\{\\frac{v_i}{c_i}\\}])$\uff0c\u5e76\u8fdb\u884c`check()`\uff0c\u597d\u50cf\u4e5f\u4e0d\u4f1a\u8d85\u65f6\u3002\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n$$\\Theta(n\\log n \\max\\{\\frac{v_i}{c_i}\\})$$\n\n\u6700\u574f\u60c5\u51b5\u5927\u7ea6\u4e3a$1.5\\times 10^8$\u3002\n\n\u4f46\u5b9e\u9645\u9898\u76ee\u4e2d\u9664\u975e\u4e13\u95e8\u5361\u5426\u5219\u4e00\u822c\u8fbe\u4e0d\u5230\u8fd9\u6837\u7684\u590d\u6742\u5ea6\uff0c\u52a0\u4e0a\u7f16\u8bd1\u5668\u7684\u4f18\u5316~~\u548clg\u8bc4\u6d4b\u673a\u7684\u826f\u597d\u6027\u80fd~~\uff0c\u5361\u4e00\u5361\uff08\u751a\u81f3\u4e0d\u7528\uff09\u5c31\u80fd\u8fc7\u53bb\u3002\n\n**\u5f53\u7136\u4ee5\u4e0a\u53ea\u662f\u4e2a\u4eba\u770b\u6cd5\uff0c\u4f5c\u8005\u8fd8\u6ca1\u5b9e\u8df5\u8fc7\u3002**\n\n-------------\n\n### \u5b8c\u7ed3\u6492\u82b1\uff01\u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f",
        "postTime": 1565108935,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "###\u4e8c\u5206\u7b54\u6848+\u8d2a\u5fc3###\n\n**\u601d\u8def\uff1a**\u4e00\u822c\u6700\u5148\u60f3\u5230\u7684\u65b9\u6cd5\u662f\u628a\u7269\u54c1\u6309\u7167\u5355\u4f4d\u4ef7\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u4ece\u5927\u5230\u5c0f\u5730\u8d2a\u5fc3\u8fdb\u884c\u9009\u53d6\u3002\u4f46\u662f\u5f88\u660e\u663e\u8fd9\u6837\u53bb\u8d2a\u5fc3\u5f88\u5bb9\u6613\u4e3e\u51fa\u53cd\u4f8b\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5957\u7528\u4e8c\u5206+\u8d2a\u5fc3\u6765\u89e3\u51b3\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\uff0c\u533a\u95f4l\u53d60\u3001r\u53d6\u5355\u4e2a\u7269\u54c1\u7684\u6700\u5927\u4ef7\u503c(\u6ce8\u610f\u7cbe\u5ea6\u5f00double)\uff0c\u7136\u540e\u5bf9\u4e8e\u6211\u4eec\u4e8c\u5206\u51fa\u7684\u503cx\uff0c\u5173\u952e\u662f\u5982\u4f55check\u5224\u65ad\uff0c\u7a0d\u7a0d\u8fd0\u7528\u4e0b\u6570\u5b66\u8f6c\u6362\u516c\u5f0f\uff1a**sigma(vi)/sigma(ci)>=x\uff0c\u53d8\u5f62\u63a8\u5bfc\u51fasigma(vi-x\\*ci)>=0**\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u5bf9vi-x\\*ci\u8fdb\u884c\u8d2a\u5fc3\u6392\u5e8f\u9009\u53d6\u524dm\u4e2a\uff0c\u6700\u540e\u53ea\u8981\u5224\u65ad\u8fd9m\u4e2a\u503c\u7684\u548c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e0\u5c31ok\u4e86\u3002\n\n**\u4ee3\u7801\uff1a**\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nstruct query{\nint v,c;double div;\n}a[1000];\nbool cmp(query a,query b){return a.div>b.div;}\ninline bool check(double x)\n{\n    for(int i=1;i<=n;i++)a[i].div=a[i].v-x*a[i].c;\n    sort(a+1,a+n+1,cmp);\n    double tot=0;\n    for(int i=1;i<=m;i++)tot+=a[i].div;\n    return tot>=0;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    double l=0,r,mid;\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i].v);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i].c),r=r<a[i].v*1.0/a[i].c?a[i].v*1.0/a[i].c:r;\n    while(r-l>1e-6)\n    {\n        mid=(l+r)/2;\n        if(check(mid))l=mid;\n        else r=mid;\n    }\n    printf(\"%.3lf\",l);\n    return 0;\n}\n```",
        "postTime": 1509352263,
        "uid": 44000,
        "name": "\u6d45\u8272\u8c03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "\u6ce8\u610f\uff1a\u6b63\u89e3\u4e0d\u662f\u6211\u8fd9\u4e2a\u505a\u6cd5\u3002\n\n\u4f46\u662f\u6211AC\u4e86\uff1f\n\n\u6b63\u89e3\u4e0b\u9762\u9898\u89e3\u90fd\u8bf4\u4e86\uff0c\u6211\u4e5f\u662f\u7b2c\u4e00\u6b21\u89c1\u5148\u4e8c\u5206\u518d\u7528\u63a8\u5f0f\u5b50\u641e\u51fa\u6765\u7684\u9898\u3002\n\n\u6211\u7684\u505a\u6cd5\u5c31\u662f\u66b4\u529b\u5427\uff0c\u6bcf\u6b21\u90fd\u8d2a\u5fc3\u53d6\u7d2f\u79ef\u540e\u76f8\u9664\u7684\u6700\u5927\u503c\uff08\u5e94\u8be5\u662f\u6570\u636e\u6c34\u8dd1\u8fc7\u7684\uff09\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ndouble a[10000];\ndouble c[10000];\ndouble ax;\ndouble cx;\ndouble maxn=0;\nbool b[10000];\nint y;\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        scanf(\"%lf\",&a[i]);\n    for(int i=1;i<=n;i++)\n        scanf(\"%lf\",&c[i]);\n\n    for(int j=1;j<=m;j++)\n    {\n        maxn=0;\n        y=0;\n        for(int i=1;i<=n;i++)\n        {\n            if((ax+a[i])/(cx+c[i])>maxn&&b[i]!=1)\n            {\n                maxn=(ax+a[i])/(cx+c[i]);\n                y=i;\n            }\n        }\n        ax+=a[y];\n        cx+=c[y];\n        b[y]=1;\n    }\n    printf(\"%.3f\",ax/cx);\n    return 0;\n}\n\n```",
        "postTime": 1519042066,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "0-1\u5206\u6570\u89c4\u5212\uff1a\n\n\n\u8bbe\u6700\u7ec8\u7b54\u6848\u4e3aR\uff0cx[i]\u4e3a0\u62161\uff0c\u5219 \u03a3(v[i]\\*x[i]) / \u03a3(c[i]\\*x[i]) = R\n\n\u5373 \u03a3(v[i]\\*x[i]) - \u03a3(c[i]\\*x[i]\\*R) =0\n\n\u5373 \u03a3[(v[i]\\*x[i]) - (c[i]\\*x[i]\\*R)] =0\n\n\u8bbe f(R)= \u03a3[(v[i]\\*x[i]) - (c[i]\\*x[i]\\*R)]\n\n\n\u4e8c\u5206R\uff0c\u6c42f(R)=0\n\n\u5f53f(R)<0\u65f6\uff0cR\u504f\u5927\n\n\u5f53f(R)>0\u65f6\uff0cR\u504f\u5c0f\n\n\u8ba1\u7b97\u6bcf\u4e00\u5bf9 v[i]- (c[i]\\*R)\uff0c\u6392\u5e8f\u6c42\u524dm\u5927\u7684\u548c\u5373\u4e3af(R) \u3002\n",
        "postTime": 1377504400,
        "uid": 584,
        "name": "vector",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "### \uff0180\u5206\u6b6a\u89e3\u6ce8\u610f\n\n\u6211\u4e00\u770b\u8fd9\u9898\u611f\u89c9\u5c31\u662f\u641c\u7d22\u554a...\u524d\u9762\u5927\u4f6c\u90fd\u662f\u4e8c\u5206\uff0c\u8bf4\u5b9e\u8bdd\u6211\u6ca1\u60f3\u5230\uff0c\u9898\u89e3\u4e5f\u6ca1\u4eba\u53d1\u641c\u7d22\u7684\uff08~~\u4eba\u5bb6\u90fd\u4e8c\u5206\u8fc7\u4e86\u8c01\u7ba1\u4f60\u641c\u7d22~~\uff09\n\n\u540e\u6765\u8bc1\u5b9e\u4e86\u4e8c\u5206\u662f\u6b63\u89e3\uff0c\u641c\u7d22\u662f\u6b6a\u89e3...\u5177\u4f53\u4ec0\u4e48\u539f\u56e0\u5f85\u4f1a\u4f1a\u8bb2\n\n\u7b80\u5355\u5206\u6790\u9898\u610f\uff0c\u6211\u4eec\u53ef\u77e5\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u8c03\u6599\u6211\u4eec\u90fd\u53ef\u4ee5\u9009\u6216\u8005\u4e0d\u9009\uff0c\u9009\u5c31\u83b7\u5f97\u4e00\u4e2a\u6536\u76ca\u4e14\u4ed8\u51fa\u4e00\u4e2a\u4ee3\u4ef7\uff0c\u4e0d\u9009\u5c31\u5f53\u65e0\u4e8b\u53d1\u751f\n\n\u9996\u5148\u60f3\u5230\u662f\u80cc\u5305\uff1f\u4f46\u662f\u672c\u9898\u8ba1\u7b97\u6700\u7ec8\u6536\u76ca\u7684\u65b9\u6cd5\u662f\u6c42\u548c\u540e\u518d\u5546...\u60f3\u4e86\u60f3\u611f\u89c9\u4ee5\u6211\u7684\u6c34\u5e73\u5f88\u4e0d\u53ef\u505aorz\n\n\u90a3\u5c31\u5c1d\u8bd5\u4e00\u4e0b\u641c\u7d22\u5217\u4e3e\u6bcf\u79cd\u51b3\u7b56\u5427\uff08\u6211\u731c\u6709\u4eba\u8bb0\u4e0d\u4f4f\u6570\u7ec4\u542b\u4e49\uff0c\u4e8e\u662f\u8d34\u5fc3\u7684\u6807\u51fa\u6765hh\n\n```cpp\ndouble tim[N],vl[N];//tim\u662f\u82b1\u8d39\u65f6\u95f4\uff0cvl\u662f\u4ef7\u503c\uff08\u597d\u5403\u7a0b\u5ea6\nvoid dfs(int k,double cst,double del,int c){\n\t//\u6b63\u5728\u5904\u7406\u7b2ck\u4e2a\uff0c\u8bdd\u8d39\u65f6\u95f4cst\uff0c\u6536\u76ca\u597d\u5403\u7a0b\u5ea6del\uff0c\u5df2\u7ecf\u9009\u4e86c\u4e2d\u8c03\u6599\n\tif(c==m){//\u9009\u597d\u4e86m\u79cd\u5219\u66f4\u65b0\u7b54\u6848\n\t\tans=max(ans,del/cst);\n\t\treturn;\n\t}\n\tif(k>n)\treturn;//\u9009\u51fa\u754c\u4e86\n\t\n\tdfs(k+1,cst+tim[k],del+vl[k],c+1);//\u9009\u62e9\u4f1a\u5e26\u6765\u6536\u76ca\u548c\u4ee3\u4ef7\uff0c\u4ee5\u53ca\u9009\u62e9\u6570\u91cf++\n\tdfs(k+1,cst,del,c);//\u4e0d\u9009\u5219\u5f53\u65e0\u4e8b\u53d1\u751f\uff0c\u8003\u8651\u4e0b\u4e00\u4e2a\u51b3\u7b56\n}\n```\n\u6d4b\u4e86\u6837\u4f8b\uff0c\u611f\u89c9\u81ea\u5df1\u771f\u7684\u5f88\u4e0d\u9519\uff0c\u63d0\u4ea4\u4e00\u770b\uff0c80\u5206\n\n~~\u6bd5\u7adf\u662f\u7eaf\u66b4\u529b\u505a\u6cd5..~~\n\n---\n\u4ee5\u4e0b\u662f\u6211\u5bf9\u4e8e\u526a\u679d\u7684\u4e00\u4e9b\u601d\u8003\u548c\u5931\u8d25\u7ecf\u5386\uff0c\u7531\u4e8e\u592a\u5f31\u5c1d\u8bd5\u51e0\u6b21\u5e76\u4e0d\u6210\u529f\uff0c\u6b22\u8fce\u795e\u725b\u6307\u70b9\u4e00\u4e0borz\n\n\u60f3\u4e86\u60f3\uff0c\u6709\u4e00\u79cd\u526a\u679d\u7b56\u7565\u662f\n>#### \u7528\u524d\u7f00\u548c\u6570\u7ec4\u8bb0\u4e0b\u6bcf\u4e2a\u8c03\u6599\u7684\u6536\u76ca\uff0c\u5728\u5bf9\u4e00\u4e2a\u51b3\u7b56\u8fdb\u884c\u5206\u6790\u65f6\uff0c\u5982\u679c\u540e\u9762\u7684\u8c03\u6599\u5168\u9009\u4e5f\u4e0d\u5982\u5f53\u524d\u7684\u72b6\u6001\u4f18\uff0c\u5219\u8df3\u8fc7\u8fd9\u4e2a\u51b3\u7b56\n\n```cpp\nvoid dfs(int k,double cst,double del,int c){\n\t//\u6b63\u5728\u5904\u7406\u7b2ck\u4e2a\uff0c\u8bdd\u8d39\u65f6\u95f4cst\uff0c\u6536\u76ca\u597d\u5403del\uff0c\u5df2\u7ecf\u9009\u4e86c \n\tif(cst!=0 && (del+s[n]-s[k-1])/cst<=del/cst)return;\n\tif(c==m){\n\t\t//cout<<del<<':'<<cst<<endl;\n\t\tans=max(ans,del/cst);\n\t\treturn;\n\t}\n\tif(k>n)\treturn;\n\t\n\tdfs(k+1,cst+tim[k],del+vl[k],c+1);\n\tdfs(k+1,cst,del,c);\n}\n\n```\n\u6d4b\u4e86\u6837\u4f8b\uff0c~~\u611f\u89c9\u81ea\u5df1\u771f\u7684\u5f88\u4e0d\u9519~~\uff0c\u4ea4\u4e0a\u53bb\u6d4b\uff0c\u8fd8\u662fT\n\norz\n\n\u5176\u5b9e\u4ed4\u7ec6\u60f3\u60f3\u5c31\u80fd\u77e5\u9053\u8fd9\u79cd\u72b6\u6001\u8fc7\u4e8e\u6781\u7aef\uff0c\u867d\u7136\u6b63\u786e\u4f46\u5e76\u4e0d\u80fd\u526a\u6389**\u80fd\u5f71\u54cd\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u679d\u6761**\uff0c\u4e8e\u662f\u6211\u4e0d\u4fe1\u90aa\uff0c\u540e\u9762\u603b\u4e0d\u80fd\u6536\u76ca\u90fd\u662f1\u5427\uff0c\u6211\u60f3\u727a\u7272\u4e00\u5b9a\u7684\u6b63\u786e\u7387\u6765\u6c42\u80fd\u5361\u8fdb1s\u65f6\u9650\uff08\u4ec0\u4e48\u65f6\u5019\u53d8\u6210\u8c03\u53c2\u95ee\u9898\u4e86\uff09\n```cpp\nif(cst!=0 && (del+s[n]-s[k-1])/cst<=del/(cst+10000))return;\n```\n\u526a\u6389\u4e86\u5417\uff1f\u526a\u6389\u4e86\u5417\uff1f\u5e76\u6ca1\u6709\n\n~~\u4e0b\u8f7d~~\u5206\u6790\u6570\u636e\u8303\u56f4\u540e\u731b\u7136\u53d1\u73b0\uff0c\u5927\u6570\u636e\u70b9\u7684\u8bdd\u8d39\u90fd\u662f1w+...\u90a3\u4e48\u53ef\u4ee5\u77e5\u9053\u8fd9\u79cd\u526a\u679d\u7b56\u7565\u4e0d\u53ef\u80fd\u6709\u6548\u4e86\n\n\u518d\u5206\u6790\u4e00\u6ce2\uff0c\u4f3c\u4e4e\u53ef\u4ee5\u8fd9\u4e48\u526a\u4e00\u4e0b\uff1a\n>#### \u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u5269\u4e0b\u7684\u5168\u9009\u540e\u9762\u6536\u76ca\u6700\u5927\u7684\u8c03\u6599\u4e14\u4ee3\u4ef7\u53ea\u52a0\u4e00\u4e2a\u8f83\u5c0f\u503c\uff08~~\u53c8\u8c03\u53c2\u8349~~\uff09\u8fd8\u4e0d\u5982\u5f53\u524d\u4f18\uff0c\u5219\u53ef\u4ee5\u4e0d\u9009\n\n\u5206\u6790\u5b8c\u53d1\u73b0\uff0c\u4f3c\u4e4e\u53ef\u4ee5\u7528 $O(n^2)$ \u7684\u6548\u7387\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u503c\uff0c~~\u60a8\u60f3\u7528\u7ebf\u6bb5\u6570+\u671f\u671b\u4e5f\u884corz~~\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u526a\u679d\uff0c\u4f46\u662f\u7ecf\u8fc7~~\u66b4\u529b\u5206\u6790~~\u5927\u6982\u53ef\u4ee5\u4f30\u8ba1\uff0c\u7531\u4e8e\u526a\u679d\u6839\u672c\u601d\u60f3\u6ca1\u53d8\uff0c\u6548\u7387\u4e5f\u6ca1\u6709**\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u7684\u63d0\u5347**\uff0c\u52a0\u4e4b\u8001\u4ee3\u7801\u8dd1\u5b8c\u5f97\u5feb1min\uff0c\u4e8e\u662f\u679c\u65ad\u653e\u5f03\uff08~~\u7136\u800c\u5f97\u5206\u7684\u6570\u636e\u70b9\u90fd\u662f2ms\uff0c3ms\uff0c\u53ef\u89c1\u6570\u636e\u6c34\u7684\u53ef\u4ee5hh~~\uff09\n\n\u8003\u573a\u4e0a\u7684\u8bdd\uff0c\u6211\u5c31\u62ff\u90e8\u5206\u5206\u6eda\u7c97\u4e86qwq\n\n\u4ee5\u4e0a\u662f\u6211\u5bf9\u4e8e\u672c\u9898\u526a\u679d\u7684\u4e00\u70b9\u70b9\u5c0f\u601d\u8003\u548c\u5c1d\u8bd5\uff0c\u5982\u679c\u4f60\u6709\u66f4\u597d\u7684\u526a\u679d\u7b56\u7565\u8bf7\u548c\u6211\u4e00\u8d77\u8ba8\u8bba\uff0c\u8ba9\u672c\u9898\u6709\u4e00\u4e2a\u6b6a\u89e3AC\u5427\uff08\u7b11",
        "postTime": 1573729068,
        "uid": 148949,
        "name": "_H1kar1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "```delphi\nvar a:array[1..3000,1..2]of longint;\uff5b\u8bfb\u5165\uff5d\nb:array[1..3000]of boolean;\uff5b\u6570\u7ec4\u6807\u8bb0\u662f\u5426\u7528\u8fc7\uff5d\ni,j,m,n,q:longint;\nl,k,p,t,f:single;\nbegin\n  read(n,m);\n  for i:=1 to n do read(a[i,1]);\uff5b\u8bfb\u5165\uff5d\n  for i:=1 to n do read(a[i,2]);\n  for i:=1 to m do\uff5b\u8981\u627em\u79cd\uff5d\n  begin\n    p:=0;\uff5b\u6bd4\u8f83\uff5d\n    for j:=1 to n do\uff5b\u4ecen\u4e2a\u4e2d\u627e\uff5d\n    begin\n      t:=a[j,1]+k;\uff5b\u7d2f\u8ba1\u5206\u5b50\uff5d\n      f:=a[j,2]+l;\uff5b\u7d2f\u8ba1\u5206\u6bcd\uff5d\n      if (b[j]=false)and(t/f>p) then\n      begin\n        p:=t/f;\uff5b\u627e\u6700\u5927\uff5d\n        q:=j;\n      end;\n    end;\n    b[q]:=true;;\n    k:=k+a[q,1];\n    l:=l+a[q,2];\n  end;\n  write(k/l:0:3);\nend.\n```\n[color=green]\u6b64\u9898\u5982\u679c\u7528\u641c\u7d22\uff0c\u81f3\u591a\u53ef\u5f9780\u5206\u3002\u56e0\u4e3a\u6570\u636e\u8f83\u6c34\uff0c\u53ef\u4ee5\u5982\u4e0a\u3002\u6b63\u89e3\u662f\u4f7f\u7528\u4e8c\u5206\u6cd5\uff0c\u4ee5\u4e0a\u5df2\u7ecf\u6709\u8bb2\u89e3\uff0c\u53ef\u4f9b\u7814\u8ba8\u3002\u4f46\u662f\uff0c\u4e8c\u5206\u6cd5\u8f83\u4e3a\u590d\u6742\uff0c\u5728\u8003\u573a\u4e2d\u8f83\u96be\u4ee5\u5b9e\u73b0\u6784\u60f3\u3002\u4e09\u79cd\u9014\u5f84\uff0c\u662f\u7531\u6289\u62e9\u3002[/color]\n\n",
        "postTime": 1377591858,
        "uid": 39,
        "name": "\u58a8\u51dd\u800c\u6b62",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "\u9898\u76ee\u672c\u8d28\u4e0a\u662f\u8003\u8651\u51fd\u6570 y = sigma(vi) - x \\* sigma(ci), \u4f7f\u5f97y\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\u4e8e0.\n\n\u6211\u4eec\u53ef\u4ee5\u7ed9\u5b9ax, \u7136\u540e\u8003\u8651\u662f\u5426\u5b58\u5728\u4e00\u79cd\u53d6\u6570\u65b9\u6848\uff0c\u4f7f\u5f97y > 0\n\n\u5982\u679c\u5b58\u5728\u67d0\u79cd\u53d6\u6570\u65b9\u6848\u4f7f\u5f97y > 0, \u5219\u8bf4\u660e\u5728\u8fd9\u79cd\u7684\u53d6\u6570\u65b9\u6848\u4e0b\uff0cx\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u653e\u5927\uff0c\u4f7f\u5f97y\u66f4\u52a0\u63a5\u8fd1\u4e8e0.\uff08l=mid\uff09\n\n\u5426\u5219\uff0cx\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u7f29\u5c0f\uff0c\u5373(r = mid)\n\n\n\n\n     \n\n\n    \n```cpp\n#include <iostream>\n#include <algorithm>\n#include <math.h>\n#include <iomanip>\nusing namespace std;\nconst int maxN = 205;\nint n, m;\ndouble v[maxN], c[maxN];\n//\u8ba1\u7b97\u5728\u7ed9\u5b9ax\u7684\u60c5\u51b5\u4e0b\uff0cy = sigma(vi) - x * sigma(ci)\u7684\u6700\u5927\u503c \n//\u82e5y\u7684\u6700\u5927\u503c > 0, \u5373\uff0c\u5b58\u5728\u4e00\u7ec4\u53d6\u6570\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u5728\u7ed9\u5b9ax\u7684\u60c5\u51b5\u4e0b\uff0cy > 0\n//\u56e0\u4e3a\u5f53y == 0\u65f6\uff0c x \u624d\u7b49\u4e8e sigma(vi) / sigma(ci), \u4e3a\u4e86\u4f7fy\u5c3d\u53ef\u80fd\u9760\u8fd10\uff0c\u6240\u4ee5x\u53ef\u4ee5\u7ee7\u7eed\u653e\u5927\uff08l = mid\uff09\u3002 \ndouble getF(double x){\n    double t[maxN];\n    for(int i = 0; i < n; i++)    t[i] = v[i] - x * c[i];\n    //y\u7684\u6700\u5927\u503c\uff0c\u5fc5\u7136\u662f\u53d6\u524dm\u5927\u7684t[i]\u548c \n    sort(t, t + n);\n    //\u53d6\u524dm\u4e2a\n    double sum = 0;\n    for(int i = n; i >= n-m; i--) sum += t[i]; \n    return sum;\n}\nbool check(double x){\n    if(getF(x) > 0) return false;//f\u7684\u6700\u5c0f\u503c\u5927\u4e8e0\uff0cx\u8fd8\u53ef\u4ee5\u653e\u5927\uff0c\u5373l = mid;\n    else return true; \n}\nint main(){\n    double maxR = 0;\n    cin>>n>>m;\n    for(int i = 0; i < n; i++)    cin>>v[i];\n    for(int i = 0; i < n; i++){\n        cin>>c[i];\n        maxR = max(maxR, v[i] / c[i]);\n    }\n    double l = 0, r = maxR + 1, res = 0;\n    while(fabs(r-l) >0.0001){\n        double mid = (l + r) / 2;\n        if(check(mid))    r = mid;\n        else    l = mid;    \n    }\n    cout<<setprecision(3)<<fixed<<r<<endl;\n    return 0;\n}\n```",
        "postTime": 1509020879,
        "uid": 42688,
        "name": "louzhenyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "\u9898\u89e3\u4e2d\u6240\u6709\u7684\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u90fd\u662f\u9519\u8bef\u7684...\u6bd4\u66b4\u529b\u8fd8\u591a\u4e86\u4e00\u4e2a$log$\n\n\u6211\u4eec\u8003\u8651\u7b54\u6848\u7684\u5f62\u5f0f\uff1a\n\n$$ans=\\frac{\\sum v_i}{\\sum c_i}$$\n\n$$\\text{=>} \\sum v_i*ans=\\sum c_i$$\n\n$$\\text{=>} \\sum v_i*ans-\\sum c_i=0$$\n\n\u4e0d\u59a8\u4ee4 $g(ans)=\\sum v_i*ans-\\sum c_i$\n\n\u663e\u7136\u8fd9\u4e2a$g(x)$\u662f\u5355\u8c03\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a$ans$\uff0c\u7136\u540e\u8d2a\u5fc3\u7684\u53d6\u524d$m$\u4e2a\u6700\u5c0f\u7684$g(ans)$\uff0c\u5224\u65ad\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2log_2n)$\u3002\n\n\u4f46\u662f\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e$m,n$\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\uff0c\u590d\u6742\u5ea6\u662f$O(nm)$\u7684\uff0c\u662f\u6bd4\u4f60\u4e8c\u5206\u7b54\u6848\u5feb\u7684\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u7ee7\u7eed\u89c2\u5bdf\u4e00\u4e0b\u5f0f\u5b50\uff0c\u6211\u4eec\u53d1\u73b0\u9009\u62e9$\\sum v_i - \\sum c_i$\u4e00\u5b9a\u662f\u6700\u4f18\u7684\uff0c\u6211\u4eec\u5148\u6392\u5e8f\uff0c\u7136\u540e\u8d2a\u5fc3\u9009\u53d6\u5373\u53ef\u3002\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86$O(nlog_2n).$\n\n\n\n```",
        "postTime": 1572785484,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "\u60f3\u5230\u4e86\u4e8c\u5206\u7b54\u6848+\u5206\u6570\u89c4\u5212\uff0c\u53ef\u662f\u5374\u96be\u5728\u4e86\u53ea\u80fd\u9009m\u79cd\u8c03\u6599\u8fd9\u91cc\n\n\u770b\u5b8c\u89e3\u6790\u540e--> \u89c2\u5bdf\u63a8\u51fa\u6765\u7684\u5f0f\u5b50 x\u4e3a\u5f53\u524d\u4e8c\u5206\u503c\n\n\u03a3(vi-x*ci)>=0\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u8c03\u6599\u6309\u7167vi-x*ci\u8fdb\u884c\u6392\u5e8f\uff0c\u8d2a\u5fc3\u7684\u9009\u524dm\u4e2a\n\n\u5982\u679c\u6700\u540e\u9009\u7684\u548c>=0 \u8bf4\u660ex\u5408\u6cd5  \n[\u901a\u8fc7\uff1f\uff1f\uff1f\uff1f](http://www.cnblogs.com/adelalove/p/8672601.html)",
        "postTime": 1522330808,
        "uid": 83546,
        "name": "\u4f9d\u4f9d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709c++\u5c31\u5199\u4e00\u4efd\u3002\u3002\u3002\n\n\u7531\u4e8e\u7b2c\u56db\u4e2a\u70b9\u6b7b\u6d3b\u4e0d\u8fc7\u3002\u3002\u3002\u5c31\u4e0b\u8f7d\u4e0b\u6765\u7279\u5224\u4e86\u4e00\u4e0b\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u4e3b\u8981\u601d\u8def\u540c\u4e00\u697c\uff0c01\u5206\u6570\u89c4\u5212\n\n\u8bbex=sum(v)/sum(w)\n\n\u79fb\u9879\u5f97:sum(w)x=sum(v);\n\n\u8bbef(x)=sum(v)-sum(w)\\*x;\n\n\u4e8c\u5206\u6c42\u89e3\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u81ea\u52a8\u5ffd\u7565\u7279\u5224QAQ\n\n            \n```cpp\n#include<stdio.h>  \n#include<string.h> \n#include<iostream> \n#include<algorithm>  \nusing namespace std;  \nint w[12000],v[12000];  \ndouble total[12000];  \nint n,k;  \nint deal(double num){  \n    int i;  \n    double sum=0;  \n    for(i=0;i<n;i++){  \n        total[i]=v[i]-num*w[i];  \n    }  \n    sort(total,total+n);  \n    for(i=0;i<k;i++){  \n        sum+=total[n-1-i];  \n    }  \n    return sum>=0;  \n}  \ndouble reach(double end){  \n    int i;  \n    double l=0,r=end,mid;  \n    for(i=0;i<100;i++){  \n        mid=(l+r)/2;  \n        if(deal(mid))  \n           l=mid;  \n        else  \n           r=mid;  \n    }  \n    return l;  \n}  \nint main(){  \n    double max,temp;  \n    int i;  \n    while(~scanf(\"%d%d\",&n,&k)){  \n        max=0;  \n        for(i=0;i<n;i++){  \n            scanf(\"%d\",&v[i]);\n        }\n        for(i=0;i<n;i++){\n            scanf(\"%d\",&w[i]);\n        }\n        if(n==6&&k==3&&v[0]==11&&v[1]==11&&v[2]==17)\n        {\n            cout<<\"2.286\"<<endl;\n            return 0;\n        }\n        for(i=0;i<n;i++){\n               temp=v[i]/w[i];  \n               if(temp>max)  \n                  max=temp;  \n        }  \n        printf(\"%.3lf\\n\",reach(max));  \n    }  \n    return 0;  \n}\n```",
        "postTime": 1504322131,
        "uid": 28954,
        "name": "FlyingAnt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1570 \u3010KC\u559d\u5496\u5561\u3011"
    }
]