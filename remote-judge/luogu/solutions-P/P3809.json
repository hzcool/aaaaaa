[
    {
        "content": "# \u540e\u7f00\u6570\u7ec4 \u6700\u8be6\u7ec6(maybe)\u8bb2\u89e3\n# \u66f4\u8be6\u7ec6\u8bf7\u524d\u5f80[\u849f\u84bb\u7684\u535a\u5ba2](https://xminh.github.io/)\n\n\u540e\u7f00\u6570\u7ec4\u8fd9\u4e2a\u4e1c\u897f\u771f\u7684\u662f\u795e\u4ed9\u64cd\u4f5c\u2026\u2026\n\n\u4f46\u662f\u8fd9\u4e2a\u6bd4\u8f83\u795e\u4ed9\u7684\u4e1c\u897f\u5728\u7f51\u4e0a\u7684\u8bb2\u89e3\u4e00\u822c\u90fd\u4ec5\u9650\u4e8e\u601d\u60f3\u800c\u4e0d\u662f\u4ee3\u7801\uff0c\u800c\u4e14\u8fd9\u4e2a\u4e1c\u897f\u5f00\u4e00\u5806\u6570\u7ec4\uff0c\u5f88\u591a\u521d\u5b66\u8005\u5199\u4ee3\u7801\u7684\u65f6\u5019\u5f88\u5bb9\u6613\u53d1\u751f\u6b67\u4e49\u7406\u89e3\uff0c\u6240\u4ee5\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u6bd4\u8f83\u8be6\u7ec6\u7684\u8bb2\u89e3\u3002\u7b14\u8005\u81ea\u5df1\u4e5f\u662f\u548c\u540e\u7f00\u6570\u7ec4\u786c\u521a\u4e86\u4e00\u4e2a\u4e0a\u5348\u5916\u52a0\u4e00\u4e2a\u4e2d\u5348\u624d\u7406\u89e3\u7684\u677f\u5b50\u3002\n\n\u672c\u4eba\u7248\u6743\u610f\u8bc6\u8584\u5f31\uff0c\u5982\u6709\u4fb5\u6743\u73b0\u8c61\u8bf7\u8054\u7cfb\u535a\u4e3b\u90ae\u7bb1xmzl200201@126.com\n\n\u53c2\u8003\u6587\u732e\uff1a\n\n[\u767e\u5ea6\u767e\u79d1_\u540e\u7f00\u6570\u7ec4](https://baike.baidu.com/item/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/8989867?fr=aladdin)\n\n[%%%\u66f2\u795e\u5b66\u957f\u7684blog%%%](http://www.yhzq-blog.cc/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/)\n\n\u4ee5\u4e0b\u662f\u4e0d\u8ba4\u8bc6\u7684dalao\u4eec\uff1a\n\n[wsy\u7684cnblog](https://www.cnblogs.com/wsy01/p/6935135.html)\n\n[soda\u7684cnblog](https://www.cnblogs.com/thmyl/p/6296648.html)\n\n[I'MJACKY\u7684cnblog](https://www.cnblogs.com/shanchuan04/p/5324009.html)\n\n[\u8463\u96e8\u7684cnblog](https://www.cnblogs.com/jackdong/archive/2012/10/15/2724034.html)\n\n\u7279\u522b\u611f\u8c22\u4ee5\u4e0b\u7684\u4e24\u4f4ddalao\uff0c\u5199\u7684\u7279\u522b\u597d\uff0c\u6253call\n\n[J.K.\u7684cnblog](https://www.cnblogs.com/jinkun113/p/4743694.html)\n\n[J_Sure\u7684csdn](http://blog.csdn.net/j_sure/article/details/41777097)\n\n## \u4ec0\u4e48\u662f\u540e\u7f00\u6570\u7ec4\n\n\u6211\u4eec\u5148\u770b\u51e0\u6761\u5b9a\u4e49\uff1a\n\n### \u5b50\u4e32\n\n\u5728\u5b57\u7b26\u4e32s\u4e2d\uff0c\u53d6\u4efb\u610fi<=j\uff0c\u90a3\u4e48\u5728s\u4e2d\u622a\u53d6\u4ecei\u5230j\u7684\u8fd9\u4e00\u6bb5\u5c31\u53eb\u505as\u7684\u4e00\u4e2a\u5b50\u4e32\n\n### \u540e\u7f00\n\n\u540e\u7f00\u5c31\u662f\u4ece\u5b57\u7b26\u4e32\u7684\u67d0\u4e2a\u4f4d\u7f6ei\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u5b50\u4e32\uff0c\u6211\u4eec\u5b9a\u4e49**\u4ee5s\u7684\u7b2ci\u4e2a\u5b57\u7b26\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u7f00\u4e3asuff(i)**\n\n### \u540e\u7f00\u6570\u7ec4\n\n\u628as\u7684\u6bcf\u4e2a\u540e\u7f00\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\n\n\u540e\u7f00\u6570\u7ec4sa[i]\u5c31\u8868\u793a**\u6392\u540d\u4e3ai\u7684\u540e\u7f00**\u7684\u8d77\u59cb\u4f4d\u7f6e\u7684\u4e0b\u6807\n\n\u800c\u5b83\u7684\u6620\u5c04\u6570\u7ec4rk[i]\u5c31\u8868\u793a**\u8d77\u59cb\u4f4d\u7f6e\u7684\u4e0b\u6807\u4e3ai\u7684\u540e\u7f00**\u7684\u6392\u540d\n\n\u7b80\u5355\u6765\u8bf4\uff0csa\u8868\u793a\u6392\u540d\u4e3ai\u7684\u662f\u5565\uff0crk\u8868\u793a\u7b2ci\u4e2a\u7684\u6392\u540d\u662f\u5565\n\n\u4e00\u5b9a\u8981\u8bb0\u7262\u8fd9\u4e9b\u6570\u7ec4\u7684\u610f\u601d\uff0c\u540e\u9762\u770b\u4ee3\u7801\u7684\u65f6\u5019\u5982\u679c\u8bb0\u4e0d\u7262\u7684\u8bdd\u5c31\u7edd\u5bf9\u770b\u4e0d\u61c2\n\n## \u540e\u7f00\u6570\u7ec4\u7684\u601d\u60f3\n\n\u5148\u8bf4\u6700\u66b4\u529b\u7684\u60c5\u51b5\uff0c\u5feb\u6392(n log n)\u6bcf\u4e2a\u540e\u7f00\uff0c\u4f46\u662f\u8fd9\u662f\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6bd4\u8f83\u4efb\u610f\u4e24\u4e2a\u540e\u7f00\u7684\u590d\u6742\u5ea6\u5176\u5b9e\u662fO(n)\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u662f\u63a5\u8fd1O(n^2 log n)\u7684\u590d\u6742\u5ea6\uff0c\u6570\u636e\u5927\u4e86\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u6709\u4e24\u4e2a\u4f18\u5316\u3002\n\nps\uff1a\u672c\u6587\u4e2d\u7684^\u8868\u793a\u5e73\u65b9\u800c\u4e0d\u662f\u5f02\u6216\n\n### \u500d\u589e\n\n\u9996\u5148\u8bfb\u5165\u5b57\u7b26\u4e32\u4e4b\u540e\u6211\u4eec\u73b0\u6839\u636e\u5355\u4e2a\u5b57\u7b26\u6392\u5e8f\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u5148\u6309\u7167\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6392\u5e8f\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u6309\u7167\u5b57\u5178\u5e8f\u7ed9\u4e00\u4e2a\u6392\u540d(\u5f53\u7136\u53ef\u4ee5\u5e76\u5217)\uff0c\u8fd9\u91cc\u79f0\u4f5c\u5173\u952e\u5b57\u3002\n\n![havana1](https://github.com/xMinh/xMinh.github.io/blob/master/pic/havana1.png?raw=true)\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u628a\u76f8\u90bb\u7684\u4e24\u4e2a\u5173\u952e\u5b57\u5408\u5e76\u5230\u4e00\u8d77\uff0c\u5c31\u76f8\u5f53\u4e8e\u6839\u636e\u6bcf\u4e00\u4e2a\u540e\u7f00\u7684\u524d\u4e24\u4e2a\u5b57\u7b26\u8fdb\u884c\u6392\u5e8f\u3002\u60f3\u60f3\u770b\uff0c\u8fd9\u6837\u5c31\u662f\u4ee5\u7b2c\u4e00\u4e2a\u5b57\u7b26(\u4e5f\u5c31\u662f\u81ea\u5df1\u672c\u8eab)\u7684\u6392\u540d\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u7684\u6392\u540d\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u628a\u7ec4\u6210\u7684\u65b0\u6570\u6392\u5b8c\u5e8f\u4e4b\u540e\u518d\u6b21\u6807\u53f7\u3002\u6ca1\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u8865\u96f6\u3002\n\n![havana2](https://github.com/xMinh/xMinh.github.io/blob/master/pic/havana2.png?raw=true)\n\n\n\n\u65e2\u7136\u662f\u500d\u589e\uff0c\u5c31\u8981\u6709\u70b9\u500d\u589e\u7684\u6837\u5b50\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u5728\u7b2ci\u4f4d\u4e0a\u7684\u5173\u952e\u5b57\uff0c\u5b83\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u5c31\u662f\u7b2c(i+2)\u4f4d\u7f6e\u4e0a\u7684\uff0c\u8054\u60f3\u4e00\u4e0b\uff0c\u56e0\u4e3a\u73b0\u5728\u7b2ci\u4f4d\u4e0a\u7684\u5173\u952e\u5b57\u662fsuff(i)\u7684\u524d\u4e24\u4e2a\u5b57\u7b26\u7684\u6392\u540d\uff0c\u7b2ci+2\u4f4d\u7f6e\u4e0a\u7684\u5173\u952e\u5b57\u662fsuff(i+2)\u7684\u524d\u4e24\u4e2a\u5b57\u7b26\u7684\u6392\u540d\uff0c\u8fd9\u4e24\u4e2a\u4e00\u5408\u5e76\uff0c\u4e0d\u5c31\u662fsuff(i)\u7684\u524d\u56db\u4e2a\u5b57\u7b26\u7684\u6392\u540d\u5417\uff1f\u65b9\u6cd5\u540c\u4e0a\uff0c\u6392\u5e8f\u4e4b\u540e\u91cd\u65b0\u6807\u53f7\uff0c\u6ca1\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u8865\u96f6\u3002\u540c\u7406\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u4e0b\u4e00\u6b21\u6211\u4eec\u8981\u5408\u5e76\u7684\u662f\u7b2ci\u4f4d\u548c\u7b2ci+4\u4f4d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u5373\u53ef\u2026\u2026\n\nps\uff1a\u672c\u6587\u4e2d\u7684\u201c\u7b2ci\u4f4d\u201d\u8868\u793a\u4e0b\u6807\u800c\u4e0d\u662f\u6392\u540d\u3002\u6392\u540d\u7684\u8bdd\u6211\u4f1a\u8bf4\u201c\u6392\u540d\u4e3ai\u201d\n\n![havana3](https://github.com/xMinh/xMinh.github.io/blob/master/pic/havana3.png?raw=true)\n\n\u90a3\u4e48\u6211\u4eec\u4ec0\u4e48\u65f6\u5019\u7ed3\u675f\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u5f53\u6240\u6709\u7684\u6392\u540d\u90fd\u4e0d\u540c\u7684\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u9000\u51fa\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6392\u597d\u4e86\u3002\n\n\u663e\u7136\u8fd9\u6837\u6392\u5e8f\u7684\u901f\u5ea6\u7a33\u5b9a\u5728(log n)\n\n###  \u57fa\u6570\u6392\u5e8f\n\n\u5982\u679c\u6211\u4eec\u7528\u5feb\u6392\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u5c31\u662f(n log^2 n) \u8fd8\u662f\u592a\u5927\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u7528\u4e00\u6ce2\u57fa\u6570\u6392\u5e8f\u4f18\u5316\u4e00\u4e0b\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u6bcf\u4e00\u6b21\u6392\u5e8f\u90fd\u662f\u6392\u4e24\u4f4d\u6570\uff0c\u6240\u4ee5\u57fa\u6570\u6392\u5e8f\u53ef\u4ee5\u5c06\u5b83\u4f18\u5316\u5230O(n)\u7ea7\u522b\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662f(n log n)\u3002\n\n\u4ecb\u7ecd\u4e00\u4e0b\u4ec0\u4e48\u662f\u57fa\u6570\u6392\u5e8f\uff0c\u8fd9\u91cc\u5c31\u62ff\u4e24\u4f4d\u6570\u4e3e\u4f8b\n\n\u6211\u4eec\u8981\u5efa\u4e24\u4e2a\u6876\uff0c\u4e00\u4e2a\u88c5\u4e2a\u4f4d\uff0c\u4e00\u4e2a\u88c5\u5341\u4f4d\uff0c\u6211\u4eec\u5148\u628a\u6570\u52a0\u5230\u4e2a\u4f4d\u6876\u91cc\u9762\uff0c\u518d\u52a0\u5230\u5341\u4f4d\u6876\u91cc\u9762\uff0c\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u4e2a\u5341\u4f4d\u6876\uff0c\u6876\u5185\u7684\u987a\u5e8f\u80af\u5b9a\u662f\u6309\u4e2a\u4f4d\u5347\u5e8f\u7684\uff0c\u5f88\u597d\u7406\u89e3\u3002\n\n## \u6700\u957f\u516c\u5171\u524d\u7f00\u2014\u2014\u540e\u7f00\u6570\u7ec4\u7684\u8f85\u52a9\u5de5\u5177\n\n\u8bdd\u8bf4\u8fd9\u4e2a\u8d39\u4e86\u6211\u597d\u957f\u65f6\u95f4\uff0c\u5c31\u4e3a\u4e86\u8bc1\u660e\u51e0\u6761\u5b9a\u7406\u2026\u2026\u61d2\u5f97\u8bc1\u660e\u7684\u8bdd\u80cc\u8fc7\u5c31\u884c\u4e86\uff0c\u4e0d\u8fc7\u7b14\u8005\u8fd8\u662f\u89c9\u5f97\u77e5\u9053\u8bc1\u660e\u7528\u8d77\u6765\u66f4\u8e0f\u5b9e\u4e00\u4e9b\uff0c\u8bdd\u8bf4\u6211\u7684\u8bc1\u660e\u8fc7\u7a0b\u5e94\u8be5\u6bd4\u8f83\u597d\u61c2\uff0c\u9002\u5408\u521d\u5b66\u8005\u7406\u89e3\u2026\u2026\n\n### \u4ec0\u4e48\u662fLCP\uff1f\n\n\u6211\u4eec\u5b9a\u4e49LCP(i,j)\u4e3asuff(sa[i])\u4e0esuff(sa[i])\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\n\n### \u4e3a\u4ec0\u4e48\u8981\u6c42LCP\uff1f\n\n\u540e\u7f00\u6570\u7ec4\u8fd9\u4e2a\u4e1c\u897f\uff0c\u4e0d\u53ef\u80fd\u53ea\u8ba9\u4f60\u6392\u4e2a\u5e8f\u5c31\u5b8c\u4e8b\u4e86\u2026\u2026\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u90fd\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u8f85\u52a9\u5de5\u5177LCP\u6765\u505a\u9898\u7684\n\n### \u5173\u4e8eLCP\u7684\u51e0\u6761\u6027\u8d28 \n\n#### \u663e\u800c\u6613\u89c1\u7684\n\n1. LCP(i,j)=LCP(j,i);\n2. LCP(i,i)=len(sa[i])=n-sa[i]+1;\n\n\u8fd9\u4e24\u6761\u6027\u8d28\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u5bf9\u4e8ei>j\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u8f6c\u5316\u6210i<j\uff0c\u5bf9\u4e8ei==j\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7b97\u957f\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u8ba8\u8bbai<j\u7684\u60c5\u51b5\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u4f9d\u6b21\u6bd4\u8f83\u5b57\u7b26\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u5355\u6b21\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u592a\u9ad8\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u505a\u4e00\u5b9a\u7684\u9884\u5904\u7406\u624d\u884c\u3002\n\n#### LCP Lemma\n\n**LCP(i,k)=min(LCP(i,j),LCP(j,k)) \u5bf9\u4e8e\u4efb\u610f1<=i<=j<=k<=n**\n\n\u8bc1\u660e\uff1a\u8bbep=min{LCP(i,j),LCP(j,k)}\uff0c\u5219\u6709LCP(i,j)\u2265p,LCP(j,k)\u2265p\u3002\n\n\u8bbesuff(sa[i])=u,suff(sa[j])=v,suff(sa[k])=w;\n\n\u6240\u4ee5u\u548cv\u7684\u524dp\u4e2a\u5b57\u7b26\u76f8\u7b49\uff0cv\u548cw\u7684\u524dp\u4e2a\u5b57\u7b26\u76f8\u7b49\n\n\u6240\u4ee5u\u548cw\u7684\u524dp\u7684\u5b57\u7b26\u76f8\u7b49\uff0cLCP(i,k)>=p\n\n\u8bbeLCP(i,k)=q>p \u90a3\u4e48q>=p+1\n\n\u56e0\u4e3ap=min{LCP(i,j),LCP(j,k)}\uff0c\u6240\u4ee5u[p+1]!=v[p+1] \u6216\u8005 v[p+1]!=w[p+1]\n\n\u4f46\u662fu[p+1]=w[p+1] \u8fd9\u4e0d\u5c31\u81ea\u76f8\u77db\u76fe\u4e86\u5417\n\n\u6240\u4ee5LCP(i,k)<=p\n\n\u7efc\u4e0a\u6240\u8ff0LCP(i,k)=p=min{LCP(i,j),LCP(j,k)}\n\n#### LCP Theorem\n\n**LCP(i,k)=min(LCP(j,j-1)) \u5bf9\u4e8e\u4efb\u610f1<i<=j<=k<=n**\n\n\u8fd9\u4e2a\u7ed3\u5408LCP Lemma\u5c31\u5f88\u597d\u7406\u89e3\u4e86\n\n\u6211\u4eec\u53ef\u4ee5\u628ai~k\u62c6\u6210\u4e24\u90e8\u5206i~(i+1)\u4ee5\u53ca(i+1)~k\n\n\u90a3\u4e48LCP(i,k)=min(LCP(i,i+1),LCP(i+1,k))\n\n\u6211\u4eec\u53ef\u4ee5\u628a(i+1)~k\u518d\u62c6\uff0c\u8fd9\u6837\u5c31\u50cf\u4e00\u4e2aDP\uff0c\u6b63\u786e\u6027\u663e\u7136\n\n### \u600e\u4e48\u6c42LCP\uff1f\n\n\u6211\u4eec\u8bbeheight[i]\u4e3aLCP(i,i-1)\uff0c1<i<=n\uff0c\u663e\u7136height[1]=0;\n\n\u7531LCP Theorem\u53ef\u5f97\uff0cLCP(i,k)=min(height[j]) i+1<=j<=k\n\n\u90a3\u4e48height\u600e\u4e48\u6c42\uff0c\u679a\u4e3e\u5417\uff1fNONONO\uff0c\u6211\u4eec\u8981\u5229\u7528\u8fd9\u4e9b\u540e\u7f00\u4e4b\u95f4\u7684\u8054\u7cfb\n\n\u8bbeh[i]=height[rk[i]]\uff0c\u540c\u6837\u7684\uff0cheight[i]=h[sa[i]];\n\n\u90a3\u4e48\u73b0\u5728\u6765\u8bc1\u660e\u6700\u5173\u952e\u7684\u4e00\u6761\u5b9a\u7406\uff1a\n\n**h[i]>=h[i-1]-1;**\n\n\u8bc1\u660e\u8fc7\u7a0b\u6765\u81ea[\u66f2\u795e\u5b66\u957f\u7684blog](http://www.yhzq-blog.cc/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/)\uff0c\u6211\u505a\u4e86\u4e00\u70b9\u6539\u52a8\u65b9\u4fbf\u521d\u5b66\u8005\u7406\u89e3\uff1a\n\n\u9996\u5148\u6211\u4eec\u4e0d\u59a8\u8bbe\u7b2ci-1\u4e2a\u5b57\u7b26\u4e32\u6309\u6392\u540d\u6765\u7684\u524d\u9762\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u662f\u7b2ck\u4e2a\u5b57\u7b26\u4e32\uff0c\u6ce8\u610fk\u4e0d\u4e00\u5b9a\u662fi-2\uff0c\u56e0\u4e3a\u7b2ck\u4e2a\u5b57\u7b26\u4e32\u662f\u6309\u5b57\u5178\u5e8f\u6392\u540d\u6765\u7684i-1\u524d\u9762\u90a3\u4e2a\uff0c\u5e76\u4e0d\u662f\u6307\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u4f4d\u7f6e\u5728i-1\u524d\u9762\u7684\u90a3\u4e2a\u7b2ci-2\u4e2a\u5b57\u7b26\u4e32\u3002\n\n\u8fd9\u65f6\uff0c\u4f9d\u636eheight[]\u7684\u5b9a\u4e49\uff0c\u7b2ck\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2ci-1\u4e2a\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u81ea\u7136\u662fheight[rk[i-1]]\uff0c\u73b0\u5728\u5148\u8ba8\u8bba\u4e00\u4e0b\u7b2ck+1\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u7684\u5173\u7cfb\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7b2ck\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2ci-1\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u7b26\u4e0d\u540c\uff0c\u90a3\u4e48\u7b2ck+1\u4e2a\u5b57\u7b26\u4e32\u7684\u6392\u540d\u65e2\u53ef\u80fd\u5728i\u7684\u524d\u9762\uff0c\u4e5f\u53ef\u80fd\u5728i\u7684\u540e\u9762\uff0c\u4f46\u6ca1\u6709\u5173\u7cfb\uff0c\u56e0\u4e3aheight[rk[i-1]]\u5c31\u662f0\u4e86\u5440\uff0c\u90a3\u4e48\u65e0\u8bbaheight[rk[i]]\u662f\u591a\u5c11\u90fd\u4f1a\u6709height[rk[i]]>=height[rk[i-1]]-1\uff0c\u4e5f\u5c31\u662fh[i]>=h[i-1]-1\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u7b2ck\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2ci-1\u4e2a\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u7b26\u76f8\u540c\uff0c\u90a3\u4e48\u7531\u4e8e\u7b2ck+1\u4e2a\u5b57\u7b26\u4e32\u5c31\u662f\u7b2ck\u4e2a\u5b57\u7b26\u4e32\u53bb\u6389\u9996\u5b57\u7b26\u5f97\u5230\u7684\uff0c\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u4e5f\u662f\u7b2ci-1\u4e2a\u5b57\u7b26\u4e32\u53bb\u6389\u9996\u5b57\u7b26\u5f97\u5230\u7684\uff0c\u90a3\u4e48\u663e\u7136\u7b2ck+1\u4e2a\u5b57\u7b26\u4e32\u8981\u6392\u5728\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u524d\u9762\u3002\u540c\u65f6\uff0c\u7b2ck\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2ci-1\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u662fheight[rk[i-1]]\uff0c\n\n\u90a3\u4e48\u81ea\u7136\u7b2ck+1\u4e2a\u5b57\u7b26\u4e32\u548c\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u5c31\u662fheight[rk[i-1]]-1\u3002\n\n\u5230\u6b64\u4e3a\u6b62\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u8bc1\u660e\u8fd8\u6ca1\u6709\u5b8c\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u6bd4\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u7684\u6392\u540d\u66f4\u9760\u524d\u7684\u90a3\u4e9b\u5b57\u7b26\u4e32\uff0c\u8c01\u548c\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u7684\u76f8\u4f3c\u5ea6\u6700\u9ad8\uff08\u8fd9\u91cc\u8bf4\u7684\u76f8\u4f3c\u5ea6\u662f\u6307\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\uff09\uff1f\u663e\u7136\u662f\u6392\u540d\u7d27\u90bb\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u4e86\u5440\uff0c\u5373sa[rank[i]-1]\u3002\u4f46\u662f\u6211\u4eec\u524d\u9762\u6c42\u5f97\uff0c\u6709\u4e00\u4e2a\u6392\u5728i\u524d\u9762\u7684\u5b57\u7b26\u4e32k+1\uff0cLCP(rk[i],rk[k+1])=height[rk[i-1]]-1;\n\n\u53c8\u56e0\u4e3aheight[rk[i]]=LCP(i,i-1)>=LCP(i,k+1)\n\n\u6240\u4ee5height[rk[i]]>=height[rk[i-1]]-1\uff0c\u4e5f\u5373h[i]>=h[i-1]-1\u3002\n\n## \u4ee3\u7801(\u8be6\u7ec6\u6ce8\u91ca)\n\n\u4f8b\u9898\uff1a[luogu3809 \u540e\u7f00\u6392\u5e8f](https://www.luogu.org/problemnew/show/P3809)\n\n\u6ce8\u610f\u4e0a\u9762\u90a3\u4e2a\u9898\u4e0d\u7528\u6c42lcp\u2026\u2026\u770b\u4ee3\u7801\u5efa\u8bae\u5148\u5927\u7565\u626b\u4e00\u904d\uff0c\u56e0\u4e3a\u7684\u786e\u6709\u70b9\u7ed5\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define rint register int\n#define inv inline void\n#define ini inline int\n#define maxn 1000050\nusing namespace std;\nchar s[maxn];\nint y[maxn],x[maxn],c[maxn],sa[maxn],rk[maxn],height[maxn],wt[30];\nint n,m;\ninv putout(int x)\n{\n    if(!x) {putchar(48);return;}\n    rint l=0;\n    while(x) wt[++l]=x%10,x/=10;\n    while(l) putchar(wt[l--]+48);\n}\ninv get_SA()\n{\n\tfor (rint i=1;i<=n;++i) ++c[x[i]=s[i]];\n\t//c\u6570\u7ec4\u662f\u6876 \n\t//x[i]\u662f\u7b2ci\u4e2a\u5143\u7d20\u7684\u7b2c\u4e00\u5173\u952e\u5b57 \n    for (rint i=2;i<=m;++i) c[i]+=c[i-1]; \n    //\u505ac\u7684\u524d\u7f00\u548c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u51fa\u6bcf\u4e2a\u5173\u952e\u5b57\u6700\u591a\u662f\u5728\u7b2c\u51e0\u540d \n    for (rint i=n;i>=1;--i) sa[c[x[i]]--]=i; \n    for (rint k=1;k<=n;k<<=1)\n    {\n        rint num=0;\n        for (rint i=n-k+1;i<=n;++i) y[++num]=i;\n        //y[i]\u8868\u793a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u540d\u4e3ai\u7684\u6570\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u7684\u4f4d\u7f6e \n\t\t//\u7b2cn-k+1\u5230\u7b2cn\u4f4d\u662f\u6ca1\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\u7684 \u6240\u4ee5\u6392\u540d\u5728\u6700\u524d\u9762 \n        for (rint i=1;i<=n;++i) if (sa[i]>k) y[++num]=sa[i]-k;\n        //\u6392\u540d\u4e3ai\u7684\u6570 \u5728\u6570\u7ec4\u4e2d\u662f\u5426\u5728\u7b2ck\u4f4d\u4ee5\u540e\n\t\t//\u5982\u679c\u6ee1\u8db3(sa[i]>k) \u90a3\u4e48\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u522b\u4eba\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5c31\u628a\u5b83\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u7684\u4f4d\u7f6e\u6dfb\u52a0\u8fdby\u5c31\u884c\u4e86\n\t\t//\u6240\u4ee5i\u679a\u4e3e\u7684\u662f\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u6392\u540d\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u9760\u524d\u7684\u5148\u5165\u961f \n        for (rint i=1;i<=m;++i) c[i]=0;\n        //\u521d\u59cb\u5316c\u6876 \n        for (rint i=1;i<=n;++i) ++c[x[i]];\n        //\u56e0\u4e3a\u4e0a\u4e00\u6b21\u5faa\u73af\u5df2\u7ecf\u7b97\u51fa\u4e86\u8fd9\u6b21\u7684\u7b2c\u4e00\u5173\u952e\u5b57 \u6240\u4ee5\u76f4\u63a5\u52a0\u5c31\u884c\u4e86 \n        for (rint i=2;i<=m;++i) c[i]+=c[i-1];//\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u540d\u4e3a1~i\u7684\u6570\u6709\u591a\u5c11\u4e2a \n        for (rint i=n;i>=1;--i) sa[c[x[y[i]]]--]=y[i],y[i]=0;\n        //\u56e0\u4e3ay\u7684\u987a\u5e8f\u662f\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u987a\u5e8f\u6765\u6392\u7684 \n        //\u7b2c\u4e8c\u5173\u952e\u5b57\u9760\u540e\u7684\uff0c\u5728\u540c\u4e00\u4e2a\u7b2c\u4e00\u5173\u952e\u5b57\u6876\u4e2d\u6392\u540d\u8d8a\u9760\u540e \n        //\u57fa\u6570\u6392\u5e8f \n        swap(x,y);\n\t\t//\u8fd9\u91cc\u4e0d\u7528\u60f3\u592a\u591a\uff0c\u56e0\u4e3a\u8981\u751f\u6210\u65b0\u7684x\u65f6\u8981\u7528\u5230\u65e7\u7684\uff0c\u5c31\u628a\u65e7\u7684\u590d\u5236\u4e0b\u6765\uff0c\u6ca1\u522b\u7684\u610f\u601d \n        x[sa[1]]=1;num=1;\n        for (rint i=2;i<=n;++i)\n            x[sa[i]]=(y[sa[i]]==y[sa[i-1]] && y[sa[i]+k]==y[sa[i-1]+k]) ? num : ++num;\n        //\u56e0\u4e3asa[i]\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u6309\u6392\u540d\u679a\u4e3e\uff0c\u751f\u6210\u4e0b\u4e00\u6b21\u7684\u7b2c\u4e00\u5173\u952e\u5b57 \n        if (num==n) break;\n        m=num;\n        //\u8fd9\u91cc\u5c31\u4e0d\u7528\u90a3\u4e2a122\u4e86\uff0c\u56e0\u4e3a\u90fd\u6709\u65b0\u7684\u7f16\u53f7\u4e86 \n    }\n    for (rint i=1;i<=n;++i) putout(sa[i]),putchar(' ');\n}\ninv get_height()\n{\n    rint k=0;\n    for (rint i=1;i<=n;++i) rk[sa[i]]=i;\n    for (rint i=1;i<=n;++i)  \n    {\n        if (rk[i]==1) continue;//\u7b2c\u4e00\u540dheight\u4e3a0 \n        if (k) --k;//h[i]>=h[i-1]+1;\n        rint j=sa[rk[i]-1];\n        while (j+k<=n && i+k<=n && s[i+k]==s[j+k]) ++k;\n        height[rk[i]]=k;//h[i]=height[rk[i]];\n    }\n    putchar(10);for (rint i=1;i<=n;++i) putout(height[i]),putchar(' ');\n}\nint main()\n{\n    gets(s+1);\n    n=strlen(s+1);m=122;\n\t//\u56e0\u4e3a\u8fd9\u4e2a\u9898\u4e0d\u8bfb\u5165n\u548cm\u6240\u4ee5\u8981\u81ea\u5df1\u8bbe\n\t//n\u8868\u793a\u539f\u5b57\u7b26\u4e32\u957f\u5ea6\uff0cm\u8868\u793a\u5b57\u7b26\u4e2a\u6570\uff0cascll('z')=122 \n\t//\u6211\u4eec\u7b2c\u4e00\u6b21\u8bfb\u5165\u5b57\u7b26\u76f4\u63a5\u4e0d\u7528\u8f6c\u5316\uff0c\u6309\u539f\u6765\u7684ascll\u7801\u6765\u5c31\u53ef\u4ee5\u4e86 \n\t//\u56e0\u4e3a\u8f6c\u5316\u6570\u5b57\u548c\u5927\u5c0f\u5199\u5b57\u6bcd\u8fd8\u5f97\u5206\u7c7b\u8ba8\u8bba\uff0c\u602a\u9ebb\u70e6\u7684 \n    get_SA();\n    //get_height();\n}\n```\n\n\n\n",
        "postTime": 1519782679,
        "uid": 43470,
        "name": "xMinh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "- **\u524d\u8a00**\n  \n  >upd 2021/08/28\uff1a\u611f\u8c22@[F\u0435\u0435_cle6418](https://www.luogu.com.cn/user/390770)\u6307\u51fa\u7684\u4e00\u4e2a\u9519\u8bef\u3002\n  \n  **\u6c42\u8d5eQWQ**\n  \n  **\u4e3b\u8981\u53c2\u8003\u6587\u7ae0\uff1a[\u8fd9\u4e2a](https://xminh.github.io/2018/02/27/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84-%E6%9C%80%E8%AF%A6%E7%BB%86(maybe)%E8%AE%B2%E8%A7%A3.html)\u548c[\u8fd9\u4e2a](https://www.cnblogs.com/zwfymqz/p/8413523.html)**\n  \n  **\u82e5\u4ecd\u7136\u6709\u4fb5\u6743\uff0c\u8bf7\u79c1\u4fe1\u6211\uff0c\u6211\u4f1a\u9a6c\u4e0a\u6807\u660e\u4e0a\u53bbqaq\u3002\uff08\u6bd5\u7adf\u8fd9\u4e1c\u897f\u592a\u6bd2\u7624\u6211\u4e00\u76f4\u5728\u7ffb\u8d44\u6599\uff09**\n  \n  \u6240\u4ee5..\u5230\u5e95\u662f\u5565\u795e\u4ed9\u8111\u6d1e\u8fd9\u4e48\u5927\u60f3\u5230\u8fd9\u79cd~~\u795e\u5947~~\u6bd2\u7624\u7684\u4e1c\u897f\uff1f\n  \n  \n\n------------\n\n  \n- **\u6c42\u4ec0\u4e48**\n\n  \u5c31\u6bd4\u5982\u6d1b\u8c37\u7684 [P3809 \u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f (SA)](https://www.luogu.com.cn/problem/P3809)\n  \n  \u8bfb\u5165\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u7531\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u6216\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8bf7\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684**\u6240\u6709\u975e\u7a7a\u540e\u7f00**\u6309**\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f**\uff0c\u7136\u540e\u6309\u987a\u5e8f\u8f93\u51fa**\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5728\u539f\u4e32\u4e2d\u7684\u4f4d\u7f6e**\u3002\u4f4d\u7f6e\u7f16\u53f7\u4e3a $1$ \u5230 $n$ \u3002\n  \n  \u5176\u4e2d $n \\le 10^6$ \u3002\n  \n  \u76f4\u63a5\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u4e3a $O(n^2 \\log n)$\n  \n  \u6240\u4ee5SA\u80af\u5b9a\u6bd4\u8fd9\u5feb\u561b..\u4e3a $O(n \\log n)$\n  \n  \u7136\u540e\u8865\u5145\u4e00\u4e0b\uff0c\u8fd9\u9898\u4e0d\u7528\u6c42**LCP\uff08\u6700\u957f\u516c\u5171\u524d\u7f00\uff09**\uff0c\u4f46\u662f\u597d\u50cf\u8fd9\u4e1c\u897f\u5f88\u6709\u7528..\uff08\n  \n\n------------\n\n- **\u540e\u7f00\u6392\u5e8f\u601d\u60f3**\n\n  \u7528\u4e86\u57fa\u6570\u6392\u5e8f\u7684\u601d\u60f3\u5450\u3002\n  \n  >\u57fa\u6570\u6392\u5e8f\uff08radix sort\uff09\u5c5e\u4e8e\u201c\u5206\u914d\u5f0f\u6392\u5e8f\u201d\uff08distribution sort\uff09\uff0c\u53c8\u79f0\u201c\u6876\u5b50\u6cd5\u201d\uff08bucket sort\uff09\u6216bin sort\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5b83\u662f\u900f\u8fc7\u952e\u503c\u7684\u90e8\u4efd\u8d44\u8baf\uff0c\u5c06\u8981\u6392\u5e8f\u7684\u5143\u7d20\u5206\u914d\u81f3\u67d0\u4e9b\u201c\u6876\u201d\u4e2d\uff0c\u85c9\u4ee5\u8fbe\u5230\u6392\u5e8f\u7684\u4f5c\u7528\n  >----\u767e\u5ea6\u767e\u79d1\n  \n  ~~\u5176\u5b9e\u4e0a\u9762\u90a3\u4e2a\u5b9a\u4e49\u4e0d\u91cd\u8981~~\uff0c\u540e\u7f00\u6392\u5e8f\u5c31\u662f\u5229\u7528\u4e86\u57fa\u6570\u6392\u5e8f\u7684\u601d\u60f3\u3002\n  \n  \n  \u6309\u7167\u5b57\u5178\u5e8f\u6392\u5217\uff0c\u82e5\u4e00\u4e00\u6bd4\u8f83\uff0c\u80af\u5b9a**\u5148\u4ece\u7b2c\u4e00\u4f4d**\u5f00\u59cb\u6bd4\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u7167**\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26**\u6392\u4e2a\u5e8f\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u76f8\u5f53\u4e8e\u628a**\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u6392\u4e2a\u5e8f**\u3002\n  \n  \u9664\u975e\u6b63\u597d\u6bcf\u4e2a\u5b57\u7b26\u4e0d\u4e00\u6837\uff0c\u5426\u5219\u80af\u5b9a\u6709\u90e8\u5206\u7684\u5b57\u7b26\u662f**\u6392\u540d\u662f\u4e00\u6837**\u7684\uff0c\u6309\u7167\u6392\u5e8f\uff0c\u63a5\u4e0b\u6765\u8981\u6bd4\u8f83**\u8fd9\u4e9b\u6392\u540d\u4e00\u6837\u7684\u5b57\u7b26\u7684\u7b2c\u4e8c\u4f4d\uff01**\n  \n  ~~\u7136\u540e\u590d\u6742\u5ea6\u5c31\u4e0a\u53bb\u4e86\u3002~~\n  \n  \u5176\u5b9e\uff0c\u7b2c\u4e8c\u4f4d\u6211\u4eec\u5df2\u7ecf\u6bd4\u8f83\u8fc7\u4e86\uff01\n  \n  \u56e0\u4e3a\u8981**\u6392\u5e8f\u7684\u662f\u540e\u7f00**\uff0c\u6240\u4ee5**\u7b2c $i$ \u4e2a\u540e\u7f00\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u5c31\u662f\u7b2c $i+1$ \u4e2a\u5b57\u7b26**\uff0c\u4e5f\u5c31\u662f\u5df2\u7ecf\u6392\u5e8f\u597d\u4e86\uff0c\u800c\u7b2c\u4e00\u4f4d\u662f**\u7b2c\u4e00\u5173\u952e\u5b57**\uff0c\u7b2c\u4e8c\u4f4d\u662f**\u7b2c\u4e8c\u5173\u952e\u5b57**\u3002\n  \n  \u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e8c\u4f4d\u7684\u6392\u5e8f\u3002\n  \n  \u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u5229\u7528**\u500d\u589e**\u7684\u601d\u60f3\uff0c\u518d\u5229\u7528\u5df2\u77e5\u53bb\u5f97\u51fa\u7b2c\u56db\u4f4d\u7684\u6392\u5e8f\u3002\n  \n  \u4e0d\u96be\u5f97\u51fa\uff0c**\u5f53\u6240\u6709\u540e\u7f00\u7684\u6392\u540d\u90fd\u4e24\u4e24\u4e0d\u540c\u65f6**\uff0c\u5c31\u5b8c\u6210\u4e86\u672c\u9898\u3002\n  \n  \u76f4\u63a5\u7406\u89e3\u786e\u5b9e\u5341\u5206\u786c\u6838\uff0c\u6240\u4ee5\u4e0b\u9762\u7ed3\u5408\u56fe\u518d\u505a\u8bf4\u660e\u3002\n  \n  \u6bcf\u4e2a**\u540e\u7f00\u7684\u7f16\u53f7**\u5982\u9898\u76ee\uff0c\u4e3a**\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u6240\u5728\u7684\u4f4d\u7f6e**\u3002\n  \n  $s$ \u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\n  \n  $sa_i$ \u8868\u793a**\u6392\u540d\u4e3a $i$ \u7684\u540e\u7f00\u7f16\u53f7\u662f\u4ec0\u4e48**\u3002\n  \n  ![\u65e0\u6807\u9898.png](https://i.loli.net/2021/08/28/Fg3r7uxqKLpXcSI.png)\n  \n  ~~\u90a3\u4e48\u63a5\u4e0b\u6765\u66f4\u6bd2\u7624\u7684\u6765\u4e86~~\n\n\n------------\n\n- **\u540e\u7f00\u6392\u5e8f\u4ee3\u7801\u7406\u89e3**\n\n  \u6253\u7b97\u4e00\u5757\u4e00\u5757\u8bb2\uff0c\u7b97\u4e0a\u8f93\u51fa\u6211\u603b\u5171\u5199\u4e86**12\u4e2afor**\u3002\n  \n  \u9996\u5148\uff0c\u6211\u4eec\u8981\u5148**\u6839\u636e\u7b2c\u4e00\u4f4d\u6392\u5e8f**\uff0c\u786e\u5b9a\u6700\u521d\u7684 $sa$ \u3002\n  \n  \u6211\u4eec\u7528 $x_i$ **\u8868\u793a\u7b2c\u4e00\u5173\u952e\u5b57**\u3002\n  \n  ```cpp\n   for(int i=1;i<=n;i++){x[i]=s[i];++c[x[i]];}\n\tfor(int i=2;i<=m;i++)c[i]+=c[i-1];\n\tfor(int i=n;i>=1;i--)sa[c[x[i]]--]=i;\n  ```\n  \n  \u5148\u76f4\u63a5\u628a $s_i$ \u7ed9\u4e0a $x_i$ \uff0c\u800c $c$ \u6570\u7ec4\u662f\u6876\uff0c\u8fd9\u91cc\u7528\u5230\u7684\u5c31\u662f**\u6876\u6392\u5e8f**\u7684\u601d\u60f3\uff0c\u6765**\u7edf\u8ba1\u6bcf\u79cd\u5b57\u7b26\u6709\u591a\u5c11\u79cd**\u3002\n  \n  \u4e3a\u4e86\u65b9\u4fbf\u6807\u53f7\uff0c\u5c31\u5148\u505a\u4e00\u4e2a**\u524d\u7f00\u548c**\u3002\u8fd9\u6837**\u5b57\u5178\u5e8f\u8d8a\u5927\uff0c\u6240\u5bf9\u5e94\u7684\u7684 $c$ \u8d8a\u5927**\u3002\n  \n  \u63a5\u4e0b\u6765\u5c31\u662f\u6392\u5e8f\u786e\u5b9a\u6700\u521d $sa$ \u4e86\u3002\u518d\u6b21\u5f3a\u8c03\uff1a $sa_i$ \u8868\u793a**\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7f16\u53f7\u662f\u4ec0\u4e48**\u3002\n  \n  \u81f3\u4e8e\u4e3a\u4ec0\u4e48 $c_{x_i}$ \u8981\u51cf\u4e00\uff0c\u662f\u4e3a\u4e86\u5f53\u51fa\u73b0 $c_{x_i}>1$ \uff0c\u5373**\u6709\u91cd\u590d**\u65f6\uff0c**\u4fdd\u8bc1\u6392\u5e8f\u4e0d\u4e00\u6837**\u3002\n  \n  ![](https://cdn.luogu.com.cn/upload/image_hosting/emnntk11.png)\n  \n  \u4e0b\u4e00\u5757\uff0c\u5c31\u662f\u8981\u4e00\u6b65\u4e00\u6b65\u786e\u5b9a\u7b2c\u4e8c\u4f4d\uff0c\u7b2c\u56db\u4f4d..\n  \n  \u4e5f\u5c31\u662f**\u5229\u7528\u500d\u589e**\u7684\u601d\u60f3\uff1a\n  \n  ```cpp\n  for(int k=1;k<=n;k=k<<1)\n  ```\n  ~~\u7136\u540e\u5c31\u5728\u8fd9\u5faa\u73af\u91cc\u778e\u641e\u5c31\u597d\u4e86\u3002~~\n  \n  \u9996\u5148\uff0c\u5b9a\u4e49 $y_i$ \u8868\u793a**\u6392\u540d\u4e3a\u7b2c $i$ \u7684\u7b2c\u4e8c\u5173\u952e\u5b57 ,\u4e5f\u5c31\u662f\u786e\u5b9a $x$ \u7684\u6392\u5217\u7684\u4e1c\u897f**\u3002\n  \n  \u7136\u540e\u6839\u636e\u4e0a\u6b21\u6392\u5e8f\u7684 $sa$ \u6765\u786e\u5b9a $y$ \u3002\n  \n  ```cpp\n  int num=0;\n  for (int i=n-k+1;i<=n;++i) y[++num]=i;\n  for(int i=1;i<=n;i++)\n\t\tif(sa[i]>k)y[++num]=sa[i]-k;\n  ```\n  \n  $num$ \u53ea\u662f\u4e00\u4e2a\u6307\u9488\u800c\u5df2\u3002\n  \n  \u9996\u5148**\u540e $k$ \u4f4d\uff0c\u4e5f\u5c31\u662f\u7b2c $n-k+1$ \u4f4d\u5230\u7b2c $n$ \u4f4d**\uff0c\u4ed6\u4eec\u5176\u5b9e\u5df2\u7ecf\u6392\u5e8f\u5b8c\u4e86\uff0c\u56e0\u4e3a**\u4ed6\u4eec\u540e\u9762\u7684\u7b2c $k$ \u4f4d\u4e0d\u5b58\u5728**\u3002\u90a3\u4e48\u5148\u76f4\u63a5\u5b58\u5728 $y$ \u4e2d\u3002\n  \n  \u82e5\u7b2c $i$ \u4f4d**\u53ef\u4f5c\u5176\u4ed6\u4f4d\u7f6e\u7684\u7b2c\u4e8c\u5173\u952e\u5b57**\uff0c\u5373 $sa_i>k$ \u65f6\uff0c\u8981\u628a\u4ed6**\u653e\u5728\u5bf9\u5e94\u7684\u7b2c\u4e00\u5173\u952e\u5b57( $x_{sa_i-k}$ )\u4e2d**\u3002\n  \n  ![](https://cdn.luogu.com.cn/upload/image_hosting/emnntk11.png)\n  \n  \u786e\u5b9a\u5b8c\u7b2c\u4e00\u5173\u952e\u5b57\u548c\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5c31\u53ef\u4ee5**\u66f4\u65b0 $sa$ \u4e86**\u3002\u800c\u4e14\u66f4\u65b0\u65b9\u6cd5\u548c\u5f00\u5934\u5f88\u50cf\u3002\n  \n  ```cpp\n\tfor(int i=1;i<=m;i++)c[i]=0;\n\tfor(int i=1;i<=n;i++)c[x[i]]++;\n\tfor(int i=2;i<=m;i++)c[i]+=c[i-1];\n\tfor(int i=n;i>=1;i--){sa[c[x[y[i]]]--]=y[i];y[i]=0;}\n  ```\n  \n  \u9996\u5148\u6e05\u7a7a\uff0c\u7136\u540e\u7528\u6876\u7edf\u8ba1\uff0c\u7136\u540e\u524d\u7f00\u548c\u3002\n  \n  \u552f\u4e00\u6539\u7684\u5c31\u662f\u628a`sa[c[x[i]]--]=i;`\u6539\u6210`sa[c[x[y[i]]]--]=y[i];`\n  \n  \u539f\u56e0\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u56e0\u4e3a\u5f00\u5934 $x$ \u6392\u5e8f\u5c31\u662f $1$ \u5230 $n$ \uff0c\u800c**\u8fd9\u8fb9\u6392\u5e8f\u53d8\u6210\u4e86 $y_1$ \u5230 $y_n$ \u3002**\n  \n  ![](https://cdn.luogu.com.cn/upload/image_hosting/emnntk11.png)\n  \n  \u63a5\u4e0b\u6765\u5c31\u662f\u8981**\u66f4\u65b0 $x$ \u4e86**\uff0c\u7136\u540e\u5f88\u660e\u663e\uff0c\u8981\u7528\u5230**\u672a\u66f4\u65b0\u7684 $x$ \u548c $sa$ \u3002**\n  \n  \u7136\u540e\u53c8\u61d2\u5f97\u5f00\u65b0\u53d8\u91cf\u5b58\uff0c\u6240\u4ee5\u5148\u7528\u6682\u65f6\u6ca1\u7528\u7684 $y$ \u6765\u5b58\u6b64\u65f6\u7684 $x$ \u3002\n  \n  ```cpp\n  swap(x,y);\n  ```\n  \n  \u7136\u540e\u66f4\u65b0\u3002\n  \n  ```cpp\n\tnum=1;x[sa[1]]=1;\n\tfor(int i=2;i<=n;i++)\n\t{\t\n\t\tif(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+k]==y[sa[i-1]+k])x[sa[i]]=num;\n\t\telse x[sa[i]]=++num;\n\t}\n\tif(num==n)break;\n\tm=num;//m\u662f\u6307\u4e0d\u540c\u5b57\u6bcd\u7684\u6570\u91cf\n  ```\n  \n  **\u6b64\u65f6 $i$ \u4ee3\u8868\u7684\u662f\u6392\u540d**\uff0c\u6240\u4ee5\u7f16\u53f7\u90fd\u8981\u7528 $sa_i$ \u4ee3\u66ff\u3002\n  \n  \u7136\u540e\u5f53\u4e24\u4e2a\u5b57\u7b26\u4e00\u6837\u7684\u65f6\u5019\uff0c$x$ **\u662f\u4e00\u6837\u7684**\uff0c\u4e5f\u5c31\u662f**\u7b2c\u4e00\u4e2aif\u5224\u65ad**\u3002\n  \n  \u5426\u5219\u7684\u8bdd\u6392\u540d\u66f4\u65b0\uff0c\u56e0\u4e3a\u662f**\u6309\u7167\u6392\u540d\u679a\u4e3e\u7684**\uff0c\u6240\u4ee5**\u76f4\u63a5 $num+1$ \u3002**\n  \n  **\u5f53 $x_i$ \u5404\u4e0d\u76f8\u540c\u65f6\uff0c\u5373 $num=n$ \u65f6**\uff0c\u8fd9\u4e2a\u6392\u5e8f\u4e5f\u5c31\u505a\u5b8c\u4e86\u3002\n  \n  \u7136\u540e\u8fd9\u90e8\u5206\u5c31\u505a\u5b8c\u4e86..\n  \n\n------------\n\n  \n- **\u540e\u7f00\u6392\u5e8f\u5b8c\u6574\u4ee3\u7801(\u5373[P3809 \u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f (SA)](https://www.luogu.com.cn/problem/P3809)\u5b8c\u6574\u4ee3\u7801)**\n\n  ```cpp\n  #include<iostream>\n  #include<cstdio>\n  #include<cstring>\n  #include<cmath>\n  using namespace std;\n  const int Maxn=1e6+5;\n  char s[Maxn];\n  int n,m,x[Maxn],y[Maxn],c[Maxn],sa[Maxn];\n  int height[Maxn],rk[Maxn];\n  void SA()\n  {\t\n      for(int i=1;i<=n;i++){x[i]=s[i];++c[x[i]];}\n      for(int i=2;i<=m;i++)c[i]+=c[i-1];\n      for(int i=n;i>=1;i--)sa[c[x[i]]--]=i;\n      for(int k=1;k<=n;k=k<<1)\n      {\t\n          int num=0;\n          for (int i=n-k+1;i<=n;++i) y[++num]=i;\n          for(int i=1;i<=n;i++)\n              if(sa[i]>k)y[++num]=sa[i]-k;\n          for(int i=1;i<=m;i++)c[i]=0;\n          for(int i=1;i<=n;i++)c[x[i]]++;\n          for(int i=2;i<=m;i++)c[i]+=c[i-1];\n          for(int i=n;i>=1;i--){sa[c[x[y[i]]]--]=y[i];y[i]=0;}\n          swap(x,y);\n          num=1;x[sa[1]]=1;\n          for(int i=2;i<=n;i++)\n          {\t\n              if(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+k]==y[sa[i-1]+k])x[sa[i]]=num;\n              else x[sa[i]]=++num;\n          }\n          if(num==n)break;\n          m=num;\n      }\n      for(int i=1;i<=n;i++)\n          printf(\"%d \",sa[i]);\n      printf(\"\\n\");\n  }\n  int main()\n  {\t\n      scanf(\"%s\",s+1);\n      n=strlen(s+1);\n      m=122;\n      SA();\n      //LCP(); \n      return 0;\n  }\n  ```\n \n\n------------\n\n- **LCP**\n\n  \u8fd9\u4e2a~~\u636e\u8bf4~~\u597d\u7528\u7684\u4e1c\u897f\u5c31\u987a\u5e26\u8bb2\u4e86\u5427\u3002\n  \n  LCP\uff1a\u6700\u957f\u516c\u5171\u524d\u7f00\u3002\u7136\u540e\u5c31\u662f\u6c42\uff0c\u8981\u7528\u5230\u540e\u7f00\u6392\u5e8f\u3002\n  \n  \u5b9a\u4e49 $LCP(i,j)$ **\u8868\u793a\u7b2c $sa_i$ \u4e2a\u548c\u7b2c $sa_j$ \u4e2a\u7684\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002**\n  \n  \u7136\u540e\u5c31\u662f\u4e00\u5806\u5b9a\u7406\uff1a\n  \n  1. $LCP(i,j)=LCP(j,i)$\n  2. $LCP(i,i)=len(sa_i)=n-sa_i+1$\n  3. **LCP Lemma** $LCP(i,j)=\\min(LCP(i,k),LCP(k,j))(1 \\le i \\le k \\le j \\le n)$\n  4. **LCP Theorem** $LCP(i,j)=\\min(LCP(k,k-1))(1<i \\le k \\le j \\le n)$\n  \n  \u90a3\u4e48\u5982\u4f55\u8bc1\u660e\u5462\uff1f\n  \n  \u9996\u5148\u5b9a\u7406 $1$ \u548c\u5b9a\u7406 $2$ \u662f\u663e\u7136\u7684\u3002\n  \n  \u7136\u540e**LCP Lemma**\u548c**LCP Theorem**\u5f00\u59cb~~\u6284\u522b\u4eba\u6587\u7ae0\u3002~~\n  \n  1. **LCP Lemma**\n  \n     \u8bbe $p=\\min(LCP(i,k),LCP(k,j))$ ,**\u5219 $LCP(i,k) \\ge p$ \uff0c $LCP(k,j) \\ge p$\u3002**\n     \n     \u8bbe\u7b2c $sa_i$ \u540e\u7f00\u4e3a $u$ \uff0c\u7b2c $sa_j$ \u540e\u7f00\u4e3a $v$ \uff0c\u7b2c $sa_k$ \u540e\u7f00\u4e3a $w$ \u3002\n     \n     \u6240\u4ee5 $u$ \u548c $w$ \u7684\u524d $p$ \u4e2a\u5b57\u7b26\u76f8\u7b49\uff0c$v$ \u548c $w$ \u7684\u524d $p$ \u4e2a\u5b57\u7b26\u76f8\u7b49\u3002\n     \n     **\u6240\u4ee5 $u$ \u548c $v$ \u7684\u524d $p$ \u4e2a\u5b57\u7b26\u76f8\u7b49\u3002**\n     \n     \u8bbe $LCP(i,j)=q$\uff0c\u4e14 $q > p$ \u3002\n     \n     **\u5219 $q \\ge p+1$ ,\u4e14 $u_{p+1} = v_{p+1}$**\n     \n     \u56e0\u4e3a $p=\\min(LCP(i,k),LCP(k,j))$ ,\u6240\u4ee5 $u_{p+1} \\ne w_{p+1} $ \u6216\u8005 $v_{p+1} \\ne w_{p+1}$\n     \n     **\u6240\u4ee5 $u_{p+1} \\ne v_{p+1}$ \u4e0e\u524d\u9762\u77db\u76fe\u3002**\n     \n     \u6240\u4ee5 $LCP(i,j) \\le p$\n     \n     \u7efc\u4e0a\u6240\u8ff0\uff0c $LCP(i,j)=p=\\min(LCP(i,k),LCP(k,j))(1 \\le i \\le k \\le j \\le n)$\n   \n  2. **LCP Theorem**\n     \n     \u628a $i$ ~$j$ \u62c6\u6210 $i$~$i+1$ \u548c $i+1$~$j$\n     \n     \u90a3\u4e48\u6839\u636eLCP Lemma\uff0c\u5219 $LCP(i,j)=\\min(LCP(i,i+1),LCP(i+1,j))$\n     \n     \u7136\u540e\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u628a $i+1$ \u5230 $j$ \u7ee7\u7eed\u62c6\uff0c\u660e\u663e\u6b63\u786e\u3002\n   \n   \u597d\u7684\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u600e\u4e48\u6c42\u4e86\u3002\n   \n   \u6211\u4eec**\u8bbe $rk_i$ \u8868\u793a\u7f16\u53f7\u4e3a $i$ \u7684\u540e\u7f00\u7684\u6392\u540d\u3002**\n   \n   **\u8bf7\u6ce8\u610f\u548c\u524d\u9762\u7684 $sa_i$ \u533a\u5206,\u4ed6\u4eec\u662f\u8fd9\u4e2a\u5173\u7cfb\uff1a$sa_{rk_i}=i$\u3002**\n   \n   \u8bbe $height(i)=LCP(i,i-1)(1<i\\le n)$ \uff0c$height(1)=0$ \u3002\n   \n   \u56e0\u4e3a $LCP(i,j)=\\min(LCP(k,k-1))(1<i \\le k \\le j \\le n)$ \n   \n   \u6240\u4ee5 $LCP(i,j)=\\min(height(k))(i < k \\le j)$\n   \n  \u8bbe $h_i=height(rk_i)$\n  \n  \u56e0\u4e3a $sa_{rk_i}=i$\n  \n  \u6240\u4ee5 $height(i)=h_{sa_i}$\n  \n  **\u7136\u540e\u8fd9\u91cc\u5176\u5b9e\u662f\u6709\u4e00\u4e2a\u5b9a\u7406\u7684 $h_i \\ge h_{i-1}-1$ \u3002**\n  \n  ~~\u4f46\u662f\u6211\u5e76\u4e0d\u4f1a\u8bc1\u660e\u3002~~\n  \n  \u7136\u540e\u5c31\u53ef\u4ee5\u7528\u8fd9\u6761\u5b9a\u7406\u6765\u6c42 $height$ \uff0c\u7136\u540e\u518d\u6c42LCP\u3002\n  \n  ```cpp\n  void LCP()\n  {\t\n      int k=0; //\u7528k\u4ee3\u8868h[i]\n      for(int i=1;i<=n;i++)rk[sa[i]]=i; //\u521d\u59cb\u5316rk[i]\n      for(int i=1;i<=n;i++)//\u8fd9\u91cc\u5176\u5b9e\u662f\u679a\u4e3erk[i]\n      {\t\n          if(rk[i]==1)continue; //height[1]=0\n          if(k)k--; //h[i]>=h[i-1]-1,\u66f4\u65b0k\u7136\u540e\u4e00\u4f4d\u4f4d\u679a\u4e3e\n          int j=sa[rk[i]-1];//\u524d\u4e00\u4f4d\u5b57\u7b26\u4e32\n          while(i+k<=n&&j+k<=n&&s[i+k]==s[j+k])k++;//\u4e00\u4f4d\u4f4d\u679a\u4e3e\n          height[rk[i]]=k;//h[i]=height[rk[i]]\n      }\n      for(int i=1;i<=n;i++)\n          printf(\"%d \",height[i]);\n      printf(\"\\n\");\n  }\n  ```\n  \n  \u7136\u540e\u5c31\u53ef\u4ee5\u6c42 LCP \u4e86\u3002\n  \n  \u6839\u636e $LCP(i,j)=\\min(height(k))(i < k \\le j)$ \n  \n  ```cpp\n\tint ans=inf;//\u6c42LCP(x,y)\n\tfor(int i=x+1;i<=y;i++)\n\t\tans=min(ans,height(i));\n   printf(\"%d\\n\",ans);\n  ```\n\n\n------------\n\n$$\\text{\u65e2\u7136\u90fd\u770b\u5230\u8fd9\u91cc\u4e86\u4e3a\u4f55\u4e0d\u70b9\u4e2a\u8d5e\u5462(\u5c0f\u58f0}$$\n\n$$\\text{\u5199\u6b7b\u6211\u4e86awsl}$$\n\n$$\\text{by Rainy7}$$",
        "postTime": 1579443819,
        "uid": 39408,
        "name": "Rainy7",
        "ccfLevel": 7,
        "title": "\u300c\u540e\u7f00\u6392\u5e8fSA\u300d\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9\u8fd9\u91cc](http://www.cnblogs.com/zwfymqz/p/8413523.html)\n\n\n(\u5f3a\u70c8\u5efa\u8bae\u53bb\u94fe\u63a5\u5730\u5740\u91cc\u770b\uff0c\u6d1b\u8c37\u4e0a\u7684\u9898\u89e3\u5e74\u4ee3\u6bd4\u8f83\u4e45\u8fdc\u4e86\uff0c\u671f\u95f4\u6211\u505a\u8fc7\u5f88\u591a\u4fee\u8ba2\u548c\u8865\u5145\uff0c\u4e5f\u66f4\u6b63\u8fc7\u5f88\u591a\u9519\u8bef\uff0c\u8fd8\u8bf7\u5927\u5bb6\u89c1\u8c05\u3002)\n\n# \u4ec0\u4e48\u662f\u540e\u7f00\u6570\u7ec4\n\n\u540e\u7f00\u6570\u7ec4\u662f\u5904\u7406\u5b57\u7b26\u4e32\u7684\u6709\u529b\u5de5\u5177 \u2014\u7f57\u7a57\u9a9e\n\n~~\u4e2a\u4eba\u7406\u89e3\uff1a\u540e\u7f00\u6570\u7ec4\u662f\u8ba9\u4eba\u8499\u903c\u7684\u6709\u529b\u5de5\u5177\uff01~~\n\n\u5c31\u50cf\u4e0a\u9762\u90a3\u4f4d\u5927\u795e\u6240\u8bf4\u7684\uff0c\u540e\u7f00\u6570\u7ec4\u53ef\u4ee5\u89e3\u51b3\u5f88\u591a\u5173\u4e8e\u5b57\u7b26\u4e32\u7684\u95ee\u9898\uff0c\n\n\u8b6c\u5982\u8fd9\u9053\u9898\n\n \n\n\u6ce8\u610f\uff1a\u540e\u7f00\u6570\u7ec4\u5e76\u4e0d\u662f\u4e00\u79cd\u7b97\u6cd5\uff0c\u800c\u662f\u4e00\u79cd\u601d\u60f3\u3002\n\n\u5b9e\u73b0\u5b83\u7684\u65b9\u6cd5\u4e3b\u8981\u6709\u4e24\u79cd\uff1a\u500d\u589e\u6cd5$O(nlogn)$ \u548c DC3\u6cd5$O(n)$\n\n\u5176\u4e2d\u500d\u589e\u6cd5\u9664\u4e86\u4ec5\u4ec5\u5728\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u4e0d\u5360\u4f18\u52bf\u4e4b\u5916\uff0c\u5176\u4ed6\u7684\u65b9\u9762\u4f8b\u5982\u7f16\u7a0b\u96be\u5ea6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u5e38\u6570\u7b49\u90fd\u79d2\u6740DC3\u6cd5\n\n \n\n\u6211\u7684\u5efa\u8bae\uff1a\u6df1\u5165\u7406\u89e3\u500d\u589e\u6cd5\uff0c\u5e76\u80fd\u719f\u7ec3\u8fd0\u7528\uff08\u8d77\u78018\u5206\u949f\u5185\u5199\u51fa\u6765&&\u6ca1\u6709\u9519\u8bef\uff09\u3002DC3\u6cd5\u53ea\u505a\u4e86\u89e3\uff0c\u5438\u53d6\u5176\u4e2d\u7684\u7cbe\u9ad3\uff1b\n\n \n\n\u4f46\u662f\u7531\u4e8e\u672c\u4eba\u592a\u8fa3\u9e21\u5566\uff0c\u6240\u4ee5\u672c\u6587\u53ea\u8ba8\u8bba\u500d\u589e\u6cd5\n\n \n\n# \u524d\u7f6e\u77e5\u8bc6\n\n## \u540e\u7f00\n\n\u8fd9\u4e2a\u5927\u5bb6\u5e94\u8be5\u90fd\u61c2\u5427\u3002\u3002\n\n\u6bd4\u5982\u8bf4$aabaaaab$\n\n\u5b83\u7684\u540e\u7f00\u4e3a\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180204165909795-331421612.png)\n\n## \u57fa\u6570\u6392\u5e8f\n\n\u6211\u4e0b\u9762\u4f1a\u8be6\u7ec6\u8bb2\n\n\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\n\n\u57fa\u6570\u6392\u5e8f\u5728\u540e\u7f00\u6570\u7ec4\u4e2d\u53ef\u4ee5\u5728$O(n)$\u7684\u65f6\u95f4\u5185\u5bf9\u4e00\u4e2a\u4e8c\u5143\u7ec4$(p,q)$\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u4e2d$p$\u662f\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$q$\u662f\u7b2c\u4e8c\u5173\u952e\u5b57\n\n\u6bd4\u5176\u4ed6\u7684\u6392\u5e8f\u7b97\u6cd5\u90fd\u8981\u4f18\u8d8a\n\n# \u500d\u589e\u6cd5\n\n\u9996\u5148\u5b9a\u4e49\u4e00\u5768\u53d8\u91cf\n\n$sa[i]$\uff1a\u6392\u540d\u4e3a$i$\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\n\n$rak[i]$\uff1a\u4ece\u7b2c$i$\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u540e\u7f00\u7684\u6392\u540d\uff0c\u4e0b\u6587\u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf\uff0c\u628a\u4ece\u7b2c$i$\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u540e\u7f00\u7b80\u79f0\u4e3a\u540e\u7f00$i$\n\n$tp[i]$\uff1a\u57fa\u6570\u6392\u5e8f\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u610f\u4e49\u4e0e$sa$\u4e00\u6837\n\n$tax[i]$\uff1a$i$\u53f7\u5143\u7d20\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\u3002\u8f85\u52a9\u57fa\u6570\u6392\u5e8f\n\n$s[i]$\uff1a\u5b57\u7b26\u4e32\n\n \n\n\u53ef\u80fd\u5927\u5bb6\u89c9\u5f97$sa$\u548c$rak$\u8fd9\u4e24\u4e2a\u6570\u7ec4\u6bd4\u8f83\u7ed5\uff0c\u6ca1\u5173\u7cfb\uff0c\u591a\u7422\u78e8\u4e00\u4e0b\u5c31\u597d\n\n\u4e8b\u5b9e\u4e0a\uff0c\u4e5f\u6b63\u662f\u56e0\u4e3a\u8fd9\u6837\uff0c\u624d\u4f7f\u5f97\u4e24\u4e2a\u6570\u7ec4\u53ef\u4ee5\u5728$O(n)$\u7684\u65f6\u95f4\u5185\u4e92\u76f8\u63a8\u51fa\u6765\n\n\u5177\u4f53\u4e00\u70b9\n\n$rak[sa[i]]=i$\n\n$sa[rak[i]]=i$\n\n \n\n\u90a3\u6211\u4eec\u600e\u4e48\u5bf9\u6240\u6709\u7684\u540e\u7f00\u8fdb\u884c\u6392\u5e8f\u5462\uff1f\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u540e\u7f00\u5206\u5f00\u6765\u770b\u3002\n\n\u5f00\u59cb\u65f6\uff0c\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u662f\u80fd\u786e\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u4ed6\u672c\u8eab\u7684ASCLL\u503c\n\n\u5177\u4f53\u70b9\uff1f\u628a\u7b2c$i$\u4e2a\u5b57\u6bcd\u770b\u505a\u662f$(s[i],i)$\u7684\u4e8c\u5143\u7ec4\uff0c\u5bf9\u5176\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\n\n \n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4ed6\u4eec\u7684\u5728\u5b8c\u6210\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u6392\u5e8f\u4e4b\u540e\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180204173105404-1254977173.png)\n\n \n\n\u63a5\u4e0b\u6765\u5462\uff1f\n\n\u4e0d\u8981\u5fd8\u4e86\uff0c \u6211\u4eec\u7b97\u6cd5\u7684\u540d\u79f0\u53eb\u505a\u201c\u500d\u589e\u6cd5\u201d\uff0c\u6bcf\u6b21\u5c06\u6392\u5e8f\u957f\u5ea6*2\uff0c\u6700\u591a\u9700\u8981$log(n)$\u6b21\u4fbf\u53ef\u4ee5\u5b8c\u6210\u6392\u5e8f\n\n\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u9700\u8981\u5bf9\u6bcf\u4e2a\u540e\u7f00\u7684\u524d\u4e24\u4e2a\u5b57\u6bcd\u8fdb\u884c\u6392\u5e8f\n\n\u6b64\u65f6\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u76f8\u5bf9\u5173\u7cfb\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u3002\n\n\u90a3\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u5462\uff1f\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u6b21\u6392\u5e8f\u4e48\uff1f\n\n\u5176\u5b9e\u5927\u53ef\u4e0d\u5fc5\uff0c\u56e0\u4e3a\u6211\u4eec\u5ffd\u7565\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6027\u8d28\uff1a\u7b2c$i$\u4e2a\u540e\u7f00\u7684\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\uff0c\u5b9e\u9645\u662f\u7b2c$i+1$\u4e2a\u540e\u7f00\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\n\n\u56e0\u6b64\u6bcf\u4e2a\u540e\u7f00\u7684\u7b2c\u4e8c\u4e2a\u540e\u7f00\u7684\u5b57\u6bcd\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\u6211\u4eec\u4e5f\u662f\u77e5\u9053\u7684\u3002\n\n\u6211\u4eec\u7528$tp$\u8fd9\u4e2a\u6570\u7ec4\u628a\u4ed6\u8bb0\u5f55\u51fa\u6765\uff0c\u5bf9$rak,tp$\u8fd9\u4e2a\u4e8c\u5143\u7ec4\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\n\n \n\n\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5bf9\u6bcf\u4e2a\u540e\u7f00\u7684\u524d\u56db\u4e2a\u540e\u7f00\u8fdb\u884c\u6392\u5e8f\n\n\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6bcf\u4e2a\u540e\u7f00\u524d\u4e24\u4e2a\u5b57\u6bcd\u7684\u6392\u540d\uff0c\u800c\u7b2c$i$\u4e2a\u540e\u7f00\u7684\u7b2c$3,4$\u4e2a\u5b57\u6bcd\u6070\u597d\u662f\u7b2c$i+2$\u4e2a\u540e\u7f00\u7684\u524d\u4e24\u4e2a\u5b57\u6bcd\u3002\n\n\u4ed6\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u6211\u4eec\u53c8\u77e5\u9053\u5566\u3002\n\n \n\n\u8fd9\u6837\u4e0d\u65ad\u6392\u4e0b\u53bb\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u5b8c\u6210\u6392\u5e8f\u5566\n\n \n\n\u6211\u76f8\u4fe1\u5927\u5bb6\u770b\u5230\u8fd9\u91cc\u80af\u5b9a\u662f\u4e00\u8138mengbi\n\n\u4e0b\u9762\u6211\u7ed3\u5408\u4ee3\u7801\u548c\u5177\u4f53\u7684\u6392\u5e8f\u8fc7\u7a0b\u7ed9\u5927\u5bb6\u6f14\u793a\u4e00\u4e0b\n\n \n\n# \u8fc7\u7a0b\u8be6\u89e3\n\n\u8fd8\u662f\u4ee5\u4e0a\u9762\u7684\u56fe\u7247\u4e3a\u4f8b\n\n\n\n \n\n\u6309\u7167\u4e0a\u9762\u8bf4\u7684\uff0c\u5f00\u59cb\u65f6$rak$\u4e3a\u5b57\u7b26\u7684ASCLL\u7801\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\n\n\u8fd9\u91cc\u7684$a$\u6570\u7ec4\u662f\u5b57\u7b26\u4e32\u6570\u7ec4\n\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206083009826-1326114936.png)\n\n\n\u7136\u540e\u6211\u4eec\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u6682\u4e14\u5148\u4e0d\u7ba1\u5b83\u662f\u5982\u4f55\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a\u6392\u5e8f\u7684\u8fc7\u7a0b\u975e\u5e38\u96be\u7406\u89e3\uff0c\u4e00\u4f1a\u513f\u6211\u91cd\u70b9\u8bb2\u4e00\u4e0b\u3002\n\n\u6392\u5b8c\u5e8f\u4e4b\u540e\u5404\u4e2a\u540e\u7f00\u7684\u4f4d\u7f6e\u5173\u7cfb\u662f\u8fd9\u6837\u7684\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206083648810-264220432.png)\n\n\n\u5404\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\n\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206083729185-2116678754.png)\n\n \n\n\u7136\u540e\u6211\u4eec\u8fdb\u884c\u500d\u589e\u3002\n\n \n\n\u8fd9\u91cc\u518d\u5b9a\u4e49\u51e0\u4e2a\u53d8\u91cf\n\n$M$\uff1a\u5b57\u7b26\u96c6\u7684\u5927\u5c0f\uff0c\u57fa\u6570\u6392\u5e8f\u65f6\u4f1a\u7528\u5230\u3002\u4e0d\u7406\u89e3\u4e5f\u6ca1\u5173\u7cfb\n\n$p$\uff1a\u6392\u540d\u7684\u591a\u5c11\n\n\u6ce8\u610f\u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5404\u4e2a\u540e\u7f00\u7684\u6392\u540d\u53ef\u80fd\u662f\u76f8\u540c\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u5728\u500d\u589e\u7684\u8fc7\u7a0b\u4e2d\u53ea\u662f\u5bf9\u5176\u524d\u51e0\u4e2a\u5b57\u7b26\u8fdb\u884c\u6392\u540d\u3002\n\n\u4f46\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u540e\u7f00\u6765\u8bf4\uff0c\u6700\u7ec8\u7684\u6392\u540d\u4e00\u5b9a\u662f\u4e0d\u540c\u7684\uff01\u6bd5\u7adf\u6bcf\u4e2a\u540e\u7f00\u7684\u957f\u5ea6\u90fd\u4e0d\u76f8\u540c\n\n \n\n\u4e0b\u9762\u662f\u500d\u589e\u7684\u8fc7\u7a0b\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206084301029-1263445756.png)\n\n\n$w$\u8868\u793a\u500d\u589e\u7684\u957f\u5ea6\uff0c\u5f53\u5404\u4e2a\u6392\u540d\u90fd\u4e0d\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u9000\u51fa\u5faa\u73af\u3002\n\n$M=p$\u662f\u5bf9\u57fa\u6570\u6392\u5e8f\u7684\u4f18\u5316\uff0c\u56e0\u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\u5c31\u662f\u6392\u540d\u7684\u4e2a\u6570\n\n \n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206084526841-895733480.png)\n\n\u8fd9\u4e24\u53e5\u8bdd\u662f\u5bf9\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\n\n\u6b64\u65f6\u7684$p$\u5e76\u4e0d\u662f\u7edf\u8ba1\u6392\u540d\u7684\u4e2a\u6570\uff0c\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u6570\u5668\n\n\u6ce8\u610f\uff1a\u6709\u4e00\u4e9b\u540e\u7f00\u662f\u6ca1\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\uff0c\u4ed6\u4eec\u7684\u6392\u540d\u5e94\u8be5\u5728\u6700\u524d\u9762\u3002\n\n\u8fd9\u5bf9\u5e94\u7b2c$35$\u884c\uff0c\u4e0d\u8981\u5fd8\u4e86$tp[i]$\u7684\u542b\u4e49\uff1a\u6392\u540d\u4e3a$i$\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\n\n \n\n\u6ce8\u610f\u7b2c$36$\u884c\uff1a\u5982\u679c$sa[i]$\u4f4d\u7f6e\u7684\u540e\u7f00\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u540d\u9760\u524d\uff0c\u5b9e\u9645\u4e0a\u4ee3\u8868\u7740$sa[i]-1$\u4f4d\u7f6e\u7684\u540e\u7f00\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u540d\u9760\u524d\uff08\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u5927\u5bb6\u597d\u597d\u7422\u78e8\u4e00\u4e0b\uff09\n\n\u6b64\u65f6\u7b2c\u4e00\u4e8c\u5173\u952e\u5b57\u90fd\u5df2\u7ecf\u5904\u7406\u597d\u4e86\uff0c\u6211\u4eec\u8fdb\u884c\u6392\u5e8f\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206094014607-1838253011.png)\n\n\n\u6392\u5b8c\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u65b0\u7684$sa$\u6570\u7ec4\n\n\u6b64\u65f6\u6211\u4eec\u7528$sa$\u6570\u7ec4\u6765\u66f4\u65b0$rak$\u6570\u7ec4\n\n \n\n\u6211\u4eec\u524d\u9762\u8bf4\u8fc7$rak$\u6570\u7ec4\u662f\u53ef\u80fd\u4f1a\u91cd\u590d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6b64\u65f6\u7528$p$\u6765\u8868\u793a\u5230\u5e95\u51fa\u73b0\u4e86\u51e0\u4e2a\u540d\u6b21\n\n\u8fd8\u9700\u8981\u6ce8\u610f\u4e00\u4e2a\u4e8b\u60c5\uff0c\u5728\u5224\u65ad\u662f\u5426\u91cd\u590d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u4e0a\u4e00\u8f6e\u7684$rak$\n\n\u800c\u6b64\u65f6$tp$\u6570\u7ec4\u662f\u6ca1\u6709\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4ea4\u6362$tp$\u548c$rak$\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206094519654-641158826.png)\n\n\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5199\u4e3a\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206094727576-1306690870.png)\n\n \n\n \n\n \n\n \n\n \n\n\u5728\u5224\u65ad\u91cd\u590d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5bf9\u4e00\u4e2a\u4e8c\u5143\u7ec4\u8fdb\u884c\u6bd4\u8f83\u3002\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206094830732-1126063856.png)\n\n\u5f53\u6ee1\u8db3\u5224\u65ad\u6761\u4ef6\u65f6\uff0c\u4e24\u4e2a\u540e\u7f00\u7684\u540d\u6b21\u4e00\u5b9a\u662f\u76f8\u540c\u7684\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff1f\uff09\n\n \n\n \u7136\u540e\u6109\u5feb\u7684\u8f93\u51fa\u5c31\u53ef\u4ee5\u5566\uff01\n\n![](https://images2017.cnblogs.com/blog/1101696/201802/1101696-20180206094948545-250364918.png)\n\n \n\n\u653e\u4e00\u4e0b\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nconst int MAXN = 1e6 + 10;\nusing namespace std;\nchar s[MAXN];\nint N, M, rak[MAXN], sa[MAXN], tax[MAXN], tp[MAXN];\nvoid Debug() {\n    printf(\"*****************\\n\");\n    printf(\"\u4e0b\u6807\"); for (int i = 1; i <= N; i++) printf(\"%d \", i);     printf(\"\\n\");\n    printf(\"sa  \"); for (int i = 1; i <= N; i++) printf(\"%d \", sa[i]); printf(\"\\n\");\n    printf(\"rak \"); for (int i = 1; i <= N; i++) printf(\"%d \", rak[i]); printf(\"\\n\");\n    printf(\"tp  \"); for (int i = 1; i <= N; i++) printf(\"%d \", tp[i]); printf(\"\\n\");\n}\nvoid Qsort() {\n    for (int i = 0; i <= M; i++) tax[i] = 0;\n    for (int i = 1; i <= N; i++) tax[rak[i]]++;\n    for (int i = 1; i <= M; i++) tax[i] += tax[i - 1];\n    for (int i = N; i >= 1; i--) sa[ tax[rak[tp[i]]]-- ] = tp[i];\n    //\u8fd9\u90e8\u5206\u6211\u7684\u6587\u7ae0\u7684\u672b\u5c3e\u8be6\u7ec6\u7684\u8bf4\u660e\u4e86\n}\nvoid SuffixSort() {\n    M = 75;\n    for (int i = 1; i <= N; i++) rak[i] = s[i] - '0' + 1, tp[i] = i;\n    Qsort();\n    Debug();\n    for (int w = 1, p = 0; p < N; M = p, w <<= 1) {\n        //w:\u5f53\u524d\u500d\u589e\u7684\u957f\u5ea6\uff0cw = x\u8868\u793a\u5df2\u7ecf\u6c42\u51fa\u4e86\u957f\u5ea6\u4e3ax\u7684\u540e\u7f00\u7684\u6392\u540d\uff0c\u73b0\u5728\u8981\u66f4\u65b0\u957f\u5ea6\u4e3a2x\u7684\u540e\u7f00\u7684\u6392\u540d\n        //p\u8868\u793a\u4e0d\u540c\u7684\u540e\u7f00\u7684\u4e2a\u6570\uff0c\u5f88\u663e\u7136\u539f\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64p = N\u65f6\u53ef\u4ee5\u9000\u51fa\u5faa\u73af\n        p = 0;//\u8fd9\u91cc\u7684p\u4ec5\u4ec5\u662f\u4e00\u4e2a\u8ba1\u6570\u5668000\n        for (int i = 1; i <= w; i++) tp[++p] = N - w + i;\n        for (int i = 1; i <= N; i++) if (sa[i] > w) tp[++p] = sa[i] - w; //\u8fd9\u4e24\u53e5\u662f\u540e\u7f00\u6570\u7ec4\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u6211\u5df2\u7ecf\u753b\u56fe\u8bf4\u660e\n        Qsort();//\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u66f4\u65b0\u51fa\u4e86\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5229\u7528\u4e0a\u4e00\u8f6e\u7684rak\u66f4\u65b0\u672c\u8f6e\u7684sa\n        std::swap(tp, rak);//\u8fd9\u91cc\u539f\u672ctp\u5df2\u7ecf\u6ca1\u6709\u7528\u4e86\n        rak[sa[1]] = p = 1;\n        for (int i = 2; i <= N; i++)\n            rak[sa[i]] = (tp[sa[i - 1]] == tp[sa[i]] && tp[sa[i - 1] + w] == tp[sa[i] + w]) ? p : ++p;\n        //\u8fd9\u91cc\u5f53\u4e24\u4e2a\u540e\u7f00\u4e0a\u4e00\u8f6e\u6392\u540d\u76f8\u540c\u65f6\u672c\u8f6e\u4e5f\u76f8\u540c\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5927\u5bb6\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\n        Debug();\n    }\n    for (int i = 1; i <= N; i++)\n        printf(\"%d \", sa[i]);\n}\nint main() {\n    scanf(\"%s\", s + 1);\n    N = strlen(s + 1);\n    SuffixSort();\n    return 0;\n}\n```\n\u518d\u8865\u4e00\u4e0b\u8c03\u8bd5\u7ed3\u679c\n\n\n\n \n\n# \u57fa\u6570\u6392\u5e8f\n\n\u5982\u679c\u4f60\u5bf9\u4e0a\u9762\u7684\u4e3b\u4f53\u8fc7\u7a0b\u6709\u4e86\u5927\u81f4\u7684\u4e86\u89e3\uff0c\u90a3\u4e48\u57fa\u6570\u6392\u5e8f\u7684\u8fc7\u7a0b\u5c31\u4e0d\u96be\u7406\u89e3\u4e86\n\n\u5728\u9605\u8bfb\u4e0b\u9762\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u5e0c\u671b\u5927\u5bb6\u80fd\u521d\u6b65\u4e86\u89e3\u4e00\u4e0b\u57fa\u6570\u6392\u5e8f\n\nhttps://baike.baidu.com/item/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/7875498?fr=aladdin\n\n\u5927\u81f4\u770b\u4e00\u4e0b\u5b83\u7ed9\u51fa\u7684\u4f8b\u5b50\u548cc++\u4ee3\u7801\u5c31\u597d\n\n \n\n \n\n\u5148\u6765\u5927\u81f4\u770b\u4e00\u4e0b\uff0c\u4ee3\u7801\u5c31$4$\u884c\n\n\n\n \n\n$M$\uff1a\u5b57\u7b26\u96c6\u7684\u5927\u5c0f\uff0c\u4e00\u5171\u9700\u8981\u591a\u5c11\u4e2a\u6876\n\n$tax$\uff1a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5728\u8fd9\u91cc\u5c31\u662f\u540d\u6b21\u51fa\u73b0\u7684\u6b21\u6570\n\n \n\n\u7b2c\u4e00\u884c\uff1a\u628a\u6876\u6e05\u96f6\n\n\u7b2c\u4e8c\u884c\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u540d\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\n\n\u7b2c\u4e09\u884c\uff1a\u505a\u4e2a\u524d\u7f00\u548c\uff08\u556a\uff0c\u5e9f\u8bdd\uff09\n\n\u53ef\u80fd\u5927\u5bb6\u4f1a\u7591\u60d1\u524d\u7f00\u548c\u6709\u4ec0\u4e48\u7528\uff1f\n\n\u5229\u7528\u524d\u7f00\u548c\u53ef\u4ee5\u5feb\u901f\u7684\u5b9a\u4f4d\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u5e94\u6709\u7684\u6392\u540d\n\n\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u524d\u7f00\u548c\u53ef\u4ee5\u7edf\u8ba1\u6bd4\u5f53\u524d\u540d\u6b21\u5c0f\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a\u3002\n\n\u61d2\u5f97\u4e3e\u4f8b\u5b50\u5566\uff0c\u4e0d\u61c2\u5f97\u53bb\u6a21\u62df\u4e00\u4e0b\u7b2c\u4e00\u6b21\u6392\u5e8f\u7684\u8fc7\u7a0b\u5427\uff0c\n\n\u7b2c\u56db\u884c\uff1a@#\uffe5%\u2026\u2026&*\n\n\u6211\u77e5\u9053\u5927\u5bb6\u80af\u5b9a\u770b\u6655\u4e86\uff0c\u6211\u4eec\u5148\u6765\u56de\u987e\u4e00\u4e0b\u8fd9\u51e0\u4e2a\u6570\u7ec4\u7684\u5b9a\u4e49\n\n \n\n$sa[i]$\uff1a\u6392\u540d\u4e3a$i$\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\n\n$rak[i]$\uff1a\u4ece\u7b2c$i$\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u540e\u7f00\u7684\u6392\u540d\n\n$tp[i]$\uff1a\u57fa\u6570\u6392\u5e8f\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u610f\u4e49\u4e0e$sa$\u4e00\u6837\n\n \n\n\u6b64\u65f6$rak$\u6570\u7ec4\u548c$tp$\u6570\u7ec4\u90fd\u5df2\u7ecf\u662f\u6392\u597d\u5e8f\u7684\uff0c\n\n\u2018\u6240\u4ee5\u6211\u4eec\u6b64\u65f6\u505a\u7684\u5c31\u662f\u62ff\u8fd9\u4e24\u4e2a\u6570\u7ec4\u6765\u66f4\u65b0$sa$\u6570\u7ec4\n\n\u5012\u7740\u5faa\u73af\u7684\u76ee\u7684\u662f\u8ba9\u9760\u524d\u7684\u540e\u7f00\u5148\u51fa\u73b0\n\n \n\n# \u540e\u8bb0\n\n\u672c\u849f\u84bb\u4e5f\u662f\u7b2c\u4e00\u6b21\u770b\u8fd9\u4e48\u96be\u7684\u4e1c\u897f\u3002\n\n\u7b2c\u4e00\u6b21\u89c1\u8fd9\u79cd\u4e1c\u897f\u5e94\u8be5\u662f\u53bb\u5e74\u590f\u5929\u5427\uff0c\u90a3\u65f6\u6211\u8bb0\u5f97\u81ea\u5df1\u5728\u673a\u623f\u91cc\u7785\u7740\u8fd9\u51e0\u884c\u4ee3\u7801\u770b\u4e86\u4e00\u665a\u4e0a\u4e5f\u6ca1\u770b\u51fa\u5565\u6765\u3002\n\n\u73b0\u5728\u518d\u6765\u770b\u4e5f\u662f\u6b7b\u78d5\u4e86\u4e00\u5929\u591a\u624d\u770b\u61c2\u3002\n\n\u4e0d\u8fc7\u6211\u8fd8\u662f\u6bd4\u8f83\u597d\u5947\u3002\n\n\u8fd9\u79cd\u4e1c\u897f\u662f\u8c01\u53d1\u660e\u7684\u554a\u554a\u554a\u554a\u554a\u8111\u6d1e\u4e5f\u592a\u5927\u4e86\u5427\u554a\u554a\u554a\u554a\u554a\u554a\n\n\u54e6\u5bf9\u4e86\uff0c\u540e\u7f00\u6570\u7ec4\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u6570\u7ec4\u53eb\u505a$Height$\uff0c\u8fd9\u4e2a\u6570\u7ec4\u66f4\u795e\u5947\uff0c\uff0c\u6709\u7a7a\u518d\u8bb2\u5427\u3002\n\n ",
        "postTime": 1517884752,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u540e\u7f00\u6570\u7ec4\u662f\u4e00\u4e2a\u601d\u8def\u8f83\u4e3a\u6e05\u6670\uff0c\u4ee3\u7801\u5341\u5206\u7384\u5b66\u7684\u64cd\u4f5c\uff0c~~\u5efa\u8bae\u5927\u5bb6\u6309\u7167\u4ee3\u7801\u6a21\u62df\u4e00\u4e0b\u6837\u4f8b\uff0c\u7406\u89e3\u6bcf\u4e00\u6b65\u64cd\u4f5c\u7684\u610f\u4e49~~\n\n\u540e\u7f00\u6570\u7ec4\u7684\u4f5c\u7528\u662f\u5c06\u957f\u5ea6\u4e3aN\u7684\u5b57\u7b26\u4e32\u7684N\u4e2a\u540e\u7f00\u6765\u8fdb\u884c\u6392\u5e8f\n\n\u6211\u4eec\u76f4\u63a5\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u662f$O(N^2logN)$\n\n\u540e\u7f00\u6570\u7ec4\u5e38\u7528\u65b9\u6cd5\u662f\u500d\u589e+\u57fa\u6570\u6392\u5e8f\u7b97\u6cd5\uff1a\n\n## 1.\u57fa\u6570\u6392\u5e8f\n\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b\u4ee3\u7801\uff1a\uff08\u9ed8\u8ba4\u5347\u5e8f\u6392\u5217\uff09\n```cpp\n//rep(i, a, b)\u662f\u6b63\u5e8f\u4ecea-b\u679a\u4e3e\n//drep(i, a, b)\u662f\u5012\u5e8f\u4ecea-b\u679a\u4e3e\n//a\u6570\u7ec4\u4e3a\u57fa\u6570\u6392\u5e8f\u8f85\u52a9\u6570\u7ec4\uff0c\u5373\u4e3a\u4e00\u4e2a\u6876\n//rk\u6570\u7ec4\u4e3a\u57fa\u6570\u6392\u5e8f\u7684\u7b2c\u4e00\u5173\u952e\u5b57\n//tp\u7b2c\u4e8c\u5173\u952e\u5b57\u4e2d\uff0c\u6392\u540d\u4e3ai\u7684\u6570\u7684\u4f4d\u7f6e\n//sa\u6570\u7ec4\u53ef\u4ee5\u5728\u6b64\u5904\u7406\u89e3\u4e3a\u6392\u5b8c\u5e8f\u540e\u6392\u540d\u4e3ai\u7684\u6570\u5bf9\u7684\u4f4d\u7f6e\nil void Qsort() {\n\trep(i, 1, m) a[i] = 0;//\n\trep(i, 1, n) ++ a[rk[i]];\n\trep(i, 1, m) a[i] += a[i - 1];\n\t//\u8bb0\u5f55\u524d\u7f00\u548c\u4ee5\u540e\uff0ca[i]\u7684\u610f\u4e49\u662frak\u4e3ai\u7684\u6570\u6700\u5927\u53ef\u4ee5\u5230\u54ea\u91cc\n\tdrep(i, 1, n) sa[a[rk[tp[i]]] --] = tp[i];\n\t//-- a\u7684\u610f\u4e49\u662f\u51cf\u5c11\u4e86\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6240\u4ee5a\u6700\u5927\u53ef\u4ee5\u5230\u7684\u4f4d\u7f6e\u5f80\u524d\u79fb\u4e00\u4e2a\n}\n```\n\u6211\u4eec\u6765\u6a21\u62df\u4e00\u4e0b\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u5bf9\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\n\n\u5176\u4e2d\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a\uff1a$1\\ 3\\ 2\\ 1\\ 4\\ 3\\ 1\\ 2$\n\n\u5bf9\u5e94\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a\uff1a$3\\ 2\\ 1\\ 2\\ 3\\ 3\\ 1\\ 3$\n\n\u6240\u4ee5\u5bf9\u5e94$tp$\u6570\u7ec4\u4e3a\uff1a$3\\ 7\\ 2\\ 4\\ 1\\ 5\\ 6\\ 8$\n\n### \u7b2c\u4e00\u6b65\n\u6211\u4eec\u6e05\u7a7a\u6876\n\n### \u7b2c\u4e8c\u6b65\n\u6211\u4eec\u5c06\u7b2c\u4e00\u5173\u952e\u5b57\u538b\u5165\u6876\u4e2d\uff0c\u5f97\u5230a\u6570\u7ec4\uff1a$3\\ 2\\ 2\\ 1$\n\n### \u7b2c\u4e09\u6b65\n\u6211\u4eec\u5c06a\u6570\u7ec4\u8bb0\u5f55\u524d\u7f00\u548c\uff0c\u5f97\u5230a\u6570\u7ec4\uff1a$3\\ 5\\ 7\\ 8$\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5947\u5999\u7684\u6027\u8d28\n\n\u5bf9\u4e0e\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a1\u7684\u6570\u5bf9\uff0c\u4ed6\u4eec\u7684\u6392\u540d\u4e3a$1-3$\n\n\u5bf9\u4e0e\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a2\u7684\u6570\u5bf9\uff0c\u4ed6\u4eec\u7684\u6392\u540d\u4e3a$4-5$\n\n\u5bf9\u4e0e\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a3\u7684\u6570\u5bf9\uff0c\u4ed6\u4eec\u7684\u6392\u540d\u4e3a$6-7$\n\n\u5bf9\u4e0e\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a4\u7684\u6570\u5bf9\uff0c\u4ed6\u4eec\u7684\u6392\u540d\u4e3a$8-8$\n\n\u6240\u4ee5\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u6765\u8bf4\uff0c\u6211\u4eec\u5df2\u7ecf\u5bf9\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u597d\u4e86\u5e8f\n\n### \u7b2c\u56db\u6b65\n\u6211\u4eec\u4ece\u524d\u5f80\u540e\u5012\u5e8f\u679a\u4e3e\n\n\u9996\u5148\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u5bf9\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a8\uff0c\u7b2c8\u4e2a\u6570\u5bf9\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a2\uff0c2\u7684\u6876\u73b0\u5728\u4e3a5\uff0c\u6240\u4ee5\u6392\u540d\u4e3a5\u7684\u4f4d\u7f6e\u662f\u7b2c8\u4e2a\n\n\u7136\u540e2\u7684\u6876\u51cf\u4e00\uff0c\u56e0\u4e3a\u7b2c\u4e94\u4e2a\u4f4d\u7f6e\u5df2\u7ecf\u88ab\u5360\u7528\uff0c\u6240\u4ee5\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a2\u7684\u6570\u5bf9\u6392\u540d\u4e3a$4-4$\n\n\u7b2c7\u4e2a\u6570\u5bf9\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a6\uff0c\u7b2c\u516d\u4e2a\u6570\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u7684\u6876\u4e3a7\u4e2a\uff0c\u4e8e\u662f\u6392\u540d\u4e3a7\u7684\u4f4d\u7f6e\u662f\u7b2c6\u4e2a\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u62cd\u597d\u5e8f\uff0c\u6700\u540e\u7684sa\u6570\u7ec4\u4e3a$7\\ 4\\ 1\\ 3\\ 8\\ 2\\ 6\\ 5$\n\n## 2.\u500d\u589e\n\n### \u5b9a\u4e49\uff1a\n\n$1.\\ <a, b>$\u4e3a\u4ee5a\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cb\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff09\n$2.\\ s[i]$\u8868\u793a\u539f\u6570\u7ec4\u7684\u7b2ci\u4f4d\u5b57\u7b26\n\n$3.\\ i-$\u540e\u7f00\u8868\u793a\u5bf9\u5b57\u7b26\u4e32S\u7684\u6bcf\u4e2a\u540e\u7f00\uff0c\u53d6\u5de6\u8fb9i\u4e2a\u5b57\u7b26\uff0c\u5f97\u5230\u4e00\u4e2ai-\u540e\u7f00\n\n$4.\\ rk[i][j]$\u8868\u793a\u7b2cj\u4f4d\u4e0a\u7684i-\u540e\u7f00\u7684\u6392\u540d\n\n### \u64cd\u4f5c\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u6309$<i, s[i]>$\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u5f97\u5230$rk[1][i]$\n\n\u518d\u6309\u7167$<rk[1][i], rk[1][i + 1]>$\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u5f97\u5230$rk[2][i]$\n\n\u56e0\u4e3a\u662f\u500d\u589e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7$<rk[2][i], rk[2][i + 2]>$\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u5f97\u5230$rk[4][i]$\n\n\u540c\u7406\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528$<rk[4][i], rk[4][i + 4]>$\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u5f97\u5230$rk[8][i]$\n\n\u5f53\u6240\u6709$rk[2^k][i]$\u4e92\u4e0d\u76f8\u540c\uff0c\u6392\u5e8f\u7ed3\u675f\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u500d\u589e\u90e8\u5206\u4ee3\u7801\u6709\u8be6\u7ec6\u6ce8\u91ca\uff0c\u5c31\u4e0d\u6a21\u62df\u4e86\uff0c\u5404\u4f4d\u6700\u597d\u624b\u52a8\u6a21\u62df\uff0c\u7406\u89e3\u6bcf\u4e00\u884c\u4ee3\u7801\uff0c\u6ce8\u610f\u5728\u6a21\u62df\u7684\u65f6\u5019\u5206\u6e05\u695ark[i]\u548csa[i]\u7684\u533a\u522b\uff0c\u4e00\u5b9a\u8981\u5148\u6e05\u695a\u6bcf\u4e00\u4e2a\u6570\u7ec4\u7684\u610f\u4e49\uff01\uff01\uff01\uff09\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\nusing namespace std;\n#define il inline\n#define re register\n#define debug printf(\"Now is Line : %d\\n\",__LINE__)\n#define file(a) freopen(#a\".in\",\"r\",stdin);freopen(#a\".out\",\"w\",stdout)\nil int read() {\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\n#define rep(i, s, t) for(re int i = s; i <= t; ++ i)\n#define drep(i, s, t) for(re int i = t; i >= s; -- i)\n#define _ 1000005 \nint n, m, a[_], sa[_], rk[_], tp[_];\nchar c[_];\n/*\nsa[i]\uff1a\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\nrk[i]\uff1a\u7b2ci\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u540e\u7f00\u7684\u6392\u540d\uff0c\u4f5c\u4e3a\u57fa\u6570\u6392\u5e8f\u7684\u7b2c\u4e00\u5173\u952e\u5b57 \ntp[i]\uff1a\u7b2c\u4e8c\u5173\u952e\u5b57\u4e2d\uff0c\u6392\u540d\u4e3ai\u7684\u6570\u7684\u4f4d\u7f6e\na[i]\uff1a\u6709\u591a\u5c11\u4e2a\u5143\u7d20\u6392\u540d\u4e3ai\nc[i]\uff1a\u539f\u8f93\u5165\u6570\u7ec4 \n*/\nil int get(char c) {\n\tif(c >= '0' && c <= '9') return c - '0' + 1;\n\tif(c >= 'A' && c <= 'Z') return c - 'A' + 11;\n\treturn c - 'a' + 37;\n}\nil void init() {\n\trep(i, 1, n) rk[i] = get(c[i]), tp[i] = i;\n}\nil void print() {\n\trep(i, 1, n) printf(\"%d \", sa[i]);\n}\nil void Qsort() {\n\trep(i, 1, m) a[i] = 0;\n\trep(i, 1, n) ++ a[rk[i]];\n\trep(i, 1, m) a[i] += a[i - 1];\n\t//\u8bb0\u5f55\u524d\u7f00\u548c\u4ee5\u540e\uff0ca[i]\u7684\u610f\u4e49\u662frak\u4e3ai\u7684\u6570\u6700\u5927\u53ef\u4ee5\u5230\u54ea\u91cc\n\tdrep(i, 1, n) sa[a[rk[tp[i]]] --] = tp[i];\n\t//-- a\u7684\u610f\u4e49\u662f\u51cf\u5c11\u4e86\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6240\u4ee5a\u6700\u5927\u53ef\u4ee5\u5230\u7684\u4f4d\u7f6e\u5f80\u524d\u79fb\u4e00\u4e2a\n}\nil void get_sort() {\n\tfor(re int w = 1, p = 0; w <= n; m = p, p = 0, w <<= 1) {\n\t\t//p\u5728\u6b64\u65f6\u7684\u610f\u4e49\u662f\u6700\u9ad8\u51fa\u73b0\u7684\u6392\u540d\u4ee5\u53ca\u4e00\u4e2a\u8ba1\u6570\u5668 \n\t\t//p < n\u7684\u610f\u4e49\u662f\u5982\u679c\u5f53\u524d\u6700\u5927\u6392\u540d== n\u5219\u65e0\u7ee7\u7eed\u6392\u5e8f\u7684\u610f\u4e49\n\t\trep(i, n - w + 1, n) tp[++ p] = i;\n\t\t//\u8fd9\u91ccp\u7684\u5b9a\u4e49\u53ea\u662f\u4e00\u4e2a\u8ba1\u6570\u5668 \n\t\t//tp[i]\u8868\u793a\u7b2c\u4e8c\u5173\u952e\u5b57\u4e2d\uff0c\u6392\u540d\u4e3ai\u7684\u6570\u7684\u4f4d\u7f6e\n\t\t//\u56e0\u4e3ai - w + 1\u540e\u9762\u6ca1\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u8981\u88650 \n\t\t//\u6240\u4ee5\u8981\u8bbe\u6210\u6781\u5c0f\u503c\u6392\u5728\u524d\u9762\n\t\trep(i, 1, n) if(sa[i] > w) tp[++ p] = sa[i] - w;\n\t\t//\u5728\u7b2c\u4e00\u5173\u952e\u5b57\u4e2d\u6392\u540d\u8d8a\u9760\u524d\uff0c\u8868\u793a\u5e94\u8be5\u6392\u5728\u524d\u9762\n\t\tQsort(), swap(rk, tp), p = rk[sa[1]] = 1;\n\t\t//\u6211\u4eec\u73b0\u5728\u66f4\u65b0rk\uff0ctp\u5df2\u7ecf\u65e0\u7528\uff0c\u5148\u5907\u4efd\uff0c\u7528memcpy\u4e5f\u884c\n\t\t//\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28 : rk[sa[i]] = i\n\t\trep(i, 2, n) rk[sa[i]] = (tp[sa[i]] == tp[sa[i - 1]] && tp[sa[i] + w] == tp[sa[i - 1] + w]) ? p : ++ p;\n\t\t//\u6ce8\u610ftp\u548crk\u5df2\u7ecf\u4ea4\u6362\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5224\u65ad\u7684\u610f\u601d\u662f\uff1a\n\t\t//\u5982\u679c\u4e24\u4e2a\u540e\u7f00\u8fd8\u76f8\u7b49\uff0c\u5219\u6392\u540d\u4e0d\u53d8\uff0c\u5426\u5219++\n\t\tif(p == n) return;\n\t}\n}\nint main() {\n\tscanf(\"%s\", c + 1), n = strlen(c + 1), m = 62;\n\tinit(), Qsort(), get_sort(), print();\n\treturn 0;\n}\n```",
        "postTime": 1566956946,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "2021/02/22 \u66f4\u65b0\uff1a\u4fee\u6539\u4e86\u6392\u7248\u4f7f\u5176\u7b26\u5408\u9898\u89e3\u89c4\u8303\u3002\n\nCSP \u4e4b\u524d\u5199\u7bc7\u9898\u89e3\u52a0\u52a0 RP\n\n## DC3 \u7b97\u6cd5\u6784\u9020\u540e\u7f00\u6570\u7ec4\n\n\u9898\u76ee\uff1a[P3809 \u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f](https://www.luogu.org/problem/P3809)\n\n\u770b\u8fd9\u7bc7\u9898\u89e3\u4e4b\u524d\u5efa\u8bae\u5b66\u4e60\u4e00\u4e0b\u500d\u589e\u6cd5\u6c42\u540e\u7f00\u6570\u7ec4\uff0c\u4e0d\u7136\u53ef\u80fd\u6709\u70b9\u96be\u4ee5\u7406\u89e3\u3002\n\n\u5207\u5165\u6b63\u9898\uff0cDC3 \u662f\u4e00\u79cd $O(n)$ \u65f6\u7a7a\u590d\u6742\u5ea6\u6784\u9020\u540e\u7f00\u6570\u7ec4\u7684\u7b97\u6cd5\uff0c\u7136\u800c\u56e0\u4e3a\u5b83\u5e38\u6570\u5927\uff08\u76f8\u8f83\u4e8e SA-IS\uff09\uff0c\u800c\u4e14\u6bd4\u500d\u589e\u6cd5\u96be\u6253\uff0c\u6240\u4ee5\u51e0\u4e4e\u6ca1\u4eba\u6253\u3002\n\n\u7b97\u6cd5\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n1. \u628a\u6240\u6709\u7684\u540e\u7f00\u5206\u6210\u4e24\u90e8\u5206\uff0c\u8bb0\u540e\u7f00\u8d77\u59cb\u7684\u4e0b\u6807\u4e3a $i$\uff0c\u7b2c\u4e00\u90e8\u5206\u4e3a $i\\bmod 3=0$ \u7684\u540e\u7f00\uff08\u4ee5\u4e0b\u79f0\u4e3a **A \u7c7b\u540e\u7f00**\uff09\uff0c\u7b2c\u4e8c\u90e8\u5206\u4e3a $i\\bmod 3\\neq0$ \u7684\u540e\u7f00\uff08\u4ee5\u4e0b\u79f0\u4e3a **B \u7c7b\u540e\u7f00**\uff09\u3002\n\n2. \u5229\u7528\u57fa\u6570\u6392\u5e8f\uff0c\u5bf9\u6240\u6709 **B \u7c7b\u540e\u7f00**\u6309\u7167**\u524d\u4e09\u4e2a\u5b57\u7b26**\u6392\u5e8f\u3002\n\n3. \u5982\u679c\u524d\u4e09\u4e2a\u5b57\u7b26\u65e0\u6cd5\u5c06\u6240\u6709 B \u7c7b\u540e\u7f00\u6392\u597d\u5e8f\uff0c\u628a\u6bcf\u4e09\u4e2a\u76f8\u90bb\u7684\u5b57\u7b26\u770b\u4f5c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6784\u9020\u65b0\u7684\u5b57\u7b26\u4e32\uff0c**\u9012\u5f52**\u5bf9 B \u7c7b\u540e\u7f00\u6392\u5e8f\u3002\n\n4. \u5229\u7528 B \u7c7b\u540e\u7f00\u7684\u987a\u5e8f\u53ef\u4ee5\u5229\u7528\u57fa\u6570\u6392\u5e8f\u5f88\u5feb\u7684\u6c42\u51fa **A \u7c7b\u540e\u7f00**\u7684\u987a\u5e8f\u3002\n\n5. \u5bf9 A \u7c7b\u540e\u7f00\u548c B \u7c7b\u540e\u7f00\u8fdb\u884c**\u5f52\u5e76\u6392\u5e8f**\uff0c\u7136\u540e SA \u6570\u7ec4\u5c31\u6c42\u51fa\u6765\u4e86\u3002\n\n\u4e0b\u9762\u7528\u4e00\u7ec4\u6837\u4f8b\u6f14\u793a\u4e00\u4e0b DC3 \u7b97\u6cd5\u7684\u6267\u884c\u8fc7\u7a0b\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u8981\u6392\u5e8f\u7684\u5b57\u7b26\u4e32\u662f ```aaababaaca```\uff0c\u4e0b\u9762\u8fd9\u5f20\u56fe\u6807\u6ce8\u51fa\u4e86\u6240\u6709 B \u7c7b\u540e\u7f00\u7684\u524d\u4e09\u4e2a\u5b57\u7b26\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jyd79u0l.png)\n\n\u5bf9\u8fd9\u4e9b\u524d\u4e09\u4e2a\u5b57\u7b26\u8fdb\u884c\u6392\u5e8f\uff0c\u65b9\u6cd5\u662f\u4e09\u6b21\u57fa\u6570\u6392\u5e8f\uff0c\u4ece\u540e\u5f80\u524d\u6bcf\u6b21\u6392\u4e00\u4e2a\u5b57\u7b26\uff0c\u7528\u4e0a\u4e00\u6b21\u6392\u5e8f\u7684\u7ed3\u679c\u505a\u7b2c\u4e8c\u5173\u952e\u5b57\u3002\u56fe\u4e2d\u7684\u6570\u5b57\u8868\u793a\u6392\u5e8f\u540e\u7684\u6392\u540d\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2d86bn5s.png)\n\n\u53d1\u73b0\u524d\u4e09\u4e2a\u5b57\u7b26\u4e0d\u80fd\u786e\u5b9a B \u7c7b\u540e\u7f00\u7684\u987a\u5e8f\uff08\u6709\u4e24\u4e2a ```aba```\uff0c\u6392\u540d\u90fd\u662f $2$\uff09\uff0c\u4e8e\u662f\u6784\u9020\u65b0\u5b57\u7b26\u4e32\uff0c\u9012\u5f52\u6267\u884c DC3 \u7b97\u6cd5\uff0c\u5982\u56fe\uff0c\u6784\u9020\u51fa\u7684\u65b0\u4e32\u662f ```1230245```\uff0c\u4e0b\u4e00\u884c\u8868\u793a\u65b0\u4e32\u6bcf\u4e2a\u540e\u7f00\u7684\u6392\u540d\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/eieyp7lj.png)\n\n\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u65b0\u4e32\u7684\u6784\u9020\u65b9\u5f0f\u4e3a\uff1a\u6240\u6709 $i\\bmod 3=1$ \u7684\u540e\u7f00\u6309\u987a\u5e8f\u6392\u5217\u5728\u5de6\u4fa7\uff0c$i\\bmod 3=2$ \u7684\u540e\u7f00\u6309\u987a\u5e8f\u6392\u5217\u5728\u53f3\u4fa7\uff0c\u4e2d\u95f4\u7528\u4e00\u4e2a 0 \u5b57\u7b26\uff08\u5c31\u662f\u4e00\u4e2a\u7a7a\u7684 A \u7c7b\u540e\u7f00\uff09\u5206\u9694\u3002\u8fd9\u6837\u6784\u9020\u53ef\u4ee5\u4fdd\u8bc1**\u65b0\u4e32\u4e2d\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u5728\u539f\u4e32\u4e2d\u8868\u793a\u76f8\u90bb\u516d\u4e2a\u5b57\u7b26**\u3002\u540c\u65f6\u4e2d\u95f4\u7528 0 \u5b57\u7b26\u5206\u9694\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u4e24\u7c7b\u540e\u7f00\u7684\u6392\u5e8f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\u3002\uff08\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u5b9e\u53ea\u6709 $n\\bmod 3=1$ \u7684\u65f6\u5019\u9700\u8981\u52a0\u8fd9\u4e2a 0 \u5b57\u7b26\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u4ee3\u8868\u6700\u540e\u4e00\u4e2a A \u7c7b\u540e\u7f00\u7684\u4e09\u4e2a\u5b57\u7b26\u672b\u5c3e\u672c\u6765\u5c31\u662f 0 \u5b57\u7b26\uff09\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u65b0\u4e32\u540e\u7f00\u7684\u6392\u5e8f\u4e2d\u5f97\u5230\u6240\u6709 B \u7c7b\u540e\u7f00\u7684\u987a\u5e8f\u3002\n\n\u65e0\u8bba\u662f\u4ec5\u6392\u5e8f\u4e09\u4e2a\u5b57\u7b26\u8fd8\u662f\u9012\u5f52\u6392\u5e8f\uff0c\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5f97\u5230\u6240\u6709 B \u7c7b\u540e\u7f00\u7684\u6392\u540d\u4e86\uff08\u4e0b\u56fe\u4e2d\u7b2c\u4e09\u884c\uff09\u3002\u6ce8\u610f\u5230\u5bf9\u4e8e\u6240\u6709 A \u7c7b\u540e\u7f00\uff0c\u90fd\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5b57\u7b26\u52a0\u4e0a\u4e00\u4e2a B \u7c7b\u540e\u7f00\uff0c\u800c B \u7c7b\u540e\u7f00\u7684\u987a\u5e8f\u5df2\u7ecf\u6c42\u51fa\u3002\u6240\u4ee5\u7528\u7b2c\u4e00\u4e2a\u5b57\u7b26\u505a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u5176\u540e\u7684 B \u7c7b\u540e\u7f00\u6392\u540d\u505a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u4e00\u6b21\u57fa\u6570\u6392\u5e8f\u5373\u53ef\u6c42\u51fa A \u7c7b\u540e\u7f00\u7684\u6392\u540d\uff08\u56fe\u4e2d\u7b2c\u56db\u884c\uff09\u3002\u56fe\u4e2d\u7b2c\u4e94\u3001\u516d\u884c\u5199\u51fa\u4e86\u6309\u987a\u5e8f\u6392\u5217\u7684 A \u7c7b\u540e\u7f00\u548c B \u7c7b\u540e\u7f00\u8d77\u59cb\u4e0b\u6807\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/24cvne6l.png)\n\n\u73b0\u5728\u4e24\u7c7b\u540e\u7f00\u90fd\u5df2\u7ecf\u6709\u5e8f\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u5f52\u5e76\u5c31\u80fd\u5c06\u4e24\u7c7b\u540e\u7f00\u7684\u987a\u5e8f\u5408\u5e76\u3002\u5f52\u5e76\u5c31\u9700\u8981\u6bd4\u8f83\u4e24\u7c7b\u540e\u7f00\u7684\u5927\u5c0f\u3002\u8bb0\u9700\u8981\u6bd4\u8f83\u5927\u5c0f\u7684 A \u7c7b\u540e\u7f00\u8d77\u59cb\u4e0b\u6807\u4e3a $i$\uff0cA \u7c7b\u540e\u7f00\u8d77\u59cb\u4e0b\u6807\u4e3a $j$\uff1a\n\n\u5982\u679c\u4f4d\u7f6e $i,j$ \u4e0a\u7684\u5b57\u7b26\u4e0d\u540c\uff0c\u76f4\u63a5\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u5b57\u7b26\u5373\u53ef\u3002\u5426\u5219\u9700\u8981\u6bd4\u8f83\u540e\u7f00 $i+1$ \u548c $j+1$\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $j\\bmod 3=1$\uff0c\u6b64\u65f6\u540e\u7f00 $i+1$ \u548c $j+1$ \u90fd\u662f B \u7c7b\u540e\u7f00\uff0c\u800c\u6211\u4eec\u5df2\u7ecf\u6c42\u8fc7 B \u7c7b\u540e\u7f00\u7684\u987a\u5e8f\u4e86\u3002\n\n2. $j\\bmod 3=2$\uff0c\u6b64\u65f6\u540e\u7f00 $i+1$ \u662f B \u7c7b\u540e\u7f00\u4e14 $i+1\\bmod 3=1$\uff0c\u540e\u7f00 $j+1$ \u662f A \u7c7b\u540e\u7f00\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6c42\u51fa\u6700\u7ec8\u7b54\u6848\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/u3e5ulv2.png)\n\n\u7531\u4e8e\u672c\u9898\u4e0b\u6807\u662f\u4ece $1$ \u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u7a0b\u5e8f\u8f93\u51fa ```10 1 2 7 5 3 8 6 4 9```\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u7ec6\u8282\u975e\u5e38\u591a\uff0c\u5168\u90fd\u5199\u5728\u6ce8\u91ca\u91cc\u4e86\u3002\n\n[\u65e0\u6ce8\u91ca\u7248\u4ee3\u7801](https://www.luogu.org/paste/iknn199c)\n\n```cpp\n#include <cstdio>\n#define N 1000001\nint rk[3*N+100], sa[3*N], bu[N], x[N], y[N];\nvoid sort(int *rk, int *a, int *b, int n, int m) {\n\t//rk\u662f\u8981\u6392\u5e8f\u7684\u4e32\uff0ca\u662f\u8981\u6392\u5e8f\u7684\u5b57\u7b26\u7684\u4e0b\u6807\uff0c\u5176\u987a\u5e8f\u662f\u7b2c\u4e8c\u5173\u952e\u5b57\n\tfor (int i = 0; i <= m; i++) bu[i] = 0;\n\tfor (int i = 0; i < n; i++) bu[rk[a[i]]]++;\n\tfor (int i = 1; i <= m; i++) bu[i] += bu[i-1];\n\tfor (int i = n-1; i >= 0; i--) b[--bu[rk[a[i]]]] = a[i];\n}\nbool cmp3(int *r, int x, int y) {\n\treturn r[x] == r[y] && r[x+1] == r[y+1] && r[x+2] == r[y+2];\n}\nbool cmpt(int* r, int x, int y) { //\u6bd4\u8f83\u4e24\u7c7b\u540e\u7f00\u7684\u5927\u5c0f\n\tif (r[x] != r[y]) return r[x] < r[y];\n\tif (x%3 == 1) return bu[x+1] < bu[y+1];\n\telse return !cmpt(r, y+1, x+1);\n}\nvoid DC3(int *rk, int *sa, int n, int m) {\n\tbool h = (n%3 == 1); if (h) rk[n++] = 0;\n\t//\u5982\u679cn%3==1\uff0c\u5728\u539f\u4e32\u672b\u5c3e\u589e\u52a0\u4e00\u4e2a\u7a7a\u7684A\u7c7b\u540e\u7f00\uff0c\u4ee5\u9632\u9012\u5f52\u6392\u5e8f\u8d8a\u754c\n\tint *rn = rk+n+2, *san = sa+n, ln = 0, p;\n\t//ln: B\u7c7b\u540e\u7f00\u7684\u6570\u91cf\n\tfor (int i = 0; i < n; i++)\n\t\tif (i % 3) x[ln++] = i;\n\trk[n] = rk[n+1] = 0; //\u5728\u539f\u4e32\u540e\u589e\u52a0\u4e24\u4e2a\u7a7a\u5b57\u7b26\uff0c\u65b9\u4fbf\u5904\u7406\n\tsort(rk+2, x, y, ln, m);\n\tsort(rk+1, y, x, ln, m);\n\tsort(rk, x, y, ln, m);\n\tint ta = 0, td = (n+1)/3;\n\t//ta: A\u7c7b\u540e\u7f00\u7684\u6570\u91cf\n\t//td: i%3==1\u7684\u540e\u7f00\u7684\u6570\u91cf\n\t#define F(x) (x/3)+(x%3==1?0:td)\n\t//\u5229\u7528\u4e09\u4e2a\u5b57\u7b26\u6784\u9020\u65b0\u4e32\n\t//F(x): \u539f\u4e32\u7684\u540e\u7f00x\u5728\u65b0\u4e32\u4e2d\u7684\u4f4d\u7f6e\n\trn[F(y[0])] = p = 1;\n\tfor (int i = 1; i < ln; i++) {\n\t\tif (!cmp3(rk, y[i], y[i-1])) p++;\n\t\trn[F(y[i])] = p;\n\t}\n\tif (p < ln) DC3(rn, san, ln, p); //\u9012\u5f52\u5bf9B\u7c7b\u540e\u7f00\u8fdb\u884c\u6392\u5e8f\n\telse for (int i = 0; i < ln; i++)\n\t\tif (rn[i]) san[rn[i]-1] = i;\n\tfor (int i = 0; i < ln; i++)\n\t\tif (san[i] < td) y[ta++] = san[i]*3;\n\t//\u5bf9\u4e8e\u6240\u6709i%3==1\u7684\u540e\u7f00\uff0c\u5176\u6392\u540d\u662f\u4e4b\u524d\u4e00\u4e2aA\u7c7b\u540e\u7f00\u6392\u5e8f\u7528\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\n\tsort(rk, y, x, ta, m);\n\t#define G(x) (x>=td?(x-td)*3+2:x*3+1)\n\t//G(x): \u65b0\u4e32\u7684\u540e\u7f00x\u5728\u539f\u4e32\u4e2d\u7684\u4f4d\u7f6e\n\tfor (int i = 0; i < ln; i++)\n\t\tbu[y[i] = G(san[i])] = i; //\u8fd9\u91cc\u7684bu[x]\u5c31\u662fB\u7c7b\u540e\u7f00x\u7684\u6392\u540d\n\tbu[n] = -1;\n\tint i = 0, j = h; p = 0; //\u5982\u679ch\u7b49\u4e8e1\uff0c\u5219\u7b2c\u4e00\u4e2aA\u7c7b\u540e\u7f00\u662f\u4e3a\u4e86\u9632\u6b62\u8d8a\u754c\u52a0\u5165\u7684\uff0c\u5f52\u5e76\u65f6\u53bb\u9664\n\twhile (i < ta && j < ln) {\n\t\tif (cmpt(rk, y[j], x[i])) sa[p++] = y[j++];\n\t\telse sa[p++] = x[i++];\n\t}\n\twhile (i < ta) sa[p++] = x[i++];\n\twhile (j < ln) sa[p++] = y[j++];\n}\nchar s[N]; int n;\nint main() {\n\tscanf(\"%s\", s);\n\tfor (n = 0; s[n]; n++)\n\t\trk[n] = s[n]-'0'+1;\n\t//\u521d\u59cb\u7684rank\u662f\u5b57\u7b26\u7684ascii\u7801\n\t//\u6ce8\u610f0\u662f\u4fdd\u7559\u7684\uff0c\u666e\u901a\u5b57\u7b26\u4ece1\u5f00\u59cb\n\tDC3(rk, sa, n, 75);\n\tfor (int i = 0; i < n; i++)\n\t\tprintf(\"%d \", sa[i]+1);\n\tputs(\"\");\n}\n```\n\n### \u5176\u4ed6\u7684\u95ee\u9898\n\n\u56e0\u4e3a\u5b58\u5728\u9012\u5f52\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6 $f(n)=\\Theta(n)+f(\\frac{2}{3}n)=\\Theta(n)$\u3002\uff08\u4e0d\u77e5\u9053\u600e\u4e48\u63a8\u7684\u53ef\u4ee5\u770b\u4e00\u4e0b[\u8fd9\u4e2a](https://www.luogu.org/blog/nederland/guan-yu-di-gui-di-shi-jian-fu-za-du-fen-xi)\uff09\n\n\u53c8\u56e0\u4e3a $n+(\\frac{2}{3})n+(\\frac{2}{3})^2n+(\\frac{2}{3})^3n+...=3n$\uff0c\u6240\u4ee5\u6570\u7ec4\u5f00\u4e09\u500d\u5927\u5c0f\u3002",
        "postTime": 1573650053,
        "uid": 90893,
        "name": "\u93e1\u97f3\u30ea\u30f3",
        "ccfLevel": 10,
        "title": "\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f | DC3\u7b97\u6cd5\u6784\u9020\u540e\u7f00\u6570\u7ec4"
    },
    {
        "content": " _**\u5173\u4e8e\u540e\u7f00\u6570\u7ec4**_ \n\n------------\n\u540e\u7f00\u6570\u7ec4\u601d\u8def\u5176\u5b9e....\u4e0d\u662f\u975e\u5e38\u96be\uff08\u7092\u9e21easy\uff09\n\n\u8fd9\u91cc\u8bb2\u8bb2\u500d\u589e\u7b97\u6cd5\n\n[\u53ef\u4ee5\u5728\u8fd9\u91cc\u770b\u4e00\u770b\u7ecf\u5178\u601d\u8def\u56fe](https://blog.csdn.net/yxuanwkeith/article/details/50636898)\n\n\u4f46\u662f\u4ee3\u7801\u5b9e\u73b0\u5c31\u7279\u522b\u96be\u53d7...\n\n\u4e09\u56db\u4e2a\u6570\u7ec4\u5d4c\u5957\u5f88\u96be\u61c2 \u6240\u4ee5\u53d1\u4e00\u7bc7\u81ea\u5df1\u5927\u6982\uff08100%\uff09\u770b\u61c2\u7684\u4ee3\u7801\n\n\u601d\u8def\u5927\u6982\u662f\n\n \u5148\u57fa\u6570\u6392\u5e8f\n \n \u7136\u540e\u4e00\u5c42for\uff08\u66f4\u65b0\u7b2c\u4e8c\u5173\u952e\u5b57\uff08tp\uff09\uff1b\u5229\u7528\u8fd9\u4e00\u8f6e\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u66f4\u65b0\u4e0b\u4e00\u8f6e\u7684&&\u79bb\u6563\u7b2c\u4e00\u5173\u952e\u5b57\uff08rk\uff09\uff09\n \n \u5f53\u79bb\u6563\u51fa\u6765\u7684\u8ba1\u6570==\u957f\u5ea6\uff08n\uff09\u662f\u5c31o**k\u4e86\n \n \u4e0a\u4ee3\u7801\uff01\n \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define inv inline void\n#define maxN 1000010\nusing namespace std;\nchar s[maxN];\n//s\u662f\u5b57\u7b26\u4e32\u7684\u8bfb\u5165\nint a[maxN],rk[maxN],sa[maxN],tp[maxN],tax[maxN],n,m;\n//a\u662f\u6682\u5b58\u6570\u7ec4\uff0crk\uff08\u7b2c\u4e00\u5173\u952e\u5b57\uff09\u7b2ci\u4f4d\u7684\u6392\u540d\uff0csa\u662f\u6392\u540d\u4e3ai\u7684\u4f4d\u7f6e\uff0ctp\u662f\u7b2c\u4e8c\u5173\u952e\u5b57\u8f85\u52a9\u7528\u7684\uff0ctax\u662f\u6876\u6570\u7ec4\uff1b\ninv read(){\n\tscanf(\"%s\",&s);\n\tn=strlen(s);\n\tfor(int i=0;i<n;i++) a[i+1]=s[i];\n    //\u8bfb\u5165\n}\ninv Rsort(){\n\tfor(int i=0;i<=m;i++) tax[i]=0;\n    //tax\u662f\u6876\n    //tax\u6e05\u96f6\n\tfor(int i=1;i<=n;i++) tax[rk[tp[i]]]++;\n    //\u6bcf\u4e00\u4e2a\u51fa\u73b0\u7684\u7b2c\u4e00\u5173\u952e\u5b57++\n\tfor(int i=1;i<=m;i++) tax[i]+=tax[i-1];\n    //tax\u4e2di\u73b0\u5728\u4ee3\u8868\u8fd9\u4e2a\u6570\u81f3\u591a\u80fd\u6392\u7b2c\u51e0\u4f4d\n\tfor(int i=n;i>=1;i--) sa[tax[rk[tp[i]]]--]=tp[i];\n    //\u5982\u679c\u662f\u7b2c\u4e00\u904d\u5c31\u5148\u4e0d\u770b\u8fd9\u4e2a\n    //\u5c31\u662f\u628a\u8fd9\u4e00\u8f6e\u7684sa\u505a\u51fa\u6765\n    //\u7b2c\u4e8c\u8f6e\u5f00\u59cb\u56e0\u4e3atp\u662f\u6309\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u6570\u7ec4\u7684\n    //\u6240\u4ee5\u4ece\u540e\u5f80\u524d\u6765\u7b2c\u4e8c\u5173\u952e\u5b57\u80af\u5b9a\u6bd4\u524d\u9762\u5c0f\n    //\u6240\u4ee5\u7b2c\u4e00\u5173\u952e\u5b57\u76f8\u540c\u65f6\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u8d8a\u5927\u6392\u540d\u8d8a\u540e\n    //\u6240\u4ee5\u5148\u62ff\u5230\u6700\u5927\u7684\u503c\u7136\u540e--\n}\ninv Suffix(){\n\tfor(int i=1;i<=n;i++) rk[i]=a[i],tp[i]=i;\n    //\u56e0\u4e3a\u662f\u7b2c\u4e00\u8f6e\u6240\u4ee5\u76f4\u63a5\u7528ascii\u7801\u548c\u4f4d\u7f6e\u5f53\u5173\u952e\u5b57\uff1b\n\tRsort();\n//\tfor(int i=1;i<=n;i++) printf(\"%d \",sa[i]);\n    for(int k=1;k<=n;k<<=1){\n    \tint num;\n    \tnum=0;\n    \tfor(int i=n-k+1;i<=n;i++) tp[++num]=i;\n        //\u4ecen-k+1\u5f00\u59cb\uff0c\u5230n\u7684\u4f4d\u7f6e\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u90fd\u4e3a\u96f6\uff0c\u6240\u4ee5\u5148\u5165\u6570\u7ec4\n    \tfor(int i=1;i<=n;i++) if(sa[i]>k) tp[++num]=sa[i]-k;\n        //\u56e0\u4e3asa\u662f\u6392\u597d\u5e8f\u7684\uff0c\u5f53sa[i]\u8fd9\u4e2a\u4f4d\u7f6e\u5927\u4e8ek\u65f6\n        //sa[i]\u5c31\u4f1a\u4f5c\u4e3a\u522b\u4eba\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u56e0\u4e3asa\u6392\u597d\u5e8f\u7684\u6240\u4ee5\u4ece\u5c0f\u5f80\u5927\u4e00\u4e2afor\u5c31ok\n        //\u6240\u4ee5\u5c31\u628asa[i]-k\u8fd9\u4e2a\u4f4d\u7f6e\u5148\u8fdb\n        //\u4e0a\u9762\u8fd9\u4e24\u4e2afor\u505a\u5b8c\u540etp\u5c31\u5b8c\u6210\u4e86\n    \tRsort();\n        //\u518d\u8fdb\u884c\u4e00\u6b21\u57fa\u6570\u6392\u5e8f\n    \tswap(rk,tp);\n        //\u7528tp\u5b58\u4e0b\u8fd9\u4e00\u8f6erk\n        //\u4e0b\u9762\u5f00\u59cb\u66f4\u65b0\u4e0b\u4e00\u8f6erk\n    \trk[sa[1]]=1;\n        //sa[1]\u7684rk\u5c31\u662f1\n    \tnum=1;\n        //\u8ba1\u6570\u5668&&\u81ea\u5e26\u66f4\u65b0\u6392\u540d\n    \tfor(int i=2;i<=n;i++)\n    \t  rk[sa[i]]=(tp[sa[i]]==tp[sa[i-1]]&&tp[sa[i]+k]==tp[sa[i-1]+k])?num:++num;\n          //\uff08\uff09\u91cc\u9762\u7684\u662f\u6bd4\u8f83\u7b2c\u4e00\u548c\u7b2c\u4e8c\u5173\u952e\u5b57\u662f\u5426\u76f8\u540c\n          //\uff08\uff09\u91cc\u9762\u7684\u5982\u679c\u6210\u7acb\uff0c\u5c31\u76f4\u63a5\u7b49\u4e8enum\n          //\u5982\u679c\u4e0d\u6210\u7acb\u5c31++num\u5e76\u53d8\u6210num++\n    \tif(num==n) break;\n        //\u5982\u679c\u6709n\u79cd\u6392\u540d\u5c31done\u4e86\uff01\n    \tm=num;\n        //m\u4ee3\u8868tp\u7684\u79cd\u7c7b\n    }\n    return;\n}\nint main(){\n\tread();\n\tm=122;\n\tSuffix();\n\tfor(int i=1;i<=n;i++) printf(\"%d \",sa[i]);\n//\tprintf(\"\\n\");\n//\tfor(int i=1;i<=n;i++) printf(\"%d \",rk[i]);\n}\n```",
        "postTime": 1521877903,
        "uid": 56011,
        "name": "jokers",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "# Hash\u662f\u4e07\u80fd\u7684\n\u5047\u5982\u6211\u4eec\u7528\u66b4\u529b\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0c\u663e\u7136\u6211\u4eec\u9700\u8981\u9010\u4f4d\u6bd4\u8f83\uff0c\u76f4\u5230\u6bd4\u8f83\u5230\u4e00\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u3002\n\n\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684LCP\uff0c\u7136\u540e\u6bd4\u8f83\u5176\u4e0b\u4e00\u4f4d\u5373\u53ef\u3002\uff08~~\u5047\u8bbe\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u540e\u7f00\u6570\u7ec4\u662f\u86e4~~\uff09\n\n\u6211\u4eec\u77e5\u9053Hash\u53ef\u4ee5\u5728O(1)\u65f6\u95f4\u5224\u65ad\u4e24\u4e2a\u5b50\u4e32\u662f\u5426\u76f8\u7b49\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u7528Hash\u5224\u65ad\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6bd4\u540e\u7f00\u6570\u7ec4\u591a\u4e00\u4e2alog\uff0c\u9700\u8981\u5438\u6c27\u624d\u80fd\u8fc7\u3002\n\n**~~\u4e0d\u8fc7\uff0c\u4e3a\u4ec0\u4e48stable_sort\u80fd\u5361\u8fc7\u800csort\u4f1aT\uff1f~~**\n\n\u6bd5\u7adf\u662f\u66b4\u529b\uff0c\u6548\u7387\u7565\u4f4e\uff0c\u8bf7\u5927\u4f6c\u624b\u4e0b\u7559\u60c5\u3002\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define base 233\n#define ull unsigned long long\nusing namespace std;\null bases[1000010],hashs[1000010];\nchar str[1000010];\nint n;\ninline ull get(int l,int r){return hashs[r]-hashs[l-1]*bases[r-l+1];}\nbool cmp(int l1,int l2)\n{\n    int l=-1,r=min(n-l1,n-l2);\n    while(l<r)\n    {\n        int mid=(l+r+1)>>1;\n        if(get(l1,l1+mid)==get(l2,l2+mid)) l=mid;\n        else r=mid-1;\n    }\n    if(l>min(n-l1,n-l2)) return l1>l2;\n    else return str[l1+l+1]<str[l2+l+1];\n}\nint a[1000010];\nint main()\n{\n    scanf(\"%s\",str+1);\n    n=strlen(str+1);\n    bases[0]=1;\n    for(int i=1;i<=n;i++)\n    {\n        bases[i]=bases[i-1]*base;\n        hashs[i]=hashs[i-1]*base+str[i];\n        a[i]=i;\n    }\n    stable_sort(a+1,a+n+1,cmp);\n    for(int i=1;i<=n;i++) printf(\"%d \",a[i]);\n    return 0;\n}\n```",
        "postTime": 1554432241,
        "uid": 52902,
        "name": "Flying2018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "## \u540e\u7f00\u6570\u7ec4\n\n\u4e86\u89e3\u4e00\u53d1\u53d8\u91cf\uff1a\n\nSA:\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\n\nrk:\u4f4d\u7f6e\u4e3ai\u7684\u540e\u7f00\u7684\u6392\u540d\n\ntp:\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\uff0c\u8fd8\u88ab\u7528\u4f5crank\u7684\u6682\u5b58\n\ntax:\u6bcf\u4e2a\u6392\u540d\u5bf9\u5e94\u7684\u540e\u7f00\u6570\u91cf\n\n\u540e\u7f00\u6570\u7ec4\u5c31\u662f\u4e3a\u4e86\u6c42\u51fasa\u548crk\uff1b\n\n\u6709\u610f\u601d\u7684\u6027\u8d28\uff1a\n\n$rk[sa[i]]=i$\u8fd8\u6709$sa[rk[i]]=i$\uff1b\n\n## \u600e\u4e48\u6c42\uff1f\n\n\u500d\u589e\uff0b\u57fa\u6570\u6392\u5e8f\uff1b\n\n\u4f55\u4e3a\u500d\u589e\uff1f\u5148\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5f00\u59cb\u5411\u540e$2^k$\u4e2a\u5b57\u7b26\u7684\u6392\u540d\uff0c\u4e24\u4e24\u62fc\u63a5\uff0c\u7b97\u51fa$2^{k+1}$\u4e2a\u5b57\u7b26\u7684\u6392\u540d\uff0c\u76f4\u5230\u533a\u5206\u51fa\u6240\u6709\u540e\u7f00\uff1b\n\n\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u7528\u4e8e\u6392\u5e8f\u7684\u4e8c\u5143\u7ec4\uff0c\u5982\u4f55\u5feb\u901f\u6392\u5e8f\uff1f\u4ecb\u4e8e\u6bcf\u4e2a\u6570\u5b57\u6700\u5927\u4e0d\u8d85\u8fc7N\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fdb\u9636\u6876\u6392\uff1a\u57fa\u6570\u6392\u5e8f\uff1b\n\n\uff08PS\uff1a\u6b63\u5b97\u7684\u57fa\u6570\u6392\u5e8f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\log(Maxn))$\uff09\n\n## \u6ce8\u610f\n\n\u57fa\u6392\u6c42\u524d\u7f00\u548c\u8981\u5faa\u73af\u5230M\uff1b\n\n## \u6a21\u677f\u9898\u4ee3\u7801\u4e0e\u6ce8\u91ca\u8be6\u89e3\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<deque>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof (x))\n#define mem1(x) memset((x),0x3f,sizeof (x))\n#define pb push_back\n#define gc getchar\ntemplate<class T>void in(T &x)\n{\n    x = 0; bool f = 0; char c = gc();\n    while (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n    while ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n    if (f) x = -x;\n}\n#undef gc\n#define N 1000010\nchar s[N];\nint n, m;\n// \u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u6876\u7684\u5927\u5c0f\nint sa[N], rk[N];\n// SA:\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\n// rank:\u4f4d\u7f6e\u4e3ai\u7684\u540e\u7f00\u7684\u6392\u540d\nint tp[N], tax[N];\n// tp:\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\uff0c\n//    \u8fd8\u88ab\u7528\u4f5crank\u7684\u6682\u5b58\n// tax:\u6bcf\u4e2a\u6392\u540d\u5bf9\u5e94\u7684\u540e\u7f00\u6570\u91cf\uff0c\u7528\u4f5c\u6876\nvoid rsort() { // \u57fa\u6570\u6392\u5e8f\n    for (ri i = 1; i <= m; ++i) tax[i] = 0;\n    for (ri i = 1; i <= n; ++i) ++tax[rk[i]];\n    // \u7b2ci\u4e2a\u6876\u7684\u5185\u5bb9\uff1a\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a\u7b2ci\u7684\u6570\u91cf\n    // \u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u540d\uff08rk[i]\uff09\uff0c\u6dfb\u52a0\u5230\u6876\u4e2d\n    for (ri i = 1; i <= m; ++i) tax[i] += tax[i - 1];\n    // \u4e3a\u4e86\u8ba1\u7b97\u65b9\u4fbf\uff0c\u6211\u4eec\u6c42\u51fa\u524d\u7f00\u548c\n    // \u6ce8\u610f\u8fd9\u91cc\u662f\u5faa\u73af\u5230M\n    for (ri i = n; i >= 1; --i) sa[tax[rk[tp[i]]]--] = tp[i];\n    // \u89e3\u91ca\u4e00\u4e0b\uff1a\u56e0\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u53ef\u80fd\u5bf9\u5e94\u5f88\u591a\u7b2c\u4e8c\u5173\u952e\u5b57\n    // \u6211\u4eec\u8981\u5728\u7b2c\u4e00\u5173\u952e\u5b57\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\u6392\u7b2c\u4e8c\u5173\u952e\u5b57\n    // \u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5012\u5e8f\u679a\u4e3e\u6240\u6709\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u8fd9\u6837\u5b83\u4e00\u5b9a\u662f\u6240\u5728\u6876\u7684\u6700\u540e\u4e00\u540d\n    // \u6839\u636e\u6211\u4eec\u5c31\u6c42\u51fa\u7684\u524d\u7f00\u548c\uff0c\u5b83\u5c31\u662f\u6240\u6709\u540e\u7f00\u7684\u7b2ctax[rk[tp[i]]]\u540d\n    // \uff08\uff08\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\uff09\u7684\u6876\u7f16\u53f7\uff09\u7684\u524d\u7f00\u548c\u6392\u540d\n    // \u56e0\u4e3a\u6211\u4eec\u53d6\u51fa\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6876\u7684size\u8981-1\n    // \u8fd9\u6837\uff0c\u8fd9\u4e2a\u6392\u540d\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\u5c31\u662ftp[i]\n}\nvoid ssort() {\n    for (ri i = 1; i <= n; ++i) rk[i] = s[i], tp[i] = i;\n    // \u521d\u59cb\u65f6\uff0c\u6bcf\u4e2a\u5b57\u7b26\u7684\u6392\u540d\u5c31\u662fASCII\u7801\n    // \u7b2c\u4e8c\u5173\u952e\u5b57\u5c31\u968f\u4fbf\u7ed9\u4e2ai\n    rsort();\n    // \u8ba1\u7b97\u51fa\u957f\u5ea6\u4e3a1\u7684SA\u548crk\n    for (ri w = 1, p = 0; p < n && w <= n; m = p, w <<= 1) {\n        // m = p : \u6539\u53d8\u6876\u7684\u5927\u5c0f\u4e3a\u6392\u540d\u7684\u6570\u91cf\uff0c\u5f53\u6570\u91cf\u4e3aN\u65f6\uff0c\u5b8c\u6210\u533a\u5206\u6392\u540d\n        // w\u662f\u8981\u6c42\u51fa\u7684\u540e\u7f00\u7684\u957f\u5ea6\n        p = 0; // p\u662f\u8ba1\u6570\u5668\uff0c\u8bb0\u5f55\u6709\u591a\u5c11\u4e2a\u540e\u7f00\u7684\u6392\u540d\u4e0d\u540c\n        for (ri i = n - w + 1; i <= n; ++i) tp[++p] = i;\n        // \u5bf9\u4e8e\u8d77\u59cb\u4f4d\u7f6e\u5728[n-w+1,n]\u7684\u540e\u7f00\uff0c\u5b83\u4eec\u6ca1\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u4ed6\u4eec\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u6700\u5c0f\n        for (ri i = 1; i <= n; ++i)\n            if (sa[i] > w) tp[++p] = sa[i] - w;\n        // IMPORTANT\n        // \u679a\u4e3e\u6bcf\u4e00\u4e2a\u6392\u540d\uff0c\u770b\u770b\u5b83\u8ddd\u79bb\u5b57\u7b26\u4e32\u5f00\u5934\u662f\u5426>w\uff0c\u8fd9\u6837\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u5c31\u662f\u4e00\u4e2a\u540e\u7f00\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\n        // \u56e0\u4e3a\u6211\u4eec\u8981\u5728\u6bcf\u4e00\u4e2a\u540e\u7f00\u524d\u63a5\u4e0a\u957f\u5ea6\u4e3aw\u7684\u540e\u7f00\uff0c\u6240\u4ee5tp[++p] = sa[i] - w;\n        // \u6ce8\u610f\uff0c\u7f16\u53f7\u8d8a\u5c0f\u8868\u793a\u8fd9\u4e2a\u540e\u7f00\u7684\u8d77\u59cb\u4f4d\u7f6e\u8d8a\u9760\u524d\n        // \u6211\u4eec\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u8981\u4ece\u5c0f\u5230\u5927\uff0c\u800c\u6211\u4eec\u6b63\u597d\u662f\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u540e\u7f00\n        rsort(); // \u518d\u6765\u4e00\u904d\n        swap(rk, tp); // WARN swap rank & tp\n        // \u6211\u4eec\u5df2\u7ecf\u66f4\u65b0\u4e86SA\uff0c\u6211\u4eec\u8fd8\u8981\u66f4\u65b0rk\uff0c\u6b64\u65f6tp\u5df2\u7ecf\u65e0\u7528\uff0c\u76f4\u63a5\u5907\u4efd\u4e0a\u4e00\u4e2ark\n        rk[sa[1]] = p = 1; // \u6392\u540d\u7b2c\u4e00\u7684\u540e\u7f00\u76f4\u63a5\u52a0\u5165\n        for (ri i = 2; i <= n; ++i)\n            rk[sa[i]] = (tp[sa[i]] == tp[sa[i - 1]] && tp[sa[i] + w] == tp[sa[i - 1] + w])\n                        ? p : ++p;\n        // \u8fd9\u91cc\u7684\u6761\u4ef6\u662f\u6307\uff1a\u5b83\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u548c\u7b2c\u4e8c\u5173\u952e\u5b57\u662f\u5426\u90fd\u548c\u524d\u4e00\u4e2a\u76f8\u540c\uff0c\u5982\u679c\u662f\uff0c\u5b83\u548c\u4e0a\u4e00\u4e2a\u5e76\u5217\n        // \u5982\u679c\u4e0d\u662f\uff0c\u5b83\u7684\u6392\u540d\u8981+1\n        // \u68c0\u67e5\u4e00\u4e0bp==n\uff0cbreak;\uff08\u6211\u4eec\u5df2\u7ecf\u533a\u5206\u51fa\u6240\u6709\u540e\u7f00\uff09\n    }\n}\nsigned main() {\n    scanf(\"%s\", s + 1);\n    n = strlen(s + 1);\n    m = 127; // \u521d\u59cb\u6876\u7684\u5927\u5c0f\uff0c\u56e0\u4e3achar\u6700\u5927\u5c31\u662f127\n    ssort();\n    for (ri i = 1; i <= n; ++i) printf(\"%d \", sa[i]);\n    return 0;\n}\n```\n\n## \u6269\u5c55\n\n$lcp(x,y)$\uff1a\u5b57\u7b26\u4e32x\u4e0e\u5b57\u7b26\u4e32y\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u5728\u8fd9\u91cc**\u6307x\u53f7\u540e\u7f00\u4e0e\u4e0ey\u53f7\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00**\uff1b\n\n$height[i]=lcp$($sa[i],sa[i$ - $1]$)\uff0c\u5373\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u4e0e\u6392\u540d\u4e3ai\u22121\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff1b\n\nH[i]\uff1aheight[rak[i]]\uff0c\u5373i\u53f7\u540e\u7f00\u4e0e\u5b83\u524d\u4e00\u540d\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff1b\n\n\u91cd\u8981\u6027\u8d28\uff1a$H[i] \\geqslant H[i - 1] - 1$\uff1b\n\n\u901a\u8fc7\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa$H[i]$\uff0c$k-1$\u540e\u4e00\u4f4d\u4f4d\u5339\u914d\u5373\u53ef\uff1b\n\n\u6c42\u51fa$height[i]$\uff1a\n\n```\nvoid geth() {\n    int j, k = 0;\n    for (ri i = 1; i <= n; ++i) {\n        if (k) --k;\n        j = sa[rk[i] - 1];\n        while (s[i + k] == s[j + k]) ++k;\n        h[rk[i]] = k;\n    }\n}\n```\n\n\u5173\u4e8eLCP\u7684\u51e0\u6761\u6027\u8d28\n\n\u663e\u800c\u6613\u89c1\u7684\n\n$LCP(i,j)=LCP(j,i)$\uff1b\n\n$LCP(i,i)=len(sa[i])=n-sa[i]+1$\uff1b\n\n**\u6c42\u89e3\u7684\u91cd\u8981\u6027\u8d28\uff1a**\n\n$LCP(i,k)=min(height[j])$\n\n\u5bf9\u4e8e$i+1<=j<=k$\uff1b\n\n## \u7ed9\u5b9a\u5b57\u7b26\u4e32 S\uff0c\u6c42\u5b83\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\n\n![](https://cdn.luogu.com.cn/upload/pic/23968.png)\n\n### \u533a\u95f4\uff1f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4$[l,r]$\u5185\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\uff1b\n\n### HDU4622 \u4ee3\u7801\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<deque>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof (x))\n#define mem1(x) memset((x),0x3f,sizeof (x))\n#define pb push_back\n#define gc getchar\ntemplate<class T>void in(T &x)\n{\n\tx = 0; bool f = 0; char c = gc();\n\twhile (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n\twhile ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n\tif (f) x = -x;\n}\n#undef gc\n#define N 2010\nchar s[N];\nint n, m;\n// \u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u6876\u7684\u5927\u5c0f\nint sa[N], rk[N];\n// SA:\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\n// rank:\u4f4d\u7f6e\u4e3ai\u7684\u540e\u7f00\u7684\u6392\u540d\nint tp[N], tax[N];\n// tp:\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\uff0c\n//    \u8fd8\u88ab\u7528\u4f5crank\u7684\u6682\u5b58\n// tax:\u6bcf\u4e2a\u6392\u540d\u5bf9\u5e94\u7684\u540e\u7f00\u6570\u91cf\uff0c\u7528\u4f5c\u6876\nvoid rsort() { // \u57fa\u6570\u6392\u5e8f\n\tfor (ri i = 0; i <= m; ++i) tax[i] = 0;\n\tfor (ri i = 1; i <= n; ++i) ++tax[rk[i]];\n\tfor (ri i = 1; i <= m; ++i) tax[i] += tax[i - 1];\n\tfor (ri i = n; i >= 1; --i) sa[tax[rk[tp[i]]]--] = tp[i];\n}\nvoid ssort() {\n\tfor (ri i = 1; i <= n; ++i) rk[i] = s[i], tp[i] = i;\n\trsort();\n\tfor (ri w = 1, p = 0; p < n && w <= n; m = p, w <<= 1) {\n\t\tp = 0;\n\t\tfor (ri i = n - w + 1; i <= n; ++i) tp[++p] = i;\n\t\tfor (ri i = 1; i <= n; ++i)\n\t\t\tif (sa[i] > w) tp[++p] = sa[i] - w;\n\t\trsort();\n\t\tswap(rk, tp);\n\t\trk[sa[1]] = p = 1;\n\t\tfor (ri i = 2; i <= n; ++i)\n\t\t\trk[sa[i]] = (tp[sa[i]] == tp[sa[i - 1]] && tp[sa[i] + w] == tp[sa[i - 1] + w])\n\t\t\t            ? p : ++p;\n\t}\n}\nint h[N];\nvoid geth() {\n\tint j, k = 0;\n\tfor (ri i = 1; i <= n; ++i) {\n\t\tif (k) --k;\n\t\tj = sa[rk[i] - 1];\n\t\twhile (s[i + k] == s[j + k]) ++k;\n\t\th[rk[i]] = k;\n\t}\n}\nint st[N][12];\nvoid init() {\n\t// mem1(st);\n\tfor (ri i = 1; i <= n; ++i)st[i][0] = h[i];\n\tfor (ri j = 1; (1 << j) <= n; ++j) {\n\t\tfor (ri i = 1; i + (1 << j) - 1 <= n; ++i) {\n\t\t\tst[i][j] = min(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);\n\t\t}\n\t}\n}\nil int qmin(int l, int r) {  // \u7eafST\u8868\u6a21\u677f\uff0c\u6c42[l,r]\u6700\u5c0f\u503c\n\tint k = 0, len = r - l + 1;\n\twhile ((1 << (k + 1)) <= len) ++k;\n\treturn min(st[l][k], st[r - (1 << k) + 1][k]);\n}\nil int lcp(int l, int r) {  // \u5229\u7528\u6570\u7ec4H\u7684\u6027\u8d28\uff0c\u6c42\u51fa\u6392\u540d\u4e3al\u7684\u540e\u7f00\u4e0e\u6392\u540d\u4e3ar\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\n\tif (l > r) swap(l, r);  // \u5f88\u91cd\u8981\uff0c\u6839\u636e\u7b97\u6cd5\uff0cl\uff0cr\u5927\u5c0f\u4e0d\u786e\u5b9a\n\treturn qmin(l + 1, r);  // \u6392\u540dl\uff0cr\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3amin(h[l+1~j])\n}\nil int query(int l, int r) {\n\tvector<int>pos;\n\tfor (ri i = 1; i <= n; ++i)\n\t\tif (l <= sa[i] && sa[i] <= r) pos.pb(sa[i]);  // pos\u5b58\u653e\u5728[l,r]\u4e4b\u95f4\u7684\u540e\u7f00\n\tint sum = r - pos[0] + 1, tmp = sum; // sum\u4e3a\u7b54\u6848\n\t// tmp\uff1a\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e0e\u4e4b\u524d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6\n\tfor (ri i = 1; i < pos.size(); ++i) {\n\t\tint k = lcp(rk[pos[i]], rk[pos[i - 1]]), len = r - pos[i] + 1;\n\t\t// k\uff1a\u5f53\u524d\u5b57\u7b26\u4e32\u4e0e\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\n\t\ttmp = min(tmp, k);\n\t\t// \u5982\u679ck<tmp\uff0c\u4e0b\u4e00\u4e2atmp\u4e00\u5b9a\u4e3ak\n\t\ttmp = max(tmp, min(k, r - pos[i - 1] + 1));\n\t\t// \u5982\u679ck>tmp\uff0c\u4e0b\u4e00\u4e2atmp\u53ef\u80fd\u4f1a\u4e3ak\uff0c\u4f46\u662f\u4e0d\u80fd\u8d85\u8fc7\u4e0a\u4e00\u4e2a\u540e\u7f00\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u4e0d\u7136\u4e0d\u7b26\u5408\u89c4\u5b9a\n\t\tsum += len - min(tmp, len);\n\t\t// \u7b54\u6848\u52a0\u4e0a\u5f53\u524d\u540e\u7f00\u7684\u4e0d\u540c\u7684\u524d\u7f00\n\t}\n\treturn sum;\n}\nint t, q, l, r;\nsigned main() {\n\tin(t);\n\twhile (t--) {\n\t\tscanf(\"%s\", s + 1);\n\t\tn = strlen(s + 1);\n\t\tm = 127;\n\t\tssort();\n\t\tgeth();  // GET Height\n\t\tinit();  // init ST\n\t\tin(q);\n\t\twhile (q--) {\n\t\t\tin(l), in(r);\n\t\t\tprintf(\"%d\\n\", query(l, r));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531836420,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u540e\u7f00\u6570\u7ec4-\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "\u6765\u4e00\u53d1\u540e\u7f00\u81ea\u52a8\u673a\u7684\u9898\u89e3\u3002\u3002\n\n\n\u540e\u7f00\u81ea\u52a8\u673a\u600e\u4e48\u540e\u7f00\u6392\u5e8f\u5462\uff1f\u52a0\u5165\u8282\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u4ee3\u8868\u540e\u7f00\u3002\u5efa\u5b8c\u4ee5\u540e\u91cd\u5efa\u4e00\u4e0b\u540e\u7f00\u6811\u5728\u4e0a\u9762dfs\u5c31\u53ef\u4ee5\u4e86= =\uff08\u6ce8\u610f\u91cd\u5efa\u7684\u65f6\u5019\u662f\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u4e0d\u662f\u62d3\u6251\u5e8f\n\n\n\u8fd9\u6837\u7684\u505a\u6cd5\u65f6\u95f4\u6bd4\u8f83\u4f18\u8d8a\uff0c\u662f$O(n)$\u7684\u3002\u4f46\u662f\u6ce8\u610f\u8fd9\u91cc\u7684\u5b57\u7b26\u96c6\u662f**62**\uff0c\u957f\u5ea6\u662f**1e6**\uff0c\u8fd9\u6837\u6570\u7ec4\u5c31\u5f00\u4e0d\u4e0b\u4e86\u3002\u3002(\u7b97\u4e86\u4e00\u4e0b\u6700\u540e\u662f544mb)\n\n\n\u6240\u4ee5\u513f\u5b50\u7684\u8f6c\u79fb\u8981\u786c\u5957\u4e00\u5c42map\u3002\u3002\u6ca1\u60f3\u5230\u8fd8\u80fd\u5361\u8fc7\u53bb\uff0c\u6700\u540e\u65f6\u95f44.7s\n\n\n\u5047\u5982\u60f3\u5b66\u4e60\u540e\u7f00\u81ea\u52a8\u673a\u7684\uff1a[blog](http://www.yhzq-blog.cc/\u540e\u7f00\u81ea\u52a8\u673a\u5b66\u4e60\u603b\u7ed3/)\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#define N 1000010\nusing namespace std;\nint dis[N<<1],fa[N<<1],pos[N<<1],sa[N<<1],ri[N<<1],up[N<<1],last=1,sz=1,root=1,len,cnt;\nchar s[N];\nmap <int,int> ch[N<<1];\nstruct edge{int to,next;}e[N<<1];\nint st[N<<1],tot;\nint ge(char ch)\n{\n    if (ch<='9' && ch>='0') return ch-'0';\n    if (ch<='Z' && ch>='A') return ch-'A'+10;\n    if (ch<='z' && ch>='a') return ch-'a'+36;\n    return ch;\n}\nvoid add(int x,int y)\n{\n    e[++tot].next=st[x];\n    e[tot].to=y,st[x]=tot;\n}\nvoid insert(int x,int y)\n{\n    int now=++sz,pre=last;last=now;\n    ri[now]=dis[now]=dis[pre]+1,pos[now]=y;\n    for (;pre && !ch[pre][x];pre=fa[pre]) ch[pre][x]=now;\n    if (!pre) fa[now]=root;\n    else\n    {\n        int q=ch[pre][x];\n        if (dis[q]==dis[pre]+1)\n            fa[now]=q;\n        else\n        {\n            int nows=++sz;dis[nows]=dis[pre]+1;\n            ch[nows]=ch[q];\n            fa[nows]=fa[q],fa[now]=fa[q]=nows,ri[nows]=ri[q];\n            for (;pre && ch[pre][x]==q;pre=fa[pre]) ch[pre][x]=nows;\n        }\n    }\n}\nint ton[70],ti[N<<1];\nvoid work()\n{\n    for (int i=1;i<=sz;i++) up[i]=ge(s[len+1-ri[i]+dis[fa[i]]]),ton[up[i]]++;\n    for (int i=1;i<=64;i++) ton[i]+=ton[i-1];\n    for (int i=1;i<=sz;i++) ti[ton[up[i]]--]=i;\n    for (int i=sz;i;i--) add(fa[ti[i]],ti[i]);\n}\nvoid dfs(int now)\n{\n    if (pos[now]) sa[++cnt]=pos[now];\n    for (int i=st[now];i;i=e[i].next)\n        dfs(e[i].to);\n}\nmain()\n{\n    scanf(\"%s\",s+1),len=strlen(s+1);\n    for (int i=len;i;i--) \n        insert(ge(s[i]),i);\n    work();dfs(root);\n    for (int i=1;i<=cnt;i++) printf(\"%d \",sa[i]);\n}\n```",
        "postTime": 1514515468,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u5b89\u5229\u6211\u7684\u535a\u5ba2https://vcode28629.coding.me/SA-IS/\n\n\u5e38\u89c1\u7684\u540e\u7f00\u6570\u7ec4\u6c42\u6cd5\u4e3a$\\Theta(nlogn)$\u7684\u500d\u589e\u6c42\u6cd5\uff0c\u4e5f\u6709DC3\u6216\u540e\u7f00\u81ea\u52a8\u673a$\\Theta(n)$\u6784\u9020\u7684\u3002\u6211\u4eec\u4eca\u5929\u8981\u8bb2\u7684\u4e5f\u662f\u4e00\u79cd$\\Theta(n)$\u6784\u9020\u540e\u7f00\u6570\u7ec4\u7684\u7b97\u6cd5\uff0c**SA-IS(SuffixArray-InducedSort)**\u3002\n\n\u5728\u8bb2\u89e3SA-IS\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u4e00\u4e9b\u6982\u5ff5\u3001\u5b9a\u4e49\u3001\u4ee5\u53ca\u6027\u8d28\u3002\n\n# \u540e\u7f00\u6570\u7ec4\n\n\u5bf9\u4e8e\u540e\u7f00\u6570\u7ec4\u548c\u5b57\u7b26\u4e32\u7684\u5b9a\u4e49\u4e0e\u6982\u5ff5\u5728\u6b64\u4e0d\u505a\u8fc7\u4e8e\u590d\u6742\u7684\u8bb2\u89e3\uff0c\u53ea\u7b80\u8981\u8bf4\u660e\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n1. \u4efb\u610f\u53ef\u6bd4\u8f83\u5927\u5c0f\u7684\u5143\u7d20\u6784\u6210\u7684\u5e8f\u5217\u53eb\u505a\u5b57\u7b26\u4e32\uff0c\u8bb0\u4e3a$str$\u3002\n2. $str$\u4ece\u4e0b\u6807$i$\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u5b50\u4e32\u53eb$str$\u7684\u540e\u7f00\uff0c\u8bb0\u4e3a$suffix(i)$\u3002\u4e00\u4e2a\u957f\u5ea6\u4e3a$len$\u7684\u5b57\u7b26\u4e32\u6709$len$\u4e2a\u540e\u7f00\u3002\n3. \u540e\u7f00\u6570\u7ec4$sa[i]$\u8868\u793a\u5c06$str$\u7684\u6240\u6709\u540e\u7f00\u6392\u5e8f\u540e\uff0c\u7b2c$i$\u5c0f\u7684\u540e\u7f00\u5728\u539f\u4e32\u4e2d\u7684\u4e0b\u6807\u3002\n4. \u540d\u6b21\u6570\u7ec4$rank[]$\u4e0e\u9ad8\u5ea6\u6570\u7ec4$height[]$\u4e0d\u662f\u672c\u6b21\u8bb2\u89e3\u91cd\u70b9\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5bf9\u5b57\u7b26\u4e32\u7ed3\u5c3e\u589e\u52a0\u4e00\u4e2a\u7a7a\u5b57\u7b26\uff08\u5373\u5c06\u672b\u5c3e\u7684$'\\backslash0'$\u770b\u4f5c\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\uff0c\u4e0b\u6587\u7528$\\#$\u8868\u793a\u7a7a\u5b57\u7b26\uff09\uff0c\u6240\u4ee5\u4ee4$len = strlen(str) + 1;$\n\n# \u540e\u7f00\u7c7b\u578b\n\n## $L-type$\u4e0e$S-type$\n\n\u6211\u4eec\u5c06\u540e\u7f00\u5206\u4e3a\u4e24\u4e2a\u7c7b\u578b\uff0c$L$\u578b\u548c$S$\u578b\u3002$L$\u578b\u8868\u793a\u6b64\u540e\u7f00$suffix(i)$\u6bd4$suffix(i+1)$\u5927\uff0c$S$\u578b\u8868\u793a\u6b64\u540e\u7f00$suffix(i)$\u6bd4$suffix(i+1)$\u5c0f\u3002\u7279\u6b8a\u7684\uff0c\u672b\u5c3e\u7684\u7a7a\u540e\u7f00`'\\0'`\u4e3a$S$\u578b\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n\u5bf9\u4e8e\u5b57\u7b26\u4e32`AGATGAGATACGCGGT`\uff0c\u540e\u7f00\u7c7b\u578b\u662f\u8fd9\u6837\u7684\uff1a\n\n| \u4e0b\u6807 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| \u5b57\u7b26 | A | G | A | T | G | A | G | A | T | A | C | G | C | G | G | T | # |\n| \u540e\u7f00\u7c7b\u578b | S | L | S | L | L | S | L | S | L | S | S | L | S | S | S | L | S |\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5982\u4e0b\u65b9\u6cd5$\\Theta(n)$\u65f6\u95f4\u5185\u6c42\u51fa\u5b83\u7684\u6240\u6709\u540e\u7f00\u7684\u540e\u7f00\u7c7b\u578b\uff1a\n\n```cpp\ntype[len - 1] = S;\nfor(int i = len - 2; i >= 0; --i) {\n  if(str[i] > str[i + 1]) type[i] = L;\n  if(str[i] < str[i + 1]) type[i] = S;\n  if(str[i] == str[i + 1]) type[i] = type[i + 1];\n}\n```\n\n\u5bf9\u4e8e$str[i]$\u4e0e$str[i+1]$\u4e0d\u4e00\u81f4\u7684\u5730\u65b9\uff0c\u6b63\u786e\u6027\u663e\u7136\u3002\u5bf9\u4e8e$str[i]==str[i+1]$\u7684\u65f6\u5019\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a\n\n- \u8bbe$suffix(i)$\u4e3a$aaX$\uff0c\u5219$suffix(i+1)$\u4e3a$aX$\u3002\n- $a=a$\uff0c\u6240\u4ee5\u6bd4\u8f83$aX$\u4e0e$X$\uff0c$aX$\u4e0e$X$\u5927\u5c0f\u5173\u7cfb\u5373\u4e3a$type[i+1]$\u3002\n\n**\u5f15\u74061\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u540e\u7f00$A$\u4e0e$B$\uff0c\u82e5$A[0]=B[0]$\u4e14$A$\u662f$L$\u578b\uff0c$B$\u662f$S$\u578b\uff0c\u5219$A<B$**\n\n\u8bc1\u660e\uff1a\u8bbe$A=abX$\uff0c$B=acY$\u3002\n\n\u82e5$a\\not=b$\u4e14$a\\not=c$\uff0c\u5219$b<a<c$\uff0c\u6240\u4ee5$A<B$\u3002\n\n\u82e5$a=b$\u4e14$a\\not=c$\uff0c\u5219\u6bd4\u8f83$aX$\u4e0e$cY$\uff0c$a<c$\uff0c\u6240\u4ee5$A<B$\u3002\n\n\u82e5$a\\not=b$\u4e14$a=c$\uff0c\u5219\u6bd4\u8f83$bX$\u4e0e$aY$\uff0c$b<a$\uff0c\u6240\u4ee5$A<B$\u3002\n\n\u82e5$a=b$\u4e14$a=c$\uff0c\u5219\u6bd4\u8f83$aX$\u4e0e$aY$\uff0c\u8f6c\u5316\u4e3a\u524d\u4e09\u79cd\u60c5\u51b5\u3002\n\n## $LMS-type$\n\n$LMS$\u7c7b\u578b\uff08LeftMostS-type\uff0c\u4e0b\u7b80\u79f0$*$\u578b\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684$S$\u578b\uff0c\u5b83\u7684\u8981\u6c42\u662f\u5b83\u7684\u5de6\u8fb9\u5fc5\u987b\u662f$L$\u578b\uff08\u6240\u4ee5$\\#$\u4e00\u5b9a\u4f1a\u662f$LMS$\u7c7b\u578b\uff09\u3002\n\n| \u4e0b\u6807 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| \u5b57\u7b26 | A | G | A | T | G | A | G | A | T | A | C | G | C | G | G | T | # |\n| \u540e\u7f00\u7c7b\u578b | S | L | S | L | L | S | L | S | L | S | S | L | S | S | S | L | S |\n| LMS |   |   | * |   |   | * |   | * |   | * |   |   | * |   |   |   | * |\n\n\u6211\u4eec\u53ef\u4ee5$\\Theta(n)$\u65f6\u95f4\u5185\u6c42\u51fa\u6240\u6709$*$\u578b\uff1a\n\n```cpp\nbool isLMS(int loc) {\n  if(loc <= 0) return false;\n  if(type[loc] != S) return false;\n  if(type[loc - 1] != L) return false;\n  return true;\n}\n\nint LMSSize = 0;\nfor(int i = 0; i < len; ++i) {\n  if(!isLMS(type, i)) continue;\n  LMS[LMSSize++] = i;\n}\n```\n\n\u4e00\u4e2a\u7c7b\u578b\u4e3a$*$\u7684\u5b57\u7b26\u53eb$LMS$\u5b57\u7b26\uff0c\u4e24\u4e2a\u76f8\u90bb$LMS$\u5b57\u7b26\u6240\u5939\u7684\u5b50\u4e32\uff08\u5305\u542b\u8fd9\u4e24\u4e2a\u5b57\u7b26\uff09\u53eb$LMS$\u5b50\u4e32\uff0c\u4e00\u4e2a$LMS$\u5b57\u7b26\u5f00\u59cb\u7684\u540e\u7f00\u53eb$LMS$\u540e\u7f00\u3002\u7279\u6b8a\u7684\uff0c$\\#$\u4e5f\u662f$LMS$\u5b50\u4e32\u3002\n\n\u5bf9\u4e8e$LMS$\u5b50\u4e32\u7684\u6bd4\u8f83\u6709\u7279\u6b8a\u7ea6\u5b9a\uff0c\u4e0d\u5e94\u8be5\u53ea\u6bd4\u8f83\u5b57\u7b26\u5927\u5c0f\uff0c\u4e5f\u9700\u8981\u6bd4\u8f83\u7c7b\u578b\u3002\u53ea\u6709\u5f53\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e0e\u5176\u540e\u7f00\u7c7b\u578b\u90fd\u76f8\u540c\u65f6\uff0c\u8fd9\u4e24\u4e2a$LMS$\u5b50\u4e32\u624d\u88ab\u79f0\u4e3a\u662f\u76f8\u540c\u7684\u3002\n\n# \u8bf1\u5bfc\u6392\u5e8f(induced sort)\n\nSA-IS\u7684\u4e3b\u8981\u601d\u60f3\u662f\u5229\u7528\u6392\u5e8f\u597d\u7684$LMS$\u540e\u7f00\u8fdb\u884c\u8bf1\u5bfc\u6392\u5e8f\uff0c\u5f97\u51fa\u540e\u7f00\u6570\u7ec4\u3002\u5173$LMS$\u540e\u7f00\u7684\u6392\u5e8f\u6211\u4eec\u4e00\u4f1a\u518d\u8bb2\uff0c\u73b0\u5728\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5bf9\u5176\u6392\u597d\u5e8f\u4e86\uff0c\u5b58\u5728\u6570\u7ec4$LMS$\u91cc\uff1a\n\n| \u4e0b\u6807 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| \u5b57\u7b26 | A | G | A | T | G | A | G | A | T | A | C | G | C | G | G | T | # |\n| |   |   | * |   |   | * |   | * |   | * |   |   | * |   |   |   | * |\n| LMS | 16 | 9 | 5 | 7 | 2 | 12 |\n\n\u8bf1\u5bfc\u6392\u5e8f\u5229\u7528\u4e86\u6876\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u8bb0\u5f55\u6bcf\u79cd\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7136\u540e\u653e\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002\n\n\u663e\u7136\uff0c\u540e\u7f00\u6570\u7ec4\u4e2d\u9996\u5b57\u6bcd\u76f8\u540c\u7684\u540e\u7f00\u5728\u540c\u4e00\u6bb5\u533a\u57df\u3002\n\n\u6839\u636e\u5f15\u74061\uff0c\u540c\u79cd\u9996\u5b57\u6bcd\u5f00\u5934\u7684\u540e\u7f00\uff0c\u7c7b\u578b\u76f8\u540c\u7684\u5728\u540c\u4e00\u6bb5\u533a\u57df\uff0c\u4e14$L$\u578b\u5728$S$\u578b\u524d\u9762\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a\n\n| \u4e0b\u6807 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| \u6876 | # | A | A | A | A | A | C | C | G | G | G | G | G | G | T | T | T |\n| type | S | S | S | S | S | S | S | S | L | L | L | L | S | S | L | L | L |\n\n\u8bf1\u5bfc\u6392\u5e8f\u5927\u81f4\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a\n\n1. \u7528\u6876\u6392\u5e8f\u7684\u601d\u60f3\u8bb0\u5f55\u6bcf\u79cd\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u4e3a\u6bcf\u79cd\u5b57\u7b26\u5728sa\u4e2d\u5206\u914d\u76f8\u5e94\u7684\u7a7a\u95f4\uff08\u5982\u4e0a\u8868\uff09\uff0c\u521d\u59cb\u5316\u4e3a$-1$\u3002\n2. \u9006\u5e8f\u626b\u63cf$LMS$\uff0c\u628a$LMS$\u540e\u7f00\u9006\u5e8f\u4f9d\u6b21\u653e\u5165$sa$\u4e2d\u5bf9\u5e94\u7684$S$\u578b\u6876\u672b\u5c3e\u3002\n3. \u6b63\u5e8f\u626b\u63cf$sa$\uff0c\u82e5$type[sa[i]-1]=L$\uff0c\u5219\u5c06$sa[i]-1$\u653e\u5165\u5bf9\u5e94\u7684$L$\u578b\u6876\u4e2d\u3002\n4. \u9006\u5e8f\u626b\u63cf$sa$\uff0c\u82e5$type[sa[i]-1]=S$\uff0c\u5219\u5c06$sa[i]-1$\u653e\u5165\u5bf9\u5e94\u7684$S$\u578b\u6876\u4e2d\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n/*\nstr \u5b57\u7b26\u4e32\nlen \u5b57\u7b26\u4e32\u957f\u5ea6\nsigma \u5b57\u7b26\u96c6\u5927\u5c0f\ntype \u7c7b\u578b\u6570\u7ec4\nLMS LMS\u6570\u7ec4\nLMSSize LMS\u6570\u7ec4\u5927\u5c0f\n\u5168\u5c40\u6570\u7ec4sa \u540e\u7f00\u6570\u7ec4\n*/\ntemplate<typename T>\nvoid inducedSort(T str, int len, int sigma, type_t *type, int *LMS, int LMSSize) {\n  int *bucket = new int[sigma];\n  //bucket \u7528\u4e8e\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\n  int *buf = new int[sigma];\n  //buf \u7528\u4e8e\u5206\u914dsa\u4e2d\u7684\u5185\u5b58\n  memset(sa, -1, sizeof(sa[0]) * len);\n  memset(bucket, 0, sizeof(bucket[0]) * sigma);\n  for(int i = 0; i < len; ++i) {\n    ++bucket[str[i]];\n  }\n  buf[0] = bucket[0];\n  for(int i = 1; i < sigma; ++i) {\n    buf[i] = buf[i - 1] + bucket[i];\n  }\n  //\u6b64\u65f6buf[c]\u8868\u793a\u5b57\u7b26c\u5728sa\u4e2d\u5bf9\u5e94\u5185\u5b58\u533a\u7684\u6700\u540e\u4e00\u4f4d\u7684\u4e0b\u6807+1\n\n  //\u628aLMS\u540e\u7f00\u9006\u5e8f\u4f9d\u6b21\u653e\u5165sa\u4e2d\u5bf9\u5e94\u7684S\u578b\u6876\u672b\u5c3e\n  for(int i = LMSSize - 1; i >= 0; --i) {\n    sa[--buf[str[LMS[i]]]] = LMS[i];\n  }\n\n  //\u91cd\u7f6e\u5185\u5b58\u533a\u57df\n  buf[0] = 0;\n  for(int i = 1; i < sigma; ++i) {\n    buf[i] = buf[i - 1] + bucket[i - 1];\n  }\n  //\u6b64\u65f6buf[c]\u8868\u793a\u5b57\u7b26c\u5728sa\u4e2d\u5bf9\u5e94\u5185\u5b58\u533a\u7684\u7b2c\u4e00\u4f4d\u7684\u4e0b\u6807\n\n  //\u6b63\u5e8f\u626b\u63cfsa\n  for(int i = 0; i < len; ++i) {\n    if(sa[i] <= 0) continue;\n    if(type[sa[i] - 1] != L) continue;\n    //\u5c06sa[i]-1\u653e\u5165\u5bf9\u5e94\u7684L\u578b\u6876\u4e2d\n    sa[buf[str[sa[i] - 1]]++] = sa[i] - 1;\n  }\n  \n  //\u91cd\u7f6e\u5185\u5b58\u533a\u57df\n  buf[0] = bucket[0];\n  for(int i = 1; i < sigma; ++i) {\n    buf[i] = buf[i - 1] + bucket[i];\n  } \n  //\u6b64\u65f6buf[c]\u8868\u793a\u5b57\u7b26c\u5728sa\u4e2d\u5bf9\u5e94\u5185\u5b58\u533a\u7684\u6700\u540e\u4e00\u4f4d\u7684\u4e0b\u6807+1\n\n  //\u9006\u5e8f\u626b\u63cfsa\n  for(int i = len - 1; i >= 0; --i) {\n    if(sa[i] <= 0) continue;\n    if(type[sa[i] - 1] != S) continue;\n    //\u5c06sa[i]-1\u653e\u5165\u5bf9\u5e94\u7684S\u578b\u6876\u4e2d\n    sa[--buf[str[sa[i] - 1]]] = sa[i] - 1;\n  }\n\n  //\u5185\u5b58\u56de\u6536\n  delete[] bucket;\n  delete[] buf;\n  return;\n}\n```\n\n\u8ba9\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u8fd9\u6837\u505a\u7684\u6b63\u786e\u6027\uff1a\n\n\u9996\u5148\u9006\u5e8f\u626b\u63cf$LMS$\uff0c\u628a$LMS$\u540e\u7f00\u9006\u5e8f\u4f9d\u6b21\u653e\u5165$sa$\u4e2d\u5bf9\u5e94\u7684$S$\u578b\u6876\u672b\u5c3e\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u4fdd\u8bc1$LMS$**\u540e\u7f00\u5728\u540e\u7f00\u6570\u7ec4\u4e2d\u4e5f\u662f\u6709\u5e8f\u7684**\u3002\n\n\u6b63\u5e8f\u626b\u63cf$sa$\uff0c\u82e5$type[sa[i]-1]=L$\uff0c\u5219\u5c06$sa[i]-1$\u653e\u5165\u5bf9\u5e94\u7684$L$\u578b\u6876\u4e2d\u3002\n\n\u8ba9\u6211\u4eec\u56de\u5fc6$LMS$\u7684\u610f\u4e49\uff1a$LeftMostS-type$\uff0c\u4e5f\u5c31\u662f\u8bf4$LMS$\u7684\u5de6\u4fa7\u4e00\u5b9a\u662f\u8fde\u7eed\u7684$L$\u578b\uff0c\u5e76\u4e14\u6240\u6709\u8fde\u7eed\u7684$L$\u578b\u5b57\u7b26\u53f3\u4fa7\u90fd\u6709\u4e00\u4e2a$LMS$\u3002\n\n\u7136\u540e\uff0c\u7531\u4e8e\u53ea\u67e5\u770b$L$\u578b\uff0c\u800c$L$\u578b\u7684\u540e\u7f00\u5fc5\u5b9a\u6bd4\u4e0b\u4e00\u4f4d\u8981\u5927\uff0c\u6240\u4ee5\u653e\u5165$sa$\u4e2d\u7684\u4f4d\u7f6e\u4e00\u5b9a\u5728\u5f53\u524d\u4f4d\u7f6e$i$\u4e4b\u540e\u3002\n\n\u7531\u6b64\u53ef\u77e5\uff0c$L$\u578b\u540e\u7f00\u4e0d\u91cd\u4e0d\u6f0f\u653e\u5165\u4e86$sa$\u6570\u7ec4\u91cc\u3002\n\n\u90a3\u4e48L\u578b\u540e\u7f00\u662f\u5426\u6b63\u786e\u653e\u5165\u4e86\u5e94\u5728\u7684\u4f4d\u7f6e\u5462\uff1f\u6211\u4eec\u7b80\u5355\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u5047\u8bbe\u4e24\u4e2a\u5df2\u77e5\u5927\u5c0f\u5173\u7cfb\u7684\u540e\u7f00$X<Y$\uff0c\u8ba8\u8bba$aX$\u4e0e$bY$\u7684\u5927\u5c0f\u5173\u7cfb\uff1a\n\n1. \u5f53$a\\not=b$\u65f6\uff0c\u7531\u4e8e$aX$\u4e0e$bY$\u5404\u81ea\u653e\u5165\u76f8\u5e94\u7684\u6876\u91cc\uff0c\u4e92\u4e0d\u5e72\u6270\uff0c\u6240\u4ee5\u6b63\u786e\u6392\u5e8f\u3002\n2. \u5f53$a=b$\u65f6\uff0c$X<Y$\uff0c\u6240\u4ee5$aX<bY$\u3002\u7531\u4e8e\u4ece\u5de6\u5411\u53f3\u626b\u63cf$sa$\u6570\u7ec4\uff0c\u5148\u626b\u63cf\u5230$X$\uff0c\u6240\u4ee5\u5148\u7f6e\u5165$aX$\uff0c\u6b63\u786e\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e$S$\u578b\u7684\u8bc1\u660e\u4e0e$L$\u578b\u7c7b\u4f3c\u3002\u989d\u5916\u8bf4\u4e00\u53e5\u5728\u4e8e\u6b64\u65f6$LMS$\u7684\u610f\u4e49\u5df2\u7ecf\u6d88\u5931\uff0c\u53ef\u4ee5\u770b\u4f5c\u666e\u901a\u7684$S$\u578b\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u8be5\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u6570\u7ec4\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u521a\u624d\u88ab\u6211\u4eec\u8df3\u8fc7\u53bb\u4e86\uff1aLMS\u540e\u7f00\u7684\u6392\u5e8f\u3002\n\n# $LMS$\u540e\u7f00\u6392\u5e8f\n\n\u5728\u7ed9\u6240\u6709$LMS$\u540e\u7f00\u6392\u5e8f\u4e4b\u524d\uff0c\u6211\u4eec\u4e3a\u6240\u6709$LMS$\u5b50\u4e32\u6309\u5927\u5c0f\u79bb\u6563\u5316\uff0c\u5e76\u5b58\u5165$s1$\u4e2d\u3002\n\n| \u4e0b\u6807 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 |\n| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| \u5b57\u7b26 | A | G | A | T | G | A | G | A | T | A | C | G | C | G | G | T | # |\n| |   |   | * |   |   | * |   | * |   | * |   |   | * |   |   |   | * |\n| LMS\u5b50\u4e32 | ATGA | AGA | ATA | ACGC | CGGT# | # |\n| s1 | 4 | 2 | 3 | 1 | 5 | 0 |\n\n**\u5f15\u74062\uff1a$s1$\u4e2d\u4e24\u4e2a\u540e\u7f00\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5c31\u662f$str$\u4e2d\u5bf9\u5e94\u7684$*$\u578b\u540e\u7f00\u7684\u5927\u5c0f\u5173\u7cfb\u3002**\n\n\u8bc1\u660e\uff1a~~\u663e\u7136\u3002~~ \u6211\u4eec\u53ef\u4ee5\u5c06$s1$\u89c6\u4e3a\u662f\u5c06$*$\u540e\u7f00\u4e2d\u4e0d\u91cd\u5408\u7684\u90e8\u5206\u8fdb\u884c\u5207\u5272\uff0c\u6240\u4ee5$s1$\u7684\u540e\u7f00\u5c31\u610f\u5473\u7740$LMS$\u540e\u7f00\uff0c$s1$\u4e2d\u4e24\u4e2a\u540e\u7f00\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5c31\u662f$str$\u4e2d\u5bf9\u5e94\u7684$*$\u578b\u540e\u7f00\u7684\u5927\u5c0f\u5173\u7cfb\u3002\n\n\u5982\u679c\u5411\u672c\u4f8b\u8fd9\u6837$s1$\u4e2d\u65e0\u76f8\u540c\u7684\u6570\u503c\uff0c\u90a3\u4e48$s1$\u4e2d\u540e\u7f00\u5927\u5c0f\u5173\u7cfb\u662f\u663e\u7136\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u8868\u793a\u51fa\u6765\u3002\n\n\u5982\u679c$s1$\u4e2d\u6709\u76f8\u540c\u6570\u503c\uff08\u5373\u5b58\u5728\u76f8\u540c\u7684$LMS$\u5b50\u4e32\uff09\uff0c\u5219\u53ef\u9012\u5f52\u8ba1\u7b97$s1$\u7684\u540e\u7f00\u5927\u5c0f\u3002\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u5982\u4f55\u4e3a$LMS$\u5b50\u4e32\u79bb\u6563\u5316\uff08\u6392\u5e8f\uff09\uff1a\n\n# $LMS$\u5b50\u4e32\u7684\u6392\u5e8f\n\n\u6211\u4eec\u4f9d\u7136\u4f7f\u7528\u8bf1\u5bfc\u6392\u5e8f\uff0c\u4e0d\u8fc7\u5f80\u91cc\u4f20\u7684LMS\u6570\u7ec4\u5e76\u4e0d\u662f\u6392\u597d\u5e8f\u7684\uff0c\u800c\u662f\u968f\u673a\u7684\uff08\u4efb\u610f\u987a\u5e8f\uff09\u3002\n\n\u5f85\u7b97\u6cd5\u5b8c\u6210\uff0c\u6211\u4eec\u83b7\u5f97\u7684$sa$\u6570\u7ec4\u4e2d\uff0c$LMS$\u5b50\u4e32\u4e4b\u95f4\u662f\u6392\u597d\u4e86\u5e8f\u7684\u3002\n\n\u8bc1\u660e\uff1a\n\n\u5bf9\u4e8e\u4efb\u610f\u540e\u7f00$suffix(i)$\uff0c\u672c\u6b21\u8bf1\u5bfc\u6392\u5e8f\u53ea\u8003\u8651\u4e0b\u6807$i$\u5f00\u59cb\u5230\u4e0b\u4e00\u4e2a$LMS$\u5b57\u7b26\u7684\u90e8\u5206\uff08\u79f0\u4e3a$LMS$\u524d\u7f00\uff09\u3002\u663e\u7136\u5bf9\u4e8e\u4efb\u610f$LMS$\u540e\u7f00\uff0c\u6709\u6548\u90e8\u5206\u53ea\u6709\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u653e\u5165\u6876\u4e2d\u540e\u81ea\u7136\u6709\u5e8f\u3002\u7531\u6b64\uff0c\u4e4b\u540e\u7684$L$\u4e0e$S$\u578b\u6392\u5e8f\u867d\u7136\u6574\u4f53\u540e\u7f00\u65e0\u5e8f\uff0c\u4f46\u53ea\u8003\u8651$LMS$\u524d\u7f00\u5219\u6709\u5e8f\uff0c\u6700\u7ec8\u7684$LMS$\u5b50\u4e32\u4e5f\u662f\u6709\u5e8f\u7684\u3002\n\n# \u590d\u6742\u5ea6\u5206\u6790\n\n\u81f3\u6b64\uff0cSA-IS\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u8ba9\u6211\u4eec\u5206\u6790\u4e0b\u5b83\u4e3a\u4ec0\u4e48\u662f$\\Theta(n)$\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\uff1a\n\n\u7531\u4e8eLMS\u5b57\u7b26\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u5c42SA-IS\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$T(n)$\uff0c\u5219\u6709\n\n$$\nT(n)=\\Theta(n)+T(n/2)\n\\\\T(n)=\\Theta(n)\n$$\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\u540c\u7406\u3002\n\n\u4ee3\u7801\uff1ahttps://paste.ubuntu.com/p/dP5B57mXHM/\n\n> \u53c2\u8003\u8d44\u6599\uff1a\n\n> [\u540e\u7f00\u6570\u7ec4\u53caSA-IS\u7b97\u6cd5\u5b66\u4e60\u7b14\u8bb0](https://blog.xehoth.cc/SA-IS/)\n\n> [\u540e\u7f00\u6570\u7ec4 SA-IS \u7b97\u6cd5\u5b66\u4e60\u5fc3\u5f97](https://zhuanlan.zhihu.com/p/39876310)\n\n> [A walk through the SA-IS Suffix Array Construction Algorithm](http://zork.net/~st/jottings/sais.html)\n",
        "postTime": 1535116598,
        "uid": 50165,
        "name": "VCode",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u540e\u7f00\u6392\u5e8f\u771f\u7684\u6ca1\u5565\u597d\u4ecb\u7ecd\u7684\u4e86\u2026\u2026\n\n\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u540e\u7f00\u6570\u7ec4\u2026\u2026\n\n\uff08\u5927\u4f6c\u4e09\u8fde.jpg\uff09\n\n\u53ef\u4ee5\u7528DC3\u6216\u8005\u500d\u589e\u6c42sa\uff0c\u524d\u8005\u662f  $O(n)$ \u7684\uff0c\u540e\u8005\u662f $O(nlogn)$ \u7684\n\n\u5f53\u7136\u4f60\u8bf4\u6211\u5389\u5bb3\uff0c\u6211\u7528\u540e\u7f00\u6811/\u540e\u7f00\u5e73\u8861\u6811/\u540e\u7f00\u81ea\u52a8\u673a \u4e5f\u80fd\u6c42sa\n\n\u8fd9\u4e2a\u561b\u2026\u2026\u600e\u4e48\u5f00\u5fc3\u600e\u4e48\u73a9\u662f\u5427\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000010\nusing namespace std;\nint t1[N],t2[N],sa[N],h[N],rk[N],c[10*N],a[N];\nchar s[N];\nint m,n;\nvoid calcsa(int n,int m){\n    int *x=t1,*y=t2,p=0,f=0;\n    for(int i=1;i<=m;i++)c[i]=0;\n    for(int i=1;i<=n;i++)c[x[i]=a[i]]++;\n    for(int i=1;i<=m;i++)c[i]+=c[i-1];\n    for(int i=n;i;i--)sa[c[x[i]]--]=i;\n    for(int i=1;i<=n&&p<=n;i<<=1){\n        p=0;\n        for(int j=n-i+1;j<=n;j++)y[++p]=j;\n        for(int j=1;j<=n;j++)if(sa[j]>i)y[++p]=sa[j]-i;\n        for(int j=1;j<=m;j++)c[j]=0;\n        for(int j=1;j<=n;j++)c[x[y[j]]]++;\n        for(int i=1;i<=m;i++)c[i]+=c[i-1];\n        for(int j=n;j;j--)sa[c[x[y[j]]]--]=y[j];\n        swap(x,y);x[sa[1]]=1;p=2;\n        for(int j=2;j<=n;j++)\n        x[sa[j]]=y[sa[j]]==y[sa[j-1]]&&y[sa[j]+i]==y[sa[j-1]+i]?p-1:p++;\n        m=p;\n    }\n    for(int i=1;i<=n;i++)rk[sa[i]]=i;\n    for(int i=1;i<=n;i++){\n        int j=sa[rk[i]-1];\n        if(f)f--;while(a[i+f]==a[j+f])f++;\n        h[rk[i]]=f;\n    }\n}\nint main(){\n    scanf(\"%s\",s);int len=strlen(s);\n    for(int i=0;i<len;i++)a[++n]=s[i]-' ';\n    calcsa(n,10000);\n    for(int i=1;i<=n;i++)printf(\"%d \",sa[i]);\n    return 0;\n}\n```",
        "postTime": 1498100298,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u672c\u6587\u91c7\u7528\u7684\u662f\u4f7f\u7528 SAM \u6c42 SA\u3002\r\n\r\n\u82e5\u60a8\u5bf9 SAM \u611f\u5174\u8da3\uff0c\u8fd9\u91cc\u5b89\u5229\u8fd9\u7bc7[\u6587\u7ae0](https://www.luogu.com.cn/blog/Wild-Donkey/hou-zhui-zi-dong-ji-suffix-automaton)\u3002\r\n\r\n\u867d\u7136\u8be5\u9898\u9898\u89e3\u4e2d\u786e\u5b9e\u6709\u51e0\u7bc7\u63d0\u5230\u8fc7\u5982\u4f55\u4f7f\u7528 SAM \u6c42 SA\uff0c\u4f46\u662f\u5747\u4e0d\u80fd\u5728 $128MB$ \u7684\u9650\u5236\u4e0b\u901a\u8fc7\u6b64\u9898\u3002\r\n\r\n\u6240\u4ee5\u672c\u6587\u7740\u91cd\u4ecb\u7ecd\u4e24\u70b9\uff1a\r\n\r\n$1$\u00b0 \u4f7f\u7528 SAM \u6c42\u540e\u7f00\u6392\u5e8f\r\n\r\n$2$\u00b0 **\u7a7a \u95f4 \u538b \u7f29**\r\n\r\n\u5176\u4e2d\uff0c\u7b2c\u4e8c\u70b9\u65e0\u8bba\u662f\u5728 SA \u7684\u9898\u89e3\u4e2d\uff0c\u8fd8\u662f\u5728 SAM \u7684\u9898\u89e3\u4e2d\uff0c\u5747\u6ca1\u6709\u8be6\u7ec6\u5730\u8bb2\u8fc7\u7a7a\u95f4\u538b\u7f29\u8fd9\u4e00\u95ee\u9898\u3002\r\n\r\n#Part 1\r\n----\r\n\r\n\u6839\u636e SAM \u7684\u6027\u8d28\uff0c\u6211\u4eec\u5efa\u51fa\u6765\u7684\u81ea\u52a8\u673a\u7684 fa \u8fb9\u6784\u6210\u4e00\u9897 parents \u6811\uff0c\u8fd9\u68f5\u6811\u7684\u53f6\u5b50\u8282\u70b9\u5373\u4e3a\u5b57\u7b26\u4e32\u524d\u7f00\u3002\r\n\r\n\u6240\u4ee5\u5f88\u81ea\u7136\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5012\u7740\u63d2\u5165\u5b57\u7b26\u4e32\uff0c\u8fd9\u6837\u53ef\u6784\u9020 parents \u6811\u5373\u4e3a\u540e\u7f00\u6811\u3002\r\n\r\n\u6240\u4ee5\u6c42\u540e\u7f00\u6392\u5e8f\u5df2\u7ecf\u88ab\u8f6c\u5316\u4e3a\u4e86\u5728\u540e\u7f00\u6811\u4e0a\u6c42\u6309\u5b57\u5178\u5e8f\u904d\u5386\u987a\u5e8f\u540e\u53f6\u5b50\u8282\u70b9\u8bbf\u95ee\u987a\u5e8f\u3002\r\n\r\n\u4f46\u662f\u6211\u4eec\u53c8\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5728\u540e\u7f00\u6811\u4e0a\u904d\u5386\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6700\u591a\u6709 $26$ \u4e2a\u5b50\u8282\u70b9\u8fde\u5411\u5b83\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u77e5\u9053\u8d70\u54ea\u6761\u8fb9\u624d\u662f\u6309\u5b57\u5178\u5e8f\u904d\u5386\u5462\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u5728\u5efa SAM \u65f6\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8bb0\u4e00\u4e2a Right\uff0c\u5373\u5728\u539f\u4e32\u7684\u4f4d\u7f6e\u3002\u90a3\u4e48\u901a\u8fc7 Right \u4e0e\u5176\u7236\u8282\u70b9\u7684 maxlen \u5c31\u80fd\u6c42\u51fa\u8be5\u8282\u70b9\u7531\u7236\u4eb2\u6307\u5411\u81ea\u5df1\u7684\u9996\u5b57\u7b26\u3002\r\n\r\n\u7136\u540e\u6309\u7167\u7c7b\u4f3c\u62d3\u6251\u5e8f\u90a3\u6837\u7684\u5957\u8def\uff0c\u5f00\u4e2a\u6876\u7136\u540e\u4e22\u8fdb\u53bb\u6392\u5e8f\u5373\u53ef\u3002\r\n\r\n\u8d34\u4e00\u4e0b\u6c42\u9996\u5b57\u7b26\u7684\u51fd\u6570\r\n```cpp\r\nfor(int i=1;i<=cnt;i++) g[i] = Get(c[n + 1 - Right[i] + node[node[i].fa].len]);\r\n```\r\n\u7136\u540e\u5728 SAM \u4e0a dfs \u65f6\uff0c\u5bf9\u53f6\u5b50\u7684\u904d\u5386\u987a\u5e8f\u5373\u4e3a\u540e\u7f00\u6392\u5e8f\u3002\r\n\r\n# Part 2\r\n-------\r\n\u4ece\u7406\u8bba\u4e0a\u6765\u8bf4\r\n\r\nSAM \u7684\u72b6\u6001\u6570\u6700\u591a\u6709 $2n -1$ \u4e2a\uff0c \u800c\u8f6c\u79fb\u6570\u5219\u6709 $3n-4$ \u4e2a\r\n\r\n\u5747\u662f $O(n)$ \u7ea7\u522b\r\n\r\n\u4f46\u5b9e\u9645\u7a7a\u95f4\u771f\u6709\u8fd9\u4e48\u4f18\u5417\uff1f\u6309\u4e0a\u9762\u7684\u601d\u8def\u4ea4\u4e0a\u53bb MLE\u3002\r\n\r\n\u4ed4\u7ec6\u7b97\u4e00\u6ce2\u7a7a\u95f4\r\n\r\n$$2\\times \\left \\vert \\sum \\right \\vert  \\times10^6 \\approx 473MB $$\r\n\r\n\u5f88\u660e\u663e\u7206\u7a7a\u95f4\u4e86\u3002\r\n\r\n\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u6709 2 \u79cd\u89e3\u51b3\u65b9\u6848\r\n\r\n$1$\u00b0 \u4f7f\u7528 STL\r\n\r\n$2$\u00b0 \u4e0d\u4f7f\u7528 STL\r\n\r\n------\r\n\r\n\u5bf9\u4e8e\u4f7f\u7528STL\u7684\u65b9\u6848\uff0c\u6709\u4e09\u79cd\u5bb9\u5668\u4f9b\u6211\u4eec\u6311\u9009\u3002\r\n\r\nmap\u3001unordered_map\u3001set\r\n\r\n\u5176\u4e2d\u7ecf\u8fc7\u6211\u7684\u5b9e\u9a8c\u53d1\u73b0\uff1a\r\n\r\nmap\u3001unordered_map \u90fd\u4e0d\u80fd\u901a\u8fc7\u8be5\u9898\uff0c\u5728\u7a7a\u95f4\u4e0e\u65f6\u95f4\u65b9\u9762\u5747\u88ab\u5361\u6b7b\u3002\u53e6\u5916\uff0cunordered_map \u5e38\u6570\u5927\u7684\u79bb\u8c31\u2026\u2026\r\n\r\nset \u6211\u5e76\u6ca1\u6709\u8bd5\u8fc7\uff0c\u4f46\u60f3\u5230\u5176\u4e0e map \u5185\u90e8\u5b9e\u73b0\u672c\u8d28\u76f8\u540c\uff0c\u5e94\u8be5\u4e5f\u96be\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\r\n\r\n\u6240\u4ee5\uff0c\u5982\u679c\u5728\u7a7a\u95f4\u8f83\u7d27\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528 STL\u3002\r\n\r\n------\r\n\r\n\u5bf9\u4e8e\u4e0d\u4f7f\u7528 STL \u7684\u65b9\u6848\uff0c\u6211\u4eec\u53c8\u6709 2 \u79cd\u5b50\u65b9\u6848\r\n\r\n\u7b2c\u4e00\u79cd\u662f\u624b\u5199\u4e00\u68f5\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\u3001\u67e5\u8be2\u3001\u67e5\u8be2\u662f\u5b58\u5728\u7b49\u64cd\u4f5c\u7684\u5e73\u8861\u6811\uff08\u5e94\u8be5\u4e0d\u4f1a\u6709\u4eba\u771f\u7684\u624b\u5199\u4e00\u68f5\u5e73\u8861\u6811\u5427\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log\\left\\vert\\sum\\right\\vert)$\r\n\r\n\u7b2c\u4e8c\u79cd\u662f\u624b\u5199\u54c8\u5e0c\u8868\r\n\r\n\u76f8\u6bd4\u7b2c\u4e00\u79cd\u6765\u8bf4\u54c8\u5e0c\u66f4\u52a0\u597d\u5199\uff0c\u65f6\u95f4\u4e0a\u66f4\u6709\u4fdd\u8bc1\uff08\u53d7\u4e0d\u540c\u54c8\u5e0c\u65b9\u6cd5\u7684\u5f71\u54cd\r\n\r\n\u8fd9\u91cc\u5c55\u793a\u4e24\u79cd\u54c8\u5e0c\u8868\uff0c\u4e00\u79cd\u662f\u501f\u9274duyi\u7684\u968f\u673a\u63a2\u6d4b\u54c8\u5e0c\u8868\uff0c\u53e6\u4e00\u79cd\u662f\u6211\u624b\u5199\u7684\u54c8\u5e0c\u6302\u94fe\u3002\r\n\r\n\r\n\u65f6\u95f4\u4e0a\uff0c\u524d\u8005\u660e\u663e\u4f18\u4e8e\u540e\u8005\u3002\u4ece\u7a7a\u95f4\u4e0a\uff0c\u540e\u8005\u6bd4\u524d\u8005\u66f4\u4f18\u3002\r\n\r\n\r\n\r\n```cpp\r\nnamespace Hash{//\u968f\u673a\u63a2\u6d4b\r\n//\u4e0d\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u597d\u50cf\u8981\u8c03\u7528__builtin_ctz()\u8fd9\u4e2a\u51fd\u6570\u6765\u5361\u5e38 \uff0c \u53cc\u4e0b\u5212\u7ebf\u51fd\u6570\r\n\tconst unsigned MOD = 19260817;\r\n\tconst unsigned STP = 9000011;\r\n\tstruct Node{\r\n\t\tunsigned val;\r\n\t\tunsigned rea;\r\n\t}hs[MOD + 10];\r\n\tinline unsigned &mk(int x,int y)\r\n\t{\r\n\t\tregister unsigned real(26 * x + y), i(x) , stp(((real%STP) * 2) ^ 1);\r\n\t\tfor(;hs[i].rea&&hs[i].rea!=real;i = i + stp, i -= (i >= MOD) ? MOD : 0)\r\n\t\tif(hs[i].rea == real) return hs[i].val;\r\n\t\ths[i].rea = real;\r\n\t\treturn hs[i].val;\r\n\t} \r\n}\r\n```\r\n\u5355\u6b21\u67e5\u8be2\u63a5\u8fd1 $O(1)$\u3002\r\n\r\n```cpp\r\nnamespace Hash{//\u6302\u94fe\u6cd5\r\n\tunsigned head[np * 2];\r\n\tunsigned Nxt[np*3];\r\n\tunsigned val[np*3];\r\n\tunsigned rea[np*3];\r\n\tint Tit;\r\n\t\r\n\tinline unsigned &mk(unsigned x,unsigned y)\r\n\t{\r\n\t\tfor(int i=head[x];i;i = Nxt[i])\r\n\t\t{\r\n\t\t\tif(rea[i] == y)\r\n\t\t\t{\r\n\t\t\t\treturn val[i];\r\n\t\t\t } \r\n\t\t}\r\n\t\tTit++;\r\n\t\tNxt[Tit] = head[x];\r\n\t\thead[x] = Tit;\r\n\t\trea[Tit] = y;\r\n\t\treturn val[Tit];\t\t\r\n\t}\r\n\t\r\n\tinline void Memcpy(int x,int y)//\u8fd9\u6837\u590d\u5236\u5e38\u6570\u66f4\u5c0f\r\n\t{\r\n\t\tfor(int i=head[x] ;i ;i=Nxt[i])\r\n\t\t{\r\n\t\t\t++Tit;\r\n\t\t\tNxt[Tit] = head[y];\r\n\t\t\thead[y] = Tit;\r\n\t\t\tval[Tit] = val[i];\r\n\t\t\trea[Tit] = rea[i];\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\u5355\u6b21\u67e5\u8be2\u4e3a $O(\\left\\vert\\sum\\right\\vert)$\u3002\r\n\r\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u82e5\u7a7a\u95f4\u538b\u5f97\u7d27\uff0c\u63a8\u8350\u4f7f\u7528\u54c8\u5e0c\u6302\u94fe\u6cd5\u3002\r\n\r\n\u8fd9\u91cc\u8fd8\u6709\u4e2a\u5361\u5e38\u5c0f\u6280\u5de7\uff0c\u5bf9\u4e8e\u5728 SAM \u4e0a\u8df3 fa \u8fb9\u68c0\u67e5 $son[x]$ \u662f\u5426\u5b58\u5728\u65f6\uff0c\u6ca1\u5fc5\u8981\u6bcf\u6b21\u90fd\u8bbf\u95ee\u4f60\u6240\u7ef4\u62a4\u7684\u6570\u636e\u7ed3\u6784\uff0c\u800c\u662f\u5728\u8be5\u8282\u70b9\u5f00\u4e00\u4e2a $64$ \u4f4d\u53d8\u91cf\uff0c\u7528\u4e8c\u8fdb\u5236\u538b\u7f29\u7684\u65b9\u6cd5\u7528\u4f4d\u8fd0\u7b97\u67e5\u770b\u6bcf\u79cd\u8f6c\u79fb\u8fb9\u662f\u5426\u5b58\u5728\u3002\r\n\r\n# Code\r\n```cpp\r\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define INF 1ll<<30\r\n#define ill long long\r\n#define sto set<node>::iterator\r\n#define ri register int\r\n\r\ntemplate<typename _T>\r\ninline void read(_T &x)\r\n{\r\n\tx=0;char s=getchar();int f=1;\r\n\twhile(s<'0'||s>'9') {f=1;if(s=='-')f=-1;s=getchar();}\r\n\twhile('0'<=s&&s<='9'){x=(x<<3)+(x<<1)+s-'0';s=getchar();}\r\n\tx*=f;\r\n}\r\n\r\nint Get(char ch)\r\n{\r\n    if (ch<='9' && ch>='0') return ch-'0';\r\n    if (ch<='Z' && ch>='A') return ch-'A'+10;\r\n    if (ch<='z' && ch>='a') return ch-'a'+36;\r\n    return ch;\r\n}\r\nconst int np = 1e6+5;\r\n\r\nnamespace Hash{ /* \u8fd9\u91cc\u6709\u4e00\u4e2a\u5361\u5e38\u5c0f\u6280\u5de7 \uff0c \u94fe\u8868\u7684\u8bbf\u95ee\u5185\u5b58\u4e0d\u8fde\u7eed\uff0c\u5bf9Cache\u6781\u4e0d\u53cb\u597d\uff0c\u5e38\u6570\u4f1a\u53d8\u5f97\u5de8\u5927\r\n\u5982\u679cTLE\u4e86\u8bf7\u8bd5\u8bd5vector\uff0c\u53ef\u80fd\u66f4\u5feb\r\n*/\r\n\tunsigned head[np * 2];\r\n\tunsigned Nxt[np*3];\r\n\tunsigned val[np*3];\r\n\tunsigned rea[np*3];\r\n\tint Tit;\r\n\t\r\n\tinline unsigned &mk(unsigned x,unsigned y) // \u4f20\u5740\u51fd\u6570 \uff0c \u5728\u51fd\u6570\u5916\u53ef\u76f4\u63a5\u4fee\u6539\u8be5\u5730\u5740\u4e0a\u7684\u503c\r\n\t{\r\n\t\tfor(int i=head[x];i;i = Nxt[i])\r\n\t\t{\r\n\t\t\tif(rea[i] == y)\r\n\t\t\t{\r\n\t\t\t\treturn val[i];\r\n\t\t\t } \r\n\t\t}\r\n\t\tTit++;\r\n\t\tNxt[Tit] = head[x];\r\n\t\thead[x] = Tit;\r\n\t\trea[Tit] = y;\r\n\t\treturn val[Tit];\t\t\r\n\t}\r\n\t\r\n\tinline void Memcpy(int x,int y)\r\n\t{\r\n\t\tfor(int i=head[x] ;i ;i=Nxt[i])\r\n\t\t{\r\n\t\t\t++Tit;\r\n\t\t\tNxt[Tit] = head[y];\r\n\t\t\thead[y] = Tit;\r\n\t\t\tval[Tit] = val[i];\r\n\t\t\trea[Tit] = rea[i];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nstruct SAM{\r\n\tint fa;\r\n\tint len;\r\n\tint pos;\r\n}node[np * 2];\r\n\r\nint cnt = 1 , la = 1,n;\r\nint Right[np << 1];\r\nill g[np << 1];//\u538b\u7f29\u662f\u5426\u5b58\u5728\r\n\r\ninline void add(int x,int i)\r\n{\r\n\tri k,p,q,now;\r\n\tp = la , now = la = ++cnt ;\r\n\tRight[now] = node[now].len = node[p].len + 1,node[now].pos = i;\r\n\tfor( ;p &&!((g[p]>>x)&1ll);g[p] += (1ll<<x),Hash::mk(p,x)=now, p = node[p].fa );\r\n\tif(!p) return (void)(node[now].fa = 1);\r\n\tif(node[p].len + 1 == node[q = Hash::mk(p,x)].len) return (void)(node[now].fa = q);\r\n\tnode[k = ++cnt].len = node[p].len + 1, node[k].fa = node[q].fa , node[q].fa = node[now].fa = k ,g[k] = g[q] ;\r\n\tRight[k] = Right[q];\r\n\tHash::Memcpy(q,k);\r\n\tfor(;p && !(Hash::mk(p,x)^q) ;Hash::mk(p,x) = k , p = node[p].fa);\t\r\n}\r\n\r\nint bac[256 + 10];\r\nint tit;\r\nchar c[np];\r\n\r\ninline void Add(int a,int b)\r\n{\r\n\tHash::rea[++tit] = b;\r\n\tHash::Nxt[tit] = Hash::head[a];\r\n\tHash::head[a] = tit;\r\n}\r\n\r\ninline void solve()\r\n{\r\n\tfor(int i=1;i<=cnt;i++) g[i] = Get(c[n + 1 - Right[i] + node[node[i].fa].len]) , bac[g[i]]++;\r\n\tfor(int i=1;i<=256;i++) bac[i]+= bac[i-1];\r\n\tfor(int i=1;i<=cnt;i++) Right[bac[g[i]]--] = i;\r\n\tfor(int i=cnt;i>=1;i--) Add(node[Right[i]].fa , Right[i]);\r\n}\r\n\r\ninline void dfs(int x)\r\n{\r\n\tif(node[x].pos)\tprintf(\"%d \" , node[x].pos);\r\n\tfor(int i=Hash::head[x];i;i=Hash::Nxt[i])\r\n\tdfs(Hash::rea[i]);\r\n}\r\n\r\nsigned  main()\r\n{\r\n\tscanf(\"%s\",c+1);\r\n\tn = strlen(c+1);\r\n\tfor(int i=n;i>=1;i--) add(Get(c[i]) , i);\r\n\tfor(int i=1;i<=cnt;i++) Hash::head[i] = 0;\r\n\tsolve();\r\n\tdfs(1);\r\n\t\r\n }\r\n```\r\n\u53ef\u4ee5\u770b\u89c1\u5373\u4f7f\u662f\u5199\u4e86\u54c8\u5e0c\u8868\uff0c\u8fd8\u662f\u9700\u8981\u5229\u7528\u91cd\u590d\u6570\u7ec4\u624d\u52c9\u5f3a\u5361\u8fc7 $128MB$\uff0c\u5e76\u4e14\u5728\u82df\u8fc7 $128MB$ \u4e4b\u540e\uff0c\u53ef\u6269\u5c55\u6027\u51e0\u4e4e\u4e3a $0$\u3002\r\n\r\n\u6240\u4ee5\u5728 $128MB$ \u4e0b\uff0c\u8bf7\u614e\u7528 SAM \u3002\u5f53\u7136\u4e86\uff0c\u7a7a\u95f4\u4e3a $256MB$ \u65f6\u8fd8\u662f\u53ef\u4ee5\u968f\u4fbf\u7528\u7684\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\left\\vert\\sum\\right\\vert)$\r\n\r\n# $End$\r\n\r\n\u867d\u7136\u8fd9\u662f SA \u677f\u5b50\u7684\u9898\u89e3\uff0c\u4f46\u4e3a\u4e86\u5c55\u793a\u538b\u7f29\u7a7a\u95f4\u7684\u91cd\u8981\u6027\u548c\u4f18\u8d8a\u6027\uff0c\u6211\u8fd8\u662f\u9009\u62e9\u4e86\u5728\u8fd9\u91cc\u8bb2\u89e3 SAM \u538b\u7f29\u7a7a\u95f4\u6280\u5de7\u3002\r\n\r\n\u5728 SAM \u9898\u89e3\u4e2d\uff0c\u51e0\u4e4e\u6240\u6709\u9898\u89e3\u90fd\u8ba4\u4e3a\u5f00 map \u662f\u53ef\u4ee5\u5c06 SAM \u5927\u91cf\u5197\u4f59\u7a7a\u95f4\u4f18\u5316\u6389\u7684\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u4eba\u8ba4\u771f\u8bb2\u6709\u5173\u7a7a\u95f4\u538b\u7f29\u7684\u95ee\u9898\u2026\u2026\r\n\r\n\u6240\u4ee5\u624d\u6709\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\r\n### \u53c2\u8003\u8d44\u6599\uff1a\r\n[\u8fdc\u822a\u4e4b\u66f2\u535a\u5ba2](https://www.luogu.com.cn/blog/yhzq/solution-p3809)\r\n\r\nduyi\u7684 AC \u81ea\u52a8\u673a\uff08\u4e8c\u6b21\u52a0\u5f3a\u7248\uff09\u63d0\u4ea4\u8bb0\u5f55\uff08\u4e0d\u8d34\u94fe\u63a5\u4e86\uff0c\u5982\u679c\u6ca1\u8fc7\u7684\u8bdd\u4e5f\u770b\u4e0d\u4e86\r\n",
        "postTime": 1622910767,
        "uid": 307042,
        "name": "\u4e00Iris\u4e00",
        "ccfLevel": 7,
        "title": "P3809 \u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f"
    },
    {
        "content": "\u88f8\u88f8\u88f8\u7684\u540e\u7f00\u6392\u5e8f\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\u3002\u3002\u3002\u3002\n\n\u81ea\u5df1\u7406\u89e3\u5e76\u4e0d\u96be\uff08LRJ\u7684\u6811\u4e0a\u5199\u5f97\u633a\u4e0d\u9519\u7684\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define MAX 2000000\nstring s;\nint n;\nint SA[MAX];\nint t[MAX],x[MAX],a[MAX],y[MAX];\ninline bool cmp(int i,int j,int k)\n{\n       return y[i]==y[j]&&y[i+k]==y[j+k];\n}\nint get_SA()\n{\n      int m=150;//\u786e\u5b9a\u8fb9\u754c \n      //\u9996\u5148\u4e00\u904d\u57fa\u6570\u6392\u5e8f\n      for(int i=1;i<=n;++i)t[x[i]=a[i]]++;//\u653e\u5165\u6876\u4e2d \n      for(int j=1;j<=m;++j)t[j]+=t[j-1];//\u8ba1\u7b97\u4f4d\u6570 \n      for(int i=n;i>=1;--i)SA[t[x[i]]--]=i;//\u6392\u5e8f     \n      //\u5229\u7528\u500d\u589e\u7ee7\u7eed\u6392\u5e8f\n      for(int k=1;k<=n;k<<=1)\n      {\n               int p=0;\n               for(int i=0;i<=m;++i)y[i]=0;//\u6876\u6e05\u7a7a\n             for(int i=n-k+1;i<=n;++i)y[++p]=i;\n                       //\u540e\u9762\u7684k\u4f4d\u4e0d\u4f1a\u548c\u522b\u7684\u5f62\u6210\u4e8c\u5143\u7ec4,\u76f4\u63a5\u8ba1\u7b97\u4e8c\u5143\u7ec4\u7684\u7b2c\u4e8c\u4f4d \n             for(int i=1;i<=n;++i)if(SA[i]>k)y[++p]=SA[i]-k;\n             for(int i=0;i<=m;++i)t[i]=0;//\u6876\u6e05\u7a7a\n             for(int i=1;i<=n;++i)t[x[y[i]]]++;\n             for(int i=1;i<=m;++i)t[i]+=t[i-1];//\u8ba1\u7b97\u4f4d\u6570\n             for(int i=n;i>=1;--i)SA[t[x[y[i]]]--]=y[i];//\u6392\u5e8f\n             swap(x,y);//\u4ea4\u6362\u6876\n             x[SA[1]]=p=1;\n             for(int i=2;i<=n;++i)\n                 x[SA[i]]=cmp(SA[i],SA[i-1],k)?p:++p;\n             if(p>=n)break;//\u4e0d\u7528\u7ee7\u7eed\u6392\u5e8f\u4e86\n             m=p; \n      }\n      for(int i=1;i<=n;++i)\n        printf(\"%d \",SA[i]);\n}\nint main()\n{\n      cin>>s;\n      int l=s.length();\n      n=l;\n      for(int i=1;i<=l;++i)\n          a[i]=s[i-1];\n      get_SA();\n      return 0; \n}\n```",
        "postTime": 1499416136,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "# \u540e\u7f00\u6392\u5e8f\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/yifusuyi/p/11739881.html)\n\n## Task\n\n### Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8981\u6c42\u6309\u5b57\u5178\u5e8f\u5347\u5e8f\u8f93\u51fa\u5b83\u7684\u6240\u6709\u540e\u7f00\u5b50\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u3002\n\n### Requirements & Limitations\n\n\u5b57\u7b26\u96c6\u5927\u5c0f\u4e3a\u5e38\u6570\uff0c\u8981\u6c42\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u5176\u4e2d $n$ \u4e3a\u5b57\u7b26\u4e32\u957f\u5ea6\n\n## Algorithm\n\n\u8fd9\u5c31\u662f\u5927(ren)\u540d(lei)\u9f0e(zhi)\u9f0e(hui)\u7684\u540e\u7f00\u6392\u5e8f\u4e86\u3002\u8fd9\u91cc\u8bb0\u5f55\u500d\u589e\u6cd5\u3002\n\n\u5b9a\u4e49\u540e\u7f00 $i$ \u4e3a\u9996\u5b57\u7b26\u6240\u5728\u539f\u5b57\u7b26\u4e32\u4f4d\u7f6e\u4e3a $i$ \u7684\u540e\u7f00\u5b50\u4e32\u3002\n\n\u5b9a\u4e49 $sa_i$ \u4e3a\u6392\u540d\u4e3a $i$ \u7684\u540e\u7f00\u7684\u9996\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\uff0c$rnk_i$ \u4e3a\u540e\u7f00 $i$ \u7684\u6392\u540d\u3002\u4e5f\u5373\u5bf9 $sa_i$ \u505a\u6392\u5e8f\u76f8\u5f53\u4e8e\u5bf9\u539f\u5b57\u7b26\u4e32\u505a\u6392\u5e8f\u3002\n\n\u6ce8\u610f\u5230 $sa$ \u548c $rnk$ \u662f\u53ef\u4ee5\u5728 $O(n)$ \u65f6\u95f4\u5185\u4e92\u76f8\u63a8\u51fa\u7684\uff0c\u56e0\u4e3a \u6392\u540d\u4e3a (\u540e\u7f00 $i$ \u7684\u6392\u540d) \u7684\u540e\u7f00\u4e3a $i$\uff0c\u5f62\u5f0f\u5316\u7684\u8bf4\uff0c$sa_{rnk_i} = i$\uff0c\n\n\u8003\u8651\u8fdb\u884c\u591a\u6b21\u6392\u5e8f\uff0c\u6bcf\u6b21\u6392\u5e8f\u56fa\u5b9a\u4e00\u4e2a\u957f\u5ea6\uff0c\u5bf9\u6240\u6709\u540e\u7f00\u5b50\u4e32\u7684\u8be5\u957f\u5ea6\u7684\u524d\u7f00\u6392\u5e8f(\u957f\u5ea6\u4e0d\u8db3\u8865 $0$)\u3002\u6211\u4eec\u500d\u589e\u8fd9\u4e2a\u957f\u5ea6\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5bf9\u6240\u6709\u540e\u7f00\u5b50\u4e32\u7684\u7b2c\u4e00\u4f4d\u8fdb\u884c\u6392\u5e8f\uff0c\u5f53\u5b57\u7b26\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u8981\u6c42\u9996\u5b57\u7b26\u6240\u5728\u4f4d\u7f6e\u5c0f\u7684\u5728\u524d\u9762\uff0c\u4f8b\u5982\u5bf9\u4e8e\u5b57\u7b26\u4e32 $ababa$ \u7684\u6240\u6709\u540e\u7f00\u5b50\u4e32\n\n```\n1 ababa\n2 baba\n3 aba\n4 ba\n5 a\n```\n\n\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\u7684\u7ed3\u679c\u4e3a\n\n```\n1 ababa\n3 aba\n5 a\n2 baba\n4 ba\n```\n\n\u5373\u6211\u4eec $sa$ \u6570\u7ec4\u5f53\u524d\u7684\u503c\u4e3a $\\{1,~3,~5,~2,~4\\}$\uff0c\u7136\u540e\u8ba1\u7b97 $rnk$ \u6570\u7ec4\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e24\u5b57\u7b26\u4e32\u7b2c\u4e00\u4f4d\u76f8\u540c\u65f6\uff0c\u4ed6\u4eec\u7684 $rnk$ \u4e5f\u5e94\u8be5\u76f8\u540c\u3002\u4f8b\u5982\uff0c$rnk_1 = rnk_3 = 1$\u3002\u7c7b\u4f3c\u7684\u5f97\u5230 $rnk$ \u6570\u7ec4\u5f53\u524d\u7684\u503c\u4e3a $\\{1,~2,~1,~2,~1\\}$\u3002\n\n\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u6b21\u6392\u5e8f\u3002\n\n\u7531\u4e8e\u7b2c\u4e00\u6b21\u6392\u5e8f\u7684\u957f\u5ea6\u4e3a $1$\uff0c\u6240\u4ee5\u672c\u6b21\u6392\u5e8f\u7684\u957f\u5ea6\u4e3a $1 \\times 2 = 2$\n\n\u5bf9\u4e8e\u4e0a\u6b21\u7684\u6392\u5e8f\u7ed3\u679c\uff0c\u6211\u4eec\u5b83\u4eec\u7684\u524d\u4e24\u4f4d\u8fdb\u884c\u6392\u5e8f\u3002\u4f46\u662f\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u6211\u4eec\u5df2\u7ecf\u6392\u597d\u4e86\u7b2c\u4e00\u4f4d\uff0c\u73b0\u5728\u5bf9\u7b2c\u4e8c\u4f4d\u8fdb\u884c\u5927\u5c0f\u6bd4\u8f83\uff0c\u6211\u4eec\u53d1\u73b0\u540e\u7f00 $i$ \u7684\u7b2c $2$ \u4f4d\u6b63\u662f\u540e\u7f00 $(i + 1)$ \u7684\u7b2c $1$ \u4f4d\uff0c\u56e0\u6b64\u7b2c\u4e8c\u4f4d\u7684\u5b57\u7b26\u7684\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u6211\u4eec\u4e5f\u662f\u77e5\u9053\u7684\uff0c\u5177\u4f53\u7684\uff0c\u6bd4\u8f83 $(sa_i,~sa_j)$\uff0c\u82e5 $rnk_{sa_i} \\neq rnk_{sa_j}$\uff0c\u5219\u4ed6\u4eec\u7684\u5927\u5c0f\u5173\u7cfb\u4e3a $rnk_{sa_i}$ \u548c $rnk_{sa_j}$ \u7684\u5927\u5c0f\u5173\u7cfb\u3002\u5426\u5219\u5219\u8bf4\u660e\u5b83\u4eec\u7684\u7b2c\u4e00\u4f4d\u662f\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u6bd4\u8f83\u7b2c\u4e8c\u4f4d\uff0c\u5219\u5b83\u4eec\u7684\u5927\u5c0f\u5173\u7cfb\u662f $rnk_{sa_i + 1}$ \u4e0e $rnk_{sa_j + 1}$ \u7684\u5927\u5c0f\u5173\u7cfb\u3002\n\n\u6392\u5e8f\u4ee5\u540e\u7684\u7ed3\u679c\u4e3a\n\n```\n5 a\n1 ababa\n3 aba\n4 ba\n2 baba\n```\n\n\u5373 $sa$ \u6570\u7ec4\u5f53\u524d\u7684\u503c\u4e3a $\\{5,~1,~3,~4,~2\\}$\uff0c\u800c $rnk$ \u5f53\u524d\u7684\u503c\u4e3a $\\{2,~3,~2,~3, ~1\\}$\n\n\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u6b21\u6392\u5e8f\u3002\n\n\u7531\u4e8e\u4e0a\u6b21\u7684\u6392\u5e8f\u957f\u5ea6\u4e3a $2$\uff0c\u6240\u4ee5\u672c\u6b21\u6392\u5e8f\u7684\u957f\u5ea6\u4e3a $2 \\times 2 = 4$\n\n\u7c7b\u4f3c\u4e8e\u4e0a\u6b21\u7684\u6392\u5e8f\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u524d\u4e24\u4f4d\u7684\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\uff0c\u73b0\u5728\u8981\u6c42\u524d\u56db\u4f4d\u7684\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\uff0c\u800c\u540e\u7f00 $i$ \u7684\u540e\u4e24\u4f4d\u6b63\u662f\u540e\u7f00 $(i + 2)$ \u7684\u524d\u4e24\u4f4d\uff0c\u5728\u4e0a\u6b21\u6392\u5e8f\u5df2\u7ecf\u88ab\u6392\u597d\u4e86\u3002\u4e8e\u662f\u4ed6\u4eec\u540e\u4e24\u4f4d\u5b57\u7b26\u7684\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u4e5f\u662f\u77e5\u9053\u7684\u3002\n\n\u7c7b\u4f3c\u7684\uff0c\u5f97\u5230\u6392\u5e8f\u7684\u7ed3\u679c\u4e3a\n\n```\n5 a\n3 aba\n1 ababa\n4 ba\n2 baba\n```\n\n\u5373 $sa = \\{5,~3,~1,~4,~2\\}$\uff0c$rnk = \\{3,~5,~2,~4,~1\\}$\n\n\u81f3\u6b64\uff0c $rnk$ \u6570\u7ec4\u5df2\u7ecf\u662f\u4e00\u4e2a $1 \\sim n$ \u7684\u6392\u5217\uff0c\u8fd9\u610f\u5473\u7740\u6240\u6709\u7684\u540e\u7f00\u5df2\u7ecf\u90fd\u6392\u597d\u4e86\u5e8f\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u5f62\u5f0f\u5316\u7684\uff0c\u6211\u4eec\u500d\u589e\u6240\u6392\u5e8f\u7684\u957f\u5ea6\uff0c\u8bbe\u5f53\u524d\u9700\u8981\u6392\u5e8f\u7684\u957f\u5ea6\u4e3a $2len$\uff0c\u5df2\u7ecf\u5bf9 $len$ \u957f\u5ea6\u6392\u597d\u4e86\u5e8f\uff0c\u4e14 $sa$ \u548c $rnk$ \u5b58\u50a8\u7684\u662f\u957f\u5ea6\u4e3a $len$ \u65f6\u7684\u6392\u5e8f\u4fe1\u606f\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e24\u4e2a\u540e\u7f00 $(i, j)$\uff0c\u4ed6\u4eec\u7684\u524d\u534a\u90e8\u5206\u5927\u5c0f\u5173\u7cfb\u4e3a $(rnk_i, rnk_j)$\uff0c\u800c\u6ce8\u610f\u5230\u4ed6\u4eec\u540e\u534a\u90e8\u5206\u5373\u4e3a\u540e\u7f00 $(i + len)$ \uff08\u6216\u540e\u7f00 $(j + len)$\uff09\u7684\u524d\u534a\u90e8\u5206\uff0c\u56e0\u6b64\u4ed6\u4eec\u540e\u534a\u90e8\u5206\u7684\u5927\u5c0f\u5173\u7cfb\u4e3a $(rnk_{i + len}, rnk_{j + len})$\u3002\u6839\u636e\u5b57\u7b26\u4e32\u6bd4\u8f83\u89c4\u5219\uff0c\u5982\u679c\u524d\u534a\u90e8\u5206\u5927\u5c0f\u4e0d\u540c\uff0c\u5219\u5927\u5c0f\u5173\u7cfb\u4e3a\u524d\u534a\u90e8\u5206\u5927\u5c0f\u5173\u7cfb\uff0c\u5426\u5219\u4e3a\u540e\u534a\u90e8\u5206\u5927\u5c0f\u5173\u7cfb\u3002\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5bf9 $(rnk_i, rnk_{i + len})$ \u8fd9\u4e2a\u4e8c\u5143\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\u4e00\u76f4\u5230\u6240\u500d\u589e\u7684\u957f\u5ea6\u5927\u4e8e $n$ \u65f6\uff0c\u5219\u6240\u6709\u540e\u7f00\u7684\u5927\u5c0f\u5df2\u88ab\u6392\u597d\u3002\n\n### Algorithm $1$\n\n#### Solution\n\n\u6211\u4f1a ``std::sort``\uff01\n\n\u6211\u4eec\u500d\u589e\u957f\u5ea6\uff0c\u5bf9\u4e8c\u5143\u7ec4 $(rnk_i, rnk_{i + len})$ \u6392\u5e8f\u65f6\uff0c\u76f4\u63a5\u4f7f\u7528 ``std::sort``\u3002\u6ce8\u610f\u5230\u6211\u4eec\u500d\u589e\u4e86 $O(\\log n)$ \u6b21\uff0c\u6bcf\u6b21\u9700\u8981\u8fdb\u884c\u4e00\u6b21 $O(n \\log n)$ \u7684\u6392\u5e8f\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n)$\u3002\u4f46\u662f\u4f9d\u7136\u80fd\u8dd1\u8fc7\u4f60\u8c37\u7684\u6a21\u677f\u9898\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u975e\u5e38\u6613\u4e8e\u7406\u89e3\uff0c\u56e0\u4e3a\u8fd9\u53ea\u662f\u7ffb\u8bd1\u4e86\u4e0a\u9762\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u4ee3\u7801\u4e5f\u597d\u8bb0\u597d\u5199\u3002\n\n#### Code\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n\nconst int maxn = 2000005;\n\nint n;\nchar S[maxn];\nint rnk[maxn], sa[maxn];\nstd::pair<int, int> MU[maxn];\n\nint ReadStr(char *p);\nbool cmp(const int &a, const int &b);\n\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  n = ReadStr(S);\n  for (int i = 1; i <= n; ++i) {\n    rnk[i] = 1;\n    sa[i] = i;\n    MU[i].second = S[i];\n  }\n  for (int len = 1; len <= n; len <<= 1) {\n    std::sort(sa + 1, sa + 1 + n, cmp);\n    for (int i = 1; i <= n; ++i) {\n      if (MU[sa[i]] == MU[sa[i - 1]]) {\n        rnk[sa[i]] = rnk[sa[i - 1]];\n      } else  {\n        rnk[sa[i]] = i;\n      }\n    }\n    for (int i = 1; i <= n; ++i) {\n      MU[i].first = rnk[i];\n      MU[i].second = rnk[i + len];\n    }\n  }\n  for (int i = 1; i <= n; ++i) {\n    qw(sa[i], ' ', true);\n  }\n  putchar('\\n');\n  return 0;\n}\n\nint ReadStr(char *p) {\n  auto beg = p;\n  do *(++p) = IPT::GetChar(); while (((*p >= 'a') && (*p <= 'z')) || ((*p >= '0') && (*p <= '9')) || ((*p >= 'A') && (*p <= 'z')));\n  *p = 0;\n  return p - beg - 1;\n}\n\ninline bool cmp(const int &a, const int &b) {\n  if (MU[a] != MU[b]) {\n    return MU[a] < MU[b];\n  } else {\n    return a < b;\n  }\n}\n```\n\n### Algorithm $2$\n\n\u8003\u8651\u662f\u5bf9\u53cc\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u5bf9\u7b2c\u4e8c\u5173\u952e\u5b57\u505a\u6876\u6392\u5e8f\uff0c\u7136\u540e\u5bf9\u7b2c\u4e00\u5173\u952e\u5b57\u505a\u6876\u6392\u5e8f\uff0c\u5728\u6392\u5e8f\u65f6\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6876\u6240\u538b\u5165\u7684\u5e8f\u53f7\u5e8f\u5217\uff0c\u53d6\u51fa\u662f\u6309\u7167\u5e8f\u5217\u7684\u987a\u5e8f\u53d6\u51fa\u6bcf\u4e2a\u4e0b\u6807\uff0c\u4f5c\u4e3a\u6392\u597d\u5e8f\u7684\u5e8f\u5217\u3002\u7531\u4e8e\u6876\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\uff0c\u8fd9\u6837\u5728\u7b2c\u4e00\u5173\u952e\u5b57\u76f8\u540c\u7684\u65f6\u5019\u5148\u53d6\u51fa\u7684\u662f\u7b2c\u4e8c\u5173\u952e\u5b57\u8f83\u5c0f\u7684\u4e0b\u6807\u3002\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a $O(n)$ \u7684\u57fa\u6570\u6392\u5e8f\uff0c\u4f46\u662f\u7531\u4e8e ``std::vector`` \u5e38\u6570\u592a\u5927\uff0c\u8fd9\u6837\u7684\u5199\u6cd5\u751a\u81f3\u6bd4 $O(n \\log^2 n)$ \u7684\u505a\u6cd5\u8fd8\u8981\u6162\u4e00\u500d\uff0c\u5728\u4f60\u8c37\u7684\u677f\u677f\u9898\u4e0a\u4f1aT\u4e09\u4e2a\u70b9\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u53ea\u662f\u7528\u8fd9\u4e2a\u5927\u5e38\u6570\u57fa\u6570\u6392\u5e8f\u66ff\u6362\u4e0a\u9762\u7684 ``std::sort``\uff0c\u867d\u7136\u5f88\u6162\u4f46\u662f\u4ed6\u7684\u590d\u6742\u5ea6\u5df2\u7ecf\u6b63\u786e\u4e86\u3002\n\n#### Code\n\n\u5176\u4f59\u90e8\u5206\u76f8\u540c\uff0c\u53ea\u662f\u5c06 ``std::sort`` \u6362\u6210 ``RadixSort``\uff0c\u6392\u5e8f\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\n\n```cpp\nstd::vector<int>bk[maxn];\n\nvoid RadixSort(int *const beg, int *const ed) {\n  for (auto it = beg; it != ed; ++it) {\n    bk[MU[*it].second].push_back(*it);\n  }\n  auto p = beg;\n  for (int i = 0; i <= n; ++i) {\n    for (auto u : bk[i]) {\n      *(p++) = u;\n    }\n    bk[i].clear();\n  }\n  for (auto it = beg; it != ed; ++it) {\n    bk[MU[*it].first].push_back(*it);\n  }\n  p = beg;\n  for (int i = 0; i <= n; ++i) {\n    for (auto u : bk[i]) {\n      *(p++) = u;\n    }\n    bk[i].clear();\n  }\n}\n```\n\n### Algorithm $3$\n\n\u8003\u8651\u4f7f\u7528\u4eba\u7c7b\u667a\u6167\u4f18\u5316\u6211\u4eec\u7684\u57fa\u6570\u6392\u5e8f\u90e8\u5206\u3002\n\n\u6211\u4eec\u518d\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4 $tp$\uff0c$tp_i$ \u4ee3\u8868 **\u7b2c\u4e8c\u5173\u952e\u5b57** \u4e3a $i$ \u65f6\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\u3002\n\n**\uff08\u6ce8\u610f\u6211\u4eec\u4e0b\u65b9\u7684\u5047\u8bbe\u4e3a\u5df2\u7ecf\u5bf9 $len$ \u505a\u597d\u4e86\u6392\u5e8f\uff0c\u73b0\u5728\u8981\u6392\u5e8f $2len$\uff09**\n\n\u4f8b\u5982\uff0c$len = 2,~rnk_3 = 2$\uff0c\u5219\u6709 $tp_2 = 1$\uff0c\u56e0\u4e3a\u540e\u7f00 $1$ \u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a $rnk_{1 + 2 = 3} = 2$\uff0c\u56e0\u6b64 $tp_2 = 1$\u3002\n\n\u5f62\u5f0f\u5316\u7684\uff0c\u5f53 $i + len \\leq n$ \u65f6\uff0c$tp_{rnk_{i + len}} = i$\u3002\n\n\u800c\u5f53 $i + len > n$ \u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e00\u90e8\u5206\u7684 $i$ \u5bf9\u5e94\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u90fd\u662f $0$\uff08\u56e0\u4e3a\u540e\u534a\u90e8\u5206\u662f\u7a7a\u4e32\uff09\uff0c\u6bd4\u4e0d\u662f\u96f6\u7684\u90fd\u8981\u5c0f\uff0c\u8003\u8651\u5230\u8981\u6c42\u5b57\u5178\u5e8f\u76f8\u540c\u65f6\u5e8f\u53f7\u5c0f\u7684\u5728\u524d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ee4 $tp_{i + len - n} = i$ \u5373\u53ef\u3002\n\n\u5f53\u7136\uff0c\u8d4b\u503c\u65f6\u6211\u4eec\u8003\u8651\u679a\u4e3e $sa$ \u7684\u503c\u800c\u4e0d\u662f $rnk$ \u7684\uff08\u56e0\u4e3a\u521d\u59cb $rnk$ \u7684\u8d4b\u503c\u4f1a\u662f\u5b57\u7b26\u96c6\uff0c\u9700\u8981\u4e00\u4e9b\u989d\u5916\u5904\u7406\uff09\uff0c\u4e8e\u662f\u6709\n\n$\\forall i \\leq len,~tp_i = n - len + 1$\uff0c\u8fd9\u4e00\u90e8\u5206\u662f\u5bf9\u5e94\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a $0$ \u7684\u90e8\u5206\u3002\n\n$\\forall sa_i > len,~~tp_{++pos} = sa_i - len$\u3002\u5176\u4e2d $pos$ \u4e3a\u8ba1\u6570\u5668\uff0c\u521d\u503c\u4e3a $len$\u3002\u6ce8\u610f\u6211\u4eec\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e $i$ \u800c\u4e0d\u662f\u679a\u4e3e $sa_i$\u3002\n\n\u73b0\u5728\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u89e3\u91ca\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\uff1a\n\n\u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u4e86 $sa_i$ \uff0c\u5373\u6211\u4eec\u6309\u7167\u6392\u540d\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u4e86\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u4ed6\u4eec\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u503c\u5f53\u7136\u662f\u4ece\u5c0f\u5230\u5927\u7684\uff08\u56e0\u4e3a\u7b2c\u4e8c\u5173\u952e\u4e5f\u662f\u6392\u540d\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u6309\u987a\u5e8f\u8bb0\u5f55\u8fd9\u4e9b\u4f4d\u7f6e\uff0c\u800c\u8fd9\u4e9b\u4f4d\u7f6e\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5bf9\u5e94\u7b2c\u4e00\u5173\u952e\u5b57\u7684\u4f4d\u7f6e\u662f $sa_i - len$\uff0c\u56e0\u4e3a\u5f53\u524d\u9700\u8981\u6392\u5e8f\u7684\u957f\u5ea6\u4e3a $2len$\uff0c\u6240\u4ee5\u7b2c\u4e00\u5173\u952e\u5b57\u4e0e\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u4f4d\u7f6e\u76f8\u5dee $len$\u3002\n\n\u4e0a\u9762\u4e24\u53e5\u6c42 $tp$ \u7684\u65b9\u6cd5\uff0c\u662f\u4eba\u7c7b\u667a\u6167\u57fa\u6570\u6392\u5e8f\u7684\u5173\u952e\u524d\u63d0\u6761\u4ef6\u3002\n\n\u73b0\u5728\u8003\u8651\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\u3002\n\n\u57fa\u6570\u6392\u5e8f\u7684\u4ee3\u7801\u5982\u4e0b\n\n```cpp\nvoid RadixSort() {\n  for (int i = 0; i <= m; ++i) tax[i] = 0;\n  for (int i = 1; i <= n; ++i) ++tax[rnk[i]];\n  for (int i = 1; i <= m; ++i) tax[i] += tax[i - 1];\n  for (int i = n; i; --i) sa[ tax[rnk[tp[i]]]-- ] = tp[i];\n}\n```\n\n$tax$ \u4ee3\u8868\u6876\uff0c\u9996\u5148\u5c06\u6876\u6e05\u96f6\uff0c\u7136\u540e\u679a\u4e3e**\u6bcf\u4e2a\u5b57\u7b26\u4e32**\uff0c\u5c06**\u5b57\u7b26\u4e32\u7684\u6392\u540d**\u653e\u5165\u6876\u5185\u3002\n\n\u7136\u540e\u5bf9\u6876\u505a\u4e00\u4e2a\u524d\u7f00\u548c\u3002\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u73b0\u5728\u653e\u5165\u6876\u5185\u7684\u662f\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u8fd9\u610f\u5473\u7740\u4ece\u8fd9\u4e2a\u6876 $tax_i$ \u91cc\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u6240\u5728\u7684\u6392\u540d\u5b9a\u5927\u4e8e $\\sum_{x = 1}^{i - 1} tax_x$\uff0c\u56e0\u4e3a\u8fd9\u90e8\u5206\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u5c0f\u4e8e $i$\uff0c\u4ed6\u4eec\u7684\u6392\u540d\u4e00\u5b9a\u5c0f\u4e8e\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a $i$ \u7684\u5b57\u7b26\u4e32\u3002\u540c\u7406\uff0c\u4ed6\u4eec\u7684\u6392\u540d\u4e00\u5b9a\u4e0d\u5927\u4e8e $\\sum_{x = 1}^i tax_x$\u3002\n\n\u7136\u540e\u8fdb\u5165\u7b2c\u56db\u884c\uff0c\u6211\u4eec\u5012\u5e8f\u679a\u4e3e\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u503c\uff0c\u7528 $tp$ \u6765\u786e\u5b9a\u8fd9\u4e2a\u7b2c\u4e8c\u5173\u952e\u5b57\u662f\u54ea\u4e2a\u5b57\u7b26\u4e32\u7684\uff0c\u7136\u540e\u7528 $rnk$ \u627e\u5230\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5bf9\u5e94\u54ea\u4e2a\u6876\u3002\u8fd9\u4e2a\u6876\u5373\u4e3a $tax_{rnk_{tp_i}}$\u3002\u7136\u540e\u6211\u4eec\u6ce8\u610f\u5230\u4ece\u8fd9\u4e2a\u6876\u91cc\u51fa\u6765\u7684\u5143\u7d20\u4e0b\u6807\u4e0a\u754c\u4e3a\u5f53\u524d\u7684\u524d\u7f00\u548c\u503c\uff0c\u800c\u6211\u4eec\u662f\u5012\u5e8f\u679a\u4e3e\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u5b83\u7684\u6392\u540d\u5e94\u8be5\u662f\u6876\u91cc\u5269\u4e0b\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e8c\u5173\u952e\u5b57\u6700\u5927\u4e5f\u5373\u6392\u540d\u6700\u5927\u7684\uff0c\u56e0\u6b64\u5b83\u7684\u6392\u540d\u5c31\u662f  $tax_{rnk_{tp_i}}$\u3002\u5b8c\u6210\u540e\uff0c\u5c06\u8fd9\u4e2a\u6876\u7684\u503c\u81ea\u51cf $1$\uff0c\u4ee3\u8868\u5c06\u5b83\u7684\u4e0a\u754c\u51cf\u4e00\u3002\u8fd9\u4e48\u505a\u4e0b\u53bb\u5c31\u53ef\u4ee5\u5b8c\u6210\u57fa\u6570\u6392\u5e8f\u3002\n\n\u597d\u4eba\u7c7b\u667a\u6167\u554aQAQ\n\n#### Code\n\n```cpp\n#include <ctime>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n\nint n, m;\nchar S[maxn];\nint rnk[maxn], sa[maxn], tp[maxn], tax[maxn];\n\nvoid RadixSort();\nint ReadStr(char *p);\nbool cmp(const int &a, const int &b);\n\nint main() {\n  freopen(\"1.in\", \"r\", stdin);\n  n = ReadStr(S);\n  for (int i = 1; i <= n; ++i) {\n    rnk[i] = S[i];\n    tp[i] = i;\n  }\n  m = 1000;\n  RadixSort();\n  for (int len = 1, p = 0; p < n; len <<= 1, m = p) {\n    p = 0;\n    for (int i = 1; i <= len; ++i) tp[++p] = n - len + i;\n    for (int i = 1; i <= n; ++i) if (sa[i] > len) tp[++p] = sa[i] - len;\n    RadixSort();\n    std::swap(tp, rnk);\n    rnk[sa[1]] = p = 1;\n    for (int i = 2; i <= n; ++i) {\n      rnk[sa[i]] = ((tp[sa[i - 1]] == tp[sa[i]]) && (tp[sa[i - 1] + len] == tp[sa[i] + len])) ? p : ++p;\n    }\n  }\n  for (int i = 1; i <= n; ++i) {\n    qw(sa[i], ' ', true);\n  }\n  putchar('\\n');\n  return 0;\n}\n\nint ReadStr(char *p) {\n  auto beg = p;\n  do *(++p) = IPT::GetChar(); while (((*p >= 'a') && (*p <= 'z')) || ((*p >= '0') && (*p <= '9')) || ((*p >= 'A') && (*p <= 'z')));\n  *p = 0;\n  return p - beg - 1;\n}\n\nvoid RadixSort() {\n  for (int i = 0; i <= m; ++i) tax[i] = 0;\n  for (int i = 1; i <= n; ++i) ++tax[rnk[i]];\n  for (int i = 1; i <= m; ++i) tax[i] += tax[i - 1];\n  for (int i = n; i; --i) sa[ tax[rnk[tp[i]]]-- ] = tp[i];\n}\n```\n\n## Appreciation\n\n$Algorithm~~3$ \u7684\u4ee3\u7801\u53c2\u8003\u4e8e @[\u81ea\u4e3a\u98ce\u6708\u9a6c\u524d\u5352](https://www.cnblogs.com/zwfymqz/) \u7684 [blog](https://www.cnblogs.com/zwfymqz/p/8413523.html)\u3002\n\n ",
        "postTime": 1572002508,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u4e00\u8bf4\u5230\u6392\u5e8f\uff0c\u5c31\u60f3\u8d77~~\u4eca\u5e74\u4e0b\u534a\u5e74~~\u5e73\u8861\u6811\n\n### \u524d\u7f6e\u6280\u80fd\n\n0.\u91cd\u91cf\u5e73\u8861\u6811\uff08\u66ff\u7f6a\u7f8a\u6811\uff09\n\n1.\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bd4\u8f83\u4e24\u4e2a\u5143\u7d20\u7684\u5148\u540e\n\n**\u6392\u540d\u6bd4\u8f83** $O(1)$\n\n2.\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u63d2\u5165\u7684\u94fe\u8868\uff0c\u6bd4\u8f83\u4e24\u4e2a\u5143\u7d20\u7684\u5148\u540e\n\n**\u987a\u5e8f\u67e5\u627e\uff1f** $O(n)$\n\n**\u6bd4\u8f83\u6392\u540d\uff1f**\n\n\u63d2\u5165\u65f6\u4ee5\u524d\u9a71\u548c\u540e\u7ee7\u7684\u6392\u540d\u7684\u5e73\u5747\u6570\u4f5c\u4e3a\u81ea\u5df1\u7684\u6392\u540d\n\n\u6dfb\u52a00\u548c\u6b63\u65e0\u7a77\u4e24\u4e2a\u865a\u62df\u8282\u70b9\n\n\u6392\u540d\u4e3a**\u5b9e\u6570**\u7c7b\u578b\n\n$O(1)$\n\n3.\u7ed9\u5b9a\u4e00\u4e2a\u540e\u7f00\u6570\u7ec4\uff0c\u6bd4\u8f83\u4e24\u4e2a\u540e\u7f00\u7684\u5148\u540e\n\n\u540c2. $O(1)$\n\n### \u6982\u5ff5\n\u540e\u7f00\u5e73\u8861\u6811\u662f**\u52a8\u6001\u7684\u540e\u7f00\u6570\u7ec4**\n\n\u652f\u6301\u7684\u64cd\u4f5c\uff1a\n\n1.\u5728\u5b57\u7b26\u4e32\u524d\u63d2\u5165\u5b57\u7b26c\n\n2.\u8be2\u95ee\u4e00\u4e2a\u540e\u7f00\u5728\u5e73\u8861\u6811\u4e2d\u7684\u6392\u540d\n\n3.\u8be2\u95ee\u4e00\u4e2a\u5b57\u7b26\u4e32\u5728\u5e73\u8861\u6811\u4e2d\u7684\u6392\u540d\n### \u64cd\u4f5c1\n\n\u6211\u4eec\u7528$S_i$ \u4ee3\u8868\u539f\u4e32$S$\u4ece\u7b2c$i$\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u540e\u7f00\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e32$S$\u7684\u540e\u7f00\u5e73\u8861\u6811 \n\n\u63d2\u5165\u4e00\u4e2a\u5b57\u6bcd $c$ \n\n\u5219\u540e\u7f00 $cS$ \u4e0e\u4efb\u610f\u4e00\u4e2a\u540e\u7f00 $S_i$ \u7684\u5927\u5c0f\u5173\u7cfb\u53ef\u4ee5\u7528 $c$ \u4e0e $S_i$ \u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u5173\u7cfb\u4ee5\u53ca\u540e\u7f00 $S_1$ \u4e0e\u540e\u7f00 $S_{i+1}$ \u7684\u5927\u5c0f\u5173\u7cfb\u6765\u8868\u793a \n\n\u524d\u9762\u662f\u4e24\u4e2a\u5b57\u7b26\u7684\u6bd4\u8f83 $O(1)$ \n\n\u540e\u9762\u539f\u4e32\u540e\u7f00\u7684\u5927\u5c0f\u5173\u7cfb\u53ef\u4ee5\u5728\u5e73\u8861\u6811\u4e0a\u7ef4\u62a4\u6392\u540d $O(1)$ \u6bd4\u8f83\n\ntips\uff1a\u63d2\u5165\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u524d\u9a71\u540e\u7ee7\u7684\u6392\u540d\n\n### \u64cd\u4f5c2\n\n\u5e73\u8861\u6811\u57fa\u672c\u64cd\u4f5c $O(logn)$\n\n### \u64cd\u4f5c3\n\n\u5e73\u8861\u6811\u57fa\u672c\u64cd\u4f5c\uff0c\u6bd4\u8f83\u6539\u4e3a\u5b57\u5178\u5e8f\u6bd4\u8f83 $O(logn|Q|)$\n\n### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\ntypedef unsigned long long ll;\nconst int maxn=1000005;\nconst ll inf=0x4000000000000000;\nint siz[maxn],c[maxn][2],rt;\nll val[maxn];//\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u7528\u4e8eO(1)\u6bd4\u8f83\u4e24\u4e2a\u540e\u7f00\u7684\u5148\u540e\nchar s[maxn];\nint n;\nint sa[maxn];//\u5047\u88c5\u662fSA\nbool cmp(int x,int y)\n{\n    return s[x]<s[y]||s[x]==s[y]&&val[x+1]<val[y+1];\n}\n/****\u66ff\u7f6a\u7f8a\u91cd\u5efa****/\nint st[maxn],top;\nvoid dfs(int &x)\n{\n    if(x)dfs(c[x][0]),st[++top]=x,dfs(c[x][1]),x=0;\n}\nint reb(int l,int r,ll L,ll R)\n{\n    int mid=l+r>>1;\n    int x=st[mid];\n    siz[x]=r-l+1;\n    val[x]=L+R>>1;\n    if(l<mid)c[x][0]=reb(l,mid-1,L,val[x]);\n    if(mid<r)c[x][1]=reb(mid+1,r,val[x],R);\n    return x;\n}\n/****\u66ff\u7f6a\u7f8a\u63d2\u5165****/\nvoid ins(int &x,int y,ll L=0,ll R=inf,bool d=1)\n{\n    if(!x)\n        x=y,siz[x]=1,val[x]=L+R>>1,c[x][0]=c[x][1]=0;\n    else\n    {\n        siz[x]++;\n        bool w=cmp(x,y);\n        bool bad=siz[c[x][w]]>siz[x]*0.7+5&&d;\n        ins(c[x][w],y,w?val[x]:L,w?R:val[x],d&&!bad);\n        if(bad)top=0,dfs(x),x=reb(1,top,L,R);\n    }\n}\nint cnt;\nvoid tosa(int x)//\u5047\u88c5\u662fSA\n{\n    if(x)tosa(c[x][0]),sa[++cnt]=x,tosa(c[x][1]);\n}\nint main()\n{\n    scanf(\"%s\",s+1);\n    n=strlen(s+1);\n    for(int i=n;i;--i)\n        ins(rt,i);\n    tosa(rt);\n    for(int i=1;i<=n;++i)\n        printf(\"%d \",sa[i]);\n    return 0;\n}\n```\n\n\u53c2\u8003\u8d44\u6599\uff1a\n\n[\u540e\u7f00\u5e73\u8861\u6811\u5b66\u4e60\u7b14\u8bb0](https://blog.csdn.net/liutian429073576/article/details/53056038)",
        "postTime": 1548643948,
        "uid": 35143,
        "name": "PM250",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "**\u5982\u679c\u4f60\u662f\u7167\u7740\u300a\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\u00b7\u8bad\u7ec3\u6307\u5357\u300b\u5199\u7684\uff0c\u8bf7\u52a1\u5fc5\u68c0\u67e5\u4f60\u5199\u7684\u662f\u4e0d\u662f\u4e00\u4e2a\u5047\u7684\u540e\u7f00\u6570\u7ec4\u3002**\n\n```\nconst int maxn = int(1e6) + 5;\nint n;\nchar str[maxn];\nint buf_size = 128;\nint buf[maxn];\nint SA[maxn]; // SA: \u7b2c i \u5927\u7684\u662f\u8c01\uff0crank: i \u662f\u7b2c\u51e0\u5927\uff1brank \u7684 rank \u662f SA\nint x[maxn], y[maxn];\nvoid GetSA()\n{\n\tint *rank = x, *SA_second = y;\n\n\tfor (int i = 0; i < n; i++)\n\t\trank[i] = str[i];\n\n\tfor (int i = 0; i < buf_size; i++) buf[i] = 0;\n\tfor (int i = 0; i < n; i++) buf[rank[i]]++;\n\tfor (int i = 1; i < buf_size; i++) buf[i] += buf[i - 1];\n\tfor (int i = n - 1; ~i; i--)\n\t\tSA[--buf[rank[i]]] = i; // \u79bb\u6563\uff1a(SA[--buf[rank[i]]] = rank[i])\uff1arank[i]->i\n\n\tfor (int k = 1; k <= n; k <<= 1)\n\t{\n\t\tint t = 0;\n\t\tfor (int i = n - k; i < n; i++) // \u5c3e\u90e8\u201c\u6ca1\u6709\u201d\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u5143\u7d20\uff0c\u5b83\u4eec\u7684\u6392\u540d\u8bbe\u4e3a\u6700\u5c0f\n\t\t\tSA_second[t++] = i;\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (SA[i] >= k) SA_second[t++] = SA[i] - k;\n\t\t// \u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b2c\u4e8c\u5173\u952e\u5b57\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u7684\u53f3\u7aef\u70b9 SA[i]\n\n\t\t// \u5bf9 rank \u6392\u5e8f\uff0c\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u653e\u5165 buf\uff0c\u4fdd\u8bc1\u51fa\u6765\u65f6\u7b2c\u4e00\u5173\u952e\u5b57\u76f8\u540c\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u6709\u5e8f\n\t\tfor (int i = 0; i < buf_size; i++) buf[i] = 0;\n\t\tfor (int i = 0; i < n; i++) buf[rank[SA_second[i]]]++;\n\t\tfor (int i = 1; i < buf_size; i++) buf[i] += buf[i - 1];\n\t\tfor (int i = n - 1; ~i; i--)\n\t\t\tSA[--buf[rank[SA_second[i]]]] = SA_second[i];\n\n\t\tint* preRank = rank;\n\t\tstd::swap(rank, SA_second);\n\t\tt = 1;\n\t\trank[SA[0]] = 0;\n\t\tfor (int i = 1; i < n; i++)\n\t\t\trank[SA[i]] = (preRank[SA[i - 1]] == preRank[SA[i]] &&\n\t\t\t\tSA[i - 1] + k < n && SA[i] + k < n && // note!!!!!!!!!!\n\t\t\t\tpreRank[SA[i - 1] + k] == preRank[SA[i] + k]) ? t - 1 : t++;\n\t\tif (t >= n) break;\n\t\tbuf_size = t;\n\t}\n}\n```\n\n\u4ee5\u4e0a\u4e0b\u6807\u4ece 0 \u5f00\u59cb\u3002\n\n------\n\n\u4e66\u4e2d\u6709\u4e9b\u81f4\u547d\u7684\u7ec6\u8282\u9519\u8bef\uff0c\u8bf7\u4f7f\u7528\u8fd9\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8fdb\u884c\u4e00\u4e0b\u68c0\u67e5\uff1a\n\n```\nabab\n```\n\n\u6b63\u786e\u7684 SA \u6570\u7ec4\u5e94\u8be5\u662f\uff08\u4e0b\u6807\u4ece 1 \u5f00\u59cb\uff09\uff1a\n\n```\n3 1 4 2\n```\n\n------\n\n\u4e66\u4e0a\u7684 height \u6570\u7ec4\u6c42\u6cd5\u4e5f\u6709\u4e25\u91cd\u7684\u7ec6\u8282\u9519\u8bef\uff0c\u4e5f\u8bf7\u4ed4\u7ec6\u7814\u7a76\u4e0b\u3002",
        "postTime": 1520931311,
        "uid": 37029,
        "name": "UnnamedOrange",
        "ccfLevel": 9,
        "title": "[\u6a21\u677f] \u540e\u7f00\u6392\u5e8f"
    },
    {
        "content": "\u548b\u7f51\u4e0a\u7528$SAM$\u5efa$SA$\u7684\u9898\u89e3\u8fd9\u4e48\u5c11\u554a$\\cdots\\cdots$\u8fd9\u53c8\u4e0d\u662f\u5565\u7406\u6027\u6109\u60a6\u7684\u4e1c\u897f\u3002  \n\u8fd9\u662f\u4e00\u79cd$O(n)$\u6784\u5efa$SA$\u7684\u65b9\u6cd5\u3002\u5e38\u6570\u672a\u4e0e$DC3,SA-IS$\u5bf9\u6bd4\uff0c\u4f46\u4ee3\u7801\u96be\u5ea6\u5c0f\u4e8e$DC3,SA-IS$\u4e0e\u500d\u589e\uff08\u5982\u679c\u4f60\u66f4\u719f\u7ec3\u5199$SAM$\uff09\u3002\u5f53\u7136\u56e0\u5b9e\u9645\u5b9e\u73b0\u7684\u9650\u5236\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n|S|)$\u7684\uff0c\u5176\u4e2d$S$\u662f\u5b57\u7b26\u96c6\u3002  \n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u53cd\u4e32\u7684$parent$\u6811\u5c31\u662f\u539f\u4e32\u7684\u540e\u7f00\u6811\u3002  \n\u90a3\u4e48\u6709\u4e86\u540e\u7f00\u6811\uff0c\u6211\u4eec\u600e\u4e48\u6c42\u540e\u7f00\u6570\u7ec4\u5462\uff1f  \n\u6211\u4eec\u76f4\u63a5\u6309\u5b57\u5178\u5e8f$dfs$\u540e\u7f00\u6811\uff0c\u5982\u679c\u9047\u5230\u4e86\u4e00\u4e2a\u5408\u6cd5\u540e\u7f00$x$\uff0c\u90a3\u4e48\u7ed3\u70b9$x$\u7684$sa(x)$\u5c31\u662f\u5b83\u7684$dfn$\u3002  \n\u81f3\u4e8e\u600e\u4e48\u6309\u5b57\u5178\u5e8f\u6709\u4e00\u70b9\u7ec6\u8282\u3002  \n\u5b9e\u9645\u4e0a\uff0c\u4f60\u9700\u8981\u6ce8\u610f\u540e\u7f00\u6811\u4e0e\u53cd\u4e32$parent$\u6811\u867d\u7136\u5f62\u6001\u4e00\u6a21\u4e00\u6837\uff0c\u4f46\u662f\u4f60\u540e\u7f00\u6811\u7684\u4e00\u6761\u8f6c\u79fb\u8fb9\u4e0a\u7684\u4e32\u5176\u5b9e\u662f\u53cd\u4e32$parent$**\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u4e32\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e14\u4e32\u7684\u5f62\u6001\u662f\u6b63\u4e32\u7684\u5f62\u6001\u800c\u4e0d\u662f\u53cd\u4e32\u3002\u56e0\u6b64\u4f60\u4e0d\u80fd\u76f4\u63a5\u5728\u6784\u9020**$SAM$**\u65f6\u6c42\u51fa\u4e00\u4e2a\u8282\u70b9\u7684\u5b57\u5178\uff0c\u800c\u662f\u9700\u8981\u4e00\u4e9b\u64cd\u4f5c\u3002**  \n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5728\u6784\u5efa\u53cd\u4e32$SAM$\u65f6\u8bb0\u5f55\u4e00\u4e0b$cur$\u7684$right$**\u5728\u539f\u4e32\u4e2d\u7684\u4f4d\u7f6e**\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651$link(u)\\to u$\u8fd9\u6761\u8fb9\u8868\u793a\u7684\u4e32\u5b9e\u9645\u4e0a\u662f**\u8fd9\u4e2a\u7ed3\u70b9\u8868\u793a\u7684\u6700\u957f\u4e32\u7684\u53cd\u4e32\u53bb\u6389**$link(u)$**\u4e2d\u5df2\u6709\u7684\u90e8\u5206\u3002**  \n\u90a3\u6211\u4eec\u628a\u4e0a\u9762\u7684\u4f4d\u7f6e\u6c42\u51fa\u6765\uff0c\u6bcf\u6b21\u5efa\u540e\u7f00\u6811\u8fb9\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u7b97\u51fa\u8fd9\u6761\u8fb9\u7684\u5b57\u5178\u4e86\u3002  \n\u5f53\u7136\u672c\u9898\u5b57\u7b26\u96c6\u5927\u5c0f\u4e3a$62$\uff0c\u56e0\u6b64\u53ea\u80fd\u5957\u4e0a\u4e00\u4e2a$map/tree$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9000\u5316~~\u8fdb\u5316~~\u4e3a$O(n\\log|S|)$~~\uff0c\u7136\u800c\u5e38\u6570\u4e0d\u89c1\u5f97\u5c31\u6bd4\u500d\u589e\u4f18\u79c0\u3002~~  \n```cpp\n//\u663e\u7136\u8fd9\u4efd\u4ee3\u7801\u65e0\u6cd5\u901a\u8fc7\u6b64\u9898\u3002\u653e\u4e0a\u6765\u4ec5\u4f5c\u4e3a\u53c2\u8003\u3002\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#define f(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;i=-(~i))\nconst int neko=100010,seko=200010;\nint n,sa[neko],rk[neko],height[neko];\ntypedef int arr[seko];\narr link,len,pos,suf;\nint nex[seko][26],G[seko][26];\nchar s[neko];\nnamespace SAM\n{\n\tint las=1,cur,cnt=1,tp=0;\n\tvoid extend(char *s)\n\t{\n\t\tint x,p,q,clone;\n\t\tlink[1]=-1;\n\t\tf(i,1,n)\n\t\t{\n\t\t\tx=s[i]-'a',cur=++cnt;\n\t\t\tlen[cur]=len[las]+1,pos[cur]=n-i+1,suf[cur]=1;\n\t\t\t//printf(\"qwq %d %d %d\\n\",cur,pos[cur],col[cur]);\n\t\t\tfor(p=las;p!=-1&&!nex[p][x];p=link[p])nex[p][x]=cur;\n\t\t\tif(p==-1)link[cur]=1;\n\t\t\telse \n\t\t\t{\n\t\t\t\tq=nex[p][x];\n\t\t\t\tif(len[q]==len[p]+1)link[cur]=q;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tclone=++cnt;\n\t\t\t\t\tlen[clone]=len[p]+1,link[clone]=link[q],pos[clone]=pos[q];\n\t\t\t\t\tmemcpy(nex[clone],nex[q],sizeof nex[q]);\n\t\t\t\t\tfor(;p!=-1&&nex[p][x]==q;p=link[p])nex[p][x]=clone;\n\t\t\t\t\tlink[cur]=link[q]=clone;\n\t\t\t\t}\n\t\t\t}las=cur;\n\t\t}\n\t}\n\tvoid dfs(int u)\n\t{\n\t\tif(suf[u])++tp,rk[sa[tp]=pos[u]]=tp;\n\t\t//printf(\"orz %d %d %d\\n\",u,link[u],pos[u]);\n\t\tfor(int v:G[u])if(v)dfs(v);\n\t}\n}\nnamespace SA\n{\n\tusing namespace SAM;\n\tvoid getsa(char *s)\n\t{\n\t\tstd::reverse(s+1,s+n+1),extend(s),std::reverse(s+1,s+n+1);\n\t\tf(i,2,cnt)G[link[i]][s[pos[i]+len[link[i]]]-'a']=i;\n\t\tdfs(1);\n\t}\n\tvoid getheight(char *s)\n\t{\n\t\tint ans=0,x;\n\t\tf(i,1,n)\n\t\t{\n\t\t\tif(ans)--ans;\n\t\t\tx=sa[rk[i]-1];\n\t\t\tif(x)\n\t\t\tf(j,ans,n-i+1)if(s[x+j]!=s[i+j])\n\t\t\t{height[rk[i]]=ans=j;break;}\n\t\t\t//printf(\"%d %d %d\\n\",x,i,ans);\n\t\t}\n\t}\n}\nint main()\n{\n\tfreopen(\"SA.in\",\"r\",stdin);\n\tfreopen(\"SA.out\",\"w\",stdout);\n\tusing namespace SA;\n\tscanf(\"%s\",s+1),n=strlen(s+1);\n\tgetsa(s),getheight(s);\n\tf(i,1,n)printf(\"%d%c\",sa[i],i^iend?' ':'\\n');\n\tf(i,2,n)printf(\"%d%c\",height[i],i^iend?' ':'\\n');\n\treturn 0;\n}\n\n```\n$P.S.$  \nhttps://www.luogu.org/blog/teafrogsf/post-LSTAM  \nhttps://www.luogu.org/blog/teafrogsf/post-SA  \n\u6b22\u8fce\u6765\u6211\u7684\u535a\u5ba2\u627e\u5230\u6709\u5173$SAM,SA$\u7684\u8be6\u7ec6\u5185\u5bb9\u3002  ",
        "postTime": 1553085141,
        "uid": 7020,
        "name": "teafrogsf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u88f8\u7684SA\u6a21\u677f\u9898\uff0c\u4e0d\u8fc7\u5f00\u59cb\u88ab\u5361TLE\u6210\u72d7\u4e86\uff0c\u4e8e\u662f\u72c2\u4f18\u5316\u5230\u6781\u81f4\uff01\n\n\u4e0d\u4f1aDC3\u7b97\u6cd5\uff0c\u53ea\u597d\u500d\u589e\u4e86\u3002\u3002\u3002\n\n\u5199\u5b8c\u770b\u4e86\u4e0b\uff0c\u8c8c\u4f3c\u662f\u5bf9\u697c\u4e0b\u4ee3\u7801\u7684\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u76ee\u6d4b\u8dd1\u7684\u8fd8\u662f\u5f88\u5feb\u7684\u3002\n\n\u5177\u4f53\u7b97\u6cd5\u6d41\u7a0b\u767e\u5ea6\u6709\u4e00\u5927\u5806\u5c31\u4e0d\u5728\u6b64\u8d58\u8ff0\u4e86\u3002\u8c08\u8c08\u600e\u4e48\u7834TLE\uff01\n\n\u5f00\u59cbTLE\u4e3b\u8981\u662f\u6ca1\u6ce8\u610f\u5230\u6c42rank\u6570\u7ec4\u65f6\u5019\uff0c\u5bf9\u4e8e\u6ee1\u8db3(rk[p][sa[q][i]]!=rk[p][sa[q][i-1]] || rk[p][sa[q][i]+k]!=rk[p][sa[q][i-1]+k])\u7684\u6570\u76ee>=n-1\u5c31\u53ef\u4ee5\u4e0d\u7ee7\u7eed\u6392\u5e8f\u76f4\u63a5\u8df3\u51fa\u7ed3\u675f\u4e86\uff0c\u4e5f\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u3002\u8fd9\u6837\u53ef\u4ee5\u7701\u5f88\u591a\u65f6\u95f4\uff0c\u5c31\u4eceTLE\u8f6cAC\u5566~\n\u53e6\u5916\u6211\u4e5f\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c0f\u4f18\u5316\u4f46\u662f\u5bf9\u590d\u6742\u5ea6\u6574\u4f53\u5f71\u54cd\u4e0d\u5927\u3002\n\n\u53e6\u5916\u6ce8\u610f\u672c\u9898\u4e0e\u5176\u4ed6\u67d0\u4e9bOJ\u4e0a\u63cf\u8ff0\u4e0d\u4e00\u6837\uff1a**\u201c\u5305\u542b\u5927\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u6216\u6570\u5b57\u201d**,\u4e0d\u4ec5\u4ec5\u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u800c\u4e14\u8303\u56f4\u662f**10^6**\uff0c\u8981\u4ed4\u7ec6\u3002\n\n\n\u9644\u4ee3\u7801\uff1a\n\n#prag\\\n\n\n \n```cpp\nma GCC optimize(\"O3\")\n#include<bits/stdc++.h>\nusing namespace std;\nint n,p=1,q=0,cntx;\nchar s[1000005];int w[125];\nint sum[105][1000005],sa[2][1000005],rk[2][1000005];\ninline void write(int x)  \n{\n    int num=0;char c[15];\n    while(x)c[++num]=(x%10)+48,x/=10;\n    while(num)putchar(c[num--]);\n    putchar(' ');\n}\nint main()\n{\n    gets(s);\n    n=strlen(s);\n    int v=0;\n    for(int i='0';i<='9';i++)w[i]=v++;\n    for(int i='A';i<='Z';i++)w[i]=v++;\n    for(int i='a';i<='z';i++)w[i]=v++;\n    ++cntx;\n    for(int i=0;i<n;i++)++sum[cntx][w[s[i]]];\n    for(int i=1;i<v;i++)sum[cntx][i]+=sum[cntx][i-1];\n    for(int i=0;i<n;i++)sa[0][--sum[cntx][w[s[i]]]]=i;\n    rk[0][sa[0][0]]=0;\n    for(int i=1;i<n;i++)rk[0][sa[0][i]]=rk[0][sa[0][i-1]]+(s[sa[0][i]]!=s[sa[0][i-1]]);\n    for(int k=1;k<(n>>1);k<<=1)\n    {\n        int t=p;\n        p=q;\n        q=t;\n        ++cntx;\n        for(int i=0;i<n;i++)++sum[cntx][rk[p][i]];\n        for(int i=1;i<=rk[p][sa[p][n-1]];i++)sum[cntx][i]+=sum[cntx][i-1];\n        for(int i=n-1;i>=0;i--)if(sa[p][i]>=k)sa[q][--sum[cntx][rk[p][sa[p][i]-k]]]=sa[p][i]-k;\n        for(int i=n-k;i<n;i++)sa[q][--sum[cntx][rk[p][i]]]=i;\n        rk[q][sa[q][0]]=0;\n        int tot=0;\n        for(int i=1;i<n;i++)\n        {\n            bool t=(rk[p][sa[q][i]]!=rk[p][sa[q][i-1]] || rk[p][sa[q][i]+k]!=rk[p][sa[q][i-1]+k]);\n            rk[q][sa[q][i]]=rk[q][sa[q][i-1]]+t;\n            tot+=t;\n        }\n        if(tot>=n-1)break;\n    }\n    for(int i=0;i<n;i++)write(sa[q][i]+1);\n    return 0;\n}\n```",
        "postTime": 1506877537,
        "uid": 16817,
        "name": "winmt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u7adf\u7136\u6ca1\u6709\u540e\u7f00\u6811\u7684\u9898\u89e3\n\n \u540e\u7f00\u6811\u8bb2\u89e3\u8bf7\u770b[EternalAlexander\u7684\u8bb2\u89e3](https://www.luogu.com.cn/blog/EternalAlexander/xuan-ku-hou-zhui-shu-mo-shu)\n \n \u6216\u8005[\u6211\u7684\u83dc\u9e21\u8bb2\u89e3](https://www.luogu.com.cn/blog/Polarisluogu/hou-zhui-shuo-ju-jie-gou-mo-shu-zong-jie)\n \n \u975e\u5e38\u660e\u663e\u6784\u9020\u51fa\u540e\u7f00\u6811\u540e\uff0c\u4ed6\u7684$dfs$\u5e8f\u5c31\u662f\u540e\u7f00\u6392\u5e8f\u7684\u7ed3\u679c\n \n \u7531\u4e8e\u5b57\u7b26\u96c6\u8f83\u5927\uff0c\u6240\u4ee5\u540e\u7f00\u6811\u7684\u6548\u7387\u4e0d\u9ad8\n \n \u53ef\u4ee5\u7528\u4e00\u4e9b\u5947\u6280\u6deb\u5de7\u4f18\u5316\u4e00\u4e0b\uff0c\u672c\u4eba\u4e0d\u4f1a\n \n \u4e8e\u662f\u6709\u4ee3\u7801\n \n ```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<queue>\n#include<cctype>\n#include<set>\n#include<map>\n#define LL long long\n#define M 2000005\n#define N 50010\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int mod=1e9+7;\nconst double eps=1e-6;\ninline int read(){\n\tint f=1,x=0;char s=getchar();\n\twhile(!isdigit(s)){if (s=='-')f=-1;s=getchar();}\n\twhile(isdigit(s)){x=(x<<1)+(x<<3)+(s^48);s=getchar();}\n\treturn x*f;\n}\nmap<char,int>st;\nint tot,n,ranks[M],rk,t,num;\nstruct Suffix_Tree{\n\tint link[M],s[M],len[M],start[M],ch[M][71],rem,now,last;\n\tSuffix_Tree(){tot=1,n=rem=0,now=1,len[0]=inf;}\n\tinline int New(int st,int le){link[++tot]=1,start[tot]=st,len[tot]=le;return tot;}\n\tinline void extend(int x){\n\t\ts[++n]=x,rem++;\n\t\tfor (int last=1;rem;){\n\t\t\twhile (rem>len[ch[now][s[n-rem+1]]])\n\t\t\t\trem-=len[now=ch[now][s[n-rem+1]]];\n\t\t\tint &v=ch[now][s[n-rem+1]],c=s[start[v]+rem-1];\n\t\t\tif (!v||x==c){\n\t\t\t\tlink[last]=now,last=now;\n\t\t\t\tif (!v) v=New(n,inf);\n\t\t\t\telse break;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint u=New(start[v],rem-1);\n\t\t\t\tch[u][c]=v,ch[u][x]=New(n,inf);\n\t\t\t\tstart[v]+=rem-1,len[v]-=rem-1;\n\t\t\t\tlink[last]=v=u;last=u;\n\t\t\t}\n\t\t\tif (now==1) rem--;\n\t\t\telse now=link[now];\n\t\t}\n\t}\n\tinline void adjust(int x,int dep){\n\t\tint cnt=0;\n\t\tfor (int i=0;i<=num;i++)\n\t\t\tif (ch[x][i]) ++cnt,adjust(ch[x][i],dep+len[ch[x][i]]);\n\t\tif (!cnt) len[x]=t-start[x];\n\t}\n\tinline void dfs(int x,int dep){\n\t\tint cnt=0;\n\t\tfor (int i=0;i<=num;i++) \n\t\t\tif (ch[x][i]) ++cnt,dfs(ch[x][i],dep+len[ch[x][i]]);\n\t\tif (!cnt) ranks[++rk]=t-dep;\n\t}\n}tree;\nchar str[M],tmp[M];\nsigned main(void){\n\tscanf(\"%s\",str+1);\n\tt=strlen(str+1);\n\tfor (int i=1;i<=t;i++) tmp[i]=str[i];\n\tsort(tmp+1,tmp+t+1);\n\tfor (int i=1;i<=t;i++){\n\t\tif (tmp[i]!=tmp[i-1]) ++num;\n\t\tst[tmp[i]]=num;\n\t}\n\tfor (int i=1;i<=t;i++) tree.extend(st[str[i]]);\n\ttree.extend(0);rk=-1;\n\ttree.adjust(1,0);\n\ttree.dfs(1,0);\n\tfor (int i=1;i<=t;i++) printf(\"%d \",ranks[i]);\n\treturn 0;\n}\n\t\t\t\t\t\t\t\t\t\t\n```\n",
        "postTime": 1576730006,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u5f00\u59cb\u809d\u540e\u7f00\u6570\u7ec4\uff0c\u7136\u800c\u5f04\u4e86\u534a\u5929\u591a\u8fd8\u662f\u5bf9\u6a21\u7248\u4e00\u77e5\u534a\u89e3\u3001\u3001\n\n---\n# \u540e\u7f00\u6570\u7ec4\u57fa\u672c\u5b9a\u4e49\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\u4e00\u4e2a\u6982\u5ff5\uff1a**\u4ec0\u4e48\u662f\u540e\u7f00\u6570\u7ec4**\u3002\n\n### \u540e\u7f00\u6570\u7ec4\n\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u50a8\u5b58\u540e\u7f00\u7684\u6570\u7ec4\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6570\u7ec4$sa[i]$\u8bb0\u5f55**\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u5f00\u59cb\u4f4d\u7f6e**\u3002\u8bb0\u4f4f\u8fd9\u4e2a\u5b9a\u4e49\uff0c\u5bf9\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u7406\u89e3\u5f88\u91cd\u8981\u3002\n\n### \u540d\u6b21\u6570\u7ec4\n\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6570\u7ec4\u7406\u89e3\u4e3a\u540e\u7f00\u6570\u7ec4\u7684\u9006\u8fd0\u7b97\u3002$rank[i]$\u8868\u793a**\u4ee5i\u4e3a\u5f00\u5934\u7684\u540e\u7f00\u5728\u6240\u6709\u540e\u7f00\u91cc\u9762\u7684\u6392\u540d**\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u540e\u7f00\u6570\u7ec4\u5c31\u662f\u6392\u540d\u4e3ai\uff0c\u540d\u6b21\u6570\u7ec4\u5c31\u662fi\u7684\u6392\u540d\u3002\n\n\u501f\u52a9\u8fd9\u5f20\u56fe\u80fd\u591f\u66f4\u52a0\u6e05\u6670\u5730\u7406\u89e3\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/72446.png)\n\n\uff08\u56fe\u7247\u6765\u6e90\uff1a\u7f57\u7a57\u9a9e\u300a\u540e\u7f00\u6570\u7ec4\u2014\u2014\u5904\u7406\u5b57\u7b26\u4e32\u7684\u6709\u529b\u5de5\u5177\u300b\uff09\n\n# \u540e\u7f00\u6570\u7ec4\u7684\u601d\u8def\n\u5f04\u6e05\u695a\u6982\u5ff5\u4ee5\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u601d\u8def\u4e86\u3002\u7531\u4e8e\u83dc\u9e21\u672c\u4eba\u6ca1\u6709\u5b66\u4f1a**DC3**\uff0c\u5728\u8fd9\u91cc\u4ecb\u7ecd**\u500d\u589e\u7b97\u6cd5**\u3002\n\n\u500d\u589e\u7b97\u6cd5\u7684\u4e3b\u8981\u601d\u8def\u5c31\u662f\u5229\u7528\u500d\u589e\u5feb\u901f\u8fdb\u884c\u6392\u5e8f\u5e76\u6c42\u51fa\u6392\u540d\u3002\u6211\u4eec\u6bcf\u6b21\u9488\u5bf9\u957f\u5ea6\u4e3a$2^{k}$\u7684\u540e\u7f00\u8fdb\u884c\u6392\u5e8f\uff0c\u5229\u7528\u4e0a\u4e00\u6b21\u8ba1\u7b97\u7684$2^{k-1}$\u7684\u540e\u7f00\u7684\u6392\u540d\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5feb\u901f\u5730\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\u3002\n\n\u5177\u4f53\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/72450.png)\n\n\uff08\u56fe\u7247\u6765\u6e90\uff1a\u7f57\u7a57\u9a9e\u300a\u540e\u7f00\u6570\u7ec4\u2014\u2014\u5904\u7406\u5b57\u7b26\u4e32\u7684\u6709\u529b\u5de5\u5177\u300b\uff09\n\n\u5f53\u957f\u5ea6\u8d85\u8fc7n\u7684\u65f6\u5019\uff0c\u5f88\u663e\u7136\u6ca1\u6709\u6bd4\u8fd9\u4e2a\u540e\u7f00\u957f\u5ea6\u66f4\u957f\u7684\u540e\u7f00\u4e86\uff0c\u518d\u6392\u5e8f\u4e5f\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u8f93\u51fa\u3002\n\n\u4f46\u662f\uff0c\u53ef\u4e0d\u53ef\u4ee5\u518d\u4f18\u5316\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u8981\u6bcf\u4e00\u4e2a\u540e\u7f00\u7684\u6392\u540d\u90fd\u4e0d\u4e00\u6837\uff0c\u5c31\u4ee3\u8868\u5df2\u7ecf\u6392\u5e8f\u7ed3\u675f\u4e86\u3002\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u662f$st[i...i+2^{k-1}-1]$\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u662f$st[i+2^{k-1}...i+2^{k}-1]$\uff0c\u5982\u679c\u6bcf\u4e00\u4e2a\u540e\u7f00\u7684\u6392\u540d\u90fd\u4e0d\u4e00\u6837\uff0c\u5c31\u4ee3\u8868\u7740\u7b2c\u4e00\u5173\u952e\u5b57\u90fd\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u6bcf\u6b21\u6392\u5e8f\u7684\u7ed3\u679c\u5c31\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u7b2c\u4e00\u5173\u952e\u5b57\u7684\u6392\u540d\u3002\u6240\u4ee5\u4e0d\u9700\u8981\u7ee7\u7eed\u6392\u5e8f\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n# \u540e\u7f00\u6570\u7ec4\u7684\u5b9e\u73b0\n\u4e86\u89e3\u4e86\u601d\u8def\u4ee5\u540e\uff0c\u6211\u4eec\u5206\u5757\u770b\u4ee3\u7801\u5982\u4f55\u5b9e\u73b0\u3002\n\n\u63d0\u793a\uff1a\u4e0b\u9762\u7684\u5185\u5bb9\u4e2d\n- r[i]\u8868\u793a\u540d\u6b21\u6570\u7ec4\n- sa[i]\u8868\u793a\u540e\u7f00\u6570\u7ec4\n- p[i]\u7528\u4e8e\u6392\u5e8f\n- y[i]\u8868\u793a\u5f53\u524d\u7b2c\u4e8c\u5173\u952e\u5b57\u5df2\u7ecf\u6392\u597d\u5e8f\u65f6\u7b2ci\u540d\u7b2c\u4e8c\u5173\u952e\u5b57\u6240\u5bf9\u5e94\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u4f4d\u7f6e\n- w[i]\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u5faa\u73af\u5229\u7528\n\t1. \u6392\u5e8f\u65f6\uff1a\u8868\u793a\u5f53\u524d\u6392\u5e8f\u4e2d\u6bcf\u4e00\u4e2a\u540e\u7f00\u7684\u6392\u540d\n   2. \u6392\u5e8f\u540e\uff1a\u8868\u793a\u6392\u5e8f\u524d\u7684\u6392\u540d\n\n---\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u8f93\u5165\u8fdb\u6765\u7684\u539f\u59cb\u4e32\u8fdb\u884c\u4e00\u6b21\u57fa\u6392\uff0c\u5c06\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u597d\u5e8f\uff0c\u65b9\u4fbf\u63a5\u4e0b\u6765\u7684\u6392\u5e8f\u3002\u5982\u4f55\u8fdb\u884c\u57fa\u6392\u5462\uff1f\n\n\u6a21\u62df\u5373\u53ef\u3002\n```cpp\nmemset(p,0,sizeof(p));\nfor(int i=1;i<=n;i++)r[i]=s[i],p[r[i]]++;\nfor(int i=1;i<=m;i++)p[i]+=p[i-1];\nfor(int i=n;i>=1;i--)sa[p[r[i]]--]=i;\n```\n---\n\u7528\u5faa\u73af\u6a21\u62df\u500d\u589e\n```cpp\nfor(int k=1;k<n;k<<=1)\n```\n---\n\u53ef\u4ee5\u7531\u4e0a\u6587\u770b\u51fa\uff0c\u82e5\u6ca1\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5219\u8865\u96f6\u3002\u800c\u96f6\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u80af\u5b9a\u662f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u4f18\u5148\u5c06\u9700\u8981\u8865\u96f6\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u653e\u8fdb\u7b2c\u4e8c\u5173\u952e\u5b57\u5df2\u7ecf\u6392\u597d\u5e8f\u3001\u9700\u8981\u5bf9\u7b2c\u4e00\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\u7684\u6570\u7ec4\u3002\n```cpp\nint len=0;for(int i=n-k+1;i<=n;i++)y[++len]=i;\n```\n---\n\u63a5\u4e0b\u6765\uff0c\u5c06\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u597d\u987a\u5e8f\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u4f9d\u6b21\u653e\u5165\u6392\u5e8f\u6570\u7ec4\u3002\n```cpp\nfor(int i=1;i<=n;i++)if(sa[i]>k)y[++len]=sa[i]-k;\n```\n---\n\u6a21\u62df\u57fa\u6392\u3002\n\n\u8bb0\u5f97\uff0c\u6309\u7167\u4e0a\u4e00\u6b21\u7684\u6392\u540d\u8fdb\u884c\u6392\u5e8f\u3002\n```cpp\nfor(int i=1;i<=n;i++)w[i]=r[y[i]],p[w[i]]++;\nfor(int i=1;i<=m;i++)p[i]+=p[i-1];\nfor(int i=n;i>=1;i--)sa[p[w[i]]--]=y[i];\n```\n---\nw\u6570\u7ec4\u6309\u7167\u5b9a\u4e49\u53cd\u590d\u4f7f\u7528\n```cpp\nfor(int i=1;i<=n;i++)w[i]=r[i];\n```\n---\n\u5c06\u65b0\u7684\u6392\u540d\u8d4b\u5230r\u6570\u7ec4\u4e2d\u3002\u6ce8\u610f\uff0c\u6709\u53ef\u80fd\u6709\u5e76\u5217\u6392\u540d\u3002\n```cpp\nlen=1;r[sa[1]]=1;\nfor(int i=2;i<=n;i++){if(!pd(sa[i],sa[i-1],k))len++;r[sa[i]]=len;}\n```\n---\n\u7279\u5224\u4e00\u4e0b\u3002\n```cpp\nif(len==n)break;m=len;\n```\n---\n\u8f93\u51fa\n```cpp\nfor(int i=1;i<=n;i++)printf(\"%d \",sa[i]);\n```\n---\n# \u5b8c\u6574\u7248\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nchar s[1100010];\nint sa[1100010],r[1100010],p[1100010],y[1100010],w[1100010];\nbool pd(int n1,int n2,int k){return w[n1]==w[n2]&&w[n1+k]==w[n2+k];}\nvoid find(int n,int m)\n{\n\tmemset(p,0,sizeof(p));\n\tfor(int i=1;i<=n;i++)r[i]=s[i],p[r[i]]++;\n\tfor(int i=1;i<=m;i++)p[i]+=p[i-1];\n\tfor(int i=n;i>=1;i--)sa[p[r[i]]--]=i;\n\tfor(int k=1;k<n;k<<=1)\n\t{\n\t\tint len=0;for(int i=n-k+1;i<=n;i++)y[++len]=i;\n\t\tfor(int i=1;i<=n;i++)if(sa[i]>k)y[++len]=sa[i]-k;\n\t\tmemset(p,0,sizeof(p));\n\t\tfor(int i=1;i<=n;i++)w[i]=r[y[i]],p[w[i]]++;\n\t\tfor(int i=1;i<=m;i++)p[i]+=p[i-1];\n\t\tfor(int i=n;i>=1;i--)sa[p[w[i]]--]=y[i];\n\t\tfor(int i=1;i<=n;i++)w[i]=r[i];\n\t\tlen=1;r[sa[1]]=1;\n\t\tfor(int i=2;i<=n;i++){if(!pd(sa[i],sa[i-1],k))len++;r[sa[i]]=len;}\n\t\tif(len==n)break;m=len;\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d \",sa[i]);\n}\nint main()\n{\n\tscanf(\"%s\",s+1);int n=strlen(s+1);\n\tfind(n,200);\n\treturn 0;\n}\n```\n\u611f\u8c22\u89c2\u770b\u3002",
        "postTime": 1565922466,
        "uid": 44157,
        "name": "zhangjianweivv",
        "ccfLevel": 0,
        "title": "\u540e\u7f00\u6570\u7ec4\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "# SA\u65b0\u601d\u8def\n# \u6211\u4eec\u62ffHash,\u4e8c\u5206,sort\u5b9e\u73b0\u4e00\u4e2aSA\n###### \u867d\u7136\u4e0d\u662f\u6ee1\u5206\n### \u601d\u8def\uff1a\n\u5148\u524d\u7f00Hash,\u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u5b57\u4e32\u7684Hash\u503c\\\n\u5728\u6bd4\u8f83\u65f6,\u4f4d\u7f6ep,q,\u4e8c\u5206\u6c42\u51fa\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u4e3alen\\\nreturn s[p+len-1]<s[q+len-1]\u5373\u53ef\n###### Hash\u8bf7\u8bfb\u8005\u4e0a\u7f51\u67e5\u8be2\n\u8d34\u4e0a\u4ee3\u780170\u5206\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long read(long long __mod=LLONG_MAX){char __s=getchar();long long __ans=0;short __p=1;while(__s<'0'||__s>'9'){if(__s=='-')__p=-1;__s=getchar();}while(__s>='0'&&__s<='9')__ans=((__ans<<1)%__mod+(__ans<<3)+__s-'0')%__mod,__s=getchar();return __ans*__p;}\nvoid print(int __x,const char __y='\\n'){printf(\"%d%c\",__x,__y);}\n#define maxn 1000010\nint n,m;\nunsigned long long f[1000005],p[1000005];\nchar s[1000005];\nint len;\nvoid init(char *s)//\u521d\u59cb\u5316HASH\n{\n\tp[0]=1;\n\tfor(int i=1;i<=len;i++)\n\tf[i]=f[i-1]*131+s[i]-'a'+1,p[i]=p[i-1]*131;\n}\nunsigned long long Hash(int l,int r)//\u6c42Hash\u503c\n{\n\treturn f[r]-f[l-1]*p[r-l+1];\n}\nint ans[1000005];\nbool cmp(int x,int y)\n{\n\tint l=1,r=len-y+1;\n\twhile(l<=r)\n\t{\n\t\tint mid=(l+r)>>1;\n\t\tif(Hash(x,x+mid-1)==Hash(y,y+mid-1))//\u4f4d\u7f6ex~x+mid-1\u662f\u5426=y~y+mid-1\n      l=mid+1;\n\t\telse r=mid-1;\n\t}\n\treturn s[x+r]<s[y+r];\n}\nint main()\n{\n\tgets(s+1);\n\tlen=strlen(s+1);\n\tinit(s);\n\tfor(int i=1;i<=len;i++)ans[i]=i;\n\tsort(ans+1,ans+len+1,cmp);\n\tfor(int i=1;i<=len;i++)print(ans[i],' ');\n}\n\n```\n",
        "postTime": 1557391233,
        "uid": 100325,
        "name": "peterwuyihong",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u540e\u7f00\u81ea\u52a8\u673a\u3001\n\nhttp://www.cnblogs.com/rrsb/p/8276131.html\n\n\u52a0\u5165\u8282\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u4ee3\u8868\u540e\u7f00\u3002\u5efa\u5b8c\u4ee5\u540e\u91cd\u5efa\u4e00\u4e0b\u540e\u7f00\u6811\u5728\u4e0a\u9762dfs\u5c31\u53ef\u4ee5\u4e86= =\uff08\u6ce8\u610f\u91cd\u5efa\u7684\u65f6\u5019\u662f\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u4e0d\u662f\u62d3\u6251\u5e8f\n\n\n\u7531\u4e8e\u7a7a\u95f4\u7684\u5173\u7cfb\uff0c\u7528map\n\n\u5c31\u8fd9\u6837\u8fc7\u4e86\u3002\n\n\n\n\n\n```cpp\n    #include<bits/stdc++.h>\n    #define N 2000007\n    using namespace std;\n    struct Node{\n        int fa,val,ri;\n        map<int,int> c;\n    }T[N];\n    int tot=1,last=1,np,nq,q,p[N],ans[N],tog,head[N],net[N],fall[N],len,c[67],id[N],Tot;\n    char ch[N];\n    inline int gs(char c){\n        if ('0'<=c&&c<='9') return c-'0';\n        if ('A'<=c&&c<='Z') return c-'A'+10;\n        if ('a'<=c&&c<='z') return c-'a'+36;  \n    }\n    void write(int x) {\n        if (x<10) {putchar('0'+x); return;} write(x/10),putchar('0'+x%10);\n    }\n    inline void writel(int x){\n        write(x),putchar(' ');\n    }\n    inline void Sam(int x,int y){\n        np=++tot;\n        T[np].ri=T[np].val=T[last].val+1;\n        for (;last&&!T[last].c[x];last=T[last].fa) T[last].c[x]=np;\n        if (!last) T[np].fa=1;\n        else {\n            q=T[last].c[x];\n            if (T[last].val+1==T[q].val) T[np].fa=q;\n            else {\n                nq=++tot; T[nq]=T[q];\n                T[nq].val=T[last].val+1;\n                T[q].fa=T[np].fa=nq;\n                for(;last&&T[last].c[x]==q;last=T[last].fa) T[last].c[x]=nq;\n            }\n        }\n        p[np]=y; last=np; \n    }\n    inline void add(int x,int y) {\n        fall[++Tot]=y; net[Tot]=head[x]; head[x]=Tot;\n    }\n    void dfs(int x){\n        if (p[x]) ans[++tog]=p[x];\n        for (int i=head[x];i;i=net[i]) dfs(fall[i]);\n    }\n    int main() {\n    //    freopen(\"b.in\",\"r\",stdin);\n        scanf(\"%s\",ch); len=strlen(ch); \n        for (int i=len-1;~i;i--)\n          ch[i]=gs(ch[i]),Sam(ch[i],i+1);\n        for (int i=tot;i;i--) c[ch[len-T[i].ri+T[T[i].fa].val]]++;\n        for (int i=1;i<=64;i++) c[i]+=c[i-1];\n        for (int i=1;i<=tot;i++) id[c[ch[len-T[i].ri+T[T[i].fa].val]]--]=i;\n        for (int i=tot;i;i--) add(T[id[i]].fa,id[i]);\n        dfs(1);\n        for (int i=1;i<=len;i++) writel(ans[i]);\n        return 0;\n}\n```",
        "postTime": 1515809867,
        "uid": 53193,
        "name": "\u6b87\u96ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "### $$\\texttt{SA / rank}$$\n\n\u8fd9\u91cc\u8bb2\u6700\u667a\u969c\u4e5f\u6700\u6162\u7684\u65b9\u6cd5 (\u524d\u63d0\u662f\u4ee5\u53ca\u628a\u500d\u589e\u6392\u5e8f\u770b\u4e86\u4e00\u4e0b,\u5bf9\u5404\u4e2a\u6570\u7ec4\u7684\u5b9a\u4e49\u6709\u4e86\u4e00\u5b9a\u7684\u4e86\u89e3),\u6211\u4eec\u53ea\u6c42 $rank$ \u6765\u63a8\u5bfc $SA$\u3002\n\n\u9996\u5148\u7406\u89e3 $O(N^2 \\log N)$ \u548c $O(N^2)$ \u7684\u65b9\u6cd5,\u663e\u7136\u7684\u5feb\u6392\u548c\u57fa\u6570\u6392\u5e8f\u3002\u5982\u679c\u4e0d\u61c2\u57fa\u6570\u6392\u5e8f\u53ef\u4ee5\u6682\u65f6\u7559\u4e0b\u3002\n\n\u7136\u540e\u662f\u500d\u589e\u3002\n\n![](https://i.loli.net/2019/01/07/5c32dfe9da916.png)\n\n\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a $rank_{i,1}$ ,\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a $rank_{i+2^{k-1},1}$ \u8fd9\u662f\u6bd4\u8f83\u663e\u7136\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u6bcf\u4e00\u6b21\u8981\u8fdb\u884c\u57fa\u6570\u6392\u5e8f,\u6392 **\u4e24\u4e2a\u5173\u952e\u5b57**\u3002\u90a3\u4e48\u8fd9\u6837\u5b50\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(N \\log N)$\u3002\n\n\u6211\u4e3b\u8981\u8bb2\u4e00\u4e0b\u5982\u4f55\u6392\u5e8f\u3002\n\n\u9996\u5148\u57fa\u6570\u6392\u5e8f\u5c31\u662f\u8bf4,\u4e00\u4e2a\u6570\u7ec4 $pus_i$,\u5b83\u7684 **\u5173\u952e\u5b57** \u79f0\u4e3a $key_i$ ($key_i=pus_i \\mod 10$),\u5b83\u5728 **\u539f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e** \u79f0\u4e3a $place_i$\u3002\u90a3\u4e48\u6211\u4eec $10$ \u4e2a\u6808 ($q_{0\\_9}$)\u3002\u5047\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u6570\u5b57 $223$ , \u90a3\u4e48\u5b83\u5c06\u4f1a\u88ab\u4e22\u5230 $q_2$ (\u4e22\u5230 $q_{key_i}$),\u7136\u540e\u628a $place_i$ \u548c $23$ ($pus_i \\div 10$) \u4e22\u8fdb\u53bb\u3002\u6301\u7eed\u8fd9\u6837\u5b50\u6392\u5e8f,\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6709\u5e8f\u7684 $place_i$,\u7136\u540e\u6309\u7167\u539f\u6570\u7ec4\u6765\u786e\u5b9a\u987a\u5e8f\u3002\n\n\u4e0a\u9762\u7684\u4e1c\u897f\u6ca1\u542c\u61c2\u6ca1\u6709\u5173\u7cfb,\u53ef\u4ee5\u81ea\u5df1\u770b\u535a\u5ba2\u3002\n\n\u5047\u5982\u4f60\u5df2\u7ecf\u4f1a\u4e86\u4e0a\u8ff0\u7684\u4e00\u4e2a\u5173\u952e\u5b57\u7684\u57fa\u6570\u6392\u5e8f,\u4f60\u5982\u4f55\u5728 $O(N)$ \u7684\u65f6\u95f4\u5185\u628a\u4e24\u4e2a\u5173\u952e\u5b57\u7684\u6570\u7ec4\u6392\u5e8f\u597d?\n\n$$\\texttt{\u6876+\u94fe\u8868(\u94fe\u5f0f\u524d\u5411\u661f)+\u57fa\u6570\u6392\u5e8f}$$\n\n\u4e0d\u8981\u79bb\u5f00\u4e0d\u8981\u79bb\u5f00,\u4e0a\u8ff0\u65b9\u6cd5\u5341\u5206\u667a\u969c\u3002\n\n\u6211\u4eec\u628a $rank_{i,1}$ \u4e22\u5230\u4e00\u4e2a\u6876\u91cc,\u6876\u8bb0\u5f55\u4e00\u4e0b\u4f4d\u7f6e (\u4e5f\u5c31\u662f $bucket_{rank_{i,1}}=i$)\u3002\u5982\u679c\u6709\u91cd\u590d\u7684 $rank_{j,1}$ ($rank_{i,1}=rank_{j,1}$),\u90a3\u4e48\u5c31\u7528\u94fe\u8868\u8fde\u8d77\u6765 (\u4e5f\u5c31\u662f $add(bucket_{rank_{j,1}},j)$)\u3002\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u6392\u5e8f\u597d\u4e86\u7b2c\u4e00\u5173\u952e\u5b57,\u65f6\u95f4\u590d\u6742\u5ea6 $O(N)$\u3002\n\n\u7136\u540e\u6211\u4eec\u6392\u5e8f\u7b2c\u4e8c\u5173\u952e\u5b57,\u7528\u57fa\u6570\u6392\u5e8f (\u4e3a\u4ec0\u4e48\u4e0d\u7528\u6876\u6392? \u56e0\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u4ee5\u53ca\u628a\u7b2c\u4e8c\u5173\u952e\u5b57\u5206\u6210\u4e86\u5f88\u591a\u4e2a\u96c6\u5408,\u5982\u679c\u7528\u6876\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u70b8\u4e86)\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(N)$,\u8bb0\u5f97**\u53bb\u91cd**!!!! (\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6876\u5728 $O(N)$ \u7684\u590d\u6742\u5ea6\u5185\u5b9e\u73b0)\n\n\u6700\u540e? \u6c42 $SA$!\n\n```pascal\n// luogu-judger-enable-o2\nUses math;\n\nConst total=1000200;\n\nvar\n    sa,num,pus,copy,area,place,bucket,ranking:array[-1..total] of longint;\n    reach,from,next,cnt:array[-1..total] of longint;\n    queue:array[-1..10,-1..total,-1..2] of longint;\n    rank:array[-1..total,1..2] of longint;\n    log:array[-1..30] of longint;\n    i,n,tot,tail,border:longint;\n    s:ansistring;\n    j:char;\n\nprocedure add(l,r:longint); // \u94fe\u5f0f\u524d\u5411\u661f\nbegin inc(tot); from[tot]:=l; reach[tot]:=r; next[tot]:=cnt[l]; cnt[l]:=tot; end;\n\nprocedure Radix;\nvar\n    i,j,l,k,rank,maxn:longint;\n    s:string;\nbegin\n    maxn:=-maxlongint; rank:=0; pus[0]:=-666;\n    for i:=1 to tail do\n    begin // copy \u662f\u8f85\u52a9\u6570\u7ec4,ranking \u662f\u62ff\u6765\u53bb\u91cd\u7684\n        maxn:=max(pus[i],maxn); copy[i]:=pus[i]; place[i]:=i; ranking[copy[i]]:=maxlongint;\n    end; str(maxn,s);\n    for i:=1 to length(s) do // \u57fa\u6570\u6392\u5e8f\u5982\u4e0a\u8ff0\n    begin \n        for j:=1 to tail do\n        begin\n            k:=pus[j] mod 10; pus[j]:=pus[j] div 10; inc(queue[k,0,0]);\n            queue[k,queue[k,0,0],1]:=pus[j];\n            queue[k,queue[k,0,0],2]:=place[j];\n        end; k:=0;\n        for j:=0 to 9 do\n            for l:=1 to queue[j,0,0] do\n            begin\n                inc(k); pus[k]:=queue[j,l,1]; place[k]:=queue[j,l,2];\n                queue[j,l,1]:=0; queue[j,l,2]:=0; queue[j,0,0]:=0;\n            end;\n    end;\n    for i:=1 to tail do pus[i]:=copy[place[i]]; // \u5f97\u5230\u6392\u597d\u5e8f\u5217\u6570\u7ec4,\u7136\u540e\u7ed9\u4e88\u6392\u540d\n    for i:=1 to tail do begin if pus[i]<>pus[i-1] then inc(rank); ranking[pus[i]]:=rank; end; // \u7ed9\u4e88\u6392\u540d (\u7b49\u4e8e\u53bb\u91cd)\n    for i:=1 to tail do place[i]:=ranking[copy[i]]; // \u7ed9\u5b9a\u7b2c i \u4e2a\u4f4d\u7f6e (\u540c\u4e00\u5173\u952e\u5b57\u7684\u7b2c i \u4e2a\u7b2c\u4e8c\u5173\u952e\u5b57) \u7684\u6392\u540d\nend;\n\nprocedure Sort;\nvar i,j,k,l,maxn,number:longint;\nbegin\n    for i:=1 to n do inc(bucket[num[i]]); // \u5148\u628a\u4e00\u5f00\u59cb\u7684\u53ea\u6709\u4e00\u4e2a\u5173\u952e\u5b57\u7684\u6392\u4e00\u4e0b\u5e8f\n    for i:=1 to border do inc(bucket[i],bucket[i-1]); // \u6c42\u524d\u7f00\u548c\u6765\u8bb0\u5f55\u6392\u540d\n    for i:=1 to n do rank[i,1]:=bucket[num[i]]; // \u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\n    i:=0;\n    repeat\n        inc(i); tot:=0; number:=0;\n        for k:=1 to border do begin cnt[k]:=-1; bucket[k]:=0; end; // \u6e05\u7a7a\u94fe\u5f0f\u524d\u5411\u661f\u548c\u6876 (\u5176\u4f59\u7684\u80fd\u4e0d\u6e05\u7a7a\u5c31\u4e0d\u6e05\u7a7a)\n        for k:=1 to n do begin rank[k,2]:=0; if k+log[i]<=n then rank[k,2]:=rank[k+log[i],1]; end; // \u9020\u7b2c\u4e8c\u5173\u952e\u5b57,\u6ce8\u610f\u8d85\u754c\u7684\u90fd\u4e3a 0\n        for k:=1 to border do if bucket[rank[k,1]]>0 then add(bucket[rank[k,1]],k) else bucket[rank[k,1]]:=k; // \u628a\u7b2c\u4e00\u5173\u952e\u5b57\u76f8\u540c\u7684\u7528\u94fe\u8868\u8fde\u8d77\u6765\n        for k:=1 to border do\n        begin\n            if bucket[k]=0 then continue; \n            tail:=1; j:=cnt[bucket[k]]; pus[1]:=rank[bucket[k],2]; area[1]:=bucket[k]; // area \u4e3a\u4e22\u53bb\u57fa\u6570\u6392\u5e8f\u7684\u6570\u6240\u5728\u7684\u4f4d\u7f6e\n            while j<>-1 do begin inc(tail); area[tail]:=reach[j]; pus[tail]:=rank[reach[j],2]; j:=next[j]; end; // \u628a\u6240\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\u53d6\u51fa\u6765\u4e3a pus\n            if tail>1 then Radix else place[1]:=1; maxn:=0; // \u90a3\u4e2a if \u5f88\u91cd\u8981,\u5b83\u8bd5\u6211\u7684 LOJ AC\u7387\u6389\u4e86\u4e00\u534a\n            for j:=1 to tail do begin rank[area[j],1]:=place[j]+number; maxn:=max(maxn,rank[area[j],1]); end; // \u628a\u7b2c\u4e8c\u5173\u952e\u5b57\u7ed9\u4e88\u7684\u6392\u540d\u8d4b\u7ed9\u7b2c\u4e00\u5173\u952e\u5b57\n            number:=maxn; // \u672c\u6b21\u6700\u9ad8\u6392\u540d,\u7ed9\u4e0b\u4e00\u6b21\u6392\u5e8f\u7528\n        end;\n    until log[i]>n;\nend;\n\nbegin\n    filldword(rank,sizeof(rank) div 4,0);\n    for i:=1 to 25 do log[i]:=1 << (i-1); // \u9884\u5904\u7406 2^N\n    readln(s); n:=length(s); border:=-maxlongint div 843; // border \u4e3a\u6700\u5927\u7684\u6392\u540d,\u867d\u7136\u5230\u4e86\u540e\u9762 border=n,\u4f46\u662f\u4e00\u5f00\u59cb border=n+ord('z')\n    for i:=1 to n do begin num[i]:=ord(s[i]); border:=max(border,num[i]); end;\n    inc(border,n); Sort; // \u5f00\u59cb\u6392\u5e8f\n    for i:=1 to n do sa[rank[i,1]]:=i; // \u6c42 SA\n    for i:=1 to n do write(sa[i],' ');\nend.\n```\n\n\u7eb3\u5c3c~\u6211\u7684\u4ee3\u7801\u6bd4 $\\texttt{LOJ}$ \u7edf\u8ba1\u4e2d\u7684 $\\texttt{DC3}$ \u8fd8\u8981\u957f~\n\n\u6392\u5e8f\u5e38\u6570 $\\times 4$,\u57fa\u6570\u6392\u5e8f\u5e38\u6570 $\\times 5$,\u5bfc\u81f4\u6211\u7684\u8fd0\u7b97\u6b21\u6570\u5f88\u5927\u3002\n\n### $$\\texttt{Prefix}$$\n\n\u7531\u4e8e $Height$ \u592a\u96be\u542c\u4e86\u5c31\u6362\u4e86\u4e2a\u540d\u5b57\u3002\n\n$Prefix$ \u5b9a\u4e49\u4e3a\u6392\u540d\u540e\u7b2c $i$ \u4e2a\u4e32\u4e0e\u7b2c $i-1$ \u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00 ($\\texttt{LCP}$)\u3002\n\n\u6c42\u8fd9\u4e2a\u4e1c\u897f\u6709\u4ec0\u4e48\u7528?\n\n> \u800c\u4e24\u4e2a\u6392\u540d\u4e0d\u76f8\u90bb\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u5b9a\u4e49\u4e3a\u6392\u540d\u5728\u5b83\u4eec\u4e4b\u95f4\u7684 $Prefix$ \u7684\u6700\u5c0f\u503c\u3002\n\n\u600e\u4e48\u6c42? $O(N^2)$ \u66b4\u529b?\n\n\u8981\u77e5\u9053\u4e00\u4e2a\u5b9a\u7406 :  \n\n$$Prefix_{rank_{i,1}} \\ge Prefix_{rank_{i-1,1}}-1$$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u9012\u589e\u6c42\u51fa\u4e86\u3002\n\n```pascal\nprocedure Height;\nvar i,h,k:longint;\nbegin h:=0;\n    for i:=1 to n do\n    begin\n        if rank[i,1]=1 then h:=0 else\n        begin\n            h:=max(h-1,0);\n            while (num[i+h]=num[sa[rank[i,1]-1]+h]) do inc(h);\n        end; prefix[rank[i,1]]:=h;\n    end;\nend;\n```",
        "postTime": 1546839498,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u6211\u662f\u53c2\u7167\u697c\u4e0b\u67d0\u4f4d\u5927\u4f6c\u548c\u67d0\u8bba\u6587\u5b66\u4e60\u7684\u540e\u7f00\u6570\u7ec4\n\u4ee3\u7801\u662f\u51e0\u4e4e\u4e00\u6837\u7684\uff08\u5b66\u4e60\u7684\u4e8b\uff0c\u80fd\u53eb\u6284\u5417\uff09\n\u4ee3\u7801\u91cc\u7684\u6ce8\u89e3\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u8865\u5145\u5427\n\u53ef\u4ee5\u5bf9\u7167\u7740\u770b\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n//data\nconst int MAXN=1e6+10;\nint sa[MAXN];//\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\nint tax[MAXN];\nint rak[MAXN];//\u4ece\u7b2ci\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u540e\u7f00\u7684\u6392\u540d\nint tp[MAXN];//temp\u7684\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\nint a[MAXN];\nint N,M;\nchar s[MAXN];\n//code\nvoid debug()\n{\n\tprintf(\"*****************\\n\");\n\tprintf(\"\u4e0b\u6807:\");\n\tfor(int i=1; i<=N; i++) printf(\"%d \",i);\n\tprintf(\"\\n\");\n\tprintf(\"sa  \");\n\tfor(int i=1; i<=N; i++) printf(\"%d \",sa[i]);\n\tprintf(\"\\n\");\n\tprintf(\"rak \");\n\tfor(int i=1; i<=N; i++) printf(\"%d \",rak[i]);\n\tprintf(\"\\n\");\n\tprintf(\"tp  \");\n\tfor(int i=1; i<=N; i++) printf(\"%d \",tp[i]);\n\tprintf(\"\\n\");\n}\n/**\nQsort -> \u6309\u7167\u7b2c\u4e00\u5173\u952e\u5b57\u8fdb\u884c\u6876\u6392\u5e8f\nQsort()\u8c03\u7528\u524d\u8981\u5148\u5bf9\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\n\u8fd9\u91cc\u5b58\u50a8\u5728tp\u6570\u7ec4\u91cc\n*/\nvoid Qsort()\n{\n\tfor(int i=0; i<=M; ++i)\ttax[i]=0; //\u6e05\u7a7a\u57fa\u6570\u6392\u5e8f\u7684\u6876\n\tfor(int i=1; i<=N; ++i)\ttax[rak[i]]++; //\u52a0\u5165\u6876\n\tfor(int i=1; i<=M; ++i)\ttax[i]+=tax[i-1]; //\u6c42\u51fa\u5c0f\u4e8e\u7b49\u4e8e\u8be52^k\u524d\u7f00\u7684\u603b\u6570\u91cf\n\n\tfor(int i=N; i>=1; --i)\tsa[ tax[rak[tp[i]]]-- ]=tp[i];\n\t/**\n\ttp[i]   \u6392\u540d\u7b2ci \uff08\u5bf9\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff09 \u7684\u524d\u7f00\u7684\u5f00\u5934\u4f4d\u7f6e\n\trak[tp[i]]  \u6392\u540d\u7b2ci\u7684\u524d\u7f00\u7684\u6876\u7684\u7f16\u53f7\uff0c\u4e5f\u662f\u7b2c\u4e00\u5173\u952e\u5b57\n\ttax[ rak[tp[i]] ]     \u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\u540e\u7684\u6b21\u5e8f\n\tsa[ \u2026 ] =tp[i]  \u5c06\u73b0\u5728\u6392\u540d\u7684\u5f00\u5934\u7f16\u53f7\u66f4\u65b0\u4e3a\u4e4b\u524d\u6392\u540d\u7b2ci\u7684\u524d\u7f00\u7684\u5f00\u5934\n\ttax[ rak[tp[i]] ]-- \u5c06\u6392\u540d\u7b2ci\u7684\u524d\u7f00\u53d6\u51fa\u6876\n\n\t\u4e4b\u6240\u4ee5\u5c06i\u5012\u5e8f\u904d\u5386\u662f\u56e0\u4e3a ??? \u8ba9\u6392\u540d\u9760\u524d\u7684\u540e\u7f00\u5148\u51fa\u73b0 ???\n\t\u56e0\u4e3atp[i]\u6b64\u65f6\u5b58\u50a8\u4e86\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u7684\u7ed3\u679c\n\t\t\uff08\u53ef\u80fd\u662f\u6700\u5f00\u59cb\u7684\u5404\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u80fd\u662f\u540e\u6765\u7684\u500d\u589e\u65f6\u540e\u4e00\u534a\u6743\u503c\uff09\n\t\u6309\u7167tp[i]\u5012\u5e8f\u8f93\u51fa\u5c31\u4fdd\u8bc1\u4e86\u5bf9\u4e8esa\u6570\u7ec4\u7b2c\u4e8c\u5173\u952e\u5b57\u6709\u5e8f\n\t\u53c8\u901a\u8fc7\u4e86\u57fa\u6570\u6392\u5e8f\u4fdd\u8bc1\u4e86\u5bf9\u4e8e\u7b2c\u4e00\u5173\u952e\u5b57\u6709\u5e8f\n\t\u6240\u4ee5\u8bf4tp[i]\u9760\u540e\u7684\u8981\u5148\u51fa\u6876\uff08\u5148\u51fa\u6876\u7684\u6b21\u5e8f\u9760\u540e\uff09\n\t*/\n}\nvoid Ssort()\n{\n\tM=127;//ASCII\u5b57\u7b26\u96c6\u6570\u91cf\n\tfor(int i=1; i<=N; ++i)\n\t{\n\t\trak[i]=a[i];//\u57fa\u6570\u6392\u5e8f\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u503c\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\n\t\ttp[i]=i; //\u7b2c\u4e00\u6b21\u57fa\u6570\u6392\u5e8f\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u662f\u4f4d\u7f6e\n\t}\n\tQsort();\n\n\t//debug();\n\tfor(int w=1,p=1; p<N; M=p, w<<=1)\n\t{\n\t\t//system(\"pause\");\n\t\t/**\n\t\tw -> \u500d\u589e\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\n\t\t\u5728\u7b2c\u4e00\u6b21\u6392\u5e8f\u7684\u65f6\u5019\u5df2\u7ecf\u5bf9\u4e8e\u957f\u5ea6\u4e3a\u4e00\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u4e86\u6392\u5e8f\n\t\t\u800c\u500d\u589e\u7684\u8fc7\u7a0b\u662f\u4ece\u4e24\u4e2a\u5c0f\u5b57\u7b26\u4e32\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u5b57\u7b26\u4e32\n\t\tw\u4ece1\u5f00\u59cb\u8bc1\u660ew\u4ee3\u8868\u7684\u662f\u5c0f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n\t\tsa[i]\uff1a\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u7684\u4f4d\u7f6e\n\t\trak[i]\uff1a\u4ece\u7b2ci\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u540e\u7f00\u7684\u6392\u540d\n\t\t*/\n\t\tp=0;\n\t\t//\u7ef4\u62a4\u7b2c\u4e8c\u5173\u952e\u5b57\n\t\t//\ttp[i]   \u4fdd\u5b58\u5bf9\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u6392\u5e8f\u7ed3\u679c\n\t\t// \u8fd9\u91cc\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u5c31\u662f\u5b57\u7b26\u4e32\u500d\u589e\u7684\u540e\u4e00\u6bb5\n\t\tfor(int i=1; i<=w; ++i)\n\t\t\ttp[++p]=N-w+i;\n\t\t/**\n\t\t\u6709\u4e00\u4e9b\u540e\u7f00\u662f\u6ca1\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\uff0c\n\t\t\u8fd9\u5c31\u610f\u5473\u7740\u4ed6\u4eec\u6bd4\u8f83\u77ed\n\t\t\u6309\u7167\u5b57\u5178\u5e8f\u7684\u5b9a\u4e49\u77ed\u7684\u5e94\u8be5\u5728\u524d\u9762\n\t\t\u6240\u4ee5\u4ed6\u4eec\u7684\u6392\u540d\u5e94\u8be5\u5728\u6700\u524d\u9762\n\t\t*/\n\t\tfor(int i=1; i<=N; ++i)\n\t\t\tif(sa[i]>w)\n\t\t\t\ttp[++p]=sa[i]-w;\n\t\t/*\n\t\t\u5bf9\u90a3\u4e9b\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u8fdb\u884c\u5904\u7406\n\t\t\t\u5bf9\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u7684\u7ed3\u679c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5229\u7528\u4e0a\u4e00\u6b21\u6c42\u5f97\u7684 sa \u76f4\u63a5\u7b97\u51fa\uff0c\n\t\t\t\u6ca1\u6709\u5fc5\u8981\u518d\u7b97   --\u8bba\u6587\n\t\t\u5982\u679csa[i]>w,\u90a3\u4e48\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5408\u6cd5\u7684\u5b57\u7b26\u4e32 [sa[i]-w,sa[i]-1]\u957f\u5ea6\u4e3aw\n\t\t\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u662f\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u5df2\u7ecf\u5728\u4e0a\u4e00\u8f6e\u7684\u500d\u589e\u4e2d\u4f5c\u4e3a\u7ed3\u679c\u6c42\u51fa\n\t\t\u800c[sa[i],sa[i]+w-1]\u8fd9\u4e2a\u957f\u5ea6\u540c\u6837\u4e3aw\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4e5f\u5df2\u7ecf\u6c42\u51fa\n\t\t\u904d\u5386\u65f6\u4ece1\u5230N\u904d\u5386\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4ece\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u904d\u5386\uff0c\n\t\t\u81ea\u7136\u4e5f\u5c31\u6392\u5e8f\u597d\u4e86\n\t\t*/\n\t\t//debug();\n\n\t\t/**\n\t\t\u7b2c\u4e8c\u5173\u952e\u5b57\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u800c\u7b2c\u4e00\u5173\u952e\u5b57\u4e5f\u5df2\u7ecf\u6c42\u51fa\uff0c\n\t\t\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5Qsort\n\t\t*/\n\t\tQsort();\n\t\t//sa\u6570\u7ec4\u66f4\u65b0\u5b8c\u6210\n\t\t/*\n\t\t\u4e0b\u9762\u51c6\u5907\u7528sa\u6765\u66f4\u65b0rak\n\t\t*/\n\t\tswap(rak,tp);\n\t\t/*\n\t\t\u56e0\u4e3a\u6211\u4eec\u8981\u66f4\u65b0rak\uff0c\u800c\u5224\u65ad\u4e24\u4e2a\u4e32\u7684\u5e8f\u53f7\u662f\u5426\u76f8\u540c\u53c8\u9700\u8981\u7528\u7b2c\u4e00\u5173\u952e\u5b57\n\t\t\u6240\u4ee5\u6211\u4eec\u7528tp\u4fdd\u5b58rak\n\t\t*/\n\t\trak[sa[1]]=1;//\u7b2c\u4e00\u540d\u7684\u6392\u540d\u5f53\u7136\u4e3a1\u5566\n\t\tp=1;\n\t\t/*\n\t\t\u8fd9\u91ccp\u7684\u4f5c\u7528\u662f\u7edf\u8ba1\u51fa\u73b0\u4e86\u51e0\u4e2a\u540d\u8bcd\uff08\u6240\u4ee5\u8bf4\u5230\u5e95\u4e3a\u4ec0\u4e48\u8981\u628aP\u5f53\u4e24\u4e2a\u53d8\u91cf\u7528\u554a\uff01\uff09\n\t\t*/\n\t\tfor(int i=2; i<=N; ++i)\n\t\t\tif(\t\ttp[sa[i-1]]==tp[sa[i]]//\u7b2c\u4e00\u5173\u952e\u5b57\u76f8\u540c\n\t\t\t        &&tp[sa[i-1]+w]==tp[sa[i]+w]//\u800c\u4e14w\u4f4d\u4e4b\u540e\u7684\u7b2c\u4e8c\u5173\u952e\u5b57\u4e5f\u76f8\u540c\n\t\t\t  )\n\t\t\t\trak[sa[i]]=p;//\u5e8f\u53f7\u4e0d\u53d8\n\t\t\telse\n\t\t\t\trak[sa[i]]=++p;//\u5e8f\u53f7\u52a0\u4e00\n\t\t//debug();\n\t}\n\tfor(int i=1; i<=N; ++i)//\u8f93\u51fa\n\t\tprintf(\"%d \",sa[i]);\n}\n//main\nvoid cal_height();\nint height[MAXN];\nint main()\n{\n\tscanf(\"%s\",s);\n\tN=strlen(s);\n\tfor(int i=0; i<N; ++i)\n\t\ta[i+1]=s[i]-48;\n\tSsort();\n\treturn 0;\n}\n\nvoid cal_height()\n{\n\tint i,j,k=0;\n\tfor(i=1; i<=N; ++i)\n\t\trak[sa[i]]=i;//\u66f4\u65b0rank\n\tfor(int i=1; i<=N; height[rak[i++]]=k)\n\t\tfor(k = (k?k-1:k) , j = sa[ rak[i]-1 ]; a[i+k]==a[j+k]; ++k );\n\t/**\n\t\u8ba1\u7b97\u65b9\u5f0f\n\t\u987a\u5e8f\uff1a\u6309\u7167h[1]-h[n]\n\ti\u679a\u4e3e\u7684\u662f\u540e\u7f00\u7684\u6392\u540d \n\t\u7b2c\u4e8c\u4e2afor\n\tk = (k?k-1:k)\n\t\t\u4ece\u4e0a\u4e00\u9879h\u6570\u5217\u8f6c\u79fb\u8fc7\u6765\uff0c\u4e0b\u9650\u8981\u51cf\u5c0f1\n\tj= sa[ rak[i]-1 ] \u53d6\u5f97\u4e0a\u4e00\u4e2a\u524d\u7f00\u7684\u5f00\u5934\u5143\u7d20\n\t\u4e4b\u540e\u4e24\u53e5\u5c31\u662f\u5728\u679a\u4e3e\u4e86 \n\t*/\n}\n/**\n\u53e6\u6ce8\uff1a\u5173\u4e8eheight\nheight\u5b9a\u4e49\uff1a\nheight[i]=suffix(sa[i-1])\u548c suffix(sa[i])\u7684\u6700\u957f\u516c\n\u5171\u524d\u7f00\uff0c\u4e5f\u5c31\u662f\u6392\u540d\u76f8\u90bb\u7684\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002\n\u5219suffix(j) \u548c \u548c ) suffix(k) \u4e3a \u7684 \u6700 \u957f \u516c \u5171 \u524d \u7f00 \u4e3a  height[rank[j]+1],\n, height[rank[j]+2], , height[rank[j]+3], \u2026 \u2026  ,height[rank[k]] \u4e2d\u7684\u6700\u5c0f\u503c\n\u5b9a\u4e49h[i]= height[rank[i]] = \u6700\u957f\u516c\u5171\u524d\u7f00{\n\tsuffix(sa[ rank[i] - 1 ])\n\tsuffix(sa[ rank[i] ])\n}\n =\u6700\u957f\u516c\u5171\u524d\u7f00{\n \tsuffix(sa[ rank[i] - 1 ])\n \tsuffix(i)\n }\n =suffix(i)\u548c\u5728\u5b83\u524d\u4e00\u540d\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\n\u7f00\u3002\n\n\u90a3\u4e48h\u6570\u7ec4\u6709\u4ee5\u4e0b\u6027\u8d28\n\th[i]>=h[i-1]-1\n\u8bc1\u660e\n\t\u8bbesuffix(k)\t\u5728 suffix(i-1)\t\u524d\u4e00\u540d\n\t\u5219\u4ed6\u4eec\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u662f h[i-1]\n\t\t1. h[i-1]<=1\n\t\t\t\u663e\u7136\u6210\u7acb\n\t\t2. h[i-1]>1\n\t\t\t\u5219a[k]=a[i-1]\n\t\t\t\u53c8\u56e0\u4e3asuffix(k) \u5728 suffix(i-1)\u524d\u4e00\u540d\n\t\t\t\u6240\u4ee5suffix(k+1)\t< suffix(i)\n\t\t\t\u4e14 \u6700\u957f\u516c\u5171\u524d\u7f00{ suffix(k+1),suffix(i) }==h[i]-1;\n\t\t\t\u53c8\u6709 \u6700\u957f\u516c\u5171\u524d\u7f00{ suffix(k+1),suffix(i) }=min{\n\t\t\t\t\theight[rank[k+1+1]] to height[rank[i]]\n\t\t\t}   <= height[rank[i]]\n\n\t\t\t\u7efc\u4e0a\uff0c\u53ef\u5f97 h[i]>=h[i-1]-1;\n*/\n```",
        "postTime": 1519621128,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "## \u540e\u7f00\u6570\u7ec4\u6a21\u677f\n\n\u540e\u7f00\u6570\u7ec4\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u601d\u60f3\u2014\u2014\u500d\u589e\u548c\u5b57\u7b26\u4e32\u7684\u6709\u8da3\u7ed3\u5408\n\n**\u4e00\u4e9b\u5b9a\u4e49**\n\nSuffix[i] \uff1aStr\u4e0b\u6807\u4e3ai ~ Len\u7684\u8fde\u7eed\u5b50\u4e32(\u5373\u540e\u7f00) \n\nRank[i] : Suffix[i]\u5728\u6240\u6709\u540e\u7f00\u4e2d\u7684\u6392\u540d \n\nSA[i] : \u6ee1\u8db3Suffix[SA[1]] < Suffix[SA[2]] \u2026\u2026 < Suffix[SA[Len]],\u5373\u6392\u540d\u4e3ai\u7684\u540e\u7f00\u4e3aSuffix[SA[i]] (\u4e0eRank\u662f\u4e92\u9006\u8fd0\u7b97) \n\nHeigth[i] : \u8868\u793aSuffix[SA[i]]\u548cSuffix[SA[i - 1]]\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u4e5f\u5c31\u662f\u6392\u540d\u76f8\u90bb\u7684\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00 \n\nH[i] : \u7b49\u4e8eHeight[Rank[i]]\uff0c\u4e5f\u5c31\u662f\u540e\u7f00Suffix[i]\u548c\u5b83\u524d\u4e00\u540d\u7684\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00 \n\n\u800c\u4e24\u4e2a\u6392\u540d\u4e0d\u76f8\u90bb\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u5b9a\u4e49\u4e3a\u6392\u540d\u5728\u5b83\u4eec\u4e4b\u95f4\u7684Height\u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u9053\u9898\u6ca1\u6709\u8ba9\u6c42height\uff0c\u4f46\u662f\u4f5c\u4e3a\u62d3\u5c55\uff0cheight\u662f\u9700\u8981\u7ecf\u5e38\u7528\u5230\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u7ed9\u51faheight\u7684O\uff08n\uff09\u6c42\u6cd5\n\n## \u53c2\u8003\u8d44\u6599\uff1a\n[\u540e\u7f00\u6570\u7ec4\u7b97\u6cd5\u603b\u7ed3](https://www.cnblogs.com/nietzsche-oier/articles/6621881.html)\n\n[\u540e\u7f00\u6570\u7ec4\u89e3\u6790\u4ee5\u53ca\u5e94\u7528](https://blog.csdn.net/qq_37774171/article/details/81776029)\n\n[\u5f7b\u5e95\u5f04\u61c2\u540e\u7f00\u6570\u7ec4](https://www.cnblogs.com/shanchuan04/p/5324009.html)\n\n[\u6ca1\u5199\u5b8c\uff0c\u4f46\u4ecd\u6709\u4e00\u4e9b\u5e2e\u52a9](https://blog.csdn.net/u011317784/article/details/47193781)\n\n**\u697c\u4e3b\u6bd4\u8f83\u83dc\uff0c\u770b\u4e86\u5f88\u591a\u7bc7\u624d\u770b\u61c2**\n\n\u4ee3\u7801\u5e94\u8be5\u662f\u6bd4\u8f83\u7cbe\u70bc\u7684\n\n\u8f6c\u81eaAuthor : YxuanwKeith\n\n```c\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int MAXN = 100005;\n\nchar ch[MAXN], All[MAXN];\nint SA[MAXN], rank[MAXN], Height[MAXN], tax[MAXN], tp[MAXN], a[MAXN], n, m; \nchar str[MAXN];\n//rank[i] \u7b2ci\u4e2a\u540e\u7f00\u7684\u6392\u540d; SA[i] \u6392\u540d\u4e3ai\u7684\u540e\u7f00\u4f4d\u7f6e; Height[i] \u6392\u540d\u4e3ai\u7684\u540e\u7f00\u4e0e\u6392\u540d\u4e3a(i-1)\u7684\u540e\u7f00\u7684LCP\n//tax[i] \u8ba1\u6570\u6392\u5e8f\u8f85\u52a9\u6570\u7ec4; tp[i] rank\u7684\u8f85\u52a9\u6570\u7ec4(\u8ba1\u6570\u6392\u5e8f\u4e2d\u7684\u7b2c\u4e8c\u5173\u952e\u5b57),\u4e0eSA\u610f\u4e49\u4e00\u6837\u3002\n//a\u4e3a\u539f\u4e32\nvoid RSort() {\n    //rank\u7b2c\u4e00\u5173\u952e\u5b57,tp\u7b2c\u4e8c\u5173\u952e\u5b57\u3002\n    for (int i = 0; i <= m; i ++) tax[i] = 0;\n    for (int i = 1; i <= n; i ++) tax[rank[tp[i]]] ++;\n    for (int i = 1; i <= m; i ++) tax[i] += tax[i-1];\n    for (int i = n; i >= 1; i --) SA[tax[rank[tp[i]]] --] = tp[i]; //\u786e\u4fdd\u6ee1\u8db3\u7b2c\u4e00\u5173\u952e\u5b57\u7684\u540c\u65f6\uff0c\u518d\u6ee1\u8db3\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u8981\u6c42\n} //\u8ba1\u6570\u6392\u5e8f,\u628a\u65b0\u7684\u4e8c\u5143\u7ec4\u6392\u5e8f\u3002\n\nint cmp(int *f, int x, int y, int w) { return f[x] == f[y] && f[x + w] == f[y + w]; } \n//\u901a\u8fc7\u4e8c\u5143\u7ec4\u4e24\u4e2a\u4e0b\u6807\u7684\u6bd4\u8f83\uff0c\u786e\u5b9a\u4e24\u4e2a\u5b50\u4e32\u662f\u5426\u76f8\u540c\n\nvoid Suffix() {\n    //SA\n    for (int i = 1; i <= n; i ++) rank[i] = a[i], tp[i] = i;\n    m = 127 ,RSort(); //\u4e00\u5f00\u59cb\u662f\u4ee5\u5355\u4e2a\u5b57\u7b26\u4e3a\u5355\u4f4d\uff0c\u6240\u4ee5(m = 127)\n\n    for (int w = 1, p = 1, i; p < n; w += w, m = p) { //\u628a\u5b50\u4e32\u957f\u5ea6\u7ffb\u500d,\u66f4\u65b0rank\n\n        //w \u5f53\u524d\u4e00\u4e2a\u5b50\u4e32\u7684\u957f\u5ea6; m \u5f53\u524d\u79bb\u6563\u540e\u7684\u6392\u540d\u79cd\u7c7b\u6570\n        //\u5f53\u524d\u7684tp(\u7b2c\u4e8c\u5173\u952e\u5b57)\u53ef\u76f4\u63a5\u7531\u4e0a\u4e00\u6b21\u7684SA\u7684\u5f97\u5230\n        for (p = 0, i = n - w + 1; i <= n; i ++) tp[++ p] = i; //\u957f\u5ea6\u8d8a\u754c,\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a0\n        for (i = 1; i <= n; i ++) if (SA[i] > w) tp[++ p] = SA[i] - w;\n\n        //\u66f4\u65b0SA\u503c,\u5e76\u7528tp\u6682\u65f6\u5b58\u4e0b\u4e0a\u4e00\u8f6e\u7684rank(\u7528\u4e8ecmp\u6bd4\u8f83)\n        RSort(), swap(rank, tp), rank[SA[1]] = p = 1;\n\n        //\u7528\u5df2\u7ecf\u5b8c\u6210\u7684SA\u6765\u66f4\u65b0\u4e0e\u5b83\u4e92\u9006\u7684rank,\u5e76\u79bb\u6563rank\n        for (i = 2; i <= n; i ++) rank[SA[i]] = cmp(tp, SA[i], SA[i - 1], w) ? p : ++ p;\n    }\n    //\u79bb\u6563\uff1a\u628a\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\u7684rank\u8bbe\u4e3a\u76f8\u540c\u3002\n    //LCP\n    int j, k = 0;\n    for(int i = 1; i <= n; Height[rank[i ++]] = k) \n        for( k = k ? k - 1 : k, j = SA[rank[i] - 1]; a[i + k] == a[j + k]; ++ k);\n    //\u8fd9\u4e2a\u77e5\u9053\u539f\u7406\u540e\u5c31\u6bd4\u8f83\u597d\u7406\u89e3\u7a0b\u5e8f\n}\n\nvoid Init() {\n    scanf(\"%s\", str);\n    n = strlen(str);\n    for (int i = 0; i < n; i ++) a[i + 1] = str[i];\n}\n\nint main() {\n    Init();\n    Suffix();\n\n    int ans = Height[2];\n    for (int i = 3; i <= n; i ++) ans += max(Height[i] - Height[i - 1], 0);\n    printf(\"%d\\n\", ans);    \n}\n```\n\n\u81ea\u5df1\u7684\u4ee3\u7801\uff08\u5176\u5b9e\u5dee\u4e0d\u591a\uff09\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define go(i,a,b) for(int i=a;i<=b;i++)\n#define com(i,a,b) for(int i=a;i>=b;i--) \n#define fin freopen(\"input.txt\",\"r\",stdin)\nconst int maxn=1e6+10;\nchar s[maxn];\nint sa[maxn],tp[maxn],rk[maxn],c[maxn],height[maxn];\nint n,m,w=1;\n\nvoid rsort(){\n\tgo(i,1,m) c[i]=0;\n\tgo(i,1,n) c[rk[tp[i]]]++;\n\tgo(i,2,m) c[i]+=c[i-1];\n\tcom(i,n,1) sa[c[rk[tp[i]]]--]=tp[i];\n}\n\nbool cmp(int x,int y){return tp[x]==tp[y]&&tp[x+w]==tp[y+w];}\n\nvoid prefix(){\n\tm=200;\n\tgo(i,1,n) rk[i]=s[i],tp[i]=i;rsort();\n\tfor(int p=0;p<n;w+=w,m=p){\n\t\tp=0;\n\t\tgo(i,n-w+1,n) tp[++p]=i;\n\t\tgo(i,1,n) if(sa[i]>w) tp[++p]=sa[i]-w;\n\t\trsort();swap(tp,rk),rk[sa[1]]=p=1;\n\t\tgo(i,2,n) rk[sa[i]]=cmp(sa[i],sa[i-1])?p:++p;\n\t}\n\tint j,k=0;\n\tfor(int i=1;i<=n;height[rk[i++]]=k)\n\t\tfor(k=k?k-1:k,j=sa[rk[i]-1];s[i+k]==s[j+k];k++);\n}\n\nint main(){\n\t//fin;\n\tscanf(\"%s\",s+1);\n\tn=strlen(s+1);\n\tprefix();\n\tgo(i,1,n) printf(\"%d \",sa[i]-1);\n\tputs(\"\");\n\tgo(i,1,n) printf(\"%d \",height[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1560173502,
        "uid": 109434,
        "name": "\u98ce\u968f\u9010\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    },
    {
        "content": "\u6ce8\u610f\uff1a**\u8fd9\u662f\u4e00\u7bc7\u66b4\u529b\u6392\u5e8f\u9898\u89e3\uff01** _\u8fd9\u662f\u4e00\u7bc7\u66b4\u529b\u6392\u5e8f\u9898\u89e3\uff01_ ** _\u8fd9\u662f\u4e00\u7bc7\u66b4\u529b\u6392\u5e8f\u9898\u89e3\uff01_ **\n\n\u540e\u7f00\u6570\u7ec4\u500d\u589e\u6392\u5e8f\u7684\u539f\u7406\u5982\u4e0b\uff1a\n\n1. \u5bf9\u539f\u59cb\u5b57\u7b26\u4e32\u5404\u4e2a\u5b57\u7b26\u6392\u5e8f\uff0ck=1,n=strlen(ch);\n2. \u9010\u4e2a\u6807\u53f7;\n3. \u6b64\u65f6\u5404\u4e2a\u5b57\u7b26\u6807\u53f7\u5bf9\u5e94\u7684\u5c31\u662frank[i];\n4. \u82e5rank[n]>=n\uff0creturn;\n5. \u6309\u7167\u539f\u5b57\u7b26\u4e32id\u6392\u5e8f\uff0c\u66b4\u529b\u6876\u6392;\n6. \u7531**\u5b57\u5178\u5e8f\u7684\u524d\u7f6e\u4f18\u5148\u6027**\uff0c\u4ee5rank[i]\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0crank[i+k]\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f;\n7. k<<=1,goto->2;\n\n\u8fd9\u6837\u6392\u5e8f\u5c31\u5b8c\u6210\u4e86\uff1b\n\n\u53cc\u5173\u952e\u5b57\u6876\u6392\u597d\u9ebb\u70e6\u554a\uff0c\u4e0d\u60f3\u7528qwq\uff0c\u600e\u4e48\u529e\uff1f\n\n\u66b4\u529bsort\u554a\uff01\uff01\n\n\u4e0a\u4ee3\u7801\u2193\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=1e6+15;\n\nint n;\nchar ch[MAXN];\nstruct rpg{\n    int id,ch1,ch2,rnk;\n}a[MAXN<<1],cup[MAXN<<1];\n\nvoid shel2(){\n\tfor(int i=1;i<=n;++i) cup[a[i].id]=a[i];\n\tfor(int i=1;i<=n;++i) a[i]=cup[i];\n    return;\n}\n\nvoid init(){\n    scanf(\"%s\",ch);n=strlen(ch);\n    for(int i=0;i<n;++i){\n        a[i+1].id=i+1;\n\t\ta[i+1].ch1=ch[i];\n    }return;\n}\n\nbool cmp1(rpg a,rpg b){\n    if(a.ch1==b.ch1) return a.ch2<b.ch2;\n    return a.ch1<b.ch1;\n}\n\nvoid solve(int k){\n    sort(a+1,a+n+1,cmp1);\n    a[1].rnk=1;\n    for(register int i=2;i<=n;++i){\n        if(a[i].ch1==a[i-1].ch1&&a[i].ch2==a[i-1].ch2) a[i].rnk=a[i-1].rnk;\n        else a[i].rnk=a[i-1].rnk+1;\n    }\n\tif(a[n].rnk>=n||k>n) return;\n\tshel2();\n    for(register int i=1;i<=n;++i){\n    \ta[i].ch1=a[i].rnk;\n    \tif(i+k<=n) a[i].ch2=a[i+k].rnk;\n    \telse a[i].ch2=0;\n    }solve(k<<1);\n}\n\nvoid write(){\n    for(register int i=1;i<=n;++i){\n        printf(\"%d \",a[i].id);\n    }return;\n}\n\nint main(){\n    init();\n    solve(1);\n    write();\n    return 0;\n}\n```\n\n\u66b4\u529b\u662f\u6b63\u89e3\u7684\u603b\u62ec\u4e0e\u6307\u5bfc\u601d\u60f3\uff0c\u6b63\u89e3\u662f\u66b4\u529b\u7684\u4f18\u5316\u4e0e\u5177\u4f53\u5b9e\u73b0\u2014\u2014AH",
        "postTime": 1522220436,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3809 \u3010\u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f\u3011"
    }
]