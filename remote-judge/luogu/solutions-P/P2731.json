[
    {
        "content": "~~\u7b80\u5355\u7684\u5f00\u59cb~~ \n## \u5b8c\u7f8e\u306e\u5f00\u59cb\n\u8fd9\u91cc\u6570\u7ec4\u4ec0\u4e48\u7684\u7528\u6765\u5e72\u4ec0\u4e48\u540e\u9762\u6807\u6ce8\u7684\u6e05\u695a\u4e86\n\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint map[10001][10001];//\u8bb0\u5f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e2a\u6570 \nint du[10001];//\u8f85\u52a9\u8bb0\u5f55\u5947\u70b9 \nint lu[10001];//\u8bb0\u5f55\u8def\u5f84 \nint n,x,y,js=0;//\u8f93\u5165\u7684\u6570\u636e\u548c\u8ba1\u6570\u5668\nint maxn=0;\n```\n------------\n## \u6b63\u9898\u5f00\u59cbQWQ\n\u5148\u8bf4\u601d\u8def\uff1a\n\u5f88\u7b80\u5355\u548c\u4e00\u672c\u901a\u4e0a\u7684\u4f8b\u9898\u4e00\u7b14\u753b\u6ca1\u4ec0\u4e48\u5dee\u522b\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u70b9\u53ef\u80fd\u4f1a\u91cd\u590d\u51fa\u73b0\u7f62\u4e86\u3002\n\n\n------------\n\u53ef\u4ee5\u6309\u6b63\u5e38\u7684\u8f93\u5165\u7136\u540e\u5b58\u5165map\u6570\u7ec4\uff08PS\uff1a\u5982\u679c\u4f60\u7528\u7684\u662f\u4e07\u80fd\u5934\u5c31\u4e0d\u8981\u5b9a\u4e49map\u6570\u7ec4\u5566\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2af\u6570\u7ec4\u4ec0\u4e48\u7684)\u8fd9\u91cc\u5c31\u51fa\u73b0\u548c\u4e00\u672c\u901a\u4e0a\u4e00\u7b14\u753b\u7684\u5dee\u8ddd\u4e86\uff0c\u662f\u7d2f\u51cf\uff0c\u6bcf\u6b21\u8bb0\u5f55\u5c31\u52a0\u4e00\u800c\u4e0d\u662f\u8d4b\u503c\u4e3a1\n\u3002\u3002\u3002\u3002\u56e0\u4e3a\u540e\u9762\u5f88\u591a\u5730\u65b9\u9700\u8981\u7528\u5230\u70b9\u7684\u4e2a\u6570\uff0c\u4f46\u662f\u5374\u6ca1\u6709\u8f93\u5165\u6240\u4ee5\u4e13\u95e8\u5b9a\u4e49\u4e00\u4e2amaxn\u6765\u627e\u8f93\u5165\u7684\u6700\u5927\u503c\u5c31\u662f\u70b9\u7684\u4e2a\u6570\u5566\n\n------------\n\n\u6ce8\u610f\u8fd9\u91cc\u8981\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\uff0c\u5728\u8f93\u5165\u7684\u65f6\u5019\u6bcf\u6b21\u4e00\u51fa\u73b0\u5c31\u52a0\u4e00\u7136\u540e\u5728\u540e\u9762\u5355\u72ec\u627e\uff0c\u770b\u770b\u8c01\u4e0d\u662f2\u7684\u500d\u6570\u8bb0\u5f55\u4e0b\u6765\u7ed3\u675f\u5faa\u73af\n\n------------\n```cpp\nscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmap[x][y]++;\n\t\tmap[y][x]++;\n\t\tdu[x]++;\n\t\tdu[y]++;//\u8bb0\u5f55\u51fa\u73b0\u7684\u6b21\u6570 \n\t\tmaxn=max(maxn,max(x,y));\n\t}\n\tint start=1;//\u9ed8\u8ba4\u5947\u70b9\u662f1 \n\tfor(int i=1;i<=maxn;++i)\n\t{\n\t\tif(du[i]%2)//\u627e\u5230\u5947\u70b9 \n\t\t{\n\t\t\tstart=i;//\u8bb0\u5f55\u5947\u70b9\n\t\t\tbreak;//\u7136\u540e\u7ed3\u675f\u5faa\u73af \n\t\t}\n\t}\n\tfind(start);//\u4ece\u5947\u70b9\u5f00\u59cb\u627e \n\tfor(int i=js;i>=1;i--)\n\t{\n\t\tprintf(\"%d\\n\",lu[i]);//\u6328\u4e2a\u8f93\u51fa\u8def\u5f84\u5e76\u4e14\u6362\u884c \n\t}\n\treturn 0;\n```\n\n------------\n\u7136\u540e\u5c31\u8bf4\u51fd\u6570\u90e8\u5206\u4e86\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u7684find\u51fd\u6570QWQ.\u8fd9\u91cc\u5f88\u597d\u60f3\u7684\uff0c\u5c31\u662f\u6a21\u677f\u6539\u4e00\u4e0b\uff0c\u53d8\u4e3a0\u6539\u4e3a\u51cf\u4e00QWQ\u7b80\u5355\u7684\u6211\u4e0d\u60f3\u591a\u8bf4\n\u51fd\u6570\u4ee3\u7801\n\n\n------------\n\n```cpp\nvoid find(int i)//\n{\n\tint j;\n\tfor(j=1;j<=maxn;++j)//\u800c\u4e14\u8fd9\u91cc\u4e0d\u662fn\u800c\u662fmaxn\u56e0\u4e3an\u4e0d\u662f\u70b9\u7684\u4e2a\u6570\u800c\u662f\u4e0b\u9762\u6709\u591a\u5c11\u884c \n\t{\n\t\tif(map[i][j]>=1)\n\t\t{\n\t\t\tmap[i][j]--;//\u5220\u53bb\u8fb9\u4e00\u6b21\u5417\u907f\u514d\u91cd\u590d \n\t\t\tmap[j][i]--;//z\u8fd9\u91cc\u548c\u4e00\u7b14\u753b\u4e0d\u4e00\u6837\u8fd9\u91cc\u662f\u7d2f\u51cf\u800c\u4e00\u7b14\u753b\u76f4\u63a5\u53d8\u62100 \n\t\t\tfind(j);\n\t\t}\n\t}\n\tlu[++js]=i;\n}\n```\n\n\n------------\n\n## \u8bdd\u4e0d\u591a\u8bf4\u5b8c\u6574\u4ee3\u7801\n\n------------\n\n```cpp\n//\u9632\u4f2a\u6807\u8bc6\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint map[10001][10001];//\u8bb0\u5f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e2a\u6570 \nint du[10001];//\u8f85\u52a9\u8bb0\u5f55\u5947\u70b9 \nint lu[10001];//\u8bb0\u5f55\u8def\u5f84 \nint n,x,y,js=0;\nint maxn=0;\nvoid find(int i)//\n{\n\tint j;\n\tfor(j=1;j<=maxn;++j)//\u800c\u4e14\u8fd9\u91cc\u4e0d\u662fn\u800c\u662fmaxn\u56e0\u4e3an\u4e0d\u662f\u70b9\u7684\u4e2a\u6570\u800c\u662f\u4e0b\u9762\u6709\u591a\u5c11\u884c \n\t{\n\t\tif(map[i][j]>=1)\n\t\t{\n\t\t\tmap[i][j]--;//\u5220\u53bb\u8fb9\u4e00\u6b21\u5417\u907f\u514d\u91cd\u590d \n\t\t\tmap[j][i]--;//z\u8fd9\u91cc\u548c\u4e00\u7b14\u753b\u4e0d\u4e00\u6837\u8fd9\u91cc\u662f\u7d2f\u51cf\u800c\u4e00\u7b14\u753b\u76f4\u63a5\u53d8\u62100 \n\t\t\tfind(j);\n\t\t}\n\t}\n\tlu[++js]=i;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmap[x][y]++;\n\t\tmap[y][x]++;\n\t\tdu[x]++;\n\t\tdu[y]++;//\u8bb0\u5f55\u51fa\u73b0\u7684\u6b21\u6570 \n\t\tmaxn=max(maxn,max(x,y));\n\t}\n\tint start=1;//\u9ed8\u8ba4\u5947\u70b9\u662f1 \n\tfor(int i=1;i<=maxn;++i)\n\t{\n\t\tif(du[i]%2)//\u627e\u5230\u5947\u70b9 \n\t\t{\n\t\t\tstart=i;//\u8bb0\u5f55\u5947\u70b9\n\t\t\tbreak;//\u7136\u540e\u7ed3\u675f\u5faa\u73af \n\t\t}\n\t}\n\tfind(start);//\u4ece\u5947\u70b9\u5f00\u59cb\u627e \n\tfor(int i=js;i>=1;i--)\n\t{\n\t\tprintf(\"%d\\n\",lu[i]);//\u6328\u4e2a\u8f93\u51fa\u8def\u5f84\u5e76\u4e14\u6362\u884c \n\t}\n\treturn 0;\n}\n```\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u5df2AC\n# \u5b8c\u7f8e\u306e\u7ed3\u675f\n\uff08\u770b\u7684\u8fd9\u4e48\u7d2f\uff0c\u4e0d\u70b9\u4e2a\u8d5e\u518d\u8d70QWQ\uff09",
        "postTime": 1555123269,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "## \u4f5c\u8005\u7684\u5199\u4f5c\u80cc\u666f\uff1f\n\u867d\u7136\u5927\u4f6c\u4eec\u8bb2\u7684\u5f88\u597d\u4e86\uff01\uff01\u4f46\u662f\u81ea\u5df1\u5728\u5b9e\u9645\u505a\u7684\u65f6\u5019\u8fd8\u662f\u6709\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u81ea\u6211\u601d\u8003\uff0c\u7279\u522b\u662f\u5728\u6700\u540e\u4e24\u4e2a\u70b9WA\u4e4b\u540e\uff0c\u5012\u817e\u4e86\u4e00\u665a\u4e0a\u3002\u7ec8\u4e8e\u53d1\u73b0\u4e86**\u6b63\u7740\u8f93\u51fa**\u548c**\u7528\u6808\u53bb\u5b58\u8def\u5f84**\uff0c\u6700\u540e\u5012\u7740\u8f93\u51fa\u7b54\u6848\u7684\u533a\u522b\uff01\u524d\u65b9\u591a\u56fe\u6709\u52a9\u4e8e\u5927\u5bb6\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u662f\u5bf9\u7684\uff01\u60f3\u770b\u8fd9\u90e8\u5206\u7684\u540c\u5b66\u53ef\u76f4\u63a5\u4e0b\u62c9\n#### ps\uff1a\u6b27\u62c9\u56de\u8def\u95ee\u9898\uff0c\u6709\u65f6\u5019\u4e5f\u53eb\u4e00\u7b14\u753b\u95ee\u9898\n\n## \u5165\u624b\n\u6211\u4eec\u770b\u5230\u9898\u76ee\uff0c\u5148\u628a\u6a21\u578b\u62bd\u51fa\u6765\u3002\u8981\u4fee\u6805\u680f\uff0c\u6805\u680f\u8fde\u901a\u4e86\u4e24\u4e2a\u70b9\uff0c\u5f97\u51fa\u7ed3\u8bba\uff0c**\u662f\u4e2a\u65e0\u5411\u56fe**\uff0c\u4e14\u627e\u5230\u4e00\u79cd\u904d\u5386\u65b9\u6cd5\uff0c**\u53ea\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u4e00\u6c14\u5475\u6210\u7684\u8d70\u5b8c\u6240\u6709\u8fb9\uff01**\u77e5\u9053\u7684\u540c\u5b66\u5df2\u7ecf\u61c2\u4e86\uff0c\u662f\u4e2a\u6b27\u62c9\u56de\u8def\u95ee\u9898\uff0c\u4e0d\u77e5\u9053\u7684\u7ed9\u5927\u5bb6\u8865\u5145\u4e0b\u6982\u5ff5\u3002\n\n## \u6982\u5ff5\n\u6b27\u62c9\u8def\uff1a\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u8d70\u5230\u4efb\u610f\u4e00\u4e2a\u70b9\u7ed3\u675f\uff0c**\u4e14\u6bcf\u6761\u8fb9\u53ea\u901a\u8fc7\u4e00\u6b21**\n\n\u6b27\u62c9\u56de\u8def\uff1a\u5176\u5b9e\u662f\u6b27\u62c9\u8def\u884d\u751f\u51fa\u6765\u7684\uff0c\u8d77\u70b9\u548c\u7ec8\u70b9\u4e00\u6837\u7684\u6b27\u62c9\u8def\u3002\u5f62\u8c61\u7684\u8bf4\uff0c\u8d70\u4e00\u5708\u53c8\u56de\u6765\u4e86\u7684\u8def\u5f84\n\n\u7ed9\u5927\u5bb6\u770b\u770b\u6700\u7b80\u5355\u7684\u6a21\u578b![\u6b27\u62c9\u8def\u548c\u6b27\u62c9\u56de\u8def](https://cdn.luogu.com.cn/upload/pic/41002.png)\n\n## \u518d\u5ea6\u5ba1\u9898\uff0c\u5e76\u4e14\u8fdb\u4e00\u6b65\u601d\u8003\n\n**\u8981\u904d\u5386\u56fe\uff0c\u5fc5\u5148\u5b58\u56fe\u3002**\n\n\u6211\u4eec\u627e\u5230\u7684\u8fd9\u4e2a\u8def\u5f84\uff0c\u9898\u76ee\u8981\u6c42\u5f88\u660e\u4e86\uff0c\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n**\u79bb\u5f00\u6570\u636e\u8303\u56f4\u7684\u9898\u76ee\u90fd\u662f\u6d41\u6c13**\n\n\u8fb9\u6570 F(1 <= F <= 1024)\n\n\u70b9 (1 <= i,j <= 500)\uff0c500\n\n\u770b\u89c1\u8fd9\u4e48\u5c0f\u7684\u6570\u636e\uff0c\u518d\u52a0\u4e0a\u6211\u4eec\u904d\u5386\u5e94\u8be5\u8981\u4f18\u5148\u9009\u5e8f\u53f7\u5c0f\u7684\u70b9\u904d\u5386\u3002\u4e3a\u4ec0\u4e48\u4f18\u5148\u9009\u6700\u5c0f\u7684\u554a\uff1f\u4f60\u60f3\u554a\uff0c\u4f60\u4e0d\u8d2a\u5fc3\uff0c\u4f60\u8981\u628a\u6bcf\u6761\u8def\u5f84\u90fd\u904d\u5386\u4e00\u904d\u518d\u6bd4\u5417\uff01\uff01\uff01~~TLE~~\n\n\u4e8e\u662f\u6211\u4eec\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\uff0c\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\u3002\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u7684\u4f18\u5148\u9009\u62e9\u5c0f\u7684\u904d\u5386\n```cpp\nvoid dfs(int u){\n\t//\u8bf7\u628a\u9898\u76ee\u7684\u7ec6\u8282\u4e00\u904d\u904d\u8bfb\uff0c\u4e0d\u8981\u60f3\u5f53\u7136\uff0c\n    //\u6700\u5c0f\u8282\u70b9\u548c\u6700\u5927\u8282\u70b9\u6211\u4eec\u90fd\u662f\u4e0d\u77e5\u9053\u7684\uff0c\u4ee5\u9632\u4e07\u4e00\uff0c\u8bf7\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5c31\u5904\u7406\u5b8cminn\u548cmaxn\n    for(int v = minn; v <= maxn; v++){\n       if(g[u][v]){\n       \t//dosomething\n\t   } \n    } \n}\n```\n\u81f3\u4e8e\u90bb\u63a5\u8868\uff0c\u7531\u4e8e\u8bfb\u5165\u65f6\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u5728\u904d\u5386\u65f6\u7684\u5148\u540e\u4f1a\u4e0d\u540c\uff0c\u8fd9\u91cc\u4e0d\u505a\u62d3\u5c55\uff0c\u60f3\u4e0d\u660e\u767d\u7684\u540c\u5b66\u53ef\u4ee5\u5148\u4e0d\u770b\uff01\u5f53\u7136\uff0c\u8fd9\u9898\u53ef\u4ee5\u7528\u90bb\u63a5\u8868\u6765\uff0c~~\u4f46\u662f\u4e0d\u8981\u4e3a\u96be\u81ea\u5df1~~\n\n#### \u90a3\u4e48\u771f\u6b63\u7684\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u8d70\u624d\u80fd\u4e00\u7b14\u753b\u5b8c\u8fd9\u4e2a\u56fe\u5462\uff1f\n\n\u8fd9\u91cc\u5c31\u8981\u7528\u5230\u6b27\u62c9\u8def\u7684\u4e00\u4e9b\u6027\u8d28\n\n**\u5148\u8ba8\u8bba\u65e0\u5411\u56fe\u91cc**\uff0c\u5982\u679c\u4e00\u4e2a\u56fe\uff0c\u5b58\u5728\u6b27\u62c9\u8def\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u56fe\uff0c\u4e00\u5b9a\u6709\u4e24\u4e2a\u5947\u70b9\uff08\u5947\u6570\u70b9\uff0c\u5373\u5ea6\u4e3a\u5947\u6570\u7684\u70b9\uff0c\u5ea6\u5c31\u662f\u8fde\u8fd9\u4e2a\u70b9\u7684\u8fb9\u7684\u6570\u91cf\uff09\u3002\u4e3a\u4ec0\u4e48\u662f\u4e24\u4e2a\uff1f\n\n\u5148\u4e0d\u770b\u8d77\u70b9\u548c\u7ec8\u70b9!\u5bf9\u4e8e\u4e2d\u95f4\u7684\u6240\u6709\u70b9\uff0c\u6211\u4eec**\u80af\u5b9a\u8981\u4ece\u4e00\u6761\u8fb9\u8fdb\u53bb**\uff0c\u8fdb\u53bb\u4e4b\u540e\uff0c\u56e0\u4e3a\u4e0d\u662f\u7ec8\u70b9\uff0c**\u80af\u5b9a\u8981\u518d\u51fa\u53bb**\uff0c\u6240\u4ee5\u4e2d\u95f4\u7684\u70b9\u90fd\u662f\u5076\u6570\u70b9\u3002\u90a3\u4e48\u5bf9\u4e8e\u8d77\u70b9\uff0c\u6211\u4eec\u53ea\u80fd\u51fa\u53bb\uff0c\u5bf9\u4e8e\u7ec8\u70b9\uff0c\u6211\u4eec\u53ea\u80fd\u8fdb\u6765\u3002\u5f88\u6109\u5feb\u7684\u8bc1\u660e\u51fa\u53ea\u6709\u4e24\u4e2a\u5947\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u4e0d\u4ec5\u89e3\u51b3\u4e86**\u8def\u5f84\u7684\u8d77\u70b9**\uff0c\u8fd8\u627e\u5230\u4e86\u5224\u65ad\u662f\u5426\u4e3a\u6b27\u62c9\u8def\u7684\u65b9\u6cd5\uff0c\u867d\u7136\u8fd9\u9898\u4e0d\u9700\u8981\u6211\u4eec\u5224\u65ad\u3002\n![\u6b27\u62c9\u8def](https://cdn.luogu.com.cn/upload/pic/41005.png)\n\n\u6b27\u62c9\u56de\u8def\u5462\uff1f\u7b80\u5355\uff0c\u628a\u4e0a\u56fe 1-4\u8fde\u8d77\u6765\uff0c\u6309\u6b27\u62c9\u8def\u7684\u903b\u8f91\u63a8\u7406\u4e00\u4e0b\uff0c\u6bcf\u4e2a\u70b9\u90fd\u8981\u8fdb\u4e00\u6b21\u51fa\u4e00\u6b21\uff0c\u81ea\u7136\u6240\u6709\u70b9\u90fd\u662f\u5076\u6570\u70b9\n\n\u8fd9\u91cc\u5173\u4e8e\u6709\u5411\u56fe\u7684\u6b27\u62c9\u8def\u95ee\u9898\u7684\u6027\u8d28\u4e5f\u662f\u5dee\u4e0d\u591a\u7684\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e00\u4e0b\uff0c\u662f\u51e0\u4e4e\u4e00\u6837\u7684\u8bc1\u660e\u6cd5\u3002\u3002\u3002\n\n### \u90a3\u6211\u4eec\u53c8\u5f97\u51fa\u4e86\uff0c\u6211\u4eec\u5e94\u5f53\u4ece\u54ea\u4e2a\u70b9\u5f00\u59cb\u904d\u5386\n```cpp\nscanf(\"%d\",&m); //m\u4e2a\u8fb9\n    \n    int u,v;\n    int minn = 666,max = 0;\n    for(int i = 1; i <= m; i++){\n        scanf(\"%d%d\",&u,&v);\n        g[u][v]++;\n        g[v][u]++;\n        dree[u]++;\n        dree[v]++;\n        //\u6ce8\u610f\uff0c\u9898\u76ee\u6ca1\u8bf4\u4e24\u4e2a\u70b9\u4e4b\u95f4\u53ea\u6709\u4e00\u6761\u8fb9\uff0c\u90a3\u6211\u4eec\u5c31\u4e00\u5b9a\u4e0d\u80fd\u5199g[u][v] = 1\u8fd9\u79cd\u4ee3\u7801\n        minn = min(minn,min(u,v));\n        maxn = max(maxn,max(u,v));\n    }\n\n \tint s = minn; \n    for(int i = minn;i <= maxn;i++)\n        if(dree[i]&1) //dree\u5982\u679c\u662f\u5947\u6570\u7684\u8bdd\uff0c\u6211\u4eec\u4ecei\u5f00\u59cb\u641c\n        {\n            s = i;\n            break;\n        }\n//\u6b27\u62c9\u56de\u8def\u4ece\u54ea\u5f00\u59cb\u90fd\u53ef\u4ee5\u641c\uff0c\u6b27\u62c9\u8def\u8981\u4ece\u5947\u70b9\u5f00\u59cb\n    dfs(s);\n\n```\n### \u4f46\u662f\uff01\u8fd9\u56fe\u9519\u7efc\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u4e0d\u662f\u5355\u7eaf\u7684\u6b27\u62c9\u8def\u6216\u8005\u6b27\u62c9\u56de\u8def\uff0c\u800c\u662f\u5957\u5728\u4e00\u8d77\u7684\u4e1c\u897f\uff01![\u5957\u5a03](https://cdn.luogu.com.cn/upload/pic/41009.png)\n\u6bd4\u5982\u8fd9\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c1\u30012\u30013\u30014\u53ef\u4ee5\u8bf4\u662f\u6b27\u62c9\u8def\uff0c3\u30015\u30016\u53c8\u662f\u4e2a\u6b27\u62c9\u56de\u8def\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4ece\u5947\u70b9\u5f00\u59cb\u641c\u5417\uff1f\u53ef\u4ee5\uff01\n\n\u7b2c\u4e00\u79cd\uff0c\u5982\u679c\u662f\u6b27\u62c9\u56de\u8def\u5957\u6b27\u62c9\u56de\u8def\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u90fd\u662f\u5076\u70b9\uff0c\u54ea\u91cc\u5f00\u59cb\u90fd\u53ef\u4ee5\u3002\n\n\u7b2c\u4e8c\uff0c\u50cf\u4e0a\u56fe\u8fd9\u79cd\u6b27\u62c9\u8def\u5957\u6b27\u62c9\u56de\u8def\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u6b27\u62c9\u56de\u8def\u7684\u90e8\u5206\uff0c\u60f3\u8c61\u6210\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a**\u6b27\u62c9\u8def\uff0c\u4ece\u8d77\u70b9\u8d70\uff0c\u4e00\u5b9a\u56de\u5230\u7ec8\u70b9**\uff0c\u5927\u5bb6\u95ed\u4e0a\u773c\u775b\u611f\u53d7\u4e00\u4e0b\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u628a\u56fe\u5c31\u5f53\u6210\u4e00\u4e2a\u6b27\u62c9\u8def\n\n\u5230\u8fd9\u91cc\u5c31\u57fa\u672c\u505a\u5b8c\u4e86\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5728\u904d\u5386\u7684\u65f6\u5019\uff0c\u628a\u8d70\u8fc7\u7684\u8def\u5220\u6389\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u91cd\u590d\u8d70\u4e86\uff0c\u800c\u4e14\u7701\u53bb\u4e86\u53cd\u590d\u6a2a\u8df3\u7684\u98ce\u9669\n```cpp\nvoid dfs(int u){\n\t//cout<<u<<endl;\n    for(int v = minn; v <= maxn; v++){\n       if(g[u][v]){\n       \t\tg[u][v]--;\n       \t\tg[v][u]--;\n       \t\tdfs(v);\n\t   } \n    }\n    S.push(u);\n}\n\nwhile(!S.empty()){\n\tcout<<S.top()<<endl;\n    S.pop();\n}\n```\n\n## \u4e8b\u5b9e\u4e0a\u662f\u6b63\u620f\uff0c\u5927\u5bb6\u6ce8\u610f\u5230\u4e86\u5427\uff0c\u4e0a\u9762\u6ce8\u91ca\u4ee3\u7801\u91cc\uff0c\u4e24\u79cd\u4e0d\u540c\u7684\u8f93\u51fa\u8def\u5f84\u7684\u65b9\u5f0f\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u95ed\u4e0a\u773c\u775b\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u55ef\uff0c\u7528\u6570\u7ec4\u5b58\uff0c\u6216\u8005\u8bf4\u6808\u5427\uff0c\u7136\u540e\u5012\u5e8f\u8f93\u51fa\u662f\u5bf9\u7684\u3002\u4f46\u662f\uff0c\u9012\u5f52\u5f00\u59cb\u65f6\u5c31\u76f4\u63a5\u8f93\u51fa\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u884c\u5462\uff1f\n\ndfs\u660e\u660e\u662f\u7eaf\u5929\u7136\u65e0\u6c61\u67d3\u7684\u6808\u554a\uff01\n![\u5957\u5a03](https://cdn.luogu.com.cn/upload/pic/41009.png)\n\u770b\u89c1\u4e86\u5417\uff0c\u8fd9\u5176\u5b9e\u662f\u9898\u76ee\u7279\u6027\u5bfc\u81f4\u7684\uff0c\u6216\u8005\u8bf4\uff0c\u57fa\u672c\u4e0a\u6c42\u95ee\u8def\u5f84\u7684\u9898\u76ee\uff0c\u56de\u6eaf\u65f6\u5019\u8bb0\u5f55\u4f1a\u66f4\u52a0\u7a33\u59a5\u3002\n\n\u6bd4\u59824\u8fd9\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u8d2a\u5fc3\u7684\u8fdb\u53bb\u4e86\uff0c\u5e76\u4e14\u8d2a\u5fc3\u7684\u8f93\u51fa\u4e86\u4e2a4\uff0c\u7136\u800c\uff0c\u6211\u4eec\u4e00\u773c\u5c31\u77e5\u9053\uff0c\u6b64\u65f6\u6211\u4eec\u56de\u4e0d\u53bb\u4e86\uff0c\u65e0\u6cd5\u8d70\u5b8c\u90a3\u4e2a\u6b27\u62c9\u56de\u8def\u3002\u4e8b\u5b9e\u4e0a\uff0cdfs\u8fd8\u5728\u7ee7\u7eed\uff0c\u4ed6\u6700\u540e\u8f93\u51fa\n1 2 3 4 6 5 3\n\n\u5728\u56de\u6eaf\u8bb0\u5f55\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e5f\u5148\u52304\uff0c4\u7684\u641c\u7d22\u5b50\u6811\u5df2\u7ecf\u6ca1\u4e86\uff0c4\u5165\u6808\uff0c\u56de\u52303\uff0c\u7ee7\u7eed\u5f806\u8d70\uff0c5, 3\uff0c\u56de\u5230 2\uff0c 1\n\n\u6700\u540e\u7ed3\u679c\u662f\u8fd9\u6837\u7684\n\n4 3 5 6 3 2 1\n\n\u5012\u5e8f\u4e00\u4e0b\u662f\u8fd9\u6837\n\n1 2 3 6 5 3 4\n\n## \u6700\u540e\u7406\u6027\u7684\u603b\u7ed3\n\u56e0\u4e3a\u6211\u4eec\u5728\u904d\u5386\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u8003\u8651\u70b9\u662f\u5426\u7b26\u5408\u67d0\u4e2a\u6761\u4ef6\uff0c\u5728\u7b26\u5408\u67d0\u4e2a\u6761\u4ef6\u4e0b\u6211\u4eec\u8fdb\u5165\u4e86\u4e00\u4e2a\u70b9\uff0c\u4e00\u822c\u6765\u8bf4\u662f\u53ef\u4ee5\u76f4\u63a5\u8f93\u6ca1\u9519\u3002\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u7684\u5224\u5b9a\u6761\u4ef6\uff0c\u4ec5\u4ec5\u662f\u5e8f\u53f7\u4f18\u5148\u800c\u5df2\uff0c\u5e76\u4e0d\u4fdd\u8bc1\u8fd9\u4e2a\u662f\u5bf9\u7684\uff0c\u662f\u7b26\u5408\u8981\u6c42\u7684\u3002\u6211\u4eec\u5e94\u8be5\u5728\u641c\u5b8c\u7b26\u5408\u8981\u6c42\u7684\u70b9\u540e\uff0c\u56de\u6eaf\u65f6\u8bb0\u5f55\uff0c\u6b64\u65f6\u8fd9\u4e2a\u987a\u5e8f\u662f \u7b26\u5408\u60c5\u51b5\u4e0b\u7684\u5012\u5e8f\u3002\n\n\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\u8fd8\u8fd9\u4e48\u957fQAQ\uff0c\u6c42\u8fc7",
        "postTime": 1540919463,
        "uid": 56936,
        "name": "Mogu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u6b27\u62c9\u56de\u8def\u7684\u6a21\u677f\u9898\uff0c\u90a3\u4e48\u5728\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2ahierholzer\u7684\u505a\u6cd5\u3002\n\n\u5bf9\u4e8e\u6c42\u6b27\u62c9\u56de\u8def\u7684\u95ee\u9898\uff0c\u6709Fluery\u7b97\u6cd5\u548cHierholzers\u7b97\u6cd5\uff0c\u4e24\u79cd\u7b97\u6cd5\u3002\n\n\u540e\u9762\u4e00\u79cd\u7b97\u6cd5\u65e0\u8bba\u662f\u7f16\u7a0b\u590d\u6742\u5ea6\u8fd8\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u597d\u50cf\u90fd\u6bd4\u524d\u79cd\u7b97\u6cd5\u590d\u6742\u5ea6\u66f4\u4f18\uff0c\u4f46\u524d\u8005\u7684\u5e94\u7528\u5e7f\u6cdb\u6027\u597d\u50cf\u6bd4\u540e\u8005\u66f4\u9ad8\u3002\n\n\u5bf9\u4e8eHierholzers\u7b97\u6cd5\uff0c\u524d\u63d0\u662f\u5047\u8bbe\u56feG\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff0c\u5373\u6709\u5411\u56fe\u4efb\u610f\n\u70b9\u7684\u51fa\u5ea6\u548c\u5165\u5ea6\u76f8\u540c\u3002\u4ece\u4efb\u610f\u4e00\u4e2a\u8d77\u59cb\u70b9v\u5f00\u59cb\u904d\u5386\uff0c\u76f4\u5230\u518d\u6b21\u5230\u8fbe\n\u70b9v\uff0c\u5373\u5bfb\u627e\u4e00\u4e2a\u73af\uff0c\u8fd9\u4f1a\u4fdd\u8bc1\u4e00\u5b9a\u53ef\u4ee5\u5230\u8fbe\u70b9v\uff0c\u56e0\u4e3a\u904d\u5386\u5230\u4efb\u610f\u4e00\n\u4e2a\u70b9u\uff0c\u7531\u4e8e\u5176\u51fa\u5ea6\u548c\u5165\u5ea6\u76f8\u540c\uff0c\u6545u\u4e00\u5b9a\u5b58\u5728\u4e00\u6761\u51fa\u8fb9\uff0c\u6240\u4ee5\u4e00\u5b9a\u53ef\n\u4ee5\u5230\u8fbev\u3002\u5c06\u6b64\u73af\u5b9a\u4e49\u4e3aC\uff0c\u5982\u679c\u73afC\u4e2d\u5b58\u5728\u67d0\u4e2a\u70b9x\uff0c\u5176\u6709\u51fa\u8fb9\u4e0d\u5728\u73af\n\u4e2d\uff0c\u5219\u7ee7\u7eed\u4ee5\u6b64\u70b9x\u5f00\u59cb\u904d\u5386\u5bfb\u627e\u73afC\u2019\uff0c\u5c06\u73afC\u3001C\u2019\u8fde\u63a5\u8d77\u6765\u4e5f\u662f\u4e00\u4e2a\n\u5927\u73af\uff0c\u5982\u6b64\u5f80\u590d\uff0c\u76f4\u5230\u56feG\u4e2d\u6240\u6709\u7684\u8fb9\u5747\u5df2\u7ecf\u6dfb\u52a0\u5230\u73af\u4e2d\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\n\n![](https://cdn.luogu.com.cn/upload/pic/15207.png)\n\n\u5728\u624b\u52a8\u5bfb\u627e\u6b27\u62c9\u8def\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4ece\u70b9 4 \u5f00\u59cb\uff0c\u4e00\u7b14\u5212\u5230\u8fbe\u4e86\u70b9 5\uff0c\u5f62\u6210\u8def\u5f84 4-5-2-3-6-5\u3002\u6b64\u65f6\u6211\u4eec\u628a\u8fd9\u6761\u8def\u5f84\u53bb\u6389\uff0c\u5219\u5269\u4e0b\u4e09\u6761\u8fb9\uff0c2-4-1-2 \u53ef\u4ee5\u4e00\u7b14\u753b\u51fa\u3002\n\n\u8fd9\u4e24\u6761\u8def\u5f84\u5728\u70b9 2 \u6709\u4ea4\u63a5\u5904\uff08\u5176\u5b9e\u70b9 4 \u4e5f\u662f\u4e00\u6837\u7684\uff09\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u7b14\u753b\u51fa\u7ea2\u8272\u8f68\u8ff9\u5230\u8fbe\u70b9 2 \u7684\u65f6\u5019\uff0c\u4e00\u7b14\u753b\u51fa\u9ec4\u8272\u8f68\u8ff9\uff0c\u518d\u56de\u5230\u70b9 2\uff0c\u628a\u5269\u4e0b\u7684\u7ea2\u8272\u8f68\u8ff9\u753b\u5b8c\u3002\n\n~~\u65e2\u7136\u662f\u6a21\u677f\u9898..\u90a3\u4e48\u5f53\u7136\u9009\u62e9\u597d\u5199\u7684~~\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#include <stack>\nusing namespace std;\nconst int maxn = 1031;\nint G[maxn][maxn], du[maxn];\nint n,m;\nstack<int> S;//\u7528\u4e00\u4e2a\u6808\u6765\u4fdd\u5b58\u8def\u5f84\nvoid dfs(int u)\n{\n    for(int v=1; v<=n; v++)\n        if(G[u][v])\n\t\t{\n            G[u][v]--;\n            G[v][u]--;\n            dfs(v);    \n        }\n    S.push(u);\n}\nint main(){\n   \n    cin>>m;\n    int u,v;\n    for(int i=1; i<=m; i++){\n\t    cin>>u>>v;\n\t    n = max(n,u);\n\t\tn = max(n,v); \n        G[u][v]++;\n        G[v][u]++;\n        du[u]++;\n        du[v]++;\n    }//\u7528\u90bb\u63a5\u77e9\u9635\u8bb0\u5f55\u56fe\n    int s = 1;\n    for(int i=1; i<=n; i++)\n        if(du[i]%2==1) \n\t\t{\t\n\t\t\ts=i;\n\t\t\tbreak;\n\t    }//\u5bfb\u627e\u8d77\u70b9\n    dfs(s);\n    while(!S.empty()){\n        cout<<S.top()<<endl;\n        S.pop();\n    }\n    return 0;\n}\n```\n\u5728 DFS \u7684\u8fc7\u7a0b\u4e2d\u4e0d\u7528\u6062\u590d\u8fb9\uff0c\u9760\u51fa\u6808\u8bb0\u5f55\u8def\u5f84\u3002",
        "postTime": 1520233903,
        "uid": 28084,
        "name": "Misaka_Azusa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "### \u4e00\u4e2a\u66f4\u4f18\u79c0\u7684\u6b27\u62c9\u56de\u8def~\n\n---\n\n\u5927\u5bb6\u7684\u6b27\u62c9\u56de\u8def\u90fd\u662f \u65f6\u95f4: $O(n^2)$ ,\u7a7a\u95f4:$O(n^2)$ \u7684 ,\u5176\u5b9e\u53ef\u4ee5\u4f18\u5316\u5230 \u65f6\u95f4:$O(nlogn)$, \u7a7a\u95f4$O(n)$\n\n\u9996\u5148\u62d2\u7edd\u4f7f\u7528\u90bb\u63a5\u77e9\u9635,\u4f46\u7531\u4e8e\u7528\u90bb\u63a5\u8868\u4e0d\u597d\u5904\u7406\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u9650\u5236,\u6240\u4ee5\u4f7f\u7528  **vector** \u662f\u5b58\u56fe\u662f\u5fc5\u7136\u9009\u62e9\n\n\u7136\u540e\u600e\u4e48\u8ba9\u4e00\u6761\u53cc\u5411\u8fb9\u4e0d\u56de\u8d70\u4e24\u6b21\u5462??\n\n\u5f00\u4e2a\u4e8c\u7ef4vis\u6570\u7ec4??\u8fd9\u6837\u7684\u8bdd\u7a7a\u95f4\u5c31\u4e0d\u662f $O(n)$ \u7684\u4e86QAQ\n\n\u5f00\u4e2a **map** \u5c31\u89e3\u51b3\u4e86\u5416!! ( **\u6ce8:** \u5982\u679c\u9898\u76ee\u662f\u5355\u5411\u8fb9\u5c31\u4e0d\u9700\u8981map\u5566)\n\n\u5176\u5b9e\u53ef\u4ee5\u52a0\u8fb9\u7684\u65f6\u5019\u518d\u5b58\u4e2a\u7f16\u53f7(\u4ece$2$\u5f00\u59cb),\u6839\u636e\u5f00\u4e00\u4e2a\u4e00\u4f4d\u7684vis\u6570\u7ec4,\u53cd\u5411\u8fb9\u5c31\u662f [\u5f53\u524d\u8fb9\u7684\u7f16\u53f7^1]\n\n\u4e0d\u8fc7\u7531\u4e8evector\u5185\u90e8\u7684\u6392\u5e8f\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u5df2\u7ecf\u662f $O(nlogn)$ ,\u6240\u4ee5\u8fd9\u4e2a\u4f18\u5316\u4e0d\u8981\u4e5f\u65e0\u59a8\n\n*code:*\n\n```cpp\n#include<iostream>\n#include<algorithm> \n#include<cstdio>\n#include<map>\n#include<vector>\n#include<cstring>\nusing namespace std;\n#define N 1010\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\nint n,st,du[N],m,tmp[N],ans[N<<3],top;\nmap<pair<int,int>,int> mp; //(u,v)\nvector<int> edge[N];\nvoid Euler(int u){\n\twhile(1){\n\t\twhile(tmp[u]<edge[u].size()&&!mp[make_pair(u,edge[u][tmp[u]])])tmp[u]++;//\u5982\u679c\u53cd\u5411\u8fb9\u88ab\u8d70\u8fc7\u5c31\u4e0d\u8d70\u4e86\n\t\tif(tmp[u]>=edge[u].size())break;\n\t\tint v=edge[u][tmp[u]];\n\t\tmp[make_pair(u,v)]--;\n\t\tmp[make_pair(v,u)]--;//\u6807\u8bb0\u53cd\u5411\u8fb9\n\t\t++tmp[u];\n\t\tEuler(v);\n\t}\n\tans[++top]=u;\n}\nint main(){\n\tm=read();st=n=550;\n\tfor(int i=1;i<=m;i++){\n\t\tint u=read(),v=read();\n\t\tedge[u].push_back(v);\n\t\tedge[v].push_back(u);\n\t\tdu[u]++,du[v]++;\n\t\tst=min(st,min(u,v));\t\n\t\tmp[make_pair(u,v)]++,mp[make_pair(v,u)]++;\t\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tif(du[i]&1){\n\t\t\tst=i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tsort(edge[i].begin(),edge[i].end());//\u6309\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\t}\n\tEuler(st);\n\twhile(top)printf(\"%d\\n\",ans[top--]); //\u5012\u5e8f\u8f93\u51fa\n\treturn 0;\n}\n\n```\n\n[*Froggy's blog*](https://www.luogu.org/blog/1445353309froggy/)\n\n#### \u5471!!\n",
        "postTime": 1577608376,
        "uid": 100285,
        "name": "Froggy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5173\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5728\u9012\u5f52\u540c\u65f6\u8f93\u51fa\u7684\u95ee\u9898\u5f88\u591a\u9898\u89e3\u90fd\u6ca1\u6709\u89e3\u91ca\uff0c\u552f\u4e00\u89e3\u91ca\u4e86\u7684\u9898\u89e3\u91cc\u9762\u7684\u56fe\u4e5f\u6302\u4e86\uff0c\u6240\u4ee5\u6211\u518d\u6765\u5199\u4e00\u904d\u5427\u3002  \n\u5148\u7ed9\u51fa\u4e24\u79cd\u8f93\u51fa\u8def\u5f84\u65b9\u6cd5\uff1a  \n\u9519\u8bef\u7684\uff1a\n```cpp\nvoid dfs(int x)\n{\n\tfor(int i=1;i<=n;i++)if(a[i][x])\n\t{\n\t\tprintf(\"%d\\n\",x);\n\t\ta[i][x]--;a[x][i]--;\n\t\tdfs(i);\n\t}\n}\nint main()\n{\n\t//\u2026\u2026\n    printf(\"%d\",&s);//s\u662f\u8d77\u70b9\n    dfs(s);\n}\n```\n\u6b63\u786e\u7684\uff1a  \n```cpp\nvoid dfs(int x)\n{\n\tfor(int i=1;i<=n;i++)if(a[i][x])\n\t{\n\t\ta[i][x]--;a[x][i]--;\n\t\tdfs(i);\n\t}\n\tp[size++]=x;\n}\nint main()\n{\n\t//\u2026\u2026\n\tdfs(s);\n\tfor(int i=size-1;i>=0;i--)printf(\"%d\\n\",p[i]);\n\treturn 0;\n}\n```\n\u8fd9\u91cc\u7684\u5173\u952e\u95ee\u9898\u5c31\u662f\u524d\u9762\u6240\u8bf4\u7684\uff1a\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5728\u9012\u5f52\u7684\u540c\u65f6\u8f93\u51fa\u8def\u5f84\uff1f  \n\u901a\u8fc7\u4e0b\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u770b\u51fa\u539f\u56e0\uff1a  \n```cpp\n4\n1 3\n1 4\n3 4\n1 2\n```\n\u56fe\u5f62\uff1a\n```cpp\n3\\\n| 1-2\n4/\n```\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u7528\u7b2c\u4e00\u79cd\u65b9\u6cd5\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u9996\u5148\u5f802\u53f7\u70b9\u8d70\uff0c\u7136\u540e\u8f93\u51fa1 2\uff0c\u4f46\u76f4\u63a5\u5f802\u53f7\u8282\u70b9\u8d70\u5c31\u4f1a\u88ab\u5361\u4f4f\u3002\u800c\u51fa\u6808\u8bb0\u5f55\u8def\u5f84\u7684\u65b9\u6cd5\u5c31\u80fd\u907f\u5f00\u8fd9\u4e00\u70b9\uff0c\u5f802\u8d70\u4e4b\u540e\u6808\u91cc\u7684\u987a\u5e8f\u662f2 1\uff0c\u8d70\u5b8c\u540e\u4f1a\u63092 1 3 4 1\u7684\u65b9\u5f0f\u6b63\u786e\u5730\u8f93\u51fa\u3002\u7531\u4e8e\u662f\u8f93\u51fa\u6808\u9876\uff0c\u6240\u4ee52\u53f7\u8282\u70b9\u4e5f\u4f1a\u6700\u540e\u8f93\u51fa\u3002  \n\u90a3\u4e3a\u4ec0\u4e48\u51fa\u6808\u8f93\u51fa\u7684\u65b9\u5f0f\u9002\u7528\u4e8e\u6240\u6709\u72b6\u6001\u5462\uff1f  \n\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a  \n1.\u6574\u4e2a\u56fe\u662f\u6b27\u62c9\u56de\u8def\uff0c\u9012\u5f52\u65f6\u8f93\u51fa\u548c\u51fa\u6808\u8f93\u51fa\u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u679c\u4e00\u6837\uff0c\u90fd\u91c7\u7528\u7684\u662f\u8d2a\u5fc3\u7684\u65b9\u6cd5\u904d\u5386\u56fe\u3002  \n2.\u6574\u4e2a\u56fe\u662f\u6b27\u62c9\u8def\u4f46\u4e0d\u662f\u6b27\u62c9\u56de\u8def\uff0c\u8fd9\u65f6\u56fe\u53ef\u4ee5\u88ab\u8d77\u70b9\u5206\u4e3a\u4e00\u4e2a\u6b27\u62c9\u56de\u8def\u7684\u5b50\u56fe\u4e0e\u4e00\u4e2a\u6b27\u62c9\u8def\u7684\u5b50\u56fe\u3002\u5f53\u6309\u51fa\u6808\u65b9\u6cd5\u904d\u5386\u65f6\uff0c\u5047\u8bbe\u6b27\u62c9\u8def\u662f\u4e0a\u9762\u7684\u4f1a\u5728\u904d\u5386\u5b8c\u6574\u5f20\u56fe\u524d\u88ab\u5361\u4f4f\u7684\u60c5\u51b5\uff1a  \n\u5982\u679c\u6b27\u62c9\u56de\u8def\u7684\u4f18\u5148\u7ea7\u4f4e\uff0c\u7a0b\u5e8f\u4f1a\u904d\u5386\u5b8c\u6574\u5f20\u56fe\u624d\u5f00\u59cb\u4ece\u6700\u540e\u4e00\u5c42\u51fd\u6570\u8fd4\u56de\uff0c\u8f93\u51fa\u987a\u5e8f\u662f\u5148\u6b27\u62c9\u56de\u8def\u518d\u6b27\u62c9\u8def\uff1b  \n\u5982\u679c\u6b27\u62c9\u8def\u7684\u904d\u5386\u4f18\u5148\u7ea7\u4f4e\uff0c\u5219\u4f1a\u5148\u904d\u5386\u6b27\u62c9\u8def\uff0c\u5f53\u88ab\u5361\u4f4f\u65f6\u8fd4\u56de\uff0c\u6b64\u65f6\u6b27\u62c9\u8def\u4e0a\u7684\u8282\u70b9\u90fd\u5728\u6808\u7684\u6700\u4f4e\u5c42\uff0c\u7136\u540e\u5f00\u59cb\u904d\u5386\u6b27\u62c9\u56de\u8def\uff0c\u6b64\u65f6\u6b27\u62c9\u56de\u8def\u7684\u8282\u70b9\u90fd\u5728\u6808\u9876\u90e8\uff0c\u6240\u4ee5\u8f93\u51fa\u987a\u5e8f\u4ecd\u7136\u662f\u6b63\u786e\u7684\u6b27\u62c9\u56de\u8def\u518d\u6b27\u62c9\u8def\u3002  \n\u6240\u4ee5\uff0c\u51fa\u6808\u7684\u65b9\u6cd5\u8f93\u51fa\u603b\u662f\u6b63\u786e\u7684\u3002  \n\u8fd9\u9898\u4e5f\u63d0\u9192\u4e86\u6211\u4eec\uff1a\u5373\u4f7f\u505a\u7684\u662f\u6a21\u677f\u9898\uff0c\u4e5f\u8981\u7ed3\u5408\u81ea\u5df1\u7684\u60f3\u6cd5\u601d\u8003\u7b97\u6cd5\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\uff0c\u8fd9\u6837\u624d\u80fd\u771f\u6b63\u770b\u61c2\u7b97\u6cd5\uff0c\u4e5f\u80fd\u89e3\u51b3\u81ea\u5df1\u5f00\u59cb\u65f6\u5bf9\u7b97\u6cd5\u7684\u4e0d\u660e\u767d\u5904\u3002  \n\n\u6700\u540e\u4e0a\u4ee3\u7801\uff1a\uff08\u6ce8\u91ca\u91cc\u7684\u662f\u9519\u8bef\u8303\u4f8b\uff09  \n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint a[505][505];\nint m,x,y,cnt[505],s=1024,n,p[1030],size;\nvoid dfs(int x)\n{\n\tfor(int i=1;i<=n;i++)if(a[i][x])\n\t{\n\t\t//printf(\"%d\\n\",x);\n\t\ta[i][x]--;a[x][i]--;\n\t\tdfs(i);\n\t}\n\tp[size++]=x;\n}\nint main()\n{\n\tfor(scanf(\"%d\",&m);m--;)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ta[x][y]++;a[y][x]++;//a[x][y]=a[y][x]=1;\n\t\tcnt[x]++;cnt[y]++;\n\t\tn=max(n,max(y,x));\n\t\ts=min(s,min(x,y));\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(cnt[i]&1)\n\t\t{\n\t\t\ts=i;\n\t\t\tbreak;\n\t\t}\n\t//printf(\"%d\\n\",s);\n\tdfs(s);\n\tfor(int i=size-1;i>=0;i--)printf(\"%d\\n\",p[i]);\n\treturn 0;\n}\n```",
        "postTime": 1558953454,
        "uid": 144740,
        "name": "\u9006\u6d41\u4e4b\u65f6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "```cpp\n/*\n\t\u672c\u849f\u84bb\u7684\u6b27\u62c9\u8def\u5f84\u505a\u6cd5\uff0c\u8bf7\u5927\u5bb6\u770b\u5b8c\u522b\u55b7\n\t\u672c\u4eba\u80fd\u529b\u8fd8\u6709\u5f85\u63d0\u9ad8\n\t\u8c22\u8c22\n\t\u4ed4\u7ec6\u770b\u8fc7\u9898\u76ee\u7684\u4eba\u4f1a\u53d1\u73b0\u672c\u9898\u76ee\u5176\u5b9e\u5e76\u4e0d\u662f\u5f88\u96be \n\t\u8981\u6ce8\u610f\u7684\u662f\u6bcf\u4e00\u6761\u8fb9\u90fd\u8981\u8d70\u4e00\u6b21\uff08\u53ea\u6709\u4e00\u6b21\uff0c\u800c\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u91cd\u590d\u8d70\uff09 \n\t\u6211\u4eec\u53ef\u4ee5\u7528\u6b27\u62c9\u8def\u7684\u65b9\u6cd5\u505a\uff08\u6b27\u62c9\u8def\u6307\u904d\u5386\u56fe\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u4e0d\u61c2\u4eba\u53ef\u4ee5\u4e0a\u7f51\u67e5\u4e00\u4e0b\u6b27\u62c9\u8def\uff09\n\t\u7136\u540e\u4e00\u4e2a\u96be\u70b9\u662f\u8981\u4ee5\u6392\u5e8f\u6700\u5c0f\u8f93\u51fa \n\t\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\u8d77\u70b9\uff080\u4e2a\u5ea6\u4e3a\u5947\u6570\u627e\u6700\u5c0f\uff08\u6b27\u62c9\u56de\u8def\uff09\uff0c2\u4e2a\u5ea6\u4e3a\u5947\u6570\u627e\u6700\u5c0f\u7684\u4e00\u4e2a\u5947\u6570\u70b9\uff08\u6b27\u62c9\u8def\uff09\uff09 \n*/\n#include<bits/stdc++.h>//\u849f\u84bb\u7684\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;\nint n;\nint g[1010][1010];//\u8bb0\u5f55g\u7684\u4fe9\u4e2a\u4e0b\u6807\u7684\u5173\u7cfb \nint du[100000];//\u8bb0\u5f55\u4e0b\u6807\u7684\u5ea6 \nint ans[100000];//\u8bb0\u5f55\u7b54\u6848 \nint ss;\nint s=1000000,d=1000000;\nvoid find(int x)\n{\n    for(int i=1;i<=500;i++)//\u56e0\u4e3a\u6392\u5e8f\u8981\u6700\u5c0f \uff0c\u6240\u4ee5\u4ece\u5c0f\u5f80\u5927\u627e \n    if(g[x][i])//\u5982\u679c\u6709\u8def\u5c31\u8d70\uff0c\u56e0\u4e3a\u6570\u636e\u4fdd\u8bc1\u6709\u89e3\u6240\u4ee5\u4e0d\u7528\u56de\u6eaf\u7b49\u5224\u65ad \n    {\n        g[x][i]--;//x,i\u4e4b\u95f4\u5c11\u4e86\u4e00\u6761\u8def \n        g[i][x]--;\n        find(i);\n    }\n    ans[ss--]=x;//\u5f53\u6211\u4eec\u627e\u5b8c\u6240\u6709\u8def\u518d\u5b58\u5165\u6570\u7ec4 \n}\nint main()\n{\n    cin>>n;\n    ss=n+1;//\u8f93\u51faf+1\u884c \n    for(int i=1;i<=n;i++)\n    {\n        int a,b;\n        cin>>a>>b;//a,b\u8fde\u63a5 \n        g[a][b]++;//\u8868\u793aa\uff0cb\u7684\u8fde\u63a5\u5173\u7cfb\uff08a,b\u4e4b\u95f4\u53ef\u80fd\u4e0d\u6b62\u4e00\u6761\u8fb9\uff09 \n        g[b][a]++;\n        du[a]++;\n        du[b]++;//\u5ea6\u4e5f\u53d8\u5927 \n        s=min(s,min(a,b));//\u627e\u56de\u8def\u60c5\u51b5\u7684\u6700\u5c0f \n    }\n    for(int i=1;i<=500;i++)\n    if(du[i]&1)//\u4f4d\u8fd0\u7b97\u505a\u6cd5\uff0c\u6bd4\u6b63\u5e38\u505a\u6cd5\u5feb\u4e00\u4e9b\uff0c\u76f8\u5f53\u4e8edu[i]%2==1\u3002 \n    {\n        d=min(i,d);//\u627e\u662f\u5426\u6709\u5947\u6570\u70b9\uff0c\u5e76\u627e\u5176\u4e2d\u6700\u5c0f \n    }\n    if(d<1000000)//\u5982\u679cd\u53d8\u4e86\u4e3a\u975e\u56de\u8def \n    { \n        find(d);\n    } \n\telse//\u4e3a\u56de\u8def \n    { \n\t\tfind(s);\n    } \n\tfor(int i=1;i<=n+1;i++)\n        cout<<ans[i]<<endl;\n    /*\n\t\u8fd9\u662f\u672c\u4eba\u7b2c\u4e00\u6b21\u63d0\u4ea4\u9898\u89e3\n\t\u5982\u6709\u4e0d\u5230\u4f4d\u7684\u5730\u65b9\u8bf7\u591a\u591a\u5305\u6db5\n\t\u518d\u6b21\u8c22\u8c22\u60a8\u8010\u5fc3\u7684\u770b\u5b8c\u672c\u849f\u84bb\u7684\u9898\u89e3 \n\t*/ \n}\n```",
        "postTime": 1527298671,
        "uid": 87449,
        "name": "\u4efb\u68a6\u534e",
        "ccfLevel": 0,
        "title": "\u849f\u84bb\u7684\u6b27\u62c9\u8def\u5f84\u505a\u6cd5"
    },
    {
        "content": "\u6b27\u62c9\u56de\u8def\u677f\u5b50+\u8ba1\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u6570\u7ec4\u8bb0\u5f97\u5f00\u5927\u70b9\uff0c\u542c\u540c\u5b66\u8bf4\u5f00\u52301025\u5c31\u591f\u4e86\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint g[1501][1501],du[1501],cu[1501];//\u4e00\u5f00\u59cb\u6570\u7ec4\u5f00500WA\u4e86\u6700\u540e\u4e00\u4e2a\nint n,e,ctp,i,j,x,y,st=1,m,mi,p;\nvoid f(int i)\n{\n    for(int j=mi;j<=m;++j)\n        if(g[i][j])\n        {\n            g[i][j]--;\n            g[j][i]--;//\u8981\u8ba1\u6570\u7684\uff0c\u53ef\u80fd\u4e24\u70b9\u4e4b\u95f4\u5f88\u591a\u6761\u8fb9\uff1b\n            f(j);\n        }\n    cu[++ctp]=i;\n}\n//\u6b27\u62c9\u56de\u8def\u677f\u5b50\nint main()\n{\n    scanf(\"%d\",&e);\n    for(i=1;i<=e;++i)\n    {\n        scanf(\"%d%d\",&x,&y);\n        ++g[y][x];\n        ++g[x][y];\n        du[x]++;\n        du[y]++;//\u6b27\u62c9\u56de\u8def\u7684\u7edf\u8ba1\u73af\u8282\n        m=max(m,x);\n        m=max(m,y);\n        mi=min(mi,x);\n        mi=min(mi,y);\n}\n//\u6211\u6015\u6570\u636e\u4e0d\u4ece1\u5f00\u59cb\u5c31\u7edf\u8ba1\u4e86\u6700\u5927\u548c\u6700\u5c0fQAQ\uff0c\u4f46\u8c8c\u4f3c\u53ea\u9700\u8981\u7edf\u8ba1\u6700\u5927\u503c\u5c31\u597d\u4e86\n    for(i=mi;i<=m;++i)\n        if(du[i]%2)\n            {\n                st=i;\n                break;\n}\n//\u627e\u5230\u6700\u5c0f\u7684\u5947\u70b9\u5c31\u8df3\u51fa\u5faa\u73af\u5e76\u5f00\u59cb\u641c\u7d22\n    f(st);\n    for(i=ctp;i>=1;--i)//\u8bb0\u5f97\u53cd\u5e8f\u8f93\u51fa\n        printf(\"%d\\n\",cu[i]);\n    return 0;\n}\n```",
        "postTime": 1502801496,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u6ca1\u6709\u4eba\u4f7f\u7528 STL \u4e2d\u7684 vector\uff0c\u90a3\u4e48\u6211\u8865\u4e00\u53d1\u3002\n\n\u65e2\u7136\u662f\u627e\u6b27\u62c9\u56de\u8def\uff08\u4e0b\u9762\u7684\u5927\u4f6c\u4eec\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u5982\u679c\u8fd8\u4e0d\u591f\u61c2\u95ee\u5ea6\u5a18\u662f\u4e2a\u597d\u9009\u62e9\uff09\u3002\u8f93\u5165\u6bcf\u6761\u8fb9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u521a\u597d\u53ef\u4ee5\u7528 vector \u6765\u50a8\u5b58\u6bcf\u4e00\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u5176\u4ed6\u70b9\uff0c\u8fd9\u6837\u505a\u7684\u597d\u5904\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u70b9\uff1a\n\n- 1 . \u663e\u7136\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u518d\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u50a8\u5b58\u6bcf\u4e2a\u70b9\u7684\u51fa\u5165\u5ea6\uff0c\u76f4\u63a5\u7528 vector.size() \u5373\u53ef\u3002\u5728\u5bfb\u627e \u6b27\u62c9\u56de\u8def \u7684\u8d77\u70b9\u65f6\uff0c\u6211\u4eec\u626b\u4e00\u904d\u6bcf\u4e2a\u9876\u70b9\u7684 vector\uff0c\u5148\u627e size \u4e3a\u5947\u6570\u7684\u5f00\u59cb\u904d\u5386\uff0c\u5982\u679c\u6ca1\u6709\u5219\u627e size \u5927\u4e8e 1 \u7684\uff08\u8c01\u77e5\u9053\u7b2c 1 \u4e2a\u70b9\u5728\u6570\u636e\u4e2d\u5b58\u4e0d\u5b58\u5728\u5462\u2026\u2026\uff09\u3002\n\n- 2 . \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 r [ i ] [ j ] \u8868\u793a\u70b9 i \u5230\u70b9 j \u8fde\u63a5\u4e86\u591a\u5c11\u8fb9\uff0c\u5982\u679c\u6211\u4eec\u5728\u9012\u5f52\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7528 for \u5faa\u73af\u4ece\u7b2c 1 \u4e2a\u9876\u70b9\u5230\u7b2c n \u4e2a\u9876\u70b9\u5bfb\u627e\u70b9 i \u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\uff0c\u672a\u514d\u6709\u70b9\u6162\uff0c\u521a\u597d\uff0c\u6211\u4eec\u5df2\u7ecf\u628a\u70b9 i \u6240\u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\u50a8\u5b58\u5728\u5bf9\u5e94\u7684 vector \u4e2d\uff0c\u5148\u7528 for \u5faa\u73af\u5c1d\u8bd5 vector \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u518d\u5224\u65ad r [ i ] [ j ]\uff0c\u53ef\u4ee5\u8282\u7701\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u5ea6\u3002\n\n- 3 . \u7531\u4e8e\u8f93\u51fa\u8981\u6309\u9898\u76ee\u6240\u8981\u6c42\u7684\u6392\u5217\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528 vector \u7684\u8fed\u4ee3\u5668\u6765\u7ed9\u6bcf\u4e00\u4e2a\u9876\u70b9\u7684 vector \u6392\u5e8f\uff0c\u4ee5\u627e\u5230\u6700\u4f18\u7b54\u6848\u3002\n\n\u4e0d\u591a\u8bf4\u4e86\uff0c\u4e3b\u8981\u90e8\u5206\u8fd8\u662f\u6548\u4eff\u697c\u4e0b\u5404\u4f4d\u5927\u4f6c\u7684\uff0c\u672c\u4eba\u53ea\u662f\u52a0\u4e86\u4e2a vector \u4f18\u5316\u4e86\u800c\u5df2\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nvector < int > V[501]; // vector \u6570\u7ec4\uff0c\u6bcf\u4e00\u4e2a\u9876\u70b9\u5bf9\u5e94\u6bcf\u4e00\u4e2a vector \nint n , m = 0 , x , y , r[501][501] , ans[1080] , f = 0 , l = 0;\n\nvoid NextStep(int p){\n    for(int i = 0 ; i < V[p].size() ; i++)\n        if(r[p][V[p][i]] > 0){\n            r[p][V[p][i]]-- , r[V[p][i]][p]--;\n            NextStep(V[p][i]);\n        }\n    ans[++l] = p; // \u8bb0\u5f55\u76ee\u524d\u7b54\u6848 \n}\n\nint main(){\n    scanf(\"%d\" , &n);\n    for(int i = 1 ; i <= n ; i++)\n        scanf(\"%d%d\" , &x , &y) , V[x].push_back(y) , V[y].push_back(x),\n        m = max(m , max(x , y)) , r[x][y]++ , r[y][x]++; // \u8fde\u8fb9 \n    for(int i = 1 ; i <= m ; i++)\n        sort(V[i].begin() , V[i].end()); // \u8fd0\u7528\u8fed\u4ee3\u5668\u7ed9\u6bcf\u4e00\u4e2a\u9876\u70b9\u7684 vector \u8fdb\u884c\u6392\u5e8f \n    for(int i = 1 ; i <= m ; i++)\n        if(V[i].size() % 2){\n            NextStep(i) , f = 1; // \u5bfb\u627e\u53ef\u80fd\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5947\u6570\u70b9 \n            break;\n        }\n    if(!f) // \u5982\u679c\u4e0d\u5b58\u5728\u5947\u6570\u70b9\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u6709\u6548\u70b9 \n    for(int i = 1 ; i <= m ; i++)\n        if(V[i].size()){\n            NextStep(i);\n            break;\n        }\n    for(int i = l ; i >= 1 ; i--)\n        printf(\"%d\\n\" , ans[i]); // \u8f93\u51fa\u6700\u4f18\u7b54\u6848 \n    return 0;\n}\n```",
        "postTime": 1501237066,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u8fd9\u5c31\u662f\u4e00\u9053~~\u5f88\u6c34~~\u7684\u4e00\u7b14\u5212\u95ee\u9898\n\n```\n//P2731\n#include<bits/stdc++.h>//\u61d2\u4eba\u6700\u7231\uff0c\u5927\u5bb6\u522b\u5b66 \nusing namespace std;\nint e[510][510],ot[510],m,n,u,v,st[60000],top=0;\n```\n\n\u51fd\u6570\u90e8\u5206\uff1a\n\n```\nint dfs(int u){\n    for(int i=1;i<=n;i++){\n        if(e[u][i]){//\u5224\u65ad \n            e[u][i]--;\n            e[i][u]--;\n            dfs(i);\n        }\n    }\n    st[++top]=u;\n    return 0;\n}\n```\n\n\u4e3b\u51fd\u6570\n\n```\nint main(){\n    cin>>m;\n    for(int i=1;i<=m;i++){\n        cin>>u>>v;//\u8bfb\u5165 \n        ot[u]++;\n\t\tot[v]++;\n        if(u>n)n=u;\n\t\tif(v>n)n=v;\n        e[u][v]++;\n\t\te[v][u]++;\n    }\n    bool flag=0;\n    for(int i=1;i<=n;i++){\n    \tif((ot[i]&1)==1){\n\t\t    dfs(i);\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n    if(!flag)dfs(1);\n    while(top)cout<<st[top--]<<endl;//\u8f93\u51fa\n\treturn 0;//\u5b8c\u7f8e\u7ed3\u675f \n}\n```\n\n\u8c22\u8c22\u89c2\u770b\n\n\u849f\u84bb\u7684\u9898\u89e3\uff0c\u5982\u679c\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u6b22\u8fce\u63d0\u51fa\uff0c\u770b\u4e0d\u61c2\u7684\u5c31\u770b\u770b\u522b\u4eba\u7684\u5427",
        "postTime": 1565614139,
        "uid": 235981,
        "name": "\u849f\u84bbJason\u5468",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u6765\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u6b27\u62c9\u56de\u8def\u4e0e\u6b27\u62c9\u8def\u5f84\n\n1.\u5728\u4e00\u4e2a\u56fe\u4e2d\uff0c\u80fd\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u8d70\u5b8c\u6240\u6709\u7684\u8fb9\uff0c\u5e76\u4e14\u6bcf\u6761\u8fb9\u53ea\u80fd\u8d70\u4e00\u6b21\uff0c\u6700\u540e\u56de\u5230\u51fa\u53d1\u70b9\uff0c\u8fd9\u6837\u7684\u8def\u5f84\u5c31\u53eb\u505a\u6b27\u62c9\u56de\u8def\uff0c\u6709\u6b27\u62c9\u56de\u8def\u7684\u8def\u5f84\u5c31\u53eb\u6b27\u62c9\u56fe\u3002\n\u5728\u6b27\u62c9\u56fe\u4e2d\uff0c\u6240\u6709\u70b9\u8fde\u63a5\u7684\u8fb9\u90fd\u4e3a\u5076\u6570\u6761\u3002\n\n2.\u5728\u4e00\u4e2a\u56fe\u4e2d\uff0c\u80fd\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u8d70\u5b8c\u6240\u6709\u7684\u8fb9\uff0c\u5e76\u4e14\u6bcf\u6761\u8fb9\u53ea\u80fd\u8d70\u4e00\u6b21\uff0c\u8fd9\u6837\u7684\u8def\u5f84\u5c31\u53eb\u505a\u6b27\u62c9\u8def\u5f84\uff08\u4e0d\u4e00\u5b9a\u56de\u5230\u8d77\u70b9\uff09\uff0c\u6709\u6b27\u62c9\u8def\u5f84\u7684\u8def\u5f84\u5c31\u53eb\u534a\u6b27\u62c9\u56fe\u3002\n\u5728\u534a\u6b27\u62c9\u56fe\u4e2d\uff0c\u6709\u4e24\u4e2a\u70b9\u8fde\u63a5\u7684\u8fb9\u6570\u4e3a\u5947\u6570\u6761\u8fb9\uff08\u8fd9\u4e24\u4e2a\u70b9\u662f\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff09\uff0c\u5176\u4f59\u6240\u6709\u70b9\u8fde\u63a5\u7684\u8fb9\u90fd\u4e3a\u5076\u6570\u6761\u3002\n\n3.\n\u5728\u9898\u76ee\u4e2d\uff0c\u5f80\u5f80\u9700\u8981\u4f60\u5224\u65ad\u5230\u5e95\u662f\u6c42\u6b27\u62c9\u8def\u8fd8\u662f\u6b27\u62c9\u56de\u8def\uff0c\u8fd9\u65f6\u5019\uff0c\u4f60\u5c31\u9700\u8981\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u70b9\u8fde\u7684\u8fb9\u7684\u6570\u91cf\uff08\u4f8b\u5982\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684b\u6570\u7ec4\uff09\uff0c\u4ece\u800c\u786e\u5b9adfs\u7684\u8d77\u70b9\u3002\u5982\u679c\u6240\u6709\u7684\u70b9\u8fde\u63a5\u7684\u8fb9\u90fd\u662f\u5076\u6570\uff0c\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u8d77\u70b9\u4e3a1.\n\n4.\u6c42\u6b27\u62c9\u8def\u5f84\u7684\u4e3b\u8981\u601d\u8def\u662fdfs,\u4e5f\u53ef\u4ee5\u7528\u6808\u4f18\u5316dfs,dfs\u90e8\u5206\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002\u4e0d\u8fc7\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u5c31\u662f\uff0c\u5728\u5b58\u56fe\u548c\u641c\u7d22\u7684\u65f6\u5019\uff0c\u5b58\u5165\u8fb9\u548c\u5220\u9664\u8fb9\u90fd\u662f**\u53cc\u5411\u7684**\u3002\n\n5.\u672c\u849f\u84bb\u5728\u505a\u6b27\u62c9\u51fd\u6570\u7684\u6a21\u677f\u9898\u4e2d\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u8f93\u51fa\u7684\u8def\u5f84\u5fc5\u987b\u662f\u6309\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c~~\u4f46\u662f\u849f\u84bb\u7684\u6211\u5e76\u4e0d\u4f1a\u7528\u6808~~\uff0c\u6240\u4ee5\u6211\u60f3\u5230\u4e86\u4e00\u4e2a\u65b9\u6cd5\n\n\u4f8b\u5982\u5728\u4e00\u4e2a\u4e09\u4e2a\u70b9\u7684\u73af\u4e2d \u6211\u4eec\u7684\u7a0b\u5e8f\u9ed8\u8ba4\u8f93\u51fa 1321\n\u8fd9\u4e2a\u8f93\u51fa\u7684\u539f\u56e0\u5e94\u8be5\u5f88\u597d\u7406\u89e3 \u5c31\u662f \u6211\u4eec\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d \u662f\u4ece1\u5230n \u7684 \u6240\u4ee5\u6700\u540e\u8f93\u51fa\u7684\u662fn\uff0c\u6240\u4ee5\u6211\u5f00\u59cb\u601d\u8003\u53ef\u4e0d\u53ef\u4ee5\u628a\u5faa\u73af\u53d8\u6210n\u52301\u3002\n\u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u8f93\u51fa\u786e\u5b9e\u53d8\u6210\u4e861231\uff0c\u4f46\u662f\u5728\u9047\u4e0a\u66f4\u5f3a\u7684\u6570\u636e\u65f6\u8fd8\u662f\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\n\n```cpp\nint f( long i)\n{\n\tint j;\n\tfor (j=500; j>=1; j--)//\u8fd9\u662f\u6539\u52a8\u8fc7\u7684\u5730\u65b9\n\tif (a[i][j]==1) \n\t{\n\t\ta[i][j]=0;\n\t\ta[j][i]=0;\n\t\tf(j);\n\t}\n\t\ts=s+1;\n\t\tc[s]=i;\n\t\n}\n```\n6.\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint f(long i);\nint a[1000][1000],b[1000],c[1000],n,m,s=0,t,i,j,y,z;;\nint main ()\n{\n\tcin>>n>>m;\n\tfor (i=1; i<=1000; i++)\n\t  for (j=1; j<=1000; j++)\n\t  a[i][j]=0;\n\tfor (i=1; i<=m; i++)\n\t{\n\t\tcin>>y>>z;\n\t\ta[y][z]=1;\n\t\ta[z][y]=1;\n\t\tb[y]++;\n\t\tb[z]++;\n    }\n\tt=1;\n\tfor (i=1; i<=n; i++)\n\t{\n\t\t\tif (b[i]%2==1) t=i; \t}\n\tf(t);\n\tfor (i=1; i<=s; i++)\n\t\tcout<<c[i]<<\" \";\n}\nint f( long i)\n{\n\tint j;\n\tfor (j=1; j<=1000; j++)\n\tif (a[i][j]==1) \n\t{\n\t\ta[i][j]=0;\n\t\ta[j][i]=0;\n\t\tf(j);\n\t}\n\t\ts=s+1;\n\t\tc[s]=i;\n\t\n}\n\n\n```",
        "postTime": 1535982248,
        "uid": 112675,
        "name": "mjc24268",
        "ccfLevel": 0,
        "title": "\u6b27\u62c9\u56de\u8def\u4e0e\u6b27\u62c9\u8def\u5f84"
    },
    {
        "content": "### \u7b80\u8ff0\u9898\u610f\n  \u7ed9\u4f60F\u6761\u8fb9\uff0c\u53eb\u4f60\u8f93\u51fa\u4e00\u79cd\u8def\u5f84\uff0c\u4f7f\u5f97\u8be5\u8def\u5f84\u6070\u597d\u7ecf\u8fc7\u6bcf\u6761\u8fb9\u4e00\u6b21\uff0c\u5e76\u4e14\u8def\u5f84\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u8fd9\u5f88\u660e\u663e\u662f\u4e2a\u6b27\u62c9\u8def\u7684\u9898\u4e86\uff0c\u8981\u60f3\u89e3\u51b3\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5f97\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u6b27\u62c9\u8def\u3002\n## \u4ec0\u4e48\u662f\u6b27\u62c9\u8def\n\u5728\u4e00\u5e45\u56fe\u4e2d\uff0c**\u6070\u597d**\u7ecf\u8fc7\u6bcf\u6761\u8fb9**\u4e00\u6b21**\u7684\u8def\u5f84\u53eb\u505a\u6b27\u62c9\u8def\u3002\n## \u4ec0\u4e48\u662f\u6b27\u62c9\u56de\u8def\n\u5982\u679c\u4e00\u6761\u6b27\u62c9\u8def\u7684**\u8d77\u70b9\u4e0e\u7ec8\u70b9\u76f8\u540c**\uff0c\u6211\u4eec\u5c31\u79f0\u8fd9\u6761\u8def\u4e3a\u6b27\u62c9\u56de\u8def\u3002\n## \u6b27\u62c9\u8def\u6709\u4ec0\u4e48\u6027\u8d28\n\u4e0d\u96be\u5f97\u51fa\uff0c\u4e00\u5e45\u56fe\u5982\u679c\u5b58\u5728\u6b27\u62c9\u8def\uff0c\u5219\u4e00\u5b9a**\u9664\u8d77\u70b9\u548c\u7ec8\u70b9\u5916**\uff0c\u6240\u6709\u7ed3\u70b9\u7684**\u5ea6\u90fd\u4e3a\u5076\u6570**\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u8282\u70b9\u8fdb\u6765\u4e00\u904d\uff0c\u5c31\u4e00\u5b9a\u4f1a\u51fa\u53bb\u4e00\u904d\uff0c\u800c\u8d77\u70b9\u53ea\u51fa\u4e0d\u8fdb\uff0c\u7ec8\u70b9\u53ea\u8fdb\u4e0d\u51fa\u3002\n## \u6b27\u62c9\u56de\u8def\u6709\u4ec0\u4e48\u6027\u8d28\n\u6b27\u62c9\u56de\u8def**\u6240\u6709\u7ed3\u70b9**\u7684**\u5ea6\u90fd\u4e3a\u5076\u6570**\u3002\u56e0\u4e3a\u6b27\u62c9\u56de\u8def\u8981\u6c42\u8d77\u70b9\u5fc5\u987b\u540c\u65f6\u4e5f\u662f\u7ec8\u70b9\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4efb\u610f\u7684\u4e00\u70b9\uff0c\u90fd\u662f\u8fdb\u6765\u4e00\u904d\u53c8\u51fa\u53bb\u4e00\u904d\uff0c\u5ea6\u4e00\u5b9a\u4e3a\u5076\u6570\u3002\n### \u601d\u8def\u5206\u6790\n\u77e5\u9053\u4e86\u8fd9\u4e9b\u6027\u8d28\u4e4b\u540e\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u53bb\u89e3\u9898\u5462\uff1f\n\n\u4e0d\u96be\u5f97\u51fa\uff0c\u4e00\u5e45\u56fe\u5982\u679c\u5b58\u5728**\u6b27\u62c9\u8def**\uff0c\u5219\u6b27\u62c9\u8def\u7684\u8d77\u70b9\u4e00\u5b9a\u662f**\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9**\uff0c\u6211\u4eec\u7ba1\u8fd9\u7c7b\u70b9\u53eb\u505a**\u5947\u70b9**\u3002\u800c\u5982\u679c\u5b58\u5728**\u6b27\u62c9\u56de\u8def**\uff0c\u5219\u8d77\u70b9\u53ef\u4ee5\u4e3a**\u4efb\u610f\u70b9**\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u8d77\u70b9\u4e3a**1\u53f7\u7ed3\u70b9**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u8981\u505a\u7684\u5c31\u662f\u627e\u5230\u8fd9\u4e2a\u8d77\u70b9\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u904d $dfs$ \u5c31\u884c\u4e86\u3002\n\n\u5982\u4f55\u627e\u8d77\u70b9\u5462\uff1f\n\n\u6211\u4eec\u4ee4 $e_i$ \u8868\u793a\u7ed3\u70b9i\u7684\u5ea6\uff0c\u5219\u6bcf\u6b21\u8bfb\u5165\u4e00\u6761\u4ece\u7ed3\u70b9 $u$ \u5230\u7ed3\u70b9 $v$ \u7684\u6805\u680f\uff0c $e_u$++ \uff0c $e_v$++\u3002\u8bfb\u5b8c\u6240\u6709\u6805\u680f\u4e4b\u540e\uff0c\u904d\u5386\u4e00\u904d\u6240\u6709\u7684\u7ed3\u70b9\uff0c\u82e5 $e_i$%2==1\uff0c\u5219\u8fd4\u56de\u7ed3\u70b9 $i$ \u5373\u4e3a\u8d77\u70b9\uff0c\u82e5\u672a\u627e\u5230\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684 $e_i$ \uff0c\u5219\u8fd4\u56de\u7ed3\u70b91\u4e3a\u8d77\u70b9\u3002\n\n\u6700\u540e $dfs$ \u4e00\u904d\uff0c\u8bb0\u5f55\u8def\u5f84\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n**\u6ce8\u610f\uff1a\u8be5\u9898\u6709\u91cd\u8fb9**\n\n### AC\u4ee3\u7801\u5982\u4e0b\uff1a\n\t#include<iostream>\n\t#include<cstdio>\n\t#include<cstring>\n\tusing namespace std;\n\tint farm[550][550];//farm[i][j]\u8868\u793ai\u5230j\u4e4b\u95f4\u6709\u51e0\u6761\u8fb9 \n\tint e[550];//e[i]\u8868\u793ai\u7ed3\u70b9\u7684\u5ea6 \n\tint out[1050],h=0;//out\u8bb0\u5f55\u8f93\u51fa\u5e8f\u5217\uff0ch\u4e3aout\u7684\u4e0b\u6807 \n\tint maxn=0;//\u6700\u5927\u7ed3\u70b9\uff0c\u56e0\u8f93\u5165\u4e2d\u672a\u544a\u77e5\uff0c\u6240\u4ee5\u8981\u81ea\u5df1\u627e \n\tint f;//\u6805\u680f\u6570 \n\tint find_ji(){//\u627e\u5947\u70b9 \n\tfor(int i=1;i<=maxn;i++)\n\t\tif(e[i]%2==1)\n\t\t\treturn i;\n\treturn 1;//\u6ca1\u6709\u5219\u8fd4\u56de1 \n\t}\n\tvoid dfs(int now){\n\t\tfor(int i=1;i<=maxn;i++)\n\t\t\tif(farm[now][i]){\n\t\t\t\tfarm[now][i]--;//\u8d70\u8fc7\u4e00\u6761\u8fb9 \n\t\t\t\tfarm[i][now]--;\n\t\t\t\tdfs(i);//\u7ee7\u7eed\u9012\u5f52i\u7ed3\u70b9 \n\t\t\t}\n\t\tout[++h]=now;//\u8bb0\u5f55\u8f93\u51fa\u5e8f\u5217 \n\t}\n\tint main()\n\t{\n\t\tmemset(farm,false,sizeof(farm));\n\t\tmemset(e,0,sizeof(e));\n\t\tscanf(\"%d\",&f);\n\t\tint a,b;\n\t\tfor(int i=1;i<=f;i++){\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tfarm[a][b]++;//a\u548cb\u4e4b\u95f4\u7684\u8fb9\u6570++ \n\t\t\tfarm[b][a]++;\n\t\t\te[a]++;//a\uff0cb\u7684\u5ea6++ \n\t\t\te[b]++;\n\t\t\tmaxn=max(maxn,max(a,b));//\u627e\u6700\u5927\u7ed3\u70b9 \n\t\t}\n\t\tint ji=find_ji();\n\t\tdfs(ji);//\u4ece\u5947\u70b9\u5f00\u59cb \n\t\tfor(int i=h;i>=1;i--)//\u56e0\u4e3a\u6211\u4eec\u662f\u5012\u5e8f\u8bb0\u5f55\u8def\u5f84\u7684\uff0c\u6240\u4ee5\u8981\u5012\u5e8f\u8f93\u51fa \n\t\t\tprintf(\"%d\\n\",out[i]);\n\t\treturn 0;\n\t}",
        "postTime": 1583120878,
        "uid": 208529,
        "name": "Konnyaku_LXZ",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f\u3011"
    },
    {
        "content": "##### //\u8fd9\u4e2a\u9898\u76ee\u6bd4\u8f83\u7279\u6b8a,\u4e0e\u4e00\u672c\u901a\u4f8b\u9898\u4e00\u7b14\u753b\u5927\u6982\u6709\u8fd9\u4e9b\u4e0d\u540c\uff1a \n\n------------\n\n##### //\u9996\u5148\uff0c\u4e00\u6761\u8def\u5f84\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u6b21\n\n------------\n\n##### //\u5176\u6b21\uff0c\u8f93\u51fa\u7b54\u6848\u7684\u987a\u5e8f \u662f\u6309\u7167\u8282\u70b9\u7f16\u53f7\u6392\u5e8f\uff0c\u4e0d\u662f\u4e00\u7b14\u753b\u7684\u5947\u602a\u987a\u5e8fXD \n\n------------\n\n##### //\u867d\u7136\u662f\u4e00\u7b14\u753b\u6a21\u677f\u9898,\u4f46\u662f\u8981\u505a\u4e00\u4e9b\u6539\u52a8\n\n\n\n------------\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint map[1110][1110];//\u5b58\u67d0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u7684\u8def\u5f84\u6570 \nint ans[1100];//\u5b58\u7b54\u6848\u7684\u6570\u7ec4 \nint oe[1100];//\u50a8\u5b58\u6bcf\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u7684\u6570, \u7528\u6765\u8ba1\u7b97\u5947\u70b9 \nint bian[1100];//\u5b58\u8f93\u5165\u7684\u5404\u4e2a\u8282\u70b9 \nbool hao[1100];//\u7528\u6765\u5224\u65ad\u67d0\u6570\u662f\u5426\u5b58\u5728,\u7528\u6765\u653e\u6b62bian\u6570\u7ec4\u5b58\u4e0b\u91cd\u590d\u7684\u8282\u70b9 \nint num,num1;//\u5b58ans\u7684\u5143\u7d20\u6570\u91cf  \u548c  \u8f93\u5165\u8282\u70b9\u7684\u6570\u91cf \nint n,m;\nvoid dfs(int i)//\u4ee5i\u8282\u70b9\u4e3a\u8d77\u70b9\u641c\u7d22 \n{\n\tfor(int j=1;j<=num1;j++)//\u5728num1\u4e2a\u8282\u70b9\u4e2d\u627e \n\t  {\n\t  \tif(map[i][bian[j]] > 0)//\u5982\u679ci\u4e0ebian[j]\u4e4b\u95f4\u8fd8\u6709\u8def \n\t  \t  {\n\t\t\tmap[i][bian[j]]-=1;//\u8def\u5f84\u6570\u51cf\u4e00 \n\t\t\tmap[bian[j]][i]-=1;//\u53cd\u5411\u8def\u5f84\u4e5f\u51cf\u4e00 \n\t  \t  \tdfs(bian[j]);//\u4ee5\u65b0\u7684\u8282\u70b9\u4e3a\u8d77\u70b9,\u5f00\u59cb\u641c \n\t\t  }\n\t  }\n\tans[++num]=i;//\u8df3\u51fa\u5faa\u73af\u540e,\u7ed9ans\u8d4b\u503c \n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tint x,y;\n\tfor(int i=1;i<=n;i++)//\u5b8c\u7f8e\u6f47\u6d12\u306e\u8f93\u5165 \n\t  {\n\t  \tcin>>x>>y; \n\t  \tif(!hao[x])//\u5982\u679cx\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0 \n\t\t  bian[++num1]=x;//\u5c31\u628a\u4ed6\u653e\u5230bian\u6570\u7ec4\u91cc \n\t  \tif(!hao[y])//\u5982\u679cy\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0 \n\t\t  bian[++num1]=y;//\u540c\u4e0a,\u6254\u8fdb\u53bb \n\t  \thao[x]=hao[y]=1;//\u628ahao\u6570\u7ec4\u7f6e\u4e00,\u8868\u793ax,y\u51fa\u73b0\u8fc7 \n\t  \tmap[x][y]++;//x,y\u4e4b\u95f4,\u6b63\u5411\u53cd\u5411\u7684\u8def\u5f84\u6570\u90fd+1; \n\t\tmap[y][x]++;\n\t  \toe[x]++;//\u4e0ex\u76f8\u8fde\u7684\u8fb9\u52a0\u4e00 \n\t  \toe[y]++;//\u540c\u4e0a \n\t  }\n\tsort(bian+1,bian+num1+1);//\u5bf9bian\u6570\u7ec4\u4e2d\u8282\u70b9\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f,\u6765\u627e\u5230\u9898\u76ee\u8981\u6c42\u7684,\u7f16\u53f7\u6700\u5c0f\u7684\u8d77\u70b9. \n\tint start=1;//dfs\u7684\u8d77\u70b9 \n\tint joe=0;//\u8f85\u52a9\u627e\u5230\u7b2c\u4e00\u4e2a\u5076\u70b9\u7684\u53d8\u91cf \n\tfor(int i=1;i<=num1;i++)//\u627enum1\u4e2a\u8282\u70b9 \n\t  { \n\t    if(oe[bian[i]]%2 == 1)//\u82e5\u80fd\u627e\u5230\u7b2c\u4e00\u4e2a\u5947\u70b9 \n\t      {\n\t        start=bian[i];\n\t        break;//\u505c\u4e0b\u6765 \n\t\t  }\n\t\tif(oe[bian[i]]%2==0 && joe++==0)//\u627e\u5230\u7b2c\u4e00\u4e2a\u5076\u70b9,\u5e76\u4e0d\u7ee7\u7eed\u627e\u5076\u70b9 \n\t\t  start=bian[i];\n\t  }\n\tdfs(start);//\u4ee5\u627e\u5230\u7684\u70b9\u4e3a\u8d77\u70b9,\u5f00\u59cb\u641c \n\tfor(int j=num;j>=1;j--)\n\t  printf(\"%d\\n\",ans[j]);//\u56e0\u4e3adfs\u9012\u5f52\u4e2d\u53cd\u5411\u8d4b\u503c,\u8d77\u70b9\u5728\u6700\u540e,\u6240\u4ee5\u8981\u518d\u53cd\u5411\u8f93\u51fa\u6765 \n\tprintf(\"\\n\");\n\treturn 0;//\u5b8c\u7f8e\u6f47\u6d12\u306e\u7ed3\u675f \n}\n",
        "postTime": 1554730281,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "## ~~\u7b2c\u4e00\u6b21\u5199\u7eff\u9898\u9898\u89e3\uff0c\u5404\u4f4d\u5927\u4f6c\u89c1\u8c05QwQ~~\n\n---\n\n$\\color{blue}\\text{\u849f\u84bb\u5148\u6765\u8bf4\u8bf4\u6b27\u62c9\u56de\u8def\uff1a}$\n\n~~\u4ee5\u4e0b\u5e9f\u8bdd\u6781\u591a\uff0c\u5de8\u4f6c\u4eec\u53ef\u4ee5\u8df3\u8fc7~~\n\n\u6b27\u62c9\u56de\u8def\uff0c\u662f~~\u7a9d\u4eec\u4f1f\u5927\u7684~~\u6b27\u62c9\u5de8\u4f6c\u5728$1736$\u5e74\u53d1\u73b0\u7684\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u4e1c\u897f\u3002\n\n\u5728\u4e1c\u666e\u9c81\u58eb\u54e5\u5c3c\u65af\u5821\uff0c\u6709\u4e00\u6761\u5927\u6cb3\uff0c\u6cb3\u4e2d\u6709\u4e24\u4e2a\u5c0f\u5c9b\u3002\u5168\u57ce\u88ab\u5927\u6cb3\u5206\u5272\u6210\u56db\u5757\u9646\u5730\uff0c\u6cb3\u4e0a\u67b6\u6709\u4e03\u5ea7\u6865\uff0c\u628a\u56db\u5757\u9646\u5730\u8054\u7cfb\u8d77\u6765\uff0c\u89c1\u4ee5\u4e0b~~\u62bd\u8c61~~\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fsx0obkl.png)\n\n\u8fd9\u65f6\u5019\u4eba\u4eec\u5c31\u60f3\uff1a\u201c\u80fd\u5426\u4ece\u67d0\u5730\u51fa\u53d1\uff0c\u4e0d\u91cd\u4e0d\u6f0f\u5730\u8d70\u8fc7\u6bcf\u4e00\u5ea7\u6865\u6881\u540e\u56de\u5230\u539f\u70b9\u5462\uff1f\u201d\n\n\u6b27\u62c9\u5728\u7ecf\u8fc7\u51e0\u756a\u601d\u7d22\uff0c\u5c06\u4e03\u6865\u8f6c\u5316\u4e3a\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/aq65tiw6.png)\n\n\u8fdb\u800c\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\n\n> \u80fd\u5426\u7b14\u4e0d\u79bb\u5f00\u7eb8\uff0c\u4e00\u53e3\u6c14\u753b\u6210\u6574\u4e2a\u56fe\u5f62\uff0c\u4e14\u4e00\u6761\u7ebf\u6bb5\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\u3002\n\n\u663e\u7136\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\n## \u4e3a\u4ec0\u4e48\uff1f\n\n\n> ~~\u5373\u5f97\u6613\u89c1\u5e73\u51e1\uff0c\u4eff\u7167\u4e0a\u4f8b\u663e\u7136\uff0c\u7559\u4f5c\u4e60\u9898\u7b54\u6848\u7565\uff0c\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be~~\n\n\n\u56e0\u4e3a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u662f\u7ec8\u70b9\u4e5f\u4e0d\u662f\u8d77\u70b9\u7684\u70b9\u6765\u8bb2\uff0c\u6211\u4eec\u4ece\u4e00\u6761\u8def\u8d70\u5230\u5b83\u65f6\uff0c\u5fc5\u987b\u7531\u53e6\u5916\u4e00\u6761\u8def\u8d70\u51fa\u53bb\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/a3t5mnsa.png)\n\n\u5bf9\u4e8e\u70b9B\uff0c\u7a9d\u4eec\u4eceA\u8fdb\u5165B\u540e\uff0c\u5fc5\u987b\u6709\u4e00\u6761\u4e0e\u4e4b\u5bf9\u5e94\u7684\u8def\uff0c\u4ee5\u4fbf\u8d70\u51faB\u3002\u6bcf\u7ecf\u8fc7\u4e00\u6b21B\uff0c\u5c31\u8981\u51fa\u53bb\u4e00\u6b21\u3002**\u6240\u4ee5\uff0c\u4e0eB(\u8fd9\u91cc\u4ee3\u6307\u6240\u6709\u975e\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u70b9)\u8fde\u63a5\u7684\u7ebf\u6bb5\u6570\u5fc5\u987b\u4e3a\u5076\u6570\u3002**\n\n\u56de\u5230\u4e03\u6865\u95ee\u9898\uff0c\u7a9d\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u9014\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u90fd\u662f\u6709\u5947\u6570\u6761\u7ebf\u6bb5\u76f8\u8fde\uff0c\u56e0\u6b64\u8d70\u8fdb\u4e00\u4e2a\u70b9\u5c31\u51fa\u4e0d\u6765\u4e86\uff0c\u6240\u4ee5\u4e03\u6865\u95ee\u9898\u6700\u7ec8\u7b54\u6848\u662f\uff1a\u4e0d\u80fd\u3002\n\n---\n\n\u4e8e\u662f\u4e4e\uff0c\u7a9d\u4eec\u6240\u5b66\u4e60\u7684OI\u77e5\u8bc6\u5185\uff0c\u591a\u4e86\u4e00\u4e2a\u540d\u8bcd\uff1a\n\n## \u6b27\u62c9\u56de\u8def\n\n\u800c\u6ee1\u8db3\u6b27\u62c9\u56de\u8def\u7684\u56fe\u6709\u5982\u4e0b\u8981\u6c42\uff1a\n\n1. \u8fde\u901a\u3002~~\u5e9f\u8bdd~~\n2. \u6240\u6709\u70b9\u7684\u5ea6(\u5c31\u662f\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u7ebf\u6bb5\u7684\u603b\u6570)\u90fd\u4e3a\u5076\u6570\u3002\n\n\u66f4\u591a\u5173\u4e8e\u6b27\u62c9\u56de\u8def\u7684\u77e5\u8bc6\u8bf7\n\n[\u70b9\u8fd9\u91cc](https://www.cnblogs.com/abc1604831024/p/9077112.html)\n\n[\u6216\u8fd9\u91cc](https://baijiahao.baidu.com/s?id=1594654125138224284&wfr=spider&for=pc)\n\n---\n\n\u597d\u7684\uff0c\u518d\u8ba9\u7a9d\u4eec\u5eb7\u5eb7\u9898\u9762\uff0c\u6709\u8fd9\u4e48\u4e00\u53e5\u8bdd\uff1a\n\n \u4ed6\u8ba8\u538c\u9a91\u9a6c\uff0c**\u56e0\u6b64\u4ece\u6765\u4e0d\u4e24\u6b21\u7ecf\u8fc7\u4e00\u4e2a\u6805\u680f**\u3002\u4f60\u5fc5\u987b\u7f16\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165\u6805\u680f\u7f51\u7edc\u7684\u63cf\u8ff0\uff0c\u5e76\u8ba1\u7b97\u51fa\u4e00\u6761\u4fee\u6805\u680f\u7684\u8def\u5f84\uff0c**\u4f7f\u6bcf\u4e2a\u6805\u680f\u90fd\u6070\u597d\u88ab\u7ecf\u8fc7\u4e00\u6b21**\u3002\n\n\n~~\u5f88\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u9053\u6b27\u62c9\u56de\u8def\u7684\u9898\u76ee\u3002~~\n\n---\n\n\u89e3\u51b3\u6b27\u62c9\u56de\u8def\uff0c\u6709$Fluery$\u548c$Hierholzer$\u7b97\u6cd5\uff0c\u7531\u4e8e~~\u7a9d\u4e0d\u4f1aFluery\u7b97\u6cd5~~$Hierholzer$\u7b97\u6cd5\u4f7f\u7528\u66f4\u52a0\u5e7f\u6cdb\uff0c\u6240\u4ee5\u7a9d\u4eec\u5c31\u7528$Hierholzer$\u5427\u3002\n\n$Hierholzer$\uff0c\u8bf4\u901a\u4fd7\u4e00\u70b9\u5c31\u662f\u6df1\u641c\uff0c\u5148\u627e\u597d\u8d77\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ecf\u8fc7\u7684\u70b9\uff0c\u904d\u5386\u5b83\u6240\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\uff0c\u7136\u540e\u4e00\u70b9\u70b9\u679a\u4e3e\uff0c\u5f85\u5230\u56de\u6eaf\u7684\u65f6\u5019\uff0c\u5c06\u7ecf\u8fc7\u7684\u70b9\u8bb0\u5f55\u4e0b\u6765\u5373\u53ef\u3002\u8fd9\u91cc\u91cd\u70b9\u8bf4\u8bf4\u627e\u8d77\u70b9\u3002\n\n\u627e\u8d77\u70b9\u5176\u5b9e\u4e0d\u96be\uff0c\u4e0a\u9762\u8bf4\u8fc7\uff0c**\u6240\u6709\u975e\u8d77\u70b9&\u7ec8\u70b9\u7684\u70b9\u7684\u5ea6\u90fd\u5fc5\u987b\u662f\u5076\u6570**\uff0c\u53c8\u56e0\u4e3a\u9898\u76ee\u8bf4\u5fc5\u5b9a\u6709\u89e3\uff0c\u6240\u4ee5**\u7a9d\u4eec\u53ea\u9700\u627e\u5230\u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u5373\u53ef**\u3002\n\n\u90a3\u4e07\u4e00\u5168\u90e8\u70b9\u90fd\u662f\u5076\u6570\u5462\uff1f\n\n~~\u53cd\u4e4b\u4ea6\u7136\u540c\u7406\uff0c\u63a8\u8bba\u81ea\u7136\u6210\u7acb~~\n\n**\u90a3\u6211\u4eec\u5c31\u627e\u4e00\u4e2a\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u5457**\uff0c\u56e0\u4e3a\u53ea\u8981\u6240\u6709\u70b9\u7684\u5ea6\u90fd\u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u4efb\u4f55\u4e00\u4e2a\u51fa\u53d1\u90fd\u6709\u89e3\u3002\u800c\u9898\u76ee\u8bf4\u8ba9\u6211\u4eec\u627e\u4e00\u4e2a$500$\u8fdb\u5236\u8868\u793a\u6cd5\u6700\u5c0f\u7684\u4e00\u4e2a\uff08\u5176\u5b9e\u5c31\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u4e2a\uff0c~~\u4e0d\u8fc7\u51fa\u9898\u4eba\u4e3a\u4e86\u88c5|3\uff0c\u5199\u7684\u5f88\u7384\u4e4e~~\uff09\uff0c\u90a3\u80af\u5b9a\u5c31\u662f\u627e\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u561b\u3002QwQ\n\n---\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u4e0a\u4ee3\u7801\u5427\u3002\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<iomanip>\n#include<stack>\nusing namespace std;\nconst int N=1301;\n\nint G[N][N];\nint a[N];\nstack<int> s;//\u5b9a\u4e49\u50a8\u5b58\u7b54\u6848\u7684\u6808\uff0c\u7531\u4e8e\u6211\u4eec\u5728\u56de\u6eaf\u7684\u65f6\u5019\u5b58\u7684\u7b54\u6848\uff0c\u56e0\u6b64\u6240\u50a8\u5b58\u7684\u7b54\u6848\u662f\u53cd\u7740\u7684\uff0c\u5728\u6700\u540e\u6211\u4eec\u5c06\u5176\u5012\u8fc7\u6765\u8f93\u51fa\nint m,x,y;\nint mine=0x7f7f7f7f;//\u5b9a\u4e49\u7f16\u53f7\u6700\u5c0f\u7684\u8d77\u70b9\n\nvoid hierholzer(int u)\n{\n    for(int i=1;i<=500;i++)//\u679a\u4e3e\u7f16\u53f71\u2014\u2014500\u7684\u519c\u573a\n    {\n        if(G[u][i])//\u5982\u679c\u7f16\u53f7\u4e3ai\u7684\u519c\u573a\u4e0e\u7f16\u53f7\u4e3au\u7684\u519c\u573a\u76f8\u8fde\u901a\n        {\n            G[u][i]--;//\u6807\u8bb0\u8fd9\u6761\u8def\u8d70\u8fc7\u4e86\n            G[i][u]--;\n            \n            hierholzer(i);//\u7ee7\u7eed \u6df1\u641c\uff08\u5212\u6389\uff09hierholzer\n        }\n    }\n    s.push(u);//\u56de\u6eaf\u65f6\u628a\u5f53\u524d\u70b9\u52a0\u8fdb\u6808\n}\nint main()\n{\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tG[x][y]++;//\u7531\u4e8e\u53ef\u80fd\u4f1a\u6709\u91cd\u8fb9\uff0c\u7a9d\u4eec\u91c7\u7528++\u7684\u65b9\u5f0f\u800c\u4e0d\u662f=1\u7684\u65b9\u5f0f\n        G[y][x]++;\n        \n        a[x]++;//\u50a8\u5b58\u6bcf\u4e2a\u70b9\u7684\u5ea6\n        a[y]++;\n        \n        mine=min(mine,min(x,y));//\u7531\u4e8e\u51fa\u9898\u4eba\u6bd2\u7624\uff08\u5212\u6389\uff09\uff0c\u7f16\u53f7\u6700\u5c0f\u7684\u4e0d\u4e00\u5b9a\u662f1\uff0c\u7a9d\u4eec\u5c31\u5f97\u627e\u5230\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u4e2a\u70b9\n    }\n    \n    int st=mine;//\u67e5\u627e\u5ea6\u4e3a\u5947\u6570\u4e14\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\n    for(int i=1;i<=500;i++)\n    {\n    \tif(a[i]%2==1)//\u5982\u679c\u5f53\u524d\u70b9\u7684\u5ea6\u4e3a\u5947\u6570\n    \t{\n    \t\tst=i;//\u8d4b\u503c\u5b8c\u4e0d\u7528\u518d\u627e\u4e86\uff0c\u9000\u51fa\n\t\t\tbreak;\n\t\t}\n\t}\n\thierholzer(st);//\u5f00\u59cb \u6df1\u641c\uff08\u5212\u6389\uff09hierholzer\u7b97\u6cd5\n    \n    while(!s.empty())//\u5012\u7740\u8f93\u51fa\n    {\n    \tprintf(\"%d\\n\",s.top());\n        s.pop();\n    }\n    return 0;\n}\n```\n\n---\n\nPS:\u4ee3\u7801\u53ef\u80fd\u4f1a\u548c\u4e00\u4e9b\u5927\u4f6c\u7684\u96f7\u540c\uff0c\u7eaf\u5c5e\u5de7\u5408\u3002~~\u6bd5\u7adf\u8fd9\u9898hierholzer\u5c31\u8fd9\u4e48\u4e00\u79cd\u5199\u6cd5\u3002\u3002\u3002~~\n\n# \u5b8c\u7ed3\uff08\u6492\u82b1\uff09\\(^o^)/~",
        "postTime": 1570195984,
        "uid": 67493,
        "name": "Higanbana_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6b27\u62c9\u8def\u5f84\u9898\uff0c\u4ec0\u4e48\u662f\u6b27\u62c9\u8def\u5f84\u5462\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e00\u7b14\u753b\n\n\u6b27\u62c9\u8def\u5c31\u662f\u4ece\u4e00\u4e2a\u9876\u70b9\u51fa\u53d1\uff0c\u4e0d\u91cd\u590d\u7684\u7ecf\u8fc7\u6bcf\u4e00\u6761\u8def\u5f84\u7684\u4e00\u6761\u8def\uff0c\u800c\u6b27\u62c9\u56de\u8def\n\n\u5c31\u662f\u8d77\u70b9\u4e0e\u7ec8\u70b9\u91cd\u5408\u7684\u6b27\u62c9\u8def\uff0c\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u4e00\u7b14\u753b\uff0c\u53ef\u4ee5\u8d70\u91cd\u590d\u7684\u8def\u3002\n\n\u6b27\u62c9\u56de\u8def\u5b58\u5728\u7684\u6761\u4ef6\u662f\u5168\u90e8\u90fd\u662f\u5076\u6570\u70b9\uff0c\u800c\u6b27\u62c9\u8def\u5c31\u662f\u53ea\u6709\u4e24\u4e2a\u5947\u6570\u70b9\u3002\n\n\u6240\u4ee5\uff0c\u5176\u5b9e\u4e00\u4e2a\u6df1\u641c\u5c31\u884c\u4e86\uff0c\u53ea\u662f\u8981\u628a\u7ecf\u8fc7\u7684\u8def\u5220\u6389\u3002\n\n\u4ee3\u7801\u5949\u4e0a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1025][1025],b[1025],c[1025];\nint n,m,s;\nvoid dfs(int i)//\u6b27\u62c9\u8def\u7684\u4e3b\u8981\u4ee3\u7801\n{\n    for(int j=1;j<=500;j++)\n        if(a[i][j]>0)\n            a[i][j]--,a[j][i]--,dfs(j);\n    s++,c[s]=i;\n}\nint main()//\u5f00\u59cb\u4e86\u4e3b\u7a0b\u5e8f\n{\n    cin>>m;\n    memset(a,0,sizeof(a));//\u8981\u517b\u6210\u521d\u59cb\u5316\u7684\u597d\u4e60\u60ef\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        a[x][y]++;\n        a[y][x]++;\n        b[x]++;\n        b[y]++;//\u5947\u7279\u7684\u8f93\u5165\u2014\u2014\u540e\u9762\u662f\u5224\u65ad\u5947\u6570\u70b9\u5076\u6570\u70b9\u7684\n    }\n    int t=1;\n    for(int i=1;i<=500;i++)\n        if(b[i]%2==1)\n        {\n            t=i;//\u4ece\u5947\u6570\u70b9\u5f00\u59cb\n            break;\n        }\n    dfs(t);//\u6b27\u62c9\u6765\u4e86\n    for(int i=s;i>=1;i--)\n        cout<<c[i]<<endl;//\u7f8e\u5999\u7684\u6362\u884c\u8f93\u51fa\n    return 0;\n}\n\n```",
        "postTime": 1535979244,
        "uid": 38427,
        "name": "Mr_\u6d53\u6c28",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\n\u4e00\u4e2a\u6b27\u62c9\u8def\u5f84\u7684\u6a21\u677f\u9898\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u5947\u70b9\u7684\u8bdd\u5c31\u662f\u6b27\u62c9\u8def\uff0c0\u4e2a\u5c31\u662f\u6b27\u62c9\u56de\u8def\n\n\u7528\u6df1\u641c\u904d\u5386\u5373\u53ef\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a,b,h[1025][1025],d[1025],c[1026],cnt;\nvoid xx(int x)\n{\n\tfor(int i=1;i<=500;i++)\n\tif(h[x][i])//\u8868\u793ax-i\u6709\u8def \n\t{\n\t\th[x][i]--;//\u5c06\u8fd9\u6761\u8def\u5220\u9664\uff0c\u4ee5\u514d\u91cd\u590d \n\t\th[i][x]--;//\u540c\u4e0a \n\t\txx(i);//\u9012\u5f52\u67e5\u627e \n\t}\n\tc[++cnt]=x;//\u5b58\u503c \n}\nint main()\n{\n\tcin>>n;//n\u6761\u76f8\u90bb\u7684\u8fb9 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a>>b;//a,b\u76f8\u90bb \n\t\th[a][b]++;//\u8868\u793aa-b\u7684\u8def\u7684\u6761\u6570 \n\t\th[b][a]++;//\u540c\u4e0a \n\t\td[a]++;//\u7b97\u51fa\u6bcf\u4e2a\u70b9\u7684\u5ea6 \n\t\td[b]++;//\u540c\u4e0a \n\t}\n\tint z=1;//\u521d\u59cb\u503c\u4e3a1\uff0c\u56e0\u4e3a\u53ef\u80fd\u662f\u6b27\u62c9\u56de\u8def\uff0c\u6ca1\u6709\u5947\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ece\u4efb\u4f55\u5730\u65b9\u5f00\u59cb\u641c\u7d22 \n\tfor(int i=1;i<=500;i++)//\u56e0\u4e3a\u6700\u591a\u53ea\u6709500\u4e2a\u9876\u70b9 \n\tif(d[i]%2==1)\n\t{\n\t\tz=i;\n\t\tbreak;//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u5ea6\u4e3a\u5947\u6570\u7684\u8bdd\uff0c\u90a3\u4ed6\u5c31\u662f\u5947\u70b9\uff0c\u627e\u5230\u4e00\u4e2a\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86 \n\t}\n\txx(z);\n\tfor(int i=n+1;i>=1;i--)//n\u6761\u8fb9\u76f8\u90bb\uff0c\u6240\u4ee5\u6709n+1\u4e2a\u70b9\n\t//\u56e0\u4e3a\u662f\u4ece\u8d77\u70b9\u5f00\u59cb\uff0c\u9012\u5f52\u67e5\u627e\uff0c\u6240\u4ee5\u524d\u9762\u627e\u5230\u7684\u5b9e\u9645\u4e0a\u662f\u540e\u9762\u7684\uff0c\u6240\u4ee5\u5012\u7740\u8f93\u51fa \n\tcout<<c[i]<<endl;\n} \n```",
        "postTime": 1527173737,
        "uid": 87452,
        "name": "\u5c0f\u71da\u72fc",
        "ccfLevel": 0,
        "title": "\u6b27\u62c9\u8def\u5f84\u4e4b\u9a91\u9a6c\u4fee\u6805\u680f"
    },
    {
        "content": "\u9898\u89e3by\uff1aredbag\n\n\u539f\u9898\u89e3\u5730\u5740\uff1ahttp://redbag.duapp.com/?p=1458\n\n\u82e5\u6709\u9519\u8bef/\u63cf\u8ff0\u5f97\u4e0d\u6e05\u695a\u7684\u5730\u65b9\u6b22\u8fce\u6307\u51fa\u3002\n\n\u6b27\u62c9\u56de\u8def\u6a21\u677f\u9898\u3002\n\n\n\u5173\u4e8e\u662f\u5426\u5b58\u5728\u6b27\u62c9\u56de\u8def\uff1a\n\n\n\u65e0\u5411\u56fe\uff1a\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\uff08\u8fde\u7684\u8fb9\u7684\u6761\u6570\uff09\u5982\u679c\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u4e3a\u5947\u70b9\u3002\u4e00\u4e2a\u8fde\u901a\u7684\u65e0\u5411\u56fe\uff0c\u82e5\u67090\u4e2a\u6216\u80052\u4e2a\u5947\u70b9\uff0c\u5219\u5b58\u5728\u6b27\u62c9\u56de\u8def\u3002\u5982\u679c\u662f0\u4e2a\u5947\u70b9\uff0c\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u51fa\u53d1\u90fd\u80fd\u56de\u5230\u8be5\u70b9\u3002\u5982\u679c\u662f2\u4e2a\u5947\u70b9\uff0c\u4ece\u5176\u4e2d\u4e00\u4e2a\u5947\u70b9\u51fa\u53d1\u80fd\u591f\u5230\u8fbe\u53e6\u4e00\u4e2a\u5947\u70b9\u3002\n\n\n\u6709\u5411\u56fe\uff1a0\u4e2a\u6216\u80052\u4e2a\u70b9\u51fa\u5ea6\u4e0d\u7b49\u4e8e\u5165\u5ea6\u7684\uff0c\u5373\u5b58\u5728\u6b27\u62c9\u56de\u8def\u3002\n\n\n\u8bdd\u8bf4\u53ea\u6709\u4e00\u4e2a\u70b9\u51fa\u5ea6\u4e0d\u7b49\u4e8e\u5165\u5ea6\u7684\u56fe\u662f\u753b\u4e0d\u51fa\u6765\u7684\u3002\u8bbe\u51fa\u8fb9\u4e3an\uff0c\u6240\u4ee5\u5165\u8fb9\u4e3an\u3002\u5373\u51fa\u8fb9\u6761\u6570\u7b49\u4e8e\u5165\u8fb9\u6761\u6570\u3002\u82e5\u5176\u4ed6\u70b9\u7684\u51fa\u5ea6\u5747\u7b49\u4e8e\u5165\u5ea6\uff0c\u90a3\u4e48\u8be5\u70b9\u7684\u51fa\u5ea6\u4e5f\u53ea\u53ef\u80fd\u4e3a\u5165\u5ea6\u3002\n\n\n\u6846\u67b6\uff1a\n\n```cpp\nvoid euler(int u)\n{\n    for(int i=1;i<=n;i++)\n    if (a[u][i]>0)//\u8fd8\u6709\u8fb9\n    {\n        printf(\"%d %d\\n\",u,i);\n        //\u6253\u5370\u987a\u5e8f\u5982\u679c\u662f\u9006\u5e8f\u7684\u5219\u6539\u6210\u5c06u,i\u538b\u5165\u6808\u3002\n        a[u][i]--;//\u6ca1\u8d70\u7684\u8fb9\u7684\u6761\u6570-1\n        a[i][u]--;//\u6709\u5411\u56fe\u7684\u8bdd\u5c31\u4e0d\u8981\u8fd9\u4e00\u53e5\n        euler(i);\n    }\n}\n```\n\u626f\u56de\u8fd9\u9898\u3002\u4e24\u9876\u70b9\u95f4\u53ef\u80fd\u6709\u591a\u4e2a\u6805\u680f\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u8981\u7edf\u8ba12\u4e2a\u70b9\u4e4b\u95f4\u7684\u6805\u680f\u6761\u6570\uff08\u597d\u5751\u554a\uff09\u3002\u6ce8\u610f\uff1a\u8f93\u51fa\u7684\u8bdd\u662f\u8f93\u51fa\u6700\u5c0f\u7684\u3002\u7136\u540e\u6253\u5370\u7684\u65f6\u5019\u6ce8\u610f\u4e00\u70b9\u5c31\u597d\u4e86\u3002\n\n```cpp\n/*\nID: ylx14274\nPROG: fence\nLANG: C++     \n*/\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm> \n#define LL unsigned long long   \nusing namespace std;\nint m,n,u,v,k;\nint i,j;\nint a[501][501];//\u5b58\u8fb9\u7684\nint s[501];\nstack<int> t;\nvoid euler(int u)\n{\n    int v;\n    for (v=1;v<=n;v++)\n        if (a[u][v]>=1)//\u6709\u6ca1\u641c\u8fc7\u7684\u8fb9 \n        {\n            a[u][v]--;//\u6807\u8bb0 \n            a[v][u]--;//\u53cc\u5411\u8fb9\u5c31\u90fd\u8981\u6807\u8bb0\n            euler(v);//\u7ee7\u7eed\u641c \n        } \n    t.push(u);//\u538b\u5165\u6808\u4e2d\n    return; \n} \nint main() \n{\n    freopen(\"fence.in\",\"r\",stdin);\n    freopen(\"fence.out\",\"w\",stdout); \n    scanf(\"%d\\n\",&m);\n    for (i=1;i<=m;i++)//\u8bfb\u5165\u8fb9\n    {\n         scanf(\"%d%d\",&u,&v);\n         a[u][v]++;//\u52a0\u8fb9\u6761\u6570 \n         a[v][u]++;//\u8fd9\u662f\u53cc\u5411\u8fb9\n         s[u]++;//\u5b58\u8fb9\u7684\u6761\u6570\u7684\uff0c\u7528\u6765\u786e\u5b9a\u8d77\u70b9\u7684\u3002 \n         s[v]++;\n         n=max(n,u);\n         n=max(n,v);//n:\u8282\u70b9\u6570\n    }\n    k=0;//\u6807\u8bb0\n    for (i=1;i<=n;i++)\n        if (s[i]%2==1)//\u6700\u5c0f\u7684\u5947\u70b9 \n        {\n            k=i;//\u6807\u8bb0 \n            break;//\u8df3\u51fa \n        }\n    if (k==0)//\u5982\u679c\u6ca1\u5947\u70b9\n    {\n        for (i=1;i<=n;i++)\n        if (s[i]>0)//\u627e\u5230\u6700\u5c0f\u7684\u6709\u8fb9\u7684\u70b9 \n        {\n            k=i;//\u6807\u8bb0 \n            break;//\u8df3\u51fa \n        }\n    } \n    euler(k);//\u4ecek\u70b9\u5f00\u59cb\u6c42 \n    do\n    {\n        printf(\"%d\\n\",t.top());\n        t.pop();\n    } while (!t.empty());//\u5012\u7740\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1470889155,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "# \u8fd9\u662f\u4e00\u9053\u7528\u6b27\u62c9\u56de\u8def\u5c31\u80fdA\u7684\u4e00\u7b14\u753b\u95ee\u9898\n\n\u6837\u4f8b\u7684\u56fe\u5982\u4e0b\n\n![](https://cdn.luogu.com.cn/upload/pic/75043.png)\n\n\u4e0b\u9762\u662f\u4e00\u79cd\u5408\u9002\u7684\u8d70\u6cd5\n\n![](https://cdn.luogu.com.cn/upload/pic/75044.png)\n\n# \u6211\u4eec\u90fd\u77e5\u9053\uff0c\u4e00\u5e45\u56fe\u5982\u679c\u60f3\u8981\u4e00\u7b14\u753b\uff0c\u5947\u70b9\u6570\u5fc5\u987b\u4e3a0\u6216\u80052\uff0c\u800c\u4e14\u4e00\u5e45\u56fe\u4e0d\u53ef\u80fd\u6709\u5947\u6570\u4e2a\u5947\u70b9\u3002\n\n\u5982\u679c\u4e0d\u61c2\u5947\u70b9\u662f\u4ec0\u4e48\u4e1c\u4e1c\u7684\u770b\u4e0b\u9762\uff1a\n\n\u5947\u70b9\u662f\u6307\u53ea\u6709\u5947\u6570\u6761\u8fb9\u4e0e\u5176\u76f8\u8fde\u7684\u70b9\n\n![](https://cdn.luogu.com.cn/upload/pic/75047.png)\n\n\u56fe\u4e2d\uff0c1\u548c3\u662f\u5947\u70b9\uff0c\u4f462\u548c4\u5374\u4e0d\u662f\n\n\u6211\u4eec\u53ea\u8981\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684\u70b9\uff0c\u7136\u540e\u5f80\u4e0b\u6df1\u641c\uff0c\u5e76\u7528\u4e00\u4e2a\u7c7b\u4f3c\u6808\u7684\u6570\u7ec4\u6765\u5b58\u56fe\uff0c\u5e76\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u8fb9\uff0c\u8fd9\u9053\u9898\u5c31\u57fa\u672c\u89e3\u51b3\u4e86\n\n\u4e0b\u9762\u5c31\u5269\u4e0b\u4ee3\u7801\u95ee\u9898\u4e86\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint e[510][510]/*\u5b58\u8fb9*/,ot[510]/*\u8868\u793a\u6bcf\u4e2a\u70b9\u662f\u5947\u70b9\u8fd8\u662f\u5076\u70b9*/,m,n,st[60000]/*\u7528\u6cd5\u8ddf\u6808\u7c7b\u4f3c\u7684\u6570\u7ec4*/,top,u,v;\nbool flag=0;\nint dfs(int u){\n    for(int i=1;i<=n;i++){\n        if(e[u][i]){\n            e[u][i]--;                          //\u53bb\u9664u\u548ci\u4e4b\u95f4\u7684\u4e00\u6761\u8fb9 \n            e[i][u]--;                          //\u540c\u4e0a \n            dfs(i);                             //\u7ee7\u7eed\u641c \n        }\n    }\n    st[++top]=u;                                //\u628au\u5b58\u5165\u6808 \n    return 0;\n}\nint main(){\n    cin>>m;\n    for(int i=1;i<=m;i++){\n        cin>>u>>v;\n        ot[u]++;                                //\u70b9u\u7684\u8fb9\u6570+1 \n\t\tot[v]++;                                //\u540c\u4e0a \n        if(u>n)n=u;                             //\u5982\u679cu\u6bd4n\u5927\u5219\u8bf4\u660eu\u73b0\u5728\u4e3a\u6700\u5927\u70b9\uff0c\u603b\u70b9\u6570\u5c31\u662fu\uff0c\u6240\u4ee5\u8981\u628a\u70b9\u6570n\u8d4b\u503c\u4e3au \n\t\tif(v>n)n=v;                             //\u540c\u4e0a \n        e[u][v]++;                              //u\u548cv\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9 \n\t\te[v][u]++;                              //\u540c\u4e0a \n    }\n    for(int i=1;i<=n;i++){\n    \tif((ot[i]&1)==1){\n\t        dfs(i);                             //\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u5947\u70b9\u5c31\u5f00\u59cb\u4ece\u7b2ci\u4e2a\u70b9\u5f00\u59cb\u641c\u7d22\n\t\t    flag=1;                             //\u6807\u8bb0\u4e3a\u5df2\u641c \n\t\t    break;\n\t    }\n\t}\n    if(!flag)dfs(1);                            //\u5982\u679c\u6ca1\u641c\u8fc7\u5c31\u4ece1\u5f00\u59cb\u641c \n    while(top)cout<<st[top--]<<endl;            //\u628a\u6bcf\u4e2a\u70b9\u7684\u7ecf\u8fc7\u6b21\u6570\u4ece\u6808\u91cc\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1566812651,
        "uid": 242967,
        "name": "JasonZRY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "## \u524d\u7f6e\u6280\u80fd\n\u5728\u89e3\u91ca\u8fd9\u9053\u9898\u524d\uff0c\u6211\u8ba4\u4e3a\u6709\u5fc5\u8981\u89e3\u91ca\u4e00\u4e0b\u6b27\u62c9\u56de\u8def\u548c\u6b27\u62c9\u901a\u8def\u662f\u4ec0\u4e48\u3002\n### \u80cc\u666f\n\u572818\u4e16\u7eaa\uff0c\u54e5\u5c3c\u65af\u5821\u7684\u4e00\u4e2a\u516c\u56ed\u91cc\uff0c\u6709\u4e03\u5ea7\u6865\u5c06\u666e\u96f7\u683c\u5c14\u6cb3\u4e2d\u4e24\u4e2a\u5c9b\u53ca\u5c9b\u4e0e\u6cb3\u5cb8\u8fde\u63a5\u8d77\u6765(\u5982\u56fe)\u3002\u95ee\u662f\u5426\u53ef\u80fd\u4ece\u8fd9\u56db\u5757\u9646\u5730\u4e2d\u4efb\u4e00\u5757\u51fa\u53d1\uff0c\u6070\u597d\u901a\u8fc7\u6bcf\u5ea7\u6865\u4e00\u6b21\uff0c\u518d\u56de\u5230\u8d77\u70b9\uff1f  \n![1](https://cdn.luogu.com.cn/upload/pic/57092.png)  \n### \u8bc1\u660e\n\u8fd9\u4e2a\u95ee\u9898\u662f\u4e0d\u53ef\u80fd\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u5148\u628a\u8fd9\u4e2a\u5730\u56fe\u62bd\u8c61\u6210\u4e00\u4e2a\u65e0\u5411\u56fe\uff1a  \n![2](https://cdn.luogu.com.cn/upload/pic/57095.png)  \n\u9664\u4e86\u8d77\u70b9\u4ee5\u5916\uff0c\u6bcf\u4e00\u6b21\u5f53\u7531\u4e00\u6761\u8fb9\u8fdb\u5165\u4e00\u4e2a\u70b9\u65f6\uff0c\u540c\u65f6\u4e5f\u7531\u53e6\u4e00\u6761\u8fb9\u79bb\u5f00\u6b64\u70b9\u3002\u6240\u4ee5\u6bcf\u884c\u7ecf\u4e00\u70b9\u65f6\uff0c\u8ba1\u7b97\u4e24\u6761\u8fb9\uff0c\u4ece\u8d77\u70b9\u79bb\u5f00\u7684\u8fb9\u4e0e\u6700\u540e\u56de\u5230\u59cb\u70b9\u7684\u8fb9\u4ea6\u8ba1\u7b97\u4e24\u6761\uff0c**\u56e0\u6b64\u6bcf\u4e00\u4e2a\u70b9\u7684\u5ea6\u5fc5\u4e3a\u5076\u6570\u3002**  \u7136\u800c\u5728\u8fd9\u4e2a\u56fe\u91cc\uff0c\u6bcf\u4e2a\u70b9\u7684\u5ea6\u5747\u4e3a\u5947\u6570\uff0c\u6240\u4ee5\u65e0\u6cd5\u5b9e\u73b0\u3002  \n\u8fd9\u662f\u5f53\u65f6\u7684\u5927\u6570\u5b66\u5bb6\u6b27\u62c9\u7ed9\u51fa\u7684\u8bc1\u660e\uff0c\u4e3a\u4e86\u7eaa\u5ff5\u4ed6\uff0c\u6211\u4eec\u628a**\u53ef\u4ee5\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u6bcf\u6761\u8fb9\u53ea\u7ecf\u8fc7\u4e00\u6b21\u4e14\u80fd\u56de\u5230\u7ec8\u70b9\u7684\u56fe\u53eb\u505a\u6b27\u62c9\u56de\u8def\uff0c\u53ef\u4ee5\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u6bcf\u6761\u8fb9\u53ea\u7ecf\u8fc7\u4e00\u6b21\u4f46\u4e0d\u80fd\u56de\u5230\u7ec8\u70b9\u7684\u56fe\u53eb\u505a\u6b27\u62c9\u901a\u8def\u3002**\n### \u5224\u5b9a\n\u9996\u5148\uff0c\u8fd9\u4e2a\u56fe\u5fc5\u987b\u662f**\u8054\u901a\u7684\uff01**  \n\n\u6b27\u62c9\u56de\u8def\uff1a\n- \u4e00\u4e2a\u6240\u6709\u7ed3\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\u7684\u65e0\u5411\u56fe\u3002\n- \u4e00\u4e2a\u6240\u6709\u7ed3\u70b9\u7684\u5165\u5ea6\u7b49\u4e8e\u51fa\u5ea6\u7684\u6709\u5411\u56fe\u3002 \n\n\u6b27\u62c9\u901a\u8def:\n- \u4e00\u4e2a\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u8282\u70b9\u7684\u5ea6\u662f\u5947\u6570\u7684\u65e0\u5411\u56fe\uff0c\u8fd9\u4e24\u4e2a\u70b9\u53ef\u4ee5\u5206\u522b\u4f5c\u8d77\u70b9\u4e0e\u7ec8\u70b9\u3002\n- \u4e00\u4e2a\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u70b9\uff0c\u5176\u5165\u5ea6\u4e0d\u7b49\u4e8e\u51fa\u5ea6\uff0c\u5176\u4e2d\u4e00\u4e2a\u5165\u5ea6\u6bd4\u51fa\u5ea6\u59271\uff0c\u4e3a\u8def\u5f84\u7684\u8d77\u70b9\uff1b\u53e6\u5916\u4e00\u4e2a\u51fa\u5ea6\u6bd4\u5165\u5ea6\u59271\uff0c\u4e3a\u8def\u5f84\u7684\u7ec8\u70b9\u7684\u6709\u5411\u56fe\u3002  \n\n\u638c\u63e1\u4e86\u8fd9\u4e9b\uff0c\u505a\u51fa\u8fd9\u9053\u9898\u5c31\u6ca1\u95ee\u9898\u4e86\u3002\n## \u505a\u6cd5\n\u63d0\u524d\u8bf4\u4e00\u53e5\uff0c\u6211\u7528\u77e9\u9635\u5b58\u7684\u3002\n### \u8bfb\u9898+\u89e3\u6790\n\u9898\u76ee\u4e2d\u603b\u4f1a\u6709\u5f88\u591a\u5173\u952e\u4fe1\u606f~\n\n> \u6240\u6709\u6805\u680f\u90fd\u662f\u8fde\u901a\u7684(\u4e5f\u5c31\u662f\u4f60\u53ef\u4ee5\u4ece\u4efb\u610f\u4e00\u4e2a\u6805\u680f\u5230\u8fbe\u53e6\u5916\u7684\u6240\u6709\u6805\u680f)\n\n\u8fd9\u4e2a\u56fe\u662f\u8fde\u901a\u65e0\u5411\u56fe\u3002\n\n> \u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u81f3\u5c11\u6709\u4e00\u4e2a\u89e3\u3002  \n\n\u8fd9\u8bf4\u660e\u6211\u4eec\u4e0d\u7528\u5224\u5b9a\u8fd9\u4e2a\u56fe\u662f\u6b27\u62c9\u56fe\u3002\n\n> John\u80fd\u4ece\u4efb\u4f55\u4e00\u4e2a\u9876\u70b9(\u5373\u4e24\u4e2a\u6805\u680f\u7684\u4ea4\u70b9)\u5f00\u59cb\u9a91\u9a6c\uff0c\u5728\u4efb\u610f\u4e00\u4e2a\u9876\u70b9\u7ed3\u675f\u3002\n\n\u8fd9\u8bf4\u660e\u8fd9\u4e2a\u56fe\u53ef\u80fd\u662f\u6b27\u62c9\u56de\u8def\uff0c\u4e5f\u53ef\u80fd\u662f\u6b27\u62c9\u901a\u8def\uff0c\u9700\u8981\u5199\u4e00\u4e2a\u5224\u5b9a\u7684\u7b97\u6cd5\u3002  \n\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u50cf\u6211\u8fd9\u79cd\u849f\u84bb\u5c31\u76f4\u63a5\u904d\u5386\uff0c\u627e\u5947\u6570\u70b9\uff0c\u627e\u5230\u4e00\u4e2a\u5c31\u6539\u503c\uff0c\u8df3\u51fa\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n//\u4e13\u95e8\u6709\u4e00\u4e2a\u6570\u7ec4\u662f\u5b58\u6bcf\u4e2a\u70b9\u7684\u5ea6\u7684\nvoid find_start()\n{\n    for(int i=1;i<=500;i++)//\u66b4\u529b\u51fa\u5947\u8ff9\n        if(du[i]%2==1)//\u627e\u5230\u4e86\u4e00\u4e2a\u5947\u6570\u70b9\n        {\n                start=i;//\u6539\u503c\n                return;//\u8df3\u51fa\n        }\n}\n```\n\n\n\n>\u4f60\u7684\u7a0b\u5e8f\u5fc5\u987b\u8f93\u51fa\u9a91\u9a6c\u7684\u8def\u5f84(\u7528\u8def\u4e0a\u4f9d\u6b21\u7ecf\u8fc7\u7684\u9876\u70b9\u53f7\u7801\u8868\u793a)\u3002\u6211\u4eec\u5982\u679c\u628a\u8f93\u51fa\u7684\u8def\u5f84\u770b\u6210\u662f\u4e00\u4e2a500\u8fdb\u5236\u7684\u6570\uff0c\u90a3\u4e48\u5f53\u5b58\u5728\u591a\u7ec4\u89e3\u7684\u60c5\u51b5\u4e0b\uff0c\u8f93\u51fa500\u8fdb\u5236\u8868\u793a\u6cd5\u4e2d\u6700\u5c0f\u7684\u4e00\u4e2a (\u4e5f\u5c31\u662f\u8f93\u51fa\u7b2c\u4e00\u4f4d\u8f83\u5c0f\u7684\uff0c\u5982\u679c\u8fd8\u6709\u591a\u7ec4\u89e3\uff0c\u8f93\u51fa\u7b2c\u4e8c\u4f4d\u8f83\u5c0f\u7684\uff0c\u7b49\u7b49)\u3002   \n\n\u6211\u4eec\u8981\u8f93\u51fa\u9a91\u9a6c\u7684\u8def\u5f84\u2026\u2026\u7b49\u7b49\uff0c\u8fd9\u4e2a\u4e94\u767e\u8fdb\u5236\u8868\u793a\u6cd5\u662f\u4ec0\u4e48\u9b3c\u5440\uff01  \n\u7406\u89e3\u7b80\u5355\u4e00\u70b9\uff1a\u8f93\u51fa\u8def\u5f84\u7f16\u53f7\u6700\u5c0f\u7684\u4e00\u4e2a\u3002  \n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u63d0\u4e94\u767e\u8fdb\u5236\u8868\u793a\u6cd5\uff0c~~\u56e0\u4e3a\u8fd9\u6837\u5728\u7b97\u6cd5\u6807\u7b7e\u4e2d\u5c31\u80fd\u52a0\u4e00\u4e2a  _\u8fdb\u5236_  tag\u554a(\u6ed1\u7a3d\uff09~~  \n\n\u90a3\u4e48\u8fd9\u4e2a\u8981\u6c42\u5982\u4f55\u53bb\u5b9e\u73b0\u5462\uff1f\u54b1\u4eec\u5206\u7c7b\u8ba8\u8bba\u3002  \n\n\u5982\u679c\u662f\u6b27\u62c9\u56de\u8def\u7684\u8bdd\uff0c\u7531\u4e8e\u6211\u8fd9\u91cc\u7684\u904d\u5386\u65b9\u5f0f\u662fdfs\uff0c\u53ea\u8981\u4ece\u7b2c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u4fdd\u8bc1\u662f\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u8def\u5f84\u5e8f\u53f7\u5fc5\u7136\u662f\u6700\u5c0f\u7684\u3002\u5982\u679c\u662f\u6b27\u62c9\u901a\u8def\u7684\u8bdd\uff0c\u6211\u4eec\u7528\u904d\u5386\u7684\u65b9\u5f0f\uff0c\u80fd\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u70b9\u5c31\u662f\u6700\u5c0f\u7684\u3002  \n\n### \u4ee3\u7801\n\u4e0b\u9762\u5c31\u662f\u4ee3\u7801\u5566\uff0c\u9898\u76ee\u4e2d\u4f1a\u6709\u4e00\u4e9b\u5751\uff0c\u5728\u4ee3\u7801\u91cc\u9762\u4e5f\u4f1a\u7ed9\u51fa\u6ce8\u91ca\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint f;\nint G[510][510];//\u5b58\u56fe\nint du[510];//\u5b58\u70b9\u7684\u5ea6\nint start;//\u5b58\u8d77\u70b9\nint minnum=0x3f3f3f3f;\nstack<int> ans;\n//\u7531\u4e8e\u6211\u4eec\u8f93\u51fa\u8981\u6c42\u662f\u6b63\u5e8f\u8f93\u51fa\uff0c\n//\u6211\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u7528\u6808\uff0c\u65b9\u4fbf\u70b9\u3002\n//\u5f53\u7136\u6570\u7ec4\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u66f4\u4e3a\u4f18\u79c0\uff0c\u4f46\u662f\u5728\u8fd9\u9053\u9898\u4e2d\u53ef\u4ee5\u5ffd\u89c6\u3002\n\nvoid dfs(int n)//\u88f8dfs\n{\n    for(int i=1;i<=500;i++)\n    {\n        if(G[n][i])\n        {\n            G[n][i]--;\n            G[i][n]--;\n            dfs(i);\n        }\n    }\n    ans.push(n);//\u627e\u5230\u5c31\u52a0\u6808\n}\n\nvoid find_start()//\u627e\u8d77\u70b9\n{\n    for(int i=1;i<=500;i++)//\u76f4\u63a5\u904d\u5386\n        if(du[i]%2==1)//\u627e\u5230\u4e00\u4e2a\u5947\u6570\u70b9\n        {\n                start=i;//\u8d4b\u503c\n                return;//\u8df3\u51fa\n        }\n}\n\nint main()\n{\n    cin>>f;//\u5e38\u89c4\u8bfb\u5165\n    for(int i=0;i<f;i++)\n    {\n        int a,b;\n        cin>>a>>b;\n        G[a][b]++;\n        G[b][a]++;\n        minnum=min(minnum,min(a,b));\n  \t\t//\u8fd9\u91cc\u662f\u552f\u4e00\u4e00\u4e2a\u80fd\u7b97\u4e0a\u5751\u7684\u70b9\n  \t\t//\u9898\u76ee\u5e76\u6ca1\u6709\u4fdd\u8bc1\u6700\u5c0f\u7684\u6807\u53f7\u662f1\n  \t\t//\u6240\u4ee5\u8981\u52a0\u4e2a\u627e\u6700\u5c0f\u503c\u7684\u5224\u5b9a\n        du[a]++;\n        du[b]++;\n    }\n    find_start();\n    if(start==0)\n        dfs(minnum);\n    else\n        dfs(start);\n        \n    while(!ans.empty())//\u8f93\u51fa\n    {\n        cout<<ans.top()<<endl;\n        ans.pop();\n    }\n    return 0;\t\t\n}\n```\n",
        "postTime": 1555809462,
        "uid": 109988,
        "name": "34ytw8ew7ft",
        "ccfLevel": 0,
        "title": "\u9a91\u9a6c\u4fee\u6805\u680f\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5728\u9898\u9762\u4e2d\u5c31\u5df2\u7ecf\u544a\u8bc9\u6211\u4eec\u7b97\u6cd5\u4e86\uff1a\u201c\u5e76\u8ba1\u7b97\u51fa\u4e00\u6761\u4fee\u6805\u680f\u7684\u8def\u5f84\uff0c\u4f7f\u6bcf\u4e2a\u6805\u680f\u90fd\u6070\u597d\u88ab\u7ecf\u8fc7\u4e00\u6b21\u3002\u201d\u5373\u6b27\u62c9\u56de\u8def\uff0c\u800c\u4e14\u662f\u6a21\u677f\u9898\u3002\u53ea\u662f\u6709\u51e0\u4e2a\u6ce8\u610f\u70b9~~\u6211\u4e5fWA\u4e86\u51e0\u6b21~~\n1. \u679a\u4e3e\u70b9\u7684\u65f6\u5019\uff0c\u7ec8\u503c\u5e94\u662f\u70b9\u503c\u7684\u6700\u5927\u503c\u800c\u4e0d\u662fn\u3002\n1. \u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u53ef\u80fd\u6709\u591a\u4e2a\u6805\u680f\uff0c\u9700\u8981\u8bb0\u5f55\u6570\u503c\u800c\u4e0d\u662f\u5e03\u5c14\u7c7b\u578b\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,x,y,top,stack[10012],id,in[1012],mx;\nint e[1012][1012]; \ninline void dfs(int u)\n{\n\tfor (int i=1; i<=mx; i++)\n\tif (e[u][i])\n\t{\n\t\te[u][i]--;e[i][u]--;\n\t\tdfs(i);\n\t}\n\tstack[++top]=u;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmx=max(mx,y);\n\t\tin[x]++;in[y]++;\n\t\te[x][y]++;e[y][x]++;\n\t}\n\tid=1;\n\tfor (int i=1; i<=mx; i++)\n\tif (in[i]&1)\n\t{\n\t\tid=i;\n\t\tbreak;\n\t}\n\tdfs(id);\n\twhile (top) printf(\"%d\\n\",stack[top--]);\n\treturn 0;\n}\n```",
        "postTime": 1541143668,
        "uid": 43103,
        "name": "Tanktt",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u5c31\u7528dfs\u6765\u89e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\uff0c\u6bd4\u5982\u8bf4\u8fd9\u4e2a\u6570\u636e\uff1a\n```cpp\n2\n2 3\n3 2\n```\n\u5982\u679cst\u4e00\u5f00\u59cb\u4e3a1\uff0c\u679a\u4e3e\u5b8c\u540e\u76f4\u63a5dfs\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6240\u4ee5\u679a\u4e3e\u5b8c\u4ee5\u540e\u8fd8\u8981\u518d\u627e\u4e00\u6b21\n\n\u8fd9\u4e00\u9898\u6ca1\u6709\u8ddd\u79bb\uff0c\u5c31\u76f4\u63a5\u627e\u70b9x\u5230\u70b9y\u8fb9\u7684\u4e2a\u6570\n\n\u5982\u679c\u60f3\u4f18\u5316\u53ef\u4ee5\u7528\u6700\u77ed\u8defspfa\u7b97\u6cd5\u7684\u5efa\u8fb9\u6765\u505a\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint len,a[2100];\nint bk[2100],f[2100][2100];\nvoid dfs(int x)//\u7528\u8fd9\u4e00\u4e2a\u70b9 \n{\n\tfor(int y=1;y<=n;y++)//\u679a\u4e3e\u70b9 \n\t{\n\t\tif(f[x][y]>0)//\u5982\u679c\u6709\u8fb9 \n\t\t{\n\t\t\tf[x][y]--;f[y][x]--;//\u56e0\u4e3a\u662f\u65e0\u5411\u8fb9 \n\t\t\tdfs(y);//\u5230\u4e0b\u4e00\u4e2a\u70b9 \n\t\t}\n\t}\n\tlen++;a[len]=x;//\u8bb0\u5f55\u8fd9\u4e00\u4e2a\u70b9 \n}\nint main()\n{\n\tint i;\n\tscanf(\"%d\",&m);\n\tfor(i=1;i<=m;i++)\n\t{\n\t \tint x,y;scanf(\"%d%d\",&x,&y);\n\t \tn=max(n,max(x,y));//n\u627e\u6700\u5927\u7684\u6570 \n\t \tbk[x]++;bk[y]++;//\u589e\u52a0\u70b9\u51fa\u73b0\u7684\u6570\u91cf \n\t \tf[x][y]++;f[y][x]++;\n\t}\n\tint st=1;//\u679a\u4e3e\u8d77\u70b9 \n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(bk[i]%2==1)//\u8fd9\u91cc\u8fd9\u6837\u6253\u662f\u56e0\u4e3a\u5982\u679c\u662f\u53cc\u6570\u8fb9\u7684\u8bdd\u51fa\u53bb\u518d\u8fdb\u6765\u5c31\u8d70\u4e0d\u4e86\u4e86\uff0c\u5355\u6570\u8fb9\u51fa\u53bb\u3001\u8fdb\u6765\u3001\u53c8\u53ef\u4ee5\u51fa\u53bb \n\t\t{\n\t\t\tst=i;break;\n\t\t}\n\t}\n\tif(st==1) for(i=1;i<=n;i++) if(bk[i]>0){st=i;break;}//\u5982\u679c\u5b9e\u5728\u4e0d\u884c\u7684\u8bdd\u5c31\u627e\u6700\u5c0f\u53ef\u4ee5\u8d70\u7684\u8fb9 \n\tdfs(st);//\u628a\u8fd9\u4e00\u4e2a\u70b9\u5f53\u4f5c\u8d77\u70b9\uff0c\u5f80\u4e0b\u641c\u7d22 \n\tfor(i=len;i>=1;i--) printf(\"%d\\n\",a[i]);//\u6700\u540e\u8981\u53cd\u6b63\u8f93\u51fa \n\treturn 0;\n}\n```",
        "postTime": 1525758487,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u6211\u6765\u53d1\u4e00\u4e2a\u7528STL\u7684multiset\u6c42\u6b27\u62c9\u56de\u8def\u7684\u89e3\u6cd5\u3002\n\n1\u3001\u7528multiset\u6765\u4fdd\u5b58\u90bb\u63a5\u8868\uff0cmultiset\u662f\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\uff0cbegin\u603b\u662f\u6307\u5411\u5f53\u524d\u90bb\u63a5\u7684\u6700\u5c0f\u7f16\u53f7\u7684\u9876\u70b9\u3002\u8bbf\u95ee\u5b8c\u7684\u8fb9\u5728\u90bb\u63a5\u8868\u4e2d\u5220\u9664\uff0c\u5f53empty\u65f6\u8be5\u9876\u70b9\u7684\u8fb9\u6240\u8fde\u63a5\u7684\u8fb9\u5df2\u8bbf\u95ee\u5b8c\u6bd5\uff0c\u4fdd\u5b58\u5230\u8f93\u51fastack\u3002\n\n2\u3001\u7528stack\u6765\u4fdd\u5b58\u9876\u70b9\u7684\u8f93\u51fa\u3002\n\n\u5728\u8bbf\u95ee\u4e2d\uff0c\u6ca1\u6709\u591a\u4f59\u7684\u5224\u65ad\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nmultiset<int> g[501];  //\u90bb\u63a5\u8868 \nstack<int> ans;        //ans\u4fdd\u5b58\u8f93\u51fa \nint n,mi=501,mx=0;     //mi,mx\u5206\u522b\u8bb0\u5f55\u6700\u5c0f\u548c\u6700\u5927\u7684\u9876\u70b9\u7f16\u53f7 \nvoid dfs(int u){       //dfs\u65b9\u5f0f\u8bbf\u95ee\u56fe \n  while(!g[u].empty()){   //\u8be5\u8282\u70b9\u6709\u8fb9\u76f8\u8fde \n      int v=*g[u].begin();      //\u4e0b\u4e00\u4e2a\u9876\u70b9 \n      g[u].erase(g[u].begin()); //\u8bbf\u95ee\u8fc7\u7684\u8fb9\u5220\u6389 \n      g[v].erase(g[v].find(u));\n      dfs(v);\n  }\n  ans.push(u);                  //\u8bbf\u95ee\u5b8c\u8bb0\u5f55\u8f93\u51fa \n}\nint main(){\n  cin>>n;\n  for(int i=1;i<=n;i++){\n      int x,y;                 //\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9  \n      cin>>x>>y;\n      g[x].insert(y);          //\u6dfb\u52a0\u5230\u90bb\u63a5\u8868 \n      g[y].insert(x);\n      mi=min(mi,min(x,y));\n      mx=max(mx,max(x,y));\n  }\n  int p=mi;                  //\u6700\u5c0f\u7684\u9876\u70b9 \n  for(int i=mi;i<=mx;i++)\n    if(g[i].size()%2) {p=i;break;}  //\u6700\u5c0f\u7684\u5ea6\u6570\u4e3a\u5947\u7684\u9876\u70b9 \n  dfs(p);                           //\u627e\u6b27\u62c9\u8def\u5f84 \n  while(!ans.empty()) cout<<ans.top()<<endl,ans.pop();  //\u8f93\u51fa\u8def\u5f84 \n  return 0;\n}\n\n```",
        "postTime": 1512131077,
        "uid": 68745,
        "name": "zhjshell",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint maxn,m,num_edge,length;\nint x,y,head[5010],num[10500],circuit[10500];\nstruct Edge{\n    int next; //\u4e0b\u4e00\u6761\u8fb9 \n    int to;  //\u6307\u5411\u7684\u70b9 \n    bool flag; //\u6807\u8bb0\u8fd9\u6761\u8fb9\u662f\u5426\u8d70\u8fc7 \n};\nEdge edge[10500];\n/*void print(int a)\n{\n    if (a!=282) return;\n    for (int i=head[a]; i!=0; i=edge[i].next)\n        printf(\" %d \",edge[i].to);\n    printf(\"\\n\");\n}*/\nvoid add_edge(int from,int to)\n{\n    edge[++num_edge].next=head[from];\n    edge[num_edge].to=to;\n    head[from]=num_edge;\n    num[from]++;//\u5ea6 \n}\nvoid find_circuit(int i)\n{\n    while (1)\n    {\n        int minnow=head[i];\n        for (int j=head[i]; j!=0; j=edge[j].next)//j=edge[i] X\n            if (!edge[j].flag&&(edge[j].to<edge[minnow].to||edge[minnow].flag))//||edge[minnow].flag)\u662f\u4e3a\u4e86\u9632\u6b62\u4e0b\u4e00\u4e2a\u70b9\u6ca1\u6709\u6bd4\u5f53\u524d\u70b9\u5927\u7684\uff0c\u4e14\u8fd9\u6761\u8fb9\u5df2\u7ecf\u5728\u4e4b\u524d\u6807\u8bb0\u8fc7\u4e86 \n                minnow=j; //\u6700\u5c0f\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 \n        if (edge[minnow].flag) break;//\u6240\u6709\u7684\u8fb9\u90fd\u8d70\u8fc7\u4e86\uff0c\u5c31\u8df3\u51fa \n        edge[minnow].flag=true;//\u5c06\u6765\u65f6\u7684\u8fb9\u6807\u8bb0\u4e3a\u8d70\u8fc7 \n        for (int j=head[edge[minnow].to]; j!=0; j=edge[j].next)//\u4ee5minnow\u6307\u5411\u7684\u7b2c\u4e00\u4e2a\u70b9\uff08head\uff09\u4e3a\u8d77\u70b9,\u904d\u5386\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u90bb\u7684\u6240\u6709\u7684\u70b9,\u5230\u6765\u65f6\u7684\u70b9 \n            if (edge[j].to==i&&!edge[j].flag)//&&!edge[j].flag\u7528\u6765\u9632\u6b62\u4e24\u70b9\u4e4b\u95f4\u6709\u591a\u6761\u8fb9\uff0c\u4f46\u6bcf\u6b21\u90fd\u6807\u8bb0\u540c\u4e00\u6761\u8fb9 \n            { //\u5c06\u8fd9\u6761\u8fb9\u4e5f\u8bb0\u4e3a\u8d70\u8fc7 (i\u4e3a\u8d77\u70b9) \n                edge[j].flag=true; break;\n            } \n        find_circuit(edge[minnow].to);\n    }\n    circuit[++length]=i;//\u65e0\u8def\u53ef\u8d70\u65f6\uff0c\u5c06\u8be5\u70b9\u5b58\u5230\u6570\u7ec4\u91cc \n}\nint main()\n{\n//    freopen(\"lijiaxun.in\",\"r\",stdin);\n//    freopen(\"out.txt\",\"w\",stdout);\n    scanf(\"%d\",&m);\n    for (int i=1; i<=m; i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        add_edge(x,y);\n        add_edge(y,x);//\u65e0\u5411\u56fe \n        int maxnn=max(x,y);\n        maxn=max(maxn,maxnn); //\u627e\u6700\u5927\u7684\u70b9 \n    }\n    int start=1;\n    for (int i=1; i<=maxn; i++)\n        if (num[i]%2==1) //\u5ea6\u53ea\u7528\u4f5c\u627e\u8d77\u70b9 \n        {\n            start=i; break;//\u4e0d\u8981\u6f0f\u6389break \n        }\n    find_circuit(start);\n    for (int i=length; i>=1; i--)//\u5012\u5e8f\u8f93\u51fa \n        printf(\"%d\\n\",circuit[i]);\n    return 0;\n}\n```",
        "postTime": 1502801225,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "**\u611f\u8c22\u4e09\u697c\u5927\u54e5\u63d0\u4f9b\u7684\u601d\u8def\uff0c\u6211\u6dfb\u52a0\u4e86\u4e00\u4e9b\u4e2a\u4eba\u7684\u7406\u89e3\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u660e\u767d\u5e76\u81ea\u5df1\u7f16\u5199\u51fa\u6765**\n\n//\u8fd9\u9053\u9898\u8981\u6c42\u4e0d\u91cd\u590d\u8d70\u540c\u4e00\u4e2a\u6805\u680f\u4e5f\u5c31\u662f\u8bf4\u8d70\u7684\u8def\u662f\u6b27\u62c9\u8def\u751a\u81f3\u6b27\u62c9\u56de\u8def\n\n//\u901a\u8fc7\u90bb\u63a5\u77e9\u9635\uff08\u56e0\u4e3a\u6570\u636e\u91cf\u5c0f\u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\uff09\u5efa\u7acb\u8fb9\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7136\u540e\u901a\u8fc7\u641c\u7d22\uff0c\u8d70\u8fc7\u7684\u8fb9\u53ca\u65f6\u5220\u9664\u5e76\u8bb0\u5f55\u5373\u53ef\n\n//\u5bf9\u4e8e\u6b27\u62c9\u56de\u8def\u9700\u8981\u6709\u4e00\u4e2a\u7279\u5224\uff0c\u5373\u6ca1\u6709\u5947\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u4efb\u4e00\u70b9\u5f00\u59cb\u90fd\u53ef\u4ee5\u5230\u8fbe\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\nusing namespace std;\nint path[2005],g[505][505],n,k;\nint maxn,minx;\nvoid dfs(int v)//\u5f00\u59cb\u641c\u7d22 \n{\n    int i;\n    for (i=minx; i<=maxn; ++i)//\u9010\u4e00\u67e5\u627e \n      {\n            if (g[v][i]!=0)//\u5982\u679c\u6709\u8fb9\u76f8\u8fde \n              {\n                  g[v][i]--;\n                g[i][v]--;//\u5220\u9664\u8fd9\u6761\u8fb9\uff0c\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22 \n                dfs(i);//\u5411\u4e0b\u641c\u7d22    \n            }\n      }\n    path[k++]=v;//\u4fdd\u5b58\u8def\u5f84  \n}\nint main()\n{\n    memset(g,0,sizeof(g));\n    memset(path,0,sizeof(path));\n    minx=505;\n    maxn=0;\n    k=0;//\u53d8\u91cf\u3001\u6570\u7ec4\u521d\u59cb\u5316 \n    int i,j,a,b;\n    cin>>n;//\u8bfb\u5165\u6709\u51e0\u6761\u8def \n    for (i=1; i<=n; ++i)\n      {\n            cin>>a>>b;//\u8bfb\u5165\u76f8\u8fde\u4e24\u6761\u8fb9\u7684\u7aef\u70b9 \n            g[a][b]++; \n            g[b][a]++;//\u5229\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u5bf9\u56fe\u7684\u5b58\u50a8 \n            g[a][0]++;\n            g[b][0]++;//\u8ba1\u7b97\u4e24\u4e2a\u7aef\u70b9\u7684\u5947\u70b9 \n            maxn=max(maxn,max(a,b));//\u6c42\u51fa\u7aef\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u503c \n            minx=min(minx,min(a,b));//\u6c42\u51fa\u7aef\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\n      }\n    for (i=minx; i<=maxn; ++i)//\u9010\u4e00\u67e5\u627e \n      {\n           if (g[i][0]%2==1)//\u5982\u679c\u5b58\u5728\u5947\u70b9\u8bf4\u660e\u53ef\u4ee5\u5411\u4e0b\u641c\u7d22 \n           {\n                 dfs(i);//\u5411\u4e0b\u641c\u7d22 \n                 break;\n           }  \n      }  \n    if (i==maxn+1)//\u5982\u679c\u4e00\u76f4\u6ca1\u6709\u627e\u5230\u8bf4\u660e\u6ca1\u6709\u5947\u70b9\u4e5f\u5c31\u662f\u8bf4\u662f\u6b27\u62c9\u56de\u8def \n      dfs(1);//\u6b27\u62c9\u56de\u8def\u7684\u8bdd\u4ece\u4efb\u4e00\u7aef\u70b9\u51fa\u53d1\u90fd\u53ef\u4ee5\u5230\u8fbe\u6240\u4ee5\u4ece1\u5f00\u59cb\u67e5\u627e \n    for (j=k-1; j>=0; j--)//\u8f93\u51fapath\u6570\u7ec4\uff0c\u4e5f\u5c31\u662f\u8def\u5f84 \n      cout<<path[j]<<endl;\n    return 0;      \n}\n```",
        "postTime": 1502766709,
        "uid": 35324,
        "name": "slyzzsc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u5f88\u4e45\u6ca1\u6709pascal\u9898\u89e3\u4e86\uff0c\u6765\u4e00\u53d1\u3002\n\n\u6765\u505a\u8fd9\u9898\u7684\u771f\u6b63\u539f\u56e0\u662f\u534a\u5e74\u591a\u4ee5\u524d\u505a\u8fc7\u8fd9\u9898\u7adf\u7136\u6ca1AC\u3002\n\n\u73b0\u5728\u505a\u4e86\u624d\u53d1\u73b0\u5f53\u65f6\u5f88\u591a\u5c0f\u7ec6\u8282\u6ca1\u6ce8\u610f\u3002\n\n\u672c\u9898\u662f\u4e00\u7b14\u753b\u95ee\u9898\u7684\u5224\u65ad\u6784\u9020\uff0c\u6574\u4f53\u601d\u8def\u4e0d\u96be\uff0c\u4e3b\u8981\u662f\u627e\u5230\u5ea6\u4e3a\u5947\u6570\u7684\u70b9\uff0c\u518d\u6309\u5b57\u5178\u5e8f\u6700\u5c0f\u8f93\u51fa\u3002\n\n\u5177\u4f53\u601d\u8def\u5728\u4ee3\u7801\u91cc\u770b\uff1a\n\n```cpp\nprogram p2731;\n  var g:array[0..2000,0..2000]of longint;\n      d,ans:array[0..2000]of longint;\n      a,b,i,n,lo,minv,maxv,start:longint;\nprocedure find(x:longint);\n  var i:longint;\nbegin\n  for i:=minv to maxv do\n  if g[x,i]>=1 then\n  begin\n    dec(g[x,i]);\n    dec(g[i,x]);\n    find(i);\n  end;//\u5c06\u8fde\u901a\u7684\u8fb9\u53bb\u6389\u5e76\u9012\u5f52\u3002\n  inc(lo);\n  ans[lo]:=x;//\u8fd9\u6837\u4fdd\u8bc1\u4e86\u5b57\u5178\u5e8f\u6700\u5c0f\u8f93\u51fa\u3002\nend;\nfunction max(a,b:longint):longint;\nbegin\n  if a>b then exit(a) else exit(b);\nend;\nfunction min(a,b:longint):longint;\nbegin\n  if a<b then exit(a) else exit(b);\nend;\nbegin\n  readln(n);\n  minv:=1000000;\n  for i:=1 to n do\n  begin\n    readln(a,b);\n    inc(g[a,b]);\n    inc(g[b,a]);\n    inc(d[a]);\n    inc(d[b]);\n    minv:=min(a,minv);\n    minv:=min(b,minv);\n    maxv:=max(a,maxv);\n    maxv:=max(b,maxv);\n  end;//\u5c06\u80fd\u8fde\u901a\u7684\u8fb9\u7d2f\u52a0\uff0c\u540c\u65f6\u7d2f\u52a0\u70b9\u7684\u5ea6\uff0c\u5c06\u6807\u53f7\u6700\u5c0f\u548c\u6807\u53f7\u6700\u5927\u7684\u70b9\u627e\u51fa\u6765\u3002\n  start:=1;\n  for i:=1 to 500 do\n  if (d[i] mod 2=1) then\n  begin\n    start:=i;\n    break;\n  end;//\u627e\u5230\u7b2c\u4e00\u4e2a\u5165\u5ea6\u4e3a\u5947\u6570\u7684\u70b9\u5f00\u59cb\u4e00\u7b14\u753b\u9012\u5f52\u3002\n  lo:=0;\n  find(start);//\u627e\u8def\u7ebf\u3002\n  for i:=lo downto 1 do\n  writeln(ans[i]);//\u6253\u5370\u8def\u7ebf\u3002\nend.\n```",
        "postTime": 1489318922,
        "uid": 19540,
        "name": "zk1431043937",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u6b27\u62c9\u8def\u95ee\u9898\uff0c\u9898\u76ee\u89c4\u5b9a\u6709\u89e3\uff0c\u6240\u4ee5\u53ea\u9700\u786e\u5b9a\u662f\u4e00\u4e2a\u5947\u70b9\u8fd8\u662f\u4e24\u4e2a\uff0c\u4e24\u4e2a\u7684\u8bdd\u518d\u627e\u51fa\u8f93\u51fa\u7b2c\u4e00\u4e2a\u6570\u8f83\u5c0f\u7684\u89e3\u3002\n\n\u627e\u51fa\u6b27\u62c9\u8def\u7684\u65b9\u6cd5\u5c31\u662f\u91c7\u7528\u6df1\u641c\u7684\u65b9\u5f0f\uff0c\u5bf9\u4e8e\u5f53\u524d\u7684\u70b9\uff0c\u628a\u6240\u6709\u70b9\u4ece\u5c0f\u5230\u5927\u7684\u641c\u7d22\uff0c\u627e\u5230\u548c\u5b83\u76f8\u8fde\u7684\uff0c\u627e\u5230\u4e00\u4e2a\u4e4b\u540e\u5220\u9664\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u7ebf\uff0c\u5e76\u53bb\u641c\u7d22\u65b0\u7684\u90a3\u4e2a\u70b9\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u70b9\u548c\u5b83\u76f8\u8fde\uff0c\u90a3\u4e48\u5c31\u628a\u8fd9\u4e2a\u70b9\u52a0\u5165\u8f93\u51fa\u961f\u5217\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint path[2005],g[505][505],n,k;\nint maxn,minx;\nvoid dfs(int v)//\u6df1\u641c\n{\n    int i;\n    for(i=minx;i<=maxn;i++){\n        if(g[v][i])\n        {\n            g[v][i]--;\n            g[i][v]--;\n            dfs(i);\n        }\n    }\n    path[k++]=v;\n}\nint main()\n{\n    int i;\n    int a,b;\n    scanf(\"%d\",&n);\n    memset(g,0,sizeof(g));\n    memset(path,0,sizeof(path));\n    minx=505;\n    maxn=0;\n    k=0;\n    for(i=0;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        g[a][b]++;\n        g[b][a]++;\n        g[a][0]++;//a\u7684\u5ea6\n        g[b][0]++;//b\u7684\u5ea6\n        maxn=(a<b?b:a)<maxn?maxn:(a<b?b:a);\n        minx=minx<(a<b?a:b)?minx:(a<b?a:b);\n    }\n    for(i=minx;i<=maxn;i++)\n    {\n              if(g[i][0]%2)//\u627e\u5076\u6570\u4e2a\u5ea6\u7684\u70b9\n          {\n                  dfs(i);\n                  break;\n              }\n    }\n    if(i==maxn+1)\n    {\n        dfs(1);\n    }\n    for(int j=k-1;j>=0;j--)\n            printf(\"%d\\n\",path[j]);\n    return 0;\n}\n\n```",
        "postTime": 1488788263,
        "uid": 25425,
        "name": "Paperback_Writer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u8fd9\u9053\u9898\u662f\u8ba9\u6211\u4eec\u6765\u6c42\u6b27\u62c9\u901a\u8def\uff08Eulerian Path\uff09\u3002\n\n\u6211\u4eec\u6709\u4e24\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u7528\uff0c\u5206\u522b\u662fFleury's algorithm\u548cHierholzer's algorithm\u3002\u540e\u8005\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\uff0c\u662fO(|E|)\u7684\uff0c\u8fd9\u91cc\u5c31\u7528\u5b83\u6765\u5b9e\u73b0\u3002\n\u7b80\u5355\u5730\u63cf\u8ff0\u4e00\u4e0b\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u5145\u5206\u6027\u548c\u5fc5\u8981\u6027\u5c31\u4e0d\u8bc1\u4e86\uff1a\n\n```cpp\nHierholzer(u):\n    While (Exist (u, v)):\n        Delete (u, v)\n        Hierholzer (v);\n    Path[++pathSize] = u;\n```\n\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8981\u9009\u62e9\u8fd9\u6761\u8def\u5f84\u7684\u7b2c\u4e00\u4e2a\u70b9\u3002\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u5b58\u5728\u6b27\u62c9\u56de\u8def\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u6240\u6709\u9876\u70b9\u5ea6\u6570\u5747\u4e3a\u5076\uff0c\u5b58\u5728\u6b27\u62c9\u8def\u5f84\u7684\u5fc5\u8981\u6761\u4ef6\u662f\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u9876\u70b9\u5ea6\u6570\u4e3a\u5947\u3002\u7531\u4e8e\u6570\u636e\u4fdd\u8bc1\u5b58\u5728\u6b27\u62c9\u8def\u5f84\uff0c\u53ea\u8981\u9009\u62e9\u7b2c\u4e00\u4e2a\u5ea6\u6570\u4e3a\u5947\u6570\u7684\u70b9\uff08\u5982\u679c\u627e\u4e0d\u5230\u7684\u8bdd\uff0c\u5c31\u7528\u7b2c\u4e00\u4e2a\u5ea6\u6570\u4e3a\u5076\u6570\u7684\u70b9\uff09\u4f5c\u4e3a\u8def\u5f84\u7684\u7b2c\u4e00\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u6211\u4f7f\u7528\u4e86multiset\u6765\u4fdd\u5b58\u56fe\u3002\u8fd9\u662f\u51fa\u4e8e\u9898\u76ee\u8981\u6c42\u4f18\u5148\u9009\u62e9\u8f83\u5c0f\u7684\u70b9\u8bbf\u95ee\uff0c\u800cset\u81ea\u5e26\u6392\u5e8f\u7684\u8003\u8651\u3002\u4f7f\u7528multiset\u800c\u975eset\u7684\u539f\u56e0\u662f\uff0c\u53ef\u80fd\u5b58\u5728\u91cd\u8fb9\u3002\n\n\u53e6\u5916\uff0cPath\u5e94\u53cd\u5411\u8f93\u51fa\u3002\n\n```cpp\n/* P2731\n * Au: SJoshua\n */\n#include <cstdio>\n#include <set>\n\nusing namespace std;\n\nmultiset <int> map[501];\n\nint degree[501], pathSize = 0, path[1025];\n\nvoid solve(int u) {\n    while (map[u].begin() != map[u].end()) { \n        multiset <int> :: iterator it = map[u].begin();\n        int v = *it;\n        map[u].erase(it);\n        map[v].erase(map[v].find(u)); \n        solve(v); \n    }\n    path[++pathSize] = u;\n}\n\nint main(void) {\n    int m;\n    scanf(\"%d\", &m);\n    for (int k = 0; k < m; k++) {\n        int u, v;\n        scanf(\"%d %d\", &u, &v);\n        map[u].insert(v);\n        map[v].insert(u);\n        degree[u]++;\n        degree[v]++;\n    }\n    int start = 0;\n    for (int k = 1; k <= 500; k++) {\n        if (degree[k] && !start) {\n            start = k;\n        }\n        if (degree[k] % 2) {\n            start = k;\n            break;\n        }\n    }\n    solve(start);\n    for (int k = pathSize; k > 0; k--) {\n        printf(\"%d\\n\", path[k]); \n    }\n    return 0;\n}\n```",
        "postTime": 1477670343,
        "uid": 790,
        "name": "\u7ea6\u4fee\u4e9a_RK",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u8981\u6c42\u6211\u4eec\u6c42\u51fa\u4e00\u6761\u6b27\u62c9\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u9996\u5148\u5224\u65ad\u56fe\u4e2d\u662f\u5426\u6709\u6b27\u62c9\u8def\u3002\u5bf9\u4e8e\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5982\u679c\u5b83\u6bcf\u4e2a\u70b9\u7684\u5ea6\u90fd\u662f\u5076\u6570\uff0c\u90a3\u4e48\u5b83\u5b58\u5728\u4e00\u6761\u6b27\u62c9\u56de\u8def\uff1b\u5982\u679c\u6709\u4e14\u4ec5\u67092\u4e2a\u70b9\u7684\u5ea6\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u5b83\u5b58\u5728\u4e00\u6761\u6b27\u62c9\u8def\uff1b\u5982\u679c\u8d85\u8fc72\u4e2a\u70b9\u7684\u5ea6\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u5b58\u5728\u6b27\u62c9\u8def\u4e86\u3002\n\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u8bf4\u6570\u636e\u4fdd\u8bc1\u81f3\u5c11\u67091\u4e2a\u89e3\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728\u6b27\u62c9\u8def\u4e86\u3002\u4f46\u662f\u6211\u4eec\u8fd8\u8981\u9009\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\u3002\u5982\u679c\u6ca1\u6709\u70b9\u7684\u5ea6\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u4efb\u4f55\u4e00\u4e2a\u70b9\u90fd\u80fd\u505a\u8d77\u70b9\u3002\u5982\u679c\u67092\u4e2a\u5947\u70b9\uff0c\u90a3\u4e48\u5c31\u53ea\u80fd\u4e5f\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u4e00\u4e3a\u8d77\u70b9\uff0c\u53e6\u4e00\u4e2a\u4e3a\u7ec8\u70b9\u3002\u4f46\u662f\u6211\u4eec\u8981\u6ce8\u610f\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u8f93\u51fa\u7684\u662f\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\u4e4b\u540e\u6700\u5c0f\u7684\uff08\u4e5f\u5c31\u662f\u8f93\u51fa\u7b2c\u4e00\u4e2a\u6570\u8f83\u5c0f\u7684\uff0c\u5982\u679c\u8fd8\u6709\u591a\u7ec4\u89e3\uff0c\u8f93\u51fa\u7b2c\u4e8c\u4e2a\u6570\u8f83\u5c0f\u7684\uff0c\u7b49\u7b49\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4ee5\u6700\u5c0f\u7684\u70b9\u505a\u8d77\u70b9\u3002\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<fstream>\n#include<queue>\n#include<climits>\n#include<vector>\nusing namespace std;\nint Max(int a,int b)    {   return a>b?a:b;  }\nint Min(int a,int b)    {   return a<b?a:b;  }\nint map[505][505];\nint path[1050];\nint pathnum;\nint minv=INT_MAX,maxv=0;\nvoid Euler_circle_u(int v)\n{\n    for (int i=minv;i<=maxv;i++)\n        while(map[i][v]>0)\n        {\n            map[i][v]--;\n            map[v][i]--;\n            Euler_circle_u(i);\n        }\n    path[pathnum++]=v;\n}\nint main(){\n    int f;\n    cin>>f;\n    memset(map,0,sizeof(map));\n    for (int i=0;i<f;i++)\n    {\n        int a,b;\n        cin>>a>>b;\n        minv=Min(a,minv);\n        minv=Min(b,minv);\n        maxv=Max(a,maxv);\n        maxv=Max(b,maxv);\n        map[a][0]++;\n        map[b][0]++;\n        map[a][b]++;\n        map[b][a]++;\n    }\n    int k=minv;\n    for (int i=minv;i<=maxv;i++)\n        if (map[i][0]%2==1)\n        {\n            k=i;\n            break;\n        }\n    Euler_circle_u(k);\n    for (int i=pathnum-1;i>=0;i--)\n        cout<<path[i]<<endl;\n    return 0;\n}\n```",
        "postTime": 1473255083,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    },
    {
        "content": "\u660e\u663e\u7684\u641c\u7d22+\u6b27\u62c9\u56fe\n\n\u6709\u70b9\u66b4\u529b \u3002\u3002\u53ef\u80fd\u4f18\u5316\u4e0d\u591f\u5b8c\u5584\n\n\u9644\u4ee3\u7801\uff08\u5176\u5b9e\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff09\n\n \n \n```cpp\nvar edge:array[1..500,1..500] of integer;\n    t:array[1..500] of integer;\n    ans:array[1..1024] of integer;\n    f,k,v,max:integer;\nfunction init():integer;\n  var i,s,e:integer;\n  begin\n    fillchar(edge,sizeof(edge),0);\n    fillchar(t,sizeof(t),0);\n    max:=0;\n    readln(f);\n    for i:=1 to f do\n      begin\n        readln(s,e);\n        inc(edge[s,e]);\n        inc(edge[e,s]);\n        inc(t[s]);\n        inc(t[e]);\n        if s>max then max:=s;\n        if e>max then max:=e;\n      end;\n    for i:=1 to max do\n      if odd(t[i]) then exit(i);\n    exit(1);\n  end;\nprocedure search(n:integer);\n  var i:integer;\n  begin\n    for i:=1 to max do\n      if edge[n,i]>0 then\n        begin\n          dec(edge[n,i]);\n          dec(edge[i,n]);\n          search(i);\n        end;\n    v:=v+1;\n    ans[v]:=n;\n  end;\nprocedure print;\n  var i:integer;\n  begin\n    for i:=v downto 1 do\n      writeln(ans[i]);\n  end;\nbegin\n  k:=init();\n  v:=0;\n  search(k);\n  print;\nend.\n```",
        "postTime": 1468550196,
        "uid": 19901,
        "name": "\u68a6\u666f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2731 \u3010\u9a91\u9a6c\u4fee\u6805\u680f Riding the Fences\u3011"
    }
]