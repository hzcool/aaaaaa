[
    {
        "content": "\u770b\u5230\u4e0d\u5c11\u5927\u4f6c\u90fd\u7528\u72b6\u538bDP\u8fc7\u7684\uff0c\n\n\u4f46\u662f\uff0c\n\n\u51ed\u826f\u5fc3\u4f30\u8ba1\u4e00\u4e0b\u81ea\u5df1\u7684\u5b9e\u529b\uff0c\u53d1\u73b0\u672c\u849f\u84bb\u5e76\u4e0d\u4f1a\u554a\u2026\u2026\n\n\u91cd\u65b0\u601d\u8003\u4e00\u4e0b\uff0c\u8bbedis[i][j]\u8868\u793a\u4ecei\u5230j\u7684\u6700\u77ed\u8fb9\uff08\u9650\u5236\u6536\u96c6\uff09\u7684\u957f\u5ea6\u3002N<=100,\u53ef\u4ee5\u7528floyd\u5904\u7406\u3002\n\n\u6700\u540e\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u628a\u6709\u5e72\u8349\u7684\u70b9i\u6309\u7167dis[1][i]\u6392\u5e8f\uff0c\u4ece\u6700\u5c0f\u7684\u5f00\u59cb\u9009\u3002\n\n\u849f\u84bb\u6c34\u5e73\u4f4e\uff0c\u8fd8\u671b\u5404\u4f4d\u5927\u4f6c\u65a7\u6b63\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define res register int\nusing namespace std;\n\nconst int inf=23333333;\nint n,m,k;\nint dis[110][110];\nint a[110],b[110];\n\ntemplate<class T>\ninline void read(T& v)\n{\n    char c=getchar();v=0;\n    while(c<'0'||c>'9'){c=getchar();}\n    while(c>='0'&&c<='9'){v=(v<<3)+(v<<1)+(c^'0');c=getchar();}\n}\n\ninline void floyd()\n{\t\n\tfor(res i=1;i<=n;i++)dis[i][i]=inf;\n\t\n\tfor(res t=1;t<=n;t++)\n\t for(res i=1;i<=n;i++)\n\t  for(res j=1;j<=n;j++)\n\t  {\n\t  \t  dis[i][j]=dis[j][i]=max(dis[i][j],min(dis[i][t],dis[t][j]));\n\t\t\t//\u8003\u8651\u662f\u5426\u8981\u4ecet\u70b9\u7ed5\u884c\uff08\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u4e14\u65e0\u6b21\u6570\u9650\u5236\uff0c\u53ef\u4ee5\u968f\u4fbf\u8d70\uff09 \n\t  }\n}\n\ninline int solve()\n{\n\tfor(res i=1;i<=k;i++)b[i]=dis[1][a[i]];\n\t\n\tsort(b+1,b+k+1);\n\t\n\tint ans=0;\n\t\n\tfor(res i=1;i<=k;i++)//\u8d2a\u5fc3\u5728\u8fd9\u91cc \n\tif(b[i]>ans)//\u5f53\u524d\u5df2\u7ecf\u62e5\u6709ans\u4e2a\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u4ece\u8fd9\u8d70\u3002 \n\t{\n\t\tans++;\n\t}\n\t\n\treturn ans;\n}\n\nint main()\n{\t\n\tread(n),read(m),read(k);\n\t\n\tfor(res i=1;i<=k;i++)\n\t\tread(a[i]);\n\t\n\tint x,y,w;\n\tfor(res i=1;i<=m;i++)\n\t{\n\t\tread(x),read(y),read(w);\n\t\tdis[x][y]=dis[y][x]=max(dis[x][y],w);\n\t}\n\t\n\tfloyd();\n\t\n\tprintf(\"%d\",solve());\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1562033223,
        "uid": 130422,
        "name": "_\u849f\u84bb__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5096 \u3010[USACO2004OPEN]Cave Cows 1 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e00\u3011"
    },
    {
        "content": "\u7b80\u5355 $ bfs $\n\n\u53d1\u73b0 $ k \\le 14 $\uff0c\u53ef\u4ee5\u72b6\u538b\uff0c\u6240\u4ee5\u6211\u4eec\u7528 $ vis[i][j] $ \u8868\u793a\u5f53\u524d\u5728 $ i $ \u8fd9\u4e2a\u70b9\uff0c\u5df2\u7ecf\u5403\u6389\u7684\u5e72\u8349\u7684\u72b6\u6001\u4e3a $ j $ \u53ef\u4e0d\u53ef\u884c\uff0c\u76f4\u63a5 $ bfs $ \u5373\u53ef\n\n\n```cpp\n#include <bits/stdc++.h>\n#define Fast_cin ios::sync_with_stdio(false), cin.tie();\n#define rep(i, a, b) for(register int i = a; i <= b; i++)\n#define per(i, a, b) for(register int i = a; i >= b; i--)\n#define DEBUG(x) cerr << \"DEBUG\" << x << \" >>> \" << endl;\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long ll;\n\ntemplate <typename _T>\ninline void read(_T &f) {\n    f = 0; _T fu = 1; char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') fu = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { f = (f << 3) + (f << 1) + (c & 15); c = getchar(); }\n    f *= fu;\n}\n\ntemplate <typename T>\nvoid print(T x) {\n    if(x < 0) putchar('-'), x = -x;\n    if(x < 10) putchar(x + 48);\n    else print(x / 10), putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid print(T x, char t) {\n    print(x); putchar(t);\n}\n\nconst int N = 105, M = 1005;\n\nstruct Edge { int u, v, next, val; } G[M << 1];\nstruct ele { int x, y; ele(int a = 0, int b = 0) : x(a), y(b) {} };\n\nqueue <ele> q;\nbool vis[105][1 << 14];\nint head[N], cnt[1 << 14], hav[N];\nint T, n, m, k, tot;\n\ninline void addedge(int u, int v, int val) {\n    G[++tot] = (Edge) {u, v, head[u], val}, head[u] = tot;\n    G[++tot] = (Edge) {v, u, head[v], val}, head[v] = tot;\n}\n\ninline int lowbit(int x) { return x & -x; }\n\nint main() {\n    for(register int i = 1; i < (1 << 14); i++) cnt[i] = cnt[i ^ lowbit(i)] + 1;\n    read(n); read(m); read(k);\n    for(register int i = 1; i <= k; i++) { int a; read(a); hav[a] = i; }\n    for(register int i = 1; i <= m; i++) {\n        int a, b, c;\n        read(a); read(b); read(c);\n        addedge(a, b, c);\n    }\n    vis[1][0] = 1; q.push(ele(1, 0));\n    if(hav[1]) vis[1][1 << (hav[1] - 1)] = 1, q.push(ele(1, 1 << (hav[1] - 1)));\n    while(!q.empty()) {\n        ele t = q.front(); q.pop();\n        int u = t.x, zt = t.y;\n        for(register int i = head[u]; i; i = G[i].next) {\n            int v = G[i].v;\n//\t\t\t\tfprintf(stderr, \"zt = %d\\n\", zt);\n            if(G[i].val < cnt[zt]) continue;\n            if(!vis[v][zt]) vis[v][zt] = 1, q.push(ele(v, zt));\n            if(hav[v] && !(zt & (1 << (hav[v] - 1))) && !vis[v][zt ^ (1 << (hav[v] - 1))]) {\n                vis[v][zt ^ (1 << (hav[v] - 1))] = 1;\n                q.push(ele(v, zt ^ (1 << (hav[v] - 1))));\n            }\n        }\n    }\n    int ans = 0;\n    for(register int i = 0; i < (1 << 14); i++) if(vis[1][i]) ans = max(ans, cnt[i]);\n    print(ans, '\\n');\n    return 0;\n}\n```",
        "postTime": 1544511776,
        "uid": 51815,
        "name": "LJC00118",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5096 \u3010[USACO2004OPEN]Cave Cows 1 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e00\u3011"
    },
    {
        "content": "\u9898\u9762\u610f\u601d\u5927\u5bb6\u5e94\u8be5\u90fd\u61c2\u5427\uff0c\u6211\u8fd9\u91cc\u76f4\u63a5\u8bf4\u601d\u8def\u5427\u3002\n\u9996\u5148\u8fde\u901a\u56fe\uff0c\u53cc\u5411\u901a\u9053\u8fd9\u5b57\u773c\u9996\u5148\u5c31\u80fd\u4e00\u4e0b\u60f3\u5230\u662f\u56fe\u8bba\u5427\uff08~~\u5176\u5b9e\u662f\u6ca1\u5b66\u8fc7\u72b6\u538b~~\uff09\n\n\u6839\u636e\u9898\u610f\u8dd1\u4e00\u904dfloyed\uff0c\u7136\u540e\u6253\u4e2a\u64c2\u53f0\u5c31\u597d\u5566\u3002\n\ndis[i][j]\u8868\u793a\u4ecei\u5230j\u8def\u5f84\uff08\u80fd\u8dd1\u7684\uff09\u4e2d\u5bbd\u5ea6\u6700\u5927\u7684\u3002\n\n**\u91cd\u70b9**\u8bf4\u4e00\u4e0bfloyed\u91cc\u9762\u7684\u5427\u3002\n\n```cpp\ndis[i][j]=max(dis[i][j],min(dis[i][k],dis[k][j]));\n```\n\u5343\u4e07\u4e0d\u8981\u60f3\u6210**dis[i][k]+dis[k][j]**\u3002 \u5b83\u8bf4\u6bcf\u6761\u8def\u6709\u4e00\u4e2a\u5bbd\u5ea6\u9608\u503c\uff0c\u6c42\u6700\u591a\u5403\u7684\u8349\u3002\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u6bcf\u6761\u8def\u7684\u6700\u5927\u9608\u503c\uff08~~\u4f60\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u8dd1\u4e00\u904d\u6700\u957f\u8def~~\uff09 \n\n\u81f3\u4e8emin \u56e0\u4e3a\u521d\u59cb\u5316\u7684\u539f\u56e0\u60f3\u4e00\u4e0b\n1. \u5982\u679c\u81ea\u5df1\u8dd1\u5230\u81ea\u5df1\u663e\u7136\u5bf9\u7b54\u6848\u6ca1\u6709\u8d21\u732e\u6240\u4ee5\u6211\u4eec\u8d4b\u4e00\u4e2a\u6781\u5927\u503c\u53d6min\u7b5b\u6389\u5373\u53ef\u3002\n2. \u5982\u679c\u6ca1\u6709\u8fd9\u6761\u8def\u4e0d\u5b58\u5728\uff0c\u663e\u7136\u662f\u6ca1\u6709\u9608\u503c\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8d4b\u503c\u4e3a0\u5c31\u53ef\u4ee5\u89e3\u51b3\u5566\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint dis[120][120];\nint n,m,T,ans;//ans:\u5f53\u524d\u5403\u4e86\u591a\u5c11\u8349\nint f[120],a[120];\ninline int read()//\u5feb\u8bfb\n{\n\tint Num=0,f=1; char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1; ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {Num=Num*10+ch-'0'; ch=getchar();}\n\treturn Num*f;\n}\ntemplate <typename T>\ninline void fprint(T x)//\u5feb\u8f93\n{\n    if(x < 0)\n    {\n        putchar(45);\n        x=-x;\n    }\n    if(x>9)\n    {\n        fprint(x/10);\n    }\n    putchar(x%10+48);\n}\ninline bool cmp(int x,int y) {return x<y;}//sort\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\nint main()\n{\n\tn=read(),m=read(),T=read();\n\tfor(int i=1;i<=T;i++) a[i]=read();\n\tfor(int i=1;i<=n;i++) dis[i][i]=1002200;//\u81ea\u5df1\u5230\u81ea\u5df1\u8d4b\u503c\u6781\u5927\u503c\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=read(),y=read(),z=read();\n\t\tdis[x][y]=z,dis[y][x]=z;\n\t}\n\tfor(int k=1;k<=n;k++)//floyed\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=i;j<=n;j++)\n\tdis[i][j]=max(dis[i][j],min(dis[i][k],dis[k][j]));\n\tfor(int i=1;i<=T;i++) f[i]=dis[1][a[i]];//\u4ece\u8d77\u70b9\u5230\u6709\u8349\u7684\u6700\u5927\u9608\u503c\n\tsort(f+1,f+1+T,cmp);\n\tfor(int i=1;i<=T;i++) ans<f[i]?ans++:1;//\u5982\u679cans<f[i] \u5403\u7684\u8349\u52a0\u4e00\n\tfprint(ans);\n\treturn 0;\n}\n```\n\n\n------------\n~~\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u5e0c\u671b\u80fd\u8fc7~~\n",
        "postTime": 1575639601,
        "uid": 196879,
        "name": "KaDa_Duck",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5096 \u3010[USACO04OPEN]Cave Cows 1 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e00\u3011"
    },
    {
        "content": "# \u8d2a\u5fc3+floyd\n## \u8fd9\u9053\u9898\u5f88\u663e\u7136 \u5148\u6c42\u4e00\u904d\u591a\u6e90\u6700\u77ed\u8def\n### 1.\u8bb0\u5f55\u6709\u7a3b\u8349\u7684\u70b9\n### 2.floyd\uff08\u6c42\u5f53\u524d\u8def\u5f84\u6700\u5c0f\u9650\u5236\u7684\u6700\u5927\u503c\uff09\n### 3.\u628a1\u5230(\u6709\u7a3b\u8349\u7684\u70b9)\u7684\u9650\u5236\u8fdb\u884c\u6392\u5e8f\n### 4.\u4ece\u5c0f\u5230\u5927\u9009\u62e9 \u5982\u679c\u6bd4\u5f53\u524d\u4f53\u91cd\u5927\u5c31ans++\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint d[101],dd[101],mp[101][101];\nint main()\n{\n\tint n,m,c;\n\tcin>>n>>m>>c;\n\tfor(int i=1;i<=c;i++)\n\t{\n\t\tcin>>d[i];\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tcin>>x>>y>>z;\n\t\tmp[x][y]=z;\n\t\tmp[y][x]=z;\n\t}\n\tfor(int i=1;i<=n;i++)mp[i][i]=1433223;\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tmp[i][j]=max(mp[i][j],min(mp[i][k],mp[k][j]));\n\tint ans=0;\n\tfor(int i=1;i<=c;i++)\n\t\tdd[i]=mp[1][d[i]];\n\tsort(dd+1,dd+1+c);\n\tfor(int i=1;i<=c;i++)\n\t{\n\t\tif(dd[i]>ans)\n\t\tans++;\n\t}\n\tcout<<ans;\n}\n\n\n```\n",
        "postTime": 1571571253,
        "uid": 58064,
        "name": "COUPDETAT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5096 \u3010[USACO04OPEN]Cave Cows 1 \u6d1e\u7a74\u91cc\u7684\u725b\u4e4b\u4e00\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5096)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Appleblue17/p/14838018.html)\n\n~~\u8fd9\u9898\u7ed9\u7684\u6570\u636e\u8303\u56f4\u4e5f\u592a\u5f31\u4e86\u5427\uff0c\u4e3a\u5565 k \u7ed9\u5f97\u50cf\u72b6\u538b\u4e00\u6837\u2026\u2026~~\n\n#### \u9898\u610f\u7b80\u8ff0\n\n+ $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8fb9\u6709\u8fb9\u6743\uff0c\u53ea\u6709\u5f53\u4f53\u79ef\u5c0f\u4e8e\u8fb9\u6743\u65f6\u624d\u80fd\u901a\u8fc7\u3002\n+ \u6709 $k$ \u4e2a\u7279\u6b8a\u70b9\u4e0a\u653e\u6709\u98df\u7269\uff0c\u5403\u6389\u53ef\u4ee5\u4f7f\u4f53\u79ef\u52a0\u4e00\uff08\u7ecf\u8fc7\u8be5\u70b9\u65f6\u53ef\u4ee5\u9009\u62e9\u4e0d\u5403\uff09\u3002\n\n+ \u521d\u59cb\u65f6\u4f53\u79ef\u4e3a $0$ \uff0c\u8981\u6c42\u4ece $1$ \u53f7\u70b9\u51fa\u53d1\uff0c\u6700\u540e\u56de\u5230 $1$ \u53f7\u70b9\uff0c\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\u4e00\u6761\u8fb9\u3002\u6c42\u6700\u591a\u80fd\u5403\u6389\u591a\u5c11\u98df\u7269\u3002\n+ $n \\leq 100$\uff0c$m \\leq 1000$\uff0c$k \\leq 14$\u3002\n\n#### \u9898\u76ee\u5206\u6790\n\n\u8bb0 $w(x,y)$ \u8868\u793a\u80fd\u4ece $x$ \u8d70\u5230 $y$ \u7684\u6700\u5927\u4f53\u79ef\u3002\n\n\u7531\u4e8e\u8fb9\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\uff0c\u4e8b\u5b9e\u4e0a**\u6bcf\u4e00\u4e2a\u7279\u6b8a\u70b9\u53ef\u4ee5\u72ec\u7acb\u8003\u8651**\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8d1d\u831c\u7684\u8def\u7ebf\u4e00\u5b9a\u53ef\u4ee5\u53d8\u4e3a\uff1a\u4ece $1$ \u53f7\u70b9\u51fa\u53d1\uff0c\u5230\u8fbe\u67d0\u4e2a\u7279\u6b8a\u70b9\u5e76\u5403\u6389\u98df\u7269\uff0c\u518d\u56de\u5230 $1$ \u53f7\u70b9\uff0c\u5e76\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u91cd\u590d $ans$ \u6b21\u3002\n\n\u7406\u7531\u5f88\u7b80\u5355\u3002\u5047\u8bbe\u8d1d\u831c\u8d70\u5230\u4e86\u7279\u6b8a\u70b9 $x$ \u5403\u6389\u98df\u7269\u540e\u4f53\u79ef\u4e3a $p$\uff0c\u53c8\u8d70\u5230\u7279\u6b8a\u70b9 $y$ \u5403\u6389\u98df\u7269\uff0c\u90a3\u4e48\u6709 $w(x,y) \\geq p, w(y,1)\\geq p+1$\uff08\u5426\u5219\u5c31\u518d\u4e5f\u8d70\u4e0d\u56de $1$ \u53f7\u70b9\u4e86\uff09\u3002\n\n\u56e0\u6b64 $w(x,1) \\geq p$\uff0c\u5c06 $x \\rightarrow y$ \u53d8\u4e3a $x \\rightarrow 1 \\rightarrow y$  \u662f\u5408\u6cd5\u7684\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u4e8b\u60c5\u5c31\u662f\u7b97\u51fa $w(1,t)$\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u8d2a\u5fc3\u9009\u53d6\u5408\u6cd5\u4e14 $w(1,t)$ \u6700\u5c0f\u7684\u7279\u6b8a\u70b9\u5403\u6389\u3002\u8fd9\u4e00\u6b65\u7684\u6392\u5e8f\u9700\u8981 $O(k\\log k)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u8003\u8651\u5bf9\u6bcf\u4e2a\u70b9 $t$ \u8ba1\u7b97 $w(1,t)$\uff0c\u663e\u7136\u8fd9\u6837\u7684\u8def\u5f84\u4e00\u5b9a\u5728\u6700\u5927\u751f\u6210\u6811\u4e0a\uff0c\u5efa\u51fa\u6811 dfs \u4e00\u6b21\u5373\u53ef\u3002\u8fd9\u4e00\u6b65\u6700\u5c0f\u751f\u6210\u6811\u89c6\u5b9e\u73b0\u9700\u8981 $O(m \\log m)$ \u6216 $O(m \\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(k \\log k+m \\log m)$ \u6216 $O(k \\log k+m \\log n)$\uff0c\u53ef\u4ee5~~\u975e\u5e38\u975e\u5e38\u8f7b\u677e\u5730~~\u901a\u8fc7\u672c\u9898\u3002\n\n~~\u76f4\u63a5\u6700\u4f18\u89e3\u2026\u2026~~\n\n#### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=110,M=1100;\nstruct nod{\n\tint to,nxt,w;\n}e[N*2];\nint head[N],cnt;\nvoid add(int u,int v,int w){\n\te[++cnt].to=v;\n\te[cnt].w=w;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nint n,m,k;\nint p[15],q[15];\nint dis[110];\n\nstruct abc{\n\tint u,v,w;\n}edg[M*2];\nbool operator <(abc x,abc y){\n\treturn x.w>y.w;\n}\n\nint fa[N];\nint getf(int x){\n\tif(x==fa[x]) return x;\n\treturn fa[x]=getf(fa[x]);\n}\nbool merge(int x,int y){\n\tint fx=getf(x),fy=getf(y);\n\tif(fx==fy) return 0;\n\tfa[fx]=fy;\n\treturn 1;\n}\n\nvoid dfs(int u,int fa,int mn){\n\tdis[u]=mn;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(v,u,min(mn,e[i].w));\n\t}\n}\n\nint main(){\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=k;i++) scanf(\"%d\",&p[i]);\n\tfor(int i=1;i<=m;i++) scanf(\"%d%d%d\",&edg[i].u,&edg[i].v,&edg[i].w);\n\tsort(edg+1,edg+m+1);\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tint u=edg[i].u,v=edg[i].v;\n\t\tif(merge(u,v)) add(u,v,edg[i].w),add(v,u,edg[i].w);\n\t}\n\t//\u6700\u5927\u751f\u6210\u6811 \n\tdfs(1,0,1e9);\n\tfor(int i=1;i<=k;i++) q[i]=dis[p[i]]-1;\n\tsort(q+1,q+k+1);\n\tint nw=0,ans=0;//\u73b0\u5728\u7684\u4f53\u79ef / \u7b54\u6848 \n\tfor(int i=1;i<=k;i++)\n\t\tif(nw<=q[i]) nw++,ans++;//\u8d2a\u5fc3 \n\tcout<<ans;\n}\n```",
        "postTime": 1622538529,
        "uid": 225645,
        "name": "\u82f9\u679c\u84dd17",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5096 [USACO04OPEN]Cave Cows 1"
    },
    {
        "content": "# [P5096](https://www.luogu.com.cn/problem/P5096)\n## \u9898\u76ee\u5206\u6790\n\u672c\u9898\u8981\u6c42\u6700\u591a\u80fd\u5403\u591a\u5c11\u6346\u5e72\u8349\uff0c\u770b\u4e0a\u53bb\u5c31\u662f\u5728\u56fe\u4e0a\u8dd1\u4e00\u4e2a\u641c\u7d22\uff0c\u904d\u5386\u6240\u6709\u53ef\u884c\u7684\u8def\u5f84\uff0c\u6700\u540e\u5f97\u51fa\u6700\u5927\u7b54\u6848\uff0c\u76f8\u4fe1\u5404\u4f4d\u770b\u4e86\u8fd9\u9053\u9898\u90fd\u4f1a\u6709\u8fd9\u4e2a\u601d\u8def\u3002   \n\n\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u641c\u7d22\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u72b6\u6001\u538b\u7f29\u6765\u538b\u7f29\u6240\u6709\u7684\u5e72\u8349\u72b6\u6001\uff08\u662f\u5426\u88ab\u5403\u6389\uff09\uff0c\u6765\u7ef4\u62a4\u5f53\u524d\u7684\u72b6\u6001\u3002\u641c\u7d22\u7684\u5185\u5bb9\u5982\u4e0b\uff1a\u8bb0\u5f55\u5f53\u524d\u4f4d\u7f6e\uff0c\u5f53\u524d\u5e72\u8349\u72b6\u6001\uff0c\u4f53\u91cd\uff0c\u7136\u540e\u904d\u5386\u6240\u6709\u8fb9\uff0c\u770b\u80fd\u5426\u8fc7\u53bb\uff0c\u540c\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u6d1e\u7a74\u6709\u5e72\u8349\uff0c\u90a3\u4e48\u5c31\u8981\u8003\u8651\u5403\u4e0d\u5403\u8fd9\u4e2a\u6d1e\u7a74\u7684\u5e72\u8349\u3002     \n\n\u4f46\u8fd9\u6837\u65f6\u95f4\u8981\u7206\uff0c\u6240\u4ee5\u53ef\u4ee5\u641e\u4e00\u4e2a\u4f18\u5316\u3002\u8bb0\u5f55\u7684\u72b6\u6001\u6709\u4f4d\u7f6e\u4e0e\u5e72\u8349\u72b6\u6001\uff08\u4f53\u91cd\u4e0e\u5e72\u8349\u72b6\u6001\u662f\u76f8\u5173\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5ffd\u7565\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u72b6\u6001\uff08\u4f4d\u7f6e\u52a0\u5e72\u8349\uff09\u662f\u5426\u8fbe\u5230\u8fc7\u3002    \n\n\u7136\u540e\u6ca1\u4e86\uff0c\u5199\u4e00\u4e2a BFS \u5373\u53ef\u3002   \n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,vis[103][20003],fd[103],k1,k2,k3;\nint tot,Q[6000003][3],head[10003],ans;\nstruct Edge\n{\n\tint st;\n\tint ed;\n\tint val;\n\tint nxt;\n}E[1000003];\nint totE=1;\nvoid addEdge(int st,int ed,int val)\n{\n\ttotE++;\n\tE[totE].st=st;\n\tE[totE].ed=ed;\n\tE[totE].val=val;\n\tE[totE].nxt=head[st];\n\thead[st]=totE;\n\treturn;\n}\nvoid addQ(int now,int zt,int wt)\n{\n\tif(vis[now][zt])return;\n\tvis[now][zt]=1;\n\ttot++;\n\tQ[tot][0]=now;\n\tQ[tot][1]=zt;\n\tQ[tot][2]=wt;\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d\",&k1);\n\t\tfd[k1]=i;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&k1,&k2,&k3);\n\t\taddEdge(k1,k2,k3);\n\t\taddEdge(k2,k1,k3);\n\t}\n\taddQ(1,0,0);\n\tfor(int i=1;i<=tot;i++)\n\t{\n\t\tk1=Q[i][0];\n\t\tk2=Q[i][1];\n\t\tk3=Q[i][2];\n\t\tif(k1==1)\n\t\t{\n\t\t\tif(fd[1]==0)\n\t\t\t{\n\t\t\t\tans=max(ans,k3);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif((1<<(fd[1]-1))&k2)ans=max(ans,k3);\n\t\t\t\telse ans=max(ans,k3+1);\n\t\t\t}\n\t\t}\n\t\tfor(int j=head[k1];j!=0;j=E[j].nxt)\n\t\t{\n\t\t\tif(k3>E[j].val)continue;\n\t\t\taddQ(E[j].ed,k2,k3);\n\t\t}\n\t\tif(fd[k1]==0)continue;\n\t\tif(((1<<(fd[k1]-1))&k2)!=0)continue;\n\t\tfor(int j=head[k1];j!=0;j=E[j].nxt)\n\t\t{\n\t\t\tif(k3+1>E[j].val)continue;\n\t\t\taddQ(E[j].ed,(k2+(1<<(fd[k1]-1))),k3+1);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1673185489,
        "uid": 340819,
        "name": "cwfxlh",
        "ccfLevel": 5,
        "title": "P5096"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u7528 floyd \u9884\u5904\u7406\u51fa $i \\sim j$ \u6240\u6709\u8def\u5f84\u4e2d\u5bbd\u5ea6\u9650\u5236\u7684\u6700\u5927\u503c\uff0c\u8bb0\u4e3a $f_{i,j}$\uff08\u8fd9\u6837\u663e\u7136\u4f1a\u66f4\u4f18\uff09\u3002\n\n\u5c06\u7b2c $i$ \u5806\u5e72\u8349\u7684\u4f4d\u7f6e\u8bb0\u4e3a $a_i$\u3002\n\n\u7531\u6b64\u6211\u4eec\u5c06 $f_{1,a_i}(1 \\leq i \\leq n)$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u540c\u65f6\u8bb0\u5f55\u5403\u6389\u7684\u5e72\u8349\u6570\u3002\u8bb0\u4e3a $s$\u3002\u5f53 $s<f_{1,a_i}$ \u65f6\uff0c\u9009\u62e9\u5403\u4e0b\u7b2c $i$ \u5806\u5e72\u8349\u3002\n\n## AC Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=101,T=15;\nint f[N][N];\nint n,m,t,a[T],mn=1e9,ans;\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&t);\n\tfor(int i=1;i<=t;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++) f[i][i]=1e9;\n\twhile(m--){\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tf[x][y]=f[y][x]=z;\n\t}\n\tfor(int k=1;k<=n;k++){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=n;j++) if(i!=j) f[i][j]=max(f[i][j],min(f[i][k],f[k][j]));\n\t\t}\n\t}\n\tfor(int i=1;i<=t;i++) a[i]=f[1][a[i]];\n\tsort(a+1,a+1+t);\n\t//reverse(a+1,a+1+t);\n\tfor(int i=1;i<=t;i++) if(a[i]>=ans+1) ans++;\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1653406260,
        "uid": 486484,
        "name": "Gaode_Sean",
        "ccfLevel": 6,
        "title": "P5096 \u9898\u89e3"
    },
    {
        "content": "\u6709\u5f88\u591a\u795e\u4ed9\u7528\u72b6\u538b\u8fc7\u53bb\u4e86\uff0c\u53ef\u60dc\u672c\u849f\u84bb\u4e0d\u4f1a\u72b6\u538b\u3002\n\n\u9898\u9762\u51e0\u4e2a\u4fe1\u606f\u8981\u7279\u522b\u6ce8\u610f\u4e00\u4e0b\u3002\n\n1. **\u91cc\u9762\u653e\u6709 1 \u6346\u5e72\u8349**\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e00\u4e2a\u623f\u95f4\u4ec5\u4ec5\u53ea\u6709\u4e00\u6346\u5e72\u8349\u3002\n\n2. **\u5979\u4ece\u6d1e\u7a9f1\u51fa\u53d1\uff0c\u4f53\u91cd\u6307\u6570\u4e3a0\u3002\u5728\u6d1e\u91cc\u6e9c\u8fbe\u4e00\u5708\u540e\uff0c\u5979\u8981\u8fd4\u56de\u6d1e\u7a9f1\u3002** \u4e00\u5f00\u59cb\u4f53\u91cd\u4e3a $0$\uff0c\u51fa\u53d1\u70b9\u5728 $1$\uff0c\u7ed3\u675f\u70b9\u4e5f\u53ea\u80fd\u5728 $1$\u3002\n\n\u8fd9\u4e9b\u9650\u5236\u6761\u4ef6\u53ef\u4ee5\u8ba9\u6211\u4eec\u6bd4\u8f83\u5bb9\u6613\u5730\u5904\u7406\u8fd9\u9053\u9898\u76ee\u3002\n\n\u5148\u4e0d\u8bf4\u7528\u4ec0\u4e48\u505a\u6cd5\u505a\uff0c\u60f3\u4e00\u60f3\u600e\u4e48\u6837\u53ef\u4ee5\u627e\u51fa\u5408\u6cd5\u7684\u60c5\u51b5\uff1f\n\n\u5408\u6cd5\u7684\u60c5\u51b5\u4e5f\u5c31\u662f\u5f53\u524d\u5230\u8fbe\u5b83\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u5019\uff0c**\u4f53\u91cd\u4e0d\u80fd\u8d85\u8fc7\u4e2d\u95f4\u7684\u6700\u5c0f\u8fb9**\uff0c\u5c31\u6bd4\u5982\u8bf4 $1 \\rightarrow 2$ \u6743\u503c\u4e3a $3$ \uff0c\u5728\u4e0d\u8003\u8651\u5176\u5b83\u8fb9\u7684\u60c5\u51b5\u4e0b\uff0c\u4f53\u91cd\u4e0d\u80fd\u8d85\u8fc7 $2$\u3002\n\n\u6b38\uff1f\u662f\u4e0d\u662f\u89c9\u5f97\u5f88\u5947\u602a\uff1f\u4e3a\u4ec0\u4e48\u4f53\u91cd\u4e0d\u80fd\u8d85\u8fc7 $2$ \u800c\u4e0d\u662f $3$ \u5462\uff1f\n\n\u539f\u56e0\u663e\u7136\uff0c\u5982\u679c\u4f53\u91cd\u4e3a $3$ \u7684\u60c5\u51b5\u4e0b\uff0c\u8d70\u8fc7\u6765\u5403\u5b8c\u4e4b\u540e\u5c31\u4e0d\u80fd\u8d70\u56de\u6765\u4e86\uff0c\u90a3\u5982\u679c\u4e0d\u5403\u5462\uff1f~~\u4f60\u6ca1\u4e8b\u53bb\u8d70\u4e00\u8d9f\u8fd8\u4e0d\u5403\u4e1c\u897f\u662f\u4e0d\u662f\u95f2\u7740\u6ca1\u4e8b\u5e72\uff1f~~\uff0c\u4e0d\u8d70\u7684\u8bdd\u5bf9\u7b54\u6848\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u5c31\u4e0d\u7528\u8d70\u4e86\u3002\n\n\u90a3\u4e48\u5982\u679c\u8bf4\u5904\u7406\u597d\u4e86\u6240\u6709\u70b9\u5230\u6240\u6709\u70b9\u7684\u8fb9\u4e0d\u80fd\u8d85\u8fc7\u67d0\u4e00\u4e2a\u503c\u4e86\u4e4b\u540e\uff0c\u8be5\u600e\u4e48\u529e\uff1f\n\n\u90a3\u4e48\u53ef\u4ee5\u8d2a\u5fc3\u5730\u8003\u8651\u4e00\u4e0b\uff0c**\u6bcf\u4e00\u4e2a\u623f\u95f4\u4ec5\u4ec5\u53ea\u6709\u4e00\u6346\u5e72\u8349**\uff0c\u5982\u679c\u5f53\u524d\u53ef\u4ee5\u8d70\u5230\u4e00\u4e2a\u8fb9\u6743\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u9009\u62e9\u7b2c $2$ \u5c0f\u548c\u7b2c $3$ \u5c0f\u7684\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u9009\u62e9\u4e86\u7b2c $2$ \u5c0f\uff0c\u5047\u8bbe\u53ef\u4ee5\u9009\u62e9\u7b2c $3$ \u5c0f\uff0c\u90a3\u4e48\u5fc5\u7136\u9009\u62e9\u4e86\u6700\u5c0f\u7684\u4e5f\u53ef\u4ee5\u9009\u7b2c $3$ \u5c0f\u7684\uff0c(\u5148\u4e0d\u8003\u8651\u91cd\u590d\u7684\u5f71\u54cd)\uff0c\u56e0\u4e3a\u9009\u62e9\u4e86\u6700\u5c0f\u7684\u5bf9\u4f53\u91cd\u7684\u5f71\u54cd\u662f $+1$\uff0c\u90a3\u4e48\u5982\u679c\u6700\u574f\u60c5\u51b5\u7b2c $2$ \u5c0f\u7684\u8fb9\u6743\u521a\u597d\u662f\u4f53\u91cd $+1$ \uff0c\u90a3\u4e48\u7b2c $3$ \u5c0f\u4e5f\u53ea\u80fd\u662f\u4f53\u91cd $+2$\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u9009\u62e9\u7b2c $3$ \u5c0f\u7684\u4e86\u3002\n\n\u4e0a\u9762\u8fd9\u79cd\u8003\u8651\u7684\u662f\u6700\u574f\u60c5\u51b5\uff0c\u6700\u597d\u60c5\u51b5\u662f\u4e09\u4e2a\u90fd\u9009\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ece\u6700\u5c0f\u7684\u5f00\u59cb\u8d2a\u5fc3\u7684\u9009\u62e9\u3002\n\n\u90a3\u4e48\u56de\u8fc7\u5934\u6765\u8003\u8651\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u600e\u4e48\u5904\u7406\u5408\u6cd5\u60c5\u51b5\uff0c\u6709\u795e\u4ed9\u7528\u4e86 floyd \u7136\u800c\u672c\u849f\u84bb\u89c9\u5f97 $O(n^3)$ \u592a\u6162\u4e86\uff0c\u6240\u4ee5\u5c31\u8003\u8651\u4f7f\u7528\u5355\u6e90\u6c42\u6700\u77ed\u8def\u5f84\u3002\n\n\u90a3\u4e48 \u2026\u2026 \u7531\u4e8e\u6700\u540e\u4e00\u6b21\u80af\u5b9a\u662f\u8981\u56de\u6765\u7684\uff0c\u6240\u4ee5\u4ece $1$ \u5f00\u59cb\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u7136\u540e\u6c42\u51fa\u5230\u8fbe\u67d0\u4e00\u4e2a\u70b9\u8def\u5f84\u7684\u6700\u5c0f\u8fb9\u5e76\u4e14\u8ba9\u5b83\u6700\u5927\u5316\uff0c\u6c42\u51fa\u6765\u7684\u6570$-1$\u5c31\u662f\u5b83\u6240\u80fd\u627f\u53d7\u7684\u6700\u5927\u4f53\u91cd\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u8fdb\u884c\u4e00\u4e2a\u8d2a\u5fc3\u4e86\uff01\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int INFN=105;\nconst int INFM=1005;\nint n,m,k,head[INFN],tot,a[INFN];\nstruct _node_edge {int to_,next_,disv_;} edge[INFM<<1];\nvoid add_edge(int x,int y,int z) {\n        edge[++tot]=(_node_edge){y,head[x],z};\n        head[x]=tot; return;\n}\nqueue <int> q;\nint dis_[INFN];\nbool vis[INFN];\nint fzx_min(int x,int y) {\n        return x<y ? x : y;\n}\nvoid SPFA(int s) {\n        memset(dis_,-63,sizeof dis_);\n        memset(vis,false,sizeof vis);\n        dis_[s]=1e9; vis[s]=true; q.push(s);//\u4e00\u5f00\u59cb\u8981\u8bbe\u6210\u65e0\u7a77\u5927\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u600e\u4e48\u6837\u90fd\u53ef\u4ee5\u5230\u8fbe\u3002\n        while (q.size()) {\n                int x=q.front(); q.pop(); vis[x]=false;\n                for (int i=head[x]; i; i=edge[i].next_) {\n                        if (dis_[edge[i].to_]<fzx_min(dis_[x],edge[i].disv_)) {\n                                dis_[edge[i].to_]=fzx_min(dis_[x],edge[i].disv_);\n                                if (!vis[edge[i].to_]) {\n                                        vis[edge[i].to_]=true;\n                                        q.push(edge[i].to_);\n                                }\n                        }\n                }\n        }\n        return;\n}\nint ans[INFN],ans1;\nsigned main()\n{\n        scanf(\"%d %d %d\",&n,&m,&k);\n        for (int i=1; i<=k; i++) scanf(\"%d\",&a[i]);\n        for (int i=1; i<=m; i++) {\n                int x=0,y=0,z=0; scanf(\"%d %d %d\",&x,&y,&z);\n                add_edge(x,y,z); add_edge(y,x,z);\n        }\n        SPFA(1);\n        for (int i=1; i<=k; i++)\n                ans[++ans1]=dis_[a[i]];\n        sort(ans+1,ans+ans1+1);\n        int sum=1;\n        for (int i=1; i<=ans1; i++) {\n                // cout<<ans[i]<<endl;\n                if (ans[i]<=sum) continue; sum++;//\u8fd9\u91cc\u6ca1\u51cf\u4e00\uff0c\u76f4\u63a5\u7528\u7b49\u4e8e\u5224\u6389\u3002\n        }\n        cout<<sum<<\"\\n\";\n        return 0;\n}\n```\n\n**\u8c22\u8c22\u89c2\u8d4f\uff01**",
        "postTime": 1604113401,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5096 \u3010[USACO04OPEN]Cave Cows 1\u3011"
    }
]