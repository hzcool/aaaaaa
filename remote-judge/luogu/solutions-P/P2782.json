[
    {
        "content": "\u8fd9\u9898\u4e00\u770b\u4e0a\u53bb\uff0c\u6ca1\u6709\u601d\u8def\uff0c\u89c9\u5f97\u5f88\u96be\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u753b\u56fe\uff0c\u6216\u8005\u4e3e\u4f8b\u5b50\uff0c\u53d1\u73b0\u53ea\u8981\u5bf9\u5317\u5cb8\u6216\u8005\u5357\u5cb8\u6392\u4e2a\u5e8f\uff0c\u5728\u770b\u53e6\u4e00\u8fb9\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5c31\u53ef\u4ee5\u4e86\u3002\u56e0\u4e3a\u5982\u679c\u53e6\u4e00\u8fb9\u7684\u662f\u4e0d\u4e0b\u964d\u7684\u8bf4\u660e\u4ed6\u4eec\u7684\u822a\u7ebf\u6ca1\u6709\u4ea4\u53c9\u3002\n\n\u800c\u8fd9\u9898\u7528n*n\u4f1a\u8d85\u65f6\uff08\u4f30\u8ba1\uff09\uff0c\u6240\u4ee5\u4ecb\u7ecd\u4e00\u4e2aO(nlog(n))\u7684\u65b9\u6cd5\u3002\n\n\u5c31\u662f\u7528\u53e6\u5f00\u4e00\u4e2a\u6570\u7ec4\u53bb\u5b58\u653e\u4ed6\u4e0d\u4e0b\u964d\u7684\u5143\u7d20\u3002\u800c\u67e5\u627e\u4e0d\u4e0b\u964d\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u4f7f\u7528STL\u5e93\u4e2d\u7684upper_bound\uff08lower_bound\u5728\u8fd9\u9898\u4e2d\u548cupper_bound\u7684\u6548\u679c\u662f\u4e00\u6837\u7684)\u8fd9\u4e2a\u51fd\u6570\u662f\u4e8c\u5206\u67e5\u627e\u6240\u4ee5\u6548\u7387\u5f88\u9ad8\u662fO(log(n))\u3002\n\n\u6211\u770b\u4e86\u4e00\u4e0b\u5176\u4ed6\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u53d1\u73b0\u4ed6\u4eec\u5728\u7528upper_bound\u7684\u65f6\u5019\u628aupper_bound\u653e\u5728\u4e86else\u7684\u5206\u652f\u4e86\u3002\u5176\u5b9e\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7528\u5224\u65ad\uff0c\u5168\u90e8\u4f7f\u7528upper_bound\uff0c\u56e0\u4e3aupper_bound\u5c31\u662f\u627e\u5230\u7b2c\u4e00\u4e2a>\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u5224\u65ad\u3002(\u5728\u8fd9\u91cc\u63d0\u4e00\u4e0b\uff0clower_bound\u662f\u627e>=\u56e0\u6b64\u9898\u5e76\u6ca1\u6709\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u6240\u4ee5upper_bound\u548clower_bound\u90fd\u4e00\u6837\uff0c\u4f46\u662f\u5728\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u65f6\u5019\uff0c\u8bf7\u4f7f\u7528upper_bound)\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n    int north;\n    int south;//\u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u91cc\u9762\u5305\u542b\u4e86north\uff08\u5317\u5cb8\u57ce\u5e02\uff09\u548csouth\uff08\u5357\u5cb8\u57ce\u5e02\uff09\n};\nnode a[200005];\nint n,i,d[200005],len,temp;\nbool cmp(node x,node y)\n{\n    return x.north<y.north;//\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u5317\u5cb8\u6392\u5e8f\u6c42\u5357\u5cb8\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5373\u53ef\uff08\u53ef\u4ee5\u53cd\u8fc7\u6765\uff0c\u5bf9\u5357\u5cb8\u6392\u5e8f\u6c42\u5317\u5cb8\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff09\n}\nint main ()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i].north);\n        scanf(\"%d\",&a[i].south);\n    }\n    sort(a+1,a+1+n,cmp);//sort\u7ed3\u6784\u4f53\u6392\u5e8f\u5927\u6cd5\u543c\u554a\uff01\n    d[++len]=a[1].south;//\u56e0\u4e3a\u6700\u77ed\u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u662f\u6bcf\u4e2a\u6570\u672c\u8eab\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u653e\u8fdb\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u4e2d\u3002\n    for(i=2;i<=n;i++)\n    {\n        int dbzjrQwQ=upper_bound(d+1,d+len+1,a[i].south)-d;\n        d[dbzjrQwQ]=a[i].south;\n        if(dbzjrQwQ>len)\n        {\n            len++;\n        }\n    }\n    printf(\"%d\",len);\n    return 0;\n}\n```",
        "postTime": 1534039125,
        "uid": 96340,
        "name": "AC\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "# \u9898\u89e3\n## \u6761\u4ef6\u5206\u6790\n\u9996\u5148\uff0c\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u822a\u9053\u4e0d\u4ea4\u53c9\u7684\u6761\u4ef6\u3002\n\n \u5982\u679c\u6709\u4e00\u6761\u5df2\u7ecf\u88ab\u6279\u51c6\u7684\u822a\u9053\uff0c\u5357\u5317\u5750\u6807\u4e3aN1,S1;\n \n \u5219\u7b2c\u4e8c\u6761N2<N1,S2>S1\uff08\u6216\u6070\u597d\u76f8\u53cd\uff09\u7684\u822a\u9053\u5c06\u4e0d\u80fd\u88ab\u6279\u51c6\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53d1\u751f\u4e86\u4ea4\u53c9\u3002\n\n------------\n\u53c2\u7167\u6b64\u56fe\uff1a\n```\n.N   .N\n \\   |\n  \\  |\n   \\ | \n    \\|\n     |\n     |\\\n     | \\\n     .S .S\n```\n\n\n------------\n\u56e0\u6b64\uff0c\u8981\u6ee1\u8db3\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\uff0c\u9700\u8981\u4fdd\u8bc1\u5357\u5cb8\u5e8f\u5217\u548c\u5317\u5cb8\u5e8f\u5217**\u5355\u8c03\u4e0a\u5347**\uff08\u9898\u76ee\u4e2d\u4ea4\u4ee3\u4e86\u5750\u6807\u4e0d\u4f1a\u91cd\u5408\uff09\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6309\u5317\u5cb8\u5750\u6807\u5927\u5c0f\u5bf9\u57ce\u5e02\u8fdb\u884c\u6392\u5e8f\uff0c\u6765\u4fdd\u8bc1\u5317\u5cb8\u5e8f\u5217\u5355\u8c03\u4e0a\u5347\uff1b\n\n\u7136\u540e\uff0c\u5357\u5cb8\u5e8f\u5217\u7684**\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217**\u957f\u5ea6\u5c31\u662f\u80fd\u591f\u6279\u51c6\u7684\u822a\u7ebf\u6761\u6570\u3002\n\n##  \u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n\u5982\u4f55\u6c42\u51fa\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff1f\n\n\u4e0d\u96be\u770b\u51fa\uff0c\u8fd9\u4e2a\u95ee\u9898\u7528\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u4f1a\u5f88\u7b80\u5355\uff0c\n\n\u8fb9\u754c\u4e3af(1)=1\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3af(i)=max{f(i),f(j)+1|S(i)>s(j)} (i=1,i<=n) (j=i+1,j<=n)\n\n\u7136\u800c \u8fd9\u9898\u7684\u6570\u636e\u89c4\u6a21\u3002\u3002\u3002 n<=200000;\n\nn\u65b9\u7684\u52a8\u6001\u89c4\u5212\u80af\u5b9aTLE\uff0c\u6211\u4eec\u5f97\u60f3\u70b9\u522b\u7684\u529e\u6cd5\u3002\n\n\u5047\u8bbe\u6709\u4e00\u4e2a\u5e8f\u5217 100 389 207 99 300\uff0c\u4ece\u524d\u5f80\u540e\u626b\u63cf\uff1b\n\n1. \u626b\u63cf\u5230100\uff0c\u5c06100\u52a0\u5165\u5e8f\u5217\n2. \u626b\u63cf\u5230389\uff0c\u5c06389\u52a0\u5165\u5e8f\u5217\u5c3e\u90e8\n3. \u626b\u63cf\u5230207\uff0c\u5c06207\u66ff\u6362\u6389389\uff08\u56e0\u4e3a\u5b83\u66f4\u5c0f\uff0c\u53ef\u4ee5\u8ba9\u66f4\u591a\u6570\u63d2\u8fdb\u6765\uff09\n4. \u626b\u63cf\u523099\uff0c\u5c0699\u66ff\u6362\u6389100\uff08\u8fd9\u4e0d\u4f1a\u4f7f\u7ed3\u679c\u53d8\u5dee\uff09\n5. \u626b\u63cf\u5230300\uff0c\u52a0\u5165\u5e8f\u5217\u5c3e\u90e8\uff08\u53ef\u4ee5\u770b\u51fa\uff0c\u5982\u679c\u4e0d\u6267\u884c\u7b2c\u4e09\u6b65\u7684\u66ff\u6362\uff0c\u8fd9\u91cc\u4f1a\u6f0f\u8fc7\u6700\u4f18\u89e3\uff09\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u7b56\u7565\u662f\uff1a\u5982\u679c\u5f53\u524d\u6570\u6bd4\u5e8f\u5217\u5c3e\u66f4\u5927\uff0c\u76f4\u63a5\u5c06\u5176\u63d2\u5165\u5c3e\u90e8\uff0c\u5e8f\u5217\u957f\u5ea6+1\uff1b\n\n\u5426\u5219\u7528\u5b83\u66ff\u6362\u6389\u5e8f\u5217\u4e2d\u6bd4\u5b83\u5927\u4f46\u53c8\u6700\u5c0f\u7684\u4e00\u4e2a\uff08\u4fdd\u6301\u5355\u8c03\u6027\uff09\u3002\n\n\u5bf9\u4e8e\u60c5\u51b5\u4e00\uff0c\u53ef\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\uff1b\n\n\u5bf9\u4e8e\u60c5\u51b5\u4e8c\uff0cSTL\u4e2d\u6709\u73b0\u6210\u7684\u51fd\u6570\u2014\u2014lower_bound\uff08\u8fd9\u9898upper_bound\u4e5f\u53ef\u4ee5\uff09\uff0c\u4ed6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662flogn\uff0c\u6548\u7387\u5f88\u9ad8\uff08\u5176\u5b9e\u5c31\u662f\u4e8c\u5206\u67e5\u627e\uff09\u3002\n\n\n------------\n\n\u8d34\u4ee3\u7801\uff1a\n```cpp\n\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct city{\n//\u65b9\u4fbf\u6392\u5e8f\n    int north;//\u5317\u5cb8\n    int south;//\u5357\u5cb8\n};\nstruct cmp{\n    bool operator () (city& a,city& b)\n    {\n        return a.north<b.north;\n    }\n};\ncity c[200005];\nint lis[200005];//LIS\u5e8f\u5217\nint ans=0;//LIS\u957f\u5ea6\nint n;\nint main()\n{\n    ios::sync_with_stdio(false);//\u6d41\u5f0fI/O\u52a0\u901f\n    cin.tie(0);\n    cin>>n;\n    for(int i=1;i<=n;++i)\n    {\n        cin>>c[i].north>>c[i].south;\n    }\n    sort(c+1,c+n+1,cmp());//\u5c06\u57ce\u5e02\u6309\u5317\u5cb8\u6392\u5e8f\uff0c\u4e4b\u540e\u5c31\u6ca1\u5317\u5cb8\u4ec0\u4e48\u4e8b\u4e86\n    for(int i=1;i<=n;i++)\n    {\n        if(c[i].south>lis[ans])//\u5982\u679c\u80fd\u63d2\u5165\n        {\n            lis[++ans]=c[i].south;//\u63d2\u5165\u81f3\u672b\u5c3e\n        }\n        else\n        {\n        //\u5426\u5219\u4e8c\u5206\u67e5\u627e\u51fa\u5e8f\u5217\u4e2d\u6bd4\u5b83\u5927\u4f46\u53c8\u6700\u5c0f\u7684\u4e00\u4e2a\u5e76\u66ff\u6362\n            *lower_bound(lis+1,lis+ans+1,c[i].south)= (c[i].south);\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n } \n```\n\n\n\n\n------------\n\n\n######    \u2014\u2014\u2014\u2014\u5199\u5c0f\u767d\u4e5f\u80fd\u770b\u61c2\u7684\u9898\u89e3\uff01",
        "postTime": 1554821600,
        "uid": 155907,
        "name": "1379\u53f7\u76d1\u542c\u5458",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "~~\u770b\u5927\u4f6c\u4eec\u90fd\u5728\u8ba4\u771f\u5730\u5199\u9898\u89e3\uff0c\u6211\u4e00\u4e2a**\u849f\u84bb**~~~~~~~~~\n\n\u770b\u5b8c\u5927\u4f6c\u4eec\u7684\u9898\u89e3\uff0c\u4f60\u4eec\u5e94\u8be5\u77e5\u9053\u4e86\u8fd9\u662f\u4e00\u4e2a\u7b80\uff08kun\uff09\u5355\uff08nan\uff09\u7684\u52a8\u5f52\uff08DP\uff09\u9898\u3002\u4f46\u662f\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd9\u4e9b\u849f\u84bb\u5728\u505a\u9898\u7684\u65f6\u5374\u770b\u4e0d\u51fa\u5b83\u7684DP\u72b6\u6001\u65b9\u7a0b\uff1f\n\n### **~~\u201c\u6a21\u62df\u662f\u52a8\u5f52\u4e4b\u7236\u201d~~**\n\n\u9996\u5148\u5f53\u4f60\u4ec0\u4e48\u4e5f\u770b\u4e0d\u51fa\u6765\u7684\u65f6\u5019\u5148\u8981\u53bb\u9010\u4e00\u6a21\u62df\uff0c\u81f3\u5c11\u6a21\u62df\u4e09\u3001\u56db\u4e2a\u6570\u636e\uff0c\u6a21\u62df\u591a\u4e86\uff0c\u7b97\u6cd5\u5c31\u6e10\u6e10\u6d6e\u51fa\u6c34\u9762\uff0c\u540c\u65f6\u65b9\u6cd5\u5728\u8111\u4e2d\u4e5f\u4f1a\u5448\u73b0\u3002\n\n\n\u8d34\u4ee3\u7801\u3001\u5206\u6790\n\n------------\n\n```\n\nlong long adj(adv xx,adv yy)\n{\n\treturn xx.x<yy.x;\n}\n```\n//\n```\n\n\tsort(a+1,a+n+1,adj);//\u5c06\u4e00\u5cb8\u7684\u57ce\u5e02\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e3a\u505a\u5355\u8c03\u5b50\u5e8f\u5217\u5148\u505a\u8db3\u51c6\u5907 \n```\n\n\n------------\n \n```\n\t//\u505a\u5355\u8c03\u5b50\u5e8f\u5217\n\th=1; q[h]=a[1].y;\n\tfor(i=1;i<=n;++i)\n\t{\n\t\tif(a[i].y>q[h])\n\t\t{\n\t\t\th++; q[h]=a[i].y;\n\t\t}\n\t\telse if(a[i].y<q[h])\n\t\t\tq[lower_bound(q+1,q+h+1,a[i].y)-q]=a[i].y;\n\t}\n```\n\n\n------------\n\n# \u8d34\u4e0a\u603b\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct adv{\n\tlong long x,y;\n}a[210000];\nlong long q[210000];\nlong long adj(adv xx,adv yy)\n{\n\treturn xx.x<yy.x;\n}\nlong long n,m,i,j,k,h;\nint main()\n{\n\tcin>>n;\n\tfor(i=1;i<=n;++i) cin>>a[i].x>>a[i].y;\n\tsort(a+1,a+n+1,adj);//\u5c06\u4e00\u5cb8\u7684\u57ce\u5e02\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e3a\u505a\u5355\u8c03\u5b50\u5e8f\u5217\u5148\u505a\u8db3\u51c6\u5907 \n\th=1; q[h]=a[1].y;\n\tfor(i=1;i<=n;++i)\n\t{\n\t\tif(a[i].y>q[h])\n\t\t{\n\t\t\th++; q[h]=a[i].y;\n\t\t}\n\t\telse if(a[i].y<q[h])\n\t\t\tq[lower_bound(q+1,q+h+1,a[i].y)-q]=a[i].y;\n\t}\n\tcout<<h;\n\treturn 0;\n}\n```\n\n\n------------\n\n\n# \u8865\u5145\n\n[lower_bound\u548cupper_bound\u7684\u7528\u6cd5](https://www.cnblogs.com/Tang-tangt/p/9291018.html)\n\n\u53ef\u4ee5\u5b66\u5b66\u5feb\u8bfb\u54e6\uff01 \u9644\u4e0a\u6a21\u677f\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\nLL read()\n{\n\tLL s=0;\n\tbool bj=0;\n\tchar c=getchar();\n\twhile((c<'0'||c>'9')&&c!='-')c=getchar();\n\tif(c=='-')bj=1,c=getchar();\n\twhile(c>='0'&&c<='9')s=s*10+c-'0',c=getchar();\n\tif(bj)return -s;\n\treturn s;\n}\nint main()\n{\n\tint i,j;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1572939955,
        "uid": 36564,
        "name": "\u5f90\u7199\u51ef",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u806a\u660e\u7684\u4f60\uff0c\u544a\u8bc9\u6211\uff0c\u6309\u7167y\u62cd\u5b8c\u5e8f\u4e4b\u540e\u548c\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct city {\n    int x;\n    int y;\n}citys[5001];\nint f[5001]={0};\nbool comp(const city & a,const city & b) {\n    return a.x<b.x;\n}\nint main () {\n    int n;\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) {\n        scanf(\"%d%d\",&citys[i].x,&citys[i].y);\n        f[i]=1;\n    }\n    sort(citys+1,citys+1+n,comp);\n    int maxnum=0;\n    for (int i=1;i<=n;i++) {\n        for (int j=1;j<i;j++) {\n            if (citys[j].y<citys[i].y) {\n                f[i]=max(f[i],f[j]+1);\n            }\n        }\n        maxnum=max(maxnum,f[i]);\n    }\n    printf(\"%d\\n\",maxnum);\n    return 0;\n}\n```",
        "postTime": 1471019102,
        "uid": 5846,
        "name": "yyy2015c01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u9274\u4e8e\u4e3a\u4ec0\u4e48\u89e3\u6cd5\u662f\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bba\u8ff0\u6bd4\u8f83\u900f\u5f7b\u4e86\uff0c\u90a3\u4e48\u8fd9\u91cc\u4ec5\u63d0\u4f9b\u4e00\u4e2a\u57fa\u672c\u7684$LIS$\u95ee\u9898$O(n\\times logn)$\u590d\u6742\u5ea6\u7684\u601d\u8def(\u4e0d\u662f\u505a\u6cd5\uff0c\u800c\u662f\u5982\u4f55\u60f3\u5230\uff09  \n$O(n^2)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u4e0d\u591f\u4f18\u79c0\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u4f18\u5316\u8fd9\u79cd\u7b97\u6cd5\u5462\u3002  \n\u5728\u6211\u4eec\u6bcf\u5904\u7406\u6570\u5217\u4e2d\u7684\u4e00\u4f4d\u65f6\uff0c\u6211\u4eec\u90fd\u8981\u904d\u5386\u6570\u7ec4\u627e\u5230\u503c\u5c0f\u4e8e\u5f53\u524d\u6570\u4e2d\u7684f\u503c\u7684\u6700\u5927\u503c\uff0c\u518d\u7528\u5176\u52a0\u4e00\u4f5c\u4e3a\u73b0\u6570\u5b57\u7684\u503c\u3002  \n\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u53d6\u503c\u96c6\u5408\uff0c\u50a8\u5b58\u53ef\u80fd\u7684\u6700\u4f18\u89e3\uff0c\n\u5c31\u53ef\u4ee5\u4f18\u5316\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002  \n\u5c06\u4e00\u4e2a\u6570\u653e\u5165\u53d6\u503c\u96c6\u5408\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\uff1f\u5982\u679c\u4e24\u4e2a\u6570a\u3001b\n\uff0cf\u503c\u76f8\u540c\uff0c\u4f46$a<b$,\u90a3\u4e48a\u5bf9\u4e8e\u540e\u6765\u7684\u6570\u6765\u8bf4\uff0c\u663e\u7136\u6bd4b\u4f18\u3002\uff08\u8fd0\u7528\u4e86\u4f18\u5148\u961f\u5217\u7684\u601d\u60f3\uff09  \n\u90a3\u4e48\u6211\u4eec\u50a8\u5b58\u4e0b\u5bf9\u6bcf\u4e00\u4e2af\u503c\u6765\u8bf4\u7684\u6700\u5c0f\u539f\u6570\u5b57\u503c\uff0c\u5728\u5904\u7406\u5b8c\u65b0\u6570\u5b57\u540e\u5c06\u65b0\u6570\u5b57\u4e0e\u4e0e\u5176f\u503c\u76f8\u540c\u7684\u6570\u5b57\u6bd4\u8f83\u5927\u5c0f\uff0c\u82e5\u5c0f\u4e8e\u5219\u66f4\u65b0\u3002  \n\u6211\u4eec\u53c8\u89c2\u5bdf\u5230\uff0c\u82e5\u8bbe$f[i]$\u4e3af\u503c\u4e3a$i$\u7684\u6700\u5c0f\u539f\u6570\u5b57\u503c\uff0c\u5219$f$\u6570\u7ec4\u663e\u7136\u662f\u5355\u8c03\u589e\u7684\u3002  \n\u56e0\u6b64\u53ef\u4ee5\u7528\u4e8c\u5206\u67e5\u627e\u5feb\u901f\u627e\u5230\u6700\u5927\u7684\u5c0f\u4e8e\u5f53\u524d\u6570\u7684\u3001\u5728\u53d6\u503c\u96c6\u5408\u4e2d\u7684\u6570\uff0c\u5f53\u524d\u6570\u5373\u4e3a\u5176f\u503c+1\u3002\u7136\u540e\u5c06\u5176\u4e0e\u5927\u4e8e\u5176\u7684\u3001\u5728\u53d6\u503c\u96c6\u5408\u4e2d\u7684\n\u7b2c\u4e00\u4e2a\u6570\u53d6$\\min$\uff0c\u66f4\u65b0\u8be5\u4f4d\u4e0a\u7684\u6570\u3002  \n\u8bbe\u7f6e\u4e00\u4e2a\u6307\u9488p\uff08\u5176\u5b9e\u5c31\u662f\u53d8\u91cf\uff09\u6307\u5411f\u6570\u7ec4\u5c3e\uff0c\u82e5\u5f53\u524d\u6570\n\u5927\u4e8ep\u6307\u5411\u7684\u6570\uff0c\u5219`p++`\uff0c\u96c6\u5408\u6269\u5c55\u3002  \n\u7b54\u6848\u5c31\u662fp\u7684\u503c\u3002\n\u4e0b\u9762\u9644\u4e0aAC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct pt{\n\tint l,r;\n}; \npt a[(int)2e5+5];\nint n,f[(int)2e5+5],p=0;//f[i]=\u957f\u5ea6\u4e3ai\u7684IS\u6700\u5c0f\u6700\u540e\u4e00\u4e2a\u6570 \n\nbool cmp(pt x,pt y) {\n\treturn x.l<y.l;\n}\n\nint main() {\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) scanf(\"%d%d\", &a[i].l, &a[i].r);\n\tsort(a+1,a+1+n,cmp);\t\n\tfor(int i=1; i<=n; i++) {\n\t\tif(a[i].r > f[p]) p++,f[p]=a[i].r;\n\t\telse f[lower_bound(f+1,f+p+1,a[i].r)-f]=a[i].r;\n\t}\n\tcout<<p<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1572708989,
        "uid": 220172,
        "name": "cbio",
        "ccfLevel": 8,
        "title": "P2782 \u9898\u89e3"
    },
    {
        "content": "**\u9898\u76ee\u63cf\u8ff0**\n\n\u6709\u4e00\u6761\u6a2a\u8d2f\u4e1c\u897f\u7684\u5927\u6cb3\uff0c\u6cb3\u6709\u7b14\u76f4\u7684\u5357\u5317\u4e24\u5cb8\uff0c\u5cb8\u4e0a\u5404\u6709\u4f4d\u7f6e\u5404\u4e0d\u76f8\u540c\u7684N\u4e2a\u57ce\u5e02\u3002\u5317\u5cb8\u7684\u6bcf\u4e2a\u57ce\u5e02\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u53cb\u597d\u57ce\u5e02\u5728\u5357\u5cb8\uff0c\u800c\u4e14\u4e0d\u540c\u57ce\u5e02\u7684\u53cb\u597d\u57ce\u5e02\u4e0d\u76f8\u540c\u3002\u6bcf\u5bf9\u53cb\u597d\u57ce\u5e02\u90fd\u5411\u653f\u5e9c\u7533\u8bf7\u5728\u6cb3\u4e0a\u5f00\u8f9f\u4e00\u6761\u76f4\u7ebf\u822a\u9053\u8fde\u63a5\u4e24\u4e2a\u57ce\u5e02\uff0c\u4f46\u662f\u7531\u4e8e\u6cb3\u4e0a\u96fe\u592a\u5927\uff0c\u653f\u5e9c\u51b3\u5b9a\u907f\u514d\u4efb\u610f\u4e24\u6761\u822a\u9053\u4ea4\u53c9\uff0c\u4ee5\u907f\u514d\u4e8b\u6545\u3002\u7f16\u7a0b\u5e2e\u52a9\u653f\u5e9c\u505a\u51fa\u4e00\u4e9b\u6279\u51c6\u548c\u62d2\u7edd\u7533\u8bf7\u7684\u51b3\u5b9a\uff0c\u4f7f\u5f97\u5728\u4fdd\u8bc1\u4efb\u610f\u4e24\u6761\u822a\u9053\u4e0d\u76f8\u4ea4\u7684\u60c5\u51b5\u4e0b\uff0c\u88ab\u6279\u51c6\u7684\u7533\u8bf7\u5c3d\u91cf\u591a\u3002\n\n\n**\u8f93\u5165\u683c\u5f0f\uff1a**\n\n\u7b2c1\u884c\uff0c\u4e00\u4e2a\u6574\u6570N\uff0c\u8868\u793a\u57ce\u5e02\u6570\u3002\n\n\u7b2c2\u884c\u5230\u7b2cn+1\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570\uff0c\u4e2d\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u5206\u522b\u8868\u793a\u5357\u5cb8\u548c\u5317\u5cb8\u7684\u4e00\u5bf9\u53cb\u597d\u57ce\u5e02\u7684\u5750\u6807\u3002\n\n**\u8f93\u51fa\u683c\u5f0f\uff1a**\n\n\u4ec5\u4e00\u884c\uff0c\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u653f\u5e9c\u6240\u80fd\u6279\u51c6\u7684\u6700\u591a\u7533\u8bf7\u6570\u3002\n\n\n**\u8f93\u5165\u6837\u4f8b**\n\n7\n\n22 4\n\n2 6\n\n10 3\n\n15 12\n\n9 8\n\n17 17\n\n4 2\n\n\n**\u8f93\u51fa\u6837\u4f8b**\n\n4\n\n**\u8bf4\u660e**\n\n50% 1<=N<=5000,0<=xi<=10000\n\n100% 1<=N<=2e5,0<=xi<=1e6\n\n**\u601d\u8def\uff1a**\n\u4e4d\u4e00\u770b\u9898\u4ee5\u4e3a\u662f\u51e0\u4f55\u9898\uff0c\u7136\u800cLIS\u5927\u6cd5\u597d\uff01\uff01\uff01\n\n\u53ea\u8981\u5bf9\u5317\u5cb8\u6216\u8005\u5357\u5cb8\u6392\u4e2a\u5e8f\uff0c\u5728\u770b\u53e6\u4e00\u8fb9\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u53e6\u4e00\u8fb9\u7684\u662f\u4e0d\u4e0b\u964d\u7684\u8bf4\u660e\u4ed6\u4eec\u7684\u822a\u7ebf\u6ca1\u6709\u4ea4\u53c9\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int N=5010;\n\nint n,ans;\nint w[N];\n\nstruct node {\n    int sou;\n    int nor;\n} hx[N];\n\nbool cmp(node a,node b) {\n    return a.nor<b.nor;\n}\n\nint main () {\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; i++)\n        scanf(\"%d%d\",&hx[i].nor,&hx[i].sou);\n    sort(hx+1,hx+1+n,cmp);\n    w[++ans]=hx[1].sou;\n    for(int i=2; i<=n; i++) {\n        int ans1=lower_bound(w+1,w+ans+1,hx[i].sou)-w;\n        w[ans1]=hx[i].sou;\n        if(ans1>ans)\n            ans++;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1561689177,
        "uid": 31077,
        "name": "Rachel\u00b7Gardner",
        "ccfLevel": 0,
        "title": "P2782 \u53cb\u597d\u57ce\u5e02"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u4e2a\u9898\u603b\u7ed3\u4e00\u4e0b\u89c4\u5f8b\uff0c\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u5c06\u5317\u5cb8\u7684\u57ce\u5e02\u6392\u597d\u5e8f\uff0c\u6c42\u51fa\u5357\u5cb8\u57ce\u5e02\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5e8f\u5217\uff0c\u5c31\u662f\u6700\u540e\u7684\u7ed3\u679c\u3002\u90a3\u4e48\u8fd9\u4e2a\u9898\uff0c\u5982\u679c\u7528n^2\u7684\u65b9\u6cd5\u8bdd\uff0c\u5e94\u8be5\u80fd\u8fc7\u51e0\u4e2a\u70b9\uff0c\u4f46\u662f\u8fc7\u4e0d\u4e86\u5168\u90e8\u7684\u70b9\uff0c\u4f1atle\u3002\u90a3\u4e48\u5c31\u8003\u8651\u4e00\u4e0bnlogn\u3002nlogn\u7684\u7b97\u6cd5\uff0c\u7a81\u7834\u70b9\u5728\u4e8e\u4e8c\u5206\u67e5\u627e\u3002\u90a3\u4e48\u601d\u8def\u662f\u4ec0\u4e48\u6837\u7684\u5462\uff1f\n\u5047\u5b9a\u6709\u4e00\u4e2a\u5e8f\u5217\uff1a3 2 6 9 4 7 8\n\n\u90a3\u4e48i=1\u65f6\uff0c\u53ea\u67093\uff0c\u52a0\u5165\u5e8f\u5217\uff0cf[1]=3\u3002\n\ni=2\uff0c2\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u52a0\u5165\u540e\u9762\uff0c\u4f46\u662f\u5982\u679c\u75282\u628a3\u7ed9\u66ff\u6362\u6389\uff0c\u5f88\u660e\u663e\u7ed3\u679c\u4e0d\u4f1a\u66f4\u5dee\uff0c\u90a3\u4e48\u75282\u628a3\u66ff\u6362\u6389\u3002\n\ni=3\u548c4\uff0c6\u548c9\u90fd\u53ef\u4ee5\u76f4\u63a5\u52a0\u5165\u540e\u9762\u3002\n\ni=5\uff0c\u628a\u4ed6\u66ff\u6362\u63896\uff0c\u867d\u7136\u6253\u773c\u4e00\u770b\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u53ef\u662f\u8fd9\u6837\u66ff\u6362\u4e0d\u4f1a\u5bfc\u81f4\u66f4\u5dee\u7684\u7ed3\u679c\uff0c\u8fd8\u66f4\u6709\u53ef\u80fd\u53d8\u597d\u3002\n\ni=6\uff0c\u5982\u679c\u75287\u628a9\u7ed9\u66ff\u6362\u6389\uff0c\u662f\u5426\u4f1a\u66f4\u597d\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u601d\u8def\u4e0ei=5\u65f6\u4e00\u6837\u3002\n\ni=7\uff0c8\u53ef\u4ee5\u76f4\u63a5\u52a0\u5165\u540e\u9762\u3002\u8fd9\u65f6\u5019\u6709\u6ca1\u6709\u53d1\u73b0\uff0c\u5982\u679c\u4e0d\u53bb\u66ff\u63629\uff0c\u662f\u4e0d\u662f\u7ed3\u679c\u5c31\u4e0d\u662f\u6700\u4f18\u4e86\u3002\n\n\u6700\u540e\uff0c\u4ee3\u7801\u5949\u4e0a\uff1a\n```\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n,f[200000],ans,len;\nstruct st{\n\tint nor,sou;\n}city[200000];\nbool cmp(st x,st y)//\u7ed3\u6784\u4f53\u6392\u5e8f\u51fd\u6570\n{\n\treturn x.nor<y.nor;\n}\nint main(){\n\tcin >> n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin >>city[i].nor>> city[i].sou;\n\t}\n\tsort(city,city+n+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint a=city[i].sou;\n\t\t//cout<<a<<\":\";\n\t\tlen=upper_bound(f+1,f+len+1,a)-f;\n\t\t//printf(\"%d,%d\\n\",i,len);\n\t\tf[len]=a;\n\t\tans=max(ans,len);\n\t}\n\tcout << ans;//\u53bb\u6389+1\u3002\u3002\u3002\n\treturn 0;\n}\n```\n\u7ba1\u7406\u5927\u5927\u6c42\u8fc7~~",
        "postTime": 1544521127,
        "uid": 151366,
        "name": "Pbri",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u8981\u770b\u51fa\u6765\u8fd9\u9898\u662fLIS\u3002  \n\u4f60\u60f3\uff0c\u5728\u5317\u5cb8\u6392\u597d\u5e8f\u540e\uff0c\u5373\u6709$a(i1).north < a(i2).north, i1 < i2 $\uff0c\u5047\u5982\u5bf9$i1$\u4e0e$i2$\uff0c\u5b83\u4eec\u5357\u5cb8\u5750\u6807$a(i1).south < a(i2).south$\uff0c\u5c31\u5fc5\u6709\u4ea4\u53c9\uff0c\u800c\u6240\u6709\u57ce\u5e02\u7684\u53cb\u597d\u57ce\u5e02\u4e0d\u76f8\u540c\uff0c\u6240\u6709\u7b26\u5408\u9898\u610f\u7684\u5efa\u9020\u65b9\u6848\u662f\u4e00\u4e2a\u4e25\u683c\u4e0a\u5347\u7684\u5b50\u5e8f\u5217\u3002  \n\u90a3\u4e48\u5bf9\u8fd9\u9898\uff0c\u5c31\u662f\u8981\u4ee5$nlogn$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6765\u6c42\u89e3LIS\u3002  \n\u6211\u7528\u7684\u662f**\u6811\u72b6\u6570\u7ec4**\u3002\n\n\u6211\u4eec\u4ee5tree\u7684\u4e0b\u6807\u8868\u793a\u5357\u5cb8\u7684\u6a2a\u5750\u6807\uff0c\u4ee5$tree[i]$\u8868\u793a\u6a2a\u5750\u6807\u4e0d\u8d85\u8fc7i\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u3002  \n**\u6838\u5fc3\u4ee3\u7801\uff1a**\n```cpp\n\tfor(int i = 1 ; i <= n; ++i){\n\t\tint x = ask(a[i].s) + 1;\t//\u4e0d\u8d85\u8fc7\u5357\u5cb8\u5750\u6807\u7684\u6700\u5927LIS\n\t\tans = max (ans, x);\t\t\t//\u8bd5\u56fe\u66f4\u65b0\u7b54\u6848\n\t\tadd(a[i].s + 1, x);\t\t\t//\u7ef4\u62a4\u6811\u72b6\u6570\u7ec4\n\t}\n```\n\n\u5269\u4e0b\u7684\u6dfb\u70b9\u3001\u8be2\u95ee\u6700\u957f\u5c31\u548c\u666e\u901a\u6811\u72b6\u6570\u7ec4\u5dee\u4e0d\u591a\u4e86\uff0c\u53ea\u662f\u628a\u3000**+=**\u3000\u6362\u6210 **max()**\u7f62\u4e86\u3002\n\n\u4f60\u4eec\u60f3\u8981\u7684**\u5b8c\u6574\u4ee3\u7801**\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nconst int MAXN = 2e5 + 5;\nconst int MAXX = 1e6;\nint n, maxx;\nstruct line{\n\tint n,s;\n}l[MAXN];\n\nbool cmp(line a, line b){\n\treturn a.n < b.n;\n}\n\nint tree[MAXX], ans;\t\t\ninline int max(int a,int b){//\u5bf9\u7ecf\u5e38\u4f7f\u7528\u7684\u3001\u77ed\u5c0f\u7cbe\u608d\u7684\u51fd\u6570\u524d\u52a0\u4e0ainline\n\n\treturn a>b ? a : b;\n}\n\ninline int lowbit(int k){\t//\u4f7f\u51fd\u6570\u8c03\u7528\u66f4\u5feb\n\treturn k&-k;\n}\n\ninline void add (int x, int newl){\t\t//\u6765\u964d\u4f4e\u590d\u6742\u5ea6\n\twhile(x <= maxx){\t//\u56e0\u4e3a\u4e0b\u6807\u662f\u6a2a\u5750\u6807\uff0c\u6240\u4ee5\u6700\u5927\u5230maxx\n\t\ttree[x] = max(tree[x], newl);\n\t\tx += lowbit(x);\n\t}\n}\n\ninline int ask (int x){\n\tint ret = 0;\n\twhile(x >= 1){\n\t\tret = max(ret, tree[x]);\n\t\tx -= lowbit(x);\n\t}\n\treturn ret;\n}\n\nint main(){\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i){\n\t\tcin >> l[i].s >> l[i].n;\n\t\tmaxx = max(maxx, l[i].s);\n\t}\n\t\n\tsort(l+1, l+n+1, cmp);\t//\u522b\u5fd8\u4e86\u6392\u5e8f\uff0c\u4e4b\u540e\u5c31\u548c\u5317\u5cb8\u5750\u6807\u6ca1\u5173\u7cfb\u4e86\u3002\n\t\n\tfor(int i = 1 ; i <= n; ++i){\n\t\tint x = ask(l[i].s) + 1;\n\t\tans = max (ans, x);\n\t\tadd(l[i].s + 1, x);\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1548227403,
        "uid": 140377,
        "name": "\u7ef4\u8fed\u751f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "##\u6b64\u9898\u5176\u5b9e\u5c31\u662f\u5728\u6c42\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5148\u5c06\u4e00\u5cb8\u7684\u57ce\u5e02\u6392\u5e8f\uff0c\u5982\u679c\u6bcf\u5bf9\u53cb\u597d\u57ce\u5e02\u7684\u822a\u7ebf\u90fd\u8981\u4e0d\u51b2\u7a81\u7684\u8bdd\uff0c\n\n\u90a3\u4e48\u5b83\u4eec\u5bf9\u5e94\u7684\u53cb\u597d\u57ce\u5e02\u5fc5\u987b\u5448\u4e0a\u5347\u8d8b\u52bf\uff0c\u4e5f\u5c31\u662f\u6392\u5728\u8d8a\u524d\u9762\u7684\u57ce\u5e02\uff0c\u6240\u5bf9\u5e94\u7684\u53cb\u597d\u57ce\u5e02\u4e5f\u8981\u8d8a\u9760\u524d\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,N[5500],S[5500],i,f[5500],maxn,j;\nvoid qs(int ll,int rr)//\u5bf9N\u5cb8\u7684\u57ce\u5e02\u8fdb\u884c\u6392\u5e8f\uff0c\u540c\u65f6\u5b83\u4eec\u6240\u5bf9\u5e94\u7684\u53cb\u597d\u57ce\u5e02\u8ddf\u7740\u79fb\u52a8 \n{\n    int key1,key,l,r;\n    key=N[ll];\n    key1=S[ll];\n    l=ll;\n    r=rr;\n    while(l<r)\n    {\n        while(N[r]>=key&&r>l) r--;\n        if(r>l) N[l]=N[r],S[l]=S[r],l++;\n        while(N[l]<=key&&l<r) l++;\n        if(r>l) N[r]=N[l],S[r]=S[l],r--;\n        N[l]=key,S[l]=key1;\n    }\n    if(ll<l-1) qs(ll,l-1);\n    if(rr>r+1) qs(r+1,rr);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d%d\",&N[i],&S[i]);\n    qs(1,n);\n    f[1]=1;\n    for(i=1;i<=n;i++)//i\u4ee3\u8868\u7b2ci\u4e2a\u57ce\u5e02 \n        for(j=i;j>=1;j--)//j\u7528\u6765\u5faa\u73af\u7b2ci\u4e2a\u57ce\u5e02\u4e4b\u524d\u7684\u57ce\u5e02 \n            if(S[i]>S[j])//\u5982\u679ci\u5bf9\u5e94\u7684\u53cb\u597d\u57ce\u5e02\u5927\u4e8e\u5faa\u73af\u5230\u7684\u57ce\u5e02 \n                f[i]=max(f[j]+1,f[i]);/*\u6c42\u4ee5\u7b2ci\u4e2a\u57ce\u5e02\u4f5c\u4e3a\u6700\u540e\u6279\u51c6\u7684\u57ce\u5e02\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u6279\u51c6\u6570\uff0c\n```\n\u6bd4\u8f83\u7b2cj\u4e2a\u57ce\u5e02\u7684\u6700\u5927\u6279\u51c6\u6570\uff08\u56e0\u4e3aj\u662f\u5012\u6570\u7b2c\u4e8c\u4e2a\u6279\u51c6\uff0c\u6240\u4ee5\u8981\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a+1\uff09\uff0c\u8fd9\u65f6\u7684f[i]\u4ee3\u8868\u7684\u662f\u76ee\u524d\u5df2\u77e5\u7684\u6700\u5927\u6279\u51c6\u6570\\*/\nfor(i=1;i<=n;i++)//\u7531\u4e8e\u4e0d\u6e05\u695a\u4ee5\u54ea\u4e2a\u57ce\u5e02\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u6279\u51c6\u7684\u57ce\u5e02\u624d\u80fd\u662f\u6279\u51c6\u4e2a\u6570\u8fbe\u5230\u6700\u5927\uff0c\u6240\u4ee5\u5faa\u73af\u4e00\u904d\u53d6\u6700\u5927\u503c\n\n        if(maxn<f[i]) maxn=f[i];\n\n    printf(\"%d\",maxn);//\u8f93\u51fa\u6700\u5927\u6279\u51c6\u6570 \n\n    return 0;                         \n\n}",
        "postTime": 1499669029,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u65e9\u671f\u7684NOIP\u6570\u636e\u6709\u70b9\u5f31\uff0c\u5728\u6ca1\u5bf9\u5317\u5cb8\u6392\u5e8f\u7684\u60c5\u51b5\u4e0b\u76f4\u63a5\u641c\u5357\u5cb8\u7684\u6700\u957f\u4e0d\u5b50\u964d\u5e8f\u5217\uff0c\u8fd8\u662f\u8fc7\u4e86\u2026\u2026\n\n```cpp\n#include<iostream>\nusing namespace std;\nint a[10001],b[10001],c[10001],n,s,ans=0;\nvoid qsort(int l,int r)//\u6392\u5e8f\n{\n    int i,j,mid,p;\n    i=l,j=r,mid=a[(l+r)/2];\n    while(i<=j)\n    {\n        while(a[i]<mid){i++;}\n        while(a[j]>mid){j--;}\n        if(i<=j){p=a[i],a[i]=a[j],a[j]=p,p=b[i],b[i]=b[j],b[j]=p,i++,j--;}\n    }\n    if(i<r){qsort(i,r);}\n    if(l<j){qsort(l,j);}\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++){cin>>a[i]>>b[i];}qsort(1,n);\n    for(int i=1;i<=n;i++)\n    {\n        s=0;for(int j=1;j<=i-1;j++){if(s<c[j]&&b[i]>b[j]){s=c[j];}}//\u6c42\u5357\u5cb8\u7684\u6700\u957f\u4e0d\u964d\u5b50\u5e8f\u5217\u2026\u2026\n        c[i]=s+1;if(c[i]>ans){ans=c[i];}\n    }\n    cout<<ans;\n}\n```",
        "postTime": 1471679075,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u4e0d\u662f\u6211\u8bf4\uff0c\u4f60\u4eec\u8fd9\u6837O\uff08n^2\uff09\u7b97\u6cd5\u771f\u7684\u4e0d\u6015\u88ab\u5361\u561b\uff0c\u770b\u6211\u7684O(nlogn)\u3002\n\n\u9898\u76ee\u610f\u601d\u5f88\u660e\u786e\uff0c\u6309\u7167\u5de6\u8fb9\u53c2\u6570\u5feb\u6392\u7136\u540e\u5bf9\u53f3\u8fb9\u53c2\u6570\u6c42\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n\u6211\u8fde\u4e8c\u5206\u90fd\u6ca1\u5199\u3002~~\uff08\u4f60\u7684lower\\_bound\u554a\u5582\uff09~~\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <string>\nusing namespace std;\nconst int maxn=5000+20,inf=1234567890;\nstruct data{int a,b;};\ndata city[maxn];\nint n,f[maxn],ans=0;\nbool comp(const data &x,const data &y){\n    if(x.a==y.a) return x.b<y.b;\n    return x.a<y.a;\n}\ninline void read(int &n){\n    char ch=getchar();\n    n=0;\n    while(ch<'0' || ch>'9') ch=getchar();\n    do{\n        n=n*10+ch-'0';\n        ch=getchar();\n    }while(ch<='9' && ch>='0');\n    return;\n}\nint main(){\n    read(n);\n    for(int i=1;i<=n;i++){\n        read(city[i].a);\n        read(city[i].b);\n    }\n    sort(city+1,city+n+1,comp);\n    for(int i=1;i<=n;i++) f[i]=inf;\n    ans=1;f[1]=city[1].b;\n    for(int i=2;i<=n;i++){\n        if(city[i].b>f[ans]){\n            f[++ans]=city[i].b;\n        }\n        else{\n            int pos=lower_bound(f,f+n+1,city[i].b)-f;\n            f[pos]=city[i].b;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1471179085,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7b97\u662f\u52a8\u6001\u89c4\u5212\u7684\u57fa\u7840\u9898\u4e86\uff0c\u8fd8\u662f\u5f88\u4eb2\u6c11\u7684\u3002\n\n\u505a\u8fd9\u79cd\u9898\u76ee\uff0c\u9996\u5148\u5c31\u662f\u8981\u628a\u95ee\u9898\u62bd\u8c61\u5316\u2014\u2014\u5373\uff0c\u5c06\u4e24\u4e24\u76f8\u5e94\u7684\u53cb\u597d\u57ce\u5e02\u62bd\u8c61\u4e3a\u7ebf\u6bb5\uff0c\u89e3\u51b3\u95ee\u9898\u7684\u65b9\u6cd5\u4e5f\u5c31\u9010\u6e10\u660e\u6717\u4e86\u3002\n\n\u89e3\u9898\u6b65\u9aa4\uff1a\n\n1.\u5317\u8d77\u5357\u7ec8\uff0c\u5c06\u62bd\u8c61\u6210\u7684\u7ebf\u6bb5\u4e00\u4e00\u6309\u5750\u6807\u5927\u5c0f\u6392\u5e8f\uff0c\u4f9d\u5176\u7ec8\u70b9\u786e\u5b9a\u4ea4\u53c9\u6761\u6570\u3002\n\n\u4f8b\uff1a\u5bf9\u4e8e\u7b2c $i$ \u6761\u7ebf\u6bb5\u7684\u4ea4\u53c9\u6570\uff0c\u5fc5\u987b\u4f9d\u6b21\u68c0\u7d22\u7b2c $1$ \u81f3 $i-1$ \u6761\u7ebf\u6bb5\uff1b\u82e5\u5176\u4e2d\u7684\u4efb\u4e00\u7ebf\u6bb5\u7ec8\u70b9\u503c\u5927\u4e8e\u5176\u7ec8\u70b9\u503c\uff0c\u5219\u589e\u52a0\u4ea4\u53c9\u6570\u3002\n\n2.\u6392\u5e8f\uff0c\u5220\u9664\u7ebf\u65f6\u9700\u5c06\u6240\u6709\u4e0e\u4e4b\u76f8\u4ea4\u7684\u7ebf\u7684\u4ea4\u53c9\u6570$-1$\uff0c\u6700\u7ec8\u4ea4\u53c9\u6570\u5168\u90e8\u6e05\u96f6\u65f6\uff0c\u5373\u53ef\u53d1\u73b0\u4e0d\u5b58\u5728\u4efb\u4f55\u4ea4\u53c9\u7684\u7ebf\u6bb5\u3002\n\n\n\u82e5\u6309\u6837\u4f8b\uff0c\u53ef\u68b3\u7406\u51fa\u5982\u4e0b\u8868\u683c\uff1a\n| \u7f16\u53f7 | \u5357\u5cb8 | \u5317\u5cb8 | \u4ea4\u53c9\u6570 |\n| :----------- | :----------- | :----------- | :----------- |\n| 1 | 1 | 3 | 2 |\n| 2 | 2 | 4 | 2 |\n| 3 | 3 | 1 | 2 |\n| 4 | 4 | 5 | 1 |\n| 5 | 5 | 2 | 3 |\n\n\u63a5\u7740\u5206\u6790\uff0c\u4fbf\u80fd\u8f7b\u677e\u5c06\u672c\u9898\u8f6c\u5316\u4e3a\u5178\u578b\u7684\u52a8\u5f52\u9898\u4e86\uff1a\n\n\u6c42\u6240\u6709\u7ebf\u4e2d\u4e0d\u76f8\u4ea4\u6761\u6570\u7684\u6700\u5927\u503c\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u4fbf\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u7ec8\u70b9\u5750\u6807\u503c\u5e8f\u5217\u4e2d\u6c42\u4e00\u4e2a\u6700\u957f\u4e0d\u4e0b\u964d\u5e8f\u5217\u3002\n\n\u53c8\u53ef\u5f97\u5176\u89c4\u5212\u65b9\u7a0b\uff1a\n\n$quant_m=max(quant_n+1)$\n\n\u9650\u5236\u6761\u4ef6: $n<m$\n\n\u4e4b\u540e\u4fbf\u4e0d\u96be\u5199\u51fa\u8fc7\u7a0b\u5566\uff01\n\ncode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint hsy,crz,sjx,ceik,lip,first,alf,last,pot[10000],rgl[10000],dkp[10000];\n\nvoid turn(int a,int b)\t\t \n{\n\tlip=a;\n\ta=b;\n\tb=lip;\n}\n\nint check(int lbn,int zzk)\n{\n    first=lbn;last=zzk;\n    \n    alf=(lbn+zzk)/2;\n\tceik=pot[alf];\n    \n\tdo\n\t{\n\t\twhile(ceik-pot[first]>0) \n\t\t{\n\t\t\tfirst++;\t\n\t\t}\n\t\t\n\t\twhile(ceik-pot[last]<0)\n\t\t{\n\t\t\tlast--;\n\t\t}\n\t\t\n\t\tif(last-first>=0)\n\t\t{\n\t\t\tturn(pot[first],pot[last]);\n\t\t\t\n\t\t\tturn(rgl[first],rgl[last]);\n\t\t\tfirst++;\n\t\t\t\n\t\t\tlast--;\n\t\t}\n    }\n    \n\twhile(first<=last);\n\t{\n\t\tif(zzk-first>0) \n\t\t{\n\t\t\tcheck(first,zzk);\n\t\t}\n\t\t\n\t\tif(lbn<last) \n\t\t{\n\t\t\tcheck(lbn,last);\n\t\t}\n\t}\n}\n\n\nint main()\n{\n\tcin>>hsy;\n\t\n\tfor(int k=1;k<=hsy;k++) \n\t{\n\t\tcin>>pot[k];\n\t\t\n\t\tdkp[k]=1;\n\t\tcin>>rgl[k];\n\t}\n\t\n\tcheck(1,hsy);\n\t\n\tfor(int g=hsy-1;g>=1;g--)\n\t{\n\t\tsjx=0;\n\t\t \n\t\tfor(int h=g+1;h<=hsy;h++) \n\t\t{\n\t\t\tif(dkp[h]-sjx>0) \n\t\t\t{\n\t\t\t\tif(rgl[g]<rgl[h])\n\t\t\t\t{\n\t\t\t\t\tsjx=dkp[h];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(sjx>0) \n\t\t{\n\t\t\tdkp[g]=sjx+1;\n\t\t}\n\t}\n\t\n\tfor(int p=1;p<=hsy;p++)\n\t{\n\t\tif(crz<dkp[p]) \n\t\t{\n\t\t\tcrz=dkp[p];\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t}\n\t\t\n\tcout<<crz;\t\n}\n```\n\n\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4e8e\u52a8\u6001\u89c4\u5212\u7684\u521d\u5b66\u8005\u5e94\u8be5\u4f1a\u5f88\u6709\u5e2e\u52a9\uff0c\u671b\u591a\u652f\u6301\uff01",
        "postTime": 1585321285,
        "uid": 241974,
        "name": "zoezoykit",
        "ccfLevel": 0,
        "title": "P2782 \u9898\u89e3 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "#### \u8fd9\u9053\u9898\u4e5f\u7b97\u662f\u4e2a\u6a21\u677f\u9898\u5427\uff08nlognLIS\uff09\n\u5bf9\u4e8e\u521d\u5b66DP\u7684\u8fd8\u662f\u6bd4\u8f83\u91cd\u8981\uff0c\u5b83\u8be0\u91ca\u4e86LIS\u7a76\u7adf\u600e\u672b\u7528\u3002\n\n\n------------\n\u5148\u8bf4\u4e0b\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u5427\n\u5148\u4ee5\u4e00\u5cb8\u4e3a\u53c2\u7167\u6392\u4e0b\u5e8f\uff0c\u7136\u540e\u518d\u4ee5\u53e6\u4e00\u5cb8\u4e3a\u53c2\u7167\u505a\u4e0bLIS\u5c31\u597d\u4e86\u3002\n\u5176\u6b63\u786e\u6027\u6613\u8bc1\uff0c\n\u70b9\u5230\u4e3a\u6b62\u3002\n\n\n------------\n\u89c1\u4e00\u5927\u4f6c\u9898\u89e3\u5f15\u7528\u300a\u897f\u6c5f\u6708\u300b\uff0c\u6211\u4e5f\u5206\u4eab\u4e0b\u3002\n\n\u5373\u5f97\u6613\u89c1\u5e73\u51e1\uff0c\u4eff\u7167\u4e0a\u4f8b\u663e\u7136\u3002\n\n\u7559\u4f5c\u4e60\u9898\u7b54\u6848\u7565\uff0c\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\u3002\n\n\u53cd\u4e4b\u4ea6\u7136\u540c\u7406\uff0c\u63a8\u8bba\u81ea\u7136\u6210\u7acb\u3002\n\n\u7565\u53bb\u8fc7\u7a0bQED\uff0c\u7531\u4e0a\u53ef\u77e5\u8bc1\u6bd5\u3002\n\n\n------------\n \u4f5c\u4e3a\u4e00\u7bc7\u4f18\u79c0\u7684\u9898\u89e3\uff0c\u7edd\u4e0d\u80fd\u8fd9\u4e48\u8ff7\u8ff7\u7cca\u7cca\u7684\u6c34\u4e86\n \u4e0b\u9762\u8fd8\u662f\u653e\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u5427\n ```cpp\n#include<iostream>\n#include<algorithm>//sort\u548clower_bound\n#define __Q__ 0\n#define __X__ 1\n#define __A__ 200200\n#define mian main//OIer\u65e5\u5e38\u7684mian\u51fd\u6570\n#define int long long //\u5206\u4eab\u4e00\u4e0b\u5feb\u901f\u6539\u7c7b\u578b\u7684\u65b9\u6cd5\nusing namespace std;\nstruct __o__{\n\tint __,___;\n}______[__A__];\nint __;\nbool ___________(__o__ _O_,__o__ _o_){\n\treturn _O_.__<_o_.__;\n}\nsigned mian(){\n\tios::sync_with_stdio(false);//\u7384\u5b66\u52a0\u901f\uff0c\u4e0e\u636e\u8bf4\u4e0e\u7f16\u8bd1\u5668\u7684emmm\u6210\u6b63\u7248\n\tcin>>__;\n\tfor(int _=__X__;_<=__;_++){\n\t\tcin>>______[_].__>>______[_].___; \n\t}\n\tsort(______+__X__,______+__+__X__,___________);\n\tint ____[__A__],_____=__Q__;\n\tfor(int _=__X__;_<=__;_++){\n\t\tif(!_____||____[_____]<______[_].___)____[++_____]=______[_].___;\n\t\telse *lower_bound(____,____+_____,______[_].___)=______[_].___; \n\t}\n\tcout<<_____;\n\treturn __Q__;\n}\n```\n\n\n------------\n# **\u6ed1\u7a3d\u4fdd\u547d\uff0c\u6e9c\u4e86**",
        "postTime": 1570270736,
        "uid": 158869,
        "name": "\u76e7\u92c5",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u628a\u5de6\u5cb8\u7684\u57ce\u5e02\u7f16\u53f7\u4e3a$ l_1,l_2...l_n $  \n\u628a\u53f3\u5cb8\u7684\u57ce\u5e02\u7f16\u53f7\u4e3a$ r_1,r_2...r_n $  \n\u5982\u679c\u4ece\u57ce\u5e02$ l_i,l_j(l_i<l_j)$\u5f00\u8f9f\u7684\u822a\u9053\u4e0d\u4ea4\u53c9 \u90a3\u4e48\u5fc5\u5b9a\u6709$ r_i<r_j $\u800c\u4e14$ l $\u548c$ r $\u662f\u4e00\u4e00\u5bf9\u5e94\u7684  \n\u6240\u4ee5\u53ef\u4ee5\u4ee5l\u4ece\u5c0f\u5230\u5927\u7ed3\u6784\u4f53\u6392\u5e8f \u6c42r\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217  \n\n\u8fd9\u65f6\u5019\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4 $ 2*10^5 $ \u90a3\u4e48$ n^2 $\u7b97\u6cd5\u662f\u4e0d\u884c\u7684  \n~~\u5f53\u7136\u5927\u5bb6\u90fd\u77e5\u9053\u6709\u5f88\u591an log n\u7b97\u6cd5~~  \n\u6211\u8fd9\u91cc\u4f7f\u7528\u4e86\u6811\u72b6\u6570\u7ec4  \n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4:  \n\u4e00\u822c\u6765\u8bf4\u6811\u72b6\u6570\u7ec4\u662f\u4e0d\u80fd\u6c42\u533a\u95f4\u6700\u503c\u7684 \u4f46\u662f\u5728LIS\u91cc\u4e0d\u4e00\u6837  \n\u6811\u72b6\u6570\u7ec4\u4e2d\u5b58\u7684\u662f\u4ee5\u8be5\u6570(\u4e0d\u662f\u7b2c\u51e0\u4e2a\u6570 \u662f\u6570\u672c\u8eab)\u7ed3\u675f\u7684LIS  \n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$r_i$\u6211\u4eec\u8981\u6c42\u7684\u662f\u76ee\u524d$1$\u5230$r_i-1$\u4e2d\u5230\u6bcf\u4e00\u4e2a\u6570\u7684LIS  \n\u6240\u6c42\u7684\u533a\u95f4\u4e00\u5b9a\u662f**\u4ece1\u5f00\u59cb**\u7684 \u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6c42\u6700\u5927\u503c\n## code:\n\n```cpp\n#include <map>\n#include <list>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define LL long long\nusing namespace std;\n\nLL n,tmp,ans = 0,t[4000020]; // \u6811\u72b6\u6570\u7ec4\u5f00\u56db\u500d\u6700\u4fdd\u9669\nLL MAX_R = 0; // \u5b58\u6700\u5927\u7684r\n\nstruct node{\n\tLL l,r;\n\tbool operator <(const node &nd)const{\n\t\treturn l < nd.l;\n\t} // \u91cd\u8f7d\u8fd0\u7b97\u7b26 \u4ee5l\u4ece\u5c0f\u5230\u5927\u5bf9\u7ed3\u6784\u4f53\u6392\u5e8f\n}a[200005];\n\ninline void add(LL x,LL val){\n\tfor(register int i = x;i <= MAX_R;i += (i & -i)){\n\t\tt[i] = max(t[i],val);\n\t}\n}\ninline LL query(LL x){\n\tLL ans = 0;\n\tfor(register int i = x;i;i -= (i & -i)){\n\t\tans = max(ans,t[i]);\n\t}\n\treturn ans;\n} // \u8fd9\u91cc\u662f\u6811\u72b6\u6570\u7ec4\u7684\u4ee3\u7801 \u53ea\u662f\u628a+\u6539\u6210\u4e86max\n\nint main(){\n\tios::sync_with_stdio(false);\n\tcin >> n;\n\tfor(register int i = 1;i <= n;i ++){\n\t\tcin >> a[i].l >> a[i].r;\n\t\tMAX_R = max(MAX_R,a[i].r);\n\t}\n\tsort(a + 1,a + 1 + n);\n\tfor(register int i = 1;i <= n;i ++){\n\t\ttmp = query(a[i].r) + 1; // \u6c42\u6700\u503c \u5728\u52a0\u4e0a\u76ee\u524d\u5f85\u5904\u7406\u6570\u5373+1\n\t\tans = max(ans,tmp); // \u6bcf\u6b21\u7b54\u6848\u90fd\u8981\u66f4\u65b0\n\t\tadd(a[i].r + 1,tmp); // \u66f4\u65b0\u7684\u662f\u8be5\u6570+1\u7684LIS\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1548157937,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\u6570\u636e\u88ab\u52a0\u5f3a\u4e86~\u6240\u4ee5n\u65b9\u7b97\u6cd5\u4e0d\u7ba1\u7528\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u5230\u4e8c\u5206\u4f18\u5316\u4e86\uff08nlogn\u7684\u6548\u7387\u5b8c\u5168OK\uff09\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u4e0a\u5347\u7684\u961f\u5217\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u6bd4\u6700\u5927\u503c\u66f4\u5927\u7684\u503c\uff0c\u5c31\u5c06\u5176\u52a0\u5165\u6570\u7ec4\u3002\n\n\u5426\u5219\u6211\u4eec\u5c31\u8003\u8651\u4e8c\u5206\uff08lower\\_bound\uff09\u51fa\u6bd4\u961f\u5217\u4e2d\u6bd4\u8fd9\u4e2a\u503c\u7a0d\u5927\u7684\u503c\u66ff\u6362\u5b83\uff0c\u56e0\u4e3a\u8fd9\u6837\u505a\u2014\u2014\u7ed3\u679c\u4e0d\u4f1a\u53d8\u5f97\u66f4\u5dee\uff08\u53ea\u53ef\u610f\u4f1aqwq\uff09\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 200005\nusing namespace std;\nstruct data{\n    int x,y;\n}a[N];\nint n,dp[N],s[N],top;\nbool cmp(data a,data b)\n{\n    return a.x<b.x;//\u601d\u8def\u76f8\u540c\uff0c\u5c06\u5357\u5cb8\u57ce\u5e02\u6392\u5e8f\uff0c\u5bf9\u5317\u5cb8\u57ce\u5e02\u8dd1\u4e00\u904d\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%d\",&a[i].x,&a[i].y);\n    sort(a+1,a+n+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i].y>=s[top]) s[++top]=a[i].y;//\u6ce8\u610f\u8fd9\u4e2a\u5927\u4e8e\u7b49\u4e8e\uff0c\u867d\u7136\u9898\u76ee\u63cf\u8ff0\u4e2d\u63d0\u53ca\u201c\u5317\u5cb8\u57ce\u5e02\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5357\u5cb8\u57ce\u5e02\u4e0e\u5176\u5bf9\u5e94\u201d\uff0c\n                                                        //\u4f46\u672c\u4eba\u4e0d\u77e5\u9053\u4e3a\u4f55\uff0c\u6570\u636e\u4e2d\u4e00\u4e2a\u70b9\u628a\u6211\u5361\u4e86\u4e09\u6b21\uff0c\u545c\u545c\u545c\n            else s[lower_bound(s,s+top,a[i].y)-s]=a[i].y;//\u66ff\u6362\u64cd\u4f5c\uff0c\u6ce8\u610f\u4f7f\u7528lower_bound\u51fd\u6570\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5730\u5740\uff01\n    }\n    printf(\"%d\",top);//\u6700\u540e\u961f\u5217\u5185\u7684\u5143\u7d20\u6570\u91cf\u5c31\u662f\u7b54\u6848\n    return 0;\n}\n```",
        "postTime": 1509182235,
        "uid": 20094,
        "name": "\u68a6\u56de\u8fd8",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u672c\u901a\u4e0a\u7684\u4e00\u4e2a\u4f8b\u9898\uff0c\u5bf9\u4e8e\u521a\u5b66\u52a8\u6001\u89c4\u5212\u7684me\u6765\u8bf4\u5f53\u7136\u4e0d\u662f\u4e00\u9053\u6c34\u9898\uff0c\u5176\u5b9e\u8fd8\u662f\u6709\u4e00\u5b9a\u96be\u5ea6\u7684\n\n\u9996\u5148\u6211\u5728\u672c\u5b50\u4e0a\u753b\u4e86\u56fe\uff0c\u5728\u6570\u8f74\u4e0a\u63cf\u554a\u63cf\uff0c\u611f\u89c9\u8fd9\u4e0d\u548c\u6d3b\u52a8\u9009\u62e9\uff08\u4e00\u9053\u8d2a\u5fc3\u4f8b\u9898\uff09\u4e00\u6837\u4e48\uff0c\u4e8e\u662f\u5c31\u5bf9\u5b83\u7684\u4e00\u5cb8\u6392\u4e86\u5e8f\uff0c\u6309\u7167\u8d2a\u5fc3\u7b56\u7565\u6765\u5199\uff08\u5c06\u6bcf\u4e00\u5bf9\u57ce\u5e02\u770b\u4f5c\u6570\u8f74\u4e0a\u7684\u4e00\u4e2a\u533a\u95f4\uff0c\u7edf\u8ba1\u6ca1\u6709\u4ea4\u96c6\u7684\u533a\u95f4\u6700\u5927\u4e2a\u6570\uff09\u7136\u540e\u7ecf\u8001\u5e08\u63d0\u9192\u2014\u2014\u8fd9\u9053\u9898\u4e0d\u80fd\u7528\u8d2a\u5fc3\u505a\uff01\uff01\u5982\u679c\u4e24\u5ea7\u57ce\u5e02\u4e00\u4e2a\u4ece1\u523010\uff0c\u4e00\u4e2a\u4ece2\u523011\uff0c\u8d2a\u5fc3\u6765\u8bb2\u662f\u53ea\u80fd\u901a\u8fc7\u4e00\u5bf9\u7684\uff0c\u4f46\u662f\u6309\u9898\u610f\u53ef\u4ee5\u90fd\u901a\u8fc7\n\n\u6240\u4ee5\uff0c\uff0c\u5728\u4ed4\u7ec6\u7422\u78e8\u4e86\u4e0b\uff0c\u5982\u679c\u5c06\u4e00\u8fb9\u6392\u4e86\u5e8f\uff0c\u80fd\u901a\u8fc7\u7684\u57ce\u5e02\u5bf9\u6570\u4e00\u5b9a\u662f\u53e6\u4e00\u8fb9\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff08\u81ea\u5df1\u6a21\u62df\u4e0b\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u4efb\u610f\u4e00\u5bf9\u53cb\u597d\u57ce\u5e02\u7684\u8fde\u7ebf\u4e0e\u5176\u4ed6\u4e00\u5bf9\u4e0d\u4f1a\u76f8\u4ea4\uff09\n\n\u4e8e\u662f\uff0c\u96be\u70b9\u53c8\u843d\u5728\u4e86\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e0a\n\n\u7528\u7ed3\u6784\u4f53a[i].num\u5b58\u50a8\u4ee5a[i].s\u4e3a\u6700\u540e\u4e00\u70b9\u7684\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u4e8e\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff08\u5c06\u679a\u4e3e\u5230\u7684\u70b9\u8bbe\u4e3aA\uff09\uff0c\u770b\u8be5\u70b9\u662f\u5426\u80fd\u4e0e\u524d\u9762\u7684\u70b9\u6784\u6210\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u4e8e\u662f\u53c8\u6328\u4e2a\u679a\u4e3e\u5728\u8be5\u70b9\u4e4b\u524d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff08\u5c06\u679a\u4e3e\u5230\u7684\u70b9\u8bbe\u4e3aB\uff09\uff0c\u6700\u7ec8\u6211\u4eec\u8981\u7684\u662f\u6ee1\u8db31.B\u7684s\u5c0f\u4e8eA\u7684s,2.B\u7684num(\u5e8f\u5217\u957f\u5ea6)\u662f\u6700\u5927\u7684\uff0c\u4e8e\u662f\u5c06a[B].num+1\u5b58\u5165a[i].num\u4e2d\uff0c\u4f7f\u5f97a[i].num\u80fd\u4e0e\u4e4b\u524d\u7684\u6700\u957f\u5e8f\u5217\u5408\u5e76\u7ec4\u6210\u65b0\u7684\u6700\u957f\u5e8f\u5217\n\n\u6700\u540e\uff0c\u7ebf\u6027\u5730\u5c06a[i]\u679a\u4e3e\u4e00\u904d\uff0c\u627e\u5230\u6700\u5927\u503c\uff08\u5373\u662f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff09\u8f93\u51fa\u5373\u53ef\uff0c\u6b64\u9898\u5f97\u89e3\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nstruct hh{\n    int s;\n    int n;\n    int num=1;\n}a[5001];\nint read()\n{\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    int h=0;\n    while(ch<='9'&&ch>='0') \n    {\n        h=h*10+ch-48;\n        ch=getchar();\n    }\n    return h;\n}\nint n;\nint my(const hh&a,const hh&b)\n{\n    return a.n<b.n;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)\n    {\n        a[i].s=read();\n        a[i].n=read();\n    }\n    sort(a+1,a+n+1,my);//\u4ee5\u5357\u5cb8\u7684\u987a\u5e8f\u6392\u5e8f \n    for(int i=2;i<=n;i++)//\u6570\u5317\u5cb8\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5e8f\u5217 \n    {\n        int max1=0;\n        for(int w=1;w<i;w++)\n        {\n            if(a[i].s>a[w].s&&a[w].num>max1)\n            {\n                max1=a[w].num;\n            } \n        }\n        a[i].num=max1+1;\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++) ans=ans>a[i].num?ans:a[i].num;\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1499176720,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "/\\*\u672c\u9898\u662f\u7b80\u5355\u7684DP\u9898\n\n\u4ec0\u4e48\u662f\u4e0d\u80fd\u4ea4\u53c9\uff1f\u5f53i>j\u4e14i\u53cb>j\u53cb\u65f6\u4e0d\u4ea4\u53c9(\u53ef\u4ee5\u81ea\u5df1\u5212\u4e00\u4e0b)\n\n\u4e3a\u4e86\u66f4\u52a0\u7b80\u5355\u5316\uff0c\u6211\u4eec\u5c06\u4e00\u5cb8\u7684\u57ce\u5e02\u6309\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u53ea\u8981\u6c42\u53e6\u4e00\u5cb8\u7684\u65e0\u5e8f\u6570\u5217\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u6570\u5217\u4e86\n\n\u9996\u5148\u6211\u4eec\u7528\u7ed3\u6784\u4f53\u548csort\u51fd\u6570\u6392\u5e8f\uff0c\u800c\u540e\u518d\u7528DP\u6a21\u677f\u5373\u53ef\\*/\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstdlib>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nstruct node\n{\n    int nor;\n    int sou;\n}city[50001];\nint comp(node x,node y)\n{\n    if(x.sou<y.sou) return 1;\n    else return 0;\n}\nint main()\n{\n    int ans=0;//\u7b54\u6848 \n    int i,j,Max=-1,map;//map:\u8bb0\u5f55\u6700\u5927\u9012\u589e\u6570\u5217\u7684\u521d\u59cb\u4f4d\u7f6e Max:\u627e\u5230\u6700\u5927\u9012\u589e\u6570\u5217\n    int n,a[50001],b[50001];\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    cin>>city[i].sou>>city[i].nor;\n    sort(city+1,city+n+1,comp);//\u7ecf\u8fc7\u6392\u5e8f\u540e\u53ef\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u6700\u5927\u9012\u589e\u6570\u5217\u7684\u95ee\u9898 \n    fill(a+1,a+n+1,1);//\u5f00\u59cb\u65f6\u521d\u59cb\u5316\u6240\u6709\u7684\u6570\u5217\u957f\u5ea6\u4e3a1\uff0c\u5373\u53ea\u5305\u542b\u5176\u672c\u8eab \n    memset(b,0,n);\n    for(i=n-1;i>=1;i--)//\u9636\u6bb5\u679a\u4e3e\n    for(j=i+1;j<=n;j++)//\u72b6\u6001\u679a\u4e3e \n    {\n        if(city[j].nor>city[i].nor&&(a[j]+1)>a[i]) \n        {a[i]=a[j]+1;b[i]=j;}//\u51b3\u7b56_a:i~n\u6700\u5927\u9012\u589e\u6570\u5217  b:\u8bb0\u5f55\u4ea7\u751f\u7684\u8def\u5f84 \u2014\u2014a[b[i]]->a[i] \n    }\n    for(i=1;i<=n;i++)\n    if(a[i]>Max){Max=a[i];map=i;}//\u627e\u5230\u6700\u5927\u9012\u589e\u6570\u5217\n    while(map!=0)//\u5faa\u73af\u67e5\u627e\u6570\u5217\u957f\u5ea6\n    {\n        ans++;\n        map=b[map];\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1499140661,
        "uid": 47684,
        "name": "Harker233333333",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u55ef\uff0c\u6a21\u62df\u4e86\u4e00\u4e0b\u53d1\u73b0\u662f\u4e2a\u88f8\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u5357\u5cb8\u4e8e\u5317\u9762\u8fde\u63a5\u540e\uff0c\u5317\u5cb8\u53ea\u6709\u5728\u5176\u4e4b\u540e\u7684\u624d\u884c\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define REP(i,a,b) for(register int i  = (a), i##_end_ = (b); i <= i##_end_ ; ++i)\ninline int read()\n{\n    char c = getchar();register int fg = 1,sum = 0;\n    while(c < '0' || c > '9')\n    {\n        if(c == '-')fg  = -1;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9')\n    {\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return fg * sum;\n}\nint n;\nint a[5010],f[5010];\nint main()\n{\n    n = read();\n    REP(i,1,n)\n    {\n        int x,y;\n        x = read(), y = read();\n        a[i] = y;\n    }\n    int len = 0;\n    REP(i,1,n)\n    {\n        if(a[i] > f[len])f[++len] = a[i];\n        if(a[i] < f[1])f[1] = a[i];\n        else\n        {\n            int d = upper_bound(f+1,f+1+len,a[i])-f;\n            f[d] = a[i];\n        }\n    }\n    printf(\"%d\\n\",len);\n}\n```",
        "postTime": 1488075961,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "###\u8fd9\u9053\u9898\u7b97\u662f\u6bd4\u8f83\u88f8\u7684\u4e0d\u4e0b\u964d\u5e8f\u5217\uff0c\u5bf9\u4e24\u5cb8\u5750\u6807\u8fdb\u884c\u6392\u5e8f\u7136\u540edp\u4e00\u904d\u5c31\u884c\u4e86\u3002\uff08\u611f\u89c9\u6d4b\u8bd5\u6570\u636e\u5f88\u5f31\uff0c\u5f53\u5e74\u6d4b\u8bc4\u673a\u4e0d\u4f1a\u53ea\u6709\u4e09\u4e2a\u70b9\u5427\uff09\n\n```cpp\n**var i,j,k,l,n,max1,ans:longint;\n    a,b,f:array[0..10000] of longint;\nfunction max(x,y:longint):longint;\nbegin if x>y then exit(x);exit(y);end;\nprocedure sort(l,r:longint);\nvar i,j,m,t:longint;\nbegin\n  i:=l;j:=r;m:=a[(i+j)div 2];\n  repeat\n  while a[i]<m do inc(i);\n  while a[j]>m do dec(j);\n    if i<=j then\n      begin\n         t:=a[i];a[i]:=a[j];a[j]:=t;\n         t:=b[i];b[i]:=b[j];b[j]:=t;\n         inc(i);dec(J);\n      end;\n  until i>j;\n  if l<j then sort(l,j);\n  if i<r then sort(i,r);\nend;\nbegin\n  //assign(input,'sihp.in');reset(input);\n  //assign(output,'ship.out');rewrite(output);\n  readln(n); f[1]:=1;ans:=1;\n  for i:=1 to n do\n    readln(a[i],b[i]);\n  sort(1,n);\n  for i:=2 to n do\n    begin max1:=0; for j:=i-1 downto 1 do\n      if b[j]<b[i] then max1:=max(max1,f[j]);\n      f[i]:=max1+1;\n      ans:=max(f[i],ans);\n    end;        write(ans);\n  //close(input);close(output);\nend.\n**\n```",
        "postTime": 1477738008,
        "uid": 19485,
        "name": "scarborough_fair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u5148\u6309\u7167\u5de6\u8fb9\u7684\u57ce\u5e02\u6392\u5e8f\uff0c\u5373\u6d88\u9664\u52a8\u89c4\u7684\u540e\u6548\u6027\u3002\u7136\u540e\u5c31\u662f\u6c42\u53f3\u8fb9\u7684\u57ce\u5e02\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u4e86\u3002\n\n```pascal\nuses math;\nvar\n  i,j,n,ans,maxx:longint;\n    a,b,f:array[0..5001]of longint;\nprocedure qsort(l,r:longint);\nvar\n  i,j,temp,mid:longint;\nbegin\n  i:=l; j:=r;\n  mid:=a[(l+r) div 2];\n  repeat\n    while a[i]<mid do inc(i);\n    while a[j]>mid do dec(j);\n    if i<=j then\n    begin\n      temp:=a[i];a[i]:=a[j];a[j]:=temp;\n      temp:=b[i];b[i]:=b[j];b[j]:=temp;\n      inc(i);dec(j);\n    end;\n  until i>j;\n  if l<j then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\nbegin\n  readln(n);\n    for i:=1 to n do readln(a[i],b[i]);\n    qsort(1,n);\n    f[1]:=1;\n    ans:=1;\n    for i:=2 to n do begin\n      maxx:=0;\n      for j:=i-1 downto 1 do\n          if b[j]<b[i] then maxx:=max(maxx,f[j]);\n        f[i]:=maxx+1;\n      ans:=max(ans,f[i]);\n    end;\n    write(ans);\nend.\n```",
        "postTime": 1470063846,
        "uid": 3116,
        "name": "\u98de\u7fd4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u9ec4\u9898\uff0c~~\u7136\u540e\u6211\u5c31\u5199\u4e86\u4e00\u4e2aTreap~~\n\n\u663e\u7136\u6309\u5de6\u8fb9\u6392\u5b8c\u5e8f\u540e\u5bf9\u53f3\u8fb9\u505a\u4e00\u4e2a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u663e\u7136\u6709\u57fa\u7840dp\u65b9\u7a0b:\n\n$$f[i]=\\max _{j<i,b[j]<b[i]} \\left \\{f[j] \\right \\}+1$$\n\n\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\n\n\u7136\u540e\u4ece\u5934\u5f00\u59cb\u626b\u5c31\u6ee1\u8db3\u4e86\u7b2c\u4e00\u7ef4$j<i$\u7684\u9650\u5236\n\n\u7b2c\u4e8c\u7ef4\u76f4\u63a5\u628a$b[j]$\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u67e5$f[j]$\u6700\u5927\u503c\n\n\u5c31\u662f\u5efa\u7acb\u4e00\u4e2a\u6309$b[j]$\u6392\u5e8f\uff0c\u6743\u503c\u4e3a$f[j]$\u7684\u5e73\u8861\u6811\uff0c\u7ef4\u62a4\u5b50\u6811\u6700\u5927\u503c\u5373\u53ef\n\n\u5148\u5728\u5e73\u8861\u6811\u4e2d\u67e5\u8be2$<b[i]$\u7684\u6700\u5927\u503c\uff0c$+1$\u4e4b\u540e\u8bb0\u4f5c$w$\u66f4\u65b0\u7b54\u6848\u7136\u540e\u63d2\u5165\u4e8c\u5143\u7ec4$(b[i],w)$\u5230\u5e73\u8861\u6811\u91cc\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<utility>\n#include<algorithm>\nusing std::sort;\nusing std::pair;\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool f=0;\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\ntemplate<class type>inline const type max(const type &a,const type &b)\n{\n\treturn a>b?a:b;\n}\nconst int N=2e5+10;\nint n,ans;\npair<int,int>a[N];\nclass Treap\n{\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\tint priority,mx,key,val;\n\t\t\ttree *son[2];\n\t\t\tinline const void pushup()\n\t\t\t{\n\t\t\t\tmx=max(val,max(son[0]->mx,son[1]->mx));\n\t\t\t}\n\t\t}*root,memory_pool[N],*tail,*null;\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\troot=null->son[0]=null->son[1]=null;\n\t\t}\n\t\tinline tree *spawn(int key,int val)\n\t\t{\n\t\t\ttree *p=tail++;\n\t\t\tp->key=key;\n\t\t\tp->mx=p->val=val;\n\t\t\tp->priority=rand();\n\t\t\tp->son[0]=p->son[1]=null;\n\t\t\treturn p;\n\t\t}\n\t\tinline const void rotate(tree *&fa,const bool &f)\n\t\t{\n\t\t\ttree *p=fa->son[f];\n\t\t\tfa->son[f]=p->son[f^1];\n\t\t\tp->son[f^1]=fa;\n\t\t\tfa->pushup();(fa=p)->pushup();\n\t\t}\n\t\tinline const void insert(tree *&p,int key,int val)\n\t\t{\n\t\t\tif (p==null)return p=spawn(key,val),void();\n\t\t\tconst bool f=p->key<key;\n\t\t\tinsert(p->son[f],key,val);\n\t\t\tp->pushup();\n\t\t\tif (p->son[f]->priority>p->priority)rotate(p,f);\n\t\t}\n\t\tinline const int lessmax(tree *p,int key)\n\t\t{\n\t\t\tif (p==null)return 0;\n\t\t\tif (key==p->key)return p->son[0]->mx;\n\t\t\tif (key<p->key)return lessmax(p->son[0],key);\n\t\t\treturn max(lessmax(p->son[1],key),max(p->son[0]->mx,p->val));\n\t\t}\n\tpublic:\n\t\tinline Treap(){init();}\n\t\tinline const int lessmax(int key){return lessmax(root,key);}\n\t\tinline const void insert(int key,int val){insert(root,key,val);}\n}T;\nint main()\n{\n\tread(n);\n\tfor (int i=1;i<=n;i++)read(a[i].first),read(a[i].second);\n\tsort(a+1,a+n+1);\n\tfor (int mx,i=1;i<=n;i++)\n\t\tans=max(mx=T.lessmax(a[i].second)+1,ans),\n\t\tT.insert(a[i].second,mx);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1572508320,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "###\u5206\u6790\n\n\u8981\u6c42\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u8003\u8651\u4f7f\u7528dp\u3002\n\n\u5982\u679c\u8981\u4f7f\u7528dp\uff0c\u9996\u5148\u4e00\u5b9a\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u518d\u5c1d\u8bd5\u5199\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\n\n\u9898\u76ee\u8981\u6c42\u4efb\u610f\u4e24\u6761\u822a\u8def\u4e0d\u76f8\u4ea4\uff0c\u7531\u6b64\u60f3\u5230\u6309\u7167\u67d0\u4e00\u4e2a\u5cb8\u8fb9\u7684\u5750\u6807\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a\u8fd9\u6837\u6392\u5e8f\uff0c\u5728\u5224\u65ad\u822a\u8def\u662f\u5426\u76f8\u4ea4\u65f6\u975e\u5e38\u7b80\u4fbf\u3002\n\n\u6309\u7167\u5cb8\u8fb9\u5750\u6807\u6392\u5e8f\u540e\uff0c\u4ece\u7b2c1\u6761\u5230\u7b2cn\u6761\u822a\u8def\u4e92\u4e0d\u76f8\u4ea4\u7684\u5145\u8981\u6761\u4ef6\u662f\u8fd9\u4e9b\u822a\u8def\u7684\u53e6\u4e00\u4e2a\u5cb8\u8fb9\u7684\u5750\u6807\u4e3a\u5355\u8c03\u4e0d\u51cf\u6570\u5217\u3002\n\n\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u505a\u6cd5\u5f88\u6e05\u6670\u4e86\u3002\n\n###\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#define MAX 5005\nusing namespace std;\n\nstruct stu\n{\n    int start;        //\u7b2c\u4e00\u4e2a\u5cb8\u8fb9\u5750\u6807\n    int end;        //\u7b2c\u4e8c\u4e2a\u5cb8\u8fb9\u5750\u6807\n};\nstruct stu river[MAX];\nint dp[MAX] = {0};\nint N;\nint ans = 1;\nbool cmp_start(struct stu x, struct stu y);\nbool check(int i, int j);\n\nint main()\n{\n    int i, j;\n    scanf(\"%d\", &N);\n    for(i = 1; i <= N; i++)\n    {\n        scanf(\"%d%d\", &river[i].start, &river[i].end);\n    }\n\n    for(i = 0; i <= N; i++)\n    {\n        dp[i] = 1;//\u6ce8\u610f\u521d\u59cb\u5316\u8fb9\u754c\u6761\u4ef6\uff0c\u5426\u5219\u4f1aWA\n    }\n\n    sort(river + 1, river + 1 + N, cmp_start);\n    //\u6309\u7167start\u7684\u503c\u8fdb\u884c\u6392\u5e8f\n    \n    for(i = 1; i <= N; i++)\n    {\n        for(j = i + 1; j <= N; j++)\n        {\n            if(river[i].end <= river[j].end)\n            {\n                dp[j] = max(dp[j], dp[i] + 1);//\u548c\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684dp\u4e00\u6837\n            }\n        }\n        ans = max(ans, dp[i]);\n    }\n    \n    printf(\"%d\", ans);\n    return 0;\n    \n}\n\n\nbool cmp_start(struct stu x, struct stu y)\n{\n    return x.start < y.start;\n}\n```",
        "postTime": 1513085117,
        "uid": 70766,
        "name": "StyWang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u6392\u5e8f+\u6700\u957f\u4e0d\u4e0a\u5347\uff08\u4e0b\u964d\uff09\u5b50\u5e8f\u5217\n\n\u5148\u6392\u5e8f\uff0c\u518d\u4e8c\u5206\n\n\n```pascal\nvar\n a,b,c:array[0..trunc(2e5)+10] of longint;\n// a\uff0cb\u8868\u793a\u5357\u5317\u4e24\u5cb8\u7684\u57ce\u5e02\u5750\u6807\n// c\u8868\u793a\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\n i,n,m{\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6},l,r,mid:longint;\n\nprocedure swap(var x,y:longint);//\u4ea4\u6362\n var\n  z:longint;\n begin\n  z:=x;\n  x:=y;\n  y:=z;\nend;\n\nprocedure qsort(l,r:longint);//\u5feb\u6392\n var\n  i,j,temp,mid:longint;\n begin\n  i:=l; j:=r;\n  mid:=a[(l+r) div 2];\n  repeat\n   while a[i]<mid do inc(i);\n   while a[j]>mid do dec(j);\n   if i<=j then\n    begin\n     swap(a[i],a[j]);\n     swap(b[i],b[j]);\n     inc(i);\n     dec(j);\n    end;\n  until i>j;\n  if l<j then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\n\nbegin\n readln(n);\n for i:=1 to n do\n  readln(a[i],b[i]);\n qsort(1,n);\n c[1]:=b[1]; m:=1;\n for i:=2 to n do\n  begin\n   if b[i]>=c[m] then\n    begin\n     inc(m);//\u5e8f\u5217\u957f\u5ea6+1\n     c[m]:=b[i];//\u5b58\u4e0b\u6570\u636e\n     continue;//\u76f4\u63a5\u8df3\u8fc7\u4e8c\u5206\n    end;\n\n   l:=1; r:=m; mid:=(l+r) div 2;\n   while l<=r do//\u4e8c\u5206\uff0c\u627e\u5230\u63d2\u5165\u4f4d\u7f6e\n    begin\n     if b[i]>c[mid] then l:=mid+1//\u5728\u53f3\u534a\u8fb9\u67e5\u627e\n                    else r:=mid-1;//\u5728\u5de6\u534a\u8fb9\u67e5\u627e\n     mid:=(l+r) div 2;\n    end;\n   c[l]:=b[i];//\u653e\u5165\u6570\u7ec4\u4e2d\n  end;\n writeln(m);\nend.\n```",
        "postTime": 1510130215,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u3010\u7b97\u6cd5\u5206\u6790\u3011\n\n\u6211\u4eec\u5c06\u6bcf\u5bf9\u53cb\u597d\u57ce\u5e02\u770b\u6210\u4e00\u6761\u7ebf\u6bb5\uff0c\u5219\u8fd9\u9053\u9898\u7684\u63cf\u8ff0\u5316\u4e3a\uff1a\u6709N\u6761\u7ebf\u6bb5\uff0c\u95ee\u6700\u5c11\u53bb\u6389\u591a\u5c11\u6761\u7ebf\uff0c\u53ef\u4ee5\u4f7f\u5269\u4e0b\u7684\u7ebf\u6bb5\u4e92\u4e0d\u4ea4\u53c9\uff1f\n\n\u7b2c\u4e00\uff0c\u4ee5\u5317\u5cb8\u4e3a\u7ebf\u7684\u8d77\u70b9\u800c\u5357\u5cb8\u4e3a\u7ebf\u7684\u7ec8\u70b9\uff1b\u5148\u5c06\u6240\u6709\u7684\u7ebf\u6309\u7167\u8d77\u70b9\u5750\u6807\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u6309\u7167\u6bcf\u6761\u7ebf\u7684\u7ec8\u70b9\u5750\u6807\u8ba1\u7b97\u4ea4\u53c9\u6570\uff1a\u6c42\u7ebfI\u7684\u4ea4\u53c9\u6570A[I]\uff0c\u5219\u68c0\u67e5\u6240\u67091..I-1\u6761\u7ebf\uff0c\u82e5\u7ebfJ( 1<= J< I)\u7684\u7ec8\u70b9\u503c\u5927\u4e8e\u7ebfI\u7684\u7ec8\u70b9\u503c\uff0c\u5219\u7ebfI\u4e0e\u7ebfJ\u76f8\u4ea4\u3002A[I]\u4e0eA[J]\u540c\u65f6\u52a01\u3002\u6574\u4e2a\u641c\u7d22\u91cf\u6700\u5927\u4e3a5000\\*5000\u3002\n\n\u7b2c\u4e8c\uff0c\u5c06A\u6570\u7ec4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6bcf\u5220\u9664\u4e00\u6761\u7ebf\uff0c\u5219\u5c06\u4e0e\u4e4b\u76f8\u4ea4\u7684\u7ebf\u7684A\u503c\u51cf1\uff0c\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u6240\u6709A\u503c\u90fd\u4e3a0\u3002\u6b64\u65f6\u5269\u4e0b\u7684\u7ebf\u5219\u5168\u4e0d\u4ea4\u53c9\u3002\n\n\u6b64\u65f6\uff0c1\u30012\u30013\u822a\u7ebf\u7684\u4ea4\u53c9\u6570\u90fd\u4e00\u6837\uff0c\u5982\u679c\u5220\u53bb\u7684\u662f3\u30015\u7ebf\uff0c\u5219\u5269\u4e0b\u76841\u30012\u30014\u7ebf\u4e92\u4e0d\u76f8\u4ea4\uff0c\u6700\u591a\u822a\u7ebf\u6570\u4e3a3\uff1b\u4f46\u5982\u679c\u5220\u53bb\u7684\u662f2\u30013\uff0c\u5219\u8fd8\u8981\u5220\u53bb\u7b2c5\u7ebf\u624d\u7b26\u5408\u8981\u6c42\uff0c\u6b64\u65f6\u7684\u6700\u591a\u822a\u7ebf\u6570\u4e3a2\uff0c\u4e0d\u662f\u6700\u4f18\u89e3\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u4ece\u4e0a\u9762\u7684\u5206\u6790\u4e2d\u518d\u6df1\u5165\uff0c\u5c06\u822a\u7ebf\u6309\u8d77\u70b9\u5750\u6807\u6392\u597d\u5e8f\u540e\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u5728\u672c\u9898\u4e2d\uff0c\u53ea\u8981\u7ebfJ\u7684\u8d77\u70b9\u5c0f\u4e8e\u7ebfI\u7684\u8d77\u70b9\uff0c\u540c\u65f6\u5b83\u7684\u7ec8\u70b9\u4e5f\u5c0f\u4e8e\u7ebfI\u7684\u7ec8\u70b9\uff0c\u5219\u7ebfJ\u548c\u7ebfI\u4e0d\u76f8\u4ea4\u3002\u56e0\u6b64\uff0c\u6c42\u6240\u6709\u7ebf\u4e2d\u6700\u591a\u80fd\u6709\u591a\u5c11\u6761\u7ebf\u4e0d\u76f8\u4ea4\uff0c\u5b9e\u9645\u4e0a\u662f\u4ece\u7ec8\u70b9\u5750\u6807\u503c\u6570\u5217\u4e2d\u6c42\u4e00\u4e2a\u6700\u957f\u4e0d\u4e0b\u964d\u5e8f\u5217\u3002\u8fd9\u5c31\u628a\u9898\u76ee\u8f6c\u5316\u4e3a\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u52a8\u6001\u89c4\u5212\u9898\u76ee\u4e86\u3002\n\n\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5e8f\u5217\u7684\u89c4\u5212\u65b9\u7a0b\u5982\u4e0b\uff1a\n\n     L(Si)=max{L(Sj)}+1\uff1b1< = j < i\u4e14 Sj < Si\u3002Si\u4e3a\u822a\u7ebf\u7684\u7ec8\u70b9\u5750\u6807\u503c\u3002\n\n\u4ece\u4ee5\u4e0a\u5206\u6790\u8fc7\u7a0b\u53ef\u4ee5\u5f97\u51fa\uff1a\u5f53\u6211\u4eec\u62ff\u5230\u4e00\u9053\u9898\u65f6\uff0c\u4e0d\u8981\u6025\u4e8e\u6c42\u89e3\uff0c\u800c\u5e94\u5148\u5c06\u9898\u76ee\u7684\u8868\u9762\u73b0\u8c61\u4e00\u5c42\u5c42\u8c61\u5265\u7af9\u7b0b\u4e00\u6837\u53bb\u6389\uff0c\u53ea\u7559\u4e0b\u6700\u5b9e\u8d28\u7684\u5185\u5bb9\u3002\u8fd9\u65f6\u518d\u6765\u8bbe\u8ba1\u7b97\u6cd5\uff0c\u5f80\u5f80\u80fd\u4e8b\u534a\u529f\u500d\u3002\n",
        "postTime": 1509196204,
        "uid": 53405,
        "name": "yangshirui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "```cpp\n//\u7591\u4f3c\u5c0f\u5b66\u7ec4\u9898\u76ee\uff1f\u592a\u6c34 lis+\u5feb\u6392\n//\u9ad8\u624b\u5982\u4e91 lis\u5728\u767d\u4e66\u4e0a\u6709\ntype jl=record\n  x,y:longint;\nend;\nvar\n  n,m,i,j,max:longint;\n  a:array[1..100000] of jl;\n  f:array[0..100000] of longint;\nprocedure sort(l,r: longint);\nvar\n  i,j:longint;\n  x,y:jl;\nbegin\n         i:=l;\n         j:=r;\n         x:=a[(l+r) div 2];\n         repeat\n           while a[i].x<x.x do\n            inc(i);\n           while x.x<a[j].x do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=a[i];\n                a[i]:=a[j];\n                a[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n  begin\n    readln(a[i].x,a[i].y);\n    f[i]:=1;\n  end;\n  sort(1,n);\n  max:=1;\n for i:=1 to n do\n  begin\n     for j:=1 to i-1 do\n       if (a[j].y<a[i].y) and (f[j]+1>f[i]) then//lis\n       begin\n         f[i]:=f[j]+1;\n         if f[i]>max then\n           max:=f[i];\n       end;\n  end;\n  writeln(max);//\u6700\u5927\u503c\u6253\u5370\nend.\n```",
        "postTime": 1507970180,
        "uid": 9262,
        "name": "taoyc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    },
    {
        "content": "\u5927\u5bb6\u90fd\u662f\u6c42\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\n\n\u800c\u6211\u7528\u7684\u662f\u6b63\u5b97\u7eaf\u7cb9DP\n\nF[I][J]\u8868\u793a\u53ea\u7528\u5317\u5cb8\u524dI\u4e2a\uff0c\u5357\u5cb8\u524dJ\u4e2a\uff08\u53ef\u4ee5\u4e0d\u7528\uff09\uff0c\n\n\u6700\u5927\u8fde\u7ebf\u6570\u3002\n\n\u53ea\u9700\u8003\u8651\u5317\u5cb8\u7b2cI\u4e2a\u662f\u5426\u4f7f\u7528\u5373\u53ef\n\n            \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nstruct node\n{\n    int id;\n    int zb;\n}x[5005],y[5005];\nint f[5005][5005];\nbool cmp(node aa,node bb)\n{\n    return aa.zb<bb.zb;\n}\nint main()\n{\n    int n,i,j;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&x[i].zb,&y[i].zb);\n        x[i].id=y[i].id=i;\n    }\n    sort(x+1,x+n+1,cmp);\n    sort(y+1,y+n+1,cmp);\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;y[j].id!=x[i].id;j++)\n            f[i][j]=f[i-1][j];\n        f[i][j]=f[i][j-1]+1;\n        for(j=j+1;j<=n;j++)\n            f[i][j]=max(f[i-1][j],f[i][j-1]);\n    }\n    printf(\"%d\\n\",f[n][n]);\n    return 0;\n}\n\n```",
        "postTime": 1506955870,
        "uid": 52527,
        "name": "dj114133643",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2782 \u3010\u53cb\u597d\u57ce\u5e02\u3011"
    }
]