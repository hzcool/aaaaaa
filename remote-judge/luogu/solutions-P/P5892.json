[
    {
        "content": "\u53d1\u73b0\u6700\u4f18\u60c5\u51b5\u4e00\u5b9a\u662f\u4e00\u76f4\u5411\u4e00\u4e2a\u65b9\u5411\u8d70\u6216\u5148\u8d70\u4e00\u6bb5\u540e\u518d\u56de\u6765\u5f80\u56de\u8d70\u4e00\u6bb5\u3002\u5411\u5de6\u548c\u5411\u53f3\u662f\u4e00\u6837\u7684\uff0c\u53ea\u9700\u7ffb\u8f6c\u5c31\u80fd\u8f6c\u5316\u4e3a\u540c\u4e00\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u8003\u8651\u679a\u4e3e\u8d70\u7684\u533a\u95f4\uff0c\u8bbe\u8d70\u5b8c\u6574\u4e2a\u533a\u95f4\u540e\u7684\u5269\u4f59\u5929\u6570\u4e3a $k$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8be5\u533a\u95f4\u7684\u6700\u4f18\u7b54\u6848\u4e00\u5b9a\u662f\u53c2\u89c2\u533a\u95f4\u5185\u6743\u503c\u524d $k$ \u5927\u7684\u57ce\u5e02\uff0c\u7528\u4e3b\u5e2d\u6811\u5b9e\u73b0\u53ef\u4ee5\u505a\u5230 $O(n^2 \\log n)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u53d1\u73b0\u968f\u7740\u5de6\u7aef\u70b9\u7684\u53d8\u5927\uff0c\u5176\u5bf9\u5e94\u7684\u6700\u4f18\u7684\u53f3\u7aef\u70b9\u4e00\u5b9a\u662f\u4e0d\u964d\u7684\uff0c\u4e5f\u5c31\u662f\u5176\u5177\u6709\u51b3\u7b56\u5355\u8c03\u6027\u3002\u56e0\u4e3a\u4e4b\u524d\u7684\u6700\u4f18\u7684\u53f3\u7aef\u70b9\u7684\u57ce\u5e02\u4e00\u5b9a\u662f\u53c2\u89c2\u7684\uff0c\u6240\u4ee5\u5c06\u53f3\u7aef\u70b9\u79fb\u51fa\u533a\u95f4\u662f\u4e0d\u4f18\u7684\u3002\n\n\u50cf\u51b3\u7b56\u5355\u8c03\u6027\u7684 $DP$ \u4e00\u6837\u5206\u6cbb\u89e3\u51b3\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u4e3a $O(n \\log^2 n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100010\n#define maxm 3000010\n#define mid ((l+r)>>1)\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,s,d,cnt,tot;\nll ans;\nint rt[maxn],ls[maxm],rs[maxm];\nll a[maxn],b[maxn],siz[maxm],sum[maxm];\nvoid insert(int l,int r,int pos,int &cur)\n{\n    int x=++tot;\n    ls[x]=ls[cur],rs[x]=rs[cur];\n    siz[x]=siz[cur]+1,sum[x]=sum[cur]+b[pos],cur=x;\n    if(l==r) return;\n    if(pos<=mid) insert(l,mid,pos,ls[cur]);\n    else insert(mid+1,r,pos,rs[cur]);\n}\nll query(int l,int r,int k,int x,int y)\n{\n    if(k<=0) return 0;\n    if(k>siz[y]-siz[x]) return sum[y]-sum[x];\n    if(l==r) return b[l]*k;\n    if(k<=siz[rs[y]]-siz[rs[x]]) return query(mid+1,r,k,rs[x],rs[y]);\n    return query(l,mid,k-siz[rs[y]]+siz[rs[x]],ls[x],ls[y])+sum[rs[y]]-sum[rs[x]];\n}\nll calc(int l,int r)\n{\n    return query(1,cnt,d-(2*(r-s)+s-l),rt[l-1],rt[r]);\n}\nvoid solve(int l,int r,int L,int R)\n{\n    if(l>r) return;\n    if(L==R)\n    {\n        for(int i=l;i<=r;++i) ans=max(ans,calc(i,L));\n        return;\n    }\n    ll pos=L,mx=calc(mid,L);\n    for(int i=L+1;i<=R;++i)\n    {\n        ll v=calc(mid,i);\n        if(v>mx) mx=v,pos=i;\n    }\n    ans=max(ans,mx),solve(l,mid-1,L,pos),solve(mid+1,r,pos,R);\n}\nvoid clear()\n{\n    for(int i=1;i<=n;++i) rt[i]=0;\n    for(int i=1;i<=tot;++i) ls[i]=rs[i]=siz[i]=sum[i]=0;\n    tot=0;\n}\nvoid work()\n{\n    clear();\n    for(int i=1;i<=n;++i) rt[i]=rt[i-1],insert(1,cnt,a[i],rt[i]);\n    for(int i=1;i<=s;++i) ans=max(ans,calc(i,s));\n    solve(1,s-1,s+1,n);\n}\nint main()\n{\n    read(n),read(s),read(d),s++;\n    for(int i=1;i<=n;++i) read(a[i]),b[i]=a[i];\n    sort(b+1,b+n+1),cnt=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i<=n;++i) a[i]=lower_bound(b+1,b+cnt+1,a[i])-b;\n    work(),s=n-s+1,reverse(a+1,a+n+1),work(),printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1601301383,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5892 \u3010[IOI2014]holiday \u5047\u671f\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u8003\u8651\u5982\u679c\u8d77\u70b9\u4e3a\u7aef\u70b9\uff0c\u53ea\u80fd\u5f80\u4e00\u4e2a\u65b9\u5411\u8d70\u600e\u4e48\u529e\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u60f3\u5230\u66b4\u529b\u679a\u4e3e\u6700\u8fdc\u8d70\u5230\u54ea\u4e2a\u70b9\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u5c06\u5269\u4e0b\u7684\u524d$k$\u5927\u6570\u4e4b\u548c\u6c42\u51fa\u6765\u66f4\u65b0\u7b54\u6848\uff0c\u5176\u4e2d$k$\u662f\u8fd8\u53ef\u4ee5\u8fdb\u884c\u7684\u64cd\u4f5c\u6570\n\n\u90a3\u4e48\u5982\u679c\u8d77\u70b9\u5728\u4e2d\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u8d70\u7684\u65b9\u6cd5\u662f\u600e\u4e48\u6837\u7684\u5462\uff1f\u4e4d\u4e00\u770b\u597d\u50cf\u5f88\u590d\u6742\uff0c\u4f46\u6211\u4eec\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u4f1a\u53d1\u73b0\u53ea\u6709\u4ee5\u4e0b\u56db\u79cd\u8d70\u6cd5\uff1a\n\n1. \u4ece\u8d77\u70b9\u5f00\u59cb\u5411\u53f3\u8d70\n2. \u4ece\u8d77\u70b9\u5f00\u59cb\u5411\u53f3\u8d70\uff0c\u5e76\u4e14\u8d70\u56de\u5230\u8d77\u70b9\n3. \u4ece\u8d77\u70b9\u5f00\u59cb\u5411\u5de6\u8d70\n4. \u4ece\u8d77\u70b9\u5f00\u59cb\u5411\u5de6\u8d70\uff0c\u5e76\u4e14\u8d70\u56de\u5230\u8d77\u70b9\n\n\u5176\u4e2d$1,4$\u53ef\u4ee5\u7ec4\u5408\u8d77\u6765\uff0c$2,3$\u540c\u7406\n\n\u90a3\u4e48\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u76f4\u63a5DP\uff0c\u7528$f1,f2,f3,f4$\u5206\u522b\u8868\u793a\u4e0a\u9762\u7684\u8d70\u6cd5\uff0c\u5176\u4e2d$f1_i$\u5c31\u8868\u793a\u5411\u53f3\u8d70$i$\u5929\u6700\u591a\u53ef\u4ee5\u53c2\u89c2\u591a\u5c11\u4e2a\u666f\u70b9\uff0c\u5176\u4f59\u7684\u540c\u7406\uff0c\u90a3\u4e48\u6211\u4eec\u5bb9\u6613\u60f3\u5230\u66f4\u65b0\u7b54\u6848\uff1a\n\n$$\\max_{i=0}^m \\max(f1_i+f4_{m-i},f2_i+f3_{m-i})$$\n\n\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u662f\u5982\u4f55\u6c42\u51fa$f1,f2,f3,f4$\u4e86\uff0c\u56de\u5fc6\u524d\u9762\u7684\u90a3\u4e2a\u66b4\u529b\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2aDP\u6709\u4e00\u4e2a\u660e\u663e\u7684\u51b3\u7b56\u70b9\uff0c\u5c31\u662f\u6700\u8fdc\u8d70\u5230\u7684\u70b9\n\n\u7136\u540e\u518d\u60f3\u4e00\u4e0b\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2aDP\u6ee1\u8db3**\u51b3\u7b56\u5355\u8c03\u6027**\uff0c\u4ee5$f1$\u4e3a\u4f8b\uff0c\u8bbe$f1_i$\u5bf9\u5e94\u7684\u8d70\u5230\u6700\u8fdc\u7684\u70b9\u4e3a$pos_i$\uff0c\u90a3\u4e48\u5bf9\u4e8e$f1_{i+1}$\uff0c\u5176\u80fd\u8d70\u5230\u7684\u6700\u8fdc\u7684\u70b9$pos_{i+1}\\ge pos_i$\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u8212\u8212\u670d\u670d\u7684\u5229\u7528\u7ecf\u5178\u7684\u5206\u6cbb\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u90a3\u4e2a\u533a\u95f4\u524d$k$\u5927\u548c\u76f4\u63a5\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u6700\u7ec8\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(n\\log^2 n)$\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define RI register int\n#define CI const int&\n#define Ms(f,x) memset(f,x,sizeof(f))\nusing namespace std;\nconst int N=100005,M=300005;\ntypedef long long LL;\nint n,m,st,a[N],pos[M],rst[N],num; LL f1[M],f2[M],f3[M],f4[M],ans;\n// f1:toward right; f2:toward right then return; f3:toward left; f4:toward left then return;\nclass President_Tree\n{\n\tprivate:\n\t\tstruct segment\n\t\t{\n\t\t\tint ch[2],size; LL sum;\n\t\t}node[N*20]; int rt[N],tot;\n\t\t#define lc(x) node[x].ch[0]\n\t\t#define rc(x) node[x].ch[1]\n\t\t#define sz(x) node[x].size\n\t\t#define sum(x) node[x].sum\n\t\t#define TN CI l=1,CI r=num\n\t\tinline void _insert(CI lst,int& now,CI val,CI rv,TN)\n\t\t{\n\t\t\tnode[now=++tot]=node[lst]; ++sz(now); sum(now)+=rv;\n\t\t\tif (l==r) return; int mid=l+r>>1;\n\t\t\tif (val<=mid) _insert(lc(lst),lc(now),val,rv,l,mid);\n\t\t\telse _insert(rc(lst),rc(now),val,rv,mid+1,r); \n\t\t}\n\t\tinline LL _query(CI x,CI y,CI rk,LL ret=0,TN)\n\t\t{\n\t\t\tif (l==r) return ret+1LL*rst[l]*rk; int mid=l+r>>1;\n\t\t\tif (rk<=sz(rc(y))-sz(rc(x))) return _query(rc(x),rc(y),rk,ret,mid+1,r);\n\t\t\telse return _query(lc(x),lc(y),rk-(sz(rc(y))-sz(rc(x))),ret+sum(rc(y))-sum(rc(x)),l,mid);\n\t\t}\n\tpublic:\n\t\tinline void insert(CI pos,CI val,CI rv)\n\t\t{\n\t\t\t_insert(rt[pos-1],rt[pos],val,rv);\n\t\t}\n\t\tinline LL query(CI l,CI r,CI rk)\n\t\t{\n\t\t\tif (l>r) return 0; return _query(rt[l-1],rt[r],min(rk,r-l+1));\n\t\t}\n\t\t#undef lc\n\t\t#undef rc\n\t\t#undef sz\n\t\t#undef sum\n\t\t#undef TN\n}SEG;\n#define Itval CI l=1,CI r=m\ninline void solve1(CI beg,CI end,Itval)\n{\n\tif (l>r) return; int mid=l+r>>1;\n\tfor (RI i=beg;i<=end;++i) if (mid-(i-st)>=0)\n\t{\n\t\tLL ret=SEG.query(st,i,mid-(i-st));\n\t\tif (!pos[mid]||ret>f1[mid]) f1[mid]=ret,pos[mid]=i;\n\t}\n\tsolve1(beg,pos[mid],l,mid-1); solve1(pos[mid],end,mid+1,r);\n}\ninline void solve2(CI beg,CI end,Itval)\n{\n\tif (l>r) return; int mid=l+r>>1;\n\tfor (RI i=beg;i<=end;++i) if (mid-(i-st<<1)>=0)\n\t{\n\t\tLL ret=SEG.query(st,i,mid-(i-st<<1));\n\t\tif (!pos[mid]||ret>f2[mid]) f2[mid]=ret,pos[mid]=i;\n\t}\n\tsolve2(beg,pos[mid],l,mid-1); solve2(pos[mid],end,mid+1,r);\n}\ninline void solve3(CI beg,CI end,Itval)\n{\n\tif (l>r) return; int mid=l+r>>1;\n\tfor (RI i=beg;i<=end;++i) if (mid-(st-i)>=0)\n\t{\n\t\tLL ret=SEG.query(i,st-1,mid-(st-i));\n\t\tif (!pos[mid]||ret>f3[mid]) f3[mid]=ret,pos[mid]=i;\n\t}\n\tsolve3(pos[mid],end,l,mid-1); solve3(beg,pos[mid],mid+1,r);\n}\ninline void solve4(CI beg,CI end,Itval)\n{\n\tif (l>r) return; int mid=l+r>>1;\n\tfor (RI i=beg;i<=end;++i) if (mid-(st-i<<1)>=0)\n\t{\n\t\tLL ret=SEG.query(i,st-1,mid-(st-i<<1));\n\t\tif (!pos[mid]||ret>f4[mid]) f4[mid]=ret,pos[mid]=i;\n\t}\n\tsolve4(pos[mid],end,l,mid-1); solve4(beg,pos[mid],mid+1,r);\n}\n#undef Itval\nint main()\n{\n\tRI i; for (scanf(\"%d%d%d\",&n,&st,&m),++st,i=1;i<=n;++i)\n\tscanf(\"%d\",&a[i]),rst[i]=a[i]; sort(rst+1,rst+n+1);\n\tfor (num=unique(rst+1,rst+n+1)-rst-1,i=1;i<=n;++i)\n\ta[i]=lower_bound(rst+1,rst+num+1,a[i])-rst,SEG.insert(i,a[i],rst[a[i]]);\n\tMs(pos,0); solve1(st,min(st+m,n)); Ms(pos,0); solve2(st,min(st+(m>>1),n));\n\tMs(pos,0); solve3(max(1,st-m),st); Ms(pos,0); solve4(max(1,st-(m>>1)),st);\n\tfor (i=0;i<=m;++i) ans=max(ans,max(f1[i]+f4[m-i],f2[i]+f3[m-i]));\n\treturn printf(\"%lld\",ans),0;\n}\n```\n",
        "postTime": 1581164688,
        "uid": 41698,
        "name": "hl666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5892 \u3010[IOI2014]holiday \u5047\u671f\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u5065\u4f73\u7684\u79fb\u52a8\u8def\u7ebf\u4e00\u5b9a\u662f\u4e0b\u52174\u79cd\u4e2d\u7684\u4e00\u79cd\uff1a\n\n1.\u4e00\u76f4\u5411\u5de6\u8d70\n\n2.\u4e00\u76f4\u5411\u53f3\u8d70\n\n3.\u5411\u5de6\u8d70\u4e00\u5b9a\u8ddd\u79bb\u540e\u6298\u8fd4\uff0c\u7ecf\u8fc7\u8d77\u70b9\u540e\u5411\u53f3\n\n4.\u5411\u53f3\u8d70\u4e00\u5b9a\u8ddd\u79bb\u540e\u6298\u8fd4\uff0c\u7ecf\u8fc7\u8d77\u70b9\u540e\u5411\u5de6\n\n\u9014\u4e2d\u8fd8\u53ef\u80fd\u4f1a\u505c\u4e0b\u6765\u53c2\u89c2\u666f\u70b9\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa4\u4e2a\u6570\u7ec4\uff1a\n\n$fl[i]:$\u5411\u5de6\u8d70\uff0c\u82b1\u8d39$i$\u65f6\u95f4\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\n\n$fr[i]:$\u5411\u53f3\u8d70\uff0c\u82b1\u8d39$i$\u65f6\u95f4\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\n\n$gl[i]:$\u8d70\u4e00\u6b65\u82b1\u8d39\u4e24\u5929\uff08\u76f8\u5f53\u4e8e\u6298\u8fd4\uff09\uff0c\u5411\u5de6\u8d70\uff0c\u82b1\u8d39$i$\u65f6\u95f4\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\n\n$gr[i]:$\u8d70\u4e00\u6b65\u82b1\u8d39\u4e24\u5929\uff0c\u5411\u53f3\u8d70\uff0c\u82b1\u8d39$i$\u65f6\u95f4\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\n\n\u5df2\u77e5\u8fd94\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u3002\u8fd94\u4e2a\u6570\u7ec4\u6c42\u7684\u65b9\u6cd5\u5dee\u4e0d\u591a\uff0c\u5c31\u8bb2\u8bb2$fr[i]$\u600e\u4e48\u6c42\u3002\u8bbe\u8d77\u70b9\u4e3a$s$\u3002\n\n\u5047\u8bbe$d[i]$\u662f\u4f7f$fr[i]$\u6700\u5927\u7684\u5411\u53f3\u8d70\u7684\u8ddd\u79bb\uff08\u5982\u679c\u6709\u591a\u4e2a\uff0c\u53d6\u6700\u5927\u7684\uff09\uff0c\u5219$d[i]$\u5173\u4e8e$i$\u5355\u8c03\u4e0d\u964d\uff0c\u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\uff0c\u53ef\u4ee5\u5206\u6cbb\u89e3\u51b3\u3002\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u51b3\u7b56\u5355\u8c03\u5462\uff1f4\u4e2a\u6570\u7ec4\u8bc1\u660e\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4e0b\u9762\u7ed9\u51fa$fr$\u7684\u8bc1\u660e\u3002\n\n\u5047\u8bbe$d[x+1]<d[x]$\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u9700\u8981\u8bc1\u660e\u5b58\u5728\u4e00\u79cd\u8ddd\u79bb\u4e3a$d'[x+1]\\ge d[x]$\u7684\u65b9\u6848\uff0c\u4f7f$fr[x+1]$\u4e0d\u6bd4\u8ddd\u79bb\u4e3a$d[x+1]$\u65f6\u52a3\u3002\n\n\u6211\u4eec\u5148\u4ece$[s,s+d[x+1]]$\u4e2d\u53bb\u6389\u666f\u70b9\u6570\u7b2c$x-d[x+1]$\u591a\u7684\u57ce\u5e02$c$\u3002\u8fd9\u65f6\uff0c\u7531\u4e8e$fr[x]$\u5728\u8ddd\u79bb\u4e3a$d[x]$\u65f6\u4e0d\u52a3\u4e8e\u8ddd\u79bb\u4e3a$d[x+1]<d[x]$\u65f6\uff0c\u56e0\u6b64\u5c06\u8ddd\u79bb\u6539\u4e3a$d[x]$\u4e0d\u4f1a\u66f4\u52a3\u3002\u6b64\u65f6\uff0c\u9009\u53d6\u7684\u662f\u666f\u70b9\u6570\u524d$x-d[x]$\u591a\u7684\u57ce\u5e02\uff0c\u6211\u4eec\u518d\u628a\u53bb\u6389\u76841\u4e2a\u57ce\u5e02\u518d\u52a0\u4e00\u4e2a\u56de\u53bb\uff0c\u52a0\u7684\u662f$[s,s+d[x]]$\u4e2d\u7b2c$x-d[x]+1$\u591a\u7684\u57ce\u5e02$c'$\u3002\u7531\u4e8e$[s,s+d[x+1]]\\subseteq[s,s+d[x]],x-d[x]+1\\le x-d[x+1]$\uff0c\u5fc5\u5b9a\u6709$a[c']\\ge a[c]$\uff0c\u8fd9\u6837\u5c31\u6784\u9020\u51fa\u4e86\u4e00\u79cd\u8ddd\u79bb\u4e3a$d[x]$\uff0c\u5e76\u4e14$fr[x+1]$\u4e0d\u52a3\u4e8e\u8ddd\u79bb\u4e3a$d[x+1]$\u65f6\u7684\u65b9\u6848\uff0c\u5047\u8bbe\u4e0d\u6210\u7acb\u3002\n\n\u56e0\u6b64\uff0c$d[x+1]\\ge d[x]$\uff0c\u51b3\u7b56\u5355\u8c03\u6027\u6210\u7acb\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n//#include\"holiday.h\"\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,a,b) for(int i=(a);i<=(b);i++)\n#define Rof(i,b,a) for(int i=(b);i>=(a);i--)\n#define pb(x) push_back(x)\n#define ll long long\n#define ull unsigned ll\n#define uint unsigned\n#define ld long double\n#define pii pair<int,int>\n#define pli pair<ll,int>\n#define wln putchar('\\n')\n#define clr(a) memset(a,0,sizeof(a))\ntemplate<class T> void chkmax(T &x,T y){if(x<y)x=y;}\ntemplate<class T> void chkmin(T &x,T y){if(y<x)x=y;}\nvoid pia(int a[],int l){for(int i=1;i<=l;i++)printf(\"%d \",a[i]);}\nconst int N=100005,V=2000005;\nint rt[N],aa[N],lenaa,n,s;\nll fl[N<<2],fr[N<<2],gl[N<<2],gr[N<<2],ans;\nstruct presidenttree\n{\n    int v0[V],ls[V],rs[V],vcnt;\n    ll v1[V];\n    int copynode(int id)\n    {\n        vcnt++;\n        v0[vcnt]=v0[id];\n        v1[vcnt]=v1[id];\n        ls[vcnt]=ls[id];\n        rs[vcnt]=rs[id];\n        return vcnt;\n    }\n    void pushup(int id)\n    {\n        v0[id]=v0[ls[id]]+v0[rs[id]];\n        v1[id]=v1[ls[id]]+v1[rs[id]];\n    }\n    void ddxg(int &id,int l,int r,int x)\n    {\n        id=copynode(id);\n        if(l==r){v0[id]++; v1[id]+=aa[x]; return;}\n        int mid=l+r>>1;\n        if(x<=mid)ddxg(ls[id],l,mid,x);\n        else ddxg(rs[id],mid+1,r,x);\n        pushup(id);\n    }\n    ll qjcx(int id1,int id2,int l,int r,int k)\n    {\n        if(l==r)return 1ll*aa[l]*min(v0[id2]-v0[id1],k);\n        int mid=l+r>>1,t=v0[rs[id2]]-v0[rs[id1]];\n        if(k<=t)return qjcx(rs[id1],rs[id2],mid+1,r,k);\n        else return v1[rs[id2]]-v1[rs[id1]]+qjcx(ls[id1],ls[id2],l,mid,k-t);\n    }\n}T;\nvoid solve1(int l,int r,int dl,int dr)\n{\n\tif(l>r)return;\n    int mid=l+r>>1,dmid=dl;\n\tll x;\n    for(int i=dl;i<=min({dr,mid,n-s});i++)\n    {\n        x=T.qjcx(rt[s-1],rt[s+i],0,lenaa-1,mid-i);\n        if(x>fr[mid])fr[mid]=x,dmid=i;\n    }\n    solve1(l,mid-1,dl,dmid);\n    solve1(mid+1,r,dmid,dr);\n}\nvoid solve2(int l,int r,int dl,int dr)\n{\n\tif(l>r)return;\n    int mid=l+r>>1,dmid=dl;\n\tll x;\n    for(int i=dl;i<=min({dr,mid/2,n-s});i++)\n    {\n        x=T.qjcx(rt[s-1],rt[s+i],0,lenaa-1,mid-i*2);\n        if(x>gr[mid])gr[mid]=x,dmid=i;\n    }\n    solve2(l,mid-1,dl,dmid);\n    solve2(mid+1,r,dmid,dr);\n}\nvoid solve3(int l,int r,int dl,int dr)\n{\n\tif(l>r)return;\n    int mid=l+r>>1,dmid=dl;\n\tll x;\n    for(int i=dl;i<=min({dr,mid,s-1});i++)\n    {\n        x=T.qjcx(rt[s-i-1],rt[s-1],0,lenaa-1,mid-i);\n        if(x>fl[mid])fl[mid]=x,dmid=i;\n    }\n    solve3(l,mid-1,dl,dmid);\n    solve3(mid+1,r,dmid,dr);\n}\nvoid solve4(int l,int r,int dl,int dr)\n{\n\tif(l>r)return;\n    int mid=l+r>>1,dmid=dl;\n\tll x;\n    for(int i=dl;i<=min({dr,mid/2,s-1});i++)\n    {\n        x=T.qjcx(rt[s-i-1],rt[s-1],0,lenaa-1,mid-i*2);\n        if(x>gl[mid])gl[mid]=x,dmid=i;\n    }\n    solve4(l,mid-1,dl,dmid);\n    solve4(mid+1,r,dmid,dr);\n}\nll findMaxAttraction(int in_n, int in_s, int d, int a[]) {\n    n=in_n; s=in_s+1;\n    for(int i=0;i<n;i++)aa[lenaa++]=a[i];\n    sort(aa,aa+lenaa);\n    lenaa=unique(aa,aa+lenaa)-aa;\n    for(int i=n;i;i--)a[i]=lower_bound(aa,aa+lenaa,a[i-1])-aa;\n    for(int i=1;i<=n;i++)T.ddxg(rt[i]=rt[i-1],0,lenaa-1,a[i]);\n    solve1(1,d,0,n-s);\n    solve2(1,d,0,n-s);\n    solve3(1,d,0,s-1);\n    solve4(1,d,0,s-1);\n\tfor(int i=0;i<=d;i++)ans=max({ans,fl[i]+gr[d-i],gl[i]+fr[d-i]});\n\treturn ans;\n}\nint main() {\n    int n, start, d;\n    int attraction[100000];\n    int i, n_s;\n    n_s = scanf(\"%d %d %d\", &n, &start, &d);\n    for (i = 0 ; i < n; ++i) {\n\tn_s = scanf(\"%d\", &attraction[i]);\n    }\n    printf(\"%lld\\n\", findMaxAttraction(n, start, d,  attraction));\n    return 0;\n}\n```",
        "postTime": 1600084973,
        "uid": 31381,
        "name": "C3H5ClO",
        "ccfLevel": 9,
        "title": "\u3010IOI2014\u3011holiday\u9898\u89e3"
    }
]