[
    {
        "content": "\u505a\u8fc7\u4e00\u4e9b\u9898\u76ee\uff0c\u5e94\u8be5\u5c31\u80fd\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u6811\u4e0a\u7684\u5206\u7ec4\u80cc\u5305\u3002\n\n\u6211\u4eec\u8bbedp[i][j]\u8868\u793a\u5728\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6ee1\u8db3j\u4e2a\u5ba2\u6237\u7684\u9700\u6c42\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\uff0c\n\n\u90a3\u4e48\u5728\u6700\u7ec8\u6c42\u6700\u591a\u5ba2\u6237\u65f6\uff0c\u53ea\u8981\u6c42\u6700\u5927\u7684dp[1][i]>=0\u7684i\u5c31\u884c\u4e86\u3002\n\n\u81f3\u4e8e\u5206\u7ec4\u80cc\u5305\uff0c\u6211\u4eec\u8bbedp[i][u][j]\u8868\u793a\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u4ec5\u7528\u524di\u4e2a\u513f\u5b50\uff0c\u6ee1\u8db3j\u4e2a\u5ba2\u6237\u53d6\u5f97\u6700\u5927\u4ef7\u503c\uff0c\n\n\u90a3\u4e48dp[i][u][j]=max(dp[i-1][u][j-k]+dp[full\\_son\\_size[v]][v][k]);\n\n\u800ci\u8fd9\u4e00\u7ef4\u53ef\u4ee5\u76f4\u63a5\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u6389\u3002\n\n\u800c\u8fd9\u4e2a\u80cc\u5305\uff0c\u6709\u4e9b\u7ec6\u8282\u4f18\u5316\u662f\u53ef\u4ee5\u8fc7\u6389\u8ba8\u8bba\u4e2d\u7684\u90a3\u4e2a\u6781\u9650\u6570\u636e\u3002\n\n\u5982\uff0c\u5c06\u4e0b\u9762\u9898\u89e3\u4ee3\u7801\u4e2dsum+=x\u6539\u5230dp\u540e\u3002\u7136\u540e\u628adp[u][j]=max(dp[u][j],dp[u][j-k]+dp[v][k])\n\n\u6539\u4e3adp[u][j+k]=max(dp[u][j+k],dp[u][j]+dp[v][k])\uff0c\u6700\u540e\u628adp[u][j]\u5148\u7528\u4e00\u4e2a\u6570\u7ec4t\u4fdd\u5b58\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n[\u591a\u53c9\u6811\u4e0a\u7684\u80cc\u5305\u8be6\u89e3\u3002](http://blog.csdn.net/no1\\_terminator/article/details/77824790)\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=3010;\nint n,m,EdgeCnt=0;\nint dp[N][N],val[N],a[N],t[N];\nstruct Edge{\n    int to,w,next;\n}e[N*N];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nvoid addedge(int u,int v,int w){\n    int p=++EdgeCnt;\n    e[p].to=v;e[p].w=w;e[p].next=a[u];\n    a[u]=p;\n}\nint dfs(int u){\n    if (u>n-m){\n        dp[u][1]=val[u];\n        return 1;\n    }\n    int sum=0;\n    for (int p=a[u];p;p=e[p].next){\n        int v=e[p].to;\n        int tk=dfs(v);\n        for (int j=0;j<=sum;j++)t[j]=dp[u][j];\n        for (int j=0;j<=sum;j++)\n            for (int k=0;k<=tk;k++)\n                dp[u][j+k]=max(dp[u][j+k],t[j]+dp[v][k]-e[p].w);\n        sum+=tk;\n    }\n    return sum;\n}\nint main(){\n    n=read(),m=read();\n    memset(dp,~0x3f,sizeof(dp));\n    for (int u=1;u<=n-m;u++){\n        int size=read();\n        for (int j=1;j<=size;j++){\n            int v=read(),w=read();\n            addedge(u,v,w);\n        }\n    }\n    for (int i=n-m+1;i<=n;i++)\n        val[i]=read();\n    for (int i=1;i<=n;i++)\n        dp[i][0]=0;\n    dfs(1);\n    for (int i=m;i>0;i--)\n        if (dp[1][i]>=0){\n            printf(\"%d\",i);\n            break;\n        }\n    return 0;\n}\n```",
        "postTime": 1504598608,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "# \u6811\u5f62dp\uff08\u5206\u7ec4\u80cc\u5305\uff09\n###### \t~~\u849f\u84bb\u56e0\u4e3a\u770b\u4e0d\u61c2\u9898\u89e3\u81ea\u5df1\u5199\u7ed3\u679c\u4e00\u6b21ac\u7684\u6545\u4e8b~~\n### \u8bf4\u4e00\u4e0b\u81ea\u5df1\u7684\u7406\u89e3\n\n 1.\u660e\u786edp[i][j]\u542b\u4e49\uff0c\u8868\u793ai\u8282\u70b9\uff0c\u9009j\u4e2a\u7528\u6237\uff0c\u80fd\u5f97\u5230\u7684\u94b1\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u8282\u70b9\u505a\u5206\u7ec4\u80cc\u5305\u3002\n \n 2.\u600e\u4e48\u770b\u51fa\u662f\u5206\u7ec4\u80cc\u5305\uff1f\u9996\u5148\uff0c\u80cc\u5305\u7684\u603b\u5bb9\u91cf\u76f8\u5f53\u4e8e\u8be5\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u6240\u6709\u7684\u7528\u6237\u6570\u91cf\uff08dp[i][j]\u7684 j \u4e0d\u53ef\u80fd\u8d85\u8fc7\u5b83\u8fde\u63a5\u7684\u6240\u6709\u7528\u6237\u6570\uff09\u3002\u7136\u540e\uff0c\u628a\u8be5\u8282\u70b9\u7684\u6bcf\u4e2a\u513f\u5b50\u770b\u6210\u4e00\u7ec4\uff0c\u6bcf\u7ec4\u4e2d\u7684\u5143\u7d20\u4e3a\u9009\u4e00\u4e2a\uff0c\u9009\u4e24\u4e2a...\u9009n\u4e2a\u7528\u6237\u3002\n \n 3.\u8f6c\u79fb\u65b9\u7a0b  dp[i][j]=max(dp[i][j],dp[i][j-k]+dp[v][k]-\u8fd9\u6761\u8fb9\u7684\u82b1\u8d39)  i,j\u4e0d\u89e3\u91ca\u4e86\uff0cv\u8868\u793a\u679a\u4e3e\u5230\u8fd9\u4e00\u7ec4\uff08\u5373i\u7684\u513f\u5b50\uff09\uff0ck\u8868\u793a\u679a\u4e3e\u5230\u8fd9\u7ec4\u4e2d\u7684\u5143\u7d20\uff1a\u9009k\u4e2a\u7528\u6237\u3002\n \n 4.\u6700\u540e\u8f93\u51fadp[1][i]>=0\u7684i\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u53cd\u5411\u679a\u4e3e\u3002\n\n###### ~~\u4ee3\u7801\u4e11~~\n\n\n\n\n------------\n### \u66f4\u65b0\u4e00\u4e0b\n\n#### \u8bf4\u4e00\u4e0b\u5206\u7ec4\u80cc\u5305\u5427qwq\n\n#### \u5206\u7ec4\u80cc\u5305\uff1a\u82e5\u5e72\u7ec4\u7269\u54c1\uff0c\u6bcf\u7ec4\u4e2d\u7684\u7269\u54c1\u4e92\u76f8\u51b2\u7a81\uff08\u5c31\u662f\u8bf4\u6bcf\u7ec4\u4e2d\u6700\u591a\u53ea\u80fd\u9009\u4e00\u4ef6\u7269\u54c1\uff09\uff0c\u6c42\u6700\u5927\u4ef7\u503c\n\n#### ~~\u4f2a\u4ee3\u7801\u5982\u4e0b~~\n\n```\nfor(int k=1;k<=\u603b\u5171\u7684\u7ec4\u6570;k++)//\u904d\u5386\u6240\u6709\u7684\u7ec4k\n\tfor(int j=v;j>=1;j--)//\u8ddf01\u80cc\u5305\u7c7b\u4f3c\uff0c\u5012\u5e8f\u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\n    \tfor(int i=1;i<=\u7ec4\u4e2d\u7684\u5143\u7d20\u4e2a\u6570;i++)//\u904d\u5386\u8fd9\u7ec4\u4e2d\u6240\u6709\u7684\u5143\u7d20\n```\n~~\u4ed4\u7ec6\u770b\u7684\u8bdd\u548c\u6811\u5f62dp\u7684\u4ee3\u7801\u662f\u4e00\u6a21\u4e00\u6837\u7684\u5462~~\n\n#### \u518d\u89e3\u91ca\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u601d\u8def\n\n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u628a\u6bcf\u4e2a\u8282\u70b9\u770b\u6210\u4e00\u4e2a\u80cc\u5305\u5566\uff0c\u5b83\u7684\u5bb9\u91cf\u5c31\u662f\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u7ec4\u6570\u5c31\u662f\u8fde\u63a5\u7684\u513f\u5b50\u4e2a\u6570\u3002\n\n\u6bcf\u7ec4\u90fd\u6709\u5f88\u591a\u9009\u62e9\uff0c\u9009\u4e00\u4e2a\uff0c\u4e24\u4e2a\uff0c\u4e09\u4e2a\u7528\u6237\uff0c\u628a\u8fd9\u4e9b\u9009\u62e9\u5f53\u505a\u7ec4\u4e2d\u7684\u5143\u7d20\u5c31\u597d\u4e86\uff0c\u5bb9\u6613\u770b\u51fa\u6bcf\u7ec4\u4e2d\u53ea\u80fd\u9009\u4e00\u4e2a\u5143\u7d20\uff0c\u6bd4\u5982\u4f60\u9009\u62e9\u4e86\u9009\u4e00\u4e2a\u7528\u6237\uff0c\u5c31\u4e0d\u53ef\u80fd\u540c\u65f6\u9009\u62e9\u9009\u4e24\u4e2a\u7528\u6237\u3002\n\n\u4ee3\u7801\uff1a\n------------\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m;//n\u4e3a\u6574\u4e2a\u6709\u7ebf\u7535\u89c6\u7f51\u7684\u7ed3\u70b9\u603b\u6570\uff0cm\u4e3a\u7528\u6237\u7ec8\u7aef\u7684\u6570\u91cf\n//\u7b2c\u4e00\u4e2a\u8f6c\u64ad\u7ad9\u5373\u6811\u7684\u6839\u7ed3\u70b9\u7f16\u53f7\u4e3a1\uff0c\u5176\u4ed6\u7684\u8f6c\u64ad\u7ad9\u7f16\u53f7\u4e3a2\u5230n-m\uff0c\u7528\u6237\u7ec8\u7aef\u7f16\u53f7\u4e3an-m+1\u5230n\nint head[3010],k;\nint val[3010];//\u7528\u6237\u4e3a\u89c2\u770b\u6bd4\u8d5b\u800c\u51c6\u5907\u652f\u4ed8\u7684\u94b1\u6570\nint dp[3010][3010];//dp[i][j]\u8868\u793ai\u8282\u70b9\uff0c\u9009j\u4e2a\u7528\u6237\uff0c\u80fd\u5f97\u5230\u7684\u94b1\u7684\u6700\u5927\u503c \nstruct node\n{\n\tint to,next,w;\n}edge[10000010];\nvoid adde(int u,int v,int w)\n{\n\tedge[++k].to=v; edge[k].next=head[u];\n\tedge[k].w=w; head[u]=k;\n}\nint dfs(int u)\n{\n\tif(u>n-m)//u\u4e3a\u7528\u6237\u7ec8\u7aef\n\t{\n\t\tdp[u][1]=val[u];\n\t\treturn 1;\n\t} \n\tint sum=0,t;\n\tfor(int k=head[u];k;k=edge[k].next)//\u8be5\u70b9\u8fde\u63a5\u4e86\u51e0\u4e2a\u8282\u70b9\u610f\u4e3a\u6709\u51e0\u7ec4\uff0c\u904d\u5386\u6bcf\u4e00\u7ec4 \n\t{\n\t\tint v=edge[k].to;\n\t\tt=dfs(v); sum+=t; //t\u4e3a\u8be5\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u6216\u662f\u8bf4\u8fd9\u4e2a\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff08\u8fd9\u91cc\u7684\u5927\u5c0f\u6307\u5b50\u6811\u4e2d\u7528\u6237\u7684\u4e2a\u6570\uff09\uff0csum\u4e3a\u8be5\u8282\u70b9\u6700\u591a\u53ef\u4ee5\u9009\u591a\u5c11\u4e2a\u7528\u6237\uff0c\u5373\u80cc\u5305\u5bb9\u91cf \n\t\tfor(int j=sum;j>0;j--)\n\t\t{\n\t\t\tfor(int i=1;i<=t;i++)//\u904d\u5386\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u9009\u591a\u5c11\u4e2a\u7528\u6237\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5143\u7d20 \n\t\t\t{\n\t\t\t\tif(j-i>=0) dp[u][j]=max(dp[u][j],dp[u][j-i]+dp[v][i]-edge[k].w);\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nint main()\n{\n\tmemset(dp,~0x3f,sizeof(dp));//\u521d\u59cb\u5316\u4e00\u4e2a\u6781\u5927\u8d1f\u503c\uff0c\u56e0\u4e3adp\u53ef\u80fd\u4e3a\u8d1f\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int u=1;u<=n-m;u++)\n\t{\n\t\tint size,v,w;\n\t\tscanf(\"%d\",&size);\n\t\tfor(int j=1;j<=size;j++)\n\t\t{\n\t\t\tscanf(\"%d%d\",&v,&w);\n\t\t\tadde(u,v,w);\n\t\t}\n\t}\n\tfor(int i=n-m+1;i<=n;i++) scanf(\"%d\",&val[i]);\n\tfor (int i=1;i<=n;i++) dp[i][0]=0;//\u90090\u4e2a\u7528\u6237\u7684\u82b1\u8d39\u80af\u5b9a\u662f0\u5566\n\tdfs(1);\n\tfor (int i=m;i>=1;i--)\n        if (dp[1][i]>=0)\n\t\t{\n            printf(\"%d\",i);\n            break;\n        }\n\treturn 0;\n}\n```",
        "postTime": 1531536321,
        "uid": 85691,
        "name": "LengChu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u4e0d\u9519\u7684\u6811\u5f62\u80cc\u5305\u7684\u9898\u76ee\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u6811\u5f62\u80cc\u5305\u7684\u5b9e\u8d28\uff01\n\u6309\u7167\u5e38\u89c1\u6811\u5f62\u80cc\u5305\u5b9a\u4e49\u72b6\u6001\uff1a\u8bbedp[u][j]\u8868\u793a\u5728\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u62e9j\u4e2a\u5ba2\u6237\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\u3002\n\n\u72b6\u6001\u8f6c\u79fb\uff1adp[u][j]=max(dp[u][j-k],dp[v][k]-w(u,v));\n\n\u6811\u5f62\u80cc\u5305\u4e00\u76f4\u6709\u4e2a\u7591\u60d1\uff0c\u4e3a\u4ec0\u4e48\u5728\u679a\u4e3e\u80cc\u5305\u5bb9\u91cf\u7684\u65f6\u5019\u8981\u53cd\u5411\u679a\u4e3e\uff0c\u6d45\u5c42\u6b21\u7684\u7406\u89e3\u5c31\u662f\u5957\u752801\u80cc\u5305\u679a\u4e3e\u4f53\u79ef\uff1b\u4f46\u662f\u7ec6\u60f3\u53c8\u4e0d\u5bf9\uff0c\u56e0\u4e3a01\u80cc\u5305\u53ea\u6709\u5728\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u7684\u65f6\u5019\u624d\u5fc5\u987b\u9006\u63a8\uff1b\u5982\u679c\u4f7f\u75282\u7ef4\u7684\u8bdd\u4e0d\u9700\u8981\uff1b\n\n\u90a3\u662f\u4e0d\u662f\u610f\u5473\u7740\u6811\u5f62\u80cc\u5305\u4e2d\u539f\u672c\u5e94\u8be5\u662f3\u7ef4\uff0c\u6eda\u52a8\u4f18\u5316\u4e3a2\u7ef4\u4e86\u5462\uff1f\uff1f\uff1f\n\n\u4ed4\u7ec6\u56de\u547301\u80cc\u5305\u7684\u72b6\u6001\u5b9a\u4e49\uff1af[i][j]\u8868\u793a\u5728\u524di\u4e2a\u7269\u54c1\u5360\u7528\u4f53\u79ef\u4e3aj\u7684\u7a7a\u95f4\u80fd\u591f\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\uff1b\u8fd9\u91cc\u6709\u4e00\u4e2a\u9650\u5b9a**\u524di\u4e2a**\uff0c\u521d\u6b21\u5b66\u4e60\u6811\u5f62\u80cc\u5305\u4e00\u770b\u4eba\u5bb6\u7684\u4ee3\u7801\u611f\u89c9\u5c31\u662f\u8fd9\u4e48\u5199\u7684\uff0c\u5e76\u6ca1\u6709\u6df1\u5165\u53bb\u601d\u8003\u4e3a\u4ec0\u4e48\u3002\n\n\u6240\u4ee5\u4eff\u716701\u80cc\u5305\u5b9a\u4e49dp[i][u][j]\u8868\u793a\u5728\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u7684\u524di\u68f5\u5b50\u6811\u4e2d\u9009\u62e9j\u4e2a\u8282\u70b9\u80fd\u591f\u83b7\u5f97\u7684\u6700\u5927\u8d39\u7528\n\ndp[i][u][j]=max(dp[i-1][u][j-k]+dp[v\u7684\u603b\u513f\u5b50\u6570][v][k]-w(u,v))\n\n\u4ee5\u4e0a\u5c31\u662f\u6811\u5f62dp\u6ca1\u6709\u6eda\u52a8\u4f18\u5316\u7684\u72b6\u6001\u65b9\u7a0b\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u6eda\u52a8\u4f18\u5316\uff1f\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u6eda\u52a8\u4f18\u5316\uff1f\n\n\u4e3a\u4ec0\u4e48\u9700\u8981\u6eda\u52a8\u4f18\u5316\uff1f\u2014\u2014\u2014\u2014\u4e0d\u6eda\u52a8\u5f88\u53ef\u80fd\u4f1aMLE \n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u6eda\u52a8\u4f18\u5316\uff1f\uff1f\uff1f\n\n1.\u5bf9\u4e8eu\u800c\u8a00\u5f88\u663e\u7136\u662f\u53ef\u4ee5\u6eda\u52a8\u4f18\u5316\u7684\uff0c\u53ea\u4e0d\u8fc7j-k<j\u8981\u4fdd\u8bc1dp[u][j-k]\u662f\u7b2ci-1\u8f6e\u7684\u503c\u5219j\u5fc5\u987b\u8981\u9006\u63a8\uff01\uff01\uff01 \n\n2.\u5173\u952e\u5728\u4e8ev\uff0c\u6eda\u52a8\u4f18\u5316\u540e\u600e\u4e48\u4fdd\u8bc1\u6bcf\u6b21dp[v][k]==dp[v\u7684\u603b\u513f\u5b50\u6570][v][k]?\n\u5176\u5b9e\u5173\u952e\u8fd8\u662f\u5728\u4e8e01\u80cc\u5305\u7684\u672c\u8d28\u7684\u7406\u89e3\uff0cdp[i][v][j]\u4ecev\u7684\u524di\u4e2a\u5b50\u6811\u4e2d\u9009\u62e9j\u4e2a\u8282\u70b9\uff0c\n\n\u9012\u63a8\u6c42\u89e3\u7684\u65f6\u5019\u662fi\u4f9d\u6b21\u589e\u5927\u7684\uff0c\u6240\u4ee5\u7ed3\u675f\u65f6\u4e00\u5b9a\u6709\"i==v\u7684\u603b\u513f\u5b50\u6570\"\n\u56e0\u6b64\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u8ba1\u7b97v\u7ed3\u675f\u540e\uff0cdp[v][k]\u4e2d\u4e00\u5b9a\u662f\u4fdd\u5b58\u7684\u4ecev\u7684\u6240\u6709\u513f\u5b50\u4e2d\u9009k\u4e2a\u8282\u70b9\u7684\u503c\uff1b\n\n\u4ece\u800c\u4fdd\u8bc1dp[v][k]==dp[v\u7684\u603b\u513f\u5b50\u6570][v][k] \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3001;\nstruct node{\n\tint to,w,nxt;\n\tnode(int a=0,int b=0,int c=0):to(a),w(b),nxt(c){}\n} g[N];\nint fir[N],cnt,money[N],n,m,dp[N][N];\nvoid add(int f,int t,int w){\n\tg[++cnt]=node(t,w,fir[f]);\n\tfir[f]=cnt;\n}\nint dfs(int u){\n\tif(u>n-m){//u\u662f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9 \n\t\tdp[u][1]=money[u];//\u53f6\u5b50\u8282\u70b9\u5219\u9009\u4e00\u4e2a\u8282\u70b9\u5f97\u5230\u6700\u5927\u5229\u76ca\u4e00\u5b9a\u662f\u8be5\u8282\u70b9\u51fa\u7684\u94b1 \n\t\tdp[u][0]=0;\n\t\treturn 1;\n\t}\n\tdp[u][0]=0;//\u4e0d\u9009\u4efb\u4f55\u8282\u70b9\u4e00\u5b9a\u6536\u76ca\u4e3a0 \n\tint leafs=0;//\u7edf\u8ba1\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u53f6\u5b50\u7684\u6570\u76ee \n\tfor(int i=fir[u];i;i=g[i].nxt){\n\t\tint v=g[i].to,w=g[i].w;\n\t\tint t=dfs(v);//t\u662fv\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u53f6\u5b50\u8282\u70b9\u6570\n\t\tleafs+=t;\n\t\tfor(int j=leafs;j>0;j--)//\u5728\u524di\u4e2a\u5b50\u6811\u4e2d\u9009\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u9700\u8981\u77e5\u9053\u524di\u4e2a\u5b50\u6811\u7684\u603b\u7ed3\u70b9\u6570\uff0c\u800c\u4e0d\u662fu\u7684\u6240\u6709\u8282\u70b9\u4e2a\u6570 \n\t\t\tfor(int k=0,kk=min(j,t);k<=kk;k++)//v\u6700\u591a\u5206\u5230\u7684\u8282\u70b9\u4e0d\u53ef\u80fd\u8d85\u8fc7\u4ed6\u7684\u53f6\u5b50\u6570\uff0c\u4e5f\u4e0d\u80fd\u8d85\u8fc7\u5176\u6240\u5728\u5b50\u6811\u8282\u70b9\u603b\u6570 \n\t\t\t\tdp[u][j]=max(dp[u][j],dp[u][j-k]+dp[v][k]-w);\n\t}\n\treturn leafs;\n}\nint main(){\n\tint x,t,w;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n-m;i++){\n\t\tcin>>x;\n\t\tfor(int j=0;j<x;j++){\n\t\t\tcin>>t>>w;\n\t\t\tadd(i,t,w);\n\t\t}\n\t}\n\tfor(int j=n-m+1;j<=n;j++)\n\t\tcin>>money[j];\n\tmemset(dp,0x8f,sizeof(dp));\n\tmemset(dp,0,sizeof(dp[0]));\n\tdfs(1);\n\tfor(int i=m;i>=0;i--){//\u5c06\u7528\u6237\u53cd\u5411\u679a\u4e3e\uff0c\u4e00\u65e6\u53d1\u73b0\u975e\u8d1f\u6570\u5c31\u8f93\u51fa\n\t\tif(dp[1][i]>=0){\n\t\t\tcout<<i<<endl;\n\t\t\tbreak;\n\t\t}\n\t} \n\treturn 0;\n}\n```",
        "postTime": 1544587460,
        "uid": 39079,
        "name": "yqw2486",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u5728\u6211\u4e4b\u524d\u5199\u768418\u7bc7\u9898\u89e3\u91cc\uff0c\u6ca1\u6709\u4e00\u4e2a\u6211\u80fd\u770b\u61c2\u7684\u3002\n\n\uff08\u6211\u592a\u5f31\u4e86\uff09\n\n\u53e6\u5916\uff0c\u6211\u771f\u7684\u4e0d\u719f\u94fe\u5f0f\u524d\u5411\u661f\uff08\u597d\u50cf\u5176\u4ed6\u9898\u89e3\u90fd\u662f\uff09\uff0c\n\n\u6211\u7528\u90bb\u63a5\u8868\u7684\u3002\uff08\u5c31\u662f2\u7ef4\u6570\u7ec4\uff09\n\n## \u6b63\u6587\n\u601d\u8def\u4e0d\u96be\u7684\uff0c**f[i][j]\u8868\u793a\u5bf9\u4e8e\u7b2ci\u4e2a\u70b9\uff0c\u8ba9j\u4e2a\u7528\u6237\u770b\u4e0a\u6bd4\u8d5b\u6700\u591a\u8d5a\u591a\u5c11\u94b1**\u3002\n\n\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u7684\u662ff[i][j]\u5f00\u59cb\u65f6\u8981\u8d1f\u65e0\u7a77\u5927\uff0cf[i][0]\u8981\u7b49\u4e8e0\u3002\n\n\u7136\u540e\u5c31dp\u7b97\u51faf[i][j],\u6700\u540e\u627e\u5230\u6700\u5927\u7684j\u4f7f\u5f97f[i][j]>=0\uff0c\u8f93\u51fa\u3002\n\n\u90a3\u4e48\uff0c\u600e\u4e48dp\u5462\uff1f~~\u6284\u9898\u89e3\u5457~~\n\n\u8fd9\u91cc\u7528\u5230\u7684\u5c31\u662f**\u5206\u7ec4\u80cc\u5305**\u4e86\u3002\n\n```\n//\u5206\u7ec4\u80cc\u5305\uff1a\u6709\u82e5\u5e72\u7ec4\u7269\u54c1\uff0c\u6bcf\u7ec4\u6700\u591a\u62ff\u4e00\u4e2a\u7269\u54c1\n//\u800c\u8fd9\u91cc\uff0c\u6bcf\u4e2a\u8282\u70b9\u662f\u4e00\u4e2a\u80cc\u5305\uff0c\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u662f\u7ec4\u6570\uff0c\n//\u6bcf\u7ec4\u7684\u9009\u62e9\u4e92\u76f8\u51b2\u7a81\uff08\u8981\u4e48\u4e0d\u7ed9\u89c2\u4f17\u770b\uff0c\u8981\u4e48\u7ed91\u4e2a\uff0c\u8981\u4e48\u7ed92\u4e2a\uff0c\u2026\uff09\n//\u6240\u4ee5\u8fd9\u91cc\u7684\u6761\u4ef6\u548c\u5206\u7ec4\u80cc\u5305\u662f\u4e00\u6837\u7684\nfor(int i=1;i<=\u7ec4\u7684\u603b\u6570;i++)\n\t  for(int j=\u6700\u5927\u80cc\u5305\u5bb9\u91cf;j>=1;j--)\n\t\tfor(int k=1;k<=\u7ec4\u91cc\u7269\u54c1\u603b\u6570;k++)\n\t\t{\n\t\t\t\u8fdb\u884cdp\n\t\t}\n```\n\u90a3\u4e48\u53ef\u4ee5\u5199\u7a0b\u5e8f\u4e86\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\nint max(int p,int q){return p>=q?p:q;}\nint n,m;\nint mo[3001][3001];//\u8282\u70b9i\u5230\u5b83\u7b2cj\u4e2a\u5b50\u8282\u70b9\u8981\u591a\u5c11\u94b1\nint K[3001]\uff1b//\u8282\u70b9i\u6709\u51e0\u4e2a\u5b50\u8282\u70b9\nint S[3001]={0};//\u4ee5\u8282\u70b9i\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u91cc\u6709\u51e0\u4e2a\u7528\u6237\nint f[3001][3001];\nint ch[3001][3001];//\u8282\u70b9i\u7684\u7b2cj\u4e2a\u5b50\u8282\u70b9\u7684\u7f16\u53f7\nbool b[3001]={0};//f[i][]\u662f\u5426\u8ba1\u7b97\u8fc7\nvoid dfs(int x)\n{\n\tb[x]=1;\n\tfor(int i=1;i<=K[x];i++)//\u6bcf\u4e00\u7ec4\uff08\u6bcf\u4e2a\u5b50\u7ed3\u70b9\uff09 \n\t  for(int j=S[x];j>=1;j--)//\u80cc\u5305\u5bb9\u91cf\uff08\u591a\u5c11\u89c2\u4f17\uff09 \n\t\tfor(int k=1;k<=S[ch[x][i]] && k<=j;k++)//\u904d\u5386\n\t\t{\n\t\t\tif(b[ch[x][i]]==0) dfs(ch[x][i]);\n\t\t\tf[x][j]=max(f[x][j],f[x][j-k]+f[ch[x][i]][k]-mo[x][i]);\n\t\t}\n}\nint SS(int x)\n{\n\tif(S[x]) return S[x];\n\tif(x>=n-m+1) return S[x]=1;\n\tfor(int i=1;i<=K[x];i++)\n\t\tS[x]+=SS(ch[x][i]);\n\treturn S[x];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(f,-0x3f,sizeof(f));\n\tfor(int i=1;i<=n-m;i++)\n\t{\n\t\tscanf(\"%d\",&K[i]);\n\t\tfor(int j=1;j<=K[i];j++)\n\t\t\tscanf(\"%d%d\",&ch[i][j],&mo[i][j]);\n\t}\n\tfor(int i=n-m+1;i<=n;i++) scanf(\"%d\",&f[i][1]),b[i]=1;\n\tfor(int i=1;i<=n;i++) f[i][0]=0;\n\tSS(1);//\u8ba1\u7b97S[i]\n\tdfs(1);//\u8ba1\u7b97f\n\tfor(int i=m;i>=1;i--)\n\t\tif(f[1][i]>=0)\n\t\t{\n\t\t\tprintf(\"%d\",i);\n\t\t\tbreak;\n\t\t}\n\treturn 0;\n}\n```\n## \u540e\u8bb0\uff08fei hua\uff09\n\u4e3a\u65b9\u4fbf\u4e2a\u4eba\u7edf\u8ba1\u9700\u8981\uff0c\n\n\u5982\u679c\u60a8\u770b\u61c2\u4e86\uff0c\u8bf7\u70b9\u8d5e\uff1b\n\n\u5982\u679c\u60a8\u60f3\u4e00\u60f3\u540e\u61c2\u4e86\uff0c\u8bf7\u70b9\u8d5e\uff1b\n\n\u5982\u679c\u60a8\u6ca1\u770b\u61c2\uff0c\u8bf7\u5728\u8ba8\u8bba\u533a\u91cc\u95ee\u3002",
        "postTime": 1554647308,
        "uid": 112605,
        "name": "guoxinyugz",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "[\u9996\u53d1\u4e8e\u535a\u5ba2\u56edSantiego](https://www.cnblogs.com/santiego/p/10198971.html)\n\n> \u5e72\u900f\u4e00\u9053\u9898\n\n\u5f88\u591a\u9898\u89e3\u63d0\u5230\u7684dp\u65b9\u7a0b\u90fd\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u904d\u5386\u987a\u5e8f\u53cadp\u65b9\u7a0b\u7684\u8f6c\u79fb\u7b49\uff0c\u76f4\u63a5\u629b\u51fa\u4e00\u4e2a\u88ab\u4f18\u5316\u8fc7\u4e00\u7ef4\u7684\u4e8c\u7ef4dp\u8f6c\u79fb\u65b9\u7a0b\uff0c\u672c\u849f\u84bb\u5728\u6b64\u60f3\u8981\u518d\u8865\u5145\u4e00\u4e0b\u3002\n\n\u8fd9\u9053\u9898\u672c\u8d28\u5c31\u662f\u4e2a\u80cc\u5305\u3002\u8fd9\u9053\u9898dp\u6709\u70b9\u5947\u602a\uff0c\u6700\u7ec8\u7b54\u6848\u5e76\u4e0d\u662fdp\u503c\uff0c\u800c\u662f\u6700\u540e\u904d\u5386\u5bfb\u627e\u90a3\u4e2a\u5408\u6cd5\u4e14\u6700\u4f18\u7684$i$\u4f5c\u4e3a\u7b54\u6848\u3002dp\u503c\u5b58\u7684\u662f\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u6210\u672c\uff0c\u6240\u4ee5\u5408\u6cd5\u60c5\u51b5\u5373\u5f53\u6210\u672c\u503c\u5927\u4e8e\u7b49\u4e8e0\uff0c\u4e0d\u4e8f\u672c\u7684\u65f6\u5019\u3002\n\n\u56e0\u4e3adp\u7ef4\u62a4\u7684\u662f\u6210\u672c\uff0c\u5e76\u4e14\u6309\u7167\u80cc\u5305\u601d\u60f3\uff0c\u5b58\u5728\u8ba9\u8fd9\u4e2a\u7528\u6237\u63a5\u5165\u548c\u4e0d\u8ba9\u8fd9\u4e2a\u7528\u6237\u63a5\u5165\u4e24\u79cd\u51b3\u7b56\uff0c**\u7c7b\u6bd4\u80cc\u5305**\uff0c\u6240\u4ee5\u5bb9\u6613\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u539f\u59cb\u65b9\u7a0b\uff1a\n\n$dp[s][i][j]=max \\{ dp[s][i-1][j-k]+dp[w][size_w][k]-cost[s][w](w \\in son[s]) \\}$\n\n$dp[s][i][j]$\u8868\u793a\u5f53\u524d\u8282\u70b9$s$\u7684\u524d$i$\u4e2a\u513f\u5b50\u4e2d\u9009\u53d6$j$\u4e2a\u7528\u6237\u7684\u6210\u672c\uff0c\u51b3\u7b56\u5f53\u524d\u513f\u5b50\u63a5\u5165$k$\u4e2a\u7528\u6237\u3002\u4f46\u662f\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u50cf01\u80cc\u5305\u90a3\u6837\u4f18\u5316\u4e00\u7ef4$i$\uff0c\u53ea\u8981\u6211\u4eec\u9012\u589e\u904d\u5386$i$\uff0c\u9012\u51cf\u904d\u5386$j$\u5373\u53ef\uff0c\u56e0\u4e3a\u8fd9\u6837$i-1$\u8f6e\u7684$dp[s][i-1][j-k]$\u72b6\u6001\u624d\u6ca1\u6709\u88ab\u7b2c$i$\u8f6e\u7684$dp[s][i][j-k]$\u72b6\u6001\u8986\u76d6\uff0c\u5e76\u4e14$dp[w][k]$\u6700\u7ec8\u7684\u503c\u4e5f\u6b63\u597d\u5c31\u662f$dp[w][size_w][k]$\u3002\n\n\u6700\u7ec8\u4e8c\u7ef4\u7684dp\u65b9\u7a0b\uff1a\n$dp[s][j]=max \\{ dp[s][j-k]+dp[w][k]-cost[s][w](w \\in son[s]) \\}$\n\n*192ms AC Code:*\n\n```cpp\n#include <cstdio>\nusing namespace std;\n#define MAXN 3003\n#define MAX(A,B) ((A)>(B)?(A):(B))\n#define INF 0x3ffffff\nstruct e{\n    int w,v,nxt;\n} edge[10000010]; //\u8fb9\u6570\u4e00\u5b9a\u8981\u5f00\u5927\uff01\nint dp[MAXN][MAXN],head[MAXN],sz[MAXN];\nint n,m,cnt_e;\ninline void adde(int u, int v, int w){\n    edge[++cnt_e].w=w;\n    edge[cnt_e].v=v;\n    edge[cnt_e].nxt=head[u];\n    head[u]=cnt_e;\n}\nint solve(int x, int fa){\n    if(x>=n-m+1&&x<=n) //\u662f\u5426\u4e3a\u7528\u6237\u7aef\n        return sz[x]=1;\n    for(register int i=head[x];i;i=edge[i].nxt){ //\u201d\u9012\u589e\u201d\u904d\u5386\u513f\u5b50i\n        sz[x]+=solve(edge[i].v, x); //\u6811\u5f62dp\u901a\u5e38\u81ea\u4e0b\u800c\u4e0a\u66f4\u65b0\n        for(register int j=sz[x];j>=0;--j) //\u679a\u4e3e\u72b6\u6001\n            for(register int k=0;k<=sz[edge[i].v];++k)  //\u679a\u4e3e\u51b3\u7b56\uff0c\u5f53\u524d\u513f\u5b50\u53d6\u51e0\u4e2a\u7528\u6237\n                dp[x][j]=MAX(dp[x][j], dp[x][j-k]+dp[edge[i].v][k]-edge[i].w);\n        //dp[s][i][j]=max{dp[s][i-1][j-k]+dp[w][size_w][k]-cost[s][w]} \u539f\u59cb\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n    }\n    return sz[x];\n}\nint main() {\n    scanf(\"%d %d\", &n, &m);\n    for(register int i=0;i<=n;i++)\n        for(register int j=0;j<=m;j++)\n            dp[i][j]=-INF;\n    for (int i=1;i<=n;i++) dp[i][0]=0; //\u6ce8\u610f\u521d\u59cb\u5316\uff01\n    for(int i=1;i<=n-m;++i){\n        int sz;\n        scanf(\"%d\", &sz);\n        for(int j=1;j<=sz;++j){\n            int a,c;\n            scanf(\"%d %d\", &a, &c);\n            adde(i, a, c); //\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u8fb9\n        }\n    }\n    for(int i=n-m+1;i<=n;++i)\n        scanf(\"%d\", &dp[i][1]);\n    solve(1,0);\n    for(register int i=m;i>=0;--i) //\u9012\u51cf\u904d\u5386\u627e\u5230\u7b2c\u4e00\u4e2a\u5408\u6cd5\u503c\n        if(dp[1][i]>=0){\n            printf(\"%d\\n\", i);\n            break;\n        }\n    return 0;\n}\n```\n\n\u9700\u8981\u6ce8\u610f\uff1a\n\n- \u94fe\u5f0f\u524d\u5411\u661f\u8fb9\u6570\u4e0d\u662f$N$\uff0c\u4e00\u5b9a\u8981\u5f00\u5927\n- dp\u7684\u904d\u5386\u987a\u5e8f\u4e00\u5b9a\u8981\u6b63\u786e\uff0c\u56e0\u4e3a\u4f60\u5df2\u7ecf\u4f18\u5316\u4e86\u4e00\u7ef4$i$\n- \u7528\u6237\u7aef\u652f\u4ed8\u7684\u94b1$w$\u5e94\u8be5\u8868\u793a\u4e3a$dp[n][1]=w$\n- dp\u4e00\u5b9a\u8981\u7ed3\u5408dp\u65b9\u7a0b\u521d\u59cb\u5316",
        "postTime": 1546144931,
        "uid": 63896,
        "name": "Santiego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u80cc\u5305\u7c7b\u6811\u5f62dp\u3002\u672c\u9898\u9700\u8981\u8fd0\u7528\u5206\u7ec4\u80cc\u5305\u6a21\u578b\u3002\n\n\u9996\u5148\u5b9a\u4e49\u72b6\u6001\uff1a$f[u][i]$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\uff0c\u9009\u62e9$i$\u4e2a\u7528\u6237\u65f6\u7684\u6700\u5927\u5229\u6da6\u3002\u7531\u4e8e\u7535\u89c6\u516c\u53f8\u53ef\u80fd\u4e8f\u672c\uff0c\u56e0\u6b64$f$\u6570\u7ec4\u5e94\u8d4b\u6781\u5c0f\u521d\u503c\u3002\n\n\u53ef\u4ee5\u5c06\u9009\u62e9\u7684\u7528\u6237\u4e2a\u6570\u770b\u4f5c\u80cc\u5305\u7684\u5bb9\u91cf\u7ef4\u5ea6\uff0c\u5c06\u83b7\u5f97\u7684\u5229\u6da6\u770b\u4f5c\u80cc\u5305\u7684\u4ef7\u503c\u7ef4\u5ea6\u3002\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u5982\u4e0b\u7684\u72b6\u6001\u8f6c\u79fb\uff1a\n$$\nf[u][i]=max_{v\\in son(u)}\\{f[u][i-j]+f[v][j]-w\\}\n$$\n\u5176\u4e2d\uff0c$v$\u4e3a$u$\u7684\u5b50\u8282\u70b9\uff0c$w$\u4e3a\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u3002\u5728$u$\u6bcf\u4e2a\u5b50\u8282\u70b9\u4e0a\u6709\u8bb8\u591a\u201c\u7269\u54c1\u201d\uff0c\u201c\u7269\u54c1\u201d\u603b\u6570\u5373\u4e3a\u4ee5$v$\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\u7528\u6237\u7684\u4e2a\u6570\uff1b\u6bcf\u4e2a\u201c\u7269\u54c1\u201d\u6240\u5177\u6709\u7684\u4ef7\u503c\u5373\u4e3a\u5176\u6700\u5927\u5229\u6da6\uff0c\u5373$f[v][j]$\u3002\u540c\u65f6\u4e0d\u5e94\u5ffd\u7565\u8fb9\u6743\u5bf9\u5229\u6da6\u5e26\u6765\u7684\u5f71\u54cd\u3002\n\n\u6ce8\u610f\u7ec6\u8282\u5904\u7406\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct Edge{\n    int v,w,nxt;\n}mem[3005*2];\nint head[3005],cnt;\nint size[3005];\n\ninline void AddEdge(int u,int v,int w){\n    mem[++cnt].v=v;\n    mem[cnt].w=w;\n    mem[cnt].nxt=head[u];\n    head[u]=cnt;\n}\n\nint N,M;\nint leaf[3005];\nint f[3005][3005];\n\ninline void dfs(int u){\n    if(leaf[u]){\n        f[u][1]=leaf[u];\n        size[u]=1;\n        return;\n    }\n    for(register int i=head[u];i;i=mem[i].nxt){\n        int v=mem[i].v,w=mem[i].w;\n        dfs(v);\n        size[u]+=size[v];\n        for(register int j=M;j>=1;--j)\n            for(register int k=0;k<=min(size[v],j);++k)\n                f[u][j]=max(f[u][j],f[u][j-k]+f[v][k]-w);\n    }\n}\n\nint main(){\n    memset(f,0xcf,sizeof(f));\n    scanf(\"%d%d\",&N,&M);\n    for(register int i=1;i<=N-M;++i){\n        int k;\n        scanf(\"%d\",&k);\n        for(register int j=1;j<=k;++j){\n            int a,c;\n            scanf(\"%d%d\",&a,&c);\n            AddEdge(i,a,c);\n        }\n    }\n    for(register int i=1;i<=M;++i) scanf(\"%d\",&leaf[N-M+i]);\n    for(register int i=1;i<=N;++i) f[i][0]=0;\n    dfs(1);\n    for(register int i=M;i>=1;--i){\n        if(f[1][i]>=0){\n            printf(\"%d\",i);\n            return 0;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1556185156,
        "uid": 116851,
        "name": "_\u98ce\u4f11\u4f4f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\n# \u5199\u5728\u524d\u9762\n>\u6811\u5f62DP\u4e00\u822c\u5c31\u662f$f[i][j]$\u8868\u793a\u4ee5\u7b2c$i$\u4e2a\u7ed3\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c$j$\u4e2a\u513f\u5b50\u6216\u8005\u4ef7\u503c\u4e3a$j$\uff0c\u5728\u8fd9\u9053\u9898\u91cc\u9762\uff0c$j$\u8868\u793a\u5728\u8fd9\u4e2a\u5b50\u6811\u4e2d\u9009\u53d6$j$\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\n\n\u5728AC\u8fd9\u9053\u9898\u4e4b\u524d\uff0c\u770b\u8fc7\u65e0\u6570\u9898\u89e3\uff0c\u8fd9\u53e5\u8bdd\u662f\u7b14\u8005\u8ba4\u4e3a\u5199\u7684\u6700\u7cbe\u5f69\u7684\u3002\n\n\n# \u72b6\u6001\n\n\u8003\u8651\u4e00\u949f\u72b6\u6001\u8bbe\u8ba1\u65b9\u5f0f$f[i][j]$\u8868\u793a\u5728\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u53d6\u6ee1\u8db3$j$\u4e2a\u201c\u53f6\u5b50\u201d\uff0c\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n# \u65b9\u7a0b\n\n$$f[i][j] = \\max_{k = 0}^{k = Size_{exNode}}(f[i][j - k] + f[exNode][k]) - W_x$$\n\n - $f[i][j]$\u8868\u793a\u5728\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u62e9\u5b50\u6811\u4e2d\u7684$j$\u4e2a\u53f6\u5b50\u7ed3\u70b9\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002\n - $Size_k$\u8868\u793a\u5b50\u6811$k$\u7684\u5927\u5c0f\u3002\n - $exNode$\u8868\u793a$i$\u7684\u513f\u5b50\u7ed3\u70b9\u3002\n - $W_x$\u8868\u793a\u8fb9\u6743\u3002\n\n\u5c31\u662f\u8bf4\uff0c\u9009\u62e9\u4e00\u90e8\u5206\u7684$j$\uff08\u9009\u62e9\u6ee1\u8db3\u53f6\u5b50\u7ed3\u70b9\u6570\uff09\u5206\u914d\u7ed9$exNode$ $k$\u4e2a\uff0c\u5176\u4f59\u5206\u914d\u7ed9\u5176\u4ed6\u7ed3\u70b9\u3002\u8fd9\u6837\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u3002\n\n\u601d\u8003\uff0c\u5982\u679c\u8ba9\u513f\u5b50\u7ed3\u70b9$exNode$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u201c\u6ee1\u8db3\u201d$k$\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff08\u7528\u6237\u7aef\uff09\u7684\u9700\u6c42\uff0c\u90a3\u4e48\u4f1a\u83b7\u5f97$f[exNode][k]$\u7684\u5229\u6da6\uff0c\u518d\u51cf\u53bb\u4fe1\u53f7\u4ece$i$\u4f20\u5230$exNode$\u7684\u82b1\u8d39$W_x$\uff0c\u518d\u52a0\u4e0a\u5176\u4ed6\u7ed3\u70b9\u83b7\u5f97\u7684\u5229\u6da6$f[i][j - k]$\uff0c\u5c31\u80fd\u5f97\u5230\u8ba9$exNode$\uff0c\u4e2d\u7684$k$\u4e2a\u53f6\u5b50\u7ed3\u70b9\u6ee1\u8db3\u7684\u5229\u6da6\u3002\n\n# \u4e3a\u4ec0\u4e48\u662f\u5206\u7ec4\u80cc\u5305\n\u5206\u7ec4\u80cc\u5305\u6307\u5728\u5f88\u591a\u7ec4\u4e2d\u53ea\u80fd\u9009\u4e00\u79cd\u7269\u54c1\uff0c\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\n\n\u56de\u5230\u672c\u9898\uff0c\u7ec4\u5c31\u662f\u6bcf\u4e00\u68f5\u5b50\u6811\uff0c\u7269\u54c1\u5176\u5b9e\u5e76\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u800c\u662f\u53f6\u5b50\u8282\u70b9\u7684\u6ee1\u8db3\u4e2a\u6570\u3002\n\n\u6bd4\u5982\uff0c\u5728\u4ee5\u7ed3\u70b9$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff08\u7b2c$u$\u7ec4\uff09,\u6709\u4e00\u4e9b\u7269\u54c1\uff0c\u8fd9\u4e9b\u7269\u54c1\u662f\uff1a\n - \u6ee1\u8db3\u4ee5\u7ed3\u70b9$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c$1$\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u9700\u6c42\u3002\n - \u6ee1\u8db3\u4ee5\u7ed3\u70b9$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c$2$\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u9700\u6c42\u3002\n - \u6ee1\u8db3\u4ee5\u7ed3\u70b9$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c$3$\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u9700\u6c42\u3002\n - \u6ee1\u8db3\u4ee5\u7ed3\u70b9$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c$4$\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u9700\u6c42\u3002\n - \u6ee1\u8db3\u4ee5\u7ed3\u70b9$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c$Size_v$\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u9700\u6c42\u3002\n\n\u6bcf\u4e00\u7ec4\u7684\u5404\u4e2a\u5143\u7d20\u90fd\u662f\u4e92\u76f8\u77db\u76fe\u53ea\u80fd\u9009\u4e00\u79cd\u7684\u3002\n\n\u8fd9\u5c31\u662f\u5206\u7ec4\u80cc\u5305\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u90fd\u8981\u8fdb\u884c\u5206\u7ec4\u80cc\u5305\u3002\n\n\u5bf9\u4e8e\u6269\u5c55\u7ed3\u70b9\u65f6\uff0c\u5047\u5982\u5f53\u524d\u7ed3\u70b9\u65f6$now$\uff0c \u6269\u5c55\u8282\u70b9\u662f$exNode$\u3002\n\n\u5e94\u8be5\u4f7f\u7528$Size_{exNode}$\u7684\u6bcf\u4e00\u4e2a\u53ef\u80fd\u6ee1\u8db3\u7684\u53d6\u503c\u66f4\u65b0$f[now][j]$\uff08\u53d6\u6700\u5927\u503c\uff08\u5229\u6da6\u4e00\u5b9a\u8981\u6700\u5927\u554a\uff09\uff09\n```cpp\n    int &sum = lef[now];//\u8868\u793a\u5b50\u6811\u5927\u5c0f\n    for(_R int i = head[now];i;i = edge[i].nxt) {\n        int exNode = edge[i].node;\n        int t = dfs(exNode); sum += t;\n        for(_R int j = lef[now];j >= 0;j--) {\n            for(_R int k = 0;k <= lef[exNode];k++) {\n            \tif(j - k < 0)  continue;\n                dp[now][j] = max(dp[now][j], dp[now][j - k] + dp[exNode][k] - edge[i].w);\n            }\n\t\t\n```\n\n# \u5173\u4e8e`for(int j = lef[now];j >= 0;j--)`\n\u5012\u5e8f\u679a\u4e3e\u7684\u539f\u56e0\u540c`0-1\u80cc\u5305`\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u540e\u7684\u65b9\u6cd5\u3002\n\n\u9632\u6b62\u591a\u6b21\u8f6c\u79fb\uff0c\u4e5f\u5c31\u662f\u9632\u6b62\u5728\u540c\u4e00\u7ec4\u91cc\u9009\u91cd\u590d\u7684\u5143\u7d20\u3002\n\n\u5373\uff0c\n\u4fdd\u8bc1\u6bcf\u4e00\u6b21$dp[now][j - k]$\u7684\u53d6\u503c\u90fd\u662f\u4e0a\u4e00\u4e2a\u513f\u5b50\u7ed3\u70b9\u66f4\u65b0\u5b8c\u7b54\u6848\u5269\u4e0b\u7684\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u7f8e\u5267\u9053\u5fb7\u513f\u5b50\u7ed3\u70b9\u66f4\u65b0\u7b54\u6848\u4e4b\u540e\u7684\u6307\u3002\n\n# \u6700\u540e\u7684\u6700\u540e\n\u9898\u76ee\u6ca1\u6709\u95ee\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\uff0c\u800c\u662f\u5e0c\u671b\u66f4\u591a\u7684\u7528\u6237\u80fd\u591f\u7528\u4e0a\u7535\u89c6\uff0c\u4e8e\u662f\u53ea\u8981\u7535\u89c6\u53f0\u4e0d\u4e8f\u672c\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u3002\n\n\u4ece\u6253\u5230\u5c0f\u679a\u4e3e$f[1][i]$\u627e\u4e00\u4e2a\u6700\u5927\u7684$i$\u4f7f$f[1][i] >= 0$\n\n# Codes\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#define _R register\n#define inf 0x7fffffff\nusing namespace std;\nconst int _ = 3100;\ninline int read()\n{\n    char c = getchar(); int sign = 1; int x = 0;\n    while(c > '9' || c < '0') { if(c=='-')sign = -1; c = getchar(); }\n    while(c <= '9' && c >= '0') { x *= 10; x += c - '0'; c = getchar(); }\n    return x * sign;\n}\nint n, m;\nint nodeVal[_];\nint dp[_][_];\n\nint head[_];\nstruct edge{\n    int node;\n    int w;\n    int nxt;\n}edge[_];\nint tot = 0;\n\nvoid add(int u, int v, int w){\n    edge[++tot].nxt = head[u];\n    head[u] = tot;\n    edge[tot].node = v;\n    edge[tot].w = w;\n}\nint lef[_];\nint dfs(int now)\n{\n    if(now >= n - m + 1) return dp[now][1] = nodeVal[now], lef[now] = 1;\n    int &sum = lef[now];\n    for(_R int i = head[now];i;i = edge[i].nxt) {\n        int exNode = edge[i].node;\n        int t = dfs(exNode); sum += t;\n        for(_R int j = lef[now];j >= 0;j--) {\n            for(_R int k = 0;k <= lef[exNode];k++) {\n            \tif(j - k < 0)  continue;\n                dp[now][j] = max(dp[now][j], dp[now][j - k] + dp[exNode][k] - edge[i].w);\n            }\n\t\t}\n    }\n    return lef[now];\n}\nint main()\n{\n    n = read(), m = read();\n    for(_R int i = 1;i <= n - m;i++){\n        int k = read();\n        for(_R int j = 1;j <= k;j++){\n            int A = read();\n            int C = read();\n            add(i, A, C);\n        }\n    }\n    for(_R int i = n - m + 1;i <= n;i++){\n        nodeVal[i] = read();\n    }\n    memset(dp, -100, sizeof(dp));\n    for(_R int i = 1;i <= n;i++) dp[i][0] = 0;\n    dfs(1);\n    for(_R int i = m;i >= 0;i--)\n        if(dp[1][i] >= 0){\n            return printf(\"%d\\n\", i), 0;\n        }\n    return 0;\n}\n```",
        "postTime": 1572281197,
        "uid": 44615,
        "name": "ShuYuMo",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u505a\u8fc7\u6811\u4e0a\u80cc\u5305\u7684\u540c\u5b66\u5e94\u8be5\u4f1a\u89c9\u5f97\u8fd9\u9898\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0d\u8fc7\u5982\u679c\u662f\u6ca1\u6709\u505a\u8fc7\u7684\u540c\u5b66\u7684\u8bdd\u53ef\u80fd\u5c31...\uff08~~\u6bd4\u5982\u6211~~\uff09\n\n\u9996\u5148\u7ed9\u5927\u5bb6\u63a8\u8350\u4e00\u9053\u6811\u4e0a\u80cc\u5305\u5165\u95e8\u9898\uff1a[poj2486](http://poj.org/problem?id=2486) \u4ee5\u53ca\u8bb2\u89e3\uff1a[qwq](http://www.cnblogs.com/zub23333/p/8758891.html) \n\n\u90a3\u4e48\u8fd9\u9053\u9898\u600e\u4e48\u505a\u5462\uff1f\n\n\u6211\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u5148\u8d2a\u5fc3\u5904\u7406\u6536\u5165\u5927\u4e8e\u82b1\u8d39\u7684\u5b50\u6811\uff0c\u7136\u540e\u7528f[i][j]\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u6240\u4ee3\u8868\u7684\u5b50\u6811\u5728\u82b1\u8d39\u4e3aj\u65f6\u80fd\u591f\u5f00\u901a\u7684\u6700\u591a\u7684\u7528\u6237\u6570\u76ee\u3002\u7136\u540e\u53d1\u73b0\u7b2c\u4e8c\u7ef4\u4e0d\u77e5\u9053\u8303\u56f4\uff0c\u8fde\u6570\u7ec4\u5f00\u591a\u5927\u90fd\u4e0d\u77e5\u9053=-= \n\n\u6240\u4ee5\u6211\u4eec\u53ea\u597d\u6362\u4e00\u79cd\u601d\u8def\uff0c\u8bbef[i][j]\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u8282\u70b9\u6240\u4ee3\u8868\u7684\u5b50\u6811\u5728\u5f00\u901aj\u4e2a\u7528\u6237\u65f6\u7684\u6700\u5927\u5229\u6da6\uff08\u5373\u7528\u6237\u7f34\u8d39-\u4f20\u8f93\u82b1\u8d39\uff09\u3002\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f  f[i][j] = max{f[v][k]+f[i][j-k]-e[i].val} \uff08\u7279\u6b8a\u5730\uff0c\u5f53j\u4e3a0\u65f6\u51fd\u6570\u503c\u4e3a0\uff1b\u53f6\u5b50\u8282\u70b9x\u7684f[x][1]=w[x]\uff09 \uff08v\u8868\u793ai\u7684\u5b50\u8282\u70b9\uff0cval\u4e3a\u5f00\u901a\u4e00\u6761\u8fb9\u7684\u82b1\u8d39\uff0cw[i]\u4e3ai\u7528\u6237\u7f34\u8d39\u6570\u989d\uff09 \n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define LL long long\n#define RI register int\nusing namespace std;\nconst int INF = 0x7ffffff ;\nconst int N = 3000 + 10 ;\n\ninline int read() {\n\tint k = 0 , f = 1 ; char c = getchar() ;\n\tfor( ; !isdigit(c) ; c = getchar())\n\t  if(c == '-') f = -1 ;\n\tfor( ; isdigit(c) ; c = getchar())\n\t  k = k*10 + c-'0' ;\n\treturn k*f ;\n}\nstruct Edge {\n\tint to, next, val ;\n}e[N<<1] ;\nint n, m ; int head[N], f[N][N], w[N] ;  // f\u8bb0\u5f55\u6700\u5927\u5229\u6da6 \ninline void add_edge(int x,int y,int z) {\n\tstatic int cnt = 0 ;\n\te[++cnt].to = y, e[cnt].next = head[x], head[x] = cnt, e[cnt].val = z ;\n}\n\nint dfs(int x,int fa) {\n\tf[x][0] = 0 ;\n\tif(x > n-m) {\n\t\tf[x][1] = w[x] ; return 1 ;\n\t}\n\tint tot = 0 ; \n\tfor(int i=head[x];i;i=e[i].next) {\n\t\tint y = e[i].to ; if(y == fa) continue ;\n\t\ttot += dfs(y,x) ;\n\t\tfor(int j=tot;j;j--) {\n\t\t\tfor(int k=0;k<=j;k++) {\n\t\t\t\tf[x][j] = max(f[x][j],f[y][k]+f[x][j-k]-e[i].val) ;\n\t\t\t}\n\t\t}\n\t}\n\treturn tot ;\n}\n\nint main() {\n\tn = read(), m = read() ;\n\tint mm = n-m ;\n\tfor(int i=1;i<=mm;i++) {\n\t\tint k = read() ;\n\t\tfor(int j=1;j<=k;j++) {\n\t\t\tint x = read(), z = read() ;\n\t\t\tadd_edge(i,x,z) ; add_edge(x,i,z) ;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) for(int j=1;j<=n;j++) f[i][j] = -INF ;\n\tfor(int i=n-m+1;i<=n;i++) w[i] = read() ;\t\n\tdfs(1,0) ;\n\tfor(int i=m;i>=0;i--) {\n\t\tif(f[1][i] >= 0) {\n\t\t\tprintf(\"%d\",i) ; return 0 ;\n\t\t}\n\t}\n}\n```",
        "postTime": 1523258125,
        "uid": 27388,
        "name": "zubizakeli",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u505a\u7684\u7b2c\u4e00\u9053\u6811\u4e0a\u80cc\u5305\u95ee\u9898\uff0c\u5199\u7bc7\u9898\u89e3\u603b\u7ed3\u4e00\u4e0b\u3002\u5982\u679c\u6211\u5199\u7684\u54ea\u91cc\u4e0d\u5bf9\uff0c\u6b22\u8fce\u6307\u51fa\u3002\n\n## \u5173\u4e8e\u9898\u610f\n\n[\u8ba8\u8bba\u533a](/discuss/show/139362)\u91cc\u6709\u4eba\u60f3\u7528\u7b80\u5355\u7684\u8d2a\u5fc3\u505a\uff08\u5f53\u7136\u9519\u4e86\uff09\uff0c\u539f\u56e0\u662f\u6ca1\u6709\u8bfb\u6e05\u9898\u3002\n\n\u9898\u76ee\u8981\u6c42\u7684\u662f**\u7528\u6237\u6700\u591a**\uff0c\u4e0d\u4e8f\u672c\u53ea\u662f\u9650\u5b9a\u6761\u4ef6\uff0c**\u800c\u4e0d\u662f\u8981\u6c42\u6536\u76ca\u6700\u5927**\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u96be\u5ea6\u63d0\u9ad8\u4e86\u4e00\u4e9b\u3002\n\n## \u72b6\u6001\u5b9a\u4e49\n\n\u5148\u8bbe $f_{u}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5728\u4e0d\u4e8f\u672c\u7684\u60c5\u51b5\u4e0b\u6700\u591a\u80fd\u64ad\u7ed9\u591a\u5c11\u7528\u6237\u3002\n\n\u4f46\u662f\u7531\u4e8e\u8f6c\u64ad\u9700\u8981\u8d39\u7528\uff0c\u6240\u4ee5**\u672c\u6765\u4e0d\u4e8f\u672c\u7684\u53ef\u4ee5\u53d8\u5f97\u4e8f\u672c\uff0c\u672c\u6765\u4e8f\u672c\u7684\u52a0\u4e0a\u53e6\u4e00\u68f5\u5b50\u6811\u53ef\u4ee5\u4e0d\u4e8f\u672c**\uff0c\u72b6\u6001\u5b9a\u4e49\u5f97\u4e0d\u597d\u3002\n\n\u770b\u6765\u5f97\u518d\u52a0\u4e00\u7ef4\u3002\u8c01\u4e5f\u4e0d\u4f1a\u60f3\u52a0\u4e00\u4e2a\u8d39\u7528\u7684\u7ef4\u5ea6\uff08\u56e0\u4e3a\u503c\u57df\u592a\u5927\uff09\uff0c\u9700\u8981\u52a0\u7528\u6237\u6570\u7684\u7ef4\u5ea6\u3002\n\n\u8bbe $f_{u,j}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u8f6c\u64ad\u7ed9 $j$ \u4e2a\u7528\u6237\uff0c\u6700\u5927\u6536\u76ca\u662f\u591a\u5c11\u3002\n\n\u72b6\u6001\u6ca1\u95ee\u9898\u4e86\uff0c\u4f46\u662f\u8f6c\u79fb\u592a\u9ebb\u70e6\u4e86\uff1a\u4f60\u5f97\u628a $j$ \u5206\u6210\u8bb8\u591a\u4efd\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u5206\u6cd5\u5206\u522b\u6c42\u548c\uff0c\u53d6\u6700\u503c\u3002\n\n\u4e8e\u662f\u518d\u52a0\u4e00\u7ef4\uff1a\u8bbe $f_{i,u,j}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u4ec5\u7528\u524d $i$ \u68f5\u5b50\u6811\uff0c\u8f6c\u64ad\u7ed9 $j$ \u4e2a\u7528\u6237\uff0c\u6700\u5927\u6536\u76ca\u662f\u591a\u5c11\u3002\n\n## \u72b6\u6001\u8f6c\u79fb\n\n\u8fd9\u5c31\u8981\u7528\u5230\u80cc\u5305\u4e86\u3002\u636e\u8bf4\u662f\u5206\u7ec4\u80cc\u5305\uff0c\u4e0d\u7ba1\u4ec0\u4e48\u80cc\u5305\u4f1a\u7528\u5c31\u884c\uff0c~~\u5176\u5b9e\u662f\u6211\u592a\u83dc\u4e86\u4e0d\u77e5\u9053~~\u3002\n\n\u8bbe\u7b2c $i$ \u68f5\u5b50\u6811\u8f6c\u64ad\u7ed9\u4e86 $k$ \u4e2a\u7528\u6237\uff0c\u7b2c $i$ \u68f5\u5b50\u6811\u7684\u6839\u662f $v$\uff0c$v$ \u6709 $sv$ \u4e2a\u5b50\u7ed3\u70b9\u3002\n\n\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u5f0f\uff1a\n\n$$\\large f_{i,u,j}=\\max(f_{i-1,u,j-k}+f_{sv,v,k}-\\mathtt{cost})$$\n\n\u679a\u4e3e $k$\uff0c\u53d6\u6700\u5927\u503c\uff0c\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\n\n## \u4f18\u5316\n\n\u8981\u662f\u771f\u5199\u51fa\u6765\uff0c\u5c31\u4f1a\u53d1\u73b0\uff0c`f` \u6570\u7ec4\u5f00\u4e0d\u4e0b\u3002\u4e8e\u662f\u60f3\u5230\u7528\u6eda\u52a8\u6570\u7ec4\u6eda\u6389 $i$ \u7ef4\u3002\n\n$$\\large f_{u,j}=\\max(f_{u,j-k}+f_{v,k}-\\mathtt{cost})$$\n\n\u4f46\u662f\u771f\u80fd\u8bf4\u6eda\u5c31\u6eda\u5417\uff1f\u8fd9\u91cc $f_{u,j-k}$ \u5176\u5b9e\u5df2\u7ecf\u662f $f_{i,u,j-k}$ \u4e86\uff0c\u800c\u4e0d\u662f $f_{i-1,u,j-k}$\uff0c\n\n\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u8981\u5148\u5907\u4efd\u4e00\u4e0b\u518d\u8ba1\u7b97\u3002\n\n## \u9650\u5b9a\n\n\u8bbe $sum$ \u4e3a\u524d $i$ \u68f5\u5b50\u6811\u7684\u603b\u7528\u6237\u6570\uff08\u4e0d\u5305\u62ec\u8f6c\u64ad\u70b9\uff09\uff0c$cnt$ \u4e3a\u7b2c $i$ \u68f5\u5b50\u6811\u7684\u7528\u6237\u6570\u3002\n\n$j$ \u53ef\u4ee5\u662f $[0,sum]$ \u5185\u7684\u4efb\u610f\u6574\u6570\uff0c\u4f46\u662f $k$ \u5c31\u6709\u8bf8\u591a\u9650\u5236\uff1a\n\n- \u9996\u5148\uff0c$k$ \u5e94\u8be5\u4f4d\u4e8e $[0,cnt]$\uff1b\n- $k$ \u5e94\u5c0f\u4e8e\u7b49\u4e8e $j$\uff1b\n- $k$ \u4e0d\u80fd\u592a\u5c0f\uff0c\u628a\u8fc7\u591a\u7684\u7528\u6237\u201c\u63a8\u5378\u201d\u7ed9\u524d $i-1$ \u68f5\u5b50\u6811\uff0c\u6574\u7406\u5f97 $k\\ge j+cnt-sum$\u3002\n\n\u5f97\u5230 $\\max(0,j+cnt-sum)\\le k\\le\\min(cnt,j)$\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<memory.h>\nusing namespace std;\nstruct Edge{\n\tint to,val;//to \u662f\u7ec8\u70b9\uff0cval \u662f\u5f00\u9500\n\tEdge(int t,int v)//\u6784\u9020\u51fd\u6570\n\t{ to=t;val=v; }\n};\nvector<Edge>edge[3010];\nint n,m,f[3010][3010],v[3010],t[3010];\n//f \u610f\u4e49\u540c\u4e0a\u9762\u7684\u63a8\u5bfc\uff0cv \u662f\u7528\u6237\u613f\u610f\u7ed9\u7684\u94b1\uff0ct \u662f\u5907\u4efd\u6570\u7ec4\nint dfs(int u=1){//\u8fd4\u56de\u503c\u662f\u5b50\u6811\u7684\u7528\u6237\u6570\n\tif(u>n-m)//\u9012\u5f52\u8fb9\u754c\n\t{ f[u][1]=v[u];return 1; }\n\tint sum=0;\n\tfor(int i=0;i<edge[u].size();i++){\n\t\tint v=edge[u][i].to;\n\t\tint cnt=dfs(v);\n\t\tsum+=cnt;//cnt, sum \u610f\u4e49\u540c\u4e0a\u63a8\u5bfc\uff0c\u8fd9\u91cc sum \u7d2f\u52a0 cnt\n\t\tfor(int j=1;j<=sum;j++)t[j]=f[u][j];//\u5907\u4efd\n\t\tfor(int j=0;j<=sum;j++)\n\t\t\tfor(int k=max(0,j+cnt-sum);k<=min(cnt,j);k++)//k \u590d\u6742\u7684\u8303\u56f4\n\t\t\t\tf[u][j]=max(f[u][j],t[j-k]+f[v][k]-edge[u][i].val);//\u8f6c\u79fb\u5f0f\n\t}\n\treturn sum;\n}\nint main(){\n\tmemset(f,128,sizeof f);\n    //\u7ed3\u679c\u53ef\u80fd\u4e3a\u8d1f\uff0c\u6240\u4ee5\u521d\u59cb\u5316\u4e3a\u7edd\u5bf9\u503c\u5f88\u5927\u7684\u8d1f\u6570\uff0c\u7528\u5230\u4e86\u8865\u7801\u7684\u539f\u7406\n\tcin>>n>>m;\n\tfor(int i=1;i<=n-m;i++){\n\t\tint k;cin>>k;\n\t\tfor(int j=1;j<=k;j++){\n\t\t\tint to,val;\n\t\t\tcin>>to>>val;\n\t\t\tedge[i].push_back(Edge(to,val));//\u76f4\u63a5\u4f7f\u7528\u6784\u9020\u51fd\u6570\n\t\t}\n\t}\n\tfor(int i=n-m+1;i<=n;i++)\n\t\tcin>>v[i];\n\tdfs();\n\tfor(int i=m;i>=0;i--)\n\t\tif(f[1][i]>=0)\n\t\t{ cout<<i<<endl;return 0; }\n        //\u4ece\u591a\u5230\u5c11\u679a\u4e3e\u7528\u6237\u6570\uff0c\u82e5\u4e0d\u4e8f\u672c\uff0c\u76f4\u63a5\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1584107264,
        "uid": 178294,
        "name": "zhy137036",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u535a\u5ba2\uff1a[https://www.cnblogs.com/luyouqi233](https://www.cnblogs.com/luyouqi233)\n\n\u672c\u9898\u89e3\u7684\u76ee\u7684\u662f\u60f3\u7ed9\u5927\u5bb6\u4e00\u4e2a\u663e\u7136\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nm)$\u7684\u505a\u6cd5\uff0c~~\u4ece\u6b64\u518d\u4e5f\u4e0d\u7528\u82e6\u82e6\u53bb\u7ea0\u7ed3\u4ee3\u7801\u65f6\u95f4\u590d\u6742\u5ea6\u5230\u5e95\u662f\u591a\u5c11~~\u3002\n\n\u9996\u5148\u4ecd\u7136\u5b89\u5229\u8fd9\u4f4d\u5927\u4f6c\u5bf9$O(nm)$\u6811\u5f62\u80cc\u5305\u7684\u8bb2\u89e3\uff0c\u914d\u5408\u89c2\u770b\u6548\u679c\u66f4\u4f73\uff1a[https://www.luogu.com.cn/blog/P6174/solution-p2014](https://www.luogu.com.cn/blog/P6174/solution-p2014)\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u88f8\u7684\u6811\u5f62\u80cc\u5305\u9898\uff0c\u8bbe$f[i][j]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u5f80\u4e0b\u627e$j$\u4e2a\u53f6\u5b50\u7684\u6700\u5927\u4ef7\u503c\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u6240\u6709$f[1][j]\\ge 0$\u5f53\u4e2d\u6700\u5927\u7684$j$\u3002\n\n\u5728dp\u4e4b\u524d\uff0c\u6211\u4eec\u6309\u7167\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u91cd\u65b0\u7f16\u53f7\uff08\u5373\u904d\u5386\u5230\u4e00\u4e2a\u8282\u70b9\u65f6\uff0c\u5148\u641c\u7d22\u8282\u70b9\u7684\u5b50\u6811\uff0c\u4e3a\u5b83\u4eec\u7f16\u53f7\u540e\u518d\u4e3a\u8fd9\u4e2a\u8282\u70b9\u7f16\u53f7\uff09\u3002\n\n\u7136\u540e\u5f00\u59cbdp\uff0c\u9996\u5148\u521d\u59cb\u5316\uff0c\u5bf9$f[i][j]$\u8d4b\u503c$-INF$\uff0c\u5f53$j==0$\u65f6$f[i][j]=0$\u3002\n\n\u4e4b\u540e\u8f6c\u79fb\uff1a\n\n\u5982\u679c$i$\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u90a3\u4e48\u6709$f[i][j]=max(f[i-1][j-1]+c[i],f[i-1][j])$\u548c\u4e00\u822c\u76840/1\u80cc\u5305\u6ca1\u4ec0\u4e48\u533a\u522b\n\n\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u5c31\u6709\u610f\u601d\u4e86\uff0c\u5982\u679c\u6211\u4eec\u53d6$i$\u7684\u8bdd$f[i][j]=f[i-1][j]+c[i]$\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u53d6\u7684\u8bdd\u5b83\u548c\u5b83\u7684\u5b50\u6811\u5c31\u4e00\u4e2a\u90fd\u4e0d\u80fd\u53d6\u4e86\u3002\n\n\u5de7\u7684\u662f\uff0c\u7531\u540e\u5e8f\u904d\u5386\u5b9a\u4e49\u4e0d\u96be\u63a8\u51fa$i$\u7684\u5b50\u6811\u8282\u70b9\u7f16\u53f7\u5728$[i-sz[i]+1,i]$\u4e4b\u95f4\uff08$sz[i]$\u4e3a\u5b50\u6811$i$\u7684\u5927\u5c0f\uff09\u3002\n\n\u6240\u4ee5\u4e0d\u53d6\u7684\u8bdd$f[i][j]=f[i-sz[i]][j]$\uff0c\u7efc\u4e0a$f[i][j]=max(f[i-1][j]+c[i],f[i-sz[i]][j])$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u5bb9\u6613\u770b\u51fa\u662f$O(nm)$\u7684\uff0c\u8fd9\u4e5f\u662f\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u539f\u56e0\u3002\n\n```cpp\n#include<cmath>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int N=3010; \nconst int INF=1e9;\ninline int read(){\n\tint X=0,w=0;char ch=0;\n\twhile(!isdigit(ch)){w|=ch=='-';ch=getchar();}\n\twhile(isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n\treturn w?-X:X;\n}\nstruct node{\n\tint to,nxt;\n}e[N];\nint n,m,cnt,head[N],c[N];\ninline void add(int u,int v){\n\te[++cnt].to=v;e[cnt].nxt=head[u];head[u]=cnt;\n}\nint f[N][N],idx[N],sz[N],tot;\nvoid dfs(int u){\n\tsz[u]=1;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tdfs(v);sz[u]+=sz[v];\n\t}\n\tidx[++tot]=u;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int u=1;u<=n-m;u++){\n\t\tint k=read();\n\t\tfor(int j=1;j<=k;j++){\n\t\t\tint v=read();c[v]=-read();\n\t\t\tadd(u,v);\n\t\t}\n\t}\n\tfor(int u=n-m+1;u<=n;u++)c[u]+=read();\n\tdfs(1);\n\tfor(int i=0;i<=tot;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tf[i][j]=-INF;\n\tfor(int i=1;i<=tot;i++){\n\t\tint u=idx[i];\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(n-m+1<=u)f[i][j]=max(f[i-1][j-1]+c[u],f[i-1][j]);\n\t\t\telse f[i][j]=max(f[i-1][j]+c[u],f[i-sz[u]][j]);\n\t\t}\n\t}\n\tfor(int i=m;i>=0;i--){\n\t\tif(f[tot][i]>=0){\n\t\t\tprintf(\"%d\\n\",i);return 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1583657228,
        "uid": 36276,
        "name": "w36557658",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u6211\u5199\u4e00\u7bc7\u601d\u8def\u5f62\u6210\u5386\u7a0b\n\ndp\uff0c\u6211\u8ba4\u4e3a\uff0c\u987a\u63a8\u7684\u8bdd\n\n\u662f\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u5bf9\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u5f71\u54cd\n--\n\n\u6216\u8005\u9006\u63a8\uff0c\u5206\u6790\u524d\u9762\u72b6\u6001\u5bf9\u5f53\u524d\u72b6\u6001\u7684\u5f71\u54cd\n\n\n\u91cd\u70b9\u662f    \u8bb0\u5f55\n-\n\n![\u6837\u4f8b](https://cdn.luogu.com.cn/upload/pic/86.png)\n\n\u4ece\u6839\u8282\u70b9\u5f00\u59cb\n\n\u6bd4\u59823\u8282\u70b9\n\n\u4ed6\u7684\u9009\u62e9\u662f \n\n\u4fdd\u75591\u4e2a\u5ba2\u6237\uff0c\u83b7\u52293\n\n\u4ed6\u53ef\u4ee5\u5f71\u54cd2\u8282\u70b9\n\n2\u8282\u70b9\u5bf93\u8282\u70b9\u4e0a\u4f20\u7684\u6570\u636e\n\n\u8981\u505a\u51fa\u9009\u62e9\n\n\u8981\u4e48\u9009\uff0c\u8981\u4e48\u4e0d\u9009\n\n\u9b3c\u77e5\u9053\u8981\u4e0d\u8981\u9009\n\n\u90a32\u8282\u70b9\u6709\u4e2a\u4e3b\u610f\n\n\u628a\u9009\u8fd9\u4e2a\u7684\u60c5\u51b5\u8bb0\u5f55\u4e0b\u6765\n\n\u4e0d\u9009\u8fd9\u4e2a\u7684\u60c5\u51b5\u4e5f\u8bb0\u5f55\u4e0b\u6765 \n\n\u8bb0\u5f55\uff0c\u8bb0\u5f55\uff0c\u8981\u628a\u6240\u6709\u7684\u60c5\u51b5\u90fd\u8bb0\u5f55\u4e0b\u6765\n\n\u4e8f\u672c\u7684\u8bb0\u4e0b\u6765\n\n\u6700\u8d5a\u94b1\u7684\u8bb0\u4e0b\u6765\n\n\u4e0d\u4e8f\u4e0d\u8d5a\u7684\u4e5f\u8d5a\u4e0b\u6765\n\n\u5f53\u7136\u4f1a\u591a\u8017\u4e00\u4e9b\u7cbe\u529b\n\n\u4f46\u6709\u4e00\u4e2a\u8fdc\u53e4\u795e\u5668\n\n\u6570\u7ec4 \n\n\u4e0d\u7528\u7ffb\u9875\uff0c\u4e0d\u7528\u7b14\n\n\u667a\u5546\u4e0d\u884c\uff0c\u5168\u9760\u8bb0\u5fc6\u529b\n\nf[i][j]\u8868\u793a\uff0c\u4ee5i\u4e3a\u6839\u7684\u6811\u4e2d\uff0c\u4fdd\u7559j\u4e2a\u7528\u6237\uff0c\u83b7\u5f97\u5229\u6da6\u7684\u6700\u5927\u503c\n\n\u5f00\u59cb\u8bb0\u5f55\u4e86\n\n\n\u6240\u4ee53\u8282\u70b9\u73b0\u5728\u6709\u4e2a\u4e24\u4e2a\u51b3\u7b56\n-\n\n\u4fdd\u75590\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143    f[3][0]=0\n\n\u4fdd\u75591\u4e2a\u7528\u6237\uff0c\u83b7\u52291\u5143     f[3][1]=1\n\n\n\n![](https://cdn.luogu.com.cn/upload/pic/86.png)\n\n3\u8282\u70b9\u628a\u6570\u636e\u4e0a\u4f20\u7ed9\u4e86\u7236\u4eb22\u8282\u70b9\n--\n\u8003\u86513\u8282\u70b9\u5bf92\u8282\u70b9\u7684\u5f71\u54cd\n\n2\u8282\u70b9\u67092\u4e2a\u51b3\u7b56\n \n\u4fdd\u75590\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143    f[2][0]=0\n\n\u4fdd\u75591\u4e2a\u7528\u6237\uff0c\u83b7\u52291\u5143    f[2][1]=1\n\n\n\u5230\u73b0\u57283\u8282\u70b9\u53ef\u4ee5\u6254\u6389\u4e86\uff0c\u56e0\u4e3a2\u8282\u70b9\u628a\u4ed6\u7684\u6570\u636e\u90fd\u8bb0\u4e0b\u6765\u4e86\n\ndfs\u52304\u8282\u70b9\n-\n\n4\u8282\u70b9\u73b0\u67092\u4e2a\u51b3\u7b56\n\n\u4fdd\u75590\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143   f[4][0]=0\n \n\u4fdd\u75591\u4e2a\u7528\u6237\uff0c\u83b7\u52294\u5143   f[4][1]=4\n\n\n\n\n\n\n4\u8282\u70b9\u4e0a\u4f20\u6570\u636e\u5230\u7236\u4eb22\u8282\u70b9\n-\n\u8003\u86514\u8282\u70b9\u5bf9\u7236\u4eb22\u8282\u70b9\u7684\u5f71\u54cd\n\n\u8fd9\u662f2\u8282\u70b9\u4e4b\u524d\u7684\u51b3\u7b56  \n\n\u4fdd\u75590\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143   f[2][0]=0\n\n\u4fdd\u75591\u4e2a\u7528\u6237\uff0c\u83b7\u52291\u5143   f[2][1]=1\n\n\n\n\u73b0\u5728\u7236\u4eb22\u8282\u70b9\u8981\u628a\u513f\u5b504\u8282\u70b9\u4e0a\u4f20\u7684\u6570\u636e\u8fdb\u884c\u6574\u7406\n-\n2\u8282\u70b9\u73b0\u5728\u7684\u51b3\u7b56\u67093\u4e2a\n\n\n\u4fdd\u75590\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143   f[2][0]=0\n\n\u4fdd\u75591\u4e2a\u7528\u6237\uff0c\u83b7\u52291\u5143    f[2][1]=1\n\n\u4fdd\u75592\u4e2a\u7528\u6237\uff0c\u83b7\u52292\u5143    f[2][2]=2\n\n![](https://cdn.luogu.com.cn/upload/pic/86.png)\n\n\n2\u8282\u70b9\u518d\u4e0a\u4f20\u5230\u7236\u4eb21\u8282\u70b9\n-\n1\u8282\u70b9\u73b0\u5728\u7684\u51b3\u7b56\u67093\u4e2a\n\n\u4fdd\u75590\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143    f[1][0]=0\n\n\u4fdd\u75591\u4e2a\u7528\u6237\uff0c\u83b7\u5229-1\u5143    f[1][1]=-1\n\n\u4fdd\u75592\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143    f[1][2]=0\n\n\ndfs5\u8282\u70b9\n--\n\n1\u8282\u70b9\u73b0\u5728\u7684\u51b3\u7b56\u67092\u4e2a\n\n\u4fdd\u75590\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143    f[5][0]=0\n\n\u4fdd\u75591\u4e2a\u7528\u6237\uff0c\u83b7\u52292\u5143    f[5][1]=2\n\n\n5\u8282\u70b9\u518d\u4e0a\u4f20\u5230\u7236\u4eb21\u8282\u70b9\n-\n1\u8282\u70b9\u73b0\u5728\u7684\u51b3\u7b56\u67093\u4e2a\n\n\u4fdd\u75590\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143    f[1][0]=0\n\n\u4fdd\u75591\u4e2a\u7528\u6237\uff0c\u83b7\u5229-1\u5143    f[1][1]=-1\n\n\u4fdd\u75592\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143    f[1][2]=0\n\n\u4fdd\u75593\u4e2a\u7528\u6237\uff0c\u83b7\u5229-1\u5143   f[1][3]=-1\n\n\n\u7b54\u6848\u8bf4\u4e0d\u4e8f\u672c\u7684\u6700\u5927\u7528\u6237\u6570\n--\n\n\u4fdd\u75592\u4e2a\u7528\u6237\uff0c\u83b7\u52290\u5143    f[1][2]=0  \u5c31\u662f\u7b54\u6848\u4e86\n\n\u5c31\u7b97\u95ee\u6700\u5927\u5229\u6da6\u6570\uff0c\u6839\u636e1\u8282\u70b9\u7684\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u51fa\u7b54\u6848\n\n\u6240\u4ee5\u6211\u8ba4\u4e3a\n\ndp\u7684\u6838\u5fc3\u662f\u8bb0\u5f55\n--\n\n\n\n\n\n\u81f3\u4e8edp\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u6211\u60f3\u8fd9\u4e2a\u5f97\u81ea\u5df1\u601d\u8003\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff0c\u4e3a\u4ec0\u4e48\u8981\u9006\u7740\u5904\u7406\n\n\u5b9e\u5728\u662f\u60f3\u4e0d\u901a\u4e86\u7784\u4e00\u773c\u9898\u89e3\u7ee7\u7eed\u60f3\n\n\u6211\u4e0d\u518d\u63a8\u5bfc\uff0c\u56e0\u4e3a\u6211\u63a8\u5bfc\u51fa\u6765\u7684\u8fc7\u7a0b\u4e5f\u4e0d\u4f1a\u6bd4\u5176\u5b83\u9898\u89e3\u597d\u591a\u5c11\n\n\u8fd9\u7bc7\u91cd\u70b9\u8bb2\u601d\u8003\u7684\u65b9\u5411\n\n```cpp\n #include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[3001];\nvector<int>g[3001];\nint f[3001][3001];\nint fa[3001];\nint dis[3001];    \nint len[3001];\nint ans=0;\nvoid dfs(int u)\n{\n\tlen[u]=0;\n\tf[u][0]=0;\n\tfor(int k=0,v;k<g[u].size();k++)\n\t{\n\t\tv=g[u][k];\n\t\tdfs(v);\n\t}\n\t\n\tif(u>=n-m+1)\n\t{\n\t    f[u][1]=a[u];\n\t    len[u]++;\n\t}\t\n\t\t\tint ma=len[fa[u]];\t\t\t\n\n\t    for(int k=len[fa[u]];k>=0;k--)\n\t\t{\n\t\t\tif(f[fa[u]][k]==~0x3f3f3f3f)continue;\n\t\t\tfor(int j=1;j<=len[u];j++)\n\t\t\t{\n\t\t\tif(f[u][j]==~0x3f3f3f3f)continue;\n\t\t\t\tf[fa[u]][k+j]=max(f[fa[u]][k+j],f[fa[u]][k]+f[u][j]-dis[u]);\t\t\t\t\n\t\t\t\tif(f[fa[u]][k+j]>=0)ans=max(ans,k+j);\n\t\t\t\tma=max(ma,k+j);\n\t\t\t}\n\t\t\t\n\t\t}\n\tlen[fa[u]]=ma;\n\n\treturn;\n}\nint main()\n{  \t\n\tmemset(f,0xc0,sizeof(f));\n\tcin>>n>>m;\n\tfor(int u=1,tot,v1,v2;u<=n-m;u++)\n\t{\n\t\tscanf(\"%d\",&tot);\n\t\twhile(tot--)\n\t\t{\n\t\t\tscanf(\"%d %d\",&v1,&v2);\n\t\t\tfa[v1]=u;\n\t\t\tdis[v1]=v2;\n\t\t\tg[u].push_back(v1);\n\t\t}\n\t}\n\tfor(int i=n-m+1;i<=n;i++)\n\t{\t\t\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\t\n\tdfs(1);\n\tprintf(\"%d\\n\",ans);\n}\n```\n\n\n\n\n",
        "postTime": 1573211568,
        "uid": 90562,
        "name": "\u6211\u8981\u8003\u5317\u5927",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u8865\u4e00\u53d1\u8bd5\u70bc\u573a\n\n\u9898\u89e3\u91cc\u6ca1\u6709\u4eba\u8bb2$O(n^2)$\u7684\u505a\u6cd5\n\n\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u6811\u5f62\u80cc\u5305\n\n\u53ef\u4ee5\u5316\u6210dfs\u5e8f\u4e0a\u7684\u95ee\u9898\n\n\u6709\u4e24\u79cd\u8f6c\u79fb\n\n1. \u8f6c\u79fb\u5230\u5b50\u8282\u70b9\uff08\u5c31\u662fdfs\u5e8f\u4e3adfn[u] + 1\u7684\u8282\u70b9\uff09\uff0c\u8fd9\u65f6\u5019\u8981\u52a0\u4e0a\u81ea\u5df1\u7684\u8d21\u732e\uff0c\u76f8\u5f53\u4e8e\u9009\u4e86\u81ea\u5df1\n2. \u8f6c\u79fb\u5230\u76f8\u540c\u7236\u4eb2\u7684\u4e0b\u4e00\u68f5\u5b50\u6811\uff08\u5c31\u662fdfs\u5e8f\u4e3adfn[u] + size[u]\u7684\u8282\u70b9\uff09\uff0c\u8fd9\u65f6\u5019\u4e0d\u80fd\u7b97\u4e0a\u81ea\u5df1\u8d21\u732e\uff0c\u76f8\u5f53\u4e8e\u81ea\u5df1\u6ca1\u9009\n\n\u6700\u540e\u7b54\u6848\u5728$n+1$\u5904\n\n\u8fd9\u79cd\u505a\u6cd5\u540c\u65f6\u53ef\u4ee5\u8fd0\u7528\u5230[\\[JSOI2016\\]\u6700\u4f73\u56e2\u4f53](/problemnew/show/P4322)\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nconst int MAXN = 3010;\nconst int INF = 0x3f3f3f3f;\ninline void getmax(int & x, const int y) { if (y > x) x = y; }\nint f[MAXN][MAXN], head[MAXN], nxt[MAXN << 1], to[MAXN << 1], tot, val[MAXN];\ninline void addedge(int b, int e) {\n\tnxt[++tot] = head[b]; to[head[b] = tot] = e;\n}\nint n, m;\nint dfn[MAXN], sz[MAXN], t0t, out[MAXN], vv[MAXN], ww[MAXN];\nint dfs(int u) {\n\tsz[u] = 1; dfn[u] = ++t0t;\n    vv[t0t] = val[u];\n    ww[t0t] = u + m - 1 >= n;\n\tfor (int i = head[u]; i; i = nxt[i]) \n\t\tsz[u] += dfs(to[i]);\n\tout[dfn[u]] = t0t + 1;\n\treturn sz[u];\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n - m; ++i) {\n\t\tint t, t1, t2;\n\t\tscanf(\"%d\", &t);\n\t\tfor (int j = 1; j <= t; ++j) {\n\t\t\tscanf(\"%d%d\", &t1, &t2);\n\t\t\taddedge(i, t1);\n\t\t\tval[t1] -= t2;\n\t\t}\n\t}\n\tfor (int i = n - m + 1; i <= n; ++i) {\n\t\tint t; scanf(\"%d\", &t); val[i] += t;\n\t}\n\tdfs(1);\n\tfor (int i = 0; i <= n + 1; ++i)\n\t\tfor (int j = 0; j <= n; ++j)\n\t\t\tf[i][j] = -INF;\n\tf[1][0] = 0;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = n; ~j; --j) if (f[i][j] > -INF) {\n\t\t\tgetmax(f[out[i]][j], f[i][j]);\n\t\t\tgetmax(f[i + 1][j + ww[i]], f[i][j] + vv[i]);\n\t\t}\n\t}\n\tfor (int i = n; ~i; --i) if (f[n + 1][i] >= 0) {\n\t\tprintf(\"%d\\n\", i);\n\t\tbreak;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1542701945,
        "uid": 22066,
        "name": "daklqw",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u554a\uff0c\u6211\u89c9\u5f97\u662f\u4e00\u4e2a\u6811\u4e0a\u80cc\u5305DP\u3002\u6240\u4ee5\u5462\uff0c\u518d\u52a0\u4e0a\u4e00\u4e2a\u538b\u7ef4\u4f18\u5316\u7a7a\u95f4\u3002\n\n\u6240\u4ee5\u5c31\u662f\u5728dfs\u4e2d\u52a0\u5165\u4e00\u4e2a01\u80cc\u5305DP\u8868\u793a\u5728\u5f53\u524d\u5b50\u6811\u91cc\u9009\u62e9j\u4e2a\u7528\u6237\uff0c\u5229\u6da6\u7684\u6700\u5927\u503c\u3002\n\n\u5229\u6da6\u5566\u5c31\u662f\u90a3\u4e2a\u4ec0\u4e48\uff1a\u7528\u6237\u4ea4\u7684\u94b1-\u4fee\u8def\u4ee3\u4ef7\u3002\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\n#define isLeaf(u) (e[head[u]].next==0)\n#define go(i,a,b) for(int i=a;i<=b;i++)\n#define ro(i,a,b) for(int i=a;i>=b;i--)\n#define fo(i,a,x) for(int i=a[x],v=e[i].v;i;i=e[i].next,v=e[i].v)\nconst int N=3003;\nusing namespace std;\nstruct E{int v,next,w;}e[N*2];\nint n,m,head[N],k=1,K,f[N][N];\nvoid ADD(int u,int v,int w){e[k]=(E){v,head[u],w};head[u]=k++;}\nint dfs(int u,int fa)\n{\n    if(isLeaf(u))return 1;int W=0,all;\n    fo(i,head,u)if(v!=fa){W+=(all=dfs(v,u));\n    ro(j,W,1)go(p,1,min(all,j))f[u][j]=max(f[u][j],f[u][j-p]+f[v][p]-e[i].w);}\n    return W;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    go(u,1,n-m){scanf(\"%d\",&K);\n    go(p,1,K){int v,w;scanf(\"%d%d\",&v,&w);ADD(u,v,w);ADD(v,u,w);}}\n    go(u,1,n)go(j,0,n)f[u][j]=j?-1e9:0;\n    go(u,n-m+1,n)scanf(\"%d\",&f[u][1]);\n    dfs(1,1);ro(j,n,0)if(f[1][j]>=0){printf(\"%d\\n\",j);return 0;}\n}//Paul_Guderian\n\n```",
        "postTime": 1505391453,
        "uid": 21093,
        "name": "Paul_Guderian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u672c\u9898O(n^3)\u7684\u9898\u89e3\uff08\u5373\u5206\u7ec4\u80cc\u5305\uff09\u5747\u53ef\u4ee5\u88ab\u4e8c\u53c9\u6811\u72b6\uff081500\u4e2a\u8f6c\u64ad\u7ad9\uff0c1500\u4e2a\u7ec8\u70b9\u7ad9\uff09\u7684\u6570\u636e\u5361\u6389\uff0c\u53ea\u6709\u90a3\u7bc7\u771f\u00b7O(n^2)\u7684\u9898\u89e3\u8fd8\u6d3b\u7740\u3002\n\u5982\u679cn<=1000\uff0c\u91c7\u7528\u8fd9\u79cd\u6784\u9020\u65b9\u6cd5\u53ef\u4ee5\u4ee54kw\u5de6\u53f3\u8dd1\u8fc7\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u662fO(sigma(sz[k]^2))\uff0c\u6240\u4ee5\u662fO(n^3/\u67d0\u5e38\u6570)\uff0c\u53ef\u4ee5\u8fc7\uff1b\u4f46\u662f\u5f53n<=3000\u65f6\uff0c\u867d\u7136\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4ecd\u5f88\u5feb\uff0c\u4f46\u5728\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\u8f6c\u79fb\u6b21\u6570\u9ad8\u8fbe11\u4ebf+\u3002\n\n\u6b64\u65f6\u5e94\u5f53\u5b66\u4e60\u6709\u4f9d\u8d56\u7684\u6811\u5f62\u80cc\u5305\u3002\n\n\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684dfs\u5e8f\uff0c\u6309dfs\u5e8f\u6392\u5e8f\u3002\u4ee4f[i][j]\u8868\u793a\u5df2\u7ecf\u52a0\u5165\u4e86**\u540e**i\u4e2a\u70b9\uff0c\u9009\u4e86j\u4e2a\u7528\u6237\u6536\u5230\u8f6c\u64ad\u65f6\uff0c\u6700\u5927\u7684\u76c8\u5229\uff08\u53ef\u4ee5\u662f\u8d1f\u6570\uff09\u3002\u4ee4cst[i]\u8868\u793ai\u662f\u5426\u662f\u89c2\u4f17\uff0c\u662f\u5219\u4e3a1\uff1bval[i]\u8868\u793a\u9009i\u83b7\u5f97\u7684\u76c8\u5229\uff1b\u5982\u679c\u7b2ci\u4e2a\u9009\u4e86\uff0cf[i][j]=f[i+1][j-cst[i]]+val[i]\uff1b\u5982\u679c\u7b2ci\u4e2a\u672a\u9009\uff0c\u56e0\u4e3ai\u4e0d\u9009\u5219\u5176\u5b50\u6811\u4e00\u5b9a\u4e0d\u80fd\u88ab\u9009\uff0c\u4e14\u5982\u679c\u5b50\u6811\u5168\u4e0d\u9009\uff0ci\u7684\u5144\u5f1f\u4e4b\u7c7bdfs\u5e8f>i\u7684\u70b9\u9009\u4e0d\u9009\u90fd\u4e0d\u5f71\u54cdi\uff0c\u5219f[i][j]=f[i+sz[i]][j]\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u662f\u9006\u7740\u5b8c\u6210\u7684\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u7236\u4eb2\u7684\u9650\u5236\u6bd4\u513f\u5b50\u5c0f\uff0c\u5148\u628a\u513f\u5b50\u70b9\u653e\u8fdb\u56fe\u91cc\u5219\u7236\u4eb2\u505a\u65f6\u5c31\u4e0d\u7528\u8003\u8651\u9650\u5236\uff0c\u6bcf\u4e2a\u70b9\u7684val\u5c31\u53d8\u6210\u4e86\u8be5\u70b9\u4e0a\u89c2\u4f17\u4ed8\u7684\u94b1-\u5b83\u5230\u5b83\u7236\u4eb2\u90a3\u6761\u8fb9\u7684\u8fb9\u6743\u3002\n\n\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep(x,y,z) for(register int x=y; x<=z; x++)\n#define downrep(x,y,z) for(register int x=y; x>=z; x--)\n#define LL long long\n#define ms(x,y,z) memset(x,y,sizeof(z))\n#define repedge(x,y) for(register int x=hed[y]; ~x; x=edge[x].nex)\ninline int read(){\n    int x=0; int w=0; char ch=0;\n    while(ch<'0' || ch>'9') w|=ch=='-',ch=getchar();\n    while(ch>='0' && ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return w? (-x):x;\n}\nconst int N=3005;\nconst int inf=0x3f3f3f3f;\nint n,m,nedge,hed[N],sz[N],cst[N],val[N],id[N],tot,dfn[N],dp[N][N];\nstruct Edge{ int to,nex; }edge[N];\nvoid addedge(int a,int b){\n\tedge[nedge].to=b; edge[nedge].nex=hed[a]; hed[a]=nedge++;\n}\nvoid dfs(int k){\n\tdfn[k]=++tot; sz[k]=1;\n\trepedge(i,k){\n\t\tint v=edge[i].to;\n\t\tdfs(v); \n\t\tsz[k]+=sz[v]; \n\t}\n}\nint cmp(int a,int b){ return (dfn[a]>dfn[b]); }\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tnedge=0; rep(i,1,n) hed[i]=-1;\n\trep(i,1,n-m){\n\t\tint x; scanf(\"%d\",&x);\n\t\trep(j,1,x){\n\t\t\tint y,z; scanf(\"%d%d\",&y,&z);\n\t\t\taddedge(i,y); val[y]-=z; \t\t\t\n\t\t}\n\t}\n\trep(i,n-m+1,n){ int x; scanf(\"%d\",&x); val[i]+=x; } \n\trep(i,n-m+1,n) cst[i]=1; dfs(1); \n\trep(i,1,n) id[i]=i; sort(id+1,id+n+1,cmp);\n\trep(i,0,n) rep(j,0,n) dp[i][j]=-inf;\n\tdp[0][0]=0;\n\trep(i,1,n){\n\t\tint x=id[i]; \n\t\trep(j,0,n){\n\t\t\tif ((j>=cst[x])&&(dp[i-1][j-cst[x]]>-inf)) \n\t\t\tdp[i][j]=max(dp[i][j],dp[i-1][j-cst[x]]+val[x]);\n\t\t\tif (dp[i-sz[x]][j]>-inf)\n\t\t\tdp[i][j]=max(dp[i][j],dp[i-sz[x]][j]);\n\t\t}\n\t}\n\tdownrep(i,n,0)\n\t\tif (dp[n][i]>=0){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tbreak;\n\t\t}\n\treturn 0;\n} \n```\n\n",
        "postTime": 1573803148,
        "uid": 47611,
        "name": "\u4e0a\u5929\u53f0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "### \u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\n\u8fd9\u9053\u9898\u521a\u770b\u5230(\u76f4\u5230\u73b0\u5728)\u6211\u8fd8\u662f\u6ca1\u770b\u61c2\u600e\u4e48\u5f00\u4e8c\u7ef4\u7684\u80cc\u5305\uff0c\u4e8e\u662f\u5f00\u4e86\u4e00\u4e2a\u4e00\u7ef4\u7684,~~\u5c45\u7136~~\u8fc7\u4e86\u3002\n#### \u5177\u4f53\u601d\u8def\uff1a\n\u4e3b\u9898\u8fd8\u662f\u56f4\u7ed5\u7740\u80cc\u5305\u6765\u5199\u7684,\u8bbedp[i]\u8868\u793a\u5982\u679c\u7ed9i\u4e2a\u7528\u6237\u653e\u7535\u89c6\u540e\u7684\u6700\u5927\u94b1\u6570(\u6ce8\u610f\u8fd9\u4e2a\u94b1\u662f\u53ef\u4ee5\u4e3a\u8d1f\u6570\u7684),\u5373:\n```cpp\ndp[i]=max(dp[i],dp[i-1]+x);\n//x\u8868\u793a\u987e\u5ba2\u7ed9\u4f60\u7684\u94b1-\u7ed9\u8fd9\u4e2a\u987e\u5ba2\u653e\u7535\u89c6\u8981\u591a\u5c11\u94b1\n```\n\u90a3\u6709\u540c\u5b66\u5c31\u4f1a\u95ee\u4e86\uff1a\u8f6c\u64ad\u7ad9\u5230\u8f6c\u64ad\u7ad9\u8981\u7684\u94b1\u600e\u4e48\u7834?\u5176\u5b9e,\u4ece\u8f6c\u64ad\u7ad9\u5230\u8f6c\u64ad\u7ad9\u7684\u94b1\u53ef\u4ee5\u7528dfs\u7684\u601d\u60f3\u89e3\u51b3\u3002\u5148\u4e34\u65f6\u5b58\u50a8\u4e00\u4e0bdp\u6570\u7ec4\u7684\u503c,\u628adp\u6570\u7ec4\u6bcf\u4e2a\u503c\u90fd\u51cf\u53bb\u8fd9\u4e2a\u8def\u5f84\u8981\u7684\u94b1,\u626b\u4e00\u904d\u540e\u518d\u628adp\u548c\u4e34\u65f6\u5b58\u50a8\u7684\u6570\u7ec4\u6bd4\u4e00\u4e0b\u5927\u5c0f,\u4fdd\u8bc1dp\u7684\u6bcf\u4e00\u79cd\u60c5\u51b5\u90fd\u662f\u6700\u4f18\u7684\u3002\u6700\u540e\u7684\u627e\u7b54\u6848\u4e5f\u5f88\u7b80\u5355,\u4ecem(\u4e00\u5171\u5c31m\u4e2a\u987e\u5ba2)\u5f80\u4e0b\u627e,\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u8d1f\u6570\u7684\u503c\u65f6\u505c\u6b62,\u8f93\u51fa\u7b54\u6848\u5c31\u597d\u4e86\u3002\ndp\u6570\u7ec4\u7684\u521d\u59cb\u5316\u4e5f\u5f88\u597d\u7406\u89e3\uff0c~~\u663e\u7136~~\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++)dp[i]=-inf;\ndp[0]=0;\n```\n\u7136\u540e\u5c31\u662f\u600e\u4e48\u5177\u4f53\u5b9e\u73b0\u7684\u95ee\u9898\u4e86:\n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\nconst int inf = 0x7f7f7f7f-1,M = 3001;\nstruct Node{\n\tint x,y;\n\tNode(int x,int y):x(x),y(y){}\n};vector <Node> v[M];\nint n,m,son[M],w[M],dp[M];\nvoid search(int x){\n\tfor(int i=m;i>0;i--)if(dp[i-1]!=-inf)\n\t\tdp[i]=max(dp[i],dp[i-1]+x);\n}//\u5176\u5b9e\u8fd9\u91cc\u66f4\u65b0dp\u548c\u666e\u901a\u768401\u80cc\u5305\u5f88\u50cf\nvoid dfs(int x){\n\tfor(int i=0;i<son[x];i++){\n\t\tNode t = v[x][i];\n\t\tif(son[t.x]){\n\t\t\tint tot[M];\n\t\t\tfor(int i=0;i<=m;i++){\n\t\t\t\ttot[i]=dp[i];\n\t\t\t\tif(dp[i]!=-inf)dp[i]-=t.y;\n\t\t\t}\n\t\t\tdfs(t.x);\n\t\t\tfor(int i=0;i<=m;i++)dp[i]=max(dp[i],tot[i]);\n\t\t}\n\t\telse search(w[t.x]-t.y);\n\t}\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=0;i<=n;i++)w[i]=-1,dp[i]=-inf;dp[0]=0;\n\t//\u521d\u59cb\u5316\uff0c\u5176\u5b9ew[i]=-1\u5e94\u8be5\u53ef\u4ee5\u53bb\u6389\uff0c\u4e2a\u4eba\u4e60\u60ef\n\tfor(int i=1;i<=n-m;++i){\n\t\tcin>>son[i];\n\t\tfor(int j=0;j<son[i];j++){\n\t\t\tint x,y;cin>>x>>y;\n\t\t\tv[i].push_back(Node(x,y));\n\t\t}\n\t}\n\tfor(int i=n-m+1;i<=n;++i)cin>>w[i];\n\tdfs(1);//\u7528dfs\u53bb\u627e\u6811\u5f62\u80cc\u5305\u96be\u9053\u4e0d\u9999\u5417\n\tfor(int i=m;i;i--)if(dp[i]>=0){\n\t\tcout<<i;return 0;\n\t}\n}\n```\n\u672c\u849f\u84bb\u8bed\u6587\u4e0d\u597d,\u6240\u4ee5\u9898\u89e3\u5199\u7684\u5f88\u83dc,\u8bf7\u8c05\u89e3\u3002~~\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u5730\u65b9,\u5f53\u6211\u5c31\u61c2\u4e86\u5417,\u95ee\u5199\u5176\u4ed6\u9898\u89e3\u7684julao\u4eec\u5440~~",
        "postTime": 1571711334,
        "uid": 150603,
        "name": "Cloyir",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "### \u5173\u4e8e\u672c\u9898\uff0c\u697c\u4e0bdalao\u5df2\u7ecf\u8bb2\u5f97\u5341\u5206\u6e05\u695a\u4e86\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u6cdb\u5316\u7269\u54c1\u7684\u7406\u89e3\u3002\u5982\u679c\u6709\u8bef\uff0c\u70e6\u8bf7\u6307\u51fa\u3002\n\n\u4ec0\u4e48\u662f\u6cdb\u5316\u7269\u54c1\uff1f\u6cdb\u5316\u7269\u54c1\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u51fd\u6570$\\operatorname{value(v)}$\uff0c**\u5b83\u7684\u4ef7\u503c\u7531\u7ed9\u5b83\u5206\u914d\u7684\u4f53\u79ef$v$\u51b3\u5b9a**\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\n>\u4e00\u4e2a\u8d39\u7528\u4e3a$c$\u4ef7\u503c\u4e3a$w$\u7684\u7269\u54c1\uff0c\u5982\u679c\u5b83\u662f01\u80cc\u5305\u4e2d\u7684\u7269\u54c1\uff0c\u90a3\u4e48\u628a\u5b83\u770b\u6210\u6cdb\u5316\u7269\u54c1\uff0c\u5b83\u5c31\u662f\u9664\u4e86$h(c)=w$\u5176\u5b83\u51fd\u6570\u503c\u90fd\u4e3a0\u7684\u4e00\u4e2a\u51fd\u6570\u3002\u5982\u679c\u5b83\u662f\u5b8c\u5168\u80cc\u5305\u4e2d\u7684\u7269\u54c1\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u770b\u6210\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff0c\u4ec5\u5f53$v$\u88ab$c$\u6574\u9664\u65f6\u6709$h(v)=v/c \\times w$\uff0c\u5176\u5b83\u51fd\u6570\u503c\u5747\u4e3a0\u3002\n\n\uff08\u6765\u81eadd_engi\u7684\u80cc\u5305\u4e5d\u8bb2\uff09\n\n\u6211\u4eec\u5b9a\u4e49$dp[u][j]$\u8868\u793a\u5728\u4ee5$u$\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u62e9$j$\u4e2a\u7528\u6237\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u3002\u8fd9\u540c\u6837\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u6cdb\u5316\u7269\u54c1\u3002\u56e0\u4e3a\u6839\u636e\u6211\u4eec\u7ed9\u8fd9\u4e2a\u5b50\u6811\u5206\u914d\u7684\u7528\u6237\u4e2a\u6570$j$\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0d\u540c\u7684\u4ef7\u503c$dp[u][j]$\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff0c\u53ea\u6709\u4e00\u4e2a\u7528\u6237\uff0c\u5219\u521d\u59cb\u5316$\\operatorname{dp[leave][1] = userPayment[leave]}$\u3002\u7b49\u5f0f\u53f3\u8fb9\u662f\u6bcf\u4e2a\u7528\u6237\u613f\u610f\u652f\u4ed8\u7684\u91d1\u989d\uff0cleave\u662f\u53f6\u5b50\u7ed3\u70b9\u7f16\u53f7\u3002\n\n\u5173\u952e\u662f\u5982\u4f55\u8f6c\u79fb\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f**\u6cdb\u5316\u7269\u54c1\u7684\u6c42\u548c\u95ee\u9898**\u3002\u5047\u5982\u67d0\u4e2a\u8282\u70b9$u$\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u8fd9\u4e24\u4e2a\u513f\u5b50\u7684\u5728\u5404\u4e2a\u7528\u6237\u4e2a\u6570\u4e0a\u7684\u6700\u4f18\u89e3\u662f\u76f8\u540c\u5b50\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u7ed9\u8fd9\u4e24\u4e2a\u513f\u5b50\u5206\u914d\u7684\u7528\u6237\u4e2a\u6570\u5373\u53ef\uff1a\n```cpp\nfor (int j = sumUserInvolved/*\u5df2\u7ecf\u53d1\u73b0\u7684\u5b50\u6811\u4e2d\u53f6\u5b50\u7ed3\u70b9\u603b\u6570*/;j >= 0;--j)\n{\n\tfor (int k = 0;k <= sumUserInvolved/*!*/;++k)\n\t{\n\t\tif (k > sonUserInvolved) break;\n\t\tdp[u][j] = max(dp[u][j],dp[u][j - k] + dp[v][k]);\n\t}\n}\n```\n\u4e0d\u96be\u770b\u51fa\uff0c\u6cdb\u5316\u7269\u54c1\u7684\u6c42\u548c\u95ee\u9898\uff0c\u4ecd\u7136\u662f\u4e00\u4e2a\u6cdb\u5316\u7269\u54c1\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u8ba1\u7b97\u7ed9\u8282\u70b9$u$\u5206\u914d\u4e0d\u540c\u7528\u6237\u4e2a\u6570\u4e0b\uff0c\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u3002\n\n\u6700\u7ec8\uff0c\u5f97\u5230$dp[0][0...m]$\u540e\uff0c\u6211\u4eec\u53ea\u9700\u5012\u5e8f\u679a\u4e3e\u7528\u6237\u6570$m$\uff0c\u4e00\u65e6\u53d1\u73b0\u5229\u6da6\u5927\u4e8e\u7b49\u4e8e0\uff0c\u5c31\u53ef\u4ee5\u8f93\u51fa\u7ed3\u679c\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u65e0\u8bba\u662f\u5728\u300a\u9009\u8bfe\u300b\u8fd8\u662f\u300a\u91d1\u660e\u7684\u9884\u7b97\u65b9\u6848\u300b\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u81ea\u5df1\u7684\u4f53\u79ef\uff0c\u5219\u5728\u4e0a\u8ff0\u679a\u4e3ek\u65f6\uff0c\u8981\u51cf\u53bb\u6839\u8282\u70b9\u7684\u4f53\u79ef\u3002\n```cpp\nfor (int k = 0;k <= sumUserInvolved - volume[u]/*!*/;++k)\n```\n\u53ea\u4e0d\u8fc7\u672c\u9898\u4e2d\u7528\u6237\u5168\u90e8\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\uff0c\u6240\u4ee5\u4e0d\u7528\u51cf\u3002\n\n\u4ee5\u4e0a\u662f\u6211\u5bf9\u672c\u9898\u7684\u4e00\u4e9b\u8584\u89c1\uff0c\u82e5\u6709\u8c2c\u8bef\uff0c\u656c\u8bf7\u65a7\u6b63\u3002\n```cpp\nint dfs(int u)\n{\n\tint sumUserInvolved = 0,sonUserInvolved = 0;\n\tdp[u][0] = 0;\n\tif (isUser(u))\n\t{\n\t\tsumUserInvolved = 1;\n\t\tdp[u][1] = userPayment[u];\n\t}\n\tfor (int i = head[u];i;i = info[i].nxt)\n\t{\n\t\tint v = info[i].to;\n\t\tint w = info[i].wgt;\n\t\tsonUserInvolved = dfs(v);\n\t\tsumUserInvolved += sonUserInvolved;\n\t\tfor (int j = 1;j <= sonUserInvolved;++j) dp[v][j] -= w;\n\t\tfor (int j = sumUserInvolved;j >= 0;--j)\n\t\t{\n\t\t\tfor (int k = 0;k <= sumUserInvolved;++k)\n\t\t\t{\n\t\t\t\tif (k > sonUserInvolved) break;\n\t\t\t\tdp[u][j] = max(dp[u][j],dp[u][j - k] + dp[v][k]);\n\t\t\t}\n\t\t}\n\t}\n\treturn sumUserInvolved;\n}\n```",
        "postTime": 1563068563,
        "uid": 109383,
        "name": "Initialize02",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u6211\u4eec\u4ee4 $f(i,j)$ \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u62e9 $j$ \u4e2a\u5ba2\u6237\u540e\u5269\u4f59\u7684\u91d1\u94b1\u3002\n\n\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u4e3a\n\n$f(i,j)=max(f(i,j),f(i)(j-k)+f(p)(k))$\n\n\u5176\u4e2d $p$ \u8868\u793a $i$ \u7684\u6240\u6709\u513f\u5b50\u3002\u6211\u4eec\u4e00\u4e2a\u4e2a\u7684\u679a\u4e3e\u5b83\u4eec\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <fstream>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <map>\nusing namespace std;\n\nstruct edge\n{\n    int v;\n    int w;\n     edge operator = (const edge &x)\n     {\n         v = x.v;\n         w = x.w;\n         return *this;\n     }\n};\n\nconst int MAXN = 5000;\nint n, m;\nint w[MAXN], s[MAXN], f[MAXN][MAXN];\nvector<edge> e[MAXN];\n\nvoid dfs(int p, int fa)\n{\n    f[p][0] = 0;\n    for (auto i : e[p])\n    {\n        int v = i.v;\n        if (v != fa)\n        {\n            dfs(v, p);\n            for (int j = s[p]; j > -1; --j)\n            {\n                for (int k = s[v]; k > -1; --k)\n                    f[p][j + k] = max(f[p][j + k], f[p][j] + f[v][k] - i.w);\n            }\n            s[p] += s[v];\n        }\n    }\n    if (e[p].size() == 1)\n    {\n        f[p][1] = w[p];\n        s[p] = 1;\n    }\n    return; \n} \n\nint read()\n{\n    int x;\n    scanf(\"%d\", &x);\n    return x;\n}\n\nint main()\n{\n    n = read();\n    m = read();\n    for (int i = 0; i < 3000; ++i)\n    {\n        for (int j = 0; j < 3000; ++j)\n            f[i][j] = -1e9;\n    }\n    for (int i = 1; i < n - m + 1; ++i)\n    {\n        int k = read();\n        for (int j = 0; j < k; ++j)\n        {\n            int A = read(), C = read();\n            e[i].push_back((edge){A, C});\n            e[A].push_back((edge){i, C});\n        }\n    }\n    for (int i = n - m + 1; i < n + 1; ++i)\n        w[i] = read();\n    dfs(1, -1);\n    for (int i = m; i > -1; --i)\n    {\n        if (f[1][i] >= 0)\n        {\n            printf(\"%d\\n\", i);\n            return 0;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1505735212,
        "uid": 25739,
        "name": "scallop",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "## P1273 \u6709\u7ebf\u7535\u89c6\u7f51\n\n[\u9898\u9762](https://www.luogu.com.cn/problem/P1273)\n\n\u8fd9\u4e00\u9053\u9898\u53ef\u4ee5\u770b\u4f5c\u4e00\u9053\u5f88\u597d\u7684\u6811\u5f62\u80cc\u5305```DP```\u7684\u5165\u95e8\u9898\u3002\u7531\u4e8e\u6709\u5f88\u591a\u9898\u89e3\u90fd\u6ca1\u6709\u8bb2\u7684\u5f88\u900f\u5f7b\uff0c\u5f53\u65f6\u770b\u7684\u6211\u4e00\u8138\u61f5\u5708\uff0c\u4e8e\u662f\u6211\u51b3\u5b9a\u597d\u597d\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u6211\u4eec\u4ee4$dp_{u,i,j}$\u770b\u4f5c\u662f\u4ee5$u$\u4e3a\u6839\uff0c\u5728\u7528\u524d$i$\u4e2a\u513f\u5b50\u7684\u65f6\u5019\uff0c\u6ee1\u8db3$j$\u4e2a\u5ba2\u6237\u7684\u8981\u6c42\u65f6\u5019\u7684\u6700\u5927\u94b1\u6570\u3002\u90a3\u4e48\uff0c\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f$dp_{u,i,j} = max(dp_{u,i-1,j-k} + dp_{v,son_y,k}-w_{u,v})$,\u5176\u4e2d$son_y$\u8868\u793a$y$\u7684\u513f\u5b50\u4e2a\u6570\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\u5f53\u6211\u4eec```dfs```\u5230\u4e86\u7b2c$i$\u53f7\u513f\u5b50\u7684\u65f6\u5019\uff0c\u6211\u4eec\u628a\u524d\u9762$i-1$\u513f\u5b50\u90fd\u641e\u5b8c\u4e86\uff0c\u5e76\u4e14\u6211\u4eec\u5148```dfs```\u7b2c$i$\u53f7\u513f\u5b50\u7684\u513f\u5b50\uff0c\u518d\u8fdb\u884c```dp```,\u6240\u4ee5\u5728\u8fdb\u884c```dp```\u7684\u65f6\u5019\uff0c$dp_{u,i-1}$\u548c$dp_{v}$\u90fd\u7b97\u51fa\u6765\u4e86\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5bfb\u627e\u6bcf\u4e00\u4e2a$j$\uff08\u8868\u793a\u5f53\u524d\u8981\u66f4\u65b0\u7684\u72b6\u6001\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u5ba2\u6237\u6570\u91cf\uff09\u548c$k$\uff08\u5e2e\u52a9\u8f6c\u79fb\u7684\u4e0a\u4e00\u4e2a\u513f\u5b50\u7684\u72b6\u6001\u7684\u513f\u5b50\u4e2a\u6570\uff09\uff0c\u5176\u4e2d$j<u$\u4e0b\u7ba1\u7406\u7684\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570, $k < min(j,v$\uff08\u5373\u5f53\u524d\u6240\u679a\u4e3e\u7684\u513f\u5b50\uff09\u6240\u7ba1\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570$)$\uff0c\u6765\u7528\u5df2\u77e5\u7684$dp_{u,i-1}$\u548c$dp_{v}$\u6765\u8f6c\u79fb\u66f4\u65b0\u7684\u8282\u70b9\u7684```dp```\u4e86\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8f6c\u79fb\u65b9\u7a0b$dp_{u,i,j} = dp_{u,i-1,j-k} + dp_{v,son_y,k}-w_{u,v}$\u4e2d\uff0c\u72b6\u6001\u662f\u4ece\u7b2c\u4e8c\u7ef4\u4e3a$i-1$\u548c$son_y$\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7701\u6389\u7b2c\u4e8c\u7ef4\uff0c\u8fd9\u4e48\u505a\u6709\u4ec0\u4e48\u95ee\u9898\u5417\uff1f$dp_{u,i-1,j-k}$\u53bb\u6389i-1\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528$dp_{u,j-k}$\uff0c\u6bd5\u7adf\u8fd9\u4fdd\u7559\u7740$dp_{u,i-1,j-k}$\u7684\u6570\u636e\uff0c\u800c$dp_{v,son_y,k}$\u5462\uff1f\u4e5f\u6ca1\u95ee\u9898\u3002\u50cf\u8fd9\u6837\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\uff0c\u6700\u540e$dp_{u,j}$\u5c31\u8868\u793a\u4ee5$u$\u4e3a\u6839\uff0c\u6ee1\u8db3$j$\u4e2a\u5ba2\u6237\u7684\u8981\u6c42\u65f6\u5019\u7684\u6700\u5927\u94b1\u6570\uff0c\u76f8\u5f53\u4e8e\u539f\u6765\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u7701\u6389\u4e5f\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\u6240\u4ee5\u6700\u540e\u8f6c\u79fb\u65b9\u7a0b\u5c31\u4f1a\u53d8\u6210$dp_{u,j} = max(dp_{u,j-k} + dp_{v,k}-w_{u,v})$\u4e86\u3002\n\n\u5269\u4e0b\u7684\u7ec6\u8282\u4f1a\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\u9762\u8bb2\u4e00\u4e0b\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 3005;\nconst int inf = 0x3f;\ninline int read() {//\u5feb\u8bfb\n    int ret=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9') {if (ch=='-') f=-f;ch=getchar();}\n    while (ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\n\n\nint n, m, a[maxn];\nint last[maxn], cnt;\nstruct edge{int y, w, gg;} e[maxn<<1];\ninline void add(int x, int y, int w){\n    e[++cnt] = (edge){y,w,last[x]};\n    last[x] = cnt;\n}\n\n\nint f[maxn][maxn];\ninline int dfs(int x, int fa){\n\n    if(x > n-m){//\u5f53\u81ea\u5df1\u662f\u53f6\u5b50\u8282\u70b9\uff08\u7535\u89c6\u7f51\u7528\u6237\uff09\u7684\u65f6\u5019\n        f[x][1] = a[x];//\u90a3\u4e48\u53ea\u53bb\u81ea\u5df1\u6240\u82b1\u8d39\u7684\u4ee3\u4ef7\u5c31\u662f\u81ea\u5df1\u613f\u610f\u82b1\u7684\u94b1\n        return 1;//\u4ee5\u53f6\u5b50\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u5c31\u53ea\u6709\u81ea\u5df1\u4e00\u4e2a\u53f6\u5b50\n    }\n    \n    int siz = 0, g;//siz\u8868\u793a\u81ea\u5df1\u4e3a\u6839\u7684\u5b50\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\n    for(int i = last[x]; i; i = e[i].gg){\n        int y = e[i].y;\n        if(y == fa) continue;\n        siz += (g = dfs(y,x));//g\u5b58\u81ea\u5df1\u6bcf\u4e00\u4e2a\u513f\u5b50\u6240\u7ba1\u8f96\u7684\u53f6\u5b50\u4e2a\u6570\n        //dp//\n        for(int j = siz; j; --j){\n            for(int k = 1; k <= min(j,g); ++k){\n            /*\n            \u4e3a\u4ec0\u4e48\u662fk <=min(j,g)\u5462\uff1f\n            \u56e0\u4e3a\u4e0d\u53ef\u80fd\u4ecey\u8fd9\u4e2a\u513f\u5b50\u4e0b\u9762\u6709\u8d1f\u6570\u4e2a\u4eba\u613f\u610f\u529e\u7535\u89c6\uff0c\u6240\u4ee5k<=j\n            \u53c8\u56e0\u4e3a\u4e0d\u53ef\u80fd\u5e95\u4e0b\u53ea\u6709g\u4e2a\u7528\u6237\uff0c\u7136\u540e\u6709\u6bd4g\u591a\u7684\u4eba\u613f\u610f\u770b\u7535\u89c6\uff0c\u6240\u4ee5k<=g\n            */\n                f[x][j] = max(f[x][j], f[x][j-k] + f[y][k] - e[i].w);\n            }\n        }\n    }\n    return siz;\n}\nint main(){\n    memset(f,-inf,sizeof(f));//\u56e0\u4e3a\u6323\u7684\u6700\u5927\u94b1\u6570\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u521d\u59cb\u5316\u6210-inf\n    n = read(), m = read();\n    for(int i = 1; i <= n; ++i) \n        f[i][0] = 0;//\u56e0\u4e3a\u6bcf\u4e2a\u4e0b\u9762\u6ca1\u4eba\u613f\u610f\u770b\u7535\u89c6\u65f6\uff0c\u4e0d\u6323\u4e0d\u4e8f\uff0c\u6240\u4ee5\u521d\u59cb\u4e3a0\n    int kksk, aa, cc;\n    for(int i = 1; i <= n-m; ++i){\n        kksk = read();\n        for(int j = 1; j <= kksk; ++j){\n            aa = read(), cc = read();\n            add(i,aa,cc); add(aa,i,cc);\n        }\n    }\n    for(int i = n-m+1; i <= n; ++i) scanf(\"%d\", &a[i]);\n\n    dfs(1,-1);\n    \n    //\u7edf\u8ba1\u7b54\u6848\uff0c\u7531\u9898\u610f\u548c\u72b6\u6001\u6613\u5f97\u77e5\u7b54\u6848\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8e0\u7684f[1][i]\n    for (int i = m; i >= 1; --i){\n        if (f[1][i] >= 0){\n            printf(\"%d\",i);\n            return 0;\n        }\n    }\n}\n```\n\n[\u535a\u5ba2\u63a8\u5e7f](https://www.luogu.com.cn/blog/zimindaada/)",
        "postTime": 1581158446,
        "uid": 134635,
        "name": "zimindaada",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 - P1273 \u6709\u7ebf\u7535\u89c6\u7f51"
    },
    {
        "content": "# \u4e00\u3001\u9898\u76ee\u5927\u610f\n\u6709\u4e00\u68f5\u6709\u6839\u6811\uff0c\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u53ef\u8d5a\u7684\u94b1\u6570\uff0c\u6bcf\u8d70\u4e00\u6761\u8def\u90fd\u6709\u76f8\u5e94\u7684\u82b1\u8d39\uff0c\u95ee\u5728\u4e0d\u4e8f\u672c\u7684\u60c5\u51b5\u4e0b\u4ece\u6839\u8282\u70b9\u80fd\u5230\u8fbe\u81f3\u591a\u51e0\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\n# \u4e8c\u3001\u5206\u7ec4\u80cc\u5305\n\u5148\u7406\u89e3\u4e00\u4e0b\u5206\u7ec4\u80cc\u5305~\n\n\u4e00\u5171\u6709n\u7ec4\u7269\u54c1\uff0c\u80cc\u5305\u5bb9\u91cfv\uff0c\u6bcf\u7ec4\u7269\u54c1\u81f3\u591a\u9009\u4e00\u4e2a\uff0c\u6bcf\u4e2a\u7269\u54c1\u81f3\u591a\u9009\u4e00\u6b21\uff0c\u7269\u54c1\u6709\u76f8\u5e94\u7684\u91cd\u91cfw[i]\uff0c\u6743\u503cc[i]\uff0c\u95ee\u5728\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\u7684\u60c5\u51b5\u4e0b\u6743\u503c\u548c\u6700\u5927\u4e3a\u591a\u5c11\u3002\u6211\u4eec\u7528f[i]\u8868\u793a\u5bb9\u91cf\u4e0d\u8d85\u8fc7i\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u6743\u503c\n```\nfor (int i = 1; i <= n; i++) //\u904d\u5386\u6bcf\u4e00\u7ec4\n\tfor (int j = v; j >= 0; j--) //\u5012\u5e8f\u679a\u4e3e\n\t\tfor (int k = \u7b2c\u4e00\u4e2a\u7269\u54c1; k <= \u6700\u540e\u4e00\u4e2a\u7269\u54c1; k++) //\u679a\u4e3e\u7ec4\u5185\u7269\u54c1\n\t\t\tif (j >= w[k]) f[j] = max(f[j], f[j - w[k]] + c[k]); //\u8f6c\u79fb \n```\n\u53ef\u4ee5\u770b\u51fa\u7b2c\u4e8c\u884c\u679a\u4e3e\u65f6\u662f\u5012\u5e8f\u7684\uff0c\u63a5\u4e0b\u6765\u6211\u6765\u8bf4\u4e00\u4e0b\u4e3a\u4ec0\u4e48\n\n\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u4e0d\u52a0\u7a7a\u95f4\u4f18\u5316\u7684\u539f\u59cb\u7248\u672c\uff1af[i][j]\u8868\u793a\u524di\u7ec4\u7269\u54c1\u9009\u5bb9\u91cf\u4e0d\u8d85\u8fc7j\u7684\u6700\u5927\u6743\u503c\u3002\u5982\u679c\u662f\u6b63\u5e8f\u679a\u4e3e\u7684\uff0c\u90a3\u4e48f[j-w[k]]\u4e00\u5b9a\u6bd4f[j]\u65e9\u88ab\u7b2ck\u4e2a\u7269\u54c1\u66f4\u65b0\u8fc7\uff0c\u90a3\u4e48\u5728\u66f4\u65b0\u4e00\u6b21\u7684\u8bdd\uff0c\u7b2ck\u4e2a\u7269\u54c1\u5c31\u88ab\u9009\u4e86\u591a\u6b21\uff0c\u5c31\u53d8\u6210\u5b8c\u5168\u80cc\u5305\u4e86\n\n\u800c\u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bb2\uff0c\u628a\u6bcf\u4e2a\u8282\u70b9\u90fd\u5f53\u6210\u4e00\u4e2a\u80cc\u5305\uff0c\u628a\u4ed6\u7684\u6240\u6709\u7684\u5b50\u8282\u70b9\u5f53\u6210\u4e00\u4e2a\u7ec4\uff0c\u6bcf\u7ec4\u7684\u7269\u54c1\u7684\u91cd\u91cf\u4e3a1,2,3...\u6bcf\u7ec4\u7684\u7269\u54c1\u7684\u6743\u503c\u4e3a\u90091\u4e2a\u7528\u6237\u3001\u90092\u4e2a\u7528\u6237\u3001\u90093\u4e2a\u7528\u6237...\u6240\u80fd\u5f97\u5230\u7684\u5229\u6da6\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u662f\u6ee1\u8db3\u5206\u7ec4\u80cc\u5305\u7684\u5b9a\u4e49\u7684\u3002\u6240\u4ee5\u6700\u7ec8\u72b6\u6001\u548c\u8f6c\u79fb\u4e5f\u5c31\u51fa\u6765\u4e86\n```\nf[i][j]\u8868\u793a\u4ee5\u7b2ci\u53f7\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u53d6j\u4e2a\u7528\u6237\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\nsiz[i]\u8868\u793a\u4ee5\u7b2ci\u53f7\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6709\u8fd9\u4e48\u591a\u4e2a\u53f6\u5b50\u8282\u70b9(\u76f8\u5f53\u4e8e\u5bb9\u91cf)\nfor (int i = head[rt]; i; i = e[i].nxt) { //\u679a\u4e3e\u5b50\u8282\u70b9 \n        int x = e[i].id;\n        if (x == fa) continue; //\u904d\u5386\u5230\u7236\u4eb2\u8df3\u8fc7 \n        dfs(x, rt);\n        siz[rt] += siz[x];\n        for (int j = siz[rt]; j >= 0; j--)\n            for (int k = 0; k <= siz[x] && k <= j; k++)\n                f[rt][j] = max(f[rt][j], f[rt][j - k] + f[x][k] - e[i].w); //\u8f6c\u79fb \n    } \n```\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u904d\u5386\u5230\u7b2ci\u4e2a\u513f\u5b50\u65f6\uff0csiz[rt]\u8fd8\u662f\u524di\u4e2a\u5b50\u8282\u70b9\u7684\u603b\u53f6\u8282\u70b9\u6570\uff0c\u8fd9\u521a\u662f\u6700\u5927\u7684\u5bb9\u91cf\u6570\u3002\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u6700\u5927\u7684i\u4f7f\u5f97f[1][i]>=0\uff0c\u53ea\u9700\u5012\u5e8f\u679a\u4e3e\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n# \u4e09\u3001\u7ec6\u8282\n~~\u7ec6\u8282\u51b3\u5b9a\u6210\u8d25~~\n\ndp\u4e00\u5b9a\u4e0d\u8981\u5fd8\u4e86\u8d4b\u521d\u503c\uff01\uff01\uff01\u7531\u4e8e\u9009\u5927\u4e8e0\u4e2a\u7528\u6237\u7684\u5229\u6da6\u53ef\u80fd\u4e3a\u8d1f\uff0c\u800cdp\u8fd8\u53d6\u4e0e\u672c\u8eab\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u8d4b\u8d1f\u65e0\u7a77\n```\nfor (int i = 1; i <= n; i++)\n    for (int j = 1; j <= m; j++) f[i][j] = -1e9;\n```\n\u6700\u540e\u9644\u4e0acode\uff1a\n```\n# include <bits/stdc++.h>\n# define MAXN 3005\nusing namespace std;\n\nstruct edge {\n    int id, nxt, w;\n} e[2 * MAXN];\n\nint n, m;\nint tot, head[MAXN], siz[MAXN];\nint f[MAXN][MAXN];\n\nvoid add_edge(int x, int y, int z) {\n    e[++tot].id = y;\n    e[tot].nxt = head[x];\n    e[tot].w = z;\n    head[x] = tot;\n}\n\nvoid dfs(int rt, int fa) {\n    if (rt >= n - m + 1) {\n        siz[rt] = 1;\n        return;\n    }\n    for (int i = head[rt]; i; i = e[i].nxt) {\n        int x = e[i].id;\n        if (x == fa) continue;\n        dfs(x, rt);\n        siz[rt] += siz[x];\n        for (int j = siz[rt]; j >= 0; j--)\n            for (int k = 0; k <= siz[x] && k <= j; k++)\n                f[rt][j] = max(f[rt][j], f[rt][j - k] + f[x][k] - e[i].w);\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    int num, v, w;\n    for (int i = 1; i <= n - m; i++) {\n        scanf(\"%d\", &num);\n        for (int j = 1; j <= num; j++) {\n            scanf(\"%d%d\", &v, &w);\n            add_edge(i, v, w);\n        }\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++) f[i][j] = -1e9;\n    for (int i = n - m + 1; i <= n; i++) scanf(\"%d\", &f[i][1]);\n    dfs(1, 0);\n    for (int i = siz[1]; i >= 0; i--)\n        if (f[1][i] >= 0) {\n            printf(\"%d\\n\", i);\n            break;\n        }\n    return 0;\n}\n\n```\n",
        "postTime": 1577026393,
        "uid": 116754,
        "name": "AK_IOI\u7684\u742a\u742a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "~~\u611f\u89c9\u5927\u5bb6\u8bb2\u5f97\u597d\u590d\u6742...~~\n\n\n------------\n\n\u9996\u5148\u5148\u628a\u9898\u76ee\u8bfb\u61c2\uff08\u7279\u522b\u662f\u8f93\u5165\uff0c\u770b\u5f97\u6e05\u695a\u4e9b\uff09\u3002\n\u8fd9\u9053\u9898\u5c31\u662f\u6c42\u6700\u5927\u53ef\u4ee5\u6ee1\u8db3\u7684\u7528\u6237\u6570\uff0c\u4fdd\u8bc1\u8fd9\u4e9b\u53f6\u5b50\u5230\u6839\u7684\u6bcf\u6761\u8fb9\u7684\u548c\uff08\u91cd\u53e0\u7684\u8fb9\u53ea\u8bb0\u4e00\u6b21\uff09<=\u53f6\u5b50\u7684\u652f\u4ed8\u8d39\u7528\u548c\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5199\u8f6c\u79fb\u65b9\u7a0b\u4e86\uff1a\n\n-  f[u][p][i]\u8868\u793a\u5f53\u524d\u7ed3\u70b9\u4e3au\uff0c\u5728\u641c\u7b2cp\u4e2a\u513f\u5b50\uff0c\u603b\u5171\u53ef\u4ee5\u6ee1\u8db3i\u4e2a\u7528\u6237\u7684\u6700\u5927\u6536\u76ca\u3002\n\n- ####  f[u][p][i]=max{ \u03a3(0<=j<=v\u4e0b\u9762\u7684\u7528\u6237\u603b\u6570) f[v][p][j]+f[u][p-1][i-j]-w[u][v]  }       (v=son[u][p])\n\n\t\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u5462\uff1f\u3010\u5f53\u524d\u513f\u5b50\u6709j\u4e2a\u7528\u6237\uff0c\u90a3\u4e48\u53ea\u6709p\u4e4b\u524d\u7684\u513f\u5b50\u603b\u7528\u6237\u4e3ai-j\u624d\u884c\uff0c\u540c\u65f6\u4e5f\u8981\u51cf\u53bbu->v\u8fb9\u7684\u8d39\u7528\u3002\u3011\n    \n- \u4f46\u662f\u6211\u4eec\u8fd8\u662f\u4f1aMLE\u3002\u9700\u8981\u6eda\u52a8\u4e00\u4e0b\uff0c\u628ap\u7ed9\u6eda\u6389\u2014\u2014\n\t\n   \u89c2\u5bdf\u4e00\u4e0b\uff0cp\u53ea\u4e0ep-1\u6709\u5173\uff0c\u4f46\u662f\u5982\u679c\u4ece\u524d\u5f80\u540e\u626b\u4f1a\u6709\u540e\u6548\u6027\uff08f[u][p][i]\u548cf[u][p-1][i-j]\uff0ci-j<i\uff0c\u4fee\u6539\u4e86\u518d\u8c03\u7528\u524d\u9762\u7684\u81ea\u7136\u4f1a\u9519\uff09\n  \n  ####   \u56e0\u6b64i\u8981\u4ece\u540e\u5f80\u524d\u626b\u3002\n   \n### - \u6700\u540e\u7684\u65b9\u7a0b\uff1af[u][i]=max{f[v][j]+f[u][i-j]-w[u][v]}\n\n\u53e6\u5916f\u53ef\u80fd\u662f\u8d1f\u7684\uff0c\u56e0\u6b64\u521d\u59cb\u5316\u9700\u8981\u5b9a\u4e3a-oo\u3002\n\n\n------------\n\n### CODE\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define reg register\n#define FOR(x,l,r) for(reg int x=l; x<=r; x++)\nusing namespace std;\nconst int N=3012;\nint n,m,head[N],nex[N*2],vet[N*2],val[N*2],edge;\nint f[N][N],a[N];\ninline void addedge(int u,int v,int c)\n{\n\tnex[++edge]=head[u];\n\thead[u]=edge;\n\tvet[edge]=v;\n\tval[edge]=c;\n}\ninline int dfs(int u)\n{\n\tif (u>=n-m+1) {f[u][1]=a[u];return 1;}//\u626b\u5230\u53f6\u5b50\u4e86\n\tint sum=0,s=0,v;\n\tfor (reg int e=head[u];v=vet[e],e;e=nex[e])\n\t{\n\t\ts=dfs(v);sum+=s;\n\t\tfor (int i=sum; i>=0; i--)//\u5012\u7740\u626b\n\t\t{\n\t\t\tFOR(j,0,s)\n\t\t\tf[u][i]=max(f[u][i],f[v][j]+f[u][i-j]-val[e]);\n\t\t}\n\t}\n\treturn sum;//\u628a\u5f53\u524d\u7ed3\u70b9\u4e0b\u7684\u7528\u6237\u6570\u4f20\u4e0a\u53bb\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint pp,x,y;\n\tFOR(i,1,n-m)\n\t{\n\t\tscanf(\"%d\",&pp);\n\t\tFOR(j,1,pp)\n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\taddedge(i,x,y);\n\t\t}\n\t}\n\tFOR(i,1,n)\n\t\tFOR(j,1,m) f[i][j]=-1000000012;//\u521d\u59cb\u5316\n\tFOR(i,n-m+1,n)\n\tscanf(\"%d\",&a[i]);\n\tdfs(1);\n\tfor (reg int i=m; i>0; i--)\n\tif (f[1][i]>=0) {printf(\"%d\\n\",i);break;}//\u53ea\u8981f\u6709\u6536\u76ca\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\n\treturn 0;\n}\n```\n\n~~OVER~~",
        "postTime": 1573439248,
        "uid": 43103,
        "name": "Tanktt",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u88f8\u7684\u6811\u4e0a\u5206\u7ec4\u80cc\u5305...\n\n\u5176\u5b9e\u521a\u5f00\u59cb\u505a\u8fd9\u7c7b\u9898\u7684\u65f6\u5019\u89c9\u5f97\u5f88\u96be\uff0c\u591a\u505a\u51e0\u9053\u5957\u8def\u5c31\u51fa\u6765\u7684\u3002\n\n\u6211\u4eec\u8bbe\u8ba1`f[i][j]`\u4e3a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u9009\u62e9j\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7684\u6700\u5927\u6536\u76ca.\n\n\u8f6c\u79fb\u975e\u5e38\u663e\u7136`f[i][j] = f[i][j - k] + f[son][k] - w`\n\n\u7136\u800c\u6211\u4eec\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f`j`\u9700\u8981\u7528\u5230`j - k`\u7684\u6570\u636e\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5012\u5e8f\u679a\u4e3e`j`\u6765\u907f\u514d\u6570\u636e\u8986\u76d6\u7684\u60c5\u51b5\u3002\n\n\u521d\u59cb\u5316\uff1a\n\u5bf9\u4e8e\u6240\u6709\u53f6\u5b50\u7ed3\u70b9`f[i][1] = w[i]` \u5373\u53ef\u3002\n\n\u5176\u4f59\u7684\u7ed3\u70b9\u8d4b\u503c\u4e3a```-inf```.\n\n$Code:$\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 3000 + 5;\n\nint head[N] , cnt , m , n;\nint f[N][N];\n\nstruct Edge {\n\tint to , nxt , w;\n}e[N << 1];\n\nvoid add(int u , int v , int w) {\n\te[++ cnt].to = v;\n\te[cnt].w = w;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nint sz[N];\nvoid pre(int now , int fa) {\n\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif(v == fa) continue;\n\t\tpre(v , now);\n\t\tsz[now] += sz[v];\n\t}\n}\n\nvoid dfs(int now , int fa) {\n\tfor(int i = head[now] ; i ; i = e[i].nxt) {\n\t\tint v = e[i].to , w = e[i].w;\n\t\tif(v == fa) continue;\n\t\tdfs(v , now);\n\t\tfor(int j = sz[now] ; j >= 1 ; j -- ) {\n\t\t\tfor(int k = 1 ; k <= sz[v] ; ++ k) {\n\t\t\t\tf[now][j] = max(f[now][j] , f[now][j - k] + f[v][k] - w);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main () {\n\t//freopen(\"data.txt\" , \"r\" ,stdin);\n\tscanf(\"%d %d\" , &n , &m);\n\tfor(int i = 1 ; i <= n - m ; ++ i) {\n\t\tint k; scanf(\"%d\" , &k);\n\t\twhile(k -- ) {\n\t\t\tint v , w; scanf(\"%d %d\" , &v , &w);\n\t\t\tadd(i , v , w); add(v , i , w);\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= n ; ++ i)\n\t\tfor(int j = 1 ; j <= m ; ++ j) f[i][j] = -0x3f3f3f3f; \n\tfor(int i = n - m + 1 ; i <= n ; ++ i) scanf(\"%d\" , &f[i][1]) , sz[i] = 1;\n\t\n\tpre(1 , 1);\n\tdfs(1 , 1);\n\tint ans = 0;\n\tfor(int i = 1 ; i <= sz[1] ; i ++) {\n\t\tif(f[1][i] >= 0) ans = i; \n\t}\n\t\n\tprintf(\"%d\\n\" , ans);\n\treturn 0;\n}\n```",
        "postTime": 1572507307,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P1273)\n\n\u6211\u4eec\u901a\u8fc7\u5728\u6811\u4e0a\u8dd1\u5206\u7ec4\u80cc\u5305\u7684\u65b9\u5f0f\u6765\u5b8c\u6210\u8fd9\u9053\u9898\u3002\n\n## \u72b6\u6001\u8bbe\u8ba1\n\n\u6211\u4eec\u8bbe\u8ba1\u72b6\u6001$f[i][j]$\u8868\u793a\u5728\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\u9009\u53d6$j$\u4e2a\u53f6\u5b50\u8282\u70b9\uff08\u7528\u6237\uff09\u5171\u7ed9\u4fe1\u53f7\u80fd\u591f\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\uff08\u5f53\u7136\uff0c\u8fd9\u4e2a\u6700\u5927\u4ef7\u503c\u53ef\u80fd\u662f\u8d1f\u7684\uff0c\u8fd9\u90fd\u6ca1\u6709\u5173\u7cfb\uff09\u3002\n\n## \u72b6\u6001\u8f6c\u79fb\n\n\u6211\u4eec\u8003\u8651\u6cdb\u5316\u7269\u54c1\u3002\n\n>\u6cdb\u5316\u7269\u54c1\u7684\u80cc\u5305:\n\u8fd9\u79cd\u80cc\u5305\uff0c\u6ca1\u6709\u56fa\u5b9a\u7684\u8d39\u7528\u548c\u4ef7\u503c\uff0c\u5b83\u7684\u4ef7\u503c\u662f\u968f\u7740\u5206\u914d\u7ed9\u5b83\u7684\u8d39\u7528\u800c\u5b9a\u3002\u5728\u80cc\u5305\u5bb9\u91cf\u4e3a  \u7684\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u5f53\u5206\u914d\u7ed9\u5b83\u7684\u8d39\u7528\u4e3a$v_i$\u65f6\uff0c\u80fd\u5f97\u5230\u7684\u4ef7\u503c\u5c31\u662f$h(v_i)$\u3002\u8fd9\u65f6\uff0c\u5c06\u56fa\u5b9a\u7684\u4ef7\u503c\u6362\u6210\u51fd\u6570\u7684\u5f15\u7528\u5373\u53ef\u3002--OI-wiki\n\n\u6211\u4eec\u628a\u4ee5\u6bcf\u4e2a\u8282\u70b9$k$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6240\u6709\u9009\u53d6\u8282\u70b9\u6570\u91cf\u7684\u72b6\u6001\u5206\u6210\u4e00\u7ec4\uff08\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u5728\u67d0\u4e00\u9897\u5b50\u6811\u4e0a\u5148\u9009\u4e86$i$\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u53c8\u9009\u4e86$j$\u4e2a\u8282\u70b9\uff0c\u8fd9\u6837\u4f1a\u91cd\u590d\uff09\u3002\n\n\u6211\u4eec\u904d\u5386\u8fd9\u9897\u6811\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u5728\u679a\u4e3e\u7ec4\u522b\uff0c\u6bcf\u5f53\u6211\u4eec\u4fbf\u5229\u5230\u67d0\u4e2a\u513f\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u5bf9\u5176\u505a\u5b8c\u4e00\u8f6e0/1\u80cc\u5305\uff08\u5206\u7ec4\u80cc\u5305\u7684\u7b2c$2$\u3001$3$\u5c42\u5faa\u73af\uff09\u540e\uff0c\u5c31\u7528\u8be5\u5b50\u8282\u70b9\u7684\u72b6\u6001\u53bb\u5c1d\u8bd5\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u6240\u6709\u72b6\u6001\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n#define int long long \n\nusing namespace std;\n\nint read()\n{\n    register int x = 0,f = 1;register char ch;\n    ch = getchar();\n    while(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n    while(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n    return x * f;\n}\n\nint n,p,m,k,cnt,ans,x,y,z,d[1000005],f[3005][3005],siz[100005],sum,v[100005];\n\nstruct edge{\n\tint to,nex,w;\n}e[2000005];\n\nvoid add(int x,int y,int z)\n{\n\te[++cnt].to = y;\n\te[cnt].w = z; \n\te[cnt].nex = d[x];\n\td[x] = cnt;\n}\n\nint dfs(int u)\n{\n\tif(u > n - m)\n\t{\n\t\tf[u][1] = v[u];\n\t\treturn 1;\n\t}\n\tint tj = 0,k;\n\tfor(int i = d[u]; i; i = e[i].nex)\n\t{\n\t\tint v = e[i].to;\n\t\tk = dfs(v);\n\t\ttj += k;\n\t\tfor(int l = tj; l > 0; l--)\n\t\t\tfor(int j = k; j >= 0; j--)\n\t\t\t\tf[u][l] = max(f[u][l],f[u][l - j] + f[v][j] - e[i].w);\n\t}\n\treturn tj;\n}\n\nsigned main()\n{\n\tn = read(); m = read();\n\tfor(int i = 1; i <= n - m; i++)\n\t{\n\t\tk = read();\n\t\tfor(int j = 1; j <= k; j++) y = read(), z = read(), add(i,y,z);\n\t}\n\tfor(int i = n - m + 1; i <= n; i++) v[i] = read(),sum += v[i];\n\tmemset(f,-100,sizeof(f));\n\tfor(int i = 1; i <= n; i++) f[i][0] = 0; \n\tdfs(1);\n\tfor(int i = m; i >= 0; i--)\n\t\tif(f[1][i] >= 0)\n    \t{\n    \t\tprintf(\"%d\\n\",i);\n    \t\treturn 0;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1572334301,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "# \u6811\u5f62\u52a8\u89c4\n-----------\n\u82e5\u4ee4$dp[u][k]$\u8868\u793a\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u62e9$k$\u4e2a\u7528\u6237\u662f\u6240\u5f97\u5230\u7684\u6700\u5927\u6536\u76ca\uff0c\u5219\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811$u$\u6765\u8bf4\u5b58\u5728\u4e24\u79cd\u53ef\u80fd\uff1a\n\n\n 1.\u9009\u62e9\u5728\u5f53\u524d\u7684\u5b50\u6811\u4e2d$num$\u4e2a\u7684\u7ed3\u70b9\u6700\u5927\u4ef7\u503c\n \n 2.\u4e0d\u9009\u62e9\u5f53\u524d\u7684\u5b50\u6811\u4e2d$num$\u4e2a\u7ed3\u70b9\u7684\u4ef7\u503c\n \n \u6545\u8003\u8651\u6bcf\u9897\u5b50\u6811$dp[u][k]$\uff0c\u9009\u62e9\u4e00\u9897\u5b50\u6811\u4e2d\u7684\u7ed3\u70b9\u76f8\u5f53\u4e8e$dp[u][k-num]+dp[v][num]-w[i]$,\u800c\u4e0d\u9009\u62e9\u5219\u4e3a$dp[u][k]$\n \n- \u5176\u4e2d$w[i]$\u4e3a\u4ece$u$\u5230\u5176\u513f\u5b50\u7684\u8fb9\u6743\uff0c$num$\u53d6\u503c\u4e3a$[1,size(son)]$,\u8868\u793a\u9009\u53d6\u7ed3\u70b9\u6570\u91cf\n \n \u6545\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b$dp[u][k] = max(dp[u][k-num]+dp[v][num]-w[i],dp[u][k])$\n \n \u6700\u540e\u7edf\u8ba1$dp[1][k]$,$k$\u53d6\u503c\u4e3a$[1,size(tree)]$\u662f\u6700\u5927\u7684$k$\u662f\u7684$dp$\u503c\u5927\u4e8e0\u7684\u5373\u53ef\u3002",
        "postTime": 1570875603,
        "uid": 38852,
        "name": "Sakurajima_Mai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u6811\u4e0a\u5206\u7ec4\u80cc\u5305\u3002\n\u4ee4$f[i][j]$\u8868\u793a\u4ee5\u7ed3\u70b9$i$\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5f00\u59cb\uff0c\u6ee1\u8db3\u4e86$j$\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u9700\u6c42\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u503c\uff0c\u90a3\u4e48\u4f7f\u5229\u6da6\u503c$f[1][i]$\u5927\u4e8e\u7b49\u4e8e0\u7684\u6700\u5927\u7684$i$\u5c31\u662f\u7b54\u6848\u3002\n\n\u518d\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u6c42$f[i][j]$\u7684\u503c\uff0c\u6811\u5f62DP\u80af\u5b9a\u662f\u4f1a\u4ece\u513f\u5b50\u7684\u5c5e\u6027\u66f4\u65b0\u5230\u7236\u4eb2\u7684\u5c5e\u6027\u7684\uff0c\u8fd9\u91cc\u9996\u5148\u679a\u4e3e\u7236\u4eb2\u4e00\u5171\u6ee1\u8db3\u4e86\u591a\u5c11\u4e2a\u53f6\u5b50\u7684\u9700\u6c42\uff0c\u7136\u540e\u6bcf\u6b21\u90fd\u4ece\u4e00\u4e2a\u65b0\u7684\u513f\u5b50\u3010\u80cc\u5305\u3011\u4e2d\u638f\u51fa$k$\u4e2a\u5e95\u5c42\u8ba1\u7b97\u597d\u4e86\u7684\u80fd\u5e26\u6765\u6700\u5927\u5229\u6da6\u7684\u53f6\u5b50\uff0c\u8003\u8651\u65b0\u513f\u5b50\u5728\u8fd9$j$\u4e2a\u53f6\u5b50\u4e2d\u8d21\u732e\u4e86$k$\u4e2a\u53f6\u5b50\u65f6\uff0c\u662f\u5426\u80fd\u66f4\u65b0\u7b54\u6848\u3002\n\n\u8fd9\u4e2a\u513f\u5b50\u6240\u80fd\u8d21\u732e\u7684$k$\u7684\u8303\u56f4\u662f$[1,  sum[child] ]$\u3010$sum$\u6570\u7ec4\u8868\u793a\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u53f6\u5b50\u3011\u3011\uff0c$k$\u7b49\u4e8e0\ufe0f\u20e3\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u5bf9\u7236\u4eb2\u7ed3\u70b9\u7684\u503c\u6ca1\u6709\u9020\u6210\u5f71\u54cd\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u8003\u8651\u3002\u679a\u4e3e\u5230\u66f4\u65b0$k$\u4e2a\u53f6\u5b50\u65f6\uff0c\u7236\u4eb2\u7684$temp$\u5229\u6da6\u5e94\u8be5\u662f\uff1a\u3010\u672c\u513f\u5b50\u8d21\u732e\u7684$k$\u4e2a\u53f6\u5b50\u5e26\u6765\u7684\u5229\u6da6\u3011+\u3010\u524d\u9762\u7684\u53f6\u5b50\u8282\u70b9\u8d21\u732e\u5269\u4f59\u7684\u53f6\u5b50\u5e26\u6765\u7684\u5229\u6da6 -\u3010\u7236\u4eb2\u4fee\u5230\u672c\u513f\u5b50\u7684\u4e00\u6761\u8def\u6240\u7528\u7684\u82b1\u8d39\u3011\n\n\u5982\u679c\u8003\u8651\u5230\u672c\u513f\u5b50\u8d21\u732e\u7684$k$\u4e2a\u53f6\u5b50\u5229\u6da6\u66f4\u5927\u7684\u8bdd\uff0c\u90a3\u4e48\u7236\u4eb2\u7684\u5229\u6da6\u5e94\u8be5\u88ab\u66f4\u65b0\u3002\n\n\u8fd9\u91cc\u679a\u4e3e\u7236\u4eb2\u4e00\u5171\u6ee1\u8db3\u4e86\u591a\u5c11\u4e2a\u53f6\u5b50\u65f6\u8981\u5012\u5e8f\uff0c\u5426\u5219\u6bd4\u8f83\u4f18\u7684\u53f6\u5b50\u4f1a\u66f4\u65b0\u7b54\u6848\u5f88\u591a\u6b21\u3002\n\n\u5173\u4e8e\u521d\u59cb\u6761\u4ef6\uff0c\u9996\u5148\u6240\u6709\u7684\u5229\u6da6\u90fd\u5e94\u8be5\u521d\u59cb\u5316\u4e3a\u8d1f\u65e0\u7a77\uff0c\u7136\u540e\u5bf9\u6240\u6709\u5b50\u6811\uff0c\u5b8c\u5168\u4e0d\u9009\u7684\u5229\u6da6\u662f0\ufe0f\u20e3\uff1b\u5bf9\u6240\u6709\u53f6\u5b50\uff0c\u9009\u4e00\u4e2a\u7684\u5229\u6da6$f[leaf][1]$\u5c31\u662f\u4ed6\u7ed9\u7684\u94b1\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <algorithm>\n\nusing namespace std;\n#define ll long long\nconst ll MAXN = 2e5 + 7;\nconst ll INF = 1e9;\nconst ll mod = 1e9 + 7;\n\nstruct edge{\n    int to;\n    int cost;\n    edge(int aa, int bb){to = aa; cost = bb;}\n    edge(){}\n};\n\nint n, m;\nvector<edge> son[3005];\nint val[3005];\nint sum[3005];\nint f[3005][3005];\n\nvoid cal(int x){ //DP\u90e8\u5206\n    f[x][0] = 0;\n    if(son[x].empty()){\n        f[x][1] = val[x];\n        sum[x] = 1;\n        return;\n    }\n    for(int i = 0; i < son[x].size(); i++)\n        cal(son[x][i].to);\n    for(int i = 0; i < son[x].size(); i++){\n        sum[x] += sum[son[x][i].to];\n        for(int j = sum[x]; j >= 0; j--){\n            int child = son[x][i].to;\n            for(int k = 1; k <= sum[child]; k++){\n                f[x][j] = max(f[x][j], f[x][j-k] + f[child][k] - son[x][i].cost);\n            }\n        }\n    }\n}\n\nint main(){\n    cin >> n >> m;\n    for(int i = 1; i <= n - m; i++){\n        int k;\n        cin >> k;\n        for(int j = 0; j < k; j++){\n            int a, c;\n            cin >> a >> c;\n            son[i].push_back(edge(a, c));\n        }\n    }\n    for(int i = 1; i <= n; i++){\n        if(son[i].empty()){\n            int x;\n            cin >> x;\n            val[i] = x;\n        }\n    }\n    for(int i = 1; i <= n; i++)\n        for(int j = 0; j <= m; j++)\n            f[i][j] = -INF;\n    cal(1);\n    for(int i = sum[1]; i >= 0; i--)\n        if(f[1][i] >= 0){\n            cout << i << endl;\n            return 0;\n        }\n}\n\n```\n",
        "postTime": 1567258703,
        "uid": 137010,
        "name": "Skyler1017",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u535a\u5ba2\u98df\u7528\u6548\u679cMax\n[$$\\text{$\\color{red}\\large\\mathfrak{blog}$}$$](https://www.cnblogs.com/IcedMoon/p/11427914.html)\n\n\n\n\n\n# \u9898\u76ee\u7b80\u4ecb\n\n## \u9898\u76ee\u63cf\u8ff0\n\n> \u67d0\u6536\u8d39\u6709\u7ebf\u7535\u89c6\u7f51\u8ba1\u5212\u8f6c\u64ad\u4e00\u573a\u91cd\u8981\u7684\u8db3\u7403\u6bd4\u8d5b\u3002\u4ed6\u4eec\u7684\u8f6c\u64ad\u7f51\u548c\u7528\u6237\u7ec8\u7aef\u6784\u6210\u4e00\u68f5\u6811\u72b6\u7ed3\u6784\uff0c\u8fd9\u68f5\u6811\u7684\u6839\u7ed3\u70b9\u4f4d\u4e8e\u8db3\u7403\u6bd4\u8d5b\u7684\u73b0\u573a\uff0c\u6811\u53f6\u4e3a\u5404\u4e2a\u7528\u6237\u7ec8\u7aef\uff0c\u5176\u4ed6\u4e2d\u8f6c\u7ad9\u4e3a\u8be5\u6811\u7684\u5185\u90e8\u8282\u70b9\u3002\n>\n> \u4ece\u8f6c\u64ad\u7ad9\u5230\u8f6c\u64ad\u7ad9\u4ee5\u53ca\u4ece\u8f6c\u64ad\u7ad9\u5230\u6240\u6709\u7528\u6237\u7ec8\u7aef\u7684\u4fe1\u53f7\u4f20\u8f93\u8d39\u7528\u90fd\u662f\u5df2\u77e5\u7684\uff0c\u4e00\u573a\u8f6c\u64ad\u7684\u603b\u8d39\u7528\u7b49\u4e8e\u4f20\u8f93\u4fe1\u53f7\u7684\u8d39\u7528\u603b\u548c\u3002\n>\n> \u73b0\u5728\u6bcf\u4e2a\u7528\u6237\u90fd\u51c6\u5907\u4e86\u4e00\u7b14\u8d39\u7528\u60f3\u89c2\u770b\u8fd9\u573a\u7cbe\u5f69\u7684\u8db3\u7403\u6bd4\u8d5b\uff0c\u6709\u7ebf\u7535\u89c6\u7f51\u6709\u6743\u51b3\u5b9a\u7ed9\u54ea\u4e9b\u7528\u6237\u63d0\u4f9b\u4fe1\u53f7\u800c\u4e0d\u7ed9\u54ea\u4e9b\u7528\u6237\u63d0\u4f9b\u4fe1\u53f7\u3002\n>\n> \u5199\u4e00\u4e2a\u7a0b\u5e8f\u627e\u51fa\u4e00\u4e2a\u65b9\u6848\u4f7f\u5f97\u6709\u7ebf\u7535\u89c6\u7f51\u5728\u4e0d\u4e8f\u672c\u7684\u60c5\u51b5\u4e0b\u4f7f\u89c2\u770b\u8f6c\u64ad\u7684\u7528\u6237\u5c3d\u53ef\u80fd\u591a\u3002\n\n## \u8f93\u5165\u8f93\u51fa\n\n> \u8f93\u5165\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6574\u6570N\u548cM\uff0c\u5176\u4e2d2\u2264N\u22643000\uff0c1\u2264M\u2264N-1\uff0cN\u4e3a\u6574\u4e2a\u6709\u7ebf\u7535\u89c6\u7f51\u7684\u7ed3\u70b9\u603b\u6570\uff0cM\u4e3a\u7528\u6237\u7ec8\u7aef\u7684\u6570\u91cf\u3002\n>\n> \u7b2c\u4e00\u4e2a\u8f6c\u64ad\u7ad9\u5373\u6811\u7684\u6839\u7ed3\u70b9\u7f16\u53f7\u4e3a1\uff0c\u5176\u4ed6\u7684\u8f6c\u64ad\u7ad9\u7f16\u53f7\u4e3a2\u5230N-M\uff0c\u7528\u6237\u7ec8\u7aef\u7f16\u53f7\u4e3aN-M+1\u5230N\u3002\n>\n> \u63a5\u4e0b\u6765\u7684N-M\u884c\u6bcf\u884c\u8868\u793a\u2014\u4e2a\u8f6c\u64ad\u7ad9\u7684\u6570\u636e\uff0c\u7b2ci+1\u884c\u8868\u793a\u7b2ci\u4e2a\u8f6c\u64ad\u7ad9\u7684\u6570\u636e\uff0c\u5176\u683c\u5f0f\u5982\u4e0b\uff1a\n>\n> K A1 C1 A2 C2 \u2026 Ak Ck\n>\n> K\u8868\u793a\u8be5\u8f6c\u64ad\u7ad9\u4e0b\u63a5K\u4e2a\u7ed3\u70b9(\u8f6c\u64ad\u7ad9\u6216\u7528\u6237)\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u5bf9\u5e94\u4e00\u5bf9\u6574\u6570A\u4e0eC\uff0cA\u8868\u793a\u7ed3\u70b9\u7f16\u53f7\uff0cC\u8868\u793a\u4ece\u5f53\u524d\u8f6c\u64ad\u7ad9\u4f20\u8f93\u4fe1\u53f7\u5230\u7ed3\u70b9A\u7684\u8d39\u7528\u3002\u6700\u540e\u4e00\u884c\u4f9d\u6b21\u8868\u793a\u6240\u6709\u7528\u6237\u4e3a\u89c2\u770b\u6bd4\u8d5b\u800c\u51c6\u5907\u652f\u4ed8\u7684\u94b1\u6570\u3002\n\n> \u8f93\u51fa\u6587\u4ef6\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4e0a\u8ff0\u95ee\u9898\u6240\u8981\u6c42\u7684\u6700\u5927\u7528\u6237\u6570\u3002$$\n\n# \u9898\u76ee\u5206\u6790\n\n## \u601d\u8def\u5206\u6790\n\n\u5e94\u8be5\u5f88\u7b80\u5355\u80fd\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u6811\u4e0a\u5206\u7ec4\u80cc\u5305\uff0c\u8003\u8651\u72b6\u6001\n\n\u8bbef[u][i]\u4ee3\u8868\u4ee5u\u4e3a\u8282\u70b9\uff0c\u9009i\u4e2a\u7528\u6237\u6240\u80fd\u5f97\u5230\u7684\u94b1\u7684\u6700\u5927\u503c\n\n\u8f6c\u79fb\u65b9\u7a0b:\n\n\u5bf9\u4e8e\u8282\u70b9v\uff0c\u5206\u914d\u5176j\u4e2a\u7528\u6237\uff0c\u5219\u8282\u70b9u\u53ea\u9700\u8981\u5206\u914d\u5230i-j\u4e2a\u7528\u6237\uff0c\u5982\u6b64\u8fdb\u884c\u679a\u4e3e\n\n\u6709:f[u][i]=max(f[u][i],f[[v][j]+f[u][i-j]-e(w))\n\n# \u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define re register\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tll k=1,sum=0;\n\tchar c=getchar();\n\tfor(;c<'0' || c>'9';c=getchar()) if(c=='-') k=-1;\n\tfor(;c>='0' && c<='9';c=getchar()) sum=sum*10+c-'0';\n\treturn sum*k;\n} \nconst int N=3e3+10;\nint n,m;\nint val[N];\nint dp[N][N];\nint head[N],cnt;\nstruct Edge{\n\tint to,nxt,w;\n}edge[N<<1]; \ninline void Add(int x,int y,int w){\n\tedge[++cnt].to=y;edge[cnt].nxt=head[x];edge[cnt].w=w;head[x]=cnt;\n}\ninline int dfs(int x){\n\tif(x>n-m){\n\t\tdp[x][1]=val[x];\n\t\treturn 1;\n\t}int sum=0;\n\tfor(re int i=head[x];i;i=edge[i].nxt){\n\t\tint y=edge[i].to;\n\t\tint t=dfs(y);sum+=t;\n\t\tfor(re int j=sum;j>0;--j){\n\t\t\tfor(re int k=t;k;--k){\n\t\t\t\tif(j-k>=0) dp[x][j]=max(dp[x][j],dp[y][k]+dp[x][j-k]-edge[i].w);\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\nint main()\n{\n\tmemset(dp,~0x3f,sizeof(dp));\n\tn=read();m=read();\n\tfor(re int i=1;i<=n-m;++i){\n\t\tint Arknights=read();\n\t\tfor(re int j=1;j<=Arknights;++j){\n\t\t\tint v=read(),w=read();\n\t\t\tAdd(i,v,w);\n\t\t}\n\t}\n\tfor(re int i=n-m+1;i<=n;++i) val[i]=read();\n\tfor(re int i=1;i<=n;++i) dp[i][0]=0;\n\tdfs(1);\n\tfor(re int i=m;i;--i){\n\t\tif(dp[1][i]>=0) {\n\t\t\tcout<<i;return 0;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1567048953,
        "uid": 48270,
        "name": "_YYY_",
        "ccfLevel": 0,
        "title": "P1273 \u6709\u7ebf\u7535\u89c6\u7f51 \u9898\u89e3"
    },
    {
        "content": "###### \u592a\u96be\u4e86\u8fd9\u9898\u3002\u3002\u3002\u88ab\u4e00\u4e2a\u5c0f\u7ec6\u8282\u7206\u5361\n###### \u5f53\u65f6\u5f00\u59cb\u505a\u7684\u65f6\u5019\u662f\u4e0b\u5348\u4e24\u70b9\uff0c\u505a\u5b8c\u4e00\u770b\u5df2\u7ecf4\u70b9\u4e86\u3002\u3002\u3002\u3002\n###### \u601d\u8def\uff1a\n###### \u8bbef[i][j]\u4e3a\u7b2ci\u4e2a\u8282\u70b9\u53ef\u6ee1\u8db3j\u4e2a\u7528\u6237\u7684\u6700\u5927\u5229\u76ca\uff0c\u4e8e\u662f\u7ed3\u5408\u6811\u72b6\u80cc\u5305\u6a21\u677f\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\n###### \u5f97\u51fa\uff1af[u][j]=max(f[u][j],f[u][j-k]+f[v][k]-w)\n###### \u76f4\u63a5\u4ee3\u7801\u5427\uff0c\u91cc\u9762\u6709\u6ce8\u91ca\uff1a\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstring>\nusing namespace std;\nstruct edge{\n\tint u,v,w;\n};\nvector<edge> g[5001];//\u6211\u662f\u7528vector+\u7ed3\u6784\u4f53\u5b58\u56fe\u7684\u3002\u3002\nint n,m,u,v,w,f[5001][5001];\nint val[100001];\nint dfs(int u,int fa){//u\u662f\u904d\u5386\u5230\u7684\u8282\u70b9\uff0cfa\u662f\u8be5\u8282\u70b9\u7684\u7236\u4eb2\n    if(u>n-m){//\u5047\u5982\u8be5\u8282\u70b9\u5c31\u662f\u6839\u8282\u70b9\uff08\u7528\u6237\u7ec8\u7aef\uff09\n        f[u][1]=val[u];//\u8d4b\u503c\n        return 1;\n    }\n    int sum=0,t;//t\u662f\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f,\u7ed3\u5408\u4e0b\u9762\u4ee3\u7801\u7406\u89e3\n    for(int i=0;i<g[u].size();i++){\n        int v=g[u][i].v,w=g[u][i].w;\n        if(v==fa)continue;//\u8fd9\u4e24\u884c\u4e0d\u89e3\u91ca\uff0c\u6811\u5f62dp\u5e38\u89c4\u5957\u8def\n        t=dfs(v,u),sum+=t;//\u7ed3\u5408\u4e0a\u9762\u4ee3\u7801\u7406\u89e3\n        for(int j=sum;j>=0;j--){\n            for(int k=1;k<=t;k++){//\u904d\u5386\u4e00\u4e0b\u7ec4\u7684\u5143\u7d20\n                f[u][j]=max(f[u][j],f[u][j-k]+f[v][k]-w);\n            }\n        }\n    }\n    return sum;\n}\nint main(){\n    memset(f,-0x7f,sizeof(f));//\u6211\u5c31\u662f\u8fd9\u91cc\u5361\u7684\u4e24\u5c0f\u65f6\u3002\u3002\u3002\u5fc5\u987b\u5f97\u5c06f\u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u6781\u5c0f\u7684\u8d1f\u6570\uff0c\u56e0\u4e3af\u6570\u7ec4\u4e5f\u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u800c\u4e14\u4e0d\u80fd\u592a\u5c0f\uff0c\u4e5f\u4e0d\u80fd\u592a\u5927\n    cin>>n>>m;\n    for(int i=1;i<=n-m;i++){\n        int k;cin>>k;\n        for(int j=1;j<=k;j++){\n            int x,y;cin>>x>>y;\n            g[i].push_back((edge){i,x,y});\n            g[x].push_back((edge){x,i,y});\n        }\n    }\n    for(int i=n-m+1;i<=n;i++)cin>>val[i];\n    for(int i=1;i<=n;i++)f[i][0]=0;//\u521d\u59cb\u5316\u4e00\u4e0b\u4e0d\u9009\u7684\u60c5\u51b5\n    dfs(1,0);\n    for(int i=m;i>=1;i--){\n        if(f[1][i]>=0){\n            cout<<i;\n            break;\n        }\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1565165358,
        "uid": 87783,
        "name": "\u9e2d\u9e2d\u83ccdlctfu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u521a\u770b\u5230\u8fd9\u9898\u76ee\u65f6\uff0c\u771f\u7684\u6709\u4e9b\u61f5\u903c\n\n\u7b2c\u4e00\u611f\u89c9\uff1a\u8bbe\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u8bb0f[i]\u4e3a\u7b2ci\u4e2a\u8282\u70b9\u6240\u80fd\u6ee1\u8db3\u7684\u6700\u5927\u7528\u6237\u6570\n\n\u7136\u800c\uff0c\u7ecf\u5178\u7684bug\uff1a\n```\n5 3\n2 2 4 5 10\n2 3 10 4 10\n1 1 10000\n```\n\u663e\u7136\uff0c\u5bf9\u4e8e\u8fd9\u79cd~~\u9b3c~~\u6570\u636e\u5c31\u4e0d\u6210\u7acb\u4e86\u3002\n\n#### \u4e8e\u662f\uff0c\u5b66\u4e60\u4e86\u9898\u89e3\u5927\u4f6c\u7684\u65b9\u6cd5\uff1a\u8bbef[i][j]\u8868\u793a\u7b2ci\u4e2a\u8282\u70b9\u6ee1\u8db3j\u4e2a\u7528\u6237\u7684\u6700\u5927\u5229\u76ca\u3002\n\n\u4e8e\u662f\uff0c\u7a0b\u5e8f\u7684\u5927\u4f53\u6846\u67b6\u5c31\u53ef\u4ee5\u6253\u597d\u4e86\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#define INF 0x6ffffff\nusing namespace std;\nint n,m,k;\nstruct Edge{ int son,cost; };\nvector<Edge> tree[3100];\nint f[3100][3100];\nint dp(int now){\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) tree[i].clear();\n\tfor(int i=1;i<=n-m;i++){\n\t\tscanf(\"%d\",&k);\n\t\tfor(int j=1;j<=k;j++){\n\t\t\tint a,c;\n\t\t\tscanf(\"%d%d\",&a,&c);\n\t\t\ttree[i].push_back(Edge{a,c});\n\t\t}\n\t\tfor(int j=1;j<=m;j++) f[i][j]=-INF; f[i][0]=0;\n\t}\n\tfor(int i=n-m+1;i<=n;i++){\n\t\tint w;\n\t\tscanf(\"%d\",&w);\n\t\tf[i][1]=w; f[i][0]=0;\n\t\tfor(int j=2;j<=m;j++) f[i][j]=-INF; f[i][0]=0;\n\t}\n\tdp(1);\n\tfor(int i=m;i>=1;i--)\n\t\tif(f[1][i]>=0){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"%d\\n\",0);\n\treturn 0;\n} \n```\n\uff08\u8fd9\u6bb5\u4ee3\u7801\u662f\u4ece\u5b8c\u6574\u4ee3\u7801\u4e2d\u622a\u53d6\u7684\uff0c\u521d\u59cb\u5316\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff09\n\n#### \u7136\u800c\uff0c\u8fd8\u5c11\u4e00\u4e2a\u6700\u5934\u75db\u7684dp()  ~~/\u6d41\u6c57~~\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f00\u59cb\u60f3\uff1a\u5982\u4f55\u9012\u63a8\uff1f\uff1f\uff1f\n\n\u663e\u7136\uff0c\u6211\u4eec\u8981\u627e\u5230\u4e00\u4e2a\u6570\u5217c\u4f7fc\u7684\u548c\u4e3aj\u3002\n\n\u8fd9\u65f6\uff0cf[i][j]=\u6570\u5217c\u7684\u6700\u5927\u6536\u76ca\n\n~~\u6240\u4ee5\uff0c\u6211\u8fd9\u79cd\u849f\u84bb\u7684\u7b2c\u4e00\u611f\u89c9\u662f\u6df1\u641c~~\n\n### \u7136\u800c\uff0c\u5927\u4f6c\u4f1a\u60f3\u5230\u52a8\u89c4\u3002\u3002\u3002\u3002~~/\u9876\u793c\u819c\u62dc~~\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f00\u59cb\u60f3\u52a8\u89c4\u3002\n\n\u6211\u6210\u529f\u5730\u629b\u5f03\u4e86\u6811\u6765\u601d\u8003\uff1a\n\n\u4e8e\u662f\u5199\u4e86\u4e00\u53e5\n\n```now:g[j][user]=max(g[j-1][user],g[j-1][user-k]+f[j][k]-w)   k=1..j```\n\n\u5927\u6982\u5c31\u662f\u5f53 \u5f53\u524d\u8282\u70b9\u4e3anow\u7684\u65f6\u5019\uff0c\u6211\u65b0\u5efa\u4e00\u4e2a\u6570\u7ec4g\uff0c\u8868\u793a1..j\u4e2a\u53f6\u5b50\u7ed3\u70b9\u6ee1\u8db3user\u4e2a\u7528\u6237\u7684\u6700\u5927\u6536\u76ca\u3002\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u5173\u7cfb\u5f0f\uff08\u56fe\u4e2d\u53f6\u5b50\u7ed3\u70b9\u5c31\u75281..j\u6765\u8868\u793a\uff0c\u9012\u63a8\u5f0f\u6e05\u695a\u70b9\uff09\n\n#### \u7136\u800c\u663e\u7136\uff0c\u8fd9\u4e5f\u4e0d\u5927\u73b0\u5b9e\uff1a\u8981\u4e48\u662f\u51fd\u6570\u91cc\u8bbe\u7f6e\u6570\u7ec4MLE\uff0c\u8981\u4e48\u5c31\u662f\u5faa\u73af\u5d4c\u5957\uff08\u53ef\u80fd\u8ddf\u6211\u7684\u5199\u6cd5\u4e5f\u6709\u5173\u7cfb\uff0c\u56e0\u4e3a\u6211\u5bf9\u4e8e\u53f6\u5b50\u7ed3\u70b9\u7684\u66f4\u65b0\u548c\u5bf9\u4e8eg\u7684\u66f4\u65b0\u662f\u540c\u6b65\u7684\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u8981\u662f\u6211\u8bbe\u5728\u4e3b\u51fd\u6570\u91cc\u4f1a\u5728\u5d4c\u5957\u51fd\u6570\u65f6\u6539\u52a8g\u503c\uff09\n\n\u4e8e\u662f\uff0c\u6211\u60f3\u5230\u4e86\u6eda\u52a8\u6570\u7ec4\uff0c\u5373\u628ag\u7684\u7b2c1\u7ef4j\u538b\u7f29\u6389\uff0c\u8fd9\u6837user\u5c31\u662ff[i][j]\u4e2d\u7684j\u4e86\n\n\u89c2\u5bdf\u4e00\u4e0b\uff0c\u662fuser-k\uff0c\u6240\u4ee5\u8981\u5012\u5e8f\u9012\u63a8\n\n\u4e8e\u662f\uff0cg\u5c31\u88ab\u6210\u529f\u538b\u7f29\u5230f\u4e2d\u4e86\n\n```cpp\n\tfor(vector<Edge>::iterator i=tree[now].begin();i<tree[now].end();i++){\n\t\tint nowson=dp(i->son); totson+=nowson;\n\t\tfor(int j=totson;j>=1;j--)\n\t\t\tfor(int k=1;k<=j;k++)\n\t\t    \tif(f[i->son][k]!=-INF&&f[now][j-k]!=-INF)\n\t\t\t\t    f[now][j]=max(f[now][j],f[now][j-k]+f[i->son][k]-i->cost);\n\t}\n```\n\u4ee5-INF\u6807\u8bc6\u80fd\u4e0d\u80fd\u5b9e\u73b0\uff08\u4e00\u822c\u53ea\u6709\u7528\u6237\u8d85\u9650\u624d\u4f1a\u51fa\u73b0-INF\uff09\uff0c\u52a0\u4e86\u4fdd\u9669\n\n\u6ce8\u610f\u70b9\uff1a\n\n  1.\u5fc5\u987b\u8981totson\u800c\u4e0d\u80fd\u76f4\u63a5\u7528m\uff0c\u4e0d\u7136\u4f1aTLE\n  \n  2.\u9664f[\u53f6\u5b50\u8282\u70b9][1]\u548cf[\u8282\u70b9][0]\u5916\u5176\u4ed6\u7684\u90fd\u8981\u4e3a-INF\uff0c\u4e0d\u7136\u4f1a\u9020\u6210\u66f4\u65b0\u8fc7\u591a\uff0c\u800c\u51fa\u73b0bug\uff08~~40\u5206\uff0c\u76f4\u63a5\u5361\u63896\u4e2a\u70b9~~\uff09\n  \n  \n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n/*  now:g[j][user]=max(g[j-1][user],g[j-1][user-k]+f[j][k]-w)  */ \n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#define INF 0x6ffffff\nusing namespace std;\nint n,m,k;\nstruct Edge{ int son,cost; };\nvector<Edge> tree[3100];\nint f[3100][3100];\nint dp(int now){\n\tif(tree[now].empty()) return 1;\n\tint totson=0;\n\tfor(vector<Edge>::iterator i=tree[now].begin();i<tree[now].end();i++){\n\t\tint nowson=dp(i->son); totson+=nowson;\n\t\tfor(int j=totson;j>=1;j--)\n\t\t\tfor(int k=1;k<=j;k++)\n\t\t    \tif(f[i->son][k]!=-INF&&f[now][j-k]!=-INF)\n\t\t\t\t    f[now][j]=max(f[now][j],f[now][j-k]+f[i->son][k]-i->cost);\n\t}\n\treturn totson;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) tree[i].clear();\n\tfor(int i=1;i<=n-m;i++){\n\t\tscanf(\"%d\",&k);\n\t\tfor(int j=1;j<=k;j++){\n\t\t\tint a,c;\n\t\t\tscanf(\"%d%d\",&a,&c);\n\t\t\ttree[i].push_back(Edge{a,c});\n\t\t}\n\t\tfor(int j=1;j<=m;j++) f[i][j]=-INF; f[i][0]=0;\n\t}\n\tfor(int i=n-m+1;i<=n;i++){\n\t\tint w;\n\t\tscanf(\"%d\",&w);\n\t\tf[i][1]=w; f[i][0]=0;\n\t\tfor(int j=2;j<=m;j++) f[i][j]=-INF; f[i][0]=0;\n\t}\n\tdp(1);\n/*\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<=m;j++)\n\t\t    printf(\"%4d\",f[i][j]==-INF?-1:f[i][j]);\n\t\tprintf(\"\\n\");\n\t} */\n\tfor(int i=m;i>=1;i--)\n\t\tif(f[1][i]>=0){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\treturn 0;\n\t\t}\n\tprintf(\"%d\\n\",0);\n\treturn 0;\n} \n```\n",
        "postTime": 1561822384,
        "uid": 16588,
        "name": "panhuachao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "|  |  |\n| :----------: | :----------: |\n|  |  |\n|  |  |\n\u505a\u8fc7\u4e00\u4e9b\u9898\u76ee\uff0c\u5e94\u8be5\u5c31\u80fd\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u6811\u4e0a\u7684\u5206\u7ec4\u80cc\u5305\u3002\n\n\u6211\u4eec\u8bbedp[i][j]\u8868\u793a\u5728\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6ee1\u8db3j\u4e2a\u5ba2\u6237\u7684\u9700\u6c42\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u6536\u76ca\uff0c\n\n\u90a3\u4e48\u5728\u6700\u7ec8\u6c42\u6700\u591a\u5ba2\u6237\u65f6\uff0c\u53ea\u8981\u6c42\u6700\u5927\u7684dp[1][i]>=0\u7684i\u5c31\u884c\u4e86\u3002\n\n\u81f3\u4e8e\u5206\u7ec4\u80cc\u5305\uff0c\u6211\u4eec\u8bbedp[i][u][j]\u8868\u793a\u4ee5u\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u4ec5\u7528\u524di\u4e2a\u513f\u5b50\uff0c\u6ee1\u8db3j\u4e2a\u5ba2\u6237\u53d6\u5f97\u6700\u5927\u4ef7\u503c\uff0c\n\n\u90a3\u4e48dp[i][u][j]=max(dp[i-1][u][j-k]+dp[full_son_size[v]][v][k]);\n\n\u800ci\u8fd9\u4e00\u7ef4\u53ef\u4ee5\u76f4\u63a5\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u6389\u3002\n\n\u800c\u8fd9\u4e2a\u80cc\u5305\uff0c\u6709\u4e9b\u7ec6\u8282\u4f18\u5316\u662f\u53ef\u4ee5\u8fc7\u6389\u8ba8\u8bba\u4e2d\u7684\u90a3\u4e2a\u6781\u9650\u6570\u636e\u3002\n\n\u5982\uff0c\u5c06\u4e0b\u9762\u9898\u89e3\u4ee3\u7801\u4e2dsum+=x\u6539\u5230dp\u540e\u3002\u7136\u540e\u628adp[u][j]=max(dp[u][j],dp[u][j-k]+dp[v][k])\n\n\u6539\u4e3adp[u][j+k]=max(dp[u][j+k],dp[u][j]+dp[v][k])\uff0c\u6700\u540e\u628adp[u][j]\u5148\u7528\u4e00\u4e2a\u6570\u7ec4t\u4fdd\u5b58\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u591a\u53c9\u6811\u4e0a\u7684\u80cc\u5305\u8be6\u89e3\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```c\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=3010;\nint n,m,EdgeCnt=0;\nint dp[N][N],val[N],a[N],t[N];\nstruct Edge{\n    int to,w,next;\n}e[N*N];\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nvoid addedge(int u,int v,int w){\n    int p=++EdgeCnt;\n    e[p].to=v;e[p].w=w;e[p].next=a[u];\n    a[u]=p;\n}\nint dfs(int u){\n    if (u>n-m){\n        dp[u][1]=val[u];\n        return 1;\n    }\n    int sum=0;\n    for (int p=a[u];p;p=e[p].next){\n        int v=e[p].to;\n        int tk=dfs(v);\n        for (int j=0;j<=sum;j++)t[j]=dp[u][j];\n        for (int j=0;j<=sum;j++)\n            for (int k=0;k<=tk;k++)\n                dp[u][j+k]=max(dp[u][j+k],t[j]+dp[v][k]-e[p].w);\n        sum+=tk;\n    }\n    return sum;\n}\nint main(){\n    n=read(),m=read();\n    memset(dp,~0x3f,sizeof(dp));\n    for (int u=1;u<=n-m;u++){\n        int size=read();\n        for (int j=1;j<=size;j++){\n            int v=read(),w=read();\n            addedge(u,v,w);\n        }\n    }\n    for (int i=n-m+1;i<=n;i++)\n        val[i]=read();\n    for (int i=1;i<=n;i++)\n        dp[i][0]=0;\n    dfs(1);\n    for (int i=m;i>0;i--)\n        if (dp[1][i]>=0){\n            printf(\"%d\",i);\n            break;\n        }\n    return 0;\n}\n```",
        "postTime": 1535590460,
        "uid": 122419,
        "name": "\u4f60\u7956\u5976\u6211\u5f88ok",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6811\u5f62dp......\n\nf[i][j]\u8868\u793a\u5728\u7b2ci\u4e2a\u8282\u70b9\u53ef\u6709j\u4e2a\u89c2\u4f17\u7684\u6700\u5927money\u6570(\u6ce8\u610f\u53ef\u4ee5\u4e3a\u8d1f).\n\n\u8f6c\u79fb\u7684\u8bdd\u4e00\u4e2a\u4e00\u4e2a\u679a\u4e3e\u7236\u4eb2\u7684\u6700\u5927\u89c2\u4f17\u6570\u548c\u513f\u5b50\u8282\u70b9\u7684\u6700\u5927\u89c2\u4f17\u6570\u5373\u53ef,\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u5927\u89c2\u4f17\u6570\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765.\n\n\u6700\u540e\u7b54\u6848\u5c31\u662ff[1][\u6700\u5927\u7684j]>=0,\u5982\u679c\u5168\u5c0f\u4e8e0\u5219\u8f93\u51fa0.\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 3010\n#define inf 0x7f7f7f7f\nusing namespace std;\nint f[N][N],n,cnt,head[N],m,b[N],son[N];\nstruct Edge{\n\tint v,w,nxt;\n}E[N<<1];\nint read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+(c^48);c=getchar();}\n\treturn x*f;\n}\nvoid addedge(int u,int v,int w)\n{\n\tE[++cnt].v=v;\n\tE[cnt].w=w;\n\tE[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nvoid dfs1(int u,int fa)//\u9884\u5904\u7406\n{\n\tif(b[u])son[u]=1,f[u][1]=b[u];//son\u662f\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u5927\u89c2\u4f17\u6570\n\tfor(int i=head[u];i;i=E[i].nxt)\n\t{\n\t\tint v=E[i].v;\n\t\tif(v==fa)continue;\n\t\tdfs1(v,u);\n\t\tson[u]+=son[v];\n\t}\n}\nvoid dfs(int u,int fa)\n{\n\tfor(int i=head[u];i;i=E[i].nxt)\n\t{\n\t\tint v=E[i].v;\n\t\tif(v==fa)continue;\n\t\tdfs(v,u);\n\t\tfor(int j=son[u];j>=1;--j)//\u679a\u4e3e\u7236\u4eb2\n\t\t\tfor(int k=son[v];k>=1;--k)//\u679a\u4e3e\u513f\u5b50\n\t\t\t\tf[u][j]=max(f[u][j],f[v][k]+f[u][j-k]-E[i].w);\n\t\tfor(int j=son[v];j>=1;--j)f[u][j]=max(f[u][j],f[v][j]-E[i].w);\n\t}\n}\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n-m;++i)\n\t{\n\t\tint k=read(),a,c;\n\t\tfor(int j=1;j<=k;++j)\n\t\t{\n\t\t\ta=read();c=read();\n\t\t\taddedge(i,a,c);addedge(a,i,c);\n\t\t}\n\t}\n\tfor(int i=n-m+1;i<=n;++i)b[i]=read();\n\tmemset(f,-inf,sizeof f);\n\tdfs1(1,0);dfs(1,0);\n\tfor(int i=son[1];i>=1;--i)if(f[1][i]>=0){printf(\"%d\\n\",i);return 0;}\n\tprintf(\"0\\n\");\n\treturn 0;\n}\n```\n\n~~~~",
        "postTime": 1532263637,
        "uid": 59633,
        "name": "\u674e\u5bfb\u6b22",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u662f\u591a\u53c9\u6811\u8f6c\u4e8c\u53c9\u6811\u7684\u65b9\u6cd5\uff0c\u8fd9\u9898\u53ea\u8981\u5206\u56db\u79cd\u60c5\u51b5\u8003\u8651\u5c31\u884c\u4e86\uff1a\n\n\u2460 \u8fd9\u662f\u7528\u6237\u8282\u70b9\uff0c\u4e14\u6ca1\u6709\u5144\u5f1f\uff08\u53f3\u513f\u5b50\uff09\uff1b\n\n\u2461 \u8fd9\u662f\u4e00\u4e2a\u7528\u6237\u8282\u70b9\uff0c\u4f46\u6709\u53f3\u5b50\uff08\u5144\u5f1f\u8282\u70b9\uff09\uff1b\n\n\u2462 \u8fd9\u662f\u8f6c\u64ad\u7ad9\uff0c\u4e14\u6ca1\u6709\u5144\u5f1f\u8282\u70b9\uff1b\n\n\u2463 \u8fd9\u662f\u4e2a\u8f6c\u64ad\u7ad9\uff0c\u4e14\u6709\u5144\u5f1f\u8282\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u6709O(n^2logn)\uff0c\u8dd1\u5f97\u6bd4\u80cc\u5305\u8fd8\u5feb\uff08\u795e\u5947\uff09\n\n```cpp\n#include <cstdio>\n\nstruct tree {\n    int lc,rc; //\u591a\u53c9\u6811\u8f6c\u4e8c\u53c9\u6811\uff1a\u5de6\u513f\u5b50\u53f3\u5144\u5f1f \n    int val; //\u9009\u62e9\u9009\u62e9\u8282\u70b9i\u65f6\u80fd\u8d5a\u591a\u5c11\u94b1\uff08\u8be5\u8282\u70b9\u7684\u503c\uff08\u5982\u679c\u662f\u4e2d\u8f6c\u7ad9\u5219\u4e3a0\uff09-\u7236\u8282\u70b9\u8fde\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u8fb9\u7684\u503c\uff09 \n    int num; //\u8868\u793a\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u6811\uff0c\u6700\u591a\u6709\u591a\u5c11\u4e2a\u7528\u6237\u8282\u70b9 \n};\n\nconst int maxn=3000;\nint n,m;\ntree a[maxn+1];\nint dp[maxn+1][maxn+1];\n\nint maximum(int x, int y) {\n    if (x>y) return x;\n    return y;\n}\n\n//\u8ba1\u7b97\u4ee5x\u4e3a\u6839\u7684\u6811\u6700\u591a\u6709\u591a\u5c11\u4e2a\u7528\u6237\u8282\u70b9 \nint count(int x) {\n    int res=0;\n    //\u5982\u679c\u81ea\u5df1\u662f\u7528\u6237\u8282\u70b9\uff0c\u7b54\u6848+1 \n    if (a[x].lc==0)\n        res++;\n    //\u5982\u679c\u6709\u5de6\u53f3\u5b50\uff0c\u5219\u9012\u5f52\u7edf\u8ba1 \n    if (a[x].rc!=0)\n        res+=count(a[x].rc);\n    if (a[x].lc!=0)\n        res+=count(a[x].lc);\n    a[x].num=res;\n    return res;\n}\n\nvoid init() {\n    scanf(\"%d%d\",&n,&m);\n    //\u7b2ci\u4e2a\u8f6c\u64ad\u7ad9\u7684\u4fe1\u606f \n    for (int i=1; i<=n-m; i++) {\n        int ii,k,vv;\n        scanf(\"%d\",&k);\n        //\u5bf9k=1\u7684\u7279\u6b8a\u5904\u7406\uff0c\u8981\u653e\u5728\u8fd9\u4e2a\u8f6c\u64ad\u7ad9\u7684\u5de6\u513f\u5b50\u4e0a \n        scanf(\"%d%d\",&ii,&vv);\n        a[i].lc=ii;\n        a[ii].val-=vv;\n        //\u5176\u4f59\u7684\u653e\u5728\u4e4b\u524d\u5904\u7406\u8fc7\u7684\u5144\u5f1f\u8282\u70b9\u7684\u53f3\u513f\u5b50\u4e0a \n        for (int j=2; j<=k; j++) {\n            int x,v;\n            scanf(\"%d%d\",&x,&v);\n            a[ii].rc=x;\n            a[x].val-=v;\n            ii=x;\n        }\n    }\n    //\u7528\u6237\u8282\u70b9\u7684\u6570\u636e \n    for (int i=n-m+1; i<=n; i++) {\n        int x;\n        scanf(\"%d\",&x);\n        a[i].val+=x;\n    }\n    //\u8ba1\u7b97\u7ed3\u6784\u4f53\u4e2d\u7684num\u7684\u503c\uff0c\u641c\u7d22\u65f6\u6709\u7528 \n    count(1);\n}\n\n//dp[root][x]\u8868\u793a\u4ee5root\u4e3a\u6839\u7684\u6811\uff0c\u91cc\u9762\u6709x\u4e2a\u7528\u6237\u8282\u70b9\uff0c\u6240\u80fd\u8d5a\u5230\u7684\u6700\u591a\u7684\u94b1\u6570 \nint dfs(int root, int x) {\n    if (dp[root][x]!=0) return dp[root][x]; //\u8bb0\u5fc6\u5316\u641c\u7d22 \n    if (x==0) return 0; //\u5982\u679c\u6ca1\u6709\u8fde\u4efb\u4f55\u4e00\u4e2a\u7528\u6237\u8282\u70b9\uff0c\u5219\u4e0d\u8d5a\u4e0d\u4e8f\uff0c\u8fd4\u56de0 \n    //\u5982\u679c\u8fd9\u662f\u7528\u6237\u8282\u70b9\uff0c\u4e14\u6ca1\u6709\u5144\u5f1f\uff08\u53f3\u513f\u5b50\uff09\uff0c\u90a3\u4e48\u5c31\u52a0\u4e0a\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\n    if (a[root].lc==0&&a[root].rc==0)\n        return dp[root][x]=a[root].val;  \n    //\u5982\u679c\u8fd9\u662f\u8f6c\u64ad\u7ad9\u4e14\u6ca1\u6709\u5144\u5f1f\u8282\u70b9\uff0c\u90a3\u4e48\u53ea\u80fd\u5f80\u5de6\u5b50\uff08\u513f\u5b50\u8282\u70b9\uff09\u8d70 \n    //\u56e0\u4e3a\u7ecf\u8fc7\u8fd9\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a\u8fd9\u4e2a\u7b54\u6848\u3002\u518d\u9012\u5f52\u5de6\u5b50\u6811\u3002  \n    if (a[root].lc!=0&&a[root].rc==0)\n        return dp[root][x]=dfs(a[root].lc,x)+a[root].val;\n    //\u5982\u679c\u662f\u4e00\u4e2a\u7528\u6237\u8282\u70b9\uff0c\u4f46\u6709\u53f3\u5b50\uff08\u5144\u5f1f\u8282\u70b9\uff09\n    //\u90a3\u4e48\u5206\u9009\u4e0e\u4e0d\u9009\u4e24\u79cd\u60c5\u51b5\u8003\u8651 \n    if (a[root].lc==0&&a[root].rc!=0) {\n        //\u9009\u7684\u8bdd\u8981\u52a0\u4e0a\u5b83\u7684\u503c\n        int res=dfs(a[root].rc,x-1)+a[root].val;\n        //\u4e0d\u9009\u7684\u8bdd\u6709\u9650\u5236\u6761\u4ef6\uff1a\u73b0\u5728\u8981\u4fdd\u7559\u7684\u7528\u6237\u8282\u70b9\u6570(x)\u4e0d\u5927\u4e8e\u5b83\u53f3\u5b50\u6811\u91cc\u7684\u7528\u6237\u8282\u70b9\u6570\uff08\u4fdd\u8bc1\u5b83\u7684\u53f3\u5b50\u91cc\u81f3\u5c11\u6709x\u4e2a\u7528\u6237\u8282\u70b9\uff09 \n        if (a[a[root].rc].num>=x)\n            res=maximum(res,dfs(a[root].rc,x)); //\u53d6\u4e24\u79cd\u60c5\u51b5\u4e2d\u7684\u8f83\u4f18\u60c5\u51b5 \n        return dp[root][x]=res;\n    }\n    //\u5426\u5219\u8fd9\u662f\u4e2a\u8f6c\u64ad\u7ad9\uff0c\u4e14\u6709\u5144\u5f1f\u8282\u70b9 \n    int res=-0x7F7F7F7F;\n    //\u679a\u4e3e\u5728\u5206\u7ed9\u5de6\u5b50\u6811i\u4e2a\u7528\u6237\u8282\u70b9\uff0c\u53f3\u5b50\u6811x-i\u4e2a\u7528\u6237\u8282\u70b9\u7684\u53ef\u80fd\u6027\uff0c\u53d6\u6700\u4f18 \n    //\u7279\u522b\u6ce8\u610f\uff1a\u5f53\u4e0d\u4f20\u7ed9\u8fd9\u4e2a\u4e2d\u8f6c\u7ad9\uff0c\u53ea\u7ed9\u5b83\u7684\u5144\u5f1f\u8282\u70b9\uff08\u53f3\u5b50\uff09\u65f6\uff0c\u53ef\u4ee5\u4e0d\u53d6\u8fd9\u4e2a\u8282\u70b9\u7684\u503c\uff01\n    //\u6545i\u4ece1\u5f00\u59cb\uff0c\u800c\u975e0\uff08\u6211\u56e0\u4e3a\u8fd9\u4e2aWA\u4e86\u597d\u591a\u6b21\uff09 \n    for (int i=1; i<=x; i++) {\n        if (a[a[root].lc].num<i) continue; //\u5982\u679c\u5de6\u5b50\u6811\u91cc\u53ea\u6709\u4e0d\u5230i\u4e2a\u7528\u6237\u8282\u70b9\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef6 \n        if (a[a[root].rc].num<x-i) continue; //\u53f3\u5b50\u540c\u7406 \n        res=maximum(res,dfs(a[root].lc,i)+dfs(a[root].rc,x-i)+a[root].val);\n    }\n    //\u5982\u679c\u5168\u7ed9\u5176\u5144\u5f1f\u8282\u70b9\u65f6\u5144\u5f1f\u8282\u70b9\u91cc\u53ef\u4ee5\u6709\u8fd9\u4e48\u591a\u7528\u6237\u8282\u70b9(num>=x)\uff0c\u5219\u53d6\u8f83\u4f18\u503c \n    if (a[a[root].rc].num>=x)\n        res=maximum(res,dfs(a[root].rc,x));\n    return dp[root][x]=res;\n}\n\nint main() {\n    init();\n    for (int i=m; i>=0; i--) { //\u4ecem~0\u9006\u5e8f\u679a\u4e3e\u7ed9i\u4e2a\u7528\u6237\u4fe1\u53f7\u7684\u60c5\u51b5 \n        int ans=dfs(1,i); //\u4ece\u6839\u8282\u70b9(1)\u5f00\u59cb\u8bb0\u5fc6\u5316\u641c\u7d22 \n        //\u5982\u679c\u4e0d\u4f1a\u4e8f\u672c\uff0c\u5219\u8df3\u51fa\u5faa\u73af\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848 \n        if (ans>=0) {\n            printf(\"%d\\n\",i);\n            break;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1515763304,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "### \u8fd9\u4e2a\u9898\u89e3\u53ef\u80fd\u4f1a\u6709\u4e9b\u9ebb\u70e6\u4f46\u662f\u7528\u4e8c\u53c9\u6811\u89e3\u51b3\u633a\u68d2\u7684\uff08\u672c\u4eba\u849f\u84bb\uff09\n\n\u6811\u8f6c\u4e8c\u53c9\u6811\u7684\u65b9\u5f0f\u633a\u7b80\u5355\u7684\u5c31\u662f\u8282\u70b9\u7684\u513f\u5b50\u6210\u4e3a\u5de6\u513f\u5b50\uff0c\u8282\u70b9\u53f3\u8fb9\u7684\u5144\u5f1f\u6210\u4e3a\u53f3\u513f\u5b50\n\n\u8fd9\u9053\u9898\u7684\u8f93\u5165\u662f\u6709\u5e8f\u7684\u6240\u4ee5\u4e8c\u53c9\u6811\u5efa\u8d77\u6765\u6bd4\u8f83\u5bb9\u6613\n\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[i][j]=max(f[left[i]][k]+f[right[i]][j-k-1]+v[i],f[right[i]][j])\n\nf[i][j]\u4ee3\u8868\u5728\u8282\u70b9i\u4e0b\u53ca\u5176\u5144\u5f1f\u4e2d\u9009\u62e9j\u4e2a\u53f6\u5b50\u8282\u70b9\uff08\u7528\u6237\u70b9\uff09\u7684\u6700\u5927\u76c8\u5229\n\nv[i]\u4ee3\u8868\u8be5\u8282\u70b9\u6323\u7684\u94b1\uff08\u8f6c\u64ad\u7ad9\u4e0d\u8d5a\u94b1\uff09\u51cf\u53bb\u8be5\u8282\u70b9\u4e0e\u5176\u7236\u8282\u70b9\u76f8\u8fde\u6240\u82b1\u7684\u8d39\u7528\n\n\n\u53ef\u60dc\u7528\u4e8c\u53c9\u6811\u7684\u8bdd\u9700\u8981\u5206\u51fa4\u79cd\u60c5\u51b5\uff1a\n\n1. \u8be5\u8282\u70b9\u6709\u5de6\u513f\u5b50\uff08\u4e0d\u662f\u53f6\u5b50\u8282\u70b9\uff09\u4e14\u6709\u53f3\u513f\u5b50\uff08\u53f3\u8fb9\u6709\u5144\u5f1f\uff09\u7684\u8bdd\u5c31\u7528\u4e0a\u9762\u7684\u65b9\u7a0b\n\n2. \u8be5\u8282\u70b9\u53ea\u6709\u5de6\u513f\u5b50\uff0c\u90a3\u4e48\u53ea\u80fd\u627e\u4ed6\u7684\u5b50\u6811 f[i][j] = f[left[i]] [j,deep+1] + v[i]\n\n3. \u8be5\u8282\u70b9\u53ea\u6709\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u6700\u5927\u76c8\u5229\u662f\u9009\u62e9\u8be5\u8282\u70b9\uff08\u53f6\u5b50\u8282\u70b9\uff09\u548c\u5176\u5144\u5f1f\u6216\u4e0d\u9009\u62e9\u8be5\u8282\u70b9\u53ea\u9009\u5144\u5f1f\u4e2d\u7684\u8f83\u4f18\u60c5\u51b5\n\n4. \u8be5\u8282\u70b9\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u90a3\u4ed6\u5c31\u662f\u6ca1\u5144\u5f1f\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u53ea\u6709j=1\u65f6\u6709\u6548\u5176\u4f59\u60c5\u51b5\u53d6\u6781\u5c0f\u503c\n\n\n\u5199\u51fa\u7684\u4ee3\u7801T\u4e864\u4e2a\u70b9\uff0c\u60f3\u4e86\u597d\u4e45\u5199\u51fa\u4e86\u4e2a\u5c0f\u4f18\u5316\uff1a\u4f7fj\u4e0d\u5927\u4e8e\u8be5\u8282\u70b9\u6700\u591a\u53ef\u9009\u7684\u53f6\u5b50\uff08\u7b2c\u5341\u70b9304ms\u5f88\u6162\uff09\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include <cstdio>\nint n, m, t;\nint left[3001], right[3001], v[3001];\nint link[3001][3001];        //\u4e0ei\u8282\u70b9\u76f8\u8fde\u7684\u8282\u70b9\uff08\u79bb\u6563\u5316\u90bb\u63a5\u77e9\u9635\uff09\nint count[3001];\nint f[3001][3001];\nbool cal[3001][3001];    //\u662f\u5426\u5df2\u8ba1\u7b97\u8fc7\nint minv;        //\u6781\u5c0f\u503c\nint ans;\nint max(const int& a, const int& b)\n{\n    return a > b ? a : b;\n}\nint getC(const int& i)\n{\n    for (int j = link[i][0]; j >= 1; j--)\n    {\n        count[i] += getC(link[i][j]);\n        count[link[i][j]] = count[i];\n    }\n    count[i]++;\n    return count[i];\n}\nint getF(const int& i, const int& j)\n{\n    if (i <= n - m&&j > count[i]) return f[i][j] = minv;        //\u4f18\u5316\n    if (!j) return 0;\n    if (cal[i][j]) return f[i][j];\n    f[i][j] = minv;\n    if (left[i] && right[i])        //\u8be5\u8282\u70b9\u6709\u5b50\u6811\u53ef\u4ee5\u5411\u4e0b\u627e \u6709\u5144\u5f1f\u8282\u70b9\u53ef\u4ee5\u5411\u53f3\u627e\n        for (int k = 1; k <= j; k++)\n            f[i][j] = max(f[i][j], max(getF(left[i], k) + getF(right[i], j - k) + v[i], getF(right[i], j)));\n    else if (left[i])                //\u8be5\u8282\u70b9\u53ea\u6709\u5b50\u6811\u53ea\u80fd\u5411\u4e0b\u627e\n        f[i][j] = getF(left[i], j) + v[i];\n    else if (right[i])                //\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u4e14\u6709\u5144\u5f1f\u8282\u70b9\n        f[i][j] = max(getF(right[i], j - 1) + v[i], getF(right[i], j));\n    else if (j == 1)                //\u8be5\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u4f46\u6ca1\u6709\u53f3\u5144\u5f1f\u4e86    \u82e5\u8981\u627e\u7684\u4e2a\u6570\u5927\u4e8e\u4e00\u5219\u4e0d\u5b58\u5728\n        f[i][j] = v[i];\n    cal[i][j] = 1;\n    return f[i][j];\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1, to, w; i <= n - m; i++)\n    {\n        scanf(\"%d\", &t);\n        scanf(\"%d%d\", &to, &w);\n        link[i][0] = t;\n        link[i][1] = to;\n        left[i] = to;\n        v[to] -= w;\n        minv -= w;\n        int last = to;\n        for (int j = 1; j < t; j++)\n        {\n            scanf(\"%d%d\", &to, &w);\n            link[i][j + 1] = to;\n            right[last] = to;\n            v[to] -= w;\n            minv -= w;\n            last = to;\n        }\n    }\n    for (int i = 1; i <= m; i++)\n    {\n        scanf(\"%d\", &t);\n        v[n - m + i] += t;\n    }\n    getC(1);\n    for (int i = 1; i <= m; i++)\n        if (getF(1, i) >= 0)\n            ans = i;\n    printf(\"%d\", ans);\n    return 0;\n}\n```",
        "postTime": 1508238098,
        "uid": 29868,
        "name": "wzhhahah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "/\\*\nf(i, j)\uff0c\u8868\u793a\u5b50\u6811i\u8f6c\u64ad\u7ed9j\u4e2a\u7528\u6237\u7684\u6700\u5927\u6536\u76ca\u503c\n\n\u8fd9\u9898\u53ef\u4ee5\u770b\u4f5c\u662f\u6811\u4e0a\u7684\u5206\u7ec4\u80cc\u5305\uff0c\u6bcf\u4e2a\u5b50\u6811\u770b\u4f5c\u662f\u4e00\u7ec4\u7269\u54c1\uff0c\u8fd9\u4e00\u7ec4\u7269\u54c1\u53ef\u4ee5\u53d61\u4e2a\uff0c2\u4e2a...j\u4e2a\n\n\u7136\u540e\u5c31\u662f\u5957\u7528\u5206\u7ec4\u80cc\u5305\u7684\u7b97\u6cd5\u4e86\n\n\\*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n//\u7a0b\u5e8f\u6709\u4e24\u4e2a\u5730\u65b9\u6bd4\u8f83\u96be\u7406\u89e3\uff1a\n//1\u3001\u5982\u4f55\u4fdd\u8bc1\u5728\u53d6\u6570\u8fc7\u7a0b\u4e2d\uff0c\u53f6\u7ed3\u70b9\u65e0\u91cd\u590d\uff0c\u5982f[i][i-j]\u4e2d\u7684\u53f6\u7ed3\u70b9 f[v][j]\u4e2d\u7684\u53f6\u7ed3\u70b9\u4e0d\u91cd\u590d\n//2\u3001for(i=ye[u];i>0;i--)\u6b63\u786e for(i=1;i<=ye[u];i++)\u9519\u8bef\n//\u9488\u5bf9\u6837\u4f8b1\uff0c\u5217\u51fa\u52a8\u6001\u89c4\u5212\u8fc7\u7a0b\uff0c\u80fd\u8bf4\u660e\u4e0a\u8ff0\u95ee\u9898\n//for(i=ye[u];i>0;i--)\u6b63\u786e \u8fc7\u7a0b\u5982\u4e0b\uff1a\nf[1][1]=max(f[1][1],f[1][1]+f[5][0]-3)\nf[1][1]=max(f[1][1],f[1][0]+f[5][1]-3)    1->5 \u53d6\u4e00\u4e2a \u6700\u5927\u503c\nf[2][1]=max(f[2][1],f[2][1]+f[4][0]-3)\nf[2][1]=max(f[2][1],f[2][0]+f[4][1]-3)    2->4 \u53d6\u4e00\u4e2a \u6700\u5927\u503c\nf[2][2]=max(f[2][2],f[2][2]+f[3][0]-2)\nf[2][2]=max(f[2][2],f[2][1]+f[3][1]-2)\nf[2][2]=max(f[2][2],f[2][0]+f[3][2]-2)    2->4 2->3 \u53d6\u4e24\u4e2a \u6700\u5927\u503c\nf[2][1]=max(f[2][1],f[2][1]+f[3][0]-2)\nf[2][1]=max(f[2][1],f[2][0]+f[3][1]-2)    2->4 2->3 \u53d6\u4e00\u4e2a \u6700\u5927\u503c\nf[1][3]=max(f[1][3],f[1][3]+f[2][0]-2)\nf[1][3]=max(f[1][3],f[1][2]+f[2][1]-2)\nf[1][3]=max(f[1][3],f[1][1]+f[2][2]-2)\nf[1][3]=max(f[1][3],f[1][0]+f[2][3]-2)    1->5 1->4 1->3 \u53d6\u4e09\u4e2a \u6700\u5927\u503c\nf[1][2]=max(f[1][2],f[1][2]+f[2][0]-2)\nf[1][2]=max(f[1][2],f[1][1]+f[2][1]-2)\nf[1][2]=max(f[1][2],f[1][0]+f[2][2]-2)    1->5 1->4 1->3 \u53d6\u4e24\u4e2a \u6700\u5927\u503c\nf[1][1]=max(f[1][1],f[1][1]+f[2][0]-2)\nf[1][1]=max(f[1][1],f[1][0]+f[2][1]-2)    1->5 1->4 1->3 \u53d6\u4e00\u4e2a \u6700\u5927\u503c\n//for(i=1;i<=ye[u];i++)\u9519\u8bef \u8fc7\u7a0b\u5982\u4e0b\uff1a\nf[1][1]=max(f[1][1],f[1][1]+f[5][0]-3)\nf[1][1]=max(f[1][1],f[1][0]+f[5][1]-3)    1->5 \u53d6\u4e00\u4e2a \u6700\u5927\u503c\nf[2][1]=max(f[2][1],f[2][1]+f[4][0]-3)\nf[2][1]=max(f[2][1],f[2][0]+f[4][1]-3)    2->4 \u53d6\u4e00\u4e2a \u6700\u5927\u503c\nf[2][1]=max(f[2][1],f[2][1]+f[3][0]-2)\nf[2][1]=max(f[2][1],f[2][0]+f[3][1]-2)    2->4 2->3 \u53d6\u4e00\u4e2a \u6700\u5927\u503c\nf[2][2]=max(f[2][2],f[2][2]+f[3][0]-2)\nf[2][2]=max(f[2][2],f[2][1]+f[3][1]-2)\nf[2][2]=max(f[2][2],f[2][0]+f[3][2]-2)    2->4 2->3 \u53d6\u4e24\u4e2a \u6700\u5927\u503c\nf[1][1]=max(f[1][1],f[1][1]+f[2][0]-2)\nf[1][1]=max(f[1][1],f[1][0]+f[2][1]-2)    1->5 1->4 1->3 \u53d6\u4e00\u4e2a \u6700\u5927\u503c\nf[1][2]=max(f[1][2],f[1][2]+f[2][0]-2)\nf[1][2]=max(f[1][2],f[1][1]+f[2][1]-2)    \n//\u6b64\u5904\u6709\u95ee\u9898 f[1][1]\u53ef\u80fd\u662f1->4 \u6545f[1][2]\u6709\u53ef\u80fd\u53d6\u6210 1->4 1->4 \u9519\u8bef\u4ece\u6b64\u5904\u5f00\u59cb\nf[1][2]=max(f[1][2],f[1][0]+f[2][2]-2)    1->5 1->4 1->3 \u53d6\u4e24\u4e2a \u6700\u5927\u503c\nf[1][3]=max(f[1][3],f[1][3]+f[2][0]-2)\nf[1][3]=max(f[1][3],f[1][2]+f[2][1]-2)\nf[1][3]=max(f[1][3],f[1][1]+f[2][2]-2)\nf[1][3]=max(f[1][3],f[1][0]+f[2][3]-2)    1->5 1->4 1->3 \u53d6\u4e09\u4e2a \u6700\u5927\u503c    \n//\u5206\u6790\u7684\u8fc7\u7a0b\u4e2d\uff0c\u540c\u65f6\u5c06\u4e0a\u8ff0\u7684\u4e24\u4e2a\u987e\u8651\u95ee\u9898\u89e3\u51b3\u3002\n#include <stdio.h>\n#include <string.h>\n#define INF 999999\nint head[3100],cnt=0,ye[3100],f[3100][3100];//f[i][j] i\u8282\u70b9\u53ca\u4ee5\u4e0b\u5171j\u4e2a\u7528\u6237\u7684\u6700\u5927\u6536\u76ca \u56e0\u6536\u76ca\u6709\u6b63\u6709\u8d1f\uff0c\u6545\u521d\u59cb\u5316\u4e3a\u7edd\u5bf9\u503c\u6bd4\u8f83\u5927\u7684\u8d1f\u6570\nstruct node{//\u90bb\u63a5\u8868\n    int to,next,c;\n}e[3100];//\u6709\u5411\u56fe\nvoid addedge(int u,int v,int c){\n    cnt++,e[cnt].to=v,e[cnt].c=c,e[cnt].next=head[u],head[u]=cnt;\n}\nint max(int a,int b){\n    return a>b?a:b;\n}\nvoid dfs(int u){\n    int v,b,i,j,c;//b\u8fb9\n    b=head[u];\n    while(b){\n        v=e[b].to,c=e[b].c;\n        dfs(v);\n        ye[u]+=ye[v];\n        for(i=ye[u];i>=1;i--)\n            for(j=0;j<=i;j++)\n                f[u][i]=max(f[u][i],f[u][i-j]+f[v][j]-c);//1 \u6b64\u5904\u5199\u6210 f[u][j]=max(f[i][j],f[u][i-j]+f[v][j]-c);\n        b=e[b].next;\n    }\n}\nint main(){\n    int n,m,i,j,p,k,a,c,ans=-INF;\n    memset(head,0,sizeof(head));\n    memset(ye,0,sizeof(ye));\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n            f[i][j]=-INF;\n    for(i=1;i<=n;i++)\n        f[i][0]=0;//\u53d60\u4e2a\uff0c\u503c\u4e3a0\n    p=n-m;\n    for(i=1;i<=p;i++){\n        scanf(\"%d\",&k);\n        for(j=1;j<=k;j++){\n            scanf(\"%d%d\",&a,&c);\n            addedge(i,a,c);\n        }\n    }\n    for(i=p+1;i<=n;i++){\n        scanf(\"%d\",&c);\n        f[i][1]=c,ye[i]=1;\n    }\n    dfs(1);\n    for(i=ye[1];i>=1;i--){\n        ans=i;\n        if(f[1][i]>=0)break;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1504260002,
        "uid": 34143,
        "name": "mrwalking",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "**\n\u3002\u662f\u6211\u667a\u5546\u4e0d\u591f\u8fd8\u662f\u600e\u4e48\u7684\u9898\u89e3\u770b\u4e86\u597d\u534a\u5929\u8fd8\u770b\u4e86\u6e90\u7a0b\u5e8f\u624d\u770b\u61c2\n\n\u786e\u5b9e\u6bd4\u8f83\u50cf\u80cc\u5305\u95ee\u9898 \u53ea\u4e0d\u8fc7\u6362\u6210\u6811\u72b6\u7684\u4e86\uff08\u8868\u793a\u4e4b\u524d\u6ca1\u505a\u8fc7\uff09\n\n\u7269\u54c1\u662f\u7528\u6237\n\ndp[i][j]\u8868\u793ai\u8282\u70b9 \u5728\u5b83\u7684\u540e\u4ee3\u4e2d\u9009\u4e86j\u4e2a\u7684\u6700\u5927\u6536\u5165\n\ndp[i][j]=max(dp[i][j],dp[i][j-k]+dp[v][k]-w)\n\n\u610f\u601d\u662f\u5728\u5f53\u524d\u513f\u5b50\u4e2d\u9009\u4e86k\u4e2a\u7528\u6237 \u5e76\u51cf\u53bb\u548c\u513f\u5b50\u4e2d\u95f4\u90a3\u4e00\u6761\u8fb9\u7684\u6743\u503c\n\n\u513f\u5b50\u5c31\u4e00\u4e2a\u4e00\u4e2a\u641c\u5566= =\n\n\u6ce8\u610fk\u7684\u8303\u56f4\u662f\u57281\u81f3\u513f\u5b50\u540e\u4ee3\u4e2d\u7684\u7528\u6237\u6570\n\n\u5e76\u4e14j\u662f\u8981\u4ece\u5927\u5230\u5c0f\u5faa\u73af\n\n\u6240\u4ee5\u9012\u5f52\u51fd\u6570\u8981\u4f20\u56de\u8282\u70b9\u7684\u7528\u6237\u6570\n\n\u5b58\u8fb9\u4ec0\u4e48\u7684\u5c31\u90bb\u63a5\u8868\u641e\u4e00\u641e\u5c31\u597d\u5566 \u5b58\u5355\u5411\u5c31\u884c\n\n\u53e6\u5916dp[n][0]\u90fd\u7b49\u4e8e0\uff1b\uff08\u627e\u4e86\u5341\u5206\u949f\u624d\u627e\u51fa\u6765\u8fd9\u4e2a\u9519\uff09\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\u5c31\u4ece\u5927\u5f80\u5c0f\u627e\u6536\u5165\u5927\u4e8e\u7b49\u4e8e0\u7684\u70b9\n\n**\n\n```cpp\n\n#include<cstdio> \n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=3000+10;\n\nint n,m,first[maxn],next[maxn],w[maxn],v[maxn],money[maxn];\nint cnt=0;\nvoid add_edge(int uu,int vv,int ww)\n{\n    v[++cnt]=vv;\n    w[cnt]=ww;\n    next[cnt]=first[uu];\n    first[uu]=cnt;\n}\n\nvoid init_data()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n      first[i]=-1;\n    for(int u=1,son;u<=n-m;u++)\n    {\n        scanf(\"%d\",&son);\n        for(int j=1,v,w;j<=son;j++)\n        {\n            scanf(\"%d%d\",&v,&w);\n            add_edge(u,v,w);\n        }\n    }\n    for(int u=n-m+1;u<=n;u++)scanf(\"%d\",money+u);\n}\n\nint dp[maxn][maxn];\nint f(int u)\n{\n    if(u>n-m)\n    {\n        dp[u][1]=money[u];\n        return 1;\n    }\n    int sum=0;\n    for(int i=first[u];i!=-1;i=next[i])\n    {\n        int x=f(v[i]);sum+=x;\n        for(int j=sum;j;j--)\n          for(int k=1;k<=x;k++)\n            dp[u][j]=max(dp[u][j],dp[u][j-k]+dp[v[i]][k]-w[i]);\n    }\n    return sum;\n}\n\nint main()\n{\n    init_data();\n    memset(dp,-60,sizeof(dp));\n    for(int u=1;u<=n;u++)\n      dp[u][0]=0;\n    f(1);\n    int i=m;\n    for(;i;i--) if(dp[1][i]>=0) break;\n    printf(\"%d\",i);\n    return 0;\n}\n\n```(c/c++)\n",
        "postTime": 1450069710,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u5176\u4ed6\u505a\u6cd5,\u4f46\u4e5f\u53ef\u4ee5\u770b\u505a\u6811\u5f62\u80cc\u5305,\u8fd9\u91cc\u53ea\u8ba8\u8bba\u4ed6\u7684\u6811\u5f62\u80cc\u5305\u505a\u6cd5.\u9996\u5148\u6839\u636e\u9898\u76ee\u63cf\u8ff0\u5efa\u7acb\u4e00\u68f5\u6811,\u6bcf\u4e2a\u53f6\u8282\u70b9\u7684\u4f53\u79ef\u4e3a1,\u4ef7\u503c\u4e3ap[i]-cost[i],\u975e\u53f6\u8282\u70b9\u4f53\u79ef\u4e3a0,\u4ef7\u503c\u4e3a-cost[i].\u6c42\u51fa\u53d6\u5404\u4e2a\u4f53\u79ef\u65f6\u6700\u5927\u7684\u8d39\u7528\u5373\u53ef\u6c42\u51fa\u5728\u4e0d\u4e8f\u672c\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u7528\u6237\u6570.\u63a5\u7740\u76f4\u63a5\u4ece\u540e\u5f80\u524d\u626b\u4e00\u904d\u5c31\u53ef\u4ee5\u5f97\u51fa\u7b54\u6848.\n\n\u4ee3\u7801\u5982\u4e0b(\u6211\u7684):\n\n```delphi\n\ntype  \n        int=longint;  \n  \nconst  \n        oo=99999999;  \n  \nvar  \n        i,j,k,m,n:int;  \n        l,r,p,w:array[-1..3000]of int;  \n        f:array[-1..3000,0..3000]of int;  \n        x,y:int;  \n  \nfunction max(x,y:int):int;  \nbegin  \n        if x>y then exit(x)  \n                else exit(y);  \nend;  \n  \nprocedure dfs(rt,v:int);  \nvar i,j:int;  \nbegin  \n        if v<1 then exit;  \n        j:=l[rt];  \n        while j<>-1 do begin  \n                for i:=0 to v do f[j,i]:=f[rt,i];  \n                dfs(j,v-w[j]);  \n                for i:=1 to v do f[rt,i]:=max(f[rt,i],f[j,i-w[j]]+p[j]);  \n                j:=r[j];  \n        end;  \nend;  \n  \nbegin  \n        fillchar(l,sizeof(l),$FF);  \n        f[1,0]:=0;r[-1]:=-1;  \n        read(n,m);  \n        for i:=1 to n-m do begin  \n                read(k);  \n                for j:=1 to k do begin  \n                        read(x,y);  \n                        r[x]:=l[i];l[i]:=x;  \n                        p[x]:=-y;  \n                end;  \n        end;  \n        for i:=1 to m do begin  \n                read(x);  \n                inc(p[n-m+i],x);  \n                f[1,i]:=-oo;  \n                w[n-m+i]:=1;  \n        end;  \n        dfs(1,m);  \n        i:=m;  \n        while (f[1,i]<0) do dec(i);  \n        write(i);  \nend.  \n\n```\n\u9700\u8981\u7559\u5fc3\u7684\u662ff[1]\u7684\u521d\u503c,\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8d4b\u503c.\n\n\u7ec6\u5fc3\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230,\u6211\u7684\u8fc7\u7a0b\u4e0e\u5f90\u6301\u8861\u7684\u4e0d\u540c,\u4f46\u4e24\u8005\u662f\u5b8c\u5168\u7b49\u4ef7\u7684,\u6548\u7387\u4e0a\u4e5f\u6ca1\u6709\u5f88\u5927\u7684\u533a\u522b.\u6811\u5f62\u80cc\u5305\u7684\u57fa\u672c\u7b97\u6cd5\u5c31\u662f\u8fd9\u6837.\u5177\u4f53\u7684\u9898\u76ee\u4e2d,\u5f80\u5f80\u4f1a\u7ed9\u4f60\u4e00\u68f5\u6811,\u7136\u540e\u7ed9\u6bcf\u4e2a\u8282\u70b9\u4e00\u4e2a\u6743\u503c\u4e4b\u7c7b\u7684\u4e1c\u897f\u548c\u4e00\u4e9b\u9650\u5236,\u7136\u4f60\u6c42\u8fd9\u4e48\u9009\u5f97\u5230\u6700\u5927/\u6700\u5c0f\u6536\u76ca,\u8fd9\u79cd\u9898\u76ee\u5c31\u6709\u53ef\u80fd\u662f\u6811\u5f62\u80cc\u5305\u7684\u6a21\u578b.\n",
        "postTime": 1441630696,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    },
    {
        "content": "\u6811\u4e0a\u7684\u80cc\u5305\u3002\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684\u6bcf\u4e2a\u513f\u5b50\u90fd\u80fd\u88ab\u770b\u4f5c\u4e00\u7c7b\u7269\u54c1\uff0c\u8be5\u7c7b\u7269\u54c1\u80fd\u53d60\uff0c1\uff0c2\uff0c...num\u4e2a\uff08num\u662f\u4ee5\u8be5\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u6709\u591a\u5c11\u53f6\u5b50\u8282\u70b9\uff09\u3002\u6211\u4eec\u7b97\u51fa\u6bcf\u4e2a\u70b9\u4f9b\u5e940~num\u4e2a\u7528\u6237\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u6da6\u3002\u6700\u540e\u5728\u6839\u8282\u70b9\u4e2d\u67e5\u627e\uff0c\u6700\u5927\u7684\u5229\u6da6\u22650\u7684\u7528\u6237\u6570\u5c31\u662f\u7b54\u6848\u3002\n\n\u867d\u7136\u5206\u6790\u8d77\u6765\u4f3c\u4e4e\u662f\u4e00\u4e2aO(n^3)\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u7531\u4e8e\u65e0\u6548\u7684\u72b6\u6001\u6bd4\u8f83\u591a\uff0c\u53ef\u4ee5AC\u3002\n",
        "postTime": 1438684370,
        "uid": 4341,
        "name": "TsReaper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1273 \u3010\u6709\u7ebf\u7535\u89c6\u7f51\u3011"
    }
]