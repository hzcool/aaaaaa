[
    {
        "content": "\u5176\u5b9e\u633a\u5957\u8def\u7684\u3002\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u8bbe\u5f53\u524d\u7684\u8be2\u95ee\u662f $x$\uff0c\u7136\u540e\u8003\u8651 $O(nm)$ \u7684\u66b4\u529b DP\u3002\n\n\u53d1\u73b0\u5f0f\u5b50\u662f\uff1a\n$$\nf_u=a_u+x+\\sum_{u\\to v}\\max(f_v, 0)\n$$\n\u7136\u540e\u6211\u4eec\u8003\u8651\u600e\u4e48\u7b97\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u6211\u4eec\u8003\u8651\u5efa\u4e00\u4e2a\u68ee\u6797\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u539f\u6811\u7684\u72b6\u6001\uff0c\u53ea\u5bf9\u6240\u6709\u6ee1\u8db3 $f_u \\ge 0$ \u7684\u70b9\u8fde\u4e00\u6761\u8fde\u5411\u539f\u6811\u4e0a\u7236\u4eb2\u7684\u8fb9\uff0c\u90a3\u4e48\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u68ee\u6797\u3002\u663e\u7136\u6211\u4eec\u53ea\u4f1a\u4e0d\u65ad\u52a0\u8fb9\u3002\n\n\u7136\u540e\u6211\u4eec\u610f\u8bc6\u5230\u5982\u679c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u68ee\u6797\u8dd1\u521a\u624d\u7684 DP\uff0c\u53ea\u9700\u8981\u8fd9\u6837\uff1a\n$$\nf_u=a_u+x+\\sum_{u\\to v} f_v\n$$\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u662f\u52a0\u4e0a $x$ \u4e4b\u540e\u7684\u5b50\u6811\u548c\uff0c\u5176\u5b9e\u5c31\u662f\u8fd9\u4e2a\u5b50\u6811\u4e0d\u52a0 $x$ \u7684\u5b50\u6811\u548c\u52a0\u4e0a $x$ \u4e58\u4e0a\u5b50\u6811\u5927\u5c0f\u3002\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u80fd\u591f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x$ \u5feb\u901f\u6c42\u51fa\u5b50\u6811\u5f62\u6001\uff0c\u57fa\u672c\u4e0a\u5c31\u80fd\u5feb\u901f\u5904\u7406\u8fd9\u4e2a\u4e1c\u897f\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u628a $x$ \u9012\u589e\u6392\u5e8f\uff0c\u90a3\u4e48\u663e\u7136 $f_u$ \u4e5f\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\n\n\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9 $\\max(f_v, 0)$ \u662f\u53d6 $f_v$ \u8fd8\u662f $0$ \u663e\u7136\u53ea\u4f1a\u53d8\u5316\u4e00\u6b21\u3002\n\n\u56e0\u6b64\u6bcf\u4e00\u6761\u8fb9\u53ea\u4f1a\u4ece **\u65ad** \u53d8\u6210 **\u8fde** \u4e00\u6b21\uff0c\u53ea\u8981\u80fd\u591f\u5feb\u901f\u627e\u5230\u6240\u6709\u8fd9\u6837\u7684\u8fb9\u5373\u53ef\u3002\n\n\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a `std::set`\uff0c\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u5e94\u4e00\u4e2a\u6743\u503c $val$ \u8868\u793a $x\\ge val$ \u65f6\u8fd9\u4e2a\u70b9\u662f\u53d6 $f_u$ \u7684\uff0c\n\n\u7136\u540e\u8003\u8651\u8fd9\u4e2a $val$ \u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u5217\u4e00\u4e2a\u65b9\u7a0b\uff1a\n\n$$\nsz\\times val+sum\\ge0\n$$\n\u56e0\u6b64\n$$\nval= \\lceil\\frac{sum}{sz}\\rceil\n$$\n\n\u5176\u4e2d $sz, sum$ \u5206\u522b\u8868\u793a\u5b50\u6811\u5927\u5c0f\u548c\u5b50\u6811\u548c\u3002\n\n\u8003\u8651\u6211\u4eec\u6bcf\u8fde\u4e00\u6761\u8fb9\uff0c\u90fd\u53ea\u4f1a\u6539\u53d8\u96c6\u5408\u4e2d $\\mathcal{O}(1)$ \u4e2a\u5143\u7d20\u7684\u8fd9\u4e24\u4e2a\u503c\uff0c\u800c\u4e14\u5728\u539f\u6811\u4e0a\u76f8\u5f53\u4e8e\u4e00\u4e2a\u94fe\u4fee\u6539\u3002\n\n\u56e0\u6b64\u6211\u4eec\u518d\u52a0\u4e0a\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u5c31\u884c\u4e86\u3002\n\n\u5f97\u5230\u590d\u6742\u5ea6 $\\mathcal{O}((n+m)\\log n)$\u3002\n\n~~\u6709\u6ca1\u6709\u66f4\u4f18\u505a\u6cd5\u6211\u5c31\u4e0d\u77e5\u9053\u4e86\uff0c\u4f46\u6211\u786e\u5b9e\u662f\u538b\u7ebf\u8fc7\u53bb\u7684\u3002~~",
        "postTime": 1634026123,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P7897 [Ynoi2006] spxmcq\u3011"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u66b4\u529b dp\uff0c$dp_u$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u6700\u5927\u6743\u503c\u603b\u548c\uff0c\u5219\u6709 $dp_u=\\sum\\limits_{v\\in son}\\max(dp_v,0)$\u3002\n\n\u8fd9\u4e1c\u897f\u663e\u7136\u6ca1\u6cd5\u76f4\u63a5\u7ef4\u62a4\uff0c\u81ea\u7136\u5730\u60f3\u5230\u5efa\u4e00\u68f5\u8f6c\u79fb\u6811\u3002\u5177\u4f53\u5730\u8bb2\uff0c\u5f53\u4e14\u4ec5\u5f53 $u$ \u7684\u513f\u5b50 $v$ \u6ee1\u8db3 $dp_v>0$ \u65f6\uff0c\u624d\u5728 $u,v$ \u95f4\u8fde\u8fb9\u3002\u5176\u5b9e\u5e94\u8be5\u53eb\u8f6c\u79fb\u68ee\u6797\uff0c\u56e0\u4e3a\u663e\u7136\u4e0d\u8fde\u901a\u3002\n\n\u4e0d\u96be\u60f3\u5230 $x$ \u8d8a\u5927\u8f6c\u79fb\u68ee\u6797\u8fb9\u6570\u8d8a\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u79bb\u7ebf\u4e0b\u6765\u6309 $x$ \u6392\u4e2a\u5e8f\uff0c\u8f6c\u79fb\u68ee\u6797\u5c31\u53ea\u4f1a\u52a0\u8fb9\u4e0d\u4f1a\u5220\u8fb9\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u8981\u6c42\u7684\u5c31\u662f\u968f\u7740 $x$ \u7684\u589e\u52a0\u54ea\u4e9b\u8fb9\u65b0\u52a0\u5165\u4e86\uff0c\u4e5f\u5c31\u662f\u54ea\u4e9b $dp_v$ \u5927\u4e8e $0$ \u4e86\u3002\u76f4\u63a5\u60f3\u975e\u5e38\u590d\u6742\uff0c\u56e0\u4e3a $dp_v$ \u4f1a\u53d7\u5230\u5b83\u7684\u513f\u5b50\u7684\u5f71\u54cd\uff0c\u5b83\u7684\u513f\u5b50\u53c8\u4f1a\u53d7\u5230\u5b83\u7684\u5b59\u5b50\u7684\u5f71\u54cd\u2026\u2026\n\n\u4f46\u662f\u6700\u7ec8\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a $dp_v$ \u6700\u5148\u5927\u4e8e $0$\uff0c\u5b83\u662f\u5bfc\u706b\u7d22\uff0c\u968f\u7740\u4ed6\u53d8\u5f97 $>0$\uff0c\u5176\u5b83\u7684 $dp$ \u503c\u4e5f\u968f\u4e4b\u53d8\u5316\u3002\n\n\u6211\u4eec\u8bbe\u5f53\u524d $v$ \u5728\u8f6c\u79fb\u68ee\u6797\u4e2d\u5b50\u8282\u70b9\u4e2a\u6570\u4e3a $sze_v$\uff0c\u5f53\u524d\u5728\u8f6c\u79fb\u68ee\u6797\u4e2d\u5b50\u8282\u70b9\u6743\u503c\u548c\u4e3a $sum_v$\u3002\u90a3\u4e48\u5bf9\u4e8e $v$\uff0c\u5982\u679c\u5b83\u662f\u90a3\u4e2a\u5bfc\u706b\u7d22\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5b83\u5bf9\u4e8e\u7ed9\u5b9a\u7684 $x$\uff0c$dp$ \u503c\u4e3a $sze_v\\cdot x+sum_v$\u3002\u8981\u60f3\u4f7f\u5f97\u8fd9\u4e2a $sze_v\\times x+sum_v>0$\uff0c\u89e3\u4e0d\u7b49\u5f0f\u5f97\u5230 $x\\ge \\lceil\\frac{-sum_v}{sze_v}\\rceil$\u3002\n\n\u628a\u6240\u6709\u7684 $\\lceil\\frac{-sum_v}{sze_v}\\rceil$ \u6254\u5230\u4e00\u4e2a\u5806\u91cc\u53bb\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u5143\u7d20\u770b\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u7684 $x$\uff0c\u5982\u679c\u5c0f\u4e8e\u7b49\u4e8e\u5c31\u4fee\u6539\u3002\n\n\u4fee\u6539\u662f\u8fd9\u6837\u7684\uff1a\uff08\u865a\u7ebf\u8868\u539f\u6811\u8fb9\uff0c\u5b9e\u7ebf\u8868\u8f6c\u79fb\u68ee\u6797\u8fb9\uff09\n\n![](https://img2022.cnblogs.com/blog/2512911/202201/2512911-20220121221234834-827049218.jpg)\n\n\u6240\u4ee5\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u9700\u8981\u66f4\u65b0\u5f53\u524d\u67d0\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u6240\u6709\u7684 $sum$ \u4e0e $sze$\u3002\n\n\u7136\u540e\u67e5\u8be2\u65f6\uff0c\u6211\u4eec\u9700\u8981\u67e5\u8be2\u5f53\u524d\u70b9\u7684 $dp$ \u503c\uff0c\u5373 $sze\\cdot x+sum$\uff0c\u4e5f\u5c31\u662f\u67e5\u5355\u70b9\u7684 $sze,sum$\u3002\n\n\u7531\u4e8e\u8fd9\u4e2a\u68ee\u6797\u4f1a\u4e0d\u65ad\u52a0\u8fb9\uff0c\u603b\u7ed3\u4ee5\u4e0b\u5c31\u662f\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e00\u4e2a\u68ee\u6797\uff0c\u652f\u6301\uff1a\n\n1. \u52a0\u8fb9\u3002\n2. \u5c06\u67d0\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4fee\u6539\u3002\n3. \u5355\u70b9\u67e5\u503c\u3002\n\n\u8f6c\u79fb\u68ee\u6797\u4e2d\u67d0\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u5728\u539f\u6811\u4e2d\u5c31\u662f\u4e00\u6761\u94fe\uff0c\u6240\u4ee5\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u5ffd\u89c6\u8fd9\u4e2a\u52a8\u6001\u52a0\u8fb9\uff0c\u53ea\u9700\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u6839\u8282\u70b9\u5373\u53ef\u3002\n\n\u5bf9\u4e8e $2,3$ \u64cd\u4f5c\uff0c\u6811\u5256\u80af\u5b9a\u8d85\u5e02\uff0c\u53ef\u4ee5\u5dee\u5206\u3002\u5982\u679c\u628a $u$ \u5230\u5b83\u7684\u5b50\u8282\u70b9 $v$ \u7684\u6240\u6709\u70b9\u6743 $+\\deita$\uff0c\u90a3\u4e48\u5728 $u$ \u7684\u7236\u4eb2\u5904 $-\\delta$\uff0c\u5728 $v$ \u5904\u52a0 $\\delta$\u3002\u67e5\u8be2\u65f6\uff0c\u53ea\u9700\u67e5\u8be2\u8fd9\u4e2a\u70b9\u5b50\u6811\u5185\u6240\u6709\u70b9\u6743\u548c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5 dfs \u5e8f+\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u7136\u540e\u5c31\u6ce8\u610f\u5411\u4e0a\u53d6\u6574\u7684\u7ec6\u8282\uff0c\u6574\u6570\u9ed8\u8ba4\u5411 $0$ \u53d6\u6574\uff0c\u6240\u4ee5\u8981\u60f3\u597d\u5230\u5e95\u662f\u5728\u5411\u4e0a\u8fd8\u662f\u5411\u4e0b\u53d6\u6574\u3002\u76f4\u63a5 ceil \u662f\u53ef\u4ee5\u51b2\u8fc7\u53bb\u7684\uff0c\u5982\u679c\u624b\u5199 ceil \u9700\u8981\u5224\u6b63\u8d1f\u3002\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n#include <cmath>\n#define int long long\n\ntypedef std::pair<int, int> PLI;\nstruct Edge {int to, nxt;} e[1000005];\nint f[1000005], head[1000005], In[1000005], Out[1000005], fa[1000005], tot, cnt, n, m, ans[1000005];\nbool del[1000005];\nstd::priority_queue<PLI, std::vector<PLI>, std::greater<PLI> > Q; \nstruct Quest {\n\tint u, x, id;\n\tinline bool operator < (const Quest a) const {return x < a.x;}\n} q[1000005];\ninline void AddEdge(int u, int v) {\n\te[++ tot].to = v, e[tot].nxt = head[u], head[u] = tot;\n}\nvoid dfs(int u) {\n\tIn[u] = ++ cnt;\n\tfor (int i = head[u]; i; i = e[i].nxt) dfs(e[i].to);\n\tOut[u] = cnt;\n}\nint find(int x) {return fa[x] == x ? x : fa[x] = find(fa[x]);}\n\nstruct BIT {\n\tint c[1000005];\n\tinline void update(int x, int d) {\n\t\tfor (int i = x; i <= n; i += (i & ~i + 1)) c[i] += d;\n\t}\n\tinline int prefixsum(int x) {\n\t\tint sum = 0;\n\t\tfor (int i = x; i; i &= i - 1) sum += c[i];\n\t\treturn sum;\n\t}\n\tinline int query(int l, int r) {return prefixsum(r) - prefixsum(l - 1);}\n} sum, sze;\n\nvoid change(int u, int x) {\n\twhile (u != 1) {\n\t\tdel[u] = true;\n\t\tint v = find(f[u]);\n\t\tint sumu = sum.query(In[u], Out[u]), szeu = sze.query(In[u], Out[u]);\n\t\tsum.update(In[f[u]], sumu), sze.update(In[f[u]], szeu);\n\t\tif (f[v]) sum.update(In[f[v]], -sumu), sze.update(In[f[v]], -szeu);\n\t\tfa[u] = v;\n\t\tint sumv = sum.query(In[v], Out[v]), szev = sze.query(In[v], Out[v]); \n\t\tif (szev * x + sumv <= 0) {\n\t\t\tQ.push(std::make_pair(sumv > 0 ? -sumv / szev : (-sumv + szev - 1) / szev, v));\n\t\t\tbreak;\n\t\t}\n\t\tu = v;\n\t}\n}\n\nsigned main() {\n\tscanf(\"%lld%lld\", &n, &m);\n\tfor (int i = 1; i <= n; ++ i) fa[i] = i;\n\tfor (int i = 2; i <= n; ++ i) scanf(\"%lld\", f + i), AddEdge(f[i], i);\n\tdfs(1), del[1] = true;\n\tfor (int i = 1, x; i <= n; ++ i) {\n\t\tscanf(\"%lld\", &x);\n\t\tQ.push(std::make_pair(-x, i));\n\t\tsum.update(In[i], x), sze.update(In[i], 1);\n\t\tif (i != 1) sum.update(In[f[i]], -x), sze.update(In[f[i]], -1);\n\t}\n\tfor (int i = 1; i <= m; ++ i) scanf(\"%lld%lld\", &q[i].u, &q[i].x), q[i].id = i;\n\tstd::sort(q + 1, q + m + 1);\n\tfor (int i = 1; i <= m; ++ i) {\n\t\twhile (Q.size() && Q.top().first <= q[i].x) {\n\t\t\tint u = Q.top().second;\n\t\t\tQ.pop();\n\t\t\tif (del[u]) continue;\n\t\t\tchange(u, q[i].x);\n\t\t}\n\t\tans[q[i].id] = 1ll * sze.query(In[q[i].u], Out[q[i].u]) * q[i].x + sum.query(In[q[i].u], Out[q[i].u]);\n\t}\n\tfor (int i = 1; i <= m; ++ i) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1642774408,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "P7897 [Ynoi2006] spxmcq"
    },
    {
        "content": "\u672c\u6587\u4e2d\u7528 $T_u$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u3002\n\n\u9996\u5148\u8003\u8651\u66b4\u529b DP\uff0c\u8bbe $dp_u$ \u4e3a\u5f53\u524d\u8be2\u95ee\u7684 $x$ \u4e0b\uff0c\u8282\u70b9 $u$ \u7684\u7b54\u6848\uff0c\u90a3\u4e48\u6839\u636e\u9898\u610f\u5217\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$\ndp_u=(a_u+x)+\\sum\\limits_{v\\textrm{ is son of }u}\\max\\{dp_v,0\\}\n$$\n\n\u5176\u4e2d\u90a3\u4e2a $\\max\\{dp_v,0\\}$ \u5c31\u662f\u8981\u4e0d\u8981\u8fde\u5230 $v$ \u7684\u5b50\u6811\u91cc\u9762\u53bb\uff0c\u8fd9\u4e2a\u6700\u5927\u503c\u5e76\u4e0d\u597d\u5904\u7406\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u5bf9 $dp_u$ \u6709\u8d21\u732e\uff08\u4e5f\u5c31\u662f $\\ge 0$\uff09\u7684 $dp_v$ \u7528\u4e00\u6761\u6709\u5411\u8fb9\u8fde\u51fa\u6765\uff0c\u5c31\u5f97\u5230\u4e86\u4ece\u539f\u6811\u62ce\u51fa\u6765\u7684\u4e00\u7247\u68ee\u6797\uff0c\u8fd9\u7247\u68ee\u6797\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff0c\u5c31\u662f\u4e0d\u9700\u8981\u53d6 $\\max$\uff0c\u76f4\u63a5\u7528 $dp_v$ \u8f6c\u79fb\u5c31\u884c\u4e86\u3002\n\n\u6211\u4eec\u628a $dp_u$ \u5c55\u5f00\u51fa\u6765\uff1a\n\n$$\n\\begin{aligned}\ndp_u&=(a_u+x)+\\sum\\limits_{v\\textrm{ is son of }u}dp_v\\\\\n&=(a_u+x)+\\sum\\limits_{v\\textrm{ is son of }u}(a_v+x)+\\sum\\limits_{w\\textrm{ is son of }v}dp_w\\\\\n&=\\vdots\\\\\n&=\\sum\\limits_{v\\in T_u}(a_v+x)\n\\end{aligned}\n$$\n\n\u53d1\u73b0\u5c31\u662f\u5728\u7ed9\u6bcf\u4e2a\u8282\u70b9\u6743\u503c\u52a0\u4e0a $x$ \u4e4b\u540e\uff0c\u5b50\u6811\u7684\u6743\u503c\u548c\u3002\u6211\u4eec\u8bbe\u5b50\u6811\u7684\u5927\u5c0f\u4e3a $siz_u$\uff0c\u539f\u6765\u5b50\u6811\u7684\u6743\u503c\u548c\u4e3a $val_u$\uff0c\u7528\u52a0\u6cd5\u7ed3\u5408\u5f8b\u53d8\u4e00\u4e0b\u5f62\u5c31\u77e5\u9053 $dp_u=siz_u\\times x+val_u$\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u6bcf\u4e00\u65f6\u523b\u7684\u68ee\u6797\u5f62\u6001\uff0c\u6211\u4eec\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e8e\u662f\u95ee\u9898\u5c31\u53d8\u4e3a\u4e86\u5982\u4f55\u83b7\u5f97\u68ee\u6797\u5f62\u6001\u3002\n\n\u53c8\u8981\u52a0\u8fb9\u53c8\u8981\u5220\u8fb9\u662f\u590d\u6742\u7684\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u5f53 $x$ \u5355\u8c03\u9012\u589e\u65f6\uff0c$dp_u$ \u603b\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c$\\max\\{dp_v,0\\}$ \u7684\u53d6\u503c\u4f1a\u662f\u5148\u53d6 $0$\uff0c\u7136\u540e\u5f53 $x$ \u5927\u5230\u4e00\u5b9a\u7a0b\u5ea6\u540e\u53d8\u4e3a\u53d6 $dp_v$\uff0c\u4e5f\u5c31\u662f\u53ea\u52a0\u8fb9\uff0c\u4e14\u6bcf\u4e00\u6761\u8fb9\u53ea\u52a0\u4e00\u6b21\u3002\u56e0\u6b64\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309 $x$ \u5347\u5e8f\u6392\u5e8f\u3002\n\n\u6211\u4eec\u8bb0\u5f55 $nd_u$ \u8868\u793a $x\\ge nd_u$ \u65f6\uff0c$u$ \u4e0e $fa_u$ \u4e4b\u95f4\u7684\u8fb9\u88ab\u52a0\u4e0a\u3002\u8003\u8651\u4e0a\u9762 $dp$ \u7684\u63a8\u5bfc\u8fc7\u7a0b\uff0c\u6ee1\u8db3 $siz_u\\times x+val_u\\ge 0$\uff0c\u53d8\u5f62\u5f97 $x\\ge -\\dfrac{val_u}{siz_u}$\uff0c$nd_u$ \u662f\u6700\u5c0f\u7684\u7b26\u5408\u6761\u4ef6\u7684 $x$\uff0c\u5373 $nd_u=-\\dfrac{val_u}{siz_u}$\u3002\u6ca1\u6709\u88ab\u5361\u5e38\u6240\u4ee5\u6211\u76f4\u63a5\u7528\u6d6e\u70b9\u6570\u5b58\u4e86\uff0c\u5e76\u6ca1\u6709\u50cf\u5176\u4ed6\u9898\u89e3\u4e00\u6837\u4e0a\u53d6\u6574\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4\u4e8c\u5143\u7ec4 $(u,nd_u)$\uff0c\u6bcf\u6b21\u8be2\u95ee\u65f6\u53d6\u51fa $nd_u\\le x$ \u7684\u82e5\u5e72\u4e2a\u4e8c\u5143\u7ec4\uff0c\u628a $u$ \u548c $fa_u$ \u4e4b\u95f4\u7684\u8fb9\u52a0\u4e0a\u5373\u53ef\u3002\n\n\u8003\u8651\u52a0\u8fb9\u5bf9 $siz$ \u548c $val$ \u7684\u5f71\u54cd\uff0c\u662f $fa_u$ \u5230\u6240\u5728\u8fde\u901a\u5757\u7684\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u8282\u70b9\u7684 $siz,val$ \u5206\u522b\u589e\u52a0 $siz_u,val_u$\u3002\u4e8e\u662f\u6211\u4eec\u9700\u8981\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u52a0\u8fb9\u540e\u8fde\u901a\u5757\u7684\u6839\uff0c\u7136\u540e\u7528\u652f\u6301\u94fe\u4fee\u6539\u3001\u5355\u70b9\u67e5\u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 $siz,val$\uff0c\u6211\u7528\u7684\u5dee\u5206\u5957 dfs \u5e8f\u6811\u72b6\u6570\u7ec4\u3002\n\n\u9700\u8981\u6ce8\u610f\u4e00\u6761\u8fb9\u4e0d\u80fd\u88ab\u91cd\u590d\u52a0\u591a\u6b21\uff0c\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u8fd8\u6709\u6811\u72b6\u6570\u7ec4\u4e2d\u5bf9\u4e0b\u6807 $0$ \u7684\u5904\u7406\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n\\log n)$\uff08$n,m$ \u540c\u9636\uff09\u3002\n\n```cpp\n//By: Luogu@rui_er(122461)\n#include <bits/stdc++.h>\n#define rep(x,y,z) for(ll x=y;x<=z;x++)\n#define per(x,y,z) for(ll x=y;x>=z;x--)\n#define debug printf(\"Running %s on line %d...\\n\",__FUNCTION__,__LINE__)\n#define fileIO(s) do{freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);}while(false)\nusing namespace std;\ntypedef long long ll;\nconst ll N = 1e6+5;\nconst double eps = 1e-6;\n\nll n, m, fa[N], sz[N], a[N], dfn[N], tms, trans[N], ans[N];\nvector<ll> e[N];\ntemplate<typename T> void chkmin(T& x, T y) {if(x > y) x = y;}\ntemplate<typename T> void chkmax(T& x, T y) {if(x < y) x = y;}\nstruct Query {\n\tll u, x, id;\n}q[N];\nstruct Dsu {\n\tll fa[N];\n\tvoid init(ll x) {rep(i, 1, x) fa[i] = i;}\n\tll find(ll x) {return x == fa[x] ? x : fa[x] = find(fa[x]);}\n\tbool merge(ll x, ll y) {\n\t\tll u = find(x), v = find(y);\n//\t\tprintf(\"MERGE %lld(%lld) %lld(%lld)\\n\", x, u, y, v);\n\t\tif(u == v) return 0;\n\t\tfa[u] = v;\n\t\treturn 1;\n\t}\n}dsu;\nstruct BIT {\n\tll c[N];\n\tll lowbit(ll x) {return x & (-x);}\n\tvoid add(ll x, ll k) {if(!x) return; for(;x<=n;x+=lowbit(x)) c[x] += k;}\n\tll Ask(ll x) {if(!x) return 0; ll k = 0; for(;x;x-=lowbit(x)) k += c[x]; return k;}\n\tll ask(ll l, ll r) {return Ask(r) - Ask(l-1);}\n}siz, val;\nvoid addChain(BIT& bit, ll l, ll r, ll x) {\n\tbit.add(dfn[l], x);\n\tbit.add(dfn[fa[r]], -x);\n}\nll askVertex(BIT& bit, ll u) {\n\treturn bit.ask(dfn[u], dfn[u]+sz[u]-1);\n}\nstruct Need {\n\tll u;\n\tdouble nd;\n\tNeed(ll a=0, double b=0.0) : u(a), nd(b) {}\n\t~Need() {}\n\tfriend bool operator < (const Need& a, const Need& b) {return a.nd > b.nd;}\n};\npriority_queue<Need> heap;\nvoid dfs(ll u) {\n\tdfn[u] = ++tms;\n\tsz[u] = 1;\n\tfor(ll v : e[u]) {\n\t\tdfs(v);\n\t\tsz[u] += sz[v];\n\t}\n}\ntuple<ll, double> check(ll u, ll x) {\n\tll Siz = askVertex(siz, u);\n\tll Val = askVertex(val, u);\n\tif(Siz * x + Val >= 0) return make_tuple(1, 0.0);\n\treturn make_tuple(0, -1.0 * Val / Siz);\n}\nvoid link(ll u, ll x) {\n//\tprintf(\"LINK %lld %lld\\n\", u, x);\n\tfor(ll v=0;u!=1;u=v) {\n\t\ttrans[u] = 1;\n\t\tdsu.merge(u, v=dsu.find(fa[u]));\n//\t\tprintf(\" -> %lld %lld\\n\", u, v);\n\t\tll Siz = askVertex(siz, u);\n\t\tll Val = askVertex(val, u);\n\t\taddChain(siz, fa[u], v, Siz);\n\t\taddChain(val, fa[u], v, Val);\n\t\tauto qwq = check(v, x);\n\t\tll ok = get<0>(qwq);\n\t\tdouble diff = get<1>(qwq);\n\t\tif(!ok) {\n\t\t\theap.push(Need(v, diff));\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%lld%lld\", &n, &m);\n\trep(i, 2, n) scanf(\"%lld\", &fa[i]);\n\trep(i, 2, n) e[fa[i]].push_back(i);\n\trep(i, 1, n) scanf(\"%lld\", &a[i]);\n\trep(i, 1, m) scanf(\"%lld%lld\", &q[i].u, &q[i].x);\n\trep(i, 1, m) q[i].id = i;\n\tsort(q+1, q+1+m, [](const Query& a, const Query& b) {\n\t\treturn a.x < b.x;\n\t});\n\tdfs(1);\n\tdsu.init(n);\n//\tputs(\"!\");\n\trep(i, 1, n) {\n//\t\tprintf(\"*%lld\\n\", i);\n\t\theap.push(Need(i, -1.0*a[i]));\n\t\taddChain(siz, i, i, 1);\n\t\taddChain(val, i, i, a[i]);\n\t}\n//\tputs(\"?\");\n\trep(i, 1, m) {\n\t\tll u = q[i].u, x = q[i].x, id = q[i].id;\n\t\twhile(!heap.empty() && heap.top().nd <= 1.0 * x) {\n\t\t\tll v = heap.top().u; heap.pop();\n\t\t\tif(!trans[v]) link(v, x);\n\t\t}\n\t\tans[id] = askVertex(siz, u) * x + askVertex(val, u);\n\t}\n\trep(i, 1, m) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1650895044,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7897\u3010[Ynoi2006] spxmcq\u3011"
    },
    {
        "content": "\u5410\u4e86\uff0c\u539f\u6765\u88ab\u5361\u8d1f\u6570\u5411\u4e0b\u53d6\u6574\u90fd\u6ca1\u770b\u51fa\u6765\u3002             \n\n\u5176\u5b9e\u4e0d\u662f Ynoi \u91cc\u4e00\u9053\u5f88\u96be\u7684\u9898\uff0c\u4e0d\u8fc7\u8fd8\u662f\u6709\u53ef\u4ee5\u5b66\u4e60\u7684\u5730\u65b9\u3002         \n\n\u5148\u8003\u8651\u4e00\u4e0b $O(nm)$ \u7684\u66b4\u529b\uff0c\u5c31\u662f\u9009\u6216\u4e0d\u9009\u4e00\u4e2a\u5b50\u6811\u7136\u540e dp \u8f6c\u79fb\u5c31\u597d\u4e86\uff0c\u63a5\u7740\u8003\u8651\u4e00\u4e0b\u8fd9\u4e2a\u67e5\u8be2\u672c\u8eab\u7684\u6027\u8d28\u3002          \n\n\u6211\u4eec\u4e0d\u59a8\u56fa\u5b9a $u$ \u540e\u6539\u53d8 $x$\uff0c\u89c2\u5bdf\u5230\u6bd4\u5982 $x$ \u5f88\u5c0f\u7684\u65f6\u5019\u5176\u5b9e\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u8282\u70b9\u672c\u8eab\uff0c\u5f53 $x$ \u9010\u6e10\u53d8\u5927\u65f6\u5c31\u4f1a\u6709\u8282\u70b9\u8ddf\u7740\u52a0\u5165\u7b54\u6848\u96c6\u5408\uff0c\u5e76\u4e14\u5982\u679c $x$ \u4e0d\u51cf\u5c0f\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u4e5f\u4e0d\u53ef\u80fd\u79bb\u5f00\u7b54\u6848\u96c6\u5408\u3002            \n\n\u8003\u8651\u8fd8\u662f\u7528\u7c7b\u4f3c dp \u7684\u601d\u60f3\uff0c\u8bb0 $dp_{x,y}$ \u4e3a\u5f53\u5168\u5c40\u52a0\u7684\u503c\u4e3a $y$ \u65f6 $x$ \u5411\u4e0b\u7684\u6700\u5927\u8def\u5f84\u548c\uff0c\u4e0d\u96be\u53d1\u73b0\u82e5 $0 \\leq dp_{x,y}$\uff0c\u6211\u4eec\u7684 $dp_{x,y}$ \u7684\u503c\u5c31\u53ef\u4ee5\u7d2f\u52a0\u5728 $dp_{fa_x,y}$ \u4e0a\u9762\u5e76\u4e14\u5bf9\u4e8e\u4efb\u610f\u7684 $y \\leq z$\uff0c$dp_{x,z}$ \u90fd\u4f1a\u5411 $dp_{f,z}$ \u8d21\u732e\u3002           \n\n\u8fd9\u4e1c\u897f\u8ba9\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\u662f\u4e0d\u662f~~\u5e76\u67e5\u96c6\u52a0\u8fb9\u52a0\u8fb9\u518d\u52a0\u8fb9~~\uff0c\u6211\u4eec\u8003\u8651\u7528\u5e76\u67e5\u96c6\u53bb\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u96c6\u5408\uff0c\u679a\u4e3e $y$ \u503c\u4e0d\u505c\u5408\u5e76\u7236\u4eb2\u4e0e\u513f\u5b50\u7531\u4e8e\u81f3\u591a\u53ea\u4f1a\u5408\u5e76 $n - 1$ \u6b21\uff0c\u6240\u4ee5\u81f3\u591a\u6709 $n-1$ \u4e2a\u4e34\u754c\u70b9\u5212\u5206\u51fa\u4e86\u81f3\u591a $n$ \u4e2a\u503c\u57df\u6bb5\uff08\u4e5f\u5c31\u662f $n$ \u4e2a\u5408\u5e76\u51fa\u6765\u7684\u72b6\u6001\uff09\uff0c\u5c06 $q$ \u6b21\u8be2\u95ee\u6839\u636e\u5176 $x$ \u7684\u503c\u5206\u522b\u6254\u8fdb\u5bf9\u5e94\u503c\u57df\u6bb5\u7684\u5408\u5e76\u72b6\u6001\u91cc\u8be2\u95ee\u5373\u53ef\u3002           \n\n\u4f18\u5316\u8fd9\u4e00\u8fc7\u7a0b\u3002\u9996\u5148\u53ef\u4ee5\u76f4\u63a5\u7b97\u503c\u57df\u7684\u4e34\u754c\u70b9\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u5b58\u50a8\u5f53\u524d\u4ecd\u8fd8\u672a\u5408\u5e76\u81f3\u7236\u4eb2\u8282\u70b9\u7684\u8282\u70b9\u7684 dp \u503c\uff0c\u663e\u7136\u4e00\u4e2a\u70b9 $x$ \u7684 dp \u503c\u4e0b\u4e00\u6b21\u53d8\u4e3a\u5927\u4e8e\u7b49\u4e8e $0$ \u7684\u4e2a\u6570\u9700\u8981\u7684 $y$ \u503c\u4e3a $\\lceil \\frac{-dp_x}{siz_x} \\rceil$\uff0c\u8fd9\u65f6\u4e0b\u4e00\u4e2a\u4e34\u754c\u70b9\u7684\u5927\u5c0f\u5c31\u5e94\u4e3a\u8fd9\u4e9b\u8282\u70b9\u8ba1\u7b97\u51fa\u6765 $y$ \u503c\u7684\u6700\u5c0f\u503c\uff0c\u4ece\u4f18\u5148\u961f\u5217\u91cc\u9762\u627e\u5230\u8fd9\u4e2a\u8282\u70b9\u62ff\u51fa\u6765\u548c\u7236\u4eb2\u8282\u70b9\u5408\u5e76\u540e\u518d\u628a\u76f8\u5e94\u7684\u5728\u8fd9\u4e2a\u503c\u57df\u6bb5\u7684\u67e5\u8be2\u62ff\u51fa\u6765\u95ee\u5c31\u597d\u4e86\u3002          \n\n\u73b0\u5728\u5c31\u53ea\u7528\u8003\u8651\u600e\u4e48\u5728\u8fde\u901a\u5757\u91cc\u9762\u7ef4\u62a4\u7b54\u6848\u3002\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u662f\u5bf9\u4e8e\u539f\u6811\u7528 dfn \u5e8f\u6807\u53f7\u540e\u8be2\u95ee\u4e00\u4e2a\u8054\u901a\u5757\u5185\u7684\u70b9 dfn \u6807\u53f7\u5728\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u70b9\u503c\u548c\u4e0e\u70b9\u503c\u4e2a\u6570\uff0c\u7136\u540e\u76f4\u63a5\u7ebf\u6bb5\u6811\u5408\u5e76\u5c31\u53ef\u4ee5\u56de\u7b54\u4e86\uff0c\u4f46\u662f\u8fd9\u6837\u6709\u53ef\u80fd\u4f1a\u88ab\u5361 T\uff0c\u6240\u4ee5\u6211\u4eec\u6362\u4e00\u4e2a\u65b9\u6cd5\u3002                             \n\n\u6211\u4eec\u628a\u533a\u95f4 $[l,r]$ \u7684\u6c42\u89e3\u8f6c\u5316\u4e3a\u5bf9\u4e24\u4e2a\u524d\u7f00 $[1,l-1]$ \u548c $[1,r]$ \u7684\u6c42\u89e3\u3002\u6839\u636e\u5e76\u67e5\u96c6\u7684\u8fde\u63a5\u987a\u5e8f\u5efa\u7acb Kruscal \u91cd\u6784\u6811\uff0cdfs \u4e00\u904d Kruscal \u91cd\u6784\u6811\u540e\u5bf9\u53f6\u5b50\u8282\u70b9\u91cd\u65b0\u6807\u53f7\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u53f6\u5b50\u8282\u70b9\u7684\u6807\u53f7\u8fde\u7eed\u3002\u5c06\u76f8\u5e94\u7684\u8be2\u95ee\u6302\u5728 Kruscal \u7684\u975e\u53f6\u5b50\u8282\u70b9\u4e0a\u9762\u540e\u5148\u628a\u53f6\u5b50\u8282\u70b9\u7684\u503c\u6e05\u7a7a\u3002\u4f9d\u6b21\u5c06 dfn \u7f16\u53f7\u4e3a $1 \\sim n$ \u7684\u8282\u70b9\u91cd\u65b0\u52a0\u5165\u5c31\u53ef\u4ee5\u5bf9\u5e94\u7684\u628a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u8be2\u95ee\u8f6c\u5316\u4e3a\u5bf9\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u533a\u95f4\u7684\u67e5\u8be2\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u79bb\u7ebf\u4e24\u6b21\u8be2\u95ee\u5427\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5e38\u6570\u6bd4\u8f83\u4f18\u79c0\u7684\u65f6\u95f4 $O(n \\log n)$ \u505a\u6cd5\u3002               \n\n\u4e0d\u8fc7\u8fd9\u6837\u7684\u505a\u6cd5\u8fd8\u662f\u6709\u70b9\u590d\u6742\uff0c\u4e0d\u59a8\u518d\u7a0d\u6316\u6398\u4e00\u4e0b\u6027\u8d28\u3002           \n\n\u8be2\u95ee\u65f6\u5148\u4e0d\u8003\u8651\u70b9 $u$ \u7684\u8d21\u732e\uff0c\u6700\u540e\u52a0\u4e0a\u5c31\u597d\u4e86\u3002\n\n\u6211\u4eec\u5728\u5e76\u67e5\u96c6\u5408\u5e76\u7684\u65f6\u5019\u5c06\u6df1\u5ea6\u6df1\u7684\u70b9\u8fde\u5411\u6df1\u5ea6\u6d45\u7684\u70b9\uff0c\u987a\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u5e76\u67e5\u96c6\u91cc\u9762\u6240\u6709\u8282\u70b9\u503c\u7684\u548c $w$ \u548c\u8282\u70b9\u4e2a\u6570\u3002\n\n\u5047\u8bbe\u8282\u70b9 $x$ \u548c\u539f\u6811\u4e0a\u7684\u7236\u4eb2 $fa_x$ \u5408\u5e76\uff0c\u627e\u5230\u8fde\u901a\u5757\u5185\u6df1\u5ea6\u6700\u6d45\u7684\u70b9 $y$ \u548c\u7236\u4eb2 $fa_y$\uff0c\u6211\u4eec\u6bcf\u6b21\u53ea\u7528\u5728 $dfn_{fa_x}$ \u5904\u5dee\u5206\u52a0\u4e0a $w_x$\uff0c\u5728 $dfn_{fa_y}$ \u5904\u5dee\u5206\u51cf\u53bb $w_x$ \u5c31\u597d\u4e86\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u67e5\u70b9 $u$ \u5b50\u6811\u5bf9\u5e94\u7684 dfn \u533a\u95f4\u7684\u548c\u5c31\u597d\u4e86\uff0c\u7ef4\u62a4\u70b9\u6570\u4e00\u4e2a\u9053\u7406\u3002\n\n\u8fd9\u4e48\u505a\u7684\u6b63\u786e\u6027\u57fa\u4e8e\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u663e\u7136\u53ea\u6709\u5728\u70b9 $fa_x$ \u548c\u70b9 $y$ \u4e4b\u95f4\u94fe\u4e0a\u7684\u70b9\u6267\u884c\u8be2\u95ee\u65f6 $x$ \u7684 $w$ \u624d\u5e94\u8be5\u5bf9\u5176\u6709\u8d21\u732e\u3002      \n\n\u5982\u679c\u70b9 $z$ \u4e0d\u5728 $1 \\sim fa_x$ \u7684\u94fe\u4e0a\uff0c\u70b9 $z$ \u7684 dfn \u533a\u95f4 $[L,R]$ \u80af\u5b9a\u5728\u533a\u95f4 $[dfn_y,dfn_{fa_x}]$ \u6574\u4f53\u7684\u5de6\u53f3\u4e24\u8fb9\u4ea6\u6216\u662f\u4e2d\u95f4\uff0c\u5dee\u5206\u540e\u80af\u5b9a\u7b97\u4e0d\u5230\u3002     \n\n\u5982\u679c\u70b9 $z$ \u5728 $1 \\sim fa_y$ \u7684\u94fe\u4e0a\uff0c\u5f53\u524d\u70b9 $z$ \u7684 dfn \u533a\u95f4 $[L,R]$ \u80af\u5b9a\u5b8c\u5168\u5305\u542b\u4e86\u533a\u95f4 $[dfn_y,dfn_{fa_x}]$\uff0c\u4e5f\u7b97\u4e0d\u5230\u3002         \n\n\u5f53\u70b9 $z$ \u5728 $y \\sim fa_x$ \u7684\u94fe\u4e0a\u65f6\uff0c\u70b9 $z$ \u7684 dfn \u533a\u95f4 $[L,R]$ \u80af\u5b9a\u5305\u542b\u4e86 $dfn_y$ \u800c\u4e0d\u5305\u542b $dfn_{fa_x}$\uff0c\u53ef\u4ee5\u7b97\u5230\u3002           \n\n\u8fd9\u6837\u5dee\u5206\u7684\u6b63\u786e\u6027\u5c31\u8bc1\u660e\u4e86\u3002            \n\n\u7a0d\u5fae\u6709\u70b9\u5570\u55e6\u554a\uff0c\u6bd5\u7adf\u8fd9\u4e2a\u9898\u505a\u6cd5\u662f\u5f88\u591a\uff0c\u5e0c\u671b\u80fd\u770b\u5230 Ynoi \u5e38\u6570\u6740\u624b\u80fd\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u628a\u8fd9\u9053\u9898\u6740\u8fc7\u53bb\u3002             \n\n\u4e0d\u8fc7\u5f00 $2$ \u4e2a G \u672c\u8eab\u5c31\u662f\u7ed9\u7ebf\u6bb5\u6811\u5408\u5e76\u7528\u7684\u5427\uff1f\u4e0d\u6e05\u695a\u3002\n \n\u4ee5\u4e0a\u505a\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f $O((n+q) \\log n)$\uff0c\u9664\u7ebf\u6bb5\u6811\u5408\u5e76\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$ \u4ee5\u5916\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a $O(n)$\uff0c\u672c\u4eba\u4ee3\u7801\u5199\u7684\u662f\u5dee\u5206\u505a\u6cd5\uff08\u6bd5\u7adf\u597d\u5199\u5f88\u591a\uff09\u6709\u9700\u8981\u8005\u79c1\u4fe1\u5373\u53ef\u3002",
        "postTime": 1634223388,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7897 [Ynoi2006] spxmcq"
    }
]