[
    {
        "content": "- \u524d\u8a00\n\n  \u662f\u4ecb\u4e2a\u6837\u5b50\uff0c\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6211\u592a**\u5f31**\u4e86\uff0c\u6211\u770b\u4e86\u597d\u591a\u9898\u89e3\uff0c\u7136\u540e\u82b1\u4e86\u597d\u591a\u65f6\u95f4\u624d\u660e\u767d\u8d2a\u5fc3\u5177\u4f53\u3002\n  \n  \u4e8e\u662f\u6211\u51b3\u5b9a\u81ea\u5df1\u5199\u4e00\u9898\u89e3\uff0c\u4f1a\u8be6\u7ec6\u4e00\u4e9b\u7684\u3002\u672c\u9898\u89e3\u4f1a\u6709 **\u8d2a\u5fc3\u601d\u8def+\u4f8b\u5b50\u6a21\u62df\u8d2a\u5fc3**\n  \n  \u6211\u89c9\u5f97\u6211\u633a\u6709\u826f\u5fc3\u7684,,\u5e0c\u671b\u5927\u5bb6\u90fd\u80fd\u770b\u61c2QAQ\n\n------------\n\n  \n- \u9898\u76ee\u5927\u610f\n\n  \u63a8\u9500\u5458\u963f\u660e\uff0c\u8981\u7ed9\u4f4f\u5728\u67d0\u8857\u7684N\u4e2a\u7528\u6237\u63a8\u9500\uff0c**\u8d70\u4e00\u7c73\u4f1a\u589e\u52a01\u7684\u75b2\u52b3\u503c**\uff0c\u7b2ci\u5bb6\u8ddd\u79bb\u8def\u53e3$s[i]$\u7c73(**\u53ef\u80fd\u4f1a\u6709\u91cd\u590d\u7684**$s[i]$)\u7ed9\u7b2ci\u5bb6\u63a8\u9500\u4f1a\u589e\u52a0$a[i]$\u3002\u5168\u90e8\u63a8\u9500\u5b8c\uff0c**\u8fd8\u8981\u539f\u8def\u8fd4\u56de\u3002**\n  \n  \u73b0\u5728\uff0c\u4f9d\u6b21\u5411$X$\u7528\u6237\u63a8\u9500\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684$X$\uff0c\u963f\u660e\u60f3\u77e5\u9053**\u6700\u5927\u75b2\u52b3\u503c**\n  \n------------\n\n- \u5206\u6790\n\n  \u8ddd\u79bb\u662f\u771f\u7684\u70e6\u4eba\uff0c\u90a3\u5c31\u4e0d\u7ba1\u4ed6\u5427\u3002\u56e0\u4e3a\u60f3\u8981\u75b2\u52b3\u503c\u6700\u5927\uff0c\u90a3\u4e48\u5148**\u6309\u7167\u75b2\u52b3\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u4e00\u8fb9**\u3002\n  \n  \u6b64\u65f6\uff0c\u53ef\u4ee5\u5224\u65ad\u51fa\uff0c\u6700\u5927\u503c**\u53ef\u80fd**\u4e3a\uff1a\u5bf9\u4e8e\u6bcf\u4e2a$X$\uff0c\u53ea\u8981\u52a0\u4e0a**\u524d$X$\u5927\u7684\u75b2\u52b3\u503c**\uff0c\u518d\u52a0\u4e0a\u8fd9\u4e9b\u6570\u4e2d**\u8ddd\u79bb\u6700\u8fdc\u7684\u5e76\u4e58\u4ee52**\uff0c\u4e5f\u5c31\u662f\uff1a\n  \n  $sum(a[k])(1\u2264k\u2264X)+s[j]*2$\n  \n  \u5176\u4e2d\uff0c$s[j]$\u8868\u793a\u524dK\u4e2a\u8ddd\u79bb\u6700\u8fdc\u7684\uff0csum()\u8868\u793a\u548c\u3002\n  \n  \u4f46\u662f\uff0c\u63a8\u9500\u5458\u53ef\u4ee5\u901a\u8fc7**\u8d70\u8fdc\u4e00\u70b9**\uff0c\u867d\u7136\u75b2\u52b3\u503c\u6bd4\u524d\u9762\u5c0f\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u628a\u8def\u7a0b\u4e00\u7b97\uff0c\u53cd\u800c\u66f4\u5927\u3002\n  \n  \u56e0\u6b64\uff0c\u53ef\u4ee5\u628a$a[]$\uff0c\u5373\u75b2\u52b3\u503c\u4e2d\uff0c**\u524d$X$\u5927\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u5373\u7b2c$X$\u5927\u7684\u90a3\u4e00\u5bb6\u820d\u53bb**\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u901a\u8fc7\u8d70\u66f4\u8fdc\u6765\u6362\u53d6\u66f4\u5927\u7684\u75b2\u52b3\u503c\u603b\u548c\u3002\n  \n  \u800c\u4ece\u540e\u9762\u770b\uff0c**\u4e00\u5b9a\u4e5f\u4f1a\u5b58\u5728\u4e00\u4e2a\u6700\u5927\u503c**\uff0c\u628a\u8fd9\u4e2a\u6700\u5927\u503c\u548c\u524d\u9762$X-1$\u4e2a\u75b2\u52b3\u503c\u603b\u548c\u52a0\u8d77\u6765\uff0c\u770b\u770b\u4f1a\u4e0d\u4f1a\u6bd4\u524d\u9762\u7b2c\u4e00\u79cd\u7684\u60c5\u51b5\u5927\u3002\n\n  \u8bc1\u660e\uff1a**\u53ea\u9700\u820d\u53bb\u6700\u5c0f\u503c\u6765\u8d70\u66f4\u8fdc\uff0c\u65e0\u9700\u820d\u53bb\u66f4\u591a\u6570\u6765\u8d70\u66f4\u8fdc\u3002**\n  \n  \u5176\u5b9e\u8fd9\u4e5f\u4e0d\u662f\u4e00\u4e2a\u8bc1\u660e..\n  \n  \u56e0\u4e3a\u5df2\u7ecf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u4e86\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u820d\u53bb$2$\u4e2a\u75b2\u52b3\u503c\uff0c\u90a3\u4e48\u540e\u9762\u53ea\u4f1a\u5728\u52a0\u4e0a\u4e24\u4e2a**\u66f4\u5c0f**\u7684\u75b2\u52b3\u503c\uff0c\u4ee5\u53ca**\u4e24\u4e2a\u4e4b\u95f4\u6700\u5927\u7684\u8ddd\u79bb**\u5e76\u4e582\uff0c\u90a3\u4e48\u8fd9\u6837\u8fd8\u4e0d\u5982\u53ea\u820d\u53bb\u4e00\u4e2a\u3002\n  \n  2\u4e2a\u4e0d\u884c\uff0c\u90a3\u4e482\u4e2a\u4ee5\u4e0a\u66f4\u662f\u4e0d\u884c\u4e86\u3002\n  \n\n------------\n- \u4e3e\u4f8b\u5b50\u4e86\u3002\n\n  \u786c\u8bb2\u592a\u7d2f\u4e86\uff0c\u8fd8\u662f\u7528\u4e00\u4e2a\u4f8b\u5b50\u5427\u3002\n  ```\n  //\u81ea\u52a8\u6392\u5e8fQAQ\n  s[i]:1,3,4,5,11\n  a[i]:5,4,2,1,1\n  ```\n  \u82e5$X==1$\uff0c\u76f4\u63a5\u53d6\uff0c\u90a3\u4e48\u503c\u4e3a:$1\u00d72+5=7$,\u5982\u679c\u820d\u53bb\u6700\u5c0f\u7684\u5f80\u540e\u8dd1\uff0c\u503c\u4e3a:$11\u00d72+1=23$\uff0c\u6240\u4ee5\uff0c\u6700\u5927\u503c\u5c31\u4e3a$max(7,11)=11$\u3002\n  \n  \u82e5$X==2$\uff0c\u76f4\u63a5\u53d6\uff0c\u503c\u4e3a:$3\u00d72+5+4=15$,\u628a\u5176\u4e2d\u6700\u5c0f\u503c\u820d\u53bb\uff0c\u4e5f\u5c31\u662f$4$\u53bb\u6389\uff0c\u5f80\u540e\u8dd1\u503c\u4e3a:$11\u00d72+1+5=28$\uff0c\u90a3\u4e48\u6700\u5927\u503c\u4e3a$max(15,28)=28$\u3002\n  \n  \u82e5\u628a\u6b21\u5c0f\u75b2\u52b3\u503c\uff0c\u5373$5$,\u4e5f\u5f80\u540e\u8dd1\uff0c\u90a3\u4e48\u503c\u4e3a$11\u00d72+1=24$\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8ddd\u79bb\u5e76\u672a\u56e0\u6b64\u6539\u53d8\uff0c\u4ecd\u4e3a$11$\uff0c\u800c\u4f4d\u7f6e\u79fb\u540e\uff0c\u75b2\u52b3\u503c**\u53ea\u4f1a\u51cf\u5c11**\uff0c\u6545\u53ea\u8981\u79fb\u52a8\u6700\u5c0f\u75b2\u52b3\u503c\u3002\n  \n  \u90a3\u4e48\uff0c\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u9171\u7d2b\u590d\u6742\u5ea6\u662f\u4f1a\u70b8\u6389\u7684\uff0c$so$\n  \n  \u7528$sum[]$\u8bb0\u5f55\u75b2\u52b3**\u524d\u7f00\u548c**\uff0c\u8fd9\u6837\u5b50\u52a0\u7684\u65f6\u5019\u65b9\u4fbf\u3002\n  \n  \u7528$q[]$\u8bb0\u5f55**\u524di\u4e2a\u8ddd\u79bb\u6700\u5927\u503c**\uff0c\u8fd9\u6837\u5b50\u5c31\u4e0d\u7528\u627e\u5566\uff01\n  \n  \u7528$h[]$\u8bb0\u5f55\u5f80\u540e\u8dd1\u65f6\uff0c\u5e94\u8be5\u9009\u54ea\u4e2a\uff0c\u4e5f\u5c31\u662f**\u540ei\u4e2a\u7684\u6700\u5927\u503c\u3002**\n  \n  \u8fd9\u6837\u5b50\u9884\u5904\u7406\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0$O(n)$\u5566$QAQ$\uff01\n  \n- \u4ee3\u7801QAQ\n  \n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,sum[100010],q[100010],h[100010];//n \u75b2\u52b3\u524d\u7f00\u548c \u524di\u4e2a\u6700\u5927\u503c \u540ei\u4e2a\u6700\u5927\u503c \nstruct node{\n    int s;//\u8ddd\u79bb\n    int a;//\u75b2\u52b3 \n}v[100010];\nbool cmp(node x,node y){return x.a>y.a;}\nint main()\n{\tscanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&v[i].s); \n    for(int i=1;i<=n;i++)scanf(\"%d\",&v[i].a);\n    sort(v+1,v+1+n,cmp);//\u6309\u75b2\u52b3\u6392\u5e8f \n    for(int i=1;i<=n;i++)sum[i]=sum[i-1]+v[i].a; \n    for(int i=1;i<=n;i++)q[i]=max(q[i-1],2*v[i].s);//\u524di\u4e2a\u6700\u5927\u503c\n    for(int i=n;i>=1;i--)h[i]=max(h[i+1],2*v[i].s+v[i].a);//\u540ei\u4e2a\u6700\u5927\u503c\n    for(int i=1;i<=n;i++)printf(\"%d\\n\",max(sum[i]+q[i],sum[i-1]+h[i]));\n    return 0;\n}\n```\n\n$by$ \u8def\u4eba\u4e03",
        "postTime": 1563020260,
        "uid": 39408,
        "name": "Rainy7",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u6700\u77ed\u7684\u4ee3\u7801\uff1a\n\n\u770b\u5230\u8fd9\u9053\u9898\u9996\u5148\u60f3\u5230dp\u6216\u8d2a\u5fc3\n\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u9053\u666e\u53ca\u7ec4\u7684\u9898\uff0c\u6240\u4ee5\u8fd9\u9898\u8d2a\u5fc3\u5c31\u53ef\u4ee5\uff08\u6ed1\u7a3d\uff09\n\n\u8003\u8651\u6211\u4eec\u5982\u4f55\u5c06\u7b54\u6848\u6700\u5927\u5316\uff1a\u5bf9\u4e8e\u6bcf\u4e2ax\uff0c\u4e00\u5b9a\u662f\u9009\u62e9(\u4e00\u4e2a\u6700\u5927\u7684s)+(x-1\u4e2a\u6700\u5927\u7684a)\u6216\u8005x\u4e2a\u6700\u5927\u7684a\uff0c\u53ef\u4ee5\u4f7f\u7b54\u6848\u6700\u4f18\n\n\u90a3\u4e48\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\u5462\n\n\n\n\u6211\u4eec\u5148\u628a\u6570\u7ec4\u6309\u7167a\u6392\u5e8f\n\n\u6211\u4eec\u7528sum[i]\u8868\u793aa\u6570\u7ec4\u7684\u524di\u9879\u7684\u548c\uff0cq[i]\u8868\u793as\u6570\u7ec4\u7684\u524di\u9879\u7684\u6700\u5927\u503c\uff0ch[i]\u8868\u793aa[i]\\*2+s[i]\u540ei\u9879\u7684\u6700\u5927\u503c\uff0c\u5bf9\u4e8e\u6bcf\u4e2ax\uff0c\u4ed6\u7684\u7b54\u6848\u5c31\u662fmax(sum[x]+2\\*q[x],sum[x-1]+h[x])\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct home{\n    int s,v;\n}a[100010];\nint q[100010];\nint h[100010],qm[100010];\nint n;\nbool cmp(home a,home b)\n{\n    return a.v>b.v;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i].s);\n    }\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i].v);\n    }\n    sort(a+1,a+1+n,cmp);\n    for (int i=n;i>=1;i--)\n    {\n        h[i]=max(h[i+1],2*a[i].s+a[i].v);\n    }\n    for (int i=1;i<=n;i++)\n    {\n        qm[i]=max(qm[i-1],a[i].s);\n    }\n    for (int i=1;i<=n;i++)\n        q[i]=q[i-1]+a[i].v;\n    for (int i=1;i<=n;i++)\n    {\n        printf(\"%d\\n\",max(q[i-1]+h[i],q[i]+2*qm[i]));\n    }\n} \n```",
        "postTime": 1507639696,
        "uid": 17800,
        "name": "Fizzmy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u4ece\u6837\u4f8b\u5bb9\u6613\u770b\u51fa\u7528\u8d2a\u5fc3\u505a\uff0c\u5373\u7b2c\u4e00\u6b21\u9009\u4e86curr\uff0c\u5219\u7b2c\u4e8c\u6b21\u5728\u7b2c\u4e00\u6b21\u7684\u57fa\u7840\u4e0a\u518d\u9009\u51fa\u4e0b\u4e00\u4e2a\u3002\u5373\u8981\u4e48\u9009\u62e9curr\u5de6\u8fb9\u7684a\uff0c\u8981\u4e48\u9009\u62e9curr\u53f3\u8fb9\u7684b\uff0c\u82e5\u9009\u62e9\u5de6\u8fb9\u7684a\uff0c\u5219\u603b\u75b2\u52b3\u503cans\u4f1a\u52a0\u4e0aA[a],\u82e5\u9009\u62e9\u53f3\u8fb9\u7684b\uff0c\u5219\u603b\u75b2\u52b3\u503cans\u9700\u52a0\u4e0aA[b]+2\\*(S[b]-S[curr])\u3002\n\n## \u603b\u4e4b\uff0c ** \u4e0b\u4e00\u6b21\u9009\u62e9\u5fc5\u57fa\u4e8e\u4e0a\u4e00\u6b21\u7684\u9009\u62e9 ** \u3002\n\n\u4f46\u95ee\u9898\u6765\u4e86\uff0c\n\n# \u600e\u4e48\u8bc1\u660e\u8fd9\u4e2a\u60f3\u6cd5\u662f\u5bf9\u7684\uff1f\uff01\n\n## \u8bc1\u660e\uff1a\n\n\u82e5\u5df2\u77e5Xn\u4e3a\u62dc\u8bbfn\u6237\u65f6\u7684\u6700\u4f18\u89e3\uff0cXn={A[k1]+A[k2]+...+A[kn]}+2\\*S[kn],\u5373\u4ece\u8fd1\u5230\u8fdc\u9009\u62e9\u4e86{k1,k2,...kn}\u3002\n\n\u5047\u8bbeYn+1\u4e3a\u62dc\u8bbfn+1\u6237\u65f6\u7684\u6700\u4f18\u89e3\uff0cYn+1={A[p1]+A[p2]+...+A[pn]+A[pn+1]+2\\*S[pn+1],\u4e14{p1,p2,...,pn+1}\u4e0d\u5305\u542b{k1,k2,...kn}\u3002\n\n###      ** \u5206\u7c7b\u8ba8\u8bba ** \u5982\u4e0b\uff1a\n\n1\uff09\u5f53pn+1==kn,\u5373\u540c\u6237\u65f6\uff0cYn+1 = {A[p1]+A[p2]+...+A[pn]+A[pn+1]}+2\\*S[kn] < Xn+A[pk],\u5176\u4e2dpk\u4e0d\u5c5e\u4e8e{k1,k2,...kn}\n\n2\uff09\u5f53S[pn+1]<S[kn],\u5373pn+1\u5728kn\u7684\u5de6\u8fb9\u65f6\uff0cYn+1 < {A[p1]+A[p2]+...+A[pn]+A[pn+1]}+2\\*S[kn] < Xn+A[pk],\u5176\u4e2dpk\u4e0d\u5c5e\u4e8e{k1,k2,...kn}\n\n3\uff09 \u5f53S[pn+1]>S[kn],\u5373pn+1\u5728kn\u7684\u53f3\u8fb9\u65f6\uff0cYn+1 = {A[p1]+A[p2]+...+A[pn]+A[pn+1]}+2\\*S[kn]+2(S[pn+1]-S[kn]) < Xn + A[pn+1] +2(S[pn+1]-S[kn])\n\n###      \u7efc\u4e0a\uff0c\u82e5{p1,p2,...,pn+1}\u4e0d\u5305\u542b{k1,k2,...kn}\uff0cYn+1\u5fc5\u4e0d\u662f\u6700\u4f18\u89e3\u3002\n\n\u90a3\u4e48\u82e5{p1,p2,...,pn+1}\u5305\u542b{k1,k2,...kn}\uff0c\u6613\u77e5\uff0cXn+1=Xn+max{\u5de6,\u53f3}\u3002\n\n##      \u90a3\u4e48\u82e5\u5de6\u8fb9\u7684\u6700\u5927\u503c\u548c\u53f3\u8fb9\u7684\u6700\u5927\u503c\u76f8\u7b49\u65f6\u8be5\u53d6\u8c01\u5462\uff1f\n\n\u5176\u5b9e\u53d6\u53d6\u8c01\u90fd\u4e00\u6837\uff0c\u6bd4\u5982Xn\u6700\u4f18\u89e3\u7684\u6700\u53f3\u65b9\u4e3a\u7b2ck\u6237\uff0c\u5de6\u8fb9\u6700\u5927\u4e3a\u7b2ck1\u6237\uff0c\u53f3\u8fb9\u6700\u5927\u4e3a\u7b2ck2\u6237\uff0c\n\n\u90a3\u4e48\u4e0d\u7ba1\u53d6\u5de6\u8fd8\u662f\u53d6\u53f3,\u5f97\u5230\u7684Xn+1\u503c\u90fd\u4e00\u6837\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e24\u79cd\u53d6\u6cd5\u4f1a\u4e0d\u4f1a\u5f71\u54cd\u5230Xn+2\u5462\uff1f\n\n\u5176\u5b9e\u5982\u679c\u5148\u53d6\u5de6k1\uff0c\u5fc5\u7136\u5728Xn+2\u53d6\u5230k2;\u5982\u679c\u5148\u53d6\u53f3k2,\u5fc5\u7136\u5728Xn+2\u53d6\u5230k1,\u56e0\u4e3a\u5148\u53d6k2\u7684\u8bdd\uff0c\u53f3\u8fb9\u7684\u8001\u4e8c\u7684\u503c\u5fc5\u7136\u51cf\u5c0f\uff0c\u80af\u5b9a\u4e0d\u5982k1\u7684\u5927\u3002\n\n\u53c2\u89c1\u4ee3\u7801\u6ce8\u91ca\uff1a\n\n```cpp \n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int maxn=100010;\nint n,s[maxn],a[maxn],curr,maxL,ans;\nstruct Node\n{\n    int i,v;\n    bool operator<(const Node& a)const{/*\u5927\u6839\u5806*/return v<a.v;}\n}node,maxR;\npriority_queue<Node>qR;\npriority_queue<int>qL;//\u9ed8\u8ba4\u5927\u6839\u5806 \nint main()\n{\n//    freopen(\"salesman.in\",\"r\",stdin);\n//    freopen(\"salesman.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",s+i);\n    for(int i=1;i<=n;i++)scanf(\"%d\",a+i);\n    for(int i=1;i<=n;i++)node.i=i,node.v=2*s[i]+a[i],qR.push(node);\n    for(int x=1;x<=n;x++)\n    {\n        maxL=maxR.v=0;\n        if(!qL.empty())maxL=qL.top();\n        while(!qR.empty()&&qR.top().i<=curr)qR.pop();\n        if(!qR.empty())maxR=qR.top();\n        if(maxL<maxR.v-2*s[curr])//\u5f53\u4e24\u8005\u76f8\u7b49\u65f6\u53d6\u54ea\u8fb9\u90fd\u4e00\u6837 \n        {\n            ans+=maxR.v-2*s[curr];\n            for(int k=curr+1;k<maxR.i;k++)qL.push(a[k]);\n            curr=maxR.i;\n            qR.pop();\n        }\n        else ans+=maxL,qL.pop();\n        printf(\"%d\\n\",ans);\n    }\n//    fclose(stdin);fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1506868123,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "//\u8fd9\u5176\u5b9e\u662f\u4e00\u9053\u975e\u5e38\u7b80\u5355\u7684\u8d2a\u5fc3\uff0c\u6211\u4e0d\u660e\u767ddalao\u4eec\u7684\u601d\u8def\u548c\u4ee3\u7801\u4e3a\u5565\u8fd9\u4e48\u590d\u6742\uff0c\u56e0\u4e3a\u6211\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u849f\u84bb\n\n//\u6240\u4ee5\u6211\u5f88\u7406\u89e3\u5927\u5bb6\u770b\u4ee3\u7801\u65f6\u7684\u611f\u53d7\uff0c\u6211\u4f1a\u8be6\u7ec6\u89e3\u91ca\u6211\u7684\u601d\u8def\u4ee5\u53ca\u4ee3\u7801\uff0c\u8ba9\u5927\u5bb6\u5b8c\u5168\u660e\u767d\u8fd9\u9053\u9898\uff0c\u6700\u540e\u795d\u5927\u5bb6noipAk\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct tui\n{\n    int s,val;\n}a[100004];//s\u548cval\u5206\u522b\u8868\u793a\u9898\u76ee\u4e2d\u7684\nbool cmp(tui a,tui b)\n{\n    return a.val>b.val;\n```\n}//\u628a\u6bcf\u6237\u4eba\u5bb6\u7684\u75b2\u52b3\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u4e0b\u9762\u6211\u4f1a\u8be6\u7ec6\u89e3\u91ca\n```cpp\nint i,j,ans,maxx,n,k;\nint main()\n{\n    cin>>n;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i].s);\n    }\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i].val);\n    }\n    sort(a+1,a+n+1,cmp);//\u4ee5\u4e0a\u662f\u8f93\u5165\u6570\u636e\u548c\u6392\u5e8f\n    for(i=1;i<=n;i++)\n    {\n        if(2*a[i].s+a[i].val>maxx)\n        {\n            j=k=i;\n            maxx=2*a[i].s+a[i].val;\n        }\n```\n}//\u6211\u4ece\u8fd9\u91cc\u5f00\u59cb\u89e3\u91ca\u6211\u7684\u601d\u8def\u5427\uff0c\u4e0a\u9762\u8fd9\u4e2afor\u5faa\u73af\u662f\u627e\u51fax=1\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u53bb\u5230\u7b54\u6848\u7684\u4eba\u5bb6\u8fd8\u8981\u8d70\u56de\u6765\uff0c\u6240\u4ee5\u89812\\*a[i].s\n//\u56e0\u4e3a\u6bcf\u4e00\u6237\u8fd8\u6709\u4e00\u4e2a\u75b2\u52b3\u503c\uff0c\u6240\u4ee5\u8981\u52a0\u4e0aa[i].val\uff0c\u81f3\u4e8ej\u548ck\uff0c\u53ea\u662f\u4e3a\u4e86\u6211\u65b9\u4fbf\u800c\u5df2\uff0c\u4e0b\u9762\u6211\u4f1a\u89e3\u91ca\n\n```cpp\n   ans+=maxx;\n   printf(\"%d\\n\",ans);//\u8f93\u51fa\u7b2c\u4e00\u4e2a\u7b54\u6848\n   for(i=1;i<=n;i++)\n   {\n       if(i==k)//\u4ee5\u4e3a\u521a\u521a\u6211\u4eec\u5df2\u7ecf\u7528k\u8bb0\u5f55\u4e86\u6700\u5927\u7684\u75b2\u52b3\u503c\uff0c\u6240\u4ee5\u9047\u5230k\uff0c\u6211\u4eec\u5c31\u8df3\u8fc7\uff0c\u4e0d\u52a0\u4e0a\u4e86\n       {\n           continue;\n       }\n       if(a[j].s<a[i].s)//\u5982\u679c\u67d0\u4e00\u4e2a\u6237\u7b54\u6848\u4eba\u5bb6\u7684\u8ddd\u79bb\u6bd4k\u7684\u66f4\u5927\uff0c\u90a3\u6211\u4eec\u5c31\u51cf\u53bbk\u5bb6\u7684\u8ddd\u79bb\u800c\u52a0\u4e0a\u73b0\u5728\u8fd9\u6237i\u5bb6\u7684\u8ddd\u79bb\uff0c\u56e0\u4e3a\u6211\u4eec\u8d2a\u5fc3\n//\u7684\u601d\u8def\u662f\u6bcf\u6b21\u627e\u67d0\u6237\u75b2\u52b3\u503c\u6700\u5927\u7684\u4eba\u5bb6(\u5c31\u662fval\uff09\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u7ecf\u8fc7i\uff0c\u5c31\u4e00\u5b9a\u4f1ak\uff08\u8fd8\u4e0d\u660e\u767d\u7684\u6211\u4e5f\u5f88\u96be\u8bf4\u6e05\uff0c\u753b\u56fe\u770b\u770b\u5427\uff09\n//\u4e0d\u7ed9\u8d70\u91cd\u590d\u8def\uff0c\u6240\u4ee5\u5c31\u8981\u8fd9\u6837\u505a\u4e86\n        {\n            ans=ans-2*a[j].s+2*a[i].s;\n            j=i;//\u4fee\u6539\u5f53\u524d\u6700\u8fdc\u7684\u7b54\u6848\u8ddd\u79bb\n            ans+=a[i].val;\n            printf(\"%d\\n\",ans);\n        }\n        else//\u56e0\u4e3ai\u5728j\u4e4b\u524d\uff0c\u6240\u4ee5\u7ecf\u8fc7j\u5c31\u4e00\u5b9a\u4f1a\u7ecf\u8fc7i\n        {\n            ans+=a[i].val;\n            printf(\"%d\\n\",ans);\n        }\n   }\n}\n```",
        "postTime": 1510220296,
        "uid": 34324,
        "name": "1446435502l",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u539a\u989c\u65e0\u803b\u7684\u8d34\u4e0a\u81ea\u5df1\u7684blog\uff1a\u5176\u5b9e\u91cc\u9762\u5565\u4e5f\u6ca1\u6709\uff0c\u800c\u4e14\u6211\u4e5fhardly\u66f4\u65b0\n\n\nhttp://www.cnblogs.com/lovewhy/p/8287233.html\n\n/\\*\n\u8d2a\u5fc3\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u63a8\u9500\u6570\u91cf\u4e3ai\u7684\u60c5\u51b5\u4e00\u5b9a\u5305\u542b\u7740\u63a8\u9500\u60c5\u51b5\u4e3ai-1\u7684\u90a3\u4e9b\u4eba\u3002\n\n\u6240\u4ee5\uff0c\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u8282\u70b9\u7684\u503c\u662f\u5b83\u7684\u5b50\u6811\u7684val\u6700\u5927\u503c\u3002\n\n\u6bcf\u4e2a\u8282\u70b9\u90fd\u5b58\u50a8\u4e0b\u8868id\u548c\u4ea7\u751f\u7684\u75b2\u52b3\u503cnum\u3002\n\n\u5148\u627e\u51fa\u8d21\u732e\u6700\u5927\u7684\u90a3\u4e2a\u4eba\uff0c\u8bb0\u5f55\u5b83\u7684\u4f4d\u7f6e\uff0c\n\n\u540e\u7eed\u7684\u4eba\uff0c\u5982\u679c\u5b83\u7684\u4f4d\u7f6e\u6bd4\u4e0a\u4e00\u4e2a\u4ebalast\u9760\u53f3\uff0c\u8bb0\u4e3anow\uff0c\u5219\u5728now\u53f3\u8fb9\u7684\u4eba\uff0c\n\n\u4ed6\u4eec\u7684\u8d21\u732e-=2\\*(s[now]-s[last])\u3002\n\n\u5728last\u548cnow\u4e2d\u95f4\u7684\u4eba\uff0c\u4ef7\u503cval=a[i]\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8981\u8d70\u7684\u8def\u5df2\u7ecf\u88ab\u8d70\u8fc7\u4e86\uff0c\u4e0d\u5728\u6709\u8d21\u732e\u3002\n\nlast\u4ee5\u53ca\u5b83\u5de6\u8fb9\u7684\u4eba\uff0c\u4e0a\u4e00\u6b21\u5df2\u7ecf\u88ab\u7f6e\u4e86\uff0c\u6240\u4ee5\u5982\u679ctree[root].r<=last,\u76f4\u63a5return\u4fbf\u53ef\u3002\n\n\u8bbf\u95ee\u8fc7now\u540e\uff0c\u8981\u628anow\u6807\u8bb0\u6389\uff0c\u4e0b\u6b21\u4e0d\u5728\u8bbf\u95ee\uff0c\u76f4\u63a5\u5c06\u5176\u8d21\u732eval\u7f6e\u4e3a\u6781\u5c0f\u503c\u4fbf\u53ef\u3002\n\n\\*/\n     \n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<string>\n#include<algorithm>\nusing namespace std;\nconst int N=100005;\nconst int INF=599518803;\nint n;\nint s[N],a[N];\nstruct Tree\n{\n    int l,r,mid,lazy;\n    int id,val;\n}tree[N<<2];\nint last,now;\nint read()\n{\n    char c=getchar();int num=0;\n    for(;!isdigit(c);c=getchar());\n    for(;isdigit(c);c=getchar())\n        num=num*10+c-'0';\n    return num;\n}\nvoid push_up(int root)\n{\n    if(tree[root<<1].val>=tree[root<<1|1].val)\n    {\n        tree[root].id=tree[root<<1].id;\n        tree[root].val=tree[root<<1].val;\n    }\n    else\n    {\n        tree[root].id=tree[root<<1|1].id;\n        tree[root].val=tree[root<<1|1].val;\n    }\n}\nvoid build(int root,int l,int r)\n{\n    tree[root].l=l,tree[root].r=r,tree[root].mid=l+r>>1;\n    if(l==r)\n    {\n        tree[root].id=l;\n        tree[root].val=(s[l]<<1)+a[l];\n        return;\n    }\n    build(root<<1,l,tree[root].mid);\n    build(root<<1|1,tree[root].mid+1,r);\n    push_up(root);\n}\nvoid push_down(int root)\n{\n    tree[root<<1].lazy+=tree[root].lazy;\n    tree[root<<1|1].lazy+=tree[root].lazy;\n    tree[root<<1].val+=tree[root].lazy;\n    tree[root<<1|1].val+=tree[root].lazy;\n    tree[root].lazy=0;\n    return;\n}\nvoid update(int root)\n{\n    if(tree[root].r<=last)    //\u56e0\u4e3a\u5728last\u4e4b\u524d\u7684\u4e00\u5b9a\u5df2\u7ecf\u88ab\u8d70\u8fc7\u4e86\uff0c\u5df2\u7ecf\u88ab\u7f6e\u4e3a\u4e86a[i]\uff0c\u6ca1\u5fc5\u8981\u518d\u6b21\u7f6e\u4e00\u6b21\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de \n        return;\n    if(tree[root].l>now)    //\u5728\u5f53\u524d\u7684\u4eba\u53f3\u8fb9\u7684 \n    {\n        tree[root].val-=(s[now]-s[last])<<1;    //\u51cf\u8def\u7a0b \n        tree[root].lazy-=(s[now]-s[last])<<1;    //lazy\u6570\u7ec4\u4e5f\u8981\u51cf \n        return;\n    }\n    if(tree[root].l==tree[root].r)        //\u5728last\u548cnow\u4e4b\u95f4\u7684\uff0c\u6362\u6210\u4ed6\u4eec\u7684\u63a8\u9500\u503c \n    {\n        tree[root].val=a[tree[root].l];\n        return;\n    }\n    if(tree[root].lazy)\n        push_down(root);\n    update(root<<1);\n    update(root<<1|1);\n    push_up(root);\n}\nvoid _delete(int root)    //\u5c06now\u5220\u9664 \n{\n    if(tree[root].l==tree[root].r)\n    {\n        tree[root].val=-INF;    //val\u7f6e\u4e3a\u6781\u5c0f\u503c \n        return;\n    }\n    if(now<=tree[root].mid)\n        _delete(root<<1);\n    else\n        _delete(root<<1|1);\n    push_up(root);\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;++i)\n        s[i]=read();\n    for(int i=1;i<=n;++i)\n        a[i]=read();\n    build(1,1,n);\n    int ans=0;\n    for(int i=1;i<=n;++i)\n    {\n        ans+=tree[1].val;    //\u53d6\u51fa\u6700\u5927\u7684\u8d21\u732e \n        now=tree[1].id;\n        printf(\"%d\\n\",ans);\n        if(now>last)\n        {\n            update(1);\n            last=now;    //\u66f4\u65b0last \n        }\n        _delete(1);    //\u5220\u9664now \n    }\n    return 0;\n}\n```",
        "postTime": 1515985707,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "#P2672\u9898\u89e3\n\n###\u9996\u5148\u8bb2\u4e0b\u601d\u8def,\u8fd9\u9053\u9898\u76f4\u63a5std::sort\u6392\u5e8f\u7136\u540e\u8d2a\u5fc3\u5c31\u53ef\u4ee5(\u5199\u7684\u65f6\u5019\u8fd8\u4e0d\u4f1a\u7528\u4f18\u5148\u961f\u5217...)\n\nmx\u53d8\u91cf\u5b58\u50a8\u7684\u662f\u4ed6\u5df2\u7ecf\u8d70\u5230\u7684\u6700\u5927\u7684\u8def\u5f84,\u521d\u59cb\u503c\u4e3a0\u3002\n\n\u7528sort\u51fd\u6570\u5bf9\u4ed6\u8d70\u5230\u70b9\u80fd\u79ef\u7d2f\u7684\u6700\u5927\u75b2\u52b3\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2ax\uff0c\u5224\u65ad\u4ed6\u9700\u8981\u8d70\u7684\u8def\u662f\u5426\u5927\u4e8e\u73b0\u5728\u7684\u8def\uff0c\u662f\u5c31\u66f4\u65b0mx\u5e76\u91cd\u65b0\u5bf9\u7ed3\u6784\u4f53\u6392\u5e8f\uff0c\u8fd9\u6837\u4e0d\u65ad\u8d2a\u5fc3\u8fd4\u56de\u6700\u5927\u80fd\u79ef\u7d2f\u7684\u75b2\u52b3\u503c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n//define\nstruct node{\n    int s,a;\n}map[100000];\nint n,m,i,mx,j,k,ans;\n//function\nbool cmp(const node &x,const node &y){\n    int va=x.a,vb=y.a;\n    if(x.s>mx)va+=(x.s-mx)*2;\n    if(y.s>mx)vb+=(y.s-mx)*2;//\u8ba1\u7b97\u5982\u679c\u8d70\u5230\u5f53\u524d\u70b9\u53ef\u4ee5\u79ef\u7d2f\u591a\u5c11\u75b2\u52b3\u503c\n    return (va>vb?1:0);//\u6392\u5e8f\u8fd4\u56de\u6700\u5927\u7684\u7ed3\u6784\u4f53\n}\n//main\nint main(){\n    ios::sync_with_stdio(false);\n//    freopen(\"salesman.in\",\"r\",stdin);\n//    freopen(\"salesman.out\",\"w\",stdout);\n    bool b;//\u6807\u8bb0\u662f\u5426\u91cd\u62cd\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)scanf(\"%d\",&map[i].s);\n    for(i=0;i<n;i++)scanf(\"%d\",&map[i].a);\n    sort(map,map+n,cmp);\n    for(i=0;i<n;i++){\n        if(map[i].s>mx){b=true;mx=map[i].s;}\n        else b=false;\n        ans+=map[i].a;\n        cout<<(mx*2+ans)<<endl;//mx*2\u662f\u6765\u56de\u7684\u8def\u5f84\uff0c\u52a0\u4e0a\u7d2f\u8ba1\u7684A[i]\u75b2\u52b3\u503c\n        if(b==true)sort(map+i+1,map+n,cmp);\n    }\n    return 0;\n}\n```\nps\uff1a\u849f\u84bb\u7b2c\u4e00\u6b21\u63d0\u4ea4\u9898\u89e3\uff0c\u8bed\u6587\u5e38\u5e74\u4e0b\u7ebf\uff0c\u671b\u5404\u4f4d\u5927\u4f6c\u6e05\u55b7\n",
        "postTime": 1507214519,
        "uid": 33367,
        "name": "SpinMrY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "# \u8c8c\u4f3c\u8fd9\u9898\u4ee3\u7801\u53ef\u4ee5\u5f88\u77ed\u6b38\n\n# \u4f46\u662f\u6211\u81ea\u4f5c\u5b7d\u5199\u7ebf\u6bb5\u6811\n\n## \u9898\u76ee\u94fe\u63a5\uff1a[P2672 \u63a8\u9500\u5458](https://www.luogu.org/problemnew/show/P2672)\n\n\u4e0d\u8fc7\u4e3a\u4ec0\u4e48\u4f1a\u5199\u7ebf\u6bb5\u6811\u5462\uff0c~~\u5176\u5b9e\u662f\u56e0\u4e3a\u6211\u770b\u4e86\u6807\u7b7e~~\u3002\n\n\u7533\u660e\uff1a\u672c\u9898\u89e3\u8f83\u9002\u5408\u559c\u6b22\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u7684 $OIers$\uff0c\u5e76\u4e14\u7801\u91cf\u8f83\u5176\u4ed6\u65b9\u6cd5\u6765\u8bf4\u6bd4\u8f83\u5927\n\n------------\n\n\u8fdb\u5165\u6b63\u9898\n\n\u53ef\u4ee5\u8bc1\u660e\u6bcf\u4e00\u6b21\u9009\u62e9\u90fd\u57fa\u4e8e\u4e0a\u4e00\u6b21\u7684\u9009\u62e9\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u5df2\u7ecf\u6709\u5de8\u4f6c\u8be6\u7ec6\u5730\u8bc1\u660e\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8be6\u7ec6\u8bf4\u660e\u4e86 ~~\u6216\u8005\u8bf4\u662f\u6211\u4e0d\u4f1a~~\n\n\u8fd9\u9053\u9898\u6211\u9009\u62e9\u5012\u8fc7\u6765\u505a\uff0c\u5927\u81f4\u601d\u8def\uff1a\n\n1. $S$ \u503c\u662f\u4ece\u5c0f\u5230\u5927\u6392\u597d\u5e8f\u7684\uff08\u6240\u4ee5\u4e0b\u6587\u4e2d\u4e0b\u6807\u66f4\u5927\u5373\u610f\u5473\u7740 $S$ \u503c\u66f4\u5927\uff09\uff0c\u53ef\u4ee5\u4e0d\u7528\u7ba1\u3002\n\n2. \u5f53\u6bcf\u4e00\u4e2a\u7528\u6237\u7684\u5bb6\u90fd\u9700\u8981\u53bb\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u662f $X = N$ \u65f6\uff0c\u7b54\u6848\u663e\u7136\u662f\u6240\u6709 $A$ \u503c\u7684\u548c\u52a0\u4e0a $Smax * 2$\u3002\u53c8\u56e0\u4e3a*\u6bcf\u4e00\u6b21\u7684\u9009\u62e9\u90fd\u57fa\u4e8e\u4e0a\u4e00\u6b21*\uff0c\u4e5f\u5c31\u662f*\u6bcf\u4e00\u6b21\u9009\u62e9\u90fd\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e0a\u4e00\u6b21\u9009\u62e9*\u3002\n\n3. \u6211\u4eec\u5728\u6c42\u6bcf\u4e00\u4e2a\u72b6\u6001\u7684\u65f6\u5019\uff0c\u5173\u6ce8\u7684\u53ea\u6709\u76ee\u524d $A$ \u503c\u7684\u548c\u3001\u76ee\u524d\u9009\u62e9\u7684\u70b9\u4e2d $S$ \u7684\u6700\u5927\u503c \u4ee5\u53ca \u5f53 $S$ \u6700\u5927\u65f6\u70b9\u7684\u4e0b\u6807\u3002\u53c8\u56e0\u4e3a $A$ \u503c\u7684\u548c\u53ef\u4ee5\u7531\u4e0a\u4e00\u4e2a\u7b54\u6848\u4e0e\u76ee\u524d\u9009\u62e9\u7684\u70b9\u5f97\u5230\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7ef4\u62a4\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9010\u6b65\u5220\u9664\u9009\u4e2d\u7684\u70b9\uff0c\u5e76\u4fdd\u8bc1\u5c40\u90e8\u6700\u4f18\u3002\u8fd9\u4e2a\u7b54\u6848\u4e00\u5b9a\u5c31\u662f\u6240\u6c42\u3002\n\n------------\n\n\n\u4ee5\u4e0b\u7528 $l$\u3001$r$\u8868\u793a \u76ee\u524d\u9009\u4e2d\u7684\u70b9\u4e2d\u4e0b\u6807\u6700\u5c0f\u7684\u70b9\u7684\u4e0b\u6807 \u548c \u76ee\u524d\u9009\u4e2d\u7684\u70b9\u4e2d\u4e0b\u6807\u6700\u5927\u7684\u70b9\u7684\u4e0b\u6807\uff08\u56e0\u6b64 $l$\uff0c$r$ \u4e4b\u95f4\u6709\u53ef\u80fd\u4f1a\u6709\u6ca1\u6709\u9009\u4e2d\u7684\u70b9\uff09\uff0c$dis$ \u8868\u793a $r$ \u70b9\u7684 $S$ \u503c\u7684\u4e24\u500d\uff08\u5373\u6765\u56de\u8ddd\u79bb\uff09\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u90fd\u6709\u4e24\u79cd\u9009\u62e9\u6765\u6307\u5411\u4e24\u4e2a\u4e0d\u540c\u7684\u4e0a\u4e00\u72b6\u6001\uff0c\u5728\u4e2d\u95f4\u53d6\u6700\u4f18\u503c\uff1a\n\n1. \u5220\u9664 $l$ ~ $r - 1$ \u4e2d $A$ \u503c\u6700\u5c0f\u7684\u70b9 $v$\uff0c\u8fd9\u6837\u4f1a\u5c3d\u91cf\u8ba9\u7b54\u6848\u66f4\u5927\uff0c\u6b64\u65f6\u7b54\u6848\u53ea\u9700\u51cf\u53bb $A_v$ \u5373\u53ef\n\n2. \u5220\u9664 $r$\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u53f3\u7aef\u70b9\u7684\u53d8\u5316\uff08\u5de6\u79fb\uff09\uff0c\u56e0\u6b64 $dis$ \u4e5f\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u540c\u65f6\uff0c\u7b54\u6848\u4f1a\u51cf\u53bb $A_r$\n\n\u6700\u540e\u4e24\u4e2a\u65b9\u6848\u7684\u7b54\u6848\u53d6 $max$ \u5e76\u4e14\u66f4\u65b0\u72b6\u6001\u5373\u53ef\u3002\n\n------------\n\n\n\u6240\u4ee5\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u7528\u5728\u54ea\u91cc\u5462\u3002\u3002\u3002~~\u7ec8\u4e8e\u8bb2\u5230\u6b63\u9898\u4e86~~\n\n\u5728\u65b9\u6848 $1$ \u4e2d\uff0c\u6211\u4eec\u597d\u50cf\u8981\u6c42 $l$ ~ $r - 1$ \u4e2d $A$ \u7684 $min$ \u503c\u548c\u5b83\u7684\u4e0b\u6807\uff1f\n\n### \u7ebf\u6bb5\u6811\uff01\n\n\u662f\u7684\uff0c\u7ebf\u6bb5\u6811\u5c31\u7528\u5728\u8fd9\u91cc ~~\u4e5f\u53ea\u7528\u5728\u8fd9\u91cc~~\n\n\u6240\u4ee5\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u5c31\u53ea\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u548c\u533a\u95f4\u6700\u5c0f\u503c\u4e0b\u6807\u5373\u53ef\uff0c\u52a0\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\n\n\u4f46\u662f\u5f53\u6709\u4e24\u4e2a\u70b9\u7684\u503c\u5747\u4e3a\u533a\u95f4\u6700\u5c0f\uff0c\u90a3\u6211\u4eec\u7684\u4e0b\u6807\u5e94\u8be5\u53d6\u54ea\u4e00\u4e2a\u5462\uff1f\n\n\u663e\u7136\u662f\u4e0b\u6807\u66f4\u5c0f\u7684\u90a3\u4e00\u4e2a\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7559\u4e0b\u6765\u7684\u70b9\u7684 $S$ \u66f4\u5927\uff0c $dis$ \u66f4\u5927 \n\n\u800c\u5220\u9664\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u5176 $A$ \u503c\u53d8\u6210 $INF$\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u53d6\u5230\u4e86\u3002\u4f46\u8fd9\u4e2a\u64cd\u4f5c\u53ea\u9700\u8981\u5728\u65b9\u6848 $1$ \u66f4\u4f18\u7684\u65f6\u5019\u8fdb\u884c\uff0c\u56e0\u4e3a\u5728\u65b9\u6848 $2$ \u4e2d\uff0c\u6211\u4eec\u5411\u5de6\u66f4\u65b0\u4e86 $r$ \u7684\u503c\uff0c\u53c8\u6240\u6709\u7684\u7ebf\u6bb5\u6811\u64cd\u4f5c\u90fd\u4f1a\u5728 $l$ ~ $r - 1$ \u4e2d\u8fdb\u884c\uff0c\u6240\u4ee5\u6839\u672c\u5c31\u4e0d\u4f1a\u518d\u5f97\u5230\u4e4b\u524d\u7684 $r$ \u70b9\u4e86\n\n\n------------\n\n\u800c\u5f53\u6211\u4eec\u9009\u62e9\u4e86\u65b9\u6848 $1$ \uff0c\u5220\u9664 $r$ \u540e\uff0c\u54ea\u4e2a\u70b9\u6765\u201c\u63a5\u66ff\u201d $r$ \u7684\u4f4d\u7f6e\u5462\uff1f\u663e\u7136\u4e0d\u80fd\u662f $r$ \u4e0a\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u5b83\u6216\u8bb8\u6ca1\u6709\u88ab\u9009\u4e2d\uff0c\u5982\u679c\u9009\u4e2d\u5b83\uff0c\u5219\u8fdd\u80cc\u4e86\u9898\u76ee\u4e2d \u201c\u4e0d\u8d70\u591a\u4f59\u7684\u8def\u7684\u524d\u63d0\u201d\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u9009\u4e2d\u7684\u70b9\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u7684\u524d\u4e00\u4e2a\u70b9 ~~\u7ed5\u53e3\u4ee4~~\n\n### \u94fe\u8868\uff01\n\n\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\n\n------------\n\n\n\u597d\u7684\u95ee\u9898\u89e3\u51b3\u4e86 ~~\u770b\u8d77\u6765\u5f88\u7b80\u5355\u7684\u6837\u5b50~~\n\n\u8fd8\u662f\u5206\u51e0\u4e2a\u90e8\u5206\u8bb2\u89e3\u597d\u4e86\n\n------------\n\n\u53d8\u91cf\u58f0\u660e\n\n```cpp\n#define pii pair<int,int>//\u8fd9\u91cc\u7528pair\u6765\u5b58\u533a\u95f4min\u503c\u548cmin\u503c\u4e0b\u6807\n\nconst int MAXN = 1e5 + 10;\nconst int INF = 1e9;\n\nint n,pre[MAXN],nxt[MAXN];//pre\u3001nxt\uff1a\u94fe\u8868\nint seg[MAXN << 2],p[MAXN << 2];//seg\uff1a\u7ebf\u6bb5\u6811\u533a\u95f4min\uff0cp\uff1a\u7ebf\u6bb5\u6811\u533a\u95f4min\u4e0b\u6807\nint ans[MAXN],l,r;//ans\uff1ax\u4e3a\u4e0d\u540c\u6570\u503c\u65f6\u7684\u7b54\u6848\u6570\u7ec4\n```\n\n\u8fd8\u6709\u4e00\u4e2a\u7ed3\u6784\u4f53\n\n```cpp\nstruct house {\n    int a,s;\n    bool operator < (const house &b) const {return a < b.a;}\n} node[MAXN];\n```\n\n\u8ddf\u9898\u76ee\u4e2d\u7684\u4e00\u6837\n\n------------\n\n\u94fe\u8868\n\n```cpp\nvoid Delete(int pos) {\n    pre[nxt[pos]] = pre[pos];\n    nxt[pre[pos]] = nxt[pos];\n}//\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u7b80\u5355\u7684\u5220\u9664\u8282\u70b9\u51fd\u6570\u3002\u3002\u3002\n```\n\n\u6ca1\u5565\u8bb2\u7684\n\n------------\n\n\u7ebf\u6bb5\u6811\n\n```cpp\n#define l ll//\u61d2\u5f97\u6362\u53d8\u91cf\u540d\u4e86\uff0c\u5c31define\u4e00\u4e0b\n#define r rr//\u5230\u65f6\u5019\u4f1aundef\n\nvoid pushup(int root) {//\u66f4\u65b0\n    if(seg[root << 1 | 1] < seg[root << 1]) {//\u5982\u679c\u53f3\u5b50\u6811\u66f4\u4f18\n        seg[root] = seg[root << 1 | 1];//\u53ea\u80fd\u5b58\u53f3\u5b50\u6811\u7684\u7b54\u6848\u4e86\n        p[root] = p[root << 1 | 1];\n    } else {\n        seg[root] = seg[root << 1];//\u5426\u5219\u5b58\u5de6\u5b50\u6811\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4e0b\u6807\u5c3d\u91cf\u5c0f\n        p[root] = p[root << 1];\n    }\n}\n\nvoid build(int root,int l,int r) {//\u7b80\u5355\u7684\u5efa\u6811\n    if(l == r) {\n        seg[root] = node[l].a;\n        p[root] = l;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(root << 1,l,mid);\n    build(root << 1 | 1,mid + 1,r);\n    pushup(root);\n}\n\nvoid update(int root,int l,int r,int pos,int val) {//\u7b80\u5355\u7684\u66f4\u65b0\n    if(l == r && l == pos) {\n        seg[root] = val;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if(pos <= mid) update(root << 1,l,mid,pos,val);\n    else update(root << 1 | 1,mid + 1,r,pos,val);\n    pushup(root);\n}\n\npii getmin(pii &a,pii b) {//\u7c7b\u4f3c\u4e8emin\u51fd\u6570\uff0c\u7528\u6765\u627e\u4e24\u4e2apii\u4e2d\u6700\u5c0f\u503c\u8f83\u5c0f\u7684\u90a3\u4e2a\uff08\u5373\u5f53\u524d\u7684\u8fd4\u56de\u503c\uff09\n    if(b.first < a.first) swap(a,b);\n}\n\npii query(int root,int l,int r,int L,int R) {\n    if(L <= l && r <= R) return make_pair(seg[root],p[root]);\n    int mid = (l + r) >> 1;\n    pii res = make_pair(INF,INF);\n    if(L <= mid) getmin(res,query(root << 1,l,mid,L,R));//\u8fd9\u91cc\u7528\u5230\u4e86getmin\uff0c\u53ef\u4ee5\u81ea\u5df1\u7814\u7a76\u4e00\u4e0b\n    if(R > mid) getmin(res,query(root << 1 | 1,mid + 1,r,L,R));\n    return res;\n}\n\n#undef l\n#undef r//\u8bf4\u4e86\u4f1aundef\n```\n\n------------\n\n\u4e3b\u51fd\u6570\n\n```cpp\nint main () {\n    ios::sync_with_stdio(0);//\u4f18\u5316\n    cin >> n;\n    for(register int i = 1;i <= n; ++i)\n        cin >> node[i].s;\n    for(register int i = 1;i <= n; ++i) {\n        cin >> node[i].a;\n        pre[i] = i - 1;\n        nxt[i] = i + 1;//\u94fe\u8868\u521d\u59cb\u5316\n        ans[n] += node[i].a;//\u6700\u7ec8\u7b54\u6848\n    }\n    build(1,1,n);//\u5efa\u6811\n    l = 1,r = n;//\u5de6\u53f3\u7aef\u70b9\uff08\u5b9e\u9645\u53ea\u6709 r \u6709\u7528\uff09\n    ans[n] += node[r].s * 2;//\u7b54\u6848\u8981\u52a0\u4e0adis\n    for(register int i = n - 1;i >= 1; --i) {//\u5012\u63a8\u7b54\u6848\n        pii tmp = query(1,1,n,l,r - 1);//\u65b9\u68481 \u4e2d\u7528\u7ebf\u6bb5\u6811\n        int ans1 = ans[i + 1] - tmp.first;//\u65b9\u68481\n        int ans2 = ans[i + 1] - node[r].a - node[r].s * 2 + node[pre[r]].s * 2;//\u65b9\u68482\uff0c\u4e5f\u5c31\u662f\u51cf\u53bb r \u7684s*2\u548ca\uff0c\u518d\u52a0\u4e0a\u65b0r\u7684s*2\n        if(ans1 < ans2) {//\u5982\u679c\u65b9\u68481\u66f4\u4f18\n            int ss = r;\n            r = pre[r]; Delete(ss);//\u5220\u9664\u53f3\u7aef\u70b9\uff0c\u66f4\u65b0\u53f3\u7aef\u70b9\n            ans[i] = ans2;//\u66f4\u65b0\u7b54\u6848\n        } else {\n            Delete(tmp.second);//\u5220\u9664\u5f53\u524d\u4e0b\u6807\n            update(1,1,n,tmp.second,INF);//\u66f4\u65b0\uff0c\u628a\u5f53\u524dA\u53d8\u6210INF\n            ans[i] = ans1; //\u66f4\u65b0\u7b54\u6848\n        }\n    }\n    for(register int i = 1;i <= n; ++i)\n        cout << ans[i] << endl;//\u8f93\u51fa\n    return 0;//\u534e\u4e3d\u4e3d\u5730\u7ed3\u675f\n} \n```\n\n\n------------\n\n\u6700\u540e\u9644\u4e0a\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n//Code By CXY\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define pii pair<int,int>//\u8fd9\u91cc\u7528pair\u6765\u5b58\u533a\u95f4min\u503c\u548cmin\u503c\u4e0b\u6807\n\nconst int MAXN = 1e5 + 10;\nconst int INF = 1e9;\n\nstruct house {\n    int a,s;\n    bool operator < (const house &b) const {return a < b.a;}\n} node[MAXN];\n\nint n,pre[MAXN],nxt[MAXN];//pre\u3001nxt\uff1a\u94fe\u8868\nint seg[MAXN << 2],p[MAXN << 2];//seg\uff1a\u7ebf\u6bb5\u6811\u533a\u95f4min\uff0cp\uff1a\u7ebf\u6bb5\u6811\u533a\u95f4min\u4e0b\u6807\nint ans[MAXN],l,r;//ans\uff1ax\u4e3a\u4e0d\u540c\u6570\u503c\u65f6\u7684\u7b54\u6848\u6570\u7ec4\n\n#define l ll//\u61d2\u5f97\u6362\u53d8\u91cf\u540d\u4e86\uff0c\u5c31define\u4e00\u4e0b\n#define r rr//\u5230\u65f6\u5019\u4f1aundef\n\nvoid pushup(int root) {//\u66f4\u65b0\n    if(seg[root << 1 | 1] < seg[root << 1]) {//\u5982\u679c\u53f3\u5b50\u6811\u66f4\u4f18\n        seg[root] = seg[root << 1 | 1];//\u53ea\u80fd\u5b58\u53f3\u5b50\u6811\u7684\u7b54\u6848\u4e86\n        p[root] = p[root << 1 | 1];\n    } else {\n        seg[root] = seg[root << 1];//\u5426\u5219\u5b58\u5de6\u5b50\u6811\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4e0b\u6807\u5c3d\u91cf\u5c0f\n        p[root] = p[root << 1];\n    }\n}\n\nvoid build(int root,int l,int r) {//\u7b80\u5355\u7684\u5efa\u6811\n    if(l == r) {\n        seg[root] = node[l].a;\n        p[root] = l;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    build(root << 1,l,mid);\n    build(root << 1 | 1,mid + 1,r);\n    pushup(root);\n}\n\nvoid update(int root,int l,int r,int pos,int val) {//\u7b80\u5355\u7684\u66f4\u65b0\n    if(l == r && l == pos) {\n        seg[root] = val;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if(pos <= mid) update(root << 1,l,mid,pos,val);\n    else update(root << 1 | 1,mid + 1,r,pos,val);\n    pushup(root);\n}\n\npii getmin(pii &a,pii b) {//\u7c7b\u4f3c\u4e8emin\u51fd\u6570\uff0c\u7528\u6765\u627e\u4e24\u4e2apii\u4e2d\u6700\u5c0f\u503c\u8f83\u5c0f\u7684\u90a3\u4e2a\uff08\u5373\u5f53\u524d\u7684\u8fd4\u56de\u503c\uff09\n    if(b.first < a.first) swap(a,b);\n}\n\npii query(int root,int l,int r,int L,int R) {\n    if(L <= l && r <= R) return make_pair(seg[root],p[root]);\n    int mid = (l + r) >> 1;\n    pii res = make_pair(INF,INF);\n    if(L <= mid) getmin(res,query(root << 1,l,mid,L,R));//\u8fd9\u91cc\u7528\u5230\u4e86getmin\uff0c\u53ef\u4ee5\u81ea\u5df1\u7814\u7a76\u4e00\u4e0b\n    if(R > mid) getmin(res,query(root << 1 | 1,mid + 1,r,L,R));\n    return res;\n}\n\n#undef l\n#undef r//\u8bf4\u4e86\u4f1aundef\n\nvoid Delete(int pos) {\n    pre[nxt[pos]] = pre[pos];\n    nxt[pre[pos]] = nxt[pos];\n}//\u8fd9\u662f\u4e00\u4e2a\u6781\u5176\u7b80\u5355\u7684\u5220\u9664\u8282\u70b9\u51fd\u6570\u3002\u3002\u3002\n\nint main () {\n    ios::sync_with_stdio(0);//\u4f18\u5316\n    cin >> n;\n    for(register int i = 1;i <= n; ++i)\n        cin >> node[i].s;\n    for(register int i = 1;i <= n; ++i) {\n        cin >> node[i].a;\n        pre[i] = i - 1;\n        nxt[i] = i + 1;//\u94fe\u8868\u521d\u59cb\u5316\n        ans[n] += node[i].a;//\u6700\u7ec8\u7b54\u6848\n    }\n    build(1,1,n);//\u5efa\u6811\n    l = 1,r = n;//\u5de6\u53f3\u7aef\u70b9\uff08\u5b9e\u9645\u53ea\u6709 r \u6709\u7528\uff09\n    ans[n] += node[r].s * 2;//\u7b54\u6848\u8981\u52a0\u4e0adis\n    for(register int i = n - 1;i >= 1; --i) {//\u5012\u63a8\u7b54\u6848\n        pii tmp = query(1,1,n,l,r - 1);//\u65b9\u68481 \u4e2d\u7528\u7ebf\u6bb5\u6811\n        int ans1 = ans[i + 1] - tmp.first;//\u65b9\u68481\n        int ans2 = ans[i + 1] - node[r].a - node[r].s * 2 + node[pre[r]].s * 2;//\u65b9\u68482\uff0c\u4e5f\u5c31\u662f\u51cf\u53bb r \u7684s*2\u548ca\uff0c\u518d\u52a0\u4e0a\u65b0r\u7684s*2\n        if(ans1 < ans2) {//\u5982\u679c\u65b9\u68481\u66f4\u4f18\n            int ss = r;\n            r = pre[r]; Delete(ss);//\u5220\u9664\u53f3\u7aef\u70b9\uff0c\u66f4\u65b0\u53f3\u7aef\u70b9\n            ans[i] = ans2;//\u66f4\u65b0\u7b54\u6848\n        } else {\n            Delete(tmp.second);//\u5220\u9664\u5f53\u524d\u4e0b\u6807\n            update(1,1,n,tmp.second,INF);//\u66f4\u65b0\uff0c\u628a\u5f53\u524dA\u53d8\u6210INF\n            ans[i] = ans1; //\u66f4\u65b0\u7b54\u6848\n        }\n    }\n    for(register int i = 1;i <= n; ++i)\n        cout << ans[i] << endl;//\u8f93\u51fa\n    return 0;//\u534e\u4e3d\u4e3d\u5730\u7ed3\u675f\n} \n```\n\n\u5176\u5b9e\u7528\u7ebf\u6bb5\u6811\u4e5f\u86ee\u6709\u8da3\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u8bd5\u8bd5\u9e2d\n\n\u521d\u4e8c\u7684 $OIer$ \uff0c\u8bf7\u591a\u5173\u7167",
        "postTime": 1561731028,
        "uid": 53489,
        "name": "CXY07",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "c++\u7684\u4f18\u5148\u961f\u5217\uff0c\u4f46\u53ea\u5f00\u4e86\u4e00\u4e2a\u961f\u5217\uff0c\u5c11\u4e86\u5f88\u591a\u51b3\u7b56\uff0c\u7cbe\u7b80\u5f88\u591a\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\uff01\n\n\u8be6\u7ec6\u89e3\u91ca\u5728\u4ee3\u7801\u4e2d\uff1a\n\n\n\n\n\n\n    \n    \n     \n     \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\nusing namespace std;\npriority_queue<int>q;\nconst int N=100005;\nstruct Ques\n{\n    int x,val;\n}a[N]; \nint gi()\n{\n    int str=0;char ch=getchar();\n    while(ch>'9'||ch<'0')ch=getchar();\n    while(ch>='0' && ch<='9')str=str*10+ch-48,ch=getchar();\n    return str;\n}\nint main()\n{\n    int n=gi();\n    for(int i=1;i<=n;i++)a[i].x=gi();\n    for(int i=1;i<=n;i++)a[i].val=gi();\n    int now=0;long long ans=0;int mx,mxn;//now\u4fdd\u5b58\u7684\u662f \u5f53\u524d\u8fbe\u5230\u7684\u6700\u8fdc\u4f4f\u6237 \u7684\u7f16\u53f7 \n    //\u672c\u9898\u601d\u8def\uff1a\n    //\u6bcf\u4e00\u6b21\u8d70\u90fd\u6709\u4e24\u79cd\u51b3\u7b56\uff1a1.\u5f80\u56de\u8d70\uff0c\u6b64\u65f6\u603b\u75b2\u52b3\u5c31\u4e0d\u9700\u8981\u518d\u52a0\u4e0a\u8def\u7a0b\u7684\u75b2\u52b3\u4e86\u3002\uff08\u56e0\u4e3a\u5728\u8d70\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u8fc7\u7a0b\u4e2d \u5df2\u7ecf\u7ecf\u8fc7\u4e86\u8fd9\u4e2a\u70b9\u4e86\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u987a\u8def\u63a8\u9500\u5b8c\u4e86\uff09\n    //2.\u5f80\u524d\u7ee7\u7eed\u8d70\uff0c \u603b\u75b2\u52b3\u8981\u52a0\u4e0a \u8def\u7a0b\u6240\u8017\u75b2\u52b3\u548c\u63a8\u9500\u7684\u75b2\u52b3\uff1b\n    //\u6bcf\u4e00\u6b21\u53d6\u54ea\u4e2a\u51b3\u7b56 \u5c31\u53d6\u51b3\u4e8e\u54ea\u4e2a\u51b3\u7b56\u6d88\u8017\u7684\u75b2\u52b3\u591a\uff0c\u5373\u53d6\u6700\u5927\u503c\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5806\u4f18\u5316\uff08\u4f18\u5148\u961f\u5217\uff09\uff1b\u4e8e\u662f\u6211\u4eec\u5c31\u628a\u6240\u6709\u51b3\u7b56\u6d88\u8017\u7684\u75b2\u52b3\u4e22\u5165\u5806\u4e2d\uff0c\u7136\u540e\u8fdb\u884c\u6bd4\u8f83\uff1b\n    q.push(0);\n    for(int N=1;N<=n;N++)\n    {\n        mx=q.top();mxn=now;//\u6bcf\u6b21\u53d6\u51fa\u5806\u9996\u5143\u7d20\u6bd4\u8f83\uff1b\u548c\u5411\u524d\u7ee7\u7eed\u8d70\u7684\u51b3\u7b56\u8fdb\u884c\u6bd4\u8f83\uff1b \u53d6\u75b2\u52b3\u503c\u8f83\u5927\u7684 \u5982\u679c\u5411\u524d\u8d70\u7684\u75b2\u52b3\u6ca1\u6709\u5f80\u56de\u8d70\u5927\uff0c\u90a3\u4e48\u5c31\u4e0d\u5982\u5f80\u56de\u8d70\uff1b\n        for(int i=now+1;i<=n;i++)\n        {\n            if(((a[i].x-a[now].x)<<1)+a[i].val>=mx)mx=((a[i].x-a[now].x)<<1)+a[i].val,mxn=i;\n        }\n        if(mxn!=now)//\u5982\u679c\u53ef\u4ee5\u5f80\u524d\u8d70\uff0c\u5c31\u628a\u5f80\u524d\u8d70\u7684\u51b3\u7b56\u4e22\u5165\u5806\u4e2d\uff1b\u4e5f\u53ef\u4ee5\u76f4\u63a5\u52a0\u5728ans\u4e2d \n        q.push(mx); \n        for(int i=now+1;i<=mxn-1;i++)q.push(a[i].val);//\u8def\u9014\u4e0a\u7ecf\u8fc7\u7684\u4f4f\u6237\u53ef\u4ee5\u987a\u4fbf\u90fd\u63a8\u9500\u4e86\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684 \u201c\u5f80\u56de\u8d70\u201d\uff1b \n        now=mxn;//\u66f4\u65b0\u6700\u8fdc\u5230\u8fbe\u7684\u4f4f\u6237\uff1b \n        ans+=q.top();q.pop();//ans\u52a0\u4e0a\u6700\u4f18\u51b3\u7b56\uff1b \n        printf(\"%lld\\n\",ans);\n    }\n    return 0; \n}\n```",
        "postTime": 1486371246,
        "uid": 22873,
        "name": "Hank",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u72ec\u95e8\u601d\u8def\uff01\u94fe\u8868\u52a0\u4f18\u5148\u961f\u5217\uff01\n\n\u8fd9\u9898\u4e00\u671b\uff0c\u8d2a\u5fc3\u662f\u8dd1\u4e0d\u6389\u4e86\uff0c\u4f46\u662f\u6211\u8d2a\u5fc3\u5e76\u4e0d\u597d\uff0c\u6240\u4ee5\u60f3\u5230\u4e86\u4e00\u4e2a\u590d\u6742\u4e00\u4e9b\u4f46\u601d\u8def\u66f4\u4fdd\u7a33\u7684\u505a\u6cd5\n\n\u601d\u8def\uff1a\n\n1  \u56e0\u4e3a\u662f\u79bb\u7ebf\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u5012\u7740\u6c42\uff0c\u5148\u6c42x=n\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u90a3\u6837\u76f4\u63a5\u5c31\u77e5\u9053\u4e86\n\n2  \u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u6bcf\u4e2a\u4f4f\u6237\u5bf9\u75b2\u52b3\u5ea6\u7684\u8d21\u732e\uff0c\u7ef4\u62a4\u6700\u5c0f\u7684\uff0c\u56e0\u4e3ax=i\u7684\u75b2\u52b3\u5ea6\u51cf\u53bb\u6b64\u65f6\u51cf\u53bb\u5bf9\u75b2\u52b3\u5ea6\u8d21\u732e\u6700\u5c0f\u7684\u7528\u6237\u5f53\u7136\u4e3ax=i-1\u7684\u75b2\u52b3\u5ea6\u7684\u6700\u5927\u503c\n\n3 \u9700\u8981\u7528\u94fe\u8868\uff0c\u56e0\u4e3a\u5f53\u67d0\u4e2a\u7528\u6237\u81ea\u5df1\u672c\u8eab\u8ddd\u79bb\u6700\u8fdc\u6216\u6bd4\u81ea\u5df1\u8ddd\u79bb\u8fdc\u4e14\u76f8\u90bb\u7684\u7528\u6237\u8ddd\u79bb\u6700\u8fdc\uff0c\u90a3\u4e48\u5220\u53bb\u8fd9\u4e2a\u7528\u6237\uff0c\u5176\u4ed6\u4e24\u4e2a\u7528\u6237\u5bf9\u75b2\u52b3\u5ea6\u8d21\u732e\u5206\u522b\u66f4\u65b0\uff08\u5f80\u8fd4\u8ddd\u79bb\u53d8\u5316\u4e86\uff09\n\n4 \u4e00\u4e9b\u5c0f\u7684\u7ec6\u8282\uff0c\u4fdd\u8bc1\u6b63\u786e\uff0c\u56e0\u4e3a\u4f18\u5148\u961f\u5217\u91cc\u4f1a\u6709\u4e00\u4e9b\u65e0\u7528\u7684\u7528\u6237\n\n\u4e0b\u9762\u662f\u53ef\u4ee5\u7b80\u5316\u548c\u4f18\u5316\u7684\u4ee3\u7801\uff0c\u4f9b\u53c2\u8003\u601d\u8def\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<map>\nusing namespace std;\n#define re register int\ninline int read(){\n    int x=0,ff=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')ff=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    return x*ff;\n}\nstruct book{\n\tint x,i,b;\n\tbool friend operator <(book xx,book yy){\n\t\treturn xx.x>yy.x;\n\t}\n   //\u91cd\u8f7d\u8fd0\u7b97\n};\npriority_queue<book>dl;\nint a[100005],c[100005],tot[100005];\n//a\u548cc\u662f\u8ddd\u79bb\u548c\u75b2\u52b3\u5ea6\uff0ctot\u8bb0\u5f55\u7b54\u6848\nint lb[100005],to[100005],s,tt[100005];\n//lb\u662f\u524d\u9a71\uff0crb\u662f\u540e\u9a71\uff08\u94fe\u8868\uff09tt\u8868\u793a\u6b64\u65f6\u5bf9i\u7528\u6237\u8ddd\u79bb\u4fee\u6539\u6b21\u6570\uff0c\u4e0ebook\u4e2d\u7684b\u5bf9\u5e94\nbool v[100005],tl[100005];\n//v\u8868\u793a\u6b21\u7528\u6237\u662f\u5426\u5220\u8fc7\uff08\u5176\u5b9e\u53ef\u4ee5\u7701\u7565\uff09tl\u8868\u793a\u6b64\u70b9\u662f\u5426\u4e3a\u6700\u8fdc\u8ddd\u79bb\nint main(){\n\tint n=read(),t;t=n;\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tc[i]=read();lb[i]=i-1;to[i]=i+1;\n\t\tdl.push((book){c[i],i,0});s+=c[i];\n      //\u5165\u961f\uff0c\u5e76\u6c42\u51fax=n\u7684\u75b2\u52b3\u5ea6\uff0c\u7ef4\u62a4\u94fe\u8868\n\t}\n\tc[n]=read();lb[n]=n-1;s+=c[n]+a[n]*2;\n\tdl.push((book){c[n]+(a[n]-a[n-1])*2,n,1});\n    //\u521d\u59cb\u5316\uff0c\u4e0e\u4e0b\u9762\u5165\u961f\u601d\u8def\u7c7b\u4f3c\n\ttt[n]=1;tl[n]=1;\n\twhile(t){\n\t\tif(dl.empty())break;\n\t\ttot[t]=s;\n\t\tbook y=dl.top();dl.pop();\n\t\tif(y.b<tt[y.i])continue;\n     //\u5224\u65ad\u6b64\u7528\u6237\u662f\u5426\u4e3a\u6700\u65b0\u72b6\u6001\n\t\tif(v[y.i])continue;\n\t\tv[y.i]=1;\n     //\u662f\u5426\u5df2\u5220\u53bb\n\t\tt--;\n\t\tto[lb[y.i]]=to[y.i];\n\t\tlb[to[y.i]]=lb[y.i];\n     //\u66f4\u65b0\u94fe\u8868\n\t\ts-=y.x;//\u66f4\u65b0\u75b2\u52b3\u5ea6\n     //\u4e0b\u9762\u662f\u5173\u4e8e\u524d\u9a71\u548c\u540e\u7ee7\u7684\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\n\t\tif(y.b){\n\t\t\tif(lb[y.i]==0)break;tt[lb[y.i]]++;\n\t\t\tdl.push((book){c[lb[y.i]]+2*(a[lb[y.i]]-a[lb[lb[y.i]]]),lb[y.i],tt[lb[y.i]]});\n        //\u7279\u6b8a\u5165\u961f\uff0c\u8868\u793a\u6b64\u7528\u6237\u6210\u4e3a\u6700\u8fdc\u7684\uff0c\u8981\u66f4\u65b0\u5220\u53bb\u6b64\u70b9\u7684\u4ee3\u4ef7\uff0c\u6ce8\u610f\uff0c\u662f\u5f80\u8fd4\n        //\u5176\u4ed6\u5165\u961f\u4e8e\u6b64\u7c7b\u4f3c\n\t\t}\n\t\tif(tl[to[y.i]]){\n\t\t\ttt[to[y.i]]++;\n\t\t\tdl.push((book){c[to[y.i]]+2*(a[to[y.i]]-a[lb[y.i]]),to[y.i],tt[to[y.i]]});\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",tot[i]);\n      //\u8f93\u51fa\uff0c\u6b64\u7a0b\u5e8f\u662f\u79bb\u7ebf\u505a\u7684\n\t}\n\treturn 0;\n}\n\n```\n\u8fd9\u4e2a\u601d\u8def\u5728\u8fd9\u4e48\u591a\u9898\u89e3\u4e2d\u7b2c\u4e00\u65e0\u4e8c\uff0c\u671b\u7ba1\u7406\u5458\u7ed9\u8fc7",
        "postTime": 1559994318,
        "uid": 110574,
        "name": "Eismcs",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u6211\u89c9\u5f97\u6bd4\u8f83\u9ebb\u70e6\u7684\u5c31\u53ea\u6709\u6392\u5e8f\u4e86\n\n\u6392\u5e8f\u5206\u4e3a\u4e86\u4e24\u90e8\u5206\n\n\u7b2c\u4e00\u90e8\u5206:\n\n\u6211\u7528\u4e86\u5192\u6ce1\u6392\u5e8f(\u6211\u8fd8\u662f\u592a\u5f31\u4e86)\n\n> \u6211\u4eec\u9700\u8981\u627e\u4e00\u4e2a\u4f4f\u6237\u4f5c\u4e3a\u8d77\u70b9\n\n> \u6bd4\u8f83\u4e00\u4e0b \u8d70\u8fc7\u53bb\u518d\u8d70\u56de\u6765\u79ef\u7d2f\u7684\u75b2\u52b3\u5ea6 + \u63a8\u9500\u9700\u8981\u7684\u75b2\u52b3\u5ea6\n\n> \u628a\u5927\u7684\u653e\u5728\u524d\u9762\u4f5c\u4e3a\u8d77\u70b9,\u4fdd\u8bc1\u6700\u7d2f\n\n\u7b2c\u4e8c\u90e8\u5206:\n\n\u7528sort\u6392\u4e00\u904d\n\n> sort\u6bd4\u8f83\u4e00\u4e0b\u63a8\u9500\u9700\u8981\u7684\u75b2\u52b3\u5ea6\n\n> \u628a\u75b2\u52b3\u5ea6\u5927\u7684\u653e\u5728\u524d\u9762,\u4f18\u5148\u63a8\u9500\n\n> \u4f46\u662f\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u4e2a\u95ee\u9898\n\n> \u5047\u5982\u6211\u628a\u8ddd\u79bb\u95e8\u53e3\u8ddd\u79bb\u4e3a 3 \u7684\u4f4f\u6237\u4f5c\u4e3a\u8d77\u70b9,\u5f00\u59cb\u63a8\u9500\n\n> sort\u6392\u5b8c\u4ee5\u540e\u53d1\u73b0\u8ddd\u79bb\u95e8\u53e3 5 \u7684\u4f4f\u6237\u8981\u7b2c\u4e00\u63a8\u9500\n\n> \u90a3\u8d77\u70b9\u5c31\u9700\u8981\u6539\u6210 5 ,\u800c\u79ef\u7d2f\u7684\u75b2\u52b3\u5ea6\u5c31\u9700\u8981\u589e\u52a0(5-3)*2\n\n\u4ee3\u7801\u5927\u6982\u5c31\u662f\u8fd9\u6837\u4e86:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define inf 100000\n#define pr printf\n#define sc scanf\n#define ll long long\nusing namespace std;\nstruct S{//\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\n    int a;// \u75b2\u52b3\u5ea6a\n    int s;// \u8ddd\u79bb\u95e8\u53e3\u7684\u8ddd\u79bb\n    int c;//\u7b2c\u51e0\u4e2a\u4f4f\u6237\n}st[inf+1];\nint n;\nll ans;\nbool cmp(S a,S b){return a.a>b.a;}//sort\u7684\u81ea\u5b9a\u4e49\u51fd\u6570,\u6bd4\u8f83 \u75b2\u52b3\u5ea6 a \u7684\u503c,\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\nvoid swap(S &a,S &b){//\u81ea\u5df1\u5199\u4e00\u4e2aswap\u4ea4\u6362\u51fd\u6570,\u66f4\u5feb\u4e00\u70b9\n    S c;\n    c=a;a=b;b=c;\n    return;\n}\nint main(){\n    sc(\"%d\",&n);\n    for(int i=1;i<=n;i++)sc(\"%d\",&st[i].s);\n    for(int i=1;i<=n;i++)sc(\"%d\",&st[i].a),st[i].c=i;\n    //\u8bfb\u5165\n    for(int j=1;j<=n;j++){\n        if(((st[1].s<<1)+st[1].a)<((st[j].s<<1)+st[j].a))swap(st[1],st[j]);\n        //\u5192\u6ce1\u6392\u5e8f,\u628a\u8ddd\u79bb<<1(\u7b49\u4e8e*2)\u518d\u52a0\u4e0a\u63a8\u9500\u9700\u8981\u6d88\u8017\u7684\u75b2\u52b3\u5ea6\u8fdb\u884c\u6392\u5e8f\n        //\u82b1\u8d39\u5927\u7684\u6392\u5728\u524d\u9762\n    }\n    sort(st+2,st+n+1,cmp);//\u5269\u4e0b\u7684\u53ef\u4ee5\u76f4\u63a5\u7528sort\u6392\u5e8f,\u53ea\u8003\u8651\u63a8\u9500\u9700\u8981\u82b1\u8d39\u7684\u75b2\u52b3\u5ea6\n    ans+=(st[1].s<<1);//ans+=\u5192\u6ce1\u6392\u5e8f\u65f6\u5728\u6700\u524d\u9762\u7684\u4f4f\u6237\u8ddd\u79bb\u95e8\u53e3\u7684\u8ddd\u79bb*2\n    for(int i=1;i<=n;i++){\n    //\u52a0\u4e0a\u63a8\u9500\u9700\u8981\u7684\u75b2\u52b3\u5ea6\n        if(st[i].s<=st[1].s)ans+=st[i].a;\n        else {\n        //\u5982\u679c\u8fd9\u4e2a\u70b9\u6bd4\u4e00\u5f00\u59cb\u7684\u90a3\u4e2a\u70b9\u79bb\u95e8\u8fd8\u8981\u8fdc,ans\u9700\u8981\u589e\u52a0\u73b0\u5728\u7684\u70b9\u4e0e\u4e00\u5f00\u59cb\u7684\u70b9\u7684\u5dee*2\n            ans=ans+((st[i].s-st[1].s)<<1);\n\t\t\tst[1].s=st[i].s;//\u5c06\u8d77\u70b9\u8bbe\u4e3a\u65b0\u70b9\n            ans+=st[i].a;\n        }\n        cout<<ans<<'\\n';\n    }\n    return 0;\n}\n```\n\n\n$2018/11/9$ \u66f4\u65b0\u9519\u8bef",
        "postTime": 1535355554,
        "uid": 78456,
        "name": "Chiaro",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u66b4\u529b\u679a\u4e3e60\u5206\uff0c\u5c31\u662f\u8d2a\u5fc3\uff0c\u5927\u5bb6\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e0b\uff0c\u5e94\u8be5\u6bd4\u8f83\u5bb9\u6613\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bc1\u660e\u4e86\u3002\u627e\u5230\u75b2\u52b3\u503c\u6700\u5927\u7684\u70b9\uff0c\u5c31\u5206\u6210\u4e86\u4e24\u6bb5\uff0c\u56e0\u4e3a\u5f80\u524d\u8d70\u548c\u5411\u540e\u8d70\u7684\u75b2\u52b3\u503c\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u8981\u5206\u5f00\u679a\u4e3e\u3002\u56e0\u4e3a\u6570\u636e\u91cf\u592a\u5927\uff08\u6bd5\u7adf\u662fNOIP\u7b2c\u56db\u9898\uff09\uff0c\u6240\u4ee5\u6bcf\u6b21\u5411\u524d\u548c\u5411\u540e\u679a\u4e3e\u7684\u8bdd\u80af\u5b9a\u662f\u8981\u8d85\u9650\u7684\uff08\u56e0\u4e3a\u662fn^2\u7684\u7b97\u6cd5\uff09\u3002\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u8fdb\u884c\u4f18\u5316\u3002\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u4f18\u5316\u67e5\u627e\u7684\u901f\u5ea6\uff0c\u6240\u4ee5\u9700\u8981\u7528\u4e00\u4e9b\u9ad8\u7aef\u7684\u7b97\u6cd5\uff08\u5bf9\u4e8e\u4e00\u4f4dNOIP\u9009\u624b\uff0c\u8fd9\u5df2\u7ecf\u5f88\u9ad8\u7aef\u4e86\uff09\uff0c\u6211\u770b\u5176\u4ed6\u7684\u9898\u89e3\u4f7f\u7528\u7ebf\u6bb5\u6811\u7684\uff0c\u8fd9\u91cc\u5c31\u7528\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u3002\u4f46\u662f\u6811\u72b6\u6570\u7ec4\u8fd9\u4e2a\u4e1c\u897f\u5f88\u96be\u7406\u89e3\uff0c\u81ea\u5df1\u4e5f\u6253\u4e86\u51e0\u4e2a\u661f\u671f\uff0c\u6240\u4ee5\u5927\u5bb6\u53ef\u4ee5\u53bb\u7f51\u4e0a\u770b\u770b\u4e00\u4e9b\u535a\u5ba2\u7684\u4ecb\u7ecd\uff0c\u8fd8\u5305\u62ec\u6700\u57fa\u672c\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u4ee5\u53ca\u7ef4\u62a4\u52a8\u6001\u533a\u95f4\u6700\u503c\u3002\u8fd9\u91cc\u5c31\u662f\u7ef4\u62a4\u533a\u95f4\u6700\u503c\u7684\u3002\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff08Ps\uff1a\u7b2c\u4e00\u6b21\u5199\uff0c\u6ca1\u5176\u4ed6\u4eba\u5199\u7684\u597d\uff0c\u8fd8\u6709\u4e00\u4e9b\u8c03\u8bd5\u7684\u75d5\u8ff9\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7406\u89e3\uff0c\u5927\u5bb6\u5c06\u5c31\u4e00\u4e0b0. 0\uff09\u3002\n\n[/color][codep ]\n\n \n \n \n \n \n \n \n```cpp\nvar\n n,i,j,temp,tempnow1,tempnow2,tot,max1,max2,temp2,m:longint;\n a,s,k,idx,idx2,idxid,idx2id,b:array[-1..100001] of longint;\nFunction lowbit(x:longint):longint;\nbegin\n exit(x and -x);\nend;\nProcedure update(i,x:longint);\nvar\n j:longint;\nbegin\n j:=i;\n while i<=n do\n  begin\n   if idx[i]<x then begin idx[i]:=x; idxid[i]:=j; end;\n   inc(i,lowbit(i));\n  end;\nend;\nProcedure update2(i,x:longint);\nvar\n j:longint;\nbegin\n j:=i;\n while i<=n do\n  begin\n   if idx2[i]<x then begin idx2[i]:=x; idx2id[i]:=j; end;\n   inc(i,lowbit(i));\n  end;\nend;\nFunction query(l,r:longint):longint;\nvar\n ret:longint;\nbegin\n ret:=a[r];\n tempnow1:=idxid[r];\n while l<=r do\n  begin\n   if r-lowbit(r)+1>=l then\n    begin\n     if ret<idx[r] then\n      begin\n       ret:=idx[r];\n       tempnow1:=idxid[r];\n      end;\n      r:=r-lowbit(r);\n    end  else\n    begin\n     if ret<a[r] then\n      begin\n       ret:=a[r];\n       tempnow1:=idxid[r];\n      end;\n      dec(r);\n    end;\n  end;\n exit(ret);\nend;\nFunction query2(l,r:longint):longint;\nvar\n ret:longint;\nbegin\n //ret:=k[r]-2*s[temp];\n //tempnow2:=idx2id[r];\n ret:=0;\n while l<=r do\n  begin\n   if (r-lowbit(r)+1)>=l then\n   begin\n   if ret<idx2[r]-2*s[temp] then begin ret:=idx2[r]-2*s[temp]; tempnow2:=idx2id[r]; end;\n    r:=r-lowbit(r);\n   end else\n   begin\n   if ret<k[r]-2*s[temp] then\n    begin\n     ret:=k[r]-2*s[temp];\n     tempnow2:=idx2id[r];\n    end;\n   dec(r);\n  end;\n end;\n exit(ret);\nend;\nProcedure modify(p:longint);\nvar\n i,j:longint;\nbegin\n i:=p; a[i]:=0;\n while i<=n do\n  begin\n   idx[i]:=a[i]; idxid[i]:=i;\n   j:=1;\n   while j<lowbit(i) do\n    begin\n     if idx[i]<idx[i-j] then begin idx[i]:=idx[i-j]; idxid[i]:=idxid[i-j];   end;\n     j:=j shl 1;\n    end;\n    //writeln('i ',i);\n   inc(i,lowbit(i));\n  end;\nend;\nbegin\n //assign(input,'salesman.in');reset(input);\n //assign(output,'salesman.out');rewrite(output);\n readln(n);\n for i:=1 to n do\n  read(s[i]);\n for i:=1 to n do\n  read(a[i]);\n for i:=1 to n do\n  begin\n   update(i,a[i]);\n   update2(i,s[i]*2+a[i]);\n   k[i]:=s[i]*2+a[i];\n  end;\n j:=1;\n temp:=0;\n while j<=n do\n  begin\n   max1:=query(1,temp);\n   max2:=query2(temp+1,n);\n   //writeln(max1,' ',max2);\n   if max1>max2 then\n    begin\n     inc(tot,max1);\n     temp2:=tempnow1;\n    end\n   else begin\n    inc(tot,max2);\n    temp:=tempnow2;\n    temp2:=tempnow2;\n   end;\n   writeln(tot);\n   //for i:=1 to temp do\n    //write(idx[i],' ');\n    //writeln;\n   modify(temp2);\n   inc(j);\n end;\n //close(input);close(output);\nend.\n[/codep ]\n```",
        "postTime": 1471413933,
        "uid": 21316,
        "name": "UnicoCN",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u9996\u5148\u53ef\u4ee5\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u8d2a\u5fc3\u9898\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u4e0d\u53bb\u8003\u8651\u8d70\u8def\u7684\u75b2\u52b3\u503c\uff0c\u6309\u63a8\u9500\u4ea7\u54c1\u7684\u75b2\u52b3\u503c\u6392\u5e8f\u4e00\u904d\u3002\u7136\u540e\u6211\u4eec\u628a\u63a8\u9500\u524di\u5927\u7684\u7528\u6237\u6240\u7d2f\u79ef\u7684\u75b2\u52b3\u503c\u7b97\u51fa\u6765\u3002\n\n\u4f46\u662f\uff0c\u63a8\u9500\u5458\u53ef\u4ee5\u901a\u8fc7\u591a\u8d70\u4e00\u70b9\uff0c\u867d\u7136\u63a8\u9500\u6240\u7d2f\u79ef\u7684\u75b2\u52b3\u503c\u6bd4\u524d\u9762\u5c0f\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u628a\u8d70\u8def\u7684\u75b2\u52b3\u503c\u4e00\u7b97\uff0c\u53ef\u80fd\u4f1a\u66f4\u5927\u3002\u6240\u4ee5\u6211\u4eec\u628a\u524di-1\u5927\u7684\u75b2\u52b3\u503c\u52a0\u8d77\u6765\uff0c\u5c06\u7b2cX\u5927\u7684\u90a3\u4e00\u5bb6\u820d\u53bb\uff0c\u6362\u6210\u8def\u7a0b\u66f4\u8fdc\u7684\u7528\u6237\u3002\u6bd4\u8f83\u662f\u5426\u6bd4\u7684\u4e0a\u8ff0\u7b2c\u4e00\u79cd\u60c5\u51b5\u5927\u3002\uff08\u8fd9\u91cc\u65e0\u9700\u6362\u66f4\u591a\u8def\u7a0b\u66f4\u8fdc\u7528\u6237\uff0c\u5927\u5bb6\u5e94\u8be5\u80fd\u7406\u89e3\u5427\u3002\u5982\u679c\u6709\u95ee\u9898\u53ef\u4ee5\u518d\u8bc4\u8bba\u533a\u63d0\u51fa\uff0c\u5c0f\u7f16\u4f1a\u89e3\u7b54\u3002\uff09\n\n\u6700\u540e\u5c06\u4e0a\u8ff0\u4e24\u79cd\u6761\u4ef6\u6bd4\u8f83\u4e00\u4e0b\uff0c\u8f93\u51fa\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u5566\uff01\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,f[100002],Walk[100002],sum[100002];\t\t//f[i]\u7b2c\u4e00\u79cd\u60c5\u51b5\tWalk[i]\u7b2c\u4e8c\u79cd\u60c5\u51b5 \nstruct node {\n\tint val,pre;\n} a[100005];\nbool cmp(node a,node b) {\n\treturn a.pre>b.pre;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++) scanf(\"%d\",&a[i].val);\n\tfor(int i=1; i<=n; i++) scanf(\"%d\",&a[i].pre);\n\tsort(a+1,a+1+n,cmp);\n\tfor(int i=1; i<=n; i++) sum[i]=sum[i-1]+a[i].pre;\n\tfor(int i=1; i<=n; i++) f[i]=max(f[i-1],2*a[i].val);\t//\u63a8\u9500\u524di\u5927\u7684\u7528\u6237\u6240\u7d2f\u79ef\u7684\u75b2\u52b3\u503c \n\tfor(int i=n; i>=1; i--)\tWalk[i]=max(Walk[i+1],2*a[i].val+a[i].pre);\t   //\u6362\u66f4\u8fdc\u7528\u6237\u6240\u7d2f\u79ef\u7684\u75b2\u52b3\u503c\n\tfor(int i=1; i<=n; i++) printf(\"%d\\n\",max(sum[i]+f[i],sum[i-1]+Walk[i]));\n\treturn 0;\n}\n```\n",
        "postTime": 1573467039,
        "uid": 117126,
        "name": "swkyccbb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "```cpp\n// \u4e00\u4e2a\u849f\u84bb\u7684\u7b2c\u4e00\u4efd\u9898\u89e3\n// \u4e00\u4e2a\u6781\u4e0d\u50cf\u6b63\u89e3\u7684\u9a97\u5206\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <cstring>\n#define ll long long\nusing namespace std;\nstruct node\n{\n\tll l,n,h; // l \u79bb\u51fa\u53d1\u70b9\u7684\u8def\u7a0b n \u63a8\u9500\u6240\u8017\u7684\u7cbe\u529b\n    // h \u5f80\u8fd4\u603b\u8def\u7a0b\u52a0 \u63a8\u9500\u6240\u8017\u7684\u7cbe\u529b\n}e[100000+10];// \u603b\u6570\u7ec4\nint cmp1(node x,node y)\n{\n\treturn x.h<y.h;// \u5f80\u8fd4\u603b\u8def\u7a0b\u52a0 \u63a8\u9500\u6240\u8017\u7684\u7cbe\u529b\u7684\n    // \u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\n}\nint cmp2(node x,node y)\n{\n\treturn x.n<y.n; //\u63a8\u9500\u6240\u8017\u7684\u7cbe\u529b\n    // \u4ece\u5c0f\u5230\u5927\u7684\u6392\u5e8f\n}\nint main()// \u4e3b\u51fd\u6570\n{\n\tll n,i;// n \u6709\u51e0\u5bb6\u5ba2\u6237\u9700\u8981\u7684\u63a8\u9500\n\tcin>>n;// \u8f93\u5165\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&e[i].l);//\u8f93\u5165\u8def\u7a0b\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&e[i].n);//\u8f93\u5165\u63a8\u9500\u52b3\u7d2f\u5ea6\n\t\te[i].h=2*e[i].l+e[i].n;//e[i].h\u4e3a\u5f80\u8fd4\u6240\u9700~\n        //~\u8def\u7a0b\u4ee5\u53ca\u63a8\u9500\u52b3\u7d2f\u5ea6\n\t}\n\tsort(e+1,e+n+1,cmp1);//\u5feb\u6392\uff0c\u6ce8\u91ca\u89c1\u51fd\u6570\n    //\u6700\u540e\u4e00\u4e2a\u4e3a\u9ed8\u8ba4\u7b2c\u4e00\u4e2a\u53bb\u6700\u7d2f\u7684\u60c5\u51b5\n\tsort(e+1,e+n,cmp2);//\u6240\u4ee5\u4e0d\u6392\u6700\u540e\u7684\u90a3\u4e00\u4e2a\n\tll ans=e[n].h,maxx=e[n].l;//ans \u6700\u540e\u7684\u52b3\u7d2f\u503c\n    // maxx\u5f53\u524d\u9700\u8981\u5f80\u8fd4\u7684\u6700\u5927\u503c\n\tcout<<ans<<endl;\n\tfor(i=n-1;i>=1;i--)\n\t{\n\t\t\n\t\tans+=e[i].n;//\u52a0\u4e0a\u63a8\u9500\u52b3\u7d2f\u503c\n\t\tif(e[i].l>maxx)\n\t\t{\n\t\t\tans+=2*(e[i].l-maxx);\n\t\t\tmaxx=e[i].l;//\u5224\u65ad\u5f80\u8fd4\u8def\u7a0b\u662f\u5426\u6539\u53d8\n\t\t}\n\t\tmaxx=max(e[i].l,maxx);//\u66f4\u6539\n\t\tcout<<ans<<endl;//\u8f93\u51fa\n\t}\n\treturn 0;\n}\n//\u4ee5\u4e0a\u662f\u5168\u90e8\u5185\u5bb9\n// \u8c22\u8c22\u597d\u8bc4\n```",
        "postTime": 1544267595,
        "uid": 106593,
        "name": "DD_Bruyne",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2672)\n\n**\u89e3\u9898\u601d\u8def:**\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u672c\u9898\u6709\u4e00\u4e2a\u7279\u6027,\u5c31\u662f\u5982\u679c\u6211\u4eec\u8d70\u5230\u4e00\u4e2a\u66f4\u8fdc\u7684\u5730\u65b9,\u90a3\u4e48\u8fd1\u7684\u5730\u65b9\u8ddd\u79bb\u539f\u70b9\u7684\u8ddd\u79bb\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565.\n\n\u672c\u9898\u8981\u6c42\u6700\u5927\u7684\u75b2\u52b3\u503c,\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6392\u5e8f,\u7b2c\u4e00\u4e2a\u60f3\u5230\u5806,~~\u53cd\u6b63\u6211\u662f\u5148\u60f3\u5230\u5806.~~\n\n\u7136\u540e\u6211\u4eec\u518d\u770b\u9898\u76ee,\u56e0\u4e3a\u6700\u540e\u75b2\u52b3\u503c\u662f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\u7684:\u8def\u5f84\u75b2\u52b3\u503c\u548c\u63a8\u9500\u75b2\u52b3\u503c.\u53c8\u56e0\u4e3a\u7b2c\u4e00\u884c\u63d0\u5230\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9009\u4e00\u4e2a\u70b9k(\u540e\u9762\u89e3\u91ca),\u5c06\u6bcf\u4e2a\u72b6\u6001\u4e0b\u5206\u4e3a\u4e24\u79cd\u70b9:\n\n1.\u6bd4\u5f53\u524dk\u70b9\u8ddd\u79bb\u539f\u70b9\u66f4\u8fd1,\u8fd9\u4e9b\u70b9\u7684\u75b2\u52b3\u503c\u5176\u5b9e\u53ea\u6709\u63a8\u9500\u75b2\u52b3\u503c,\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u8d70\u5f97\u66f4\u8fdc\u4e86,\u6240\u4ee5\u987a\u9053\u5904\u7406\u8fd9\u4e9b\u5c31\u884c,\u4e0d\u9700\u8981\u8d70\u591a\u4f59\u7684\u8def\n\n2.\u6bd4\u5f53\u524dk\u70b9\u8ddd\u79bb\u539f\u70b9\u66f4\u8fdc,\u8fd9\u4e9b\u70b9\u7684\u75b2\u52b3\u503c\u5176\u5b9e\u5c31\u662f\u63a8\u9500\u75b2\u52b3\u503c+\u4e24\u500d\u8def\u5f84\u75b2\u52b3\u503c-\u4e24\u500dk\u7684\u8def\u5f84\u75b2\u52b3\u503c\n\n![\u4e24\u79cd\u70b9](https://img2018.cnblogs.com/blog/1313616/201906/1313616-20190616225242239-1497611106.png)\n\n\u800c\u5176\u5b9e\u6700\u5927\u75b2\u52b3\u503c\u5c31\u662f\u8fd9\u4e24\u79cd\u70b9\u5404\u81ea\u7684\u6700\u5927\u503c\u7684\u6700\u5927\u503c,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u4e2a\u5927\u6839\u5806\u6765\u5b58,\u53d6\u4e24\u4e2a\u5806\u9876\u7684\u8f83\u5927\u503c\u5373\u53ef.\n\n\u8fd4\u56de\u6765,k\u662f\u4ec0\u4e48\u5462?k\u5c31\u662f\u6211\u4eec\u5f53\u524d\u5df2\u7ecf\u9009\u8fc7\u7684\u70b9\u91cc\u6700\u9760\u53f3\u7684.\n\n\u4e3a\u4ec0\u4e48\u662f\u6700\u9760\u53f3\u7684\u5462?\u56e0\u4e3a\u5bf9\u6211\u4eec\u6765\u8bf4\u53ea\u8981\u67d0\u4e2a\u70b9\u8d70\u4e86,\u5219\u8fd9\u4e2a\u70b9\u5de6\u8fb9\u6240\u6709\u70b9\u6211\u4eec\u90fd\u53ef\u4ee5\u987a\u8def\u7ecf\u8fc7,\u5e76\u4e0d\u9700\u8981\u591a\u4f59\u8def\u5f84\u75b2\u52b3\u503c,\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8bb0\u5f55\u6700\u53f3\u5373\u53ef.\n\n\u4ee3\u7801\u5904\u7406\u7684\u4e00\u4e9b\u7ec6\u8282:\n\n1.\u4e00\u5f00\u59cb\u53f3\u8fb9\u7684\u5806\u5c06\u6240\u6709\u70b9\u653e\u8fdb\u53bb,\u5de6\u8fb9\u5806\u4e3a\u7a7a,\u9009\u4e00\u4e2a\u6700\u5927\u70b9\u4e3a\u7b2c\u4e00\u4e2ak.\n\n2.\u6bcf\u5f53\u6211\u66f4\u65b0\u4e00\u4e2ak,\u6211\u518d\u5c06k\u5de6\u8fb9\u6240\u6709\u7684\u70b9\u63a8\u8fdb\u5de6\u8fb9\u5806.~~\u4e0d\u8fd9\u4e48\u505a\u4e5f\u53ef,\u53ea\u662f\u8fd9\u6837\u4ee3\u7801\u597d\u5199~~\n\n3.\u90a3\u4e48\u6211\u4eec\u66f4\u65b0k\u540e\u600e\u4e48\u5224\u65ad\u53f3\u8fb9\u5806\u90a3\u4e9b\u5728\u5f53\u524dk\u7684\u5de6\u8fb9\u5462?\u56e0\u4e3ak\u662f\u52a8\u6001\u7684,\u6240\u4ee5\u539f\u6765\u5728\u53f3\u8fb9\u7684\u53ef\u80fd\u5230\u53f3\u8fb9\u6211\u4eec\u53ea\u8981\u5224\u65ad\u5f53\u524d\u5143\u7d20\u548ck\u8c01\u5230\u539f\u70b9\u8fd1\u5373\u53ef,\u6240\u4ee5\u6211\u4eec\u8981\u4e0d\u5355\u8981\u8bb0\u5f55\u75b2\u52b3\u503c,\u8fd8\u8981\u8bb0\u5f55\u8def\u5f84\u503c,\u6240\u4ee5\u6211\u4eec\u8981\u5b9a\u4e49\u7ed3\u6784\u4f53\u6765\u6784\u9020\u5806.\n\nAC\u4ee3\u7801:\n ```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<algorithm>\n\nusing namespace std;\n\nstruct node {\n    int v, distance,ans;//\u63a8\u9500\u503c,\u8ddd\u79bb\u503c,\u6700\u7ec8\u503c \n    node() { }\n    bool operator < (const node & p) const {\n        return v + 2 * distance < p.v + 2 * p.distance;//\u6309\u7167\u75b2\u52b3\u503c\u7531\u5927\u5230\u5c0f\u6392\u5e8f \n    }\n}e[100001];\n\nstruct kkk {\n    int _v,_distance;\n}_e[100001];\n\npriority_queue <node> b;//\u53f3\u8fb9\u5806 \npriority_queue <int> a;//\u5de6\u8fb9\u5806 \nint n,A,vv[100001],k,bj,m,n1;\n\nbool cmp(kkk aa,kkk bb) {\n    return aa._distance < bb._distance;\n}\n\nvoid solve() {//\u89e3\u9898\u8fc7\u7a0b \n    while(n1--) {\n        if(b.top().ans - 2 * k >= a.top()) {//\u6211\u5fcd\u4e0d\u4f4f\u8981\u5410\u69fd,\u5c06ans\u6539\u6210v,\u80fd\u5f97\u4e00\u534a\u5206,\u53e6\u4e00\u534aTLE,\u8fd9\u6570\u636e\u592a\u5f31\u4e86,\u5bb3\u5f97\u6211\u4ee5\u4e3a\u81ea\u5df1\u4ee3\u7801\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8 \n            if(b.top().distance <= k) {\n                b.pop();\n                n1++;\n                continue;\n            }\n            m += b.top().ans - 2 * k;\n            k = b.top().distance;\n            b.pop();\n            for(;bj <= n; bj++) \n                if(_e[bj]._distance >= k)\n                    break;\n                else\n                    a.push(_e[bj]._v);\n        }\n        else {\n            m += a.top();\n            a.pop();\n        }\t\n        printf(\"%d\\n\",m);\n    }\n}\n\nvoid firstime() {//\u7b2c\u4e00\u6b21\u5904\u7406,\u4e4b\u540e\u4fbf\u4e0e\u89e3\u9898\u601d\u8def\u4e00\u81f4 \n\tm = b.top().ans;\n    cout << m << endl;\n    n1 = n;\n    n1--;\n    k = b.top().distance;\n    b.pop();\n    for(bj = 1;bj <= n; bj++)\n        if(_e[bj]._distance >= k)\n            break;\n        else\n            a.push(_e[bj]._v);\n} \n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i = 1;i <= n; i++) {\n        scanf(\"%d\",&e[i].distance);\n        _e[i]._distance = e[i].distance;\t\n    }\n    for(int i = 1;i <= n; i++) {\n        scanf(\"%d\",&vv[i]);\n        _e[i]._v = e[i].v = vv[i];\n        e[i].ans = e[i].v + 2 * e[i].distance;\n        b.push(e[i]);\n    }\n    sort(_e+1,_e+1+n,cmp);//\u6309\u7167\u8ddd\u79bb\u539f\u70b9\u8fdc\u8fd1\u6392\u5e8f \n    firstime();\n    solve();\n    return 0;\n}\n\n```\n\n \n\n//NOIP\u666e\u53ca 2015 T4\n\n \n\n \n\n ",
        "postTime": 1560698083,
        "uid": 113356,
        "name": "\u6211\u5c31\u662f\u8fa3\u9e21",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u4e00\u3001\u4e3a\u4f55\u4e0d\u9700\u8981\u52a8\u5f52\n\n\u6570\u636e\u8303\u56f4\u5728\u5341\u4e07\uff0c\u5982\u679c\u7528\u52a8\u5f52\u80af\u5b9a\u4f1a\u7206\u65f6\u7a7a\u3002\u518d\u8bf4\uff0c\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u591a\u4e2a\u503c\uff0c\u4ece\u5212\u5206\u9636\u6bb5\u7684\u89d2\u5ea6\u6765\u8bb2\u5c31\u5f88\u96be\u5212\u5206\u3002\u65e2\u7136\u662f\u6700\u4f18\u5316\u95ee\u9898\uff0c\u4e0d\u6765\u4e00\u53d1\u8d2a\u5fc3\u600e\u80fd\u591f\u6292\u53d1\u5bf9\u52a8\u5f52\u7684\u618e\u6068\u4e4b\u60c5\u5462\uff1f\n\n\u4e8c\u3001\u600e\u4e48\u8d2a\n\n\u4ece\u6837\u4f8b\u53ef\u5f97\uff0c\u63a8\u9500\u4e00\u5bb6\u7684\u75b2\u52b3\u503c\u4e0e\u4e0e\u4e24\u4e2a\u56e0\u7d20\u6709\u5173\uff1a\u8ddd\u79bbSi\uff0c\u79ef\u7d2f\u7684\u75b2\u52b3\u503cAi\n\n\u5177\u4f53\u4e00\u70b9\uff0c\u5f80\u8fd42Si\uff0c\u63a8\u9500Ai\u3002\u6240\u4ee5\u7b2c\u4e00\u6b65\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e0b\u6765\u4e86\uff1a\u5f53X=1\u65f6\uff0csum=max(2Si+Ai);\n\n\u63a5\u4e0b\u6765\uff0cSi\u4e0eAi\u4ecd\u7136\u90fd\u5bf9ans\u6709\u5173\u7cfb\u3002\u5206\u7c7b\u8ba8\u8bba\u5982\u4e0b\uff1a\n\n\u8bb0\u8d70\u7684\u6700\u8fdc\u8ddd\u79bb\u4e3afar\n\n\u2460 \u5982\u679cSi<far\uff0c\u90a3\u5c31\u53ef\u4ee5\u987a\u8def\u63a8\u9500\uff0csum+=A[i];\n\n\u2461 \u5982\u679cSi>far\uff0c\u591a\u8d70(S[i]-far)*2\uff0c\u5373sum+=(S[i]-far)*2;\n\n\u4e09\u3001\u6734\u7d20\u5b9e\u73b0\n\n```cpp\n#include<iostream>\n\nusing namespace std;\n\nbool vis[100005];\nint a[100005],dis[100005],n,mx,mxdis,far=-1,tempa,tempb,sum;\n\nint before(int place)\n{\n    int bmx=-1,bmxdis=-1;\n    for(int i=1;i<=n;i++)\n    {\n        if(!vis[i])\n        {\n            if(a[i]>bmx)\n            {\n                bmx=a[i];\n                bmxdis=i;\n            }\n        }\n    }\n    return bmxdis;\n}\n\nint after(int place)\n{\n    //place+=1;\n    int amx=-1,amxdis=-1;\n    for(int i=place;i<=n;i++)\n    {\n        if(!vis[i])\n        {\n            if(a[i]+(dis[i]-place)*2>amx)\n            {\n                amx=a[i]+(dis[i]-place)*2;\n                amxdis=i;\n            }\n        }\n    }\n    return amxdis;\n}\n\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>dis[i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]+dis[i]*2>mx)\n        {\n            mx=a[i]+dis[i]*2;\n            mxdis=i;\n        }\n    }\n    cout<<mx<<endl;\n    vis[mxdis]=1;\n    far=mxdis;\n    sum+=mx;\n    for(int i=2;i<=n;i++)\n    {\n        tempb=before(far);\n        tempa=after(far);\n        if(a[tempb]>a[tempa]+(dis[tempa]-far)*2)\n        {\n            mxdis=tempb;\n            mx=a[tempb];\n        }\n        else\n        {\n            mxdis=tempa;\n            \n            mx=a[tempa]+(dis[tempa]-far)*2;\n            far=tempa;\n        }\n        vis[mxdis]=1;\n        sum+=mx;\n        cout<<sum<<endl;\n    }\n    return 0;\n}\n```\n\n\u4f46\u662f\u4f30\u8ba1\u4f60\u4e5f\u770b\u5230\u4e86\uff0c\u8fd9\u79cd\u7b97\u6cd5\u5b9e\u5728\u662f\u592a\u6162\u4e86\uff0c\u53ea\u80fd\u5f9760\u5206\uff08\u867d\u7136\u5728\u8003\u573a\u4e0a\u5df2\u7ecf\u8db3\u591f\u4e86\uff09\u3002\n\n \n\n\u56db\u3001\u4f18\u5316\n\n\u5bf9\u4e8edalao\u6765\u8bf4\uff0c\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u7528\u4e0alogn\u6570\u636e\u7ed3\u6784\uff0c\u5982\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u3002\u53ef\u662f\u6211\u4eec\u8fd9\u79cd\u849f\u84bb\uff0c\u60f3\u90fd\u4e0d\u8981\u60f3\u3002\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u6b21\u90fd\u4f1a\u9009\u53d6far\u5de6\u8fb9\u548c\u53f3\u8fb9\u80fd\u83b7\u5f97\u7684\u6700\u5927\u75b2\u52b3\u503c\uff08\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u540c\uff09\u3002\u65e2\u7136\u662f\u6700\u5927\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff08\u5806\uff1f\uff09\u4f18\u5316\u3002\n\n\u4f46\u662f\u4f18\u5148\u961f\u5217\u4e0d\u652f\u6301\u968f\u673a\u5b58\u53d6\u3002\u5982\u679cfar\u6539\u53d8\uff0c\u5c31\u9700\u8981\u91cd\u65b0\u5efa\u7acb\u4f18\u5148\u961f\u5217\u3002\n\n\u6807\u7a0b\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n\nusing namespace std;\n\nstruct before_house{\n    int num,distance,place;\n};\n\nstruct after_house{\n    int num,distance,place;\n};\n\nbool vis[100005];\nint a[100005],dis[100005],n,mx,mxdis,far=-1,tempa,tempb,sum;\npriority_queue<before_house> before;\npriority_queue<after_house> after;\n\nbool operator < (before_house h1,before_house h2)\n{\n    return h1.num<h2.num;\n}\n\nbool operator < (after_house h1,after_house h2)\n{\n    return h1.num+(h1.distance-far)*2<h2.num+(h2.distance-far)*2;\n}\n//\u4e24\u79cd\u4f18\u5148\u961f\u5217\u7684\u6bd4\u8f83\u65b9\u5f0f\u4e0d\u540c\uff0c\u9700\u8981\u8fdb\u884c\u91cd\u8f7d\nvoid make_heap()\n{\n    while(!before.empty())\n    {\n        before.pop();\n    }\n    while(!after.empty())\n    {\n        after.pop();\n    }\n    //\u6e05\u7a7a\n    before_house bh;\n    after_house ah;\n    for(int i=1;i<=far;i++)\n    {\n        if(!vis[i])\n        {\n            bh.num=a[i];\n            bh.distance=dis[i];\n            bh.place=i;\n            before.push(bh);\n        }\n    }\n    for(int i=far;i<=n;i++)\n    {\n        if(!vis[i])\n        {\n            ah.num=a[i];\n            ah.distance=dis[i];\n            ah.place=i;\n            after.push(ah);\n        }\n    }\n}\n\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>dis[i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]+dis[i]*2>mx)\n        {\n            mx=a[i]+dis[i]*2;\n            mxdis=i;\n        }\n    }\n    cout<<mx<<endl;\n    vis[mxdis]=1;\n    far=mxdis;\n    sum+=mx;\n    make_heap();\n    for(int i=2;i<=n;i++)\n    {\n        if(!before.empty())\n        {\n        \ttempb=before.top().place;\n   \t\t}\n        if(!after.empty())\n        {\n        \ttempa=after.top().place;\n   \t\t}\n        if(a[tempb]>a[tempa]+(dis[tempa]-far)*2)\n        {\n            mxdis=tempb;\n            mx=a[tempb];\n            before.pop();\n            vis[mxdis]=1;\n        }\n        else\n        {\n            mxdis=tempa;\n            mx=a[tempa]+(dis[tempa]-far)*2;\n            far=tempa;\n            vis[mxdis]=1;\n            make_heap();\n        }\n        \n        sum+=mx;\n        printf(\"%d\\n\",sum);\n    }\n    return 0;\n}\n```\n\n\u6700\u540e\uff0c\u795d\u5927\u5bb6NOIP2018    RP++\n\n~~\u4e5f\u611f\u8c22dalao\u4eec\u7684\u9898\u89e3\uff08\u539a\u989c\u65e0\u803b~~",
        "postTime": 1541517639,
        "uid": 34372,
        "name": "_wkjzyc",
        "ccfLevel": 0,
        "title": "P2672 \u63a8\u9500\u5458"
    },
    {
        "content": "\u4e00\u770b\u6570\u636e\uff0c\u5c31\u7528\u8d2a\u5fc3\u4e86\uff08\u6b63\u786e\u6027\u5728noip\u5427\u4e0a\u6709\u8bc1\u660e\uff09\n\n\u4f46\u662f\u662fO(n^2)\u7684\n\n\u6211\u7528\u7684\u662f\u4ece\u540e\u5f80\u524d\u5904\u7406\uff0c\u4e8e\u662f\u6bcf\u6b21\u9700\u8981\u627e\u4e0d\u53bb\u8be5\u6237\u635f\u5931\u75b2\u52b3\u503c\u6700\u5c0f\u7684\n\n\u8003\u8651\u5230\u5728\u7ed3\u5c3e\u5904\u4f1a\u5bf9\u635f\u5931\u503c\u9020\u6210\u5f71\u54cd\uff0c\u5c31\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5c0f\u503c\u4e86\n\n\u5177\u4f53\u770b\u4ee3\u7801\n\n```cpp\n\n#include<cstdio>\n\n#define maxn 100000\n#define INF 1000000000\n\nstruct SEG\n{\n    int l,r,lc,rc,minv,minat;\n}seg[maxn*2+10];\n\nstruct NUM\n{\n    int prev,next,num;\n}nums[maxn+10];\n\nint SEG_MAX,hs[maxn+10][2],n,ret[maxn+10],nstart;\n\nvoid update(int pos,int sp,int value)\n{\n    if(seg[sp].l==seg[sp].r)\n    {\n        seg[sp].minv=value;\n        seg[sp].minat=pos;\n        return;\n    }\n    if(pos<=(seg[sp].l+seg[sp].r)/2)update(pos,seg[sp].lc,value);else update(pos,seg[sp].rc,value);\n    if(seg[seg[sp].lc].minv<seg[seg[sp].rc].minv)\n    {\n        seg[sp].minv=seg[seg[sp].lc].minv;\n        seg[sp].minat=seg[seg[sp].lc].minat;\n        //printf(\"minv(l):%d to %d,v=%d,at=%d,[v]=%d\\n\",seg[sp].l,seg[sp].r,seg[sp].minv,seg[sp].minat,nums[seg[sp].minat].num);\n    }\n    else\n    {\n        seg[sp].minv=seg[seg[sp].rc].minv;\n        seg[sp].minat=seg[seg[sp].rc].minat;\n        //printf(\"minv(r):%d to %d,v=%d,at=%d,[v]=%d\\n\",seg[sp].l,seg[sp].r,seg[sp].minv,seg[sp].minat,nums[seg[sp].minat].num);\n    }\n}\n\nint build(int l,int r)\n{\n    int now=SEG_MAX;\n    SEG_MAX++;\n    seg[now].l=l;\n    seg[now].r=r;\n    if(seg[now].l==seg[now].r)return now;\n    seg[now].lc=build(l,(l+r)/2);\n    seg[now].rc=build((l+r)/2+1,r);\n    return now;\n}\n\ninline int ghs(int pos)\n{\n    if(pos>=0)return hs[pos][0];else return 0;\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&hs[i][0]);\n    for(int i=0;i<n;i++)\n        scanf(\"%d\",&hs[i][1]);\n    int s=0;\n    SEG_MAX=0;\n    build(0,n-1);\n    for(int i=0;i<n;i++)\n    {\n        s+=hs[i][1];\n        nums[i].prev=i-1;\n        nums[i].next=i+1;\n        nums[i].num=hs[i][1];\n        update(i,0,nums[i].num);\n    }\n    nums[n-1].num+=(hs[n-1][0]-hs[n-2][0])*2;\n    update(n-1,0,nums[n-1].num);\n    s+=hs[n-1][0]*2;\n    ret[n-1]=s;\n    nstart=0;\n    int rpos=n-1,t;\n    while(rpos>0)\n    {\n        t=seg[0].minat;\n        s-=nums[t].num;\n        //printf(\"%d %d %d\\n\",t,nums[t].num,seg[0].minv);\n        rpos--;\n        ret[rpos]=s;\n        update(t,0,INF);\n        if(nums[t].next==n)\n        {\n            nums[nums[t].prev].next=n;\n            nums[nums[t].prev].num+=(ghs(nums[t].prev)-ghs(nums[nums[t].prev].prev))*2;\n            update(nums[t].prev,0,nums[nums[t].prev].num);\n            //printf(\"a\");\n        }\n        else\n        {\n            if(nums[t].prev==-1)\n            {\n                nums[nums[t].next].prev=-1;\n                nstart=nums[t].next;\n            //printf(\"b\");\n            }\n            else\n            {\n                nums[nums[t].next].prev=nums[t].prev;\n                nums[nums[t].prev].next=nums[t].next;\n            //printf(\"c\");\n            }\n            if(nums[nums[t].next].next==n)nums[nums[t].next].num+=(hs[t][0]-ghs(nums[t].prev))*2;\n            update(nums[t].next,0,nums[nums[t].next].num);\n        }\n    }\n    ret[0]=s;\n    for(int i=0;i<n;i++)\n        printf(\"%d\\n\",ret[i]);\n    return 0;\n}\n\n```",
        "postTime": 1447081053,
        "uid": 5130,
        "name": "mcfx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "### \u65e5\u5e38\u626f\u5e9f\u8bdd\uff1a\n\n\u8bdd\u8bf4\u9898\u89e3\u91cc\u7684\u601d\u8def\u90fd\u5199\u5f97\u771f\u7684\u662f\u5f88\u5948\u65af\u554a\n\n\u4f46\u662f\n\n\u4ee3\u7801\u770b\u4e0d\u61c2\u786e\u5b9e\u8ba9\u4eba\u5934\u75bc\uff08\u53ef\u80fd\u662f\u6211\u592a\u5f31\u4e86\uff09\n\n\u5c31\u50cf\u9898\u89e3\u91cc\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u4ee3\u7801\u7b80\u6d01\u4f46\u662f\u5c5e\u5b9e\u770b\u4e0d\u660e\u767d\n\n\u8d81\u7740\u5b66\u59d0\u521a\u7ed9\u6211\u8bb2\u4e86\u77e5\u8bc6\u8fd8\u70ed\u4e4e\u8d76\u7d27\u7ed9\u6ce5\u840c\u8bf4\u8bf4\u54c8\n\n### \u6b63\u6587\uff1a\n[\u9898\u9762](https://www.luogu.org/problem/P2672)\n\n\u601d\u8def\u5c31\u662f\u8d2a\u5fc3\uff0c\u4f7f\u52b2\u8d2a\u3002\n\n\u5176\u5b9e\u6211\u4e3b\u8981\u662f\u6765\u8865\u5145\u4e00\u4e0b\u5177\u4f53\u7684\u4ee3\u7801\u89e3\u91ca\n\n```cpp\nfor (int i = n; i >= 1; i--)\nmaxsum[i] = max (maxsum[i + 1], 2 * e[i].s + e[i].v);\n```\n\n \u8fd9\u4e2amaxsum\u6570\u7ec4\u5b58\u50a8\u4e86v\u7531\u5927\u5230\u5c0f\uff0c \u6ce8\u610f\u662f\u8981\u5012\u7740\u5b58\u50a8\u7684\u3002\u5173\u4e8e\u4e3a\u4ec0\u4e48V\u8981\u4ece\u5927\u5230\u5c0f\u56e0\u4e3a\u6211\u4eec\u6709\u4e00\u4e2a\u524d\u7f00\u548c\u554a\uff0c \u55ef\uff1f\u524d\u7f00\u548c\uff1f\u5bf9\u7684\uff01\u770b\n \u540e\u8fb9\u5c31\u61c2\u5566\uff01\n \n \n ```cpp\nfor (int i = 1; i <= n; i++) \nsumv[i] = sumv[i - 1] + e[i].v;\n```\n\n\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u524d\u7f00\u548c\u6570\u7ec4\uff0c \u8fd9\u4e2a\u6570\u7ec4\u662f\u5b58\u50a8\u4e86\u6211\u4eec\u4ece\u8d77\u70b9\u8d70\u5230i\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\u6240\u6709\u7684\u7ecf\u8fc7\u8fc7\u7684\u4eba\u5bb6\u63a8\u9500\u6240\u9700\u8981\u7684\u75b2\u52b3\u503c\n\n```cpp\nfor (int i = 1; i <= n; i++) \nmaxs[i] = max (maxs[i - 1], e[i].s);\n```\n\n\u800c\u8fd9\u4e2a\u6570\u7ec4\u5219\u5b58\u50a8\u4e86\u5f53\u524d\u8d70\u5230\u7684\u6700\u8fdc\u8ddd\u79bb\n\n```cpp\nfor (int i = 1; i <= n; i++)\nprintf (\"%d\\n\", max (sumv[i - 1] + maxsum[i], sumv[i] + 2 * maxs [i]));\n```\n\n\u8fd9\u4e24\u884c\u53ef\u4ee5\u8bf4\u662f\u6211\u6700\u96be\u7406\u89e3\u7684\u5730\u65b9\u4e86\n\n\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff0c \u7b2c\u4e00\u79cd\u60c5\u51b5\u524di - 1\u4e2a\u4f4d\u7f6e\u6240\u6709\u62dc\u8bbf\u8fc7\u7684\u75b2\u52b3\u503c\u518d\u52a0\u4e0a\u6700\u5927\u7684V\uff0c \u7b2c\u4e8c\u79cd\u60c5\u51b5\u5219\u4e3a\u6240\u6709\u7684v\u518d\u52a0\u4e0a\u6700\u8fdc\u7684\u8ddd\u79bb\u7684\u4e24\u500d\n\n\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8fd9\u4e24\u79cd\u60c5\u51b5\uff0c \u56e0\u4e3a\u6700\u5927\u7684v\u53ef\u80fd\u4e0e\u6700\u8fdc\u7684\u8ddd\u79bb\u4e0d\u540c\uff08\u6211\u7684\u8bed\u6587\u5e38\u5e74\u57ab\u5e95\uff09\uff0c \u81ea\u5df1\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u53ef\u80fd\u4f1a\u66f4\u76f4\u89c2\u3002\n\n\u5e72\u51c0\u4e00\u70b9\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int N = 100010;\nint n, maxsum[N], maxs[N], sumv[N];\nstruct node {\n\tint s, v;\n}e[N];\nbool cmp (node x, node y) {\n\treturn x.v > y.v;\n}\nint main () {\n\tscanf (\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) \n\t\tscanf (\"%d\", &e[i].s);\n\tfor (int i = 1; i <= n; i++)\t\n\t\tscanf (\"%d\", &e[i].v);\n\tsort (e + 1, e + 1 + n, cmp);\n\tfor (int i = n; i >= 1; i--)\n\t\tmaxsum[i] = max (maxsum[i + 1], 2 * e[i].s + e[i].v);\n\tfor (int i = 1; i <= n; i++) \n\t\tmaxs[i] = max (maxs[i - 1], e[i].s);\n\tfor (int i = 1; i <= n; i++) \n\t\tsumv[i] = sumv[i - 1] + e[i].v;\n\tfor (int i = 1; i <= n; i++)\n\t\tprintf (\"%d\\n\", max (sumv[i - 1] + maxsum[i], sumv[i] + 2 * maxs [i]));\n\treturn 0;\n}\n```\n\n\u8c22\u8c22\u6536\u770b\uff0c \u795d\u8eab\u4f53\u5065\u5eb7\uff01\n\n",
        "postTime": 1564654063,
        "uid": 147646,
        "name": "lzpclxf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "# P2674\n## \u3000\u3000Description :  \n\n\u3000\u3000\u3000\u3000\u3000\u3000\u7ebf\u6027\u7ed3\u6784\u4e2d\uff0c\u6709N\u4e2a\u70b9\uff0c\u7ed9\u5b9a\u6bcf\u4e2a\u70b9\u4e0e\u539f\u70b9\u7684\u8fb9\u6743\u53ca\u4ef7\u503c\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u6c42\u89e3\u5f53\u9009\u62e9X\u4e2a\u70b9\u65f6\u6700\u5927\u7684\u8fb9\u6743\u4e0e\u4ef7\u503c\u7684\u548c\n\n\u3000\u3000\u3000\u3000\u3000\u3000~~\u5bf9\u4e8e\u4e00\u4e2a\u849f\u84bb\u6765\u8bf4\uff0c\u7ebf\u6bb5\u6811\u4ec0\u4e48\u7684\u5b9e\u5728\u662f\u592a\u96be\u4e86~~\n\n### \u3000\u3000\u3000\u4e8e\u662f\u6211\u4eec\u8003\u8651 **\u8d2a\u5fc3** \n\n> \u3000\u3000\u3000\u3000\u30001.\u7531\u4e8e\u662f\u7ebf\u6027\u7ed3\u6784\uff0c\u6240\u4ee5\u4e0d\u662f\u56fe\u8bba\u6bd2\u7624\n\n> \u3000\u3000\u3000\u3000\u30002.\u6bcf\u4e2a\u70b9\u7684\u603b\u4ef7\u503c\u5373 \u8fb9\u6743*2+\u539f\u4ef7\u503c\n\n> \u3000\u3000\u3000\u3000\u30003.\u56e0\u6b64\u53ef\u4ee5O(n)\u8dd1\u4e00\u904d\uff0c\u603c\u4e00\u4e2amaxn\u51fa\u6765\n\n> \u3000\u3000\u3000\u3000\u30004.\u6240\u4ee5\u5728maxn\u7ed3\u675f\u4e00\u5b9a\u6bd4\u5728\u5176\u4ed6\u70b9\u7ed3\u675f\u8981\u4f18\n\n> \u3000\u3000\u3000\u3000\u3000~~5.\u6bd4\u5176\u4ed6\u6240\u6709\u89e3\u90fd\u4f18\u7684\u89e3\u5c31\u662f\u6700\u4f18\u89e3~~\n\n> \u3000\u3000\u3000\u3000\u30005.\u5982\u679c\u8d85\u8fc7MAXN\u4e86\u600e\u4e48\u529e\uff1f\n\n> \u3000\u3000\u3000\u3000\u30006.\u5f80\u4e0b\u627e\u554a\uff0c\u628amaxn\u53f3\u8fb9\u7684\u6700\u4f18maxn'\u627e\u51fa\u6765,\u52a0\u4e0a\u5373\u53ef\n\n> \u3000\u3000\u3000\u3000\u30007.\u5bf9\u4e8e\u627emaxn\u4ec0\u4e48\u7684\uff0c\u4e22\u8fdb\u5927\u6839\u5806\u5c31\u597d\u4e86\n\n> ## Code :\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,s[100010],v[100010],sum,now;\npriority_queue<int> p;\ninline int read(){\n\u3000\u3000int res=0,f=1;char ch=getchar();\n\u3000\u3000while(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();}\n\u3000\u3000while(ch>='0'&&ch<='9')res=res*10+ch-'0',ch=getchar();\n\u3000\u3000return res*f;\n}\ninline void write(int x){\n\u3000\u3000if(x<0){putchar('-');write(-x);return;}\n\u3000\u3000if(x/10) write(x/10);putchar(x%10+'0');\n}\nint main(){\n\u3000\u3000n=read();now=n;\n\u3000\u3000for(register int i=1;i<=n;i++)s[i]=read();\n\u3000\u3000for(register int i=1;i<=n;i++)v[i]=read();\n\u3000\u3000for(register int i=n-1;i>=1;i--)\n\u3000\u3000if(2*(s[now]-s[i])<v[i]-v[now]){now=i;}\n\u3000\u3000for(register int i=1;i<now;i++)p.push(v[i]);\n\u3000\u3000write(v[now]+s[now]*2);puts(\"\");sum=v[now];\n\u3000\u3000for(register int i=2;i<=n;i++){\n\t\u3000\u3000if(now>=i){ \t\t\t\t\t\t\t\t\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000sum+=p.top(),p.pop(),write(s[now]*2+sum),puts(\"\");\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000continue;\n\u3000\u3000\u3000\u3000}\n\u3000\u3000\u3000\u3000sum+=v[i],write(s[i]*2+sum),puts(\"\");\n\u3000\u3000\u3000\u3000continue;\n\u3000\u3000}\n\u3000\u3000return 0;\n}\n```",
        "postTime": 1541637785,
        "uid": 52865,
        "name": "\u56db\u6c27\u5316\u4e8c\u78f7",
        "ccfLevel": 0,
        "title": "P2672"
    },
    {
        "content": "# \u8d2a\u5fc3+\u6a21\u62df\n\u7531\u4e8e\u770b\u4e0d\u61c2\u5927\u4f6c\u5404\u79cd\u9ad8\u7ea7\u7b97\u6cd5\uff0c\u4e8e\u662f\u5c31\u81ea\u5df1\u624b\u52a8 \u8d2a\u5fc3+\u6a21\u62df\u3002\u8c8c\u4f3c\u5c31\u778e\u641e\u51fa\u6765\u3002\u3002\u3002\u8fd8\u597d\u601d\u8def\u7b80\u5355\uff0c\u5b9e\u73b0\u8d77\u6765\u4e5f\u5bb9\u6613\uff0c\u548c\u6211\u4e00\u6837\u7684\u849f\u84bb\u53ef\u4ee5\u770b\u770b\u3002\n\n##  \u601d\u8def\n\u9996\u5148\u8fd9\u4e2a\u9898\u76ee\u65e0\u975e\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u662f\u5728\u6211\u5df2\u7ecf\u8dd1\u8fc7\u4e86\u7684\u6700\u5927\u7684\u70b9\u7684\u524d\u9762\u627e\uff0c\u53e6\u5916\u4e00\u79cd\u5c31\u662f\u5f80\u540e\u9762\u627e\u3002\n\n\u6bd4\u5982\u770b\u6837\u4f8b\n\n5\n\n1 2 2 4 5\n\n5 4 3 4 1\n\n\u6211\u7b2c\u4e00\u4e2a\u9009\u7b2c\u56db\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u5f97\u51fa\u6765\uff0c\u4e24\u6b21\u8ddd\u79bb\u52a0\u6743\u503c\n\u7136\u540e\u5c31\u4e24\u8fb9\u770b  \u627e1~3\u91cc\u9762\u6700\u5927\u7684\u70b9\uff0c\u548c\u627e5~n\u6700\u5927\u7684\u70b9\u6bd4\u8f83\u6700\u5927\u503c\uff0c\u9009\u62e9\u3002\n\u975e\u5e38\u7b80\u5355\u7684\u8d2a\u5fc3\u3002\n\n\u600e\u4e48\u5b9e\u73b0\u5462\uff1f  \n\u5206\u7ec4\u6392\u5e8f\uff0c\u4e24\u4e2a\u6570\u7ec4,\u4e00\u4e2a\u662f\u6309\u71672*s[i]+a[i] \u6392\u5e8f\uff0c\u53e6\u5916\u4e00\u4e2a\u662fa[i]\u6392\u5e8f\n\u7136\u540e\u5c31\u53ef\u4ee5\u6a21\u62df\u6bd4\u8f83\u4e86\uff01\n\u8fd8\u6709\u4e0d\u61c2\u7684\u770b\u4ee3\u7801\uff01\n\n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int M=100010;\nint p1[M],p2[M];//\u6392\u5e8f\u540e\u5404\u4e2a\u70b9\u7684\u7f16\u53f7\nint s[M],a[M];//\u8bfb\u5165\u7684\u6570\u636e\nint t1[M],t2[M];//\u6392\u5e8f\u540e\u5404\u4e2a\u70b9\u7684\u503c\nint vis[M];//\u540e\u9762\u6bd4\u8f83\u7684\u65f6\u5019\u68c0\u67e5\u54ea\u4e9b\u70b9\u88ab\u7528\u8fc7\u4e86\nvoid qsort1(int l,int r){//2*s[i]+a[i]\u503c\u6392\u5e8f\n\tif(l>=r)return;\n\tint i=l,j=r,mid=t1[(i+j)/2];\n\twhile(i<=j){\n\t\twhile(t1[i]>mid)i++;while(mid>t1[j])j--;\n\t\tif(i<=j){swap(t1[i],t1[j]);swap(p1[i],p1[j]);i++;j--;}\n\t}\n\tqsort1(i,r);qsort1(l,j);\n}\nvoid qsort2(int l,int r){//a[i]\u503c\u6392\u5e8f\n\tif(l>=r)return;\n\tint i=l,j=r,mid=t2[(i+j)/2];\n\twhile(i<=j){\n\t\twhile(t2[i]>mid)i++;while(mid>t2[j])j--;\n\t\tif(i<=j){swap(t2[i],t2[j]);swap(p2[i],p2[j]);i++;j--;}\n\t}\n\tqsort2(i,r);qsort2(l,j);\n}\nint main(){\n\tint n,last,sum,d1=2,d2=1;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&s[i]),p1[i]=p2[i]=i;\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),t1[i]=s[i]+s[i]+a[i],t2[i]=a[i];\n\tqsort1(1,n);qsort2(1,n);\n\tlast=p1[1];sum=t1[1];vis[p1[1]]=1;//\u7b2c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u6765\n\tprintf(\"%d\\n\",sum);\n\tfor(int i=1;i<n;i++){\n\t\twhile(last>p1[d1]&&d1<=n)d1++;//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u8def\u7a0b\u6bd4\u6211\u5f53\u524d\u6700\u5927\u7684\u8fd8\u5c0f\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u4e86\n\t\twhile(vis[p1[d1]]&&d1<=n)d1++;//\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u7b97\u8fc7\u4e86\u4e5f\u53ef\u4ee5\u8c03\u8fc7\u4e86\n\t\twhile(vis[p2[d2]]&&d2<=n)d2++;//\u540c\u4e0a\n\t\tif(t1[d1]-(s[last]+s[last])>t2[d2]){//\u91cd\u70b9\uff01 \u6bd4\u8f83\u5927\u5c0f\n\t\t\tsum-=s[last]+s[last];\n\t\t\tsum+=t1[d1];\n\t\t\tlast=p1[d1];\n\t\t\tvis[last]=1;\n\t\t}\n\t\telse {\n\t\t\tsum+=t2[d2];\n\t\t\tvis[p2[d2]]=1;\n\t\t}\n\t\tprintf(\"%d\\n\",sum);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1532847177,
        "uid": 18063,
        "name": "XiaQiang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u6211\u8fd9\u4e2a\u849f\u84bb\u90fd\u4e0d\u77e5\u9053\u6811\u72b6\u6570\u7ec4\u662f\u4ec0\u4e48\u9b3c\u2026\u2026\u8bdd\u8bf4\u4e3a\u4ec0\u4e48\u8981\u7528\u6811\u72b6\u6570\u7ec4\uff1f\uff1f\uff1f\n\n\u601d\u8def\u5982\u4e0b\uff1a\n\n\u8fd9\u9053\u9898\u6211\u7528\u7684\u662f\u8d2a\u5fc3\u7684\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u75b2\u52b3\u503c\u90fd\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\uff0c\u7b97\u6cd5\u7684\u6b65\u9aa4\u5f88\u663e\u7136\u5373\u4e3a\uff1a\u4e00\u5f00\u59cb\u5b9a\u4e49sum=0\uff0c\u6bcf\u4e00\u6b65\u90fd\u8ba1\u7b97\u51fa\u80fd\u591f\u589e\u52a0\u7684\u6700\u5927\u7684\u75b2\u52b3\u503cmaxn\uff0c\u5c06sum+=maxn\uff0c\u8f93\u51fa\uff0c\u5e76\u5c06\u8fd9\u4e2a\u70b9\u4ece\u8868\u4e2d\u5220\u9664\u3002\n\n\u90a3\u4e48\u6700\u5927\u7684\u5229\u76camaxn\u5982\u4f55\u8ba1\u7b97\u5462\uff1f\n\n\u5f88\u663e\u7136\uff0c\u4e00\u5f00\u59cb\u7684maxn\u5373\u4e3a\u8ddd\u79bb\uff08a\u6570\u7ec4\uff09\\*2+\u63a8\u9500\u7684\u75b2\u52b3\u503c\uff08j\uff09\u3002\u4f46\u63a5\u4e0b\u6765\u516c\u5f0f\u5373\u4e0d\u540c\u4e86\u3002\n\n\u6211\u4eec\u5c06\u5f53\u524d\u88ab\u9009\u4e2d\u7684\u70b9\u7684\u8ddd\u79bb\u79f0\u4e3athis\uff0c\u4e4b\u524d\u7684\u6700\u5927\u70b9\u7684\u8ddd\u79bb\u79f0\u4e3aprev\u3002\u90a3\u4e48\u5c31\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1.this>prev\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u5230\u8fbe\u7684\u662f\u4e00\u4e2a\u65b0\u7684\uff0c\u8ddd\u79bb\u6bd4\u4e4b\u524d\u66f4\u8fdc\u7684\u70b9\uff0c\u90a3\u4e48\u65b0\u589e\u7684\u75b2\u52b3\u503c\u5373\u4e3a\uff08this-prev\uff09\\*2+j\uff1b\n\n2.this<prev\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u70b9\u7684\u8ddd\u79bb\u5305\u542b\u5728\u4e4b\u524d\u8d70\u8fc7\u7684\u8ddd\u79bb\u5185\uff0c\u90a3\u4e48\u65b0\u589e\u7684\u75b2\u52b3\u503c\u5373\u4e3aj\u3002\n\n\u6700\u540e\u8fd8\u6709\u51e0\u70b9\u9700\u8981\u8003\u8651\uff1a\n\n1.\u8003\u8651\u5230\u53ef\u80fd\u4f1a\u6709\u51e0\u6237\u4eba\u5bb6\u7684\u63a8\u9500\u75b2\u52b3\u503c\u76f8\u540c\uff0c\u5219\u6211\u4eec\u9700\u8981\u989d\u5916\u5f00\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u50a8\u3002\u800c\u5728\u5220\u9664\u70b9\u65f6\u53ea\u9700\u5c06\u8fd9\u4e2a\u6570\u7ec4\u7684\u503c\u81ea\u51cf\u5373\u53ef\uff1b\n\n2.\u6211\u4eec\u6bcf\u6b21\u641c\u7d22\u65f6\u90fd\u8981\u4fdd\u5b58\u4e0bmaxn\u6240\u5bf9\u5e94\u7684\u75b2\u52b3\u503c\u548c\u6700\u5927\u8ddd\u79bb\uff1b\n\n3.\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u6839\u636e\u63a8\u9500\u75b2\u52b3\u503c\u6765\u5b58\u50a8\u4eba\u5bb6\u7684\u6570\u7ec4\u3002\n\n\n```cpp\n#include <iostream>\nusing namespace std;\nint n,maxn,sum,a[100001],b[100001],c[100001][101],t,p=0,x,y;\nint main()\n{\n    cin>>n;\n    for (int i=1;i<=n;i++) cin>>a[i];\n    for (int i=1;i<=n;i++)\n    {\n        cin>>t;\n        b[t]++;//\u5b58\u50a8\u6bcf\u79cd\u75b2\u52b3\u503c\u6709\u51e0\u6237\u4eba\u5bb6\n        c[t][b[t]]=i; //\u6839\u636e\u75b2\u52b3\u503c\u627e\u6237 \n    }\n    for (int i=1;i<=n;i++)\n    {\n        maxn=0;x=0;y=0;\n        for (int j=0;j<=999;j++)\n          if (b[j]>0)\n            if (a[c[j][b[j]]]>p&&(a[c[j][b[j]]]-p)*2+j>maxn)//\u5982\u679c\u5f53\u524d\u70b9\u5927\u4e8e\u4e4b\u524d\u6700\u5927\u70b9\n            {\n                maxn=(a[c[j][b[j]]]-p)*2+j;//\u8ba1\u7b97\u589e\u52a0\u7684\u75b2\u52b3\u503c\n                x=j;  \n                y=a[c[j][b[j]]]; \n            }\n            else if (a[c[j][b[j]]]<=p&&j>maxn)//\u5c0f\u4e8e\n            {\n                maxn=x=j;  \n                y=p;\n            }\n            p=y;b[x]--;//\u8bb0\u5f55\u6700\u5927\u70b9\uff0c\u5220\u9664\u5f53\u524d\u70b9\n            sum+=maxn;//\u7d2f\u52a0\n            cout<<sum<<endl;//\u8f93\u51fa\n    }\n    return 0;\n}\n```",
        "postTime": 1475636478,
        "uid": 14380,
        "name": "24680esz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\u9898\u76ee\u5927\u610f\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$X$\uff0c\u5728\u5e8f\u5217\u4e2d\u9009\u51fa$X$\u4e2a\u6570\uff0c\u4f7f\u5f97$S_x \\times 2 + \\sum_{i=1}^{i\\leq X}A_i$\u7684\u503c\u6700\u5927\u3002\n~~\uff08\u8d8a\u89e3\u91ca\u8d8a\u590d\u6742\u3002\u3002\u3002\uff09~~\n\n\u7531\u4e8e$X$\u7684\u5355\u8c03\u9012\u589e\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651$X$\u6bcf\u9012\u589e\u4e00\u6b21\uff0c\u7528**\u8d2a\u5fc3\u7b56\u7565**\u7ef4\u62a4\u4e00\u6b21\u7b54\u6848\u3002\n\u5148\u4ece$X=1$\u7684\u60c5\u51b5\u5165\u624b\uff1a\u5f88\u663e\u7136\uff0c\u7b54\u6848\u662f$\\max_{1\\leq i \\leq n}(S_i\\times2+A_i)$\uff0c\u679a\u4e3e\u4e00\u904d\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\u7d27\u63a5\u7740\uff0c\u5206**\u4e24\u79cd\u60c5\u51b5**\u8ba8\u8bba\uff1a\n1. **\u5f80\u5df7\u5b50\u6df1\u5904\u63a8\u9500**\u5373\u5411\u6bd4\u5c45\u4f4f\u5728\u5f53\u524d\u6700\u8fdc\u5904\u4eba\u5bb6**\u4f4f\u5f97\u66f4\u8fdc\u7684\u4eba\u5bb6**\u63a8\u9500\n2. **\u7ed9\u6cbf\u8def\u7684\u4eba\u5bb6\u63a8\u9500**\u5373\u5411\u6bd4\u5c45\u4f4f\u5728\u5f53\u524d\u6700\u8fdc\u5904\u4eba\u5bb6**\u4f4f\u5f97\u66f4\u8fd1\u7684\u4eba\u5bb6**\u63a8\u9500\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20191115213919494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JlbGwwNDEwMzA=,size_16,color_FFFFFF,t_70)\n---\n### \u5f80\u5df7\u5b50\u6df1\u5904\u63a8\u9500\n\u8bbe\u5f53\u524d\u6700\u6df1\u5904\u4eba\u5bb6\u5728$pos$\u5904\uff0c\u518d\u8bbe$sum$\u8868\u793a**\u5f53\u524d\u63a8\u9500\u75b2\u52b3\u503c**\uff0c\u8bbe$dis$\u8868\u793a**\u5f53\u524d\u8def\u7a0b\u75b2\u52b3\u503c**\n\u4ece$pos+1$\u5f00\u59cb\u679a\u4e3e\uff0c\u7b97\u51fa\u5df7\u5b50\u6df1\u5904\u7684\u8def\u7a0b\u6700\u5927\u75b2\u52b3\u503c\n$$maxdis=\\max_{pos+1\\leq j\\leq n}(A_j\\times2)$$\n\u4e14\u8bb0\u5f55\u90a3\u4e00\u6237\u4eba\u5bb6$nextpos$\n\u5f80\u5df7\u5b50\u6df1\u5904\u63a8\u9500\u7684\u603b\u6700\u5927\u75b2\u52b3\u503c\u5373\u4e3a$sum2=maxdis+sum+B_{nextpos}$\n### \u7ed9\u6cbf\u8def\u7684\u4eba\u5bb6\u63a8\u9500\n\u4ece$1$\u5f00\u59cb\u679a\u4e3e\uff0c\u5f97\u51fa$pos$\u4e4b\u524d\u7684\u4eba\u5bb6\u7684**\u6700\u5927\u63a8\u9500\u75b2\u52b3\u503c**\uff0c\u5373\n$$maxn=\\max_{1\\leq j < pos}B_j$$\n\u7ed9\u6cbf\u8def\u4eba\u5bb6\u63a8\u9500\u7684\u603b\u6700\u5927\u75b2\u52b3\u503c\u5373\u4e3a$sum1=dis+sum+maxn$\n### \u524d\u540e\u5bf9\u6bd4\n\u6bd4\u8f83$sum1$\u548c$sum2$\n\u5982\u679c$sum1<sum2$\u90a3\u4e48\u66f4\u65b0$sum=sum+maxn$\n\u5982\u679c$sum1>sum2$\u90a3\u4e48\u66f4\u65b0$dis=maxdis,sum=sum+B_{nextpos},pos=nextpos$\n\n---\n### \u66f4\u5feb\u7684\u65b9\u6cd5\n\u7531\u4e8e\u5728\u8ba1\u7b97\u4e2d\u51fa\u73b0\u4e86\u5f62\u5982\n$$\\max_{left\\leq i \\leq right}X_i$$\n\u7684\u5f0f\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7528**\u5355\u8c03\u961f\u5217\u4f18\u5316**\n\n~~\u603b\u4f53\u601d\u8def\u5230\u6b64\u7ed3\u675f\u3002\u3002\u3002\u4ee3\u7801\u7279\u522b\u957f\u3002\u3002\u3002~~ \n\n---\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n\nusing namespace std;\nint n,s[100005],a[100005],maxn,pos,ansdis,ans;\nint main()\n{\n\tpriority_queue< int , vector<int > > q;//\u5feb\u901f\u83b7\u53d6\u6700\u5927\u503c \n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&s[i]);\n\t\ts[i]*=2;//\u6765\u56de\u8def\u7a0b \n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(maxn<s[i]+a[i])\n\t\t{\n\t\t\tmaxn=s[i]+a[i];\n\t\t\tpos=i;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",maxn);//\u83b7\u53d6X=1\u7684\u7b54\u6848 \n\tansdis=s[pos];ans=a[pos];//\u7528\u4e8e\u7d2f\u52a0\u75b2\u52b3\u503c\uff0c\u65b9\u4fbf\u540e\u9762\u505a\u8d2a\u5fc3\u5bf9\u6bd4 \n\tfor(int i=1;i<pos;i++)//\u5f53\u524d\u6700\u4f73\u7b54\u6848 \u524d\u9762\u7684 \u6700\u5927\u75b2\u52b3\u503c \n\t\tq.push(a[i]);\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tint tmp=q.top();int tmppos=0;\n\t\tmaxn=0;\n\t\tfor(int j=pos+1;j<=n;j++)\n\t\t\tif(s[j]+a[j]>maxn)\n\t\t\t{\n\t\t\t\ttmppos=j;\n\t\t\t\tmaxn=s[j]+a[j];//\u8bb0\u5f55\u5f53\u524d\u6700\u4f73\u7b54\u6848 \u540e\u9762\u7684 \u6700\u5927\u75b2\u52b3\u503c \n\t\t\t} \n\t\tif(ansdis+ans+tmp<maxn+ans)//\u524d\u540e\u5bf9\u6bd4\uff0c\u51b3\u5b9a\u662f\u5f80\u5df7\u5b50\u91cc\u6df1\u5904\u8d70\n\t\t{\n\t\t\tansdis=s[tmppos];//\u7d2f\u52a0\u7684\u7528\u5904 \n\t\t\tans+=a[tmppos];//\u7d2f\u52a0\u7684\u7528\u5904\n\t\t\tq.pop();\n\t\t\tfor(int j=pos+1;j<tmppos;j++) q.push(a[j]);//\u8bb0\u5f55\u5f53\u524d\u6700\u4f73\u7b54\u6848 \u524d\u9762\u7684 \u6700\u5927\u503c \n\t\t\tpos=tmppos;//\u66f4\u65b0\u6700\u4f73\u7b54\u6848 \n\t\t}\n\t\telse//\u6216\u662f\u7ed9\u6cbf\u8def\u4eba\u5bb6\u63a8\u9500 \n\t\t{\n\t\t\tans+=tmp;//\u7d2f\u52a0\u7684\u7528\u5904 \n\t\t\tq.pop();//\u7528\u8fc7\u4e86\u5c31\u51fa\u961f \n\t\t}\n\t\tprintf(\"%d\\n\",ans+ansdis);//\u8f93\u51fa\u7b54\u6848 \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1573862515,
        "uid": 80822,
        "name": "zhongqijun",
        "ccfLevel": 6,
        "title": "\u63a8\u9500\u5458 \u8d2a\u5fc3 \u5355\u8c03\u961f\u5217\u4f18\u5316"
    },
    {
        "content": "# \u4f18\u5148\u961f\u5217+\u8d2a\u5fc3\n\u5176\u5b9e\u4e00\u5f00\u59cb\u611f\u89c9\u5f88\u7b80\u5355\n\n------------\n\u76f4\u63a5\u8d2a\u5fc3\u591a\u7b80\u5355\n\n\u5176\u5b9e\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b,\u5177\u4f53\u601d\u8def\u5f88\u7b80\u5355\n\n\u53ea\u9700\u8981\u5148\u505a\u4e00\u4e2a\u9884\u5904\u7406\nh[i].kd=h[i].s*2+h[i].a;\n\n\u518d\u9700\u8981\u5212\u5206\u4e24\u4e2a\u90e8\u5206\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u4e86\n\n\u7b2c\u4e00\u4e2a\uff1a\u5f53\u524d\u7684\u6700\u6df1\u8ddd\u79bbstep\u4ee5\u524d\u7684\uff0c\u53ef\u4ee5\u4eceh[i].a\uff081<=i<step\uff09\u91cc\u627e\u4e00\u4e2a\u6700\u5927\u503c\n\n\u7b2c\u4e8c\u4e2a\uff1a\u5f53\u524d\u7684\u6700\u6df1\u8ddd\u79bbstep\u4ee5\u540e\u7684\uff0c\u53ef\u4ee5\u4eceh[i].kd(step<i<=n)\u91cc\u627e\u4e00\u4e2a\u6700\u5927\u503c\n\n\u518d\u6bd4\u8f83\u4e24\u4e2a\u6700\u5927\u503c\u4e2d\u7684\u8f83\u5927\u4e00\u4e2a\uff0c\u5e76\u4e14\u66f4\u65b0\u5b83\u7684\u6700\u6df1\u8ddd\u79bb\u5373\u53ef\n\n\u7136\u540e\u6de1\u5b9a\u5730\u6253\u51faO\uff08n*n\uff09\uff0c\u5373\u516d\u5341\u5206\u4ee3\u7801\n\n\u5982\u4e0b\uff1a\n```\n\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans,step;\nstruct sale{\n\tint s;\n\tint a;\n\tint kd;\n\tbool flag;\n}h[1010];\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>h[i].s;\n\tfor(int i=1;i<=n;i++) cin>>h[i].a;\n\tfor(int i=1;i<=n;i++){\n\t\th[i].flag=1;\n\t\th[i].kd=h[i].s*2+h[i].a;\n\t\tif(h[i].kd>=ans) ans=h[i].kd,step=i;\n\t}\n\tcout<<ans<<endl;\n\th[step].flag=0;\n\tint max_step=step;\n\tfor(int i=n-1;i>=1;i--){\n\t\tint maxn=-1,ii=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(h[j].flag){\n\t\t\t\tif(j>max_step&&h[j].kd-2*h[max_step].s>maxn){\n\t\t\t\t\tmaxn=h[j].kd-2*h[max_step].s;\n\t\t\t\t\tii=j;\n\t\t\t\t}\n\t\t\t\tif(j<max_step&&h[j].a>maxn){\n\t\t\t\t\tmaxn=h[j].a;\n\t\t\t\t\tii=j;\n\t\t\t\t}\n\t\t\t}\n\t\th[ii].flag=0;\n\t\tans+=maxn;\n\t\tcout<<ans<<endl;\n\t\tmax_step=max(max_step,ii);\n\t}\n\treturn 0;\n}\n```\n\n\u8981\u662f\u5728\u8003\u573a\u91cc\u5199\u51fa\u6765\u516d\u5341\u5206\uff0c\u5c31\u5e94\u8be5\u5f88\u4e0d\u9519\u4e86\u5427~~\u6765\u81ea\u849f\u84bb\u7684\u89c1\u89e3~~\n\n### \u8a00\u5f52\u6b63\u4f20\n\n\u6211\u4eec\u518d\u4e00\u6b21\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u4e0a\u9762\u7684\u601d\u8def\n\n\u4f60\u4f1a\u604d\u7136\u5927\u609f\uff1a\u201c\u5466\u897f\uff01\u6211\u4eec\u597d\u50cf\u6bcf\u4e00\u6b211\u5230n\u7684\u5faa\u73af\u90fd\u7b97\u4e86\u4e00\u904dstep\u524d\u7684\u6700\u5927\u503c\u548cstep\u4e4b\u540e\u7684\u6700\u5927\u503c\u54ce\uff01~~~\u201d\n\n\u6240\u4ee5\uff0c\u4f5c\u4e3a\u849f\u84bb\u7684\u6211~~\u4fbf\u4e0d\u7531\u81ea\u4e3b\u5730~~\u60f3\u8d77\u4e86:\n\n#### \u4f18\u5148\u961f\u5217\n\n\u5bf9\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u628astep\u524d\u7684\u6bcf\u4e00\u4e2ah[i]\u90fd\u5b58\u8fdb\u8fd9\u4e2a\u4f18\u5148\u961f\u5217\n\n\u5728\u8ddf\u65b0step\u65f6\u628a\u539f\u6765\u7684step\u5230\u4e4b\u540e\u7684step\u4e4b\u95f4\u7684h[i]\u538b\u8fdb\u8fd9\u4e2a\u4ee5\u4ef7\u503c\u4e3a\u6392\u5e8f\u7ebf\u7d22\u7684\u4f18\u5148\u961f\u5217\u91cc\n\n\u7136\u540e\u518d\u4e4b\u540e\u7684step\u5230n\u4e2d\u7684\u518d\u4e0e\u8be5\u961f\u5217\u7684\u961f\u5934\u8fdb\u884c\u6bd4\u8f83\u5927\u5c0f\uff0c\u6700\u540e\u518dans\u4e2d\u52a0\u4e0a\u5e76\u5f39\u51fa\u8be5\u6700\u5927\u503c\u5373\u53ef\n\n\u518d\u6de1\u5b9a\u5730\u8ba1\u7b97\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\n\nNice\uff01100000\u4e1d\u6beb\u6ca1\u6709\u538b\u529b\n\n\u4e8e\u662f\u8fd9\u4fbf\u662f\u4f18\u5148\u961f\u5217+\u8d2a\u5fc3\u7b97\u6cd5\u7684\u6ee1\u5206\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans,step,newa,maxn;\nstruct node{\n    int s;\n    int v;\n    bool operator<(node a)const{\n        return v<a.v;\n\t}\n}h[100010],kk;\npriority_queue <node> q;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>h[i].s;\n\tfor(int i=1;i<=n;i++) cin>>h[i].v;\n\tkk.s=kk.v=0;\n\tq.push(kk);\n\tfor(int i=1;i<=n;i++){\n\t\tnewa=step;\n\t\tkk=q.top();\n\t\tmaxn=kk.v;\n\t\tfor(int j=step+1;j<=n;j++)\n\t\t\tif(h[j].v+(h[j].s-h[i].s)*2>maxn){\n\t\t\t\tmaxn=h[j].v+(h[j].s-h[i].s)*2;\n\t\t\t\tnewa=j;\n\t\t\t}\n\t\th[newa].v+=(h[newa].s-h[step].s)*2;\n\t\tif(step!=newa) q.push(h[newa]);\n\t\tfor(int j=step+1;j<newa;j++) q.push(h[j]);\n\t\tkk=q.top();\n\t\tans+=kk.v;\n\t\tcout<<ans<<endl;\n\t\tq.pop();\n\t\tstep=newa;\n\t}\n\treturn 0;\n}\n```\n\n\u5f53\u7136\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u7b2cn\u6b21\u7b54\u6848\u5fc5\u7136\u53d6\u51b3\u4e8e\u7b2cn-1\u6b21\u7684\u7b54\u6848\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u4e86\u89e3\u5427\n\n~~\uff08\u4ee5\u4e0a\u662f\u849f\u84bb\u89c1\u89e3\uff0c\u5927\u4f6c\u6e05\u55b7\uff09~~",
        "postTime": 1569065971,
        "uid": 107344,
        "name": "Ricardo_21",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u8bfb\u8fc7\u9898\u4e4b\u540e,\u4ece\u6837\u4f8b\u5206\u6790\n\n\u627e\u5230\u4ee3\u8868\u5355\u4e2a\u8bbf\u95ee\u6700\u5927\u7684\u603b\u65f6\u95f4\u4e4b\u540e\n\n\u5c06\u6700\u5927\u65f6\u95f4\u7684\u4f4d\u7f6e\u4e4b\u524d\u7684\u6570\u6309\u7167\u63a8\u9500\u82b1\u8d39\u65f6\u95f4\u6392\u5e8f\n\n\u6700\u5927\u4f4d\u7f6e\u540e\u7684\u6570\u4e0d\u9700\u8981\u6392\u5e8f\n\u6bd4\u8f83\u52a0\u4e0a\u7b2cl\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u8f93\u5165\u7684\u63a8\u9500\u7684\u65f6\u95f4\u7684\u75b2\u52b3\u5ea6\u548c\u52a0\u4e0a\u6700\u540e\u7b2ck\u4e2a\u6570\u7684\u75b2\u52b3\u5ea6\uff08l\u521d\u59cb\u5728\n1\uff0c\u521d\u59cb\u5728n\uff09\n\n\u5982\u679c\u7b2cl\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u8f93\u5165\u7684\u63a8\u9500\u7684\u65f6\u95f4\u7684\u75b2\u52b3\u5ea6>\u52a0\u4e0a\u6700\u540e\u7b2ck\u4e2a\u6570\u7684\u75b2\u52b3\u5ea6\n \nprintf(\"%d\",ans+\u7b2cl\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u8f93\u5165\u7684\u63a8\u9500\u7684\u65f6\u95f4\u7684\u75b2\u52b3\u5ea6);\n\n\u7b2c\u4e00\u4e2a\u8f93\u51fa\u6700\u5927\u7684\u5355\u4e2a\u63a8\u9500\u7684\u75b2\u52b3\u503c\n\n\u6700\u540e\u4e00\u4e2a\u8f93\u51fa\u63a8\u9500\u6240\u6709\u5c45\u6c11\u7684\u75b2\u52b3\u503c\n\ncode:\n```\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 1e6;\nlong long n,tmp,maxcostsumlocation,l,k,sumcostsum,maxcostsum;//maxcostsum:\u4ee3\u8868\u5355\u4e2a\u8bbf\u95ee\u6700\u5927\u7684\u603b\u65f6\u95f4\n//maxcostsumlocation:\u4ee3\u8868\u6700\u5927\u7684\u603b\u65f6\u95f4\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e,sumcostsum:\u5168\u90e8\u8bbf\u95ee\u82b1\u8d39\u7684\u603b\u65f6\u95f4\nstruct node{\n\tlong long costfar,costsum,cost;//costfar:\u8be5\u5c45\u6c11\u79bb\u5165\u53e3\u7684\u4f4d\u7f6e+\u8fd4\u56de\u7684\u65f6\u95f4\u548c,costsum:\u5355\u4e2a\u8bbf\u95ee\u82b1\u8d39\u7684\u65f6\u95f4,cost:\u63a8\u9500\u82b1\u8d39\u7684\u65f6\u95f4\n}x[MAXN];\nbool cmp(node a,node b){\n\treturn a.cost > b.cost;//\u6309\u63a8\u9500\u82b1\u8d39\u65f6\u95f4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n}\nint main(){\n\t//freopen(\"salesman.in\",\"r\",stdin);\n\t//freopen(\"salesman.out\",\"w\",stdout);\n\tscanf(\"%lld\",&n);\n\tk = n,l = 1;\n\tfor(int i = 1;i <= n;++i){\n\t\tscanf(\"%lld\",&tmp);\n\t\tx[i].costfar = tmp * 2;\n\t}\n\tfor(int i = 1;i <= n;++i){\n\t\tscanf(\"%lld\",&x[i].cost);\n\t\tx[i].costsum = x[i].cost + x[i].costfar;\n\t\tif(maxcostsum < x[i].costsum){\n\t\t\tmaxcostsum = x[i].costsum;\n\t\t\tmaxcostsumlocation = i;//\u66f4\u65b0\u6700\u5927\u75b2\u52b3\u503c\u7684\u4f4d\u7f6e\n\t\t}\n\t\tsumcostsum += x[i].cost;//\u4e4b\u524d\u63a8\u9500\u65f6\u95f4\u52a0\u4e0a\u7b2ci\u4e2a\u7528\u6237\u7684\u63a8\u9500\u65f6\u95f4\n\t}\n\tsumcostsum += x[n].costfar;//\u52a0\u4e0a\u6700\u8fdc\u7684\u8ddd\u79bb\n\tsort(x+1,x+maxcostsumlocation,cmp);\n\tprintf(\"%lld\\n\",maxcostsum);\n\tfor(int i = 2;i < n;++i){\n\t\tif(k > maxcostsumlocation && l < maxcostsumlocation){\n\t\t\tif(x[l].cost > (x[k].costfar-(maxcostsumlocation*2))+x[k].cost){//\u5982\u679c\u9009\u7b2cl\u4e2a\u6240\u5f97\u7684\u503c > \u9009\u6700\u540e\u4e00\u4e2a\u70b9\u6240\u5f97\u7684\u503c\n\t\t\t\tmaxcostsum += x[l].cost;\n\t\t\t\tprintf(\"%lld\\n\",maxcostsum);\n\t\t\t\tl++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmaxcostsum += (x[k].costfar-(maxcostsumlocation*2))+x[k].cost;\n\t\t\t\tprintf(\"%lld\\n\",maxcostsum);\n\t\t\t\tk--;\n\t\t\t}\n\t\t}\n\t\telse if(k <= maxcostsumlocation){\n\t\t\tmaxcostsum += x[l].cost;\n\t\t\tprintf(\"%lld\\n\",maxcostsum);\n\t\t\tl++;\n\t\t}//k \u5728 \u6700\u5927\u4f4d\u7f6e\u7684\u5de6\u8fb9\t\n\t\telse if(l >= maxcostsumlocation){\n\t\t\tmaxcostsum += (x[k].costfar-(maxcostsumlocation*2))+x[k].cost;\n\t\t\tprintf(\"%lld\\n\",maxcostsum);\n\t\t\tk--;\n\t\t}\n\t}\n\tprintf(\"%lld\",sumcostsum);\n\treturn 0;\n} \n```",
        "postTime": 1563793159,
        "uid": 179773,
        "name": "C20210404\u675c\u94d6\u660a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u8865\u4e00\u53d1\u7528zkw\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\uff1a\n\n\u53ef\u4ee5\u8bc1\u660e\u7b2ci\u6b21\u9009\u62e9\u7684\u70b9\u5728\u7b2ci+1\u6b21\u4e5f\u4e00\u5b9a\u4f1a\u88ab\u9009\u62e9\uff0c\u5373\u6bcf\u4e00\u6b21\u53ea\u8981\u4ece\u5269\u4e0b\u7684\u70b9\u4e2d\u9009\u62e9\u589e\u52a0\u75b2\u52b3\u503c\u6700\u5927\u7684\u70b9\u5373\u53ef\u3002\n\n\u7b2c\u4e00\u6b21\u663e\u7136\u53ea\u8981\u9009\u62e9 s\\*2+a \u6700\u5927\u7684\u70b9\u5373\u53ef\u3002\n\n\u6211\u4eec\u7528maxti\u8868\u793a\u5f53\u524d\u5df2\u9009\u62e9\u7684s\u6700\u5927\u7684\u70b9\uff0c\u5bf9\u4e8emaxti\u5de6\u8fb9\u7684\u70b9\uff0c\u80fd\u589e\u52a0\u7684\u75b2\u52b3\u503c\u53ea\u6709a[i]\uff0c\u6240\u4ee5\u5de6\u8fb9\u7684\u6700\u4f18\u70b9\u5c31\u662fa\u6700\u5927\u7684\u70b9\u3002\u5bf9\u4e8emaxti\u53f3\u8fb9\u7684\u70b9\uff0c\u80fd\u589e\u52a0\u7684\u75b2\u52b3\u503c\u662fs[i]-s[maxti]+a[i]\uff08s[i]\u4e8b\u5148\\*2\uff09\uff0c\u53ef\u4ee5\u9009\u51fa\u6700\u4f18\u70b9\u3002\u7136\u540e\u6bd4\u8f83\u5de6\u53f3\u4e24\u4e2a\u6700\u4f18\u70b9\u7684\u75b2\u52b3\u503c\uff0c\u5c06\u8f83\u5927\u7684\u70b9\u52a0\u5165\u3002\n\n\u53f3\u8fb9\u7684\u70b9\u56e0\u4e3amaxti\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\uff0c\u5de6\u8fb9\u7684\u70b9\u76f4\u63a5\u679a\u4e3e\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u7528zkw\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u3002\u5f53\u4e00\u4e2a\u70b9\u88ab\u9009\uff0c\u5c31\u6807\u8bb0\u5e76\u66f4\u65b0\u4e3a0.\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nint n,s[100001],a[100001],t,maxai,d[263000],b[263000],m=1;\nchar c[100001];\nvoid build(){\n    int i;\n    for (i=m-1;i;--i)\n        if (b[i<<1]>b[i<<1|1]){\n            b[i]=b[i<<1];\n            d[i]=d[i<<1];\n        }else{\n            b[i]=b[i<<1|1];\n            d[i]=d[i<<1|1];\n        }\n}\nvoid change(int x){\n    b[x+m]=0;\n    for (int i=x+m>>1;i;i>>=1){\n        if (b[i<<1]>b[i<<1|1]){\n            b[i]=b[i<<1];\n            d[i]=d[i<<1];\n        }else{\n            b[i]=b[i<<1|1];\n            d[i]=d[i<<1|1];\n        }\n    }\n}\nint query(int l,int r){\n    int ans=0;\n    for (l+=m-1,r+=m+1;l^r^1;l>>=1,r>>=1){\n        if (~l&1){\n            if (ans<b[l^1]){\n                ans=b[l^1];\n                maxai=d[l^1];\n            }\n        }\n        if (r&1){\n            if (ans<b[r^1]){\n                ans=b[r^1];\n                maxai=d[r^1];\n            }\n        }\n    }\n    return ans;\n}\nvoid read(int& x){\n    x=0;\n    int y=1;\n    char ch=getchar();\n    while (ch<'0'||ch>'9'){\n        if (ch=='-') y=-1;\n        ch=getchar();\n    }\n    while (ch>='0'&&ch<='9'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    x=x*y;\n}\nint main(){\n    int i,maxti,maxa,maxb,j,maxbi,tt,ans=0,maxt,nt;\n    read(n);\n    for (i=1;i<=n;++i){\n        read(s[i]);\n        s[i]<<=1;\n    }\n    while (m<n+2) m<<=1;\n    for (i=1;i<=n;++i){\n        read(a[i]);\n        t=a[i]+s[i];\n        d[i+m]=i;\n        if (t>ans){\n            ans=t;\n            maxti=i;\n        }\n    }\n    memcpy(b+m+1,a+1,n*sizeof(int));\n    build();\n    printf(\"%d\\n\",ans);\n    c[maxti]=1;\n    for (i=2;i<=n;++i){\n        maxa=query(1,maxti-1);//maxa\u8868\u793a\u5de6\u8fb9\u7684\u6700\u5927\u75b2\u52b3\u503c\n        maxb=0;//maxb\u8868\u793a\u5de6\u8fb9\u7684\u6700\u5927\u75b2\u52b3\u503c\n        for (j=maxti+1;j<=n;++j){\n            tt=a[j]+s[j]-s[maxti];\n            if (maxb<tt){\n                maxb=tt;\n                maxbi=j;\n            }\n        }\n        if (maxa>maxb){//\u6bd4\u8f83\n            ans+=maxa;\n            printf(\"%d\\n\",ans);\n            c[maxai]=1;//\u82e5\u9009\u8be5\u70b9\u5219\u6807\u8bb0\n            change(maxai);//\u66f4\u65b0\n        }else if (maxa<maxb){\n            ans+=maxb;\n            printf(\"%d\\n\",ans);\n            c[maxbi]=1;\n            maxti=maxbi;//\u66f4\u65b0\u6700\u8fdc\u8ddd\u79bb\n            change(maxbi);\n        }else{//\u5982\u679c\u5de6\u53f3\u4e00\u6837\u5927\uff0c\u90a3\u8fd9\u4e00\u8f6e\u9009\u4efb\u610f\u4e00\u4e2a\uff0c\u4e0b\u4e00\u8f6e\u80af\u5b9a\u9009\u5269\u4e0b\u4e00\u4e2a\uff0c\u53ef\u4ee5\u4e00\u8d77\u5904\u7406\n            ans+=maxa;\n            printf(\"%d\\n\",ans);\n            ans+=maxa;\n            printf(\"%d\\n\",ans);\n            ++i;\n            maxti=maxbi;\n            c[maxai]=c[maxbi]=1;\n            change(maxai);\n            change(maxbi);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1503485916,
        "uid": 17123,
        "name": "\u6df1\u6d77\u9c7c\u7684\u773c\u6cea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u697c\u4e0b\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u7ed9\u697c\u4e0b\u8865\u4e2apascal\u4ee3\u7801\n\nconst maxi=1 shl 30;\n\ntype\n tree=record\n\nl,r,ma,xb,bj:longint\n\n\n\n```cpp\n end;\nvar\n i,n,ans,right,j,x:longint;\n a,s:array[0..100000] of longint;\n t:array[1..300000] of tree;\nprocedure merge(i:longint);\nbegin\n if t[i shl 1].ma+t[i shl 1].bj>t[i shl 1 or 1].ma+t[i shl 1 or 1].bj then\n begin\n  t[i].ma:=t[i shl 1].ma+t[i shl 1].bj;\n  t[i].xb:=t[i shl 1].xb\n end else\n begin\n  t[i].ma:=t[i shl 1 or 1].ma+t[i shl 1 or 1].bj;\n  t[i].xb:=t[i shl 1 or 1].xb\n end\nend;\nprocedure pushdown(x:longint);\nbegin\n if t[x].bj>0 then\n begin\n  inc(t[x shl 1].bj,t[x].bj);\n  inc(t[x shl 1 or 1].bj,t[x].bj);\n  t[x].bj:=0\n end\nend;\nprocedure build(i,l,r:longint);\nvar\n m:longint;\nbegin\n t[i].l:=l;\n t[i].r:=r;\n if l=r then\n begin\n  t[i].ma:=s[l] shl 1+a[l];\n  t[i].xb:=l;\n```\nexit\n```cpp\n end;\n m:=(l+r) shr 1;\n build(i shl 1,l,m);\n build(i shl 1 or 1,m+1,r);\n merge(i)\nend;\nprocedure del(i:longint);\nvar\n m:longint;\nbegin\n if t[i].l=t[i].r then\n begin\n  t[i].ma:=-maxi;\n```\nexit\n```cpp\n end;\n pushdown(i);\n m:=(t[i].l+t[i].r) shr 1;\n if t[i].xb<=m then del(i shl 1)\n  else del(i shl 1 or 1);\n merge(i)\nend;\nprocedure spcha(i,j:longint);\nvar\n m:longint;\nbegin\n if t[i].l=t[i].r then\n begin\n  dec(t[i].ma,x);\n```\nexit\n```cpp\n end;\n pushdown(i);\n m:=(t[i].l+t[i].r) shr 1;\n if j>m then spcha(i shl 1 or 1,j)\n  else spcha(i shl 1,j);\n merge(i)\nend;\nprocedure cha(i,l,r:longint);\nvar\n m:longint;\nbegin\n if (l=t[i].l)and(r=t[i].r) then\n begin\n  dec(t[i].bj,x);\n```\nexit\n\n```cpp\n end;\n pushdown(i);\n m:=(t[i].l+t[i].r) shr 1;\n if r<=m then cha(i shl 1,l,r)\n  else if l>m then cha(i shl 1 or 1,l,r)\n        else\n        begin\n         cha(i shl 1,l,m);\n         cha(i shl 1 or 1,m+1,r)\n        end;\n merge(i)\nend;\nbegin\n readln(n);\n for i:=1 to n do read(s[i]);\n for i:=1 to n do read(a[i]);\n build(1,1,n);\n for i:=1 to n do\n begin\n  inc(ans,t[1].ma);\n  writeln(ans);\n  if s[t[1].xb]>s[right] then\n  begin\n   for j:=right+1 to t[1].xb-1 do\n   begin\n    x:=(s[j]-s[right]) shl 1;\n    spcha(1,j)\n   end;\n   x:=(s[t[1].xb]-s[right]) shl 1;\n   if t[1].xb<n then\n    cha(1,t[1].xb+1,n);\n   right:=t[1].xb\n  end;\n  del(1)\n end\nend.\n```",
        "postTime": 1471410606,
        "uid": 19567,
        "name": "zx2003",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "- \u5982\u679c\u5f53\u524d\u70b9\u5728\u6700\u5927\u8ddd\u79bb\u70b9\u5de6\u8fb9\uff0c\u53ea\u52a0\u4e0a\u63a8\u9500\u75b2\u52b3\u503c\n\n- \u5982\u679c\u5f53\u524d\u70b9\u5728\u6700\u5927\u8ddd\u79bb\u70b9\u53f3\u8fb9\uff0c\u8fd8\u8981\u5728\u52a0\u4e0a\u4e24\u500d\u8ddd\u79bb\u5dee\uff0c\u5e76\u66f4\u65b0\u6700\u5927\u8ddd\u79bb\u70b9\n\n![](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4ubHVvZ3UuY29tLmNuL3VwbG9hZC9pbWFnZV9ob3N0aW5nL3ZhbXdiNmhjLnBuZw?x-oss-process=image/format,png)\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u8d2a\u5fc3\uff1a\u627e\u5728\u6700\u5927\u8ddd\u79bb\u5de6\u8fb9\u6700\u4f18\u7684\u70b9\u4e0e\u53f3\u8fb9\u6700\u4f18\u7684\u70b9\u8fdb\u884c\u6bd4\u8f83\uff08\u5199\u6210\u7a0b\u5e8f\u5c31\u662f\u4e24\u4e2aif\uff09\uff0c\u53d6\u6700\u4f18\u3002\n\n\u5e76\u4e14\u8fd8\u8981\u5224\u65ad\u8be5\u70b9\u6ca1\u6709\u53bb\u8fc7\u3002\n\n\u6700\u540e\u5982\u679c\u53d6\u4e86\u53f3\u8fb9\u7684\u70b9\u8981\u66f4\u65b0\u6700\u5927\u8ddd\u79bb\u70b9\u3002\u4e8e\u662f\u6709\u4e86\u8fd9\u4efd\u7a0b\u5e8f\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nstruct node{\n\tint dis;//\u8ddd\u79bb\n\tint num;//\u63a8\u9500\u75b2\u52b3\u503c\n}peo[100007];\nbool vis[100007];//\u8bb0\u5f55\u6709\u6ca1\u6709\u53bb\u8fc7\nint maxnum;//\u6700\u5927\u8ddd\u79bb\u70b9\nint ans;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\t\n\t\tcin>>peo[i].dis;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>peo[i].num;\n\tfor(int i=1;i<=n;i++){\n\t\tint maxn=0,maxi=0,k=0;\n        \t//\u603b\u7684\u6700\u4f18\u60c5\u51b5\uff0c\u6b64\u65f6\u7f16\u53f7\uff0c\u4e24\u79cd\u60c5\u51b5\u7684\u6700\u4f18\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!vis[j]){\n\t\t\t\tif(j<maxnum){\n\t\t\t\t\tk=max(k,peo[j].num);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tk=max(k,peo[j].num+(peo[j].dis-peo[maxnum].dis)*2);\n\t\t\t\t}\n\t\t\t\tif(k>maxn){\n\t\t\t\t\tmaxn=k;\n\t\t\t\t\tmaxi=j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmaxnum=max(maxnum,maxi);//\u66f4\u65b0\u6700\u5927\u8ddd\u79bb\u70b9\n\t\tvis[maxi]=true;\n\t\tans+=k;\n\t\tcout<<ans<<endl;//\u6bcf\u6b21\u90fd\u8981\u8f93\u51fa\n\t}\n\treturn 0;\n}\n```\n\u7136\u540e\u80fd\u5f97\u523060\u5206\uff08\u52a0\u4e0a\u5feb\u8bfb\u548c\u52a0ios\u7684cout\u4e5f\u6ca1\u7528\uff09\n\n\u5176\u5b9e\u5df2\u7ecf\u5f88\u597d\u4e86~~\u5bf9\u6211\u8fd9\u4e2a\u849f\u84bb\u6765\u8bf4~~\n\n\u7136\u540e\u5c31\u662f\u9488\u5bf9\u5269\u4f594\u4e2a\u70b9\u7684\u4f18\u5316\u4e86\u3002\u9700\u8981\u7528\u5230\u4f18\u5148\u961f\u5217\uff08\u6211\u4eec\u6559\u7ec3\u544a\u8bc9\u6211\u7684\uff09\uff0c\u540e\u6765\u770b\u522b\u7684\u9898\u89e3\u53d1\u73b0\u8fd8\u53ef\u7528\u53cd\u8d2a\uff0c~~\u4f46\u662f\u6211\u4e0d\u4f1a~~\n\n\u5b9a\u4e49\u4f18\u5148\u961f\u5217ql\uff0cqr\u3002ql\u5b58\u6700\u5927\u8ddd\u79bb\u70b9\u5de6\u8fb9\u7684\uff0cqr\u5b58\u6700\u5927\u8ddd\u79bb\u70b9\u53f3\u8fb9\u7684\uff08\u53ea\u662f\u5b58\u7684\u65f6\u5019\u8fd9\u4e48\u5b58\uff09\n\n\u6bcf\u6b21\u90fd\u53d6\u6700\u5927\u503c\uff0c\u7136\u540e\u51fa\u961f\u3002\u5728\u4e24\u4e2a\u70b9\u4e2d\u53d6\u6700\u4f18\uff0c\u5982\u679c\u53bbqr\u7684\u70b9\uff0c\u8981\u66f4\u65b0\u6700\u5927\u8ddd\u79bb\u70b9\u3002\u540c\u65f6\u5224\u65ad\u6709\u6ca1\u6709\u53bb\u8fc7\uff0c\u82e5\u53bb\u8fc7\uff0c\u4e5f\u820d\u5f03\u3002\u6ce8\u610f\uff1a\u82e5qr\u7684\u70b9\u8dd1\u5230\u4e86\u6700\u5927\u8ddd\u79bb\u70b9\u5de6\u8fb9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5e94\u8be5\u820d\u5f03\uff0c\u4f46\u82e5ql\u7684\u70b9\u8dd1\u5230\u4e86\u6700\u5927\u8ddd\u79bb\u70b9\u53f3\u8fb9\uff0c\u4e0d\u5e94\u820d\u5f03\uff0c\u56e0\u4e3a\u5b83\u4ecd\u6709\u673a\u4f1a\u8dd1\u5230\u6700\u5927\u8ddd\u79bb\u70b9\u5de6\u8fb9\uff08\u6709\u53ef\u80fd\u540e\u6765\u66f4\u65b0\u4e86\u6700\u5927\u8ddd\u79bb\u70b9\uff09\u3002\n\n\u5f53\u662f\u7b2c\u4e00\u6b21\u8d70\u7684\u65f6\u5019\u7279\u5224\uff0c\u5fc5\u5b9a\u8d70qr\u7684\u70b9\uff08\u8fd9\u6837\u624d\u80fd\u6709\u4e00\u4e2a\u6700\u5927\u8ddd\u79bb\u70b9\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nint maxdis;\nstruct node{\n\tint dis;//ql\u91cc\u662f\u63a8\u9500\u503c\uff0cqr\u91cc\u8fd8\u8981\u52a0\u4e0a\u4e24\u500d\u8ddd\u79bb\n\tint num;//\u7f16\u53f7\n\tbool operator < (const node &x) const{\n\t\treturn dis<x.dis;//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u6ca1\u6709\u4e3a\u4ec0\u4e48\uff0c\u6211\u4e5f\u662f\u5b66\u7684\u522b\u7684\u9898\u89e3\u91cc\u7684\uff0c\u56e0\u4e3a\u6211\u4e5f\u4e0d\u4f1a\n\t}\n};\nint ans;\nint dis[100007];//\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\nint num[100007];//\u6bcf\u4e2a\u70b9\u7684\u63a8\u9500\u75b2\u52b3\u503c\nbool vis[100007];//\u540c\u4e0a\npriority_queue<node,vector<node>,less<node> > qr,ql;//\u547d\u540d\u662f\u5957\u8def\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>dis[i];\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>num[i];\n\t\tnode k;\n\t\tk.num=i;\n\t\tk.dis=num[i];\n\t\tql.push(k);\n\t\tk.dis=num[i]+2*dis[i];\n\t\tqr.push(k);\n\t\t//\u5206\u522b\u5165\u961f\n\t}\n\tvis[qr.top().num]=true;\n\tans=qr.top().dis;\n\tcout<<ans<<endl;\n\tmaxdis=dis[qr.top().num];\n\tif(ql.top().num==qr.top().num)ql.pop();//\u5982\u679c\u8be5\u70b9\u5728\u4e24\u4e2a\u961f\u5217\u4e2d\u90fd\u51fa\u73b0\u4e86\uff0c\u90fd\u8981\u51fa\u961f\n\tqr.pop();\n\tfor(int i=2;i<=n;i++){\n\t\tnode maxl=ql.top(),maxr=qr.top();\n\t\tif(vis[maxl.num]){ql.pop();i--;continue;}\n\t\tif(vis[maxr.num]){qr.pop();i--;continue;}\n\t\tif((maxl.dis>=(maxr.dis-2*maxdis))||((maxr.dis-num[maxr.num])<2*maxdis)){\n\t\t\t//\u8fd9\u91cc\u662f\u53d6\u4e24\u4e2a\u4e2d\u7684\u6700\u4f18\u70b9\uff0c\u6709\u6ca1\u6709=\u5747\u53ef   \u6b64\u5904\u662f\u53d6qr\u7684\u8ddd\u79bb    qr\u7684\u70b9\u5f97\u5728\u6700\u5927\u8ddd\u79bb\u70b9\u53f3\u8fb9\n\t\t\tans+=maxl.dis;\n\t\t\tql.pop();\n\t\t}\n\t\telse {\n\t\t\tans+=maxr.dis-2*maxdis;\n\t\t\tmaxdis=dis[maxr.num];\n\t\t\tqr.pop();\n\t\t}\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572614758,
        "uid": 164840,
        "name": "zhaowangji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "```cpp\n\u9898\u76ee\u5927\u610f\uff1a\u6709\u4e2a\u63a8\u9500\u5458\u8981\u53bb\u63a8\u9500\uff0c\u8981\u4f60\u6c42\u4ed6\u63a8\u9500 1~n \u6237\u4eba\u5bb6\u4e2d\u7684 X \u6237\uff0c\u6700\u591a\u82b1\u591a\n\u5c11\u201c\u75b2\u52b3\u503c\u201d\u3002\n\u89e3\u9898\u601d\u8def\uff1a O(n2)\u505a\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230 60 \u5206\uff0c\u5373\u8d2a\u5fc3\u66b4\u529b\u7684\u53bb\u9009\u51fa\u75b2\u52b3\u503c\u6700\u5927\u7684 X \u6237\u3002\n\u8d2a\u5fc3\u7b56\u7565\uff1a \u9009 i \u4e2a\u70b9\u7684\u6700\u4f18\u89e3\u4e00\u5b9a\u662f\u9009 i-1 \u4e2a\u7684\u6700\u4f18\u89e3\u518d\u52a0\u4e0a\u672a\u9009\u7684\u70b9\u4e2d\u75b2\u52b3\u503c\n\u6700\u5927\u7684\u70b9\u3002\n\u53ef\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\u6b63\u786e\u6027\u3002\u5927\u4f53\u8fc7\u7a0b\uff1a\u5047\u8bbe\u6700\u4f18\u89e3\u4e3a\u4e0a\u8ff0\u6700\u4f18\u89e3\uff0c\u8bc1\u660e\u5047\u5982\u7b2c i-1\n\u4e2a\u4e0d\u662f\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6b64\u65f6\u9009 i \u4e2a\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u4f18\u4e8e\u4e0a\u8ff0\u6700\u4f18\u89e3\u3002\n\u9898\u76ee\u4e2d\u8bf4\u662f\u4e0d\u8d70\u591a\u4f59\u7684\u8def\u7684\uff0c\u4e5f\u5c31\u662f\u8d70\u7684\u8def\u4e00\u5b9a\u662f\u4ece\u8d77\u70b9\u5230\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb*2\u3002\n\u8fd9\u6837\u6bcf\u589e\u52a0\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u8be5\u70b9\u5982\u679c\u5728\u6700\u8fdc\u70b9\u540e\u9762\uff0c\u5219\u75b2\u52b3\u503c\u4e3a(s[i]-s[pos])*2+a[i]\uff0c\n\u5426\u5219\u75b2\u52b3\u503c\u4e3a a[i]\uff0c\u627e\u75b2\u52b3\u503c\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u3002\n\u679a\u4e3e\u627e\u8be5\u70b9\u662f n2 \u7684\uff0c\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u3002\u5c06\u6700\u8fdc\u70b9\u5de6\u4fa7\u7684\u70b9\u7684\u75b2\u52b3\u503c\u5168\u90e8\u538b\n\u5165\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u6bd4\u8f83\u6700\u8fdc\u70b9\u53f3\u4fa7\u7684\u70b9\u4e0e\u961f\u9876\u5143\u7d20\u7684\u5927\u5c0f\uff0c\u5982\u679c\u9009\u53f3\u4fa7\u7684\u70b9\u5219\u7ee7\u7eed\n\u66f4\u65b0\u4f18\u5148\u961f\u5217\uff0c\u5c06\u65b0\u5143\u7d20\u538b\u5165\u961f\u5217\u4e2d\u3002\u81f3\u4e8e\u627e\u53f3\u4fa7\u75b2\u52b3\u503c\u6700\u5927\u7684\u70b9\uff0c\u53ef\u9884\u5148\u5904\u7406\n\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u53f3\u4fa7\u75b2\u52b3\u503c\uff08 s[i]*2+a[i]\uff09\u6700\u5927\u7684\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u540e\u671f\u627e\u53f3\u4fa7\u6700\u5927\u75b2\u52b3\n\u503c\u662f O(1)\u7684\uff0c\u6ce8\u610f\u8981\u51cf\u53bb\u5f53\u524d\u6700\u53f3\u7aef\u7684\u70b9\u7684\u8ddd\u79bb s[pos]*2 \u518d\u4e0e\u5de6\u4fa7\u7684\u6bd4\u8f83\u3002\n```\n\u6700\u540e\u9644\u5e26\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\npriority_queue<int>Heap;\nint n;\nint a[100005],s[100005];\nint main() {\n\tscanf(\"%d\",&n);\n\tint mxi=0,mx=0;\n\tfor(int i=1; i<=n; ++i)scanf(\"%d\",&s[i]);\n\tfor(int i=1; i<=n; ++i)scanf(\"%d\",&a[i]);\n\tfor(int i=1; i<=n; ++i)\n\t\tif(s[i]*2+a[i]>mx) {\n\t\t\tmx=s[i]*2+a[i];\n\t\t\tmxi=i;\n\t\t}\n\tprintf(\"%d\\n\",mx);\n\tfor(int i=1; i<mxi; ++i)\n\t\tHeap.push(a[i]);\n\tint now=mxi;\n\tfor(int i=2; i<=n; ++i) {\n\t\tint lmax=0,rmax=0,ri=0;\n\t\tif(!Heap.empty())lmax=Heap.top();\n\t\tfor(int j=now+1; j<=n; ++j)\n\t\t\tif(s[j]*2-s[now]*2+a[j]>rmax) {\n\t\t\t\trmax=s[j]*2-s[now]*2+a[j];\n\t\t\t\tri=j;\n\t\t\t}\n\t\tif(lmax>rmax) {\n\t\t\tmx+=lmax;\n\t\t\tHeap.pop();\n\t\t} else {\n\t\t\tmx+=rmax;\n\t\t\tfor(int j=now+1; j<ri; ++j)\n\t\t\t\tHeap.push(a[j]);\n\t\t\tnow=ri;\n\t\t}\n\t\tprintf(\"%d\\n\",mx);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1570261053,
        "uid": 208251,
        "name": "\u7533\u4f73\u4fca",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "### \u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u8d2a\u5fc3\u7684\u7edd\u4e16\u597d\u9898\n## \u5176\u6b21\uff0c\u8fd9\u9053\u9898\u8981\u7528\u5230\u7ed3\u6784\u4f53\u8fd9\u95e8\u9ad8\u6df1\u7684\u77e5\u8bc6\n# \u6700\u540e\uff0c\u8fd9\u9053\u9898\u6211\u6837\u4f8b2\u6ca1\u6709\u8fc7\u4f46\u662f\u6211\u4ea4\u4e864\u4e2aOJ\u90fdAC\u4e86\n```javascript\n??????????????????_______????????????????????\n```\n\n--------------\n\n\u4e0dbb\u4e86\uff0c\u4e0a\u601d\u8def\u5427\n\n\u8fd9\u9053\u9898\u4e3b\u8981\u7528\u5230\u4e86\u77aa\u773c\u5927\u6cd5\u4ee5\u53ca\u8d2a\u5fc3\u5927\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u5f80\u8fd4\u8ddd\u79bb\u52a0\u4e0a\u81ea\u8eab\u75b2\u52b3\u503c\u6700\u9ad8\u7684\u4e00\u4e2a\u5d3d\u513f\uff0c\u4ee5\u4e0b\u5c31\u7b80\u79f0ze\u3002\n\n\u7136\u540e\u901a\u8fc7\u89c2\u5bdf\u6837\u4f8b\uff0c\u53ef\u4ee5\u53d1\u73b0ze\u6bcf\u6b21\u90fd\u4f1a\u53c2\u4e0e\u8f93\u51fa\uff0c\u5373\u6bcf\u6b21\u90fd\u4f1a\u5411ze\u8fd9\u4e2a\u70b9\u8fdb\u884c\u63a8\u9500\uff0c\u4f46\u4e0d\u4e00\u5b9a\u6bcf\u6b21\u90fd\u628aze\u8fd9\u4e2a\u70b9\u5f53\u4f5c\u7ec8\u70b9\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u6392\u5e8f\u89c4\u5219\u662f\u5f80\u8fd4\u8ddd\u79bb\u52a0\u4e0a\u81ea\u8eab\u75b2\u52b3\u503c\u6309\u964d\u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u6240\u4ee5ze\u4e0d\u4e00\u5b9a\u5c31\u662f\u6700\u8fdc\u7684\u90a3\u4e00\u6237\u4eba\u5bb6\u3002\n\n\u901a\u8fc7\u4ee5\u4e0a\u7684~~\u77aa\u773c~~\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u65e2\u7136\u6bcf\u4e00\u6b21\u90fd\u4f1a\u6709ze\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5212\u5206\u5b50\u95ee\u9898\u4e86\uff0c\u7b26\u5408\u4e86\u8d2a\u5fc3\u7684\u5b9a\u4e49\u3002\n\n\u5176\u5b9e\u8fd9\u4e2a\u601d\u8def\u4e5f\u4e0d\u662f\u6211\u72ec\u7acb\u601d\u8003\u51fa\u6765\u7684\uff0c\u800c\u662f\u6211\u4eec\u673a\u623f\u5927\u4f6c\u5199\u4e86\u4e00\u7bc7\u9898\u89e3\u3002\n\u4f46\u662f\u8fd9\u7bc7\u9898\u89e3\u7b80\u76f4\u4e0d\u8981\u592a\u7cbe\u7b80\uff0c\u6211\u662f\u5b8c\u5168\u6ca1\u6709\u770b\u61c2\u3002\u800c\u4ee3\u7801\u6211\u4e5f\u6ca1\u6709\u53bb\u770b\n\n\u7ed9\u5927\u5bb6\u89c2\u6469\u4e00\u4e0b:\n-------------------\n```javascript\n\u4e00\u9053\u8d2a\u5fc3\u7684\u9898\n\n\u5176\u5b9e\u627e\u5230\u8ddd\u79bb\u8f83\u8fdc\u4f46\u75b2\u52b3\u503c(\u5f80\u8fd4+\u5f53\u524d\u4f4d\u7f6e\u7684\u75b2\u52b3\u503c\uff09\u6700\u5927\u7684\u90a3\u4e2a\u4f4d\u7f6e\n\n\u8ba9\u5b83C\u4f4d\u51fa\u9053\n\n\u518d\u6392\u5e8f\u6392\u51fa\u75b2\u52b3\u503c\u9ad8\u7684\n\n\u524d\u7f00\u548c+\u5f53\u524d\u6700\u8fdc\u8ddd\u79bb*2\n```\n------------------\n\n\u4e0d\u77e5\u9053\u5927\u5bb6\u770b\u61c2\u6ca1\u6709\uff0c\u53cd\u6b63\u6211\u8fd9\u4e2a\u4eba\u4e00\u5411\u770b\u4e0d\u61c2\u522b\u4eba\u7684\u601d\u8def\u3002\u4e0d\u8fc7\u8fd9\u4e5f\u7ed9\u4e86\u6211\u4e00\u70b9\u542f\u53d1\n\nQ:\u4e3a\u4ec0\u4e48\u4e0d\u7528DP\uff1f\n\nA:\u56e0\u4e3aDP\u4f1a\u8d85\u65f6\uff0c\u800c\u4e14\u770b\u8fd9\u9053\u9898\u76ee\u53ea\u662f15\u5e74\u666e\u53ca\u7ec4\u7684T3\uff0c\u7528\u4e0d\u7740\n\n~~\u4f60\u4eec\u6700\u7231\u7684\u5b8c\u6574\u4ee3\u7801~~\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#define Inf 0x3f3f3f3f\n\nusing namespace std;\n\nconst int MAXN = 100000 + 5;\nstruct Node {\n\tint Far, Cost;\n} a[MAXN];\nint n, maxValue, list[MAXN];\ninline bool Rule(const Node &a, const Node &b)\n\t{ return ((a.Cost == b.Cost) && (a.Far > b.Far)) || (a.Cost > b.Cost); }\n\nsigned main() {\n\tscanf(\"%d\", &n);\n\tfor (register int i = 1; i <= n; ++i) scanf(\"%d\", &a[i].Far);\n\tfor (register int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d\", &a[i].Cost);\n\t\tif ((a[i].Far << 1) + a[i].Cost > (a[maxValue].Far << 1) + a[i].Cost)\n\t\t\tmaxValue = i;\n\t}\n\t\n\ta[0] = a[maxValue];\n\ta[maxValue] = Node{-Inf, -Inf};\n\tstable_sort(a + 1, a + 1 + n, Rule);\n\n\tfor (register int i = 0; i < n; ++i)\n\t\tlist[i] = max(list[i - 1], a[i].Far);\n\tint and_ = 0;\n\tfor (register int i = 0; i < n; ++i) {\n\t\tand_ += a[i].Cost;\n\t\tprintf(\"%d\\n\", and_ + (list[i] << 1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1563799529,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "[P2672 \u63a8\u9500\u5458](https://www.luogu.org/problemnew/show/P2672)\n\n\u5f53x=n\u65f6\uff0c\u5168\u90e8\u90fd\u8981\u8d70\u4e00\u904d\uff0c\u503cans[n]\u5fc5\u7136\u4e3a2\\*d[n]+sum{a[i]}(1<=i<=n)\uff0c\u5176\u4e2dd[i]\u4e3a\u8ddd\u79bb\uff0ca[i]\u4e3a\u63a8\u9500\u6d88\u8017\n\n\u5f53x=n-1\u65f6\uff0c\u8981\u79fb\u8d70\u4e00\u5bb6\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff1a  \n1. \u6700\u540e\u4e00\u5bb6\uff0c\u503c\u66f4\u65b0\u4e3aans[n]-(d[n]-d[n-1])\\*2-a[n]\n2. 1->n-1\u4e2da[i]\u6700\u5c0f\u7684\u90a3\u5bb6\uff0c\u503c\u66f4\u65b0\u4e3aans[n]-min{a[i]} (1<=i<n)\n\n\u73b0\u5728\u53ea\u987b\u6bd4\u8f83min{a[i]}\u548c(d[n]-d[n-1])\\*2-a[n]\u8c01\u66f4\u5c0f\u3002\n\n\u5c061->n-1\u4f9da[i]\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002  \n\u8bbenow\u4e3a\u5f53\u524d\u5904\u7406\u7684\uff0c\u521d\u59cb\u503c\u4e3an   \n\u8bbepre\u4e3anow\u7684\u524d\u4e00\u4e2a\uff0c\u521d\u59cb\u503c\u4e3an-1   \n\u8bbedel[i]\u4e3a\u7b2ci\u5bb6\u5df2\u7ecf\u88ab\u79fb\u8d70\u7684\u6807\u5fd7\u3002  \n\n\u5982\u679c(d[now]-d[pre])\\*2+a[now]>=mi[i].v\uff0c\u5373\u79fb\u8d70\u524d\u9762\u7684\u6bd4\u8f83\u5408\u7b97\uff0c\u90a3\u4e48\uff1a\n```cpp\ndel[mi[i].i]=1; //mi[i].i\u88ab\u79fb\u8d70\nwhile(del[pre]) pre--; //\u79fb\u8d70\u7684mi[i].i\u53ef\u80fd\u662fpre\ni++; \nwhile(del[mi[i].i]) i++; //\u5bfb\u627e\u53ef\u7528\u7684\u6700\u5c0f\u503c\n```\n\u5426\u5219\u7684\u8bdd\u79fb\u8d70now\n```cpp\nnow=pre; //now\u66f4\u65b0\u4e3a\u524d\u4e00\u5bb6\ndel[pre]=1; //pre\u6210\u4e3a\u65b0\u7684\u6700\u540e\u4e00\u5bb6\uff0c\u56e0\u6b64\u4ece\u6700\u5c0f\u503c\u8868\u4e2d\u79fb\u8d70\npre--;\nwhile(del[pre]) pre--; //\u91cd\u65b0\u5bfb\u627e\u53ef\u7528\u7684\u524d\u4e00\u5bb6\n```\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint d[1000005],a[1000005],sum[1000005],del[1000005];\nstruct minD {\n\tint i,v;\n}mi[1000005];\n\nint cmp(minD a,minD b){\n\tif(a.v==b.v) return a.i<b.i;\n\treturn a.v<b.v;\n}\n\nint main(){\n\tint n;\n\tcin>>n;\t\n\tfor(int i=1;i<=n;i++) cin>>d[i];\n\tfor(int i=1;i<=n;i++) {\n\t\tcin>>a[i];\n\t\tsum[n]+=a[i];\n\t\tif(i<n){ //\u5efa\u7acb\u6700\u5c0f\u503c\u8868\uff0c\u4e0d\u5fc5\u5305\u542b\u6700\u540e\u4e00\u4e2a\n\t\t\tmi[i].v=a[i];\n\t\t\tmi[i].i=i;\n\t\t}\n\t}\n\tsum[n]+=2*d[n];\n\tsort(mi+1,mi+n,cmp);\n\tint now=n,pre=n-1,i=1,t=n;\n\twhile(--t){\n\t\tif((d[now]-d[pre])*2+a[now]>=mi[i].v){\n\t\t\tsum[t]=sum[t+1]-mi[i].v;\n\t\t\tdel[mi[i].i]=1;//mi[i].i\u88ab\u79fb\u8d70\n\t\t\twhile(del[pre]) pre--;\n\t\t\ti++;\n\t\t\twhile(del[mi[i].i]) i++;//\u5bfb\u627e\u53ef\u7528\u7684\u6700\u5c0f\u503c\n\t\t}\n\t\telse{\n\t\t\tsum[t]=sum[t+1]-(d[now]-d[pre])*2-a[now];\t\t\t\n\t\t\tnow=pre;//now\u66f4\u65b0\u4e3a\u524d\u4e00\u5bb6\n\t\t\tdel[pre]=1;\t//pre\u6210\u4e3a\u65b0\u7684\u6700\u540e\u4e00\u5bb6\uff0c\u56e0\u6b64\u4ece\u6700\u5c0f\u503c\u8868\u4e2d\u79fb\u8d70\n\t\t\tpre--;\n\t\t\twhile(del[pre]) pre--;\t//\u91cd\u65b0\u5bfb\u627e\u53ef\u7528\u7684\u524d\u4e00\u5bb6\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) cout<<sum[i]<<endl;\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1557075387,
        "uid": 92704,
        "name": "fdszlzl",
        "ccfLevel": 0,
        "title": "\u8d2a\u5fc3 | P2672 \u63a8\u9500\u5458"
    },
    {
        "content": "#### \u9898\u76ee\n\u963f\u660e\u662f\u4e00\u540d\u63a8\u9500\u5458\uff0c\u4ed6\u5949\u547d\u5230\u87ba\u4e1d\u8857\u63a8\u9500\u4ed6\u4eec\u516c\u53f8\u7684\u4ea7\u54c1\u3002\u87ba\u4e1d\u8857\u662f\u4e00\u6761\u6b7b\u80e1\u540c\uff0c\u51fa\u53e3\u4e0e\u5165\u53e3\u662f\u540c\u4e00\u4e2a\uff0c\u8857\u9053\u7684\u4e00\u4fa7\u662f\u56f4\u5899\uff0c\u53e6\u4e00\u4fa7\u662f\u4f4f\u6237\u3002\u87ba\u4e1d\u8857\u4e00\u5171\u6709$N$ \u5bb6\u4f4f\u6237\uff0c\u7b2c $i$ \u5bb6\u4f4f\u6237\u5230\u5165\u53e3\u7684\u8ddd\u79bb\u4e3a $Si$ \u7c73\u3002\u7531\u4e8e\u540c\u4e00\u680b\u623f\u5b50\u91cc\u53ef\u4ee5\u6709\u591a\u5bb6\u4f4f\u6237\uff0c\u6240\u4ee5\u53ef\u80fd\u6709\u591a\u5bb6\u4f4f\u6237\u4e0e\u5165\u53e3\u7684\u8ddd\u79bb\u76f8\u7b49\u3002\u963f\u660e\u4f1a\u4ece\u5165\u53e3\u8fdb\u5165\uff0c\u4f9d\u6b21\u5411\u87ba\u4e1d\u8857\u7684 $X$ \u5bb6\u4f4f\u6237\u63a8\u9500\u4ea7\u54c1\uff0c\u7136\u540e\u518d\u539f\u8def\u8d70\u51fa\u53bb\u3002   \u963f\u660e\u6bcf\u8d70 1 \u7c73\u5c31\u4f1a\u79ef\u7d2f 1 \u70b9\u75b2\u52b3\u503c\uff0c\u5411\u7b2c i \u5bb6\u4f4f\u6237\u63a8\u9500\u4ea7\u54c1\u4f1a\u79ef\u7d2f $Ai$ \u70b9\u75b2\u52b3\u503c\u3002\u963f\u660e\u662f\u5de5\u4f5c\u72c2\uff0c\u4ed6\u60f3\u77e5\u9053\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684 $X$\uff0c\u5728\u4e0d\u8d70\u591a\u4f59\u7684\u8def\u7684\u524d\u63d0\u4e0b\uff0c\u4ed6\u6700\u591a\u53ef\u4ee5\u79ef\u7d2f\u591a\u5c11\u70b9\u75b2\u52b3\u503c\u3002\n\n#### \u601d\u8def1\n\u6211\u4eec\u5206\u6790\u7b54\u6848\u7684\u7279\u5f81\uff1a\n\n\u5bf9\u4e8e\u6700\u7ec8\u7684\u7ed3\u679c\u800c\u8a00\uff0c\u6700\u540e\u4e00\u4e2a\u7b54\u6848\u4e00\u5b9a\u662f\u6240\u6709\u7684\u4f4f\u6237\u90fd\u53d6\u3002\n\n\u6b63\u96be\u5219\u53cd\uff0c\u65e2\u7136\u6700\u540e\u4e00\u4e2a\u5df2\u77e5\uff0c\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u5220\u9664\u5143\u7d20\u3002\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u800c\u8a00\uff0c\u5220\u9664\u5143\u7d20\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n1. \u82e5\u6700\u540e\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u628a\u5b83\u5220\u6389\uff0cS--\n2. \u5220\u9664\u524d\u9762\u7684\u5143\u7d20\uff0cS\u4e0d\u53d8\n\n\u63a5\u7740\u7528\u4e00\u4e2a\u94fe\u8868\u7ef4\u62a4\u8fd9\u4e9b\u4fe1\u606f\uff0c\u8fbe\u5230O(1)\u7684\u5220\u9664\u3002\n\n\u603b\u590d\u6742\u5ea6O(n)\n\n#### \u4ee3\u7801\n```c++\n#include<bits/stdc++.h>\n#define M 100005 \nusing namespace std;\nstruct node{\n    int num,x;\n}A[M];\nint n,S[M]; \nint mp[M],pre[M],nxt[M],dp[M],last,k; \nbool mark[M];\nvoid del(int x){\n    pre[nxt[x]]=pre[x];\n    nxt[pre[x]]=nxt[x];\n}\nbool cmp(node a,node b){\n    if(a.num!=b.num)\n        return a.num<b.num;\n    return a.x<b.x;\n}\nint find(bool f){\n    int num;\n    if(f){//last\u4e0d\u7528\u7ba1 \n        num=A[nxt[0]].num;\n        if(nxt[0]==last){//\u5220last \n            last=k;\n            k--;\n        }\n        mark[A[nxt[0]].x]=1;\n        del(nxt[0]);\n        return num;\n    }\n    else {\n        for(int i=nxt[0];i!=n+1;i=nxt[i]){\n            if(A[i].x!=last){\n                num=A[i].num;\n                mark[A[i].x]=1;\n                del(i);\n                return num;\n            }\n        }\n    }\n}\nint main(){\n    cin>>n;\n    int sum=0;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&S[i]);\n    S[0]=-1;\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&A[i].num),A[i].x=i,sum+=A[i].num;\n    sort(A+1,A+n+1,cmp);\n    for(int i=1;i<=n;i++)\n        mp[A[i].x]=i;\n    for(int i=0;i<=n+1;i++){\n        nxt[i]=i+1;\n        pre[i]=i-1;\n    }\n    dp[n]=S[n]*2+sum;\n    last=n;\n    k=n-1;\n    for(int i=n-1;i>=1;i--){\n        while(1){\n            if(!mark[k])break;\n            k--;\n        }\n        int n1,n2;bool flag=0;\n        if(S[last]==S[k])n1=2e9,flag=1;\n        else n1=A[mp[last]].num+2*(S[last]-S[k]);\n        n2=find(flag);\n        if(n1<n2){\n            del(mp[last]);\n            last=k;\n            k--;\n            dp[i]=dp[i+1]-n1;\n        }else {\n            dp[i]=dp[i+1]-n2;\n        }\n    }\n    for(int i=1;i<=n;i++)\n        printf(\"%d\\n\",dp[i]); \n    return 0;\n}\n```\n#### \u601d\u8def2\n\u7ef4\u62a4\u4e24\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u4ecd\u7136\u662f\u9012\u63a8\u7684\u601d\u8def\uff0c\u5373\u5c06\u524d\u9762\u7684n\u4e2a\u70b9\u7b97\u51fa\u6765\uff0c\u63a5\u7740\u518d\u8003\u8651n+1\u8fd9\u4e2a\u70b9\uff0c\u800c\u8fd9\u4e2a\u70b9\u8981\u4e48\u5728\u5de6\uff0c\u8981\u4e48\u5728\u53f3\u3002\u5177\u4f53\u53ef\u89c1hsfzLZH1\u7684\u535a\u5ba2\uff0c\u8bb2\u5f97\u5f88\u6e05\u695a\u660e\u767d\u4e86\u3002\n\n[hzfzLZH1\u7684\u535a\u5ba2](https://www.luogu.org/blog/hsfzLZH1/solution-p2672)\n",
        "postTime": 1532231873,
        "uid": 46787,
        "name": "zeroy0410",
        "ccfLevel": 0,
        "title": "NOIP2015\uff08\u666e\u53ca\u7ec4\uff09 \u63a8\u9500\u5458"
    },
    {
        "content": "\u8bf4\u4e0b\u6211\u7684\u60f3\u6cd5\u5427\u3002\n\u8003\u8651\u4e00\u4e2a\u4eba\u7684\u8d21\u732e\u53ea\u53ef\u80fd\u662f\u4ed6\u81ea\u5df1\u7684A\u4ee5\u53ca\u4ed6\u7684\u4f4d\u7f6eD\uff0c\u6211\u4eec\u8003\u8651\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u8d70\u7684\u6700\u8fdc\u8ddd\u79bbdist\uff0c\u90a3\u4e48\u4e00\u4e2a\u4eba\u7684\u8d21\u732e\u5c31\u5e94\u8be5\u662f $\\max(0,2*(D_i-dist))+A_i$ \n\n\u8003\u8651\u5206\u522b\u6309\u7167$2*D+A$\u4e0e$A$\u6392\u5e8f\u51fa\u4e24\u4e2a\u6570\u7ec4\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5927\u7684\u6ca1\u6709\u88ab\u6807\u8bb0\u7684\u70b9(\u53ea\u53ef\u80fd\u662f\u4e24\u4e2a\u6570\u7ec4\u7684\u9996\u4f4d\u8f83\u5927\u7684\u90a3\u4e2a\uff09\uff0c\u66f4\u65b0\u7b54\u6848\u4e0e$dist$\uff0c \u5e76\u4e14\u6253\u4e0a\u6807\u8bb0\u3002\n\n\u8003\u8651\u5230\u4e24\u4e2a\u6570\u7ec4\u91cc\u9762\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u8d21\u732e\u90fd\u662f\u5355\u8c03\u4e0d\u589e\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u5e94\u8be5\u662f\u6b63\u786e\u7684\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u4e3a $O(N\\log N)$ \n\nPS\uff1a\u5982\u679c\u80fd\u88abhack\u6b22\u8fcehack\u3002\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <fstream>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <ctime>\n#include <queue>\n#include <stack>\n#include <map>\nusing namespace std;\n\nstruct person\n{\n    int p;\n    int d;\n    int v;\n    bool operator = (const person &t)\n    {\n        p = t.p;\n        d = t.d;\n        v = t.v;\n    }\n};\n\nconst int MAXN = 100000 + 10;\nint D;\nint n;\nperson a[MAXN], b[MAXN];\nbool visit[MAXN];\n\nbool compare1(const person &a, const person &b)\n{\n    return a.d + a.v > b.d + b.v;\n}\n\nbool compare2(const person &a, const person &b)\n{\n    return a.v > b.v;\n}\n\nint read()\n{\n    int x;\n    scanf(\"%d\", &x);\n    return x;\n}\n\nint main()\n{\n    n = read();\n    for (int i = 1; i < n + 1; ++i)\n    {\n        a[i].d = read();\n        a[i].d *= 2;\n    }\n    for (int i = 1; i < n + 1; ++i)\n    {\n        a[i].v = read();\n        a[i].p = i;\n        b[i] = a[i];\n    }\n    sort(a + 1, a + n + 1, compare1);\n    sort(b + 1, b + n + 1, compare2);\n    int i = 1, j = 1, k = 0, ans = 0;\n    while (k < n)\n    {\n        while (i <= n && (visit[a[i].p] || a[i].d < D))\n            ++i;\n        while (j <= n && visit[b[j].p])\n            ++j;\t\n        if (a[i].d - D + a[i].v > b[j].v)\n        {\n            visit[a[i].p] = true;\n            ans += a[i].d - D + a[i].v;\n            D = max(D, a[i].d);\n        }\n        else\n        {\n            visit[b[j].p] = true;\n            ans += b[j].v;\n        }\n        printf(\"%d\\n\", ans);\n        ++k;\n    }\n    return 0;\n}\n```",
        "postTime": 1531624389,
        "uid": 25739,
        "name": "scallop",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u79cd\u9b3c\u755c\u505a\u6cd5\u54b3\u54b3\n\n\u9996\u5148\u5c31\u662f\u5206\u6790\u9898\u76ee\n\n##\u8981\u964d\u4f4e\u6c42\u6700\u5927\u503c\u7684\u65f6\u95f4\n\n\u8fd9\u57fa\u672c\u5c31\u7ed9\u6211\u4eec\u786e\u5b9a\u51e0\u79cd\u601d\u8def\u4e86\n\n1.\u58062.\u7ebf\u6bb5\u6811\n\n\u8fd9\u91cc\u662f\u4e00\u4e2a~~\u5de8\u4e11~~\u7f8e\u4e3d\u7684\u624b\u5199\u5806\n\n\u5c31\u662f\u6bcf\u4e00\u6b21\u6211\u4eec\u8bb0\u5f55\u6700\u8fdc\u7684\u5df2\u9009\u7684\u70b9\n\n\u5de6\u8fb9\u53d6\u5806\u9876\uff0c\u53f3\u8fb9\u679a\u4e3e\n\n\u7136\u540e\u6bd4\u8f83\u4e00\u4e0b\u5927\u5c0f\n\n\u5982\u679c\u9009\u4e86\u53f3\u8fb9\u7684\u8bdd\u5c31\u8981\u628a\u4e24\u6b21\u7684\u7aef\u70b9\u4e2d\u95f4\u7684\u6240\u6709\u5143\u7d20\u52a0\u5165\u5806\u4e2d\n\n\u5de6\u8fb9\u7684\u8bdd\u5c31\u628a\u5806\u9876\u5220\u6389\u5c31\u53ef\u4ee5\u4e86\n\n\u5bf9\u4e0d\u8d77\u5927\u5bb6\uff0c\u8fd9\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u771f\u7684\u4e0d\u4f1a\u7b97\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\nusing namespace std;\nstruct Node\n{\n    int t;\n    int s;\n};\nstruct Node m[100000];\nstruct Node e;\nvoid verify_heap(int x,int y)\n{\n    int p,j;\n    p=x;\n    if(2*x+2<y)\n    {\n        if(m[2*x+2].t>m[p].t)\n        {\n            p=2*x+2;\n        }\n    }\n    if(2*x+1<y)\n    {\n        if(m[2*x+1].t>m[p].t)\n        {\n            p=2*x+1;\n        }\n    }\n    if(p!=x)\n    {\n        e=m[p];\n        m[p]=m[x];\n        m[x]=e;\n        verify_heap(p,y);\n    }\n}\nvoid build(int n)\n{\n    int i;\n    for(i=(n-1)/2; i>=0; i--)\n    {\n        verify_heap(i,n);\n    }\n}\nvoid insert_heap(int x,int y,int z)\n{\n    int j,a,n,l;\n    a=z-y+1;\n    for(j=0;j<a;j++)\n    {\n        m[x+j]=m[y+j];\n        l=1;\n        n=x+j;\n        while(m[(n-1)/2].t<m[n].t)\n        {\n            e=m[n];\n            m[n]=m[(n-1)/2];\n            m[(n-1)/2]=e;\n            n=(n-1)/2;\n        }\n    }\n}\nint main()\n{\n    int n,i,l,p,c,y,ln,a,j;\n    scanf(\"%d\",&n);\n    for(i=0; i<n; i++)\n    {\n        scanf(\"%d\",&m[i].s);\n    }\n    scanf(\"%d\",&m[0].t);\n    p=2*m[0].s+m[0].t;\n    c=0;\n    for(i=1; i<n; i++)\n    {\n        scanf(\"%d\",&m[i].t);\n        if(2*m[i].s+m[i].t>p)\n        {\n            p=2*m[i].s+m[i].t;\n            c=i;\n        }\n    }\n    printf(\"%d\\n\",p);\n    build(c);\n    y=c+1;\n    l=2*(m[y].s-m[c].s)+m[y].t;\n    ln=c;\n    for(i=c+2; i<n; i++)\n    {\n        if(2*(m[i].s-m[c].s)+m[i].t>l)\n        {\n            l=2*(m[i].s-m[c].s)+m[i].t;\n            y=i;\n        }\n    }\n    for(i=1; i<n; i++)\n    {\n        if(m[0].t>l)\n        {\n            p+=m[0].t;\n            m[0].t=m[ln-1].t;\n            ln--;\n            verify_heap(0,ln);\n        }\n        else\n        {\n            p+=l;\n            insert_heap(ln,c+1,y-1);\n            c=y;\n            y=c+1;\n            l=2*(m[y].s-m[c].s)+m[y].t;\n            for(j=c+2; j<n; j++)\n            {\n                if(2*(m[j].s-m[c].s)+m[j].t>l)\n                {\n                    l=2*(m[j].s-m[c].s)+m[j].t;\n                    y=j;\n                }\n            }\n        }\n        printf(\"%d\\n\",p);\n    }\n    return 0;\n}\n```",
        "postTime": 1508328587,
        "uid": 23145,
        "name": "hanyuwei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\n\n```cpp\n//disigned by sweetangle\n#include<iostream> \nusing namespace std;\nconst int maxn = 200010;\nstruct node\n{\n```\nint\n\n```cpp\n     l, //\u5de6\u754c;\n     r, //\u53f3\u754c;\n     c, //\u533a\u95f4\u6700\u5927\u8d21\u732e\u503c; \n     d, //\u4f5c\u7528\u4e8e\u533a\u95f4\u7684\u589e\u91cf;\n     p; //\u533a\u95f4\u6700\u5927\u503c\u5728\u54ea\u4e00\u4e2a\u70b9; \n}tree[3*maxn];\n```\nint\n\n\n  \n  \n  \n  \n\n\n  \n      \n  \n  \n  \n   \n\n \n\n\n    \n    \n    \n      \n      \n      \n        \n      \n    \n   \n```cpp\n   n,        //\u603b\u4e2a\u6570;\n   now,      //\u5df2\u7ecf\u9009\u62e9\u70b9\u4e2d,\u6700\u5927\u7684\u4f4d\u7f6e\u4f4d\u4e8e\u54ea\u4e00\u4e2a\u70b9;\n   last,     //\u4e0a\u6b21\u9009\u62e9\u7684\u70b9\u4e2d,~~~~~~~~~~~~~~~~~~~~;\n   s[maxn],  //\u7b2ci\u4e2a\u76ee\u6807\u7684\u8ddd\u79bb,\u9884\u5148*2; \n   a[maxn],  //\u7b2ci\u4e2a\u76ee\u6807\u7684\u75b2\u52b3\u503c; \n   ans[maxn];//\u9009i\u4e2a\u76ee\u6807\u65f6\u7684\u6700\u5927\u503c; \nvoid PushUp(int rt)\n{\n  if(tree[rt*2].c >= tree[rt*2+1].c)\n  {\n      tree[rt].p = tree[rt*2].p;\n    tree[rt].c = tree[rt*2].c;\n  }\n  else\n  {\n    tree[rt].p = tree[rt*2+1].p;\n    tree[rt].c = tree[rt*2+1].c;\n  }\n  //\u56de\u6eaf\u65f6\u5c06\u6536\u96c6\u4fe1\u606f,\u66f4\u65b0 tree[rt].c ; \n}\nvoid creat(int rt,int l,int r)\n{\n  tree[rt].l = l;\n  tree[rt].r = r;\n  if(l == r)\n  {\n      tree[rt].p = l;\n    tree[rt].c = a[l] + s[l]; //\u66f4\u65b0\u53f6\u8282\u70b9;\n    return;\n  }\n  creat(rt*2,l,(l+r)/2);\n  creat(rt*2+1,(l+r)/2+1,r);\n  PushUp(rt);\n  //\u5efa\u7acb\u521d\u59cb\u72b6\u6001; \n}\nvoid PushDown(int rt)\n{\n  if(tree[rt].d)\n  {\n    tree[rt*2].d += tree[rt].d;\n    tree[rt*2].c += tree[rt].d;\n    tree[rt*2+1].d += tree[rt].d;\n    tree[rt*2+1].c += tree[rt].d;\n    tree[rt].d = 0;\n  }\n  //\u5ef6\u65f6\u66f4\u65b0,\u5411\u4e0b\u4f20\u9012\u533a\u95f4\u589e\u91cf; \n}\nvoid updata(int rt,int l,int r,int dlt)\n{\n  //cout<<rt<<\" \"<<tree[rt].l<<\" \"<<tree[rt].r<<\" \"<<tree[rt].c<<\" \"<<tree[rt].d<<\" \"<<tree[rt].p<<endl;\n  if(tree[rt].r<l || r<tree[rt].l)\n    return;\n  if(l<=tree[rt].l && tree[rt].r<=r)\n  {\n    tree[rt].d += dlt;\n    tree[rt].c += dlt; \n    if(dlt == -(1<<22))\n      tree[rt].c = dlt;\n    //\u5c06\u8be5\u8282\u70b9\u62b9\u53bb;\n    //cout<<rt<<\" \"<<tree[rt].l<<\" \"<<tree[rt].r<<\" \"<<tree[rt].c<<\" \"<<tree[rt].d<<\" \"<<tree[rt].p<<endl;\n    return;\n  }\n  PushDown(rt);\n  //\u533a\u95f4\u76f8\u4ea4,\u5411\u4e0b\u63a8\u9001\u589e\u91cf; \n  updata(rt*2,l,r,dlt);\n  updata(rt*2+1,l,r,dlt);\n  PushUp(rt);\n  //\u56de\u6eaf;\n  //cout<<rt<<\" \"<<tree[rt].l<<\" \"<<tree[rt].r<<\" \"<<tree[rt].c<<\" \"<<tree[rt].d<<\" \"<<tree[rt].p<<endl;\n}\nint main()\n{\n  scanf(\"%d\",&n);\n  for(int i=1;i<=n;i++)\n  {\n    scanf(\"%d\",&s[i]);\n    s[i] *= 2;\n    //\u9884\u5904\u7406; \n  }\n  for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n  creat(1,1,n);\n  for(int i=1;i<=n;i++)\n  {    \n    //cout<<endl<<endl<<tree[1].p<<endl;\n    ans[i] = ans[i-1]+tree[1].c;\n    //tree[1].c\u4e3a\u6574\u4e2a\u533a\u95f4\u6700\u5927\u8d21\u732e\u503c; \n    if(i == n)\n      break;\n    if(tree[1].p>last)\n    { \n      //\u82e5\u6700\u5927\u8d21\u732e\u503c\u53d1\u751f\u7684\u8ddd\u79bb(tree[1].p)\u5927\u4e8e\u4e0a\u6b21\u6700\u5927\u8ddd\u79bb(last);\n      now = tree[1].p;\n      //\u66f4\u65b0\u672c\u6b21\u9009\u62e9\u6700\u5927\u8ddd\u79bb; \n      //cout<<\" \"<<now<<endl;\n      for(int i=last+1;i<now;i++)\n        updata(1,i,i,-s[i]);\n      //\u5c06last+1 ~ now \u8303\u56f4\u5185\u7684\u70b9\u7684\u8d21\u732e\u503c\u5236\u4e3a\u8be5\u70b9\u75b2\u52b3\u503c;\n      updata(1,now+1,n,-(s[now]-s[last]));\n      //\u5c06now ~ n \u8303\u56f4\u5185\u7684\u70b9\u7684\u8d21\u732e\u503c\u66f4\u6b63;\n      last = now;\n      //\u66f4\u65b0\"\u4e0a\u6b21\"\u6700\u5927\u8ddd\u79bb;\n    }\n    updata(1,tree[1].p,tree[1].p,-(1<<22));\n    //\u62b9\u53bb\u672c\u6b21\u9009\u62e9\u7684\u70b9(tree[rt].p); \n  }\n  for(int i=1;i<=n;i++)\n    printf(\"%d\\n\",ans[i]);\n  //\u8f93\u51fa\u6700\u7ec8\u7b54\u6848; \n  return 0;\n}\n```",
        "postTime": 1506594867,
        "uid": 28984,
        "name": "_\u8bf8\u795e\u9ec4\u660f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811 \u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\u6b63\u89e3\n\n\u6211\u4eec\u5148\u5efa\u6811\u3002\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u4fe1\u606f\u662f\u5bf9\u5e94\u53bb\u7b2ci\u5bb6\u63a8\u9500\u6240\u5f97\u7684\u75b2\u52b3\u503c\uff08\u5305\u62ec\u8def\u9014\\*2\uff09\uff0c\u7136\u540e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u63a5\u7740\uff0c\u8fd9\u91cc\u7528\u5230\u4e00\u4e2a\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\u6bcf\u6b21\u90fd\u53bb\u5f53\u524d\u770b\u8d77\u6765\u75b2\u52b3\u503c\u6700\u5927\u7684\u90a3\u4e00\u5bb6\uff0c\u800c\u4e14\u540e\u4e00\u4e2a\u7b54\u6848\u80af\u5b9a\u662f\u7531\u524d\u4e00\u4e2a\u7b54\u6848\u52a0\u4e0a\u5f53\u524d\u6700\u5927\u75b2\u52b3\u503c\u3002\n\n\u610f\u601d\u5c31\u662f\uff0c\u6211\u4eec\u53ea\u8981\u6bcf\u4e00\u6b21\u53d6\u51fa\u6811\u6839\u8282\u70b9\u7684\u6700\u5927\u503c\uff0c\u6bcf\u6b21\u76f8\u52a0\u8f93\u51fa\u7b54\u6848\u518d\u66f4\u65b0\u5c31\u597d\u4e86\u3002\n\n1\u3001\u7ef4\u62a4\u6700\u5927\u503c\u7684\u65f6\u5019\u8981\u8bb0\u5f55\u6700\u5927\u503c\u662f\u7b2c\u51e0\u5bb6\uff0c\u4fbf\u4e8e\u786e\u5b9a\u66f4\u65b0\u3002\n\n2\u3001\u5173\u4e8e\u66f4\u65b0\uff1a\u5047\u8bbe\u5f53\u524d\u7684\u6700\u5927\u503c\u8981\u6c42\u6211\u4eec\u8d70\u5230\u7b2cx\u5bb6\uff0c\u90a3\u4e48\u524dx-1\u5bb6\u7684\u75b2\u52b3\u503c\u5c31\u53ea\u5269\u4e0b\u4ed6\u4eec\u5404\u81ea\u63a8\u9500\u7684\u75b2\u52b3\u503c\u4e86\uff08\u56e0\u4e3a\u8def\u9014\u5df2\u7ecf\u8d70\u8fc7\u4e86\uff09\uff0c\u800c\u540e\u9762\u7b2cx+1\u5bb6\u5230\u7b2cn\u5bb6\u7684\u75b2\u52b3\u503c\u5c31\u6070\u597d\u5168\u90e8\u51cf\u53bb\u4e86\u8d70\u5230\u7b2cx\u5bb6\u6240\u7528\u7684\u8def\u9014\u3002\u90a3\u4e48\u8fd9\u91cc\u5148\u7528\u4e00\u4e2alast\u8bb0\u5f55\u4e0a\u4e00\u6b21\u8d70\u5230\u4e86\u54ea\u4e00\u5bb6\uff0c\u7136\u540e\u6839\u636e\u65b0\u6700\u5927\u503cres\u7684\u7f16\u53f7\u662f\u5426\u5927\u4e8elast\u6765\u786e\u5b9a\u662f\u5426\u66f4\u65b0\uff0c\u66f4\u65b0\u65f6\u5de6\u8fb9\u7684\u90e8\u5206\u662f\u76f4\u63a5\u5168\u90e8\u8bbf\u95ee\u5230\u53f6\u5b50\u8282\u70b9\u66f4\u65b0\uff08\u8fd9\u6837\u66f4\u65b0\u7684\u8bdd\uff0c\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u590d\u6742\u5ea6\u7684\u95ee\u9898\uff09\uff0c\u53f3\u8fb9\u7684\u8bdd\u5c31\u7528\u4e00\u4e2alazy\u6807\u8bb0\u8bb0\u5f55\u51cf\u53bb\u7684\u503c\uff0c\u9002\u65f6\u4e0b\u653e\u5c31\u597d\u4e86\u3002\n\n3\u3001\u8bb0\u5f97\u4e00\u5bb6\u53bb\u8fc7\u4ee5\u540e\u5c31\u4e0d\u80fd\u518d\u53bb\u4e86\uff0c\u6240\u4ee5\u8981\u5220\u9664\uff0c\u6700\u76f4\u63a5\u7684\u5c31\u662f\u76f4\u63a5\u7f6e\u4e3a0\u3002\n\n\n\u57fa\u672c\u4e0a\u5c31\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u6a21\u677f\uff0c\u6a21\u5757\u5316\u64cd\u4f5c\u6253\u8d77\u6765\u6bd4\u8f83\u8212\u670d\uff0c\u8dd1\u7684\u4e5f\u633a\u5feb\u7684\u3002\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=100005;\nstruct tree\n{\n    int v;\n    int num,lazy;\n}t[N<<2];\nint n,res,last,ans,S[N],A[N];\nint gi()\n{\n    int x=0;char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x;\n}\nvoid Update(int now)\n{\n    if (t[now<<1].v>=t[now<<1|1].v) //\u7b49\u4e8e\u53d6\u54ea\u8fb9\u65e0\u6240\u8c13 \n    {\n        t[now].v=t[now<<1].v;t[now].num=t[now<<1].num;\n    }\n    else\n    {\n        t[now].v=t[now<<1|1].v;t[now].num=t[now<<1|1].num;\n    }\n}\nvoid Build(int now,int l,int r)\n{\n    if (l==r)\n    {\n        t[now].v=2*S[l]+A[l];\n        t[now].num=l;\n        return;\n    } \n    int mid=l+r>>1;\n    Build(now<<1,l,mid);\n    Build(now<<1|1,mid+1,r);\n    Update(now);\n}\nvoid Push_down(int now)\n{\n    t[now<<1].v+=t[now].lazy;\n    t[now<<1|1].v+=t[now].lazy;\n    t[now<<1].lazy+=t[now].lazy;\n    t[now<<1|1].lazy+=t[now].lazy;\n    t[now].lazy=0;\n}\nvoid Change(int now,int l,int r)\n{\n    if (r<=last) return;\n    if (l>res)\n    {\n        t[now].v-=2*(S[res]-S[last]);\n        t[now].lazy-=2*(S[res]-S[last]);\n        return;\n    }\n    if (l==r)\n    {\n        t[now].v=A[l];\n        return;\n    }\n    if (t[now].lazy!=0) Push_down(now);\n    int mid=l+r>>1;\n    Change(now<<1,l,mid);\n    Change(now<<1|1,mid+1,r);\n    Update(now);\n}\nvoid Delete(int now,int l,int r)\n{\n    if (l==res&&r==res)\n    {\n        t[now].v=0;\n        return;\n    }\n    if (t[now].lazy!=0) Push_down(now);\n    int mid=l+r>>1;\n    if (res<=mid) Delete(now<<1,l,mid);\n    else Delete(now<<1|1,mid+1,r);\n    Update(now);\n}\nint main()\n{\n    n=gi();\n    for (int i=1;i<=n;i++)\n      S[i]=gi();\n    for (int i=1;i<=n;i++)\n      A[i]=gi();\n    Build(1,1,n);\n    for (int i=1;i<=n;i++)\n    {\n        printf(\"%d\\n\",t[1].v+ans);\n        ans+=t[1].v;\n        res=t[1].num;\n        if (res>last)\n        {\n            Change(1,1,n);\n            last=res;\n        }\n        Delete(1,1,n);\n    }\n    return 0;\n}\n```",
        "postTime": 1501481635,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u770b\u5230\u5404\u4f4d\u5927\u795e\u4eec\u5199\u4e86\u8fd9\u4e48\u591a\u5947\u5947\u602a\u602a\u7684\u4ee3\u7801\uff0c\u611f\u89c9\u81ea\u5df1\u597d\u6e3a\u5c0f\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n\u3010\u601d\u8def\u3011\n\n\u770b\u6570\u636e\u8303\u56f4\uff0c\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0cn<=100000\uff0cO\uff08n2\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u80af\u5b9a\u8981\u8d85\u65f6\u7684\u3002\u6253\u66b4\u529b\u5c31\u662fO\uff08n2\uff09\uff0c60\u5206\u3002\u8981\u62ff100\u5206\uff0c\u9664\u4e86\u5176\u4ed6\u5927\u795e\u4eec\u7528\u7684\u7ebf\u6bb5\u6811\u3001\u4f18\u5148\u961f\u5217\u7b49\u6570\u636e\u7ed3\u6784\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u6a21\u62df\u7684\u7b97\u6cd5\u3002\u9996\u5148\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u4e24\u4e2a\u7ed3\u6784\u4f53\uff0c\u7b2c\u4e00\u4e2a\u662f\u5b58\u50a8\u57fa\u672c\u4fe1\u606f\uff0c\u5305\u62ecs\uff08\u8ddd\u79bb\uff09\uff0ca\uff08\u63a8\u9500\u65f6\u7684\u75b2\u52b3\u503c\uff09\uff0c\u548call\uff08\u5355\u72ec\u5bf9\u6bcf\u5bb6\u63a8\u9500\u4f1a\u6d88\u8017\u591a\u5c11\u75b2\u52b3\u503c\uff09\u3002\u7b2c\u4e8c\u4e2a\u91cc\u9762\u6709\u7f16\u53f7\u548c\u63a8\u9500\u65f6\u7684\u75b2\u52b3\u503c\uff0c\u662f\u505a\u6570\u7ec4\u7528\u7684\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8981\u5bf9all\u8fdb\u884c\u4e00\u79cd\u7279\u6b8a\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u5177\u4f53\u8bf7\u770b\u4e0b\u56fe\uff1a\n\nAll\uff1a 15  7  88  46  97  14  8  12\n\n\u2460   \u2461      \u2462\n\n\uff081\uff09    \u5bf9\u6574\u4e2aall\u9009\u62e9\u6700\u5927\u503c\uff0c\u6807\u4e3a\u2460\uff08\u5b58\u50a8\u5230sorting\u6570\u7ec4\u91cc\u9762\u76f8\u5bf9\u5e94\u7684\u4e0b\u6807\u91cc\uff09\n\n\uff082\uff09    \u5728\u2460\u4e0b\u6807\u540e\u9762\u7684\u4f4d\u6570\u91cc\u9762\u518d\u9009\u4e00\u6b21\u6700\u5927\u503c\uff0c\u6807\u4e3a\u2461\uff08\u5b58\u50a8\u5230sorting\u6570\u7ec4\u91cc\u9762\u76f8\u5bf9\u5e94\u7684\u4e0b\u6807\u91cc\uff09\n\n\uff083\uff09    \u7ee7\u7eed\u8fd9\u6837\u7684\u64cd\u4f5c\u76f4\u5230\u9009\u5230\u4e86\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u8df3\u51fa\u5faa\u73af\u3002\n\n\n\u73b0\u5728\uff0c\u6700\u91cd\u8981\u7684\u6b65\u9aa4\u5f00\u59cb\u4e86\uff01\u6beb\u65e0\u7591\u95ee\uff0cX=1\u7684\u60c5\u51b5\u4e0b\u75b2\u52b3\u503c\u662fsorting[1]\u7684all\u3002\u5728\u5904\u7406\u4e0b\u4e00\u4e2a\uff08sorting[2]\uff09\u4e4b\u524d\uff0c\u8981\u5148\u505a\u4e00\u4e9b\u9884\u5904\u7406\uff1a\u5c06\u6240\u6709\u4e0b\u6807\u5c0f\u4e8esorting[1]\u7684\u90fd\u6254\u8fdb\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\u91cc\u9762\uff0c\u7136\u540e\u5bf9a\uff08\u63a8\u9500\u65f6\u7684\u75b2\u52b3\u503c\uff09\u8fdb\u884c\u6392\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff09\uff0c\u7531\u4e8es\u662f\u9012\u589e\u7684\uff0c\u5982\u679cs\u662f\u5c0f\u4e8esorting[1]\u7684s\u7684\u8bdd\u5c31\u4e0d\u7528\u518d\u8003\u8651\u4e86\uff0c\u6240\u4ee5\u53ea\u6309\u7167a\u8fdb\u884c\u6392\u5e8f\u3002\u5728\u8ba1\u7b97X=2\u65f6\uff0c\u6709\u4e24\u79cd\u53d6\u503c\uff0c\u4e00\u79cd\u662f\u53d6\u7b2c\u4e8c\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4f4d\uff08\u56e0\u4e3a\u662f\u4ece\u5c0f\u5230\u5927\u7684\uff09\uff0c\u6216\u8005\u662f\u53d6sorting[2]\uff0c\u8fd9\u6837X=2\u5c31\u8ba1\u7b97\u597d\u4e86\u3002\u5f53sorting[2]\u5df2\u7ecf\u8ba1\u7b97\u597d\u4e86\u4ee5\u540e\uff0c\u5c31\u628asorting[1]+1\u5230sorting[2]-1\u4e4b\u95f4\u7684\u6570\u636e\u4e5f\u6254\u8fdb\u53bb\uff0c\u540c\u6837\u6392\u5e8f\u3002\u4e0b\u9762\u7684X\uff0c\u53ea\u8981\u7ee7\u7eed\u8fd9\u6837\u8ba1\u7b97\uff0c\u5c31\u53ef\u4ee5\u7b97\u51fa\u7ed3\u679c\u3002\n\n\u4e0b\u9762\u653e\u4e0a\u534e\u4e3d\u7684C++100\u5206\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nstruct data\n{\n    int a;\n    int s;\n    int all;\n} td1[100001];\nstruct node\n{\n    int a;\n    int num;\n} td2[100001];\nint sorting[100001],ans[100001];\nint dts(int l,int r)\n{\n    int maxx=-1,k=0;\n    for(int i=l;i<=r;i++)\n      if(td1[i].all>=maxx)\n        {\n            maxx=td1[i].all;\n            k=i;\n        }\n    return k;\n}\nint cmp(const node &k1,const node &k2)\n{\n    if(k1.a<k2.a) return 1;\n    else return 0;\n}\nint main()\n{\n    //freopen(\"in.txt\",\"r\",stdin); \n    int n,l=1,r,hms=0,h=0,len;\n    scanf(\"%d\",&n);\n    r=n;\n    for(int i=1;i<=n;i++)\n      scanf(\"%d\",&td1[i].s);\n    for(int i=1;i<=n;i++)\n      scanf(\"%d\",&td1[i].a);\n    for(int i=1;i<=n;i++)\n      td1[i].all=td1[i].s*2+td1[i].a; \n    while(1)\n    {\n        int temp;\n        temp=dts(l,r);\n        sorting[++hms]=temp;\n        if(temp==n) break;\n        l=sorting[hms]+1;\n    }\n    for(int i=1;i<=(hms!=1?(hms-1):hms);i++)\n    {\n        if(i==1)\n        {\n            ans[++h]=td1[sorting[1]].all;\n            for(int j=1;j<=sorting[1]-1;j++)\n            {\n                td2[j].a=td1[j].a;\n                td2[j].num=j;\n            }\n            len=sorting[1]-1;\n            sort(td2+1,td2+len+1,cmp);\n            if(hms==1) break;\n        }\n        int ck=(td1[sorting[i+1]].s-td1[sorting[i]].s)*2+td1[sorting[i+1]].a;\n        for(int j=len;;j--)\n        {\n            if(td1[td2[j].num].a>ck)\n            {\n                ans[++h]=ans[h-1]+td1[td2[j].num].a;\n                len--;\n            }\n            else break;\n        }\n        ans[++h]=ans[h-1]+ck;\n        for(int j=sorting[i]+1;j<=sorting[i+1]-1;j++)\n        {\n            td2[++len].num=j;\n            td2[len].a=td1[j].a;\n        }\n        sort(td2+1,td2+len+1,cmp);\n    }\n    for(int j=len;j>=1;j--)\n    {\n        ans[++h]=ans[h-1]+td1[td2[j].num].a;\n        len--;\n    }\n    for(int j=1;j<=n;j++)\n      printf(\"%d\\n\",ans[j]);\n    return 0;\n}\n```\n\u8bc4\u6d4b\u7ed3\u679c\uff1a\n#1 AC 0ms/14558kB\n\n#2 AC 60ms/14558kB\n\n#3 AC 0ms/14558kB\n\n#4 AC 0ms/14558kB\n\n#5 AC 0ms/14558kB\n\n#6 AC 0ms/14558kB\n\n#7 AC 0ms/14558kB\n\n#8 AC 52ms/14558kB\n\n#9 AC 52ms/14558kB\n\n#10 AC 64ms/14558kB\n",
        "postTime": 1499399132,
        "uid": 26773,
        "name": "\u5c0f\u6c34\u6ef4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0aC++\u4f7f\u7528\u4f18\u5148\u961f\u5217\u7684\u5199\u7684\u65b9\u6cd5\u4e0d\u591a\uff0c\u800c\u4e14\u67d0\u9898\u89e3\u7684\u590d\u6742\u5ea6\u597d\u50cf\u8fd8\u4e0d\u5927\u5bf9\uff0c\u4e8e\u662f\u8865\u4e0a\u4e00\u4efd\u6bd4\u8f83\u4e11\u964b\u4f46\u662f\u6613\u61c2\u7684\u4ee3\u7801\n\n\u601d\u8def\u4e0d\u7528\u8d58\u8ff0\u4e86\uff0cX=i\u65f6\u5fc5\u662fX=i-1\u65f6\u7684\u72b6\u6001\u518d\u52a0\u4e0a\u4e00\u4e2a\u672a\u88ab\u9009\u4e2d\u4f4f\u6237\u91cc\u7684\u7684\u6700\u4f18\uff08\u4ef7\u503c\u6700\u5927\uff09\u8005\n\n\u4e24\u4e2a\u4f18\u5148\u961f\u5217\uff0cQ1\u7ef4\u62a4s\u6bd4\u5f53\u524d\u7b54\u6848\u5c0f\u7684\u672a\u9009\u4f4f\u6237\uff0cQ2\u5219\u662fs\u6bd4\u5f53\u524d\u7b54\u6848\u5927\u7684\n\n\u7531\u4e8e\u6bcf\u4e2a\u4f4f\u6237\u6700\u591a\u8fdb\u51faQ1\u548cQ2\u5404\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3aO(N)\n\n\u9644\u4ee3\u7801\n\n\u987a\u4fbf\u60bc\u5ff5\u5f53\u5e74\u53c2\u8d5b\u7684\u6211\n\n\u3001\u3001\u3001\n\n\n\n\n\n\n\n    \n    \n    \n    \n      \n\n  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int MAX=100005;\nint N,Ans;\nbool In_que1[MAX];\nstruct Node1\n{\n  int a,s,ID;\n}S1[MAX];\nstruct Node2\n{\n  int a,s,ID;\n}S2[MAX];\npriority_queue<Node1> Q1;\npriority_queue<Node2> Q2;\nbool operator<(const Node1 x,const Node1 y)\n{\n  return x.a<y.a;\n}\nbool operator<(const Node2 x,const Node2 y)\n{\n  return x.a+x.s*2<y.a+y.s*2;\n}\nvoid Input()\n{\n    scanf(\"%d\",&N);\n  for(int i=1;i<=N;i++){\n      scanf(\"%d\",&S1[i].s);\n      S1[i].ID=S2[i].ID=i;\n      S2[i].s=S1[i].s;\n  }\n  for(int i=1;i<=N;i++){\n      scanf(\"%d\",&S1[i].a);\n      S2[i].a=S1[i].a;\n      Q2.push(S2[i]);\n  }\n}\nint main()\n{\n    Input();\n    int now=0,top1,top2;\n    for(int i=1;i<=N;i++){\n      while(!Q2.empty()&&In_que1[Q2.top().ID]){\n        Q2.pop();\n    } \n    if(Q1.empty()){\n      top2=Q2.top().ID;\n      top1=0;\n    }\n    else if(Q2.empty()){\n      top1=Q1.top().ID;\n      top2=0;\n    }\n    else {\n      top1=Q1.top().ID;\n      top2=Q2.top().ID;\n    }\n    if(S2[top1].a>=S2[top2].a+(S2[top2].s-S2[now].s)*2){\n      Ans+=S2[top1].a;\n      Q1.pop();\n      In_que1[top1]=false;\n    }\n    else {\n      Ans+=S2[top2].a+(S2[top2].s-S2[now].s)*2;\n      Q2.pop();\n      for(int i=now+1;i<top2;i++){\n        Q1.push(S1[i]);\n        In_que1[i]=true;\n      }\n      now=top2;\n    }\n    printf(\"%d\\n\",Ans);\n  }\n    return 0;\n}\n\u3001\u3001\u3001\n```",
        "postTime": 1476285937,
        "uid": 5502,
        "name": "Von_Bl\u00fccher",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\ns\u8868\u793a\u5230\u51fa\u53e3\u7684\u8def\u7a0b\uff0cv\u8868\u793a\u75b2\u52b3\u503c\n\n\u4f18\u5148\u961f\u5217\uff0c\u91cd\u8f7d\u8fd0\u7b97\u7b26\u4f7f\u7ed3\u6784\u4f53\u5728\u961f\u5217\u4e2d\u6309\u7167\u75b2\u52b3\u503c\u7531\u5927\u5230\u5c0f\u6392\u5217\u3002\n\n\u8d2a\u5fc3\u601d\u60f3\uff1ax=i\u65f6\u627e\u7684\u4eba\u4e00\u5b9a\u662fx=i-1\u65f6\u627e\u7684\u4eba\u518d\u52a0\u4e0a\u4e00\u4e2a\u3002\n\n\u5f53x=1\u65f6\uff0c\u4e00\u5b9a\u662f\u627ev+s\\*2\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u3002\u7528now\u8868\u793a\u73b0\u5728\u5728\u54ea\u4e00\u4e2a\u623f\u5c4b\u3002\n\n\u4ecenow\u5230n\u679a\u4e3e\u627e\u51fa\u6700\u4f18\u7684\u90a3\u4e00\u4e2a\uff0c\u628anow\u5230next\u7684\u623f\u5c4b\u52a0\u5165\u961f\u5217\u3002\u5f39\u51fa\u961f\u624b\uff0c\u52a0\u5165\u7b54\u6848\uff0c\u518d\u8ba9now=next\uff0c\u7ee7\u7eed\u5bfb\u627e\u4ee5\u540e\u7684\u6700\u4f18\u503c\u3002\n\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int maxn=100010;\nstruct node\n{\n    int s;\n    int v;\n    bool operator < (node a)const\n    {\n        return v<a.v;\n    }\n}e[maxn],s;\npriority_queue<node> q;\nint n,ans;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    cin>>e[i].s;\n    for(int i=1;i<=n;i++)\n    cin>>e[i].v;\n    s.s=s.v=0;\n    q.push(s);\n    int now=0,maxx=0;\n    for(int i=1;i<=n;i++)\n    {\n        int next=now;\n        s=q.top();\n        maxx=s.v;\n        for(int j=now+1;j<=n;j++)//\u5bfb\u627enow\u4ee5\u540e\u7684\u6700\u4f18\u623f\u5c4b\n        if(e[j].v+(e[j].s-e[now].s)*2>maxx)\n        {\n            maxx=e[j].v+(e[j].s-e[now].s)*2;\n            next=j;\n        }\n        e[next].v+=(e[next].s-e[now].s)*2;//\u66f4\u65b0\n        if(now!=next)\n        q.push(e[next]);//\u5165\u961f\n        for(int j=now+1;j<next;j++)//now\u5230next\u4e4b\u95f4\u7684\u623f\u5c4b\u5165\u961f\n        q.push(e[j]);\n        s=q.top();//\u5f39\u51fa\u961f\u4f4d\n        ans+=s.v;//\u52a0\u5165\u7b54\u6848\n        q.pop();\n        cout<<ans<<endl;//\u8f93\u51fa\n        now=next;//now=next\u7ee7\u7eed\u5bfb\u627e\u6700\u4f18\u503c\n    }\n    return 0;\n}\n```",
        "postTime": 1474722439,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u60f3\u62ff\u6ee1\u5206\uff0c\u9700\u8981\u4f18\u5316\u9009\u62e9\u4e0b\u4e00\u4e2a\u6700\u4f18\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6709\u5f88\u591a\u79cd\u65b9\u5f0f\uff08\u5355\u8c03\u961f\u5217\u3001\u5806\u3001\u6811\u72b6\u6570\u7ec4\uff09\uff0c\u8fd9\u91cc\u6211\u91c7\u7528\u4e86\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u6700\u503c\u7684\u65b9\u6cd5\uff0c\u5efa\u7acb\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u8ddd\u79bb\u8303\u56f4\u5185\u7684\u6700\u5927\u75b2\u52b3\u503c\u3001\u8d85\u8fc7\u8ddd\u79bb\u8303\u56f4\u7684\uff08\u75b2\u52b3\u503c+\u589e\u52a0\u7684\u5f80\u8fd4\u8ddd\u79bb\u503c\uff09\u6700\u5927\u503c\u3002\n\n\n\n\n```cpp\nvar\n    i,n,j,m,tmp,k1,k2,tot,maX1,maX2,tmp2:longint;\n    a,s,a2,s2,idX,idX2,idXid,idX2id,b:array[0..100000] of longint;\nfunction lowbit(X:longint):longint;\nbegin\n    eXit(X and (-X));\nend;\nprocedure update(i,X:longint);\nvar  j:longint;\nbegin\n        j:=i;\n    while i<=n do begin\n        if idX[i]<X then begin\n                        idX[i]:=X;\n                        idXid[i]:=j;\n                end;\n        inc(i,lowbit(i));\n    end;\nend;\nprocedure update_desc(i,X:longint);//\u76f8\u5f53\u4e8e\u9010\u4e2a\u5efa\u7acb\u6811\u72b6\u6570\u7ec4\nvar j:longint;\nbegin\n        j:=i;\n        while i<=n do begin\n        if idX2[i]<X then begin\n                        idX2[i]:=X;\n                        idX2id[i]:=j;\n                end;\n        inc(i,lowbit(i));\n    end;\nend;\nprocedure modify(p,n:longint);\nvar i,j:longint;\nbegin\n    i:=p;a[i]:=0;\n    while i<=n do begin\n                idX[i]:=a[i];idXid[i]:=i;\n                j:=1;\n        while j<lowbit(i) do begin\n                        if idX[i]<idX[i-j] then begin\n                                idX[i]:=idX[i-j];\n                                idXid[i]:=idXid[i-j];\n                        end;\n            j:=j shl 1;\n        end;\n        inc(i,lowbit(i));\n    end;\nend;\nfunction query(m:longint):longint;\nbegin\n    query:=0;\n    while m>0 do begin\n        if query<idX[m] then begin\n            query:=idX[m];\n            k1:=idXid[m];\n        end;\n        dec(m,lowbit(m));\n    end;\nend;\nfunction query2(m:longint):longint;\nbegin\n    query2:=0;\n    while m>0 do begin\n        if query2<idX2[m]-s[tmp]*2 then begin   //tmp\u662f\u4e0a\u6b21\u9009\u4e2d\u7684\u7f16\u53f7\n            query2:=idX2[m]-s[tmp]*2;\n            k2:=idX2id[m];\n        end;\n        dec(m,lowbit(m));\n    end;\nend;\nbegin\n    readln(n);\n    for i:=1 to n do read(s[i]);readln;//\u8ddd\u79bb\u6570\u7ec4\n    for i:=1 to n do read(a[i]);readln;//\u75b2\u52b3\u503c\u6570\u7ec4\n    for i:=1 to n do s2[n+1-i]:=s[i];\n    for i:=1 to n do a2[n+1-i]:=a[i];\n    for i:=1 to n do update(i,a[i]);\n    for i:=1 to n do update_desc(i,s2[i]*2+a2[i]);\n    tmp:=n+1;\n    for i:=n downto 1 do //b[i]\u8868\u793a\u8bb0\u5f55\u76f8\u540c\u8ddd\u79bb\u5143\u7d20\u7684\u6700\u53f3\u8fb9\u5e8f\u53f7\n        if s[tmp]<>s[i] then begin\n            b[i]:=i;\n            tmp:=i;\n        end\n        else\n            b[i]:=tmp;\n    j:=1;m:=0;tmp:=0;\n    while j<=n do begin\n        maX1:=query(m);//\u524dtmp\u4e2a\u5143\u7d20\u6c42\u6700\u5927\u503c\n        maX2:=query2(n-m);//\u4ecetmp+1\u5230n\u4e2a\u5143\u7d20\u4e2d\u6c42\u7b97\u4e0a\u8ddd\u79bb\u7684\u6700\u5927\u503c\n        if maX1>maX2 then begin\n            inc(tot,maX1);\n            tmp2:=k1;\n        end\n        else begin\n            inc(tot,maX2);\n            m:=b[n+1-k2];\n            tmp:=n+1-k2;\n            tmp2:=n+1-k2;\n        end;\n        writeln(tot);\n        modify(tmp2,n);\n        inc(j);\n    end;\nend.\n\n```",
        "postTime": 1474641198,
        "uid": 9464,
        "name": "ab1352574412",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u4e00\u9053\u8d2a\u5fc3\u9898\n\n\u6211\u4eec\u77e5\u9053 \u7b2ci\u6b21\u7684\u9009\u62e9\u5fc5\u5b9a\u57fa\u4e8e\u7b2ci-1\u6b21\u9009\u62e9\n\n\u56e0\u6b64 \u7b2c\u4e00\u6b21\u4e00\u5b9a\u662f\u8def\u7a0b\u52a0\u65f6\u95f4\u6700\u591a\u7684\u4e00\u6b21\n\nso \u5148\u626b\u4e00\u904d \u627e2*\u8ddd\u79bb+\u75b2\u52b3\u503c\u6700\u5927\u7684\u4e00\u4e2a\n\n\u5728\u8fdb\u884c\u8d2a\u5fc3\n\uff08\u8be6\u89c1\u4ee3\u7801\uff09\n\n\n```cpp\n#include <cstdio>\n#include <queue>\nusing namespace std;\nstruct Node//\u7ed3\u6784\u4f53\u4fdd\u5b58\u6bcf\u6237\u5bb6\u5ead\u7684\u4fe1\u606f\n{\n\tint far;\n\tint time;\n\tbool operator < (const Node x) const//\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\t{\n\t\treturn time<x.time;\n\t}\n} a[100005];\npriority_queue <Node> q;//\u7528\u4f18\u5148\u961f\u5217\uff08\u61d2\u5f97\u7528sort\uff09\nint max(int i,int j)//\u4e0d\u60f3\u52a0algorithm\u5e93\n{\n\tif (i>j) return i;\n\treturn j;\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);//\u8bfb\u5165\u5bb6\u5ead\u4e2a\u6570\n\tfor (int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i].far);//\u52a0\u5165\u8def\u7a0b\n\tscanf(\"%d\",&a[1].time);\n\tint id=1,now=a[1].far*2+a[1].time;//\u521d\u59cb\u5316\n\tfor (int i=2;i<=n;i++)//\u5728\u7ebf\u5904\u7406\u7b2c\u4e00\u4e2a\u5bb6\u5ead\n\t{\n\t\tscanf(\"%d\",&a[i].time);\n\t\tif (now<2*a[i].far+a[i].time) q.push(a[id]),now=2*a[i].far+a[i].time,id=i;//\u6bd4\u76ee\u524d\u7684\u66f4\u4f18 \u8bb0\u5f55\u4e0b\u6765 \u5426\u5219\u585e\u8fdb\u961f\u5217\n\t\telse q.push(a[i]);\n\t}\n\tint way=a[id].far*2,owner=a[id].time;\n\tprintf(\"%d\\n\",way+owner);\n\tfor (int i=1;i<n;i++)//\u8d2a\u5fc3\u4e2d\n\t{\n\t\tNode x=q.top();\n\t\tway=max(way,2*x.far);//\u786e\u5b9a\u8def\u7a0b\n\t\towner+=x.time;//\u52a0\u4e0a\u63a8\u9500\u65f6\u95f4\n\t\tq.pop();\n\t\tprintf(\"%d\\n\",way+owner);//\u8f93\u51fa\n\t}\n\treturn 0;//OVER\n}\n```\n\u5927\u4f53\u601d\u8def\u5982\u6b64\n\uff08\u7b2c\u4e00\u6b21fa\u9898\u89e3\uff0c\u7ba1\u7406\u5458\u6c42\u8fc7\uff0c\u5927\u4f6c\u52ff\u55b7\uff09",
        "postTime": 1573576424,
        "uid": 153369,
        "name": "\u9ec4\u8def\u5766",
        "ccfLevel": 0,
        "title": "P2672 \u63a8\u9500\u5458"
    },
    {
        "content": "# \u770b\u5b8c\u8fd9\u4e2a\u9898\u76ee\uff0c~~\u6211tm~~\n###### \u771f\u7b80\u5355\n# \u4f46\u5728\u6d4b\u8bc4\u673a\u4e0a\u6d4b\u8bc4\u5dee\u70b9\u6ca1\u8fc7\n\n------------\n## \u601d\u8def\u5982\u4e0b\n### 1.\u5148\u6c42\u51fa\u5230\u6bcf\u5bb6\u63a8\u9500\u7684\u75b2\u52b3\u503c\uff08\u5305\u62ec\u8def\u7a0b\u548c\u63a8\u9500\u96be\u5ea6\uff09,\u6392\u5e8f\uff01\uff01\uff01\n### 2.\u5c06\u75b2\u52b3\u503c\u6700\u5927\u7684\u90a3\u5bb6\u627e\u51fa\u6765\u3002\n### 3.\uff08\u6700\u91cd\u8981\uff0c\u5dee\u70b9\u56e0\u4e3a\u8fd9\u4e2a\u6ca1\u8fc7\uff09\u628a\u5404\u5bb6\u7684\u63a8\u9500\u96be\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n### 4.\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\u518d\u6309\u987a\u5e8f\u52a0\u8d77\u6765\uff08\u5982\u679c\u90a3\u5bb6\u79bb\u51fa\u53e3\u8ddd\u79bb\u6bd4\u75b2\u52b3\u503c\u6700\u5927\u7684\u90a3\u5bb6\u957f\uff0c\u5219\u8fd8\u8981\u52a0\u8ddd\u79bb\u4e4b\u5dee\u76842\u500d\uff09\n### 5.\u4e0a\u4ee3\u7801\n~~\u6211\u662f\u4e2a\u50bb\u903c\uff0c\u7528\u4e862\u6b21\u5feb\u6392~~\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <string>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nlong long y,d[100001],n,a[100001],b[100001],s[100001];\n\nvoid qsort(int l,int r)\n{\n\tint i,j,x,tmp;\n\ti=l; j=r; x=s[(i+j)/2];\n\twhile(i<=j)\n\t{\n\t\twhile(s[i]>x) i++;\n\t\twhile(s[j]<x) j--;\n\t\tif(i<=j)\n\t\t{\n\t\t\ttmp=s[i]; s[i]=s[j]; s[j]=tmp;\n\t\t\ttmp=a[i]; a[i]=a[j]; a[j]=tmp;\n\t\t\ttmp=b[i]; b[i]=b[j]; b[j]=tmp;\n\t\t\ti++; j--;\n\t\t}\n\t}\n\tif(i<r) qsort(i,r);\n\tif(l<j) qsort(l,j);\n}\n\nvoid qqsort(int l,int r)\n{\n\tint i,j,x,tmp;\n\ti=l; j=r; x=b[(i+j)/2];\n\twhile(i<=j)\n\t{\n\t\twhile(b[i]>x) i++;\n\t\twhile(b[j]<x) j--;\n\t\tif(i<=j)\n\t\t{\n\t\t\ttmp=a[i]; a[i]=a[j]; a[j]=tmp;\n\t\t\ttmp=b[i]; b[i]=b[j]; b[j]=tmp;\n\t\t\ti++; j--;\n\t\t}\n\t}\n\tif(i<r) qqsort(i,r);\n\tif(l<j) qqsort(l,j);\n}\n\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\tfor(int i=1;i<=n;i++) cin>>b[i];\n\tfor(int i=1;i<=n;i++) s[i]=a[i]*2+b[i];\n\tqsort(1,n);\n\td[1]=s[1];\n\ty=a[1];\n\tqqsort(2,n);\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\td[i]=d[i-1]+b[i];\n\t\tif(a[i]>y)\n\t\t{\n\t\t\td[i]=d[i]+(a[i]-y)*2;//\u52a0\u8def\u7a0b\n\t\t\ty=a[i];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) cout<<d[i]<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1573290227,
        "uid": 208052,
        "name": "\u7834\u6d41",
        "ccfLevel": 0,
        "title": "\u5de5\u4f5c\u9b54\u554a\u63a8\u9500\u5458"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u6709\u4e2a\u63a8\u9500\u5458\u8981\u53bb\u63a8\u9500\uff0c\u8981\u4f60\u6c42\u4ed6\u63a8\u9500 1~n \u6237\u4eba\u5bb6\u4e2d\u7684 X \u6237\uff0c\u6700\u591a\u82b1\u591a\n\u5c11\u201c\u75b2\u52b3\u503c\u201d\u3002\n\n\u89e3\u9898\u601d\u8def\uff1aO(n^2\n)\u505a\u6cd5\uff0c\u53ef\u4ee5\u5f97\u5230 60 \u5206\uff0c\u5373\u8d2a\u5fc3\u66b4\u529b\u7684\u53bb\u9009\u51fa\u75b2\u52b3\u503c\u6700\u5927\u7684 X \u6237\u3002\n\n**\u8d2a\u5fc3\u7b56\u7565**\uff1a\u9009 i \u4e2a\u70b9\u7684\u6700\u4f18\u89e3\u4e00\u5b9a\u662f\u9009 i-1 \u4e2a\u7684\u6700\u4f18\u89e3\u518d\u52a0\u4e0a\u672a\u9009\u7684\u70b9\u4e2d\u75b2\u52b3\u503c\n\u6700\u5927\u7684\u70b9\u3002\n\n\u53ef\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\u6b63\u786e\u6027\u3002\u5927\u4f53\u8fc7\u7a0b\uff1a\u5047\u8bbe\u6700\u4f18\u89e3\u4e3a\u4e0a\u8ff0\u6700\u4f18\u89e3\uff0c\u8bc1\u660e\u5047\u5982\u7b2c i-1\n\u4e2a\u4e0d\u662f\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6b64\u65f6\u9009 i \u4e2a\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u4f18\u4e8e\u4e0a\u8ff0\u6700\u4f18\u89e3\u3002\n\n\u9898\u76ee\u4e2d\u8bf4\u662f\u4e0d\u8d70\u591a\u4f59\u7684\u8def\u7684\uff0c\u4e5f\u5c31\u662f\u8d70\u7684\u8def\u4e00\u5b9a\u662f\u4ece\u8d77\u70b9\u5230\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb*2\u3002\n\u8fd9\u6837\u6bcf\u589e\u52a0\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u8be5\u70b9\u5982\u679c\u5728\u6700\u8fdc\u70b9\u540e\u9762\uff0c\u5219\u75b2\u52b3\u503c\u4e3a(s[i]-s[pos])*2+a[i]\uff0c\n\u5426\u5219\u75b2\u52b3\u503c\u4e3a a[i]\uff0c\u627e\u75b2\u52b3\u503c\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u3002\n\n\u679a\u4e3e\u627e\u8be5\u70b9\u662f n^\n2 \u7684\uff0c\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u3002\u5c06\u6700\u8fdc\u70b9\u5de6\u4fa7\u7684\u70b9\u7684\u75b2\u52b3\u503c\u5168\u90e8\u538b\n\u5165\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u6bd4\u8f83\u6700\u8fdc\u70b9\u53f3\u4fa7\u7684\u70b9\u4e0e\u961f\u9876\u5143\u7d20\u7684\u5927\u5c0f\uff0c\u5982\u679c\u9009\u53f3\u4fa7\u7684\u70b9\u5219\u7ee7\u7eed\n\u66f4\u65b0\u4f18\u5148\u961f\u5217\uff0c\u5c06\u65b0\u5143\u7d20\u538b\u5165\u961f\u5217\u4e2d\u3002\u81f3\u4e8e\u627e\u53f3\u4fa7\u75b2\u52b3\u503c\u6700\u5927\u7684\u70b9\uff0c\u53ef\u9884\u5148\u5904\u7406\n\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u53f3\u4fa7\u75b2\u52b3\u503c\uff08s[i]*2+a[i]\uff09\u6700\u5927\u7684\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u540e\u671f\u627e\u53f3\u4fa7\u6700\u5927\u75b2\u52b3\n\u503c\u662f O(1)\u7684\uff0c\u6ce8\u610f\u8981\u51cf\u53bb\u5f53\u524d\u6700\u53f3\u7aef\u7684\u70b9\u7684\u8ddd\u79bb s[pos]*2 \u518d\u4e0e\u5de6\u4fa7\u7684\u6bd4\u8f83\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```c\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+10;\nint n,ans,t,m,j,sum;\nbool bj[maxn];\nstruct node{\n\tint a,s,id;\n}k[maxn];\nbool cmp(node x,node y){\n\treturn x.a>y.a;\n} \nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)//\u8f93\u5165\n\t\tcin>>k[i].s;\n\tint tmp=0;\n\tfor(int i=1;i<=n;i++){//\u8fb9\u5904\u7406\u8fb9\u8f93\u5165\n\t\tcin>>k[i].a;\n\t\tk[i].id=i;\n\t\tif(k[i].a+k[i].s*2>tmp){//\u7b97\u7b2c\u4e00\u4e2a\n\t\t\tt=i;\n\t\t\ttmp=k[i].a+k[i].s*2;\n\t\t\tm=k[i].s;\n\t\t}\n\t}\n\tcout<<tmp<<endl;\n\tbj[k[t].id]=1;t=k[t].a;\n\tsort(k+1,k+1+n,cmp);//\u6392\u5e8f\n\tfor(int i=2;i<=n;i++){//\u7b97\u6bcf\u4e00\u95ee\n\t\tj++;\n\t\twhile(bj[k[j].id])j++;\n\t\tbj[k[j].id]=1;\n\t\tm=max(m,k[j].s);\n\t\tans=t+m*2+k[j].a;\n\t\tt=t+k[j].a;\n\t\tcout<<ans<<endl;//\u6bcf\u6b21\u90fd\u8f93\u51fa\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1570263845,
        "uid": 168385,
        "name": "gwx123456",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "## \u4e3b\u5e2d\u6811+\u51b3\u7b56\u5355\u8c03\u6027\u4f18\u5316dp+\u5206\u6cbb\n\n\u9996\u5148\u975e\u5e38\u663e\u7136\uff0c\u82e5\u8981\u786e\u5b9a $ans[x]$ \uff0c\u5219\u9700\u8981\u627e\u4e00\u4e2a $i$ \uff0c\u4ee4 $i$ \u4f5c\u4e3a\u8d70\u7684\u6700\u8fdc\u70b9\uff0c\u4f7f\u5f97 $i$ \u524d\u9762\u7684\u6700\u5927\u7684 $x-1$ \u75b2\u52b3\u5ea6\u7684\u548c+ $i$ \u7684\u75b2\u52b3\u5ea6 + $2*i$ \u7684\u8ddd\u79bb\u6700\u5927\u3002\n\n**\u663e\u7136\u6700\u8fdc\u70b9\u662f\u4e0d\u964d\u7684**\u3002\u5177\u4f53\u5176\u5b83\u9898\u89e3\u5df2\u7ecf\u8bc1\u660e\u4e86\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u5206\u6cbb\u4e86\u3002\u524d\u7f00 $k$ \u5927\u4e3b\u5e2d\u6811\u641e\u4e00\u4e0b\u3002\n\n$solve(l,r,L,R)$\u8868\u793a\uff0c\u5f53\u524d\u8981\u6c42 $[l,r]$ \u7684\u7b54\u6848\uff0c\u53ef\u80fd\u7684\u51b3\u7b56\u533a\u95f4\u5728 $[L,R]$ \u3002\u6bcf\u6b21\u53ea\u627e\u533a\u95f4\u4e2d\u70b9\u7684\u6700\u4f18\u51b3\u7b56\u70b9\u5728\u54ea\uff0c\u9012\u5f52\u89e3\u51b3\u5c31\u884c\u4e86\u3002\n\n\u590d\u6742\u5ea6 $O(nlog^2n)$\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\n#define M N*12\n#define mid ((l+r)>>1)\nusing namespace std;\n\ninline bool rd(int &X)\n{\n    X=0;int w=0;char ch=0;\n    while(!isdigit(ch))w|=ch=='-',ch=getchar();\n    while( isdigit(ch))X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    X=w?-X:X; return 1;\n}\n\nint a[N],b[N];\nint n,cnt,ans[N];\nint rt[N],sum[M],val[M],ls[M],rs[M];\n\nvoid ins(int o,int &p,int x,int l=1,int r=1000){\n    ls[p=++cnt]=ls[o],rs[p]=rs[o],sum[p]=sum[o]+1,val[p]=val[o]+x;if(l==r) return ;\n    x<=mid ? ins(ls[o],ls[p],x,l,mid) : ins(rs[o],rs[p],x,mid+1,r);\n}\nint ask(int p,int k,int l=1,int r=1000){\n    if(l==r or !p) return l*k;\n    return sum[rs[p]]>=k ? ask(rs[p],k,mid+1,r) : ask(ls[p],k-sum[rs[p]],l,mid)+val[rs[p]];\n}\nvoid solve(int l,int r,int L,int R){\n    if(l>r) return ; int Mid;\n    for(int i=max(mid,L);i<=R;i++){\n        int now=ask(rt[i-1],mid-1)+a[i]*2+b[i];\n        if(now>ans[mid])\n            ans[mid]=now,Mid=i;\n    }\n    solve(l,mid-1,L,Mid);solve(mid+1,r,Mid,R);\n}\nsigned main()\n{\n    rd(n);\n    for(int i=1;i<=n;i++) rd(a[i]);\n    for(int i=1;i<=n;i++) rd(b[i]);\n    for(int i=1;i<=n;i++)\n        ins(rt[i-1],rt[i],b[i]);\n    solve(1,n,1,n);\n    for(int i=1;i<=n;i++)\n        printf(\"%d\\n\",ans[i]);\n}\n\n```",
        "postTime": 1540457700,
        "uid": 56659,
        "name": "AubRain",
        "ccfLevel": 0,
        "title": "[noip\u666e\u53ca\u7ec4]\u63a8\u9500\u5458\u2014\u2014\u4e3b\u5e2d\u6811+\u51b3\u7b56\u5355\u8c03\u6027+\u5206\u6cbb"
    },
    {
        "content": "\u7ebf\u6bb5\u6811+\u79bb\u6563\u5316+\u9012\u63a8(\u5927\u6982)\n\n\u6211\u4eec\u4ece\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u4e00\u76f4\u63a8\u5230\u7b2c\u4e00\u4e2a\u72b6\u6001\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u51cf\u53bb\u8fd9\u4e2a\u6700\u5c0f\u503c\u518d\u6700\u540e\u8f93\u51fa\n\n~~\u8be6\u60c5\u8bf7\u54a8\u8be210010~~\n\n\u8be6\u60c5\u89c1\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define P pair<long long,int>//long long \u5b58\u6570\uff0cint\u5b58\u7684\u662f\u7b2c\u51e0\u4e2a\u6570\nusing namespace std;\nint n;\nint val[100001];\nint dist[100001];\nint tdist[100001];\nlong long dp[100001];\nP tre[100001<<2];//\u5efa\u6811\nint dre[100001<<2];\nbool hav[100001];//\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u4eba\u662f\u5426\u6709\u95ee\u9898(\u7136\u540e\u88ab\u7acb\u523b\u8e22\u51fa(x))\n//\u5176\u5b9e\u662f\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u8be5\u4f4d\u7f6e\u7684\u4eba\u5df2\u88ab\u6392\u9664\nint rr;//\u5b58\u4e00\u4e0b\u6700\u53f3\u7aef\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6ca1\u88ab\u6392\u9664\u7684\u4eba\u662f\u54ea\u5bb6\nint rr2;//\u5b58\u4e00\u4e0b\u6700\u53f3\u7aef\u7684\u662f\u54ea\u5bb6\nvoid pushup(int rt){\n\ttre[rt].first=min(tre[rt<<1].first,tre[rt<<1|1].first);\n\tif(tre[rt<<1|1].first==tre[rt].first)tre[rt].second=tre[rt<<1|1].second;\n\telse if(tre[rt<<1].first==tre[rt].first)tre[rt].second=tre[rt<<1].second;\n    //\u7b2c\u4e00\u884c\u53d6\u6700\u5c0f\u7684\uff0c\u4e0d\u8bf4\u4e86\n    //\u4e8c\u4e09\uff0c\u7b2c\u51e0\u4e2a\u8ddf\u4e0a\n}\nvoid bt(int rt,int l,int r){\n\tif(l==r){\n\t\ttre[rt].first=val[l];\n\t\ttre[rt].second=l;\n\t\tdre[l]=rt;\n\t\tif(l==n){\n\t\t\ttre[rt].first+=dist[l]*2;\n\t\t\ttre[rt].first-=dist[l-1]*2;\n            //\u56e0\u4e3a\u6700\u53f3\u9762\u90a3\u4e00\u5bb6\u88ab\u7acb\u523b\u8e22\u51fa\u4e4b\u540e\uff0c\u5b9e\u9645\u4e0a\u7684\u51cf\u76ca\u5e94\u8be5\u662f\u5f53\u524ddis-\u4e0b\u4e00\u4e2a\u53ef\u7528dis\n\t\t}\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbt(rt<<1,l,mid);\n\tbt(rt<<1|1,mid+1,r);\n\tpushup(rt);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&dist[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&val[i]);\n\t\tdp[n]+=val[i];\n\t}\n\tdp[n]+=dist[n]*2;\n\tbt(1,1,n);\n\trr=n;\n\trr2=n-1;\n\tfor(int ii=1;ii<=n-1;ii++){\n    //ii\u8868\u793a\u5220\u5230\u7b2c\u51e0\u4e2a\u6570\u4e86\n\t\tdp[n-ii]=dp[n-ii+1]-tre[1].first;\n\t\tint co=dre[tre[1].second];\n\t\thav[tre[1].second]=1;\n\t\ttre[co].first=2147483647;\n\t\tif(tre[1].second==rr2){\n        //\u5982\u679c\u8fd9\u4e2a\u53ef\u7528\u7684\u88ab\u7acb\u523b\u8e22\u51fa\u4e86\n\t\t\ttre[dre[rr]].first+=dist[rr2]*2;//\u663e\u7136\u6700\u53f3\u7aef\u7684\u8981\u5148\u628a\u8fd9\u4e2adis\u8865\u56de\u6765\n\t\t\tif(ii!=n-1){//\u5982\u679c\u5c31\u5269\u4e24\u4e2a\u4e86\u90a3\u4e5f\u4e0d\u7528\u627e\u4e86\n\t\t\t\tfor(int i=rr2;1;rr2--,i=rr2){//\u627e\u6700\u53f3\u7aef\u5de6\u4fa7\u7b2c\u4e00\u4e2a\u53ef\u7528\u7684dis\n\t\t\t\t\tif(!hav[i]){\n\t\t\t\t\t\t\trr2=i;\n\t\t\t\t\t\t\ttre[dre[rr]].first-=dist[i]*2;\n                            //\u5982\u679c\u627e\u5230\u4e86\u4e4b\u540e\u518d\u628a\u6700\u53f3\u7aef\u7684\u8fd9\u4e2adis\u51cf\u53bb\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint co2=dre[rr];\n\t\t\twhile(co2!=1){\n\t\t\t\tco2=co2/2;\n\t\t\t\tpushup(co2);\n\t\t\t}\n\t\t}\n\t\telse if(tre[1].second==rr){\n        //\u5982\u679c\u6700\u53f3\u7aef\u53ef\u7528\u7684gg\u4e86\n\t\t\tfor(int i=rr2;1;rr2--,i=rr2){//\u53cd\u6b63\u8fd9\u4e2arr2\u80af\u5b9a\u53ef\u884c\n\t\t\t\tif(!hav[i]){\n\t\t\t\t\ttre[dre[i]].first+=dist[i]*2;\n                    //\u4e0b\u4e00\u4efb\u6700\u53f3\u4fa7\n\t\t\t\t\tif(ii!=n-1){//\u540c\u4e0a\uff0c\u5c31\u5269\u4e24\u4e2a\u4e86\u7684\u8bdd\u4e5f\u4e0d\u7528\u51cf\u4e86\n\t\t\t\t\t\tfor(int j=rr2-1;j;j--){\n\t\t\t\t\t\tif(!hav[j]){\n\t\t\t\t\t\t\trr2=j;\n\t\t\t\t\t\t\ttre[dre[i]].first-=dist[j]*2;\n                            //\u51cf\u53bb\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\tint co2=dre[i];\n\t\t\t\t\twhile(co2!=1){\n\t\t\t\t\t\tco2>>=1;\n\t\t\t\t\t\tpushup(co2);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n                    //\u5237\u65b0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile(co!=1){\n\t\t\tco=co>>1;\n\t\t\tpushup(co);\n            //\u5237\u65b0\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%lld\\n\",dp[i]);\n    //\u8f93\u51fa\n}\n\n```\n\nEND",
        "postTime": 1535337957,
        "uid": 59630,
        "name": "NTG_Adiord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "# \u7ed3\u6784\u4f53\u57fa\u6392\n\n$\\ \\ \\ \\ $\u8fd9\u4e2a\u9898\u76ee\u672c\u8eab\u5176\u5b9e\u5e76\u4e0d\u96be\uff0c\u6211\u8fd9\u91cc\u4e3a\u4e86\u51cf\u5c0f\u5e38\u6570\u7528\u7684\u601d\u60f3\u662f\u8d2a\u5fc3\uff1a  \n> $\\ \\ \\ \\ $\u6ce8\u610f\u5230$a$\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u662f$\\Sigma{a}$\uff0c\u4f46\u662f$s$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f$2 * Max\\{s\\}$  \n> $\\ \\ \\ \\ $\u5206\u6790\u5bf9\u4e8e\u63a8\u9500$k$\u4e2a\u4eba\u7b54\u6848\u7684\u7ec4\u6210\uff1a\u8981\u4e48\u7b54\u6848\u5c31\u662f\u7531$a$\u503c\u6700\u5927\u7684$k$\u4e2a\u4eba\u6784\u6210\uff0c\u8981\u4e48\u7b54\u6848\u662f\u7531$a$\u503c\u6700\u5927\u7684$k-1$\u4e2a\u4eba\u548c\u4e00\u4e2a$s$\u975e\u5e38\u5927\u7684\u4eba\u6784\u6210\n\n$\\ \\ \\ \\ $\u7136\u540e\u6211\u5c31~~\u6c89\u8ff7\u4e8e\u5361\u5e38~~\u65e0\u6cd5\u81ea\u62d4\u4e86  \n$\\ \\ \\ \\ $\u6309\u7167\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6807\u51c6\u4ee3\u7801\u5e94\u8be5\u662f\u8fd9\u6837\uff1a  \n``` cpp\n#include <cstdio>\n\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\n\n//User's Lib\n\n#include <algorithm>\n\nusing namespace std;\n\nchar *pc;\n\ninline void Main_Init(){\n    static bool inited = false;\n    if(inited) fclose(stdin), fclose(stdout);\n    else {\n        #ifndef ONLINE_JUDGE\n        freopen(\"b.in\", \"r\", stdin);\n        freopen(\"b.out\", \"w\", stdout);\n        #endif\n        pc = (char *) mmap(NULL, lseek(0, 0, SEEK_END), PROT_READ, MAP_PRIVATE, 0, 0);\n        inited = true;\n    }\n}\n\ninline int read(){\n    int num = 0;\n    char c;\n    while((c = *pc ++) < 48);\n    while(num = num * 10 + c - 48, (c = *pc ++) >= 48);\n    return num;\n}\n\nnamespace LKF{\n    template <typename T>\n    extern inline T abs(T tar){\n        return tar < 0 ? -tar : tar;\n    }\n    template <typename T>\n    extern inline void swap(T &a, T &b){\n        T t = a;\n        a = b;\n        b = t;\n    }\n    template <typename T>\n    extern inline void upmax(T &x, const T &y){\n        if(x < y) x = y;\n    }\n    template <typename T>\n    extern inline void upmin(T &x, const T &y){\n        if(x > y) x = y;\n    }\n    template <typename T>\n    extern inline T max(T a, T b){\n        return a > b ? a : b;\n    }\n    template <typename T>\n    extern inline T min(T a, T b){\n        return a < b ? a : b;\n    }\n}\n\n//Do not copy from other files\n\n//Source Code\n\nconst int MAXN = 100011;\n\nstruct Data{\n    int a, s;\n    inline bool operator < (const Data &tar) const {\n        return a > tar.a;\n    }\n}data[MAXN];\n\nint val[MAXN];\n\nint main(){\n    Main_Init();\n    int n = read();\n    for(register int i = 1; i <= n; i++)\n        data[i].s = read();\n    for(register int i = 1; i <= n; i++)\n        data[i].a = read();\n    stable_sort(data + 1, data + 1 + n);\n    for(register int i = n; i >= 1; i--){\n        val[i] = LKF::max(val[i + 1], (data[i].s << 1) + data[i].a);\n        __builtin_prefetch(val + i - 1, 1, 0);\n    }\n    int Sum1 = 0, Sum2 = 0, Max = 0;\n    for(register int i = 1; i <= n; i++){\n        Sum1 += data[i].a;\n        LKF::upmax(Max, data[i].s);\n        printf(\"%d\\n\", LKF::max(Sum1 + (Max << 1), Sum2 + val[i]));\n        Sum2 += data[i].a;\n        __builtin_prefetch(data + i + 1, 0, 0);\n    }\n    Main_Init();\n    return 0;\n}\n```\n$\\ \\ \\ \\ $\u6211\u4eec\u6ce8\u610f\u5230\u9700\u8981\u4e00\u6b21\u4ee5$a$\u4e3a\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u4f46\u662f\u8003\u8651\u5230\u5355\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\u5462\uff1f  \n$\\ \\ \\ \\ $\u4e8e\u662f\u5c31\u5c1d\u8bd5\u628a\u7ed3\u6784\u4f53\u9996\u5148\u4ee5\u6307\u9488\u65b9\u6cd5\u53d6\u6210int\uff08\u4e3a\u4e86\u53d6$a$\u4f5c\u4e3a\u5173\u952e\u5b57\uff09\uff0c\u7136\u540e\u6309\u7167\u6b63\u5e38\u65b9\u6cd5\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u7136\u540e\u5c31\u6210\u529f\u4e86\uff0c\u53ea\u662f\u5e38\u6570\u7a0d\u5927  \n$\\ \\ \\ \\ $\u4ee3\u7801\u5982\u4e0b\uff1a\n``` cpp\n#include <cstdio>\n\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\n\n//User's Lib\n\n#include <cstring>\n// #include <algorithm>\n\nusing namespace std;\n\nchar *pc;\n\nchar outp[1111111], *op = outp;\n\ninline void Main_Init(){\n    static bool inited = false;\n    if(inited){\n        fwrite(outp, 1, op - outp - 1, stdout);\n        fclose(stdin), fclose(stdout);\n    } else {\n        #ifndef ONLINE_JUDGE\n        freopen(\"b.in\", \"r\", stdin);\n        #endif\n        pc = (char *) mmap(NULL, lseek(0, 0, SEEK_END), PROT_READ, MAP_PRIVATE, 0, 0);\n        inited = true;\n    }\n}\n\ninline int read(){\n    int num = 0;\n    char c;\n    while((c = *pc ++) < 48);\n    while(num = num * 10 + c - 48, (c = *pc ++) >= 48);\n    return num;\n}\n\ninline void Write(const int &tar){\n    if(!tar) return ;\n    Write(tar / 10);\n    *op ++ = (tar % 10) ^ 48;\n}\n\nnamespace LKF{\n    template <typename T>\n    extern inline T abs(T tar){\n        return tar < 0 ? -tar : tar;\n    }\n    template <typename T>\n    extern inline void swap(T &a, T &b){\n        T t = a;\n        a = b;\n        b = t;\n    }\n    template <typename T>\n    extern inline void upmax(T &x, const T &y){\n        if(x < y) x = y;\n    }\n    template <typename T>\n    extern inline void upmin(T &x, const T &y){\n        if(x > y) x = y;\n    }\n    template <typename T>\n    extern inline T max(T a, T b){\n        return a > b ? a : b;\n    }\n    template <typename T>\n    extern inline T min(T a, T b){\n        return a < b ? a : b;\n    }\n}\n\n//Do not copy from other files\n\n//Source Code\n\nconst int MAXN = 100011;\n\nstruct Data{\n    int a, s;\n}data[MAXN], tmp_data[MAXN];\n\ntemplate <typename T>\ninline void Radix_Sort(register const int n, T *a, T *b){\n    int r1[0xff], r2[0xff], r3[0xff], r4[0xff];\n    memset(r1, 0, sizeof(r1)), memset(r2, 0, sizeof(r2));\n    memset(r3, 0, sizeof(r3)), memset(r4, 0, sizeof(r4));\n    \n    register int i, tmp_int;\n    register T * j, *tar;\n\n    for(j = a + 1, tar = a + 1 + n; j != tar; ++j){\n        tmp_int = * (int *) j;\n        ++r1[tmp_int & 0xff];\n        ++r2[(tmp_int >> 8) & 0xff];\n        ++r3[(tmp_int >> 16) & 0xff];\n        ++r4[tmp_int >> 24];\n    }\n    for(i = 1; i <= 0xff; ++i){\n        r1[i] += r1[i - 1];\n        r2[i] += r2[i - 1];\n        r3[i] += r3[i - 1];\n        r4[i] += r4[i - 1];\n    }\n    for(j = a + n; j != a; --j){\n        tmp_int = * (int *) j;\n        b[r1[tmp_int & 0xff]--] = *j;\n    }\n    for(j = b + n; j != b; --j){\n        tmp_int = * (int *) j;\n        a[r2[(tmp_int >> 8) & 0xff]--] = *j;\n    }\n    for(j = a + n; j != a; --j){\n        tmp_int = * (int *) j;\n        b[r3[(tmp_int >> 16) & 0xff]--] = *j;\n    }\n    for(j = b + n; j != b; --j){\n        tmp_int = * (int *) j;\n        a[r4[tmp_int >> 24]--] = *j;\n    }\n}\n\nint val[MAXN];\n\nint main(){\n    Main_Init();\n    int n = read();\n    for(register int i = 1; i <= n; ++ i)\n        data[i].s = read();\n    for(register int i = 1; i <= n; ++ i)\n        data[i].a = read();\n    Radix_Sort(n, data, tmp_data);\n    for(register int i = 1, j = n; i < j; ++ i, -- j)\n        LKF::swap(data[i], data[j]);\n    // stable_sort(data + 1, data + 1 + n);\n    for(register int i = n; i >= 1; i--){\n        val[i] = LKF::max(val[i + 1], (data[i].s << 1) + data[i].a);\n        __builtin_prefetch(val + i - 1, 1, 0);\n    }\n    int Sum1 = 0, Sum2 = 0, Max = 0;\n    for(register int i = 1; i <= n; ++ i){\n        Sum1 += data[i].a;\n        LKF::upmax(Max, data[i].s);\n        Write(LKF::max(Sum1 + (Max << 1), Sum2 + val[i])), *op ++ = '\\n';\n        Sum2 += data[i].a;\n        __builtin_prefetch(data + i + 1, 0, 0);\n    }\n    Main_Init();\n    return 0;\n}\n```",
        "postTime": 1532073758,
        "uid": 43464,
        "name": "Creeper_LKF",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u6211\u4e0d\u77e5\u9053\u4f60\u4eec\u7684\u65b9\u6cd5\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u590d\u6742  \n\u9996\u5148\u6211\u4eec\u627e\u5230\u76f4\u63a5\u63a8\u9500\u75b2\u52b3\u503c\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230X=1\u7684\u89e3\uff0c\u7136\u540e\u5c06now\u5b9a\u4e3a\u8fd9\u4e2a\u6700\u5927\u7684\u4f4f\u6237\u7684\u4f4d\u7f6e               \n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u4e24\u8fb9\u7684\u5c45\u6c11\u5206\u5f00\u8003\u8651     \n\u5bf9\u4e8e\u5de6\u8fb9\u7684\u5c45\u6c11\uff0c\u4e0d\u7528\u8d70\u8fc7\u591a\u7684\u8def\u4e86\uff0c\u76f4\u63a5\u987a\u5e26\u63a8\u9500\u6389\uff0c\u90a3\u4e48\u989d\u5916\u7684\u75b2\u52b3\u503c\u5c31\u53ea\u6709\u63a8\u9500\u6240\u82b1\u7684\u75b2\u52b3\u503c\u3002       \n\u5bf9\u4e8e\u53f3\u8fb9\u7684\u5c45\u6c11\uff0c\u6211\u4eec\u6c42\u51fas[j]\u00d72-s[now]\u00d72+a[j]\u6700\u5927\u7684j                 \n\u4e0b\u9762\uff0c\u6211\u4eec\u53d6\u5de6\u8fb9\u5c45\u6c11\u4e2d\u51c0\u75b2\u52b3\u503c\uff08\u53ea\u5305\u62ec\u63a8\u9500\u7684\uff09\u6700\u5927\u7684\u8bbe\u4e3almax\uff0c\u53d6\u53f3\u8fb9\u6700\u5927\u7684rmax=s[j]\u00d72-s[now]\u00d72+a[j]\uff0c\u7136\u540e\u6bd4\u8f83\u4e24\u503c\uff0c\u5982\u679c\u5de6\u8fb9\u7684\u5927\uff0c\u90a3\u4e48\u63a8\u9500\u90a3\u4e00\u5bb6\uff0cans+=lmax\uff0c\u5426\u5219\u5c06now\u5b9a\u4e3a\u6700\u5927\u7684j\uff0c\u7136\u540eans+=rmax\uff0c\u518d\u5c06  oldnow+1\u81f3newnow-1\u7684\u5168\u90e8\u4f4f\u6237\u8fdb\u5806   \n\u90a3\u4e48\u5de6\u8fb9\u7684\u6700\u5927\u503c\u53ef\u4ee5\u7528\u5806\uff0c\u590d\u6742\u5ea6\u964d\u81f3nlogn                   \n\u770b\u7a0b\u5e8f\u5427                           \n```cpp\n#define maxn 100000+500\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nint s[maxn],a[maxn];\n\nstruct max_heap //\u5927\u6839\u5806\u6a21\u677f\n{\n    int size;\n    int d[maxn];\n    \n    void push(int x) //\u63d2\u5165\u5143\u7d20\n    {\n        d[++size]=x;\n        int flag=1,p=size;\n        while (flag && (p>1))\n        {\n            if (d[p/2]<d[p])\n                swap(d[p/2],d[p]);\n            else flag=0;\n            p/=2;\n        }\n    }\n    \n    void pop() //\u5f39\u51fa\u5806\u9876\n    {\n        swap(d[1],d[size]);\n        size--;\n        int p=1,t,flag=1;\n        while (flag && (p*2<=size))\n        {\n            if (d[p*2]>d[p]) t=p*2;\n            else t=p;\n            if (p*2<size)\n                if ((d[p*2+1]>d[p]) && (d[p*2+1]>d[p*2]))\n                    t=p*2+1;\n            if (t!=p)\n            {\n                swap(d[p],d[t]);\n                p=t;\n            } \n            else flag=0;\n        } \n    }\n    \n    int top() //\u53d6\u5806\u9876\n    {\n        return d[1];\n    }\n}h;\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;++i) scanf(\"%d\",&s[i]);\n    for (int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n    \n    int ma=0,now;\n    for (int i=1;i<=n;++i)\n        if (a[i]+s[i]*2>ma) //\u8ba1\u7b97X=1\u65f6\u7684ans\n        {\n            ma=a[i]+s[i]*2;\n            now=i;\n        }\n    int ans=ma;\n    printf(\"%d\\n\",ans);\n    for (int i=1;i<now;++i)\n        h.push(a[i]); //\u5c06\u5de6\u8fb9\u7684\u503c\u538b\u5165\u5927\u6839\u5806\uff0c\u4e3a\u4e4b\u540e\u53d6\u6700\u5927\u503c\u505a\u51c6\u5907\n        \n    for (int i=1;i<n;++i)\n    {\n        int lmax=h.top(); //\u53d6\u5de6\u8fb9\u7684\u6700\u5927\u503c\n        int rmax=0,rn=0;\n        for (int j=now+1;j<=n;++j)\n            if (a[j]+s[j]*2-s[now]*2>rmax) //\u679a\u4e3e\u53f3\u8fb9\u7684\uff0c\u53bb\u4e00\u4e2a\u6700\u5927\u7684\n            {\n                rmax=a[j]+s[j]*2-s[now]*2;\n                rn=j;\n            }\n        if (lmax>rmax) //\u5982\u679c\u5de6\u8fb9\u5927\n        {\n            ans+=lmax;\n            h.pop(); //\u5f39\u51fa\u5806\u9876\n        }\n        else\n        {\n            ans+=rmax;\n            for (int j=now+1;j<rn;++j)\n                h.push(a[j]); //\u4f9d\u6b21\u8fdb\u5806\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u90fd\u5728now\u7684\u5de6\u8fb9\n            now=rn;\n        }\n        printf(\"%d\\n\",ans);\n    }\n    \n    return 0;\n}\n```",
        "postTime": 1520565521,
        "uid": 50818,
        "name": "\u66e6\u884c\u591c\u843d",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "Fron my blogs <http://www.cnblogs.com/ligen1353055672/p/7732849.html>\n\n\u3010\u9898\u89e3\u3011\n\n\u6839\u636e\u7ebf\u6bb5\u6811\u601d\u60f3\uff0c\u5148\u5efa\u7acb\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e00\u68f5\u5b58\u8ddd\u79bb\\*2+\u75b2\u52b3\u503c\uff0c\u4e5f\u5c31\u662fs[i]\\*2+a[i]\uff0c\u4e00\u68f5\u5b58\u75b2\u52b3\u503c\uff0c\u5373a[i]\u3002\n\n\u5efa\u6811\u4e4b\u540e\uff0c\u5148\u7279\u5224\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u68f5\u6811\u4e0a\u6700\u5927\u7684\u503c\u76f4\u63a5\u8f93\u51fa\u6765\uff0c\u5c06\u4f4d\u7f6e\u5b58\u5728mx\u4e2d\u3002\n\nmx\u7684\u4f5c\u7528\u662f\u5b58\u6bcf\u6b21\u5904\u7406\u4e4b\u540e\u5df2\u7ecf\u53d6\u8fc7\u7684\u6700\u8fdc\u7684\u70b9\uff0c\u4e5f\u5c31\u662fi\u6700\u5927\u7684\u70b9\u3002\n\n\u4e4b\u540e\u6839\u636emx\uff0c\u5728mx\u7684\u5de6\u8fb9\u5bfb\u627e\u75b2\u52b3\u503c\u6700\u5927\u7684\u70b9\uff0c\u8bb0\u4e3aa1\u3002\u5728mx\u7684\u53f3\u8fb9\u5bfb\u627es[i]\\*2+a[i]\u6700\u5927\u7684\u70b9\uff0c\u8bb0\u4e3aa2\u3002\n\n\u56e0\u4e3aa1\u662f\u5728mx\u7684\u5de6\u8fb9\uff0c\u6240\u4ee5\u5982\u679c\u53d6\u5de6\u8fb9\u76f4\u63a5ans\u52a0\u4e0aa1\uff08\u6700\u5927\u75b2\u52b3\u503c\uff09\u5c31\u884c\u4e86\u3002\u4f46\u662f\u56e0\u4e3aa2\u5728mx\u53f3\u8fb9\uff0c\u6240\u4ee5\u5982\u679c\u53d6\u53f3\u8fb9\u9664\u4e86\u52a0\u4e0aa2\u8fd8\u8981\u51cf\u53bbs[mx]\\*2\uff0c\u56e0\u4e3a\u6211\u4eec\u7b49\u4e8e\u52a0\u4e86\u53cc\u91cd\u7684s\uff0c\u5373ans\u539f=s[mx]\\*2+a[mx] , a2=max(s[i]\\*2+a[i])(mx<i<=n) , ans\u73b0=ans\u539f+a2-s[mx]\\*2=s[mx]\\*2+a[mx]+max(s[i]\\*2+a[i])-s[mx]\\*2=a[mx]+max(s[i]\\*2+a[i])\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u66f4\u4f18\u5462\uff1f\n\n\u6839\u636e\u6211\u4eec\u5df2\u7ecf\u77e5\u9053a1\u4e0ea2\u5728\u5de6/\u53f3\u8fb9\u7684\u533a\u522b\uff0c\u90a3\u4e48\u76f4\u63a5\u5224\u65ad\u52a0\u5b8c\u4e4b\u540e\u7684\u6570\u54ea\u4e2a\u5927\u5c31\u597d\u5566\uff0c\u5373ans+a1 ?>(<) ans+a2-s[mx]\\*2\u3002\n\n\u7136\u540e\u5982\u679c\u53d6\u53f3\u8fb9\u7684\u70b9\uff0c\u5219\u8981\u66f4\u65b0mx\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u70b9\uff0c\u5c31\u662fmx-1<0\uff0cmx+1>n\uff0ca1=0\uff0ca2=0\u8fd9\u51e0\u79cd\u60c5\u51b5\u8981\u7279\u522b\u6ce8\u610f\uff0c\u5199\u7684\u65f6\u5019\u8bb0\u5f97\u52a0\u4e2a\u7279\u5224\u3002\n\n\u8bf4\u9053\u66f4\u65b0mx\uff0c\u5c31\u8981\u8bb0\u5f55\u6700\u5927\u70b9\u7684\u6240\u5728\u4f4d\u7f6e\uff0c\u53ea\u8981\u6bcf\u68f5\u6811\u5f00\u4e00\u4e2ap\u6570\u7ec4\u5b58\u4f4d\u7f6e\u5c31\u597d\u5566\u3002\n\n\u7136\u540e\u53d6\u8fc7\u7684\u70b9\u8bb0\u5f97\u6e05\u96f6\u5c31\u597d\u4e86\u3002\n\n```pascal\nuses math;\nvar n,i,j,ans,mx,a1,a2,pl1,pl2:longint;\nvar a,sum,mn,p,sum1,mn1,p1,v,aa:array[0..400020] of longint;\nprocedure up1(h:longint);\nbegin\n  sum[h]:=sum[h<<1]+sum[h<<1 or 1];\n  mn[h]:=max(mn[h<<1],mn[h<<1 or 1]);\n  if mn[h<<1]>mn[h<<1 or 1] then p[h]:=p[h<<1] else p[h]:=p[h<<1 or 1];\nend;\nprocedure up2(h:longint);\nbegin\n  sum1[h]:=sum1[h<<1]+sum1[h<<1 or 1];\n  mn1[h]:=max(mn1[h<<1],mn1[h<<1 or 1]);\n  if mn1[h<<1]>mn1[h<<1 or 1] then p1[h]:=p1[h<<1] else p1[h]:=p1[h<<1 or 1];\nend;\nprocedure build(h,l,r:longint);\nvar m:longint;\nbegin\n  if l=r then begin sum[h]:=a[l];mn[h]:=a[l];p[h]:=l;\n  sum1[h]:=aa[l];mn1[h]:=aa[l];p1[h]:=l;exit;end;\n  m:=(l+r)>>1;build(h<<1,l,m);build(h<<1 or 1,m+1,r);up1(h);up2(h);\nend;\nprocedure add1(h,c,l,r,x:longint);\nvar m:longint;\nbegin\n  if (x<=l) and (x>=r) then begin\n    inc(sum[h],c*(r-l+1));inc(mn[h],c);exit;end;\n  m:=(l+r)>>1;\n  if x<=m then add1(h<<1,c,l,m,x);\n  if x>m then add1(h<<1 or 1,c,m+1,r,x);\n  up1(h);\nend;\nprocedure add2(h,c,l,r,x:longint);\nvar m:longint;\nbegin\n  if (x<=l) and (x>=r) then begin\n    inc(sum1[h],c*(r-l+1));inc(mn1[h],c);exit;end;\n  m:=(l+r)>>1;\n  if x<=m then add2(h<<1,c,l,m,x);\n  if x>m then add2(h<<1 or 1,c,m+1,r,x);\n  up2(h);\nend;\nfunction wm1(h,l,r,x,y:longint):longint;\nvar m,ans,num:longint;\nbegin\n  if (x<=l) and (y>=r) then begin\n  exit(mn[h]);end;\n  m:=(l+r)>>1;ans:=-2147483647;\n  if x<=m then\n  begin\n    num:=wm1(h<<1,l,m,x,y);\n    if num>ans then begin ans:=num;pl1:=p[h<<1];end;\n  end;\n  if y>m then\n  begin\n    num:=wm1(h<<1 or 1,r+1,m,x,y);\n    if num>ans then begin ans:=num;pl1:=p[h<<1 or 1];end;\n  end;\n  exit(ans);\nend;\nfunction wm2(h,l,r,x,y:longint):longint;\nvar m,ans,num:longint;\nbegin\n  if (x<=l) and (y>=r) then begin\n  exit(mn1[h]);end;\n  m:=(l+r)>>1;ans:=-2147483647;\n  if x<=m then\n  begin\n    num:=wm2(h<<1,l,m,x,y);\n    if num>ans then begin ans:=num;pl2:=p1[h<<1];end;\n  end;\n  if y>m then\n  begin\n    num:=wm2(h<<1 or 1,r+1,m,x,y);\n    if num>ans then begin ans:=num;pl2:=p1[h<<1 or 1];end;\n  end; \n  exit(ans);\nend;\nbegin\n  read(n);for i:=1 to n do read(v[i]);\n  for i:=1 to n do begin read(aa[i]);a[i]:=v[i]*2+aa[i];end;build(1,1,n);\n  writeln(a[p[1]]);mx:=p[1];ans:=a[p[1]];\n  add1(1,-a[mx],1,n,mx);add2(1,-aa[mx],1,n,mx);\n  for i:=2 to n do\n  begin\n    a1:=wm2(1,1,n,1,mx-1);\n    a2:=wm1(1,1,n,mx+1,n);\n    if ((mx-1<0) or ((mx-1>0) and (mx+1<n) and (ans+a1>=ans+a2-v[mx]*2))\n    or (a1=0)) and (a2<>0) then\n    begin inc(ans,a2-v[mx]*2);mx:=pl1;end\n    else begin inc(ans,a1);pl1:=pl2;end;\n    writeln(ans);\n    add1(1,-a[pl1],1,n,pl1);add2(1,-aa[pl1],1,n,pl1);\n  end;\nend.\n```",
        "postTime": 1508942164,
        "uid": 20216,
        "name": "ligen131",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u6b64\u9898\u4f18\u5148\u961f\u5217\u89e3\u6cd5\uff1a\n\n\u601d\u8def\uff1a\u6211\u4eec\u7684\u6838\u5fc3\u8fd8\u662f\u8d2a\u5fc3\uff0c\u4f18\u5148\u961f\u5217\u7684\u597d\u5904\u5728\u4e8e\u91cd\u590d\u6570\u636e\u53d8\u66f4\u7684\u5904\u7406\u3002\n\n\u4ee3\u7801\u53c2\u7167\u5982\u4e0b\uff0c\u89e3\u9898\u7ec6\u8282\u5c3d\u5728\u5176\u4e2d\uff1a\n\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int maxn=100000;\nint X[maxn],T[maxn];\n```\nclass SEG\n{\npublic:\n\nint x,t;    // \u5728\u7c7b SEG \u58f0\u660e\u7ed3\u6784\u4f53\uff0c\u4f5c\u7528\u5b58\u50a8 \u79bb\u8857\u53e3\u7684\u8ddd\u79bb\uff08x\uff09\u548c\u5728\u8be5\u70b9\u7684\u75b2\u52b3\u503c\uff08t\uff09;\n\n```cpp\n    SEG(int x=0,int t=0):x(x),t(t){}\n};\nbool operator <(const SEG &t1,const SEG &t2)    // \"<\" \u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u8be5\u64cd\u4f5c\u5c06\u961f\u5217R\u4e2d\u7684\u8f83\u5c0f\u503c\u5411\u961f\u5c3e\u653e\uff0c\u5373R\u961f\u5217\u5355\u8c03\u9012\u51cf \uff1b\n{\n    return t1.t<t2.t;\n}\npriority_queue<int> L;   // \u7528\u6765\u5b58\u50a8  \u53d8\u91cf p\uff08\u89c1\u4e0b\uff09\u5de6\u4fa7\u4f4d\u7f6e\u70b9\u7684\u75b2\u52b3\u503c\uff08T[]\uff09\uff0c\u7531\u4e8e\u6570\u636e\u4fdd\u8bc1\u8ddd\u79bb\u4e3a\u4e0d\u964d\u5e8f\u5217\uff0c\u6240\u4ee5p\u5de6\u4fa7\u4f4f\u6237\u5f53\u524d\u9020\u6210\u7684\u5f71\u54cd\u53ea\u6709\u75b2\u52b3\u503c\uff1b\npriority_queue<SEG> R;   // \u7528\u6765\u5b58\u50a8  \u53d8\u91cf p\uff08\u89c1\u4e0b\uff09\u53f3\u4fa7\u4f4d\u7f6e\u70b9\u7684\u75b2\u52b3\u503c\u2014\u2014\uff082*(X[i]-X[p])+T[i]\uff09\u7531\u4e8e\u8ddd\u79bb\u8f83p\u800c\u8a00\u6bd4\u8f83\u8fdc\uff0c\u5f53\u7136\u5f71\u54cd\u8fd8\u5305\u62ec\u884c\u8d70\u5e26\u6765\u7684\u75b2\u52b3\u503c\uff1b\nint main()\n{\n    int n,np;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n      scanf(\"%d\",&X[i]);   //\u5b58\u50a8\u79bb\u8857\u53e3\u7684\u8ddd\u79bb\uff1b\n    for(int i=1;i<=n;i++)\n      scanf(\"%d\",&T[i]);   //\u5b58\u50a8\u5bf9\u5e94\u4f4f\u6237\u7684\u75b2\u52b3\u503c\uff1b\n    int ans=0,p=0;   //ans \u7528\u6765\u627e\u51fa\u7b54\u6848\uff1b\n    for(int i=1;i<=n;i++)\n      if(X[i]*2+T[i]>ans)\n      {\n       ans=X[i]*2+T[i];\n      p=i;   // \u6700\u5927\u75b2\u52b3\u503c\uff08\u5305\u62ec\u8d70\u51fa\u8857\u7684\u8ddd\u79bb\u6d88\u8017\uff09\u7684\u4f4d\u7f6e\uff1b\n          }\n    printf(\"%d\\n\",ans);\n    for(int i=1;i<p;i++)\n            L.push(int (T[i]));   //\u89e3\u91ca\u89c1\u58f0\u660e\u90e8\uff1b\n    for(int i=p+1;i<=n;i++)\n        R.push(SEG(X[i],2*(X[i]-X[p])+T[i]));   //\u89e3\u91ca\u89c1\u58f0\u660e\u90e8\uff0c\u6ce8\u610fR\u961f\u5217\u5b58\u50a8\u4e86\u4e24\u4e2a\u53d8\u91cf  X[i] --x     2*(X[i]-X[p])+T[i]--t  \uff1b\n    for(int j=2;j<=n;j++)\n    {\n       int lt=-1,rt;\n       SEG spot=(-1,-1);\n       if (!L.empty())lt=L.top();   //\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u53d8\u91cf lt \u627e\u5230\u5de6\u8fb9\u6700\u5927\u75b2\u52b3\u503c\uff08L.top()\u4e3a\u961f\u9996\u5b58\uff0c\u50a8\u961f\u5217\u4e2d\u6700\u5927\u503c\uff09\uff1b\n           if(!R.empty())spot=R.top();   //\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u53d8\u91cf rt \u627e\u5230\u53f3\u8fb9\u6700\u5927\u75b2\u52b3\u503c\uff08R.top()\u4e3a\u961f\u9996\u5b58\uff0c\u50a8\u961f\u5217\u4e2d\u6700\u5927\u503c\uff09\uff1b\n       rt=spot.t;\n       if(lt>=rt)   //\u5de6\u8fb9\u75b2\u52b3\u503c\u5927\u4e8e\u53f3\u8fb9\u75b2\u52b3\u503c\uff1b\n       {\n          ans+=lt;\n          L.pop();   //\u5c06\u961f\u9996\u51fa\u961f\u5217\uff1b\n       }\n       else   //\u53f3\u8fb9\u75b2\u52b3\u503c\u5927\u4e8e\u5de6\u8fb9\u75b2\u52b3\u503c\uff1b\n       {\n             np=spot.x;   // new postion\u627e\u5230\u65b0\u7684\u4f4d\u7f6e\uff08\u75b2\u52b3\u503cmax\uff09\uff1b\n             for(int i=p+1;i<np;i++)   // \u65e7\u4f4d\u7f6ep \u5230 \u65b0\u4f4d\u7f6enp \u4e4b\u95f4\u7684\u4f4f\u6237\u5bf9\u5f53\u524d\u70b9\u4f5c\u7528\u6548\u679c\u6539\u53d8\uff08\u6ce8\u610f np \u4e0d\u80fd\u5165\u961f\u5217\uff09\uff1b\n                 L.push(X[i]);\n             while(!R.empty())R.pop();   // p \u53f3\u4fa7\u70b9\u4f4d\u7f6e\u6e05\u7a7a\uff1b\n          for(int i=np+1;i<=n;i++)   // \u66f4\u65b0 np \u548c\u53f3\u4fa7\u70b9\u7684\u5173\u7cfb\uff1b\n              R.push(SEG(X[i],2*(X[i]-X[np])+T[i]));\n          p=np;   // \u6ce8\u610f\u4e00\u5b9a\u8981\u5c06 \u53d8\u91cfp \u66f4\u65b0\uff0c\u8fd9\u662f\u6211\u4eec\u4e0b\u4e00\u8f6e\u5224\u65ad\u7684\u6807\u51c6\uff1b\n          ans+=rt;\n          R.pop();    // \u961f\u9996\u51fa\u961f\u5217\uff1b\n       }\n       printf(\"%d\\n\",ans);\n    }\n   // system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1506709714,
        "uid": 28460,
        "name": "ango",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5173\u952e\u662f\u4e00\u4e2a\u8d2a\u5fc3\u6027\u8d28\uff1ax\u6bcf\u6b21\u589e\u5927\uff0c\u539f\u6709\u7684\u63a8\u9500\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u6027\u8d28\u53ef\u4ee5\u8bc1\u660e\uff0c\u8c8c\u4f3c\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u7136\u800c\u6211\u662f\u770b\u67d0\u8d34\u624d\u5f97\u77e5\u8fd9\u4e2a\u6027\u8d28\u7684\uff08\u6342\u8138\u3002\n\n\u77e5\u9053\u8fd9\u4e2a\u6027\u8d28\u4e4b\u540e\u5269\u4e0b\u6765\u5c31\u597d\u529e\u591a\u4e86\uff0c\u6211\u4eec\u53ea\u8981\u8003\u8651\u6bcf\u4e00\u6b21\u589e\u52a0\u54ea\u4e2a\u63a8\u9500\u4f4f\u6237\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u8bbe\u5f53\u524d\u96c6\u5408\u4e2d\u7b2c$i$\u4e2a\u5143\u7d20\u4e3a\u8ddd\u79bb\uff08\u7528$D$\u8868\u793a\uff09\u6700\u5927\u7684\u5143\u7d20\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5206\u754c\u70b9\u3002\u5bf9\u4e8e\u65b0\u52a0\u5165\u7684\u5143\u7d20$j$\uff1a\n\n- \u82e5$D_i>D_j$\uff0c\u5219ans\u76f4\u63a5\u52a0\u4e0a$j$\u7684\u75b2\u52b3\u503c\u3002\n\n- \u82e5$D_i<D_j$\uff0c\u5219ans\u52a0\u4e0a$D_j*2-D_i*2$\u518d\u52a0\u4e0a$j$\u7684\u75b2\u52b3\u503c\uff0c\u518d\u628a$i$\u66f4\u65b0\u4e3a$j$\u3002\n\n\u6211\u4eec\u6709\u4e24\u79cd\u53d6\u503c\u65b9\u6848\uff0c\u81ea\u7136\u5c31\u5bb9\u6613\u60f3\u5230\u628a\u5f53\u524d\u7684$i$\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u6bcf\u4e00\u90e8\u5206\u4e2d\u9009\u6700\u5927\u503c\uff0c\u518d\u4ece\u4e24\u4e2a\u6700\u5927\u503c\u4e2d\u9009\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u9009\u6700\u5927\u503c\u7528\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u7ef4\u62a4\u53ef\u4ee5\u505a\u5230$O(log_n)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog_n)$\u3002\u5f53\u7136\u4e2d\u9014\u6709\u4e00\u4e9b\u64cd\u4f5c\u4f7f\u5f97\u6700\u574f\u60c5\u51b5\u53ef\u80fd\u8fdc\u8fdc\u4e0d\u6b62\u8fd9\u4e2a\u590d\u6742\u5ea6\uff0c\u4f46\u662f\u901a\u8fc7\u6b64\u9898\u8db3\u77e3\u3002\uff08\u6211\u7684\u65f6\u95f4\u5e94\u8be5\u662f\u4e0d\u5feb\uff0c\u4f46\u4e5f\u4e0d\u7b97\u592a\u6162\u3002\uff09\n\n\u4ec5\u4ee5\u6b64\u9898\u89e3\u7eaa\u5ff5\u5f53\u5e74NOIP2015PJ\u8003\u6302\u7684\u81ea\u5df1\u3002\n\n\u4e0b\u9762\u9644\u4e0a\u4ee3\u7801\uff0c\u5e94\u8be5\u8fd8\u662f\u6709\u4e0d\u5c11\u7ec6\u8282\u95ee\u9898\u7684\u3002\n\n\u672c\u4eba\u624d\u758f\u5b66\u6d45\uff0c\u5982\u9898\u89e3\u6709\u8bef\uff0c\u8fd8\u8bf7\u8c05\u89e3\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int N=1000005;\nstruct Node\n{\n    int dist,wei;\n}a[N];\nint n;\nbool cmp(Node x, Node y)\n{\n    return x.dist<y.dist;\n}\nstruct Node2\n{\n    int id,dist,w;\n};\nbool operator < (Node2 x, Node2 y)\n{\n    return x.w>y.w;\n}\nint main()\n{\n    freopen(\"salesman.in\",\"r\",stdin);\n    freopen(\"salesman.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i].dist);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i].wei);\n    sort(a+1,a+1+n,cmp);\n    int ind=-1,tmp=-1;\n    for(int i=1;i<=n;i++) //\u521d\u59cb\u5316\u51fa\u7b2c\u4e00\u4e2a\u5206\u754c\u70b9\n    {\n        if(a[i].dist*2+a[i].wei>=tmp)\n        {\n            tmp=a[i].dist*2+a[i].wei;\n            ind=i;\n        }\n    } \n    int ans=tmp;\n    printf(\"%d\\n\",ans);\n    priority_queue<int> Q1;\n    priority_queue<Node2> Q2;\n    for(int i=1;i<ind;i++) Q1.push(a[i].wei);\n    for(int i=ind+1;i<=n;i++)\n        Q2.push((Node2){i,a[i].dist,a[i].dist*2+a[i].wei});\n    for(int i=2;i<=n;i++)\n    {\n        int t1; Node2 t2={0,-1,-1};\n        if(!Q1.empty()) t1=Q1.top();\n        if(!Q2.empty()) t2=Q2.top();\n        for(;!Q2.empty()&&t2.dist<a[ind].dist;Q2.pop(),t2=Q2.top()); \n                               //\u7531\u4e8e\u51fa\u961f\u53f3\u8fb9\u7684\u5806\u65e0\u6cd5\u5b9e\u73b0\uff0c\u6545\u53ea\u8981\u5224\u65ad\u5f53\u524d\u662f\u5426\u53ef\u884c\u5373\u53ef\n        if(ans+t1>ans+t2.w-a[ind].dist*2)\n        {\n            ans+=t1;\n            Q1.pop();\n        }\n        else\n        {\n            ans+=t2.w-a[ind].dist*2;\n            Q2.pop();\n            for(int j=ind+1;j<t2.id;j++) Q1.push(a[j].wei); //\u4fee\u6539\u5206\u754c\u70b9\u540e\u5728\u5de6\u5806\u6dfb\u52a0\u5143\u7d20\n            ind=t2.id;\n        }\n        printf(\"%d\\n\",ans);\n    }\n}\n```",
        "postTime": 1505837402,
        "uid": 9757,
        "name": "x_faraway_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u5176\u5b9e\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\u505a\u2026\u2026\n\n\u601d\u8def\u5982\u4e0b\uff1a\u5047\u8bbe\u5f53\u524d\u53d6\u5230\u6700\u5927\u503c\u65f6\u8d70\u5230\u4e86d\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u6700\u5927\u503c\u5c31\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u8981\u4e48\u5728d\u5de6\u8fb9\uff08\u4e0d\u7528\u518d\u52a0\u8ddd\u79bb\uff09\uff0c\u8981\u4e48\u5728d\u53f3\u8fb9\uff08\u9700\u8981\u52a0\u4e0a\u8ddd\u79bb\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u975e\u5e38\u5077\u7a0e\u5730\u7ef4\u62a4\u4e24\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u4ece\u4e0d\u540c\u7684\u533a\u95f4\u91cc\u53d6\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\u590d\u6742\u5ea6\u5927\u6982\u662fnlog(n)\u7684\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n\n\n    \n\n\n\n\n    \n    \n    \n    \n    \n    \n    \n            \n            \n                \n                \n            \n    \n\n    \n    \n    \n    \n    \n\n    \n    \n    \n\n    \n    \n        \n```cpp\n#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\ntypedef long long lint;\nlint dis[100010];//\u8ddd\u79bb\nlint data[100010];//\u75b2\u52b3\u503c\nstruct Info//\u5b58\u6700\u5927\u4fe1\u606f\n{\n    lint max;\n    int id;\n};\nstruct Node//\u7ebf\u6bb5\u6811\u8282\u70b9\n{\n    Info data;\n    Node* left;\n    Node* right;\n};\nNode* full_root = NULL;//\u5305\u542b\u8ddd\u79bb\u7684\u7ebf\u6bb5\u6811\nNode* part_root = NULL;//\u4e0d\u5305\u542b\u8ddd\u79bb\u7684\u7ebf\u6bb5\u6811\nvoid build(Node*, int, int);//\u5efa\u6811\nlint update(Node*, int, int, int, int);//\u5355\u70b9\u66f4\u65b0\nInfo getMax(Node*, int, int, int, int);//\u83b7\u53d6\u6700\u5927\nint main()\n{\n    //freopen(\"t.in\", \"r\", stdin);\n    int count = 0;\n    std::cin >> count;\n    for (int i = 0; i < count; i++)\n    {\n        lint d = 0;\n        std::cin >> d;\n        dis[i] = d;\n    }\n    for (int i = 0; i < count; i++)\n    {\n        lint v = 0;\n        std::cin >> v;\n        data[i] = v;\n    }\n    part_root = new Node();\n    build(part_root, 0, count - 1);\n    for (int i = 0; i < count; i++)\n    {\n        data[i] += dis[i] * 2;\n    }\n    full_root = new Node();\n    build(full_root, 0, count - 1);\n    int distance = -1;//\u6700\u8fdc\u8ddd\u79bb\u6807\u8bb0\n    lint ans = 0;\n    for (int i = 0; i < count; i++)\n    {\n        if (distance == -1)//\u8fd8\u6ca1\u6709\u51fa\u53d1\u8fc7\n        {\n            Info info = getMax(full_root, 0, count - 1, 0, count - 1);//\u52a0\u4e0a\u8ddd\u79bb\u7684\u6700\u5927\u503c\n            distance = info.id;\n            ans += info.max;\n            update(full_root, 0, count - 1, info.id, -1);\n            update(part_root, 0, count - 1, info.id, -1);//\u5728\u4e24\u68f5\u6811\u4e2d\u628a\u8fd9\u4e2a\u70b9\u5220\u6389\uff08\u6807\u8bb0\u4e3a-1\uff09\n            std::cout << ans << std::endl;\n        }\n        else if (distance < count - 1)//\u5982\u679c\u8fd8\u6ca1\u6709\u8d70\u5230\u6700\u8fdc\n        {\n            Info t1 = getMax(part_root, 0, distance, 0, distance);//\u6bd4\u6700\u8fdc\u8ddd\u79bb\u5c0f\uff08\u5c31\u662f\u4e0d\u7528\u518d\u989d\u5916\u8d70\u8def\u7684\uff09\u6700\u5927\u503c\n            Info t2 = getMax(full_root, distance + 1, count - 1, distance + 1, count - 1);//\u6bd4\u6700\u8fdc\u8ddd\u79bb\u5927\uff08\u5c31\u662f\u8981\u518d\u989d\u5916\u8d70\u8def\u7684\uff09\u6700\u5927\u503c\n            if (t1.max > t2.max - dis[distance] * 2)//\u5982\u679c\u4e0d\u7528\u8d70\u989d\u5916\u7684\u8def\uff08\u8bb0\u5f97\u628a\u539f\u6765\u7b97\u8fc7\u7684\u8ddd\u79bb\u526a\u6389\uff09\n            {\n                ans += t1.max;\n                update(part_root, 0, count - 1, t1.id, -1);\n                update(full_root, 0, count - 1, t1.id, -1);\n                std::cout << ans << std::endl;\n            }\n            else//\u5982\u679c\u8981\u8d70\u989d\u5916\u7684\u8def\n            {\n                ans += t2.max;\n                ans -= dis[distance] * 2;//\u5220\u6389\u539f\u6765\u7684\u8ddd\u79bb\uff0c\u65b0\u7684\u8ddd\u79bb\u5728t2\u4e2d\u5df2\u7ecf\u52a0\u8fc7\u4e86\n                distance = t2.id;\n                update(full_root, 0, count - 1, t2.id, -1);\n                update(part_root, 0, count - 1, t2.id, -1);\n                std::cout << ans << std::endl;\n            }\n        }\n        else//\u5df2\u7ecf\u662f\u6700\u8fdc\u7684\u4e86\n        {\n            Info info = getMax(part_root, 0, count - 1, 0, count - 1);\n            ans += info.max;\n            update(full_root, 0, count - 1, info.id, -1);\n            update(part_root, 0, count - 1, info.id, -1);\n            std::cout << ans << std::endl;\n        }\n    }\n    //system(\"pause\");\n    return 0;\n}\nvoid build(Node* root, int begin, int end)\n{\n    root->left = NULL;\n    root->right = NULL;\n    if (begin == end)\n    {\n        root->data.max = data[begin];\n        root->data.id = begin;\n        return;\n    }\n    int mid = (begin + end) / 2;\n    root->left = new Node();\n    root->right = new Node();\n    build(root->left, begin, mid);\n    build(root->right, mid + 1, end);\n    if (root->left->data.max > root->right->data.max)\n    {\n        root->data.max = root->left->data.max;\n        root->data.id = root->left->data.id;\n    }\n    else\n    {\n        root->data.max = root->right->data.max;\n        root->data.id = root->right->data.id;\n    }\n}\nlint update(Node* root, int begin, int end, int target, int val)\n{\n    if (begin == end && begin == target)\n    {\n        root->data.max = val;\n        return val;\n    }\n    int mid = (begin + end) / 2;\n    int temp = 0;\n    if (target <= mid)\n    {\n        temp = update(root->left, begin, mid, target, val);\n    }\n    else\n    {\n        temp = update(root->right, mid + 1, end, target, val);\n    }\n    if (root->left->data.max > root->right->data.max)\n    {\n        root->data.max = root->left->data.max;\n        root->data.id = root->left->data.id;\n    }\n    else\n    {\n        root->data.max = root->right->data.max;\n        root->data.id = root->right->data.id;\n    }\n    return root->data.max;\n}\nInfo getMax(Node* root, int begin, int end, int left, int right)\n{\n    if (begin == left && end == right)\n    {\n        return root->data;\n    }\n    int mid = (begin + end) / 2;\n    if (left > mid)\n    {\n        return getMax(root->right, mid + 1, end, left, right);\n    }\n    else if (right <= mid)\n    {\n        return getMax(root->left, begin, mid, left, right);\n    }\n    else\n    {\n        Info t1 = getMax(root->left, begin, mid, left, mid);\n        Info t2 = getMax(root->right, mid + 1, end, mid + 1, right);\n        if (t1.max > t2.max)\n        {\n            return t1;\n        }\n        else\n        {\n            return t2;\n        }\n    }\n}\n\n```",
        "postTime": 1490107552,
        "uid": 15854,
        "name": "NeilKleist",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u3010\u601d\u8def\u3011\n\n\u9898\u76ee\u8981\u6c42\u6bcf\u4e00\u4e2aX\u7684\u60c5\u51b5\uff0c\u663e\u7136\u4e0d\u80fd\u6bcf\u4e2aX\u4e13\u95e8\u63a8\u4e00\u904d\uff0c\u8981\u5145\u5206\u5229\u7528\u5df2\u77e5\u7684X\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u4f1a\u662fDP\u3002\n\n\u5b9a\u4e49f[i]\u4e3aX=i\u65f6\u7684\u6700\u5927\u75b2\u52b3\u503c\u3002\n\n\u5173\u952e\u662f\u600e\u4e48\u5efa\u7acb\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5462\uff1f\u8003\u8bd5\u65f6\u89c2\u5bdf\u4e86\u4e24\u7ec4\u6837\u4f8b\u6570\u636e\uff0c\u76f4\u89c9\u544a\u8bc9\u6211f[i+1]\u7684\u51b3\u7b56\u5e94\u8be5\u4f1a\u5305\u542bf[i]\u7684\u51b3\u7b56\uff08\u6b64\u5904\u7684\u51b3\u7b56\u6307\u4f4f\u6237\u4e0b\u6807\uff09\u3002\u4e8b\u5b9e\u4e0a\u4e5f\u786e\u5b9e\u5982\u6b64\u3002\n\n\u8bc1\u660e\uff1a\n\n\u8bbef[i]\u7684\u51b3\u7b56\u4e3ak1,k2,\u2026\u2026,ki(k1< k2<\u2026\u2026< ki)\uff0cf[i+1]\u7684\u51b3\u7b56\u5c06f[i]\u51b3\u7b56\u4e2d\u7684ks\u6362\u6210j\u5e76\u589e\u52a0\u4e86\u4e00\u4e2a\u51b3\u7b56ki+1\uff0cf[i+1]\u7684\u51b3\u7b56k\u4e2d\u6700\u5927\u7684\u4e3amaxk\u3002\n\nf[i]=2\\*s[ki]+\u03a3a[kt](1<=t<=i)\n\nf[i+1]=2\\*s[maxk]+ \u03a3a[kt](1<=t<=s-1)+ \u03a3a[kt](s+1<=t<=i)+a[j]+a[ki+1]\n\n\u22352\\*s[maxk]+ \u03a3a[kt](1<=t<=s-1)+ \u03a3a[kt](s+1<=t<=i)+a[j]\u662fX=i\u65f6\u7684\u4e00\u79cd\u51b3\u7b56\u7684\u75b2\u52b3\u503c\uff08\u5373\u51b3\u7b56\u4e3ak1,k2,\u2026\u2026ks-1,ks+1,\u2026\u2026ki,kj\u65f6\uff09\n\n\u22342\\*s[maxk]+ \u03a3a[kt](1<=t<=s-1)+ \u03a3a[kt](s+1<=t<=i)+a[j]<=f[i]\n\n\u22342\\*s[maxk]+ \u03a3a[kt](1<=t<=s-1)+ \u03a3a[kt](s+1<=t<=i)+a[j]+ a[ki+1]\n\n<=f[i]+ a[ki+1]\uff08\u5373\u51b3\u7b56\u4e3ak1,k2,\u2026\u2026,ks,\u2026\u2026,ki,ki+1\u65f6\u7684\u75b2\u52b3\u503c\uff09\n\n\u82e5\u5c0f\u4e8e\uff0c\u8bf4\u660e\u4fdd\u7559ks\u66f4\u4f18\uff1b\n\n\u82e5\u7b49\u4e8e\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u76ee\u524d\u75b2\u52b3\u503c\u76f8\u7b49\u7684\u51b3\u7b56\u5e8f\u5217k\uff0cmax{k}\u8d8a\u5c0f\u8d8a\u597d\uff08\u5c31\u662f\u8bf4\u76ee\u524d\u8d70\u7684\u8def\u7a0b\u8d8a\u77ed\u8d8a\u597d\uff09\uff0c\u56e0\u4e3a\u5728max{k}\u5de6\u8fb9\u7684\u51b3\u7b56l\u53ea\u80fd\u589e\u52a0a[l]\u7684\u75b2\u52b3\u503c\uff0c\u800c\u5bf9\u4e8emax{k}\u53f3\u8fb9\u7684\u51b3\u7b56r\u5219\u53ef\u4ee5\u589e\u52a02\\*(s[r]-s[max{k}])+a[r]\uff0c\u5bf9\u4e8e\u5de6\u8fb9\uff0cmax{k}\u6ca1\u6709\u5f71\u54cd\uff0c\u800c\u5bf9\u4e8e\u53f3\u8fb9\uff0cmax{k}\u8d8a\u5c0f\uff0c\u540e\u9762\u7684f[]\u589e\u52a0\u75b2\u52b3\u503c\u7684\u7a7a\u95f4\u8d8a\u5927\u3002\n\n\u6839\u636e\u4ee5\u4e0a\u539f\u5219\uff0c\u867d\u7136\u51b3\u7b56k1,k2,\u2026\u2026,ks,\u2026\u2026,ki\u4e0e\u51b3\u7b56k1,k2,\u2026\u2026ks-1,ks+1,\u2026\u2026ki,kj\u75b2\u52b3\u503c\u76f8\u7b49\uff0c\u4f46f[i]\u9009\u62e9\u4e86\u524d\u8005\uff0c\u8bf4\u660e\u524d\u8005\u66f4\u4f18\u3002\n\n\u7efc\u4e0a\uff0c\u65e0\u8bba\u5c0f\u4e8e\u6216\u7b49\u4e8e\uff0c\u51b3\u7b56k1,k2,\u2026\u2026,ks,\u2026\u2026,ki\u90fd\u6bd4\u51b3\u7b56k1,k2,\u2026\u2026ks-1,ks+1,\u2026\u2026ki,kj\u66f4\u4f18\u3002\n\n\u2234f[i+1]\u7684\u6700\u4f18\u51b3\u7b56\u4e00\u5b9a\u5305\u542b\u4e86f[i]\u7684\u6700\u4f18\u51b3\u7b56\uff0c\u8bc1\u6bd5.\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8ef[i]\uff0c\u53ea\u9700\u5728f[i-1]\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u4e2a\u6700\u4f18\u51b3\u7b56\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6613\u5f97\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\nf[i]=f[i-1]+max{max{a[k]|1<=k<maxi},max{2\\*(s[k]-s[maxi])+a[k]|maxi<k<=n}}\n\u5176\u4e2dk\u8868\u793a\u5f85\u9009\u51b3\u7b56\uff08\u5df2\u7ecf\u9009\u8fc7\u7684\u4e0d\u80fd\u518d\u9009\uff09\uff0cmaxi\u8868\u793af[i-1]\u7684\u51b3\u7b56\u5e8f\u5217\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\u51b3\u7b56\u3002\n\n\u89e3\u91ca\u4e00\u4e0b\uff1a\u56e0\u4e3amaxi\u5de6\u8fb9\u7684\u51b3\u7b56k\u4e0d\u4f1a\u589e\u52a0\u8ddd\u79bb\uff0c\u53ea\u589e\u52a0\u63a8\u9500\u7684\u75b2\u52b3\u503ca[k]\uff1b\u800cmaxi\u53f3\u8fb9\u7684\u51b3\u7b56k\u4e0d\u4ec5\u4f1a\u589e\u52a0\u75b2\u52b3\u503c\uff0c\u8fd8\u4f1a\u4f7f\u8ddd\u79bb\u4eces[maxi]\u589e\u52a0\u5230s[k]\uff0c\u6765\u56de\u8fd8\u8981\u00d72\uff0c\u4e5f\u5c31\u662f\u589e\u52a0\u4e862\\*(s[k]-s[maxi])+a[k]\n\n\u679a\u4e3ek\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n2)\u7684\uff0c\u53ea\u80fd\u5f9760\u5206\u3002\n\n\u505a\u5230\u8fd9\u91cc\uff0c\u4f18\u5316\u5df2\u7ecf\u5f88\u660e\u663e\u4e86\u3002\u5bf9\u4e8emaxi\u7684\u5de6\u8fb9\uff0c\u6211\u4eec\u9700\u8981\u52a8\u6001\u6c42\u533a\u95f4a[k]\u6700\u503c\uff0c\u65e0\u8bba\u662f\u5806\u3001\u7ebf\u6bb5\u6811\u3001\u4f18\u5148\u7ea7\u961f\u5217\u3001\u96c6\u5408\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662flog2n\u7ea7\u522b\u7684\uff1b\u800c\u5bf9\u4e8emaxi\u53f3\u8fb9\uff0c\u7531\u4e8e\u6240\u6709\u51b3\u7b56\u75b2\u52b3\u503c\u90fd\u8981\u51cf\u53bbs[maxi]\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u6c42\u533a\u95f42\\*s[k]+a[k]\u7684\u6700\u503c\uff0c\u800c\u4e14\u53ef\u7528\u51b3\u7b56\u5fc5\u7136\u662f\u4e0d\u65ad\u51cf\u5c11\u7684\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u6392\u4e2a\u9012\u51cf\u5e8f\uff0c\u6bcf\u6b21\u627e\u7b2c\u4e00\u4e2a\u5408\u6cd5\u51b3\u7b56\u3002\u5f53\u7136\uff0c\u5de6\u8fb9\u7684\u65b9\u6cd5\u5bf9\u4e8e\u53f3\u8fb9\u540c\u6837\u9002\u7528\u3002\u540c\u65f6\uff0c\u5982\u679c\u9009\u62e9\u4e86\u53f3\u8fb9\u7684\u51b3\u7b56k\uff0c\u8fd8\u9700\u8981\u5c06maxi\u5230k\u4e4b\u95f4\u7684\u51b3\u7b56\u52a0\u5165\u5230\u5de6\u8fb9\u7684\u5f85\u9009\u51b3\u7b56\u4e2d\u3002\uff08\u56e0\u4e3a\u5b83\u4eec\u7684\u8eab\u4efd\u5df2\u7ecf\u4ece\u53f3\u8fb9\u7684\u70b9\u53d8\u6210\u4e86\u5de6\u8fb9\u7684\u70b9\uff09\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u51b3\u7b56\u6700\u591a\u4ece\u53f3\u8fb9\u51fa\u4e00\u6b21\uff0c\u4ece\u5de6\u8fb9\u8fdb\u4e00\u6b21\u3001\u51fa\u4e00\u6b21\uff0c\u5747\u644a\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(nlog2n)\uff0c\u80fd\u5f97100\u5206\u3002\n\n\u3010\u65f6\u7a7a\u590d\u6742\u5ea6\u3011\n\nO(nlog2n)\uff0cO(n)\uff08\u53d6\u51b3\u4e8e\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\uff09\n\n\u3010\u6837\u4f8b\u7a0b\u5e8f\u3011\n\nset:\n\n\n\n\n```cpp\n#include <cstdio>\n#include <set>\nusing namespace std;\nconst int maxn=100000;\nint n,s[maxn+1],a[maxn+1];\nint f[maxn+1],maxi,l,r;\nbool used[maxn+1];\nstruct node\n{\n    int index,data;\n    node(int i,int d):index(i),data(d){}\n};\n```\nclass cmp\n{\npublic:\n\n\n\n    \n\n\n\n\n    \n\n```cpp\n        bool operator()(const node &a,const node &b)\n        {\n            if(a.data!=b.data)\n                return a.data>b.data;\n            else\n                return a.index<b.index;\n        }\n};\nset<node,cmp> left,right;\nvoid init()\n{\n    freopen(\"salesman.in\",\"r\",stdin);\n    freopen(\"salesman.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&s[i]);\n    left.clear();\n    right.clear();\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n     // node  n;   n.index=i;  n.data = 2*s[i]+a[i];  right.insert(n);\n        right.insert(node(i,2*s[i]+a[i]));\n    }\n}\nvoid choose_left(int i)\n{\n    f[i]=f[i-1]+a[l];\n    used[l]=true;\n}\nvoid choose_right(int i)\n{\n    f[i]=f[i-1]+2*(s[r]-s[maxi])+a[r];\n    used[r]=true;\n    for(int k=maxi+1;k<=r-1;k++)\n        left.insert(node(k,a[k]));\n    maxi=r;\n}\nvoid solve()\n{\n    for(int i=1;i<=n;i++)\n    {\n        while(!left.empty())\n        {\n            l=(*left.begin()).index;\n            if(l<maxi&&!used[l])\n                break;\n            left.erase(left.begin());\n        }\n        while(!right.empty())\n        {\n            r=(*right.begin()).index;\n            if(r>maxi&&!used[r])\n                break;\n            right.erase(right.begin());\n        }\n        if(left.empty())\n            choose_right(i);\n        else if(right.empty())\n            choose_left(i);\n        else if(a[l]>=2*(s[r]-s[maxi])+a[r])\n            choose_left(i);\n        else\n            choose_right(i);\n    }\n}\nvoid output()\n{\n    for(int i=1;i<=n;i++)\n        printf(\"%d\\n\",f[i]);\n    fclose(stdin);\n    fclose(stdout);\n}\nint main()\n{\n    init();\n    solve();\n    output();\n    return 0;\n}\n```",
        "postTime": 1475583316,
        "uid": 23845,
        "name": "Red_w1nE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u7684\u5206\u6790\u697c\u4e0b\u90fd\u6709\uff0c\u8fd9\u91cc\u4e0d\u5206\u6790\u4e86\n\n\u603b\u4e4b\uff0c\u5316\u4e3a\u6570\u5b66\u8bed\u8a00\u5c31\u662f\uff1a\n\n\u7ed9\u51fa\u4e00\u4e2aS\u6570\u7ec4\u548c\u4e00\u4e2aA\u6570\u7ec4\uff0c\u5e76\u4e14\u9009n\u6b21\uff0c\n\n\u7b2ci\u6b21\u9009i\u4e2a\u5143\u7d20\uff0c\u4f7f\u5f97\u8fd9i\u4e2a\u5143\u7d20\u4e2d\n\nS\u7684\u6700\u5927\u503c\\*2+\u6bcf\u4e00\u4e2a\u9009\u62e9\u7684\u5143\u7d20\u7684A\u503c\u6700\u5927\u3002\n\n\u800c\u4e14\uff0c\u8f93\u5165\u7ed9\u5b9a\u7684S\uff0c\u6ee1\u8db3S1<S2<S3<\u2026\u2026<Sn\u3002\n\n\u5176\u5b9e\uff08\u5728\u672c\u7ad9\u70b9\uff09\u53ef\u4ee5\u4e0d\u7528\u6811\u72b6\u6570\u7ec4\u6216\u8005\u7ebf\u6bb5\u6811\n\n\u7528MAX\\_S\u8bb0\u5f55\u5df2\u8d70\u8fc7\u7684\u6700\u8fdc\u8ddd\u79bb\uff0c\n\n\u76f4\u63a5\u7528  \u5806  \u6216\u8005  \u7ed3\u6784\u4f53\u7248\u7684STL\u4f18\u5148\u961f\u5217\n\n\u7528\u4e24\u4e2a\uff0c\u5206\u522b\u7ef4\u62a4S\u5c0f\u4e8eMAX\\_S\u7684\u90e8\u5206\u548cS\u5927\u4e8eMAX\\_S\u90e8\u5206\u7684\u6700\u5927\u503c\n\n\u6bcf\u6b21\u66f4\u65b0MAX\\_S\u65f6\uff0c\u5c06\u6240\u6709S\u5c0f\u4e8eMAX\\_S\u7684\u5730\u70b9\u52a0\u5165\u4e0a\u9762\u6240\u8bf4\u7684\u7b2c\u4e00\u4e2a\u5806\n\n\n\u9644AC\u4ee3\u7801\u548c\u6ce8\u91ca\uff1a\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#define MAX_N 100000\nusing namespace std;\nstruct Node {\n    int num, x;\n    //\u91cd\u8f7d\u8fd0\u7b97\u7b26 \n    bool operator < (const Node &a)const {\n        return a.x > x;    //\u5927\u6839\u5806 \n    }\n};\nint n;\nint s[MAX_N+50], a[MAX_N+50];\nNode t[MAX_N+50];\nbool mark[MAX_N+50];\n//mark\u6570\u7ec4\u7528\u4e8e\u6807\u8bb0\u90a3\u4e9b\u8282\u70b9\u5728heap2\u4e2d\uff0c \n//\u4e0b\u6807\u4e3a\u5730\u70b9\u7f16\u53f7\npriority_queue <Node> heap1, heap2;\n//heap1\u7528\u4e8e\u5b58\u50a8s\u503c\u5c0f\u4e8emax_s\u7684\u5730\u70b9\n//\u4ee5a\u503c\u4e3a\u4f18\u5148 \n//heap2\u7528\u4e8e\u5b58\u50a8s\u503c\u5927\u4e8emax_s\u7684\u5730\u70b9\n//\u4ee5a+s*2\u503c\u4e3a\u4f18\u5148 \nint main() {\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &s[i]);\n        s[i] *= 2;\n        t[i].x = s[i];\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d\", &a[i]);\n        t[i].num = i;\n        t[i].x += a[i];\n        heap1.push(t[i]);\n    }\n    int max_s = 0, tn, tot = 0;\n    Node add;\n    for (int j = 0; j < n; j++) {\n        tn = -1;\n        //\u73b0\u5728heap1\u4e2d\u9009\u6700\u5927\u503c \n        while (!heap1.empty()) {\n            //heap1\u4e2d\u6709\u53ef\u80fd\u6709\u8fdb\u5165heap2\u4f46\u4e3a\u88ab\u5220\u9664\u7684\u8282\u70b9\n            //\u53ef\u4ee5\u7528mark\u8fdb\u884c\u5224\u65ad \n            if (!mark[heap1.top().num] && s[heap1.top().num] > max_s) {\n                tn = heap1.top().num;\n                break;\n            }\n            heap1.pop();\n        }\n        if (!heap2.empty() && (heap2.top().x >= t[tn].x-max_s || tn == -1)) {\n            tot += heap2.top().x;\n            heap2.pop();    //\u5df2\u9009\u8fc7\uff0c\u51fa\u5806 \n        } else {\n            //\u66f4\u65b0tot\u603b\u503c\n            //\u6ce8\u610f\u5982\u679cs\u5927\u4e8emax_s\n            //\u5219\u8981\u51cf\u53bbmax_s\n            //\u4ee5\u514dmax_s\u91cd\u590d\u8ba1\u7b97 \n            tot += t[tn].x-max_s;\n            max_s = s[tn];\n            mark[tn] = true;\n            heap1.pop();    //\u5df2\u9009\u8fc7\uff0c\u51fa\u5806 \n            for (int i = 0; i < n; i++) {\n                if (s[i] > max_s)    break;\n                //\u56e0\u4e3as\u4ece\u5c0f\u5230\u5927\u6392\n                //\u7b2c\u4e00\u4e2as\u503c\u5927\u4e8emax_s\u7684\u8282\u70b9\u4e4b\u540e\u7684 \n                //\u6240\u6709\u8282\u70b9\u7684s\u503c\u5747\u5927\u4e8emax_s \n                if (!mark[i]) {\n                    //\u82e5heap2\u4e2d\u65e0\u6b64\u8282\u70b9\u5219\u52a0\u5165 \n                    add.num = i;\n                    add.x = a[i];\n                    heap2.push(add);\n                    mark[i] = true;\n                }\n            }\n        }\n        printf(\"%d\\n\", tot);\n    }\n    return 0;\n}\n```",
        "postTime": 1474288048,
        "uid": 12488,
        "name": "Azrael_Death",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u6837\u4f8b\uff0c\u53ef\u4ee5\u53d1\u73b0\u7b2c i-1 \u6b65\u9009\u62e9\u7684\u5730\u70b9\u603b\u662f\u88ab\u5305\u542b\u5728\u7b2c i \u6b65\u9009\u62e9\u7684\u5730\u70b9\u4e2d\u3002\u56e0\u6b64\u8fd9\u9898\u5f88\u53ef\u80fd\u5177\u6709\u8d2a\u5fc3\u7684\u53ef\u884c\u6027\u3002\u4ed4\u7ec6\u8bba\u8bc1\u4e00\u4e0b\uff0c\u53ef\u4ee5\u8bc1\u51fa\u8fd9\u4e2a\u7ed3\u8bba\u662f\u6b63\u786e\u7684\u3002\uff08\u53ef\u4ee5\u8fd0\u7528\u53cd\u8bc1\u6cd5\uff0c\u7c7b\u4f3c dijkstra\u7b97\u6cd5 \u7684\u8bc1\u660e\u65b9\u6cd5\uff09\u3002\n\n\u660e\u767d\u8fd9\u4e00\u70b9\u540e\uff0c\u7b97\u6cd5\u7684\u6b65\u9aa4\u5373\u4e3a\uff1a\u4ee4 S \u4e00\u5f00\u59cb\u4e3a\u5168\u4f53\u5730\u70b9\uff0csum=0\u3002\u6bcf\u4e00\u6b65\u4ece\u96c6\u5408 T \u4e2d\u9009\u53d6\u4e00\u4e2a\u5177\u6709\u6700\u5927\u5316\u5229\u76ca E[i] \u7684\u70b9 i\uff0c\u4ee4 sum += E[i]\uff0c\u8f93\u51fa sum\uff0c\u5e76\u5c06 i \u70b9\u4ece T \u4e2d\u5220\u9664\u3002\u8fd9\u91cc\u7684\u5229\u76ca\u6307\u7684\u662f\u8d70\u5230\u4e00\u4e2a\u70b9\u80fd\u589e\u52a0\u7684\u7684\u75b2\u60eb\u503c\u3002\n\n\u90a3\u4e48\u5229\u76ca E[i] \u5982\u4f55\u8ba1\u7b97\u5462\uff1f\u5f88\u663e\u7136\uff0c\u4e00\u5f00\u59cb\u65f6 E[i] \u7531\u4e0b\u5f0f\u7ed9\u51fa\n\nE[i] = A[i] + 2\\*S[i]\n\n\u7136\u800c\u5f53\u9009\u53d6\u4e86\u4e00\u4e2a\u70b9\u540e\uff0cE[i]\u9700\u8981\u8fdb\u884c\u76f8\u5e94\u7684\u66f4\u6539\u3002\u4ee5\u4e0b\u7684\u8ba8\u8bba\u4e2d\uff0c\n\n\u5047\u8bbe\u4e4b\u524d\u88ab\u9009\u4e2d\u7684 S \u6700\u5927\u7684\u70b9\uff08\u5373\u6700\u9760\u53f3\u7684\u70b9\uff09\u4e3a prev\uff0c\u5f53\u524d\u88ab\u9009\u4e2d\u7684\u70b9\u4e3a this \u3002\n\n1) \u4e3a\u4e86\u8ba9 this \u4e0d\u518d\u88ab\u9009\u4e2d\uff0c\u4ee4\n\nE[this] = -INF\n\n2) \u5bf9\u4e8e prev \u548c this \u4e4b\u95f4\uff08\u4e0d\u542b\u7aef\u70b9\uff09\u7684\u6240\u6709\u70b9 i\uff0c\u82e5 S[this] > S[prev]\uff1a\n\nE[i] -= 2 \\* (S[i]-S[prev])\n\n\u5426\u5219 E[i] \u4e0d\u53d8\u3002\u610f\u601d\u662f\uff1a\u82e5 this \u6bd4\u8d77 prev \u8fd8\u5f80\u524d\u8d70\u4e86\u4e00\u6bb5\u8ddd\u79bb\uff0c\u90a3\u4e48\u663e\u7136\u5728\u540e\u7eed\u8fc7\u7a0b\u4e2d\u8fd9\u4e9b\u70b9\u6240\u80fd\u83b7\u5f97\u7684\u5229\u76ca\u5c06\u51cf\u5c11\u4e24\u500d\u7684 i \u4e0e prev \u95f4\u7684\u8ddd\u79bb\u2014\u2014\u56e0\u4e3a\u8fd9\u4e00\u6b21\u5df2\u7ecf\u628a\u8fd9\u4e00\u6bb5\u8d70\u8fc7\u4e86\u3002\u82e5\u6ca1\u6709\u5f80\u524d\u8d70\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5229\u76ca\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\n\n3) \u5bf9\u4e8e this \u53f3\u8fb9\u7684\u6240\u6709\u70b9 i\uff0c\u82e5 S[this] > S[prev]\uff1a\n\nE[i] -= 2 \\* (S[this]-S[prev])\n\n\u5426\u5219 E[i] \u4e0d\u53d8\u3002\u89e3\u91ca\u540c\u60c5\u51b5 2\u3002\u4e0d\u660e\u767d\u7684\u53ef\u4ee5\u753b\u56fe\u9a8c\u8bc1\u3002\n\n\u63a5\u4e0b\u6765\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u662f\u5982\u4f55\u5feb\u901f\u66f4\u65b0\u5229\u76ca\u7684\u503c\uff0c\u5e76\u5feb\u901f\u5730\u627e\u51fa\u5176\u4e2d\u7684\u6700\u5927\u503c\u3002\u5982\u679c\u662f\u7eaf\u66b4\u529b\uff0c\u6bcf\u6b21\u9700\u8981 O(n) \u6765\u67e5\u8be2\u6700\u5927\u503c\u4e0e\u66f4\u65b0\uff0c\u603b\u8ba1\u662f O(n^2)\uff0c60\u5206\u5de6\u53f3\uff1b\u5982\u679c\u7528\u5806\uff0c\u6bcf\u6b21\u67e5\u8be2\u9700\u8981 O(log n)\uff0c\u4f46\u66f4\u65b0\u9700\u8981 O(n log n)\u3002\u8fd8\u4e0d\u5982\u66b4\u529b\u3002\n\n\u56e0\u4e3a\u6d89\u53ca\u533a\u95f4\u4fee\u6539\u548c\u67e5\u8be2\uff0c\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4\u6700\u503c\uff0c\u5e76\u9700\u8981\u652f\u6301\u533a\u95f4\u66f4\u65b0\u3002\u5e73\u644a\u4e0b\u6765\u67e5\u8be2\u4e0e\u66f4\u65b0\u90fd\u662f O(log n)\u3002\u4e4b\u6240\u4ee5\u8bf4\u662f\u5e73\u644a\uff0c\u662f\u56e0\u4e3a\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e2d\uff0c\u65e0\u6cd5\u8fdb\u884c\u6574\u6bb5\u533a\u95f4\u7684\u66f4\u65b0\uff0c\u800c\u53ea\u80fd\u5355\u70b9\u66f4\u65b0\uff08\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u51cf\u53bb\u7684\u503c\u4e0d\u540c\uff09\uff0c\u5177\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e0d\u5b9a\u7684\u3002\u4f46\u662f\u7531\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6765\u8bf4\u81f3\u591a\u51fa\u73b0\u4e00\u6b21\uff0c\u5355\u70b9\u66f4\u65b0\u7684\u603b\u6b21\u6570\u662f O(n)\uff0c\u6545\u5e73\u644a\u4e0b\u6765\u8fd8\u662f O(log n)\u3002\n",
        "postTime": 1460640406,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2672 \u3010\u63a8\u9500\u5458\u3011"
    }
]