[
    {
        "content": "### \u524d\u7f6e\u829d\u58eb\uff1a\n1. \u521d\u4e2d\u7269\u7406\uff08\u5927\u6982\u521d\u4e00\u521d\u4e8c\u6c34\u5e73\uff1f\uff09\n\n2. \u56fe\u8bba\uff08\u4f1a\u5efa\u56fe\u5c31\u884c\uff09 \n\n3. dfs  \n\n  \n\n\n------------\n\u6b64\u5904\u5148\u4ee5\u6837\u4f8b\u4e09\u4e3a\u4f8b  \n![](https://cdn.luogu.com.cn/upload/image_hosting/i3ajpl4l.png)  \n\n\u5728\u8bfb\u5165\u6570\u636e\u4e4b\u540e\u5f88\u8f7b\u677e\u5c31\u80fd\u5efa\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684\u56fe\uff0c\u5176\u4e2d16\u662f\u8d77\u70b9\uff0c1\u662f\u7ec8\u70b9  \n\u4f46\u662f\u7535\u6d41\u662f\u5e26\u6709\u65b9\u5411\u7684\uff0c\u800c\u4e0a\u9762\u8fd9\u4e2a\u56fe\u7531\u4e8e\u662f\u65e0\u5411\u8fb9\uff0c\u4e0d\u80fd\u5f88\u597d\u5730\u6a21\u62df\u7535\u6d41  \n\n\u4e8e\u662f\u8003\u8651\u628a\u4e0a\u9762\u7684\u56fe\u8f6c\u6362\u6210\u6709\u5411\u56fe  \n![](https://cdn.luogu.com.cn/upload/image_hosting/t5jvm9r9.png)  \n\u8fd9\u6837\u5b50\u5c31\u65b9\u4fbf\u591a\u4e86\uff0c\u53ea\u8981\u904d\u5386\u4e00\u904d\u56fe\u5c31\u53ef\u4ee5\u6c42\u51fa\u603b\u7535\u963b\u4e86\uff08~~\u7535\u963b\u516c\u5f0f\u4e0d\u7528\u6211\u591a\u8bf4\u4e86\u5427~~\uff09  \n\u6839\u636e\u4e32\u8fde\u7535\u8def\u7684\u6027\u8d28\uff0c\u6700\u5927\u7535\u6d41\u80af\u5b9a\u5c31\u662f\u603b\u7535\u538b\u9664\u4ee5\u603b\u7535\u963b  \n\u800c\u6700\u5c0f\u7535\u6d41\u5219\u80af\u5b9a\u51fa\u73b0\u5728\u67d0\u6761\u5e76\u8054\u7535\u8def\u7684\u652f\u8def\u4e0a\u9762  \n\u8fd9\u91cc\u4ee5\u4e0a\u56fe\u4e2d15->11\u8fd9\u4e00\u6bb5\u7535\u8def\u4e3a\u4f8b\uff0c\u8bbe\u8fd9\u4e00\u6bb5\u7684\u7535\u963b\u4e3a$R_\\texttt{\u5e76}$  \n\u4e8e\u662f\u6c42\u5176\u4e2d\u4efb\u610f\u4e00\u6bb5\u7684\u7535\u6d41\u5c31\u662f$\\frac {\\frac {R_\\texttt{\u603b}}{R_\\texttt{\u5e76}}*U}{R}$  \n\u5269\u4e0b\u7684\u5c31\u662f\u4ee3\u7801\u5b9e\u73b0\u4e86  \n\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define ri register int\n#define ll long long\nconst int MAXN=2e4+7,MAXM=5e4+7;\nil ll read(){\n    bool f=true;ll x=0;\n    register char ch=getchar();\n    while(ch<'0'||ch>'9') {if(ch=='-') f=false;ch=getchar();}\n    while(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    if(f) return x;\n    return ~(--x);\n}\nil void write(const ll &x){if(x>9) write(x/10);putchar(x%10+'0');}\nvector<int> g[MAXN],vv[MAXN],to[MAXN],v[MAXN];//g,vv\u662f\u4e00\u5f00\u59cb\u7684\u65e0\u5411\u8fb9;to,v\u662f\u540e\u6765\u7684\u6709\u5411\u8fb9\nint n,m,be,ed;\nll power;//\u603b\u7535\u538b\nint mark[MAXN];//\u6807\u8bb0\u662f\u5426\u5230\u8fbe\u8fc7\nint cnt[MAXN],Cnt[MAXN];//\u7528\u6765\u5efa\u56fe\u7684\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7b2c\u4e00\u4e2a\u662f\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5165\u5ea6\n//\u8fd9\u4e09\u4e2a\u7528\u6765\u8bb0\u5f55\u5e76\u8054\u7535\u8def\u7684\u4f4d\u7f6e\uff0c\u7535\u963b\u5927\u5c0f\u4ee5\u53ca\u6700\u5927\u652f\u8def\u7535\u963b\nvector<int> bp;\nvector<double> va;\nvector<ll> maxs; \nbool flag=true;//\u5efa\u56fe\u65f6\u4f7f\u7528\nbool fl[MAXN];//\u6807\u8bb0\u662f\u5426\u662f\u5e76\u8054\u7535\u8def\nll get(ll x,ll y){return x/(__gcd(x,y))*y;}\nvoid dfs1(int now){\n    if(now==ed) return;\n    if(cnt[now]==1){//\u5982\u679c\u5f53\u524d\u7ed3\u70b9\u4f4d\u7f6e\u662f\u4e00\u4e2a\u4e32\u8fde\u7535\u8def\n        mark[now]=1;\n        for(ri i=0;i<g[now].size();++i){\n            int x=g[now][i];\n            if(mark[x]) continue;\n            --cnt[x];\n            ++Cnt[x];\n            to[now].push_back(x),v[now].push_back(vv[now][i]);\n            dfs1(x);\n        }\n    }\n    else if(flag){//\u5982\u679c\u4e0d\u662f\u4e32\u8fde\u7535\u8def\uff0c\u4e14flag\u4e3a\u771f\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u8fd9\u4e2a\u70b9\u662f\u5e76\u8054\u7535\u8def\u7684\u8d77\u70b9\n    //\u5177\u4f53\u5b9e\u73b0\u8fd8\u662f\u770b\u4ee3\u7801\u5427\n        fl[now]=true;\n        bp.push_back(now);\n        flag=false;\n        mark[now]=1;\n        for(ri i=0;i<g[now].size();++i){\n            int x=g[now][i];\n            if(mark[x]) continue;\n            to[now].push_back(x),v[now].push_back(vv[now][i]);\n            if(cnt[now]--==1){\n                flag=true;\n            }\n            --cnt[x];\n            ++Cnt[x];\n            dfs1(x);\n        }\n    }\n}\ndouble ans=0;//\u603b\u7535\u963b\nvoid get_ans(int rot){//\u7528\u6765\u6c42\u603b\u7535\u963b\u7684\n    while(rot!=ed){//\u5982\u679c\u8fdb\u5165\u4e86\u5e76\u8054\u7535\u8def\n        if(fl[rot]){\n            double use=0;//\u8be5\u5e76\u8054\u7535\u8def\u7684\u603b\u7535\u963b\n            ll rem=0;//\u8be5\u5e76\u8054\u7535\u8def\u4e2d\u6700\u5927\u7684\u652f\u8def\u7535\u963b\n            int x=0;//\u5f53\u524d\u7ed3\u70b9\u4f4d\u7f6e\n            for(ri i=0;i<to[rot].size();++i){\n                //\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\u8ddf\u65e0\u5411\u56fe\u8f6c\u6709\u5411\u56fe\u8fc7\u7a0b\u5dee\u4e0d\u591a\uff0c\u7531\u4e8e\u524d\u9762\u5df2\u7ecf\u8f6c\u6362\u8fc7\u4e00\u904d\uff0c\u8fd9\u4e2a\u5730\u65b9\u4f1a\u597d\u505a\u5f88\u591a\n                ll sum=v[rot][i];\n                x=to[rot][i];\n                while(Cnt[x]==1){\n                    sum+=v[x][0];\n                    x=to[x][0];\n                }\n                ssum+=sum;\n                use+=1.0/double(sum);\n                rem=max(rem,sum);\n            }\n            va.push_back(1.0/use);\n            rot=x;\n            ans+=1.0/use;\n            maxs.push_back(rem);\n        }\n        else{//\u5982\u679c\u662f\u4e32\u8fde\u7535\u8def\u7535\u963b\u76f4\u63a5\u7d2f\u52a0\u5c31\u597d\u4e86\n            ans+=v[rot][0];\n            rot=to[rot][0];\n        }\n    }\n    printf(\"%.2lf\\n\",double(power)/ans);//\u8f93\u51fa\u6700\u5927\u7535\u6d41\n}\nint main(){\n    n=read(),m=read();\n    for(ri i=1;i<=m;++i){\n        int x=read(),y=read();\n        char kind=getchar();\n        int val=read();\n        if(kind=='R'){\n            g[x].push_back(y),g[y].push_back(x),++cnt[x],++cnt[y];\n            vv[x].push_back(val),vv[y].push_back(val);\n        }\n        else{\n            be=y,ed=x,power=val;\n        }\n    }\n    dfs1(be);\n    get_ans(be);\n    double anss=double(power)/ans;//\u6700\u5c0f\u7535\u6d41\uff0c\u521d\u59cb\u4e3a\u8ddf\u6700\u5927\u7535\u6d41\u4e00\u6837\n    for(ri i=0;i<bp.size();++i){//\u5728\u6240\u6709\u7684\u5e76\u8054\u7535\u8def\u4e2d\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7535\u6d41\n        anss=min(anss,(va[i]/ans)*double(power)/maxs[i]);\n    }\n    printf(\"%.2lf\",anss);\n    return 0;\n}\n```\n\u5176\u5b9e\u8fd8\u6709\u4e2a\u5730\u65b9\u53ef\u4ee5\u4f18\u5316\u4e00\u4e0b,\u628a\u516c\u5f0f\u4f18\u5316\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230  \n$I_{min}=\\frac {{R_\\texttt{\u603b}}*U}{\\frac {R}{R_\\texttt{\u5e76}}}$  \uff0c\u7b49\u5f0f\u4e0a\u65b9\u662f\u4e00\u4e2a\u5b9a\u503c  \n\u6240\u4ee5\u53ea\u8981\u5f97\u5230\u6700\u5927\u7684$\\frac {R}{R_\\texttt{\u5e76}}$\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e00\u6b65\u53ef\u4ee5\u5728\u7b97\u603b\u7535\u963b\u7684\u65f6\u5019\u4e00\u5e76\u8ba1\u7b97  \n~~\u61d2\u5f97\u6539\u4e86~~",
        "postTime": 1603256970,
        "uid": 206998,
        "name": "Krimson",
        "ccfLevel": 0,
        "title": "P4946 \u6d41\u91cf\u8ba1\u7b97\u9898\u89e3"
    },
    {
        "content": "\u8003\u5bdf\u77e5\u8bc6\uff1a\u56fe\u8bba\uff0c\u6570\u5b66\uff0c\u63a8\u5bfc\uff0c\u641c\u7d22\n\n\u7b97\u6cd5\u96be\u5ea6\uff1aXXXX \u5b9e\u73b0\u96be\u5ea6\uff1aXXXX\n\n---\n\n\u5206\u6790\uff1a\n\n\u8fd9\u9053\u9898\u9700\u8981\u5927\u5bb6\u6709\u4e00\u5b9a\u7684\u7535\u5b66\u77e5\u8bc6\u548c\u6570\u5b66\u63a8\u5bfc\u80fd\u529b\u3002\n\n\u5148\u63a8\u5bfc\u51e0\u4e2a\u7535\u5b66\u7ed3\u8bba\uff1a\n\n\u7ed3\u8bba\u4e00\uff1a\u5bf9\u4e8e\u4e32\u8054\u7535\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7535\u963b$R_1,R_2,...,R_n$\u770b\u4f5c\u4e00\u4e2a\u7b49\u6548\u7535\u963b\uff1a$R_{\\sum}=\\sum_{i=1}^n R_i$\n\n\u8bc1\u660e\uff1a\u6613\u5f97\uff0c\u7565\n\n\u7ed3\u8bba\u4e8c\uff1a\u5bf9\u4e8e\u4e00\u4e2a\uff08\u7b49\u6548\uff09\u5e76\u8054\u7535\u8def\uff0c\u7535\u963b\u5206\u522b\u4e3a\u7b49\u6548\u7535\u963b\u4e3a\uff1a$R_{\\sum}=\\frac{1}{\\sum_{i=1}^n \\frac{1}{R_i}}$\n\n\u8bc1\u660e\uff1a\u8bbe\u7535\u538b\u4e3a U\uff0c\u7531\u6b27\u59c6\u5b9a\u5f8b\uff0c\u603b\u7535\u6d41\u4e3a\uff1a$I_{\\sum}=\\sum_{i=1}^n \\frac{U}{R_i}$\uff0c\u6545\u7b49\u6548\u7535\u963b\u4e3a\uff1a$R_{\\sum}=\\frac{U}{I_{\\sum}}=\\frac{1}{\\sum_{i=1}^n \\frac{1}{R_i}}$\n\n\u7ed3\u8bba\u4e09\uff1a\u5bf9\u4e8e\u4e00\u4e2a\uff08\u7b49\u6548\uff09\u5e76\u8054\u7535\u8def\uff0c\u7535\u963b\u5206\u522b\u4e3a\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u4e0b\u9762\u7684\u7b97\u6cd5\u8ba1\u7b97\u7b49\u6548\u7535\u963b\uff1a\n\n```cpp\ndouble R_=R[1];\nfor(int i=2;i<=n;i++) R_=R_*R[i]/(R_+R[i]);\nans=R_;\n```\n\n\u8bc1\u660e\uff1a\u7ed3\u8bba\u4e8c\u7684\u4e8c\u7ef4\u5f62\u5f0f\uff1a$R_{1,2}=\\frac{R_1R_2}{R_1+R_2}$\uff0c\u6bcf\u6b21\u5c06\u4e24\u4e2a\u7535\u963b\u5408\u5e76\u4e3a\u4e00\u4e2a\u7b49\u6548\u7535\u963b\uff0c\u6700\u540e\u7684\u503c\u5373\u4e3a\u603b\u7b49\u6548\u7535\u963b\n\n\u7ed3\u8bba\u56db\uff1a\u5bf9\u4e8e\u4e00\u4e2a\uff08\u7b49\u6548\uff09\u5e76\u8054\u7535\u8def\uff0c\u7535\u963b\u5206\u522b\u4e3a$R_1,R_2,...,R_n$\uff0c\u5176\u652f\u8def\u6700\u5c0f\u7535\u6d41\u4e3a\uff1a$\\frac{R_{\\sum}I_{\\sum}}{max\\{R_i\\}}$\n\n\u8bc1\u660e\uff1a\u6211\u4eec\u77e5\u9053\uff0c\u6700\u5c0f\u7535\u6d41\u5728\u7535\u963b\u6700\u5927\u7684\u652f\u8def\u4e0a\uff0c\u5373$max\\{R_i\\}$\uff0c\u800c\u7535\u538b\u4e3a$R_{\\sum}I_{\\sum}$\uff0c\u7531$I=\\frac{U}{R}$\uff0c\u5c31\u5f97\u5230\u7ed3\u8bba\n\n\u6709\u4e86\u8fd9\u51e0\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u52a8\u624b\u4e86\uff1a\n\n1.\u5148\u7528\u7ed3\u8bba\u4e09\u5904\u7406\u91cd\u8fb9\n\n2.\u7136\u540ebfs\u6c42\u51fa\u7531\u7535\u6e90\u6b63\u6781\u5230\u8d1f\u6781\u7684\u4e00\u6761\u8def\u5f84\n\n3.\u4ee5\u8fd9\u6761\u8def\u5f84\u4e3a\u4e3b\u7ebf\u5f00\u59cb\u5904\u7406\uff0c\u9047\u5230\u5206\u53c9\u8fb9\u5c31\u8868\u660e\u6b64\u5904\u6709\u5e76\u8054\u5d4c\u5957\u4e32\u8054\uff0c\u7528\u7ed3\u8bba\u4e00+dfs\u8ba1\u7b97\u5d4c\u5957\u4e32\u8054\u7684\u7b49\u6548\u7535\u963b\uff0c\u5e76\u8bb0\u4e0b$k=min\\{k,\\frac{R_{\\sum}}{max\\{R_i\\}}\\}$\uff0c\u7136\u540e\u5229\u7528\u7ed3\u8bba\u4e09\u8fdb\u884c\u5e76\u8054\u7535\u963b\u7684\u5408\u5e76\n\n4.\u5c06\u6240\u6709\u7b49\u6548\u7535\u963b\u6c42\u548c\uff0c\u5373\u4e3a\u6574\u4e2a\u7535\u8def\u7684\u603b\u7b49\u6548\u7535\u963b\uff0c\u5982\u679c\u4e3b\u7ebf\u7535\u6d41\u4e3a$I$\u5219\u6700\u5c0f\u7535\u6d41$I_{min}=kI$\n\n---\n\n\u539f\u6587\u5730\u5740\uff1a[\u3010\u6d1b\u8c37\u3011NOIP2018\u539f\u521b\u6a21\u62df\u8d5bDAY2\u9898\u89e3](https://blog.csdn.net/hi_ker/article/details/82820861)\n\n\n------------\n\u539f\u6587\u5730\u5740\u5df2\u7ecf\u4fee\u6539\n\n$2019.2.23\\,\\,\\,\\ --AFO$_$OIer$",
        "postTime": 1540379712,
        "uid": 85423,
        "name": "Voldermod",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4946 \u3010\u6d41\u91cf\u8ba1\u7b97\u3011"
    }
]