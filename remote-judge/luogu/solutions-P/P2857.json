[
    {
        "content": "## Description\n\n\u7ed9\u5b9a $n$ \u5934\u725b\u548c $b$ \u5ea7\u725b\u68da\uff0c\u5df2\u77e5\u6bcf\u5934\u725b\u6700\u559c\u6b22\uff0c\u7b2c $2$ \u559c\u6b22\uff0c\u7b2c $3$ \u559c\u6b22\uff0c\u2026\u2026\uff0c\u7b2c $b$ \u559c\u6b22\u7684\u725b\u68da\u5206\u522b\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u725b\u68da\u7684\u5bb9\u91cf $v_i$\uff08\u6700\u591a\u80fd\u4f4f $v_i$ \u5934\u725b\uff09\u3002\u5982\u679c\u67d0\u5934\u725b\u4f4f\u5728\u7b2c $i$ \u559c\u6b22\u7684\u725b\u68da\u91cc\uff0c\u5219\u8fd9\u5934\u725b\u7684\u4e0d\u6ee1\u610f\u5ea6\u4e3a $i$ \u3002\u6c42\u5982\u4f55\u5206\u914d\u725b\u68da\uff0c\u4f7f\u6240\u6709\u725b\u7684 **\u6700\u5927\u4e0d\u6ee1\u610f\u5ea6 - \u6700\u5c0f\u4e0d\u6ee1\u610f\u5ea6 + 1** \u7684\u503c\u6700\u5c0f\u3002\u8f93\u51fa\u8fd9\u4e2a\u503c\u662f\u591a\u5c11\u3002\n\n$(1 \\leq n \\leq 10^3,1 \\leq b \\leq 20,\\sum\\limits_{i = 1}^n v_i = n)$\n\n## Solution\n\n\u8003\u8651 **\u7f51\u7edc\u6d41 + \u4e8c\u5206\u7b54\u6848** \u3002\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u56fe\u5206\u6210\u4e24\u90e8\u5206\u3002\u5de6\u90e8\u70b9\u662f\u725b\uff0c\u53f3\u90e8\u70b9\u662f\u725b\u68da\u3002\n\n\u5728\u6e90\u70b9\u4e0e\u6bcf\u5934\u725b\u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\uff08\u4e00\u5934\u725b\u6700\u5927\u8d21\u732e\u4e3a $1$\uff09\uff0c\u5728\u7b2c $i$ \u4e2a\u725b\u68da\u4e0e\u6c47\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $v_i$ \u7684\u8fb9\uff08\u4e00\u4e2a\u725b\u68da\u6700\u5927\u8d21\u732e\u4e3a $v_i$\uff09\u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\u6240\u5efa\u51fa\u7684\u56fe\uff1a\n\n![VlHlCQ.png](https://s2.ax1x.com/2019/05/31/VlHlCQ.png)\n\n\u725b\u548c\u725b\u68da\u4e4b\u95f4\u7684\u8fb9\u5462\uff1f\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u5168\u90e8\u8fde\u4e0a\u3002\n\n\u6211\u4eec\u53ef\u4ee5 **\u4e8c\u5206\u7b54\u6848**\uff08\u5047\u8bbe\u7b54\u6848\u4e3a $x$\uff09\uff0c\u7136\u540e\u679a\u4e3e\u6240\u6709\u725b\u7684 **\u6700\u5c0f\u4e0d\u6ee1\u610f\u5ea6** $i$\uff0c\u90a3\u4e48 **\u6700\u5927\u4e0d\u6ee1\u610f\u5ea6** \u4e3a $i + x - 1$ \u3002\n\n\u5373\u6bcf\u5934\u725b\u4e0d\u6ee1\u610f\u5ea6\u6240\u5728\u7684\u533a\u95f4\u4e3a $[i,i + x - 1]$ \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5934\u725b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5b83\u4e0e\u5b83\u7b2c $i \\sim i + x - 1$ \u559c\u6b22\u7684\u725b\u68da\u4e4b\u95f4\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\u3002\u63a5\u7740\u7528 $\\rm dinic$ \u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u82e5\u6700\u5927\u6d41\u4e3a $n$\uff0c\u5219\u8fd9\u4e2a\u7b54\u6848\u53ef\u884c\u3002\n\n\u4e0d\u8fc7\u7531\u4e8e\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u66b4\u529b\u679a\u4e3e\u4e5f\u80fd\u8fc7\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x = f ? -x : x;\n}\n\ntemplate <class T>\ninline void write(T x) {\n    if (x < 0) {\n        putchar('-');\n        x = -x;\n    }\n    T y = 1;\n    int len = 1;\n    for (; y <= x / 10; y *= 10) ++len;\n    for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\nconst int MAXN = 2e3, MAXB = 20, MAXM = 1e5, INF = 0x3f3f3f3f;\nint n, b, ans, tot, head[MAXN + 5], cur[MAXN + 5], depth[MAXN + 5];\nint v[MAXB + 5], f[MAXN + 5][MAXB + 5];\nstruct Edge {\n    int next, to, dis;\n} e[MAXM + 5];\n\ninline void addEdge(int u, int v, int w) {\n    e[++tot] = (Edge) { head[u], v, w };\n    head[u] = tot;\n}\n\ninline bool bfs(int s, int t) {\n    for (int i = 0; i <= t; ++i) cur[i] = head[i];\n    memset(depth, 0, sizeof (depth));\n    queue<int> q;\n    depth[s] = 1;\n    q.push(s);\n    for (; !q.empty(); ) {\n        int u = q.front();\n        q.pop();\n        for (int v, w, i = head[u]; v = e[i].to, w = e[i].dis, i; i = e[i].next) {\n            if (depth[v] || !w) continue;\n            depth[v] = depth[u] + 1;\n            if (v == t) return 1;\n            q.push(v);\n        }\n    }\n    return 0;\n}\n\nint dinic(int u, int t, int flow) {\n    if (u == t) return flow;\n    int rest = flow;\n    for (int v, w, i = cur[u]; v = e[i].to, w = e[i].dis, i && rest; i = e[i].next) {\n        cur[u] = i;//\u5f53\u524d\u5f27\u4f18\u5316 \n        if (depth[v] != depth[u] + 1 || !w) continue;\n        int k = dinic(v, t, min(rest, w));\n        if (!k) depth[v] = 0;\n        else {\n            e[i].dis -= k;\n            e[i ^ 1].dis += k;\n            rest -= k;\n        }\n    }\n    return flow - rest;\n}\n\ninline int maxFlow(int s, int t) {\n    int res = 0;\n    for (; bfs(s, t); ) res += dinic(s, t, INF);\n    return res;\n}\n\ninline bool check(int x) {//\u68c0\u67e5\u7b54\u6848 x\n    for (int i = 1; i + x - 1 <= b; ++i) {\n        //\u6700\u5c0f\u6ee1\u610f\u5ea6\u4e3a i\uff0c\u6700\u5927\u6ee1\u610f\u5ea6\u4e3a i + x - 1\n        tot = 1;\n        memset(head, 0, sizeof (head));\n        int s = 0, t = n + b + 1;//\u6e90\u70b9\u7f16\u53f7\u548c\u6c47\u70b9\u7f16\u53f7 \n        for (int j = 1; j <= n; ++j)//\u6e90\u70b9\u4e0e\u725b\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a 1 \u7684\u8fb9 \n            addEdge(s, j, 1), addEdge(j, s, 0);\n        for (int j = 1; j <= b; ++j)//\u725b\u68da\u4e0e\u6c47\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a v[j] \u7684\u8fb9 \n            addEdge(j + n, t, v[j]), addEdge(t, j + n, 0);\n        //\u4e0e\u7b2c i ~ i + x - 1 \u559c\u6b22\u7684\u725b\u68da\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\n        for (int j = 1; j <= n; ++j)\n            for (int k = i; k <= i + x - 1; ++k)\n                addEdge(j, f[j][k] + n, 1), addEdge(f[j][k] + n, j, 0);\n        if (maxFlow(s, t) == n) return 1;//\u82e5\u6700\u5927\u6d41\u4e3a n\uff0c\u5219\u8be5\u7b54\u6848\u53ef\u884c \n    }\n    return 0;\n}\n\nint main() {\n    read(n), read(b);\n    for (int i = 1; i <= n; ++i)\n        for (int j = 1; j <= b; ++j)\n            read(f[i][j]);//\u7b2c i \u5934\u725b\u7b2c j \u559c\u6b22\u7684\u725b\u68da\u662f f[i][j] \n    for (int i = 1; i <= b; ++i) read(v[i]);\n    for (int mid, l = 1, r = b; l <= r; ) {//\u4e8c\u5206\u7b54\u6848 \n        mid = (l + r) >> 1;\n        if (check(mid)) {\n            r = mid - 1;\n            ans = mid;\n        } else l = mid + 1;\n    }\n    write(ans);\n    putchar('\\n');\n    return 0;\n}\n```\n",
        "postTime": 1559306820,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2857 \u3010[USACO06FEB]\u7a33\u5b9a\u5976\u725b\u5206\u914dSteady Cow Assignment\u3011"
    },
    {
        "content": "# \u58f0\u660e\uff1a\n\n\u672c\u9898\u89e3\u501f\u9274\u4e86@Heartlessly\uff08luogu UID=32139\uff09\u7684\u5185\u5bb9\n\n# \u9898\u76ee\u5927\u610f\uff1a\n\n\u6bcf\u53ea\u725b\u5bf9\u4e8e\u6bcf\u4e2a\u725b\u68da\u6709\u4e00\u4e2a\u5dee\u8bc4\u503c\uff0c\u73b0\u5728\u5206\u914d\u725b\u68da\uff0c\u4f7f\u5f97\u6240\u6709\u725b\u7684\u6700\u5927\u5dee\u8bc4\u503c\u4e0e\u6700\u5c0f\u5dee\u8bc4\u503c\u7684\u5dee\u6700\u5c0f\uff0c\u6c42\u8fd9\u4e2a\u503c\u3002\n\n# \u6b63\u6587\uff1a\n\n\u56e0\u4e3a\u9898\u76ee\u4e2d\u6709\u63d0\u5230\u8fc7\u6bcf\u4e2a\u725b\u68da\u7684\u9650\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u7528\u7f51\u7edc\u7624\u6765\u6c42\u89e3\u3002\n\n\u6837\u4f8b\u56fe\uff1a\n\n![\u6837\u4f8b\u56fe](https://s2.ax1x.com/2019/12/27/lZsxKO.png)\n\n\u725b\u68da\u7f16\u53f7\u8981\u52a0\u4e0a$n$\u56e0\u4e3a\u725b\u90a3\u8fb9\u5df2\u7ecf\u7528\u8fc7\n\n\u63a5\u7740\u600e\u4e48\u529e\uff1f\u6211\u4eec\u8003\u8651\u5230\u4e8c\u5206\u7b54\u6848\u3002\n\n\u90a3\u6211\u4eec\u5148\u60f3\u4e00\u60f3\u6700\u5927\u5dee\u8bc4\u503c\u4e0e\u6700\u5c0f\u5dee\u8bc4\u503c\u7684\u5dee\u6700\u5927\u662f\u591a\u5c11\uff0c\u56e0\u4e3a\u6700\u5927\u5dee\u8bc4\u503c\u6700\u5927$=b$, \u6700\u5c0f\u5dee\u8bc4\u503c\u6700\u5c0f$=1$,\u90a3\u4e48\u6700\u5927\u5dee\u8bc4\u503c\u4e0e\u6700\u5c0f\u5dee\u8bc4\u503c\u7684\u5dee\u6700\u5927\u662f$b-1$\n\n\u6211\u4eec\u53ef\u4ee5\u518d$[1,b]$\u4e2d\u627e\u5230\u6211\u4eec\u7684\u7b54\u6848\u3002\n\n---\n\n\u5047\u8bbe\u6211\u4eec\u4e8c\u5206\u5230$x$\uff08\u6700\u5927\u5dee\u8bc4\u503c\u4e0e\u6700\u5c0f\u5dee\u8bc4\u503c\u7684\u5dee\uff09\uff0c\u6700\u5c0f\u5dee\u8bc4\u503c$=i$\uff0c\u90a3\u4e48\u6700\u5927\u5dee\u8bc4\u503c$=i+x-1$\u3002\u5148\u628a\u4e0a\u56fe\u60c5\u51b5\u5b58\u5165\u90bb\u63a5\u8868\uff0c\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u76f4\u63a5\u628a\u725b\u8fde\u5230\u6240\u6709\u725b\u68da\u53ea\u80fd\u8fde\u90e8\u5206\u7684\u3002\u65e2\u7136\u4e8c\u5206\u5230$x$\u7684\u6700\u5c0f\u5dee\u8bc4\u503c$=i$\uff0c\u6700\u5927\u5dee\u8bc4\u503c$=i+x-1$\uff0c\u90a3\u4e48\u6bcf\u5934\u725b\u5c31\u53ea\u80fd\u8fde\u5b83\u7b2c$i$\u4e2a\u5230\u7b2c$(i+x-1)$\u4e2a\u725b\u68da\u3002\n\n\u505a\u5b8c~~\u8fde\u4e00\u8fde~~\u540e\uff0c\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u6bd5\u7adf\u6211\u4eec\u672c\u8eab\u5c31\u662f$n$\u5934\u725b\uff0c\u5982\u679c\u6700\u5927\u6d41\u4e0d\u662f$n$\u90a3\u4e48\u65b9\u6848\u5c31\u662f\u4e0d\u53ef\u884c\u7684\u3002\n\n# \u4ee3\u7801\uff1a\n\n```cpp\n\n\nbool check(int x)\n{\n\tfor (int i = 1; i + x - 1 <= b; i++)\n\t{\n\t\tmemset(head, 0, sizeof(head));\n\t\ttot = 0;\n\t\ts = n + b + 1, t = n + b + 2;\n\t\tfor (int j = 1; j <= n; j++) Add(s, j, 1);       //\u8fde\u6210\u4e0a\u56fe\n\t\tfor (int j = 1; j <= b; j++) Add(j + n, t, v[j]);\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tfor (int k = i; k <= i + x - 1; k++)\n\t\t\t\tAdd(j, like[j][k] + n, 1);        //\u8fde\u7b2ci\u4e2a\u5230\u7b2c(i+x-1)\u4e2a\u725b\u68da\n\t\tint ans = dinic();\n\t\tif(ans == n) return 1;     // \u7f51\u7edc\u7624\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &b); \n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= b; j++)\n\t\t\tscanf(\"%d\", &like[i][j]);  //like[i][j] \u8868\u793a\u7b2ci\u53ea\u725b\u5dee\u8bc4\u5ea6\u4e3aj\u7684\u725b\u68da\n\tfor (int j = 1; j <= b; j++)\n\t\tscanf(\"%d\", &v[j]);   // v[i] \u8868\u793a\u7b2ci\u4e2a\u725b\u68da\u7684\u9650\u5ea6\n\tint l = 1, r = b, mid, ans = 0;\n\twhile(l <= r)           //\u4e8c\u5206\u5f00\u59cb\n\t{\n\t\tmid = (l + r) >> 1;\n\t\tif(check(mid))\n\t\t{\n\t\t\tans = mid;\n\t\t\tr = mid - 1;\n\t\t} \n\t\telse \n\t\t\tl = mid + 1;\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1577454846,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2857 \u3010[USACO06FEB]\u7a33\u5b9a\u5976\u725b\u5206\u914dSteady Cow Assignment\u3011"
    },
    {
        "content": "## P2857 Steady Cow Assignment G\n\n[My blog](https://www.cnblogs.com/linghuabaobao/p/15733002.html)\n\n### \u9898\u76ee\u63cf\u8ff0\uff1a\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P2857)\n\n\u6709 $N$ \u5934\u725b\uff0c $B$ \u4e2a\u725b\u68da\u3002\u544a\u8bc9\u4f60\u6bcf\u5934\u725b\u5fc3\u91cc\u725b\u68da\u7684\u5ea7\u6b21\uff0c\u5373\u54ea\u4e2a\u725b\u68da\u4ed6\u6700\u559c\u6b22\uff0c\u54ea\u4e2a\u7b2c\u4e8c\u559c\u6b22\uff0c \u54ea\u4e2a\u7b2c\u4e09\u559c\u6b22\uff0c\u7b49\u7b49\u3002\u4f46\u725b\u68da\u5bb9\u91cf\u4e00\u5b9a\uff0c\u6240\u4ee5\u6bcf\u5934\u725b\u5206\u914d\u5230\u7684\u725b\u68da\u5728\u8be5\u725b\u5fc3\u4e2d\u7684\u5ea7\u6b21\u6709\u9ad8\u6709\u4f4e\u3002\u73b0\u5728\u6c42\u4e00\u79cd\u6700\u516c\u5e73\u7684\u65b9\u6cd5\u5206\u914d\u725b\u5230\u725b\u68da\uff0c\u4f7f\u6240\u6709\u725b\u4e2d\uff0c\u6240\u5c45\u725b\u68da\u7684\u5ea7\u6b21\u6700\u9ad8\u4e0e\u6700\u4f4e\u7684\u8de8\u5ea6\u6700\u5c0f\u3002\n\n\u5176\u4e2d $1\\le N \\le 1000 , 1\\le B \\le 20$\u3002\n\n### \u89e3\u6cd5\uff1a\n\n\u76f4\u63a5\u6c42\u597d\u50cf\u662f\u4e0d\u5927\u597d\u505a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u4e8c\u5206\u8fd9\u4e2a\u6700\u5c0f\u7684\u8de8\u5ea6\u662f\u591a\u5c11\u3002\u5982\u679c\u5f53\u524d\u8de8\u5ea6\u4e0d\u884c\uff0c\u5c31\u66f4\u6539\u5de6\u7aef\u70b9\uff0c\u5426\u5219\u5c31\u66f4\u6539\u53f3\u7aef\u70b9\u3002\n\n\u5173\u4e8e\u5224\u65ad\u5f53\u524d\u8fd9\u4e2a\u8de8\u5ea6\u662f\u5426\u53ef\u884c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u679a\u4e3e\u5230\u8fd9\u4e2a\u8de8\u5ea6\u6240\u6709\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\u3002\u6bd4\u5982\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8de8\u5ea6\u662f $d$\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u679a\u4e3e $1\\sim d,2\\sim d+1,3\\sim d+2,\\cdots,B-d+1\\sim B$ \u8fd9\u6240\u6709\u7684\u60c5\u51b5\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u725b\u7684\u559c\u6b22\u5ea6\u5728\u5f53\u524d\u8fd9\u4e2a\u60c5\u51b5\u7684\u533a\u95f4\u7684\u8fde\u8fb9\u3002\n\n\u7136\u540e\u5982\u4f55\u5224\u65ad\u5f53\u524d\u8fd9\u79cd\u8fde\u8fb9\u60c5\u51b5\u662f\u5426\u5408\u6cd5\u5462\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7f51\u7edc\u6d41\u3002\n\n\u628a\u6e90\u70b9\u8fde\u5411\u725b\uff0c\u5bb9\u91cf\u662f\u4e00\uff0c\u56e0\u4e3a\u4e00\u6761\u8fb9\u53ea\u4f1a\u8fde\u4e00\u5934\u725b\u3002\n\n\u628a\u725b\u68da\u8fde\u5411\u6c47\u70b9\uff0c\u5bb9\u91cf\u662f\u725b\u68da\u7684\u5bb9\u91cf\u3002\n\n\u725b\u4e0e\u725b\u68da\u7684\u8fde\u8fb9\u4efb\u610f\uff08\u53ea\u8981\u4e0d\u4e3a\u96f6\u5373\u53ef\uff09\u3002\n\n\u5982\u679c\u8bf4\u5f53\u524d\u8fd9\u79cd\u60c5\u51b5\u7684\u6700\u5927\u6d41\u7b49\u4e8e $N$\uff0c\u90a3\u4e48\u8bf4\u660e\u6240\u6709\u8fde\u5411\u725b\u7684\u8fb9\u90fd\u80fd\u8fde\u5411\u6c47\u70b9\uff0c\u610f\u5473\u7740\u8fd9\u79cd\u60c5\u51b5\u662f\u53ef\u4ee5\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8de8\u5ea6\u5c31\u662f\u53ef\u4ee5\u7684\uff0c\u4e4b\u540e\u7ee7\u7eed\u4e8c\u5206\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n\u6bcf\u6b21\u8dd1\u5b8c\u6700\u5927\u6d41\u7684\u65f6\u5019\u8bb0\u5f97\u6e05\u7a7a\u5f53\u524d\u8fde\u7684\u8fb9\u3002\n\n\u8bb0\u5f97\u4e8c\u5206\u8de8\u5ea6\u7684\u65f6\u5019\u4ece\u96f6\u5f00\u59cb\uff08\u867d\u7136\u597d\u50cf\u6d1b\u8c37\u7684\u6570\u636e\u4ece\u4e00\u5f00\u59cb\u4e5f\u80fd\u8fc7\uff09\u3002\n\n\n\n### Code\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\nusing namespace std ;\n\nint n , m , a[1005][25] , b[25] , dis[1025] ;\n\nstruct Edge\n{\n\tint nxt , to , len ;\n} edge[400005] ;\n\nint cnt = 1 , head[1025] ;\nvoid insert ( int u , int v , int w )\n{\n\tedge [ ++ cnt ] .nxt = head [ u ] ;\n\tedge [ cnt ] .to = v ;\n\tedge [ cnt ] .len = w ;\n\thead [ u ] = cnt ;\n}\n\nqueue < int > q ;\nbool bfs ( )\n{\n\tmemset ( dis , 0 , sizeof ( dis ) ) ;\n\tdis [ 0 ] = 1 ;\n\tq .push ( 0 ) ;\n\twhile ( ! q .empty ( ) )\n\t{\n\t\tint x = q .front ( ) ; q .pop ( ) ;\n\t\tfor ( int i = head [ x ] ; i ; i = edge [ i ] .nxt )\n\t\t{\n\t\t\tint y = edge [ i ] .to ;\n\t\t\tif ( ! edge [ i ] .len || dis [ y ] )\n\t\t\t\tcontinue ;\n\t\t\tdis [ y ] = dis [ x ] + 1 ;\n\t\t\tq .push ( y ) ;\n\t\t}\n\t}\n\treturn dis [ n + m + 1 ] ;\n}\n\nint dfs ( int x , int now )\n{\n\tif ( x == n + m + 1 )\n\t\treturn now ;\n\tint res = now ;\n\tfor ( int i = head [ x ] ; i && res ; i = edge [ i ] .nxt )\n\t{\n\t\tint y = edge [ i ] .to ;\n\t\tif ( ! edge [ i ] .len || dis [ y ] != dis [ x ] + 1 )\n\t\t\tcontinue ;\n\t\tint w = dfs ( y , min ( res , edge [ i ] .len ) ) ;\n\t\tif ( ! w ) dis [ y ] = 0 ;\n\t\tedge [ i ] .len -= w ;\n\t\tedge [ i ^ 1 ] .len += w ;\n\t\tres -= w ;\n\t}\n\treturn now - res ;\n}\n\nint main ( )\n{\n\tcin >> n >> m ;\n\tfor ( int i = 1 ; i <= n ; ++ i )\n\t\tfor ( int j = 1 ; j <= m ; ++ j )\n\t\t{\n\t\t\tcin >> a [ i ] [ j ] ;\n\t\t\ta [ i ] [ j ] += n ;\n\t\t}\n\tfor ( int i = 1 ; i <= m ; ++ i )\n\t\tcin >> b [ i ] ;\n\tint l = 0 , r = m , mid ;\n\twhile ( l < r )\n\t{\n\t\tmid = ( l + r ) >> 1 ;\n\t\tfor ( int i = 0 ; i <= m - mid ; ++ i )\n\t\t{\n\t\t\tmemset ( head , 0 , sizeof ( head ) ) ;\n\t\t\tcnt = 1 ;\n\t\t\tfor ( int u = 1 ; u <= n ; ++ u )\n\t\t\t\tfor ( int j = 1 ; j <= mid ; ++ j )\n\t\t\t\t\tinsert ( u , a [ u ] [ i + j ] , 1000 ) , insert ( a [ u ] [ i + j ] , u , 0 ) ;\n\t\t\tfor ( int u = 1 ; u <= n ; ++ u )\n\t\t\t\tinsert ( 0 , u , 1 ) , insert ( u , 0 , 0 ) ;\n\t\t\tfor ( int u = n + 1 ; u <= n + m ; ++ u )\n\t\t\t\tinsert ( u , n + m + 1 , b [ u - n ] ) , insert ( n + m + 1 , u , 0 ) ;\n\t\t\tint tmp = 0 , ans = 0 ;\n\t\t\twhile ( bfs ( ) )\n\t\t\t\tans += dfs ( 0 , 2000 ) ;\n\t\t\tif ( ans == n )\n\t\t\t{\n\t\t\t\tr = mid ;\n\t\t\t\tbreak ;\n\t\t\t}\n\t\t}\n\t\tif ( r != mid )\n\t\t\tl = mid + 1 ;\n\t}\n\tcout << r << '\\n' ;\n\treturn 0 ;\n}\n```\n",
        "postTime": 1640502075,
        "uid": 68882,
        "name": "\u7075\u534e",
        "ccfLevel": 6,
        "title": "P2857 Steady Cow Assignment G"
    },
    {
        "content": "## \u3010\u9898\u76ee\u5927\u610f\u3011\n\u6709n\u5934\u725b\u548cb\u4e2a\u68da\n\n\u6bcf\u5934\u725b\u5fc3\u76ee\u4e2d\u90fd\u6709\u5bf9\u68da\u7684\u6392\u540d\n\n\u6bcf\u5934\u725b\u53ea\u80fd\u9009\u4e00\u4e2a\u68da\uff0c\u6bcf\u4e2a\u68da\u6709\u4e00\u5b9a\u7684\u5bb9\u91cf\n\n\u5b89\u6392\u4e00\u4e2a\u65b9\u6848\uff0c\u4f7f\u725b\u53bb\u7684\u68da\u7684\u6700\u5927\u6392\u540d\u4e0e\u6700\u5c0f\u6392\u540d\u7684\u5dee\u6700\u5c0f\uff0c\u8f93\u51fa\u6700\u5c0f\u7684\u5dee\n\n## \u3010\u5206\u6790\u3011\n\u725b\u68da\u5ea7\u6b21\u7684\u8de8\u5ea6\u8d8a\u5927\uff0c\u5c31\u8d8a\u5bb9\u6613\u6ee1\u8db3\u725b\u7684\u9700\u6c42\n\n\u4e24\u8005\u4e4b\u95f4\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u90a3\u9898\u76ee\u5c31\u662f\u6c42\u8de8\u5ea6\u6700\u5c0f\u7684\u80fd\u6ee1\u8db3\u725b\u9700\u6c42\u7684\u65b9\u6848\n\n\u6240\u4ee5\u53ef\u4ee5**\u4e8c\u5206**\u7b54\u6848\n\n\u4e8c\u5206\u679a\u4e3e\u4e00\u4e2a\u5dee\u503c\uff0c\u518d\u679a\u4e3e\u6700\u5c0f\u6392\u540d\u4e0e\u6700\u5927\u6392\u540d\n\n\u68c0\u9a8c\u662f\u5426\u53ef\u4ee5\u6ee1\u8db3\u725b\u7684\u8981\u6c42\uff0c\u53ef\u4ee5\u7528**\u7f51\u7edc\u6d41**\n\n* S\u5411\u5976\u725b\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a1\n\n* \u5976\u725b\u5411\u53ef\u4ee5\u9009\u62e9\u7684\u725b\u68da\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a1\n\n* \u725b\u68da\u5411T\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a\u68da\u7684\u5bb9\u91cf\n\n\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u6bcf\u5934\u725b\u53ea\u80fd\u9009\u4e00\u4e2a\u68da\uff0c\u6bcf\u4e2a\u68da\u6709\u4e00\u5b9a\u7684\u5bb9\u91cf\n\n\u6700\u5927\u6d41\u5c31\u662f\u53ef\u4ee5\u6ee1\u8db3\u9700\u6c42\u7684\u725b\u6570\u7684\u6700\u5927\u503c\n\n\u8fd9\u4e2a\u7ed3\u679c\u5982\u679c\u7b49\u4e8e\u725b\u6570\uff0c\u8868\u793a\u53ef\u884c\n\n## \u3010\u7b97\u6cd5\u3011\n\u4e8c\u5206+\u7f51\u7edc\u6d41\n## \u3010\u4ee3\u7801\u3011\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1005,maxb=25,maxt=maxn+maxb,maxe=maxn*maxb*2,INF=1<<30;\nint n,m,S,T;\nint tot,lnk[maxt];\nint cur[maxt],dep[maxt],que[maxt];\nint a[maxn][maxb],b[maxb];\nint read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nint ans;\nstruct edge{\n\tint to,nxt,f;\n}e[maxe];\nvoid add_e(int x,int y,int f){\n\te[++tot]=(edge){y,lnk[x],f};\n\tlnk[x]=tot;\n}\nvoid ADD(int x,int y,int f){\n\tadd_e(x,y,f),add_e(y,x,0);\n}\nvoid make_e(int l,int r){\n\ttot=1;\n\tmemset(lnk,0,sizeof lnk);//\u91cd\u65b0\u5efa\u8fb9\u9700\u6e05\u7a7a\n\tfor(int i=1;i<=n;i++) ADD(S,i,1);\n\tfor(int j=1;j<=m;j++) ADD(j+n,T,b[j]);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=l;j<=r;j++) ADD(i,a[i][j]+n,1);\n}\nbool BFS(){\n\tfor(int i=1;i<=T;i++) cur[i]=lnk[i],dep[i]=INF;\n\tint hed=0,til=1;\n\tque[1]=S,dep[S]=0;\n\twhile(hed!=til){\n\t\tint x=que[++hed];\n\t\tfor(int j=lnk[x];j;j=e[j].nxt){\n\t\t\tint y=e[j].to;\n\t\t\tif(dep[y]==INF&&e[j].f){\n\t\t\t\tdep[y]=dep[x]+1;\n\t\t\t\tque[++til]=y;\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[T]!=INF;\n}\nint DFS(int x,int limit){\n\tif(x==T||!limit) return limit;\n\tint flow=0,f;\n\tfor(int j=cur[x];j;j=e[j].nxt){\n\t\tcur[x]=j;\n\t\tint y=e[j].to;\n\t\tif(dep[y]==dep[x]+1&&(f=DFS(y,min(limit,e[j].f)))){\n\t\t\tflow+=f;\n\t\t\tlimit-=f;\n\t\t\te[j].f-=f;\n\t\t\te[j^1].f+=f;\n\t\t\tif(!limit) return flow;\n\t\t}\n\t}\n\treturn flow;\n}\nint Dinic(){\n\tint ret=0;\n\twhile(BFS()) ret+=DFS(S,INF);\n\treturn ret;\n}\nbool check(int x){\n\tfor(int i=1;i+x-1<=m;i++){\n\t\tmake_e(i,i+x-1);\n\t\tif(Dinic()==n) return 1;\n\t}\n\treturn 0;\n}\nint main(){\n\tfreopen(\"P2857.in\",\"r\",stdin);\n\tfreopen(\"P2857.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tS=n+m+1,T=S+1;\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++) a[i][j]=read();\n\tfor(int i=1;i<=m;i++) b[i]=read();\n\tint L=0,R=m,mid;\n\twhile(L<=R){\n\t\tmid=L+R>>1;\n\t\tif(check(mid)) ans=mid,R=mid-1;\n\t\telse L=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1596176992,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2857 \u3010[USACO06FEB]Steady Cow Assignment G\u3011"
    },
    {
        "content": "\u4e00\u9053\u679a\u4e3e+\u6700\u5927\u6d41\n\n\u6b63\u597d\u5f88\u4e45\u6ca1\u5199\u7f51\u7edc\u6d41\u4e86\uff0c\u5bf9\u7740\u7248\u6284\u4e86\u4e00\u904dDinic(\u96fe\n\n\u76ee\u6d4b\u8fc7\u53bb\u5c06\u679a\u4e3e\u66ff\u6362\u4e3a\u4e8c\u5206\u4e5f\u80fd\u5199\u8fc7(\u5e76\u4e14\u5feb)\uff0c\u4f46\u662f\u7531\u4e8e\u672c\u4eba\u592a\u5f31\u4e00\u76f4\u8c03\u4e0d\u8fc7\uff0c\u6ce8\u91ca\u6389\u7684\u90e8\u5206\u4ec5\u4f9b\u53c2\u8003\n\n\u8fde\u8fb9\uff1a\n\n1.\u5c06\u732a\u5708\u548c\u6e90\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u732a\u5708\u5bb9\u91cf\n\n2.\u732a\u4e0e\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf1;\n\n\u5177\u4f53\u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 200001;\nconst int MAXX = 2001;\nint n, b, map[MAXX][MAXX], c[MAXN], m;\nint flag[MAXN], E[MAXN];\nint head[MAXN], next[MAXN], to[MAXN], dis[MAXN], tot = 0;\n\ninline int get()\n{\n    char c;bool f = 0; int res = 0;\n    while (( (c=getchar())<48||c>57) && c!= '-');\n     if (c=='-') f = 1;\n      else res = c- '0';\n    while ( (c = getchar()) >= 48 && c <= 57)\n     res = res * 10 + c -'0';\n    return f ? -res:res;\n}\ninline void put(int x)\n{\n    if (x<0)\n    { \n        x = ~x + 1;\n        putchar('-');\n    }\n    if (x>9) \n    put(x / 10);\n    putchar(x % 10 + 48);\n}\nvoid add(int x, int y, int z)\n{\n    tot++;\n    next[tot] = head[x];\n    head[x] = tot;\n    to[tot] = y;\n    dis[tot] = z;\n    next[++tot] = head[y];\n    head[y] = tot;\n    to[tot] = x;\n    dis[tot] = 0;\n}\nint bfs()\n{\n    static int que[MAXN], q;\n    for (int i = 0; i <= 100001; i++)\n    {\n        flag[i] = -1;\n        E[i] = head[i];\n    }\n    int u, v, e;\n    que[q = 1] = 0;\n    flag[0] = 0;\n    for (int i = 1; i <= q; i++)\n    {\n        u = que[i];\n        for (e = head[u]; e; e = next[e])\n        {\n            if (dis[e] > 0 && flag[v = to[e]] == -1)\n            {\n                flag[v] = flag[u] + 1;\n                que[++q] = v;\n                if (v == m) return true;\n            }\n        }\n    }\n    return false;\n}\nint dfs(const int &u, const int &l)\n{\n    if (u == m) return l;\n    int cnt = 0, v, d;\n    for (int &e = E[u]; e; e = next[e])\n    {\n        if (dis[e] > 0 && flag[u] < flag[v = to[e]])\n        {\n            d = dfs(v, min(dis[e], l - cnt));\n            if (d)\n            {\n                dis[e] -= d;\n                dis[e ^ 1] += d;\n                cnt += d;\n                if (cnt == l) break;\n            }\n        }\n    }\n    if (cnt != l) flag[u] = -1;\n    return cnt;\n}\nint Dinic()  \n{  \n    int ans = 0, a;  \n    while (bfs())  \n    {\n        ans += dfs(0, INF);\n    }\n    return ans;  \n}  \nint Work(int k,int p)\n{\n/*    for(int i = 1; i <= b - mid + 1; i++)\n    {\n        memset(head, 0, sizeof(head));\n        for(int j = 1; j <= b; j++)\n        add(0, j, c[j]);\n        for(int j = 1; j <= n; j++)\n        {\n            for(int k = 1; k <= i + mid - 1; k++)\n            add(map[j][k], j + b, 1);\n            add(j + b, m, 1);\n        }\n        if(Dinic() == n) return true;\n    }\n    return false;*/\n    for(int i = 1; i <= n; i++)\n    { \n        for(int j = k; j <= p; j++)\n        add(map[i][j], i + b, 1); \n        add(i + b, m, 1); \n    } \n    for(int i = 1; i <= b; i++)\n    add(0, i, c[i]) ; \n}\nint Solve()\n{\n    int ans = INF;\n    for(int i = 1; i <= b; i++)\n    {\n        for(int j = 1; j <= b; j++)\n        {\n            memset(head, 0, sizeof(head));\n            tot = 0;\n            Work(i, j);\n            int t = Dinic();\n            if(t == n)\n            {\n                ans = min(ans, j - i + 1);\n                if(ans == 1) return ans;\n            }\n        }\n    }\n    return ans;\n}\nint main()\n{\n    n = get(); b = get();\n    for(int i = 1; i <= n; i++)\n    for(int j = 1; j <= b; j++)\n    map[i][j] = get();\n    for(int i = 1; i <= b; i++)\n    c[i] = get();\n    m = n + b + 1; \n    /*int l = 1, r = b, s = -1;\n    while(l <= r)\n    {\n        int mid = (l + r) / 2;\n        if(Work(mid))\n        {\n            s = mid;\n            r = mid - 1;\n        }\n        else\n        l = mid + 1;\n    }\n    put(s);*/\n    put(Solve());\n}\n```",
        "postTime": 1495367393,
        "uid": 7448,
        "name": "xsxshxs",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2857 \u3010[USACO06FEB]\u7a33\u5b9a\u5976\u725b\u5206\u914dSteady Cow Assignment\u3011"
    },
    {
        "content": "### 1 \u601d\u8def\n\n\u56e0\u4e3a\u6570\u636e\u975e\u5e38\u5c0f\uff0c\u6240\u4ee5\u679a\u4e3e\u7b54\u6848\u3002\n\n\u8bbe\u7b54\u6848\u4e3a $ans$\uff0c\u90a3\u4e48\uff0c\u8981\u6c42\u6bcf\u5934\u725b\u53ea\u80fd\u4f4f\u5b83\u7b2c $l$ \u559c\u6b22\u5230\u7b2c $l+ans-1$ \u559c\u6b22\u7684\u725b\u68da\u3002\n\n\u6bcf\u6b21\u679a\u4e3e\u7684\u65f6\u5019\u6ce8\u610f\u8fde\u8fb9\uff1a\n\n+ \u8fde\u6e90\u70b9\u5230\u6240\u6709\u725b\u7684\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff1b\n\n+ \u8fde\u6240\u6709\u725b\u5230\u6240\u6709\u5b83\u80fd\u4f4f\u7684\u725b\u68da\u7684\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff1b\n\n+ \u8fde\u6240\u6709\u725b\u68da\u5230\u6c47\u70b9\u7684\u5bb9\u91cf\u4e3a\u725b\u68da\u5bb9\u91cf\u7684\u8fb9\u3002\n\n\u5982\u679c\u6700\u5927\u6d41\u7b49\u4e8e $n$\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u65b9\u6848\u53ef\u884c\u3002\n\n\u8f93\u51fa $ans$ \u5373\u53ef\u3002\n\n### 2 \u4ee3\u7801\u4e0e\u8bb0\u5f55\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#define max_n 1000//\u6700\u5927\u725b\u6570\n#define max_b 200//\u6700\u5927\u725b\u68da\u6570\n#define inf 0x3f3f3f3f//\u5f88\u5927\u7684\u6570\nint n;//\u725b\u6570\nint b;//\u725b\u68da\u6570\n#define s 0//\u6e90\u70b9\n#define t 1210//\u6c47\u70b9\nint a[max_n+2][max_b+2];//\u559c\u597d\u6392\u540d\nint v[max_b+2];//\u725b\u68da\u5bb9\u91cf\nstruct E{\n\tint u,v,w,a,nx;\n}e[220000];//\u8fb9\nint ei;//\u4e0b\u6807\nint fir[1220];//\u5f00\u59cb\u8def\u5f84\nint de[1220];//\u6df1\u5ea6\nint ans;//\u7b54\u6848\ninline void addedge(int u,int v,int w){\n\t++ei; e[ei].u=u; e[ei].v=v; e[ei].w=w; e[ei].a=ei+1; e[ei].nx=fir[u]; fir[u]=ei;\n\t++ei; e[ei].u=v; e[ei].v=u; e[ei].w=0; e[ei].a=ei-1; e[ei].nx=fir[v]; fir[v]=ei;\n}\ninline int mi(int a,int b){\n\treturn a<b?a:b;\n}\nbool bfs(){\n\tmemset(de,0,sizeof(de));\n\tqueue<int>q;\n\tint u;\n\tde[s]=1;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tu=q.front();\n\t\tq.pop();\n\t\tfor(int i=fir[u],v,x,y;i;i=e[i].nx){\n\t\t\tv=e[i].v;\n\t\t\tif(e[i].w&&!de[v]){\n\t\t\t\tde[v]=de[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn de[t];\n}\nint dfs(int u,int f){\n\tif(u==t||!f)return f;\n\tint res=0;\n\tfor(int i=fir[u],v,w;i;i=e[i].nx){\n\t\tv=e[i].v;\n\t\tif(e[i].w&&de[u]+1==de[v]){\n\t\t\tw=dfs(v,mi(f,e[i].w));\n\t\t\tif(w){\n\t\t\t\te[i].w-=w;\n\t\t\t\te[e[i].a].w+=w;\n\t\t\t\tf-=w;\n\t\t\t\tres+=w;\n\t\t\t\tif(!f)break;\n\t\t\t}else de[v]=0;//\u52a0\u4e2a\u4f18\u5316\n\t\t}\n\t}\n\treturn res;\n}\nint dinic(){\n\tint res=0;\n\twhile(bfs())res+=dfs(s,inf);\n\treturn res;\n}\nbool check(int x){\n\tfor(int l=1,r;l+x-1<=b;++l){\n\t\tr=l+x-1;\n\t\tei=0;\n\t\tmemset(fir,0,sizeof(fir));\n\t\tfor(int i=1;i<=n;++i)addedge(s,i,1);\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tfor(int j=l;j<=r;++j)addedge(i,a[i][j]+n,v[a[i][j]]);\n\t\t}\n\t\tfor(int i=1;i<=b;++i)addedge(i+n,t,v[i]);\n\t\tif(dinic()>=n)return true;\n\t}\n\treturn false;\n}\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"P2857_1.in\",\"r\",stdin);\n\tfreopen(\"P2857_1.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d%d\",&n,&b);\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=1;j<=b;++j){\n\t\t\tscanf(\"%d\",a[i]+j);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",v+i);\n\t}\n\tfor(ans=1;!check(ans);++ans);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n[\u8bb0\u5f55\u4f20\u9001\u95e8](https://www.luogu.com.cn/record/58023659)\n\nBy **dengziyue**",
        "postTime": 1631625556,
        "uid": 387840,
        "name": "happy_dengziyue",
        "ccfLevel": 6,
        "title": "P2857\u9898\u89e3"
    },
    {
        "content": "\u8003\u8651$B$\u7684\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u90a3\u5c31$B^2$\u66b4\u529b\u679a\u4e3e\u6240\u6709\u7684\u5ea7\u6b21\u533a\u95f4\u3002\u679a\u4e3e\u5230\u4e00\u4e2a\u5ea7\u6b21\u4ece$l$\u5230$r$\u7684\u533a\u95f4\uff0c\u610f\u4e49\u662f\u5976\u725b\u53ea\u80fd\u9009\u5b83\u5fc3\u76ee\u4e2d\u5ea7\u6b21\u4ece$l$\u5230$r$\u533a\u95f4\u7684\u725b\u68da\u3002\n\n\u7136\u540e\u5c31\u662f\u5224\u65ad\u533a\u95f4\u662f\u5426\u53ef\u884c\uff0c\u8003\u8651\u7f51\u7edc\u6d41\uff0c\u6e90\u70b9\u5411\u5976\u725b\u8fde\u8fb9\uff0c\u5976\u725b\u5411\u53ef\u9009\u725b\u68da\u8fde\u8fb9\uff0c\u725b\u68da\u5411\u6c47\u70b9\u8fde\u5b83\u5bb9\u91cf\u7684\u8fb9\u3002$Dinic$\u5224\u65ad\u6700\u5927\u6d41\u662f\u5426\u662f$n$\u3002\n\n\u4e0d\u7528\u5f53\u524d\u5f27\u4f18\u5316\u597d\u50cf\u4f1a$T$\uff1f\n\n$Code\\ Below:$\n```cpp\n#include<bits/stdc++.h>\n#define ts cout<<\"ok\"<<endl\n#define ll long long\n#define hh puts(\"\")\nusing namespace std;\nint n,b,g[1005][25],ans=1e9,st,ed,tot,can[25],head[1025],cnt,d[1025],cur[1025];\nstruct Edge{\n    int v,nx,s;\n}e[100005];\ninline int read(){\n    int ret=0,ff=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') ff=-ff;ch=getchar();}\n    while(isdigit(ch)){ret=(ret<<3)+(ret<<1)+ch-'0';ch=getchar();}\n    return ret*ff;\n}\nvoid write(int x){\n    if(x>9) write(x/10);\n    putchar(x%10+48);\n}\ninline void add(int x,int y,int s){\n    e[++cnt].v=y;\n    e[cnt].s=s;\n    e[cnt].nx=head[x];\n    head[x]=cnt;\n}\ninline bool bfs(){\n    for(int i=st;i<=ed;i++) cur[i]=head[i],d[i]=0;\n    d[st]=1;\n    queue<int> q;\n    q.push(st);\n    while(!q.empty()){\n        int now=q.front();\n        q.pop();\n        for(int i=head[now];i;i=e[i].nx){\n            int v=e[i].v;\n            if(!d[v]&&e[i].s){\n                d[v]=d[now]+1;\n                q.push(v);\n            }\n        }\n    }\n    return d[ed];\n}\nint dfs(int now,int ma){\n    if(now==ed){\n        tot+=ma;\n        return ma;\n    }\n    int used=0,t;\n    for(int i=cur[now];i;i=e[i].nx){\n        cur[now]=i;\n        int v=e[i].v;\n        if(d[v]==d[now]+1&&e[i].s){\n            if(t=dfs(v,min(e[i].s,ma-used))){\n                e[i].s-=t;\n                e[i^1].s+=t;\n                used+=t;\n                if(used==ma) break;\n            }\n        }\n    }\n    return used;\n}\nvoid build(int l,int r){\n    cnt=1;\n    memset(head,0,sizeof(head));\n    for(int i=1;i<=n;i++) add(st,i,1),add(i,st,0);\n    for(int i=1;i<=n;i++)\n        for(int j=l;j<=r;j++)\n            add(i,n+g[i][j],1),add(n+g[i][j],i,0);\n    for(int i=1;i<=b;i++) add(n+i,ed,can[i]),add(ed,n+i,0);\n}\nsigned main(){\n    n=read(),b=read();\n    st=0,ed=n+b+1;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=b;j++)\n            g[i][j]=read();\n    for(int i=1;i<=b;i++) can[i]=read();\n    for(int i=1;i<=b;i++)\n        for(int j=i;j<=b;j++){\n            if(j-i+1>=ans) continue;\n            build(i,j);\n            tot=0;\n            while(bfs()) dfs(st,1e9);\n            if(tot==n) ans=j-i+1;\n        }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1563343576,
        "uid": 27858,
        "name": "ycyaw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2857 \u3010[USACO06FEB]\u7a33\u5b9a\u5976\u725b\u5206\u914dSteady Cow Assignment\u3011"
    },
    {
        "content": "\u5728\u4e00\u79cd\u65b9\u6848\u4e2d\uff0c\u6211\u4eec\u8bbe\u6240\u6709\u725b\u4e2d\uff0c\u5206\u5230\u6700\u9ad8\u4f4d\u6b21\u725b\u68da\u7684\u4f4d\u6b21\u4e3a$mina$\uff0c\u5206\u5230\u6700\u4f4e\u4f4d\u725b\u68da\u7684\u4f4d\u6b21\u4e3a$maxa$\u3002\u4e8e\u662f\u9898\u610f\u4e3a\u5bfb\u627e\u4e00\u79cd\u65b9\u6848\u4f7f$maxa-mina$\u6700\u5c0f\u3002\n\n\u7531\u4e8e$b$\u6700\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e$maxa$\u4e0e$mina$\u3002\u5f53\u7ed9\u5b9a$mina$\u4e0e$maxa$\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a\u6bcf\u5934\u725b\u53ef\u4ee5\u9009\u62e9\u7684\u725b\u68da\u3002\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u725b\u68da\u7684\u5bb9\u91cf\u3002\u6b64\u65f6\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u6bcf\u5934\u725b\u53ef\u9009\u62e9\u7684\u725b\u68da\u548c\u6bcf\u4e2a\u725b\u68da\u7684\u5bb9\u91cf\uff0c\u6c42\u51fa\u662f\u5426\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u6848\u3002\u6211\u4eec\u53ea\u8981\u5728\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u6848\u4e2d\u5bfb\u627e\u6700\u5c0f\u7684$maxa-mina$\u5373\u53ef\u3002\n\n\u8003\u8651\u6700\u5927\u6d41\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u5c06\u6e90\u70b9$\uff08src\uff09$\u4e0e\u6bcf\u4e2a\u725b\u68da\u76f8\u8fde\uff0c\u5bb9\u91cf\u4e3a\u725b\u68da\u6700\u5927\u5bb9\u91cf\u3002\n\n\u5982\u679c\u5b58\u5728\u4e00\u7ec4$(i,j)$\u4f7f\u5f97\u7b2c$i$\u5934\u725b\u53ef\u4ee5\u9009\u62e9\u7b2c$j$\u4e2a\u725b\u68da\uff0c\u90a3\u4e48\u5c06\u7b2c$j$\u4e2a\u725b\u68da\u8fde\u5230\u7b2c$i$\u5934\u725b\uff0c\u5bb9\u91cf\u4e3a$1$\u3002\n\n\u6700\u540e\uff0c\u5c06\u6bcf\u5934\u725b\u8fde\u5230\u6c47\u70b9$sink$\uff0c\u5bb9\u91cf\u4e3a$1$\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u6700\u5927\u6d41\u8dd1\u51fa\u7684\u7ed3\u679c\u4e0e\u725b\u7684\u6570\u91cf\u76f8\u7b49\uff0c\u90a3\u4e48\u5c31\u5b58\u5728\u4e00\u79cd\u5408\u7b26\u6761\u4ef6\u7684\u65b9\u6848\u3002\n\n\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nconst int maxn=10005, maxm=1000005, maxb=105;\n\n/*******\u4ee5\u4e0b\u4e3adinic\u6a21\u677f********/\n\nstruct Node\n{\n\tint v,c;\n\tNode *next,*rev;\n}*h[maxn],pool[maxm];\nint tot;\n\nint a[maxn][maxb];\n\nvoid addEdge(int u, int v, int c)\n{\n\tNode *p=&pool[++tot], *q=&pool[++tot];\n\tp->v=v; p->next=h[u]; h[u]=p; p->rev=q; p->c=c;\n\tq->v=u; q->next=h[v]; h[v]=q; q->rev=p; q->c=0;\n}\n\nint level[maxn];\nint q[maxn],head,tail;\nint m,src,sink;\n\nbool bfs()\n{\n\t//cout<<\"here\"<<endl;\n\thead = tail = 0;\n\tmemset(level,-1,sizeof(level));\n\tlevel[src]=0; q[tail++]=src;\n\twhile(head<tail)\n\t{\n\t\tint u=q[head++];\n\t\tfor(Node *p=h[u];p;p=p->next)\n\t\t{\n\t\t\tif(level[p->v]==-1 && p->c>0)\n\t\t\t{\n\t\t\t\tlevel[p->v]=level[u]+1;\n\t\t\t\tq[tail++]=p->v;\n\t\t\t}\n\t\t}\n\t\tif(level[sink]>0) return true;\n\t}\n\treturn false;\n}\n\nint dfs(int u, int key)\n{\n\t//cout<<u<<' '<<key<<endl;\n\tif(u==sink) return key;\n\tint res=0;\n\tfor(Node *p=h[u];p;p=p->next)\n\t{\n\t\tif(level[p->v]==level[u]+1 && p->c>0)\n\t\t{\n\t\t\t//cout<<\"here1\"<<endl;\n\t\t\tint t=dfs(p->v,min(p->c,key));\n\t\t\t//cout<<\"here2\"<<endl;\n\t\t\tif(t)\n\t\t\t{\n\t\t\t\tp->c-=t;\n\t\t\t\tp->rev->c+=t;\n\t\t\t\tres+=t;\n\t\t\t\tkey-=t;\n\t\t\t}\n\t\t}\n\t\tif(key<=0) break;\n\t}\n\tif(res==0) level[u]=-1;\n\treturn res;\n}\n\nint dinic()\n{\n\tint totflow=0;\n\twhile(bfs()) totflow+=dfs(src,1<<30);\n\treturn totflow;\n}\n\n/*******\u4ee5\u4e0a\u4e3adinic\u6a21\u677f********/\n\nvoid reset() //\u6bcf\u6b21\u9700\u8981\u91cd\u65b0\u8dd1\u6700\u5927\u6d41\uff0c\u6240\u4ee5\u5199\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\n{\n\ttot=0;\n\tmemset(h,NULL,sizeof(h));\n}\n\nint n,b;\nint num[maxn]; //num\u4ee3\u8868\u725b\u68da\u6700\u5927\u5bb9\u91cf\n\nvoid build(int left, int right) //\u4ee3\u8868mina\u4e3aleft\uff0cmaxa\u4e3aright\u65f6\u7684\u5efa\u56fe\n{\n\tsrc=n+b+1; sink=src+1;\n\tfor(int i=1;i<=b;i++)\n\t\taddEdge(src,i,num[i]);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=left;j<=right;j++)\n\t\t{\n\t\t\taddEdge(a[i][j],i+b,1);\n\t\t}\n\t\taddEdge(i+b,sink,1);\n\t}\n}\n\nint main()\n{\n\tfreopen(\"1.in\",\"r\",stdin);\n\tint ans=1<<30;\n\tcin>>n>>b;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=b;j++)\n\t\t\tcin>>a[i][j];\n\t}\n\tfor(int i=1;i<=b;i++)\n\t\tcin>>num[i];\n\tfor(int left=1;left<=b;left++)\n\t{\n\t\tfor(int right=left;right<=b;right++)\n\t\t{\n\t\t\treset();\n\t\t\t//cout<<\"here \"<<left<<' '<<right<<endl;\n\t\t\tbuild(left,right);\n\t\t\t//cout<<\"graph \"<<left<<' '<<right<<endl;\n\t\t\tif(dinic()==n)\n\t\t\t{\n\t\t\t\tans=min(ans,right-left+1);\n\t\t\t\tif(ans==1) break;\n\t\t\t}\n\t\t\t//cout<<\"finish \"<<left<<' '<<right<<endl;\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1548065920,
        "uid": 38212,
        "name": "mydiplomacy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2857 \u3010[USACO06FEB]\u7a33\u5b9a\u5976\u725b\u5206\u914dSteady Cow Assignment\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u7684\u540c\u6b65\u535a\u5ba2\uff0c[Newuser\u5c0f\u7ad9\uff01](http://www.newuser.top/2018/04/13/%e3%80%90usaco06feb%e7%a8%b3%e5%ae%9a%e5%a5%b6%e7%89%9b%e5%88%86%e9%85%8dsteady-cow-assignment%e3%80%91/)\n\n\u4e3a\u4ec0\u4e48luogu\u6807\u7b7e\u662f\u524d\u7f00\u548c\u8d2a\u5fc3\u548c\u7ebf\u6bb5\u6811\uff0c\uff0c\uff0c\u4e3a\u4ec0\u4e48\uff0c\uff0c\uff0c\u8fd9\u91cc\u662fSAP\u6700\u5927\u6d41\u505a\u6cd5\n\n\u521a\u5b66SAP\uff0c\u849f\u84bb\u9ed8\u9ed8%%%dalao\u4eec\u3002\n\n\u4e24\u5c42\u7684\u679a\u4e3e\uff1a\n\u7b2c\u4e00\u5c42\uff1a\u9996\u5148\u4e8c\u5206\u672c\u9898\u7b54\u6848\uff08\u5f88\u5c0f\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\uff09\n\n\u7b2c\u4e8c\u5c42\uff1a\u7136\u540e\u518d\u5957\u4e00\u4e2a\u679a\u4e3e\uff0c\u679a\u4e3e\u9009\u62e9\u54ea\u51e0\u4e2a\u7b49\u7ea7\u3002\n\n\u5efa\u56fe\uff1a\u8003\u8651\u5c06\u6240\u6709\u7684\u725b\u68da\u4e0e\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u725b\u68da\u5bb9\u91cf\u3002\u518d\u5c06\u6bcf\u4e00\u53ea\u725b\u4e0e\u725b\u68da\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1\uff0c\u518d\u5c06\u6e90\u70b9\u4e0e\u6bcf\u4e00\u53ea\u725b\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1\uff0c\u8fd9\u6837\u5c31\u628a\u4e00\u9053\u9898\u8f6c\u5316\u4e3a\u4e86\u6700\u5927\u6d41\u95ee\u9898\u4e86\u3002\u6700\u540e\u53ea\u8981\u6c47\u70b9\u722c\u51fa\u6700\u5927\u6d41\u4e3a\u725b\u7684\u603b\u6570\u5c31\u641e\u5b9a\u3002\n\n\u4e8e\u662f \u5c31\u8fd9\u6837\u4e00\u9053\u9898 \u641e\u5b9a\u4e86\uff01\n\n```cpp\n#include<stdio.h>\n#include<bits/stdc++.h>\nconst int inf = 0x3f3f3f3f;\nusing namespace std;\nint n,m;\nint dis[205],cnt[10005],v[205][205];\nqueue<int>q; bool rd[205];\nvoid spfa(int x)\n{\nfor(int i=1;i<=m;i++) dis[i]=inf;\ndis[x]=0; q.push(x);\nwhile(q.size())\n{\nx=q.front(); q.pop(); rd[x]=0;\nfor(int i=1;i<=m;i++)\n{\nif(i==x) continue;\nif(v[i][x]&&dis[i]>dis[x]+1)\n{\ndis[i]=dis[x]+1;\nif(!rd[i])\n{\nrd[i]=1;\nq.push(i);\n}\n}\n}\n}\n}\nint dfs(int x,int flow)\n{\nint y,tmp,delta;\nif(x==m) return flow;\ndelta=0;\nfor(y=1;y<=m;y++)\nif(v[x][y]>0&&dis[x]==dis[y]+1)\n{\ntmp=dfs(y,min(flow-delta,v[x][y]));\ndelta+=tmp;\nv[x][y]-=tmp;\nv[y][x]+=tmp;\nif(delta==flow||dis[1]>=m) return delta;\n}\nif(dis[1]>=m) return delta;\ncnt[dis[x]]--;\nif(!cnt[dis[x]]) dis[1]=m;\ndis[x]++;\ncnt[dis[x]]++;\nreturn delta;\n}\nint main()\n{\nscanf(\"%d%d\",&n,&m);\nint x,y,z;\nfor(int i=1;i<=n;i++)\n{\nscanf(\"%d%d%d\",&x,&y,&z);\nv[x][y]+=z;\n}\n// spfa(m);\nint ans=0;\nwhile(dis[1]<m)\n{\nint flow=dfs(1,inf);\nans+=flow;\n}\nprintf(\"%d\",ans);\n}\n\n```\n\n\n",
        "postTime": 1523572494,
        "uid": 55343,
        "name": "Newuser",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2857 \u3010[USACO06FEB]\u7a33\u5b9a\u5976\u725b\u5206\u914dSteady Cow Assignment\u3011"
    }
]