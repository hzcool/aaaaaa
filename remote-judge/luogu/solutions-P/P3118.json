[
    {
        "content": "#### \u8fd9\u7bc7\u9898\u89e3\u53d7\u5927\u4f6cNewErAd\u7684\u542f\u53d1\u800c\u51fa\n\n~~\u5176\u5b9e\u6211\u5c31\u662f\u8ba9\u5927\u5bb6\u66f4\u597d\u7684\u7406\u89e3\u5b83\u7684\u601d\u8def~~\n\n\u770b\u4e86\u8bb0\u5f55\u662f\u7b2c2\u5feb\u7684\uff08\u56e0\u4e3a\u6211\u61d2\u5f97\u7528\u5feb\u8bfb\uff0c\u7b2c\u4e00\u7528\u4e86\u5feb\u8bfb\u5feb\u8f93\uff09\n\n\u548c\u7b2c\u4e00\u53ea\u5dee0.05s\n\n------------\n\u73c2\u7231\u7684\u5206\u5272\u7ebf\n------------\n\u4ecb\u7ecd\u601d\u60f3\uff1a\n\ndp[i]\u8868\u793a\u96c6\u5408i\u80fd\u6700\u591a\u770b\u51e0\u5206\u949f\u7535\u5f71\uff0c\n\n\u8f6c\u79fb\u547c\u4e4b\u6b32\u51fa\n\n\u9009\u4e00\u4e2a\u4e0d\u5728\u96c6\u5408\u7684\u70b9j\u628a\u5b83\u52a0\u5165\n\n\u5f53j\u6700\u5c0f\u7684\u7535\u5f71\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8edp[i]\u65f6\n\ndp[i |(1 << j)] = max(dp[i |(1 << j)],a[j][#] + d[j]);\n\n\uff08#\u662f\u6700\u597d\u7684\u7535\u5f71\u5f00\u59cb\u65f6\u95f4\uff0c\u540e\u9762\u4f1a\u6c42\uff09\n\n\u4e0d\u7136\u8003\u8651\u7ee7\u627f\u72b6\u6001:dp[i |(1 << j)] = dp[i];\n\n\u5f53\u627e\u5230\u4e00\u4e2adp[i] > L\u65f6:ans = min(ans,cnt1(i));\n\n```cpp\nint cnt1(int x)\n{\n    int num = 0;\n    while (x)\n    {\n        if (x & 1)\n            num++;\n        x = x >> 1;\n    }\n    return num;\n}\n```\n\u8fd9\u4e2a\u65701\u51fd\u6570\u4e0d\u7528\u6211\u8bf4\u4e86\u5427\u3002\n\n\u73b0\u5728\u6211\u4eec\u6765\u770b\u524d\u9762\u7684#\u600e\u4e48\u6c42\n\nupper_bound\u4ee5a[j] + 1, a[j] + a[j][0] + 1, f[i]) - a[j];\n\n\u8fd9\u4e2a\u51fd\u6570\u662f\u6c42\u4ee5a[j] + 1\u5f00\u5934\uff0c\u4ee5a[j] + a[j][0] + 1\u7ed3\u5c3e\n\n(\u8fd9\u91cc\u6211\u7528a[j][0]\u4fdd\u5b58\u4e00\u90e8\u7535\u5f71\u6709\u51e0\u573a)\n\n\u7684\u6570\u7ec4\u91cc\u4e0d\u5927\u4e8ef[i]\u7684\u7b2c\u4e00\u4e2a\u6570\u7684\u4e0b\u6807\u3002\n\n\u5f53\u5b83\u5c0f\u4e8e1\u65f6\u5c31\u4e0d\u5b58\u5728\u8fd9\u4e2a\u6570\u3002\n\n\u4f2a\u4ee3\u7801\u6765\u4e00\u6ce2\uff1a\n```cpp\nfor (int i = 0; i < DP; i++)\n    {\n        if(f[i] == -1) continue;\n        for (int j = 0; j < n; j++)\n        {\n            if (i & (1 << j))\n                continue;\n            int p = upper_bound(a[j] + 1, a[j] + a[j][0] + 1, f[i]) - a[j];\n            if (p > 1)\n                f[i | (1 << j)] = max(f[i | (1 << j)], a[j][p - 1] + d[j]);\n            else\n                f[i | (1 << j)] = f[i];\n        }\n        if (f[i] >= m)\n            ans = min(ans, cnt1(i));\n    }\n```\n\u5176\u4ed6\u4ee3\u7801\u547c\u4e4b\u6b32\u51fa\uff0c\u90fd\u662f\u7ec6\u8282\uff1a\n\n~~\u770b\u5728\u5199\u9898\u89e3\u90a3\u4e48\u8f9b\u82e6\u7684\u4efd\u4e0a\u70b9\u4e2a\u8d5e\u518d\u8d70\u5427~~\n\n\u4f60\u4eec\u5728\u7b49\u7684:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, d[25], a[25][1005], f[1 << 20];\nint cnt1(int x)\n{\n    int num = 0;\n    while (x)\n    {\n        if (x & 1)\n            num++;\n        x = x >> 1;\n    }\n    return num;\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; i++)\n    {\n        scanf(\"%d%d\", &d[i], &a[i][0]);\n        for (int j = 1; j <= a[i][0]; j++)\n            scanf(\"%d\", &a[i][j]);\n    }\n    int DP = 1 << n, ans = 1e9;\n    memset(f,-1,sizeof(f));\n    f[0] = 0;\n    for (int i = 0; i < DP; i++)\n    {\n        if(f[i] == -1) continue;\n        for (int j = 0; j < n; j++)\n        {\n            if (i & (1 << j))\n                continue;\n            int p = upper_bound(a[j] + 1, a[j] + a[j][0] + 1, f[i]) - a[j];\n            if (p > 1)\n                f[i | (1 << j)] = max(f[i | (1 << j)], a[j][p - 1] + d[j]);\n            else\n                f[i | (1 << j)] = f[i];\n        }\n        if (f[i] >= m)\n            ans = min(ans, cnt1(i));\n    }\n    if (ans == 1e9)\n        printf(\"-1\");\n    else\n        printf(\"%d\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1596534024,
        "uid": 239433,
        "name": "WZKQWQ",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3118 \u3010[USACO15JAN]Moovie Mooving G\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u50bb\u903c\u9898\uff0c\u4f46\u662f\u771f\u7684\u6076\u5fc3\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u5230$n\\le20$\uff0c\u660e\u663e\u662f\u72b6\u538b\uff0c\u5f88\u5bb9\u6613\u60f3\u5230$dp$\u72b6\u6001\uff1a$dp_i$\u8868\u793a\u5f53\u524d\u770b\u8fc7\u7684\u7535\u5f71\u96c6\u5408\u4e3a$i$\u7684\u6700\u6669\u7ed3\u675f\u65f6\u95f4\uff0c\u6700\u540e\u53ea\u8981\u5224\u65ad$dp_i$\u662f\u5426\u5927\u4e8e\u7b49\u4e8e$l$\u5c31\u53ef\u66f4\u65b0\u7b54\u6848\u4e86\u3002\u8f6c\u79fb\u5f88\u597d\u60f3\uff0c\u6211\u4eec\u679a\u4e3e\u4e0b\u4e00\u573a\u7535\u5f71\u770b\u4ec0\u4e48\uff0c\u5f88\u5bb9\u6613\u8bc1\u660e\uff0c\u4e0b\u4e00\u573a\u7535\u5f71\u7684\u5408\u6cd5\u7684\u5f00\u59cb\u65f6\u95f4\u4e2d\u6700\u665a\u7684\u503c\u4e00\u5b9a\u80fd\u4f7f\u7ed3\u679c\u6700\u4f18\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u9009\u4e86\u524d\u9762\u4e00\u4e2a\u5f00\u59cb\u65f6\u95f4\uff0c\u5e26\u6765\u7684\u5f71\u54cd\u80af\u5b9a\u6bd4\u540e\u9762\u5c0f\uff0c\u5bfc\u81f4\u8f6c\u79fb\u65f6\u53d7\u9650\u3002\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4e8c\u5206\u51fa\u5f00\u59cb\u65f6\u95f4\u5c31\u884c\u4e86\u3002\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(n$\u00b7$2^n$\u00b7$log_2c)$\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u770b\u6837\u5b50\u53ef\u4ee5\u8fc7\u4e86\uff0c\u7b49\u7b49\uff0c\u5982\u679c\u4e0d\u52a0\u4f18\u5316\u7684\u8bdd\u4ea4\u4e0a\u53bb\u53ea\u80fd\u5f97$65$\u5206~~\uff0c\u5f53\u7136\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u5929\u751f\u81ea\u5e26\u5927\u5e38\u6570~~\u3002\u90a3\u600e\u4e48\u4f18\u5316\u5462\uff0c\u5176\u5b9e\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c$dp_i$\u6700\u591a\u4e5f\u5c31$20001$\u4e2a\u4e0d\u540c\u7684\u503c\uff08\u6240\u6709\u5f00\u59cb\u65f6\u95f4\u52a0\u4e0a\u7ed3\u675f\u65f6\u95f4\uff0c\u4ee5\u53ca\u4e00\u5f00\u59cb\u7684$0$\uff09\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u4e0d\u59a8\u628a\u4e8c\u5206\u653e\u5728\u5916\u9762\u8fdb\u884c\uff0c\u5148\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u8fd9\u6837$dp_i$\u8bb0\u5f55\u7684\u5c31\u662f\u79bb\u6563\u5316\u540e\u7684\u4e0b\u6807\uff0c\u4e00\u6837\u8f6c\u79fb\u5c31\u884c\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(n$\u00b7$2^n+n^2c$\u00b7$log_2c)$\uff0c\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u5168\u90e8\u6570\u636e\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5177\u4f53\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n//#define usacojudge\nint n,l;\nint dp[1<<21];\nint d[21];\nint c[21];\nint s[21][1010];\nint cnt[1<<21];\nint p[1<<21];\nint to[20010][21];\nint nxt[21][1010];\nint ans=-1;\nvector<int>tot;\nint main()\n{\n\t#ifdef usacojudge\n\tfreopen(\"movie.in\",\"r\",stdin);\n\tfreopen(\"movie.out\",\"w\",stdout);\n\t#endif\n\tscanf(\"%d%d\",&n,&l);\n\ttot.push_back(0);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",d+i);\n\t\tscanf(\"%d\",c+i);\n\t\tfor(int j=0;j<c[i];j++)scanf(\"%d\",&s[i][j]),tot.push_back(s[i][j]+d[i]);\n\t}\n\tsort(tot.begin(),tot.end());\n\ttot.erase(unique(tot.begin(),tot.end()),tot.end());\n\tfor(int i=0;i<tot.size();i++)for(int j=0;j<n;j++)to[i][j]=upper_bound(s[j],s[j]+c[j],tot[i])-s[j]-1;\n\tfor(int i=0;i<n;i++)for(int j=0;j<c[i];j++)nxt[i][j]=lower_bound(tot.begin(),tot.end(),s[i][j]+d[i])-tot.begin();\n\tfor(int i=0;i<n;i++)p[1<<i]=i;\n\tfor(int i=1;i<(1<<n);i++)cnt[i]=cnt[i-(i&-i)]+1;\n\tfor(int i=0;i+1<(1<<n);i++)\n\t{\n\t\tint j=((1<<n)-1)^i;\n\t\tfor(;j;j-=j&-j)\n\t\t{\n\t\t\tint k=p[j&-j];\n\t\t\tint pos=to[dp[i]][k];\n\t\t\tif(pos<0)continue;\n\t\t\tdp[i|(1<<k)]=max(dp[i|(1<<k)],max(dp[i],nxt[k][pos]));\n\t\t}\n\t}\n\tfor(int i=0;i<(1<<n);i++)\n\t{\n\t\tif(tot[dp[i]]>=l)\n\t\t{\n\t\t\tif(ans==-1 || cnt[i]<ans)ans=cnt[i];\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n} \n```",
        "postTime": 1532499646,
        "uid": 59551,
        "name": "ASSWECAN",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3118 \u3010[USACO15JAN]\u7535\u5f71\u79fb\u52a8Moovie Mooving\u3011"
    },
    {
        "content": "# \u597d\u6076\u5fc3\u7684\u4e00\u9053\u9898\uff01\uff01\uff01\n\n\u8fd9\u9053\u9898\u662f\u8ba9\u6211\u4eec\u6c42**\u6700\u5c0f\u89c2\u770b\u7535\u5f71\u4e2a\u6570**\uff0c\u90a3\u4e48\u9898\u610f\u5c31\u53ef\u4ee5\u7b80\u5316\u6210\uff1a\n\n\u6bcf\u4e2a\u7535\u5f71\u53ea\u80fd\u770b\u4e00\u6b21\uff0c\u4e14\u4e3a\u4e86\u4fdd\u6301**\u89c2\u770b\u7535\u5f71\u4e2a\u6570\u6700\u5c0f**\uff0c\u6240\u4ee5\u9664\u4e86\u6700\u540e\u5230l\u7684\u4e00\u573a\uff0c\u5176\u4ed6\u7684\u90fd\u4e0d\u80fd\u4e2d\u9014\u79bb\u5f00---->\u5373**\u5979\u4e5f\u4e0d\u80fd\u5728\u770b\u4e00\u90e8\u7535\u5f71\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6362\u5230\u53e6\u4e00\u4e2a\u6b63\u5728\u64ad\u653e\u76f8\u540c\u7535\u5f71\u7684\u653e\u6620\u5385**\u3002\n\n### \u7136\u540e\u770b\u6570\u636e\u8303\u56f4\uff1a\n$n<=20$**\u4e00\u773c\u72b6\u538b**\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5b9a$f[S]$\u4e3a\u770b\u4e86S\u96c6\u5408\u91cc\u7684\u7535\u5f71\u6700\u591a\u53ef\u4ee5\u770b\u591a\u5c11\u5206\u949f\u3002\n\n$S$\u96c6\u5408\u4e2d$1$\u7684\u8bf4\u660e\u770b\u8fc7\uff0c$0$\u8bf4\u660e\u6ca1\u6709\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5bbd\u641c\u6765\u679a\u4e3eS\u7684\u6240\u6709\u60c5\u51b5\n\n\u7528$S$\u8868\u793a\u5f53\u524d\u72b6\u6001\uff0c$i$\u8868\u793a\u5f53\u524d\u8ba8\u8bba\u7684\u70b9\uff0c$s$\u8868\u793a\u76ee\u6807\u72b6\u6001\u2014\u2014>$s=S|(1<<i)$\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u627e\u5230\u6700\u63a5\u8fd1$f[S]$\u7684\u7b2c$i$\u4e2a\u7535\u5f71\u7684\u5f00\u573a\u65f6\u95f4\u548c\u7535\u5f71$i$\u7684\u957f\u5ea6\u6765\u66f4\u65b0$f[S]$\n\n\u6700\u540e\u626b\u4e00\u904d\u6240\u6709\u7684\u72b6\u6001\uff0c\u627e\u5230\u770b\u4e86$T$\u5206\u949f\u540e\u7684\u4e00\u79cd\u72b6\u6001\u4f7f$1$\u6700\u5c11\n\n### \u4f18\u5316\uff1a\n**\u901a\u8fc7\u4e00\u4e2a\u6253\u8868\u7684\u601d\u8def\uff0c\u5148\u7b97\u51fa\u6bcf\u4e2a$S$\u7684\u4e8c\u8fdb\u5236\u4e0b\u7684$1$\u7684\u4e2a\u6570\uff0c\u6700\u540e\u904d\u5386\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(1)$**\n\n### \u6ce8\uff1a\n- **$bfs$\u627e\u5230\u7684\u7b2c\u4e00\u4e2a$f[S]$\u8d85\u8fc7l\u5c31\u662f\u6b63\u89e3\u4e86\u2014\u2014\u56e0\u4e3a\u5bbd\u641c\u4fdd\u8bc1\u770b\u7684\u7535\u5f71\u6570\u91cf\u9012\u589e**\n- **\u4e0b\u5217\u4ee3\u7801\u8981\u5f00$O2$\uff0c\u5efa\u8bae\u7528\u624b\u5199\u4e8c\u5206\uff0c\u961f\u5217\uff0c\u8bfb\u5165\u4f18\u5316**\n\n#### code:\n```\n#include<stdio.h>\n#include<bits/stdc++.h>\nusing namespace std;\nqueue<int> q;\nconst int N=22;\nconst int K=1005;\nbool vis[1<<N];\nconst int inf=1e9;\n//arr[i][j]:\u8868\u793a\u7b2ci\u90e8\u7535\u5f71\u7684\u7b2cj\u573a\u7684\u5f00\u59cb\u65f6\u95f4\nint n,len,t[N],k[N],arr[N][K],f[1<<N],tot,cnt[1<<N],ans=inf;\nint main(){\n\tscanf(\"%d %d\",&n,&len);\n\ttot=(1<<n)-1;\n\tfor(int i=1;i<=tot;i++){//\u521d\u59cb\u5316\u627e1\u7684\u4e2a\u6570 \n\t\tcnt[i]=cnt[i>>1];\n\t\tif(i&1)\n\t\t\tcnt[i]++;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&t[i],&k[i]);\n\t\tfor(int j=1;j<=k[i];j++)\n\t\t\tscanf(\"%d\",&arr[i][j]);\n\t\tif(!arr[i][1]){//\u521d\u59cb\u5316f\u6570\u7ec4\n\t\t\tint p=(1<<(i-1));\n\t\t\tf[p]=t[i];\n\t\t\tq.push(p);\n\t\t\tvis[p]=true;\n\t\t}\n\t}\n\twhile(q.size()){\n\t\tint p=q.front();\n\t\tq.pop();\n\t\tvis[p]=false;//p\u72b6\u6001\u6807\u8bb0\u4e3a\u4e0d\u5728\u961f\u5217\u4e2d \n\t\tif(f[p]>=len)\n\t\t\tbreak;//\u7b2c\u4e00\u4e2af[q]\u8d85\u8fc7len\u5206\u949f\u5c31\u662f\u6b63\u89e3\u4e86 \n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif((p>>(i-1))&1)\n\t\t\t\tcontinue;\n\t\t\tint tt=p|(1<<(i-1));\n\t\t\tint l=upper_bound(arr[i]+1,arr[i]+1+k[i],f[p])-arr[i]-1;//\u627e\u51fa\u6700\u63a5\u8fd1f[p]\u7684\u5f00\u573a\u65f6\u95f4\u6765\u66f4\u65b0f[p]\n\t\t\tif(f[tt]<arr[i][l]+t[i] && f[tt]<len){\n\t\t\t\tf[tt]=arr[i][l]+t[i];\n\t\t\t\tif(!vis[tt]){\n\t\t\t\t\tvis[tt]=true;//\u6807\u8bb0\u8fdb\u961f \n\t\t\t\t\tq.push(tt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=tot;i++){\n\t\tif(f[i]<len)//\u5df2\u7ecf\u8d85\u8fc7\u65f6\u95f4\u7684\u76f4\u63a5\u8df3\u8fc7 \n\t\t\tcontinue;\n\t\tans=min(ans,cnt[i]);\n\t}\n\tif(ans<inf)\n\t\tprintf(\"%d\",ans);\n\telse\n\t\tputs(\"-1\");\n\treturn 0;\n}\n```\n",
        "postTime": 1567148215,
        "uid": 156001,
        "name": "TheAutumnGlory",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3118 \u3010[USACO15JAN]\u7535\u5f71\u79fb\u52a8Moovie Mooving\u3011"
    },
    {
        "content": "\u5f88\u5bb9\u6613\u7684\u4e00\u9053\u72b6\u538b\u3002\n\n\u9898\u76ee\u8981\u6c42\u201c\u76f8\u540c\u7684\u7535\u5f71\u770b\u4e00\u904d\u201d\uff0c\u540c\u65f6 $n\\leq 20$\uff0c\u6240\u4ee5\u8003\u8651\u72b6\u538b\u3002\n\n\u5148\u8bbe\u72b6\u6001\u4e3a $s$\uff0c$s$ \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4ece\u540e\u5f80\u524d\u6570\u7b2c $i$ \u4f4d\u5982\u679c\u662f $1$ \u5219\u4ee3\u8868\u6b64\u65f6\u7b2c $i+1$ \u4e2a\u7535\u5f71\u5df2\u7ecf\u770b\u8fc7\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\uff08\u5373\u6700\u5c0f\u7684\u89c2\u5f71\u6570\u91cf\uff09\u5df2\u7ecf\u88ab\u5305\u542b\u5728\u72b6\u6001\u4e2d\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u8c03\u6574\u4e00\u4e0b\u6700\u4f18\u5316\u76ee\u6807\u3002\u7531\u4e8e\u9898\u76ee\u4e2d\u8fd8\u6d89\u53ca\u4e00\u4e2a\u65f6\u95f4\uff0c\u6240\u4ee5\u8003\u8651\u6700\u4f18\u5316\u65f6\u95f4 $t$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u8fd9\u4e2a\u72b6\u6001\u8bbe\u8ba1\u7684\u65b9\u6848\u53ef\u4ee5\u5728 $[0,t]$ \u5185\u4e0d\u95f4\u65ad\u89c2\u5f71\uff0c\u90a3\u4e48 $t$ \u5e94\u8be5\u5c3d\u91cf\u5927\u3002\n\n\u4e8e\u662f\u8bbe $f_s=t$\uff0c\u8003\u8651\u8f6c\u79fb\u3002\n\n\u663e\u7136\u8f6c\u79fb\u5c31\u662f\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u7535\u5f71\uff0c\u90a3\u4e48\u7531\u4e8e $d$ \u662f\u56fa\u5b9a\u7684\uff0c\u5c31\u8981\u8ba9\u5f00\u59cb\u65f6\u95f4\u5c3d\u91cf\u5927\uff0c\u53c8\u4e0d\u9020\u6210\u95f4\u65ad\u3002\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u627e\u5230\u4e0d\u8d85\u8fc7\u5f53\u524d $f$ \u503c\u7684\u6700\u5927\u7684\u5f00\u59cb\u65f6\u95f4\u5e76\u8fdb\u884c\u8f6c\u79fb\u3002\n\n\u90a3\u4e48\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86~\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(2^nn\\log c)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(2^n)$\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nconst int N = 25;\nint n, l, d[N], c[N][1005], dp[(1 << 20) + 5], popcnt[(1 << 20) + 5];\n\ninline void Read() {\n\tn = qread(); l = qread();\n\tfor (int i = 1;i <= n;i++) {\n\t\td[i] = qread();\n\t\tc[i][0] = qread();\n\t\tfor (int j = 1;j <= c[i][0];j++) c[i][j] = qread();\n\t}\n}\n\ninline void Solve() {\n\tmemset(dp, 0xcf, sizeof(dp));\n\tdp[0] = 0;\n\tfor (int i = 1;i < (1 << n);i++) popcnt[i] = popcnt[i >> 1] + (i & 1);\n\tfor (int i = 0;i < (1 << n);i++) {\n\t\tif (dp[i] < 0) continue;\n\t\tfor (int j = 1;j <= n;j++) {\n\t\t\tif (!(i & (1 << j - 1))) {\n\t\t\t\tint lst = upper_bound(c[j] + 1, c[j] + c[j][0] + 1, dp[i]) - c[j] - 1;\n\t\t\t\tif (lst != 0 && c[j][lst] + d[j] > dp[i]) dp[i | (1 << j - 1)] = Max(dp[i | (1 << j - 1)], c[j][lst] + d[j]);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0x3f3f3f3f;\n\tfor (int i = 0;i < (1 << n);i++) {\n\t\tif (dp[i] >= l) {\n\t\t\t//printf(\"%d %d\\n\", i, dp[i]);\n\t\t\tans = Min(ans, popcnt[i]);\n\t\t}\n\t}\n\tif (ans > n) puts(\"-1\");\n\telse printf(\"%d\", ans);\n}\n\nint main() {\n\tRead();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1605602537,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3118 \u3010[USACO15JAN]Moovie Mooving G\u3011"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u5178\u578b\u7684\u72b6\u6001\u538b\u7f29DP\u9898\n\n\u4e0d\u8fc7\u597d\u50cf\u6d4b\u8bc4\u6162\u4e86\u6216\u662f\u6570\u636e\u6539\u5f3a\u4e86\u5bfc\u81f4\u73b0\u5728\u4ec0\u4e48\u4ee3\u7801\u4e5fAC\u4e0d\u4e86\u4e86\uff1f\n\n\u4ee5\u524d\u80fdAC\u7684\u4ee3\u7801\u73b0\u5728\u4e5fTLE\uff1f\uff1f\uff1f\n\n\n\u4e0d\u7ba1\u4e86\n\n\u7531\u4e8en\u4ec5\u4e3a20\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4e00\u4e2a10\u8fdb\u5236\u6570\u6765\u8868\u793a\u6240\u6709\u7535\u5f71\u89c2\u770b\u4e0e\u5426\u8fd9\u4e2a\u72b6\u6001\n\n\\_\\_builtin\\_popcount\u8fd9\u4e2a\u51fd\u6570\u8ba9\u6211\u957f\u89c1\u8bc6\u4e86\uff08\u4e00\u5f00\u59cb\u662f \u4e24\u4e2a \u4e0b\u5212\u7ebf\uff01\uff01\uff09\n\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n/*\n    \u8be1\u5f02\u5361\u5e38\u6570\u9898\uff0c\u81f3\u4eca\u672aAC \n*/\n\n#include<bits/stdc++.h>\n\nusing namespace std;\nint n,l,dur[30],dp[1<<22];\nint a[30][1005];\n\ninline int read() //\u7528read\u8bfb\u53d6\u5feb \n{\n    int x=0;\n    char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x;\n}\n\nint main()\n{\n    n=read();l=read();\n    for(int i=1;i<=n;i++)\n    {\n        cin >> dur[i] >> a[i][0];  //\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u7528a[i][0]\u5b58\u50a8\u6570\u636e\u4e2a\u6570\uff0c\u4ece\u800c\u4e0d\u7528vector\uff0c\u63d0\u9ad8\u901f\u5ea6\uff01\uff01\uff01 \n        for(int j=1;j<=a[i][0];j++)\n        {\n            cin >> a[i][j];\n        }\n    }\n    \n    memset(dp,-1,sizeof(dp));\n    dp[0]=0;\n    int res=100;\n    for(int i=0;i<(1 << n);i++)\n    {\n        if(dp[i]==-1) continue;\n        \n        for(int j=0;j<=n-1;j++)  //\u6838\u5fc3\u7b97\u6cd5\uff0c\u7531\u4e8en\u4ec5\u4e3a20\uff0c\u4f7f\u7528\u72b6\u6001\u538b\u7f29DP,\u5bf9\u6bcf\u4e2a\u8282\u76ee\u662f\u5426\u9009\u53d6\u8fdb\u884c\u52a8\u5f52!!!\n        {\n            int k=1 << j;\n            \n            if((i & k)>0) continue;  //\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\uff0c\u4f4d\u8fd0\u7b97\u4f18\u5148\u7ea7\u4f4e\uff0c\u8981\u6253\u62ec\u53f7 \u8981\u6253\u62ec\u53f7 \u8981\u6253\u62ec\u53f7\n            \n            int pos=upper_bound(a[j+1]+1,a[j+1]+a[j+1][0]+1,dp[i])-a[j+1]; //\u76f4\u63a5\u7528upper_bound\u67e5\u627e\u7b2c\u4e00\u4e2a\u6bd4dp[i]\u5927\u7684\u6570 \n            if(pos>1) dp[i | k]=max(dp[i | k],a[j+1][pos-1]+dur[j+1]);     //\u8003\u8651\u5e94\u7528lower\u8fd8\u662fupper!!! \n            else dp[i | k]=dp[i];\n        }\n        \n        if (dp[i]>=l)\n        {\n            int cnt=__builtin_popcount(i);  //\u503c\u5f97\u5b66\u4e60\u7684\u51fd\u6570\uff0c_builtin_popcount\u663e\u793a\u4e00\u4e2a10\u8fdb\u5236\u6570\u7684\u4e8c\u8fdb\u5236\u6709\u591a\u5c11\u4e2a1 \n            res=min(res,cnt);        \n        }\n    }\n    \n    if (res==100) cout << -1;\n    else cout << res;\n    return 0;\n}\n```",
        "postTime": 1501251571,
        "uid": 18490,
        "name": "NewErA",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3118 \u3010[USACO15JAN]\u7535\u5f71\u79fb\u52a8Moovie Mooving\u3011"
    },
    {
        "content": "# [[USACO15JAN]Moovie Mooving G](https://www.luogu.com.cn/problem/P3118)\n\n---\n\n\u72b6\u538b\u96be\u9898\u3002\u4e0d\u8fc7\u4e5f\u597d\u7406\u89e3\u3002\n\n---\n\n\u9996\u5148\u6211\u4eec\u6839\u636e\u9898\u610f\uff1a\n\n> she does not want to ever visit the same movie twice.\n\n\u8fd9\u53e5\u8bdd\u4ee5\u53ca$n$\u7684\u53d6\u503c\u8303\u56f4\u7ed9\u4e86\u6211\u4eec\u8db3\u591f\u591a\u7684\u63d0\u9192\uff1a\u53ef\u80fd\u662f**\u72b6\u6001\u538b\u7f29**\u3002\n\n\u90a3\u4e48\uff0c\u5f53\u6211\u4eec\u771f\u6b63\u5c1d\u8bd5\u7528\u96c6\u5408\u8868\u793a\u6bcf\u4e2a\u7535\u5f71\u662f\u5426\u5df2\u770b\u8fc7\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5374\u4e0d\u5bb9\u6613\u7ed9\u51fa\u80fd\u591f\u8f6c\u79fb\u7684\u72b6\u6001\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u6211\u4eec\u5b9a\u4e49\u7684\u72b6\u6001\u4e2d\u96c6\u5408\u8868\u793a\u6210\u4e3a\u8be5\u72b6\u6001\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u8fd9\u5c06\u4f1a\u4e0e\u6700\u7ec8\u6c42\u8be5\u96c6\u5408\u7684\u6700\u5c0f\u503c\u51b2\u7a81\u2014\u2014\u72b6\u6001\u4e2d\u6ca1\u6cd5\u8bb0\u5f55\u96c6\u5408\u7684\u6700\u5c0f\u503c\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u6362\u4e00\u79cd\u601d\u8def\uff1a$dp(i,S)$\u8868\u793a\u7684\u662f\u4ee5$i$\u4e3a\u7ed3\u5c3e\u3001\u5df2\u7ecf\u770b\u8fc7\u7684\u96c6\u5408\u4e3a$S$\u7684**\u6700\u957f\u65f6\u95f4**\u3002\u8fd9\u79cd\u72b6\u6001\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u80fd\u591f\u907f\u514d\u8ba1\u7b97\u5230\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u5177\u4f53\u5206\u6790\uff1a\n\n\u5bb9\u6613\u5f97\u5230\uff1a\n$$\ndp(i,S)=max(dp(j,S\\setminus\\{i\\}),query(dp(j,S\\setminus\\{i\\}))+d_i)\n$$\n\u5176\u4e2d\uff0c$query(dp(j,S\\setminus\\{i\\}))$\u4ee3\u8868\u7684\u662f\u7535\u5f71$i$\u4e2d\u65f6\u95f4\u8282\u70b9\u4e0d\u8d85\u8fc7$dp(j,S\\setminus\\{i\\})$\u7684\u6700\u5927\u503c\u3002\u800c\u8be5\u72b6\u6001\u4e0b**\u5141\u8bb8**\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u65f6\u95f4\u8282\u70b9\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\u7279\u6b8a\u5904\u7406\u5373\u53ef\u3002\n\n\u8fd9\u662f\u7531\u4e8e\u8ba1\u7b97\u7684\u65f6\u5019\u907f\u514d\u51fa\u73b0**\u95f4\u9694**\u2014\u2014\u5373\u770b\u7535\u5f71\u65f6\u95f4\u5904\u5904\u8fde\u7eed\u3002\n\n\u6700\u540e\uff0c\u7edf\u8ba1\u6700\u7ec8\u7b54\u6848\u7684\u65f6\u5019\u5bf9\u4e8e\u6240\u6709\u7684\u5927\u4e8e\u7b49\u4e8e\u9650\u5236$L$\u7684\u72b6\u6001\u8ba1\u7b97\u5b83\u4eec\u7684\u96c6\u5408\u5927\u5c0f\uff0c\u66f4\u65b0\u3002\n\n\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^22^nlogn)$\u3002\u5b9e\u9645\u6d4b\u8bd5\u7684\u65f6\u5019\u4f1a\u66f4\u5feb\u3002\n\n```c++\n\u2026\u2026 \nint n, L, t, c[N], d[N], st[N][C], siz[S] = {}, ttt[S];\nint ans = INF, dp[N][S];\nint query(int cur, int x)\n{\n\tint L = 0, R = c[cur], mid, tmp; \n\twhile(L < R)\n\t{\n\t\tmid = L + ((R - L) >> 1);\n\t\ttmp = st[cur][mid];\t\t\n\t\tif(tmp == x) return x;\n\t\tif(tmp < x) L = mid + 1;\n\t\telse R = mid;\n\t}\n\tif(!R) return -1;\n\treturn st[cur][R - 1];\n}\nint main()\n{\n\tscanf(\"%d %d\", &n, &L);\n\tfor(int i = 0; i < n; ++ i) \n\t{\n\t\tscanf(\"%d %d\", &d[i], &c[i]);\n\t\tfor(int j = 0; j < c[i]; ++ j) scanf(\"%d\", &st[i][j]);\n\t}\n\tt = (1 << n) - 1;\n\tfor(int i = 1; i <= t; ++ i) siz[i] = siz[i ^ (i & (-i))] + 1;\n\tfor(int i = 0; i < n; ++ i) ttt[1 << i] = i;\n\tfor(int i = 1; i <= t; ++ i) ttt[i] = ttt[i & (-i)];\n\tmemset(dp, 0, sizeof(dp));\n\tfor(int s = 1; s <= t; ++ s)\n\t{\n\t\tfor(int s0 = s, i = ttt[s]; s0; s0 &= ~(1 << i), i = ttt[s0])\n\t\t{\n\t\t\tif(siz[s] == 1 && st[i][0] == 0) dp[i][s] = d[i];\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int s1 = s ^ (1 << i), j = ttt[s1]; s1; s1 &= ~(1 << j), j = ttt[s1])\n\t\t\t\t{\n\t\t\t\t\tint tmp = query(i, dp[j][s ^ (1 << i)]);\n\t\t\t\t\tdp[i][s] = max(dp[i][s], dp[j][s ^ (1 << i)]);\n\t\t\t\t\tif(tmp != -1) dp[i][s] = max(dp[i][s], tmp + d[i]);\n\t\t\t\t}\n\t\t\t}\n//\t\t\tprintf(\"dp[%d][%d] = %d\\n\", i, s, dp[i][s]);\n\t\t\tif(dp[i][s] >= L) ans = min(ans, siz[s]);\n\t\t} \n\t}\n\tif(ans == INF) puts(\"-1\");\n\telse printf(\"%d\\n\", ans);\n\treturn 0;\n} \n```\n\n---\n\n\u5176\u5b9e\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4ec5\u8bb0\u5f55\u4e00\u4e2a\u96c6\u5408\u4ee3\u8868\u8be5\u96c6\u5408\u4e0b\u6240\u80fd\u8fbe\u5230\u7684\u6700\u957f\u65f6\u95f4\u7ed3\u70b9\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u96c6\u5408\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u76f4\u63a5\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\u7b2c\u4e00\u7ef4\u72b6\u6001\u662f\u65e0\u7528\u7684\uff0c\u56e0\u4e3a**\u8f6c\u79fb\u53ea\u548cDP\u51fa\u7684\u503c\u6709\u5173\uff0c\u4e0e\u5143\u7d20\u65e0\u5173\u3002**\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n2^nlogn)$\u3002\u7a7a\u95f4\u4e5f\u53ef\u4ee5\u627f\u53d7\u7684\u4e86\u3002\n\n```c++\n\u2026\u2026\nint n, L, t, c[N], d[N], st[N][C], siz[S] = {}, ttt[S];\nint ans = INF, dp[S];\nint query(int cur, int x)\n{\n\tint L = 0, R = c[cur], mid, tmp; \n\twhile(L < R)\n\t{\n\t\tmid = L + ((R - L) >> 1);\n\t\ttmp = st[cur][mid];\t\t\n\t\tif(tmp == x) return x;\n\t\tif(tmp < x) L = mid + 1;\n\t\telse R = mid;\n\t}\n\tif(!R) return -1;\n\treturn st[cur][R - 1];\n}\nint main()\n{\n\tscanf(\"%d %d\", &n, &L);\n\tfor(int i = 0; i < n; ++ i) \n\t{\n\t\tscanf(\"%d %d\", &d[i], &c[i]);\n\t\tfor(int j = 0; j < c[i]; ++ j) scanf(\"%d\", &st[i][j]);\n\t}\n\tt = (1 << n) - 1;\n\tfor(int i = 1; i <= t; ++ i) siz[i] = siz[i ^ (i & (-i))] + 1;\n\tfor(int i = 0; i < n; ++ i) ttt[1 << i] = i;\n\tfor(int i = 1; i <= t; ++ i) ttt[i] = ttt[i & (-i)];\n\tmemset(dp, 0, sizeof(dp));\n\tfor(int s = 1; s <= t; ++ s)\n\t{\n\t\tfor(int s0 = s, i = ttt[s]; s0; s0 &= ~(1 << i), i = ttt[s0])\n\t\t{\n\t\t\tint tmp = query(i, dp[s ^ (1 << i)]);\n\t\t\tdp[s] = max(dp[s], dp[s ^ (1 << i)]);\n\t\t\tif(tmp != -1) dp[s] = max(dp[s], tmp + d[i]);\n\t\t\tif(dp[s] >= L) ans = min(ans, siz[s]);\n\t\t} \n\t}\n\tif(ans == INF) puts(\"-1\");\n\telse printf(\"%d\\n\", ans);\n\treturn 0;\n} \n```\n\n---\n\n\u603b\u7ed3\uff1a\n\n1. \u8fd9\u9053\u9898\u6562\u4e8e\u5728\u8f6c\u79fb\u7684\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u975e$O(1)$\u505a\u6cd5\u7684\u8ba1\u7b97\uff1b\n2. \u5f53\u8f6c\u79fb\u4e0e\u72b6\u6001\u4e2d\u96c6\u5408\u5143\u7d20\u672c\u8eab**\u65e0\u5173\u8054**\uff0c\u4e0e\u72b6\u6001\u503c\u6709\u5173\u65f6\u5e94\u53bb\u9664\u5197\u6742\u4fe1\u606f\u3002",
        "postTime": 1613568963,
        "uid": 157585,
        "name": "zach0914",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3118 \u3010\u7535\u5f71\u3011"
    }
]