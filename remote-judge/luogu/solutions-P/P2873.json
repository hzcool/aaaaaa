[
    {
        "content": "\u8fd9\u9898\u5438\u5f15\u6211\u7684\u5730\u65b9\u7adf\u7136\u662f\u5b83\u7684\u9898\u76ee\u3002\u3002\u3002\n\nMud Puddles\n\n\u4e00\u4e0b\u6211\u5c31\u60f3\u5230\u4e86\n\n![\u5927\u5bb6\u90fd\u559c\u6b22\u8df3\u6ce5\u5751](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1596166870888&di=766c394531adc4a0fe8d9ff439d2f97f&imgtype=0&src=http%3A%2F%2Fn.sinaimg.cn%2Fsinacn%2Fw870h489%2F20180114%2F631b-fyqrewh8860606.jpg)\n\n~~\u5927\u5bb6\u90fd\u559c\u6b22\u8df3\u6ce5\u5751\uff01\uff01\uff01~~\n\n\u597d\u4e86\u6211\u4eec\u8a00\u5f52\u6b63\u4f20\n\n\u8fd9\u9898\u5176\u5b9e\u662f\u4e2a\u88f8\u7684bfs\n\n\u4e00\u9053\u5f88\u597d\u7684\u7ec3\u624b\u9898\n\n\u5148\u6765\u770b\u770b\u9898\u76ee\u4e2d\u7684\u91cd\u70b9\uff1a\n\n\u201cFJ\u7684\u5c4b\u5b50\u5728\u5e73\u9762\u5750\u6807(0, 0)\u7684\u4f4d\u7f6e\uff0c\u8d1d\u831c\u6240\u5728\u7684\u725b\u68da\u5219\u4f4d\u4e8e\u5750\u6807(X,Y) (-500 <= X <= 500; -500 <= Y <= 500)\u5904\u3002\u201d\n\n~~what\uff1f\u8d1f\u6570\uff1fUSACO\u60a8\u5728\u9017\u6211\uff1f~~\n\n\u5176\u5b9e\u9762\u5bf9\u8d1f\u6570\uff0c\u6211\u4eec\u53ea\u8981\u628a\u5750\u6807\u52a0\u4e0a500\u5373\u53ef\uff0c\u540c\u65f6\u4e5f\u4e0d\u8981\u5fd8\u8bb0\u5b58\u50a8\u5730\u56fe\u7684\u6570\u7ec4\u4e5f\u8981\u76f8\u5e94\u589e\u52a0\u5927\u5c0f\u3002\n\n\u201c\u6700\u5c11\u8981\u8d70\u591a\u5c11\u8def\u624d\u80fd\u5230\u8d1d\u831c\u6240\u5728\u7684\u725b\u68da\u5462\uff1f\u201d\n\n\u8fd9\u3002\u3002\u3002\u8bf4\u7684\u8981\u591a\u660e\u663e\u6709\u591a\u660e\u663e\uff0c\u5c31\u5dee\u4e00\u53e5\u201c\u8fd9\u9898\u8bf7\u7528\u5bbd\u641c\u89e3\u51b3\u201d\u3002\n\n\u201c\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u4eceFJ\u7684\u5c4b\u5b50\u5230\u725b\u68da\u603b\u662f\u5b58\u5728\u81f3\u5c11\u4e00\u6761\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u6ce5\u5858\u7684\u8def\u5f84\u3002\u201d\n\n\u8fd9\u5c31\u662f\u8bf4\u6b64\u9898\u4e00\u5b9a\u6709\u89e3\uff0c\u65e0\u9700\u8003\u8651\u8d70\u4e0d\u901a\u7684\u60c5\u51b5\u3002\n\n\u597d\u7684\u6211\u4eec\u5148\u628a\u4ee3\u7801\u8d34\u4e0a\u6765\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint X,Y,n,dir[4][2]={{1,0},{0,1},{-1,0},{0,-1}};//dir\u6570\u7ec4\u5b58\u50a8\u56db\u4e2a\u65b9\u5411\nbool mmap[1005][1005];//\u5b58\u50a8\u5730\u56fe\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f500\u800c\u662f1000\uff09\nstruct node{\n    int x,y,sum;\n};//\u5b9a\u4e49\u7ed3\u6784\u4f53\uff0cx\u8868\u793a\u6a2a\u5750\u6807\uff0cy\u8868\u793a\u7eb5\u5750\u6807\uff0csum\u8868\u793a\u5230\u8fd9\u4e2a\u70b9\u6240\u9700\u6b65\u6570\nqueue <node> qwq;//\u5f53\u7136\u8981\u7b26\u5408\u6211\u4eec\u5c0f\u732a\u4f69\u5947\u7684\u53ef\u7231\u6c14\u8d28\u5566\n\nint bfs ()//\u5bbd\u641c\n{\n    while (!qwq.empty())//\u961f\u5217\u975e\u7a7a\n    {\n        int xx,yy,s;\n        xx=qwq.front().x;\n        yy=qwq.front().y;\n        s=qwq.front().sum;//\u53d6\u961f\u9996\u5143\u7d20\u8fdb\u884c\u6269\u5c55\n        for (int i=0;i<4;i++)//4\u4e2a\u65b9\u5411\n        {\n            int nx=xx+dir[i][0],\n                ny=yy+dir[i][1];//\u6269\u5c55\n            if (nx==X && ny==Y)//\u5982\u679c\u5230\u8fbe\u76ee\u7684\u5730\n            {\n                while (!qwq.empty())\n                  qwq.pop();//\u6e05\u7a7a\u961f\u5217\n                return s+1;//\u8fd4\u56de\u503c\n            }\n            else//\u6ca1\u6709\u5230\u8fbe\u76ee\u7684\u5730\n            {\n                if (!mmap[nx][ny])//\u53ef\u4ee5\u8d70\uff08\u5373\u8fd9\u91cc\u4e0d\u662f\u6ce5\u5751\uff09\n                {\n                    mmap[nx][ny]=true;//\u628a\u8fd9\u91cc\u6807\u8bb0\u6210\u8d70\u8fc7\u7684\n                    //\u5176\u5b9e\u53ef\u4ee5\u518d\u5f00\u4e00\u4e2avis\u6570\u7ec4\uff0c\u4f46\u5bf9\u4e8e\u8fd9\u9898\u5b8c\u5168\u6ca1\u5fc5\u8981\n                    qwq.push({nx,ny,s+1});//\u5165\u961f\n                }\n            }\n        }\n        qwq.pop();//\u51fa\u961f\n    }\n}\n\nint main()\n{\n    scanf (\"%d%d%d\",&X,&Y,&n);//\u8f93\u5165\n    memset (mmap,false,sizeof (mmap));//\u521d\u59cb\u5316\n    X+=500;  Y+=500;//\u91cd\u8981\uff01\uff01\uff01\u4e00\u5b9a\u8981\u52a0500\uff01\uff01\uff01\n    qwq.push({500,500,0});//\u521d\u59cb\u60c5\u51b5\u5165\u961f\n    for (int i=1;i<=n;i++)\n    {\n        int a,b;\n        scanf (\"%d%d\",&a,&b);\n        a+=500; b+=500;//\u5750\u6807\u52a0500\n        mmap[a][b]=true;//\u6807\u8bb0\u6ce5\u5751\n    }\n    printf (\"%d\\n\",bfs ());//\u8f93\u51fa\n    return 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n```\n\u53e6\u9644\u5bbd\u641c\u6a21\u677f\n\n```\n\u521d\u59cb\u72b6\u6001\u5165\u961f;       \nwhile(\u961f\u5217\u4e0d\u4e3a\u7a7a)\n{\n\t\u53d6\u961f\u9996\u5143\u7d20\u8fdb\u884c\u6269\u5c55; \n\tfor(\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u62d3\u5c55\u72b6\u6001)\n\t{\n\t\tif(\u65b0\u72b6\u6001\u5408\u6cd5)\n\t\t\t\u5165\u961f;\n        if(\u5f53\u524d\u72b6\u6001\u662f\u76ee\u6807\u72b6\u6001)\t\n        \t\u5904\u7406(\u8f93\u51fa\u89e3\u6216\u6bd4\u8f83\u89e3\u7684\u4f18\u52a3); \n\t}\n\t\u961f\u9996\u7ed3\u70b9\u6269\u5c55\u5b8c\u6bd5\uff0c\u51fa\u961f; \n}\n\n```\n",
        "postTime": 1596157568,
        "uid": 206124,
        "name": "Horizon20182201",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]Mud Puddles S\u3011"
    },
    {
        "content": "[\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://shenyouran.github.io/P2873/)\n\n\u89c2\u5bdf\u672c\u9898\u4e4b\u540e\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a\u6613\u9519\u70b9\uff1a\u5750\u6807\u53ef\u80fd\u4e3a\u8d1f\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c$\\text{C++}$\u4e2d\u6570\u7ec4\u4e0b\u6807\u5fc5\u987b\u662f\u975e\u8d1f\u3002\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86$-500 \\le X \\le 500,-500 \\le Y \\le 500$\u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u628a\u6240\u6709\u7684\u4e0b\u6807\u52a0\u4e0a$500$\uff0c\u5c31\u4e00\u5b9a\u80fd\u6ee1\u8db3\u6240\u6709\u4e0b\u6807\u4e3a\u975e\u8d1f\u3002\u8fd9\u6837\uff0c\u6570\u7ec4\u5927\u5c0f\u53ea\u9700\u8981\u5f00\u5230$1000$\u4ee5\u4e0a\uff08\u4e0d\u5305\u62ec$1000$\uff09\u5373\u53ef\u3002\n\n\u7a0b\u5e8f\u7684\u5b9e\u73b0\u53ef\u4ee5\u4f7f\u7528\u5bbd\u641c\uff0c\u56e0\u4e3a\u5bbd\u641c\u9002\u5408\u5904\u7406\u6700\u4f18\u89e3\u3002\u800c\u6df1\u641c\u4f1a\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u7136\u800c\u8fd9\u91cc\u7684\u70b9\u662f\u6742\u4e71\u65e0\u7ae0\u7684\uff0c\u6240\u4ee5\u6df1\u641c\u7684\u6548\u7387\u662f\u5f88\u4f4e\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6765\u4fdd\u5b58\u5bf9\u5e94\u4f4d\u7f6e\u662f\u5426\u6709\u6ce5\uff0c\u540c\u65f6\u5728\u8bbf\u95ee\u8fc7\u6ca1\u6709\u6ce5\u5730\u7684\u5730\u65b9\u4e4b\u540e\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5730\u65b9\u6807\u8bb0\u4e3a\u6709\u6ce5\u3002\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u4e0d\u8fdb\u5165\u6ce5\u5730\uff0c\u800c\u8d70\u8fc7\u7684\u8def\u5c31\u4e0d\u53ef\u80fd\u518d\u8d70\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a`visit`\u548c`mud`\u4e24\u4e2a\u6570\u7ec4\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002\u8fd9\u6837\u505a\u7684\u6839\u672c\u539f\u56e0\u662f$\\text{BFS}$\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u91cd\u65b0\u6807\u8bb0\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ex,ey,n,front=1,rear=1,dx[]={-1,0,0,1},dy[]={0,-1,1,0};//ex,ey\u4e3a\u7ed3\u675f\u5750\u6807\uff0cn\u4e3a\u6ce5\u5730\u4e2a\u6570\uff0cfront,rear\u5206\u522b\u4e3a\u961f\u5934\u3001\u961f\u5c3e\uff0cdx,dy\u4e3a\u589e\u91cf\u6570\u7ec4\nbool mud[1001][1001];//\u6ce8\u610f\u4e0b\u6807\u8981\u5f00\u52301000\u4ee5\u4e0a\uff08\u4e0d\u542b\uff09\nstruct node\n{\n    int x,y,step;\n}q[1000001];//1000*1000=10^6\uff0c\u6240\u4ee5\u961f\u5217\u4e0b\u6807\u53ea\u9700\u8981\u5f00\u523010^6\uff08\u4e0d\u542b\uff09\u4ee5\u4e0a\u5373\u53ef\nint main()\n{\n    scanf(\"%d%d%d\",&ex,&ey,&n);\n    for(int i=0,a,b;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        mud[a+500][b+500]=true;//\u5bf9\u6bcf\u4e00\u4e2a\u8f93\u5165\u7684\u5750\u6807\u90fd\u8981\u52a0500\n    }\n    q[1]=(node){500,500,0};//\u6ce8\u610f\u521d\u59cb\u5750\u6807\u8981\u52a0500\n    while(front<=rear)\n    {\n        node f=q[front++];\n        for(int i=0;i<4;i++)\n        {\n            int nx=f.x+dx[i],ny=f.y+dy[i];\n            if(nx<0||ny<0||nx>1000||ny>1000||mud[nx][ny])continue;//\u8fd9\u91cc\u539f\u6765\u662f<-500\u6216>500\u5c31\u4e0d\u80fd\u8d70\uff0c\u800c\u73b0\u5728\u53d8\u6210<(-500+500=)0\u6216\u8005>(500+500=)1000\n            mud[nx][ny]=true;//\u6807\u8bb0\u8bbf\u95ee\n            q[++rear]=(node){nx,ny,f.step+1};//\u5165\u961f\n            if(nx==ex+500&&ny==ey+500)//\u6ce8\u610f\u7ed3\u675f\u5750\u6807\u4e5f\u8981\u52a0500\n            {\n                printf(\"%d\",q[rear].step);\n                return 0;//\u6ce8\u610fBFS\u627e\u7684\u662f\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u8f93\u51fa\u540e\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f\n            }\n        }\n    }\n    return 0;\n}\n```\n\n\u5f53\u7136\uff0c\u8981\u8003\u8651\u6570\u7ec4\u4e0b\u6807\u4e3a\u8d1f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5f88\u96be\u5fd8\u8bb0$\\color{red}\\text{STL(\u6807\u51c6\u6a21\u677f\u5e93)}$\u4e2d\u7684\u4e00\u4e2a\u79d8\u5b9d\uff08~~\u6807\u51c6\u6a21\u677f\u5e93\u91cc\u9762\u5168\u662f\u597d\u4e1c\u897f~~\uff09\uff0c\u5373$\\text{map}$\u3002\n\n$\\text{map}$\u53ef\u4ee5\u5b9e\u73b0\u4e24\u4e2a\u4efb\u610f\u7c7b\u578b\u53d8\u91cf\u7684\u4e00\u4e00\u5bf9\u5e94\u3002\u6765\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a\n\n```cpp\n#include<map>//\u9700\u8981\u5f15\u5165\u5934\u6587\u4ef6\nmap<int,int>m1;//\u5b9e\u73b0int\u548cint\u4e4b\u95f4\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\nmap<string,bool>m2;//\u5b9e\u73b0string\u548cint\u4e4b\u95f4\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\nm1[-1]=5;//\u8fd9\u91cc\u53ef\u4ee5\u628a-1\u4f4d\u7f6e\u8d4b\u503c\u4e3a5\nm2[\"AC is fun\"]=true;\n```\n\n\u7136\u800c\uff0c\u8fd9\u91cc\u9700\u8981\u4e8c\u7ef4\u6570\u7ec4\uff0c\u8868\u9762\u4e0a\u770b\u8d77\u6765\u6ca1\u6709\u529e\u6cd5\u5b9e\u73b0\u3002\u4f46\u7531\u4e8e\u9012\u5f52\u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a$\\text{map}$\u8fdb\u884c\u53e0\u52a0\uff0c\u5373\uff1a\n\n```cpp\nmap<int,map<int,bool>>mud;//\u6700\u7ec8\u7684\u7ed3\u679c\u662fbool\u7c7b\u578b\uff0c\u76f8\u5f53\u4e8ebool mud[][];\uff0c\u53ea\u4e0d\u8fc7\u4e0b\u6807\u8303\u56f4\u4e0d\u540c\uff08int\u53ef\u4ee5\u4e3a\u8d1f\uff09\n```\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u52a0\u65b9\u4fbf\u5730\u5b9e\u73b0\u672c\u9898\u7684\u8d1f\u6570\u5750\u6807\u95ee\u9898\u4e86\uff08~~\u5c3d\u7ba1\u5e38\u6570\u4e0d\u5c0f~~\uff09\uff1a\n\n```cpp\n//\u6ce8\u610f\u5b9a\u4e49\u4e86map\u4e4b\u540e\uff0c\u524d\u9762\u7684500\u90fd\u4e0d\u9700\u8981\u52a0\u4e86\n#include<bits/stdc++.h>//map\u5934\u6587\u4ef6\u5728\u4e07\u80fd\u5934\u6587\u4ef6\u4e2d\nusing namespace std;\nint ex,ey,n,front=1,rear=1,dx[]={-1,0,0,1},dy[]={0,-1,1,0};\nmap<int,map<int,bool>>mud;\nstruct node\n{\n    int x,y,step;\n}q[1000001];\nint main()\n{\n    scanf(\"%d%d%d\",&ex,&ey,&n);\n    for(int i=0,a,b;i<n;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        mud[a][b]=true;\n    }\n    while(front<=rear)\n    {\n        node f=q[front++];\n        for(int i=0;i<4;i++)\n        {\n            int nx=f.x+dx[i],ny=f.y+dy[i];\n            if(nx<-500||ny<-500||nx>500||ny>500||mud[nx][ny])continue;\n            mud[nx][ny]=true;\n            q[++rear]=(node){nx,ny,f.step+1};\n            if(nx==ex&&ny==ey)\n            {\n                printf(\"%d\",q[rear].step);\n                return 0;\n            }\n        }\n    }\n    return 0;\n}\n```\n\n\u7136\u800c\uff0c$\\text{STL}$\u5e38\u6570\u592a\u5927\uff0c\u89e3\u51b3\u65b9\u6cd5\u6709\uff1a\n\n- \u5f00\u542f$\\text{O2}$\n\n- \u8bed\u8a00\u4f7f\u7528$\\text{C++17}$\n\n- \u548c$\\text{unordered\\_map}$\u4e92\u6362\n\n\u6ce8\uff1a$\\text{map}$\u548c$\\text{unordered\\_map}$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6781\u4e0d\u7a33\u5b9a\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e92\u6362\uff08\u4e0d\u7528\u4e07\u80fd\u5934\u6587\u4ef6\u7684\u8bdd\u8981\u6362\u5934\u6587\u4ef6\uff09\u3002\u4f46\u662f\u5728\u7ade\u8d5b\u4e2d\u5efa\u8bae\u4e0d\u8981\u5192\u8fd9\u4e48\u5927\u7684\u98ce\u9669\uff0c\u6700\u597d\u8fd8\u662f\u5c11\u7528$\\text{STL}$\u4e3a\u5999\u3002\n\n\u5bf9\u4e8e\u672c\u9898\u6765\u8bf4\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u8fd8\u662f\u628a\u6a2a\u7eb5\u5750\u6807\u5168\u90e8\u52a0\u4e0a$500$\uff0c\u5e76\u628a\u4e8c\u7ef4\u6570\u7ec4\u5f00\u5230$1000$\u4ee5\u4e0a\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e0b\u6765\uff0c$10$\u4e2a\u6d4b\u8bd5\u70b9\u7684\u8fd0\u884c\u65f6\u95f4\u53ef\u4ee5\u63a7\u5236\u5728$\\text{100ms}$\u4ee5\u5185\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u4e1c\u897f\u90fd\u6709\u5229\u6709\u5f0a\u2014\u2014$\\text{map}$\u867d\u8bf4\u65b9\u4fbf\u597d\u7528\uff0c\u4f46\u65f6\u95f4\u5e38\u6570\u662f\u5f88\u5927\u7684\u3002\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5408\u7406\u5e94\u7528\u624d\u662f\u6700\u5173\u952e\u7684\u3002",
        "postTime": 1593870042,
        "uid": 137367,
        "name": "hensier",
        "ccfLevel": 6,
        "title": "P2873 [USACO07DEC]Mud Puddles S \u9898\u89e3"
    },
    {
        "content": "\u55ef..\u60ca\u4e86 \u8fd9\u9053\u9898\u7adf\u7136\u53ea\u6709\u4e00\u9053\u9898\u89e3  \n\uff08\u4e2a\u4eba\u8ba4\u4e3a\u8be5\u9898\u89e3\u5df2\u7ecf\u5341\u5206\u6e05\u695a\uff09  \n\u4e0d\u8fc7\u8fd9\u4f4ddalao\u4ee3\u7801\u7684\u90e8\u5206\u7ec6\u8282\u5e76\u4e0d\u503c\u5f97\u5b66\u4e60  \n\u4e8e\u662f\u6211\u91cd\u65b0\u7801\u4e86\u4e00\u904d\u4ee3\u7801\uff08\u7b2c\u4e00\u6b21\u5fd8\u6807\u8bb0WA\u4e86\u662f\u771f\u7684\u60e8\uff09  \n\u4e2a\u4eba\u8ba4\u4e3a\u4ee3\u7801\u7f8e\u4e86\u4e0d\u5c11..\uff08\u6c42dalao\u522b\u5632\u7b11\uff09  \n\u56e0\u4e3a\u662f\u9053\u5f88\u5730\u9053\u7684\u5e7f\u641c \u8fd9\u91cc\u5c31\u4e0d\u5e26\u6ce8\u91ca\u4e86  \n\u795d\u798f\u5927\u5bb6 \u5207\u9898\u6109\u5feb\uff01\n```cpp\n//#define fre yes\n\n#include <queue>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int maxn = 1005;\nint Map[maxn][maxn];\n\nstruct Node{\n    int x,y,sum;\n};\n\nint sx,sy,ex,ey,n;\n\nint dx[] = { 0,0,1,-1 };\nint dy[] = { 1,-1,0,0 };\n\ntemplate<typename T>inline void read(T&x)\n{\n    x = 0;char c;int lenp = 1;\n    do { c = getchar();if(c == '-') lenp = -1; } while(!isdigit(c));\n    do { x = x * 10 + c - '0';c = getchar(); } while(isdigit(c));\n    x *= lenp;\n}\n\nbool legal(int x,int y)\n{\n    if(x >= 0 && y >=0 && x <= 1000 && y<=1000 ) return true;\n     return false;\n}\n\nint main()\n{\n    read(ex);read(ey);read(n);\n    for (int i=1;i<=n;i++)\n    {\n        int x,y;\n        read(x);read(y);\n        x += 500;\n        y += 500;\n        Map[x][y] = 1;\n    } \n\n    queue<Node> q;\n    q.push({500,500,0});\n    while(!q.empty())\n    {\n        Node x = q.front();q.pop();\n        for (int i=0;i<4;i++)\n        {\n            int nx = x.x + dx[i];\n            int ny = x.y + dy[i];\n            if(nx == ex+500 && ny == ey+500) { printf(\"%d\\n\",x.sum+1); return 0; }\n            if(legal(nx,ny) && Map[nx][ny] == 0)\n            {\n                Map[nx][ny] = 1;\n                q.push({nx,ny,x.sum+1});\n            }\n        }\n    } return 0;\n}\n```",
        "postTime": 1528889966,
        "uid": 89856,
        "name": "Steinway",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]\u6ce5\u6c34\u5751Mud Puddles\u3011"
    },
    {
        "content": "### \u8be6\u89e3\u8f93\u51fa\uff08\u4e00\u4e2a\u5c0f\u7684\u526a\u679d\uff09\n\n~~\u867d\u7136\u6ca1\u4ec0\u4e48\u5375\u7528~~\n\n\u9898\u89e3\u91cc\u5f88\u591a\u90fd\u662f\u7528\u7684\u66f4\u65b0\u7b54\u6848\u6cd5\uff0c\u6211\u6765\u8bb2\u4e00\u4e0b\u76f4\u63a5\u8f93\u51fa\u7684\n\n# \u539f\u7406\uff1aBFS \u7b2c\u4e00\u4e2a\u641c\u5230\u7684\u5c31\u662f\u6700\u4f18\u89e3\n\n\u4e3a\u4ec0\u4e48\u5462 \uff1f\n\n\u6211\u4eec\u90fd\u77e5\u9053\uff0cBFS\u7684\u6700\u663e\u8457\u7279\u70b9\u5c31\u662f\u961f\u5217\u8bb0\u5f55\uff0c\u6240\u4ee5\u4e0d\u4f1a\u50cfDFS\u90a3\u6837\u65e0\u6cd5\u79fb\u52a8\u624d\u56de\u6eaf\n\n\u6240\u4ee5\u56e0\u4e3aBFS\u662f\u201c\u4e00\u6b65\u4e00\u6b65\u8d70\u7684\u201d\n\n\u6240\u4ee5\u6700\u5148\u5230\u8fbe\u76ee\u6807\u70b9\u7684\u72b6\u6001\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u72b6\u6001\uff08\u5373\u8d70\u7684\u6b65\u6570\u6700\u5c11\u7684\u72b6\u6001\uff09\n\n\u6240\u4ee5\u627e\u5230\u5976\u725b\u4f4d\u7f6e\u65f6\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\n\n### \u53e6\u5916\u6211\u7528\u7684\u4e0d\u662f STL \u6240\u4ee5\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b ~~\u624b\u5199\u961f\u5217~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define s(x) scanf(\"%d\",&(x))\n#define p(x) printf(\"%d\\n\",(x))\n#define f(i,a,b) for(int (i)=(a);i<=(b);++i)\n#define ll long long \n#define INF 0x7777777f\n\nint n,ans=INF;\nbool map_t[10100][10100],vis[10100][10010];\nint endx,endy;\nint head=1,tail=1;\nint que[1010100][3];\nint go[4][2] ={{1,0},{0,1},{0,-1},{-1,0}};\n\nvoid input() {\n\ts(endx);s(endy);s(n);\n\tendx+=500;endy+=500;\n\tf(i,1,n) {\n\t\tint x,y;\n\t\ts(x);s(y);\n\t\tx+=500;\n\t\ty+=500;\n\t\tmap_t[x][y]=1;\n\t}\n\tque[head][0]=500;que[head][1]=500;que[head][2]=0;\n\tvis[500][500]=1;\n}\n\nbool can_bfs(int a,int b) {\n\tif(a>=0 and a<=1000 and b>=0 and b<=1000) return true;\n\treturn false;\n}\n\nvoid Bfs() {\n\twhile(head<=tail) {\n\t\tint now_x=que[head][0],now_y=que[head][1],sum=que[head][2];\n\t\thead++;\n\t\tf(i,0,3) {\n\t\t\tint tx=now_x+go[i][0],ty=now_y+go[i][1];\n\t\t\tif(tx==endx and ty==endy) {\n\t\t\t\tp(sum+1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(can_bfs(tx,ty)) {\n\t\t\t\tif(!map_t[tx][ty] and !vis[tx][ty]) {\n\t\t\t\t\t++tail;\n\t\t\t\t\tque[tail][0]=tx;que[tail][1]=ty;que[tail][2]=sum+1;\n\t\t\t\t\tvis[tx][ty]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid output() {\n\tBfs();\n\treturn;\n}\n\nint main() {\n\tinput();\n\toutput();\n\treturn 0;\n}\n```\n\n\n~~\u53c8 AC \u4e86\u4e00\u9053\u6c34\u9898~~",
        "postTime": 1571392215,
        "uid": 99430,
        "name": "Leaved_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]\u6ce5\u6c34\u5751Mud Puddles\u3011"
    },
    {
        "content": "# \u4e00\u9053BFS\uff0c\u5bbd\u641c\u9898\n## \u6ce8\u610f\u9898\u76ee\u6709\u4e2a\u5751\uff0c\u90a3\u5c31\u662fxi\uff0cyi\u4e3a\u8d1f\u6570\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u5148\u628a\u6240\u6709\u5750\u6807\u90fd\u52a0\u4e2a500\n### \u672c\u9898\u89e3\u4f5c\u4e3a\u6ca1\u6709\u7528STL\u7684\u611f\u5230\u975e\u5e382333\n```cpp\n#include<bits/stdc++.h>\n#define forup(i,a,b) for(i=a;i<=b;i++)\n#define fordown(i,a,b) for(i=a;i>=b;i--)\nusing namespace std;\nint x,y,N,a,b,road=0x7fffff;\nint mapp[1500][1500];\nbool vis[1500][1500],nt[1500][1500];//vis\u4e3a\u662f\u5426\u8bbf\u95ee\u8fc7\uff0cnt\u662f\u662f\u5426\u5b58\u5728\u6ce5\u6f6d\nint dx[5]={0,-1,0,1,0},\n    dy[5]={0,0,1,0,-1};\nvoid bfs(int nx,int ny)//nx\uff0cny\u4e3a\u73b0\u5728\u6240\u5728\u7684\u5750\u6807\n{\n    int i,j,k,sum=0;\n    int head=0,tail=1;\n    int tx,ty;\n    int h[2300000][3];\n    vis[nx][ny]=true;\n    h[1][1]=nx;h[1][2]=ny;h[1][0]=0;//h[][]\u4e3a\u961f\u5217\uff0ch[][0]\u5b58\u7684\u662f\u5f53\u524d\u7684\u89e3\n    while(head<=tail)//\u5f53\u961f\u5217\u4e0d\u4e3a\u7a7a\n    {\n        head++;\n        forup(i,1,4)\n        {\n            tx=h[head][1]+dx[i];ty=h[head][2]+dy[i];\n            if(tx==x&&ty==y)\n            {\n                road=min(road,h[head][0]+1);//\u66f4\u65b0\u6700\u4f18\u89e3\n                return;\n            }\n            if((tx>=0)&&(tx<=1000)&&(ty>=0)&&(ty<=1000)&&(nt[tx][ty]==false)&&(vis[tx][ty]==false))\n            {\n                tail++;\n                h[tail][0]=h[head][0]+1;\n                h[tail][1]=tx;\n                h[tail][2]=ty;\n                vis[tx][ty]=true;\n            }\n        }\n    }\n}\nint main()\n{\n    int i,j,k;\n    memset(vis,false,sizeof(vis));//\u521d\u59cb\u5316\n    memset(nt,false,sizeof(nt));\n    cin>>x>>y>>N;\n    x+=500;\n    y+=500;//\u4e00\u5b9a\u8981\u52a0500\n    forup(i,1,N)\n    {\n        cin>>a>>b;\n        nt[a+500][b+500]=true;\n    }\n    bfs(500,500);\n    cout<<road;\n    return 0;\n}\n```",
        "postTime": 1536273544,
        "uid": 73397,
        "name": "\u5543\u4e01\u72d7",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]\u6ce5\u6c34\u5751Mud Puddles\u3011"
    },
    {
        "content": "# \u6700\u77ed\u8def\uff08\u5e7f\u641c\uff09\u88f8\u9898\uff01\uff01\uff01\n\u8fd9\u9898\u5176\u5b9e\u6ca1\u5565\u597d\u8bb2\u7684\uff0c**\u76f4\u63a5\u5148\u7528\u4e00\u4e2abool\u6570\u7ec4\uff0c\u8bb0\u5f55\u4e00\u4e0b\u67d0\u4e2a\u70b9\u6709\u6ca1\u6709\u6ce5\u5858**\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u6700\u77ed\u8def\uff08\u5e7f\u641c\uff09\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\u56e0\u4e3a\u4f1a\u6709\u8d1f\u5750\u6807\uff0c\u6240\u4ee5\u6211\u628a\u6240\u6709\u7684\u5750\u6807\u90fd\u52a0\u4e86500\uff08\u5750\u6807\u4e0a\u9650\uff09\uff0c\u7136\u540e\u5c31\u4e0d\u4f1a\u6709\u7528\u6765\u8bb0\u5f55\u6709\u6ca1\u6709\u6ce5\u5858\u7684$b[i][j]$\u6709$i<0||j<0$\u7684\u60c5\u51b5\u5566\uff01\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<iostream>\n#include<cmath>\n \n#define N 3000\n \nusing namespace std;\n \nint x,y,n,ans;\nbool b[N][N],vis[N][N];\nint fx[4]={-1,0,1,0},fy[4]={0,1,0,-1};//\u4e0a\u4e0b\u5de6\u53f3\u7684x\u3001y\u5750\u6807\n\nstruct data{\n    int x,y,s;//x\uff0cy\u4e3a\u5750\u6807\uff0cs\u4e3a\u8d70\u4e86\u591a\u8fdc\n}now;\n \nqueue<data>q;\n \nbool right(int x,int y){//\u8003\u8651\u8fb9\u754c\n    if(x>=0&&x<=1000&&y>=0&&y<=1000){//\u770b\u6709\u6ca1\u6709\u51fa\u8fb9\n        return true;\n    }else{\n        return false;\n    }\n}\n \nvoid bfs(){\n    q.push((data){500,500,0});//\u628a\u5750\u6807\u52a0500\n    now.x=-1;\n    now.y=-1;\n    while(!q.empty()){\n        now=q.front();\n        q.pop();\n        if(now.s>ans){//\u526a\u679d\uff0c\u5982\u679c\u73b0\u5728\u8d70\u7684\u8def\u5df2\u7ecf\u6bd4\u7b54\u6848\u5927\uff0c\u90a3\u4e48\u5c31continue\uff1b\n            continue;\n        }\n        if(vis[now.x][now.y]){//\u5224\u65ad\u662f\u4e0d\u662f\u6ce5\u5858\u548c\u6709\u6ca1\u6709\u8d70\u8fc7\n            continue;\n        }\n        if(now.x==x&&now.y==y){//\u66f4\u65b0\u7b54\u6848ans\n            ans=min(ans,now.s);\n        }\n        vis[now.x][now.y]=true;//\u6807\u8bb0\u5df2\u8d70\u8fc7\n        for(int i=0;i<4;i++){//\u679a\u4e3e4\u4e2a\u65b9\u5411\n            int xi=now.x+fx[i];\n            int yi=now.y+fy[i];\n            if(right(xi,yi)&&!b[xi][yi]&&!vis[xi][yi]){//\u8bb0\u4f4f\uff01\u5224\u65ad\u8fb9\u754c\u95ee\u9898\u7684\u4e00\u5b9a\u8981\u653e\u5728\u6700\u524d\u9762\uff0c\u4e0d\u7136\u540e\u9762\u7684\u6570\u7ec4\u53ef\u80fd\u4f1a\u8bbf\u95ee\u975e\u6cd5\u5185\u5b58\u3002\n                q.push((data){xi,yi,now.s+1});\n            }\n        }\n    }\n}\n \nint main(){\n    ans=0x7fffffff;\n    scanf(\"%d%d%d\",&x,&y,&n);\n    x+=500;//\u628a\u5750\u6807\u52a0500\n    y+=500;//\u628a\u5750\u6807\u52a0500\n    for(int i=1;i<=n;i++){\n        int xi,yi;\n        scanf(\"%d%d\",&xi,&yi);\n        xi+=500;//\u628a\u5750\u6807\u52a0500\n        yi+=500;//\u628a\u5750\u6807\u52a0500\n        b[xi][yi]=true;//\u8bb0\u5f55\u6ce5\u5858\n    }\n    bfs();\n    printf(\"%d\\n\",ans);//\u8f93\u51fa\n    return 0;\n}\n```\n",
        "postTime": 1533811372,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]\u6ce5\u6c34\u5751Mud Puddles\u3011"
    },
    {
        "content": "#### \u5bbd\u641c\u5165\u95e8\u9898\n[P2873\u6ce5\u6c34\u5751](https://www.luogu.org/problemnew/show/P2873)\n####  \u9898\u610f\u8f6c\u8ff0\uff1a\n\u6e05\u65e96\uff1a00\uff0cFarmer John\u5c31\u79bb\u5f00\u4e86\u4ed6\u7684\u5c4b\u5b50\uff0c\u5f00\u59cb\u4e86\u4ed6\u7684\u4f8b\u884c\u5de5\u4f5c\uff1a\u4e3a\u8d1d\u831c\u6324\u5976\u3002\u524d\u4e00\u5929\u665a\u4e0a\uff0c\u6574\u4e2a\u519c\u573a\u521a\u7ecf\u53d7\u8fc7\u4e00\u573a\u74e2\u6cfc\u5927\u96e8\u7684\u6d17\u793c\uff0c\u4e8e\u662f\u4e0d\u96be\u60f3\u89c1\uff0cFJ \u73b0\u5728\u9762\u5bf9\u7684\u662f\u4e00\u5927\u7247\u6ce5\u6cde\u7684\u571f\u5730\u3002FJ\u7684\u5c4b\u5b50\u5728\u5e73\u9762\u5750\u6807(0, 0)\u7684\u4f4d\u7f6e\uff0c\u8d1d\u831c\u6240\u5728\u7684\u725b\u68da\u5219\u4f4d\u4e8e\u5750\u6807(X,Y) (-500 <= X <= 500; -500 <= Y <= 500)\u5904\u3002\u5f53\u7136\u54af\uff0c FJ\u4e5f\u770b\u5230\u4e86\u5730\u4e0a\u7684\u6240\u6709N(1 <= N <= 10,000)\u4e2a\u6ce5\u5858\uff0c\u7b2ci\u4e2a\u6ce5\u5858\u7684\u5750\u6807\u4e3a (A_i, B_i) (-500 <= A_i <= 500\uff1b-500 <= B_i <= 500)\u3002\u6bcf\u4e2a\u6ce5\u5858\u90fd\u53ea\u5360\u636e\u4e86\u5b83\u6240\u5728\u7684\u90a3\u4e2a\u683c\u5b50\u3002 Farmer John\u81ea\u7136\u4e0d\u613f\u610f\u5f04\u810f\u4ed6\u65b0\u4e70\u7684\u9774\u5b50\uff0c\u4f46\u4ed6\u540c\u65f6\u60f3**\u5c3d\u5feb**\u5230\u8fbe\u8d1d\u831c\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u4e3a\u4e86\u6570\u90a3\u4e9b\u8ba8\u538c\u7684\u6ce5\u5858\uff0c\u4ed6\u5df2\u7ecf\u803d\u6401\u4e86\u4e00\u4e9b\u65f6\u95f4\u4e86\u3002\u5982\u679cFarmer John \u53ea\u80fd\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u79fb\u52a8\uff0c\u5e76\u4e14\u53ea\u5728x\u3001y\u5747\u4e3a\u6574\u6570\u7684\u5750\u6807\u5904\u8f6c\u5f2f\uff0c\u90a3\u4e48\u4ed6\u4ece\u5c4b\u5b50\u95e8\u53e3\u51fa\u53d1\uff0c\u6700\u5c11\u8981\u8d70\u591a\u5c11\u8def\u624d\u80fd\u5230\u8d1d\u831c\u6240\u5728\u7684\u725b\u68da\u5462\uff1f\u4f60\u53ef\u4ee5\u8ba4\u4e3a\u4eceFJ\u7684\u5c4b\u5b50\u5230\u725b\u68da**\u603b\u662f\u5b58\u5728\u81f3\u5c11\u4e00\u6761\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u6ce5\u5858\u7684\u8def\u5f84**\u3002\n#### \u601d\u8def\uff1a\n  \u6839\u636e\u201c\u5c3d\u5feb\u201d\u4ee5\u53ca\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u60f3\u51fa\u7528BFS\u89e3\u7b54\u3002\u4f46\u5750\u6807\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u6545\u5c06\u6ce5\u5751\u5750\u6807\uff0c\u539f\u70b9\u5750\u6807\u548c\u7ec8\u70b9\u5750\u6807\u52a0500\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff1b\n  \n\u5c0f\u63d0\u9192\uff1a\n  1\uff1a\u6d1b\u8c37\u8bc4\u6d4b\u673a\u6700\u8fd1\u4e0d\u80fd\u6709move\uff0c\u7528```move[4][2]  ```\n\u6765\u79fb\u52a8\u7684\u8bf7\u6539\u4e3a``` mv[4][2]   ```\n \n  2:\u521d\u59cb\u5316\u65f6\u4e0d\u8981\u5fd8\u8bb0\u628a\u539f\u70b9\u5b9a\u4e49\u4e3a500,500,0,~~\uff08\u6211\u56e0\u6b64WA\u4e86\u4e00\u6b21\uff09~~\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int x;\n    int y;\n    int step;\n};//\u7ed3\u6784\u4f53\uff0c\u7528\u4e8e\u50a8\u5b58\nint mv[4][2]={{1,0},{-1,0},{0,-1},{0,1}};//\u79fb\u52a8\u65b9\u5411\nint n,nx,ny;\nbool mark[1010][1010]={false},vis[1010][1010]={false};//mark\u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u6ce5\u5751\u4f4d\u7f6e\uff0cvis\u7528\u4e8e\u8bb0\u5f55\u662f\u5426\u8d70\u8fc7\u8fd9\u4e2a\u70b9\nint BFS()//\u5e7f\u641c\n{\n    int i,j;\n    node a,b,c;\n    a.x=500;\n    a.y=500;\n    a.step=0;//\u539f\u70b9\u521d\u59cb\u5316\n    queue<node>que;//\u5b9a\u4e49\u961f\u5217\uff0c\u8c8c\u4f3c\u53ef\u4ee5\u7528\u6570\u7ec4\u6a21\u62df\n    que.push(a);//\u5c06\u539f\u70b9\u538b\u5165\u961f\u5217\n    while(!que.empty())\n    {\n     b=que.front();\n     que.pop();//\u53d6\u51fa\u539f\u70b9\n     if(vis[b.x][b.y])\n      continue;//\u5f53\u8fd9\u4e2a\u70b9\u8d70\u8fc7\u65f6\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u6b21\u5bfb\u627e\uff0c\u56e0\u4e3a\u8981\u627e\u6700\u77ed\u8def\u5f84\n     if(b.x==nx+500 && b.y==ny+500)\n      return b.step;//\u5f53\u5230\u8fbe\u7ec8\u70b9\u65f6\u7ed3\u675f\u5faa\u73af\uff0c\u5e76\u5c06\u6b65\u6570\u8fd4\u56de\u81f3\u4e3b\u51fd\u6570\n     vis[b.x][b.y]=true;//\u6807\u8bb0\u8fd9\u4e2a\u70b9\n     for(i=0;i<4;i++)\n     {\n      c.x=b.x+mv[i][0];\n      c.y=b.y+mv[i][1];//\u5bfb\u627e\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5176\u5b9e\u4e0b\u9762\u7684c.step\u4e00\u53e5\u53ef\u4ee5\u653e\u5230\u8fd9\u91cc\n      if(c.x>=0 && c.x<=1000 && c.y>=0 && c.y<=1000 && !mark[c.x][c.y])\n      {\n       c.step=b.step+1;\n       que.push(c);\n      }//\u5224\u65ad\u6269\u5c55\u7684\u70b9\u662f\u5426\u5728\u8fb9\u754c\u5185\uff0c\u82e5\u662f\uff0c\u5219\u5c06\u5176\u538b\u5165\u961f\u5217\n     }\n    }\n}\nint main()\n{\n    int i,x,y;\n    cin>>nx>>ny>>n;//\u8f93\u5165\u539f\u70b9\u5750\u6807\u53ca\u6ce5\u5751\u4e2a\u6570\n    for(i=1;i<=n;i++)\n    {\n     cin>>x>>y;\n     mark[x+500][y+500]=true;\n    }//\u9884\u5904\u7406\n    printf(\"%d\\n\",BFS());//\u8c03\u7528BFS\u51fd\u6570\u5e76\u8f93\u51fa\n    return 0;\n}\n```\n",
        "postTime": 1562678062,
        "uid": 79072,
        "name": "hylong",
        "ccfLevel": 0,
        "title": "P2873\u6ce5\u6c34\u5751"
    },
    {
        "content": "**\u4e00\u9053\u5f88\u666e\u901a\u7684\u5e7f\u641c\u9898**\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2873)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.luogu.com.cn/blog/5y2d1n/solution-p2873)\n\n------------\n### STEP 1 \u5ba1\u9898&&\u63d0\u53d6\u6761\u4ef6\n\n1.\u7ed9\u4f60\u4e00\u5f20\u5730\u56fe\uff08\u867d\u7136\u6ca1\u6709\u8fb9\u754c\uff09\uff1b\n\n2.\u5df2\u77e5\u8d77\u59cb\u70b9$(0,0)$\u548c\u7ec8\u6b62\u70b9$(x,y)$\uff1b\n\n3.\u5730\u56fe\u4e0a\u6709$n$\u4e2a\u70b9\u4e0d\u80fd\u8d70\uff1b\n\n4.\u6c42\u6700\u77ed\u884c\u8d70\u8ddd\u79bb\n\n\n------------\n### STEP 2 \u5206\u6790\u9898\u610f&&\u63d0\u70bc\u65b9\u6cd5\n\n- \u6709\u8d77\u59cb\u70b9~\u6709\u7ec8\u6b62\u70b9~\u6709\u5730\u56fe~\u8fd8\u8ba9\u6c42\u6700\u77ed\u884c\u8d70\u8ddd\u79bb\u2014\u2014**\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22**\u65e0\u7591\u554a\uff01\n\n- \u6240\u4ee5\u6211\u4eec\u8981\u6784\u9020\u961f\u5217\uff0c\u5e76\u4e14\u7528\u4e00\u4e2a$visit$\u6570\u7ec4\u8bb0\u5f55\u662f\u5426\u8d70\u8fc7\u8be5\u70b9\uff0c\u7528\u4e00\u4e2a$ans$\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u7136\u540e\u7528\u5e7f\u641c\u7684\u7ecf\u5178\u505a\u6cd5\u5c31\u597d\u5566\uff08\u7a0d\u540e\u4f1a\u6709\u8be6\u7ec6\u4ee3\u7801\u53ca\u6ce8\u91ca\uff09\n\n- \u4f46\u662f\u8fd9\u4e2a\u5730\u56fe**\u6ca1\u6709\u8fb9\u754c**\u554a\uff1f\u6ca1\u5173\u7cfb\uff0c\u81ea\u5df1\u9020\u4e00\u4e2a\u8db3\u591f\u5927\u4f46\u53c8\u4e0d\u662f\u7279\u522b\u5927\u7684\u8303\u56f4\u5c31\u597d\u5566\uff08\u5f53\u7136\u5e94\u8be5\u53ef\u4ee5\u4e0d\u7ba1\u8fb9\u754c\uff0c\u4e0d\u8fc7\u4e3a\u4e86\u4f53\u73b0\u4e00\u822c\u6027\uff0c\u8fd8\u662f\u8bbe\u4e2a\u8fb9\u754c\u5427\uff09\n\n- \u600e\u4e48\u5904\u7406**\u8d1f\u6570\u4e0b\u6807**\u5462\uff1f\u89c2\u5bdf\u9898\u76ee\u6570\u636e\u8303\u56f4\u53ef\u77e5\uff0c\u6bcf\u4e2a\u70b9\u90fd\u5728$-500$~$500$\u4e4b\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u4ee5\u7684\u70b9\u7684\u5750\u6807\u90fd\u52a0\u4e0a1000\uff0c\u53d6\u76f8\u5bf9\u4f4d\u7f6e\u5c31\u597d\u5566\n\n\n------------\n### STEP 3 AC\u4ee3\u7801\u53ca\u5b8c\u6574\u6ce8\u91ca\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint x,y,n,ma[2000][2000],v[2000][2000],ans[2000][2000];//x,y,n\u5982\u9898\uff0cma\u4e3a\u8be5\u70b9\u662f\u5426\u53ef\u4ee5\u8d70\uff08\u53ef\u4ee5\u5f00\u6210bool\uff09\uff0cv,ans\u5982\u4e0a\u6240\u8ff0\nint dx[4]={0,0,-1,1};\nint dy[4]={1,-1,0,0};//\u79fb\u52a8\u6570\u7ec4\uff0c\u6bcf\u4e2a\u4e0b\u6807\u76f8\u5bf9\u5e94\uff0c\u4ee3\u8868\u56db\u4e2a\u65b9\u5411\nstruct node{\n\tint x,y;\n};//\u6bcf\u4e2a\u70b9\u7684\u7ed3\u6784\u4f53\nqueue <node> q;//\u7ed3\u6784\u4f53\u961f\u5217\nint main(){\n    scanf(\"%d %d %d\",&x,&y,&n);//\u8f93\u5165\n    x+=1000,y+=1000;//\u5904\u7406\n    while (n--){//\u8f93\u5165\u4e0d\u80fd\u8d70\u7684\u70b9\n    \tint x1,y1;\n\t\tscanf(\"%d %d\",&x1,&y1);\n\t\tma[x1+1000][y1+1000]=1;//\u6807\u8bb0\t\n\t}\n\tnode s;\n\ts.x=1000;s.y=1000;\n\tq.push(s);//\u653e\u5165\u521d\u59cb\u70b9\n\tv[1000][1000]=1;//\u6807\u8bb0\n\twhile (!q.empty()){//\u961f\u5217\u4e0d\u4e3a\u7a7a\u65f6\n\t\tnode w=q.front();//\u53d6\u51fa\u9996\u4f4d\n\t\tq.pop();//\u5220\u9664\n\t\tint s=ans[w.x][w.y]+1;//\u8be5\u53d8\u91cf\u4e3a\u6b64\u6b21\u5faa\u73af\u65f6\u6240\u8981\u6807\u8bb0\u7684\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n\t\tif (w.x==x&&w.y==y){\n\t\t\tprintf(\"%d\\n\",s-1);//\u7b26\u5408\u6761\u4ef6\u5373\u8f93\u51fa\n\t\t\treturn 0;\n\t\t}\n\t\tfor (int i=0;i<4;i++){//\u56db\u4e2a\u65b9\u5411\n\t\t\tnode ww;\n\t\t\tww.x=w.x+dx[i],ww.y=w.y+dy[i];//\u4e0b\u4e00\u4e2a\u70b9\n\t\t\tif (ww.x>=0&&ww.x<=2000&&ww.y>=0&&ww.y<=2000&&v[ww.x][ww.y]==0&&ma[ww.x][ww.y]==0){//\u5728\u8303\u56f4\u5185\u5e76\u4e14\u8be5\u70b9\u6ca1\u6709\u8d70\u8fc7\u800c\u4e14\u53ef\u4ee5\u8d70\n\t\t\t\tq.push(ww);//\u653e\u5165\u8be5\u70b9\n\t\t\t\tv[ww.x][ww.y]=1;//\u6807\u8bb0\n\t\t\t\tans[ww.x][ww.y]=s;//\u8bb0\u5f55\n\t\t\t}\n\t\t}\n\t}\n    return 0;//\u867d\u7136\u6211\u76f8\u4fe1\u5b83\u8fd0\u884c\u4e0d\u5230\u8fd9\u91cc\u2026\u2026\n}\n```\n\n\n------------\n### STEP 4 \u5b8c\u7ed3\u6492\u82b1\uff01\n\n\u672c\u6b21\u9898\u89e3\u5c31\u8fd9\u4e48\u6109\u5feb\u5730\u7ed3\u675f\u5566\uff01\u5982\u679c\u8fd8\u6709\u4ec0\u4e48\u4e0d\u61c2\u7684\u95ee\u9898\uff0c\u8bc4\u8bba\u533a\u606d\u5019\u60a8\u7684\u5230\u6765\uff01\u6211\u4f1a\u7b2c\u4e00\u65f6\u95f4\u56de\u590d\u54d2\uff01\n\n\u5982\u679c\u90fd\u770b\u61c2\u4e86\uff0c\u5c31\u70b9\u4e2a\u8d5e\u7eaa\u5ff5\u4e00\u4e0b\u4f60\u7684\u6210\u957f\u5427\uff01\n",
        "postTime": 1586959201,
        "uid": 257621,
        "name": "\u7ffc\u5fb7\u5929\u5c0a",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]Mud Puddles S\u3011"
    },
    {
        "content": "\n## BFS\u88f8\u9898\n~~\u8003\u8bd5T2 \u6253\u4e86\u4e2aDFS\u4e4b\u540e\u53d1\u73b0\u662fBFS \u7136\u540e\u6ca1\u65f6\u95f4WA\u4e86.~~\n\n# \u9898\u76ee\u6709\u5751,xi,yi\u4e3a\u8d1f\u6570\u7684\u65f6\u5019,\u5e94\u8be5\u5148\u628a\u6240\u6709\u5750\u6807\u90fd\u52a0\u4e2a500.\n\n~~\u6b64\u5916\u672c\u9898\u5c31\u5f88\u6c34\u4e86.~~\n\nCode \uff1a\n\n```\n/*\n\u4e07\u6076\u7684USACO.\n\u719f\u6089\u7684 FJ (Farmer John) and \u8d1d\u831c. \nBFS \u641c\u7d22. \n*/\n#include <bits/stdc++.h>  \n\n#define ll long long\n\nusing namespace std;\n\nstruct node{\n    int x,y,sum;\n};\n\ninline int read() {\n    int x = 0,f = 1;\n    char c = getchar();\n    while(c < '0' || c > '9'){\n        if(c == '-')\n        f = -1;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9'){\n        x = (x << 1) + (x << 3) + (c ^ 48);\n        c = getchar();\n    }\n    return x * f;\n} \n\nconst int maxn = 1005;\nint ma [maxn][maxn];\nint sx,sy,ex,ey,n;\nint dx[] = {0,0,1,-1};\nint dy[] = {1,-1,0,0};\n\nbool check (int x,int y) {\n    if(x >= 0 and y >= 0 and x <= 1000 and y <= 1000 ) return true;\n    return false;\n}\n\nvoid bfs () {\n\tqueue <node> q;\n    q.push ({500,500,0});\n    while (!q.empty ()) {\n        node x = q.front (); q.pop ();\n        for (int i = 0; i < 4; ++ i) {\n            int nx = x.x + dx [i];\n            int ny = x.y + dy [i];\n            if (nx == ex + 500 and ny == ey + 500) { \n\t\t\t    printf (\"%d\\n\",x.sum + 1);\n\t\t\t    return ;//\u5fc5\u987b\u56de\u6eaf,\u4e0d\u7136WA\u4e5d\u4e2a. \n\t\t\t}\n            if (check (nx,ny) and ma [nx][ny] == 0) {\n                ma [nx][ny] = 1;\n                q.push ({nx,ny,x.sum + 1});\n            }\n        }\n    }\n}\n\nint main() {\n//\tfreopen (\"crossml.in\",\"r\",stdin);\n//\tfreopen (\"crossml.out\",\"w\",stdout);\n\tex = read (); ey = read (); n = read ();\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tint x,y;\n\t\tx = read (); y = read ();\n\t\tx += 500;\n        y += 500;\n        ma [x][y] = 1;\n\t}\n\tbfs ();\n\tfclose (stdin);\n\tfclose (stdout);\n\treturn 0;\n}\n/*\n4   .  .  .  .  .  .  .  .\n3   .  M  .  .  .  .  .  .\n2   .  .  M  B  M  .  M  .\n1   .  M  .  M  .  M  .  .\n0   .  .  *  .  .  .  .  .\n-1  .  .  .  .  .  .  .  .\nYX -2 -1  0  1  2  3  4  5\n*/\n```\n",
        "postTime": 1571657080,
        "uid": 123198,
        "name": "Pheasant_YQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]\u6ce5\u6c34\u5751Mud Puddles\u3011"
    },
    {
        "content": "\u8fd9\u9898\u9898\u89e3\u597d\u50cf\u4e0d\u591a\uff0c\u849f\u84bb\u6765\u6c34\u4e00\u53d1\u3002\n\n\u6b64\u9898\u53ef\u4ee5\u76f4\u63a5\u7528BFS\u505a\uff0c\u53ea\u662f\u8981\u6ce8\u610f\u51e0\u4e2a\u5730\u65b9\uff1a\n\n\u6211\u4eec\u8bbef[i,j]\u8868\u793a\u8d70\u5230(i,j)\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c0f\u6b65\u6570\u3002\n\n1.\u5148\u628a\u6240\u6709\u70b9\u8bbe\u6210maxlongint/2.\n\n2.\u8d77\u70b9f[0,0]=0\u3002\n\n3.\u6ce5\u6f6d\u6240\u5728\u4f4d\u7f6ef[x,y]\u76f4\u63a5\u8bbe\u6210-1\uff0c\u8868\u793a\u4e3a\u4e0d\u53ef\u80fd\u8d70\u5230\u3002\n\n4.\u5f53\u6211\u4eecBFS\u65f6\u53d1\u73b0\u7b2c\u4e8c\u6b21\u8d70\u5230\u8fd9\u4e2a\u70b9\uff0c\u4f46\u662f\u6b65\u6570\u6bd4\u7b2c\u4e00\u6b21\u5c11\u65f6\uff0c\u4ecd\u7136\u52a0\u5165\u961f\u5217\uff0c\u5e76\u4e14\u628a\u8fd9\u4e2a\u70b9\u7684\u6b65\u6570\u66f4\u65b0\uff0c\u5426\u5219\u4e0d\u52a0\u3002\n\n5.C++\u515a\u7684\u8d1f\u6570\u95ee\u9898\u5728PASCAL\u8fd9\u91cc\u4e0d\u5b58\u5728\u3002\n\n\u4e0aAC\u4ee3\u7801\uff1a\n\n```pascal\nconst e:array[1..4,1..2] of longint=((-1,0),(1,0),(0,-1),(0,1));\nvar a,b:array[0..2000000] of longint;\nf:array[-502..502,-502..502] of longint;\ni,n,x,y,x1,y1,t,w:longint;\nbegin\nreadln(x,y,n);\nfillchar(f,sizeof(f),63);    //\u5148\u628a\u6240\u6709\u70b9\u8bbe\u6210maxlongint/2.\nfor i:=1 to n do\n  begin\n  readln(x1,y1);\n  f[x1,y1]:=-1;  //\u8bfb\u5165\u6ce5\u6f6d\u4f4d\u7f6e\u5e76\u628a\u5b83\u8bbe\u6210\u4e0d\u53ef\u80fd\u8d70\u5230\uff0c\u56e0\u4e3a\u6b65\u6570\u662f\u975e\u8d1f\u7684\n  end;\nt:=1;w:=1;a[1]:=0;b[1]:=0;f[0,0]:=0;  //BFS\u521d\u59cb\u5316\nwhile t<=w do\n  begin\n  for i:=1 to 4 do\n    begin\n    x1:=a[t]+e[i,1];y1:=b[t]+e[i,2];       //\u56db\u4e2a\u65b9\u5411\u6269\u5c55\n    if (x1>=-501) and (x1<=501) and (y1>=-501) and (y1<=501) and (f[a[t],b[t]]+1<f[x1,y1]) then    //\u6ca1\u6709\u8d8a\u754c\u5e76\u4e14\u5f53\u524d\u6b65\u6570\u66f4\u5c11\n      begin\n      f[x1,y1]:=f[a[t],b[t]]+1;   //\u628a\u8fd9\u4e2a\u70b9\u7684\u6b65\u6570\u66f4\u65b0\n      w:=w+1;a[w]:=x1;b[w]:=y1;   //\u52a0\u5165\u961f\u5217\n      end;\n    end;\n  t:=t+1;\n  end;\nwriteln(f[x,y]);            //\u8f93\u51fa\u6b65\u6570\nend.\n```\n",
        "postTime": 1565611399,
        "uid": 70917,
        "name": "\u76ae\u5361\u4e18\u6700\u840c",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]\u6ce5\u6c34\u5751Mud Puddles\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u88f8\u7684\u5e7f\u641c\u9898\uff0c\u53ea\u662f\u8981\u5904\u7406\u4e0b\u6807\u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\u5c31\u597d\u4e86\uff0c\u5168\u90e8\u52a0500\u3002\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define REP(i,a,b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++i)\ninline int read()\n{\n    char c = getchar();register int fg = 1, sum = 0;\n    while(c > '9' || c < '0')\n    {\n        if(c == '-')fg = -1;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9')\n    {\n        sum = sum * 10 + c - '0';\n        c = getchar();\n    }\n    return fg * sum;\n}\nconst int maxn = 1000+10; \nint sx,sy,n;\nstruct T\n{\n    int x,y,step;\n};\nqueue<T>q;\nbool p[1010][1010];\nint mo[4][2] = {{1,0},{-1,0},{0,1},{0,-1}},a[2010][2010];\nint main()\n{\n    int mx = 0x3f3f3f3f,my = 0x3f3f3f3f;\n    sx = read(), sy = read(), n = read();\n    sx+=500,sy+=500;\n    REP(i,1,n)\n    {\n        int A,B;\n        A = read();\n        B = read();\n        p[A+500][B+500] = 1;\n    }\n    q.push((T){500,500,0});\n    int flag = 0;\n    p[500][500] = 1;\n    while(!q.empty())\n    {\n        T u = q.front();\n        q.pop();\n        REP(i,0,3)\n        {\n            int tx = u.x+mo[i][0];\n            int ty = u.y+mo[i][1];\n            if(tx < 0 || ty < 0 || p[tx][ty]) continue;\n            T ls;\n            p[tx][ty] = 1;\n            ls.x = tx, ls.y = ty ,ls.step = u.step+1;\n            q.push(ls);\n            if(tx == sx && ty == sy){\n                T ls = q.back();\n                printf(\"%d\\n\",ls.step);\n                flag = 1;\n                break;\n            }\n        }\n        if(flag)break;\n    }\n}\n```",
        "postTime": 1488112911,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2873 \u3010[USACO07DEC]\u6ce5\u6c34\u5751Mud Puddles\u3011"
    }
]