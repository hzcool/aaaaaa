[
    {
        "content": "\u54c7\uff0c\u849f\u84bb\u53c8\u6765\u4e00\u53d1\u9547\u697c\u7684\u9898\u89e3\u5566\uff01\n\n\u53cd\u6b63\u849f\u84bb\u6ca1\u63a8\u51fadp\u5f0f\u5b50\uff0c\u4f46\u662f\u628a\u4e0d\u7b49\u5f0f\u5316\u4e00\u5316\uff0c\u7136\u540e\u5f04\u4e2a\u6392\u5e8f\u66b4\u529b\u6a21\u62df\u5747\u644aN^2\u7684\u6548\u7387\u8dd1\u8fc7\u53bb\u4e86\u3002\n\n\u7b80\u5355\u7684\u8bb2\u4e00\u4ef6\u600e\u4e48\u641e\u5427\u3002\n\n\u9996\u5148\u6839\u636e\u9898\u610f\uff1ac1\\*(ai-a0)+c2\\*(bi-b0)<=c3\n\n---->c1\\*ai+c2\\*bi-c3<=c1\\*a0+c2\\*b0\n\n\u663e\u7136\uff0c\u4e0d\u7b49\u5f0f\u7684\u5de6\u8fb9\u662f\u5173\u4e8ei\u7684\u4e00\u4e2a\u5e38\u6570\uff0c\u5f04\u4e2a\u6570\u7ec4d\u5148\u4fdd\u5b58\u597d\u3002\u7136\u540e\u6211\u4eec\u6765\u770b\u770b\u600e\u4e48\u5904\u7406\u53f3\u8fb9\u3002\n\n\u6211\u4eec\u5e38\u89c4\u7684\u601d\u8def\u5c31\u662f\uff1a\u679a\u4e3ea0,b0(n^2),\u7136\u540e\u518d\u66b4\u529b\u7edf\u8ba1\u4e00\u4e0b(n)\uff0c\u603b\u7684O(n^3)\uff0c\u6211\u4eec\u501f\u9274\u4e00\u4e0b\u5355\u8c03\u961f\u5217\u4f18\u5316dp\u7684\u601d\u8def\uff0c\u8003\u8651\u76f4\u63a5\u679a\u4e3ea0\uff0c\u4f46\u662f\u628ab0\u6392\u5e8f\u597d\uff0c\u7136\u540e\u6309\u67d0\u79cd\u65b9\u5f0f\u7edf\u8ba1\uff0c\u770b\u770b\u80fd\u5426\u63d0\u9ad8\u6548\u7387\u3002\n\n\u5148\u4ece\u7406\u8bba\u4e0a\u5206\u6790\u662f\u5426\u6709\u63d0\u9ad8\u7684\u53ef\u80fd\u6027\uff1a\u9996\u5148d\u6570\u7ec4\u5fc5\u987b\u8981\u6392\u5e8f\uff0c\u7531\u4e8ed\u6570\u7ec4\u7684\u5355\u8c03\u4e0d\u4e0b\u964d\u6027\uff0c\u6240\u4ee5b0\u679a\u4e3e\u5982\u679c\u662f\u6709\u5e8f\u7684\uff0c\u90a3\u4e48\u662f\u53ef\u4ee5\u8282\u7701\u4e00\u4e9b\u65f6\u95f4\u7684\uff01\n\n\u518d\u6765\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u600e\u4e48\u6765\u4f18\u5316\uff1a\u6211\u4eec\u5148\u4e00\u5c42\u5faa\u73af\u679a\u4e3ea0\uff0c\u7136\u540e\u4e00\u5c42\u5faa\u73af\u679a\u4e3eb0\uff0c\u7136\u540e\u4e00\u5c42\u5faa\u73af\u5728d\u6570\u7ec4\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u679a\u4e3e\u5230\u4e00\u4e2aa0[i],b0[j],\u5f53\u679a\u4e3e\u5230d[k]\u65f6\uff0c\u4e0d\u7b49\u5f0f\u4e0d\u6210\u7acb\u4e86\uff0c\u90a3\u4e48\u53e6\u4e00\u53e5\u8bdd\u5c31\u662f\u4ece1...k-1\u4e0d\u7b49\u5f0f\u90fd\u662f\u6210\u7acb\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8ba1\u7b97b0[j+1]\u7684\u7ed3\u679c\u65f6\uff0c\u53ea\u6709\u5728\u539fb\u6570\u7ec4\u4e2d1....k-1\u4e2d\u5927\u4e8eb0[j+1]\u7684\u6570\u5b57\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u7136\u540e\u76f4\u63a5\u4ecek\u5230n\u7ee7\u7eed\u5224\u65add[k]\u662f\u5426\u80fd\u4f7f\u4e0d\u7b49\u5f0f\u6210\u7acb\u5c31\u884c\u4e86\uff0c\n\n\u8fd9\u65f6\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c\u5355\u8c03\u961f\u5217\u4f18\u5316dp\u7684\u8fc7\u7a0b\u4e86\uff01\n\n\u5148\u7ed9\u4e00\u6bb5\u4f2a\u4ee3\u7801\uff1a\n\nfor i=1 to n\n\n    for j=1 to n\n\n      for k=k to n\n\n\u7b2c\u4e09\u5c42\u5faa\u73af\u7684k\u662f\u4e0d\u4e0b\u964d\u7684\uff0c\u6240\u4ee5\u6700\u591a\u53ea\u4f1a\u5728j\u7684\u5faa\u73af\u4e0b\u679a\u4e3en\u6b21\uff08\u5747\u644a\u610f\u4e49\uff09\uff0c\u6240\u4ee5\u603b\u7684\u5c31\u662fO(n\\*n)\u7684\u4e86\uff01\n\n\u90a3\u4e48\u5982\u4f55\u7ef4\u62a4\u4e00\u4e0b1....k-1\u4e2d\u5927\u4e8e\u67d0\u4e2a\u6570\u7684\u6570\u5b57\u4e2a\u6570\u5462\uff1f\n\n\u60f3\u5230\u9006\u5e8f\u5bf9\u6ca1\u6709\uff1f\u5bf9\u5440\uff0c\u6811\u72b6\u6570\u7ec4\u4e0d\u5c31\u597d\u4e86\uff1f\n\n\u4e0d\u8fc7\u66f4\u5de7\u5999\u7684\uff0c\u7531\u4e8e\u6211\u4eec\u8fd9\u91cc\u6709\u4e86\u4e00\u5c42\u5faa\u73af\uff0c\u5e76\u4e14b0\u7684\u679a\u4e3e\u662f\u6709\u5e8f\u7684\uff0c\u6211\u4eec\u76f4\u63a5\u5f00\u4e2a\u6876\uff0c\u7d2f\u8ba1\u6bcf\u4e2a\u6570\u5b57\u4f7f\u7528\u7684\u6b21\u6570\uff0c\u7136\u540e\u7d2f\u52a0\u65f6\u628a\u5c0f\u4e8e\u5f53\u524d\u6570\u5b57\u6876\u4e2d\u7684\u5168\u51cf\u6389\uff0c\u7136\u540e\u628a\u90a3\u4e2a\u6570\u5b57\u7684\u6876\u6e05\u7a7a\uff0c\u9632\u6b62\u91cd\u590d\u51cf\u5c31\u884c\u4e86\uff01\n\n\u5f53\u7136\uff0c\u60f3\u4e0d\u5230\u6876\u7684\u505a\u6cd5\u4e5f\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0c\u6bd5\u7adfn\u53ea\u67092000\uff0c\u7528\u6811\u72b6\u6570\u7ec4logn=11\uff0c\u90a3\u4e48\u5c31\u662f2000\\*2000\\*11=4.4\\*10^7\u3002\u8fd8\u662f\u53ef\u4ee5\u8fc7\u7684\u54df\n\n(\uff3e\uff35\uff3e)\u30ce~\uff39\uff2f\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=2010;\nstruct Pear{\n    int v,idx;\n    bool operator < (const Pear &rhs) const{\n        return v<rhs.v;\n    }\n    Pear(int v=0,int idx=0):v(v),idx(idx){}\n}c[N],d[N];\nint a[N],b[N],sum[N];\nint n,c1,c2,c3;\nint main(){\n    scanf(\"%d%d%d%d\",&n,&c1,&c2,&c3);\n    //c1*(ai-a0)+c2*(bi-b0)<=c3\n    //c1*ai+c2*bi-c3<=c1*a0+c2*b0\n    for (int i=1;i<=n;i++){\n        scanf(\"%d%d\",&a[i],&b[i]);\n        c[i]=Pear(b[i],i);\n        d[i]=Pear(a[i]*c1+b[i]*c2-c3,i);\n    }\n    sort(c+1,c+n+1);sort(d+1,d+n+1);\n    int res=0;\n    for (int i=1,ans=0;i<=n;i++,ans=0){\n        memset(sum,0,sizeof(sum));\n        for (int j=1,k=0;j<=n;j++){\n            for (;k<=n && d[k].v<=c1*a[i]+c2*c[j].v;k++){\n                if (a[d[k].idx]>=a[i] && b[d[k].idx]>=c[j].v){\n                    ans++;\n                    sum[b[d[k].idx]]++;\n                }\n            }\n            ans-=sum[c[j-1].v];\n            sum[c[j-1].v]=0;\n            res=max(res,ans);\n        }\n    }\n    printf(\"%d\",res);\n    return 0;\n}\n\n```",
        "postTime": 1504929458,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1493 \u3010\u5206\u68a8\u5b50 \u3011"
    },
    {
        "content": "# \u9898\u610f\n $n$ \u4e2a\u68a8\u5b50\uff0c\u6bcf\u4e2a\u68a8\u5b50\u6709\u4e24\u4e2a\u53c2\u6570 $a_{i},b_{i}$ \uff0c\u7ed9\u51fa\u4e09\u4e2a\u53c2\u6570 $ c_{1},c_{2},c_{3}$ \uff0c\u9009\u62e9\u82e5\u5e72\u4e2a\u68a8\u5b50\u4f7f\u5f97\u5bf9\u4e8e\u9009\u62e9\u7684\u6bcf\u4e2a\u68a8\u5b50 $i$ \u90fd\u6ee1\u8db3\n \n $$ c_{1} (a_{i}-a_{0})+c_{2} (b_{i}-b_{0}) \\le c_{3} $$\n \u5176\u4e2d $a_{0},b_{0}$ \u662f\u6240\u6709\u9009\u62e9\u7684\u68a8\u5b50\u4e2d\u7684\u6700\u5c0f\u7684 $a  /\\  b$\u3002\n \n\n # \u60f3\u6cd5\n \n \u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a $\\ O( n^{2} \\log n \\ )$ \u7684\u505a\u6cd5\uff0c\u4e0d\u662f\u5f88\u4f18\u79c0\uff0c\u4f46\u662f\u597d\u60f3\u3002\n \n  \u9996\u5148\u662f\u5c06\u516c\u5f0f\u79fb\u9879\uff0c\u8bb2\u5df2\u77e5\u7684\u653e\u5230\u4e00\u8fb9\uff0c\u5f97\uff1a\n  $$ c_{1} \\times a_{i}+c_{2}\\times b_{i} \\le c_{3}+c_{2} \\times b_{0}+c_{1} \\times a_{0}  $$\n  \n  \u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u4f1a\u53d1\u73b0\u53ea\u8981\u6240\u9009\u51fa\u7684 $\\ a_{i},b_{i} \\ $ \u7684\u6700\u5c0f\u503c\u786e\u5b9a\u4e86\uff0c\u53f3\u8fb9\u5c31\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e3a\u53d9\u8ff0\u65b9\u4fbf\u8bb0\u8fd9\u4e2a\u6570\u4e3a $k$\u3002\u95ee\u9898\u4e5f\u5c31\u53d8\u6210\u4e86\u6c42\u7ed9\u51fa\u9898\u76ee\u4e2d\u6ee1\u8db3\u5c0f\u4e8e\u67d0\u5b9a\u503c\u7684\u6570\u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651 \u679a\u4e3e\u6700\u5c0f\u503c $a_{0},b_{0}$ \uff0c\u518d\u53bb\u4e00\u4e00\u68c0\u67e5\u6570\u5217\u4e2d\u6ee1\u8db3 $a_{i} \\ge a_{0} \\wedge b_{i} \\ge b_{0} \\wedge c_{1}\\times a_{i}+c_{2}\\times b_{i} \\le k $ \u7684\u6570\u7684\u4e2a\u6570\uff0c\u590d\u6742\u5ea6\u663e\u7136\u662f $O(n^{3})$ \uff0c\u4e0d\u80fd\u63a5\u53d7\uff0c\u8003\u8651\u4f18\u5316\u3002\n  \n \u9996\u5148\u4f18\u5316\u679a\u4e3e\u7684\u590d\u6742\u5ea6\uff0c\u7531\u4e8e\u4e0d\u5173\u5fc3\u987a\u5e8f\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u6392\u5e8f\uff0c\u6211\u4eec\u5148\u6309 $a$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u4f9d\u6b21\u679a\u4e3e\uff0c\u5c31\u786e\u5b9a\u4e86 $a_{0}$\uff0c \u90a3 $b_{0}$ \u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5176\u5b9e\u6211\u4eec\u5173\u5fc3\u7684\u53ea\u662f\u6700\u5c0f\u503c\uff0c\u5176\u4ed6\u7684\u90fd\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5~~\u9a9a\u6c14~~\u7684\u5bf9\u679a\u4e3e\u5230\u7684 $a_{0}$ \u540e\u8fb9\u7684\u6570\u7ec4\u4ee5 $b$ \u4e3a\u5173\u952e\u5b57\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u5c31\u53c8\u4fdd\u8bc1\u4e86 $b_{0}$ \u7684\u6709\u5e8f\u6027\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u80fd\u964d\u4e0b\u6765\u4e86\uff0c\u4e3a\u4ec0\u4e48\u5450\uff1f\n \n \u6211\u4eec\u60f3\u4e00\u4e0b\uff0c\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86 $a_{0}$ \uff0c\u90a3 $\\ k\\ $ \u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5173\u4e8e $\\ b_{0}$ \u7684\u4e00\u6b21\u51fd\u6570\uff0c\u5982\u679c $\\ b_{0}\\ $ \u5355\u8c03\u9012\u51cf\uff0c\u90a3\u4e48 $k$ \u4e5f\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u90a3\u6211\u4eec\u5c31\u80fd\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u5982\u679c\u4e00\u4e2a\u68a8\u5b50 $i$ \u6240\u7b97\u51fa\u6765\u7684\u503c\u5df2\u7ecf\u5927\u4e8e\u5f53\u524d\u7684 $k$ \u90a3\u5b83\u5728\u679a\u4e3e\u4e0b\u4e00\u4e2a  $b_{0}$ \u65f6\u4e00\u5b9a\u4e5f\u4f1a\u5927\u4e8e\u6240\u8ba1\u7b97\u51fa\u6765\u7684 $k$\uff08\u56e0\u4e3a $k$ \u5355\u8c03\u51cf\uff09\u6211\u4eec\u76f4\u63a5\u820d\u5f03\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u5927\u6839\u5806\u7ef4\u62a4\u9009\u62e9\u7684\u68a8\u5b50 \u679a\u4e3e \n $b_{0}$ \u65f6\u8bb2\u5f53\u524d\u9898\u76ee\u7684\u503c\u538b\u5165\u5806\uff0c\u518d\u5f39\u51fa\u4e0d\u5408\u6cd5\u7684\u503c\uff0c\u6700\u540e\u5c31\u662f\u53ef\u9009\u62e9\u7684\u9898\u76ee\u4e86\uff0c\u590d\u6742\u5ea6\u660e\u663e\u662f $\\ O(n^{2} \\operatorname{log}n)$\uff0c$n=2000$ \u5b8c\u5168\u80fd\u8fc7 ~~\uff08\u5438\u6c27\u624d\u80fd\u8fc7\uff09~~\u3002\n \n  [\u4ee3\u7801](https://www.luogu.com.cn/paste/i1rp1oha)",
        "postTime": 1654424444,
        "uid": 571229,
        "name": "__stick",
        "ccfLevel": 7,
        "title": "solution"
    },
    {
        "content": "## [P1493 \u5206\u68a8\u5b50](https://www.luogu.com.cn/problem/P1493)\n\u770b\u5230\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u4e0d\u7b49\u5f0f\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u8981\u786e\u5b9a\u4e86 $A,B$\uff0c\u90a3\u4e48\u4fbf\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u3002\u4e8e\u662f\u4fbf\u60f3\u5230\u679a\u4e3e $A,B$\u3002\u4f46\u662f\u4e24\u91cd\u5faa\u73af\u679a\u4e3e\u5c31\u5df2\u7ecf\u662f $O(n^2)$ \u7684\u4e86\uff0c\u6211\u4eec\u8ba1\u7b97\u8fd8\u9700\u8981 $O(n)$ \u7684\u65f6\u95f4\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^3)$ \u7684\uff0c\u8fd9\u663e\u7136\u65e0\u6cd5\u901a\u8fc7\u3002\n\n\u7ee7\u7eed\u60f3\uff0c\u4e8e\u662f\u4fbf\u60f3\u5230\u5c06\u9898\u76ee\u4e2d\u7684\u4e0d\u7b49\u5f0f\u5316\u7b80\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230\u4ec0\u4e48\u3002\n$$C_1 \\times A_i+C_2 \\times B_i \\leq C3+C_1 \\times A_0+C_2 \\times B_0$$\n\n\u8fd9\u6837\u770b\u6765\u8fd8\u662f\u611f\u89c9\u6ca1\u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u5730\u65b9\u3002\u4f46\u662f\uff0c\u9898\u76ee\u4e2d\u8bf4 $A_0,B_0$ \u662f\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u6709\u4e24\u4e2a\u4e0d\u7b49\u5f0f\n$$A_i \\geq A_0,B_i \\geq B_0$$\n\n\u770b\u5230\u4e09\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u90a3\u662f\u4e0d\u662f CDQ \u5206\u6cbb\u5462\uff1fCDQ \u5206\u6cbb\u662f $a_i \\geq a_j,b_i \\geq b_j,c_i \\geq c_j$ \u7684\u5f62\u5f0f\u3002\u4e3a\u5c3d\u91cf\u8d34\u8fd1\u8fd9\u6837\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u4ee4 $X_i=C_1 \\times A_i+C_2 \\times B_i$\u3002\u4f46\u662f\u73b0\u5728\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f $A_0,B_0$ \u4e0d\u4e00\u5b9a\u662f\u540c\u4e00\u4e2a\u4e0b\u6807\uff0c\u8fd9\u600e\u4e48\u529e\u5462\uff1f\u662f\u4e0d\u662f\u4e0d\u662f CDQ \u5206\u6cbb\u5462\uff1f\u5176\u5b9e\u8fd9\u662f\u53ef\u4ee5\u89e3\u51b3\u7684\uff0c\u6211\u4eec\u53ea\u8981\u540c\u65f6\u679a\u4e3e\u5230 $A_0,B_0$ \u90a3\u4e0d\u5c31\u76f8\u5f53\u4e8e\u5b83\u4eec\u662f\u540c\u4e00\u4e0b\u6807\u7684\u5417\uff1f\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5c06\u5e8f\u5217\u5148\u6309\u7167 $A_i$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u90a3\u4e48\u5f53\u6211\u4eec\u4ece $1$ \u679a\u4e3e\u5230 $n$ \u7684\u65f6\u5019\uff0c\u5f53\u524d\u679a\u4e3e\u5230\u7684 $A_i$ \u5c31\u662f\u6700\u5c0f\u7684\u3002\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a `multiset`\uff0c\u8bb0\u4e3a $S$\u3002\u5728\u6211\u4eec\u4ece $1$ \u679a\u4e3e\u5230 $n$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u679a\u4e3e\u5230\u4e00\u4e2a\u6570\uff08\u8fd9\u91cc\u7684\u6570\u662f\u4e00\u4e2a\u5305\u542b $A,B,X$ \u7684\u7ed3\u6784\u4f53\uff09\uff0c\u6211\u4eec\u5c31\u5c06\u5b83\u4e22\u5165 $S$ \u4e2d\uff0c$S$ \u5185\u90e8\u6309\u7167 $B$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u7136\u540e\u679a\u4e3e $S$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u5f53\u524d\u679a\u4e3e\u5230\u7684\u6570 $j$\uff0c\u5b83\u7684 $B$ \u5c31\u662f\u6700\u5c0f\u7684\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4fdd\u8bc1\u4e86 $A_0,B_0$ \u662f\u4e00\u8d77\u679a\u4e3e\u5230\u7684\u3002\n\n\u90a3\u4e48\u5269\u4f59\u7684\u5c31\u6309\u7167 CDQ \u5206\u6cbb\u7684\u505a\u6cd5\u5c31\u884c\u4e86\uff0c\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\ncode\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=2010;\ntypedef long long ll;\nint n,c1,c2,c3,tot;\nll res;\nll b[N],c[N];\nstruct Node{\n    ll a,b,c;\n    bool operator< (const Node& t) const\n    {\n        return b>t.b;\n    }\n}node[N];\nbool cmp(Node a,Node b)\n{\n    return a.a>b.a;\n}\nmultiset <Node> s;\ninline int get(ll x)\n{\n    return lower_bound(b+1,b+tot+1,x)-b;\n}\ninline int lowbit(int x)\n{\n\treturn x & -x;\n}\ninline void add(int x,int y)\n{\n    for (int i=x;i<=n;i+=lowbit(i)) c[i]+=y;\n}\ninline ll query(int x)\n{\n    ll res=0;\n    for (int i=x;i;i-=lowbit(i)) res+=c[i];\n    return res;\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&c1,&c2,&c3);\n    for (int i=1;i<=n;++i) scanf(\"%lld%lld\",&node[i].a,&node[i].b);\n    sort(node+1,node+n+1,cmp);//\u5f00\u59cb\u6309\u7167A\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n    for (int i=1;i<=n;++i)\n    {\n        node[i].c=c1*node[i].a+c2*node[i].b;//\u8fd9\u91cc\u7684C\u5c31\u662f\u524d\u9762\u8bf4\u7684X \n        b[++tot]=node[i].c;\n    }\n    //C\u8981\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u56e0\u4e3a1e9*2000\u662f\u4f1a\u8d85\u51faint\u8303\u56f4\u7684 \n    sort(b+1,b+tot+1);\n    tot=unique(b+1,b+tot+1)-b-1;\n    for (int i=1;i<=n;++i) node[i].c=get(node[i].c);\n    for (int i=1;i<=n;++i)\n    {\n        s.insert(node[i]);\n        memset(c,0,sizeof(c));//\u521d\u59cb\u5316\u6811\u72b6\u6570\u7ec4 \n        for(auto j=s.begin();j!=s.end();++j)\n        {\n            auto now=*j;\n            //CDQ\u5206\u6cbb \n            add(now.c,1);\n            ll d=c3+c1*node[i].a+c2*now.b;\n            ll t=get(d);\n            //\u56e0\u4e3a\u6211\u4eec\u9ed8\u8ba4d\u5728b\u6570\u7ec4\u91cc\u6ca1\u6709\u51fa\u73b0\uff0c\u90a3\u4e48\u4e8c\u5206\u627e\u5230\u7684\u5c31\u662f\u540e\u4e00\u4e2a\u6570\uff0c\n\t\t\t//\u56e0\u6b64query\u7684\u65f6\u5019-1\u3002\u4f46\u662f\u5982\u679cd\u5728b\u6570\u7ec4\u4e2d\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\n\t\t\t//\u8981-1\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u628a1\u52a0\u56de\u6765 \n            t+=b[t]==d;\n            res=max(res,query(t-1)); \n        }\n    }\n    printf(\"%lld\\n\",res);\n    return 0;\n}\n```\n",
        "postTime": 1679232026,
        "uid": 767793,
        "name": "_ZSR_",
        "ccfLevel": 0,
        "title": "P1493 \u5206\u68a8\u5b50"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1493)\n\n## \u5fae\u8584\u306e\u798f\u5229\n\n\u4e8b\u5b9e\u8bc1\u660e\u672c\u9898\u9664 $C3$ \u5916\u7684\u6240\u6709\u6570\u636e\u5747\u5c0f\u4e8e $2000$\u3002\n\n## \u601d\u8def\u7b80\u8ff0\n\n+ \u5957\u8def\u7684\uff0c\u5148\u5c06\u68a8\u5b50\u4ee5 $B_i$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c $A_i$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\u5177\u4f53\u5730\uff0c\u6309\u7167 $B_i$ **\u5347\u5e8f**\u6392\u5e8f\uff0c\u5f53 $B_i$ \u76f8\u540c\u65f6\uff0c\u6309\u7167 $A_i$ **\u964d\u5e8f**\u6392\u5e8f\u3002\u770b\u5230 $n$ \u7684\u6570\u636e\u8303\u56f4\u4e0d\u592a\u5927\uff0c\u4e8e\u662f\u8003\u8651\u679a\u4e3e\u5177\u4f53\u7684\u6700\u5927\u6700\u5c0f\u503c\u8fdb\u884c\u6c42\u89e3\u3002\n+ \u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6c42 $\\max_{i=1}^n\\max_{j=i}^n\\sum_{k=i}^n[A_k-\\frac{(B_k-B_i)\\times C_2-C_3}{C_1}\\le A_j\\le A_k]$\u3002\u6ce8\u610f\u6b64\u65f6\u7b2c $i$ \u4e2a\u68a8\u5b50\u4e00\u5b9a\u8981\u6ee1\u8db3 $A_i-\\frac{(B_k-B_i)\\times C_2-C_3}{C_1}\\le A_j\\le A_i$\u3002\n+ $O(n^2\\log n)$ \u7684\u505a\u6cd5\u5df2\u7ecf\u70c2\u5927\u8857\u4e86\u3002\u90a3\u6709\u6ca1\u6709\u9488\u5bf9\u6b64\u9898\u7684\u8d85\u6c34\u6570\u636e\uff0c\u66f4\u4f18\uff0c\u66f4\u597d\u5199\u7684\u505a\u6cd5\u5462\uff1f\n+ \u4e0d\u59a8\u8bbe\u5982\u679c\u6b64\u65f6\u9009\u62e9\u7b2c $j$ \u4e2a\u68a8\u5b50\u7684 $A_j$ \u4e3a $A_0$ \uff0c\u90a3\u4e48\u53ef\u4ee5\u9009\u62e9\u7684\u68a8\u5b50\u4e2a\u6570\u4e3a $f_j$\u3002\n+ \u90a3\u4e48\u5bf9\u4e8e\u7b2c $i+1$ \u5230\u7b2c $n$ \u4e2a\u68a8\u5b50 $k$\uff0c\u5c06 $f_{[A_k-\\frac{(B_k-B_i)\\times C_2-C_3}{C_1}]\\texttt{\u5230}A_k}$ \u5168\u90e8\u52a0\u4e0a1\u3002\n+ \u5bf9\u4e8e\u7b2c $i$ \u4e2a\u68a8\u5b50\u8981\u7279\u6b8a\u5224\u65ad\uff0c\u56e0\u4e3a\n>\u7b2c $i$ \u4e2a\u68a8\u5b50\u4e00\u5b9a\u8981\u6ee1\u8db3 $A_i-\\frac{(B_k-B_i)\\times C_2-C_3}{C_1}\\le A_j\\le A_i$\u3002\n+ \u6240\u4ee5\u82e5\u6b64\u65f6\u679a\u4e3e\u5230\u7684 $A_0$ \u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5 pass\uff0c\u5426\u5219\u7edf\u8ba1\u7b54\u6848\u3002\n+ \u5982\u679c\u503c\u57df\u6269\u5c55\u5230\u5f88\u5927\uff0c\u4f7f\u7528 map \u6216\u79bb\u6563\u5316\u5373\u53ef\u89e3\u51b3\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2\\log n)$\u3002\n\n## \u4e11\u964b\u306e\u4ee3\u7801\n[click here](https://www.luogu.com.cn/paste/1h1h669m)",
        "postTime": 1651646975,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution]P1493 \u5206\u68a8\u5b50"
    },
    {
        "content": "**~~\u8fd9\u662f\u4e00\u9053DP\u9898\u5417\u2026\u2026\u4e3a\u4ec0\u4e48\u6709DP\u7684\u6807\u7b7e\u2026\u2026\u2026\u2026\u2026\u2026~~**\n\n\u66b4\u529b\u8fc7\u4e86\u2026\u2026\n\n\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0\uff0c**\u5982\u679c\u4e00\u79cd\u65b9\u6848\u4e2d\u6700\u5c0f\u503c\u5b9a\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e2a\u68a8\u5b50\u662f\u5426\u6ee1\u8db3\u6761\u4ef6**\uff0c\u5373\u4e24\u4e2a\u6743\u5747\u5927\u4e8e\u7b49\u4e8e\u5404\u81ea\u7684\u6700\u5c0f\u503c\uff0c\u5e76\u4e14\u6ee1\u8db3\u9898\u76ee\u4e2d\u7684\u7b49\u5f0f\uff0c**\u5c31\u80fd\u591f\u77e5\u9053\u8fd9\u79cd\u9009\u6cd5\u7684\u6700\u5927\u503c**\u3002\n\n\u6211\u4eec\u4ee4\u6570\u7ec4dp[x][y]\u8868\u793a\u7b2c\u4e00\u4e2a\u6743\u4e3ax\uff0c\u7b2c\u4e8c\u4e2a\u6743\u4e3ay\u65f6\u7684\u6700\u5927\u503c\uff08\u4e3a\u4ec0\u4e48\u53ebdp\u5462\u2026\u2026\u5176\u5b9e\u672c\u6765\u6211\u4ee5\u4e3a\u4f1a\u627e\u51fadp\u65b9\u7a0b\u7684\uff09\n\n\u6bcf\u6b21\u8f93\u5165\uff0c\u6211\u4eec\u90fd\u66b4\u529b\u679a\u4e3ex,y\u5224\u65ad\u80fd\u5426\u6ee1\u8db3\u2014\u2014**\u56fa\u5b9ax\uff0c\u5c1d\u8bd5\u79fb\u52a8y**\u3002\u5982\u679c\u8fd9\u4e2a\u68a8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u65b9\u6848\u4e2d\uff0c++dp[x][y]\n\n\u8fd9\u662f50\u5206\u7684\uff0c\u4e4b\u540e\u6709\u4f18\u5316\u3001\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n\nint n;\nlong long a, b, c;\nlong long val[2123][2];\n\nint dp[2123][2123];\nint ans(0);\nint main()\n{\n    scanf(\"%d%lld%d%lld\", &n, &a, &b, &c);\n    for (int i(0); i != n; ++i)\n    {\n        scanf(\"%lld%lld\", &val[i][0], &val[i][1]);\n        int x(val[i][0]), y(val[i][1]);//x\u5373\u7b2c\u4e00\u4e2a\u6743\u503c\u7684\u6700\u5c0f\u503c\uff0cy\u5373\u7b2c\u4e8c\u4e2a\u6743\u503c\u7684\u6700\u5c0f\u503c\n        while (x != 0)\n        {\n            if (b != 0) y = (a*(val[i][0] - x)+b*val[i][1]-c)/b;//y\u7684\u6700\u5c0f\u503c\uff0c\u7531\u9898\u76ee\u7b49\u5f0f\u5f97\u5230\uff1b\u5b9e\u9645\u4e0a\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u53d6\u5230\uff08\u539f\u56e0\u662fint\u9664\u6cd5\u5411\u4e0b\u53d6\u6574\uff09\n            else y = val[i][1];\n            while (y <= val[i][1])\n            {\n                if (a*(val[i][0] - x)+b*(val[i][1] - y) <= c)//\u5224\u65adx,y\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n                    ++dp[x][y];\n                if (dp[x][y] > ans) ans = dp[x][y];\n                ++y;\n            }\n            --x;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n# ~~\u723d\uff0150\u5206\u5230\u624b~~\n\n\u4e0d\u4e0d\u4e0d\uff0cAC\u624d\u662f\u6211\u4eec\u7684\u76ee\u6807\u2026\u2026\u63a5\u4e0b\u6765\u8003\u8651\u4f18\u5316\u3002\n\n\u5bf9\u4e8e\u56fa\u5b9a\u7684x\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u5b9ey\u6709**\u5355\u8c03\u6027**\uff1a\u5982\u679cy\u8d8a\u5927\uff0c\u5373\u8d8a\u63a5\u8fd1\u8f93\u5165\u7684\u7b2c\u4e8c\u4e2a\u6743\u503c\uff0c\u90a3\u4e48\u7b49\u5f0f\u5de6\u8fb9\u5c31\u8d8a\u5c0f\uff0c\u7b49\u5f0f\u4e5f\u8d8a\u53ef\u80fd\u6210\u7acb\u3002\n\n\u5bf9\u4e8e\u5355\u8c03\u6027\u2026\u2026\u6211\u4eec\u53ef\u4ee5\u53bb**\u4e8c\u5206y**\uff0c\u4f7f\u5f97y**\u76f4\u63a5\u5230\u8fbe\u4e00\u4e2a\u6ee1\u8db3\u4e0d\u7b49\u5f0f\u7684\u503c\u3002**\n\n\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n\nint n;\nlong long a, b, c;\nlong long val[2123][2];\n\nint dp[2123][2123];\nint ans(0);\nint main()\n{\n    scanf(\"%d%lld%d%lld\", &n, &a, &b, &c);\n    for (int i(0); i != n; ++i)\n    {\n        scanf(\"%lld%lld\", &val[i][0], &val[i][1]);\n        int x(val[i][0]), y(val[i][1]);\n        while (x != 0)\n        {\n            int l((a*(val[i][0] - x)+b*val[i][1]-c)/b), r(val[i][1] + 1);\n            if (l < 0) l = 0;\n            while (r > l)\n            {\n                int mid((l + r) / 2);\n                if (a*(val[i][0] - x)+b*(val[i][1] - mid) <= c)//\u6ee1\u8db3\u6761\u4ef6\n                {\n                    y = mid;\n                    r = mid;//\u5c1d\u8bd5\u83b7\u53d6\u66f4\u5c0f\u7684y\n                }\n                else\n                {\n                    l = mid + 1;\n                }\n            }\n            \n            while (y <= val[i][1])//\u90a3\u4e48\u533a\u95f4[y,val[i][1]]\u90fd\u662f\u6ee1\u8db3\u6761\u4ef6\u7684y\u7684\u53d6\u503c\n            {\n                ++dp[x][y];\n                if (dp[x][y] > ans) ans = dp[x][y];\n                ++y;\n            }\n            --x;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n\u5982\u679c\u4f60\u771f\u7684\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u62ff\u53bb\u4ea4\u2026\u2026\u4f60\u4f1a\u53d1\u73b0\u53ea\u6709TM70\u5206\u3002\u3002\n\n# ~~\u5176\u5b9e\u591f\u672c\u4e86\uff0c\u4e0d\u505a\u4e86~~\n\n\u5176\u5b9e\u8ddd\u79bbAC**\u8fd8\u6709\u4e00\u4e2a\u4f18\u5316**\uff0c\u5c31\u662f\u5728\u786e\u5b9ay\u540e\uff0c\u6211\u4eec\u77e5\u9053\u533a\u95f4[y,val[i][1]]\u90fd\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u3002\n### \u7136\u540e\u6211\u4eec\u5c31\u628adp\u4e00\u4e2a\u4e00\u4e2a\u52a0\u4e86\u8fc7\u53bb\u2026\u2026\nO(**n**)\uff0c\u66b4\u529b\u7684\u4e0d\u884c\u554a\u3002\n\n\u5bf9\uff0c**\u533a\u95f4\u52a0\u6cd5**\uff0c\u800c\u4e14\u52a0\u7684\u8fd8\u662f\u540c\u4e00\u4e2a\u6570\u54e6\u3002\n\n~~\u9a6c\u4e0a\u60f3\u5230\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4~~\n\n\u5bf9\u4e8e\u533a\u95f4\u52a0\u6cd5\uff0c\u6211\u4eec\u4fee\u6539dp\u7684\u5b9a\u4e49\uff0c\u5c06\u5b83\u7684\u5b9a\u4e49\u6539\u6210\u539f\u6765dp\u6570\u7ec4\u7684**\u5dee\u5206**\u2026\u2026\u5373\u65b0\u7684**dp'[i][j] = dp[i][j] - dp[i][j - 1]**\uff0c\u7279\u6b8a\u7684\uff0c**dp'[i][0] = dp[i][0]**\n\n\u6ce8\u610f\uff0c\u5f88\u5bb9\u6613\u5f97\u5230dp'[x][y]\u7684\u524d\u7f00\u548c\u5373dp[x][y]\uff08\u5dee\u5206\u662f\u524d\u7f00\u548c\u7684\u9006\u64cd\u4f5c\uff09\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u533a\u95f4[l,r]\u7684+1\uff0c\u5c31\u53ef\u4ee5\u8f6c\u6362\u4e3a++dp'[x][l]\u4e0e--dp'[x][r+1]\u4e86\uff01\n\n\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6ce8\u610f\u70b9\u2026\u2026\u8fd9\u4f1a\u5bfc\u81f4\u4f6050\u5206\uff08WA)\uff0c\u6211\u4ea4\u4e867\u30018\u6b21\u624d\u627e\u51fa\u6765\u3002**\u4e0b\u9762\u4ee3\u7801\u4e2d\u4f1a\u6709\u6ce8\u91ca\u6807\u51fa\u7684**\u3002\n\n\u771f\u00b7AC\u4ee3\u7801:\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n\nint n;\nlong long a, b, c;\nlong long m1, m2;\nint dp[2123][2123];\nint ans(0);\nint main()\n{\n    scanf(\"%d%lld%d%lld\", &n, &a, &b, &c);\n    for (int i(0); i != n; ++i)\n    {\n        long long v1, v2;\n        scanf(\"%lld%lld\", &v1, &v2);\n        if (v1 > m1) m1 = v1;\n        if (v2 > m2) m2 = v2;\n        int x(v1), y(v2);\n        \n        while (x != 0)\n        {\n            int l((a*(v1 - x)+b*v2-c)/b), r(v2 + 1);\n            if (l < 0) l = 0;\n            while (r > l)\n            {\n                int mid((l + r) / 2);\n                if (a*(v1 - x)+b*(v2 - mid) <= c)\n                {\n                    y = mid;\n                    r = mid;\n                }\n                else\n                {\n                    l = mid + 1;\n                }\n            }           \n            if (y <= v2 + 1)//\u5224\u65ad\u8303\u56f4\u2026\u2026\u4e0d\u5224\u65ad\u53ef\u80fd\u4f1a\u51fa\u4e8b\u60c5\n            {\n                ++dp[x][y];//\u5dee\u5206\n                --dp[x][v2 + 1];\n            }\n            y = v2 + 1; //\u8fd9\u4e00\u6b65\u5fc5\u4e0d\u53ef\u5c11\uff01\uff01\n                        //\u5982\u679c\u4f60\u4e0d\u66f4\u65b0y\u4e3a\u4e00\u4e2a\u65e0\u6548\u503c\uff08\u8d8a\u5927\u8d8a\u597d\uff0c\u81f3\u5c11\u5927\u4e8ev2\uff09\uff0c\u90a3\u4e48\u5982\u679c\u4e0b\u6b21\u4e8c\u5206\u627e\u4e0d\u51fa\u6709\u6548\u7684y\u503c\uff0c\u5c31\u4f1a\u4f7f\u7528\u4e0a\u6b21\u7684y\u503c\uff01\u800c\u4e0a\u6b21\u7684y\u503c\u5bf9\u4e8e\u73b0\u5728\u7684x\u5df2\u7ecf\u6ca1\u6709\u610f\u4e49\u4e86\u2026\u2026\n                        //\u5f53\u7136\u2026\u2026\u5982\u679c\u4f60\u7684y\u5b9a\u4e49\u5728\u8fd9\u4e2a\u5faa\u73af\u5185\u5e76\u4e14\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u65e0\u6548\u503c\u2026\u2026\u90a3\u4e48\u5c31\u5f53\u6ca1\u770b\u89c1\u6211\u8fd9\u4e09\u884c\u6ce8\u91ca\u2026\u2026\n            --x;\n        }\n    }\n    for (int i(0); i <= m1; ++i)\n    {\n        int sum(0);\n        for (int j(0); j <= m2; ++j)\n        {\n            sum += dp[i][j];//\u524d\u7f00\u548c\u83b7\u5f97\u539fdp\u6570\u7ec4\n            if (sum > ans) ans = sum;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1528202707,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1493 \u3010\u5206\u68a8\u5b50 \u3011"
    },
    {
        "content": "\u4ee5\u4e0b\u662fo2\u8fc7\uff0c\u4e0d\u5f0090\uff0c\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u6539\u4e86\u54ea\u91cc\uff09\u6539\u4e4b\u524d80\u5206\u7684\u9898\u89e3\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u9898\u5e94\u8be5\u662f\u4e2a\u5355\u8c03\u961f\u5217\u9898\u3002\n\n\u6240\u6709\u7684\u9898\u89e3\u90fd\u662f\u679a\u4e3e\u4e09\u5c42\uff0c\u7b2c\u4e09\u5c42\u662f\u901a\u8fc7\u5747\u644a\u6765\u964d\u4f4e\u590d\u6742\u5ea6\u7684\u3002\n\n\u4ec0\u4e48\u53eb\u5747\u644a\uff1f\u5c31\u662f\u5c3d\u7ba1\u6211\u5199\u4e86\u4e09\u5c42\u5faa\u73af\uff0c\u4f46\u662f\u7b2c\u4e09\u5c42\u5faa\u73af\u679a\u4e3e\u6570\u5b9e\u9645\u4e0a\u4e3a\u4e00\u4e2a\u5b9a\u503c\uff0c\u6216\u8005\u4e0d\u5927\u4e8e\u4e00\u4e2a\u503c\u3002\n\n\u6211\u4eec\u53ef\u4ee5~~\u6284\u88ad~~\u501f\u9274\u4e00\u4e0b\u522b\u7684\u9898\u89e3\u91cc\u62c6\u89e3\u65b9\u7a0b\u7684\u505a\u6cd5\u3002\n\n\u540c@I_AM_HelloWord\u7684\u9898\u89e3\uff0c\u8bbe$d_i=c_1 \\times a_i+c_2 \\times b_i$\uff0c\u5f53$d_i \\le c_1\\times a_0+c_2 \\times a_0 $\u65f6\u65b9\u7a0b\u6210\u7acb\n\n\u6211\u7684\u505a\u6cd5\u540c\u6837\u662f\u679a\u4e3e$a_0$\uff0c$b_0$\uff0c\u628a$b_0$\u6392\u5e8f\uff0c\u4ece\u5927\u5230\u5c0f\u679a\u4e3e$b_0$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u77e5\u9053$b_0$\u4ee5\u524d\u7684\u7f16\u53f7\uff0c\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u4ed6\u7684\u7f16\u53f7\u4e3a$i$\uff0c\u90a3\u4e48\u56e0\u4e3a$a$\u6570\u7ec4\u6ca1\u6392\u5e8f\uff0c\u5219\u5982\u679c$a_i \\ge a_0$\uff0c\u4e14\u8ba1\u7b97\u65b9\u7a0b\u6210\u7acb\uff0c\u5219$i$\u8fd9\u4e2a\u68a8\u5b50\u662f\u53ef\u4ee5\u653e\u5230\u73b0\u5728\u60c5\u51b5$a_0$\u548c$b_0$\u91cc\u9762\u7684\u3002\n\n\u7531\u4e8e$b_0$\u679a\u4e3e\u662f\u4ece\u5927\u5230\u5c0f\uff0c\u73b0\u5728$b_0$\u53d8\u5c0f\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u653e\u8fdb\u53bb\u7684\u68a8\u5b50\u51fa\u73b0\u4e86\u90e8\u5206\u4e0d\u6ee1\u8db3\u65b9\u7a0b\u7684\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6765\u5b58\u50a8\u68a8\u5b50\u7684$d_i$\uff0c\u628a\u6700\u5927\u7684\u4e0d\u6ee1\u8db3\u65b9\u7a0b\u7684$pop$\u6389\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u662flogn\u7684\uff0c\u7559\u5728\u4f18\u5148\u961f\u5217\u91cc\u7684\u68a8\u5b50\u6570\u5c31\u662f\u73b0\u5728\u60c5\u51b5\u7684\u6700\u5927\u503c\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u53ef\u80fd\u5927\u5bb6\u4f1a\u8ba4\u4e3a\u662f$O(n^2logn)$\uff0c\u4f46\u662f\u7406\u8bba\u4e0a\uff0c\u56e0\u4e3a$a_0$\u4e0d\u53d8\u65f6\u6bcf\u4e2a\u68a8\u5b50\u6700\u591a\u5728\u4f18\u5148\u961f\u5217\u91cc\u8fdb\u51fa\u4e00\u6b21\uff0c\u800c\u4f18\u5148\u961f\u5217\u7684\u64cd\u4f5c\u662f$logn$\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u5747\u644a\u7684\u8fd9\u4e2a$logn$\u63d0\u51fa\u6765\uff0c\u590d\u6742\u5ea6\u5e94\u8be5\u662f$O(n^2+nlogn)$\uff0c\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u7406\u8bba\u4e0a\u8fd9\u4e48\u4f18\u79c0\u7684\u590d\u6742\u5ea6\uff0c\u4e0d\u5f00o2\u5c31\u8981TLE\uff0c\u662f\u6211\u7406\u8bba\u4e0a\u7b97\u9519\u4e86\uff0c\u8fd8\u662f\u4ec0\u4e48\u7384\u5b66\u95ee\u9898\uff1f\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\n\nlong long c1,c2,c3;\n\nstruct ha\n{\n    long long d,x,y;\n    bool operator <(const ha &aa)const\n    {\n        return d<aa.d;\n    }\n}a[100005];\n\nstruct yy\n{\n    long long v;\n    int id;\n}b[100005];\n\nbool cmp(const yy &aa,const yy &bb)\n{\n    return aa.v<bb.v;\n}\n\npriority_queue<ha> p;\n\nlong long ans=0;\n\nint main()\n{\n    scanf(\"%d\",&n);\n    scanf(\"%lld%lld%lld\",&c1,&c2,&c3);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld%lld\",&a[i].x,&a[i].y);\n        a[i].d=a[i].x*c1+a[i].y*c2-c3;\n        b[i].id=i;\n        b[i].v=a[i].y;\n    }\n    sort(b+1,b+1+n,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        long long k=0;\n        for(int j=n;j>=1;j--)\n        {\n            int nx=b[j].id;\n            if(a[nx].x>=a[i].x&&a[nx].d<=c1*a[i].x+c2*b[j].v)\n            {\n                p.push(a[nx]);\n                k++;\n            }\n            else continue;\n            while(!p.empty()&&p.top().d>c1*a[i].x+c2*b[j].v)\n            {\n                k--;\n                p.pop();\n            }\n            ans=max(k,ans);\n        }\n        while(!p.empty())\n            p.pop();\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1540213582,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1493 \u3010\u5206\u68a8\u5b50 \u3011"
    }
]