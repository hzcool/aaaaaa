[
    {
        "content": "emmmm\u2026\u2026\n\n\n\u697c\u4e0b\u600e\u4e48\u90fd\u662fSPFA\u5462orz\n\n\n\u90a3\u672c\u4eba\u6c34\u4e00\u53d1Bellman-Ford\u5427\u2026\u2026\n\n\n\u601d\u8def\u697c\u4e0b\u8bb2\u7684\u5f88\u6e05\u695a\uff1a\n\n\n1. \u628a\u6700\u957f\u8fb9\u8f6c\u6362\u4e3a\u6700\u77ed\u8fb9\uff08\u4e5f\u5c31\u662f\u53d6\u8d1f\u503c\u5566\uff09\n\n \n2. \u8dd1\u4e00\u904d\u6700\u77ed\u8def[\u6a21\u677f(\u70b9\u70b9\u6709\u60ca\u559c)](https://www.luogu.org/problemnew/show/P3371)\n\n\n3. \u6700\u540e\u7684\u7b54\u6848\u5728\u53d6\u8d1f\u56de\u6765\n\n\n\u6ce8\u610f\u5230\u8fbe\u4e0d\u4e86\u7684\u60c5\u51b5\uff08\u53ef\u4ee5\u8dd1\u4e00\u904d\u904d\u5386\uff0c\u4f46\u672c\u4eba\u5f88\u61d2~~\u5c31\u968f\u4fbf~~\u8fc7\u4e86\u2026\u2026\uff09\n\n\n\u4e0b\u9762\u653e\u4e0a~~\u4e11\u964b~~\u7f8e\u4e3d\u7684ACcode\uff1a\n\n \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    int dis[50001],w[50001],n,m,minn,f[50001][3];\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        dis[i]=w[i]=100000000;\n        f[i][1]=f[i][2]=0;\n    }\n    for(int i=1;i<=m;i++){\n        int a,b,c;\n        scanf(\"%d%d%d\",&a,&b,&c);\n        f[i][1]=a,f[i][2]=b,w[i]=-c;\n    }\n    dis[1]=0;\n    for(int i=1;i<=n-1;i++){\n        for(int j=1;j<=m;j++){\n            dis[f[j][2]]=min(dis[f[j][2]],dis[f[j][1]]+w[j]);\n        }\n    }\n    if(dis[n]!=0)\n    printf(\"%d\",-dis[n]);\n    else printf(\"-1\");\n    return 0;\n}\n```\nps:Bellman-Ford\u7b97\u6cd5\u4e0d\u7528\u5224\u65ad\u91cd\u8fb9\uff0c\u6700\u77ed\u8def\u8be5\u600e\u4e48\u6c42\u5c31\u600e\u4e48\u6c42\n\n\npps:\u62d2\u7edd\u6284\u88ad\uff0c\u8425\u9020\u826f\u597d\u6d1b\u8c37\n\n\nppps:\u5982\u679c\u4ee3\u7801\u6709\u9519\u8bef\u8bf7\u56de\u590d\uff0c\u611f\u6fc0\u4e0d\u5c3d~~~~\n\n\npppps:\u89c9\u5f97\u6709\u5e2e\u52a9\u5c31\u70b9\u4e2a\u8d5e\u5457~~~~\n",
        "postTime": 1516714111,
        "uid": 51621,
        "name": "Altria_Pendragon_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "- **Upd 2021/3/10:\u4fee\u4e86\u4e00\u4e0b $\\LaTeX$\uff0c\u5e76\u6539\u6b63\u4e86\u8bc4\u8bba\u4e2d\u63d0\u5230\u7684\u95ee\u9898\u3002**\r\n\r\n\u5927\u5bb6\u6709\u6ca1\u6709\u53d1\u73b0\uff0c\u8fd9\u9898\u7684\u6b63\u89e3\u662f\u62d3\u6251+DP\u2026\u2026  \r\n\u53cd\u6b63\u95f2\u7740\u6ca1\u4e8b\uff0c\u5199\u7bc7\u62d3\u6251\u73a9\u73a9\u3002\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u4e86\r\n\r\n>\u4e14\u5f53\u4e3a $G$ \u4e2d\u7684\u4e00\u6761\u8fb9\u65f6\u6709 $i < j$\u3002\r\n\r\n\u6240\u4ee5\u70b9 $1$ \u7edd\u5bf9\u662f\u4e00\u4e2a\u6ca1\u6709\u5165\u5ea6\u7684\u70b9\uff0c\u800c\u4e14\u4e0d\u4f1a\u51fa\u73b0\u73af\u3002\u800c\u8fd9\u4e00\u70b9\u6b63\u597d\u6ee1\u8db3\u62d3\u6251\u7684\u8981\u6c42\u3002\u4f46\u662f\uff0c\u9898\u76ee\u5e76\u4e0d\u4fdd\u8bc1\u53ea\u6709\u70b9 $1$ \u662f\u6ca1\u6709\u5165\u5ea6\u7684\u3002\u6240\u4ee5\u8981\u5224\u65ad\u5176\u4ed6\u6ca1\u6709\u5165\u5ea6\u7684\u70b9\u3002\u800c\u5bf9\u4ed6\u4eec\u7684\u5904\u7406\u662f\uff1f\u4e5f\u8bb8\u4f60\u4e00\u5f00\u59cb\u4f1a\u60f3\u5230\u52a0\u5165\u961f\u5217\uff0c\u90a3\u4f60\u5c31\u9519\u4e86\uff01\u4ed6\u4eec\u672c\u8eab\u662f\u65e0\u6cd5\u5230\u8fbe\u7684\u70b9\uff0c\u6240\u4ee5\u6839\u672c\u4e0d\u53ef\u80fd\u4f1a\u5ef6\u4f38\u5230\u5176\u4ed6\u5730\u65b9\uff0c\u5982\u679c\u52a0\u5165\u961f\u5217\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u4e2a\u522b\u70b9\uff0c\u751a\u81f3\u6240\u6709\u70b9\u7684\u7b54\u6848\u9519\u8bef\u3002\u90a3\u4e48\u5c31\u662f\u4e0d\u7ba1\u4ed6\uff1f\u8fd8\u662f\u9519\u4e86\uff01\u5982\u679c\u4e0d\u7ba1\uff0c\u90a3\u4e48\u4ed6\u4eec\u5ef6\u4f38\u51fa\u6765\u7684\u70b9\u7684\u5165\u5ea6\u6c38\u8fdc\u5927\u4e8e $0$\uff0c\u56e0\u4e3a\u8fd8\u6709\u90a3\u4e9b\u70b9\u3002\u4ee5\u81f3\u4e8e\u53d1\u751f\u548c\u4e0a\u4e00\u79cd\u65b9\u6cd5\u4e00\u6837\u7684\u9519\u8bef\uff0c\u751a\u81f3\u4f7f\u7ec8\u70b9\u65e0\u6cd5\u5230\u8fbe\uff01\u90a3\u4e48\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u5148\u505a\u4e00\u904d for \u5faa\u73af\uff0c\u627e\u5230\u90a3\u4e9b\u70b9\uff0c\u518d\u628a\u5ef6\u4f38\u51fa\u6765\u7684\u70b9\u7684\u5165\u5ea6 $-1$\uff0c\u5982\u679c\u8fd9\u4e9b\u70b9\u5165\u8bfb $-1$ \u540e\u53c8\u53d8\u6210\u4e86\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\uff0c\u90a3\u4e48\u518d\u505a\u540c\u6837\u7684\u5904\u7406\u3002\u81f3\u4e8e\u4e00\u4e2a\u70b9\u7684\u6700\u957f\u8def\u7684\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f\uff1a  \r\n$min\\{\\text{\u5165\u5ea61+\u76f8\u5e94\u7684\u8fb9},\\text{\u5165\u5ea62+\u76f8\u5e94\u7684\u8fb9\u2026\u2026\u5165\u5ea6n\u52a0\u76f8\u5e94\u7684\u8fb9}\\}$  \r\n\u548c SPFA\u3001dijkstra \u7684\u677e\u5f1b\u64cd\u4f5c\u5dee\u4e0d\u591a\u3002  \r\n**\u4ee3\u7801\uff1a**\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m,in[1505];//\u5b58\u5165\u5ea6\u6570\u91cf\r\nvector<int>g[1505];//\u5b58\u8fb9\r\nvector<int>d[1505];//\u5b58\u8fb9\u6743\r\nqueue<int>q;//\u961f\u5217\r\nint v[1505];//\u5b58\u6700\u957f\u8def\r\nint main()\r\n{\r\n\tcin>>n>>m;\r\n\tfor(int i=1;i<=m;i++)\r\n\t{\r\n\t\tint ff,tt,dd;\r\n\t\tcin>>ff>>tt>>dd;\r\n\t\tg[ff].push_back(tt);\r\n\t\td[ff].push_back(dd);\r\n\t\tin[tt]++;\r\n\t}\r\n\tfor(int i=2;i<=n;i++)\r\n\t{\r\n\t\tv[i]=-1e9;\r\n\t\tif(!in[i]) q.push(i);\r\n\t}//\u521d\u59cb\u5316\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tint x=q.front();\r\n\t\tq.pop();\r\n\t\tfor(int i=0;i<g[x].size();i++)\r\n\t\t\tif(!--in[g[x][i]]) q.push(g[x][i]);\r\n\t}\r\n\t//\u5e9f\u5f03\u5176\u4ed6\u7684\u5165\u5ea6\u4e3a0\u7684\u70b9\u3002\r\n\tq.push(1);\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tint x=q.front();\r\n\t\tq.pop();\r\n\t\tfor(int i=0;i<g[x].size();i++)\r\n\t\t{\r\n\t\t\tif(v[g[x][i]]<v[x]+d[x][i]) v[g[x][i]]=v[x]+d[x][i];//\u677e\u5f1b\r\n\t\t\tif(!--in[g[x][i]]) q.push(g[x][i]);//\u5982\u679c\u5165\u5ea6\u4e3a0\u5c31\u52a0\u5165\u961f\u5217\r\n\t\t}\r\n\t}\r\n\tif(v[n]==-1e9) cout<<\"-1\";\r\n\telse cout<<v[n];//\u8f93\u51fa\u7ed3\u679c\r\n\treturn 0;\r\n}\r\n```\r\n\u5b89\u5229[\u535a\u5ba2](https://www.luogu.org/blog/yhdhg1395754790/)",
        "postTime": 1566355681,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u53ef\u4ee5\u91c7\u53d6\u5e7f\u641c\u5c06\u7ed3\u70b9\u4f9d\u6b21\u641c\u7d22\uff0c\u8bb0\u5f55\u5f53\u524d\u7ed3\u70b9\u7684\u6700\u957f\u8def\u5e76\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u66f4\u65b0\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<iostream>\nusing namespace std;\nconst int maxn=1502;\nqueue<int>q;//\u5e7f\u641c\u961f\u5217 \nint d[maxn],mp[maxn][maxn];//d[i]\u8bb0\u5f55i\u7ed3\u70b9\u524d\u7684\u6700\u957f\u8def\uff0cmp[a][b]\u5b58\u50a8\u7ed3\u70b9a,b\u95f4\u7684\u8def\u5f84\u957f \nint n,m;\nvoid bfs()\n{\n    memset(d,-1,sizeof(d)); //\u521d\u59cb\u5316\u4e3a-1\uff0c\u4fbf\u4e8e\u65e0\u89e3\u65f6\u8f93\u51fa\u7684d[n]\u4e3a-1 \n    d[1]=0;//\u4f46\u7b2c\u4e00\u4e2a\u7ed3\u70b9\u524d\u8def\u5f84\u957f\u4e3a0 \n    q.push(1);\n    while(!q.empty())\n    {\n        int t=q.front();\n        q.pop();\n        for(int i=1;i<=n;i++)\n            if(mp[t][i]&&d[i]<d[t]+mp[t][i])//\u5982\u679c\u4ece\u961f\u5217\u5934\u5230\u5f53\u524d\u7ed3\u70b9i\u6709\u8fb9\uff0c\u4f46\u4e0d\u662f\u6700\u957f\uff08\u5373\u6b64\u70b9\u7684\u6700\u957f\u8def\u5c0f\u4e8e\u961f\u5217\u5934\u6700\u957f\u8def\u52a0t-i\u7684\u8def\u5f84\u957f\uff09 \n            {\n                d[i]=d[t]+mp[t][i];//\u66f4\u65b0\u6700\u957f\u8def \n                q.push(i);//\u8fdb\u5165\u961f\u5217\uff0c\u641c\u7d22\u4e0b\u4e00\u8282\u70b9 \n            }\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    int a,b,v;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>a>>b>>v;\n        mp[a][b]=max(mp[a][b],v);//\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u6709\u591a\u6761\u8fde\u8fb9\uff0c\u53ea\u9700\u4fdd\u7559\u6700\u957f\u8fb9 \n    }\n    bfs();\n    cout<<d[n];//\u8f93\u51fa\u6700\u540e\u4e00\u70b9\u7684\u6700\u957f\u8def\u5373\u53ef\n    return 0;    \n}\n```",
        "postTime": 1499989810,
        "uid": 29212,
        "name": "\u6c34\u58a8\u4e66\u9999",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u88f8\u7684\u62d3\u6251\n\u7528\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\uff0c\u53ea\u6709\u4ece1\u53f7\u70b9\u80fd\u5230\u7684\u7684\u70b9\u624d\u56de\u66f4\u65b0\u6700\u5927\u8def\n\u8dd1\u4e00\u904d\nOK\u5566\n```\n#include<iostream>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<vector>\nusing namespace std;\nconst int M=500500;\nint ind[M]={0};\nint maxa[M]={0};\nint n,m,i,j;\nstruct edge\n{\n\tint from;\n\tint to;\n\tint cost;\t\n};\nint bj[M]={0};\nvector<edge>G[M];\nint TopSort()\n{\n\tint tot=0;\n\tqueue<int>q;\n\tfor (i=1;i<=n;i++)\n\t\tif (ind[i]==0)\n\t\t\tq.push(i);\n\twhile (q.size())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor (i=0;i<G[u].size();i++)\n\t\t{\n\t\t\tind[G[u][i].to]--;\n\t\t\tif (bj[u]==1)\n\t\t\t{\n\t\t\t\tif (maxa[G[u][i].to]<maxa[u]+G[u][i].cost) maxa[G[u][i].to]=maxa[u]+G[u][i].cost;\n\t\t\t\tbj[G[u][i].to]=1;\n\t\t\t}\n\t\t\tif (ind[G[u][i].to]==0) \n\t\t\t\tq.push(G[u][i].to);\n\t\t}\n\t}\n\treturn tot;\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tedge now;\n\t\tscanf(\"%d %d %d\",&now.from,&now.to,&now.cost);\n\t\tind[now.to]++;\n\t\tG[now.from].push_back(now);\n\t}\n\tmaxa[n]=-1;bj[1]=1;\n\tTopSort();\n\tcout<<maxa[n]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1520774193,
        "uid": 71558,
        "name": "AcerMo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "### \u4e3b\u8981\u601d\u8def\n- \u8fd9\u9898\u7528Floyd\u53ef\u4ee5\u8f7b\u677eA\u3002\u5176\u5b9e\u5c31\u662f\u628a\u8f93\u5165\u8fdb\u53bb\u7684\u8fb9\u957f\u524d\u9762\u52a0\u4e0a\u4e2a\u8d1f\u53f7\uff0c\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u518d\u52a0\u4e00\u6b21\u8d1f\u53f7\u5c31\u884c\u4e86\u3002\n\n### \u4e3b\u8981\u5751\u70b9\n- \u6700\u5751\u7684\u5c31\u662f\u8f93\u5165\u6570\u636e\u91cc\u4e24\u4e2a\u70b9\u4e4b\u95f4\u53ef\u80fd\u6709\u5f88\u591a\u6761\u8fb9\uff0c\u6211\u4eec\u8981\u53d6\u5408\u9002\u7684\u90a3\u6761\u585e\u5165\u90bb\u63a5\u77e9\u9635\u3002[\uff08\u5426\u5219\u53ea\u80fd\u62ff45\u5206\uff09](https://www.luogu.org/recordnew/show/12651149)\n\n- \u7f16\u53f7\u662f\u4ece1\u5230n\u7684\uff0c\u6ce8\u610f\u5904\u7406\u6570\u7ec4\u8d8a\u754c\u95ee\u9898\u3002\n\n### \u6ce8\u610f\u4e8b\u9879\n- \u4e0d\u5f00\u6c27\u6c14\uff08O2\u4f18\u5316\uff09\u53ef\u80fd\u4f1aTLE\uff0c\u6211\u6ca1\u8bd5\u8fc7\u3002~~\uff08\u4f60\u4eec\u53ef\u4ee5\u8bd5\u8bd5\uff09~~\n\n### \u4e0a\u4ee3\u7801\n```\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#define INF 0x7fffffff   //\u624b\u52a8\u5b9a\u4e49INF\nusing namespace std;\nint n,m,x,y,z,map[1501][1501];    //\u90bb\u63a5\u77e9\u9635\u771f\u597d\u73a9\nint main(){\n    cin>>n>>m;   //\u8f93\u5165\u70b9\u6570\u548c\u8fb9\u6570\n    for(int i=0;i<n;i++)\n        for(int j=0;j<n;j++)\n            if(i==j) map[i][j]=0;    //\u90bb\u63a5\u77e9\u9635\u8d4b\u521d\u503c\n            else map[i][j]=INF;    \n    for(int i=0;i<m;i++){\n        cin>>x>>y>>z;\n        x--,y--;   //\u7f16\u53f7\u4ece1~n\uff0c\u6ce8\u610f\u5904\u7406\u6570\u7ec4\u8d8a\u754c\u95ee\u9898\n        map[x][y]=min(map[x][y],-z);   //\u5f53\u4e24\u4e2a\u70b9\u6709\u591a\u6761\u8def\u65f6\u53d6\u6700\u957f\u7684\u90a3\u6761\n    }\n    for(int k=0;k<n;k++)   //Floyd\u6a21\u677f\n        for(int i=0;i<n;i++)\n            for(int j=0;j<n;j++)\n                if(map[i][k]!=INF&&map[k][j]!=INF)\n                    map[i][j]=min(map[i][j],map[i][k]+map[k][j]);\n    if(map[0][n-1]==INF) cout<<-1;   //\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u8fde\u901a\n    else cout<<-map[0][n-1];  //\u76f8\u5f53\u4e8emap[0][n-1]*-1\n}\n```\n\u5982\u679c\u5bf9\u60a8\u6709\u5e2e\u52a9\u7684\u8bdd\u8bf7\u70b9\u4e2a\u8d5e\u54e6~",
        "postTime": 1540732775,
        "uid": 84991,
        "name": "_\u81ea\u52a8AC\u673a_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "## \u54c7\n#### \u7adf\u7136\u6ca1\u6709\u4eba\u5199dijkstra\uff1f\uff1f\uff1f\n#### \u7ed9\u4e86\u6211\u8fd9\u4e2a\u4e0d\u5199spfa\u7684\u849f\u84bb\u4e00\u4e2a\u673a\u4f1a\u554a2333\n\n\n------------\n\n~~\u4ee5\u4e0a\u90fd\u662f\u5e9f\u8bdd~~\n#### \u5176\u5b9e\u8fd9\u8ddf\u666e\u901a\u7684dijkstra\u6ca1\u6709\u592a\u5927\u533a\u522b\n#### \u6838\u5fc3\u601d\u8def\u5c31\u662f\u6839\u636e\u9898\u9762\u91cc\u9762\u7684\u8fd9\u53e5\u201c`\u5f53\u4e3aG\u4e2d\u7684\u4e00\u6761\u8fb9\u65f6\u6709i < j`\u201d\n#### \u2234\u5f53\u524d\u6ca1\u6709\u88ab\u9501\u5b9a\u7684\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff08\u8fd9\u53e5\u8bdd\u6bd4\u8f83\u5173\u952e\uff09\n#### \u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06dijkstra\u539f\u672c\u7531\u201c`\u6ca1\u6709\u88ab\u9501\u5b9a\u7684dis\u6700\u5c0f\u7684\u70b9`\u201d\u5411\u5916\u62d3\u5c55\u6539\u4e3a\u7531\u201c`\u6ca1\u6709\u88ab\u9501\u5b9a\u7684\u7f16\u53f7\u6700\u5c0f\u7684\u70b9`\u201d\u5411\u5916\u62d3\u5c55\n#### \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u6539\u4e00\u4e0b\u677e\u5f1b\n#### \u76f4\u63a5\u6839\u636e\u4f53\u9762\uff0c\u5c06\u539f\u6765\u7684\u8def\u5f84\u957f\u5ea6\u8d8a\u5c0f\u8d8a\u597d\u6539\u4e3a\u8d8a\u5927\u8d8a\u597d\uff0c\u5c31\u884c\u4e86\n\n### _\u5949\u4e0a\u4ee3\u7801_\n\n```cpp\n#include<bits/stdc++.h> // \u4e07\u80fd\u5934\u6587\u4ef6\n\nusing namespace std;\n\nint dis[10001];\nbool used[10001]; // \u610f\u4e49\u5c31\u8ddf\u5e73\u5e38\u7684dijkstra\u4e00\u6837\n// \u5b58\u56fe\u91c7\u7528\u90bb\u63a5\u8868\nvector < int > g[10001]; // \u8868\u793a\u7b2ci\u4e2a\u70b9\u7684\u7b2cj\u6761\u8fb9\u7684\u76ee\u7684\u5730\u662fg[i][j] \nvector < int > gv[10001]; // \u8868\u793a\u7b2ci\u4e2a\u70b9\u7684\u7b2cj\u6761\u8fb9\u7684\u6743\u503c\u662fgv[i][j] \nint lv[10001]; // \u8868\u793a\u7b2ci\u4e2a\u70b9\u6709lv[i]\u6761\u8fb9 \n\nint main(){\n    int n, m, s = 1; // s\u4e3a\u8d77\u70b9\n    memset(dis, -1, sizeof(dis)); // \u521d\u59cb\u5316\n    memset(used, 0, sizeof(used));\n    memset(lv, 0, sizeof(lv));\n    scanf(\"%d %d\", &n, &m); // \u8bfb\u5165\n    for(int i = 1; i <= m; i++){\n        int a, b, c;\n        scanf(\"%d %d %d\", &a, &b, &c);\n        lv[a]++; // \u5efa\u8fb9\n        if(lv[a] == 1){\n            g[a].push_back(-1);\n            gv[a].push_back(-1);\n        }\n        g[a].push_back(b);\n        gv[a].push_back(c);\n    }\n    //-------------\u8bfb\u5165\u5b8c\u6bd5----------------\n    dij[s] = 0;\n    for(int t = 1; t <= n; t++){\n        int Min = -1, u; // \uff08\u8fd9\u8fb9\u53ebMin\u53ea\u662f\u56e0\u4e3a\u6284\u4e86\u6211\u5355\u6e90\u6700\u77ed\u8def\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff09\n        for(int i = 1; i <= n; i++){ // \u627e\u5230\u6ca1\u6709\u88ab\u9501\u5b9a\u7684\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\n            if(!used[i] && dij[i] != -1){\n                Min = dij[i];\n                u = i;\n                break;\n            }\n        }\n        used[u] = 1; // \u9501\u5b9a\u8be5\u70b9\n        for(int i = 1; i <= lv[u]; i++){ // \u5411\u5916\u62d3\u5c55\n            if((dij[g[u][i]] == -1 || Min + gv[u][i] > dij[g[u][i]]) && !used[g[u][i]])\n            \tdij[g[u][i]] = gv[u][i] + Min;\n        }\n    }\n    printf(\"%d\", dij[n]);\n    // \u76f4\u63a5\u8f93\u51fa\uff08\u56e0\u4e3a\u6211\u7528-1\u8868\u793a\u65e0\u6cd5\u5230\u8fbe\uff09\n}\n```",
        "postTime": 1519460774,
        "uid": 36362,
        "name": "Dilute",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u62d3\u6251\u6392\u5e8f\u6c42DAG\u7684\u6700\u957f\u8def\uff0c\n\nps.\u53ea\u6709DAG\u624d\u6709\u6700\u957f\u8def\n\n\u5148\u628a\u6240\u6709\u70b9\u7684\u503c\u8bbe\u4e3a\u8d1f\u65e0\u7a77\uff0c\u53ea\u67091\u7684\u503c\u662f0\n\n\u626b\u63cf\u6240\u6709\u7684\u70b9\uff0c\u5f53\u6709\u70b9\u5165\u5ea6\u4e3a0\u65f6\u5165\u961f\n\n\u56e0\u4e3a\u62d3\u6251\u6392\u5e8f\u5c31\u662f\u5148\u4ece\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u9650\u5236\u7684\u70b9\u5f00\u59cb\u7684\n\n\u53ef\u4ee5\u4e0a\u7f51\u641c\u4e00\u4e0b\u62d3\u6251\u6392\u5e8f\u539f\u7406\u54e6~\n\n\u8fd9\u6837\u554a\u53ef\u4ee5\u4fdd\u8bc1wei[n] \u662f1\u5230n\u7684\u6700\u957f\u8def\n\n\u5176\u4ed6\u7684\u65b9\u9762\u770b\u4ee3\u7801\u5427\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#define maxn 1000000\nusing namespace std;\nint n,m;\nstruct Edge{//\u5b58\u8fb9 \n\tint next;\n\tint to;\n\tint dis;\n}edge[maxn];\nqueue<int> q;//\u62d3\u6251\u6392\u5e8f\u8981\u7528\u961f\u5217 \nint head[maxn];\nint wei[maxn];//\u70b9\u7684\u6700\u5927\u503c \nint deg[maxn];//\u70b9\u7684\u5165\u5ea6 \nint a,b,p,num,x;\nvoid add(int u,int v,int d){\n\tedge[++num].next=head[u];\n\tedge[num].to=v;\n\tedge[num].dis=d;\n\thead[u]=num;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&a,&b,&p);\n\t\tadd(a,b,p);\n\t\tdeg[b]++;\n\t}\n\tmemset(wei,-0x7f,sizeof(wei));//\u521a\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u8981\u628a\u6240\u6709\u51fa\u4e86\u4e00\u4ee5\u5916\u7684\u8d4b\u6210\u8d1f\u65e0\u7a77\uff0c\u8fd9\u6837\u4fdd\u8bc1\u662f\u4ece1\u5f00\u59cb \n\t\t\t\t\t\t\t\t  //\u8fd9\u4e2a\u6570\u636e\u5e94\u8be5\u662f\u6bd4\u8f83\u6c34\u7684\uff0c\u6ca1\u6709\u8d1f\u8fb9\u6743\n\t\t\t\t\t\t\t\t  //\u8981\u662f\u6709\u7684\u8bdd\uff0c\u5c31\u5728\u6bcf\u4e2a\u7ecf\u8fc7\u7684\u70b9\u4e0a\u6253\u4e2a\u6807\u8bb0\u6765\u5224\u65ad\u6709\u6ca1\u6709\u4e00\u6761\u8def\u662f\u5230\u8fben\u7684 \n\tfor(int i=1;i<=n;i++){\n\t\tif(!deg[i])q.push(i);\n\t\tif(i==1)wei[i]=0;\n\t\telse wei[i]=-maxn;\n\t}\n\twhile(!q.empty()){//\u62d3\u6251\u6392\u5e8f \n\t\tx=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[x];i;i=edge[i].next){ \n\t\t\tdeg[edge[i].to]--;//\u5165\u5ea6\u51cf1 \n\t\t\twei[edge[i].to]=max(wei[edge[i].to],wei[x]+edge[i].dis);\n\t\t\t/*\u66f4\u65b0\u662f\u8fd9\u6837\u7684\uff1a\n\t\t\t\t\u8fd9\u4e2a\u70b9\u7684\u503c\u6700\u5927=max\uff08\u8fd9\u4e2a\u70b9\u539f\u6765\u7684\u503c\uff0c\u4ed6\u7684\u524d\u9a71\u8282\u70b9+\u8fde\u63a5\u524d\u9a71\u548c\u4ed6\u81ea\u5df1\u7684\u8fb9\u7684\u503c\uff09 \n\t\t\t*/ \n\t\t\tif(deg[edge[i].to]==0){//\u82e5\u5165\u5ea6\u4e3a0\u5219\u53c8\u5165\u961f \n\t\t\t\tq.push(edge[i].to); \n\t\t\t}\n\t\t}\n\t}\n\tif(wei[n]<0){//\u4e3a\u4ec0\u4e48\u4e0d\u53d6\u7b49\uff1f\u56e0\u4e3a\u6709\u53ef\u80fd\u6240\u6709\u8fb9\u7684\u6743\u503c\u90fd\u662f0  \n\t\tprintf(\"%d\",-1);\n\t\treturn 0;\n\t}\n\tprintf(\"%d\",wei[n]);\n\treturn 0;\n}\n```",
        "postTime": 1540355260,
        "uid": 119161,
        "name": "SSSF",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u65e2\u7136Bellman-ford\u80fd\u8fc7\u2026\u2026\n\nSPFA\u548b\u5c31\u6ca1\u4e2a\u4ee3\u7801\u5462\u2026\u2026\n\n\u53cd\u7740\u641e\u6700\u77ed\u8def\u521d\u59cb\u5316\u548c\u677e\u5f1b\u5c31\u53ef\u4ee5\u4e86\u2026\u2026\n\n\u53e6\u5916\u80af\u5b9a\u662f\u5355\u5411\u8fb9\uff0c\u4e0d\u7136\u5c31\u662f\u7c7b\u4f3c\u6700\u77ed\u8def\u91cc\u7684\u8d1f\u6743\u73af\u4e00\u6837\uff0c\u76f4\u63a5\u6b63\u65e0\u9650\u4e0a\u53bb\u4e86\u2026\u2026\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n,m,s,x,y,z,out,fh,cnt,top,head[1510],dis[1510];\nbool done[1510];\nchar cc;\ndeque<int>q;\nstruct Edge\n{\n    int to,next,dis;\n}e[100010];\nint read()//\u80fd\u8bfb\u8d1f\u6570\u4f46\u662f\u4f1a\u53d8\u6162\u7684\u8bfb\u5165\u4f18\u5316\n{\n    out=0,fh=1,cc=getchar();\n    while((cc<'0'||cc>'9')&&cc!='-'){cc=getchar();}\n    if(cc=='-'){fh=-1,cc=getchar();}\n    else{out=cc-'0',cc=getchar();}\n    while(cc>='0'&&cc<='9')\n    {\n        out=out*10+cc-'0',\n        cc=getchar();\n    }\n    return out*fh;\n}\nvoid add(int x,int y,int z)//\u589e\u52a0\u5355\u5411\u8fb9\u7684\u64cd\u4f5c\n{\n    cnt++,e[cnt].next=head[x],e[cnt].to=y,e[cnt].dis=z,head[x]=cnt;\n}\nvoid SPFA(int s)\n{\n    for(int i=1;i<=n;i++){dis[i]=-233333333;}\n    dis[s]=0,done[s]=1;\n    q.push_back(s);\n    while(!q.empty())\n    {\n        x=q.front();\n        q.pop_front();\n        for(int i=head[x];i;i=e[i].next)\n        {\n            y=e[i].to;\n            if(dis[y]<dis[x]+e[i].dis)\n            {\n                dis[y]=dis[x]+e[i].dis;\n                if(!done[y])\n                {\n                    done[y]=1;\n                    if(!q.empty())\n                    {\n                        if(dis[y]<dis[q.front()]){q.push_back(y);}\n                        else{q.push_front(y);}\n                    }\n                    else{q.push_back(y);}\n                }\n            }\n        }\n        done[x]=0;\n    }\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=m;i++)\n    {\n        x=read(),y=read(),z=read();\n        add(x,y,z);\n    }\n    SPFA(1);\n    printf(\"%d\",(dis[n]==-233333333?-1:dis[n]));//\u6700\u540e\u7528\u4e09\u76ee\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u8fd8\u662f\u521d\u59cb\u503c\u5c31\u597d\u4e86\u2026\u2026\n    return 0;\n}\n```",
        "postTime": 1502035102,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u4e5f\u80fd\u8fc7\uff0c\u8fd8\u53ef\u4ee5\u514d\u53bbdp\u62d3\u6251\u7684\u9ebb\u70e6\u3002\n\n\u6e29\u99a8\u63d0\u9192\uff1a\u53ef\u80fd\u6709\u8d1f\u8fb9\uff0c\u91cd\u8fb9\uff0c\u7b54\u6848\u53ef\u80fd\u662f\u8d1f\u7684\u3002\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define INF 0x3f3f3f3f\n#define MAXN 1505\nint a[MAXN][MAXN];/*\u6570\u636e\u6bd4\u8f83\u5c0f\uff0c\u6211\u6bd4\u8f83\u61d2\uff0c\u6240\u4ee5\u7528\u90bb\u63a5\u77e9\u9635*/\nint f[MAXN];//f[i]\u8868\u793a\u4ee5i\u4e3a\u7ec8\u70b9\u7684\u6700\u957f\u8def \nint n,m,x,y,z,ans;\nint dfs(int x)/*\u65e0\u804a\u7684\u6211\u8981\u5012\u7740\u641c*/\n{\n    int s = 0;/*s\u8868\u793a\u8be5\u70b9\u7684\u5165\u5ea6*/\n    if(x == 1)\n    {\n        f[x] = 0;\n        return 0;\n    }\n    if(f[x] > -INF) return f[x];\n    for(int i = 1; i <= n; i ++)/*\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9*/\n    {\n        s ++;\n        if(a[x][i] > -INF)\n            f[x] = max(f[x],dfs(i) + a[x][i]);\n    }\n    if(s == 0) return -INF;//\u4e0d\u662f1\u4e14\u6ca1\u6709\u5165\u5ea6\uff0c\u5219\u4e0d\u53ef\u80fd\u8d70\u8fd9\u6761\uff0c\u8fd4\u56de\u8d1f\u65e0\u7a77 \n    return f[x];\n}\nint main()\n{\n    memset(a,0xc0,sizeof(a));//\u521d\u59cb\u5316\u4e3a\u8d1f\u65e0\u7a77 \n    memset(f,0xc0,sizeof(f));\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1; i <= m; i ++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        a[y][x] = max(a[y][x],z);\n    }\n    ans = dfs(n);\n    if(ans > -INF)\n        printf(\"%d\",ans);\n    else\n        printf(\"-1\");\n    return 0;\n}\n\n```",
        "postTime": 1509786774,
        "uid": 17850,
        "name": "ChthollyTree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "C++\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3 \n\n\u8fd9\u9053\u9898\u6211\u662f\u7528BFS\u505a\u7684\uff0c\u81ea\u6211\u611f\u89c9\u826f\u597d\u9664\u4e86\u6709\u51e0\u4e2a\u5c0f\u95ee\u9898\u3002\n\n\u9996\u5148\u8fd9\u662f\u6c42\u6700\u957f\u8def\uff08\u5f02\u5e38\u5fae\u5999\uff09\n\n\u7136\u540e\u6211\u53d1\u73b0\u8fd9\u9898\u7684\u6570\u636e\u662f\u6709\u70b9\u5927\u7684\u8981\u52a0\u4e00\u70b9\u4f18\u5316\u3002\n\n\u5982\u679c\u73b0\u5728\u7684\u5934\u6307\u9488\u5df2\u7ecf\u5230N\u4e86\uff0c\u5176\u5b9e\u4e5f\u6ca1\u6709\u5fc5\u8981\u5f80\u4e0b\u505a\u4e86\uff0c\u800c\u4e14\u80af\u5b9a\u4e5f\u4e0d\u4f1a\u6709\u60c5\u51b5\u5f80\u4e0b\u505a\u4e86\u56e0\u4e3a\u8fb9 <i,j> i\u662f\u5fc5\u5b9a\u5c0f\u4e8ej\u7684\u3002\n\n\u518d\u5176\u6b21\u8fd9\u4e2a\u503c\u53ef\u80fd\u4f1a\u91cd\u590d\u591a\u6b21\uff0c\u5c31\u4f1a\u5360\u7528\u5f88\u5927\u7684\u65f6\u95f4\u6548\u7387\u548c\u7a7a\u95f4\uff08\u6bd5\u7adf\u8fd9\u662f\u4e2a\u961f\u5217\uff09\u6240\u4ee5\u8981\u7528\u6570\u7ec4\u5b58\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u70b9\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u4ece\u5934\u6307\u9488\u5230\u8fd9\u4e2a\u503c\uff0c\u8fd8\u6ca1\u6709\u539f\u5148\u5230\u8fd9\u4e2a\u503c\u5927\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u4e0d\u4f1a\u662f\u6700\u4f18\u89e3\u3002\n\n\u6ce8\u610f\u5b8c\u95ee\u9898\u540e\uff0c\u7801\u4e00\u4e2a\u7ea6\u7b49\u4e8e\u88f8\u7684BFS\u5c31\u5947\u5947\u5999\u5999\u7684A\u4e86\u3002\n```\n#include <cstdio>\n#include <cmath>//\u6211\u662f\u4e00\u4e2a\u65b0\u624b\uff0c\u5b66\u4e60C++\u4ece\u5934\u6587\u4ef6\u505a\u8d77\n\nusing namespace std;\n\nint a[1510][1510];\nint b[1510][1510];\nint ans=-1;\nint h[15050000];\nint hh[15050000];//\u961f\u5217h\u5b58\u4e0b\u6807\uff0chh\u5b58\u503c\nint bo[1510];\n\nint max(int x,int y){\n\treturn x>y?x:y;\n}\nint main(){\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++){\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[x][0]++;\n\t\ta[x][a[x][0]]=y;//\u90bb\u63a5\u8868\u5f0f\u5b58\u50a8\uff0ca\u5b58\u8fd9\u6761\u8fb9\u5230\u7684\u4f4d\u7f6e\uff0cb\u5b58\u8fd9\u6761\u8fb9\u7684\u957f\u5ea6\n\t\tb[x][a[x][0]]=z;\n\t} \n\tint hard=1,tail=1;\n\th[hard]=1;\n\thh[1]=0;\n\twhile (hard<=tail){//BFS\u88f8\u7684\uff01\uff01\n\t\tif (h[hard]==n){//\u5230N\u4e86\u5c31\u5224\u65ad\uff0c\u627e\u6700\u4f18\u89e3\n\t\t\tans=max(ans,hh[hard]);\n\t\t} else {//\u4e0d\u7136\u7684\u8bdd\u5c31\u7ee7\u7eed\u6269\u5c55\n\t\tint x=h[hard];\n\t\tfor (int i=1;i<=a[x][0];i++){\n\t\t\tif (bo[a[x][i]]<hh[hard]+b[x][i]){\n\t\t\t\ttail++;\n\t\t\t\th[tail]=a[x][i];\n\t\t\t\thh[tail]=hh[hard]+b[x][i];\n\t\t\t\tbo[a[x][i]]=hh[tail];\n            }\n\t\t}\n        }\n\t\thard++;\n\t}\n\tprintf(\"%d\",ans);//\u8f93\u51fa\n} \n```\n\n\u4ee3\u7801\u4e11\u964b\uff0c\u8bf7\u89c1\u8c05\n\n\u7b2c\u4e8c\u6b21\u63d0\u4ea4C++\u9898\u89e3\u5e0c\u671b\u901a\u8fc7",
        "postTime": 1546868413,
        "uid": 46586,
        "name": "to_be_continued",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u5927\u6982\u8bb2\u89e3\u4e00\u4e0b\u601d\u8def\uff1a  \n\n**1.\u8f93\u5165\uff1a\u524d\u5411\u661f\u5b58\u8fb9,\u5e76\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u5165\u5ea6 ** \n\n**2.\u521d\u59cb\u5316,\u5c06\u5230\u5230\u8fbe\u8282\u70b91\u7684\u8ddd\u79bb\u8bbe\u4e3a\u6700\u5927\u503c(\u786e\u4fdd\u662f\u4ece\u8282\u70b91\u5230\u8fbe\u8282\u70b9N) ** \n\n**3.\u8fd0\u7528\u62d3\u6251\u6392\u5e8f\u7684\u601d\u60f3,\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u8bbf\u95ee,\u5e76\u5728\u6b64\u5904\u7528\u4e0a\u52a8\u6001\u89c4\u5212\u7684\u601d\u8def\u66f4\u65b0\u5230\u6b64\u8282\u70b9\u7684\u6700\u5927\u8ddd\u79bb  **\n\n**4.\u5224\u65ad\u8282\u70b9N\u7684\u503c\u662f\u5426\u4e3a0,\u82e5\u4e3a0\u5219\u65e0\u6cd5\u5230\u8fbe\u7ec8\u70b9,\u8f93\u51fa-1\uff0c\u5426\u5219\u8f93\u51fa\u8282\u70b9N\u7684\u6700\u5927\u8ddd\u79bb**  \n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<vector>\nusing namespace std;\nstruct Edge//\u524d\u5411\u661f\u5b58\u8fb9\n{\n    int to;\n    int dis;\n    int next;\n} E[50010];\nint num_Edge,Head[1510],Rin[1510],Dis[1510],Depth[1510];\nvoid Add_Edge(int from,int to,int dis)\n{\n    ++num_Edge;\n    E[num_Edge].dis=dis;\n    E[num_Edge].to=to;\n    E[num_Edge].next=Head[from];\n    Head[from]=num_Edge;\n}\nint main(void)\n{\n    int N,M,u,v,w;\n    scanf(\"%d%d\",&N,&M);\n    for(int i=1; i<=M; ++i)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        Add_Edge(u,v,w);\n        Rin[v]++;//\u7edf\u8ba1\u5165\u5ea6\u4e2a\u6570\n    }\n    queue<int >Q;\n    for(int i=1; i<=N; ++i) if(Rin[i]==0) Q.push (i);//\u62d3\u6251\u6392\u5e8f\u9700\u8981\u67e5\u627e\u6240\u4ee5\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\n    Dis[1]=1000000000;//\u521d\u59cb\u5316\n    int f;\n    while(!Q.empty())\n    {\n        f=Q.front();\n        Q.pop();\n        for(int i=Head[f]; i; i=E[i].next)\n        {\n            Rin[E[i].to]--;//\u5165\u5ea6\u51cf\u4e00\n            Dis[E[i].to]=max(Dis[E[i].to],Dis[f]+E[i].dis);\n            if(Rin[E[i].to]==0)Q.push(E[i].to) ;//\u66f4\u65b0\u62d3\u6251\u6392\u5e8f\n        }\n    }\n    if(Dis[N]>0) printf(\"%d\",Dis[N]-1000000000);//\u5982\u679c\u53ef\u4ee5\u5230\u8fbe\uff0c\u5219\u8f93\u51fa\u6700\u957f\u8def\u5f84\n    else printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1545527554,
        "uid": 48490,
        "name": "Anubis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "[LuoguP1807](https://www.luogu.org/problemnew/show/P1807):\n\n\u9996\u5148\u58f0\u660e\u672c\u4eba\u662f\u4e2a\u8d85\u7ea7\u65e0\u654c\u7684\u5927\u849f\u84bb\uff0c\u697c\u4e0b\u90fd\u662fBellman-Ford\u3001Dijkstra\uff0c\u8fd8\u6709\u6211\u8ba4\u4e3a\u7384\u5b66\u7684SPFA\uff08\u4e0d\u559c\u52ff\u55b7\uff09\uff0c\u6240\u4ee5\u5148%%%OTZ\u4e00\u6ce2\u697c\u4e0b\u7684\u5404\u79cd\u795e\u4f6c\u3002\n\n\u4f5c\u4e3a\u4e00\u4e2a\u8d85\u7ea7\u65e0\u654c\u7684\u5927\u849f\u84bb\uff0c\u6211\u6253\u6700\u77ed\u8def\u6253\u7684\u6700\u719f\u7684\u662fFloyd\uff0c\u5f53\u6211\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u4e00\u770b\u5230n\u22641,500\uff0c\u770b\u5230\u8fd9\u662fO(n3)\u53ef\u4ee5\u63a5\u53d7\u7684\u6570\u636e\uff0c\u4e8e\u662f\u6211\u7740\u624b\u5f00\u59cb\u6253Floyd\u3002\n\n\u9996\u5148\u672c\u9898\u662f\u4e00\u4e2aDAG\u4e0a\u6c42\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u53d8\u5f62\u2014\u2014\u6700\u957f\u8def\uff0cFloyd\u80af\u5b9a\u6ca1\u6709\u6bdb\u75c5\u3002\n\n\u90a3\u4e48\u8981\u770b\u7684\u5c31\u662f\u8fd9\u9898\u6709\u4ec0\u4e48\u5751\u4e86\u3002\n\n\u6700\u957f\u8def\u4fdd\u8bc1\u572810e9\u5185\uff0c\u6211\u4eec\u77e5\u9053integer\u7684\u6700\u5927\u503c\u4e3a2^31-1\u53732147483647\uff0c\u8db3\u591f\u89e3\u51b3\u6b64\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5~~\u8086\u65e0\u5fcc\u60ee\u7684~~\u4f7f\u7528int\u5b9a\u4e49\u8ddd\u79bb\u3002\n\n\u9996\u5148\u628aFloyd\u7684\u677f\u5b50\u6253\u4e0a\uff0c\u7136\u540e\u6211\u4eec\u770b\u5230\u5982\u679c\u4e0d\u8fde\u901a\uff0c\u5219\u8f93\u51fa-1\uff0c\u53c8\u60f3\u8d77\u6211\u4eec\u6c42\u7684\u662f\u6700\u957f\u8def\uff0c\u6240\u4ee5\u6211\u4eec\u5728floyd\u521d\u59cb\u5316\u8ddd\u79bb\u503c\u65f6\u53ef\u4ee5\u628a\u5e73\u65f6\u8d4b\u7684\u6700\u5927\u503c\u6362\u6210-1\uff0c\u8fd9\u6837\u4e5f\u4fbf\u4e8e\u6700\u540e\u8f93\u51fa\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\u3002\n\n\u5176\u6b21\u4f5c\u4e3a\u51fa\u9898\u4eba\u7cbe\u5fc3\u51c6\u5907\u7684\u4e00\u9053\u9898\uff0c\u80af\u5b9a\u4e0d\u4f1a\u5c31\u8fd9\u4e48\u7b80\u5355\uff0c\u5b9e\u9645\u4e0a\uff0c\u4e07\u6076\u7684\u51fa\u9898\u4eba\u5728\u51fa\u6570\u636e\u65f6\u6545\u610f\u6709\u4e94\u4e2a\u70b9\u91cd\u590d\u8f93\u5165\u4e00\u6761\u8fb9\u7684\u957f\u5ea6\uff0c\u800c\u4e14\u7b2c\u4e8c\u6b21\u8f93\u5165\u6bd4\u7b2c\u4e00\u6b21\u8f93\u5165\u7684\u957f\u5ea6\u5c0f~~\uff08\u867d\u7136\u8fd9\u5f88\u6b63\u5e38\uff0c\u53ef\u80fd\u662f\u6211\u83dc\uff0c\u7b2c\u4e00\u6b21\u63d0\u4ea4\u5c31\u4e2d\u62db\u4e86\uff09~~\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u5927\u849f\u84bb\u7efc\u5408\u4e0a\u8ff0\u5206\u6790\u540e\u5199\u51fa\u7684[AC](https://www.luogu.org/record/show?rid=5951527)\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1550;\nint n,m;\nint d[maxn][maxn];//\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\u5927\u6cd5\nvoid fd()\n{\n\tfor(int k=1;k<=n;k++)//Floyd\u677f\u5b50\uff0ck\u6700\u5916\u5c42\u5faa\u73af\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(~d[i][k])//\u8fd9\u4e2a\u7684\u610f\u601d\u662f\u7684d[i][k]!=-1\n\t\t\t{\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t{\n\t\t\t\t\tif(~d[k][j])//\u540c\u4e0a\u4e00\u4e2a\u89e3\u91ca\n\t\t\t\t\t{\n\t\t\t\t\t\td[i][j]=max(d[i][j],d[i][k]+d[k][j]);//\u6700\u957f\u8def\u6b64\u5904\u4e3amax\uff0c\u6700\u77ed\u8def\u5373\u4e3amin\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(i==j)\n\t\t\t{\n\t\t\t\td[i][j]=0;//\u81ea\u5df1\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\u4e3a0\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\td[i][j]=-1;//\u5176\u4f59\u8ddd\u79bb\u4e3a-1\u8868\u793a\u4e0d\u8fde\u901a\n\t\t\t}\n\t\t}\n\t}//\u521d\u59cb\u5316\u8fb9\u6743\n\tfor(int i=1,a,b,v;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&a,&b,&v);\n\t\td[a][b]=max(v,d[a][b]);//\u4e3a\u4e86\u9632\u6b62\u91cd\u590d\u5bf9\u4e00\u6761\u8fb9\u8f93\u5165\u6570\u636e\u4e14\u8f93\u5165\u8d8a\u6765\u8d8a\u5c0f\u7684\u6570\u636e\n\t}\n\tfd();\n\tprintf(\"%d\\n\",d[1][n]);//\u76f4\u63a5\u8f93\u51651~n\u7684\u8ddd\u79bb\u5373\u53ef\uff0c\u56e0\u4e3a\u8054\u901a\u65f6\u5373\u4e3a\u6700\u5927\u503c\uff0c\u4e0d\u8fde\u901a\u65f6\u5373\u4e3a\u9898\u76ee\u8981\u6c42\u7684-1\n\treturn 0;\n}\n```",
        "postTime": 1519704226,
        "uid": 59593,
        "name": "Peter_Matthew",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u770bc++\u62d3\u6251\u6392\u5e8f\u6ca1\u4eba\u53d1\uff0c\u6211\u5c31\u6765\u4e00\u53d1\uff08\u6ed1\u7a3d\uff09\n\n\u505a\u6cd5\uff1a\u62d3\u6251\u6392\u5e8f+DAG\u4e0adp\n\n\u8fd9\u9898\u8fd8\u7b97\u662f\u6c34\u9898\uff0c\u62d3\u6251\u6392\u5e8f\u53bb\u6389\u5165\u5ea6\u4e3a1\u7684\u70b9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7528bfs\u6765\u505adp\u4e86\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5f88\u660e\u663e\uff1a\n\n$dj=max(dj,di+wi,j)(i,j\u53ef\u8fbe)$\n\n\u5173\u4e8e\u8fd9\u9898\u4e3a\u4ec0\u4e48\u8981\u62d3\u6251\u6392\u5e8f\uff0c\u597d\u50cf\u662f\u4e0d\u505a\u62d3\u6251\u6392\u5e8f\u5c31\u4f1a\u5728dp\u7684\u65f6\u5019\u51fa\u5404\u79cd\u95ee\u9898\u3002\u3002\n\n\u5e0c\u671b\u5927\u5bb6\u53ef\u4ee5\u6765\u6211\u7684\u535a\u5ba2\u770b\u770b^\\_^\n\n\u4e0b\u6765\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<cmath>\n#include<vector>\n#include<queue>\nusing namespace std;\nstruct edge{\n    int to,w;\n    edge(int y,int l):to(y),w(l){}\n};\nint n,m;\nvector<edge> G[1501];\nint d[1501];\nint du[1501];\nvoid addedge(int x,int y,int l){\n    G[x].push_back(edge(y,l));\n    du[y]++;\n}\nvoid toposort(int s){\n    queue<int> q;\n    q.push(s);\n    while(!q.empty()){\n        int x=q.front();\n        q.pop();\n        for(int i=0;i<G[x].size();i++){\n            edge &e=G[x][i];\n            du[e.to]--;\n            if(du[e.to]==0){\n                q.push(e.to);\n            }\n        }\n        G[x].clear();\n    }\n}\nvoid bfs(int s){\n    queue<int> q;\n    q.push(s);\n    while(!q.empty()){\n        int x=q.front();\n        q.pop();\n        for(int i=0;i<G[x].size();i++){\n            edge &e=G[x][i];\n            if(d[x]+e.w>d[e.to]){\n                d[e.to]=d[x]+e.w;\n                q.push(e.to);\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int x,y,l;\n        scanf(\"%d%d%d\",&x,&y,&l);\n        addedge(x,y,l);\n    }\n    for(int i=2;i<=n;i++){\n        if(du[i]==0){\n            toposort(i);\n        }\n    }\n    if(du[n]==0){\n        printf(\"-1\");\n        return 0;\n    }\n    bfs(1);\n    printf(\"%d\",d[n]);\n    return 0;\n}\n```",
        "postTime": 1503203249,
        "uid": 39505,
        "name": "\u73ab\u8475\u4e4b\u8776",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "## \u6765\u603b\u7ed3\u4e0b\u5751\u70b9\n\n\u8fd9\u9053\u9898\u6211\u6709\u4e24\u79cd\u505a\u6cd5\uff1aSPFA\u548c\u62d3\u6251\n\nSPFA\u4ee3\u7801\uff1a\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define N 1551\n#define M 50005\nusing namespace std;\nstruct edge{\n    int to,val,next;\n} e[M];\nint h,i,m,n,t,u,v,w,hd[N],dis[N];\nbool vis[N];\nqueue <int> q;\nint cnt=0;\n void build(int u,int v,int w)\n {\n    cnt++;\n    e[cnt].to=v;\n    e[cnt].val=w;\n    e[cnt].next=hd[u];\n    hd[u]=cnt;\n }\nint main()\n{\n    memset(dis,-1,sizeof(dis));\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;++i)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        build(u,v,w);\n    }\n    q.push(1);\n    dis[1]=0;\n    vis[1]=true;\n    while(!q.empty())\n    {\n        h=q.front();q.pop();\n        vis[h]=false;\n        for(i=hd[h];i;i=e[i].next)\n        {\n            t=e[i].to;\n            if(dis[t]<dis[h]+e[i].val)\n            {\n                dis[t]=dis[h]+e[i].val;\n                if(!vis[t])\n                {\n                    vis[t]=true;\n                    q.push(t);\n                }\n            }\n        }\n    }\n    printf(\"%d\",dis[n]);\n    return 0;\n}\n```\n\u5982\u679c\u4f60\u660e\u767dspfa\u7684\u539f\u7406\uff08\u800c\u4e0d\u662f\u4ee3\u7801\u7eaf\u9760\u80cc\uff09\uff0c\u90a3\u4e48\u8fc7\u8fd9\u9053\u9898\u662f\u7279\u522b\u8f7b\u677e\u7684\u2014\u2014\n\n\u76f4\u63a5\u628aif(dis[t]>dis[h]+e[i].val)\u7684\u5927\u4e8e\u53f7\u6539\u6210\u5c0f\u4e8e\u53f7\uff0cdis\u6570\u7ec4\u521d\u59cb\u5316\u4e3a0\uff08\u8bb0\u5f97\u6539\u4e0b\u6570\u7ec4\u5927\u5c0f\uff09\n\n\u4f60\u5c31AC\u4e86\n\n\u539f\u7406\u5f88\u7b80\u5355\uff0c\u548c\u6700\u77ed\u8def\u4e00\u6a21\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u6539\u53d8\u4e86\u5927\u5c0f\u6bd4\u8f83\u7684\u65b9\u5f0f\u800c\u5df2\n\n\u5728\u8fd9\u91cc\u4e5f\u6574\u7406\u4e00\u4e0b\u5176\u4ed6\u5927\u4f6c\u7684\u5404\u79cd\u505a\u6cd5\u2014\u2014\n\n\u53d6\u8d1f\u8fb9\u6743\u8dd1\u6700\u77ed\u8def\uff0c\u8f93\u51fa\u65f6\u518d\u53d6\u53cd\u5373\u53ef\u3002\n\n\u5f00\u7279\u6b8a\u961f\u5217\n\n\u961f\u5217\u4e2d\u5b58\u7ed3\u6784\u4f53\uff0c\u91cd\u8f7d\u8fd0\u7b97\u7b26\u2026\u2026\n\n\u540e\u5934\u4e24\u79cd\u6211\u4e5f\u4e0d\u61c2\u2026\u2026\u53ea\u662f\u542c\u522b\u4eba\u8bf4\u7684\u2026\u2026\n\n\u603b\u4e4b\u53d6\u8d1f\u8fb9\u90a3\u4e2a\u8fd8\u662f\u6bd4\u8f83\u5b9e\u7528\u7684\n\n\u4f46\u662f\uff0c\u80fd\u6539\u4e00\u4e2a\u7b26\u53f7\u8fc7\u7684\u4e8b\uff0c\u4f55\u5fc5\u90a3\u4e48\u9ebb\u70e6\u5bf9\u5427\u3002\n\nspfa\u90e8\u5206\u603b\u7ed3\u5b8c\u6bd5\n\n\u62d3\u6251\u4ee3\u7801\uff1a\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define N 1551\n#define M 50005\nusing namespace std;\nstruct edge{\n    int to,val,next;\n} e[M];\nint h,i,m,n,t,u,v,w,hd[N],dis[N],ind[N];\nbool vis[N];\nqueue <int> q;\nint cnt=0;\n void build(int u,int v,int w)\n {\n    cnt++;\n    e[cnt].to=v;\n    e[cnt].val=w;\n    e[cnt].next=hd[u];\n    hd[u]=cnt;\n }\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;++i)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        build(u,v,w);\n        ind[v]++;\n    }\n    for(i=1;i<=n;i++)\n     if(!ind[i]) q.push(i);//\u4e00\u5f00\u59cb\u5728push\u7684\u540c\u65f6\u628avis\u4e5f\u8bbe\u6210true\u4e86\uff0c\u4e0d\u5bf9\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u53ea\u9ed8\u8ba4\u4ece1\u51fa\u53d1\u53bb\u5904\u7406\u5176\u5b83\u8fb9\n    vis[1]=true;dis[n]=-1;\n    while(!q.empty())\n    {\n        h=q.front();q.pop();\n        for(i=hd[h];i;i=e[i].next)\n        {\n            t=e[i].to;\n            ind[t]--;\n            if(vis[h])//\u53d7SPFA\u5f71\u54cd\uff0c\u8fd9\u91cc\u4e00\u5f00\u59cb\u5199\u7684if(!vis[t])\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u8fd9\u662f\u4e0d\u5bf9\u7684\uff0c\u6bcf\u4e2a\u70b9\u53ef\u88ab\u91cd\u590d\u8ba1\u7b97\u3002\n            //\u53ea\u8981\u8fd9\u4e2a\u70b9\u7684\u524d\u4e00\u4e2a\u70b9\u8bbf\u95ee\u8fc7\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u70b9\u53bb\u677e\u5f1b\uff0c\u6545\u4e3aif(vis[h])\n            {\n            \tdis[t]=max(dis[t],dis[h]+e[i].val);\n            \tvis[t]=true;\n            }\n            if(!ind[t]) q.push(t);\n        }\n    }\n    printf(\"%d\",dis[n]);\n    return 0;\n}\n```\n\n\u5751\u70b9\u5728\u4ee3\u7801\u91cc\u90fd\u603b\u7ed3\u4e86\n\nSPFA:61ms,1.07MB\nTopsort:34ms,1.14MB\n\n\u6bd5\u7adf\u4e00\u4e2a\u662fO(Ke),\u4e00\u4e2a\u662fO(n+m)\uff0c\u901f\u5ea6\u8fd8\u662f\u5dee\u4e0d\u5c11\u7684\uff0c\u7a20\u5bc6\u56fe\u66f4\u80fd\u4f53\u73b0\u51fa\u6765\n\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f7f\u7528SPFA\uff0cDAG\u4e0a\u4e00\u5b9a\u8981\u7528\u62d3\u6251\u7684\u3002\n\n\u597d\u5566\u603b\u7ed3\u5b8c\u6bd5",
        "postTime": 1562070530,
        "uid": 183448,
        "name": "Lucaster_",
        "ccfLevel": 0,
        "title": "\u5173\u4e8e\u6700\u957f\u8def\u2014\u2014SPFA\u548c\u62d3\u6251"
    },
    {
        "content": "#\u7ec8\u4e8e\u4e00\u904d\u8fc7\u4e86\uff0c\u65f6\u9694n\u6708\u7b2c\u4e00\u6b21\uff01\n\n##\u51e0\u4e4e\u88f8\u7684spfa\uff0c\u5fae\u5904\u7406\u4e00\u4e0b\n\n###\u5efa\u8d1f\u8fb9\uff0c\u7167\u7740spfa\u8dd1\uff08\u5f53\u7136memset\u90a3\u91cc\u8fd8\u8981\u6b63\u76840x7f\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u82e5\u662f\u8d1f\u7684\uff0c\u60f3\u60f3\uff0c\u80af\u5b9awa\uff09\uff0c\u90a3\u4e48\u4f60\u7684\u6700\u77ed\u8def\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u662f\u8d1f\u503c\u6700\u5c0f\u7684\uff0c\u518d\u4e58-1\uff0c\u4e0d\u5c31\u662f\u6b63\u8fb9\u6700\u5927\u7684\u5417\uff1f\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e0a\u4ee3\u7801\uff0c\u4e00\u770b\u5c31\u4f1a\uff08\u4e3a\u4ec0\u4e48\u6211\u8981\u591a\u8d34\u4ee3\u7801\uff1f\u6bcf\u4e2a\u4eba\u98ce\u683c\u90fd\u4e0d\u540c\uff0c\u53ef\u80fd\u4f60\u770b\u522b\u4eba\u7684\u4e0d\u592a\u61c2\u770b\u6211\u7684\u4f1a\u5bb9\u6613\u7406\u89e3\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define maxn 50010\nusing namespace std;\nstruct EDGE\n{\n    int next;\n    int to;\n    int co;\n}edge[maxn*5];\nint qr,head[maxn],team[maxn],dis[maxn],exist[maxn];\nint n,m,flag;\nvoid add(int from,int to,int co)\n{\n    edge[++qr].next=head[from];\n    edge[qr].to=to;\n    edge[qr].co=co;\n    head[from]=qr;\n}\nvoid spfa()\n{\n    memset(dis,0x7f,sizeof(dis));\n    memset(exist,0,sizeof(exist));\n    int h=0,t=1;\n    dis[1]=0;exist[1]=1;team[1]=1;\n    while(h<t)\n    {\n        h++;\n        int u=team[h];\n        exist[u]=0;\n        for(int i=head[u];i!=0;i=edge[i].next)\n         {\n             int v=edge[i].to;\n             if(dis[v]>dis[u]+edge[i].co)\n              {\n                  dis[v]=dis[u]+edge[i].co;\n                  if(!exist[v])\n                   {\n                       exist[v]=1;\n                       t++;\n                       team[t]=v;\n                   }\n                if(v==n)\n                 flag=1;\n              }\n         }\n    }\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;++i)\n     {\n         int a,b,v;\n         cin>>a>>b>>v;\n         add(a,b,-v);\n     }\n    spfa();\n    if(!flag) printf(\"-1\");\n     else printf(\"%d\",-dis[n]);\n    return 0;\n}\n```",
        "postTime": 1506259616,
        "uid": 49851,
        "name": "\u777f\u5c7f\u9752\u886b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\n\u62d3\u6251\u6392\u5e8f + DP    \n\u4e0d\u8fc7\u8fd9\u9053\u9898\u5fc5\u987b\u8981\u6c42\u76841\u5230n\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u957f\u8def     \n\u6240\u4ee5\u4e0d\u80fd\u5427\u5165\u5ea6\u4e3a0\u7684\u70b9\u90fd\u653e\u8fdb\u53bb    \n\u800c\u662f\u5e94\u8be5\u53ea\u653e\u8fdb\u53bb1    \n\u5bf9\u5176\u4ed6\u7684\u5165\u5ea6\u4e3a0\u4f46\u662f\u4e0d\u662f1\u7684\u70b9\u600e\u4e48\u5904\u7406\u5462\uff1f   \n\u679a\u4e3e\u5b8c1\u80fd\u5230\u8fbe\u7684\u70b9\u5e76\u4e14\u51cf\u53bb\u5165\u5ea6\u4e4b\u540e   \n\u8fd9\u4e9b\u70b9\u4e0d\u4e00\u5b9a\u4f1a\u4e3a0    \n\u6240\u4ee5\u9700\u8981\u5c06\u90a3\u4e9b\u591a\u4f59\u7684\u70b9\u5220\u6389   \n\u8fd9\u91cc\u7684\u5220\u6389\u6307\u7684\u662f\u5165\u5ea6--   \n\u4e5f\u5c31\u662f\u628a\u9664\u4e861\u4ee5\u5916\u7684\u5165\u5ea6\u4e3a0\u7684\u70b9    \n\u8fdb\u884c\u62d3\u6251\u6392\u5e8f     \n\u62d3\u6251\u6392\u5e8f\u5230\u7684\u70b9\u5c31\u5165\u5ea6--    \n\u5165\u5ea6\u4e3a0\u8fd8\u662f\u60f3\u50cf\u6b63\u5e38\u7684\u62d3\u6251\u4e00\u6837\u653e\u5165\u6808/\u961f\u5217\u4e2d\u53bb     \n\u76f4\u5230\u6808/\u961f\u5217\u4e3a\u7a7a      \n\n\u7136\u540e\u518d\u6765\u4e00\u904d\u62d3\u6251\u6392\u5e8f    \n\u53ea\u5c061\u653e\u5165\u6808/\u961f\u5217\u4e2d\uff0c    \n\u56e0\u4e3a\u8d77\u70b9\u53ea\u80fd\u662f1     \n\u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d     \n\u53ef\u4ee5\u8fdb\u884cDP   \ndp[i]\u8868\u793ai\u8fd9\u4e2a\u70b9\u52301\u7684\u6700\u957f\u7684\u8ddd\u79bb   \ndp[i] = max(dp[i],dp[u] + w);    \n\u8868\u793ai\u8fd9\u4e2a\u70b9\u52301\u7684\u6700\u957f\u8ddd\u79bb\u7b49\u4e8emax(\u5b83\u672c\u8eab\u7684\u503c\uff0c\u4ed6\u524d\u4e00\u4e2a\u70b9\u52301\u7684\u6700\u957f\u8ddd\u79bb+\u4ed6\u548c\u5979\u524d\u4e00\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb)         \n\n\u6700\u540e\u5982\u679cdp[n] == 0    \n\u4e5f\u5c31\u662f\u6ca1\u6709\u5230\u8fbe\u8fd9\u4e2a\u70b9    \n\u90a3\u5c31\u8f93\u51fa-1    \n\u5426\u5219\u8f93\u51fadp[n]      \n\n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<stack>\n#define int long long\nusing namespace std;\nconst int Max = 50005;\nstruct node\n{\n\tint y,w,ne;\n}a[Max];\nint head[1505],sum = 0;\nint into[1505];\nvoid add(int u,int v,int w)\n{\n\ta[++ sum].y = v;\n\ta[sum].ne = head[u];\n\ta[sum].w = w;\n\thead[u] = sum;\n}\nstack<int>s;\nint dp[1505];\nstack<int>q;\nsigned main()\n{\n\tint n,m;\n\tcin >> n >> m;\n\tint u,v,w;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tcin >> u >> v >> w;\n\t\tadd(u,v,w);\n\t\tinto[v] ++;\n\t}\n\tint jj = 0;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tif(into[i] == 0 && i != 1)\n\t\t\tq.push(i);\n\twhile(!q.empty())\n\t{\n\t\tint u = q.top();\n\t\tq.pop();\n\t\tfor(register int i = head[u];i != 0;i = a[i].ne)\n\t\t{\n\t\t\tinto[a[i].y] --;\n\t\t\tif(into[a[i].y] == 0)q.push(a[i].y);\n\t\t}\n\t}\n\ts.push(1);\n\twhile(!s.empty())\n\t{\n\t\tint u = s.top();\n\t\ts.pop();\n\t\tfor(register int i = head[u];i != 0;i = a[i].ne)\n\t\t{\n\t\t\tdp[a[i].y] = max(dp[a[i].y],dp[u] + a[i].w);\n\t\t\tinto[a[i].y] --;\n\t\t\tif(into[a[i].y] == 0)s.push(a[i].y);\n\t\t}\n\t}\n\tif(dp[n] == 0)cout << -1;\n\telse\tcout << dp[n] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1570782954,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "### \u8fd9\u9053\u9898\u76ee\u7684\u89e3\u6cd5\u591a\u79cd\u591a\u6837\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u6765\u8bf4\uff0c**\u9002\u5408\u81ea\u5df1\u7684\uff0c\u7b80\u5355\u7684\u624d\u662f\u6700\u597d\u7684\u65b9\u6cd5\u3002**\n\n\n------------\n#### \u51e0\u79cd\u601d\u8def\uff1a\n\n1\uff09\u7528\u6700\u77ed\u8def\u7684\u7b97\u6cd5\u505a\u3002\u6bd4\u5982$SPFA$\u3001$dijkstra$\u3001$Bellman-Ford$\u7b49\u7b97\u6cd5\u3002\u53ea\u9700\u8981\u6539\u53d8\u4e00\u4e0b\u66f4\u65b0\u7684\u505a\u6cd5\u3002\u5177\u4f53\u8bf7\u770b\u5176\u4ed6\u4eba\u7684\u9898\u89e3\u3002\n\n\n2\uff09\u5efa\u56fe\u7684\u65f6\u5019\uff0c\u8003\u8651\u65f6\u95f4\u4e0e\u7a7a\u95f4\uff0c\u91c7\u7528\u90bb\u63a5\u94fe\u8868\u3002\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528\u524d\u5411\u661f\u5efa\u56fe\u3002$vector$\u5efa\u56fe\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u5728\u8fd9\u91cc\u6bd4\u8f83\u9ebb\u70e6\uff0c\u56e0\u4e3a\u4f1a\u6709**\u91cd\u8fb9**\u3002\u800c\u524d\u5411\u661f\u5c31\u53ef\u4ee5\u81ea\u52a8\u8986\u76d6\u6389\u91cd\u8fb9\u3002\n\n3\uff09\u9664\u4e86\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u62d3\u6251\u6392\u5e8f[\u3010\u6559\u7a0b\u3011](https://80049.blog.luogu.org/kuai-su-ru-shou-ta-pu-pai-xu)+$dp$\u4e5f\u662f\u901a\u4fd7\u6613\u61c2\u7684\uff0c\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u9002\u5408\u7ec3\u4e60\u3002\u5f88\u660e\u663e\uff0c**\u70b9$b$\u53ea\u80fd\u7531\u70b9$a$\u8fd9\u4e2a\u524d\u9a71\u8282\u70b9\uff08\u6b63\u597d\u662f\u62d3\u6251\u5e8f\u5217\uff0c\u4fdd\u8bc1\u524d\u9762\u7684\u70b9\u662f\u540e\u9762\u7684\u524d\u9a71\uff09\u4ee5\u53ca\u4ed6\u81ea\u5df1\u8d70\u8fc7\u6765**\uff0c\u56e0\u6b64\u5f0f\u5b50\u5f88\u7b80\u5355\u3002\n\n\n> \u6ce8\u610f\uff1a\u9898\u76ee\u5df2\u7ecf\u8bf4\u660e\u8d77\u70b9\u662f$1$\uff0c\u56e0\u6b64\u4ece$1$\u5f00\u59cb\u904d\u5386\uff0c\u540c\u65f6\u8981\u521d\u59cb\u5316$\\infty$\uff0c\u5e76\u5728\u8f93\u51fa\u51cf\u53bb$\\infty$\u3002\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u53cd\u6b63\u6211\u6ca1\u52a0\u6211$WA$\u4e86\u2026\u2026\uff09\n\n\n------------\n\n\u5177\u4f53\u770b\u6ce8\u91ca\u5427\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=50005;\nconst int INF=0x7f7f7f7f;\nint n,m;\nstruct node\n{\n    int v,to,next;\n}edge[MAXN];\nint indeg[MAXN],f[MAXN],sqc[MAXN],head[MAXN];\n//\u56db\u4e2a\u6570\u7ec4\u5206\u522b\u8868\u793a\uff1a\u5165\u5ea6\u3001dp\u6570\u7ec4\u3001\u62d3\u6251\u5e8f\u5217\u3001\u94fe\u8868\u5934\nint cnt,num;//\u5206\u522b\u662f\uff1a\u62d3\u6251\u5e8f\u5217\u4e0b\u6807\u3001\u94fe\u8868\u4e0b\u6807\n\nvoid add(const int x,const int y,const int v)\n{\n    edge[++num]=(node){v,y,head[x]};\n    head[x]=num;\n}//\u524d\u5411\u661f\u5efa\u56fe\uff08\u6211\u538b\u884c\u4e86\uff09\n\nvoid input(void)\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,v;\n        cin>>x>>y>>v;\n        indeg[y]++;//\u5efa\u56fe\uff0c\u540c\u610f\u5165\u5ea6\n        add(x,y,v);\n    }\n}\n\nvoid topo_sort(void)\n{\n    queue <int> q;\n    for(int i=1;i<=n;i++)\n     if(!indeg[i])\n      q.push(i);//\u521d\u59cb\u5316\u961f\u5217\n    while(!q.empty())//\u6309\u7167\u6d41\u7a0b\u62d3\u6251\uff0c\u8fd9\u91cc\u4e0d\u591a\u8bf4\n    {\n        const int tmp=q.front();\n        q.pop();\n        sqc[++cnt]=tmp;\n        for(int i=head[tmp];i;i=edge[i].next)\n        {\n            const int now=edge[i].to;\n            indeg[now]--;\n            if(!indeg[now])\n             q.push(now);\n        }\n    }\n}\n\nvoid dp(void)\n{\n    f[1]=INF;//\u521d\u59cb\u503c\u5f88\u91cd\u8981\n    for(int i=1;i<=n;i++)\n     for(int j=head[sqc[i]];j;j=edge[j].next)\n      f[edge[j].to]=max(f[edge[j].to],f[sqc[i]]+edge[j].v);//\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\uff0c\u53ea\u80fd\u7531\u4ed6\u524d\u9a71\u7ed3\u70b9\u8fc7\u6765\uff0c\u5373\u62d3\u6251\u5e8f\u5217\u7684\u70b9\n}\n\nvoid output(void)\n{\n    if(f[n]<=0)\n    {\n        cout<<-1;\n        return;\n    }\n    cout<<f[n]-INF;//\u522b\u5fd8\u8bb0\u51cf\u6389\n}\n\nint main()\n{\n    input();\n    topo_sort();\n    dp();\n    output();\n    return 0;\n}\n```",
        "postTime": 1548741402,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "#Pascal\u7684SPFA\u7adf\u7136\u6ca1\u6709\uff1f\uff01\u6211\u6765\u8865\u4e00\u53d1#\n\n\u5176\u5b9e\u8fd9\u9898\u662f\u4e2a\u5f88\u88f8\u5f88\u88f8\u7684\u6bd4\u6700\u77ed\u8def\u6a21\u677f\u8fd8\u8981\u88f8\u7684\u201c\u6700\u957f\u8def\u201d\u5566\uff01\u6211\u7528\u4e86SPFA\u7b97\u6cd5\uff0c\u628a\u677e\u5f1b\u64cd\u4f5c\u7684\u7b26\u53f7\u6539\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u7136\u540e\u628a\u6781\u5927\u503c\u6539\u6210\u6781\u5c0f\u503c\uff0c\u5c31\u8fd9\u6837AC\u4e86\uff01\u672c\u6765\u4ee5\u4e3a\u9700\u8981\u8003\u8651\u5f88\u591a\u4e1c\u897f......\n\n\u7136\u800c\u697c\u4e0b\u7684\u5927\u4f6c\u4eec\u90fd\u7528\u7684\u662f\u90a3\u79cd\u975e\u6307\u9488\u4f2a\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u7684\u8fb9\uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\u53ea\u4f1a\u7528\u6570\u7ec4\u6a21\u62df\u90bb\u63a5\u8868......\u4e5f\u662f\u4e00\u79cd\u65b9\u6cd5\u561b\uff0c\u4e3a\u6211\u8fd9\u79cd\u849f\u84bb\u51c6\u5907\u7684\u3002\n\n\u732e\u4e0a\u6211\u90a3\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvar\n  n,m,i,j,h,t,x,y,z,oo:longint;\n  a,c:array[0..2000,0..5000]of longint;\n  dis:array[0..2000]of longint;\n  b:array[0..2000]of boolean;\n  q:array[0..5000000]of longint;\nprocedure spfa();\nvar\n  i:longint;\nbegin\n  for i:=1 to n do\n    begin dis[i]:=oo; b[i]:=false; end;\n  h:=0; t:=1; q[t]:=1; dis[1]:=0; b[1]:=true; //\u8d77\u70b9\u5165\u961f\u5217\n  while h<t do \n    begin\n      inc(h); x:=q[h]; b[x]:=false;\n      for i:=1 to a[x,0] do \n        begin\n          y:=a[x,i];\n          if dis[x]+c[x,i]<dis[y] then continue; //\u6c42\u7684\u662f\u6700\u957f\u8def\uff0c\u90a3\u4e48\u5982\u679c\u5c0f\u4e8e\uff0c\u5c31\u4e0d\u7528\u66f4\u65b0\uff0c\u76f4\u63a5continue\n          dis[y]:=c[x,i]+dis[x]; //\u66f4\u65b0\n          if b[y] then continue; //\u5df2\u7ecf\u5728\u961f\u5217\u4e2d\u4e86\u5c31continue\n          inc(t); q[t]:=y; b[y]:=true; //\u52a0\u5165\u961f\u5217\n        end;\n    end;\nend;\nbegin\n  oo:=maxlongint shr 2*(-1); //\u6781\u5c0f\u503c\n  readln(n,m);\n  for i:=1 to n do \n    for j:=1 to n do \n      c[i,j]:=oo; //c\u6570\u7ec4\u5bf9\u5e94a\u6570\u7ec4\uff0c\u5b58\u50a8\u6743\u503c\uff0c\u6570\u7ec4\u6a21\u62df\u90bb\u63a5\u8868\n  for i:=1 to m do \n    begin\n      readln(x,y,z);\n      inc(a[x,0]); a[x,a[x,0]]:=y; c[x,a[x,0]]:=z; //a[x,0]\u5b58\u50a8\u51fa\u5ea6\n    end;\n  spfa();\n  if dis[n]=oo then write(-1) else write(dis[n]); //\u8d70\u4e0d\u5230\u8f93\u51fa-1\nend.\n\n```",
        "postTime": 1504150586,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "# \u6d1b\u8c37P1807\u9898\u89e3\n\n### 1\u3001\u89e3\u9898\u601d\u8def\n\n\u9119\u4eba\u4e0d\u624d\uff0c\u8fd8\u6ca1\u5b66\u8fc7\u4ec0\u4e48\u56fe\u8bba\u7b97\u6cd5\uff08SPFA\u4ec0\u4e48\u7684\uff09\uff0c\u53ea\u5b66\u8fc7\u4e86DP\u3002  \nDAG\u4e0a\u7684DP\uff0c\u603b\u6bd4\u90a3\u4e9b\u7b97\u6cd5\u7b80\u5355\u3002\n\n\u90a3\u4e48\u5177\u4f53\u601d\u8def\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u5b9a\u4e49 $dp(i)$ \u4e3a\u4ee5 $i$ \u5f00\u5934\u7684\u6700\u957f\u8def\u7528 $d[i]$ \u6765\u8bb0\u5f55\u7ed3\u679c\uff0c\u7136\u540e\u7528\u90bb\u63a5\u8868\u6765\u50a8\u5b58\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u90a3\u4e48\u5982\u4f55\u6c42$dp(i)$\u5462\uff1f\u904d\u5386\u6240\u6709\u53ef\u4ee5\u901a\u5411\u7684\u8fb9 ~~\uff08\u591f\u901a\u4fd7\u6613\u61c2\uff09~~\uff0c\u5982\u679c\u5230\u4e0d\u4e86\u7ec8\u70b9\uff0c\u8fd4\u56de-1\uff0c\u5426\u5219\u8fd4\u56de\u957f\u5ea6\u3002  \n\u8be6\u89c1\u4ee3\u7801\u3002\n\n\u8fd8\u6709\u6700\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u5373\u6211\u95193\u6b21\u7684\u8fd9\u4e00\u70b9\uff0c\u5c31\u662f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u4e24\u6761\u8fb9\uff0c\u6bcf\u6b21\u8981\u53d6\u6700\u5927\u7684\u3002\n\n### 2\u3001\u89e3\u9898\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int N=1500+5;\nlong long G[N][N];//\u90bb\u63a5\u8868\nlong long d[N];\nint n;\n\nlong long dp(int x){\n\tlong long& ans=d[x];\n\tif(ans>=0)return ans;//\u8bb0\u5fc6\u5316\uff0c\u8fd9\u4e2a\u7b97\u8fc7\u4e86\n\tif(n==x)return ans=0;//\u5230\u8fbe\u7ec8\u70b9\n\tfor(int i=1;i<=n;i++){\n\t\tif(G[x][i]&&dp(i)!=-1)ans=max(ans,d[i]+G[x][i]);\n        //\u5982\u679c\u7b54\u6848\u4e0d\u662f\u65e0\u89e3\n\t}\n\treturn ans;\n}\n\nint main(){\n\tmemset(d,-1,sizeof(d));//\u5168\u90e8\u8d4b\u503c\u6210-1\u4e0d\u4f1aWA\n\tint m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tint a,b;\n\t\tlong long v;\n\t\tscanf(\"%d%d%lld\",&a,&b,&v);\n\t\tG[a][b]=max(G[a][b],v);//\u5751\u70b9\n\t}\n\tprintf(\"%lld\",dp(1));\n\treturn 0;\n}\n```\n",
        "postTime": 1551795730,
        "uid": 84626,
        "name": "sss7020",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P1807)\n\n**\u601d\u8def\u70b9\u64ad\uff1a**\n\n**\u6570\u636e\u7ed3\u6784\uff1a**\u7528\u7ed3\u6784\u4f53e\u4fdd\u5b58\u6bcf\u4e00\u6761\u8fb9\uff0cd[i]\u8868\u793a\u4ece1\u5230i\u7684\u6700\u957f\u8def\uff0cv[i]==true\u5219\u8868\u793ai\u53f7\u8282\u70b9\u5728\u961f\u5217q\u4e2d\uff0cv[i]==false\u5219\u8868\u793a\u4e0d\u5728\uff0cb[i]==true\u5219\u8868\u793a1\u53ef\u4ee5\u5230\u8fbei\uff0cb[i]==false\u5219\u8868\u793a1\u4e0d\u80fd\u5230\u8fbei\n\n**\u7b97\u6cd5\u8fc7\u7a0b\uff1a**\n\n1\u3001\u8bfb\u5165\u6570\u636e\uff0c\u5e76\u50a8\u5b58\u6bcf\u4e00\u6761\u8fb9\n\n```cpp\nconst int N=1510,M=50100;\nstruct node{\n    int next,to,len;\n}e[M];int head[N],cnt;\nvoid add_node_edge(int x,int y,int z){\n    e[++cnt]=(node){head[x],y,z};head[x]=cnt;\n}\nint main(){\n    n=read();m=read();\n    for(i=1;i<=m;i++){\n        x=read();y=read();z=read();\n        add_node_edge(x,y,z);\n        //\u82e5\u9898\u76ee\u4e3a\u65e0\u5411\u56fe\uff0c\u5219\u518d\u52a0\u4e00\u53e5\uff1a\n        //add_node_edge(y,x,z)\n    }\n}\n```\n\u5176\u4e2d\uff0cread()\u51fd\u6570\u4e3a\u8bfb\u5165\u4f18\u5316\uff08\u542c\u8bf4\u6bcf500\u4e07\u4e2a\u6570\u636e\u53ef\u7701100ms\uff09\n\n```cpp\n#define g(c) isdigit(c)\n#define gc getchar()\ninline int read(){\n    char c=0;int x=0,f=0;\n    while (!g(c)) f|=c=='-',c=gc;\n    while (g(c)) x=x*10+c-48,c=gc;\n    return f?-x:x;\n}\n//\u9700\u8981\u8c03\u7528cctype\u5e93\n```\n\n2\u3001\u5957\u7528spfa\u7b97\u6cd5\n\n```cpp\nqueue<int> q;bool v[N],b[N];\ninline void spfa_algorithm(){\n    memset(d,0,sizeof(d));\n    memset(v,1,sizeof(v));\n    memset(b,0,sizeof(b));\n    q.push(1);v[1]=false;b[1]=1;\n    //1\u53f7\u8282\u70b9\u53ef\u4ee5\u5230\u8fbe\n    while (q.size()){\n        int z=q.front();q.pop();v[z]=1;\n        for(int i=head[z];i;i=e[i].next){\n            register int u=e[i].to;\n            if (d[u]<d[z]+e[i].len){\n                d[u]=d[z]+e[i].len;b[u]=1;\n                //u\u53f7\u8282\u70b9\u88ab\u6269\u5c55\u5230\u8bf4\u660e\u5b83\u53ef\u4ee5\u5230\u8fbe\n                if (v[u]){\n                    q.push(u);v[u]=false;\n                }\n            }\n        }\n    }\n}\n```\n\n3\u3001\u6839\u636eb[n]\u548cd[n]\u7684\u503c\u8f93\u51fa\n\n```cpp\nif (b[n]==0) printf(\"-1\");//n\u53f7\u8282\u70b9\u65e0\u6cd5\u5230\u8fbe\uff0c\u8f93\u51fa-1\nelse printf(\"%d\",d[n]);//n\u53f7\u8282\u70b9\u53ef\u4ee5\u5230\u8fbe\uff0c\u8f93\u51fa\u6700\u957f\u8def\n```\n\n[\u8bc4\u6d4b\u8bb0\u5f55\uff1a](https://www.luogu.org/recordnew/show/16178194)\n\n\u72b6\u6001/\u5206\u6570\uff1aAccepted\uff0c100\u5206\n\n\u8bed\u8a00/\u957f\u5ea6\uff1aC++\uff0c1.21KB\n\n\u8017\u65f6/\u5185\u5b58\uff1a57ms\uff0c1552KB\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1510,M=50100;\nstruct node{\n    int next,to,len;\n}e[M];int head[N],cnt;\nvoid add_node_edge(int x,int y,int z){\n    e[++cnt]=(node){head[x],y,z};head[x]=cnt;\n}\nint d[N],n,m,i,x,y,z;\n#define g(c) isdigit(c)\n#define gc getchar()\ninline int read(){\n    char c=0;int x=0,f=0;\n    while (!g(c)) f|=c=='-',c=gc;\n    while (g(c)) x=x*10+c-48,c=gc;\n    return f?-x:x;\n}\nqueue<int> q;bool v[N],b[N];\ninline void spfa_algorithm(){\n    memset(d,0,sizeof(d));\n    memset(v,1,sizeof(v));\n    memset(b,0,sizeof(b));\n    q.push(1);v[1]=false;b[1]=1;\n    while (q.size()){\n        int z=q.front();q.pop();v[z]=1;\n        for(int i=head[z];i;i=e[i].next){\n            register int u=e[i].to;\n            if (d[u]<d[z]+e[i].len){\n                d[u]=d[z]+e[i].len;b[u]=1;\n                if (v[u]){\n                    q.push(u);v[u]=false;\n                }\n            }\n        }\n    }\n}\nint main(){\n    n=read();m=read();\n    for(i=1;i<=m;i++){\n        x=read();y=read();z=read();\n        add_node_edge(x,y,z);\n    }\n    spfa_algorithm();\n    if (b[n]==0) printf(\"-1\");\n    else printf(\"%d\",d[n]);\n    return 0;\n}\n```\n\n\u6700\u540e\uff0c\u8bf4\u4e00\u4e0b\u4e07\u80fd\u5934bits/stdc++.h\n\nnoi\u6bd4\u8d5b\u6587\u4ef6\u4e2d\u8bf4\uff1a**\u7406\u8bba\u4e0a**\u53ef\u4ee5\u7528\u4e07\u80fd\u5934\uff0c\u4f46\u5b9e\u9645\u4e2d\u53ef\u80fd\u4e0d\u652f\u6301\u4f7f\u7528\u4e07\u80fd\u5934\uff0c\u82e5\u56e0\u4e3a\u4f7f\u7528\u4e07\u80fd\u5934\u800c\u5bfc\u81f4CE\uff08\u7f16\u8bd1\u9519\u8bef\uff09\uff0c\u6bd4\u8d5b**\u6982\u4e0d\u8d1f\u8d23**\uff0c\u5373**\u9009\u624b\u8d1f\u5168\u8d23**\uff01\uff01\uff01\n\n\u6240\u4ee5\uff0c\u6bd4\u8d5b\u65f6\u5efa\u8bae**\u4e0d\u8981**\u4f7f\u7528\u4e07\u80fd\u5934\uff0c\u5e73\u65f6\u53ef\u4ee5\u7a0d\u5fae\u4f7f\u7528\u4e00\u4e0b",
        "postTime": 1549888175,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u7528\u666e\u901a\u7684SPFA\u5c31\u80fd\u8fc7\uff0c\u5c31\u662f\u8981\u6ce8\u610f\u961f\u5217\u8981\u5f00\u7684\u5927\u4e00\u4e9b\uff0c\u4e0d\u7136\u4f1aWA\u51e0\u4e2a\u70b9\uff0c\u6211\u81ea\u5df1\u56e0\u4e3a\u961f\u5217\u5f00\u7684\u5c0f\u8c03\u4e86\u597d\u4e45\uff0c\u7a0b\u5e8f\u5728\u4e0b\u65b9\n\n\u4ee3\u7801\u4e2d\u7528\u6570\u7ec4\u6a21\u62df\u90bb\u63a5\u8868\u5b58\u8fb9\uff0c\u5b58\u8fb9\u65f6\u4ee3\u7801\u5f88\u7cbe\u7b80\uff0c\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b\uff0c\u6211\u4e5f\u662f\u8ddf\u522b\u4eba\u5b66\u7684\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int MAXN=1505,MAXM=50005;\nint firstEdge[MAXN],endPoint[MAXM],nextEdge[MAXM],p;\nint myQueue[500005],tail=0,head=0,n,m,t;\nint weight[MAXM],dist[MAXN];\nint main()\n{\n    cin>>n>>m;\n    for(int i=2;i<=n;i++)dist[i]=-1;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&t,&endPoint[i],&weight[i]);\n        nextEdge[i]=firstEdge[t]; firstEdge[t]=i;\n    };\n    myQueue[tail++]=1;\n    while(tail>head)\n    {\n        t=myQueue[head++];\n        p=firstEdge[t];\n        while(p)\n        {\n            if(dist[endPoint[p]]<dist[t]+weight[p])\n            {\n                dist[endPoint[p]]=dist[t]+weight[p];\n                myQueue[tail++]=endPoint[p];\n            };\n            p=nextEdge[p];\n        };\n    };\n    cout<<dist[n];\n    return 0;\n}\n```",
        "postTime": 1471998166,
        "uid": 6549,
        "name": "DarkKris",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u62d3\u6251\u6392\u5e8f\u505a\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u5730\u65b9\u5c31\u662f\u8981\u5bf9\u6570\u636e\u9884\u5904\u7406\u4e00\u4e0b\u3002\u6839\u636e\u9898\u76ee\uff0c\u627e\u51fa\u4ece1\u5230n\u7684\u6700\u957f\u8def\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u9884\u5904\u7406\u63891\u4ee5\u5916\u5176\u4ed6\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u4ee5\u53ca\u9664\u53bb\u5b83\u4eec\u4e4b\u540e\u884d\u751f\u51fa\u6765\u7684\u5165\u5ea6\u4e3a0\u7684\u70b9......\u5426\u5219\uff0c\u5c06\u4f1a\u5bf9\u540e\u9762\u7684\u62d3\u6251\u6392\u5e8f\u9020\u6210\u5f71\u54cd\uff0c\u5177\u4f53\u600e\u4e48\u5f71\u54cd\u7684\u5c31\u662f\u6709\u7684\u70b9\u53ef\u80fd\u9664\u4e0d\u5e72\u51c0\u5165\u5ea6\u3002\u53ef\u4ee5\u7528BFS\u5b9e\u73b0\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0bf[j]:=max(f[j],f[i]+v[i,j])\uff08f[j]:1-j\u7684\u6700\u957f\u8def\u5f84)\u3002\n\n\u9644Pascal\u4ee3\u7801\uff08\u91cc\u9762\u6709\u4e00\u4e9b\u5f88\u5947\u602a\u7684\u6ca1\u7528\u7684\u5730\u65b9\uff0c\u5c5e\u4e8e\u6211\u770b\u4e0d\u61c2\u9898\u76ee\u800c\u52a0\u7684\u4fdd\u9669\uff0c\u8bf7\u81ea\u884c\u5224\u65ad\u53bb\u7559\uff09\uff1a\n\n```delphi\nprogram foodweb;\nconst maxn=1501;\n      maxm=50001;\nvar h,d,f,q:array[1..maxn] of longint;\n    v,next,w:array[1..maxm] of longint;\n    i,j,k,p,n,m,l,hd,tl,s,nt:longint;\nfunction mx(a,b:longint):longint;\nbegin\n    if a>b then exit(a) else exit(b);\nend;\nprocedure swap;\nbegin\n    if i=j then exit;\n    i:=i xor j;\n    j:=i xor j;\n    i:=i xor j;\nend;\nbegin\n    read(n,m);\n    fillchar(f,sizeof(f),0);\n    fillchar(d,sizeof(d),0);\n    fillchar(h,sizeof(h),0);\n    p:=0;\n\n    for k:=1 to m do\n    begin\n        read(i,j,l);\n        inc(p);\n        if i>=j then swap;\n        v[p]:=j;\n        w[p]:=l;\n        inc(d[j]);\n        next[p]:=h[i];\n        h[i]:=p;\n    end;\n    f[n]:=-1;\n    hd:=0;tl:=0;\n    for i:=2 to n do\n    begin\n        if d[i]=0 then\n        begin\n            inc(tl);\n            q[tl]:=i;\n        end;\n    end;\n    while hd<tl do\n    begin\n        inc(hd);\n        s:=q[hd];\n        nt:=h[s];\n        while nt>0 do\n        begin\n            dec(d[v[nt]]);\n            if d[v[nt]]=0 then\n            begin\n                inc(tl);\n                q[tl]:=v[nt];\n            end;\n            nt:=next[nt];\n        end;\n    end;\n    hd:=0;tl:=0;\n\n    inc(tl);\n    q[tl]:=1;\n    while hd<tl do\n    begin\n        inc(hd);\n        s:=q[hd];\n        nt:=h[s];\n        while nt>0 do\n        begin\n            dec(d[v[nt]]);\n            if d[v[nt]]=0 then\n            begin\n                inc(tl);\n                q[tl]:=v[nt];\n            end;\n            f[v[nt]]:=mx(f[v[nt]],f[s]+w[nt]);\n            nt:=next[nt];\n        end;\n    end;\n    writeln(f[n]);\nend.\n```",
        "postTime": 1440058920,
        "uid": 6553,
        "name": "why_always_china",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1807 \u3010\u6700\u957f\u8def_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0807\uff09\u3011"
    }
]