[
    {
        "content": "#### \u5199\u5728\u524d\u9762\n\n- \u611f\u8c22\u5de8\u4f6c yu__xuan \u7684\u5e2e\u52a9\uff01\n- \u539f\u672c\u9898\u89e3\u533a\u7684\u5927\u4f6c\u4eec\u5927\u90fd\u5199\u7684\u4e5d\u5c42\u5faa\u73af\uff0c\u5176\u5b9e\u6b64\u9898\u5982\u679c\u5199\u6210\u72b6\u538b\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e5d\u5c42\u5faa\u73af\u5199\u6210\u4e00\u5c42\uff0c\u975e\u4f46\u7b80\u6d01\u3001\u4ee3\u7801\u53ef\u8bfb\u6027\u5f3a\uff0c\u5e38\u6570\u4e5f\u6bd4\u76f4\u63a5\u4e5d\u7ef4 dp \u5c0f\u3002\n\n#### \u7b97\u6cd5\u601d\u8def\n\n\u7531\u4e8e\u6bcf\u4e00\u884c\u90fd\u53ea\u6709\u56db\u5f20\u724c\uff0c\u8003\u8651\u5199\u6210\u4e94\u8fdb\u5236\u72b6\u538b dp\u3002\n\n\u8bbe\u5f53\u524d\u72b6\u6001\u4e3a $t$\uff0c\u5219\u4e94\u8fdb\u5236\u72b6\u538b dp \u53d6\u51fa\u7b2c $i$ \u884c\u7684\u72b6\u6001\u7684\u65b9\u5f0f:$\\frac{t}{5^i}\\!\\!\\!\\!\\mod 5$\uff08\u89c6\u521d\u59cb\u884c\u4e3a\u7b2c $0$ \u884c\uff09\n\n\u56e0\u6b64\uff0c\u82e5\u8bbe\u7b2c $i$ \u884c\u7684\u7b2c $j$ \u5f20\u724c\u7684\u70b9\u6570\u4e3a $a_{i,j}$,\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\n$$\\large f_{t - 5^{p1} - 5^{p2}} = f_{t - 5^{p1} - 5^{p2}}  + f_t \\times p(a_{p1,\\frac{t}{5^p1}\\!\\!\\!\\!\\mod 5} = a_{p2,\\frac{t}{5^p2}\\!\\!\\!\\!\\mod 5})$$\n\n\u5176\u4e2d $p$ \u4e3a\u6b64\u6b21\u8f6c\u79fb\u7684\u6982\u7387\uff0c\u7b49\u4e8e\u4ece\u72b6\u6001 $t$ \u80fd\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u6570\u603b\u548c\u7684\u5012\u6570\u3002\n\n\u8fb9\u754c\u6761\u4ef6: $f_{5^9 - 1} = 1$\u3002\n\n\u5012\u5e8f\u679a\u4e3e\u6240\u6709\u72b6\u6001\uff0c\u6bcf\u5f53\u627e\u5230\u4e00\u4e2a\u5f53\u524d\u7b54\u6848\u4e0d\u4e3a $0$ \u7684\u72b6\u6001\u65f6\uff0c\u5148\u7edf\u8ba1\u51fa\u5b83\u80fd\u66f4\u65b0\u5230\u7684\u72b6\u6001\u6570\uff0c\u7b97\u51fa\u8f6c\u79fb\u7684\u6982\u7387 $P$\uff0c\u7136\u540e\u7528\u8be5\u72b6\u6001\u53bb\u66f4\u65b0\u5b83\u6240\u80fd\u66f4\u65b0\u5230\u7684\u72b6\u6001\u7684\u7b54\u6848\u3002\n\n\u7531\u4e8e\u4e00\u76f4\u5728\u62ff\u724c\uff0c\u8868\u793a\u72b6\u6001\u7684\u53d8\u91cf\u4f1a\u9010\u6e10\u51cf\u5c0f\uff0c\u5012\u5e8f\u679a\u4e3e\u72b6\u6001\u65f6\u53ef\u884c\u7684\u3002\n\n#### Tips\n\n- \u8bfb\u5165\u7684\u65f6\u5019\u7528\u7c7b\u4f3c\u4e8e\u5feb\u901f\u8bfb\u5165\u7684\u65b9\u5f0f\u8fc7\u6ee4\u4e00\u4e0b\u4e0d\u5408\u6cd5\u5b57\u7b26\u53ef\u4ee5\u6781\u5927\u5730\u7b80\u5316\u8bfb\u5165\u90e8\u5206\u7684\u4ee3\u7801\u3002\n\n- \u6251\u514b\u724c\u7684\u70b9\u6570\u4e0d\u7b49\u540c\u4e8e\u771f\u5b9e\u7684\u6251\u514b\u724c\u7684\u70b9\u6570\uff0c\u56e0\u6b64\u7edf\u8ba1\u7684\u65f6\u5019\u4e0d\u9700\u8981\u518d\u5bf9\u70b9\u6570\u8fdb\u884c\u5904\u7406\uff0c\u76f4\u63a5\u5c06 `char` \u8f6c\u6210 `int` \u5b58\u4e0b\u6765\u5373\u53ef\u3002\n\n#### Code\n\n```cpp\n#include<bits/stdc++.h>\n#define LF double\n\nconst int pow5[] = {1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125}; \nusing namespace std;\n\nLF f[1953125];\nint a[10][5];\n\nchar Getch() {char ch = getchar(); while((!isalpha(ch)) && (!isdigit(ch))) ch = getchar(); return ch;}\n\nint main() {\n\tfor(register int i = 0; i < 9; ++i) {\n\t\tfor(register int j = 1; j <= 4; ++j) {\n\t\t\ta[i][j] = Getch(); Getch();\n\t\t}\n\t}\n\tf[1953124] = 1.0;\n\tfor(register int t = pow5[9] - 1; t >= 0; --t) {\n\t\tif(f[t] == 0) continue;\n\t\tLF choise = 0;\n\t\tfor(register int p1 = 0; p1 < 9; ++p1) {\n\t\t\tfor(register int p2 = p1 + 1; p2 < 9; ++p2) {\n\t\t\t\tif((a[p1][t / pow5[p1] % 5] == a[p2][t / pow5[p2] % 5]) && ((t / pow5[p1] % 5) > 0) && ((t / pow5[p2] % 5) > 0)) choise++;\n\t\t\t}\n\t\t}\n\t\tLF P = f[t] * 1.0 / choise;\n\t\tfor(register int p1 = 0; p1 < 9; ++p1) {\n\t\t\tfor(register int p2 = p1 + 1; p2 < 9; ++p2) {\n\t\t\t\tif((a[p1][t / pow5[p1] % 5] == a[p2][t / pow5[p2] % 5]) && ((t / pow5[p1] % 5) > 0) && ((t / pow5[p2] % 5) > 0)) {\n\t\t\t\t\tf[t - pow5[p1] - pow5[p2]] += P;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lf\", f[0]);\n\treturn 0; \n}\n```",
        "postTime": 1603539564,
        "uid": 118196,
        "name": "zimujun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1837 \u3010\u5355\u4eba\u7eb8\u724c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u6982\u7387DP\u3002\u3002\u3002\n\nf[5][5][5][5][5][5][5][5][5]\u8868\u793a\u7684\u662f\u6bcf\u4e00\u5806\u53d6\u4e86x\u4e2a\u7684\u6982\u7387\n\n\u7136\u540e\u4e5d\u5c42\u5faa\u73af\u679a\u4e3e\n\ntop\u6570\u7ec4\u662f\u6bcf\u4e2a\u5806\u5f97\u5806\u9876\u4f4d\u7f6e\n\n\u627e\u51fa\u6240\u6709\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u6982\u7387\u5c31\u8981\u52a0\u4e0a\u4e0a\u4e00\u4e2a\u72b6\u6001\u7684\u6982\u7387\\*\uff08\u60c5\u51b5\u6570\u5206\u4e4b\u4e00\uff09\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<iostream>\nusing namespace std;\nint x,y,cnt,top[11];\ndouble f[5][5][5][5][5][5][5][5][5];\nchar a[1001][10];\nint main()\n{\n    for (x=1;x<=9;x++)//\u8bfb\u5165\u6570\u636e\n    {\n        char s[100];\n        gets(s+1);\n        a[x][1]=s[10];\n        a[x][2]=s[7];\n        a[x][3]=s[4];\n        a[x][4]=s[1];\n    }\n    f[0][0][0][0][0][0][0][0][0]=1;//\u521d\u59cb\u5316\n    for(top[1]=0;top[1]<=4;top[1]++)\n    for(top[2]=0;top[2]<=4;top[2]++)\n    for(top[3]=0;top[3]<=4;top[3]++)\n    for(top[4]=0;top[4]<=4;top[4]++)\n    for(top[5]=0;top[5]<=4;top[5]++)\n    for(top[6]=0;top[6]<=4;top[6]++)\n    for(top[7]=0;top[7]<=4;top[7]++)\n    for(top[8]=0;top[8]<=4;top[8]++)\n    for(top[9]=0;top[9]<=4;top[9]++)//\u3002\u3002\u3002\n    if(f[top[1]][top[2]][top[3]][top[4]][top[5]][top[6]][top[7]][top[8]][top[9]])\n    {\n    double p=f[top[1]][top[2]][top[3]][top[4]][top[5]][top[6]][top[7]][top[8]][top[9]];\n    cnt=0;\n    for(x=1;x<9;x++)\n    for(y=x+1;y<=9;y++)\n    if(top[x]+1<=4&&top[y]+1<=4&&a[x][top[x]+1]==a[y][top[y]+1])\n        cnt++;\n    if(cnt>0)\n    for (x=1;x<9;x++)\n    for (y=x+1;y<=9;y++)\n    if (top[x]+1<=4&&top[y]+1<=4&&a[x][top[x]+1]==a[y][top[y]+1]) \n    {\n        top[x]++;top[y]++;\n        f[top[1]][top[2]][top[3]][top[4]][top[5]][top[6]][top[7]][top[8]][top[9]]+=p/(double)(cnt*1.0);\n        top[x]--;top[y]--;//\u56de\u6eaf\n    }\n    }\n    printf(\"%.6lf\",f[4][4][4][4][4][4][4][4][4]);\n}\n```",
        "postTime": 1510197581,
        "uid": 26396,
        "name": "std__unsigned",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1837 \u3010\u5355\u4eba\u7eb8\u724c_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "# \u80c6\u5b50\u8981\u5927\u4e00\u70b9\uff0c\u8981\u6562\u4e8e\u5b9e\u9a8c\n\n### \u2014\u2014\u9093\u5c0f\u5e73\n\n## 1.\u7b97\u6cd5\uff1a~~\u663e\u7136\u662f~~ \u671f\u671bDP\n\n## 2.\u72b6\u6001\uff1a\n**\u8fd9\u4e2a\u72b6\u6001\u7684\u8bbe\u8ba1\u662f\u975e\u5e38\u8003\u9a8c\u80c6\u91cf\u7684**\n\n$dp[g[1]][g[2]][g[3]][g[4]][g[5]][g[6]][g[7]][g[8]][g[9]]$\u8868\u793a\u7b2c$i,(i\\in [1,9])$\u5806\u6210\u529f\u53d6\u4e86$g[i]$\u5f20\u7684\u6982\u7387\n\novo\n\n## 3.\u8f6c\u79fb\uff1a\n\n\u5148\u7edf\u8ba1\u6709\u51e0\u5bf9\u76f8\u540c\u7684\uff0c\u7136\u540e\u627e\u5230\u5b83\u4eec\uff0c\u8f6c\u79fb\u6982\u7387\u3002\n\n\u4e0d\u8fc7\u8fd9\u91cc\u6709\u70b9\u5751\uff0c\u4e0b\u9762\u4f1a\u8bb2\u3002\n\n\u65b9\u7a0b\u592a\u957f\u8fd9\u91cc\u5c31\u4e0d\u5199\u4e86\u5177\u4f53\u770b\u4ee3\u7801\u5427\n\n## 4.\u8fb9\u754c\n\n$dp[0][0][0][0][0][0][0][0][0]=1$(\u4ec0\u4e48\u90fd\u4e0d\u53d6\u4e00\u5b9a\u884c\uff0c\u6982\u7387\u4e3a1)\n\n$ans=dp[4][4][4][4][4][4][4][4][4]$ (\u53d6\u5b8c\u4e86)\n\n## 5.\u5751\u70b9\n\n\u8f93\u5165\u987a\u5e8f\u662f\u7531\u5806\u5e95\u5230\u5806\u9876\u7ed9\u51fa\uff0c\u6ce8\u610f\u8f93\u5165\u987a\u5e8f\n\n\u7edf\u8ba1\u76f8\u540c\u7684\u65f6\u5019\u6ce8\u610f\u4e0d\u8981\u91cd\u590d\n\n\u8f6c\u79fb\u7684\u65f6\u5019\u8fb9\u754c\u4e0d\u80fd\u5927\u4e8e4\n\n~~\u6211\u4f1a\u51fa\u8fd9\u4e9b\u95ee\u9898\u4e00\u5b9a\u56e0\u4e3a\u6211\u592a\u83dc\u4e86~~\n\n## 6.~~\u559c\u95fb\u4e50\u89c1\u7684~~ \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define For(x,i,j) for (x=i;x<=j;x++)\nusing namespace std;\n\ndouble dp[5][5][5][5][5][5][5][5][5]={1},tmp;\nint g[10];\nchar a[10][5];\nstring s;\n\nint main()\n{\n\tfor (int i=1;i<=9;i++)\n\t{\n\t\tfor (int j=4;j>=1;j--)\n\t\t{\n\t\t\tcin>>s;a[i][j]=s[0];\n//\t\t\tcout<<a[i][j]<<' '; \n\t\t}\n//\t\tcout<<endl;\n\t}\n\t\t\n\t\t\n\tFor(g[1],0,4) For(g[2],0,4) For(g[3],0,4) \n\tFor(g[4],0,4) For(g[5],0,4) For(g[6],0,4) \n\tFor(g[7],0,4) For(g[8],0,4) For(g[9],0,4)\n\tif (dp[g[1]][g[2]][g[3]][g[4]][g[5]][g[6]][g[7]][g[8]][g[9]])\n\t{\n\t\ttmp=dp[g[1]][g[2]][g[3]][g[4]][g[5]][g[6]][g[7]][g[8]][g[9]];\n\t\tint cnt=0;\n\t\tfor (int i=1;i<=9;i++)\n\t\t\tfor (int j=i+1;j<=9;j++)\n\t\t\t\tif (g[i]+1<=4&&g[j]+1<=4&&a[i][g[i]+1]==a[j][g[j]+1]) cnt++;\n\t\tif (cnt>0)\n\t\t\tfor (int i=1;i<=9;i++)\n\t\t\t\tfor (int j=i+1;j<=9;j++)\n\t\t\t\t\tif (g[i]+1<=4&&g[j]+1<=4&&a[i][g[i]+1]==a[j][g[j]+1])\n\t\t\t\t\t{\n\t\t\t\t\t\tg[i]++;g[j]++;\n\t\t\t\t\t\tdp[g[1]][g[2]][g[3]][g[4]][g[5]][g[6]][g[7]][g[8]][g[9]]+=tmp/(double(cnt));\n\t\t\t\t\t\tg[i]--;g[j]--;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t}\n\tprintf(\"%.6lf\",dp[4][4][4][4][4][4][4][4][4]);\n\treturn 0;\n} \n```\n",
        "postTime": 1555070894,
        "uid": 87005,
        "name": "QQQfy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1837 \u3010\u5355\u4eba\u7eb8\u724c_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8bb0\u5fc6\u5316\u641c\u7d22dp\u3002\u8bb0\u5f55\u72b6\u6001\u4e3a\u7b2c$k$\u4e2a\u724c\u5806\u5f53\u4e2d\u5df2\u7ecf\u62bd\u8d70\u4e86\u51e0\u5f20\u724c\uff0c\u4e8e\u662f\u7528\u4e5d\u7ef4\u8bb0\u5f55\u72b6\u6001\uff1b\u7136\u540e\u6240\u6c42\u7684\u503c\u5c31\u662f\u8f93\u7684\u6982\u7387\u3002\u72b6\u6001\u8f6c\u79fb\u4fbf\u662f\u5728\u6709$i,j$\u7684\u4e24\u4f4d\u6392\u76f8\u540c\u65f6\u8f6c\u79fb\u8fc7\u6765\uff0c\u7136\u540e\u603b\u503c\u9664\u4ee5\u53ef\u80fd\u7684\u91cf\u3002\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\n\u7528map\u6765\u8bb0\u5f55\uff0c\u72b6\u6001\u7528struct\u8bb0\u5f55\uff0c\u7565\u5fae\u5e38\u6570\u6709\u70b9\u5927\uff0c\u4f46\u662f\u7a0b\u5e8f\u53ef\u8bfb\u6027\u66f4\u5f3a\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define db double\nusing namespace std;\ninline int read() {\n    int x = 0,tmp = 1;char ch = getchar();\n    while( ch < '0' || ch > '9' ) { if( ch == '-' ) tmp = -1; ch = getchar();}\n    while( ch >= '0' && ch <= '9'){ x = x * 10 + ch - '0'; ch = getchar(); }\n    return x * tmp;\n}\nint num[9][4];\nstruct stat__ {\n    int s[9];\n    stat__() { }\n    stat__( int a, int b, int c, int d, int e, int f, int g, int h, int i ) {\n        s[0] = a; s[1] = b; s[2] = c; s[3] = d; s[4] = e; s[5] = f; s[6] = g; s[7] = h; s[8] = i;\n    }\n    bool operator < ( const stat__& b ) const {\n        for( int i = 0 ; i < 9 ; ++ i ) if( s[i] < b.s[i] ) return 1;\n        else if( s[i] > b.s[i] ) return 0;\n        return 0;\n    }\n};\nmap< stat__, db > dp;\ndb dfs( stat__ now ) {\n    if( dp.count( now ) ) return dp[now];\n    int t = 0;\n    for( int i = 0 ; i < 9 ; ++ i ) t += now.s[i]; if( t == 4 * 9 ) {\n        dp.insert( make_pair( now, 0 ) );\n        return 0;\n    } \n    t = 0; db res = 0; stat__ tmp = now;\n    for( int i = 0 ; i < 9 ; ++ i ) if( now.s[i] == 4 ) continue; else\n        for( int j = i + 1 ; j < 9 ; ++ j ) if( now.s[j] == 4 ) continue; else if( num[i][now.s[i]] == num[j][now.s[j]] ) {\n            tmp.s[i] ++; tmp.s[j] ++;\n            res += dfs( tmp ); t ++;\n            tmp.s[i] --; tmp.s[j] --;\n        }\n    if( t == 0 ) dp.insert( make_pair( now, 1 ) ); else dp.insert( make_pair( now, res / (db)t ) );\n    return dp[now];\n}\ninline bool isdigit( char c ) {\n    return ( c <= '9' && c >= '0' );\n}\ninline bool isalpha( char c ) {\n    return ( c <= 'Z' && c >= 'A' );\n}\nvoid init() {\n    char ch;\n    for( int i = 0 ; i < 9 ; ++ i )\n        for( int j = 3 ; j >= 0 ; -- j ) {\n            ch = getchar();\n            while( !isdigit( ch ) && !isalpha( ch ) ) ch = getchar();\n            if( ch == 'A' ) num[i][j] = 1;\n            else if( ch == 'T' ) num[i][j] = 10;\n            else if( ch == 'J' ) num[i][j] = 11;\n            else if( ch == 'Q' ) num[i][j] = 12;\n            else if( ch == 'K' ) num[i][j] = 13;\n            else num[i][j] = ch - '0';\n            ch = getchar();\n            while( !isdigit( ch ) && !isalpha( ch ) ) ch = getchar();\n        } \n}\nint main() {\n    init();\n    db ans = dfs( stat__( 0, 0, 0, 0, 0, 0, 0, 0, 0 ) );\n    printf( \"%.6lf\", 1.0 - ans );\n    return 0;\n}\n```",
        "postTime": 1503391535,
        "uid": 30533,
        "name": "ARZhu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1837 \u3010\u5355\u4eba\u7eb8\u724c_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0804\uff09\u3011"
    }
]