[
    {
        "content": "\u8003\u8651\u79fb\u52a8\u7684\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u8ba9\u539f\u672c\u4e0d\u76f8\u90bb\u7684 $x$ \u548c $x+1$ \u53d8\u5f97\u76f8\u90bb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u6761\u6781\u957f\u300c\u9f99\u300d\uff08\u5373\u540c\u4e00\u5217\u4e2d $a_i=x+1,a_{i+1}=x$ \u7684\u6781\u957f\u8fde\u7eed\u6bb5\uff09\u7f29\u5728\u4e00\u8d77\uff0c\u79f0\u4e3a\u4e00\u4e2a\u70b9\uff0c\u5219\u6bcf\u6b21\u79fb\u52a8\u540e\u70b9\u6570 $-1$\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6709\u89e3\uff0c\u90a3\u4e48\u6b65\u6570\u4e00\u5b9a\u662f\u70b9\u6570 $-1$\u3002\n\n\u73b0\u5728\u5148\u662f\u5982\u4f55\u5224\u5b9a\u6709\u89e3\uff0c\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7\u66b4\u529b\u627e\u6240\u6709\u53ef\u79fb\u52a8\u7684\u70b9\u79fb\u52a8\u6765\u5b9e\u73b0\u6a21\u62df\u7684\u6548\u679c\uff0c\u4f46\u8fd9\u6837\u96be\u5199\uff0c\u5e76\u4e14\u5bf9\u7b2c\u4e8c\u95ee\u5e2e\u52a9\u4e0d\u5927\u3002\n\n\u8003\u8651\u5efa\u51fa\u5982\u4e0b\u4e00\u4e2a\u56fe\uff0c$i\\rightarrow j$ \u5b58\u5728\u8868\u793a $i$ \u9700\u8981\u5728 $j$ \u4e4b\u524d\u79fb\u52a8\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u8fb9\u53c8\u5206\u4e3a\u4e24\u79cd\uff1a\n\n$1.$ $i$ \u540c\u4e00\u724c\u5806\uff0c\u4e14\u6bd4 $i$ \u66f4\u9760\u53f3\u7684\u70b9\u9700\u8981\u5148\u88ab\u79fb\u5f00\u624d\u80fd\u79fb\u52a8 $i$\u3002\n\n$2.$ \u5047\u8bbe $i$ \u9700\u8981\u79fb\u52a8\u5230\u7684\u4f4d\u7f6e\u662f $x$\uff0c\u5219\u4e0e $x$ \u540c\u4e00\u724c\u5806\uff0c\u4e14\u6bd4 $x$ \u66f4\u9760\u53f3\u7684\u70b9\u9700\u8981\u5148\u88ab\u79fb\u5f00\u624d\u80fd\u628a $i$ \u79fb\u5230 $x$ \u540e\u65b9\u3002\n\n\u8fd9\u4e24\u79cd\u5efa\u8fb9\u90fd\u53ef\u4ee5\u76f4\u63a5\u540e\u7f00\u4f18\u5316\u5efa\u56fe\u505a\u5230 $O(n)$ \u7684\u590d\u6742\u5ea6\u3002\n\n\u5219\u6709\u89e3\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u56fe\u662f\u4e00\u4e2a DAG\u3002\n\n\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u4e5f\u5f88\u660e\u663e\uff0c\u5373\u5bf9\u4e8e $x$ \u6240\u5bf9\u5e94\u7684\u70b9\u8003\u8651\u6709\u591a\u5c11 DAG \u4e0a\u7684\u70b9\u53ef\u8fbe\u5b83\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 bitset \u505a\u5230 $O(\\dfrac{n^2}{w})$\uff0c\u6ce8\u610f\u62d3\u6251\u6392\u5e8f\u5220\u4e0d\u6389\u7684\u70b9\u7b54\u6848\u662f $-1$\uff0c\u4ee5\u53ca\u6700\u540e\u4e00\u4e2a\u70b9\uff08\u5373 $n$ \u6240\u5c5e\u7684\u70b9\uff09\u7b54\u6848\u4e3a $-1$\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\ninline int read(){\n\tre int t=0;re char v=getchar();\n\twhile(v<'0')v=getchar();\n\twhile(v>='0')t=(t<<3)+(t<<1)+v-48,v=getchar();\n\treturn t;\n}\nint n,m,fa[50002],sum,px[50002],py[50002],mx[50002],head[50002],cnt,low[50002],d[50002],S,ed[50002],lst;\nvector<int>V[50002];\nqueue<int>q;\nbitset<50002>B[50002];\nstruct edge{int to,next;}e[100002];\ninline void add(re int x,re int y){e[++cnt]=(edge){y,head[x]},head[x]=cnt;++d[y];}\ninline int root(re int x){return x==fa[x]?x:fa[x]=root(fa[x]);}\nint main(){\n\tread();\n\tn=read(),m=read();\n\tfor(re int i=1;i<=n;++i)fa[i]=i,ed[i]=i;\n\tfor(re int i=1;i<=m;++i){\n\t\tre int x=read();\n\t\twhile(x--)V[i].push_back(read());\n\t\tfor(re int j=1;j<V[i].size();++j)if(V[i][j]==V[i][j-1]-1)fa[V[i][j]]=V[i][j-1],ed[root(V[i][j])]=V[i][j];\n\t\tif(V[i].size())lst=V[i][0];\n\t\tfor(re int j=1;j<V[i].size();++j)if(fa[V[i][j]]==V[i][j])add(V[i][j],lst),lst=V[i][j];\n\t\tfor(re int j=0;j<V[i].size();++j)px[V[i][j]]=i,py[V[i][j]]=j; \n\t}\n\tfor(re int i=1;i<=n;++i)sum+=fa[i]==i;\n\tfor(re int i=1;i<=m;++i)mx[i]=0;\n\tfor(re int i=1;i<=m;++i){\n\t\tfor(re int j=0;j<V[i].size();++j)\n\t\t\tif(fa[V[i][j]]==V[i][j]&&V[i][j]!=n){\n\t\t\t\tre int x=ed[root(V[i][j]+1)];\n\t\t\t\tif(py[x]==V[px[x]].size()-1)continue;\n\t\t\t\tx=V[px[x]][py[x]+1];\n\t\t\t\tadd(x,V[i][j]);\n\t\t\t}\n\t}\n\tfor(re int i=1;i<=n;++i)if(!d[i])q.push(i);\n\twhile(!q.empty()){\n\t\tre int x=q.front();q.pop();++S;B[x][x]=1;\n\t\tif(x==n)continue;\n\t\tfor(re int i=head[x];i;i=e[i].next){\n\t\t\tB[e[i].to]|=B[x];\n\t\t\tif(!--d[e[i].to])q.push(e[i].to);\n\t\t}\n\t}\n\tre int ss=0;\n\tfor(re int i=1;i<=n;++i)ss|=d[i];\n\tif(ss)puts(\"NO\");\n\telse puts(\"YES\"),printf(\"%d\\n\",sum-1);\n\tB[n].reset();\n\tfor(re int i=1;i<=n;++i){\n\t\tre int x=root(i);\n\t\tif(!B[x].count()||d[x])puts(\"-1\");\n\t\telse printf(\"%d\\n\",B[x].count());\n\t}\n}\n```\n",
        "postTime": 1632480232,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P7877"
    },
    {
        "content": "\u663e\u7136\u5bf9\u4e8e\u724c\u5806\u4e2d\u8fde\u7eed\u7684\u4e00\u7ec4\u6570\u5e94\u8be5\u4e00\u8d77\u88ab\u79fb\u8d70\uff0c\u8fd9\u6837\u6574\u4e2a\u724c\u7ec4\u5c31\u88ab\u5206\u6210\u4e86\u51e0\u4e2a\u90e8\u5206\u3002\u5bf9\u4e8e\u6837\u4f8b\u4e00\u662f\u8fd9\u6837\uff1a\n\n```\n9 8 / 4 3 2 1\n7 / 5\n6\n```\n\n\u5bf9\u4e8e\u7b2c $i$ \u4e2a\u90e8\u5206\uff0c\u8bbe $fa_i$ \u8868\u793a\u724c\u5806\u4e2d\u5728\u5b83\u4e0a\u9762\u7684\u90a3\u4e2a\u90e8\u5206\uff08 \u5982\u679c\u6ca1\u6709\u5219 $fa_i=0$ \uff09\uff0c$link_i$ \u8868\u793a\u5b83\u5e94\u8be5\u79fb\u5230\u8fd9\u4e2a\u90e8\u5206\u7684\u4e0a\u9762\u3002$fa_i$ \u8ba9\u6bcf\u4e2a\u90e8\u5206\u8fde\u6210\u4e86\u4e00\u68f5\u6811\uff0c$link_i$ \u5219\u8ba9\u6bcf\u4e2a\u90e8\u5206\u8fde\u6210\u4e86\u4e00\u6761\u94fe\u3002\n\n\u4e0b\u9762\u662f\u6837\u4f8b\u4e00\u4e2d\u7684 $fa$ \u6811\u548c $link$ \u94fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xlj7z8if.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/t979at4e.png)\n\n\u8bbe $f_i$ \u8868\u793a\u7ed3\u70b9 $i$ \u4ee3\u8868\u7684\u90e8\u5206\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\u724c\u5806\u7684\u6700\u9876\u7aef\uff0c$g_i$ \u8868\u793a\u662f\u5426\u53ef\u4ee5\u88ab\u79fb\u8d70\uff0c\u5219\u6709\n\n$$\n\\begin{aligned}\nf_i &=g_{fa_i} \\\\\ng_i &=f_i \\land f_{link_i}\n\\end{aligned}\n$$\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e00\u904d bfs \u89e3\u51b3\u3002\u5982\u679c\u80fd\u591f\u83b7\u80dc\uff0c\u90a3\u4e48\u9664\u4e86\u6700\u5927\u7684\u90a3\u4e00\u90e8\u5206\uff0c\u5176\u5b83\u90e8\u5206\u90fd\u9700\u8981\u88ab\u79fb\u8d70\uff0c$g$ \u503c\u5e94\u8be5\u4e3a\u771f\u3002\u6bcf\u4e00\u6b21\u79fb\u52a8\u90fd\u4f1a\u6709\u4e00\u90e8\u5206\u88ab\u79fb\u8d70\uff0c\u6240\u4ee5\u6700\u5c0f\u7684\u6b69\u6570\u4e3a\u90e8\u5206\u7684\u6570\u91cf\u51cf\u53bb 1\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u6c42\u51fa\u7b2c $i$ \u90e8\u5206\u81f3\u5c11\u9700\u8981\u591a\u5c11\u6b65\u88ab\u79fb\u8d70\uff0c\u4e5f\u5c31\u662f\u95ee\u8981\u79fb\u8d70 $i$ \u5c31\u81f3\u5c11\u9700\u8981\u79fb\u8d70\u51e0\u4e2a\u90e8\u5206\u3002\n\n\u82e5\u8981\u79fb\u8d70 $i$\uff0c\u90a3\u4e48 $i$ \u7684\u4e0a\u9762\uff0c\u4e5f\u5c31\u662f $fa_i$ \u5fc5\u987b\u8981\u5148\u88ab\u79fb\u8d70\u3002\u540c\u65f6\uff0c$link_i$ \u7684\u4e0a\u9762\uff0c\u4e5f\u5c31\u662f $fa_{link_i}$ \u4e5f\u9700\u8981\u88ab\u79fb\u8d70\u3002\u679a\u4e3e\u7ed3\u70b9\uff0c\u7528 dfs \u6807\u8bb0\u9700\u8981\u79fb\u8d70\u7684\u70b9\u5e76\u7edf\u8ba1\u6570\u91cf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u53ef\u4ee5\u83b7\u5f97 85pts \u7684\u597d\u6210\u7ee9\u3002\n\n\u8003\u8651\u4f18\u5316\u3002\u5efa\u4e00\u5f20\u65b0\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $i$\uff0c\u7528\u5355\u5411\u8fb9\u8fde\u63a5\u5230 $fa_i$ \u548c $fa_{link_i}$\uff0c\u90a3\u4e48\u9700\u8981\u88ab\u79fb\u8d70\u7684\u70b9\u6570\u5c31\u7b49\u4e8e\u65b0\u56fe\u4e2d\u4ece $i$ \u51fa\u53d1\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u6570\u3002\n\n\u5bf9\u4e8e\u53ef\u4ee5\u88ab\u79fb\u8d70\u7684\u70b9\u5efa\u56fe\u540e\u5fc5\u7136\u4e0d\u4f1a\u51fa\u73b0\u73af\uff0c\u5426\u5219\u5c31\u4f1a\u6709 \u201c\u5b83\u88ab\u79fb\u8d70\u4e4b\u524d\u5148\u8981\u79fb\u8d70\u81ea\u5df1\u201d \u7684\u60c5\u51b5\u3002\u6240\u4ee5\u62d3\u6251\u6392\u5e8f\u5e76\u7528 bitset \u7edf\u8ba1\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\dfrac{n^2}{w})$\uff0c\u53ef\u4ee5\u83b7\u5f97\u6ee1\u5206\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\nusing namespace std;\nconst int Maxn=5e4;\n\ninline int read()\n{\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9')\n    {\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    while(ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\n\nint T,n,m,s,ans=1,h[Maxn+5],ind[Maxn+5];\nint siz[Maxn+5],fa[Maxn+5],lnk[Maxn+5],pre[Maxn+5],g[Maxn+5];\nint id[Maxn+5],L[Maxn+5],R[Maxn+5],vis[Maxn+5],flag[Maxn+5];\nvector<int> crd[Maxn+5],v[Maxn+5],w[Maxn+5];\nbitset<Maxn+5> bst[Maxn+5];\n\ninline void bfs() // \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u83b7\u80dc\n{\n    queue<int> q; while(!q.empty()) q.pop();\n    q.push(0),vis[0]=1;\n    while(!q.empty())\n    {\n        int x=q.front(); q.pop();\n        if(flag[x]) continue;\n        flag[x]=1;\n        for(auto y:v[x])\n        {\n            vis[y]=1;\n            if(vis[y] && vis[lnk[y]]) q.push(y);\n            if(vis[pre[y]] && vis[y]) q.push(pre[y]);\n        }\n    }\n}\ninline void dfs(int x) // \u7edf\u8ba1\u53ef\u8fbe\u70b9\u7684\u6570\u91cf\n{\n    bst[x][x]=1;\n    for(auto y:w[x])\n    {\n        if(bst[y].none()) dfs(y);\n        bst[x]|=bst[y];\n    }\n}\n\nint main()\n{\n    T=read(),n=read(),m=read();\n    For(i,1,m) // \u5212\u5206\u70b9\n    {\n        siz[i]=read();\n        For(j,1,siz[i]) crd[i].push_back(read());\n        crd[i].push_back(0);\n    }\n    For(i,1,m)\n        Rof(j,siz[i]-1,0)\n        {\n            if(crd[i][j]==1 || crd[i][j]!=crd[i][j+1]+1) s++,L[s]=crd[i][j],fa[s]=id[crd[i][j+1]];\n            id[crd[i][j]]=s,R[s]=crd[i][j];\n        }\n    For(i,1,s) v[fa[i]].push_back(i); // \u8fde\u8fb9\n    For(i,1,n-1) if(id[i]!=id[i+1]) lnk[id[i]]=id[i+1],pre[id[i+1]]=id[i];\n    lnk[id[n]]=n+1;\n    bfs();\n    For(i,1,s) if(i!=id[n]) ans&=flag[i];\n    if(ans) printf(\"YES\\n%d\\n\",s-1);\n    else printf(\"NO\\n\");\n    For(i,1,s) // \u5efa\u65b0\u56fe\n    {\n        if(fa[i]) w[i].push_back(fa[i]),ind[fa[i]]++;\n        if(fa[lnk[i]]) w[i].push_back(fa[lnk[i]]),ind[fa[lnk[i]]]++;\n    }\n    For(i,1,s) if(!ind[i]) dfs(i);\n    For(i,1,s) g[i]=(flag[i]?bst[i].count():-1);\n    For(i,1,n) printf(\"%d\\n\",g[id[i]]);\n    return 0;\n}\n```",
        "postTime": 1657786441,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P7877\u3010\u300cSWTR-07\u300dSpider Solitaire\u3011"
    }
]