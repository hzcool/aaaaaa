[
    {
        "content": "## \u89e3\u9898\u601d\u8def\uff1a\n\n\u5206\u5757\u3002\n\n\u4e0d\u540c\u7684\u524d\u7f00$\\gcd$\u6709$O(\\log a)$\u4e2a\uff0c\u6bcf\u6b21\u53d8\u5316\u81f3\u5c11\u7f29\u5c0f\u5230\u539f\u6765\u7684\u4e00\u534a\u3002\n\n\u8bbe\u5757\u5927\u5c0f\u4e3a$S$\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u6709\uff1a\u6bcf\u4e2a\u5757\u7684\u5757\u5185$\\gcd$\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u7ed3\u5c3e\u7684\u524d\u7f00\u5f02\u6216\u548c\u3002\n\n\u8003\u8651\u4fee\u6539\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u8f6c\u5316\u4e3a\u5bf9\u4e00\u4e2a\u6570\u5f02\u6216\u4e0a\u53e6\u4e00\u4e2a\u6570$x$\uff0c\u5219\u8fd9\u4e2a\u6570\u53ca\u5176\u4e4b\u540e\u7684\u6570\u7684\u524d\u7f00\u5f02\u6216\u548c\u90fd\u4f1a\u5f02\u6216\u4e0a$x$\uff0c\u5757\u5185\u66b4\u529b\u4fee\u6539\uff0c\u533a\u95f4\u6253tag\u5373\u53ef\u3002\n\n\u7528set\u628a\u524d\u7f00\u5f02\u6216\u548c\u5b58\u8d77\u6765\u3002\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6$O(S\\log n+\\frac{n}{S})$\u3002\n\n\u8003\u8651\u67e5\u8be2\uff0c\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\u6bcf\u4e2a\u5757\uff0c\u7ef4\u62a4\u5f53\u524d\u524d\u7f00$\\gcd$\u3002\n\n\u82e5\u548c\u4e00\u4e2a\u65b0\u7684\u5757$\\gcd$\u540e\uff0c\u5176\u503c\u6539\u53d8\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u5757\u5185\u6709\u524d\u7f00$\\gcd$\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u76f4\u63a5\u66b4\u529b\u626b\u63cf\u6574\u5757\u5373\u53ef\u3002\u5982\u679c\u6ca1\u6539\u53d8\uff0c\u5219\u5176\u524d\u7f00$\\gcd$\u90fd\u76f8\u540c\uff0c\u76f4\u63a5\u5728set\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u7531\u4e8e\u5757\u5185\u66b4\u529b\u8fd8\u8981\u6c42$\\gcd$\uff0c\u5171\u6709$O(\\log a)$\u4e2a\u8fd9\u6837\u7684\u5757\u3002\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6$O(S\\log^2 a+\\frac{n\\log S}{S})$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<set>\nconst int N=100005,siz=318;\n#define gcd std::__gcd\n#define bel(x)((x-1)/siz+1)\n#define mp std::make_pair\ntypedef long long LL;\nint n,m,K,a[N],xp[N];\nLL qry;\nstruct BLOCK{\n\tint val[320],L,R,len,Gcd,Xor[320],tag;\n\tstd::set<std::pair<int,int>>s;\n\tvoid re(){\n\t\tGcd=val[1];\n\t\tfor(int i=2;i<=len;++i)Gcd=gcd(Gcd,val[i]);\n\t}\n\tvoid build(int l,int r){\n\t\tL=l,R=r,len=r-l+1;\n\t\tfor(int i=l;i<=r;++i)val[i-l+1]=a[i],Xor[i-l+1]=xp[i],s.insert(mp(xp[i],i-l+1));\n\t\tre();\n\t}\n\tvoid modify(int pos,int dlt){\n\t\tpos=pos-L+1;\n\t\tfor(int i=pos;i<=len;++i){\n\t\t\ts.erase(mp(Xor[i],i));\n\t\t\ts.insert(mp(Xor[i]^=dlt,i));\n\t\t}\n\t\tval[pos]^=dlt;\n\t\tre();\n\t}\n\tvoid get(int gg,int&ans){\n\t\tfor(int i=1;i<=len;++i){\n\t\t\tgg=gcd(gg,val[i]);\n\t\t\tif((LL)gg*(Xor[i]^tag)==qry){\n\t\t\t\tans=L+i-1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tvoid find(int gg,int&ans){\n\t\tif(qry%gg!=0)return;\n\t\tauto it=s.lower_bound(mp((qry/gg)^tag,0));\n\t\tif(it==s.end()||(it->first^tag)!=(qry/gg))return;\n\t\tans=it->second+L-1;\n\t}\n}b[320];\nint main(){\n\tscanf(\"%d\",&n);\n\tK=bel(n);\n\tfor(int i=0;i<n;++i)scanf(\"%d\",a+i),xp[i]=xp[i-1]^a[i];\n\tfor(int i=1;i<K;++i)b[i].build((i-1)*siz,i*siz-1);\n\tb[K].build((K-1)*siz,n-1);\n\tfor(scanf(\"%d\",&m);m--;){\n\t\tchar opt[12];\n\t\tscanf(\"%s\",opt);\n\t\tif(*opt=='M'){\n\t\t\tint pos,x;\n\t\t\tscanf(\"%d%d\",&pos,&x);\n\t\t\tconst int dlt=a[pos]^x;a[pos]=x;\n\t\t\tfor(int i=bel(pos)+1;i<=K;++i)b[i].tag^=dlt;\n\t\t\tb[bel(pos)].modify(pos,dlt);\n\t\t}else{\n\t\t\tscanf(\"%lld\",&qry);\n\t\t\tint Gcd=0,ans=666666;\n\t\t\tfor(int i=1;i<=K&&ans==666666;++i){\n\t\t\t\tint lst=Gcd;\n\t\t\t\tGcd=gcd(Gcd,b[i].Gcd);\n\t\t\t\tif(Gcd!=lst)b[i].get(lst,ans);else\n\t\t\t\tb[i].find(Gcd,ans);\n\t\t\t}\n\t\t\tif(ans==666666)puts(\"no\");else\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1550468706,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4108 \u3010[HEOI2015]\u516c\u7ea6\u6570\u6570\u5217\u3011"
    },
    {
        "content": "[P4108 [HEOI2015]\u516c\u7ea6\u6570\u6570\u5217](https://www.luogu.org/problemnew/show/P4108)\n\n\u8d81\u6ca1\u6709\u9898\u89e3\u8d76\u7d27\u62a2\u4e00\u53d1\u4e00\u8840\u3002\u3002\u3002\n\n\u672c\u6765\u60f3\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\uff0c\u7136\u540e\u53d1\u73b0\u6211\u597d\u50cf\u9700\u8981$3$\u4e2a$\\log_2n$\uff0c\u8fd9\u662f\u8981\u7206\u70b8\u7684\u8282\u594f\u554a\u3002\u3002\u3002\n\n\u6240\u4ee5\u6211\u4eec\u62ff\u51fa\u4e86\u5206\u5757\u3002\n\n\u4e00\u5f00\u59cb\u6211\u8fd8\u5728\u60f3\uff0c$GCD$\u548c$XOR$\u6709\u4ec0\u4e48\u8054\u7cfb\uff0c\u7136\u540e\u53d1\u73b0\uff0c\u8fd9\u4e0d\u9700\u8981\u8054\u7cfb\u554a\u3002\u3002\u3002\n\n\u9996\u5148\uff0c$GCD$\u6709\u4e2a\u8fd8\u7b97\u4e0d\u9519\u7684\u6027\u8d28\uff1a\n\n\u5bf9\u4e8e\u4e00\u5217\u6570\u7ec4\uff0c\u4ece\u5de6\u5f80\u53f3\u53d6\u524d\u7f00$gcd$\uff0c\u4e0d\u540c\u7684\u503c\u6700\u591a\u53ea\u6709$\\log_2n$\u79cd\u3002\n\n\u5e76\u4e14\u6bcf\u6b21\u503c\u5982\u679c\u6539\u53d8\uff0c\u90a3\u4e48\u524d\u7f00$gcd$\u7684\u503c\u81f3\u5c11\u9664\u4ee5\u4e8c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u7ef4\u62a4\u4e0b\u5217\u4fe1\u606f\uff1a\n\n\u5757\u5185\u6570\u636e$xor$\u548c\uff0c\u5757\u5185$gcd$\uff0c\u5757\u7684\u5934\u5c3e\u4e24\u4e2a\u6570\u7684\u524d\u7f00$gcd$\uff0c\u5757\u5185\u6bcf\u4e2a\u6570\u4ee5\u5757\u5de6\u7aef\u70b9\u4e3a\u5934\u7684\u524d\u7f00$xor$\u548c\u3002\n\n\u5bf9\u4e8e\u7b2c\u56db\u7c7b\u4fe1\u606f\uff0c\u8fd8\u9700\u8981\u7528\u67d0\u79cd\u65b9\u6cd5\uff0c\u4f7f\u5f97\u652f\u6301\u5728$\\log_2n$\u7684\u65f6\u95f4\u5185\u8be2\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6570\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\uff0c\u4fee\u6539\u4f4d\u7f6e\u6240\u5728\u5757\u66b4\u529b\u91cd\u6784\uff0c\u540e\u9762\u7684\u5757\u66f4\u65b0\u7b2c\u4e09\u7c7b\u4fe1\u606f\u5373\u53ef\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5982\u679c\u67d0\u4e2a\u5757\u7684\u7b2c\u4e09\u7c7b\u4fe1\u606f\u76f8\u7b49\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5757\u5185\u524d\u7f00$gcd$\u90fd\u4e0d\u53d8\uff0c\u6709\u6ca1\u6709\u89e3\u67e5\u8868\u5c31\u77e5\u9053\u4e86\u3002\n\n\u8fd9\u4e2a\u8868\u600e\u4e48\u641e\u5462\uff1f\n\n\u5047\u8bbe\u66b4\u529b\u626b\u63cf\uff0c\u5982\u679c\u524d\u9762\u7684\u5757\u6240\u53d6\u5230\u7684\u524d\u7f00$gcd$\u4e3a$lastgcd$\uff0c$xor$\u4e3a$lastxor$\u3002\n\n\u82e5$gcd(lastgcd,Gcd[r[i]])==lastgcd$\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u5757\u5185\u6240\u6709\u7684\u6570\u53d6$gcd$\u540e\u90fd\u662f$lastgcd$\uff0c\u90a3\u4e48$xor[j]=(\\frac{x}{lastgcd}\\quad xor \\quad lastxor)$\u3002\n\n\u7136\u540e\u5728\u53e6\u4e00\u4e2a\u6392\u597d\u5e8f\u7684\u6570\u7ec4\u4e2d\u4e8c\u5206\u67e5\u627e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5426\u5219\uff0c\u8fd9\u4e2a\u5757\u5185\u66b4\u529b\u8bbf\u95ee\u770b\u4e00\u4e0b\u662f\u5426\u6709\u89e3\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684$gcd$\u503c\u4e0d\u8d85\u8fc7$\\log_2n$\u79cd\uff0c\u6240\u4ee5\u66b4\u529b\u8bbf\u95ee\u6b21\u6570\u5e76\u4e0d\u591a\u3002\n\n\u6240\u4ee5\u590d\u6742\u5ea6\u5c31\u662f$O(n\\sqrt n\\log_2n)$\n\n[\u6709\u7a7a\u5c31\u5230\u672c\u849f\u84bb\u7684\u535a\u5ba2\u91cc\u559d\u559d\u8336\u54e6\uff01](https://www.cnblogs.com/Yangrui-Blog/p/9538578.html)\n\n\u9644\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#define MAXN 100010\nusing namespace std;\nint n,m,block;\nint colour[MAXN],Left[MAXN],Right[MAXN];\nlong long val[MAXN],gcd_sum[MAXN],xor_sum[MAXN];\nstruct node{\n\tlong long x;\n\tint id;\n\tfriend bool operator <(const node &p,const node &q){\n\t\tif(p.x==q.x)return p.id<q.id;\n\t\treturn p.x<q.x;\n\t}\n}a[MAXN];\ninline long long read(){\n\tlong long date=0,w=1;char c=0;\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\n\treturn date*w;\n}\nlong long gcd(long long x,long long y){\n\tif(!y)return x;\n\treturn gcd(y,x%y);\n}\nint half_find(int l,int r,long long x){\n\tint mid,ans=l;\n\twhile(l<=r){\n\t\tmid=l+r>>1;\n\t\tif(a[mid].x>=x){ans=mid;r=mid-1;}\n\t\telse l=mid+1;\n\t}\n\treturn ans;\n}\nvoid build(int x){\n\tgcd_sum[Left[x]]=xor_sum[Left[x]]=val[Left[x]];\n\ta[Left[x]]=(node){val[Left[x]],Left[x]};\n\tfor(int i=Left[x]+1;i<=Right[x];i++){\n\t\tgcd_sum[i]=gcd(gcd_sum[i-1],val[i]);\n\t\txor_sum[i]=xor_sum[i-1]^val[i];\n\t\ta[i]=(node){xor_sum[i],i};\n\t}\n\tsort(a+Left[x],a+Right[x]+1);\n}\nint solve(long long x){\n\tint ans=-1;\n\tlong long Gcd=val[1],Xor=0;\n\tfor(int i=1;i<=colour[n]&&ans==-1;i++){\n\t\tif(gcd(Gcd,gcd_sum[Right[i]])==Gcd){\n\t\t\tif(x%Gcd==0){\n\t\t\t\tlong long k=(x/Gcd)^Xor;\n\t\t\t\tint pos=half_find(Left[i],Right[i],k);\n\t\t\t\tif(a[pos].x==k){\n\t\t\t\t\tans=a[pos].id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tGcd=gcd(Gcd,gcd_sum[Right[i]]);Xor^=xor_sum[Right[i]];\n\t\t}\n\t\telse{\n\t\t\tfor(int j=Left[i];j<=Right[i];j++){\n\t\t\t\tGcd=gcd(Gcd,val[j]);Xor^=val[j];\n\t\t\t\tif(Gcd*Xor==x){\n\t\t\t\t\tans=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ans!=-1)break;\n\t\t}\n\t}\n\treturn ans;\n}\nvoid work(){\n\tchar ch[10];\n\tlong long x,y;\n\twhile(m--){\n\t\tscanf(\"%s\",ch);x=read();\n\t\tif(ch[0]=='M'){\n\t\t\tx++;y=read();\n\t\t\tval[x]=y;\n\t\t\tbuild(colour[x]);\n\t\t}\n\t\telse{\n\t\t\tint s=solve(x);\n\t\t\tif(s==-1)printf(\"no\\n\");\n\t\t\telse printf(\"%d\\n\",s-1);\n\t\t}\n\t}\n}\nvoid init(){\n\tn=read();\n\tblock=(int)sqrt(n);\n\tfor(int i=1;i<=n;i++){\n\t\tcolour[i]=(i-1)/block+1;\n\t\tif(!Left[colour[i]])Left[colour[i]]=i;\n\t\tRight[colour[i]]=i;\n\t\tval[i]=read();\n\t}\n\tfor(int i=1;i<=colour[n];i++)build(i);\n\tm=read();\n}\nint main(){\n\tinit();\n\twork();\n    return 0;\n}\n\n```",
        "postTime": 1535286713,
        "uid": 49998,
        "name": "\u65af\u5fb7\u54e5\u5c14\u6469",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4108 \u3010[HEOI2015]\u516c\u7ea6\u6570\u6570\u5217\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u4e0d\u7528\u5927\u5206\u5757\u7684\u5c0f\u6e05\u65b0\u3001\u5927\u5e38\u6570\u7b97\u6cd5\u3002\n\n[\u300cHEOI2015\u300d\u516c\u7ea6\u6570\u6570\u5217](https://www.luogu.com.cn/problem/P4108)\n\n> \u7ed9\u5b9a\u5e8f\u5217\uff0c\u652f\u6301\u4e24\u4e2a\u64cd\u4f5c\uff1a\n>\n> - \u5355\u70b9\u4fee\u6539\u3002\n> - \u6c42\u6ee1\u8db3 $\\gcd(a_1,a_2,\\cdots,a_p)\\times \\operatorname{xor}(a_1,a_2,\\cdots,a_p)=x$ \u7684\u6700\u5c0f\u7684 $p$\u3002\n\n\u9996\u5148\u5e94\u5f53\u6709\u654f\u611f\u6027\uff0c\u672c\u8d28\u4e0d\u540c\u524d\u7f00 $\\gcd$ \u53ea\u6709 $\\log V$ \u6bb5\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u6bcf\u6bb5\u5904\u7406\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5bf9\u6bb5\u7684\u91cd\u6784\u53ea\u9700\u5229\u7528\u8f7b\u91cf\u7ea7\u7684\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u505a\u5230 $O(\\log ^2 n)$\uff0c\u5e76\u975e\u672c\u7b97\u6cd5\u7684\u91cd\u70b9\u3002\n\n\u81f3\u6b64\uff0c\u95ee\u9898\u53d8\u4e3a\u6bcf\u6b21\u8be2\u95ee\u6700\u5c0f\u7684\u6ee1\u8db3 $a_i=x/\\gcd(a_l,\\cdots,a_r),i\\in[l,r]$ \u7684 $i$\uff0c\u5176\u4e2d $a_i$ \u8868\u793a $i$ \u7684\u524d\u7f00\u5f02\u6216\u548c\u3002\n\n\u8fd9\u770b\u4e0a\u53bb\u6bd4\u8f83\u68d8\u624b\uff0c\u5982\u679c\u6ca1\u6709\u4fee\u6539\uff0c\u4e00\u4e2a `set<pair<int, int>>` \u53ef\u4ee5\u80dc\u4efb\u3002\u5176\u5b9e\u5982\u679c\u6709\u4fee\u6539\u4e5f\u4e0d\u96be\u3002\n\n\u53ef\u4ee5\u8bb0\u5f55\u4fee\u6539\u7684\u70b9\uff0c\u6bcf\u6b21\u5f71\u54cd\u5230\u5b83\u5f00\u59cb\u7684\u540e\u7f00\u7684 \u201c\u524d\u7f00\u5f02\u6216\u503c\u201d\uff0c\u6bcf\u6b21\u8be2\u95ee\u65f6\uff0c\u539f\u5e8f\u5217\u88ab\u8fd9\u4e9b\u70b9\u5206\u5272\u6210\u4e86\u82e5\u5e72\u6bb5\u3002\n\n\u6bcf\u6b21\u76f4\u63a5\u5206\u6bb5\u8be2\u95ee\uff0c\u4f46\u6bb5\u6570\u591a\u4e86\u53c8\u4f1a\u5f71\u54cd\u8be2\u95ee\u590d\u6742\u5ea6\u3002\n\n\u4e8e\u662f\u8bbe\u7f6e\u9608\u503c\uff0c\u8fd9\u4e9b\u70b9\u6570\u91cf\u8d85\u8fc7\u540e\u5c31\u76f4\u63a5\u91cd\u6784\uff0c\u5373\u53ef\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\u7b80\u5355\u5206\u6790\u4e00\u4e0b\uff1a\n\n- \u8be2\u95ee\u590d\u6742\u5ea6\uff1a$O(q(B+\\log V)\\log n)$\u3002\n- \u4fee\u6539\u590d\u6742\u5ea6\uff1a$O(q(\\frac{n}{B}\\log n+log^2n))$\u3002\n\n\u5f53 $B=\\sqrt n$ \u65f6\u53d6\u5230\u6700\u4f18\uff0c\u5927\u6982\u548c\u5927\u5206\u5757\u7684 $O(n\\sqrt n\\log n)$ \u5e73\u8d77\u5e73\u5750\u3002\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\n#define rep(i, a, b) for(int i = (a); i <= (b); i ++)\n#define per(i, a, b) for(int i = (a); i >= (b); i --)\n#define Ede(i, u) for(int i = head[u]; i; i = e[i].nxt)\nusing namespace std;\n\nLL read() {\n\tLL x = 0, f = 1; char c = getchar();\n\twhile(c < '0' || c > '9') f = (c == '-') ? - 1 : 1, c = getchar();\n\twhile(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n\treturn x * f;\n}\n\ntypedef pair<int, int> PII;\n#define fi first\n#define se second\n#define mp make_pair\n\nconst int N = 1e5 + 10;\nconst int inf = 0x7fffffff;\nint n, q, B, a[N];\n\nint dat[N << 2];\n\nint Gcd(int a, int b) {while(b) {int c = a; a = b, b = c % b;} return a;}\n\nvoid Upd(int p) {dat[p] = Gcd(dat[p << 1], dat[p << 1 | 1]);}\n\nvoid Bui(int p, int l, int r) {\n\tif(l == r) {dat[p] = a[l]; return;}\n\tint mid = (l + r) >> 1;\n\tBui(p << 1, l, mid), Bui(p << 1 | 1, mid + 1, r);\n\tUpd(p);\n}\n\nvoid Moi(int p, int l, int r, int k, int v) {\n\tif(l == r) {dat[p] = v; return;}\n\tint mid = (l + r) >> 1;\n\tif(k <= mid) Moi(p << 1, l, mid, k, v);\n\telse Moi(p << 1 | 1, mid + 1, r, k, v);\n\tUpd(p);\n}\n\nint Que(int p, int l, int r, int k) {\n\tif(r <= k) return dat[p];\n\tint mid = (l + r) >> 1;\n\tif(k <= mid) return Que(p << 1, l, mid, k);\n\treturn Gcd(dat[p << 1], Que(p << 1 | 1, mid + 1, r, k));\n}\n\nint Ask(int p, int l, int r, int v) {\n\tif(l == r) return (dat[p] % v == 0) ? l : 0;\n\tint mid = (l + r) >> 1;\n\tif(dat[p << 1] % v == 0)\n\t\treturn max(mid, Ask(p << 1 | 1, mid + 1, r, v));\n\telse\n\t\treturn Ask(p << 1, l, mid, v);\n}\n\nint t, lt[N], rt[N], vt[N];\n\nvoid Divide(int s) {\n\tint las = t, p = 1;\n\tt = 0;\n\twhile(p <= las && rt[p] < s - 1) t ++, p ++;\n\t\n\twhile(true) {\n\t\tif(rt[t] == n) break;\n\t\tint cur = rt[t] + 1;\n\t\tint val = Que(1, 1, n, cur);\n\t\tint nxt = Ask(1, 1, n, val);\n\t\tt ++, lt[t] = cur, rt[t] = nxt, vt[t] = val;\n\t}\n}\n\nint tot; PII arc[N];\nset<PII> st;\n\nvoid Remake() {\n\tst.clear(), tot = 0;\n\tint pre = 0;\n\trep(i, 1, n)\n\t\tpre ^= a[i], st.insert(mp(pre, i));\n}\n\nvoid Modify(int x, int v) {\n\tv = a[x] ^ v;\n\ta[x] ^= v;\n\n\tif(! tot) {\n\t\tarc[tot = 1] = mp(x, v);\n\t\treturn;\n\t}\n\n\tint cur = lower_bound(arc + 1, arc + tot + 1, mp(x, 0)) - arc;\n\tif(cur <= tot && arc[cur].fi == x) arc[cur].se ^= v;\n\telse {\n\t\tper(i, tot, cur) arc[i + 1] = arc[i];\n\t\tarc[cur] = mp(x, v), tot ++;\n\t}\n\t\n\tif(tot > B) {Remake();}\n}\n\nint Query(int l, int r, LL x, int g, int pre) {\n\tif(r < l || x % g != 0) return n + 1;\t\n\tLL v = (x / g) ^ (LL) pre;\n\tif(v > inf) return n + 1;\n\n\tauto it = st.lower_bound(mp(v, l));\n\tif(it == st.end()) return n + 1;\n\tif((it -> fi) != v || (it -> se) > r) return n + 1;\n\treturn (it -> se);\n}\n\nint main() {\n\tn = read();\n\trep(i, 1, n) a[i] = read();\n\t\n\tBui(1, 1, n);\n\tDivide(1), Remake();\n\t\n\tB = (int) sqrt(n);\n\t\n\tq = read();\n\twhile(q --) {\n\t\tchar opt[10]; scanf(\"%s\", opt);\n\t\tif(opt[0] == 'M') {\n\t\t\tint x = read() + 1, v = read();\n\t\t\tMoi(1, 1, n, x, v);\n\t\t\tDivide(x);\n\t\t\tModify(x, v);\n\t\t}\n\t\telse {\n\t\t\tLL x = read();\n\t\t\tint p = 1, pre = 0, ans = n + 1;\n\t\t\trep(i, 1, t) {\n\t\t\t\tint lc = lt[i], rc = 0;\n\t\t\t\twhile(p <= tot && arc[p].fi <= rt[i]) {\n\t\t\t\t\trc = arc[p].fi - 1;\n\t\t\t\t\tans = min(ans, Query(lc, rc, x, vt[i], pre));\n\t\t\t\t\tif(ans <= n) break;\n\n\t\t\t\t\tpre ^= arc[p].se, lc = arc[p].fi;\n\t\t\t\t\tp ++;\n\t\t\t\t}\n\t\t\t\tif(ans <= n) break;\n\t\t\t\tif(rc < rt[i])\n\t\t\t\t\trc = rt[i], ans = min(ans, Query(lc, rc, x, vt[i], pre));\n\t\t\t\tif(ans <= n) break;\n\t\t\t}\n\t\t\tif(ans == n + 1) puts(\"no\");\n\t\t\telse printf(\"%d\\n\", ans - 1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1650627198,
        "uid": 117941,
        "name": "_LPF_",
        "ccfLevel": 9,
        "title": "P4108 [HEOI2015]\u516c\u7ea6\u6570\u6570\u5217"
    },
    {
        "content": "\u611f\u89c9\u9700\u8981\u63a8\u5bfc\u7684\u4e1c\u897f\u8fd8\u662f\u6bd4\u8f83\u591a\u7684\u3002\u4f46\u662f\u4ee5\u540e\u8981\u8bb0\u7740\u770b\u5230\u5947\u602a\u7684\uff08\uff1f\uff09\u6570\u636e\u8303\u56f4\u65f6\u8981\u60f3\u5230\u5206\u5757\u3002\n\n\u8fd9\u4e2a\u9898\u6709\u4e00\u5b9a\u7684\u7279\u70b9\uff0c\u5c31\u662f\u4e24\u4e2a\u8868\u8fbe\u5f0f\u90fd\u662f\u524d\u7f00\u5f62\u5f0f\u3002\u5bf9\u4e8e $\\gcd$ \u800c\u8a00\uff0c\u5b83\u4e00\u5b9a\u662f\u9012\u51cf\u7684\uff0c\u800c\u4e14\u4e0d\u540c\u7684\u6570\u503c\u6700\u591a\u53ea\u6709 $O(\\log a_i)$ \u4e2a\uff0c\u56e0\u4e3a\u6bcf\u6b21\u81f3\u5c11\u4f1a\u53d8\u4e3a\u539f\u6765\u7684 $\\frac 12$\u3002\u56e0\u6b64**\u4ea7\u751f\u53d8\u5316\u7684**\u4f4d\u7f6e\u662f\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u7684\u3002\n\n\u6ce8\u610f\u5230\u8be2\u95ee\u662f $10000$ \u7684\uff0c\u4e0d\u662f\u5f88\u5927\u3002\u6211\u4eec\u5bf9\u539f\u533a\u95f4\u8fdb\u884c $O(\\sqrt n)$ \u5206\u5757\u3002\n\n\u56e0\u4e3a\u8981\u627e\u7684\u662f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u5e94\u8be5\u4ece\u524d\u5f80\u540e\u679a\u4e3e\u3002\u5bf9\u4e8e $\\gcd$ \u6574\u5757\u4e0d\u53d8\u7684\u90a3\u4e9b\u5757\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u5176\u4e2d\u662f\u5426\u5b58\u5728**\u5f02\u6216\u524d\u7f00\u548c**\u6070\u597d\u4e3a $x/\\gcd$ \u7684\u3002\u8fd9\u4e00\u8be2\u95ee\u53ef\u4ee5\u7528 `std::map` \u6765\u89e3\u51b3\u3002\n\n\u5f53\u6d89\u53ca\u5355\u70b9\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u5f53\u524d\u5757\u4e2d\u7684 `map` \u8fdb\u884c\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5b9e\u9645\u4e0a `map` \u4e2d\u5b58\u7684\u662f\u5f53\u524d\u5757\u4e2d\u7684\u5f02\u6216\u524d\u7f00\u548c\uff0c\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u67e5\u8be2\u90fd\u662f\u4ece\u524d\u5f80\u540e\u67e5\uff0c\u53ef\u4ee5\u79ef\u7d2f\u4e00\u5b9a\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u4e0d\u5fc5\u4e5f\u4e0d\u80fd\u7ef4\u62a4\u5168\u5c40\u524d\u7f00\u548c\uff0c\u4e0d\u7136\u4fee\u6539\u65f6\u5f71\u54cd\u7684\u8303\u56f4\u592a\u5927\u3002\n\n\u4e0d\u8fc7\u5206\u5757\u7684\u7ec6\u8282\u633a\u591a\u7684\uff0c\u5305\u62ec\u8fb9\u754c\u4e00\u7c7b\u7684\u3002\u8fd8\u8981\u6ce8\u610f\u590d\u6742\u5ea6\uff0c\u4e0d\u80fd\u628a `gcd()` \u51fd\u6570\u5f53 $O(1)$ \u7684\u64cd\u4f5c\u7528\u554a\u554a\u554a\u554a\u554a\u554a\u2026= =\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log a_i+q\\sqrt n\\log a_i)$\u3002\n\n## Code\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<map>\n#include<cmath>\n#define inf 2147438647\nusing std::map;\nint gcd(int x,int y)\n{\n    while(y)\n    {\n        int t=y;\n        y=x%y;\n        x=t;\n    }\n    return x;\n}\nmap<int,int> f[400];\nint a[400][400],g[400][400];\nint G[400],sum[400];\nint main()\n{\n    int n,m,u;\n    scanf(\"%d\",&n);\n    int b=sqrt(n),tmp=0;\n    for(int i=1;i<=n;++i)\n    {\n        int x=(i-1)/b,y=(i-1)%b+1;\n        scanf(\"%d\",&a[x][y]);\n        tmp^=a[x][y];\n        g[x][y]=gcd(a[x][y],g[x][y-1]);\n        G[x]=g[x][y];\n        if(f[x].find(tmp)==f[x].end())\n            f[x][tmp]=y;\n        if(x!=i/b)\n        {\n            sum[x]=tmp;\n            g[x+1][0]=G[x];\n            tmp=0;\n        }\n    }\n    scanf(\"%d\",&m);\n    char op[100];\n    int tot=ceil((double)n/b)-1;\n    while(m--)\n    {\n        scanf(\"%s\",op);\n        if(op[0]=='M')\n        {\n            scanf(\"%d\",&u);\n            ++u;\n            int x=(u-1)/b,y=(u-1)%b+1;\n            scanf(\"%d\",&a[x][y]);\n            f[x].clear();\n            tmp=0;\n            g[x][0]=x?G[x-1]:0;\n            for(int j=1;j<=b;++j)\n            {\n                tmp^=a[x][j];\n                if(f[x].find(tmp)==f[x].end())\n                    f[x][tmp]=j;\n                g[x][j]=gcd(a[x][j],g[x][j-1]);\n                G[x]=g[x][j];\n            }\n            sum[x]=tmp;\n        }\n        else\n        {\n            long long k;\n            scanf(\"%lld\",&k);\n            int flag=0;\n            tmp=0;\n            int gtmp=a[0][1];\n            for(int i=0;i<=tot;++i)\n            {\n                if(!i||G[i]!=G[i-1])//\u66b4\u529b\n                {\n                    for(int j=1;j<=b;++j)\n                    {\n                        tmp^=a[i][j];\n                        gtmp=g[i][j];\n                        if((long long)tmp*gtmp==k)\n                        {\n                            flag=1;\n                            printf(\"%d\\n\",i*b+j-1);\n                            break;\n                        }\n                    }\n                    if(flag)\n                        break;\n                }\n                else\n                {\n                    gtmp=G[i];\n                    if(k%gtmp==0&&k/gtmp<inf&&f[i].find(k/gtmp^tmp)!=f[i].end())\n                    {\n                        printf(\"%d\\n\",i*b+f[i][k/gtmp^tmp]-1);\n                        flag=1;\n                        break;\n                    }\n                    tmp^=sum[i];\n                }\n            }\n            if(flag)\n                continue;\n            puts(\"no\");\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1551704454,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4108 \u3010[HEOI2015]\u516c\u7ea6\u6570\u6570\u5217\u3011"
    },
    {
        "content": "\u559c\u95fb\u4e50\u89c1\u7684\u5927\u5206\u5757\u3002\n\n\u6ce8\u610f\uff0c\u6b64\u9898\u89e3\u6240\u6709\u7684\u4e0b\u6807\u4ece1\u5f00\u59cb\uff0c\u4ece\u800c\u4e0d\u540c\u4e8e\u9898\u9762\u7684\u63cf\u8ff0\uff0c\u6ce8\u610f\u4e0b\u6807\u95ee\u9898\u3002\n\n---\n\n\u8003\u8651\u5757\u957f\u4e3a$\\,B\\,$\uff0c\u90a3\u4e48\u603b\u5171\u6709$\\,\\dfrac{N}{B}\\,$\u4e2a\u5757\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u503c\uff1a$\\,xos\\,$\u5373\u8be5\u5757\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u548c\uff0c$\\,gcs\\,$\u8868\u793a\u8be5\u5757\u6240\u6709\u5143\u7d20\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002\n\n\u989d\u5916\u5730\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5f00\u4e00\u4e2a `std::map`$\\,xomap\\,$\uff0c$\\,xomap[x]\\,$\u7528\u6765\u8bb0\u5f55\u8be5\u5757\u5185\u90e8\u524d\u7f00\u5f02\u6216\u548c\u4e3a$\\,x\\,$\u7684\u6700\u5c0f\u7f16\u53f7\uff08\u5f62\u5f0f\u5316\u5730\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e$\\,S=\\{i|\\operatorname{xor}_{j=1}^{i}A_j=x\\}\\,$\u6765\u8bf4$\\,\\min_{r\\in S}r\\,$\u7684\u503c\uff0c\u5176\u4e2d$\\,A_k\\,$\u8868\u793a\u8be5\u5757\u5185\u7b2c$\\,k\\,$\u4e2a\u5143\u7d20\uff09\u3002\n\n\u9996\u5148\u8003\u8651\u4fee\u6539\u64cd\u4f5c\uff0c\u7531\u4e8e\u662f\u5355\u70b9\u4fee\u6539\uff0c\u800c\u4e14\u6211\u4eec\u7684\u4fe1\u606f\u53ea\u6d89\u53ca\u5757\u5185\uff0c\u800c\u4e0d\u6d89\u53ca\u5757\u5916\uff0c\u6240\u4ee5\u76f4\u63a5\u5bf9\u6240\u5728\u5757\u66b4\u529b\u91cd\u6784\u5373\u53ef\uff08\u5373\u91cd\u65b0\u66f4\u65b0\u4e00\u904d$\\,xos,gcs,xomap\\,$\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\,\\mathcal{O}(B\\log W)\\,$\uff0c\u5176\u4e2d$\\,W\\,$\u662f\u5143\u7d20\u503c\u57df\u4e0a\u754c\u3002\n\n\u7136\u540e\u8003\u8651\u8be2\u95ee\u64cd\u4f5c\uff0c\u5bb9\u6613\u53d1\u73b0\u7684\u4e24\u70b9\u662f\uff1a\n\n$\\,1.\\,$\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u5e8f\u5217\u662f\u5355\u8c03\u4e0d\u5347\u7684\u3002\n\n$\\,2.\\,$\u5047\u8bbe\u539f\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a$\\,U\\,$\uff0c\u90a3\u4e48~~\u7531\u4e8e\u6700\u5c0f\u7684\u975e$\\,1\\,$\u6b63\u6574\u6570\u662f$\\,2\\,$~~\uff0c\u6240\u4ee5\u8be2\u95ee\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u7684\u4e0d\u540c\u7684\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u81f3\u591a\u53ea\u6709$\\,\\log_2 U\\,$\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8003\u8651\u90a3\u4e9b\u4e0d\u6539\u53d8\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u7684\u5757\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u5757\u624d\u662f\u5360\u5927\u591a\u6570\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u7528\u4e24\u4e2a\u4e34\u65f6\u53d8\u91cf$\\,xotemp\\,$\u548c$\\,gcdtemp\\,$\u6765\u8bb0\u5f55\u8be2\u95ee\u8fc7\u7a0b\u4e2d\u7684\u524d\u7f00\u5f02\u6216\u548c\u4ee5\u53ca\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u3002\n\n$\\,(1)\\,$\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u6539\u53d8\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u7684\u5757\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa\u5728\u5757\u5185\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u4f4d\u7f6e$\\,k\\,$\uff0c\u4f7f\u5f97\n\n$$(xotemp\\operatorname{xor}\\operatorname{xor}_{i=1}^{k}A_i)\\times gcdtemp=x$$\n\n\u56e0\u4e3a$\\,xotemp\\,$\u662f\u4e4b\u524d\u6240\u6709\u5757\u7684\u524d\u7f00\u5f02\u6216\u548c\uff0c\u5f02\u6216\u4e0a$\\,\\operatorname{xor}_{i=1}^{k}A_i\\,$\u5c31\u662f\u4ee5$\\,A_k\\,$\u7ed3\u5c3e\u7684\u524d\u7f00\u5f02\u6216\u548c\u4e86\u3002\u53c8\u56e0\u4e3a\u8fd9\u662f\u4e2a\u4e0d\u6539\u53d8\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u7684\u5757\uff0c\u6240\u4ee5\u4ee5$\\,A_k\\,$\u7ed3\u5c3e\u7684\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u548c\u524d\u9762\u6240\u6709\u5757\u7684\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u4e00\u6837\uff0c\u5c31\u662f$\\,gcdtemp\\,$\u3002\n\n\u663e\u7136\u5b58\u5728\u8fd9\u4e2a\u4f4d\u7f6e$\\,k\\,$\u7684\u5145\u8981\u6761\u4ef6\u662f\n\n$$\\begin{aligned}&gcdtemp|x&(1)\\\\&\\exists k,\\,\\text{s.t.}\\,\\operatorname{xor}_{i=1}^{k}A_i=xotemp\\operatorname{xor}\\left(\\dfrac{x}{gcdtemp}\\right)&(2)\\end{aligned}$$\n\n\u5176\u4e2d$\\,\\text{s.t.}\\,$\u8868\u793a\u4f7f\u5f97\u5176\u6ee1\u8db3$\\,\\cdots\\,$\uff0c\u5f88\u663e\u7136\u5f0f\u5b50\u5de6\u8fb9\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u7528$\\,xomap\\,$\u7ef4\u62a4\u7684\u503c\uff0c\u76f4\u63a5\u67e5\u8be2\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\,\\mathcal{O}(\\log W)\\,$\uff0c\u53e6\u5916\u6ce8\u610f\u6b63\u786e\u7ef4\u62a4$\\,xotemp\\,$\u548c$\\,gcdtemp\\,$\u4e24\u4e2a\u503c\n\n\u5bf9\u4e8e\u90a3\u4e9b\u6539\u53d8\u524d\u7f00\u6700\u5927\u516c\u7ea6\u6570\u7684\u5757\uff0c\u7531\u4e8e\u6570\u91cf\u7a00\u5c11\uff08\u81f3\u591a\u53ea\u6709$\\,\\log_2 W\\,$\u5757\uff09\uff0c\u76f4\u63a5\u66b4\u529b\u904d\u5386\u5373\u53ef\u3002\n\n\u8fd9$\\,log_2 W$\u5757\u7684\u66b4\u529b\u904d\u5386\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\,\\mathcal{O}(\\log_2 W\\times B\\log W)\\,$\n\n\u56e0\u6b64\u603b\u7684\u8be2\u95ee\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$\\,\\mathcal{O}(Q(B\\log^{2}W+(\\dfrac{N}{B}-\\log W)\\log W))\\,$\n\n\u7406\u8bba\u4e0a\u8be2\u95ee\u5e94\u5728$\\,B=\\dfrac{\\sqrt{N}}{\\log W}\\,$\u65f6\u6700\u5c0f\uff0c\u4f46\u7531\u4e8e\u4fee\u6539\u64cd\u4f5c\u4ee5\u53ca\u5e38\u6570\u95ee\u9898\uff0c$\\,B=\\dfrac{\\sqrt{N}}{2}\\,$\u65f6\u66f4\u5feb\u3002\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\uff1a\n```c++\n#include <bits/stdc++.h>\ntypedef long long ll;\n\nnamespace io\n{\n    void read(int &x)\n    {\n        x = 0; int f = 1; char ch = getchar();\n        while (!isdigit(ch)) {if (ch == '-') f = -1; ch = getchar();}\n        while (isdigit(ch)) x = x * 10 + ch - 48, ch = getchar();\n        x *= f; return;\n    }\n    void read(char &x)\n    {\n        char ch = getchar();\n        while (!isalpha(ch)) ch = getchar();\n        x = ch; return;\n    }\n    void read(ll &x)\n    {\n        x = 0; int f = 1; char ch = getchar();\n        while (!isdigit(ch)) {if(ch == '-') f = -1; ch = getchar();}\n        while (isdigit(ch)) x = x * 10 + ch - 48, ch = getchar();\n        x *= f; return;\n    }\n}\nnamespace maths\n{\n    ll GCD(ll x, ll y)\n    {\n        return y ? GCD(y, x % y) : x;\n    }\n}\nnamespace problems\n{\n    using std::map;\n    using std::min;\n    using io::read;\n    using maths::GCD;\n\n    const int N = 300010, K = sqrt(N) / 2 + 1;\n    const int INF = 1e9 + 1;\n    int n, q;\n    int p, plen;\n    struct BLOCK\n    {\n        map<int, int> xomap;\n        int a[K];\n        int gcs, xos, len;\n\n        void clear(void)\n        {\n            xomap.clear();\n            xos = 0;\n            return;\n        }\n    }blk[N / K + 10];\n\n    int main()\n    {\n        read(n), plen = sqrt(n) / 2, p = (n - 1) / plen + 1;\n        for (int i = 1; i <= p; i ++)\n        {\n            blk[i].clear();\n            blk[i].len = (i == p) ? ((n - 1) % (plen) + 1) : plen;\n      \n            for (int j = 1; j <= blk[i].len; j ++)\n            {\n                read(blk[i].a[j]);\n                if (j == 1) blk[i].gcs = 0;\n                    blk[i].gcs = GCD(blk[i].a[j], blk[i].gcs);\n                blk[i].xos xor_eq blk[i].a[j];\n                if (blk[i].xomap.find(blk[i].xos) == blk[i].xomap.end())\n                      blk[i].xomap[blk[i].xos] = j;\n            }\n        }\n  \n        read(q);\n        char op; ll inpx, inpy;\n        for (int i = 1; i <= q; i ++)\n        {\n            read(op);\n            if (op == 'M')\n            {\n                read(inpx), read(inpy), inpx ++;\n                int posx = (inpx - 1) / plen + 1, posy = (inpx - 1) % plen + 1;\n                blk[posx].clear();\n\n                blk[posx].a[posy] = inpy;\n                blk[posx].gcs = 0;\n                for (int j = 1; j <= blk[posx].len; j ++)\n                {\n                    blk[posx].xos xor_eq blk[posx].a[j];\n                    if (blk[posx].xomap.find(blk[posx].xos) == blk[posx].xomap.end())\n                        blk[posx].xomap[blk[posx].xos] = j;\n                    blk[posx].gcs = GCD(blk[posx].gcs, blk[posx].a[j]);\n                }\n            }\n            else if (op == 'Q')\n            {\n                read(inpx);\n\n                bool flag = false;\n                ll xotemp = 0, gcdtemp = 0, ans;\n\n                for (int j = 1; j <= p; j ++)\n                {\n                    ll co_g = gcdtemp;\n                    ll testg = GCD(gcdtemp, blk[j].gcs);\n                    if (j != 1 && testg == co_g)\n                    {\n                        gcdtemp = GCD(co_g, blk[j].gcs);\n                        if (inpx % gcdtemp == 0 && blk[j].xomap.find((inpx / gcdtemp) xor xotemp) != blk[j].xomap.end())\n                        {\n                            flag = true;\n                            ans = (j - 1) * plen + blk[j].xomap[(inpx / gcdtemp) xor xotemp];\n                        }\n                        xotemp xor_eq blk[j].xos;  \n                    }\n                    else\n                    {\n                        for (int k = 1; k <= blk[j].len; k ++)\n                        {\n                            xotemp xor_eq blk[j].a[k];\n                            gcdtemp = GCD(gcdtemp, blk[j].a[k]);\n                            if (xotemp * gcdtemp == inpx)\n                            {\n                                flag = true;\n                                ans = (j - 1) * plen + k;\n                                break;\n                            }\n                        }\n                    }\n                    if (flag) break;\n                }\n                if (flag)\n                    printf(\"%lld\\n\", ans - 1);\n                else\n                    puts(\"no\");\n            }\n        }\n        return 0;\n    }\n}\n\nint main()\n{\n    problems::main();\n\n    return 0;\n}\n```\n\n",
        "postTime": 1656653886,
        "uid": 552165,
        "name": "ComplexPlanck",
        "ccfLevel": 0,
        "title": "P4108-Solution"
    },
    {
        "content": "\u5199\u4e00\u7bc7\u4e0d\u7528\u7ed3\u6784\u4f53\u5b58\u5757\u7684\u9898\u89e3\u9020\u798f\u540e\u4eba\u3002\n\n\u770b\u5230\u8981\u7ef4\u62a4\u5947\u5947\u602a\u602a\u4e1c\u897f\u8fd8\u5e26\u4fee\u7684\u6570\u636e\u7ed3\u6784\u9996\u5148\u60f3\u5230\u5206\u5757\u3002\n\n\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u662f\u5757\u5185 $gcd$  ,\u6574\u4e2a\u5757\u4fee\u6539\u65f6\u88ab\u5f02\u6216\u4e0a\u4e86\u54ea\u4e2a\u6570\uff0c\u6bcf\u4e2a\u5143\u7d20\u5757\u5185\u5f02\u6216\u524d\u7f00\u548c\u3002\u5f02\u6216\u524d\u7f00\u548c\u7528 $set$ \u5b58\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u5bf9\u6563\u5757\u66b4\u529b\u91cd\u6784\uff0c\u7531\u4e8e $a$ $xor$ $b=c$ \u7b49\u4ef7\u4e8e$c$ $xor$ $b=a$ \uff0c\u6240\u4ee5\u5bf9\u4e8e\u6574\u5757\u6253\u4e0a\u4e00\u4e2a $a_i$ $xor$ $x$ \u7684\u5f02\u6216\u6807\u8bb0\uff0c\u8868\u793a\u6574\u5757\u8981\u5f02\u6216\u8fd9\u6837\u4e00\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u6211\u4eec\u4e5f\u662f\u6563\u5757\u66b4\u529b\u7edf\u8ba1\uff0c\u6574\u5757\u5206\u4e24\u79cd\u60c5\u51b5\u7edf\u8ba1\uff0c\u5982\u679c\u6574\u5757\u53d6 $gcd$ \u540e\u6539\u53d8\u4e86\u503c\uff0c\u90a3\u4e48\u76f4\u63a5\u66b4\u529b\u7edf\u8ba1\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u5757\u7684\u4e2a\u6570\u662f\u5bf9\u6570\u7ea7\u522b\u7684\u3002\u5982\u679c $gcd$ \u4e0d\u53d8\uff0c\u90a3\u4e48 $set.find(val)$ \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n}log_2n)$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u6ce8\u610f\u5751\u70b9\uff1a\u6211\u4eec\u7edf\u8ba1\u7684\u662f\u533a\u95f4 $gcd$ \u548c $xor$ \uff0c\u6240\u4ee5\u5728\u5904\u7406\u5230\u8fd9\u4e2a\u5757\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u8981\u7279\u5224\u800c\u4e0d\u662f\u76f4\u63a5 $gcd$ \u6216 $xor$ \u524d\u4e00\u4e2a\u6570\uff0c\u6bcf\u6b21\u66b4\u529b\u64cd\u4f5c\u8bb0\u5f97\u628a $tag$ \u548c $set$ \u987a\u5e26\u91cd\u6784\u6e05\u96f6\uff0c\u907f\u514d\u5947\u602a\u9519\u8bef\u3002\n\n\u8fd8\u6709\u5c31\u662f\u9898\u76ee\u4e0b\u6807\u4ece\u96f6\u5f00\u59cb\uff0c\u522b\u641e\u9519\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u95ee\u6211\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ls(i) (i - 1) * sq + 1\n#define rs(i) min(i * sq, n)\nusing namespace std;\ninline int read()\n{\n\tregister int x=0;register char ch=getchar();\n\twhile(ch<48)ch=getchar();\n\twhile(ch>=48)x=x*10+(ch^48),ch=getchar();\n\treturn x;\n}\nint n, m, gsum[100010], xsum[100010], block[100010], sq;\nint tag[100010];\nset<int>s[1001];\nint a[100010];\nint gcd(int a, int b){return b == 0 ? a : gcd(b, a % b);}\nvoid brush(int i)//\u66b4\u529b\u91cd\u6784\u4e00\u4e2a\u5757\n{\n\tif(tag[i])\n    {\n        for(int j = ls(i);j <= rs(i);j ++)(xsum[j] ^= tag[i]);\n        tag[i] = 0;\n    }\n\ts[i].clear();\n\tgsum[ls(i)] = a[ls(i)];\n\ts[i].insert(xsum[ls(i)]);\n\tfor(int j = ls(i) + 1;j <= rs(i);j ++)\n\t{\n\t\tgsum[j] = gcd(gsum[j - 1], a[j]);\n\t\ts[i].insert(xsum[j]);\n\t}\n}\nvoid update(int pos, int val)\u6bcf\u6b21\u66f4\u65b0\n{\n\tint w = (a[pos] ^ val);//\u6253\u6807\u8bb0\u5f02\u6216\u4ec0\u4e48\u503c\n\ta[pos] = val;\n\tfor(int i = pos;i <= rs(block[pos]);i ++)xsum[i] ^= w;\n    brush(block[pos]);\n\tfor(int i = block[pos] + 1;i <= block[n];i ++)tag[i] ^= w;\n    int qwq = 0;\n    for(int i = 1;i <= 9;i ++)qwq ^= a[i];\n}\nint FFind(int i, int val){return s[i].find(val) != s[i].end();}//set\u76f4\u63a5\u67e5\u627elogn\u7ea7\u522b\nint Find(int i, int val){for(int j = ls(i);j <= rs(i);j ++)if(xsum[j] == val)return j;}//\u76f4\u63a5\u66b4\u529b\u627e\nint brushed(int i, int g, int val)//gcd\u6539\u53d8\u65f6\u7684\u91cd\u6784\n{\n\tbrush(i);\n\tfor(int j = ls(i);j <= rs(i);j ++)\n\t{\n\t\tg = gcd(g, a[j]);\n        if(g * xsum[j] == val)return j;\n\t}\n\treturn 0;\n}\nint query(int x)\n{\n\tint gc = gsum[rs(1)], g = gsum[rs(1)];\n    int ans = brushed(1, a[1], x);//1\u8981\u7279\u5224\n    if(ans)return ans;\n\tfor(int i = 2;i <= block[n];i ++)\n\t{\n\t\tgc = gcd(g, gsum[rs(i)]);\n\t\tif(gc == g)//\u5206\u60c5\u51b5\u8ba8\u8bba\n\t\t{\n\t\t\tif(x % g != 0)continue;\n         int w = x / g;\n\t\t\tif(FFind(i, w ^ tag[i]))\n\t\t\t{\n\t\t\t\treturn Find(i, w ^ tag[i]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans = brushed(i, g, x);\n\t\t\tif(ans)return ans;\n\t\t}\n\t\tg = gc;\n\t}\n\treturn 0;\n}\nsigned main()\n{\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\tcin>>n;\n\tsq = sqrt(n);\n\txsum[0] = 0;\n\tfor(int i = 1;i <= n;i ++)\n\t{\n\t\tcin>>a[i];\n\t\txsum[i] = xsum[i - 1] ^ a[i];\n\t\tblock[i] = (i - 1) / sq + 1;\n\t}\n\ttag[block[n] + 1] = 0;\n\tfor(int i = 1;i <= block[n];i ++)//\u5148\u9884\u5904\u7406\u539f\u5e8f\u5217\n\t{\n\t\ts[i].clear();\n\t\ttag[i] = 0;\n\t\tgsum[ls(i)] = a[ls(i)];\n\t\ts[i].insert(xsum[ls(i)]);\n\t\tfor(int j = ls(i) + 1;j <= rs(i);j ++)\n\t\t{\n\t\t\tgsum[j] = gcd(gsum[j - 1], a[j]);\n\t\t\ts[i].insert(xsum[j]);\n\t\t}\n\t}\n\tcin>>m;\n\tfor(int i = 1;i <= m;i ++)\n\t{\n\t\tstring op;\n\t\tcin>>op;\n\t\tif(op == \"MODIFY\")//\u4fee\u6539\n\t\t{\n\t\t\tint x, y;\n\t\t\tcin>>x>>y;\n\t\t\tx ++;\n\t\t\tupdate(x, y);\n\t\t}\n\t\tif(op == \"QUERY\")\n\t\t{\n\t\t\tint x;\n\t\t\tcin>>x;\n\t\t\tx = query(x);\n\t\t\tif(x)cout<<x - 1<<'\\n';//\u4ece0\u5f00\u59cb\u8981-1\n\t\t\telse cout<<\"no\\n\";\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1634870049,
        "uid": 220426,
        "name": "\u8840\u8272\u9ec4\u660f",
        "ccfLevel": 6,
        "title": "P4108 [HEOI2015]\u516c\u7ea6\u6570\u6570\u5217 \u9898\u89e3"
    },
    {
        "content": "\u5206\u5757\u3002\n\n\u9996\u5148\u67e5\u770b\u8be2\u95ee\u3002\u6211\u4eec\u8981\u6c42\u6700\u5c0f\u7684 $p$\uff0c\u4f7f\u5f97 $\\gcd(a_0,a_1,\\dots,a_p) \\times \\operatorname{xor}(a_0,a_1,\\dots,a_p)=x$\uff08\u5176\u4e2d $\\operatorname{xor}$ \u4e3a\u5f02\u6216\u548c\uff09\u3002\u4e0b\u9762\u6211\u4eec\u4ece $1$ \u5f00\u59cb\u6807\u53f7\u3002\n\n\u9996\u5148\u80fd\u591f\u5f97\u5230 $\\gcd$ \u7684\u4e00\u4e9b\u6027\u8d28\u3002\n\n1. $\\gcd(\\gcd(a_1,a_2,\\dots,a_n),\\gcd(b_1,b_2,\\dots,b_m))=\\gcd(a_1,a_2,\\dots,a_n,b_1,b_2,\\dots,b_m)$\uff0c\u6240\u4ee5\u4e24\u4e2a\u5757\u4e4b\u95f4\u7684 $\\gcd$ \u53ef\u4ee5\u5408\u5e76\uff1b   \n2. $\\gcd(a_1,a_2,\\dots,a_p) \\geq \\gcd(a_1,a_2,\\dots,a_{p+1})$\uff0c\u5373\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\u7684 $\\gcd$ \u4e00\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u4e4b\u524d\u7684 $\\gcd$\uff1b   \n3. \u5bf9\u4e8e\u524d\u7f00 $\\gcd$\uff0c\u6bcf\u6b21\u53d1\u751f\u6539\u53d8\uff0c\u81f3\u5c11\u53d8\u5230\u539f\u6765\u7684 $\\dfrac{1}{2}$\uff0c\u5373\u53d6\u503c\u6700\u591a\u6709 $O(\\log a_i)$ \u4e2a\u3002\n\n\u597d\u4e86\u6709\u4e86\u8fd9\u4e24\u4e2a\u6027\u8d28\u6211\u4eec\u5c31\u6709\u60f3\u6cd5\u4e86\u3002\u7ef4\u62a4\u4e0b\u9762\u56db\u4e2a\u4e1c\u897f\uff1a\n\n- \u5757\u5185 $\\operatorname{xor}$ \u548c\uff1b   \n- \u5757\u5185 $\\gcd$\uff1b   \n- \u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u6c42\u51fa\u8fd9\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u7ed3\u5c3e\u7684\u524d\u7f00\u5f02\u6216\u548c\uff1b   \n- \u6bcf\u4e00\u5757\u5934\u5c3e\u4e24\u4e2a\u6570\u7684\u524d\u7f00 $\\gcd$\u3002\uff08\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7b2c\u4e8c\u4e2a\u4e1c\u897f\u6c42\u51fa\u6765\uff09\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u6211\u4eec\u76f4\u63a5\u4fee\u6539\u6389\u539f\u6765\u7684\u5143\u7d20\uff0c\u7136\u540e\u56e0\u4e3a\u8fd9\u4e2a\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u5757\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u4e2a\u5757\u6211\u4eec\u66b4\u529b\u91cd\u6784\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt n)$\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\uff0c\u5982\u679c\u8bf4\u8fd9\u4e00\u5757\u5934\u5c3e\u4e24\u4e2a\u6570\u7684\u524d\u7f00 $\\gcd$ \u662f\u76f8\u7b49\u7684\uff0c\u8bf4\u660e\u8fd9\u5757\u5185\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5728\u6392\u597d\u5e8f\u7684\u5757\u5185\u4e8c\u5206\u67e5\u627e\u67e5\u8be2\u662f\u5426\u6709\u89e3\u5c31\u884c\u4e86\u3002\n\n\u5426\u5219\uff0c\u66b4\u529b\u67e5\u8be2\uff0c\u904d\u5386\u5757\u5185\u662f\u5426\u6709\u89e3\u3002\u56e0\u4e3a\u4e0d\u540c\u7684 $\\gcd$ \u503c\u6700\u591a\u6709 $O(\\log a_i)$ \u4e2a\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt n \\log ^2 n)$\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(q\\sqrt n \\log ^2n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nstruct block{\n\tLL val,pos;\n\tblock(){val=pos=0;}\n\tblock(LL V,LL P){val=V,pos=P;}\n\tbool operator < (block another) const {return (val<another.val) || (val==another.val && pos<another.pos);}\n}s[100005];\nLL gcd(LL a,LL b){return !b?a:gcd(b,a%b);}\nLL n,a[100005],q,p,l[400],r[400],pos[100005],g[100005],x[100005];\nvoid replace(LL t)\n{\n\tg[l[t]]=x[l[t]]=a[l[t]];\n\ts[l[t]]=block(a[l[t]],l[t]);\n\tfor(LL i=l[t]+1;i<=r[t];++i)\n\t{\n\t\tg[i]=gcd(g[i-1],a[i]);\n\t\tx[i]=x[i-1]^a[i];\n\t\ts[i]=block(x[i],i);\n\t}\n\tsort(s+l[t],s+r[t]+1);\n}\nLL binarysearch(LL l,LL r,LL val)\n{\n\tLL ans=l;\n\twhile(l<=r)\n\t{\n\t\tLL mid=(l+r)>>1;\n\t\tif(s[mid].val>=val)\tans=mid,r=mid-1;\n\t\telse\tl=mid+1;\n\t}\n\treturn ans;\n}\nLL query(LL u)\n{\n\tLL ans=114514;\n\tLL gd=a[1],xo=0;\n\tfor(LL i=1;i<=pos[n] && ans==114514;++i)\n\t{\n\t\tif(gcd(gd,g[r[i]])==gd)\n\t\t{\n\t\t\tif(u%gd==0)\n\t\t\t{\n\t\t\t\tLL p=(u/gd)^xo;\n\t\t\t\tLL pos=binarysearch(l[i],r[i],p);\n\t\t\t\tif(s[pos].val==p)\tans=s[pos].pos;\n\t\t\t}\n\t\t\tgd=gcd(gd,g[r[i]]);\n\t\t\txo^=x[r[i]];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(LL j=l[i];j<=r[i];++j)\n\t\t\t{\n\t\t\t\tgd=gcd(gd,a[j]);\n\t\t\t\txo^=a[j];\n\t\t\t\tif(gd*xo==u)\n\t\t\t\t{\n\t\t\t\t\tans=j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint main(){\n\tscanf(\"%lld\",&n);\n\tp=sqrt(n);\n\tfor(LL i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\tpos[i]=(i-1)/p+1;\n\t\tif(!l[pos[i]])\tl[pos[i]]=i;\n\t\tr[pos[i]]=i;\n\t}\n\tfor(LL i=1;i<=pos[n];++i)\treplace(i);\n\tLL q;\n\tscanf(\"%lld\",&q);\n\twhile(q-->0)\n\t{\n\t\tchar o[8];\n\t\tscanf(\"%s\",o);\n\t\tif(o[0]=='M')\n\t\t{\n\t\t\tLL where,val;\n\t\t\tscanf(\"%lld %lld\",&where,&val);\n\t\t\t++where;\n\t\t\ta[where]=val;\n\t\t\treplace(pos[where]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tLL val;\n\t\t\tscanf(\"%lld\",&val);\n\t\t\tLL output=query(val);\n\t\t\tif(output==114514)\tputs(\"no\");\n\t\t\telse\tprintf(\"%lld\\n\",output-1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595604229,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4108 \u3010[HEOI2015]\u516c\u7ea6\u6570\u6570\u5217\u3011"
    },
    {
        "content": "~~**\u8fd9\u662fluogu\u4e00\u9053\u4e3a\u6570\u4e0d\u591a\u7684\u5206\u5757\u597d\u9898\u76ee\uff0c\u597d\u8bc4\uff01**~~\n\n### [\u539f\u9898\u63cf\u8ff0](https://www.luogu.org/problemnew/show/P4108)\n\n\n## \u601d\u8def\uff1a\n\n\u8fd9\u9898\u663e\u7136\u7528\u5206\u5757\u3002\n ~~\uff08\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u4e86\u50bb\u903c\u7684\u7ebf\u6bb5\u6811TLE\u7684\u89e3\u6cd5\uff0c\u592a\u84bb\u4e86\uff09~~\n\u6211\u4eec\u73c2\u4ee5\u5728\u6bcf\u4e00\u5757\u4e2d\u7ef4\u62a4\u4e0b\u9762\u5185\u5bb9\uff1a\n1. \u6bcf\u4e00\u5757\u5185\u90e8\u7684xor\u548c\n1. \u6bcf\u4e00\u5757\u5185$gcd$\n1. \u6bcf\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u7ed3\u5c3e\u7684\u524d\u7f00\u5f02\u6216\u548c\n1. \u6bcf\u4e00\u5757\u5934\u5c3e\u4e24\u4e2a\u6570\u7684\u524d\u7f00$gcd$\n\n### \u4fee\u6539\uff1a\n\n\u4fee\u6539\u4f4d\u7f6e\u6240\u5728\u5757\u5185\u90e8\u66b4\u529b\u91cd\u6784\uff0c\u540e\u9762\u7684\u5757\u66f4\u65b0\u6bcf\u4e00\u5757\u5934\u5c3e\u4e24\u4e2a\u6570\u7684\u524d\u7f00$gcd$\u7684\u4fe1\u606f\u5373\u73c2\u3002\n\n### \u67e5\u8be2\uff1a\n\n\u8003\u8651\u67e5\u8be2\uff0c\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u6bcf\u4e2a\u5757\uff0c\u7ef4\u62a4\u5f53\u524d\u524d\u7f00$gcd$\u3002\n\u82e5\u548c\u4e00\u4e2a\u65b0\u7684\u5757\u8fdb\u884c$gcd$\u64cd\u4f5c\u540e\uff0c\u5176\u503c\u6539\u53d8\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u5757\u5185\u6709\u524d\u7f00$gcd$\u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u76f4\u63a5\u66b4\u529b\u626b\u63cf\u6574\u5757\u5373\u73c2\u3002\n\u5982\u679c\u4e0d\u6539\u53d8\uff0c\u5219\u5176\u524d\u7f00$gcd$\u90fd\u76f8\u540c\uff0c\u76f4\u63a5\u5728\u4e00\u4e2a\u6392\u597d\u5e8f\u7684\u6570\u7ec4\u91cc\u9762\u4e8c\u5206\u7b54\u6848\u5373\u73c2\u3002\n\n### \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n$O(n\\sqrt n\\log_2n)$\n\n\n#### \u6700\u540e\u8d34\u4e0a\u849f\u84bb\u7684~~\u53c8\u4e11\u53c8\u957f~~\u7684\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define Maxn 100005\n\nint n, q, block;\nint belong[Maxn]; // \u6bcf\u4e00\u4e2a\u70b9\u6240\u5728\u7684\u5757\nint L[Maxn], R[Maxn]; // \u6bcf\u4e00\u5757\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\nlong long val[Maxn];\nlong long gcdp[Maxn]; // \u6bcf\u4e00\u5757\u524d\u7f00GCD\nlong long xorp[Maxn]; // \u6bcf\u4e00\u5757\u524d\u7f00\u5f02\u6216\u548c\nchar op[6];\n\nstruct node {\n\tlong long val;\n\tint id;\n} a[Maxn]; // \u6570\u7ec4\u6392\u5e8f\u4e4b\u540e\u7684\u7ed3\u679c (val,pos)\nint cmp(const void *A, const void *B) {\n\tstruct node P = *(struct node*)A, Q = *(struct node*)B;\n\tif (P.val ^ Q.val) return P.val - Q.val;\n\telse return P.id - Q.id;\n} // \u7528qsort\u6392\u5e8f\u7684\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u7167val\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n__attribute__((always_inline)) __inline__\nlong long gcd(long long x, long long y) {\n\twhile (y) {\n\t\tlong long z = x % y;\n\t\tx = y, y = z;\n\t} return x;\n} // \u6700\u5927\u516c\u7ea6\u6570\uff0c\u6ca1\u5565\u73c2\u8bf4\u7684\n#ifdef __cplusplus\n}\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\nvoid build(int i) {\n\tgcdp[L[i]] = xorp[L[i]] = val[L[i]];\n\ta[L[i]].val = val[L[i]], a[L[i]].id = L[i];\n\tfor (int j = L[i] + 1; j <= R[i]; ++ j) {\n\t\tgcdp[j] = gcd(gcdp[j - 1], val[j]);\n\t\txorp[j] = xorp[j - 1] ^ val[j];\n\t\ta[j].val = xorp[j], a[j].id = j;\n\t} qsort(a + L[i], R[i] - L[i] + 1, sizeof(a[0]), cmp); // \u6bcf\u4e00\u5757\u4e4b\u5185\u6392\u5e8f\uff0c\u4e3a\u4e86\u540e\u9762\u4e8c\u5206\n} // \u5efa\u7acb\u6bcf\u4e00\u5757\n#ifdef __cplusplus\n}\n#endif\n\nint main() {\n\tscanf(\"%d\", &n);\n\tblock = (int)sqrt(n);\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%lld\", val + i);\n\t\tbelong[i] = (i - 1) / block + 1;\n\t\tif (!L[belong[i]]) L[belong[i]] = i;\n\t\tR[belong[i]] = i;\n\t} scanf(\"%d\", &q);\n\tfor (int i = 1; i <= belong[n]; build(i ++)); // \u9884\u5904\u7406\n\twhile (q --) {\n\t\tscanf(\"%s\", op);\n\t\tif (op[0] == 'M') {\n\t\t\tlong long x, y;\n\t\t\tscanf(\"%lld %lld\", &x, &y);\n\t\t\t++ x; val[x] = y;\n\t\t\tbuild(belong[x]); // \u66b4\u529b\u91cd\u6784\n\t\t}\n\t\telse {\n\t\t\tlong long x; int ans = -1;\n\t\t\tscanf(\"%lld\", &x);\n\t\t\tlong long G = val[1], X = 0; // \n\t\t\tfor (int i = 1; i <= belong[n] && !~ans; ++ i)\n\t\t\t\tif (gcd(G, gcdp[R[i]]) == G) { // \u6ca1\u6709\u6539\u53d8\n\t\t\t\t\tif (!(x % G)) {\n\t\t\t\t\t\tlong long k = x / G ^ X;\n\t\t\t\t\t\tint low = L[i], high = R[i], pos = low;\n\t\t\t\t\t\twhile (low <= high) {\n\t\t\t\t\t\t\tint mid = low + high >> 1;\n\t\t\t\t\t\t\tif (a[mid].val >= k)\n\t\t\t\t\t\t\t\tpos = mid, high = mid - 1;\n\t\t\t\t\t\t\telse low = mid + 1;\n\t\t\t\t\t\t} // \u4e8c\u5206\u4f4d\u7f6e\n\t\t\t\t\t\tif (a[pos].val == k) {\n\t\t\t\t\t\t\tans = a[pos].id;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tG = gcd(G, gcdp[R[i]]);\n\t\t\t\t\tX ^= xorp[R[i]];\n\t\t\t\t}\n\t\t\t\telse { // \u6539\u53d8\n\t\t\t\t\tfor (int j = L[i]; j <= R[i]; ++ j) {\n\t\t\t\t\t\tG = gcd(G, val[j]);\n\t\t\t\t\t\tX ^= val[j];\n\t\t\t\t\t\tif (G * X == x) {\n\t\t\t\t\t\t\tans = j;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} // \u66b4\u529b\u626b\u63cf\u6574\u5757\n\t\t\t\t\tif (~ans) break;\n\t\t\t\t}\n\t\t\tif (!~ans) puts(\"no\");\n\t\t\telse printf(\"%d\\n\", ans - 1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1551274718,
        "uid": 114495,
        "name": "libra9z",
        "ccfLevel": 0,
        "title": "LuoguP4108"
    },
    {
        "content": "\u5206\u5757\uff0c\u8003\u8651\u5bf9\u4e8e\u524d\u7f00 gcd \u5177\u6709\u5355\u8c03\u4e0d\u589e\u4e14\u5c06\u81f3\u591a\u5206\u51fa\u76f8\u540c\u503c\u6bb5 $\\log V$ \u6bb5\u7684\u4f18\u79c0\u6027\u8d28\uff0c\u6211\u4eec\u76f4\u63a5\u5bf9\u4e8e\u6bcf\u6b21\u67e5\u8be2 $\\log V$ \u6bb5\u91cc\u9762\uff0c\u6bcf\u6bb5\u662f\u5426\u6709\u4e00\u4e2a\u524d\u7f00\u5f02\u6216\u503c\u4e3a\u5b9a\u503c\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u7ef4\u62a4\u6bcf\u6bb5\u7684\u5f02\u6216\u548c\uff0c\u6bcf\u6bb5\u7684 gcd\uff0c\u4e00\u4e2a hash \u8868\u7ef4\u62a4\u6bb5\u5185\u524d\u7f00\u503c\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u89c6\u5b9e\u73b0\u53ef\u4ee5\u5c06\u975e\u5757\u5185\u7684\u524d\u7f00\u4fe1\u606f\u6270\u52a8\u51fa\u53bb\uff0c\u53ea\u7ef4\u62a4\u5757\u5185\u4fe1\u606f\uff0c\u5728\u5b9e\u9645\u67e5\u8be2\u65f6\u52a0\u4e0a\u524d\u7f00\u4fe1\u606f\u5373\u53ef\u3002\n\n\u7531\u4e8e\u4fee\u6539\u662f\u5355\u70b9\u6539\uff0c\u6240\u4ee5\u76f4\u63a5\u91cd\u6784\u5757\u4fe1\u606f\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\sqrt n \\log n)$\uff0c\u4e2a\u4eba\u4f7f\u7528\u7684 map \u5b9e\u73b0\uff0c\u4ee3\u7801\u7684\u590d\u6742\u5ea6\u662f $O(n \\sqrt n \\log^2 n)$\u3002 \n\n```cpp\n/*\n\u8003\u8651\u627e\u5230 log \u6bb5\u590d\u5408\u5c31\u597d\u4e86\u3002\n\u5206\u5757\uff0c\u5bf9\u6bcf\u5757\u90fd\u7ef4\u62a4\u4e00\u4e0b\u5c31\u76f4\u63a5\u6839\u53f7 log \u4e86 \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 1e5 + 5 , SIZE = 325;\n#define ll long long\n#define ls(p) p << 1\n#define rs(p) p << 1 | 1\nint gcd(int a,int b)\n{\n\tif(!b) return a;\n\treturn gcd(b , a % b);\n}\nint a[Len],n,m,Gcd[SIZE],Xor[SIZE],pos[Len],L[SIZE],R[SIZE],t;\nint sum[Len << 2];\nvoid push_up(int x){sum[x] = (sum[ls(x)] ^ sum[rs(x)]);}\nvoid build(int p,int l,int r)\n{\n\tif(l == r){sum[p] = a[l];return;}\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid);\n\tbuild(rs(p) , mid + 1 , r);\n\tpush_up(p);\n}\nvoid update(int p,int l,int r,int idx)\n{\n\tif(l == r){sum[p] = a[l];return;}\n\tint mid = (l + r) >> 1;\n\tif(idx <= mid) update(ls(p) , l , mid , idx);\n\telse update(rs(p) , mid + 1 , r , idx);\n\tpush_up(p);\n}\nint qry(int p,int l,int r,int nl,int nr)\n{\n\tif(nl > nr) return 0;\n\tif(nl <= l && nr >= r) return sum[p];\n\tint mid = (l + r) >> 1 , res = 0;\n\tif(nl <= mid) res ^= qry(ls(p) , l , mid , nl , nr);\n\tif(nr > mid) res ^= qry(rs(p) , mid + 1 , r , nl , nr);\n\treturn res;\n}\nmap<ll,int> mp[SIZE];\ninline int Fg(int x,int y)\n{\n\tif(!x || !y) return x + y;\n\treturn gcd(x , y);\n}\nvoid resize(int x)\n{\n\tint G = 0 , X = 0;\n\tmp[x].clear();\n\tfor(int i = L[x] ; i <= R[x] ; i ++) \n\t{\n\t\tG = Fg(G , a[i]) , X ^= a[i];\n\t\tif(!mp[x][X]) mp[x][X] = i;\n\t}\n\tGcd[x] = G , Xor[x] = X;\n}\nstruct Node\n{\n\tint x,w;\n\tNode(){x = w = 0;}\n\tNode(int X,int W){x = X , w = W;}\n}stk[105];\nint len;\nvoid inget(int G,int id)\n{\n\tint rG = G;\n\tfor(int i = L[id] ; i <= R[id] ; i ++)\n\t{\n\t\trG = G;\n\t\tG = Fg(G , a[i]);\n\t\tif(rG != G) stk[++ len] = Node(i , G);\n\t}\n}\nvoid get()\n{\n\tlen = 0;int G = 0 , rG = 0;\n\tfor(int i = 1 ; i <= t ; i ++) \n\t{\n\t\trG = G;\n\t\tG = Fg(G , Gcd[i]);\n\t\tif(rG != G) inget(rG , i);\n\t}\n}\ninline int find(int l,int r,ll ndx)\n{\n\t//printf(\"%d %d %lld\\n\",l,r,ndx);\n\tint LL = pos[l] , RR = pos[r];\n\tll X = qry(1 , 1 , n , 1 , l - 1);\n\t//if(l == 7 && r == 8) printf(\"%lld\\n\",X);\n\tfor(int i = l ; i <= R[LL] ; i ++)\n\t{\n\t\tX ^= a[i];\n\t\tif(X == ndx) return i;\n\t}\n\tfor(int i = LL + 1 ; i <= RR - 1 ; i ++)\n\t{\n\t\tif(mp[i][X ^ ndx]) return mp[i][X ^ ndx];\n\t\tX ^= Xor[i];\n\t}\n\tfor(int i = L[RR] ; i <= r ; i ++)\n\t{\n\t\tX ^= a[i];\n\t\tif(X == ndx) return i;\n\t}\n\treturn -1;\n}\nchar s[125];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tupdate(1 , 1 , n , i);\n\t}\n\tt = sqrt(n);\n\tfor(int i = 1 ; i <= t ; i ++) \n\t{\n\t\tL[i] = (i - 1) * t + 1;\n\t\tR[i] = i * t;\n\t} \n\tif(R[t] < n) R[t] = n;\n\tfor(int i = 1 ; i <= t ; i ++)\t\n\t{\n\t\tfor(int j = L[i] ; j <= R[i] ; j ++) pos[j] = i;\n\t\tresize(i);\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tscanf(\"%s\",s + 1);\n\t\tif(s[1] == 'M') \n\t\t{\n\t\t\tint id,x;scanf(\"%d %d\",&id,&x);\n\t\t\tid ++;\n\t\t\ta[id] = x;\n\t\t\tresize(pos[id]);\n\t\t\tupdate(1 , 1 , n , id);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tll x;scanf(\"%lld\",&x);\n\t\t\tget();int pp = -1;\n\t\t\tstk[len + 1].x = n + 1;\n\t\t\tfor(int j = 1 ; j <= len ; j ++) \n\t\t\t{\n\t\t\t\tif(x % stk[j].w) continue;\n\t\t\t\tpp = find(stk[j].x , stk[j + 1].x - 1 , x / stk[j].w);\n\t\t\t\tif(pp != -1) break;\n\t\t\t}\n\t\t\tif(pp == -1) printf(\"no\\n\");\n\t\t\telse printf(\"%d\\n\",pp - 1);\n\t\t}\n\t}\n \treturn 0;\n}\n```",
        "postTime": 1653700670,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u5b58\u5728\u8bb0\u5fc6\u4e2d\u7684\u9762\u5b54\uff0c\u5b9b\u5982\u7a7a\u4e4f\u5fae\u7b11\u7684\u5e7b\u5f71"
    }
]