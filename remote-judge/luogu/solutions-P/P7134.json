[
    {
        "content": "\u4f5c\u4e3a\u51fa\u9898\u4eba\u8fc7\u6765\u53d1\u4e2a\u9898\u89e3.\n\n\u9996\u5148\u5f88\u62b1\u6b49\u6bd4\u8d5b\u65f6\u88ab\u66b4\u529b\u8279\u8fc7\u53bb\u4e86,\u73b0\u5728\u6570\u636e\u5df2\u7ecf\u52a0\u5f3a(\u65f6\u9650\u4e5f\u5bf9\u5e94\u5f00\u5927),\u6b22\u8fce\u5927\u5bb6\u7528\u66f4\u5947\u602a\u7684\u66b4\u529b\u6765\u8279\u8fc7.\n\n---\n\n\u5206\u5757.\n\n\u5bf9\u4e8e\u6574\u5757\u7684\u4fee\u6539,\u76f4\u63a5\u7528\u73c2\u6735\u8389\u6811\u7ef4\u62a4\u6bcf\u4e2a\u503c\u7684\u51fa\u73b0\u6b21\u6570;\u5bf9\u4e8e\u6563\u5757\u7684\u4fee\u6539,\u904d\u5386\u4ece\u4e0a\u6b21\u4f5c\u4e3a\u6563\u5757\u4ee5\u6765\u7684\u6240\u6709\u4fee\u6539,\u8bb0\u5f55\u6bcf\u4e2a\u51fa\u73b0\u8fc7\u7684\u6570\u6700\u540e\u53d8\u6210\u4e86\u54ea\u4e2a\u6570\u5373\u53ef.\u6ce8\u610f\u6563\u5757\u4fee\u6539\u7ec6\u8282\u5b9e\u73b0\u7684\u65f6\u5019\u4e0d\u80fd\u7528\u5e76\u67e5\u96c6:\u6bd4\u5982\u4f9d\u6b21\u8fdb\u884c$1\\gets2$,$3\\gets1$\u4e24\u4e2a\u64cd\u4f5c,\u5e76\u67e5\u96c6\u4f1a\u8bb0\u5f55\u4e3a$1~\\text{and}~3\\gets2$.\u6240\u4ee5\u53ea\u80fd\u4fdd\u5b58\u6bcf\u4e00\u4e2a\u6570\u6700\u540e\u88ab\u4fee\u6539\u6210\u4e86\u4ec0\u4e48,\u800c\u4e0d\u80fd\u8bb0\u5f55\u4e2d\u95f4\u8fc7\u7a0b.\u6e05\u7a7a\u4e5f\u8bf7\u6ce8\u610f\u590d\u6742\u5ea6\u4fdd\u6301\u5728$\\sqrt n$\u4ee5\u5185.\n\n\u6bcf\u4e00\u5757\u6700\u591a\u4ece\u7b2c\u4e00\u6b21\u4fee\u6539\u5230\u7b2c$m$\u6b21,\u53c2\u8003\u73c2\u6735\u8389\u6811\u7684\u8bc1\u660e\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u4fee\u6539\u65f6\u6bcf\u5757\u5185\u7684\u503c\u7684\u79cd\u7c7b\u6570\u671f\u671b\u662f$\\log n$\u7684,\u6240\u4ee5\u6563\u5757\u603b\u590d\u6742\u5ea6\u7684\u671f\u671b\u5927\u81f4\u662f$m\\sqrt n\\log n$\u7684.\n\n\u5bf9\u4e8e\u8be2\u95ee,\u6563\u5757\u66b4\u529b\u6574\u5757\u73c2\u6735\u8389\u6811.\n\n\u603b\u590d\u6742\u5ea6\u5927\u6982\u662f$n\\sqrt n\\log n$\u4e58\u5de8\u5927\u7684\u5e38\u6570.\u4e0d\u662f\u5f88\u4f1a\u5206\u6790,\u5982\u679c\u54ea\u4f4d\u5927\u4f6c\u80fd\u4ed4\u7ec6\u8bc1\u4e00\u4e0b\u7684\u8bdd\u5c31\u591a\u8c22\u4e86.\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <queue>\n#include <set>\nusing namespace std;\n\ntypedef long long ll;\n\n/* ---- read() & rlong() - begin ---- */\n#define gc() (p0==p1&&(p1=(p0=buf)+fread(buf,1,1048576,stdin),p0==p1)?EOF:*p0++)\nchar buf[1048576],*p0,*p1;\ninline int read() {\n\tint r=0; char c=gc(); while (c<48||c>57) c=gc();\n\twhile (c>47&&c<58) {r=(r<<3)+(r<<1)+(c^48); c=gc();} return r;\n}\n#undef gc\n/* ---- read() & rlong() -- end ----- */\n\nconst int q=188; int p[35505],tim,val[35505],fat[35505],cnt[35505];\nint upl[35505],upr[35505],upu[35505],upv[35505],upw[35505];\nstruct txb {\n\tint w; mutable int t;\n\tinline txb (int _w):w(_w),t(0) {}\n\tinline txb (int _w,int _t):w(_w),t(_t) {}\n\tbool operator <(const txb &op) const {return w<op.w;}\n};\ntypedef set<txb>::iterator sit;\nstruct bxt {\n\tint l,r; vector<int> g; set<txb> s;\n\n\tinline void clear() {\n\t\tvector<int> e; int f;\n\t\tfor (int i=l;i<=r;++i) {\n\t\t\tif (!fat[val[i]]) {\n\t\t\t\tf=val[i];\n\t\t\t\tfor (auto j:g) if (f>=upu[j]&&f<=upv[j])\n\t\t\t\t\tf=upw[j]; fat[val[i]]=f;\n\t\t\t}\n\t\t\te.push_back(val[i]); val[i]=fat[val[i]];\n\t\t}\n\t\tfor (auto i:e) fat[i]=0; g.clear();\n\t}\n\n\tinline void flatten(int u,int v,int w) {\n\t\tint t=0; g.push_back(tim);\n\t\tsit spl=s.lower_bound(txb(u)),spr=s.upper_bound(txb(v));\n\t\tif (spl==spr) return;\n\t\tfor (sit i=spl;i!=spr;++i) t+=i->t;\n\t\ts.erase(spl,spr); spl=s.lower_bound(txb(w));\n\t\tif (spl->w==w) spl->t+=t; else s.insert(txb(w,t));\n\t}\n\n\tinline void update(int a,int b,int u,int v,int w) {\n\t\tclear(); s.clear();\n\t\tfor (int i=l;i<=r;++i) {\n\t\t\tif (i>=a&&i<=b&&val[i]>=u&&val[i]<=v) val[i]=w;\n\t\t\t++cnt[val[i]];\n\t\t}\n\t\tfor (int i=l;i<=r;++i) if (cnt[val[i]]) {\n\t\t\ts.insert(txb(val[i],cnt[val[i]])); cnt[val[i]]=0;\n\t\t}\n\t}\n} b[405];\n\ninline int mjly(int u,int v) {return u<v?u:u-v;}\n\ninline int ksm(int u,int v,int w) {\n\tint r=1; while (v) {\n\t\tif (v&1) r=(ll)u*r%w;\n\t\tu=(ll)u*u%w; v>>=1;\n\t}\n\treturn r;\n}\n\ninline void update(int l,int r,int u,int v,int w) {\n\tif (p[l]==p[r]) b[p[l]].update(l,r,u,v,w);\n\telse {\n\t\tb[p[l]].update(l,r,u,v,w); b[p[r]].update(l,r,u,v,w);\n\t\tfor (int i=p[l]+1;i<p[r];++i) b[i].flatten(u,v,w);\n\t}\n}\n\ninline int powmk(int l,int r,int t,int k) {\n\tint w=0;\n\tif (p[l]==p[r]) {\n\t\tb[p[l]].clear();\n\t\tfor (int i=l;i<=r;++i) w=mjly(w+ksm(val[i],t,k),k);\n\t\treturn w;\n\t}\n\tb[p[l]].clear(); b[p[r]].clear();\n\tfor (int i=l;p[i]==p[l];++i) w=mjly(w+ksm(val[i],t,k),k);\n\tfor (int i=r;p[i]==p[r];--i) w=mjly(w+ksm(val[i],t,k),k);\n\tfor (int i=p[l]+1;i<p[r];++i)\n\t\tfor (auto j:b[i].s) w=(w+(ll)j.t*ksm(j.w,t,k))%k;\n\treturn w;\n}\n\nint main() {\n\tint n,m,l,r,t,k,a=0; n=read(); m=read(); p[0]=p[n+1]=-1;\n\tfor (int i=1;i<=n;i+=q) {\n\t\tfor (int j=0;j<q&&i+j<=n;++j) {\n\t\t\tp[i+j]=i/q; ++cnt[val[i+j]=read()];\n\t\t}\n\t\tb[p[i]].l=i; b[p[i]].r=min(i+q-1,n);\n\t\tfor (int j=b[p[i]].l;j<=b[p[i]].r;++j) if (cnt[val[j]]) {\n\t\t\tb[p[i]].s.insert(txb(val[j],cnt[val[j]])); cnt[val[j]]=0;\n\t\t}\n\t}\n\tfor (;tim<m;++tim) {\n\t\tif (read()) {\n\t\t\tl=read(); r=read(); t=read(); k=read();\n\t\t\ta^=powmk(l,r,t,k);\n\t\t}\n\t\telse {\n\t\t\tupl[tim]=read(); upr[tim]=read();\n\t\t\tupu[tim]=read(); upv[tim]=read(); upw[tim]=read();\n\t\t\tupdate(upl[tim],upr[tim],upu[tim],upv[tim],upw[tim]);\n\t\t}\n\t}\n\tprintf(\"%d\",a);\n\treturn 0;\n}\n```",
        "postTime": 1608427846,
        "uid": 54189,
        "name": "konjacq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7134 \u3010\u5c0f H \u7684\u5e8f\u5217\u3011"
    }
]