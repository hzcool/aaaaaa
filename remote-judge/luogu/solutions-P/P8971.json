[
    {
        "content": "# [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P8971)\n\n\n\n------------\n\n\n\n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u5927\u6982\u60c5\u51b5\uff1a\n\n- \u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u8282\u70b9\u7f16\u53f7 $1 \\sim n$\uff1b\n- \u5bf9\u4e8e\u6709\u8fb9\u6743\u7684\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\uff0c\u70b9\u6743\u76f8\u52a0\u7b49\u4e8e\u8fb9\u6743\uff1b\n- \u5bf9\u4e8e\u65e0\u8fb9\u6743\u7684\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\uff0c\u65e0\u9650\u5236\u3002\n- \u7ed9\u5b9a\u70b9\u6743\u7684\u53d6\u503c\u8303\u56f4 $[l,r]$\uff0c\u70b9\u6743\u90fd\u662f\u6574\u6570\uff1b\n- \u6c42\u70b9\u6743\u7684\u6240\u6709\u586b\u5199\u65b9\u5f0f\u7684\u4e2a\u6570\u3002\n\n\u7b80\u5355\u5206\u6790\uff0c\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e0b\u7ed3\u8bba\uff1a\n\n1. \u5bf9\u4e8e\u6709\u8fb9\u6743\u7684\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\uff0c\u786e\u5b9a\u4e86\u5176\u4e2d\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\uff0c\u53e6\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u4e5f\u4f1a **\u786e\u5b9a**\uff1b\n1. \u5bf9\u4e8e\u65e0\u8fb9\u6743\u7684\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\uff0c\u5176\u4e2d\u4e00\u70b9\u7684\u70b9\u6743 **\u4e0d\u4f1a** \u5bf9\u53e6\u4e00\u70b9\u7684\u70b9\u6743\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u6839\u636e\u7ed3\u8bba 2\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6811\u6cbf\u65e0\u8fb9\u6743\u7684\u8fb9\u62c6\u6210 **\u591a\u4e2a\u90e8\u5206**\uff0c\u8fd9\u51e0\u4e2a\u90e8\u5206\u4e4b\u95f4\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd\uff1b\u6c42\u51fa **\u6bcf\u4e2a\u90e8\u5206** \u7684\u586b\u5199\u65b9\u5f0f\u4e2a\u6570\uff0c\u518d\u628a\u5404\u4e2a\u90e8\u5206\u7684\u4e2a\u6570 **\u76f8\u4e58**\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6574\u4e2a\u6811\u7684\u586b\u5199\u65b9\u5f0f\u4e2a\u6570\u4e86\u3002\n\n\u5728\u5177\u4f53\u505a\u6cd5\u4e0a\uff0c\u6211\u4eec **\u4e0d\u8bb0\u5f55** \u65e0\u8fb9\u6743\u7684\u8fb9\uff0c\u628a **\u6811** \u5f53\u4f5c **\u68ee\u6797** \u5904\u7406\uff0c\u5176\u4e2d\u7684\u6bcf\u4e00\u68f5\u6811\u7684\u6240\u6709\u8fb9\u90fd\u6709\u8fb9\u6743\u3002\u5982\u6240\u7ed9\u6837\u4f8b\uff0c\u6211\u4eec\u628a\u5b83\u770b\u4f5c `5` \u548c `1 2 3 4 6` \u4e24\u68f5\u6811\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u9488\u5bf9\u6bcf\u4e00\u4e2a\u6811\u8fdb\u884c\u5904\u7406\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/91vlqt5k.png)\n\n\u6839\u636e\u7ed3\u8bba 1\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u68f5\u6811\uff0c\u53ea\u8981\u786e\u5b9a **\u4e00\u4e2a\u70b9\u7684\u70b9\u6743**\uff0c\u6574\u68f5\u6811\u7684\u6240\u6709\u70b9\u6743\u5c31 **\u5168\u90e8\u786e\u5b9a** \u4e86\u3002\u5bf9\u4e8e\u6811\u4e0a\u7684\u4e00\u70b9 $u$\uff0c\u82e5\u5176\u70b9\u6743\u4e3a $k$ \u65f6\uff0c\u8be5\u6811\u4e0a\u7684\u6240\u6709\u70b9\u7684\u70b9\u6743\u90fd\u5728 $[l,r]$ \u5185\uff0c\u5219\u8fd9\u4e2a\u65b9\u5f0f\u662f **\u5408\u6cd5** \u7684\u3002\u6b64\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u68f5\u6811\uff0c\u95ee\u9898\u4ece **\u6c42\u586b\u5199\u65b9\u5f0f\u4e2a\u6570** \u8f6c\u5316\u4e3a\u4e86 **\u6c42\u6811\u4e0a\u4efb\u610f\u4e00\u70b9 $u$ \u7684\u5408\u6cd5\u70b9\u6743\u4e2a\u6570**\u3002\n\n\u4e0d\u96be\u5f97\u51fa\uff0c\u5982\u679c $a$ \u548c $b$ \u90fd\u662f\u70b9 $u$ \u7684\u5408\u6cd5\u70b9\u6743\uff0c\u90a3\u4e48 $[a,b]$ \u5185\u7684\u4efb\u4f55\u4e00\u4e2a\u6574\u6570 **\u90fd\u662f** $u$ \u7684\u5408\u6cd5\u70b9\u6743\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $u$ \u7684\u5408\u6cd5\u70b9\u6743\u7684\u53d6\u503c\u8303\u56f4 $[nowl,nowr]$ \u5373\u53ef\u3002$u$ \u7684\u5408\u6cd5\u70b9\u6743\u4e2a\u6570\u5373\u4e3a $nowr-nowl+1$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6811\u4e0a\u4efb\u610f\u4e00\u70b9\u7684\u70b9\u6743 $v$ \u7528 $u$ \u7684\u70b9\u6743\u8868\u8fbe\u7684\u8868\u8fbe\u5f0f\u3002\u6613\u5f97\u6240\u6709\u7684\u8868\u8fbe\u5f0f\u90fd\u662f **\u4e00\u6b21\u51fd\u6570**\uff1a\n\n$$val_u + val_v = w(u,v)$$\n$$val_v = w(u,v) - val_u$$\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6709\u4e09\u4e2a\u70b9 $x,y,z$\uff0c\u5176\u4e2d $(x,y)$\uff0c$(y,z)$ \u95f4\u6709\u6709\u6743\u8fb9\uff0c\u5219\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a\n\n$$val_y = w(x,y) - val_x$$\n$$val_z = w(y,z) - val_y$$\n$$val_z = w(y,z) - w(x,y) + val_x$$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8868\u8fbe\u4e0d\u540c\u70b9\u7684\u70b9\u6743\u65f6 $val_x$ \u7684\u7cfb\u6570\u53ef\u80fd\u662f $1$ \u6216 $-1$\uff0c\u4e14\u8be5\u70b9\u4e0e\u8be5\u70b9\u7684\u5b50\u8282\u70b9\u4e2d $val_x$ \u7684\u7cfb\u6570\u5fc5\u7136\u4e3a\u76f8\u53cd\u6570\u3002\u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u4e00\u4e2a\u65b0\u53d8\u91cf $typ_v$ \u6765\u8bb0\u5f55\u8868\u8fbe\u5f0f\u4e2d $val_u$ \u7684\u7cfb\u6570\u4e3a\u6b63\u8fd8\u662f\u4e3a\u8d1f\u3002\uff08\u6211\u7684\u4ee3\u7801\u4e2d $0$ \u4e3a\u6b63\uff0c$1$ \u4e3a\u8d1f\u3002\uff09\n\n\u63a5\u4e0b\u6765\u89e3\u51fa\u5bf9\u4e8e **\u4efb\u610f\u4e00\u70b9** $l \\leq val_v \\leq r$ \u65f6 $val_u$ \u7684 **\u53d6\u503c\u8303\u56f4**\uff0c\u5de6\u6781\u503c\u53d6 $\\max$ \uff0c\u53f3\u6781\u503c\u53d6 $\\min$\uff0c\u5373\u53ef\u5f97\u51fa $u$ \u7684\u5408\u6cd5\u70b9\u6743\u7684\u53d6\u503c\u8303\u56f4\u3002\n\u7279\u6b8a\u5730\uff0c\u5982\u679c\u7ed3\u679c\u5f97\u51fa $nowl > nowr$\uff0c\u5219\u8bc1\u660e\u8fd9\u68f5\u6811 **\u6ca1\u6709\u5408\u6cd5\u89e3**\uff1b\u4e00\u68f5\u6811\u6ca1\u6709\u5408\u6cd5\u89e3\uff0c\u610f\u5473\u7740 **\u5168\u68ee\u6797\u90fd\u6ca1\u6709**\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u5927\u81f4\u6d41\u7a0b\uff1a\n\n- \u5ffd\u7565\u65e0\u6743\u8fb9\uff0c\u628a\u6811\u5f53\u4f5c **\u68ee\u6797** \u5904\u7406\uff1b\n- \u5bf9\u4e8e\u6bcf\u68f5\u6811\uff0c\u6c42\u51fa\u6240\u6709\u70b9\u7528\u5176\u4e2d\u4e00\u70b9 $u$ \u8868\u8fbe\u7684\u89e3\u6790\u5f0f\uff0c\u6c42\u51fa\u6ee1\u8db3\u4efb\u610f\u4e00\u70b9 $v$ \u7684\u70b9\u6743 $l \\leq val_v \\leq r$ \u65f6 $u$ \u7684\u53d6\u503c\u8303\u56f4 $[nowl,nowr]$\uff0c\u8be5\u6811\u7684\u6240\u6709\u586b\u5199\u65b9\u5f0f\u5373\u4e3a $nowr-nowl+1$\uff1b\n- \u5c06\u6bcf\u68f5\u6811\u7684\u586b\u5199\u65b9\u5f0f\u4e2a\u6570 **\u76f8\u4e58**\uff0c\u5373\u4e3a\u6700\u7ec8\u7ed3\u679c\uff1b\n- \u7279\u6b8a\u5730\uff0c\u5982\u679c $nowl > nowr$\uff0c\u5219 **\u6ca1\u6709\u5408\u6cd5\u89e3**\u3002\n\n## $AC\\ CODE$\n\n```cpp\n#include<bits/stdc++.h>\nconst int M=2e5+5;\nconst int mod=1e9+7;\nstd::vector <std::pair<int,int> > e[M];//\u5b58\u56fe\nbool vis[M],typ[M];\nint val[M],n,T;\nlong long l,r,nowl,nowr,ans;//\u4e0d\u5f00\u6717\u6717\u6cea\u4e24\u884c\nvoid init()\n{\n\tfor(int i=1;i<M;++i)\n\t\te[i].clear();\n\tmemset(vis,0,sizeof vis);\n\tans=1;\n}\nvoid dfs(int u)\n{\n\tfor(auto i:e[u]){\n\t\tint v=i.first,w=i.second;\n\t\tif(vis[v])\tcontinue;\n\t\tvis[v]=1;\n\t\tif(typ[u]){//\u7cfb\u6570\u4e3a\u8d1f\n\t\t\ttyp[v]=0;//\u5b50\u8282\u70b9\u7cfb\u6570\u662f\u5176\u76f8\u53cd\u6570\n\t\t\tval[v]=w-val[u];//\u6c42\u89e3\u6790\u5f0f\n\t\t\tnowl=std::max(nowl,l-val[v]);\n\t\t\tnowr=std::min(nowr,r-val[v]);}//\u6bd4\u8f83\u53d6\u503c\u8303\u56f4\n\t\telse{//\u7cfb\u6570\u4e3a\u6b63\n\t\t\ttyp[v]=1;\n\t\t\tval[v]=w-val[u];\n\t\t\tnowl=std::max(nowl,val[v]-r);\n\t\t\tnowr=std::min(nowr,val[v]-l);}\n\t\tdfs(v);\n\t}\t\n}\nint main()\n{\n\tstd::ios::sync_with_stdio(0);\n\tstd::cin.tie(0);std::cout.tie(0);\n\tstd::cin>>T;\n\twhile(T--){\n\t\tinit();\n\t\tstd::cin>>n>>l>>r;\n\t\tfor(int i=1;i<n;++i){\n\t\t\tint opt,u,v,w;\n\t\t\tstd::cin>>opt;\n\t\t\tif(opt){\n\t\t\t\tstd::cin>>u>>v>>w;\n\t\t\t\te[u].push_back(std::make_pair(v,w));\te[v].push_back(std::make_pair(u,w));}\n\t\t\telse\tstd::cin>>u>>v;}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif(vis[i])\tcontinue;//\u8df3\u8fc7\u5df2\u904d\u5386\u7684\u6811\n\t\t\tvis[i]=1;\n\t\t\tnowl=l,nowr=r;//\u8d4b\u521d\u503c\n\t\t\ttyp[i]=0,val[i]=0;//\u7528\u81ea\u5df1\u8868\u8fbe\u81ea\u5df1\u7cfb\u6570\u5f53\u7136\u4e3a\u6b63\n\t\t\tdfs(i);\n\t\t\tif(nowl>nowr)\t{ans=0;\tbreak;}//\u65e0\u5408\u6cd5\u89e3\n\t\t\telse\tans=ans*(nowr-nowl+1)%mod;//\u6709\u5408\u6cd5\u89e3\n\t\t}\n\t\tstd::cout<<ans<<'\\n';}\n\treturn 0; \t\t\n}\n```\n\n\u672c\u9898\u89e3\u6bd5\u3002",
        "postTime": 1678656680,
        "uid": 765446,
        "name": "MichaelWong",
        "ccfLevel": 4,
        "title": "P8971 \u300eGROI-R1\u300f \u8679\u8272\u7684\u5f7c\u5cb8\u82b1 \u9898\u89e3"
    },
    {
        "content": "* \u975e\u5e38\u597d\u7684\u4e00\u9053\u9898\u3002\u5e0c\u671b\u4ee5\u540e\u6709\u66f4\u591a\u7684\u8fd9\u6837\u7684\u9ad8\u8d28\u91cf\u6bd4\u8d5b\u3002\n* \u53d1\u73b0\u8fd9\u4e2a\u6ca1\u6709\u8fb9\u6743\u7684\u8fb9\u6839\u672c\u6ca1\u7528\uff0c\u90a3\u5c31\u4e0d\u52a0\u5427\u3002\u6b64\u65f6\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u68ee\u6797\u3002\u663e\u7136\u5bf9\u4e8e\u6bcf\u68f5\u6811\u6c42\u51fa\u7b54\u6848\u518d\u76f8\u4e58\u5373\u53ef\u3002\n* \u8003\u8651\u4e00\u68f5\u6811\u600e\u4e48\u505a\u3002\u663e\u7136\uff0c\u53ea\u8981\u786e\u5b9a\u4e86\u4e00\u4e2a\u70b9\u7684\u503c\uff0c\u5176\u5b83\u70b9\u7684\u503c\u5c31\u552f\u4e00\u786e\u5b9a\u4e86\u3002\u53ef\u4ee5\u4efb\u53d6\u4e00\u4e2a\u70b9\uff0c\u5c06\u5176\u503c\u8bbe\u4e3a $x,$ \u6839\u636e\u8fb9\u6743\u53ef\u4ee5\u5199\u51fa\u5176\u5b83\u70b9\u6743\u503c\u5173\u4e8e $x$ \u7684\u8868\u8fbe\u5f0f\uff0c\u89e3\u51fa $x$ \u7684\u8303\u56f4\u5373\u53ef\u3002\u663e\u7136\uff0c\u5176\u4ed6\u70b9\u5173\u4e8e $x$ \u7684\u5f62\u5f0f\u53ea\u53ef\u80fd\u662f\u4e00\u6b21\u51fd\u6570\uff0c\u4e14\u53ea\u6709 $x+k$ \u6216 $k-x$ \u4e24\u79cd\u5f62\u5f0f(\u624b\u6a21\u4e00\u4e0b\u6837\u4f8b\u8bd5\u8bd5)\uff0c\u6839\u636e\u8fd9\u4e2a\u53ef\u4ee5\u5217\u51fa\u4e0d\u7b49\u5f0f $l\\leq \\pm x+k\\leq r.$ \u53ef\u4ee5\u901a\u8fc7\u6bcf\u4e2a\u70b9\u89e3\u51fa\u7684\u533a\u95f4\u7f29\u5c0f\u5de6\u53f3\u7aef\u70b9\u7684\u8303\u56f4\u3002\n\n* \u5177\u4f53\u5b9e\u73b0\u8d77\u6765\u5f88\u7b80\u5355\u3002\u5efa\u7acb\u4e24\u4e2a\u6570\u7ec4 $typ,val,$ \u5206\u522b\u50a8\u5b58 $x$ \u7684\u6b63\u8d1f\u6027\u548c\u540e\u9762\u7684\u5e38\u6570(\u6211\u7684\u4ee3\u7801\u91cc $1$ \u662f\u6b63\uff0c$2$ \u662f\u8d1f)\u3002\u5bf9\u4e8e $x$ \u7684\u6bcf\u4e2a\u5b50\u8282\u70b9 $y,$ \u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5c31\u53ef\u4ee5\u786e\u5b9a $y$ \u7684\u5f62\u5f0f\u4e86\u3002\u6ce8\u610f\u5de6\u7aef\u70b9\u8981\u548c\u6bcf\u6b21\u89e3\u51fa\u7684\u5de6\u7aef\u70b9\u53d6 $\\max,$ \u53f3\u7aef\u70b9\u53d6 $\\min.$\n* \u90a3\u4e48\uff0c\u5982\u679c\u6700\u7ec8\u7684 $r>l$ \u5f53\u7136\u65e0\u89e3\uff0c\u5426\u5219\u7b54\u6848\u4e58\u4e0a $r-l+1.$\n* \u65f6\u95f4\u590d\u6742\u5ea6 $O(n).$ \u5982\u679c\u8fd8\u662f\u4e0d\u660e\u767d\uff0c\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\u8f85\u52a9\u7406\u89e3\u3002\n\n\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nint t,n,m,l,r,x,y,z,op;\nconst int maxn=4e5+10;\nconst int mod=1e9+7;\nint head[maxn],nxt[maxn],to[maxn],ver[maxn],tot;\nint typ[maxn],val[maxn],vis[maxn];//typ:\u79cd\u7c7b\nint nowl,nowr,ans=1;\n//typ=1:x+a\n//typ=2:a-x \ninline void add(int x,int y,int z)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n\tver[tot]=z;\n}\ninline void dfs(int x)\n{\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(vis[y])continue;\n\t\tvis[y]=1;\n\t\tif(typ[x]==1)//x+a -> (val-a)-x\n\t\t{\n\t\t\ttyp[y]=2;\n\t\t\tval[y]=ver[i]-val[x];//\u89e3\u65b9\u7a0b\n\t\t\t//val[y]-x>=l\n\t\t\tnowr=min(nowr,val[y]-l);\n\t\t\t//val[y]-x<=r\n\t\t\tnowl=max(nowl,val[y]-r); \n\t\t}\n\t\telse//a-x -> (val-a)+x\n\t\t{\n\t\t\ttyp[y]=1;\n\t\t\tval[y]=ver[i]-val[x];\n\t\t\t//val[y]+x>=l\n\t\t\tnowl=max(nowl,l-val[y]);\n\t\t\t//val[y]+x<=r\n\t\t\tnowr=min(nowr,r-val[y]);\n\t\t}\n\t\tdfs(y);\n\t}\n}\nsigned main()\n{\n\tscanf(\"%lld\",&t);\n\twhile(t--)\n\t{\n\t\ttot=0;ans=1;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(typ,0,sizeof(typ));\n\t\tmemset(val,0,sizeof(val));\n\t\tmemset(head,0,sizeof(head));\n\t\tscanf(\"%lld%lld%lld\",&n,&l,&r);\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%lld%lld%lld\",&op,&x,&y); \n\t\t\tif(op==1)\n\t\t\t{\n\t\t\t\tscanf(\"%lld\",&z);\n\t\t\t\tadd(x,y,z);add(y,x,z);\n\t\t\t}\n\t\t} \n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(vis[i])continue;\n\t\t\tvis[i]=1;\n\t\t\tnowl=l;nowr=r;//\u5f53\u524d\u53d8\u91cfx\u7684\u8303\u56f4\n\t\t\ttyp[i]=1;val[i]=0;//x+0\u7684\u5f62\u5f0f \n\t\t\tdfs(i);\n\t\t\tif(nowl>nowr)ans=0;\n\t\t\telse ans=ans*(nowr-nowl+1)%mod;\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1674887318,
        "uid": 614725,
        "name": "masonpop",
        "ccfLevel": 0,
        "title": "P8971 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u201c\u6ca1\u6709\u8fb9\u6743\u201d\u6ca1\u5565\u7528\u3002\u5f53 $op=0$ \u65f6\uff0c\u6211\u4eec\u5c31\u4e0d\u5efa\u8fb9\u3002\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u68ee\u6797\u3002\u5bf9\u4e8e\u6bcf\u68f5\u6811\u6c42\u89e3\uff0c\u7136\u540e\u7b54\u6848\u4e58\u79ef\u5373\u53ef\u3002\n\n\u73b0\u5728\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u5e26\u6743\u68ee\u6797\u3002\u5bf9\u4e8e\u6bcf\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u94a6\u5b9a\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u5c06 $0$ \u4f5c\u4e3a\u8fd9\u4e2a\u70b9\u7684\u70b9\u6743\u3002\u7136\u540e dfs \u4e00\u904d\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u3002\n\n\u624b\u73a9\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u6839\u7684\u70b9\u6743\u589e\u52a0 $k$ \u65f6\uff0c\u6df1\u5ea6\u4e3a\u5076\u6570\uff08\u5373\u8ddd\u6839\u8282\u70b9\u8ddd\u79bb\u4e3a\u5076\u6570\uff09\u7684\u70b9\u70b9\u6743\u589e\u52a0 $k$\uff0c\u5176\u4ed6\u70b9\u70b9\u6743\u51cf\u5c11 $k$\u3002\u4e8e\u662f\u6c42\u51fa $0$ \u4ee3\u5165\u540e\u5947\u5076\u6df1\u5ea6\u7684\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\uff0c\u7136\u540e\u89e3\u4e0d\u7b49\u5f0f\u7ec4\u5373\u53ef\u3002\n\n\u8bb0\u5f97\u7279\u5224\u4e0d\u7b49\u6570\u7ec4\u65e0\u89e3\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\n\nusing namespace std;\n\nstruct ios {\n    inline char read() {\n        static const int inlen = 1 << 18 | 1;\n        static char buf[inlen], *s, *t;\n        return (s == t) && (t = (s = buf) + fread(buf, 1, inlen, stdin)), s == t ? -1 : *s++;\n    }\n    template<typename T> inline ios& operator>> (T &x) {\n        static char c11, boo;\n        for (c11 = read(), boo = 0; !isdigit(c11); c11 = read()) {\n            if (c11 == -1) return *this;\n            boo |= c11 == '-';\n        }\n        for (x = 0; isdigit(c11); c11 = read()) x = x * 10 + (c11 ^ '0');\n        boo && (x = -x);\n        return *this;\n    }\n} fin;\n\nstruct exios {\n    template<typename _CharT, typename _Traits = char_traits<_CharT>>\n    struct typ {\n        typedef basic_ostream<_CharT, _Traits>& (* end) (basic_ostream<_CharT, _Traits>&);\n    };\n\n    template<typename T> friend exios &operator<<(exios &out, T num) {\n        if (num < 0) putchar('-'), num = -num;\n        if (num >= 10) out << num / 10;\n        putchar(num % 10 + '0');\n        return out;\n    }\n\n    friend exios &operator<<(exios &out, const char * s) { printf(\"%s\", s); return out; }\n    friend exios &operator<<(exios &out, string s) { cout << s; return out; }\n    friend exios &operator<<(exios &out, typ<char>::end e) { puts(\"\"); return out; }\n} fout;\n\nconst int maxn = 2e5 + 1;\nconst int mod = 1e9 + 7;\nconst int inf = 1e15;\n\nstruct edge {\n    int to, next, w;\n};\n\nint t, n, l, r;\nint head[maxn];\nedge e[maxn << 1];\nint cnt;\n\nvoid add_edge(int u, int v, int w) {\n    e[++cnt].to = v;\n    e[cnt].w = w;\n    e[cnt].next = head[u];\n    head[u] = cnt;\n}\n\nint dep[maxn];\nint val[maxn];\nint mn[2], mx[2];\nint lans, rans, ans = 1, tot;\n\nvoid dfs(int u, int fa, int vl) {\n    ++tot;\n    dep[u] = dep[fa] + 1;\n    val[u] = vl;\n    mn[dep[u] & 1] = min(mn[dep[u] & 1], val[u]);\n    mx[dep[u] & 1] = max(mx[dep[u] & 1], val[u]);\n    for (int i = head[u]; i; i = e[i].next) {\n        int v = e[i].to;\n        if (v == fa) continue;\n        dfs(v, u, e[i].w - vl);\n    }\n}\n\nvoid intersec(int l, int r) {\n    if (lans < l) lans = l;\n    if (rans > r) rans = r;\n}\n\nsigned main() {\n    fin >> t;\n    while (t--) {\n        memset(dep, -1, sizeof(dep));\n        memset(val, 0, sizeof(val));\n        memset(head, 0, sizeof(head));\n        memset(e, 0, sizeof(e));\n        cnt = 0, ans = 1;\n        fin >> n >> l >> r;\n        int op, u, v, w;\n        for (int i = 1; i <= n - 1; i++) {\n            fin >> op >> u >> v;\n            if (!op) continue;\n            fin >> w;\n            add_edge(u, v, w);\n            add_edge(v, u, w);\n        }\n        for (int i = 1; i <= n; i++) {\n            if (!~dep[i]) {\n                mn[0] = mn[1] = inf;\n                mx[0] = mx[1] = -inf;\n                tot = 0;\n                dfs(i, 0, 0);\n                if (tot == 1) {\n                    // cout << i << \" \" << (r - l + 1) << endl;\n                    ans = ans * ((r - l + 1) % mod) % mod;\n                    continue;\n                }\n                lans = -inf, rans = inf;\n                intersec(l - mn[0], r - mn[0]);\n                intersec(l - mx[0], r - mx[0]);\n                intersec(mn[1] - r, mn[1] - l);\n                intersec(mx[1] - r, mx[1] - l);\n                // cout << i << \" \" << (rans - lans + 1) << endl;\n                if (lans <= rans) ans = ans * ((rans - lans + 1) % mod) % mod;\n                else ans = 0;\n            }\n        }\n        fout << ans << endl;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1674815767,
        "uid": 362750,
        "name": "TernaryTree",
        "ccfLevel": 0,
        "title": "\u300eGROI-R1\u300f \u8679\u8272\u7684\u5f7c\u5cb8\u82b1"
    },
    {
        "content": "\u5bf9\u4e8e\u524d\u4e09\u4e2a\u5b50\u4efb\u52a1\uff0c\u968f\u4fbf\u66b4\u529b\u505a\u4e00\u505a\uff0c\u5224\u65ad\u4e00\u4e0b\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u603b\u80fd\u8fc7\u7684\u3002\u8fd9\u91cc\u4e0d\u591a\u5c55\u5f00\u3002\r\n\r\n\u5bf9\u4e8e\u7b2c\u56db\u4e2a\u5b50\u4efb\u52a1\uff0c\u663e\u7136\u6bcf\u4e2a\u70b9\u7684\u70b9\u6743\u90fd\u6ca1\u6709\u9650\u5236\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f $(r-l+1)^n$\u3002\r\n\r\n\u63a5\u4e0b\u6765\u8bb2\u89e3\u6b63\u89e3\u7684\u505a\u6cd5\u3002\r\n\r\n\u9996\u5148\uff0c\u7531\u4e8e\u6ca1\u6709\u8fb9\u6743\u7684\u8fb9\u65e0\u9650\u5236\uff0c\u5c31\u4e0d\u53bb\u7ba1\u5b83\u3002\u628a\u6ca1\u6709\u8fb9\u6743\u7684\u8fb9\u5220\u9664\u540e\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u68ee\u6797\u3002\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u68ee\u6797\u4e2d\u7684\u6bcf\u4e00\u68f5\u6811\u8fdb\u884c\u6c42\u89e3\uff0c\u7136\u540e\u628a\u6bcf\u4e00\u68f5\u6811\u7684\u7b54\u6848\u4e58\u8d77\u6765\u5373\u53ef\u3002\r\n\r\n\u8003\u8651\u6bcf\u4e00\u68f5\u6811\u7684\u89e3\u6cd5\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u68f5\u6811\u4e2d\uff0c\u53ea\u8981\u786e\u5b9a\u4e00\u4e2a\u70b9\u7684\u6743\u503c\uff0c\u5176\u4ed6\u6240\u6709\u70b9\u7684\u6743\u503c\u90fd\u662f\u53ef\u4ee5\u8ba1\u7b97\u7684\u3002\u5982\u679c\u8bbe\u6700\u521d\u90a3\u4e2a\u70b9\u7684\u6743\u503c\u662f $x$\uff0c\u90a3\u4e48\u5176\u4ed6\u70b9\u7684\u6743\u503c\u53ea\u80fd\u662f $x+k$ \u6216 $-x+k$\uff0c\u5176\u4e2d $k$ \u662f\u5e38\u6570\u3002\u5982\u4f55\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684 $k$ \u5462\uff1f\u6211\u4eec\u8003\u8651\u4ece\u6700\u521d\u7684\u70b9\u5f00\u59cb\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u3002\u901a\u8fc7\u4e0a\u4e00\u4e2a\u70b9\u7684 $k$ \u548c\u8fd9\u6761\u8fb9\u7684\u6743\u503c\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8fd9\u4e2a\u70b9\u7684 $k$\uff0c\u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\u5c31\u662f $k_v=val_e-k_u$\u3002\u540c\u65f6\uff0c\u6bcf\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9 $x$ \u7684\u7b26\u53f7\u76f8\u53cd\u3002\u6211\u4eec\u53ea\u9700\u8981\u5728\u904d\u5386\u7684\u540c\u65f6\u8bb0\u5f55\u5f53\u524d\u70b9 $x$ \u7684\u7b26\u53f7\u4e0e $k$\uff0c\u5373\u53ef\u8fdb\u884c\u8ba1\u7b97\u3002\r\n\r\n\u904d\u5386\u5b8c\u8fd9\u4e00\u68f5\u6811\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u70b9\u6743\u5f62\u5982 $x+k$ \u7684\u70b9\u7684\u70b9\u6743\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca\u70b9\u6743\u5f62\u5982 $-x+k$ \u7684\u70b9\u7684\u70b9\u6743\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u8fd9\u5176\u5b9e\u5c31\u662f\u5b83\u4eec\u5404\u81ea $k$ \u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u6211\u4eec\u8bbe\u8fd9\u56db\u4e2a\u503c\u5206\u522b\u4e3a $\\text{maxp,minp,maxn,minn}$\u3002\u53ea\u8981\u5b83\u4eec\u56db\u4e2a\u70b9\u7684\u6743\u503c\u6ee1\u8db3\u5728\u53d6\u503c\u8303\u56f4\u4e4b\u5185\uff0c\u5c31\u4e00\u5b9a\u6210\u7acb\u3002\u6211\u4eec\u53ef\u4ee5\u5217\u51fa\u4ee5\u4e0b\u4e0d\u7b49\u5f0f\u7ec4\uff1a\r\n$$\\begin{cases}\r\nx+maxp\\le r \\\\\r\nx+minp\\ge l \\\\\r\n-x+maxn\\le r \\\\\r\n-x+minn\\ge l\r\n\\end{cases}$$\r\n\r\n\u89e3\u51fa\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u7ec4\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86 $x$ \u7684\u53d6\u503c\u8303\u56f4\u3002\u5982\u679c\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u7ec4\u65e0\u89e3\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $0$\u3002\u5426\u5219\uff0c\u6211\u4eec\u8bbe\u89e3\u51fa\u6765 $L\\le x\\le R$\uff0c\u90a3\u4e48\u56e0\u4e3a $x$ \u662f\u6574\u6570\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u6210\u7acb\u7684 $x$ \u4e2a\u6570\u5c31\u662f $R-L+1$\u3002\u8fd9\u5c31\u662f\u4e00\u68f5\u6811\u7684\u7b54\u6848\u6c42\u89e3\u65b9\u5f0f\u3002\u6700\u540e\u628a\u6bcf\u68f5\u6811\u7684\u7b54\u6848\u76f8\u4e58\u5373\u53ef\u3002\r\n\r\n\u6ce8\u610f\u5982\u679c\u8fd9\u68f5\u6811\u53ea\u6709\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $r-l+1$\u3002\u5426\u5219\uff0c\u5728\u5f00\u59cb\u904d\u5386\u4e4b\u524d\uff0c\u9700\u8981\u4efb\u610f\u627e\u4e00\u4e2a\u6839\u8282\u70b9\u8fde\u7740\u7684\u70b9\u4ee5\u8ba1\u7b97\u56db\u4e2a\u6570\u7684\u521d\u59cb\u503c\u3002",
        "postTime": 1672981183,
        "uid": 222865,
        "name": "\u8fdf\u66ae\u5929\u590d\u660e",
        "ccfLevel": 6,
        "title": "\u8679\u8272\u7684\u5f7c\u5cb8\u82b1"
    }
]