[
    {
        "content": "sol of D:\n\n\u4e0b\u6587\u4ee4n\uff0cq\u540c\u9636\n\n## subtask1\n\n\u6309\u7167\u9898\u610f\u6a21\u62df\uff0c\u6bcf\u6b21\u628a\u4e24\u4e2a\u533a\u95f4\u6392\u5e8f\u5e76\u4e00\u4e00\u6bd4\u8f83\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2\\log_2n)$\n\n## subtask2\n\u9898\u610f\u5176\u5b9e\u662f\u8981\u4f60\u5224\u65ad\u533a\u95f4\u6392\u5e8f\u540e\u5dee\u5206\u6570\u7ec4\u662f\u5426\u76f8\u540c\uff0c\u4e14\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff1a$k$\u53ea\u6709\u53ef\u80fd\u662f$\\min \\{a_{l_2}\\dots a_{r_2}\\}-\\{\\min a_{l_1}\\dots a_{r_1}\\}$\uff0c\u4e8e\u662f\u6211\u4eec\u66b4\u529b\u5224\u65ad2\u4e2a\u533a\u95f4\u5bf9\u5e94\u7684\u6570\u5b57\u4e2a\u6570\u662f\u5426\u76f8\u540c\u5373\u53ef\u3002\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u505a\u5230$O(nV\\log n)$,\u4f7f\u7528\u5927\u5bb6\u9ad8\u8d85\u7684\u5206\u5757\u6280\u5de7\u53ef\u4ee5\u505a\u5230\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt{n}+nV)$\n\n## subtask3\n\n\u7ef4\u62a4\u533a\u95f4k\u6b21\u65b9\u548c\uff0c\u7136\u540e$O(k^2)$\u5730\u5bf9\u4e8e\u4efb\u610f$1\\leq d \\leq k$\u6c42\u51fa$\\sum (a_i+b)^d$\uff0c\u4f9d\u6b21\u6bd4\u8f83\u662f\u5426\u76f8\u540c\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(nk\\log n+nk^2)$,k\u9700\u8981\u5f00\u5230$\\log n$\u624d\u80fd\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\n\n[k\u8f83\u5c0f\u7684hack\u65b9\u6cd5](https://www.luogu.com.cn/discuss/show/105778)\n\n## subtask4\n\n\u6211\u4eec\u672c\u8d28\u4e0a\u662f\u8981\u6c42\u6bcf\u4e2a\u6570\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u76f8\u540c\uff0c\u5982\u679c\u7ed9\u6bcf\u4e2a\u6570\u4e00\u4e2a\u968f\u673a\u7684\u6620\u5c04\u503c$\\operatorname{Hash_v}$\uff0c\u4e24\u4e2a\u533a\u95f4\u7684\u6620\u5c04\u503c\u662f\u5426\u76f8\u540c\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u4e24\u533a\u95f4\u662f\u5426\u672c\u8d28\u76f8\u540c\u7684\u4f9d\u636e\u3002\n\n\u73b0\u5728\u5173\u952e\u95ee\u9898\u53d8\u6210\u4e86\u5982\u4f55\u628a$a_l\\dots a_r$\u7684\u54c8\u5e0c\u503c\u5feb\u901f\u8f6c\u5316\u4e3a$a_l+k\\dots a_r+k$\u7684\u54c8\u5e0c\u503c\uff1f\n\n\u4ee4$\\operatorname{Hash_v}=\\operatorname{g^v}$\u5373\u53ef\u5feb\u901f\u8f6c\u6362\u3002\n\n\ntips:\u5f88\u591a\u4eba\u88ab\u5361\u5e38\u90fd\u662f\u56e0\u4e3a\u4f7f\u7528\u4e86\u7ebf\u6bb5\u6811\uff0c\u7528\u7ebf\u6bb5\u6811\u662f\u56e0\u4e3a\u8981\u6c42\u5e26\u4fee\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u5fc5\u8981\uff0c\u4e24\u533a\u95f4\u7684\u548c\u4e4b\u5dee\u9664\u4ee5\u533a\u95f4\u957f\u5ea6\u5c31\u662f\u9898\u76ee\u4e2d\u7684k\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002",
        "postTime": 1595934648,
        "uid": 7480,
        "name": "skydogli",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6688 \u3010\u53ef\u91cd\u96c6\u3011"
    },
    {
        "content": "# \u6784\u9020\u7279\u5f81\u51fd\u6570\n\n\u9996\u5148\u53ef\u91cd\u96c6\u8fd9\u4e2a\u6807\u9898\u5f88\u6709\u542f\u793a\u4f5c\u7528\uff0c\u8fd9\u4e5f\u662f\u9898\u610f\u8981\u6c42\u6211\u4eec\u7684\uff0c\u628a\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u533a\u95f4\u770b\u505a\u4e00\u4e2a\u53ef\u91cd\u96c6\u3002\n\n\u90a3\u4e48\u8be2\u95ee\u4e24\u4e2a\u533a\u95f4\u672c\u8d28\u662f\u5426\u76f8\u540c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u6211\u4eec\u5bf9\u533a\u95f4\u7ef4\u62a4\u4e00\u4e2a\u7279\u5f81\u51fd\u6570\uff0c\u4f7f\u5f97\u5176\u53ef\u4ee5\u4ee3\u8868\u8fd9\u4e2a\u53ef\u91cd\u96c6\u3002\n\n\u800c\u4e14\u56e0\u4e3a\u5ffd\u7565\u53ef\u91cd\u96c6\u7684\u5dee\u503c\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7279\u5f81\u51fd\u6570\uff0c\u8fd8\u5fc5\u987b\u662f\u5728\u81ea\u53d8\u91cf\u52a0\u51cf\u540e\u5bb9\u6613\u5f97\u5230\u5bf9\u5e94\u51fd\u6570\u503c\u7684\u3002\uff08\u6bd4\u5982$\\log(x)$\u5c31\u4e0d\u662f\u5f88\u5408\u9002\uff0c\u56e0\u4e3a\u5bf9x\u52a0\u51cf\u540e\u7684\u51fd\u6570\u503c\u5e76\u4e0d\u5bb9\u6613\u5f97\u51fa\uff09\n\n\u5bb9\u6613\u60f3\u5230\u7684\u662f\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u591a\u9879\u5f0f\u51fd\u6570\u6216\u8005\u6307\u6570\u51fd\u6570\uff0c\u5728\u6570\u636e\u70b9\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5f88\u597d\u5730\u901a\u8fc7\u6b64\u9898\uff0c\u4f46\u523b\u610f\u6784\u9020\u6570\u636e\u5c06\u5176hack\u4e5f\u662f\u5b8c\u5168\u53ef\u884c\u7684\u3002\uff08~~\u4e5f\u5c31\u662f\u8bf4\u5728cf\u65e9\u5c31\u706b\u846c\u573a\u4e86~~\uff09\n\n\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u9009\u62e9\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u4e14\u57fa\u672c\u65e0\u6cd5\u88abhack\u7684\u7279\u5f81\u51fd\u6570\uff1a$\\sin(x)$\n\n# \u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n\u5f62\u5f0f\u5316\u5730\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u662f$\\sum \\sin(a_i - \\min(a_i))$\n\n\u56e0\u6b64\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u4fe1\u606f\u6709\uff1a$\\sin(a_i),\\cos(a_i),\\min(a_i)$\n\n```cpp\n#include<bits/stdc++.h>\n\n#define gc() getchar()\n\n#define ri register int \n#define db double\n\n#define inf 0x3f3f3f3f\n\nusing std::min;\n\ninline int read()\n{\n\tint ret=0;char ch=gc();\n\twhile(!isdigit(ch))ch=gc();\n\twhile(isdigit(ch))\n\t{\n\t\tret=ret*10+ch-'0';\n\t\tch=gc();\n\t}\n\treturn ret;\n}\n\nconst int MAXN=1e6+10;\n\nint n,m;\nint b[MAXN];\n\nstruct node\n{\n\tint v;\n\tdb s,c;\n\tnode(int V=0,db S=0,db C=0):v(V),s(S),c(C){}\n};\n\nstruct Segment_tree\n{\n\tnode a[MAXN*4];\n\t#define ls (u<<1)\n\t#define rs (u<<1|1)\n\tinline void push_up(int u)\n    {\n        a[u]=node(min(a[ls].v,a[rs].v),a[ls].s+a[rs].s,a[ls].c+a[rs].c);\n   \t}\n\tvoid build(int u,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t\ta[u]=node(b[l],sin(b[l]),cos(b[l]));\n\t\telse\n\t\t{\n\t\t\tint mid=(l+r)/2;\n\t\t\tbuild(ls,l,mid);\n\t\t\tbuild(rs,mid+1,r);\n\t\t\tpush_up(u);\n\t\t}\n\t}\n\tvoid assign(int u,int l,int r,int p,int v)\n\t{\n\t\tif(l==r)\n\t\t\ta[u]=node(v,sin(v),cos(v));\n\t\telse\n\t\t{\n\t\t\tint mid=(l+r)/2;\n\t\t\tif(p<=mid)assign(ls,l,mid,p,v);\n\t\t\telse assign(rs,mid+1,r,p,v);\n\t\t\tpush_up(u);\n\t\t}\n\t}\n\tnode ask(int u,int l,int r,int ql,int qr)\n\t{\n\t\tif(ql<=l && r<=qr)\n            return a[u];\n\t\telse\n\t\t{\n\t\t\tint mid=(l+r)/2;\n\t\t\tnode ret=node(inf,0,0);\n\t\t\tif(ql<=mid)ret=ask(ls,l,mid,ql,qr);\n\t\t\tif(mid+1<=qr)\n\t\t\t{\n\t\t\t\tnode t=ask(rs,mid+1,r,ql,qr);\n\t\t\t\tret=node(min(ret.v,t.v),ret.s+t.s,ret.c+t.c);\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t}\n\t#undef ls\n\t#undef rs\n}tree;\n\nint main()\n{\n//\tfreopen(\"in.in\",\"r\",stdin);\n\t\n\tn=read();m=read();\n\tfor(ri i=1;i<=n;++i)b[i]=read();\n\ttree.build(1,1,n);\n\t\n\tri op,l1,r1,l2,r2;\n\tfor(ri i=1;i<=m;++i)\n\t{\n\t\top=read();\n\t\tif(!op)\n\t\t{\n\t\t\tl1=read();r1=read();\n\t\t\ttree.assign(1,1,n,l1,r1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl1=read();r1=read();\n\t\t\tl2=read();r2=read();\n\t\t\tnode a1=tree.ask(1,1,n,l1,r1);\n\t\t\tnode a2=tree.ask(1,1,n,l2,r2);\n\t\t\tdb ans1=a1.s*cos(a1.v)-a1.c*sin(a1.v);\n\t\t\tdb ans2=a2.s*cos(a2.v)-a2.c*sin(a2.v);\n\t\t\tif(fabs(ans1-ans2)<1e-9)puts(\"YES\");\n\t\t\telse puts(\"NO\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n---\n\n\u7136\u800c\u7531\u4e8e\u5361\u65f6\u9650\uff0c\u6700\u540e\u4e00\u4e2asubtask\u600e\u4e48\u4e5f\u8fc7\u4e0d\u53bb\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7528zkw\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n\u4e8b\u5b9e\u8bc1\u660e\u5176\u5e38\u6570\u5f88\u5c0f\uff0c\u6700\u6162\u7684\u4e00\u4e2a\u70b9\u4e5f\u53ea\u8dd1\u4e86700ms\n\n```cpp\n#include<bits/stdc++.h>\n\n#define gc() getchar()\n\n#define ri register int \n#define db double\n\n#define inf 0x3f3f3f3f\n\nusing std::min;\n\ninline int read()\n{\n\tint ret=0;char ch=gc();\n\twhile(!isdigit(ch))ch=gc();\n\twhile(isdigit(ch))\n\t{\n\t\tret=ret*10+ch-'0';\n\t\tch=gc();\n\t}\n\treturn ret;\n}\n\nconst int MAXN=1e6+10;\n\nint n,m;\n\nstruct node\n{\n\tint v;\n\tdb s,c;\n\tnode(int V=0,db S=0,db C=0):v(V),s(S),c(C){}\n};\n\nstruct Segment_tree\n{\n\tint sz=1;\n\tnode a[MAXN*4];\n\t#define ls (u<<1)\n\t#define rs (u<<1|1)\n\tinline void push_up(int u)\n    {\n        a[u]=node(min(a[ls].v,a[rs].v),a[ls].s+a[rs].s,a[ls].c+a[rs].c);\n    }\n\tvoid build()\n\t{\n\t\twhile(sz<n+2)sz<<=1;\n\t\tfor(ri i=1;i<=n;++i)\n\t\t{\n\t\t\tint v=read();\n\t\t\ta[i+sz]=node(v,sin(v),cos(v));\n\t\t}\n\t\ta[sz]=node(inf,0,0);\n\t\tfor(ri i=n+1+sz;i<=sz-1+sz;++i)a[i]=node(inf,0,0);\n\t\tfor(ri i=sz-1;i>=1;--i)push_up(i);\n\t}\n\tvoid assign(int p,int v)\n\t{\n\t\tp+=sz;\n\t\ta[p]=node(v,sin(v),cos(v));\n\t\tp>>=1;\n\t\twhile(p){push_up(p);p>>=1;}\n\t}\n\tnode ask(int l,int r)\n\t{\n\t\tl+=sz-1;r+=sz+1;\n\t\tnode ret=node(inf,0,0);\n\t\twhile(l!=(r^1))\n\t\t{\n\t\t\tif(!(l&1))ret=node(min(ret.v,a[l^1].v),ret.s+a[l^1].s,ret.c+a[l^1].c);\n\t\t\tif(r&1)ret=node(min(ret.v,a[r^1].v),ret.s+a[r^1].s,ret.c+a[r^1].c);\n\t\t\tl>>=1;r>>=1;\n\t\t}\n\t\treturn ret;\n\t}\n\t#undef ls\n\t#undef rs\n}tree;\n\nint main()\n{\n//\tfreopen(\"in.in\",\"r\",stdin);\n\t\n\tn=read();m=read();\n\ttree.build();\n\t\n\tri op,l1,r1,l2,r2;\n\tfor(ri i=1;i<=m;++i)\n\t{\n\t\top=read();\n\t\tif(!op)\n\t\t{\n\t\t\tl1=read();r1=read();\n\t\t\ttree.assign(l1,r1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl1=read();r1=read();\n\t\t\tl2=read();r2=read();\n\t\t\tnode a1=tree.ask(l1,r1);\n\t\t\tnode a2=tree.ask(l2,r2);\n\t\t\tdb ans1=a1.s*cos(a1.v)-a1.c*sin(a1.v);\n\t\t\tdb ans2=a2.s*cos(a2.v)-a2.c*sin(a2.v);\n\t\t\tif(fabs(ans1-ans2)<1e-9)puts(\"YES\");\n\t\t\telse puts(\"NO\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1595929012,
        "uid": 239241,
        "name": "Singercoder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6688 \u3010\u53ef\u91cd\u96c6\u3011"
    },
    {
        "content": "~~\u5148\u63d0\u524d\u7801\u597d\u9898\u89e3\u7b49\u5f00\u653e\u901a\u9053\u4e86\u4ea4~~\n\n\u8bdd\u8bf4\u4eca\u5929\u8bb2\u8bfe\u65f6\u6709\u542c\u5230\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\u76ee\n\n\u7136\u540e\u5e95\u4e0b\u5c31\u6709\u4eba\u63d0\u5230 \"luogu\u6708\u8d5b\"\uff0c\u4e8e\u662f\u6211\u5c31\u53bb\u6708\u8d5b\u7ffb\u4e86\u7ffb\uff0c\u7136\u540e\u627e\u5230\u4e86\u8fd9\u9053\u9898qwq\n\n## \u89e3\u6790\n\n\u9898\u76ee\u76f8\u5f53\u4e8e\u662f\u8be2\u95ee\u4e24\u4e2a\u6570\u5217\u533a\u95f4\u6392\u5e8f\u540e\u5bf9\u5e94\u7684\u76f8\u90bb\u5143\u7d20\u7684\u5dee\u662f\u5426\u5b8c\u5168\u76f8\u7b49\uff0c\u5e76\u4e14\u652f\u6301\u5355\u70b9\u4fee\u6539\n\n\u60f3\u8981\u6bd4\u8f83\u533a\u95f4\u662f\u5426\u76f8\u7b49\uff0c\u6709\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u5c06\u6240\u6709\u5143\u7d20\u5206\u522b\u4e58\u4e00\u4e2a $\\text{base}$ \u503c\u7684\u5e42\u5e76\u6c42\u548c\uff0c\u7528\u54c8\u5e0c\u6bd4\u8f83\u3002\u4e00\u822c\u6765\u8bf4 $\\text{base}$ \u7684\u5e42\u662f\u6309\u5143\u7d20\u5728**\u5e8f\u5217\u5185\u4f4d\u7f6e**\u6765\u51b3\u5b9a\u7684\n\n\u4f46\u9898\u76ee\u8fd8\u8981\u6c42\u6211\u4eec\u5c06\u8fd9\u4e9b\u5143\u7d20\u6392\u5e8f\u3002\u8fd9\u65f6\u5c31\u53ef\u4ee5\u60f3\u5230\u5728 $\\text{base}$ \u7684\u5e42\u4e0a\u505a\u624b\u811a\uff1b\u5177\u4f53\u6765\u8bf4\uff0c\u56e0\u4e3a\u6b64\u65f6**\u5143\u7d20\u5728\u5e8f\u5217\u5185\u7684\u4f4d\u7f6e\u4e0d\u518d\u91cd\u8981**\uff0c\u6211\u4eec\u4e0d\u6309\u5143\u7d20\u5728\u5e8f\u5217\u5185\u4f4d\u7f6e\uff0c\u800c\u662f\u6309**\u5143\u7d20\u7684\u503c**\u6765\u51b3\u5b9a $\\text{base}$ \u7684\u5e42\n\n\u4f8b\u5982\u8bbe $\\text{base}$ \u4e3a $3$\uff0c\u5219\u5e8f\u5217 $1, 1, 4, 5, 1, 4$ \u7684\u54c8\u5e0c\u503c\u5c31\u4e3a $3^1+3^1+3^4+3^5+3^1+3^4$\n\n\u81f3\u4e8e \"\u76f8\u90bb\u5143\u7d20\u7684\u5dee\"\uff0c\u6211\u4eec\u518d\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5728\u6bd4\u8f83\u524d\u7ed9\u6700\u5c0f\u503c\u8f83\u5c0f\u7684\u533a\u95f4\u7684\u54c8\u5e0c\u503c\u4e58\u4e0a\u4e00\u4e2a**\u8865\u507f\u503c**\uff0c\u4f7f\u5f97\u5b83\u4eec\u54c8\u5e0c\u503c\u5f0f\u5b50\u7684\u6700\u5c0f\u5e42\u6b21\u76f8\u7b49\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6bd4\u8f83\u4e86\n\n## CODE\n\n\u4ee3\u7801\u65b9\u9762\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u6807\u51c6\u7ebf\u6bb5\u6811\u5c31\u884c\u4e86\n\n$\\text{base}$ \u7684\u503c~~\u5e94\u8be5\u968f\u4fbf\u9009\u4e2a\u6570\u90fd\u53ef\u4ee5~~\uff08upd\uff09\u5efa\u8bae\u6bd4 $n$ \u8981\u5927\uff08\u907f\u514d\u5e95\u5e42\u7684 $\\text{base}$ \u7ec4\u5408\u6210\u9ad8\u5e42\u7684 $\\text{base}$\uff09\uff08\u4ee3\u7801\u91cc\u5c31\u61d2\u5f97\u6539\u4e86qwq\uff09\uff0c\u800c\u54c8\u5e0c\u7684\u6a21\u6570\u4e3a\u4e86\u907f\u514d\u51b2\u7a81\u6700\u597d\u9009\u5c3d\u91cf\u5927\u7684\u8d28\u6570\n\n\u53e6\u5916\u6ce8\u610f\u6709\u51e0\u4e2a\u70b9\u6709\u70b9\u5361\u5e38\uff0c\u53ef\u4ee5\u6bcf\u6b21\u67e5\u8be2\u4e00\u6b21\u6027\u67e5\u533a\u95f4\u54c8\u5e0c\u548c\u6700\u5c0f\u503c\uff0c\u8282\u7701\u4e9b\u5e38\u6570\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing std::min;\nusing std::pair;\nusing std::swap;\ntypedef pair<int, int> pad;\n\nconst int MAXN =1e6+50;\nconst int X =2, M =1e9+7;\n\n/*------------------------------Seg------------------------------*/\n\nint mn[MAXN<<2], sum[MAXN<<2], pow[MAXN];\nint N =1;\n\ninline void pushup(int x){\n\tmn[x] =min(mn[x<<1], mn[(x<<1)|1]);\n\tsum[x] =(sum[x<<1]+sum[(x<<1)|1])%M;\n}\n\nvoid modify(int pos, int val, int x =1, int nl =1, int nr =N){\n\tif(nl == nr){\n\t\tmn[x] =val;\n\t\tsum[x] =pow[val];\n\t\treturn;\n\t}\n\tint mid =(nl+nr)>>1;\n\tif(pos <= mid) modify(pos, val, x<<1, nl, mid);\n\telse modify(pos, val, (x<<1)|1, mid+1, nr);\n\tpushup(x);\n}\n\n/*first -> mn, second -> sum*/\npad query(int l, int r, int x =1, int nl =1, int nr =N){\n\tif(l == nl && r == nr)\n\t\treturn pad(mn[x], sum[x]);\n\tint mid =(nl+nr)>>1;\n\tif(r <= mid) return query(l, r, x<<1, nl, mid);\n\telse if(l >= mid+1) return query(l, r, (x<<1)|1, mid+1, nr);\n\telse{\n\t\tpad ret1 =query(l, mid, x<<1, nl, mid),\n\t\t\tret2 =query(mid+1, r, (x<<1)|1, mid+1, nr);\n\t\t(ret1.second +=ret2.second) %=M;\n\t\tret1.first =min(ret1.first, ret2.first);\n\t\treturn ret1;\n\t}\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\ninline void prepow(){\n\tpow[0] =1;\n\tfor(int i =1; i < MAXN; ++i)\n\t\tpow[i] =1ll*pow[i-1]*X%M;\n}\n\nint main(){\n\tprepow();\n\tint n =read(), m =read();\n\twhile(N < n) N <<=1;\n\tfor(int i =N; i < N+n; ++i)\n\t\tmn[i] =read(), sum[i] =pow[mn[i]];\n\tfor(int i =N-1; i >= 1; --i)\n\t\tpushup(i);\n\tfor(int i =0; i < m; ++i){\n\t\tint op =read();\n\t\tif(op == 0){\n\t\t\tint x =read(), y =read();\n\t\t\tmodify(x, y);\n\t\t}\n\t\telse{\n\t\t\tint l1 =read(), r1 =read(), l2 =read(), r2 =read();\n\t\t\tpad q1 =query(l1, r1), q2 =query(l2, r2);\n\t\t\tif(q1.first > q2.first)\n\t\t\t\tswap(q1, q2);\n\t\t\tif(1ll*q1.second*pow[q2.first-q1.first]%M == q2.second)\n\t\t\t\tputs(\"YES\");\n\t\t\telse\n\t\t\t\tputs(\"NO\");\n\t\t}\n\t}\n}\n```",
        "postTime": 1595836205,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6688 \u3010\u53ef\u91cd\u96c6\u3011"
    },
    {
        "content": "## \u5e8f\uff1a\n\u8fd9\u9898\u5176\u5b9e\u4e0d\u96be\uff0c\u5c31\u662f\u5728\u7ebf\u6bb5\u6811\u4e0a\u7528 hash \u7ef4\u62a4\u4e00\u4e2a\u503c\u3002\u7ed3\u679c\u6211\u6bd4\u8d5b\u65f6\u5149\u60f3\u5230\u6570\u7ec4\u3001`bitset`\u3001`string` \u90fd\u4e0d\u80fd\u7528\uff0c\u5c31\u662f\u6ca1\u60f3\u5230\u7528\u54c8\u5e0c\u3002\u3002\u3002\uff08wtcl\uff09   \n\n___\n\n## \u5f15\u8a00\uff1a   \n\u8003\u8651\u5982\u4f55\u8868\u793a\u4e00\u4e2a\u6570\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e2a\u6876\uff0c\u5373\uff1a   \n```cpp\nint i,tot[M];\nfor(i=1;i<=n;i++)\n\t++tot[a[i]];//\u8fd9\u4e2a\u6570\u6bcf\u51fa\u73b0\u4e00\u6b21\uff0c\u5b83\u7684\u51fa\u73b0\u6b21\u6570\u52a0\u4e00\nfor(i=0;i<=m;i++)\n\tprintf(\"%d\\n\",tot[i]);\n```    \n\u5176\u4e2d $n$ \u8868\u793a\u6570\u96c6\u5927\u5c0f\uff0c $m$ \u8868\u793a\u6570\u7684\u8303\u56f4\u4e0a\u754c\uff0c$tot_i$ \u8868\u793a\u6570 $i$ \u7684\u51fa\u73b0\u6b21\u6570\u3002    \n\n\u4f46\u662f\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u663e\u7136\u592a\u9ebb\u70e6\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8868\u793a\uff0c\u5982\uff1a   \n```cpp\nstring s;\ns.resize(M);\nfor(i=0;i<=m;i++)\n\ts[i]=tot[i];\n```   \n\u663e\u7136\u8fd9\u6837\u8868\u793a\u4e00\u4e2a\u6570\u96c6\u65f6\u7a7a\u590d\u6742\u5ea6\u4ecd\u7136\u662f $\\mathbf O(M)$ \uff0c\u4e14\u4e00\u4e2a `char` \u4e5f\u5b58\u4e0d\u4e0b `int` \uff0c\u4ecd\u7136\u4e0d\u53ef\u884c\u3002   \n\n\u7136\u800c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c31\u6b64\u4ece\u5b57\u7b26\u4e32\u54c8\u5e0c\u4e2d\u5f97\u5230\u7075\u611f\u3002\u6211\u4eec\u53ef\u4ee5 **\u628a\u4e4b\u524d\u90a3\u4e2a\u5047\u60f3\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u6210\u4e00\u4e2a\u503c**\uff01\u5728\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u6b63\u786e\u7387\u4e0b\uff0c\u5982\u679c\u54c8\u5e0c\u503c\u76f8\u7b49\uff0c\u5219\u4e24\u5b57\u7b26\u4e32\u76f8\u540c\uff1b**\u540c\u7406\uff0c\u5982\u679c\u6211\u4eec\u5bf9 $tot_i$ \u6570\u7ec4\u54c8\u5e0c\uff0c\u54c8\u5e0c\u503c\u76f8\u7b49\u7684\u5177\u6709\u76f8\u540c\u7684 $tot_i$ \u6570\u7ec4\uff0c\u5373\u5177\u6709\u76f8\u540c\u7684\u6570\u96c6**\uff01 \n\n____\n\n## \u53ef\u884c\u6027\u8bc1\u660e\uff1a   \n\u4ee5\u4e0b\u8bc1\u660e\u5747\u5efa\u7acb\u5728\u6574\u6570\u54c8\u5e0c\u5b8c\u5168\u6b63\u786e\u7684\u5047\u8bbe\u4e0b\uff1a    \n\u8003\u8651\u4e00\u4e2a\u6570\u7ec4 $a_0,a_1,a_2,\\dots,a_m$ \u53d6\u503c\u8303\u56f4\u5728 $[0,n]\\cap N$ \u4e4b\u5185\u3002\u6211\u4eec\u7528\u4e00\u4e2a **\u5927\u4e8e$n$** \u7684\u503c $base$ \u4e3a\u57fa\u6570\u8fdb\u884c\u54c8\u5e0c\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u54c8\u5e0c\u503c\uff08\u4e0d\u53d6\u6a21\uff09\u8868\u793a\u4e3a\u4e00\u4e2a $base$ \u8fdb\u5236\u6570 $\\overline{a_m\\dots a_2a_1a_0}$\uff0c\u76f8\u5f53\u4e8e $a_0 + a_1 * base + a_2 * base^2 + \\dots + a_m * base^m$\u3002   \n\u56e0\u4e3a\u5bf9\u4e8e $\\forall i$ \uff0c   \n1. $base$ \u8fdb\u5236\u4e0b $\\forall X=\\overline{x_{i-1}\\dots x_2x_1x_0}$ \u5373 $x_0 + x_1 * base + x_2 * base^2 + \\dots + x_{i-1} * base^{i-1}$ \uff0c\u6709 $X<1 * base^i$    \n2. $base$ \u8fdb\u5236\u4e0b $\\forall X=\\overline{x_m\\dots x_{i+2}x_{i+1}0\\dots 0}$ \u5373 $x_{i+1} * base^{i+1} + x_{i+2} * base^{i+2} + \\dots + x_m * base^m$ \uff0c\u6709 $X> (base-1) * base^i $  \n\n\u6240\u4ee5\u4e24\u54c8\u5e0c\u503c\u76f8\u7b49\u4efb\u610f\u4e24\u4f4d\u4e0a\u7684\u6570\u76f8\u540c\u3002   \n\n\u7b80\u5355\u7406\u89e3\u4e00\u4e0b\uff0c\u8003\u8651\u5bf9\u4e8e\u6570 $a_i$ \uff0c$a_i * base^i$ \u4e00\u5b9a\u4e0d\u7b49\u4e8e\u4efb\u610f\u53e6\u5916\u4e00\u4e2a $a_j * base^j$ \u56e0\u4e3a $base^i$ \u548c $base^j$ \u81f3\u5c11\u5dee\u4e86 $base$ \u500d\uff0c\u800c $a_i$ \u53d6\u503c\u6700\u5927\u53ea\u6709 $n<=base-1$ \u3002    \n\u5b9e\u5728\u4e0d\u660e\u767d\u53ef\u4ee5\u53c2\u8003\u5b57\u7b26\u4e32\u54c8\u5e0c\u57fa\u6570\u4e3a\u4ec0\u4e48\u8981\u53d6131\uff0c\u56e0\u4e3a131\u6bd4\u4efb\u4f55\u4e00\u4e2a\u5b57\u7b26\u7684ASCII\u503c\u90fd\u5927\u3002   \n\u7531\u4e8e\u4ee5\u4e0a\u5df2\u7ecf\u8bc1\u660e\u672c\u7b97\u6cd5\u540c\u6574\u6570\u54c8\u5e0c\u6b63\u786e\u6027\u76f8\u540c\uff0c\u6545\u6b63\u786e\u7387\u5e94\u4e3a\u6574\u6570\u54c8\u5e0c\u6216\u5b57\u7b26\u4e32\u54c8\u5e0c\u6b63\u786e\u7387\u3002   \n\n______\n\n## \u5177\u4f53\u5b9e\u73b0\uff1a   \n\u4ee5\u4e0a\uff0c\u6211\u4eec\u62e5\u6709\u4e86\u4e00\u4e2a $\\mathbf O(N+M)$ \u8ba1\u7b97\uff0c $\\mathbf O(1)$ \u6bd4\u8f83\u4e24\u6570\u96c6\u662f\u5426\u76f8\u540c\u7684\u7b97\u6cd5\u3002\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a $\\mathbf O(N)$ \u8ba1\u7b97\u54c8\u5e0c\u503c\u7684\u505a\u6cd5\uff1a   \n\uff08\u9884\u5904\u7406\u51fa\u6240\u6709 $base^i$ \u540e\uff0c\uff09\u4e3a\u4e86\u8ba1\u7b97 $tot_0 + tot_1 * base + tot_2 * base^2 + \\dots + tot_m * base^m$\uff0c\u663e\u7136\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570 $i$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $1 * base^i$ \uff08\u8003\u8651 $tot_i$ \u4e2a $i$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a $tot_i * base^i$\uff09\u3002    \n\u4e8e\u662f\uff1a   \n```cpp\nfor(i=1;i<=n;i++)\n\thashnum+=base_pow[a[i]];\n```   \n\u540c\u65f6\uff0c\u6211\u4eec\u6070\u597d\u53ef\u4ee5\u5bb9\u6613\u5730\u5f97\u5230\u4e00\u4e2a $\\mathbf O(1)$ \u6bd4\u8f83\u4e24\u4e2a\u6570\u96c6\u662f\u5426\u521a\u597d\u5bf9\u5e94\u9879\u5dee $k$ \u7684\u7b97\u6cd5\uff1a\u56e0\u4e3a\n$$tot_0 * base^{0+k} + tot_1 * base^{1+k} + tot_2 * base^{2+k} + \\dots + tot_m * base^{m+k}$$   \n$$=(tot_0 + tot_1 * base + tot_2 * base^2 + \\dots + tot_m * base^m) * base^k$$   \n\u6240\u4ee5\u5bf9\u5e94\u9879\u5dee $k$ \u7684\u4e24\u6570\u96c6\u521a\u597d\u5dee $base^k$ \u500d\u3002  \n\n\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u4e00\u5207\u9884\u5148\u51c6\u5907\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5f00\u59cb\u8003\u8651\u7ebf\u6bb5\u6811\u4e86\u3002\u8003\u8651\u5982\u679c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u54c8\u5e0c\u503c\uff08\u533a\u95f4\u5408\u5e76\u65f6\u76f4\u63a5\u76f8\u52a0\uff0c~~\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48qwq~~\uff09\u548c\u6700\u503c\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u8be2\u95ee\u65f6\u76f4\u63a5\u7b97\u6700\u503c\u76f8\u5dee\u7684\u5927\u5c0f $\\Delta$\uff0c\u6bd4\u8f83\u533a\u95f4\u5bf9\u5e94\u9879\u5dee\u503c\u662f\u5426\u521a\u597d\u7b49\u4e8e $\\Delta$ \u5373\u53ef\u3002\n\n___\n\n## \u4ee3\u7801\uff1a\n\u4f7f\u7528\u53cc\u54c8\u5e0c\u4ee5\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\uff0c\u6700\u6162\u70b9\u7528\u65f6\u5c11\u4e8e1s\u3002   \n[\u4ee3\u7801\uff08\u6709\u591a\u5904\u7ec6\u8282\u9519\u8bef\uff09](https://www.luogu.com.cn/paste/frimehgz)   \n[\u6b63\u89e3\uff08\u4ee3\u7801\u516c\u5f00\u8ba1\u5212\uff09](https://www.luogu.com.cn/record/35849961)   \n\u4f60\u53ef\u4ee5\u5728\u6700\u4f18\u89e3\u7b2c5\u9875\uff08\u53ef\u80fd\u4f60\u4eec\u770b\u5230\u8fd9\u7bc7\u9898\u89e3\u65f6\u5df2\u7ecf\u88ab\u5404\u4f4ddalao\u6324\u5230\u7b2c6\u9875\u4e86qwq\uff09\u770b\u5230\u6211\u7684AC\u8bb0\u5f55\u3002   \n\nps\uff1a~~\u8c01\u8bf4\u8fd9\u9898\u5361\u5e38\u7684\uff0c\u6211\u53cc\u54c8\u5e0c\u90fd\u6ca1\u8dd1\u6ee11s\u3002qwq~~\uff08\u52a0\u4e86IO\u7684\u4e0d\u914d\u8bf4\u8fd9\u53e5\u8bdd\uff09   \nps2\uff1a~~\u8fd9\u9898\u603b\u65f6\u95f4\u7b97\u6cd5\u548b\u8fd9\u4e48\u6bd2\u7624\uff0c\u7adf\u7136\u6bcf\u4e2asubtask\u9009\u6700\u5feb\u70b9\u6c42\u548c\u3002~~   \nps3\uff1a~~\u6570\u636e\u771f\u7684\u6c34\uff0c\u6211\u7b2c\u4e00\u6b21\u4ea4\u5fd8\u4e86 `pushup`\uff0c\u7adf\u7136\u53ea\u662f\u6bcf\u4e2a `task` WA\u4e86\u4e00\u4e2a\u70b9\u3002~~     \nps4\uff1a\u51fa\u9898\u4eba\u8bf4\u57fa\u6570\u75281145141\uff08\u8fd9\u6570\u5b57\uff0c\u7edd\u4e86\uff09\uff0c\u56e0\u4e3a\u53ef\u80fd\u662f\u539f\u6839\uff0c\u4f46\u8fd9\u5c5e\u4e8e\u6574\u6570\u54c8\u5e0c\u7b97\u6cd5\u6b63\u786e\u6027\u95ee\u9898\uff0c\u4e0d\u4e88\u8ba8\u8bba\u3002~~\uff08\u5176\u5b9e\u662f\u6211\u4e0d\u4f1aqwq\uff09~~    \n\n____\n\n## HACK\uff1a\n\u4e0a\u8ff0\u8bc1\u660e\u53ef\u4ee5\u8bc1\u660e\u6211\u7684\u7b97\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u76f8\u53cd\uff0c\u6709\u4e9b\u54c8\u5e0c\u65b9\u6cd5\u5219\u662f\u9519\u8bef\u7684\uff0c\u4ee5\u4e0b\u4e3e\u4f8b\u8fdb\u884chack\u3002  \n1. \u7ef4\u62a4\u533a\u95f4\u548c   \n\t\u663e\u7136\u9519\u8bef\uff0c\u4f8b\n    ```plain\n    10 1\n    1 2 3 4 5 1 3 3 3 5\n    1 1 5 6 10\n    ```\n    \u6b63\u89e3\u4e3a `NO` \uff0c\u8f93\u51fa\u4e3a `YES` \u3002\n2. \u7ef4\u62a4\u8f83\u5c0f\u503c\u7684\u6b21\u65b9\u548c\uff08\u54c8\u5e0c\u57fa\u6570\u8fc7\u5c0f\uff09   \n\t\u4f1a\u51fa\u73b0 $base * base^i = 1 * base^{i+1} $\u7684\u60c5\u51b5\uff0c\u4ee5\u57fa\u6570\uff08\u5e95\u6570\uff09\u4e3a $3$ \u7684\u4e3a\u4f8b\n    ```plain\n    12 1\n\t1 3 3 3 6 7 1 4 5 5 5 7\n\t1 1 6 7 12\n    ```\n    \u6b63\u89e3\u4e3a `NO` \uff0c\u8f93\u51fa\u4e3a `YES` \u3002   \n    \u8fd9\u91cc\u63d0\u4f9b\u4e00\u4efd\u80fd\u751f\u6210\u4e00\u7ec4\u6570\u636e\u5361\u6389\u5168\u90e8\u57fa\u6570\uff08\u5e95\u6570\uff09\u4e3a $[1,1e5]$ \u7684\u6570\u636e\u751f\u6210\u5668\uff1a[\u8fd9\u91cc](https://www.luogu.com.cn/paste/zhbf9ifw)   \n3. \u5176\u4ed6\n\t1. \u4e71\u4e03\u516b\u7cdf\u7684\u9519\u8bef\u54c8\u5e0c\u6cd5   \n    \t\u968f\u4fbf\u5361\u5361\u5c31\u597d   \n        \u4f8b\u5982\u7ef4\u62a4\u4e86%2\u4f59\u6570\uff0c%3\u4f59\u6570\u4ee5\u53ca\u533a\u95f4\u548c\u7684\u505a\u6cd5\uff1a   \n        ```plain\n        10 1\n        1 2 97 100 1 7 92 100\n        1 1 5 6 10\n        ```   \n        \u6b63\u89e3\u4e3a `NO` \uff0c\u8f93\u51fa\u4e3a `YES` \u3002  \n        \n        \u542c\u8bf4\u51fa\u9898\u4eba\u8fd8\u6784\u9020\u4e86\u4e00\u7ec4\u6570\u636e\u5361\u6389\u4e86\u6c42\u6b21\u65b9\u548c\u7684\u505a\u6cd5Orz qwq   \n        \u5176\u5b9e\u8fd8\u6709\u4e00\u79cdsincos\u7684\u505a\u6cd5\uff0c\u5e94\u8be5\u4e5f\u53ef\u4ee5\u5361\u6389\uff0c\u4f46\u6211\u61d2\u5f97\u7b97\u5b9e\u6570\u3002\u3002\u3002    \n    2. \u5355\u54c8\u5e0c   \n    \t\u53c2\u8003\u5b57\u7b26\u4e32\u54c8\u5e0c\u4e2d\u5361\u5355\u54c8\u5e0c\u7684\u505a\u6cd5   \n    3. \u53cc\u54c8\u5e0c   \n    \t~~\u6bd2\u7624\u51fa\u9898\u4eba\u96be\u9053\u8fd8\u60f3\u5361\u53cc\u54c8\u5e0c\uff1f\uff1f\uff1fqwq~~   \n\n____\n\n## THE END.",
        "postTime": 1595843528,
        "uid": 35137,
        "name": "a___",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6688 \u3010\u53ef\u91cd\u96c6\u3011"
    },
    {
        "content": "\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/-aday/p/solution-p6688.html)\n\n\u4e00\u79cdrp\u53ea\u8981\u597d\u4e00\u70b9\u5c31\u4e0d\u4f1a\u88abhack\u7684\u7384\u5b66\u65b9\u6cd5\u3002\u3002\u3002\n\n\u9996\u5148\u8fd8\u662f\u6784\u9020\u7279\u5f81\u51fd\u6570\u3002\u5bf9\u4e8e\u4e00\u6bb5\u533a\u95f4\uff0c\u6211\u4eec\u7ef4\u62a4\u5b83\u7684\u548c\u4e0e\u6700\u5927\u503c\u3002\u663e\u7136\u5728\u4e24\u4e2a\u6ee1\u8db3\u9898\u610f\u7684\u533a\u95f4\u4e2d\uff0c $max_1=max_2+k;sum_1=sum_2+k\\times len$ \u3002\u5982\u679c\u6211\u4eec\u76f4\u63a5\u8fd9\u4e48\u5224\u65ad\uff0c\u6709\u5f88\u5927\u6982\u7387\u88abhack\u6389\u3002\n\n \u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a $X^a \\cdot X^b=X^{a+b}$ \uff0c\u5219\u4e0d\u96be\u53d1\u73b0 $(\\sum X^{a_i})\\cdot X^b=\\sum X^{a_i+b}$ \u3002\u90a3\u4e48\u56e0\u4e3a\u5bf9\u4e8e\u4e24\u4e2a\u6ee1\u8db3\u9898\u610f\u7684\u533a\u95f4\u6709 $\\sum\\limits_{i=l1}^{r1}(a_i+k)=\\sum\\limits_{i=l2}^{r2}a_i$ \uff0c\u6240\u4ee5 $(\\sum\\limits_{i=l1}^{r1}X^{a_i})\\cdot X^k=\\sum\\limits_{i=l2}^{r2}X^{a_i}$ \u3002\n\n\u5982\u679c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u7684 $sum'=\\sum\\limits_{i=l}^r X^{a_i}$\u4e0e $max$ \uff0c \u90a3\u82e5 $sum'_1\\cdot X^{max_2-max_1}=sum'_2$ \uff0c\u5219\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u8fd9\u91cc\u7684 $X$ \u53d6\u591a\u5c11\u5462\uff1f\u5176\u5b9e\u8fd9\u5c31\u662f\u7384\u5b66\u6240\u5728\uff0c $X$ \u53d6\u968f\u673a\u503c\uff01\u53ea\u8981 $X\\not=1$ \u5c31\u884c\u3002\n\n\u7136\u540e\u7528zkw\u7ebf\u6bb5\u6811\u7ef4\u62a4 $sum'$ \u548c $max$ \u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define rg register\n#define il inline\n#define cs const\n#define sta static\n#define opr operator\n#define inf LONG_LONG_MAX\n#define fp(i,x,y) for(rg int i=(x);i<=(y);++i)\n#define fd(i,x,y) for(rg int i=(x);i>=(y);--i)\nil int read()\n{//\u5feb\u8bfb\n    int _s=0,_f=1;char _ch=getchar();\n    for(;!isdigit(_ch);_ch=getchar())if(_ch=='-')_f=-1;\n    for(;isdigit(_ch);_ch=getchar())_s=_s*10+_ch-'0';\n    return _s*_f;\n}\ncs int N=1e6+5,mod=1e9+7,X=rand()+1;//\u4fdd\u8bc1X>1\nint n,m,q;\nint powX[N];//X\u7684\u5e42\nstruct node\n{\n    int sum,//\u533a\u95f4sum'\n        maxv;//\u533a\u95f4max\n    il node opr+(cs node& x)cs{return (node){(sum+x.sum)%mod,max(maxv,x.maxv)};}\n    //\u5b9a\u4e49\u52a0\u6cd5\n}a[N<<2];\nvoid build()\n{\n    n=read();q=read();\n    for(m=1;m<=n+1;m<<=1)\"YOU AK WC2020\";//stO\n    fp(i,m+1,m+n)a[i].maxv=read(),a[i].sum=powX[a[i].maxv];\n    fd(i,m-1,1)a[i]=a[i<<1]+a[i<<1|1];//\u5373pushup\n}\nil void mdf(int s,int k)\n{//\u5355\u70b9\u4fee\u6539\n    a[s+=m].sum=powX[k];\n    a[s].maxv=k;//\u76f4\u63a5\u4fee\u6539\u53f6\u5b50\u8282\u70b9\n    for(s>>=1;s;s>>=1)a[s]=a[s<<1]+a[s<<1|1];\n    //\u4e00\u5c42\u5c42pushup\n}\nil node ask(int s,int t)\n{//\u533a\u95f4\u67e5\u8be2\n    node res=(node){0,-inf};\n    for(s=m+s-1,t=m+t+1;s^t^1;s>>=1,t>>=1)\n    {//\u91cd\u8f7d\u52a0\u6cd5\u7684\u7528\u5904\u2193\n        if(~s&1)res=res+a[s^1];\n        if(t&1)res=res+a[t^1];\n    }\n    return res;\n}\nil bool check(int l1,int l2,int r1,int r2)\n{//\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\n    node l=ask(l1,l2),r=ask(r1,r2);\n    int m1=l.maxv,m2=r.maxv,s1=l.sum,s2=r.sum;\n    if(m1==m2&&s1==s2)return 1;//\u90fd\u76f8\u7b49\n    if(m1<m2)return s1*powX[m2-m1]%mod==s2;\n    //\u8ba1\u7b97\u5224\u65ad\n    else return s2*powX[m1-m2]%mod==s1;\n}\nsigned main()\n{\n    srand(time(0));//\u5f53\u7136\u4e5f\u53ef\u4ee5srand(1******7)\n    powX[0]=1;fp(i,1,N)powX[i]=powX[i-1]*X%mod;\n    build();\n    while(q--)\n    {\n        int op=read(),x=read(),y=read(),xx,yy;\n        if(op==0)mdf(x,y);\n        else xx=read(),yy=read(),puts(check(x,y,xx,yy)?\"YES\":\"NO\");\n    }\n    return 0;\n}\n```\n\n\u542c\u8bf4`WC2020`\u5feb\u51fa\u5206\u4e86\uff0c\u795d\u5404\u4f4d\u795e\u4ed9`rp++`!",
        "postTime": 1596692816,
        "uid": 312393,
        "name": "ADay",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6688 \u3010\u53ef\u91cd\u96c6\u3011"
    },
    {
        "content": "\u6838\u5fc3\u505a\u6cd5\u662f\u4f7f\u7528\u4e09\u4e2a $hash:$\n\n\u7b2c\u4e00\u4e2a $hash$\uff1a \n\n\u6c42\u51fa $\\sum a_i,\\sum {a_i}^2$\uff0c\u5bb9\u6613\u901a\u8fc7\u4e24\u4e2a\u533a\u95f4 $\\sum a_i$ \u7684\u5dee\u503c\u6c42\u51fa $k$\uff0c\u7136\u540e\u53ef\u4ee5\u7531 $(a_i+k)^2={a_i}^2+k^2+2ka_i$ \u6c42\u51fa\u533a\u95f4 $1$ \u5bf9\u5e94 $+k$ \u540e\u7684\u503c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6700\u5927\u7684\u6570\u4e0d\u8d85\u8fc7 $10^{18}$\uff0c$long$ $long$ \u5b58\u50a8\u3002\n\n------------\n\n\u7b2c\u4e8c\u4e2a $hash:$\n\n\u6c42\u51fa $\\sum p{a_i}$\uff0c$p$ \u4e3a\u67d0\u4e00\u8d28\u6570\uff0c\u901a\u8fc7\u7b2c\u4e00\u4e2a $hash$ \u6c42\u51fa $k$\uff0c\u7136\u540e\u53ef\u4ee5\u7531 $p^{k+a_i}=p^{k}p^{ai}$\uff0c\u6c42\u51fa\u533a\u95f4 $1$ \u5bf9\u5e94 $+k$ \u540e\u7684\u503c\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u8981\u7528\u5230\u81ea\u7136\u6ea2\u51fa\uff08\u6216\u8005\u53d6\u6a21\uff09\uff0c\u5982\u679c\u662f\u81ea\u7136\u6ea2\u51fa\u8981\u7528 $unsigned$ $long$ $long$ \u5b58\u50a8\u3002\n\n------------\n\n\u7531\u4e8e\u524d\u4e24\u4e2a $hash$ \u53ea\u80fd\u62ff\u5230 $50pts$\uff0c\u56e0\u6b64\u9700\u8981\u7b2c $3$ \u4e2a $hash$\u3002\n\n\u7b2c\u4e09\u4e2a $hash:$\n\n\u6c42\u51fa $\\sum pr \\left[\\ a_i \\right]$\uff0c\u5176\u4e2d $pr \\left[\\ x \\right]$ \u8868\u793a\u7b2c$x$ \u4e2a\u8d28\u6570\uff0c\u8fd9\u79cd\u53ea\u80fd\u5224\u65ad\u4e24\u4e2a\u533a\u95f4\u662f\u5426\u5b8c\u5168\u76f8\u540c\uff0c\u65e0\u6cd5\u5904\u7406 $+k$\uff0c\u4f46\u52a0\u4e0a\u53bb\u5c31\u80fd $AC$\u3002\n\n\u6ee1\u5206\u7684\u505a\u6cd5\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u8fd9\u91cc\u7ed9\u51fa $75pts$ \u7684\u4ee3\u7801\u3002\n\n$75pts$ \u7684\u505a\u6cd5\u6838\u5fc3\u5c31\u662f\u7ef4\u62a4 $18$ \u6b21\u65b9\u548c\uff0c\u8fd8\u662f\u5f88\u6bd2\u7624\u7684\u3002\n\n\n\u611f\u8c22 @[chenxinyang2006](https://www.luogu.com.cn/user/49776) \u795e\u4ed9\n\n\u6bd5\u7adf\u2026\u2026\n\n> \u66b4\u529b\u4e5f\u8bb8\u4e0d\u80fd\u51fa\u5947\u8ff9\uff0c\u4f46\u66b4\u529b\u591a\u5957\u51e0\u5c42\uff0c\u5c31\u51fa\u5947\u8ff9\u4e86\n\n$code$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct node{\n\tlong long val[20];\n\tint mn,mx;\n}tree[400005];\n#define ls (rt*2)\n#define rs (rt*2+1)\n\nnode Merge(node a,node b)\n{\n\tnode c;\n\tc.mn=min(a.mn,b.mn);\n\tc.mx=max(a.mx,b.mx);\n\tfor(int i=1;i<=18;i++)\n\t{\n\t\tc.val[i]=(a.val[i]+b.val[i])%1000000007;\n\t}\n\treturn c;\n}\n\nvoid build(int rt,int l,int r)\n{\n    if(l==r)\n\t{\n    \tcin>>tree[rt].val[1];\n    \t\n    \tfor(int i=2;i<=18;i++)\n\t\t{\n    \t\ttree[rt].val[i]=tree[rt].val[i-1]*tree[rt].val[1]%1000000007;\n    \t}\n    \ttree[rt].mn=tree[rt].mx=tree[rt].val[1];\n    \treturn;\n    }\n    \n    int mid=l+r>>1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    tree[rt] = Merge(tree[ls],tree[rs]);\n}\n\nvoid modify(int rt,int l,int r,int id,int C)\n{\n\tif(l==r)\n\t{\n\t\ttree[rt].val[1]=C;\n\t\tfor(int i=2;i<=18;i++)\n\t\t{\n\t\t\ttree[rt].val[i]=tree[rt].val[i - 1]*tree[rt].val[1]%1000000007;\n\t\t}\n\t\t\n\t\ttree[rt].mn=tree[rt].mx=C;\n\t\treturn;\n\t}\n\t\n\tint mid=l+r>>1;\n\t\n\tif(id<=mid)\n\t{\n\t\tmodify(ls,l,mid,id,C);\n\t}\n\telse\n\t{\n\t\tmodify(rs,mid+1,r,id,C);\n\t}\n\t\n\ttree[rt]=Merge(tree[ls],tree[rs]);\n}\n\nnode query(int rt,int l,int r,int L,int R)\n{\n\tif(l==L&&r==R) \n\t{\n\t\treturn tree[rt];\n\t}\n\tint mid=l+r>>1;\n\t\n\tif(R<=mid)\n\t{\n\t\treturn query(ls,l,mid,L,R);\n\t}\n\telse if(L>mid)\n\t{\n\t\treturn query(rs,mid+1,r,L,R);\n\t}\n\telse\n\t{\n\t\treturn Merge(query(ls,l,mid,L,mid),query(rs,mid+1,r,mid+1,R));\n\t}\n}\n\nlong long x[25][25];\n\nvoid check(node a,node b,int d,int len)\n{\n\tfor(int i=1;i<=18;i++)\n\t{\n\t\tlong long tmp=0,dd=1;\n\t\tfor(int j=i;j>=1;j--)\n\t\t{\n\t\t\ttmp=(tmp+dd*b.val[j]%1000000007*x[i+1][i-j+1])%1000000007;\n\t\t\tdd=dd*d%1000000007;\n\t\t}\n\t\t\n\t\ttmp=(tmp+dd*len)%1000000007;\n\t\tif((tmp-a.val[i])%1000000007!=0)\n\t\t{\n\t\t\tcout<<\"NO\"<<endl;\n\t\t\treturn;\n\t\t}\n\t}\n\tcout<<\"YES\"<<endl;\n}\n\nint main()\n{\n\tfor(int i=1;i<=20;i++)\n\t{\n        x[i][1]=x[i][i]=1;\n        \n        for(int j=2;j<i;j++)\n\t\t{\n        \tx[i][j]=(x[i-1][j-1]+x[i-1][j])%1000000007; \n        }\n\t}\n\t\n\tint n,q,op,x,y,l1,r1,l2,r2;\t\n    \n\tcin>>n>>q;\n    \n    build(1,1,n);\n    \n\tfor(int i=1;i<=q;i++)\n\t{\n        cin>>op;\n        if(op==0)\n\t\t{\n        \tcin>>x>>y;\n        \tmodify(1,1,n,x,y);\n        }\n\t\telse\n\t\t{\n        \tcin>>l1>>r1>>l2>>r2;\n        \t\n        \tnode a=query(1,1,n,l1,r1),b=query(1,1,n,l2,r2);\n        \tif(a.mx-b.mx!=a.mn-b.mn)\n\t\t\t{\n        \t\tcout<<\"NO\"<<endl;\n        \t\tcontinue;\n        \t}\n        \t\n        \tint d=a.mx-b.mx;\n        \tcheck(a,b,d,r1 - l1 + 1);\n        }\n    }\n    \n\treturn 0;\n}\n\n```",
        "postTime": 1596074790,
        "uid": 344628,
        "name": "MatKave",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6688 \u3010\u53ef\u91cd\u96c6\u3011"
    },
    {
        "content": ">[\u63a8\u9500](https://www.cnblogs.com/Varuxn/p/15116075.html)\n\n# \u89e3\u9898\u601d\u8def\n**\u4e00\u5b9a\u4e0d\u8981\u7528\u81ea\u52a8\u6ea2\u51fa\u7684 Hash\uff01\uff01\uff01\uff01\uff01\uff01\uff01**\n\n~~\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u5b66 zxb \u7528\u5408\u6570\u53d6 $\\bmod$ 20052526\uff09~~\n\n\u6211\u771f\u7684\u662f\u8c03\u5410\u4e86\u3002\u3002\u3002\n\n\u601d\u8def\u975e\u5e38\u7b80\u5355\u660e\u4e86 : \u9700\u8981\u6211\u4eec\u521b\u65b0\u4e00\u4e0b  Hash\u3002\n\n\u9996\u5148\u6211\u4eec\u7684 Hash \u8981\u6ee1\u8db3\u65e0\u5e8f\u6027\u3002\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u628a Hash \u503c\u7684\u610f\u4e49\u66f4\u6539\u4e00\u4e0b\u3002\n\n\u4f8b\u5982\uff1a $x$  \u7684 Hash \u503c\u662f $base^x$\n\n\u5728\u6bcf\u4e24\u4e2a\u533a\u95f4\u7ef4\u62a4\u4e24\u4e2a\u503c\uff1a**\u539f\u5e8f\u5217**\u6700\u5c0f\u503c\u4ee5\u53ca Hash \u503c\u7684\u52a0\u548c\n\n\u8fd9\u91cc\u4e0d\u53ef\u4ee5\u8bb0\u5f55 Hash \u56e0\u4e3a\u53d6 $\\bmod$ \u4e4b\u540e\u5927\u5c0f\u5c31\u4e0d\u4e00\u5b9a\u4e86\u3002\u3002\n\n\u7136\u540e\u76f4\u63a5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5c31\u597d\u4e86\u3002\u3002\u3002\n\n**\u4e00\u5b9a\u4e0d\u8981\u7528\u81ea\u52a8\u6ea2\u51fa\u7684 Hash\uff01\uff01\uff01\uff01\uff01\uff01\uff01**\n\n\u4e0d\u7136\u54ea\u6015\u662f\u7528 6 \u4e2a Hash \u4e5f\u8fc7\u4e0d\u4e86\uff08[\u8bb0\u5f55](https://www.luogu.com.cn/record/55311223)\uff09\n\n\u7136\u540e\u62cd\u4e86\u5927\u6982 1e5 \u7ec4\u6570\u636e\uff0c\u4e5f\u6ca1\u62cd\u51fa\u9519\u6765\u3002\u3002\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9wb0t0s8.png)\n\n\u611f\u8c22@OMA dalao \u6307\u51fa\u8981 \u53d6 $\\bmod$\uff0c\u4e0d\u7136\u6211\u5c31\u8981 N Hash \u4e86\u3002\u3002\n\n# code\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ull unsigned long long\n#define f() cout<<\"Pass\"<<endl\n#define ls x<<1\n#define rs x<<1|1\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch>'9'||ch<'0')\n\t{\n\t\tif(ch=='-')\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nconst int N=1e6+10,INF=1e18,mod=998244353;\nconst ull base=168717137ull;\nint n,m,s[N];\null p[N];\nlong double p6[N];\nstruct Node\n{\n\tint mn;\n\tull has;\n\tlong double has6;\n\tNode friend operator + (Node x,Node y)\n\t{\n\t\treturn (Node){min(x.mn,y.mn),(x.has+y.has)%mod};\n\t}\n};\nstruct Segment_Tree\n{\n\tint mn;\n\tull has;\n\tlong double has6;\n}tre[N<<2];\nvoid push_up(int x)\n{\n\ttre[x].has=(tre[ls].has+tre[rs].has)%mod;\n\ttre[x].mn=min(tre[ls].mn,tre[rs].mn);\n}\nvoid insert(int x,int l,int r,int pos,int num)\n{\n\tif(l==r)\n\t{\n\t\ttre[x].has=p[num]%mod;\n\t\ttre[x].mn=num;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)\tinsert(ls,l,mid,pos,num);\n\telse\tinsert(rs,mid+1,r,pos,num);\n\tpush_up(x);\n}\nNode query(int x,int l,int r,int L,int R)\n{\n\tif(L<=l&&r<=R)\treturn (Node){tre[x].mn,tre[x].has};\n\tint mid=(l+r)>>1;\n\tNode ans1=(Node){INF,0ull},ans2=(Node){INF,0ull};\n\tif(L<=mid)\tans1=query(ls,l,mid,L,R);\n\tif(R>mid)\tans2=query(rs,mid+1,r,L,R);\n\treturn ans1+ans2;\n}\nsigned main()\n{\n\tn=read();\n\tm=read();\n\tp[0]=1;\n\tfor(int i=1;i<N;i++)\tp[i]=p[i-1]*base%mod;\n\tfor(int i=1;i<=n;i++)\n\t\ts[i]=read();\n\tfor(int i=1;i<=n;i++)\n\t\tinsert(1,1,n,i,s[i]);\n\tfor(int i=1,opt,x,y,l1,r1,l2,r2;i<=m;i++)\n\t{\n\t\topt=read();\n\t\tif(!opt)\n\t\t{\n\t\t\tx=read();y=read();\n\t\t\tinsert(1,1,n,x,y);\n\t\t\tcontinue;\n\t\t}\n\t\tl1=read();r1=read();l2=read();r2=read();\n\t\tNode ans1=query(1,1,n,l1,r1);\n\t\tNode ans2=query(1,1,n,l2,r2);\n\t\tif(ans1.mn<ans2.mn)\tswap(ans1,ans2);\n\t\tif(p[ans1.mn-ans2.mn]*ans2.has%mod==ans1.has%mod)\n\t\t\tprintf(\"YES\\n\");\n\t\telse\tprintf(\"NO\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1628425446,
        "uid": 190322,
        "name": "Varuxn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6688 \u53ef\u91cd\u96c6"
    },
    {
        "content": "\u53ea\u8bb2\u601d\u8def\u3002\u4ee3\u7801\u6211\u8fd8\u6ca1\u5361\u5b8c\u5e38\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u601d\u8def\u6b63\u786e\u6027\u590d\u6742\u5ea6\u90fd\u662f\u5bf9\u7684\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u5f88\u590d\u6742\uff0c\u76f4\u63a5\u7ef4\u62a4\u662f\u80af\u5b9a\u4e0d\u884c\u7684\u3002[\u5927\u6bcd\u795e\u8fd9\u9898](https://www.luogu.com.cn/problem/P3792)\u548c\u8fd9\u4e2a\u5dee\u4e0d\u591a\uff0c\u90a3\u9898\u7528\u7684\u54c8\u5e0c\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u54c8\u5e0c\u5224\u65ad\u3002\n\n\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u6700\u5c0f\uff0c\u533a\u95f4\u548c\u533a\u95f4\u5e73\u65b9\u548c\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u88ab\u51fa\u9898\u4eba\u5361\u6b7b\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4 $sin$ \u548c $cos$\u3002\u8fd9\u4e2a\u4e1c\u897f\u5f88\u96be\u5361\u3002\u5f53\u7b54\u6848\u4e3a`YES`\u65f6\uff0c$k$ \u90fd\u4e00\u6837\uff0c\u90a3\u4e48\u968f\u4fbf\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u503c\u7684\u5dee\u5c31\u662f $k$.\u518d\u7ef4\u62a4\u4e00\u4e2a $sin$ \u4e00\u4e2a $cos$ \u5c31\u884c\u4e86\uff0c\u5355\u70b9\u4fee\u6539\u4e0d\u9700\u8981\u8003\u8651\u61d2\u6807\u8bb0\u3002\n\n\u90a3\u4e48\u600e\u4e48\u7b97\u51fa\u6765\u52a0 $k$ \u540e\u7684 $sin$ \u548c $cos$ \u503c\u5462\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u548c\u5dee\u89d2\u516c\u5f0f\n\n$$\\sin(x+y)=\\sin(x)\\cos(y)+\\cos(x)\\sin(y)$$\n\n$$\\cos(x+y)=\\cos(x)\\cos(y)-\\sin(x)\\sin(y)$$\n\n\u76f4\u63a5\u7b97\u4e00\u4e0b\u518d\u5224\u76f8\u7b49\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8fd9\u9898\u597d\u50cf\u7ebf\u6bb5\u6811\u4f1a\u88ab\u5361\u5e38\uff0c\u9700\u8981\u91cd\u53e3\u5473\u7ebf\u6bb5\u6811\u3002",
        "postTime": 1595939043,
        "uid": 196899,
        "name": "lndjy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6688 \u3010\u53ef\u91cd\u96c6\u3011"
    },
    {
        "content": "\u8d5b\u65f6\u6ca1\u8fc7\uff0c\u53ea\u6709 `50 pts`\u3002\n\n\u4e0b\u9762\u4f1a\u8bb2\u5230 `Subtask` $1,2$ \u53ca $4$\u3002\n\n## Subtask1\n\n\u663e\u7136\u53ef\u4ee5\u6bcf\u6b21\u76f4\u63a5\u5355\u70b9\u4fee\u6539\uff0c\u66b4\u529b\u62bd\u53d6\u533a\u95f4\u6392\u5e8f\u68c0\u67e5\u3002\u590d\u6742\u5ea6\u662f $O(qn\\log n)$ \u7684\u3002\u8fd9\u91cc `25pts`\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n\ninline int read() {\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n\tdo x = x * 10 + ch - 48, ch = getchar(); while(ch >= '0' && ch <= '9');\n\treturn x * f;\n}\n\nconst int MAXN = 100001;\n\nint n,q,a[MAXN],t1[MAXN],t2[MAXN];\n\nint main() {\n\tn = read(), q = read();\n\tif(n > 1000 || q > 1000) return 0;\n\tfor(int i = 1;i <= n;i++) a[i] = read();\n\twhile(q--) {\n\t\tint op = read(),l1,r1,l2,r2;\n\t\tif(op == 0) l1 = read(), r1 = read(), a[l1] = r1;\n\t\telse {\n\t\t\tl1 = read(), r1 = read(), l2 = read(), r2 = read();\n\t\t\tfor(int i = l1;i <= r1;i++) t1[i - l1] = a[i];\n\t\t\tfor(int i = l2;i <= r2;i++) t2[i - l2] = a[i];\n\t\t\tstd::sort(t1,t1 + r1 - l1 + 1);\n\t\t\tstd::sort(t2,t2 + r2 - l2 + 1);\n\t\t\tbool ok = true;\n\t\t\tfor(int i = 1;i < r1 - l1 + 1;i++)\n\t\t\t\tif(t2[i] - t1[i] != t2[0] - t1[0]) {\n\t\t\t\t\tok = false; break;\n\t\t\t\t}\n\t\t\tif(ok) std::puts(\"YES\");\n\t\t\telse std::puts(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n## Subtask2\n\n\u8fd9\u91cc\u6709\u975e\u5e38\u5c0f\u7684\u503c\u57df $0\\le\\forall a_i,y\\le 100$\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u6bcf\u79cd\u989c\u8272\u5206\u5f00\u7edf\u8ba1\u5373\u53ef\u3002\n\n\u8003\u8651\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\u3002\u663e\u7136\u53ef\u4ee5\u6811\u72b6\u6570\u7ec4\uff0c\u5373\u6bcf\u4e00\u4e2a\u503c\u57df\u6709\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u4fee\u6539\u65f6\u5bf9\u5e94\u4f4d\u7f6e\u4fee\u6539 $2$ \u6b21\uff0c\u8be2\u95ee\u65f6\u503c\u57df\u6b21\u6c42\u548c\uff0c\u5f97\u5230\u533a\u95f4\u4e0a\u7684\u5206\u5e03\u3002\n\n\u90a3\u4e48\u8fd9\u4e24\u4e2a\u533a\u95f4\u7684\u5206\u5e03\u662f\u5426\u5408\u6cd5\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u5b83\u4eec\u7684\u80fd\u5426\u5e73\u79fb\u5f97\u5230\u53e6\u4e00\u4e2a\u6765\u5224\u65ad\u4e86\u3002\n\n\u590d\u6742\u5ea6 $O(nV\\log n)$\uff0c$V$ \u4e3a\u503c\u57df\u3002\n\n\u7ed3\u5408 `Subtask1` \u6709 `50pts`\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n\nconst int MAXN = 1000001;\nconst int SIZE = 201;\n\ninline int read() {\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n\tdo x = x * 10 + ch - 48, ch = getchar(); while(ch >= '0' && ch <= '9');\n\treturn x * f;\n}\n\nint n,q,a[MAXN];\nint t1[MAXN],t2[MAXN];\nint f[SIZE][MAXN],s1[SIZE],s2[SIZE];\n\nint lowbit(int x) { return x & (-x); }\n\nvoid Add(int i,int j,int x) {\n\tfor(;j <= n;j += lowbit(j))\n\t\tf[i][j] += x;\n}\n\nint Query(int i,int j) {\n\tint res = 0;\n\tfor(;j;j -= lowbit(j)) res += f[i][j];\n\treturn res;\n}\n\nint main() {\n\tn = read(), q = read();\n\tif(n <= 1000 && q <= 1000) {\n\t\tfor(int i = 1;i <= n;i++) a[i] = read();\n\t\twhile(q--) {\n\t\t\tint op = read(),l1,r1,l2,r2;\n\t\t\tif(op == 0) l1 = read(), r1 = read(), a[l1] = r1;\n\t\t\telse {\n\t\t\t\tl1 = read(), r1 = read(), l2 = read(), r2 = read();\n\t\t\t\tfor(int i = l1;i <= r1;i++) t1[i - l1] = a[i];\n\t\t\t\tfor(int i = l2;i <= r2;i++) t2[i - l2] = a[i];\n\t\t\t\tstd::sort(t1,t1 + r1 - l1 + 1);\n\t\t\t\tstd::sort(t2,t2 + r2 - l2 + 1);\n\t\t\t\tbool ok = true;\n\t\t\t\tfor(int i = 1;i < r1 - l1 + 1;i++)\n\t\t\t\t\tif(t2[i] - t1[i] != t2[0] - t1[0]) {\n\t\t\t\t\t\tok = false; break;\n\t\t\t\t\t}\n\t\t\t\tif(ok) std::puts(\"YES\");\n\t\t\t\telse std::puts(\"NO\");\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor(int i = 1;i <= n;i++) f[a[i] = read()][i]++;\n\t\tfor(int i = 0;i <= 100;i++)\n\t\t\tfor(int j = 1;j <= n;j++)\n\t\t\t\tif(j + lowbit(j) <= n) f[i][j + lowbit(j)] += f[i][j];\n\t\twhile(q--) {\n\t\t\tint op = read(),l1,r1,l2,r2;\n\t\t\tif(op == 0) {\n\t\t\t\tl1 = read(), r1 = read();\n\t\t\t\tAdd(a[l1],l1,-1); Add(r1,l1,1);\n\t\t\t\ta[l1] = r1;\n\t\t\t} else {\n\t\t\t\tl1 = read(), r1 = read(), l2 = read(), r2 = read();\n\t\t\t\tfor(int i = 0;i <= 100;i++) {\n\t\t\t\t\ts1[i] = Query(i,r1) - Query(i,l1 - 1);\n\t\t\t\t\ts2[i] = Query(i,r2) - Query(i,l2 - 1);\n\t\t\t\t}\n\t\t\t\t// for(int i = 0;i <= 10;i++) std::printf(\"%d \",s1[i]);\n\t\t\t\t// std::putchar('\\n');\n\t\t\t\t// for(int i = 0;i <= 10;i++) std::printf(\"%d \",s2[i]);\n\t\t\t\t// std::putchar('\\n');\n\t\t\t\tint i1 = 0; while(!s1[i1]) i1++;\n\t\t\t\tint i2 = 0; while(!s2[i2]) i2++;\n\t\t\t\t// std::printf(\"i1 = %d i2 = %d\\n\",i1,i2);\n\t\t\t\tbool ok = true;\n\t\t\t\tfor(;i1 <= 100 && i2 <= 100;i1++, i2++)\n\t\t\t\t\tif(s1[i1] != s2[i2]) ok = false;\n\t\t\t\tif(ok) std::puts(\"YES\");\n\t\t\t\telse std::puts(\"NO\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u4f46\u51fa\u9898\u4eba\u8bf4\u4e5f\u53ef\u4ee5\u5206\u5757\u505a\u3002\n\n\u5177\u4f53\u5730\uff0c\u5bf9\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4\uff1a\u6574\u5757\u524d\u7f00\u548c\u4e0e\u5757\u4e2d\u524d\u7f00\u548c\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u9884\u5904\u7406\u662f $O(nV)$ \u7684\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u663e\u7136\u76f4\u63a5\u6539\u5373\u53ef\uff0c\u5355\u6b21 $O(\\sqrt n)$\u3002\n\n\u540c\u65f6\u5b83\u7684\u67e5\u8be2\u53ef\u4ee5\u505a\u5230\u5355\u6b21 $O(V)$\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\u7528\u6574\u5757\u548c\u51cf\u53bb\u5de6\u53f3\u7aef\u6563\u5757\u548c\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6\u662f $O(nV+q\\sqrt n +qV)$ \u5373 $O(n\\sqrt n+nV)$ \u7684\u3002\u56e0\u4e3a\u503c\u57df\u592a\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\n\n\u540c\u6837\u53ef\u4ee5\u5f97\u5230 `50pts`\u3002\u4e0b\u9762\u53ea\u6709 `Sub2` \u5206\u5757\u7684\u90e8\u5206\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n\nconst int MAXN = 1000001;\nconst int MAXS = 1003;\n\ninline int read() {\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n\tdo x = x * 10 + ch - 48, ch = getchar(); while(ch >= '0' && ch <= '9');\n\treturn x * f;\n}\n\nint n,q,a[MAXN];\nint len,bs,lf[MAXS],rg[MAXS],bl[MAXN];\nint sum[101][MAXS],p[101][MAXS][MAXS];\nint t1[101],t2[101];\n\nint main() {\n\tn = read(), q = read();\n\tfor(int i = 1;i <= n;i++) a[i] = read();\n\tlen = sqrt(n), bs = n / len;\n\tfor(int i = 1;i <= bs;i++) {\n\t\tlf[i] = (i - 1) * len + 1;\n\t\trg[i] = i * len;\n\t}\n\tif(n % len) {\n\t\tbs++;\n\t\tlf[bs] = rg[bs - 1] + 1;\n\t\trg[bs] = n;\n\t}\n\tfor(int i = 1;i <= n;i++) bl[i] = (i - 1) / len + 1;\n\tfor(int i = 1;i <= bs;i++) {\n\t\tfor(int j = 0;j <= 100;j++) sum[j][i] = sum[j][i - 1];\n\t\tfor(int j = lf[i];j <= rg[i];j++) sum[a[j]][i]++;\n\t\tfor(int j = lf[i];j <= rg[i];j++) {\n\t\t\tfor(int k = 0;k <= 100;k++) p[k][i][j - rg[i - 1]] = p[k][i][j - rg[i - 1] - 1];\n\t\t\tp[a[j]][i][j - rg[i - 1]]++;\n\t\t}\n\t}\n\tint op,l1,r1,l2,r2,x,y;\n\twhile(q--) {\n\t\top = read();\n\t\tif(op == 0) {\n\t\t\tx = read(), y = read();\n\t\t\tfor(int i = bl[x];i <= bs;i++) sum[a[x]][i]--, sum[y][i]++;\n\t\t\tfor(int i = x;i <= rg[bl[x]];i++) p[a[x]][bl[x]][i - rg[bl[x] - 1]]--, p[y][bl[x]][i - rg[bl[x] - 1]]++;\n\t\t\ta[x] = y;\n\t\t} else {\n\t\t\tl1 = read(), r1 = read(), l2 = read(), r2 = read();\n\t\t\tmemset(t1,0,sizeof(t1)), memset(t2,0,sizeof(t2));\n\t\t\tfor(int i = 0;i <= 100;i++) {\n\t\t\t\tt1[i] = sum[i][bl[r1]] - sum[i][bl[l1] - 1];\n\t\t\t\tt1[i] -= p[i][bl[l1]][l1 - 1 - rg[bl[l1] - 1]];\n\t\t\t\tt1[i] -= sum[i][bl[r1]] - sum[i][bl[r1] - 1] - p[i][bl[r1]][r1 - rg[bl[r1] - 1]];\n\t\t\t}\n\t\t\tfor(int i = 0;i <= 100;i++) {\n\t\t\t\tt2[i] = sum[i][bl[r2]] - sum[i][bl[l2] - 1];\n\t\t\t\tt2[i] -= p[i][bl[l2]][l2 - 1 - rg[bl[l2] - 1]];\n\t\t\t\tt2[i] -= sum[i][bl[r2]] - sum[i][bl[r2] - 1] - p[i][bl[r2]][r2 - rg[bl[r2] - 1]];\n\t\t\t}\n\t\t\tint i1 = 0; while(!t1[i1]) i1++;\n\t\t\tint i2 = 0; while(!t2[i2]) i2++;\n\t\t\tbool ok = true;\n\t\t\tfor(;i1 <= 100 && i2 <= 100;i1++, i2++)\n\t\t\t\tif(t1[i1] != t2[i2]) ok = false;\n\t\t\tif(ok) std::puts(\"YES\");\n\t\t\telse std::puts(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n`Sub3` \u8bf4\u662f\u7ef4\u62a4 $k$ \u6b21\u5e42\u548c\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u3002\u4e0d\u8fc7\u601d\u8def\u548c `Sub4` \u63a5\u8fd1\u3002\n\n## Subtask4\n\n\u53d1\u73b0\u4f3c\u4e4e\u6bd4\u524d\u9762\u66f4\u7b80\u5355\uff08\uff1f\uff09\n\n\u56de\u5f52\u9898\u76ee\uff0c\u6211\u4eec\u53ea\u9700\u5224\u5b9a\u5373\u53ef\uff0c\u4e0d\u5fc5\u8981\u8fd8\u539f\u6574\u6bb5\u6570\u636e\u3002\u53c8\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u65b9\u6cd5\u6765\u7ef4\u62a4\u6392\u5e8f\u540e\u7684\u533a\u95f4\u3002\n\n\u4e8e\u662f\u8003\u8651\u7528\u7c7b\u4f3c $\\operatorname{Hash}$ \u7684\u65b9\u6cd5\u6765\u5224\u5b9a\u533a\u95f4\u5408\u6cd5\u3002\n\n\u533a\u95f4\u548c\uff1f\u592a\u4e0d\u7cbe\u786e\u3002\n\n\u533a\u95f4\u5e73\u65b9\u751a\u81f3 $k$ \u6b21\u65b9\u548c\uff1f\u53ef\u4ee5\uff0c\u4f46\u80fd\u5361\u3002\n\n~~\u533a\u95f4 $\\sin$\uff0c$\\cos$\uff1f\u6ca1\u9519\u7684\u786e\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u4f5c\u8005\u8fd8\u662f\u4e0d\u4f1a\u3002~~\n\n\u533a\u95f4\u6307\u6570\u548c\u3002\n\n\u5728 $\\pmod p$ \u4e0b\u8ba8\u8bba\u3002\n\n\u9996\u5148\u8003\u8651\u5224\u5b9a\uff0c\u663e\u7136\u6709\u539f\u9898\u9762\u4e2d $k$ \u4e3a $\\min_a[l2,r2]-\\min_a[l1,r1]$\u3002\n\n\u5219\u8bbe\u9009\u5b9a\u7684\u5e95\u6570\u4e3a $g$\uff0c\u5f53 $[l1,r1]$ \u533a\u95f4\u548c $\\times g^k=$ $[l2,r2]$ \u533a\u95f4\u548c\u65f6\u5408\u6cd5\u3002\n\n\u4e8e\u662f\u7ebf\u6bb5\u6811\u4e0a\u5355\u70b9\u4fee\u6539\uff0c\u7ef4\u62a4 $\\min$\uff0c\u6307\u6570\u548c\u5373\u53ef\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a $\\operatorname{Hash}$ \u6bd4\u8f83\u4f18\u79c0\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u533a\u95f4\uff0c\u53ea\u6709\u6bcf\u79cd\u6570\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u624d\u4f1a\u5224\u5b9a\u76f8\u540c\u3002\u4e24\u79cd\u6570\u7684\u548c\u5dee\u6216\u5176\u5b83\u5173\u7cfb\u4e0d\u4f5c\u8003\u8651\u3002\u4e8e\u662f\u628a\u6570\u653e\u4e0a\u6307\u6570\u518d\u505a\u548c\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5176\u6b21\u6211\u4eec\u9009\u5b9a\u7684 $p$ \u6700\u597d\u6709\u4e00\u4e2a\u4e0d\u5c0f\u7684\u539f\u6839\uff0c$g$ \u5373\u4e3a\u539f\u6839\uff0c\u56e0\u4e3a\u539f\u6839\u7684\u9636\u662f\u6700\u5927\u7684\uff0c\u6240\u4ee5\u4fdd\u8bc1\u4e86\u6a21\u610f\u4e49\u4e0b\u7684\u5e42\u4e0d\u4f1a\u51b2\u7a81\u3002\n\n\u539f\u6839\u7a0d\u5927\uff08\u6700\u597d\u5927\u4e8e $10^6$\uff0c\u5373\u503c\u57df\uff09\u7684\u539f\u56e0\u662f\u53ef\u80fd\u6709\u6570\u7b49\u4e8e\u539f\u6839\u7684\u5e42\u3002\u4e0d\u8fc7\u4f5c\u8005\u53d6\u4e86 $p=998244353,g=3$ \u6ca1\u6709\u95ee\u9898\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u4e5f\u5f88\u597d\u7ef4\u62a4\u3002\n\n\u6700\u540e\u662f\uff0c\u8fd9\u9898\u633a\u5361\u5e38\u7684\uff0c\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u7ec6\u8282\u6539\u4e00\u4e0b\u540e\u9762 $3$ \u5230 $5$ \u4e2a\u70b9\u5c31\u53ef\u80fd\u8fc7\u4e0d\u53bb\u3002\u5177\u4f53\u5c31\u662f\u5728\u6bcf\u4e2a\u7ed3\u70b9\u5f00\u5934\u5224\u8fd4\u56de\u8fd8\u662f\u5728\u7236\u7ed3\u70b9\u5224\u8fdb\u5165\u7684\u4e0d\u540c\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n\ntypedef long long ll;\nconst int MAXN = 1000001;\nconst int inf = 2147483627;\nconst int p = 998244353;\n\ninline int read() {\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n\tdo x = x * 10 + ch - 48, ch = getchar(); while(ch >= '0' && ch <= '9');\n\treturn x * f;\n}\n\nint n,q,a[MAXN],p3[MAXN],min[MAXN << 2],s[MAXN << 2];\n\n#define lc(k) k << 1\n#define rc(k) k << 1 | 1\nint mmin(const int a,const int b) { return a < b ? a : b; }\n\nvoid Build(int k,int l,int r) {\n\tif(l == r) return min[k] = a[l], void(s[k] = p3[a[l]]);\n\tint mid = (l + r) >> 1;\n\tBuild(lc(k),l,mid);\n\tBuild(rc(k),mid + 1,r);\n\tmin[k] = mmin(min[lc(k)],min[rc(k)]);\n\ts[k] = (s[lc(k)] + s[rc(k)]) % p;\n\treturn;\n}\n\nvoid Update(int k,int l,int r,int x,int y) {\n\tif(l == r) return min[k] = y, void(s[k] = p3[y]);\n\tint mid = (l + r) >> 1;\n\tif(x <= mid) Update(lc(k),l,mid,x,y);\n\telse Update(rc(k),mid + 1,r,x,y);\n\tmin[k] = mmin(min[lc(k)],min[rc(k)]);\n\ts[k] = (s[lc(k)] + s[rc(k)]) % p;\n\treturn;\n}\n\nint Querymin(int k,int l,int r,int x,int y) {\n\t// if(l > y || r < x) return inf;\n\tif(l >= x && r <= y) return min[k];\n\tint mid = (l + r) >> 1;\n\tif(y <= mid) return Querymin(lc(k),l,mid,x,y);\n\telse if(x > mid) return Querymin(rc(k),mid + 1,r,x,y);\n\telse return mmin(Querymin(lc(k),l,mid,x,y),Querymin(rc(k),mid + 1,r,x,y));\n}\n\nint Querysum(int k,int l,int r,int x,int y) {\n\t// if(l > y || r < x) return 0;\n\tif(l >= x && r <= y) return s[k];\n\tint mid = (l + r) >> 1;\n\tif(y <= mid) return Querysum(lc(k),l,mid,x,y);\n\telse if(x > mid) return Querysum(rc(k),mid + 1,r,x,y);\n\treturn (Querysum(lc(k),l,mid,x,y) + Querysum(rc(k),mid + 1,r,x,y)) % p;\n}\n\nint main() {\n\tn = read(), q = read();\n\tfor(register int i = 1;i <= n;i++) a[i] = read();\n\tp3[0] = 1;\n\tfor(register int i = 1;i < MAXN;i++) p3[i] = p3[i - 1] * 3ll % p;\n\tBuild(1,1,n);\n\tint op,x,y,l1,r1,l2,r2,m1,m2; ll s1,s2;\n\twhile(q--) {\n\t\top = read();\n\t\tif(op == 0) {\n\t\t\tx = read(), y = read();\n\t\t\tUpdate(1,1,n,x,y);\n\t\t} else {\n\t\t\tl1 = read(), r1 = read(), l2 = read(), r2 = read();\n\t\t\tm1 = Querymin(1,1,n,l1,r1), m2 = Querymin(1,1,n,l2,r2),\n\t\t\ts1 = Querysum(1,1,n,l1,r1), s2 = Querysum(1,1,n,l2,r2);\n\t\t\tif(m1 <= m2) s1 = s1 * p3[m2 - m1] % p;\n\t\t\telse s2 = s2 * p3[m1 - m2] % p;\n\t\t\tif(s1 == s2) std::puts(\"YES\");\n\t\t\telse std::puts(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1595767263,
        "uid": 219595,
        "name": "Vocalise",
        "ccfLevel": 9,
        "title": "\u7ebf\u6bb5\u6811Hash--\u9898\u89e3 P6688 \u3010\u53ef\u91cd\u96c6\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u600e\u4e48\u5224\u65ad\u533a\u95f4 $[l_1,r_1]$ \u4e0e\u533a\u95f4 $[l_2,r_2]$ \u662f\u5426\u672c\u8d28\u76f8\u540c\u3002\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u5c31\u662f $k$ \u662f\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u6765\u7684\u3002\u6392\u5e8f\u80af\u5b9a\u4e0d\u73b0\u5b9e\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u770b\u5230 $a_i$ \u53ea\u6709 $10^6$\u3002\u6240\u4ee5\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570 $x$\uff0c\u5224\u65ad\u533a\u95f4 $[l_1,r_1]$ \u4e2d $x$ \u7684\u4e2a\u6570\u662f\u5426\u7b49\u4e8e\u533a\u95f4 $[l_2,r_2]$ \u4e2d $x+k$ \u7684\u4e2a\u6570\u3002**\u6876\u6bd4\u6392\u5e8f\u597d\u8f6c\u5316\u5f88\u591a**\u3002\n\n\u7136\u540e\u600e\u4e48\u4f18\u5316\u5462\u3002\u4e3b\u5e2d\u6811\u597d\u50cf\u53ef\u4ee5\u3002\u8fd9\u91cc\u6211\u4eec\u7528\u66f4\u7b80\u5355\u7684**hash**\u6765\u505a\u3002\u4e00\u4e2a hash \u5c31\u8868\u793a\u6709\u5e8f\u96c6\u5408 $\\{ton[x]|0\\leq x\\leq 10^6 \\}$\uff0c\u503c\u4e3a $(\\sum ton[x]\\times P^{x})\\mod M$\u3002($ton[x]$:\u4e00\u4e2a\u533a\u95f4\u5185 $x$ \u7684\u4e2a\u6570\uff0c$P$ \u548c $M$ \u662f\u4e24\u4e2a\u5e38\u6570)\n\n\u7136\u540e\u600e\u4e48\u4ece\u4f4d\u7f6e $x$ \u79fb\u5230 $x+k$ \u5462\uff0c\u5c31\u662f $hash=hash\\times p^k$\n\n```cpp\n//\u524d\u9762\u7701\u7565\n#define int long long\nconst int P=13331,MOD=1e9+7;\nint a[M],n;\n\n//emm\u3002\u3002\u3002\u6211\u61d2\u5f97\u5199%mod\u4e86\nstruct node{int x;}PP,n0;\ninline node operator+(const node&a,const node&b){\n\t//return (node){a.x+b.x>=MOD?a.x+b.x-MOD:a.x+b.x};\n\treturn (node){(a.x+b.x)%MOD};\n}\ninline node operator-(const node&a,const node&b){\n\t//return (node){a.x-b.x<0?a.x-b.x+MOD:a.x-b.x};\n\treturn (node){((a.x-b.x)%MOD+MOD)%MOD};\n}\ninline node operator*(const node&a,const node&b){\n\treturn (node){1ll*a.x*b.x%MOD};\n}\ninline bool operator==(const node&a,const node&b){\n\treturn a.x==b.x;\t\n}\n\nnode po[M*2];\n\n//\u9ad8\u7ea7\u7684\u6811\u72b6\u6570\u7ec4\nnode ch[M];\nvoid addh(int x,node y){\n\tif(x<=0)return;\n\tfor(;x<=n;x+=x&-x)ch[x]=ch[x]+y;\n}\nnode askh(int x){\n\tif(x<=0)return n0;\n\tnode res=n0;for(;x;x-=x&-x)res=res+ch[x];return res;\n}\nll cs[M];\nvoid adds(int x,ll y){\n\tif(x<=0)return;\n\tfor(;x<=n;x+=x&-x)cs[x]+=y;\n}\nll asks(int x){\n\tif(x<=0)return 0;\n\tll res=0;for(;x;x-=x&-x)res+=cs[x];return res;\n}\n\nsigned main(){\n\tint q,opt,x,y,l1,l2,r1,r2;read(n),read(q);\n\tPP=(node){P};\n\tpo[0].x=1;for(int i=1;i<=2*M-5;i++)po[i]=po[i-1]*PP;\n\tfor(int i=1;i<=n;i++)read(a[i]),addh(i,po[a[i]]),adds(i,a[i]);\n\twhile(q--){\n\t\tread(opt);\n\t\tif(opt==0){\n\t\t\tread(x),read(y);\n\t\t\taddh(x,n0-po[a[x]]),adds(x,-a[x]);\n\t\t\taddh(x,po[y]),adds(x,y);\n\t\t\ta[x]=y;\n\t\t}else{\n\t\t\tread(l1),read(r1),read(l2),read(r2);\n\t\t\tif(l1>r1)swap(l1,r1),swap(l2,r2); \n\t\t\tll k=(asks(r2)-asks(l2-1))-(asks(r1)-asks(l1-1));\n\t\t\tif(k<0){\n\t\t\t\tswap(l1,l2),swap(r1,r2);\n\t\t\t\tk=-k;\n\t\t\t}\n\t\t\tif(k%(r1-l1+1)!=0){\n\t\t\t\tputs(\"NO\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tk=k/(r1-l1+1);\n\t\t\tif(askh(r2)-askh(l2-1)==(askh(r1)-askh(l1-1))*po[k]){\n\t\t\t\tputs(\"YES\");\n\t\t\t}else puts(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1635122001,
        "uid": 151712,
        "name": "\u4e00\u67b6\u98de\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6688 \u53ef\u91cd\u96c6"
    }
]