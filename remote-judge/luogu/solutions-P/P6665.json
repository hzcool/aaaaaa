[
    {
        "content": "SG\u5b9a\u7406\u597d\u9898\n\n\u9996\u5148\u4e00\u4e2a\u6811\u5728\u7ecf\u8fc7\u4e00\u6b21\u5220\u9664\u64cd\u4f5c\u540e,\u4f1a\u53d8\u6210\u8bb8\u591a\u68ee\u6797\n\n\u7136\u540e\u8fd9\u4e9b\u68ee\u6797\u5176\u5b9e\u5c31\u662f\u539f\u95ee\u9898\u5c40\u9762\u7684\u4e00\u4e9b\u5b50\u5c40\u9762,\u90a3\u4e48\u4e0d\u96be\u8bb0\u4e00\u4e2a\u5c40\u9762\u5c31\u662f\u4e00\u4e2a\u6811,\u7136\u540e\u4f1a\u53d1\u73b0**\u4e0d\u540c\u7684\u6811**\u4e4b\u95f4\u7684\u64cd\u4f5c\u662f\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\u7684,\u6240\u4ee5\u6211\u4eec\u628a\u6240\u6709\u6811\u7684SG\u503c\u5f02\u6216\u8d77\u6765,\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5728\u8fd9\u6b21\u64cd\u4f5c\u4e4b\u540e\u5b50\u5c40\u9762\u7684SG\u503c\n\n\u540c\u65f6\u7531SG\u5b9a\u7406,\u539f\u6811\u7684SG\u503c\u5c31\u662f\u6240\u6709\u4e0d\u540c\u5220\u9664\u64cd\u4f5c\u4e4b\u540e\u5f97\u5230\u7684\u5b50\u5c40\u9762\u7684SG\u503c\u7684mex,\u6240\u4ee5\u6211\u4eec\u5c31\u662f\u8981\u5feb\u901f\u6c42\u51fa\u6240\u6709\u8fd9\u6837\u7684SG\u503c\u7684mex\n\n\u4ed4\u7ec6\u60f3\u60f3,\u5982\u679c\u4e00\u6b21\u5220\u9664\u64cd\u4f5c\u5220\u5728\u6839,\u90a3\u4e48\u76f4\u63a5\u628a\u6839\u6bcf\u4e2a\u5b50\u6811\u7684SG\u503c\u5f02\u6216\u8d77\u6765\u5c31\u80fd\u5f97\u5230\u5269\u4e0b\u7684\u4e86\n\n\u800c\u5982\u679c\u5220\u9664\u64cd\u4f5c\u5728\u4e00\u9897\u5b50\u6811\u5185,\u90a3\u4e48\u628a\u8fd9\u68f5\u5b50\u6811\u5916\u5176\u4ed6\u5b50\u6811\u7684SG\u503c\u5f02\u6216\u8d77\u6765,\u518d\u628a\u8fd9\u68f5\u5b50\u6811\u7684\u64cd\u4f5c\u5b8c\u4e4b\u540e\u5f97\u5230\u7684SG\u96c6\u5408\u90fd\u548c\u90a3\u4e2a\u503c\u5f02\u6216\u6765\u8f6c\u79fb\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u68f5\u5b50\u6811\u8bb0\u5f55\u4e00\u4e2aSG\u96c6\u5408\u8868\u793a\u5b50\u6811\u5185\u5220\u9664\u6bcf\u4e2a\u70b9\u540e\u5206\u522b\u5f97\u5230\u7684\u540e\u7ee7SG\u503c\u96c6\u5408\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5168\u5c40\u5f02\u6216,\u5355\u70b9\u63d2\u5165,\u5feb\u901f\u5408\u5e76\u4ee5\u53ca\u652f\u6301\u67e5\u8be2\u5168\u5c40mex\u7684\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\n\n\u4f7f\u752801trie\u5373\u53ef,\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5728$O(nlogn)$\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u6b64\u9898\n\ncode:\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nconst int MAXN = 5e5 + 7;\nconst int MAXM = 1e6 + 7;\nconst int MAXT = 5e6 + 7;\nusing namespace std;\n\nint T, n, m, ccnt, ans;\nint home[MAXN], nxt[MAXM], to[MAXM], vis[MAXN], rt[MAXN];\nint sg[MAXN];\ninline void ct(int x, int y) {\n\tccnt++;\n\tnxt[ccnt] = home[x];\n\thome[x] = ccnt;\n\tto[ccnt] = y;\n}\n\nconst int up = 20;\n\nnamespace trie {\n#define swap(x,y) (x^=y^=x^=y)\n\tint ls[MAXT], rs[MAXT], nd, siz[MAXT], tag[MAXT];\n\tinline void pushdown(int x, int dep) {\n\t\tif(tag[x]) {\n\t\t\tif(ls[x])tag[ls[x]] ^= tag[x];\n\t\t\tif(rs[x])tag[rs[x]] ^= tag[x];\n\t\t\tif(tag[x] & (1 << dep))swap(ls[x], rs[x]);\n\t\t\ttag[x] = 0;\n\t\t}\n\t}\n\tinline void pushup(int x) {\n\t\tsiz[x] = siz[ls[x]] + siz[rs[x]];\n\t}\n\tinline void ins(int &x, int v, int dep = up) {\n\t\tif(!x)x = ++nd,\n\t\t\t\t  ls[nd] = rs[nd] = siz[nd] = tag[nd] = 0;\n\t\tif(dep == -1)return (void)(siz[x] = 1); //\u91cd\u590d\u7684\u53ea\u7b97\u4e00\u4e2a\n\t\tpushdown(x, dep);\n\t\tif(v & (1 << dep))ins(rs[x], v, dep - 1);\n\t\telse ins(ls[x], v, dep - 1);\n\t\tpushup(x);\n\t}\n\tinline int merge(int x, int y, int dep = up) {\n\t\tif(!x || !y)return x | y;\n\t\tpushdown(x, dep);\n\t\tpushdown(y, dep);\n\t\tls[x] = merge(ls[x], ls[y], dep - 1);\n\t\trs[x] = merge(rs[x], rs[y], dep - 1);\n\t\tif(dep != -1)pushup(x);\n\t\treturn x;\n\t}\n\tinline int query(int x, int dep = up) {\n\t\tif(!x)return 0;\n\t\tif(siz[ls[x]] < (1 << dep))return query(ls[x], dep - 1);\n\t\telse return query(rs[x], dep - 1) | (1 << dep);\n\t}\n};\nusing namespace trie;\n\ninline void init() {\n\tnd = 0;\n\tmemset(rt, 0, sizeof(rt));\n\tmemset(home, 0, sizeof(home));\n\tmemset(vis, 0, sizeof(vis));\n\tans = 0;\n\tccnt = 0;\n}\n\ninline void dfs(int u, int F) {\n\tvis[u] = 1;\n\tint S = 0;\n\tfor(int i = home[u]; i; i = nxt[i]) {\n\t\tint v = to[i];\n\t\tif(v == F)continue;\n\t\tdfs(v, u);\n\t\tS ^= sg[v];\n\t}\n\tfor(int i = home[u]; i; i = nxt[i]) {\n\t\tint v = to[i];\n\t\tif(v == F)continue;\n\t\ttag[rt[v]] ^= (S ^ sg[v]);\n\t\trt[u] = merge(rt[u], rt[v]);\n\t}\n\tins(rt[u], S);\n\tsg[u] = query(rt[u]);\n\treturn ;\n}\n\nint main() {\n\tscanf(\"%d\", &T);\n\twhile(T-- > 0) {\n\t\tinit();\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tfor(int i = 1, x, y; i <= m; ++i) {\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tct(x, y);\n\t\t\tct(y, x);\n\t\t}\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\tif(!vis[i]) {\n\t\t\t\tdfs(i, 0);\n\t\t\t\tans ^= sg[i];\n\t\t\t}\n\n\t\tif(ans)\n\t\t\tprintf(\"Alice\\n\");\n\t\telse printf(\"Bob\\n\");\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1597908889,
        "uid": 76990,
        "name": "loveJY",
        "ccfLevel": 9,
        "title": "P6665 [\u6e05\u534e\u96c6\u8bad2016] Alice \u548c Bob \u53c8\u5728\u73a9\u6e38\u620f"
    },
    {
        "content": "\u6765\u6c34\u9898\u89e3\u4e86\n\n\n\u627e\u4e00\u79cd\u65b9\u5f0f\u6765\u5feb\u901f\u8ba1\u7b97 sg \u503c\u3002\n\n\u8003\u8651\u4e00\u68f5\u5b50\u6811\uff0c\u5c06\u5176 sg \u503c\u7edf\u8ba1\u5728\u5176\u6700\u4e0a\u90e8\u7684\u8282\u70b9\u5904\uff0c\u8bbe $f_u$ \u8868\u793a $u$ \u4e3a\u6839\u5b50\u6811\u7684 sg \u503c\uff0c\u8bbe $g_u$ \u4e3a\u9664\u53bb $u$ \u4e4b\u5916\u7684\u5176\u4ed6\u5b50\u6811\u7684 sg \u503c\u7684\u5f02\u6216\u548c\uff0c\u90a3\u4e48\u5bb9\u6613\u5f97\u5230\u5220\u53bb\u8282\u70b9 $x$ \u5bf9\u4e8e\u7b54\u6848\u7684\u5f71\u54cd\u4e3a\uff1a\n\n$$\\bigoplus_{x\\in u.fa} g_x\\oplus f_x$$\n\n\u5f53\u7136\u5982\u679c $x$ \u4e3a root \u90a3\u4e48\u5176\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5219\u4e0d\u5305\u542b $f$\n\n\u5982\u679c\u8bbe $w_x$ \u4e3a $x\\to root$ \u7684\u8def\u5f84\u4e0a\u7684 $g\\oplus f$ \u7684\u5f02\u6216\u548c\uff0c\u90a3\u4e48\u663e\u7136 $sg_{rt}$ \u4e3a $w_x$ \u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u6570\u3002\n\n\u7136\u800c\u5355\u6b21\u8f6c\u79fb\u7684\u65f6\u5019\u9700\u8981\u7ed9\u6240\u6709\u5b50\u6811\u5f02\u6216\u4e0a $g_x$\uff0c\u7136\u540e\u518d\u6c42 $\\rm mex$\uff0c\u7136\u540e\u518d\u5f02\u6216\u4e0a $f_x$\uff0c\u5904\u7406\u8d77\u6765\u663e\u7136\u975e\u5e38\u9ebb\u70e6\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u9700\u8981 check \u5185\u90e8\u662f\u5426\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff0c\u76f8\u540c\u6743\u503c\u6211\u4eec\u53ea\u9700\u8981\u63d2\u5165\u4e00\u904d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u67e5\u8be2 $\\rm mex$ \u4e86\uff0c\u96c6\u4f53\u5f02\u6216\u4e0a\u6743\u503c\u76f4\u63a5\u6253\u5f02\u6216\u6807\u8bb0\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\uff0c\u5f53\u7136\u8981\u5199\u4e00\u4e2a 01trie \u5408\u5e76\u3002\n\n$Code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n#define Next( i, x ) for( register int i = head[x]; i; i = e[i].next )\n#define rep( i, s, t ) for( register int i = (s); i <= (t); ++ i )\n#define drep( i, s, t ) for( register int i = (t); i >= (s); -- i )\n#define re register\n#define ls(x) t[x].ch[0]\n#define rs(x) t[x].ch[1]\nint gi() {\n\tchar cc = getchar() ; int cn = 0, flus = 1 ;\n\twhile( cc < '0' || cc > '9' ) {  if( cc == '-' ) flus = - flus ; cc = getchar() ; }\n\twhile( cc >= '0' && cc <= '9' )  cn = cn * 10 + cc - '0', cc = getchar() ;\n\treturn cn * flus ;\n}\nconst int N = 2e5 + 5 ; \nint n, m, ans, top, cnt, st[N], f[N], g[N], rt[N], head[N], vis[N] ; \nstruct Trie { int ch[2], val, mark ; } t[N * 22] ; \nstruct E { int to, next ; } e[N << 1] ; \nvoid add( int x, int y ) {\n\te[++ cnt] = (E){ y, head[x] }, head[x] = cnt,\n\te[++ cnt] = (E){ x, head[y] }, head[y] = cnt ; \n}\nvoid pushmark(int x, int l) {\n\tif( !t[x].mark ) return ; \n\tif((t[x].mark >> l) & 1) swap( ls(x), rs(x) ) ;\n\tt[ls(x)].mark ^= t[x].mark, t[rs(x)].mark ^= t[x].mark,\n\tt[x].mark = 0 ; \n}\nvoid pushup(int x) { t[x].val = t[ls(x)].val + t[rs(x)].val ; }\nvoid insert( int &x, int w ) {\n\tif( !x ) x = ++ cnt ; int u = x ; top = 0 ; \n\tfor( re int i = 15; i >= 0; -- i ) {\n\t\tpushmark(u, i) ; st[++ top] = u ; \n\t\tif( !t[u].ch[(w >> i) & 1] ) t[u].ch[(w >> i) & 1] = ++ cnt ; \n\t\tu = t[u].ch[(w >> i) & 1] ; \n\t} t[u].val = 1 ; \n\tfor( re int i = top; i >= 1; -- i ) pushup(st[i]) ; \n}\nvoid merge( int &x, int y, int l ) {\n\tif( !x || !y ) return x = x + y, void() ;\n\tif( l == -1 ) return ; \n\tpushmark( x, l ), pushmark( y, l ) ;\n\tmerge(ls(x), ls(y), l - 1), merge(rs(x), rs(y), l - 1), pushup(x) ; \n}\nint mex( int u ) {\n\tint ans = 0 ; \n\tfor( re int i = 15; i >= 0; -- i ) {\n\t\tpushmark(u, i) ; \n\t\tif( t[ls(u)].val != ( 1 << i ) ) u = ls(u) ; \n\t\telse u = rs(u), ans += ( 1 << i ) ;\n\t}\n\treturn ans ; \n}\nvoid dfs( int x, int fa ) {\n\tvis[x] = 1, insert( rt[x], 0 ) ;\n\tNext( i, x ) {\n\t\tint v = e[i].to ; if( v == fa ) continue ; \n\t\tdfs( v, x ), merge( rt[x], rt[v], 15 ), g[x] = g[x] ^ f[v] ;  \n\t}\n\tt[rt[x]].mark ^= g[x], f[x] = mex(rt[x]), t[rt[x]].mark ^= f[x] ; \n}\nsigned main()\n{\n\tint T = gi() ; \n\twhile( T-- ) {\n\t\tn = gi(), m = gi() ; int x, y ; \n\t\trep( i, 1, m ) x = gi(), y = gi(), add( x, y ) ; \n\t\tcnt = 0, ans = 0 ; \n\t\trep( i, 1, n ) if( !vis[i] ) dfs( i, i ), ans ^= f[i] ; \n\t\tif( !ans ) puts(\"Bob\") ;\n\t\telse puts(\"Alice\") ;\n\t\tcnt = 0, memset( head, 0, sizeof(head) ),\n\t\tmemset( f, 0, sizeof(f) ), memset( g, 0, sizeof(g) ), \n\t\tmemset( t, 0, sizeof(t) ), memset( rt, 0, sizeof(rt) ),\n\t\tmemset( vis, 0, sizeof(vis) ) ; \n\t}\t\n\treturn 0 ;\n}\n```",
        "postTime": 1602079925,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6665 \u3010[\u6e05\u534e\u96c6\u8bad2016] Alice \u548c Bob \u53c8\u5728\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "$n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u6839\u6811\u68ee\u6797\uff0c\u6bcf\u68f5\u6811\u7684\u6839\u662f\u5176\u4e2d\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\uff0cAlice \u548c Bob \u8f6e\u6d41\u9009\u62e9\u4e00\u4e2a\u6ca1\u88ab\u5220\u9664\u7684\u70b9\u5e76\u5220\u9664\u5b83\u4ee5\u53ca\u5b83\u7684\u6240\u6709\u7956\u5148\uff0c\u95ee Alice \u662f\u5426\u5fc5\u80dc\u3002\n\n$1\\leq \\sum n\\leq 2\\times 10^5$\uff0c$0\\leq m\\leq n-1$\u3002\n\nSG \u5b9a\u7406\uff0c\u6bcf\u68f5\u6811\u4e4b\u95f4\u72ec\u7acb\uff0c\u5e76\u4e14\u64cd\u4f5c\u4e00\u68f5\u6811\u4e4b\u540e\u6839\u4e00\u5b9a\u4f1a\u88ab\u5220\u9664\uff0c\u53ef\u4ee5\u628a SG \u503c\u8bb0\u5f55\u5728\u6839\u8282\u70b9\u3002\u8bbe $f_u$ \u662f\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u7684 SG \u503c\uff0c\u8f6c\u79fb\u65f6\u5982\u679c\u5220 $u$\uff0c\u90a3\u4e48\u4f1a\u52a0\u5165\u4e00\u79cd $\\oplus_{v\\in son_u}f_v$ \u7684\u60c5\u51b5\uff1b\u5982\u679c\u5220\u975e\u6839\u7ed3\u70b9 $v$\uff0c\u90a3\u4e48\u4f1a\u5269\u4e0b $v$ \u5230 $u$ \u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u5b50\u6811\u53bb\u6389 $u,v$ \u8def\u5f84\u4e0a\u9664\u4e86 $v$ \u7ed3\u70b9\u4ee5\u5916\u7684\u70b9\u7684\u5b50\u6811\uff0c\u5373\u8bb0 $g_u=\\oplus_{v\\in son_u}f_v$\uff0c\u4f1a\u52a0\u5165\u4e00\u79cd $g_u\\oplus_{w\\in(u,v)\\land w\\not = u}(g_{fa_w}\\oplus f_w)$ \u7684\u60c5\u51b5\uff0c\u53bb\u6389\u7684\u539f\u56e0\u662f\u88ab\u5df2\u7ecf\u5220\u9664\u4e86\u3002\n\n\u8fd9\u6837\u4e00\u6765\u505a\u6cd5\u5c31\u5f88\u660e\u4e86\u4e86\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u4e00\u68f5 01Trie \u8868\u793a\u5b50\u6811\u5185\u6bcf\u4e2a\u70b9\u5230\u5b83\u7684 $(g_{fa_v}\\oplus f_v)$ \u7684\u51fa\u73b0\u60c5\u51b5\uff0c\u8f6c\u79fb\u65f6\u628a\u513f\u5b50 $v$ \u7684 Trie \u5168\u5c40\u5f02\u6216 $g_u\\oplus f_v$\uff08\u5904\u7406\u8fb9 $u-v$ \u7684\u8d21\u732e\uff09\u518d\u5408\u5e76\u5230 $u$ \u4e0a\u6765\uff0c\u628a\u513f\u5b50\u5904\u7406\u540e\u5408\u5e76\u5230\u81ea\u5df1\u8eab\u4e0a\u4e4b\u540e\u5c31\u53ef\u4ee5\u628a $g_u=\\oplus_{v\\in son_u}f_v$ \u63d2\u5165 $u$ \u70b9\u7684 Trie\uff0c\u5728\u6811\u4e0a\u4e8c\u5206\u6c42\u51fa\u6b64\u65f6\u7684 mex \u4f5c\u4e3a $f_u$\u3002\n\n\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u53ef\u4ee5\u5feb\u901f\u5408\u5e76\uff0c\u5355\u70b9\u63d2\u5165\uff0c\u5168\u5c40\u5f02\u6216\uff0c\u67e5\u8be2\u5168\u5c40 mex \u7684 01Trie\uff0c\u5168\u5c40\u5f02\u6216\u53ef\u4ee5\u6253\u4e2a\u6807\u8bb0\u5728 Trie \u4e0a\uff0c\u672c\u8d28\u662f\u4ea4\u6362\u4e86\u4e00\u4e9b\u5de6\u53f3\u513f\u5b50\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002",
        "postTime": 1652833004,
        "uid": 447750,
        "name": "luogubot",
        "ccfLevel": 0,
        "title": "P6665 [\u6e05\u534e\u96c6\u8bad2016] Alice \u548c Bob \u53c8\u5728\u73a9\u6e38\u620f"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://uoj.ac/problem/266)\n\n\u795e\u4ed9\u9898\u3002\n\n\u9996\u5148\u6ce8\u610f\u5230\u6b64\u9898\u7684\u6e38\u620f\u662f\u4e00\u4e2a ICG\uff0c\u6545\u8003\u8651\u4f7f\u7528 SG \u5b9a\u7406\u89e3\u51b3\u8fd9\u4e2a\u9898\uff0c\u663e\u7136\u6211\u4eec\u53ea\u9700\u5bf9\u6bcf\u4e2a\u8fde\u901a\u5757\u8ba1\u7b97\u4e00\u904d\u5176 SG \u503c\u5f02\u6216\u8d77\u6765\u68c0\u9a8c\u662f\u5426\u975e\u96f6\u5373\u53ef\u3002\u6ce8\u610f\u5230\u6211\u4eec\u6bcf\u5220\u9664\u4e00\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u540e\u7559\u4e0b\u7684\u662f\u4e00\u4e9b\u4e92\u4e0d\u5f71\u54cd\u7684\u5b50\u6811\uff0c\u5e76\u4e14\u5269\u4f59\u90e8\u5206\u7684 SG \u503c\u5c31\u662f\u5269\u4f59\u5b50\u6811\u7684 SG \u503c\u5f02\u6216\u8d77\u6765\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u8bbe $sg_u$ \u8868\u793a $u$ \u5b50\u6811\u90e8\u5206\u7684 SG \u503c\uff0c\u6211\u4eec\u518d\u5b9e\u65f6\u7ef4\u62a4\u4e00\u4e2a $t_v$ \u8868\u793a\u5220\u9664 $v$ \u5230\u5f53\u524d\u8ba1\u7b97\u7684\u8282\u70b9\uff08\u8b6c\u5982\u6211\u4eec\u8ba1\u7b97 $sg_u$ \u7684\u65f6\u5019\u5f53\u524d\u8ba1\u7b97\u7684\u8282\u70b9\u5c31\u662f $u$\uff09\u4e4b\u540e\uff0c\u5269\u4f59\u90e8\u5206\u7684 SG \u503c\u7684\u5f02\u6216\u548c\u3002\u90a3\u4e48\u663e\u7136 $sg_u$ \u5c31\u7b49\u4e8e\u6240\u6709 $u$ \u5b50\u6811\u5185\u7684\u70b9 $v$ \u7684 $t_v$ \u7684 MEX\u3002\n\n\u56e0\u6b64\u6211\u4eec\u6709\u4e86 $n^2$ \u7684\u89e3\u6cd5\uff0c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e $u$ \u5b50\u6811\u5185\u6240\u6709\u70b9\u5e76\u8ba1\u7b97\u5176 MEX\u3002\n\n\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5f53\u6211\u4eec\u8ba1\u7b97 $u$ \u5b50\u6811\u7684 SG \u65f6\uff0c\u6211\u4eec\u9996\u5148 DFS \u4e00\u904d $u$ \u7684\u6240\u6709\u513f\u5b50 $v$ \u5e76\u8ba1\u7b97 $v$ \u5b50\u6811\u5185\u6240\u6709\u70b9\u7684 $sg_v$ \u53ca $t_v$\uff0c\u8bb0 $S=\\operatorname{xor}\\limits_{v\\in son_u}sg_v$\uff0c\u90a3\u4e48\u5fc5\u7136\u6709 $t_u=S$\u3002\u800c\u663e\u7136\u5bf9\u4e8e $u$ \u7684\u4e00\u4e2a\u513f\u5b50 $v$ \u800c\u8a00\uff0c\u6211\u4eec\u5728 DFS $v$ \u7684\u65f6\u5019\uff0c\u6240\u6709 $v$ \u5b50\u6811\u4e2d\u7684\u70b9 $w$ \u672c\u6765\u7684 $t_w$ \u80af\u5b9a\u662f\u5220\u9664 $w$ \u5230 $v$ \u8def\u5f84\u4e0a\u7684\u70b9\u540e\uff0c\u5269\u4f59\u90e8\u5206 SG \u503c\u7684\u5f02\u6216\u548c\uff0c\u73b0\u5728\u6839\u8282\u70b9\u7531 $v$ \u53d8\u6210\u4e86 $u$\uff0c\u5220\u9664 $w$ \u5230 $u$ \u4e4b\u540e\u7684\u5269\u4f59\u90e8\u5206\u4e0e\u5220\u9664 $w$ \u5230 $v$ \u4e4b\u540e\u7684\u5269\u4f59\u90e8\u5206\u76f8\u6bd4\uff0c\u80af\u5b9a\u4f1a\u591a\u51fa\u4e00\u90e8\u5206\u51fa\u6765\uff0c\u800c\u8fd9\u591a\u51fa\u7684\u90e8\u5206\u53c8\u663e\u7136\u662f $u$ \u7684\u6240\u6709\u513f\u5b50\u6263\u6389 $v$\uff0c\u5b83\u4eec\u7684 SG \u503c\u7684\u5f02\u6216\u548c\u5373\u4e3a $S\\oplus sg_v$\uff0c\u6545\u6211\u4eec\u9700\u8981\u5c06\u6240\u6709 $v$ \u5b50\u6811\u4e2d\u7684 $w$ \u7684 $t_w$ \u90fd\u5f02\u6216\u4e0a $S\\oplus sg_v$\u3002\n\n\u53ef\u662f\u8fd9\u6837\u8fd8\u662f\u6ca1\u6cd5\u4ece\u672c\u8d28\u4e0a\u4f18\u5316\u4e4b\u524d $n^2$ \u7684\u66b4\u529b\u89e3\u6cd5\u3002\u6ce8\u610f\u5230\u6b64\u9898\u8bbe\u8ba1\u5f02\u6216\u8fd0\u7b97\uff0c\u56e0\u6b64\u8003\u8651 01-trie\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $u$ \u7ef4\u62a4\u4e00\u4e2a 01-trie\uff0c\u91cc\u9762\u5b58\u4e86 $u$ \u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684 $t$ \u503c\uff0c\u6ce8\u610f\u5230\u201d\u5c06 $v$ \u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684 $t$ \u503c\u90fd\u5f02\u6216\u4e0a\u67d0\u4e2a\u503c\u201c\u8fd9\u4e2a\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5bf9\u6574\u68f5 trie \u6253\u4e00\u4e2a tag\uff0c\u8fd9\u4e2a\u663e\u7136\u662f\u53ef\u4ee5\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u7684\uff0c\u800c\u5f53\u6211\u4eec\u8ba1\u7b97 $sg_u$ \u65f6\u5408\u5e76\u5b50\u6811\u4fe1\u606f\u65f6\uff0c\u53ef\u4ee5\u50cf\u53bb\u5e74\u7701\u9009 D2T2 \u4e00\u6837\u901a\u8fc7\u7c7b\u4f3c\u4e8e\u7ebf\u6bb5\u6811\u5408\u5e76/\u5806\u5408\u5e76\u7684\u65b9\u5f0f\uff0c\u5c06\u6240\u6709\u513f\u5b50\u8282\u70b9\u7684 01-trie \u5408\u5e76\uff0c\u6c42\u4e00\u4e2a\u96c6\u5408\u7684 MEX \u65f6\u5c31\u5728 01-trie \u4e0a\u4e8c\u5206\u5373\u53ef\u3002\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u8981\u5b9e\u73b0\u4e00\u4e0b\u56db\u4e2a\u64cd\u4f5c\uff1a\n\n- \u5bf9\u6bcf\u4e2a\u513f\u5b50\u8282\u70b9\u7684 01-trie \u6574\u4f53\u6253\u4e00\u4e2a\u5f02\u6216\u7684\u6807\u8bb0\n- \u5c06\u513f\u5b50\u8282\u70b9\u7684 01-trie \u5408\u5e76\u8d77\u6765\n- \u5728\u5f53\u524d\u8282\u70b9\u7684 01-trie \u4e2d\u63d2\u5165 $t_u=\\operatorname{xor}\\limits_{v\\in son_u}sg_v$\n- \u5728 01-trie \u4e0a\u4e8c\u5206\u627e\u5230\u7b2c\u4e00\u4e2a\u672a\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u8fd9\u6837\u5373\u53ef\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230 $n\\log n$\u3002\n\n```cpp\nconst int MAXN=1e5;\nconst int MAXB=18;\nconst int MAXP=MAXN*40;\nint n,m,hd[MAXN+5],to[MAXN*2+10],nxt[MAXN*2+10],ec=0;\nvoid adde(int u,int v){to[++ec]=v;nxt[ec]=hd[u];hd[u]=ec;}\nstruct node{int ch[2],lz,siz;} s[MAXP+5];\nint rt[MAXN+5],ncnt=0,sg[MAXN+5],vis[MAXN+5];\nvoid clear(){\n\tmemset(hd,0,sizeof(hd));ec=0;\n\tmemset(sg,0,sizeof(sg));memset(vis,0,sizeof(vis));\n\tfor(int i=1;i<=ncnt;i++) s[i].ch[0]=s[i].ch[1]=s[i].lz=s[i].siz=0;\n\tmemset(rt,0,sizeof(rt));ncnt=0;\n}\nvoid pushup(int k){s[k].siz=s[s[k].ch[0]].siz+s[s[k].ch[1]].siz;}\nvoid pushdown(int k,int d){\n\tif(s[k].lz){\n\t\tif(s[k].lz>>d&1) swap(s[k].ch[0],s[k].ch[1]);\n\t\ts[s[k].ch[0]].lz^=s[k].lz;s[s[k].ch[1]].lz^=s[k].lz;\n\t\ts[k].lz=0;\n\t}\n}\nvoid insert(int &k,int x,int d){\n\tif(!k) k=++ncnt;if(!~d) return s[k].siz=1,void();\n\tpushdown(k,d);insert(s[k].ch[x>>d&1],x,d-1);pushup(k);\n}\nint query(int k,int d){\n\tif(!~d) return 0;pushdown(k,d);//printf(\"%d %d %d\\n\",k,d,s[k].siz);\n\tif(s[s[k].ch[0]].siz>=(1<<d)) return query(s[k].ch[1],d-1)|(1<<d);\n\telse return query(s[k].ch[0],d-1);\n}\nint merge(int x,int y,int d){\n\tif(!x||!y) return x+y;int z=++ncnt;\n\tif(!~d) return s[z].siz=1,z;\n\tpushdown(x,d);pushdown(y,d);\n\ts[z].ch[0]=merge(s[x].ch[0],s[y].ch[0],d-1);\n\ts[z].ch[1]=merge(s[x].ch[1],s[y].ch[1],d-1);\n\treturn pushup(z),z;\n}\nvoid dfs(int x,int f){\n\tint sum=0;vis[x]=1;\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\tdfs(y,x);sum^=sg[y];\n\t}\n\tfor(int e=hd[x];e;e=nxt[e]){\n\t\tint y=to[e];if(y==f) continue;\n\t\ts[rt[y]].lz^=sg[y]^sum;rt[x]=merge(rt[x],rt[y],MAXB);\n\t} insert(rt[x],sum,MAXB);sg[x]=query(rt[x],MAXB);\n//\tprintf(\"%d %d\\n\",x,sg[x]);\n}\nvoid solve(){\n\tscanf(\"%d%d\",&n,&m);clear();int sum=0;\n\tfor(int i=1,u,v;i<=m;i++) scanf(\"%d%d\",&u,&v),adde(u,v),adde(v,u);\n\tfor(int i=1;i<=n;i++) if(!vis[i]) dfs(i,0),sum^=sg[i];\n\tprintf(\"%s\\n\",(sum==0)?\"Bob\":\"Alice\");\n}\nint main(){int qu;scanf(\"%d\",&qu);while(qu--) solve();return 0;}\n```\n\n",
        "postTime": 1620133739,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6665 [\u6e05\u534e\u96c6\u8bad2016] Alice \u548c Bob \u53c8\u5728\u73a9\u6e38\u620f"
    }
]