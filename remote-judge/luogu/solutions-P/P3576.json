[
    {
        "content": "\u9996\u5148\u5bf9\u4e8e\u6307\u5b9a\u7684\u90a3\u6761\u8fb9\uff0c\u53ef\u4ee5\u628a\u5b83\u62c6\u6210\u4e24\u68f5\u6811\u6216\u8005\u5efa\u4e00\u4e2a0\u7684\u70b9\u4e0e\u8fd9\u4e24\u70b9\u76f8\u8fde.\n\n\u4f1a\u60f3\u5230\u8ba1\u7b97\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u6bcf\u7ec4\u8682\u8681\u5230\u6307\u5b9a\u8fb9\u540e\u8fd8\u5269\u591a\u5c11\u8682\u8681\uff0c\u663e\u7136\u4f1a\u8d85\u65f6.\n\n\u6211\u4eec\u5012\u8fc7\u6765\u8003\u8651\uff0c\u4ece\u6307\u5b9a\u7684\u8fb9\u5f00\u59cb\u8ba1\u7b97.\n\n\u5047\u8bbe\u7b2c $i$ \u4e2a\u8282\u70b9\u5b58\u5728\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e $dp1_i$ \u7684\u8682\u8681\uff0c\u4e14\u5c0f\u4e8e\u7b49\u4e8e $dp2_i$\u7684\u8682\u8681\u6700\u7ec8\u5230\u8fbe\u6307\u5b9a\u8fb9\u4f1a\u88ab\u5403\u6389(\u5373\u6070\u597d $k$ \u53ea).\n\n\u5bb9\u6613\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b:\n\n$dp1_v = dp1_u \\cdot (c_u - 1)$\n\n$dp2_v = (dp2_u + 1) \\cdot (c_u - 1) - 1$\n\n\u5176\u4e2d $c_u$ \u8868\u793a\u70b9 $u$ \u7684\u5ea6\n\n\n\u4e00\u5f00\u59cb $dp1_0$ \u4e0e $dp2_0$\u90fd\u4e3ak.\n\n\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9 $i$\uff0c\u5728 $m$ \u6570\u7ec4\u4e2d\u4e8c\u5206\u67e5\u627e\u5927\u4e8e\u7b49\u4e8e $dp1_i$ \u4e14\u5c0f\u4e8e\u7b49\u4e8e $dp2_i$ \u7684\u6570\u91cf.\n\n\u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define rep(x, l, r) for(int x = l; x <= r; x++)\nusing namespace std;\ntypedef long long ll;\n\nconst ll INF = 1 << 30;\nconst int MAXN = 1e7 + 5;\n\nint n, m, k, cnt, root1, root2;\nint head[MAXN], nxt[MAXN << 1], to[MAXN << 1];\nint a[MAXN];\nll dp1[MAXN], dp2[MAXN], c[MAXN];\n\nvoid addedge(int u, int v){\n\tcnt++;\n\tnxt[cnt] = head[u];\n\thead[u] = cnt;\n\tto[cnt] = v;\n}\n\nvoid add(int u, int v){\n\taddedge(u, v);\n\taddedge(v, u);\n\tc[u]++; c[v]++;\n}\n\nvoid dfs(int u, int fa){\n\tfor(int e = head[u]; e; e = nxt[e]){\n\t\tint v = to[e];\n\t\tif(v == fa) continue;\n\t\tdp1[v] = min(INF, dp1[u] * (c[u] - 1));//\u9632\u6b62\u70b8longlong\n\t\tdp2[v] = min(INF, (dp2[u] + 1) * (c[u] - 1) - 1); \n\t\tdfs(v, u);\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d%d\", &n, &m, &k);\n\trep(i, 1, m) scanf(\"%d\", &a[i]);\n\tsort(a + 1, a + m + 1);\n\tscanf(\"%d%d\", &root1, &root2);\n\tadd(0, root1);//\u5efa\u4e00\u4e2a0\u70b9\u4e0e\u4e24\u4e2a\u6839\u8282\u70b9\u8fde\u8fb9\n\tadd(0, root2);\n\trep(i, 1, n - 2){\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tadd(x, y);\n\t}\n\tdp1[0] = dp2[0] = k;\n\tdfs(0, -1);\n\tll ans = 0;\n\trep(i, 1, n)\n\t\tif(c[i] == 1){\n\t\t\tans += upper_bound(a + 1, a + m + 1, dp2[i]) - lower_bound(a + 1, a + m + 1, dp1[i]);\n\t\t}\n\tprintf(\"%lld\\n\", ans * k);//\u6700\u540e\u8bb0\u5f97\u8981\u4e58\u4e0ak\n\treturn 0;\n}\n```",
        "postTime": 1594347831,
        "uid": 149312,
        "name": "wze\u63cd\u6241\u4e86nm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3576 \u3010[POI2014]MRO-Ant colony\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u662f\u7528\u9664\u6cd5\u7684\u5411\u4e0b\u53d6\u6574\u505a\u7684\u3002\n\n\u9996\u5148\u66b4\u529b\u7684\u60f3\u6cd5\u5c31\u662f\uff0c\u6211\u4eec\u5bf9\u4e8e\u6811\u4e0a\u7684\u6bcf\u4e2a\u53f6\u5b50\uff0c\u90fdO(ng)\u6a21\u62df\u8681\u7fa4\u7684\u8d70\u6cd5\uff0c\u7136\u540e\u50cf\u9898\u76ee\u90a3\u6837\u8bf4\u7684\u5728\u5206\u53c9\u5904\u5411\u4e0b\u53d6\u6574\u4e00\u4e0b\u7136\u540e\u63a5\u7740\u8d70\u76f4\u5230\u8d70\u5230\u5173\u952e\u8fb9\u4e3a\u6b62\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u7684g\u4e2a\u6570\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u6211\u4eec\u4ec5\u4ec5\u53ea\u662f\u9700\u8981\u5224\u65ad\u8fd9\u73a9\u610f\u8d70\u554a\u8d70\u554a\u7ecf\u8fc7\u82e5\u5e72\u6b21\u5411\u4e0b\u53d6\u6574\u7684\u9664\u6cd5\u7136\u540e\u8d70\u5230\u4e86\u5173\u952e\u8fb9\u662f\u4e0d\u662f\u5c31\u5230\u4e86k\uff0c\u6211\u4eec\u5e72\u8106\u5c31\u628a\u8fd9\u73a9\u610f\u4f18\u5316\u6210\u4e00\u6761\u94fe\uff0c\u5c31\u662f\u628a\u8fd9\u4e2a\u5173\u952e\u8fb9\u7684\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u94a6\u5b9a\u4e3a\u6839\uff08\u5f53\u7136\uff0c\u5982\u679cn=2\u7684\u65f6\u5019\u54b1\u4eec\u7279\u5224\u4e00\u4e0b\u5c31\u884c\u4e86\uff09\uff0c\u7136\u540e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u5c31\u771f\u7684\u6210\u4e3a\u4e86\u53f6\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u5c31\u662f\u4ed6\u5230\u6839\uff08\u6216\u8005\u662f\u4ed6\u5230\u5173\u952e\u8fb9\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9\u5982\u679c\u540e\u8005\u662f\u4ed6\u7684\u7956\u5148\u7684\u8bdd\uff09\u7684\u4e00\u6bb5\u8def\u5f84\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf4\u6bcf\u5411\u4e0a\u8df3\u4e00\u4e2a\u7956\u5148\u90fd\u4f1a\u9664\u4ee5\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570-1\uff0c\u7136\u540e\u5411\u4e0b\u53d6\u6574\uff0c\u7136\u540e\u505a\u8fd9\u4e48\u591a\u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\n\n\u7531\u6b64\u6211\u4eec\u80fd\u60f3\u5230\u4ec0\u4e48\u5462\uff1f\n\n$\\lfloor\\frac{\\lfloor\\frac{n}{a}\\rfloor}{b}\\rfloor=\\lfloor\\frac{n}{ab}\\rfloor$\n\n\uff08\u8fd9\u4e2a\u516c\u5f0f\u76f8\u4fe1\u5f88\u591a\u4eba\u90fd\u77e5\u9053\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u7684\u53ef\u4ee5\u5217\u5f0f\u5b50\u63a8\u4e00\u4e0b\u8fd8\u662f\u4e0d\u96be\u63a8\u51fa\u6765\u7684\uff09\n\n\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u628a\u4ed6\u5230\u6839\uff08\u6216\u8005\u5173\u952e\u8fb9\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9\uff09\u7684\u8fde\u4e58\u79ef\u6c42\u51fa\u6765\uff0c\u8fd9\u4e1c\u897f\u53ef\u80fd\u5f88\u5927\uff0c\u4e0d\u8fc7\u8981\u662f\u7279\u522b\u5927\u7684\u8bdd\u505a\u4e2a\u9664\u6cd5\u80af\u5b9a\u4e5f\u4e0d\u4f1a\u9664\u5230k\uff0c\u6211\u4eec\u628a\u5b83\u8ddfinf\u53d6min\u5c31\u884c\u4e86\u3002\n\n\u90a3\u4e48\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\uff0c\u5bf9\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u6211\u8981\u77e5\u9053\u5728\u8fd9g\u4e2a\u6570\u91cc\uff0c\u6709\u591a\u5c11\u6570\u9664\u4ee5\u8fde\u4e58\u79ef\u5411\u4e0b\u53d6\u6574\u4e4b\u540e\u7684\u7ed3\u679c\u662fk\uff08\u628a\u8fd9\u73a9\u610f\u6700\u540e\u4e58\u4e2ak\u5c31\u662f\u7b54\u6848\u4e86\uff09\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u628a\u6570\u6392\u5b8c\u5e8f\u4e4b\u540e\u5bf9\u5e94\u7684\u6570\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e8c\u5206\u4e86\u3002\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\ninline int get(){\n\tint n=0;char c;while((c=getchar())||23333){\n\t\tif(c>='0'&&c<='9')break;if(c=='-')goto s;\n\t}n=c-'0';while((c=getchar())||23333){\n\t\tif(c>='0'&&c<='9')n=n*10+c-'0';else return(n);\n\t}s:while((c=getchar())||23333){\n\t\tif(c>='0'&&c<='9')n=n*10-c+'0';else return(n);\n\t}\n}\nint ints[1000001];int deg[1000001];\ntypedef struct _b{\n\tint dest;int nxt;\n}bian;bian memchi[2000001];int gn=1;int heads[1000001];ll dp[1000001]\uff1b\ninline void add(int s,int t){\n\tdeg[t]++;memchi[gn].dest=t;memchi[gn].nxt=heads[s];heads[s]=gn;gn++;\n}int root,taizi;//root\u662f\u6839\uff0ctaizi\uff08\u4e3a\u5565\u8981\u8d77\u8fd9\u540d\u5b57\u8bf7\u81ea\u884c\u4f53\u4f1a\u2026\u2026)\u662f\u6839\u7684\u4e00\u4e2a\u513f\u5b50\uff0c\u4ed6\u4eec\u90fd\u662f\u5173\u952e\u8fb9\u7684\u7aef\u70b9 \nvoid dfs(int pt,int baba){//dfs\u4ece\u4e0a\u5230\u4e0b\u9012\u63a8\u51fa\u8fde\u4e58\u79ef \n\tif(pt!=root){\n\t\tif(pt==taizi)dp[pt]=max(1,deg[pt]-1);\n\t\telse dp[pt]=min(1234567890ll,dp[baba]*max(1,deg[pt]-1));//\u6ce8\u610f\u8981\u548cinf\u53d6min\u4e0d\u7136\u4f1a\u7206\u6389 \n\t}for(register int i=heads[pt];i;i=memchi[i].nxt){\n\t\tif(memchi[i].dest==baba)continue;dfs(memchi[i].dest,pt);\n\t}\n}\nint main(){\n\tint n=get(),g=get(),k=get();for(register int i=1;i<=g;i++)ints[i]=get();sort(ints+1,ints+1+g);\n\tint rs,rt;for(register int i=1;i<n;i++){\n\t\tint s=get(),t=get();add(s,t);add(t,s);if(i==1)rs=s,rt=t;\n\t}if(deg[rs]!=1)root=rs,taizi=rt;else root=rt,taizi=rs;dp[root]=max(1,deg[root]-1);//\u522b\u5fd8\u4e86\u5224\u65ad\u53ea\u6709\u4e00\u6761\u8fb9\u7684\u60c5\u51b5 \n\tll tot=0;dfs(root,0);\n\tfor(register int i=1;i<=n;i++){\n\t\tif(deg[i]==1){\n\t\t\tif(ints[g]/dp[i]<k)continue;if(ints[1]/dp[i]>k)continue;\n\t\t\tint ans=-1,l=1,r=g;while(l<=r){//\u4e8c\u5206\u51fa\u7b54\u6848\u533a\u95f4 \n\t\t\t\tint mid=(l+r)>>1;if(ints[mid]/dp[i]>=k)ans=mid,r=mid-1;else l=mid+1;\n\t\t\t}if(ans!=-1){\n\t\t\t\tif(ints[ans]/dp[i]!=k)continue;int rl=ans;l=1,r=g;while(l<=r){\n\t\t\t\t\tint mid=(l+r)>>1;if(ints[mid]/dp[i]<=k)ans=mid,l=mid+1;else r=mid-1;\n\t\t\t\t}tot+=(ans-rl+1);\n\t\t\t}\n\t\t}\n\t}tot*=k;cout<<tot<<endl;\n\treturn(0);\n}\n```",
        "postTime": 1539485193,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3576 \u3010[POI2014]MRO-Ant colony\u3011"
    },
    {
        "content": "- \u8fd9\u4e2a\u9898\u4ece\u53f6\u5b50\u8282\u70b9\u53bb\u7b97\u7684\u8bdd\u663e\u7136\u5f88\u56f0\u96be\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u98df\u8681\u517d\u6240\u5728\u7684\u4e24\u4e2a\u70b9\u5f00\u59cb\u5012\u7740\u641e\u3002\n\nminn\u548cmaxn\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u548c\u6700\u5c11\u6709\u591a\u5c11\u4e2a\u8682\u8681\u624d\u80fd\u8ba9\u98df\u8681\u517d\u6070\u597d\u5403\u5230k\u53ea\u3002\n\n- \u7136\u540e\uff0c\u5206\u522b\u4ee5\u8fd9\u4e24\u4e2a\u70b9\u4e3a\u6839\u8282\u70b9\uff0cdfs\u4e00\u4e0b\u6c42\u51fa\u6240\u6709\u7684minn\u548cmaxn\u3002\n\n- \u63a5\u7740\uff0c\u4e8c\u5206\u7b54\u6848\uff0c\u6c42\u4e00\u4e0b\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9,g\u7fa4\u8682\u8681\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u8682\u8681\u7684\u7fa4\u6570\u3002\n\n- \u6700\u540e\uff0c\u7fa4\u6570\\*k\u5373\u4e3a\u6240\u6c42\u3002\n\n**\u522b\u5fd8\u4e86\u5f00long long(\u256f\u2035\u25a1\u2032)\u256f\ufe35\u253b\u2501\u253b**\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define MAXN 1000001\nusing namespace std;\nint n,g,K;\nint s,t,tot;\nlong long ans;\nint outo[MAXN],dad[MAXN];\nint to[MAXN],net[MAXN],head[MAXN];\nlong long m[MAXN],minn[MAXN],maxn[MAXN];\nvoid add(int u,int v){\n    to[++tot]=v;net[tot]=head[u];head[u]=tot;\n    to[++tot]=u;net[tot]=head[v];head[v]=tot;\n}\nvoid dfs(int now){\n    for(int i=head[now];i;i=net[i])\n        if(dad[now]!=to[i]){\n            dad[to[i]]=now;\n            outo[now]++;\n        }\n    for(int i=head[now];i;i=net[i])\n        if(dad[now]!=to[i]){\n            minn[to[i]]=minn[now]*outo[now];\n            maxn[to[i]]=(maxn[now]+1)*outo[now]-1;\n            maxn[to[i]]=min(maxn[to[i]],m[g]);\n            if(minn[to[i]]<=m[g])\n                dfs(to[i]);\n        }\n}\nlong long cal(long long  x){\n    int l=1,r=g,bns=0;\n    while(l<=r){\n        int mid=(l+r)/2;\n        if(m[mid]<x){\n            bns=max(bns,mid);\n            l=mid+1;\n        }\n        else r=mid-1;\n    }\n    return bns;\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&g,&K);\n    for(int i=1;i<=g;i++)    scanf(\"%d\",&m[i]);\n    sort(m+1,m+1+g);\n    scanf(\"%d%d\",&s,&t);\n    for(int i=2;i<n;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n    }\n    minn[s]=maxn[s]=minn[t]=maxn[t]=K;\n    dfs(s);\n    dfs(t);\n    for(int i=1;i<=n;i++)\n        if(!outo[i])\n            ans+=cal(maxn[i]+1)-cal(minn[i]);\n    cout<<ans*K;\n}\n```",
        "postTime": 1505215739,
        "uid": 21719,
        "name": "\u6ca7\u6f9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3576 \u3010[POI2014]MRO-Ant colony\u3011"
    },
    {
        "content": "\u8fd9\u9898\u633a\u65b0\u9896\u7684\uff0c\u80fd\u953b\u70bc\u601d\u7ef4\u80fd\u529b\u3002\n\n\u76f8\u4fe1\u4e0d\u5c11\u4eba\u8ddf\u6211\u4e00\u6837\uff0c\u7b2c\u4e00\u6b21\u770b\u5230\u9898\u90fd\u4ee5\u4e3a\u76f4\u63a5\u6a21\u62df\uff0c\u627e\u5230\u6bcf\u4e2a\u51fa\u5165\u53e3\uff0c\u7136\u540e\u6a21\u62df\u6bcf\u7fa4\u8682\u8681\u7684\u884c\u52a8\u5c31\u597d\u4e86\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c$1\\le n,g\\le10^6$\u3002\u771f\u8981\u8fd9\u4e48\u505a\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2g)$\uff0c\u4e16\u754c\u672b\u65e5\u90fd\u8dd1\u4e0d\u5b8c\u3002\u3002\u3002\n\n\u56e0\u4e3a\u8681\u7fa4\u6700\u591a\u53ef\u4ee5\u6709 $(n-1)\\times g$ \u7fa4\uff08\u5373\u6709 $n-1$ \u4e2a\u70b9\u8fde\u5411\u540c\u4e00\u4e2a\u70b9\uff09\uff0c\u4e0d\u53ef\u80fd\u4e00\u4e00\u679a\u4e3e\uff0c\u4f46\u662f\u98df\u8681\u517d\u6240\u5728\u7684\u8fb9\uff08\u53ef\u4ee5\u770b\u4f5c\u8682\u8681\u8981\u53bb\u7684\u7ec8\u70b9\uff0c\u4ee5\u4e0b\u7b80\u79f0\u7ec8\u70b9\u8fb9\uff09\u53ea\u6709\u4e00\u6761\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4ece\u7ec8\u70b9\u8fb9\u5012\u7740\u5f80\u56de\u63a8\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u904d\u5386\u6574\u4e2a\u6811\u4e00\u6b21\u5c31\u884c\u4e86\uff01\n\n\u641c\u7d22\u6bcf\u4e2a\u70b9\u5f53\u7136\u662f\u66f4\u65b9\u4fbf\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u7ec8\u70b9\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u7b97\u4e00\u6b21\u3002\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e24\u4e2a\u91cf $l_i,r_i$\uff0c\u5206\u522b\u4e3a\u4ece $i$ \u70b9\u8d70\u5230\u7ec8\u70b9\u8fb9\u7684\u65b9\u5411\uff08\u6ce8\u610f\u4e0d\u662f\u8d70\u5230\u7ec8\u70b9\u8fb9\uff0c\u800c\u662f\u8d70\u5411\u7ec8\u70b9\u8fb9\u7684\u65b9\u5411\uff09\u7684\u8682\u8681\u6700\u5c11\u548c\u6700\u591a\u6709\u591a\u5c11\u3002\u8bbe $x$ \u4e3a\u5f53\u524d\u7684\u70b9\uff0c$y$ \u4e3a $x$ \u8981\u8f6c\u79fb\u53bb\u7684\u4e00\u4e2a\u70b9\uff0c$size_x$ \u4e3a $x$ \u8fde\u7684\u8fb9\u6570\uff0c\u5219\u6709\u5982\u4e0b\u7684\u8f6c\u79fb\u5f0f\uff1a\n\n$$l_y=l_x\\times(size_x-1)$$\n\n$$r_y=r_x\\times(size_x-1)+size_x-2$$\n\n\u610f\u601d\u5c31\u662f\uff0c$l_y$ \u4e2a\u8682\u8681\u5728\u5168\u90e8\u6ca1\u6709\u6d88\u5931\uff08\u5373\u88ab $size_x-1$ \u6574\u9664\uff09\u7684\u60c5\u51b5\u4e0b\u5e73\u5747\u5206\u4e3a $size_x-1$ \u4efd\uff0c\u53d8\u4e3a\u4e86 $l_x$ \u4e2a\u8682\u8681\uff0c\u5219\u5012\u63a8\u56de\u53bb\u5c31\u662f $l_x\\times (size_x-1)$\uff1b$r_y$ \u4e2a\u8682\u8681\u5728\u6d88\u5931\u5730\u5c3d\u53ef\u80fd\u591a\uff08\u5373\u6d88\u5931\u4e86 $size_x-1-1$ \u4e2a\uff09\u7684\u60c5\u51b5\u4e0b\u5e73\u5747\u5206\u4e3a $size_x-1$ \u4efd\uff0c\u53d8\u4e3a\u4e86 $r_x$ \u4e2a\u8682\u8681\uff0c\u5012\u63a8\u56de\u53bb\u5c31\u662f $r_x\\times(size_x-1)+size_x-2$\u3002\u663e\u7136\u8fd9\u6837\u7b97\u7684\u4e00\u5b9a\u662f $y$ \u70b9\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002\n\n\u6700\u540e\uff0c\u5728\u6bcf\u4e2a\u51fa\u5165\u53e3 $i$ \u5904\uff0c\u8981\u627e\u5230\u6709\u51e0\u7fa4\u8682\u8681\u5927\u5c0f\u5728 $l_i\\sim r_i$ \u4e4b\u95f4\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5148\u628a\u8682\u8681\u5927\u5c0f\u6392\u5e8f\uff0c\u518d\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\uff08STL \u7684 lower_bound \u6216 upper_bound\uff09\u5f97\u5230\u3002\u7b97\u51fa\u6709\u51e0\u7fa4\u8682\u8681\u4e4b\u540e $\\times k$\uff08\u56e0\u4e3a\u6bcf\u4e2a\u5927\u5c0f\u6ee1\u8db3\u8981\u6c42\u7684\u8682\u8681\u7fa4\u91cc\u9762\u90fd\u6709 $k$ \u53ea\u88ab\u5403\u4e86\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#define int long long\n#define lb lower_bound\n#define ub upper_bound\nusing namespace std;\nint n,m,k,p1,p2,ans;\nint a[1000010],l[1000010],r[1000010];\nvector<int>v[1000010];\nvoid dfs(int x,int last)\n{\n    for(auto y:v[x])\n        if(y!=last)\n        {\n            l[y]=l[x]*(v[x].size()-1);\n            r[y]=r[x]*(v[x].size()-1)+v[x].size()-2;\n            dfs(y,x);\n        }\n}\nsigned main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin>>n>>m>>k;\n    for(int i=1;i<=m;i++)cin>>a[i];\n    sort(a+1,a+m+1);\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n        cin>>x>>y;\n        if(i==1)p1=x,p2=y;\n        v[x].push_back(y);\n        v[y].push_back(x);\n    }\n    l[p1]=r[p1]=l[p2]=r[p2]=k;\n    dfs(p1,p2);\n    dfs(p2,p1);\n    for(int i=1;i<=n;i++)\n        if(v[i].size()==1)\n            ans+=(ub(a+1,a+m+1,r[i])-lb(a+1,a+m+1,l[i]));\n    cout<<ans*k<<endl;\n    return 0;\n}\n```",
        "postTime": 1679833246,
        "uid": 554145,
        "name": "Netherite_sword_666",
        "ccfLevel": 5,
        "title": "P3576 \u9898\u89e3"
    },
    {
        "content": "**\u601d\u8def\uff1a**\n\n\u5bf9\u4e8e\u7ed9\u51fa\u7684\u8fd9\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u4e0a\u90fd\u6709 $g$ \u4e2a\u8681\u7fa4\uff0c\u7136\u540e\u6811\u7684\u8282\u70b9\u8303\u56f4 $\\leq 1e6$ \uff0c\u90a3\u6211\u4eec\u80af\u5b9a\u4e0d\u53ef\u80fd\u90fd\u8dd1\u4e00\u904d\uff0c\u8003\u8651\u600e\u4e48\u4f18\u5316\u3002\n\n\u5f88\u660e\u663e\u5bf9\u4e8e\u4efb\u610f\u7684\u6570\u90fd\u6ee1\u8db3\uff0c\u5148\u9664\u4ee5\u4e00\u4e2a\u6570\uff08\u4e0b\u53d6\u6574\uff09\u518d\u9664\u4ee5\u53e6\u4e00\u4e2a\u6570\uff08\u4e0b\u53d6\u6574\uff09\uff0c\u548c\u9664\u4ee5\u8fd9\u4e24\u4e2a\u6570\u7684\u4e58\u79ef\uff08\u4e0b\u53d6\u6574\uff09\u7684\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\u3002\n\n\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6765\u5bf9\u8fd9\u9053\u9898\u6c42\u89e3\u3002\n\n\u4e00\u4e2a\u8681\u7fa4\u53ea\u662f\u7ecf\u8fc7\u540c\u4e00\u6761\u8fb9\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4ed6\u7ecf\u8fc7\u4e86\u98df\u8681\u517d\u6240\u5728\u7684\u8fb9\u6ca1\u6709\u88ab\u5403\u6389\uff0c\u4ed6\u5c31\u4e0d\u53ef\u80fd\u518d\u88ab\u5403\u6389\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06\u6574\u4e2a\u6811\u6839\u636e\u98df\u8681\u517d\u6240\u5728\u7684\u8fb9\u7684\u4e24\u4e2a\u70b9\uff0c\u5c06\u6574\u68f5\u6811\u4e00\u5206\u4e3a\u4e8c\uff0c\u4ee5\u90a3\u4e24\u4e2a\u8282\u70b9\u5206\u522b\u4e3a\u6839\u5bf9\u90a3\u534a\u68f5\u6811\u8fdb\u884c\u5904\u7406\u3002\n\n\u6811\u4e0a\u4e24\u70b9\u7684\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u4e00\u4e2a\u8681\u7fa4\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u80af\u5b9a\u4f1a\u5206\u6210\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570 $-1$ \u7ec4\u8682\u8681\uff0c\u800c\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u8d70\u5230\u98df\u8681\u517d\u6240\u5728\u7684\u8fb9\u7684\u90a3\u4e00\u7fa4\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ece\u90a3\u534a\u68f5\u6811\u7684\u6839\u5f00\u59cb\uff0c\u4f9d\u6b21\u5411\u4ed6\u7684\u513f\u5b50\u53bb\u4e0b\u653e\u6807\u8bb0\uff0c\u8868\u793a\u8fd9\u7fa4\u8682\u8681\u6700\u540e\u4f1a\u5206\u6210\u51e0\u7ec4\u3002\n\n\n**\u8bbe\uff1a** $f_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u70b9\u7684\u6807\u8bb0\uff0c $deg_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u70b9\u7684\u5ea6\u6570\u3002\n\n\u90a3\u8f6c\u79fb\u5c31\u957f\u8fd9\u6837 $f_{son}=f_{fa}\\times (deg_{fa}-1)$ \u3002\n\n\u90a3\u4e48\u5f53\u6807\u8bb0\u6253\u5230\u4e86\u5ea6\u6570\u4e3a $1$ \u7684\u70b9\u4e5f\u5c31\u662f\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5bf9\u8fd9 $g$ \u7fa4\u8682\u8681\u8fdb\u884c\u5904\u7406\uff0c\u65e2\u7136\u662f\u4e0b\u53d6\u6574\uff0c\u90a3\u4e48\u80af\u5b9a\u4f1a\u6709\u5f88\u591a\u6570\u4e0b\u53d6\u6574\u5206\u6210 $k$ \uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5148\u5bf9\u8fd9\u5199\u8681\u7fa4\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4e8c\u5206\u67e5\u8be2\uff0c\u67e5\u8be2\u7684\u8303\u56f4\u5c31\u662f $l : f_x \\times k\\ \\ \\ r : f_x\\times (k+1)-1$ \uff0c\u90a3\u4e48\u67e5\u8be2\u5230\u7684\u8303\u56f4\u5c31\u662f\u6ee1\u8db3\u6761\u4ef6\u7684\u8681\u7fa4\u6570\u91cf\uff0c\u4e24\u4e2a\u76f8\u51cf\u5f97\u5230\u7b54\u6848\u5c31\u884c\u3002\n\n**\u6ce8\u610f\uff1a**\n\n\u53ef\u4ee5\u63d2\u5165\u4e24\u4e2a\u54e8\u5175\u9632\u6b62\u4e8c\u5206\u70b8\u6389\uff0c\u4f46\u54e8\u5175\u7684\u5927\u5c0f\u4e00\u5b9a\u8981\u591f\u5927\u624d\u884c\uff01\uff01\uff01\n\n\u8d34\u4e2a\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define chkmax(x,y) (x)=(x>y)?(x):(y)\n#define chkmin(x,y) (x)=(x<y)?(x):(y)\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\ninline void write(int x){\n\tstatic int sta[42];int top=0;\n\tif(x<0) putchar('-'),x=-x;\n\tdo{sta[++top]=x%10,x/=10;}while(x);\n\twhile(top) putchar(sta[top--]+'0');\n\treturn ;\n}\nint n,g,k,as,ae,ans;\nint head[2000010],ver[4000010],to[4000010],tot;\nint f[2000010],ant[2000010],deg[2000010];\ninline void add(int x,int y){\n\tver[++tot]=y;\n\tto[tot]=head[x];\n\thead[x]=tot;\n}\ninline int searchl(int val){\n\tint l=0,r=g+1,res;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(val<=ant[mid]) res=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\treturn res;\n}\ninline int searchr(int val){\n\tint l=0,r=g+1,res;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(val<ant[mid]) res=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\treturn res;\n}\nvoid dfs(int x,int fa){\n\tint cnt=0,l,r;\n\tif(deg[x]==1){\n\t\tl=searchl(f[x]*k);//\u6211\u7528\u7684\u624b\u5199\u4e8c\u5206\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u81ea\u5e26\u7684lowerbound\u548cuppperbound\n\t\tr=searchr(f[x]*(k+1)-1);\n\t\tans+=(r-l);\n\t\treturn ;\n\t}\n\tfor(int i=head[x];i;i=to[i]){\n\t\tint y=ver[i];\n\t\tif(y==fa||y==as||y==ae) continue;\n\t\tf[y]=f[x]*(deg[x]-1);\n\t\tdfs(y,x);\n\t}\n}\nsigned main(){\n\tn=read(),g=read(),k=read();\n\tfor(int i=1;i<=g;i++) ant[i]=read();sort(ant+1,ant+1+g);ant[0]=-0x7fffffffffffffff,ant[g+1]=0x7fffffffffffffff;//\u6392\u5e8f\u52a0\u54e8\u5175\n\tfor(int i=1,x,y;i<n;i++){\n\t\tx=read(),y=read();\n\t\tdeg[x]++,deg[y]++;\n\t\tif(i==1) as=x,ae=y;//\u627e\u51fa\u98df\u8681\u517d\u7684\u70b9\n\t\tadd(x,y),add(y,x);\n\t}\n\tf[as]=f[ae]=1;\n\tdfs(as,0),dfs(ae,0);//\u5206\u522bdfs\u5904\u7406\n\twrite(ans*k);//\u524d\u9762\u627e\u7684\u662f\u51e0\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\uff0c\u6240\u4ee5\u6700\u540e\u8981\u4e58 k\n\treturn 0;\n}\n``\n\n\n\n\n",
        "postTime": 1626129487,
        "uid": 113507,
        "name": "Max_QAQ",
        "ccfLevel": 8,
        "title": "P3576 [POI2014]MRO-Ant colony"
    },
    {
        "content": "\u6765\u81ea\u6211\u7684\u535a\u5ba2\uff1a[http://www.cnblogs.com/z360/p/7523150.html](http://www.cnblogs.com/z360/p/7523150.html)\n\n\u6811\u5f62dp\n\n\n\uff2f(\u2267\u53e3\u2266)\uff2f\u505a\u4e86\u4e00\u665a\u4e0a\u3001\u3001\u3001\n\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u5f88\u4e25\u8083\u7684\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u4ece\u5b50\u8282\u70b9\u5f00\u59cb\u505a\u7684\u8bdd\u4f1a\u975e\u5e38\u96be\u5904\u7406\uff08\u53cd\u6b63\u849f\u84bb\u8868\u793a\u6211\u4e0d\u4f1a\u3001\u3001\u3001\uff09\n\n\n\u65e2\u7136\u6b63\u7740\u4e0d\u4f1a\uff0c\u6211\u4eec\u5c31\u5012\u7740\u641e\u5427\u3001\u3001\u5176\u6b21\u4ed6\u8bf4\u7684\u662f\u901a\u8fc7\u4e00\u6761\u8fb9\u7684\u6570\u91cf\u4e3ak\uff0c\u8fd9k\u53ea\u8682\u8681\u90fd\u4f1a\u88ab\u5403\u6389\u3002\u7136\u800c\u6211\u4eec\u5982\u679c\u76f4\u63a5\u7528\u8fb9\u6765\u8fdb\u884c\u8fd0\u7b97\u7684\u8bdd\uff0c\u65e2\u7136\u8fd9\u6837\u6211\u4eec\u76f4\u63a5\u5c06\u8fb9\u6539\u4e3a\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u4ee5\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u5c06\u539f\u6765\u7684\u6811\u5904\u7406\u6210\u4e24\u68f5\u6811\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e24\u68f5\u6811\u4e0a\u4e71\u641e\u4e86\n\n\n\u5982\u56fe\u6240\u793a\uff1a\u57281~2\u8fd9\u6761\u8fb9\u4e0a\u5982\u679c\u6709k\u53ea\u8682\u8681\u7ecf\u8fc7\u7684\u65f6\u5019\u8fd9k\u53ea\u8682\u8681\u4f1a\u88ab\u5403\u6389\n\n\n\u6211\u4eec\u5c06\u4e0a\u9762\u7684\u4e24\u68f5\u6811\u62bd\u79bb\u6210\u4e24\u9897\u4e00\u9897\u4ee51\u4e3a\u6839\u8282\u70b9\uff0c\u4e00\u68f5\u4ee52\u4e3a\u6839\u8282\u70b9\u3002\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u9897\u6811\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5f80\u4e0b\u8fdb\u884c\u641c\u7d22\uff0c\u66f4\u65b0\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u4e0e\u4ed6\u76f8\u8fde\u51fa\u53bb\u7684\u8282\u70b9\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u5c06\u4e0e\u4ed6\u76f8\u8fde\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u4e3a\u5f53\u524d\u8282\u70b9\u3002\n\n\n\u6211\u4eec\u770b\u4e0a\u9762\u7684\u56fe\uff0c\u5982\u679c\u8981\u662f\u8682\u8681\u7ecf\u8fc71~2\u8fd9\u6761\u8fb9\u4e0a\u7684\u65f6\u5019\u8682\u8681\u7684\u6570\u91cf\u8fbe\u5230k\u65f61\u53f7\u8282\u70b9\u00b7\u4e0e2\u597d\u8282\u70b9\u5904\u7684\u8682\u8681\u6570\u91cf\u4e5f\u5c31\u8981\u4e3ak\u3002\n\n\n\u7136\u540e\u6211\u4eec\u5728\u4ece\u8fd9\u4e2a\u5404\u8282\u70b9\u5012\u7740\u8ba1\u7b97\u4ed6\u4e0b\u9762\u7684\u8282\u70b9\u8682\u8681\u7684\u6570\u91cf\n\n\n\u6211\u4eec\u77e5\u9053\u8fdb\u5165\u8682\u8681\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u5b50\u8282\u70b9\uff0c\u7136\u540e\u6bcf\u4e00\u4e2a\u5b50\u8282\u70b9\u5f80\u5176\u4ed6\u7684\u5206\u652f\u90a3\u5e73\u5206\u8682\u8681\uff0c\u4ed6\u8bc4\u5206\u51fa\u6765\u7684\u8682\u8681\u4e00\u5b9a\u662f\u6709\u4e00\u6ce2\u8981\u8fdb\u5165\u4ed6\u7684\u7236\u4eb2\u8282\u70b9\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u4ed6\u7684\u7236\u4eb2\u8282\u70b9\u7684\u8682\u8681\u6570\u76ee\u63a8\u51fa\u5f53\u524d\u8282\u70b9\u7684\u8682\u8681\u6570\u76ee\uff0c\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u662f\u4e0d\u53ef\u80fd\u6c42\u51fa\u51c6\u786e\u503c\u7684\uff0c\u56e0\u4e3a\u4ed6\u5728\u5e73\u5206\u7684\u65f6\u5019\u662f\u4e0b\u53d6\u6574\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u6c42\u51fa\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u8682\u8681\u6570\u76ee\u7684\u8303\u56f4\u3002\n\n\n\u5b50\u8282\u70b9\u7684\u8682\u8681\u7684\u6570\u76ee\u7b49\u4e8e\u5b83\u7684\u7236\u8282\u70b9\u7684\uff1b\u8fde\u51fa\u53bb\u7684\u8fb9\u7684\u6761\u6570\\*\u7236\u8282\u70b9\u7684\u8682\u8681\u4e2a\u6570\u3002\n\n\n\u770b\u8fd9\u4e2a\u56fe\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u89c4\u5f8b\u5b83\u7684\u7236\u8282\u70b9\u8fde\u51fa\u53bb\u7684\u8fb9\u7684\u6761\u6570\u6b63\u597d\u7b49\u4e8e\u5b83\u7684\u7236\u8282\u70b9\u7684\u5165\u8bfb\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8fdb\u884cdfs\u7684\u65f6\u5019\u5904\u7406\u5904\u6bcf\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u4ee5\u53ca\u8be5\u70b9\u7684\u5165\u8bfb\u3001\n\n\n\u8682\u8681\u5e73\u5206\uff0c\u5b50\u8282\u70b9\u6700\u5c11\u7684\u8682\u8681\u7684\u4e2a\u6570\u4e3a\u4ed6\u7236\u4eb2\u8282\u70b9\u7684\u8682\u8681\u7684\u6570\u91cf\\*\u7236\u4eb2\u8282\u70b9\u7684\u5165\u8bfb\uff0c\u4e5f\u5c31\u662f\u8bf4\u6ca1\u6709\u8682\u8681\u88ab\u6d88\u706d\u3002\u6700\u591a\u7684\u8682\u8681\u7684\u6570\u91cf\u4e3a\u8fd8\u5dee\u4e00\u4e2a\u8682\u8681\u5c31\u53ef\u4ee5\u8ba9\u6bcf\u4e00\u4e2a\u5206\u652f\u5728\u591a\u5206\u4e00\u53ea\u8682\u8681\u4e86\uff0c\u6781\u4e3amaxn[t]=(sum[now]+1)\\*out[now]-1\n\n\n\u7136\u540edfs\u7ed3\u675f\u7684\u6761\u4ef6\u7684\u4e3a\u4ed6\u5df2\u7ecf\u641c\u7d22\u5230\u6700\u540e\u4e00\u5c42\u5b50\u8282\u70b9\u4e86\u3002\u5f53minn[to[i]]<=m[g]\u662f\u8bf4\u660e\u8fd8\u6ca1\u6709\u5230\u8fbe\u6839\u8282\u70b9\u3002\n\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u5904\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019\u7684\u8682\u8681\u7684\u6700\u591a\u6570\u91cf\u8ddf\u6700\u5c11\u6570\u91cf\uff0c\u7136\u540e\u5728\u5224\u65ad\u6709\u591a\u5c11\u7ec4\u8682\u8681\u6ee1\u8db3\u8981\u6c42\u3002\n\n\n\u6700\u540e\u7684\u53ef\u4ee5\u5403\u5230\u7684\u8682\u8681\u7684\u6570\u91cf\u4e3ak\\*\u6ee1\u8db3\u6761\u4ef6\u7684\u8682\u8681\u7684\u7ec4\u6570\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#define N 1100000\n#define ll long long\nusing namespace std;\nint n,g,k,x,y,sx,sy,tot;\nint fa[N],in[N],head[N];\nll s[N],maxn[N],minn[N],ans;\nint read()\n{\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1; ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0'; ch=getchar();}\n    return x*f;\n}\nstruct Edge\n{\n    int to,from,next;\n}edge[N<<1];\nint add(int x,int y)\n{\n    tot++;\n    edge[tot].to=y;\n    edge[tot].next=head[x];\n    head[x]=tot;\n}\nint dfs(int now)\n{\n    for(int i=head[now];i;i=edge[i].next)\n    {\n        int t=edge[i].to;\n        if(fa[now]!=t)\n        {\n            fa[t]=now;\n            in[now]++;\n         } \n    }\n    for(int i=head[now];i;i=edge[i].next)\n    {\n        int t=edge[i].to;\n        if(fa[now]!=t)\n        {\n            minn[t]=minn[now]*in[now];\n            maxn[t]=(maxn[now]+1)*in[now]-1;\n            maxn[t]=min(maxn[t],s[g]);\n            if(minn[t]<=s[g]) dfs(t);\n        }\n    }\n}\nll erfen(ll x)\n{\n    int l=1,r=g,ans1=0;\n    while(l<=r)\n    {\n        int mid=(l+r)>>1;\n        if(s[mid]<x)\n        {\n            ans1=mid;\n            l=mid+1;\n        }\n        else r=mid-1;\n    }\n    return ans1;\n}\nint main()\n{\n    n=read(),g=read(),k=read();\n    for(int i=1;i<=g;i++) scanf(\"%lld\",&s[i]);\n    sort(s+1,s+1+g);\n    sx=read(),sy=read();\n    for(int i=2;i<n;i++)\n    {\n        x=read(),y=read();\n        add(x,y),add(y,x);\n    }\n    minn[sx]=minn[sy]=maxn[sx]=maxn[sy]=k;\n    dfs(sx),dfs(sy);\n    for(int i=1;i<=n;i++)\n     if(!in[i])\n      ans+=erfen(maxn[i]+1)-erfen(minn[i]);\n    printf(\"%lld\",ans*k);\n    return 0;\n}\n```",
        "postTime": 1505464984,
        "uid": 43615,
        "name": "QwQ_operator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3576 \u3010[POI2014]MRO-Ant colony\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3576)\n\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\uff1a\n\n\u6811\u4e0a\u95ee\u9898\uff0c\u5bb9\u6613\u60f3\u5230\u6811\u5f62 $dp$\n\n\u8bbe $dp_{i}$ \u8868\u793a\u6307\u5b9a\u8fb9\u5230\u7b2c $i$ \u6761\u8fb9\u8981\u5206\u53c9\u591a\u5c11\uff1f\n\n\u5bb9\u6613\u5f97\u5230 \n\n$$dp_v = dp_u \\times (num_u - 1)$$\n\n\u5176\u4e2d $num_i$ \u4e3a\u8282\u70b9 $i$ \u7684\u5ea6\u3002\n\n\u4f46\u8fd9\u6837\u5728\u7b97\u7ed3\u679c\u65f6\u4f1a\u8d85\u65f6\u3002\n\n\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u5462\uff1f~~\u6ca1\u6709~~\n\n\u663e\u7136\uff0c\u4f1a\u88ab\u5403\u4e00\u5b9a\u662f\u6709\u8303\u56f4\u7684\uff0c\n\n\u90a3\u4e48\u4e0d\u59a8\u8bbe $dp_{i,0/1}$ \u8868\u793a\u4ece $i$ \u8282\u70b9\u8d70\u5230\u6307\u5b9a\u8fb9\u4f1a\u88ab\u5403\u7684\u4e0a\u754c $/$ \u4e0b\u754c\uff0c\n\n\u5373\u4ece $i$ \u51fa\u53d1 $p$ \u4e2a\u8682\u8681\uff0c\n\n\u82e5 $dp_{i, 0} \\leq p \\leq dp_{i, 1}$\uff0c\u5219\u5230\u6307\u5b9a\u8fb9\u65f6\u4f1a\u6709 $k$ \u53ea\u8682\u8681\uff0c\n\n\u82e5\u4e0d\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\uff0c\u5219\u4e0d\u4f1a\u88ab\u5403\u3002\n\n\u5bb9\u6613\u5f97\u5230\uff1a\n\n$$dp_{v, 0} = dp_{u, 0} \\times (num_u - 1)$$\n\n$$dp_{v, 1} = (dp_{v, 0} + 1) \\times (num_u - 1) - 1 $$\n\n\u65e2\u7136\u5df2\u7ecf\u5f97\u5230\u4e86\u6bcf\u4e2a\u70b9\u7684\u4e0a\u4e0b\u754c\uff0c\u90a3\u51fa\u5165\u53e3\u7684\u4e0a\u4e0b\u754c\u4e5f\u5f97\u5230\u4e86\uff0c~~\u5e9f\u8bdd~~ \uff01\n\n\u6700\u7ec8\u5c31\u53ef\u4ee5\u4e8c\u5206\u67e5\u627e\u5f97\u51fa\u7ed3\u679c\n\n\u590d\u6742\u5ea6 $O (n log (g))$\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6307\u5b9a\u8fb9 $(x, y)$ \u62c6\u5206\u6210 $(0, x)$ \u4e0e $(0, y)$\uff0c$0$ \u53f7\u8282\u70b9\u5f53\u4f5c\u6811\u7684\u6839\u8282\u70b9\uff0c\u4e14\u4e0a\u6587\u7684\u6307\u5b9a\u8fb9\u5230 $i$ \u53f7\u8282\u70b9\u5c31\u662f $0$ \u53f7\u8282\u70b9\u5230 $i$ \u53f7\u8282\u70b9\u3002\n\n\u5177\u4f53\u8bf7\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define int long long // \u8981\u5f00 long long\n\nconst int maxn = 1e6 + 10;\nstruct node {\n    int to, nxt;\n} edge[maxn >> 1];\nint cnt, head[maxn]; // \u94fe\u5f0f\u524d\u5411\u661f\nint n, m, k, ans = 0, a[maxn], num[maxn], dp[maxn][2];\n\nvoid add (int u, int v) {\n    cnt ++;\n    edge[cnt].to = v;\n    edge[cnt].nxt = head[u];\n    head[u] = cnt;\n} // \u52a0\u8fb9\n\nvoid add_edge (int u, int v) {\n    add (u, v); add (v, u);\n    num[u] ++; num[v] ++;\n} // \u522b\u5fd8\u4e86\u66f4\u65b0 num\n\nvoid dfs (int u, int fa) {\n    dp[u][0] = dp[fa][0] * (num[fa] - 1);\n    dp[u][1] = (dp[fa][1] + 1) * (num[fa] - 1) - 1;\n    for (int i = head[u]; i; i = edge[i].nxt) {\n        int v = edge[i].to;\n        if (v == fa) continue;\n        dfs (v, u);\n    }\n} // \u6811\u5f62 dp\n\nsigned main() {\n    scanf (\"%lld%lld%lld\", &n, &m, &k);\n    for (int i = 1; i <= m; ++i) {\n        scanf (\"%lld\", &a[i]);\n    }\n    sort (a + 1, a + m + 1); // \u4e0d\u8981\u5fd8\u8bb0\u6392\u5e8f\u54e6\uff01\n    \n    int x, y; scanf (\"%lld%lld\", &x, &y); x ++; y ++;\n    add_edge (1, x); add_edge (1, y);\n    for (int i = 2; i < n; ++i) {\n        int u, v; scanf (\"%lld%lld\", &u, &v); u ++; v ++;\n        add_edge (u, v);\n    }\n    dp[1][0] = dp[1][1] = k;\n    dfs (x, 1); dfs (y, 1);\n    \n    for (int i = 2; i <= n + 1; ++i) {\n        if (num[i] == 1) {\n            ans += upper_bound (a + 1, a + m + 1, dp[i][1]) - lower_bound (a + 1, a + m + 1, dp[i][0]); // \u4e0a\u754c\u67e5\u627e\u4e0e\u4e0b\u754c\u67e5\u627e\n        }\n    }\n    printf (\"%lld\", ans * k); // \u4e58 k \u522b\u5fd8\u4e86\n    return 0;\n}\n```\n",
        "postTime": 1632541237,
        "uid": 186091,
        "name": "wzy2021",
        "ccfLevel": 6,
        "title": "P3576 \u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u9996\u5148\u89c2\u5bdf\u6027\u8d28\uff0c\u5bf9\u4e8e\u4e00\u7fa4\u8682\u8681\uff0c\u5176\u8d70\u8fc7\u7684\u8def\u4e0d\u4f1a\u5728\u8d70\uff0c\u4e5f\u5c31\u662f\u8bf4\u8def\u5f84\u552f\u4e00\uff0c\u8fd9\u6837\u6bcf\u4e00\u4e2a\u53f6\u5b50\u5230\u98df\u8681\u517d\u6240\u5728\u8fb9\u8def\u5f84\u552f\u4e00\u3002\n\n\u6211\u4eec\u7ed3\u5408\u9664\u6cd5\u5411\u4e0b\u53d6\u6574\u7684\u6027\u8d28\uff1a\n\n$$\\left \\lfloor \\frac{\\left \\lfloor\\frac{m}{a}\\right \\rfloor}{b} \\right\\rfloor=\\left \\lfloor \\frac{m}{ab}\\right \\rfloor$$\n\n\u6240\u4ee5\u6211\u4eec\u6bcf\u4e00\u4e2a\u53f6\u5b50\u5f97\u5230\u7684\u9664\u6570\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u90a3\u4e48\u5bf9\u5e94\u7684\u98df\u8681\u517d\u533a\u95f4\u662f $num\\times (k+1)-1$ \u5230 $num\\times k$\u3002\n\n\u603b\u4f53\u6765\u8bf4\u6839\u636e\u7b2c\u4e00\u4e2a\u8fb9\u628a\u6811\u5206\u4e24\u90e8\u5206\uff0c\u5206\u522b\u4ee5\u4e24\u4e2a\u7aef\u70b9\u5bf9\u4e24\u8fb9\u8fdb\u884c DFS\uff0c\u7136\u540e\u5230\u53f6\u5b50\u5c31\u5c31\u4e8c\u5206\u51fa\u5bf9\u5e94\u7684\u8681\u7fa4\uff0c\u4e8c\u5206\u53ef\u4ee5\u91c7\u7528 lower_bound \u548c upper_bound \u6765\u89e3\u51b3\u3002\n\n\u590d\u6742\u5ea6 $\\mathcal O(nlogm)$\u3002\n\ncode\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000005\nusing namespace std;\nint n,g,k;\nint du[N],head[N],root1,root2,sum,tot,ji;long long ant[N],ans;\nstruct ddd\n{int to,nxt;}bian[N<<1];\nnamespace AYX\n{   inline void add(int u,int v)\n    {   bian[++tot].to=v;\n        bian[tot].nxt=head[u];\n        head[u]=tot;\n    }\n    inline void dfs(int x,int fa,long long val)\n    {   if(du[x]==1)\n        {   int l=lower_bound(ant+1,ant+1+g+2,val*k)-ant;\n            int r=upper_bound(ant+1,ant+1+g+2,val*(k+1)-1)-ant;\n            ans+=(r-l)>0?(r-l):0;\n            return;\n        }\n        for(int i=head[x];i;i=bian[i].nxt)\n        {   int v=bian[i].to;\n            if(v==fa)continue;\n            dfs(v,x,val*(du[x]-1));\n        }\n    }\n    inline short main()\n    {   scanf(\"%d%d%d\",&n,&g,&k);\n        ant[1]=-9999999999999999;ant[g+2]=9999999999999999;\n        for(int i=2;i<=g+1;++i)scanf(\"%lld\",&ant[i]);\n        for(int i=1;i<n;++i)\n        {   int a,b;\n            scanf(\"%d%d\",&a,&b);\n            if(i==1)root1=a,root2=b;\n            add(a,b);add(b,a);\n            du[a]++;du[b]++;\n        }\n        sort(ant+1,ant+1+g+2);\n        dfs(root1,root2,1);\n        dfs(root2,root1,1);\n        printf(\"%lld\\n\",ans*k);\n        return 0;\n    }\n}\nsigned main()\n{   return AYX::main();\n}\n```\n",
        "postTime": 1626129458,
        "uid": 464886,
        "name": "hzoi_zxb",
        "ccfLevel": 0,
        "title": "[POI2014]MRO-Ant colony"
    },
    {
        "content": "\u6700\u540e\u5230\u8fbe\u7684\u53ea\u6709\u4e00\u6761\u8fb9\u3002\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u6761\u8fb9\u628a\u6574\u4e2a\u6811\u5207\u6210\u4e24\u5757\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5728\u4e00\u4e2a\u65f6\u523b\u53ea\u6709\u4e00\u7fa4\u8682\u8681\uff0c\u6240\u4ee5\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u662f\u72ec\u7acb\u7684\u3002\n\n\u5206\u522b\u8003\u8651\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u8fd9\u6761\u8def\u5f84\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u8fbe\u90a3\u6761\u8def\u5f84\u4f7f\u5269\u4e0b\u8682\u8681\u4e3ak\u7684\u521d\u59cb\u8682\u8681\u91cf\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4(\u56e0\u4e3a\u5411\u4e0b\u53d6\u6574\u7684\u7279\u70b9)\n\n\u6240\u4ee5\u53ea\u8981\u53cd\u5411\u63a8\u51fa\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u533a\u95f4\u8fb9\u754c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n$L[x]$ \u8868\u793a $x$ \u6700\u5c11\u53d6 $L[x]$ \u4f7f\u5230\u90a3\u6761\u8def\u5f84\u5269\u4e0b\u8682\u8681\u4e3a $k$\n\n$R[x]$ \u8868\u793a $x$ \u6700\u591a\u53d6 $R[x]$ \u4f7f\u5230\u90a3\u6761\u8def\u5f84\u5269\u4e0b\u8682\u8681\u4e3a $k$\n\n\u8fd9\u6837\u5206\u522b\u8f6c\u79fb\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\nvoid dfs(int x,int f){\n\tfor(int i=0;i<E[x].size();i++){\n\t\tint V=E[x][i];\n\t\tif(V==f) continue;\n\t\tL[V]=L[x]*(E[x].size()-1);\n\t\tR[V]=R[x]*(E[x].size()-1)+(E[x].size()-1)-1;\n\t\tif(L[V]>2e9) L[V]=2e9;\n\t\tif(R[V]>2e9) R[V]=2e9;\n\t\tdfs(V,x);\n\t}\n}\n```\n\u7136\u540e\u518d\u539f\u5e8f\u5217\u91cc\u9762\u4e8c\u5206\uff0c\u6216\u8005\u628a\u8fb9\u754c\u6392\u5e8f\u540e\u76f4\u63a5\u4e24\u4e2a\u6307\u9488\u626b\u8fc7\u53bb\u5c31\u53ef\u4ee5\u4e86\u3002\n\u590d\u6742\u5ea6\u90fd\u662f $\\Theta( n * \\log n) $\u7684\u3002\n\n\u4ee3\u7801\u5f88\u4e11,\u90a3\u4e2a\u53cc\u6307\u9488\u5199\u7684\u5f88\u81ed\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define pb push_back\nusing namespace std;\nconst int N=1e6+10;\nint n,g,k,m[N];\nvector<int>E[N],q1,q2;\nll L[N],R[N];\nvoid addedge(int u,int v){\n\tE[u].pb(v);\n\tE[v].pb(u);\n}\nvoid dfs(int x,int f){\n\tfor(int i=0;i<E[x].size();i++){\n\t\tint V=E[x][i];\n\t\tif(V==f) continue;\n\t\tL[V]=L[x]*(E[x].size()-1);\n\t\tR[V]=R[x]*(E[x].size()-1)+(E[x].size()-1)-1;\n\t\tif(L[V]>2e9) L[V]=2e9;\n\t\tif(R[V]>2e9) R[V]=2e9;\n\t\tdfs(V,x);\n\t}\n}\nint main(){\n\tscanf(\"%d %d %d\",&n,&g,&k);\n\tfor(int i=1;i<=g;i++) scanf(\"%d\",&m[i]);\n\tsort(m+1,m+g+1);\n\tint s=0,t=0;\n\tfor(int i=2;i<=n;i++){\n\t\tint u,v;\n\t\tscanf(\"%d %d\",&u,&v);\n\t\taddedge(u,v);\n\t\tif(i==2) s=u,t=v;\n\t}\n\tL[t]=R[t]=L[s]=R[s]=k;\n\tdfs(s,t);\n\tdfs(t,s);\n\tfor(int i=1;i<=n;i++){\n\t\tif(E[i].size()==1){\n\t\t\tq1.pb(L[i]);\n\t\t\tq2.pb(R[i]);\n\t\t}\n\t}\n\tsort(q1.begin(),q1.end());\n\tsort(q2.begin(),q2.end());\n\tint r1=0,r2=0;\n\tll ans=0;\n\tfor(int i=1;i<=g;i++){\n\t\twhile(r1<q1.size()&&q1[r1]<=m[i]){\n\t\t\tans-=i-1;\n\t\t\tr1++;\n\t\t}\n\t\twhile(r2<q2.size()&&q2[r2]<m[i]){\n\t\t\tans+=i-1;\n\t\t\tr2++;\n\t\t}\n\t}\n\twhile(r1<q1.size()){\n\t\tans-=g;\n\t\tr1++;\n\t}\n\twhile(r2<q2.size()){\n\t\tans+=g;\n\t\tr2++;\t\n\t}\n\tprintf(\"%lld\\n\",ans*k);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1538191382,
        "uid": 71577,
        "name": "renhao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3576 \u3010[POI2014]MRO-Ant colony\u3011"
    }
]