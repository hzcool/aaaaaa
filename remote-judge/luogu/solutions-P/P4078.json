[
    {
        "content": "\n\n\u6309\u9650\u5236\u6a21\u62df , \u53ea\u6709\u4e09\u79cd\u884c\u8d70\u65b9\u5f0f :\n\n1. \u6cbf\u8fb9\u754c\u8d70\n\n2. \u5728\u5de6\u4e0a , \u53f3\u4e0b\u5f98\u5f8a\n\n3. \u4e0a\u4e0b\u6216\u5de6\u53f3\u53cd\u590d\n\n\n![\u5728\u8fb9\u89d2\u5f98\u5f8a](https://i.loli.net/2020/03/02/na9HrIm3EpWLMvQ.png)\n\n\n\u4e8e\u662f\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5 , \u5728\u8d77\u70b9\u5f98\u5f8a , \u4e0a\u4e0b/\u5de6\u53f3 , \u5728\u7ec8\u70b9\u5f98\u5f8a\n\n![](https://i.loli.net/2020/03/02/FZUA9jBpGn32mM4.png)\n\n\u4e0a\u4e0b\u8d70\u5c31\u662f\u8f6c\u7f6e\u540e\u5de6\u53f3\u8d70\n\n\u5728\u8d77\u70b9\u5f98\u5f8a\u548c\u5728\u7ec8\u70b9\u5f98\u5f8a\u4e2d\u5fc3\u5bf9\u79f0\u7ffb\u8f6c\n\n\u4e8e\u662f\u53ea\u7528\u8003\u8651\u4e24\u4e2a DP , \u7b2c\u4e00\u4e2a\u5728\u89d2\u843d\u5f98\u5f8a , \u7b2c\u4e8c\u4e2a\u5de6\u53f3\u6765\u56de\n\n\u8bbe $f[i][j]$ \u8868\u793a\u5728 $(1,j)$ , \u6700\u591a\u8d70\u5230\u7b2c $i$ \u884c\u7684\u6700\u5927\u6536\u76ca , $g[i][j]$ \u8868\u793a\u5728 $(i,1)$ , \u6700\u591a\u8d70\u5230\u7b2c $j$ \u5217\u7684\u6700\u5927\u6536\u76ca\n\n\u4e8e\u662f\u6709\u8f6c\u79fb \n\n$f[i][j] = \\max( f[i][j - 1] + a_{1,j} , f[i - 1][j] , g[i - 1][j - 1] + profit_{(i,1) \\rightarrow (i,j) \\rightarrow (1,j) })$\n\n$g[i][j] = \\max( g[i - 1][j] + a_{i,1} , g[i][j - 1] , f[i - 1][j - 1] + profit_{(1,j) \\rightarrow (i,j) \\rightarrow (i,1) })$\n\n\u4e8e\u662f\u53ef\u4ee5\u5f97\u5230\u5230\u8fbe $(i,1) , (i,m)$ \u7684\u6700\u5927\u6536\u76ca , \u7b2c\u4e00\u4e2a DP \u5c31\u5b8c\u6210\u4e86\n\n\u8bbe $h[i][0/1]$ \u8868\u793a\u5728 $(i,1),(i,m)$ \u65f6\u7684\u6700\u5927\u6536\u76ca\n\n$h[i][0] = \\max( h[i - 1][0] + a_{i,1} , h[k][1] + profit_{(k,m)\\rightarrow (i,m) \\rightarrow (i,1)} ) ( k < i)$\n\n$h[i][1] = \\max( h[i - 1][1] + a_{i,1} , h[k][0] + profit_{(k,1)\\rightarrow (i,m) \\rightarrow (i,m)} ) (k < i)$\n\n\u6700\u540e\u4e0e\u5728 $(n,m)$ \u5f98\u5f8a\u7684 DP \u5408\u5e76\u6c42\u4e00\u4e0b\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long lol;\nconst int N = 8e2 + 5;\nconst lol INF = 1e15;\ninline void chkmax( lol & a , lol b ) { if( a < b ) a = b; }\nint _w;\n\nint org[N][N] , dat[N][N] , n , m\nlol col[N][N] , row[N][N] , L[N] , R[N] , up[N][2] , dn[N][2] , ans = -INF , trs[N] , f[N][N][2];\n\nvoid calc( void ) { // \u8ba1\u7b97\u5728\u8fb9\u89d2\u5f98\u5f8a\n  for( int i = 1 ; i <= n ; ++i )\n    for( int j = 1 ; j <= m ; ++j )\n      col[i][j] = col[i - 1][j] + dat[i][j] , \n      row[i][j] = row[i][j - 1] + dat[i][j];\n  for( int i = 1 ; i <= n ; ++i )\n    for( int j = 1 ; j <= m ; ++j )\n      f[i][j][0] = f[i][j][1] = -INF;\n  for( int i = 1 ; i <= n ; ++i ) f[i][1][1] = col[i][1] , f[i][1][0] = dat[1][1];\n  for( int i = 1 ; i <= m ; ++i ) f[1][i][1] = dat[1][1] , f[1][i][0] = row[1][i];\n  for( int i = 2 ; i <= n ; ++i ) {\n    for( int j = 2 ; j <= m ; ++j ) {\n      chkmax( f[i][j][0] , f[i - 1][j][0] );\n      chkmax( f[i][j][0] , f[i - 1][j - 1][1] + col[i][j] + row[i][j] - dat[i][j] );\n      chkmax( f[i][j][0] , f[i][j - 1][0] + dat[1][j] );\n      chkmax( f[i][j][1] , f[i][j - 1][1] );\n      chkmax( f[i][j][1] , f[i - 1][j - 1][0] + col[i][j] + row[i][j] - dat[i][j] );\n      chkmax( f[i][j][1] , f[i - 1][j][1] + dat[i][1] );\n    }\n  }\n  for( int i = 1 ; i <= n ; ++i ) L[i] = R[i] = -INF;\n  for( int i = 1 ; i <= n ; ++i )\n    for( int j = 1 ; j <= m ; ++j )\n      chkmax( L[i] , f[i][j][1] );\n  for( int i = 1 ; i <= m ; ++i ) trs[i] = row[1][m] - row[1][i];\n  R[1] = row[1][m];\n  for( int i = 2 ; i <= n ; ++i )\n    for( int j = 1 ; j < m ; ++j ) {\n      trs[j] = max( trs[j] + dat[i][m] , col[i][j + 1] + row[i][m] - row[i][j + 1] );\n      chkmax( R[i] , f[i][j][0] + trs[j] );\n    }\n}\n\nvoid solve( void ) {\n  memcpy( dat , org , sizeof dat ); calc();\n  for( int i = 1 ; i <= n ; ++i ) up[i][0] = L[i] , up[i][1] = R[i];\n  for( int i = 1 ; i <= n ; ++i )\n    for( int j = 1 ; j <= m ; ++j )\n      dat[i][j] = org[n - i + 1][m - j + 1];\n  calc(); for( int i = 1 ; i <= n ; ++i ) dn[i][0] = R[n - i + 1] , dn[i][1] = L[n - i + 1];\n  memcpy( dat , org , sizeof dat );\n  for( int i = 1 ; i <= n ; ++i )\n    for( int j = 1 ; j <= m ; ++j )\n      col[i][j] = col[i - 1][j] + dat[i][j] , \n      row[i][j] = row[i][j - 1] + dat[i][j];\n  lol l = 0 , r = row[1][m - 1];\n  for( int i = 2 ; i <= n ; ++i ) {\n    chkmax( up[i][0] , l + col[i][1] );\n    chkmax( up[i][1] , r + col[i][m] );\n    chkmax( up[i][0] , r + col[i][m] + row[i][m] - dat[i][m] );\n    chkmax( up[i][1] , l + col[i][1] + row[i][m] - dat[i][1] );\n    chkmax( l , up[i][0] - col[i][1] );\n    chkmax( r , up[i][1] - col[i][m] );\n  }\n  l = row[n][m] , r = dat[n][m];\n  chkmax( ans , dn[1][0] );\n  chkmax( ans , up[n][1] );\n  for( int i = n - 1 ; i > 1 ; --i ) {\n    l = max( l + dat[i][1] , dn[i][0] );\n    r = max( r + dat[i][m] , dn[i][1] );\n    chkmax( ans , l + up[i - 1][0] );\n    chkmax( ans , r + up[i - 1][1] );\n  }\n}\n\nint main( void ) {\n  _w = scanf(\"%d%d\",&n,&m);\n  for( int i = 1 ; i <= n ; ++i )\n    for( int j = 1 ; j <= m ; ++j )\n      _w = scanf(\"%d\",org[i] + j );\n  solve();\n  for( int i = 1 ; i <= n ; ++i )\n    for( int j = i + 1 ; j <= m ; ++j )\n      swap( org[i][j] , org[j][i] );\n  swap( n , m );\n  solve();\n  cout << ans;\n  return 0;\n}\n```\n\n",
        "postTime": 1583150043,
        "uid": 124915,
        "name": "guyan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4078 \u3010[SDOI2016]\u63a2\u9669\u8def\u7ebf\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u4e2a\u4eba\u5462\uff0c\n\n\u6839\u636e\u9898\u76ee\u7684\u610f\u601d\uff0c\u4e00\u5929\u6709\u4e24\u6b21\u64cd\u4f5c:\n\n\u6cbf\u7740\u4e00\u4e2a\u65b9\u5411\u8d70$k$\u6b65\uff0c\n\n\u7136\u540e\u6cbf\u7740\u4e00\u4e2a\u65b9\u5411\u8d70\u5230\u8fb9\u754c\u3002\n\n\u901a\u8fc7\u753b\u56fe\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5927\u6982\u7684\u56fe\u5f62\u3002\n\n\u8981\u4e48\u5728\u5de6\u4e0a\u89d2(\u8d77\u70b9)\u5f98\u5f8a\uff0c\n\n\u8981\u4e48\u5c31\u662f\u8def\u88ab\u6321\u4f4f\u4e86\uff0c\u4e0d\u80fd\u5f98\u5f8a\uff0c\u50cf\u86c7\u5f62\u4e00\u6837\u5f80\u4e0b\u8d70\u4e86\uff0c\n\n\u8981\u4e48\u5728\u53f3\u4e0b\u89d2(\u7ec8\u70b9)\u5f98\u5f8a\u3002\n\n\u90a3\u4e48\u8981\u8bbe\u8ba1\u4e09\u4e2a\u72b6\u6001\uff1f\n\n\u4e0d\u7528\uff0c\u56e0\u4e3a\u53f3\u4e0b\u89d2\u7ffb\u8f6c\u4e00\u4e0b\u5c31\u662f\u5de6\u4e0a\u89d2\uff0c\u56e0\u6b64\u53ea\u8981\u518d\u7167\u7740\u5de6\u4e0a\u89d2\u7684\u5f98\u5f8aDP\u65b9\u5f0f\u518d\u505a\u5c31\u597d\u4e86\u3002\n\n\u4e8e\u662f\u7ed9\u51fa\u5de6\u4e0a\u89d2\u5f98\u5f8a\u7684\u5b9a\u4e49:\n\n\u4e0d\u96be\u53d1\u73b0\u5176\u5b9e\u5982\u679c\u8981\u5f98\u5f8a\uff0c\u4e00\u5929\u7684\u7ed3\u675f\u4e00\u5b9a\u662f\u505c\u5728$(i,1)$\u6216$(1,j)$\u4e0a\u3002\n\n\u5b9a\u4e49\u72b6\u6001$f_{i,j,0/1}$\u8868\u793a\n\n0\u7684\u65f6\u5019\uff0c\u4e4b\u524d\u6700\u8fdc\u8fbe\u5230$i$\u884c\uff0c\u73b0\u5728\u8981\u5230$(1,j)$\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n1\u7684\u65f6\u5019\uff0c\u4e4b\u524d\u6700\u8fdc\u8fbe\u5230$j$\u5217\uff0c\u73b0\u5728\u8981\u5230$(i,1)$\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u6839\u636e\u5b9a\u4e49\u6709\n\n$f_{i,j,0}=\\min\\limits\\{f_{i-1,j,0},f_{i,j-1,0}+val_{i,j},f_{i-1,j-1,1}+cost_{(i,1)\\rightarrow(i,j)\\rightarrow(1,j)}\\}$\n\n$f_{i,j,1}=\\min\\limits\\{f_{i,j-1,1},f_{i-1,j,1}+val_{i,j},f_{i-1,j-1,0}+cost_{(1,j)\\rightarrow(i,j)\\rightarrow(i,1)}\\}$\n\n\u7136\u540e\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u8fc7\u6e21\u7528\u7684\u5c0f\u72b6\u6001\n\n$L_i,R_i$\u5206\u522b\u8868\u793a\u505c\u9760\u5728$(i,1),(i,m)$\u7684\u6700\u4f18\u72b6\u6001\u3002\n\n\u5177\u4f53\u7684\u8f6c\u79fb\u53ef\u4ee5\u53c2\u7167\u4ee3\u7801\u3002\n\n\u4e4b\u540e\u5c31\u8fc7\u6e21\u5230\u4e86\u7b2c\u4e8c\u90e8\u5206:\u86c7\u5f62\u8d70\u4f4d\u3002\n\n\u5206\u4e3a\u4ece$(i-1,1)\\rightarrow(i,1)$\u7b49\u56db\u79cd\u60c5\u51b5\u3002\n\n\u8003\u8651\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u4e4b\u540e\u5c31\u662f\u628a\u53f3\u4e0b\u89d2\u7684\u72b6\u6001\u62fc\u8d77\u6765\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cstdlib>\n#define gc getchar()\n#define ll long long\n#define ull unsigned long long\n#define file(s) freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout)\n#define I inline \nusing namespace std;\nconst int N=805,M=N+5;const ull G=31;\ntemplate<class o>I void qr(o &x)\n{\n\tchar c=gc;int f=1;x=0;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=gc;}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=gc;}\n\tx*=f;\n}\ntemplate<class o>I void qw(o x)\n{\n\tif(x<0)x=-x,putchar('-');\n\tif(x/10)qw(x/10);\n\tputchar(x%10+48);\n}\nI void cmx(ll &a,ll b){if(a<b)a=b;}\nll col[N][N],row[N][N],f[N][N][2],L[N],R[N],s[N],u[N][2],d[N][2],ans;int val[N][N],n,m,arr[N][N];\nvoid calc()\n{\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tcol[i][j]=col[i-1][j]+val[i][j],\n\t\t\trow[i][j]=row[i][j-1]+val[i][j];\n\tmemset(f,0xcf,sizeof(f));\n\tfor(int i=1;i<=n;i++)f[i][1][1]=col[i][1],f[i][1][0]=val[1][1];\n\tfor(int i=1;i<=m;i++)f[1][i][1]=val[1][1],f[1][i][0]=row[1][i];\n\tfor(int i=2;i<=n;i++)\n\t\tfor(int j=2;j<=m;j++)\n\t\t{\n\t\t\tll w=col[i][j]+row[i][j]-val[i][j];\n\t\t\tcmx(f[i][j][0],f[i-1][j][0]);\n\t\t\tcmx(f[i][j][0],f[i-1][j-1][1]+w);\n\t\t\tcmx(f[i][j][0],f[i][j-1][0]+val[1][j]);\n\t\t\tcmx(f[i][j][1],f[i][j-1][1]);\n\t\t\tcmx(f[i][j][1],f[i-1][j-1][0]+w);\n\t\t\tcmx(f[i][j][1],f[i-1][j][1]+val[i][1]);\n\t\t}\n\tmemset(L,0xcf,sizeof(L));memset(R,0xcf,sizeof(R));\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tcmx(L[i],f[i][j][1]);\n\tfor(int i=1;i<=m;i++)s[i]=row[1][m]-row[1][i];\n\tR[1]=row[1][m];\n\tfor(int i=2;i<=n;i++)\n\t\tfor(int j=1;j<m;j++)\n\t\t{\n\t\t\ts[j]=max(s[j]+val[i][m],col[i][j+1]+row[i][m]-row[i][j+1]);\n\t\t\tcmx(R[i],f[i][j][0]+s[j]);\n\t\t}\n}\nvoid solve()\n{\n\tmemcpy(val,arr,sizeof(val));calc();\n\tfor(int i=1;i<=n;i++)u[i][0]=L[i],u[i][1]=R[i];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tval[i][j]=arr[n-i+1][m-j+1];\n\tcalc();for(int i=1;i<=n;i++)d[i][0]=R[n-i+1],d[i][1]=L[n-i+1];\n\tmemcpy(val,arr,sizeof(val));\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tcol[i][j]=col[i-1][j]+val[i][j],\n\t\t\trow[i][j]=row[i][j-1]+val[i][j];\n\tll l=0,r=row[1][m-1];\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tcmx(u[i][0],l+col[i][1]);\n\t\tcmx(u[i][1],r+col[i][m]);\n\t\tcmx(u[i][0],r+col[i][m]+row[i][m]-val[i][m]);\n\t\tcmx(u[i][1],l+col[i][1]+row[i][m]-val[i][1]);\n\t\tcmx(l,u[i][0]-col[i][1]);\n\t\tcmx(r,u[i][1]-col[i][m]);\n\t}\n\tl=row[n][m],r=val[n][m];\n\tcmx(ans,d[1][0]);\n\tcmx(ans,u[n][1]);\n\tfor(int i=n-1;i>1;--i)\n\t{\n\t\tl=max(l+val[i][1],d[i][0]);\n\t\tr=max(r+val[i][m],d[i][1]);\n\t\tcmx(ans,l+u[i-1][0]);\n\t\tcmx(ans,r+u[i-1][1]);\n\t}\n}\nint main()\n{\n\tqr(n),qr(m);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tqr(arr[i][j]);\n\tsolve();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=i+1;j<=m;j++)\n\t\t\tswap(arr[i][j],arr[j][i]);\n\tswap(n,m);\n\tsolve();\n\tqw(ans);puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1589702370,
        "uid": 106232,
        "name": "_Sein",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4078 \u3010[SDOI2016]\u63a2\u9669\u8def\u7ebf\u3011"
    }
]