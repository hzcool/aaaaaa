[
    {
        "content": "## Game\n\nUpd\uff1a\u4e4b\u524d\u9898\u76ee\u6709\u4e00\u70b9\u95ee\u9898\uff0c\u611f\u8c22\u5de8\u4f6c @ywwywwyww \u6307\u51fa\u3002\u9898\u9762\u5df2\u7ecf\u66f4\u6b63\uff0c\u539f\u4ee3\u7801\u53ea\u9700\u6539\u52a810\u5b57\u8282\u5de6\u53f3\u5373\u53efAC\u3002\n\n\u4e8b\u5b9e\u4e0a\u3002\u3002\u51fa\u9898\u4eba\u4e5f\u4e0d\u77e5\u9053\u80fd\u6709\u4ec0\u4e48\u90e8\u5206\u5206\u3002\u3002\u9898\u9762\u4e0a\u90a3\u4e48\u591a\u4e0d\u540c\u7684\u6570\u636e\u8303\u56f4\u53ea\u662f\u60f3\u770b\u770b\u4e00\u9053\u7f51\u7edc\u6d41\u80fd\u4e71\u641e\u51fa\u4ec0\u4e48\u7b97\u6cd5\u3002\u3002\n\n### \u5927\u698250\u5206\u7684\u6734\u7d20\u5efa\u56fe\n\n\u53ef\u4ee5\u8003\u8651\u5efa\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5411\u4e0a/\u4e0b\u7684\u8fb9\u5efa\u4e00\u6761\u8d39\u7528$1$\uff0c\u6d41\u91cf$1$\u7684\u8fb9\uff0c\u6bcf\u4e00\u6761\u5411\u5de6/\u53f3\u8fb9\u5efa\u4e00\u6761\u8d39\u7528$0$\uff0c\u6d41\u91cf$Inf$\u7684\u8fb9\uff0c\u7136\u540e\u6700\u5de6\u8fb9\u8fde\u6e90\u70b9\uff0c\u53f3\u8fb9\u8fde\u6c47\u70b9\uff0c\u7136\u540e\u8dd1\u8d39\u7528\u6d41\uff0c\u6700\u591a\u6269\u5c55$N$\u6b21\uff0c\u7136\u540e\u590d\u6742\u5ea6\u4e0a\u754c\u5c31\u662f$O(N^3M^2)$\uff0c\u53d1\u73b0\u4e0d\u591f\u4f18\u79c0\u3002\n\n\u8fd9\u91cc\u7684\u4e0a\u4e0b\u8fb9\u7684\u8d39\u7528\u5c31\u9650\u5236\u4e86\u4e00\u64cd\u4f5c\u7684\u6b21\u6570\uff0c\u5de6\u53f3\u8fb9\u6d41\u91cf\u9650\u5236\u4e86\u4e24\u4e2a\u68cb\u5b50\u4e0d\u80fd\u8d70\u5230\u4e00\u8d77\u3002\n\n\u5373\u4f7f\u8fd9\u79cd\u7384\u5b66\u56fe\u80fd\u5145\u5206\u53d1\u6325$Spfa$\u7384\u5b66\u6027\u8d28\uff0c\u4f46\u662f\u53ef\u80fd\u4e0d\u80fd\u8fc7$M=10^4$\u7684\u6570\u636e,\u4e00\u5b9a\u4e0d\u80fd\u8fc7$M=10^6$\u7684\u6570\u636e\u3002\n\n### 70\u5206\u505a\u6cd5\n\n\u4e8b\u5b9e\u4e0a\u53d1\u73b0$M$\u975e\u5e38\u5927\u7684\u65f6\u5019\u4e2d\u95f4\u6709\u5f88\u591a\u7a7a\u884c\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u5220\u53bb\u8fd9\u4e9b\u884c\uff0c\u7136\u540e\u53ea\u7559\u4e0b\u6709\u969c\u788d\u7684\u884c\u53ca\u5176\u524d\u4e00\u884c\uff0c\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u4f18\u5316\u5230$O(N^3T^2)$\uff0c\u4f46\u662f\u8fd9\u4e2a\u73a9\u610f\u662f\u4e0a\u754c\uff0c\u4f46\u662f$Spfa$\u5728\u8fd9\u79cd\u8fb9\u6743\u53ea\u6709$0/1/-1$\u7684\u7f51\u683c\u56fe+\u968f\u673a\u6570\u636e\u4e0b\u8dd1\u5f97\u8fdc\u4e0d\u5230\u4e0a\u754c\uff0c~~\u6240\u4ee5\u662f\u53ef\u4ee5\u8fc7\u7684\u3002~~\n\nUpd: \u65f6\u9650\u6539\u62101s\u8fa3\uff01\uff01\n\n\u6240\u4ee5\u4e0a\u8ff0\u65b9\u6cd5\u5c31\u53ea\u80fd\u62ff\u66b4\u529b\u5206\u4e86\u3002\u3002\u90a3\u4e48\u600e\u4e48\u4f18\u5316\u5462\uff1f\uff1f\n\n### 100\u5206\u505a\u6cd5\n\n\u5b9e\u9645\u4e0a\u6211\u4eec\u5728$0/1/-1$\u7f51\u683c\u56fe\u4e2d\u8dd1$Spfa$\u6709\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4f18\u5316\uff1a\u7528\u53cc\u7aef\u961f\u5217\u66ff\u6362\u6389\u539f\u6765\u7684\u961f\u5217\uff0c\u7136\u540e\u6bcf\u4e00\u6b21\u63d2\u5165\u7684\u65f6\u5019\u548c\u961f\u5934\u6bd4\u8f83\uff0c\u5982\u679c\u66f4\u5c0f\u5c31\u63d2\u5165\u5230\u961f\u5934\uff0c\u5426\u5219\u63d2\u5165\u5230\u961f\u5c3e\u3002\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u8dd1\u4e00\u6b21$Spfa$\u7684\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86$O(N^2T)$\u4e86(-1\u7684\u8fb9\u5bf9\u8fd9\u79cd\u65b9\u6cd5\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u6700\u591a\u5f71\u54cd\u4e00\u884c\u5185\u7684\u70b9)\u3002\u53d1\u73b0\u73b0\u5728\u7684\u590d\u6742\u5ea6\u4e0a\u754c\u662f$O(N^3T)$\uff0c$10^8$\u5de6\u53f3\uff0c\u5f00O2\u8dd1\u5f97\u8fc7\u3002\u3002\n\n\u4ee3\u7801\u592a\u4e11\u4e86\uff0c\u8fd8\u662f\u4e0d\u653e\u4e86\u5427\u3002\u3002",
        "postTime": 1550151608,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5222 \u3010Game\u3011"
    },
    {
        "content": "## \u3010\u9898\u610f\u3011\n\u7ed9\u5b9a\u68cb\u76d8\uff0c\u68cb\u76d8\u4e0a\u6709\u969c\u788d\u70b9\uff0c\u969c\u788d\u70b9\u4e0d\u80fd\u653e\u68cb\u5b50\uff0c\u6bcf\u4e2a\u683c\u5b50\u53ea\u80fd\u653e\u4e00\u4e2a\u68cb\u5b50\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- \u8ba9\u67d0\u4e2a\u68cb\u5b50\u4e0a\u4e0b\u79fb\u52a8\uff0c\u9700\u8981\u82b1\u8d39 $1$ \u7684\u4ee3\u4ef7\n\n- \u8ba9\u6240\u6709\u68cb\u5b50\u5411\u53f3\u79fb\u4e00\u683c\n\n\u521d\u59cb\u65f6\u53ef\u4ee5\u5728\u7b2c\u4e00\u5217\u653e\u82e5\u5e72\u68cb\u5b50\uff0c\u8981\u6c42\u7ed3\u675f\u65f6\u6240\u6709\u68cb\u5b50\u5230\u8fbe\u6700\u540e\u4e00\u5217\uff0c\u6c42\u5728\u4ee3\u4ef7\u4e0d\u8d85\u8fc7 $k_i$ \u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u591a\u80fd\u653e\u591a\u5c11\u68cb\u5b50\u3002\n\n## \u3010\u5206\u6790\u3011\n $n$ \u4e0d\u5927\uff0c\u53ef\u4ee5\u6c42\u653e $i$ \u4e2a\u68cb\u5b50\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u8be2\u95ee\u65f6\u5728\u9884\u5904\u7406\u51fa\u7684\u7b54\u6848\u4e0a\u4e8c\u5206\u3002\n \n\u6700\u5c0f\u4ee3\u4ef7\u53ef\u4ee5\u7528\u8d39\u7528\u6d41\u6c42\u89e3\uff0c\u8003\u8651\u5982\u4f55\u5efa\u8fb9\u3002\n\n$X\\xrightarrow{f,c}Y$ \u8868\u793a\u683c\u5b50 $X$ \u5411 $Y$ \u8fde\u5bb9\u91cf\u4e3a $f$\uff0c\u8d39\u7528\u4e3a $c$ \u7684\u8fb9\u3002\n\n\u6e90\u70b9\u4e3a $S$\uff0c\u6c47\u70b9\u4e3a $T$\u3002\n\n> $S\\xrightarrow{1,0}(i,1)$\uff0c\u8868\u793a\u5728\u7b2c\u4e00\u5217\u653e\u68cb\u5b50\u3002\n\n> $(i,m)\\xrightarrow{1,0}T$\uff0c\u8868\u793a\u68cb\u5b50\u5230\u8fbe\u6700\u540e\u4e00\u5217\u3002\n\n> $(i,j)\\xrightarrow{+\\infty,1}(i\\pm1,j)$\uff0c\u8868\u793a\u4e0a\u4e0b\u79fb\u52a8\u3002\n\n> $(i,j)\\xrightarrow{1,0}(i,j+1)$\uff0c\u8868\u793a\u5411\u53f3\u79fb\u52a8\uff0c\u4fdd\u8bc1\u6bcf\u683c\u53ea\u80fd\u5bb9\u7eb3\u4e00\u4e2a\u70b9\u3002\n\n------------\n\n\u6bcf\u6b21\u627e\u4e00\u6761\u589e\u5e7f\u8def\u5373\u53ef\u3002\n\n\u8fd9\u6837\uff0c\u4e00\u4e2a\u6734\u7d20\u7684\u6a21\u578b\u5c31\u5efa\u597d\u4e86\u3002\n\n\u4f46\u662f\u7531\u4e8e $m$ \u8fbe\u5230\u4e86 $10^6$\uff0c\u65f6\u7a7a\u4e24\u7206\u70b8\uff0c\u8003\u8651\u5982\u4f55\u4f18\u5316\u5efa\u56fe\u3002\n\n\u6ce8\u610f\u5230\uff0c$T$ \u7684\u8303\u56f4\u5f88\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u969c\u788d\u70b9\u5f7c\u6b64\u76f8\u9694\u751a\u8fdc\uff0c\u5927\u90e8\u5206\u5217\u90fd\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\uff0c\u5b58\u5728\u5927\u91cf\u5197\u4f59\u8ba1\u7b97\u3002\n\n\u4e8e\u662f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u969c\u788d\u70b9 $(x,y)$\uff0c\u6211\u4eec\u53ea\u4fdd\u7559 $y$ \u548c $y-1$ \u8fd9\u4e24\u5217\uff0c\u524d\u8005\u7528\u4e8e\u9650\u5236\u68cb\u5b50\u79fb\u52a8\uff0c\u540e\u8005\u4e3a\u68cb\u5b50\u63d0\u4f9b\u4e0a\u4e0b\u79fb\u52a8\u7684\u7a7a\u95f4\u3002\n\n\u4e8e\u662f\u901a\u8fc7\u4e86\u672c\u9898\u3002\n\n## \u3010\u7b97\u6cd5\u3011\n\n\u8d39\u7528\u6d41\n\n## \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<bits/stdc++.h>\n#define RE register\n#define IN inline\nusing namespace std;\nconst int maxn=55,maxk=2e3+5,maxt=maxn*maxk,maxe=maxt*6,INF=1<<30;\nint n,m,k,q;\nIN char gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define getchar gc\nIN int read(){\n    RE int ret=0,f=1;RE char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\nint S,T,SS;\nstruct edge{\n\tint to,nxt,f,d;\n}e[maxe];\nint tot,lnk[maxt];\nIN void add_e(RE int x,RE int y,RE int f,RE int d){\n\te[++tot]=(edge){y,lnk[x],f,d};\n\tlnk[x]=tot;\n}\nIN void ADD(RE int x,RE int y,RE int f,RE int d){\n\tadd_e(x,y,f,d),add_e(y,x,0,-d);\n}\nbool vis[maxt];\nint que[maxt],dis[maxt];\nIN bool SPFA(){\n\tfor(RE int i=1;i<=T;i++) dis[i]=INF,vis[i]=0;\n\tRE int hed=0,til=1;\n\tque[1]=T,vis[T]=1,dis[T]=0;\n\twhile(hed!=til){\n\t\tRE int x=que[(++hed)%=maxt];\n\t\tvis[x]=0;\n\t\tfor(RE int j=lnk[x];j;j=e[j].nxt){\n\t\t\tRE int y=e[j].to;\n\t\t\tif(e[j^1].f&&dis[y]>dis[x]-e[j].d){\n\t\t\t\tdis[y]=dis[x]-e[j].d;\n\t\t\t\tif(!vis[y]){\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t\tque[(++til)%=maxt]=y;\n\t\t\t\t\tint nxt=(hed+1)%maxt;\n\t\t\t\t\tif(dis[que[til]]<dis[que[nxt]]) swap(que[til],que[nxt]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[S]!=INF;\n}\nint ans1,ans2;\nint DFS(RE int x,RE int limit){\n\tvis[x]=1;\n\tif(x==T||!limit) return limit;\n\tRE int flow=0,f;\n\tfor(RE int j=lnk[x];j;j=e[j].nxt){\n\t\tRE int y=e[j].to;\n\t\tif(!vis[y]&&e[j].f&&dis[y]==dis[x]-e[j].d&&(f=DFS(y,min(limit-flow,e[j].f)))){\n\t\t\te[j].f-=f;\n\t\t\te[j^1].f+=f;\n\t\t\tflow+=f;\n\t\t}\n\t\tif(flow==limit) return flow;\n\t}\n\treturn flow;\n}\nIN void calc(){\n\tif(SPFA()){\n\t\tint now=DFS(S,INF);\n\t\tans1+=now;\n\t\tans2+=now*dis[S];\n\t}\n}\nint b[maxk];\nbool mp[maxn][maxk];\nstruct data{\n\tint x,y;\n}a[maxk];\nIN int getid(RE int x,RE int y){\n\treturn (x-1)*m+y;\n}\nint ans[maxn];\nIN int find(RE int x){\n\tRE int L=0,R=n,res=0;\n\t#define mid (L+R>>1)\n\twhile(L<=R){\n\t\tif(ans[mid]<=x) res=mid,L=mid+1;\n\t\telse R=mid-1; \n\t}\n\treturn res;\n}\nint main(){\n \tfreopen(\"P5222.in\",\"r\",stdin);\n \tfreopen(\"P5222.out\",\"w\",stdout);\n\tn=read(),m=read(),k=read(),q=read();\n\tfor(RE int i=1;i<=k;i++){\n\t\tRE int x=read(),y=read();\n\t\tb[++b[0]]=y,b[++b[0]]=y-1;\n\t\ta[i].x=x,a[i].y=y;\n\t}\n\tb[++b[0]]=1,b[++b[0]]=m;\n\tsort(b+1,b+1+b[0]);\n\tm=unique(b+1,b+1+b[0])-b-1;\n\tfor(RE int i=1;i<=k;i++){\n\t\ta[i].y=lower_bound(b+1,b+1+m,a[i].y)-b;\n\t\tmp[a[i].x][a[i].y]=1;\n\t}\n\tS=n*m+1,T=S+1,tot=1;\n\tfor(RE int i=1;i<=n;i++){\n\t\tif(!mp[i][1]) ADD(S,getid(i,1),1,0);\n\t\tif(!mp[i][m]) ADD(getid(i,m),T,1,0);\n\t}\n\tfor(RE int i=1;i<=n;i++)\n\tfor(RE int j=1;j<=m;j++) if(!mp[i][j]){\n\t\tRE int id=getid(i,j);\n\t\tif(i>1){\n\t\t\tRE int x=i-1,y=j;\n\t\t\tif(!mp[x][y]) ADD(id,getid(x,y),INF,1);\n\t\t}\n\t\tif(i<n){\n\t\t\tRE int x=i+1,y=j;\n\t\t\tif(!mp[x][y]) ADD(id,getid(x,y),INF,1);\n\t\t}\n\t\tif(j<m){\n\t\t\tRE int x=i,y=j+1;\n\t\t\tif(!mp[x][y]) ADD(id,getid(x,y),1,0);\n\t\t}\n\t}\n\tfor(RE int i=1;i<=n;i++){\n\t\tcalc();\n\t\tif(ans1<i){n=i-1;break;}\n\t\tans[i]=ans2;\n\t}\n\tfor(RE int i=1;i<=q;i++){\n\t\tRE int x=read();\n\t\tprintf(\"%d\\n\",find(x));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1629811127,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5222 \u3010Game\u3011"
    },
    {
        "content": "\u4e00\u9053\u611f\u89c9\u6bd4\u8f83\u88f8\u7684\u8d39\u7528\u6d41\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u770b\u8d77\u6765\u7206\u70b8\uff0c~~\u6240\u4ee5yww\u4e0d\u5207\u8fd9\u9898~~\n\n\u4ee5\u4e0b\u5982\u65e0\u7279\u6b8a\u8bf4\u660e\uff0c\u8fb9(x,y)\u8868\u793a\u6d41\u91cf\u4e3ax\u8d39\u7528\u4e3ay\n\n\u8003\u8651\u7b54\u6848\u7684\u8303\u56f4\u3002\u6700\u7406\u60f3\u60c5\u51b5\u5f53\u7136\u662f\u4e00\u6574\u5217\u586b\u6ee1\u68cb\u5b50\uff0c\u7b54\u6848\u4e3an\uff0c\u800cn\u8fdc\u5c0f\u4e8eq\uff0c\u4e5f\u5c31\u662f\u8bf4\u9884\u5904\u7406\u51fa\u586bi\u4e2a\u683c\u5b50\u81f3\u5c11\u8981\u591a\u5c11\u6b211\u64cd\u4f5c\u663e\u7136\u8981\u6bd4\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u90fd\u6c42\u7b54\u6848\u8981\u6765\u7684\u65b9\u4fbf\u3002~~(\u6240\u4ee5\u8fd9\u9898\u8be2\u95ee\u4e0d\u662f\u5e94\u8be5\u653e1e6\u5417)~~\n\n\u8003\u8651\u7f51\u683c\u56fe\u6709\u7528\u7684\u683c\u5b50\u8303\u56f4\u3002\u867d\u7136\u8fd9\u9898\u683c\u5b50\u6570\u76ee\u9ad8\u8fbe5e7\uff0c\u4f46\u662f\u969c\u788d\u70b9\u53ea\u67091e3\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f1a\u6709\u5927\u91cf\u7a7a\u5217\u8fde\u5728\u4e00\u8d77\u4e14\u6beb\u65e0\u4f5c\u7528\u3002\u8003\u8651\u6309\u7167\u969c\u788d\u70b9\u6240\u5728\u5217\u548c\u5176\u524d\u4e00\u5217(\u7528\u4e8e\u8fdb\u884c\u81ea\u7531\u57301\u64cd\u4f5c\u8c03\u6574)\u8fdb\u884c\u79bb\u6563\uff0c\u5219\u6709\u7528\u683c\u5b50\u6570\u76ee\u4ec5\u4e3a1e5\u3002\n\n\u800c\u5efa\u56fe\u5c31\u975e\u5e38\u660e\u663e\u4e86:\u9996\u5148\u53bb\u6389\u90a3\u4e9b\u969c\u788d\u70b9\uff0c\u7136\u540e\u6bcf\u4e2a\u70b9\u5411\u4e0a\u4e0b\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a(inf,1)\u7684\u8fb9\uff0c\u5411\u53f3\u8fde\u4e00\u6761(1,0)\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u6709\u4e24\u4e2a\u68cb\u5b50\u91cd\u53e0\u7740\u5411\u53f3\u3002\u81f3\u4e8e\u4e00\u4e2a\u68cb\u5b50\u5411\u4e0b\u8de8\u8fc7\u53e6\u4e00\u4e2a\u68cb\u5b50\u7684\u60c5\u51b5\uff0c\u662f\u548c\u53e6\u4e00\u4e2a\u68cb\u5b50\u76f4\u63a5\u5411\u4e0b\u7684\u79fb\u52a8\u7b49\u4ef7\u7684\u3002\n\n\u6700\u540e\u4ece\u8d85\u7ea7\u6e90\u5411\u6700\u5de6\u8fb9\u4e00\u6392\u8fde(1,0)\uff0c\u6700\u53f3\u8fb9\u4e00\u6392\u5411\u8d85\u7ea7\u6e90\u8fde\u4e00\u6761(1,0)\uff0c\u501f\u52a9EK-spfa\u6bcf\u6b21\u53ea\u6269\u5c55\u4e00\u6761\u8def\u5f84\u7684\u4f18\u52bf\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5904\u7406\u51fa\u586bi\u4e2a\u683c\u5b50\u7684\u6700\u5c0f\u64cd\u4f5c\uff0c\u5373\u6d41\u91cf\u4e3ai\u65f6\u7684\u8d39\u7528\u3002\n\n\u590d\u6742\u5ea6O(\u80fd\u8fc7)\uff0cspfa\u52a0\u5165\u53cc\u7aef\u961f\u5217\u98df\u7528\u66f4\u4f18\n\n\u53e6\uff1a\u6b64\u9898\u6570\u636e\u8fc7\u6c34\uff0c\u4e0a\u4e0b\u8fde\u8fb9\u4e3a(1,1)\u90fd\u80fd\u8fc7\u3002\u3002\u3002\n\u6b64\u79cd\u8fde\u8fb9\u65b9\u6cd5\u7684hack\uff1a\n\n4 4 4 1\n\n1 1\n\n2 1\n\n3 3\n\n4 3\n\n999\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\nusing namespace std;\nconst int N=2e5+20,M=1e7,inf=1e9;\nint lj[M][3],nxt[M],fir[N],qq[N],dy[N],a[N],dl[M],jl[N],ycl[52],ans;;\nint b[N],x[N],y[N],ys[52][2002];\nint n,m,i,j,t,c,gs,q,bs,tou,wei;\nbool ed[N],eed[52][2002];\ninline void add(register int x,register int y,register int z,int c)\n{\n\tlj[++bs][0]=y;\n\tlj[bs][1]=c;\n\tlj[bs][2]=z;\n\tnxt[bs]=fir[x];\n\tfir[x]=bs;\n\tlj[++bs][0]=x;\n\tlj[bs][2]=-z;\n\tnxt[bs]=fir[y];\n\tfir[y]=bs;\n}\ninline void read(register int &x)\n{\n\tc=getchar();\n\twhile ((c<48)||(c>57)) c=getchar();\n\tx=c^48;c=getchar();\n\twhile ((c>=48)&&(c<=57))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n}\nbool spfa()\n{\n\tregister int x,i;\n\tmemset(jl+1,0x3f,t+1<<2);\n\tjl[dl[tou=wei=(M>>1)]=0]=0;\n\twhile (tou<=wei)\n\t{\n\t\ted[x=dl[tou++]]=0;\n\t\tfor (i=fir[x];i;i=nxt[i]) if ((lj[i][1])&&(jl[lj[i][0]]>jl[x]+lj[i][2]))\n\t\t{\n\t\t\tjl[lj[i][0]]=jl[x]+lj[i][2];\n\t\t\tqq[lj[i][0]]=x;\n\t\t\tdy[lj[i][0]]=i;\n\t\t\tif (!ed[lj[i][0]])\n\t\t\t{\n\t\t\t\ted[lj[i][0]]=1;\n\t\t\t\tif (lj[i][2]==1) dl[++wei]=lj[i][0]; else dl[--tou]=lj[i][0];\n\t\t\t}\n\t\t}\n\t}\n\tif (jl[t]==jl[t+1]) return 0;\n\tfor (i=t;i;i=qq[i])\n\t{\n\t\tx=dy[i];\n\t\tans+=lj[x][2];\n\t\t--lj[x][1];++lj[x^1][1];\n\t}\n\treturn 1;\n}\nint main()\n{\n\tread(n);read(m);read(m);read(q);\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tread(x[i]);read(y[i]);\n\t\ta[i]=y[i];a[i+m]=y[i]-1;\n\t}\n\tm<<=1;\n\tsort(a+1,a+m+1);gs=0;\n\tfor (i=2;i<=m;i++) if (a[i]!=a[i-1]) b[++gs]=a[i];\n\tm>>=1;\n\tfor (i=1;i<=m;i++) eed[x[i]][lower_bound(b+1,b+gs+1,y[i])-b]=1;\n\tfor (i=1;i<=n;i++) for (j=1;j<=gs;j++) if (!eed[i][j]) ys[i][j]=++bs;\n\tt=++bs;\n\tbs=1;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tfor (j=1;j<=gs;j++) if (!eed[i][j])\n\t\t{\n\t\t\tif ((i<n)&&(!eed[i+1][j])) add(ys[i][j],ys[i+1][j],1,inf);\n\t\t\tif ((i>1)&&(!eed[i-1][j])) add(ys[i][j],ys[i-1][j],1,inf);\n\t\t\tif ((j<gs)&&(!eed[i][j+1])) add(ys[i][j],ys[i][j+1],0,1);\n\t\t}\n\t}\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tif (!eed[i][1]) add(0,ys[i][1],0,1);\n\t\tif (!eed[i][gs]) add(ys[i][gs],t,0,1);\n\t}\n\tfor (j=1;j<=n;j++) if (spfa()) ycl[j]=ans; else n=j-1;\n\twhile (q--)\n\t{\n\t\tread(i);\n\t\tprintf(\"%d\\n\",int(upper_bound(ycl+1,ycl+n+1,i)-ycl-1));\n\t}\n}\n```",
        "postTime": 1550161352,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5222 \u3010Game\u3011"
    }
]