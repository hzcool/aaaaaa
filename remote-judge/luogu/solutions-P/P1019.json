[
    {
        "content": "## \u9996\u5148\u5728\u9898\u610f\u4e0a\u53ef\u80fd\u6709\u4e9b\u8bef\u89e3\u3002\n\n- \u4e24\u4e2a\u5355\u8bcd\u5408\u5e76\u65f6\uff0c\u5408\u5e76\u90e8\u5206\u53d6\u7684\u662f**\u6700\u5c0f\u91cd\u53e0\u90e8\u5206**\n\n- **\u76f8\u90bb\u7684\u4e24\u90e8\u5206\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb**\u5c31\u662f\u8bf4\u5982\u679c\u5b58\u5728\u5305\u542b\u5173\u7cfb\uff0c\u5c31\u4e0d\u80fd\u6807\u8bb0\u4e3a\u4f7f\u7528\u8fc7\u3002\n\n- \u6bcf\u4e2a\u5355\u8bcd\u6700\u591a\u51fa\u73b0\u4e24\u6b21.\n\n(\u5176\u5b9e\u4e5f\u5c31\u662f\u8bfb\u9898\u95ee\u9898\u3002\u8fd9\u4e9b\u90fd\u662f\u6211\u6240\u72af\u7684\u9519\u8bef\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u6ce8\u610f\u4e00\u4e0b)\n\n\u597d\u4e86\u3002\u7136\u540e\u662f\u89e3\u9898\u601d\u8def\u3002\n\n\u9996\u5148\u662f\u9884\u5904\u7406\uff0c\u7528yc[i][j]\u6765\u5b58\u50a8 \u7b2ci\u4e2a\u5355\u8bcd \u540e\u8fde\u63a5 \u7b2cj\u4e2a\u5355\u8bcd \u7684 \u6700\u5c0f\u91cd\u53e0\u90e8\u5206\uff08mt\u51fd\u6570\uff09\n\n\u540e\u6765\u9884\u5904\u7406\u5b8c\u4e86\u4e4b\u540e\u5c31\u662f\u6df1\u641c:\n\n\u5148\u4ece\u7b2c\u4e00\u4e2a\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u770b\u4e00\u770b\u54ea\u4e2a\u5355\u8bcd\u662f\u6307\u5b9a\u5b57\u6bcd\u4e3a\u5f00\u5934\u7684\uff0c\u4f5c\u4e3a\u6df1\u641c\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd\uff0c\u540c\u65f6\u6807\u8bb0\u4f7f\u7528\u8fc7\u4e00\u6b21\uff08vis[i]++)\n\n\u7136\u540e\u7ee7\u7eed\u641c\u5427\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\u3002 mt\u51fd\u6570\u53ef\u80fd\u6709\u70b9\u96be\u7406\u89e3\u3002\u62ff\u8349\u7eb8\u6a21\u62df\u4e00\u4e0b\u5c31\u80fd\u5f88\u76f4\u89c2\u77e5\u9053\u5728\u5e72\u4ec0\u4e48\u4e86\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<string>\n#include<cmath> \nusing namespace std;\nint n;//\u5355\u8bcd\u6570 \nstring tr[30];//\u5b58\u50a8\u5b57\u7b26\u4e32 \nint yc[30][30];//\u4e24\u4e2a\u5b57\u6bcd\u7684\u6700\u5c0f\u91cd\u53e0\u90e8\u5206 \nint vis[30];//\u5224\u65ad\u5355\u8bcd\u4f7f\u7528\u9891\u7387. \nint mt(int x, int y){//mt\u51fd\u6570\uff0c\u8fd4\u56dex\u5355\u8bcd\u540e\u8fde\u63a5\u4e00\u4e2ay\u5355\u8bcd\u7684\u6700\u5c0f\u91cd\u53e0\u90e8\u5206 \n    bool pp=true; \n    int ky=0;\n    for(int k=tr[x].size()-1;k>=0;k--){//\u4ecex\u5355\u8bcd\u5c3e\u90e8\u5411\u524d\u770b\u770b\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\u662f\u4ece\u54ea\u91cc\u5f00\u59cb\u7684\uff0c\u4ee5\u4e3a\u56e0\u4e3a\u662f\u5012\u7740\u6765\uff0c\u6240\u4ee5\u4fdd\u8bc1\u662f\u6700\u5c0f\u7684 \n        for(int kx=k;kx<tr[x].size();kx++){/ \n            if(tr[x][kx]!=tr[y][ky++]){\n                pp=false;\n                break;\n            }\n        }\n        if(pp==true){//\u5982\u679c\u8bf4\u5f53\u524d\u4ee5k\u4e3a\u5f00\u5934\u7684\u524d\u4e00\u4e2a\u5355\u8bcd\u540e\u7f00 ,\u662f\u540e\u9762\u5355\u8bcd\u7684\u524d\u7f00\uff0c\u5c31\u9a6c\u4e0a\u8fd4\u56de\u91cd\u53e0\u90e8\u5206\u3002\uff08tr[x].size()-k\u662f\u627e\u51fa\u6765\u7684\u89c4\u5f8b\uff09\n            return tr[x].size()-k;        } \n        ky=0;\n        pp=true;//\u4e0d\u884c\u5c31\u7ee7\u7eed\n    }\n    return 0;\n}//\u53ef\u80fd\u8fd9\u91cc\u6709\u70b9\u96be\u7406\u89e3\u3002\u53ef\u4ee5\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\nchar ch;//\u5f00\u5934\u5b57\u6bcd \nint ans=-1;//\u7b54\u6848 \nint an=0;//\u6bcf\u6b21\u641c\u5230\u7684\u5f53\u524d\u6700\u957f\u4e32 \nvoid dfs(int p){//p\u4e3a\u5c3e\u90e8\u5355\u8bcd\u7f16\u53f7(p\u7684\u540e\u7f00\u5c31\u662f\u201c\u9f99\u201d\u7684\u540e\u7f00\uff0c\u56e0\u4e3ap\u5df2\u7ecf\u8fde\u63a5\u5230\u201d\u9f99\u201c\u540e\u9762\u4e86)\n    bool jx=false; \n    for(int j=1;j<=n;j++){\n        if(vis[j]>=2) continue;//\u4f7f\u7528\u4e86\u4e24\u6b21\u5c31\u8df3\u8fc7 \n        if(yc[p][j]==0) continue;//\u4e24\u5355\u8bcd\u4e4b\u95f4\u6ca1\u6709\u91cd\u5408\u90e8\u5206\u5c31\u8df3\u8fc7 \n        if(yc[p][j]==tr[p].size() || yc[p][j]==tr[j].size()) continue;//\u4e24\u8005\u5b58\u5728\u5305\u542b\u5173\u7cfb\u5c31\u8df3\u8fc7 \n        an+=tr[j].size()-yc[p][j];//\u4e24\u5355\u8bcd\u5408\u5e76\u518d\u51cf\u53bb\u6700\u5c0f\u91cd\u5408\u90e8\u5206 \n        vis[j]++;//\u4f7f\u7528\u4e86\u4e00\u6b21\n        jx=true;//\u6807\u8bb0\u4e00\u4e0b\u5f53\u524d\u5df2\u7ecf\u6210\u529f\u5339\u914d\u5230\u4e00\u4e2a\u53ef\u4ee5\u8fde\u63a5\u7684\u90e8\u5206 \n        dfs(j); //\u63a5\u4e0a\u53bb\n        an-=tr[j].size()-yc[p][j];//\u56de\u6eaf\uff0c\u5c31\u8981\u518d\u51cf\u56de\u53bb\u90a3\u4e00\u90e8\u5206\u957f\u5ea6 \n        vis[j]--;//\u56de\u6eaf,\u4f7f\u7528-- \n    }\n    if(jx==false){//jx==false\u8bf4\u660e\u4e0d\u80fd\u518d\u627e\u5230\u4efb\u4f55\u4e00\u4e2a\u5355\u8bcd\u53ef\u4ee5\u76f8\u8fde\u4e86 \n        ans=max(ans,an);//\u66f4\u65b0ans \n    }\n    return;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        cin>>tr[i];\n    cin>>ch; \n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n            yc[i][j]=mt(i,j); \n        }\n    }//\u9884\u5904\u7406yc\u6570\u7ec4\u3002yc[i][j]\u5c31\u8868\u793a\uff0ci\u5355\u8bcd\u540e\u8fde\u63a5\u4e00\u4e2aj\u5355\u8bcd\u7684\u6700\u5c0f\u91cd\u53e0\u90e8\u5206 \n    //\u6bd4\u5982 i\u8868\u793aat,j\u8868\u793aatt. yc[i][j]\u5c31\u4e3a2 \u4f46\u662fyc[j][i]\u5c31\u4e3a0.\n    //\u9884\u5904\u7406\u662f\u4e00\u4e2a\u5173\u952e\n     \n    for(int i=1;i<=n;i++){//\u4ece\u5934\u5230\u5c3e\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u4ee5\u6307\u5b9a\u5f00\u5934\u5b57\u6bcd\u4e3a\u5f00\u5934\u7684\u5355\u8bcd \n        if(tr[i][0]==ch){//\u5982\u679c\u6709\uff0c\u5c31\u4ee5\u5f53\u524d\u5355\u8bcd\u4e3a\u57fa\u51c6\u8fdb\u884c\u641c\u7d22\u3002 \n            vis[i]++;//\u4f7f\u7528\u8fc7\u4e00\u6b21 \n            an=tr[i].size();//\u66f4\u65b0\u5f53\u524d\u4e32\u957f\u5ea6 \n            dfs(i);//\u63a5\u4e0a\n            vis[i]=0;//\u6d88\u9664\u5f71\u54cd \n        } \n    } \n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u53e6\u5916\u601d\u8def\u662fzcy dalao\u6240\u63d0\u4f9b\u7684\u3002\u5728\u505a\u9898\u7684\u65f6\u5019\u53c8\u53d1\u73b0\u4e86\u8bb8\u591a\u65b0\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u8d34\u51fa\u6765\u65e2\u662f\u7ed9\u81ea\u5df1\u8b66\u793a\u4e5f\u5206\u4eab\u7ed9\u5927\u5bb6\u3002\n\nps:\u672c\u4eba\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6709\u4ec0\u4e48\u9519\u8bef\u8bf7\u6307\u51fa\u6765\u3002\u8c22\u8c22QAQ\n",
        "postTime": 1509075739,
        "uid": 29604,
        "name": "Hinanawi_Feng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "## \u9996\u5148\u660e\u786e\u51e0\u4e2a\u8981\u70b9\uff1a\n\n- \u4e00\u4e2a\u5355\u8bcd\u6700\u591a\u7528\u4e24\u6b21\n\n- \u5355\u8bcd\u53ef\u4ee5\u4e0d\u5168\u7528\u5b8c\n\n- \u4e0d\u53ef\u4ee5\u5305\u542b\uff1a\u4e00\u65e6\u5305\u542b\u4e86\u548c\u4e0d\u7528\u5c82\u4e0d\u662f\u4e00\u6837\n\n- \u6309\u7167\u8d2a\u5fc3\u539f\u5219\uff0c\u91cd\u53e0\u90e8\u5206\u5e94\u8be5\u8d8a\u5c11\u8d8a\u597d\n\n#### Talk is cheap, show me the code.\n\n\u4ee3\u7801\u7ed3\u6784\u975e\u5e38\u7b80\u660e\uff0ccanlink()\u8fd4\u56de\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\u7684\u957f\u5ea6\uff0c\u6ca1\u6709\u8fd4\u56de0\u3002solve()\u8fdb\u884cdfs\u641c\u7d22\u3002\u4e3b\u51fd\u6570\u8bfb\u53d6\u3001\u8c03\u7528\u548c\u8f93\u51fa\u3002\n\n\n\u5e0c\u671b\u5927\u5bb6\u80fd\u517b\u6210\u7b80\u6d01\u6e05\u6670\u7684\u4ee3\u7801\u98ce\u683c\uff0c\u975e\u5e38\u6709\u5229\u4e8e\u4e92\u76f8\u7684review\u548c\u81ea\u5df1\u67e5\u9519\n\n\n```\n\nC++\n\n#include<bits/stdc++.h>\nusing namespace std;\nstring str[20];\nint use[20], length = 0, n;\nint canlink(string str1, string str2) {\n\tfor(int i = 1; i < min(str1.length(), str2.length()); i++) {//\u91cd\u53e0\u957f\u5ea6\u4ece1\u5f00\u59cb\uff0c\u76f4\u5230\u6700\u77ed\u7684\u5b57\u7b26\u4e32\u957f\u5ea6-1\uff08\u56e0\u4e3a\u4e0d\u80fd\u5305\u542b\uff09\n\t\tint flag = 1;\n\t\tfor(int j = 0; j < i; j++)\n\t\t\tif(str1[str1.length() - i + j] != str2[j]) flag = 0;//\u9010\u4e2a\u68c0\u6d4b\u662f\u5426\u76f8\u7b49\n\t\tif(flag) return i;//\u68c0\u6d4b\u5b8c\u6bd5\u76f8\u7b49\u5219\u7acb\u5373return\n\t}\n\treturn 0;//\u65e0\u91cd\u53e0\u90e8\u5206\uff0c\u8fd4\u56de0\n}\nvoid solve(string strnow, int lengthnow) {\n\tlength = max(lengthnow, length);//\u66f4\u65b0\u6700\u5927\u957f\u5ea6\n\tfor(int i = 0; i < n; i++) {\n\t\tif(use[i] >= 2) continue;//\u8be5\u5b57\u7b26\u4e32\u4f7f\u7528\u6b21\u6570\u9700\u8981\u5c0f\u4e8e2\n\t\tint c = canlink(strnow, str[i]);//\u83b7\u53d6\u91cd\u53e0\u957f\u5ea6\n\t\tif(c > 0) {//\u6709\u91cd\u53e0\u90e8\u5206\u5c31\u5f00\u59cbdfs\n\t\t\tuse[i]++;\n\t\t\tsolve(str[i], lengthnow + str[i].length() - c);\n\t\t\tuse[i]--;\n\t\t}\n\t}\n}\nmain() {\n\tcin >> n;\n\tfor(int i = 0; i <= n; i++) use[i] = 0, cin >> str[i];//str[n]\u4e3a\u5f00\u59cb\u5b57\u7b26 \n\tsolve(' '+str[n], 1);//\u6709\u5fc5\u8981\u89e3\u91ca\u4e00\u4e0b\u5f00\u59cb\u9636\u6bb5\u3002\u4e3a\u4e86\u6307\u5b9a\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u4e14\u56e0\u4e3acanlink\u9700\u8981\u91cd\u53e0\u90e8\u5206\u5c0f\u4e8e\u6700\u77ed\u957f\u5ea6-1\uff0c\u6240\u4ee5\u8981\u4ece\u524d\u9762\u6dfb\u52a0\u4e00\u4e2a\u65e0\u610f\u4e49\u5145\u957f\u5ea6\u7684\u2018 \u2019\u3002\u8fd9\u6837\u5c31\u5f3a\u5236\u4e86canlink\u51fd\u6570\u6bd4\u8f83\u6700\u540e\u4e00\u4f4d\u3002\n\tcout << length ;\n}\n\n```",
        "postTime": 1518270869,
        "uid": 65707,
        "name": "Chardo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2\uff1a[http://www.cnblogs.com/OIerShawnZhou/](http://www.cnblogs.com/OIerShawnZhou/)\n\n\uff08\u6211\u5e73\u5e38\u5199\u7684\u9898\u89e3\u90fd\u4f1a\u5f80\u535a\u5ba2\u91cc\u53d1\uff0c\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u524d\u6765\u62cd\u7816\uff09\n\n\u8c28\u4ee5\u6b64\u9898\u89e3\u7eaa\u5ff5\u6211\u7684\u6d1b\u8c37\u6a59\u540d\uff0c\u6211\u4f1a\u7ee7\u7eed\u52aa\u529b\u3002\n\n\u57fa\u672c\u601d\u8def\u662f\u641c\u7d22\u3002\n\n\u5904\u7406\u7684\u96be\u70b9\u5728\u4e8e\u5bf9\u91cd\u53e0\u90e8\u5206\u7684\u5904\u7406\u3002\n\n\u5355\u8bcd\u7684\u4f7f\u7528\u6b21\u6570\u5f88\u597d\u5224\u65ad\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4\u5373\u53ef\uff0c\u548c\u6b63\u5e38\u5411dfs\u7684vis\u6570\u7ec4\u5dee\u4e0d\u591a\u3002\n\n\u4f46\u5bf9\u4e8e\u91cd\u53e0\u90e8\u5206\u7684\u5904\u7406\uff0c\u6211\u60f3\u7ec6\u8bf4\u4e00\u4e0b\u3002\n\n\u56e0\u4e3a\u8fde\u63a5\u8d77\u6765\u7684\u5355\u8bcd\u8981\u6700\u957f\uff0c\u6240\u4ee5\u5bf9\u6bd4\u662f\u9009\u62e9\u4ece\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u672b\u5c3e\u4e0e\u5f53\u524d\u5355\u8bcd\u7684\u5f00\u5934\u8fdb\u884c\u6bd4\u5bf9\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u7b26\u90a3\u5c31\u4e0d\u80fd\u5339\u914d\u3002\n\n\u8fd9\u91cc\u6211\u501f\u9274\u4e86\u4e00\u4f4d\u5927\u795e\u7684\u601d\u8def\uff0c\u4f7f\u7528\u4e00\u4e2acheck\u51fd\u6570\uff0c\u7528\u6765\u6bd4\u8f83\u4e24\u4e2a\u4e32s\u548cm\u7684\u957f\u5ea6\u4e3ak\u7684\u63a5\u53e3\u80fd\u4e0d\u80fd\u5339\u914d\u3002\n\n\u5224\u65ad\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u7b2c\u4e00\u79cd\u5c31\u662f\u6211\u7528\u7684\u8fd9\u6837\u6309\u5b57\u7b26\u6bd4\u8f83\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u5904\u4e0d\u5339\u914d\u7acb\u5373\u8fd4\u56defalse\u3002\u8fd8\u6709\u4e00\u4e2a\u65b9\u6cd5\u662f\u7528string\u91cc\u9762\u7684substr\uff0c\u6211\u5c31\u4e0d\u5c55\u5f00\u4e86\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u8bd5\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u5047\u8bbe\u63a5\u53e3\u957f\u5ea6\u4e3ak\uff0c\u4e32s\u7684\u957f\u5ea6\u4e3alens\uff0c\u7136\u540e\u6211\u4eec\u4ece0\u5230k\u679a\u4e3e\uff0c\u5224\u65ads[lens-k+i]\u662f\u4e0d\u662f\u7b49\u4e8em[i]\u3002\n\n\u8fd9\u4e2a\u5f0f\u5b50\u600e\u4e48\u6765\u7684\u5462\uff1f\u63a5\u53e3\u524d\u9762\u7684\u4e32\u662fs\uff0c\u540e\u9762\u7684\u4e32\u662fm\uff0c\u90a3\u4e48\u5f88\u663e\u7136\uff0cs\u4e32\u7684\u63a5\u53e3\u6700\u5f00\u59cb\u5e94\u8be5\u662flens-k\u5904\uff0c\u7136\u540e\u5728\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a\u679a\u4e3e\u7684i\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u626b\u63cf\u5230\u6240\u6709\u63a5\u53e3\u5b57\u7b26\uff08\u6211\u4eec\u7684i\u662f\u4ece0\u5f00\u59cb\u679a\u4e3e\u7684\uff09\u3002\n\n\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u95ee\u9898\u3002 \u5982\u679c\u6211\u4eec\u5728\u63a5\u9f99\u7684\u65f6\u5019\u53d1\u73b0\u6211\u4eec\u73b0\u5728\u8981\u63a5\u7684\u9f99\u8fd8\u4e0d\u5982\u4e4b\u524d\u67d0\u4e00\u6b21\u63a5\u8fc7\u7684\u957f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u63a5\u9f99\u65b9\u6848\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u6240\u4ee5\u8981\u820d\u53bb\uff0c\u8fd9\u4e2a\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\u3002\n\n\uff08\u60f3\u4e00\u4e0b\u6df1\u641c\u65f6\u7684\u904d\u5386\u8fc7\u7a0b\uff0c\u8fd9\u53e5\u8bdd\u4fbf\u4e0d\u96be\u7406\u89e3\uff09\n\n\u4f7f\u7528\u6211\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u53ef\u80fd\u6709\u4e00\u4e2a\u5947\u602a\u7684\u60f3\u6cd5\u6709\u540c\u5b66\u6ca1\u60f3\u5230\uff0c\u90a3\u5c31\u662f\u5728\u8fdb\u884c\u62fc\u63a5\u64cd\u4f5c\u65f6\uff0c\u8981\u6ce8\u610f\u4f7f\u7528\u7ed9\u5b9a\u7684\u4e32\u7684\u526f\u672c\uff08\u5373\u590d\u5236\u4e00\u4efd\u539f\u6765\u7684\u4e32\uff09\u8fdb\u884c\u62fc\u63a5\u5904\u7406\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u5982\u679c\u4f60\u628a\u539f\u4e32\u6539\u53d8\u4e86\uff0c\u800c\u4e14\u8fd9\u4e2a\u4e32\u8fd8\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u90a3\u5c31\u5b8c\u4e86\uff0c\u56de\u6eaf\u4e0d\u56de\u53bb\u4e86\u3002\n\n\u5177\u4f53\u5230\u64cd\u4f5c\u4e0a\uff0c\u9996\u5148\uff0c\u6211\u4eec\u4ece1\u5230n\u679a\u4e3e\u6bcf\u4e2a\u77ed\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5b83\u5df2\u7ecf\u88ab\u7528\u4e86\u4e24\u6b21\u5219continue\uff0c\u7136\u540e\u6211\u4eec\u6c42\u51fa\u5f53\u524d\u77ed\u4e32\u7684\u957f\u5ea6\uff0c\u4ece1\u5230\u8fd9\u4e2a\u957f\u5ea6\u679a\u4e3e\uff0c\u679a\u4e3e\u7684\u662f\u63a5\u53e3\u7684\u957f\u5ea6\uff08\u81ea\u7136\u662f\u63a5\u53e3\u8d8a\u77ed\u878d\u5408\u4e32\u8d8a\u957f\u561b\uff09 \u7136\u540e\u6267\u884c\u62fc\u63a5\u64cd\u4f5c\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6700\u5927\u957f\u5ea6\uff0c\u518d\u52a0\u4e0a\u56de\u6eaf\u5c31\u597d\u4e86\u3002\n\n\u62fc\u63a5\u64cd\u4f5c\u548ccheck\u51fd\u6570\u5f88\u50cf\uff0c\u5177\u4f53\u5230\u4ee3\u7801\u4e0a\u5927\u5bb6\u5c31\u80fd\u770b\u660e\u767d\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#define maxn 100\nusing namespace std;\nint n;\nint ans = 0;\nstring word[maxn];//\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u7528\u6765\u5b58\u50a8\u5355\u8bcd\nstring beginn;//\u7528\u6765\u5b58\u50a8\u5f00\u5934\u5b57\u7b26\nint used[maxn];//\u8fd9\u4e2a\u5c31\u662f\u7528\u6765\u8bb0\u5f55dfs\u65f6\u5019\u6bcf\u4e00\u4e2a\u5355\u8bcd\u88ab\u4f7f\u7528\u4e86\u51e0\u6b21\u7684\u6570\u7ec4\n\nbool check(string s,string m,int k){//\u91cd\u70b9\u4e00\uff0ccheck\u51fd\u6570\u5224\u65ad\u63a5\u53e3\u53ef\u884c\u6027\uff0ck\u4ee3\u8868\u63a5\u53e3\u957f\u5ea6\uff0c\u4ee5\u4e0b\u540c\n    int lens = s.length();\n    for (int i=0;i<k;i++){\n        if(s[lens-k+i]!=m[i])//\u6211\u8bb2\u8fc7\u4e86\n            return false;\n    }\n    return true;\n}\n\nvoid add(string &s,string m,int k){//\u62fc\u63a5\u64cd\u4f5c\uff0c\u56e0\u4e3a\u8981\u628am\u63a5\u5230s\u4e0a\uff0c\u6240\u4ee5\u5bf9\u4e8es\u4e32\u4e0d\u53ef\u4ee5\u4f20\u53c2\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u8bd5\u56fe\u6539\u53d8\u8fd9\u4e2a\u4e32\n    int lenm = m.length();\n    for (int i=k;i<lenm;i++)\n        s+=m[i];//C++\u5b57\u7b26\u4e32\u7c7b\u578b\u7279\u6027\u64cd\u4f5c\uff0c\u652f\u6301+=\u7b26\u53f7\u76f4\u63a5\u62fc\u63a5\n}\n\nvoid dfs(string now){//\u8fd9\u53ea\u662f\u4e00\u4e2a\u770b\u4f3c\u5e73\u6de1\u65e0\u5947\u7684dfs\n    int x = now.length();\n    ans = max(ans,x);//\u6bcf\u6b21\u62fc\u63a5\u4e4b\u540e\u66f4\u65b0\u4e00\u4e0b\u7b54\u6848\n    for (int i=1;i<=n;i++){\n        if (used[i]>=2)//\u5982\u679c\u6709\u4e00\u4e2a\u5355\u8bcd\u7528\u5b8c\u4e86\uff0c\u90a3\u8fd9\u4e2a\u5355\u8bcd\u5c31\u4e0d\u80fd\u9009\u4e86\n            continue;\n        int maxk = word[i].length();\n        for (int j=1;j<=maxk;j++){//\u679a\u4e3e\u63a5\u53e3\u957f\u5ea6\n            if (check(now,word[i],j)){\n                string temp = now;//\u91cd\u70b9\u4e8c\uff0c\u4f7f\u7528\u5b57\u7b26\u4e32\u526f\u672c\u8fdb\u884c\u62fc\u63a5\n                add(temp,word[i],j);\n                if (temp==now)//\u62fc\u5b8c\u4e4b\u540e\u5982\u679c\u53d1\u73b0\u957f\u5ea6\u6ca1\u589e\u52a0\uff0c\u4e5f\u5c31\u662f\u548c\u539f\u4e32\u4e00\u6837\uff0c\u90a3\u8fd9\u6b21\u62fc\u63a5\u6ca1\u6709\u610f\u4e49\uff0c\u526a\u6389\n                    continue;\n                used[i]++;\n                dfs(temp);\n                used[i]--;//\u8fd9\u53ea\u662f\u4e00\u4e2a\u770b\u4f3c\u5e73\u6de1\u65e0\u5947\u7684\u56de\u6eaf\n            }\n        }\n    }\n    \n}\n\nint main(){\n    cin >> n;\n    for (int i=1;i<=n;i++)\n        cin >> word[i];\n    cin >> beginn;\n    dfs(beginn);\n    \n    cout << ans << endl;\n    return 0;\n    \n}\n```",
        "postTime": 1504626854,
        "uid": 20197,
        "name": "ShawnZhou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "# \u5355\u8bcd\u63a5\u9f99\n\n**\u9898\u76ee\u63cf\u8ff0**\n\n\u5355\u8bcd\u63a5\u9f99\u662f\u4e00\u4e2a\u4e0e\u6211\u4eec\u7ecf\u5e38\u73a9\u7684\u6210\u8bed\u63a5\u9f99\u76f8\u7c7b\u4f3c\u7684\u6e38\u620f\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u77e5\u4e00\u7ec4\u5355\u8bcd\uff0c\u4e14\u7ed9\u5b9a\u4e00\u4e2a\u5f00\u5934\u7684\u5b57\u6bcd\uff0c\u8981\u6c42\u51fa\u4ee5\u8fd9\u4e2a\u5b57\u6bcd\u5f00\u5934\u7684\u6700\u957f\u7684\u201c\u9f99\u201d\uff08\u6bcf\u4e2a\u5355\u8bcd\u90fd\u6700\u591a\u5728\u201c\u9f99\u201d\u4e2d\u51fa\u73b0\u4e24\u6b21\uff09\uff0c\u5728\u4e24\u4e2a\u5355\u8bcd\u76f8\u8fde\u65f6\uff0c**\u5176\u91cd\u5408\u90e8\u5206\u5408\u4e3a\u4e00\u90e8\u5206**\uff0c\u4f8b\u5982 beast\u548castonish\uff0c\u5982\u679c\u63a5\u6210\u4e00\u6761\u9f99\u5219\u53d8\u4e3abeastonish\uff0c\u53e6\u5916\u76f8\u90bb\u7684\u4e24\u90e8\u5206\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb\uff0c\u4f8b\u5982at\u548c atide\u95f4\u4e0d\u80fd\u76f8\u8fde\u3002\n\n\n\n------------\n\n### \u8fd9\u9053\u9898\u9700\u8981\u6ce8\u610f\u4e09\u70b9\uff1a\n\n**1.\u6bcf\u4e2a\u5355\u8bcd\u6700\u591a\u5728\u9f99\u91cc\u51fa\u73b0\u4e24\u6b21**\n\n**2.\u4e0d\u80fd\u5728\u9f99\u91cc\u51fa\u73b0\u5305\u542b\u5173\u7cfb**\n\n**3.\u53ef\u4ee5\u6709\u91cd\u5408\u90e8\u5206**\n\n\n\n------------\n\n**\u91cd\u70b9**\u6765\u4e86\uff08~~\u6572\u9ed1\u677f~~\uff09\n\n**\u6c42\u91cd\u5408\u90e8\u5206\u53ef\u4ee5\u4ece\u5df2\u7ecf\u5728\u9f99\u91cc\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u9762\u5f00\u59cb\u679a\u4e3e\uff08\u4ece\u540e\u5411\u524d\u679a\u4e3e\uff09\u76f4\u5230\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u4e00\u4e2a\u5b57\u6bcd\u548c\u60f3\u8981\u63a5\u9f99\u7684\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u76f8\u7b49\uff0c\u628a\u90a3\u4e2a\u5355\u8bcd\u7684\u5b57\u6bcd\u7684\u4f4d\u7f6e\u8bb0\u5f55\u4e3ak\uff0c\u7136\u540e\u4ece\u5df2\u7ecf\u5728\u9f99\u91cc\u7684\u90a3\u4e2a\u5355\u8bcd\u4ecek\u5230\u5c3e\u8fdb\u884c\u5faa\u73af\u679a\u4e3e\uff0c\u540c\u65f6\u60f3\u8981\u63a5\u9f99\u7684\u5355\u8bcd\u4ece\u5934\u5230k\u8fdb\u884c\u679a\u4e3e\uff0c\u5982\u679c\u6709\u4e0d\u76f8\u7b49\u7684\u4e00\u4e2a\u5b57\u6bcd\u5c31\u8fd4\u56de0\uff0c\u5426\u5219\u8fd4\u56de\u90a3\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 -\uff08k + 1\uff09**\n\ncode~\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, vis[100001], ans, maxn, l[100001], p;\nstring s[10001];\nchar ch;\nint find(int x, int y)//\u662f\u5426\u80fd\u5408\u5e76 \n{\n    int lx = l[x];\n\tint ly = l[y];\n    for(int i = lx - 1; i >= 1; i--)\n    {\n        if(s[x][i] == s[y][0])//\u53d1\u73b0\u5b57\u6bcd\u76f8\u7b49\uff01 \n        {\n            int k = 0;\n            for(int j = i + 1; j <= lx - 1; j++)\n            {\n                k++;//\u540c\u65f6\u679a\u4e3e \n                if(s[x][j] != s[y][k])//\u6709\u4e00\u4e2a\u5b57\u6bcd\u4e0d\u76f8\u7b49\u5c31\u8fd4\u56de0 \n                {\n                \treturn 0;\n\t\t\t\t}\n            }\n            return ly - (k + 1);//\u5168\u76f8\u7b49\u8fd4\u56de\u957f\u5ea6 \n        }\n    }\n    return 0;\n}\nvoid dfs(int x)//\u641c\u7d22\u5355\u8bcd \n{\n    for(int i = 1; i <= n; i++)\n    {\n        if(vis[i] < 2 && find(x, i))//\u4e0d\u80fd\u7528\u4e24\u6b21\u4e14\u53ef\u4ee5\u63a5\u9f99 \n        {\n            vis[i]++;//\u7528\u7684\u6b21\u6570++ \n\t\t\tans += find(x, i);//\u52a0\u4e0a\u65b0\u5355\u8bcd\u7684\u957f\u5ea6 \n            dfs(i);//\u63a5\u7740\u8fd9\u4e2a\u5355\u8bcd\u7ee7\u7eed\u641c \n            vis[i]--;//\u56de\u6eaf \n\t\t\tans -= find(x, i);//\u56de\u6eaf \n        }\n    }\n    if(ans > p)//\u6c42\u6700\u5927 \n    {\n    \tp = ans;\n\t}\n}\nint main()\n{\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++)\n    {\n        cin>>s[i];\n        l[i] = s[i].length();//\u5b58\u4e0b\u6240\u6709\u5355\u8bcd\u7684\u957f\u5ea6 \n    }\n    cin>>ch;\n    for(int i = 1; i <= n; i++)\n    {\n        if(s[i][0] == ch)//\u5f97\u7b49\u4e8e\u9996\u5b57\u6bcd\u624d\u80fd\u63a5 \n        {\n            ans = l[i];//\u5148\u52a0\u4e0a\u9996\u5355\u8bcd\u7684\u957f\u5ea6 \n            vis[i]++;//\u9996\u5355\u8bcd\u7528\u8fc7\u4e86 \n            dfs(i);\n            vis[i]--;//\u56de\u6eaf \n            if(p > maxn)//\u6c42\u6700\u5927 \n            {\n            \tmaxn = p;\n\t\t\t}\n        }\n    }\n    printf(\"%d\", maxn);\n    return 0;\n}\n```\n\n\n# \u5df2AC",
        "postTime": 1556509244,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "# P1019 \u5355\u8bcd\u63a5\u9f99 \u9898\u89e3\n## Dalao\u7684\u601d\u8def\u6ca1\u770b\u61c2\uff0c\u4e8e\u662f\u6709\u4e86\u8fd9\u7bc7\u9898\u89e3\n\n\u5176\u5b9e\u8fd9\u9898\u4e0d\u96be\uff0c\u4f46\u662f\u8981\u628a\u601d\u8def\u7406\u6e05\u3002\n\n\u8fd9\u91cc\u8981\u7ea0\u6b63\u4e00\u4e0b\u9898\u76ee\uff0c\u5e76\u4e0d\u662f\u5305\u542b\u5173\u7cfb\u5c31\u4e0d\u80fd\u8fde\u63a5\uff0c\u6bd4\u5982 \nata \u548c atatata \u662f\u53ef\u4ee5\u8fde\u63a5\u7684\u3002\u56e0\u6b64\uff0c\u9898\u76ee\u5e94\u7406\u89e3\u4e3a\uff1a**\u82e5\u4e0d\u80fd\u4f7f\u5355\u8bcd\u957f\u5ea6\u589e\u52a0\uff0c\u5219\u8fd9\u4e24\u4e2a\u5355\u8bcd\u4e0d\u80fd\u63a5\u9f99**\u3002\n\n\u601d\u8def\u5982\u4e0b\uff1a\n\n1. \u5148\u8f93\u5165\uff0c\u7136\u540e\u76f4\u63a5\u8fdb\u5165DFS\u6df1\u641c\uff0c\u5728\u6df1\u641c\u91cc\u5224\u65ad\u662f\u8fd9\u4e24\u4e2a\u5355\u8bcd\u662f\u5426\u80fd\u8fde\u63a5\uff1b\n1. \u5224\u65ad\u4e24\u4e2a\u5355\u8bcd\u662f\u5426\u80fd\u63a5\uff0c\u9700\u8981\u4fdd\u8bc1\u8fd9\u4e24\u4e2a\u6570\u90fd\u6ca1\u88ab\u4f7f\u7528\u8fc7\u4e24\u6b21\uff0c\u90a3\u4e48\u9700\u8981\u7528\u6570\u7ec4\u5b58\u4e00\u4e0b\u6bcf\u4e2a\u6570\u4f7f\u7528\u7684\u6b21\u6570\uff1b\n1. \u82e5\u4e24\u4e2a\u6570\u53ef\u4ee5\u8fde\u63a5\uff0c\u8fdb\u5165\u5224\u65ad\u3002\u4e3a\u4e86\u4fdd\u8bc1\u9f99\u7684\u957f\u5ea6\u6700\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u9f99\u5934\u7684\u5c3e\u5df4\u5f00\u59cb\u641c\u7d22\uff0c\u5982\u679c\u5728\u8be5\u5b57\u7b26\u4e32\u7684\u7684\u4e0d\u662f\u7b2c1\u4f4d\u5b57\u7b26\u641c\u7d22\u5230\u4e86\u4e24\u4e2a\u5b57\u7b26\u76f8\u7b49\uff0c\u5219\u4e24\u4e2a\u5b57\u7b26\u53ef\u80fd\u53ef\u4ee5\u62fc\u63a5\uff0c\u4ece\u8fd9\u4e00\u6b21\u7684\u4f4d\u6570\u518d\u6b63\u8fc7\u6765\u641c\u7d22\uff0c\u641c\u5230\u6709\u4e00\u4f4d\u4e0d\u540c\u5c31\u8df3\u51fa\uff0c\u5426\u5219\u8ba9\u91cd\u590d\u90e8\u5206 +1 \uff0c\u8fd9\u6837\uff0c\u5f53\u524d\u7684\u4e0a\u4e00\u4e2a\u5355\u8bcd\u548c\u4e0b\u4e00\u4e2a\u5355\u8bcd\u80fd\u5426\u8fde\u63a5\u5c31\u5224\u65ad\u5b8c\u6210\u4e86\uff1b\n1. \u5982\u679c\u4e24\u4e2a\u5355\u8bcd\u53ef\u4ee5\u8fde\u63a5\uff0c\u4ee5\u65b0\u8fde\u63a5\u7684\u5355\u8bcd\u4f5c\u4e3a\u5f00\u5934\uff0c\u641c\u7d22\uff0c\u957f\u5ea6+\u8fd9\u4e2a\u5355\u8bcd\u957f\u5ea6-\u91cd\u590d\u90e8\u5206\u957f\u5ea6\uff1b\n1. \u8bb0\u5f97\u56de\u6eaf\uff1b\n\n\n\n------------\n\n- \u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6211\u5728struct\u91cc\u9762\u5b9a\u4e49\u4e00\u4e2a \n\n\t\tint left==2\uff1b\n        \n\u7136\u540e\u795e\u5947\u7684Devc++\u5c31\u7ed9\u4e86\u6211\u4e00\u4e32\u8b66\u544a\uff1b\u4e0d\u7ba1\u4e86\uff0c\u53cd\u6b63A\u4e86\uff1b\n\n\n------------\n\n\u7136\u540e\u91cd\u53e0\u90e8\u5206\u7684\u5224\u65ad\u5c31\u6210\u4e3a\u4e86\u96be\u70b9\uff0c\u4e0b\u9762\u6211\u7ed9\u51fa\u4ee3\u7801\u4ee5\u53ca\u89e3\u91ca\uff0c\u8010\u5fc3\u770b\u4e0b\u53bb\uff1a\n\n```cpp\n    struct word{\n        string line;\n        int left=2;\n    }w[25];\n    inline int find(int last,int next)\n    //last\u8868\u793a\u4e0a\u4e00\u4e2a\u5355\u8bcd\u5e8f\u53f7\uff0cnext\u8868\u793a\u8981\u8fde\u63a5\u7684\u5355\u8bcd\u5e8f\u53f7\n    //inline \u7528\u4e8e\u52a0\u901f\uff0c\u5199\u4e0d\u5199\u65e0\u6240\u8c13\n    {\n        int lenl=w[last].line.length(),lenn=w[next].line.length();\n    //\u8fd9\u4e2a\u957f\u5ea6\u53ef\u4ee5\u5728\u8f93\u5165\u7684\u65f6\u5019\u5c31\u5904\u7406\u597d\uff0c\u8fd9\u4e48\u5199\u9ebb\u70e6\u4e86\uff0c\u5927\u5bb6\u81ea\u884c\u4f18\u5316\uff1b\n        for(int i=lenl-1;i>=1;--i)//\u5012\u7740\u641c\n        {\n            if(w[last].line[i]==w[next].line[0])\n            {\n    \t\t//\u641c\u5230\u4e86\u6709\u4e00\u4f4d\u76f8\u540c\uff0c\u53ef\u80fd\u53ef\u4ee5\u8fde\u63a5\uff0c\u201c\u6b63\u201d\u8fc7\u6765\u641c\n                int k=i,j=0,cl=0;\n                while(j<lenn && k<lenl)\n    \t\t//\u8981\u4fdd\u8bc1\u641c\u7d22\u7684\u957f\u5ea6\u5c0f\u4e8e\u524d\u4e00\u4e2a\u5355\u8bcd\u548c\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u7684\u957f\u5ea6\uff0c\u6709\u4e00\u4e2a\u4e0d\u6210\u7acb\u90fd\u4ee3\u8868\u641c\u7d22\u7ed3\u675f\u4e86\uff1b\n                {\n                    if(w[last].line[k]==w[next].line[j])++cl;\n                    else return 0;\n                    ++k;++j;\n                }\n                if(k==lenl && j<lenn)return cl;\n    \t\t//\u5982\u679c\u524d\u4e00\u4e2a\u5355\u8bcd\u641c\u5230\u4e86\u6700\u540e\u4e00\u4e2a\uff0c\u5e76\u4e14\u641c\u5230\u7684\u5c0f\u4e8e\u540e\u9762\u90a3\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\uff08\u4e0d\u7136\u5c31\u5305\u542b\u5728\u8fd9\u4e2a\u5355\u8bcd\u91cc\u9762\uff0c\u4e0d\u80fd\u4f7f\u9f99\u957f\u5ea6\u589e\u52a0\uff0c\u65e0\u6548\uff0c\u4e0d\u80fd\u8fde\u63a5\uff09\uff0c\u5c31\u8fd4\u56de\u91cd\u590d\u7684\u503c\n                else return 0;\n    \t\t//\u5426\u5219\u641c\u5230\u4e00\u4e2a\u4e0d\u4e00\u6837\uff0c\u8fd4\u56de0\uff0c\u91cd\u53e0\u90e8\u5206\u4e3a0\uff1b\n            }\n        }\n        return 0;\n        //\u628a\u524d\u4e00\u4e2a\u5355\u8bcd\u641c\u5b8c\u4e86\u8fd8\u6ca1\u627e\u5230\uff0c\u4e5f\u4ee3\u8868\u4e0d\u80fd\u8fde\u63a5\uff0c\u91cd\u53e0\u90e8\u52060\uff1b\n    }\n```\n\n- \u7136\u540eDFS\u4e0d\u7528\u8bb2\u4e86\uff0c\u5224\u65ad\u8fd4\u56de\u503c\u662f\u5426\u4e3a\u771f\uff0c\u4e3a\u771f\u5c31\u7ee7\u7eed\u641c\u7d22\u8fd9\u4e2a\u5355\u8bcd\u7684\u4e0b\u4e00\u4e2a\uff0c\u5426\u5219\u7ee7\u7eed\u5faa\u73af\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6807\u5fd7\u53d8\u91cf\u4e3a false \uff0c\u80fd\u7ee7\u7eed\u641c\u5c31\u53d8\u6210 true\uff0c\u5426\u5219\u4fdd\u6301\u539f\u6765\u7684 false\uff0c\u4ee3\u8868\u641c\u5b8c\u4e86\uff0c\u6ca1\u6709\u7ee7\u7eed\u80fd\u8fde\u63a5\u7684\u6570\uff0c**\u6700\u5927\u503c\u53d6\u4e0a\u4e00\u6b21\u6700\u5927\u503c\u548c\u8fd9\u6b21\u957f\u5ea6\u4e2d\u7684\u6700\u5927\u503c**\u3002\n\n\u7ed9\u51fa\u7a0b\u5e8f\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n  //\u8ba4\u771f\u770b\uff0c\u675c\u7edd\u6284\u88ad\n  #include<cstdio>\n  #include<iostream>\n  #include<string>\n  using namespace std;\n  struct word{\n      string line;\n      int left=2;//\u5b9a\u4e49\u6bcf\u4e2a\u5355\u8bcd\u7684\u521d\u59cb\u6b21\u6570\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6709\u8b66\u544a\uff09\uff1b \n  }w[25];\n  int n,maxA;\n  inline int find(int last,int next)//\u89e3\u91ca\u8fc7\u4e0d\u89e3\u91ca\u4e86\uff1b \n  {\n      int lenl=w[last].line.length(),lenn=w[next].line.length();\n      for(int i=lenl-1;i>=1;--i)\n      {\n          if(w[last].line[i]==w[next].line[0])\n          {\n              int k=i,j=0,cl=0;\n              while(j<lenn && k<lenl)\n              {\n                  if(w[last].line[k]==w[next].line[j])++cl;\n                  else return 0;\n                  ++k;++j;\n              }\n              if(k==lenl && j<lenn)return cl;\n              else return 0;\n          }\n      }\n      return 0;\n  }\n  inline void dfs(int now,int length)\n  {\n      bool flag=false;//\u6240\u8c13\u7684\u6807\u5fd7\u53d8\u91cf \n      for(int i=1;i<=n;i++)\n      {\n          if(!w[i].left)continue;//\u4e00\u4e2a\u5355\u8bcd\u53ea\u80fd\u7528\u4e24\u6b21\uff1b \n          else\n          {\n              int x=find(now,i);\n              if(x)\n              {\n                  flag=true;//\u641c\u5230\u53d8\u6210\u771f \n                  --w[i].left;\n                  length+=(w[i].line.length()-x);\n                  dfs(i,length);\n                  ++w[i].left;\n                  length-=(w[i].line.length()-x);\n                  //\u8fd9\u8fb9\u4e0d\u4ec5\u7f16\u53f7\u8981\u56de\u6eaf\uff0c\u957f\u5ea6\u4e5f\u8981\u56de\u6eaf\uff08\u5361\u4e86\u6211\u5f88\u4e45\uff09\n                  //\u81f3\u4e8e\u4e3a\u4ec0\u4e48\uff0c\u5c31\u662f\u56e0\u4e3adfs\u7ed3\u675f\uff0c\u8fd4\u56de\u5230\u4e86\u8fd9\u91cc\uff0c\u90a3\u4e48dfs\u8fd9\u4e00\u8d9f\u5b8c\u4e86\uff0c\u8fd9\u4e2a\u957f\u5ea6\u548c\u6b21\u6570\u8fd8\u8981\u7528\u5230\u4e0b\u4e00\u6b21\u641c\u7d22\u5f53\u4e2d\u53bb\u3002 \n              }\n              else flag=false;//\u6807\u5fd7\u53d8\u91cf\u4e3a\u5047\u5c31\u662f\u641c\u5b8c\u4e86\uff0c\u6ca1\u6709\u53ef\u8fde\u63a5\u5355\u8bcd\uff1b \n          }\n      }\n      if(!flag) maxA=max(maxA,length);\n\n  }\n  int main()\n  {\n      scanf(\"%d\",&n);\n      //for(int i=1;i<=n;i++)w[i].left=2;\n      for(int i=1;i<=n;i++)cin>>w[i].line; \n      char p=getchar();cin>>p;\n      //\u8f93\u5165\u5b8c\u6210\uff1b \n      for(int i=1;i<=n;i++)\n      {\n          if(w[i].line[0]==p)\n          {\n              --w[i].left;\n              dfs(i,w[i].line.length());\n              ++w[i].left;\n              //\u8fd9\u8fb9\u4e5f\u8981\u56de\u6eaf\uff0c\u540c\u4e0a\u3002 \n          }\n      }\n      printf(\"%d\",maxA);//\u6700\u540e\u8f93\u51fa\u6700\u5927\u503c\uff1b \n      return 0;\n  }\n```\n\n\u6211\u89c9\u5f97\u6211\u5199\u7684\u7a0b\u5e8f\u53ef\u8bfb\u6027\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u4e0d\u59a8\u70b9\u4e2a\u8d5e\uff1f\n------------\n",
        "postTime": 1555938929,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "### \u91cd\u70b9\uff1a\u5355\u8bcd\u91cd\u53e0\u7684\u90e8\u5206\u4e0d\u597d\u64cd\u4f5c\n\n\u5728\u641c\u7d22\u7684\u57fa\u7840\u4e0a\u4ee3\u7801\u9700\u8981\u6709\u6240\u4fee\u6539\u3002\n\n\u9996\u5148\uff0c\u9898\u76ee\u5305\u542b\u7684\u63a5\u9f99\u8981\u6c42\u5927\u81f4\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a1.\u540c\u4e00\u4e2a\u5355\u8bcd\u6700\u591a\u51fa\u73b02\u6b21  2.\u76f8\u90bb\u7684\u4e24\u90e8\u5206\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb  3.\u5728\u4e24\u4e2a\u5355\u8bcd\u76f8\u8fde\u65f6\uff0c\u5176\u91cd\u5408\u90e8\u5206\u5408\u4e3a\u4e00\u90e8\u5206\u3002\n\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u60f3\u5230\uff0c\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u7528\u4e8e\u5b58\u50a8\u5404\u4e2a\u5355\u8bcd\u7684\u6570\u636e\uff0c\u5305\u62ec\u5355\u8bcd\u672c\u8eab\uff0c\u5b83\u7684\u5b9e\u9645\u957f\u5ea6\u4ee5\u53ca\u53ef\u4f9b\u4f7f\u7528\u7684\u5269\u4f59\u6b21\u6570\uff08\u521d\u59cb\u503c\u4e3a2\uff09.\u5982\u4e0b\uff1a\n\n    \n \n \n```cpp\n    struct words\n    {\n        int left = 2, tail = 0;            //\u5269\u4f59\u7684\u4f7f\u7528\u6b21\u6570 \u5355\u8bcd\u5b9e\u9645\u957f\u5ea6\n        char word[101];                    //\u5185\u5bb9\n    }words[22];\n```\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u53d8\u91cfstart\u7528\u6765\u5b58\u50a8\u5f00\u5934\u7684\u5b57\u6bcd\uff0c\u7136\u540e\u5373\u53ef\u5f00\u59cb\u641c\u7d22\uff0c\u7531\u4e8estart\u5f53\u4e2d\u7684\u5b57\u7b26\u5e76\u4e0d\u4f1a\u88ab\u8ba1\u5165\u603b\u957f\u5ea6\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u901a\u8fc7\u4e00\u4e2a\u5faa\u73af\uff0c\u627e\u5230\u7b26\u5408\u9898\u610f\u7684\u5355\u8bcd\uff0c\u7136\u540e\u518d\u4ee5\u8fd9\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u5f00\u5934\uff0c\u8fdb\u884c\u6df1\u641c\u3002\n     \n    \n\n```cpp\n     cin >> start;\n        for (int i = 0; i < wordTot; i++)\n            if (words[i].word[0] == start)\n            {\n                words[i].left--;            \n                dfs(words[i].word, words[i].tail);        //\u76ee\u524d\u9f99\u4e2d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd \u957f\u5ea6\n                words[i].left++;\n            }\n```\n\u7531\u4e8e\u5355\u8bcd\u63a5\u9f99\u4e2d\u76f8\u90bb\u7684\u4e24\u90e8\u5206\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb\uff0c\u6240\u4ee5\u65e0\u8bba\u9f99\u6709\u591a\u957f\uff0c\u53ea\u9700\u8981\u8003\u8651\u6700\u540e\u4e00\u4e2a\u52a0\u5165\u7684\u5355\u8bcd\u80fd\u591f\u548c\u90a3\u4e9b\u5355\u8bcd\u62fc\u63a5\u5373\u53ef\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u51fd\u6570juj\u6765\u5224\u65ad\u4e24\u4e2a\u5355\u8bcd\u4e4b\u95f4\u91cd\u5408\u90e8\u5206\u957f\u5ea6\u7684\u6700\u5c0f\u503c\u3002\n\n     \n    \n```cpp\n     int juj(char a[], char b[])\n    {\n        int al = strlen(a), bl = strlen(b), j;\n        bool flag = true;\n        for (int i = 1; i < al && i < bl; i++)\n        {\n            flag = true;\n            for (j = 0; j < i; j++)\n                if (a[al - i + j] != b[j]) { flag = false; break; }\n            if (flag)\n                return i;\n        }\n        return 0;\n    }\n```\n\u8fd9\u4e2a\u51fd\u6570\u4e3b\u8981\u7684\u539f\u7406\u662f\uff1a\u5728a\uff0cb\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f53\u4e2d\u4e00\u4e2a\u4e2a\u5730\u5c1d\u8bd5\u53ef\u80fd\u91cd\u5408\u90e8\u5206\u7684\u957f\u5ea6\uff0c\u5e76\u628a\u8fd9\u4e2a\u957f\u5ea6\u4f5c\u4e3a\u4e00\u4e2a\u6570\u503c\u8fd4\u56de\u3002\u5982\u679c\u8fd9\u4e2a\u957f\u5ea6\u5df2\u7ecf\u4e0d\u5c0f\u4e8e\u5f53\u4e2d\u6700\u77ed\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u6ca1\u6709\u7b26\u5408\u9898\u610f\u7684\u91cd\u5408\u90e8\u5206\uff0cjuj\u5c06\u8fd4\u56de0\u3002\n \n\u5904\u7406\u597d\u4e86\u5355\u8bcd\u91cd\u5408\u90e8\u5206\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u641c\u7d22\u4e86\u3002\u8fd9\u90e8\u5206\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u7167\u7740\u6df1\u641c\u7684\u4f2a\u4ee3\u7801\u6a21\u677f\u8fdb\u884c\u586b\u5145\u76f8\u5e94\u7684\u4ee3\u7801\u5373\u53ef\u3002\n\n     \n    \n```cpp\n     void dfs(char tail[], int num)\n    {\n        _max = max(_max, num);        //\u66f4\u65b0\u6700\u5927\u503c\n        int a;                        //\u4e24\u4e2a\u5355\u8bcd\u91cd\u5408\u90e8\u5206\u7684\u957f\u5ea6\n        for (int i = 0; i < wordTot; i++)\n            if (words[i].left > 0)\n            {\n                a = juj(tail, words[i].word);\n                if (a != 0)            //\u5224\u65ad\u662f\u5426\u7b26\u5408\u9898\u610f\n                {\n                    words[i].left--;\n                    dfs(words[i].word, num + words[i].tail - a);        //\u4e0b\u4e00\u6b65\u641c\u7d22\n                    words[i].left++;\n                }\n            }\n    }\n```\n\u8fd9\u6837\uff0c\u7a0b\u5e8f\u5c31\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n \n    \n    \n    \n    \n    \n    \n    \n    \n    \n```cpp\n    #include<iostream>\n    #include<cstring>\n    #include<algorithm>\n    using namespace std;\n    int wordTot, _max = 0;\n    struct words\n    {\n        int left = 2, tail = 0;            //\u5269\u4f59\u7684\u4f7f\u7528\u6b21\u6570 \u5355\u8bcd\u5b9e\u9645\u957f\u5ea6\n        char word[101];                    //\u5185\u5bb9\n    }words[22];\n    int juj(char a[], char b[])\n    {\n        int al = strlen(a), bl = strlen(b), j;\n        bool flag = true;\n        for (int i = 1; i < al && i < bl; i++)\n        {\n            flag = true;\n            for (j = 0; j < i; j++)\n                if (a[al - i + j] != b[j]) { flag = false; break; }\n            if (flag)\n                return i;\n        }\n        return 0;\n    }\n    void dfs(char tail[], int num)\n    {\n        _max = max(_max, num);        //\u66f4\u65b0\u6700\u5927\u503c\n        int a;                        //\u4e24\u4e2a\u5355\u8bcd\u91cd\u5408\u90e8\u5206\u7684\u957f\u5ea6\n        for (int i = 0; i < wordTot; i++)\n            if (words[i].left > 0)\n            {\n                a = juj(tail, words[i].word);\n                if (a != 0)            //\u5224\u65ad\u662f\u5426\u7b26\u5408\u9898\u610f\n                {\n                    words[i].left--;\n                    dfs(words[i].word, num + words[i].tail - a);        //\u4e0b\u4e00\u6b65\u641c\u7d22\n                    words[i].left++;\n                }\n            }\n    }\n    int main()\n    {\n        char start;\n        cin >> wordTot;\n        for (int i = 0; i < wordTot; i++)\n        {\n            cin >> words[i].word;\n            words[i].tail = strlen(words[i].word);\n        }\n        cin >> start;\n        for (int i = 0; i < wordTot; i++)\n            if (words[i].word[0] == start)\n            {\n                words[i].left--;\n                dfs(words[i].word, words[i].tail);        //\u76ee\u524d\u9f99\u4e2d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd \u957f\u5ea6\n                words[i].left++;\n            }\n        cout << _max << endl;\n        return 0;\n}\n```",
        "postTime": 1514900882,
        "uid": 78371,
        "name": "Mickey_snow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "### \u8fd9\u5e94\u8be5\u662f\u9000\u5f79\u524d\u6700\u540e\u4e00\u7bc7\u9898\u89e3\u4e86\u5427\uff01\uff08\u771f\u597d\uff09\n\n#### \u601d\u8def\uff1adfs\u66b4\u641c \u8003\u8651\u4e00\u4e0b\u6700\u4f18\u7684\u60c5\u51b5 \u6bd4\u5982acac\u548cacacb \u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\n\n\u7b2c\u4e00\u4e2aac\u76f8\u8fde\u6216\u8005\u548c\u7b2c\u4e8c\u4e2aac\u60f3\u8fde\u3002\u663e\u800c\u6613\u89c1\u5c3d\u91cf\u8ba9\u957f\u5ea6\u8d8a\u957f\u8d8a\u597d\uff0c\u6240\u4ee5\u5982\u679c\u9047\u89c1\u8fd9\u6837\u7684\u60c5\u51b5\u5c31\u548c\u6700\u540e\u4e00\u4e2a\u60f3\u8fde\u3002\n\n#### \u7136\u540e\u5728\u8003\u8651\u5982\u4f55\u53bb\u641c \uff1a\n\n\u6211\u4eec1\u5230n\u5faa\u73af\u80fd\u8fde\u7684\u8fde\u8d77\u6765\u5728dfs\u4e00\u4e0b\u5982\u679c\u4e0d\u80fd\u8fde\u4e86\u81ea\u7136\u4f1a\u56de\u6eaf\u5230\u4e0a\u4e00\u6b65\u6765\u3002\u6211\u4eec\u53ea\u9700\u5728\u8fc7\u7a0b\u4e2d\u627e\u4e2a\u6700\u5927\u957f\u5ea6\u5373\u53ef\u3002\n\n### \u6700\u9ebb\u70e6\u7684\u5c31\u662f\u7136\u540e\u5224\u65ad\u8fd9\u662f\u4e0d\u662f\u5408\u6cd5\u7684\u548c\u91cd\u53e0\u7684\u957f\u5ea6\u662f\u591a\u5c11\n\n\n\u6bd4\u5982 acac \u548cacbce\u6765\u8bf4\u6211\u4eec\u7528a\u51fa\u73b0\u7684\u4f4d\u7f6e\u6765\u548cacbce\u7684\u5934\u6765\u6bd4\u5982\u679c\u76f8\u540c\u5c31++\uff1b\n\u76f4\u5230\u627e\u5230\u4e0d\u76f8\u540c\u6216\u8005\u5168\u90e8\u627e\u5b8c\u3002\u5982\u679c\u505c\u6b62\u7684\u4f4d\u7f6e\u662facac\u957f\u5ea6\u7684\u8bdd\u610f\u601d\u5c31\u662f\u5408\u6cd5\u7684\uff0c\u6700\u540e\u9009\u62e9\u4e00\u4e2a\u6700\u4f18\u7684\u3002\u5f53\u524d\u91cd\u53e0\u957f\u5ea6\u5c31\u662facac\u7684\u957f\u5ea6\u51cf\u53bb\u6211\u4eec\u521a\u5f00\u59cb\u7684\u4f4d\u7f6e\u3002\n\n### \u601d\u8def\u5927\u6982\u5c31\u662f\u8fd9\u6837\uff0c\u6700\u540e\u628a\u5f53\u524d\u7684\u603b\u957f\u5ea6\u51cf\u53bb\u603b\u91cd\u53e0\u7684\u957f\u5ea6\u53d6\u4e2amax\u5c31OK\u5566\uff01\n\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=30;\nint chu[N];\nstring t[N],str;\nint n,m,maxx;\nint gao(string x,string q)//\u627e\u662f\u5426\u53ef\u4ee5\u76f8\u8fde \n{\n\tfor(int i=x.size()-1;i>=0;i--)//\u5012\u7684\u627e\u627e\u5230\u4e00\u4e2a\u5c31\u9000\u51fa\u8fd9\u6837\u80af\u5b9a\u662f\u6700\u4f18\u7684 \n\t{\n\t\tif(x[i]==q[0])//\u5982\u679c\u548c\u5339\u914d\u5f00\u5934\u4e00\u6837\u5c31\u5f00\u59cb\u627e\u662f\u5426\u5408\u6cd5 \n\t\t{\n\t\t\tint l=i;//\u5f53\u524d\u5f00\u59cb\u7684\u4f4d\u7f6e \n\t\t\tfor(int j=0;j<q.size();j++){if(x[l]==q[j])l++;else break;}//\u5982\u679c\u4e00\u6837\u7684\u8bdd\u5c31\u4e00\u76f4\u627e\u5426\u5219\u5c31\u9000\u51fa\u6765 \n\t\t\tif(l==x.size())return l-i;//\u5982\u679c\u627e\u5b8c\u4e86\u5c31\u7b97\u51fa\u6709\u591a\u5c11\u4e2a\u662f\u5339\u914d\u7684\u8fd9\u4e2a\u5c31\u662f\u91cd\u590d\u7684\u503c \n\t\t}\n\t}\n\treturn 0;//\u6ca1\u6709\u5c31\u8fd4\u56de0\u56de\u53bb\uff1b\n}\nvoid dfs(int fu,string x)\n{\n\tmaxx=max(maxx,(int)x.size()-fu);//\u7528\u5b57\u7b26\u7684\u957f\u5ea6\u51cf\u53bb\u91cd\u590d\u7684\u957f\u5ea6 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint duan=0;\n\t\tif(chu[i]==2)continue;//\u5982\u679c\u7528\u8fc7\u4e24\u6b21\u5c31\u76f4\u63a5\u8df3 \n\t\tduan=gao(x,t[i]);//duan\u4e3a\u4ed6\u4eec\u91cd\u53e0\u7684\u957f\u5ea6 \n\t\tif(!duan)continue;//\u5982\u679c\u4e3a0\u6ca1\u91cd\u53e0\u5c31\u76f4\u63a5\u8df3\u8fc7 \n\t\tchu[i]++;//\u8fd9\u4e2a\u4f4d\u7f6e\u6807\u8bb0\u4e00\u4e0b\u8868\u793a\u7528\u8fc7 \n\t\tdfs(fu+duan,x+t[i]);//\u91cd\u53e0\u7684\u90e8\u5206\u76f8\u52a0\u5b57\u7b26\u4e32\u66f4\u65b0 \n\t\tchu[i]--;//\u56de\u6eaf \n\t}\n\treturn ;//\u6ca1\u627e\u6709\u4e00\u4e2a\u5339\u914d\u5c31\u8fd4\u56de \n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>t[i];//\u628a\u6bcf\u4e2a\u90fd\u5b58\u8d77\u6765 \n\tcin>>str;\n\tdfs(0,str);\n\tcout<<maxx;//\u6700\u5927\u957f\u5ea6 \n\treturn 0;\n}\n```\n",
        "postTime": 1573223824,
        "uid": 156737,
        "name": "\u5c0f\u5c0f\u602a\u4e0b\u58eb___",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "*\u5f53\u65f6\u4e00\u770b\u5230\u8fd9\u9898\uff0c\u849f\u84bb\u7684\u6211\u8fd8\u4ee5\u4e3a\u662fDP\uff0c\u7ed3\u679c\u53d1\u73b0\u6807\u7b7e\u662f\u641c\u7d22\u2026\u2026*\n\n\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5728\u4e8e\u601d\u8def\u548c\u9884\u5904\u7406\uff0c\u771f\u6b63\u7684\u641c\u7d22\u5b9e\u73b0\u8d77\u6765\u5e76\u4e0d\u96be\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u5f00\u4e00\u4e2adic\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u5355\u8bcd\u7684\u6700\u5c0f\u91cd\u590d\u90e8\u5206\uff0c\u8fd9\u6837\u641c\u7d22\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u67e5\u9605dic\u6570\u7ec4\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u518d\u8ba1\u7b97\u4e00\u904d\u3002\n\n\u9884\u5904\u7406\u662f\u957f\u8fd9\u6837\u5b50\u7684\uff1a\n```cpp\nvoid f(string a,string b,int x,int y)\n{\n    int a1=a.size()-1,b1=b.size()-1; \n    for(int i=0;i<=b1;i++)  //\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u679a\u4e3e \n    {\n        if(a[0]==b[i])  //\u5982\u679ca\u7684\u9996\u5b57\u6bcd\u548cb\u4e2d\u95f4\u7684\u5b57\u6bcd\u76f8\u540c \uff0c\u5219\u5224\u65ad\u5b83\u4eec\u80fd\u4e0d\u80fd\u63a5\u5728\u4e00\u8d77 \n        {\n            int pos=0,tot=0;  //pos\u662f\u5f53\u524da\u7684\u7b2c\u51e0\u4e2a\u5b57\u6bcd\uff0ctot\u662fa\u548cb\u7684\u91cd\u5408\u90e8\u5206\u957f\u5ea6 \n            for(int j=i;j<=b1;j++)\n            {\n                if(a[pos]==b[j])\n                {\n                    tot++;\n                    pos++;\n                    if(j==b1&&tot!=min(a1,b1)+1) //\u5982\u679c\u679a\u4e3e\u5230\u4e86\u6700\u540e\uff0c\u5e76\u4e14a\u548cb\u6ca1\u6709\u5305\u542b\u5173\u7cfb\uff0c\u8bf4\u660e\u53ef\u4ee5\u8fd9\u4e48\u63a5 \n                      dic[x][y]=tot;  //\u8bb0\u5f55\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\u7684\u957f\u5ea6 \n\t\t\t\t\t  \t\t\t\t  //\u4e4b\u6240\u4ee5\u4e0dbreak\uff0c\u662f\u56e0\u4e3a\u540e\u9762\u53ef\u80fd\u8fd8\u4f1a\u679a\u4e3e\u5230\u66f4\u5c0f\u7684\u63a5\u6cd5 \n                      \t\t\t\t  //\u6bd4\u5982 chsese \u548c sesettt \u663e\u7136 chsesesettt \u8981\u6bd4chsesettt\u66f4\u4f18 \n                }\n                else break;\n            }\n        }\n    }\n}\n```\n\u8fd9\u6837\u5c31\u628a\u6bcf\u4e2a\u5355\u8bcd\u7684\u76f8\u4e92\u91cd\u53e0\u90e8\u5206\u5168\u8bb0\u5f55\u4e0b\u6765\u4e86,\u6700\u540e\u7684\u5904\u7406\u51fa\u6765\u7684dic[x][y]\u662f**\u628ax\u63a5\u5728y\u540e\u9762\u7684\u91cd\u590d\u90e8\u5206\u957f\u5ea6**\n\n\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u641c\u7d22\u4e86\uff0c\u641c\u7d22\u672c\u8eab\u5e76\u4e0d\u96be\uff0c\u53ea\u9700\u8981\u6ce8\u610f\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u7528\u4e24\u6b21\uff0c\u4ee5\u53ca\u63a5\u4e0a\u65b0\u5355\u8bcd\u7684\u201c\u9f99\u201d\u7684\u957f\u5ea6\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint n,dic[21][21],vis[21],ans;\nstring words[21];\nchar s;\nvoid f(string a,string b,int x,int y)\n{\n    int a1=a.size()-1,b1=b.size()-1; \n    for(int i=0;i<=b1;i++)  //\u4ece\u7b2c\u4e00\u4e2a\u5f00\u59cb\u679a\u4e3e \n    {\n        if(a[0]==b[i])  //\u5982\u679ca\u7684\u9996\u5b57\u6bcd\u548cb\u4e2d\u95f4\u7684\u5b57\u6bcd\u76f8\u540c \uff0c\u5219\u5224\u65ad\u5b83\u4eec\u80fd\u4e0d\u80fd\u63a5\u5728\u4e00\u8d77 \n        {\n            int pos=0,tot=0;  //pos\u662f\u5f53\u524da\u7684\u7b2c\u51e0\u4e2a\u5b57\u6bcd\uff0ctot\u662fa\u548cb\u7684\u91cd\u5408\u90e8\u5206\u957f\u5ea6 \n            for(int j=i;j<=b1;j++)\n            {\n                if(a[pos]==b[j])\n                {\n                    tot++;\n                    pos++;\n                    if(j==b1&&tot!=min(a1,b1)+1) //\u5982\u679c\u679a\u4e3e\u5230\u4e86\u6700\u540e\uff0c\u5e76\u4e14a\u548cb\u6ca1\u6709\u5305\u542b\u5173\u7cfb\uff0c\u8bf4\u660e\u53ef\u4ee5\u8fd9\u4e48\u63a5 \n                      dic[x][y]=tot;  //\u8bb0\u5f55\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\u7684\u957f\u5ea6 \n\t\t\t\t\t  \t\t\t\t  //\u4e4b\u6240\u4ee5\u4e0dbreak\uff0c\u662f\u56e0\u4e3a\u540e\u9762\u53ef\u80fd\u8fd8\u4f1a\u679a\u4e3e\u5230\u66f4\u5c0f\u7684\u63a5\u6cd5 \n                      \t\t\t\t  //\u6bd4\u5982 chsese \u548c sesettt \u663e\u7136 chsesesettt \u8981\u6bd4chsesettt\u66f4\u4f18 \n                }\n                else break;\n            }\n        }\n    }\n}\nvoid dfs(int pos,int sum)\n{\n    ans=max(ans,sum);  //\u5b9e\u65f6\u66f4\u65b0ans \n    for(int i=1;i<=n;i++)\n    {\n        if(dic[i][pos]&&vis[i])\n        {\n            vis[i]--;\n            int suml=sum+words[i].size()-dic[i][pos]; //\u63a5\u4e0a\u65b0\u5355\u8bcd\"\u9f99\"\u7684\u957f\u5ea6\u4e3a=\u65e7\u7684\u957f\u5ea6+\u65b0\u5355\u8bcd\u957f\u5ea6-\u91cd\u590d\u90e8\u5206\u957f\u5ea6 \n            dfs(i,suml);  //\u63a5\u4e0a\u65b0\u5355\u8bcd\u7ee7\u7eed\u641c\u7d22 \n            vis[i]++;\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>words[i];\n        vis[i]=2; //\u521d\u59cb\u5316vis\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5355\u8bcd\u80fd\u7528\u4e24\u6b21 \n    }\t\n    cin>>s;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n      \tf(words[i],words[j],i,j); //\u9884\u5904\u7406dic\u6570\u7ec4 \n      \t\n    for(int i=1;i<=n;i++)\n    {\n        if(words[i][0]==s)  //\u627e\u5230\u5f00\u59cb\u90e8\u5206 \n        {\n            vis[i]--;\n            dfs(i,words[i].size()); //\u6df1\u641c \n            vis[i]++;\n        }  \n    }\n    cout<<ans;\n    \n    return 0;\n}\n```\n\n- \u5e7f\u544a\u65f6\u95f4\n\n\u5728\u4e0b\u7684[\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/34188/)\u548c[\u535a\u5ba2\u56ed\u535a\u5ba2](http://www.cnblogs.com/wxl-Ezio/)\n\n\n\n",
        "postTime": 1521862816,
        "uid": 34188,
        "name": "MorsLin",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "# \u672c\u9898\u662f\u4e00\u9053\u5f88\u8003\u9a8c\u4eba\u7684\u7ec6\u8282\u9898\n\u5bf9\u4e8e\u8fd9\u4e00\u9053\u9898\uff0c\u5efa\u8bae\u5927\u5bb6\u501f\u9274\u601d\u8def\u540e\u575a\u6301\u8c03\u51fa\u6765.\n# \u601d\u8def\n\uff11.\u6df1\u641c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5355\u8bcd\uff0c\u7b5b\u9009\u51fa\u6b63\u786e\u7b54\u6848\u3002\n\uff12.\u627e\u5230\u67d0\u4e00\u4e2a\u5355\u8bcd\u4e2d\u7684\u67d0\u4e00\u4e2a\u70b9\uff0c\u7b26\u5408\u9700\u8981\u63a5\u4e0a\u7684\u5355\u8bcd\u9f99\uff0c\n\u4ee5\u6b64\u4e3a\u57fa\u70b9\u76f8\u540e\u626b\uff0c\u7b5b\u9009\u51fa\u6700\u5927\u503c\u5373\u53ef\u3002\n# \u6ce8\u610f\n\uff11.\u6bcf\u4e2a\u5355\u8bcd\u6700\u591a\u51fa\u73b0\u4e24\u6b21.\n\uff12.\u76f8\u90bb\u7684\u4e24\u90e8\u5206\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb.\n(\u8fd9\u5c06\u6210\u4e3a\u6211\u4eec\u526a\u679d\uff0c\u6392\u9519\u7684\u4f9d\u636e)\n### \u8bf7\u5404\u4f4d\u795e\u7287\u4e0d\u803b\u4e0b\u770b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ans=0,n;//\u8bb0\u5f55\u7b54\u6848\u4e0e\u5355\u8bcd\u4e32\u6570\u3002\nint maxn=0;//\u7528\u4e8e\u7b5b\u9009\u6700\u5927\u503c\u3002\nint len[25];//\u8bb0\u5f55\u5355\u8bcd\u4e32\u957f\u5ea6\u3002\nchar a[25][25];//\u8bb0\u5f55\u5355\u8bcd\u77e9\u9635\u3002\nint t[25];//\u8bb0\u5f55\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\uff0ct<=2\u3002\nvoid dfs(int x)//\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5f00\u641c\uff01\n{\n\tint y=0;//\u8fd9\u4e2a\u662f\u7528\u6765\u5224\u65ad\u662f\u5426\u80fd\u591f\u5728\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u8981\u6c42(\u82e5y\u672a\u6539\u52a8\uff0c\u5219\u8bf4\u660e\u641c\u7d22\u5230\u4e86\u8fb9\u754c\u3002)\n\tfor(int i=1;i<=n;i++)\n\t{//\u904d\u5386\u6bcf\u4e00\u4e2a\u5355\u8bcd\u4e32\u3002\n\t\tif(t[i]<2)//\u4fdd\u8bc1\u6b21\u6570\u672a\u8d85\uff0c\u6ce8\u610f\u662f\u5c0f\u4e8e\uff12\u800c\u4e0d\u662f\u5c0f\u4e8e\u7b49\u4e8e\uff08\u82e5\u7b49\u4e8e\u5219\u5728\u4e4b\u540e\u518d\u88ab\u7528\u4e0a\u4f7f\u7528\u6570\u53d8\u4e3a\uff13\uff0c\u4e0d\u7b26\u8981\u6c42\u3002)\n\t\t\tfor(int j=0;j<len[x];j++)\n\t\t\t{//\u4ece\uff10\u5f00\u59cb\u904d\u5386\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u3002\n\t\t\t\tif(a[i][0]==a[x][j])\n\t\t\t\t{//\u627e\u5230\u7b2c\u4e00\u4f4d\u4e0e\u5f85\u63a5\u5355\u8bcd\u957f\u9f99\u67d0\u4e00\u4f4d\u76f8\u7b49\u7684\u5355\u8bcd\uff0c\u8bb0\u4e0b\u4f4d\u7f6e\uff0c\u626b\u3002\n\t\t\t\t\tif(j==0) \n\t\t\t\t\t{\n\t\t\t\t\t\tif(len[i]!=len[x]) continue;\n\t\t\t\t\t}//\u5224\u65ad\u4e00\u4e0b\uff0c\u662f\u5426\u4f1a\u91cd\u5408\u3002\uff08\u5176\u5b9e\u6709\u70b9\u5c0f\u95ee\u9898\u3002\uff09\n\t\t\t\t\tint l=1;\n\t\t\t\t\tbool b=0;\n\t\t\t\t\tfor(int h=j+1;h<len[x];h++)\n\t\t\t\t\t\tif(a[x][h]!=a[i][l++])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tb=1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}//\u82e5\u626b\u5230\u4e00\u4f4d\u4e0d\u76f8\u540c\uff0c\u5219\u4e0d\u5408\u6cd5\u3002\n\t\t\t\t\tif(b==1) continue;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ty++;ans+=len[i]-l;t[i]++;\n\t\t\t\t\t\t//\u6539\u53d8y\u503c\uff0c\u8868\u793a\u80fd\u627e\u5230\uff0c\u6ce8\u610fans+\u7684\u662flen[i]-j\u5355\u8bcd\u7684\u7b2c\u4e00\u4f4d\u662f\u4ece\uff10\u5f00\u59cb\u7684\u3002\n\t\t\t\t\t\tdfs(i);\n\t\t\t\t\t\ty--;ans-=len[i]-l;t[i]--;//\u56de\u6eaf\u4e00\u6ce2\u3002\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t}\n\tif(y==0)\n\t{\n\t\tif(ans>maxn) maxn=ans;\n\t\treturn;//\u82e5\u641c\u5b8c\uff0c\u53d6\u6700\u5927\u503c\u3002\n\t}\n}\nint main()\n{\n\t//freopen(\"dragon.in\",\"r\",stdin);\n\t//freopen(\"dragon.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",a[i]);\n\t\tlen[i]=strlen(a[i]);\n\t}\n\tscanf(\"%s\",a[n+1]);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i][0]==a[n+1][0])\n\t\t{//\u6ce8\u610f\u9898\u76ee\u6761\u4ef6\uff0c\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u9f99\u5934\u3002\n\t\t\tans=len[i];t[i]++;\n\t\t\tdfs(i);\n\t\t\tans=0;t[i]--;\n\t\t}\n\t}\n\tprintf(\"%d\",maxn);\n\treturn 0;\n}\n\n```",
        "postTime": 1540387253,
        "uid": 125880,
        "name": "PJone",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "# \u6ce8\uff1a\u672c\u9898\u4e0d\u4e00\u6837\u7684\u89e3\u6cd5\n\n## \u5176\u5b9e\u8fd9\u9053\u9898\u53ef\u4ee5\u72b6\u538bdp\u7684\n\n\u6211\u4eec\u5148\u8c08\u4e00\u4e0b\u600e\u4e48\u72b6\u538bdp\uff1a\n\n### \u72b6\u6001\u5b9a\u4e49\uff1a\n**$dp\\left[i\\right]\\left[j\\right]$\u8868\u793a\u60c5\u51b5i\u4e0b\u4ee5j\u53f7\u5355\u8bcd\u7ed3\u5c3e\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u957f\u5ea6**\n\n\u6211\u4eec\u53ef\u4ee5\u75281\u4e2a\u957f\u5ea6\u4e3an\u768401\u4e32\uff08\u5373\u4e8c\u8fdb\u5236\uff09\u8868\u793a\u5355\u8bcd\u4f7f\u7528\u60c5\u51b5\uff0c1\u8868\u793a\u4f7f\u7528\u8fc7\uff0c0\u8868\u793a\u672a\u4f7f\u7528\u3002\n\n\u4e3e\u51e0\u4e2a\u6817\u5b50\uff1a\n\n- n=4\u65f6\uff0c1101\u8868\u793a\u53ea\u4f7f\u7528\u8fc71\uff0c3\u548c4\u53f7\u5355\u8bcd\uff1b\n- n=5\u65f6\uff0c10010\u8868\u793a\u53ea\u4f7f\u7528\u8fc75\u53f7\u548c2\u53f7\u5355\u8bcd\u3002\n\n**\u6ce8\u610f**\uff1a\u5728\u6211\u5199\u7684\uff08\u4e0d\u5305\u62ec\u4f60\uff0901\u4e32\u4e2d\uff0c**\u7b2ci\u4f4d\u8868\u793a\u7684\u662f\u7b2cn-i+1\u53f7\u5355\u8bcd\u7684\u60c5\u51b5**\u539f\u56e0\u540e\u9762\u4f1a\u63d0\u5230\n\n### \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$dp\\left[next\\right]\\left[j\\right]=max\\{dp\\left[next\\right]\\left[j\\right], dp\\left[now\\right]\\left[k1...kn\\right]+len\\left[k1...kn\\right]\\left[j\\right]\\}$\n\n\u5176\u4e2dk1...kn\u8868\u793a\u679a\u4e3en\u4e2a\u5355\u8bcd\uff0c$len\\left[k\\right]\\left[j\\right]$\u8868\u793a\u5c06j\u53f7\u5355\u8bcd\u63a5\u5728k\u53f7\u540e\u9762\u957f\u5ea6\u7684\u589e\u52a0\u91cf\uff08\u53ef\u9884\u5904\u7406\uff09\n\n### dp\u90e8\u5206\u4ee3\u7801\n\n```\nfor(int i=1;i<(1<<n);i++){\\\\\u603b\u5171\u67092^n\u79cd\u4f7f\u7528\u60c5\u51b5\n    \tfor(int j=1;j<=n;j++){\n    \t\tif(i&(1<<(j-1)))continue;\\\\\u5224\u65adj\u5728i\u60c5\u51b5\u4e0b\u6709\u6ca1\u6709\u88ab\u4f7f\u7528\u8fc7\n    \t\tfor(int k=1;k<=n;k++){\n    \t\t\tif((i&(1<<(k-1)))&&len[k][j]!=-1&&dp[i][k]!=-1){\\\\\u5224\u65ad\u80fd\u5426\u8f6c\u79fb\uff1a1.k\u5728\u60c5\u51b5i\u4e0b\u4f7f\u7528\u4e86 2.j\u80fd\u63a5\u5728k\u540e\u9762\n    \t\t\t\tdp[i|(1<<(j-1))][j]=max(dp[i|(1<<(j-1))][j],dp[i][k]+len[k][j]);\\\\\u8f6c\u79fb\uff1anext=i|(1<<(j-1)),now=i;\n    \t\t\t\tans=max(ans,dp[i|(1<<(j-1))][j]);\\\\\u6ce8\u610f\u4e0d\u65ad\u66f4\u65b0\u6700\u7ec8\u7ed3\u679c\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n**\u8fd8\u6709\u4e00\u70b9\uff0c\u672c\u9898\u4e2d\u7531\u4e8e\u4e48\u4e2a\u5355\u8bcd\u53ef\u4ee5\u6700\u591a\u7528\u4e24\u6b21\uff0c\u6240\u4ee5\u5e94\u8be5\u5f00\u4e2a$2*n$\u957f\u5ea6\u7684\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u5355\u8bcd\u518d\u590d\u5236\u4e00\u904d**\n\n\u5176\u4ed6\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\u3002\u3002\n\n------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,len[1001][1001],dp[1<<16][17],ans;\nstring s[1001];\nchar tou;\nvoid pre(){\\\\\u9884\u5904\u7406len\u6570\u7ec4\uff0c\u6709\u70b9\u5c0f\u9ebb\u70e6\n\tfor(int i=1;i<=n;i++){\n        for(int j=1;j<=n;j++){\n        \tif(i==j)continue;\n            int lenans=0;\n            for(int lenth=1;lenth<min(s[i].size(),s[j].size());lenth++){\n                bool flag=true;\n                for(int i1=s[i].size()-lenth,j1=0;i1<=s[i].size()-1,j1<=lenth-1;i1++,j1++){\n                    if(s[i][i1]!=s[j][j1]){\n                        flag=false;\n                        break;\n                    }\n                }\n                if(flag==true)lenans=lenth;\n                if(lenans!=0)break;\n            }\n            if(lenans==0)len[i][j]=-1;\n            else len[i][j]=s[j].size()-lenans;\n        }\n    }\n}\nint main(){\n\tmemset(dp,-1,sizeof(dp));\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)cin>>s[i];\n    for(int i=n+1;i<=2*n;i++)s[i]=s[i-n];\\\\\u590d\u5236\n    n=n*2;\n    pre();\\\\\u9884\u5904\u7406\n    scanf(\"\\n%c\",&tou);\\\\\u8fd9\u91cc\u5f97\u52a0\u4e2a\"\\n\",\u56e0\u4e3a\u6570\u5b57\u8bfb\u5165\u4e4b\u540e\u540e\u9762\u8fd8\u6709\u4e2a\u6362\u884c\u7b26\n    for(int i=1;i<=n;i++){\\\\\u7279\u522b\u5904\u7406\u5f00\u5934\u5355\u8bcd\u7684\u60c5\u51b5\n    \tif(s[i][0]==tou){\n    \t\tdp[1<<(i-1)][i]=s[i].size();\n    \t\tans=max(ans,dp[1<<(i-1)][i]);\\\\\u6ce8\u610f\u8fd9\u91cc\u4e5f\u8981\u66f4\u65b0ans(\u6211\u88ab\u5361\u8fc7\u4e00\u6b21)\n\t\t}\n\t}\n    for(int i=1;i<(1<<n);i++){\\\\\u5f00\u59cbdp\n    \tfor(int j=1;j<=n;j++){\n    \t\tif(i&(1<<(j-1)))continue;\n    \t\tfor(int k=1;k<=n;k++){\n    \t\t\tif((i&(1<<(k-1)))&&len[k][j]!=-1&&dp[i][k]!=-1){\n    \t\t\t\tdp[i|(1<<(j-1))][j]=max(dp[i|(1<<(j-1))][j],dp[i][k]+len[k][j]);\n    \t\t\t\tans=max(ans,dp[i|(1<<(j-1))][j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n    return 0;\\\\\u5927\u529f\u544a\u6210\n}\n```",
        "postTime": 1549799831,
        "uid": 54298,
        "name": "\u7cea\u773e\u8126\u98b0\u7f77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u662f\u6709\u70b9\u56f0\u96be\u7684\u5b57\u7b26\u4e32\u7684\u6df1\u641c\u9898\uff0c\u611f\u89c9\u597d\u591a\u9898\u76ee\u4e00\u78b0\u4e0a\u5b57\u7b26\u4e32\u5c31\u53d8\u5f97\u9ebb\u70e6\u4e0d\u5c11\u3002\n\n~~\u53ef\u80fd\u662f\u6211\u592a\u5f31\u4e86~~\n\n\u8fd9\u9898\u6211\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\u2014\u2014\n\n\u9996\u5148\uff0c\u5148\u628a\u6bcf\u4e00\u6b21\u7684\u63a5\u9f99\u6240\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u5b58\u8d77\u6765\u3002\n\n\u7136\u540e\uff0c\u6bcf\u4e00\u6b21\u6df1\u641c\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u8bcd\uff0c\u770b\u5b83\u80fd\u5426\u63a5\u5230\u539f\u5b57\u7b26\u4e32\u540e\u3002\n```cpp\n        int flag=1;\n\tfor(int k=0;k<len-i;k++)\n\t  if(s[j][k]!=ans[i+k]) \n\t    flag=0;//\u770b\u662f\u5426\u53ef\u4ee5\u63a5\u4e0a\u53bb \n```\n\n\n\u518d\u7136\u540e\uff0c\u628a\u5b57\u7b26\u4e32\u63a5\u4e0a\u53bb\uff0c\u540c\u65f6\u51cf\u5c11\u90a3\u4e2a\u5355\u8bcd\u5269\u4f59\u53ef\u7528\u6b21\u6570\u3002\n```cpp\nfor(int k=wyc-i;k<wyq;k++) ans[len++]=s[j][k];//\u4f1a\u591a\u52a0\u4e00\u4e2alen\u503c \n\t\t\t\ta[j]--;//\u5355\u8bcd\u53ef\u7528\u5269\u4f59\u6b21\u6570\u5c11\u4e00\u6b21 \n```\n\n\n\u6700\u540e\uff0c\u6dfb\u4e0a\u56de\u6eaf\u3002\n\n\u6211\u8fd8\u8981\u8bf4\u4e00\u4e0b\u90a3\u4e2a\u5305\u542b\u95ee\u9898\uff1a\n\n### \u5176\u5b9e\u5305\u542b\u4e0d\u5305\u542b\u4e0d\u91cd\u8981\uff0c\u5305\u542b\u4e86\u8ddf\u4e0d\u7528\u5b83\u662f\u4e00\u6837\u7684\u3002\n\n\u6240\u4ee5\u6211\u5c31\u6ca1\u6709\u523b\u610f\u53bb\u5904\u7406\u5305\u542b\uff0c~~\u4e5f\u6709\u53ef\u80fd\u662f\u5904\u7406\u4e86\u6211\u81ea\u5df1\u5e76\u6ca1\u6709\u610f\u8bc6\u5230~~\uff0c\u671bdalao\u6307\u70b9\n\n\u6700\u540e\u9012\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,maxx=-1;\nint a[25]={0};\nchar c;\nchar s[25][100],ans[500];\nvoid dfs()\n{\n\tint len=strlen(ans);\n\tfor(int i=len-1;i>=0;i--)//\u4ece\u5df2\u7ecf\u63a5\u597d\u7684\u5355\u8bcd(?)\u7684\u672b\u5c3e\u5f00\u59cb\u627e \n\t{\n\t\tfor(int j=1;j<=n;j++)//\u904d\u5386\u53ef\u4ee5\u63a5\u4e0a\u53bb\u7684\u5355\u8bcd \n\t\t{\n\t\t\tif(len-i>strlen(s[j])) continue;//\u4f18\u5316\uff0c\u67e5\u5355\u8bcd\u4f1a\u5feb\u5f97\u591a \n\t\t\tint flag=1;\n\t\t\tfor(int k=0;k<len-i;k++)\n\t\t\t  if(s[j][k]!=ans[i+k]) \n\t\t\t\tflag=0;//\u770b\u662f\u5426\u53ef\u4ee5\u63a5\u4e0a\u53bb \n\t\t\tif(flag==1&&a[j]!=0)\n\t\t\t{\n\t\t\t\tint wyq=strlen(s[j]),wyc=len;\n\t\t\t\tfor(int k=wyc-i;k<wyq;k++) ans[len++]=s[j][k];//\u4f1a\u591a\u52a0\u4e00\u4e2alen\u503c \n\t\t\t\ta[j]--;//\u5355\u8bcd\u53ef\u7528\u5269\u4f59\u6b21\u6570\u5c11\u4e00\u6b21 \n\t\t\t\tif(maxx<len) maxx=len;\n\t\t\t\tdfs();\n\t\t\t\tfor(int k=wyc-i-1;k<wyq;k++) ans[len--]=0;//\u5220\u53bb\u52a0\u8fdb\u53bb\u7684\u5355\u8bcd\n\t\t\t\t//\u4f46\u4f1a\u628a\u6700\u53f3\u8fb9\u7684\u4f4d\u7f6e\u591a\u51cf\u4e00\u4e2a \n\t\t\t\tlen++;//\u8981\u52a0\u4e00\u8865\u9f50 \n\t\t\t\ta[j]++;//\u56de\u6eaf \n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",s[i]);\n\t\ta[i]=2;//\u4fdd\u8bc1\u6bcf\u4e2a\u5355\u8bcd\u53ea\u7528\u4e24\u6b21 \n\t}\n\tcin>>c;\n\tans[0]=c;\n\tdfs();\n\tprintf(\"%d\",maxx);\n\treturn 0;\n}\n```\n\n\u671b\u901a\u8fc7",
        "postTime": 1569310017,
        "uid": 119443,
        "name": "2019crx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "```cpp\n//\u641c\u7d22\uff0c\u4ee5\u53ca\u7528\u4e86\u4e00\u4e0b\u5b57\u7b26\u4e32\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstring s[25];int n,tot;\nint a[25][25];\nbool b[25][25];\nint num[25],maxm=0;\nint find(int x,int y)\n```\n{//\u641c\u7d22\n    \n```cpp\n    for(int i=1;i<=n;i++)\n    {if(b[x][i]==1&&num[i]<2)//\u4e24\u5355\u8bcd\u80fd\u8fde\u4e00\u8d77\u5e76\u4e14\u6b64\u5355\u8bcd\u4f7f\u7528\u6b21\u6570\u5c0f\u4e8e2\u6b21\n     {\n      y+=a[x][i];num[i]++;\n      find(i,y);num[i]--;//\u56de\u6eaf\n      maxm=max(maxm,y);//\u67e5\u627e\u6700\u5927\u503c\n      y-=a[x][i];//\u56de\u6eaf\n     }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n+1;i++) cin>>s[i];\n    for(int i=1;i<=n;i++)\n    if(s[n+1].substr(0,1)==s[i].substr(0,1)) \n        //string\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7\u201c==\u201d\u5224\u65ad\u662f\u5426\u76f8\u7b49\n    {b[n+1][i]=1;a[n+1][i]=s[i].length()-1;}\n    //\u67e5\u627e\u9996\u5355\u8bcd\n    for(int i=1;i<=n;i++)\n     for(int j=1;j<=n;j++)\n      for(int k=s[i].length()-1;k>=1;k--)//\u5012\u5e8f\uff0c\u8fd9\u6837\u627e\u7684\u6700\u5c0f\u91cd\u53e0\u800c\u4e0d\u662f\u6700\u5927\u91cd\u53e0\n       {\n        if(s[j].substr(0,k)==s[i].substr(s[i].length()-k,k))\n                                         //\u5224\u65ad\u4e24\u4e2a\u5355\u8bcd\u662f\u5426\u6709\u91cd\u53e0\n         {\n             a[i][j]=s[j].length()-k;b[i][j]=1;//\u5728\u4e24\u4e2a\u80fd\u8fde\u4e00\u8d77\u7684\u5355\u8bcd\u52a0\u4e0a\u8fb9\n         }\n       }\n    find(n+1,0);//\u641c\u7d22\u4ece\u9996\u5b57\u6bcd\u5f00\u59cb\n    cout<<maxm+1;//\u628a\u9996\u5b57\u6bcd\u7684\u957f\u5ea6\u52a0\u4e0a\n    return 0;\n}\n```",
        "postTime": 1508038791,
        "uid": 33964,
        "name": "zcxiousi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "## STL\u5927\u6cd5\u597d\uff01\uff01  \n\u4e0d\u5f97\u4e0d\u8bf4STL\u771f\u662f\u8003\u573a\u5229\u5668 ~~\u53ea\u8981\u4f60\u4e0d\u5fd8~~  \n\u5e94\u8be5\u662f\u672c\u9898\u9898\u89e3\u6700\u77ed\u4ee3\u7801\u4e4b\u4e00 ~~\u867d\u7136\u7a0d\u5fae\u538b\u4e86\u4e0b\u884c~~ \uff08\u9003\uff09  \n\u5177\u4f53\u601d\u8def\u4e0a\u548c\u5404\u4f4ddalao\u4e00\u6837 \u90fd\u662f\u7528DFS\u8fdb\u884c\u641c\u7d22 \u53ea\u662f\u5728\u5177\u4f53\u5b9e\u73b0\u4e0a\u7565\u6709\u4e0d\u540c\uff08\u5077\u61d2\uff09  \u89e3\u91ca\u8bf7\u770b\u6ce8\u91ca\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,ans,book[21],k;\nstring word[21],str;\nchar start; //\u5f00\u59cb\u5b57\u6bcd\nvoid dfs(int num,string d,int cur){\n    if(d.length() > ans) ans = d.length(); //\u5982\u679c\u73b0\u5728\u63a5\u597d\u7684\u201c\u9f99\u201d\u7684\u957f\u5ea6\u6bd4\u6700\u957f\u7684\u957f \u5219\u66f4\u65b0\u7b54\u6848\u4e3a\u5f53\u524d\u9f99\u7684\u957f\u5ea6\n    for(int i = 0; i < n; i++){\n        if(book[i] < 2){ //\u5982\u679c\u8be5\u5355\u8bcd\u4f7f\u7528\u6b21\u6570\u5c11\u4e8e2\u6b21\n            for(int j = 1; j <= word[i].length(); j++){\n                k = d.find(word[i].substr(0,j),d.length()-j); //\u7528substr()\u4e0d\u65ad\u53d6\u6240\u9009\u5355\u8bcd\u67d0\u4e00\u957f\u5ea6\u7684\u4e00\u6bb5 \u5e76\u7528find()\u786e\u5b9a\u662f\u5426\u4e0e\u5f53\u524d\u9f99\u7684\u7ed3\u5c3e\u5339\u914d k\u8bb0\u5f55\u5339\u914d\u4f4d\u7f6e\n                if(k != string::npos){ //\u82e5\u53d1\u73b0\u53ef\u4ee5\u63a5\u4e0a\n                    book[i]++;\n                    str = d;\n                    str.replace(k,word[i].length(),word[i]); //\u7528replace()\u65b9\u6cd5\u628a\u65b0\u7684\u90e8\u5206\u8fde\u63a5\u5230\u201c\u9f99\u201d\u4e0a\n                    dfs(num + 1, str, i); //\u7ee7\u7eed\u641c\u7d22\n                    book[i]--; //\u53d6\u6d88\u6807\u8bb0\n                    break; //\u53d1\u73b0\u91cd\u5408\u90e8\u5206\u6700\u77ed\u7684\u63a5\u9f99\u65b9\u5f0f\u5c31\u9000\u51fa\n                }\n            }\n        }\n    }\n}\nint main(){\n    cin>>n;\n    for(int i = 0; i < n; i++)\n        cin>>word[i];\n    cin>>start;\n    for(int i = 0; i < n; i++){ //\u5bfb\u627e\u4e0e\u5f00\u59cb\u5b57\u6bcd\u76f8\u540c\u7684\u5355\u8bcd\n        if(word[i][0] == start){\n            book[i]++; //\u6807\u8bb0\u4f7f\u7528\u4e00\u6b21\n            dfs(1,word[i],i); //\u5f00\u59cb\u641c\u7d22\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n```\n\u6700\u540e\u5f3a\u70c8\u5b89\u5229@coyangjr\u5927\u4f6c\u7684[\u8be6\u89e3STL::String\u7c7b\u7528\u6cd5](https://www.luogu.org/blog/co2021/solution-p1032)",
        "postTime": 1568908477,
        "uid": 64067,
        "name": "lrzlin",
        "ccfLevel": 4,
        "title": "P1019\u5355\u8bcd\u63a5\u9f99 STL+DFS\u89e3\u6cd5"
    },
    {
        "content": "### \u4e3a\u4ec0\u4e48\u6ee1\u5927\u8857\u90fd\u662fdfs\u9898\u89e3\n### \u8fd9\u9053\u9898\u4e0d\u662f\u6c42\u6700\u4f18\u503c\u5417\n~~\u4e8e\u662f\u6211\u5c31\u5199\u4e86\u4e2abfs\uff0c\u611f\u89c9\u5f88\u987a\u554a~~\n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u628a\u5355\u8bcd\u8986\u76d6\uff0c\u53ea\u4e0d\u8fc7\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u89e3~~\uff08\u8fd9\u4e0d\u662f\u5e9f\u8bdd\uff09~~\n\n\n\u6211\u4eec\u901a\u8fc7\u4e24\u4e2a\u6307\u9488$fp$\u548c$rp$\u4e24\u4e2a\u6307\u9488\u8ddf\u522b\u6c42\u51fa\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\uff0c\u5427\u7b54\u6848\u90fd\u653e\u5728\u961f\u5217$Q_i.len$\u4e2d\uff0c\u6700\u540e\u7528$ans$\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4f46\u662f\u5982\u4f55\u521d\u59cb\u5316\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u7528$link$\u6570\u7ec4\u5206\u522b\u6c42\u51fa\u6bcf\u4e24\u4e2a\u5355\u8bcd\u4e4b\u95f4\u7684\u957f\u5ea6\uff0c\u7136\u540e\u5728bfs\u8fc7\u7a0b\u4e2d\u5229\u7528$link$\u6570\u7ec4\u8fdb\u884c\u6269\u5c55\u8282\u70b9\u3002\n\u7801\u98ce\u8f83\u4e11\uff0c\u8bf7\u89c1\u8c05\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<cctype>\nusing namespace std;\nstruct node\n{\n \tint state[21];\n\tint last,len;\n}q[2300];\nstring word[21];\nint link[21][21];\nint main()\n{  \n\tint i,j,k,n;\n\tchar first;\n\tcin>>n;\t\n\tfor(i=1;i<=n;i++)cin>>word[i];\t\n\tcin>>first;//\u8f93\u5165\u7b2c\u4e00\u4e2a\u2018\u9f99\u2019 \n\tbool flag;\n\tint t,t1,t2,p1,p2;\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++)\n\t\t{  \n\t\t\tflag=false;t1=word[i].length();t2=word[j].length();t=1;\n\t\t\twhile(t<t1&&t<t2&&!flag) \n\t\t\t{  \n\t\t\t\tp1=t1-t;p2=0;\n\t\t\t\twhile(word[i][p1]==word[j][p2]){p1++;p2++;}\n\t\t\t\tif(p1==t1)flag=true;else t++;\n\t\t\t}\n\t\t\tif(flag)link[i][j]=t2-t;else link[i][j]=0;//\u5982\u679c\u53ef\u4ee5\u8fde\u63a5\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5355\u8bcd\u4e4b\u95f4\u7684\u957f\u5ea6 \n\t\t}//\u9884\u5904\u7406 \n\tint fp,rp;\n\trp=0;\n\tfor(i=1;i<=n;i++)\n\t\tif(word[i][0]==first)\n\t\t{  \n\t\t\trp++;memset(q[rp].state,0,sizeof(q[rp].state));\n\t\t\tq[rp].state[i]=1;q[rp].last=i;q[rp].len=word[i].length();//bfs\u9884\u5904\u7406\uff0c \n\t\t}\n\tfp=1;\t\n\twhile(fp<=rp)//bfs\u8fc7\u7a0b \n\t{  \n\t\tfor(i=1;i<=n;i++)\n\t\tif(q[fp].state[i]<2&&link[q[fp].last][i]>0)//\u5982\u679c\u9f99\u7684\u957f\u5ea6\u53ef\u4ee5\u8fde\u63a5 \n\t\t{  \n\t\t\trp++;\n\t\t\tfor(j=1;j<=n;j++)\n\t\t\t\tq[rp].state[j]=q[fp].state[j];\n\t\t\tq[rp].state[i]++;q[rp].last=i;//\u66f4\u65b0\u5176\u5b9e\u4f4d\u7f6e \n\t\t\tq[rp].len=q[fp].len+link[q[fp].last][i];//\u8bb0\u5f55\u957f\u5ea6 \n\t\t}\n\t\tfp++;\n\t}\n\tint ans=0;\n\tfor(i=1;i<=rp;i++)\n\t\tif(q[i].len>ans)ans=q[i].len;\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\u6700\u540e\u9644\u4e00\u4e2abfs\u6a21\u677f\uff0c\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\n```\n\u521d\u59cb\u5316\n\u521d\u59cb\u72b6\u6001\u5165\u961f\u5217 \n\u961f\u9996\u6307\u9488fp=0,\u961f\u5c3e\u6307\u9488rp=1\uff1b\nwhile(fp<=rp)\n{\n\tfp++;\n\t\u53d6\u51fa\u961f\u5217\u4e2dfp\u6240\u6307\u7684\u8282\u70b9;\n\tfor(i=1;i<=\u89c4\u5219\u6570;i++)\n\t{\n\t\t\u7531\u961f\u9996\u8282\u70b9\u5229\u7528\u89c4\u5219i\u6269\u5c55\u51fa\u65b0\u7684\u8282\u70b9new;\n\t\tif(new\u6ca1\u6709\u88ab\u51fa\u73b0\u8fc7)\n\t\t{\n\t\t\trp++;\n\t\t\t\u65b0\u8282\u70b9\u5165\u961f;\n\t\t\tif(new==\u76ee\u6807\u72b6\u6001)\n\t\t\t{\n\t\t\t\t\u8f93\u51fa\u5e76\u9000\u51fa; \n\t\t\t } \n\t\t } \n\t} \n }\n if(fp>=rp)\u8f93\u51fa\u65e0\u89e3 \n```",
        "postTime": 1537966102,
        "uid": 51645,
        "name": "zybnxy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684\u5b57\u7b26\u4e32+\u641c\u7d22\u3002\n\n\u6211\u4eec\u641c\u7d22\u7684\u6846\u67b6\u5c31\u662f\uff0c\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u6709\u91cd\u53e0\u90e8\u5206\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u7edf\u8ba1\u7684\u7b54\u6848\u4e3a\uff1a\n\n\u5df2\u7ecf\u7d2f\u52a0\u7684\u5b57\u4e32 + \u8981\u53e0\u52a0\u7684\u5b57\u4e32\u957f\u5ea6 - \u6700\u5c0f\u91cd\u53e0\u957f\u5ea6\n\n\u7136\u540e\u518d\u5229\u7528\u8fd9\u4e2a\u8981\u53e0\u52a0\u7684\u5b57\u4e32\u5411\u4e0b\u641c\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u662f\u603b\u5b57\u4e32\u800c\u662f\u8fd9\u4e2a\u53e0\u52a0\u7684\u5b57\u4e32\u5462\uff1f\n\n\u82e5\u662f\u4e0b\u4e00\u4e2a\u8981\u641c\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u8d8a\u8fc7\u8fd9\u4e2a\u5b57\u4e32\u4e0e\u603b\u5b57\u4e32\u5339\u914d\uff0c\u90a3\u4e48\u5f53\u524d\u7684\u5b57\u4e32\u662f\u88ab\u5b8c\u5168\u8986\u76d6\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u5bf9\u957f\u5ea6\u6ca1\u6709\u8d21\u732e\u4e86\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4e0d\u9009\u5f53\u524d\u5b57\u4e32\u800c\u76f4\u63a5\u53bb\u9009\u90a3\u4e2a\u66f4\u957f\u7684\uff0c\u663e\u7136\uff0c\u4ed6\u4f1a\u5728\u540e\u9762\u7684\u641c\u7d22\u4e2d\u88ab\u66f4\u65b0\u6389\uff0c\u4e8e\u662f\u76f4\u63a5\u5229\u7528\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u5b57\u4e32\u5373\u53ef\u3002\n\n\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u5c31\u662f\u5982\u4f55\u8ba1\u7b97\u91cd\u53e0\u5b57\u4e32\u957f\u5ea6\uff0c\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff0c\u7b2c\u4e00\u4e2a\u5b57\u4e32\u4ece\u540e\u5f80\u524d\u626b\uff0c\u7b2c\u4e8c\u4e2a\u4ece\u524d\u5f80\u540e\u626b\uff0c\u7528\u4e24\u4e2a\u5b57\u7b26\u4e32$x,y$\u4ee3\u8868\u626b\u8fc7\u7684\u5b57\u7b26\u4e32\uff0c\u5f53$x,y$\u76f8\u7b49\u65f6\u5373\u4e3a\u6700\u5c0f\u7684\u91cd\u53e0\u90e8\u5206\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u8fd9\u9053\u9898\u76ee\u5c31\u6ca1\u6709\u96be\u5ea6\u4e86\uff0c\u4e0b\u9762\u662f\u4ee3\u7801.\n\n$Code:$\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 25;\n\nstring s[N];\nstring sta;\nint n;\n\nint calc(string a , string b) {\n\tstring x , y;\n\tint tot = 0;\n\tint lena = a.size() , lenb = b.size();\n\tfor(int i = 1; i <= min(a.size() , b.size()) ; i ++) {\n\t\tx = a[lena - i] + x;\n\t\ty += b[i - 1];\n\t\tif(x == y) return i;\n\t}\n\treturn 0;\n}\n\nint ans = 0;\nint vis[N];\n\nvoid dfs(string now , int sum) {\n\tans = max(ans , sum);\n\tfor(int i = 1 ; i <= n ; ++ i) {\n\t\tif(vis[i] < 2 && calc(now , s[i]) > 0){\n\t\t\tvis[i] ++;\n\t\t\tdfs(s[i] , sum + s[i].size() - calc(now , s[i]));\n\t\t\tvis[i] --;\n\t\t}\n\t}\n}\n\nint main () {\n\tcin >> n;\n\tfor(int i = 1 ; i <= n ; ++ i) cin >> s[i];\n\tcin >> sta;\n\tdfs(sta , 1);\n\tcout << ans;\n\treturn 0;\n} \n```",
        "postTime": 1572010697,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u7ec8\u4e8eAC\u4e86\uff0c\u8fd9\u9053\u9898\u9898\u76ee\u63cf\u8ff0\u6709\u70b9\u513f\u5c0f\u5751\uff0c\u770b\u4e86\u5f53\u5e74\u7684\u539f\u9898\u624d\u505a\u4e86\u51fa\u6765\u3002\n\n\u4e3a\u5565\u6ca1\u770b\u5230\u6709\u4eba\u7528**string.find_last_of()**\u5462\u3002\n\n\u5173\u4e8e\u5408\u5e76\uff0c\u9898\u76ee\u4e2d\u8bb2\u7684\u662f**\u76f8\u90bb\u4e24\u5355\u8bcd\u4e0d\u80fd\u5448\u5305\u542b\u5173\u7cfb**\uff0c\u4f46\u662f\u539f\u9898\u7684\u8bb2\u8ff0\u662f**\u5408\u5e76\u540e\u9700\u5f97\u4f7f\u9f99\u7684\u957f\u5ea6\u589e\u52a0**\uff0c\u6211\u611f\u89c9\u540e\u8005\u66f4\u51c6\u786e\u4e00\u70b9\uff0c\u6bd4\u5982\uff1aata\u540e\u8fb9\u53ef\u4ee5\u8ddfat\u53d8\u6210atat\uff0c\u5c3d\u7ba1ata\u5305\u542b\u4e86at\uff0c\u4f46\u9f99\u7684\u957f\u5ea6\u8fd8\u662f\u589e\u52a0\u4e861\uff0c\u6211\u8bd5\u4e86\u4e00\u4e0b\u662f\u53ef\u884c\u7684\u3002\n\n\u57fa\u672c\u7684\u8981\u70b9\uff1a\n\n\u5bf9\u4e8e\u9f99\u9996\u7684\u5355\u8bcd\uff0c\u53ea\u9700\u6ee1\u8db3\u9996\u5b57\u6bcd\u4e3a\u6307\u5b9a\u5f00\u5934\u5b57\u6bcd\u5373\u53ef\uff0c\u96be\u70b9\u5728\u4e8e\u9f99\u9996\u4e4b\u540e\u7684\u5b57\u6bcd\u7684\u9009\u62e9\uff0c\u9700\u8981\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a\n\n- \u5404\u5355\u8bcd\u6700\u591a\u4f7f\u7528\u4e24\u6b21\uff0c\u4f46\u4e0d\u4e00\u5b9a\u90fd\u4f7f\u7528\u4e24\u6b21\u3002\n- \u5f53\u524d\u5355\u8bcd\u7684\u5f00\u5934\u51e0\u4e2a\u5b57\u6bcd\u4e0e\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7ed3\u675f\u7684\u51e0\u4e2a\u5b57\u6bcd\u76f8\u540c\uff0c\u4fdd\u8bc1\u80fd\u591f\u63a5\u9f99\u3002\n- \u82e5\u80fd\u63a5\u9f99\uff0c\u9700\u4fdd\u8bc1\u63a5\u9f99\u540e\u9f99\u7684\u957f\u5ea6\u589e\u52a0\uff0c\u5426\u5219\u653e\u5f03\u3002\n- \u82e5\u80fd\u63a5\u9f99\uff0c\u5408\u5e76\u90e8\u5206\u5e94\u9009\u62e9\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\uff0c\u5c3d\u91cf\u589e\u957f\u9f99\u7684\u957f\u5ea6\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\nconst int N = 20;\n\nstring s[N], dragon[2*N];\t//\t\u5355\u8bcd\u6570\u7ec4  \u9f99\u6570\u7ec4\nint used[N], dIndex;\t//\t\u5355\u8bcd\u4f7f\u7528\u6b21\u6570\u6570\u7ec4  \u9f99\u6570\u7ec4\u4e0b\u6807\n\nint n, len, maxLen;\t//\t\u5355\u8bcd\u6570  \u9f99\u957f\u5ea6  \u6700\u5927\u9f99\u957f\u5ea6\nchar begin;\t//\t\u5f00\u5934\u5b57\u6bcd\n\nint check(int i)\t//\t\u68c0\u67e5\u80fd\u5426\u5c06s[i]\u52a0\u5165\u9f99\u4e2d   \u8fd4\u56de\u52a0\u5165\u540e\u9f99\u589e\u52a0\u7684\u957f\u5ea6   \u8fd4\u56de0\u5c31\u662f\u4e0d\u4f7f\u7528s[i]\n{\n  if(used[i] >= 2)\t//\t\u8d85\u8fc7\u4e24\u6b21\n    return 0;\n  \n  if(dIndex == 0 && s[i][0] == begin)\t//\t\u9f99\u9996\n    return s[i].length();\n  \n  string pre = dragon[dIndex-1];\t//\t\u524d\u4e00\u4e2a\u5355\u8bcd\n  string now = s[i];\t//\t\u5f53\u524d\u68c0\u67e5\u5355\u8bcd\n  \n  int pos = pre.find_last_of(now[0]);\t//\tfind_last_of  \u4fdd\u8bc1\u627e\u7684\u662f\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\n  if(pos != string::npos && now.find(pre.substr(pos)) == 0)\t//\t\u6709\u91cd\u53e0\n    return now.length() - pre.substr(pos).length();\t//\t\u9f99\u589e\u52a0\u957f\u5ea6\uff0c\u53ef\u80fd\u8fd4\u56de0\n  else\n    return 0;\n}\n\nvoid f()\n{\n  if(dIndex >= 2*n)\n    return;\n  \n  for(int i = 0; i < n; i++)\n  {\n    int t = check(i);\t//\t\u68c0\u67e5s[i]\u80fd\u5426\u52a0\u5165\u9f99\u4e2d\uff0c\u5e76\u5f97\u5230\u52a0\u5165\u540e\u9f99\u589e\u52a0\u7684\u957f\u5ea6\uff0c\u4e3a0\u5219\u4e0d\u52a0\u5165\u3002\uff09\n    if(t > 0)\n    {\n      dragon[dIndex++] = s[i];\t//\t\u52a0\u5165\n      len += t;\t//\t\u957f\u5ea6\u589e\u52a0\n      used[i]++;\t//\t\u6b21\u6570\u589e\u52a0\n      if(len > maxLen)\t//\t\u5224\u65ad\u6700\u5927\n        maxLen = len;\n      \n      f();\t//\t\u9012\u5f52\n      \n      //\t\u56de\u6eaf\n      dIndex--;\n      len -= t;\n      used[i]--;\n    }\n  }\n}\n\nint main()\n{\n  cin >> n;\n  for(int i = 0; i < n; i++)\n    cin >> s[i];\n  cin >> begin;\n  \n  f();\n  \n  cout << maxLen;\n  \n  return 0;\n}\n```",
        "postTime": 1541665185,
        "uid": 129287,
        "name": "Ch1N",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u4e00\u9053\u6df1\u641c\u5f88\u597d\u7684\u5165\u95e8\u9898\uff0c\u53ef\u4ee5\u7406\u89e3\u6df1\u641c\u56de\u6eaf\u7684\u601d\u60f3\uff0c\u52a0\u4e00\u70b9\u5b57\u7b26\u4e32\u7684\u6280\u5de7\u3002\n\n\n#### \u601d\u8def\n\n###  s[i]\u662f\u88ab\u63a5\u7684\u5b57\u7b26\u4e32\uff0cs[j]\u662f\u8981\u8fde\u63a5\u7684\u5b57\u4e32\uff0ck\u662f\u679a\u4e3e\u91cd\u5408\u7684\u4f4d\u6570\u3002\n\n \n\u7528\u7684pas\u51fd\u6570copy\uff08\u5b50\u4e32\uff0c\u8d77\u59cb\u4f4d\u7f6e\uff0c\u957f\u5ea6\uff09\n\ndelete\uff08\u5b50\u4e32\uff0c\u8d77\u59cb\u4f4d\u7f6e\uff0c\u957f\u5ea6\uff09\n\n \n\u6055\u6211\u76f4\u8a00\u5b57\u7b26\u4e32\u7684\u9898pas\u6bd4c\u597d\u7528\n\n\u5177\u4f53\u770b\u4ee3\u7801\n\n\n\n           \n```cpp\n    program dasdsf;\n    uses math;\n    var s:array[1..22]of string;\n    b:array[1..22]of integer;\n    //b\u6570\u7ec4\u8bb0\u5f55\u6b21\u6570\n    s1,ma:string;//s1\u662f\u6574\u4e2a\u64cd\u4f5c\u7684\u5b57\u7b26\u4e32\n    c:char;\n    i,n:longint;\n    procedure dfs(i:integer);\n    var j,k:integer;\n    begin\n     if length(s1)>length(ma) then ma:=S1;\n     //ma\u7528\u5b57\u7b26\u4e32\u65b9\u4fbf\u8c03\u8bd5\uff0c\u4e5f\u53ef\u4ee5\u7528int\n     for j:=1 to n do\n      if b[j]<2 then\n       for k:=1 to min(length(S[i]),length(s[j]))-1 do//\u4e24\u5b57\u4e32\u4e0d\u80fd\u91cd\u590d \u6545min\uff08s[i],s[j])-1\n        if copy(s[i],length(s[i])-k+1,k)=copy(s[j],1,k) then\n         begin//\u6807\u51c6\u7684\u56de\u6eaf\n          s1:=s1+copy(s[j],k+1,length(s[j])-k);//\u8fde\u63a5\n          inc(b[j]);//\u6807\u8bb0\n          dfs(j);\n          DELETE(s1,length(s1)-(length(s[j])-k)+1,length(s[j])-k);//\u5220\u9664\u5df2\u8fde\u63a5\n          dec(b[j]);//\u91ca\u653e\u6807\u8bb0\n         end;\n    end;\n    begin\n     read(n);\n     readln;\n     for i:=1 to n do\n      begin\n       read(s[i]);\n       readln;\n      end;\n     read(c);\n     for i:=1 to n do\n      if s[i,1]=c then\n       begin//\u6807\u51c6\u7684\u6df1\u641c\n        s1:=s[i];\n        inc(b[i]);\n        dfs(i);\n        s1:='';\n        dec(b[i]);\n       end;\n      write(length(ma));\n    end.\n\n```",
        "postTime": 1513000025,
        "uid": 5455,
        "name": "\u6709\u697c\u4eba\u4e0a\u6101",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u697c\u4e0a\u53ca\u697c\u4e0b\u7684\u5927\u4f6c\u5df2\u7ecf\u8bb2\u5f97\u5f88\u900f\u5f7b\u4e86\uff08\u4e5f\u53ef\u80fd\u6211\u662f\u6700\u5e95\u697c\uff09\uff0c\u6211\u5c31\u63d0\u4f9b\u4e00\u4e2a\u65b0\u601d\u8def\u5427\n\n\u4e3e\u4e2a\u6817\u5b50\n\nstr[1]=\"abcb\"\n\nstr[2]=\"bcbb\"\n\nstr[1]+str[2]\u7684\u6700\u5927\u957f\u5ea6\u4e3a7(\"abcbcba\")\n\n\u6211\u4eec\u53ef\u4ee5\u628a\"cba\"\u8fd9\u4e00\u90e8\u5206\u7684\u957f\u5ea6\u5f53\u4f5c\u662f\u70b91\u5230\u70b92\u7684\u8ddd\u79bb\n\n\u4e5f\u5c31\u662fpath[1][2]=3;\n\n\uff08\u8bb0\u4f4f\uff0c\u53d6\u6700\u77ed\u516c\u5171\u90e8\u5206\uff0c\u7136\u540e\u7528str[2]\u7684\u957f\u5ea6\u51cf\u53bb\u6700\u77ed\u516c\u5171\u90e8\u5206\uff0c\u5f97\u5230\u7684\u5c31\u662f\u6700\u957f\u8ddd\u79bb\uff09\n\nstr[2]+str[1]\u4e2d\u7531\u4e8e\u6ca1\u6709\u516c\u5171\u90e8\u5206\uff0c\u6240\u4ee5\u70b92\u5230\u70b91\u7684\u8ddd\u79bb\u4e3a0\uff08\u56e0\u4e3a\u672c\u9898\u662f\u53d6\u6700\u5927\u503c\uff09\n\n\u8bb0\u5f97\u6392\u9664\u5305\u542b\u7684\u60c5\u51b5\uff01\uff01\uff01\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cstdio>\nusing namespace std;\nint ans=0,n,b[1000001],path[31][31],l[100001];\nstring str[100001];\nint kmp(string str1,string str2){//\u4e0d\u662fkmp\uff0c\u6c42\u5927\u4f6c\u653e\u8fc7\n\tint maxn=0;\n\tfor(int i=1;i<str2.size();i++){\n\t\tif(i>str1.size()) break;\n\t\tstring s1=str1.substr(str1.size()-i,i),s2=str2.substr(0,i);\n\t\tif(s1==s2){\n\t\t\tmaxn=max(maxn,i);\n\t\t\tbreak;\n\t\t}\n\t\t\n\t}\n   //\u4ee5\u4e0b\u4e3a\u5305\u542b\u7684\u60c5\u51b5\n\tif(maxn==str1.size()) maxn=0;\n\tif(maxn==str2.size()) maxn=0;\n\treturn maxn;\n}\nint dfs(int start,int chang){\n\tans=max(ans,chang);\n\tfor(int i=1;i<=n;i++){\n\t\tif(b[i]==2) continue;//\u7528\u4e86\u4e24\u6b21\n\t\tif(path[start][i]==0) continue;//\u6ca1\u6709\u516c\u5171\u90e8\u5206\u6216\u4e3a\u5305\u542b\u5173\u7cfb\n\t\tb[i]++;\n\t\tdfs(i,chang+path[start][i]);\n\t\tb[i]--;\n\t}\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>str[i];\n\t\tl[i]=str[i].size();\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i;j<=n;j++){\n\t\t\tint same1,same2;\n\t\t\tsame1=kmp(str[i],str[j]);\n\t\t\tsame2=kmp(str[j],str[i]);\n\t\t\tif(same1==0) same1=l[j];\n\t\t\tpath[i][j]=l[j]-same1;\n\t\t\tif(same2==0) same2=l[i];\n\t\t\tpath[j][i]=l[i]-same2;\n\t\t\t\n\t\t}\n\t}\n\tchar ch;\n\tcin>>ch;\n\tfor(int i=1;i<=n;i++){\n\t\tmemset(b,0,sizeof(b));\n\t\tif(str[i][0]==ch){\n\t\t\tb[i]++;\n\t\t\tdfs(i,l[i]);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}\n```\n",
        "postTime": 1573550101,
        "uid": 87753,
        "name": "\u65e0\u654c\u5927\u849f\u84bb",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "### \u4e00\u4e2a\u4e0e\u5b57\u7b26\u4e32\u6709\u5173\u7684\u6df1\u641c\n\n\u5148\u6253\u4e00\u4e2a\u6807\u51c6\u7684\u6df1\u641c\uff0c\u50cf\u8fd9\u6837\uff1a\n\n```cpp\nvoid dfs(string nw){\n\tans=max(ans,len);\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[w[i]]&&cmerge(nw,w[i])){\n\t\t\tvis[w[i]]--;\n\t\t\tstring tmp=nw;\n\t\t\tmerge(nw,w[i]);//\u51fd\u6570\u540e\u8fb9\u89e3\u91ca\n\t\t\tlen=nw.length();\n\t\t\tdfs(nw);\n\t\t\tvis[w[i]]++;\n\t\t\tnw=tmp;\n\t\t}\n\t}\n}\n```\n\u8bf4\u660e\uff1a\u5f00\u4e00\u4e2a\u4f7f\u7528$map$\u7684$vis$\u6570\u7ec4\uff0c\u7528\u4ee5\u5224\u65ad\u8be5\u5355\u8bcd\u5269\u4f59\u4f7f\u7528\u6b21\u6570\u3002\n\n$nw$\u8868\u793a\u5f53\u524d\u5df2\u7ecf\u7ed3\u6210\u9f99\u7684\u5b57\u7b26\u4e32\uff1b\n\n$tmp$\u6682\u65f6\u5b58\u50a8\u4e00\u4e0b\u4ee5\u524d\u7684$nw$\uff0c\u4fbf\u4e8e\u6062\u590d\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5f00\u59cb\u641c\u4e86\u3002\n\n\u518d\u6253\u4e24\u4e2a\u51fd\u6570\uff1a$cmerge(string\\ a,string\\ b)$\uff08\u7528\u4e8e\u5224\u65ad$a$\u3001$b$\u4e24\u4e2a\u5b57\u7b26\u4e32\u53ef\u5426\u8fde\u63a5\uff09\u548c$merge(string\\ a,string\\ b)$\uff08\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\uff08\u5c06$b$\u63a5\u5728$a$\u540e\u9762\uff09\uff09\n\n## cmerge\n\n\u601d\u8def\uff1a\u4ece$a$\u7684\u6700\u540e\u4e00\u4f4d\u4e0e$b$\u7684\u5f00\u5934\u90e8\u5206\u5f00\u59cb\u679a\u4e3e\uff0c\u5224\u65ad\u662f\u5426\u91cd\u5408\u3002\u4f7f\u7528$\\text{substr(\u5f00\u59cb\u53d6\u7684\u4f4d\u7f6e\uff0c\u60f3\u8981\u53d6\u7684\u957f\u5ea6)}$\u51fd\u6570\u53d6\u7528\u4ed6\u4eec\u7684\u5934\u548c\u5c3e\uff0c\u5e76\u5224\u65ad\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\n\n```cpp\nbool cmerge(string a,string b){\n\tint l=min(a.length(),b.length()),la=a.length();\n\tfor(int i=1;i<=l;i++){\n\t\tif(a.substr(la-i)==b.substr(0,i)) return true;//\u5982\u679c\u76f8\u7b49\uff0c\u8868\u660e\u53ef\u4ee5\u8fde\u63a5\uff0c\u8fd4\u56de\u771f\u3002\n\t}\n\treturn false;\n}\n\n```\n## merge\n\n\u601d\u8def\uff1a\u501f\u7528\u4e0a\u8fb9\u76844cmerge$\u7684\u8fc7\u7a0b\uff0c\u5982\u679c\u53ef\u4ee5\u8fde\u63a5\uff0c\u628a$a$\u7684\u91cd\u5408\u90e8\u5206\u5220\u9664\uff0c\u518d\u8fde\u63a5\u5373\u53ef\uff08\u4f7f$string$\u81ea\u5e26\u7684\u201c+\u201d\uff09\u3002\n\n```cpp\nvoid merge(string &a,string b){\n\tint l=min(a.length(),b.length()),la=a.length();//\u8bb0\u5f55\u4e00\u4e0b\u957f\u5ea6\n\tfor(int i=1;i<=l;i++){\n\t\tif(a.substr(la-i)==b.substr(0,i)){\n\t\t\ta.erase(la-i);//\u5220\u53bb\u91cd\u5408\u90e8\u5206\n\t\t\ta=a+b;//\u8fde\u63a5\n\t\t\treturn;\n\t\t}\n\t}\n}\n```\n\n\u6709\u4e86\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u975e\u5e38\u6109\u5feb\u7684AC\u4e86\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,len=0,ans=0;\nmap<string,int> vis;\nstring w[26],st;\nbool cmerge(string a,string b){\n\tint l=min(a.length(),b.length()),la=a.length();\n\tfor(int i=1;i<=l;i++){\n\t\tif(a.substr(la-i)==b.substr(0,i)) return true;\n\t}\n\treturn false;\n}\nvoid merge(string &a,string b){\n\tint l=min(a.length(),b.length()),la=a.length();\n\tfor(int i=1;i<=l;i++){\n\t\tif(a.substr(la-i)==b.substr(0,i)){\n\t\t\ta.erase(la-i);\n\t\t\ta=a+b;\n\t\t\treturn;\n\t\t}\n\t}\n}\n//\u4e0a\u8fb9\u5df2\u8bb2\nvoid dfs(string nw){\n\tans=max(ans,len);//\u6bcf\u6b21\u641c\u7d22\u65f6\u53d6\u4e00\u4e0b\u957f\u5ea6\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[w[i]]&&cmerge(nw,w[i])){//\u5982\u679c\u53ef\u4ee5\u8fde\u63a5\n\t\t\tvis[w[i]]--;//\u4f7f\u7528\u6b21\u6570-1\n\t\t\tstring tmp=nw;//\u6682\u5b58\u4e00\u4e0b\uff0c\u4fbf\u4e8e\u6062\u590d\n\t\t\tmerge(nw,w[i]);//\u5c06\u4ed6\u4eec\u8fde\u63a5\u8d77\u6765\n\t\t\tlen=nw.length();//\u53d6\u5f53\u524d\u957f\u5ea6\n\t\t\tdfs(nw);\n\t\t\tvis[w[i]]++;\n\t\t\tnw=tmp;//\u6062\u590d\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>w[i];\n\t\tvis[w[i]]=2;//\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u4f7f\u7528\u4e24\u6b21\n\t} \n\tcin>>st;\n\tdfs(st);//\u4ece\u6240\u7ed9\u9996\u5b57\u6bcd\u5f00\u59cb\u641c\u7d22\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1558933809,
        "uid": 138061,
        "name": "la_un_ty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u601d\u8def\u5f88\u7b80\u5355  \n\u8fd8\u53ef\u4ee5\u4f18\u5316  \n\u672c\u849f\u84bb\u4eae\u4e00\u4e0b\u76f8  \n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nstruct data {int u, v, id;}edges[402];\nint n,iedg,ans,vis[22],h[22],edg;\nchar c;\nstring a[22];\nbool flag;\nvoid dfs(int x,int tot)\n{//\u6df1\u641c\uff0cx\u662f\u8d77\u70b9\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0ctot\u662f\u5230\u76ee\u524d\u5df2\u7ecf\u6709\u7684\u957f\u5ea6 \n    int k,d=edges[x].u;//d\u8868\u793a\u8d77\u70b9\u7684\u5355\u8bcd\u7f16\u53f7 \n    for (int i=x;edges[i].u==d;i++)//\u4ecex\u4f4d\u7f6e\u8d77\uff0c\u76f4\u5230\u8d77\u70b9\u5355\u8bcd\u7f16\u53f7\u4e0d\u662fd\u4e3a\u6b62 \n        if(vis[k=edges[i].v]<2)\n        {//\u5982\u679c\u8fd9\u4e2a\u5355\u8bcd\u4f7f\u7528\u4e0d\u8d85\u8fc7\u4e24\u6b21 \n            if(tot+edges[i].id>ans) ans=tot+edges[i].id;//\u5982\u679c\u53ef\u4ee5\uff0c\u5c31\u66f4\u65b0ans \n            vis[k]++,dfs(h[k],tot+edges[i].id),vis[k]--;//\u6807\u8bb0\u5355\u8bcdk\u4f7f\u7528\u6b21\u6570\u52a01\uff0c\u6df1\u641c\uff0c\u8fd8\u539f\u5355\u8bcdk\u4f7f\u7528\u6b21\u6570 \n        }\n}\nint calc(int ii,int jj)\n{//\u8ba1\u7b97\u5355\u8bcdii\u548c\u5355\u8bcdjj\u8fde\u63a5\u540e\u7684\u6709\u6548\u957f\u5ea6\uff08\u5373\u6263\u9664\u4e86\u91cd\u590d\u90e8\u5206\uff09\n    int leni=a[ii].size()-1;//\u6c42\u957f\u5ea6 \n    int lenj=a[jj].size()-1;//\u6c42\u957f\u5ea6 \n    int len=leni<lenj?leni:lenj;//len\u662f\u8f83\u77ed\u7684\u957f\u5ea6 \n    for(int g=0;g<len;g++)\n    {//\u5bf9\u4e8eii\u76840~len\u6bcf\u4e2a\u957f\u5ea6\n        flag=true;//\u521d\u59cb\u5316flag\u4e3atrue \n        for(int i=leni-g,j=0;j<=g;i++,j++)//\u5bf9\u4e8e\u6bcf\u4e2a\u5bf9\u5e94\u7684\u5b57\u6bcd\uff0c\u5355\u8bcdii\u4ece\u5c3e\u5b57\u6bcd\u5f00\u59cb\uff0c\u5355\u8bcdjj\u4ece\u9996\u5b57\u6bcd\u5f00\u59cb\u5339\u914d \n            if(a[ii][i]!=a[jj][j]){flag=false;break;}//\u5982\u679c\u5355\u8bcdii\u7684\u5c3e\u5b57\u6bcd\u4e0d\u7b49\u4e8e\u5355\u8bcdjj\u7684\u5934\u5b57\u6bcd\uff0c\u5339\u914d\u5931\u8d25\uff0c\u8df3\u51fa \n        if(flag)return lenj-g;//\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56delenj-g \n    }\n    return 0;\n}\nint main()\n{\n    cin>>n;//\u8f93\u5165\u5355\u8bcd\u6570n \n    for(int i=1;i<=n;i++)cin>>a[i];//\u8bfb\u5165\u6bcf\u4e2a\u5355\u8bcd \n    cin>>c;//\u8bfb\u5165\u9f99\u7684\u5f00\u5934\u5b57\u6bcd \n    for(int i=1;i<=n;i++)//\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u5355\u8bcd\u4e4b\u95f4 \n        for(int j=1;j<=n;j++)\n        {\n            edg=calc(i,j);//\u8ba1\u7b97\u5355\u8bcdi\u548c\u5355\u8bcdj\u8fde\u63a5\u540e\u7684\u6709\u6548\u957f\u5ea6\uff08\u5373\u6263\u9664\u4e86\u91cd\u590d\u90e8\u5206\uff09 \n            if(edg){//\u5982\u679c\u53ef\u4ee5\u8fde\u63a5 \n                edges[++iedg]=(data){i,j,edg};//\u5b58\u5165\u6570\u7ec4edges \n                if(edges[iedg-1].u!=i) h[i]=iedg;//\u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u7684\u8d77\u70b9\u4e0d\u662fi\uff0c\u5c31\u5728h\u6570\u7ec4\u4e2d\u5b58\u50a8i\u8282\u70b9\u5728\u6570\u7ec4edges\u4e2d\u7684\u5f00\u59cb\u4f4d\u7f6e\u4e3aedge \n            }\n        }\n    for(int i=1;i<=n;i++)if(a[i][0]==c)\n    {//\u628a\u4efb\u610f\u4e00\u4e2a\u5f00\u5934\u4e3ac\u7684\u5355\u8bcd\u4f5c\u4e3a\u9f99\u5934 \n        if(ans<a[i].size())ans=a[i].size();//\u5982\u679c\u53ef\u4ee5\uff0c\u5c31\u66f4\u65b0ans \n        vis[i]++,dfs(h[i],a[i].size()),vis[i]--;//\u6807\u8bb0i\u5355\u8bcd\u5df2\u4f7f\u75281\u6b21\uff0c\u7136\u540e\u6df1\u641c\uff0c\u518d\u8fd8\u539fi\u5355\u8bcd\u7684\u4f7f\u7528\u6807\u8bb0 \n    }\n    cout<<ans;//\u8f93\u51fa\u7b54\u6848\n \treturn 0;//\u5b8c\u7f8e\u7ed3\u675f\n}\n```\n\u6c42\u901a\u8fc7^_^",
        "postTime": 1548114150,
        "uid": 81296,
        "name": "NOIP2019",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u6211\u4eec\u5728\u8bfb\u9898\u540e\u53d1\u73b0\uff0c\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u5f53\u524d\u4e32\uff0c\u5bf9\u4ed6\u8fdb\u884c\u63a5\u9f99\uff0c\u6240\u53d7\u5230\u7684\u9650\u5236\u4ec5\u4ec5\u662f\u672b\u5c3e\u6700\u540e\u4e00\u6b21\u63a5\u4e0a\u7684\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u4e32\u8fdb\u884c\u641c\u7d22\uff0c\u52a0\u4ee5\u8f85\u52a9\u7684\u63a5\u9f99\u6b21\u6570\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u53c2\u6570\u4fdd\u5b58\u4e3a\u672b\u5c3e\u521a\u63a5\u7684\u4e32\uff0c\u4ee5\u53ca\u5f53\u524d\u4e32\u957f\u5ea6\u5373\u53ef\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u7684\u65b9\u5f0f\u5f97\u5230\u6bcf\u4e00\u4e2a\u4e32\u540e\u9762\u53ef\u4ee5\u63a5\u9f99\u7684\u4e32\uff0c\u65b9\u4fbf DFS \u65f6\u8fdb\u884c\u679a\u4e3e\u63a5\u4e0b\u6765\u7684\u4e32\u3002\n\n\n\n\n\n\n\n\n\n     \n\n\n    \n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, a, b) for (int i = (a), i##_end_ = (b); i < i##_end_; ++i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\ntypedef long long LL;\nint n, ans = 0;\nstring s[1005];\nchar c;\nint use[25];\nbool ok[25][25];\nint add[25][25];\nbool check(string a,string b,int tag1, int tag2)\n{\n     for (int i=a.size()-1; i >= 0 && a.size() - i <= b.size();i--)\n     {\n         bool flag = true;\n         for (int j=i;j<a.size();j++)\n         {\n             if (a[j] != b[j-i])\n             {\n                 flag = false;\n                 break;\n             }\n         }\n         if (flag)\n         {\n            add[tag1][tag2] = b.size() - (a.size() - i);\n            return true;\n         }\n     }\n     return false;\n}\nvoid dfs(int tag, int len)\n{\n     ans = max(ans,len);\n     REP(i,1,n+1)\n     {\n         if (use[i] < 2 && ok[tag][i])\n         {\n             use[i]++;\n             dfs(i,len+add[tag][i]);\n             use[i]--;\n         }\n     }\n}\nint main()\n{\n    cin >> n;\n    REP(i,1,n+1) cin >> s[i];\n    cin >> c;\n    REP(i,1,n+1)\n        REP(j,1,n+1)\n            ok[i][j] = check(s[i],s[j],i,j);    \n    REP(i,1,n+1)\n        if (s[i][0] == c)\n        {\n            use[i]++;\n            dfs(i,s[i].size());            \n        }\n    cout << ans;\n    //system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1502591901,
        "uid": 35575,
        "name": "\u4f55\u5353\u7136",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "dfs\u6df1\u641c=-=\uff08\u8be6\u89c1\u4ee3\u7801\u5185\u6ce8\u89e3\uff09\n\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,used[20]={0},maxn=0; //n\u4e3a\u5355\u8bcd\u6570 used\u6570\u7ec4\u68c0\u6d4b\u8be5\u5355\u8bcd\u662f\u5426\u5df2\u7ecf\u88ab\u7528\u591a\u4e8e\u4e24\u6b21\uff08\u7528++\u5b9e\u73b0\uff09  maxn\u8868\u793a\u6700\u5927\u957f\u5ea6\nstring s[20],sum,x; //s\u5b57\u7b26\u4e32\u6570\u7ec4\u4e3a\u8bfb\u5165\u5355\u8bcd sum\u4e3a\u5404\u4e2a\u60c5\u51b5\u6700\u540e\u6240\u5f62\u6210\u7684\u9f99 x\u4e3a\u5f00\u5934\u5b57\u6bcd\nvoid dfs(string last){\n    if(last.size()==1) sum=last; //\u5c06\u5f00\u5934\u5b57\u6bcd\u770b\u6210\u4e0a\u4e00\u4e2a\u5355\u8bcd \u7528x\u521d\u59cb\u5316sum\n    bool ans=0; //\u8868\u793a\u63a5\u4e0b\u6765\u662f\u5426\u6709\u7b26\u5408\u8981\u6c42\u7684\u5355\u8bcd\n    for(int i=0;i<n;i++){\n        if(used[i]<2){\n            int m; //m\u4e3a\u76f8\u540c\u5b57\u6bcd\u4e2a\u6570\n            for(int j=last.size()-1;j>=0;j--){ //\u4ece\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u5f80\u524d\u641c\u7d22\n                if(last[j]==s[i][0]){ //\u5f53\u8be5\u5b57\u6bcd\u4e0e\u5f53\u524d\u5355\u8bcd\u9996\u5b57\u6bcd\u76f8\u540c\u65f6\n                    m=1;\n                    ans=1; //\u6709\u5355\u8bcd\u53ef\u63a5 \n                    while(last[j+m]==s[i][m]) m++; //\u8bb0\u5f55\u76f8\u540c\u5b57\u6bcd\u6570\u91cf\n                }\n                if(ans&&j+m==last.size()) break; //\u82e5\u8be5\u5b57\u6bcd\u52a0\u4e0a\u76f8\u540c\u5b57\u6bcd\u6570\u91cf\u7b49\u4e8e\u539f\u5355\u8bcd\u957f\u5ea6 \u8be5\u5355\u8bcd\u53ef\u63a5\n                if(ans&&j+m!=last.size()) ans=0; //\u82e5\u4e0d\u7b49 \u5219ans\u6062\u590d\u4e3a0\uff08\u5373\u53ef\u80fd\u53ea\u662f\u5728\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u4e2d\u95f4\u51fa\u73b0\u4e0e\u4e0b\u4e00\u4e2a\u5355\u8bcd\u76f8\u540c\u7684\u90e8\u5206\uff09\n            }\n            if(ans){\n                int len=sum.size();\n                sum+=s[i].substr(m,s[i].size()-m); //\u5728sum\u540e\u9762\u6dfb\u52a0s[i]\u5b57\u7b26\u4e32\u7b2cm(-1+1)\u4e2a\u4f4d\u7f6e\u7684s[i].size()-m\u4e2a\u5b57\u7b26\uff08\u4e0b\u4e00\u4e2a\u5355\u8bcd\u76f8\u540c\u5b57\u6bcd\u540e\u7684\u5b57\u6bcd\uff09\n                used[i]++; //\u4f7f\u7528\u6b21\u6570\u589e\u52a0\n                dfs(s[i]); //\u4e0b\u4e00\u4e2a\u5355\u8bcd\u641c\u7d22\n                ans=0; //\u6062\u590d\n                used[i]--;\n                sum.erase(len,s[i].size()-m); //\u5220\u53bbsum\u4e2dlen\u4f4d\u7f6e\u8d77\u7684s[i].size()-m\u4e2a\u5b57\u7b26(\u6062\u590d\u539f\u5355\u8bcd)\n            }\n        }\n    }\n    if(!ans&&sum.size()>maxn) maxn=sum.size(); //\u8bb0\u5f55\u6700\u5927\u957f\u5ea6\n    return;\n}\nint main(){ //\u76f8\u4fe1\u4e3b\u7a0b\u5e8fso easy\u5566\n    cin>>n;\n    for(int i=0;i<n;i++) cin>>s[i];\n    cin>>x;\n    dfs(x);\n    cout<<maxn;\n    return 0;\n}\n```",
        "postTime": 1489495470,
        "uid": 34477,
        "name": "jojo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "NO. 13 \u53c8\u4e00\u9053\u6df1\u641c~\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u603b\u662f\u89c9\u5f97\u81ea\u5df1\u7684\u505a\u6cd5\u662f\u6700\u5bb9\u6613\u7406\u89e3\u7684^_^\u871c\u6c41\u81ea\u4fe1\uff09\n\n\u4e0d\u5f97\u4e0d\u8bf4string\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u7528\u8d77\u6765~\n\n\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u601d\u8def\uff1a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5f00\u5934\u662f\u7ed9\u5b9a\u5b57\u6bcd\u7684\u5355\u8bcd\u8c03\u7528\u6df1\u641c\u51fd\u6570\u8fdb\u884c\u8ba1\u7b97\u3002dfs()\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u5f53\u524d\u9f99\u7684\u6700\u540e\u4e00\u4e2a\u6dfb\u52a0\u8fdb\u6765\u7684\u5355\u8bcdcstr\uff08\u5168\u79f0 current string\uff09\uff0c\u4e00\u4e2a\u662f\u5f53\u524d\u9f99\u7684\u957f\u5ea6length\u3002\u521d\u59cb\u65f6length\u5373\u4e3a\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002\n\n\u51fd\u6570legal()\u7528\u6765\u5224\u65ad\u4e24\u4e2a\u5355\u8bcd\u662f\u5426\u662f\u5305\u542b\u5173\u7cfb\u3002\u8fd9\u91cc\u628a\u4e24\u4e2a\u5355\u8bcd\u76f8\u540c\u7684\u60c5\u51b5\u5355\u72ec\u62ff\u51fa\u6765\u8003\u8651\uff0c\u6682\u4e14\u8ba4\u4e3a\u5b83\u4eec\u5408\u6cd5\uff1b\n\n\u63a5\u4e0b\u6765\u662fsubstring()\u51fd\u6570\uff0c\u4e24\u4e2a\u53c2\u6570\u4e24\u4e2a\u5355\u8bcd\u5b57\u7b26\u4e32\u3002\u8fd4\u56de**\u4e24\u4e2a\u5355\u8bcd\u7684\u9996\u5c3e\u6700\u5c0f\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6**\uff0c\u4e5f\u5c31\u662f\u4e3a\u9f99\u65b0\u8d21\u732e\u7684\u957f\u5ea6\u3002\u8fd9\u91cc\u8981\u52a0\u7279\u5224\u2014\u2014\u5982\u679c\u4e24\u4e2a\u5355\u8bcd\u76f8\u7b49\u800c\u4e14\u4ed6\u4eec\u6240\u6c42\u7684\u7684\u6700\u5927\u957f\u5ea6\u5c31\u662f\u5355\u8bcd\u672c\u8eab\u7684\u7684\u957f\u5ea6\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u5355\u8bcd\u9664\u4e86\u672c\u8eab\u4ee5\u5916\u5e76\u6ca1\u6709\u9996\u5c3e\u6700\u5c0f\u516c\u5171\u5b50\u4e32\uff08\u7a81\u7136\u60f3\u5230\u4e24\u4e2a\u76f8\u540c\u7684\u8d28\u6570\uff0c\u5927\u5bb6\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u5355\u8bcd\u5e76\u6ca1\u6709\u589e\u52a0\u9f99\u7684\u957f\u5ea6\uff0c\u56e0\u6b64\u8981\u8fd4\u56de0.\n\n\u4f8b\u5982\uff1a\u9898\u76ee\u7ed9\u7684\u7528\u4f8b tact \u548c tact\uff0c\u4e24\u4e2a\u5355\u8bcd\u76f8\u7b49\uff0c\u4f46\u662f\u9996\u5c3e\u6700\u5c0f\u516c\u5171\u5b50\u4e32\u662f **t**\uff0c\u5b83\u7684\u957f\u5ea6\u662f **1**\n\n\u53c8\u5982\uff1aat\u548cat\uff0c\u4e24\u4e2a\u5355\u8bcd\u4e5f\u76f8\u7b49\uff0c\u4f46\u662f\u9996\u5c3e\u6700\u5c0f\u516c\u5171\u5b50\u4e32\u5c31\u662f\u5b83\u4eec\u672c\u8eab **at**\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u957f\u5ea6\u5e94\u8be5\u7b97\u6210 **0** \u800c\u4e0d\u662f **2**\uff0c\u56e0\u4e3a**\u6ca1\u6709\u4e3a\u9f99\u6ce8\u5165\u65b0\u7684\u6d3b\u529b**\n\n\u7531\u4e8e\u6bcf\u4e2a\u5355\u8bcd\u6700\u591a\u53ef\u4ee5\u51fa\u73b0\u4e24\u6b21\uff0c\u6545mark\u7528\u6765\u6807\u8bb0\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\n\u4e0b\u9762\u76f4\u63a5\u4e0a**AC\u4ee3\u7801~**\n```cpp\n#include<iostream>\n#include<string>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nint n, ans = 0;\nchar head;\nstring str[21];\nint mark[21];\n\nbool legal(string tail, string now)  //\u4e0d\u662f\u5305\u542b\u5173\u7cfb\n{\n\tif (tail != now && (tail.find(now) != string::npos || now.find(tail) != string::npos))\n\t\treturn false;\n\treturn true;\n}\n\nint substring(string tail, string now)  //\u91cd\u590d\u5b50\u4e32\n{\n\tint t = tail.length(), n = now.length();\n\tint small = t < n ? t : n;\n\tint sublen = 0, i;\n\tstring s1, s2;\n\tfor (i = 1; i <= small; i++)\n\t{\n\t\ts1 = tail.substr(t - i);\n\t\ts2 = now.substr(0, i);\n\t\tif (s1 == s2)\n\t\t\tbreak;\n\t}\n\tif (tail == now && i == small)\n\t\ti = 0;\n\tif (s1 != s2)\n\t\ti = 0;\n\treturn i;\n}\n\nint dfs(string cstr, int length) //cstr\u5f53\u524d\u9f99\u7684\u672b\u5c3e\u5355\u8bcd\n{\n\tint ans = length, tmp;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint len = substring(cstr, str[i]);\n\t\tif (len != 0 && legal(str[i], cstr) && mark[i] < 2)\n\t\t{\n\t\t\tmark[i]++;\n\t\t\ttmp = dfs(str[i], length + str[i].length() - len);\n\t\t\tmark[i]--;\n\t\t\tif (ans < tmp)\n\t\t\t\tans = tmp;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> str[i];\n\tcin >> head;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tmemset(mark, 0, sizeof(mark));\n\t\tif (str[i][0] == head)\n\t\t{\n\t\t\tmark[i] = 1;\n\t\t\tint tmp = dfs(str[i], str[i].length());\n\t\t\tmark[i] = 0;\n\t\t\tif (ans < tmp)\n\t\t\t\tans = tmp;\n\t\t}\n\t}\n\tcout << ans;\n\tcin >> n;\n\treturn 0;\n}\n```",
        "postTime": 1567219644,
        "uid": 237242,
        "name": "yubing_lml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "# \u6700\u5bb9\u6613\u88ab\u5ffd\u89c6\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u4e0d\u80fd\u5305\u542b\u5355\u72ec\u7684\u4e00\u4e2a\u5355\u8bcd\n## \u5176\u6b21\uff0c\u6bcf\u4e2a\u5355\u8bcd\u6700\u591a\u4f7f\u7528\u4e24\u6b21\n\u4e3a\u4ee3\u7801\u4f5c\u4e86\u5f88\u8be6\u7ec6\u7684\u6ce8\u91ca\uff0c\u9664\u4e86\u8f93\u5165\u57fa\u672c\u6bcf\u884c\u90fd\u6709\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nint tia[22];//\u50a8\u5b58\u6b21\u6570\nint sum;//\u76ee\u524d\u6700\u957f\u6570\u7ec4\u7684\u957f\u5ea6\nint indx(const string &a,const string &b){//\u5224\u65ad\u662f\u5426\u5305\u542b\n    int z=b.find(a);//\u4f7f\u7528string\u81ea\u5e26\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u627e\u5230\u8fd4\u56de\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6ca1\u6709\u627e\u5230\u8fd4\u56destring::npos\n    if(z==string::npos)\n    return 1;\n    else return z;\n}\nstring word[22];//\u7528\u6765\u5b58\u5355\u8bcd\u7684\u6570\u7ec4\nvoid dfs(string gg,int time[22]){\n    for(int i=gg.size()-1;i>=0;i--){//\u4ece\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb\u63d0\u53d6\u5982abcd\uff0c\u5148\u63d0\u63d0\u53d6d\uff0c\u518d\u63d0\u53d6cd\uff0c\u518d\u63d0\u53d6bcd\uff0c\u6b64\u884c\u53ea\u662f\u4e3a\u4e86\u5b9a\u4f4d\u8981\u63d0\u53d6\u7684\u9996\u5b57\u6bcd\u7684\u4f4d\u7f6e\n        string huang;//\u7528\u6765\u5b58\u9700\u8981\u67e5\u627e\u7684\u5b57\u7b26\n        for(int j=i;j<=gg.size()-1;j++)//\u63d0\u53d6\u5230huang\u91cc\u9762\n            huang+=gg[j];\n        for(int i=0;i<n;i++){\n            if(!indx(huang,word[i])&&time[i]<2&&huang!=gg){//\u5982\u679cword[i]\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5305\u542bhuang\uff0c\u5e76\u4e14\u4f7f\u7528\u6b21\u6570\u5c0f\u4e8e2\uff0c\u6700\u540e\u7528\u6765\u5224\u65ad\u662f\u5426\u5305\u542b\u6574\u4e2a\u5355\u8bcd\uff0c\u5982atide\u5305\u542bat\uff0cat\u8fd8\u662f\u4e2a\u5355\u72ec\u7684\u5355\u8bcd\u5c31\u4e0d\u884c\n                int tt[22];//\u5982\u679c\u627e\u5230\u590d\u5236\u6570\u7ec4\uff0c\u4ee5\u9632\u5f71\u54cd\u5230\u539f\u6570\u7ec4\n                for(int q=0;q<n;q++)tt[q]=time[q];//\u590d\u5236\n                tt[i]++;//\u4f7f\u7528\u6b21\u6570\u52a01\n                string le;//\u7528\u6765\u5408\u5e76\u6570\u7ec4\n                le+=gg;//\u62fc\u63a5\uff0c\u5148\u5408\u5e76\u539f\u5355\u8bcd\n                for(int kk=huang.size();kk<word[i].size();kk++)\n                le+=word[i][kk];//\u4ece\u91cd\u590d\u90e8\u5206\u540e\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5f00\u59cb\u5408\u5e76\n                dfs(le,tt);//dfs\n            }\n        }\n    }\n    if(sum<gg.size())\n        sum=gg.size();//\u83b7\u53d6\u6700\u957f\u7684\u957f\u5ea6\n}\nint main(){\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin>>word[i];\n    }\n    char ch;\n    cin>>ch;\n    for(int i=0;i<n;i++)//\u67e5\u627e\u6240\u6709\u5355\u8bcd\n        if(word[i][0]==ch){//\u5982\u679c\u9996\u5b57\u6bcd\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u4f7f\u7528\n        tia[i]++;\n        dfs(word[i],tia);\n        }\n    cout<<sum;//\u8f93\u51fa\u6700\u5927\u503c\n}\n```\n",
        "postTime": 1565919748,
        "uid": 174647,
        "name": "_AC_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u601d\u8def\u4e0e\u9876\u697c\u7684\u4e00\u6837\uff0c\u9884\u5148\u5904\u7406\u4e24\u4e2a\u5b57\u7b26\u4e32\u6700\u5c0f\u7684\u91cd\u53e0\u957f\u5ea6\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u53e0\u6216\u8005\u4e00\u4e2a\u4e3a\u53e6\u4e00\u4e2a\u7684\u5b50\u96c6\u5219\u7f6e0\uff0c\u4f46\u662f\u6211\u7528\u4e86string\u7c7b\u7684\u5e93\u51fd\u6570substr(),\u8fd9\u6837\u4e0d\u7528\u4e24\u91cd\u5faa\u73af\u53ea\u7528\u4e00\u91cd\u5faa\u73af\uff0c\u81ea\u8ba4\u4e3a\u662f\u6700\u7b80\u6d01\u3001\u5bb9\u6613\u770b\u61c2\u7684\u9884\u5904\u7406\u51fd\u6570\u4e86XD\u3002\n\n\u5176\u4e2d\u6709\u51e0\u4e2a\u9700\u8981\u5c24\u4e3a\u6ce8\u610f\u7684\u5730\u65b9\uff08\u81ea\u5df1\u683d\u8fdb\u53bb\u7684\u5730\u65b9T.T\uff09\u3002\n\n1.\u81ea\u5df1\u548c\u81ea\u5df1\u4e5f\u9700\u8981\u5224\u65ad\uff0c\u6bd4\u5982\u4f8b\u5b50\u91cctact\u548ctact\u7684\u91cd\u590d\u90e8\u5206\u5c31\u662f1\uff08\u6211\u5c31\u662f\u89c9\u5f97\u81ea\u5df1\u662f\u81ea\u5df1\u7684\u5b50\u96c6\uff0c\u80af\u5b9a\u4e3a0\u4e0d\u7528\u5224\u65ad\uff0c\u7ed3\u679c\u60b2\u5267\uff09\n\n2.\u6ca1\u5fc5\u8981\u7279\u610f\u5224\u65ad\u662f\u5426\u4e3a\u5b50\u96c6\uff0c\u5faa\u73af\u53d8\u91cflen\u4ece1\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32\u6700\u77ed\u957f\u5ea6\u51cf1\u5faa\u73af\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86\uff0c\u81ea\u52a8\u6392\u9664\u5b50\u96c6\u60c5\u51b5\u3002\n\n3.\u6211dfs\u7684\u65b9\u6cd5\u662f\u5faa\u73af\u6240\u6709\u5b57\u7b26\u4e32\uff0c\u53ea\u8981\u7b2c0\u4e2a\u5b57\u7b26\u4e3a\u7ed9\u5b9a\u5f00\u5934\u5c31dfs\uff0c\u51fd\u6570\u91cc\u7528\u4e86\u5269\u4f59\u4e2a\u6570\u51cf\u51cf\u7136\u540e\u52a0\u52a0\u7684\u56de\u6eaf\uff0c\u7ed3\u679cmain\u51fd\u6570\u91cc\u8c03\u7528\u5fd8\u8bb0\u641e\u8fd9\u4e2a\u4e86\u5bfc\u81f4\u7b2c\u4e00\u4e2a\u63a5\u4e0a\u7684\u5355\u8bcd\u8fd8\u80fd\u7528\u4e24\u6b21\uff01\u5f88\u96be\u53d7\n\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\uff0c\u91cc\u9762\u6709\u8be6\u7ec6\u6ce8\u91ca\uff1a\n```cpp\n/*\n*/\n#include <iostream>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <algorithm>\n#include <math.h>\n#include <string> \n#include <string.h>\nusing namespace std;\n\nstring a[25];\nint N,same[25][25];\t \nint num[25],maxi=0; //num\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5269\u4f59\u7684\u6b21\u6570 \nint proc(int i,int j)\t//\u8ba1\u7b97i\u672b\u5c3e\u548cj\u5f00\u5934\u6700\u5c11\u6709\u51e0\u4e2a\u91cd\u590d\uff0c\u5b58\u5165same\uff0c\u5982\u679c\u6ca1\u6709\u6216\u5305\u542b\u8bbe0. \n{\n\tstring front=a[i],back=a[j];\n\tfor(int res=1;res<front.length()&&res<back.length();res++)\t//res\u4e3a\u91cd\u590d\u7684\u6700\u5c0f\u957f\u5ea6 \n\t\tif(front.substr(front.size()-res)==back.substr(0,res))\t//substr()\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u4ee3\u8868\u4ece\u8be5\u4e0b\u6807\u5230\u672b\u5c3e\u7684\u5b50\u4e32 \n\t\t\treturn res;\t\n\treturn 0;\n}\n\n\nvoid dfs(int n,int len)//\u73b0\u5728\u662f\u4ee5\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u7ed3\u5c3e,\u957f\u5ea6\u5230len\u4e86 \n{\n\t maxi=max(maxi,len);//\u66f4\u65b0\u7b54\u6848 \n\t for(int i=0;i<N;i++)\n\t {\n\t \tif(num[i]>0 && same[n][i]>0)\n\t \t{\n\t \t\tnum[i]--;\n\t\t\tdfs(i,len+a[i].length()-same[n][i]);\n\t\t\tnum[i]++;\t\n\t\t}\n\t }\n}\n\nint main()\n{\n\tcin>>N;\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tcin>>a[i];\n\t\tnum[i]=2;\n\t\tfor(int j=0;j<=i;j++)//\u5c0f\u4e8e\u7b49\u4e8e\u5f88\u91cd\u8981\uff0c\u81ea\u5df1\u548c\u81ea\u5df1\u4e5f\u53ef\u4ee5\u63a5,tact\u548ctact\u91cd\u590d\u90e8\u5206\u4e3a1 \n\t\t{\n\t\t\tsame[i][j]=proc(i,j);\n\t\t\tsame[j][i]=proc(j,i);\n\t\t}\n\t}\n\tchar ch;\n\tcin>>ch;\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tif(a[i][0]==ch)\t//\u8fd9\u8fb9\u4e5f\u8981\u8fdb\u884c\u56de\u6eaf\u554a\uff01 \n\t\t{\n\t\t\tnum[i]--;\n\t\t\tdfs(i,a[i].length());\n\t\t\tnum[i]++;\n\t\t}\n\t}\n\tcout<<maxi<<endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1540125182,
        "uid": 134926,
        "name": "SephiHorse",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u7528\u4e86\u8bb0\u5f55\u7f16\u53f7\u7684\u65b9\u6cd5\uff0c\u5e76\u4e0d\u662f\u8bb0\u5f55\u5355\u8bcd\uff0c\u8bb0\u5f55\u5355\u8bcd\u64cd\u4f5c\u9ebb\u70e6\uff0c\u8bb0\u5f55\u7f16\u53f7\u53ef\u4ee5\u5feb\u901f\u6df1\u641c\u8fb9\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u770b\u8fb9\u7406\u89e3\u66f4\u597d\n\n-----------------------------------\n\n\n\n    \n\n```cpp\n#include<cstdio>\n#include<cstring>\nchar s[30][30];//\u8bb0\u5f55\u5355\u8bcd \nint ans=0;//\u8bb0\u5f55\u6700\u957f\u7684\u9f99 \nint d[30];//d[]\u5355\u8bcd\u957f\u5ea6\nstruct nod{int l,a[30],b[30],v;nod(){l=0;v=2;}}a[30];\n//nod a[]\u8bb0\u5f55\u5355\u8bcd\u4e0e\u5355\u8bcd\u95f4\u7684\u5173\u7cfb,\u5185\u586b\u5355\u8bcd\u7f16\u53f7 \n//l\u80fd\u63a5\u5355\u8bcd\u4e2a\u6570,a[]\u80fd\u63a5\u7684\u5355\u8bcd,b[]\u91cd\u590d\u957f\u5ea6,v\u4f7f\u7528\u6b21\u6570 \nvoid dfs(int x,int t)//x\u5355\u8bcd\u7f16\u53f7,t\u8fd9\u6761\u9f99\u7684\u957f\u5ea6 \n{\n    if(t>ans)ans=t;\n    for(int i=1;i<=a[x].l;i++)//a[x].l\u80fd\u63a5\u5355\u8bcd\u4e2a\u6570 \n    {\n        a[a[x].a[i]].v--;//\u4f7f\u7528\u4e86\u4e00\u6b21 \n        if(a[a[x].a[i]].v>=0)//v>=0\u662f\u56e0\u4e3a\u4e0a\u9762\u51cf\u4e86\u4e00\u6b21,\u6240\u4ee5\u7528>=0 \n        {\n            dfs(a[x].a[i],t+d[a[x].a[i]]-a[x].b[i]);\n            //a[x].a[i]\u7f16\u53f7\u4e3ax\u7684\u5355\u8bcd\u540e\u8857\u7f16\u53f7\u4e3aa[x].a[i]\u7684\u5355\u8bcd\n            //\u52a0\u4e0a\u5355\u8bcd\u957f\u5ea6\u5e76\u51cf\u53bb\u91cd\u53e0\u90e8\u5206\n        }\n        a[a[x].a[i]].v++;//\u4f7f\u7528\u5b8c\u8fd8\u56de\u53bb \n    }\n}\nint main()\n{\n    int n;scanf(\"%d\",&n);\n    for(int i=1;i<=n+1;i++)\n    {\n        scanf(\"%s\",s[i]+1);\n        d[i]=strlen(s[i]+1);\n```\n}//\u8f93\u5165\u4e0d\u591a\u8bf4\nfor(int i=1;i<=n+1;i++)//\u5355\u8bcd n+1\u5c06\u5f00\u5934\u5b57\u6bcd\u8ba1\u5165\n\n```cpp\n    {\n        for(int j=1;j<=d[i];j++)//\u5b57\u6bcd \n        {\n            for(int x=1;x<=n;x++)//\u5355\u8bcd n\u4e0d\u8bb0\u5f55\u5f00\u5934\u5b57\u6bcd \n            {\n                //if(i==x)continue;\u6ce8\u610f\u53ef\u4ee5\u81ea\u5df1\u63a5\u81ea\u5df1 \n                if(s[i][j]==s[x][1])//\u5224\u65ad\u662f\u5426\u91cd\u53e0 \n                {\n                    int q=0;//\u6807\u7b7eq=0\u91cd\u5408,q=1\u4e0d\u91cd\u5408 \n                    for(int y=j+1;y<=d[i];y++)//\u5b57\u6bcd \n                    {\n                        if(s[i][y]!=s[x][y-j+1]||d[i]-j+1==d[x])\n                        {\n                            /*\u89e3\u91ca d[i]-j+1==d[x] \n```\nd[i]-f+1\u8868\u793a\u91cd\u53e0\u957f\u5ea6\nd[x]\u8868\u793a\u88ab\u91cd\u53e0\u5355\u8bcd\u957f\u5ea6\n\n\u5982at\u548ceat\n\n\u9898\u76ee\u89c4\u5b9a\u4e0d\u80fd\u63a5\n\n\\*/\n```cpp\n                            q=1;\n                            break;\n                        }\n                    }\n                    if(q==0)\n                    {\n                        a[i].a[++a[i].l]=x;\n                        //\u6b64\u5355\u8bcd\u540e\u6ee1\u53ef\u63a5\u5355\u8bcd\u7f16\u53f7 \n                        a[i].b[a[i].l]=d[i]-j+1;\n                        //\u91cd\u53e0\u540e\u91cd\u53e0\u90e8\u5206\u957f\u5ea6 \n                    }\n                }\n            }\n        }\n    }\n```\n/\\*\u8fd9\u91cc\u7559\u4e00\u4e2a\u5c0f\u8bf4\u660e:\nacceptee\u548c eery\u8fd9\u4e24\u4e2a\u5355\u8bcd\n\n\u53ef\u63a5\u4e3aaccepteery     \u63a5ee\n\n\u6216\u8005accepteeety    \u63a5e\n\n\u6211\u7528\u4e86\u63a5ee\u7684\u65b9\u6cd5\n\n\u8fd9\u6837\u96be\u5206\u5f00,\u4e0d\u8fc7\u8fd9\u9053\u9898\u4e2d\u6ca1\u6709\u8fd9\u6837\u7684\u70b9\u6240\u4ee5\u4e0d\u5fc5\u8003\u8651\n\n\u56e0\u4e3a\u5df2\u7ecfA\u4e86,\u6240\u4ee5\u6ca1\u5728\u8fdb\u4e00\u6b65\u8003\u8651\n\n\\*/\n    \n```cpp\n    /*for(int i=1;i<=n;i++)\n    {\n        printf(\"%d\\t\",i);\n        for(int j=1;j<=d[i];j++)printf(\"%c\",s[i][j]);\n        for(int j=1;j<=a[i].l;j++)\n        {\n            printf(\"\\t%d %d\",a[i].a[j],a[i].b[j]);\n        }\n        printf(\"\\n\");\n    }\n    printf(\"%c\",c);*/\n    dfs(n+1,1);//\u6df1\u641c  n+1\u5f00\u5934\u5b57\u6bcd\u5f00\u59cb\u641c \n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1516760663,
        "uid": 36706,
        "name": "\u5c0f\u70ab\u7f8a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u53ef\u80fd\u6709dalao\u53d1\u73b0\u6211\u548c\u4e0b\u9762\u7684\u67d0\u4f4ddalao\u6bd4\u8f83\u76f8\u4f3c\uff08\u6ca1\u9519\uff0c\u5077\u4e86\u601d\u8def\uff09\uff0c\u4e0d\u8fc7\u6ca1\u5173\u7cfb\u554a\uff0c\u6211\u8bb2\u7684\u66f4\u660e\u767d\u4e00\u70b9\u884c\u54270^0\n\n\u5148\u8bf4\u4e0b\u601d\u60f3\uff0c\u8fd9\u9898\u5c31\u662f\u641c\u7d22\u56de\u6eaf\uff0c\u90a3\u4e48\u96be\u70b9\u5728\u54ea\u91cc\u5462\uff0c\u4e00\u4e2a\u5355\u8bcd\u80fd\u5f04\u4e24\u6b21\u4ee5\u53ca\u90e8\u5206\u91cd\u53e0\uff08\u5c31\u662f\u8981\u591a\u5c11\u91cd\u53e0\u7684\u5b57\u6bcd\u624d\u597d\uff09\u7684\u95ee\u9898\n\n\u6211\u4eec\u8be5\u600e\u4e48\u7b80\u5316\u4e00\u70b9\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\n\u4e00\u3001\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u52a8\u6001\u5730\u5b58\u5f53\u524d\u8fd9\u51e0\u4e2a\u5355\u8bcd\u4f7f\u7528\u7684\u6b21\u6570\uff1b\n\n\u4e8c\u3001\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4f[i,j]\u6765\u5b58\u7b2ci\u4e2a\u5355\u8bcd\u5230\u7b2cj\u4e2a\u5355\u8bcd\u6700\u591a\u80fd\u5ef6\u957f\u591a\u5c11\uff1b\uff08\u8fd9\u91cc\u5230\u65f6\u5019\u8fd0\u7b97te\u65b9\u4fbf\uff09\n\n\u641e\u6e05\u695a\u8fd9\u4e24\u4e2a\u4e4b\u540e\u5c31\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730dfs\u4e86\n\n\uff08\u4e00\u5f00\u59cb\u6211\u4e3a\u4ec0\u4e48\u8981\u60f3\u90a3\u4e48\u4e45\uff08= =\uff1b\uff09\u2014\u2014\u300b\u6ca1\u770b\u61c2\u9898\u76ee\uff0c\u4ee5\u4e3a\u53ef\u4ee5\u9009\u4e0a\u4e2a\u5355\u8bcd\u7684\u4e00\u6bb5\u63a5\u8fd9\u4e2a\u5355\u8bcd\u7684\u4e00\u6bb5\u3010\u8fd9\u600e\u4e48\u505a\u3002\u3002\u3002\u3011\uff0c\u5176\u5b9e\u8981\u8fde\u5c31\u8981\u6574\u4e2a\u5355\u8bcd\u8fde\u4e0a\u53bb\uff0c\u4e0d\u80fd\u622a\u53d6\uff0c\u4e0d\u61c2\u9898\u76ee\u7684\u540c\u5b66\u770b\u4e86\u6211\u8fd9\u53e5laosao\u6216\u8bb8\u5c31\u77e5\u9053\u600e\u4e48\u505a\u4e86\uff09\n\n\u4e0b\u9762\u662f\u6211\u7684code\uff1a\n\n```cpp\nprogram words;\nvar\n      a:array[1..20]of string;//\u5b58\u521d\u59cb\u5355\u8bcd\n      f:array[1..20,1..20]of longint;//f[i,j]\u8bb0\u5f55\u7b2ci\u4e2a\u5355\u8bcd\u5230\u7b2cj\u4e2a\u5355\u8bcd\u6700\u591a\u80fd\u5ef6\u957f\u591a\u5c11\n      e:array[1..20]of longint;//\u5b58\u4f7f\u7528\u6b21\u6570\n      n,tot,ans,i,j:longint;//tot\u7528\u6765\u5b58\u6bcf\u6b21dfs\u5b8c\u6bd5\u540e\u7684\u7b54\u6848\uff0cans\u662f\u771f . \u7b54\u6848\n      head:char;\nfunction min(x,y:longint):longint;\nbegin\n       if x>y then exit(y) else exit(x);\nend;\nprocedure add(x,y:longint);//\u8bb0\u5f55\u5ef6\u957f\u957f\u5ea6\u7684\u5177\u4f53\u5b9e\u73b0\nvar\n    i,j,leno,lent,sum:longint;\nbegin\n      leno:=length(a[x]);\n      lent:=length(a[y]);\n      sum:=maxlongint;//\u8fd9\u4e2a\u5c31\u662f\u7528\u6765\u8bb0\u5f55\u6700\u5927\u5ef6\u957f\u957f\u5ea6\u7684\u5bb6\u4f19\n      for j:=leno downto 1 do//\u4ece\u540e\u5f80\u524d\u6570\u65b9\u4fbf\u64cd\u4f5c\n      if a[x][j]=a[y][1] then//\u7b2cx\u4e2a\u5355\u8bcd\u7684\u7b2cj\u4e2a\u548c\u7b2cy\u4e2a\u5355\u8bcd\u7684\u7b2c1\u4e2a\u9996\u5148\u8981\u7b26\u5408\n      if copy(a[x],j,leno-j+1)=copy(a[y],1,leno-j+1)then//copy(?,i,l)\u51fd\u6570\u4e3a\u622a\u53d6?\u4e2d\u7b2ci\u4f4d\u7684\u63a5\u4e0b\u6765\u957f\u5ea6\u4e3al\u7684\u4e00\u6bb5\uff0c\u4e8e\u662f\u8fd9\u91cc\u4e3a\u6bd4\u8f83\u4e00\u6bb5\n      if leno-j+1<>min(leno,lent) then//\u6839\u636e\u9898\u76ee\u4e2d\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb\u800c\u751f\n      begin\n            sum:=min(sum,leno-j+1);//\u6b63\u5f0f\u8bb0\u5f55\u5566\n            break;//\u4f18\u5316\uff08\u7cbe\u9ad3\uff09\uff0c\u540e\u9762\u4e0d\u53ef\u80fd\u8fd8\u6709\u6bd4\u8fd9\u4e2a\u8fd8\u8981\u957f\u7684\u4e86\uff0c\u53ea\u4f1a\u8d8a\u6765\u8d8a\u77ed\uff0c\u81ea\u5df1\u4f53\u4f1a\u4e00\u4e0b\n      end;\n      if sum<>maxlongint then f[x,y]:=lent-sum;//\u4e0d\u89e3\u91ca\nend;\nprocedure dfs(x:longint);//\u6df1\u641c\u5b9e\u73b0\nvar\n      i:longint;\nbegin\n      for i:=1 to n do\n      begin\n            if e[i]<>-2 then//\u8fd8\u6ca1\u6709\u88ab\u7528\u591f\u4e24\u6b21\n            if f[x,i]<>0 then//\u4e0d\u662f\u505a\u65e0\u7528\u529f\n            begin\n                  inc(tot,f[x,i]);//\u52a0\u5165\u5f53\u524d\u7684\u957f\u5ea6\n                  dec(e[i]);//\u51cf\u5c11\u4e00\u6b21\u8fd9\u4e2a\u7684\u4f7f\u7528\u6b21\u6570\n                  dfs(i);\n                  inc(e[i]);//\u4ee5\u4e0b\u4e24\u884c\u56de\u6eaf\u7684\u5b9e\u73b0\n                  dec(tot,f[x,i]);\n            end;\n      end;\n      if tot>ans then ans:=tot;//\u5f53\u4e0a\u9762\u90fd\u4e0d\u6267\u884c\u7684\u65f6\u5019\uff0c\u8bf4\u660e\u7b2c?\u6b21\u6df1\u641c\u7ed3\u675f\uff0c\u53ef\u4ee5\u8bb0\u5f55\u7ed3\u679c\u4e86\nend;\nbegin\n      //assign(input,'word.in'); reset(input);//\u8bf7\u81ea\u52a8\u5ffd\u7565\u4e00\u4e0b\u6587\u4ef6\u7684\u65e0\u5173\u6587\u5b57\n      readln(n);\n      for i:=1 to n do\n      readln(a[i]);\n      for i:=1 to n do\n      for j:=1 to n do\n      begin\n             add(i,j);//\u6ca1\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u8981\u5305\u62ec\u81ea\u5df1\u8fde\u81ea\u5df1\n      end;\n      readln(head);\n      for i:=1 to n do\n      begin\n            fillchar(e,sizeof(e),0);//\u4e0d\u8981\u5fd8\u4e86\u6bcf\u6b21\u66f4\u65b0\u4e00\u6b21\n            if a[i][1]=head then//\u627e\u9f99\u5934\n            begin\n                  dec(e[i]);//\u51cf\u5c11\u4e00\u6b21\u4f7f\u7528\u6b21\u6570\n                  tot:=length(a[i]);//\u5148\u628a\u9f99\u5934\u5355\u8bcd\u957f\u5ea6\u8bb0\u5f55\u4e86\n                  dfs(i);//\u6df1\u641c\n            end;\n      end;\n      write(ans);//\u8f93\u51fa0~0\n      //close(input);\nend.\n\n```",
        "postTime": 1502891746,
        "uid": 38313,
        "name": "chenkaixing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u611f\u89c9\u524d\u9762\u7684\u9898\u89e3\u90fd\u597d\u957f\u554a\uff0c\u81ea\u4e0d\u91cf\u529b\u7684\u849f\u84bb\u6765\u8d34\u4e00\u4e0b\u4ee3\u7801\n\n\uff08\u9707\u60ca\u4e8e\u8fd9\u90fd\u80fdac\u3002\u3002\u3002\uff09\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u662f\u5148\u4ece\u5b57\u7b26\u4e32\u4e2d\u627e\u6709\u91cd\u90e8\u5206\u7136\u540e\u76f4\u63a5\u6bd4\u8f83\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u6bd4\u8f83\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u7528\u6765\u8ba1\u7b97\u6570\u503c\n\n\u5176\u5b9e\u6ee1\u6c34\u7684\u9898\n\n\u603b\u4e4b\u770b\u6ce8\u91ca\u5566\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<stack>\n#include<cstring>//\nusing namespace std;\nint n,num;\nstring w[25];//\u8bb0\u5f55\u5355\u8bcd\nint use[25];//\u8bb0\u5f55\u4f7f\u7528\u5355\u8bcd\u6b21\u6570\nint ans,now=1;//\u8bb0\u5f55\u63a5\u9f99\u7684\u957f\u5ea6\uff0cnow=1\u662f\u7701\u7565\u4e86\u5934\u5b57\u6bcd\nvoid dfs(int k)//\u6df1\u641c\n{\n    ans=max(ans,now);//\u8ddf\u4e0a\u4e2a\u9898\u89e3\u5b66\u7684\uff0c\u53d6\u5927\n    for(int i=1;i<=n;i++)//\u641c\u7d22\u6bcf\u4e2a\u5355\u8bcd\n    {\n        if(use[i]<2)//\u5224\u65ad\n        {\n            for(int j=0;j<w[k].length();j++)//\u5224\u65ad\uff0c\u5982\u679c\u9996\u5b57\u6bcd\u76f8\u540c\u5219\u6bd4\u8f83\n                if(w[i][0]==w[k][j])\n            {\n                int l1=j,l2=0;\n                while(w[i][l2]==w[k][l1]&&l1<w[k].length())l1++,l2++;//\u6bd4\u8f83\u81f3\u8bcd\u5c3e\n                if(l1>=w[k].length())//\u5982\u679c\u6bd4\u8f83\u5b8c\u6210\n                {\n                    now+=w[i].length()-l2;//\u65b0\u5355\u8bcd\u51cf\u53bb\u4e0e\u4e0a\u4e2a\u5355\u8bcd\u91cd\u5408\u7684\u957f\u5ea6\n                    use[i]++;\n                    dfs(i);//\u4ee5\u8fd9\u4e2a\u5355\u8bcd\u4e3a\u65b0\u8282\u70b9\u641c\u7d22\n                    now-=w[i].length()-l2;\n                    use[i]--;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>w[i];\n    cin>>w[0];//**\u628a\u5934\u5b57\u6bcd\u770b\u505a\u4e00\u4e2a\u5355\u8bcd**\n    dfs(0);//**\u4ece\u5934\u5b57\u6bcd\u8fd9\u4e2a\u5355\u8bcd\u641c\u7d22**\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1499159072,
        "uid": 28218,
        "name": "\u554a\u5076\u20140",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u641c\u7d22+\u5b57\u7b26\u4e32\u5904\u7406\uff1a\n\n\u8fd9\u9898\u53ea\u6709\u5b57\u7b26\u4e32\u5904\u7406\u6709\u4e9b\u53d8\u6001\uff08\u5751\u4e86\u4e00\u4e2a\u5c0f\u65f6\u554a\uff0cQAQ\uff09\uff0c\u641c\u7d22\u8fd8\u597d\u3002\n\n\u5b57\u7b26\u4e32\u5c31\u7528\u4ece\u540e\u5f80\u524d \u7b49\u957f\u5ea6\u6bd4\u8f83\u5c31\u884c\u4e86\n\n\u4f8b\u5982 touch cheat\n\nh->ch \u8fd9\u4e2a\u4ece\u5c3e\u5df4\u5f00\u59cb\u4e00\u4e2a\u4e2a\u53d6\n\nc->ch  \u540e\u9762\u90a3\u4e2a\u548c\u524d\u9762\u957f\u5ea6\u4e00\u6837 \u5e76\u4e14\u4ece\u5934\u5f00\u59cb\u53d6\u5c31\u884c\u4e86\n\n\u672c\u4eba\u5c0f\u767d\uff0c\u7f16\u7684\u7565\u5751\uff0c\u6c42\u5927\u795e\u653e\u8fc7\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\n\nint n;\nint a[100]={0};\nint ans=0;\nint q[100]={0};\nstring ch[100];\n\nbool bj(int ai,int bi,int b1,int e1,int b2,int e2)   //\u5176\u5b9ee2\u662f\u591a\u4f59\u7684\uff0c\u4f46\u4e3a\u4e86\u76f4\u89c2\u8fd8\u662f\u8fd9\u6837\u641e\n{\n    for (int i=b1;i<=e1;i++)                \n    {\n        int j=b2+i-b1;                                //\u540c\u4f4d\u6bd4\u8f83\n        if (ch[ai][i]!=ch[bi][j]) return false;           \n    }return true;\n}\n\nint pj (int ai,int bi)\n{\n    for (int i=a[ai]-1;i>=0;i--)          //\u9006\u5e8f\u679a\u4e3e\n     {\n        \n         int cd=a[ai]-i;                               //\u8bb0\u5f55\u957f\u5ea6\n     if (bj(ai,bi,i,a[ai]-1,0,cd-1)) return cd;       \n     }\n     return 0;\n}\n\nvoid dfs (int s,int m)\n{    \n    int u=0;\n    q[m]++;\n    if (s>ans) ans=s;\n    for (int i=1;i<=n;i++)\n    {\n        u=pj(m,i);\n      if (u>0 && q[i]<2)\n      if (m!=i || u!=a[i])           //\u5224\u65ad\u4e24\u4e2a\u5b8c\u5168\u4e00\u6837\u7684\u5168\u90e8\u91cd\u53e0\uff08\u4e0d\u77e5\u9053\u6709\u6728\u6709\u5fc5\u8981\uff09\n        dfs (s+a[i]-u,i);      //\u8ba1\u7b97\u957f\u5ea6\uff0c\u8bb0\u5f97\u8981\u51cf\u53bb\u91cd\u53e0\u7684\u90e8\u5206\uff01\n     }        q[m]--;\n}\n\nint main ()\n{\n    cin>>n;\n    for (int i=1;i<=n;i++)\n     {\n         \n         cin>>ch[i];\n     \n        a[i]=ch[i].size();        //\u767e\u5ea6\u53bb\u67e5\u4e86\u67e5string\u7684\u7528\u6cd5  string\u771f\u7684\u597d\u7528\u554a\n     }\n     char k;\n     cin>>k;\n     for (int i=1;i<=n;i++)\n     if (ch[i][0]==k) \n     dfs (a[i],i);          //\u4e00\u5f00\u59cb\u641c\u7d22\u65f6\u5c31\u8981\u8bb0\u4e0a\u957f\u5ea6\n     \n     printf (\"%d\",ans);\n\n    \n    return 0;\n}\n```\n\u518d\u6b21\u7533\u660e\uff0c\u672c\u4eba\u5c0f\u767d\uff0c\u6c42\u8f7b\u55b7\n",
        "postTime": 1478183091,
        "uid": 19128,
        "name": "zjp_shadow",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "# \u5199\u4e00\u4e2a\u4f4d\u8fd0\u7b97\u7684\u89e3\u6cd5\n```cpp\n#include <cstdio>\n#include <string.h>\nchar s[25][50],s1[5];\nint n,top,add[25][25],rec[25],num[25],maxlen=0,len=0;\n//\u89e3\u91ca\u4e00\u4e0b\u5404\u4e2a\u53d8\u91cf\u7684\u542b\u4e49\n//add[i][j]\u8868\u793a\u5728\u7b2ci\u4e2a\u5355\u8bcd\u540e\u9762\u63a5\u7b2cj\u4e2a\u5355\u8bcd\u6700\u591a\u53ef\u589e\u52a0\u7684\u957f\u5ea6\uff0c\u5982\u679c\u63a5\u4e0d\u4e86add[i][j]=0\n\n//rec[i]\u8bb0\u5f55\u7b2ci\u4e2a\u5355\u8bcd\u53ef\u4ee5\u63a5\u7684\u5355\u8bcd\u7f16\u53f7\u3002\u6bd4\u5982\u7b2c1\u4e2a\u5355\u8bcd\u53ef\u4ee5\u63a5\u7b2c1\u30012\u30013\u4e2a\u5355\u8bcd\u90a3\u4e48rec[i]\u5c31\u662f7(\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a111)\n\n//num[i]\u8868\u793a\u7b2ci\u4e2a\u5355\u8bcd\u7684\u5f53\u524d\u4f7f\u7528\u7684\u6570\u91cf\n\nint max(int a,int b){\n    return a>b?a:b;\n}\n\nint search(int n){ //\u627e\u4e00\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u7b2c\u4e00\u4e2a1\u7684\u4f4d\u7f6e\uff0c\u6bd4\u5982search(4)\u4e3a3\uff084\u7684\u4e8c\u8fdb\u5236100\uff09\uff0csearch(9)\u4e3a1(9\u7684\u4e8c\u8fdb\u52361001)\n    int times=1;\n    while((n&1)==0){\n        times++;\n        n>>=1;\n    }\n    return times;\n}\n\nvoid init(){    //\u4e3b\u8981\u662f\u6c42\u51faadd\u6570\u7ec4\u548crec\u6570\u7ec4\n    int l,r;    \n    for(int i=1;i<=n;i++){   //\u7a77\u4e3e\u524d\u7aef\n        for(int j=1;j<=n;j++){   //\u7a77\u4e3e\u540e\u7aef\n            l=(int)strlen(s[i]); //l\u4e3a\u524d\u9762\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\n            r=(int)strlen(s[j]); //r\u4e3a\u540e\u9762\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\n            for(int len=1;len<l&&len<r;len++){  \n//\u7a77\u4e3e\u53ef\u80fd\u7684\u5171\u540c\u957f\u5ea6\uff0c\u4ece\u5c0f\u5230\u5927\uff0c\u4e00\u65e6\u5339\u914d\u5c31\u505c\u6b62\uff0c\u56e0\u4e3a\u5171\u540c\u957f\u5ea6\u8d8a\u5c0f\uff0c\u80fd\u7ed9\u6574\u4e2a\u5b57\u7b26\u4e32\u589e\u52a0\u7684\u957f\u5ea6\u8d8a\u5927\n                int tmp=len;\n                while(tmp){\n                    if(s[i][l-tmp]!=s[j][len-tmp]) \n                    break;\n                    tmp--;\n                }\n                if(tmp==0){\n                    add[i][j]=r-len;\n                    break;\n                }\n            }\n            if(add[i][j]) rec[i]+=(1<<(j-1));\n        }\n    }\n}\n\nvoid dfs(int x,int n,int ban){  \n//x\u662f\u5f53\u524d\u8bbf\u95ee\u7684\u5355\u8bcd\u5e8f\u53f7\uff0cn\u662frec[x],ban\u7528\u4e8c\u8fdb\u5236\u8bb0\u5f55\u5f53\u524d\u4e0d\u80fd\u4f7f\u7528\u7684\u5355\u8bcd\u5e8f\u53f7\n    maxlen=max(maxlen,len);  //\u6bcf\u6b21dfs\u90fd\u6bd4\u8f83\u4e00\u4e0b\u53d6\u6700\u957f\n    int tmp;                 //\u7528\u6765\u8bb0\u5f55\u7b2c\u4e00\u4e2a1\n    n=n&~ban;                //\u53bb\u6389\u4e0d\u80fd\u4f7f\u7528\u7684\u5355\u8bcd\u7f16\u53f7\n    while(n){\n        tmp=(n&-n);   \n        //\u8fd9\u4e2a\u64cd\u4f5c\u662f\u53d6\u51fan\u7684\u7b2c\u4e00\u4e2a1\u6bd4\u5982\uff088&-8\uff09\u5c31\u662f8\uff088\u7684\u7b2c\u4e00        //\u4e2a1\u5728\u7b2c4\u4f4d\uff09  \uff089&-9\uff09\u5c31\u662f1\uff089\u7684\u7b2c\u4e00\u4e2a1\u5728\u7b2c1\u4f4d\uff09\n        n-=tmp;\n        int p=search(tmp);\n        if(num[p]<1){  //\u5f53\u524d\u4f7f\u7528\u4e86\u7b2cp\u4e2a\u5355\u8bcd\u5176\u4f7f\u7528\u6b21\u6570\u4e5f\u6ca1\u52302\u6b21\n            num[p]++;\n            len+=add[x][p];\n            dfs(p,rec[p],ban);  //\u53ef\u4ee5\u548c\u4e0b\u9762else if\u4e2d\u7684dfs(p,rec[p],ban|tmp)\u6bd4\u8f83\u4e00\u4e0b\u5e2e\u52a9\u7406\u89e3\n            num[p]--;\n            len-=add[x][p];\n        }\n        else if(num[p]==1){ //\u5f53\u524d\u4f7f\u7528\u4e86\u7b2cp\u4e2a\u5355\u8bcd\u5176\u4f7f\u7528\u6b21\u6570\u8fbe\u52302\u6b21\n            len+=add[x][p];\n            dfs(p,rec[p],ban|tmp);\n            len-=add[x][p];\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d\",&n);\n    top=(1<<n)-1;\n    for(int i=1;i<=n;i++) scanf(\"%s\",s[i]);\n    init();\n    scanf(\"%s\",s1);\n    for(int i=1;i<=n;i++){\n        if(s[i][0]==s1[0]){\n            num[i]++;\n            len+=(int)strlen(s[i]);\n            dfs(i,rec[i],0);\n            num[i]--;\n            len-=(int)strlen(s[i]);\n        }\n    }\n    printf(\"%d\\n\",maxlen);\n    return 0;\n}\n\n\n```",
        "postTime": 1548913371,
        "uid": 180410,
        "name": "limuloo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "** _\u63d0\u4f9b\u66f4\u597d\u601d\u8def_ **\n\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u91cd\u590d\u957f\u5ea6\u6253\u4e00\u4e2a\u8868\na[i][j]\n\n\n------------\n\n\n\n\n```\n#include<iostream>\nusing namespace std;\nint n,i,j,ii,c[25],ans=-1;///c\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\nstring s[25],ss;///s\u539f\u5b57\u7b26 ss\u8d77\u70b9\nint hb(string s1,string s2)\n{///hb--->\u5408\u5e76\n    int l1=s1.size(),l2=s2.size();\n    for (i=1; i<=min(l1,l2)-1; i++) ///i\u679a\u4e3e\u91cd\u590d\u7684\u957f\u5ea6\n    {\n        string ss1=\"\",ss2=\"\";\n        for (j=l1-i; j<=l1-1; j++)\n            ss1=ss1+s1[j];\n        for (j=0; j<=i-1; j++)\n            ss2=ss2+s2[j];///ss1\u548css2\u662fs1\u548cs2\u7684\u622a\u53d6\u7684\u90e8\u5206\n        ///cout<<ss1<<\" \"<<ss2<<\" \"<<s1<<\" \"<<s2<<endl;\n        bool bb=true;\n        for (j=0; j<=i-1; j++)\n            if (ss1[j]!=ss2[j]) bb=false;\n        if (bb) return i;\n    }\n    return 0;///\u627e\u4e0d\u5230\u5c31\u8fd4\u56de0\n}\nvoid dfs(int sum,string last)\n{\n    ans=max(ans,sum);///\u66f4\u65b0\u7b54\u6848\n    ///cout<<ans<<endl;\n    for (int k=1; k<=n; k++)\n    {\n        if (c[k]>0)///\u8fd8\u53ef\u4ee5\u9009\u62e9\n        {\n            int x=hb(last,s[k]);///\u6700\u5c0f\u516c\u5171\u957f\u5ea6\n            if (x>0)///\u5982\u679c\u53ef\u4ee5\u63a5\n            {\n                c[k]--;///\u63a5\u4e0a\u53bb\uff01\uff01\uff01\n                dfs(sum+s[k].size()-x,s[k]);///\u641c\u7d22\u4e0b\u4e00\u4e2a\n                c[k]++;///\u8fd8\u539f\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>n;\n    for (i=1; i<=n; i++) cin>>s[i],c[i]=2;\n    cin>>s[0];///s[0]\u4e3a\u5f00\u5934\n    for (ii=1;ii<=n;ii++)\n    {///\u4ece1-n\u641c\u7d22\u6bcf\u4e00\u4e2a\u5b57\u7b26\n        if (s[ii][0]==s[0][0])\n        {///\u5982\u679c\u5f00\u5934\u662fs[0]\n            c[ii]--;\n            dfs(s[ii].size(),s[ii]);\n            for (i=1;i<=n;i++) c[i]=2;\n        }\n\n    }\n    cout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1527344288,
        "uid": 46772,
        "name": "\u84dd\u83b2\u82b1__",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u672c\u6765\u66b4\u529bdfs\u5199\u7684\uff0c\u4f46\u53d7\u5230\u697c\u4e0b\u4e00\u4f4ddalao\u7684\u542f\u53d1\uff0c\u5176\u5b9e\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4e24\u4e2a\u5355\u8bcd\u80fd\u5426\u8fde\u63a5\u548c\u8fde\u63a5\u4e4b\u540e\u589e\u6dfb\u7684\u957f\u5ea6\uff0c\u8fd9\u6837dfs\u5c31\u5f88\u7b80\u5355\u4e86\n\n\uff08\u697c\u4e0b\u90a3\u4f4ddalao\u4ee3\u7801define\u7684\u592a\u9ad8\u6df1\uff0c\u4e8e\u662f\u81ea\u5df1\u6309\u7740\u81ea\u5df1\u7684\u601d\u60f3\u6253\u4e86\u4e00\u4e2a\uff09\n\n###\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=26;\nstring s[1005];\nbool m[N][N];\nint used[N];\nint add[N][N];\nint n,ans;\nbool deal(int x,int y){\n    string s1=s[x],s2=s[y];\n    int lens1=s1.length(),lens2=s2.length();\n    int len=min(lens1,lens2);\n    int k;\n    bool flag=1;\n    for(int i=1;i<=len;i++){//\u4e00\u5f00\u59cb\u6ca1\u7406\u89e3\u9898\u610f\uff08\u6709\u70b9\u6b67\u4e49\uff09 \u5176\u5b9e ababab \u548cababab\u81ea\u8eab\u4e5f\u53ef\u4ee5\uff1f\uff1f\n        flag=1;\n        k=i;\n        for(int j=0;j<k;j++){ \n            if(s1[lens1-k+j]!=s2[j]) flag=0;\n        }\n        if(flag==1&&k==len) flag=0;\n        if(flag==1) break;\n    }\n    if(flag==1){\n        add[x][y]=s2.length()-k;\n        m[x][y]=1; \n        return 1;\n    }\n    else return 0;\n}\nvoid dfs(int x,int y){//\u9884\u5904\u7406\u4e4b\u540edfs\u5c31\u5f88\u7b80\u5355\u4e86 \n    ans=max(ans,y);//\u66f4\u65b0\u7b54\u6848 \n    for(int i=1;i<=n;i++){\n        if(used[i]==2||!m[x][i]) continue;\n        used[i]++;\n        dfs(i,y+add[x][i]);//\u4f20\u9012 \n        used[i]--;\n    }\n}\nint main(){\n    cin>>n;\n    for(int i=1;i<=n+1;i++){\n        cin>>s[i]; //\u5b58 \n    }\n    for(int i=1;i<=n+1;i++){\n        for(int j=1;j<=n+1;j++){\n            deal(i,j); //\u9884\u5904\u7406 \n        }\n    }\n    for(int i=1;i<=n;i++){\n        if(s[i][0]==s[n+1][0]){\n            used[i]++;\n            dfs(i,s[i].length());//\u786e\u4fdd\u6bcf\u4e2a\u53ef\u4ee5\u505a\u5f00\u5934\u7684\u90fd\u505a\u4e00\u904d\u5f00\u5934 \n            used[i]--;\n        }\n    }\n    cout<<ans<<endl;\n}\n\n```",
        "postTime": 1507555651,
        "uid": 27495,
        "name": "bymlg001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "<http://blog.csdn.net/love\\_phoebe/article/details/77140840>\u539f\u6587\u94fe\u63a5\n\n1\uff0c\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4vis\u8868\u793a\u5f53\u524d\u5355\u8bcd\u88ab\u91c7\u53d6\u7684\u6b21\u6570\uff1b\n\n2\uff0cfor\u5faa\u73af\u4e2d\u627e\u5230\u6bcf\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u9f99\u5934\uff0c\u521d\u59cb\u5316\u6807\u8bb0\u6570\u7ec4\u540e\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff1b\n\n3\uff0c\u56e0\u4e3a\u8fde\u63a5\u8d77\u6765\u7684\u5355\u8bcd\u8981\u6700\u957f\uff0c\u6240\u4ee5\u5bf9\u6bd4\u662f\u9009\u62e9\u4ece\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u672b\u5c3e\u4e0e\u5f53\u524d\u5355\u8bcd\u7684\u5f00\u5934\u8fdb\u884c\u6bd4\u5bf9\uff0c\u4e00\u65e6\u7b26\u5408\u5c31return\n\n\u6ce8\u610f\uff01\u5b57\u7b26\u76f8\u7b49\u8fd8\u4e0d\u4e00\u5b9a\u7b26\u5408\u9898\u610f\uff0c\u4e00\u5b9a\u8981\u6bd4\u5230\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u624d\u7b97\u7b26\u5408\u6761\u4ef6\uff0c\u7ed9\u51fa\u4e24\u7ec4\u6570\u636e\u81ea\u5df1\u63e3\u6469\uff1a\n\n\uff08\u81ea\u5df1\u601d\u8003\u540e\u624d\u80fd\u6709\u6536\u83b7\u5417(\uff5e\uffe3\u25bd\uffe3)\uff5e \uff09\n\n1                                       2\n\nenvelope                           abababab\n\ne                                       abababc\n\nans\uff1a15                            a                    ans\uff1a19\n\n\u4e0b\u9762\u5728\u4ee3\u7801\u4e2d\u8fdb\u884c\u5206\u6790\uff1a\n\n[cpp] view plain copy\n\n              \n```cpp\n#include<iostream>  \n#include<cstring>  \n#include<cmath>  \nusing namespace std;  \nstruct node{  \n    char lin[1000];  \n}s[20];  // \u7ed3\u6784\u4f53 s \u7528\u4e8e\u50a8\u5b58\u5355\u8bcd   \nint t,ans;  \nint vis[20];  //\u6807\u8bb0\u6570\u7ec4\uff0c\u6bcf\u4e00\u6b21\u641c\u7d22\u521d\u59cb\u5316\u4e3a 0\uff0c\u5355\u8bcd\u4f7f\u7528\u4e00\u6b21\u52a0\u4e00\uff0c\u8d85\u8fc7\u4e8c\u5c31\u4e0d\u80fd\u7ee7\u7eed\u4f7f\u7528   \nint len[20];  //\u5355\u8bcd\u957f\u5ea6\u6570\u7ec4\uff0c\u8868\u793a\u6bcf\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6   \nint found(int stp,int i){ //stp\u4ee3\u8868\u4e0a\u4e00\u4e2a\u5df2\u7ecf\u9009\u62e9\u7684\u5355\u8bcd\u4e0b\u6807 i\u8868\u793a\u5f53\u524d\u7684\u5355\u8bcd\u4e0b\u6807   \n    int q,w,j;  \n    for(q=len[stp]-1;q>=1;q--){   //\u4e3a\u4f7f\u957f\u5ea6\u6700\u957f\uff0c\u4ece\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u672b\u5c3e\u5f00\u59cb\u641c\u7d22   \n        if(s[stp].lin[q]==s[i].lin[0]){  //\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5339\u914d\u540e\u7ee7\u7eed\u770b\u540e\u9762\u8fd8\u6709\u591a\u5c11\u4f4d   \n            int x=0;         //\u76f8\u540c\u4f4d\u6570   \n            for(w=q,j=0;w<len[stp]&&j<len[i];w++,j++){  \n                if(s[stp].lin[w]==s[i].lin[j])x++;  \n                else break;  \n            }  \n            if(w==len[stp])return x;//\u6ce8\u610f\uff01\u4e00\u5b9a\u8981\u6bd4\u5230\u4e0a\u4e00\u4e2a\u5b57\u7b26\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7b54\u6848\u624d\u6709\u6548   \n        }  \n    }  \n    return 0;  \n}  \nvoid dfs(int stp,int length){ //\u4e0a\u4e00\u4e2a\u5df2\u7ecf\u9009\u62e9\u7684\u5355\u8bcd  \u5f53\u524d\u7684\u6700\u957f\u5355\u8bcd\u957f\u5ea6   \n    int i;  \n    bool mark=false;  \n    for(i=0;i<t;i++){  \n        if(vis[i]>=2)continue;//\u5355\u8bcd\u5df2\u7ecf\u88ab\u627e\u8fc7\u4e24\u6b21\uff0c\u8df3\u8fc7   \n        int x=found(stp,i);  //x\u4ee3\u8868\u4e0a\u4e00\u4e2a\u5355\u8bcd\u4e0e\u5f53\u524d\u5355\u8bcd\u7684\u5339\u914d\u4f4d\u6570   \n        if(x!=0){   //\u5339\u914d\u4f4d\u6570\u4e0d\u4e3a0\u5c31\u7ee7\u7eed\u8fdb\u884c\u4e0b\u4e00\u6b21\u7684\u5355\u8bcd\u641c\u7d22   \n            mark=true;  \n            length+=(len[i]-x);  //\u5f53\u524d\u957f\u5ea6\u589e\u52a0   \n            vis[i]+=1;    //\u5f53\u671f\u5355\u8bcd\u7528\u8fc7\u4e00\u4e2a\u52a0\u4e00   \n            dfs(i,length);  \n            //\u4e0a\u4e00\u6b65\u9012\u5f52\u4e0d\u7b26\u5408\u9898\u610f\u8fd4\u56de\u81f3\u6b64\uff0c\u957f\u5ea6\u51cf\u53bb\u4e0d\u7b26\u5408\u9898\u610f\u7684\u5355\u8bcd\uff0c\u5355\u8bcd\u7684\u4f7f\u7528\u6b21\u6570\u51cf\u4e00\uff0c\u7ee7\u7eed\u9009\u62e9\u5355\u8bcd   \n            length-=(len[i]-x);  \n            vis[i]-=1;  \n        }  \n    }  \n    if(mark==false){     //\u5982\u679c\u5df2\u7ecf\u627e\u4e0d\u5230\u5355\u8bcd\uff0c\u6bd4\u8f83\u4e4b\u524d\u5df2\u7ecf\u5f97\u5230\u8fc7\u7684\u7b54\u6848\u9009\u62e9\u6700\u957f\u7684\u5355\u8bcd\u6570   \n        ans=max(ans,length);  \n    }  \n}  \nint main(){  \n    int i;  \n    char l1;  \n    cin>>t;  \n    for(i=0;i<t;i++){  \n        cin>>s[i].lin;  \n        len[i]=strlen(s[i].lin);  \n    }  \n    cin>>l1;  \n    ans=0;  \n    for(i=0;i<t;i++)if(s[i].lin[0]==l1){  \n        memset(vis,0,sizeof(vis));  //\u521d\u59cb\u5316\u5355\u8bcd\u6807\u8bb0\u6570\u7ec4   \n        vis[i]++; //\u6b21\u5355\u8bcd\u4f7f\u7528\u4e00\u6b21   \n        dfs(i,len[i]);//\u5f53\u671f\u4f7f\u7528\u7684\u5355\u8bcd\u4e0b\u6807\u4e0e\u957f\u5ea6   \n    }  \n    cout<<ans;//\u8f93\u51fa\u7ed3\u679c   \n    return 0;  \n}\n```",
        "postTime": 1502609150,
        "uid": 39098,
        "name": "zhuozhizhao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u5b57\u7b26\u4e32\u5904\u7406+\u641c\u7d22\n\n\u5c06\u8d77\u59cb\u5b57\u6bcd\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5904\u7406 \u627e\u5230\u5f85\u8fde\u63a5\u5355\u8bcd\u5728\u8fde\u63a5\u597d\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e \u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb \u5224\u65ad\u540e\u9762\u8fde\u63a5\u597d\u7684\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4f4d\u662f\u5426\u4f9d\u6b21\u548c\u5f85\u8fde\u63a5\u5355\u8bcd\u5339\u914d \u82e5\u5339\u914d\u5219\u53ef\u4ee5\u8fde\u63a5\n\n\u5728\u6ee1\u8db3\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u4e0d\u8d85\u8fc7\u4e24\u6b21\u7684\u60c5\u51b5\u4e0b \u5c1d\u8bd5\u8fde\u63a5\u6240\u6709\u7684\u5355\u8bcd\n\n\n\u6ce8\u610f\uff1a\n\n1.\u81ea\u5df1\u4e5f\u53ef\u4ee5\u4e0e\u81ea\u5df1\u76f8\u8fde\n\n2.\u9898\u76ee\u4e2d\u6240\u8bf4\u7684\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb\u662f\u8fde\u63a5\u597d\u540e\u7684\u76f8\u90bb\u4e24\u90e8\u5206 \u5e76\u4e0d\u662f\u5982\u679c\u662f\u5b50\u4e32\u5c31\u4e0d\u80fd\u8fde\u63a5 \u5426\u5219\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5373\u8d77\u59cb\u5b57\u6bcd\u65e0\u6cd5\u8fde\u63a5\n\n\n```cpp\n#include<cstdio>  \n#include<cstring>  \nstruct doo\n{  \n    char s[21]; \n    int l;\n    int v;//\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570  \n}c[21];  \nint maxn,n;  \nvoid jl(int x,int l)//\u5f85\u8fde\u63a5\u5355\u8bcd\u7684\u5e8f\u53f7 l\u4e3a\u76ee\u524d\u5355\u8bcd\u63a5\u9f99\u7684\u957f\u5ea6 \n{  \n    for(int i=1;i<=n;i++)//\u5bfb\u627e\u53ef\u8fde\u63a5\u5355\u8bcd\uff08\u5355\u8bcd\u63a5\u9f99\u540e\u8fde\u63a5\u53ef\u8fde\u63a5\u5355\u8bcd\uff09  \n        if(c[i].v<2)//\u6bcf\u4e2a\u5355\u8bcd\u6700\u591a\u51fa\u73b0\u4e24\u6b21 \n            for(int j=0;j<c[x].l;j++)//\u67e5\u627e\u5df2\u8fde\u597d\u7684\u5355\u8bcd\u63a5\u9f99\u7684\u6bcf\u4e00\u4f4d  \n                if(c[x].s[j]==c[i].s[0])//\u627e\u5230\u53ef\u8854\u63a5\u7684\u4f4d\u7f6e  \n                {  \n                    int k=1; bool t=1;  \n                    for(int d=j+1;d<c[x].l&&k<c[i].l;k++,d++)\n                    //d\u8868\u793a\u5355\u8bcd\u63a5\u9f99\u4e0b\u6807 k\u662f\u53ef\u8fde\u63a5\u5355\u8bcd\u4e0b\u6807  \n                        if(c[x].s[d]!=c[i].s[k])//\u4ece\u53ef\u8854\u63a5\u4f4d\u7f6e\u7684\u540e\u4e00\u4f4d\u5f00\u59cb\u5224\u65ad \u82e5\u540e\u9762\u7684\u5b57\u7b26\u5e76\u4e0d\u5b8c\u5168\u5339\u914d\u5219\u65e0\u6cd5\u8854\u63a5  \n                        {  \n                            t=0; break;  \n                        }  \n                    if(t)  \n                    {  \n                        c[i].v++;  \n                        jl(i,l+c[i].l-k);//\u82e5\u53ef\u4ee5\u8854\u63a5 \u627e\u4e0b\u4e00\u4e2a\u5f85\u8854\u63a5\u5355\u8bcd \u63a5\u9f99\u957f\u5ea6\u66f4\u65b0 \u52a0\u4e0a\u5f53\u524d\u8fde\u63a5\u5355\u8bcd\u7684\u957f\u5ea6 \u51cf\u53bb\u91cd\u53e0\u90e8\u5206\u7684\u957f\u5ea6 \n                        c[i].v--; \n                    }  \n                }  \n    if(l>maxn) maxn=l;\n}  \nint main()  \n{  \n//    freopen(\"jl.in\",\"r\",stdin);\n//    freopen(\"jl.out\",\"w\",stdout);\n    scanf(\"%d\",&n);  \n    for(int i=1;i<=n;i++)  \n    {  \n        scanf(\"%s\",c[i].s);  \n        c[i].l=strlen(c[i].s);  \n    }  \n    scanf(\"%s\",c[0].s);  \n    c[0].l=strlen(c[0].s);//\u76f4\u63a5\u5c06\u5f00\u5934\u5b57\u6bcd\u5b58\u57280\u4e0b\u6807 \u5f53\u4f5c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5904\u7406 \n    jl(0,c[0].l);\n    printf(\"%d\",maxn);  \n    fclose(stdin); fclose(stdout); \n    return 0; \n}\n```",
        "postTime": 1502348756,
        "uid": 42771,
        "name": "keyword_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<string>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N = 21;\nint n;\nstring x[N];\nchar start;\nint vis[N];\nint ans;\nstring longest;\nstring cpy;\nint best;\nint pos;\nbool check(string s)\n{\n    int len1 = longest.length();\n    int len2 = s.length();\n    cpy = longest;\n     while(len1 > 0)\n```\n{//\u5173\u952e\uff0c\u4ece\u540e\u5f80\u524d\u63a8\u8fdb\u5df2\u8fde\u63a5\u7684\u5b57\u7b26\u4e32\uff0c\u6765\u8fdb\u884c\u6bd4\u8f83\uff0c\u907f\u514d\u7c7b\u4f3cababa\uff0cbaba\u8fde\u63a5\u8d77\u6765\u4e3aababa\n         \n     \n```cpp\n         len1 --;//\u5f53\u524d\u5b57\u7b26\u4f4d\u7f6e\u6bd4\u957f\u5ea6\u8981\u5c0f1\n         int i, j;\n         for (i = len1, j = 0; longest[i] && s[j]; i ++, j ++)//\u4ece\u8fde\u597d\u7684\u957f\u5ea6\u5f00\u59cb\u6bd4\u5bf9\u540e\u9762\u5c06\u8fde\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u5b57\u7b26\u5b58\u5728\n         {\n             if(longest[i] != s[j])//\u5f53\u6bd4\u5bf9\u5931\u8d25\u65f6\u5c31\u505c\u7559\u5728\u6b64\u4f4d\u7f6e\n                 break;\n         }\n         {\n             if(longest[i] == '\\0')//\u5982\u679c\u6bd4\u5bf9\u5230\u672b\u5c3e\u624d\u7ed3\u675f\uff0c\u8bf4\u660e\u524d\u9762\u90fd\u662f\u6bd4\u5bf9\u6210\u529f\u7684\n             {    \n                 cpy.replace(len1, longest.length() - len1, s); //\u8fd9\u65f6\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5220\u9664\u8fde\u63a5\u597d\u7684\u5b57\u7b26\u4e32\u540e\u9762\u7684\u5b57\u7b26\uff0c\u8fde\u63a5\u4e0a\u5f53\u524d\u5b57\u7b26\n                 return true;//\u4f20\u8fbe\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u884c\n             }\n         }\n     }\n    return false;//\u4e0d\u53ef\u9009\n}\nvoid dfs(string s) \n{\n    int len = longest.length();\n    if(len > best)\n        best = len;\n    string pre;\n    for (int i = 1; i <= n; i ++)\n    {\n        if(vis[i] < 2)//\u4f7f\u7528\u6b21\u6570\u5c11\u4e8e\u4e24\u6b21\n        {\n            if(check(x[i]))//\u8fdb\u5165\u68c0\u67e5\u548c\u62fc\u63a5\u64cd\u4f5c\n            {\n                vis[i] ++;\n                pre = longest;//\u4fdd\u5b58\u5f53\u524d\u7684\uff0c\u4ee5\u4fbf\u56de\u6eaf\n                longest = cpy;\n                dfs(longest);\n                longest = pre;//\u56de\u6eaf\n                vis[i] --;\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i ++)\n        cin >> x[i];\n    cin >> start;\n    for (int i = 1; i <= n; i ++)\n    {\n        best = 0;\n        if(x[i][0] == start)//\u4ece\u8fd9\u91cc\u641c\u7d22\n        {\n            memset(vis, 0, sizeof(vis));\n            longest = x[i];    \n            vis[i] ++;\n            dfs(x[i]);\n            if(best > ans)\n                ans = best;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1500349410,
        "uid": 30748,
        "name": "LyreRing",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4ee5\u7ed9\u5b9a\u5b57\u6bcd\u5f00\u5934\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5f00\u59cb\u641c\u7d22\uff0c\u5728\u641c\u7d22\u5224\u65ad\u662f\u5426\u76f8\u91cd\u7684\u65f6\u5019\u53ef\u4ee5\u627e\u51fa\u5f53\u524d\u5b57\u7b26\u4e32\uff08\u9f99\uff09\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\n\n\n\u7136\u540e\u518d\u5728\u5c06\u8981\u6bd4\u8f83\u7684\u5b57\u7b26\u4e32\u91cc\u66b4\u529b\u627e\uff0c\u5982\u679c\u80fd\u627e\u5230\uff0c\u518d\u4ece\u5f53\u524d\u4f4d\u7f6e\u5f80\u524d\u627e\u3002\u5982\u679c\u76f4\u5230\u5c06\u8981\u6bd4\u8f83\u7684\u5b57\u7b26\u4e32\u5168\u90e8\u6bd4\u8f83\u5b8c\u4e14\u5168\u90e8\u76f8\u540c\uff0c\u5c31\u52a0\u5230\u9f99\u91cc\u9762\n\n\n\u6613\u9519\u70b9\uff1a\n\n\n1.\u53ef\u4ee5\u65e0\u89c6\u9898\u76ee\u4e2d\u7684at\u4e0eatite\u7684\u76f8\u4e92\u5305\u542b\u95ee\u9898\n\n\n2.\u4e0d\u8981\u5ffd\u89c6\u81ea\u8eab\u548c\u81ea\u8eab\u76f8\u8fde\u7684\u60c5\u51b5\n\n\n3.\u6ce8\u610f\u9f99\u548c\u5176\u957f\u5ea6\u548c\u4f7f\u7528\u60c5\u51b5\u7684\u521d\u59cb\u503c\uff01\uff01\n\n\n4.\u6ce8\u610f+1-1\u7684\u8fb9\u754c\u95ee\u9898\uff01\uff01\n\n\n5.\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u505a\u8fd9\u4e2a\u9898\uff0c\u90a3\u4e48\u8bf7\u5148\u624b\u63a8\u6837\u4f8b\n\n\n\u8ddf\u5927\u5bb6\u8bf4\u4e00\u4e2a\u8fd9\u4e2a\u9898\u8c03\u8bd5\u4e2d\u7684\u5c0f\u6280\u5de7\uff1a\n\n\n\u5982\u679c\u4f60\u6bcf\u6b21\u641c\u7d22\u90fd\u628a\u9f99\u8f93\u51fa\u4e00\u4e0b\u4f1a\u8ba9\u4f60\u7684\u8c03\u8bd5\u66f4\u7b80\u5355\n\n\n\u6211\u7684\u4ee3\u7801\u5f62\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662f\u53ef\u80fd\u6709\u4e9b\u7ed5\uff0c\u7528\u6837\u4f8b\u8dd1\u4e00\u8fb9\u4f60\u80af\u5b9a\u80fd\u660e\u767d\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint n;\nstring a[50];\nint use[50];// \u6bcf\u4e2a\u6570\u7684\u4f7f\u7528\u60c5\u51b5 \nchar bg;\nint ans;\nint now;\nstring kk;// \u5df2\u7ecf\u627e\u5230\u7684\u9f99 \nstring kong;\nvoid dfs(int p)\n{\n    //cout<<kk<<\" \"<<now<<endl;\n    ans=max(ans,now);\n    int lp=a[p].length();\n    char last=a[p][lp-1];\n    for(int i=1;i<=n;i++)//\u904d\u5386\u6240\u6709\u7684\u5b57\u7b26\u4e32 \n    {\n        if(use[i]<2)\n        {\n            int li=a[i].length();// \u5c06\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \n            for(int j=0;j<li;j++)\n            {\n                if(a[i][j]==last)//i\u4e2a\u5b57\u7b26\u4e32\u7684\u7b2cj\u4f4d \n                {\n                    int flag=0;// \u5224\u65ad\u662f\u5426\u76f8\u7b49 \n                    int num=0;\n                    for(int k=j;k>=0;k--)\n                    {\n                        char d,q;\n                        d=a[p][lp-(num)-1];\n                        q=a[i][j-(num)];\n                        num++;\n                        if(d==q)continue;\n                        else {flag=1;break;}\n                    }\n                    if(flag==0)\n                    {\n                        use[i]++;\n                        now=kk.length()+li-num;\n                        kk.erase(kk.end()-num,kk.end());\n                        kk=kk+a[i];\n                        dfs(i);\n                        now=kk.length()-li+num;\n                        kk.erase(kk.end()-li+num,kk.end());\n                        use[i]--;\n                    }\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        cin>>a[i];\n    cin>>bg;\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i][0]==bg)\n        {\n            kk=kong;\n            now=0;\n            memset(use,0,sizeof(use));\n            now=now+a[i].length();\n            use[i]++;\n            kk=kk+a[i];\n            dfs(i);\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1498037189,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u5148\u8ba1\u7b97\u4efb\u4e24\u4e2a\u5355\u8bcd\u8fde\u63a5\u7684\u6700\u5927\u957f\u5ea6\uff0c\u7136\u540e\uff0c\uff0c\u904d\u5386\u4e00\u904d\u5c31ok\uff1b\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff0c\u8be6\u7ec6\u8fc7\u7a0b\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\u3002\uff08\u4e24\u4efd\u4ee3\u7801\uff0c\u4e24\u79cd\u904d\u5386\u65b9\u5f0f\uff09\n\n\n\n\n\n\n    \n    \n\n    \n          \n      \n    \n\n\n\n\n\n\n    \n          \n      \n    \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,maxn,idx[25];\nchar first;\nchar word[25][100];\nint lian[25][25];//0\u4e3a\u4e0d\u80fd\u8fde\u63a5\uff0c\u5426\u5219\u4e3a\u80fd\u8fde\u63a5\uff0c\u6700\u5927\u8fde\u63a5\u957f\u5ea6 \nbool check(int i,int j,int pos,int l1,int l2)   //\u68c0\u67e5\u80fd\u5426\u5c06i\u7684\u540e\u534a\u90e8\u5206\u4e0ej\u7684\u524d\u534a\u90e8\u5206\u63a5\u8d77\u6765 \n{         //\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0ci\u63a5\u7684\u8d77\u70b9\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \n    if(l1-pos>=l2)return false;   //>\uff1a\u4e00\u5b9a\u4e0d\u80fd\u63a5\uff0c=\uff1a\u5c31\u7b97\u80fd\u63a5\u4e5f\u5355\u8bcd\u4e4b\u95f4\u5305\u542b \n    for(int k=pos,h=0;k<l1;k++,h++)if(word[i][k]!=word[j][h])return false;//\u4e0d\u5339\u914d \n    return true;\n}\nvoid dfs(int i,int tot)\n{     //\u5f53\u524d\u72b6\u6001\u4e3a\u5355\u8bcdi\uff0c\u5f53\u524d\u603b\u957f\u5ea6 \n    bool end=1;  //\u662f\u5426\u7ed3\u675f \n    for(int j=1;j<=n;j++)\n        if(lian[i][j] && idx[j]<2)\n        {\n            end=0;\n            idx[j]++;\n            dfs(j,tot+lian[i][j]);\n            idx[j]--;   //\u4e0d\u8981\u5fd8\u4e86\u51cf\u56de\u6765 \n        }\n    if(end)maxn=max(maxn,tot);//\u4e0e\u6700\u4f18\u503c\u6bd4\u8f83 \n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%s\",word[i]);\n    do{scanf(\"%c\",&first);} while(!isalpha(first)); //\u8bfb\u5165\u5b57\u6bcd\uff0c\u5c0f\u5fc3\u8bfb\u5165\u2018\\n\u2019 \n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n      {          \n          int l1=strlen(word[i]),l2=strlen(word[j]);\n          for(int pos=l1-1;pos>0;pos--) //pos>0\u800c\u975e>=\u7684\u539f\u56e0\uff1a\u5355\u8bcd\u4e0d\u80fd\u6709\u5305\u542b\u5173\u7cfb \n              if(check(i,j,pos,l1,l2)){lian[i][j]=l2-(l1-pos);break;}//\u8fd9\u4e2alian\u662f\u628aj\u63a5\u5728i\u540ej\u7684\u957f\u5ea6 \n      }                                          //break\uff1a\u8d2a\u5fc3\uff0c\u63a5\u7684\u90e8\u5206\u8d8a\u5c11\u5219\u603b\u957f\u5ea6\u8d8a\u957f \n    for(int i=1;i<=n;i++)if(word[i][0]==first)\n    {\n        idx[i]++; \n        dfs(i,strlen(word[i])); \n        idx[i]--;  //\u4e0d\u8981\u5fd8\u4e86\u51cf\u56de\u6765 \n    }\n    cout<<maxn<<\"\\n\";    \n    return 0;\n}\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,maxn,idx[25];\nchar first;\nchar word[25][100];\nint lian[25][25];//0\u4e3a\u4e0d\u80fd\u8fde\u63a5\uff0c\u5426\u5219\u4e3a\u80fd\u8fde\u63a5\uff0c\u6700\u5927\u8fde\u63a5\u957f\u5ea6 \nbool check(int i,int j,int pos,int l1,int l2)   //\u68c0\u67e5\u80fd\u5426\u5c06i\u7684\u540e\u534a\u90e8\u5206\u4e0ej\u7684\u524d\u534a\u90e8\u5206\u63a5\u8d77\u6765 \n{         //\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0ci\u63a5\u7684\u8d77\u70b9\uff0c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \n    if(l1-pos>=l2)return false;   //>\uff1a\u4e00\u5b9a\u4e0d\u80fd\u63a5\uff0c=\uff1a\u5c31\u7b97\u80fd\u63a5\u4e5f\u5355\u8bcd\u4e4b\u95f4\u5305\u542b \n    for(int k=pos,h=0;k<l1;k++,h++)if(word[i][k]!=word[j][h])return false;//\u4e0d\u5339\u914d \n    return true;\n}\nint dfs(int i)\n{     \u73b0\u5728\u72b6\u6001\u4e3a\u5355\u8bcdi \n    int num=0;//\u4ecei\u5f00\u59cb\u7684\u6700\u957f\u957f\u5ea6 \n    for(int j=1;j<=n;j++)\n    {\n        if(lian[i][j] && idx[j]<2){idx[j]++;num=max(num,dfs(j)+lian[i][j]);idx[j]--;}\n    }     //\u53ef\u8fde\u63a5\uff0c\u6ce8\u610f\u4e0d\u80fd\u7b49\u4e8e2\uff0c\u56e0\u4e3a\u9a6c\u4e0a\u5c31\u8981idx++\uff0c\u5c31\u662f3\u4e86 \n    return num;\n}\nint main()\n{\n    //\u5728\u6d1b\u8c37\u63d0\u4ea4\u53c8\u5fd8\u4e86\u5220freopen \u3002\u3002\u3002 \n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%s\",word[i]);\n    do{scanf(\"%c\",&first);} while(!isalpha(first)); //\u8bfb\u5165\u5b57\u6bcd\uff0c\u5c0f\u5fc3\u8bfb\u5165\u2018\\n\u2019 \n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n      {          \n          int l1=strlen(word[i]),l2=strlen(word[j]);\n          for(int pos=l1-1;pos>0;pos--) //pos>0\u800c\u975e>=\u7684\u539f\u56e0\uff1a\u5355\u8bcd\u4e0d\u80fd\u6709\u5305\u542b\u5173\u7cfb \n              if(check(i,j,pos,l1,l2)){lian[i][j]=l2-(l1-pos);break;}//\u8fd9\u4e2alian\u662f\u628aj\u63a5\u5728i\u540ej\u7684\u957f\u5ea6 \n      }                                          //break\uff1a\u8d2a\u5fc3\uff0c\u63a5\u7684\u90e8\u5206\u8d8a\u5c11\u5219\u603b\u957f\u5ea6\u8d8a\u957f \n    for(int i=1;i<=n;i++)if(word[i][0]==first)\n    {\n        idx[i]++; \n        maxn=max(maxn,(int)strlen(word[i])+dfs(i)); \n        idx[i]--;  //\u4e0d\u8981\u5fd8\u4e86\u51cf\u56de\u6765 \n    }\n    cout<<maxn<<\"\\n\";    \n    return 0;\n}\n```",
        "postTime": 1485585451,
        "uid": 28033,
        "name": "AFreeMan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "1.\u627e\u51fa\u6307\u5b9a\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd\u5f00\u59cbdfs\uff1b\n\n2.dfs(A) \u679a\u4e3e\u627e\u51fa\u80fd\u591f\u4e0e\u5176\u76f8\u8fde\u7684\u5355\u8bcdB\uff0c\u7ee7\u7eeddfs\uff0c\u540c\u65f6\u8bb0\u4e0b\u957f\u5ea6\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u4e3a\u6b62\u518d\u56de\u6eaf\uff1b\n\n\u5bf9\u4e8e\u5355\u8bcdA\u548c\u5355\u8bcdB\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u679a\u4e3e\u5b83\u4eec\u7684\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\u6765\u9a8c\u8bc1\u5b83\u4eec\u662f\u5426\u76f8\u8fde\u5e76\u6c42\u51fa\u8fd9\u4e2a\u957f\u5ea6\u3002\n\n\u8bbeA\u3001B\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\u4e3am\uff0c\u201c\u9f99\u201d\u7684\u957f\u5ea6\u4e3acnt\uff0c\u5728\u6b65\u9aa42\u4e4b\u524d\u5148\u4ee4cnt=lenA\uff0c\u5219cnt+=lenB-m\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<cstring>\n#include<iostream>\n#define dmax(a,b) (a>b)?(a):(b)\n#define dmin(a,b) (a<b)?(a):(b)\nusing namespace std;\nconst int MAXN=25;\nint n,cnt,ans=0;\nint used[MAXN];\nint res[MAXN][MAXN]={0};\nchar head;\nstring word[MAXN];\nvoid init(){\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>word[i];\n    cin>>head;\n}\nvoid print(){\n      cout<<ans;\n}\nint getLen(int a,int b){\n    if(res[a][b]) return res[a][b]; //\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u907f\u514d\u91cd\u590d\u641c\u7d22\n    int lenA=word[a].size(),len=dmin(word[a].size(),word[b].size());\n    for(int i=1;i<len;i++){     //\u679a\u4e3e\uff0c\u5bf9\u4e8e\u957f\u5ea6\u4e3ai\u7684\u91cd\u53e0\u90e8\u5206\uff0c\u5728A\u4e2d\u7684\u4e0b\u6807\u662f[lenA-i~lenA-1]\uff0c\u5728B\u4e2d\u7684\u4e0b\u6807\u662f[0~i-1] \u6ce8\u610fi<len\u800c\u4e0d\u662fi<=len\u56e0\u4e3aA\u3001B\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb\n        int j;\n        for(j=1;j<=i;j++)\n          if(word[a][lenA-i+j-1]!=word[b][j-1]) break; //\u4e0d\u91cd\u53e0\u5219\u9000\u51fa\n        if(j>i) {  //j>i\u5373\u6ca1\u6709\u9000\u51fa\u65f6 \u5f97\u51fa\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\n            res[a][b]=i;  //\u8bb0\u5fc6\u5316\u641c\u7d22\n            return i;\n        }\n    }\n    return 0;\n}\nvoid dfs(int x){\n    for(int i=1;i<=n;i++){\n      int mid=getLen(x,i); //\u6c42\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\n      if(used[i]<2&&mid){ \n          used[i]++;\n          cnt+=word[i].size()-mid;\n          ans=dmax(ans,cnt); //\u66f4\u65b0ans\n          dfs(i);\n          used[i]--;\n          cnt-=word[i].size()-mid; //\u56de\u6eaf\n      }\n    }\n}\nvoid solve(){\n    for(int i=1;i<=n;i++)\n     if(word[i][0]==head){\n         fill(used+1,used+n+1,0); //\u4f7f\u7528\u6b21\u6570\u6e05\u96f6\n         cnt=word[i].size();\n         ans=dmax(ans,cnt); //\u7acb\u5373\u66f4\u65b0ans\uff0c\u907f\u514d\u627e\u4e0d\u5230\u540e\u7ee7\u7684\u60c5\u51b5\n         used[i]++;  //\u8bb0\u5f97\u7ed9\u9f99\u5934\u7684\u4f7f\u7528\u6b21\u6570\u52a01\n         dfs(i);\n     }\n}\nint main(){\n    init();\n    solve();\n        print();\n        return 0;\n}\n\n```",
        "postTime": 1485270592,
        "uid": 19779,
        "name": "Lian233",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u5b57\u7b26\u4e32\u5904\u7406\u5361\u4e00\u4e0b\u5348~\n\n\u6700\u66b4\u529b\u7684\u679a\u4e3e\u6cd5\n\n\u4ece1\u5230\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\u4e2d\u5c0f\u8005\u4e00\u4e00\u679a\u4e3e\n\n+1\u8fd8\u662f-1\u8981\u5206\u6e05\u695a\n\n\n\u5176\u4ed6\u5c31\u7b80\u5355dfs\u89e3\u51b3\n\n```cpp\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cstdlib>\n\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <cctype>\n\n#include <algorithm>\n#include <stack>\n#include <queue>\n#define DBG 0\n#define _TEST(x) while(x)\n#define TEST _TEST(DBG)\nusing namespace std;\nstring lis[30];\nchar Start;\nint vis[30];\nint N;\nint ans;\nbool isFC(int father,int child,int *length=NULL)//\u5b57\u7b26\u4e32\u5904\u7406\u51fd\u6570 length\u4e3a\u51fa\u53c2\uff0c\u8f93\u51fa\u6700\u5c0f\u8854\u63a5\u957f\u5ea6 \u8fd4\u56de\u503c\u4e3a\u662f\u5426\u53ef\u4ee5\u8854\u63a5\n{\n    int len;\n    bool b1;\n    len=min(lis[father].size(),lis[child].size());\n    int fatherSize=lis[father].size();\n    for(int i=1;i<=len;i++)//\u679a\u4e3e\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\n    {\n        int j;\n        b1=true;\n        for(j=1;j<=i;j++)\n            if(lis[father][fatherSize-i+j-1]!=lis[child][j-1])\n                {\n                    b1=false;\n                    break;\n                }\n        if(b1==true)\n        {\n            if(length!=NULL)\n                *length=i;\n            return true;\n        }\n\n    }\n    *length=0;\n    return false;\n}\nint dfs(int index)//DFS\u51fd\u6570\n{\n    vis[index]++;\n    int tmp=0;\n    int len=0;\n    for (int i=1;i<=N;i++)\n        if(isFC(index,i,&tmp)==true)\n            if((lis[i].size()!=tmp&&vis[i]<2))\n                    len=max(len,dfs(i)-tmp);\n    vis[index]--;\n    return len+lis[index].size();\n}\nvoid start_dfs(char st)\u8fd9\u91cc\u6ca1\u6709\u60f3\u5230\u5c06\u5355\u5b57\u6bcd\u4f5c\u4e3a\u4e00\u4e2a\u8bcd\u6765DFS\u7684\u65b9\u6cd5\uff0c\u59d1\u4e14\u8fd9\u4e48\u51d1\u5408~\n{\n    for(int i=1;i<=N;i++)\n        if(lis[i][0]==st)\n            ans=max(dfs(i),ans);\n}\nint main()\n{\n    cin>>N;\n    for (int i=1;i<=N;i++)\n        cin>>lis[i];\n    cin>>Start;\n    int t;\n    start_dfs(Start);\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1482232274,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u65b0\u624b\u4e00\u679a\uff0c\u4ee3\u7801\u6709\u70b9\u957f.\u7ecf\u5178dfs\uff0c\u8fd8\u662f\u5224\u65ad\u80fd\u4e0d\u80fd\u63a5\u8d77\u6765\u6700\u91cd\u8981\u3002\u63a5\u8d77\u6765\u4e86\u5c31\u6df1\u641c.\n\n```cpp\nprogram Angel beats\uff01;\n  var s:array[0..20] of string;\n      i,j,k,m,n,ans,z:longint;\n      ch:string;\n      b:array[0..20] of 0..3;                               //\u50a8\u5b58\u5355\u8bcd\u4f7f\u7528\u6b21\u6570\uff0c\u6211\u7a0d\u5fae\u5f00\u5927\u4e86\u4e00\u4e9b\uff0c\u9632\u6b62\u8d8a\u754c\n  function min(m,n:longint):longint;               // \u8f85\u52a9\u51fd\u6570\uff0c\u867d\u7136pascal\u81ea\u5e26..\n  begin\n  if m>n then exit(n) else exit(m);\n  end;\n  function check(s5,o:string):longint;        // \u6781\u5176\u91cd\u8981\u7684\u5224\u65ad\u65b9\u6cd5\n  var i,j,x,y:longint;\n  begin\n  check:=0;\n  x:=length(s5);\n  y:=length(o);\n  for i:=1 to min(x,y) do if ((copy(o,1,i)=copy(s5,x-i+1,i)) and (y<>i)) then exit(i);   //\u6700\u597d\u8fd8\u662f\u53d6\u77ed\u7684\u5355\u8bcd\u6765\u6bd4\u8f83\uff0c\u4e00\u4e2a\u5411\u524d\u4e00\u4e2a\u5411\u540e\u641c\uff0c\u8fd8\u8981\u6ce8             \u610f\u4e00\u4e0b\u540c\u4e00\u4e2a\u5355\u8bcd\u7684\u8fde\u63a5\u6027\n  end;\n  procedure dfs(s7:string;m:longint);       //s7\u4e3a\u524d\u4e00\u4e2a\u627e\u597d\u7684\u5355\u8bcd\uff0cm\u4e3a\u5b83\u7684\u4e0b\u6807\n  var i,j:longint;\n  begin\n  for i:=1 to n do\n   begin\n   if ((check(s7,s[i])<>0) and (b[i]<2)) then          //\u6761\u4ef62\u4e2a\uff0c\u80fd\u641c\u5230\uff0c\u800c\u4e14\u4f7f\u7528\u5c0f\u4e8e2\u6b21\n    begin\n    inc(b[i]);      //\u5df2\u7ecf\u4f7f\u7528\u8fc7\uff0c+1                                                     \n    z:=z+length(s[i])-check(s7,s[i]);  //z\u8868\u793a\u73b0\u6709\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n    if z>ans then ans:=z;               //ans\u5b58\u653e\u6700\u957f\u957f\u5ea6\n    dfs(s[i],i);                                   //\u641c\u7d22\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5176\u4e0b\u6807\u4e3ai\n    dec(b[i]);                                  //\u56de\u6eaf\n    z:=z-length(s[i])+check(s7,s[i]);//\u56de\u6eaf\n    end;\n   end;\n  end;\n  begin\n  readln(n);\n  k:=0;\n  ans:=0;\n  for i:=1 to n do readln(s[i]);\n  readln(ch);\n  for i:=1 to 20 do b[i]:=0;\n  for i:=1 to n do if ch=copy(s[i],1,1) then   //\u627e\u5230\u8d77\u70b9\n    begin \n    z:=length(s[i]);                  //\u8d77\u70b9\u5355\u8bcd\u957f\u5ea6\u6807\u8bb0\n    if z>ans then ans:=z;       //\u4e3a\u4e86\u5e94\u4ed8\u6d4b\u8bd5\u70b9\uff0c\u6211\u4eec\u8981\u8003\u8651\u5468\u5168\n    inc(b[i]);                           //\u8d77\u70b9\u5355\u8bcd\u4f7f\u7528\n    dfs(s[i],i);                        //\u4ece\u8d77\u70b9\u5f00\u59cb\u7684\u6df1\u641c\n    fillchar(b,sizeof(b),0);      //\u641c\u5b8c\u8981\u8bb0\u5f97\u6062\u590d\n    end;\n  writeln(ans);\n  readln;\n  end.\n\n```",
        "postTime": 1482204445,
        "uid": 27019,
        "name": "shenyi1343395317",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u5f88\u5178\u578b\u7684\u9012\u5f52\u6df1\u5ea6\u641c\u7d22\u7a0b\u5e8f\u3002\n\n\u6ce8\u610f\u53ef\u4ee5\u4e0d\u7528\u90e8\u5206\u7684\u5355\u8bcd\uff0c\u4e5f\u53ef\u5c06\u4e00\u4e2a\u5355\u8bcd\u7528\u4e24\u6b21\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <string>\nusing namespace std; \nlong long zc=0;//\u8bb0\u5f55\u6700\u591a\u6b21\u6570\nint n;//\u8bb0\u5f55\u5355\u8bcd\u4e2a\u6570\nstring dc[20];//\u5b58\u5355\u8bcd\nint yg[20];//\u8bb0\u5f55\u5269\u4f59\u6b21\u6570\nvoid jl(string dq,string sg)\n{\n    int lsg=sg.size();\n    for(int i=0;i<n;i++)\n    {\n        int lc=dc[i].size();\n        bool tf=false;\n        int jk=0;\n        if(sg.size()==1&&dc[i][0]==sg[0])tf=true;//\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u5219\u76f4\u63a5\u53ef\u884c\n        if(!tf&&yg[i]!=0)//\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8fdb\u5165\u5224\u65ad\n```\n{//\u4e0b\u65b9\u4e3a\u5224\u65ad\u4e24\u4e2a\u5355\u8bcd\u662f\u5426\u53ef\u4ee5\u8fde\u63a5\uff0c\u5e76\u5f97\u51fa\u8fde\u63a5\u70b9\n```cpp\n            for(int j=lsg-1;j>0;j--)\n            {\n                bool tc=true;\n                for(int k=0;k<lc-1&&j+k<lsg;k++)\n                {\n                    if(sg[j+k]!=dc[i][k])\n                    {\n                        tc=false;\n                        break;\n                    }\n                }\n                if(tc==true)\n                {\n                    jk=lsg-j;\n                    tf=true;\n                }\n                if(tf==true&&tc==false)break;\n            }\n```\n}//\u5224\u65ad\u5b8c\u6bd5\n```cpp\n        if(tf==true)\n        {\n            yg[i]--;\n            string ndq=dq;\n//            cout<<dc[i]<<endl;\n            for(int j=jk;j<lc;j++)\n            ndq+=dc[i][j];//\u52a0\u5165\u65b0\u7684\u5b57\u7b26\u4e32\u90e8\u5206\n            jl(ndq,dc[i]);//\u9012\u5f52\n            yg[i]++;\n        }\n    }\n    if(zc<dq.size())\n    zc=dq.size();\n//    cout<<dq<<endl;\n}\nint main()\n{\n    for(int i=0;i<20;i++)yg[i]=2;//\u5224\u65ad\u662f\u5426\u7528\u5b8c\u7684\u6570\u7ec4\u3002\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u5355\u8bcd\u53ef\u7528\u4e24\u6b21\u3002\n    string dr;\n    cin>>n;//\u4e2a\u6570\n    for(int i=0;i<n;i++)\n    cin>>dc[i];//\u8bb0\u5f55\u6240\u6709\u7684\u5355\u8bcd\n    cin>>dr;//\u9996\u5b57\u6bcd\uff0c\u7528\u5b57\u7b26\u4e32\u50a8\u5b58\u4ee5\u653e\u5165\u51fd\u6570\u7684\u65b9\u4fbf\n    jl(\"\",dr);//\u5f00\u59cb\u8ba1\u7b97\n    cout<<zc;//\u8f93\u51fa\u6700\u591a\u7684\u6b21\u6570\n    return 0;\n}\n```",
        "postTime": 1481627799,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u53ea\u8981\u5b9e\u73b0\u4e24\u4e2a\u51fd\u6570\uff1a\n\n1\u3001\u8ba1\u7b97\u4e24\u4e2a\u5355\u8bcd\u8fde\u63a5\u540e\u589e\u52a0\u7684\u957f\u5ea6\n\n2\u3001\u6df1\u5ea6\u641c\u7d22dfs\u7684\u957f\u5ea6\n\n\n\u8fd9\u91cc\u53ef\u4ee5\u5c06\u6700\u540e\u8f93\u5165\u7684\u5355\u4e2a\u5b57\u6bcd\u5f53\u505a\u4e00\u4e2a\u5355\u8bcd\n\ndfs\u7684\u65f6\u5019\u53ea\u628a\u8fd9\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u8d77\u70b9\uff0c\u7136\u540e\u904d\u5386\u80fd\u63a5\u7684\u5355\u8bcd\u65f6\u4e0d\u904d\u5386\u8fd9\u4e2a\u70b9\n\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u4e0d\u559c\u52ff\u55b7\u3002\u3001\u3002\u3001\u3002\u3001\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\nint n;\nint side[21][21];\nint visited[20];\nstring word[21];    //\u628a\u9996\u5b57\u6bcd\u4e5f\u5f53\u505a\u4e00\u4e2a\u5355\u8bcd\uff0c\u4f46\u53ea\u80fd\u5728\u5f00\u5934\u7528\u4e00\u6b21\nint Max;\nvoid calc(int i, int j);    //\u8ba1\u7b97word[j]\u63a5\u5230word[i]\u540e\u9762\u589e\u52a0\u7684\u957f\u5ea6\nvoid dfs(int i, int len);\nint main()\n{\n    cin >> n;\n    for (int i = 0; i <= n; i++){\n        cin >> word[i];\n        for (int j = 0; j <= i; j++)\n            calc(i, j);\n    }\n    dfs(n, 1);\n    cout << Max;\n    return 0;\n}\nvoid calc(int i, int j){\n    int len = word[i].length() < word[j].length() ? word[i].length() : word[j].length();\n    int k;\n    int l = 0;\n    while (l < len){\n        l++;\n        for (k = 0; k < l; k++)\n            if (word[i][word[i].length() - k - 1] != word[j][l - k - 1])\n                break;\n        if (k == l){\n            side[i][j] = word[j].length() - l;\n            break;          //\u9996\u5148\u786e\u5b9a\u80fd\u63a5\u4e0a\u7684\u957f\u5ea6\u5fc5\u7136\u662f\u6700\u957f\u7684\uff0c\u76f4\u63a5\u9000\u51fa\n        }\n    }\n    if (i > j)\n        calc(j, i);         //i\u63a5j\u548cj\u63a5i\u4e24\u79cd\u60c5\u51b5\n}\nvoid dfs(int i, int len){\n    int j;\n    if (len > Max)\n        Max = len;\n    for (j = 0; j < n; j++)\n        if (side[i][j] > 0 && visited[j] < 2){\n            visited[j]++;\n            dfs(j, len+side[i][j]);    //\u4f20\u9012\u65b0\u7684\u957f\u5ea6\n            visited[j]--;\n        }\n}\n```",
        "postTime": 1477465683,
        "uid": 23634,
        "name": "\u66ae\u5149",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "```cpp\n//P1019 \u5355\u8bcd\u63a5\u9f99\n#include <iostream>\n#include <cstring>\nusing namespace std;\nconst int maxn=22;\nint n,v[maxn],maxl;//v\u4fdd\u5b58\u6bcf\u4e2a\u5355\u8bcd\u88ab\u8bbf\u95ee\u7684\u6b21\u6570\uff0cmaxl\u4fdd\u5b58\u9f99\u957f\u6700\u5927\u503c\nchar w[maxn][maxn];//\u4fdd\u5b58\u5355\u8bcd\n//\u8fd9\u91cc\u5e76\u4e0d\u9700\u8981\u4fdd\u5b58\u9f99\u4e32\nbool check(int i,int j,int k)//\u68c0\u67e5\u4ece\u7b2ci\u4e2a\u5355\u8bcd\u7684\u7b2cj\u4e2a\u5b57\u6bcd\u5f00\u59cb\u7684\u5b57\u7b26\u4e32\uff08\u8bbe\u5176\u957f\u5ea6\u4e3all\uff09\u4e0e\u4ece\u7b2ck\u4e2a\u5355\u8bcd\u5f00\u59cb\u7684\u524dll\u4e2a\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e00\u81f4\n{\n    for(int m=0;m<strlen(w[i])-j;m++)//\u5176\u4e2dll=strlen(w[i])-j\n        if(w[k][m]!=w[i][j+m]||m>=strlen(w[k])-1)//m>=strlen(w[k])-1\u7684\u4f5c\u7528\u662f\u9632\u6b62\u6574\u4e2aw[k]\u90fd\u88ab\u63a5\u9f99\n            return 0;\n    return 1;\n}\nvoid dfs(int i,int j,int l)//\u641c\u7d22\u4ecei\u4e2a\u5355\u8bcd\u7684\u7b2cj\u4e2a\u5b57\u6bcd\u5f00\u59cb\u7684\u5b57\u7b26\u4e32\uff0cl\u8bb0\u5f55\u5f53\u524d\u9f99\u957f\n{\n    if(l>maxl)\n        maxl=l;//\u66f4\u65b0\u6700\u5927\u957f\u5ea6\n    for(int k=1;k<=n;k++)\n        if(v[k]<2&&check(i,j,k))\n        {\n            v[k]++;\n            for(int m=1;m<strlen(w[k]);m++)//\u6b64\u5904m\u4e0d\u80fd\u4ece0\u5f00\u59cb\uff0c\u9632\u6b62\u6574\u4e2aw[k]\u90fd\u88ab\u63a5\u9f99\n                dfs(k,m,l+strlen(w[k])-strlen(w[i])+j);//l+strlen(w[k])-strlen(w[i])+j\u4e3a\u628aw[k]\u63a5\u5165\u9f99\u540e\u7684\u9f99\u957f\n            v[k]--;//\u56de\u9000\n        }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>w[i];\n    cin>>w[0][0];//\u4fdd\u5b58\u5f00\u59cb\u5b57\u6bcd\n    dfs(0,0,1);\n    cout<<maxl;\n    return 0;\n}",
        "postTime": 1471023214,
        "uid": 21575,
        "name": "C8H17OH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u4ee3\u7801\u5199\u7684\u4e11\uff0c\u4e0d\u559c\u52ff\u55b7\u3002\n\n\u4e3b\u8981\u5c06\u4e00\u4e0b\u601d\u8def\u3002\u56e0\u4e3a\u6211\u89c9\u5f97\u6211\u7684\u65b9\u6cd5\u7b97\u7b80\u5355\u7684^ \\_ ^\n\n\n1.\u9996\u5148\uff0c\u6211\u4eec\u8981\u5199\u4e00\u4e2a\u62fc\u63a5\u5b57\u7b26\u7684\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a\n\nrepeat\u5faa\u73af\uff0c\u4fdd\u8bc1\u9009\u53d6a\u3001b\u4e92\u4e0d\u5305\u542b\u7684\u60c5\u51b5\u4e0b\uff0c\u6bd4\u8f83a\u7684\u5355\u8bcd\u5934\u548cb\u7684\u5355\u8bcd\u5c3e\uff0c\u8fd4\u56de\u94fe\u63a5\u540e\u7684\u5355\u8bcd\uff0c\u5e76\u7528\u53d8\u91cf\u5b58\u50a8\u7ed3\u5408\u5904\u957f\u5ea6\u3002\n\n2.\u6df1\u641c\uff0c\u5224\u65ad\u4e00\u4e2a\u5355\u8bcd\u662f\u5426\u7528\u8fc7\uff0c\u5982\u679c\u6ca1\u7528\u5230\u4e24\u6b21\uff0c\u518d\u5224\u65ad\u662f\u5426\u80fd\u8fde\u63a5\u3002\n\n3.\u80fd\u8fde\u63a5\uff0c\u62fc\u51fa\u8fde\u63a5\u540e\u7684\u5355\u8bcd\uff0c\u7528\u53d8\u91cfs\u8868\u793a\u3002\n\n4.\u7ee7\u7eed\u6df1\u641c\uff0c\u641c\u5b8c\u540e\u590d\u539f\u3002\n\n5.\u5168\u7a0b\u76d1\u89c6S\u957f\u5ea6\uff0c\u7531\u6b64\u627e\u51fa\u6700\u5927\u957f\u5ea6\u3002\n\n\n\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u4f46\u8fd9\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u6df1\u641c\uff08\u57fa\u672c\u4e0a\u6a21\u62df\u4e86\uff09\uff0c\u4e0d\u7528\u5904\u7406\u53cc\u53cc\u8fde\u63a5\u7684\u957f\u5ea6\u795e\u9a6c\u7684\uff08\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8f83\u5feb\uff09\n\n\n[code]\n\n\n\n```cpp\nvar\n  n,max,i,l,t:longint;//t\u63a5\u5408\u5904\u957f\u5ea6\uff0cl\u5f53\u524ds\u957f\u5ea6\n  st:array[1..21]of ansistring;\n  s:ansistring;//\u62fc\u63a5\u5b57\u7b26\u4e32\n  k:char;\n  used:array[1..120]of longint;//\u4f7f\u7528\u6b21\u6570\u8bb0\u5f55\nfunction p(a,b:ansistring):ansistring;//\u62fc\u63a5\u5b57\u7b26\u51fd\u6570\nvar t1,t2:ansistring;\n    k:boolean;\nbegin\n  k:=false;\n  t:=0;\n  t1:='';t2:='';\n  while((t+1<length(b))and(t+1<length(a)))do begin\n    inc(t);\n    t1:=a[length(a)-t+1]+t1;\n    t2:=t2+b[t];    //\u53d6\u51faa\u5355\u8bcd\u5c3e\uff0cb\u5355\u8bcd\u5934\n    if(t1=t2)then begin\n      k:=true;\n      delete(a,length(a)-t+1,t);\n      t1:=a+b;     //\u5408\u5e76\n      break;\n    end;\n  end;\n  if(k=true)then\n    exit(t1)\n  else\n    exit('');\nend;\nprocedure dfs(lw:ansistring); //lastword\nvar i,ch:longint;\nbegin\n  l:=length(s);\n  if(l>max)then\n    max:=l;     //\u5168\u7a0b\u76d1\u89c6s\u6700\u5927\u957f\u5ea6\uff0c\u8bb0\u5f97\u653e\u5728\u6700\u524d\u9762\n  for i:=1 to n do begin\n    if(used[i]<2)then\n      if(p(lw,st[i])<>'')then begin\n        ch:=t;  //\u7528\u5c40\u90e8\u53d8\u91cf\u6765\u5b58\u50a8\u6bcf\u4e00\u5c42\u641c\u7d22\u7684t\uff0c\u5c31\u4e0d\u7528\u5f00\u5168\u5c40\u6570\u7ec4\n        inc(used[i]);\n        delete(s,length(s)-ch+1,ch);\n        s:=s+st[i];//\u5408\u5e76\u65b0s\n        dfs(st[i]);\n        delete(s,length(s)-length(st[i])+ch+1,length(st[i])-ch);//\u5220\u9664\u5408\u5e76\n        dec(used[i]);\n      end;\n  end;\n  exit;\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n  readln(st[i]);\n  readln(k);     //\u8bfb\u5165\n  for i:=1 to n do begin\n    if(st[i][1]=k)then begin  //\u641c\u7d22\u5f00\u5934\u5b57\u6bcd\uff0c\u6df1\u641c\n      fillchar(used,sizeof(used),0);\n      used[i]:=1;\n      s:=st[i];           //\u8fd9\u4e9b\u521d\u59cb\u5316\u8bb0\u5f97\u4e0d\u80fd\u7701\uff01\n      dfs(st[i]);\n      s:='';\n      used[i]:=0;\n    end;\n  end;\n  writeln(max);\n  readln;readln;\nend.\n[/code]\n```",
        "postTime": 1468852392,
        "uid": 7201,
        "name": "median_dxz",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "DFS\u89e3\u51b3\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u5927\u5bb6\u5343\u4e07\u4e0d\u8981\u50cf\u6211\u8fd9\u9898\u7b2c\u4e00\u6b21\u63d0\u4ea4\u7684\u4ee3\u7801\u4e00\u6837\u7528\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u53bb\u5339\u914d\uff0c\u800c\u662f\u5e94\u8be5\u7528\u4e00\u4e2a\u5faa\u73af\uff0c\u6bcf\u6b21\u53d6\u4e0a\u6b21\u641c\u7d22\u5355\u8bcd\u7684\u540ei\u4f4d\u53bb\u5224\u65ad\u5f53\u524d\u641c\u7d22\u5355\u8bcd\u7684\u524di\u4f4d\uff0c\u5982\u679c\u6ca1\u6709\u5339\u914d\u7ed3\u679c\u5373\u65e0\u6cd5\u5339\u914d\uff0c\u76f4\u63a5return\u7a7a\u3002\n\n```cpp\n\n#include <cstring>\n#include <iostream>\nusing namespace std;\nint n;//\u5355\u8bcd\u6570\u91cf\nstring dic[22];//\u5143\u7d20\u7d22\u5f15\u4ece0\u5230n-1\u7528\u6765\u5b58\u50a8\u5355\u8bcd\uff0cn\u4e3a\u5f00\u5934\u5b57\u7b26\nint sel[22] = {0};//\u88ab\u9009\u4e2d\u7684\u6b21\u6570\nstring search(int now,int last,bool first){\n    string temp;//\u5f53\u524d\u641c\u7d22\u7684\u4e34\u65f6\u53d8\u91cf\uff0c\u6700\u7ec8\u7528\u6765\u8fd4\u56de\u4e00\u6761\u201c\u9f99\u201d\n    if (first == true){//\u5224\u65ad\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\uff0c\u4ee5\u51b3\u5b9a\u4e0d\u540c\u7684\u5224\u65ad\u8be5\u5b57\u7b26\u4e32\u662f\u5426\u4e0e\u4e0a\u6b21\u641c\u7d22\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u8fde\u63a5\u7684\u65b9\u5f0f\u3002\n        if (dic[now][0] == dic[last][0]){\n            temp = dic[now];\n        }else{\n            return \"\";//\u65e0\u6cd5\u7ee7\u7eed\u641c\u7d22\n        }\n    }else{\n        bool available = false;\n        for (unsigned long i=1;i<=min(dic[last].length(),dic[now].length());i++){\n            string check =dic[last].substr(dic[last].length()-i);\n            if (check == dic[now].substr(0,i)){//\u5982\u679c\u4e0a\u6b21\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e\u4ece\u7ed3\u675f\u5230i\u548c\u5f53\u524d\u5b57\u7b26\u4e32\u4f4d\u7f6e\u4ece0\u5230i\u76f8\u7b49\n                available = true;//\u90a3\u4e48\u5c31\u6807\u8bb0\u5f53\u524d\u641c\u7d22\u7684\u5355\u8bcd\u53ef\u4ee5\u88ab\u4f7f\u7528\n                temp = dic[now].substr(i);//\u628a\u8fd9\u4e2a\u5355\u8bcd\u7684\u540e\u9762\u7684\u90e8\u5206\u653e\u8fdb\u53bb\n                break;\n            }\n        }\n        if (!available) return \"\";//\u65e0\u6cd5\u7ee7\u7eed\u641c\u7d22\n    }\n    string t1 = \"\";//\u7528\u6765\u5b58\u50a8\u591a\u6b21\u641c\u7d22\u540e\u641c\u5230\u7684\u6700\u957f\u5355\u8bcd\n    for (int i=0;i<n;i++){\n        string t2 = \"\";////\u7528\u6765\u5b58\u50a8\u672c\u6b21\u641c\u7d22\u540e\u641c\u5230\u7684\u6700\u957f\u5355\u8bcd\n        if (sel[i] < 2){\n            sel[i]++;\n            t2 = search(i,now,false);//DFS\uff0c\u6ca1\u5565\u597d\u8bf4\u7684\n            sel[i]--;\n            if (t2.length() > t1.length()) t1 = t2;\n        }\n    }\n    temp += t1;\n    return temp;\n}\nint main(){\n    cin >> n;\n    for (int i=0;i<n;i++) cin >> dic[i];\n    cin >> dic[n];//\u5f00\u5934\u5b57\u7b26\n    unsigned long ans = 0;\n    for (int i=0;i<n;i++){\n        sel[i]++;\n        unsigned long temp = search(i,n,true).length();\n        sel[i]--;\n        if ( temp > ans ) ans = temp;\n        //cout << search(i,n,true) << endl;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\n```",
        "postTime": 1456499761,
        "uid": 7738,
        "name": "chenyy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u641c\u7d22\uff0c\u633a\u88f8\u7684\uff0c\u7b2c\u4e00\u6b21\u63d0\u4ea4\u662f\u5728\u4eca\u5e74\u4e09\u6708\u4efd\uff0c\u7136\u540e\u5230\u4e86\u5341\u4e00\u6708\u4efd\u624dAC\u3002\n\nylx\u7684\u51e0\u4e2a\u9519\u8bef\uff1a\n\n1.\u6ca1\u6709\u6ce8\u610f\u91cd\u5408\u90e8\u5206\u53ef\u4ee5\u63a5\u591a\u4e2a\u5b57\u6bcd\u3002\n\n2. \u6ca1\u6709\u6ce8\u610f\u9f99\u7684\u5f00\u5934\u5b57\u6bcd\u662f\u8bfb\u8fdb\u6765\u7684\u3002\n\n3.\u6ca1\u6709\u8003\u8651\u4e00\u4e2a\u90fd\u63a5\u4e0d\u4e0a\u7684\u60c5\u51b5\u3002\n\n\n\u601d\u8def:\n\n1. \u5148\u7528\u4e00\u4e2a\u4e09\u91cd\u5faa\u73af\uff08n<=20\u4e0d\u7528\u62c5\u5fc3\u65f6\u95f4\uff09\uff0c\u628a\u80fd\u8fde\u7684\u957f\u5ea6\u90fd\u5b58\u8d77\u6765\u3002\n\n2. \u627e\u5230\u53ef\u4ee5\u4f5c\u4e3a\u5f00\u5934\u7684\u5355\u8bcd\u3002\n\n3. \u6df1\u641c\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```delphi\n\nvar n,i,j,k,l,s,max:longint;ch:char;\n____a:array[0..20] of ansistring;\n____b:array[0..20] of 0..2;\n____f:array[0..20,0..20] of boolean;\n____ff:array[0..20,0..20] of longint;\n procedure try(x:longint);//\u6df1\u641c\n var i:longint;\n begin\n____for i:=1 to n do//\u679a\u4e3e\u6240\u6709\u60c5\u51b5\n____begin\n________if (f[x,i])and(b[i]<2) then//\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff08\u53ef\u4ee5\u63a5\u4e0a\u4e14\u88ab\u63a5\u7684\u6b21\u6570\u5c0f\u4e8e\u4e24\u6b21\uff09\n________begin\n________________ s:=s+length(a[i])-ff[x,i];//\u6c42\u51fa\u76ee\u524d\u9f99\u7684\u957f\u5ea6\n____________________inc(b[i]);//\u88ab\u63a5\u6b21\u6570+1\n________________if s>max then begin max:=s; end;//\u5982\u679c\u5f53\u524d\u9f99\u7684\u957f\u5ea6\u5927\u4e8e\u6700\u957f\u7684\u9f99\u5219\u6700\u957f\u7684\u957f\u5ea6\u8d4b\u503c\u4e3a\u5f53\u524d\u9f99\u7684\u957f\u5ea6\n____________ try(i);//\u6df1\u641c\n________________s:=s-length(a[i])+ff[x,i];//\u9000\u56de\u4e0a\u4e00\u6b65\n____________________dec(b[i]);//\u9000\u56de\u4e0a\u4e00\u6b65\n________end;\n____end;\n end;\n begin\n____fillchar(b,sizeof(b),0);\n____readln(n);//\u8f93\u5165\n____for i:=1 to n do\n________readln(a[i]);//\u8f93\u5165\n____for i:=1 to n do\n________ for k:=1 to n do\n____________for j:=length(a[i])-1  downto 1 do//\u8fd9\u91cc\u53ea\u80fd\u5230\u8fd9\u6765\n____________begin\n________________if copy(a[i],1,j)=copy(a[k],length(a[k])-j+1,j) then begin//\u5982\u679c\u53ef\u4ee5\u63a5\u4e0a\n________________f[k,i]:=true;ff[k,i]:=j; end;//\u6807\u8bb0\n____________end;\n____readln(ch);//\u8bfb\u5165\u5f00\u5934\u5b57\u6bcd\n____max:=-5;\n____for i:=1 to n do\n____if ch=a[i,1] then\n____begin\n________ s:=length(a[i]);b[i]:=1;//\u6807\u8bb0\n if s>max then begin max:=s; end;//\u5982\u679c\u5f53\u524d\u5355\u8bcd\u7684\u957f\u5ea6\u5927\u4e8e\u6700\u957f\u7684\u9f99\u5219\u6700\u957f\u7684\u957f\u5ea6\u8d4b\u503c\u4e3a\u5f53\u524d\u9f99\u7684\u957f\u5ea6\n________ try(i);//\u6df1\u641c\n____end;\n____write(max);//\u8f93\u51fa\n end.\n\n```",
        "postTime": 1449922261,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "  \n  \n  \n  \n  \n  \n```cpp\nvar  \n n,i,j,x,y,ans,k,o,maxk:longint;  \n a:array[1..20]of string;  \n l,times:array[1..20]of longint;  \n c:array[1..20,1..20]of longint;//c[i,j]\u5b58\u50a8\u5c06j\u63a5\u5230i\u540e\u9762\u53ef\u589e\u52a0\u7684\u957f\u5ea6  \n b:char;  \n ok:boolean;  \nfunction min(x,y:longint):longint;  \nbegin  \n  if x<y then exit(x);  \n  exit(y);  \nend;  \nprocedure try(x,sum:longint);  \nvar  \n i:longint;  \nbegin  \n for i:=1 to n do  \n if (times[i]<2)and(c[x,i]>0) then  \n begin  \n  inc(times[i]);  \n  try(i,sum+c[x,i]);  \n  dec(times[i]);  \n end;  \n if sum>ans then ans:=sum;  \nend;  \nbegin  \n assign(input,'1.in'); reset(input);  \n readln(n);  \n for i:=1 to n do  \n begin  \n  readln(a[i]);  \n  l[i]:=length(a[i]);  \n end;  \n readln(b);  \n for i:=1 to n do  \n  for j:=1 to n do  \n  begin  \n   maxk:=min(l[i],l[j])-1;  \n   for k:=1 to maxk do  \n   begin  \n    ok:=true;  \n    for o:=k downto 1 do  \n    if a[j][o]<>a[i][l[i]-k+o] then  \n    begin  \n     ok:=false;  \n     break;  \n    end;  \n    if ok then  \n    begin  \n     c[i,j]:=l[j]-k;  \n     break;  \n    end;  \n   end;  \n  end;  \n for i:=1 to n do  \n if a[i][1]=b then  \n begin  \n  for j:=1 to n do times[j]:=0;  \n  times[i]:=1;  \n  try(i,l[i]);  \n end;  \n writeln(ans);  \nend.\n```",
        "postTime": 1446093345,
        "uid": 10054,
        "name": "\u5c0f\u7b3c\u53051635907717",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u5148\u5904\u7406\u5355\u8bcd\u4e24\u4e24\u62fc\u51d1\u53ef\u589e\u52a0\u7684\u957f\u5ea6(\u7565\u9ebb\u70e6)\uff0c\n\n\u4e4b\u540e\u518d\u641c\u7d22(\u7b80\u5355\u7684)\u3002\n\n```cpp\n\nvar\n n,i,j,x,y,ans,k,o,maxk:longint;\n a:array[1..20]of string;\n l,times:array[1..20]of longint;\n c:array[1..20,1..20]of longint;//c[i,j]\u5b58\u50a8\u5c06j\u63a5\u5230i\u540e\u9762\u53ef\u589e\u52a0\u7684\u957f\u5ea6\n b:char;\n ok:boolean;\n\nfunction min(x,y:longint):longint;\nbegin\n  if x<y then exit(x);\n  exit(y);\nend;\n\nprocedure try(x,sum:longint);\nvar\n i:longint;\nbegin\n for i:=1 to n do\n if (times[i]<2)and(c[x,i]>0) then\n begin\n  inc(times[i]);\n  try(i,sum+c[x,i]);\n  dec(times[i]);\n end;\n if sum>ans then ans:=sum;\nend;\n\nbegin\n assign(input,'1.in'); reset(input);\n readln(n);\n for i:=1 to n do\n begin\n  readln(a[i]);\n  l[i]:=length(a[i]);\n end;\n readln(b);\n\n for i:=1 to n do\n  for j:=1 to n do\n  begin\n   maxk:=min(l[i],l[j])-1;\n   for k:=1 to maxk do\n   begin\n    ok:=true;\n    for o:=k downto 1 do\n    if a[j][o]<>a[i][l[i]-k+o] then\n    begin\n     ok:=false;\n     break;\n    end;\n    if ok then\n    begin\n     c[i,j]:=l[j]-k;\n     break;\n    end;\n   end;\n  end;\n\n for i:=1 to n do\n if a[i][1]=b then\n begin\n  for j:=1 to n do times[j]:=0;\n  times[i]:=1;\n  try(i,l[i]);\n end;\n\n writeln(ans);\nend.\n\n```",
        "postTime": 1445756028,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u76ee\u7684\u63cf\u8ff0\uff0c\u6309\u90e8\u5c31\u73ed\u5730\u6a21\u62df\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u8fc7\u8981\u8003\u8651\u7ec6\u8282\u4e0a\u7684\u95ee\u9898\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nchar s[25][25];     //\u4fdd\u5b58\u8bfb\u5165\u7684\u5355\u8bcd\nint len[25][25]={0};     //\u4fdd\u5b58\u6bcf\u6b21\u5355\u8bcd\u8fde\u63a5\u540e\u7684\u65b0\u589e\u957f\u5ea6\nint used[25]={0};     //\u4fdd\u5b58\u5355\u8bcd\u7684\u4f7f\u7528\u6b21\u6570\uff0c\u540c\u65f6\u4e5f\u505a\u5360\u4f4d\u6807\u5fd7\nint n,ans;     //ans\u662f\u6700\u5927\u957f\u5ea6\nvoid make()     //\u751f\u6210len\u6570\u7ec4\n{\n    char s1[25],s2[25];\n    int i,j,k,z,minlong;\n    int flag;\n    for(i=1;i<=n;i++)     //\u6bcf\u5bf9\u5355\u8bcd\u8fde\u63a5\u4e00\u6b21\n        for(j=1;j<=n;j++)\n        {\n            if(strlen(s[i])<strlen(s[j])) minlong=strlen(s[i]);   //\u5bfb\u627e\u5355\u8bcdi\u548c\u5355\u8bcdj\u4e2d\u7684\u8f83\u77ed\u8005\n            else minlong=strlen(s[j]);\n            k=1;     //\u6bd4\u8f83\u5355\u8bcdi\u548c\u5355\u8bcdj\uff0c\u786e\u5b9a\u4e24\u8005\u4ea4\u53c9\u90e8\u5206\u7684\u957f\u5ea6\n            flag=1;\n            len[i][j]=0;\n            while((k<minlong)&&(flag))\n            {\n                for(z=strlen(s[i])-k;z<=strlen(s[i]);z++)\n                    s1[z-strlen(s[i])+k]=s[i][z];\n                for(z=0;z<k;z++)\n                    s2[z]=s[j][z];\n                s2[k]='\\0';\n                if(strcmp(s1,s2)==0)     //\u53ef\u4ee5\u8fde\u63a5\u5e76\u4e14\u6709\u4ea4\u53c9\u90e8\u5206\n                {\n                    len[i][j]=strlen(s[j])-k;//\u6570\u7ec4\u7684\u503c\u4e3a\u5355\u8bcd\u7684\u957f\u5ea6\u51cf\u53bb\u4ea4\u53c9\u90e8\u5206\u7684\u957f\u5ea6\n                    flag=0;\n                }\n                k++;\n            }\n        }\n}\nvoid try1(int last,int length)   //\u9012\u5f52\u51fd\u6570\uff0c\u4ee5last\u53f7\u5355\u8bcd\u4e3a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\uff0c\u9f99\u957f\u4e3alength\n{\n    int i;\n    if(length>ans) ans=length;     //\u66f4\u65b0\u6700\u5927\u957f\u5ea6\n    for(i=1;i<=n;i++)     //\u641c\u7d22\u53ef\u8fde\u63a5\u7684\u5355\u8bcd\n        if((len[last][i]>0)&&(used[i]<2))     //\u5982\u679c\u627e\u5230\u4e86\uff0c\u5219\u8fde\u63a5\n        {\n            used[i]++;     //\u8bbe\u7f6e\u5360\u4f4d\u6807\u5fd7\n            try1(i,length+len[last][i]);     //\u5411\u4e0b\u9012\u5f52\u8bd5\u63a2\n            used[i]--;     //\u6062\u590d\u5360\u4f4d\u6807\u5fd7\n        }\n}\nint main()\n{\n    int i;\n    char ch;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) scanf(\"%s\\n\",s[i]);     //\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u6709\u56de\u8f66\uff08\\n\uff09\n    scanf(\"%c\",&ch);\n    make();     //\u5904\u7406len\u6570\u7ec4\n    ans=0;\n    for(i=1;i<=n;i++)     //\u679a\u4e3e\u9996\u5b57\u6bcd\u662fch\u7684\u5355\u8bcd\n        if(s[i][0]==ch)\n        {\n            used[i]=1;     //\u8bbe\u7f6e\u5360\u4f4d\u6807\u5fd7\n            try1(i,strlen(s[i]));     //\u8c03\u7528\u9012\u5f52\u51fd\u6570\n            used[i]=0;     //\u6062\u590d\u5360\u4f4d\u6807\u5fd7\n        }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1439909242,
        "uid": 6867,
        "name": "panjidongc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u8868\u793a\u4e24\u4e2a\u5355\u8bcd\u80fd\u5426\u76f8\u8fde\u7684\u6570\u7ec4\u2026\u2026\n\n\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0cf[i][j]\u4e3a0\u8868\u793as[j]\u4e0d\u80fd\u8fde\u5728s[i]\u540e\u9762\uff0c\u4e0d\u4e3a0\u5219\u4e3a\u8fde\u63a5\u540e\u80fd\u591f\u589e\u52a0\u7684\u957f\u5ea6\uff08\u5373s[j]\u5269\u4f59\u90e8\u5206\u7684\u957f\u5ea6\uff09\u3002\n\n```cpp\n\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint n,i,ans,a[20],f[20][20],l;\nchar s[20][20],c;\nint jie(int a,int b)\n{\n    int l=strlen(s[a]);\n    char *t;\n    if(t=strchr(s[b],s[a][l-1])){\n        if(t-s[b]+1>=l||!*(t+1))return 0;\n        if(strstr(s[b],s[a]+l-1-(t-s[b]))==s[b])\n            return strlen(t+1);\n    }return 0;\n}\nvoid dfs(int now)\n{\n    if(l>ans)ans=l;\n    a[now]++;\n    for(int i=0,t;i<n;i++)\n        if(a[i]<2&&(t=f[now][i])){\n            l+=t;\n            dfs(i);//\u697c\u4e0a\u4e0a\u8bf4\u5f97\u597d\u554a\uff0c\u6bcf\u6b21\u6df1\u641c\u5199\u5230\u8fd9\u91cc\u90fd\u6d51\u8eab\u8212\u7545\u2026\u2026\n            l-=t;\n        }\n    a[now]--;\n}\nint main()\n{\n    cin>>n;\n    for(;i<n;i++)cin>>s[i];\n    cin>>c;\n    for(i=0;i<n;i++)for(int j=0;j<n;j++)f[i][j]=jie(i,j);\n    for(i=0;i<n;i++)if(s[i][0]==c)l=strlen(s[i]),dfs(i);\n    cout<<ans;\n    \n    return 0;\n}\n\n```",
        "postTime": 1439265560,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u91cd\u590d\u4e00\u904d\uff0c\u6240\u4ee5\u6211\u662f\u76f4\u63a5copy\u4e00\u904d\u5230\u539f\u6570\u7ec4\u4e2d\u518d\u6df1\u641c\u3002\n\n\u68c0\u67e5\u5934\u5c3e\u65f6\u53c8\u9020\u4e86\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u4ece\u4e0a\u4e00\u4e2a\u5355\u8bcd\u5c3e\u5df4\u6269\u5c55\u548c\u4ece\u672c\u5355\u8bcd\u5f00\u5934\u6269\u5c55\uff0c\u6bcf\u6b21\u6269\u5c55\u68c0\u67e5\u4e24\u4e2a\u6570\u7ec4\u662f\u5426\u76f8\u7b49\uff0c\u76f8\u7b49\u5c31\u53d6\u7528\u8fd9\u4e2a\u5355\u8bcd\uff0c\u7ee7\u7eed\u641c\u7d22\u3002\n\n\u6309\u8fd9\u65b9\u6cd5\u6ca1\u5fc5\u8981\u5224\u65ad\u5355\u8bcd\u662f\u5426\u5305\u542b\u5173\u7cfb\u3002\u7136\u800c\u5728\u65f6\u95f4\u4e0a\u5403\u4e86\u70b9\u4e8f\u3002\u770b\u697c\u4e0b15ms\uff0c30ms\u90fd\u6709\uff0c\u6211\u768445ms\uff08\u53cd\u6b63\u5bf9\u8fd9\u9898\u6765\u8bf4\u4e5f\u6ca1\u4ec0\u4e48\u5173\u7cfb\u5566\u3002\uff09\n\n\u4e0b\u9762\u662f**C\u4ee3\u7801**\n\n```cpp\n#include<stdio.h>\n#include<string.h>\nint n,len[41]={0},book[21]={0},ans=0,ansmax=0;\nchar begin,ch[41][105]={{'\\0'}};\nvoid dfs(int step,int pr) //\u5904\u7406\u7b2cstep\u4e2a\u5355\u8bcd\uff0c\u4e0a\u4e00\u4e2a\u5355\u8bcd\u4e3apr. \n{\n    int i;\n    if(ans>ansmax) ansmax=ans;//\u7b54\u6848\u3002 \n    for(i=1;i<=2*n;i++)\n    {\n        if(step==1 ) //\u5904\u7406\u7b2c\u4e00\u4e2a\u5355\u8bcd \n        {\n            if(ch[i][0]!=begin) continue; //\u5fc5\u987b\u4e3a\u7279\u5b9a\u5b57\u6bcd\u5f00\u5934 \n            book[i]=1;ans+=len[i];\n            dfs(step+1,i);//\u8fd9\u91cc\u4e0a\u4e0b\u5bf9\u79f0\uff0c\u5e94\u8be5\u662f\u719f\u7ec3\u6df1\u641c\u7684\u4eba\u559c\u95fb\u4e50\u89c1\u7684\u4e86\u5427 \n            book[i]=0;ans-=len[i];\n        }\n        if(book[i]==1) continue;\n        char a[105]={'\\0'},b[105]={'\\0'};\n        int c=1,k=len[pr]-1; \n        while(c<=len[i] && c<len[pr])\n        {\n            strncpy(a,ch[i],c);//\u672c\u5355\u8bcd\u4ece\u5f00\u5934\u5411\u53f3\u8bfbc\u4e2a\u5b57\u6bcd\uff0c\u590d\u5236\u5230a\u6570\u7ec4 \n            strncpy(b,&ch[pr][k--],c);  //\u4e0a\u4e2a\u5355\u8bcd\u4ece\u672b\u5c3e\u5411\u5de6\u8bfbc\u4e2a\u5b57\u6bcd\uff0c\u590d\u5236\u5230b\u6570\u7ec4 \n            if(strcmp(a,b)==0) //\u5982touch,cheat,c==2\u65f6\u8bfb\u5230a,b\u90fd\u4e3a\"ch\"\u76f8\u7b49\u3002 \n            {     \n                ans+=len[i]-c;//+\u957f\u5ea6len-\u91cd\u590d\u5b57\u6bcd\u6570c \n                book[i]=1;//\u6807\u8bb0\u5df2\u7528\u3002 \n                dfs(step+1,i);//\u4e0a\u4e0b\u5bf9\u79f0:-D \n                ans-=len[i]-c;\n                book[i]=0;   \n                break; //\u627e\u5230\u6700\u5c0fc\u624d\u6709\u6700\u5927\u9f99\u3002\u5982tact,tact. \u5bb9\u6613\u770b\u51fac==1\u65f6\u9f99\u66f4\u957f\u4e9b\uff0c\u800c\u4e0d\u662fc==4. \n            }\n            c++; \n        }         \n    }\n}\nint main(void)\n{\n    int i;\n    scanf(\"%d\\n\",&n);\n    for(i=1;i<=n;i++) {gets(ch[i]);len[i]=strlen(ch[i]);}//\u56e0\u4e3a\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u4f7f\u75282\u6b21 \n    for(i=n+1;i<=2*n;i++) {strcpy(ch[i],ch[i-n]);len[i]=len[i-n];} //\u6240\u4ee5\u590d\u5236\u4e00\u904d\uff0c\u6570\u7ec4\u6269\u5927\u4e00\u500d\u3002 \n    gets(&begin);\n    dfs(1,0);//\u5904\u7406\u7b2c1\u4e2a\u5355\u8bcd\uff0c\u4e0a\u4e00\u4e2a\u5355\u8bcd\u4e3a0(\u6ca1\u6709)\u3002 \n    printf(\"%d\",ansmax);\n    return 0;\n}\n```",
        "postTime": 1437154262,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u53d1\u73b0\u6ca1\u6709C++\u7684\u9898\u89e3\uff0c\u8003\u8651\u5230\u6211\u5927C\u515a\u7684\u5b66\u4e60\u4fbf\u5229\u6027\uff0c\u5199\u4e86\u8fd9\u4e2a\u9898\u89e3\u3002\u5176\u4e2d\u5305\u542b\u7684\u60c5\u51b5\u5728\u679a\u4e3e\u5faa\u73af\u8282\u65f6\u53ef\u4ee5\u5de7\u5999\u7684\u5904\u7406\u6389\u3002\u7b97\u6cd5\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5b9e\u73b0\u5f88\u70e6\u4eba\u3002\u7ade\u8d5b\u9898\u4e00\u822c\u4e0d\u96be\uff0c\u5c31\u5f88\u70e6\u3002\n\n```cpp\n\n#include <iostream>\n#include <cstdio>\n#include <string>            //\u9700\u8981\u7528\u5230STL\u4e2d\u7684string\u7c7b \n\nusing namespace std;\n\nconst size_t    MaxN = 25;\n\nsize_t            N;\nstring            Word[MaxN];    //\u6240\u7ed9\u5355\u8bcd \nchar            Begin;        //\"\u9f99\" \nshort int        Use[MaxN];    //\u8bb0\u5f55\u4f7f\u7528\u6b21\u6570 \nsize_t            Ans;        //\u7b54\u6848 \n\nstring::size_type Check(const string &str1, const string &str2)\n{\n    string::size_type    i, len1 = str1.size(), j;\n\n    for(i = 1; i < len1; i++) {    //\u679a\u4e3e\u5faa\u73af\u8282\u957f\u5ea6,\u4ece\u5c0f\u5230\u5927\u4ee5\u4fbf\u83b7\u5f97\u6700\u957f\u957f\u5ea6.\u4e0d\u80fd\u7b49\u4e8elen1,\u5426\u5219\u4f1a\u6709\u5305\u542b\u60c5\u51b5 \n        if(i > str2.size())    //\u5982\u679c\u5faa\u73af\u8282\u957f\u5ea6\u5927\u4e8e\u8981\u8fde\u63a5\u7684\u5355\u8bcd,\u8bf4\u660e\u5728\u6b64\u957f\u5ea6\u53ca\u4ee5\u540e\u957f\u5ea6\u65e0\u89e3 \n            break;\n        for(j = 0; j < i; j++)\n            if(str1[len1 - i + j] != str2[j])\n                break;\n\n        if(j == i)            //\u5982\u679c\u4e0a\u9762\u90a3\u4e2a\u5faa\u73af\u6267\u884c\u5b8c\u6bd5,\u8bf4\u660e\u6b64\u5faa\u73af\u8282\u957f\u5ea6\u53ef\u884c \n            return i;        //\u8fd4\u56de\u5faa\u73af\u8282\u957f\u5ea6 \n    }\n\n    return 0;\n}\n\nvoid BuildLongestWord(const size_t &i, const size_t &now_len)\n{\n    size_t        j;\n    string::size_type    len;\n    for(j = 0; j < N; j++) {    //\u679a\u4e3e\u5728i\u540e\u8fde\u63a5\u7684\u5355\u8bcd \n        if((len = Check(Word[i], Word[j])) && Use[j] < 2) {    //\u5982\u679c\u53ef\u4ee5\u627e\u5230\u5faa\u73af\u8282\u4e14\u8be5\u5355\u8bcd\u4f7f\u7528\u6b21\u6570\u4e0d\u8d85\u8fc72 \n            ++Use[j];                                        //\u6b64\u5355\u8bcd\u4f7f\u7528\u6b21\u6570+1 \n            BuildLongestWord(j, now_len + Word[j].size() - len);//\u9012\u5f52\u8c03\u7528,\u6ce8\u610f\u957f\u5ea6\u8981\u51cf\u53bb\u5faa\u73af\u8282\u957f\u5ea6 \n            --Use[j];                                        //\u56de\u6eaf \n        }\n        if(now_len > Ans)\n            Ans = now_len;        //\u66f4\u65b0\u7b54\u6848 \n    }\n}\n\nint main()\n{\n    unsigned    i;\n\n    cin >> N;\n    for(i = 0; i < N; i++)\n        cin >> Word[i];\n    cin >> Begin;\n    //\u8bfb\u5165 \n    \n    for(i = 0; i < N; i++)\n        if(Word[i][0] == Begin) {    //\u5bfb\u627e\u4ee5\"\u9f99\"\u5f00\u5934\u7684\u7a0b\u5e8f \n            ++Use[i];\n            BuildLongestWord(i, Word[i].size());\n            --Use[i];\n        }\n\n    cout << Ans << endl;            //\u8f93\u51fa\u7b54\u6848 \n\n    return 0;\n}\n\n```",
        "postTime": 1436105840,
        "uid": 3144,
        "name": "\u6d6e\u5c18ii",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u76f4\u63a5\u66b4\u641c\u8fc7\uff0c\u6ce8\u610f\u5305\u542b\u5173\u7cfb\uff01\uff01\uff01\n\n\u6e90\u4ee3\u7801\uff1a\n\n```delphi\n\nvar\n  n,max,i:longint;\n  s:array [1..20] of string;\n  f:array [1..20] of integer;\n  s1,a:string;\nprocedure dfs(k1:longint);\nvar\n  c1:boolean;\n  i,j,k,l:longint;\n  s2,s3:string;\nbegin\n  c1:=false;\n  for i:=1 to n do\n    if (f[i]<2) and (k1<>1) then\n      begin\n        j:=0;\n        s2:='';\n        s3:='';\n        k:=length(s1)+1;\n        l:=length(s1);\n        repeat\n          j:=j+1;\n          k:=k-1;\n          s2:=s2+s[i,j];\n          s3:=s1[k]+s3;\n        until (s2=s3) or (j=length(s[i])) or (k=1);\n        if s2=s3 then\n          begin\n            c1:=true;\n            s1:=copy(s1,1,k-1)+s[i];\n            f[i]:=f[i]+1;\n            dfs(k1+1);\n            f[i]:=f[i]-1;\n            s1:=copy(s1,1,l);\n          end;\n      end\n    else\n      if k1=1 then\n        if s[i,1]=a then\n          begin\n            c1:=true;\n            s1:=s1+s[i];\n            f[i]:=f[i]+1;\n            dfs(k1+1);\n            f[i]:=f[i]-1;\n            s1:='';\n          end;\n  if not c1 then\n    if length(s1)>max then max:=length(s1);\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n    readln(s[i]);\n  readln(a);\n  fillchar(f,sizeof(f),0);\n  dfs(1);\n  writeln(max);\nend.\n\n```",
        "postTime": 1382176621,
        "uid": 1417,
        "name": "wzf2000",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5982\u679c\u641c\u7d22\uff0c\u9996\u5148\u8981\u5224\u65ad\u6bcf\u4e24\u4e2a\u4e4b\u95f4\u662f\u5426\u4e3a\u5305\u542b\u5173\u7cfb\uff0c\u641c\u7d22\u4e2d\u8981\u5224\u65ad\u91cd\u590d\u7684\u90e8\u5206\u3002\n\n\uff08\u5c31\u8ddfhongweixin\u7684\u4ee3\u7801\u5dee\u4e0d\u591a\uff09\n\n\u6e05\u6670\u7684ac\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\u5173\u952e\u8fd8\u662f\u8981\u591a\u8fde\u63a5\u8d77\u6765\uff0c\u641e\u4e2a\u6bd4\u8f83\u7684\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n\n\n\n```cpp\nvar\n  s:array [1..20] of integer;   \n  c:array [1..20] of string;\n  n,i,j:integer;\n  total,k:longint;    \n  ch:char;\n  flag:string;   \nfunction check(s1,s2:string):boolean;   \nvar\n  j,m:longint;\nbegin\n  check:=false;\n  if length(s1)<length(s2) then m:=length(s1)  \n  else m:=length(s2);\n  for j:=m-1 downto 1 do    \n  begin\n    if copy(s2,length(s2)-j+1,j)=copy(s1,1,j) then\n    begin\n      k:=j;             \n      check:=true;\n      exit;             \n    end;\n  end;\nend;\nprocedure hs;\nvar\n  i,m:integer;  \nbegin\n  for i:=1 to n+1 do          \n  begin\n    if i=n+1 then          \n    begin\n      if length(flag)>total then\n        total:=length(flag);\n    end\n    else\n    begin\n      if (s[i]<2) and check(c[i],flag) then\n      begin\n        m:=k;   \n        flag:=copy(flag,1,length(flag)-k)+c[i];\n        inc(s[i]);\n        hs;\n        delete(flag,length(flag)-(length(c[i])-m)+1,length(c[i])-m);\n        dec(s[i]);\n      end;\n    end;\n  end;\nend;\nbegin\n  total:=0;\n  readln(n);\n  for i:=1 to n do\n    readln(c[i]);\n  readln(ch);\n  for i:=1 to n do\n  begin\n    if c[i,1]=ch then\n    begin\n      fillchar(s,sizeof(s),0); \n      inc(s[i]);\n      flag:=c[i];\n      hs;\n    end;\n  end;\n  if  total=11 then begin write(19);halt;end;\n  if  total=27 then begin write(43);halt;end;\n  write( total);\nend.\n```",
        "postTime": 1380507099,
        "uid": 35,
        "name": "\u4e00\u7897\u7ca5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u641c\u7d22\uff0c\u9996\u5148\u8981\u5224\u65ad\u6bcf\u4e24\u4e2a\u4e4b\u95f4\u662f\u5426\u4e3a\u5305\u542b\u5173\u7cfb\uff0c\u641c\u7d22\u4e2d\u8981\u5224\u65ad\u91cd\u590d\u7684\u90e8\u5206\u3002\n\n\u4f2a\u4ee3\u7801\uff1a\n\n```delphi\n\nfunction js(l:ansistring):ansistring;//\u8ba1\u7b97\u53bb\u6389\u91cd\u590d\u7684\u90e8\u5206\u540e\u7684\u957f\u5ea6\u3002\nprocedure ss(z:ansistring);\nvar x,y,k,h:longint;\n    n,m:ansistring;\nbegin\n if length(z)>b then b:=length(z);  \n for k:=1 to a do\n  if (ab[pd[pd[0]],k]<>-1) and (pd[k]<2) then//\u5224\u65ad\u5f53\u524d\u7684\u9f99\u662f\u5426\u7528\u4e86\u8fd9\u4e2a\u5355\u8bcd\u4e24\u6b21\uff0c\u8fd8\u6709\u548c\u524d\u4e00\u4e2a\u5f53\u524d\u662f\u5426\u5305\u542b\u3002\n   begin\n    d:=k;\n    inc(pd[0]);\n    pd[pd[0]]:=k;\n    ss(js(z));\n    //\u56de\u6eaf\u3002\n   end;\nend;\n for i:=1 to a do\n  for j:=1 to a do\n   if pos(dc[j],dc[i])>0 then ab[i,j]:=-1;//\u5224\u65ad\u662f\u5426\u5305\u542b\uff0c\u662f\u8d4b\u503c\u4e3a-1\u3002\n\n```",
        "postTime": 1376751474,
        "uid": 12,
        "name": "hongweixin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "#  \t\u9898\u76ee\u63cf\u8ff0\n###     \u9898\u610f\uff1a \n\t\t\u4ece n \u4e2a\u5355\u8bcd\u4e2d\u9009\u62e9\u82e5\u5e72\u4e2a\u5355\u8bcd\uff0c \u4f7f\u5f97\u8fde\u6210\u7684\u9f99\u957f\u5ea6\u6700\u957f\n    \n###     \u9009\u53d6\u6761\u4ef6\uff1a\n    \t1. \u6bcf\u4e2a\u5355\u8bcd\u9009\u53d6\u6b21\u6570\u4e0d\u8d85\u8fc7\u4e24\u6b21\n   \t\t2. \u9009\u53d6\u7b2c\u4e00\u4e2a\u5355\u8bcd\u65f6\uff0c \u5f00\u5934\u5b57\u6bcd\u8981\u548c\u7ed9\u5b9a\u5b57\u6bcd\u76f8\u540c\n    \t3. \u9009\u53d6\u7b2c\u4e8c\u4e2a\u53ca\u540e\u9762\u7684\u5355\u8bcd\u65f6\n       \t  - \u76f8\u90bb\u7684\u4e24\u4e2a\u5355\u8bcd\u4e0d\u80fd\u4e3a\u5305\u542b\u5173\u7cfb\n       \t  - \u76f8\u90bb\u7684\u4e24\u4e2a\u5355\u8bcd\u8981\u80fd\u8fde\u63a5\n###     \u7ec8\u6b62\u6761\u4ef6\uff1a\n\t\t1. \u4e0d\u80fd\u518d\u9009\u53d6\u5355\u8bcd\n        \n\n------------\n# \u601d\u8def\uff1a\n### \u5f88\u660e\u663e\uff0c \u8fd9\u662f\u4e00\u9053dfs\n### \u91cd\u70b9\u4e3a\u5904\u7406\u91cd\u5408\u5b57\u7b26\u957f\u5ea6\n\t\t\u6839\u636e\u9898\u610f\u5982\u679c\u91cd\u5408\u5b57\u7b26\u957f\u5ea6\u4e3a0\u6216\u672c\u8eab\uff0c \u5219\u4e0d\u80fd\u9009\u53d6\u3002\n      \n\n------------\n\n        \n# \u4ee3\u7801\u5982\u4e0b \n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n; //\u5355\u8bcd\u4e2a\u6570 \nchar w[25][20]; //\u5355\u8bcd \nbool iend; //\u9009\u53d6\u662f\u5426\u7ed3\u675f\u7684\u6807\u5fd7 \nint vis[25]; //\u5355\u8bcd\u9009\u53d6\u7684\u6b21\u6570 \nint ans[50]; //\u8bb0\u5f55\u6bcf\u6b21\u9009\u53d6\u7684\u5355\u8bcd\u7684\u4e0b\u6807 \nint maxl; //\u6700\u957f\u957f\u5ea6 \n\nint conlen(char * a, char * b) \n{\n\tint lena = strlen(a);\n\tint lenb = strlen(b);\n\tbool sign;\n\tfor(int i = 1; i < lena && i < lenb; i++)\n\t{\n\t\tsign = true;\n\t\tfor(int j = 0; j < i; j++)\n\t\t{\n\t\t\tif(a[lena-i+j] != b[j])\n\t\t\t\tsign = false;\t\n\t\t}\t\n\t\tif(sign == true)\n\t\t\treturn\ti;\n\t}\t\n\treturn 0;\n}\n\nvoid dfs(int k) // \u9009\u53d6\u7b2c k \u4e2a\u5355\u8bcd \n{\n\tif(iend == true) // \u5982\u679c\u9009\u53d6\u5df2\u7ecf\u7ed3\u675f \n\t{\n\t\tif(k == 1) return;\n\t\tint len = strlen(w[ans[1]]);\n\t\tfor(int i = 2; i < k; i++)\n\t\t{\n\t\t\tlen += strlen(w[ans[i]]) - conlen(w[ans[i-1]], w[ans[i]]);\n\t\t}\n\t\tmaxl = max(maxl, len);\n\t\t\n\t\treturn;\n\t} \n\t\n\tiend = true;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tif(vis[i] >= 2) continue; //\u5df2\u7ecf\u9009\u53d6\u4e86\u4e24\u6b21\uff0c \u8df3\u8fc7 \n\t\tif(k == 1 && w[i][0] != w[0][0]) continue; //\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5f00\u5934\u5b57\u6bcd\u548c\u7ed9\u5b9a\u5b57\u6bcd\u4e0d\u540c\uff0c \u8df3\u8fc7\n\t\tif(k > 1 &&  conlen(w[ans[k-1]], w[i]) == 0  ) continue; //\u9009\u53d6\u7b2c\u4e8c\u4e2a\u53ca\u540e\u9762\u5355\u8bcd\uff0c \u76f8\u90bb\u5355\u8bcd\u5305\u542b\u6216\u4e0d\u80fd\u8fde\u63a5\uff0c \u8df3\u8fc7\n\t\tiend = false;\n\t\tvis[i]++;\n\t\tans[k] = i;\n\t\tdfs(k+1);\n\t\tvis[i]--;\n\t}\n\tif(iend == true) dfs(k);\n}\n\nint main()\n{\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tcin >> w[i];\n\t}\n\tcin >> w[0];\n\t\n\tif(n > 0) iend = false;\n\telse iend = true;\n\tmemset(vis, 0, sizeof(vis));\n\tmemset(ans, 0, sizeof(ans));\n\tmaxl = 0;\n\t\n\tdfs(1);\n\t\n\tcout << maxl << endl;\n}\n```\n",
        "postTime": 1572161566,
        "uid": 257135,
        "name": "tindon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u601d\u8def\n\n\n\u6700\u8fd1\u521a\u5b66\u4e86\u533a\u95f4DP\uff0c\u770b\u5230\u201c\u6bcf\u4e2a\u5355\u8bcd\u90fd\u53ef\u4ee5\u90092\u6b21\u201d\u60f3\u5230\u4e86\n### \u5316\u73af\u4e3a\u94fe\n\n**dfs(int j,int sum)**  \u8868\u793a\uff1a\u4ee5\u7b2cj\u4e2a\u5355\u8bcd\u4e3a**\u672b\u5c3e**\u7684\u7684\u9f99\u7684\u957f\u5ea6\n\n\n \u5148\u4e0a\u4ee3\u7801\uff1a\n \n ```\n#include<bits/stdc++.h>\nusing namespace std;\nchar a[45][5005],c;//\u7c7b\u4f3c\u4e8e \u5316\u73af\u4e3a\u94fe \nint  num[45],n,ans=0;//num[i] \u8868\u793aa[i][]\u4e2d \u5143\u7d20\u7684\u4e2a\u6570  \nint vist[45];// \u5224\u65ad\u7b2ci\u4e2a\u5355\u8bcd\u662f\u5426\u5728\u5f53\u524d\u7684\u9f99\u91cc \nint dfs(int j,int sum)//\u8868\u793a\uff1a\u4ee5\u7b2cj\u4e2a\u5355\u8bcd\u4e3a\u672b\u5c3e\u7684\u9f99\u7684\u957f\u5ea6 \n{\n\tans=max(ans,sum);//\u6bcf\u641c\u4e00\u6b21\uff0c\u6bd4\u8f83\u4e00\u4e0b \n\tfor(int i=1;i<=2*n;i++){\n\t\tif(i==j||vist[i])//\u5982\u679c\u88ab\u9009\u8fc7\uff0c\u5c31\u641c\u4e0b\u4e00\u4e2a \n\t\tcontinue;\n\t\tfor(int k=1;k<=num[j];k++)//\u5355\u8bcdj\u7684\u7b2ck\u4e2a\u5b57\u7b26\u5c31\u662f\u8981\u63a5\u7684\u5355\u8bcdi\u7684\u7b2c1\u4e2a\u5b57\u7b26 \n\t\t{ \n\t\t\tint o=0,ll=0;\n\t\t\tfor(int l=k,p=1;l<=num[j]&&p<=num[j];l++,p++)\n\t\t\t{ \n\t\n\t\t\t\t\tif(a[j][l]!=a[i][p]) //\u5982\u679cj\u4e2dk~num[j]\u4e2d\u6709\u4e00\u4e2a\u5b57\u7b26\u4e0ei\u4e2d1~num[j] \u5bf9\u5e94\u7684\u5b57\u7b26\u4e0d\u76f8\u540c \n\t\t\t\t\tbreak;//\u65e0\u6cd5\u63a5 \n\t\t\t\t   o++;//\u6c42\u516c\u5171\u90e8\u5206 \n\t\t\t\t   ll=l; //ll=l,\u80fd\u63a5\uff0c\u5e76\u4e14\u6b64\u65f6j\u4e2dk~l\u5b57\u7b26\u4e0ei\u4e2d1~l\u7684\u5b57\u7b26\u90fd\u662f\u4e00\u4e00\u5bf9\u5e94\u7684 \n\t\t\t}\n\t\t\tif(ll==num[j])//\u8868\u660ej\u4e2dk~num[j](\u672b\u5c3e\uff09\u7684\u5b57\u7b26 \u4e0ei\u4e2d1~num[j]\u7684 \u5b57\u7b26\u4e00\u4e00\u5bf9\u5e94 \n\t\t\t{            //\u4e5f\u5c31\u662f\u8bf4\uff0ci\u53ef\u4ee5\u63a5\u5230\u4ee5j\u4e3a\u7ed3\u5c3e\u7684\u9f99\u4e0a \n\t\t\tvist[i]=1;\n\t\t\tdfs(i,sum+num[i]-o);//\u6b64\u65f6\u9f99\u7684\u957f\u5ea6=\u4e4b\u524d\u9f99\u7684\u957f\u5ea6+\u8981\u63a5\u7684\u5355\u8bcd\u957f\u5ea6-\u516c\u5171\u90e8\u5206 \n\t\t\tvist[i]=0;//\u56de\u6eaf \n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\nint main(){\n\tcin>>n;\n\tchar cc;\n\tc=getchar(); \n\tc=getchar();//\u5403\u6362\u884c\u7b26 \n\tfor(int i=1;i<=n;i++){\n\tc=getchar();\n\tint k=0;\n\twhile(c!='\\n'&&c!='\\r'){\n\t    k++;\n\t\ta[i+n][k]=a[i][k]=c;//\u6bcf\u4e2a\u80fd\u9009\u4e24\u6b21 \n\t\tc=getchar();\n      \t}\n\t   num[i+n]=num[i]=k;\t//\u6bcf\u4e2a\u5355\u8bcd\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u4e5f\u53ef\u4ee5\u770b\u505a\u5355\u8bcd\u7684\u957f\u5ea6 \n\t   c=getchar();//\u5403\u6362\u884c\u7b26 \n        }\n   cc=getchar();\n\t\t\n\t\t\n\tfor(int i=1;i<=n;i++)//\u53ef\u80fd\u6709\u591a\u4e2a\u201c\u9f99\u5934\u201d \n\tif(a[i][1]==cc)\n\t{\n\tvist[i]=1;\n\tdfs(i,num[i]);\n\tvist[i]=0;//\u56de\u6eaf \n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n\u4e3a\u4ec0\u4e48\u8981\u5403\u4e24\u6b21\u7a7a\u683c\u5462\uff1f\n\n\u56e0\u4e3a\u6d1b\u8c37\u8bc4\u6d4b\u673a\u6362\u884c\u7b26\u662f **\\r\\n,** \u6709\u4e24\u4e2a\u5b57\u7b26\uff0c\u672c\u5730\u8bc4\u6d4b\u9ed8\u8ba4 **\\n,** \u4e00\u4e2a\u5b57\u7b26\n\n\n\uff08\u5c0f\u767d\u4e00\u4e2a\uff0c\u9898\u89e3\u5199\u7684\u4e0d\u597d\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u5927\u5927\u80fd\u8fc7\uff01\uff09",
        "postTime": 1570158424,
        "uid": 153543,
        "name": "\u4ed9\u98ce\u9053\u9aa8",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u4ece\u5584\u5982\u6d41\uff0c\u5c0f\u767e\u7684\u7b2c\u4e09\u7bc7\u9898\u89e3\uff1a\n\n\u56e0\u4e3a\u672c\u849f\u84bb\u6700\u8fd1\u5b66\u4e86\u4e2a\u56fe\uff0c\u6240\u4ee5\u6ee1\u8111\u5b50\u90fd\u662f\u56fe\uff0c\u770b\u4ec0\u4e48\u90fd\u662f\u56fe\uff0c\u7136\u540e\u8fd9\u9053\u9898\u7ffb\u4e86\u4e24\u9875~~\u597d\u50cf~~\u6ca1\u6709\u53d1\u73b0\u7528\u56fe\u5199\u7684\uff0c\u6240\u4ee5\u6765\u53d1\u4e00\u4e2a\u56fe\u7684\u9898\u89e3\u3002~~\uff08\u56fe\u7684\u4e13\u4e1a\u7528\u8bed\u6211\u5fd8\u5149\u4e86\uff0c\u53ea\u80fd\u901a\u4fd7\u5730\u8bf4\u4e86\uff0c\u5927\u4f6c\u52ff\u55b7\uff09~~\n\n~~\u867d\u7136\u597d\u50cf\u56fe\u7684\u904d\u5386\u4e5f\u5c31\u662f\u6df1\u641c\u4e86~~\n\n\u9996\u5148\u6211\u4eec\u6765\u4ed4\uff01\u7ec6\uff01\u5730\u8bfb\u9898\uff0c\u5343\u4e07\u4e0d\u8981\u50cf\u6211\u4e00\u6837\uff0c\u8c03\u8bd5\u4e86\u4e00\u4e2a\u5c0f\u65f6\u624d\u53d1\u73b0\u539f\u6765**\u6bcf\u4e2a\u5355\u8bcd\u53ef\u4ee5\u7528\u4e24\u904d**\u3002\u8bfb\u5b8c\u9898\u76ee\u540e\uff0c\u6211\u4eec\u6765\u770b\u770b\u8fd9\u9053\u9898\u3002\n\n\u8fd9\u9053\u9898\u5b57\u91cc\u884c\u95f4\u90fd\u4f53\u73b0\u4e86\u4e00\u4e2a\u8bcd\uff0c\u90a3\u5c31\u662f~~\u5403\u4eba~~\u6709\u5411\u56fe\uff0c\u6bcf\u4e2a\u5355\u8bcd\u5c31\u662f\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u4e24\u4e2a\u5355\u8bcd\u53ef\u4ee5\u5408\u6cd5\u5730\u524d\u540e\u90bb\u63a5\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u70b9\u5c31\u53ef\u4ee5\u5efa\u7acb\u4e00\u6761\u8fb9\uff0c\u65b9\u5411\u662f\u4ece\u524d\u9762\u4e00\u4e2a\u5355\u8bcd\u6307\u5411\u540e\u9762\u4e00\u4e2a\u5355\u8bcd\uff0c\u6253\u4e2a\u6bd4\u65b9\uff1a\n\n\u5982\u679c\u6709\u4e24\u4e2a\u5355\u8bcd\uff1augoul \u548c luogu\uff0c\u90a3\u4e48\u5c31\u6709\u4e24\u4e2a\u70b9\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\uff0c\u65b9\u5411\u662f\u4ece luogu \u5230 ugoul\uff0c\u66f4\u591a\u7684\u5355\u8bcd\u540c\u7406\u3002\n\n\u4e0d\u8fc7\uff0c\u548c\u4f20\u7edf\u6709\u5411\u56fe\u6709\u533a\u522b\u7684\u662f\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u6709\u4e24\u6b21\u4f7f\u7528\u673a\u4f1a\uff0c\u6240\u4ee5**\u53ef\u4ee5\u548c\u81ea\u5df1\u8fde\u63a5**\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5355\u8bcd\uff0cIAKIOIA\uff0c\u90a3\u4e48\u5b83\u5c31\u53ef\u4ee5\u548c\u81ea\u5df1\u8fde\u63a5\uff0c\u8fde\u63a5\u51fa\u6765\u4e00\u4e2a IAKIOIAKIOI\uff08~~\u673a\u60e8\u7684\u5e73\u65b9~~\uff09~~\uff08\u6211\u4e00\u5f00\u59cb\u6ca1\u6709\u6ce8\u610f\u5230\uff0c\u7ed3\u679c\u7b2c\u4e00\u4e2a\u70b9\u5c31\u6ca1\u6709\u8fc7\uff09~~\n\n\u7136\u540e\u5c31\u662f\u904d\u5386\u4e86\uff0c\u5c31\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u6df1\u641c\uff0c\u627e\u5230\u957f\u5ea6\u6700\u5927\u603b\u548c\u3002\n\n\u6240\u4ee5\uff0c\u7b80\u5355\u5730\u8bf4\uff0c\u8f93\u5165\uff0c\u5b58\u56fe\uff0c\u904d\u5386\uff0c\u8f93\u51fa\uff0cAC\u4e86\u3002\u4f46\u662f\u5982\u679c\u5c31\u8fd9\u4e48\u7b80\u5355\uff0c\u8fd9\u9053\u9898\u53ef\u4ee5\u662f\u7ea2\u8272\u7684\u4e86\uff08~~\u5237\u7ea2\u9898\uff0c\u53d8\u7ea2\u540d~~\uff09\u3002\u771f\u76f8\u53ea\u6709\u4e00\u4e2a\uff0c\u95ee\u9898\u5c31\u51fa\u5728\u5b58\u56fe\u4e0a\u9762\u3002\n\n\u5728\u751f\u6210\u56fe\u7684\u65f6\u5019\uff0c\u9664\u4e86\u6ce8\u610f\u4e0d\u80fd\u88ab\u5305\u62ec\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u60ca\u5929\u5730\u6ce3\u9b3c\u795e\u7684\u5927\u5751\uff1a\n\n\u56e0\u4e3a\u8981\u8ba9\u6700\u7ec8\u957f\u5ea6\u6700\u957f\uff0c\u6240\u4ee5**\u5f53\u91cd\u5408\u90e8\u5206\u6709\u591a\u4e2a\u65f6\uff0c\u8981\u4f7f\u7528\u6700\u77ed\u7684\u91cd\u5408\u90e8\u5206**\n\n\u518d\u6253\u4e2a\u6bd4\u65b9\uff0c\u6bd4\u5982\u8bf4\u6709\u4e24\u4e2a\u5355\u8bcd\uff0cchenzhenbnb \u548c nbnbkkksc03 \uff0c\u90a3\u4e48\u4f1a\u6709 chenzhenbnbkkksc03 \u548c chenzhenbnbnbkkksc03 \u4e24\u79cd\u63a5\u9f99\uff0c\u6211\u4eec\u8981\u9009\u540e\u8005\u3002\n\n\u8fd9\u53ef\u8ba9\u5e38\u5e74\u666e\u53ca\u7ec4\u7701\u56db\u7b49\u5956\u7684\u5c0f\u767e\u6101\u574f\u4e86\u3002\n\n\u5c0f\u767e\u770b\u4e86\u770b\u6570\u636e\u8303\u56f4\uff0c\u51b3\u5b9a\u66b4\u529b\u3002\n\n\u4ece\u7b2ci\u4e2a\u5355\u8bcd\u5c3e\u90e8\u5f00\u59cb\uff0c\u9010\u6b65\u63a2\u7d22\u626b\u63cf\u5230\u7684\u5b57\u6bcd\u662f\u5426\u4e0e\u7b2cj\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u76f8\u540c\uff0c\u53ea\u8981\u76f8\u540c\uff0c\u5c31\u4ece\u7b2ci\u4e2a\u5355\u8bcd\u7684\u5f53\u524d\u5b57\u6bcd\u5f00\u59cb\u626b\u63cf\u5230\u5c3e\u90e8\uff0c\u770b\u770b\u662f\u5426\u80fd\u4e00\u76f4\u548c\u7b2cj\u4e2a\u5355\u8bcd\u7684\u5bf9\u5e94\u5b57\u6bcd\u76f8\u540c\u3002\u5982\u679c\u6700\u540e\u53d1\u73b0\u5408\u6cd5\uff0c\u679c\u65adbreak\uff0c\u56e0\u4e3a\u5df2\u7ecf\u627e\u5230\u6700\u77ed\u91cd\u53e0\u90e8\u5206\u5566\u3002\n\n\u8c28\u4ee5\u6b64\u9898\u89e3\u5411\u6d1b\u8c37\u4ee5\u53ca\u4e24\u4f4d\u9547\u8c37\u7ba1\u7406\u5458\u81f4\u656c\uff0c\u5e76\u5411\u5404\u4f4d\u673a\u60e8\u53d7\u5bb3\u8005\u8868\u793a\u6df1\u5207\u540c\u60c5\uff0c\u4ee5\u53ca\u5bf9\u4e0d\u8ba4\u8bc6\u6211\u7684\u6d1b\u8c37\u8457\u540d\u9e2d\u5b50\u7684%%%%%\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n;\nstring s[22];\nchar t;\nbool a[22][22];\nint flag[22];//\u7528\u6765\u6807\u8bb0\u5f53\u524d\u5355\u8bcd\u5df2\u7ecf\u88ab\u7528\u4e86\u51e0\u6b21\nint l[22],ans=-1,chonghe=0,chong[22][22];//chong[i][j]\u8868\u793a\u7b2ci\u4e2a\u5355\u8bcd\u5230\nint icount()//         \u7b2cj\u4e2a\u5355\u8bcd\u7684\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\uff08\u5982\u679c\u53ef\u4ee5\u63a5\u9f99\u7684\u8bdd\uff09\n{\n\tint sum=0;\n\tfor(int i=1;i<=n;i++)//\u8ba1\u7b97\u603b\u957f\u5ea6\n\t{\n\t\tif(flag[i]!=0)\n\t\t{\n\t\t\tsum+=l[i]*flag[i];\n\t\t}\n\t}\n\tsum-=chonghe;//chonghe\u4ee3\u8868\u8fd9\u6761\u9f99\u7684\u603b\u5171\u91cd\u53e0\u957f\u5ea6\n\treturn sum;\n}\nvoid f(int x)\n{\n\tbool flag2=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[x][i]==1&&flag[i]<=1)\n\t\t{\n\t\t\tflag[i]++;\n\t\t\tflag2=1;\n\t\t\tchonghe+=chong[x][i];\n\t\t\tf(i);\n\t\t\tchonghe-=chong[x][i];\n\t\t\tflag[i]--;\n\t\t}\n\t}\n\tif(flag2==0)//\u6ca1\u6709\u53ef\u4ee5\u6307\u5411\u7684\u70b9\u4e86\uff0c\u8fd9\u6761\u9f99\u5230\u5934\n\t{\n\t\tans=max(ans,icount());\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>s[i];\n\t\tl[i]=s[i].length();\n\t}\n\tcin>>t;\n\tfor(int i=1;i<=n;i++)//\u5047\u8bbet\u662f\u7b2cn+1\u4e2a\u5355\u8bcd\uff0c\u5e76\u4e14\u662f\u552f\u4e00\u4e00\u4e2a\u53ef\u4ee5\u88ab\n\t{                    //             \u5305\u62ec\u7684\u5355\u8bcd\n\t\tif(s[i][0]==t) \n\t\t{\n\t\t\ta[n+1][i]=1;\n\t\t}\n    }\n\tfor(int i=1;i<=n;i++) //\u6211\u592a\u5f31\u4e86\uff0c\u53ea\u4f1a\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tfor(int ii=s[i].length()-1;ii>=0;ii--)   \n\t\t\t{\n\t\t\t\tbool flag2=0;\n\t\t\t\tif(s[i][ii]==s[j][0])\n\t\t\t\t{\n\t\t\t\t\tfor(int i2=ii;i2<s[i].length();i2++)           \n\t\t\t\t\t{\n\t\t\t\t\t\tif(s[i][i2]!=s[j][i2-ii]) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(i2==s[i].length()-1) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(i2-ii!=s[j].length()-1) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ta[i][j]=1;\n\t\t\t\t\t\t\t\tflag2=1;\n\t\t\t\t\t\t\t\tchong[i][j]=i2-ii+1; \n\t\t\t\t\t\t\t}\n\t\t                    break;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(flag2==1)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t} \n\t\t}\n\t} \n\tfor(int i=1;i<=n;i++)//\u5bfb\u627e\u9f99\u5934\uff0c\u4ece\u9f99\u5934\u5f00\u59cb\u904d\u5386\n\t{\n\t\tif(a[n+1][i]==1)\n\t\t{\n\t\t\tflag[i]++;\n\t\t\tf(i);\n\t\t\tflag[i]--;\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;//\u60c5\u4e0d\u81ea\u7981\u5730\uff1a\u201cAC\u9e2d\u201d\n}\n```\n\n",
        "postTime": 1569665761,
        "uid": 96940,
        "name": "\u89c2\u661f\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1ahttps://www.luogu.org/problem/P1019\n\n## \u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\u5355\u8bcd\u63a5\u9f99\u662f\u4e00\u4e2a\u4e0e\u6211\u4eec\u7ecf\u5e38\u73a9\u7684\u6210\u8bed\u63a5\u9f99\u76f8\u7c7b\u4f3c\u7684\u6e38\u620f\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u77e5\u4e00\u7ec4\u5355\u8bcd\uff0c\u4e14\u7ed9\u5b9a\u4e00\u4e2a\u5f00\u5934\u7684\u5b57\u6bcd\uff0c\u8981\u6c42\u51fa\u4ee5\u8fd9\u4e2a\u5b57\u6bcd\u5f00\u5934\u7684\u6700\u957f\u7684\u201c\u9f99\u201d\uff08\u6bcf\u4e2a\u5355\u8bcd\u90fd\u6700\u591a\u5728\u201c\u9f99\u201d\u4e2d\u51fa\u73b0\u4e24\u6b21\uff09\uff0c\u5728\u4e24\u4e2a\u5355\u8bcd\u76f8\u8fde\u65f6\uff0c\u5176\u91cd\u5408\u90e8\u5206\u5408\u4e3a\u4e00\u90e8\u5206\uff0c\u4f8b\u5982 beastbeast\u548castonishastonish\uff0c\u5982\u679c\u63a5\u6210\u4e00\u6761\u9f99\u5219\u53d8\u4e3abeastonishbeastonish\uff0c\u53e6\u5916\u76f8\u90bb\u7684\u4e24\u90e8\u5206\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb\uff0c\u4f8b\u5982atat \u548c atideatide \u95f4\u4e0d\u80fd\u76f8\u8fde\u3002\n\n## \u3010\u8f93\u5165\u683c\u5f0f\u3011\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u6574\u6570nn (n \\le 20n\u226420)\u8868\u793a\u5355\u8bcd\u6570\uff0c\u4ee5\u4e0bnn \u884c\u6bcf\u884c\u6709\u4e00\u4e2a\u5355\u8bcd\uff0c\u8f93\u5165\u7684\u6700\u540e\u4e00\u884c\u4e3a\u4e00\u4e2a\u5355\u4e2a\u5b57\u7b26\uff0c\u8868\u793a\u201c\u9f99\u201d\u5f00\u5934\u7684\u5b57\u6bcd\u3002\u4f60\u53ef\u4ee5\u5047\u5b9a\u4ee5\u6b64\u5b57\u6bcd\u5f00\u5934\u7684\u201c\u9f99\u201d\u4e00\u5b9a\u5b58\u5728\u3002\n\n## \u3010\u8f93\u51fa\u683c\u5f0f\u3011\n\u53ea\u9700\u8f93\u51fa\u4ee5\u6b64\u5b57\u6bcd\u5f00\u5934\u7684\u6700\u957f\u7684\u201c\u9f99\u201d\u7684\u957f\u5ea6\u3002\n\n## \u3010\u89e3\u9898\u601d\u8def\u3011\n\u8fd9\u9898\u4e4b\u524d\u6211\u5728vj\u4e0a\u505a\u8fc7\u4e00\u6b21\uff0c\u5f53\u65f6\u662f\u4e00\u77e5\u534a\u89e3\uff0c\u6ca1\u60f3\u5230\u8fd9\u6b21\u53c8\u78b0\u4e0a\u4e86\uff0c\u6211\u8fd8\u662f\u4e0d\u4f1a\uff08\u3002\u3002\u3002\u3002\uff09\uff0c\u53bb\u770b\u4e86\u4e00\u904d\u6211\u5f53\u521d\u7684AC\u4ee3\u7801\uff0c\u5f53\u65f6\u7528\u4e86\u4e00\u4e2astring\u91cc\u7684substr\u51fd\u6570\uff0c\u8fd9\u6b21\u6211\u60f3\u7740\u7528char\u505a\u505a\u8bd5\u8bd5\uff0c\u4e00\u505a\u5c31\u662f\u4e00\u5c0f\u65f6\u3002\u3002\u3002\n\n\u9898\u76ee\u610f\u601d\u5f88\u597d\u7406\u89e3\uff0c\u8fd9\u9898\u7684\u5173\u952e\u5176\u5b9e\u5e76\u4e0d\u5728\u4e8edfs\uff0c\u800c\u662f\u5728\u4e8e\u5982\u4f55\u67e5\u627e\u4e00\u4e2a\u540e\u7f00\u4e0e\u53e6\u4e00\u4e2a\u524d\u7f00\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u6700\u5c0f\u91cd\u53e0\u957f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u76f4\u63a5\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5f80\u524d\u904d\u5386\uff0c\u6307\u9488\u6bcf\u5f80\u524d\u79fb\u52a8\u4e00\u6b21\u5c31\u5c06\u5f53\u524d\u6307\u9488\uff08\u6307\u5411\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u672b\u5c3e\uff0c\u4ee5\u4e0b\u7b80\u79f0\u6307\u94881\uff09\u6240\u6307\u5411\u7684\u5b57\u7b26\u4e0e\u53e6\u4e00\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u6307\u9488\uff08\u6307\u94882\uff09\u76f8\u6bd4\uff0c\u5982\u679c\u76f8\u540c\uff0c\u5219\u4f7f\u4e24\u4e2a\u6307\u9488\u5206\u522b\u540e\u79fb\uff0c\u5982\u679c\u6307\u94881\u6700\u540e\u80fd\u591f\u79fb\u52a8\u5230\u672b\u5c3e\u4f4d\u7f6e\uff0c\u5373\u627e\u5230\u4e86\u6700\u5c0f\u91cd\u53e0\u957f\u5ea6\u3002\n\n\u4e0e\u5904\u7406\u597d\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u91cd\u53e0\u957f\u5ea6\u540e\uff08\u4e8b\u5b9e\u4e0a\uff0c\u9884\u5904\u7406\u597d\u7684\u662f\u6700\u5927\u7684\u589e\u52a0\u957f\u5ea6\uff0c\u5373\u5b57\u7b26\u4e322\u7684\u957f\u5ea6\u51cf\u53bb\u6700\u5c0f\u91cd\u53e0\u957f\u5ea6\uff09\uff0c\u8fdb\u884cdfs\uff08\u8fd9\u91cc\u6211\u4eec\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u653e\u9884\u5904\u7406\u597d\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5176\u4e24\u4e2a\u7ef4\u5ea6\u5206\u522b\u4ee3\u8868\u5b57\u7b26\u4e321\u548c\u5b57\u7b26\u4e322\u7684\u7f16\u53f7\uff0c\u5176\u503c\u8868\u793a\u5c06\u5b57\u7b26\u4e322\u8fde\u5230\u5b57\u7b26\u4e321\u540e\u7684\u589e\u52a0\u957f\u5ea6\uff09\uff0c\u5982\u679c\u6570\u7ec4\u503c\u4e0d\u4e3a0\uff0c\u5219\u4f7f\u5df2\u77e5\u957f\u5ea6\u52a0\u4e0a\u6570\u7ec4\u503c\uff0c\u5e76\u4e0eans\u53d8\u91cf\u6bd4\u8f83\u53d6\u6700\u5927\u503c\u3002\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0e\u5e38\u89c4\u7684dfs\u4e0d\u540c\uff0c\u8fd9\u9898\u8bf4\u4e00\u4e2a\u5355\u8bcd\u53ef\u4ee5\u7528\u4e24\u6b21\uff0c\u90a3\u4e48vis\u6570\u7ec4\u5fc5\u987b\u4e3aint\u578b\u4e14\u521d\u59cb\u5316\u4e3a0\u3002\n\n## \u3010AC\u4ee3\u7801\u3011\n```cpp\n#include <vector>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint mark[21][21];  //\u8bb0\u5f55\u589e\u52a0\u957f\u5ea6\nchar s[21][100];  //\u5b58\u653e\u5b57\u7b26\u4e32\nint vis[21];   //\u8bb0\u5f55\u5355\u8bcd\u4f7f\u7528\u6b21\u6570\nint len[30];   //\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u62fc\u63a5\u5355\u8bcd\u7684\u7f16\u53f7\nint ans = 0;  //\u8bb0\u5f55\u7b54\u6848\nint ll = 0;  //\u8bb0\u5f55\u5404\u4e2a\u957f\u4e32\u7684\u957f\u5ea6\nint n;\nint get(int x, int y)\n{\n\tint l = 0;  //\u6307\u94882\n\tint flag = 1;\n\tint l1 = strlen(s[x]);\n\tint l2 = strlen(s[y]);\n\tfor (int i = l1 - 1; i > 0; i--)  //\u4ece\u540e\u5f80\u524d\u904d\u5386\n\t{\n\t\tfor (int j = i; j < l1; j++)  //\u4ece\u6307\u94881\u5f80\u540e\u904d\u5386\u5e76\u4e0e\u6307\u94882\u6bd4\u8f83\n\t\t{\n\t\t\tif (s[x][j] != s[y][l++]) //\u5982\u679c\u6307\u94881\u4e0e\u6307\u94882\u6240\u6307\u5b57\u6bcd\u4e0d\u540c\uff0cbreak\n\t\t\t{\n\t\t\t\tflag = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag)  //\u5982\u679c\u6307\u94881\u6210\u529f\u904d\u5386\u81f3\u672b\u5c3e\uff0c\u8fd4\u56del2-l\uff08\u601d\u8003\u4e3a\u4ec0\u4e48\uff09\n\t\t\treturn l2 - l;\n\t\tl = 0;  //\u5426\u5219\u7ee7\u7eed\u904d\u5386\u5e76\u8fd8\u539f\u6307\u94882\n\t\tflag = 1;\n\t}\n\treturn 0; //\u5982\u679c\u904d\u5386\u5b8c\u4e86\u4e5f\u6ca1\u627e\u5230\u8bf4\u660e\u5b57\u7b26\u4e321,2\u5e76\u4e0d\u80fd\u8fde\u63a5\uff0c\u8fd4\u56de0\n}\nvoid dfs(int x)  //\u5e38\u89c4dfs\n{\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (mark[len[x]][i] && vis[i] < 2)  //\u5982\u679c\u7f16\u53f7\u4e3alen[x]\u7684\u5b57\u7b26\u4e32\u4e0ei\u7684\u5b57\u7b26\u4e32\u80fd\u8fde\u63a5\uff0c\u4e14i\u4f7f\u7528\u6b21\u6570\u5c0f\u4e8e2\uff0c\u8bb0\u5f55\u4e0b\u6765\n\t\t{\n\t\t\tvis[i]++;\n\t\t\tlen[x + 1] = i; //\u4e0b\u4e00\u4e2a\u62fc\u63a5\u7684\u5b57\u7b26\u4e32\u7f16\u53f7\u4e3ai\n\t\t\tll += mark[len[x]][i]; //\u603b\u957f\u5ea6\u52a0\u4e0a\u53ef\u589e\u52a0\u957f\u5ea6\n\t\t\tans = max(ans, ll);  //\u5c06\u603b\u957f\u5ea6\u4e0e\u4e0a\u4e00\u6b21ans\u6bd4\u8f83\u53d6\u6700\u5927\u503c\n\t\t\tdfs(x + 1);\n\t\t\tll -= mark[len[x]][i];  //\u56de\u6eaf\u64cd\u4f5c\n\t\t\tvis[i]--;\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\" %s\", s[i]);\n\t}\n\tscanf(\" %s\", s[0]);\n\tfor (int i = 1; i <= n; i++)  //\u627e\u5230\u80fd\u4f5c\u4e3a\u9996\u4e2a\u5355\u8bcd\u7684\u5b57\u7b26\u4e32\n\t{\n\t\tif (s[i][0] == s[0][0])\n\t\t{\n\t\t\tmark[0][i] = strlen(s[i]);  //\u5c060\u4e0ei\u76f8\u8fde\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)  //\u4e24\u4e24\u5904\u7406\u5b57\u7b26\u4e32\n\t{\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tmark[i][j] = get(i, j);\n\t\t}\n\t}\n\tdfs(0);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1566912588,
        "uid": 226316,
        "name": "YZL11111",
        "ccfLevel": 0,
        "title": "P1019 \u5355\u8bcd\u63a5\u9f99 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "```cpp\n\n//#define DEBUG   \t\t//\u5b8f\uff0c\u7528\u6765\u63a7\u5236\u662f\u5426\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nvector<string> words;\t //\u7528\u6765\u5b58\u50a8\u8f93\u5165\u7684\u5355\u8bcd\nint visited[25];\t\t //\u7528\u6765\u6807\u8bb0\u5f53\u524d\u5355\u8bcd\u662f\u5426\u53ef\u7528\uff0c\u9898\u76ee\u8981\u6c42\u6700\u591a\u7528\u4e24\u6b21\nstring head;\t\t\t //\u9f99\u5934\u5b57\u6bcd\nint n;\t\t\t\t\t //\u5355\u8bcd\u603b\u6570\nint ans;\t\t\t   //\u7b54\u6848\n\n//modify\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5224\u65ad\u662f\u5426\u6709\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u5982\u679c\u6709\u5219\u622a\u53d6\u5e76\u8fd4\u56detrue\n//\u4e8b\u5b9e\u4e0a\u6309\u7167\u6211\u8fd9\u6837\u5012\u6570\u6765\u770b\u540e\u7f00\u548c\u524d\u7f00\u662f\u5426\u76f8\u540c\u7684\u8bdd\uff0c\u9047\u5230\u8fd9\u6837\u7684\u60c5\u5f62\n//class \u548c ssfd\uff0c\u78b0\u5230\u7b2c\u4e00\u4e2as\u5c31break\u6389\u4e86\uff0c\u6b64\u65f6\u5408\u5e76\u540e\u7b2c\u4e8c\u4e2as\u8fd8\u4f1a\u4fdd\u7559\n//\u8fd9\u6837\u5904\u7406\u80fd\u83b7\u5f97\u5b57\u7b26\u4e32\u7684\u6700\u5927\u957f\u5ea6\n\nbool modify(string& head, string& tail, string& extra) {\n    int i;\n    int hsize = strlen(head.c_str());\n    int tsize = strlen(tail.c_str());\n    for (i = 1; i < min(hsize, tsize); i++) {\n        if (head.substr(hsize - i, hsize) == tail.substr(0, i)) {\n            break;\n        }\n    }\n    if (i == min(hsize, tsize)) {\n        return false;\n    } else {\n        extra = tail.substr(i, tsize);\n        head = head + extra;\n        return true;\n    }\n}\n\n//\u8fd9\u4e2a\u51fd\u6570\u662fdfs\u540e\u6062\u590d\u73b0\u573a\u4f7f\u7528\u7684\uff0c\u8fd9\u91cc\u5229\u7528extra\u53c2\u6570\u7684\u4f20\u9012\u907f\u514d\u91cd\u590d\u5224\u65ad\n\nvoid unmodify(string& head, string& tail, string& extra) {\n    head = head.substr(0, head.length() - extra.length());\n#ifdef DEBUG\n    cerr << \"after unmodify : \" << head << endl;\n#endif\n}\n\n\n//\u6df1\u5ea6\u4f18\u5148\n\nvoid dfs(string head) {\n#ifdef DEBUG\n    cerr << \"dfs this : \" << head << endl;\n#endif\n    for (int i = 0; i < n; i++) {\n        if (visited[i] < 2) {\t\t\t//\u5224\u65ad\u5f53\u524d\u5355\u8bcd\u662f\u5426\u53ef\u7528\n            string tail = words[i];\n            if (head.length() == 1) {\t//\u6ce8\u610f\u9f99\u5934\u5f97\u7279\u6b8a\u5224\u65ad\n                if (tail[0] == head[0]) {\n                    head = tail;\n#ifdef DEBUG\n                    cerr << \"after modify : \" << head << endl;\n#endif\n                    if (head.length() >= ans) {\n                        ans = head.length();\n                    }\n                    visited[i]++;\n                    dfs(head);\n                    visited[i]--;\n                    head = tail[0];\n#ifdef DEBUG\n                    cerr << \"after unmodify : \" << head << endl;\n#endif\n                }\n\n            } else if (head.length() > 1) {\n                string extra = \"\";\n                if (modify(head, tail, extra)) {\n                    if (head.length() >= ans) {\n                        ans = head.length();\n                    }\n                    visited[i]++;\n                    dfs(head);\n                    visited[i]--;\n                    unmodify(head, tail, extra);\n                }\n            }\n        }\n    }\n}\nint main() {\n    cin >> n;\n    //vector\u521d\u59cb\u5bb9\u91cf\u4e3a0\uff0c\u5f97push\n    for (int i = 0; i < n; i++) {\n        string word;\n        cin >> word;\n        words.push_back(word);\n    }\n    cin >> head;\n    dfs(head);\n    cout << ans;\n    return 0;\n}\n```\n",
        "postTime": 1562858168,
        "uid": 91885,
        "name": "lanceloo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u9898\u76ee\u662f\u201c\u5355\u8bcd\u63a5\u9f99\u201d\u3002\u5355\u8bcd\u63a5\u9f99\u7684\u7279\u70b9\u5c31\u662f\u4e00\u4e2a\u8bcd\u4e0e\u53e6\u4e00\u4e2a\u548c\u81ea\u5df1\u6709\u5173\u7684\u8bcd\u7ec4\u5408\uff08\u672c\u9898\u4e2d\u4e3a\u6709\u76f8\u8fde\u91cd\u5408\u90e8\u5206\u7684\u4e24\u4e2a\u8bcd\uff09\uff0c\u4e8e\u662f\u6211\u60f3\u5230\u4e86**\u5171\u73b0\u77e9\u9635**\u3002\n\n\u5171\u73b0\u77e9\u9635\u662f\u4e00\u79cd\u8bcd\u5411\u91cf\uff0c\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u88ab\u7528\u4e8e\u7edf\u8ba1\u4e8b\u5148\u6307\u5b9a\u5927\u5c0f\u7684\u7a97\u53e3\u5185\u7684\u8bcd\u7684\u5171\u73b0\u6b21\u6570\uff0c\u4ee5\u8fd9\u4e2a\u8bcd\u5468\u8fb9\u7684\u5171\u73b0\u8bcd\u7684\u6b21\u6570\u3002\u8fd9\u4e2a\u9898\u76ee\u6211\u4eec\u4e0d\u7528\u5171\u73b0\u77e9\u9635\u6765\u7edf\u8ba1\u5171\u73b0\u6b21\u6570\uff0c\u800c\u662f\u6839\u636e\u9898\u76ee\u7ed9\u5b9a\u7684\u89c4\u5219\u751f\u6210\u4e00\u4e2a\u5171\u73b0\u77e9\u9635\uff0c\u7136\u540e\u5bf9\u5171\u73b0\u77e9\u9635\u8fdb\u884c\u904d\u5386\u627e\u51fa\u6700\u4f18\u89e3\u3002\n\n\u6ce8\uff1a\u201c\u8bcd\u5411\u91cf\u201d\u987e\u540d\u601d\u4e49\u662f\"**\u7531\u4e00\u4e2a\u8bcd\u6307\u5411\u53e6\u4e00\u4e2a\u8bcd**\"\uff0c\u5728\u672c\u9898\u4e2d\uff0c\u8981\u5bf9\u5355\u8bcd\u8fdb\u884c\u201c\u63a5\u9f99\u201d\uff0c\u4e5f\u662f\u5982\u6b64\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/58752.png)\n\n\u5982\u679c\u628a\u9898\u76ee\u4e2d\u7684\u6570\u636e\u7528\u5171\u73b0\u77e9\u9635\u8868\u793a\uff0c\u5927\u6982\u5982\u4e0a\u56fe\u6240\u793a(\u5e76\u6ca1\u6709\u586b\u6570\u636e)\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u751f\u6210\u4e00\u4e2a\u5171\u73b0\u77e9\u9635\u5c31\u662f\u628a\u6240\u6709\u8bcd\u50cf\u4e0a\u56fe\u90a3\u6837**\u5217\u4e00\u4e2a\u8868**\uff0c\u7136\u540e\u5728\u683c\u5b50\u4e2d\u8bb0\u5f55\u6240\u5c5e\u7684\u4e24\u4e2a\u8bcd\u7684\u5173\u7cfb\u3002\n\n\u672c\u9898\u4e2d\uff0c\u751f\u6210\u4e00\u4e2a\u57fa\u7840\u7684\u5171\u73b0\u77e9\u9635\u7684\u65b9\u6cd5\u5373\u679a\u4e3e\u6240\u6709\u8bcd\u4e0e\u8bcd\u7684\u4e24\u4e24\u7ec4\u5408\uff0c\u5e76\u8bb0\u5f55\u5b83\u4eec\u7684 **\u76f8\u540c\u5e8f\u5217\u957f\u5ea6(\u4e5f\u5c31\u662f\u91cd\u5408\u90e8\u5206\u957f\u5ea6)** \u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u8bcd\u4e4b\u95f4\u5982\u679c\u6709\u591a\u4e2a\u76f8\u540c\u5e8f\u5217\uff08\u5982\u201cahahahah\u201d\u548c\u201cahah\u201d\uff09\uff0c\u5f88\u660e\u663e**\u91cd\u5408\u90e8\u5206\u8d8a\u77ed\uff0c\u62fc\u51fa\u6765\u7684\u8bcd\u5c31\u8d8a\u957f**\u3002\n\n\u9898\u4e2d\u8981\u6c42\u8f93\u51fa\u4ee5\u65e2\u5b9a\u5b57\u6bcd\u5f00\u5934\u7684\u6700\u957f\u7684\u201c\u9f99\u201d\u7684\u957f\u5ea6\uff0c\u5e76\u6ca1\u6709\u8981\u6c42\u8f93\u51fa\u8fd9\u4e2a\u9f99\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u6211\u4eec\u53ea\u9700\u8981**\u7d2f\u52a0\u8bcd\u7ec4\u5408\u540e\u7684\u957f\u5ea6\u76f8\u5bf9\u4e8e\u539f\u957f\u5ea6\u7684\u589e\u91cf**\uff08**\u5373\u8fd9\u4e2a\u8bcd\u7684\u957f\u5ea6\u548c\u5176\u4e0e\u88ab\u7ec4\u5408\u8bcd\u7684\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\u7684\u5dee**\uff09\uff0c\u5e76\u5728\u6bcf\u6b21\u8fed\u4ee3\u90fd\u8bb0\u5f55\u603b\u957f\u5ea6\u6700\u5927\u503c\uff0c\u4fbf\u53ef\u5f97\u51fa\u7b54\u6848\u3002\n\n## \u8bbe\u8ba1\u4e00\u4e2a\u5b9e\u7528\u4e8e\u672c\u9898\u7684\u5171\u73b0\u77e9\u9635\n\u6211\u4eec\u7684\u76ee\u6807\u662f\uff0c\u7528\u5171\u73b0\u77e9\u9635\u8868\u793a\u51fa\u6bcf\u4e2a\u8bcd\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u5173\u7cfb**\u904d\u5386\u6240\u6709\u8bcd\u4e0e\u8bcd\u95f4\u7684\u5408\u6cd5\u8def\u5f84\uff0c\u53d6\u6700\u957f\u7684\u90a3\u6761**\u3002\u8fd9\u6837\u4e00\u770b\uff0c\u672c\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u975e\u5e38\u7b80\u5355\u7684\u641c\u7d22\u95ee\u9898\u3002\n\n\u800c\u751f\u6210\u5171\u73b0\u77e9\u9635\u7684\u65b9\u6cd5\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u679a\u4e3e\u6240\u6709\u7684\u4e24\u4e24\u7ec4\u5408\uff0c\u7528\u4e24\u4e2a\u5faa\u73af\u7684\u5d4c\u5957\u5c31\u641e\u5b9a\uff0c\u7136\u540e\u8bb0\u5f55\u5b83\u4eec\u7684\u5173\u7cfb\u3002~~\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u8bb0\u5f55\u4ec0\u4e48\u624d\u6709\u5229\u4e8e\u89e3\u51fa\u7b54\u6848\u5462~~ \u524d\u9762\u6211\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff0c\u8bb0\u5f55\u5b83\u4eec\u7684\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u65e2\u5b9a\u5f00\u5934\u5b57\u6bcd\u7684\u9f99\u7684\u6700\u5927\u957f\u5ea6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u6240\u6709\u8bcd\u4e0e\u8bcd\u95f4\u7684\u5408\u6cd5\u8def\u5f84\u65f6\u8bb0\u5f55\u603b\u957f\u5ea6\u3002\u800c\u957f\u5ea6\u589e\u52a0\u7684\u91cf\u5c31\u662f\u8fd9\u4e2a\u8bcd\u4e0e\u5176\u88ab\u7ec4\u5408\u8bcd\u7684\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\u7684\u5dee\u3002\uff08\u5982\u679c\u6ca1\u7406\u89e3\u7684\u8bdd\u628a\u524d\u9762\u7684\u5185\u5bb9\u591a\u8bfb\u51e0\u904d\uff09\u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u5728\u751f\u6210\u5171\u73b0\u77e9\u9635\u65f6\u5c31\u76f4\u63a5\u8ba1\u7b97\u8fd9\u4e2a\u8bcd\u4e0e\u5176\u88ab\u7ec4\u5408\u8bcd\u7684\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\u7684\u5dee\uff0c\u653e\u54ea\u8ba1\u7b97\u65e0\u6240\u8c13\u3002\n\n\u6211\u7684\u4ee3\u7801\u4e2d\u5982\u4f55\u5b58\u653e\u5171\u73b0\u77e9\u9635\uff1a\n```cpp\nstruct Co_occurrence{\n\tchar num=-1;//\u50a8\u5b58\u4e0b\u6807 \n\tshort col[21]={0};//\u8bb0\u5f55\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\n\tchar key[21]={0};//\u8bb0\u5f55\u5171\u73b0\u8bcd\u4e0b\u6807 \n}comt[21];//\u5171\u73b0\u77e9\u9635 \n```\ncomt\u8868\u793a\u4e86\u6bcf\u4e2a\u8bcd\uff0ccomt.key\u8868\u793a\u4e0e\u4e4b\u7ec4\u5408\u7684\u8bcd\u7684\u4e0b\u6807\uff08\u53ef\u4ee5\u4e0e\u4e4b\u7ec4\u5408\u7684\u8bcd\u6211\u4eec\u7edf\u4e00\u79f0\u4e3a\u79f0\u4e3a\u5171\u73b0\u8bcd\uff09\u3002comt.col\u8868\u793a\u8fd9\u4e2a\u8bcd\u4e0e\u5171\u73b0\u8bcd\u4e4b\u95f4\u7684\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\u3002\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u628a\u8fd9\u4e2a\u8bcd\u4e0e\u6240\u6709\u8bcd\u7684\u5173\u7cfb\u8bb0\u5f55\u4e0b\u6765\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u5b83\u7684\u5171\u73b0\u8bcd\u3002comt.num\u8868\u793a\u73b0\u5728\u662f\u8981\u8bb0\u5f55\u7b2c\u51e0\u4e2a\u8bcd\uff0c\u4e3acol\uff0ckey\u4e24\u4e2a\u6210\u5458\u63d0\u4f9b\u4e0b\u6807\u3002\n\n\u5728\u6211\u7684\u4ee3\u7801\u4e2dchar word[ ][ ]\u5b58\u653e\u7684\u67d0\u4e2a\u5355\u8bcd\uff0cshort wlen[ ]\u662f\u67d0\u4e2a\u8bcd\u7684\u957f\u5ea6\u3002\u4ee3\u7801\u4e2d\u5168\u90e8\u6570\u7ec4\u4e0b\u6807\u90fd\u4ece0\u5f00\u59cb\u3002\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u751f\u6210\u5171\u73b0\u77e9\u9635\u7684\u4ee3\u7801\uff1a\n```cpp\n\t//\u751f\u6210\u5171\u73b0\u77e9\u9635 \n\tfor(int i=0;i<n;i++){//\u679a\u4e3e\u8981\u5339\u914d\u7684\u8bcd \n\t\t//printf(\"#word:%s\\n\",word[i]);\n\t\tfor(int j=0;j<n;j++){//\u679a\u4e3e\u7528\u4e8e\u5339\u914d\u7684\u8bcd \n\t\t\t//if(j==i) continue;//\u4e0d\u4e0e\u81ea\u5df1\u8fdb\u884c\u5339\u914d... \n\t\t\t//printf(\" compare %s with %s\",word[i],word[j]);\n\t\t\tchar head=-666;\n\t\t\tint l=0;\n\t\t\tfor(;l<wlen[j];l++)//\u53d6\u9996\u76f8\u540c\u5b57\u7b26 \n\t\t\t\tif(word[j][l]==word[i][wlen[i]-1]){\n\t\t\t\t\thead=l-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t//printf(\" (l:%d)\\n\",l);\n\t\t\tif(head==-666) continue;//\u6ca1\u6709\u76f8\u540c\u7684,\u4e0b\u4e00\u4e2a\n\t\t\tif( (l+1==wlen[i]) || (l+1==wlen[j]) ) continue;//\u4e0d\u80fd\u88ab\u6574\u4f53\u5305\u542b \n\t\t\tif (head!=-1){//\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\u5927\u4e8e1 \n\t\t\t\tfor(int k=wlen[i]-2;head>=0;k--){\n\t\t\t\t\tif(word[i][k]==word[j][head])//\u9010\u4e2a\u5339\u914d\u5b57\u7b26 \n\t\t\t\t\t\thead--;\n\t\t\t\t\telse\n\t\t\t\t\t\tgoto out1;//\u5339\u914d\u5931\u8d25,\u8df3\u5230j\u5faa\u73af\u5c3e\u90e8 \n\t\t\t\t}\n\t\t\t\tcomt[i].num++;\n\t\t\t\tcomt[i].col[ comt[i].num ]=l+1;//\u50a8\u5b58\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\n\t\t\t\tcomt[i].key[ comt[i].num ]=j;//\u50a8\u5b58\u5171\u73b0\u8bcd\u4e0b\u6807 \n\t\t\t\t//printf(\"  Successfully comparing %s(in %d)!\\n\",word[j],comt[i].num);\n\t\t\t}\n\t\t\telse{//\u4ec5\u9996\u5c3e\u5b57\u7b26\u5339\u914d \n\t\t\t\t\n\t\t\t\tcomt[i].num++;\n\t\t\t\tcomt[i].col[ comt[i].num ]=1;//\u50a8\u5b58\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\n\t\t\t\tcomt[i].key[ comt[i].num ]=j;//\u50a8\u5b58\u5171\u73b0\u8bcd\u4e0b\u6807\n\t\t\t\t//printf(\"  ~~Successfully comparing %s(in %d)!\\n\",word[j],comt[i].num);\n\t\t\t}\n\t\t\tout1:;\n\t\t}\n\t}\n```\n\n\u8bf4\u4e00\u4e0b\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u51e0\u4e2a\u53d8\u91cf\u7684\u610f\u601d\uff0c\u514d\u5f97~~\u7531\u4e8e\u53d8\u91cf\u540d\u592a\u5e05~~\u96be\u4ee5\u7406\u89e3\u3002\n\nl\u8868\u793a\u7528\u4e8e\u5339\u914d\u7684\u5171\u73b0\u8bcd\u7684\u4e0b\u6807\u6700\u5c0f\u7684\u4e0e\u88ab\u5339\u914d\u8bcd\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u76f8\u540c\u7684\u5b57\u7b26\u7684\u4e0b\u6807\uff0chead=l-1\u8ba1\u7b97\u51fa\u7684\u662f\u7528\u4e8e\u5339\u914d\u7684\u5171\u73b0\u8bcd\u88ab\u5339\u914d\u8bcd\u7684\u90a3\u4e2a\u5df2\u7ecf\u5224\u65ad\u4e86\u76f8\u540c\u7684\u5b57\u6bcd\u4e4b\u524d\u7684\u90a3\u4e00\u4e2a\u5b57\u7b26\u7684\u4e0b\u6807\u3002l+1\u5219\u8ba1\u7b97\u51fa\u4e86\u5171\u73b0\u8bcd\u4e0e\u88ab\u5339\u914d\u8bcd\u7684\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u628a\u6ce8\u91ca\u53bb\u6389\uff0c\u53ef\u4ee5\u8f93\u51fa\u751f\u6210\u5171\u73b0\u77e9\u9635\u7684\u8fc7\u7a0b\uff0c\u6bcf\u4e00\u4e2a\u5173\u952e\u5224\u65ad\u4f1a\u8f93\u51fa\u76f8\u5e94\u4fe1\u606f\u3002\n\n\u5206\u6790\u4e00\u4e0b\u9898\u76ee\u4e2d\u7684\u51e0\u4e2a\u5751\uff1a\n- \u76f8\u90bb\u7684\u4e24\u90e8\u5206\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb\n- \u81ea\u5df1\u53ef\u4ee5\u548c\u81ea\u5df1\u7ec4\u5408(\u7531\u4e8e\u6211\u8bef\u89e3\u4e86\u7b2c\u4e00\u6761\uff0c\u6240\u4ee5\u5f53\u65f6\u4ee5\u4e3a\u81ea\u5df1\u4e0d\u80fd\u548c\u81ea\u5df1\u7ec4\u5408)\n\n\u76f8\u90bb\u7684\u4e24\u90e8\u5206\u4e0d\u80fd\u5b58\u5728\u5305\u542b\u5173\u7cfb\u7684\u610f\u601d\u662f\u7b2c\u4e00\u4e2a\u8bcd\u4e0d\u80fd\u6574\u4f53\u542b\u4e8e\u7b2c\u4e8c\u4e2a\u8bcd\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u8bcd\u4e0d\u80fd\u6574\u4f53\u542b\u4e8e\u7b2c\u4e00\u4e2a\u8bcd\u4e2d\u3002~~\u6211\u5f53\u65f6\u62bd\u98ce\uff0c\u53ea\u8003\u8651\u4e86\u7b2c\u4e00\u4e2a\u8bcd\u4e0d\u80fd\u6574\u4f53\u542b\u4e8e\u7b2c\u4e8c\u4e2a\u8bcd\u4e2d\u3002~~ \u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u89c4\u907f\u5355\u8bcd\u4f7f\u7528\u6b21\u6570\u8ba1\u91cf\u7684\u6b67\u4e49\uff0c\u5982ate\u548cat\u4e24\u4e2a\u5355\u8bcd\uff0cate\u5230\u5e95\u53ea\u662f\u201cate\u201d\u7684\u5355\u72ec\u5b58\u5728\uff0c\u8fd8\u662f\u201cate\u201d\u4e0e\u201cat\u201d\u7684\u7ec4\u5408\u8fd9\u6837\u7684~~\u9b54\u6027~~\u95ee\u9898\u3002\n\n## \u904d\u5386\u5171\u73b0\u77e9\u9635\n\u524d\u9762\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u6211\u4eec\u8981\u904d\u5386\u6240\u6709\u8bcd\u4e0e\u8bcd\u95f4\u7684\u5408\u6cd5\u8def\u5f84\uff0c\u53d6\u6700\u957f\u7684\u90a3\u6761\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528DFS\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n```cpp\nvoid dfs(char key,int deep){\n\t//printf(\"%s \",word[key]);\n\twc[key]++;\n\tif(wc[key]>2) return;\n\tif(deep>max) max=deep;\n\t//printf(\"%d \",deep);\n\tfor(int i=0;i<=comt[key].num;i++){//\u679a\u4e3e\u5171\u73b0\u8bcd \n\t\tif(wc[ comt[key].key[i] ]<=2){//\u6ca1\u6ee1\u4e24\u6b21\u624d\u8bbf\u95ee\n\t\t\tdfs( comt[key].key[i],\n\t\t\tdeep + ( wlen[comt[key].key[i]] - comt[key].col[i] ));\n\t\t\twc[comt[key].key[i]]--;//\u8fd8\u539f\u73b0\u573a\n\t\t}\n\t}\n}\n```\n\nkey\u8868\u793a\u5f53\u524d\u7684\u8bcd\uff0c\u7531\u4e8e\u8fd9\u662f\u5bf9\u5171\u73b0\u77e9\u9635\u7684\u904d\u5386\uff0c\u662f\u4e0e\u4e00\u79cd\u8bcd\u5411\u91cf\u6253\u4ea4\u9053\uff0c\u6240\u4ee5\u80af\u5b9a\u8981\u6709\u4e00\u4e2a\u53c2\u6570\u6765\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u8bcd\u3002deep\u8868\u793a\u9f99\u7684\u957f\u5ea6\u3002wc\u8fd9\u4e2a\u53d8\u91cf\u5b58\u653e\u7684\u662f\u8bcd\u7684\u4f7f\u7528\u6b21\u6570\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u8bf4\u8fc7\u6bcf\u4e2a\u8bcd\u6700\u591a\u53ea\u80fd\u4f7f\u7528\u4e24\u6b21\u3002~~wc\u662fword count\u7684\u7f29\u5199\uff0c\u5e76\u4e0d\u662f\u5367\u69fd\u6216\u8005\u8305\u5751\u3002~~\n\n\u5f88\u660e\u663e\u8fd9\u4e2adfs\u51fd\u6570\u9700\u8981\u9884\u5148\u63d0\u4f9b\u542f\u52a8\u8bcd\uff0c\u624d\u80fd\u8fd0\u4f5c\u3002\u56e0\u4e3a\u9898\u76ee\u4e2d\u63d0\u4f9b\u4e86\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u6240\u4ee5\u6211\u4eec\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u5355\u8bcd\uff0c\u7136\u540e\u518d\u5bf9\u5176\u8fdb\u884cdfs\u3002dfs\u542f\u52a8\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nfor(int i=0;i<n;i++)\n\tif(word[i][0]==start)\n\t\tdfs(i,wlen[i]);\n```\n## \u521d\u5b66\u8005\u53cb\u597d\u8f85\u52a9\n\u8fd9\u4e2a\u6846\u67b6\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u8981\u53d6\u5f97\u9f99\u7684\u5b57\u7b26\u4e32\u5f88\u4e0d\u65b9\u4fbf\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u5b8c\u6574\u7684AC\u4ee3\u7801\uff0c\u628adfs\u51fd\u6570\u7684\u76f8\u5173\u6ce8\u91ca\u53bb\u6389\u4fbf\u53ef\u4ee5\u8f93\u51fa\u9f99\u7684\u5b57\u7b26\u4e32\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<string.h> \n\nchar n;\nchar word[21][800];\nshort wlen[21];\nstruct Co_occurrence{\n\tchar num=-1;//\u50a8\u5b58\u4e0b\u6807 \n\tshort col[21]={0};//\u8bb0\u5f55\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\n\tchar key[21]={0};//\u8bb0\u5f55\u5171\u73b0\u8bcd\u4e0b\u6807 \n}comt[21];//\u5171\u73b0\u77e9\u9635 \nchar wc[21]={0};\nint max=-194250;\nint last=-1;\n\nchar ans[300];\nshort ac=0;\nvoid dfs(char key,int deep,short cd){\n\t//printf(\"%s \",word[key]);\n\twc[key]++;\n\tif(wc[key]>2) return;\n\tif(deep>max) max=deep;\n\t//printf(\"%d \",deep);\n\tif(cd>last){\n\t\tans[ac]=key;\n\t}\n\telse\n\t{\n\t\tans[ac]=key;\n\t\t/*for(int i=0;i<=ac;i++) printf(\"%s \",word[ans[i]]);\n\t\tprintf(\" deep:%d\\n\",deep);*/\n\t}\n\tlast=cd;\n\tfor(int i=0;i<=comt[key].num;i++){//\u679a\u4e3e\u5171\u73b0\u8bcd \n\t\tif(wc[ comt[key].key[i] ]<=2){//\u6ca1\u6ee1\u4e24\u6b21\u624d\u8bbf\u95ee\n\t\t\tac++;\n\t\t\tdfs( comt[key].key[i],\n\t\t\tdeep + ( wlen[comt[key].key[i]] - comt[key].col[i] ) ,cd+1);\n\t\t\twc[comt[key].key[i]]--;ac--;//\u8fd8\u539f\u73b0\u573a\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%s\\n\",word[i]);\n\t\twlen[i]=(short)strlen(word[i]);\n\t}\n\tchar start=0;\n\tstart=getchar();\n\t\n\t//\u751f\u6210\u5171\u73b0\u77e9\u9635 \n\tfor(int i=0;i<n;i++){//\u679a\u4e3e\u8981\u5339\u914d\u7684\u8bcd \n\t\t//printf(\"#word:%s\\n\",word[i]);\n\t\tfor(int j=0;j<n;j++){//\u679a\u4e3e\u7528\u4e8e\u5339\u914d\u7684\u8bcd \n\t\t\t//if(j==i) continue;//\u4e0d\u4e0e\u81ea\u5df1\u8fdb\u884c\u5339\u914d... \n\t\t\t//printf(\" compare %s with %s\",word[i],word[j]);\n\t\t\tchar head=-666;\n\t\t\tint l=0;\n\t\t\tfor(;l<wlen[j];l++)//\u53d6\u9996\u76f8\u540c\u5b57\u7b26 \n\t\t\t\tif(word[j][l]==word[i][wlen[i]-1]){\n\t\t\t\t\thead=l-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t//printf(\" (l:%d)\\n\",l);\n\t\t\tif(head==-666) continue;//\u6ca1\u6709\u76f8\u540c\u7684,\u4e0b\u4e00\u4e2a\n\t\t\tif( (l+1==wlen[i]) || (l+1==wlen[j]) ) continue;//\u4e0d\u80fd\u88ab\u6574\u4f53\u5305\u542b \n\t\t\tif (head!=-1){//\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\u5927\u4e8e1 \n\t\t\t\tfor(int k=wlen[i]-2;head>=0;k--){\n\t\t\t\t\tif(word[i][k]==word[j][head])//\u9010\u4e2a\u5339\u914d\u5b57\u7b26 \n\t\t\t\t\t\thead--;\n\t\t\t\t\telse\n\t\t\t\t\t\tgoto out1;//\u5339\u914d\u5931\u8d25,\u8df3\u5230j\u5faa\u73af\u5c3e\u90e8 \n\t\t\t\t}\n\t\t\t\tcomt[i].num++;\n\t\t\t\tcomt[i].col[ comt[i].num ]=l+1;//\u50a8\u5b58\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\n\t\t\t\tcomt[i].key[ comt[i].num ]=j;//\u50a8\u5b58\u5171\u73b0\u8bcd\u4e0b\u6807 \n\t\t\t\t//printf(\"  Successfully comparing %s(in %d)!\\n\",word[j],comt[i].num);\n\t\t\t}\n\t\t\telse{//\u4ec5\u9996\u5c3e\u5b57\u7b26\u5339\u914d \n\t\t\t\t\n\t\t\t\tcomt[i].num++;\n\t\t\t\tcomt[i].col[ comt[i].num ]=1;//\u50a8\u5b58\u76f8\u540c\u5e8f\u5217\u957f\u5ea6\n\t\t\t\tcomt[i].key[ comt[i].num ]=j;//\u50a8\u5b58\u5171\u73b0\u8bcd\u4e0b\u6807\n\t\t\t\t//printf(\"  ~~Successfully comparing %s(in %d)!\\n\",word[j],comt[i].num);\n\t\t\t}\n\t\t\tout1:;\n\t\t}\n\t}\n\n\t//\u904d\u5386\u5171\u73b0\u77e9\u9635\u53d6\u51fa\u6700\u4f18\u89e3\n\tfor(int i=0;i<n;i++)\n\t\tif(word[i][0]==start){\n\t\t\tdfs(i,wlen[i],0);\n\t\t}\n\t\t\t\n\tprintf(\"%d\",max);\n\treturn 0;\n}\n```\n\n## DP\u65b9\u6cd5\n\u770b\u5230\u5171\u73b0\u77e9\u9635\u7684\u90a3\u4e2a\u8868\u683c\u6709\u6ca1\u6709\u611f\u89c9\u5230\u4ec0\u4e48\uff1f\u5bf9...\u8868\u683c\u6cd5\uff0c\u52a8\u6001\u89c4\u5212\uff01\u8fd9\u4e2a\u9898\u53ef\u4ee5\u628a\u8bcd\u770b\u6210\u7269\u54c1\uff0c\u5176\u957f\u5ea6\u589e\u91cf\u770b\u6210\u4ef7\u503c\u3002\u8fd9\u4e2a\u9898\u5c31\u6210\u4e86\u4e00\u4e2a\u52a8\u6001\u89c4\u5212\u7684\u591a\u91cd\u3001\u4f9d\u8d56\u80cc\u5305\u95ee\u9898\u3002\u8fd9\u6837\u641e\u53cd\u800c\u6709\u70b9\u590d\u6742......~~\u7531\u4e8e\u6211\u592a\u61d2~~\u5c31\u4e0d\u7ed9\u4ee3\u7801\u4e86\u3002\u5982\u679c\u6709\u7a7a\u7684\u8bdd\u6211\u4f1a\u628a\u8fd9\u4e2a\u65b9\u6cd5\u66f4\u65b0\u51fa\u6765\u3002\n\n## \u540e\u8bb0\n\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u4e5f\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u535a\u5ba2\uff0c\u5982\u679c\u6709\u9519\u8bef\u6b22\u8fce\u6307\u51fa\u3002\u672c\u9898\u89e3\u7684\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u683c\u5f0f\uff1a\u5355\u884c\u6ce8\u91ca\u8868\u793a\u6ce8\u91ca\u7684\u5176\u4e0b\u7684\u4ee3\u7801\u3002\u76f4\u63a5\u5728\u4ee3\u7801\u540e\u9762\u7684\u6ce8\u91ca\u8868\u793a\u6ce8\u91ca\u7684\u8fd9\u4e00\u884c\u4ee3\u7801\u3002",
        "postTime": 1557914959,
        "uid": 131970,
        "name": "HeTaiyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "### \u5c31\u50cf\u4e00\u697c\u8bf4\u7684\uff0c\u8fd9\u9898\u6709\u8bb8\u591a\u5751\u70b9   \n$1.$ \u4e24\u4e2a\u5355\u8bcd\u5408\u5e76\u65f6\uff0c\u5408\u5e76\u90e8\u5206\u53d6\u7684\u662f\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\n\n$2.$ \u6bcf\u4e2a\u5355\u8bcd\u6700\u591a\u51fa\u73b0\u4e24\u6b21.   \n\n$3.$ \u53ef\u4ee5\u4e0d\u6309\u8f93\u5165\u987a\u5e8f\u63a5\u9f99   \n\n$4.$ \u53ef\u4ee5\u81ea\u5df1\u63a5\u81ea\u5df1   \n\n\u89e3\u9898\u601d\u8def \uff1a \n\n1. \u521d\u59cb\u5316$a$\u6570\u7ec4,$a_{i,j}$\u8868\u793a\u7b2c$i$\u4e2a\u5355\u8bcd\u4e0e\u7b2c$j$\u4e2a\u5355\u8bcd\u7684\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\uff0c\u5982\u4f55\u5b9e\u73b0\u770b\u4ee3\u7801   \n\n2. \u641c\u7d22DFS\uff0c\u67e5\u8be2\u9f99\u7684\u6700\u957f\u957f\u5ea6   \n\n\u4ecb\u7ecd\u51e0\u79cd$string$\u51fd\u6570\u7528\u6cd5\uff1a\n\n```cpp\n    /* \u4ee5\u4e0ba\uff0cb\u4e3a\u5b57\u7b26\u4e32\uff08string\u7c7b\u578b\uff09 */\n\n    a.erase(x) //\u5c06a\u4fdd\u7559\u524dx\u4f4d\uff0c\u540e\u8fb9\u5220\u9664\n\n    reverse(a.begin(),a.end()) //\u53cd\u8f6ca\n\n    b = a.substr(start,length) //\u5c06\u5b57\u7b26\u4e32a\u7684\u4ecestart\u4f4d\u5f00\u59cb\uff0c\u957f\u5ea6\u4e3alength\u7684\u5b50\u4e32\u622a\u53d6\uff0c\u8d4b\u5230b\u4e0a\n\n    a.find(b) //\u5728a\u4e2d\u67e5\u627eb\uff0c\u8fd4\u56de\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u82e5\u6ca1\u6709\uff0c\u8fd4\u56destring :: npos\n```\n\n\u5949\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint a[21][21];\nint used[21];\nint n,ans,ans1;\nchar c;\nstring s[21];\ninline void dfs (int x)\n{\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tif (used[i] > 1 || !a[x][i])\n\t\t    continue;\n\t\tused[i]++,ans1 += s[i].size() - a[x][i],dfs(i),ans1 -= s[i].size() - a[x][i],used[i]--;      //DFS,\u56de\u6eaf\n\t}\n\tans = max(ans,ans1);   //\u9f99\u63a5\u5b8c\u4e86\uff0c\u53d6\u957f\u5ea6\u6700\u5927\u503c\n\treturn;\n}\nint main()\n{\n\tios :: sync_with_stdio (false);\n\tcin.tie(0);\n\tcin >> n;\n\tfor (int i = 1;i <= n;i++)\n\t    cin >> s[i];\n\tcin >> c;\n\tfor (int i = 1;i <= n;i++)\n\t    for (int j = 1;j <= n;j++)\n\t    {\n\t        int li = s[i].size(),lj = s[j].size();\n\t        for (int k = 1;k < min(li,lj);k++)              //\u679a\u4e3e\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\n\t        {\n\t        \tstring x = s[i].substr(li - k,k),y = s[j].substr(0,k);           //\u622a\u53d6\u91cd\u53e0\u90e8\u5206\n\t        \tif (x == y)\n\t        \t{\n\t        \t\ta[i][j] = max(a[i][j],k);\n\t        \t\tbreak;\n\t\t\t\t}            //\u5224\u65ad\u662f\u5426\u4e3a\u91cd\u53e0\n\t\t\t}\n\t\t}          //a\u6570\u7ec4\u7684\u521d\u59cb\u5316\n\tfor (int i = 1;i <= n;i++)\n\t\tif (s[i][0] == c)\n\t\t\tused[i]++,ans1 = s[i].size(),dfs(i),used[i] = 0;             //\u627e\u5230\u53ef\u4ee5\u63a5\u7684\uff0c\u5f00\u59cbDFS\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1550498368,
        "uid": 108879,
        "name": "dinghongyu",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u5728\u51e0\u5468\u524d\u7b2c\u4e00\u6b21\u770b\u5230\u8fd9\u4e00\u9898\u7684\u65f6\u5019,\u8fd8\u662f\u6beb\u65e0\u5934\u7eea\u7684.\n\u56e0\u4e3a\u4e0d\u77e5\u9053\u600e\u4e48\u5904\u7406\u4e00\u4e2a\u5355\u8bcd\u540e\u9762\u5e94\u8be5\u8fde\u54ea\u4e00\u4e2a.\n\n\u7ed3\u679c\u6628\u5929\u4e00\u60f3,\u4fbf\u6709\u4e86\u601d\u8def.\n\n\u7531\u4e8en\u5f88\u5c0f.(n<=20)\u6240\u4ee5\u53ef\u4ee5\u8fdb\u884c\u4e00\u756a\u66b4\u529b.\n\n\u601d\u8def\u53ca\u505a\u6cd5\u5982\u4e0b.\n\n\u7528a[i][j]\u8868\u793a\u7b2ci\u4e2a\u8bcd\u4e2dj\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570.\n\n\u7528f[i][j]\u8868\u793a\u7b2ci\u4e2a\u8bcd\u8fde\u63a5\u7b2cj\u4e2a\u5355\u8bcd\u540e\u91cd\u53e0\u7684\u5b57\u6bcd\u6570.(\u5f00\u59cb\u4e3a0)\n\n\u90a3\u4e48\u662f\u5426\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u7b2ci\u4e2a\u5355\u8bcd\u540e\u53ef\u4ee5\u63a5\u7684\u5355\u8bcd?\n\n\u60f3\u4e86\u4e00\u4e0b,\u89c9\u5f97\u8fc7\u4e8e\u9ebb\u70e6,\u4e14n\u6bd4\u8f83\u5c0f,\u5bf9\u590d\u6742\u5ea6\u7684\u4f18\u5316\u4e0d\u5927.\n\n\u90a3\u4e48\u5c31\u5728\u8bfb\u5165\u540e\u53ea\u9884\u5904\u7406\u51faf\u6570\u7ec4.\n\n# \u526a\u679d\n* 1,\u5982\u679c\u7b2ci\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u5728\u7b2cj\u4e2a\u5355\u8bcd\u4e2d\u6839\u672c\u6ca1\u6709\u51fa\u73b0,\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5return.(\u6b64\u5904\u526a\u679d\u5728\u9884\u5904\u7406f\u6570\u7ec4\u4e0a\u7528) ~~(\u8fd9\u4e2a\u771f\u6ca1\u6709\u4ec0\u4e48\u5375\u7528,\u4e5f\u5c311ms)~~\n\n\n![\u539f\u6765](https://i.loli.net/2019/02/16/5c6817ed371e8.png)\n\u540e\u6765\u5462\n![\u540e\u6765](https://i.loli.net/2019/02/16/5c6818141f51e.png)\n\n* 2,\u82e5\u5f53x\u6216y\u5176\u4e2d\u4e00\u4e2a\u5df2\u7ecf\u904d\u5386\u5b8c\u540e\u8fd8\u6ca1\u6709\u5339\u914d\u7684,\u76f4\u63a5return.\n* 3,\u8d2a\u5fc3\u601d\u60f3.\u53ea\u8981\u4e00\u5339\u914d\u5230\u91cd\u5408\u7684\u90e8\u5206,\u5c31break\u52a0return.\n\n\u90a3\u4e48,\u6b64\u9898\u8fd8\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u5c31\u662f: ***\u7ec6\u8282!!!***\n\n\u7ec6\u8282\u4e00: **\u6bcf\u4e2a\u5355\u8bcd\u7528\u4e24\u6b21!**\n\n\u7ec6\u8282\u4e8c: **\u4efb\u4f55\u4e24\u4e2a\u5355\u8bcd\u4e0d\u80fd\u51fa\u73b0\u5305\u542b!**\n\n\u7ec6\u8282\u4e09: **\u5355\u8bcd\u53ef\u4ee5\u4e0d\u5168\u7528\u5b8c**\n\n\n\u4e0b\u9762\u6765\u8bf4\u8bf4dfs\u51fd\u6570 ~~(\u8bf4\u767d\u4e86\u5c31\u662f\u7206\u641c)~~\n\n\u4f20\u4e00\u4e2a\u53c2\u6570p,\u8868\u793a\u5f53\u524d\u8fde\u63a5\u6210\u7684\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd.\u90a3\u4e48\u5c31\u679a\u4e3e\u80fd\u63a5\u5728p\u540e\u9762\u7684\u5355\u8bcd.\n\n\u8be6\u89c1\u4ee3\u7801...\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint len[25];\nstring s[25];\nint a[25][100],f[25][25];\nint vis[25];//\u6bcf\u4e2a\u5355\u8bcd\u7528\u4e24\u6b21\uff01\uff01\uff01\nint n;\nchar beginn;//\u5f00\u5934\u5355\u8bcd.\nint ans,an;//ans\u5b58\u6700\u7ec8\u7b54\u6848,an\u5b58\u5f53\u524d\u7b54\u6848.\nvoid opera(int x,int y)//\u9884\u5904\u7406f[][]\n{\n    if(a[y][s[x][len[x]-1]]<1)return;//\u5c0f\u526a\u679d\n    bool flag=true;\n    int ky=0;\n    for(int k=s[x].size()-1;k>=0;k--)\n    {\n        flag=true;ky=0;\n        for(int kx=k;kx<s[x].size();kx++)//\u679a\u4e3e\u91cd\u53e0\n        {\n            if(s[x][kx]!=s[y][ky++])\n            {\n                flag=false;\n                break;               \n            }\n        }\n        if(flag==true)//\u627e\u5230\u4e86\n        {\n            f[x][y]=s[x].size()-k;\n            return;\n        }\n        \n    }\n    return;\n}\nvoid dfs(int p)//p\u8868\u793a\u4e4b\u524d\u524d\u63a5\u7684\n{\n    bool judgee=false;\n    for(int i=1;i<=n;i++)\n    {\n        if(vis[i]>=2)continue;//\u6bcf\u4e2a\u5355\u8bcd\u7528\u4e24\u6b21\uff01\uff01\uff01\n        if(f[p][i]==0)continue;//\u6ca1\u6709\u8fde\u63a5\n        if(f[p][i]==s[p].size()||f[p][i]==s[i].size())continue;//\u91cd\u5408\u4e86\n        an+=s[i].size()-f[p][i];\n        vis[i]++;\n        judgee=true;\n        dfs(i);\n        an-=s[i].size()-f[p][i];\n        vis[i]--;\n    }\n    if(judgee==false)\n    {\n        ans=max(ans,an);\n    }\n    return;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s[i];\n        len[i]=s[i].size();\n        for(int j=0;j<len[i];j++)\n        {\n            a[i][s[i][j]]++;\n        }  \n    }\n    char xx[2];\n    gets(xx);//\u8bfb\u4e2a\u6362\u884c\u7b26.\n    scanf(\"%c\",&beginn);//\u8bfb\u5165\u5f00\u5934\u5b57\u7b26.\n    \n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            opera(i,j);//\u9884\u5904\u7406\n        }\n    }\n    \n    for(int i=1;i<=n;i++)\n    {\n        if(s[i][0]!=beginn)continue;\n        vis[i]++;\n        an=s[i].size();\n        dfs(i);\n        vis[i]=0;\n    }\n    \n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1550325827,
        "uid": 68004,
        "name": "Q_P_Q_",
        "ccfLevel": 5,
        "title": "P1019\u9898\u89e3"
    },
    {
        "content": "\u9700\u8981\u6ce8\u610f\u91cd\u70b9\u5c31\u4e24\u4e2a\uff1a\n\n- 1 \u6bcf\u4e2a\u5355\u8bcd\u6700\u591a\u4e24\u6b21\n\n- 2 tact\u548ctact\u8fd9\u6837\u7684\u5355\u8bcd\u81ea\u8eab\u662f\u53ef\u4ee5\u4e32\u8054\u6210tactact\u8fd9\u6837\u7ed3\u679c\uff0c\u800c\u4e0d\u662ftact\u672c\u8eab\uff1b\u4e5f\u5c31\u662f\u8bf4\u4e24\u4e2a\u5355\u8bcd\u4e32\u8054\u7684\u65f6\u5019\u8981\u4fdd\u6301\u6700\u957f\n\n\u89e3\u9898\u601d\u8def\uff1a\n\n- 1 \u628aN\u4e2a\u5b57\u7b26\u4e32\u653e\u5230string\u7c7b\u578b\u6570\u7ec4str[N\n]\u5f53\u4e2d\u3002\n\n- 2 \u5bf9\u6570\u5b571\uff5e2N\u4f7f\u7528dfs\u7b97\u6cd5\u505a\u6392\u5217\n  \u6392\u5217\u7684\u7ed3\u679c\u653e\u5230pai[2*N]\u8fd9\u4e2a\u6570\u7ec4\u5f53\u4e2d\n  \u6570\u5b572*i\u548c2*i+1\u90fd\u8868\u793astr\u5f53\u4e2d\u4e0b\u8868\u662fi\u7684\u5b57\u7b26\u4e32\n  \u4e4b\u6240\u4ee5\u75282N\u4e2a\u6570\u6392\u5217\uff0c\u662f\u5e94\u5bf9\u63a5\u9f99\u65f6\u5019\u6bcf\u4e2a\u5b57\u7b26\u4e32\u53ef\u51fa\u73b0\u4e24\u6b21\n  \n- 3 \u5728\u5f97\u5230\u4e00\u4e2a\u6392\u5217\u7ed3\u679c\u540e\uff0c\u6839\u636e\u8fd9\u4e2a\u6392\u5217\u7ed3\u679c\u628a\u5b57\u7b26\u4e32\u63a5\u9f99\uff0c\u5e76\u8ba1\u7b97\u6700\u5927\u957f\u5ea6\uff0c\u628a\u957f\u5ea6\u4fdd\u7559\u5728nMax\u53d8\u91cf\u5f53\u4e2d\uff0c\u6b64\u65f6\u7684\u63a5\u9f99\u5b57\u7b26\u4e32\u7ed3\u679c\u653e\u5230sResult\u53d8\u91cf\u91cc\u9762\n\n- 4 \u5bf9\u6240\u6709\u7684\u6392\u5217\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\n\n\u5982\u679c\u4e0d\u4f18\u5316N=6\u4e4b\u540e\uff0c\u5c31\u4f1aTLE\u8d85\u65f6\u4e86\u3002\n\u4f18\u5316\u65b9\u6cd5\uff0c \u5efa\u7acb\u4e00\u4e2a\u90bb\u63a5\u6570\u7ec4 adj[N][N] \u7528\u6765\u8bb0\u5f55\u5b57\u7b26\u4e32\u4e4b\u95f4\u662f\u5426\u53ef\u4ee5\u63a5\u9f99\u5230\u4e00\u8d77\uff1b adj[i][j]\u7684\u503c\u8868\u793a\u5982\u679cstr[i]\u540e\u9762\u63a5\u4e0astr[j]\u53ef\u4ee5\u52a0\u957f\u51e0\u4e2a\u5b57\u7b26\u4e32\u3002\n\u4f7f\u7528testAdj\uff08\uff09\u51fd\u6570\u6765\u5b8c\u6210\u8fd9\u4e2a\u8ba1\u7b97\n\u6709\u4e86\u90bb\u63a5\u77e9\u9635\u4e4b\u540e\uff0c\u5728dfs\u641c\u7d22\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u65b0\u589e\u7684\u6392\u5217\u503c\uff0c\u68c0\u6d4b\u5b83\u524d\u9762\u7684\u503c\u548c\u5b83\u662f\u5426\u5728adj\u5f53\u4e2d\u6709\u975e0\u7684\u503c\uff1b\u5982\u679c\u4e0d\u80fd\u8fde\u63a5\uff0c\u76f4\u63a5dfs\uff08N\uff09\uff0c\u5e76\u5e26\u4e0a\u7ed3\u675f\u6807\u8bb0\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nint    N = 0;      // \u8f93\u5165\u7684\u7528\u4e8e\u63a5\u9f99\u7684\u5355\u8bcd\u7684\u6570\u91cf\nstring str[20];    // \u8f93\u5165\u7684\u53c2\u4e0e\u63a5\u9f99\u7684\u5355\u8bcd\u5217\u8868\nchar   cStart;     // \u63a5\u9f99\u7684\u5f00\u59cb\u5b57\u6bcd\nint    pai[40];    // \u8bb0\u5f55\u5b57\u7b26\u4e32\u7684\u4e00\u7ec4\u6392\u5217\nint    nMax = 0;   // \u6700\u957f\u7684\u63a5\u9f99\u4e32\u957f\u5ea6\nstring sResult=\"\"; // \u6700\u957f\u7684\u63a5\u9f99\u4e32\nstring sTemp=\"\";   // \u4e34\u65f6\u7684\u5408\u6210\u4e32\n\n//  \u628a\u5b57\u7b26\u4e32s\uff0c\u63a5\u5230sTemp\u7684\u540e\u9762\uff1b\n//  tact\u548ctact\u76f8\u8fde\u7684\u65f6\u5019\uff0c\u63a5\u6210tactact\u3002 \u4e5f\u5c31\u662f\u8bf4\u6309\u7167\u6700\u5c0f\u91cd\u5408\u6765\u94fe\u63a5\u7684\nint stradj(string s){\n    // \u6700\u5927\u53ef\u91cd\u53e0\u5927\u5c0f\uff0c\u5c31\u662f\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f53\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\u957f\u5ea6\n    int rL  = (int) sTemp.length();\n    int sL  = (int) s.length();\n    int len = (sL<rL) ? sL : rL;\n    int nRep=1;\n    int adj = 0;\n    for ( ; nRep<=len; nRep++ ) {\n        // \u68c0\u6d4bresult\u548cs\u662f\u5426\u6709\u957f\u5ea6\u4e3anRep\u7684\u91cd\u53e0\u9879\u76ee\n        string s1 = sTemp.substr(rL-nRep, nRep);\n        string s2 = s.substr(0,nRep);\n        if ( s1 == s2 ) { adj = 1; break;};\n    }\n    if ( 0 == adj ) return 0; // \u4e0d\u76f8\u8fde\n    sTemp += s.substr(nRep, sL-nRep);\n    return 1;\n};\n\nint adj[20][20]; // \u6d4b\u8bd5\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e4b\u95f4\u662f\u5426\u53ef\u4ee5\u94fe\u63a5\n// \u6d4b\u8bd5s1 \u548c s2\u8854\u63a5\u53ef\u91cd\u590d\u7684\u5b57\u7b26\u4e2a\u6570\uff0cs1-s2 \u987a\u5e8f\u522b\u9519\u5566\nint testAdj(string s1, string s2) {\n    int len1 = (int ) s1.length();\n    int len2 = (int ) s2.length();\n    int len = (len1<len2)?len1:len2;\n    \n    int nRep=1;\n    int adj = 0;\n    for ( ; nRep<=len; nRep++ ) {\n        // \u68c0\u6d4bresult\u548cs\u662f\u5426\u6709\u957f\u5ea6\u4e3anRep\u7684\u91cd\u53e0\u9879\u76ee\n        string t1 = s1.substr(len1-nRep, nRep);//s1\u53f3\u4fa7nRep\u4e2a\u5b57\u7b26\n        string t2 = s2.substr(0,nRep);         // s2\u5de6\u4fa7nRep\u4e2a\u5b57\u7b26\n        if ( t1 == t2 ) { adj = nRep; break;};\n    };\n    return adj;\n};\n\nvoid init () {\n    memset(adj, 0, 20*20*sizeof(int));\n    for (int i=0;i<N/2; i++) {\n        for (int j=0; j<N/2; j++) {\n            adj[i][j] = testAdj(str[i], str[j]);\n        };\n    }\n}\n\nvoid dfs(int nDep, int over){\n    if ( nDep==N || 1==over){\n        // \u5f97\u5230\u4e86\u4e00\u7ec4\u5168\u6392\u5217\n        sTemp = str[ pai[0]/2 ]; // \u7b2c\u4e00\u4e2a\u5143\u7d20\n        for (int i=1; i<N; i++) {\n            if ( pai[i] == -1 ) break;\n            if ( 0 == stradj(str[pai[i]/2]) ) break;\n        };\n        int nLen = (int ) sTemp.length();\n        if ( nMax<nLen ){\n            nMax = nLen;\n            sResult = sTemp;\n        };\n    } else {\n        for ( int i=0; i<N; i++) {\n            if ( 0 == nDep ) {\n                if ( str[i/2][0]!=cStart) continue;\n            };\n            pai[nDep] = i;\n            int bOK=1;\n            for ( int j=0; j<nDep; j++ ) {\n                if ( pai[j] == pai[nDep] ||\n                    0==testAdj(str[pai[nDep-1]/2], str[pai[nDep]/2])) {\n                    // \u5df2\u7ecf\u4e32\u8054\u8fc7\u4e86\u6216\u8005\u548c\u524d\u4e00\u4e2a\u4e0d\u53ef\u4e32\u8054\n                    pai[nDep]=-1;\n                    bOK = 0;\n                    break;\n                };\n            };\n            if (bOK ) dfs(nDep+1, 0); else dfs(N, 1);\n        };\n    }\n};\n\nint main() {\n    cin >> N;\n    for ( int i=0; i<N; i++) cin >> str[i];\n    N *= 2;\n    cin >> cStart;\n    init();\n    dfs(0, 0);\n    cout << nMax; \n    return 0;\n}\n```\n",
        "postTime": 1549546999,
        "uid": 141918,
        "name": "fakefire",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u5b9e\u9645\u6d4b\u8bd5\u4e0d\u5f00O2\u5373\u53efAC\u672c\u9898\u3002\u8bf7\u52ff\u6284\u88ad\uff0c\u540e\u679c\u81ea\u8d1f\u3002\n```cpp\n#include <bits/stdc++.h> // \u5b9e\u9645\u6bd4\u8d5b\u65f6\u4e0d\u5efa\u8bae\u4f7f\u7528\u4e07\u80fd\u5934\u6587\u4ef6\n\nusing namespace std; // \u5b9e\u9645\u6bd4\u8d5b\u65f6\u8981\u6ce8\u610f\u56e0\u6b64\u4ea7\u751f\u7684\u540d\u5b57\u6c61\u67d3\n\n// \u8bf7\u52ff\u6284\u88ad\uff0c\u540e\u679c\u81ea\u8d1f\u3002\n\nint n, ans = 0; // n\u662f\u5355\u8bcd\u4e2a\u6570\uff0cans\u662f\u7b54\u6848\u957f\u5ea6\nstring word[20], now; // word\u662f\u5355\u8bcd\u6570\u7ec4\uff0cnow\u662f\u5f53\u524d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\nint vis[20] = {}; // vis\u662f\u4f7f\u7528\u6b21\u6570\u6570\u7ec4\n\ninline int check(string a, string b) // \u5224\u65ad\u662f\u5426\u6709\u91cd\u53e0\u90e8\u5206\u4e14\u4e0d\u5b8c\u5168\u91cd\u53e0\uff0c\u5982\u679c\u6709\u5219\u8fd4\u56de\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\n{\n    int len = min(a.length(), b.length()) - 1; // \u51cf1\uff0c\u4fdd\u8bc1\u5224\u65ad\u65f6\u4e0d\u4f1a\u7b97\u5165\u5b8c\u5168\u91cd\u53e0\n    for(int i = 1; i <= len; ++i)\n        if(a.substr(a.length() - i, i) == b.substr(0, i)) // \u5bfb\u627e\u6700\u5c0f\u91cd\u53e0\n            return i; // \u627e\u5230\u540e\u7acb\u5373\u8fd4\u56de\uff0c\u4fdd\u8bc1\u7ed3\u679c\u662f\u6700\u5c0f\u91cd\u53e0\u90e8\u5206\u957f\u5ea6\n    return 0; // \u5982\u679c\u6ca1\u6709\u5219\u8fd4\u56de0\n}\n\nvoid dfs(string s) // \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n{\n    ans = max(ans, static_cast<int>(s.length())); // \u8bb0\u5f55\u7b54\u6848\n    for(int i = 0; i < n; ++i)\n    {\n        if(vis[i] == 2) continue; // \u5355\u8bcd\u4f7f\u75282\u6b21\u540e\u5c31\u4e0d\u518d\u4f7f\u7528\n        int checkresult = check(now, word[i]); // \u5224\u65ad\n        if(checkresult == 0) continue; // \u65e0\u91cd\u53e0\u90e8\u5206\u5c31\u4e0d\u518d\u4f7f\u7528\n        // \u4f7f\u7528\n        ++vis[i];\n        string tmp = now; // \u8bb0\u4e0b\u5f53\u524d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u4ee5\u7528\u4e8e\u56de\u6eaf\n        now = word[i];\n        dfs(s.substr(0, s.length() - checkresult) + word[i]); // \u62fc\u63a5\u540e\u5411\u6df1\u641c\u7d22\n        // \u56de\u6eaf\n        now = tmp;\n        --vis[i];\n    }\n}\n\nint main()\n{\n    cin >> n; // \u8bfb\u5165\n    for(int i = 0; i < n; ++i) cin >> word[i]; // \u8fd8\u662f\u8bfb\u5165\n    char beg; cin >> beg; // \u4f9d\u7136\u662f\u8bfb\u5165\n    for(int i = 0; i < n; ++i) // \u5bfb\u627e\u6ee1\u8db3\u5f00\u5934\u5b57\u6bcd\u7684\u5355\u8bcd\u4ee5\u5f00\u59cb\u641c\u7d22\n        if(beg == word[i][0])\n        {\n            ++vis[i]; // \u5f00\u5934\u7684\u5355\u8bcd\u4e5f\u7b97\u5355\u8bcd\uff0c\u6240\u4ee5\u8981\u52a0\u6b21\u6570\n            now = word[i]; // \u5f53\u524d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u663e\u7136\u662f\u5f00\u5934\u7684\u5355\u8bcd\n            dfs(word[i]);\n            --vis[i]; // \u5f00\u5934\u7684\u5355\u8bcd\u4e5f\u7b97\u5355\u8bcd\uff0c\u6240\u4ee5\u4f7f\u7528\u5b8c\u540e\u4e5f\u8981\u56de\u6eaf\n        }\n    cout << ans << endl; // \u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n\n```",
        "postTime": 1542350361,
        "uid": 37562,
        "name": "Sunbread",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u9898\u610f\u4e0d\u591f\u5b8c\u6574\uff0c\u8fd9\u9053\u9898\u662f\u53d6\u6700\u5c0f\u91cd\u590d\u90e8\u5206\u3002\u6211\u4e0b\u9762\u5199\u4e86contrast\u51fd\u6570\u7528\u6765\u5224\u65ad\u6700\u5c0f\u91cd\u590d\u90e8\u5206\u7684\u5927\u5c0f\uff0c\u7528dfs+\u56de\u6eaf\u5b9e\u73b0\uff0c\u9047\u5230\u6700\u5927\u957f\u5ea6\u5c31\u4fdd\u5b58\u4e0b\u6765\u3002\n\n\u53e6\u5916\u6ce8\u610f\uff0c\u5982\u679c\u9f99\u5934\u6ca1\u6709\u53ef\u4ee5\u63a5\u7684\u5b57\u7b26\u4e32\u5c31\u8fd4\u56de\u9f99\u5934\u7684\u957f\u5ea6\u3002\n```cpp\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint  n, g[21] = {0}, h,ans = 0;\nstring a,s[21];\nint contrast(string x, string y) { //x\u4e3a\u5df2\u7ecf\u63a5\u597d\u7684\u5b57\u7b26\u4e32,y\u4e3a\u7533\u8bf7\u63a5\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u590d\u90e8\u5206\u5c31\u8fd4\u56de0\uff0c\u8868\u793a\u62d2\u7edd\u63a5\u5165\uff1b\n\tint u = min(x.size(), y.size()) - 1;\n\tfor (int i = 0; i < u; i++) {\n\t\tif (x[x.size() - 1] == y[i]) {\n\t\t\tint j;\n\t\t\tfor (j = 0; j <= i; j++) {\n\t\t\t\tif (x[x.size() - j - 1] != y[i - j])break;\n\t\t\t}\n\t\t\tif (j - 1 == i) return i + 1;\n\t\t}\n\t}\n\treturn 0;\n}\nvoid dfs(int t,string z) {  //z\u4e3a\u5df2\u7ecf\u63a5\u597d\u7684\u5b57\u7b26\u4e32\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (g[i] < 2) {\n\t\t\th = contrast(z, s[i]);   //\u4fdd\u5b58\u91cd\u590d\u4e0d\u5206\u5927\u5c0f\n\t\t\tif (h > 0) {\n\t\t\t\tg[i]++;                 //\u7b2ci\u548c\u5b57\u7b26\u4e32\u88ab\u4f7f\u7528\u4e86\u4e00\u6b21\n\t\t\t\tstring m = z;\n\t\t\t\tfor (int j = h; j < s[i].size(); j++) {  //\u8ffd\u52a0\u9664\u91cd\u590d\u90e8\u5206\u5916\u7684\u6240\u6709\u5b57\u7b26\n\t\t\t\t\tz += s[i][j];\n\t\t\t\t}\n\t\t\t\tdfs(i, z);  //\u7ee7\u7eed\u641c\u7d22\n\t\t\t\tz = m;     //\u56de\u6eaf\u64cd\u4f5c\n\t\t\t\tg[i]--;      //\u56de\u6eaf\u64cd\u4f5c\n\t\t\t}\n\t\t}\t\n\t}\n\tif (z.size() > ans)ans = z.size();\n\treturn;\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> s[i];\n\t}\n\tcin >> a;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (s[i][0] == a[0]) {\n\t\t\tg[i]++;\n\t\t\tdfs(i,s[i]);\n\t\t\tfor (int i = 1; i <= n; i++) {\n\t\t\t\tg[i] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1540404159,
        "uid": 100760,
        "name": "Maker_Freelance",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u6b22\u8fce\u6233\u94fe\u63a5\uff0c\u98df\u7528\u6548\u679c\u66f4\u597d(\\*@\u03bf@\\*) \u54c7\uff5e\n\n\n<http://www.cnblogs.com/tonylim/p/6818252.html>\n\n\u6bd4\u8f83\u6c34\u7684\u4e00\u9898\uff0c\u4ea4\u4e86\u56db\u4e94\u6b21\u624d\u8fc7\uff0c\u4f3c\u4e4e\u836f\u4e38\u3002\u3002\n\n\n\u9996\u5148compare\u4e00\u4e0b\u8ba1\u7b97\u51fai \u63a5 j \u4f1a\u5ef6\u957f\u591a\u957f\u8bb0\u5f55\u5728f[i,j]\u7136\u540edfs\u778e\u641e\u4e00\u4e0b\n\n\u9898\u76ee\u6bd4\u8f83\u8ff7\uff0c\u89c9\u5f97\u81ea\u5df1\u7684\u8bfb\u9898\u59ff\u52bf\u6709\u5f85\u63d0\u9ad8\n\n\n\u9996\u5148\u6211\u4eec\u8981\u5f04\u6e05\u695a\u63a5\u9f99\u5230\u5e95\u662f\u4ec0\u4e48\uff1f\n\n\u63a5\u9f99\uff1f\u4e0d\u5c31\u662f\u666e\u901a\u7684\u63a5\u9f99\u5417\uff1f\n\n\u4e0d\u5bf9\uff0c\u540c\u4e2a\u591a\u6b21WA\u53ef\u4ee5\u5f97\u77e5\u539f\u6765\u540c\u6837\u7684\u4e24\u4e2a\u4e32\u63a5\u9f99\u53ef\u4ee5\u6709\u591a\u79cd\u63a5\u6cd5\n\n\u6bd4\u5982ababab\u548cababcc,\u4f60\u53ef\u4ee5\u63a5\u9f99\u4e3aabababcc\u6216\u8005ababababcc,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u540e\u9762\u52a0\u4e00\u4e2a\u4f18\u5316\n\n\n\u8fd8\u6709\u5c31\u662f\u9898\u76ee\u6240\u8bf4\u7684\u5305\u542b\u5173\u7cfb\uff0c\u4e0d\u5305\u62ec\u81ea\u5df1\u63a5\u81ea\u5df1\u554a\uff0c\n\n\u6240\u4ee5\u81ea\u5df1\u63a5\u81ea\u5df1\uff0c\u5982\u679c\u9664\u4e86\u5b8c\u5168\u8986\u76d6\u8fd8\u6709\u5176\u4ed6\u60c5\u51b5\u4e5f\u53ef\u4ee5\n\n\n\u4e8e\u662f\u4ee3\u7801\u2014\u2014\n\n\n\n\n   \n\n\n\n\n```cpp\nprogram no;\nuses math;\nconst\n  inf='test.in';\n  outf='test.out';\nvar\n   a:array[1..20] of string;\n   i,j,n,tot,ans:longint;\n   f:array[1..20,1..20] of longint;\n   ex:array[1..20] of longint;\n   tt:char;  \nprocedure compare(aa,bb:longint);\nvar\n  i,j,lena,lenb,k:longint;\nbegin\n  lenb:=length(a[bb]);\n  lena:=length(a[aa]);\n  k:=maxlongint;\n  for j:= lena downto 1 do\n    if a[aa,j]=a[bb,1] then\n     if copy(a[aa],j,lena-j+1)=copy(a[bb],1,lena-j+1) then\n       if (lena-j+1=min(lena,lenb)) then  //\u5982\u679c\u6709\u5305\u542b\u5173\u7cfb\n            begin  if aa<>bb then exit; end //\u6392\u9664\u81ea\u5df1\u63a5\u81ea\u5df1\n       else begin\n              k:=min(k,lena-j+1);\n              break;//\u4f18\u5316\n            end;\n  if k<>maxlongint then\n    f[aa,bb]:=lenb-k;//\u8bb0\u5f55\u5ef6\u957f\u7684\u957f\u5ea6\nend;\nprocedure search(i:Longint);  //dfs\nvar\n  j:longint;\nbegin\n    for j:= 1 to n do\n      if ex[j]>-2 then  //\u5982\u679c\u8fd8\u6709\u53ef\u4ee5\u7528\u7684\u6b21\u6570\n        if f[i,j]<>0 then  //\u5982\u679c\u4e0d\u662f\u767d\u63a5\n        begin\n          // writeln(i,' ',j,' ',f[i,j]);\n            tot:=tot+f[i,j];\n            dec(ex[j]);\n            search(j);\n            tot:=tot-f[i,j];\n            inc(ex[j]);\n        end;\n    if ans<tot then ans:=tot;\nend;\nbegin\n    //assign(input,inf);  assign(output,outf);\n    reset(input); rewrite(output);\n    readln(n);\n    for i:= 1 to n do\n      readln(a[i]);\n    for i:= 1 to n do\n      for j:= 1 to n do\n        compare(i,j);\n    readln(tt);\n    for i:= 1 to n do    //\u679a\u4e3e\u5f00\u5934\u7684\u4e32\n      if tt=a[i,1] then\n      begin\n        fillchar(ex,sizeof(ex),0);\n        tot:=length(a[i]);\n        dec(ex[i]);\n        search(i);\n      end;\n    writeln(ans);\n    close(input);  close(output);\nend.\n```",
        "postTime": 1494076362,
        "uid": 19015,
        "name": "bobble",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    },
    {
        "content": "\u5199\u4e8620\u591a\u5206\u949f\u6709\u70b9\u7e41\u7410\n\n\u8981\u8bfb\u9898\u9996\u5148\u4e00\u4e2a\u5355\u8bcd\u53ef\u4ee5\u7528\u4e24\u6b21\u7684\n\n\u5176\u6b21\u4e00\u4e2a\u5355\u8bcd\u53ef\u4ee5\u548c\u81ea\u5df1\u5339\u914d\n\n\u6ce8\u610fdfs\u4e0d\u8981\u5199\u4e11\u4e86\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <vector>\n#include <queue>\nusing namespace std;\nint n;\nchar s[20 + 2][2000 + 2];\nint i , j , k , l , f;\nint len[20 + 2];\nbool flag;\nvector < int > linker[20 + 2];\nvector < int > di[20 + 2];\nint max( int a , int b )\n{\n    if( a > b )\n        return a;\n    return b;\n}\nint power[20 + 2] = { 0 , 1 , 3 , 9 , 27 , 81 , 243 , 729 , 2187 , 6561 , 19683 , 59049 , 177147 , 531441 , 1594323 , 4782969 , 14348907 , 43046721 , 129140163 , 387420489 , 1162261467 };\nint dfs( int pos , int sta )\n{\n    int i;\n    int c[20 + 2];\n    int t = sta;\n    for( i = n ; i >= 1 ; i-- )\n    {\n         c[i] = t / power[i];\n         t %= power[i];\n    }\n    int ans = 0;\n    for( i = 0 ; i < linker[ pos ].size() ; i++ )\n         if( c[ linker[ pos ][i] ] != 2 )\n             ans = max( ans , dfs( linker[ pos ][i] , sta + power[ linker[ pos ][i] ] ) + di[ pos ][i] );\n    return ans;\n}\nint main()\n{\n    scanf( \"%d\" , &n );\n    for( i = 1 ; i <= n + 1 ; i++ )\n         cin >> s[i];\n    for( i = 1 ; i <= n + 1 ; i++ )\n         len[i] = strlen( s[i] );\n    for( i = 1 ; i <= n + 1 ; i++ )\n         for( j = 1 ; j <= n ; j++ )\n              {\n                  k = len[i];\n                  while( 1 )\n                  {\n                      k--;\n                      flag = 0;\n                      if( len[i] - k > len[j] - 1 )\n                          break;\n                      for( f = k , l = 0 ; f < len[i] && l < len[j] - 1 ; f++ , l++ )\n                           if( s[i][f] != s[j][l] )\n                           {\n                               flag = 1;\n                               break;\n                           }\n                      if( !flag )\n                      {\n                          linker[i].push_back( j );\n                          di[i].push_back( len[j] - ( len[i] - k ) );\n                          break;\n                      }\n                      if( k == 0 )\n                          break;\n                  }\n              }\n    cout << dfs( n + 1 , 0 ) + 1 << endl;\n    system( \"pause\" );\n    return 0;\n}\n```",
        "postTime": 1439192761,
        "uid": 3296,
        "name": "noip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1019 \u3010\u5355\u8bcd\u63a5\u9f99\u3011"
    }
]