[
    {
        "content": "~~\u8fd9\u9053\u9898\u80af\u5b9a\u7528\u7f51\u7edc\u6d41\uff0c\u4e0d\u7136$nodgd$\u7ed9\u4f60\u653e\u5728\u7f51\u7edc\u6d41\u8003\u8bd5\u91cc\u5e72\u561b~~\n\n### \u9898\u610f\uff1a\n\u7ed9\u4e86\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u7ed9\uff08\u9664\u4e86\u6839\u8282\u70b9\uff09\u6bcf\u4e2a\u8282\u70b9\u9009\u4e00\u6761\u51fa\u8fb9\u6784\u6210\u4e00\u68f5\u6811\uff0c\u8ba9\u513f\u5b50\u4e2a\u6570\u6700\u591a\u7684\u8282\u70b9\u7684\u513f\u5b50\u4e2a\u6570\u6700\u5c11\u3002\uff08**\u6839\u8282\u70b9\u4e0d\u7b97**\uff09\n\u4f9d\u6b21\u8f93\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\uff0c\u8981\u6c42**\u5b57\u5178\u5e8f\u6700\u5c0f**\u3002\n\n-------\n\u5148\u4e0d\u8003\u8651\u5b57\u5178\u5e8f\uff0c\u8003\u8651\u8ba1\u7b97\u6700\u5c0f\u7684\u8d1f\u8f7d\u7ea7\u522b\u3002\n\n\u5f88\u663e\u7136\u60f3\u5230\u8d1f\u8f7d\u7ea7\u522b\u53ef\u4ee5\u7528**\u4e8c\u5206\u7b54\u6848**\u6765\u6c42\u3002\n\n\u5224\u65ad\u8d1f\u8f7d\u7ea7\u522b\u4e3aK\u662f\u5426\u53ef\u884c\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5efa\u51fa\u8fd9\u6837\u4e00\u5e45\u56fe\u6765\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/659jrj0b.png)\n\n\u7136\u540e\u8ba1\u7b97\u6700\u5927\u6d41\uff0c\u5982\u679c\u6700\u5927\u6d41=$N$\uff0c\u8bf4\u660e\u8d1f\u8f7d\u7ea7\u522b\u53ef\u4ee5\u7b49\u4e8e$K$\n\n-------\n\u90a3\u4e48\u5982\u4f55\u9a8c\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u5462\uff1f\n\n### \u679a\u4e3e\n\n\u5728\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86$fa[0]$~$fa[i-1]$\uff0c\u6b64\u65f6\u679a\u4e3e$fa[i]$\uff0c$fa[i+1]$~$fa[n-1]$\u672a\u786e\u5b9a\u3002\n\n\u90a3\u4e48$0$~$i-1$\u8282\u70b9\u53ea\u548c\u5df2\u786e\u5b9a\u7684\u7236\u4eb2\u8fde\u8fb9\uff0c$i$\u53f7\u8282\u70b9\u4e5f\u548c\u679a\u4e3e\u7684\u7236\u4eb2\u8fde\u8fb9\uff0c$i+1$~$n-1$\u6309\u539f\u6765\u7684\u65b9\u5f0f\u8fde\u8fb9\uff08\u53ef\u80fd\u6709\u591a\u6761\uff09\u3002\n\n\u5982\u679c\u5f53\u524d$fa[i]$\u5efa\u56fe\u8dd1\u6700\u5927\u6d41=n\uff0c\u8bf4\u660e\u5f53\u524d$fa[i]$\u53ef\u884c\uff0c$fa[i]$\u5c31\u5b9a\u4e0b\u6765\u679a\u4e3e$i+1$\n\n\u5982\u679c\u6700\u5927\u6d41$<N$\uff0c\u8bf4\u660e\u4e0d\u884c\uff0c\u7ee7\u7eed\u679a\u4e3e$i$\u7684\u51fa\u8fb9\u4f5c\u4e3a$fa[i]$\uff0c\u7ee7\u7eed\u9a8c\u8bc1\u5373\u53ef\n\n\u8981\u8dd1$N^2$\u6b21\u7f51\u7edc\u6d41\uff0c\u53ef\u4ee5\u8fc7\uff0c\u4f46\u662f$nodgd$\u89c9\u5f97\u4ed6\u4e0d\u591f\u4f18\u79c0\u3002\n\n\n### \u4f18\u5316\uff08\u8dd1$NlogN$\u6b21\u6700\u5927\u6d41\uff09\n\u521a\u624d\uff0c\u679a\u4e3e$i$\u7684\u51fa\u8fb9\u4f5c\u4e3a$fa[i]$\n\n\u73b0\u5728\uff1a\u7f51\u7edc\u6d41\u9a8c\u8bc1 $L \\leq fa[i] \\leq R$ \u662f\u5426\u53ef\u884c\n\n\u4e8e\u662f$i$\u53f7\u8282\u70b9\u5c31\u548c$L$~$R$\u8fde\u8fb9\n\n\u5c31\u53ef\u4ee5**\u4e8c\u5206\u9a8c\u8bc1**\n\n> \u4e00\u5f00\u59cb\u5df2\u77e5\u5728$[0,N]$\u6709\u89e3\n>\n> \u7b2c\u4e00\u8f6e\u5c31\u9a8c\u8bc1$[0,N/2]$\n>\n> \u7b2c\u4e8c\u8f6e...\n\n~~\u5176\u5b9e\u4e5f\u5feb\u4e0d\u5230\u90a3\u91cc\u53bb...~~\n\n$code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=205;\nconst int M=5005;\nconst int inf=1e9;\nint n,k,S,T,fa[N];\nchar a[N][N];\nint Last[N],Next[M],End[M],len[M],tot;\nint _last[N],dis[N],gap[N];\nvoid cb(int x,int y,int z,int z0=0){\n    End[tot]=y,Next[tot]=Last[x],len[tot]=z,Last[x]=tot++;\n    End[tot]=x,Next[tot]=Last[y],len[tot]=z0,Last[y]=tot++;\n}\nvoid bfs(){\n    for(int i=1;i<=T;i++) dis[i]=T,gap[i]=0;\n    gap[0]=0;\n    dis[T]=0;\n    queue<int> q;\n    q.push(T);\n    while(q.size()){\n        int x=q.front();\n        q.pop();\n        for(int i=Last[x];i;i=Next[i]){\n            int y=End[i];\n            if(dis[y]>dis[x]+1){\n                dis[y]=dis[x]+1;\n                q.push(y);\n            }\n        }\n    }\n    for(int i=1;i<=T;i++) gap[dis[i]]++,_last[i]=Last[i];\n}\nint isap(int x,int flow){\n    if(x==T) return flow;\n    int flow_now=0;\n    for(int &i=_last[x];i;i=Next[i]){\n        int y=End[i];\n        if(len[i] && dis[x]==dis[y]+1){\n            int f=isap(y,min(len[i],flow-flow_now));\n            flow_now+=f;\n            len[i]-=f;\n            len[i^1]+=f;\n            if(flow==flow_now || dis[S]==T) return flow_now;\n        }\n    }\n    gap[dis[x]]--;\n    if(gap[dis[x]]==0) dis[S]=T;\n    dis[x]++;\n    gap[dis[x]]++;\n    _last[x]=Last[x];\n    return flow_now;\n}\nbool check(int mid){\n    S=2*n+1;\n    T=S+2;\n    tot=2;\n    for(int i=1;i<=n;i++){\n        cb(S,i,1);\n        if(fa[i]) cb(i,fa[i]>n?T:fa[i]+n,1);\n        else if(a[0][i]=='Y') cb(i,T,1);\n        else\n            for(int j=1;j<=n;j++)\n                if(a[i][j]=='Y')\n                    cb(i,j+n,1);\n        cb(i+n,T,mid);\n    }\n    int res=0;\n    bfs();\n    while(dis[S]<T) res+=isap(S,inf);\n    for(int i=0;i<=T;i++) Last[i]=0;\n    if(res==n) return 1;\n    return 0;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=0;i<=n;i++) scanf(\"%s\",a[i]+1);\n    for(int i=1;i<=n;i++) a[i][n+1]=a[0][i];\n    int l=0,r=n;\n    //------\n    while(l<=r){\n        int mid=l+r>>1;\n        if(check(mid)){\n            r=mid-1;\n            k=mid;\n        }\n        else l=mid+1;\n    }\n    //------\n    for(int i=1;i<=n;i++){\n        bool flag=0;\n        for(int j=1;j<=n;j++){\n            if(a[i][j]=='Y'){\n                fa[i]=j;\n                if(check(k)){\n                    flag=1;\n                    break;\n                }\n            }\n        }\n        if(flag) continue;\n        fa[i]=n+1;//fa[i]=CC\n    }\n    //------\n    for(int i=1;i<=n;i++) printf(\"%d \",fa[i]-1);\n    return 0;\n}\n```",
        "postTime": 1582446102,
        "uid": 156001,
        "name": "TheAutumnGlory",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5786 \u3010[CQOI2008]\u4f20\u611f\u5668\u7f51\u7edc\u3011"
    }
]