[
    {
        "content": "\u9009\u5b66\u9738\uff1f~~\u90a3\u5f53\u7136\u9009\u6211\u5566~~\n\n\u9996\u5148\u628a\u5b9e\u529b\u76f8\u540c\u7684\u5168\u90fd\u7528**\u5e76\u67e5\u96c6**\u5e76\u8d77\u6765\uff0c\u628a\u5728\u6bcf\u4e2a\u96c6\u5408\u7684\u4eba\u6570\u8bb0\u5f55\u4e0b\u6765\n\n\u7136\u540e\u5c31\u662f**\u80cc\u5305\u95ee\u9898**\u4e86\uff0c\u6ce8\u610f\uff0c\u8981\u4f7f\u539f\u6765\u7684M\u5c3d\u53ef\u80fd\u63a5\u8fd1\u7684\u9009\u51fa\u5b66\u9738\u7684\u6570\u76ee\uff0c\u53ef\u80fd\u9009\u591a\u4f59m\u4e2a\u4eba\uff0c\u6240\u4ee5\u628a\u80cc\u5305\u5bb9\u91cf\u6269\u5927\u4e3a2m\n\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint f[100000],p[100000],i,j,x,y,k,m,n,s[100000],dp[100000],tot;\nint find(int u)\n{\n\tif(f[u]==u) return u;\n\telse return f[u]=find(f[u]);\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(i=1;i<=n;i++)\n\t\tf[i]=i,p[i]=1; //p\u9884\u5904\u7406\u4e3a1,\u56e0\u4e3a\u4e00\u5f00\u59cb\u6bcf\u4e2a\u96c6\u5408\u53ea\u6709\u4e00\u4e2a\u6570\n\tfor(i=1;i<=k;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tint u=find(x);int v=find(y); //\u5e76\u67e5\u96c6\n\t\tif(u!=v) f[u]=v,p[v]+=p[u];  //p\u8bb0\u5f55\u96c6\u5408\u5143\u7d20\u4e2a\u6570\n\t}\n\tfor(i=1;i<=n;i++) //\u627e\u5230\u6bcf\u4e2a\u96c6\u5408\u7684\u6839\u8282\u70b9\uff0c\u628a\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\u5b58\u8d77\u6765\n\tif(f[i]==i)\n\t{\n\t\ttot++;\n\t\ts[tot]=p[i];\n\t}\n\tfor(i=1;i<=tot;i++) //\u80cc\u5305\u95ee\u9898\n\t\tfor(j=2*m;j>=s[i];j--)\n\t\t\tdp[j]=max(dp[j],dp[j-s[i]]+s[i]);\n\tint ans=999999999,minn=999999999;\n\tfor(i=1;i<=2*m;i++)\t//\u627e\u5230\u6700\u63a5\u8fd1m\u7684\n\t{\n\t\tif(minn>abs(dp[i]-m)) minn=abs(dp[i]-m),ans=dp[i];\n\t}\n\tif(ans==999999999) printf(\"0\");\n\telse\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1531215259,
        "uid": 44438,
        "name": "\u671b\u773c\u6d6e\u4e91",
        "ccfLevel": 0,
        "title": "\u9009\u5b66\u9738"
    },
    {
        "content": "k\u5bf9\u5b9e\u529b\u76f8\u5f53\u7684\u5b66\u751f\u663e\u7136\u53ef\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u8fd9\u4e9b\u5b66\u751f\u6346\u7ed1\u5728\u4e00\u8d77\u6210\u4e3a\u4e00\u4e2a\u7269\u4ef6\u3002\n\n\u4e8e\u662f\u5982\u4e0b\u65b9\u9898\u89e3\u6240\u8bf4\u7684\uff0c\u8f6c\u5316\u6210\u4e86\u4e00\u9053\u53ef\u884c\u6027dp\u9898\u76ee\u3002\n\n\u89c2\u5bdf\u5230\u7a7a\u95f4\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u8fdb\u884c\u4f18\u5316\u3002\n\n\u540c\u65f6\u91cd\u91cf\u76f8\u540c\u7684\u7269\u4ef6\u53ef\u80fd\u8fc7\u591a\u5bfc\u81f4TLE\uff08\u6bd4\u5982\u6ca1\u6709\u4e00\u5bf9\u5b9e\u529b\u76f8\u5f53\u7684\u5b66\u751f\uff09\uff0c\u6b64\u65f6\u6211\u4eec\u4f7f\u7528\u591a\u91cd\u80cc\u5305\u4e0b\u7684\u4f18\u5316\u65b9\u6848\uff0c\u5bf9\u591a\u4e2a\u91cd\u91cf\u76f8\u540c\u7684\u7269\u4ef6\u8fdb\u884c\u4e8c\u8fdb\u5236\u7684\u5206\u89e3\u3002\u4ed4\u7ec6\u60f3\u4e86\u4e00\u4e0b\uff0c\u662f\u4e2a\u6bd4\u8f83\u5927\u7684\u4f18\u5316\uff1f\n\n\uff08\u7136\u800c\u5b9e\u9645\u4e0a\u4e0d\u52a0\u4e5f\u4e0d\u4f1aTLE\u7684\u6837\u5b50\n\n\u81f3\u5c11\u672c\u9898\u6570\u636e\u6765\u770b\uff0c\u5982\u6b64\u8017\u65f6\u662f0ms\u7684\u3002\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=2e4+10;\nbool f[N]; // \u53ef\u884c\u6027dp\u6570\u7ec4\nint fa[N]; // \u5e76\u67e5\u96c6\nint siz[N]; // \u5e76\u67e5\u96c6\u5927\u5c0f\nint prew[N],w[N],p; // \u591a\u91cd\u80cc\u5305\u9884\u5904\u7406\u7528\u6570\u7ec4\u548c\u5b9e\u9645\u75280-1\u80cc\u5305\u6570\u7ec4\ninline int Find(int x){\n    if(!fa[x]) return x;\n    return fa[x]=Find(fa[x]);\n}\ninline bool Union(int a,int b){\n    int af=Find(a),bf=Find(b);\n    if(af==bf) return false;\n    siz[bf]+=siz[af];\n    fa[af]=bf;\n    return true;\n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    int n,m,k;\n    cin>>n>>m>>k;\n    for(int i=1;i<=n;i++) siz[i]=1;\n    int u,v;\n    for(int i=0;i<k;i++){\n        cin>>u>>v;\n        Union(u,v);\n    }\n    for(int i=1;i<=n;i++)\n        if(!fa[i]){\n            prew[siz[i]]++;\n        }\n    int pl=1;\n    for(int i=1;i<=n;i++){\n        pl=1;\n        while(prew[i]){\n            if(prew[i]&1) w[++p]=pl*i;\n            pl<<=1,prew[i]>>=1;\n        }\n    } // \u8fdb\u884c\u591a\u91cd\u80cc\u5305\u76842\u8fdb\u5236\u5206\u89e3\n    int ans=0x3f3f3f3f,nans=0x3f3f3f3f;\n    f[0]=1;\n    for(int i=1;i<=p;i++)\n        for(int j=n;j>=0;j--){\n            if(j>=w[i]) f[j]|=f[j-w[i]];\n        } // \u8fdb\u884c\u53ef\u884c\u6027dp\n    for(int i=0;i<=m+nans;i++)\n        if(f[i] && abs(m-i)<nans) ans=i,nans=abs(m-i); // \u679a\u4e3e\u7b54\u6848\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1509979031,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u4e00\u9053\u975e\u5e38\u88f8\u7684**\u80cc\u5305**\uff0c\u5c06\u9898\u610f\u8f6c\u5316\u4e00\u4e0b\u5c31\u66f4\u660e\u663e\u4e86\uff1aN\u4e2a\u73ed\uff0c\u6bcf\u4e2a\u73ed\u6709v[i]\u4eba\uff0c\u6c42\u9009\u51faM\u4e2a\u73ed\u53c2\u52a0\u6d3b\u52a8\uff0cabs(\u6d3b\u52a8\u4eba\u6570-K)\u6700\u5c0f\u3002\n\n\u76f8\u4fe1\u5927\u5bb6\u5bf9\u8f6c\u5316\u540e\u7684\u9898\u76ee\u5341\u5206\u4e86\u89e3\uff0c\u8457\u540d\u7684\u80cc\u5305\u95ee\u9898\u6559\u7a0b**\u80cc\u5305\u4e5d\u8bb2**\u5c31\u66fe\u8be6\u7ec6\u7684\u4ecb\u7ecd\u8fc7\uff0c\u8bbef[i]\u8868\u793a**\u662f\u5426\u80fd\u9009\u51fai\u4e2a\u4eba\u53c2\u52a0\uff0c1\u8868\u793a\u53ef\u4ee5\uff0c0\u5219\u4e0d\u884c**\n\n\u8f6c\u79fb\u65b9\u7a0b\u5f88\u7b80\u5355\uff1a\n```\nf[j]|=f[j-v[i]]\n```\n------------\n\u597d\u4e86\uff0c\u8f6c\u5316\u540e\u7684\u95ee\u9898\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86\uff0c\u53ef\u662f\u600e\u4e48\u8f6c\u5316\u5462\uff1f\n\n\u9898\u76ee\u8bf4\u660e\uff0c\u5bf9\u4e8e\u4e00\u7ec4\u5b9e\u529b\u76f8\u7b49\u7684\uff0c\u5fc5\u987b\u540c\u65f6\u9009\u4e0a\u3002\u5373\uff1a**\u8fd9\u4e24\u4e2a\u4eba\u8981\u4e0d\u540c\u65f6\u9009\uff0c\u8981\u4e0d\u540c\u65f6\u4e0d\u9009\uff0c\u4e5f\u80fd\u7406\u89e3\u4e3a\u4ed6\u4eec\u662f\u540c\u4e00\u4e2a\u4eba\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u4eba\u6bd4\u8f83\u795e\u5668\uff0c\u4e00\u4eba\u62b5\u4e24\u4eba**\uff0c\u6240\u6709\u6211\u4eec\u53ea\u8981\u628a\u6240\u6709\u6709\u5173\u8054\u7684\u4eba\u5f53\u6210\u540c\u4e00\u4e2a\u4eba\u5c31\u597d\u4e86\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\u5427\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+5;\nint n,x,y,fa[maxn],allv,m,lnk[maxn],v[maxn],tot;\nbool f[maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\ninline int getfa(int x){\n\tif (fa[x]==x) return x;\n\treturn fa[x]=getfa(fa[x]);\n}\nint main(){\n\tn=read(),allv=read(),m=read();\n\tfor (int i=1;i<=n;i++) fa[i]=i;\n\tfor (int i=1;i<=m;i++){\n\t\tx=read(),y=read();\n\t\tint fx=getfa(x),fy=getfa(y);\n\t\tif (fx==fy) continue;\n\t\tfa[fy]=fx;\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tif (!lnk[getfa(i)]) lnk[fa[i]]=++tot;\n\t\tv[lnk[fa[i]]]++;\n\t}\n\tf[0]=1;\n    for (int i=1;i<=tot;i++) \n    for (int j=allv<<1;j>=v[i];j--) f[j]|=f[j-v[i]];\n    for (int i=0;i<=allv;i++){    //\u6311\u7edd\u5bf9\u503c\u6700\u5c0f\n    \tif (f[allv-i]){printf(\"%d\",allv-i);return 0;}\n    \tif (f[allv+i]){printf(\"%d\",allv+i);return 0;}\n    }\n}\n```\n",
        "postTime": 1565786670,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u5f88\u591a\u4eba\u90fd\u662f\u7740\u91cd\u8bb2\u4e86\u4e00\u4e0b\u5e76\u67e5\u96c6\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u5f88\u591a\u4eba\u90fd\u4e0d\u61c2\u4e3a\u5565\u7528\u80cc\u5305\u5427\u3002\u3002\uff08\u6211\u5f53\u65f6\u4e5f\u60f3\u4e86\u5f88\u957f\u65f6\u95f4\u4e3a\u5565\u8981\u7528\u80cc\u5305\uff0c\u4e3a\u5565\u80cc\u5305\u5185\u5b58\u8981\u5f00\u52302*m )\n\n\u5b9a\u4e49$dp[j]$\u4e3a\u8981\u6c42\u6700\u591a\u9009\u53d6 $j$\u4e2a\u4eba\u7684\u65f6\u5019\u5b9e\u9645\u4e0a\u53ef\u4ee5\u9009\u53d6\u7684\u6700\u5927\u4eba\u6570\u3002 \n\n\u4ec0\u4e48\u610f\u601d\uff1f\u6309\u7167\u9898\u76ee\u6765\u8bb2\uff0c\u4e00\u7fa4\u5b9e\u529b\u76f8\u5f53\u7684\u4eba\u8981\u4e48\u88ab\u9009\uff0c\u8981\u4e48\u4e0d\u88ab\u9009\uff0c\u9009\u4e0d\u9009\u90fd\u662f\u7531\u4e0d\u9009\u4ed6\u7684\u72b6\u6001\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u90a3\u5c31\u8ddf\u80cc\u5305\u5dee\u4e0d\u591a\u4e86\u3002\n\n\u5047\u5982\u4e00\u5171\u6709 5 \u4e2a\u4eba\uff0c\u67094\u4e2a\u4eba\u5b9e\u529b\u76f8\u5f53\uff0c\u90a3\u4e48\n\n$dp[5]=4+1=5,dp[4]=4,dp[3]=1$\uff0c\n\n\u4e5f\u5c31\u662f\u8bf4\u8981\u6c42\u6700\u591a\u53ef\u4ee5\u9009\u53d6\u4e09\u4e2a\u65f6\u6211\u4eec\u53ea\u80fd\u9009\u53d6\u4e00\u4e2a\u4eba\uff0c\u8fd9\u4e2a\u6570\u503c\u5c31\u53ef\u4ee5\u7528\u80cc\u5305\u6765\u5bfb\u627e\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a\n\n```\nfor(int i=1;i<=cnt;i++)\nfor(int j=n;j>=b[i];j--)\ndp[j]=max(dp[j],dp[j-b[i]]+b[i]);\n```\n\n\n1. \u80cc\u5305\u7269\u54c1\u7684\u4e2a\u6570\u4e3a$cnt$\uff0c\u4e5f\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u6839\u8282\u70b9\u6570\uff08\u5b9e\u529b\u4e0d\u76f8\u5f53\u7684\u4eba\u6570\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u96c6\u5408\u7684\u4e2a\u6570\uff09\n\n2. $b[i]$\u662f\u7b2ci\u4e2a\u96c6\u5408\u7684\u603b\u4eba\u6570\u3002\n\n3. \u80cc\u5305\u5bb9\u91cf\u522b\u4eba\u90fd\u662f\u5199\u7684$2M$\uff0c\u56e0\u4e3a\u4e00\u822c\u662f\u8d85\u4e0d\u8fc7$2M$\u4eba\uff0c\u5b9e\u9645\u4e0a\u80cc\u5305\u5bb9\u91cf\u4e5f\u53ef\u4ee5\u5199$N$\uff0c\u56e0\u4e3a\u600e\u4e48\u8bf4\u9009\u53d6\u4eba\u6570\u4e5f\u4e0d\u53ef\u80fd\u8d85\u8fc7\u603b\u4eba\u6570(\u53ef\u80fd\u7a0d\u5fae\u6bd4$2M$\u6162\u4e00\u70b9)\u3002\n\n\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u8981\u7279\u5224\u4e00\u6ce2$M=0$\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\u76f4\u63a5\u8f93\u51fa0\u5c31\u53ef\u4ee5\u4e86\uff0c\u6216\u8005\u6700\u540e\u5bfb\u627eans\u7684\u65f6\u5019\u4ecei=0\u5f00\u59cb\u5bfb\u627e\u3002\n\ncode(\u5e26\u8bf4\u660e):\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll int\n#define pc(a) putchar(a)\n#define rg register\ninline void gc(char &a)\n{\n    a=getchar();\n    while(a<'0'||a>'9') a=getchar();\n}\nll read(){\n    char c;ll x=0;bool flag=0;c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') flag=1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+(c^48),c=getchar();}\n    return flag?-x:x;\n}\nvoid pr(ll x){\n    if(x<0){x=-x;pc('-');}\n    if(x>9) pr(x/10);\n    pc(x%10+48);\n}\n//--------\u5feb\u8bfb--------\nconst ll maxn=20005;\nconst ll maxx=0x3f3f3f3f;\nll dp[maxn],f[maxn],n,m,k,a[maxn],b[maxn],cnt,amin=maxx,ans=maxx;\nll find(ll x)\n{\n    return f[x]==x? x:f[x]=find(f[x]);\n}//\u5e76\u67e5\u96c6\nint main()\n{\n    n=read(),m=read(),k=read();\n    for(int i=1;i<=n;i++)\n    f[i]=i,a[i]=1;//\u5e76\u67e5\u96c6\u4eba\u6570\u9ed8\u8ba4\u4e3a1\n    for(int u,v,i=1;i<=k;i++)\n    {\n        u=read(),v=read();\n        if(find(u)!=find(v))\n        {\n            a[find(v)]+=a[find(u)];//\u4eba\u6570\u7d2f\u52a0\n            f[find(u)]=find(v);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    if(i==f[i])\tb[++cnt]=a[i];\n    //\u5bfb\u627e\u5e76\u67e5\u96c6\u96c6\u5408\u4e2a\u6570\uff0c\u5e76\u8bb0\u5f55\u603b\u4eba\u6570\n    for(int i=1;i<=cnt;i++)\n        for(int j=n;j>=b[i];j--)\n            dp[j]=max(dp[j],dp[j-b[i]]+b[i]);\t\n    for(int i=0;i<=n;i++)//\u5bfb\u627e\u6700\u63a5\u8fd1\u7684m\u7684ans\n        if(amin>abs(dp[i]-m))\n        amin=abs(dp[i]-m),ans=dp[i];\n    if(ans==maxx) pr(0);\n    else pr(ans);\n    return qwq;\n}\n```\n",
        "postTime": 1558877976,
        "uid": 128616,
        "name": "\u849f\u84bbzExNocs",
        "ccfLevel": 0,
        "title": "P2170 \u9009\u5b66\u9738"
    },
    {
        "content": "## \u601d\u8def\uff1a\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u540c\u4e00\u6c34\u5e73\u7684\u4eba\uff0c\u627e\u51fa\u4e2a\u6570\uff08\u7edf\u8ba1\uff1f\uff09\uff0c\u7136\u540e\u80cc\u5305\n\n------------\n### \u5e76\u67e5\u96c6\u90e8\u5206\n\u8fd9\u91cc\u53ea\u8981\u628a\u8be5\u5408\u5e76\u7684\u5408\u5e76\u6389\u5c31\u884c\u3002  \n**\u6ce8\u610f\uff1a\u5408\u5e76\u5b8c\u4ee5\u540e\uff0c\u8fd8\u8981\u628a\u6bcf\u4e00\u4e2a\u7684f\u66f4\u65b0\u4e00\u904d\uff0c\u4e0d\u7136\u4f1a\u6302\uff08\u6bd4\u59821\u7684f\u662f2\uff0c\u4f462\u7684f\u662f3\uff0c\u7edf\u8ba1\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u95ee\u9898\uff09**\n```cpp\nint f[20001];\nint find(int x)\n{\n    if(f[x]==x) return f[x];\n    f[x]=find(f[x]);\n    return f[x];\n}\nvoid merge(int x,int y)\n{\n    f[find(x)]=f[find(y)];\n}\n```\nmain\u51fd\u6570\u91cc\u7684\u90e8\u5206\uff1a\n```cpp\nfor(int i=1;i<=n;i++) f[i]=i;\nfor(int i=1;i<=k;i++)\n{\n    int x,y;\n    scanf(\"%d%d\",&x,&y);\n    if(find(x)!=find(y)) merge(x,y);\n}\nfor(int i=1;i<=n;i++) f[i]=find(f[i]);//\u66f4\u65b0f\n```\n------------\n### \u7edf\u8ba1\u90e8\u5206\n\u8fd9\u91cc\u53ea\u8981\u6309\u7167\u6876\u6392\u7684\u601d\u8def\u505a\u5c31\u53ef\u4ee5\u4e86\u3002\n```\nint t[20001];\nint cnt,a[20001];\n```\nmain\uff1a\n```\nfor(int i=1;i<=n;i++) t[f[i]]++;\nfor(int i=1;i<=n;i++)\n{\n    if(t[i])//\u8fc7\u6ee4\u4e0d\u9700\u8981\u76840\n    {\n        a[++cnt]=t[i];//\u6c34\u5e73\u4e00\u6837\u7684\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u96c6\u4f53\uff0c\u4ef7\u503c\u5c31\u662f\u4eba\u6570\n    }\n}\n```\n\n------------\n\n### \u80cc\u5305\u90e8\u5206\n\u8fd9\u5c31\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\u3002\n```\nbool u[20001];\nint ans;\n```\nmain\uff1a\n```\n    u[0]=1;\n    for(int i=1;i<=cnt;i++)//\u4e00\u5171cnt\u4e2a\u7269\u54c1\n    {\n        for(int j=n-a[i];j>=0;j--)\n        {\n            if(u[j]) u[j+a[i]]=1;\n        }\n    }\n```\n\n\n------------\n\n### \u6c42\u89e3\u90e8\u5206\n\u76f4\u63a5\u8fc7\u4e00\u904d\uff0c\u53cd\u6b63n\u53ea\u670920000\u3002  \n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k;\nint f[20001];\nint t[20001];\nint cnt,a[20001];\nbool u[20001];\nint ans;\nint find(int x)\n{\n    if(f[x]==x) return f[x];\n    f[x]=find(f[x]);\n    return f[x];\n}\nvoid merge(int x,int y)\n{\n    f[find(x)]=f[find(y)];\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=n;i++) f[i]=i;\n    for(int i=1;i<=k;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        if(find(x)!=find(y)) merge(x,y);\n    }\n    for(int i=1;i<=n;i++) f[i]=find(f[i]);\n    for(int i=1;i<=n;i++) t[f[i]]++;\n    for(int i=1;i<=n;i++)\n    {\n        if(t[i])\n        {\n            a[++cnt]=t[i];\n        }\n    }\n    u[0]=1;\n    for(int i=1;i<=cnt;i++)\n    {\n        for(int j=n-a[i];j>=0;j--)\n        {\n            if(u[j]) u[j+a[i]]=1;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(u[i]&&abs(ans-m)>abs(i-m)) ans=i;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1524409461,
        "uid": 75165,
        "name": "\u5f7c\u5cb8\u5f52\u822a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u8fd9\u9898\u771f\u662f\u6298\u78e8\u6b7b\u6211\u4e86\uff0c\u5148\u662f\u624b\u6b8b\u628al\u6253\u6210n\uff0c\u7136\u540e\u628ai\u8fbe\u6210\u4e86j\uff0c\u8c03\u8bd5\u4e86\u597d\u4e45\u597d\u4e45/\u54ed\u2026\u2026\u6211\u5927\u6982\u662f\u77f3\u4e50\u5fd7\u4e86\u5427\n\n\u8fd9\u9053\u9898\u7684\u7b97\u6cd5\u597d\u60f3\uff0c\u4f46\u662f\u5b9e\u73b0\u7684\u65f6\u5019\u6709\u5f88\u591a\u7ec6\u8282\u5bb9\u6613\u51fa\u9519\n\n\u6211\u770b\u4e86\u5404\u4f4d\u5927\u4f6c\u53d1\u8868\u7684\u9898\u89e3\uff0c\u90fd\u601d\u8def\u90fd\u975e\u5e38\u5de7\u5999\uff0c\u672c\u5c0f\u828b\u5934\u7684\u627e\u4eba\u6570\u65b9\u6cd5\u4e0d\u662f\u5f88\u4e00\u6837\uff0c\u662f\u5728\u5408\u5e76\u7684\u5faa\u73af\u91cc\u9762\u627e\uff0c\u5982\u679c\u5e76\u6ca1\u6709\u5408\u5e76\u7684\u8bdd\u5c31\u5408\u5e76\uff0c\u540c\u65f6\u628a\u4e24\u8005\u7684\u4eba\u6570\u52a0\u5230\u7238\u7238\u7684\u5934\u4e0a\uff0c\u7136\u540e\u5faa\u73af\u627e\u7956\u5148\u7684\u65f6\u5019\u76f4\u63a5\u8ba9dalao[l++]=\u4eba\u6570[i]\u5c31\u884c\u4e86\u3002\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u5f00\u59cb\u5927\u5bb6\u90fd\u662f\u4e00\u4e2a\u4eba\u5404\u6210\u4e00\u7ec4\uff0c\u6240\u4ee5\u6bcf\u4e00\u7ec4\u5f00\u59cb\u81ea\u5df1\u53eb\u81ea\u5df1\u7238\u7238\u7684\u65f6\u5019\uff0c\u7ec4\u91cc\u9762\u8d4b\u7684\u521d\u503c\u662f1\u3002\n\n\u7136\u540e\u770b\u770b\u80fd\u7ec4\u6210\u591a\u5c11\u79cd\u4eba\u6570\uff0c\u752801\u80cc\u5305\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u627e\u5168\u5566\uff01\n\n\u6700\u540e\uff0c\u7528\u80fd\u7ec4\u6210\u7684\u4eba\u6570\u53bb\u66f4\u65b0ans\u7684\u503c\uff0c\u627e\u51fa\u548cm\u76f8\u5dee\u6700\u5c0f\u7684\u503c\u5c31\u884c\u4e86\u3002\u5176\u4e2d\uff0cminn\u5b58\u7684\u662f\u548cm\u7684\u6700\u5c0f\u5dee\u503c\uff0cans\u5b58\u7684\u662f\u6700\u5c0f\u5dee\u503c\u7684\u60c5\u51b5\u4e0b\u9009\u7684\u5b66\u9738\u6570\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u4e2a\u4eba\u770b\u7740\u6709\u6ce8\u91ca\u7684\u4ee3\u7801\u611f\u89c9\u6709\u70b9\u4e71\uff0c\u6240\u4ee5\u5c31\u628a\u6ce8\u91ca\u6d88\u4e86\uff0c\u4e0d\u77e5\u9053\u5927\u5bb6\u600e\u4e48\u770b\uff0c\u5927\u90e8\u5206\u601d\u8def\u90fd\u5199\u5230\u4e0a\u9762\u5566\uff01\uff09\n\n```cpp\n#include<iostream>\n#include<stdlib.h>\n#include<climits>\nusing namespace std;\nint p[20001],f[20001],ff[20001],dalao[20001];\nint father(int a) {\n    if(f[a]!=a)\n        f[a]=father(f[a]);\n    return f[a];\n}\nvoid union_(int a,int b) {\n    int f1=father(a),f2=father(b);\n    if(f1!=f2)\n        f[f1]=f2,p[f2]+=p[f1];\n}\nint main() {\n    int n,m,k,l=0,ans,minn=INT_MAX;\n    cin>>n>>m>>k;\n    for(int i=1; i<=n; i++)\n        p[i]=1,f[i]=i;\n    for(int i=1; i<=k; i++) {\n        int a,b;\n        cin>>a>>b;\n        union_(a,b);\n    }\n    ff[0]=true;\n    for(int i=1; i<=n; i++)\n        if(f[i]==i)\n            dalao[++l]=p[i];  //\u653e\u5165\u80cc\u5305\n    for(int i=1; i<=l; i++)\n        for(int j=n; j>=dalao[i]; j--)\n            if(!ff[j]&&ff[j-dalao[i]])\n                ff[j]=true;\n    for(int i=0; i<=n; i++)\n        if(ff[i]&&abs(i-m)<minn) minn=abs(i-m),ans=i;\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1508238940,
        "uid": 48392,
        "name": "Miri",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "01\u80cc\u5305+\u5e76\u67e5\u96c6\u3002\u548c\u642d\u914d\u8d2d\u4e70\u7c7b\u4f3c\u3002\n\n\u56e0\u4e3a\u9009\u4e86\u4e00\u4e2a\u4eba\uff0c\u5176\u4ed6\u5b9e\u529b\u76f8\u5f53\u7684\u4eba\u4e5f\u5fc5\u987b\u9009\uff0c\u662f\u53cc\u8fb9\u4f9d\u8d56\u5173\u7cfb\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u5176\u770b\u6210\u4e00\u4ef6\u7269\u54c1\u3002\n\n\u56e0\u4e3a\u80cc\u5305\u7684\u5bb9\u91cf\u4e0d\u5b9a\uff0c\u8981\u6c42\u6700\u4e3a\u63a5\u8fd1m\uff0c\u8003\u8651\u5176\u6700\u5c0f\u4e3a0\uff0c\u6700\u5927\u4e3an\uff0c\u6240\u4ee5**\u80cc\u5305\u5bb9\u91cf\u5f00\u5230n**\uff0cdp\u4e4b\u540e\u67e5\u627em+1\u5230n\u4e4b\u95f4abs(dp[i]-m)\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u4e0e(m-dp[m])\u6bd4\u8f83\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int maxn=20000+10;\nint father[maxn],c[maxn],dp[maxn];\nint n,m,k;\nint find(int x)\n{\n    if(father[x]<0){return x;}\n    else{father[x]=find(father[x]);}\n    return father[x];\n}\nvoid union_set(int x,int y)\n{\n    x=find(x);y=find(y);\n    if(x==y){return;}\n    else if(-father[x]>-father[y])\n    {\n        father[x]+=father[y];\n        father[y]=x;\n    }\n    else\n    {\n        father[y]+=father[x];\n        father[x]=y;\n    }\n}\nint main()\n{\n    int i,j,u,v,tot=0,ans1,ans2;\n    cin>>n>>m>>k;\n    memset(father,-1,sizeof(father));\n    for(i=1;i<=k;i++){scanf(\"%d%d\",&u,&v);union_set(u,v);}\n    for(i=1;i<=n;i++){if(father[i]<0){c[++tot]=-father[i];}}\n    for(i=1;i<=tot;i++)\n    {\n        for(j=n;j>=c[i];j--)\n        {\n            dp[j]=max(dp[j],dp[j-c[i]]+c[i]);\n        }\n    }\n    ans1=abs(m-dp[m]);ans2=abs(m-dp[m+1]);\n    for(i=m+1;i<=n;i++)\n    {\n        ans2=min(ans2,abs(m-dp[i]));\n    }\n    if(ans1<=ans2){cout<<dp[m];}\n    else{cout<<m+ans2;}\n    return 0;\n}\n```",
        "postTime": 1479364053,
        "uid": 17913,
        "name": "\u9752\u77f3\u5df7",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u5f88\u7b80\u5355\u7684\u80cc\u5305\u95ee\u9898\u4e86 \u628a\u5b9e\u529b\u76f8\u540c\u7684\u4eba\u6346\u7ed1\u4e58\u4e00\u4e2a\u7269\u54c1  \u6743\u91cd\u4e3a\u4eba\u6570\u4e4b\u548c \u5982\u679c\u6ca1\u6709\u4eba\u548c\u4ed6\u5b9e\u529b\u76f8\u540c\u5219\u6743\u91cd\u4e3a1\n\n\u6700\u540e\u5c31\u662f\u4e00\u9053\u88c5\u7bb1\u95ee\u9898\u4e86\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nint n,m,k,x,y,sum=0,k1=0;\nint a[20010],head[200010];\nbool f[20010],vis[20010];\nint ans=0x7f7f7f,kk;\nstruct node{\n    int to,next;\n}e[100010];\nvoid add(int u,int v)\n{\n    e[++k1].next=head[u];\n    e[k1].to=v;\n    head[u]=k1;\n}\nint dfs(int x)\n{\n    vis[x]=true;int sum=1;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(!vis[v])\n        sum+=dfs(v);\n    }\n    return sum;\n}\nint main()\n{\n    memset(f,false,sizeof(f));\n    memset(vis,false,sizeof(vis));\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        add(x,y),add(y,x);\n    }\n    for(int i=1;i<=n;i++) if(!vis[i])\n    a[++sum]=dfs(i);\n    f[0]=true;\n    for(int i=1;i<=sum;i++)\n     for(int j=n;j>=1;j--)\n      if(j-a[i]>=0&&f[j-a[i]]) f[j]=true;\n    for(int i=0;i<=n;i++)   \n     if(f[i]&&abs(i-m)<ans) ans=abs(i-m),kk=i;\n    printf(\"%d\",kk); \n    return 0;\n}\n```",
        "postTime": 1478091334,
        "uid": 22060,
        "name": "Memorize",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\uff08\u8fd9\u4e0d\u662fPoj 1112 Team Them Up!\u8d85\u7ea7\u5f31\u5316\u7248\u4e48\u3002\u3002\u3002\uff09\n\n\u7531\u9898\u610f\u53ef\u5f97\uff0c\u5982\u679c\u67d0\u4e9b\u4eba\u56e0\u4e3a\u5173\u7cfb\u800c\u8fde\u63a5\u5728\u4e86\u4e00\u8d77\uff0c\u8981\u4e48\u90fd\u4e0d\u9009\uff0c\u8981\u4e48\u90fd\u9009\u3002\n\n\u7136\u540e\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fd9\u4e2a\u201c\u5173\u7cfb\u201d\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u96c6\u5408\u5f97size\u4f5c\u4e3a\u8d21\u732e\u3002\n\n\u7136\u540e\u8fd9\u5c31\u662f\u4e00\u4e2a\u5224\u5b9a\u602701\u80cc\u5305\u5f97\u7ecf\u5178\u6a21\u578b\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u96c6\u5408\u9009\u6216\u4e0d\u9009\u662f\u5426\u53ef\u884c\u8fdb\u884cdp\u3002\n\n\u6eda\u52a8\u6570\u7ec4\u538b\u4e00\u4e0b\u7a7a\u95f4\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\u4e0a\u754c\u662fn^2\u7684\u6837\u5b50\u3002\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n\nusing namespace std;\n\nconst int N = 20010;\n\nint fa[N], sz[N];\n\nint get(int x) {\n    return x == fa[x] ? x : fa[x] = get(fa[x]);\n}\n\nint chose[N], id, f[2][N * 4], p;\n\nint n, m, k;\n\nint main() {\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for(int i = 1 ; i <= n ; ++ i) {\n        fa[i] = i;\n    }\n    for(int i = 1, x, y ; i <= k ; ++ i) {\n        scanf(\"%d%d\", &x, &y);\n        fa[get(x)] = get(y);\n    }\n    for(int i = 1 ; i <= n ; ++ i) {\n        ++ sz[get(i)];\n    }\n    for(int i = 1 ; i <= n ; ++ i) {\n        if(i == get(i)) {\n            chose[++ id] = i;\n        }\n    }\n    f[p][N + 0] = 1;\n    for(int i = 1 ; i <= id ; ++ i) {\n        p ^= 1;\n        for(int j = -20000 ; j <= 20000 ; ++ j) {\n            f[p][N + j] = f[p ^ 1][N + j - sz[chose[i]]] | f[p ^ 1][N + j];\n        }\n    }\n    for(int i = 0 ; i <= 20000 ; ++ i) {\n        if(f[p][N + m - i]) {\n            printf(\"%d\\n\", m - i);\n            break;\n        } else if(f[p][N + m + i]) {\n            printf(\"%d\\n\", m + i);\n            break;\n        }\n    }\n}\n```",
        "postTime": 1508293225,
        "uid": 47111,
        "name": "nekko",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "1.\u8fd9\u9898\u662f\u5bf9\u5e76\u67e5\u96c6\u548c01\u80cc\u5305\u7684\u7efc\u5408\u8fd0\u7528\n\n2.\u6211\u4eec\u5148\u901a\u8fc7\u5e76\u67e5\u96c6\u5c06\u6240\u6709\u5b9e\u529b\u76f8\u8fd1\u7684\u5b66\u751f\u5206\u6210\u4e00\u4e2a\u4e00\u4e2a\u7ec4\uff0c\u6bcf\u4e2a\u7ec4\u7684\u4eba\u6570\u5c31\u76f8\u5f53\u4e8e01\u80cc\u5305\u4e2d\u7269\u54c1\u7684\u4ef7\u503c\n\n3.\u8fd9\u9898\u7a0d\u5fae\u533a\u522b\u88f8\u768401\u80cc\u5305\u7684\u5730\u65b9\u5c31\u662f\u5b83\u53d6\u5f97\u662f\u6700\u63a5\u8fd1m\u7684\u503c\uff0c\u800c\u975e\u5c0f\u4e8e\u7b49\u4e8em\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u7684dp\u6570\u7ec4\u5224\u65ad\u7684\u5fc5\u987b\u662f\u4e0em\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u7b2c\u4e8c\u91cd\u5faa\u73af\u4e5f\u56e0\u6b64\u53d8\u4e3a\u4ecen\u5f00\u59cb\uff0c\u800c\u975e\u4ecem\u5f00\u59cb\n\n\u4ee5\u4e0b\u4e3a\u4ee3\u7801\uff08\u7531\u4e8e\u672c\u4eba\u5b9e\u529b\u6709\u9650\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5197\u6742\u7684\u8bed\u53e5\u8fd8\u671b\u89c1\u8c05\uff09\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int MAXN=20000+2;\nint par[MAXN],rank[MAXN];\nint ha[MAXN],fz[MAXN];\nint dp[MAXN];\nint n,m,k;\nint find(int x){\n         if(par[x]==x) return x;\n         else return par[x]=find(par[x]);\n}\nvoid unite(int x,int y){\n         x=find(x);\n         y=find(y);\n         if(x==y) return;\n         if(rank[x]<rank[y]) par[x]=y;\n         else{\n                  if(rank[x]==rank[y]) rank[x]++;\n                  par[y]=x;\n          }\n}\nint main(){\n          cin>>n>>m>>k;\n          for(int i=1;i<=n;i++) par[i]=i;\n          for(int i=1;i<=k;i++){\n                   int a,b;\n                   cin>>a>>b;\n                   if(find(a)!=find(b)) unite(a,b);\n          }\n         for(int i=1;i<=n;i++){\n              int k=find(i);\n                  ha[k]++;\n         }\n         int js=0;\n         for(int i=1;i<=n;i++){\n                  if(ha[i]!=0){\n                          fz[js]=ha[i];\n                          js++;\n                  }\n          }\n          for(int i=0;i<js;i++){\n                   for(int j=n;j>=fz[i];j--){\n                            if(abs(m-dp[j])>abs(m-dp[j-fz[i]]-fz[i])) \n                                 dp[j]=dp[j-fz[i]]+fz[i];\n                   }\n          }\n          int mn=99999999;\n          for(int i=0;i<=n;i++)\n                   if(abs(m-dp[i])<abs(m-mn)) mn=dp[i];\n          cout<<mn<<endl;\n          return 0;\n}\n```",
        "postTime": 1506513780,
        "uid": 28270,
        "name": "wwq123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u5148\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u5757\uff0c\u7136\u540e\u80cc\u5305\u3002\uff08\u548c\u5404\u4f4ddalao\u601d\u8def\u4e00\u6837QwQ\uff09\n\n\u4f46\u662f\u8003\u8651\u4ee5\u4e0b\u6570\u636e\uff1a\n\n```\n20000 10000 0\n```\n\n\u8fd9\u6837\u80fd\u5361\u6389\u4e00\u4e9b\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u8fde\u901a\u5757\u505a0/1\u80cc\u5305\u7684\u7b97\u6cd5\uff08\u8f7b\u677e\u5361\u6210$\\Theta(n^2)$\uff09\u3002\n\n\u4e3a\u4e86\u4e0d\u88ab\u5361\uff0c\u6211\u5c06\u540c\u6837\u5927\u5c0f\u7684\u8fde\u901a\u5757\u5f52\u5230\u4e00\u8d77\uff0c\u641e\u4e2a\u591a\u91cd\u80cc\u5305\uff0c\u52a0\u4e0a\u4e8c\u8fdb\u5236\u5206\u89e3\u4f18\u5316\uff0c\u53ef\u4ee5\u505a\u5230$\\Theta(nlogn)$\u5230$\\Theta(n\\sqrt{n})$\uff08\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\u4e0d\u4f1a\u7b97\uff09\n\n\u7136\u540e\uff0c\u6211\u91c7\u7528\u7684\u662f\u5148\u4e8c\u8fdb\u5236\u5206\u89e3\u5b8c\u518d\u8dd10/1\u80cc\u5305\uff0c\u800c\u4e0d\u662f\u8fb9\u8dd1\u80cc\u5305\u8fb9\u5206\u89e3\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u79cd\u7269\u54c1\u6700\u591a\u53ea\u67092\u4e2a\uff0c\u574f\u5904\u662f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u6709\u53d8\u5316\u3002\uff08\u8be5\u6700\u574f$\\Theta(n\\sqrt{n})$\u8fd8\u662f$\\Theta(n\\sqrt{n})$\uff09\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(nlogn)$\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nvoid chkmin(int& a,int b)\n{\n\tif(b<a)\n\t{\n\t\ta = b;\n\t}\n}\n\nint st[20005];\nint siz[20005];\n\nint getfa(int x)\n{\n\treturn st[x]==x?x:st[x]=getfa(st[x]);\n}\n\nvoid unio(int a,int b)\n{\n\tif(getfa(a)!=getfa(b))\n\t{\n\t\tif(siz[st[a]] > siz[st[b]])\n\t\t{\n\t\t\tsiz[st[a]] += siz[st[b]];\n\t\t\tst[st[b]] = st[a];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsiz[st[b]] += siz[st[a]];\n\t\t\tst[st[a]] = st[b];\n\t\t}\n\t}\n}\n\nint ni[20005];\nint dp[20005];\n\nint main()\n{\n\tint n,m,k;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\t\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tsiz[i] = 1;\n\t\tst[i] = i;\n\t}\n\t\n\tfor(int i=1; i<=k; ++i)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tunio(a,b);\n\t}\n\t\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tif(siz[getfa(i)])\n\t\t{\n\t\t\t++ni[siz[st[i]]];\n\t\t\tsiz[st[i]] = 0;\n\t\t}\n\t}\n\t\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tfor(int j=0; ni[i]>(1<<j); ++j)\n\t\t{\n\t\t\t++ni[i*(1<<j)];\n\t\t\tni[i] -= 1<<j;\n\t\t}\n\t\tif(ni[i]>1)\n\t\t{\n\t\t\tint tmp = ni[i]-1;\n\t\t\t++ni[i*(ni[i]-1)];\n\t\t\tni[i] -= tmp;\n\t\t}\n\t}\n\t\n\tint v = min(n,m*2);\n\tdp[0] = 1;\n\t\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tfor(int k=1; k<=ni[i]; ++k)\n\t\t{\n\t\t\tfor(int j=v-i; j>=0; --j)\n\t\t\t{\n\t\t\t\tif(dp[j])\n\t\t\t\t{\n\t\t\t\t\tdp[j+i] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint ans = 0;\n\tfor(int i=0; i<=n; ++i)\n\t{\n\t\tif(dp[i])\n\t\t{\n\t\t\tif(abs(m-i)<abs(m-ans))\n\t\t\t{\n\t\t\t\tans = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprintf(\"%d\",ans);\n}\n```\n\n\u6700\u540e\u4e00\u60f3\uff0c\u52a0\u5355\u8c03\u961f\u5217\u4f18\u5316\u80fd\u505a\u5230\u6700\u597d\u60c5\u51b5$\\Theta(n)$\u7684\u6837\u5b50\u2026\u2026emmmmm\u2026\u2026\n\n\u2026\u2026\u53cd\u6b63\u5927\u5bb6\u6700\u574f\u90fd$\\Theta(n\\sqrt{n})$",
        "postTime": 1563970809,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5927\u6982\u5206\u4e3a\u4e24\u5757\uff1a\u4e00\u5757\u662f\u8054\u901a\u5757\u95ee\u9898\uff0c\u53e6\u4e00\u5757\u662f\u80cc\u5305\u95ee\u9898\uff0c\u90a3\u4e48\u6211\u5206\u522b\u8bb2\u4e00\u4e2a\u65b0\u601d\u8def\u3002\n\n------------\n\n1\u3001\u8054\u901a\u5757\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u60f3\u5230\u7684\u5c31\u662f\u5e76\u67e5\u96c6\u3002\u7136\u800c\u5b9e\u9645\u4e0a\u65b9\u6cd5\u5e76\u4e0d\u6b62\u8fd9\u4e00\u79cd\uff0cdfs\u548cbfs\u90fd\u53ef\u4ee5\u3002\u8fd9\u91cc\u6211\u7528dfs\uff1a\u5148\u628a\u5b9e\u529b\u76f8\u5f53\u7684\u540c\u5b66\u4e24\u4e24\u5efa\u8fb9\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u672a\u88ab\u6807\u8bb0\u7684\u8282\u70b9\uff08\u540c\u5b66\uff09\uff0c\u505a\u4e00\u904ddfs\uff0c\u7136\u540e\u628a\u6240\u6709\u6269\u5c55\u7684\u8282\u70b9\u90fd\u6807\u8bb0\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6c42\u51fa\u4e86\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u3002\n\n------------\n\n2\u3001\u80cc\u5305\u95ee\u9898\u3002\u8fd9\u91cc\u6211\u8bb2\u4e00\u4e2a\u795e\u5947\u7684\u53d1\u73b0\uff1a\u51e0\u4e4e\u6240\u6709\u80cc\u5305\u6a21\u578b\uff0c\u90fd\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u4f18\u5316\uff0c\u4f7f\u5e38\u6570\u53d8\u4e3a1/32\u3002\u90a3\u4e48\uff0c\u5177\u4f53\u600e\u4e48\u641e\u5462\uff1f\u6211\u4eec\u5f00\u4e00\u4e2abitset b\uff0c\u8ba9\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u4e00\u4e2a\u4eba\u6570\u3002\u6211\u4eec\u628a\u8054\u901a\u5757\u770b\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u6bcf\u8bfb\u5230\u4e00\u4e2a\u8054\u901a\u5757\u7684\u5927\u5c0fSi\uff0c\u6211\u4eec\u5c31\u8ba9b\u5de6\u79fbSi\u4f4d\u5e76\u4f4d\u4e0e\u5b83\u81ea\u5df1\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6240\u6709\u53ef\u4ee5\u62fc\u6210\u7684\u4eba\u6570\u96c6\u5408\u3002\n\n------------\n\n\u6700\u540e\u4e00\u6b65\u5c31\u662f\u626b\u4e00\u904d\uff0c\u627e\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u90a3\u4e2a\u8f93\u51fa\u3002\n\n------------\n\n\u9644AC\u4ee3\u7801ORZ\n```cpp\n#include<bits/stdc++.h>\n#define N 20005\n#define M 200005\nusing namespace std;\nint n,m,k,x,y,tot,ver[M],nxt[M],head[N],c[N],cnt,V[N],ans,minn=INT_MAX;\nvoid add(int x,int y){\n    ver[++tot]=y;nxt[tot]=head[x];head[x]=tot;\n}\nvoid dfs(int v,int col){\n    if(c[v])return;\n    c[v]=col;\n    for(int i=head[v];i;i=nxt[i]){\n        int y=ver[i];\n        dfs(y,col);\n    }\n}\nbitset<20005>b;\nint main(){\n    ios::sync_with_stdio(0);\n    cin>>n>>m>>k;\n    while(k--){\n        cin>>x>>y;\n        add(x,y);\n        add(y,x);\n    }\n    for(int i=1;i<=n;++i){\n        if(c[i])continue;\n        dfs(i,++cnt);\n    }\n    for(int i=1;i<=n;++i){\n        V[c[i]]++;\n    }\n    b[0]=1;\n    for(int i=1;i<=cnt;++i){\n        b|=b<<V[i];\n    }\n    for(int i=0;i<=n;++i){\n        if(b[i]&&abs(i-m)<minn){\n            ans=i;\n            minn=abs(i-m);\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1541087503,
        "uid": 112316,
        "name": "Linne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "# \u9009\u5b66\u9738\uff08\u5e76\u67e5\u96c6+\u80cc\u5305\uff09\n\n> \u521a\u8003\u5b8c\u521d\u8d5b\u5c31\u6765\u6c34\u4e00\u53d1\u9898\u89e3$qwq$\uff0c\u627e\u4e86\u4e00\u9053~~\u6c34\u7206\u7684~~\u9898\n\n\u6ca1\u90a3\u4e48\u96be\uff0c\u5c31\u662f\u628a\u5b9e\u529b\u76f8\u7b49\u7684\u4eba\u653e\u5230\u4e00\u4e2a\u5e76\u67e5\u96c6\u91cc\uff0c\u7136\u540e\u8dd1\u4e00\u8fb9\u5bb9\u91cf\u4e3a$2\\times m$\u7684\u80cc\u5305\uff0c\u8bb0\u4f4f\u8981\u628a\u6bcf\u4e2a\u5e76\u67e5\u96c6\u7684\u5bb9\u91cf\u8bb0\u5f55\u4e0b\u6765\uff0c\u5177\u4f53\u53ef\u4ee5\u7528size\u6570\u7ec4\uff0c\u7136\u540e\u8dd1\u4e00\u8fb901\u80cc\u5305\u5c31\u53ef\u4ee5\u4e86\n\n\u5177\u4f53\u90fd\u653e\u5230\u4ee3\u7801\u91cc\u4e86\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5DD\u6211\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nconst int N = 40000;\nint n,m,k;\nvoid read(int &x) {\n\tint f=1;\n\tx=0;\n\tchar s=getchar();\n\twhile(s<'0'||s>'9') {\n\t\tif(s=='-') f=-1;\n\t\ts=getchar();\n\t}\n\twhile(s>='0'&&s<='9') {\n\t\tx=x*10+s-'0';\n\t\ts=getchar();\n\t}\n\tx*=f;\n}\nint fa[N],size[N],col[N],tot,minn,dp[N+10];\nint find(int x) {\n\tif(fa[x]==x) return x;\n\telse return fa[x]=find(fa[x]);\n}\nvoid uin(int x,int y) {\n\tint k=find(x),j=find(y);\n\tif(k!=j) {\n\t\tfa[k]=j;\n\t\tsize[j]+=size[k];\n\t}\n}//\u5e76\u67e5\u96c6+\u8def\u5f84\u538b\u7f29 \nint main() {\n\tread(n),read(m),read(k);\n\tfor(int i=1; i<=n; i++)fa[i]=i,size[i]=1;\n\tfor(int i=1; i<=k; i++) {\n\t\tint a,b;\n\t\tread(a),read(b);\n\t\tuin(a,b);//\u6b21\u4e3a\u5408\u5e76\u5230\u4e00\u4e2a\u5e76\u67e5\u96c6\u91cc\u7684\u64cd\u4f5c \n\t}\n\tmemset(dp,0x3f,sizeof(dp));\n\tfor(int i=1; i<=n; i++)\n\t\tif(fa[i]==i) col[++tot]=size[i];//\u5bfb\u627e\u5e76\u67e5\u96c6\u5927\u5c0f\uff0ctot\u4e3a\u5e76\u67e5\u96c6\u4e2a\u6570 \n\tdp[0]=0;\n\tfor(int i=1; i<=tot; i++) {\n\t\tfor(int j=m+m; j>=col[i]; j--) {\n\t\t\tdp[j]=min(dp[j],dp[j-col[i]]+col[i]);\n\t\t}\n\t}//01\u80cc\u5305\u90e8\u5206 \n\tint l=m,r=m;\n\tint ans=0x7fffffff;\n\twhile(l>=1&&r<=2*m) {\n\t\tif(dp[l]!=1061109567) {\n\t\t\tans=dp[l];\n\t\t\tprintf(\"%d\",ans);\n\t\t\treturn 0;\n\t\t}\n\t\tif(dp[r]!=1061109567) {\n\t\t\tans=dp[r];\n\t\t\tprintf(\"%d\",ans);\n\t\t\treturn 0;\n\t\t}\n\t\tl--,r++;\n\t}//\u8fd9\u4e00\u6bb5\u662f\u6309\u9898\u76ee\u8981\u6c42\u627e\u6700\u5c11\u7684\u5b66\u9738 \n\tputs(\"0\");//\u8fd9\u4e00\u53e5\u8bdd\u662f\u4e3a\u4e86\u4e0d\u9009\u5b66\u9738\u800c\u7528\u7684 \n}\n```\n\u7ba1\u7406\u5927\u5927\u6c42\u8fc7",
        "postTime": 1539431344,
        "uid": 78228,
        "name": "\u6211\u6ca1\u6709\u5c0f\u767d",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u89e3\uff1a\n\u8fd9\u9898\u4ed4\u7ec6\u601d\u8003\u8fd8\u662f\u6709\u7ed3\u679c\u7684 \n\n\u6839\u636e\u9898\u610f\u53ef\u5f97\uff0c\u5bf9\u4e8e\u5b9e\u529b\u76f8\u5f53\u7684\u4e00\u7fa4\u4eba\uff0c\u8981\u4e48\u4e0d\u9009\uff0c\u8981\u4e48\u90fd\u9009  \n\u6211\u4eec\u5c31\u628a\u8fd9\u4e00\u7fa4\u4eba\u770b\u6210\u4e00\u4e2a\u7269\u54c1\uff0c  \n\u8dd1\u4e00\u8fb9\u80cc\u5305\uff0c\u4f53\u79ef\u8303\u56f4\u4e3a 0->m*2  \n\u7136\u540e\u679a\u4e3e\u6240\u6709\u4f53\u79ef\uff0c\u627e\u5230\u6700\u5408\u9002\u7684\u7b54\u6848  \n\n\n[I like \u6ce1\u6ce1\u7cd6](http://www.cnblogs.com/adelalove/p/8696354.html)",
        "postTime": 1522667944,
        "uid": 83546,
        "name": "\u4f9d\u4f9d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "# \u6211\u8fd9\u91cc\u63d0\u51fa\u4e00\u79cd\u4f18\u5316\u53ef\u884c\u6027DP\u7684\u65b9\u6848,\u57fa\u672c\u601d\u8def\u8ddf\u697c\u4e0b\u7684dalao\u5dee\u4e0d\u591a.\n\n## \u95ee\u9898\u5206\u6790:\n\n\u7531\u4e8e\u6709\u4e9b\u4eba\u6c34\u5e73\u76f8\u540c,\u6240\u4ee5\u5982\u679c\u52a0\u5165\u4e86\u4e00\u4e2a\u8fd9\u4e2a\u6c34\u5e73\u7684\u4eba,\u5219\u4e00\u5b9a\u9009\u4e0e\u4ed6\u6c34\u5e73\u76f8\u540c\u7684,\u6240\u4ee5,\u5e76\u67e5\u96c6.\n\n\u4e4b\u540e\u5c31\u662f\u80fd\u4e0d\u80fd\u53d6\u5230 ** i ** \u4e2a\u4eba,\u5373\u53ef\u884c\u6027DP.\n\n## \u57fa\u672c\u601d\u8def:\n\n\u8f93\u5165,\u76f8\u540c\u6c34\u5e73\u7684\u5c31\u52a0\u5230\u5e76\u67e5\u96c6\u91cc\u9762,\u6b63\u5e38\u7684\u5e76\u67e5\u96c6.\n\n\u7136\u540e,\u7edf\u8ba1\u9009\u4e00\u4e2a\u7236\u8282\u70b9\u9700\u8981\u540c\u65f6\u9009\u591a\u5c11\u4e2a\u4eba.\n\n\u6392\u5e8f,\u4ece\u5c0f\u5230\u5927,\u4e3a\u4e4b\u540e\u7684DP\u505a\u51c6\u5907(\u8fd9\u8fb9\u4e0d\u6392\u53ef\u80fd\u4f1a\u6162)[1];\n\n\u53ef\u884c\u6027DP,\u770b\u770b\u80fd\u8fbe\u5230\u4ec0\u4e48\u72b6\u6001[2].\n\n## \u5c0f\u4f18\u5316,\u5c0f\u7ec6\u8282:\n\n[1] : \u6392\u5e8f\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u5806 0 ,\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u5f97\u628a\u8fd9\u4e9b 0 \u8fc7\u6ee4\u51fa\u53bb.\u5177\u4f53\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\nsort(px+1,px+n+1);//px\u8bb0\u5f55\u7684\u662f\u6bcf\u4e00\u4e2a\u8282\u70b9\u5982\u679c\u9009,\u5219\u5fc5\u987b\u9009\u7684\u5176\u4ed6\u4eba\u7684\u603b\u4eba\u6570(\u54ce....\u6211\u8fd9\u8bed\u6587,\u51d1\u6d3b\u7740\u770b\u5427)\nfor(po=1;px[po]==0;po++);\n```\n\u8fd9\u6837\u5904\u7406\u5b8c\u4e86, po \u6307\u5411\u7684\u4f4d\u7f6e\u5c31\u662f\u7b2c\u4e00\u4e2a\u4e0d\u662f 0 \u7684\u6570.\n\n[2] \u72b6\u6001\u8fd9\u4e2a\u65b9\u7a0b\u8fd8\u662f\u6bd4\u8f83\u57fa\u672c\u7684,\u72b6\u6001\u8f6c\u6362\u7684\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\nfor(;po<=n;po++)\n    for(int i=2*m;i>=px[po];i--)\n        if(ans[i-px[po]])ans[i]=1;\n```\n\u5f53\u7136,\u5982\u679c ans \u6570\u7ec4\u521d\u59cb\u503c\u5747\u4e3a 0 \u7684\u8bdd\u6700\u540e\u662f\u4e0d\u4f1a\u6709\u89e3\u7684,\u6240\u4ee5\n\n```cpp\nans[0]=1;//\u53d60\u4e2a\u4eba\u5f53\u7136\u662f\u53ef\u4ee5\u8fbe\u5230\u7684.\n```\n\u4f46\u662f\u8fd9\u6837\u7684\u8bdd,\u6700\u540e\u8fd8\u8981\u626b\u4e00\u4e0b,\u6240\u4ee5,\u6211\u4eec\u5728\u8fd9\u91cc\u76f4\u63a5\u8bb0\u5f55\n\n```cpp\nif(ans[i]==1){if( jdz(m-i) < jdz(m-rans))rans=i;}//rans \u4e3a realanswer \u7684\u7f29\u5199, jdz(x) \u662f\u4e00\u4e2a\u8fd4\u56de x \u7684\u7edd\u5bf9\u503c\u7684\u51fd\u6570.\n```\n** \u4e0b\u9762\u5c31\u662f\u6211\u7684\u72ec\u5bb6\u4f18\u5316\u4e86 **\n\n\u9996\u5148,\u6211\u4eec\u8003\u8651:\u5047\u5982\u6211\u73b0\u5728\u7684\u6700\u4f18\u7edd\u5bf9\u503c\u5df2\u7ecf\u662f 0 \u4e86.\u90a3\u4e48\u5c31\u4e0d\u7528\u518d\u641c\u7d22\u4e86.\n\n\u73b0\u5728\u8003\u8651\u63a8\u5e7f\u8fd9\u4e2a\u6982\u5ff5 : \u5982\u679c\u6211\u73b0\u5728\u7684\u6700\u4f18\u79c0\u7684\u7edd\u5bf9\u503c\u4e3a nextem ,\u90a3\u4e48\u5982\u679c\u4ea7\u751f\u66f4\u4f18\u79c0\u7684\u89e3\u7684\u8bdd,\u4e00\u5b9a\u5728 ( m-nextem,m+nextem) \u8fd9\u4e2a\u533a\u95f4\u91cc\u9762.\u6240\u4ee5,\u5bf9\u53ef\u884c\u6027 DP \u505a\u5982\u4e0b\u4f18\u5316:\n\n- \u628a\u641c\u7d22\u533a\u95f4\u5b9a\u4e3a (m-nextem,m+nextem)\n\n- \u968f\u65f6\u66f4\u65b0 nextem.\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\nfor(;po<=n;po++)\n    for(int i=m+nextem-1;i>=px[po] && i>m-nextem;i--){//\u641c\u7d22\u533a\u95f4\u7684\u4f18\u5316\n        if(ans[i-px[po]])ans[i]=1;\n        if(ans[i]==1){\n                    nextem=m-i;//\u66f4\u65b0 nextem.\n                    if( jdz(m-i) < jdz(m-rans))rans=i;\n                }\n    }\n```\n## \u5168\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,fa[20010],x,y,px[20010],ans[40010],nextem,rans=0x7fffffff;//\u6ce8\u610fans\u5f00\u4e24\u500d\u5927,\u5f53\u7136\u5f00\u4e00\u500d\u4e5f\u53ef\u4ee5.\u4f46\u662f\u6211\u7684\u7a0b\u5e8f\u91cc\u9762\u521d\u59cbnextem=m,\u6240\u4ee5\u8981\u5f00\u4e24\u500d.\nbool have[20010];int po=1;\nint Find(int x){int ef=x,temp;\n    while(fa[ef]!=0)ef=fa[ef];\n    while(x!=ef){temp=fa[x];fa[x]=ef;x=temp;}\n}\nvoid Union(int x,int y){x=Find(x),y=Find(y);if(x==y)return;fa[x]=y;}\nint jdz(int x){    return (x < 0 ? -x : x);}\nint main(){\n    cin>>n>>m>>k;nextem=m;\n    for(int i=1;i<=k;i++){scanf(\"%d%d\",&x,&y);Union(x,y);}\n    for(int i=1;i<=n;i++){int fan=Find(i);have[fan]=1;px[fan]++;}\n    sort(px+1,px+n+1);ans[0]=1;\n    for(po=1;px[po]==0;po++);\n    for(;po<=n;po++)\n        for(int i=m+nextem-1;i>=px[po] && i>m-nextem;i--){\n            if(ans[i-px[po]])ans[i]=1;\n            if(ans[i]==1){nextem=m-i;if( jdz(m-i) < jdz(m-rans))rans=i;}\n        }\n    cout<<(rans==0x7fffffff?0:rans);\n    return 0;\n}\n```\n## \u53ef\u884c\u6027\u4f18\u5316\n\n- \u628a ans \u4f18\u5316\u5230\u4e00\u500d,\u8fd9\u6837,\u5bf9 m+nextem \u8fdb\u884c\u7279\u5224\n\n- \u7edf\u8ba1ans\u65f6,\u53ef\u4ee5\u8003\u8651\u4e0d\u4f7f\u7528\u5168\u90e8\u626b\u4e00\u904d\u7684\u65b9\u6cd5.\u6216\u8bb8\u8fd9\u4e2a\u53ef\u4ee5\u7528\u53cc\u961f\u5217\u5b9e\u73b0?\n\n\n# \u6211\u7684\u9898\u89e3\u5c31\u5230\u8fd9\u91cc,\u6709\u4ec0\u4e48\u4e0d\u61c2\u5f97\u6b22\u8fce\u79c1\u4fe1\u63d0\u95ee\u6216\u5176\u4ed6\u65b9\u5f0f\u63d0\u95ee\n",
        "postTime": 1508332543,
        "uid": 43931,
        "name": "SofanHe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\uff0b\u53ef\u8fbe\u6027DP\n\n\u5148\u7528\u5e76\u67e5\u96c6\u627e\u51fa\u54ea\u51e0\u7ec4\u5b66\u751f\u9700\u8981\u4e00\u8d77\u9009\uff0c\u628a\u6bcf\u4e00\u7ec4\u5b66\u751f\u5f53\u4f5c\u4e00\u4ef6\u7269\u54c1\uff0c\u4ef7\u503c\u4e3a\u7ec4\u91cc\u7684\u4eba\u6570\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n#include <stdio.h>\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint father[30001],num[30001];//num[i]\u8bb0\u5f55i\u8282\u70b9\u7684\u5b50\u5b59\u540e\u4ee3\uff08\u5305\u62ec\u81ea\u5df1\uff09\u6709\u591a\u5c11\u4eba\nbool flag[30001] = {};//flag[i]\u7528\u4e8e\u8bb0\u5f55\u80fd\u5426\u9009\u51fai\u4eba\nint findfather(int a) {//\u627e\u5230\u6839\u8282\u70b9\n    if (father[a] == a) return a;\n    return father[a] = findfather(father[a]);//\u8def\u5f84\u538b\u7f29\n}\nint main() {\n    int n, m, k, a, b, i, j, s1, s2;\n    cin >> n >> m >> k;\n    flag[0] = true;\n    for (i = 1; i <= n; i++) {\n        father[i] = i;\n        num[i] = 1;//\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u4eba\u7684\u5b97\u65cf\u6700\u5f00\u59cb\u53ea\u6709\u4e00\u4e2a\u4eba\n    }\n    while (k--) {\n        cin >> a >> b;\n        if (findfather(a) != findfather(b)) {//\u82e5a\u548cb\u8fd8\u4e0d\u5728\u540c\u4e00\u5b97\u65cf\u91cc\n            num[findfather(a)] += num[findfather(b)];//\u5c06b\u7684\u5b97\u65cf\u5e76\u5165a\u7684\u5b97\u65cf\n            father[findfather(b)] = findfather(a);//\u4fee\u6539\u7236\u8282\u70b9\n        }\n    }\n    for (i = 1; i <= n; i++)\n        if (findfather(i) == i)//\u53ea\u6709\u5f53\u4e00\u540d\u5b66\u751f\u7684\u7956\u5b97\u5c31\u662f\u4ed6\u81ea\u5df1\u65f6\uff0c\u4ed6\u7684num\u503c\u624d\u6070\u597d\u662f\u81ea\u5df1\u6574\u4e2a\u5b97\u65cf\u91cc\u7684\u4eba\u6570\n            for (j = n - num[i]; j >= 0; j--)//\u6807\u51c6\u53ef\u8fbe\u6027DP\n                if (flag[j])\n                    flag[j + num[i]] = true;\n    for (i = m; !flag[i]; i++);\n    s1 = i - m;//\u627e\u5230\u6bd4m\u5927\u7684\u6700\u63a5\u8fd1\u7684\u4eba\u6570\n    for (i = m; !flag[i]; i--);\n    s2 = m - i;//\u627e\u5230\u6bd4m\u5c0f\u7684\u6700\u63a5\u8fd1\u7684\u4eba\u6570\n    if (s1 >= s2) cout << m - s2 << endl;\n    else cout << m + s1 << endl;//\u8f93\u51fa\n    return 0;\n}\n\n```",
        "postTime": 1503279234,
        "uid": 31404,
        "name": "czx20030930",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6+DP\n\n\u9996\u5148\u6211\u4eec\u5148\u628a\u6240\u6709\u7684\u4eba\u5206\u7ec4\uff0c\u7136\u540e\u628a\u6bcf\u4e00\u7ec4\u5f53\u6210\u4e00\u4e2a\u7269\u54c1\u5f97\u5230\u6bcf\u7ec4\u7684\u4eba\u6570\n\n\u7136\u540e\u505a\u4e00\u904dDP\uff0c\u7531\u4e8e\u662f\u4e0em\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\uff0c\u6240\u4ee5\u80cc\u5305\u7684\u5bb9\u91cf\u5b9a\u4e3a2\\*m\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e0ef\u6570\u7ec4\u6309\u4e0em\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u5927\u5c0f\u505a\u7edf\u8ba1\uff0c\u82e5\u5bb9\u91cf\u4e3av\u7684\u80cc\u5305\u91cc\u9762\u521a\u597d\u88c5\u4e86v\u7684\u7269\u54c1\uff0c\u90a3\u4e48\u8bf4\u660e\u53ef\u884c\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u3002\n\n-----------------------------------------------------------------------------------------------------------------------------------------\n\n\n    \n```cpp\n#include <iostream>\n#include <cstring>\n#include <cmath>\nusing namespace std;\nconst int maxn=20005;\nint n,m,k,tot;\nint p[maxn];\nint man[maxn];\nint f[maxn+maxn];\nint find(int x){\n    return (x==p[x]?x:p[x]=find(p[x]));\n}\nvoid solve(){\n    memset(f,0,sizeof(f));\n    for(int i=1;i<=tot;i++)\n        for(int j=2*m;j>=man[i];j--)\n            f[j]=max(f[j],f[j-man[i]]+man[i]);\n    for(int i=0;i<=m;i++){\n        if(f[m-i]==m-i){\n            cout<<m-i<<endl;\n            return;\n        }\n        if(f[m+i]==m+i){\n            cout<<m+i<<endl;\n            return;\n        }\n    }\n    return;\n}\nint main(){\n    cin>>n>>m>>k;\n    int u,v;\n    for(int i=1;i<=n;i++)\n        p[i]=i;\n    for(int i=1;i<=k;i++){\n        cin>>u>>v;\n        int x=find(u);\n        int y=find(v);\n        p[x]=y;\n    }\n    memset(man,0,sizeof(man));\n    for(int i=1;i<=n;i++)    \n        man[find(i)]++;\n    tot=0;\n    for(int i=1;i<=n;i++)\n        if(man[i]!=0) man[++tot]=man[i];\n    solve();\n    return 0;\n}\n```",
        "postTime": 1471483497,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u9898\u610f\uff1a\u628aN\u4e2a\u4eba\u4e2d\u67d0\u4e9b\u4eba\u7ed1\u5b9a\uff0c\u5373\u4e00\u56e2\u56e2\u5730\u9009\uff0c\u8ba9\u9009\u7684\u4eba\u5c3d\u53ef\u80fd\u63a5\u8fd1M\u4eba\uff01\u6c42\u9009\u7684\u4eba\u6570\uff01\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\uff0c\u6c42\u51fa\u6bcf\u56e2\u4eba\u7684\u4e2a\u6570\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u500d\u80cc\u5305\uff08\u5373\u8303\u56f4\u4e3a\u4e24\u500d\u7684\u80cc\u5305\uff09\u6c42\u80fd\u5230\u8fbe\u7684\u4eba\u6570\n\n\u6700\u540e\uff0c\u4e00\u4e2a\u679a\u4e3e\u6c42\u7b54\u6848\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\nint n,m,k,f[20010],fa[20010],F[50010],num[20010],x,y,f1,f2;\nint Find(int x)\n{\n\tif (fa[x]==x)return x;\n\telse return fa[x]=Find(fa[x]);\n}\nint main()\n{\n\tcin>>n>>m>>k;\n\tfor (int i=1;i<=n;i++)fa[i]=i,num[i]=1;\n\tfor (int i=1;i<=k;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tf1=Find(x);\n\t\tf2=Find(y);\n\t\tif (f1!=f2){\n\t\t\tnum[f2]+=num[f1];\n\t\t\tnum[f1]=0;\n\t\t\tfa[f1]=fa[f2];\n\t\t}\n\t}\n\tF[0]=1;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (fa[i]==i){\n\t\t\t//cout<<i<<\"!!!\"<<num[i]<<endl;\n\t\t\tfor (int j=2*m;j>=num[i];j--){\n\t\t\t\tif (F[j]==0&&F[j-num[i]]){\n\t\t\t\t\tF[j]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=0;i<=m;i++){\n\t\tif (F[m-i]){\n\t\t\tcout<<m-i<<endl;break;\n\t\t}\n\t\t\n\t\tif (F[m+i]){\n\t\t\tcout<<m+i<<endl;break;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1569736078,
        "uid": 56646,
        "name": "jun\u541b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u6ca1\u5565\u597d\u5199\u7684\n\n\u4e3b\u8981\u662f\u601d\u8def\u6bd4\u8f83\u6e05\u5947\n\n\u7adf\u7136\u628a\u5e76\u67e5\u96c6\u90fd\u878d\u5408\u5230\u80cc\u5305\u91cc\u4e86\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cmath>\n#include<iostream>\n#define N 20002\n#define M N*2\n#define INF 999999999\nusing namespace std;\nint i,j,k,m,n,x,y,f1,f2,c[N],f[M],v[N],fa[N];\n inline int find(int x)\n  {return fa[x]==x?x:fa[x]=find(fa[x]);}\nint tot=0,ans=INF,minn=INF;\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>m>>k;\n    for(i=1;i<=n;i++)\n     {c[i]=1;fa[i]=i;}\n    for(i=1;i<=k;i++)\n    {\n        cin>>x>>y;\n        f1=find(x);f2=find(y);\n        if(f1==f2) continue;\n        fa[f1]=f2;\n        c[f2]+=c[f1];\n    }\n    for(i=1;i<=n;i++)\n     if(fa[i]==i) v[++tot]=c[i];\n    for(i=1;i<=tot;i++)\n     for(j=2*m;j>=v[i];j--)\n      f[j]=max(f[j],f[j-v[i]]+v[i]);\n    for(i=1;i<=2*m;i++)\n     if(abs(m-f[i])<minn)\n     {\n     \tminn=abs(m-f[i]);\n     \tans=f[i];\n     }\n    if(ans==INF) cout<<'0';\n    else cout<<ans;\n    return 0;\n}\n```\n\u4e3b\u8981\u5206\u4e3a\u4e09\u90e8\u5206\n\n## 1.\u91c7\u7528\u5e76\u67e5\u96c6\u9884\u5904\u7406\n\n\u56e0\u4e3a\u6211\u4eec\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5f88\u591a\u4eba\u4f1a\u91cd\u590d\u51fa\u73b0\n\n\u7528bool\u6570\u7ec4\u5224\u5b9a\u6bcf\u4e2a\u4eba\u6240\u5728\u5206\u7ec4\u592a\u9ebb\u70e6\n\n\u4e8e\u662f\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u56e2\u4f53\u4fe1\u606f\n\n```\n    for(i=1;i<=n;i++)\n     {c[i]=1;fa[i]=i;}\n    for(i=1;i<=k;i++)\n    {\n        cin>>x>>y;\n        f1=find(x);f2=find(y);\n        if(f1==f2) continue;\n        fa[f1]=f2;\n        c[f2]+=c[f1];\n    }\n```\n\nc\u6570\u7ec4\u662f\u5e72\u4ec0\u4e48\u7528\u7684\n\n\u770b\u4e0b\u5934\n\n## 2.\u5c06\u5e76\u67e5\u96c6\u4e2d\u7684\u4fe1\u606f\u8f6c\u5316\u4e3a\u80cc\u5305\u7269\u54c1\u7684\u4f53\u79ef\n\n\u8fd9\u65f6\u5019c\u5c31\u6709\u7528\u4e86\n\n\u544a\u8bc9\u4f60\u6bcf\u4e2a\u4eba\u6240\u5728\u7684\u8fd9\u4e2a**\u5b9e\u529b\u76f8\u5f53**\u7684\u4e00\u90e8\u5206\u4eba\u4e2d\n\n\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u4eba\n\n\u5341\u5206\u5de7\u5999\u7684\u4e00\u4e2a\u6570\u7ec4\n\n\u4ee3\u7801\u4e5f\u5f88\u7b80\u5355\uff1a\n\n\n```\nfor(i=1;i<=n;i++)\n if(fa[i]==i) v[++tot]=c[i];\n```\n\n\n## 3.\u5269\u4e0b\u7684\u6309\u80cc\u5305\u505a\u5c31\u597d\u5566\n\n\n```\nfor(i=1;i<=tot;i++)\n for(j=2*m;j>=v[i];j--)\n  f[j]=max(f[j],f[j-v[i]]+v[i]);\n```\n\n## 4.\u8fd9\u9053\u9898\u8fd8\u6ca1\u7ed3\u675f\n\n\u56e0\u4e3a\u6211\u4eecf\u4e2d\u5b58\u7684\u662f\u6700\u5927\u201c\u5e8f\u53f7\u201d\n\n\u7b54\u6848\u6c42\u7684\u662f\u4e0eM\u5dee\u503c\u6700\u5c0f\u7684f\u503c\n\n\u6545\u7528for\u5faa\u73af\u626b\u4e00\u904d\n\n\u505a\u5dee\u770b\u662f\u5426\u80fd\u5f97\u5230\u66f4\u5c0f\u503c\n\n\u80fd\u7684\u8bdd\u5c31\u66f4\u65b0ans\n\n## 5.\n### if(ans==INF) cout<<'0';\n### else cout<<ans;\n\ntips\uff1a\u5c0f\u5751\u70b9\u2014\u2014\u5728\u679a\u4e3e\u5bb9\u91cf\u7684\u65f6\u5019\uff0c\u8981\u4ece2 * m\u5f00\u59cb\uff0c\u5426\u5219\u4f1a\u5f97\u4e0d\u5230\u6b63\u786e\u7ed3\u679c\n\n\u539f\u56e0\uff1a~~\u6211\u4e5f\u4e0d\u77e5\u9053\u7b49\u77e5\u9053\u4e86\u5728\u66f4\u65b0\u4e0a\u5427~~",
        "postTime": 1556519031,
        "uid": 183448,
        "name": "Lucaster_",
        "ccfLevel": 0,
        "title": "\u51b0\u8336\u51e0+\u80cc\u5305"
    },
    {
        "content": "DP+\u5e76\u67e5\u96c6\n\n\u5148\u7528\u5e76\u67e5\u96c6\u5c06\u6240\u6709\u4eba\u5206\u7ec4\uff08\u76f8\u540c\u5b9e\u529b\u4e00\u7ec4\uff09\n\n\u7136\u540e\u5c06\u6bcf\u7ec4\u89c6\u4e3a\u4e00\u4ef6\u7269\u54c1\uff0c\u5927\u5c0f\u5c31\u662f\u4eba\u6570\n\n\u7528DP\u7b97\u51fa\u53ef\u4ee5\u7ec4\u5408\u6210\u7684\u6240\u6709\u79cd\u6570\n\n\uff08\u89c1\u7a0b\u5e8f\uff09\n\n\u7a77\u4e3e\u4e00\u6b21\n\n\u627e\u5230\u6700\u63a5\u8fd1m\u7684\u5373\u4e3a\u7b54\u6848\uff08\u76f8\u540c\u5219\u53d6\u5c0f\uff09\n\npascal code:\n\n```cpp\nvar\n  n,m,k,i,j,min,x:longint;\n  a,b,t,t1,f,ff:array[-1..100002] of longint;\n  boo:array[-1..100002] of boolean;\nfunction find(x:longint):longint;//find\u7528\u6765\u67e5\u627e\u7956\u5148\u2026\u2026\nbegin\n  while f[x]<>x do x:=f[x];\n  exit(x);\nend;\nbegin\n  readln(n,m,k);\n  for i:=1 to k do readln(a[i],b[i]);//\u8bfb\u5165\u5b9e\u529b\u76f8\u540c\u7684\u5bf9\n  for i:=1 to n do f[i]:=i;//\u7236\u4eb2\n  for i:=1 to k do\n    f[b[i]]:=f[a[i]];//\u5408\u5e76\n  for i:=1 to n do inc(ff[find(i)]);//\u7edf\u8ba1\u6bcf\u7ec4\u7684\u4eba\u6570\n  x:=0;//x\u8868\u793a\u7ec4\u6570\n  fillchar(f,sizeof(f),0);//\u91cd\u7f6ef\uff0c\u56de\u6536\u518d\u5229\u7528\n  for i:=1 to n do if ff[i]>0 then begin inc(x); f[x]:=ff[i]; end;//\u82e5\u67d0\u7ec4\u6709\u4eba\uff0c\u52a0\u5165\u5df2\u6709\u2018\u7269\u54c1\u2019\n  boo[0]:=true;//boo[i]\u8868\u793a\u80fd\u5426\u7ec4\u5408\u51faI\u4e2a\u4eba\u800c\u5b9e\u529b\u76f8\u540c\u7684\u4e0d\u9057\u6f0f\n  for i:=1 to x do\n    for j:=n downto f[i] do\n      if boo[j-f[i]] then boo[j]:=true;//DP\u4e0d\u9898\n  for i:=1 to n do\n    if boo[i] then if abs(i-m)<abs(min-m) then min:=i;//\u679a\u4e3e\u5bfb\u627e\u6700\u63a5\u8fd1\u503c\n  write(min);\nend.\n```",
        "postTime": 1477824310,
        "uid": 20505,
        "name": "tututu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://xiaohuang888.github.io/2019/08/07/%E3%80%8E%E9%A2%98%E8%A7%A3%E3%80%8F%E6%B4%9B%E8%B0%B7P2170%20%E9%80%89%E5%AD%A6%E9%9C%B8)\n\n### Solution\n\n\u8fd9\u9898\u5982\u679c\u9009\u4e86\u4e00\u4e2a\u4eba\uff0c\u90a3\u4e48\u4e0e\u4ed6\u5b9e\u529b\u76f8\u5f53\u7684\u4eba\u4e5f\u8981\u9009\u4e0a\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u4f1a\u4ea7\u751f\u8fde\u9501\u53cd\u5e94\u7684\u4eba\u90fd\u6346\u8d77\u6765\u3002\u4e0d\u96be\u60f3\u5230\u7528\u5e76\u67e5\u96c6\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u4e00\u6346\u4e00\u6346\u7684\u603b\u4ef7\u503c\u8bb0\u5f55\u4e0b\u6765\uff0c\u505a\u4e00\u904d`01`\u80cc\u5305\u5c31\u597d\u4e86\u3002\n\n### Code\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f, MAXN = 20005;\nint n, m, k, u, v, t[MAXN], w[MAXN], dp[MAXN], father[MAXN];\ninline int find(int x) {//\u5e76\u67e5\u96c6\n    return (x == father[x] ? x : father[x] = find(father[x]));\n}\ninline void Union(int u, int v) {//\u5408\u5e76\n    int p = find(u), q = find(v);\n    if (p != q) father[p] = q;\n}\nint main() {\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (int i = 1; i <= n; i++)\n        father[i] = i;\n    for (int i = 1; i <= k; i++) {\n        scanf(\"%d%d\", &u, &v);\n        Union(u, v);//\u5c06\u8f93\u5165\u7684\u4e24\u4e2a\u4eba\u5408\u5e76\u8d77\u6765\n    }\n    for (int i = 1; i <= n; i++)\n        t[find(i)]++;\n    int cnt = 0;\n    for (int i = 1; i <= n; i++)\n        if (t[i]) w[++cnt] = t[i];//\u8ba1\u7b97\u4ef7\u503c\n    for (int i = 1; i <= cnt; i++)\n        for (int j = m << 1; j >= w[i]; j--)\n            dp[j] = max(dp[j], dp[j - w[i]] + w[i]);//01\u80cc\u5305\n    int Min = INF, ans = 0;\n    for (int i = 0; i <= m; i++) {\n        if (dp[m - i] == m - i) {\n            printf(\"%d\\n\", m - i);\n            return 0;\n        }\n        if (dp[m + i] == m + i) {\n            printf(\"%d\\n\", m + i);\n            return 0;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1565184377,
        "uid": 19729,
        "name": "xiaohuang",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2170 \u3010\u9009\u5b66\u9738\u3011"
    }
]