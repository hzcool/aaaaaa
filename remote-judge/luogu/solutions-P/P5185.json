[
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a\u7b80\u8981\u4e86\u89e3 CRT \u548c\u9ad8\u65af\u6d88\u5143  \n\n\u9898\u610f\u7b80\u8ff0\uff1a\u7ed9\u5b9a\u4e00\u4e9b\u7cfb\u6570\uff0c\u6c42 $n$ \u5143\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4 $A_i+\\sum^{M}_{j=1}a_{i,j}x_j\\equiv B_i(\\mod 365)$ \u7684\u89e3\u3002  \n\n\u6ce8\u610f\u5230 $365=5\\times73$\uff0c\u800c\u4e14\u4ed6\u4eec\u90fd\u662f\u8d28\u6570\uff0c\u8fd9\u5f15\u5bfc\u7740\u6211\u4eec\u601d\u8003\u5148\u5206\u522b\u6c42\u51fa\u6a21 $5,73$ \u610f\u4e49\u4e0b\u7684\u89e3\uff0c\u7136\u540e\u4f7f\u7528 CRT \u6765\u5408\u5e76\u7b54\u6848\u3002  \n\u5bf9\u56fa\u5b9a\u7684\u8d28\u6570\u6c42\u89e3 $n$ \u5143\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4\u7684\u5177\u4f53\u6b65\u9aa4\uff0c\u9996\u5148\u6211\u4eec\u8003\u8651\u628a\u6240\u6709\u6570\u5b57\u90fd\u653e\u5728\u6a21\u610f\u4e49\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u95ee\u9898\uff0c\u7528\u9ad8\u65af\u6d88\u5143\u6cd5\u6c42\u89e3\u5373\u53ef\u3002  \n\u6362\u8a00\u4e4b\uff1a\u6c42\u89e3 $n$ \u5143\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4\uff0c\u5c31\u662f\u6a21\u610f\u4e49\u4e0b\u7684\u9ad8\u65af\u6d88\u5143\u3002  \n\u4e0b\u9762\u8bf4\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\u3002  \n- 1.\u6211\u4eec\u8bfb\u53d6\u65e5\u671f\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u6bcf\u4e2a\u6708\u7684\u65e5\u5b50\u5404\u4e0d\u76f8\u540c\uff0c\u5f00\u4e2a\u6570\u7ec4\u5b58\u4e00\u4e0b\uff0c\u7136\u540e\u6211\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u5c01\u88c5\u7684\u5199\u6cd5\uff0c\u56e0\u6b64\u6709\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\uff1a  \n```cpp\nint days[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\nint date() {\n    int d, m;\n    scanf(\"%d %d\", &d, &m);\n    for (int i = 0; i < m - 1; ++i)\n        d += days[i];\n    return d - 1;\n}\n```\n- 2.\u56e0\u4e3a\u6a21\u6570\u56fa\u5b9a\u4e14\u8d28\u56e0\u5b50\u8f83\u5c11\uff0c\u6211\u4eec\u76f4\u63a5\u624b\u7b97\u5f0f\u5b50\u5c31\u884c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a  \n```cpp\n    for (int i = 0; i < M; ++i) {\n        printf(\"%d\\n\", (146 * Sol5[i] + 220 * Sol73[i] + 364) % 365 + 1);\n    }\n```  \n- 3.\u505a\u9664\u6cd5\u7684\u65f6\u5019\u522b\u5fd8\u4e86\uff0c\u5176\u5b9e\u662f\u8981\u4e58\u4ee5\u9006\u5143\u7684\u3002  \n\n\u5dee\u4e0d\u591a\u5c31\u8fd9\u4e9b\u4e86\uff0c\u4e0b\u9762\u8d34\u4e2a\u4ee3\u7801\uff1a   \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN = 205, maxM = 205;\n\nint N, M;\nint mts[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\nint Init[maxN][maxM + 1], tmp[maxN][maxM + 1];\nint date() {\n    int d, m;\n    scanf(\"%d %d\", &d, &m);\n    for (int i = 0; i < m - 1; ++i)\n        d += mts[i];\n    return d - 1;\n}\nint Sol5[maxM], Sol73[maxM], inv[100];\nvoid get_inv(int p) {\n    inv[0] = 0;\n    for (int i = 1; i < p; ++i)\n        for (int j = 1; j < p; ++j)\n            if ((i * j) % p == 1)\n                inv[i] = j;\n}\nvoid Gauss(int p, int* Sol) {\n    for (int i = 0; i < N; ++i)\n        for (int j = 0; j <= M; ++j)\n            tmp[i][j] = Init[i][j] % p;\n    get_inv(p);\n    int valid = 0;\n    for (int s = 0; s < M; ++s) {\n        int ff = -1;\n        for (int i = valid; ff == -1 && i < N; ++i)\n            if (tmp[i][s] != 0)\n                ff = i;\n        if (ff == -1)\n            continue;\n        if (valid != ff)\n            for (int i = 0; i <= M; ++i)\n                swap(tmp[valid][i], tmp[ff][i]);\n        int rev = inv[tmp[valid][s]];\n        for (int i = 0; i <= M; ++i)\n            tmp[valid][i] = (tmp[valid][i] * rev) % p;\n        for (int i = 0; i < N; ++i)\n            if (i != valid) {\n                int cf = tmp[i][s];\n                for (int j = 0; j <= M; ++j) {\n                    tmp[i][j] -= cf * tmp[valid][j];\n                    tmp[i][j] %= p;\n                    if (tmp[i][j] < 0)\n                        tmp[i][j] += p;\n                }\n            }\n        ++valid;\n    }\n    for (int i = 0; i < N; ++i) {\n        int first = -1;\n        for (int j = 0; j < M; ++j)\n            if (tmp[i][j] != 0) {\n                first = j;\n                break;\n            }\n        if (first == -1) {\n            if (tmp[i][M] != 0) {\n                cout << \"-1\\n\";\n                exit(0);\n            }\n            continue;\n        }\n        Sol[first] = tmp[i][M];\n    }\n}\n\nint main() {\n    cin >> N >> M;\n    for (int i = 0; i < N; ++i) {\n        int a = date(), b = date();\n        for (int j = 0; j < M; ++j)\n            scanf(\"%d\", Init[i] + j);\n        Init[i][M] = ((b - a) % 365 + 365) % 365;\n    }\n    Gauss(5, Sol5);\n    Gauss(73, Sol73);\n    for (int i = 0; i < M; ++i) {\n        cout << (146 * Sol5[i] + 220 * Sol73[i] + 364) % 365 + 1 << \"\\n\";\n    }\n    return 0;\n}\n```\n",
        "postTime": 1683004144,
        "uid": 762646,
        "name": "Piggy424008",
        "ccfLevel": 6,
        "title": "P5185 \u9898\u89e3"
    }
]