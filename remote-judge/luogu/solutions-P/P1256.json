[
    {
        "content": "\u8fd9\u9898\u771f\u7684\u5751\uff0c~~\u867d\u7136\u6211\u4e00\u904dAC\u4e86~~\n\n\n\u9898\u89e3\u533a\u515c\u4e86\u4e00\u5708\uff0c\u597d\u50cf\u90fd\u662f\u5199\u641c\u7d22\u7684\u3002\u3002\n\n\n\u5466\u5475\uff0c\u8fd9\u4e0d\u662f\u66b4\u529b\u5417\uff1f\uff1f\n\n----\n\n[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P1256)\n\n\u9898\u9762\u6211\u770b\u4e86\u597d\u51e0\u904d\u624d\u770b\u61c2\uff08~~\u51fa\u9898\u4eba\u80fd\u4e0d\u80fd\u76f4\u622a\u4e86\u5f53\u4e00\u70b9\u554a~~\uff09\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u53e5\u8bdd\uff1a\n\n>\u6bcf\u4e2a\u50cf\u7d20\u70b9\u548c\u5176\u6700\u8fd1\u7684\u663e\u793a\u767d\u8272\u7684\u50cf\u7d20\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u662f\u591a\u5c11\u3002\n\n\n---\n\n\u53ea\u8981\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n\n1.$a_{i,j}$\u4e3a$1$\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u50cf\u7d20\u70b9\u4e3a\u767d\u50cf\u7d20\u70b9\u3002\n\n\u8fd9\u7b80\u5355\uff0c\u91cc$a{i,j}$\u6700\u8fd1\u7684\u767d\u50cf\u7d20\u70b9\u4e0d\u5c31\u662f\u81ea\u5df1\u5417\uff1f\n\n\u6240\u4ee5\uff0c\u6700\u77ed\u8ddd\u79bb\u4e3a$0$\u3002\n\n2.$a_{i,j}$\u4e3a$0$\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u50cf\u7d20\u70b9\u4e3a\u9ed1\u50cf\u7d20\u70b9\u3002\n\n\u66b4\u529b\u5c31\u662f\u5728\u8fd9\u91cc\uff0c\u53bb\u5bfb\u627e\u767d\u50cf\u7d20\u70b9\uff0c\u6c42\u51fa\u6700\u77ed\u8ddd\u79bb\u3002\n\n\n----\n\n\u8003\u8651\u6e05\u695a\u4e86\uff0c\u90a3\u5c31\u60f3\u4e00\u60f3\u600e\u4e48\u66b4\u529b\u5427\u3002\n\n\u8981\u662f\u53cc\u91cd\u5faa\u73af\u679a\u4e3e\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7136\u540e\u8fdb\u884c\u5904\u7406\u90a3\u80af\u5b9a\u662f\u4e0d\u884c\u7684\uff0c\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u4f1aTLE\u7684\u3002\n\n\u6211\u60f3\u5230\u7684\u662f\uff1a\n\n\u7528$b$\u6570\u7ec4\u5b58\u50a8\u5f53\u524d\u50cf\u7d20\u70b9\u7684\u4fe1\u606f\uff0c\u7528$a$\u6570\u7ec4\u5b58\u50a8\u5f53\u524d\u50cf\u7d20\u70b9\u4e0e\u767d\u8272\u50cf\u7d20\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u53cc\u91cd\u5faa\u73af\u3002\n\n\u5982\u679c$b_{i,j}=true$\uff0c\u662f\u767d\u50cf\u7d20\u70b9\uff0c$a_{i,j}=0$\uff0c\u53cc\u91cd\u5faa\u73af\uff0c\u5c06\u6bcf\u4e2a\u9ed1\u50cf\u7d20\u70b9\u548c\u5f53\u524d\u767d\u50cf\u7d20\u70b9\u7684\u8ddd\u79bb\u8ba1\u7b97\u51fa\u6765\uff0c\u7136\u540e\u8ddf\u5148\u524d\u7684\u6570\u4f5c\u6bd4\u8f83\uff0c\u6bd4Ta\u5c0f\uff0c\u5c31\u66ff\u6362\u3002\n\n\u6ce8\u610f\uff0c$a$\u6570\u7ec4\u7684\u521d\u59cb\u503c\u8981\u5f88\u5927\u3002\n\n- \u5982\u4f55\u8ba1\u7b97\u4e24\u4e2a\u50cf\u7d20\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/31g9i9n2.png)\n\n\u89c2\u5bdf\u4e00\u4e0b\u8fd9\u5f20\u56fe\uff0c\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u548c\u4ec0\u4e48\u6709\u5173\u5462\uff1f\n\n\u56fe$1$\uff1a\n\n\u6700\u77ed\u8def\u5f84\u4e3a$3$\u3002\n\n$abs($\u6a59\u5708\u6240\u5728\u884c$-$\u7eff\u5708\u6240\u5728\u884c$)+abs($\u6a59\u5708\u6240\u5728\u5217$-$\u7eff\u5708\u6240\u5728\u5217$=(2-1)+(4-2)=1+2=3$\n\n\u56fe$2$\uff1a\n\n\u6700\u77ed\u8def\u5f84\u4e3a$2$\u3002\n\n$abs($\u6a59\u5708\u6240\u5728\u884c$-$\u7eff\u5708\u6240\u5728\u884c$)+abs($\u6a59\u5708\u6240\u5728\u5217$-$\u7eff\u5708\u6240\u5728\u5217$=(4-3)+(3-2)=1+1=2$\n\n\u56fe$3$\uff1a\n\n\u6700\u77ed\u8def\u5f84\u4e3a$5$\u3002\n\n$abs($\u6a59\u5708\u6240\u5728\u884c$-$\u7eff\u5708\u6240\u5728\u884c$)+abs($\u6a59\u5708\u6240\u5728\u5217$-$\u7eff\u5708\u6240\u5728\u5217$=(4-2)+(4-1)=2+3=5$\n\n\u53d1\u73b0\u4ec0\u4e48\u4e86\u5417\uff1f\n\n\u9a8c\u8bc1\u4e00\u4e0b\u3002\n\n\u56fe$4$\uff1a\n\n\u6700\u77ed\u8def\u5f84\u4e3a$5$\u3002\n\n$abs($\u6a59\u5708\u6240\u5728\u884c$-$\u7eff\u5708\u6240\u5728\u884c$)+abs($\u6a59\u5708\u6240\u5728\u5217$-$\u7eff\u5708\u6240\u5728\u5217$=(4-1)+(3-1)=3+2=5$\n\n\u7531\u6b64\u5f97\u51fa\uff1a\n\n$a_{i,j}$\u548c$a_{k,t}$\u7684\u6700\u77ed\u8def\u5f84\u4e3a\uff0c$abs(i-k)+abs(j-t)$\u3002\n\n\n\n\u597d\u5566\uff0c\u90a3\u6211\u4eec\u5f00\u59cb\u66b4\u529b\u5427\uff01\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,a[183][183],d;\nbool b[183][183];\nchar s[183];\nvoid f(int x,int y) {\n    int i=1;\n    while(i<=n) {\n        for(int j=1; j<=m; ++j) {\n            if(b[i][j]==true) continue;\n            d=abs(x-i)+abs(y-j);\n            a[i][j]=min(a[i][j],d);\n        }\n        ++i;\n    }\n}\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1; i<=n; ++i) \n        for(int j=1; j<=m; ++j) {\n        \tscanf(\"%d\",&b[i][j]);\n            if(b[i][j+1]==true) a[i][j+1]=0;\n            else a[i][j+1]=1e9;\n        }\n    for(int x=1; x<=n; ++x)\n        for(int y=1; y<=m; ++y) {\n            if(b[x][y]) {\n                int k=1;\n                while(k<=n) {\n                    for(int j=1; j<=m; ++j) {\n                        if(b[k][j]==true) continue;\n                        d=abs(x-k)+abs(y-j);\n                        a[k][j]=min(a[k][j],d);\n                    }\n                    ++k;\n                }\n            }\n        }\n    for(int i=1; i<=n; ++i) {\n        for(int j=1; j<=m; ++j) printf(\"%d \",a[i][j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```\n\n\u6211\u8c14\u8c14\uff0c\u4e3a\u4ec0\u4e48\u8f93\u5165\u602a\u602a\u7684\u554a~\n\n\u7136\u540e\uff0c\u5c31\u53d1\u73b0\u4e86\u4e00\u4e2a\u5de8\u5751\u65e0\u6bd4\u7684\u4e1c\u897f\uff0c\u8f93\u5165\uff01\n\n\u8fd9\u662f\u6837\u4f8b\uff1a\n\n$in$\n\n```cpp\n3 4\n0001\n0011\n0110\n```\n\n$out$\n\n```cpp\n3 2 1 0\n2 1 0 0\n1 0 0 1\n```\n\n\u60a8\u4ed4\u7ec6\u770b\uff0c\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f\uff1f\n\n\u604d\u7136\u5927\u609f\uff0c\u8f93\u5165\u7684\u77e9\u9635\u4e2d\u6570\u5b57\u4e4b\u95f4\u6ca1\u6709\u7a7a\u683c\uff01\uff01\n\n\uff08~~\u6211\u5dee\u70b9\u6c14\u5f97\u5410\u8840\uff0c\u6211\u53ef\u662f\u8c03\u4e86\u4e00\u4e0a\u5348\u554a~~\n\n\u8fd9\u6837\uff0c\u5c31\u5f97\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\uff1a\n\n```cpp\nfor(int i=1; i<=n; ++i) {\n    scanf(\"%s\",s);\n    for(int j=0; j<m; ++j) {\n        b[i][j+1]=s[j]-'0';\n        if(b[i][j+1]==true) a[i][j+1]=0;\n        else a[i][j+1]=1e9;\n    }\n}\n```\n\n\u5c31\u8fd9\u6837\uff0c\u610f\u6599\u4e4b\u4e2d\u5730AC\u4e86\u2026\u2026\n\n~~\uff08\u5199\u5f97\u7b97\u8be6\u7ec6\uff0c\u559c\u6b22\u5c31\u7ed9\u4e2a\u8d5e\u5427~~~",
        "postTime": 1581056288,
        "uid": 186034,
        "name": "Callous_Murder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0b\u5168\u662fBFS\u7684\u505a\u6cd5\uff0c\u987f\u65f6\u89c9\u5f97\u81ea\u5df1\u8111\u56de\u8def\u795e\u5947\u3002\u3002\u3002\n\n\n\u8fd9\u91cc\u662f\u4e00\u4e2aDP/\u9012\u63a8\u7684\u505a\u6cd5\u3002\n\n\n\u5f804\u4e2a\u65b9\u5411DP\u5373\u53ef\uff0c\u56e0\u4e3a\u6700\u77ed\u8def\u4e00\u5b9a\u5728\u8fd9\u4e9b\u65b9\u5411\u4e0a\u4ea7\u751f\u3002\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define maxn 1010\n#define Lovelive long long\n#define INF 0x3F3F3F3F\n#define min(a, b) ((a)<(b)?(a):(b))\n\nchar map[maxn][maxn];\nint f[4][maxn][maxn];\nint ans;\nint n, m;\n\nint main() {\n    freopen(\"gochess.in\", \"r\", stdin);\n    freopen(\"gochess.out\", \"w\", stdout);\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i++) scanf(\"%s\", map[i] + 1);\n    memset(f, 0x3f, sizeof f);\n    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= m; j++) {\n            if(map[i][j] == '1') for(int k = 0; k < 4; k++) f[k][i][j] = 0;\n        }\n    }\n    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= m; j++) {\n            if(!f[0][i][j]) continue;\n            f[0][i][j] = min(f[0][i-1][j], f[0][i][j-1]);\n            if(f[0][i][j] != INF) f[0][i][j]++;\n        }\n    }\n    for(int i = 1; i <= n; i++) {\n        for(int j = m; j >= 1; j--) {\n            if(!f[1][i][j]) continue;\n            f[1][i][j] = min(f[1][i-1][j], f[1][i][j+1]);\n            if(f[1][i][j] != INF) f[1][i][j]++;\n        }\n    }\n    for(int i = n; i >= 1; i--) {\n        for(int j = 1; j <= m; j++) {\n            if(!f[2][i][j]) continue;\n            f[2][i][j] = min(f[2][i+1][j], f[2][i][j-1]);\n            if(f[2][i][j] != INF) f[2][i][j]++;\n        }\n    }\n    for(int i = n; i >= 1; i--) {\n        for(int j = m; j >= 1; j--) {\n            if(!f[3][i][j]) continue;\n            f[3][i][j] = min(f[3][i+1][j], f[3][i][j+1]);\n            if(f[3][i][j] != INF) f[3][i][j]++;\n        }\n    }\n    for(int i = 1; i <= n; i++) {\n        for(int j = 1; j <= m; j++) {\n            ans = min(min(f[0][i][j], f[1][i][j]), min(f[2][i][j], f[3][i][j]));\n            printf(\"%d \", ans);\n        }\n        putchar('\\n');\n    }\n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1509448126,
        "uid": 21421,
        "name": "pantw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u7684\u535a\u5ba2 [\u67f4\u72ac\u9996\u76f8\u7684blog](http://blog.csdn.net/qq\\_39670434)\n\n## \u5206\u6790 ##\n\n\u8fd9\u9053\u9898\u76ee\u6c42\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u554a\uff0c\u771f\u662f\u4f3c\u66fe\u76f8\u8bc6\uff0c\u662f\u4e0d\u662f\u5c31\uff0c\u4e00\u770b\u5c31\u6210\u4e86\u4e00\u4e2a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u4e86\uff1f\u6ca1\u9519\uff0c\u8fd9\u5c31\u662f\u4e00\u9053\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u6a21\u677f\u9898\u3002\n\n**\u6709\u4eba\u4f1a\u4e0d\u670d**\n\n\u6709\u4eba\u4f1a\u8bf4\uff0c\u4e3a\u5565\u4e0d\u80fd\u7528\u6df1\u641c\uff0c\u6df1\u641c\u7684\u7684\u4ee3\u7801\u53ef\u7b80\u5355\u4e86\u3002\u4f46\u662f\u770b\u8fd9\u4e2a\u6570\u636e\uff0cN\\*M<=182^2\uff0c\u5982\u679c\u6df1\u641c\u5c31\u4f1a\u8d85\u65f6\uff0c\u8bf4\u4e0d\u5b9a\u90a3\u4e2a\u5c31\u7206\u6808\u4e86\u3002\n\n**\u601d\u8def**\n\n\u8fd9\u9053\u9898\u6211\u4eec\u53ea\u9700\u8981\u5148\u628a\u6240\u6709\u503c\u4e3a1\u7684\u70b9\u8ddd\u79bb\u8bbe\u4e3a0\uff08\u521d\u59cb\u5316\uff09\uff0c\u5c06\u5176\u4f4d\u7f6e\u4f9d\u6b21\u8fdb\u961f\uff0c\u4f9d\u6b21\u6269\u5c55\u6ca1\u6709\u8ba1\u7b97\u8fc7\u8ddd\u79bb\u7684\u70b9\uff0c\u6bcf\u6b21\u62d3\u5c55\u90fd\u961f\u5934\u540e\u79fb\uff0c\u90a3\u4e48\u961f\u5934\u52301\u70b9\u7684\u8ddd\u79bb+1\u5c31\u662f\u62d3\u5c55\u7684\u70b9\u7684\u8ddd\u79bb\uff08\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u57fa\u672c\u601d\u60f3\uff0c\u7528\u961f\u5217\u7ef4\u62a4\uff09\u3002\n\n## \u4ee3\u7801 ##\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nstruct MAP\n{\n    int x,y;\n}a[1000010];\n//\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\u6765\u8bb0\u5f55\u8fdb\u961f\u987a\u5e8f\nbool f[1010][1010];\n//\u6807\u8bb0\u8fd9\u4e2a\u70b9\u6709\u6ca1\u6709\u88ab\u641c\u7d22\u8fc7\u3002\nint d[1010][1010];\n//\u8fd9\u4e2a\u70b9\u5c31\u662f\uff0c\u7528\u6765\u5b58\u6700\u77ed\u8ddd\u79bb\u7684\uff0c\u521d\u503c\u5168\u90e8\u4e3a0\uff1b\nint dx[5]={0,0,0,-1,1},dy[5]={0,-1,1,0,0};\n//direct\uff01\uff01\u65b9\u5411\u6570\u7ec4\u662f\u4e2a\u5c0f\u6280\u80fd\uff0c\u5b66\u4f1a\u80fd\u53d1\u6325\u5f88\u5927\u7684\u5a01\u529b\nint tail=0,head=0;\n//\u961f\u5934\u548c\u961f\u5c3e\nint main()\n{\n    memset(f,true,sizeof(f));\n    //\u521d\u59cb\u5316\u5168\u90e8\u6807\u4e3atrue\uff0c\u8bbf\u95ee\u8fc7\u3002\n    scanf(\"%d%d\",&n,&m);\n    //\u8bfb\u5165\u554a\n    for(int i=1;i<=n;i++)\n    {\n        string s;\n        cin>>s;\n        //\u8bfb\u5165\u672c\u884c\u7684\u6240\u6709\u5143\u7d20\n        for(int j=0;j<s.size();j++)\n        if(s[j]=='0')\n        f[i][j+1]=false;\n        //\u5982\u679c\u662f0\u5c31\u6807\u8bb0\u4e3a\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u53cd\u8fc7\u6765\u8bf4\uff0c\u5c31\u662f\u628a\u6240\u67091\u90fd\u6807\u8bb0\u4e3a\u8bbf\u95ee\u8fc7\u4e86\n        else\n        {\n            d[i][j+1]=0;\n            //\u521d\u59cb\u5316\u8ddd\u79bb0\uff1b\n            f[i][j+1]=true;\n            //\u8bbf\u95ee\u8fc7\u5566\n            a[++tail].x=i;\n            a[tail].y=j+1;\n            //\u5165\u961f\n        }\n    }\n    //\u6309\u961f\u5217\u987a\u5e8f\u5f00\u59cb\u641c\u7d22\n    for(head=1;head<=tail;head++)//\u679a\u4e3e\u961f\u9996\n    {\n        for(int i=1;i<=4;i++)\n        //\u7528direct\u6570\u7ec4\u6765\u5411\u56db\u65b9\u6269\u5c55\u3002\n        {\n            int xx=a[head].x+dx[i],yy=a[head].y+dy[i];\n            //\u65b9\u5411\u6570\u7ec4\u7684\u7528\u5904\u5c31\u5728\u8fd9\u91cc\u4e86\n            if(!f[xx][yy])\n            //\u5982\u679c\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n            {\n                d[xx][yy]=d[a[head].x][a[head].y]+1;\n                //\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb=\u961f\u5934\u8ddd\u79bb+1\uff1b\n                f[xx][yy]=true;\n                //\u6807\u8bb0\u8bbf\u95ee\u8fc7\n                a[++tail].x=xx;\n                a[tail].y=yy;\n                //\u5165\u961f\u3002\n            }\n        }\n    }\n    //d\u6570\u7ec4\u5c31\u662f\u8ddd\u79bb\uff0c\u73b0\u5728\u53ef\u4ee5\u8f93\u51fa\u4e86\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        printf(\"%d \",d[i][j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1505913028,
        "uid": 24081,
        "name": "Hydra_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "\u770b\u6ca1\u4eba\u5199\u66b4\u529b\n\u849f\u84bb\u6253\u4e86\u4e00\u4e2a\u66b4\u529b\n\u66b4\u529b\u505a\u6cd5\n\u5f88\u5389\u5bb3\n\u4e0d\u4f1a\u7206\n\u849f\u84bb\u4e0d\u4f1a;\n```\n#include<bits/stdc++.h> //\u4e07\u80fd\u5934\nusing namespace std;\nint n,m,i,j,z=0,d,b,c;\nint dx[4]={1,-1,0,0};    \nint dy[4]={0,0,-1,1};    //\u65b9\u5411\nstring s;\nint main()\n{\n    //freopen(\"bit.in\",\"r\",stdin);\n    //freopen(\"bit.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);   //\u8f93\u5165\n    int a[n+3][m+3];\n    bool pd[n+3][m+3];\n    for(i=1;i<=n;i++)\n    {\n        cin>>s;\n        for(j=0;j<m;j++)\n        {\n            if(s[j]=='0') a[i][j+1]=10000000;  //\u662f0\u5c31\u7ed9\u4e00\u4e2a\u5927\u503c\n                else \n                {\n                    a[i][j+1]=0;     //\u4e0d\u7136\u4e3a0\uff1b\n                    pd[i][j+1]=1;    //\u6807\u8bb0\n                }\n        }\n    }\n    for(z=0;z<10000;z++)        //\u66b4\u529b\u89e3\u9898\n    {\n        for(i=1;i<=n;i++)\n            for(j=1;j<=m;j++)\n            {\n                if(a[i][j]==z)\n                {\n                    for(d=0;d<4;d++)\n                    {\n                        b=i+dx[d];c=j+dy[d];\n                        if(b>0&&b<=n&&c>0&&b<=n&&pd[b][c]==0&&a[b][c]>z)\n                            a[b][c]=z+1;\n                    }\n                }\n            }\t\n            \n        }\n    for(i=1;i<=n;i++)          //\u8f93\u51fa\n    {\n        for(j=1;j<=m;j++)\n            printf(\"%d \",a[i][j]);\n            printf(\"\\n\");\n    }\t\n}\n```\n\u5e0c\u671b\u80fd\u5e2e\u4f60\uff01\uff01\uff01",
        "postTime": 1540083016,
        "uid": 104709,
        "name": "LOFTER_OI",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "### \u6700\u5f3a\u6b63\u89e3:\n\nK-D Tree\n\n\u7b80\u6d01\u9898\u610f\uff1a\u7ed9\u5b9an*m01\u77e9\u9635\uff0c\u6c42\u6240\u6709\u4f4d\u7f6e\u7684\u8ddd\u79bb\u6700\u8fd1\u76841\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\n\n\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u53ef\u4ee5\u7528kdtree\u53bb\u505a\n\n\u628a1\u7684\u70b9\u5750\u6807\u63d2\u5165\u5230kdtree\u4e2d\uff0c0\u5b8c\u5168\u53ef\u4ee5\u4e0d\u7ba1\u5b83\n\n\u4e4b\u540e\u6240\u6709\u7684\u5750\u6807\u90fd\u5728kdtree\u4e2d\u67e5\u8be2\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(nm\u221a(nm))=182^3\n\n~~\u4f46\u662f\u8fd9\u4e2a\u4e1c\u897f\u5b9e\u8d28\u662f\u5728kdtree\u4e0aA*\uff0c\u5bb9\u6613\u88ab\u5361\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u6211\u4e3a\u4ec0\u4e48\u4e0d\u5f00O2T\u4e00\u4e2a\u70b9~~\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::abs;\nusing std::max;\nusing std::min;\nusing std::nth_element;\nconst int N=190,K=2,INF=2147483647;\nint n,m,f,cnt;\nstruct point\n{\n\tint d[K];\n\tinline point(int x=0,int y=0){d[0]=x;d[1]=y;}\n\tinline const bool operator<(const point &p)const\n\t{\n\t\treturn d[f]<p.d[f];\n\t}\n\tinline const friend int manhattan(const point &x,const point &y)\n\t{\n\t\tint dis=0;\n\t\tfor (int i=0;i<K;i++)dis+=abs(x.d[i]-y.d[i]);\n\t\treturn dis;\n\t}\n}a[N*N];\ntemplate<int k>class KD_Tree\n{\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\ttree *son[2];\n\t\t\tpoint range,mn,mx;\n\t\t\tinline const void pushup()\n\t\t\t{\n\t\t\t\tfor (int i=0;i<k;i++)\n\t\t\t\t\tmx.d[i]=max(range.d[i],max(son[0]->mx.d[i],son[1]->mx.d[i])),\n\t\t\t\t\tmn.d[i]=min(range.d[i],min(son[0]->mn.d[i],son[1]->mn.d[i]));\n\t\t\t}\n\t\t\tinline const int fmin(const point &x)\n\t\t\t{\n\t\t\t\tint f=0;\n\t\t\t\tfor (int i=0;i<k;i++)\n\t\t\t\t\tf+=max(mn.d[i]-x.d[i],0)+max(x.d[i]-mx.d[i],0);\n\t\t\t\treturn f;\n\t\t\t}\n\t\t}*root,memory_pool[N*N],*tail,*null;\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\tnull->son[0]=null->son[1]=null;\n\t\t\tfor (int i=0;i<k;i++)null->mn=INF,null->mx=-INF;\n\t\t}\n\t\tinline tree *spawn(const point &x)\n\t\t{\n\t\t\ttree *p=tail++;\n\t\t\tp->range=p->mn=p->mx=x;\n\t\t\tp->son[0]=p->son[1]=null;\n\t\t\treturn p;\n\t\t}\n\t\tinline tree *build(int l,int r,int d)\n\t\t{\n\t\t\tif (l>r)return null;\n\t\t\tint mid=l+r>>1;f=d;\n\t\t\tnth_element(a+l,a+mid,a+r+1);\n\t\t\ttree *p=spawn(a[mid]);\n\t\t\tif (l==r)return p;\n\t\t\tp->son[0]=build(l,mid-1,(d+1)%k);\n\t\t\tp->son[1]=build(mid+1,r,(d+1)%k);\n\t\t\tp->pushup();\n\t\t\treturn p;\n\t\t}\n\t\tint mn;\n\t\tinline const void query(tree *p,const point &x)\n\t\t{\n\t\t\tmn=min(mn,manhattan(p->range,x));\n\t\t\tint f[2]={INF,INF};\n\t\t\tif (p->son[0]!=null)f[0]=p->son[0]->fmin(x);\n\t\t\tif (p->son[1]!=null)f[1]=p->son[1]->fmin(x);\n\t\t\tbool t=f[0]>=f[1];\n\t\t\tif (f[t]<mn)query(p->son[t],x);t^=1;\n\t\t\tif (f[t]<mn)query(p->son[t],x);\n\t\t}\n\tpublic:\n\t\tinline const void build()\n\t\t{\n\t\t\tinit();root=build(1,cnt,0);\n\t\t}\n\t\tinline const int query(int x,int y)\n\t\t{\n\t\t\tmn=INF;query(root,point(x,y));return mn;\n\t\t}\n};\nKD_Tree<K>kdt;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);char x;\n\tfor (int i=1;i<=n;i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tif (scanf(\" %c\",&x),x^48)\n\t\t\t\ta[++cnt]=point(i,j);\n\tkdt.build();\n\tfor (int i=1;i<=n;putchar('\\n'),i++)\n\t\tfor (int j=1;j<=m;j++)\n\t\t\tprintf(\"%d \",kdt.query(i,j));\n\treturn 0;\n}\n```",
        "postTime": 1566916665,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "### \u601d\u8def\uff1aBFS+STL\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u8868\u793a\u961f\u5217\u4e2d\u70b9\u7684\u5750\u6807\u548c\u5230\u6700\u8fd1 ' 1 ' \u7684\u8ddd\u79bb\u3002\u7136\u540e\u60f9\uff0c\u5c31\u662f\u5efa\u7acb\u4e00\u4e2a\u961f\u5217\uff0c\u7136\u540e\u628a\u626b\u5230\u7684 ' 1 ' \u653e\u5165\u961f\u5217\u4e2d\uff0c\u8fdb\u5165\u5230 BFS\u51fd\u6570**\uff08** \u6211\u559c\u6b22\u7528STL\uff0c\u56e0\u4e3aSTL\u597d\u5199\uff0c~~**STL\u5927\u6cd5\u597d**~~**\uff09**\u3002\u73b0\u5728\u5c31\u5f00\u59cb\u627e\u5468 \u56f4\u7684'0',\u627e\u56db\u5468\u7684\uff0c\u7136\u540e\u5c31\u628a\u4ed6\u4eec\u653e\u5230\u961f\u5217\u91cc\uff0c\u7136\u540e\u60f9\u518d\u53bb\u627e\u522b\u7684\uff0c\u76f4\u5230\u961f\u5217\u4e3a\u7a7a\u3002\n### code\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<queue>\n\nusing namespace std;\n\nint n,m,a[183][183];\n//\u8f93\u51fa\u7684\u7ed3\u679c \nint xx[4]={0,0,1,-1},yy[4]={1,-1,0,0};\n//\u65b9\u4f4d\u79fb\u52a8\nbool v[183][183];\n//\u8868\u793a\u662f\u5426\u8bbf\u95ee\u8fc7 \nchar b[183][183];\n//\u8f93\u5165\u7684\u77e9\u9635 \n\nstruct node\n{\n\tint x,y,d;//xy\u8868\u793a\u5750\u6807\uff0cd\u8868\u793a\u8ddd\u79bb \n};\nqueue<node> q;\nvoid bfs()\n{\n\tnode net,now;\n\twhile(!q.empty()) {\n\t\tnow=q.front();\t//\u53d6\u961f\u9996\u5143\u7d20 \n\t\tq.pop();\n\t\tint x=now.x, y=now.y, d=now.d;\n\t\ta[x][y]=d;\t//\u627e\u6700\u5c0f\u503c\uff0c\u5f53\u524d\u8d70\u5230\u7684\u4e00\u5b9a\u662f\u6700\u5c0f\u503c \n\t\tfor(int i=0;i<4;++i) {\t//\u53d6\u6700\u5c0f\u8005 \n\t\t\tint dx=x+xx[i],dy=y+yy[i];\n\t\t\tif(dx>=1 && dx<=n && dy>=1 && dy<=m && !v[dx][dy] && b[dx][dy]=='0') {\n\t\t\t\tv[dx][dy]=1;\t//\u7f6e1\uff0c\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86 \n\t\t\t\tnet.x=dx;net.y=dy;net.d=d+1;//\u4e00\u6b65\u4e00\u6b65\u7684+ \n\t\t\t\tq.push(net);\t//\u5165\u961f \n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tnode qq;\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(v,0,sizeof v);//\u521d\u59cb\u5316\u4e3a0\uff0c\u90fd\u6ca1\u8bbf\u95ee\u8fc7 \n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=m;++j) {\n\t\t\tcin>>b[i][j];\n\t\t\tif(b[i][j]=='1') {\n\t\t\t\tqq.x=i;qq.y=j;qq.d=0;\n\t\t\t\tq.push(qq);\t//\u5982\u679c\u662f\u20181\u2019\uff0c\u8ddd\u79bb\u5c31\u662f0 \n\t\t\t\tv[i][j]=1;\t//\u4e3a\u20181\u2019\u7684\u80af\u5b9a\u8bbf\u95ee\u8fc7 \n\t\t\t}\n\t\t\ta[i][j]=99999999;\t\t//\u6bcf\u4e00\u4e2a\u90fd\u8bbe\u4e3a\u4e00\u4e2a\u6781\u5927\u503c \n\t\t}\n\tbfs();\t\t//\u5f00\u59cb\u5e7f\u641c \n\tfor(int i=1;i<=n;++i) {\t\t//\u8f93\u51fa\u77e9\u9635 \n\t\tfor(int j=1;j<=m;++j)\n\t\t\tprintf(\"%d \",a[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1557216858,
        "uid": 186534,
        "name": "Atmizz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "# \u66b4\u529b\u601d\u8def\n**\u6ce8\u91ca\u5f88\u8be6\u7ec6,\u66b4\u529b\u7684\u65f6\u95f4\u53d6\u51b3\u4e8e\u4eae\u70b9,\u4e5f\u5c31\u662f1\u7684\u4e2a\u6570**\n\n~~luogu\u7684\u6570\u636e\u5f88\u6c34,\u6240\u4ee5\u66b4\u529b\u8fc7\u6ca1\u95ee\u9898~~\n\n**\u66b4\u529b\u65f6\u95f4\u8981\u8d85\u8fc71s\n\u641c\u7d22\u65f6\u95f4\u5728100ms\u4ee5\u5185(\u641c\u7d22\u5927\u6cd5\u597d)**\n```\n/*\nbit\u601d\u8def:\u5b58\u56fe\u7684\u65f6\u5019\u628a\u4eae\u5149\u7684\u70b9\u7528\u7ed3\u6784\u4f53\u7edf\u4e00\u5b58\u4e0b\u5750\u6807\n\u5982: a[1].x=4,a[1].y=1;\u65b9\u4fbf\u540e\u9762\u6c42\u8ddd\u79bb\n*/\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#define ll long long\n#define maxn 2147483647\nusing namespace std;\nint n,m,cnt,qus,ans=maxn;\nint maps[1001][1001],anss[1001][1001];\ninline int read(){\n\tint sign=1;\n\tchar ch;\n\twhile((ch=getchar())<'0'||ch>'9')if(ch=='-')sign=-1;\n\tint res=ch-'0';\n\twhile((ch=getchar())>='0'&&ch<='9')res=res*10+ch-'0';\n\treturn res*sign;\n}\nstruct node{\n\tint sx,sy;\n}a[1001000];//\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u4f5c\u7528\u662f\u8bb0\u5f55\u4eae\u5149\u7684\u5750\u6807 \nvoid init()//\u8f93\u5165\u51fd\u6570 \n{\n\tn=read(),m=read();\t\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tscanf(\"%1d\",&maps[i][j]);//\u6ce8\u610f\u8f93\u5165\u683c\u5f0f\u65e0\u7a7a\u683c.......orz....... \n\t\tif(maps[i][j]==1)//\u8bb0\u5f55\u4eae\u5149\u5750\u6807 \n\t\t{\n\t\t\tcnt++;\n\t\t\ta[cnt].sx=i;\n\t\t\ta[cnt].sy=j;\n\t\t}\n\t}\n}\nvoid put()//\u8f93\u51fa\u51fd\u6570 \n{\n\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\tcout<<anss[i][j]<<\" \";\n\t\tcout<<endl;\n\t}\n}\nvoid solve()//\u89e3\u9898\u51fd\u6570 \n{\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++)\n\t{\n\t\tif(maps[i][j]==0)//\u4ece\u5934\u5f00\u59cb\u627e\u975e\u4eae\u5149\u70b9 \n\t\t{\n\t\t\tfor(int k=1;k<=cnt/2;k++)//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u4fbf\u5386\u6240\u6709\u70b9\u7684\u5750\u6807 \n\t\t\t{\n\t\t\t\tif(a[k].sy==a[k-1].sy&&k>=2)continue; \n\t\t\t\tqus=abs(i-a[k].sx)+abs(j-a[k].sy);\u6c42\u8ddd\u79bb \n\t\t\t\tans=min(qus,ans); \n\t\t\t}\n\t\t\tanss[i][j]=ans;\n\t\t\tans=maxn;\n\t\t\tqus=0;\n\t\t}\n\t}\n}\nint main()\n{\n\tfreopen(\"bit.in\",\"r\",stdin);\n\tfreopen(\"bit.out\",\"w\",stdout);//\u4e0d\u8981\u6284\u9898\u89e3\u54e6\n\tinit();\n\tsolve();\n\tput();\n\treturn 0;\n}\n```\n",
        "postTime": 1555207636,
        "uid": 108565,
        "name": "\u7d75\u68a8\u8863",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "### \u6765\u4e00\u6ce2\u5e7f\uff08\u5bbd\uff09\u641c\u9898\u89e3\n### \u601d\u8def\uff1a\u4ece\u201c1\u201d\u5f00\u59cb\u641c\uff08\u80af\u5b9a\u7684\uff0c\u4e0d\u7136\u4f1aTLE\uff09\uff0c\u6bcf\u6b21\u5c06\u8def\u5f84\u66f4\u4e3a\u6700\u5c0f\u503c\uff0c\u7136\u540e\u8f93\u51fa\u3002\n#### \u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n#define clr(x) memset(x,0,sizeof(x))\nusing namespace std;\nint dx[] = {1,-1,0,0};\nint dy[] = {0,0,-1,1};\nint n,m,p;\nbool a[183][183];\nint _1[33125][2];\nint que[100001][2];\nint dis[183][183];\nbool f[183][183];\nchar c;\nint main()\n{\n\tcin >> n >> m;\n\tfor (int i = 1;i <= n;i++)\n\t    for (int j = 1;j <= m;j++)\n\t        dis[i][j] = 33124;\n\tfor (int i = 1;i <= n;i++)\n\t    for (int j = 1;j <= m;j++)\n\t    {\n\t\t\tcin >> c;\n\t\t\ta[i][j] = c - '0';\n\t\t\tif (a[i][j])\n\t\t\t    _1[++p][0] = i,_1[p][1] = j,dis[i][j] = 0;                      //\u627e\u201c1\u201d\uff0c\u5b58\u50a8\n\t\t}\n\tfor (int i = 1;i <= p;i++)\n\t{\n\t\tint x = _1[i][0],y = _1[i][1];\n\t\tint head = 1,tail = 2;\n\t\tclr(f);\n\t\tf[x][y] = 1;\n\t\tque[head][0] = x;\n\t\tque[head][1] = y;       //\u521d\u59cb\u5316\n\t\twhile (head < tail)\n\t\t{\n\t\t\tfor (int j = 0;j < 4;j++)\n\t\t\t{\n\t\t\t\tint tx = que[head][0] + dx[j];\n\t\t\t\tint ty = que[head][1] + dy[j];\n\t\t\t\tif (tx > 0 && tx <= n && ty > 0 && ty <= m && !f[tx][ty] && !a[tx][ty] && dis[que[head][0]][que[head][1]] + 1 < dis[tx][ty])                              //\u5224\u65ad+\u526a\u679d\uff08\u82e5\u8def\u5f84\u5df2\u7ecf\u66f4\u957f\u5c31\u4e0d\u7528\u7ee7\u7eed\u6269\uff09\n\t\t\t\t{\n\t\t\t\t\tf[tx][ty] = 1;\n\t\t\t\t\tque[tail][0] = tx;\n\t\t\t\t\tque[tail++][1] = ty;\n\t\t\t\t\tdis[tx][ty] = dis[que[head][0]][que[head][1]] + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\thead++;\n\t\t}           //\u5e7f\u641c\n\t}               //\u4ece\u6bcf\u4e2a\u201c1\u201d\u5f00\u59cb\n\tfor (int i = 1;i <= n;i++,puts(\"\"))\n\t    for (int j = 1;j <= m;j++)\n\t        cout << dis[i][j] << \" \";\n\treturn 0;\n}\n```",
        "postTime": 1545540492,
        "uid": 108879,
        "name": "dinghongyu",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "\u4e0b\u9762\u53d1\u4e00\u4e2aPas\u9898\u89e3\uff1a\n\n\u8fd9\u4e00\u9898\u662f\u4e3a\u6240\u6709\u70b9\u6c42\u6700\u77ed\u8ddd\u79bb\u7684\u9898\uff0c\u6240\u4ee5\u53ef\u4ee5\u6709\u4ee5\u4e0b\u7684\u505a\u6cd5\uff1a\n\n- \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\uff1b\n\n- \u5bbd\uff08\u5e7f\uff09\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09\u3002\n\n\nDFS\u601d\u8def\uff1a\n\n- \u5148\u8bfb\u5165\uff0c\u5e76\u627e\u51fa\u54ea\u4e9b\u662f\u767d\u8272\u7684\uff0c\u5c06\u6700\u77ed\u8ddd\u79bbf[i,j]\u8bbe\u4e3a0\uff1b\n\n- \u5faa\u73af\uff0c\u662f\u767d\u8272\u5c31DFS\uff1b\n\n- \u5c06\u6570\u7ec4f\u8f93\u51fa\u3002\n\n\u5b50\u7a0b\u5e8fDFS\uff1a\n\n- \u5faa\u73af\uff0c\u52a0\u4e0a\u65b9\u5411\u589e\u91cf\u503c\u540e\u5982\u679c\u90a3\u91cc\u662f\u9ed1\u7684\uff0c\u4e14\u8ddd\u79bb\u66f4\u77ed\u5c31\u66f4\u65b0f\uff0c\u518dDFS\u3002\n\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```pascal\nconst dx:array[1..4] of longint=(0,0,1,-1);\ndy:array[1..4] of longint=(1,-1,0,0);                                                         //\u65b9\u5411\u589e\u91cf\u503cdx,dy\nvar f:array[0..200,0..200] of longint;                                                        //\u72b6\u6001\u6570\u7ec4\uff0cf[i,j]\u8868\u793a\u50cf\u7d20\u70b9i,j\u7684\u6700\u77ed\u8ddd\u79bb\na:array[0..200,0..200] of boolean;\nn,m,i,j:longint;\ns:string;\nprocedure dfs (x,y,s:longint);                                                                  //\u6df1\u641c\uff0cx,y\u8868\u793a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff0cs\u8868\u793a\u6539\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\nvar i:longint;\n    begin\n    for i:=1 to 4 do\n    if not a[x+dx[i],y+dy[i]] and (f[x+dx[i],y+dy[i]]>s+1) then            //\u52a0\u4e0a\u65b9\u5411\u589e\u91cf\u503c\u540e\u5982\u679c\u90a3\u91cc\u662f\u9ed1\u7684\uff0c\u4e14\u8ddd\u79bb\u66f4\u77ed\n        begin\n    f[x+dx[i],y+dy[i]]:=s+1;                                                                 //\u66f4\u65b0f\n    dfs(x+dx[i],y+dy[i],s+1);                                                                //DFS\u4e0b\u4e00\u8f6e\n        end;\n    end;\nbegin\n    readln(n,m);\n    fillchar(a,sizeof(a),true);\n    fillchar(f,sizeof(f),127);                                                                  //\u521d\u59cb\u5316\n    for i:=1 to n do\n        begin\n    readln(s);\n    for j:=1 to m do\n        begin\n    a[i,j]:=(s[j]='1');\n    if a[i,j] then f[i,j]:=0;\n        end;\n        end;                                                                                      //\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u5904\u7406\n    for i:=1 to n do\n        for j:=1 to m do\n        if f[i,j]=0 then dfs(i,j,0);                                                         //DFS\n    for i:=1 to n do\n        begin\n    for j:=1 to m do\n    write(f[i,j],' ');\n    writeln;\n        end;                                                                                      //\u8f93\u51fa\nend.\n```\n\u7ed3\u679c\uff1a\n\n\u8bc4\u6d4b\u7ed3\u679c\uff1aUnaccepted                     \u5f97\u5206\uff1a30\n\n\u63d0\u4ea4\u65f6\u95f4\uff1a2017-05-05 14:13            \u8017\u65f6\uff1a538ms\n\n\u5185\u5b58\uff1a8781kb                                    \u8bc4\u6d4b\u673a\uff1a\u7f8e\u56fd\u7684Wallace\n\n\u7f16\u8bd1\u4fe1\u606f \u7f16\u8bd1\u6210\u529f \u6ca1\u6709\u7f16\u8bd1\u4fe1\u606f\n\n\u5206\u70b9\u4fe1\u606f\uff08\u9f20\u6807\u79fb\u5230\u65b9\u5757\u4e0a\u6709\u8be6\u7ec6\u4fe1\u606f\uff09\n\n#1 AC 0ms/8703kB\n\n#2 AC 0ms/8703kB\n\n#3 AC 538ms/8781kB\n\n#4 TLE\n#5 TLE\n#6 TLE\n#7 TLE\n#8 TLE\n#9 TLE\n#10 TLE\n\n\u5f53\u5f53\u5f53\u5f53\u5f53\uff01\u5b8c\u7f8e\u7684\u7206\u4e867\u4e2a\u70b9\uff0c\u8d85\u65f6\uff01\uff01\uff01\n\n\n\u597d\u4e86\uff0c\u7ecf\u8fc7\u8fd9\u4e00\u756a\u6298\u817e\uff0c\u6211\u6539\u8fc7\u81ea\u65b0\uff0c\u7528\u4e86\u6b63\u89e3\uff1aBFS\uff08\u5bbd\uff08\u5e7f\uff09\u5ea6\u4f18\u5148\u641c\u7d22\uff09\uff1a\n\nBFS\u601d\u8def\uff1a\n\n- \u521d\u59cb\u5316\uff1b\n\n- \u8bfb\u5165\uff0c\u5c06\u767d\u8272\u7684\u70b9\u5148\u5165\u961f\uff0c\u5e76\u5c06\u4fe1\u606f\u5b58\u5165\u6570\u7ec4f\uff0cx[i,j]\u6539\u4e3a0\uff1b\n\n- BFS\uff0c\u5934\u6307\u9488h+1\uff0c\u5faa\u73af\uff1b\n\n- \u5c06\u5373\u5c06\u51fa\u961f\u7684\u70b9\u7684\u5750\u6807\u52a0\u4e0a\u65b9\u5411\u589e\u91cf\u503c\uff0c\u82e5\u672a\u5165\u961f\uff0c\u5219\u5c3e\u6307\u9488t+1\uff0c\u4fdd\u5b58\u8be5\u70b9\u7684\u6570\u636e\uff0c\u5c06\u6700\u77ed\u8def\u5f84x\u66f4\u6539\u4e3ax[f[h,1],f[h,2]]+1\uff0c\u5e76\u8bbe\u4e3a\u4e0d\u80fd\u8d70\u4e86\uff08\u8fdb\u5ea6\u4e00\u6837\uff0c\u5148\u627e\u5230\u8be5\u70b9\u5c31\u662f\u6700\u5feb\u7684\uff09\uff1b\n\n- \u5f53\u6240\u6709\u6210\u5458\u5168\u90e8\u51fa\u961f\u65f6\uff0c\u9000\u51fa\u5faa\u73af\u3002\n\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```pascal\nconst dx:array[1..4] of longint=(0,0,1,-1);\ndy:array[1..4] of longint=(1,-1,0,0);                         //\u65b9\u5411\u589e\u91cf\u503cdx,dy\nvar x:array[1..200,1..200] of longint;\na:array[0..200,0..200] of boolean;\nf:array[1..34000,1..2] of longint;\nn,m,i,j,h,t:longint;\ns:string;\nbegin\n    readln(n,m);\n    fillchar(a,sizeof(a),true);\n    t:=0;                                                               //\u521d\u59cb\u5316\n    for i:=1 to n do\n        begin\n    readln(s);\n    for j:=1 to m do\n        begin\n    a[i,j]:=(s[j]='1');\n    if a[i,j] then\n        begin\n    t:=t+1;\n    f[t,1]:=i;\n    f[t,2]:=j;\n    x[i,j]:=0;                                                         //\u662f\u767d\u8272\u5c31\u5165\u961f\u5e76\u4fdd\u5b58\u6570\u636e\n        end;\n        end;\n        end;\n    h:=0;\n    repeat                                                           //\u5f00\u59cbBFS\n    h:=h+1;\n    for i:=1 to 4 do                                             //\u679a\u4e3e4\u4e2a\u65b9\u5411\n    if not a[f[h,1]+dx[i],f[h,2]+dy[i]] then           //\u5982\u679c\u8d70\u540e\u7684\u4f4d\u7f6e\u8fd8\u6ca1\u88ab\u627e\u5230\u8fc7\n        begin\n    t:=t+1;\n    f[t,1]:=f[h,1]+dx[i];\n    f[t,2]:=f[h,2]+dy[i];                                        //\u4fdd\u5b58\u6570\u636e\n    x[f[t,1],f[t,2]]:=x[f[h,1],f[h,2]]+1;                    //\u8bb0\u5f55\u8be5\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n    a[f[t,1],f[t,2]]:=true;                                       //\u8be5\u70b9\u88ab\u6807\u8bb0\u4e3a\u627e\u5230\u4e86\n        end;\n    until h=t;                                                      //\u5f53\u6240\u6709\u70b9\u51fa\u961f\u65f6\u5c31\u9000\u51fa\n    for i:=1 to n do\n        begin\n    for j:=1 to m do\n    write(x[i,j],' ');\n    writeln;\n        end;                                                      //\u8f93\u51fa\nend.\n```\n\n\u5982\u6709\u95ee\u9898\u9700\u8981\u4fee\u6b63\u8bf7\u79c1\u4fe1\u6211\uff0c\u5b8c\u5584\u4e4b\u540e\u5373\u53ef\u83b7\u5f97\u4e00\u5c01\u611f\u8c22\u7684\uff08\u79c1\uff09\u4fe1\u3002\n\n<https://www.luogu.org/space/show?uid=11358>\n",
        "postTime": 1493993027,
        "uid": 11358,
        "name": "\u5f6d\u9a90\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n\u9996\u5148\uff0c\u8fd9\u9898\u663e\u793a\u56fe\u50cf\uff0c\u4e5f\u662f\u4e3a\u4e86\u5e7f\u641c\u7684\u521d\u5b66\u8005\u6240\u51c6\u5907\u7684\uff0c\u8fd9\u9898\u4e5f\u662f\u51fa\u7684\u5341\u5206\u7684\u7cbe\u5999\uff0c\u53ef\u8c13\u7262\u7262\u6293\u4f4f\u4e86\u5e7f\u641c\u7684\u7cbe\u9ad3\u3002\u90a3\u4e48\u6b64\u9898\u4f55\u89e3\u8bf7\u770b\u4ee5\u4e0b\u89e3\u91ca\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u82e5\u662f\u8981\u89e3\u51b3\u6b64\u9898\uff0c\u5148\u4ece\u4ed6\u5982\u4f55\u641c\u7d22\u5f00\u59cb\u3002\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u5c31\u662f\u4ece\u4e3a\u767d\u8272\u70b9\u7684\u6240\u6709\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u7136\u540e\u5148\u8fdb\u884c\u4e00\u6b21\u5e7f\u641c\uff0c\u7136\u540e\u518d\u5728\u5df2\u7ecf\u5e7f\u641c\u8fc7\u4e00\u6b21\u7684\u70b9\u4e0a\u518d\u6765\u4e00\u6b21\uff0c\u5982\u6b64\u53cd\u590d\uff0c\u77e5\u9053\u5f97\u51fa\u7b54\u6848\u3002\u90a3\u4e48\u7528\u6837\u4f8b\u6765\u6a21\u62df\u4e00\u4e0b\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n\n\n\u7b2c\u4e00\u6b21\uff1a\n\n[color=red]0 0 1 0\n\n0 1 0 0\n\n1 0 0 1[/color]\n\n\n\u7b2c\u4e8c\u6b21\uff1a\n\n[color=red]0 2 1 0\n\n2 1 0 0\n\n1 0 0 1[/color]\n\n\n\u7b2c\u4e09\u6b21\uff1a\n\n[color=red]3 2 1 0\n\n2 1 0 0\n\n1 0 0 1[/color]\n\n\u8fd9\u6837\u5b50\u5e94\u8be5\u8db3\u591f\u6e05\u6670\u660e\u4e86\u4e86\u5427\uff0c\u90a3\u4e48\u5c31\u8bf7\u770b\u4ee5\u4e0b\u6807\u7a0b\u3002\n\n```delphi\nconst a:array[1..4]of shortint=(0,-1,0,1);\n      b:array[1..4]of shortint=(-1,0,1,0);\nvar road,jj:array[0..182,0..182]of longint;\n    s:ansistring;\n    c:array[1..35000,1..2] of longint;\n    i,j,o,m,n,m1,n1,x1,y1,x,y,p,q:longint;\nprocedure dg(p,q,o:longint);\nvar i:longint;\nbegin\n  while m1<n1 do begin{\u6b63\u5e38\u7684\u5e7f\u641c\u6a21\u5f0f}\n  for i:=1 to 4 do begin\n    x:=c[m1,1]+a[i];\n    y:=c[m1,2]+b[i];\n    if (x>0)and(x<=n)and(y>0)and(y<=m)\n    and(jj[x,y]=0)\n    then begin\n      c[n1,1]:=x;c[n1,2]:=y;\n      jj[x,y]:=jj[c[m1,1],c[m1,2]]+1;\n      inc(n1);\n    end;end;\n  inc(m1);\n  end;\nend;\nbegin\n  readln(n,m);\n  for i:=1 to n do begin\n    readln(s);{\u56e0\u4e3a\u8fd9\u91cc\u8ddf01\u8ff7\u5bab\u4e00\u6837\uff0c\u6570\u5b57\u4e2d\u95f4\u6ca1\u6709\u7a7a\u683c\uff0c\u6240\u4ee5\u5148\u8bfb\u5165\u6210\u5b57\u7b26\u4e32\u7136\u540e\u518d\u8f6c\u6362\u5230\u6570\u7ec4\u4e2d}\n    for j:=1 to m do begin\n    val(s[j],road[i,j]);\n    if road[i,j]=1 then begin {\u4e3a\u4e86\u540e\u7eed\u5904\u7406\u7684\u9700\u8981\uff0c\u8bb0\u5f55\u6240\u6709\u767d\u70b9\u7684\u603b\u6570\uff0c\u56e0\u4e3a\u662f\u5e7f\u641c\uff0c\u6240\u4ee5\u5c06\u4ed6\u4eec\u7684\u4f4d\u7f6e\u90fd\u8bb0\u5f55\u5230\u6570\u7ec4\u4e2d}\n    jj[i,j]:=1;\n    inc(p);\n    c[p,1]:=i;\n    c[p,2]:=j;end;\n    end;\n  end;\n  m1:=1;{\u5934\u6307\u9488\u4e3a1}\n  n1:=p+1;{\u4e3a\u6307\u9488\u4e3a\u6240\u6709\u767d\u70b9\u603b\u6570\u52a01}\n  dg(c[1,1],c[2,1],p);{\u5f00\u59cb\u5e7f\u641c}\n  for i:=1 to n do begin\n    for j:=1 to m do write(jj[i,j]-1,' ');writeln;end;\nend.\n```\n\u56e0\u4e3a\u8fd9\u91cc\u9664\u4e86\u505a\u5904\u7406\u7684\u65f6\u5019\u9700\u8981\u4e9b\u6280\u5de7\u4e4b\u5916\uff0c\u5176\u4ed6\u90fd\u662f\u5957\u7528\u5e7f\u641c\u7684\u6a21\u5f0f\uff0c\u6240\u4ee5\u5bf9\u4e8e\u53d8\u91cf\u4e0e\u6570\u7ec4\u6211\u4e5f\u4e0d\u505a\u591a\u4f59\u7684\u89e3\u91ca\u4e86\u3002\n\n\u8fd9\u9898\u53ef\u8c13\u96c6\u5e7f\u641c\u4e4b\u7cbe\u534e\uff0c\u6240\u4ee5\u540c\u5b66\u4eec\u4e0d\u80fd\u4e00\u5473\u7684\u6284\u9898\u89e3\uff0c\u800c\u662f\u8981\u597d\u597d\u53c2\u609f\u624d\u884c\uff01\n",
        "postTime": 1376928980,
        "uid": 147,
        "name": "\u91ce\u83dc\u6c64",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1256 \u3010\u663e\u793a\u56fe\u50cf\u3011"
    }
]