[
    {
        "content": "\u819c\u62dc\u697c\u4e0b\u795e\u7287\n\n%%% \u8fd9\u7684\u786e\u662f\u4e00\u9053\u88f8\u7684AC\u81ea\u52a8\u673a\uff08\u5199\u4e86\u662f\u6a21\u677f\u5440\uff09\n\n\u6240\u4ee5\uff0c\u5c31\u662f\u6253\u4e00\u904dAC\u81ea\u52a8\u673a\u5373\u53ef\n\n~~\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u767e\u5ea6~~\n\n~~\u6216\u8005\u4e5f\u53ef\u4ee5\u53c2\u8003\u6211\u4ee3\u7801\u7684\u6ce8\u91ca~~\n\n\u8fc7\u4e86\u8fd9\u4e48\u4e45\uff0c\u5f53\u7136\u8981\u6539\u4e00\u4e0b\n\n\u9996\u5148\u80af\u5b9a\u8981\u641e\u4e00\u641e\u81ea\u5df1\u7684\u535a\u5ba2\u5bf9\u4e0d\u5bf9\u3002\u3002\u3002\n\n[AC\u81ea\u52a8\u673a\u4e0d\u61c2\u6233\u8fd9\u91cc](http://www.cnblogs.com/cjyyb/p/7196308.html)\n\nAC\u81ea\u52a8\u673a\u7684\u96be\u70b9\u5728\u4e8eFail\u5931\u914d\u6307\u9488\u7684\u6784\u5efa\n\n\u81ea\u5df1\u591a\u753b\u56fe\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5f04\u61c2\u8fd9\u4e2a\u95ee\u9898\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nstruct Tree//\u5b57\u5178\u6811 \n{\n     int fail;//\u5931\u914d\u6307\u9488\n     int vis[26];//\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\n     int end;//\u6807\u8bb0\u6709\u51e0\u4e2a\u5355\u8bcd\u4ee5\u8fd9\u4e2a\u8282\u70b9\u7ed3\u5c3e \n}AC[1000000];//Trie\u6811\nint cnt=0;//Trie\u7684\u6307\u9488 \ninline void Build(string s)\n{\n        int l=s.length();\n        int now=0;//\u5b57\u5178\u6811\u7684\u5f53\u524d\u6307\u9488 \n        for(int i=0;i<l;++i)//\u6784\u9020Trie\u6811\n        {\n                if(AC[now].vis[s[i]-'a']==0)//Trie\u6811\u6ca1\u6709\u8fd9\u4e2a\u5b50\u8282\u70b9\n                   AC[now].vis[s[i]-'a']=++cnt;//\u6784\u9020\u51fa\u6765\n                now=AC[now].vis[s[i]-'a'];//\u5411\u4e0b\u6784\u9020 \n        }\n        AC[now].end+=1;//\u6807\u8bb0\u5355\u8bcd\u7ed3\u5c3e \n}\nvoid Get_fail()//\u6784\u9020fail\u6307\u9488\n{\n        queue<int> Q;//\u961f\u5217 \n        for(int i=0;i<26;++i)//\u7b2c\u4e8c\u5c42\u7684fail\u6307\u9488\u63d0\u524d\u5904\u7406\u4e00\u4e0b\n        {\n               if(AC[0].vis[i]!=0)\n               {\n                   AC[AC[0].vis[i]].fail=0;//\u6307\u5411\u6839\u8282\u70b9\n                   Q.push(AC[0].vis[i]);//\u538b\u5165\u961f\u5217 \n               }\n        }\n        while(!Q.empty())//BFS\u6c42fail\u6307\u9488 \n        {\n              int u=Q.front();\n              Q.pop();\n              for(int i=0;i<26;++i)//\u679a\u4e3e\u6240\u6709\u5b50\u8282\u70b9\n              {\n                        if(AC[u].vis[i]!=0)//\u5b58\u5728\u8fd9\u4e2a\u5b50\u8282\u70b9\n                      {\n                                AC[AC[u].vis[i]].fail=AC[AC[u].fail].vis[i];\n                                    //\u5b50\u8282\u70b9\u7684fail\u6307\u9488\u6307\u5411\u5f53\u524d\u8282\u70b9\u7684\n                                  //fail\u6307\u9488\u6240\u6307\u5411\u7684\u8282\u70b9\u7684\u76f8\u540c\u5b50\u8282\u70b9 \n                                Q.push(AC[u].vis[i]);//\u538b\u5165\u961f\u5217 \n                      }\n                      else//\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5b50\u8282\u70b9 \n                      AC[u].vis[i]=AC[AC[u].fail].vis[i];\n                      //\u5f53\u524d\u8282\u70b9\u7684\u8fd9\u4e2a\u5b50\u8282\u70b9\u6307\u5411\u5f53\n                      //\u524d\u8282\u70b9fail\u6307\u9488\u7684\u8fd9\u4e2a\u5b50\u8282\u70b9 \n              }\n        }\n}\nint AC_Query(string s)//AC\u81ea\u52a8\u673a\u5339\u914d\n{\n        int l=s.length();\n        int now=0,ans=0;\n        for(int i=0;i<l;++i)\n        {\n                now=AC[now].vis[s[i]-'a'];//\u5411\u4e0b\u4e00\u5c42\n                for(int t=now;t&&AC[t].end!=-1;t=AC[t].fail)//\u5faa\u73af\u6c42\u89e3\n                {\n                         ans+=AC[t].end;\n                         AC[t].end=-1;\n                } \n        }\n        return ans;\n}\nint main()\n{\n     int n;\n     string s;\n     cin>>n;\n     for(int i=1;i<=n;++i)\n     {\n             cin>>s;\n             Build(s);\n     }\n     AC[0].fail=0;//\u7ed3\u675f\u6807\u5fd7 \n     Get_fail();//\u6c42\u51fa\u5931\u914d\u6307\u9488\n     cin>>s;//\u6587\u672c\u4e32 \n     cout<<AC_Query(s)<<endl;\n     return 0;\n}\n```",
        "postTime": 1507103076,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053AC\u81ea\u52a8\u673a\u7684\u88f8\u9898\u3002\n\nAC\u81ea\u52a8\u673a\uff08\u4f18\u5316\u540e\u53ef\u79f0Trie\u56fe\uff09\u662f\u4e00\u79cd\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u88ab\u8fc7\u5206\u7b80\u5316\u7684\uff09\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\u5c06KMP\u653e\u5728Trie\u6811\u4e0a\u3002\n\n\u6ce8\u610f\u5982\u679c\u6bcf\u6b21\u8df3fail\u8fb9\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u4e00\u6b21\u5b58\u50a8\u5b8c\u53ef\u4ee5\u8fdb\u884c\u4f18\u5316\u3002\n\n\u8fd9\u6837\u7684AC\u81ea\u52a8\u673a\u5c31\u6210\u4e3a\u4e86Trie\u56fe\u3002\n\n\u4e0d\u8fc7\u8fd9\u9898\u7684std\u662f\u4ece\u9999\u6e2f\u65b0\u95fb\u4ea7\u4e1a\u6765\u7684\uff0c\u52a0\u4e86\u4e00\u4e2a\u8df3\u8f6c\u79fb\u8fb9\u7684\u526a\u679d\u4f18\u5316\u3002\n\n\u88ab\u5361\u5e38\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u4e0bstd\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>\n#define N 500010\nusing namespace std;\nqueue<int>q;\nstruct Aho_Corasick_Automaton{\n    int c[N][26],val[N],fail[N],cnt;\n    void ins(char *s){\n        int len=strlen(s);int now=0;\n        for(int i=0;i<len;i++){\n            int v=s[i]-'a';\n            if(!c[now][v])c[now][v]=++cnt;\n            now=c[now][v];\n        }\n        val[now]++;\n    }\n    void build(){\n        for(int i=0;i<26;i++)if(c[0][i])fail[c[0][i]]=0,q.push(c[0][i]);\n        while(!q.empty()){\n            int u=q.front();q.pop();\n            for(int i=0;i<26;i++)\n            if(c[u][i])fail[c[u][i]]=c[fail[u]][i],q.push(c[u][i]);\n            else c[u][i]=c[fail[u]][i];\n        }\n    }\n    int query(char *s){\n        int len=strlen(s);int now=0,ans=0;\n        for(int i=0;i<len;i++){\n            now=c[now][s[i]-'a'];\n            for(int t=now;t&&~val[t];t=fail[t])ans+=val[t],val[t]=-1;\n        }\n        return ans;\n    }\n}AC;\nint n;char p[1000005];\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%s\",p),AC.ins(p);\n    AC.build();\n    scanf(\"%s\",p);int ans=AC.query(p);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1498100090,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "\u849f\u84bb\u7ec8\u4e8e\u628a~~WA~~ AC\u81ea\u52a8\u673a\u6253\u51fa\u6765\u4e86\u3002\u3002\u3002\n\n## AC\u81ea\u52a8\u673a\u8bb2\u89e3\n\nAC\u81ea\u52a8\u673a\u7b80\u5355\u6765\u8bf4\u5c31\u662fTire Tree + ~~\u770b\u6bdb\u7247~~KMP\uff0c\u4e5f\u5c31\u662f~~\u5728~~\u6811\u4e0a~~\u770b\u6bdb\u7247~~KMP\u3002\n\nAC\u81ea\u52a8\u673a\u7528\u6765\u89e3\u51b3\u591a\u6a21\u5f0f\u4e32\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u7ed9\u597d\u51e0\u4e2a\u5b50\u4e32\uff0c\u4e00\u4e2a\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u5f88\u957f\u7684\u6bcd\u4e32\uff0c\u8ba9\u4f60\u5904\u7406\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u4ec0\u4e48\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u4e4b\u7c7b\u7684\u3002\n\n\u600e\u4e48\u505a\u54a7\uff1f\n\n\u4f60\u5148\u628a\u6240\u6709\u7684\u5b50\u4e32\u4e22\u5230Trie\u4e0a\uff0c\u6bd4\u5982\u56db\u4e2a\u5b57\u7b26\u4e32:abcd\uff0cabd\uff0cbcd\uff0ccd\uff0c\u5efa\u7acb\u5982\u4e0b\u56feTrie\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/26389.png)\n\n\u7136\u540e\u6211\u4eec\u5c31\u8981\u6811\u4e0a\u770b\u6bdb\u7247\u4e86\uff01\n\n\u548cKMP\u4e2d\u7684next\u6570\u7ec4\u5f88\u50cf\uff0c\u6211\u4eec\u5b9a\u4e49fail\u6570\u7ec4\uff0cfail[i]\u4e3a\u4e0e\u4ee5i\u8282\u70b9\u4e3a\u7ed3\u5c3e\u7684\u4e32\u7684\u540e\u7f00\u6709\u6700\u5927\u516c\u5171\u957f\u5ea6\u7684\u524d\u7f00\u7684\u7ed3\u5c3e\u7f16\u53f7\u3002\u8fd9\u53e5\u8bdd\u662f\u4e0d\u662f\u6709\u70b9\u7ed5orz\u3002\n\n\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u4ec0\u4e48\u610f\u601d\uff1a\u5bf9\u4e8e\u4ee5d\u7ed3\u5c3e\u7684\u5b50\u4e32abcd\uff0c\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u4e2a\u5176\u4ed6\u5b50\u4e32\u7684\u524d\u7f00\u4e0eabcd\u5339\u914d\uff0c\u4f46bcd\u4e0eabcd\u7684\u540e\u7f00bcd\u5339\u914d\uff0c\u8fd9\u662f\u5339\u914d\u5230\u7684\u6700\u957f\u60c5\u51b5\uff0c\u4e8e\u662f\u8fd9\u4e2ad\u4e0a\u7684fail\u6307\u9488\u5c31\u6307\u5411bcd\u4e0a\u7684d\u3002\u7136\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u4e00\u4e2a\u524d\u7f00\u4e0e\u5f53\u524d\u4e32\u7684\u4efb\u4f55\u4e00\u4e2a\u540e\u7f00\u4e00\u6837\u7684\u8bdd\uff0c\u90a3\u4e48fail\u53ea\u80fd\u6307\u5230\u6839\u4e86\u3002\u548cKMP\u7684\u539f\u7406\u4e00\u6837\uff0cfail\u8df3\u5230\u7684\u5730\u65b9\u5fc5\u7136\u8fd9\u4e2a\u5b50\u4e32\u7684\u524d\u9762\u4e0d\u7528\u518d\u6bd4\u8f83\u4e86\uff0c\u56e0\u4e3a\u6839\u636efail\u7684\u5b9a\u4e49\uff0c\u5b83\u7684\u5df2\u7ecf\u524d\u7f00\u5df2\u7ecf\u88ab\u6bd4\u8f83\u8fc7\u5e76\u4e14\u5339\u914d\u4e86\u3002\u53ea\u7528\u518d\u5f80\u540e\u6bd4\u5c31\u884c\u4e86\u3002\u653e\u4e00\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/26392.png)\n\n\u8bb0num[i]\u4e3a\u4ee5i\u8282\u70b9\u4e3a\u7ed3\u5c3e\u7684\u5b50\u4e32\u6709\u51e0\u4e2a,\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u4e32\uff0c\u90fd\u5728\u8fd9\u4e2a\u5b50\u4e32\u7684\u7ed3\u5c3e\uff0c\u628anum++,\u4ee5\u65b9\u4fbf\u4ee5\u540e\u8df3\u6765\u8df3\u53bb\u7684\u65f6\u5019\u7edf\u8ba1\u3002\u5339\u914d\u5230\u5f53\u524d\u8282\u70b9\uff0c\u5c31\u52a0\u4e0a\u5f53\u524d\u8282\u70b9\u7684num\uff0c\u5f53\u7136\uff0c\u52a0\u8fc7\u4e86\u5c31\u4e0d\u8981\u518d\u52a0\u4e86\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u5e76\u4e0d\u662f\u7edf\u8ba1\u6240\u6709\u5b50\u4e32\u51fa\u73b0\u7684\u603b\u6570\uff0c\u800c\u662f\u6709\u591a\u5c11\u5b50\u4e32\u51fa\u73b0\u4e86\u3002\n\n\u90a3\u4e48\u3002\u3002\u5bf9\u4e8e\u5339\u914d\u7684\u65f6\u5019\uff0c\u5f53\u524d\u8282\u70b9\u914d\u4e0d\u4e0b\u53bb\u4e86\u600e\u4e48\u529e\uff1f\u6bd4\u5982\u6211\u4eec\u5c1d\u8bd5\u5339\u914dabcde\uff0cabcd\u90fd\u987a\u5229\u5339\u914d\u4e86\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53d1\u73b0d\u5e76\u6ca1\u6709e\u8fd9\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8df3\u5230d\u7684fail\u6307\u9488\uff0c\u4e5f\u5c31\u662fbcd\u4e0a\u7684d\uff0c\u8fd8\u662f\u6ca1\u6709e\uff0c\u90a3\u4e48\u7ee7\u7eed\uff0c\u5230cd\u4e0a\u7684d\uff0c\u8fd8\u662f\u6ca1\u6709\uff0c\u53ea\u80fd\u5230\u6839\u4e86\uff0c\u8fd8\u662f\u6ca1\u6709\u3002\u3002\u3002\u90a3\u4e48\u3002\u3002\u3002\u5c31\u6ca1\u6709\u4e86\u3002\u6211\u4eec\u5904\u7406\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u628aabcd\u4e0a\u7684d\u7684\u4e0d\u5b58\u5728\u7684\u513f\u5b50\uff0c\u6307\u5411d\u7684fail\u6307\u9488\u7684\u8fd9\u4e2a\u513f\u5b50\uff0c\u597d\u50cf\u8fd8\u662f\u6709\u70b9\u7ed5\u3002\u3002\n\n\u90a3\u4e48\u7ee7\u7eed\u4e0a\u56fe\uff0c\uff08\u8fd9\u91cc\u7684e\u70b9\u90fd\u4e3a\u865a\u7ebf\uff0c\u5b9e\u9645\u4e0a\u662f\u6ca1\u6709\u7684\uff09\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/26396.png)\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u4e0d\u65ad\u5c1d\u8bd5\uff0c\u6709\u6ca1\u6709\u5176\u4ed6\u524d\u7f00\u540e\u9762\u8ddf\u7740e\u7684\u3002\u8fd9\u6837\u5904\u7406\u4e4b\u540e\uff0c\u5c31\u7b80\u5355\u65b9\u4fbf\u591a\u4e86\u3002\n\n------------\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,cnt=0;\nchar tmp[1000100];\nstruct node\n{\n\tint fail,num;\n\tint ch[30];\n}tr[1000100];\nint q[1000100];\nvoid build()//\u5efa\u7acbTrie\u6811\n{\n\tint len=strlen(tmp),u=0;\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tint s=tmp[i]-'a';\n\t\tif(tr[u].ch[s]==0) tr[u].ch[s]=++cnt;\n\t\tu=tr[u].ch[s];\n\t}\n\ttr[u].num++;\n}\nvoid get_fail()\n{\n\tint l=0,r=0;\n\tfor(int i=0;i<26;i++)\n\t\tif(tr[0].ch[i]!=0)\n\t\t{\n\t\t\ttr[tr[0].ch[i]].fail=0;\n\t\t\tq[++r]=tr[0].ch[i];\n\t\t}\n\twhile(l<r)\n\t{\n\t\tint u=q[++l];\n\t\tfor(int i=0;i<26;i++)\n\t\t{\n\t\t\tint v=tr[u].ch[i];\n\t\t\tif(v)\n\t\t\t{\n\t\t\t\ttr[v].fail=tr[tr[u].fail].ch[i];//\u5904\u7406fail\u6307\u9488\uff0c\u662f\u5b83\u7236\u4eb2\u7684fail\u6307\u9488\u7684i\u513f\u5b50\n\t\t\t\tq[++r]=v;\n\t\t\t}\n\t\t\telse tr[u].ch[i]=tr[tr[u].fail].ch[i];//\u5904\u7406\u6240\u8bf4\u7684\u201c\u865a\u6307\u9488\u201d\uff0cWA\u4e86\u597d\u51e0\u6b21\u56e0\u4e3a\u628a\u8fd9\u91cc\u7684tr[u].ch[i]\u4e5f\u66ff\u6362\u6210v\u4e86\u3002\u3002\n\t\t}\n\t}\n}\nint AC()\n{\n\tint len=strlen(tmp);\n\tint u=0,ans=0;\n\tfor(int i=0;i<len;i++)\n\t{\n\t\tint s=tmp[i]-'a';\n\t\tu=tr[u].ch[s];\n\t\tint v=u;\n\t\twhile(v && tr[v].num!=-1)\n\t\t{\n\t\t\tans+=tr[v].num;\n\t\t\ttr[v].num=-1;//\u52a0\u8fc7\u4e86\u4e4b\u540e\u5c31\u4e0d\u7528\u518d\u52a0\u4e86\n\t\t\tv=tr[v].fail;\n\t\t}\n\t}\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",tmp);\n\t\tbuild();\n\t}\n\ttr[0].fail=0;\n\tget_fail();\n\tscanf(\"%s\",tmp);\n\tprintf(\"%d\",AC());\n\treturn 0;\n}\n```\n\n\u4f60\u4f1a\u53d1\u73b0\u4ee3\u7801\u548cyyb\u5927\u4f6c\u7684\u5f88\u50cf\uff0c\u56e0\u4e3a\u6211\u662f\u770b\u4e86yyb\u7684\u9898\u89e3\u624d\u6253\u51fa\u6765\u7684\u3002\u3002yyb\u7684\u5f88\u6e05\u695a\uff0c\u6240\u4ee5\u6211\u653e\u4e0a\u6765\u53ea\u662f\u51d1\u4e2a\u957f\u5ea6\u7684\u6ca1\u9519",
        "postTime": 1533214821,
        "uid": 21874,
        "name": "hicc0305",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "# AC\u81ea\u52a8\u673a\u8be6\u7ec6\u8bb2\u89e3\n\nAC\u81ea\u52a8\u673a\u771f\u662f\u4e2a\u597d\u4e1c\u897f\uff01\u4e4b\u524d\u5b66KMP\u88abNext\u6307\u9488\u641e\u6655\u4e86\uff0c\u6240\u4ee5\u5495\u4e86\u8bb8\u4e45\u90fd\u4e0d\u6562\u5f00AC\u81ea\u52a8\u673a\uff0c\u8fd1\u671f\u5b66\u5b8c\u4e4b\u540e\uff0c\u53d1\u73b0AC\u81ea\u52a8\u673a\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u7279\u522b\u662f\u5bf9\u4e8eKMP\uff0c\u4e2a\u4eba\u611f\u89c9AC\u81ea\u52a8\u673a\u6bd4KMP\u8981\u597d\u7406\u89e3\u4e00\u4e9b\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6211\u5bf9\u6811\u4e0a\u7684\u4e1c\u897f\u6bd4\u8f83\u654f\u611f\uff08\u5b9e\u9645\u662f\u56e0\u4e3a\u6211\u5230\u73b0\u5728\u90fd\u4e0d\u4f1aKMP\uff09\u3002\n\n\u5f88\u591a\u4eba\u90fd\u8bf4AC\u81ea\u52a8\u673a\u662f\u5728Trie\u6811\u4e0a\u4f5cKMP\uff0c\u6211\u4e0d\u5426\u8ba4\u8fd9\u4e00\u79cd\u89c2\u70b9\uff0c\u56e0\u4e3a\u8fd9\u786e\u5b9e\u662f\u8fd9\u6837\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u521a\u5f00\u59cb\u5b66AC\u81ea\u52a8\u673a\u7684\u540c\u5b66\u4eec\u5c31\u4e00\u4e9b\u8bef\u5bfc\u6027\u7684\u7406\u89e3\uff08\u81f3\u5c11\u5bf9\u6211\u662f\u8fd9\u6837\u7684\uff09\u3002KMP\u662f\u5efa\u7acb\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e0a\u7684\uff0c\u73b0\u5728\u628aKMP\u642c\u5230\u4e86\u6811\u4e0a\uff0c\u4e0d\u662f\u5f88\u9ebb\u70e6\u5417\uff1f\u5b9e\u9645\u4e0aAC\u81ea\u52a8\u673a\u53ea\u662f\u6709KMP\u7684\u4e00\u79cd\u601d\u60f3\uff0c\u5b9e\u9645\u4e0a\u8ddf\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684KMP\u6709\u7740\u5f88\u5927\u7684\u4e0d\u540c\u3002\n\n\u6240\u4ee5\u770b\u8fd9\u7bc7blog\uff0c\u8bf7\u653e\u4e0bKMP\uff0c\u7406\u89e3\u597dTrie\uff0c\u518d\u6765\u5b66\u4e60\u3002\n\n## \u524d\u7f6e\u6280\u80fd\n\n1.[Trie](https://www.luogu.org/blog/juruohyfhaha/trie-xue-xi-zong-jie)(\u5f88\u91cd\u8981\u54e6)\n\n2.KMP\u7684\u601d\u60f3\uff08\u61c2\u601d\u60f3\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e0d\u9700\u8981\u5f88\u719f\u7ec3\uff09\n\n# \u95ee\u9898\u63cf\u8ff0\n\n\u7ed9\u5b9an\u4e2a\u6a21\u5f0f\u4e32\u548c1\u4e2a\u6587\u672c\u4e32\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u91cc**\u51fa\u73b0\u8fc7**\u3002\n\n\u6ce8\u610f\uff1a\u662f\u51fa\u73b0\u8fc7\uff0c\u5c31\u662f\u51fa\u73b0\u591a\u6b21\u53ea\u7b97\u4e00\u6b21\u3002\n\n\u9ed8\u8ba4\u8fd9\u91cc\u6bcf\u4e00\u4e2a\u4eba\u90fd\u5df2\u7ecf\u4f1a\u4e86Trie\u3002\n\n\u6211\u4eec\u5c06n\u4e2a\u6a21\u5f0f\u4e32\u5efa\u6210\u4e00\u9897Trie\u6811\uff0c\u5efa\u7684\u65b9\u5f0f\u548c\u5efaTrie\u5b8c\u5168\u4e00\u6837\u3002\n\n![AC\u81ea\u52a8\u673a](https://i.loli.net/2019/05/02/5ccaaa22cbf29.png)\n\n\u5047\u5982\u6211\u4eec\u73b0\u5728\u6709\u6587\u672c\u4e32ABCDBC\u3002\n\n\u6211\u4eec\u7528\u6587\u672c\u4e32\u5728Trie\u4e0a\u5339\u914d\uff0c\u521a\u5f00\u59cb\u4f1a\u7ecf\u8fc72\u30013\u30014\u53f7\u70b9\uff0c\u53d1\u73b0\u52304\uff0c\u6210\u529f\u5730\u5339\u914d\u4e86\u4e00\u4e2a\u6a21\u5f0f\u4e32\uff0c\u7136\u540e\u5c31\u4e0d\u80fd\u518d\u7ee7\u7eed\u5339\u914d\u4e86\uff0c\u8fd9\u65f6\u6211\u4eec\u8fd8\u8981\u91cd\u65b0\u7ee7\u7eed\u4ece\u6839\u5f00\u59cb\u5339\u914d\u5417\uff1f\n\n\u4e0d\uff0c\u8fd9\u6837\u7684\u6548\u7387\u592a\u6162\u4e86\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u8981\u501f\u7528KMP\u7684\u601d\u60f3\uff0c\u4eceTrie\u4e0a\u7684\u67d0\u4e2a\u70b9\u7ee7\u7eed\u5f00\u59cb\u5339\u914d\u3002\n\n\u660e\u663e\u5728\u8fd9\u9897Trie\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4ece7\u53f7\u70b9\u5f00\u59cb\u5339\u914d\uff0c\u7136\u540e\u5339\u914d\u52308\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u786e\u5b9a\u4ece\u90a3\u4e2a\u70b9\u5f00\u59cb\u5339\u914d\u5462\uff1f\u6211\u4eec\u79f0i\u5339\u914d\u5931\u8d25\u540e\u7ee7\u7eed\u4ecej\u5f00\u59cb\u5339\u914d\uff0cj\u662fi\u7684Fail\uff08\u5931\u914d\u6307\u9488\uff09\u3002\n\n## \u6784\u5efaFail\u6307\u9488\n\n### Fail\u7684\u542b\u4e49\n\nFail\u6307\u9488\u7684\u5b9e\u8d28\u542b\u4e49\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u5982\u679c\u4e00\u4e2a\u70b9i\u7684Fail\u6307\u9488\u6307\u5411j\u3002\u90a3\u4e48root\u5230j\u7684\u5b57\u7b26\u4e32\u662froot\u5230i\u7684\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u540e\u7f00\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\uff08\u4f8b\u5b50\u6765\u81ea\u4e0a\u9762\u7684\u56fe\n\n```cpp\ni:4     j:7\nroot\u5230i\u7684\u5b57\u7b26\u4e32\u662f\u201cABC\u201d\nroot\u5230j\u7684\u5b57\u7b26\u4e32\u662f\u201cBC\u201d\n\u201cBC\u201d\u662f\u201cABC\u201d\u7684\u4e00\u4e2a\u540e\u7f00\n\u6240\u4ee5i\u7684Fail\u6307\u9488\u6307\u5411j\n```\n\n\u540c\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u201cC\u201d\u4e5f\u662f\u201cABC\u201d\u7684\u4e00\u4e2a\u540e\u7f00\u3002\n\n\u6240\u4ee5Fail\u6307\u9488\u6307\u7684j\u7684\u6df1\u5ea6\u8981\u5c3d\u91cf\u5927\u3002\n\n\u91cd\u7533\u4e00\u4e0bFail\u6307\u9488\u7684\u542b\u4e49\uff1a((\u6700\u957f\u7684(\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u540e\u7f00))\u5728Trie\u4e0a\u53ef\u4ee5\u67e5\u627e\u5230)\u7684\u672b\u5c3e\u7f16\u53f7\u3002\n\n\u611f\u89c9\u8bfb\u8d77\u6765\u633a\u7ed5\u53e3\u7684\u86e4\u3002\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u6ca1\u4ec0\u4e48\u5375\u7528\u7684\u3002\u77e5\u9053Fail\u6709\u4ec0\u4e48\u7528\u5c31\u884c\u4e86\u3002\n\n### \u6c42Fail\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff0c\u6bcf\u4e00\u4e2a\u70b9i\u7684Fail\u6307\u9488\u6307\u5411\u7684\u70b9\u7684\u6df1\u5ea6\u4e00\u5b9a\u662f\u6bd4i\u5c0f\u7684\u3002\uff08Fail\u6307\u7684\u662f\u540e\u7f00\u554a\uff09\n\n\u7b2c\u4e00\u5c42\u7684Fail\u4e00\u5b9a\u6307\u7684\u662froot\u3002\uff08\u6bd4\u6df1\u5ea61\u8fd8\u6d45\u7684\u53ea\u6709root\u4e86\uff09\n\n\u70b9i\u7684\u7236\u4eb2fa\u7684Fail\u6307\u9488\u6307\u7684\u662ffafail\uff0c\u90a3\u4e48\u5982\u679cfafail\u6709\u548ci\u503c\u76f8\u540c\u7684\u513f\u5b50j\uff0c\u90a3\u4e48i\u7684Fail\u5c31\u6307\u5411j\u3002\u8fd9\u91cc\u53ef\u80fd\u6bd4\u8f83\u96be\u7406\u89e3\u4e00\u70b9\uff0c\u4e0d\u8fc7\u7b49\u4f1a\u8f6c\u6362\u6210\u4ee3\u7801\u5c31\u5f88\u597d\u7406\u89e3\u4e86\u3002\n\n\u7531\u4e8e\u6211\u4eec\u5728\u5904\u7406i\u7684\u60c5\u51b5\u5fc5\u987b\u8981\u5148\u5904\u7406\u597dfa\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6c42Fail\u6211\u4eec\u4f7f\u7528BFS\u6765\u5b9e\u73b0\u3002\n\n\u5b9e\u73b0\u7684\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1\u3001\u521a\u5f00\u59cb\u6211\u4eec\u4e0d\u662f\u8981\u521d\u59cb\u5316\u7b2c\u4e00\u5c42\u7684fail\u6307\u9488\u4e3aroot\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u865a\u8282\u70b90\u53f7\u8282\u70b9\uff0c\u5c060\u7684\u6240\u6709\u513f\u5b50\u6307\u5411root\uff08\u7f16\u53f7\u4e3a1)\uff0c\u7136\u540eroot\u7684fail\u6307\u54110\u5c31OK\u4e86\u3002\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\n\n2\u3001\u5982\u679c\u4e0d\u5b58\u5728\u4e00\u4e2a\u8282\u70b9i\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u90a3\u4e2a\u8282\u70b9\u8bbe\u4e3afafail\u7684\u503c\u548ci\u76f8\u540c\u7684\u513f\u5b50\u3002\u4fdd\u8bc1\u5b58\u5728\u6027\uff0c\u5c31\u7b97\u662f0\u4e5f\u53ef\u4ee5\u6210\u529f\u8fd4\u56de\u5230\u6839\uff0c\u56e0\u4e3a0\u7684\u6240\u6709\u513f\u5b50\u90fd\u662f\u6839\u3002\n\n3\u3001\u65e0\u8bbafafail\u5b58\u4e0d\u5b58\u5728\u548ci\u503c\u76f8\u540c\u7684\u513f\u5b50j\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u5c06i\u7684fail\u6307\u5411j\u3002\u56e0\u4e3a\u5728\u5904\u7406i\u7684\u65f6\u5019j\u5df2\u7ecf\u5904\u7406\u597d\u4e86\uff0c\u5982\u679c\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0cj\u7684\u503c\u662f\u7b2c2\u79cd\u60c5\u51b5\uff0c\u4e5f\u662f\u6709\u5b9e\u9645\u503c\u7684\uff0c\u6240\u4ee5\u6ca1\u6709\u95ee\u9898\u3002\n\n4\u3001\u5b9e\u73b0\u65f6\u4e0d\u8bb0\u7236\u4eb2\uff0c\u6211\u4eec\u76f4\u63a5\u8ba9\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\n\n```cpp\nvoid getFail(){\n\tfor(int i=0;i<26;i++)trie[0].son[i]=1;\t\t\t//\u521d\u59cb\u53160\u7684\u6240\u6709\u513f\u5b50\u90fd\u662f1\n\tq.push(1);trie[1].fail=0;\t\t\t\t//\u5c06\u6839\u538b\u5165\u961f\u5217\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=0;i<26;i++){\t\t\t\t//\u904d\u5386\u6240\u6709\u513f\u5b50\n\t\t\tint v=trie[u].son[i];\t\t\t//\u5904\u7406u\u7684i\u513f\u5b50\u7684fail\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u7528\u8bb0\u7236\u4eb2\u4e86\n\t\t\tint Fail=trie[u].fail;\t\t\t//\u5c31\u662ffafail\uff0ctrie[Fail].son[i]\u5c31\u662f\u548cv\u503c\u76f8\u540c\u7684\u70b9\n\t\t\tif(!v){trie[u].son[i]=trie[Fail].son[i];continue;}\t//\u4e0d\u5b58\u5728\u8be5\u8282\u70b9\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\n\t\t\ttrie[v].fail=trie[Fail].son[i];\t//\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u6307\u5c31\u53ef\u4ee5\u4e86\n\t\t\tq.push(v);\t\t\t\t\t\t//\u5b58\u5728\u5b9e\u8282\u70b9\u624d\u538b\u5165\u961f\u5217\n\t\t}\n\t}\n}\n```\n\n# \u67e5\u8be2\n\n\u6c42\u51fa\u4e86Fail\u6307\u9488\uff0c\u67e5\u8be2\u5c31\u53d8\u5f97\u5341\u5206\u7b80\u5355\u4e86\u3002\n\n\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u6211\u4eec\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u5c31\u6253\u4e2a\u6807\u8bb0\u4e3a-1\uff0c\u4e0b\u4e00\u6b21\u7ecf\u8fc7\u5c31\u4e0d\u91cd\u590d\u8ba1\u7b97\u4e86\u3002\n\n\u540c\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5339\u914d\u6210\u529f\uff0c\u90a3\u4e48\u4ed6\u7684Fail\u4e5f\u80af\u5b9a\u53ef\u4ee5\u5339\u914d\u6210\u529f\uff08\u540e\u7f00\u561b\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u628aFail\u518d\u7edf\u8ba1\u7b54\u6848\uff0c\u540c\u6837\uff0cFail\u7684Fail\u4e5f\u53ef\u4ee5\u5339\u914d\u6210\u529f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026\u7ecf\u8fc7\u7684\u70b9\u7d2f\u52a0flag\uff0c\u6807\u8bb0\u4e3a-1\u3002\n\n\u6700\u540e\u4e3b\u8981\u8fd8\u662f\u548cTrie\u7684\u67e5\u8be2\u662f\u4e00\u6837\u7684\u3002\n\n```cpp\nint query(char* s){\n\tint u=1,ans=0,len=strlen(s);\n\tfor(int i=0;i<len;i++){\n\t\tint v=s[i]-'a';\n\t\tint k=trie[u].son[v];\t\t//\u8df3Fail\n\t\twhile(k>1&&trie[k].flag!=-1){\t//\u7ecf\u8fc7\u5c31\u4e0d\u7edf\u8ba1\u4e86\n\t\t\tans+=trie[k].flag,trie[k].flag=-1;\t//\u7d2f\u52a0\u4e0a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6a21\u5f0f\u4e32\u4e2a\u6570\uff0c\u6807\u8bb0 \u5df2 \u7ecf\u8fc7\n\t\t\tk=trie[k].fail;\t\t\t//\u7ee7\u7eed\u8df3Fail\n\t\t}\n\t\tu=trie[u].son[v];\t\t\t//\u5230\u513f\u5b50\u90a3,\u5b58\u5728\u6027\u770b\u4e0a\u9762\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5\n\t}\n\treturn ans;\n}\n```\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 1000001\nusing namespace std;\nstruct kkk{\n\tint son[26],flag,fail;\n}trie[maxn];\nint n,cnt;\nchar s[1000001];\nqueue<int >q;\nvoid insert(char* s){\n\tint u=1,len=strlen(s);\n\tfor(int i=0;i<len;i++){\n\t\tint v=s[i]-'a';\n\t\tif(!trie[u].son[v])trie[u].son[v]=++cnt;\n\t\tu=trie[u].son[v];\n\t}\n\ttrie[u].flag++;\n}\nvoid getFail(){\n\tfor(int i=0;i<26;i++)trie[0].son[i]=1;\t\t\t//\u521d\u59cb\u53160\u7684\u6240\u6709\u513f\u5b50\u90fd\u662f1\n\tq.push(1);trie[1].fail=0;\t\t\t\t//\u5c06\u6839\u538b\u5165\u961f\u5217\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=0;i<26;i++){\t\t\t\t//\u904d\u5386\u6240\u6709\u513f\u5b50\n\t\t\tint v=trie[u].son[i];\t\t\t//\u5904\u7406u\u7684i\u513f\u5b50\u7684fail\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u7528\u8bb0\u7236\u4eb2\u4e86\n\t\t\tint Fail=trie[u].fail;\t\t\t//\u5c31\u662ffafail\uff0ctrie[Fail].son[i]\u5c31\u662f\u548cv\u503c\u76f8\u540c\u7684\u70b9\n\t\t\tif(!v){trie[u].son[i]=trie[Fail].son[i];continue;}\t//\u4e0d\u5b58\u5728\u8be5\u8282\u70b9\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\n\t\t\ttrie[v].fail=trie[Fail].son[i];\t//\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u6307\u5c31\u53ef\u4ee5\u4e86\n\t\t\tq.push(v);\t\t\t\t\t\t//\u5b58\u5728\u5b9e\u8282\u70b9\u624d\u538b\u5165\u961f\u5217\n\t\t}\n\t}\n}\nint query(char* s){\n\tint u=1,ans=0,len=strlen(s);\n\tfor(int i=0;i<len;i++){\n\t\tint v=s[i]-'a';\n\t\tint k=trie[u].son[v];\t\t//\u8df3Fail\n\t\twhile(k>1&&trie[k].flag!=-1){\t//\u7ecf\u8fc7\u5c31\u4e0d\u7edf\u8ba1\u4e86\n\t\t\tans+=trie[k].flag,trie[k].flag=-1;\t//\u7d2f\u52a0\u4e0a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6a21\u5f0f\u4e32\u4e2a\u6570\uff0c\u6807\u8bb0\u5df2\u7ecf\u8fc7\n\t\t\tk=trie[k].fail;\t\t\t//\u7ee7\u7eed\u8df3Fail\n\t\t}\n\t\tu=trie[u].son[v];\t\t\t//\u5230\u4e0b\u4e00\u4e2a\u513f\u5b50\n\t}\n\treturn ans;\n}\nint main(){\n\tcnt=1;scanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s);\n\t\tinsert(s);\n\t}\n\tgetFail();\n\tscanf(\"%s\",s);\n\tprintf(\"%d\\n\",query(s));\n\treturn 0;\n}\n```\n\u5e0c\u671b\u5b66\u4e60\u66f4\u591aAC\u81ea\u52a8\u673a\uff1f\u770b\u6211\u7684blog [\u8fd9\u91cc](https://www.luogu.org/blog/juruohyfhaha/ac-zi-dong-ji)",
        "postTime": 1557386031,
        "uid": 58711,
        "name": "hyfhaha",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "~~\u6211\u4eec\u4ecd\u672a\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e00\u4e2aPJ\u521a\u521a\u8f6cTG\u7684\u849f\u84bb\u8981\u5b66\u8fd9\u4e2a\u4e1c\u897f~~\n\n~~\u4e5f\u8bb8\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u7b97\u6cd5\u7684\u540d\u5b57\u592a\u7f8e\u5999\u4e86\u5427~~\n\n\uff08\u5982\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6765\u8e29\uff09\n\nAC\u81ea\u52a8\u673a\u662f\u5565\uff1f\n\n\u662f\u4e00\u4e2a\u80fd\u591f\u8ba9\u4f60\u81ea\u52a8AC\u7684\u7b97\u6cd5\n\n\u54e6\u4e0d\u5bf9\uff0c\u662f\u4e00\u4e2a\u5173\u4e8e**\u5b57\u7b26\u4e32\u5339\u914d\u7684\u7b97\u6cd5**\n\n\u63d0\u5230**\u5b57\u7b26\u4e32\u5339\u914d**\uff0c\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\u60f3\u5230**KMP**\uff08\u65e2\u7136\u6765\u5b66AC\u81ea\u52a8\u673a\u4e86\uff0c\u5e94\u8be5\u6ca1\u6709\u4e0d\u77e5\u9053\u7684\u5427\uff09\n\n\u5982\u679c\u4f60\u542c\u8bf4\u8fc7**KMP**\uff0c\u4f60\u5e94\u8be5\u5bf9\u4e00\u4e2a\u6a21\u5f0f\u4e32\u5339\u914d\u4e00\u4e2a\u6587\u672c\u4e32\u7684\u95ee\u9898\u4e86\u5982\u6307\u638c\n\n\u4e0d\u8fc7\uff0c\u5bf9\u4e8e\u591a\u4e2a\u6a21\u5f0f\u4e32\uff0c\u597d\u591a\u597d\u591a\u4e2a\u6a21\u5f0f\u4e32\u5462\uff1f\n\n\u4f60\u4e5f\u8bb8\u4f1a\u60f3\u5230\u5bf9\u6bcf\u4e2a\u6a21\u5f0f\u4e32\u90fdKMP\u4e00\u904d\uff0c\u4f46\u76f4\u89c9\u544a\u8bc9\u4f60\uff0c\u8fd9\u6837\u662f\u4e0d\u53ef\u80fdAC\u7684\n\n\u4e8e\u662f\uff0c**AC\u81ea\u52a8\u673a**\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\n\n\u5f53\u7136\uff0c\u8981\u5b66\u4e60**AC\u81ea\u52a8\u673a**\uff0c\u4f60\u8fd8\u9700\u8981\u638c\u63e1\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u2014\u2014~~\u8e39\u6811~~\uff0c\u554a\u5478\uff0c**Trie\u6811**\n\n\u800c\u524d\u9762\u4e00\u76f4\u63d0\u7684KMP\uff0c\u4f60\u53ea\u9700\u8981\u9886\u4f1a\u5b83\u7684\u201c**\u5229\u7528\u5339\u914d\u8fc7\u7a0b\u4e2d\u5f97\u5230\u7684\u5df2\u77e5\u7ebf\u7d22\uff0c\u6765\u52a0\u5feb\u5339\u914d\u901f\u5ea6**\u201d\u7684\u601d\u60f3\u5c31\u597d\u5566\uff0c\u4e0d\u9700\u8981\u638c\u63e1\u5b83\u7684\u4ee3\u7801\u5b9e\u73b0\uff08\u5f53\u7136\uff0c\u5982\u679c\u638c\u63e1\u4e86\u7684\u8bdd\u66f4\u597d\uff0c\u4f1a\u5bf9\u63a5\u4e0b\u6765\u7684\u5b66\u4e60\u66f4\u6709\u5e2e\u52a9\u54e6\uff09\n\n\n\n\u6574\u4e2aAC\u81ea\u52a8\u673a\u5206\u4e09\u6b65\uff1a**\u5efa\u6811\u4e0e\u63d2\u5165**\u3001**\u6784\u5efafail\u8fb9**\u548c**\u5339\u914d\u67e5\u8be2**\n\n### 1. \u5efa\u6811\u4e0e\u63d2\u5165\n\n\u8fd9\u4e2a\u5c31\u662fTrie\u6811\u7684\u57fa\u672c\u64cd\u4f5c\u5566\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u628a\u5b66\u8fc7\u7684Trie\u6811\u7684\u77e5\u8bc6\u8fd8\u7ed9\u8001\u5e08\u4e86\uff0c\u90a3\u6b63\u597d\u501f\u6b64\u673a\u4f1a\u6765\u590d\u4e60\u4e00\u4e0b\uff01\n\n```cpp\nstruct luogu{//Trie\u6811\u7ed3\u6784\u4f53\n\tint son[30];//Trie\u6811\u7684\u5b50\u8282\u70b9\n\tint cnt,fail;//cnt\u5c31\u662f\u8fd9\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\uff08\u5355\u8bcd\u6807\u8bb0\uff09\uff0c\u81f3\u4e8e\u8fd9\u4e2afail\u4e00\u4f1a\u518d\u8bf4\n}trie[500010];\nint tot=0;//\u8282\u70b9\u7f16\u53f7\nvoid insert(string s){//\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u63d2\u5165\u5230Trie\u6811\u91cc\n\tint u=0;//\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff08\u6211\u4eec\u628a\u6839\u8282\u70b9\u8bbe\u4e3a0\u53f7\u8282\u70b9\uff09\n\tfor(int i=0;s[i];i++){\n\t\tint v=s[i]-'a';//\u5f53\u524d\u7684\u5b57\u6bcd\n\t\tif(!trie[u].son[v])//\u5982\u679c\u6ca1\u627e\u5230\u8fd9\u4e2a\u8282\u70b9\uff0c\n\t\ttrie[u].son[v]=++tot;//\u90a3\u5c31\u65b0\u5f00\u4e00\u4e2a~\n\t\tu=trie[u].son[v];//\u987a\u7740\u5f80\u4e0b\u627e\n\t}\n\ttrie[u].cnt++;//\u8fd9\u4e2a\u5355\u8bcd\u53c8\u51fa\u4e00\u904d\uff0c\u8ba1\u6570\u5668++\n}\n```\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u8fd9\u91cc\u4e3a\u5565\u6ca1\u6709\u7528\u5355\u8bcd\u672b\u5c3e\u7684\u6807\u8bb0end\uff0c\u800c\u52a0\u4e86\u4e00\u4e2a\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570\u7684cnt\u5462\uff1f\u8fd9\u4e48\u95ee\u7684\u7edd\u5bf9\u6ca1\u8ba4\u771f\u8bfb\u9898\uff0c\u9898\u76ee\u91cc\u6709\u8fd9\u4e00\u53e5\uff1a\n> **\u7ba1\u7406\u5458\u63d0\u793a\uff1a\u672c\u9898\u6570\u636e\u5185\u6709\u91cd\u590d\u7684\u5355\u8bcd\uff0c\u4e14\u91cd\u590d\u5355\u8bcd\u5e94\u8be5\u8ba1\u7b97\u591a\u6b21\uff0c\u8bf7\u5404\u4f4d\u6ce8\u610f**\n\n\u8fd9\u4e0b\u5c31\u4e00\u76ee\u4e86\u7136\u4e86\u5427~\n\n### 2. \u6784\u5efafail\u8fb9\n\n\u6572\u9ed1\u677f\uff0c\u5212\u91cd\u70b9\u5566\uff01\u8fd9\u4e00\u90e8\u5206**\u7279\u522b\u7279\u522b\u91cd\u8981**\uff0c\u662f\u6574\u4e2aAC\u81ea\u52a8\u673a\u7684\u91cd\u70b9\u548c\u96be\u70b9\u6240\u5728\uff0c\u5c0f\u4f19\u4f34\u4eec\u4e00\u5b9a\u8981\u7ad6\u8d77\u8033\u6735\u8ba4\u771f\u542c\uff01\uff01\n\n- ####  fail\u8fb9\u7684\u5b9a\u4e49\n\n\u9996\u5148\uff0c\u54b1\u4eec\u63d2\u5165\u8fd9\u4e9b\u6a21\u5f0f\u4e32\uff1a\n\n```\nabc\nbcd\nbd\nc\n\n```\n![](https://cdn.luogu.com.cn/upload/image_hosting/i8df5imi.png)\n\u7136\u540e\u8fd8\u6709\u4e00\u4e2a\u6587\u672c\u4e32\uff1a`abcdbc`\n\n\u90a3\u4e48\u4e0b\u9762\u6211\u4eec\u5f00\u59cb\u5339\u914d\u5566\uff01\n\n\u4ece\u5934\u5f00\u59cb\uff0ca\uff0cb\uff0cc\uff0c\u2026\u2026\u54ce\u5440\uff01\u6ca1\u4e86\uff01\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5230c\u8fd9\u4e00\u5757\uff0c**\u5931\u914d**\u4e86\uff01\n\n\u6839\u636e**KMP\u7684\u601d\u60f3**\uff0c\u6211\u4eec\u53ef\u4ee5\u63a5\u7740\u627e\u4e00\u4e2a\u6709\"bc\"\u7684\u5730\u65b9\u63a5\u8fc7\u53bb\u5339\u914d\n\n\u90a3\u54ea\u91cc\u6709\"bc\"\u5462\uff1f\u54c7\uff01\"bcd\"\u8fd9\u4e00\u5757\u521a\u597d\u6709\u4e00\u4e2a\uff01\n\n\u6240\u4ee5\u6211\u4eec\u5728\u628a\"abc\"\u5339\u914d\u5b8c\u6210\u4e4b\u540e\uff0c\u76f4\u63a5\u8df3\u5230\"bcd\"\u91cc\u7684'c'\u8fd9\u4e2a\u8282\u70b9\uff0c\u63a5\u7740\u5339\u914d\u5c31\u884c\u5566\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8b3cyzhw.png)\n\n\u770b\u5230\u90a3\u6761\u6f02\u4eae\u7684\u7d2b\u8272\u8fb9\u6ca1\u6709\uff1f\u8fd9\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684**fail\u8fb9**\uff0c\u4e4b\u6240\u4ee5\u53eb\u201cfail\u8fb9\u201d\uff0c\u662f\u56e0\u4e3a\u5b83\u51b3\u5b9a\u7740\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5931\u914d\u540e\u7684\u53bb\u5411\n\n\u90a3\u95ee\u9898\u6765\u4e86\uff0c\u53f3\u9762\"c\"\u8fd9\u4e2a\u5b57\u7b26\u4e32\u91cc\u4e5f\u6709\u4e2ac\uff0c\u4e3a\u5565\u4e0d\u548c\u5b83\u8fde\u6210fail\u8fb9\u5462\uff1f\n\n\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u516c\u5171\u90e8\u5206\"bc\"\u6bd4\u516c\u5171\u90e8\u5206\"c\"\u663e\u7136\u66f4\u6709\uff0c\u54b1\u4eec\u5728KMP\u91cc\u6c42\u7684\u4e0d\u4e5f\u662f**\u6700\u957f\u516c\u5171\u524d\u540e\u7f00**\u561b\uff0c\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u53d1\u73b0\u4e86\uff0c\u8fd9\u4e2a**fail\u8fb9\u7684\u4f5c\u7528\uff0c\u548cKMP\u4e2d\u7684next\u6570\u7ec4\u662f\u4e00\u6837\u7684**\uff01\uff01\uff01\n\n\u4e5f\u5c31\u662f\u8bf4\uff1afail\u8fb9\u6307\u5411\u7684\u5c31\u662f\u5f53\u524d\u8282\u70b9\u6240\u5728\u7684\u5b57\u7b26\u4e32\u7684**\u6700\u957f\u540e\u7f00**\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\n\n\u90a3\u4f60\u6765\u627e\u4e00\u4e0b\"bcd\"\u4e2d\u7684'd'\u7684fail\u8fb9\u6307\u5411\u8c01\u5462\uff1f\n\n\u7b54\u6848\u5f53\u7136\u662f\"bd\"\u4e2d\u7684'd'\n\n\u90a3\u4e48\"abc\"\u4e2d\u7684\"a\"\u5462\uff1f\n\n\u597d\u50cf\u6ca1\u6709\u54ce\u2026\u2026\u6ca1\u6709\uff0c\u90a3\u5c31\u662f\u6307\u5411\u6839\u8282\u70b9\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/411c0uqn.png)\n\n\u8fd9\u4e2a\u56fe\u6807\u51fa\u4e86\u6240\u6709\u8282\u70b9\u7684fail\u8fb9\uff0c\u53ef\u80fd\u753b\u7684\u6709\u70b9\u4e71\uff0c\u4e0d\u8fc7\u53ea\u8981\u5f04\u6e05\u4e86fail\u8fb9\u7684\u5b9a\u4e49\uff0c\u90a3\u5c31\u5f88\u597d\u529e\u5566\uff01\n\n- ####  fail\u8fb9\u7684\u4ee3\u7801\u5b9e\u73b0\n\n\u638c\u63e1\u4e86fail\u8fb9\u7684\u5b9a\u4e49\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u5f00\u59cb\u7814\u7a76\u4ee3\u7801\u548b\u5199\u4e86\n\n\u9996\u5148\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u7b2c\u4e00\u5c42\u7684fail\u8fb9\u90fd\u662f\u6839\u8282\u70b9\n\n\u7136\u540e\u5462\uff1f\u627efail\u8fb9\u5e94\u8be5\u8fd9\u4e48\u627e\uff1a\n\n**\u987a\u7740\u4f60\u7238\u7684fail\u8fb9\u627e\u4e0a\u53bb\uff0c\u5982\u679c\u5b83\u6307\u5411\u7684\u8282\u70b9\u7684\u5b69\u5b50\u7684\u5b57\u7b26\u548c\u4f60\u7684\u5b57\u7b26\u76f8\u7b49\uff0c\u90a3\u5b83\u7684\u8fd9\u4e2a\u5b69\u5b50\u5c31\u4f60\u8981\u8fde\u7684fail\u8fb9**\n\n\u8c8c\u4f3c\u6709\u70b9\u590d\u6742\u2026\u2026\u54b1\u8fd8\u662f\u62ff\u521a\u624d\"abc\"\u91cc\u7684\u90a3\u4e2a'c'\u4e3e\u4f8b\u5b50\uff1a\n\n>- \"abc\"\u4e2d\u7684'c'\u7684\u7236\u8282\u70b9\u662f\"abc\"\u4e2d\u7684'b'\n\n>- \"abc\"\u4e2d\u7684'b'\u7684fail\u8fb9\u662f\"bcd\"\u4e2d\u7684'b'\n\n>- \"bcd\"\u4e2d\u7684'b'\u6b63\u597d\u6709\u4e00\u4e2a\u513f\u5b50'c'\uff0c\u90a3\"abc\"\u4e2d\u7684'c'\u5c31\u8981\u628afail\u8fb9\u8fde\u5230\u90a3\u513f\n\n\u90a3\u4e48\u6709\u597d\u5947\u7684\u5c0f\u670b\u53cb\u5c31\u8981\u95ee\u4e86\uff1a\u5982\u679c\u4f60\u7238\u6ca1\u4f60\u8fd9\u4e2a\u5b69\u5b50\uff0c\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u8981\u5927\u529b\u53d1\u626c\u54b1\u4eec\u7684\u778e\u641e\u7cbe\u795e\uff1a\u6ca1\u6709\u5b69\u5b50\uff0c\u54b1\u5c31\u7ed9\u5b83\u9020\u4e00\u4e2a\uff0c**\u628a\u5f53\u524d\u7684\u5b69\u5b50\u76f4\u63a5\u53d8\u6210\u4f60\u7238\u7684fail\u6307\u9488\u7684\u5b69\u5b50\uff0c\u76f4\u63a5\u8df3\u5230\u90a3\u91cc\u53bb\u5339\u914d**\n\n\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u53d1\u73b0\u4e86\uff0c\u6211\u4eec\u627efail\u8fb9\uff0c\u662f\u4e00\u5c42\u4e00\u5c42\u5f80\u4e0b\u627e\u7684\uff0c\u6240\u4ee5\u627efail\u8fb9\u7684\u8fc7\u7a0b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a**bfs**\u7684\u8fc7\u7a0b\uff0c\u9700\u8981\u501f\u52a9**\u961f\u5217**\u6765\u5b9e\u73b0\n\n```cpp\nvoid getfail(){//STL\u5927\u6cd5\u597d\uff01\uff01\uff01\n\tqueue<int>q;\n\tfor(int v=0;v<26;v++){//\u521d\u59cb\u5316\u7b2c\u4e00\u5c42\u7684fail\u8fb9\n\t\tint c=trie[0].son[v];\n\t\tif(c){//\u5982\u679c\u6709\u8fd9\u4e2a\u5b69\u5b50\n\t\t\ttrie[c].fail=0;//\u90a3\u5c31\u628a\u5b83\u7684fail\u8fb9\u6307\u5411\u6839\u8282\u70b90\n\t\t\tq.push(c);//\u5e76\u628a\u5b83\u538b\u5165\u961f\u5217\t\n\t\t}\n\t}\n\twhile(!q.empty()){//\u5f00\u59cbbfs\uff01\n\t\tint u=q.front();//\u53d6\u961f\u9996\uff08\u8fd9\u4e2a\u961f\u9996\u662f\u7238\u7238\uff0c\u6211\u4eec\u8981\u7528\u5b83\u66f4\u65b0\u5b69\u5b50\uff09\n\t\tq.pop();//pop\u51fa\u53bb\n\t\tint f=trie[u].fail;//\u627e\u5230\u4f60\u7238\u7684fail\u8fb9\n\t\tfor(int v=0;v<26;v++){//\u4e00\u4e2a\u4e00\u4e2a\u5b69\u5b50\u53bb\u627e\n\t\t\tint c=trie[u].son[v];\n\t\t\tif(c){//\u5982\u679c\u6709\u8fd9\u4e2a\u5b69\u5b50\n\t\t\t\ttrie[c].fail=trie[f].son[v];//\u6839\u636e\u521a\u624d\u8bf4\u7684\uff0c\u8fde\u63a5fail\u8fb9\n\t\t\t\tq.push(c);//\u538b\u5165\u961f\u5217\n\t\t\t}\t\n\t\t\telse trie[u].son[v]=trie[f].son[v];//\u5426\u5219\u5c31\u201c\u9020\u201d\u4e00\u4e2a\u5b69\u5b50\n\t\t}\n\t}\n}\n```\n### 3. \u5339\u914d\u67e5\u8be2\n\nfail\u8fb9\u90fd\u5df2\u7ecf\u641e\u5b9a\u4e86\uff0c\u5339\u914d\u5c31\u662f\u5c0fcase\u5566\uff01\n\n\u5339\u914d\u7684\u4ee3\u7801\uff0c\u5176\u5b9e\u548c**trie\u6811\u7684\u67e5\u627e**\u5dee\u4e0d\u591a\uff0c\u4e00\u4e2a\u4e00\u4e2a\u627e\u4e0b\u53bb\uff0c\u627e\u5230\u672b\u5c3e\n\n\n\u4f46\u8fd9\u91cc\u6709\u70b9\u4e0d\u540c\uff0c\u8d70\u5230\u4e00\u4e2a\u5b57\u7b26\u4e4b\u540e\uff0c\u54b1\u4eec**\u5148\u53bb\u8d70\u5b83\u7684fail\u8fb9\uff0c\u8d70\u5b8c\u4e4b\u540e\u518d\u7ee7\u7eed\u5f80\u4e0b\u627e**\uff08\u8981\u4e0d\u54b1\u5927\u8d39\u5468\u7ae0\u5730\u627efail\u8fb9\u610f\u4e49\u4f55\u5728\uff1f\uff09\n\n\u4f46\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9898\u76ee\u8ba9\u6211\u4eec\u6c42**\u6709\u591a\u5c11\u4e2a\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u91cc\u51fa\u73b0\u8fc7**\uff0c\u6240\u4ee5\u51fa\u73b0\u8fc7\u52a0\u5b8c\u4e86cnt\u4e4b\u540e\uff0c\u54b1\u4eec\u628acnt\u53d8\u6210-1\uff0c\u4e0b\u6b21\u9047\u5230-1\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u4e32\u5df2\u7ecf\u7edf\u8ba1\u8fc7\u4e00\u904d\u4e86\uff0c\u5c31\u53ef\u4ee5\u7ed3\u675f\u8df3fail\u7684\u8fc7\u7a0b\uff0c\u53bb\u627e\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e86\n\n```cpp\nint find(string s){//\u5bf9\u6587\u672c\u4e32s\u8fdb\u884c\u5339\u914d\n\tint u=0;//\u5f53\u524d\u8282\u70b9\n\tint sum=0;//\u7edf\u8ba1\u7b54\u6848\n\tfor(int i=0;s[i];i++){\n\t\tint v=s[i]-'a';\n\t\tint c=trie[u].son[v];//\u4f9d\u65e7\u662fTrie\u6811\u7684\u67e5\u627e\u8fc7\u7a0b\n\t\twhile(c&&trie[c].cnt!=-1){//\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u4e0d\u662f\u6839\u8282\u70b9\uff0c\u800c\u4e14\u8fd8\u4e0d\u662f-1\n\t\t\tsum+=trie[c].cnt;//\u52a0\u5230\u7b54\u6848\u91cc\n\t\t\ttrie[c].cnt=-1;//\u52a0\u8fc7\u4e86\uff0c\u53d8\u6210-1\n\t\t\tc=trie[c].fail;//\u8df3fail\u8fb9\n\t\t}\n\t\tu=trie[u].son[v];//\u53bb\u5f80\u4e0b\u4e00\u4e2a\u8282\u70b9\n\t}\n\treturn sum;//\u8fd9\u4e2a\u5c31\u4e0d\u7528\u89e3\u91ca\u4e86\u5427\n}\n```\n\n### \u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n//\u901a\u8fc7\u5957\u53d6\u6570\u636e\u800c\u76f4\u63a5\u201c\u6253\u8868\u201d\u8fc7\u9898\u8005\uff0c\u662f\u4f5c\u5f0a\u884c\u4e3a\uff0c\u53d1\u73b0\u5373\u68d5\u540d\u3002\n#include<iostream>\n#include<cstring>\n#include<queue>\nusing namespace std; \nstruct luogu{//Trie\u6811\n\tint son[30];\n\tint cnt,fail;\n}trie[500010];\nint tot=0;\nvoid insert(string s){//\u63d2\u5165\n\tint u=0;\n\tfor(int i=0;s[i];i++){\n\t\tint v=s[i]-'a';\n\t\tif(!trie[u].son[v])\n\t\ttrie[u].son[v]=++tot;\n\t\tu=trie[u].son[v];\n\t}\n\ttrie[u].cnt++;\n}\nvoid getfail(){//\u6784\u5efafail\u8fb9\n\tqueue<int>q;\n\tfor(int v=0;v<26;v++){\n\t\tint c=trie[0].son[v];\n\t\tif(c){\n\t\t\ttrie[c].fail=0;\n\t\t\tq.push(c);\t\n\t\t}\n\t}\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tint f=trie[u].fail;\n\t\tfor(int v=0;v<26;v++){\n\t\t\tint c=trie[u].son[v];\n\t\t\tif(c){\n\t\t\t\ttrie[c].fail=trie[f].son[v];\n\t\t\t\tq.push(c);\n\t\t\t}\t\n\t\t\telse trie[u].son[v]=trie[f].son[v];\n\t\t}\n\t}\n}\nint find(string s){//\u5339\u914d\u67e5\u8be2\n\tint u=0;\n\tint sum=0;\n\tfor(int i=0;s[i];i++){\n\t\tint v=s[i]-'a';\n\t\tint c=trie[u].son[v];\n\t\twhile(c&&trie[c].cnt!=-1){\n\t\t\tsum+=trie[c].cnt;\n\t\t\ttrie[c].cnt=-1;\n\t\t\tc=trie[c].fail;\n\t\t}\n\t\tu=trie[u].son[v];\n\t}\n\treturn sum;\n}\nint main(){\n\tint n;\n\tstring s;\n\tcin>>n;\n\twhile(n--){\n\t\tcin>>s;\n\t\tinsert(s);//\u5c06\u6bcf\u4e2a\u6a21\u5f0f\u4e32\u63d2\u5165\u5230Trie\u6811\u4e2d\n\t}\n\tgetfail();//\u6784\u5efafail\u8fb9\n\tcin>>s;\n\tcout<<find(s);//\u5bf9\u6587\u672c\u4e32\u8fdb\u884c\u5339\u914d\n\treturn 0;//\u5b8c\u7f8e\u7ed3\u675f\n}\n```\n\n~~\u6700\u540e\u8bf4\u4e00\u4e0b\uff0cAC\u81ea\u52a8\u673a\u597d\u867d\u597d\uff0c\u4f46\u662f\u4e0d\u80fd\u6ee5\u7528\uff0c\u5426\u5219\u4f1a[\u8fd9\u6837](https://www.luogu.com.cn/discuss/show/57951)~~\uff08\u4f26\u6566\u5927\u96fe\uff0cAC\u81ea\u52a8\u673a\u548c\u81ea\u52a8AC\u673a\u4e0d\u662f\u4e00\u4e2a\u4e1c\u897f\u5566\uff09\n\n$\\large{\\color{magenta}The\\;end}$",
        "postTime": 1586355128,
        "uid": 239405,
        "name": "yangrunze",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011\u81ea\u52a8AC\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "- ##  **AC\u81ea\u52a8\u673a**\uff1a\n1. ### \u5373\u5b57\u5178\u6811\uff08 trie \uff09  +  KMP( \u601d\u60f3 ) \n1. #####              AC\u81ea\u52a8\u673a\u5373\u5728\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\u4e2d\u67e5\u8be2\u591a\u4e2a\u77ed\u5b57\u7b26\u4e32\uff1b \n3. #####              KMP\uff08\u66b4\u529b\uff09\u5219\u4e3a O\uff08k*(m+n)\uff09\uff1b \n1. #####              \u5927\u6570\u636e\u5219\u65e0\u6cd5AC\uff0c\u5219\u52a0\u5165\u5b57\u5178\u6811\uff0c\u7531\u5b57\u5178\u6811\u5b58\u5165\u5176\u4e2d\u9700\u67e5\u8be2\u7684n\u4e2a\u77ed\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u6709\u5305\u542b\u5173\u7cfb\uff0c\u4ea4\u96c6\u5173\u7cfb\uff0c\u7531\u5b57\u5178\u6811\u94fe\u63a5\u3002\uff08\u7f29\u5c0f\u65f6\u95f4\u590d\u6742\u5ea6\uff09  \n- # **code**\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm> \n#include<queue>\n#define maxn 5000000+10\nusing namespace std;\nchar str[maxn*2];\nstruct node{\n\tint fail;//\u5931\u914d\u6307\u9488\uff1b\n\tint cnt;//\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\uff1b\n\tint next[62];// \u6b64\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\uff08\u513f\u5b50\uff09\u8282\u70b9\uff1b \n}trie[maxn];//\u8282\u70b9\u7ed3\u6784\u4f53\uff1b \nint k=0,ans=0;\nqueue<int> q;//\u961f\u5217\uff1a\u5efa\u5931\u914d\u6307\u9488\u4f7f\u7528\uff1b \nvoid build_trie(int id,char *s)//id\u8868\u793a\u7b2c\u51e0\u4e2a\u7ed3\u70b9\uff0c\u5373\u6240\u6709\u5b57\u7b26\u4e32\u4ece\u7b2c0\u4e2a\u8282\u70b9\u5f00\u59cb\u5411\u4e0b\u5efa\uff1b*s\u5373\u8868\u793a\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff1b \n{\n\tint len=strlen(s);//\u8be5\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff1b(\u76f8\u5f53\u4e8e\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u6df1\u5ea6)\n\tint j=0;\n\tfor(int i=0;i<len;i++){\n\t    j=s[i]-'a';\n\t    if(trie[id].next[j]==0)/*\u82e5\u6b64\u5b57\u6bcd\u672a\u51fa\u73b0\u5728\u5f53\u524d\u4f4d\u7f6e\u7684\u4e0b\u4e00\u6df1\u5ea6*/\n\t    {\n\t        trie[id].next[j]=++k;//\u5f53\u524d\u8282\u70b9\u5bf9\u4e8ej\u5b57\u6bcd\u8282\u70b9\u7684\u4f4d\u7f6e\uff1b\u5373j\u5b57\u6bcd\u7684\u8282\u70b9\u5e8f\u53f7\uff1b \n\t    }\n\t    id=trie[id].next[j];//id\u4f20\u4e3a\u4e0b\u4e00\u5b57\u6bcd\u7684\u5730\u5740\uff1b \n\t}\n\ttrie[id].cnt++;//\u5bf9\u6b64\u5355\u8bcd\u7684\u6570\u91cf++\uff1b \n}\nvoid build_fail(int id)\n{\n\twhile(!q.empty()) q.pop();//\u4e3a\u4e86\u653e\u5fc3\uff0c\uff08be afraid of\u961f\u5217\u672a\u6e05\u7a7a\uff09\n\tfor(int i=0;i<26;i++)//\u904d\u5386\u8d85\u7ea7\u8282\u70b9\u4e0b\u768426\u4e2a\u5b57\u6bcd\uff1b\n\t{\n\t    int j=trie[id].next[i];\n\t    if(j!=0){\n\t        q.push(j);\n\t        trie[j].fail=id;//\u7b2c\u4e00\u5c42\u7684\u8282\u70b9\u5931\u914d\u6307\u9488\u7686\u6307\u5411\u8d85\u7ea7\u8282\u70b9\uff1b \n\t    }\n\t}\n\twhile(!q.empty())\n\t{\n\t    int now=q.front();q.pop();//\u53d6\u51fa\u5f53\u524d\u4f4d\u7f6e\uff1b\uff08\u961f\u9996\u5143\u7d20\uff09 \n\t    for(int i=0;i<26;i++)\n\t    {\n\t        int j=trie[now].next[i];\n\t        if(j==0)//\u5f53\u524d\u4f4d\u7f6e\u4e0b\u6ca1\u6709\u8fd9\u4e2a\u8282\u70b9\uff1b\u5c31\u8c03\u5230\u5b83\u5931\u914d\u6307\u9488\u6240\u6307\u5411\u7684\u8282\u70b9\u4e0b\u7684\u6b64\u4e2a\u5b57\u6bcd\u8282\u70b9\uff1b \n\t        {\n\t            trie[now].next[i]=trie[trie[now].fail].next[i];//\u82e5\u4e3a0\uff0c\u4e0d\u5f71\u54cd\uff0c\u6307\u5411\u8d85\u7ea7\u8282\u70b9; \n\t            continue;//\u8be5\u70b9\u904d\u5386\u5b8c\u6210\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u8282\u70b9\u7684\u904d\u5386\uff1b \n\t        }\n\t        trie[j].fail=trie[trie[now].fail].next[i];//\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u4e0b\u6709\u8fd9\u4e2a\u5b57\u6bcd\u8282\u70b9\uff0c\u5219\u5176\u5931\u914d\u6307\u9488\u6307\u5411\u5f53\u524d\u4f4d\u7f6e\u7684\u5931\u914d\u6307\u9488\u4e0b\u7684\u8be5\u8282\u70b9\uff1b\n\t        //\u82e5\u5f53\u524d\u4f4d\u7f6e\u7684\u5931\u914d\u6307\u9488\u4e0b\u6ca1\u6709\u5f53\u524d\u904d\u5386\u7684\u8be5\u5b57\u6bcd\u8282\u70b9\uff0c\u4efb\u4e0d\u5f71\u54cd\uff08\u4e3a0\uff0c\u6307\u5411\u8d85\u7ea7\u8282\u70b9\uff09\uff1b \n\t        q.push(j);//\u5b58\u5165\u6570\u7ec4\uff1b \n\t    }\n\t}\n}\nvoid solve_trie(int id,char *s)//\u67e5\u8be2\u51fd\u6570\uff1b \n{\n\tint len=strlen(s),j=0;\n\tfor(int i=0;i<len;i++)\n\t{\n\t    int j=trie[id].next[s[i]-'a'];//\u5f53\u524d\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4f4d\u7f6e\uff1b\n\t    while(j && trie[j].cnt!=-1)//\u5f53\u6b64\u8282\u70b9\u5b58\u5728\u540c\u65f6\u5176cnt\u672a\u88ab\u904d\u5386\uff1b \n\t    {\n\t        ans+=trie[j].cnt;//\u5c06\u7b54\u6848\u52a0\u4e0a\u6240\u641c\u7d22\u7684\u5b57\u7b26\u4e32\u4e2d\u6240\u5305\u542b\u7684\u8be5\u5355\u8bcd\u6570 \uff1b \n\t        trie[j].cnt=-1;//\u6807\u8bb0\uff1b \n\t        j=trie[j].fail;//\u76f4\u63a5\u5c06\u4f4d\u7f6e\u6307\u5411\u5176\u5931\u914d\u6307\u9488\u7684\u4f4d\u7f6e\uff08\u8282\u7ea6\u65f6\u95f4\uff09\uff1b \n\t    }\n\t    id=trie[id].next[s[i]-'a'];//id\u7ee7\u627f\uff0c\u5f53\u524d\u4f4d\u7f6e\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff1b \n\t}\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t    scanf(\"%s\",str);//\u7b2ci\u4e2a\u77ed\u5b57\u7b26\u4e32\uff1b\n\t    build_trie(0,str);//0\u4e3a\u8d85\u7ea7\u6839\u8282\u70b9\uff08\u5373\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5171\u540c\u7956\u5148\uff09\uff1b(\u5373\u4ece0\u5f00\u59cb\u5efa) \n\t}//\u5b57\u5178\u6811\u5efa\u7acb\u5b8c\u6210\uff1b\n\tbuild_fail(0);//\u5efa\u5931\u914d\u6307\u9488\uff1b \n\tscanf(\"%s\",str);//\u8f93\u5165\u9700\u67e5\u8be2\u7684\u5b57\u7b26\u4e32\uff1b\n\tsolve_trie(0,str); //\u67e5\u8be2\uff1b \n\tprintf(\"%d\\n\",ans);//\u8f93\u51fa\uff1b \n\treturn 0;//                                                                                              \u2606\u2312(*\uff3e-\u309c)v THX!!\n\t//                                                                                                             \u534e\u4e3d\u7684\u7ed3\u675f\uff1b\n\t\n\t//                                                                                                                 BY:   Tel\u517c_dope \n}\n```",
        "postTime": 1543582155,
        "uid": 111987,
        "name": "Tel\u517c_dope",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "\u6b63\u7531\u4e8e\u78b0\u4e0a\u4e86\u8fd9\u9053\u9898\uff0c\u849f\u84bb\u7ec8\u4e8e\u5b66\u4f1a\u4e86AC\u81ea\u52a8\u673a\uff01\u6fc0\u52a8\u554a\u0669(\u0e51>\u25e1<\u0e51)\u06f6\n\nAC\u81ea\u52a8\u673a=Trie+KMP\n\n\u4e24\u4e2a\u4f18\u5316\uff1a\n\n1.\u7c7b\u4f3c\u5e76\u5dee\u96c6\u7684\u8def\u5f84\u538b\u7f29\uff0c\u628a\u4e0d\u5b58\u5728\u7684ch[u][c]\u5168\u90e8\u6307\u5411ch[f[u]][c]\uff08f\u662f\u5931\u914d\u51fd\u6570\uff09\n\n2.\u628a\u6709\u6548\u5931\u914d\u51fd\u6570\u7528last\u6307\u9488\u4fdd\u5b58\u3002\n\n\u6211\u7684\u535a\u5ba2\u91cc\u8bb2\u7684\u975e\u5e38\u6e05\u695a\uff1ahttp://blog.csdn.net/no1\\_terminator/article/details/77725530\n\n\u8fd9\u91cc\u5c31\u7b80\u5355\u7684\u8bb2\u4e00\u4e0b\uff1a\n\n\u6211\u4eec\u91cd\u65b0\u5b9a\u4e49KMP\u4e2d\u7684\u5931\u914d\u51fd\u6570\u3002\n\n\u8bbef[u]=v\u8868\u793a\u4ece\u6839\u5230u\u53f7\u8282\u70b9\u7684\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u67d0\u4e2a\u540e\u7f00\u4e0e\u4ece\u6839\u5230v\u53f7\u8282\u70b9\u7684\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u7b49\u6548\u7684\uff08\u5373\u5b8c\u5168\u76f8\u7b49\u7684\uff09\uff01\u8fd9\u4e2a\u540e\u7f00\u5fc5\u987b\u662f\u5c3d\u91cf\u5730\u957f\u3002\n\n\u6211\u4eec\u5339\u914d\u5230\u5728\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u65f6\u5019\u5c31\u4e0d\u65ad\u7684\u6cbf\u7740\u5931\u914d\u8fb9\u8df3\uff0c\u6240\u6709\u7684\u7aef\u70b9v\u662f\u6807\u8bb0\u70b9\u7684\u5931\u914d\u8fb9\u90fd\u5bf9\u5e94\u4e86\u4e00\u4e2a\u6a21\u5f0f\u4e32\u3002\n\n\u4f46\u662f\u8fd9\u4e2a\u5931\u914d\u5173\u7cfb\u5f80\u5f80\u4f1a\u975e\u5e38\u590d\u6742\uff0c\u5373\u6211\u4eec\u8df3\u4e86\u5f88\u591a\u6b21\uff0c\u4f46\u662f\u6ca1\u6709\u4e00\u4e2a\u7aef\u70b9\u662f\u6807\u8bb0\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u5f15\u5165last\u6307\u9488\u7684\u4f18\u5316\u3002\n\n\u5373\u5b9a\u4e49last[u]=v\u8868\u793a\u4eceu\u5f00\u59cb\u4e0d\u65ad\u6cbf\u7740\u5931\u914d\u8fb9\u8df3\u5230\u7684\u7b2c\u4e00\u4e2a\u662f\u6807\u8bb0\u70b9\u7684\u7aef\u70b9v\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u5339\u914d\u662f\u5c31\u65e0\u9700\u6cbf\u7740f\u8df3\uff0c\u800c\u662f\u6cbf\u7740last\u8df3\uff0c\u6ca1\u8df3\u5230\u4e00\u4e2alast\uff0c\u5b83\u5c31\u4e00\u5b9a\u5bf9\u5e94\u4e00\u4e2a\u6a21\u5f0f\u4e32\uff0c\u6240\u4ee5\u6548\u7387\u662f\u975e\u5e38\u9ad8\u7684\u3002\n\n\u6211\u4eec\u9996\u5148\u8003\u8651f\u7684\u9012\u63a8\u3002\u6211\u4eec\u8bbe\u5f53\u524d\u8282\u70b9\u4e3au\uff0c\u5176\u4e00\u4e2a\u5b69\u5b50ch[u][c]=v\uff0ck\u8868\u793au\u6cbf\u7740f\u8fb9\u8df3\u4e00\u6b21\u5bf9\u5e94\u7684\u70b9\uff0c\u5373k=f[u],\n\n\u90a3\u4e48\u5982\u679cu\u4e0d\u662f\u6839\u8282\u70b9\uff0cf[v]=ch[k][c]\uff0c\u5373\u6cbf\u7740k\u518d\u5411\u4e0b\u8d70\u4e00\u4e2ac\u5b57\u7b26\uff0c\u8fd9\u65f6\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fd8\u662f\u76f8\u7b49\u7684\u5bf9\u4e0d\u5bf9\u3002\n\n\u5982\u679cu\u662f\u6839\u8282\u70b9\u90a3\u5c31\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u4e86\uff0cf[v]=0\u3002\n\n\u5728\u6b64\u6761\u4ef6\u4e0b\uff0clast\u5c31\u975e\u5e38\u597d\u9012\u63a8\u4e86\uff0c,\u90a3\u4e48\u5982\u679cf[v]\u662f\u6807\u8bb0\u70b9\uff0c\u90a3\u4e48last[v]=f[v],\n\n\u5426\u5219last[v]=last[f[v]]\u3002\n\n\u8fd9\u4e2af[v]\u5e76\u4e0d\u80fd\u4fdd\u8bc1ch[k][c]\u5c31\u4e00\u5b9a\u5b58\u5728\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u4e00\u4e2awhile\u5faa\u73af\u4e00\u76f4\u8df3\u76f4\u5230\u627e\u5230\u4e00\u4e2ach[k][c]!=0\u7684\u7aef\u70b9\u3002\u53ef\u4ee5\u51fa\u73b0\u4e86\u4e00\u4e2awhile\uff0c\u65e2\u4f7f\u4ee3\u7801\u4e0d\u591f\u4f18\u7f8e\uff0c\u53c8\u4f7f\u6548\u7387\u65e0\u6cd5\u4fdd\u8bc1\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u628a\u6240\u6709ch[k][c]=0\u7684\u7aef\u70b9\u7684ch[k][c]\u76f4\u63a5\u8fde\u5411ch[f[k]][c]\uff0c\u5c31\u597d\u50cf\u5e76\u5dee\u96c6\u7684\u4e00\u4e2a\u8def\u5f84\u538b\u7f29\uff0c\u7531\u4e8eTrie\u662f\u8bfb\u5b8c\u6240\u6709\u6a21\u5f0f\u4e32\u540e\u5efa\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u52a0\u8fb9\u5e76\u4e0d\u4f1a\u5f71\u54cdTrie\u3002\n\n\u8003\u8651\u5230\u8fd9\u662f\u4e00\u4e2aTrie\u6811\u4e0a\u7684\u9012\u63a8\uff0c\u6240\u4ee5\u6211\u4eec\u7528BFS\u641e\u4e00\u641e\u5c31\u597d\u4e86\u3002\n\n\n\u597d\u5427\uff0c\u6709\u5570\u91cc\u5570\u55e6\u7684\u8bb2\u4e86\u4e00\u5927\u5806\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#define REP(i,a,b) for (int i=(a);i<=(b);i++)\n#define reset(a) memset((a),0,sizeof((a)))\nusing namespace std;\nconst int N=1e6+10;\nchar P[N];\nint n;\nstruct Aho_Corasick_Automaton{\n    int ch[N][26],val[N],f[N],last[N],NodeCnt;\n    void clear(){\n        reset(ch);reset(val);reset(f);reset(last);\n        NodeCnt=0;\n    }\n    void insert(char *S){\n        int u=0,n=strlen(S);\n        REP(i,0,n-1){\n            int c=S[i]-'a';\n            if (!ch[u][c])ch[u][c]=++NodeCnt;\n            u=ch[u][c];\n        }\n        val[u]++;\n    }\n    void getFail(){\n        queue<int> Q;\n        Q.push(0);\n        while (!Q.empty()){\n            int u=Q.front(),k=f[u];Q.pop();\n            REP(c,0,25){\n                int v=ch[u][c];\n                if (!v){ch[u][c]=ch[k][c];continue;}\n                Q.push(v);\n                f[v]=u?ch[k][c]:0;\n                last[v]=val[f[v]]?f[v]:last[f[v]];\n            }\n        }\n    }\n    int count(char *T){\n        int u=0,n=strlen(T),res=0;\n        REP(i,0,n-1){\n            int c=T[i]-'a';\n            u=ch[u][c];\n            if (val[u])res+=val[u],val[u]=0;\n            int v=u;\n            while (last[v]){\n                v=last[v];\n                if (val[v])res+=val[v],val[v]=0;\n            }\n        }\n        return res;\n    }\n}AC;\nint main(){\n    scanf(\"%d\",&n);\n    AC.clear();\n    REP(i,1,n){\n        scanf(\"%s\",P);\n        AC.insert(P);\n    }\n    AC.getFail();\n    scanf(\"%s\",P);\n    printf(\"%d\\n\",AC.count(P));\n    return 0;\n}\n```",
        "postTime": 1504099850,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u7528\u6307\u9488\u5199\u6210\u7684AC\u81ea\u52a8\u673a\u3002\u5f88\u591a\u4eba\u90fd\u5c06$fail$\u79f0\u4f5c\u201c$fail$\u6307\u9488\u201d\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u7528\u6307\u9488\u5199\u8d77\u6765\u4f1a\u5bb9\u6613\u7406\u89e3\u4e00\u4e9b\u3002\n\n\u539f\u7406\u5728\u522b\u7684\u9898\u89e3\u91cc\u5404\u4f4d\u5927\u4f6c\u90fd\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff0c\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u8bb2\u7684\u662f\u5b9e\u73b0\u3002 \n\n```cpp\n#include <iostream>\n#include <string>\n#include <queue>\n/* GET(i):\n * \u5b57\u7b26\u4e32x\u4e2d\u7684\u7b2ci\u4e2a\u5b57\u7b26\u51cf\u53bb'a'\u7684\u503c\uff0c\n * \u4e5f\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u5728\u5b83\u7236\u4eb2\u7684a\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\n * (a\u5c31\u662fTrie\u4e0a\u7684\u8fd9\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u4eec)\u3002\n */\n#define GET(i) (x[i] - 'a')\n/* TO(x):\n * x\u662fTrie\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\u3002\n * \u5728\u8df3\u8f6c\u7684\u65f6\u5019\uff0cx\u53ef\u80fd\u4e3aNULL(\u4e5f\u5c31\u662f0)\uff0c\u4ee3\u8868\u7236\u4eb2\u6ca1\u6709\u8fd9\u4e2a\u513f\u5b50\u3002\n * \u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u8df3\u5230root\u3002\n */\n#define TO(x) (x ? x : root)\nusing namespace std;\n\nstruct node {\n\tnode *a[26], *fail; //a[]: \u513f\u5b50\u4eec\uff1bfail: \u5c31\u662ffail\u6307\u9488\n\tint cnt; //\u6709\u591a\u5c11\u4e2a\u5b57\u7b26\u4ee5\u8fd9\u4e2a\u8282\u70b9\u7ed3\u5c3e\uff08\u7528\u6765\u5904\u7406\u91cd\u590d\u7684\u5b57\u7b26\u4e32\uff09\n\n\t/* \u6784\u9020\u51fd\u6570\n\t * \u521b\u9020\u8282\u70b9\u4f7f\u7528\u7684\u662fnew\u3002\u5b83\u4e0d\u4f1a\u5c06node\u91cc\u9762\u7684\u6210\u5458\u7f6e\u4e3a\u9ed8\u8ba4\u503c0\uff0c\n\t * \u6240\u4ee5\u9700\u8981\u4e13\u95e8\u8d4b\u4e00\u4e0b\u503c\u3002\n\t */\n\tnode(): cnt(0), fail(0) {\n\t\tfor (int i = 0; i < 26; ++i)\n\t\t\ta[i] = 0;\n\t}\n} *root = new node(); //Trie\u7684\u6839 \n\n//\u5efa\u7acbTrie \nvoid build(const string& x) {\n\tnode* curr = root; //\u4ece\u6839\u5f00\u59cb\u5f80\u4e0b\u5efaTrie \n\tfor (int i = 0; i < x.size(); ++i) {\n\t\tif (!curr->a[GET(i)]) //\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u8282\u70b9\u7684\u8bdd\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a \n\t\t\tcurr->a[GET(i)] = new node();\n\t\tcurr = curr->a[GET(i)]; //\u7136\u540e\u8df3\u5230\u513f\u5b50\u8282\u70b9\u7ee7\u7eed\u5efa \n\t}\n\t++curr->cnt; //\u5efa\u5b8c\u4e86\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u6807\u8bb0\u4e00\u4e0b\u8fd9\u91cc\u662f\u7ed3\u5c3e \n}\n\n//\u627e\u5230fail\u6307\u9488 \nvoid failure() {\n\tqueue<node*> q; //\u5f00\u59cbbfs \n\tfor (int i = 0; i < 26; ++i)\n\t\tif (root->a[i])\n            //\u628a\u7b2c\u4e00\u5c42(root\u7684\u513f\u5b50)\u653e\u8fdb\u961f\u5217\uff0c\u5e76\u4e14\u6807\u8bb0\u5b83\u4eec\u7684fail \n\t\t\tq.push(root->a[i]), root->a[i]->fail = root;\n\twhile (q.size()) {\n\t\tnode* x = q.front(); q.pop();\n\t\tfor (int i = 0; i < 26; ++i)\n\t\t\tif (x->a[i])\n\t\t\t\t/* \u513f\u5b50\u7684fail\u5c31\u662f\u81ea\u5df1\u7684fail\u7684\u5bf9\u5e94\u7684\u513f\u5b50\n\t\t\t\t * \u5f53\u7136\uff0c\u5982\u679cfail\u6ca1\u6709\u5bf9\u5e94\u7684\u513f\u5b50\uff0c\u5c31\u6307\u5411root\n\t\t\t\t * \u6700\u540e\u628a\u513f\u5b50\u8fdb\u961f\n\t\t\t\t */\n\t\t\t\tx->a[i]->fail = TO(x->fail->a[i]),\n\t\t\t\tq.push(x->a[i]);\n\t\t\telse\n\t\t\t\t//\u8fd9\u91cc\u7c7b\u4f3c\u4e8e\u5e76\u67e5\u96c6\u7684\u8def\u5f84\u538b\u7f29\n\t\t\t\tx->a[i] = x->fail->a[i];\n\t}\n}\n\n//\u67e5\u8be2 \nint match(const string& x) {\n\tnode* curr = root;\n\tint ans = 0;\n\tfor (int i = 0; i < x.size(); ++i) {\n\t\t//\u8df3\u5230\u5bf9\u5e94\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u7684\u90a3\u4e2a\u513f\u5b50\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u8df3\u5230\u6839\n\t\tcurr = TO(curr->a[GET(i)]);\n\t\t/* \u5f00\u59cb\u66b4\u8df3fail: \n\t\t * \u627e\u5230\u6574\u6761fail\u8def\u5f84\u4e0a\u7684\u5b57\u7b26\u4e32\u7ed3\u5c3e\u8282\u70b9\uff0c \n\t\t * \u7136\u540e\u52a0\u5230\u7b54\u6848\u91cc\uff0c\u518d\u6807\u8bb0\u6210\u5df2\u7ecf\u7b97\u8fc7\u3002\n\t\t * ~x\u5c31\u662fx != -1\u7684\u610f\u601d\u3002\n\t\t */ \n\t\tfor (node* t = curr; t && ~t->cnt; t = t->fail)\n\t\t\tans += t->cnt,\n\t\t\tt->cnt = -1;\n\t}\n\treturn ans;\n}\n\nint main() {\n\tint n;\n\tcin >> n;\n\tfor (int i = 0; i < n; ++i) {\n\t\tstring m;\n\t\tcin >> m;\n\t\tbuild(m);\n\t}\n\tfailure(); //\u4e0d\u8981\u5fd8\u4e86\u7b97\u51fafail\u6307\u9488 \n\tstring k;\n\tcin >> k;\n\tcout << match(k);\n\treturn 0;\n}\n```\n",
        "postTime": 1565613172,
        "uid": 64757,
        "name": "huang_yue",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u5728\u628a\u6811\u8e39\u5012\uff08Trie\u6811\uff09\u7136\u540e\u70e4\u998d\u7247\uff08kmp\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int N = 1e6 + 10;\n\n//Trie\u6811\u7ed3\u6784\u4f53 \nstruct node\n{\n\tint son[27], fail, flag;\n}trie[N];\nint cnt = 1;\n\n//\u5c06\u5b57\u7b26\u4e32\u52a0\u5165Trie\u6811 \nvoid Insert(const char* s, int n)\n{\n\t//1\u53f7\u4e3a\u6839 \n\tint u = 1;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint v = s[i] - 'a';\n\t\t//\u5982\u679c\u6ca1\u6709\u5c31\u65b0\u5efa\u8282\u70b9 \n\t\tif (trie[u].son[v] == 0)\n\t\t\ttrie[u].son[v] = ++cnt;\n\t\tu = trie[u].son[v];\n\t}\n\t//\u6700\u7ec8\u7ec8\u70b9\u6807\u8bb0 \n\ttrie[u].flag++;\n}\n\nint q[N], head, tail;\nvoid build()\n{\n\t//0\u4e3a\u865a\u62df\u8282\u70b9\uff0c\u4fbf\u4e8e\u6784\u5efa\u81ea\u52a8\u673a\n\t//\u7b2c\u4e00\u4e2a\u5c31\u5931\u914d\u5f53\u7136\u5c31\u91cd\u65b0\u5f00\u59cb \n\tfor (int i = 0; i < 26; i++)\n\t\ttrie[0].son[i] = 1;\n\t//bfs\u5efa\u6811 \n\tq[tail++] = 1, trie[1].fail = 0;\n\twhile (head < tail)\n\t{\n\t\tint u = q[head++];\n\t\tfor (int i = 0; i < 26; i++)\n\t\t{\n\t\t\tint v = trie[u].son[i];\n\t\t\t//\u7528\u7236\u8282\u70b9\u8ba1\u7b97\u8fc7\u7684fail\u4fe1\u606f \n\t\t\tint t = trie[u].fail;\n\t\t\t//\u5982\u679c\u5931\u914d \n\t\t\tif (v == 0)\n\t\t\t\t//\u5c31\u8fde\u5230\u7236\u4eb2fail\u7684\u5bf9\u5e94\u5b50\u8282\u70b9\uff08\u9012\u5f52\u5b9a\u4e49\uff0c\u4e0d\u4e00\u5b9a\u5c31\u662f\u90a3\u4e2a\u8282\u70b9\uff0c\u6709\u53ef\u80fd\u4f1a\u662f\n\t\t\t\t//fail\u7684fail\u7684\u5b50\u8282\u70b9 \n\t\t\t\ttrie[u].son[i] = trie[t].son[i];\n\t\t\telse\n\t\t\t\t//\u5339\u914d\u4e0a\u7684\u8bddfail\u8fde\u5230\u7236\u4eb2fail\u7684\u5bf9\u5e94\u5b50\u8282\u70b9\n\t\t\t\ttrie[v].fail = trie[t].son[i];\n\t\t\tif (v != 0)\n\t\t\t\tq[tail++] = v;\n\t\t}\n\t}\n}\n\n//\u67e5\u8be2\u5c31\u662f\u8d70\u4e00\u904dAC\u81ea\u52a8\u673a \nint query(const char* s, int n)\n{\n\tint u = 1, ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint v = s[i] - 'a';\n\t\t//\u6cbf\u7740fail\u5f80\u4e0b\u8d70\u90fd\u80fd\u5339\u914d\u4e0a \n\t\tint k = trie[u].son[v];\n\t\twhile (k > 1 && /*\u9632\u6b62\u73af*/trie[k].flag != -1)\n\t\t{\n\t\t\tans += trie[k].flag, trie[k].flag = -1;\n\t\t\tk = trie[k].fail;\n\t\t}\n\t\tu = trie[u].son[v];\n\t}\n\treturn ans;\n}\n\nchar s[N], t[N];\n\nint main()\n{\n\t//fail\u7684\u542b\u4e49\u4e3a\u6700\u957f\u7684\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u5728Trie\u4e0a\u53ef\u4ee5\u67e5\u627e\u5230\u7684\u672b\u5c3e\u7f16\u53f7\n\t//\u5931\u914d\u540e\u76f4\u63a5\u8df3\u5c31\u53ef\u4ee5\u627e\u5230\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u70b9\n\t//\u7c7b\u4f3ckmp\u7684\u5229\u7528\u539f\u6709\u4fe1\u606f\u7684\u601d\u60f3\u6784\u5efa+\u67e5\u8be2\n\t \n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%s\", s + 1);\n\t\tint len = strlen(s + 1);\n\t\tInsert(s, len);\n\t}\n\tbuild();\n\tscanf(\"%s\", t + 1);\n\tint len = strlen(t + 1);\n\tprintf(\"%d\", query(t, len));\n\treturn 0;\n}\n```\n",
        "postTime": 1612310592,
        "uid": 137603,
        "name": "zhiyangfan",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "# \u6d45\u8c08AC\u81ea\u52a8\u673a\n\n~~\u6ca1\u9519\u4ed6\u4e0d\u80fd\u8ba9\u4f60\u76f4\u63a5 AC \u5e76\u80fd\u8ba9\u4f60\u81ea\u52a8 WA\u3002~~\n\n\u597d\u5427\u6211\u4eec\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u5148\u6765\u4e00\u4e2a\u80cc\u666f\uff1a[AC\u81ea\u52a8\u673a\u6a21\u677f\uff08easy\uff09](https://www.luogu.com.cn/problem/P3808)\n\n\u4e0a\u9762\u8bf4\u4e86\uff0c\n\nAC \u81ea\u52a8\u673a\u662f KMP + Trie \u6811\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u8981\u5efa\u4e00\u4e2a Trie \u6811\uff08**\u6839\u8282\u70b9\u4e3a 1**\uff09\u3002\n\n\u5efa\u6811\u7684\u8fc7\u7a0b\u4e0d\u518d\u8d58\u8ff0\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline void insert(char *ss) {\n\tint len = strlen(ss + 1), pos = 1;\n\t\n\tfor (int i = 1; i <= len; i ++) {\n\t\tint c = ss[i] - 'a';\n\t\t\n\t\tif (! trie[pos][c])\n\t\t\ttrie[pos][c] = ++ tot;\n\t\t\t\n\t\tpos = trie[pos][c]; \n\t} \n\t\n\tcnt[pos] ++;\n}\n```\n\n\u73b0\u5728\u6211\u4eec\u8981\u50cf KMP \u4e00\u6837\u5efa\u4e00\u4e2a $nxt$ \u6570\u7ec4\uff0c \u4f46\u662f\u8fd9\u6b21\u6211\u4eec\u4e0d\u53eb $nxt$\uff0c\u53eb $fail$ \u4e86\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u5bb6\u4f19\u7684\u610f\u601d\u5c31\u662f\uff1a**\u5982\u679c\u8bf4\u4ece $root$ \u5230 $i$ \u7684\u4e32\u6211\u4eec\u8bbe\u4e3a $A$\uff0c\u4ece $root$ \u5230 $j$ \u7684\u4e32\u6211\u4eec\u79f0\u4e3a $B$\uff0c\u5219 $B$ \u662f $A$ \u7684\u6700\u957f\u540e\u7f00**\u3002\n\n\u5148\u770b\u770b\u6211\u4eec\u7684\u5b57\u5178\u6811\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/t7etqs8l.png)\n\n\u90a3\u4e48\u6211\u4eec\u4fbf\u5f00\u59cb\u627e $fail$ \u5427\uff01\n\n\u5f88\u660e\u663e\uff0c\u7531\u56fe\u53ef\u77e5\uff0c\u6839\u8282\u70b9\u6240\u6709\u7684\u5b69\u5b50\u7684 $fail$ \u8fb9\u6240\u6307\u5411\u7684\u70b9\u90fd\u662f\u6839\u8282\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u8fd9\u6837\uff1a\n\n\u628a\u6240\u6709\u6839\u8282\u70b9\u7684\u513f\u5b50\u7684 $fail$ \u5148\u9884\u5904\u7406\u51fa\u6765\uff0c\n\n\u7136\u540e\u63a5\u4e0b\u6765\u5f00\u59cb\u5339\u914d\uff0c\n\n\u6211\u4eec\u5148\u904d\u5386\u5230\u8fd9\u4e2a $a$ \u7684\u4e00\u4e2a\u513f\u5b50\u5373 $k$\uff0c\n\n\u660e\u663e\u7684\uff0c\u4ed6\u6ca1\u6709\u4e00\u4e2a\u662f\u80fd\u591f\u5339\u914d\u7684\u4e0a\u7684\uff0c\u4e8e\u662f\u4ed6\u7684 $fail$ \u8fb9\u53ea\u80fd\u6307\u5411\u6839\u8282\u70b9\u3002\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vvlp5gaj.png)\n\n\u7eff\u8272\u7684\u5373\u4e3a\u7b2c\u4e09\u5c42\u7684 $fail$ \u8fb9\uff0c\u7b2c\u4e8c\u5c42\u7684 $fail$ \u8fb9\u5373\u4e3a\u84dd\u8272\u7684\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u904d\u5386 $b$ \u7684\u513f\u5b50\u5373\u4e3a $a$\uff1a\n\n\u90a3\u4e48\u660e\u663e\u7684\u6709\u4e00\u4e2a $a$\uff0c\u6240\u4ee5\u8fd9\u4e2a $fail$ \u8fb9\u4fbf\u53ef\u4ee5\u8fde\u5411 $a$\u3002\n\n\u770b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/egd8jtae.png)\n\n\u90a3\u6211\u4eec\u518d\u6765\u904d\u5386 $c$ \u7684\u513f\u5b50\uff0c\u5373\u4e3a $a$\uff0c\n\n\u90a3\u4e48\u6211\u4eec\u540c\u6837\u7684\u8fd8\u80fd\u627e\u5230\u90a3\u4e2a $a$\u3002\n\n\u518d\u6765\u770b $y$\uff0c\n\n\u6ca1\u6709\u4e0e\u4e4b\u5339\u914d\u7684 $fail$ \u8fb9\uff0c\n\n\u4fbf\u53ea\u80fd\u8fde\u5411\u6839\u8282\u70b9\u3002\n\n\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/n0gmwjen.png)\n\n\u7136\u540e\u63a5\u4e0b\u6765\u4fbf\u53ef\u4ee5\u904d\u5386 $k$ \u7684\u513f\u5b50\u5c31\u662f $i$\uff1a\n\n\u660e\u663e\uff0c$i$ \u4e5f\u6ca1\u6709\u76f8\u540c\u7684\u5b57\u6bcd\uff0c $fail$ \u8fb9\u8fd8\u662f\u6307\u5411\u6839\u8282\u70b9\u3002\n\n\u518d\u6765\u770b $k$ \u7684\u53e6\u4e00\u4e2a\u513f\u5b50 $o$\uff0c\u660e\u663e\u7684\uff0c\u6211\u4eec\u4e5f\u53ea\u80fd\u6307\u5411\u6839\u8282\u70b9\u3002\n\n\u56fe\u5728\u4e0b\u65b9\uff0c\n\n$fail$ \u8fb9\u5373\u4e3a\u7d2b\u8272\u8fb9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/m3crmbgu.png)\n\n\u7136\u540e\u6211\u4eec\u518d\u6765\u770b\u8fd9\u4e2a $a$ \u7684\u513f\u5b50\uff0c\u5c31\u662f $o$\uff0c\n\n\u6211\u4eec\u4ece $o$ \u7684\u7238\u7238\u5373\u4e3a $a$ \u7684 $fail$ \u770b\uff0c\u5176\u5b9e\u53ef\u4ee5\u53d1\u73b0\u662f\u6ca1\u6709\u7684\u3002\n\n\u6240\u4ee5\u8fd8\u662f\u8fde\u5411\u6839\u8282\u70b9\u3002\n\n\u90a3\u4e48\u8fd9\u5230\u5e95\u662f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\n\n\u5076\u7136\uff1f\n\n\u6211\u4eec\u770b\u770b\u4e4b\u524d\u6240\u6709\u8fde\u63a5\u7684\uff1a\n\n\u5982\u679c\u6211\u4eec\u628a $pos$ \u8bbe\u4e3a\u5f53\u524d\u8981\u6c42\u7684 $fail$ \u7684\u70b9\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u4e0a\u9762\u6240\u6709\u7684\u70b9\u7684 $fail$ \u8fb9\u90fd\u53ef\u4ee5\u770b\u6210 $pos$ \u4ed6\u7239\u7684$fail$ \u8fb9\u6709\u65e0\u8fd9\u4e2a\u513f\u5b50 $k$\u3002 \n\n\u82e5\u6709\uff0c$fail$ \u8fb9\u8fde\u5411 $k$\uff1b\n\n\u82e5\u6ca1\u6709\uff0c\u8fde\u5411\u6839\u8282\u70b9\u3002\n\n\u5e76\u4e14\uff0c\u6211\u521a\u521a\u904d\u5386\u662f\u4e0d\u662f\u6309\u5c42\u904d\u5386\uff0c\u5373\u4e3a $bfs$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u961f\u5217\u5b9e\u73b0\uff1a\n\n\u4e00\u4e2a\u4e2a\u513f\u5b50\u904d\u5386\u8fc7\u53bb\uff0c\u78b0\u5230\u7684\u6709\u8fd9\u4e2a\u513f\u5b50\uff08\u771f\u513f\u5b50\uff09\uff0c\u4fbf\u53ef\u67e5\u8be2\u3002\n\n\u4f46\u662f\u5982\u679c\u6ca1\u6709\u5462\uff08\u5047\u513f\u5b50\uff09\uff1f\n\n\u597d\u529e\uff0c**\u628a\u8fde\u63a5\u5047\u513f\u5b50\u7684\u8fb9\u8bbe\u4e3a\u4ed6\u7236\u4eb2\u8fd9\u4e2a\u70b9\u7684 $fail$ \u8fb9\u6240\u6307\u5411\u7684\u4e0e\u5176\u76f8\u540c\u5b57\u6bcd\u7684\u513f\u5b50**\u3002\n\n\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\uff1a\n\n```\ninline void bfs() {\n\tqueue <int> q;\n\t\n\tfor (int i = 0; i < 26; i ++) {\n\t\tint pos = trie[1][i];//\u6839\u8282\u70b9\u7684\u513f\u5b50\uff08\u5305\u62ec\u771f\u5047\uff09 \n\t\t\n\t\tif (pos) {//\u771f\u513f\u5b50 \n\t\t\tfail[pos] = 1;//fail\u6570\u7ec4\u6307\u5411\u6839\u8282\u70b9 \n\t\t\tq.push(pos);//\u5165\u961f \n\t\t}\n\t}//\u628a\u6839\u8282\u70b9\u7684\u513f\u5b50\u8bbe\u4e3a\u6839\u8282\u70b9\uff0c\u65b9\u4fbf\u67e5\u8be2\uff0c\u5e76\u628a\u4ed6\u4eec\u5165\u961f \n\t\n\twhile (! q.empty()) {//\u5f00\u59cb\u5339\u914d \n\t\tint u = q.front();//\u53d6\u51fa\u961f\u5934 \n\t\tq.pop();//\u5f39\u51fa \n\t\t\n\t\tfor (int i = 0; i < 26; i ++) {//\u4e00\u4e2a\u4e2a\u513f\u5b50\u904d\u5386 \n\t\t\tint pos = trie[u][i];//u \u7684\u4e3ai\u5b57\u6bcd\u7684\u513f\u5b50\uff08\u5305\u62ec\u771f\u5047\uff09 \n\t\t\t\n\t\t\tif (pos) {//\u5982\u679cu\u7684\u8fd9\u4e2a\u513f\u5b50\u662f\u771f\u513f\u5b50 \n\t\t\t\tfail[pos] = trie[fail[u]][i];//\u5c31\u628au\u8fd9\u4e2a\u70b9\u7684\u513f\u5b50\u7684fail\u8fb9\u8bbe\u7f6e\u4e3au\u7684fail\u8fb9\u7684\u90a3\u4e2a\u540c\u6837\u7684\u513f\u5b50 \n\t\t\t\t\t\n\t\t\t\tif (! fail[pos])\n\t\t\t\t\tfail[pos] = 1;\n\t\t\t\t\t\t\n\t\t\t\tq.push(pos);//\u5165\u961f \n\t\t\t} else//\u5982\u679c\u662f\u5047\u513f\u5b50 \n\t\t\t\ttrie[u][i] = trie[fail[u]][i];// \u5c31\u628au\u7684\u8fde\u63a5\u5047\u513f\u5b50\u7684\u8fb9\u8bbe\u4e3au\u8fd9\u4e2a\u70b9\u7684fail\u8fb9\u6240\u6307\u5411\u7684\u4e0e\u5176\u76f8\u540c\u5b57\u6bcd\u7684\u513f\u5b50 \n\t\t}\n\t}\n}\n```\n\n\u63a5\u4e0b\u6765\u662f\u67e5\u8be2\uff0c\n\n\u65e2\u7136\u662f\u67e5\u8be2\u54ea\u4e9b\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u4e14\u76f8\u540c\u7684\u4f4d\u7f6e\u4e0d\u540c\u5373\u53ef\u3002\n\n\u6211\u4eec\u5728\u6bcf\u6b21\u67e5\u8be2\u524d\u8df3\u5230 $fail$ \u8fb9\u5373\u53ef\uff0c\n\n\u6240\u4ee5\u67e5\u8be2\u4e5f\u662f\u6781\u5176\u7b80\u5355\u7684\u3002\n\n\u4ee3\u7801\uff1a\n\n```\ninline int find(char *ss) {\n\tint len = strlen(ss + 1), pos = 1, sum = 0; \n\t\n\tfor (int i = 1; i <= len; i ++) {\n\t\tint c = ss[i] - 'a';\n\t\tint u = trie[pos][c];\n\t\t\n\t\twhile (u&& cnt[u] != -1) {//\u6709\u8fd9\u4e2a\u513f\u5b50\u4e14\u6ca1\u88ab\u641c\u8fc7 \n\t\t\tsum += cnt[u];//\u52a0\u4e0a\u7b54\u6848 \n\t\t\tcnt[u] = -1;//\u6807\u8bb0 \n\t\t\tu = fail[u]; //\u8df3\u5230fail\u8fb9 \n\t\t} \n\t\t\n\t\tpos = trie[pos][c];//\u5411\u4e0b\u7ee7\u7eed\u641e \n\t}\n\t\n\treturn sum; \n}\n```\n\n\u4e8e\u662f\u4e4e\uff0c\u5c31\u89e3\u51b3\u5b8c\u6bd5\u4e86\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nconst int N = 1e6 + 7;\n\nusing namespace std;\n\nchar s[N];\n\nint n, tot = 1;\n\nstruct AC {\n\tint trie[N][27];\n\tint cnt[N];\n\tint fail[N];\n\t\n\tinline void insert(char *ss) {\n\t\tint len = strlen(ss + 1), pos = 1;\n\t\t\n\t\tfor (int i = 1; i <= len; i ++) {\n\t\t\tint c = ss[i] - 'a';\n\t\t\t\n\t\t\tif (! trie[pos][c])\n\t\t\t\ttrie[pos][c] = ++ tot;\n\t\t\t\t\n\t\t\tpos = trie[pos][c]; \n\t\t} \n\t\t\n\t\tcnt[pos] ++;\n\t}//\u6784\u5efatrie \u6811 \n\t\n\tinline void bfs() {\n\t\tqueue <int> q;\n\t\t\n\t\tfor (int i = 0; i < 26; i ++) {\n\t\t\tint pos = trie[1][i];//\u6839\u8282\u70b9\u7684\u513f\u5b50\uff08\u5305\u62ec\u771f\u5047\uff09 \n\t\t\t\n\t\t\tif (pos) {//\u771f\u513f\u5b50 \n\t\t\t\tfail[pos] = 1;//fail\u6570\u7ec4\u6307\u5411\u6839\u8282\u70b9 \n\t\t\t\tq.push(pos);//\u5165\u961f \n\t\t\t}\n\t\t}//\u628a\u6839\u8282\u70b9\u7684\u513f\u5b50\u8bbe\u4e3a\u6839\u8282\u70b9\uff0c\u65b9\u4fbf\u67e5\u8be2\uff0c\u5e76\u628a\u4ed6\u4eec\u5165\u961f \n\t\t\n\t\twhile (! q.empty()) {//\u5f00\u59cb\u5339\u914d \n\t\t\tint u = q.front();//\u53d6\u51fa\u961f\u5934 \n\t\t\tq.pop();//\u5f39\u51fa \n\t\t\t\n\t\t\tfor (int i = 0; i < 26; i ++) {//\u4e00\u4e2a\u4e2a\u513f\u5b50\u904d\u5386 \n\t\t\t\tint pos = trie[u][i];//u \u7684\u4e3ai\u5b57\u6bcd\u7684\u513f\u5b50\uff08\u5305\u62ec\u771f\u5047\uff09 \n\t\t\t\t\n\t\t\t\tif (pos) {//\u5982\u679cu\u7684\u8fd9\u4e2a\u513f\u5b50\u662f\u771f\u513f\u5b50 \n\t\t\t\t\tfail[pos] = trie[fail[u]][i];//\u5c31\u628au\u8fd9\u4e2a\u70b9\u7684\u513f\u5b50\u7684fail\u8fb9\u8bbe\u7f6e\u4e3au\u7684fail\u8fb9\u7684\u90a3\u4e2a\u540c\u6837\u7684\u513f\u5b50 \n\t\t\t\t\t\n\t\t\t\t\tif (! fail[pos])\n\t\t\t\t\t\tfail[pos] = 1;\n\t\t\t\t\t\t\n\t\t\t\t\tq.push(pos);//\u5165\u961f \n\t\t\t\t} else//\u5982\u679c\u662f\u5047\u513f\u5b50 \n\t\t\t\t\ttrie[u][i] = trie[fail[u]][i];// \u5c31\u628au\u7684\u8fde\u63a5\u5047\u513f\u5b50\u7684\u8fb9\u8bbe\u4e3au\u8fd9\u4e2a\u70b9\u7684fail\u8fb9\u6240\u6307\u5411\u7684\u4e0e\u5176\u76f8\u540c\u5b57\u6bcd\u7684\u513f\u5b50 \n\t\t\t}\n\t\t}\n\t}\n\t\n\tinline int find(char *ss) {\n\t\tint len = strlen(ss + 1), pos = 1, sum = 0; \n\t\t\n\t\tfor (int i = 1; i <= len; i ++) {\n\t\t\tint c = ss[i] - 'a';\n\t\t\tint u = trie[pos][c];\n\t\t\t\n\t\t\twhile (u&& cnt[u] != -1) {//\u6709\u8fd9\u4e2a\u513f\u5b50\u4e14\u6ca1\u88ab\u641c\u8fc7 \n\t\t\t\tsum += cnt[u];//\u52a0\u4e0a\u7b54\u6848 \n\t\t\t\tcnt[u] = -1;//\u6807\u8bb0 \n\t\t\t\tu = fail[u]; //\u8df3\u5230fail\u8fb9 \n\t\t\t} \n\t\t\t\n\t\t\tpos = trie[pos][c];//\u5411\u4e0b\u7ee7\u7eed\u641e \n\t\t}\n\t\t\n\t\treturn sum; \n\t}\n} ac;\n\nint main() {\n\tfreopen(\".in\", \"r\", stdin);\n\tfreopen(\".out\", \"w\", stdout);\n\t\n\tcin >> n;\n\t\n\tfor (int i = 1; i <= n; i ++) {\n\t\tscanf(\"%s\", s + 1);\n\t\tac.insert(s);\n\t}\n\t\n\tac.bfs();\n\t\n\tscanf(\"%s\", s + 1);\n\t\n\tcout << ac.find(s) << endl;\n\t\n\treturn 0;\n}\n```\n\n\u8bf7\u52ff\u76f4\u63a5\u6284\uff08\u6ce8\u610f freopen\uff09\u3002\n\n$Atlantic$.\n",
        "postTime": 1615012707,
        "uid": 328170,
        "name": "Kalium",
        "ccfLevel": 0,
        "title": "P3808 \u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u9898\u89e3"
    },
    {
        "content": "[\u66f4\u7f8e\u5999\u7684\u9605\u8bfb\u4f53\u9a8c](https://big-news.cn/2020/08/04/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91AC%E8%87%AA%E5%8A%A8%E6%9C%BA%EF%BC%88%E7%AE%80%E5%8D%95%E7%89%88%EF%BC%89/)\n\n### \u540e\u7f00\u6570\u7ec4\n\n\u63d0\u4f9b\u4e00\u4e2a\u6e05\u65b0\u7684\u540e\u7f00\u6570\u7ec4\u89e3\u6cd5\uff08\u597d\u50cf\u8fd8\u6ca1\u770b\u89c1\u9898\u89e3\u91cc\u9762\u6709\uff09\u3002\n\n\u540e\u7f00\u6570\u7ec4\u662f\u4e2a\u597d\u4e1c\u897f\u554a\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u89e3\u51b3\u8bb8\u591a\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u95ee\u9898\uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\uff1a\n\n\u5f62\u5f0f\u5316\u5730\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$\uff0c\u5b83\u7684\u5f62\u5982 $s[i:n]$ \u7684\u5b50\u4e32\u88ab\u79f0\u4f5c $s$ \u7684\u540e\u7f00\u3002\n\n\u5bb9\u6613\u53d1\u73b0 $s$ \u4e00\u5171\u6709 $n$ \u4e2a\u540e\u7f00\uff0c\u4e0d\u59a8\u8bb0 $s[i:n]$ \u4e3a\u540e\u7f00 $i$\uff0c\u5c06\u6240\u6709\u7684\u540e\u7f00\u6392\u5e8f\u540e\uff0c\u987a\u5e8f\u5199\u4e0b\u540e\u7f00\u7684\u7f16\u53f7\uff0c\u5c31\u5f97\u5230\u4e86\u540e\u7f00\u6570\u7ec4 (Suffix Array)\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5bf9 $s=ababa$\uff0c\u5176\u540e\u7f00\u6709 $a,ba,aba,baba,ababa$\uff0c\u6392\u5e8f\u540e\u5f97\u5230 $a,aba,ababa,ba,baba$\uff0c\u4f9d\u6b21\u5199\u4e0b\u5176\u7f16\u53f7\uff0c\u5f97\u5230\u540e\u7f00\u6570\u7ec4\u4e3a $5,3,1,2,4$\u3002\n\n\u6734\u7d20\u6c42\u540e\u7f00\u6570\u7ec4\u662f $O(n^2 \\log n)$ \u7684\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u592a\u597d\u7684\u3002\u901a\u8fc7\u500d\u589e\u6cd5\u53bb\u6c42\uff0c\u5bb9\u6613\u53d1\u73b0\u500d\u589e\u7684\u8fc7\u7a0b\u662f\u67d0\u79cd\u53cc\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u90a3\u4e48\u5bf9\u5176\u8fdb\u884c\u57fa\u6570\u6392\u5e8f\uff0c\u53ef\u505a\u5230 $O(n \\log n)$\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u8d85\u51fa\u4e86\u672c\u7bc7\u9898\u89e3\u7684\u8303\u7574\uff0c\u8bf7\u79fb\u6b65 [\u540e\u7f00\u6392\u5e8f](https://www.luogu.com.cn/problem/P3809)\u3002\n\n### \u56de\u5230\u672c\u9898\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u4e00\u4e2a\u4e32 $s$ \u82e5\u80fd\u4e0e $t$ \u5339\u914d\uff0c\u90a3\u4e48\u5b83\u5fc5\u7136\u662f $t$ \u7684 **\u67d0\u4e2a\u540e\u7f00\u7684\u524d\u7f00**\u3002\n\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u628a\u6240\u6709\u540e\u7f00\u90fd\u6392\u5e8f\uff0c\u8fd9\u6837\u540e\u7f00\u5c31\u662f\u6709\u5e8f\u7684\u4e86\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u6765\u627e $s$ \u662f\u5426\u4e0e $t$ \u5339\u914d\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u56e0\u4e3a\u540e\u7f00\u7684\u957f\u5ea6\u548c\u662f $O(n^2)$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u4e0d\u80fd\u628a\u4ed6\u4eec\u5168\u90e8\u641e\u51fa\u6765\uff08\u4f1aMLE\uff09\u3002\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5199\u4e00\u4e2a `cmp()` \u51fd\u6570\u6765\u6bd4\u8f83\u5b57\u7b26\u4e32\u5927\u5c0f\u5c31\u597d\u4e86\uff0c\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u6e05\u65b0\u6613\u61c2\u3002\n\n\u590d\u6742\u5ea6\u56e0\u4e3a\u6bcf\u6b21\u8981\u4e8c\u5206\uff0c\u6240\u4ee5\u6574\u4f53\u591a\u4e86\u4e00\u4e2a $\\log$\uff0c\u4e0d\u8fc7\u5747\u644a\u4e0b\u6765\u8dd1\u7684\u975e\u5e38\u5feb\uff0c\u5e38\u6570\u6bd4AC\u81ea\u52a8\u673a\u5927\u4e86\u4e0d\u5230\u4e00\u534a\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n/* fake-acam.cpp */\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\n\nconst int CN = 1e6 + 6;\n\nchar t[CN], s[CN];\nstring mem[CN];\n\nint sa[CN], rk[CN << 1], prk[CN << 1], id[CN], px[CN], cnt[CN];\nvoid SA(int n){\n    int m = max(n, 300);\n    for(int i = 1;i <= n;i++) rk[i] = t[i - 1];\n    for(int i = 1;i <= n;i++) cnt[ rk[i] ] ++;\n    for(int i = 1;i <= m;i++) cnt[i] += cnt[i - 1];\n    for(int i = n; i; i--) sa[ cnt[ rk[i] ]-- ] = i;\n    for(int w = 1; w < n; w <<= 1){\n        memset(cnt, 0, sizeof(cnt));\n        for(int i = 1;i <= n;i++) id[i] = sa[i];\n        for(int i = 1;i <= n;i++) cnt[ px[i] = rk[ id[i] + w ] ]++;\n        for(int i = 1;i <= m;i++) cnt[i] += cnt[i - 1];\n        for(int i = n; i; i--) sa[ cnt[ px[i] ]-- ] = id[i];\n        memset(cnt, 0, sizeof(cnt));\n        for(int i = 1;i <= n;i++) id[i] = sa[i];\n        for(int i = 1;i <= n;i++) cnt[ px[i] = rk[ id[i] ] ]++;\n        for(int i = 1;i <= m;i++) cnt[i] += cnt[i - 1];\n        for(int i = n; i; i--) sa[ cnt[ px[i] ]-- ] = id[i];\n        memcpy(prk, rk, sizeof(rk)); m = 0;\n        for(int i = 1;i <= n;i++)\n            if(prk[ sa[i] ] == prk[ sa[i - 1] ] && prk[ sa[i] + w ] == prk[ sa[i - 1] + w ])\n                rk[ sa[i] ] = m;\n            else rk[ sa[i] ] = ++m;\n        if(m == n) break;\n    }\n}\n\nint n, lt;\n\n// \u5224\u65ad a[] < b[]\ninline int le(char *a, char *b, int la,int lb){\n    int p = 0;\n    while(a[p] == b[p] && p < min(la, lb)) p++;\n    if(p == lb) return -1;\n    if(p == la) return true;\n    return a[p] < b[p];\n}\n\nint main()\n{\n    freopen(\"_in.in\", \"r\", stdin);\n    // freopen(\"out.txt\", \"w\", stdout);\n    \n    scanf(\"%d\", &n);\n    for(int i = 1;i <= n;i++) cin >> mem[i];\n    cin >> t; lt = strlen(t);\n\n    SA(lt);\n    \n    int cnt = 0;\n    for(int i = 1;i <= n;i++){\n        int ls = mem[i].size();\n        s[ls] = '\\0';\n        for(int j = 0;j < ls;j++) s[j] = mem[i][j];\n\n        int l = 1, r = lt, m; bool found = false;\n        while(l < r){\n            m = (l + r) >> 1;\n            int leq = le(t + sa[m] - 1, s, lt - sa[m] + 1,ls);\n            if(leq == -1) {found = true; break;}\n            else if(leq) l = m + 1;\n            else r = m;\n        }\n\n        cnt += found ? 1 : 0;\n    }\n\n    printf(\"%d\", cnt);\n}\n```",
        "postTime": 1596524215,
        "uid": 70177,
        "name": "big_news",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "### \u7b97\u662fKMP\u7684\u52a0\u5f3a\u7248\n\u5982\u679c\u6211\u4eec\u6709\u591a\u4e2a\u6a21\u5f0f\u4e32\uff0c\u7136\u800cKMP\u5b9e\u8d28\u4e0a\u5e76\u4e0d\u80fd\u5728\u65f6\u9650\u5185\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u9897\u53ef\u7231\u7684\u7ebf\u6bb5\u6811\u6765\u8bb0\u5f55\u6a21\u677f\u4eec\uff0c\u6700\u540e\u4e00\u6b21\u5339\u914d\uff1a\n\n\n## \u6211\u5c31\u9ed8\u8ba4\u5404\u4f4d\u5df2\u7ecf\u77e5\u6653KMP\u4e0eTrie\u6811\u4e86\u54df\n# - \u601d\u8def\uff1a\n\u5148\u5c06\u6240\u6709\u6a21\u677f\u653e\u5165\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u4f7f\u7528KMP\u6765\u5bfb\u627e\u9002\u914d\u3002\n\n\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff08\uff1f\uff1f\uff1f\uff1f\u6211\u5dee\u70b9\u6ca1\u5b66\u75af\uff09\n\n\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u6709\u8fd9\u6837\u7684\u6a21\u677f\u4e32{he, she, his, hers}\uff0c\u4ece1\u52304\u7f16\u53f7\uff0c\u76ee\u7684\u662f\u6c42\u51fa\u6709\u54ea\u4e9b\u88ab\u56ca\u62ec\u4e8e\u539f\u4e32\u7684\uff08\u65e0\u6240\u8c13\u5b57\u5178\u5e8f\u4e0e\u5426\uff09\uff0c\u6211\u4eec\u7528\u56fe\u6765\u89e3\u91ca\uff1a\n# - \u6784\u9020\uff1a\n#### Trie\u6811\uff1a\n![\u5b57\u4e11\u8bf7\u89c1\u8c05qwq](https://cdn.luogu.com.cn/upload/pic/74300.png )\n\uff084\u53f7\u70b9\u662f\u56e0\u4e3a\u753b\u4e0d\u4e0b\u4e86\u6240\u4ee5\u62d0\u4e86\u4e2a\u5f2f\uff09\u7136\u540e\u6211\u4eec\u5c31\u5efa\u597d\u4e86\u4e00\u9897Trie\u6811\uff0c\u63a5\u4e0b\u6765\nImport KMP\uff1a\n![\u7b2c\u4e00\u6b21](https://s2.ax1x.com/2019/08/23/mDULTO.png)\n\u7136\u540e\uff0c\u4e0b\u5c42\u7684\u5b50\u8282\u70b9\u4f1a\u5c1d\u8bd5\u627e\u5230\u5176\u7236\u4eb2\u8282\u70b9next\u6307\u5411\u7684\u7ed3\u70b9\u7684\u4e0b\u4e00\u5c42\u4e0e\u4e4b\u76f8\u540c\u7684\u7ed3\u70b9\u4f5c\u4e3a\u5176next\u7684\u65b9\u5411\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u6307\u5411\u6839\u8282\u70b9\u3002\u6709\u70b9\u7ed5\uff0c\u6240\u4ee5\u8fd8\u662f\u753b\u56fe\u53ed\uff08\u4ee5\u4e0b\u9762\u90a3\u6761\u4e3a\u4f8b\uff09\uff1a\n![\u7b2c\u4e8c\u6b21](https://s2.ax1x.com/2019/08/23/mDUXkD.png)\n\u4e8e\u662f\u4e4e\uff1a\n![\u7b2c\u4e09\u6b21](https://s2.ax1x.com/2019/08/23/mDUjte.png)\n\u6700\u540e\u5c31\u6210\u4e86\u8fd9\u4e2a\u6837\u5b50\uff1a\n![\u7b2c\u56db\u6b21](https://s2.ax1x.com/2019/08/23/mDUq0K.png)\n\u6709\u70b9\u7ed5\uff0c\u82b1\u4e00\u5c0f\u4f1a\u65f6\u95f4\u4e5fOK\n\n\u7bad\u5934\u6807\u793a\u7740\u7ed9\u7a0b\u5e8f\u8bf4\u201c\u5982\u679c\u4f60\u5728\u6211\u8fd9\u5931\u914d\uff0c\u90a3\u4f60\u5c31\u53bb\u90a3\u91cc\u201d\uff0c\u56e0\u4e3a\u6211\u4eec\u627e\u7684\u662f\u7236\u4eb2\u8282\u70b9next\u7684\u4e0b\u4e00\u5c42\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u4f1a\u8bf4\u5440\u8fd9\u4e2a\u524d\u9762\u7684\u90e8\u5206\u4e0d\u5339\u914d\u7684\u60c5\u51b5\u3002\n\n**\u5176\u5b9e\u8bf4\u5230\u8fd9\u4e00\u6b65AC\u81ea\u52a8\u673a\u4e5f\u5c31\u5dee\u4e0d\u591a\u4e86**\n\u63a5\u4e0b\u6765\u653e\u7801\uff1a\n# - \u4ee3\u7801\u6bb5\uff1a\n###### \u8fd9\u4e2a\u4ee3\u7801\u6bb5\uff0c\u5b83\u6709\u70b9\u4e71\n\n\u6211\u8fd9\u91cc\u4ee5 _P3808 \u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09_ \u4e3a\u4f8b\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nconst int N = 1e6 + 7;\nint n, cnt, trie[N][26], cnt_word[N], fail[N];//\u552f\u4e00\u770b\u4e0d\u61c2\u7684\u5e94\u8be5\u662f\u8fd9\u4e2acnt_word\uff0c\u7528\u6765\u6807\u8bc6\u67d0\u4e2a\u4f4d\u7f6e\u6709\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7ed3\u5c3e\uff0c\u5982\u6709\u591a\u4e2a\uff0c\u5c31++\u3002\u6240\u4ee5\u8bf4\u5982\u679c\u6a21\u5f0f\u4e32\u4e0d\u91cd\u590d\u7684\u8bdd\uff0c\u53ef\u4ee5\u5f00\u6210bool\u6570\u7ec4\nchar mode_sentence[N], sentence[N];\n\nvoid insert_new_word(int len){\n\tregister int now = 0;\n\tfor(register int i = 0;i < len;i ++){\n        register int now_point = mode_sentence[i] - 'a';\n\t\tif(!trie[now][now_point])trie[now][now_point] = ++ cnt;\n\t\tnow = trie[now][now_point];\n\t\tmode_sentence[i] = '\\0';\n    }\n\tcnt_word[now] ++;\n}\nvoid make_fail(){\n\tregister std::queue<int> line;\n\tfor (register int i = 0;i < 26;i ++){\n\t\tif (trie[0][i]){\n\t\t\tfail[trie[0][i]] = 0;\n\t\t\tline.push(trie[0][i]);\n\t\t}\n\t}\n\twhile(!line.empty()){\n\t\tregister int now_point = line.front();\n\t\tline.pop();\n\t\tfor (register int i = 0;i < 26;i ++){\n\t\t\tif (trie[now_point][i]){\n\t\t\t\tfail[trie[now_point][i]] = trie[fail[now_point]][i];\n\t\t\t\tline.push(trie[now_point][i]);\n\t\t\t}\n\t\t\telse trie[now_point][i] = trie[fail[now_point]][i];\n\t\t}\n\t}\n}\ninline int question(){\n\tregister int len = strlen(sentence), now = 0, ans = 0;\n\tfor (register int i = 0;i < len;i ++){\n\t\tnow = trie[now][sentence[i] - 'a'];\n\t\tfor (register int j = now;j && cnt_word[j] != -1;j = fail[j]){\n\t\t\tans += cnt_word[j];\n\t\t\tcnt_word[j] = -1;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main(){\n    scanf(\"%d\\n\", &n);\n    for (register int i = 0;i < n;i ++){\n    \tregister int cnt = -1;\n    \twhile (true){\n    \t\tmode_sentence[++ cnt] = getchar();\n    \t\tif (mode_sentence[cnt] == '\\n')break;\n    \t}\n\t\tinsert_new_word(cnt);\n\t}\n    make_fail();\n    gets(sentence);\n    printf(\"%d\", question());\n    return 0;\n}\n```\n\u5176\u5b9e\u6709\u5f88\u591a\u5de8\u4f6c\u5efa\u8bae\u7528\u7ed3\u6784\u4f53\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97\u8fd9\u6837\u5b50\u53ef\u80fd\u65b9\u4fbf\u7406\u89e3\u3002\n\n\u5199\u65f6\u5306\u5fd9\uff0c\u5982\u6709\u9519\u8bef\uff0c\u8bf7~~\u70b9\u8d5e~~\u5728\u8ba8\u8bba\u533a\u8bf4\u4e00\u4e0b\uff0c\u6211\u5c3d\u5feb\u4fee\u6b63\u3002",
        "postTime": 1566548492,
        "uid": 125531,
        "name": "HansLimon",
        "ccfLevel": 0,
        "title": "AC\u81ea\u52a8\u673a"
    },
    {
        "content": "# \u6d1b\u8c37P3808AC\u81ea\u52a8\u673a\u9898\u89e3\n\n~~\u4f60\u4ee5\u4e3a\u6211\u662f\u4e00\u7bc7AC\u81ea\u52a8\u673a\u7684\u9898\u89e3\uff0c\u5176\u5b9e\u6211\u662f\u6765\u5b89\u5229\u6307\u9488\u54d2\uff01~~\n\n\u9898\u76ee\u94fe\u63a5\uff1a [\u6d1b\u8c37P3808 AC\u81ea\u52a8\u673a](https://www.luogu.org/problemnew/show/P3808)\n\n**AC\u81ea\u52a8\u673a = KMP + Trie**\n\n\u5b9e\u8d28\u4e0a\u5c31\u662f\u628a\u7ebf\u6027\u7684KMP\u8f6c\u5316\u6210\u4e86Trie\u6811\u4e0a\u7684KMP\u3002\n\n\u539f\u6765\u7684\u5931\u914d\u6307\u9488\u6539\u6210\u4e86\u6811\u4e0a\u7684\u5931\u914d\u6307\u9488\u3002\n\nTrie\u6811\u4e0a\u7684\u5931\u914d\u6307\u9488\u8868\u793a\u4e3a\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u5931\u914d\u6307\u9488\u6307\u5411\u7684\u662f\u4ee5\u5f53\u524d\u8282\u70b9\u8868\u793a\u7684\u5b57\u7b26\u4e3a\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u6700\u957f\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u3002\u8fd9\u6837\u53ef\u4ee5\u7528bfs\u6c42\u51fa\u6765\u3002\n\n\u539f\u7406\u5f88\u7b80\u5355\uff0c\u4f8b\u5982\u5728\u4e32ABCDFE\u4e2d\u5339\u914dABCDE\u548cCDFE\uff0c\n\n\u5f53\u6211\u4eec\u5728\u5339\u914d\u5230\u7b2c\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u7b2c5\u4f4d\u548c\u6587\u672c\u4e32\u7684\u7b2c5\u4f4d\u65f6\u53d1\u73b0\u4e86\u4e0d\u5339\u914d\uff0c\u6211\u4eec\u4f1a\u76f4\u63a5\u8df3\u5230\u7b2c\u4e8c\u4e2a\u6a21\u5f0f\u4e32\u7684\u7b2c3\u4f4d\u8fdb\u884c\u5339\u914d\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u3002\u8fd9\u5c31\u662fAC\u81ea\u52a8\u673a\u7684\u4e3b\u8981\u539f\u7406\u3002\n\n\u4e2a\u4eba\u8868\u8fbe\u80fd\u529b\u4e0d\u5f3a\uff0c\u63cf\u8ff0\u7684\u6709\u70b9\u7b80\u964b\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n``` cpp\n#include <bits/stdc++.h>\nconst int maxn = 1000010;\nchar ss[maxn];\nstruct node {\n  node *ch[26];     //\u6307\u9488\u5927\u6cd5\u597d\uff01\n  int exist;\n  node *fail;\n  node(): exist(0), fail(0) { memset(ch, 0, sizeof ch); }\n};\nnode *root = new node;\nvoid insert(char *s) {      //Trie\u6811\u7684\u63d2\u5165\n  node *p = root;\n  for (int i = 0; s[i]; ++i) {\n    int x = s[i] - 'a';\n    if (p -> ch[x] == NULL) p -> ch[x] = new node;\n    p = p -> ch[x];\n  }\n  ++p -> exist;\n}\nvoid get_fail() {        //bfs\u6784\u9020\u5931\u914d\u6307\u9488\n  node *p, *tmp;\n  std::queue<node*> q;\n  q.push(root);\n  while (!q.empty()) {\n    tmp = q.front(); q.pop();\n    for (int i = 0; i < 26; ++i) if (tmp -> ch[i]) {\n      if (tmp == root) {\n        tmp -> ch[i] -> fail = root;\n      } else {\n        p = tmp -> fail;\n        while (p) {\n          if (p -> ch[i]) {\n            tmp -> ch[i] -> fail = p -> ch[i];\n            break; \n          }\n          p = p -> fail;\n        }\n        if (p == NULL) tmp -> ch[i] -> fail = root;\n      }\n      q.push(tmp -> ch[i]);\n    }\n  }\n}\nint AC(char *s) {         //\u5339\u914d\u8fc7\u7a0b\n  int cnt = 0;\n  int l = strlen(s);\n  node *p = root;\n  for (int i = 0; i < l; ++i) {\n    int x = s[i] - 'a';\n    while (!p -> ch[x] && p != root) p = p -> fail;\n    p = p -> ch[x];\n    if (!p) p = root;\n    node *tmp = p;\n    while (tmp != root) {\n      if (tmp -> exist >= 0) cnt += tmp -> exist, tmp -> exist = -1;\n      else break;\n      tmp = tmp -> fail;\n    }\n  }\n  return cnt;\n}\nint main() {\n  int n;\n  scanf(\"%d\", &n);\n  while (n--) {\n    scanf(\"%s\", ss);    //\u8bfb\u5165\u6a21\u5f0f\u4e32\n    insert(ss);         //\u63d2\u5165Trie\u6811\n  }\n  get_fail();           //\u6784\u9020\u5931\u914d\u6307\u9488\n  scanf(\"%s\", ss);      \n  printf(\"%d\", AC(ss)); //AC\u81ea\u52a8\u673a\u5339\u914d\n  return 0;     //\u544a\u8f9e\n}\n```\n\n**Advertisement \uff1a\n[\u6211\u7684\u4e2a\u4eba\u535a\u5ba2](https://phqghume.github.io/2018/06/28/\u6d1b\u8c37P3808-AC\u81ea\u52a8\u673a/)**",
        "postTime": 1530156129,
        "uid": 47055,
        "name": "ikka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "\u4e00\u9053AC~~\uff08Accept\uff09~~\u81ea\u52a8\u673a\u7684\u6a21\u677f~~\n\n\u5148\u6784\u5efafail\u6570\u7ec4\uff0c\u5728tire\u6811\u4e2d\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u5229\u7528fail\u6570\u7ec4\u8fdb\u884c\u8df3\u8f6c\u3002\n\n\u6838\u5fc3\u5728\u4e8e\uff0c\u5df2\u7ecf\u5339\u914d\u8fc7\u7684\u90e8\u5206\u7684\u540e\u7f00\uff0c\u4e5f\u662ffail\u6570\u7ec4\u6307\u5411\u7684\u524d\u7f00\uff0c\u4ece\u800c\u4f7f\u6b64\u90e8\u5206\u4e0d\u5fc5\u8fdb\u884c\u5339\u914d\u3002\n\nAC~~\uff08Accept\uff09~~\u81ea\u52a8\u673a\u4ee5\u7c7b\u4f3c\u4e8eKMP\u7684next\u6570\u7ec4\u601d\u60f3\uff0c\u5145\u5206\u5229\u7528\u5df2\u7ecf\u5339\u914d\u7684\u90e8\u5206\uff0c\u4f7f\u76f8\u540c\u7684\u90e8\u5206\u4e0d\u5fc5\u518d\u6b21\u5339\u914d\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<vector> \n#include<cstring> \nusing namespace std;\nchar s[1000010];\nqueue <int> Q;\nstruct node{\n\tint fail;\t\t//fail\u6570\u7ec4\t\t\t\n\tint bh;\t\t\t//\u5f53\u524d\u70b9\u7684\u4ee3\u8868\u7684\u5b57\u6bcd \n\tint Dad;\t\t//\u5f53\u524d\u70b9\u7684\u7236\u4eb2 \n\tint word[27];\t//\u5f53\u524d\u70b9\u7684\u513f\u5b50 \uff080~25\uff09 \n\tint end;\t\t//\u5f53\u524d\u70b9\u662f\u5426\u662f\u5355\u8bcd\u7ed3\u5c3e \n\tint BJ;\t\t\t//\u5f53\u524d\u70b9\u662f\u5426\u88ab\u8ba1\u5165\u7b54\u6848 \n\tint fail_bj;\t//\u5f53\u524d\u70b9\u662f\u5426\u5df2\u67e5\u627e\u8fc7fail \n};\nnode tree[1000050];\nint N,tot = 0,Ans = 0;\t\nvoid init()\t\t\t\t\t\t\t//\u5efa\u7acbtire\u6811 \n{\n\tint len = strlen(s);\n\tint rt = 0;\n\tfor( int i = 0; i < len; ++i)\n\t{\n\t\tint x = s[i] - 'a';\n\t\tif (!tree[rt].word[x]){\t\t//\u82e5\u5f53\u524d\u70b9\u672a\u52a0\u5165\uff0c\u5219\u52a0\u5165tire\u6811 \n\t\t\ttree[rt].word[x] = ++tot;\n\t\t\ttree[tot].bh=x;\t\t\t//\u6807\u8bb0\u5f53\u524d\u70b9\u7684\u5b57\u6bcd  \uff01\uff01\uff01\uff01 \n\t\t\ttree[tot].Dad=rt; \t\t//\u6807\u8bb0\u5f53\u524d\u70b9\u7684Dad \n\t\t}\t    \n\t\trt=tree[rt].word[x];\t\t//rt\u5411\u4e0b \n\t}\n\ttree[rt].end++;\t\t\t\t \t//\u662f\u5355\u8bcd\u7ed3\u5c3e\uff0c\u7d2f\u52a0 \n}\nvoid make_fail()\t\t\t\t\t//\u8ba1\u7b97fail\u6807\u8bb0 \n{\n\ttree[0].fail = -1;\n\tfor(int i = 0; i < 26; ++i)\t\t\t\n\t\tif( tree[0].word[i] )\n\t\t\tQ.push( tree[0].word[i] );\t//\u6839\u8282\u70b9\u7684\u5b69\u5b50\u5165\u961f \n\twhile( !Q.empty() )\n\t{\n\t\tint now = Q.front(); Q.pop();\t\t//\u53d6\u961f\u5934 (\u5f53\u524d\u70b9)\n\t\tint x = tree[now].bh;\t\t\t\t//\u5f53\u524d\u70b9\u4ee3\u8868\u7684\u5b57\u6bcd  \uff01\uff01\uff01 \n\t\tint dad = tree[now].Dad;\t\t\t//\u5f53\u524d\u70b9\u7684\u7236\u4eb2 \n\t\tint dad_fail = tree[dad].fail; \t\t//\u5f53\u524d\u70b9\u7236\u4eb2\u7684fail \n\t\twhile(dad_fail != -1 && tree[dad_fail].word[x] == 0)//\u82e5\u5f53\u524d\u70b9\u4e0d\u662f\u539f\u70b9\uff0c\u4e14\u5f53\u524d\u70b9\u7236\u4eb2\u7684fail\u7684\u513f\u5b50\u6ca1\u6709\u5f53\u524d\u70b9\uff0c\u5219\u7ee7\u7eed\u5411\u4e0a \n\t \t\t   dad_fail = tree[dad_fail].fail;\n\t \tif(dad_fail == -1)\t\t\t\t\t\t\t\t\t//\u82e5\u4e3a\u539f\u70b9\uff0c\u5219\u5f53\u524d\u70b9fail\u4e3a0 \n\t \t\ttree[now].fail = 0;\n\t \telse\n\t\t \ttree[now].fail = tree[dad_fail].word[x];\t\t//\u82e5\u627e\u5230\u67d0\u4e2afail\u6709\u5f53\u524d\u70b9\uff0c\u5219\u8d4b\u503c \n\t\tfor(int i = 0; i < 26; ++i)\t\t\t\n\t\t\tif(tree[now].word[i])\n\t\t\t\tQ.push(tree[now].word[i]);\t\t\t\t\t//\u6b64\u8282\u70b9\u7684\u5b69\u5b50\u5165\u961f \t\n\t}\n}\nvoid find()\t\t\t\t\t\t\t\t\t\t\t//\u67e5\u627e\u6587\u7ae0 \n{\n\tint len = strlen(s);\n\tint rt = 0;\n\ttree[rt].fail = -1;\n\tfor(int i = 0; i < len; ++i)\n\t{\n\t\tint x = s[i] - 'a';\n\t\twhile( tree[rt].fail != -1 && tree[rt].word[x] == 0)\t//\u82e5\u5f53\u524d\u70b9\u4e0d\u662f\u539f\u70b9\uff0c\u4e14\u5f53\u524d\u70b9\u7684\u513f\u5b50\u4e2d\u6ca1\u6709x\uff0c\u5339\u914d\u5931\u8d25\uff0c\u627efail \n\t\t\trt=tree[rt].fail;\n\t\tif(tree[rt].word[x] != 0)\t\t\t\t//\u82e5\u5f53\u524d\u70b9\u5339\u914d\u6210\u529f\uff0c\u5219\u7ee7\u7eed\u5f80\u4e0b\u627e \n\t\t\trt = tree[rt].word[x];\t\t\t\n\t\telse\t\t\t\t\t\t\t\t\t//\u82e5\u5f53\u524d\u70b9\u672a\u5339\u914d\u6210\u529f\uff0c\u5219fail\u5230\u8fbe\u539f\u70b9\uff0crt\u7b49\u4e8e0 \n\t\t\trt = 0;\t\t\t\t\t\t\t\t\n\t\tif(tree[rt].end && !tree[rt].BJ)\t\t//\u82e5\u662f\u5355\u8bcd\u7ed3\u5c3e\u4e14\u662f\u7b2c\u4e00\u6b21\u8bbf\u95ee\uff0cAns++\uff0c\u5e76\u4e14BJ=1\uff0c\u4ee5\u540e\u4e0d\u518d\u8bbf\u95ee \n\t\t   Ans += tree[rt].end, tree[rt].BJ = 1; \n\t\tint v = rt;\n\t\twhile( tree[v].fail != -1 && !tree[v].fail_bj) //\u65e0\u8bba\u662f\u5426\u627e\u5230\uff0c\u662f\u5426\u662f\u7ed3\u5c3e\uff0c\u90fd\u8981\u627e\u5f53\u524d\u70b9\u7684fail\uff0c\u5e76\u4e0d\u65ad\u627efail\uff0c\u5224\u65ad\u662f\u5426\u662f\u7ed3\u5c3e\uff0c\u4ee5\u4fdd\u8bc1\u67e5\u627e\u7684\u5168\u9762\u6027 \n\t\t{\n\t\t\tint k=tree[v].fail;\t\t\t\t\t\n\t\t\tif(tree[k].end && !tree[k].BJ)\t\t\t\t//\u82e5\u662f\u5355\u8bcd\u7ed3\u5c3e\u4e14\u662f\u7b2c\u4e00\u6b21\u8bbf\u95ee\uff0cAns++\uff0c\u5e76\u4e14BJ=1\uff0c\u4ee5\u540e\u4e0d\u518d\u8bbf\u95ee \n\t\t\t\tAns += tree[k].end, tree[k].BJ = 1; \n\t\t\tv = tree[v].fail;\n\t\t} \n\t\ttree[rt].fail_bj = 1;\t\t\t//\u4f18\u5316\uff1a\u82e5\u5f53\u524d\u70b9\u5df2\u7ecf\u7ecf\u8fc7\u67e5\u627efail\uff0c\u5219\u4e0d\u5fc5\u67e5\u627e \n\t}\n} \nint main()\n{\n\tcin >> N;\n\tfor(int i = 1; i <= N; ++i )\t\t//\u8f93\u5165\u6a21\u5f0f\u4e32\uff0c\u6784\u5efatire\u6811 \n\t{\n\t\tscanf(\"%s\",s);\n\t\tinit();\n\t}\n\tmake_fail();\t\t\t\t\t//\u6784\u5efafail\u6570\u7ec4 \n\tscanf(\"%s\",s);\n\tfind(); \t\t\t\t\t\t//\u67e5\u627e\t\n\tcout << Ans; \n\treturn 0;\n}\n//\u4e0b\u73ed\u4e86\uff0c\u4e0b\u73ed\u4e86~~~~ \n```",
        "postTime": 1529743959,
        "uid": 44650,
        "name": "SpXace",
        "ccfLevel": 4,
        "title": "3808 AC\u81ea\u52a8\u673a\u6a21\u677f"
    },
    {
        "content": "## AC\u81ea\u52a8\u673a\n\n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5728$trie$\u6811\u4e0a\u8dd1\u4e00\u4e2a$KMP$\u3002\n\n### \u90a3\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\n\n\u7531\u9898\u610f\u5f97\uff0c\u6211\u4eec\u662f\u8981\u5728\u4e00\u4e2a\u5927\u4e32\u91cc\u5bfb\u627e\u4e00\u4e9b\u5c0f\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u5e94\u8be5\u5c06\u6240\u6709\u5c0f\u4e32\u5efa\u4e00\u4e2a$trie$\u6811\uff0c\u7136\u540e\u5c06\u5927\u4e32\u653e\u8fdb\u53bb\u8dd1\uff0c\u770b\u4e0b\u80fd\u5230\u54ea\u4e9b\u5730\u65b9\uff0c\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u5728\u5230\u8fbe\u4e00\u4e2a\u5b57\u7b26\u65f6\uff0c\u5f04\u597d\u5b83\u7684\u6240\u6709\u7684\u524d\u7f00\u548c\u540e\u7f00\uff0c\u540e\u7f00\uff0c\u5f53\u7136\u5c31\u662f\u7528$fail$\u6765\u5904\u7406\u4e86\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u6bcf\u5230\u4e00\u4e2a\u5b57\u7b26\uff0c\u786e\u8ba4\u5b83\u5728$trie$\u6811\u4e2d\u7684\u4f4d\u7f6e\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5e94\u8df3\u4e00\u6b21$fail$\uff0c\u5f04\u597d\u5b83\u7684\u540e\u7f00\uff0c\u8fd9\u590d\u6742\u5ea6\u53ef\u80fd\u5f88\u9ad8\uff0c\u6bd4\u5982\u5168\u4e3a\u540c\u4e00\u5b57\u7b26\u65f6\uff0c\u4f60\u6bcf\u6b21\u5c31\u9700\u8df3\u957f\u5ea6\u90a3\u4e48\u591a\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u4f18\u5316\uff0c\u8df3\u8fc7\u4e00\u6b21\u4e4b\u540e\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u8bf4\u660e\u5df2\u7ecf\u8df3\u8fc7\u8be5\u4f4d\u7f6e\u548c\u5b83\u7684\u6240\u6709\u540e\u7f00\uff0c\u518d\u65b0\u4e00\u6b21\u8df3\u5230\u8fd9\u91cc\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5$break$\u6389\u4e86\u3002\n\n#### \u4ee3\u7801\n\n```\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint n,isend[1000001],go[1000001][26],fail[1000001],cnt,len,t,ans,q[1000001];\nchar c[1000001];\n\nvoid push(){//\u52a0\u5165 \n\tint t=0;\n\tfor(int i=0;i<len;i++){\n\t\tint tt=c[i]-'a';\n\t\tif(!go[t][tt])go[t][tt]=++cnt;\n\t\tt=go[t][tt];\n\t}\n\tisend[t]++;\n}\n\nvoid gget(){//\u627efail \n\tint head=0,tail=0;\n\tfor(int i=0;i<26;i++)if(go[0][i])q[tail++]=go[0][i];\n\twhile(head<tail){\n\t\tint a=q[head++];\n\t\tfor(int i=0;i<26;i++){\n\t\t\tif(go[a][i]){\n\t\t\t\tint t=fail[a];\n\t\t\t\twhile(t&&!go[t][i])t=fail[t];\n\t\t\t\tfail[go[a][i]]=go[t][i];\n\t\t\t\tq[tail++]=go[a][i];\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid tiao(int x){//\u5f80\u4e0a\u8df3fail\u627e\u540e\u7f00 \n\twhile(x){\n\t\tif(isend[x]==-1)break;//\u5df2\u7ecf\u8df3\u8fc7\u4e86 \n\t\tans+=isend[x];\n\t\tisend[x]=-1;\n\t\tx=fail[x];\n\t}\n}\n\nvoid AC(){//\n\tint t=0;\n\tfor(int i=0;i<len;i++){\n\t\tint tt=c[i]-'a';\n\t\twhile(t&&!go[t][tt])t=fail[t];\n\t\tif(go[t][tt])t=go[t][tt];\n\t\ttiao(t);//\u6bcf\u53d6\u4e00\u4e2a\u5b57\u7b26\u8df3\u4e00\u6b21 \n\t}\n\tcout<<ans<<endl;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%s\",c);\n\t\tlen=strlen(c);\n\t\tpush();\n\t}\n\tgget();\n\tscanf(\"%s\",c);\n\tlen=strlen(c);\n\tAC();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1612664169,
        "uid": 166410,
        "name": "\u6f20\u5bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "### AC\u81ea\u52a8\u673a\n\n\u3010\u5148\u51b3\u6761\u4ef6\u3011 $KMP/Trie$ \u6811\n\nAC\u81ea\u52a8\u673a\uff08\u4f18\u5316\u4e86\u53ef\u4ee5\u53eb $Trie$ \u56fe\uff09\uff0c\u662f\u4e00\u79cd\u6709\u9650\u72b6\u6001\u673a\n\n\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c06 $KMP$ \u653e\u5728\u4e86 $Trie$ \u6811\u4e0a\n\n### \u5931\u914d\u6307\u9488 $Fail$\n\n![](https://cdn.luogu.com.cn/upload/pic/59584.png)\n\n\u5efa\u5b8c $Trie$ \u6811\u4ee5\u540e\u5b9a\u4e49\u5931\u914d\u6307\u9488\n\n\u5b9a\u4e49 $v=s[i]-'a'\\quad now$ \u4e3a\u5f53\u524d\u8282\u70b9\n\n$fail[trie[now][v]]=trie[fail[now]][v]$\n\n\u5373\u8be5\u8282\u70b9\u7236\u4eb2 $fail$ \u6307\u5411\u7684\u8282\u70b9\u7684\u4e0e\u8be5\u8282\u70b9\u5b57\u7b26\u76f8\u540c\u7684\u513f\u5b50\n\n### \u67e5\u8be2\n\n\u540c\u7406\uff0c$now$ \u4e3a\u5f53\u524d\u6240\u5728\u8282\u70b9\uff0c$v=s[i]-'a'$\n\n\u6bcf\u6b21\u5c06 $now=trie[now][v]$\n\n\u7136\u540e\u66b4\u529b\u67e5\u627e $fail$ \u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u662f\u5426\u4e3a\u67d0\u4e2a\u6a21\u5f0f\u4e32\u7684\u7ed3\u5c3e\n\n```cpp\nfor (int t=now;t&&~tag[t];t=fail[t])\n\tans+=tag[t],tag[t]=-1;\n```\n\n### \u5b8c\u6574\u4ee3\u7801\n\n[P3808 \u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09](https://www.luogu.org/problemnew/show/P3808)\n```cpp\n#include <bits/stdc++.h>\n#define N 500010\nusing namespace std;\nint n;\nchar s[1000010];\n\nstruct node_{\n    int tag[N],trie[N][26],cnt,fail[N];\n    queue<int> q;\n    void insert(char *s)\n    {\n        int len=strlen(s),now=0,v;\n        for (int i=0;i<len;i++)\n        {\n            v=s[i]-'a';\n            if (!trie[now][v]) trie[now][v]=++cnt;\n            now=trie[now][v];\n        }\n        tag[now]++;\n    }\n    void build()\n    {\n        int now;\n        for (int i=0;i<26;i++)\n            if (trie[0][i]) fail[trie[0][i]]=0,q.push(trie[0][i]);\n            while (!q.empty())\n            {\n                now=q.front(),q.pop();\n                for (int i=0;i<26;i++)\n                    if (trie[now][i]) fail[trie[now][i]]=trie[fail[now]][i],q.push(trie[now][i]);\n                    else trie[now][i]=trie[fail[now]][i];\n            }\n    }\n    int query(char *s)\n    {\n        int len=strlen(s),now=0,v,ans=0;\n        for (int i=0;i<len;i++)\n        {\n            v=s[i]-'a';\n            now=trie[now][v];\n            for (int t=now;t&&~tag[t];t=fail[t]) ans+=tag[t],tag[t]=-1;\n        }\n        return ans;\n    }\n}AC;\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n        scanf(\"%s\",s),AC.insert(s);\n    AC.build();\n    scanf(\"%s\",s);\n    printf(\"%d\\n\",AC.query(s));\n    return 0;\n}\n```\n\n[P3796 \u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u52a0\u5f3a\u7248\uff09](https://www.luogu.org/problemnew/show/P3796)\n\n```cpp\n#include <bits/stdc++.h>\n#define N 500010\nusing namespace std;\nint n,sum[N],_max;\nchar s[200][100],s1[N<<1];\nstruct node{\n    int trie[N][26],tag[N],id[N],fail[N],cnt;\n    queue<int> q;\n    void clean()\n    {\n        cnt=0;\n        memset(trie,0,sizeof(trie));\n        memset(fail,0,sizeof(fail));\n        memset(tag,0,sizeof(tag));\n        memset(id,0,sizeof(id));\n    }\n    void insert(char *s,int x)\n    {\n        int now=0,v,len=strlen(s);\n        for (int i=0;i<len;i++)\n        {\n            v=s[i]-'a';\n            if (!trie[now][v]) trie[now][v]=++cnt;\n            now=trie[now][v];\n        }\n        tag[now]=1;id[now]=x;\n    }\n    void build()\n    {\n        int now;\n        for (int i=0;i<26;i++)\n            if (trie[0][i]) fail[trie[0][i]]=0,q.push(trie[0][i]);\n        while (!q.empty())\n        {\n            now=q.front();q.pop();\n            for (int i=0;i<26;i++)\n                if (trie[now][i]) fail[trie[now][i]]=trie[fail[now]][i],q.push(trie[now][i]);\n                else trie[now][i]=trie[fail[now]][i];\n        }\n    }\n    void query(char *s)\n    {\n        int now=0,v,len=strlen(s);\n        for (int i=0;i<len;i++)\n        {\n            v=s[i]-'a';\n            now=trie[now][v];\n            for (int t=now;t;t=fail[t])\n                if (tag[t]) sum[id[t]]++;\n        }\n    }\n}AC;\nint main()\n{\n    scanf(\"%d\",&n);\n    while (n)\n    {\n        AC.clean();\n        for (int i=1;i<=n;i++)\n            scanf(\"%s\",s[i]),AC.insert(s[i],i);\n        AC.build();\n        memset(sum,0,sizeof(sum));\n        scanf(\"%s\",s1);\n        AC.query(s1);\n        _max=0;\n        for (int i=1;i<=n;i++)\n            _max=max(_max,sum[i]);\n        printf(\"%d\\n\",_max);\n        for (int i=1;i<=n;i++)\n            if (sum[i]==_max)\n                printf(\"%s\\n\",s[i]);\n        scanf(\"%d\",&n);\n    }\n    return 0;\n}\n```",
        "postTime": 1558957034,
        "uid": 67718,
        "name": "G\u6211\u5c31\u662f\u83dcG",
        "ccfLevel": 6,
        "title": "\u3010\u5b66\u4e60\u7b14\u8bb0\u3011AC\u81ea\u52a8\u673a"
    },
    {
        "content": "\u8981\u5b66AC\u81ea\u52a8\u673a\u9700\u8981\u81ea\u5907\u4e24\u4e2a\u524d\u7f6e\u6280\u80fd:KMP\u548ctrie\u6811\u770b\uff0c\u4e0d\u61c2\u7684\u5148\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u535a\u5ba2\uff0c\u8ba9\u540e\u518d\u56de\u6765\u5b66\u4e60\u3002\n\nKMP: [\u4f20\u9001\u95e8](https://www.cnblogs.com/yjiyjige/p/3263858.html)   \u5b57\u5178\u6811\uff08Trie\uff09\uff1a[\u4f20\u9001\u95e8](https://www.cnblogs.com/henry-1202/p/9029822.html)\n\n\u5982\u679c\u4f60\u5b66\u4f1a\u4e86KMP\u548cTrie\u90a3\u5c31\u53ef\u4ee5\u6765\u5b66AC\u81ea\u52a8\u673a\u4e86\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0cKMP\u6bcf\u6b21\u53ea\u80fd\u591f\u5339\u914d\u4e00\u6761\u5b57\u7b26\u4e32\uff0c\u4f46\u5982\u679c\u6709\u591a\u6761\u5b57\u7b26\u4e32\u8981\u600e\u4e48\u529e\u5462\uff1f\u8f93\u5165\u4e00\u6761\u5b57\u7b26\u4e32\u6c42\u4e00\u6b21next\u6570\u7ec4\u5417\uff1f\u8fd9\u6837\u4f1a\u5f88\u9ebb\u70e6\u4e14\u5f88\u6d6a\u8d39\u3002\n\n\u8fd9\u4e2a\u65f6\u5019,AC\u81ea\u52a8\u673a\u51fa\u73b0\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u5427\u6240\u6709\u7684\u5b50\u4e32\u90fd\u5148\u653e\u5728\u5b57\u5178\u6811\u4e0a\uff0c\u7136\u540e\u5efa\u7acbfail\u6570\u7ec4\uff0c\u4e5f\u5c31\u662fKMP\u91cc\u7684next\u6570\u7ec4\u3002\n\n\u5177\u4f53\u7684\u56fe\u53ef\u4ee5\u770b\u4e00\u4e0b\u8fd9[\u70b9\u8fd9\u91cc](https://blog.csdn.net/bestsort/article/details/82947639)\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0fail\u8ddfnext\u5dee\u4e0d\u591a\uff0c\u7136\u540e\u53ea\u8981\u5339\u914d\u5931\u8d25\u6211\u4eec\u5c31\u8df3fail\u3002\n\n\u4f46\u5b66AC\u81ea\u52a8\u673a\u8fd8\u662f\u8981\u5148\u6709KMP\u548c\u5b57\u5178\u6811\u7684\u57fa\u7840\uff0c\u4e0d\u4f1a\u7684\u5148\u5b66\u5b8c\u518d\u6765\u770b\u3002\n\n\u7b2c\u4e00\u6b65\u662f\u8981\u5efa\u4e00\u4e2a\u5b57\u5178\u6811\uff1a\n```cpp\nvoid jt(string s) {\n    int len = s.length();\n    int root = 0;\n    for(int i = 0; i < len; i++) {\n        int next = s[i] - 'a';\n        if(!trie[root][next])\n            trie[root][next] = ++cnt; //\u5982\u679c\u5339\u914d\u4e0d\u5230\uff0c\u90a3\u5c31\u65b0\u5efa\u4e00\u4e2a\u70b9\n        root = trie[root][next];\n    }\n    number[root]++;//\u5355\u8bcd\u7ed3\u5c3e\u5904\uff0c\u52a0\u4e00\u4e2a\u6807\u8bb0\u3002\n}\n```\n\u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53\uff0c\u4f46\u8fd9\u91cc\u6211\u4eec\u75282\u7ef4\u6570\u7ec4\uff0c\u8fd9\u6837\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u4e00\u4e9b\u3002\n\n\u7136\u540e\u5728\u7ed3\u5c3e\u5904\u8981\u5148\u6807\u8bb0\u4e3a1\uff0c\u8fd9\u4e2a\u5728\u4e0b\u9762\u5339\u914d\u65f6\u5019\u6709\u5f88\u5927\u7528\u5904\u3002\n\n\u4e0b\u4e00\u6b65\u662f\u8981\u5efafail\u6570\u7ec4\uff1a\n```cpp\nvoid Fail() {\n    queue <int> q;\n    for(int i = 0; i < 26; i++) {\n        if(trie[0][i]) {\n            q.push(trie[0][i]);\n            fail[trie[0][i]] = 0;\n        }\n    }\n    while(!q.empty()) {\n        int now = q.front();\n        q.pop();\n        for(int i = 0; i < 26; i++) {\n            if(trie[now][i]) {\n                fail[trie[now][i]] = trie[fail[now]][i];\n                q.push(trie[now][i]);\n            } else\n                trie[now][i] = trie[fail[now]][i];\n        }\n    }\n}\n```\n\u6211\u4eec\u7684fail\u6570\u7ec4\u4f7f\u7528bfs\u6765\u5b9e\u73b0\u7684\uff0c\u5148\u628a\u7b2c\u4e8c\u5c42\u7684\u6570\u7ed9\u6254\u8fdb\u961f\u5217\uff0c\u8ba9\u540ebfs\u5f80\u4e0b\u5339\u914d\uff0c\u627e\u5230\u5b57\u6bcd\u5c31\u653e\u8fdb\u53bb\uff0c\u76f4\u5230\u6ca1\u6709\u4e3a\u6b62\u3002\n```cpp\nfail[trie[now][i]] = trie[fail[now]][i];\n```\n\u8fd9\u4e2a\u5730\u65b9\u770b\u8d77\u6765\u53ef\u80fd\u4f1a\u6709\u70b9\u61f5\uff0c\u5176\u5b9e\u8fd9\u4e2a\u5c31\u8ddfnext\u6570\u7ec4\u4e00\u6837\uff0c\u5982\u679c\u4e0a\u9762\u7684\u76f8\u540c\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\uff0c\u4e0d\u7528\u91cd\u65b0\u53bb\u627e\u4e00\u6b21\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5339\u914d\u4e86\uff1a\n```cpp\nvoid AC(string o) {\n    int now = 0;\n    for(int i = 0; i < o.length(); i++) {\n        now = trie[now][o[i]-'a'];\n        for(int j = now; j && number[j] != -1; j = fail[j]) {\n            ans += number[j];\n            number[j] = -1;\n        }\n    }\n}\n```\n\u5339\u914d\u7684\u8bdd\u6211\u4eec\u662f\u53ea\u8981\u80fd\u5f80\u4e0b\u5c31\u627e\u5f80\u4e0b\u627e\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5728\u4e0a\u9762\u6807\u8bb0\u76841\u5c31\u8d77\u5230\u4e86\u4f5c\u7528\u3002\n\n\u6211\u4eec\u628a\u8bbf\u95ee\u8fc7\u7684\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u7ed9\u52a0\u4e0a\uff0c\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u5355\u8bcd\u672b\u5c3e\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e0a\u3002\n\n\u8fd9\u6837\u4e5f\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u628a\u627e\u8fc7\u7684\u90fd\u6807\u8bb0\u4e3a-1\uff0c\u5c31\u4e0d\u4f1a\u627e\u591a\u6b21\u3002\n\n\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nint trie[10000005][26],fail[10000005],number[10000005],ans,cnt = 0;\nvoid jt(string s) {\n    int len = s.length();\n    int root = 0;\n    for(int i = 0; i < len; i++) {\n        int next = s[i] - 'a';\n        if(!trie[root][next])\n            trie[root][next] = ++cnt;\n        root = trie[root][next];\n    }\n    number[root]++;\n}\nvoid Fail() {\n    queue <int> q;\n    for(int i = 0; i < 26; i++) {\n        if(trie[0][i]) {\n            q.push(trie[0][i]);\n            fail[trie[0][i]] = 0;\n        }\n    }\n    while(!q.empty()) {\n        int now = q.front();\n        q.pop();\n        for(int i = 0; i < 26; i++) {\n            if(trie[now][i]) {\n                fail[trie[now][i]] = trie[fail[now]][i];\n                q.push(trie[now][i]);\n            } else\n                trie[now][i] = trie[fail[now]][i];\n        }\n    }\n}\nvoid AC(string o) {\n    int now = 0;\n    for(int i = 0; i < o.length(); i++) {\n        now = trie[now][o[i]-'a'];\n        for(int j = now; j && number[j] != -1; j = fail[j]) {\n            ans += number[j];\n            number[j] = -1;\n        }\n    }\n}\nint main() {\n    int n;\n    cin >> n;\n    string s;\n    for(int i = 1; i <= n; i++) {\n        cin >> s;\n        jt(s);\n    }\n    Fail();\n    string u;\n    cin >> u;\n    AC(u);\n    cout << ans;\n}\n```\n\u8fd9\u7bc7\u9898\u89e3\u501f\u9274\u4e86\u8fd9\u7bc7\u535a\u5ba2\u7684\u601d\u8def\uff0c\u91cc\u9762\u6709\u8be6\u7ec6\u56fe\u89e3\uff0c\u5927\u5bb6\u53ef\u4ee5\u53bb\u770b\u4e00\u4e0b[\u4f20\u9001\u95e8](https://blog.csdn.net/bestsort/article/details/82947639)\u3002\n\n\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\u3002",
        "postTime": 1556676772,
        "uid": 130822,
        "name": "orzws",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "## ac\u81ea\u52a8\u673a\u6a21\u677f\u9898\uff08\u6539\uff09\n\n#### \u524d\u8a00\uff1a\n\u5982\u679c\u4e0d\u4f1aac\u81ea\u52a8\u673a\u7684\u8bdd\u81ea\u884c\u767e\u5ea6qvq\u3002\n\n \u8fd9\u5dee\u4e0d\u591a\u5c31\u662f\u4e00\u9053ac\u673a\u7684\u6a21\u677f\u9898\u76ee\uff0c\u5c31\u6539\u4e86\u4e00\u70b9\u70b9\u5c0f\u5730\u65b9\uff0c\u4e5f\u5c31\u662f\u8981\u591a\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u6b21\u6570\uff0c\u6211\u76f4\u63a5\u7528\u8bfb\u5165\u987a\u5e8f\u4f5c\u4e3a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u7f16\u53f7\uff0c\u800c\u6b21\u6570\u5b58\u50a8\u4e5f\u662f\u7528\u7684\u8bfb\u5165\u987a\u5e8f\u4e3a\u7f16\u53f7\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u4e32\uff0c\u5219\u5229\u7528trie\u6811\u4e2d\u5b58\u7684\u7f16\u53f7\u8bbf\u95eeans\u6570\u7ec4\uff0c\u7136\u540e\u5176\u6b21\u6570++\u3002\n \n\u4e4b\u6240\u4ee5\u8bfb\u5165\u8981\u4ece1\u5f00\u59cb\uff0c\u4e5f\u662f\u4e3a\u4e86\u65b9\u4fbf\u5224\u65adtrie\u6811\u4e2d\u8be5\u8282\u70b9\u662f\u4e0d\u662f\u67d0\u4e2a\u4e32\u7684\u7ed3\u5c3e\u3002\n \n\u5176\u5b9e\u4e00\u5f00\u59cb\u6211\u8fd8\u8003\u8651\u4e86\u6a21\u677f\u4f1a\u4e0d\u4f1a\u6709\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u8fd8\u8981\u5224\u65ad\u4e00\u4e0b\u6a21\u677f\u6570\u91cf\u7136\u540e\u8f93\u51fa\uff0c\u4f46\u662f\u56e0\u4e3a\u6211\u6bd4\u8f83\u806a\u660e~~\u61d2~~\uff0c\u5148\u505a\u4e86\u4e00\u904d\u6ca1\u6709\u5224\u65ad\u7684\u8bd5\u4e86\u4e00\u4e0b\uff0c\u7ed3\u679ca\u4e86\u3002\u3002\u3002\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5427\u8fd9\u79cd\u60c5\u51b5\u4f18\u5316\u4e00\u4e0b\uff0c\u6211\u540e\u9762\u60f3\u4e86\u4e00\u4e0b\uff0c\u7528\u4e86\u4e2a\u6620\u5c04\uff08\u56e0\u4e3a\u6211\u8fd8\u4fdd\u8bc1\u4e86\u8f93\u5165\u987a\u5e8f\u8f93\u51faqvq\uff0c\u8981\u4e0d\u7136\u53ef\u4ee5\u66f4\u7b80\u5355\uff09\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nconst int maxn = 300000+5;\nconst int SIGMA_SIZE = 26;\nint maxx = 0;\nchar p[200][105];\nint ans[200];\nchar T[1000000+5];\nqueue <int> qe;\nstruct AC_automata\n{\n    int ch[maxn][26], val[maxn], f[maxn], cnt = 0;\n    void clear()\n    {\n        cnt = maxx = 0;\n        for(int i = 0; i < maxn; ++i)\n        {\n            val[i] = f[i] = 0;\n            for(int j = 0; j < 26; ++j)ch[i][j] = 0;\n        }\n        memset(ans, 0, sizeof ans);\n    }\n    void insert(char *s, int num)\n    {\n        int now = 0;\n        for(int i = 0; i < strlen(s); i++)\n        {\n            if(!ch[now][s[i]-'a'])ch[now][s[i]-'a'] = ++cnt;\n            now = ch[now][s[i]-'a'];\n        }\n        val[now] = num;\n    }\n    void getFail()\n    {\n        for(int i = 0; i < SIGMA_SIZE; i++)if(ch[0][i])qe.push(ch[0][i]);\n        while(!qe.empty())\n        {\n            int u = qe.front();qe.pop();\n            for(int i = 0; i < SIGMA_SIZE; i++)\n            {\n                if(ch[u][i]){f[ch[u][i]] = ch[f[u]][i];qe.push(ch[u][i]);}\n                else ch[u][i] = ch[f[u]][i];\n            }\n        }\n    }\n    void find()\n    {\n        int len = strlen(T), now = 0;\n        for(int i = 0; i < len; i++)\n        {\n            now = ch[now][T[i]-'a'];\n            for(int t = now; t; t = f[t]){\n                if(val[t]){\n                    ans[val[t]]++;\n                    if(t!=0)maxx = max(maxx,ans[val[t]]);\n                }\n            }\n        }\n    }\n}AC;\nint n;\nint main()\n{\n    while(scanf(\"%d\", &n) == 1 && n)\n    {\n        AC.clear();\n        for(int i = 1; i <= n; ++i)\n            scanf(\" %s\", p[i]),AC.insert(p[i], i);\n        AC.getFail();\n        scanf(\"%s\", T);\n        AC.find();\n        printf(\"%d\\n\", maxx);\n        for(int i = 1; i <= n; ++i)\n            if(ans[i] == maxx)printf(\"%s\\n\", p[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1543202510,
        "uid": 119118,
        "name": "\u665a\u5b89\u665a\u5b89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "### \u3010\u7b97\u6cd5\u76ee\u6807\u3011\n- \u7ed9\u51fa\u591a\u4e2a\u5b57\u5178\u5355\u8bcd\u548c\u4e00\u4e2a\u5339\u914d\u5b57\u7b26\u4e32\uff0c\u6c42\u51fa\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u5b58\u5728\u591a\u5c11\u4e2a\u5b57\u5178\u5355\u8bcd\u3002\n\n### \u3010\u7b97\u6cd5\u601d\u8def\u3011\n- \u4e00\u3001\u5047\u5982\u6211\u4eec\u4e0d\u4f1aAC\u81ea\u52a8\u673a\uff0c\u6211\u4eec\u4f1a\u600e\u4e48\u505a\uff1f\n\t- \u5bf9\u4e8e\u7ed9\u51fa\u7684\u6bcf\u4e2a\u5b57\u5178\u5355\u8bcd\uff0c\u5c06\u5b83\u52a0\u5165\u4e00\u68f5Trie\u6811\u91cc\uff0c\u7136\u540e\u628a\u5339\u914d\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5355\u8bcd\u5728Trie\u6811\u4e2d\u8dd1\u4e00\u904d\uff0c\u7136\u540e\u7edf\u8ba1\u5c31\u884c\u4e86\u3002\u4f46\u662f\u8fd9\u6837\u5206\u89e3\u5339\u914d\u5b57\u7b26\u4e32\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u9ad8\u3002\n\n- \u4e8c\u3001AC\u81ea\u52a8\u673a\u8fd0\u7528\u4e86KMP\u7684\u601d\u60f3\n\t- KMP\u4e2d\u6709\u4e00\u4e2anext\u6570\u7ec4\uff0c\u5931\u914d\u65f6\u7528\u4e8e\u8df3\u8dc3\u3002AC\u81ea\u52a8\u673a\u4e5f\u8fd0\u7528\u4e86\u8fd9\u4e2a\u601d\u60f3\u3002\n\t- AC\u81ea\u52a8\u673a\u5904\u7406\u7684\u662f\u5b57\u5178\u5355\u8bcd\u3002\u5b83\u4e5f\u6709\u4e00\u4e2a\u5931\u914d\u6570\u7ec4fail\uff0c\u8868\u793a\uff1a\u4ee5\u5f53\u524d\u5b57\u7b26\u4e32\u4e3a\u540e\u7f00\u7684\u6700\u957f\u7684\u5b57\u7b26\u4e32\u3002fail\u6307\u9488\u7684\u7528\u9014\u662f\u5f53\u5339\u914d\u5b57\u7b26\u4e32\u5728Trie\u6811\u4e0a\u8dd1\u65f6\uff0c\u5f97\u4ee5\u7528fail\u6307\u9488\u4e0d\u65ad\u5730\u8df3\u7edf\u8ba1\u6570\u91cf\uff0c\u4f18\u5316\u65f6\u95f4\u3002\n- \u4e09\u3001fail\u6307\u9488\u7684\u6784\u9020\n\t- \u5148\u628a\u5b57\u5178\u5355\u8bcd\u52a0\u5165Trie\u6811\u3002\u7136\u540e\u7528bfs\u4e00\u5c42\u5c42\u626b\u63cfTrie\u6811\u3002\u660e\u663e\u7684\uff0c\u6839\u8282\u70b9\u7684\u5b50\u8282\u70b9\u7684fail\u5982\u679c\u5f53\u524d\u8282\u70b9\u6709\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5b50\u8282\u70b9\u7684fail\u8282\u70b9\u5c31\u662f\u5f53\u524d\u8282\u70b9\u7684fail\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n\t- \u6709\u4e00\u4e2a\u526a\u679d\uff0c\u5c31\u662f\u5982\u679c\u5f53\u524d\u8282\u70b9\u6ca1\u6709\u5b50\u8282\u70b9\u65f6\uff0c\u5c31\u628a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u6307\u5411\u5f53\u524d\u8282\u70b9\u7684fail\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\n- \u56db\u3001\u7edf\u8ba1\u3002\n\t- \u628a\u5339\u914d\u5b57\u7b26\u4e32\u5728AC\u81ea\u52a8\u673a\u4e0a\u50cfTrie\u6811\u4e00\u6837\u8dd1\uff0c\u53ea\u662f\u8dd1\u5230\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u8981\u4e0d\u65ad\u5730\u987a\u7740fail\u6307\u9488\u8d70\u4e00\u6b21\uff0c\u5e76\u4e14\u7edf\u8ba1\u603b\u6570\u3002\n\n### \u3010\u53c2\u8003\u7a0b\u5e8f\u3011\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n\nchar st[1000005],p[1000005];\nstruct TRIE{\n    int son[27];\n    int val;\n}trie[1000005];\nint fail[1000005];\nint L;\n\nvoid Fill_in(char *st,int rank)\n{\n    int len=strlen(st),u=0;\n    for (int i=0;i<len;i++)\n    {\n        int v=st[i]-'a';\n        if (!trie[u].son[v])\n            trie[u].son[v]=++L;\n        u=trie[u].son[v];\n    }\n    trie[u].val++;\n}\nvoid Build()\n{\n    queue <int> q;\n    for (int i=0;i<26;i++)\n        if (trie[0].son[i])\n        {\n            q.push(trie[0].son[i]);\n            fail[trie[0].son[i]]=0;\n        }\n    while (!q.empty())\n    {\n        int now=q.front();q.pop();\n        for (int i=0;i<26;i++)\n            if (trie[now].son[i])\n            {\n                fail[trie[now].son[i]]=trie[fail[now]].son[i];\n                q.push(trie[now].son[i]);\n            }else\n            trie[now].son[i]=trie[fail[now]].son[i];\n    }\n}\nint Check(char *st)\n{\n    int len=strlen(st),u=0,ans=0;\n    for (int i=0;i<len;i++)\n    {\n        u=trie[u].son[st[i]-'a'];\n        for (int h=u;h&&~trie[h].val;h=fail[h])\n        {\n            ans+=trie[h].val;\n            trie[h].val=-1;\n        }\n    }\n    return ans;\n}\nint main()\n{\n    int T,n;\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",st);\n        Fill_in(st,i);\n    }\n    Build();\n    scanf(\"%s\",p);\n    printf(\"%d\",Check(p));\n    return 0;\n}\n```",
        "postTime": 1520490200,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "AC\u81ea\u52a8\u673a\u603b\u7ed3"
    },
    {
        "content": "\u5bf9\u4e8eac\u81ea\u52a8\u673a\u7684\u89e3\u91ca\u90fd\u5728\u4ee3\u7801\u91cc\n\n```\nAC\u81ea\u52a8\u673a\uff1a\n\u7ed9\u5b9aN\u4e2a\u6a21\u5f0f\u4e32S\u548c\u4e00\u4e2a\u6587\u672c\u4e32t\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6a21\u5f0f\u4e32\u5728\u6587\u672c\u4e32\u51fa\u73b0\u8fc7\nAC\u81ea\u52a8\u673a\u901a\u8fc7fail\u6570\u7ec4\uff0c\u8ba9trie\u6811\u4e2d\u5b58\u5728\u4f46\u6ca1\u6709\u6570\u503c\u7684\u865a\u8282\u70b9\u90fd\u6307\u5411\u4e00\u4e2a\u4e3a\u8be5\u5b57\u6bcd\u7684\u5b9e\u8282\u70b9\uff0c\u8fd9\u6837\u5728\u4e0e\u6587\u672c\u4e32\u5339\u914d\u65f6\uff0c\u80fd\u5339\u914d\u591a\u4e2a\u6a21\u5f0f\u4e32\uff1a\nstruct Tree//\u5b57\u5178\u6811 \n{\n     int fail;//\u5931\u914d\u6307\u9488\n     int vis[26];//\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\n     int end;//\u6807\u8bb0\u6709\u51e0\u4e2a\u5355\u8bcd\u4ee5\u8fd9\u4e2a\u8282\u70b9\u7ed3\u5c3e \n}AC[1000000];//Trie\u6811\nint cnt=0;//Trie\u7684\u6307\u9488 \ninline void Build(string s)\n{\n        int l=s.length();\n        int now=0;//\u5b57\u5178\u6811\u7684\u5f53\u524d\u6307\u9488 \n        for(int i=0;i<l;++i)//\u6784\u9020Trie\u6811\n        {\n                if(AC[now].vis[s[i]-'a']==0)//Trie\u6811\u6ca1\u6709\u8fd9\u4e2a\u5b50\u8282\u70b9\n                   AC[now].vis[s[i]-'a']=++cnt;//\u6784\u9020\u51fa\u6765\n                now=AC[now].vis[s[i]-'a'];//\u5411\u4e0b\u6784\u9020 \n        }\n        AC[now].end+=1;//\u6807\u8bb0\u5355\u8bcd\u7ed3\u5c3e \n}\nvoid Get_fail()//\u6784\u9020fail\u6307\u9488\n{\n        queue<int> Q;//\u961f\u5217 \n        for(int i=0;i<26;++i)//\u7b2c\u4e8c\u5c42\u7684fail\u6307\u9488\u63d0\u524d\u5904\u7406\u4e00\u4e0b\n        {\n               if(AC[0].vis[i]!=0)\n               {\n                   AC[AC[0].vis[i]].fail=0;//\u6307\u5411\u6839\u8282\u70b9\n                   Q.push(AC[0].vis[i]);\n\t\t\t\t   //\u538b\u5165\u961f\u5217 \n               }\n        }\n        while(!Q.empty())//BFS\u6c42fail\u6307\u9488 \n        {\n              int u=Q.front();\n              Q.pop();\n              for(int i=0;i<26;++i)//\u679a\u4e3e\u6240\u6709\u5b50\u8282\u70b9\n              {\n                        if(AC[u].vis[i]!=0)//\u5b58\u5728\u8fd9\u4e2a\u5b50\u8282\u70b9\n                      {\n                                AC[AC[u].vis[i]].fail=AC[AC[u].fail].vis[i];\n                                    //\u5b50\u8282\u70b9\u7684fail\u6307\u9488\u6307\u5411\u5f53\u524d\u8282\u70b9\u7684\n                                  //fail\u6307\u9488\u6240\u6307\u5411\u7684\u8282\u70b9\u7684\u76f8\u540c\u5b50\u8282\u70b9 \n                                Q.push(AC[u].vis[i]);//\u538b\u5165\u961f\u5217 \n                      }\n                      else//\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5b50\u8282\u70b9 \n                      AC[u].vis[i]=AC[AC[u].fail].vis[i];//\u6bd4\u5982\u8bf41\u53f7\u8282\u70b9a\u4e0b\u9762\u53ea\u8ddf\u77402\u53f7\u8282\u70b9b\uff08\u663e\u6027\u5b58\u5728\u8282\u70b9\uff09\uff0c\u90a3\u4e481\u53f7\u8282\u70b9\u4e0b\u9762\u8fd8\u670925\u4e2a\u5b9e\u9645\u5b58\u5728\u4f46\u53c8\u4e0d\u663e\u73b0\u51fa\u6765\u7684\u865a\u8282\u70b9\uff08\u9690\u6027\u5b58\u5728\u8282\u70b9\uff09\u3002   \u6bd4\u5982\uff0c\u5982\u679c\u6574\u4e2atrie\u6811\u4e2d\u6709\u4e00\u4e2a\u663e\u6027\u8282\u70b9\u7684\u5b57\u6bcd\u4e3aa\uff0c\u90a3\u4e48\u57fa\u672c\u4e0a\u6240\u6709\u5b57\u6bcd\u662fa\u7684\u865a\u8282\u70b9\u7684\u7f16\u53f7\u515c\u515c\u8f6c\u8f6c\u4f46\u6700\u7ec8\u90fd\u4f1a\u7b49\u4e8e\u8fd9\u4e2a\u663e\u6027\u8282\u70b9\u7684\u7f16\u53f7\uff1b\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u5b57\u6bcd\u4e3aa\u7684\u663e\u6027\u8282\u70b9\uff0c\u90a3\u4e48\u6240\u6709\u5b57\u6bcd\u4e3aa\u7684\u9690\u6027\u8282\u70b9\u7684\u7f16\u53f7\u515c\u515c\u8f6c\u8f6c\u6700\u7ec8\u90fd\u4f1a\u7b49\u4e8e\u6839\u8282\u70b9\uff1b\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u5339\u914d\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684\u65f6\u5019\uff0c\u540c\u65f6\u5339\u914d\u5176\u4ed6\u6a21\u5f0f\u4e32\uff1b \n                      //\u5f53\u524d\u8282\u70b9\u7684\u8fd9\u4e2a\u5b50\u8282\u70b9\u6307\u5411\u5f53\n                      //\u524d\u8282\u70b9fail\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u7684\u540c\u4e3a\u8fd9\u4e2a\u5b57\u6bcd\u7684\u5b50\u8282\u70b9\uff0c\u8fd9\u6837\u786e\u4fdd\u4e86\u5728\u5339\u914d\u65f6fail\u6307\u9488\u4e0d\u4f1a\u6307\u5411\u6ca1\u6709\u5305\u542b\u5173\u7cfb\u7684\u8282\u70b9\n\t\t\t\t\t  //\u6bd4\u5982\u6a21\u5f0f\u4e32\u4e3acabdc\uff0cab\uff0cdb\u4e2d\uff0c\u5982\u679c\u6587\u672c\u4e32\u662fcabdc\u90a3\u4e48\u5047\u5982\u8bf4\u5339\u914d\u5230b\u65f6\uff0c\u7b2c\u4e00\u4e2a\u6a21\u5f0f\u4e32\u7684b\u53ef\u4ee5fail\u6307\u9488\u8df3\u5230ab\u7684b\uff08\u4e5f\u5c31\u662f\u540c\u65f6\u628aab\u7684b\u7ed9\u5339\u914d\u4e86\uff0c\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u628aa\u7ed9\u5339\u914d\u4e86\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019\u5c31\u628aab\u5339\u914d\u4e86\uff09\uff0c\u4f46\u662f\u4e0d\u4f1a\u8df3\u5230db\u7684b\uff08\u4e0d\u80fd\u5339\u914ddb\uff09\uff0c\u56e0\u4e3adb\uff0ccabde\u6ca1\u6709\u5305\u542b\u5173\u7cfb\uff0ccabde\u4e2da\u7684fail\u6307\u9488\u5e76\u4e0d\u4f1a\u6307\u5411d\uff0c\u6240\u4ee5cabde\u7684b\u5c31\u4e0d\u4f1a\u6307\u5411db\u4e2db\u3002 \n              }\n        }\n}\nint AC_Query(string s)//AC\u81ea\u52a8\u673a\u5339\u914d\n{\n        int l=s.length();\n        int now=0,ans=0;\n        for(int i=0;i<l;++i)\n        {\n                now=AC[now].vis[s[i]-'a'];//\u5411\u4e0b\u4e00\u5c42\n                for(int t=now;t&&AC[t].end!=-1;t=AC[t].fail)//\u5339\u914d\u5176\u4ed6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u540c\u65f6\uff0c\u628a\u5176\u4ed6\u5b57\u7b26\u4e32\u4e5f\u5339\u914d\u4e86\uff1b \n                {\n                \t//\u4e00\u4e2a\u5b57\u6bcd\u4e00\u4e2a\u5b57\u6bcd\u7684\u5339\u914d \n                         ans+=AC[t].end;//\u5982\u679c\u662f\u5355\u8bcd\u8282\u70b9\u5c31+1\uff0c\u4e0d\u662f\u5c31\u4f1a\u52a0+0\uff1b \n                         AC[t].end=-1;//\u8bc1\u660e\u8fc7\u8fd9\u4e2a\u5355\u8bcd\u5df2\u7ecf\u5339\u914d\u8fc7\u4e86\uff0c\u5c31\u4e0d\u7528\u518d\u6b21\u5339\u914d\uff1b \n                } \n        }\n        return ans;\n}\nint main() \n{\n     int n;\n     string s;\n     cin>>n;\n     for(int i=1;i<=n;++i)\n     {\n             cin>>s;\n             Build(s);\n     }\n     AC[0].fail=0;//\u7ed3\u675f\u6807\u5fd7 \n     Get_fail();//\u6c42\u51fa\u5931\u914d\u6307\u9488\n     cin>>s;//\u6587\u672c\u4e32 \n     cout<<AC_Query(s)<<endl;\n     return 0;\n}\n\n\n\u96be\u9898\uff1a\u963f\u72f8\u7684\u6253\u5b57\u673a\n/*\u963f\u72f8\u7684\u6253\u5b57\u673a\uff1a\n\u601d\u8def\uff1a1.\u6bcf\u8f93\u5165\u4e00\u4e2a\u5355\u8bcd\u5c31\u5728trie\u6811\u4e0a\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\uff1b\n\t  2.\u6bcf\u8f93\u5165\u4e00\u4e2a\u2018b'\u5c31\u56de\u6eaf\u5230\u7236\u4eb2\u8282\u70b9\u4f46\u4e0d\u5220\u9664\u5f53\u524d\u8282\u70b9\uff08\u56e0\u4e3a\u540e\u9762\u8981\u7528\uff09\uff1b\n\t  3.\u6bcf\u8f93\u5165\u4e00\u4e2a\u2019p\u2018\u5c31\u53ef\u4ee5\u89c6\u4e3a\u5f53\u524d\u8282\u70b9\u662f\u4e00\u4e2a\u5355\u8bcd\u8282\u70b9\uff1b\n\t  4.\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 y\u4e32\uff08\u6587\u672c\u4e32\uff1a\u88ab\u5bf9\u6bd4\u90a3\u4e2a\uff09 \u5982\u679c\u6709\u4e00\u4e2ay\u4e32\u8282\u70b9\u7684fail\u6307\u9488\u6307\u5411x\u4e32\u7684\u6700\u540e\u7684\u4e00\u4e2a\u8282\u70b9\uff08x\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u8282\u70b9\uff09\uff0c\u90a3\u4e48x\u4e32\u4e00\u5b9a\u662fy\u4e32\u7684\u5b50\u4e32\uff1b\u6709n\u4e2ay\u4e32\u7684\u8282\u70b9fail\u6307\u9488\u6307\u5411x\u4e32\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u6709x\u4e32\u5c31\u5728y\u4e32\u51fa\u73b0n\u6b21\uff1b\n\t  5.\u6240\u4ee5\u6211\u4eec\u5efa\u7acb\u4e00\u4e2afail\u6811\uff0c\u628a\u6240\u6709fail\u6307\u9488\u53cd\u5411\uff1b\u5728fail\u6811\u4e2d\uff0c\u8ba9x\u4e32\u7684\u672b\u5c3e\u8282\u70b9\u6210\u4e3a\u6839\uff0c\u5bfb\u627e\u6709\u591a\u5c11\u4e2a\u5c5e\u4e8ey\u4e32\u7684\u8282\u70b9\u662fx\u4e32\u7684\u5b50\u6811\uff08\u56e0\u4e3afail\u6307\u9488\u53cd\u5411\u4e86\u6240\u4ee5x\u53d8\u6210\u4e86\u8001\u5927\uff0c\u76f8\u5f53\u4e8e\u4ece\u5c5e\u4e8ey\u7684m\u8282\u70b9\u6307\u5411x\u7684\u672b\u5c3e\u8282\u70b9\u53d8\u6210x\u7684\u672b\u5c3e\u8282\u70b9\u6307\u5411\u5c5e\u4e8ey\u7684\u90a3\u4e2am\u8282\u70b9\uff09\n\t  6.\u95ee\u9898\u4ece\u6709\u591a\u5c11\u4e2ay\u4e32\u7684\u8282\u70b9\u7684fail\u6307\u9488\u6307\u5411x\u7684\u672b\u5c3e\u8282\u70b9\u53d8\u6210\u4e86\u5728fail\u6811\u4e2d\u6709\u591a\u5c11\u4e2a\u5c5e\u4e8ey\u7684\u8282\u70b9\u5728x\u7684\u5b50\u6811\u4e2d\uff1b\n\t  9.\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n\t  \u6ce8\u610ftrie\u6811\u7684\u8282\u70b9\u9644\u5e26\u7684\u6240\u6709\u4fe1\u606f\u90fd\u4f1a\u5728fail\u6811\u4e0a\u9644\u5e26\u3002\u5b83\u4eec\u662f\u4e0d\u540c\u7684\u6811\u7684\u5f62\u6001\u4f46\u662f\u5b83\u4eec\u7684\u8282\u70b9\u662f\u4e92\u901a\u7684\uff1b \n\t  */\n\n\n\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mx = 1e5+10;\nint n;\nstruct TR{//trie\u6811 \n\tint vis[27],fail,fa;\n}ac[mx];\n\nint p = 1;//p\u5c31\u662ftrie\u6811\u7684\u5927\u5c0f\uff0c\u76f8\u5f53\u4e8esize \n\nstruct edge{//\u8fb9 \n\tint to,next;\n}road[mx];\n\nstruct query{\n\tint x,y;\n};\nint last[mx],cnt;\n\nvoid add(int u ,int v){//\u5b58fail\u6811\u7684\u56fe \n\tcnt++;\n\troad[cnt].to = v;\n\troad[cnt].next = last[u];\n\tlast[u] = cnt;\n}\n\nint tree[mx];//\u6811\u72b6\u6570\u7ec4 \nint lowbit(int x){\n\treturn x&(-x);\n}\nvoid update(int x,int k){//\u6811\u72b6\u6570\u7ec4\u66f4\u65b0 \n\twhile(x < mx){\n\t\ttree[x] +=k;\n\t\tx += lowbit(x);\n\t}\n}\nint sum(int x){//\u6811\u72b6\u6570\u7ec4\u6c42\u548c \n\tint ans = 0;\n\twhile(x>0){\n\t\tans += tree[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn ans;\n}\n\nchar word[mx],a[mx];\nint q[mx],cur = 0 ,ret = 0;\nvoid insert(char *s,int root){//root\u5c31\u662f\u6307\u5f53\u524d\u8282\u70b9\uff08\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u610f\u601d\uff09 \n\tfor(int i = 0 ; s[i];i++){\n\t\tif(s[i] == 'P'){\n\t\t\tq[++ret] = root;//ret\u8bb0\u5f55\u6709\u591a\u5c11\u4e2aP\u64cd\u4f5c\uff0c\u5e76\u8bb0\u5f55\u7b2cx\u4e2ap\u64cd\u4f5c\u5bf9\u5e94\u7684\u662f\u90a3\u4e2a\u8282\u70b9\uff1b \uff08\u90a3\u4e2a\u8282\u70b9\u76f8\u5f53\u4e8e\u88ab\u6807\u8bb0\u4e3a\u5355\u8bcd\u8282\u70b9\uff09 \n\t\t}\n\t\telse{\n\t\t\tif(s[i] == 'B'){\n\t\t\t\troot = ac[root].fa;//\u5982\u679c\u662fb\u64cd\u4f5c\u5c31\u8ba9root\u6307\u9488\u6307\u56de\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\uff1b \n\t\t\t}\n\t\t\telse{//\u4e0d\u7136\u7684\u8bdd\u5c31\u65b0\u5efa\u8282\u70b9 \n\t\t\t\tint now = s[i]-'a';\n\t\t\t\tif(ac[root].vis[now] == 0){\n\t\t\t\t\tac[root].vis[now] = p;\n\t\t\t\t\tac[p].fa = root;\n\t\t\t\t\tp++;\n\t\t\t\t}\n\t\t\t\troot = ac[root].vis[now];\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid build(){//\u5efa\u7acbfail\u6307\u9488\uff1bbfs\u904d\u5386 \n\tqueue<int> que;\n\tfor(int i = 0 ; i <26 ; i++){\n\t\tif(ac[0].vis[i]!=0){\n\t\t\tac[ac[0].vis[i]].fail = 0;\n\t\t\tque.push(ac[0].vis[i]);\n\t\t}\n\t}\n\twhile(!que.empty()){\n\t\tint top = que.front();que.pop();\n\t\tfor(int i = 0 ; i< 26; i++){\n\t\t\tint v = ac[top].vis[i];\n\t\t\tif(v!=0){\n\t\t\t\tac[v].fail = ac[ac[top].fail].vis[i];\n\t\t\t\tque.push(ac[top].vis[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tac[top].vis[i] = ac[ac[top].fail].vis[i];//\u865a\u8282\u70b9 \n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\n\nint dfn[mx],tim = 0,r[mx];//tim == time\uff0c\u65f6\u95f4\u6233 \n\nvoid dfs(int now){\n\tdfn[now] = ++tim;\n\tfor(int i = last[now];i ; i = road[i].next){//\u904d\u5386\u4e00\u904dfail\u56fe \n\t\tint go = road[i].to;\n\t\tdfs(go);\n\t}\n\tr[now] = tim; //\u56de\u6eaf\u7684\u65f6\u5019\uff0c\u628a\u56de\u6eaf\u9014\u4e2d\u7684\u6240\u6709\u7684\u8282\u70b9\u7684r[i]\u90fd\u6807\u8bb0\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u7684\u6700\u5de6\u8fb9\u7684\u53f6\u5b50\u8282\u70b9\uff1b \n}\n\nint tot[mx];\nint ans[mx];\n\nint main(){\n\tscanf(\"%s\",word);\n\tinsert(word,0);\n\tbuild();\n\tvector<int> askx[mx];//2\u7ef4\u6570\u7ec4 \n\tvector<int> asky[mx];\n\tfor(int i = 1; i < p ; i ++){\n\t\tadd(ac[i].fail,i);//\u5efa\u7acbfail\u6811 \n\t}\n\tdfs(0);//dfs fail\u6811 \n\tint root = 0 ;\n\tscanf(\"%d\",&n);\n\tfor(int i = 0 ; i < n ; i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\taskx[y].push_back(x);//\u6bd4\u5982\u6211\u8981\u67e5\u8be2\uff0c\u7b2c\u4e00\u6b21\u6253\u5370\u7684\u4e32\u5728\u7b2c\u4e09\u6b21\u6253\u5370\u7684\u4e32\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u7b2c2\u6b21\u6253\u5370\u7684\u4e32\u5728\u7b2c\u4e09\u6b21\u6253\u5370\u7684\u4e32\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff1b\u90a3\u4e48\u5c31\u628ax=1,x=2\u90fd\u5b58\u8fdby=3\u7684\u52a8\u6001\u6570\u7ec4\u91cc\uff08\u8bb0\u4f4faks\u6570\u7ec4\u662f\u4e2a2\u7ef4\u6570\u7ec4\uff09\uff0c\u8fd9\u6837\u5c31\u5408\u5e76\u4e86\u95ee\u9898\uff0c\u66f4\u5feb\u4e86 \n\t\tasky[y].push_back(i);//\u8fd9\u4e2a\u8be2\u95ee\u662f\u7b2c\u51e0\u4e2a\u63d0\u51fa\u7684\uff1b\uff08\u56e0\u4e3aans\u7684\u6570\u7ec4\u8981\u6309\u987a\u5e8f\u8f93\u51fa\uff0c\u4f46\u662f\u6211\u4eec\u8ba1\u7b97\u7b2cx\u4e2a\u4e32\u5728\u7b2cy\u4e2a\u4e32\u51fa\u73b0\u591a\u5c11\u6b21\u7684\u65f6\u5019\uff0c\u662f\u6309y=1\uff0cy=2\uff0cy=3......\u7684\u987a\u5e8f\u6765\u7684 \n\t}\n\tupdate(dfn[0],1);\n\tret = 0;\n\tfor(int i = 0 ; word[i] ; i ++){\n\t\tif(word[i] == 'P'){\n\t\t\tret ++ ;//\u4e3e\u6817\u5b50\uff0c\u5f53ret==1\u65f6\uff0c\u770b\u770baksx[ret]\u91cc\u6709\u591a\u5c11\u4e2a\u8be2\u95ee\uff08\u5373for\u5faa\u73af\u91cc\u7684j<askx[ret].size() )\uff0c\u5c31\u662f\u770b\u770b\u6709\u591a\u5c11\u4e2a\u5173\u4e8e\u201c\u7b2cx\u4e2a\u6253\u5370\u7684\u4e32\u5728\u7b2c\u4e00\u4e2a\u6253\u5370\u7684\u4e32\u91cc\u51fa\u73b0\u591a\u5c11\u6b21\u201d\u7684\u8be2\u95ee\uff0c\u5e76\u4e14\u7528\u5230\u4e0b\u9762\u7684for\u5faa\u73af\u91cc \n\t\t\tfor(int j = 0; j < askx[ret].size(); j++){ \n\t\t\t\tint num = q[askx[ret][j]];\n\t\t\t\tans[asky[ret][j]] = sum(r[num]) - sum(dfn[num]-1); //\u6811\u72b6\u6570\u7ec4\u4e2dx\u4e32\u672b\u5c3e\u8282\u70b9\u4eceDFS\u5e8f\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\u5230\u7ed3\u675f\u4f4d\u7f6e\u7684\u548c\n\t\t\t}\n\t\t}\n\t\telse if(word[i] == 'B'){\n\t\t\tupdate(dfn[root],-1);//\n\t\t\troot = ac[root].fa;\n\t\t}\n\t\telse{\n\t\t\troot = ac[root].vis[word[i]-'a'];\n\t\t\tupdate(dfn[root],1);\n\t\t}\n\t}\n\tfor(int i = 0 ; i < n ; i ++){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1597586940,
        "uid": 234357,
        "name": "autofish",
        "ccfLevel": 0,
        "title": "AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09"
    },
    {
        "content": "ng\n\n\u6211\u4f3c\u4e4e\u662f\u6ca1\u6253\u4efb\u4f55Trie\u7684\u9898\u5c31\u8dd1\u8fc7\u6765\u7684~\n\n\u6709AC\u81ea\u52a8\u673a\u57fa\u7840\u7684\u770b\u770b\u6ce8\u91ca\n\n\u6ca1\u6709\u7684\u5148\u53bb\u767e\u5ea6\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nstruct Node{\n\tint fa,zz[26],nn,fail,is; \n//fa\u7236\u4eb2\uff0czz\u6307\u9488\uff0cnn\u672c\u8eab\u5b57\u7b26\uff0cfail\u5931\u914d\u6307\u9488\uff0cis\u8be5\u4f4d\u4e0a\u5355\u8bcd\u4e2a\u6570\n}ac[1000001];\nchar lo[1000001];\nint N,n=1,ans=0;//n\u76ee\u524d\u7684\u8282\u70b9\u6570\u91cf\nqueue<int> q;\nvoid bu(){//\u5904\u7406\u5f53\u524d\u5b57\u7b26\u4e32\n\tint now=1;//\u73b0\u5728\u5904\u7406\u7684\u8282\u70b9\n\tfor(int i=0;lo[i]!=0;i++){\n\t\tif(!ac[now].zz[lo[i]-'a']){//\u6ca1\u6709\u8ffd\u6307\u5411\n\t\t\t++n;//\u65b0\u5f00\n\t\t\tac[n].fa=now;\n\t\t\tac[now].zz[lo[i]-'a']=n;\n\t\t\tnow=n;\n\t\t\tac[now].nn=lo[i]-'a';//\u8fde\u63a5fa,zz\n\t\t}\n\t\telse\tnow=ac[now].zz[lo[i]-'a'];//\u6307\u9488\n\t}\n\t++ac[now].is;//\u5355\u8bcd\u6b21\u6570\n}\nint main(){\n\tscanf(\"%d\",&N);\n\twhile(N--){\n\t\tscanf(\" %s\",lo);\n\t\tbu();\n\t}\n\tac[1].fail=0;\n\tfor(int i=0;i<26;i++)\tac[0].zz[i]=1;/\u865a\u70b9\u5904\u7406\n\tfor(int i=0;i<26;i++){\n\t\tif(ac[1].zz[i])\tq.push(ac[1].zz[i]);//bfs\n\t}\n\twhile(!q.empty()){\n\t\tint i=q.front();\n\t\tq.pop();//\u6309\u5c42\u7684\u987a\u5e8f\u83b7\u53d6\n\t\tint f=ac[i].fa;\n\t\twhile(!ac[ac[f].fail].zz[ac[i].nn])\tf=ac[f].fail;//\u5bfb\u627efail\u503c\n\t\tac[i].fail=ac[ac[f].fail].zz[ac[i].nn];\n\t\tfor(int j=0;j<26;j++){\n\t\t\tif(ac[i].zz[j])\tq.push(ac[i].zz[j]);//\u641c\u5bfb\u4e0b\u4e00\u5c42\u8282\u70b9\n\t\t}\n\t}\n\tscanf(\" %s\",lo);\n\tint now=1; \n\tfor(int i=0;lo[i]!=0;i++){\n\t\twhile(!ac[now].zz[lo[i]-'a'])\tnow=ac[now].fail;//\u5931\u914d\n\t\tnow=ac[now].zz[lo[i]-'a'];//\u5f80\u4e0b\u641c\u5bfb\n\t\tans+=ac[now].is;//\u5355\u8bcd\u6570\n\t\tac[now].is=0;//\u53ea\u80fd\u8bb0\u4e00\u6b21\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1534559350,
        "uid": 60864,
        "name": "tiger2005",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "[~~<font size=1>\u535a\u5ba2\u5e7f\u544a\uff0c\u548c\u535a\u5ba2\u4e00\u8d77\u98df\u7528\u66f4\u4f73</font>~~](https://blog.csdn.net/weixin_45740176/article/details/104865655)\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nstruct Trie_Tree{\n    ll fail;\n    ll child[27];//\u6bcf\u7236\u8282\u70b9\u4e0b\u7684\u5b50\u8282\u70b9\u670926\u4e2a\uff0826\u4e2a\u5b57\u6bcd\uff09\u203bchild[]\u8868\u793a\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9 \n    ll end;//\u6807\u8bb0\u6709\u51e0\u4e2a\u5355\u8bcd\u4ee5\u8fd9\u4e2a\u8282\u70b9\u7ed3\u5c3e\n}ac[1000000 + 10];\nll cnt = 0;//Trie\u7684\u6307\u9488\ninline void Build(string mushichuan){//\u5efa\u6811 \n    ll l = mushichuan.length();\n    ll now = 0;//\u8bbf\u95ee\u5b57\u5178\u6811\u7684\u5f53\u524d\u4f4d\u7f6e \n    for(ll i = 0; i < l; i++){//\u6784\u9020Trie\u6811\n        if(ac[now].child[mushichuan[i] - 'a'] == 0)//\u6811\u6ca1\u8fd9\u4e2a\u8282\u70b9\uff0c s[i] - 'a' \u628a\u5bf9\u5e94\u7684\u5b57\u6bcd\u53d8\u6210\u6570\u5b57 \n            ac[now].child[mushichuan[i] - 'a'] = ++cnt;//\u5982 \"A B C\" \u9700\u8981\u6784\u9020\u4e09\u5c42\uff0c\u6bcf\u4e00\u5c42\u90fd\u4e8b\u5148\u628a a~z 26\u4e2a\u5b57\u6bcd\u6253\u597d \n            now = ac[now].child[mushichuan[i] - 'a'];//\u5f80\u4e0b\u9012\u5f52\n    }//\u6700\u540e\u8df3\u51fa\u5faa\u73af\u9700\u628a\u5355\u8bcd\u7ed3\u5c3e\u6807\u8bb0\u4e00\u4e0b \n    ac[now].end++;\n}\nvoid get_fail(){//\u6784\u9020fail\u6307\u9488\n    queue <ll> q;\n    for(ll i = 0; i <= 26; i++){//\u521d\u59cb\u6761\u4ef6 \n        if(ac[0].child[i] != 0){//\u6784\u9020\u4e86\u6b64\u8282\u70b9, ac[0] \u8868\u793a\u6839\u8282\u70b9 \n            ac[ac[0].child[i]].fail = 0;//\u5148\u628a\u6240\u6709\u7684\u7b2c\u4e8c\u5c42\u8282\u70b9\u90fd\u6307\u5411\u6839\u8282\u70b9\n            q.push(ac[0].child[i]);//\u628a\u6839\u8282\u70b9\u7684\u5b50\u8282\u70b9 push \u8fdb queue \u4e2d     \n        }\n    }\n    while(!q.empty()){//bfs\u6c42\u6bcf\u4e00\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u518d\u5c06fail\u6307\u9488\u6307\u5411\u76f8\u540c\u5b57\u7b26\u4e32\u7684\u5b50\u8282\u70b9 \n        ll father = q.front();\n        q.pop();\n        for(ll i = 0; i < 26; i++){\n            if(ac[father].child[i] != 0){//\u7236\u8282\u70b9\u4e0b\u5b58\u5728\u5b50\u8282\u70b9\n                ac[ac[father].child[i]].fail = ac[ac[father].fail].child[i];//\u770b\u56fe\u89e3\n                q.push(ac[father].child[i]);//\u50cf\u7b2c\u4e00\u5c42\u628a\u7236\u8282\u70b9\u7684\u5b50\u8282\u70b9 push \u8fdb queue \u4e2d\n            }\n            else//\u7236\u8282\u70b9\u4e0b\u4e0d\u5b58\u5728\u5b50\u8282\u70b9\n                ac[father].child[i] = ac[ac[father].fail].child[i];//\u865a\u6839\uff08\u770b\u56fe\u89e3\uff09 \n        }\n    }\n}\nll AC_COUT(string wenbenchuan){//\u81ea\u52a8AC\u673a\u7684\u5339\u914d\n    ll l = wenbenchuan.length();\n    ll now = 0, ans = 0;//now = 0 \u5148\u4ece\u6839\u7ed3\u70b9\u51fa\u53d1 \n    for(ll i = 0; i< l; i++){\n        now = ac[now].child[wenbenchuan[i] - 'a'];//\u5411\u4e0b\u8d70, s[i] - 'a' \u628a\u5bf9\u5e94\u7684\u5b57\u6bcd\u53d8\u6210\u6570\u5b57 \n        for(ll next = now; next && ac[next].end != -1; next = ac[next].fail){//\u4e0b\u4e00\u4e2a\u8282\u70b9\u6ca1\u6709 || \u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c \u5faa\u73af\u6c42\u89e3\n            ans += ac[next].end;//\u8ba1\u7b97\u5355\u8bcd\u8282\u70b9\uff08\u770b\u56fe\u89e3\uff09 \n            ac[next].end = -1;//\u4e0e\u4e0a\u65b9\u5bf9\u5e94\uff0c\u5c31\u4e0d\u4f1a\u91cd\u590d\u4f7f\u7528 \n        }\n    }\n    return ans; \n}\nint main(){\n    ll n;\n    string mushichuan, wenbenchuan;\n    cin >> n;\n    for(ll i = 1; i <= n; i++){\n        cin >> mushichuan;\n        Build(mushichuan);//\u5efa\u6811\n    }\n    ac[0].fail = 0;//\u6839\u8282\u70b9\u7684 fail \u6307\u9488\u6307\u5411 0\uff08\u7ed3\u675f\u6807\u5fd7\uff09\n    get_fail();//\u6784\u9020fail\u6307\u9488\n    cin >> wenbenchuan;\n    cout << AC_COUT(wenbenchuan) << endl;\n    return 0;\n}\n```\n\n//by\u521d\u97f3\u30df\u30af",
        "postTime": 1573869586,
        "uid": 235254,
        "name": "\u8001\u756a\u8304\u9171",
        "ccfLevel": 0,
        "title": "\u521d\u97f3\u30df\u30af\u306ecoding"
    },
    {
        "content": "\u9898\u610f\uff1a\u8bf4\u7684\u5f88\u6e05\u695a\uff0c\u591a\u6a21\u677f\u5b57\u7b26\u4e32\u5339\u914d\u3002\u5c31\u662fAC\u81ea\u52a8\u673a\u4e86\u3002\n\u505a\u6cd5\uff1a\u5c06\u6240\u6709\u7684\u5339\u914d\u4e32\u6784\u9020\u6210\u4e00\u4e2a\u5b57\u5178\u6811\uff0c\u7136\u540e\u5462\u5c31\u662f\u5728\u5b57\u5178\u6811\u4e0a\u6784\u9020fail\u6307\u9488\uff0c\u7136\u540e\u5c31\u662f\u5339\u914d\u4e86\u3002\n\u6700\u91cd\u8981\u7684\u662f\u8fd9\u4e2a\u6570\u636e\u592a\u6c34\u4e86\uff0c\u6211\u521a\u5f00\u59cb\u53c2\u7167\u5218\u6c5d\u4f73\u5927\u795e\u7684\u4e66\u5199\u4e86\u4e00\u4e2aAC\u81ea\u52a8\u673a\uff0c\nWrong\u4e86\uff0c\u6d4b\u8bd5\u540e\u53d1\u73b0\u7528val\u6570\u7ec4\u6807\u8bb0\u65f6\uff0c\u8bbf\u95ee\u5b8c\u540e\u8981\u5f52\u96f6\u3002\n**\u8fd9\u4e2a\u9898\u76ee\u6d4b\u8bd5\u6570\u636e\u6ca1\u6709\u540e\u7f00\u6570\u636e\uff0c\u6bd4\u5982\uff1axiaomi aomi mi**\u5bf9\u4e8e\u8fd9\u7ec4\u5339\u914d\u6570\u636e\uff0c\u6211\u4eec\u628a\u6587\u672c\u4e32\u8bbe\u7f6e\u4e3axiaomi\uff0c\u6b63\u786e\u7b54\u6848\u662f3\uff0c\uff08\u6309\u7167\u767d\u4e66\u4e2d\u6240\u8bf4\uff0c\u6211\u4eec\u5728\u627e\u5230\u4e00\u4e2a\u4e32\u7684\u65f6\u5019\u8fd8\u5e94\u8be5\u987a\u7740\u5931\u914d\u8fb9\u56de\u53bb\u770b\u770b\uff09\u3002\u4f46\u662f\u6211\u5728\u6ca1\u7528last\u6570\u7ec4\uff08\u540e\u7f00\u8fde\u63a5\uff09\u7684\u60c5\u51b5\u4e0b\u4e5f\u8fc7\u4e86\u8fd9\u4e2a\u9898\u76ee\u3002\n**\u8d34\u4e2aAC\u81ea\u52a8\u673a\u6a21\u677f\u4e0a\u6765**\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 1000005\n#define maxnode 1000005\n#define sigma_size 26\n#define mod 1000000007\n#define INF 0x3f3f3f3f\nusing namespace std;\n\nint f[maxnode];\nint ch[maxnode][sigma_size];\nint val[maxnode],last[maxnode];\nint sz,n,ans;\nchar str[MAXN];\n\nint idx(char c)\n{\n    return c-'a';\n}\n\nvoid Insert(char *s)\n{\n    int u=0;\n    int len=strlen(s);\n    for(int i=0;i<len;i++)\n    {\n        int c=idx(s[i]);\n        if(!ch[u][c])\n        {\n            memset(ch[sz],0,sizeof(ch[sz]));\n            val[sz]=0;\n            ch[u][c]=sz++;\n        }\n        u=ch[u][c];\n    }\n    val[u]++;\n}\n\nvoid  getfail()\n{\n    queue<int> Q;\n    f[0]=0;\n    for(int i=0;i<sigma_size;i++)\n    {\n       int u=ch[0][i];\n       if(u)\n        {\n             Q.push(u);\n             f[u]=0;\n             last[u]=0;\n          }\n    }\n    while(!Q.empty())\n    {\n        int r=Q.front();\n        Q.pop();\n        for(int i=0;i<sigma_size;i++)\n        {\n            int  u=ch[r][i];\n            if(!u)\n                continue;\n            Q.push(u);\n            int v=f[r];\n            while(v&&!ch[v][i])\n                v=f[v];\n            f[u]=ch[v][i];\n            last[u]=val[f[u]]?f[u]:last[f[u]];\n        }\n    }\n}\n\nvoid print(int j)\n{\n    if(j)\n    {\n        ans+=val[j];\n        val[j]=0;\n        print(last[j]);\n    }\n}\n\nvoid Find(char *T)\n{\n    int len=strlen(T);\n    int j=0;\n    for(int i=0;i<len;i++)\n    {\n        int c=idx(T[i]);\n        while(j&&!ch[j][c])\n            j=f[j];\n        j=ch[j][c];\n        if(val[j])\n        {\n            print(j);\n        }\n        else if(last[j])\n            print(last[j]);\n    }\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    sz=1,ans=0;\n    memset(ch[0],0,sizeof(ch[0]));\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%s\",str);\n        Insert(str);\n    }\n    getfail();\n    scanf(\"%s\",str);\n    Find(str);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1572762888,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "# \u7b80\u4ecb\n\t\n\n> AC\u81ea\u52a8\u673a\uff0c\u5168\u79f0Aho-Corasick\u81ea\u52a8\u673a\uff0c\u9002\u7528\u4e8e\u5b58\u5728\u591a\u4e2a\u6a21\u677f\u4e32\u7684\u5b57\u7b26\u4e32\u5339\u914d\u95ee\u9898\uff0c\u5982\u679c\u6ca1\u6709AC\u81ea\u52a8\u673a\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5bf9n\u4e2a\u6a21\u677f\u4e32\u5206\u522b\u6c42\u4e00\u8d9fKMP\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u800cAC\u81ea\u52a8\u673a\u53ef\u4ee5\u4e00\u6b21\u5339\u914d\uff0c\u6548\u7387\u66f4\u4f18\u79c0\u3002\n> \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\u2014\u2014\u767e\u5ea6\u767e\u79d1\n\n# \u5b9e\u73b0\nKMP\u662f\u5728\u5b57\u7b26\u4e32\u4e0a\u7ebf\u6027\u5339\u914d\uff0c\u800cAC\u81ea\u52a8\u673a\u5219\u5728\u5b57\u7b26\u4e32\u7684\u96c6\u5408\u4e0a\u5339\u914d\uff0c\u4ec0\u4e48\u4e1c\u897f\u53ef\u4ee5\u628a\u4e00\u5927\u5806\u5b57\u7b26\u4e32\u5427\u3001\u653e\u4e00\u8d77\u5b58\u50a8\uff1fTrie!\u6240\u4ee5AC\u81ea\u52a8\u673a\u5176\u5b9e\u5c31\u662f\u5728Trie\u4e0a\u751f\u6210KMP\u7684\u5931\u914d\u51fd\u6570\u3002\n\n\u5bf9\u4e8e\u4e00\u68f5\u5efa\u597d\u7684Trie\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u7c7b\u4f3c\u4e8eKMP\u7684\u5931\u914d\u51fd\u6570\u7684\u6784\u9020\uff0c\u8fd9\u91cc\u8981\u4e00\u5c42\u4e00\u5c42\u7684\u6784\u9020\uff0c\u6240\u4ee5\u9700\u8981\u7528BFS\u6765\u904d\u5386\u3002\u5176\u4ed6\u5927\u81f4\u76f8\u540c\uff0c\u8fd9\u91cc\u8fd8\u6709\u4e00\u70b9\uff0c\u5f53\u627e\u5230\u4e86\u67d0\u4e2a\u5355\u8bcd\u540e\uff0c\u53ef\u80fd\u627e\u5230\u5176\u4ed6\u7684\u5355\u8bcd\u3002\u4f8b\u5982\u627e\u5230his\u540e\u6709is\uff0c\u6240\u4ee5\u8fd8\u8981\u6784\u9020\u4e00\u4e2alst\u6570\u7ec4\u8868\u793a\u5982\u679c\u6309\u7167\u5931\u914d\u51fd\u6570\u7ee7\u7eed\u8d70\u65f6\u6700\u8fd1\u7684\u4e00\u4e2a\u5355\u8bcd\u7f16\u53f7\uff0c\u7528\u4e8e\u63d0\u9ad8\u6548\u7387\uff08\u84dd\u4e66\u4e0a\u63d0\u5230\u8fd9\u4e2alst\u6570\u7ec4\u5728\u6b63\u89c4\u6587\u732e\u5185\u53eb\u505a\u540e\u7f00\u94fe\u63a5\uff09\u3002\n\n# \u6a21\u677f\n[\u6a21\u677f](https://www.luogu.org/problem/P3808)\n\n\u6c42\u6a21\u677f\u4e32\u51fa\u73b0\u4e86\u51e0\u4e2a\uff08\u4e0d\u80fd\u7b97\u91cd\uff09\n\n```cpp\n#pragma GCC target(\"sse,sse2,sse3,sse4.1,sse4.2,popcnt,abm,mmx,avx\")\n#pragma comment(linker,\"/STACK:102400000,102400000\")\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Tree//\u5b57\u5178\u6811 \n{\n     int fail;//\u5931\u914d\u6307\u9488\n     int vis[26];//\u5b50\u8282\u70b9\u7684\u4f4d\u7f6e\n     int end;//\u6807\u8bb0\u6709\u51e0\u4e2a\u5355\u8bcd\u4ee5\u8fd9\u4e2a\u8282\u70b9\u7ed3\u5c3e \n}AC[1000000];//Trie\u6811\nint cnt=0;//Trie\u7684\u6307\u9488 \ninline void Build(string s)\n{\n        int l=s.length();\n        int now=0;//\u5b57\u5178\u6811\u7684\u5f53\u524d\u6307\u9488 \n        for(int i=0;i<l;++i)//\u6784\u9020Trie\u6811\n        {\n                if(AC[now].vis[s[i]-'a']==0)//Trie\u6811\u6ca1\u6709\u8fd9\u4e2a\u5b50\u8282\u70b9\n                   AC[now].vis[s[i]-'a']=++cnt;//\u6784\u9020\u51fa\u6765\n                now=AC[now].vis[s[i]-'a'];//\u5411\u4e0b\u6784\u9020 \n        }\n        AC[now].end+=1;//\u6807\u8bb0\u5355\u8bcd\u7ed3\u5c3e \n}\nvoid Get_fail()//\u6784\u9020fail\u6307\u9488\n{\n        queue<int> Q;//\u961f\u5217 \n        for(int i=0;i<26;++i)//\u7b2c\u4e8c\u5c42\u7684fail\u6307\u9488\u63d0\u524d\u5904\u7406\u4e00\u4e0b\n        {\n               if(AC[0].vis[i]!=0)\n               {\n                   AC[AC[0].vis[i]].fail=0;//\u6307\u5411\u6839\u8282\u70b9\n                   Q.push(AC[0].vis[i]);//\u538b\u5165\u961f\u5217 \n               }\n        }\n        while(!Q.empty())//BFS\u6c42fail\u6307\u9488 \n        {\n              int u=Q.front();\n              Q.pop();\n              for(int i=0;i<26;++i)//\u679a\u4e3e\u6240\u6709\u5b50\u8282\u70b9\n              {\n                        if(AC[u].vis[i]!=0)//\u5b58\u5728\u8fd9\u4e2a\u5b50\u8282\u70b9\n                      {\n                                AC[AC[u].vis[i]].fail=AC[AC[u].fail].vis[i];\n                                    //\u5b50\u8282\u70b9\u7684fail\u6307\u9488\u6307\u5411\u5f53\u524d\u8282\u70b9\u7684\n                                  //fail\u6307\u9488\u6240\u6307\u5411\u7684\u8282\u70b9\u7684\u76f8\u540c\u5b50\u8282\u70b9 \n                                Q.push(AC[u].vis[i]);//\u538b\u5165\u961f\u5217 \n                      }\n                      else//\u4e0d\u5b58\u5728\u8fd9\u4e2a\u5b50\u8282\u70b9 \n                      AC[u].vis[i]=AC[AC[u].fail].vis[i];\n                      //\u5f53\u524d\u8282\u70b9\u7684\u8fd9\u4e2a\u5b50\u8282\u70b9\u6307\u5411\u5f53\n                      //\u524d\u8282\u70b9fail\u6307\u9488\u7684\u8fd9\u4e2a\u5b50\u8282\u70b9 \n              }\n        }\n}\nint AC_Query(string s)//AC\u81ea\u52a8\u673a\u5339\u914d\n{\n        int l=s.length();\n        int now=0,ans=0;\n        for(int i=0;i<l;++i)\n        {\n                now=AC[now].vis[s[i]-'a'];//\u5411\u4e0b\u4e00\u5c42\n                for(int t=now;t&&AC[t].end!=-1;t=AC[t].fail)//\u5faa\u73af\u6c42\u89e3\n                {\n                         ans+=AC[t].end;\n                         AC[t].end=-1;\n                } \n        }\n        return ans;\n}\nint main()\n{\n     int n;\n     string s;\n     cin>>n;\n     for(int i=1;i<=n;++i)\n     {\n             cin>>s;\n             Build(s);\n     }\n     AC[0].fail=0;//\u7ed3\u675f\u6807\u5fd7 \n     Get_fail();//\u6c42\u51fa\u5931\u914d\u6307\u9488\n     cin>>s;//\u6587\u672c\u4e32 \n     cout<<AC_Query(s)<<endl;\n     return 0;\n}\n\n\n\n```\n\n\n",
        "postTime": 1572313771,
        "uid": 176961,
        "name": "ljh736731592",
        "ccfLevel": 5,
        "title": "\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09"
    },
    {
        "content": "\u7528\u6307\u9488\u5199\u7684,AC\u81ea\u52a8\u673a\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u53bb\u767e\u5ea6.\n```\n#include<iostream>\n#include<string>\n#include<cstring>\n#include<queue>\nusing namespace std;\nclass node\n{\npublic:\n\tnode* links[26];\n\tnode* fail;\n\tint cnt, sum;\n\tnode() {\n\t\tmemset(links, NULL, sizeof links);\n\t\tfail = NULL; cnt = 0, sum = 0;\n\t};\n\t~node() {};\n\t//\u63d2\u5165\u6a21\u5f0f\u4e32\n\tvoid Insert(string str) {\n\t\tauto f = this;\n\t\tfor (auto vi : str) {\n\t\t\tint ch = vi - 'a';\n\t\t\tif (f->links[ch] == NULL)\n\t\t\t\tf->links[ch] = new node();\n\t\t\tf = f->links[ch];\n\t\t}\n\t\t++f->cnt;\n\t}\n\t//\u521b\u5efa fail\u6307\u9488\n\tvoid buil_fail()\n\t{\n\t\tqueue<node*>qu; qu.push(this);\n\t\twhile (!qu.empty())\n\t\t{\n\t\t\tauto temp = qu.front(); qu.pop();\n\t\t\tfor (int i = 0; i < 26; i++) {\n\t\t\t\tif (temp->links[i]) {\n\t\t\t\t\tqu.push(temp->links[i]);//\u65b0\u8282\u70b9\u5165\u961f\u5217\n\t\t\t\t\tauto father = temp->fail;//\u7236\u8282\u70b9\u8f6c\u79fb\u7684\u8282\u70b9\n\t\t\t\t\tif (temp == this)\n\t\t\t\t\t\ttemp->links[i]->fail = this;\n\t\t\t\t\telse {\n\t\t\t\t\t\twhile (father) {\n\t\t\t\t\t\t\tif (father->links[i]) {\n\t\t\t\t\t\t\t\ttemp->links[i]->fail = father->links[i]; break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfather = father->fail;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (father == NULL) temp->links[i]->fail = this;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t//\u5339\u914d\u6587\u672c\u4e32\n\tvoid ac_automation(string text)\n\t{\n\t\tnode* p = this;\n\t\tfor (auto vi : text) {\n\t\t\tint ch = vi - 'a';\n\t\t\twhile (p && !p->links[ch])p = p->fail;//\u627e\u5230\u4e00\u6761\u901a\u8def  this->fail = nullptr\n\t\t\tif (p == NULL) { p = this; continue; }\n\t\t\tp = p->links[ch];\n\t\t\tauto tmp = p;\n\t\t\twhile (tmp != this) {\n\t\t\t\tif (tmp->cnt > 0) {\n\t\t\t\t\tthis->sum += tmp->cnt;\n\t\t\t\t\ttmp->cnt = -1;\n\t\t\t\t}\n\t\t\t\telse break;\n\t\t\t\ttmp = tmp->fail;\n\t\t\t}\n\t\t}\n\t}\n};\nint main(void) {\n\tnode A;\n\tint n; cin >> n;\n\twhile (n--) {\n\t\tstring str; cin >> str;\n\t\tA.Insert(str);\n\t}\n\tA.buil_fail();\n\tstring text; cin >> text;\n\tA.ac_automation(text);\n\tcout << A.sum << endl;\n\treturn 0;\n}\n```",
        "postTime": 1570333172,
        "uid": 262891,
        "name": "tq20191005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3808 \u3010\u3010\u6a21\u677f\u3011AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09\u3011"
    },
    {
        "content": "\u5b9a\u4e49\u4e00\u4e2afail\u6570\u7ec4\uff08\u76f8\u5f53\u4e8eKMP\u4e2d\u7684next\uff09\uff0c\u5b83\u4ee3\u8868\u4e86\u5982\u679c\u5728\u5f53\u524d\u6a21\u5f0f\u4e32\u4e2d\u5931\u914d\u5e94\u8be5\u8df3\u5230\u6811\u4e0a\u7684\u54ea\u4e00\u4e2a\u7ed3\u70b9\u7ee7\u7eed\u5339\u914d\u3002\u6240\u4ee5fail\u7ed3\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u5e94\u8be5\u662f\u8fd9\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u7684\u6700\u957f\u540e\u7f00\u3002\n\n\u56e0\u4e3a\u540e\u7f00\u624d\u53ef\u4ee5\u4fdd\u8bc1fail\u7ed3\u70b9\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\u90fd\u53ef\u4ee5\u5728\u4e3b\u4e32\u4e2d\u5339\u914d\uff0c\u800c\u6700\u957f\u540e\u7f00\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u843d\u4e0b\u4efb\u4f55\u4e00\u4e2a\u53ef\u4ee5\u5339\u914d\u7684\u6a21\u5f0f\u4e32\n\n#### Fail\u6307\u9488\u6784\u9020 ####\n\u9996\u5148\u5728\u6784\u9020fail\u6307\u9488\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u5b83\u7684\u51e0\u4e2a\u6027\u8d28\u3002\n\n1. \u6839\u7684\u6240\u6709\u5b50\u8282\u70b9\u7684fail\u90fd\u6307\u5411\u6839\u3002\n\n2. \u5728\u4e00\u4e2a\u8282\u70b9\u4e0d\u65ad\u5411\u4e0a\u8dd1fail\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8282\u70b9\u7684\u6df1\u5ea6\u662f\u4e0d\u65ad\u51cf\u5c0f\u7684\u3002\n\n3. \u5982\u679ca\u8282\u70b9\u7684fail\u6307\u5411\u4e86b\u8282\u70b9\uff0c\u90a3\u4e48a\u8282\u70b9\u7684t\u513f\u5b50\u7684fail\u6307\u5411b\u8282\u70b9\u7684t\u513f\u5b50\u3002\n\n#### \u5b57\u7b26\u4e32\u5339\u914d ####\n\u00a0\u63a5\u4e0b\u6765\u5230\u4e86AC\u81ea\u52a8\u673a\u5de5\u4f5c\u7684\u65f6\u5019\u4e86\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5728\u81ea\u52a8\u673a\u4e0a\u5339\u914d\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u6709\u5b57\u7b26\u4e32\u4e0a\u4e0b\u4e00\u4e2a\u5b57\u7b26\u8fd9\u4e2a\u513f\u5b50\uff0c\u5219\u8f6c\u79fb\u5230\u8fd9\u4e2a\u513f\u5b50\u8282\u70b9\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u5148\u8f6c\u79fb\u5230\u5f53\u524d\u8282\u70b9\u7684fail\uff0c\u518d\u67e5\u627efail\u662f\u5426\u6709\u4e0b\u4e00\u4e2a\u5b57\u7b26\u7684\u513f\u5b50\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nqueue<int>q;\nconst int maxN=1e6+100;\nstruct Node{\n\tint c[maxN][26],val[maxN],fail[maxN],root=0,cnt=0;\n\tint idx(char c){\n\t\treturn c-'a';\n\t}\n\tvoid insert(char s[]){\n\t\tint now=root,len=strlen(s);\n\t\tfor(int i=0;i<len;i++){\n\t\t\tint id=idx(s[i]);\n\t\t\tif(!c[now][id]) c[now][id]=++cnt;\n\t\t\tnow=c[now][id];\n\t\t}\n\t\tval[now]++;\n\t}\n\tvoid build(){\n\t\tfor(int i=0;i<26;i++)if(c[root][i]){\n\t\t\tfail[c[root][i]]=root;q.push(c[root][i]);\n\t\t}\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tfor(int i=0;i<26;i++)\n\t\t\t\tif(c[x][i]){\n\t\t\t\t\tfail[c[x][i]]=c[fail[x]][i];\n\t\t\t\t\tq.push(c[x][i]);\n\t\t\t\t}else c[x][i]=c[fail[x]][i];\n\t\t}\n\t}\n\tint query(char s[]){\n\t\tint now=root,ans=0,len=strlen(s);\n\t\tfor(int i=0;i<len;i++){\n\t\t\tint id=idx(s[i]);\n\t\t\tnow=c[now][id];\n\t\t\tfor(int t=now;t&&val[t]!=-1;t=fail[t]) ans+=val[t],val[t]=-1;\n\t\t}\n\t\treturn ans;\n\t}\n}AC;\nint n;\nchar p[maxN];\nint main(){\n\tfreopen(\"testdata.in\",\"r\",stdin);\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%s\",p),AC.insert(p);\n\tAC.build();\n\tscanf(\"%s\",p);printf(\"%d\\n\",AC.query(p));\n}\n```",
        "postTime": 1549548399,
        "uid": 39638,
        "name": "\u6851\u6811\u4e0b\u7684\u9082\u9005",
        "ccfLevel": 7,
        "title": "AC\u81ea\u52a8\u673a"
    }
]