[
    {
        "content": "\u8fd9\u9053\u9898\u770b\u4f3c\u5f88\u957f\u5176\u5b9e\u4e5f\u4e0d\u662f\u5341\u5206\u7684\u96be\n\n\u5982\u679c\u6211\u4eec\u53bb\u6b63\u8fd9\u6467\u6bc1 \u60f3\u60f3\u90fd\u6709\u70b9\u56f0\u96be\n\n\u8981\u4e0d \u6211\u4eec\u4f7f\u7528\u9006\u5411\u601d\u7ef4\uff1f\n\n\u6ca1\u9519 \u8fd9\u9053\u9898\u5c31\u628a\u6467\u6bc1\u8f6c\u6362\u6210\u4fee\u5efa~~\uff08\u548c\u5e73\u5c31\u662f\u597d\uff09~~\n\n\u5229\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u8054\u901a\u5c31\u597d\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define f(i,a,b) for(register int i=a;i<=b;i++)\n#define fd(i,a,b) for(register int i=a;i>=b;i--)\nusing namespace std;\nint k,n,m,head[400002],tot,broken[400002],ans[400003];\nint father[400003];\nstruct Node\n{\n    int next,node,from;\n}h[400002];\ninline void Add_Node(int u,int v)\n{\n    h[++tot].from=u;\n    h[tot].next=head[u];\n    head[u]=tot;\n    h[tot].node=v;\n}\nbool Broken[400001];\ninline int Get_father(int x)\n{\n    if(father[x]==x)    return x;\n    return father[x]=Get_father(father[x]);\n    //\u4f60\u7238\u7238\u7684\u7238\u7238\u5c31\u662f\u4f60\u7684\u7238\u7238\u2014\u2014\u53cd\u67e5\u7406\u9a6c\u7279\u2014\u2014\u5e76\u67e5\u96c6 \n}\ninline void hb(int u,int v)\n{\n    u=Get_father(u),v=Get_father(v);\n    if(u!=v)    father[v]=u;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    f(i,0,n)\n        father[i]=i,head[i]=-1;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316 \n    f(i,1,m)\n    {\n        int x,y;\n        cin>>x>>y;\n        Add_Node(x,y);//\u50a8\u5b58\u56fe \n        Add_Node(y,x);//\u7531\u4e8e\u65e0\u5411\u56fe\u5b58\u4e24\u904d \n    }\n    cin>>k;\n    f(i,1,k)\n    {\n        cin>>broken[i];\n        Broken[broken[i]]=1;//\u6807\u8bb0\u7838\u574f\u4e86 \n    }\n    int total=n-k;//\u521d\u59cb\u5316\u4e3a\u6240\u6709\u70b9\u90fd\u662f\u5355\u72ec\u5b58\u5728\u7684 \n    f(i,1,2*m)//\u67092*m\u4e2a\u8fb9 \n        if(!Broken[h[i].from] && !Broken[h[i].node] && Get_father(h[i].from)!=Get_father(h[i].node))\n\t\t{//\u8981\u662f\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u6ca1\u7838\u574f \u800c\u4e14\u4ed6\u4eec\u5e76\u6ca1\u6709\u8054\u901a\n            total--;//\u8fde\u4e00\u6761\u8fb9 \u51cf\u4e00\u4e2a\u8054\u901a\u4f53 \n            hb(h[i].from,h[i].node);\n        }\n    ans[k+1]=total;//\u5f53\u524d\u5c31\u662f\u6700\u540e\u4e00\u6b21\u7834\u574f\u540e\u7684\u4e2a\u6570 \n    fd(i,k,1)\n    {\n        //total=0 //\u8fd9\u91cc\u4e0d\u9700\u8981\u521d\u59cb\u5316 \u9700\u8981\u4ece\u4e0a\u4e00\u6b21\u7684\u5e9f\u589f\u4e0a\u4fee\u5efa \n        total++;//\u4fee\u590d\u4e00\u4e2a\u70b9 \u8054\u901a\u4f53+1 \n        Broken[broken[i]]=0;//\u4fee\u590d \n        for(int j=head[broken[i]];j!=-1;j=h[j].next)//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5b50\u70b9 \n        {\n            if(!Broken[h[j].node] && Get_father(broken[i])!=Get_father(h[j].node))\n            {\n                total--;//\u8fde\u4e00\u8fb9\u51cf\u4e00\u4e2a\u8054\u901a\u5757 \n                hb(broken[i],h[j].node);//\u5408\u5e76\u8fd9\u4e24\u4e2a\u70b9 \n            }\n        }\n        ans[i]=total;\n    }\n    f(i,1,k+1)    cout<<ans[i]<<endl;\n    return 0;\n}\n```",
        "postTime": 1507032165,
        "uid": 47959,
        "name": "\u78b3\u516d\u7075",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int MAXI=4e5+4;\nint f[MAXI],head[MAXI],h[MAXI],ans[MAXI],En=0;//f\u4e3a\u5e76\u67e5\u96c6\uff0ch\u4e3a\u6253\u51fb\u70b9\u5b58\u50a8\u7684\u6570\u7ec4\uff0cans\u4e3a\u6bcf\u6b21\u6253\u51fb\u540e\u7684\u7b54\u6848 \nbool e[MAXI];            //e\u6765\u5224\u65ad\u662f\u5426\u88ab\u6253\u51fb\u6389 \nint find(int x)\n{\n    if(x!=f[x]) f[x]=find(f[x]); //\u5e76\u67e5\u96c6\u57fa\u672c\u51fd\u6570 \n    return f[x];\n}\nstruct edge\n{\n    int from;\n    int to;                 //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u90bb\u63a5\u8868 \n    int next;\n}a[MAXI];\nvoid insert(int u,int v)\n{                             //\u90bb\u63a5\u8868\u5b58\u50a8\u6570\u636e \n    a[En].from=u;\n    a[En].next=head[u];    \n    a[En].to=v;\n    head[u]=En;\n    En++;\n}\nint main()\n{\n    int n,m,k,x,y,tot,i,u;\n    cin>>n>>m;\n    for(i=0;i<n;++i) \n    {\n        f[i]=i;\n        head[i]=-1;\n    }\n    for(i=0;i<m;++i)\n    {\n        cin>>x>>y;\n        insert(x,y);insert(y,x);         //\u53cc\u5411\u5b58\u50a8\u6570\u636e\n    }\n    cin>>k;\n    tot=n-k;    //\u6253\u51fbk\u6b21\u540e\u6240\u5269\u4e0b\u7684\u70b9 \n    for(i=1;i<=k;i++)\n    {\n        cin>>x;\n        e[x]=true;    //\u88ab\u6253\u51fb\u6389\u540e\u5c31true\uff0c\u5e76\u628a\u6253\u51fb\u7684\u70b9\u5b58\u50a8\u5230h\u4e2d \n        h[i]=x;\n    }\n    for(i=0;i<2*m;i++)\n    {\n        if(e[a[i].from]==false&&e[a[i].to]==false) //\u5982\u679c\u90fd\u6ca1\u6709\u88ab\u6253\u51fb \n        {\n            if(find(a[i].from)!=find(a[i].to))    //\u4e14\u4e4b\u524d\u6ca1\u6709\u8fde\u901a \n            {\n                tot--;            //\u5408\u5e76\u8fd9\u4e24\u4e2a\u70b9\u5e76\u5728\u603b\u6570\u51cf\u53bb\u4e00\u4e2a \n                f[find(a[i].from)]=f[find(a[i].to)];\n            }\n        }\n    }\n    ans[k+1]=tot;  //\u8fd9\u65f6\u4e3a\u6253\u51fbk\u6b21\u4e4b\u540e\u6240\u5269\u4e0b\u7684\u8fde\u901a\u5757 \n    for(int t=k;t>=1;t--)  //\u4ece\u540e\u5f80\u524d\u201c\u4fee\u590d\u201d \n    {\n        u=h[t]; \n        tot++;   //\u56e0\u4e3a\u201c\u4fee\u590d\u201d\u8fd9\u4e2a\u70b9\u6240\u4ee5\u591a\u4e86\u4e00\u4e2a\u70b9\uff0c\u73b0\u5728\u603b\u6570\u52a0 1 \n        e[u]=false;  //false\u8868\u793a\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u6253\u51fb \n        for(i=head[u];i!=-1;i=a[i].next) //\u90bb\u63a5\u8868\u904d\u5386\u5b83\u6240\u8fde\u7740\u7684\u70b9 \n        {\n            if(e[a[i].to]==false&&f[find(u)]!=f[find(a[i].to)]) //\u5982\u679c\u88ab\u8fde\u901a\u7684\u70b9\u6ca1\u6709\u88ab\u6253\u51fb\u5e76\u4e14\u4e4b\u524d\u6ca1\u6709\u8fde\u901a \n            {\n                tot--;  //\u5408\u5e76 \n                f[find(a[i].to)]=f[find(u)];  //\u6ce8\u610f\u5c3d\u91cf\u4e0d\u8981\u5230\u8fc7\u6765\u8d4b\u503c\uff0c\u8fd9\u6837\u4f1a\u4e0d\u65ad\u6539\u53d8father \n            }\n        }\n        ans[t]=tot; //\u6bcf\u201c\u4fee\u590d\u201d\u4e00\u4e2a\u70b9\u540e\u7684\u6709\u7684\u8fde\u901a\u5757 \n    }\n    for(i=1;i<=k+1;++i) cout<<ans[i]<<endl;\n    return 0;\n}\n```",
        "postTime": 1506308697,
        "uid": 34642,
        "name": "\u82b1\u5f00\u4f9d\u7136\u7231Qu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u8bfb\u5b8c\u9898\u76ee\uff0c\u6211\u4eec\u9996\u5148\u4f1a\u60f3\u5230\u6bcf\u6b21\u5220\u53bb\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u91cd\u65b0\u5efa\u56fe\uff0c\u7b97\u51fa\u8054\u901a\u5757\u7684\u4e2a\u6570\u3002\u7136\u800c\uff0c\u8fd9\u6839\u672c\u4e0d\u4fe1\uff0c\u65f6\u95f4\u4e0a\u8fc7\u4e0d\u53bb\uff0c\u8fd9\u65f6\u5c31\u5f97\u8ba9\u6211\u4eec\u5c06\u5934\u65cb\u8f6c180\u5ea6\uff0c\u4ece\u540e\u5f80\u524d\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7ecf\u5e38\u7528\u7684\u63a5\u8fb9\u4e86\u3002\u5f53\u7136\uff0c\u518d\u63a5\u8fb9\u524d\u9700\u8981\u9884\u5904\u7406\uff0c\u5f53\u524d\u8fd9\u6761\u8fb9\u5e94\u5f53\u5728\u4ec0\u4e48\u65f6\u5019\u63a5\u4e0a\uff0c\u7ed9\u8fb9\u6807\u4e0a\u5e8f\u53f7\uff0c\u7136\u540e\u4f9d\u6b21\u5904\u7406\u3002\u6700\u540e\u9006\u5e8f\u8f93\u51fa\uff0c\u5c31\u53ef\u4ee5\u5566\u5566\u5566\u3002\u5982\u679c\u8fd8\u4e0d\u61c2\uff0c\u8bf7\u770b\u4ee3\u7801\u3002\n\nPS\uff1a\u5e1d\u56fd\u653b\u5360\u7684\u5730\u76d8\u4e0d\u7b97\u662f\u53cd\u6297\u519b\u7684\u5730\u76d8\u3002\n\n```CPP\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define MAXN 200005\nusing namespace std;\nint n,m,fa[MAXN*2],K,D[MAXN*2],vis[MAXN*2],ans[2*MAXN],num;\n//num\u8868\u793a\u603b\u8054\u901a\u5757\u7684\u4e2a\u6570\uff0cans[]\u8bb0\u4f4f\u7b54\u6848 \uff0cvis[]\u7ed9\u70b9\u6807\u53f7 \uff0cD[]\u88ab\u653b\u5360\u7684\u70b9 \nstruct xcw{\n    int x,y,c;//x,y\u8868\u793a\u8fd9\u6761\u8fb9\u7684\u4e24\u7aef\u70b9\uff0cc\u8868\u793a\u8fd9\u6761\u8fb9\u7684\u5e8f\u53f7 \n    bool operator <(const xcw b)const{return c<b.c;}//\u6309\u5e8f\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n}a[MAXN];\nint read(){\n    int ret=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9') ret=ret*10+ch-48,ch=getchar();\n    return ret*f;\n}\nint get(int x){return fa[x]==x?x:fa[x]=get(fa[x]);}\nvoid mer(int x,int y){\n    int fx=get(x),fy=get(y);\n    if(fx!=fy) fa[fx]=fy,num--;//\u4e24\u8054\u901a\u5757\u5408\u5e76\uff0c\u603b\u8054\u901a\u5757num-- \n}\nint main(){\n//    freopen(\"a.in\",\"r\",stdin);\n//    freopen(\"a.out\",\"w\",stdout);\n    n=read();m=read();num=n;\n    for(int i=0;i<n;i++) fa[i]=i;\n    for(int i=1;i<=m;i++) a[i]=(xcw){read(),read(),0};\n    K=read();\n    for(int i=1;i<=K;i++) vis[D[i]=read()]=K-i+1;//\u7ed9\u70b9\u6807\u53f7\uff0c\u4ece\u5927\u5230\u5c0f \n    for(int i=1;i<=m;i++) a[i].c=max(vis[a[i].x],vis[a[i].y]);//\u5f53\u524d\u8fb9\u7684\u5e8f\u53f7\u662f\u4e24\u4e2a\u70b9\u4e2d\u6700\u5927\u7684\u90a3\u4e2a \n    sort(a+1,a+1+m);//\u7ed9\u70b9\u6309\u5e8f\u53f7\u5927\u5c0f\u6392\u5e8f\uff0c\u65b9\u4fbf\u5904\u7406\uff0c\u4f18\u5316\u6548\u7387 \n    for(int i=0,j=1;i<=K;i++){//\u679a\u4e3e\u88ab\u653b\u5360\u7684\u661f\u7403\u5e8f\u53f7 \n        for(;a[j].c==i;j++) mer(a[j].x,a[j].y);//\u5c06\u5f53\u524d\u5e8f\u53f7\u5168\u90e8\u5408\u5e76 \n        ans[i]=num-(K-i);//K-i\u662f\u5e1d\u56fd\u653b\u5360\u7684\u661f\u7403\u4e2a\u6570\uff08\u56e0\u4e3a\u662f\u9006\u5e8f\u5904\u7406\u7684\uff09 \n    }\n    for(int i=K;i>=0;i--) printf(\"%d\\n\",ans[i]);//\u9006\u5e8f\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1513841373,
        "uid": 36297,
        "name": "Golden_Winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\t\u8fd9\u9053\u9898\u867d\u7136\u662f\u6c5f\u82cf\u7701\u9009\uff0c\u4f46\u662f\u9898\u76ee\u5b9e\u9645\u5199\u8d77\u6765\uff0c\u53ea\u8981\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u5c31\u597d\u4e86\u3002\n    \u4f46\u662f\u5982\u679c\u6309\u7167\u5e38\u89c4\u601d\u8def\u7684\u8bdd\uff0c\u5e76\u67e5\u96c6\u7684\u5220\u70b9\u64cd\u4f5c\u662f\u5f88\u96be\u5b9e\u73b0\u7684\uff08\u81f3\u5c11\u672c\u849f\u84bb\u5199\u4e0d\u51fa\u6765\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u9006\u5411\u601d\u7ef4\uff0c\u5c06\u201c\u5408\u5e76 -> \u62c6\u6bc1\u201d \u6539\u4e3a\u201c\u62c6\u6bc1 -> \u4fee\u590d\u201d\u3002\n    \u5927\u81f4\u601d\u8def\u5982\u4e0b\uff1a\n\tFirst of all \uff0c\u6211\u4eec\u5148\u5c06\u6240\u6709\u7684\u70b9\u8bfb\u5165\uff0c\u7136\u540e\u5b58\u597d;\n    Next , \u6211\u4eec\u628a\u6240\u6709\u8981\u6467\u6bc1\u7684\u70b9\u4e5f\u8bfb\u5165\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u597d\uff1b\n    Moreover \uff0c \u6211\u4eec\u9006\u5411\u56de\u63a8\uff0c\u5047\u5982\u6240\u6709\u7684\u8981\u88ab\u6467\u6bc1\u7684\u70b9\u90fd\u5df2\u7ecf\u88ab\u6467\u6bc1\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06\n    \u6240\u6709\u7684\u8981\u88ab\u6467\u6bc1\u7684\u70b9\u6467\u6bc1\uff0c\u5e76\u4e14\u5c06\u5e76\u67e5\u96c6\u5408\u5e76\u597d\uff0c\u7528\u4e00\u4e2a\u53d8\u91cftot\u8bb0\u5f55\n    \u5408\u5e76\u540e\u7684\u8fde\u901a\u5757\u7684\u4e2a\u6570\uff08\u5177\u4f53\u64cd\u4f5c\uff0c\u6ce8\u91ca\u91cc\u6709\uff09\uff0c\u8fd9\u5c31\u662f\u6467\u6bc1\u5b8c\u540e\u6700\n    \u540e\u7684\u7b54\u6848\uff1b\n    In the end \uff0c\u6211\u4eec\u4ece\u6700\u540e\u4e00\u6b21\u88ab\u6467\u6bc1\u7684\u70b9\u5f00\u59cb\u8fdb\u884c\u201c\u65f6\u5149\u5012\u6d41\u201d\uff0c\u5c31\n    \u662f\u8ba9\u88ab\u6467\u6bc1\u7684\u70b9\u4e00\u4e2a\u4e2a\u52a0\u5165\u56de\u8fd9\u4e2a\u5e76\u67e5\u96c6\u4e2d\uff08\u6807\u51c6\u7684\u5e76\u67e5\u96c6\u52a0\u70b9\u64cd\u4f5c\n    \u5566\uff09,\u5e76\u4e14\u4e0d\u65ad\u5408\u5e76\uff0c\u5e76\u8bb0\u5f55\u8fde\u5757\u7684\u4e2a\u6570\uff0c\u7528ans\u6570\u7ec4\u5b58\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std ;\n\nconst int N = 4e5 + 4 ;//\u5b9a\u4e49\u6570\u7ec4\n\nbool e[N] ;//\u7528\u4e8e\u6807\u8bb0\u8fd9\u4e2a\u70b9\u6709\u6ca1\u6709\u88ab\u6467\u6bc1\nint n , m , k , tot , x , y ;\nint En , fa[N] , head[N] , broken[N] , ans[N] ;\n//En\u548chead\u6570\u7ec4\u662f\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\u65f6\u7528\u7684 \uff0cfa\u6570\u7ec4\u662f\u5e76\u67e5\u96c6 \uff0cbroken\u6570\u7ec4\u662f\u7528\u4e8e\u8bb0\u5f55\u88ab\u6467\u6bc1\u7684\u70b9 \uff0cans\u6570\u7ec4\u662f\u7528\u4e8e\u8bb0\u5f55\u7b54\u6848\nstruct slw{\n\tint from , next , to ;\n} edge[N] ;//\u7ed3\u6784\u4f53\u7528\u4e8e\u94fe\u5f0f\u524d\u5411\u661f\uff08\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u53eb\u201cslw\u201d\uff0c\u4eba\u540d\uff09\n// inline int read(){\n// \tchar ch = getchar() ; \n// \tint num = 0 , f = -1 ;\n// \twhile(ch < '0' || ch > '9'){ if(ch == '-') f = -1 ; ch = getchar(); }\n// \twhile(ch >= '0' && ch <= '9'){ num = num * 10 + (ch - '0') ; ch = getchar(); }\n// \treturn num * f ;\n// }\n//\u8fd9\u662f\u5feb\u8bfb \uff0c \u867d\u7136\u6211\u4e0d\u592a\u559c\u6b22\u7528\u4f46\u8fd8\u662f\u5199\u4e0a\u4e86\uff0c\u65b9\u4fbf\u559c\u6b22\u5feb\u8bfb\u7684\u5de8\u5de8\u76f4\u63a5\u590d\u5236\ninline int insert(int u , int v){\n\tedge[++ En].from = u ;\n\tedge[En].next = head[u] ;\n\tedge[En].to = v ;\n\thead[u] = En ;\n}//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\ninline int find(int i){ return fa[i] == i ? i : fa[i] = find(fa[i]) ; }\n//\u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c\uff0c\u7528\u4e8e\u53d6\u5f97\u5bf9\u5e94\u70b9\u7684\u7236\u8282\u70b9\uff0c\u8bb0\u5f97\u52a0\u4f18\u5316\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6\nint main(void){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t\tfa[i] = i;\n\t//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\n\tfor(int i = 1 ; i <= m ; i ++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tinsert(x , y) , insert(y , x);\n\t}//\u8bfb\u5165\u6240\u6709\u7684\u70b9\u5e76\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u53cc\u5411\u5b58\u56fe\n\tscanf(\"%d\",&k);\n\ttot = n - k ;//tot\u662f\u8fd8\u5269\u4e0b\u7684\u8fde\u901a\u5757\u7684\u4e2a\u6570\uff0c\u6700\u5f00\u59cb\u6ca1\u6709\u8054\u901a\u65f6\u6bcf\u4e00\u4e2a\u70b9\u662f\u4e00\u4e2a\u8fde\u901a\u5757\n\tfor(int i = 1 ; i <= k ; i ++){\n\t\tscanf(\"%d\",&x);\n\t\te[x] = true ;//\u6807\u8bb0\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u6467\u6bc1\n\t\tbroken[i] = x ;//\u8bb0\u5f55\u8fd9\u4e2a\u88ab\u6467\u6bc1\u7684\u70b9\n\t}\n\tfor(int i = 1 ; i <= m * 2 ; i ++){\n\t\tif(e[edge[i].from] == false && e[edge[i].to] == false){\n\t\t\t//\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u90fd\u6ca1\u6709\u88ab\u6467\u6bc1\n\t\t\tif(fa[find(edge[i].from)] != fa[find(edge[i].to)]){\n\t\t\t\t//\u5e76\u4e14\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u524d\u6ca1\u6709\u5408\u5e76\n\t\t\t\t//\u6240\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u70b9\u5408\u5e76\u5230\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\n\t\t\t\ttot -- ;//\u5408\u5e76\u540e\u8fde\u901a\u5757\u7684\u4e2a\u6570\u5c11\u4e00\n\t\t\t\tfa[find(edge[i].from)] = fa[find(edge[i].to)];//\u5408\u5e76\n\t\t\t}\n\t\t}\n\t}\n\tans[k + 1] = tot ;//\u6240\u6709\u8981\u88ab\u6467\u6bc1\u7684\u70b9\u90fd\u88ab\u6467\u6bc1\u5b8c\u540e\u5269\u4e0b\u7684\u8fde\u901a\u5757\u7684\u4e2a\u6570\n\tfor(int i = k ; i >= 1 ; i --){//\u4ece\u540e\u5f80\u524d\u8ba9\u201c\u65f6\u5149\u5012\u6d41\u201d\n\t\tx = broken[i] ;\n\t\ttot ++ ;//\u56e0\u4e3a\u4fee\u590d\u4e86\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u8fde\u901a\u5757\u7684\u4e2a\u6570\u52a0\u4e00\n\t\te[x] = false ;//\u4fee\u590d\n\t\tfor(int j = head[x] ; j != 0 ; j = edge[j].next){\n\t\t//\u94fe\u5f0f\u524d\u5411\u661f\u7684dfs\uff0c\u67e5\u627e\u4e0e\u5176\u76f8\u8fde\u7684\u70b9\n\t\t\tif(e[edge[j].to] == false && fa[find(x)] != fa[find(edge[j].to)]){\n\t\t\t\t//\u5982\u679c\u4e0e\u8fd9\u4e2a\u88ab\u4fee\u590d\u70b9\u8054\u901a\u7684\u70b9\u6ca1\u6709\u88ab\u6467\u6bc1\u4e14\u5b83\u4eec\u4e24\u4e2a\u70b9\u6ca1\u6709\u8054\u901a\n\t\t\t\ttot -- ;//\u8fde\u901a\u540e\u8fde\u901a\u5757\u7684\u4e2a\u6570\u51cf\u5c11\u4e00\n\t\t\t\tfa[find(x)] = fa[find(edge[j].to)] ;//\u5408\u5e76\n\t\t\t}\n\t\t}\n\t\tans[i] = tot ;//\u4fee\u590d\u5b8c\u8fd9\u4e2a\u70b9\u540e\uff0c\u8fde\u901a\u5757\u7684\u4e2a\u6570\n\t}\n\tfor(int i = 1 ; i <= k + 1 ; i ++)\n\t\tprintf(\"%d\\n\",ans[i]);//\u8f93\u51fa\n\treturn 0;\n}\n```\n",
        "postTime": 1573544231,
        "uid": 47864,
        "name": "\u521d\u89c1\u6708",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\uff0c\u9006\u5e8f\u505a\uff08\u5373\u5148\u5047\u8bbe\u7ed9\u7684k\u4e2a\u661f\u7403\u5168\u90fd\u88ab\u70b8\uff0c\u6c42\u51fa\u6b64\u65f6\u7684\u8054\u901a\u5757\u4e2a\u6570\uff0c\u5c31\u662f\u7ecf\u8fc7k\u6b21\u6253\u51fb\u7684\u8054\u901a\u5757\u4e2a\u6570\u3002\u7136\u540e\u518d\u52a0\u4e0a\u6700\u540e\u4e00\u4e2a\u88ab\u70b8\u7684\u661f\u7403\uff0c\u5c31\u6c42\u51fa\u4e86\u7ecf\u8fc7k-1\u6b21\u6253\u51fb\u7684\u8054\u901a\u5757\u4e2a\u6570\u3002\u3002\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u540e\u628a\u6240\u6709\u70b9\u90fd\u52a0\u8fdb\u53bb\uff0c\u5c31\u6c42\u51fa\u4e86\u7ecf\u8fc70\u6b21\u6253\u51fb\u540e\u8fde\u540c\u5757\u4e2a\u6570\uff09\n\n\n\n\n\n\n        \n\n```cpp\ntype \nint=longint;\npoint=^note; // \u70b9\u592a\u591a\uff0c\u7528\u94fe\u8868\u50a8\u5b58\nnote=record\n    ends:int;\n    next:point;\n    end;\nconst \nmm=200000;\nmn=400000;\nvar \nx,y,n,m,i,ans,k,u,ans0:int;\np:array[1..mn]of point;\na:array[1..mn]of int;\nhui:array[1..mn]of boolean;\nf:array[1..mn]of int;\nansi:array[1..mn]of int;\nprocedure make(x,y:int);\nvar t:point;\nbegin \nt:=p[x];\nnew(p[x]);\np[x]^.ends:=y;\np[x]^.next:=t;\nend;\nfunction fa(x:int):int;\nbegin \nif f[x]<>x then f[x]:=fa(f[x]);\nexit(f[x]);\nend;\nprocedure dodo(x:int);  \u5e76\u5165\u7f16\u53f7\u4e3ax\u7684\u70b9\uff08\u5e76\u67e5\u96c6\uff09\nvar t:point;\nu:int;\nbegin \n        t:=p[x];\n        while t<>nil do \n            begin \n            u:=t^.ends;\n            if not hui[u] then \n                begin     \n                x:=fa(x);y:=fa(u);\n                if x<>y then \n                    begin f[y]:=x; ans:=ans-1; end;   \n                end;\n                t:=t^.next;\n            end;\nend;\nbegin \nreadln(n,m);\nans:=n;\nfor i:=1 to n do f[i]:=i;\nfor i:=1 to m do \n    begin \n    readln(x,y);\n    make(x,y);\n    make(y,x);\n    end;\nreadln(k);\nfor i:=1 to k do  \n    begin \n    readln(a[i]);\n    hui[a[i]]:=true;\n    end;\nfor i:=0 to n-1 do \n    if not hui[i] then dodo(i);\nans0:=ans-k;  // \u522b\u5fd8\u4e86\u6709k\u4e2a\u661f\u7403\u88ab\u70b8\u4e86\uff0c\u4e0d\u5b58\u5728\u4e86\uff0c\u4e5f\u4e0d\u7528\u8003\u8651\u4ec0\u4e48\u8054\u901a\u5757\u4e86\uff0c\u51cf\u6389\nfor i:=k downto 1 do \n    begin \n    hui[a[i]]:=false;\n    dodo(a[i]);\n    ansi[i]:=ans-i+1;\n    end;\nfor i:=1 to k do writeln(ansi[i]);\nwriteln(ans0);\nend.\n\n```",
        "postTime": 1491652449,
        "uid": 25199,
        "name": "A\u5929\u5929t",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u4e00\u4e2a\u5012\u8fc7\u6765\u7684\u5e76\u67e5\u96c6\uff0c\u6bd4\u8f83\u50cf[**P1653 \u7334\u5b50**](https://www.luogu.org/problemnew/show/P1653)\n\n\u672c\u9898\u7684\u76ee\u7684\u662f\u5404\u4e2a\u65f6\u95f4\u6c42\u8054\u901a\u5757\u7684\u4e2a\u6570\uff0c\u4ece\u6700\u540e\u65f6\u523b\u5f80\u524d\u505a\uff0c\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u72b6\u6001\u5373\u88ab\u7834\u574f\u540e\u7684\u56fe\u3002\n\n\u4e3b\u8981\u601d\u60f3\u662f\uff0c\u5e76\u67e5\u96c6\u4e2d\u5904\u4e8e\u4e00\u4e2a\u8054\u901a\u5757\u7684\u7956\u5148\u7ed3\u70b9\u76f8\u7b49\uff0c\u5f53\u4efb\u610f\u7956\u5148\u4e0d\u540c\u4e24\u4e2a\u8054\u901a\u5757\u8054\u901a\u65f6\uff0c\u8054\u901a\u5757\u4f1a\u51cf\u5c11\u4e00\u4e2a\uff08\u540c\u65f6\u5f53\u7834\u574f\u7684\u88ab\u6062\u590d\u65f6\u4f1a\u589e\u52a0\u4e00\u4e2a\uff09\uff0c\u901a\u8fc7\u8fd9\u79cd\u64cd\u4f5c\u53ef\u4ee5\u77e5\u9053\u76ee\u524d\u6709\u591a\u5c11\u4e2a\u8054\u901a\u5757\u3002\n\n\u800c\u672c\u9898\u53ea\u9700\u8981\u77e5\u9053\u662f\u5426\u5728\u4e00\u4e2a\u5e76\u67e5\u96c6\u4e2d\u5c31\u53ef\u77e5\u9053\u662f\u5426\u589e\u5220\u8054\u901a\u5757\u4e86\uff0c\u56e0\u6b64\u6838\u5fc3\u7b97\u6cd5\u4e0d\u662f\u5f88\u96be\u3002\n\n\n\u5177\u4f53\u64cd\u4f5c\u8bf4\u660e\u9644\u5728\u4ee3\u7801\u91cc\n\n\u672c\u9898\u6ce8\u610f\u4e8b\u9879\n\n**1. \u5f53\u8c03\u7528\u7956\u5148\u65f6\uff0c\u5343\u4e07\u6ce8\u610f\u7528find\u51fd\u6570\u800c\u4e0d\u662fs\u6570\u7ec4**\n\n**2. \u672c\u9898\u7684\u4e0b\u6807\u662f\u4ece$0$\u5f00\u59cb\u5230$n-1$\u7684\uff0c\u6ce8\u610f\u8d8a\u754c**\n\n```cpp\n#include<cstdio>\n#include<cstring>\nint s[400001];//\u5e76\u67e5\u96c6\u7956\u5148\u6570\u7ec4\nstruct node\n{\n    int n;\n    node *next;//\u94fe\u8868\u5b58\u56fe\uff08\u6216\u4f7f\u7528\u524d\u5411\u661f\uff09\n    node(int n)\n    {\n        this->n=n;\n        next=NULL;\n    }\n    node()\n    {\n        next=NULL;\n    }\n};\nnode head[400001],*tail[400001];//\u7528\u4e8e\u5b58\u56fe\nint b[400001];//b[i]\u5b58\u7684\u662f\u5f53\u65f6\u95f4\u4e3ai\u65f6\u7834\u574f\u7684\u54ea\u4e2a\u70b9\nbool g[400001];//g[i]\u8868\u793a\u73b0\u5728i\u662f\u5426\u5728\u56fe\u4e2d\nbool cnt[400001];//\u6570\u8054\u901a\u5757\u65f6\u662f\u5426\u88ab\u6570\u8fc7\nint ans[400001];//ans[i]\u5b58\u50a8\u65f6\u523b\u4e3ai\u65f6\u8054\u901a\u5757\u4e2a\u6570\uff0cans[0]\u5b58\u521d\u59cb\u503c\nint my_find(int x)\n{\n    if(s[x]==x)\n        return x;\n    return s[x]=my_find(s[x]);//\u9012\u5f52\u8def\u5f84\u538b\u7f29\n}\nvoid my_union(int x,int y)\n{\n    s[my_find(y)]=my_find(x);\n}\nint main()\n{\n    memset(cnt,0,sizeof(cnt));\n    memset(g,true,sizeof(g));\n    int n,m,x,y;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++)//\u521d\u59cb\u5316\u5e76\u67e5\u96c6\u548c\u94fe\u8868\n    {\n        s[i]=i;\n        tail[i]=&head[i];\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        tail[x]->next=new node(y);\n        tail[y]->next=new node(x);\n        tail[x]=tail[x]->next;\n        tail[y]=tail[y]->next;\n    }\n    int k;\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&b[i]);\n        g[b[i]]=0;//i\u65f6\u523bb[i]\u4e0d\u5728\u56fe\u4e2d\n    }\n    for(int i=0;i<n;i++)//\u6700\u7ec8\u72b6\u6001\u4e0b\u5269\u4f59\u591a\u5c11\u4e2a\u8054\u901a\u5757\uff0c\u4e4b\u540e\u4e5f\u4f1a\u7528\u5230\n    {\n        if(g[i]==false)//\u8d77\u70b9\u6b64\u65f6\u4e0d\u5728\u56fe\u4e2d\n            continue;\n        node *p=&head[i];\n        while(p->next!=NULL)\n        {\n            p=p->next;\n            if(g[p->n]==false)//\u7ec8\u70b9\u6b64\u65f6\u4e0d\u5728\u56fe\u4e2d\n                continue;\n            my_union(p->n,i);\n        }\n    }\n    int sum=0;\n    for(int i=0;i<n;i++)\n        if(cnt[my_find(s[i])]==false)\n        {\n            sum++;//\u6570\u8054\u901a\u5757\u4e2a\u6570\n            cnt[my_find(s[i])]=true;//\u8868\u793as[i]\u8fd9\u4e2a\u7956\u5148\u7684\u8054\u901a\u5757\u5df2\u7ecf\u88ab\u6570\u8fc7\n        }\n    sum-=k;//\u8868\u793a\u591a\u4f59\u7684\u88ab\u5220\u53bb\u7684\u70b9\uff0c\u7a0d\u540e\u518d\u63d2\u5165\n    ans[k]=sum;//\u8fd9\u662f\u5168\u90e8\u505a\u5b8c\u540e\u7684\n    int tmp=-1,w;\n    for(int i=k;i>=1;i--)//i\u505a\u52301\u53ef\u4ee5\u51cf\u5c11\u4e00\u5f00\u59cb\u91cd\u590d\u8fdb\u884c\u7684ans[0]\n    {\n        tmp=-1;//tmp\u610f\u601d\u662f\u51cf\u5c11\u4e86\u591a\u5c11\u4e2a\u8054\u901a\u5757\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728sum\u4e0a\u52a01\uff0c\u540e\u9762\u7684tmp\u540c\u7406-1\n        w=b[i];\n        g[w]=true;//\u5faa\u73af\u662f\u5012\u5e8f\uff0c\u8fd9\u4e2a\u65f6\u523b\u4e4b\u524d\u8be5\u70b9\u88ab\u91ca\u653e\n        node *p=&head[w];\n        while(p->next!=NULL)\n        {\n            p=p->next;\n            if(g[p->n]==false)\n                continue;\n            if(my_find(p->n)!=my_find(w))\n            {\n                tmp++;\n                my_union(p->n,w);\n            }\n        }\n        sum-=tmp;\n        ans[i-1]=sum;//\u5373\u5728i\u65f6\u523b\u5220\u70b9\u4e4b\u524d\uff0c\u7b54\u6848\u662fi-1\u7684\n    }\n    for(int i=0;i<=k;i++)\n        printf(\"%d\\n\",ans[i]);//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n\n```\n\n$Finish$",
        "postTime": 1523698271,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011\u89e3\u9898\u62a5\u544a\uff1a\u5e76\u67e5\u96c6"
    },
    {
        "content": "\n## \u4e3b\u8981\u601d\u8def\uff1a\u9006\u5411\u601d\u7ef4\n\n\u770b\u5230\u9898\u76ee\uff0c\u7b2c\u4e00\u4e2a\u611f\u89c9\uff0c\uff0c\uff0c\n\n### \u8fde\u901a\u5757\uff1f\uff1f\uff1f\n\n\u6211\u521a\u5b66\u8fc7\u7684\u641c\u7d22\u5462\uff1f\uff1f\uff1f\u6df1\u641c\u5e7f\u641c\u90fd\u53ef\u4ee5\u554aQwQ\uff01\n\n\u4f46\u5f88\u591a\u4eba\u90fd\u88ab\u56f0\u5728\u4e86\u8fd9\u4e2a\u653b\u5360\u661f\u7403\uff08\u4e5f\u5c31\u662f\u53bb\u70b9\uff09\u4e0a\u3002\n\n\u5982\u679c\u518d\u4ed4\u7ec6\u770b\u4e0b\u9898\u76ee\uff0c\u53d1\u73b0\u53ef\u4ee5\u79bb\u7ebf\u505a\u8fd9\u9053\u9898\u3002\n\n\u90a3\u4e48\u65b9\u6cd5\u6765\u4e86\uff1a\n\n\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u628a\u6240\u6709\u7684\u8fb9\u5b58\u4e0b\u6765\uff0c\u628a\u88ab\u653b\u5360\u7684\u661f\u7403\u7684\u987a\u5e8f\u5b58\u4e0b\u6765\uff0c\u5148\u628a\u6240\u6709\u4e24\u7aef\u90fd\u6ca1\u6709\u88ab\u653b\u5360\u7684\u8fb9\u52a0\u4e0a\uff0c\u5148\u6c42\u4e00\u904d\u8fde\u901a\u5757\u4e2a\u6570\u3002\u7136\u540e\u53cd\u5411\u7684\u52a0\u70b9\u52a0\u8fb9\uff0c\u8fb9\u52a0\u8fb9\u8fb9\u6c42\u8fde\u901a\u5757\u4e2a\u6570\uff0c\u628a\u7b54\u6848\u53cd\u5411\u5b58\u4e0b\u6765\uff0c\u7136\u540e\u6b63\u5411\u8f93\u51fa\u3002\n\n\u8fd9\u9898\u7ed3\u675f\u4e86\uff08\u4f2a\uff09\u3002\u4e8e\u662f\u4ee3\u7801\u5982\u4e0b\uff1a\n\n### \u4ee3\u78011\uff0820\u5206\uff09\uff1a\n\n##### \u4ee3\u7801\u89e3\u91ca\u5728\u6700\u540e\u7684\u4ee3\u7801\u4e2d\n\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n#define go(i, j, n, k) for (int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for (int i = j; i >= n; i -= k)\n#define rep(i, x) for (int i = h[x]; i; i = e[i].nxt)\n#define mn 400400\n#define inf 1 << 30\n#define ll long long\n#define ld long double\n#define fi first\n#define se second\n#define root 1, n, 1\n#define lson l, m, rt << 1\n#define rson m + 1, r, rt << 1 | 1\n#define bson l, r, rt\ninline int read(){\n    int f = 1, x = 0;char ch = getchar();\n    while (ch > '9' || ch < '0'){if (ch == '-')f = -f;ch = getchar();}\n    while (ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n    return x * f;\n}\ninline void write(int x){\n    if (x < 0)putchar('-'),x = -x;\n    if (x > 9)write(x / 10);\n    putchar(x % 10 + '0');\n}\n//This is AC head above...\nint ans[mn], n, m, k;\nstruct edge{\n    int v,nxt/*,w*/;\n} e[mn<<1];\nint h[mn],p;\ninline void add(int a,int b/*,int c*/){\n    p++;\n    e[p].nxt=h[a];\n    h[a]=p;\n    e[p].v=b;\n    //e[p].w=c;\n}\nint usd[mn];\npair<int, int> ee[mn];\nbool not_alive[mn], vis[mn], not_in[mn];\nvoid dfs(int x){\n    if(vis[x] && !not_alive[x])\n        return;\n    vis[x] = true;\n    rep(i,x){\n        if(!vis[e[i].v] && !not_alive[e[i].v])\n            dfs(e[i].v);\n    }\n}\nint main(){\n    n = read();\n    m = read();\n    go(i,1,m,1){\n        ee[i].first = read();\n        ee[i].second = read();\n    }\n    k = read();\n    memset(not_alive, false, sizeof(not_alive));\n    fo(i,k,1,1){\n        usd[i] = read();\n        not_alive[usd[i]] = true;\n    }\n    //cout << \"\\n\";\n    go(i, 1, m, 1){\n        if (!not_alive[ee[i].first] && !not_alive[ee[i].second]){\n            add(ee[i].first, ee[i].second);\n            add(ee[i].second, ee[i].first);\n            //cout << \"111111111111111\" << \"\\n\";\n            //cout << ee[i].first << \" \" << ee[i].second << \"\\n\";\n        }else{\n            not_in[i] = true;\n        }\n    }\n\n    int _ans = 0;\n\n    memset(vis, false, sizeof(vis));\n    _ans = 0;\n    go(i,0,n-1,1){\n        if(!vis[i] && !not_alive[i]){\n            dfs(i);\n            _ans++;\n        }\n    }\n    ans[k + 1] = _ans;\n\n    go(i,1,k,1){\n        not_alive[usd[i]] = false;\n        go(i,1,m,1){\n            if(not_in[i]){\n                if(!not_alive[ee[i].first] && !not_alive[ee[i].second]){\n                    add(ee[i].first, ee[i].second);\n                    add(ee[i].second, ee[i].first);\n                    //cout << i << \"\\n\";\n                }\n            }\n        }\n        memset(vis, false, sizeof(vis));\n        _ans = 0;\n        go(i,0,n-1,1){\n            if(!vis[i] && !not_alive[i]){\n                dfs(i);\n                _ans++;\n                //cout << i << \" \";\n            }\n        }\n        ans[k - i + 1] = _ans;\n        //cout << \"\\n\";\n    }\n/*\n    memset(vis, false, sizeof(vis));\n    _ans = 0;\n    go(i,0,n-1,1){\n        if(!vis[i] && !not_alive[i]){\n            dfs(i);\n            _ans++;\n        }\n    }\n    cout << \"\\n\\n\" << _ans;\n*/\n    //cout << \"\\n\";\n    go(i,1,k+1,1){\n        cout << ans[i] << \"\\n\";\n    }\n    return 0;\n}\n\n```\n\n20\u5206\uff1f\uff1f\uff1f\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\uff1f\uff1f\n\nTLE\u600e\u4e48\u529e\uff1f\uff1f\u8fd8\u6709\u4e2aRE QAQ\n\n\u7b49\u7b49\uff0cRE\u662f\u600e\u4e48\u56de\u4e8b\uff1f\n\n\u662f\u4e0d\u662f\u6808\u7a7a\u95f4\u7528\u7684\u592a\u591a\u4e86\uff1f\uff1fdfs\u4f1a\u5360\u7528\u4e00\u4e9b\u6808\u7a7a\u95f4\u3002\n\n\n### \u8fd9\u65f6\u6211\u4eec\u4f1a\u60f3\u5230\uff1a\u5e76\u67e5\u96c6\n\n\u5982\u679c\u628adfs\u627e\u8fde\u901a\u5757\u6539\u7528\u5e76\u67e5\u96c6\u627e\u8fde\u901a\u5757\uff0c\u4f1a\u7701\u4e0b\u4e00\u4e9b\u6808\u7a7a\u95f4\u548c\u4e00\u4e9b\u6dfb\u8fb9\u7684\u65f6\u95f4\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u6709\u4e86\uff1a\n\n### \u4ee3\u78012\uff0830\u5206\uff09\n\n##### \u4ee3\u7801\u89e3\u91ca\u5728\u6700\u540e\u7684\u4ee3\u7801\u4e2d\n\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n#define go(i, j, n, k) for (int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for (int i = j; i >= n; i -= k)\n#define rep(i, x) for (int i = h[x]; i; i = e[i].nxt)\n#define mn 400400\n#define inf 1 << 30\n#define ll long long\n#define ld long double\n#define fi first\n#define se second\n#define root 1, n, 1\n#define lson l, m, rt << 1\n#define rson m + 1, r, rt << 1 | 1\n#define bson l, r, rt\ninline int read(){\n    int f = 1, x = 0;char ch = getchar();\n    while (ch > '9' || ch < '0'){if (ch == '-')f = -f;ch = getchar();}\n    while (ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n    return x * f;\n}\ninline void write(int x){\n    if (x < 0)putchar('-'),x = -x;\n    if (x > 9)write(x / 10);\n    putchar(x % 10 + '0');\n}\n//This is AC head above...\nint n, m, k, usd[mn], ans[mn];\npair<int, int> ee[mn];\nbool not_alive[mn];\nstruct edge{\n    int v,nxt/*,w*/;\n} e[mn<<1];\nint h[mn],p;\ninline void add(int a,int b/*,int c*/){\n    p++;\n    e[p].nxt=h[a];\n    h[a]=p;\n    e[p].v=b;\n    //e[p].w=c;\n}\nint father[mn];\ninline int findx(int x){\n    return father[x] == x ? x : father[x] = findx(father[x]);\n}\ninline void mergex(int x,int y){\n    int xx = findx(x);\n    int yy = findx(y);\n    if (xx == yy)\n        return;\n    srand((unsigned)time(NULL));\n    if(rand()%2){\n        father[xx] = yy;\n    }else{\n        father[yy] = xx;\n    }\n}\nint main(){\n    n = read();\n    go(i,1,n,1){\n        father[i] = i;\n    }\n    m = read();\n    go(i,1,m,1){\n        ee[i].first = read();\n        ee[i].second = read();\n        add(ee[i].first, ee[i].second);\n        add(ee[i].second, ee[i].first);\n    }\n    k = read();\n    memset(not_alive, false, sizeof(not_alive));\n    fo(i,k,1,1){\n        usd[i] = read();\n        not_alive[usd[i]] = true;\n    }\n    int tot = n - k;\n    go(i,1,m,1){\n        if(!not_alive[ee[i].first] && !not_alive[ee[i].second]\n        && findx(ee[i].first) != findx(ee[i].second)){\n            tot--;\n            mergex(ee[i].first, ee[i].second);\n        }\n    }\n    ans[k + 1] = tot;\n    go(i,1,k,1){\n        tot++;\n        not_alive[usd[i]] = false;\n        go(i,1,m,1){\n            if(!not_alive[ee[i].first] && !not_alive[ee[i].second]\n            && findx(ee[i].first) != findx(ee[i].second)){\n                tot--;\n                mergex(ee[i].first, ee[i].second);\n            }\n        }\n        ans[k - i + 1] = tot;\n    }\n    go(i,1,k+1,1){\n        cout << ans[i] << \"\\n\";\n    }\n    return 0;\n}\n\n```\n\n\u5f88\u597d\uff0cRE\u6ca1\u6709\u4e86\uff0cTLE\u6ca1\u6709\u89e3\u51b3\u3002\n\n\u6211\u4eec\u7b80\u5355\u7684\u5206\u6790\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u4ee3\u7801\u7684\u590d\u6742\u5ea6\u662fO(k*(n+m))\u7684\uff0c\uff0c\uff0cWA\uff01\u597d\u5927\n\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u6211\u4eec\u54ea\u4e2a\u5730\u65b9\u8d39\u7684\u65f6\u95f4\u591a\u3002\n\n\u5bf9\uff0c\u5728\u6dfb\u70b9\u4e0e\u627e\u8fde\u901a\u5757\u6570\u91cf\u4e0a\u3002\u5982\u4f55\u4f18\u5316\u8fd9\u4e2a\u5730\u65b9\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u56fen\u4e2a\u70b9\u6ca1\u6709\u8fb9\uff0c\u4f1a\u6709\u51e0\u4e2a\u8fde\u901a\u5757\uff1f\uff1f\n\n\u662f\u4e0d\u662f\u6709n\u4e2a\uff1f\n\n\u5982\u679c\u6211\u4eec\u5728\u5176\u4e2d\u4e24\u4e2a\u70b9\u4e2d\u52a0\u4e00\u6761\u8fb9\u7684\u8bdd\uff0c\u662f\u4e0d\u662f\u8fde\u901a\u5757\u6570\u91cf\u4e3an-1\u4e2a\uff1f\n\n\u90a3\u4e48\u6211\u6bcf\u5f53\u4e00\u6761\u8fb9\u52a0\u8fdb\u53bb\u65f6\uff0c\u591a\u4e86\u4e00\u4e2a\u70b9\u52a0\u5165\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u603b\u7684\u8fde\u901a\u5757\u6570\u5c31\u4f1a-1\uff1f\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u7b97\u51fa\u52a0\u70b9\u4e4b\u524d\u7684\u8fde\u901a\u5757\u6570\uff0c\u7136\u540e\u6bcf\u52a0\u4e00\u4e2a\u70b9\uff0c\u5148\u628a\u8fde\u901a\u5757\u6570+1\uff0c\u7136\u540e\u770b\u8fd9\u4e2a\u70b9\u662f\u5426\u53ef\u4ee5\u8fde\u5165\u5176\u4ed6\u8fde\u901a\u5757\u4e2d\uff08\u6ce8\uff1a\u8fd9\u91cc\u53ea\u9700\u8981\u628a\u4e0e\u8fd9\u4e2a\u70b9\u8fde\u63a5\u7684\u8fb9\u679a\u4e3e\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\uff09\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u8fde\u901a\u5757\u6570-1\uff0c\u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u5012\u5e8f\u8bb0\u5f55\u8fde\u901a\u5757\u6570\uff0c\u6700\u540e\u6b63\u5e8f\u8f93\u51fa\u5c31\u597d\u5566\uff01\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u6709\u4e86\u2014\u2014\n\n### \u4ee3\u78013\uff08\u518d\u4e0dAC\u8fd9\u4e2a\u9898\u89e3\u5c31\u5b8c\u4e86\uff09\uff1a\n\n```cpp\n #include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n#define go(i, j, n, k) for (int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for (int i = j; i >= n; i -= k)\n#define rep(i, x) for (int i = h[x]; i; i = e[i].nxt)\n#define mn 400400\n#define inf 1 << 30\n#define ll long long\n#define ld long double\n#define fi first\n#define se second\n#define root 1, n, 1\n#define lson l, m, rt << 1\n#define rson m + 1, r, rt << 1 | 1\n#define bson l, r, rt\ninline int read(){\n    int f = 1, x = 0;char ch = getchar();\n    while (ch > '9' || ch < '0'){if (ch == '-')f = -f;ch = getchar();}\n    while (ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n    return x * f;\n}\ninline void write(int x){\n    if (x < 0)putchar('-'),x = -x;\n    if (x > 9)write(x / 10);\n    putchar(x % 10 + '0');\n}\n//This is AC head above...\nint n, m, k, usd[mn], ans[mn];\npair<int, int> ee[mn];\nbool not_alive[mn];\nstruct edge{\n    int v,nxt/*,w*/;\n} e[mn<<1];\nint h[mn],p;\ninline void add(int a,int b/*,int c*/){\n    p++;\n    e[p].nxt=h[a];\n    h[a]=p;\n    e[p].v=b;\n    //e[p].w=c;\n}\n//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nint father[mn];\ninline int findx(int x){\n    return father[x] == x ? x : father[x] = findx(father[x]);\n}\ninline void mergex(int x,int y){\n    int xx = findx(x);\n    int yy = findx(y);\n    if (xx == yy)\n        return;\n    srand((unsigned)time(NULL));//\u968f\u673a\u5408\u5e76\u9632\u6b62\u6bd2\u7624\u51fa\u9898\u4eba\u6545\u610f\u5361\u6df1\u5ea6\uff08\u81ea\u5df1\u90fd\u4e0d\u77e5\u9053\u4f1a\u600e\u4e48\u5e76\uff09\n    if(rand()%2){\n        father[xx] = yy;\n    }else{\n        father[yy] = xx;\n    }\n}\n//\u5e76\u67e5\u96c6\nint main(){\n    n = read();\n    go(i,1,n,1){\n        father[i] = i;\n    }\n    m = read();\n    go(i,1,m,1){\n        ee[i].first = read();//\u79bb\u7ebf\u5224\u65ad\u7528\n        ee[i].second = read();\n        add(ee[i].first, ee[i].second);//\u5b58\u56fe\n        add(ee[i].second, ee[i].first);\n    }\n    k = read();\n    memset(not_alive, false, sizeof(not_alive));//\u7384\u5b66\u521d\u59cb\u5316\n    fo(i,k,1,1){\n        usd[i] = read();//\u5012\u5e8f\u8bb0\u5f55\u88ab\u70b8\u7684\u987a\u5e8f\n        not_alive[usd[i]] = true;//\u8bb0\u5f55\u54ea\u4e2a\u70b9 \u6700\u540e\u88ab\u70b8\u6389\u4e86\n    }\n    int tot = n - k;//\u91cd\u70b9\uff01\u8fd9\u91cc\u8bb0\u5f55\u76ee\u524d\u5269\u7684\u70b9\u6570\n    go(i,1,m,1){//\u7136\u540e\u5148\u628a\u5b58\u6d3b\u7684\u70b9\u4e4b\u95f4\u7684\u8fb9\u8fde\u4e0a\uff0c\u653e\u5230\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u603b\u7684\u8fde\u901a\u5757\u6570-1\n        if(!not_alive[ee[i].first] && !not_alive[ee[i].second]\n        && findx(ee[i].first) != findx(ee[i].second)){\n            tot--;\n            mergex(ee[i].first, ee[i].second);\n        }\n    }\n    ans[k + 1] = tot;\n    go(i,1,k,1){\n        tot++;\n        not_alive[usd[i]] = false;\n        for (int j = h[usd[i]]; j; j = e[j].nxt){//\u679a\u4e3e\u4e0e\u8fd9\u4e2a\u70b9\u8fde\u63a5\u7684\u70b9\uff0c\u770b\u4f1a\u5408\u5e76\u51e0\u6b21\uff0c\u5408\u5e76\u51e0\u6b21\u5c31\u4f1a\u51cf\u5c11\u51e0\u4e2a\u8fde\u901a\u5757\n            if(!not_alive[e[j].v] && findx(e[j].v) != findx(usd[i])){\n                tot--;\n                mergex(e[j].v, usd[i]);\n            }\n        }\n        ans[k - i + 1] = tot;//\u5012\u5e8f\u5b58\u50a8\n    }\n    go(i,1,k+1,1){//\u6b63\u5e8f\u8f93\u51fa\n        cout << ans[i] << \"\\n\";\n    }\n    return 0;\n}\n\n```\n\n\n#### \u7b2c\u516b\u6b21\u53d1\u9898\u89e3\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u5230\u90a3\u4e9b\u4e0d\u77e5\u9053\u600e\u4e48\u53bb\u70b9\u600e\u4e48\u5220\u8fb9\u7684\u540c\u5b66",
        "postTime": 1533637013,
        "uid": 71168,
        "name": "yizimi\u8fdc\u6b23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u5f88\u4e45\u4ee5\u524d\uff0c\u5728\u4e00\u4e2a\u9065\u8fdc\u7684\u661f\u7cfb\uff0c\u4e00\u4e2a\u9ed1\u6697\u7684\u5e1d\u56fd\u9760\u7740\u5b83\u7684\u8d85\u7ea7\u6b66\u5668\u7edf\u6cbb\u8005\u6574\u4e2a\u661f\u7cfb\u3002\u67d0\u4e00\u5929\uff0c\u51ed\u7740\u4e00\u4e2a\u5076\u7136\u7684\u673a\u9047\uff0c\u4e00\u652f\u53cd\u6297\u519b\u6467\u6bc1\u4e86\u5e1d\u56fd\u7684\u8d85\u7ea7\u6b66\u5668\uff0c\u5e76\u653b\u4e0b\u4e86\u661f\u7cfb\u4e2d\u51e0\u4e4e\u6240\u6709\u7684\u661f\u7403\u3002\u8fd9\u4e9b\u661f\u7403\u901a\u8fc7\u7279\u6b8a\u7684\u4ee5\u592a\u96a7\u9053\u4e92\u76f8\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u8fde\u63a5\u3002\n\n\u4f46\u597d\u666f\u4e0d\u957f\uff0c\u5f88\u5feb\u5e1d\u56fd\u53c8\u91cd\u65b0\u9020\u51fa\u4e86\u4ed6\u7684\u8d85\u7ea7\u6b66\u5668\u3002\u51ed\u501f\u8fd9\u8d85\u7ea7\u6b66\u5668\u7684\u529b\u91cf\uff0c\u5e1d\u56fd\u5f00\u59cb\u6709\u8ba1\u5212\u5730\u6467\u6bc1\u53cd\u6297\u519b\u5360\u9886\u7684\u661f\u7403\u3002\u7531\u4e8e\u661f\u7403\u7684\u4e0d\u65ad\u88ab\u6467\u6bc1\uff0c\u4e24\u4e2a\u661f\u7403\u4e4b\u95f4\u7684\u901a\u8baf\u901a\u9053\u4e5f\u5f00\u59cb\u4e0d\u53ef\u9760\u8d77\u6765\u3002\u73b0\u5728\uff0c\u53cd\u6297\u519b\u9996\u9886\u4ea4\u7ed9\u4f60\u4e00\u4e2a\u4efb\u52a1\uff1a\u7ed9\u51fa\u539f\u6765\u4e24\u4e2a\u661f\u7403\u4e4b\u95f4\u7684\u4ee5\u592a\u96a7\u9053\u8fde\u901a\u60c5\u51b5\u4ee5\u53ca\u5e1d\u56fd\u6253\u51fb\u7684\u661f\u7403\u987a\u5e8f\uff0c\u4ee5\u5c3d\u91cf\u5feb\u7684\u901f\u5ea6\u6c42\u51fa\u6bcf\u4e00\u6b21\u6253\u51fb\u4e4b\u540e\u53cd\u6297\u519b\u5360\u636e\u7684\u661f\u7403\u7684\u8fde\u901a\u5757\u7684\u4e2a\u6570\u3002\uff08\u5982\u679c\u4e24\u4e2a\u661f\u7403\u53ef\u4ee5\u901a\u8fc7\u73b0\u5b58\u7684\u4ee5\u592a\u901a\u9053\u76f4\u63a5\u6216\u95f4\u63a5\u5730\u8fde\u901a\uff0c\u5219\u8fd9\u4e24\u4e2a\u661f\u7403\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\uff09\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u3011\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u8f93\u5165\u6587\u4ef6\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570\uff0c$n (1 \\leq n \\leq 2m)$ \u548c$m (1 \\leq m \\leq 200,000)$\uff0c\u5206\u522b\u8868\u793a\u661f\u7403\u7684\u6570\u76ee\u548c\u4ee5\u592a\u96a7\u9053\u7684\u6570\u76ee\u3002\u661f\u7403\u7528$0$~$n-1$\u7684\u6574\u6570\u7f16\u53f7\u3002\n\n\u63a5\u4e0b\u6765\u7684$m$\u884c\uff0c\u6bcf\u884c\u5305\u62ec\u4e24\u4e2a\u6574\u6570$x$, $y$\uff0c\u5176\u4e2d\uff08$0 \\leq x \\not= y<n$\uff09\uff0c\u8868\u793a\u661f\u7403$x$\u548c\u661f\u7403$y$\u4e4b\u95f4\u6709\u4ee5\u592a\u96a7\u9053\u3002\u6ce8\u610f\u6240\u6709\u7684\u4ee5\u592a\u96a7\u9053\u90fd\u662f\u53cc\u5411\u7684\u3002\n\n\u63a5\u4e0b\u6765\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570$k$\uff0c\u8868\u793a\u5e1d\u56fd\u8ba1\u5212\u6253\u51fb\u7684\u661f\u7403\u4e2a\u6570\u3002\n\n\u63a5\u4e0b\u6765\u7684K\u884c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570$x$\uff0c\u6ee1\u8db3$0 \\leq x<n$\uff0c\u8868\u793a\u5e1d\u56fd\u8ba1\u5212\u6253\u51fb\u7684\u661f\u7403\u7f16\u53f7\u3002\u5e1d\u56fd\u603b\u662f\u6309\u8f93\u5165\u7684\u987a\u5e8f\u4f9d\u6b21\u6467\u6bc1\u661f\u7403\u7684\u3002\n\n- \u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u51fa\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u662f\u5f00\u59cb\u65f6\u661f\u7403\u7684\u8fde\u901a\u5757\u4e2a\u6570\u3002\n\n\u63a5\u4e0b\u6765\u7684$k$\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u7ecf\u8fc7\u8be5\u6b21\u6253\u51fb\u540e\u73b0\u5b58\u661f\u7403\u7684\u8fde\u901a\u5757\u4e2a\u6570\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u3011\n\n- \u8f93\u5165\u6837\u4f8b\n```\n8 13\n0 1\n1 6\n6 5\n5 0\n0 6\n1 2\n2 3\n3 4\n4 5\n7 1\n7 2\n7 6\n3 6\n5\n1\n6\n3\n5\n7\n```\n- \u8f93\u51fa\u6837\u4f8b\n```\n1\n1\n1\n2\n3\n3\n```\n\n\u8fd9\u9053\u9898\u76ee\u5176\u5b9e\u57fa\u672c\u4e0a\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u5165\u95e8\u9898\u5566~\u60f3\u8981\u5165\u95e8\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u505a\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\uff1a[\u3010\u6a21\u677f\u3011\u5e76\u67e5\u96c6](https://www.luogu.org/problemnew/show/P3367)\uff0c\u6216\u8005\u770b\u4e00\u4e0b\u6211\u7684\u8fd9\u7bc7\u9898\u89e3~\n\n\u5728\u8fd9\u91cc\u4e3e\u4e00\u4e2a\u6709$7$\u4e2a\u70b9\u7684\u6817\u5b50\uff0c\u5982\u56fe\uff08\u6570\u7ec4\u4e2d\u7684\u7b2c$i$\u4e2a\u683c\u5b50\u8868\u793a\u7684\u662f$i$\u53f7\u70b9\u7684\u8001\u5927\uff09~\n\n![](https://cdn.luogu.com.cn/upload/pic/18407.png)\n\n\u4f60\u4f1a\u53d1\u73b0\uff0c\u4e00\u5f00\u59cb\u6bcf\u4e2a\u70b9\u7684\u8001\u5927\u90fd\u662f\u81ea\u5df1\u3002\n\n\u770b\u65e9\u8fd9\u91cc\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\uff1a\u6bcf\u4e2a\u70b9\u7684\u8001\u5927\u662f\u7528\u6765\u5e72\u4ec0\u4e48\u7684\uff1f\u5176\u5b9e\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u67d0\u4e9b\u70b9\u7684\u8001\u5927\u76f8\u540c\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u5fc5\u5b9a\u5904\u5728\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\u3002\u73b0\u5728\uff0c\u6211\u4eec\u8981\u7ed9\u51fa\u4e00\u4e9b\u5173\u7cfb\uff1a$x$\u53f7\u70b9\u548c$y$\u53f7\u70b9\u7684\u8001\u5927\u662f\u4e00\u6837\u7684\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u8981\u5c06$x$\u53f7\u70b9\u548c$y$\u53f7\u70b9\u5408\u5e76\u3002\u4f8b\u5982\u5728\u8fd9\u4e2a\u6817\u5b50\u4e2d\u6211\u4eec\u5c06$6$\u53f7\u70b9\u548c$1$\u53f7\u70b9\u5408\u5e76\uff08$x=6,y=1$\uff09\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u89c4\u5b9a\u6211\u4eec\u5c06$x$\u53f7\u70b9\u7684\u8001\u5927\u6539\u4e3a$y$\u53f7\u70b9\u7684\u8001\u5927\uff0c\u4fee\u6539\u5b8c\u540e\u5982\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/18408.png)\n\n\u90a3\u4e48\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u600e\u4e48\u5b9e\u73b0\u5408\u5e76\u64cd\u4f5c\u5462\uff1f\u4e0d\u7528\u6025\uff0c\u4e0b\u9762\u4e0a\u4ee3\u7801\uff08$hb()$\u51fd\u6570\u5373\u4e3a\u5408\u5e76\u51fd\u6570\uff0c\u5176\u4e2d$f[x]$\u8868\u793a\u7684\u662f$x$\u53f7\u70b9\u7684\u8001\u5927\uff09~\n\n```\nvoid hb(int x,int y)\n{\n\tint tx=find(x),ty=find(y);\n\tif(tx!=ty)\n\t{\n\t\tf[tx]=ty;//\u5c06x\u53f7\u70b9\u7684\u8001\u5927\u6539\u4e3ay\u53f7\u70b9\u7684\u8001\u5927\u3002\n\t}\n}\n```\n\n\u4ec0\u4e48\uff1f\u5c45\u7136\u6df7\u5165\u4e86\u4e00\u4e2a$find()$\u51fd\u6570T_T\uff1f\u5176\u5b9e$find()$\u51fd\u6570\u662f\u7528\u6765\u5bfb\u627e$x$\u53f7\u70b9\u7684\u8001\u5927\u7684\uff0c\u5e76\u628a\u548c$x$\u53f7\u70b9\u5904\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u4e0a\u7684\u70b9\u7684\u8001\u5927\u90fd\u6539\u4e3a$x$\u53f7\u70b9\u7684\u8001\u5927\uff0c\u4e0b\u9762\u4e0a$find()$\u51fd\u6570\u7684\u4ee3\u7801~\n\n```\nint find(int x)\n{\n\tif(x==f[x])\n\t{\n\t\treturn x;//\u627e\u5230\u8001\u5927\u4e86\uff0c\u8fd4\u56de\u8fd9\u4e2a\u8001\u5927\u7684\u7f16\u53f7\u3002\n\t}\n\telse\n\t{\n\t\treturn f[x]=find(f[x]);//\u628a\u4e00\u4e9b\u548cx\u53f7\u70b9\u5904\u5728\u540c\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\u7684\u70b9\u7684\u8001\u5927\u6539\u4e3ax\u53f7\u70b9\u7684\u8001\u5927\u3002\n\t}\n}\n```\n\n\u7136\u540e\u5e76\u67e5\u96c6\u5c31\u8bb2\u5b8c\u5566^_^\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5e76\u67e5\u96c6\u53cd\u8fc7\u6765\u505a\u5c31OK\u5566\u3002\u4e0d\u8fc7\u5982\u679c\u5e76\u67e5\u96c6\u5199\u7684\u4e0d\u597d\u7684\u8bdd\u4f1aTLE\u7684\u54e6\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u8fd8\u8bf7\u770bAC\u4ee3\u7801~\n\n\u672c\u9898\u89e3\u5185\u7684\u56fe\u7247\u7684\u7ed8\u56fe\u5de5\u5177\u4e3a@EternalAlexander \u7f16\u5199\u7684OI Painter\u8f6f\u4ef6\uff0cBeta 1.3~\n\n\u4e0b\u9762\u4e0aAC\u4ee3\u7801~\n```\n#include <cstdio>\nstruct nodea{ int x,y,g; } b[1000001];\nstruct nodeb{ int h; } r[1000001];\nint ans[1000001],f[1000001],c[1000001],x[1000001];\nint len=0,da=0,p=0;\nint n=0,m=0;\nvoid ins(int x,int y)\n{\n\tlen++;\n\tb[len].x=x;\n\tb[len].y=y;\n\tb[len].g=r[x].h;\n\tr[x].h=len;\n}\nint find(int x)\n{\n\tif(x==f[x])\n\t{\n\t\treturn x;\n\t}\n\telse\n\t{\n\t\treturn f[x]=find(f[x]);\n\t}\n}\nvoid hb(int x,int y)\n{\n\tint tx=find(x),ty=find(y);\n\tif(tx!=ty)\n\t{\n\t\tf[tx]=ty;\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tf[i]=i;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=0,y=0;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tx++,y++;\n\t\tins(x,y),ins(y,x);\n\t}\n\tint q=0;\n\tscanf(\"%d\",&q);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tscanf(\"%d\",&x[i]);\n\t\tx[i]++;\n\t\tc[x[i]]=1;\n\t}\n\tfor(int k=1;k<=n;k++)\n\t{\n\t\tif(c[k]==0)\n\t\t{\n\t\t\tfor(int i=r[k].h;i>0;i=b[i].g)\n\t\t\t{\n\t\t\t\tif(c[b[i].x]==0 && c[b[i].y]==0)\n\t\t\t\t{\n\t\t\t\t\thb(b[i].x,b[i].y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(c[i]==0 && f[i]==i)\n\t\t{\n\t\t\tda++;\n\t\t}\n\t}\n\tans[++p]=da;\n\tfor(int j=q;j>=1;j--)\n\t{\n\t\tda++;\n\t\tc[x[j]]=0;\n\t\tfor(int i=r[x[j]].h;i>0;i=b[i].g)\n\t\t{\n\t\t\tif(c[b[i].x]==0 && c[b[i].y]==0 && find(b[i].x)!=find(b[i].y))\n\t\t\t{\n\t\t\t\tda--;\n\t\t\t\thb(b[i].x,b[i].y);\n\t\t\t}\n\t\t}\n\t\tans[++p]=da;\n\t}\n\tfor(int i=p;i>=1;i--)\n\t{\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1524870155,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u505a\u8fd9\u9053\u9898\u524d\u5462\uff0c\u6211\u4eec\u5148\u51fa\u95e8\u5de6\u8f6c[\u5173\u95ed\u519c\u573a](https://www.luogu.org/problemnew/show/P3144)\uff0c\u4e00\u9053\u7c7b\u4f3c\u7684\u66f4\u7b80\u5355\u4e00\u4e22\u4e22\u7684\u9898                      \n\n\u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u8fd9\u9898\uff0c\u56e0\u4e3a\u5e76\u6ca1\u6709\u8fc7\u591a\u7684\u64cd\u4f5c\uff0c\u53ea\u662f\u8981\u6211\u4eec\u6c42\u4e00\u4e0b\u8fde\u901a\u5757\u7684\u4e2a\u6570\u800c\u5df2\uff08**\u4e5f\u5c31\u662f\u8fde\u901a\u6027\uff0c\u5177\u6709\u4f20\u9012\u6027\u7684\u8fde\u901a**\uff09\uff0c\u800c\u8fd9\u6070\u597d\u662f\u5e76\u67e5\u96c6\u6240\u64c5\u957f\u7684\u3002                 \n\n\u7136\u800c\uff0c\u6211\u4eec\u6b63\u5411\u770b\u9898\u76ee\u65f6\u5c31\u4f1a\u53d1\u73b0\u4e0d\u652f\u6301\u5220\u9664\u64cd\u4f5c\u7684\u5e76\u67e5\u96c6\u4f3c\u4e4e\u529e\u4e0d\u5230\u3002\u4f46\uff0c\u5982\u679c\u6211\u4eec\u628a\u5220\u9664\u64cd\u4f5c\u6362\u6210\u52a0\u5165\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u529e\u5230\u4e86\u3002\u8fd9\u4e5f\u5c31\u662f\u9006\u5411\u601d\u7ef4\u3002\u9898\u76ee\u652f\u6301\u79bb\u7ebf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9006\u5411\u5904\u7406\u51fa\u6240\u6709\u7b54\u6848\u4ee5\u540e\u518d\u5168\u90e8\u8f93\u51fa\u5c31\u597d\u4e86\u3002\n\n1. \u8003\u8651\u6700\u540e\u7684\u8fde\u901a\u72b6\u6001\uff1a\u6807\u8bb0\u6467\u6bc1\u7684\u70b9\uff0c\u628a\u4e0d\u6467\u6bc1\u7684\u70b9\u4e4b\u95f4\u80fd\u8fde\u7684\u8fb9\u8fde\u8d77\u6765\uff0c\u540c\u65f6\u7edf\u8ba1\u8fde\u901a\u5757\u7684\u6570\u91cf\u5373\u4e3a\u6240\u6c42\n1. \u4e2d\u95f4\u7684\u8fde\u901a\u72b6\u6001\uff1a\u4e8e\u6700\u540e\u7684\u8fde\u901a\u72b6\u6001\u5904\u7406\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4ece\u540e\u5f80\u524d\u4f9d\u6b21\u52a0\u5165\u88ab\u5220\u9664\u7684\u70b9\uff0c\u679a\u4e3e\u51fa\u8fb9\uff0c\u8fde\u901a\u3002\u7edf\u8ba1\u8fde\u901a\u5757\u7684\u6570\u91cf\u5373\u4e3a\u6240\u6c42\n1. \u5012\u5e8f\u5b58\uff0c\u6b63\u5e8f\u8f93\u51fa\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=4e5;\nstruct data\n{\n\tint nxt,to;\n}e[maxn<<1];\nint head[maxn],tot;\nvoid add(int u,int v)\n{\n\te[++tot]=(data){head[u],v};\n\thead[u]=tot;\n}\nint f[maxn],n,m,v[maxn],k,a[maxn],cnt,ans[maxn];\nint find(int x)\n{\n\treturn x==f[x]?x:f[x]=find(f[x]);\n}\nvoid dfs(int x)\n{\n\tv[x]=1;\n\tfor (int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tif (!v[e[i].to])\n\t\t{\n\t\t\tint f1=find(x),f2=find(e[i].to);\n\t\t\tif (f1!=f2) f[f1]=f2;\n\t\t\tdfs(e[i].to);\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=0;i<n;++i) f[i]=i;\n\tfor (int i=0;i<m;++i)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tadd(u,v); add(v,u);\n\t}\n\tscanf(\"%d\",&k);\n\tfor (int i=0;i<k;++i) scanf(\"%d\",&a[i]),v[a[i]]=1;\n\tfor (int i=0;i<n;++i)\n\t{\n\t\tif (!v[i])\n\t\t{\n\t\t\tcnt++;\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tans[k]=cnt;\n\tmemset(v,0,sizeof(v));\n\tfor (int i=0;i<k;++i) v[a[i]]=1;\n\tfor (int i=k-1;i>=0;--i)\n\t{\n\t\tv[a[i]]=0; \n\t\tcnt++;\n\t\tfor (int j=head[a[i]];j;j=e[j].nxt)\n\t\t{\n\t\t\tif (!v[e[j].to])\n\t\t\t{\n\t\t\t\tint f1=find(a[i]),f2=find(e[j].to);\n\t\t\t\tif (f1!=f2)\n\t\t\t\t{\n\t\t\t\t\tf[f2]=f1;\n\t\t\t\t\tcnt--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tans[i]=cnt;\n\t}\n\tfor (int i=0;i<=k;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n### \u65e0\u803b\u5ba3\u626c\u535a\u5ba2[bobxie](https://www.luogu.org/blog/UnacceptedBlog/)",
        "postTime": 1540970808,
        "uid": 28730,
        "name": "bobxie",
        "ccfLevel": 0,
        "title": "luogu P1197 [JSOI2008]\u661f\u7403\u5927\u6218"
    },
    {
        "content": "## \u661f\u7403\u5927\u6218\n\n\u60f3\u5fc5\u770b\u5230\u8fd9\u9053\u9898,\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u7684\u4fbf\u662f **\u5e76\u67e5\u96c6** ~~(\u5e9f\u8bdd)~~\n\n\u7136\u540e\u6b63\u5e38\u7684\u601d\u8def\u5c31\u662f\u5148\u626b\u4e00\u904d,\u52a0\u5230\u4e00\u4e2a\u5e76\u67e5\u96c6\u91cc,\u7136\u540e\u8f70\u4e00\u4e2a\u661f\u7403,\u5220\u4e00\u4e2a\u661f\u7403(\u4ece\u5e76\u67e5\u96c6\u91cc\u53bb\u6389),\u90a3\u4e48\u95ee\u9898\u6765\u4e86,\u5e76\u67e5\u96c6\u600e\u4e48\u5220?\n\n\u53ea\u6709\u8fd9\u6837\n\n```\nint find(int x) {\n\tif(f[x]==x) return x;\n\treturn find(f[x]);\n}\n```\n\u53ef\u4e0d\u80fd\u8fd9\u6837\n\n```\nint find(int x) {\n\tif(f[x]==x) return x;\n\treturn f[x]=find(f[x]);\n}\n```\n\n\u7b2c\u4e00\u79cd\u5199\u6cd5\u662f\u8bb0\u4e0b\u4e86\u8def\u5f84,\u624d\u53ef\u4ee5\u5220,\u4f46,\u8d85\u65f6!!~~(\u4e0d\u4fe1\u4f60\u53bb\u6a21\u677f\u90a3\u91cc\u4ea4\u4e00\u4e0b)~~\n\n\u6545\u6211\u4eec\u53ea\u80fd\u653e\u5f03\u8fd9\u79cd\u505a\u6cd5,\u9009\u62e9\u5012\u63a8.\n\n\u6bcf\u6765\u4e00\u4e2a\u70b9\u5c31\u63a5\u4e0a.(\u89c6\u4f5c\u4fee\u590d)\n\n**\u56fe:**\n![](https://cdn.luogu.com.cn/upload/image_hosting/cgiortdz.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/kvw5lb3y.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/5mipbg0h.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/vdkflgaq.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/qp04a1td.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/kr9i00fr.png)\n\n\u518d\u5012\u8fc7\u6765!\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint n,m,k;\n\nint ko[400005],cnt;//ko==kill order\nint hk[400005];//hk==have killed\n\nint ans[400005];\n\n//---------------------------------------\n//\u90bb\u63a5\u8868//\u4e0d\u4f1a\u53bb\u67e5,\u677f\u5b50\n\nvector <int> E[400005];\nvoid add() {\n\tint e,u;\n\tcin>>e>>u;\n\tE[e].push_back(u);\n\tE[u].push_back(e);\n}\n//----------------------------------------\n//\u5e76\u67e5\u96c6//\u4e0d\u4f1a\u53bb\u67e5,\u677f\u5b50\n\nint f[400005];\nint init() {\n\tfor(int i=0; i<n; i++)\n\t\tf[i]=i;\n}\nint find(int x) {\n\treturn f[x]==x?x:(f[x]=find(f[x]));\n}\n//----------------------------------------\n//\u627e\u4e0b\u4e00\u4e2a\u70b9\u7684\u5927\u7206\u641c\n\nvoid dfs(int now) {\n\tfor(int i=0; i<E[now].size(); i++) {\n\t\tif(hk[E[now][i]]) continue;//\u8fd8\u6ca1\u88ab\u4fee\u590d\n\t\tint fx=find(now),fy=find(E[now][i]);\n\t\tif(fx==fy) continue;//\u63a5\u4e0a\u5c31\u4e0d\u8d70\n\t\tf[fx]=fy;\n\t\tcnt--;\n\t\tdfs(E[now][i]);\n\t}\n}\n//----------------------------------------\nint main() {\n\tcin>>n>>m;\n\twhile(m--) add();\n\tcin>>k;\n\tfor(int i=1; i<=k; i++) {\n\t\tcin>>ko[i];\n\t\thk[ko[i]]=1;\n\t}\n\tinit();\n\tcnt=n-k;//\u8fd8\u597d\u7684\u70b9\n\tfor(int i=0; i<n; i++) {//\u8fd8\u597d\u7684\u70b9,\u4e5f\u8981\u8dd1\u4e00\u904d,\u627e\u8fde\u901a\u5757,\u8fd9\u4e0d\u625340\u5206,\u522b\u95ee\u6211\u600e\u4e48\u77e5\u9053\u7684\n\t\tif(hk[i]) continue;\n\t\tdfs(i);\n\t}\n\tans[k+1]=cnt;//\u5c0f\u5fc3,k+1!!\n\tfor(int i=k; i>=1; i--) {\n\t\thk[ko[i]]=0;\n\t\tcnt++;\n\t\tdfs(ko[i]);\n\t\tans[i]=cnt;\n\t}\n\tfor(int i=1; i<=k+1; i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1573700031,
        "uid": 251809,
        "name": "wick",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\t\t\u770b\u5230\u8fd9\u9053\u9898\u9996\u5148\u60f3\u5230\u7684\u5c31\u662f\u6211\u4eec\u6700\u719f\u7ec3\u7684\n \n # \u5927\u6a21\u62df\n \n \u987a\u7740\u9898\u76ee\u7684\u601d\u8def\uff0c\u5efa\u8fb9\uff0c\u5efa\u56fe\uff0c\u7136\u540e\u6467\u6bc1\n \n ## \u7136\u800c\n \t\n   \u5b9e\u73b0\u96be\u5ea6\u592a\u5927\uff0c\u4e5f\u5c31\u653e\u5f03\u4e86\n  \t\n   \u518d\u56de\u8fc7\u5934\u6765\u770b\u770b\u8fd9\u9053\u9898\n   \u53d1\u73b0 \n   \u662f\n   ### \u79bb\u7ebf\n   \u90a3\u4e48\u5c31\u4e0d\u5fc5\u6309\u7167\u9898\u76ee\u8bf4\u7684\u53bb\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5904\u7406\u51fa\u6240\u6709\u7684\u7b54\u6848\uff0c\u6700\u540e\u518d\u4e00\u5e76\u8f93\u51fa\n   \n   \u5148\u5efa\u7acb\u6bc1\u6389\u7684\u56fe\uff0c\u518d\u62fc\u63a5\u4e0a\u53bb\u8fd9\u9053\u9898\u5c31\u7b80\u5355\u4e86\u8bb8\u591a\n   \n   \u5728\u5efa\u7acb\u6bc1\u6389\u7684\u56fe\u65f6\uff0c\u7528\u5e76\u67e5\u96c6\u5728\u9014\u4e2d\u66f4\u65b0\u8fde\u901a\u5757\uff0c\u6700\u540e\u7edf\u8ba1\u3002\n   \n   \u5728\u4fee\u5efa\u65b0\u56fe\u65f6\uff0c\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u5728\u904d\u5386\u8fd9\u4e2a\u70b9\u6240\u8fde\u63a5\u7684\u8fb9\uff0c\u5982\u679c\u4ed6\u4eec\u6240\u5c5e\u7956\u5148\u4e0d\u540c\uff0c\u5c31\u5c06\u8fd92\u4e2a\u8fde\u901a\u5757\u901a\u8fc7\u8fd9\u4e2a\u65b0\u70b9\u8fde\u63a5\u8d77\u6765\uff0c\u7edf\u8ba1\u4e00\u4e0b\u8fde\u901a\u5757\u6570\u91cf\u5b58\u5165\u6570\u7ec4\u4e2d\u3002\n   \n   \u4ee3\u7801\u5982\u4e0b\n   ```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;int sum=0;\nstruct node{\n    int fro,to,next;\n}e[400010];\nint n,m;\nint k;\nint head[400010];\nint f[400010];\nint book[100010],a[100010];\nint vis[400010];int cnt;\nvoid add(int x,int y)\n{\n    e[++sum].fro=x;\n    e[sum].to=y;\n    e[sum].next=head[x];\n    head[x]=sum;\n}\nint find(int x)\n{\n    if(f[x]==x)return x;\n    return f[x]=find(f[x]);\n}\nvoid hb(int x,int y)\n{\n    int t1=find(x),t2=find(y);\n    f[t2]=t1;\n}\nvoid reproduction(int x)\n//\u679a\u4e3ex\u7684\u8fb9\uff0c\u4ed6\u8054\u901a\u7684\u70b9\u5168\u90fd\u6210\u4e3a\u4ed6\u7684\u513f\u5b50 \n{\n    vis[x]=1;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(vis[v]||book[v])continue;\n        f[v]=find(x);\n        reproduction(v);\n    }\n    vis[x]=0;//\u56de\u6eaf\u65f6\u6e05\u7a7a \n}\nvoid build(int x) \n{\n    for(int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(book[v])continue;\n        if(find(v)!=find(x))cnt-=1;\n        hb(v,x);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++)\n        f[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n        add(y,x);\n    }\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)\n    {\n        int XD;\n        scanf(\"%d\",&XD);a[i]=XD;\n        book[XD]=1; \n    }\n    for(int i=0;i<n;i++)\n        if(!book[i]&&f[i]==i)\n        {\n            reproduction(i);\n            cnt++;\n        }\n    int ans[100010];\n    ans[k+1]=cnt;//\u6700\u7ec8\u8fd8\u5269\u4f59\u7684\u8fde\u901a\u5757 \n    for(int i=k;i>=1;i--)\n    {\n        cnt++; \n        book[a[i]]=0;\n        build(a[i]);\n        ans[i]=cnt;\n    }\n    for(int i=1;i<=k+1;i++)\n    printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```\n   \n\n------------\n\n   \u5982\u679c\u4f60\u7167\u6211\u7684\u65b9\u6cd5\u505a\u5b8c\uff0c\u4f60\u4f1a\u53d1\u73b0\u53ea\u670920\u5206 233~\n   \n   ~~\u53c8\u662fT\uff0c\u53c8\u662fRE,\u8fd8\u6709WA~~\n   \n   \u91cd\u65b0\u5efa\u4e2a\u56fe\u518d\u6765\u8dd1\u770b\u6765\u8fd8\u662f~~\u6709\u95ee\u9898~~ \u592a\u6162\n   \n   \u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u5efa\u56fe\u4e86\uff0c\u6539\u4e3a\u5bf9\u8fde\u901a\u5757\u6570\u91cf\u8fdb\u884c\u7ef4\u62a4\uff0c\u53ea\u904d\u5386\u8fb9\u4e5f\u8ba9\u6548\u7387\u4e0a\u5347\u4e0d\u5c11\n   \n   \u5148\u5047\u8bbe\u6240\u6709\u6ca1\u88ab\u6bc1\u6389\u70b9\u81ea\u6210\u8fde\u901a\u5757\uff0c\u5728\u901a\u8fc7\u904d\u5386\u8fb9\u6765\u5c06\u70b9\u8fde\u63a5\u8d77\u6765\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u4e0d\u5c5e\u4e8e\u540c\u4e00\u8fde\u901a\u5757\u5c31\u8ba9\u8fde\u901a\u5757\u6570\u91cf-1\n   \n   \u4fee\u8865\u7684\u64cd\u4f5c\u4e0e20\u5206\u4ee3\u7801\u64cd\u4f5c\u4e00\u81f4\uff0c\u8be6\u89c1\u4ee3\u7801\n   \n   ### AC\u4ee3\u7801\n   ```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;int sum=0;\nstruct node{\n    int fro,to,next;\n}e[400010];\nint n,m;\nint k;\nint head[400010];\nint f[400010];\nint book[400010],a[400010];\nint vis[400010];int cnt;\nvoid add(int x,int y)\n{\n    e[++sum].fro=x;\n    e[sum].to=y;\n    e[sum].next=head[x];\n    head[x]=sum;\n}\nint find(int x)\n{\n    if(f[x]==x)return x;\n    return f[x]=find(f[x]);\n}\nvoid hb(int x,int y)\n{\n    int t2=find(y);\n    f[t2]=f[x];\n}\nvoid reproduction(int x)\n//\u679a\u4e3ex\u7684\u8fb9\uff0c\u4ed6\u8054\u901a\u7684\u70b9\u5168\u90fd\u6210\u4e3a\u4ed6\u7684\u513f\u5b50 \n{//\u7136\u800c\u4e3b\u51fd\u6570\u4e2d\u5e76\u6ca1\u6709\u7528= = \n    vis[x]=1;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(vis[v]||book[v])continue;\n        f[v]=find(x);\n        reproduction(v);\n    }\n    vis[x]=0;//\u56de\u6eaf\u65f6\u6e05\u7a7a \n}\nvoid build(int x)//\u4eceX\u70b9\u5f00\u59cb\u4fee\u590d \n{\n    for(int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(book[v])continue;\n        if(find(v)!=find(x))cnt--;\n        hb(v,x);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++)\n        f[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n        add(y,x);\n    }\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&a[i]);//\u8bb0\u5f55\u4e0b\u7ef4\u4fee\u987a\u5e8f \n        book[a[i]]=1;//\u90fd\u88ab\u6bc1\u4e86 \n    }\n    cnt=n-k;\n    for(int i=1;i<=2*m;i++)\n    {\n        if(!book[e[i].fro]&&!book[e[i].to]&&find(e[i].fro)!=find(e[i].to))\n        {\n            cnt--;\n            hb(e[i].fro,e[i].to);\n        }\n    }\n    int ans[400010];\n    ans[k+1]=cnt;//\u6700\u7ec8\u8fd8\u5269\u4f59\u7684\u8fde\u901a\u5757 \n    for(int i=k;i>=1;i--)\n    {\n        cnt++;//a[i]\u70b9\u52a0\u5165\u56fe\u4e2d\uff0c\u56e0\u4e3a\u8fd8\u6ca1\u6709\u4f7f\u7528\u8fb9\n        //\u6240\u4ee5\u8fde\u901a\u5757\u6570\u91cf\u6682\u65f6\u52a0 1 \n        book[a[i]]=0;\n        build(a[i]);//\u4ecea[i]\u70b9\u5f00\u59cb\u4fee\u590d \n        ans[i]=cnt;\n    }\n    for(int i=1;i<=k+1;i++)\n    printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1548767927,
        "uid": 112850,
        "name": "GLZP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u597d\u9898\uff01\u5c31\u662f\u601d\u8def\u6709\u70b9\u522b\u626d\u3002\n\n\u6211\u4eec\u9996\u5148\u62ff\u5230\u9898\u76ee.~~emmm\uff0cdfs\u66b4\u529b\u67d3\u8272\uff1f~~\n\n\u663e\u7136\u590d\u6742\u5ea6\u662f\u65e0\u6cd5\u901a\u8fc7\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u7ef4\u62a4\u8fde\u901a\u5757\u4e2a\u6570\u7684\u64cd\u4f5c\u5f88\u6709\u8da3\u3002\n\n\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\u663e\u7136\u662f\u5e76\u67e5\u96c6\u5566\n\n\u4f46\u662f\u65ad\u88c2\u7684\u64cd\u4f5c\u663e\u7136\u5f88\u4e0d\u597d\u5199\uff08\u5bf9\u4e8e\u6211\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u9006\u5411\u601d\u7ef4\uff0c\u8003\u8651\u5408\u5e76\u7684\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u628a\u8be2\u95ee\u5012\u8fc7\u6765\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8bf4\u521a\u5f00\u59cb\u662f\u6240\u6709\u8be2\u95ee\u7684\u661f\u7403\u88ab\u6467\u6bc1\u7684\uff0c\u7136\u540e\u518d\u6bcf\u6b21\u52a0\u8fdb\u6765\u4e00\u4e2a\u661f\u7403\uff0c\u8fde\u4e0a\u6240\u6709\u53ef\u80fd\u8fde\u7684\u8fb9\uff0c\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u6ce8\u610f\uff0c\u6211\u4eec\u662f\u5012\u7740\u7edf\u8ba1\u7b54\u6848\u7684\uff0c\u56e0\u6b64\u521a\u5f00\u59cb\u7684$tot$\u521d\u59cb\u5316\u4e3a$n-k$\n\n\u7136\u540e\u5012\u5e8f\u679a\u4e3e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u661f\u7403$tot++$\uff0c\u7136\u540e\u904d\u5386\u8fd9\u4e2a\u661f\u7403\u7684\u6240\u6709\u51fa\u8fb9\uff0c\u5982\u679c\u5b83\u6307\u5411\u4e86\u4e00\u4e2a\u6ca1\u6709\u88ab\u5220\u9664\u7684\u661f\u7403\uff0c\u5224\u65ad\u4ed6\u4eec\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u82e5\u4e0d\u5728\u5c31\u4f7f$tot--$\uff0c\u5e76\u628a\u4ed6\u4eec\u8fde\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d.\n\n\u6700\u540e\u6b63\u5e8f\u8f93\u51fa\u7b54\u6848\u5373\u53ef\uff0c\u8bb0\u5f97\u8f93\u51fa\u521a\u5f00\u59cb\u65f6\u5019\u7684\u8fde\u901a\u5757\u6570\u91cf\u3002\n\n$Code:$\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 200005;\nvector <int> S[N];\nint n , m;\nint k , ans[N] , qus[N];\nint bin[N] , tot;\n\nint find(int x) {\n\tif(bin[x] == x) return x;\n\treturn bin[x] = find(bin[x]);\n}\n\nvoid add(int u, int v) {\n\tint fu = find(u) , fv = find(v);\n\tif(fu != fv) {\n\t\ttot -- ; bin[fu] = fv;\n\t}\n}\n\nbool flag[N];\n\nint main () {\n\tios :: sync_with_stdio(false);\n\tcin >> n >> m;\n\tfor(int i = 1 ; i < n; ++ i) bin[i] = i;\n\twhile(m --) {\n\t\tint u , v;\n\t\tcin >> u >> v;\n\t\tS[u].push_back(v); S[v].push_back(u);\n\t}\n\tcin >> k;\n\ttot = n - k;\n\tfor(int i = 1 ; i <= k ; ++ i) cin >> qus[i] , flag[qus[i]] = 1;\n\tfor(int i = 0 ; i < n ; ++ i) {\n\t\tif(!flag[i]) {\n\t\t\tfor(int j = 0 ; j < S[i].size() ; ++ j) {\n\t\t\t\tint v = S[i][j];\n\t\t\t\tif(flag[v]) continue;\n\t\t\t\tadd(i ,v);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = k ; i >= 1 ; -- i) {\n\t\tans[i] = tot;\n\t\ttot ++; flag[qus[i]] = 0;\n\t\tfor(int j = 0 ; j < S[qus[i]].size() ; ++ j) {\n\t\t\tint v = S[qus[i]][j];\n\t\t\tif(flag[v]) continue;\n\t\t\t\n\t\t\tadd(qus[i] , v);\n\t\t}\n\t}\n\tans[0] = tot;\n\tfor(int i = 0 ; i <= k ; ++ i) printf(\"%d\\n\" , ans[i]);\n\treturn 0; \n}\n```",
        "postTime": 1572354600,
        "uid": 134080,
        "name": "jins3599",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/wzc-wwwwd/)\n\n[P1879 \u3010\\[USACO06NOV\\]\u7389\u7c73\u7530Corn Fields\u3011\u4f20\u9001\u95e8](https://www.luogu.org/problem/P1879)\n\n### \u6b64\u9898\u7b97\u6cd5:\u5e76\u67e5\u96c6\n\n\u9898\u76ee\u8868\u9762\u5f88\u96be\uff0c\u4f46\u4e00\u4e0b\u624b\u4fbf\u77e5\u9053\u662f\u6c34\u9898\u4e86\n\n\u5927\u81f4\u601d\u8def:\n\n>1.$ $\u5148\u628a\u5c06\u8981\u6253\u51fb\u7684\u661f\u7403\u5168\u6253\u6389\u3002\n\n>2.$ $\u628a\u5269\u4e0b\u7684\u661f\u7403\u5408\u5e76(\u6309\u8fb9\u5408\u5e76)\u3002\n\n>3.$ $\u628a\u661f\u7403\u6309\u9006\u5e8f\u91cd\u5efa\u3002\n\n>\u203b.$ $\u6bcf\u6b21\u8f93\u51fa\u5f53\u524d\u8054\u901a\u5757\u4e2a\u6570\u3002\n\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=400010;\nint n,m,a,b,k;\nint ret[N],cnt;\nbool make[N];\nvector<int> e[N];\nstack<int> ans;\nstruct Un{\n    int f[N];\n    void build(int x){\n        for(int i=0;i<x;i++)\n            f[i]=i;\n    } int find(int x){\n        if(f[x]==x) return x;\n        return f[x]=find(f[x]);\n    } void merge(int x,int y){\n        x=find(x);\n        y=find(y);\n        f[y]=x;\n    } bool same(int x,int y){\n        return (find(x)==find(y));\n    } \n}BCJ;\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tBCJ.build(n);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\te[a].push_back(b);\n\t\te[b].push_back(a);\n\t} for(int i=0;i<n;i++)\n\t\tmake[i]=1;\n\tscanf(\"%d\",&k);\n\tfor(int i=1;i<=k;i++){\n\t\tscanf(\"%d\",ret+i);\n\t\tmake[ret[i]]=0;\n\t} cnt=n;\n\tfor(int i=0;i<n;i++){\n\t\tif(!make[i])\n\t\t\tcontinue;\n\t\tfor(int j=0;j<\n\t\te[i].size();j++){\n\t\t\tint to=e[i][j];\n\t\t\tif(!make[to])\n\t\t\t\tcontinue;\n\t\t\tif(!BCJ.same(i,to)){\n\t\t\t\tcnt--;\n\t\t\t\tBCJ.merge(i,to);\n\t\t\t} //\u8ba1\u7b97\u8054\u901a\u5757\u4e2a\u6570\n\t\t}\n\t} ans.push(cnt-k);\n\tfor(int i=k;i>=1;i--){\n\t\tint t=ret[i];\n\t\tmake[t]=1;\n\t\tfor(int j=0;j<\n\t\te[t].size();j++){\n\t\t\tint to=e[t][j];\n\t\t\tif(!make[to])\n\t\t\t\tcontinue;\n\t\t\tif(!BCJ.same(t,to)){\n\t\t\t\tcnt--;\n\t\t\t\tBCJ.merge(t,to);\n\t\t\t} //\u8ba1\u7b97\u8054\u901a\u5757\u4e2a\u6570\n\t\t} ans.push(cnt-(i-1));\n\t\t//\u6ca1\u9020\u597d\u7684\u661f\u7403\u4e0d\u7b97\n\t} while(!ans.empty()){\n\t\tprintf(\"%d\\n\",ans.top());\n\t\tans.pop();\n\t} return 0;\n}\n```\n\u5176\u4f59\u6ce8\u610f\u70b9\u5982\u6ce8\u91ca\uff0c\n\n\u8c22\u8c22\u5927\u5bb6! !\n\n",
        "postTime": 1566813652,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u6c42\u6bcf\u5220\u53bb\u4e00\u4e2a\u70b9\u4e4b\u540e\u8fde\u901a\u5757\u7684\u4e2a\u6570\u3002\n\n\u9898\u89e3\uff1a\u5e76\u67e5\u96c6 \u7ef4\u62a4\u662f\u5426\u5728\u4e00\u4e2a\u5757\u91cc\uff0c\u53c8\u56e0\u4e3a\u5e76\u67e5\u96c6\u53ea\u80fd\u5408\u5e76\u4e0d\u80fd\u5206\u5272\uff0c\n\n\u6240\u4ee5\u8981\u5012\u5e8f\u5904\u7406\u3002\u5148\u52a0\u5165\u6ca1\u6709\u88ab\u5220\u7684\u8fb9\uff0c\u7136\u540e\u628a\u5220\u9664\u70b9\u7684\u601d\u60f3\u6539\u6210\u6dfb\u52a0\u70b9\u3002\n\n\u5751\u70b9\uff1a\u52a0\u8fb9\u65f6\u5fc5\u987b\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u90fd\u6ca1\u6709\u5220\u9664\uff0c\u8fde\u901a\u5757\u7684\u4e2a\u6570\u4e3a\u6ca1\u6709\u5220\n\n\u9664\u7684\u70b9\u5f62\u6210\u7684\u8fde\u901a\u5757\u7684\u4e2a\u6570\u3002\n\n\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstdio>\n#define maxn 400088\nusing namespace std;\nint n,m,k,x,y,gg,ans[maxn],a[maxn],del[maxn];\nvector<int>vec[maxn];\nint fa[maxn<<1];\nint f(int x){return fa[x]==x?x:fa[x]=f(fa[x]);}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<=n;i++)fa[i]=i;\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d\",&x,&y);\n        vec[x].push_back(y);\n        vec[y].push_back(x);\n    }\n    scanf(\"%d\",&k);gg=n-k;\n    for(int i=1;i<=k;i++){\n        scanf(\"%d\",&a[i]);del[a[i]]=1;\n    }\n    for(int i=0;i<=n-1;i++){\n        if(del[i])continue;\n        for(int j=0;j<vec[i].size();j++){\n            int v=vec[i][j];\n            if(f(v)!=f(i)&&del[v]==0){\n        //     cout<<\"lal\"<<\" \"<<i<<\" \"<<v<<endl;\n             fa[f(v)]=f(i);    \n             gg--;\n            }\n        }\n    }\n    for(int i=k;i>=0;i--){\n        ans[i]=gg;gg++;del[a[i]]=0;\n        for(int j=0;j<vec[a[i]].size();j++){\n            int v=vec[a[i]][j];\n            if(f(v)!=f(a[i])&&del[v]==0){\n                gg--;fa[f(v)]=f(a[i]);\n            }\n        }\n    }\n    for(int i=0;i<=k;i++)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1503934792,
        "uid": 49431,
        "name": "xun\u85b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n##### \u914d\u5408[\u535a\u5ba2](https://www.luogu.org/blog/Hikigaya/p1197-xing-qiu-tai-zhan-ti-xie)\u98df\u7528\u66f4\u52a0\n#### \u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u70b9\uff0c\u8be2\u95ee\u56fe\u5269\u4e0b\u7684\u8fde\u901a\u5757\u4e2a\u6570\uff08\u79bb\u7ebf\uff09\n\n#### \u9898\u610f\u5f88\u7b80\u5355\uff0c\u5173\u952e\u5728\u4e8e\u600e\u4e48\u505a\uff0c\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u70b9\u518d\u6c42\u672a\u514d\u592a\u8fc7\u4e8e\u9ebb\u70e6\n#### \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9006\u5411\u601d\u7ef4\uff0c\u53cd\u8fc7\u6765\u601d\u8003\n\n## \u5220\u70b9=>\u52a0\u70b9\n\n#### \u79bb\u7ebf\u5904\u7406\uff0c\u5c06\u65f6\u95f4\u7ebf\u5012\u8fc7\u6765\uff0c\u7528\u5e76\u67e5\u96c6\u52a8\u6001\u7ef4\u62a4\u8fde\u901a\u5757\uff0c\u540c\u65f6\u7edf\u8ba1\u8fde\u901a\u5757\u4e2a\u6570\u5373\u53efQwQ\n\n\n**\u4e0a\u4ee3\u7801**\uff08~~\u6211\u77e5\u9053\u4f60\u4eec\u53ea\u770b\u8fd9\u4e2a~~\uff09\n\n\n```cpp\n#include <iostream>//\u5351\u5fae\u7684\u5934\u6587\u4ef6qwq\n#include <cstdio>\n#include <algorithm>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cmath>\n#include <vector>\n#define ll long long\n#define maxn 400010//\u7531\u4e8e\u662f\u53cc\u5411\u8fb9\uff0c\u8bb0\u5f97\u4e582\n\nusing namespace std;\n\nint head[maxn],cnt;\nint fa[maxn];\nint sum;\nint x,y;\nint k;\nint t;\nint f[maxn],ans[maxn];\nbool check[maxn];\n\ninline int read()//\u5feb\u8bfbqwq\n{\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\tint num=0;\n\twhile(ch>='0'&&ch<='9') num=(num<<3)+(num<<1)+(ch^48),ch=getchar();\n\treturn num;\n}\n\nstruct Edge//\u5b58\u56fe\n{\n\tint from;\n\tint to;\n\tint next;\n}edge[maxn];\n\ninline void add(int u,int v)\n{\n\tedge[cnt].to=v;\n\tedge[cnt].from=u;\n\tedge[cnt].next=head[u];\n\thead[u]=cnt++;\n}\n\ninline void write(int x)\n{\n\tif(x>9) write(x/10);\n\tputchar((x%10)|48);\n}\n\nint find(int x)\n{\n\tif(x==fa[x]) return x;\n\tfa[x]=find(fa[x]);\n\treturn fa[x];\n}\u4f60\u7238\u7238\u7684\u7238\u7238\u5c31\u662f\u4f60\u7238\u7238\n\nvoid bing(int x,int y)\n{\n\tx=find(x);\n\ty=find(y);\n\tif(x==y) return;\n\tsum--;\n\tfa[x]=y;\n}//\u554a\uff0c\u719f\u6089\u7684\u5e76\u67e5\u96c6\u64cd\u4f5c= =\n\nint main()\n{\n\tint n,m;\n\tn=read();\n\tm=read();\n\tfor(int i=0;i<n;i++)//\u6ce8\u610f\u70b9\u7684\u7f16\u53f7\u4e3a 0~n-1\uff0c\u4e4b\u524d\u56e0\u4e3a\u8fd9\u4e2a\u5361\u4e86\u597d\u4e45= =\n\t{\n\t\tfa[i]=i;//\u8bb0\u5f97\u521d\u59cb\u5316\n\t\thead[i]=-1;\n\t}\n\tfor(int i=0;i<m;i++)\n\t{\n\t\tx=read();\n\t\ty=read();\n\t\tadd(x,y);\n\t\tadd(y,x);//\u52a0\u8fb9\n\t}\n\tk=read();\n\tsum=n-k;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tt=read();\n\t\tcheck[t]=true;\n\t\tf[i]=t;\n\t}\n\tfor(int i=0;i<2*m;i++)//\u6ce8\u610f\u662f\u53cc\u5411\u8fb9\uff0c\u521d\u59cb\u65f6\u7684\u56fe\u4e3a\u5c06\u6240\u6709\u70b9\u5220\u5b8c\u4ee5\u540e\u7684\u56fe\u3002\n\t{\n\t\tif(!check[edge[i].from]&&!check[edge[i].to])\n\t\t{\n\t\t\tbing(edge[i].from,edge[i].to);\n\t\t}\n\t}\n\tans[k+1]=sum;\n\tfor(int i=k;i>=1;i--)//\u5c06\u65f6\u95f4\u7ebf\u5012\u8fc7\u6765\u64cd\u4f5c\n\t{\n\t    int t=f[i];\n\t    sum++;\n\t    check[t]=false;\n\t    for(int i=head[t];i!=-1;i=edge[i].next)\n\t    {\n\t    \tif(!check[edge[i].from]&&!check[edge[i].to])\n\t    \t{\n\t    \t\tbing(edge[i].from,edge[i].to);\n\t\t\t}\n\t\t}\n\t\tans[i]=sum;\n\t}\n\tfor(int i=1;i<=k+1;i++)//\u6ce8\u610f\u4e3ak+1\u4e2a\n\t{\n\t\twrite(ans[i]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;//\u534e\u4e3dAC qwq\n}\n```\n\n",
        "postTime": 1565308367,
        "uid": 35531,
        "name": "\u7531\u6bd4\u6ee8\u4e36\u96ea\u4e43",
        "ccfLevel": 0,
        "title": "P1197  \u661f\u7403\u5927\u6218  \u9898\u89e3"
    },
    {
        "content": "# \u601d\u8def\uff1a\n\u6b64\u9898\u5f88\u660e\u663e\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u5224\u8054\u901a\u3002\u4f46\u6309\u7167\u9898\u76ee\u7684\u610f\u601d\uff0c\u8981\u628a\u8054\u7cfb\u4e00\u4e2a\u4e2a\u7684\u6467\u6bc1\uff0c\u8fd9\u5c31\u662f\u5e76\u67e5\u96c6\u65e0\u6cd5\u505a\u5230\u7684\u4e8b\u60c5\u4e86\u3002\n# \u90a3\u4e48\u600e\u4e48\u505a\u5462\uff1f\n\n### 1.\u66b4\u529b\n\u66b4\u529b\u7684\u505a\u6cd5\u662f\u6bcf\u62c6\u9664\u4e00\u6761\u8fb9\uff0c\u5c31\u91cd\u65b0\u5efa\u56fe\uff0c\u518d\u7528\u5e76\u67e5\u96c6\u5224\u8054\u901a\u3002\u8fd9\u6837\u505a\u65e0\u7591\u4f1a\u8d85\u65f6\u3002\n\n### 2.\u4f18\u5316\n\u6211\u4eec\u53ef\u4ee5\u5c06\u9898\u76ee\u5012\u7740\u505a\uff0c\u5c06\u62c6\u9664\u8f6c\u5316\u4e3a\u8fde\u63a5\uff0c\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n# \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint now[400010],tot;\nint team[400010];\nbool flag[400010];\nint father[400010];\nint n,m,k;\nint ans[400010];\nint sum;\nstruct node\n{\n    int from;\n    int to;\n    int next;\n}a[400010];//\u90bb\u63a5\u8868\u5b58\u56fe\nvoid put(int x,int y)\n{\n    a[tot].from=x;\n    a[tot].next=now[x];\n    a[tot].to=y;\n    now[x]=tot;\n    tot++;\n}\nint find(int x)\n{\n    if(x!=father[x])father[x]=find(father[x]);\n    return father[x];\n}//\u5e76\u67e5\u96c6\u57fa\u672c\u64cd\u4f5c\nvoid unionn(int x,int y)\n{\n    x=find(x),y=find(y);\n    if(x==y)return;\n    sum--;\n    father[x]=y;\n}//\u540c\u4e0a\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int x,y;\n    for(int i=0;i<n;i++)\n        father[i]=i,now[i]=-1;//\u521d\u59cb\u5316\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        put(x,y);\n        put(y,x);//\u5b58\u56fe\n    }\n    scanf(\"%d\",&k);\n   // printf(\"k:%d\\n\",k);\n    sum=n-k;\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&x);\n        flag[x]=true;\n        team[i]=x;\n    }\n    //printf(\"k:%d\\n\",k);\n    for(int i=0;i<2*m;i++)\n    {\n        if(!flag[a[i].from]&&!flag[a[i].to])\n        {\n            unionn(a[i].from,a[i].to);\n        }\n    }\n    //printf(\"k:%d\\n\",k);\n    ans[k+1]=sum;\n    for(int i=k;i>=1;i--)\n    {\n        int u=team[i];\n        sum++;\n        flag[u]=false;\n        for(int i=now[u];i!=-1;i=a[i].next)\n        {\n            if(!flag[a[i].from]&&!flag[a[i].to])\n            {\n                unionn(a[i].from,a[i].to);\n            }\n        }\n        ans[i]=sum;\n    }//\u5012\u7740\u505a\n  // printf(\"k:%d\\n\",k);\n    for(int i=1;i<=k+1;i++)\n    printf(\"%d\\n\",ans[i]);\n\n}\n```",
        "postTime": 1550365304,
        "uid": 95392,
        "name": "zengxr",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\n\u6b64\u9898\u5e94\u8be5\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u3002\n\u9996\u5148\u4e00\u4e2a\u6bd4\u8f83\u5e38\u7528\u4e14\u662f\u975e\u5e38\u6709\u7528\u7684\u4e00\u4e2a\u601d\u7ef4\u65b9\u6cd5\u5c31\u662f\u9006\u63a8\u6cd5\u3002~~\u9898\u76ee\u90fd\u662f\u8ff7\u60d1\u4f60\n\u7684~~\n\u9898\u76ee\u4e2d\u8bb2\u70b8\u6bc1\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f53\u65f6\u662f\u4e0d\u65ad\u7684\u52a0\u70b9\u3002\n\n\u9996\u5148\u5904\u7406\u5904\u5168\u90e8\u70b8\u6bc1\u7684\u6240\u51fa\u73b0\u7684\u8054\u901a\u5feb\u3002\u7136\u540e\u4e0d\u65ad\u7684\u5f80\u91cc\u52a0\u70b9\uff0c\u6bcf\u6b21\u53ea\u8981\u628a\u5176\u7684\u8fb9\uff0c\u6240\u8fbe\u5230\u7684\u70b9\uff0c\u5904\u7406\u4e00\u4e0b\uff0c\u5373\u53ef\uff08\u5408\u5e76\u4e00\u6b21\uff0c\u51cf\u5c11\u4e00\u4e2a\uff09\u3002\n\u6700\u540e\u5c06\u6bcf\u6b21\u5f97\u5230\u7684\u8054\u901a\u5feb\u6570\u91cf\u51cf\u53bb\u70b8\u6bc1\u7684\u6570\u91cf\u5373\u53ef\u3002\n\n\u6ce8\u610f\uff1a\n\t1.\u8bfb\u5165\u4f18\u5316\u5f88\u91cd\u8981\u3002\n    2.\u5b58\u8fb9\u65f6\u8981\u6ce8\u610f\u7a7a\u95f4\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//\u9006\u63a8\u601d\u60f3 \n//\u548c\u5e73\u5efa\u8def \n//\u8bfb\u5165\u4f18\u5316\u5f88\u91cd\u8981 \n//\u7a7a\u95f4\u95ee\u9898 \n\nint n,m;\nint fa[410000];\nint k;\nvector<int>son[4100000];\nint tot=0;\nint a[410000];\nint sum=0;\n\nint find(int x){\n    if(fa[x]==x)return x;\n    else return fa[x]=find(fa[x]);\n}\n\nint rin(){\n    int sum=0;char ch=getchar();\n    while(!(ch>='0'&&ch<='9'))ch=getchar();\n    while(ch>='0'&&ch<='9'){\n        sum=sum*10+ch-'0';\n        ch=getchar();\n    }\n    return sum;\n}\n\nint vis[410000];\n\nvoid readp(){\n    n=rin();\n    for(int i=0;i<n;i++)fa[i]=i;\n    m=rin();\n   \n    for(int i=1;i<=m;i++){\n        int x,y;\n        x=rin();y=rin();\n        son[x].push_back(y);\n        son[y].push_back(x);\n    } \n    k=rin();\n    memset(vis,0,sizeof(vis));\n    for(int i=1;i<=k;i++){\n        a[i]=rin();\n        vis[a[i]]=1;\n    }\n    sum=n;\n    for(int x=0;x<n;x++)\n    if(vis[x]==0){\n        for(int i=0;i<son[x].size();i++)\n        {\n            int y=son[x][i];\n            if(vis[y]==1)continue;\n            int mx=find(x);\n            int my=find(y);\n            if(mx==my)continue;\n            sum--;\n            fa[mx]=my;\n        }\n    }\n}\n\nint ans[410000];\n\n\nvoid work(){\n    ans[k]=sum-k;\n    for(int i=k;i>=1;i--){\n    \tvis[a[i]]=0;\n    \tint x=a[i];\n    \tfor(int j=0;j<son[x].size();j++){\n    \t\tint y=son[x][j];\n    \t\tif(vis[y]==1)continue;\n    \t\tint mx=find(x);\n    \t\tint my=find(y);\n    \t\tif(mx==my)continue;\n    \t\tsum--;\n    \t\tfa[mx]=my;\n    \t}\n    \tans[i-1]=sum-i+1;\n    }\n    for(int i=0;i<=k;i++)\n    cout<<ans[i]<<endl;\n}\n\nint main(){\n    readp();\n    work();\n    return 0;\n}\n    \n    \n        \n        \n        \n```",
        "postTime": 1541692044,
        "uid": 25193,
        "name": "glimmer",
        "ccfLevel": 0,
        "title": "P1197 [JSOI2008]\u661f\u7403\u5927\u6218"
    },
    {
        "content": "#\u7b2c\u4e00\u6b21\u9898\u89e3\u5199\u5f97\u4e0d\u597d\u8bf7\u89c1\u8c05\n\n##\u770b\u5230\u6ca1\u4eba\u7528vector so\u6211\u5c31\u5927\u80c6\u7684\u53d1\u4e86\u4e2avector\u7684\u9898\u89e3\n\n###\u601d\u8def\u4e0e\u697c\u4e0b\u5dee\u4e0d\u591a\u4e3b\u8981\u662fvector\u7684\u533a\u522b\u5173\u952e\u8fd8\u662f\u770b\u4ee3\u7801\u5427\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int N=4e6+5;\nint fa[N],a[N],ans,sum[N],n,m,k;\nbool use[N];\nint find(int x)//\u6a21\u677f \n{\n    if(fa[x]==x)\n        return x;\n    return fa[x]=find(fa[x]);\n}\nvector <int> g[N];//\u5b58\u4e0ei\u6709\u5173\u7684\u6bcf\u4e2a\u70b9 \nint main()\n{\n    scanf(\"%d %d\",&n,&m); \n    for(int i=1;i<=n;i++)\n        fa[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d %d\",&x,&y); \n        x++,y++;//\u8fd9\u91cc\u662f\u4ece1\u5f00\u59cb \n        g[x].push_back(y);\n        g[y].push_back(x);\n    }\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        a[i]++;\n        use[a[i]]=true;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(use[i]==false)//\u5982\u679c\u6ca1\u88ab\u70b8\u6389 \n        {\n            for(int j=0;j<g[i].size();j++)\n            {\n                if(use[g[i][j]]==false)//\u8fd9\u4e24\u4e2a\u70b9\u90fd\u6ca1\u88ab\u70b8 \n                {\n                    int r1=find(i);\n                    int r2=find(g[i][j]);\n                    fa[r1]=r2;//\u5408\u5e76 \n                }\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n        if(fa[i]==i&&use[i]==false)\n            ans++;//\u7edf\u8ba1\u88ab\u70b8\u53ea\u540e\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u8054\u901a\u5757 \n    sum[k]=ans;//\u540e\u9762\u4e3a\u9006\u63a8\u8fc7\u7a0b \n    for(int i=k;i>=1;i--)//\u9006\u63a8\u6240\u4ee5\u8981\u5012\u5e8f \n    {\n        use[a[i]]=false;//\u56e0\u4e3a\u662f\u9006\u63a8so\u8fd9\u91cc\u8981\u53d8\u6210\u6ca1\u6709\u88ab\u70b8 \n        ans++;\n        for(int j=0;j<g[a[i]].size();j++)\n        {\n            if(use[g[a[i]][j]]==false)//\u5982\u679c\u8fd9\u4e5f\u6ca1\u88ab\u70b8 \n            {\n                int nx=find(g[a[i]][j]);\n                int ny=find(a[i]);\n                if(nx!=ny)//\u5982\u679c\u4e0d\u5728\u4e00\u4e2a\u8054\u901a\u5757 \n                {\n                    fa[nx]=ny;\n                    ans--;//\u5408\u5e76 \n                }\n            }\n        }\n        sum[i-1]=ans;\n    }\n    for(int i=0;i<=k;i++)\n        printf(\"%d\\n\",sum[i]);//\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1502686001,
        "uid": 45619,
        "name": "Dummerchen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "#\u5e76\u67e5\u96c6\uff01\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u9006\u7740\u8f93\u5165\u7684\u6bc1\u706d\u661f\u7403\u7684\u987a\u5e8f\u6765\u6c42\u5e76\u67e5\u96c6\u3002\u9996\u5148\u5047\u8bbe\u6240\u6709\u661f\u7403\u90fd\u88ab\u6bc1\u706d\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709\u8fd8\u5b58\u6d3b\u7684\u661f\u7403\uff0c\u8fde\u8fb9\u6c42\u5e76\u67e5\u96c6\u3002\u7136\u540e\u6309\u7167\u9006\u5e8f\u628a\u88ab\u6bc1\u706d\u7684\u661f\u7403\u4e00\u4e2a\u4e00\u4e2a\u91cd\u65b0\u52a0\u56de\u53bb\uff0c\u518d\u7edf\u8ba1\u8fde\u901a\u5757\u5373\u53ef\u3002\n\n**\u6ce8\u610f\uff01\uff01\uff01**\n\n\u5728\u540e\u9762\u6c42\u8fde\u901a\u5757\u6570\u91cf\u7684\u65f6\u5019\u4e0d\u80fd\u7528For\u5faa\u73af\u5224\u65adFather[i]==i\uff0c\u8fd9\u6837\u4f1a\u8d85\u65f6\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u6b21\u53ea\u52a0\u5165\u4e86\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u5173\u4e8e\u8fde\u901a\u5757\u6570\u91cf\u7684\u53d8\u5316\u90fd\u4e0e\u8fd9\u4e2a\u70b9\u6709\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u7684\u8fde\u901a\u5757\u6570\u91cf\u5e94\u8be5\u4ece\u4e0a\u4e00\u6b21\u6c42\u51fa\u7684\u63a8\u51fa\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u7edf\u8ba1\u3002\u5177\u4f53\u8bf7\u770b\u4ee3\u7801\u3002\n\n\u7efc\u4e0a\uff0c\u8fd9\u9053\u9898\u7684\u89e3\u9898\u987a\u5e8f\u662f\uff1a\n\n1. \u8bfb\u5165\u6240\u6709\u6570\u636e\uff08\u56e0\u4e3a\u8981\u79bb\u7ebf\u64cd\u4f5c\uff09\n\n2. \u5148\u7edf\u8ba1\u4e00\u6b21\u5220\u6389\u6240\u6709\u88ab\u6bc1\u706d\u661f\u7403\u540e\u7684\u8fde\u901a\u5757\u6570\u91cf\u5e76\u6c42\u5e76\u67e5\u96c6\n\n3. \u628a\u88ab\u5220\u7684\u661f\u7403\u5012\u5e8f\u4e00\u4e2a\u4e00\u4e2a\u52a0\u5165\uff0c\u6c42\u5e76\u67e5\u96c6\u5e76\u8ba1\u7b97\u8fde\u901a\u5757\u6570\u91cf\n\n4. \u4f9d\u6b21\u8f93\u51fa\u8fde\u901a\u5757\u7684\u6570\u91cf\n\n\u00b7\u00b7\u00b7cpp\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int maxN=402000;\nconst int maxM=201000;\nconst int inf=2147483647;\nint n,m,K;\nvector<int> E[maxN];\nbool Destroy[maxN]={0};//\u67d0\u661f\u7403\u662f\u5426\u88ab\u6bc1\u706d\nint Destroy_Order[maxN];//\u5b58\u653e\u88ab\u6bc1\u706d\u7684\u661f\u7403\u53ca\u5176\u987a\u5e8f\nint Mayuri[maxN];//\u5e76\u67e5\u96c6\u7684Father\u6570\u7ec4\nint LTKnum[maxN]={0};\nbool Union(int u,int v);\nint Find(int x);\nint main()\n{\n    int u,v;\n    cin>>n>>m;\n    for (int i=1;i<=m;i++)\n    {\n        cin>>u>>v;\n        u++;v++;\n        E[u].push_back(v);\n        E[v].push_back(u);\n    }\n    cin>>K;\n    for (int i=1;i<=K;i++)\n    {\n        cin>>Destroy_Order[i];\n        Destroy_Order[i]++;//\u6ce8\u610f\u9898\u76ee\u4e2d\u7684\u7f16\u53f7\u662f\u4ece0-(n-1)\n        Destroy[Destroy_Order[i]]=1;\n    }\n    for (int i=1;i<=n;i++)\n        Mayuri[i]=i;\n    for (int i=1;i<=n;i++)\n        if (Destroy[i]==0)\n            for (int j=0;j<E[i].size();j++)\n            {\n                v=E[i][j];\n                if (Destroy[v]==0)\n                    Union(i,v);\n            }\n    int Ans=0;\n    for (int i=1;i<=n;i++)\n    {\n        if ((Mayuri[i]==i)&&(Destroy[i]==0))\n            Ans++;//\u7edf\u8ba1\u8fde\u901a\u5757\u6570\u91cf\n    }\n    for (int i=K;i>=1;i--)\n    {\n        LTKnum[i]=Ans;\n        u=Destroy_Order[i];\n        Destroy[u]=0;\n        Ans++;//\u56e0\u4e3a\u591a\u4e86\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u8fde\u901a\u5757\u6570\u91cf\u5148+1\n        for (int j=0;j<E[u].size();j++)\n        {\n            v=E[u][j];\n            if (Destroy[v]==0)\n            {\n                if (Union(u,v))\n                    Ans--;//\u5982\u679c\u52a0\u5165\u8be5\u70b9\u540e\u65f6\u539f\u6765\u4e0d\u8fde\u901a\u7684\u4e24\u4e2a\u8fde\u901a\u5757\u8054\u901a\uff0c\u5219\u603b\u8fde\u901a\u5757\u6570\u91cf-1\n            }\n        }\n    }\n    LTKnum[0]=Ans;\n    for (int i=0;i<=K;i++)\n    {\n        cout<<LTKnum[i]<<endl;\n    }\n    return 0;\n}\nbool Union(int u,int v)//\u5408\u5e76\n{\n    int fu=Find(u);\n    int fv=Find(v);\n    if (fu!=fv)\n    {\n        Mayuri[fu]=fv;\n        return 1;\n    }\n    return 0;\n}\nint Find(int x)\n{\n    if (Mayuri[x]!=x)\n        Mayuri[x]=Find(Mayuri[x]);\n    return Mayuri[x];\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1498795281,
        "uid": 21377,
        "name": "songyuchen",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u591a\u7ed9C\u515a\u4e00\u70b9\u7231\n\n\u9006\u5411\u601d\u7ef4\u52a0\u5e76\u67e5\u96c6\uff0c\u56e0\u4e3a\u5e76\u67e5\u96c6\u7684\u7279\u6027\u5bfc\u81f4\u5b83\u53ea\u80fd\u5408\u5e76\u70b9\u800c\u4e0d\u80fd\u5220\u70b9 \u6240\u4ee5\u9700\u8981\u9006\u5411\u6765\u601d\u8003\uff0c\u5148\u628a\u6240\u6709\u5c06\u8981\u5220\u9664\u7684\u70b9\u90fd\u5220\u6389\u8ba1\u7b97\u51fa\u7ed3\u679c\uff0c\u518d\u4ece\u540e\u5230\u524d\u9762\u4f9d\u6b21\u52a0\u70b9\u5408\u5e76 \u800c\u8fd9\u91cc\u9700\u8981\u5148\u7ef4\u62a4\u4e00\u4e2a\u65e0\u5411\u56fe\u6765\u8bb0\u5f55\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u6709\u4e00\u4e2a\u70b9\u9700\u8981\u60f3\u540c\uff0c\u5c31\u662f\u5982\u4f55\u627e\u6709\u591a\u5c11\u5757 \u4ee5\u4e3a\u662f\u9006\u5411\u601d\u8003\u6240\u4ee5\u76f4\u63a5\u8bb0\u5f55cnt \u7136\u548c\u6ca1\u6dfb\u52a0\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u5c31cnt\u51cf\u53bb\u4ed6\u6240\u6709\u7684\u8fb9\u6570\uff08\u65e0\u5411\u56fe\u4e2d\uff09\u518d\u52a0\u4e00\uff08\u60f3\u60f3\uff0c\u4f8b\u5982\u4ed6\u53ea\u548c\u4e00\u4e2a\u70b9\u76f8\u8fde\u800c\u6700\u540e\u7684\u5757\u6570\u8fd8\u662f\u4e00\u4e0d\u53d8\uff09\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n        \n\n```cpp\n//\u9006\u5411\u601d\u7ef4\u5148\u7834\u574f\u518d\u8054\u901a \n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<vector>\n#define PB(a)  push_back(a)\n#include<stack>\n#define maxn 400020\nusing namespace std;\nint n,m,k,fa[maxn],br[maxn],vis[maxn];\nvector<int >G[maxn];\nstack<int >ans;\nint find(int x){\n    if(fa[x]==x)return x;\n    return fa[x]=find(fa[x]);\n}\nint cnt;\nvoid te(int u){\n    for(int i=0;i<G[u].size();i++){\n        int v=G[u][i];\n        if(vis[v])continue;\n        int dx=find(u);\n        int dy=find(v);\n        if(dx!=dy)cnt--;\n        if(dx!=dy)fa[dx]=dy;\n    }\n           if(vis[u])cnt++;\n           vis[u]=0;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        x++,y++;\n        G[x].PB(y);\n        G[y].PB(x);\n    }\n    for(int i=1;i<=n;i++)fa[i]=i;\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++){\n        int x; \n        scanf(\"%d\",&x);\n        x++;\n        vis[x]=1;\n        br[i]=x;\n    }\n    cnt=n-k;\n    for(int i=1;i<=n;i++){\n        if(!vis[i])te(i);\n    }\n    ans.push(cnt);\n    for(int i=k;i>=1;i--){\n        te(br[i]);\n        ans.push(cnt);\n    }\n    while(!ans.empty()){\n        printf(\"%d\\n\",ans.top());\n        ans.pop();\n    }\n    return 0;\n}\n\n```",
        "postTime": 1466317889,
        "uid": 18431,
        "name": "intruder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u52a8\u6001\u6c42\u8054\u901a\u5757\u4e2a\u6570\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u4e2a\u5f88\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u6bcf\u6b21\u91cd\u5efa\u56fe\uff0c\u7136\u540e\u8dd1\u4e00\u904dTarjan\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0N\u7684\u8303\u56f4\u975e\u5e38\u5927\uff0c\u73b0\u573a\u80fd\u591f\u66b4\u529b\u5230\u4e00\u4e24\u7ec4\u6570\u636e\u5df2\u7ecf\u975e\u5e38\u4e0d\u9519\u4e86\u3002\n\n \n\u6211\u4eec\u8003\u8651\u5176\u4ed6\u65b9\u6cd5\u3002\n\n \n\u9898\u76ee\u8981\u6c42\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u70b9\uff0c\u6c42\u5176\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u3002\u90a3\u4e48\u6211\u4eec\u9006\u5411\u601d\u7ef4\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4ece\u7ec8\u6b62\u72b6\u6001\u5f00\u59cb\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u70b9\uff0c\u6c42\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u3002\n\n \n\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u5206\u6790\u4e00\u4e0b\uff0c\u5047\u8bbe\u5f53\u524dP\u70b9\u4e0d\u53ef\u7528\u90a3\u4e48\u4e0eP\u76f8\u8fde\u7684N\u4e2a\u70b9\u4e2d\u5206\u5c5e\u4e8eM\u4e2a\u4e0d\u540c\u7684\u8fde\u901a\u5206\u91cf\uff1b\u5982\u679c\u6211\u4eec\u73b0\u5728\u4f7fP\u70b9\u53ef\u7528\uff0c\u90a3\u4e48\u8fd9M\u4e2a\u8fde\u901a\u5206\u91cf\u5c06\u88ab\u5408\u5e76\u6210\u4e3a\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u6574\u4e2a\u56fe\u7684\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u51cf\u5c11\u4e86\uff08M-1\uff09\u4e2a\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u6839\u8282\u70b9\uff0c\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u70b9\uff0c\u5c31\u5c06\u5176\u76f8\u8fde\u7684\u8fde\u901a\u5206\u91cf\u5408\u5e76\uff0c\u66f4\u65b0\u4e00\u4e0b\u6574\u4e2a\u56fe\u4e2d\u7684\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u5373\u53ef\u3002\n\n\n\u4ee3\u7801\u53d8\u91cf\u57fa\u672c\u90fd\u662f\u5355\u8bcd= =\u3001\u6bd4\u8f83\u597d\u61c2\uff08\u4e0d\u6392\u9664\u62fc\u9519\u54c8~\uff09\n\n\n\n<hr>\n\u94fe\u8868\u5904\u7406\uff0c\u4f60\u61c2\u5f97\n\n\n```delphi\n\nprocedure add(a,b:longint);\nbegin\n  inc(t);\n  link[t].s:=a; link[t].t:=b;\n  link[t].next:=front[a]; front[a]:=t;\nend;\n\n\n```\n\n\n<hr>\n\u5408\u5e76\n\n```delphi\n\n\nprocedure union(a,b:longint);\nbegin\n  father[b]:=a;\nend;\n\n\n```\n\n\n<hr>\n\u5bfb\u627e\u7956\u5148\u987a\u4fbf\u8def\u5f84\u538b\u7f29\n\n\n```delphi\n\n\nfunction find(x:longint):longint;\nbegin\n  if father[x]=0 then exit(x);\n  find:=find(father[x]);\n  father[x]:=find;\nend;\n\n\n```\n\n\n<hr>\n\u4e3b\u7a0b\u5e8f cnt\u4e3a\u8054\u901a\u5757\u4e2a\u6570\n\n\n```delphi\n\n\n  cnt:=0;\n  for i:=1 to n do if (remain[i]) and (father[i]=0) then inc(cnt);\n  ans[p]:=cnt;\n  for i:=1 to p do\n    begin\n      remain[destroy[i]]:=true;\n      point:=front[destroy[i]];\n      while point<>0 do\n        begin\n          if (remain[link[point].t]) and\n             (find(link[point].t)<>find(link[point].s))\n          then\n            begin\n              dec(cnt);\n              union(find(link[point].t),find(link[point].s));\n            end;\n           point:=link[point].next;\n        end;\n      inc(cnt);\n      ans[p-i]:=cnt;\n    end;\n\n\n```",
        "postTime": 1376144051,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u601d\u8def:  \n\u672c\u9898\u76ee\u4e0e $p2700$ \u7c7b\u4f3c\u3002  \n\u5411\u56fe\u4e2d\u6b63\u5411\u51cf\u70b9\u51cf\u8fb9\uff0c\u6bcf\u6b21\u90fd\u6784\u5efa\u5e76\u67e5\u96c6\uff0c\u8ba1\u7b97\u8054\u901a\u5757\u7684\u65b9\u6cd5  \n\n# \u80af\u5b9a\u4f1aTLE\n\n\n\u5219\u9700\u8981\u628a\u601d\u8def\u8c03\u8f6c\uff1a  \n\n\u9700\u8981\u5148\u5c06\u8def\u5f84\u90fd\u63a8\u5012,\u518d\u91cd\u65b0\u5efa\u8fb9  \n\u5148\u8f93\u5165\u5404\u8fb9,\u88ab\u6467\u6bc1\u7684\u661f\u7403,  \n\u5e76\u5c06\u5176\u79bb\u7ebf\u50a8\u5b58 (\u6ce8\u610f\u5b58\u65e0\u5411\u56fe)   \n\n\n\u4e4b\u540e,\u5efa\u8d77\u4e0d\u5305\u62ec\u5b58\u50a8\u7684 *\u88ab\u6467\u6bc1\u7684\u661f\u7403* \u7684\u5e76\u67e5\u96c6,  \n\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u6700\u540e\u72b6\u6001\u7684\u8054\u901a\u5757\u60c5\u51b5\u4e0e\u6570\u91cf   \n\n\u4e4b\u540e\u6309\u4ece\u540e\u5f80\u524d\u7684\u88ab\u6467\u6bc1\u987a\u5e8f,  \n\u4f9d\u6b21\u5c06\u88ab\u6467\u6bc1\u7684\u7684\u661f\u7403\u590d\u539f\uff0c  \n\u6dfb\u52a0\u5230\u5e76\u67e5\u96c6\u4e2d\u3002   \n\u5e76\u5c06\u8fd9\u4e2a\u88ab\u6467\u6bc1\u661f\u7403  \n\u4e0e\u5176\u4ed6\u5f53\u524d\u6ca1\u6709\u88ab\u6467\u6bc1\u7684\u661f\u7403    \n\u6309\u7167\u50a8\u5b58\u7684\u8def\u5f84\u76f8\u8fde\u63a5\n\n\u5c31\u53ef\u4ee5\u5206\u522b\u5f97\u5230  \n\u590d\u539f\u67d0\u4e2a\u661f\u7403\u65f6\u7684\u8054\u901a\u5757\u6570   \n\u5f53\u590d\u539f\u6240\u6709\u88ab\u6467\u6bc1\u661f\u7403\u540e\uff0c  \n\u5c31\u5f97\u5230\u4e86\u539f\u59cb\u72b6\u6001\u7684\u8054\u901a\u5757\u6570 \n\n\u518d\u6309\u7167\u5904\u7406\u987a\u5e8f\uff0c  \n\u53cd\u5411\u8f93\u51fa\u8054\u901a\u5757\u6570,\u5373\u53ef;\n\n### ps\uff1a\u6b64\u5904join\u51fd\u6570\u4e0d\u53ea\u6709\u5e76\u96c6\u7684\u4f5c\u7528\uff0c\u8fd8\u7528\u6765\u8ba1\u7b97\u8054\u901a\u5757\u6570\n\n------------\n\n### \u9644\u4e0a ~~\u5947\u4e11\u7684~~ AC\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,m,k;\nint pre[400010],kk[400010],head[400010],ans[400010];\n//\u5206\u5b58\u7956\u5148\uff0c\u88ab\u6467\u6bc1\u661f\u7403\u7f16\u53f7\uff0c\u90bb\u63a5\u8868\u5404\u70b9\u6240\u5bf9\u7684\u8fb9\uff0c\u7b54\u6848\nstruct baka9\n{\n\tint u,v,ne;//\u5b58\u8fb9 \n}bian[400010];//\u65e0\u5411\u56fe,\u4e24\u500d\u8fb9 \nint lian,num;//\u5b58\u8054\u901a\u5757\u6570\u4e0e\u8fb9\u6570 \nbool judge[400010];//\u5224\u65ad\u661f\u7403\u662f\u5426\u7206\u70b8 \nint find(int x);//\u67e5\u96c6 \nvoid join(int x,int y);//\u5e76\u96c6\u5e76\u8ba1\u7b97\u8054\u901a\u5757\u6570\nvoid add(int x,int y);//\u6dfb\u52a0\u8fb9 \n//---------------------------------------------------\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=0;i<n;i++)\n\t  pre[i]=i;//\u521d\u59cb\u5316\u7956\u5148 \n\tfor(int i=1;i<=m;i++)//\u8f93\u5165\u5404\u8fb9 \n\t  {\n\t  \tint x,y;\n\t  \tscanf(\"%d%d\",&x,&y);\n\t  \tadd(x,y);//\u6dfb\u52a0\u65e0\u5411\u56fe\n\t  \tadd(y,x);\n\t  }\n\tscanf(\"%d\",&k);\n\tfor(int i=k;i>=1;i--)//\u53cd\u5411\u8bb0\u5f55\u88ab\u6467\u6bc1\u661f\u7403 \n\t  {\n\t  \tscanf(\"%d\",&kk[i]); \n\t  \tjudge[kk[i]]=1;\n\t  }\n\tlian=n-k;//\u521d\u59cb\u5316\u8054\u901a\u5757\u6570,\u4f7f\u6bcf\u4e2a\u6ca1\u88ab\u6467\u6bc1\u7684\u661f\u7403\u90fd\u5355\u72ec\u5728\u4e00\u4e2a\u96c6\u5b50\u91cc\n\tfor(int i=0;i<n;i++)//\u6784\u5efa\u6700\u540e\u4f4d\u7f6e\u7684\u5e76\u67e5\u96c6 \n\t  {\n\t  \tif(judge[i])//\u88ab\u6467\u6bc1\u4e86,\u5c31\u627e\u4e0b\u4e00\u4e2a \n\t\t  continue;\n\t\tfor(int j=head[i];j;j=bian[j].ne)//\u6ca1\u88ab\u6467\u6bc1,\u5c31\u628a\u5b83\u4e0e\u76f8\u90bb\u7684\u6ca1\u6467\u6bc1\u7684\u661f\u7403\u6dfb\u52a0\u5230\u5e76\u67e5\u96c6\u4e2d \n\t\t  if(judge[bian[j].v] == 0)\n\t\t  \tjoin(bian[j].u,bian[j].v);\n\t  }\n\tans[k+1]=lian;//\u8ba1\u7b97\u51fa\u4e86\u6700\u540e\u4f4d\u7f6e\u7684\u8054\u901a\u5757\u6570\n\tfor(int i=1;i<=k;i++)//\u8ba1\u7b97\u5404\u4f4d\u7f6e\u7684\u8054\u901a\u5757 \n\t  {\n\t  \tjudge[kk[i]]=0;//\u8fd8\u539f\u661f\u7403 \n\t  \tlian++;//\u521d\u59cb\u5316,\u4f7f\u8fd9\u4e2a\u661f\u7403\u5355\u72ec\u4e00\u4e2a\u96c6.\n\t  \tfor(int j=head[kk[i]];j;j=bian[j].ne)//\u6dfb\u52a0\u6ca1\u7206\u70b8\u7684\u76f8\u90bb\u661f\u7403 \n\t  \t  if(judge[bian[j].v] == 0)\n\t\t\tjoin(bian[j].u,bian[j].v);\n\t  \tans[k-i+1]=lian;//\u8bb0\u5f55 \n\t  }\n\tfor(int i=1;i<=k+1;i++)//\u8f93\u51fa \n\t  printf(\"%d\\n\",ans[i]);\n    return 0;//\u5b8c\u7f8e\u6f47\u6d12\u306e\u7ed3\u675f\n}\n//---------------------------------------------------\nint find(int x)//\u67e5\u96c6\n{\n\tif(pre[x]==x) return x;\n\telse return pre[x]=find(pre[x]);\n}\nvoid join(int x,int y)//\u5e76\u96c6\n{\n\tint r1=find(x);\n\tint r2=find(y);\n\tif(r1 != r2)\n\t  {\n\t  \tpre[r2]=r1;//\u5982\u679c\u6709\u4e24\u4e2a\u4e0d\u540c\u7ec4\u7684\u96c6\u5408\u5408\u5e76 \n\t  \tlian--;//\u90a3\u4e48\u8054\u901a\u5757\u6570\u51cf\u4e00. \n\t  }\n}\nvoid add(int x,int y)//\u90bb\u63a5\u8868\u52a0\u8fb9\n{\n\tbian[++num].ne=head[x];\n\tbian[num].u=x;\n\tbian[num].v=y;\n\thead[x]=num; \n}\n```\n",
        "postTime": 1555386222,
        "uid": 186186,
        "name": "\u7075\u4e4c\u8def\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u534a\u5e74\u524d\u5c31\u770b\u5230\u8fd9\u9898\uff0c\u73b0\u5728\u7ec8\u4e8e\u60f3\u660e\u767d\u4e86\n\n\u770b\u5230\u201c\u8054\u901a\u5757\u201d\uff0c\u5c31\u8981\u60f3\u5230\u5e76\u67e5\u96c6\u3002\u4f46\u662f\u666e\u901a\u5e76\u67e5\u96c6\u4e0d\u652f\u6301\u5206\u88c2\u64cd\u4f5c\uff08\u9664\u975e\u662f$O(n)$\u7684\u795e\u4ed9\u5e76\u67e5\u96c6\uff09\uff0c\u90a3\u600e\u4e48\u641e\uff1f\n\n~~\u90a3\u5c31\u5148\u80e1\u4e71\u60f3\u7136\u540e\u90fd\u8bd5\u8bd5~~  \n\n\u8003\u8651\u5206\u88c2\uff0c\u6bcf\u6b21\u5206\u88c2\u4f1a\u5bfc\u81f4\u4e00\u68f5\u6811\u88c2\u6210\u4e24\u68f5\uff08\u901a\u5e38\uff09\uff0c\u90a3\u53cd\u8fc7\u6765\uff0c\u5206\u88c2\u524d\u6bd4\u5206\u88c2\u540e\u5c31\u662f\u4e24\u68f5\u6811\u5408\u6210\u4e00\u68f5\uff0c\u8fd9\u4e0d\u6b63\u662f\u5e76\u67e5\u96c6\u6700\u64c5\u957f\u7684\u5408\u5e76\u64cd\u4f5c\u5417\uff1f\uff01\n\n\u770b\u5230\u8fd9\u91cc\uff0c\u4f60\u53ef\u4ee5\u8bd5\u7740\u53bb\u7801\u4e00\u7801\uff0c\u5982\u679c\u4e0d\u4f1a\u6216WA\u4e86\u518d\u770b\u4e0b\u9762\u7684\n\n\n------------\n\n\n\u4f46\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u8fd9\u6837\u53cd\u8fc7\u6765\u505a\u53c8\u5982\u4f55\u77e5\u9053\u6709\u51e0\u4e2a\u8054\u901a\u5757\u5462\uff1f\n\n\u5c06\u64cd\u4f5c\u79bb\u7ebf\u5230del\u6570\u7ec4\uff0c\u540c\u65f6\u5f00\u4e00\u4e2ap\u6570\u7ec4,\u88ab\u5e72\u6389\u7684\u70b9u,p[u]=1\n\n**\u7136\u540e\u62ff\u4e00\u4e2a\u5e76\u67e5\u96c6\u5e76\u521d\u59cb\u5316**\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u672a\u88ab\u5e72\u6389\u7684u,\u5c06\u8054\u901a\u5757\u6570\u52a0\u4e00\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761u->v\u4e14\u672a\u88ab\u5e72\u6389\u7684v\uff0c\u5c06u,v\u5408\u5e76\uff0c\u82e5\u5408\u5e76\u6210\u529f\uff08u\uff0cv\u539f\u672c\u4e0d\u5728\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\uff09\u5219\u8054\u901a\u5757\u6570\u51cf\u4e00\uff0c\u5c31\u53ef\u77e5\u6700\u540e\u5269\u4e0b\u7684\u8054\u901a\u5757\u6570\u4e86\n\n\u63a5\u4e0b\u6765\u4ece\u540e\u5f80\u524d\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u88ab\u5e72\u6389\u7684u\uff0cans\u8bb0\u5f55\u73b0\u5728\u5269\u4e0b\u7684\u8054\u901a\u5757\u6570\uff0c\u628ap[u]=1,\u5c06\u8054\u901a\u5757\u6570\u52a0\u4e00\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761u->v\u4e14\u672a\u88ab\u5e72\u6389\u7684v\uff0c\u5c06u,v\u5408\u5e76\uff0c\u82e5\u5408\u5e76\u6210\u529f\uff08u\uff0cv\u539f\u672c\u4e0d\u5728\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\uff09\u5219\u8054\u901a\u5757\u6570\u51cf\u4e00\u3002  \n\u5168\u90e8\u5408\u5e76\u5b8c\u540e\uff0c\u5269\u4f59\u7684\u8054\u901a\u5757\u6570\u5c31\u662f\u6700\u521d\u7684\u8054\u901a\u5757\u6570,\u7136\u540e\u628aans\u6b63\u5411\u8f93\u51fa\n\n\u6700\u540e\u8d34\u4e00\u4e0b\u4ee3\u7801\u5427(\u6211\u4e60\u60ef\u4e0b\u6807\u4ece1\u5f00\u59cb)\uff0c\u5c01\u88c5\u7684\u5e76\u67e5\u96c6\uff08ufs\uff09\u4ee4\u4eba\u8212\u9002\n```cpp\n#include<cstdio>\n#include<algorithm>\n\ntypedef long long ll;//\u4e5f\u8bb8\u7528int\u4e5f\u884c\nll read()//\u5feb\u8bfb\n{\n    ll x=0,f=1;\n    char c;\n    do\n    {\n        c=getchar();\n        if(c=='-')f=-1;\n    }while(c<'0'||c>'9');\n    do\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }while(c>='0'&&c<='9');\n    return f*x;\n}\n\n#define maxn 400011\nll n,m,k,res=0;\nll ans[maxn],del[maxn];//\u7b54\u6848\u6570\u7ec4,\u6253\u51fb\u7684u\u7684\u79bb\u7ebf\u6570\u7ec4\nbool p[maxn];//p[u]=1 :\u88ab\u6253\u51fb;p[u]=0 :\u672a\u88ab\u6253\u51fb\n\nstruct Edge//\u5b58\u56fe\n{\n    ll v,nxt;\n}e[maxn<<1|1];\nll cnt=0,last[maxn];\nvoid adde(ll u,ll v)\n{\n    e[++cnt].v=v;\n    e[cnt].nxt=last[u];last[u]=cnt;\n}\n\nstruct ufs//\u5c01\u88c5\u5e76\u67e5\u96c6\n{\n    ll fa[maxn];\n    void build(ll n)\n    {\n        for(ll i=1;i<=n;++i)fa[i]=i;\n    }\n    ll find(ll x)\n    {\n        if(fa[x]==x)return x;\n        return fa[x]=find(fa[x]);\n    }\n    bool uni(ll u,ll v)//\u5408\u5e76\u6210\u529f\u8fd4\u56de1\n    {\n        u=find(u),v=find(v);\n        if(u==v)return 0;\n        fa[u]=v;\n        return 1;\n    }\n}s;\n\nvoid rsum(ll u)//\u6062\u590du\n{\n    ++res;\n    for(ll i=last[u];i;i=e[i].nxt)\n    {\n        ll v=e[i].v;\n        if(!p[v]&&s.uni(u,v))--res;\n    }\n}\nint main()\n{\n    n=read(),m=read();\n    for(ll i=1;i<=m;++i)\n    {\n        ll u=read()+1,v=read()+1;//\u6211\u4e60\u60ef\u4e0b\u6807\u4ece1\u5f00\u59cb\n        adde(u,v);\n        adde(v,u);\n    }\n    k=read();\n    for(ll i=1;i<=k;++i)\n    {\n        ll u=read()+1;\n        del[i]=u;//\u79bb\u7ebf\n        p[u]=1;\n    }\n    s.build(n);//\u5efa\u7acb\u5e76\u67e5\u96c6\n    for(ll i=1;i<=n;++i)//\u672a\u88ab\u6253\u51fb\u7684\u8fde\u8d77\u6765\n        if(!p[i])rsum(i);\n    for(ll i=k;i>=1;--i)//\u53cd\u8fc7\u6765\u6062\u590d\n    {\n        ans[i]=res;//\u5fc5\u987b\u8981\u5148\u8bb0\u5f55ans,\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48?\n        p[del[i]]=0;//\u6062\u590d\n        rsum(del[i]);\n    }\n    printf(\"%lld\\n\",res);\n    for(ll i=1;i<=k;++i)//\u6b63\u5e8f\u8f93\u51fa\n        printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```\n\u8fd8\u6709\u4e0d\u61c2\u7684\u79c1\u4fe1\u6211,\u8bc4\u8bba\u770b\u4e0d\u89c1",
        "postTime": 1553408944,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u5012\u7740\u505a\u7684\u5e76\u67e5\u96c6\n\n\u5f00\u59cb\u7684\u65f6\u5019\u6253\u4e86\u4e00\u4e2a\u66b4\u529b\uff08\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\u90fd\u505a\u67e5\u8be2\uff0c40\u5206\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nbool b[400010];\n//b\u6570\u7ec4\u8868\u793a\u5f53\u524d\u70b9\u662f\u5426\u88ab\u653b\u51fb\nll father[400010],n,m,k,fire[400010],ans[400010];\n//fire\u4e2d\u5b58\u7684\u662f\u6240\u6709\u70b9\u7684\u88ab\u653b\u51fb\u65f6\u95f4\n//father\u4e2d\u5b58\u7684\u662f\u7236\u4eb2\u8282\u70b9\n//ans\u4e2d\u5b58\u7b54\u6848\nvector<ll> q[400010];\n//q\u4e2d\u5b58\u7684\u662f\u6240\u6709\u8fb9\u6784\u6210\u7684\u56fe\n\nll searchfather(ll v){//\u5e76\u67e5\u96c6\u627e\u7236\u4eb2\n    if(father[v]==v) return father[v];\n    father[v]=searchfather(father[v]);\n    return father[v];\n}\n\ninline ll find(){//\u627e\u8054\u901a\u5757\u7684\u4e2a\u6570\n    ll sum=0;\n    for(ll i=0; i<n; i++){\n        if(b[i]){//\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u6467\u6bc1\uff0c\u66f4\u65b0\n            father[i]=searchfather(i);\n            if(father[i]==i) sum++;\t\n        }\n    }\n    return sum;\n}\n\nint main(){\n    scanf(\"%lld %lld\",&n,&m);\n    for(ll i=0; i<n; i++) father[i]=i;\n    //\u5343\u4e07\u522b\u5fd8\u4e86\u521d\u59cb\u5316\n    while(m--){\n        ll x,y;\n        scanf(\"%lld %lld\",&x,&y);\n        q[x].push_back(y);\n        q[y].push_back(x);\n    }//\u5efa\u56fe\n    \n    scanf(\"%lld\",&k);\n    memset(b,true,sizeof(b));\n    for(ll i=1; i<=k; i++){\n        scanf(\"%lld\",&fire[i]);\n        b[fire[i]]=false;//\u6807\u8bb0\u5df2\u7ecf\u88ab\u6253\u6389\u7684\u70b9\n    }\n    \n    for(ll i=0; i<n; i++){\n        if(b[i]){//\u7a77\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u6709\u6ca1\u6709\u88ab\u6253\u6389\n            for(ll j=0; j<q[i].size(); j++){//\u627e\u4e0e\u5b83\u76f8\u8fde\u7684\u8fb9\n                ll Next=q[i][j];//\u5bf9\u5e94\u7684\u70b9\n                if(b[Next]){//\u5bf9\u5e94\u7684\u70b9\u6ca1\u6709\u88ab\u6253\u6389\n                    ll f1=searchfather(i),f2=searchfather(Next);\n                    if(father[f1]!=f2) father[f1]=f2;\n                    //\u5e76\n                }\n            }\t\n        }\n    }\n    \n    for(ll i=k; i>=1; i--){//\u5012\u7740\u505a\n        ans[i]=find();\n        ll x=fire[i]; b[x]=true;//\u8fd9\u4e2a\u70b9\u6062\u590d\u4e86\n        for(ll j=0; j<q[x].size(); j++){\n            ll y=q[x][j];\n            if(b[y]){\n                ll f1=searchfather(x),f2=searchfather(y);\n                if(father[f1]!=f2) father[f1]=f2;\n                //\u5e76\n            }\n        }\n    }\n    printf(\"%lld\\n\",find());\n    //\u8fd9\u5e02\u5e76\u67e5\u96c6\u8868\u793a\u7684\u5df2\u7ecf\u662f\u521d\u59cb\u56fe\uff0c\u76f4\u63a5\u627e\n    for(ll i=1; i<=k; i++) printf(\"%lld\\n\",ans[i]);//\u524d\u9762\u5df2\u7ecf\u5012\u7740\u5b58\uff0c\u6240\u4ee5\u8fd9\u91cc\u6b63\u7740\u8f93\u51fa\n    return 0;\n}\n```\n\u4ee3\u7801\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff1aO(kn)\n\n\u90a3\u4e2ak\u662f\u8fbe\u5230\u4e86\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4e0b\u9650\uff0c\u4e0d\u80fd\u7ee7\u7eed\u4f18\u5316\u4e86\uff0c\u90a3\u4e48O(n)\u600e\u4e48\u4f18\u5316\u5462\n\n\u6211\u4eec\u53d1\u73b0\uff1a\n\n## \u5bf9\u4e8e\u6bcf\u4e00\u6b21\u5408\u5e76\uff0c\u53d1\u751f\u6539\u53d8\u7684\u96c6\u5408\u4e00\u5b9a\u4e0efire[i]\u8fd9\u4e2a\u70b9\u76f4\u63a5\u76f8\u8fde\n\n\u9664\u4e86\u7b2c\u4e00\u6b21\u67e5\u8be2\uff0c\u522b\u7684\u5728\u5e76\u7684\u65f6\u5019\u76f4\u63a5\u5f3a\u5236\u5728\u7ebf\u5904\u7406\u3002\n\nAC\u4ee3\u7801\uff08\u672c\u4ee3\u7801\u4ec5\u5728\u6709\u4fee\u6539\u7684\u5730\u65b9\u505a\u6ce8\u91ca\uff09\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nusing namespace std;\n\nbool b[400010];\nll father[400010],n,m,k,fire[400010],ans[400010],now;\n//now\u8868\u793a\u5f53\u524d\u5e76\u67e5\u96c6\u7684\u4e2a\u6570\nvector<ll> q[400010];\n\nll searchfather(ll v){\n    if(father[v]==v) return father[v];\n    father[v]=searchfather(father[v]);\n    return father[v];\n}\n\ninline ll find(){\n    ll sum=0;\n    for(ll i=0; i<n; i++){\n        if(b[i]){\n            father[i]=searchfather(i);\n            if(father[i]==i) sum++;\n        }\n    }\n    return sum;\t\n}\n\nint main(){\n    scanf(\"%lld %lld\",&n,&m);\n    for(ll i=0; i<n; i++) father[i]=i;\n    while(m--){\n        ll x,y;\n        scanf(\"%lld %lld\",&x,&y);\n        q[x].push_back(y);\n        q[y].push_back(x);\n    }\n    \n    scanf(\"%lld\",&k);\n    memset(b,true,sizeof(b));\n    for(ll i=1; i<=k; i++){\n        scanf(\"%lld\",&fire[i]);\n        b[fire[i]]=false;\n    }\n    \n    for(ll i=0; i<n; i++){\n        if(b[i]){\n            for(ll j=0; j<q[i].size(); j++){\n                ll Next=q[i][j];\n                if(b[Next]){\n                    ll f1=searchfather(i),f2=searchfather(Next);\n                    if(father[f1]!=f2) father[f1]=f2;\n                }\n            }\t\n        }\n    }\n    \n    now=find();\n    for(ll i=k; i>=1; i--){\n        ans[i]=now;\n        ll x=fire[i]; b[x]=true;\n        now++;\n        //\u56e0\u4e3a\u5408\u5e76\u8ba1\u6570\u7684\u65f6\u5019\u628a\u5f53\u524d\u7684\u70b9\u4e5f\u7b97\u8fdb\u53bb\u4e86\uff0c\u800cnow\u4e2d\u4e0d\u5305\u542b\uff0c\u591a-1\uff0c\u6240\u4ee5\u8981\u52a0\u4e0a\u53bb\n        for(ll j=0; j<q[x].size(); j++){\n            ll y=q[x][j];\n            if(b[y]){\n                ll f1=searchfather(x),f2=searchfather(y);\n                if(father[f1]!=f2){\n                    father[f1]=f2;\n                    now--;//\u6709\u5408\u5e76\u8bf4\u660e\u5e76\u67e5\u96c6\u51cf\u5c11\u4e86\u4e00\u4e2a\uff0cnow -1\n                    //\u8fd9\u91cc\u5bf9\u4e8e\u65b0\u52a0\u8fdb\u53bb\u7684\u96c6\u5408\u7684\u5904\u7406\u5728\u4e0a\u9762\uff0c\u6b64\u5904\u4e0d\u518d\u8bf4\u660e\n                }\n            }\t\n        }\n    }\n    printf(\"%lld\\n\",now);\n    for(ll i=1; i<=k; i++) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1547016975,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "## A\u8fd9\u9053~~\u6bd4\u8f83\u6c34~~\u7684\u9898\u76ee\u82b1\u4e86\u597d\u957f\u65f6\u95f4\u554a\n\u9996\u5148\u8fd9\u9053\u9898\u80af\u5b9a\u662f\u8981\u53cd\u5411\u5e76\u67e5\u96c6\u7684\uff08\u53cd\u6b63\u6211\u4e5f\u4e0d\u4f1a\u4ece\u5e76\u67e5\u96c6\u4e0a\u5220\u53bb\u4e00\u4e2a\uff09\uff0c\u4f46\u662f\u60f3\u5230\u8fd9\u79cd\u7a0b\u5ea6\u5e76\u4e0d\u80fdAC\uff0c\u770b\u4e00\u770b\u6570\u636e\u8303\u56f4200000\uff0c\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u6bcf\u6b21\u5224\u65ad\u5e76\u67e5\u96c6\u7684\u4e2a\u6570\uff0c\u800c\u662f\u603b\u7684\u7edf\u8ba1\uff0c\u624d\u80fd\u5c06O(k(m+n)\u6362\u6210\u7ebf\u6027~~\uff08\u8fd9\u4e2a\u590d\u6742\u5ea6\u4e0d\u77e5\u9053\u7b97\u7684\u5bf9\u4e0d\u5bf9\uff09~~\uff0c\u8fd9\u662fTLE\u7684\u4ee3\u7801\uff0c\u53ea\u670930\u5206\uff0c\u4e86\u89e3\u4e00\u4e0b\u3002\n## 30\u5206\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<stack>\nusing namespace std;\nstack<int>st;\nint f[400001];\nint s[200001];\nint e[200001];\nint sum;\nint getf(int num)\n{\n    if(f[num]==num)\n    {\n        return f[num];\n    }\n    else\n    {\n        f[num]=getf(f[num]);\n        return f[num];\n    }\n}\nvoid merge(int x,int y)\n{\n    int t1=getf(x);\n    int t2=getf(y);\n    if(t2!=t1)\n    {\n        f[t2]=t1;\n    }\n}\nint n,m;\nint k;\nint book[200001];\nint des[200001];\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&s[i],&e[i]);\n        s[i]++;\n        e[i]++;\n    }\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&des[i]);\n        des[i]++;\n        book[des[i]]=1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        f[i]=i;\n    }\n    for(int ttt=k;ttt>=1;ttt--)\n    {\n        //printf(\"------------\\n\");\n        sum=0;\n        for(int i=1;i<=m;i++)\n        {\n            if(!book[s[i]]&&!book[e[i]])\n            {\n                merge(s[i],e[i]);\n                //printf(\"%d %d\\n\",s[i],e[i]);\n            }\n        }\n        for(int i=1;i<=n;i++)\n        {\n            if(f[i]==i&&!book[i])\n            {\n                sum++;\n            }\n        }\n        st.push(sum);\n        book[des[ttt]]=0;\n    }\n    sum=0;\n    for(int i=1;i<=m;i++)\n    {\n        merge(s[i],e[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(f[i]==i)\n        {\n            sum++;\n        }\n    }\n    st.push(sum);\n    while(!st.empty())\n    {\n        printf(\"%d\\n\",st.top());\n        st.pop();\n    }\n    return 0;\n}\n```\n\u4e4b\u540e\u663e\u7136\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u6539\u53d8\u7684\u539f\u56e0\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4e00\u4e2a\u65b0\u70b9\u7684\u52a0\u5165\uff0c\u6240\u4ee5\u679a\u4e3e\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u6bcf\u4e00\u6761\u8fb9\u5373\u53ef\uff0c\u4e8e\u662f\u4e0d\u96be\u60f3\u51fa\u6765\u4e00\u4e2atot\u8bb0\u5f55\u603b\u91cf\uff0c\u6bcf\u6b21\u52a0\u70b9\u5c31tot++\uff0c\u5408\u5e76\u5c31tot--\u3002\u7136\u540e\u2026\u2026~~60~~\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<stack>\nusing namespace std;\nstack<int>st;\nint f[400001];\nint s[200001];\nint e[200001];\nint sum;\nstruct node\n{\n    int s;\n    int e;\n    int next;\n}edge[200001*2];\n__attribute__((optimize(\"-O3\")))\nint getf(int num)\n{\n    if(f[num]==num)\n    {\n        return f[num];\n    }\n    else\n    {\n        f[num]=getf(f[num]);\n        return f[num];\n    }\n}\n__attribute__((optimize(\"-O3\")))\nvoid merge(int x,int y)\n{\n    int t1=getf(x);\n    int t2=getf(y);\n    if(t2!=t1)\n    {\n        f[t2]=t1;\n    }\n}\nint n,m;\nint k;\nint book[400001];\nint des[400001];\nint head[400001];\nint cnt;\nint tot;\nvoid add(int s,int e)\n{\n    cnt++;\n    edge[cnt].s=s;\n    edge[cnt].e=e;\n    edge[cnt].next=head[s];\n    head[s]=cnt;\n    cnt++;\n    edge[cnt].s=e;\n    edge[cnt].e=s;\n    edge[cnt].next=head[e];\n    head[e]=cnt;\n}\n__attribute__((optimize(\"-O3\")))\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&s[i],&e[i]);\n        s[i]++;\n        e[i]++;\n        add(s[i],e[i]);\n    }\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&des[i]);\n        des[i]++;\n        book[des[i]]=1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        f[i]=i;\n    }\n    tot=n-k;\n    for(int i=1;i<=m;i++)\n    {\n        if(!book[s[i]]&&!book[e[i]])\n        {\n            merge(s[i],e[i]);\n            tot--;\n        }\n    }\n    st.push(tot);\n    for(int ttt=k;ttt>=1;ttt--)\n    {\n        tot++;\n        int u=des[ttt];\n        sum=0;\n        book[u]=0;\n        for(int t=head[u];t;t=edge[t].next)\n        {\n            int v=edge[t].e;\n            if(getf(f[u])!=getf(f[v])&&!book[v])\n            {\n                merge(u,v);\n                tot--;\n            }\n        }\n        st.push(tot);\n    }\n    while(!st.empty())\n    {\n        printf(\"%d\\n\",st.top());\n        st.pop();\n    }\n    return 0;\n}\n```\n\u53d1\u73b0\u95ee\u9898\u5728\u54ea\u91cc\u4e86\u5417\uff1f\u8fd9\u4e2a\u9898\u7684merge\u64cd\u4f5c\u5173\u7cfb\u5230\u4e0d\u4ec5\u662f\u70b9\u7684\u8fde\u901a\u5173\u7cfb\uff0c\u66f4\u5173\u7cfb\u5230tot\u7b54\u6848\u7684\u7edf\u8ba1\u6240\u4ee5\u80af\u5b9a\u8981\u5224\u65ad\u4e00\u6ce2\u5728\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u554a\uff01\uff01\uff01\n## AC\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<stack>\nusing namespace std;\nstack<int>st;\nint f[400001];\nint s[200001];\nint e[200001];\nint sum;\nstruct node\n{\n    int s;\n    int e;\n    int next;\n}edge[200001*2];\nint getf(int num)\n{\n    if(f[num]==num)\n    {\n        return f[num];\n    }\n    else\n    {\n        f[num]=getf(f[num]);\n        return f[num];\n    }\n}\nvoid merge(int x,int y)\n{\n    int t1=getf(x);\n    int t2=getf(y);\n    if(t2!=t1)\n    {\n        f[t2]=t1;\n    }\n}\nint n,m;\nint k;\nint book[400001];\nint des[400001];\nint head[400001];\nint cnt;\nint tot;\nvoid add(int s,int e)\n{\n    cnt++;\n    edge[cnt].s=s;\n    edge[cnt].e=e;\n    edge[cnt].next=head[s];\n    head[s]=cnt;\n    cnt++;\n    edge[cnt].s=e;\n    edge[cnt].e=s;\n    edge[cnt].next=head[e];\n    head[e]=cnt;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&s[i],&e[i]);\n        s[i]++;\n        e[i]++;\n        add(s[i],e[i]);\n    }\n    scanf(\"%d\",&k);\n    for(int i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&des[i]);\n        des[i]++;\n        book[des[i]]=1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        f[i]=i;\n    }\n    tot=n-k;\n    for(int i=1;i<=m;i++)\n    {\n        if(!book[s[i]]&&!book[e[i]])\n        {\n            if(getf(f[s[i]])!=getf(f[e[i]]))\n            {\n                merge(s[i],e[i]);\n                tot--;\n            }\n        }\n    }\n    st.push(tot);\n    for(int ttt=k;ttt>=1;ttt--)\n    {\n        tot++;\n        int u=des[ttt];\n        sum=0;\n        book[u]=0;\n        for(int t=head[u];t;t=edge[t].next)\n        {\n            int v=edge[t].e;\n            if(getf(f[u])!=getf(f[v])&&!book[v])\n            {\n                merge(u,v);\n                tot--;\n            }\n        }\n        st.push(tot);\n    }\n    while(!st.empty())\n    {\n        printf(\"%d\\n\",st.top());\n        st.pop();\n    }\n    return 0;\n}\n```\n\u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u671b\u901a\u8fc7\u3002",
        "postTime": 1541463095,
        "uid": 86154,
        "name": "Brandon\u9e4f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u6838\u5fc3\u601d\u8def\uff1a\u7531\u53bb\u8fb9\u6539\u4e3a\u52a0\u8fb9\n\n\u5b9e\u73b0\u65b9\u5f0f\uff1a\u5e76\u67e5\u96c6+\u90bb\u63a5\u8868\u5b58\u8fb9\n\n\u8be6\u7ec6\u64cd\u4f5c\uff1a\n1. \u8bfb\u5165\uff1a\u8bfb\u5165\u65f6\u4f7f\u7528\u90bb\u63a5\u8868\u50a8\u5b58\u8fb9\n2. \u521d\u59cb\u5316\u5e76\u67e5\u96c6\uff1a\u628a\u4e24\u7aef\u70b9\u90fd\u6ca1\u6709\u88ab\u6467\u6bc1\u7684\u8fb9\u52a0\u5165\u5e76\u67e5\u96c6\uff0c\u6bcf\u52a0\u5165\u4e00\u6761\u6709\u6548\u8fb9\uff0c\u8054\u901a\u5757-1\uff1b\n3. \u4fee\u590d\u7aef\u70b9\uff1a\u4ece\u540e\u5f80\u524d\u628a\u5df2\u7ecf\u6467\u6bc1\uff08\u6216\u8005\u8bf4\u5df2\u7ecf\u5047\u8bbe\u4e3a\u6467\u6bc1\uff09\u7684\u70b9\u8fd8\u539f\uff0c\u7528\u90bb\u63a5\u8868\u5c06\u53ef\u4ee5\u52a0\u5165\u7684\u6709\u6548\u8fb9\u52a0\u5165\uff0c\u6bcf\u52a0\u5165\u4e00\u6761\u6709\u6548\u8fb9\uff0c\u8054\u901a\u5757-1\uff1b\n4. \u8f93\u51fa\uff1b\n\nTips\uff1a\n1. \u8bb0\u5f55\u7684\u662f\u88ab\u6467\u6bc1\u540e\u5269\u4e0b\u7684\u7aef\u70b9\u7684\u8054\u901a\u5757\u4e2a\u6570\uff0c\u8981\u51cf\u53bb\u5df2\u7ecf\u88ab\u6467\u6bc1\u7684\uff1b\n2. \u65e0\u5411\u56fe\u6bcf\u6761\u8fb9\u52a0\u51652\u8fb9\uff0c\u904d\u5386\u65f6\u904d\u53862\u6b21\uff1b\n3. \u6839\u636e\u6570\u636e\u91cf\uff0c\u6700\u597d\u4e0d\u8981\u7528cin\u8bfb\u53d6\uff0c\u9664\u975eios::sync_with_stdio(false);\n4. \u7aef\u70b9\u7684\u8303\u56f4\u662f0~n-1\uff1b",
        "postTime": 1527427614,
        "uid": 24835,
        "name": "\u8096\u6069Sean",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u4ece\u76f4\u63a5\u6a21\u62df\u7684\u89d2\u5ea6\u51fa\u53d1\uff08\u4e4b\u540e\u518d\u6765\u6162\u6162\u4f18\u5316\uff09\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u8fd9\u9053\u9898\u7684\u6a21\u578b\u9700\u8981\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\u800c\u5728\u8ba1\u7b97\u8054\u901a\u5757\u6570\u91cf\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u7528\u6700\u5c0f\u751f\u6210\u6811\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5\u7684\u4e00\u70b9\u601d\u60f3\uff1a\u8fde\u63a5\u4e24\u4e2a\u4e0d\u540c\u8054\u901a\u5757\u7684\u8fb9\u4f1a\u4f7f\u8054\u901a\u5757\u6570\u91cf\u51cf1\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u5e76\u67e5\u96c6\u6a21\u578b\uff0c\u6211\u4eec\u5148\u5c06\u6bcf\u4e2a\u661f\u7403\u5f53\u505a\u4e00\u4e2a\u5355\u72ec\u7684\u8054\u901a\u5757\uff0c\u800c\u5728\u5411\u8fd9\u4e2a\u6709\u5927\u91cf\u72ec\u7acb\u8054\u901a\u5757\u7ec4\u6210\u7684\u56fe\u4e2d\u52a0\u5165\u8fb9\u65f6\uff0c\u53ea\u52a0\u5165\u4f1a\u8fde\u901a\u4e24\u4e2a\u4e0d\u540c\u8054\u901a\u5757\u7684\u8fb9\u3002\u6211\u4eec\u7528\u53d8\u91cfcont\u8bb0\u5f55\u52a0\u5165\u8fd9\u6837\u7684\u8fb9\u7684\u6570\u91cf\uff0c\u6700\u540e\uff0c\u56fe\u4e2d\u8054\u901a\u5757\u7684\u6570\u91cf=\uff08\u661f\u7403\u7684\u6570\u91cf-cont\uff09\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u6a21\u62df\u7684\u65b9\u6cd5\u3002\u73b0\u5728\u53ef\u4ee5\u6765\u5206\u6790\u8fd9\u9053\u9898\u7684\u4f18\u5316\u529e\u6cd5\u4e86\u3002\u901a\u8fc7\u89c2\u5bdf\u6570\u636e\u7ed3\u6784\uff0c\u4e0d\u96be\u770b\u51fa\u5bf9\u6bcf\u6b21\u51fb\u6bc1\u661f\u7403\u7684\u64cd\u4f5c\u90fd\u91cd\u65b0\u6784\u5efa\u56fe\u6a21\u62df\u6c42\u4e00\u6b21\u8054\u901a\u5757\u6570\u91cf\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u80af\u5b9a\u8d85\u65f6\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6b21\u51fb\u6bc1\u64cd\u4f5c\u7684\u8ba1\u7b97\uff0c\u90fd\u8981\u5c3d\u53ef\u80fd\u5229\u7528\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u7684\u7ed3\u679c\u3002\u7531\u6b64\uff0c\u6211\u4eec\u4e0d\u59a8\u6362\u4e00\u4e2a\u89d2\u5ea6\u770b\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ece\u201c\u8ba1\u7b97\u4e0d\u65ad\u51cf\u5c11\u70b9\u7684\u56fe\u7684\u8054\u901a\u5757\u6570\u91cf\u201d\u5012\u8fc7\u6765\uff0c\u53d8\u4e3a\u201c\u8ba1\u7b97\u4e0d\u65ad\u589e\u52a0\u70b9\u7684\u56fe\u7684\u8054\u901a\u5757\u6570\u91cf\u201d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u8f93\u5165\u7684\u51fb\u6bc1\u987a\u5e8f\u5012\u8fc7\u6765\uff0c\u53d8\u4e3a\u5728\u4e00\u4e2a\u5df2\u7ecf\u53bb\u9664\u4e86\u6240\u6709\u88ab\u51fb\u6bc1\u661f\u7403\u7684\u56fe\u4e2d\uff0c\u6309\u5012\u5e8f\u91cd\u65b0\u4e00\u4e2a\u4e2a\u52a0\u5165\uff0c\u91cd\u5efa\u88ab\u51fb\u6bc1\u7684\u661f\u7403\uff0c\u5e76\u4e0d\u65ad\u8ba1\u7b97\u8054\u901a\u5757\u6570\u91cf\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u5c06\u51fb\u6bc1\u661f\u7403\u7684\u5e8f\u5217\u52a0\u5165\u6808\u4e2d\uff0c\u5229\u7528\u6808\u540e\u8fdb\u5148\u51fa\u7684\u6027\u8d28\uff0c\u4e0d\u65ad\u4ece\u6808\u9876\u53d6\u51fa\u661f\u7403\uff0c\u52a0\u5165\u56fe\u4e2d\uff0c\u8ba1\u7b97\u8054\u901a\u5757\u6570\u91cf\u3002\n\n\u5728\u8fd9\u6837\u4e00\u4e2a\u65b0\u7684\u95ee\u9898\u6a21\u578b\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u5fc5\u50cf\u539f\u6765\u4e00\u6837\u6bcf\u6b21\u90fd\u91cd\u65b0\u6784\u5efa\u56fe\uff0c\u800c\u662f\u5728\u5df2\u6709\u7684\u56fe\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u6211\u4eec\u7684\u8ba1\u7b97\uff0c\u6700\u5927\u9650\u5ea6\u7684\u5229\u7528\u4e86\u5df2\u6709\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u5927\u5927\u964d\u4f4e\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u7531\u4e8e\u6211\u4eec\u5012\u5e8f\u6c42\u51fa\u6765\u7684\u7b54\u6848\u4e5f\u662f\u5012\u5e8f\u7684\uff0c\u56e0\u6b64\u5c06\u7b54\u6848\u4e5f\u52a0\u5165\u4e00\u4e2a\u6808\u4e2d\uff0c\u518d\u6b21\u53cd\u8f6c\uff0c\u5c31\u91cd\u65b0\u53d8\u4e3a\u4e86\u6b63\u5e8f\u3002\n\nPS\uff1a\u6ce8\u610f\u88ab\u51fb\u6bc1\u7684\u661f\u7403\u672c\u8eab\u5df2\u4e0d\u7b97\u5b58\u5728\u7684\u70b9\uff0c\u56e0\u6b64\u4e5f\u4e0d\u7b97\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u56e0\u6b64\u8981\u51cf\u53bb\u5b83\u4eec\uff0c\u53d8\u4e3a\uff1a\u8054\u901a\u5757\u6570\u91cf=\uff08\u661f\u7403\u6570\u91cf-cont-\u88ab\u51fb\u6bc1\u7684\u661f\u7403\u7684\u6570\u91cf\uff09\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#include<cmath>\n#include<stack>\nusing namespace std;\nstruct near\n{\n    int num,nex;\n}ne[400010];\nint h[400010],father[400010];\nbool flag[400010];\nstack<int>s;\nstack<int>ans;\nint find(int x)\n{\n    if(father[x]==x)\n    {\n        return x;\n    }\n    else\n    {\n        int mem=find(father[x]);\n        father[x]=mem;\n        return mem;\n    }\n}\nint main()\n{\n    int n,m,i,k,x,y,no,cont=0,a,b;\n    scanf(\"%d%d\",&n,&m);\n    for(i=0;i<n;i++)\n    {\n        father[i]=i;\n    }\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        ne[i*2-1].num=y;\n        ne[i*2-1].nex=h[x];\n        h[x]=i*2-1;\n        ne[i*2].num=x;\n        ne[i*2].nex=h[y];\n        h[y]=i*2;\n    }\n    scanf(\"%d\",&k);\n    for(i=1;i<=k;i++)\n    {\n        scanf(\"%d\",&x);\n        flag[x]=1;\n        s.push(x);\n    }\n    for(i=0;i<n;i++)\n    {\n        if(flag[i]==1)\n        {\n            continue;\n        }\n        a=find(i);\n        for(no=h[i];no!=0;no=ne[no].nex)\n        {\n            if(flag[ne[no].num]==1)\n            {\n                continue;\n            }\n            b=find(ne[no].num);\n            if(a!=b)\n            {\n                father[a]=b;\n                a=b;\n                cont++;\n            }\n        }\n    }\n    ans.push(n-cont-k);\n    int top;\n    for(i=1;i<=k;i++)\n    {\n        top=s.top();\n        s.pop();\n        flag[top]=0;\n        a=find(top);\n        for(no=h[top];no!=0;no=ne[no].nex)\n        {\n            if(flag[ne[no].num]==1)\n            {\n                continue;\n            }\n            b=find(ne[no].num);\n            if(a!=b)\n            {\n                father[a]=b;\n                a=b;\n                cont++;\n            }\n        }\n        ans.push(n-cont-(k-i));\n    }\n    for(i=1;i<=k+1;i++)\n    {\n        printf(\"%d\\n\",ans.top());\n        ans.pop();\n    }\n    return 0;\n}\n```",
        "postTime": 1509531558,
        "uid": 53927,
        "name": "YangQuijote",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u867d\u7136\u9898\u76ee\u5f88\u957f \u4f46\u662f\u505a\u8d77\u6765\u8fd8\u662f\u5f88\u7b80\u5355\u7684hahaha\n\n\u5927\u81f4\u610f\u601d\u5c31\u662f\u8bf4\u7ed9\u4f60\u4e00\u4e2a\u65e0\u5411\u56fe \u7136\u540e\u4f9d\u6b21\u5220\u70b9 \u6c42\u6bcf\u6b21\u5220\u70b9\u4e4b\u540e\u5269\u4f59\u8054\u901a\u5757\u7684\u4e2a\u6570\n\n\u5982\u679c\u6b63\u7740\u53bb\u60f3\u7684\u8bdd\u5c31\u4f1a\u5f88\u9ebb\u70e6 \u4f46\u5982\u679c\u5012\u8fc7\u6765\u60f3\u5c31\u5f88\u7b80\u5355\u4e86\n\n\u5148\u518d\u8f93\u5165\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u54ea\u4e9b\u70b9\u8981\u5220\u9664 \u7136\u540e\u7ed9\u5269\u4f59\u7684\u70b9\u8dd1\u4e00\u904d\u5e76\u67e5\u96c6 \u7136\u540e\u8bb0\u5f55\u4e00\u4e0b\u6b64\u65f6\u6709\u591a\u5c11\u4e2a\u8054\u901a\u5757\n\n\u7136\u540e**\u5012\u5e8f**\u52a0\u5165\u8981\u5220\u9664\u7684\u70b9 \u6bcf\u6b21\u5224\u65ad\u4e00\u4e0b\u4e0e\u8fd9\u4e2a\u70b9\u76f8\u8fde\u7684\u53e6\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u56fe\u91cc \u5728\u7684\u8bdd \u5408\u5e76 \u7136\u540e\u8ba1\u7b97\u8054\u901a\u5757\u6570\n\n\u7136\u540e\u5728\u4f9d\u6b21\u8ba1\u7b97\u7684\u65f6\u5019 \u8bb0\u5f55\u4e00\u4e0b\u6bcf\u6b21\u64cd\u4f5c\u4e4b\u540e\u7684\u8054\u901a\u5757\u7684\u4e2a\u6570\n\n\u6700\u540e**\u5012\u5e8f**\u8f93\u51fa\u4e00\u4e0b\u5c31ok\u5566\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#define MAXN 200010\nusing namespace std;\nint n,m,fa[MAXN*2],key[MAXN*2],ans,out[MAXN*2],anss,k,t=1,a,b;\nvector<int > G[MAXN*2];//\u4e0d\u5f00\u5927\u4f1aRE\u7684 \nstack<int > s;\ninline int read()//\u8bfb\u5165\u4f18\u5316 \n{\n    int s=0,f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){s=s*10+c-'0';c=getchar();}\n    return s*f;\n}\nint find(int x)//\u5e76\u67e5\u96c6 \n{\n    if(fa[x]!=x)\n    {\n        fa[x]=find(fa[x]);       //\u8def\u5f84\u538b\u7f29 \n    }\n    return fa[x];\n}\nint onion(int x,int y)\n{\n    int fx=find(x),fy=find(y);\n    if(fx!=fy)\n    {\n        ans++;//\u5f53\u4e24\u4e2a\u5143\u7d20\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u65f6\u5019 \u7528ans\u8bb0\u5f55\u4e00\u4e0b\u51cf\u5c11\u4e86\u51e0\u4e2a\u8054\u901a\u5757\n                //\u4e5f\u5c31\u662f\u8bf4\u6bcf\u5f53\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\u88ab\u5408\u5e76\u7684\u65f6\u5019 \u8054\u901a\u5757\u6570\u91cf-1 \n        fa[fx]=fy;\n    }\n}\nvoid init()//\u8f93\u5165 \n{\n    memset(key,1,sizeof(key));\n    n=read();m=read();\n    for(int i=0;i<n;i++)\n    {\n        fa[i]=i; \n    }\n    for(int i=0;i<m;i++)\n    {\n        a=read();b=read();\n        G[a].push_back(b);//\u53cc\u5411\u5b58\u8fb9 \n        G[b].push_back(a);\n    }    \n}\nvoid pre()//\u9884\u5904\u7406 \n{\n    k=read();\n    for(int i=0;i<k;i++)\n    {\n        a=read();\n        s.push(a);//\u56e0\u4e3a\u8981\u5012\u5e8f\u52a0\u5165 \u6240\u4ee5\u5c31\u5199\u4e86\u4e2a\u6808 STL \u5927\u6cd5\u597d\u554a \n        key[a]=0;//\u8bb0\u5f55\u4e00\u4e0b\u54ea\u4e9b\u70b9\u8981\u88ab\u5220\u9664 \u7136\u540e\u6807\u8bb0\u4e00\u4e0b \n    }\n    for(int i=0;i<n;i++)\n    {\n        if(key[i])\n        {\n            for(int j=0;j<G[i].size();j++)//\u5c06\u6240\u6709\u5269\u4f59\u7684\u70b9\u8dd1\u4e00\u6b21\u5e76\u67e5\u96c6 \n            {\n                int v=G[i][j];\n                if(key[v])//\u5982\u679c\u76f8\u8fde\u7684\u53e6\u4e00\u4e2a\u70b9\u4e0d\u5728\u56fe\u4e2d \u5c31\u4e0d\u80fd\u52a0\u5165 \n                {\n                    onion(i,v);\n                }\n            }\n        }\n    }\n    anss=n-k-ans;ans=0;out[k]=anss;//\u8fd9\u65f6\u5019\u7b97\u7684\u662f\u6700\u540e\u4e00\u4e2a\u6570\u636e \u4e5f\u5c31\u662f\u6240\u6709\u7684\u8fb9\u90fd\u88ab\u5220\u4e4b\u540e\u5269\u4f59\u8054\u901a\u5757\u6570\n    //\u7528anss\u8bb0\u5f55\u5269\u4f59\u8054\u901a\u5757 n-k-ans\u5c31\u662fn-k\u4e2a\u5143\u7d20\u51cf\u53bb\u8054\u901a\u5757\u51cf\u5c11\u7684\u6570\u91cf \u5c31\u662f\u5269\u4f59\u7684\u6570\u91cf\u4e86 \n}\nvoid work()\n{\n        while(!s.empty())//\u5012\u5e8f\u52a0\u5165 \n    {\n        int v=s.top();s.pop();\n        for(int j=0;j<G[v].size();j++)\n        {\n            int dd=G[v][j];\n            if(key[dd])//\u8fd8\u662f\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5728\u56fe\u4e2d \n            {\n                onion(dd,v);    \n            }\n        }\n        anss=anss-ans+1;//\u56e0\u4e3a\u4e00\u4e2a\u65b0\u7684\u70b9\u52a0\u5165\u4e4b\u540e \u672c\u8eab\u8054\u901a\u5757\u5c31\u8981\u591a\u4e00\u4e2a \u6240\u4ee5\u8fd9\u91cc\u4e0d\u662fanss-ans\u800c\u662fanss-ans+1 \n        out[k-t]=anss;//\u8bb0\u5f55 \n        ans=0;t++;key[v]=1; //\u6bcf\u6b21\u8bb0\u5f97\u8981\u628aans\u6e05\u96f6 \u8fd8\u6709key\u3010v\u3011\u4e3atrue \u4e5f\u5c31\u662f\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u52a0\u5165\u5230\u56fe\u4e2d\u4e86  \n    }\n}\nvoid outit()\n{\n    for(int i=0;i<=k;i++)\n    {\n        cout<<out[i]<<endl; //\u6211\u662f\u5012\u5e8f\u4fdd\u5b58\u7136\u540e\u6b63\u5e8f\u8f93\u51fa\u7684 \u6b63\u5e8f\u4fdd\u5b58\u5012\u5e8f\u8f93\u51fa\u4e5fok \n    }\n}\nint main()\n{\n    std::ios::sync_with_stdio(false);//\u5982\u679c\u4e0d\u7528scanf\u7684\u8bdd\u8bb0\u5f97\u5f00\u4f18\u5316 \u4e0d\u7136\u6709\u4e00\u4e2a\u70b9\u4f1aTLE\u7684 \n    std::cin.tie(0);//\u5176\u5b9e\u5c31\u662f\u56e0\u4e3a\u6211\u4e0d\u7528\u94fe\u8868\u5b58 \u800c\u662f\u7528vector \u6240\u4ee5\u624d\u6162\u7684 \n    init();\n    pre();\n    work();\n    outit();\n    return 0;\n}\n```",
        "postTime": 1506991684,
        "uid": 18875,
        "name": "\u53f8\u5f92stuart",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u601d\u8def\u5f88\u597d\u7406\u51fa\u6765\uff1a\n\n\u9006\u5e8f\u5e76\u67e5\u96c6\n\n\u7136\u540e\u6211\u4eec\u628a\u6700\u540e\u8fd8\u5269\u7684\u661f\u7403\u5e76\u8d77\u6765\uff0c\u7edf\u8ba1\u8fde\u901a\u5757\uff0c\u7136\u540e\u5bb9\u6613\u770b\u51fa\u6765\uff0c\u4e4b\u524d\u6bcf\u6b21\u7684\u6253\u51fb\u6389\u7684\u661f\u7403\uff0c\u5f71\u54cd\u7684\u661f\u7403\u90fd\u53ea\u4f1a\u4e0e\u6b64\u65f6\u8fd9\u4e2a\u661f\u7403\u76f8\u5173\uff0c\u6240\u4ee5\u6211\u4eec\u627e\u4e0e\u4ed6\u8fde\u8d77\u7684\u661f\u7403\uff0c\u5982\u679c\u7956\u5148\u4e0d\u5728\u4e00\u8d77\uff0c\u80af\u5b9a\u4e4b\u524d\u4e0d\u5728\u540c\u4e00\u8fde\u901a\u5757\u3002\u7136\u540ex\u52a0\u4e00\uff0c\u56e0\u4e3a\u6700\u5f00\u59cb\u8fd9\u4e2a\u661f\u7403\u5355\u72ec\u4e00\u4e2a\uff08\u591a\u7b97\u4e86\u4e00\u6b21\uff09\uff0c\u6240\u4ee5\u6700\u540e\u8fd8\u8981\u518d\u52a0\u4e00\u3002\n\n\n\u4ee3\u7801\u53c2\u8003\uff1a\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N = 400000 + 5;\nint head[N],tot,p[N],c[N],ans[N];\nbool pan[N];\nstruct node\n{\n    int next,to;\n}edge[N];\nvoid add(int a,int b)\n{\n    edge[tot].to=b;\n    edge[tot].next=head[a];\n    head[a]=tot++;\n}\nint getfa(int x){ return p[x]==x?x:p[x]=getfa(p[x]); }\nint main()\n{\n    int a,b,n,m,k; \n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++) p[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        add(a,b);add(b,a);\n    }\n    scanf(\"%d\",&k);\n    for(int i=0;i<k;i++)\n    {\n        scanf(\"%d\",&c[i]);\n        pan[c[i]]=true;\n    }\n    for(int i=0;i<n;i++)\n    {\n        if(!pan[i])\n        for(int j = head[i];~j;j = edge[j].next)\n        {\n            if(pan[edge[j].to])continue;\n            int x=getfa(i);\n            int y=getfa(edge[j].to);\n            p[x] = y;\n        } \n    }\n    for(int i=0;i<n;i++) if(!pan[i] && getfa(i) == i)ans[k]++;\n    for(int i=k-1;i>=0;i--)\n    {\n        int x=0;\n        pan[c[i]] = false;\n        for(int j = head[c[i]];~j;j = edge[j].next)\n        {\n            if(!pan[edge[j].to])\n            {\n                int z=getfa(c[i]);int y=getfa(edge[j].to);\n                if(z != y)\n                {\n                    p[z]=y;\n                    x++;\n                }\n            }\n        }\n        ans[i]=ans[i+1]-x+1;\n    }\n    for(int i=0;i<=k;i++)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1483591375,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "###**\u8fd9\u9053\u9898\u7279\u522b\u68d2**\n\n\u4ee5\u524d\u8003\u8fc7\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\u76ee\uff0c\u4e3a\u4e86\u5751\u7239\u8bf4\u4ec0\u4e48\u8981\u5728\u7ebf\u2026\u2026\u4f46\u662f\u6570\u636e\u8303\u56f4\u90a3\u4e48\u5927\uff0c\u5728\u7ebf\u80af\u5b9a\u8981TLE\u5230\u98de\u8d77\uff0c\u6240\u4ee5\u8003\u8651\u79bb\u7ebf\u3002\u56e0\u4e3a\u5e76\u67e5\u96c6\u4ec5\u652f\u6301\u201c\u5e76\u201d\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u800c\u4e0d\u652f\u6301\u201c\u5220\u201d\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5220\u518d\u5e76\u62ff\u4e00\u4e2a\u6570\u7ec4\u88c5\u7b54\u6848\uff0c\u6700\u540e\u8f93\u51fa\u3002\n\n```cpp\n**#include<cstdio>**\n**#include<cstring>**\n**#include<algorithm>**\n**#include<vector>**\n**using namespace std;**\n**const int N=400005;**\n**int n,m,q,Q[N],head[N*2],cnt,f[N],ans[N],tot;**\n**//Q\u88c5\u5c71\u7684\u70b9\uff0chead\u662f\u4e2a\u8f85\u52a9\u6570\u7ec4\uff08\u8f85\u52a9\u90a3\u4e2a\u7ed3\u6784\u4f53\u7684\uff08cnt\u4e5f\u662f\uff09\uff09\uff0cf\u4e3a\u5e76\u67e5\u96c6\uff0cans\u88c5\u7b54\u6848\uff0ctot\u8bb0\u5f55\u8fde\u901a\u5757\u4e2a\u6570**\n**bool vis[N],jd[N];//\u8f85\u52a9\u5224\u65ad\u4e4b\u7528**\n**struct sdf{int v,next;}e[N];//\u7c7b\u4f3c\u4e8e\u7528vector\u7684\u73a9\u610f\uff0c\u4e0d\u8fc7\u8981\u5feb\u4e0a\u4e0d\u5c11**\n**inline int read(){//\u8bfb\u5165\u4f18\u5316\uff0c\u53ef\u4ee5\u4e0d\u7ba1\u5b83**\n**int ret=0,f=1;char ch=getchar();**\n**while(ch<'0'||ch>'9') {if(ch=='-') f=-f;ch=getchar();}**\n**while(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();**\n**return ret*f;**\n**}**\n**void add(int a,int b){//\u6b64\u5904\u53ef\u7528vector\u66ff\u4ee3**\n**cnt++;e[cnt].v=b;e[cnt].next=head[a];head[a]=cnt;**\n**}**\n**inline int father(int k){//\u5e76\u67e5\u96c6**\n**int j=k,t;**\n**while(j!=f[j])j=f[j];**\n**while(k!=f[k]){**\n**t=f[k];**\n**f[k]=j;**\n**k=t;**\n**}**\n**return j;**\n**}**\n**int main()**\n**{**\n**n=read();m=read();**\n**for(int i=0;i<n;i++)f[i]=i;//\u521d\u59cb\u5316**\n**for(int a,b,i=1;i<=m;i++){**\n**a=read();b=read();add(a,b);add(b,a);//\u6b64\u5904\u53ef\u7528vector\u66ff\u4ee3**\n**}**\n**q=read();**\n**for(int i=1;i<=q;i++)Q[i]=read(),jd[Q[i]]=1;**\n**for(int i=0;i<n;i++)if(!jd[i]){**\n**for(int j=head[i];j;j=e[j].next)if(!jd[e[j].v]){**\n**int u=e[j].v;**\n**int fai=father(i),fau=father(u);**\n**if(fai!=fau)f[fai]=fau;**\n**}**\n**}**\n**for(int i=0;i<n;i++)if(!jd[father(i)])if(!vis[father(i)])tot++,vis[father(i)]=1;**\n**ans[q]=tot;**\n**for(int i=q;i>=1;i--){**\n**int k=Q[i];**\n**for(int j=head[k];j;j=e[j].next)if(!jd[e[j].v]){**\n**int u=e[j].v;**\n**if(father(k)!=father(u)){**\n**tot--;**\n**f[father(k)]=father(u);**\n**}**\n**}**\n**if(jd[k])tot++;//\u601d\u8003\u4e0b\uff0c\u4e3a\u5565**\n**jd[k]=0;**\n**ans[i-1]=tot;**\n**}**\n**for(int i=0;i<=q;i++){**\n**printf(\"%d\\n\",ans[i]);**\n**}**\n**return 0;**\n**}**\n```",
        "postTime": 1476277925,
        "uid": 14497,
        "name": "q1293274675",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u611f\u89c9\u6211\u7684\u5efa\u8fb9\u8ddf\u5176\u4ed6\u4eba\u6709\u4e00\u70b9\u4e0d\u4e00\u6837\u5427\n\u5982\u679c\u5bf9\u6240\u6709\u6467\u6bc1\u661f\u7403\u9006\u5e8f\u6062\u590d\uff0c\u6bcf\u6b21\u5bf9\u641c\u7d22\u6240\u6709\u7684\u8fb9\u590d\u6742\u5ea6mk+\u663e\u7136\u8d85\u65f6\n\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u8fb9\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f7f\u6bcf\u6b21\u64cd\u4f5c\u90fd\u6709\u6548\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u5bf9\u6240\u6709\u8fb9\u6392\u5e8f\uff0c\n\u90a3\u600e\u4e48\u6392\u5e8f\u5462\uff1f\u663e\u800c\u6613\u89c1\uff0c\u6bcf\u6761\u8fb9\u88ab\u52a0\u5165\u5230\u53ef\u884c\u7684\u65f6\u95f4\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u6211\u4eec\u5bf9\u6bcf\u6761\u8fb9\u9644\u4e00\u4e2a\u4f18\u5148\u7ea7\n\u4ed6\u5c31\u7b49\u4e8e\u8054\u901a\u4e24\u70b9\u7684\u4f18\u5148\u7ea7\u7684\u8f83\u5927\u503c\uff0c\u6211\u4eec\u6309\u70b9\u88ab\u6467\u6bc1\u7684\u65f6\u95f4\u987a\u5e8f\u786e\u5b9a\u70b9\u7684\u4f18\u5148\u7ea7\n\u6467\u6bc1\u8d8a\u65e9\u7684\u70b9\u4f18\u5148\u7ea7\u8d8a\u5927\uff08\u5728\u9006\u5e8f\u4e2d\u6700\u665a\u88ab\u52a0\u56de\u6765\uff09\u8fd9\u6837\u6bcf\u4e00\u6761\u8fb9\u53ea\u4f1a\u88ab\u8bbf\u95ee\u4e00\u6b21\uff1b\n\u7ebf\u6027\u626b\u8fb9+\u5e76\u67e5\u96c6\u5408\u5e76\uff0c\u590d\u6742\u5ea6mlogn\uff0c\u53ef\u4ee5AC\uff1b\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int MM=2e5+10;\nint an[2*MM],f[2*MM],ma[2*MM];\nint getroot(int p)\n{\n    if(p==f[p])\n        return p;\n    return f[p]=getroot(f[p]);\n}\nvoid merge(int fi,int se,int p)\n{\n    int u=getroot(fi),v=getroot(se);\n    if(u!=v)\n        an[p]--;\n    f[u]=v;\n}\nstruct No{\n\tint pri,a,b;\n\tbool operator <(const No & r)const\n\t{\n\t\treturn pri<r.pri;\n\t}\n}e[MM];\nint main()\n{\n    int n,m,k;\n    cin>>n>>m;\n    for(int i=0;i<n;i++)\n        f[i]=i;\n    for(int i=1;i<=m;i++)\n        cin>>e[i].a>>e[i].b;\n    cin>>k;\n    for(int i=1;i<=k;i++)\n    {\n    \tint x;\n        cin>>x;\n        ma[x]=1+k-i;\n    }\n    for(int i=1;i<=m;i++)\n    \te[i].pri=max(ma[e[i].a],ma[e[i].b]);\n    sort(e+1,e+m+1);\n    int p=1;\n    an[0]=n-k;\n    for(int i=0;i<=k;i++)\n    {\n    \twhile(e[p].pri==i&&p<=m)\n        \tmerge(e[p].a,e[p].b,i),p++;\n        an[i+1]=an[i]+1;\n\t}\n    for(int i=k;i>=0;i--)\n        cout<<an[i]<<endl;\n}\n```",
        "postTime": 1545060378,
        "uid": 61590,
        "name": "lele2002",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u5173\u952e\u5728\u4e8e**\u53cd\u8fc7\u6765\u770b**\uff0c\u4ece\u6240\u6709\u5e94\u88ab\u6bc1\u706d\u7684\u661f\u7403\u90fd\u88ab\u6bc1\u706d\u7684\u672b\u72b6\u6001\u5411\u524d\u53cd\u63a8\u5230\u8fd9\u9897\u88ab\u6bc1\u706d\u7684\u661f\u7403\u6ca1\u88ab\u6bc1\u706d\u7684\u60c5\u51b5\u3002\u4f7f\u7528\u4e00\u6b21dfs\u6c42\u672b\u72b6\u6001\uff08O(n)\uff09\uff0c\u4f7f\u7528\u591a\u6b21\u5e76\u67e5\u96c6\u5411\u524d\u53cd\u63a8\uff08O(max(m,k))\uff09\uff0c\u53cd\u63a8\u8fc7\u7a0b\u5373\u628a\u8be5\u70b9\u52a0\u5165\u56fe\u4e2d(ans++)\uff0c\u5e76\u628a\u8be5\u70b9\u6240\u8fbe\u6240\u6709\u70b9\u548c\u8be5\u70b9\u81ea\u5df1\u5408\u5e76\u5230\u4e00\u8d77(\u6bcf\u5408\u5e76\u4e00\u6b21ans--)\u5e76\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4f18\u8d28\u601d\u7ef4\u9898\n\n\u6211\u5728\u505a\u7684\u65f6\u5019\u628adfs\u91cc\u7684\u4e00\u4e9b\u4e1c\u897f\u5199\u9519\u4e86\uff08to[i]\u5199\u6210x\uff09\uff0c\u8fd8\u6709\u5c31\u662f\u4e00\u5f00\u59cb\u5fd8\u4e86\u52a0\u5165\u7684\u65b0\u70b9\uff0c\u4e5f\u6ca1\u6709\u80fd\u76f4\u63a5\u60f3\u5230\u6b63\u89e3\u2026\u2026\u603b\u4e4b\u5c31\u662f\u6211\u8fd8\u662f\u592a\u5f31\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nconst int maxn = 400005;\nint ask[maxn];\nint ans[maxn];\nint n, m;\n\nstruct bcj {\n\tint fa[maxn];\n\tvoid cle() {\n\t\tint i;\n\t\tfor(i=1; i <= n; i++) fa[i]=i;\n\t}\n\tvoid add(int a, int b) {\n\t\tint ta=find(a), tb=find(b);\n\t\tif(ta == tb) return;\n\t\tfa[ta]=tb;\n\t\treturn;\n\t}\n\tint find(int x) {\n\t\tif(fa[x] != x) fa[x]=find(fa[x]);\n\t\treturn fa[x];\n\t}\n} B;\n\nstruct gra {\n\tint tm, st[maxn], to[maxn], nex[maxn];\n\tint v[maxn], unable[maxn];\n\tvoid adde(int a, int b) {\n\t\ttm++;\n\t\tto[tm]=b;\n\t\tnex[tm]=st[a];\n\t\tst[a]=tm;\n\t\treturn;\n\t}\n\tint findd() {\n\t\tint i, t=0;\n\t\tfor(i=1; i <= n; i++) {\n\t\t\tif(!v[i] && !unable[i]) {\n\t\t\t\tdfs(i);\n\t\t\t\tt++;\n\t\t\t}\n\t\t}\n\t\treturn t;\n\t}\n\tvoid dfs(int x) {\n\t\tif(v[x] || unable[x]) return;\n\t\tv[x]=1;\n\t\tint i;\n\t\tfor(i=st[x]; i != 0; i=nex[i]) {\n\t\t\tif(!v[to[i]] && !unable[to[i]])\n\t\t\t\tB.add(x, to[i]), dfs(to[i]);\n\t\t}\n\t\treturn;\n\t}\n\tint count(int x, int num) {\n\t\tint t=num+1, i, y;\n\t\tunable[x]=0;\n\t\tfor(i=st[x]; i != 0; i=nex[i]) {\n\t\t\ty=to[i];\n\t\t\tif(!unable[y] && B.find(x) != B.find(y)){\n\t\t\t\tB.add(x, y);\n\t\t\t\tt--;\n\t\t\t}\n\t\t}\n\t\treturn t;\n\t}\n} G;\n\nint main() {\n\tint i, ta, tb, k;\n\tscanf(\"%d%d\", &n, &m);\n\tfor(i=1; i <= m; i++) {\n\t\tscanf(\"%d%d\", &ta, &tb);\n\t\tta++; tb++;\n\t\tG.adde(ta, tb);\n\t\tG.adde(tb, ta);\n\t}\n\tB.cle();\n\tscanf(\"%d\", &k);\n\tfor(i=1; i <= k; i++) {\n\t\tscanf(\"%d\", &ta);\n\t\tta++;\n\t\tG.unable[ta]=1;\n\t\task[i]=ta;\n\t}\n\tans[k]=G.findd();\n\tfor(i=k; i >= 1; i--) {\n\t\tans[i-1]=G.count(ask[i], ans[i]);\n\t}\n\tfor(i=0; i <= k; i++) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1542190328,
        "uid": 18883,
        "name": "CR_Raphael",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u81ea\u4ee5\u4e3a\u4ee3\u7801\u6bd4\u8f83\u7b80\u6d01\u660e\u4e86\uff0c\u4e8e\u662f\u53d1\u4e00\u6ce2\u9898\u89e3\u3002\n\n\u672c\u9898\u5f88\u660e\u663e\u80fd\u770b\u51fa\u6765\uff0c\u9700\u8981\u53cd\u7740\u8dd1\u3002\u7136\u800c\uff0c\u5982\u4f55\u786e\u5b9a\u6bcf\u6761\u8fb9\u5728\u4ec0\u4e48\u65f6\u523b\u52a0\u5165\u5462\uff1f\n\n\u5176\u5b9e\u6211\u4e0a\u4e00\u53e5\u8bdd\u5df2\u7ecf\u66b4\u9732\u4e86\uff1a\u65f6\u523b\u3002\u50cf\u57fa\u4e8e\u65f6\u95f4\u8f74\u7684dp\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6839\u636e**\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u70b9\u4e2d\u5148\u88ab\u6467\u6bc1\u7684\u70b9**\uff0c\u786e\u5b9a\u5176\u6467\u6bc1\u65f6\u95f4\u3002\u4e5f\u5c31\u662f\u786e\u5b9a\u5176\u52a0\u5165\u65f6\u95f4\u3002\n\u7136\u540e\u6309\u6b64\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u6309\u7167\u65f6\u95f4\u4ece\u540e\u5411\u524d\u52a0\u8fb9\u5373\u53ef\u3002\n\n\u7b2c\u4e8c\u4e2a\u96be\u70b9\u662f\uff1a\u5982\u4f55\u8ba1\u7b97\u8054\u901a\u5757\uff08\u5febQWQ\uff09\u6570\u76ee\uff1f\n\u7531unionn\u51fd\u6570\u4e2d\u7684\u6b65\u9aa4\u53ef\u77e5\uff1a\u6211\u4eec\u6bcf\u6b21\u5408\u5e76fx\u548cfy\uff0c\u5373\u76f8\u5f53\u4e8e\u5408\u5e76\u4e24\u4e2a\u8054\u901a\u5757\u3002\u4e8e\u662f\u6bcf\u6b21\u6709\u6548\u64cd\u4f5c\u5373\u5bf9\u5e94\u8054\u901a\u5757-1.\n\n\u5f53\u7136\u7b2c\u4e00\u6b21\u64cd\u4f5c\u8981\u7528cal\u5355\u72ec\u8ba1\u7b97\u3002\u6bcf\u6b21\u88ab\u5220\u53bb\u7684\u70b9\u4e0d\u8ba1\u5165\u8054\u901a\u5757\u603b\u6570\uff0c\u4e8e\u662fi\u5728\u4ecek\u52300\u9012\u63a8\u65f6\uff0cans\u6bcf\u6b21\u52a0\u4e00\uff0c\u5373\u76f8\u5f53\u4e8e\u6062\u590d\u4e00\u4e2a\u88ab\u5220\u53bb\u7684\u70b9\u3002\n\n\n```\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<cstring>\nusing namespace std;\nint fastRead()\n{\n    int r=0,f=1;char c=getchar();\n    while(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){r=r*10+c-'0';c=getchar();}\n    return f*r;\n}\nint n,m,k,b[400010],ans[400010],f[400010],p[400010],cnt;\nstruct mmm{int x,y,t;}a[200010];\nbool cmp(mmm a,mmm b){return a.t>b.t;}\nint getFather(int x)\n{\n    if(x==f[x])return x;\n    else return f[x]=getFather(f[x]);\n}\nvoid unionn(int x,int y)\n{\n    int fx=getFather(x),fy=getFather(y);\n    if(fx!=fy)f[fx]=fy,cnt++;\n}\nint cal()\n{\n    memset(p,0,sizeof(p));int u=0;\n    for(int i=1;i<=n;++i)p[getFather(i)]++;\n    for(int i=1;i<=n;++i)if(p[i])u++;\n    return u;\n}\nint main()\n{\n    n=fastRead(),m=fastRead();\n    for(int i=1;i<=n;++i)f[i]=i;\n\tmemset(b,126,sizeof(b));\n    for(int i=1;i<=m;++i)a[i].x=fastRead()+1,a[i].y=fastRead()+1;\n    k=fastRead();\n    for(int i=1;i<=k;++i)b[fastRead()+1]=i;\n    for(int i=1;i<=m;++i)a[i].t=min(b[a[i].x],b[a[i].y]);\n    sort(a+1,a+1+m,cmp);\n    int l=1;\n    for(int i=k;i>=0;--i)\n    {\n    \tcnt=0;\n        while(a[l].t>i)\n        {\n            unionn(a[l].x,a[l].y);l++;\n        }\n\t\tif(i<k)ans[i]=ans[i+1]+1-cnt;\n\t\telse ans[i]=cal()-i;\n    }\n    //ans[0]=cal();\n    for(int i=0;i<=k;++i)printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n//if %\n//exit(0)\n```",
        "postTime": 1539837663,
        "uid": 58070,
        "name": "\u7530\u9619\u897f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e00\u62ff\u5230\u539f\u9898\uff0c _\u201c\u6467\u6bc1\u201d \u201c\u8fde\u63a5\u201d \u201d\u8fde\u901a\u5757\u201c_ \uff0c\u77ac\u95f4\u5c31\u60f3\u5230\u4e86\u4e00\u672c\u5751\u4e0a\u5e76\u67e5\u96c6\u90e8\u5206\u7684[\u6253\u51fb\u72af\u7f6a](http://ybt.ssoier.cn:8088/problem_show.php?pid=1386)\u8fd8\u6709\u542c\u8bf4\u548c[Closing Farm](https://www.luogu.org/problemnew/show/P3144)\u4e5f\u662f\u4e00\u4e2a\u601d\u8def\u3002\n\n\u62c6\u5206\u6211\u53ef\u6ca1\u542c\u8bf4\u8fc7\u62c6\u67e5\u96c6\u3002\u5982\u679c\u505a\u7684\u9898\u591f\u591a\u7684\u8bdd\u5e94\u8be5\u80fd\u591f\u5f88\u5feb\u60f3\u5230\u5012\u63a8\u6c42\u89e3\u3002\u4ece\u6700\u540e\u88ab\u62c6\u5f00\u7684\u7684\u72b6\u6001\u6162\u6162\u5e76\u56de\u5230\u539f\u72b6\u6001\u3002\n\n> \u5927\u81f4\u601d\u8def\uff1a\n> \u6700\u540e\u72b6\u6001\u7684\u70b9\u6839\u636e\u4e4b\u524d\u5b58\u7684\u56fe\u6062\u590d\u7684\u70b9\u5e76\u8d77\u6765\u7136\u540e\u518d\u6570\u8fde\u901a\u5757\u3002\n\n```c\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nstruct Edge{\n    int from,to,nxt;\n}edge[400400];\nint n,m,u,v,k,nume,head[400400],hit[400400],temp,numblock,ans[400400];\nbool hitted[400400];\nint dad[400400];\nint find(int x){\n    if(dad[x]==x)return x;\n    return dad[x]=find(dad[x]);\n}\nvoid unionn(int x,int y){\n    x=find(x),y=find(y);\n    if(x!=y)dad[y]=x;\n}\nvoid add(int x,int y){\n    edge[++nume].nxt=head[x];\n    edge[nume].from=x;\n    edge[nume].to=y;\n    head[x]=nume;\n}\nvoid fix(int x,int y){\n    if(find(x)==find(y))return;//\u4e0d\u5728\u540c\u4e00\u5757\u4e2d\n    unionn(x,y);\n    numblock--;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i=0;i<=n;i++)//\u7f16\u53f7\u662f0\uff5en-1\n        head[i]=-1,dad[i]=i;\n    for(int i=1;i<=m;i++){\n        cin>>u>>v;\n        add(u,v);\n        add(v,u);\n    }\n    cin>>k;\n    numblock=n-k;//\u5047\u88c5\u662f\u4e00\u7247\u5e9f\u589f\uff0c\u6240\u6709\u7684\u70b9\u5931\u8054\n    for(int i=1;i<=k;i++){\n        cin>>hit[i];\n        hitted[hit[i]]=true;\n    }\n    for(int i=1;i<=2*m;i++){//\u53ca\u5176\u61f5\u903c\u2026\u2026\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u6309\u8fb9\u904d\u5386\uff0c\u6309\u70b9\u904d\u5386\uff0c\u518d\u5957\u4e34\u63a5\u8868\u5c31\u83ab\u540d\u5176\u5999\u7684\u5404\u79cdWA(Too many or too few lines)\uff0cTLE\uff08\u4f46\u662f\u6211\u7b97\u8d77\u6765\u611f\u89c9\u8fd8\u5feb\u4e86\u4e00\u70b9\u554a\u2026\u2026\uff09\n      if(!hitted[edge[i].from]&&!hitted[edge[i].to])//\u8fb9\u662f\u597d\u7684\n        fix(edge[i].from,edge[i].to);//\u7ef4\u4fee\u597d\u521a\u521a\u5047\u88c5\u65ad\u6389\u7684\u8fde\u63a5\n    }\n    ans[k+1]=numblock;\n    for(int i=k;i>=1;i--){\n        u=hit[i];\n        numblock++;\n        hitted[u]=false;\n        for(int p=head[u];p!=-1;p=edge[p].nxt){//\u5224\u8fde\u901a\u6027\n            v=edge[p].to;\n            if(!hitted[v])\n              fix(u,v);\n        }\n        ans[i]=numblock;\n    }\n    for(int i=1;i<=k+1;i++)\n        cout<<ans[i]<<endl;\n    return 0;\n}\n```",
        "postTime": 1532967509,
        "uid": 100514,
        "name": "\u5c0f\u9ed1AWM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "```cpp\n/*\n\u89e3\u6cd5:\u79bb\u7ebf\u5904\u7406,\u9006\u5e8f\u505a\u5e76\u67e5\u96c6(\u56e0\u4e3a\u5e76\u67e5\u96c6\u53ea\u80fd\"\u5e76\",\u4e0d\u80fd\u5220);\n\u4e00\u5904\u4f18\u5316\u662f:\u7edf\u8ba1\u8054\u901a\u5757\u7684\u4e2a\u6570\u65f6,\u5e76\u4e0d\u662f\u6bcf\u6b21\u90fd\u904d\u5386 n\u4e2a\u7ed3\u70b9,\n\u800c\u662f\u7edf\u8ba1 \u7531\u4e8e\u6b64\u7ed3\u70b9\u7684\u6062\u590d\u9020\u6210\u4e86\u591a\u5c11\u8054\u901a\u5757\u7684\u5408\u5e76,\n\u7136\u540e\u7528\u6062\u590d\u524d\u7684\u8054\u901a\u5757\u4e2a\u6570\u51cf\u53bb\u5373\u53ef.\n*/\n#include<iostream>\n#include<vector>\n#include<stack>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#define ll long long\n#define inf 0x3f3f3f3f\n#define loop(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nstruct node\n{\n\tvector<int>conct; bool exi3t;\n\tnode(){\n\t\tconct.clear();\n\t\texi3t=true;\n\t}\n}a[400000+1];\nstruct pa1r\n{\n\tint x,y;\n}link[200000+1];\nint n,m,k,fatr[400000+1];\nstack<int>noext;//nonexist;\nstack<int>ans;\nint find(int);\nint main()\n{\n\tcin>>n>>m;\n\tint x,y;\n\tloop(i,1,m){\n\t\tcin>>x>>y;\n\t\tx++; y++;\n\t\tlink[i].x=x; link[i].y=y;\n\t\ta[x].conct.push_back(y);\n\t\ta[y].conct.push_back(x);\n\t}\n\tcin>>k;\n\tloop(i,1,k){\n\t\tcin>>x;\n\t\tx++;\n\t\ta[x].exi3t=false;\n\t\tnoext.push(x);\n\t}\n\tloop(i,1,n) fatr[i]=i;\n\tint fx,fy;\n\tloop(i,1,m){\n\t\tx=link[i].x; y=link[i].y;\n\t\tif(!a[x].exi3t or !a[y].exi3t) continue;\n//\t\tcout<<\"x: \"<<x<<\"  y: \"<<y<<endl;\n\t\tfx=find(x); fy=find(y);\n\t\tif(fx!=fy) fatr[fx]=fy;\n\t}\n\tint tmp=0;\n\tloop(i,1,n){\n\t\tif(a[i].exi3t and fatr[i]==i) tmp++;\n\t}\n\tans.push(tmp);\n\tint s1ze,n0w,n3xt,fn0w,fn3xt;\n\twhile(!noext.empty()){\n\t\tn0w=noext.top();\n\t\tnoext.pop();\n\t\ttmp++;//\u8fd9\u4e00\u6b65 \u662f\u9632\u6b62 \u628a\u521a\u6062\u590d\u7684\u70b9 \u5f53\u505a \u8054\u901a\u5757;\n\t\ta[n0w].exi3t=true;\n\t\ts1ze=a[n0w].conct.size();\n\t\tloop(i,1,s1ze){\n\t\t\tn3xt=a[n0w].conct[i-1];\n\t\t\tif(!a[n3xt].exi3t) continue;\n\t\t\tfn0w=find(n0w);\n\t\t\tfn3xt=find(n3xt);\n\t\t\tif(fn0w!=fn3xt)\t{\n\t\t\t\ttmp--;\n\t\t\t\tfatr[fn0w]=fn3xt;\n\t\t\t}\n\t\t}\n\t\tans.push(tmp);\n\t}\n\twhile(!ans.empty()){\n\t\tcout<<ans.top()<<endl;\n\t\tans.pop();\n\t}\n\treturn 0;\n}\nint find(int x)\n{\n\treturn fatr[x]==x? x:fatr[x]=find(fatr[x]);\n}\n```",
        "postTime": 1526648201,
        "uid": 34462,
        "name": "exi3t",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "```\n#include<stdio.h>\n#include<iostream>\n#include<cstring>\n#include<stack>\n#define MAXN 400005\n#define MAXM 200005\nusing namespace std;\nint n,m,k,i,j,x,y,tot,f[MAXN],d[MAXN];\nbool del[MAXN];\n//f\u6570\u7ec4\u8bb0\u5f55\u5e76\u67e5\u96c6\uff0cd\u6570\u7ec4\u8bb0\u5f55\u5220\u9664\u661f\u7403\u7684\u987a\u5e8f\uff0cdel\u6570\u7ec4\u8bb0\u5f55\u8be5\u661f\u7403\u662f\u5426\u88ab\u5220\u9664 \nstruct edge{\n\tint v;\n\tedge* next;\n}temp[MAXM*2], *h[MAXN];\nvoid AddEdge(int u, int v)\n{\n\tedge *p = &temp[tot++], *q = &temp[tot++];\n\tp->v = v; p->next = h[u]; h[u] = p;\n\tq->v = u; q->next = h[v]; h[v] = q;\n}\nint GetFather(int a) //\u5305\u542b\u8def\u5f84\u538b\u7f29\n{\n\tif(f[a] < 0) return a;\n\treturn f[a] = GetFather(f[a]);\n}\nbool Join(int a, int b)\n{\n\t//printf(\"Join %d %d\", a, b);\n\tint fa = GetFather(a);\n\tint fb = GetFather(b);\n\tif(fa == fb) return false;\n\tint temp = f[fa] + f[fb];\n\tif(fa < fb) //fa\u4e2d\u7684\u661f\u7403\u6570\u91cf\u8f83\u591a\uff0c\u628afb\u5408\u5e76\u5230fa\u4e2d \n\t    f[fb] = fa, f[fa] = temp;\n\telse\n\t\tf[fa] = fb, f[fb] = temp;\n\treturn true;\n}\nint main()\n{\n\t//\u8bfb\u5165\u6570\u636e\u5e76\u521d\u59cb\u5316 \n\tmemset(f, -1, sizeof(f));\n\tscanf(\"%d %d\", &n, &m);\n\tfor(i = 1;i <= m; i++)\n\t{\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tAddEdge(++x, ++y);\n\t}\n\tscanf(\"%d\", &k);\n\tfor(i = 1;i <= k; i++)\n\t{\n\t\tscanf(\"%d\", &x);\n\t\td[i] = ++x; //\u8f93\u5165\u7684\u661f\u7403\u7f16\u53f7\u4ece0\u5f00\u59cb\uff0c\u8fd9\u91cc\u5904\u7406\u6210\u4ece1\u5f00\u59cb\n\t\tdel[x] = 1;\n\t}\n\t/*for(i = 1;i <= n; i++)\n\t\tprintf(\"%d \", del[i]);\n\tprintf(\"\\n\");*/\n\t//\u4ee5\u7ebf\u4e0b\u7684\u65b9\u5f0f\u5904\u7406\u6570\u636e \uff0c\u5c06\u7ed3\u679c\u538b\u5165\u6808\u91cc\n\tstack <int> q; \n\tfor(i = 1;i <= n; i++)\n\t{\n\t\tif(del[i]) continue;\n\t\tfor(edge* p = h[i]; p; p=p->next)\n\t\t\tif(del[p->v] == 0) Join(i, p->v);\n\t}\n\tint ans = 0;\n\tfor(i = 1;i <= n; i++)\n\t\tif(f[i]<0 && del[i]==0) ans++;\n\tq.push(ans);\n\t/*for(i = 1;i <= n; i++)\n\t\tprintf(\"%d \", f[i]);\n\tprintf(\"\\nans: %d\\n\", ans);\n\tsystem(\"pause\");*/\n\tfor(i = k;i > 0; i--) //\u5012\u5e8f\u5c06\u88ab\u6467\u6bc1\u7684\u661f\u7403\u52a0\u5165\u5e76\u67e5\u96c6 \n\t{\n\t\tdel[d[i]] = 0;\n\t\tans++;\n\t\tfor(edge *p = h[d[i]]; p; p=p->next)\n\t\t\tif(del[p->v] == 0 && Join(d[i], p->v)) ans--;\n\t\tq.push(ans);\n\t\t//printf(\"\\nans: %d\\n\", ans);\n\t\t//system(\"pause\");\n\t}\n\twhile(!q.empty())\n\t{\n\t\tprintf(\"%d\\n\", q.top());\n\t\tq.pop();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1524046368,
        "uid": 65531,
        "name": "18811162081lyh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5e76\u67e5\u96c6\u7684\u9898\uff0c\u8bf4\u96be\u4e5f\u633a\u96be\u7684\uff0c\u56e0\u4e3a\u4ece\u6b63\u9762\u770b\u8981\u8fd0\u7528\u56fe\u8bba\u4e2d\u7684\u7b97\u6cd5\uff0c\u6765\u8fdb\u884c\u5220\u8fb9\u548c\u8bb0\u5f55\u8054\u901a\u5757\uff0c\u4f46\u662f\u8fd9\u6837\u65e0\u7591\u4f1a\u975e\u5e38\u590d\u6742\uff0c\u6240\u4ee5\u6839\u636e\u6b63\u96be\u5219\u53cd\u7684\u601d\u60f3\uff0c\u6211\u4eec\u4e0d\u8fdb\u884c\u5220\u8fb9\u800c\u8fdb\u884c\u52a0\u8fb9\uff0c\u7ed3\u679c\u5728\u5012\u53d9\u8f93\u51fa\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u8fd0\u7528\u5e76\u67e5\u96c6\u7684\u601d\u60f3\u6765\u8fdb\u884c\u505a\u9898\u3002\n\u4f18\u70b9\uff1a\u901a\u8fc7\u5e76\u67e5\u96c6\u6a21\u578b\u53ef\u4ee5\u628a\u6bcf\u4e2a\u661f\u7403\u5f53\u505a\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u6240\u4ee5\u6b63\u96be\u5219\u53cd\u540e\u6bcf\u52a0\u4e00\u6761\u8fb9\u5c31\u4f1a\u589e\u52a0\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u7136\u540e\u518d\u6839\u636e\u9898\u76ee\u4e2d\u7684\u8def\u5f84\u5c31\u53ef\u4ee5\u77e5\u9053\u8054\u901a\u7684\u6570\u91cf\uff0c\u5219 \u56fe\u4e2d\u8054\u901a\u5757\u7684\u6570\u91cf=\uff08\u661f\u7403\u7684\u6570\u91cf-\u52a0\u5165\u7684\u6709\u6548\u8fb9\uff09\u3002\n\u53d8\u91cf\uff1a\n~~~\nconst int maxn=500000;\nstruct Edge{\n\tint to,from,self;\n}edge[maxn];//\u524d\u5411\u661f\u5b58\u56fe\n//\u8be5\u5b58\u56fe\u65b9\u6cd5\u662f\u6240\u6709\u5b58\u56fe\u65b9\u6cd5\u4e2d\u8f83\u5feb\u7684\u4e86\nint n,m,k,cnt=0,tot;//tot\u7528\u6765\u8bb0\u5f55\u8054\u901a\u5757\u4e2a\u6570\nint fa[maxn],//\u5e76\u67e5\u96c6\u7684\u5bb6\u957f\u6570\u7ec4\nvis[maxn],//\u6467\u6bc1\u661f\u7403\u7684\u6807\u8bb0\u6570\u7ec4\nlast[maxn],\nans[maxn],//\u4fdd\u5b58\u7b54\u6848\u7684\u6570\u7ec4\nfire[maxn];//\u8bb0\u5f55\u6467\u6bc1\u661f\u7403\u7684\u6570\u7ec4\ninline int find(int x){\n   return x==fa[x]? x:fa[x]=find(fa[x]);\n}\ninline int he(int x,int y){\n    x=find(x);\n    y=find(y);\n    fa[x]=y;\n}\ninline void add(int x,int y){\n\tedge[++cnt].to=y;\n\tedge[cnt].self=x;\n\tedge[cnt].from=last[x];\n\tlast[x]=cnt;\n}\ninline void init(){\n\tint x,y;\n\tn=read();m=read();\n\tf1(i,0,n) fa[i]=i;\n\tf1(i,1,m)\n\t{\n\t\tx=read(),y=read();\n\t\tadd(x,y);//\u65e0\u5411\u56fe\u52a0\u4e24\u6b21\u8fb9\n\t\tadd(y,x);\n\t}\n\tk=read();\n\ttot=n-k;//\u6700\u540e\u53ea\u4f1a\u81f3\u591a\u6709n-k\u4e2a\u8054\u901a\u5757\n\tf1(i,1,k)\n\t{\n\t\tx=read();\n\t\tvis[x]=1;fire[i]=x;//\u6807\u8bb0\u548c\u8bb0\u5f55\n\t}\n\t\n} \ninline void solve(){\n\tint sum=1;\n\tf1(i,1,cnt)\n\t{n\t\tif(!vis[edge[i].self]&&!vis[edge[i].to]&&find(edge[i].self)!=find(edge[i].to))//\n     //\u8fd9\u91cc\u5c06\u90a3\u4e9b\u4e0d\u4f1a\u88ab\u6467\u6bc1\u7684\u661f\u7403\u5148\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u8fde\u63a5\u8d77\u6765\uff0c\u8fd9\u91cc\u7b97\u662f\u5bf9\u6253\u51fb\u5b8c\u6240\u6709\u661f\u7403\u540e\u6240\u5269\u8054\u901a\u5757\u4e2a\u6570\u7684\u51c6\u786e\u5904\u7406   \n\t\t{\n\t\t\the(edge[i].self,edge[i].to);\n\t\t\ttot--;\n            //\u5982\u679c\u53ef\u4ee5\u8054\u901a\u5219\u8054\u901a\u5feb\u6570-1\n\t\t}\n\t}\t\n\tans[sum]=tot;//\u8bb0\u5f55\n\tf2(i,k,1)//\u5012\u53d9\u5faa\u73af\u6467\u6bc1\u661f\u7403\u7684\u987a\u5e8f\n\t{\n\t\ttot++;//\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u661f\u7403\uff0c\u5f53\u524d\u4ecd\u672a\u8054\u901a\uff0c\u8054\u901a\u5feb\u6570+1\n\t\tvis[fire[i]]=0;//\u6807\u8bb0\u53d6\u6d88\n\t\tfor(register int j=last[fire[i]];j;j=edge[j].from)//\u5faa\u73af\u8be5\u661f\u7403\u6240\u80fd\u5230\u8fbe\u7684\u5176\u4ed6\u661f\u7403\n\t\t{\n\t\t\tif(!vis[edge[j].to]&&find(fire[i])!=find(edge[j].to))//\u5982\u8fc7\u53e6\u4e00\u4e2a\u661f\u7403\u6ca1\u88ab\u6467\u6bc1\u4e14\u4ed6\u4e24\u6ca1\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\n\t\t\t{\n\t\t\t\the(fire[i],edge[j].to);//\u8054\u901a\u4ed6\u4eec\n\t\t\t\ttot--;//\u5f53\u524d\u8054\u901a\u5757\u6570+1\n\t\t\t}\n\t\t}\n\t\tans[++sum]=tot;//\u8bb0\u5f55\n\t}\n\tf2(i,sum,1)//\u5012\u53d9\u8f93\u51fa\n\t{\n\t\tprint(ans[i]);\n\t\tputchar('\\n');\n\t}\n}\nint main(){\n    init();\n\tsolve(); \n    return 0;\n}\n\n\n\n\n\n~~~\n",
        "postTime": 1522466770,
        "uid": 64593,
        "name": "Mr_cold",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u6709\u8da3\u7684\u4e00\u9053\u5e76\u67e5\u96c6\u3002\n\n\u6211\u4eec\u5728\u505a\u7ec4\u5408\u6570\u5b66\u6216\u8005\u96c6\u5408\u7684\u65f6\u5019\u4f1a\u8bf4\u4e00\u53e5\u8bdd\uff0c\u53eb\u505a\u6b63\u96be\u5219\u53cd\u3002\u8fd9\u91cc\u4e5f\u662f\u540c\u6837\u7684\u3002\n\n\u9996\u5148\uff0c\u65e2\u7136\u662f\u5bf9\u8054\u901a\u5757\u7684\u64cd\u4f5c\uff0c\u90a3\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\u7528\u5e76\u67e5\u96c6\u89e3\u51b3\u3002\n\n\u5148\u6765\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u6709n\u4e2a\u5757\uff0c\u7136\u540e\u6211\u4eec\u8981\u8fdb\u884c\u5408\u5e76\uff0c\u5408\u5e76\u4e4b\u540e\u6709\u591a\u5c11\u5757\uff1f\u53ea\u9700\u8981\u5bf9\u5408\u5e76\u51fd\u6570\u7a0d\u7a0d\u4fee\u6539\uff1a\n\n```cpp\ninline void uni(int x, int y) {\n    int xx = find(x), yy = find(y);\n    if(xx == yy) return;\n    --cnt;\n    fa[xx] = yy;\n}\n```\n\u6bcf\u4e00\u6b21\u5408\u5e76\uff0c\u5982\u679c\u4e24\u4e2a\u5728\u540c\u4e00\u96c6\u5408\u4e2d\u5c31\u4e0d\u505a\u5904\u7406\uff0c\u5426\u5219\u76f8\u5f53\u4e8e\u8fde\u901a\u5757-1.\n\n\u8fd4\u56de\u8fd9\u9053\u9898\uff0c\u6467\u6bc1\u7684\u8fc7\u7a0b\u662f\u76f8\u5f53\u96be\u4ee5\u7ef4\u62a4\u7684\uff0c\u7531\u4e8e\u8fd9\u9053\u9898\u662f\u79bb\u7ebf\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u91cd\u5efa\u3002\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u5728\u6467\u6bc1\u7684\u6700\u540e\uff0c\u8282\u70b90 2 4\u5206\u522b\u6784\u6210\u4e863\u4e2a\u8fde\u901a\u5757\uff0c\u6ce8\u610f\u8fd9\u91cc\u7b54\u6848\u5e76\u4e0d\u662f8\uff0c\u56e0\u4e3a\u4e0d\u5b58\u5728\u5269\u4e0b\u76845\u4e2a\u8282\u70b9\uff01\n\n\u7136\u540e\u6bcf\u6bcf\u6062\u590d\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u53ef\u4ee5\u628a\u548c\u5b83\u76f8\u5173\u8054\u7684\u8fde\u901a\u5757\u90fd\u5408\u5e76\u4e00\u904d\uff0c\u4f46\u662f\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684\u5408\u5e76\u7684\u524d\u63d0\uff0c\u662f\u5bf9\u9762\u91cd\u5efa\u8fc7\u3002\u5b9e\u73b0\u89c1\u4e0b\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#include <algorithm>\nusing namespace std;\ninline void read(int &x) { //\u4f18\u8bfb\n    x = 0; char c = getchar();\n    while(!isdigit(c)) c = getchar();\n    while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\n}\n#define MAXN 400006\nint fa[MAXN], cnt;\ninline int find(int x) {\n    return x == fa[x] ? x : fa[x] = find(fa[x]);\n}\ninline void uni(int x, int y) {\n    int xx = find(x), yy = find(y);\n    if(xx == yy) return;\n    --cnt; //\u8fde\u901a\u5757\u4e2a\u6570\u7edf\u8ba1\n    fa[xx] = yy;\n}\nint n, m;\ntypedef pair<int, int> pii;\npii rel[MAXN >> 1];\nint del[MAXN], ans[MAXN];\nbool vis[MAXN];\nvector<int> v[MAXN];\ninline void add_set(int x, int y) {\n    //cout<<x<<\" \"<<y<<endl;\n    if(!vis[x] && !vis[y]) { //\u4e24\u8fb9\u90fd\u5b58\u5728 \u53ef\u4ee5\u5408\u5e76\n        //cout<<x<<\" \"<<y<<endl;\n        uni(x, y);\n        return;\n    }\n    v[x].push_back(y), v[y].push_back(x); //\u5426\u5219\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\n}\nint main() {\n    read(n), read(m); \n    for(int i = 0; i < n; ++i) fa[i] = i;\n    cnt = n;\n    for(int i = 1; i <= m; ++i) read(rel[i].first), read(rel[i].second);\n    int K; read(K);\n    cnt -= K; \n    for(int i = 1; i <= K; ++i) read(del[i]), vis[del[i]] = 1;\n    //for(int i = 0; i < n; ++i) cout<<vis[i]<<\" \";\n    //cout<<endl;\n    for(int i = 1; i <= m; ++i) add_set(rel[i].first, rel[i].second); //\u5408\u5e76\u521d\u59cb\u80fd\u591f\u5408\u5e76\u7684\u96c6\u5408\n    ans[K + 1] = cnt;\n    for(int i = K; i >= 1; --i) { //\u91cd\u5efa\u8fc7\u7a0b\n        vis[del[i]] = 0; //\u8868\u793a\u5df2\u7ecf\u91cd\u5efa\n        ++cnt;\n        for(int j = 0; j < v[del[i]].size(); ++j)\n            if(!vis[v[del[i]][j]]) //\u53e6\u4e00\u4e2a\u91cd\u5efa\u8fc7\n                uni(del[i], v[del[i]][j]);\n        ans[i] = cnt;\n    }\n    for(int i = 1; i <= K + 1; ++i) cout<<ans[i]<<endl;\n    return 0;\n} \n```",
        "postTime": 1513409339,
        "uid": 37956,
        "name": "LiRewriter",
        "ccfLevel": 0,
        "title": "luogu1197/JSOI2008 \u661f\u7403\u5927\u6218 \u9898\u89e3"
    },
    {
        "content": "**\u90bb\u63a5\u8868+\u9006\u5e8f\u5e76\u67e5\u96c6**\n\n**\u9006\u5e8f\u5e76\u67e5\u96c6\u697c\u4e0b\u5df2\u7ecf\u8bf4\u7684\u5f88\u6e05\u695a\u4e86**\n\n**\u5c31\u662f\u5148\u7edf\u8ba1\u661f\u7403\u90fd\u88ab\u6bc1\u706d\u4e4b\u540e\u7684\u8fde\u901a\u7684\u4e2a\u6570**\n\n**\u518d\u6309\u7167\u7834\u574f\u987a\u5e8f\u5012\u7740\u4e00\u4e2a\u4e00\u4e2a\u5e76\u56de\u53bb**\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define maxn 4000001\nusing namespace std;\nint n,m,k,ans,cnt;\nint head[maxn];\nint destroy[maxn],destroy_order[maxn],num[maxn];   \nint f[maxn],earth[maxn];\nstruct node             //\u90bb\u63a5\u8868\u5b58\u50a8\u8fde\u8fb9 \n{\n    int to,next;\n}e[maxn];\nint getf(int x)        //\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29 \n{\n    if(f[x]==x) return x;\n    else\n    {\n        f[x]=getf(f[x]);\n        return f[x];\n    }\n}\nint merge(int x,int y)        //\u5408\u5e76 \n{\n    int t1,t2;\n    t1=getf(x),t2=getf(y);\n    if(t1!=t2)\n    {\n        f[t2]=t1;\n        return 1;\n    }\n    return 0;\n}\nint add(int from,int go)        //\u90bb\u63a5\u8868 \n{\n    e[++cnt].next=head[from];\n    e[cnt].to=go;\n    head[from]=cnt;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=0;i<=n;i++) f[i]=i;     //\u5e76\u67e5\u96c6\u521d\u59cb\u5316\uff0c\u6700\u5f00\u59cb\u8981\u7edf\u8ba1\u6ca1\u88ab\u7834\u574f\u65f6\u7684\u8fde\u901a\u7684\u4e2a\u6570 \n    for(int i=1;i<=m;i++)\n    {\n        int a1,a2;\n        cin>>a1>>a2;\n        add(a1,a2),add(a2,a1);      //\u52a0\u53cc\u5411\u8fb9 \n        merge(a1,a2);         //\u5408\u5e76 \n    }\n    for(int i=0;i<n;i++) if(f[i]==i) ans++;      //\u7edf\u8ba1\u521d\u59cb\u4e2a\u6570 \n    num[0]=ans;        //\u8bb0\u5f55 \n    cin>>k;\n    for(int i=1;i<=k;i++)\n    {\n        cin>>destroy_order[i];           //\u8f93\u5165\u7834\u574f\u7684\u661f\u7403\u7684\u987a\u5e8f \n        destroy[destroy_order[i]]=1;        //\u8bb0\u5f55 \n    }\n    for(int i=0;i<n;i++) f[i]=i;           //\u5e76\u67e5\u96c6\u521d\u59cb\u5316 \n    for(int i=0;i<n;i++)\n    { \n        if(destroy[i]!=1)             //\u5047\u8bbe\u8981\u7834\u574f\u7684\u661f\u7403\u5168\u88ab\u7834\u574f\u4e4b\u540e\u8fde\u901a\u7684\u4e2a\u6570 \n            for(int j=head[i];j!=0;j=e[j].next)\n            {    \n                int to=e[j].to;\n                if(destroy[to]!=1) merge(i,to);\n            }\n    }\n    ans=0;\n    for(int i=0;i<n;i++)\n        if(f[i]==i&&destroy[i]!=1) ans++;        //\u7edf\u8ba1\u4e2a\u6570 \n    for(int i=k;i>=1;i--)\n    { \n        num[i]=ans;              //\u8bb0\u5f55\u4e2a\u6570 \n        destroy[destroy_order[i]]=0;          //\u5012\u5e8f\u5e76\u67e5\u96c6\uff0c\u8fd8\u6ca1\u88ab\u7834\u574f \n        ans++;                              //\u9996\u5148\u81f3\u5c11\u591a\u4e00\u4e2a\u8fde\u901a\u5757 \n        for(int j=head[destroy_order[i]];j!=0;j=e[j].next)\n        {\n            int to=e[j].to; \n            if(destroy[to]!=1&&merge(destroy_order[i],to))    ans--;   //\u5982\u679c\u4e0e\u8fd9\u4e2a\u6ca1\u88ab\u7834\u574f\u7684\u661f\u7403\u76f8\u8fde\u5e76\u4e14\u4f7f\u5f97\u5408\u5e76\u5728\u4e00\u8d77\u4e86\n                                                                    //\u8fde\u901a\u5757\u4e2a\u6570-1     \n        }\n    }\n    for(int i=0;i<=k;i++) cout<<num[i]<<endl;        //\u6b63\u5e8f\u8f93\u51fa\u4e2a\u6570 \n    return 0;\n}\n```",
        "postTime": 1503365067,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5982\u679c\u60f3\u8981\u6839\u636e\u9898\u76ee\u7684\u63cf\u8ff0\uff0c\u4f7f\u7528\u5220\u70b9\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\uff08\u4e5f\u5c31\u662f\u6bcf\u6b21\u5220\u4e00\u4e2a\u70b9\u518d\u5237\u4e00\u8d9f\u5e76\u67e5\u96c6\uff09\u80af\u5b9a\u662fm^k\u7684\u590d\u6742\u5ea6\u3002\u800c\u5bf9\u4e8e\u9898\u76ee\u4e2d\u90a3\u4e48\u5927\u7684\u6570\u636e\uff0c\u80af\u5b9a\u662f\u6ca1\u6cd5ac\u7684\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53cd\u8fc7\u6765\u601d\u8003\uff0c\u5220\u70b9\u867d\u7136\u6ca1\u6709\u6bd4\u8f83\u597d\u7684\u529e\u6cd5\uff0c\u4e0d\u5982\u4ece\u540e\u5f80\u524d\u6765\u5904\u7406\uff0c\u4e0d\u5c31\u53d8\u6210\u63a5\u70b9\u4e86\u5417\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u8d9f\u5faa\u73af\uff0c\u4ecek\u52301\u8fdb\u884c\u5904\u7406\uff0c\u6bcf\u6b21\u628a\u5f53\u524d\u8fd9\u4e2a\u8981\u5220\u9664\u7684\u70b9\u63a5\u56de\u5230\u56fe\u4e2d\uff0c\u5e76\u628a\u5b83\u4e0e\u5b83\u76f8\u8fde\u5e76\u4e14\u672a\u88ab\u5220\u53bb\u7684\u70b9\u5408\u5e76\uff0c\u4fee\u6b63ans\u6570\u7ec4\u3002**\u6ce8\u610f**\u8fd9\u91cc\u6211\u4eec\u4e00\u5b9a\u8981\u7528\u6548\u7387\u6bd4\u8f83\u9ad8\u7684\u5b58\u56fe\u65b9\u5f0f\uff08\u90bb\u63a5\u8868\uff09\u6765\u5b58\u56fe\uff0c\u624d\u80fd\u9632\u6b62\u603b\u590d\u6742\u5ea6\u4ece\u8fd1\u4f3c\uff08\u5176\u5b9e\u8981\u5927\u4e00\u4e9b\uff09\u4e8eO\uff08m\uff09\u9000\u5316\u5230N^K\u6216M^K\u3002\n\n\n\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<string>\nusing namespace std;\nconst int maxn=400005;\nint n,m,k,tot,fa[maxn],lnk[maxn],son[maxn],nxt[maxn],b[maxn],ans[maxn];\nstruct dyt{\n    int x,y;\n}a[maxn];\nbool vis[maxn];\ninline int read(){\n    int x=0; char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n    return x;\n}\nvoid add(int x,int y){//\u5b58\u56fe\u4f18\u5316\uff0c\u4f18\u5316\u65f6\u95f4\u6548\u7387 \n    tot++; son[tot]=y; nxt[tot]=lnk[x]; lnk[x]=tot;\n}\nint getfa(int x){\n    if (fa[x]==x) return x;\n    fa[x]=getfa(fa[x]);\n    return fa[x];\n}\nint main(){\n    n=read(); m=read();\n    for (int i=1;i<=n;i++) fa[i]=i;\n    for (int i=1;i<=m;i++) {\n        a[i].x=read()+1,a[i].y=read()+1;\n        add(a[i].x,a[i].y); add(a[i].y,a[i].x);//\u65e0\u5411\u56fe \n    }\n    k=read();\n    for (int i=1;i<=k;i++) b[i]=read()+1,vis[b[i]]=true;\n    ans[k+1]=n-k;//ans\u6570\u7ec4\u8bb0\u5f55\u5220\u4e86\u7b2ci\u4e2a\u8981\u5220\u7684\u70b9\u4e4b\u524d\u7684\u8054\u901a\u5757\u603b\u6570 \uff08\u7565\u62d7\u53e3\n    for (int i=1;i<=m;i++) \n    if (vis[a[i].x]==false&&vis[a[i].y]==false) \n        {int fax=getfa(a[i].x),fay=getfa(a[i].y);\n        if (fax!=fay) fa[fax]=fay,ans[k+1]--;  //\u5c06\u5220\u5b8c\u70b9\u4e4b\u540e\u4f9d\u7136\u5b58\u5728\u7684\u70b9\u5408\u5e76 \n    }\n    for (int i=k;i>=1;i--) {\n        ans[i]=ans[i+1]+1; vis[b[i]]=false; //\u5220\u70b9\u53cd\u8fc7\u6765\u4e4b\u540e\u53d8\u6210\u63a5\u70b9 \n        for (int j=lnk[b[i]];j;j=nxt[j]) \n        if (vis[son[j]]==false){ //\u628a\u5f53\u524d\u7684\u70b9\u4e0e\u5176\u4f59\u6ca1\u6709\u88ab\u5220\u9664\uff08\u6d88\u706d\uff09\u7684\u70b9\u5408\u5e76 \n            int fax=getfa(b[i]),fay=getfa(son[j]);\n            if (fax!=fay) fa[fax]=fay,ans[i]--;\n        }\n    }\n    for (int i=1;i<=k+1;i++) printf(\"%d\\n\",ans[i]); \n    return 0;\n}\n```",
        "postTime": 1500880551,
        "uid": 36654,
        "name": "DYT_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "/\\*\n\u8fd9\u4e2a\u9898\u7528\u5e76\u67e5\u96c6\u7684\u8bdd\u5fc5\u987b\u79bb\u7ebf\n\n\u5047\u8bbe\u8981\u5220\u7684\u54ea\u4e9b\u661f\u7403\u4e0d\u5b58\u5728\uff0c\u8981\u4e00\u4e2a\u4e00\u4e2a\u5f80\u4e0a\u52a0\n\n\u52a0\u4e00\u6b21\u7edf\u8ba1\u4e00\u904d\u8fde\u901a\u5206\u91cf\u4e2a\u6570\n\n\u8fd9\u6837\u7528\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e86\n\n\\*/\n\n\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int X = 400005;\nint p[X];\nstruct node{\n    int x,y,next;\n}edge[X*2];\nint po[X],tol;\nbool use[X];\nint a[X],tot;\nint vec[X];\nint n,m;\nvoid add(int x,int y)\n{\n    edge[++tol].x=x;\n    edge[tol].y=y;\n    edge[tol].next=po[x];\n    po[x]=tol;\n}\nint find_set(int x)\n{\n    if(x!=p[x])\n        p[x]=find_set(p[x]);\n    return p[x];\n}\nvoid init()\n{\n    memset(po,0,sizeof(po));\n    tol=0;\n    for(int i=1;i<=n;i++)\n    {\n        use[i]=true;\n        p[i]=i;\n    }\n    int x,y;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        x++;\n        y++;\n        add(x,y);\n        add(y,x);\n    }\n    scanf(\"%d\",&tot);\n    for(int i=1;i<=tot;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        a[i]++;\n        use[a[i]] = false;//\u5148\u5c06\u8981\u5220\u7684\u8fb9\u6807\u8bb0\u3002 \n    }\n}\nvoid solve()\n{\n    int x,y,px,py;\n    for(int i=1;i<=tol;i+=2)\n    {\n        x=edge[i].x;\n        y=edge[i].y;\n        if(use[x]&&use[y])//\u5408\u5e76 \n        {\n            px=find_set(x);\n            py=find_set(y);\n            p[px]=py;\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)//\u7edf\u8ba1\u8fde\u901a\u5206\u91cf \n        if(use[i]&&p[i]==i)\n            ans++;\n    for(int i=tot;i;i--)//\u5012\u5e8f \u79bb\u7ebf \n    {\n        vec[i]=ans;\n        int x=a[i];\n        use[x]=1;//\u52a0\u5165\u4e00\u4e2a\u661f\u7403 \n        ans++;\n        for(int j=po[x];j;j=edge[j].next)//\u52a0\u8fb9\u7edf\u8ba1 \n        {\n            int y=edge[j].y;\n            if(use[y])\n            {\n                py=find_set(y);\n                px=find_set(x);\n                if(px!=py)\n                {\n                    p[px]=py;\n                    ans--;\n                }\n            }\n        }\n    }\n    vec[0] = ans;\n    for(int i=0;i<=tot;i++)\n        printf(\"%d\\n\",vec[i]);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1481453460,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u79bb\u7ebf\u8bb0\u5f55\u8be2\u95ee\u4e4b\u540e\uff0c\u9006\u5411\u5e76\u67e5\u96c6\u3002\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxe=200005*2;\nconst int maxn=400005;\nint N,M,K;\nint P[maxn];\nint ans[maxn],pos=0;\nint cntP=0,cntArc=0,cntG=0;\nbool Cancel[maxn];\nstruct Arc{\n    int u,v;\n    int next;\n}Arcs[maxe];\nint head[maxn],top=0;\nvoid Pre(){memset(head,-1,sizeof(head));top=0;}\nvoid Insert(int u,int v){\n    Arcs[++top].u=u;Arcs[top].v=v;Arcs[top].next=head[u];head[u]=top;\n    Arcs[++top].u=v;Arcs[top].v=u;Arcs[top].next=head[v];head[v]=top;\n}\nstruct Query{\n    int x;\n}Querys[maxn];\nint find(int x){return (P[x]==x)?x:P[x]=find(P[x]);}\nint main(){\n    scanf(\"%d%d\",&N,&M);\n    memset(Cancel,0,sizeof(Cancel));\n    Pre();\n    for(int i=0;i<N;i++) P[i]=i;\n    int u,v;\n    for(int i=1;i<=M;i++){\n        scanf(\"%d%d\",&u,&v);\n        Insert(u,v);\n    }\n    scanf(\"%d\",&K);\n    for(int i=1;i<=K;i++) {\n        scanf(\"%d\",&Querys[i].x);\n        Cancel[Querys[i].x]=true;\n    }\n    for(int i=0;i<N;i++){\n        if(!Cancel[i]){\n            cntP++;\n            int u=i;\n            for(int j=head[u];j!=-1;j=Arcs[j].next){\n                int v=Arcs[j].v;\n                if(!Cancel[v]){\n                    int xx=find(u);\n                    int yy=find(v);\n                    if(xx!=yy){\n                        P[xx]=yy;\n                        cntArc++;\n                    }\n                }\n            }\n        }\n    }\n    cntG=cntP-cntArc;\n    ans[++pos]=cntG;\n    for(int i=K;i>=1;i--){\n        int u=Querys[i].x;\n        Cancel[u]=false;\n        cntP++;\n        for(int i=head[u];i!=-1;i=Arcs[i].next){\n            int v=Arcs[i].v;\n            if(!Cancel[v]){\n                int xx=find(u);\n                int yy=find(v);\n                if(xx!=yy){\n                    P[xx]=yy;\n                    cntArc++;\n                }\n            }\n        }\n        cntG=cntP-cntArc;\n        ans[++pos]=cntG;\n    }\n    for(int i=pos;i>=1;i--){\n        printf(\"%d\\n\",ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1479212125,
        "uid": 19009,
        "name": "bxd1998",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "//\u601d\u8def\u548c\u4e0b\u9762\u9898\u89e3\u4e00\u6837\uff0c\u662f\u4e2a\u7ec3\u9006\u5411\u601d\u7ef4\u7684\u597d\u9898\uff0c\u5b9e\u73b0\u7684\u65f6\u5019\u6211\u9047\u5230\u7684\u95ee\u9898\u90fd\u6ce8\u91ca\u4e86\n\n\n\n\n\n\n\n\n\n\n    \n    \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nconst int maxn=400000+10;\nconst int maxe=200000+10;\nint n,m,k,cnt=0,tot;\nint h[maxn],p[maxn],qq[maxn],vis[maxn],ans[maxn];\nstruct edge{\n    int to,next;\n}e[maxe*2];\nvoid ins(int u,int v){\n    e[++cnt]=(edge){v,h[u]};\n    h[u]=cnt;\n    e[++cnt]=(edge){u,h[v]};\n    h[v]=cnt;\n}\nint inline read(){\n    int num=0;\n    char c;\n    bool plus=true;\n    while((c=getchar())==' '||c=='\\n'||c=='\\r');\n    if(c=='-')plus=false;\n    else num=c-'0';\n    while(isdigit(c=getchar()))\n        num=num*10+c-'0';\n    return num*(plus?1:-1);\n}\nint find(int x){\n    return p[x]==x?x:p[x]=find(p[x]);\n}\nvoid merge(int x){\n    tot++;\n    int r1=find(x),r2,y;\n    for(int i=h[x];i;i=e[i].next){\n        y=e[i].to;\n        if(!vis[y]){\n            r2=find(y);\n            if(r1!=r2){\n                p[r2]=r1;//\u4e0d\u80fd\u53cd\u8fc7\u6765\uff0c\u4e0d\u7136\u4e0d\u662f\u4e00\u4e2a\u96c6\u5408 \n                tot--;\n            }\n        }\n    }\n    vis[x]=0;\n}\nint main(){\n    n=read(); m=read();\n    for(int i=1;i<=m;i++){\n        int x,y;\n        x=read();y=read();\n        x++; y++; //\u4e0b\u9762\u6709\u8bf4\u660e \n        ins(x,y);\n    }\n    k=read();\n    for(int i=1;i<=k;i++){\n        qq[i]=read();\n        qq[i]++;\n        vis[qq[i]]=1;\n    }\n    for(int i=1;i<=n;i++)p[i]=i;//n\u67090\uff0c\u4ece0\u5f00\u59cb\uff0c\u6ce8\u610f\uff01\uff01 \u6216\u8005\u524d\u9762\u6bcf\u4e2a\u70b9\u90fd\u52a0\u4e00 \n    tot=0;//tot=n-k\u4e5f\u53ef\u4ee5\uff0c\u4e0a\u9762\u4e0d\u7528\u6bcf\u6b21\u90fd\u52a0\uff0c\u661f\u7403\u88ab\u70b8\u4e4b\u540e\u4e0d\u80fd\u7b97\u4f5c\u8054\u901a\u5feb \n    for(int i=1;i<=n;i++){\n        if(!vis[i]) //\u52ff\u5fd8 \n            merge(i);\n    }\n    ans[k+1]=tot;\n    for(int i=k;i>=1;i--){\n        //vis[qq[i]]=0;\n        //tot++;\n        merge(qq[i]);\n        ans[i]=tot;\n    }\n    for(int i=1;i<=k+1;i++)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n} \n\n```",
        "postTime": 1478611202,
        "uid": 16812,
        "name": "Neumann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u697c\u4e0b\u8bf4\u7684\u5f88\u597d\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4efdC++\u7684\u4ee3\u7801\n\n\n\u5f53\u67d0\u4e2a\u70b9\u7684fa\u7b49\u4e8e-1\u65f6\u8bf4\u660e\u8fd9\u4e2a\u70b9\u4e0d\u5728\u5f53\u524d\u96c6\u5408\u4e2d\uff0c\u66f4\u65b0\u67d0\u4e2a\u8282\u70b9\u65f6\u5c31\u4e0d\u8003\u8651\u8fd9\u4e9b\u4e0d\u5728\u5f53\u524d\u96c6\u5408\u4e2d\u7684\u70b9\u3002\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\nconst int M=200005;\nconst int N=M*2;\nint lines,front[N];\nstruct edge{int next,to;}e[N];\nvoid addline(int x,int y){e[++lines]=(edge){front[x],y};front[x]=lines;}\nint tal;\nint n,m,fa[N],ans[N];\nint find(int k){return k!=fa[k]?fa[k]=find(fa[k]):k;}\nvoid addpoint(int k){\n    fa[k]=k;tal++;\n    for (int i=front[k];i!=0;i=e[i].next)\n        if (fa[e[i].to]!=-1){\n            int x=find(e[i].to);\n            if (k!=x){fa[x]=k;tal--;}\n        }\n}\nint p[N];bool t[N];\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1,x,y;i<=m;i++){\n        scanf(\"%d%d\",&x,&y);\n        addline(x,y),addline(y,x);\n    }\n    scanf(\"%d\",&m);\n    for (int i=1;i<=m;i++) scanf(\"%d\",&p[i]),t[p[i]]=true;\n    memset(fa,-1,sizeof(fa));\n    for (int i=0;i<n;i++) if (!t[i]) addpoint(i);\n    ans[0]=tal;\n    for (int i=m;i>=1;i--){\n        addpoint(p[i]);\n        ans[i]=tal;\n    }\n    for (int i=1;i<=m;i++) printf(\"%d\\n\",ans[i]);\n    printf(\"%d\\n\",ans[0]);\n}\n\n```",
        "postTime": 1460551977,
        "uid": 10356,
        "name": "\u5929\u72d7\u7684\u624b\u5e16",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    },
    {
        "content": "\u7528\u5e76\u67e5\u96c6 \u4f46\u5e76\u67e5\u96c6\u53ea\u80fd\u5e76\u4e0d\u80fd\u5220 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9006\u5411\u601d\u7ef4\u53cd\u7740\u505a\n\n\u4ece\u6700\u540e\u4e00\u4e2a\u661f\u7403\u5f00\u59cb\u6062\u590d \u6bcf\u6062\u590d\u4e00\u4e2a\u661f\u7403\u540c\u65f6\u6062\u590d\u76f8\u5173\u7684\u9053\u8def \u8bb0\u5f55\u4e0b\u6b64\u65f6\u7684\u8fde\u901a\u5757\u4e2a\u6570 \u6700\u540e\u9006\u5e8f\u8f93\u51fa\u5373\u53ef\n\n\u53e6\u5916\u8981\u6ce8\u610f\u7684\u662f\u5b58\u50a8 \u7528\u8bb0\u5f55\u7c7b\u578b\u8bb0\u5f55\u4e0b\u8fb9\u96c6 \u518d\u8bb0\u5f55\u4e0b\u4ee5\u8fd9\u4e2a\u661f\u7403\u4e3a\u5173\u952e\u5b57\u65f6\u7684\u524d\u4e00\u6761\u8fb9\u7684\u5e8f\u53f7 \u5c31\u50cf\u94fe\u8868\u4e00\u6837 \u53ea\u7528\u77e5\u9053\u4ee5\u8fd9\u4e2a\u661f\u7403\u4e3a\u5173\u952e\u5b57\u65f6\u6700\u540e\u4e00\u6761\u8fb9\u7684\u7f16\u53f7 \u5c31\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u5f80\u524d\u9762\u627e \u4e00\u76f4\u627e\u5230\u7b2c\u4e00\u4e2a \u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2atail\u6570\u7ec4\u8bb0\u5f55\u4ee5\u8fd9\u4e2a\u661f\u7403\u4e3a\u5173\u952e\u5b57\u65f6\u6700\u540e\u4e00\u6761\u8fb9\u7684\u7f16\u53f7\n\n\u800c\u4e00\u6761\u8def\u8fde\u63a5\u4e24\u4e2a\u661f\u7403 \u4e3a\u4e86\u65b9\u4fbf\u67e5\u627e \u6211\u4eec\u9700\u8981\u628a\u4e24\u4e2a\u661f\u7403\u5206\u522b\u4f5c\u4e3a\u5173\u952e\u5b57\u5b58\u50a8\u8fb9\n\n\n\u8bb0\u5f55\u8fde\u901a\u5757\u4e2a\u6570\u7684\u65b9\u6cd5\uff1a\u6bcf\u6062\u590d\u4e00\u4e2a\u661f\u7403 \u89c6\u8be5\u661f\u7403\u4e3a\u72ec\u7acb\u7684 \u8fde\u901a\u5757\u52a0\u4e00 \u518d\u5bf9\u76f8\u5173\u9053\u8def\u8fdb\u884c\u5904\u7406 \u6bcf\u5408\u5e76\u4e00\u6b21 \u8fde\u901a\u5757\u4e2a\u6570\u51cf\u4e00\n\n\n```delphi\n\nvar n,m,i,x,y,k,j,crt,lb:longint;\n    b,flag,f,tail:array[0..800000]of longint;\n    a:array[0..800000]of record\n                           p1,p2,front:longint;\n                         end;\nfunction gfa(u:longint):longint;//\u5bfb\u627e\u6839\u8282\u70b9\nbegin\n    if f[u]=u then exit(u);     //f\u4e3a\u7236\u8282\u70b9\n    f[u]:=gfa(f[u]);\n    exit(f[u]);\nend;\nprocedure union(u,v:longint);   //\u5408\u5e76\nvar fu,fv:longint;\nbegin\n    fu:=gfa(u);fv:=gfa(v);\n    if fu<>fv then begin f[fu]:=fv;dec(crt);end;\nend;\nbegin\n    readln(n,m);\n    for i:=0 to n-1 do f[i]:=i;//\u5c06\u6bcf\u4e2a\u7684\u6839\u8282\u70b9\u521d\u59cb\u5316\u4e3a\u81ea\u8eab\n    for i:=1 to m do\n    begin\n        readln(x,y);   \n        a[2*i-1].p1:=x;a[2*i-1].p2:=y;a[2*i-1].front:=tail[x];tail[x]:=2*i-1;\n        //2*i-1\u8bb0\u5f55\u4ee5x\u4e3a\u5173\u952e\u5b57\u7684\u8fb9\n        a[2*i].p1:=y;a[2*i].p2:=x;a[2*i].front:=tail[y];tail[y]:=2*i;\n        //2*i\u8bb0\u5f55\u4ee5y\u4e3a\u5173\u952e\u5b57\u7684\u8fb9\n    end;\n    readln(k);\n    for i:=1 to k do\n    begin\n        readln(b[i]);//\u5c06\u8981\u6467\u6bc1\u7684\u661f\u7403\u5e8f\u53f7\u5b58\u5165b\u6570\u7ec4\n        flag[b[i]]:=1;//\u6700\u540e\u8be5\u661f\u7403\u4e3a\u88ab\u5360\u9886\u72b6\u6001\n    end;\n    crt:=n-k;//\u8fde\u901a\u5757\u4e2a\u6570\n    for i:=1 to m do //\u6240\u6709\u6700\u540e\u4ecd\u672a\u88ab\u5360\u9886\u7684\u661f\u7403\u5408\u5e76\n        if (flag[a[i*2-1].p1]=0)and(flag[a[i*2-1].p2]=0) then\n            union(a[i*2-1].p1,a[i*2-1].p2);\n    b[k+1]:=crt;\n    for i:=k downto 1 do  //\u5bf9\u6bcf\u4e00\u4e2a\u88ab\u5360\u9886\u7684\u661f\u7403\u4f9d\u6b21\u6062\u590d\n    begin\n        inc(crt);\n        lb:=tail[b[i]];    \n        flag[b[i]]:=0;  //\u6062\u590db[i]\n        repeat  //\u4ee5b[i]\u4e3a\u5173\u952e\u5b57\u5f80\u524d\u627e\n            if flag[a[lb].p2]=0 then union(a[lb].p1,a[lb].p2);\n            lb:=a[lb].front;\n        until lb=0;\n        b[i]:=crt;  //\u6b64\u65f6b[i]\u6ca1\u6709\u7528\u5904\u4e86 \u53ef\u4ee5\u5c06\u7ed3\u679c\u5b58\u5165b[i] \n    end;\n    for i:=1 to k+1 do\n        writeln(b[i]);\nend.\n\n```",
        "postTime": 1453949720,
        "uid": 8369,
        "name": "YZ\u4eae\u6676\u6676",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1197 \u3010[JSOI2008]\u661f\u7403\u5927\u6218\u3011"
    }
]