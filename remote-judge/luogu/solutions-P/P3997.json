[
    {
        "content": "\u663e\u7136\u4e00\u4efd\u533a\u57df\u7684\u8d21\u732e\u4e3a\u8986\u76d6\u5176\u4e0a\u7684\u6247\u5f62\u534a\u5f84\u7684\u7b2ck\u5927\u7684\u5e73\u65b9\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6309\u6247\u5f62\u7684\u534a\u5f84\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c \u6bcf\u6b21\u7b49\u4e8e\u4e00\u4e2a\u533a\u95f4\u8d4b\u503c\u7684\u64cd\u4f5c\uff0c  \u5982\u679c\u4e00\u4e2a\u6bb5\u88ab\u8986\u76d6k\u6b21\u5c31\u4ea7\u751f\u8d21\u732e\u3002\uff08\u8c8c\u4f3c\u6bd4\u626b\u63cf\u7ebf\u5e38\u6570\u66f4\u5c0f\uff0c \u800c\u4e14\u8fd8\u597d\u5199...~~\u8c8c\u4f3c\u7a81\u7136rk1\u4e86\uff1f\uff1f~~\uff09\n\n\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u6700\u5927\u6700\u5c0f\u503c\u5224\u65ad\u662f\u5426\u5e94\u8be5\u9012\u5f52\u8ba1\u7b97\u3002 \u53e6\u5916\uff0c \u5c06\u8d21\u732e\u8fc7\u7684\u533a\u95f4\u7684size\u8d4b\u503c\u4e3a0\uff0c \u907f\u514d\u91cd\u590d\u8ba1\u7b97\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n    #include <cstdio>\n    #include <cstring>\n    #include <cmath>\n    #include <cctype>\n    #include <algorithm>\n    #include <cstdlib>\n    #define R register\n    #define IN inline\n    #define W while\n    #define gc getchar()\n    #define MX 2000500\n    #define ll long long\n    bool neg;\n    template <class T>\n    IN void in(T &x)\n    {\n    \tx = 0; R char c = gc;\n    \tfor (; !isdigit(c); c = gc)\n    \tif(c == '-') neg = true;\n    \tfor (;  isdigit(c); c = gc)\n    \tx = (x << 1) + (x << 3) + c - 48;\n    \tif(neg) neg = false, x = -x;\n    }\n    int q, seg, kth, tar; struct Node {int siz, mn, mx, tag;} tree[MX << 2];\n    struct opt {int h, lef, rig;} req[100005];\n    IN bool operator < (const opt &x, const opt &y) {return x.h > y.h;}\n    namespace SGT\n    {\n    \t#define ls (now << 1)\n    \t#define rs (now << 1 | 1)\n    \tIN void pushup(R int now)\n    \t{\n    \t\ttree[now].mn = std::min(tree[ls].mn, tree[rs].mn);\n    \t\ttree[now].mx = std::max(tree[ls].mx, tree[rs].mx);\n    \t\ttree[now].siz = tree[ls].siz + tree[rs].siz;\n    \t}\n    \tIN void pushdown(R int now)\n    \t{\n    \t\tif(tree[now].tag)\n    \t\t{\n    \t\t\tif(ls) tree[ls].mn += tree[now].tag, tree[ls].mx += tree[now].tag, tree[ls].tag += tree[now].tag;\n    \t\t\tif(rs) tree[rs].mn += tree[now].tag, tree[rs].mx += tree[now].tag, tree[rs].tag += tree[now].tag;\n    \t\t\ttree[now].tag = 0;\n    \t\t}\n    \t}\n    \tvoid build(R int now, R int lef, R int rig)\n    \t{\n    \t\tif(lef == rig) return tree[now].siz = 1, void();\n    \t\tint mid = lef + rig >> 1;\n    \t\tbuild(ls, lef, mid), build(rs, mid + 1, rig);\n    \t\tpushup(now);\n    \t}\n    \tint query(R int now, R int lef, R int rig, R int lb, R int rb)\n    \t{\n    \t\tif(lef > rig) return 0;\n    \t\tif(tree[now].mn >= kth) return 0;\n    \t\tif(lef >= lb && rig <= rb)\n    \t\t{\n    \t\t\tif(tree[now].mx < tar) {tree[now].tag += 1, tree[now].mx++, tree[now].mn++; return 0;}\n    \t\t\tif(tree[now].mn == tar) {int ret = tree[now].siz; tree[now].siz = 0; tree[now].mx = tree[now].mn = kth; return ret;}\n    \t\t\tint ret = 0, mid = lef + rig >> 1;\n    \t\t\tpushdown(now);\n    \t\t\tif(ls) ret += query(ls, lef, mid, lb, rb); if(rs) ret += query(rs, mid + 1, rig, lb, rb);\n    \t\t\tpushup(now); return ret;\n    \t\t}\n    \t\tint mid = lef + rig >> 1, ret = 0; pushdown(now);\n    \t\tif(lb <= mid) ret += query(ls, lef, mid, lb, rb);\n    \t\tif(rb > mid) ret += query(rs, mid + 1, rig, lb, rb);\n    \t\tpushup(now); return ret;\n    \t}\n    \t#undef ls\n    \t#undef rs\n    }\n    ll ans, sum;\n    int main(void)\n    {\n    \n    \tin(q), in(seg), in(kth); tar = kth - 1;\n    \tSGT::build(1, 1, seg << 1);\n    \tfor (R int i = 1; i <= q; ++i) in(req[i].h), in(req[i].lef), in(req[i].rig), req[i].lef += 1 + seg, req[i].rig += seg;\n    \tstd::sort(req + 1, req + 1 + q);\n    \tfor (R int i = 1; i <= q; ++i)\n    \t{\n    \t\tsum = 0;\n    \t\tif(req[i].rig < req[i].lef)\n    \t\t{\n    \t\t\tsum += SGT::query(1, 1, seg << 1, req[i].lef, seg << 1);\n    \t\t\tsum += SGT::query(1, 1, seg << 1, 1, req[i].rig);\n    \t\t\tans += 1ll * req[i].h * req[i].h * sum;\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t\tsum += SGT::query(1, 1, seg << 1, req[i].lef, req[i].rig);\n    \t\t\tans += 1ll * req[i].h * req[i].h * sum;\n    \t\t}\n    \t}\n    \tprintf(\"%lld\", ans);\n    }\n    \n```\n\n",
        "postTime": 1536758690,
        "uid": 67492,
        "name": "LPA20020220",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u591a\u9898\u89e3\u90fd\u662f\u7528\u626b\u63cf\u7ebf+\u6743\u503c\u7ebf\u6bb5\u6811/Splay\uff0c\u5728\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u53ea\u9700\u666e\u901a\u7ebf\u6bb5\u6811\u7684\u89e3\u6cd5\u3002\n\n\n------------\n### 1.\u5c06\u6247\u5f62\u8f6c\u5316\u4e3a\u7ebf\u6bb5\n\n\u9898\u76ee\u4e2d\u5c06\u6574\u4e2a\u5706**\u5206\u6210 $ 2m $ \u4e2a\u5c0f\u533a\u95f4**\uff0c\u6211\u4eec\u5c06\u5176\u4ece $ 1 $ \u5230 $ 2m $ \u7f16\u53f7\u3002\u4ee5\u4fbf\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u3002\n\n![](https://i.loli.net/2019/02/12/5c62a2acc70ac.png)\n\n### 2.\u786e\u5b9a\u7b2c $ k $ \u5927\u534a\u5f84\n\n\u9996\u5148\u5c06\u6247\u5f62\u6309\u534a\u5f84\u7531\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4e4b\u540e\u4f9d\u6b21\u8986\u76d6\u5230\u56fe\u4e0a\u3002\u6bcf\u6b21\u8986\u76d6\u5176\u5b9e\u5c31\u662f\u4e00\u6b21\u533a\u95f4\u4fee\u6539\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u5df2\u7ecf\u88ab\u4fee\u6539\u4e86 $ k $ \u6b21\uff0c\u4fbf\u4ee3\u8868\u5176\u5df2\u88ab $ k $ \u4e2a\u6247\u5f62\u8986\u76d6\u3002\u5f53\u524d\u6247\u5f62\u7684\u534a\u5f84\u4fbf\u662f\u7b2c $ k $ \u5927\u534a\u5f84\u3002\n\n### 3.\u786e\u5b9a\u8986\u76d6\u533a\u95f4\n\n1. $ a_1 < a_2 $ :\n\n \u6b64\u60c5\u51b5\u8f83\u4e3a\u7b80\u5355\uff0c $ a_1+m+1 $ \u4e3a\u533a\u95f4\u5de6\u7aef\u70b9\uff0c $ a_2+m $ \u4e3a\u533a\u95f4\u53f3\u7aef\u70b9\n\n2. $ a_1 > a_2 $ :\n\n \u6b64\u65f6\u9700\u8981\u4fee\u6539\u4e24\u4e2a\u533a\u95f4\uff0c\u5206\u522b\u662f $ a_1+m+1 $ \u5230 $ 2m $ \uff0c\u4ee5\u53ca $ 1 $ \u5230 $ a_2+m $\n \n```cpp\nfor i:=1 to n do begin\n  if a[i].x<=a[i].y then change(1,2*m,1,a[i].x+m+1,a[i].y+m,a[i].r)\n    else begin\n      change(1,2*m,1,a[i].x+m+1,2*m,a[i].r);\n      change(1,2*m,1,1,a[i].y+m,a[i].r);\n    end;       \n end;\n```\n\n### 4.\u8fdb\u884c\u533a\u95f4\u4fee\u6539\n\n\u4fee\u6539\u8fc7\u7a0b\u4e0d\u80fd\u50cf\u666e\u901a\u7684\u533a\u95f4\u52a0\u4e00\u6837\uff0c\u56e0\u4e3a\u5176\u61d2\u6807\u8bb0\u82e5\u6ca1\u5728\u51c6\u786e\u7684\u65f6\u95f4\u4e0b\u653e\uff0c\u4f1a\u9020\u6210\u7b54\u6848\u504f\u5c0f\u3002\n\n\u5982\u56fe\uff0c\u5f53 $ k=2 $ \uff0c\u6b64\u65f6\u5df2\u6709 $ DE $ \u533a\u95f4\u88ab\u8986\u76d6 $ 2 $ \u6b21\uff0c\u4f46\u7531\u4e8e\u7ebf\u6bb5\u6811\u61d2\u6807\u8bb0\u672a\u4e0b\u653e\uff0c\u5c31\u65e0\u6cd5\u7edf\u8ba1\u7b54\u6848\u3002\n\n![](https://i.loli.net/2019/02/12/5c62a5c633ea1.png)\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u65b9\u6cd5\u6765\u5224\u65ad\u61d2\u6807\u8bb0\u4e0b\u653e\u65f6\u95f4\u3002\n\n```cpp\n   tree,tree_max,p,q:array[0..8000005]of int64;\n   tf:array[0..8000005]of boolean;\n```\n\n$ tree[i] $ \u7edf\u8ba1\u8986\u76d6\u6b21\u6570\u7684\u7ebf\u6bb5\u6811\n\n$ treemax[i] $ \u8bb0\u5f55\u5f53\u524d\u533a\u95f4\u5185\uff0c\u6700\u591a\u5904\u6709\u591a\u5c11\u4e2a\u6247\u5f62\u8986\u76d6\n\n$ p[i] $ \u61d2\u6807\u8bb0\n\n$ q[i] $ \u5f53\u524d\u533a\u95f4\u5185\uff0c\u5df2\u6709\u591a\u5c11\u4e2a\u5c0f\u533a\u95f4\u7edf\u8ba1\u8fc7\u7b54\u6848\n\n$ tf[i] $ \u5f53\u524d\u533a\u95f4\u662f\u5426\u5168\u90e8\u5c0f\u533a\u95f4\u90fd\u7edf\u8ba1\u8fc7\u7b54\u6848\n\n\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u5f53\u533a\u95f4 $ t $ \u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u82e5\u533a\u95f4 $ t $ \u672a\u5904\u7406\uff0c\u5c31\u5c06 $ tree[t] \\ ,\\  treemax[t] \\ ,\\  p[t] $ \u52a0 $ 1 $ \uff0c\u5982\u679c $ tree[t]>=k $ ,\u5c31\u7edf\u8ba1\u7b54\u6848\uff0c\u5e76\u5c06 $ tf[t] $ \u6807\u8bb0\u4e3a\u5df2\u5904\u7406\u3002\u82e5\u533a\u95f4 $ t $ \u5df2\u5904\u7406\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u3002\u5f53\u533a\u95f4$ t $ \u672a\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u800c $ treemax[t]+p[t]>=k $ ,\u5c31\u5c06\u61d2\u6807\u8bb0\u4e0b\u653e\u3002\n\n```cpp\nprocedure change(l,r,t,x,y,o:longint);     //o\u4e3a\u534a\u5f84\nvar mid:longint;\nbegin\n  if tf[t]=true then exit;\n  if q[t]=r-l+1 then begin     //\u6b64\u533a\u95f4\u6240\u6709\u5c0f\u533a\u95f4\u7686\u5904\u7406\u8fc7\uff0c\u76f8\u5f53\u4e8e\u6b64\u533a\u95f4\u5904\u7406\u8fc7\n    tf[t]:=true;\n    exit;\n  end;\n  if (x<=l) and (y>=r) then begin\n    inc(tree[t]);\n    inc(tree_max[t]);\n    inc(p[t]);\n    if tree[t]>=k then begin\n      tf[t]:=true;\n      inc(ans,o*o*(r-l+1-q[t]));   //\u8ba1\u7b97\u7b54\u6848\n      q[t]:=r-l+1;\n      tree_max[t]:=0;\n      exit;\n    end;\n    if tree_max[t]+p[t]>=k then down(l,r,t,o);\n    exit;\n  end;\n  mid:=(l+r) shr 1;\n  down(l,r,t,o);\n  if x<=mid then change(l,mid,t shl 1,x,y,o);\n  if y>=mid+1 then change(mid+1,r,t shl 1 + 1,x,y,o);\n  q[t]:=q[t shl 1]+q[t shl 1 + 1];\n  tree_max[t]:=max(tree_max[t],max(tree_max[t shl 1],tree_max[t shl 1 + 1]));\nend;\n```\n\n\u4f46\u4e0d\u540c\u4e8e\u4e00\u822c\u7ebf\u6bb5\u6811\uff0c\u61d2\u6807\u8bb0\u4e0d\u662f\u4e0b\u653e\u4e00\u5c42\uff0c\u800c\u662f\u76f4\u63a5\u4e0b\u653e\u5230\u53f6\u8282\u70b9\uff0c\u5e76\u4e14\u5728\u671f\u95f4\u4e5f\u8981\u7edf\u8ba1\u7b54\u6848\u3002\uff08\u8be6\u89c1\u7a0b\u5e8f\uff09\n\n```cpp\nprocedure down(l,r,t,o:longint);\nvar mid:longint;\nbegin\n  if tf[t]=true then exit;\n  if q[t]=r-l+1 then begin\n    tf[t]:=true;\n    exit;\n  end;\n  if tree[t]>=k then begin\n    tf[t]:=true;\n    inc(ans,o*o*(r-l+1-q[t]));\n    q[t]:=r-l+1;\n    tree_max[t]:=0;\n    exit;\n  end;\n  if l=r then exit;\n  if p[t]<>0 then begin\n    mid:=(l+r) shr 1;\n    inc(tree[t shl 1],p[t]);\n    inc(tree[t shl 1 + 1],p[t]);\n    inc(tree_max[t shl 1],p[t]);\n    inc(tree_max[t shl 1 + 1],p[t]);\n    inc(p[t shl 1],p[t]);\n    inc(p[t shl 1 + 1],p[t]);\n    p[t]:=0;\n    if tree_max[t shl 1]+p[t]>=k then down(l,mid,t shl 1,o);\n    if tree_max[t shl 1 + 1]+p[t]>=k then down(mid+1,r,t shl 1 + 1,o);\n    q[t]:=q[t shl 1]+q[t shl 1 + 1];\n  end;\nend;\n```\n\n### 5.\u5b8c\u6574\u7a0b\u5e8f\n\n```cpp\nprogram project1;\ntype tp=record\n  x,y,r:int64;\nend;\n\nvar\n   tree,tree_max,p,q:array[0..8000005]of int64;\n   tf:array[0..8000005]of boolean;\n   a:array[0..100005]of tp;\n   n,m,k,ans:int64;\n\nfunction max(a,b:int64):int64;\nbegin\n  if a>b then exit(a) else exit(b);\nend;\n\nprocedure re;\nvar i:longint;\nbegin\n  for i:=1 to n do read(a[i].r,a[i].x,a[i].y);\nend;\n\nprocedure qsort(l,r:longint);\nvar i,j:longint;\n    mid:int64;\n    t:tp;\nbegin\n  i:=l;\n  j:=r;\n  mid:=a[(i+j) shr 1].r;\n  repeat\n    while a[i].r>mid do inc(i);\n    while a[j].r<mid do dec(j);\n    if i<=j then begin\n      t:=a[i];\n      a[i]:=a[j];\n      a[j]:=t;\n      inc(i);\n      dec(j);\n    end;\n  until i>j;\n  if i<r then qsort(i,r);\n  if l<j then qsort(l,j);\nend;\n\nprocedure down(l,r,t,o:longint);\nvar mid:longint;\nbegin\n  if tf[t]=true then exit;\n  if q[t]=r-l+1 then begin\n    tf[t]:=true;\n    exit;\n  end;\n  if tree[t]>=k then begin\n    tf[t]:=true;\n    inc(ans,o*o*(r-l+1-q[t]));\n    q[t]:=r-l+1;\n    tree_max[t]:=0;\n    exit;\n  end;\n  if l=r then exit;\n  if p[t]<>0 then begin\n    mid:=(l+r) shr 1;\n    inc(tree[t shl 1],p[t]);\n    inc(tree[t shl 1 + 1],p[t]);\n    inc(tree_max[t shl 1],p[t]);\n    inc(tree_max[t shl 1 + 1],p[t]);\n    inc(p[t shl 1],p[t]);\n    inc(p[t shl 1 + 1],p[t]);\n    p[t]:=0;\n    if tree_max[t shl 1]+p[t]>=k then down(l,mid,t shl 1,o);\n    if tree_max[t shl 1 + 1]+p[t]>=k then down(mid+1,r,t shl 1 + 1,o);\n    q[t]:=q[t shl 1]+q[t shl 1 + 1];\n  end;\nend;\n\nprocedure change(l,r,t,x,y,o:longint);\nvar mid:longint;\nbegin\n  if tf[t]=true then exit;\n  if q[t]=r-l+1 then begin\n    tf[t]:=true;\n    exit;\n  end;\n  if (x<=l) and (y>=r) then begin\n    inc(tree[t]);\n    inc(tree_max[t]);\n    inc(p[t]);\n    if tree[t]>=k then begin\n      tf[t]:=true;\n      inc(ans,o*o*(r-l+1-q[t]));\n      q[t]:=r-l+1;\n      tree_max[t]:=0;\n      exit;\n    end;\n    if tree_max[t]+p[t]>=k then down(l,r,t,o);\n    exit;\n  end;\n  mid:=(l+r) shr 1;\n  down(l,r,t,o);\n  if x<=mid then change(l,mid,t shl 1,x,y,o);\n  if y>=mid+1 then change(mid+1,r,t shl 1 + 1,x,y,o);\n  q[t]:=q[t shl 1]+q[t shl 1 + 1];\n  tree_max[t]:=max(tree_max[t],max(tree_max[t shl 1],tree_max[t shl 1 + 1]));\nend;\n\nprocedure main;\nvar i:longint;\nbegin\n  for i:=1 to n do begin\n    if a[i].x<=a[i].y then change(1,2*m,1,a[i].x+m+1,a[i].y+m,a[i].r)\n      else begin\n        change(1,2*m,1,a[i].x+m+1,2*m,a[i].r);\n        change(1,2*m,1,1,a[i].y+m,a[i].r);\n      end;      \n  end;\n  writeln(ans);\nend;\n\nbegin\n  read(n,m,k);\n  re;\n  qsort(1,n);\n  main;\nend.\n\n```",
        "postTime": 1549970662,
        "uid": 24425,
        "name": "fysbb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "\u522b\u770b\u9898\u76ee\u8bf4\u7684\u7384\u4e4e\uff0c\u5176\u5b9e\u662f\u4e2a\u5e8f\u5217\u95ee\u9898\n\n\u8981\u6c42\u7ef4\u62a4 $2m$ \u4e2a\u96c6\u5408(multiset)\uff0c\u6267\u884c\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n- \u5bf9\u533a\u95f4 $[l,r]$ \u6bcf\u4e2a\u96c6\u5408\u4e2d\u63d2\u5165\u67d0\u4e2a\u6570\n\n- \u8bbe\u96c6\u5408\u6709 $n$ \u4e2a\u6570\uff0c\u6c42\u96c6\u5408 $n-k+1$ \u5927\n\n----\n\n\u90a3\u4e48\u663e\u7136\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u53ef\u4ee5\u7528splay\u505a\u5566\uff01\n\n\u7ef4\u62a4\u4e00\u4e2a\u5927\u7684splay\n\n\u628a\u6bcf\u4e2a\u533a\u95f4$[l,r]$\u63d2\u5165\u6570\u5b57\u62c6\u6210\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n1.\u5728 $l$ \u63d2\u5165\n\n2.\u5728 $r+ 1$ \u5220\u9664\n\n\u6ce8\u610f\u7279\u5224 $l>r$ \u7684\u60c5\u51b5QAQ\uff0c\u8981\u62c6\u6210 $4$ \u4e2a\u64cd\u4f5c\n\n\u7136\u540e\u5bf9\u6240\u6709\u64cd\u4f5c\u6392\u5e8f\n\n\u5e8f\u5217\u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d\uff0c\u540c\u65f6\u5728\u5bf9\u5e94\u4f4d\u7f6e\u6267\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\n\n\u6bcf\u6b21\u90fd\u8981\u7edf\u8ba1\u7b54\u6848\uff08\u67e5 $n-k+1$ \u5927\uff09\uff0c\u6ce8\u610f\u7279\u5224\u6570\u7684\u6570\u91cf\u6bd4 $n-k+1$ \u8fd8\u5c11\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u8d21\u732e\u4e3a 0\n\nsplay\u5199\u4e86\u5783\u573e\u56de\u6536\u6709\u70b9\u4e11\n\n\u901f\u5ea6\u8fd8\u884c\uff0c\u4f46\u662f\u6bd4\u4e0d\u8fc7\u6743\u503c\u7ebf\u6bb5\u6811\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#include<set>\n#include<queue>\n#include<algorithm>\n#include<cassert>\n\n#define rg register\n#define il inline\n#define MX (200000 + 50)\n#define ll long long\n#define mod (210000)\n#define INF (21474836)\n//#define debug\n\nint read(){\n\trg char k = getchar();\n\tint x = 0 ,flag = 1;\n\twhile(k < '0' || k > '9'){\n\t\tif(k == '-')\tflag = -1;\n\t\tk = getchar();\n\t}\n\twhile(k >= '0' && k <= '9'){\n\t\tx = x * 10 + k - '0';\n\t\tk = getchar();\n\t}\n\treturn x * flag;\n}\n\nint n ,m ,k;\nnamespace SPLAY{\n\t#define lch(x) ch[x][0]\n\t#define rch(x) ch[x][1]\n\tint root;\n\tint trash[MX * 2] ,top = 0 ,in[mod + 5];\n\tint ch[mod][2] ,fa[mod] ,size[mod] ,key[mod];\n\tint cnt[mod];\n\tint get(int x){return x == ch[fa[x]][1];}\n\tint Nroot(int x){return get(x) || x == ch[fa[x]][0];}\n\til void pushup(int x){\n\t\tsize[x] = cnt[x];\n\t\tif(lch(x))\tsize[x] += size[lch(x)];\n\t\tif(rch(x))\tsize[x] += size[rch(x)];\n\t}\n\til void rotate(int x){\n\t\tint f = fa[x] ,gf = fa[f] ,which = get(x) ,W = ch[x][!which];\n\t\tif(gf)\tch[gf][ch[gf][1] == f] = x;\n\t\tch[x][!which] = f;\n\t\tch[f][which] = W;\n\t\tif(W)\tfa[W] = f;\n\t\tfa[f] = x ,fa[x] = gf;\n\t\tpushup(f);\n\t\tpushup(x);\n\t}\n\tvoid splay(int x ,int goal = 0){\n\t\tint f;\n\t\twhile((f = fa[x]) != goal){\n\t\t\tif(fa[f] != goal)\trotate(get(x) == get(f) ? f : x);\n\t\t\trotate(x);\n\t\t}if(!goal)\troot = x;\n\t\tpushup(x);\n\t}\n\tvoid insert(int val){\n\t\t#ifdef debug\n\t\t\tprintf(\"insert %d\\n\" ,val);\n\t\t#endif\n\t\tint now = root ,f = 0;\n\t\twhile(now && key[now] != val){\n\t\t\tf = now;\n\t\t\tnow = ch[now][val > key[now]];\n\t\t}\n\t\tif(now){\n\t\t\t++cnt[now];\n\t\t\tpushup(now);\n\t\t\tpushup(f);\n\t\t\treturn splay(now);\n\t\t}\n\t\tnow = trash[top--];\n\t\tsize[now] = cnt[now] = 1;\n\t\tch[now][0] = ch[now][1] = 0;\n\t\tkey[now] = val ,fa[now] = f;\n\t\tif(f)\tch[f][val > key[f]] = now ,pushup(f);\n\t\tsplay(now);\n\t}\n\tint Kth(int rank){\n\t\tint now = root;\n\t\tif(rank <= 1)\treturn 0;\n\t\twhile(now){\n\t\t\tif(lch(now) && size[lch(now)] >= rank)\tnow = lch(now);\n\t\t\telse{\n\t\t\t\tint tmp = cnt[now] + (lch(now) ? size[lch(now)] : 0);\n\t\t\t\trank -= tmp;\n\t\t\t\tif(rank <= 0)\treturn now;\n\t\t\t\tnow = rch(now);\n\t\t\t}\n\t\t}\n\t}\n\tint find(int val){\n\t\tint now = root;\n\t\twhile(key[now] != val){\n\t\t\tif(key[now] > val)\tnow = lch(now);\n\t\t\telse\tnow = rch(now);\n\t\t}\n\t\treturn now;\n\t}\n\tint pre(int x){\n\t\tx = lch(x);\n\t\twhile(rch(x))\tx = rch(x);\n\t\treturn x;\n\t}\n\tint nxt(int x){\n\t\tx = rch(x);\n\t\twhile(lch(x))\tx = lch(x);\n\t\treturn x;\n\t}\n\tvoid del(int val){\n\t\t#ifdef debug\n\t\t\tprintf(\"delete %d\\n\" ,val);\n\t\t#endif\n\t\tint aim = find(val);\n\t\tsplay(aim);\n\t\tint PRE = pre(aim) ,NXT = nxt(aim);\n\t\tsplay(PRE ,0);\n\t\tsplay(NXT ,PRE);\n\t\tif(cnt[aim] > 1){\n\t\t\t--cnt[aim];\n\t\t\tpushup(aim);\n\t\t\tpushup(NXT);\n\t\t\tpushup(PRE);\n\t\t\tsplay(aim);\n\t\t}\n\t\telse{\n\t\t\ttrash[++top] = aim;\t// \u5783\u573e\u56de\u6536\uff0c\u4ea4\u6613\u81ea\u7531\n\t\t\tch[NXT][0] = fa[aim] = 0;\n\t\t\tsize[aim] = cnt[aim] = 0;\n\t\t\tpushup(NXT);\n\t\t\tpushup(PRE);\n\t\t}\n\t}\n}using namespace SPLAY;\n\nstruct opt{\n\tint type ,pos ,val;\n\tbool operator <(const opt &B)const{\n\t\treturn pos < B.pos;\n\t}\n}op[MX * 2];\n\nll Ans ,ccnntt = 1;\nint main(){\n\tn = read(); m = read(); k = read();\n\tfor(int i = 1 ,r ,s ,t ; i <= n ; ++i){\n\t\tr = read(); s = read() + m + 1 ; t = read() + m + 1;\n\t\t#ifdef debug\n\t\t//\tprintf(\"%d %d %d\\n\" ,r ,s ,t);\n\t\t#endif\n\t\t//  assert(r != 34448);\n\t\tif((s == 2 * m + 1 && t == 1))\tcontinue;\n\t\tif(s < t){\n\t\t\top[ccnntt * 2 - 1] = (opt){1 ,s ,r};\n\t\t\top[ccnntt * 2] = (opt){0 ,t ,r};\n\t\t\t++ccnntt;\n\t\t}\n\t\telse{\n\t\t\tif(t != 1){\n\t\t\t\top[ccnntt * 2 - 1] = (opt){1 ,1 ,r};\n\t\t\t\top[ccnntt * 2] = (opt){0 ,t ,r};\n\t\t\t\t++ccnntt;\n\t\t\t}\n\t\t\top[ccnntt * 2 - 1] = (opt){1 ,s ,r};\n\t\t\top[ccnntt * 2] = (opt){0 ,m * 2 + 1 ,r};\n\t\t\t++ccnntt;\n\t\t}\n\t}\n\t--ccnntt;\n\tfor(rg int i = 1 ; i <= 209000 ; ++i){\n\t\ttrash[++top] = 209000 - i + 1;\n\t}\n\tinsert(-INF);\n\tinsert(INF);\n\top[ccnntt * 2 + 1] = (opt){1111 ,m + m + 1 ,0};\n\tint l = 1;\n\tstd::sort(op + 1 ,op + ccnntt * 2 + 1);\n\tll tmp = 0 ,change;\n\tfor(rg int i = 1 ; i <= m * 2 ; ++i){\n\t\tchange = false;\t// \u5e38\u719f\u4f18\u5316\n\t\twhile(op[l].pos <= i){\n\t\t\tchange = true;\n\t\t\tif(op[l].type == 1)\tinsert(op[l++].val);\n\t\t\telse\tdel(op[l++].val);\n\t\t}\n\t\tif(change)\ttmp = key[Kth(size[root] - k)];\n\t\tAns += tmp * tmp;\n\t}\n\tprintf(\"%lld\\n\" ,Ans);\n\treturn 0;\n}\n```",
        "postTime": 1570267280,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "\u5f53\u65f6\u6559\u7ec3\u8bf4\u7ed9\u6211\u4eec $noip$ \u4fe1\u5fc3\u8d5b\uff0c\u7ed3\u679c\u627e\u5230\u4e86\u8fd9\u9898\uff0c\u5f53\u65f6\u8003\u573a\u4e0a\u624b\u6572 $splay$\uff0c$splay$ \u6ca1\u6572\u6302\uff0c\u4f46\u662f\u6ca1\u60f3\u5230 $l>r$ \u7684\u60c5\u51b5\uff0c$GG$\u3002\n\n\u8d5b\u540e\u6211\u5199\u4e86\u597d\u51e0\u79cd\u65b9\u6cd5\uff0c\u4f46\u662f\u73b0\u5728\u624d\u627e\u5230\u539f\u9898\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67d0\u4e9b\u65b9\u5f0f\u53ef\u5f97\u6bcf\u6b21\u5c31\u662f\u6c42\u76ee\u524d\u8986\u76d6\u7684\u7b2c $k$ \u5927\u3002\n\n\u628a\u539f\u6765\u7684\u8986\u76d6\u5dee\u5206\u4e00\u4e0b\uff0c\u82e5 $l\\leq r$ \u5c31\u5728 $l$ \u4f4d\u7f6e $+1$\uff0c$r+1$ \u4f4d\u7f6e $-1$\u3002\u5426\u5219\u5728 $1$ \u4f4d\u7f6e $+1$\uff0c$l+1$ \u4f4d\u7f6e $-1$\uff0c$r$ \u7684\u4f4d\u7f6e $+1$\u3002\n\n\u64cd\u4f5c\u5c31\u662f\u63d2\u5165\uff0c\u5220\u9664\uff0c\u627e\u7b2c $k$ \u5927\uff0c\u6211\u8fd9\u91cc\u4ecb\u7ecd\u4e09\u79cd\u65b9\u6cd5\n\n1\u3001$O(n\\log^2 n)$ \u6811\u72b6\u6570\u7ec4+\u4e8c\u5206\uff0c\u5e38\u6570\u5de8\u5c0f\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=1000000+10;\nint n,m,k,R[maxn],c[maxn];ll ans;\nvector<int> in[maxn<<1],out[maxn<<1];\n\ninline int read(){\n    register int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return (f==1)?x:-x;\n}\n\nint lowbit(int x){return x & -x;}\nvoid add(int x,int y){\n    for(;x<maxn;x+=lowbit(x)) \n        c[x]+=y;\n}\nint sum(int x){\n    int ans=0;\n    for(;x;x-=lowbit(x)) \n        ans+=c[x];\n    return ans;\n}\nint findkth(int k){\n    int l=1,r=1000000,mid;\n    while(l<r){\n        mid=l+r>>1;\n        if(sum(mid)<k) l=mid+1;\n        else r=mid;\n    }\n    return l;\n}\n\nsigned main()\n{\n    m=read(),n=read(),k=read();\n    int l,r;\n    for(int i=1;i<=m;i++){\n    \tR[i]=read(),l=read(),r=read();\n    \tif(l<r){\n    \t\tl+=n+1;r+=n;\n        \tin[l].push_back(i);\n            out[r+1].push_back(i);\t\n        }\n    \telse {\n    \t\tswap(l,r);\n    \t\tl+=n;r+=n+1;\n    \t\tin[1].push_back(i);\n    \t\tout[l+1].push_back(i);\n    \t\tin[r].push_back(i);\n        }\n    }\n    int now=0,x;\n    for(int i=1;i<=2*n;i++){\n        for(int j=0;j<in[i].size();j++)\n            add(R[in[i][j]],1);\n        for(int j=0;j<out[i].size();j++)\n            add(R[out[i][j]],-1);\n        now+=in[i].size()-out[i].size();\n        if(now>=k){\n            x=findkth(now-k+1);\n            ans+=(ll)x*x;\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n2\u3001$O(n\\log n)$ $fhq\\ treap$ \u5e38\u6570\u9002\u4e2d\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=1000000+10;\nint ch[maxn][2],key[maxn],siz[maxn],val[maxn];\nint m,n,k,R[maxn],rt,sz,seed=233;ll ans;\nvector<int> in[maxn<<1],out[maxn<<1];\n\ninline int read(){\n    register int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return (f==1)?x:-x;\n}\n\nint Rand(){\n    return seed=(int)(1561112ll*seed%2147483647);\n}\nint newnode(int v){\n    key[++sz]=Rand();\n    val[sz]=v;\n    siz[sz]=1;\n    ch[sz][0]=ch[sz][1]=0;\n    return sz;\n}\n\nvoid update(int x){\n    siz[x]=siz[ch[x][0]]+siz[ch[x][1]]+1;\n}\n\nvoid split(int x,int &a,int &b,int v){\n    if(x==0){\n        a=b=0;\n        return ;\n    }\n    if(val[x]<=v) a=x,split(ch[x][1],ch[a][1],b,v);\n    else b=x,split(ch[x][0],a,ch[b][0],v);\n    update(x);\n}\n\nvoid merge(int &x,int a,int b){\n    if(a==0||b==0){\n        x=a+b;\n        return ;\n    }\n    if(key[a]<key[b]) x=a,merge(ch[x][1],ch[a][1],b);\n    else x=b,merge(ch[x][0],a,ch[b][0]);\n    update(x);\n}\n\nvoid insert(int v){\n    int x=0,y=0,z=newnode(v);\n    split(rt,x,y,v);\n    merge(x,x,z);\n    merge(rt,x,y);\n}\n\nvoid del(int v){\n    int x=0,y=0,z=0;\n    split(rt,x,y,v);\n    split(x,x,z,v-1);\n    merge(z,ch[z][0],ch[z][1]);\n    merge(x,x,z);\n    merge(rt,x,y);\n}\n\nint getkth(int x,int k){\n    while(siz[ch[x][0]]+1!=k){\n        if(siz[ch[x][0]]>=k) x=ch[x][0];\n        else k-=siz[ch[x][0]]+1,x=ch[x][1];\n    }\n    return val[x];\n}\n\nint main()\n{\n    m=read(),n=read(),k=read();\n    int l,r;\n    for(int i=1;i<=m;i++){\n        R[i]=read(),l=read(),r=read();\n        if(l<r){\n            l+=n+1;r+=n;\n            in[l].push_back(i);\n            out[r+1].push_back(i);\n        }\n        else {\n            swap(l,r);\n            l+=n;r+=n+1;\n            in[1].push_back(i);\n            out[l+1].push_back(i);\n            in[r].push_back(i);\n        }\n    }\n    int now=0,x;\n    for(int i=1;i<=2*n;i++){\n        for(int j=0;j<in[i].size();j++)\n            insert(R[in[i][j]]);\n        for(int j=0;j<out[i].size();j++)\n            del(R[out[i][j]]);\n        now+=in[i].size()-out[i].size();\n        if(now>=k){\n            x=getkth(rt,now-k+1);\n            ans+=(ll)x*x;\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\n3\u3001$O(n\\log n)$ $splay$ \u5e38\u6570\u5de8\u5927\uff08\u8003\u573a\u6572\u7684\uff09\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=1000000+10;\nint n,m,k,R[maxn];ll ans;\nint ch[maxn][2],fa[maxn],siz[maxn],cnt[maxn],key[maxn];\nint sz,rt;\nvector<int> in[maxn<<1],out[maxn<<1];\n\ninline int read(){\n    register int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return (f==1)?x:-x;\n}\ninline void clear(int x){\n    ch[x][0]=ch[x][1]=fa[x]=siz[x]=cnt[x]=key[x]=0;\n}\ninline bool get(int x){\n    return ch[fa[x]][1]==x;\n}\ninline void update(int x){\n    if(x){\n        siz[x]=cnt[x];\n        if(ch[x][0]) siz[x]+=siz[ch[x][0]];\n        if(ch[x][1]) siz[x]+=siz[ch[x][1]];\n    }\n}\ninline void rotate(int x){\n    int y=fa[x],z=fa[y],k=get(x);\n    ch[y][k]=ch[x][k^1];fa[ch[y][k]]=y;\n    ch[x][k^1]=y;fa[y]=x;fa[x]=z;\n    if(z) ch[z][ch[z][1]==y]=x;\n    update(y);update(x);\n}\ninline void splay(int x){\n    for(int y;y=fa[x];rotate(x))\n        if(fa[y])\n            rotate((get(x)==get(y))?y:x);\n    rt=x;\n}\ninline void insert(int val){\n    if(rt==0){sz++;ch[sz][0]=ch[sz][1]=fa[sz]=0;rt=sz;siz[sz]=cnt[sz]=1;key[sz]=val;return;}\n    int x=rt,y=0;\n    while(1){\n        if(val==key[x]){cnt[x]++;update(x);update(y);splay(x);return;}\n        y=x;x=ch[x][key[x]<val];\n        if(x==0){\n            sz++;fa[sz]=y;\n            ch[y][key[y]<val]=sz;\n            ch[sz][0]=ch[sz][1]=0;\n            siz[sz]=cnt[sz]=1;\n            key[sz]=val;\n            update(y);\n            splay(sz);\n            return;\n        }\n    }\n}\ninline int find(int val){\n    int x=rt,ans=0;\n    while(1){\n        if(val<key[x]) x=ch[x][0];\n        else {\n            ans+=(ch[x][0]?siz[ch[x][0]]:0);\n            if(val==key[x]){\n                splay(x);return ans+1;\n            }\n            ans+=cnt[x];\n            x=ch[x][1];\n        }\n    }\n}\ninline int findkth(int val){\n    int x=rt,k;\n    while(1){\n        if(ch[x][0]&&val<=siz[ch[x][0]]) \n            x=ch[x][0];\n        else {\n            k=(ch[x][0]?siz[ch[x][0]]:0)+cnt[x];\n            if(val<=k) return key[x];\n            val-=k;x=ch[x][1];\n        }\n    }\n}\ninline int pre(){\n    int x=ch[rt][0];\n    while(ch[x][1]) x=ch[x][1];\n    return x;\n}\ninline void del(int val){\n    find(val);int x=rt;\n    if(cnt[rt]>1){cnt[rt]--;update(rt);return;}\n    if(!ch[rt][0]&&!ch[rt][1]){clear(rt);rt=0;return;}\n    if(!ch[rt][0]){rt=ch[x][1];fa[rt]=0;clear(x);return;}\n    else if(!ch[rt][1]){rt=ch[x][0];fa[rt]=0;clear(x);return;}\n    splay(pre());\n    ch[rt][1]=ch[x][1];\n    fa[ch[x][1]]=rt;\n    clear(x);update(rt);\n}\n\nint main()\n{\n    m=read(),n=read(),k=read();\n    int l,r;\n    for(int i=1;i<=m;i++){\n    \tR[i]=read(),l=read(),r=read();\n    \tif(l<r){\n    \t\tl+=n+1;r+=n;\n        \tin[l].push_back(i);\n            out[r+1].push_back(i);\t\n        }\n    \telse {\n    \t\tswap(l,r);\n    \t\tl+=n;r+=n+1;\n    \t\tin[1].push_back(i);\n    \t\tout[l+1].push_back(i);\n    \t\tin[r].push_back(i);\n        }\n    }\n    int now=0,x;\n    for(int i=1;i<=2*n;i++){\n        for(int j=0;j<in[i].size();j++)\n            insert(R[in[i][j]]);\n        for(int j=0;j<out[i].size();j++)\n            del(R[out[i][j]]);\n        now+=in[i].size()-out[i].size();\n        if(now>=k){\n            x=findkth(now-k+1);\n            ans+=(ll)x*x;\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1543548910,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "### \u5e73\u8861\u6811+\u626b\u63cf\u7ebf\n\n#### \u7528\u5e73\u8861\u6811\u7ef4\u62a4kth\n\u4e00\u4e2a\u89d2\u5ea6\u4e0a\u8986\u76d6k\u6b21\u6240\u80fd\u53d6\u5230\u7684\u6700\u5927\u534a\u5f84\u4fbf\u662f\u8be5\u89d2\u5ea6\u4e0a\u8986\u76d6\u7684\u6240\u6709\u534a\u5f84\u4e2d\u7684\u7b2ck\u5927\n\n\u6bd4\u5982\u89d2\u5ea62\u4e0a\u8986\u76d6\u7740\u534a\u5f84\u4e3a1926,817,666\u7684\u6247\u5f62\uff0c\u5219\u5f53k=2\u65f6\uff0c\u89d2\u5ea62\u6700\u5927\u80fd\u53d6\u5230817\n\n\u7ef4\u62a4\u7b2ck\u5927\uff0c\u60f3\u5230\u5e73\u8861\u6811\n\n#### \u6247\u5f62\u8f6c\u7ebf\u6bb5\n\n\u628a\u6bcf\u4e2a\u6247\u5f62\u770b\u4f5c2/4\u6761\u7ebf\u6bb5\uff0c\u6bcf\u6761\u7ebf\u6bb5\u7684\u957f\u5ea6\u662f\u5b83\u7684\u534a\u5f84\n\n\u7528\u4e09\u5143\u7ec4(len,pos,tag)\u8868\u793a\u4e00\u6761\u7ebf\u6bb5\uff0clen\u5c31\u662f\u7ebf\u6bb5\u7684\u957f\u5ea6\u4e5f\u5c31\u662f\u5b83\u6240\u5bf9\u5e94\u7684\u6247\u5f62\u7684\u534a\u5f84\uff0cpos\u8868\u793a\u8be5\u7ebf\u6bb5\u6240\u5904\u7684\u89d2\u5ea6,tag=0\u8868\u793a\u8be5\u7ebf\u6bb5\u8981\u88ab\u63d2\u5165\uff0ctag=1\u8868\u793a\u8981\u4ece\u5e73\u8861\u6811\u4e2d\u5220\u9664\u4e00\u6761\u957f\u5ea6\u4e3alen\u7684\u7ebf\u6bb5\n\n\u628alen\u5f53\u4f5c\u5e73\u8861\u6811\u7684\u6392\u5e8f\u539f\u5219\uff0c\u628apos\u4f5c\u4e3a\u7ebf\u6bb5\u6392\u5e8f\u7684\u539f\u5219\uff0c\u628a\u6240\u6709\u7684\u7ebf\u6bb5\u5b58\u4e0b\u6765\u540e\uff0c\u6309\u7167\u6781\u5750\u6807\u89d2\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n#### \u8d1f\u89d2\u5ea6\u8f6c\u6b63\n\u90a3\u4e48\u6709\u8d1f\u89d2\u5ea6\uff0c\u8f6c\u6210\u6b63\u89d2\u5ea6\u66f4\u597d\u505a\uff0c\u5982\u56fe\u6240\u793a\u662f\u5f53m=8\u65f6\u7684\u6781\u5750\u6807\u7cfb\n\n![](https://cdn.luogu.com.cn/upload/pic/46377.png)\n\n0\u540c\u65f6\u53c8\u53ef\u4ee5\u662f2m\uff0c\u4e00\u4e2a\u89d2\u5ea6p(p<0)\uff0c\u8f6c\u6210\u6b63\u540e\u4fbf\u662f2m+p\uff0c\u6bd4\u5982p=-3\uff0c\u5bf9\u5e94m=8\u65f62*8-3=13\n\n#### \u8003\u8651\u600e\u4e48\u628a\u6247\u5f62\u5206\u89e3\u6210\u7ebf\u6bb5\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4ee5len\u4e3a\u534a\u5f84\uff0c\u4ece\u89d2\u5ea6l\u8986\u76d6\u5230r\u7684\u6247\u5f62\uff0c\u9898\u76ee\u5e76\u6ca1\u6709\u4fdd\u8bc1l<r\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u4e00\u6ce2\u5206\u7c7b\u8ba8\u8bba\n\n**1.l==r** (\u597d\u50cf\u6570\u636e\u6ca1\u6709\u8fd9\u79cd\u60c5\u51b5)\n\n\u8fd9\u79cd\u60c5\u51b5\u4fbf\u662f\u4e00\u4e2a\u5706\uff0c\u8f6c\u4e3a(len,0,0)\u548c(len,2m,1)\u5373\u53ef\uff0c\u8868\u793a\u4e00\u4e2a\u5706\n\n**2.l<r\uff0c\u4e14l\u22600,r\u22600**\n\n##### 1)l>0,r>0\n\n![](https://cdn.luogu.com.cn/upload/pic/46380.png)\n\u76f4\u63a5\u8f6c\u4e3a(len,l,0),(len,r,1)\u5373\u53ef\n\n##### 2)l>0,r<0\n\n\u4e0d\u6ee1\u8db3l<r\u7684\u524d\u63d0\uff0c\u820d\u53bb\n\n##### 3)l<0,r>0\n\n![](https://cdn.luogu.com.cn/upload/pic/46384.png)\n\n\u6b64\u65f6\u8be5\u6247\u5f62\u4f1a\u8986\u76d6\u5230\u89d2\u5ea60\uff0c\u4e5f\u5c31\u662fl\u5bf9\u5e94\u7684\u6b63\u6570\u662f\u662f\u4e00\u4e2a>m\u7684\u6570\uff0cr\u5219<m\uff0c\u76f4\u63a5\u585e(len,l,0),(len,r,1)\u5219\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u4e3a\u626b\u63cf\u7ebf\u662f\u6309\u6781\u5750\u6807\u89d2\u5ea6\u4ece\u5c0f\u5230\u5927\u626b\u7684\uff0c\u800c\u8fd9\u6837\u585el\u4f1a\u88ab\u6392\u5728r\u540e\u9762\n\n\u6240\u4ee5\u8003\u8651\u4ee50\u89d2\u5ea6\u4e3a\u57fa\u51c6\uff0c\u628a\u8be5\u6247\u5f62\u5206\u5272\u4e3a[0,l],[0,r]\u4e24\u90e8\u5206\n\n\u5bf9\u4e8e0\u5230l\u7684\u8fd9\u4e00\u5757\uff0c\u5206\u89e3\u4e3a(len,2m+l,0),(len,2m,1)\n\n\u5bf9\u4e8e0\u5230r\u7684\u8fd9\u4e00\u5757\uff0c\u5206\u89e3\u4e3a(len,0,0),(len,r,1)\n\n##### 4)l<0,r<0\n\n![](https://cdn.luogu.com.cn/upload/pic/46385.png)\n\nl,r\u540c\u4e3a\u8d1f\uff0c\u8f6c\u62102m+l,2m+r\u5373\u53ef\n\n\u8f6c\u4e3a(len,2m+l,0),(len,2m+r,1)\n\n**3.l>r**\n\n##### 1)l>0,r>0\n\n![](https://cdn.luogu.com.cn/upload/pic/46386.png)\n\n\u540c\u6837\u5206\u5272\u6210\u4e24\u90e8\u5206\uff0c\u8f6c\u4e3a(len,l,0),(len,2m,1),(len,0,0),(len,r,1)\n\n##### 2)l>0,r<0\n\n![](https://cdn.luogu.com.cn/upload/pic/46387.png)\n\nr\u8f6c\u6b63\u53d8\u62102m+r\uff0c\u8f6c\u4e3a(len,l,0),(len,2m+r,1)\n\n##### 3)l<0,r>0\n\n\u4e0d\u6ee1\u8db3l>r\u7684\u524d\u63d0\uff0c\u820d\u53bb\n\n##### 4)l<0,r<0\n\n![](https://cdn.luogu.com.cn/upload/pic/46388.png)\n\n\u540c\u7406\u5206\u89e3\u4e3a(len,2m+l,0),(len,2m,1),(len,0,0),(len,2m+r,1)\n\n**4.l==0,r\u22600** (\u7531\u4e8e\u53ef\u80fd\u67090\u7684\u5b58\u5728\u5bfc\u81f4\u57282.3.\u7684\u65f6\u5019\u61d2\u5f97\u53bb\u60f3\u4ec0\u4e48\u5730\u65b9\u5199>=0\u4ec0\u4e48\u5730\u65b9\u5199>0\uff0c\u6240\u4ee5\u5e72\u8106\u628a\u67090\u7684\u5217\u51fa\u6765\u597d\u4e86)\n\n##### 1)r<0   (len,0,0),(len,2m+r,1)\n\n##### 2)r>0   (len,0,0),(len,r,1)\n\n**5.l\u22600,r==0**\n\n##### 1)l<0   (len,2m+l,0),(len,2m,1)\n\n##### 2)l>0   (len,l,0),(len,2m,1)\n\n#### \u5982\u4f55\u626b\u63cf\u7ebf\n\n\u6247\u5f62\u5206\u89e3\u6210\u7ebf\u6bb5\u4e86\u4e4b\u540e\uff0c\u6309\u7167pos\u4e3a\u5173\u952e\u5b57sort\u4e00\u4e0b\uff0c\u4ece\u5c0f\u5230\u5927\u904d\u5386\u4e00\u904d\n\n\u4e00\u4e2a\u534a\u5f84\u4e3ar\uff0c\u5706\u5fc3\u89d2\u4e3a\u03b1\u7684\u6247\u5f62\u7684\u6247\u5f62\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a**\u03b1*r\u00b2**\n\n\u5faa\u73af\u4e2d\u4e00\u5f00\u59cb\u5148\u7d2f\u8ba1\u7b54\u6848\uff1a**ans+=(\u5f53\u524d\u5e73\u8861\u6811\u4e2d\u7b2ck\u5927\u957f\u5ea6)\u00b2*(s[i].pos-s[i-1].pos)**\uff0c\u8868\u793a\u524d\u4e00\u4e2a\u4f4d\u7f6e\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u533a\u57df\u7684\u9762\u79ef\n\n\u7136\u540e\u770b\u5f53\u524d\u7ebf\u6bb5\u7684\u6807\u8bb0tag\n\ntag\u4e3a0\u65f6\u5f80\u5e73\u8861\u6811\u4e2d\u63d2\u5165\u7ebf\u6bb5\u957flen\n\ntag\u4e3a1\u65f6\u5728\u5e73\u8861\u6811\u4e2d\u5220\u53bb\u4e00\u4e2alen\n\n#### \u4ee3\u7801\uff1a\u6307\u9488Splay(\u8bb0\u5f97\u5904\u7406\u597dlong long)\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::sort;\ntemplate<class type>inline void read(type &in)\n{\n    in=0;char ch=getchar();short fh=1;\n    while (ch<48||ch>57)fh=ch=='-'?-1:fh,ch=getchar();\n    while (ch>47&&ch<58)in=(in<<3)+(in<<1)+ch-48,ch=getchar();\n    in*=fh;\n}\ntypedef long long ll;\nconst int N=1e5+10;\nclass Splay\n{\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\tint size,value,cnt;\n\t\t\ttree *son[2],*fa;\n\t\t\tinline const void pushup()\n\t\t\t{\n\t\t\t\tsize=son[0]->size+cnt+son[1]->size;\n\t\t\t}\n\t\t\tinline const bool identity()\n\t\t\t{\n\t\t\t\treturn fa->son[1]==this;\n\t\t\t}\n\t\t}*null,*root,memory_pool[N<<2],*tail,*rec[N<<2];\n\t\tint top;\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\tnull->size=null->cnt=null->value=0;\n\t\t\tnull->son[0]=null->son[1]=null->fa=null;\n\t\t\troot=null;\n\t\t}\n\t\tinline tree *spawn(int key)\n\t\t{\n\t\t\ttree *p=top?rec[--top]:tail++;\n\t\t\tp->value=key;\n\t\t\tp->size=p->cnt=1;\n\t\t\tp->fa=p->son[0]=p->son[1]=null;\n\t\t\treturn p;\n\t\t}\n\t\tinline const void erase(tree *&p)\n\t\t{\n\t\t\trec[top++]=p;p=null;\n\t\t}\n\t\tinline const void connect(tree *p,tree *fa,bool which)\n\t\t{\n\t\t\tif (p!=null)p->fa=fa;\n\t\t\tif (fa!=null)fa->son[which]=p,fa->pushup();\n\t\t}\n\tprotected:\n\t\tinline const void rotate(tree *p)\n\t\t{\n\t\t\ttree *fa=p->fa;\n\t\t\tbool id=p->identity();\n\t\t\tconnect(p,fa->fa,fa->identity());\n\t\t\tconnect(p->son[id^1],fa,id);\n\t\t\tconnect(fa,p,id^1);\n\t\t}\n\t\tinline const void splay(tree *p)\n\t\t{\n\t\t\tfor (tree *fa;(fa=p->fa)!=null;rotate(p))\n\t\t\t\tif (fa->fa!=null)\n\t\t\t\t\trotate(p->identity()^fa->identity()?p:fa);\n\t\t\troot=p;\n\t\t}\n\t\tinline const void find(int key)\n\t\t{\n\t\t\ttree *now=root;\n\t\t\twhile (now->son[key<now->value]!=null&&now->value!=key)\n\t\t\t\tnow=now->son[key<now->value];\n\t\t\tsplay(now);\n\t\t}\n\t\tinline tree *precursor(tree *p)\n\t\t{\n\t\t\tsplay(p);\n\t\t\ttree *now=p->son[0];\n\t\t\twhile (now->son[1]!=null)now=now->son[1];\n\t\t\treturn now;\n\t\t}\n\tpublic:\n\t\tinline Splay(){init();}\n\t\tinline const void insert(int key)\n\t\t{\n\t\t\tif (root==null)return (void)(root=spawn(key));\n\t\t\ttree *now=root;\n\t\t\twhile (1)\n\t\t\t{\n\t\t\t\tif (now->value==key)\n\t\t\t\t\treturn now->cnt++,now->pushup(),splay(now);\n\t\t\t\ttree *fa=now;\n\t\t\t\tbool which=key<fa->value;\n\t\t\t\tnow=fa->son[which];\n\t\t\t\tif (now==null)\n\t\t\t\t\treturn now=spawn(key),connect(now,fa,which),splay(now);\n\t\t\t}\n\t\t}\n\t\tinline const void Delete(int key)\n\t\t{\n\t\t\tfind(key);tree *p=root;\n\t\t\tif (p->cnt>1)return p->cnt--,p->pushup();\n\t\t\tif (p->son[0]==null&&p->son[1]==null)return root=null,erase(p);\n\t\t\tif (p->son[0]==null)return (root=p->son[1])->fa=null,erase(p);\n\t\t\tif (p->son[1]==null)return (root=p->son[0])->fa=null,erase(p);\n\t\t\ttree *pre=precursor(p);splay(pre);connect(p->son[1],pre,1);erase(p);\n\t\t}\n\t\tinline const int findrank(int k)\n\t\t{\n\t\t\ttree *now=root;\n\t\t\twhile (1)\n\t\t\t\tif (k<=now->son[0]->size)now=now->son[0];\n\t\t\t\telse \n\t\t\t\t\tif ((k-=now->son[0]->size+now->cnt)<=0)\n\t\t\t\t\t\treturn now->value;\n\t\t\t\t\telse now=now->son[1];\n\t\t}\n\t\tinline const int size()\n\t\t{\n\t\t\treturn root->size;\n\t\t}\n}S;\nint n,m,k,cnt;\nll ans;\nstruct segment\n{\n\tint len,pos;bool tag;\n\tinline const bool operator<(const segment &p)const\n\t{\n\t\treturn pos<p.pos;\n\t}\n}s[N<<2];\ninline const void addseg(int len,int pos,bool tag)\n{\n\ts[++cnt].len=len;s[cnt].pos=pos;s[cnt].tag=tag;\n}\ninline const ll square(int x)\n{\n\treturn (ll)((ll)(x)*(ll)(x));\n}\nint main()\n{\n\tread(n);read(m);read(k);\n\tfor (int len,l,r,i=1;i<=n;i++)\n\t\tif (read(len),read(l),read(r),l==r)\n\t\t\taddseg(len,0,0),addseg(len,2*m,1);\n\t\telse\n\t\t\tif (!l||!r)\n\t\t\t\tif (!l)addseg(len,0,0),addseg(len,r<0?r+2*m:r,1);\n\t\t\t\telse addseg(len,l>0?l:2*m+l,0),addseg(len,2*m,1);\n\t\t\telse\n\t\t\t\tif (l<r)\n\t\t\t\t{\n\t\t\t\t\tif (l<0&&r>0)addseg(len,0,0),addseg(len,r,1),addseg(len,2*m+l,0),addseg(len,2*m,1);\n\t\t\t\t\tif (l>0&&r>0)addseg(len,l,0),addseg(len,r,1);\t\n\t\t\t\t\tif (l<0&&r<0)addseg(len,2*m+l,0),addseg(len,2*m+r,1);\n\t\t\t\t}\t\t\t\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (l<0&&r<0)addseg(len,2*m+l,0),addseg(len,2*m,1),addseg(len,0,0),addseg(len,2*m+r,1);\n\t\t\t\t\tif (l>0&&r<0)addseg(len,l,0),addseg(len,2*m+r,1);\n\t\t\t\t\tif (l>0&&r>0)addseg(len,l,0),addseg(len,2*m,1),addseg(len,0,0),addseg(len,r,1);\n\t\t\t\t}\n\tsort(s+1,s+cnt+1);\n\tfor (int i=1;i<=cnt;i++)\n\t{\n\t\tif (S.size()>=k)ans+=square(S.findrank(k))*(s[i].pos-s[i-1].pos);\n\t\tif (!s[i].tag)S.insert(s[i].len);\n\t\telse S.Delete(s[i].len);\n\t}\n\tif (S.size()>=k)ans+=square(S.findrank(k))*(s[cnt].pos-s[cnt-1].pos);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1544935098,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "## \u7ebf\u6bb5\u6811\n\n[\u535a\u5ba2\u9605\u8bfb](https://www.cnblogs.com/wljss/p/12658754.html)\n\n\u8003\u8651\u6bcf\u4e2a\u5c0f\u533a\u95f4\u7684\u7684\u8d21\u732e\uff0c\u663e\u7136\u662f\u53ea\u7528\u5230\u4e86\u8986\u76d6\u4e86\u8fd9\u4e2a\u5c0f\u533a\u95f4\u7684\u503c\u91cc\u9762\u7b2c $k$ \u5927\u3002\n\n\u5018\u82e5\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u8986\u76d6\u5f53\u524d\u533a\u95f4\u7684\u503c\u90fd\u6709\u591a\u5c11\u4e2a\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u7b2c $k$\u5927\u3002\n\n\u73b0\u5728\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5dee\u5206+\u7ebf\u6bb5\u6811\u4e0a\u4fee\u6539\u7684\u65b9\u6cd5\u6765\u5b8c\u6210\u5bf9\u5f53\u524d \u503c\u7684\u51fa\u73b0\u6b21\u6570 \u7684\u7ef4\u62a4\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#define lson (k<<1)\n#define rson ((k<<1)|1)\nusing namespace std;\nint n, m, k, tot, r, a, b, c;\nlong long ans;\nconst int N = 100010;\nint s[N << 2];\nstruct node\n{\n\tint x, y, k;\n} p[N << 2];\nint my(node a, node b) {return a.x < b.x;}\nvoid pushup(int k) {s[k] = s[lson] + s[rson];}\nvoid change(int k, int l, int r, int pos, int val)\n{\n\tif (l == r)\n\t{\n\t\ts[k] += val;\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif (pos <= mid)change(lson, l, mid, pos, val);\n\telse change(rson, mid + 1, r, pos, val);\n\tpushup(k);\n}\nint ask(int k, int l, int r, int v)\n{\n\tif (l == r)return l;\n\tint mid = (l + r) >> 1;\n\treturn v <= s[rson] ? ask(rson, mid + 1, r, v) : ask(lson, l, mid, v - s[rson]);\n}\nsigned main()\n{\n\tcin >> n >> m >> k;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%d%d%d\", &c, &a, &b); a += m; b += m; r = max(r, c);\n\t\tif (a <= b)p[++tot] = (node) {a, c, 1}, p[++tot] = (node) {b, c, -1};\n\t\telse p[++tot] = (node) {a, c, 1}, p[++tot] = (node) {2 * m, c, -1}, p[++tot] = (node) {0, c, 1}, p[++tot] = (node) {b, c, -1};\n\t}\n\tsort(p + 1, p + 1 + tot, my);\n\tfor (int i = 1; i <= tot; ++i)\n\t{\n\t\ta = ask(1, 0, r, k); ans += (long long)a * a * (p[i].x - p[i - 1].x);\n\t\tchange(1, 0, r, p[i].y, p[i].k);\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1586316047,
        "uid": 153843,
        "name": "wljss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u5806\u662f\u4e00\u4e2a\u597d\u4e1c\u897f\uff0c\u80fd\u5e72\u5f88\u591a\u4e8b\u3002\n\n### \u6b63\u8f68\n\u6b64\u9898\u65b9\u6cd5\u5f88\u591a\uff0c\u6211\u7528\u7684\u662f\u626b\u63cf\u7ebf+\u5806\u3002\u9996\u5148\u9898\u76ee\u628a\u5e73\u9762\u5206\u6210\u7b49\u5927\u76842m\u4e2a\u89d2\u5ea6\u3002\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u5c31\u662f\u6bcf\u4e2a\u89d2\u5ea6\u4e2d\u7b2ck\u5927\u7684\u88ab\u8986\u76d6\u7684\u6247\u5f62\u534a\u5f84\u7684\u5e73\u65b9\u52a0\u8d77\u6765\u7684\u548c\u3002\u6c42\u7b2ck\u5927\uff0c@zhengrunzhe\u60f3\u5230\u7684\u662f\u5e73\u8861\u6811\uff0c\u5176\u5b9e\u6ca1\u5fc5\u8981\uff0c\u4e24\u4e2a\u5806\u4e5f\u53ef\u4ee5\u89e3\u51b3\uff08\u6bd5\u7adf\u5806\u6bd4\u5e73\u8861\u6811\u597d\u6253\u592a\u591a\u4e86\uff09\u3002\n\n\u7b2c\u4e00\u4e2a\u5806\uff08\u4e0b\u79f0A\u5806\uff09\u7528\u6765\u50a8\u5b58\u524dk\u5927\u534a\u5f84\uff0c\u5e76\u4e14\u662f\u5c0f\u6839\u5806\uff0c\u8fd9\u6837\u5806\u9876\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\uff1b\u7b2c\u4e8c\u4e2a\u5806\uff08\u4e0b\u79f0B\u5806\uff09\u7528\u6765\u50a8\u5b58\u5176\u4ed6\u7684\uff0c\u662f\u5927\u6839\u5806\u3002\n\n**\u6bcf\u6b21\u52a0\u5165\u65b0\u5143\u7d20**\uff1a\n- \u5982\u679cA\u5806\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8ek\uff0c\u52a0\u5165A\u5806\u3002\n- \u5426\u5219\u5982\u679c\u65b0\u5143\u7d20\u5927\u4e8eA\u5806\u5806\u9876\u5143\u7d20\uff0cA\u5806\u5806\u9876\u5143\u7d20\u6362\u5230B\u5806\uff0c\u65b0\u5143\u7d20\u52a0\u5165A\u5806\u3002\n- \u5426\u5219\u52a0\u5165B\u5806\n\n**\u5220\u9664\u5143\u7d20**\uff1a\n- \u5982\u679c\u4e3aB\u5806\u5143\u7d20\u76f4\u63a5\u5220\u3002\n- \u5982\u679c\u4e3aA\u5806\u5143\u7d20\u5220\u9664\u4e4b\u540e\uff0c\u82e5B\u5806\u975e\u7a7a\uff0c\u5219B\u5806\u5806\u9876\u5143\u7d20\u6362\u5230A\u5806\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u63cf\u8ff0\u6247\u5f62\u65f6l\u53ef\u80fd\u5927\u4e8e\u7b49\u4e8er\uff0c\u8fd9\u4e2a\u95ee\u9898@zhengrunzhe\u8bb2\u7684\u5f88\u6e05\u695a\uff0c\u53ef\u4ee5\u6233[\u8fd9\u91cc](https://www.luogu.com.cn/blog/van/solution-p3997)\u770b\u3002\n\n## \u6ce8\u610f\n\u8ba9\u6211\u4eec\u7b97\u7b97\u7b54\u6848\u6709\u591a\u5927\uff1a $r^2*m$\u670916\u4f4d\uff0c\u4e0d\u5f00**long long**\u89c1\u7956\u5b97\uff01\n\n\u4ee3\u7801\u5c31\u4e0d\u53d1\u4e86\uff0c\u4f60\u4eec\u5199\u7684\u90fd\u6bd4\u6211\u597d~~\u521a\u8f6cc++\u7684\u849f\u84bb\u4e00\u679a\u554a~~\u3002",
        "postTime": 1585716990,
        "uid": 112921,
        "name": "zhimao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "\u79bb\u7ebf\u4e00\u6ce2\uff0c\u628a\u8be2\u95ee\u62c6\u6210\u5bf9\u591a\u91cd\u96c6\u5408\u7684\u64cd\u4f5c\uff1a\u9047\u5230\u5de6\u8fb9\u754c\u63d2\u5165\u5143\u7d20\uff0c\u9047\u5230\u53f3\u8fb9\u754c\u5220\u9664\u5143\u7d20\uff0c\u5143\u7d20\u7684\u503c\u5747\u4e3a\u6247\u5f62\u7684\u534a\u5f84\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u628a\u4e0b\u4e0b\u6807\u5411\u53f3\u504f\u79fb$m$\uff0c\u5b9a\u4e49\u6570\u7ec4\u4e0b\u6807\u4e3a$i$\u7684\u5730\u65b9\u5bf9\u5e94\u533a\u95f4$[i - m, i - m + 1]$\u7684\u9762\u79ef\n\n\u5f53$l > r$,\u8003\u8651\u628a\u6247\u5f62\u62c6\u6210\u4e24\u4e2a\u533a\u95f4$[l..m)$ \u548c $[-m, r)$ \n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u5148\u5904\u7406\u5b8c\u63d2\u5165\u7684\uff0c\u518d\u5904\u7406\u5220\u9664\u7684\uff0c\u63a5\u7740\u67e5\u8be2\u9762\u79ef\n\n\u8003\u8651\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u9762\u79ef\uff0c\u5176\u5b9e\u5c31\u662f\u67e5\u8be2\u5f53\u524d\u96c6\u5408\u7684\u7b2cK\u5927\u7684\u503c\n\n~~\u4e8e\u662f\u5077\u61d2\u5199\u4e00\u6ce2vector\"\u5e73\u8861\u6811\"\uff0c\u4e8e\u662f\u8dd1\u5f97\u5de8\u6162\uff08\u53ef\u4ee5\u6743\u503c\u7ebf\u6bb5\u6811\u6216\u5e73\u8861\u6811\u4ee3\u66ff\uff09~~\n\n\u5f00\u6c27\u6c14RE\u4e0d\u5f00\u5374\u8fc7\u4e86\uff1f\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nconst int MAXN = 100010;\nconst int MAXM = 2000010;\nint n, m, k, t1, t2, t3;\nstd::vector<int> add[MAXM], dec[MAXM], tree;\nint li[MAXN << 2], bak;\n#define lb(X) lower_bound(tree.begin(), tree.end(), X)\nvoid makeadd(int at) {\n    const std::vector<int> & ad = add[at];\n    const int SZ = ad.size();\n    for (int i = 0; i != SZ; ++i)\n        tree.insert(lb(ad[i]), ad[i]);\n}\nvoid makedec(int at) {\n    const std::vector<int> & de = dec[at];\n    const int SZ = de.size();\n    for (int i = 0; i != SZ; ++i)\n        tree.erase(lb(de[i]));\n}\ntypedef long long LL;\nLL ans = 0;\ninline LL sqr(int x) { return static_cast<LL> (x) * x; }\nLL calc() {\n    if (tree.size() < k) return 0;\n    return sqr(tree[tree.size() - k]);\n}\nint main() {\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%d%d%d\", &t1, &t2, &t3);\n        if (t2 <= t3) {\n            add[t2 + m].push_back(t1);\n            dec[t3 + m].push_back(t1);\n            li[++bak] = t2 + m;\n            li[++bak] = t3 + m;\n        } else {\n            add[0].push_back(t1);\n            dec[t3 + m].push_back(t1);\n            add[t2 + m].push_back(t1);\n            dec[m << 1].push_back(t1);\n            li[++bak] = 0; li[++bak] = t2 + m;\n            li[++bak] = t3 + m; li[++bak] = m << 1;\n        }\n    }\n    std::sort(li + 1, li + 1 + bak);\n    bak = std::unique(li + 1, li + 1 + bak) - li - 1;\n    int lpos = 0;\n    for (int T = 1; T <= bak; ++T) {\n        const int i = li[T];\n        // printf(\"calc %d : %lld\\n\", i, calc());\n        ans += calc() * (i - lpos);\n        lpos = i;\n        makeadd(i); makedec(i);\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1545473285,
        "uid": 22066,
        "name": "daklqw",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "## \u7ebf\u6bb5\u6811\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6dfb\u52a0\u4e00\u4e2a\u6247\u5f62\u53d8\u4e3a\u6dfb\u52a0\u4e00\u4e2a\u534a\u5f84\u4e0e\u5220\u9664\u4e00\u4e2a\u534a\u5f84\u3002\n\n\u5bf9\u4e8e$l > r$\u7684\u6247\u5f62\uff0c\u5219\u5c06\u5b83\u62c6\u4e3a\u4e24\u4e2a\u6247\u5f62$[l, m], [-m, r]$\n\n\u4e4b\u540e\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u65b9\u4fbf\u6211\u4eec\u67e5\u8be2\u7b2ck\u5927\u7684\u534a\u5f84\u662f\u591a\u5c11\n\n\u7528now\u8868\u793a\u76ee\u524d\u5df2\u7ecf\u63d2\u5165now\u4e2a\u534a\u5f84\uff0c\u90a3\u4e48\u76ee\u524d\u8986\u76d6\u81f3\u5c11k\u5c42\u7684\u534a\u5f84\u4e3a\u7b2cnow-k+1\u5927\u7684\u534a\u5f84\uff0c\u800c\u8986\u76d6\u7684\u89d2\u5ea6\u5219\u662f\u4e0a\u4e00\u6b21\u6dfb\u52a0\u534a\u5f84\u7684\u4f4d\u7f6e\u81f3\u8fd9\u4e00\u6b21\u6dfb\u52a0\u534a\u5f84\u7684\u4f4d\u7f6e\n\n\n### \u4ee3\u7801\n```\n#include <bits/stdc++.h>\n#define R register\n#define eps 1e-12\n#define INF (1<<30)\n#define LL long long\n#define MM(x, y) memset(x, y, sizeof x)\n#define Fo(i, x, y) for(R int i=x; i<=y; ++i)\n#define Ro(i, x, y) for(R int i=x; i>=y; --i)\nusing namespace std;\ntemplate<typename T> inline T Max(R T x, R T y) {return x > y ? x : y;}\ntemplate<typename T> inline T Min(R T x, R T y) {return x < y ? x : y;}\ntemplate<typename T> inline void in(R T &x)\n{\n    static int ch; static bool flag;\n    for(flag=false, ch=getchar(); ch<'0'||ch>'9'; ch=getchar()) flag |= ch=='-';\n    for(x=0; ch>='0'&&ch<='9'; ch=getchar()) x = (x<<1) + (x<<3) + ch - '0';\n    x = flag ? -x : x;\n}\n\n#define N 1000005\n#define lc (o<<1)\n#define rc (lc|1)\n#define mid ((l+r)>>1)\nint n, m, K, sum[N*5];\n\ninline void update(R int o, R int l, R int r, R int x, R int p)\n{\n    sum[o] += p;\n    if(l == r) return;\n    if(x <= mid) update(lc, l, mid, x, p);\n    else update(rc, mid+1, r, x, p);\n}\n\ninline int query(R int o, R int l, R int r, R int k)\n{\n    if(l == r) return l;\n    if(k <= sum[lc]) return query(lc, l, mid, k);\n    else return query(rc, mid+1, r, k-sum[lc]);\n}\n\nstruct Que{\n    int a, b, c;\n    Que() {}\n    Que(int a, int b, int c) : a(a), b(b), c(c) {}\n    bool operator < (const Que &t) const {return b < t.b;}\n}q[N];\n\nint main()\n{\n    in(n); in(m); in(K);\n    R int cnt = 0;\n    Fo(i, 1, n)\n    {\n        R int a, b, c; in(a); in(b); in(c);\n        if(b > c) q[++cnt] = Que(a, -m, 1), q[++cnt] = Que(a, c, -1), q[++cnt] = Que(a, b, 1), q[++cnt] = Que(a, m, -1);\n        else q[++cnt] = Que(a, b, 1), q[++cnt] = Que(a, c, -1);\n    }\n    sort(q+1, q+cnt+1);\n    R int now = 0, last = 0;\n    R LL ans = 0;\n    Fo(i, 1, cnt)\n    {\n        R int r = query(1, 0, 100001, now-K+1); ans += 1ll * r * r * (q[i].b-last);\n        now += q[i].c; update(1, 0, 100001, q[i].a, q[i].c); last = q[i].b;\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1517472544,
        "uid": 36268,
        "name": "Pine",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3997 \u3010[SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76\u3011"
    },
    {
        "content": "\u7406\u89e3\u9898\u610f\u540e\u53ef\u4ee5\u628a\u9898\u76ee\u770b\u6210\u4e00\u4e2a\u8986\u76d6\u7ebf\u6bb5\u7684\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u70b9\u5728 $-m$ \u4e0a\uff0c\u770b\u6210\u5728 $m$ \u4e0a\u3002 \n\n\u5bf9\u4e8e $l<r$\uff0c\u4e0d\u7528\u5904\u7406\u3002\n\n\u5bf9\u4e8e $l>r$\uff0c\u5c06\u95ee\u9898\u770b\u6210 $(l,m)$ \u548c $(-m+1.r)$ \u4e24\u4e2a\u533a\u95f4\u3002\n\n\u5bf9\u4e8e\u6b63\u5e38\u5904\u7406\u70b9\u7684\u95ee\u9898\uff0cSplay \u53ef\u4ee5\u5728 $l$ \u65f6\u52a0\u5165\u8fd9\u4e2a\u70b9\uff0c$r+1$ \u65f6\u5220\u9664\u8fd9\u4e2a\u70b9\u3002\n\n\u4f46\u672c\u9898\u4e3a\u7ebf\u6bb5\u8986\u76d6\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u7ebf\u6bb5\u7684\u4e0b\u6807\u770b\u4e3a\u70b9\u7684\u4e0b\u6807\uff0c\u4f46\u662f\u4e00\u4e2a $(l,r)$ \u7684\u533a\u95f4\u53ea\u80fd\u8986\u76d6 $(r-l)$ \u7684\u7ebf\u6bb5\u6570\uff0c\u6240\u4ee5\u5728 $r$ \u65f6\u5c31\u5220\u9664\u8fd9\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u5269\u4e0b\u7684\u90fd\u662f Splay \u677f\u5b50\u4e86\uff0c\u79bb\u7ebf\u6392\u5e8f\uff0c\u63d2\u5165\uff0c\u5220\u9664\uff0c\u5728\u4e00\u4e2a\u70b9\u65f6\u5224\u65ad\u662f\u5426\u6811\u4e2d\u6709\u8d85\u8fc7 $k$ \u7684\u8282\u70b9\uff0c\u5982\u679c\u6709\uff0c\u90a3\u4e48\u641c\u7d22\u7b2c $k$ \u5927\u7684\u6570\uff0c\u5426\u5219\u8d4b\u4e3a $0$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\times \\log(n))$\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define int long long\nusing namespace std;\nconst int N=1e5+5;\nconst int M=1e6+5;\nint n,m,k,cnt,root,nl,nr;\nstruct node2\n{\n\tint name,data;\n\tbool flag;\n}ask[4*N];\nint cmp2(node2 fi,node2 se)\n{\n\tif(fi.name==se.name)return fi.flag<se.flag;\n\treturn fi.name<se.name;\n}\nvoid clac(int &x,int &y)\n{\n\tnl=0;\n\tif(x>y)\n\t{\n\t\tnl=x;\n\t\tx=-m+1;\n\t}\n}\nstruct node\n{\n\tint fa,ch[2],siz,cnt,val;\n}t[4*N];\ninline void newnode(int &x,int fa,int val)\n{\n\tx=++cnt;\n\tt[x].fa=fa;\n\tt[x].val=val;\n\tt[x].cnt=t[x].siz=1;\n}\ninline void connect(int x,int fa,int son)\n{\n\tt[x].fa=fa;\n\tt[fa].ch[son]=x;\n}\ninline bool ident(int x,int fa)\n{\n\treturn t[fa].ch[1]==x;\n}\ninline void pushup(int x)\n{\n\tt[x].siz=t[x].cnt+t[t[x].ch[0]].siz+t[t[x].ch[1]].siz;\n}\ninline void rotate(int x)\n{\n\tint fa=t[x].fa,ff=t[fa].fa,k=ident(x,fa);\n\tconnect(t[x].ch[k^1],fa,k);\n\tconnect(fa,x,k^1);\n\tconnect(x,ff,ident(fa,ff));\n\tpushup(fa),pushup(x);\n}\nvoid splay(int x,int topp=0)\n{\n\tif(topp==0)root=x;\n\twhile(t[x].fa!=topp)\n\t{\n\t\tint fa=t[x].fa,ff=t[fa].fa;\n\t\tif(ff!=topp)ident(x,fa)^ident(fa,ff)?rotate(x):rotate(fa);\n\t\trotate(x);\n\t}\n}\nvoid ins(int val,int &x=root,int fa=0)\n{\n\tif(!x)newnode(x,fa,val),splay(x);\n\telse if(t[x].val>val)ins(val,t[x].ch[0],x);\n\telse if(t[x].val<val)ins(val,t[x].ch[1],x);\n\telse t[x].cnt++,splay(x);\n}\nvoid erase(int val,int x=root)\n{\n\tif(t[x].val==val)\n\t{\n\t\tsplay(x);\n\t\tif(t[x].cnt>=2)t[x].cnt--;\n\t\telse if(t[x].ch[1])\n\t\t{\n\t\t\tint p=t[x].ch[1];\n\t\t\twhile(t[p].ch[0])p=t[p].ch[0];\n\t\t\tsplay(p,x);\t\n\t\t\troot=p,connect(t[x].ch[0],p,0),t[p].fa=0;\n\t\t\tpushup(p);\n\t\t}\n\t\telse root=t[x].ch[0],t[t[x].ch[0]].fa=0;\n\t}\n\telse if(t[x].val>val)erase(val,t[x].ch[0]);\n\telse erase(val,t[x].ch[1]);\n}\nint getrank(int k,int x=root)\n{\n\tif(k<=0)\n\t{\n\t\tsplay(x);\n\t\treturn t[x].val;\n\t}\n\tif(k<=t[t[x].ch[0]].siz)return getrank(k,t[x].ch[0]);\n\tint tmp=k-t[t[x].ch[0]].siz-t[x].cnt;\n\tif(tmp<=0)\n\t{\n\t\tsplay(x);\n\t\treturn t[x].val;\n\t}\n\treturn getrank(tmp,t[x].ch[1]);\n}\nsigned main()\n{\n\t//freopen(\"a.out\",\"r\",stdin);\n\t//freopen(\"area.out\",\"w\",stdout);\n\tscanf(\"%lld%lld%lld\",&n,&m,&k);\n\tint cnp=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint dat,lc,rc;\n\t\tscanf(\"%lld%lld%lld\",&dat,&lc,&rc);\n\t\tif(lc==-m)lc=m;\n\t\tif(rc==-m)rc=m;\n\t\tclac(lc,rc);\n\t\task[++cnp]=(node2){lc,dat,0};\n\t\task[++cnp]=(node2){rc,dat,1};\n\t\tif(nl)ask[++cnp]=(node2){nl,dat,0};\n\t}\n\tsort(ask+1,ask+1+cnp,cmp2);\n\tint bef=1,num=0,ans=0;\n\tfor(int i=-m+1;i<=m;i++)\n\t{\n\t\tfor(;bef<=cnp;bef++)\n\t\t{\n\t\t\tif(ask[bef].name!=i)break;\n\t\t\tif(ask[bef].flag==1)num--,erase(ask[bef].data*ask[bef].data);\n\t\t\telse num++,ins(ask[bef].data*ask[bef].data);\n\t\t}\n\t\tif(num>=k)ans+=getrank(num-k+1);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n/*\n10 100 2\n24660 98 32\n906 -15 -49\n26067 -52 -23\n15409 -76 -25\n22490 41 65\n2600 -10 -7\n4310 15 75\n20389 -100 -3\n4421 8 -40\n8664 -70 -95\n*/\n```\n",
        "postTime": 1664687014,
        "uid": 275793,
        "name": "Gmt\u4e36FFF",
        "ccfLevel": 5,
        "title": "P3997 [SHOI2013]\u6247\u5f62\u9762\u79ef\u5e76 \u9898\u89e3"
    }
]