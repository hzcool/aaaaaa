[
    {
        "content": "\u5927\u6982\u662f\u76ee\u524d\u9898\u89e3\u533a\u6700\u77ed\u7684\u4e86\u3002\n\n\u56e0\u4e3a $s$ \u4e32\u9009\u62e9\u7684\u662f\u5b50\u5e8f\u5217\uff0c$t$ \u4e32\u9009\u62e9\u7684\u662f\u5b50\u4e32\uff0c\u6240\u4ee5\u663e\u7136 $t$ \u7684\u9650\u5236\u66f4\u4e25\u683c\uff0c\u8003\u8651\u679a\u4e3e $t$ \u7684\u5b50\u4e32 $t[i, j]$\u3002\n\n\u56fa\u5b9a $i$ \u4e0d\u52a8\uff0c$j$ \u5f80\u540e\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488 $p$ \u8d2a\u5fc3\u7684\u4ece\u524d\u5f80\u540e\u626b\u63cf $s$ \u4e32\u770b\u662f\u5426\u8fd8\u5b58\u5728\u76f8\u540c\u5b50\u5e8f\u5217\u3002\u5982\u679c\u5b58\u5728\uff0c\u628a\u5f53\u524d $t[i, j]$ \u7684\u54c8\u5e0c\u503c\uff08\u4e00\u4e2a `long long` \u5927\u6a21\u6570\u5c31\u884c\u4e86\uff09\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4 $res$ \u4e2d\u3002\n\n\u679a\u4e3e\u5b8c\u4e86\u4ee5\u540e\uff0c\u628a $res$ \u6570\u7ec4\u6392\u5e8f\u3001\u53bb\u91cd\uff0c\u8f93\u51fa\u4e0d\u4e00\u6837\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5176\u5b9e\u4e5f\u662f $O(n^2 \\log n)$ \u7684\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 3005, BASE = 51971;\nconst long long M = 2005091020050911;\nint n;\nchar a[N], b[N];\nlong long t[N * N];\nint main()\n{\n\tscanf(\"%d %s %s\", &n, a + 1, b + 1);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tlong long v = 0; int p = 1;\n\t\tfor(int j = i; j <= n; j++)\n\t\t{\n\t\t\twhile(p <= n && a[p] != b[j]) p++;\n\t\t\tif(p > n) break;\n\t\t\tp++;\n\t\t\tv = (1LL * v * BASE + b[j] - 'a' + 1) % M;\n\t\t\tt[++t[0]] = v;\n\t\t}\n\t}\n\tsort(t + 1, t + t[0] + 1);\n\tprintf(\"%d\\n\", unique(t + 1, t + t[0] + 1) - t - 1);\n\treturn 0;\n}\n```",
        "postTime": 1616836224,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7469 \u3010[NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b\u3011"
    },
    {
        "content": "\u4e3a\u5565 $\\text{hash}$ \u662f\u6b63\u89e3\u554a /baojin\n\n\u50cf $\\text{hash}$ \u8fd9\u6837\u7684\u7b97\u6cd5\uff0c\u5c31\u5e94\u5f53\u722a\u5df4\uff08\u8bef\n\n\u7b97\u6cd5\u4e3b\u8981\u6d41\u7a0b\u6bd4\u8f83\u7b80\u5355\uff1a\u679a\u4e3e $T$ \u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u4ece\u5de6\u7aef\u70b9\u626b\u8fc7\u53bb\uff0c\u770b $S$ \u4e32\u4e2d\u662f\u5426\u5408\u6cd5\uff0c\u5177\u4f53\u5b9e\u73b0\u62ff\u4e2a\u6307\u9488\u626b\u8fc7\u53bb\u5373\u53ef\n\n\u7136\u800c\u8fd9\u9053\u9898\u74f6\u9888\u5728\u5224\u91cd...\n\n\u8003\u8651 $\\text{hash}$ \u80af\u5b9a\u4e0d\u4f1a\u662f\u6b63\u89e3\uff08\u7136\u800c\u662f\u7684\uff09\uff0c\u800c\u4e14 $O(n^2)$ \u53ef\u4ee5\u901a\u8fc7\uff0c\u6211\u4eec\u76f4\u63a5\u8003\u8651\u66b4\u529b\u5224\u91cd\n\n\u8bbe $f_{i,j}$ \u4e3a\u4ee5 $i$ \u4e3a\u5f00\u5934\u7684\u540e\u7f00\u8ddf\u4ee5 $j$ \u4e3a\u5f00\u5934\u7684\u540e\u7f00\u7684 $LCP$\n\n\u8f6c\u79fb\u66b4\u529b\u8f6c\u79fb\uff0c\u5012\u7740\u679a\u4e3e $i$ \u53ef\u4ee5 $O(1)$ \u8f6c\u79fb\n\n\u7136\u540e\u8fb9\u8f6c\u79fb\u8fb9\u505a\u679a\u4e3e\uff0c\u76f4\u63a5\u4ece $i+\\max\\limits_{k>i}\\{f_{k,i}\\}$ \u5f00\u59cb\u8f6c\u79fb\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\n\n```cpp\n#include<cstdio>\n#include<cctype>\n\n#define maxn 3333\n\ntemplate<class T>\n\ninline T read(){\n\tT r=0,f=0;\n\tchar c;\n\twhile(!isdigit(c=getchar()))f|=(c=='-');\n\twhile(isdigit(c))r=(r<<1)+(r<<3)+(c^48),c=getchar();\n\treturn f?-r:r;\n}\n\ntemplate<class T>\n\ninline T max(T a,T b){\n\treturn a>b?a:b;\n}\n\nint n,ans,len[maxn][maxn];\n\nchar s[maxn],t[maxn];\n\nint main(){\n\tfreopen(\"block.in\",\"r\",stdin);\n\tfreopen(\"block.out\",\"w\",stdout);\n\tn=read<int>();\n\tscanf(\"%s\\n%s\",s+1,t+1);\n\tfor(int i=n;i>=1;i--){\n\t\tint Max=0;\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tMax=max(Max,len[j][i]);\n\t\tint k=1;\n\t\tfor(int j=i;j<i+Max;j++){\n\t\t\twhile(k<=n&&(s[k]^t[j]))k++;\n            if(k>n)break;\n\t\t\tk++;\n\t\t}\n\t\tfor(int j=i+Max;j<=n;j++){//\u679a\u4e3e\u53f3\u7aef\u70b9\n\t\t\twhile(k<=n&&(s[k]^t[j]))k++;//\u6307\u9488\u76f4\u63a5\u626b\n\t\t\tif(k>n)break;\n\t\t\tk++;\n\t\t\tans++;\n\t\t}\n\t\tfor(int j=1;j<=n;j++)//\u8f6c\u79fb\n\t\t\tif(t[i]==t[j])len[i][j]=len[i+1][j+1]+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1616826337,
        "uid": 71403,
        "name": "\u4e00\u53f6\u77e5\u79cb\u3002",
        "ccfLevel": 9,
        "title": "P7469 \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $S$ \u548c $T$\uff0c\u6c42 $T$ \u4e2d\u6709\u591a\u5c11\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u662f $S$ \u7684\u5b50\u5e8f\u5217\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq 3\\times 10^3$\u3002\n\n### \u9898\u89e3\n\n\u6bd4\u8f83\u7b80\u5355\u3002\n\n\u5bf9 $S$ \u5efa\u7acb\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e32\u957f\u590d\u6742\u5ea6\u7684\u770b\u4e00\u4e2a\u4e32\u662f\u5426\u4e3a $S$ \u7684\u5b50\u5e8f\u5217\u4e86\u3002\n\n\u7531\u4e8e\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u662f\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u52a0\u5b57\u7b26\u5339\u914d\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u5de6\u7aef\u70b9\u7136\u540e\u4ece\u5de6\u5f80\u53f3\u679a\u4e3e\u53f3\u7aef\u70b9\u3002\n\n\u81f3\u4e8e\u8003\u8651\u672c\u8d28\u4e0d\u540c\u7684\u4e32\u7684\u8bdd\u5c31\u54c8\u5e0c\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u7531\u4e8e\u53ef\u4ee5\u901a\u8fc7\u6784\u9020 $\\texttt{ab}$ \u4e32\u6765\u4f7f\u7b54\u6848\u5927\u5c0f\u4e3a $3\\times 10^6$ \u91cf\u7ea7\uff0c\u6240\u4ee5\u54c8\u5e0c\u65f6\u5019\u6a21\u6570\u8981\u8bbe\u7684\u6bd4\u8f83\u5927\u3002\uff08~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u968f\u673a\u6784\u9020 $\\texttt{ab}$ \u4e32\u5361\u6389\u4e86\u67d0\u4f4d\u540c\u5b66\u7684\u53cc\u54c8\u5e0c~~\uff09\n\n\u7136\u540e\u4e3a\u4e86\u5e38\u6570\u9700\u8981\u624b\u5199\u54c8\u5e0c\u8868\uff0c\u672c\u673a\u6d4b $n=3000$ \u7684 $\\texttt{ab}$ \u4e32\u7684\u65f6\u5019 map 4s \u624b\u5199\u54c8\u5e0c 0.3s\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=9e6+51;\nconst li MOD1=8530716171517,MOD2=8530716771587;\nstruct HashTable{\n\tconst ll MOD=8530771;\n\tll tot;\n\tll last[MAXN],prev[MAXN/2];\n\tli hsh1[MAXN/2],hsh2[MAXN/2];\n\tinline void insert(li hv1,li hv2);\n\tinline ll query(li hv1,li hv2);\n};\nHashTable hsh;\nll n,res,cur;\nli hsh1,hsh2;\nll nxt[3051][27];\nchar s[3051],t[3051];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline void HashTable::insert(li hv1,li hv2)\n{\n\tll x=hv1%MOD;\n\tprev[++tot]=last[x],hsh1[tot]=hv1,hsh2[tot]=hv2,last[x]=tot;\n}\ninline ll HashTable::query(li hv1,li hv2)\n{\n\tll x=hv1%MOD;\n\tfor(register int i=last[x];i;i=prev[i])\n\t{\n\t\tif(hsh1[i]==hv1&&hsh2[i]==hv2)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tn=read(),scanf(\"%s%s\",s+1,t+1);\n\tfor(register int i=n;i;i--)\n\t{\n\t\tmemcpy(nxt[i-1],nxt[i],sizeof(nxt[i])),nxt[i-1][s[i]-'a']=i;\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tcur=hsh1=hsh2=0;\n\t\tfor(register int j=i;j<=n;j++)\n\t\t{\n\t\t\tif(!(cur=nxt[cur][t[j]-'a']))\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\thsh1=(hsh1*131+t[j]-'a'+1)%MOD1,hsh2=(hsh2*131+t[j]-'a'+1)%MOD2;\n\t\t\t!hsh.query(hsh1,hsh2)?hsh.insert(hsh1,hsh2),res++:1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",res);\n}\n```",
        "postTime": 1616825443,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7469 \u3010[NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b\u3011"
    },
    {
        "content": "\u8003\u8651 $\\mathcal O(n^2)$ \u679a\u4e3e $t$ \u4e2d\u7684\u5b50\u4e32 $t_{[i, j]}$\u3002\n\n\u95ee\u9898\u53d8\u4e3a\uff1a\u5224\u65ad\u6b64\u524d\u662f\u5426\u679a\u4e3e\u8fc7\u672c\u8d28\u76f8\u540c\u7684\u5b50\u4e32\uff1b\u5224\u65ad $t_{[i, j]}$ \u662f\u5426\u4e3a $s$ \u7684\u5b50\u5e8f\u5217\u3002\n\n---\n\n\u5bf9\u4e8e\u524d\u8005\uff0c\u8003\u8651\u627e\u5230 $t$ \u4e2d\u9996\u4e2a\u4e0e $t_{[i, j]}$ \u672c\u8d28\u76f8\u540c\u7684\u5b50\u4e32 $t_{[x, y]}$\uff0c\u5224\u65ad $y=j$ \u662f\u5426\u6210\u7acb\u3002\n\n\u60f3\u5230 $\\mathcal O(n + m)$ \u7684 KMP \u7b97\u6cd5\uff0c\u8003\u8651\u8fc1\u79fb\u5230\u672c\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u679a\u4e3e $i$\uff0c\u7136\u540e\u5bf9\u4e8e $t_{[i, n]}$ \u5efa\u51fa KMP \u7684 $next$ \u6570\u7ec4\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u9996\u4e2a\u4e0e $t_{[i, j - 1]}$ \u672c\u8d28\u76f8\u540c\u7684\u5b50\u4e32\uff0c\u5176\u7ed3\u5c3e\u4e3a $k$\uff0c\u90a3\u4e48\u6211\u4eec\u5229\u7528 KMP \u7684\u601d\u60f3\u53ef\u4ee5\u627e\u5230\u9996\u4e2a\u4e0e $t_{[i, j]}$ \u672c\u8d28\u76f8\u540c\u7684\u5b50\u4e32\u3002\n\n---\n\n\u5bf9\u4e8e\u540e\u8005\uff0c\u8003\u8651\u5b9a\u4e49 $r_{i, j}$ \u4e3a $s_i$ \u540e\u7b2c\u4e00\u4e2a\u5b57\u7b26 $j$ \u7684\u4f4d\u7f6e\uff0c\u82e5 $s_i$ \u540e\u6ca1\u6709\u5b57\u7b26 $j$\uff0c\u5219\u4e3a $n + 1$\u3002\n\n\u5047\u8bbe $s$ \u7b2c\u4e00\u4e2a\u4e0e $t_{[i, j - 1]}$ \u76f8\u540c\u7684\u5b50\u5e8f\u5217\u7684\u7ed3\u5c3e\u4e3a $p$\uff0c\u5219\u7b2c\u4e00\u4e2a\u4e0e $t_{[i, j]}$ \u76f8\u540c\u7684\u5b50\u5e8f\u5217\u7ed3\u5c3e\u4e3a $r_{p, t[j]}$\uff0c\u5224\u65ad\u662f\u5426\u4e0d\u5927\u4e8e $n$ \u5373\u53ef\uff08\u82e5\u5927\u4e8e $n$ \u5219\u8bf4\u660e\u6ca1\u6709\u627e\u5230\uff09\u3002\n\n---\n\n\u8fd8\u662f\u6bd4\u8f83\u7b80\u6d01\u7684\u505a\u6cd5\u5427\uff0c\u6838\u5fc3\u4ee3\u7801 25 \u884c\uff0c\u8dd1\u5f97\u4e5f\u5f88\u5feb\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n)$\uff0c\u7a7a\u95f4\u4e0a\u6709 $26$ \u7684\u5e38\u6570\u3002\n\n---\n\n```cpp\n# include <cstdio>\n\nnamespace Main {\n    namespace Source {\n        typedef short unsigned int hu;\n        typedef unsigned int uint;\n        struct __FILE {\n            __FILE() { freopen(\"block.in\", \"r\", stdin), freopen(\"block.out\", \"w\", stdout); }\n            compl __FILE() { fclose(stdin), fclose(stdout); }\n        } ____FILE;\n    }\n    using namespace Source;\n    enum { N = 3000 };\n    static hu n;\n    static char s[N + 2], t[N + 2];\n    static hu r[N + 1]['z' - 'a' + 1];\n    static hu next[N + 1];\n    static uint ans;\n    static inline const void main() {\n        scanf(\"%hu\", &n);\n        scanf(\"%s%s\", s + 1, t + 1);\n        for (char i('a'); i <= 'z'; ++i) r[n][i - 'a'] = n + 1;\n        for (register hu i(n - 1); i < n; --i) {\n            for (char j('a'); j <= 'z'; ++j) r[i][j - 'a'] = r[i + 1][j - 'a'];\n            r[i][s[i + 1] - 'a'] = i + 1;\n        }\n        for (register hu i(1); i <= n; ++i) {\n            next[1] = next[0] = 0;\n            for (register hu j(2); i + j - 1 <= n; ++j) {\n                next[j] = next[j - 1];\n                while (next[j] and t[i + j - 1] != t[i + next[j]]) next[j] = next[next[j]];\n                next[j] += t[i + j - 1] == t[i + next[j]];\n                // printf(\"%hu %hu %hu\\n\", i, j, next[j]);\n            }\n            hu p(0);\n            for (register hu j(i), k(0), l(0); j <= n and p <= n; ++j) {\n                while (k <= n and i + l <= j) {\n                    while (i + l <= j and l and t[k + 1] != t[i + l]) l = next[l];\n                    if (t[++k] == t[i + l]) ++l;\n                    // printf(\"%hu %hu %hu %hu\\n\", i, j, k, l);\n                }\n                p = r[p][t[j] - 'a'];\n                if (k == j) ans += p <= n;\n            }\n        }\n        printf(\"%u\\n\", ans);\n    }\n}\n\nsigned int main() { Main::main(); return 0; }\n```",
        "postTime": 1616821541,
        "uid": 236807,
        "name": "Mitama",
        "ccfLevel": 9,
        "title": "[Solution] P7469 #NOIO2020 R1B"
    },
    {
        "content": "### \u9898\u76ee\u6982\u8ff0\uff1a\n\u7ed9\u4f60\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $a,b$\uff0c\u4f60\u9700\u8981\u627e\u51fa $b$ \u4e2d\u6709\u591a\u5c11\u4e2a**\u4e0d\u540c**\u7684\u5b50\u4e32\u662f $a$ \u7684\u5b50\u5e8f\u5217\n\n### \u601d\u8def\uff1a\n\u53ef\u4ee5\u679a\u4e3e $a$ \u4e2d\u7684\u5b50\u4e32\uff0c\u53ef\u662f\u8fd9\u6837\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u76f8\u540c\u7684\u5b50\u4e32\u88ab\u7b97\u4e86\u591a\u6b21\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528 $Trie$ \u6811\uff0c\u7136\u540e\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u5411\u4e0b\u641c\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5b50\u4e32\uff0c\u770b\u4e00\u4e0b\u5728 $a$ \u4e2d\u6709\u6ca1\u6709\u3002\n\n\u5f88\u663e\u7136\uff0c\u5982\u679c\u5f53\u524d\u7684\u8fd9\u4e2a\u5b50\u4e32\u5df2\u7ecf\u4e0d\u5339\u914d\u4e86\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u518d\u641c\u4e0b\u53bb\u7684\u5fc5\u8981\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a $nex_{i,c='a'to'z'}$ \u6570\u7ec4\u8868\u793a\u5728\u5b57\u7b26\u4e32 $a$ \u4e2d\uff0c\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e4b\u540e\u7684\u6700\u8fd1\u7684\u4e00\u4e2a $c$ \u7684\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5904\u7406\u53ef\u4ee5 $O(26n)$ \u5904\u7406\u51fa\u6765\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fb9\u5411\u4e0b\u641c\uff0c\u8fb9\u8bb0\u5f55\u5339\u914d\u5230 $a$ \u6570\u7ec4\u7684\u54ea\u4e00\u4f4d\uff0c\u663e\u800c\u6613\u89c1\uff0c\u80af\u5b9a\u662f\u8df3\u5230\u8ddd\u79bb\u5f53\u524d\u4f4d\u7f6e\u6700\u8fd1\u7684\u4f4d\u7f6e\u662f\u6700\u4f18\u7684\u3002\n\n\u6700\u540e\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b57\u5178\u6811\u9700\u8981 $n*n$ \u7ea7\u522b\u4e2a\u8282\u70b9\uff0c\u663e\u7136\u4f1a MLE\uff0c\u4e3a\u4e86\u7701\u53bb\u8fd9\u4e2a $26$ \u500d\u7684\u5e38\u6570\uff0c\u5c31\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\uff0c\u8fd9\u6837\u53ea\u4e0d\u8fc7\u65f6\u95f4\u4e0a\u4f1a\u589e\u52a0 $26$ \u500d\uff0c\u4e0d\u8fc7\u5e76\u65e0\u5927\u788d\u3002\n\n### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int N=3e3+10;\nint n,inx[N],nex[N][26];\nchar a[N],b[N];\nstruct edges{\n\tint to,w,nex;\n}edge[N*N];\nint head[N*N],kk;\nvoid add(int u,int v,int w){\n\tedge[++kk]=(edges){v,w,head[u]};head[u]=kk;\n}\nint cnt;\nvoid clear(){cnt=0;}\nvoid insert(int x){//\u5c06\u5b57\u7b26\u4e32b\u4e2d\u7684x-n\u4f4d\u52a0\u5165\u5b57\u5178\u6811\n\tint rt=0;\n\tfor(int i=x;i<=n;i++){\n\t\tbool flag=0;\n\t\tfor(int j=head[rt];j;j=edge[j].nex){\n\t\t\tif(edge[j].w==b[i]-'a'){\n\t\t\t\tflag=1;rt=edge[j].to;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag){//\u6ca1\u6709\u4e0b\u4e00\u6761\u8fb9\n\t\t\tadd(rt,++cnt,b[i]-'a');\n\t\t\trt=cnt;\n\t\t}\n\t}\n}\nint ans;\nvoid dfs(int u,int x){\n\tfor(int i=head[u];i;i=edge[i].nex){\n\t\tif(nex[x][edge[i].w]==-1)continue;\n\t\tans++;//\u641c\u5230\u4e0b\u4e00\u4e2a\u70b9\u8bf4\u660e\u5339\u914d\u6210\u529f\n\t\tdfs(edge[i].to,nex[x][edge[i].w]);\n\t}\n}\nint main(){\n\tfreopen(\"block.in\",\"r\",stdin);\n\tfreopen(\"block.out\",\"w\",stdout);\n\tclear();\n\tscanf(\"%d%s%s\",&n,a+1,b+1);\n\tmemset(inx,-1,sizeof(inx));\n\tfor(int i=n;i>=0;i--){\n\t\tfor(int j=0;j<26;j++)nex[i][j]=inx[j];\n\t\tif(i)inx[a[i]-'a']=i;\n\t}\n\tfor(int i=1;i<=n;i++)insert(i);\n\tdfs(0,0);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n### \u8c22\u8c22--zhengjun",
        "postTime": 1616826798,
        "uid": 263082,
        "name": "A_zjzj",
        "ccfLevel": 7,
        "title": "[NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b\u9898\u89e3--zhengjun"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s$ \u548c $t$\uff0c\u95ee\u6709\u591a\u5c11 $t$ \u7684\u4e0d\u540c\u7684\u5b50\u4e32\u662f $s$ \u7684\u5b50\u5e8f\u5217\uff0c\u5b9a\u4e49\u4e0d\u540c\u4e3a\u957f\u5ea6\u4e0d\u540c\u6216\u81f3\u5c11\u6709\u4e00\u4e2a\u4f4d\u7f6e\u7684\u5b57\u6bcd\u4e0d\u540c\u3002\n# \u9898\u76ee\u5206\u6790\n\u672c\u573a\u6700\u6c34\u7684\u9898\uff0c\u6ca1\u6709\u4e4b\u4e00\u3002\n\n\u5148\u8003\u8651\u4e0d\u53bb\u91cd\uff0c\u7531\u4e8e\u5bf9 $s$ \u7684\u8981\u6c42\u6bd4\u8f83\u677e\uff0c\u76f4\u63a5\u4e24\u91cd\u5faa\u73af\u679a\u4e3e $t$ \u7684\u5b50\u4e32\uff0c\u7136\u540e\u5185\u5c42\u4e00\u4e2a\u6307\u9488\u8868\u793a\u5f53\u524d\u5339\u914d\u5230\u7b2c\u51e0\u4f4d\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u5339\u914d\u5931\u8d25\u76f4\u63a5\u8df3\u51fa\u5faa\u73af\u3002\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5c3a\u53d6\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n\u8fd9\u91cc\u7528\u7684\u53bb\u91cd\u65b9\u6cd5\u662f\u6563\u5217\u8868\uff08\u54c8\u5e0c\u8868\uff09\uff0c\u7531\u4e8e\u641e\u9664\u6cd5\u8981\u51fa\u95ee\u9898\uff0c\u6240\u4ee5\u76f4\u63a5\u7528 $O(n^2)$ \u9884\u5904\u7406\u51fa\u54c8\u5e0c\u6570\u7ec4 $Hash[i][j]$\uff0c\u8868\u793a $t$ \u4ece $i$ \u5230 $j$ \u7684\u54c8\u5e0c\u503c\u3002\u6ce8\u610f\u53bb\u91cd\u5224\u65ad\u5e94\u8be5\u653e\u5728\u7d2f\u8ba1\u7b54\u6848\u5904\uff0c\u5982\u679c\u5728\u8fdb\u5165\u5faa\u73af\u5904\u5224\u65ad\u76f8\u5f53\u4e8e\u8df3\u8fc7\u4e86\u5f53\u524d\u5339\u914d\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0cbaa \u548c aab\uff0c\u5f53\u5230\u7b2c\u4e8c\u4e2a a \u65f6\u7531\u4e8e\u6ca1\u6709\u8fdb\u5165\u5339\u914d\uff0c\u5b83\u4f1a\u8ba4\u4e3a ab \u662f\u5408\u6cd5\u7684\u7b54\u6848\u3002\n# \u4ee3\u7801\n~~\u5982\u679c\u6ca1\u4eba\u5bf9\u7740\u6a21\u6570\u5361~~\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(n^2)$\uff0c\u8dd1\u8d77\u6765\u6709\u4e00\u70b9\u6162\uff0c\u53bb\u6389\u5b8f\u5b9a\u4e49\u4ee3\u7801\u8fd8\u662f\u5f88\u77ed\u7684\u3002\n\n~~\u8bf7\u5ffd\u7565\u8003\u573a\u4ee3\u7801\u4e2d\u7528\u4e8e\u819c\u4eba\u7684\u53d8\u91cf\u540d~~\u3002\n```cpp\n#include<bits/stdc++.h>\n#define R register\n#define I inline\n#define ll long long\n#define ull unsigned long long\n#define LL __int128\n#define db double\nusing namespace std;\n#define pii pair<int,int>\n#define mp(x,y) make_pair(x,y)\n#define piii pair<pair<int,int>,int>\n#define mp3(x,y,z) make_pair(make_pair(x,y),z)\n#define fi first.first\n#define se first.second\n#define th second\n#define putint(x) printf(\"%d\\n\",x)\n#define putll(x) printf(\"%lld\\n\",x)\n#define putull(x) printf(\"%llu\\n\",x)\n#define lowbit(x) ((x)&(-(x)))\n#define inf (0x7fffffff)\n#define INF (1e18)\n#define eps (1e-8)\nI int read()\n{\n\tchar ch=getchar();\n\tint res=0,flag=1;\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t\tflag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tres=res*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn res*flag;\n}\nint n,ans;\nchar s[3001],t[3001];\null Hash[3001][3001];\nconst int Base=20050913,Mod=1145141;\nvector<ull>Hash_table[Mod];\nI bool check(int l,int r)\n{\n\tint HC=Hash[l][r]%Mod;\n\tint green_orange=Hash_table[HC].size();\n\tbool PG=0;\n\tfor(R int i=0;i<green_orange;++i)\n\t\tif(Hash_table[HC][i]==Hash[l][r])\n\t\t{\n\t\t\tPG=1;\n\t\t\tbreak;\n\t\t}\n\tif(PG)\n\t\treturn 0;\n\tHash_table[HC].push_back(Hash[l][r]);\n\treturn 1;\n}\nint main()\n{\n\tn=read();\n\tscanf(\"%s\",s+1);\n\tscanf(\"%s\",t+1);\n\tfor(R int i=1;i<=n;++i)\n\t\tfor(R int j=i;j<=n;++j)\n\t\t\tHash[i][j]=Hash[i][j-1]*Base+t[j]-'a'+1;\n\tfor(R int i=1;i<=n;++i)\n\t\tfor(R int j=i,k=1;j<=n;++j)\n\t\t{\n\t\t\twhile(k<=n&&s[k]!=t[j])\n\t\t\t\t++k;\n\t\t\tif(k>n)\n\t\t\t\tbreak;\n\t\t\tif(check(i,j))\n\t\t\t\t++ans;\n\t\t\t++k;\n\t\t}\n\tputint(ans);\n\treturn 0;\n}\n```",
        "postTime": 1616824705,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3P7469"
    },
    {
        "content": "\u7ed9\u4e00\u53d1\u7b80\u5355\u7684 SAM \u505a\u6cd5\u3002\n\n___\n\n\u7b80\u8981\u9898\u610f\uff1a\n\n- \u7ed9\u4e24\u4e2a\u5b57\u7b26\u4e32 s,t \uff0c\u6c42\u4f7f s \u7684\u5b50\u5e8f\u5217\u7b49\u4e8e t \u7684\u5b50\u4e32\u7684\u65b9\u6848\u6570\u3002\u4e24\u4e2a\u65b9\u6848\u88ab\u5224\u5b9a\u4e3a\u4e0d\u7b49\u5f53\u4e14\u4ec5\u5f53\u6700\u540e\u5f97\u5230\u7684\u4e32\u4e0d\u7b49\u3002\n\n\u770b\u5230\u5b50\u4e32\u95ee\u9898\u5c31\u679c\u65ad SAM\u3002\n\n\u518d\u6765\u8003\u8651\u6211\u4eec\u600e\u4e48\u6765\u8868\u793a\u4e00\u4e2a\u5b50\u4e32\u662f\u5426\u51fa\u73b0\u8fc7\u3002\u8fd9\u4e2a\u95ee\u9898\u5728 SAM \u4e2d\u662f\u975e\u5e38\u597d\u56de\u7b54\u7684\uff1a\u77e5\u9053\u6240\u5728\u72b6\u6001\u548c\u957f\u5ea6\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001\u8bb0\u5f55\u51fa\u73b0\u8fc7\u7684\u957f\u5ea6\u533a\u95f4\uff0c\u6700\u540e\u5c06\u6240\u6709\u72b6\u6001\u7684\u533a\u95f4\u957f\u5ea6\u548c\u76f8\u52a0\u5c31\u662f\u7b54\u6848\u3002\n\n\n\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u8fc7\u7a0b\uff1a\u5f80\u5df2\u7ecf\u6709\u7684\u5408\u6cd5\u4e32\u4e0a\u52a0\u4e00\u4e2a\u672b\u5c3e\u5b57\u7b26\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u4e32\u4ecd\u7136\u662f t \u7684\u5b50\u4e32\u3002\n\n\u5b9e\u73b0\u8fd9\u4e00\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u679a\u4e3e\u72b6\u6001\uff0c\u7136\u540e\u76f4\u63a5\u5224\u65ad SAM \u4e0a\u6709\u6ca1\u6709\u5bf9\u5e94\u7684\u8f6c\u79fb\u8fb9\u3002\n\n\u540c\u65f6\uff0c\u8fd9\u4e00\u4e2a\u72b6\u6001\u4e0a\u7684\u6240\u6709\u53ef\u8868\u51fa\u7684\u957f\u5ea6 +1 \u90fd\u53ef\u4ee5\u5728\u8f6c\u79fb\u5230\u7684\u72b6\u6001\u4e0a\u88ab\u8868\u51fa\u3002\n\n\u7136\u540e\u76f4\u63a5\u5728\u8fd9\u91cc\u5c31\u83bd bitset \u5c31\u662f $O(\\dfrac{n^3}{w})$ \u7684\u4e86\u3002~~\uff08\u53ea\u8981\u5b66\u8fc7  SAM \u90fd\u4e0d\u4f1a\u8fd9\u6837\u5427\uff09~~\n\n\u4f46\u662f\u901a\u8fc7 SAM \u672c\u8eab\u6211\u4eec\u53d1\u73b0\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u72b6\u6001\u4e2d\u8868\u793a\u7684\u5b50\u4e32\u90fd\u4e3a\u540e\u7f00\u5173\u7cfb\uff0c\u6240\u4ee5\u957f\u5ea6\u957f\u7684\u53ea\u8981\u51fa\u73b0\u8fc7\uff0c\u77ed\u7684\u4e5f\u5fc5\u7136\u51fa\u73b0\u8fc7\uff0cbitset \u5f88\u660e\u663e\u5b58\u4e86\u592a\u591a\u5197\u4f59\u7684\u4fe1\u606f\u3002\n\n\u7531\u4e0a\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u72b6\u6001\u8bb0\u5f55 $\\text{Max}_i$ \u8868\u793a\u5230\u8fbe\u8fc7\u8fd9\u4e2a\u70b9\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6700\u540e $\\text{ans} = \\sum{\\text{Max}_i-len_{link_i}}$ \u5c31\u5b8c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n____\n\n\u8003\u573a\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int maxn = 6e3+5;\ninline int max(int a,int b){return a>b?a:b;}\nint n,ans,maxx[maxn],tmax[maxn];\nchar s[maxn],t[maxn];\nint ch[maxn][26],len[maxn],link[maxn],sz,last;\nvoid append(int x){\n\tint cur = ++sz,p = last;\n\tlen[cur] = len[p]+1;\n\twhile(~p&&!ch[p][x])ch[p][x] = cur,p = link[p];\n\tif(p == -1)link[cur] = 0;\n\telse{\n\t\tint q = ch[p][x];\n\t\tif(len[q] == len[p]+1)link[cur] = q;\n\t\telse{\n\t\t\tint nq = ++sz;\n\t\t\tlen[nq] = len[p]+1,link[nq] = link[q],link[q] = link[cur] = nq,memcpy(ch[nq],ch[q],104);\n\t\t\twhile(~p&&ch[p][x]==q)ch[p][x] = nq,p = link[p];\n\t\t}\n\t}\n\tlast = cur;\n}\nint main(){\n//\tfreopen(\"block.in\",\"r\",stdin);\n//\tfreopen(\"block.out\",\"w\",stdout);\n\tlink[sz=last=0]=-1;\t\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s+1);\n\tscanf(\"%s\",t+1);\n\tfor(int i=1;i<=n;++i)append(t[i]-'a');\n\tfor(int i=1;i<=sz;++i)maxx[i] = -1;\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=0;j<=sz;++j)tmax[i] = 0;\n\t\tfor(int j=0;j<=sz;++j)\n\t\t\tif(maxx[j] != -1 && ch[j][s[i]-'a'])\n\t\t\t\ttmax[ch[j][s[i]-'a']] = max(tmax[ch[j][s[i]-'a']],maxx[j]+1);\n\t\tfor(int j=0;j<=sz;++j)maxx[j] = max(maxx[j],tmax[j]);\n\t}  \n\tfor(int i=1;i<=sz;++i)\n\t\tans += max(0,maxx[i]-len[link[i]]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1616826846,
        "uid": 114153,
        "name": "Sali\u0435ri",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 \u79ef\u6728\u5c0f\u8d5b"
    },
    {
        "content": "\u8003\u8651\u5bf9 A \u5efa\u7acb\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0cB \u679a\u4e3e\u5b50\u4e32\u3002\r\n\r\n\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e00\u5f20\u56fe\uff0c\u4e8e\u662f\u53ef\u4ee5 $O(1)$ \u4ece $[l,r]$ \u7684\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u8282\u70b9\u8f6c\u79fb\u5230 $[l,r+1]$ \u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u8282\u70b9\u3002\r\n\r\n\u666e\u901a\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u8f6c\u79fb\u662f $O(\\log n)$\uff0c\u7531\u4e8e\u8fd9\u91cc\u5b57\u5178\u5927\u5c0f\u662f 26\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4 26 \u4e2a\u6570\u7ec4\uff0c\u4fdd\u7559\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u7684\u4e0b\u4e00\u4e2a\u51fa\u73b0\u4f4d\u7f6e\u3002\r\n\r\n\u6ce8\u610f B \u7684\u5b50\u4e32\u53ea\u80fd\u7edf\u8ba1\u672c\u8d28\u4e0d\u540c\uff0c\u8fd9\u6b65\u6709\u5f88\u591a\u65b9\u6cd5\u5224\u91cd\uff0c\u6211\u91c7\u7528\u4e86\u53cc\u54c8\u5e0c\u3002\r\n\r\n\u6765\u7ef4\u62a4\u54c8\u5e0c\uff0c\u4e0d\u8981\u7528 set\uff0c\u76f4\u63a5\u5b58\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c\u6700\u540e\u6392\u5e8f\u5e76 unique\u3002\r\n\r\n\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n// writer: w33z8kqrqk8zzzx33\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\r\n#define rep(i, a) iter(i, 0, a)\r\n#define rep1(i, a) iter(i, 1, (a)+1)\r\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\r\n#define all(a) a.begin(), a.end()\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define mp make_pair\r\n\r\n//#define int ll\r\n\r\nconst int MOD1=1000000009,BASE1=220037,INV1=780782330;\r\nconst int MOD2=998244853,BASE2=69420,INV2=81432737;\r\n\r\nint alice[3005],bob[3005];\r\nint nx[26][3005];\r\nlong long ar[4515012];\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false); cin.tie(0);\r\n\tint n;\r\n\tcin>>n;\r\n\tmemset(nx,-1,sizeof nx);\r\n\t{\r\n\t\tstring a,b;\r\n\t\tcin>>a>>b;\r\n\t\trep1(i,n)alice[i]=a[i-1]-'a';\r\n\t\trep1(i,n)bob[i]=b[i-1]-'a';\r\n\t}\r\n\trep1(i,n)\r\n\t\tnx[alice[i]][i-1]=i;\r\n\trep(c,26)\r\n\t\tfor(int i=n;i>=0;i--)\r\n\t\t\tif(nx[c][i]==-1)\r\n\t\t\t\tnx[c][i]=nx[c][i+1];\r\n\tint cnt=0;\r\n\trep1(i,n){\r\n\t\tlong long curhash1=0,curhash2=0;\r\n\t\tint pos=0;\r\n\t\titer(j,i,n+1){\r\n\t\t\tcurhash1=(curhash1*BASE1+bob[j]+1)%MOD1;\r\n\t\t\tcurhash2=(curhash2*BASE2+bob[j]+1)%MOD2;\r\n\t\t\tpos=nx[bob[j]][pos];\r\n\t\t\tif(pos==-1)break;\r\n\t\t\tar[cnt++]=(curhash1<<32)|curhash2;\r\n\t\t}\r\n\t}\r\n\tint ans=0;\r\n\tif(cnt){\r\n\t\tsort(ar,ar+cnt);\r\n\t\tans=1;\r\n\t\trep1(i,cnt-1)ans+=1-(ar[i]==ar[i-1]);\r\n\t}\r\n\tcout<<ans<<endl;\r\n}\r\n\r\n```",
        "postTime": 1616819080,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7469 [NOI Online 2021 #2 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b\uff08\u6c11\u95f4\u6570\u636e\uff09"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $S$ \u548c $T$\uff0c\u6c42 $S$ \u4e2d\u6709\u591a\u5c11\u4e2a\u672c\u8d28\u4e0d\u540c\u5b50\u5e8f\u5217\u662f $T$ \u7684\u5b50\u4e32\u3002\n\n**\u6570\u636e\u8303\u56f4**\uff1a$n \\le 3000$\uff0c\u5b57\u7b26\u96c6 $\\Sigma=\\{a,b,\\cdots,z\\}$\u3002\n\n## \u9898\u89e3\n\n\u7531\u4e8e $T$ \u7684\u5b50\u4e32\u53ea\u6709 $O(n^2)$ \u4e2a\uff0c\u518d\u52a0\u4e0a**\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u53ea\u9700\u8d2a\u5fc3\u9009\u53d6**\uff0c\u6211\u4eec\u53ea\u9700**\u6c42\u51fa\u6240\u6709\u6ee1\u8db3\u9898\u610f\u7684 $T$ \u7684\u5b50\u4e32\u7136\u540e\u53bb\u91cd**\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u679a\u4e3e $T$ \u5b50\u4e32\u7684\u5de6\u7aef\u70b9 $l$\uff0c\u4f9d\u6b21\u8003\u8651\u53f3\u7aef\u70b9\u4e3a $l,l+1,\\cdots,n$\uff0c\u6bcf\u6b21\u5728 $S$ \u4e2d\u627e\u5230\u4e0a\u4e00\u6b21\u4f4d\u7f6e\u4ee5\u540e\uff0c\u7b2c\u4e00\u4e2a\u4e0e $T$ \u5f53\u524d\u5b57\u7b26\u76f8\u540c\u7684\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u7aef\u70b9\u53ea\u4f1a\u904d\u5386\u4e00\u6b21 $S$\uff0c\u56e0\u6b64\u662f $O(n^2)$ \u7684\u3002\n\n\u800c**\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u4e2a\u6570**\uff0c\u5bb9\u6613\u60f3\u5230 Hash\u3002\u76f4\u63a5\u6392\u5e8f\u6216\u8005\u4f7f\u7528 map \u662f $O(n^2\\log{n})$ \u7684\uff0c\u4f3c\u4e4e\u4e0d\u592a\u53ef\u884c\u3002\u518d\u52a0\u4e0a\u6b63\u786e\u7387\u7684\u8003\u8651\uff0c\u7b14\u8005\u4f7f\u7528\u4e86\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a**\u4f7f\u7528\u6876\u6392\u7684\u601d\u60f3\u5bf9\u540c\u4e00\u957f\u5ea6\u7684\u5b50\u4e32\u8fdb\u884c\u6392\u5e8f**\u3002\uff08\u5f53\u7136\u53ef\u4ee5\u4f7f\u7528\u5176\u5b83\u5b57\u7b26\u4e32\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u672c\u4eba\u592a\u83dc\u4e86\u60f3\u4e0d\u5230\uff09\n\n\u5177\u4f53\u505a\u6cd5\uff1a\u4f9d\u6b21\u8003\u8651\u957f\u5ea6\u4e3a $1,2,\\cdots,n$ \u7684\u5b50\u4e32\uff0c\u8bbe\u5f53\u524d\u8003\u8651\u7684\u957f\u5ea6\u4e3a $l$\uff0c\u5c06\u957f\u5ea6\u4e3a $l-1$ \u65f6\u88ab\u89c6\u4e3a\u76f8\u540c\u7684\u8d77\u59cb\u4f4d\u7f6e\u5206\u522b\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u867d\u7136\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2|\\Sigma|)$\uff0c\u4f46\u6ce8\u610f\u5230\u6211\u4eec**\u53ea\u9700\u6c42\u5f97\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c\uff0c\u800c\u65e0\u9700\u5f97\u77e5\u5b83\u4eec\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\u5173\u7cfb\uff0c\u56e0\u6b64\u53ea\u9700\u7ed9\u6bcf\u4e00\u7ec4\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u540c\u4e00\u4e2a\u7f16\u53f7\uff0c\u800c\u65e0\u9700\u904d\u5386\u6574\u4e2a\u6876\u4ee5\u7f16\u53f7\uff0c\u65f6\u95f4\u590d\u6742\u5ea6** $O(n^2)$\u3002\n\n## \u4ee3\u7801\n\n\u6709\u8be6\u7ec6\u6ce8\u91ca\u54df~\n\nPS\uff1a\u5c06 vector \u6362\u6210\u4e8c\u7ef4\u6570\u7ec4\u5e38\u6570\u53ef\u80fd\u4f1a\u5c0f\u4e00\u70b9\uff0c\u4f46\u662f\u7b14\u8005\u61d2\u5f97\u6539\u4e86\u3002\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int max_n=3e3+5;\nchar s[max_n],t[max_n];\nint rk[max_n][max_n]; // rk[l][i] \u662f\u5b50\u4e32 t[i,i+l-1] \u7684\u7f16\u53f7 \nvector<int> pos[max_n],pos1[max_n]; // pos[i] \u5b58\u50a8\u5f53\u524d\u7f16\u53f7\u4e3a i \u7684\u5b50\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0cpos1[i] \u7528\u4e8e\u4e34\u65f6\u5b58\u50a8\u4e0b\u4e00\u6b21\u7684 pos[i] \nint id[30]; //\u67d0\u4e00\u7f16\u53f7\u7684\u5b50\u4e32\u52a0\u4e0a\u65b0\u7684\u5b57\u7b26\u6240\u5f97\u5230\u65b0\u5b50\u4e32\u7684\u7f16\u53f7 \nvector<int> p[max_n]; // p[l] \u5b58\u50a8\u957f\u5ea6\u4e3a l \u7684\u6ee1\u8db3\u9898\u610f\u7684\u8d77\u59cb\u4f4d\u7f6e \nbool mark[max_n];\nint st[max_n],Top; //\u5b58\u50a8\u8bbf\u95ee\u8fc7\u7684\u4f4d\u7f6e \nint main()\n{\n\tint n;\n\tscanf(\"%d%s%s\",&n,s+1,t+1);\n\tint Max=1; //\u5f53\u524d\u6700\u5927\u7f16\u53f7 \n\tfor(int i=1;i<=n;++i)\n\t\tpos[1].push_back(i); //\u4e00\u5f00\u59cb\u6240\u6709\u7f16\u53f7\u4e3a 1 \n\tfor(int l=1;l<=n;++l)\n\t{\n\t\tfor(int j=0;j<26;++j)\n\t\t\tid[j]=0; //\u53ea\u9700\u5728\u6bcf\u79cd\u957f\u5ea6\u4e00\u5f00\u59cb\u6e05\u7a7a \n\t\tint Max1=0;\n\t\tfor(int i=1;i<=Max;++i)\n\t\t{\n\t\t\tint Last=Max1; //\u8fd9\u4e00\u8f6e\u5f00\u59cb\u4e4b\u524d\u7684\u6700\u5927\u7f16\u53f7 \n\t\t\tfor(vector<int>::iterator it=pos[i].begin();it!=pos[i].end();++it)\n\t\t\t{\n\t\t\t\tint x=*it;\n\t\t\t\tif(id[t[x+l-1]-'a']<=Last) //\u8fd9\u4e2a\u5b57\u7b26\u5728\u8fd9\u4e00\u8f6e\u65b0\u51fa\u73b0 \n\t\t\t\t\tid[t[x+l-1]-'a']=++Max1;\n\t\t\t\trk[l][x]=id[t[x+l-1]-'a'];\n\t\t\t\tpos1[rk[l][x]].push_back(x);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=Max;++i)\n\t\t\tpos[i].clear(); //\u5148\u6e05\u7a7a pos \n\t\tfor(int i=1;i<=Max1;++i)\n\t\t{\n\t\t\tfor(vector<int>::iterator it=pos1[i].begin();it!=pos1[i].end();++it)\n\t\t\t{\n\t\t\t\tint x=*it;\n\t\t\t\tif(x+l<=n) //\u5c06 pos1 \u590d\u5236\u7ed9 pos\uff08\u53bb\u6389\u4e0b\u4e00\u8f6e\u4e0d\u518d\u51fa\u73b0\u7684\u8d77\u59cb\u4f4d\u7f6e\uff09 \n\t\t\t\t\tpos[i].push_back(x);\n\t\t\t}\n\t\t\tpos1[i].clear();\n\t\t}\n\t\tMax=Max1; //\u5c06 Max1 \u590d\u5236\u7ed9 Max \n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint now=1;\n\t\tfor(int j=i;j<=n;++j)\n\t\t{\n\t\t\twhile(now<=n&&s[now]!=t[j]) //\u8d2a\u5fc3\u9009\u53d6 \n\t\t\t\t++now;\n\t\t\tif(now>n)\n\t\t\t\tbreak;\n\t\t\tp[j-i+1].push_back(i);\n\t\t\t++now; //\u4e0b\u6b21\u5e94\u4ece\u4e0b\u4e00\u4e2a\u5b57\u7b26\u5f00\u59cb \n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(vector<int>::iterator it=p[i].begin();it!=p[i].end();++it)\n\t\t{\n\t\t\tint x=*it;\n\t\t\tif(!mark[rk[i][x]])\n\t\t\t{\n\t\t\t\t++ans;\n\t\t\t\tmark[rk[i][x]]=true;\n\t\t\t\tst[++Top]=rk[i][x];\n\t\t\t}\n\t\t}\n\t\twhile(Top>0)\n\t\t\tmark[st[Top--]]=false; //\u7531\u4e8e\u7f16\u53f7\u53ef\u80fd\u4f1a\u6bd4\u8f83\u5927\uff0c\u4e0d\u80fd\u76f4\u63a5\u6e05\u7a7a\uff0c\u53ea\u80fd\u6e05\u7a7a\u8bbf\u95ee\u8fc7\u7684\u90e8\u5206 \n\t}\n\tprintf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n## \u540e\u8bb0\n\n\u672c\u4eba\u8d5b\u65f6\u5199\u7684\u662f\u9898\u89e3\u4e2d\u63d0\u5230\u7684\u90a3\u4e2a\u672a\u7ecf\u4f18\u5316\u7684\u6876\u6392\uff08\u4ee3\u7801\u6233[\u8fd9\u91cc](https://www.luogu.com.cn/paste/ndq3qlrr)\uff09\uff0c\u4f46\u5f53\u65f6\u5b8c\u5168\u6ca1\u610f\u8bc6\u5230\u6709\u4e00\u4e2a $|\\Sigma|$ \u5728\u590d\u6742\u5ea6\u91cc\uff0c\u5c31\u8fde\u6d4b\u6c11\u95f4\u6570\u636e TLE \u65f6\u90fd\u4ee5\u4e3a\u662f vector \u5e38\u6570\u592a\u5927\uff0c\u5bfc\u81f4 $100 \\rightarrow 70$\u3002o(\u2565\ufe4f\u2565)o\n\n\u6240\u4ee5\u5728\u6b64\u63d0\u9192\u5e7f\u5927 OIer\uff1a**\u4e00\u5b9a\u8981\u8ba4\u771f\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e14\u6bd4\u8d5b\u65f6\u6709\u6761\u4ef6\u7684\u8bdd\u8981\u751f\u6210\u5927\u6570\u636e\u6d4b\u4e00\u6d4b\uff01**\n\n------------\n\n~~\u8bdd\u8bf4\u4f7f\u7528 Hash \u7684 CCF \u662f\u5982\u4f55\u4fdd\u8bc1\u6570\u636e\u6b63\u786e\u6027\u7684~~",
        "postTime": 1616834873,
        "uid": 145355,
        "name": "wsyhb",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011\u6d1b\u8c37 P7469 [NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b"
    },
    {
        "content": "## \u7b80\u8981\u9898\u610f\uff1a\n\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 $A,B$\n\n\u6c42\u51fa $B$ \u7684\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u4e2d\u662f $A$ \u7684\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\n\n\u9996\u5148\u8003\u8651\u5c06 **\u5b50\u4e32** \u8f6c\u5316\u4e3a**\u540e\u7f00\u7684\u524d\u7f00**\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6574\u4e2a\u540e\u7f00\u6765\u83b7\u53d6\u6574\u4e2a $B$ \u7684 **\u5b50\u4e32**\u3002\n\n\u679a\u4e3e\u540e\u7f00\u662f $O(n)$ \u7684\uff0c\u518d\u7528\u6574\u4e2a\u540e\u7f00\u53bb\u4e0e $A$ \u5339\u914d\u3002\n\n\u4e0d\u59a8\u8bbe\u8fd9\u4e2a\u540e\u7f00\u4e3a $S_{1-i}$\n\n\u56e0\u4e3a $S_{1-i}$ \u662f $A$ \u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48 $S_{1-(i-1)}$ \u4e5f\u4e00\u5b9a\u662f $A$ \u7684\u5b50\u5e8f\u5217\u3002\n\n\u4e8e\u662f\u53ef\u4ee5 $O(n)$ \u6a21\u62df\u5f97\u5230\u8fd9\u4e2a\u540e\u7f00\u5728 $A$ \u4e2d\u7684\u6700\u957f\u5339\u914d\u957f\u5ea6\u3002\n\n\u800c\u6574\u4e2a\u540e\u7f00\u7684\u524d\u7f00\u4e2d\uff0c\u53ea\u8981 $\\leq$ \u8fd9\u4e2a\u957f\u5ea6\uff0c\u4e00\u5b9a\u90fd\u662f $A$ \u7684\u5b50\u5e8f\u5217\u3002\n\n\n\u603b\u4f53\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u4f46\u662f\u7b54\u6848\u8981\u6c42\u7684\u662f\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u3002\n\n\u6240\u4ee5\u7528\u4e00\u4e2a\u53cc\u54c8\u5e0c\u5224\u91cd\u5373\u53ef\u3002\uff08\u8003\u573a\u4e0a\u5199\u4e863\u4e2a\u54c8\u5e0c\u3002\u3002\uff09\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst ll MOD=19260919,base=173,MOD2=23532139,base2=239,MOD3=33532139,base3=337;\nconst int N=3005;\n\ntemplate <typename T>\ninline void read(T &x){\n    x=0;char ch=getchar();bool f=false;\n    while(!isdigit(ch)) f|=ch=='-',ch=getchar();\n    while(isdigit(ch))  x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    x=f?-x:x;\n}\ntemplate <typename T>\ninline void print(T x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) print(x/10);\n    putchar(x%10^48);\n}\nint n,pi[N],ans;\nstring a,b,tep,ptr,res;\npair<ll,ll> str[N*N];\nint head[MOD+2],Next[N*N],tot;\ninline void Add(int u,pair<ll,ll> ins){Next[++tot]=head[u],str[tot]=ins,head[u]=tot;}\ninline bool Find(int u,pair<ll,ll> goal){\n    for(register int i=head[u];i;i=Next[i]){\n        if(str[i].first==goal.first&&str[i].second==goal.second)   return true;\n    }\n    return false;\n}\nll has1,has2,has3;\nint main(){\n    // freopen(\"block.in\",\"r\",stdin);\n    // freopen(\"block.out\",\"w\",stdout);\n    read(n);\n    cin>>a>>b;\n    for(register int st=0;st<n;++st){\n        ptr=b.substr(st,n-st);\n        int loc=0;\n        for(register int i=0;i<n;++i){if(a[i]==ptr[loc])  loc++;}\n        res=\"\";has1=0,has2=0,has3=0;\n        for(register int i=0;i<loc;++i){\n            res+=ptr[i];\n            has1=(has1*base+ptr[i]-'0')%MOD;\n            has2=(has2*base2+ptr[i]-'0')%MOD2;\n            has3=(has3*base3+ptr[i]-'0')%MOD3;\n            if(!Find(has1,make_pair(has2,has3))){\n                Add(has1,make_pair(has2,has3));\n                ans++;\n            }\n            // cout<<res<<endl;\n        }\n    }\n    print(ans);\n    // puts(\"\");\n    // printf(\"%.6lf\\n\",(clock()-st)/CLOCKS_PER_SEC);\n    return 0;\n}\n/*\n5\nbcabc\nbbcca\n*/\n\n```",
        "postTime": 1616823010,
        "uid": 67621,
        "name": "NuoCarter",
        "ccfLevel": 7,
        "title": "P7469 [NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b\uff08\u6c11\u95f4\u6570\u636e\uff09 \u9898\u89e3"
    },
    {
        "content": "## \u4e00\u4e9b\u5e9f\u8bdd\n\n\u8d5b\u540e\u56db\u5341\u5206\u949f\u5212\u4e86\u5212\u6c34\u7136\u540e\u6572\u51fa\u80fd\u8fc7 w33z \u6570\u636e\u7684\u4ee3\u7801\u3002\u4ea4\u7ed9 ccf \u7684\u5f97\u4e86 80 pts\u3002\n\n\u8fd9\u6b21\u9898\u76ee\u96be\u5ea6\u660e\u663e B < A\uff0c\u4e0b\u9762\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u7b80\u5355\u7684\u505a\u6cd5\u3002\n\n## \u9898\u610f\n\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $S$ \u548c $T$\u3002\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n- \u5220\u9664 $S$ \u4e2d\u7684\u4efb\u610f\u5b57\u7b26\n- \u5220\u9664 $T$ \u4e2d\u7684\u4efb\u610f\u524d\u7f00\u548c\u4efb\u610f\u540e\u7f00\n\n\uff08\u53ef\u4ee5\u9009\u62e9\u4e0d\u5220\uff0c\u4f46\u4e0d\u80fd\u5220\u6210\u7a7a\u4e32\uff09\u8981\u6c42\u6700\u7ec8\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u6c42\u4e00\u5171\u6709\u591a\u5c11\u79cd\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u3002\n\n## \u5206\u6790\n\n\u6570\u636e\u8303\u56f4 $1\\le n\\le 3000$\uff0c\u77e5\u9053\u9700\u8981\u4f7f\u7528 $n^2$ \u7684\u7b97\u6cd5\u3002\n\n\u8003\u8651\u679a\u4e3e $T$\u3002\u53d1\u73b0\u65e0\u975e\u5c31\u662f\u679a\u4e3e\u5176**\u6bcf\u4e2a\u540e\u7f00\u7684\u524d\u7f00**\uff0c\u8fd9\u6837\u679a\u4e3e\u662f $O(n^2)$ \u7684\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u73b0\u5728\u8003\u8651\u600e\u4e48\u5728 $S$ \u4e2d $O(1)$ \u5224\u65ad\u662f\u5426\u80fd\u5339\u914d\u3002\u6ce8\u610f\u5230\u6211\u4eec\u662f\u5728\u679a\u4e3e\u524d\u7f00\uff0c\u56e0\u6b64\u82e5**\u957f\u5ea6\u4e3a $m + 1$ \u7684\u524d\u7f00\u80fd\u5339\u914d\uff0c\u90a3\u4e48\u957f\u5ea6\u4e3a $m$ \u7684\u524d\u7f00\u5fc5\u7136\u4e5f\u80fd\u5339\u914d**\u3002\u8003\u8651\u5904\u7406\u51fa $p_{i,j}$ \u6570\u7ec4\u8868\u793a\u5728 $(i,n]$ \u4e2d\u5b57\u7b26 $j$ \u7684**\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e**\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a $p$ \u6570\u7ec4\u5728\u679a\u4e3e\u524d\u7f00\u7684\u540c\u65f6\u5728 $S$ \u91cc\u9762\u8df3\u6307\u9488\uff0c\u56e0\u4e3a\u5904\u7406\u7684\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u6240\u4ee5\u4e0d\u9700\u8981\u62c5\u5fc3\u6f0f\u6389\u60c5\u51b5\u3002**\u82e5\u9047\u5230\u4e0d\u80fd\u5339\u914d\u7684\u524d\u7f00\u4e86\uff0c\u8bf4\u660e\u66f4\u957f\u7684\u524d\u7f00\u4e5f\u80af\u5b9a\u65e0\u6cd5\u5339\u914d**\uff0c\u76f4\u63a5 `break` \u5373\u53ef\u3002\n\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5224\u65ad $T$ \u7684\u4e00\u4e2a\u5b50\u6bb5\u662f\u5426\u5408\u6cd5\u4e86\uff0c\u4f46\u662f\u8fd9\u6837\u5b50\u5199\u662f\u8fde\u7b2c\u4e00\u4e2a\u6837\u4f8b\u90fd\u8fc7\u4e0d\u53bb\u7684\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n> \u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u4ed6\u4eec\u6700\u540e\u5269\u4e0b\u7684\u4e24\u6392\u79ef\u6728\u662f\u76f8\u540c\u7684\n\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u8fdb\u884c\u53bb\u91cd\uff0c\u7531\u4e8e hash \u7684\u4e0d\u786e\u5b9a\u6027\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528 hash \u800c\u662f\u4f7f\u7528\u9b54\u6539\u4e86\u7684 Trie\u3002\u5728\u679a\u4e3e\u524d\u7f00\u7684\u65f6\u5019\u540c\u65f6\u7528\u4e00\u4e2a\u6307\u9488\u5728 Trie \u4e0a\u81ea\u4e0a\u800c\u4e0b\u8d70\uff0c\u82e5\u8d70\u5230\u4e86\u7a7a\u70b9\u5c31\u8bb0\u5f55\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n## \u5b9e\u73b0\n\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\uff0c\u6700\u591a\u53ef\u4ee5\u6709 $3000\\times 3000\\div 2= 4.5\\times 10^6$ \u79cd\u4e0d\u4e00\u6837\u7684\u5b50\u4e32\uff0c\u6240\u4ee5\u5199 Trie \u6811\u4e0d\u80fd\u50cf\u5e73\u65f6\u4e00\u6837\u5199 `int ch[maxn][26]`\uff0c\u8fd9\u6837\u5728\u672c\u9898\u4f1a\u6536\u83b7 80 \u5206\u7684\u597d\u6210\u7ee9\u3002\n\n\u4f46\u5982\u679c\u6211\u4eec\u53ea\u8bb0\u5f55 Trie \u4e0a\u5b58\u5728\u7684\u8fb9\uff0c\u7a0d\u52a0\u5206\u6790\u5373\u53ef\u5f97\u8fd9\u6837\u662f\u53ef\u4ee5\u5361\u8fc7\u7a7a\u95f4\u7684\uff0c\u81f3\u4e8e\u65f6\u95f4\u5c31\u662f $O(|S|n^2)$\uff08\u679a\u4e3e Trie \u7684\u51fa\u8fb9\uff09\uff0c\u5176\u4e2d $|S|$ \u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\uff08$26$\uff09\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u5c31\u662f $O(n^2)$\uff0c\u800c\u4e14\u62e5\u6709\u4e00\u4e2a\u6839\u672c\u5361\u4e0d\u6ee1\u7684\u4e0a\u754c\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define FOR(i, a, b) for (int i = a; i <= b; ++i)\n#define DEC(i, a, b) for (int i = a; i >= b; --i)\n\nconst int maxn = 3005;\n\nint n;\nchar s[maxn], t[maxn];\n\nint pos[maxn][26];\nint last[maxn][maxn];\n\nint head[maxn * maxn / 2], to[maxn * maxn / 2], nxt[maxn * maxn / 2], cnte, tot;\nchar trie[maxn * maxn / 2];\n\nvoid add(int u, int v)\n{\n    to[++cnte] = v;\n    nxt[cnte] = head[u];\n    head[u] = cnte;\n    return;\n}\n\nint main()\n{\n    scanf(\"%d\", &n);\n    scanf(\"%s\", s + 1);\n    scanf(\"%s\", t + 1);\n    FOR(i, 1, n)\n    {\n        FOR(j, i + 1, n)\n            if (!pos[i][s[j] - 'a'])\n                pos[i][s[j] - 'a'] = j;\n        if (!pos[0][s[i] - 'a'])\n            pos[0][s[i] - 'a'] = i;\n    }\n    int ans = 0;\n    FOR(i, 1, n)\n    {\n        if (!pos[0][t[i] - 'a']) continue;\n        int p = 0;\n        FOR(j, i, n)\n        {\n            if (pos[last[i][j - 1]][t[j] - 'a'])\n            {\n                last[i][j] = pos[last[i][j - 1]][t[j] - 'a'];\n                bool flag = 0;\n                for (int i = head[p]; i; i = nxt[i])\n                {\n                    if (trie[to[i]] == t[j])\n                    {\n                        flag = 1;\n                        p = to[i];\n                        break;\n                    }\n                }\n                if (!flag)\n                {\n                    ++ans, trie[++tot] = t[j];\n                    add(p, tot);\n                    p = tot;\n                }\n            }\n            else break;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1616821512,
        "uid": 212488,
        "name": "\u6e05\u70db",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7469 [NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b\uff08\u6c11\u95f4\u6570\u636e\uff09"
    },
    {
        "content": "### \u524d\u8a00\n\n\u8fd9\u4e2a\u9898\u6211\u7684\u65b9\u6cd5\u5929\u4e0b\u552f\u4e00\u3002\n\n~~\u5c31\u662f\u5e38\u6570\u6709\u70b9\u5927\uff0c\u5e0c\u671bCCF\u7684\u94b1\u62ff\u53bb\u4e70\u4e2a\u5feb\u70b9\u7684\u8bc4\u6d4b\u673aorz~~\n\n### \u89e3\u6cd5\n\n\u8003\u8651\u4e0d\u53bb\u91cd\u3002\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a $nxt_{i,j}$\uff0c\u8868\u793a\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u5f80\u540e\u6700\u8fd1\u7684\u4e00\u4e2a\u5b57\u7b26 $j$ \u5728\u54ea\u4e2a\u4f4d\u7f6e\u3002\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e $b$ \u4e32\u7684\u8d77\u70b9\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5f80\u540e\u5339\u914d\u3002\u8d2a\u5fc3\u7684\u9009\u62e9\u6613\u8bc1\u6700\u4f18\uff0c\u6211\u4eec\u7528 $nxt$ \u6570\u7ec4\u6765\u5f80\u540e\u627e\u5373\u53ef\uff0c\u53ea\u8981\u5230\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u6ca1\u6cd5\u7ee7\u7eed\u4e86\uff0c\u5c31\u6362\u4e00\u4e2a\u8d77\u70b9\uff0c\u91cd\u590d\u4ee5\u4e0a\u8fc7\u7a0b\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u53bb\u91cd\u4e86\u3002\n\n\u5f88\u591a\u5927\u4f6c\u63d0\u4f9b\u7684\u65b9\u6848\u662f hash\u3002\u6211\u5728\u8003\u573a\u4e0a\u4e5f\u60f3\u5230\u4e86\uff0c\u7531\u4e8e\u672c\u4eba hash \u4e0d\u7cbe\uff0c\u6240\u4ee5\u6ca1\u5199 hash\u3002\u4f46\u662f\u6211\u60f3\u5230\u53e6\u5916\u4e00\u4e2a\u65b9\u6cd5\uff0c\u666e\u53ca\u7ec4\u9009\u624b\u4e5f\u80fd\u770b\u61c2\u3002\n\n\u65e2\u7136\u8981\u53bb\u91cd\uff0c\u6211\u4eec\u53ea\u8981\u8ba9\u6240\u6709\u6709\u76f8\u540c\u524d\u7f00\u7684\u5b50\u4e32\u4e00\u8d77\u8ba1\u7b97\u5c31\u597d\u5566\u5440\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5b57\u7b26\uff0c\u6162\u6162\u6269\u5c55\u6210\u5f88\u591a\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u4e3a\u6b62\u3002\u9012\u5f52\u8ba1\u7b97\u5373\u53ef\u3002\n\n\u8bf4\u5f97\u660e\u767d\u4e00\u70b9\uff0c\u4e5f\u5c31\u662f\u4f60\u5efa\u4e00\u9897 trie \u6811\uff0c\u76f4\u5230\u5efa\u4e0d\u4e0b\u53bb\u4e3a\u6b62\u3002\n\n\u53ef\u80fd\u770b\u4ee3\u7801\u660e\u767d\u5feb\u4e00\u70b9\u5427\u3002\u4ee3\u7801\u4e2d\u7684 stack \u53ef\u4ee5\u6362\u6210 queue \u6216\u8005 deque\uff0c\u6ca1\u4ec0\u4e48\u5927\u5173\u7cfb\u3002\n\n~~\u5c31\u662f\u5e38\u6570\u5927\u4e86\u70b9\uff0c\u9700\u8981\u5438\u6c27\u8fc7\u51a5\u95f4\u6570\u636eqwq~~\n\n### \u4ee3\u7801\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int MAXN=3000+10;\n\nint n,ans;\nint a[MAXN],b[MAXN],nxt[MAXN][30];\nchar c;\n//map<string,bool> s;\nstack<int> stk[MAXN][28];\n\nvoid solve(int p,int lvl,int val) {\n\tif(p==-1||stk[lvl][val].empty()) {\n\t\twhile(!stk[lvl][val].empty()) {\n\t\t\tstk[lvl][val].pop();\n\t\t}\n\t\treturn ;\n\t}\n\tif(lvl) {\n\t//\tcout<<s<<\"\\n\";\n\t\tans++;\n\t}\n\twhile(!stk[lvl][val].empty()) {\n\t\tint t=stk[lvl][val].top()+1;\n\t\tif(t<=n)\n\t\t\tstk[lvl+1][b[t]].push(t);\n\t\tstk[lvl][val].pop();//stack\u53ef\u4ee5\u91cd\u590d\u5229\u7528\n\t}\n\t\n\tfor(int i=1;i<=26;i++) {\n\t\tsolve(nxt[p][i],lvl+1,i);\n\t}\n}\n\nsigned main() {\n\tfreopen(\"block.in\",\"r\",stdin);\n\tfreopen(\"block.out\",\"w\",stdout);\n\t\n\tn=read();\n\tfor(int i=1;i<=n;i++) {\n\t\tcin>>c;\n\t\ta[i]=c-'a'+1;\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tcin>>c;\n\t\tb[i]=c-'a'+1;\n\t}\n\t\n    //\u6784\u5efanxt\u6570\u7ec4\n\tfor(int i=1;i<=26;i++) {\n\t\tnxt[n][i]=-1;\n\t}\n\tfor(int i=n-1;i>=0;i--) {\n\t\tfor(int j=1;j<=26;j++) {\n\t\t\tif(j==a[i+1]) {\n\t\t\t\tnxt[i][j]=i+1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnxt[i][j]=nxt[i+1][j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/*for(int i=1;i<=n;i++) {\n\t\tint p=0;\n\t\tstring str=\"\";\n\t\tfor(int j=i;j<=n;j++) {\n\t\t\t\n\t\t\tp=nxt[p][b[j]];\n\t\t\tif(p!=-1) {\n\t\t\t\tans++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}*/\n\tfor(int i=1;i<=n;i++) {\n\t\tstk[0][0].push(i-1);\n\t}\n\tsolve(0,0,0);\n\t\n\tcout<<ans<<endl;\n\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n\n```",
        "postTime": 1616835339,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "[NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b"
    },
    {
        "content": "## \u524d\u8a00\n\u8003\u573a\u4e0a\u552f\u4e00\u4f1a\u505a\u7684\u9898\u3002\n\n\u7136\u800c\u6211\u6700\u540e\u53d1\u73b0\u6211\u79c0\u4e86\u516b\u767e\u5e74\u7684\u4e24\u904d\u62d3\u6251\u6392\u5e8f\u53ea\u9700\u8981\u4e94\u884c dfs \u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u81ea\u95ed\u4e86\u3002\n\n## \u9898\u76ee\u5206\u6790\n\u5bb9\u6613\u60f3\u5230 [P4112 [HEOI2015]\u6700\u77ed\u4e0d\u516c\u5171\u5b50\u4e32](https://www.luogu.com.cn/problem/P4112)\u3002\n\n\u4e8e\u662f\u5bf9\u4e24\u4e32\u5206\u522b\u5efa\u7acb\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u4e0e\u540e\u7f00\u81ea\u52a8\u673a\u3002\u7136\u540e\u5c1d\u8bd5\u6309\u8be5\u9898\u601d\u8def\u5e7f\u641c\u672a\u679c\u3002\u4e8e\u662f\u60f3\u5230\u4e24\u904d\u62d3\u6251\u6392\u5e8f\u540e DP\uff08\u4e0d\u8981\u95ee\u6211\u600e\u4e48\u60f3\u5230\u7684\uff09\u3002\n\n\u597d\uff0c\u8fd9\u4e0d\u91cd\u8981\u3002\u4e0b\u573a\u4e4b\u540e\u8003\u8651\u672c\u8d28\u3002\n\n\u53d1\u73b0\u540e\u7f00\u81ea\u52a8\u673a\u4e8b\u5b9e\u4e0a\u53ea\u505a\u4e86\u5bf9\u5b50\u4e32\u53bb\u91cd\u7684\u5de5\u4f5c\u3002\u4e8e\u662f\u53ef\u4ee5\u6df1\u641c\u540e\u7f00\u81ea\u52a8\u673a\u6bcf\u4e00\u6761\u8def\u5f84\uff0c\u540c\u65f6\u5c1d\u8bd5\u5728\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u4e0a\u5339\u914d\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\operatorname{O}(size\\cdot n^2)$\uff0c$size$ \u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\uff0c\u662f\u7531 dfs \u4e2d\u679a\u4e3e\u51fa\u8fb9\u5f15\u8d77\u7684\u3002\n\n## \u4ee3\u7801\n\u6ce8\u610f\u7a7a\u4e32\u4e0d\u8ba1\u5165\u7b54\u6848\u3002\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int maxn=3000,alpha=26,base='a';\nint len,total,last[alpha],trie[maxn+5][alpha];\nchar a[maxn+5],b[maxn+5];\nstruct node\n{\n    int maxlen,parent,to[alpha];\n}SAM[maxn<<1|1];\nvoid build_SAM(char *s)\n{\n    SAM[0].parent=-1;\n    for(int i=0,now=0;i<len;++i)\n    {\n        int last=now;\n        SAM[now=++total].maxlen=SAM[last].maxlen+1;\n        while(~last&&!SAM[last].to[s[i]-base])\n        {\n            SAM[last].to[s[i]-base]=now;\n            last=SAM[last].parent;\n        }\n        if(~last)\n        {\n            if(SAM[last].maxlen+1==SAM[SAM[last].to[s[i]-base]].maxlen)\n                SAM[now].parent=SAM[last].to[s[i]-base];\n            else\n            {\n                int target=SAM[last].to[s[i]-base];\n                ++total;\n                for(int j=0;j<alpha;++j)\n                    SAM[total].to[j]=SAM[target].to[j];\n                SAM[total].parent=SAM[target].parent;\n                SAM[total].maxlen=SAM[last].maxlen+1;\n                SAM[now].parent=SAM[target].parent=total;\n                while(~last&&SAM[last].to[s[i]-base]==target)\n                {\n                    SAM[last].to[s[i]-base]=total;\n                    last=SAM[last].parent;\n                }   \n            }\n        }\n    }\n}\nvoid build(char *s)\n{\n    for(int i=len;~i;--i)\n    {\n    \tfor(int j=0;j<alpha;++j)\n    \t\ttrie[i][j]=last[j];\n    \tif(i)\n    \t\tlast[s[i-1]-base]=i;\n\t}\n    return;\n}\nint dfs(int node1,int node2)\n{\n\tint ans=1;\n\tfor(int i=0;i<alpha;++i)\n\t\tif(SAM[node1].to[i]&&trie[node2][i])\n\t\t\tans+=dfs(SAM[node1].to[i],trie[node2][i]);\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d%s%s\",&len,a,b);\n\tswap(a,b);\n\tbuild_SAM(a);\n\tbuild(b);\n\tprintf(\"%d\\n\",dfs(0,0)-1);\n\treturn 0;\n}\n```",
        "postTime": 1616829016,
        "uid": 67952,
        "name": "\u767d\u9c9f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7469 [NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b"
    },
    {
        "content": "\u524d\u8a00\uff1a\n\n\u8fd9\u9898\u662f\u8003\u573a\u4e0a\u552f\u4e00\u505a\u51fa\u6765\u7684\u9898\uff0ct3\u6811\u5957\u6811\u7c7b\u6b63\u89e3\uff0c\u90e8\u5206\u5206\u90fd\u6ca1\u8c03\u51fa\u6765\uff0ct1\u66b4\u529b\u8d70\u4eba\n\n\n\u90a3\u5c31\u628a\u6211\u505a\u6cd5\u8bb2\u4e00\u4e0b\u5427\u3002\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u7b2c\u4e00\u773c\u5c31\u83ab\u540d\u611f\u89c9\u548c[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P4112)\u5f88\u50cf\u3002\u4e8e\u662f\u5c31\u5957\u8def\u4e86\u3002\n\n\u5bf9\u4e8ea\u4e32\uff0c\u56e0\u4e3a\u4ed6\u8981\u5b50\u5e8f\u5217\uff0c\u6240\u4ee5\u5efa\u4e00\u4e2a\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u3002\n\n\u5bf9\u4e8eb\u4e32\uff0c\u56e0\u4e3a\u662f\u5b50\u4e32\uff0c\u81ea\u7136\u800c\u7136\u5c31\u5efa\u4e00\u4e2asam\u3002\n\n\u90a3\u8be5\u600e\u4e48\u7edf\u8ba1\u7b54\u6848\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u56e0\u4e3a\u4ed6\u76f8\u540c\u7684\u4e32\u53ea\u7b97\u4e00\u4e2a\uff0c\u800c\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0csam\u4e0a\u9762\u7684\u8def\u5f84\u6b63\u597d\u5bf9\u5e94\u4e86\u4e92\u4e0d\u76f8\u540c\u7684\u4e32\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0csam\u540c\u65f6\u4ece\u8d77\u59cb\u70b9\u5f00\u59cb\uff0c\u627e\u4ed6\u4eec\u516c\u5171\u7684\u8def\u5f84\u3002\u8fd9\u4e2a\u53ef\u4ee5bfs+\u5237\u5b57\u7b26\u4e32\u8868\u5b9e\u73b0\u3002\n\n\u5173\u4e8e\u4ed6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u56e0\u4e3a\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\u548csam\u7684\u70b9\u6570\u90fd\u662f  $n$ \u7ea7\u522b\u7684\uff0c\u800c\u6700\u591a\u53ea\u6709 $n^2$ \u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e0a\u754c\u5e94\u8be5\u662f $\\mathcal O(n^2)$ \u7684\u3002\u4f46\u7edd\u5bf9\u8dd1\u4e0d\u6ee1\u3002\n\n\u6240\u4ee5\u5c31\u534a\u5c0f\u65f6t2\uff0c\u4e24\u5c0f\u65f6t3\u4e86...\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nconst int N=3005;\nusing namespace std;\nchar a[N],b[N];\ninline int r()\n{\n\tchar h=getchar();\n\tint y=0;\n\twhile(h<'0'||h>'9')h=getchar();\n\twhile(h>='0'&&h<='9')y=y*10+h-'0',h=getchar();\n\treturn y;\n}\nnamespace sam{\n\tstruct node{\n\t\tint c[26],fa,len;\n\t}q[N<<1];\n\tint l=1,t=1;\n\tinline void jr(int c)\n\t{\n\t\tint x=l;int nx=l=++t;\n\t\tq[nx].len=q[x].len+1;\n\t\tfor(;x&&!q[x].c[c];x=q[x].fa)q[x].c[c]=nx;\n\t\tif(!x)return (void)(q[nx].fa=1);\n\t\tint y=q[x].c[c];\n\t\tif(q[y].len==q[x].len+1)return (void)(q[nx].fa=y);\n\t\tint ny=++t;\n\t\tq[ny]=q[y];q[ny].len=q[x].len+1;\n\t\tq[y].fa=q[nx].fa=ny;\n\t\tfor(;x&&q[x].c[c]==y;x=q[x].fa)q[x].c[c]=ny;\n\t}\n}\nnamespace xlzdj{\n\tint ne[N][26];\n\tinline void gz(char a[],int n)\n\t{\n\t\tfor(int i=n-1;~i;i--)\n\t\t{\n\t\t\tfor(int j=0;j<26;j++)ne[i][j]=ne[i+1][j];\n\t\t\tne[i][a[i+1]-'a']=i+1;\n\t\t}\n\t}\n}\nusing namespace sam;\nusing namespace xlzdj;\nstruct gs{\n\tint x,y;\n};\nint ans=0;\ninline void bfs()\n{\n\tqueue<gs>dl;\n\tdl.push((gs){1,0});\n\twhile(!dl.empty())\n\t{\n\t\tint x=dl.front().x,y=dl.front().y;dl.pop();\n\t\tfor(int i=0;i<26;i++)if(q[x].c[i]&&ne[y][i])\n\t\t{\n\t\t\tans++;\n\t\t\tdl.push((gs){q[x].c[i],ne[y][i]});\n\t\t}\n\t}\n}\nsigned main()\n{\n\tfreopen(\"block.in\",\"r\",stdin);\n\tfreopen(\"block.out\",\"w\",stdout);\n\tint n=r();\n\tscanf(\"%s\",a+1);\n\tgz(a,n);\n\tscanf(\"%s\",b);\n\tfor(int i=0;i<n;i++)jr(b[i]-'a');\n\tbfs();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n/*\n5\nbcabc\nbbcca\n\n20\negebejbhcfabgegjgiig\nedfbhhighajibcgfecef\n\n*/\n```",
        "postTime": 1616819267,
        "uid": 203743,
        "name": "\u6ed1\u5927\u7a3d",
        "ccfLevel": 7,
        "title": "[NOI Online 2021 #2 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b"
    },
    {
        "content": "\u8fd9\u9898\u548c [P4112 [HEOI2015]\u6700\u77ed\u4e0d\u516c\u5171\u5b50\u4e32](https://www.luogu.com.cn/problem/P4112) \u4e0d\u662f\u4e00\u6a21\u4e00\u6837\u561b\uff08\n\n\u8003\u8651\u5bf9 Alice \u7684\u5b57\u7b26\u4e32\u5efa\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0c\u5bf9 Bob \u7684\u5b57\u7b26\u4e32\u5efa\u540e\u7f00\u81ea\u52a8\u673a\n\n\u7136\u540e\u5728\u4e24\u4e2a\u81ea\u52a8\u673a\u4e0a\u4e00\u8d77\u8dd1\u4e00\u8fb9 bfs\uff0c\u679a\u4e3e\u8f6c\u79fb\u7684\u5b57\u7b26\n\n\u5982\u679c\u5728\u4e24\u4e2a\u81ea\u52a8\u673a\u4e0a\u90fd\u6709\u8fd9\u4e2a\u8f6c\u79fb\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed bfs\uff0c\u5426\u5219\u505c\u6b62 bfs\n\n\u7b54\u6848\u7edf\u8ba1\u53ea\u8981\u770b bfs \u8fdb\u884c\u7684\u6b21\u6570\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^2)$\n\n\u8003\u573a\u4e0a\u5f00\u4e86 270M \u7684\u6570\u7ec4\uff0c\u7206\u96f6\u4e86/dk/dk\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 6010\nusing namespace std;\nint n;\nstruct Suffix_Auto{\n\tint ch[MAXN][30],len[MAXN],fa[MAXN];\n\tint last,tot;\n\tSuffix_Auto(){last=tot=1;}\n\tvoid extend(int id){\n\t\tint p=last,now=++tot;len[now]=len[last]+1;\n\t\tfor(;p&&!ch[p][id];p=fa[p])ch[p][id]=now;\n\t\tif(!p)fa[now]=1;\n\t\telse{\n\t\t\tint q=ch[p][id];\n\t\t\tif(len[q]==len[p]+1)fa[now]=q;\n\t\t\telse{\n\t\t\t\tint clone=++tot;len[clone]=len[p]+1;\n\t\t\t\tmemcpy(ch[clone],ch[q],sizeof(ch[q]));\n\t\t\t\tfa[clone]=fa[q];fa[now]=fa[q]=clone;\n\t\t\t\tfor(;p&&ch[p][id]==q;p=fa[p])ch[p][id]=clone;\n\t\t\t}\n\t\t}last=now;\n\t}\n};//\u540e\u7f00\u81ea\u52a8\u673a\nstruct Sequence_Auto{\n\tint ch[MAXN][30],last[30];\n\tSequence_Auto(){memset(last,0,sizeof(last));}\n\tvoid extend(char *c){\n\t\tint len=strlen(c+1);\n\t\tfor(int i=len;i;i--){\n\t\t\tmemcpy(ch[i],last,sizeof(last));\n\t\t\tlast[c[i]-'a'+1]=i;\n\t\t}memcpy(ch[4000],last,sizeof(last));\n\t}\n};//\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\nSuffix_Auto b;Sequence_Auto a;\nint qx[MAXN*MAXN/2],qy[MAXN*MAXN/2],l,r;\nint ans;\nvoid bfs(){\n\tqx[l=r=1]=4000;qy[1]=1;\n\twhile(l<=r){\n\t\tint ua=qx[l],ub=qy[l++];\n\t\tans++;\n\t\tfor(int i=1;i<=26;i++){\n\t\t\tint va=a.ch[ua][i],vb=b.ch[ub][i];\n\t\t\tif(!va||!vb)continue;\n\t\t\tqx[++r]=va;qy[r]=vb;\n\t\t}\n\t}\n}\nchar s[MAXN],t[MAXN];\nint main(){\n\tfreopen(\"block.in\",\"r\",stdin);freopen(\"block.out\",\"w\",stdout);\n\tscanf(\"%d%s%s\",&n,s+1,t+1);\n\ta.extend(s);\n\tfor(int i=1;i<=n;i++)b.extend(t[i]-'a'+1);\n\tbfs();printf(\"%d\",ans-1);//\u7a7a\u4e32\u4e0d\u7b26\u5408\u9898\u610f\n\treturn 0;\n}\n```",
        "postTime": 1616830030,
        "uid": 65681,
        "name": "UltiMadow",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] P7469 [NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b"
    },
    {
        "content": "### \u5404\u6863\u90e8\u5206\u5206\n#### \u7b2c\u4e00\u6863\uff1a\n$s$ \u548c $t$ \u4e2d\u53ea\u6709\u4e00\u79cd\u5b57\u6bcd\uff0c\u76f4\u63a5\u8f93\u51fa $n$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u900110\u5206\u3002\n \n#### \u7b2c\u4e8c\u6863\uff1a\n\n$n \\le 100$\uff0c\u8fd9\u4e00\u6863\u5206\u5e94\u8be5\u53ef\u4ee5\u7528\u5404\u79cd\u5947\u5947\u602a\u602a\u7684\u66b4\u529b\u7ed9\u8fc7\u6389\uff0c\u8003\u573a\u4e0a\u672c\u4eba\u5b8c\u5168\u6ca1\u6709\u8003\u8651\u6539\u6863\u90e8\u5206\u5206\uff0c\u56e0\u4e3a\u4e0b\u4e00\u6863\u7684\u90e8\u5206\u5206\u5f88\u660e\u663e\u4f1a\u66f4\u597d\u5199\u4e00\u70b9\u3002\n\n#### \u7b2c\u4e09\u6863\uff1a\n\n$n \\le 500$\uff0c\u8fd9\u4e2a\u6570\u636e\u53ef\u4ee5\u7528 map \u7ed9\u8fc7\u6389\uff0c\u7531\u4e8e $t$ \u4e32\u662f\u8981\u6c42\u8fde\u7eed\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5de6\u53f3\u7aef\u70b9\uff0c\u5224\u65ad\u8be5\u5b50\u4e32\u662f\u5426\u6210\u7acb\uff0c\u7136\u540e\u76f4\u63a5\u5f80 map \u91cc\u9762\u66b4\u529b\u585e\u5224\u91cd\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u662f\u53ef\u4ee5\u8fbe\u5230 $n^3\\log_2n$ \u7684\uff0c\u8db3\u4ee5\u8fc7\u6389\u8fd9\u5f53\u6570\u636e\u70b9\u3002\n\n#### \u6ee1\u5206\u505a\u6cd5\uff1a\n\n\u5927\u6982\u770b\u4e86\u4e00\u4e0b\u5176\u4ed6\u7684\u9898\u89e3\uff0c\u5927\u591a\u6570\u90fd\u662f SAM \u6216\u8005\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u4e9b\u4e1c\u897f\u6211\u90fd\u4e0d\u4f1a\uff0c\u6240\u4ee5\u8bf4\u6211\u4f7f\u7528\u7684\u662f\u5341\u5206\u5165\u95e8\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u7b97\u6cd5\uff0c Trie\u6811\u3002\n\n\u8003\u8651\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u7b56\u7565\uff0c\u5982\u679c\u8bf4\u4e00\u4e2a\u5b50\u4e32\u88ab\u5339\u914d\u6210\u529f\u4e86\uff0c\u90a3\u5c31\u8bc1\u660e\u8fd9\u4e2a\u5b50\u4e32\u7684\u6240\u6709\u524d\u7f00\u90fd\u7b97\u662f\u4e00\u79cd\u65b9\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u7528\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u7136\u540e\u4ece $l$ \u626b\u5230 $n$ \uff0c\u627e\u4e00\u4e2a\u6700\u957f\u7684\u524d\u7f00\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5e72\u6389\u4e00\u4e2a $r$ \u7684\u5faa\u73af\u3002\n\n\u4f46\u662f\u968f\u5373\u5c31\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u600e\u4e48\u5c06\u6240\u6709\u7684\u524d\u7f00\u90fd\u585e\u5230 map \u91cc\u9762\uff0c\u5f88\u663e\u7136\u5982\u679c\u8fd9\u6837\u505a\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7b2c\u4e09\u6863\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u6709\u533a\u522b\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u627e\u524d\u7f00\u800c\u4e14\u8fd8\u53ef\u4ee5\u5224\u91cd\u7684\u7b97\u6cd5\uff0c\u90a3\u5c31\u662f Trie\u6811\u3002\n\n\u4f46\u662f\u5982\u679c\u5c06\u6240\u6709\u7684\u5b57\u7b26\u4e32\u5168\u90e8\u5b58\u8fdb\u53bb\u7684\u8bdd\uff0c Trie\u6811 \u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u5b8c\u5168\u4e0d\u591f\uff0c\u5f88\u660e\u663e\u4e3a $4500000 * 26 = 117000000$ \uff0c\u76f4\u63a5\u7206\u6389\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u9700\u8981\u7528\u5b58\u56fe\u7684\u65b9\u5f0f\u5b58 Trie \u6811\uff0c\u8fd9\u6837\u7684\u8bdd\u867d\u7136\u505a\u4e0d\u5230 $O(1)$ \u65f6\u95f4\u590d\u6742\u5ea6\u5185\u7684\u8f6c\u79fb\uff0c\u4f46\u662f\u8fd9\u53ea\u662f\u52a0\u4e86\u4e00\u4e2a\u5c0f\u5e38\u6570\u800c\u5df2\uff0c\u65e0\u6240\u8c13\u3002\n\n### CODE\n~~~cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define F(a) freopen(a\".in\",\"r\",stdin);freopen(a\".out\",\"w\",stdout)\nusing namespace std;\nconst int N = 3e3 + 10;\nchar s1[N],s2[N];\nint n;\nint hd[N * N / 2],nxt[N * N / 2],to[N * N / 2],tot,cnt;\nchar ch[N * N / 2];\ninline void add(const int u,const int v,const char sc) {\n\tnxt[++tot] = hd[u],to[tot] = v,ch[tot] = sc,hd[u] = tot;\n}\nlong long ans = 0;\ninline void input() {\n\tscanf(\"%d%s%s\",&n,s1 + 1,s2 + 1);\n\treturn ;\n}\ninline int Finds(const int l) {\n\tint pos = l;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(s1[i] == s2[pos]) pos++;\n\t\tif(pos == n + 1) return pos;\n\t}\n\treturn pos;\n}\ninline void insert(const int l,const int r) {\n\tint p = 0;\n\tfor(int i = l; i <= r; i++) {\n\t\tbool flag = false;\n\t\tfor(int eg = hd[p]; eg; eg = nxt[eg]) {\n\t\t\tif(ch[eg] == s2[i]) {\n\t\t\t\tflag = true;\n\t\t\t\tp = to[eg];\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tif(flag) continue;\n\t\telse {\n\t\t\tadd(p,++cnt,s2[i]);\n\t\t\tans++;\n\t\t\tp = cnt;\n\t\t}\n\t}\n\t return ;\n}\ninline void work() {\n\tfor(int i = 1; i <= n; i++) {\n\t\tint pos = Finds(i) - 1;\n\t\tinsert(i,pos);\n\t}\n\treturn ;\n}\ninline void print() {\n\tprintf(\"%lld\",ans);\n\treturn ;\n}\nint main() {\n// \tF(\"block\");\n\tinput();\n\twork();\n\tprint();\n\treturn 0;\n}\n~~~\n\n\n### \u9898\u5916\u8bdd\n\u6211\u5728\u8003\u573a\u4e0a\u60f3\u51fa\u4e86 Trie\u6811 \u505a\u6cd5\uff0c\u4f46\u662f\u88ab luogu \u7684\u6570\u636e\u7ed9\u5e72\u5230\u53ea\u6709 50 pts\uff0c\u540e\u6765\u53d1\u73b0\u56e0\u4e3a `end` \u6570\u7ec4\u6ca1\u6709\u5f00\u5230\u8ddf `nxt` \u6570\u7ec4\u4e00\u6837\u5927\uff0c\u6240\u4ee5\u53ea\u6709 50 pts\uff0c\u5f00\u5230\u4e86\u4e4b\u540e\u53ea\u6709 80 pts\uff0c\u56e0\u4e3a\u5185\u5b58\u7206\u6389\u4e86\u3002\u5e0c\u671b CCF \u7684\u6570\u636e\u53ef\u4ee5\u5c3d\u91cf\u6c34\u4e00\u70b9\u3002",
        "postTime": 1616828624,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "P7469 [NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u5df2\u77e5\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32 $s,t$\u3002  \n\n\u4ece $s$ \u4e2d\u53d6\u51fa\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4ece $t$ \u4e2d\u53d6\u51fa\u4e00\u4e2a\u5b50\u4e32\uff0c  \n\u4f7f\u5f97\u53d6\u51fa\u7684\u4e24\u4e2a\u4e32\u76f8\u540c\uff0c\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u65b9\u6848\u6570\u3002\n\n\u4e24\u4e2a\u65b9\u6848\u4e0d\u540c\u5f53\u4e14\u4ec5\u5f53\u53d6\u51fa\u7684\u4e32\u4e0d\u540c\u3002\n\n$\\texttt{Data Range:}1\\le n\\le 3000$\n\n## \u9898\u89e3\n\u672c\u6765 T2 \u662f\u7b7e\u5230\u9898\u7684\uff0c\u53ef\u662f\u8003\u573a\u4e0a\u5728\u809d T1 QAQ  \n\n\u9996\u5148\u9898\u76ee\u8981\u6c42\u4ece $t$ \u4e2d\u53d6\u51fa\u4e00\u4e2a\u5b50\u4e32\uff0c\u8981\u6c42\u672c\u8d28\u4e0d\u540c\u3002\n\n\u7531\u4e8e\u6570\u636e\u8303\u56f4\u53ea\u6709 $3000$\uff0c\u8003\u8651\u5bf9 $t$ \u5efa\u7acb\u540e\u7f00\u81ea\u52a8\u673a\uff0c  \n\u7136\u540e\u66b4\u529b\u5f80\u4e0b\u8df3\u679a\u4e3e\u5b50\u4e32\u3002\n\n\u5bf9\u4e8e\u4ece $s$ \u4e2d\u53d6\u51fa\u4e00\u4e2a\u5b50\u5e8f\u5217\u7684\u8981\u6c42\uff0c\u5efa\u7acb\u5173\u4e8e $s$ \u7684\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0c  \n\u7136\u540e\u4e24\u4e2a\u81ea\u52a8\u673a\u540c\u6b65\u5f80\u4e0b\u8df3\u3002\n\n\u8bbe\u5b57\u7b26\u96c6\u4e3a $\\sum$\uff0c\u5219\u65f6\u7a7a\u590d\u6742\u5ea6\u4e3a $\\Theta(n^2|\\sum|)$\uff0c  \n\u7531\u4e8e\u5b57\u7b26\u96c6\u53ea\u6709\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e8e\u662f\u53ef\u4ee5\u901a\u8fc7\u3002\n\n[\u5173\u4e8e\u540e\u7f00\u81ea\u52a8\u673a\u7684\u5efa\u7acb\u4e0e\u539f\u7406](https://www.luogu.com.cn/blog/wangrx/sam-guang-yi-sam-yu-ac-zi-dong-ji-zhi-jian-di-guan-ji)  \n\uff08\u5176\u5b9e\u8003\u8bd5\u65f6\u524d\u4e00\u4e2a\u534a\u5c0f\u65f6\u4e00\u76f4\u5728\u5b8c\u5584\u8fd9\u7bc7 blog\uff0c\u6839\u672c\u6ca1\u770b\u9898 QWQ\uff09\n\n```cpp\n#include<stdio.h>\n#include<string.h>\ntypedef unsigned int word;\nstruct READ{//\u5feb\u8bfb\n\tchar c;\n\tinline READ(){c=getchar();}\n\ttemplate<typename type>\n\tinline READ& operator >>(register type& num){\n\t\twhile('0'>c||c>'9') c=getchar();\n\t\tfor(num=0;'0'<=c&&c<='9';c=getchar())\n\t\t\tnum=num*10+(c-'0');\n\t\treturn *this;\n\t}\n}cin;\nstruct SAM{//\u540e\u7f00\u81ea\u52a8\u673a\n    word next[6010][26];\n    word link[6010],len[6010];\n    word size,last;\n    inline SAM(){\n        size=last=0;\n        link[0]=0xffffffff;\n    }\n    #define split()                 \\\n        len[++size]=len[last]+1;    \\\n        memcpy(next[size],next[old],sizeof(next[0]));   \\\n        link[size]=link[old],link[old]=size;            \\\n        for(;last!=0xffffffff;last=link[last])          \\\n            if(next[last][c]==old) next[last][c]=size;  \\\n            else break;\n    inline void operator +=(char c){\n        register word old;\n        if(old=next[last][c]){\n            if(len[old]==len[last]+1)\n                return void(last=old);\n            split();\n            return void(last=size);\n        }\n        len[++size]=len[last]+1;\n        for(;last!=0xffffffff;last=link[last])\n            if((old=next[last][c])==0) next[last][c]=size;\n            else if(len[old]==len[last]+1)\n                return link[size]=old,void(last=size);\n            else{\n                split();\n                return link[size-1]=size,void(last=size-1);\n            }\n        return link[size]=0,void(last=size);\n    }\n    #undef split\n}sam;\nword next[3010][26],tail[26],ans;\ninline void dfs(word id1,word id2){//\u540c\u6b65\u8df3\u81ea\u52a8\u673a\n\t++ans;\n\tfor(register word i=0;i<26;++i)\n\t\tif(next[id1][i]&&sam.next[id2][i])\n\t\t\tdfs(next[id1][i],sam.next[id2][i]);\n}\nint main(){\n\tword n;\n\tcin>>n;\n\twhile('a'>cin.c||cin.c>'z') cin.c=getchar();\n\tregister word i=1;\n\twhile('a'<=cin.c&&cin.c<='z'){\n\t\tcin.c-='a';\n\t\twhile(tail[cin.c]<i)\n\t\t\tnext[tail[cin.c]++][cin.c]=i;\n\t\tcin.c=getchar(),++i;\n\t}//\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\n\twhile('a'>cin.c||cin.c>'z') cin.c=getchar();\n\twhile('a'<=cin.c&&cin.c<='z')\n\t\tsam+=cin.c-'a',cin.c=getchar();\n\tdfs(0,0);\n\tprintf(\"%u\",--ans);//\u53bb\u6389\u7a7a\u4e32\u7684\u65b9\u6848\n\treturn 0;\n}\n```",
        "postTime": 1616827863,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "P7469 \u9898\u89e3"
    },
    {
        "content": "\u53ea\u4f1a\u8fd9\u4e00\u9053\u9898\u3002\u6211\u722c\u4e86\n\n\u8003\u8651 $O(n^2)$ \u7684\u89e3\u6cd5\u3002\u4e0d\u96be\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u5728\u7b2c\u4e8c\u4e2a\u4e32\u7684\u5b50\u4e32\u5728\u7b2c\u4e00\u4e2a\u4e32\u4e0a\u8be2\u95ee\u5373\u53ef\u3002\u6211\u4eec\u53ef\u4ee5\u505a\u5230 $O(n^3)$\u3002\n\n\u8003\u8651\u987a\u5e8f\u679a\u4e3e\u5b50\u4e32\u7684\u8bdd\uff0c\u9700\u8981 $O(n^2)$ \u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\u4f46\u662f\u4f1a\u7b97\u91cd\u3002\u90a3\u4e48\u6211\u4eec\u8003\u8651\u53ea\u8ba1\u7b97\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u5373\u53ef\u3002\u8fd9\u662f Suffix_Array \u7684\u7ecf\u5178\u95ee\u9898\n\n\n```cpp\n#include <bits/stdc++.h>\nconst int N = 3005;\nint n, nxt[26], ch[N][26];\nchar c1[N], c2[N];\nnamespace SLT {\n    int n, m = 122, k, sa[N], x[N * 2], y[N * 2], rk[N], h[N], b[N];\n    void solve(char *s) {\n    \tn = strlen(s + 1);\n    \tfor (int i(1); i <= n; ++i) {\n    \t\tb[x[i] = s[i]]++;\n    \t}\n    \tfor (int i(1); i <= m; ++i) {\n    \t\tb[i] += b[i - 1];\n    \t}\n    \tfor (int i(n); i; --i) {\n    \t\tsa[b[x[i]]--] = i;\n    \t}\n    \tfor (int i(1); i < n; i *= 2) {\n    \t\tint num(0);\n    \t\tfor (int j(n - i + 1); j <= n; ++j) {\n    \t\t\ty[++num] = j;\n    \t\t}\n    \t\tfor (int j(1); j <= n; ++j) {\n    \t\t\tif (sa[j] > i) {\n    \t\t\t\ty[++num] = sa[j] - i;\n    \t\t\t}\n    \t\t}\n    \t\tfor (int j(1); j <= m; ++j) {\n    \t\t\tb[j] = 0;\n    \t\t}\n    \t\tfor (int j(1); j <= n; ++j) {\n    \t\t\tb[x[j]]++;\n    \t\t}\n    \t\tfor (int j(1); j <= m; ++j) {\n    \t\t\tb[j] += b[j - 1];\n    \t\t}\n    \t\tfor (int j(n); j; --j) {\n    \t\t\tsa[b[x[y[j]]]--] = y[j];\n    \t\t}\n    \t\tstd::swap(y, x);\n    \t\tx[sa[1]] = num = 1;\n    \t\tfor (int j(2); j <= n; ++j) {\n    \t\t\tx[sa[j]] = (y[sa[j]] == y[sa[j - 1]] && y[sa[j] + i] == y[sa[j - 1] + i]) ? num : ++num;\n    \t\t}\n    \t\tif (num == n) {\n    \t\t\tbreak;\n    \t\t}\n    \t\telse {\n    \t\t\tm = num;\n    \t\t}\n    \t}\n    \tfor (int i(1); i <= n; ++i) {\n    \t\trk[sa[i]] = i;\n    \t}\n    \tfor (int i(1), j(0); i <= n; ++i) {\n    \t\tif (rk[i] == 1) {\n    \t\t\tcontinue;\n    \t\t}\n    \t\tif (j) {\n    \t\t\t--j;\n    \t\t}\n    \t\tint k = sa[rk[i] - 1];\n    \t\twhile (s[k + j] == s[i + j]) {\n    \t\t\t++j;\n    \t\t}\n    \t\th[rk[i]] = j;\n    \t}\n    \treturn;\n    }\n}\nint main() {\n\tfreopen(\"block.in\", \"r\", stdin);\n\tfreopen(\"block.out\", \"w\", stdout);\n\tscanf(\"%d %s %s\", &n, c1 + 1, c2 + 1);\n\tfor (int i(1); i <= n; ++i) {\n\t\tfor (int j(0); j < 26; ++j) {\n\t\t\tnxt[j] = nxt[j];\n\t\t}\n\t\tfor (int j(nxt[c1[i] - 'a']); j < i; ++j) {\n\t\t\tch[j][c1[i] - 'a'] = i;\n\t\t}\n\t\tnxt[c1[i] - 'a'] = i;\n\t}\n\tSLT::solve(c2);\n\tint ans(0);\n\tfor (int i(1); i <= n; ++i) {\n\t\tint nw = 0;\n\t\tbool flag(1);\n\t\tfor (int j(SLT::sa[i]); flag && j < SLT::sa[i] + SLT::h[i]; ++j) {\n\t\t\tif (!ch[nw][c2[j] - 'a']) {\n\t\t\t\tflag = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnw = ch[nw][c2[j] - 'a'];\n\t\t\t}\n\t\t}\n\t\tfor (int j(SLT::sa[i] + SLT::h[i]); flag && j <= n; ++j) {\n\t\t\tif (!ch[nw][c2[j] - 'a']) {\n\t\t\t\tflag = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans++;\n\t\t\t\tnw = ch[nw][c2[j] - 'a'];\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1616822591,
        "uid": 232125,
        "name": "SiRiehn_nx",
        "ccfLevel": 9,
        "title": "[NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b"
    },
    {
        "content": "\u8fd9\u9053\u9898\u672c\u8d28\u4e0a\u5c31\u662f\u7ed9\u4f60\u4e24\u4e2a\u4e32\uff0c\u6c42\u51fa\u7b2c\u4e8c\u4e2a\u4e32\u7684\u6240\u6709 **\u672c\u8d28\u4e0d\u540c\u5b50\u4e32** \u5728\u7b2c\u4e00\u4e2a\u4e32\u4e2d\u4f5c\u4e3a **\u5b50\u5e8f\u5217** \u51fa\u73b0\u7684\u4e2a\u6570\u3002\n\n\u7531\u4e8e\u8fd9\u9053\u9898 $n$ \u8303\u56f4\u5f88\u5c0f\uff0c\u4f7f\u7528\u54c8\u5e0c\u8fdb\u884c\u53bb\u91cd\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u4f7f\u7528 SAM \u66f4\u4e3a\u65b9\u4fbf\u3002\n\n\u6211\u4eec\u5bf9\u7b2c\u4e8c\u4e2a\u4e32\u5efa SAM \u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230 SAM \u4e0a\u6bcf\u4e00\u6761\u4ece\u8d77\u70b9 $t_0$ \u5f00\u59cb\u7684\u8def\u5f84\u90fd\u8868\u793a\u4e00\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u7b2c\u4e00\u4e2a\u4e32\u7684\u5b50\u5e8f\u5217\u5373\u53ef\u3002\n\n\u4e00\u79cd naive \u7684\u60f3\u6cd5\u662f\u5bf9\u7b2c\u4e00\u4e2a\u4e32\u5efa\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0c\u5373\u7ef4\u62a4 **\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u4e0b\u4e00\u4e2a\u67d0\u4e00\u5b57\u7b26\u7684\u51fa\u73b0\u4f4d\u7f6e** \uff0c\u82e5\u4e0d\u51fa\u73b0\u5219\u4e3a $n + 1$ \u3002\u7136\u540e\u6bcf\u4e00\u4e2a\u626b\u6bcf\u4e00\u4e2a\u5b50\u4e32\u65f6\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\uff0c\u4e00\u65e6\u6307\u9488\u5230\u4e86 $n+1$ \u5c31\u8bf4\u660e\u6ca1\u6709\u4f5c\u4e3a\u5b50\u5e8f\u5217\u51fa\u73b0\uff0c\u5426\u5219\u6709\u3002\n\n\u7136\u540e\u6709\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u4f18\u5316\uff0c\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u5b57\u7b26\u4e32\uff0c\u524d\u4e00\u4e2a\u4e32\u5fc5\u662f\u540e\u4e00\u4e2a\u4e32\u7684\u4e00\u4e2a\u524d\u7f00\uff0c\u5373\u6211\u4eec\u521a\u624d\u626b\u63cf\u7684\u65b9\u6cd5\u4e2d\uff0c\u53ea\u9700\u8981 **\u5b9e\u65f6\u7ef4\u62a4** \u8fd9\u4e2a\u6307\u9488\uff0c\u8d70\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u65f6\u6307\u9488\u5c31\u53ef\u4ee5\u7ee7\u627f\u7136\u540e\u76f4\u63a5 $O(1)$ \u67e5\u8be2\u3002\n\n\u4e8e\u662f\u5f97\u5230\u590d\u6742\u5ea6 $O(n^2)$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define rep(i,s,t) for(int i=s;i<=t;++i)\n#define per(i,t,s) for(int i=t;i>=s;--i)\n//\u6298\u53e0\u4e86\u90e8\u5206\u4ee3\u7801\ntypedef long long LL;\n#define INF 0x3f3f3f3f\n#define MAXN 3005\n\nint n;\nchar a[MAXN], b[MAXN];\nstruct SAM{\n    int len[MAXN << 2], link[MAXN << 2];\n    int nxt[MAXN << 2][26];\n    int sz, lst;\n    SAM(){\n        len[0] = 0;link[0] = -1;\n        ++ sz;lst = 0;\n    }\n    inline void extend(int c){\n        int x = sz ++;\n        len[x] = len[lst] + 1;\n        int it = lst;\n        while(~it && !nxt[it][c]){\n            nxt[it][c] = x;\n            it = link[it];\n        }\n        if(!~it) link[x] = 0;\n        else{\n            int t = nxt[it][c];\n            if(len[it] + 1 == len[t]) link[x] = t;\n            else{\n                int y = sz ++;\n                len[y] = len[it] + 1;\n                memcpy(nxt[y], nxt[t], sizeof(nxt[y]));\n                link[y] = link[t];\n                while(~it && nxt[it][c] == t){\n                    nxt[it][c] = y;\n                    it = link[it];\n                }\n                link[t] = link[x] = y;\n            }\n        }\n        lst = x;\n    }\n    int it = 0;\n    int head[MAXN << 1], nt[MAXN * 3], e[MAXN * 3], val[MAXN * 3], cnt;\n    inline void add(int u, int v, int w){\n        nt[++ cnt] = head[u];\n        head[u] = cnt;\n        e[cnt] = v;\n        val[cnt] = w;\n    }\n    int suc[MAXN][26], ans = 0;\n    void dfs(int x){\n        int mem = it;\n        for (int i = head[x];i;i = nt[i]){\n            if(suc[it][val[i]] <= n){\n                ++ ans;it = suc[it][val[i]];\n                dfs(e[i]);it = mem;\n            }\n        }\n    }\n    void init(){\n        rep(i, 0, sz - 1) rep(j, 0, 25) if(nxt[i][j]) add(i, nxt[i][j], j);\n        rep(i, 0, 25) suc[n][i] = n + 1;\n        per(i, n - 1, 0) {\n            memcpy(suc[i], suc[i + 1], sizeof(suc[i]));\n            suc[i][a[i + 1] - 97] = i + 1;\n        }\n    }\n    inline void solve(){\n        init();dfs(0);print(ans);\n    }\n}t;\n\nint main(){\n    read(n);read(a + 1);read(b + 1);\n    rep(i, 1, n) t.extend(b[i] - 97);\n    t.solve();\n}\n```",
        "postTime": 1616820230,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7469 \u3010 [NOI Online 2021 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7469)\n\n\u524d\u8005\u77e5\u8bc6\uff1a$\\text{SAM}$\n\n\u8bf4\u70b9\u95f2\u8bdd\uff0c\u8003\u8bd5\u65f6\u5148\u5f00\u7684 T1\uff0c\u540e\u6765\u624d\u53d1\u73b0 T2 \u7b80\u5355\u4e00\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 Bob \u7684\u64cd\u4f5c\u5c31\u679a\u4e3e\u6240\u6709 $t$ \u7684\u5b50\u4e32\uff0c\u6240\u4ee5\u81ea\u7136\u800c\u7136\u60f3\u5230\u5efa\u4e00\u4e2a $\\text{SAM}$\u3002\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u904d\u5386\u81ea\u52a8\u673a\uff0c\u6765\u5f97\u5230\u6bcf\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b50\u4e32\uff0c\u5728\u66b4\u529b\u5339\u914d\uff0c\u5c31\u6709\u5982\u4e0b\u4ee3\u7801\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $n ^ 2$ \u7684\uff0c\u4f60\u4fbf\u904d\u5386\u8fb9\u5339\u914d\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 6000 + 5;\n\nint n,ans,nxt[N][30];\nchar s[N],t[N],a[N];\n\nint ncnt = 1,lst = 1;\nstruct SAM {\n\tint ch[30];\n\tint fa;\n\tlong long len;\n}sam[N];\n\nvoid add(int c) {\n\tint p = lst;\n\tint u = lst = ++ ncnt;\n\tsam[u].len = sam[p].len + 1;\n\tfor (; p && !sam[p].ch[c] ; p = sam[p].fa)\n\t\tsam[p].ch[c] = u;\n\tif (!p)\n\t\tsam[u].fa = 1;\n\telse {\n\t\tint q = sam[p].ch[c];\n\t\tif (sam[q].len == sam[p].len + 1)\n\t\t\tsam[u].fa = q;\n\t\telse {\n\t\t\tint spt = ++ ncnt;\n\t\t\tsam[spt] = sam[q];\n\t\t\tsam[spt].len = sam[p].len + 1;\n\t\t\tsam[q].fa = sam[u].fa = spt;\n\t\t\tfor (; p && sam[p].ch[c] == q ; p = sam[p].fa)\n\t\t\t\tsam[p].ch[c] = spt;\n\t\t}\n\t}\n}\n\nvoid dfs(int u,int dep,int pos) {\n\tif (u != 1)\n\t\tans ++;\n\tfor (int i = 0 ; i < 26 ; ++ i) {\n\t\tif (sam[u].ch[i]) {\n\t\t\tint flag = -1;\n\t\t\ta[dep] = 'a' + i;\n\t\t\tif (nxt[pos][i] != -1)\n\t\t\t\tdfs(sam[u].ch[i],dep + 1,nxt[pos][i] + 1);\n\t\t}\n\t}\n}\n\nint main () {\n//\tfreopen(\"block.in\",\"r\",stdin);\n//\tfreopen(\"block.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s);\n\tscanf(\"%s\",t);\n\tint flag = 1;\n\tmemset(nxt,-1,sizeof nxt);\n\tfor (int i = 0 ; i < 26 ; ++ i) {\n\t\tint pos = -1;\n\t\tfor (int j = n - 1 ; ~j ; -- j) {\n\t\t\tif (s[j] == i + 'a')\n\t\t\t\tpos = j;\n\t\t\tnxt[j][i] = pos;\n\t\t}\n\t}\n\tfor (int i = 0 ; i < n ; ++ i)\n\t\tadd(t[i] - 'a');\n\tdfs(1,0,0);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1616819390,
        "uid": 163516,
        "name": "Strelitzia",
        "ccfLevel": 0,
        "title": "[NOI Online 2021 #2 \u63d0\u9ad8\u7ec4] \u79ef\u6728\u5c0f\u8d5b \u9898\u89e3"
    },
    {
        "content": "~~\u4f2aT2\uff0c\u5b9eT1~~\n\n### \u8003\u573a\u60f3\u6cd51\n\n\u8003\u8651\u679a\u4e3e$ t $\u7684\u8fde\u7eed\u5b50\u4e32\uff0c\u5728$ s $\u4e2d\u66b4\u529b\u5339\u914d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$ O(n^3) $\n\n### \u8003\u573a\u60f3\u6cd52\n\n\u5728$ t $\u4e2d\u679a\u4e3e\u8fde\u7eed\u5b50\u4e32\u7684\u8d77\u70b9\uff0c\u6211\u4eec\u53d1\u73b0\u8d77\u70b9\u76f8\u540c\u7684\u8fde\u7eed\u5b50\u4e32\uff0c\u5f53\u7ec8\u70b9\u8f83\u540e\u7684\u80fd\u5728$ s $\u4e2d\u88ab\u5339\u914d\uff0c\u90a3\u4e48\u7ec8\u70b9\u8f83\u524d\u7684\u5b50\u4e32\u4e5f\u4e00\u5b9a\u80fd\u5339\u914d\uff1b\u5f53\u7ec8\u70b9\u8f83\u540e\u7684\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u7ec8\u70b9\u8f83\u524d\u7684\u4e5f\u51fa\u73b0\u8fc7\u3002\u5229\u7528\u5355\u8c03\u6027\uff0c\u80fd\u591f\u4e8c\u5206\u5b8c\u6210\u7edf\u8ba1\u7b54\u6848\u4e0e\u53bb\u91cd\uff08Hash\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$ O(n^2 \\ log_2 \\ n)$\u3002\n\n\u6ca1\u6709\u8fc7\u591a\u8003\u8651\u5339\u914d\u672c\u8eab\u7684\u6027\u8d28\u3002\n\n\u5b9e\u6d4b\u6700\u6162\u7684\u70b9$ 0.3s $\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\n#include <ctime>\n#include <map>\nusing namespace std;\n\n#define INF 0x7FFFFFFF\n#define ll long long\n#define ull unsigned long long\n#define ld long double\n#define Rs register\n\ninline int read()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar();\n    while (c > '9' || c < '0') { if(c == '-') f = -1; c = getchar(); }\n    while (c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar(); }\n    return x * f;\n}\n\nconst int N = 5e3 + 10;\nconst int L = 9e6 + 10;\nconst ll Mod1 = 1e6 + 7;\nconst ll Mod2 = 1e9 + 7;\nconst ll base = 127;\n\nstring str;\nchar A[N], B[N];\nint n, ans;\n\nclass HS\n{\n\tpublic :\n\t\t\n\tint tot;\n\t\t\n\tint ls[Mod1 + 10], nx[L]; \n\tll vl[L];\n\t\n\tinline void Add(ll Key1, ll Key2)\n\t{\n\t\t++ tot;\n\t\tnx[tot] = ls[Key1];\n\t\tvl[tot] = Key2;\n\t\tls[Key1] = tot;\n\t}\n\t\n\tinline bool Find(ll Key1, ll Key2)\n\t{\n\t\tfor (int i = ls[Key1]; i; i = nx[i])\n\t\t\tif (vl[i] == Key2)\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\t\t\n} List;\n\nll hsh1[N], hsh2[N], power1[N], power2[N];\n\ninline ll seg1(int l, int r)\n{\n\treturn (hsh1[r] - hsh1[l - 1] * power1[r - l + 1] % Mod1 + Mod1) % Mod1;\n}\n\ninline ll seg2(int l, int r)\n{\n\treturn (hsh2[r] - hsh2[l - 1] * power2[r - l + 1] % Mod2 + Mod2) % Mod2;\n}\n\nsigned main()\n{\n//\tfreopen(\"block.in\", \"r\", stdin);\n//\tfreopen(\"block.out\", \"w\", stdout);\n\n\tn = read();\n\tscanf(\"%s\", A + 1);\n\tscanf(\"%s\", B + 1);\n\tpower1[0] = power2[0] = 1;\n\tfor (int i = 1; i <= n; i ++)\n\t{\n\t\tpower1[i] = power1[i - 1] * base % Mod1;\n\t\tpower2[i] = power2[i - 1] * base % Mod2;\n\t}\n\tfor (int i = 1; i <= n; i ++)\n\t{\n\t\thsh1[i] = (hsh1[i - 1] * base % Mod1 + (B[i] - 'a' + 1)) % Mod1;\n\t\thsh2[i] = (hsh2[i - 1] * base % Mod2 + (B[i] - 'a' + 1)) % Mod2;\n\t}\n\tfor (int st = 1; st <= n; st ++)\t\n\t{\n\t\tint L = st, R = n, res = 0, tst = st;\n\t\tfor (; L <= R; )\n\t\t{\n\t\t\tint mid = (L + R) >> 1;\n\t\t\tif (List.Find(seg1(st, mid), seg2(st, mid)))\n\t\t\t\ttst = L = mid + 1;\n\t\t\telse\n\t\t\t\tR = mid - 1;\n\t\t}\n\t\tL = tst, R = n;\n\t\tfor (; L <= R; )\n\t\t{\n\t\t\tint mid = (L + R) >> 1, k = st;\n\t\t\tfor (int i = 1; i <= n; i ++)\n\t\t\t\tif (A[i] == B[k])\n\t\t\t\t{\n\t\t\t\t\t++ k;\n\t\t\t\t\tif (k > mid)\n\t\t\t\t\t\tbreak ;\n\t\t\t\t}\n\t\t\tif (k > mid)\n\t\t\t\tL = mid + 1, res = mid - tst + 1;\n\t\t\telse\n\t\t\t\tR = mid - 1;\n\t\t}\n\t\tans += res;\n\t\tfor (int i = st; i <= n; i ++)\n\t\t\tList.Add(seg1(st, i), seg2(st, i));\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n```\n\n### \u66f4\u4f18\u7684\u60f3\u6cd5\n\n\u5bf9$ s $\u505a\u4e00\u4e2a\u5b50\u5e8f\u5217\u81ea\u52a8\u673a\uff0c\u679a\u4e3e$ t $\u4e2d\u8fde\u7eed\u5b50\u4e32\u7684\u8d77\u70b9\uff0c\u7ec8\u70b9\u4e00\u4e2a\u4e2a\u5728$ s $\u4e2d\u67e5\u8be2\u5373\u53ef\u3002",
        "postTime": 1616838009,
        "uid": 53533,
        "name": "renshale",
        "ccfLevel": 0,
        "title": "\uff082021 NOI Online TG T2\uff09P7469 \u9898\u89e3"
    },
    {
        "content": "\u6b64\u9898\u53ef\u4ee5\u7528 \u5b57\u5178\u56fe + \u54c8\u5e0c \u6c42\u89e3\u3002\n\n\u81f3\u4e8e\u5b57\u5178\u56fe\uff0c\u542c\u4e0a\u53bb\u590d\u6742\uff0c\u5176\u5b9e\u6838\u5fc3\u4ee3\u7801\u53ea\u6709 3 \u884c\u3002\n```c\nfor(i = n; i; i --)\n    for(j = 0; j < i; j ++)\n        graph[j][str1[i]-'a'] = i;\n        //graph[i][j] \u8868\u793a \u7b2ci\u4e2a\u5b57\u7b26\u53f3\u9762\u6700\u8fd1\u7684\u4e3a'a'+j\u7684\u5b57\u7b26\u3002\n```\n\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u4e8c\u8005\u662f\u5426\u6709\u7b26\u5408\u8981\u6c42\u7684\u5b50\u4e32\u3002\n\n\u54c8\u5e0c\u9700\u8981\u80fd\u591f\u5e38\u6570\u590d\u6742\u5ea6\u7b97\u51fa\u5b50\u4e32\u7684\u54c8\u5e0c\u3002\n\n\u4e0b\u9762\u8d34\u51fa\u4ee3\u7801\uff1a\n```c\n#include <stdio.h>\n\ntypedef long long I;\n\n#define SWAP(type,a,b) ({type tmp = a; a = b; b = tmp;})\n\n#define N 3000\n#define M 26\n#define HASH 131LL\nI graph[N+5][M+5];\nchar str1[N+5],str2[N+5];\nI hash[N+5],fac[N+5]={1}, n, all[N*N+5], len;\nvoid inithash() {\n\tint i;\n\tfor(i = 1; i <= n; i ++) {\n\t\thash[i] = hash[i-1] * HASH + str2[i];\n\t\tfac[i] = fac[i-1] * HASH;\n\t}\n}\nI gethash(I l, I r) {\n\treturn hash[r] - hash[l-1] * fac[r-l+1];\n}\nvoid sort(I l, I r) {\n\tI i = l, j = r;\n\tI m = all[(l+r)>>1];\n\tdo {\n\t\twhile(all[i] < m) ++i;\n\t\twhile(all[j] > m) --j;\n\t\tif(i <= j) {\n\t\t\tSWAP(I,all[i],all[j]);\n\t\t\t++i, --j;\n\t\t}\n\t} while(i <= j);\n\tif(j > l) sort(l, j);\n\tif(i < r) sort(i, r);\n}\nint main() {\n\tI i, j;\n\tscanf(\"%d %s %s\", &n, str1+1, str2+1);\n\tfor(i = n; i; i --)\n\t\tfor(j = 0; j < i; j ++)\n\t\t\tgraph[j][str1[i]-'a'] = i;\n\tinithash();\n\t\n\tfor(i = 1; i <= n; i ++) {\n\t    I now = 0;\n\t\tfor(j = i; j <= n; j ++) {\n\t\t\tif(graph[now][str2[j] - 'a'] == 0)\n\t\t\t\tbreak;\n\t\t\tnow = graph[now][str2[j] - 'a'];\n\t\t\tall[++len] = gethash(i, j);\n\t\t}\n\t}\n\tsort(1, len);\n\tI ans = 0;\n\tfor(i = 1; i <= len; i ++)\n\t\tans += (all[i+1] != all[i]);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1616832380,
        "uid": 52381,
        "name": "CodingJellyfish",
        "ccfLevel": 6,
        "title": "\u5b57\u7b26\u4e32\u54c8\u5e0cP7469"
    }
]