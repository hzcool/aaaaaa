[
    {
        "content": "\u5f88\u660e\u663e $O(n\\sqrt{n}\\log n)$ \u7684\u7b97\u6cd5\u65e0\u6cd5\u901a\u8fc7\u5982\u6b64\u5927\u7684\u6570\u636e\u8303\u56f4\uff0c\u6211\u4eec\u8003\u8651\u662f\u5426\u5b58\u5728 $O(n\\log^2n)$ \u7684\u7b97\u6cd5\u3002  \n\u9996\u5148\u6211\u4eec\u60f3\u5230\u6784\u9020\u4e00\u4e2a\u957f\u5ea6\u4e3a $n-1$ \u7684 $01$ \u4e32 $b$ \u4e3a $b_i=a_i\\ xor\\ a_{i+1}$\u3002\u8fd9\u6837\uff0c\u957f\u5ea6\u4e3a $k-1$ \u4e14\u5168\u4e3a $1$ \u7684 $b$ \u7684\u5b50\u4e32\u5c31\u4ee3\u8868\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684 VS \u4e32\u3002  \n\u6211\u4eec\u8003\u8651\u5982\u4f55\u53bb\u7ef4\u62a4 $b$ \u6570\u7ec4\uff0c\u5148\u770b\u5982\u4f55\u67e5\u8be2\u3002  \n\u8bbe\u6781\u957f\u8fde\u7eed\u4e32 $l,r$ \u4e3a $\\forall i\\in [l,r] b_i=1 \\land b_{l-1}=b_{r+1}=0$\uff0c\u8bbe $b_0=b_{n+1}=0$\u3002  \n\u9996\u5148\u6211\u4eec\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u7684\u662f\u8be5\u533a\u95f4\u5185\u6240\u6709\u6781\u957f\u8fde\u7eed\u4e32\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7c7b\u4f3c ODT \u7684\u65b9\u5f0f\u7528 set \u7ef4\u62a4\u533a\u95f4\u3002  \n\u5bf9\u4e8e $3$ \u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u533a\u95f4\u5185\u6240\u6709\u6781\u957f\u8fde\u7eed\u4e32\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a $l(l\\ge k-1)$ \u7684\u6781\u957f\u8fde\u7eed\u4e32\uff0c\u5b83\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u662f $l-k+2$\u3002\u628a\u5b83\u62c6\u6210 $l$ \u548c $-k+2$ \u4e24\u90e8\u5206\u8003\u8651\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6bcf\u4e2a\u8282\u70b9\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u957f\u5ea6 $\\ge k-1$ \u7684\u6781\u957f\u8fde\u7eed\u4e32\u957f\u5ea6\u548c\u548c\u4e2a\u6570\u3002\u6c42\u5f97\u7b54\u6848\u3002  \n\u6ce8\u610f\u5f53\u524d\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u6781\u957f\u8fde\u7eed\u4e32\u53ef\u80fd\u548c\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u540e\u4e00\u4e2a\u6781\u957f\u8fde\u7eed\u4e32\u62fc\u63a5\u5f97\u5230\u7b54\u6848\u3002\n\u5bf9\u4e8e $4$ \u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u6c42\u5f97\u533a\u95f4\u5185\u6781\u957f\u8fde\u7eed\u4e32\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u5220\u5806\uff0c\u7ef4\u62a4\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002\u540c\u7406\u6ce8\u610f\u5f53\u524d\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u6781\u957f\u8fde\u7eed\u4e32\u53ef\u80fd\u548c\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u540e\u4e00\u4e2a\u6781\u957f\u8fde\u7eed\u4e32\u62fc\u63a5\u5f97\u5230\u7b54\u6848\u3002  \n\n---------\n\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u4fee\u6539\u3002  \n\u5bf9\u4e8e $0/1$ \u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u4f1a\u5c06 $[l,r-1]$ \u5185\u7684 $b$ \u5168\u90e8\u8d4b\u503c\u4e3a $0$\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u8fd9\u4e9b\u4e3a $1$ \u7684 $b$\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u4e00\u4e2a\u4e00\u4e2a\u5220\u9664\u3002\u7136\u540e\u6ce8\u610f $l-1$ \u4e0e $l$\uff0c$r$ \u4e0e $r+1$ \u662f\u5426\u4f1a\u4f7f $b$ \u4ea7\u751f\u53d8\u52a8\u3002  \n\u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u5bf9\u4e8e $[l,r-1]$ \u5185\u7684 $b$ \u4e0d\u5f71\u54cd\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6ce8\u610f $l-1$ \u4e0e $l$\uff0c$r$ \u4e0e $r+1$ \u662f\u5426\u4f1a\u4f7f $b$ \u4ea7\u751f\u53d8\u52a8\u3002  \n\u4e3a\u4e86\u7ef4\u62a4\u8fb9\u754c\uff0c\u6211\u4eec\u9700\u8981\u518d\u6765\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4 $a$ \u7684\u771f\u5b9e\u503c\u3002  \n\u6211\u4eec\u53d1\u73b0 $b$ \u6570\u7ec4\u4e2d\u4e3a $1$ \u7684\u6570\u91cf\u662f $O(n)$ \u4e2a\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6700\u591a\u589e\u52a0 $O(1)$ \u4e2a\uff0c\u6240\u4ee5 $0/1$ \u64cd\u4f5c\u5220\u9664\u7684\u6570\u91cf\u7684\u603b\u548c\u4e3a $O(n)$ \u4e2a\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u6b63\u786e\uff1a$O(n\\log^2n)$\u3002  \n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5e38\u6570\u5de8\u5927\uff0c\u5728\u4fee\u6539\u5f88\u591a\u7684\u65f6\u5019\u8dd1\u5f97\u6bd4\u66b4\u529b\u8fd8\u6162\u3002\n```cpp\n#include<bits/stdc++.h>\n#define lc id<<1\n#define rc id<<1|1\nusing namespace std;\n//\u53bb\u6389\u4e86\u5feb\u8bfb\u5feb\u5199\nconst int maxn=3e5+5;\ntypedef const int ci;\nstruct node {\n    int l,r;\n    node() {}\n    node(ci l,ci r) {\n        this->l=l,this->r=r;\n    }\n    const bool operator<(const node &b)const {\n        return l<b.l;\n    }\n    const bool operator==(const node &b)const {\n        return l==b.l&&r==b.r;\n    }\n} lst;//\u7ef4\u62a4\u533a\u95f4\u7ed3\u6784\u4f53\nstruct que {\n    priority_queue<int> q,e;\n    void ins(ci x) {\n        q.push(x);\n    }\n    void del(ci x) {\n        q.top()==x?q.pop():e.push(x);\n    }\n    int top() {\n        while(q.size()&&e.size()&&q.top()==e.top())q.pop(),e.pop();\n        return q.size()?q.top():0;\n    }\n};//\u5bf9\u9876\u5806\ntypedef set<node>::iterator iter;\nint a[maxn],b[maxn],n,m;\nnamespace Seg {\n    struct tree {\n        int l,r,mid;\n        char v,tag,rev;\n    } t[maxn*4];\n    void build(ci id,ci l,ci r) {\n        t[id]=(tree) {\n            l,r,l+r>>1,0,-1,0\n        };\n        if(l==r)return t[id].v=a[l],void();\n        ci mid=l+r>>1;\n        build(lc,l,mid),build(rc,mid+1,r);\n    }\n    void chtag(ci id,char v) {\n        t[id].v=t[id].tag=v,t[id].rev=0;\n    }\n    void revtag(ci id) {\n        t[id].rev^=1,t[id].v^=1;\n        if(~t[id].tag)t[id].tag^=1;\n    }\n    void pushdown(ci id) {\n        if(t[id].rev)revtag(lc),revtag(rc),t[id].rev=0;\n        char &k=t[id].tag;\n        if(~k)chtag(lc,k),chtag(rc,k),k=-1;\n    }\n    void change(ci id,ci l,ci r,ci v) {\n        if(t[id].l>=l&&t[id].r<=r)return chtag(id,v);\n        pushdown(id);\n        if(l<=t[id].mid)change(lc,l,r,v);\n        if(r>t[id].mid)change(rc,l,r,v);\n    }\n    void rev(ci id,ci l,ci r) {\n        if(t[id].l>=l&&t[id].r<=r)return revtag(id);\n        pushdown(id);\n        if(l<=t[id].mid)rev(lc,l,r);\n        if(r>t[id].mid)rev(rc,l,r);\n    }\n    int ask(ci id,ci v) {\n        if(t[id].l==t[id].r)return t[id].v;\n        pushdown(id);\n        return ask(v<=t[id].mid?lc:rc,v);\n    }\n}//\u7ef4\u62a4\u771f\u5b9e\u503c\u7ebf\u6bb5\u6811\nstruct tree {\n    int l,r,mid,len;\n    set<node> s;\n    vector<int> c,w;\n    que q;\n    void add(int x,ci v) {\n        v>0?q.ins(x):q.del(x);\n        if(x==1)return;\n        ci y=x;\n        x=len-x+1;\n        while(x<=len)c[x]+=v,w[x]+=v*y,x+=x&(-x);\n    }\n    int ask(int x) {\n        if(x==1)return 0;\n        ci y=x;\n        int sum=0;\n        x=len-x+1;\n        while(x)sum+=w[x]-c[x]*(y-1),x-=x&(-x);\n        return sum;\n    }//\u7ef4\u62a4 3 \u64cd\u4f5c\u6811\u72b6\u6570\u7ec4\n    void change0(ci x) {\n        iter it=s.upper_bound(node(x,0));\n        it--;\n        ci l=it->l,r=it->r,len=r-l+1;\n        if(l==x&&r==x)return add(1,-1),s.erase(it),void();\n        add(len,-1),s.erase(it);\n        if(l==x)return add(len-1,1),s.insert(node(l+1,r)),void();\n        if(r==x)return add(len-1,1),s.insert(node(l,r-1)),void();\n        add(x-l,1),s.insert(node(l,x-1));\n        add(r-x,1),s.insert(node(x+1,r));\n    }//\u5c06 1 \u53d8\u6210 0\n    void change1(ci x) {\n        if(!s.size())return add(1,1),s.insert(node(x,x)),void();\n        iter ir=s.upper_bound(node(x,0)),il=ir;\n        il--;\n        const bool pd1=ir!=s.begin()&&il->r==x-1,pd2=ir!=s.end()&&ir->l==x+1;\n        if(!pd1&&!pd2)return add(1,1),s.insert(node(x,x)),void();\n        if(!pd2) {\n            ci l=il->l;\n            add(x-l,-1),s.erase(il);\n            add(x-l+1,1),s.insert(node(l,x));\n            return;\n        }\n        if(!pd1) {\n            ci r=ir->r;\n            add(r-x,-1),s.erase(ir);\n            add(r-x+1,1),s.insert(node(x,r));\n            return;\n        }\n        ci l=il->l,r=ir->r;\n        add(x-l,-1),s.erase(il);\n        add(r-x,-1),s.erase(ir);\n        add(r-l+1,1),s.insert(node(l,r));\n    }//\u5c06 0 \u53d8\u6210 1\n    iter split(int p) {\n        iter it=s.lower_bound(node(p,-1)),tmp=it;\n        tmp--;\n        if(it!=s.end()&&(it==s.begin()||it->l==p))return it;\n        if(tmp->r>=p) {\n            int l=tmp->l,r=tmp->r;\n            add(r-l+1,-1),s.erase(tmp);\n            if(p>l)add(p-l,1),s.insert(node(l,p-1));\n            return add(r-p+1,1),s.insert(node(p,r)).first;\n        }\n        return it;\n    }//\u7c7b\u4f3c ODT split \u51fa\u4e00\u6bb5\u533a\u95f4\n} t[maxn*4];\nvoid build(ci id,ci l,ci r) {\n    t[id]=(tree) {\n        l,r,l+r>>1,r-l+1\n    };\n    t[id].c.resize(r-l+2),t[id].w.resize(r-l+2);\n    for(register int i=l; i<=r; i++)if(b[i])t[id].change1(i);\n    if(l==r)return;\n    ci mid=l+r>>1;\n    build(lc,l,mid),build(rc,mid+1,r);\n}\nvoid add(ci id,ci v,const bool p) {\n    p?t[id].change1(v):t[id].change0(v);\n    if(t[id].l==t[id].r)return;\n    v<=t[id].mid?add(lc,v,p):add(rc,v,p);\n}\nvoid del(ci id,ci l,ci r) {\n    if(!t[id].s.size())return;\n    if(t[id].l>=l&&t[id].r<=r) {\n        for(register iter it=t[id].s.begin(); it!=t[id].s.end(); it=t[id].s.erase(it))\n            t[id].add(it->r-it->l+1,-1);\n        if(t[id].l!=t[id].r)del(lc,l,r),del(rc,l,r);\n        return;\n    }\n    for(iter ir=t[id].split(min(t[id].r,r)+1),il=t[id].split(max(t[id].l,l)); il!=ir; il=t[id].s.erase(il))\n        t[id].add(il->r-il->l+1,-1);\n    if(l<=t[id].mid)del(lc,l,r);\n    if(r>t[id].mid)del(rc,l,r);\n}//\u5220\u9664 [l,r-1] \u5185\u6240\u6709 1\nint asksum(ci id,ci l,ci r,ci k) {\n    if(t[id].l>=l&&t[id].r<=r) {\n        if(!t[id].s.size())return 0;\n        int sum=t[id].len>=k?t[id].ask(k):0;\n        node now=*t[id].s.begin(),nl=*--t[id].s.end();\n        if(lst.r+1!=now.l)return lst=nl,sum;\n        sum+=max(now.r-lst.l+1-k+1,0)-max(now.r-now.l+1-k+1,0)-max(lst.r-lst.l+1-k+1,0);\n        lst=nl==now?node(lst.l,nl.r):nl;\n        return sum;\n    }\n    int sum=0;\n    if(l<=t[id].mid)sum+=asksum(lc,l,r,k);\n    if(r>t[id].mid)sum+=asksum(rc,l,r,k);\n    return sum;\n}//3 \u64cd\u4f5c\nint askmax(ci id,ci l,ci r) {\n    if(t[id].l>=l&&t[id].r<=r) {\n        if(!t[id].s.size())return 1;\n        int sum=t[id].q.top();\n        node now=*t[id].s.begin(),nl=*--t[id].s.end();\n        if(lst.r+1!=now.l)return lst=nl,sum+1;\n        sum=max(sum,now.r-lst.l+1),lst=nl==now?node(lst.l,nl.r):nl;\n        return sum+1;\n    }\n    int sum=1;\n    if(l<=t[id].mid)sum=max(sum,askmax(lc,l,r));\n    if(r>t[id].mid)sum=max(sum,askmax(rc,l,r));\n    return sum;\n}//4 \u64cd\u4f5c\nint main() {\n    int op,l,r,z;\n    n=read(),m=read();\n    for(register int i=1; i<=n; i++)a[i]=read();\n    Seg::build(1,1,n);\n    for(register int i=1; i<n; i++) {\n        b[i]=a[i]^a[i+1];\n    }\n    build(1,1,n-1);\n    while(m--) {\n        op=read(),l=read(),r=read();\n        if(op<=1) {\n            if(l<r)del(1,l,r-1);\n            if(l>1) {\n                ci x=Seg::ask(1,l-1),y=Seg::ask(1,l);\n                if(x!=op&&y!=op)add(1,l-1,1);\n                if(x==op&&y!=op)add(1,l-1,0);\n            }\n            if(r<n) {\n                ci x=Seg::ask(1,r+1),y=Seg::ask(1,r);\n                if(x!=op&&y!=op)add(1,r,1);\n                if(x==op&&y!=op)add(1,r,0);\n            }\n            Seg::change(1,l,r,op);\n        }\n        if(op==2) {\n            if(l>1)Seg::ask(1,l-1)!=Seg::ask(1,l)?add(1,l-1,0):add(1,l-1,1);\n            if(r<n)Seg::ask(1,r)!=Seg::ask(1,r+1)?add(1,r,0):add(1,r,1);\n            Seg::rev(1,l,r);\n        }\n        if(op==3)z=read(),lst=node(-1,-1),printnum(asksum(1,l,r-1,z-1),'\\n');\n        if(op==4)lst=node(-1,-1),printnum(askmax(1,l,r-1),'\\n');\n    }\n    pc(0,1);\n    return 0;\n}\n```   \n\u5199\u5728\u540e\u9762\uff1a\u8fd9\u4e2a\u6811\u5957\u6811\u9898\u51fa\u7684\u8fd8\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u4f46\u6211\u5b9e\u73b0\u7684\u6811\u5957\u6811\u5e38\u6570\u8fc7\u5927\u3002\u5982\u679c\u6709\u5e38\u6570\u66f4\u4e3a\u4f18\u79c0\u7684 $O(n\\log^2n)$ \u505a\u6cd5\uff0c\u8bf7\u63d0\u51fa\u6765\uff0c\u8c22\u8c22\u3002",
        "postTime": 1627016243,
        "uid": 104324,
        "name": "abruce",
        "ccfLevel": 7,
        "title": "\u9898\u89e3--VSQ"
    },
    {
        "content": "\u5199 DS \u601d\u8def\u5f88\u91cd\u8981\uff0c\u5982\u4f55\u7ef4\u62a4\u7684\u7ec6\u8282\u76f4\u63a5\u770b\u4ee3\u7801\uff0c\u6587\u5b57\u90e8\u5206\u4e3b\u8981\u5199\u7ef4\u62a4\u601d\u8def\u3002\u53d1\u73b0\u7ef4\u62a4\u7684\u4e1c\u897f\u5176\u5b9e\u662f\u5728\u6bcf\u4e2a\u503c\u5f02\u6216\u4e0b\u6807\u7684\u5947\u5076\u4ee5\u540e\u7684\u533a\u95f4\u8fde\u7eed\u6bb5\uff0c\u8d5b\u65f6\u51b2\u4e86 40min \u540e\u53d1\u73b0\u8fd8\u662f\u6ca1\u6709\u7ef4\u62a4\u601d\u8def\uff0c\u5c31\u76f4\u63a5\u653e\u5f03\u5e38\u89c4\u590d\u6742\u5ea6\u7684\u7ef4\u62a4\u65b9\u5f0f\u3002\n\n\u770b\u5230 0 \u548c 1 \u64cd\u4f5c\uff0c\u8003\u8651\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e2a\u52bf\u80fd\u7684\u4e1c\u897f\u3002\u6211\u4eec\u8003\u8651\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u91cc\u9762\u76f4\u63a5\u5b58\u50a8\u6bcf\u79cd\u7ebf\u6bb5\u7684\u957f\u5ea6\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u7ba1\u8f96\u957f\u5ea6\u4e3a $len$ \u7684\u8282\u70b9\uff0c\u6211\u4eec\u7528 vector \u5b58\u50a8\u5176\u540c\u8272\u7ebf\u6bb5\uff0c\u5176\u672c\u8d28\u4e0d\u540c\u7684\u5143\u7d20\u81f3\u591a\u53ea\u6709 $\\sqrt{len}$ \u79cd\uff0c\u5e76\u4e14\u53ea\u80fd\u5361\u6ee1 $\\log n$ \u4e2a\u8282\u70b9\u3002\n\n\u6211\u4eec\u9996\u5148\u79f0\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u590d\u6742\u5ea6\u4e3a**\u57fa\u7840\u590d\u6742\u5ea6**\u3002\u90a3\u4e48\u5728\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u7684\u7ebf\u6bb5\u6240\u9700\u8981\u7684\u65f6\u95f4\u5c31\u662f**\u989d\u5916\u590d\u6742\u5ea6**\uff0c\u6211\u4eec\u4ee4**\u52bf\u80fd**\u5c31\u662f\u6240\u6709\u7ebf\u6bb5\u6811\u8282\u70b9\u7684**\u989d\u5916\u590d\u6742\u5ea6**\u4e4b\u548c\u3002\u901a\u8fc7\u7a0b\u5e8f\u5b9e\u64cd\u6253\u8868\u5f97\u77e5\u5efa\u6811\u7684\u52bf\u80fd\u5728\u591a\u79cd\u7279\u6b8a\u6784\u9020\u7684\u6570\u636e\u63a5\u8fd1\u4e8e $\\mathcal O(n)$\uff0c\u5373\u5747\u644a $\\mathcal O(1)$\u3002\u968f\u673a\u6570\u636e\u66f4\u5feb\u3002~~\u4e0a\u754c\u4e0d\u4f1a\u5206\u6790\u3002~~\uff0c\u8bb0\u6bcf\u4e2a\u8282\u70b9\u7684\u989d\u5916\u590d\u6742\u5ea6\u4e3a $D$\uff0c\u5176\u4e2d $D$ \u5728\u591a\u79cd\u6570\u636e\u4e0b\u5747\u8868\u73b0\u4e3a $\\mathcal O(1)$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0 0\u30011 \u64cd\u4f5c\u4f1a\u76f4\u63a5\u5c06\u4e00\u4e2a\u533a\u95f4\u7684\u52bf\u80fd\u6e05\u96f6\uff0c\u8fd9\u91cc\u540c\u65f6\u7528\u61d2\u6807\u8bb0\u7ef4\u62a4\u5373\u53ef\u3002\u590d\u6742\u5ea6 $\\mathcal O(\\log n(D+1))$\n\n\u64cd\u4f5c 2 \u5bf9\u52bf\u80fd\u7684\u5747\u644a\u5f71\u54cd\u4e0d\u5927\uff0c\u5168\u5c40\u6765\u770b\uff0c\u5b83\u53ea\u4f1a\u6700\u591a\u589e\u52a0 2 \u4e2a\u8fde\u7eed\u6bb5\uff0c\u4f46\u56e0\u4e3a\u533a\u95f4\u672c\u8d28\u4e0d\u540c\u7684\u8fde\u7eed\u6bb5\u6709\u6839\u53f7\u7684\u4e0a\u754c\uff0c\u6240\u4ee5\u5b83\u5bf9\u52bf\u80fd\u7684\u4fee\u6539\u4e5f\u6709\u4e0a\u754c\u3002\u590d\u6742\u5ea6 $\\mathcal O(\\log n(D+1))$\n\n\u64cd\u4f5c 3 \u76f4\u63a5\u5408\u5e76 $\\log n$ \u4e2a\u533a\u95f4\uff0c\u7136\u540e\u904d\u5386\uff0c\u6709\u4e0a\u754c $\\mathcal O(\\sqrt{n})$\uff0c\u4e0b\u754c $\\mathcal O(1)$\u3002\n\n```\n//ayame\u4fdd\u4f51\uff0c\u5938\u54e5\u4fdd\u4f51\uff0c\u72d7\u5988\u4fdd\u4f51\uff0cMDR\u4fdd\u4f51\uff0c\u9509\u5200\u602a\u4fdd\u4f51\uff0cM99\u4fdd\u4f51\uff0c\u514b\u7239\u4fdd\u4f51\n#include<bits/stdc++.h>\nusing namespace std;\nint p1=1000000,p2=0;\nchar buf[1000005],wb[1000005];\nint gc() {\n\tif(p1>=1000000)fread(buf,1,1000000,stdin),p1=0;\n\treturn buf[p1++];\n}\n#define gc getchar\n#define Loli true\n#define Kon xor true\nlong long getint() {\n\tlong long ret=0,flag=1;\n\tchar c=gc();\n\twhile(c<'0'||c>'9') {\n\t\tif(c=='-')flag=-1;\n\t\tc=gc();\n\t}\n\twhile(c<='9'&&c>='0') {\n\t\tret=(ret<<3)+(ret<<1)+c-'0';\n\t\tc=gc();\n\t}\n\treturn ret*flag;\n}\nvoid pc(char x) {\n\tif(p2>=1000000)fwrite(wb,1,1000000,stdout),p2=0;\n\twb[p2++]=x;\n}\nvoid wrt(long long x) {\n\tif(x<0)pc('-'),x=-x;\n\tint c[24]= {0};\n\tif(!x)return pc('0'),void();\n\twhile(x)c[++c[0]]=x%10,x/=10;\n\twhile(c[0])pc(c[c[0]--]+'0');\n}\nint n,m,a[500005];\nvector< pair<int,int> > :: iterator it1,it2;\nstruct node{\n\tint l,r,len;\n\tint mtag0,mtag1,rtag;\n\tint lv,rv,lmx,rmx,ans;\n\tlong long num;\n\tvector< pair<int,int> > s;\n\tnode(){\n\t\tl=r=len=0,num=1;\n\t\tmtag0=mtag1=0,rtag=0;\n\t\tlv=rv=0,lmx=rmx=ans=1;\n\t\ts.clear();\n\t}\n}v[1200005],tmp;\nnamespace S{\n\tvoid push_rtag(int rt){\n\t\tswap(v[rt].mtag0,v[rt].mtag1);\n\t\tv[rt].lv^=1,v[rt].rv^=1,v[rt].rtag^=1;\n\t}\n\tvoid push_mtag0(int rt){\n\t\tv[rt].mtag0=1,v[rt].mtag1=v[rt].rtag=0;\n\t\tv[rt].lv=0,v[rt].rv=!(v[rt].len&1);\n\t\tv[rt].lmx=v[rt].rmx=v[rt].ans=1;\n\t\tv[rt].num=v[rt].len;\n\t\tv[rt].s.clear(),v[rt].s.push_back(make_pair(1,v[rt].len));\n\t}\n\tvoid push_mtag1(int rt){\n\t\tv[rt].mtag1=1,v[rt].mtag0=v[rt].rtag=0;\n\t\tv[rt].lv=1,v[rt].rv=(v[rt].len&1);\n\t\tv[rt].lmx=v[rt].rmx=v[rt].ans=1;\n\t\tv[rt].num=v[rt].len;\n\t\tv[rt].s.clear(),v[rt].s.push_back(make_pair(1,v[rt].len));\n\t}\n\tvoid push_down(int rt){\n\t\tif(v[rt].rtag){\n\t\t\tpush_rtag(rt<<1);\n\t\t\tpush_rtag(rt<<1|1);\n\t\t\tv[rt].rtag=0;\n\t\t}\n\t\tif(v[rt].mtag0){\n\t\t\tpush_mtag0(rt<<1);\n\t\t\t(v[rt<<1].len&1)?push_mtag1(rt<<1|1):push_mtag0(rt<<1|1);\n\t\t\tv[rt].mtag0=0;\n\t\t}\n\t\tif(v[rt].mtag1){\n\t\t\tpush_mtag1(rt<<1);\n\t\t\t(v[rt<<1].len&1)?push_mtag0(rt<<1|1):push_mtag1(rt<<1|1);\n\t\t\tv[rt].mtag1=0;\n\t\t}\n\t}\n\tvoid push_up(int rt){\n\t\tv[rt].lv=v[rt<<1].lv,v[rt].rv=v[rt<<1|1].rv;\n\t\tv[rt].lmx=(v[rt<<1].lmx==v[rt<<1].len&&v[rt<<1].rv==v[rt<<1|1].lv)?v[rt<<1].len+v[rt<<1|1].lmx:v[rt<<1].lmx;\n\t\tv[rt].rmx=(v[rt<<1|1].rmx==v[rt<<1|1].len&&v[rt<<1|1].lv==v[rt<<1].rv)?v[rt<<1|1].len+v[rt<<1].rmx:v[rt<<1|1].rmx;\n\t\tv[rt].ans=max(v[rt<<1].ans,v[rt<<1|1].ans),v[rt].ans=max(v[rt].ans,max(v[rt].lmx,v[rt].rmx));\n\t\tif(v[rt<<1].rv==v[rt<<1|1].lv)v[rt].ans=max(v[rt].ans,v[rt<<1].rmx+v[rt<<1|1].lmx);\n\t\tv[rt].num=v[rt<<1].num+v[rt<<1|1].num+(v[rt<<1].rv==v[rt<<1|1].lv?1ll*v[rt<<1].rmx*v[rt<<1|1].lmx:0);\n\t\t\n\t\tbool flg=0;int mx1=0,mx2=0;\n\t\tit1=v[rt<<1].s.begin(),it2=v[rt<<1|1].s.begin(),v[rt].s.clear();\n\t\twhile(it1!=v[rt<<1].s.end()&&it2!=v[rt<<1|1].s.end()){\n\t\t\tint v1=it1->first,v2=it2->first,s1=it1->second,s2=it2->second,S=s1+s2;mx1=max(mx1,v1),mx2=max(mx2,v2);\n\t\t\tif(v[rt<<1].rv==v[rt<<1|1].lv){\n\t\t\t\tif(v1==v[rt<<1].rmx)--s1;\n\t\t\t\tif(v2==v[rt<<1|1].lmx)--s2;\n\t\t\t\tif(!flg&&v1==v[rt<<1].rmx+v[rt<<1|1].lmx&&v1<=v2)++s1,flg=1;\n\t\t\t\tif(!flg&&v2==v[rt<<1].rmx+v[rt<<1|1].lmx&&v1>=v2)++s2,flg=1;\n\t\t\t\tif(!flg&&v1>v[rt<<1].rmx+v[rt<<1|1].lmx&&v2>v[rt<<1].rmx+v[rt<<1|1].lmx)flg=1,v[rt].s.push_back(make_pair(v[rt<<1].rmx+v[rt<<1|1].lmx,1));\n\t\t\t\tS=s1+s2;\n\t\t\t}\n\t\t\tif(v1>v2){\n\t\t\t\tif(s2)v[rt].s.push_back(make_pair(v2,s2)),it2++;\n\t\t\t\telse it2++;\n\t\t\t}\n\t\t\tif(v1<v2){\n\t\t\t\tif(s1)v[rt].s.push_back(make_pair(v1,s1)),it1++;\n\t\t\t\telse it1++;\n\t\t\t}\n\t\t\tif(v1==v2){\n\t\t\t\tif(S)v[rt].s.push_back(make_pair(v1,S)),it1++,it2++;\n\t\t\t\telse it1++,it2++;\n\t\t\t}\n\t\t}\n\t\twhile(it1!=v[rt<<1].s.end()){\n\t\t\tint v1=it1->first,s1=it1->second;mx1=max(mx1,v1);\n\t\t\tif(v[rt<<1].rv==v[rt<<1|1].lv){\n\t\t\t\tif(v1==v[rt<<1].rmx)--s1;\n\t\t\t\tif(!flg&&v1==v[rt<<1].rmx+v[rt<<1|1].lmx)++s1,flg=1;\n\t\t\t\tif(!flg&&v1>v[rt<<1].rmx+v[rt<<1|1].lmx)flg=1,v[rt].s.push_back(make_pair(v[rt<<1].rmx+v[rt<<1|1].lmx,1));\n\t\t\t}\n\t\t\tif(s1)v[rt].s.push_back(make_pair(v1,s1));\n\t\t\t++it1;\n\t\t}\n\t\twhile(it2!=v[rt<<1|1].s.end()){\n\t\t\tint v2=it2->first,s2=it2->second;mx2=max(mx2,v2);\n\t\t\tif(v[rt<<1].rv==v[rt<<1|1].lv){\n\t\t\t\tif(v2==v[rt<<1|1].lmx)--s2;\n\t\t\t\tif(!flg&&v2==v[rt<<1].rmx+v[rt<<1|1].lmx)++s2,flg=1;\n\t\t\t\tif(!flg&&v2>v[rt<<1].rmx+v[rt<<1|1].lmx)flg=1,v[rt].s.push_back(make_pair(v[rt<<1].rmx+v[rt<<1|1].lmx,1));\n\t\t\t}\n\t\t\tif(s2)v[rt].s.push_back(make_pair(v2,s2));\n\t\t\t++it2;\n\t\t}\n\t\tif(v[rt<<1].rv==v[rt<<1|1].lv&&max(mx1,mx2)<v[rt<<1].rmx+v[rt<<1|1].lmx)v[rt].s.push_back(make_pair(v[rt<<1].rmx+v[rt<<1|1].lmx,1));\n\t}\n\tvoid merge_node(node &A,node B){\n\t\tif(!A.l||!A.r)return A=B,void();\n\t\tnode ret=node();\n\t\tret.l=A.l,ret.r=B.r,ret.len=ret.r-ret.l+1;\n\t\tret.lv=A.lv,ret.rv=B.rv;\n\t\tret.lmx=(A.lmx==A.len&&A.rv==B.lv)?A.len+B.lmx:A.lmx;\n\t\tret.rmx=(B.rmx==B.len&&B.lv==A.rv)?B.len+A.rmx:B.rmx;\n\t\tret.ans=max(A.ans,B.ans),ret.ans=max(ret.ans,max(ret.lmx,ret.rmx));\n\t\tif(A.rv==B.lv)ret.ans=max(ret.ans,A.rmx+B.lmx);\n\t\tret.num=A.num+B.num+(A.rv==B.lv?1ll*A.rmx*B.lmx:0);\n\t\t\n\t\tbool flg=0;int mx1=0,mx2=0;\n\t\tit1=A.s.begin(),it2=B.s.begin(),ret.s.clear();\n\t\twhile(it1!=A.s.end()&&it2!=B.s.end()){\n\t\t\tint v1=it1->first,v2=it2->first,s1=it1->second,s2=it2->second,S=s1+s2;mx1=max(mx1,v1),mx2=max(mx2,v2);\n\t\t\tif(A.rv==B.lv){\n\t\t\t\tif(v1==A.rmx)--s1;\n\t\t\t\tif(v2==B.lmx)--s2;\n\t\t\t\tif(!flg&&v1==A.rmx+B.lmx&&v1<=v2)++s1,flg=1;\n\t\t\t\tif(!flg&&v2==A.rmx+B.lmx&&v1>=v2)++s2,flg=1;\n\t\t\t\tif(!flg&&v1>A.rmx+B.lmx&&v2>A.rmx+B.lmx)flg=1,ret.s.push_back(make_pair(A.rmx+B.lmx,1));\n\t\t\t\tS=s1+s2;\n\t\t\t}\n\t\t\tif(v1>v2){\n\t\t\t\tif(s2)ret.s.push_back(make_pair(v2,s2)),it2++;\n\t\t\t\telse it2++;\n\t\t\t}\n\t\t\tif(v1<v2){\n\t\t\t\tif(s1)ret.s.push_back(make_pair(v1,s1)),it1++;\n\t\t\t\telse it1++;\n\t\t\t}\n\t\t\tif(v1==v2){\n\t\t\t\tif(S)ret.s.push_back(make_pair(v1,S)),it1++,it2++;\n\t\t\t\telse it1++,it2++;\n\t\t\t}\n\t\t}\n\t\twhile(it1!=A.s.end()){\n\t\t\tint v1=it1->first,s1=it1->second;mx1=max(mx1,v1);\n\t\t\tif(A.rv==B.lv){\n\t\t\t\tif(v1==A.rmx)--s1;\n\t\t\t\tif(!flg&&v1==A.rmx+B.lmx)++s1,flg=1;\n\t\t\t\tif(!flg&&v1>A.rmx+B.lmx)flg=1,ret.s.push_back(make_pair(A.rmx+B.lmx,1));\n\t\t\t}\n\t\t\tif(s1)ret.s.push_back(make_pair(v1,s1));\n\t\t\t++it1;\n\t\t}\n\t\twhile(it2!=B.s.end()){\n\t\t\tint v2=it2->first,s2=it2->second;mx2=max(mx2,v2);\n\t\t\tif(A.rv==B.lv){\n\t\t\t\tif(v2==B.lmx)--s2;\n\t\t\t\tif(!flg&&v2==A.rmx+B.lmx)++s2,flg=1;\n\t\t\t\tif(!flg&&v2>A.rmx+B.lmx)flg=1,ret.s.push_back(make_pair(A.rmx+B.lmx,1));\n\t\t\t}\n\t\t\tif(s2)ret.s.push_back(make_pair(v2,s2));\n\t\t\t++it2;\n\t\t}\n\t\tif(A.rv==B.lv&&max(mx1,mx2)<A.rmx+B.lmx)ret.s.push_back(make_pair(A.rmx+B.lmx,1));\n\t\tswap(A,ret);\n\t}\n\tvoid build(int rt,int l,int r){\n\t\tv[rt].l=l,v[rt].r=r,v[rt].len=r-l+1;\n\t\tif(l==r)return v[rt].lv=v[rt].rv=a[l]^(l&1),v[rt].s.push_back(make_pair(1,1)),void();\n\t\tint mid=(l+r)>>1;\n\t\tbuild(rt<<1,l,mid);\n\t\tbuild(rt<<1|1,mid+1,r);\n\t\tpush_up(rt);\n\t}\n\tvoid FLIP(int rt,int l,int r){\n\t\tif(l<=v[rt].l&&v[rt].r<=r)return push_rtag(rt);\n\t\tint mid=v[rt<<1].r;\n\t\tpush_down(rt);\n\t\tif(l<=mid)FLIP(rt<<1,l,r);\n\t\tif(mid<r)FLIP(rt<<1|1,l,r);\n\t\tpush_up(rt);\n\t}\n\tvoid MTAG1(int rt,int l,int r);\n\tvoid MTAG0(int rt,int l,int r){\n\t\tif(l<=v[rt].l&&v[rt].r<=r)return push_mtag0(rt);\n\t\tint mid=v[rt<<1].r;\n\t\tpush_down(rt);\n\t\tif(l<=mid)MTAG0(rt<<1,l,r);\n\t\tif(mid<r)(v[rt<<1].len&1)?MTAG1(rt<<1|1,l,r):MTAG0(rt<<1|1,l,r);\n\t\tpush_up(rt);\n\t}\n\tvoid MTAG1(int rt,int l,int r){\n\t\tif(l<=v[rt].l&&v[rt].r<=r)return push_mtag1(rt);\n\t\tint mid=v[rt<<1].r;\n\t\tpush_down(rt);\n\t\tif(l<=mid)MTAG1(rt<<1,l,r);\n\t\tif(mid<r)(v[rt<<1].len&1)?MTAG0(rt<<1|1,l,r):MTAG1(rt<<1|1,l,r);\n\t\tpush_up(rt);\n\t}\n\tvoid ask(int rt,int l,int r,node &ret){\n\t\tif(l<=v[rt].l&&v[rt].r<=r)return merge_node(ret,v[rt]);\n\t\tint mid=v[rt<<1].r;\n\t\tpush_down(rt);\n\t\tif(l<=mid)ask(rt<<1,l,r,ret);\n\t\tif(mid<r)ask(rt<<1|1,l,r,ret);\n\t}\n\tvoid dfs(int rt){\n\t\tif(v[rt].l==v[rt].r)return cout<<v[rt].lv<<\" \",void();\n\t\tpush_down(rt);\n\t\tdfs(rt<<1),dfs(rt<<1|1);\n\t}\n\tvoid dmd(){\n\t\tfor(auto x:v[1].s)cout<<x.first<<\":\"<<x.second<<endl;\n\t}\n};\nlong long cal(vector< pair<int,int> > &vec,int k){\n\tlong long ret=0;\n\tfor(pair<int,int> val:vec){\n\t\tif(val.first>=k)ret=ret+(val.first-k+1)*val.second;\n\t}\n\treturn ret;\n}\nint main() {\n\tfreopen(\"data.in\",\"r\",stdin);\n\tfreopen(\"data.out\",\"w\",stdout);\n\tn=getint(),m=getint();\n\tfor(int i=1;i<=n;i++)a[i]=getint();\n\tS::build(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tint opt=getint();\n\t\tif(opt==0||opt==1){\n\t\t\tint l=getint(),r=getint(),pl=!opt;\n\t\t\tpl?(S::MTAG1(1,l,r)):(S::MTAG0(1,l,r));\n\t\t}\n\t\tif(opt==2){\n\t\t\tint l=getint(),r=getint();\n\t\t\tS::FLIP(1,l,r);\n\t\t}\n\t\tif(opt==3){\n\t\t\tint l=getint(),r=getint(),k=getint();\n\t\t\tS::ask(1,l,r,tmp=node()),wrt(cal(tmp.s,k)),pc('\\n');\n\t\t}\n\t\tif(opt==4){\n\t\t\tint l=getint(),r=getint();\n\t\t\tS::ask(1,l,r,tmp=node()),wrt(tmp.ans),pc('\\n');\n\t\t}\n\t}\n\tfwrite(wb,1,p2,stdout);\n\treturn Loli Kon;\n}\n```\n\n\u5982\u679c\u4f60\u6709 Hack \u6570\u636e\uff0c\u6b22\u8fce\u53d1\u7ed9\u6211\u3002",
        "postTime": 1631963173,
        "uid": 27338,
        "name": "jerry3128",
        "ccfLevel": 9,
        "title": "\u9898\u89e3\u3010P7825\u300cRdOI R3\u300dVSQ\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ef4\u62a4\u4e00\u4e2a\u96f6\u4e00\u4e32\uff0c\u8981\u6c42\u652f\u6301\u533a\u95f4\u63a8\u5e73\u3001\u533a\u95f4\u53cd\u8f6c\uff0c\u6c42\u533a\u95f4\u6700\u5927\u96f6\u4e00\u4ea4\u66ff\u5b50\u4e32\u957f\u5ea6\u548c\u957f\u5ea6\u4e3a $k$ \u7684\u96f6\u4e00\u4ea4\u66ff\u5b50\u4e32\u8ba1\u6570\u3002\n\n## Subtask 1\n\n\u66b4\u529b\u904d\u5386\u6570\u7ec4\u5e76\u4fee\u6539 / \u67e5\u8be2\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(nm)$\u3002\n\n## Subtask 2\n\n\u7559\u7ed9\u83ab\u961f\u53ca\u4e00\u4e9b\u7384\u5b66\u505a\u6cd5\uff0c\u4ee3\u7801\u7565\u3002\n\n## Subtask 3\n\n\u8003\u8651\u5206\u5757\u3002\u6bcf\u5757\u7ef4\u62a4**\u5757\u5185**\u6700\u957f\u7684\u300cVS \u4e32\u300d\u7684\u957f\u5ea6 $(lzmx)$\u3001\u5757\u5de6\u4fa7\u7684\u6781\u5927\u300cVS \u4e32\u300d\u957f\u5ea6 $(lzl)$\u3001\u5757\u53f3\u4fa7\u7684\u6781\u5927\u300cVS \u4e32\u300d\u957f\u5ea6 $(lzr)$\u3001\u5757\u5185\u7b2c\u4e00\u4e2a\u6570\u662f\u4ec0\u4e48 $(l1)$\u3001\u5757\u5185\u6700\u540e\u4e00\u4e2a\u6570\u662f\u4ec0\u4e48 $(r1)$\u3002\n\n- \u5bf9\u4e8e $0\\sim 1$ \u64cd\u4f5c\uff0c\u6574\u5757\u6253\u4e00\u4e2a\u63a8\u5e73\u61d2\u6807\u8bb0\uff0c\u8bb0\u5f55\u8be5\u5757\u63a8\u5e73\u6210\u4e86\u4ec0\u4e48\u6570\uff0c\u5e76\u6e05\u7a7a\u8be5\u5757\u4e0a\u7684\u6240\u6709\u6807\u8bb0\uff1b\u5bf9\u4e8e\u6563\u5757\u5219\u66b4\u529b\u4fee\u6539\u3002\n\n- \u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u6574\u5757\u5982\u679c\u5df2\u6709\u63a8\u5e73\u6807\u8bb0\uff0c\u5219\u5c06\u300c\u63a8\u5e73\u6210\u4ec0\u4e48\u300d\u6807\u8bb0\u96f6\u4e00\u53cd\u8f6c\uff1b\u6574\u5757\u5982\u679c\u5df2\u6709\u53cd\u8f6c\u6807\u8bb0\uff0c\u5219\u64a4\u9500\u53cd\u8f6c\u6807\u8bb0\uff1b\u5982\u679c\u4ec0\u4e48\u6807\u8bb0\u90fd\u6ca1\u6709\uff0c\u5219\u6253\u4e00\u4e2a\u53cd\u8f6c\u61d2\u6807\u8bb0\uff1b\u5bf9\u4e8e\u6563\u5757\u5219\u66b4\u529b\u4fee\u6539\u3002\n\n- \u5bf9\u4e8e $4$ \u64cd\u4f5c\uff0c\u96f6\u6563\u5757\u66b4\u529b\u67e5\u8be2\u3002\u5bf9\u4e8e\u6574\u5757\uff0c\u5982\u679c\u5757 $B_l$ \u4e0e $B_r$ \u76f8\u90bb\uff0c\u4e14 $r1(B_l)=l1(B_r)$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5c06 $B_l$ \u5185\u90e8\u53f3\u4fa7\u7684\u6781\u5927\u300cVS \u4e32\u300d\u4e0e $B_r$ \u5185\u90e8\u5de6\u4fa7\u7684\u6781\u5927\u300cVS \u4e32\u300d\u62fc\u63a5\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u66f4\u957f\u7684\u3001\u957f\u5ea6\u4e3a $lzr(B_l)+lzl(B_r)$ \u7684\u300cVS \u4e32\u300d\u3002\u7efc\u4e0a\uff0c$[l,r]$ \u533a\u95f4\u5185\u7684\u6700\u957f\u300cVS \u4e32\u300d\u53ef\u80fd\u7531\u300c\u5757\u5185\u90e8\u7684\u4e32\u300d\u6216\u300c\u4e24\u4e2a\u6216\u591a\u4e2a\u5757\u8fb9\u754c\u4e0a\u7684\u4e32\u62fc\u63a5\u300d\u5f97\u5230\uff0c\u5206\u522b\u8ba1\u7b97\u8fd9\u4e24\u79cd\u60c5\u51b5\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n```cpp\n// lzmx: \u5757\u5185 (lbl ~ rbl) \u6700\u591a\u8fde\u7eed 01 \u662f\u591a\u5c11\u4e2a\n// lzl: \u5757\u5de6\u7aef\u8fde\u7eed 01 \u662f\u591a\u5c11\u4e2a\n// lzr: \u5757\u53f3\u7aef\u8fde\u7eed 01 \u662f\u591a\u5c11\u4e2a\n// l1: \u5757\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u4ec0\u4e48\n// r1: \u5757\u7684\u5012\u6570\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u4ec0\u4e48\nint bl[N], lbl[N], rbl[N], a[N], sz, n, m, fil[B], rev[B];\nint lzmx[B], lzl[B], lzr[B], l1[B], r1[B];\n\nvoid Down(int x) {\n  int b = bl[x];\n  assert((fil[b] != -1) + rev[b] <= 1);  // \u540c\u65f6\u53ea\u80fd\u4e00\u4e2a\u6807\u8bb0\n  if (fil[b] != -1) {\n    rep(i, lbl[x], rbl[x]) a[i] = fil[b];\n  }\n  if (rev[b]) {\n    rep(i, lbl[x], rbl[x]) a[i] ^= 1;\n  }\n  fil[b] = -1, rev[b] = 0;\n}\n\nvoid Up(int x) {\n  int b = bl[x];\n  l1[b] = a[lbl[x]];\n  r1[b] = a[rbl[x]];\n  // \u8ba1\u7b97 lzmx\n  lzmx[b] = 1;\n  int res = 1;\n  rep(i, lbl[x], rbl[x] - 1) {\n    if (a[i] != a[i + 1])\n      ++res;\n    else {\n      up(lzmx[b], res), res = 1;\n    }\n  }\n  up(lzmx[b], res);\n  // \u8ba1\u7b97 lzl & lzr\n  lzl[b] = lzr[b] = 1;\n  rep(i, lbl[x], rbl[x] - 1) {\n    if (a[i] != a[i + 1])\n      ++lzl[b];\n    else\n      break;\n  }\n  per(i, rbl[x], lbl[x] + 1) {\n    if (a[i] != a[i - 1])\n      ++lzr[b];\n    else\n      break;\n  }\n}\n\nvoid Fil(int l, int r, int x) {\n  if (bl[l] == bl[r]) {\n    Down(l);\n    rep(i, l, r) a[i] = x;\n    Up(l);\n    return;\n  }\n  Fil(l, rbl[l], x);\n  rep(i, bl[l] + 1, bl[r] - 1) fil[i] = x, rev[i] = 0,\n                               lzmx[i] = lzl[i] = lzr[i] = 1, l1[i] = r1[i] = x,\n                               lzs[i].clear(), lzhzh[i].clear();\n  Fil(lbl[r], r, x);\n}\n\nvoid Rev(int l, int r) {\n  if (bl[l] == bl[r]) {\n    Down(l);\n    rep(i, l, r) a[i] ^= 1;\n    Up(l);\n    return;\n  }\n  Rev(l, rbl[l]);\n  rep(i, bl[l] + 1, bl[r] - 1) {\n    // \u8fd9\u4e2a\u5757\u4e4b\u524d\u88ab\u586b\u5145\u8fc7\n    // \u4e00\u4e2a\u5757\u4e0a\u6700\u591a\u6253\u4e00\u79cd\u6807\u8bb0\n    if (fil[i] != -1) {\n      fil[i] ^= 1;\n    } else {\n      // \u6253\u4e0a\u7ffb\u8f6c\u6807\u8bb0\n      rev[i] ^= 1;\n    }\n    // lz\u3001lzmx\u3001lzl\u3001lzr\u3001lzs\u3001lzhzh \u4e0d\u53d8\n    l1[i] ^= 1, r1[i] ^= 1;\n  }\n  Rev(lbl[r], r);\n}\n\nint Ask2(int l, int r) {\n  if (bl[l] == bl[r]) {\n    Down(l);\n    int res = 1, mx = 1;\n    rep(i, l, r - 1) {\n      if (a[i] != a[i + 1])\n        ++res;\n      else\n        up(mx, res), res = 1;\n    }\n    up(mx, res);\n    return mx;\n  }\n  int mx = Ask2(l, rbl[l]), tail = min(lzr[bl[l]], rbl[l] - l + 1);\n  rep(i, bl[l] + 1, bl[r] - 1) {\n    up(mx, lzmx[i]);\n    // \u4e0d\u80fd\u62fc\u63a5\n    if (r1[i - 1] == l1[i]) tail = 0;\n    tail += lzl[i], up(mx, tail);\n    // \u6ca1\u6709\u6574\u5757\u5168\u662f VS \u4e32\n    if (lzl[i] != sz) tail = lzr[i];\n  }\n  if (r1[bl[r] - 1] == l1[bl[r]]) tail = 0;\n  tail += min(lzl[bl[r]], r - lbl[r] + 1), up(mx, tail);\n  up(mx, Ask2(lbl[r], r));\n  return mx;\n}\n```\n\n## Subtask 4\n\n\u7531\u4e8e\u672c subtask \u7684\u7279\u6b8a\u6027\uff0c\u6b64 subtask \u5185\u7684\u6570\u636e\u4f1a\u51fa\u73b0\u5927\u91cf\u63a8\u5e73\u64cd\u4f5c\u3001\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ODT \u7b49\u7384\u5b66\u6570\u636e\u7ed3\u6784\u8fbe\u5230 $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\u3002\u4ee3\u7801\u5b9e\u73b0\u7c7b\u4f3c subtask 1\uff0c\u66b4\u529b\u626b\u4e00\u904d\u5373\u53ef\u3002\n\n## Subtask 5\n\n\u7531\u4e8e $k=3$\uff0c\u95ee\u9898\u53d8\u6210\u4e86\u300c\u6c42\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e $p$ \u6ee1\u8db3 $a_{p-1} \\ne a_p$ \u4e14 $a_{p+1}\\ne a_p$\u300d\u3002\u548c subtask 3 \u7c7b\u4f3c\uff0c\u8003\u8651\u5206\u5757\uff0c\u6211\u4eec\u989d\u5916\u7ef4\u62a4\u51e0\u4e2a\u6807\u8bb0\uff1a\n\n- \u6807\u8bb0 $lz(B_x)$ \u8868\u793a $p-1,p,p+1$ \u5168\u5728 $B_x$ \u5757\u5185\u7684\u7b26\u5408\u8981\u6c42\u7684\u4f4d\u7f6e $p$ \u603b\u6570\u3002\n- \u6807\u8bb0 $l2(B_x)$ \u8868\u793a\u5757\u5185\u4ece\u5de6\u5f80\u53f3\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u4ec0\u4e48\u3002\n- \u6807\u8bb0 $r2(B_x)$ \u8868\u793a\u5757\u5185\u4ece\u53f3\u5f80\u5de6\u6570\u7b2c\u4e8c\u4e2a\uff08\u5373\u5012\u6570\u7b2c\u4e8c\u4e2a\uff09\u5143\u7d20\u662f\u4ec0\u4e48\u3002\n\n\u5bf9\u4e8e\u4e24\u79cd\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u8fdb\u884c\u66f4\u6539\uff1a\n\n- \u5bf9\u4e8e\u63a8\u5e73\u64cd\u4f5c\uff0c\u5757\u5185 $lz$ \u53d8\u4e3a\u96f6\u3002\n- \u5bf9\u4e8e\u53cd\u8f6c\u64cd\u4f5c\uff0c\u5757\u5185 $lz$ \u4e0d\u53d8\u3002\n\n\u67e5\u8be2\u65f6\u53ea\u8981\u5c06\u4e2a\u5757\u5185 $lz$ \u7d2f\u52a0\uff0c\u7136\u540e\u8ba1\u7b97\u4e24\u5757\u76f8\u63a5\u5904\u7684\u4f4d\u7f6e\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(n\\sqrt n)$\u3002\n\n```cpp\n// \u68c0\u67e5\u662f\u5426\u6784\u6210 010 / 101\n// \u524d\u4e24\u4e2a\u5143\u7d20\u5728\u5f53\u524d\u7684\u5757\u91cc\uff0c\u540e\u4e00\u4e2a\u5728\u53f3\u8fb9\u7684\u5757\u91cc\ninline bool Check21(int x) {\n\tint b1 = bl[x], b2 = bl[x] + 1;\n\treturn r1[b1] != r2[b1] && r1[b1] != l1[b2];\n}\n\n// \u68c0\u67e5\u662f\u5426\u6784\u6210 010 / 101\n// \u524d\u4e00\u4e2a\u5143\u7d20\u5728\u5f53\u524d\u7684\u5757\u91cc\uff0c\u540e\u4e24\u4e2a\u5728\u53f3\u8fb9\u7684\u5757\u91cc\ninline bool Check12(int x) {\n\tint b1 = bl[x], b2 = bl[x] + 1;\n\treturn l1[b2] != r1[b1] && l1[b2] != l2[b2];\n}\n\nint Ask1(int l, int r) {\n\tint res = 0;\n\tif (bl[l] == bl[r] || l >= r) {\n\t\tDown(l);\n\t\t// \u5982\u679c\u8be2\u95ee\u5757\u7684\u5de6\u8fb9\u754c\uff0c\u9700\u8981\u52a0\u4e0a\u524d\u4e00\u4e2a\u5757\u7684 Check12\n\t\tif (l != 1 && l == lbl[l]) res += Check12(l - 1), ++l;\n\t\t// \u5982\u679c\u8be2\u95ee\u5757\u7684\u53f3\u8fb9\u754c\uff0c\u9700\u8981\u52a0\u4e0a\u6700\u540e\u4e00\u4e2a\u5757\u7684 Check21\n\t\tif (r != n && r == rbl[r]) res += Check21(r), --r;\n\t\trep (i, l, r) {\n\t\t\tif (i > 1 && i < n && a[i - 1] != a[i] && a[i + 1] != a[i]) {\n\t\t\t\t++res;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\t// \u5904\u7406\u5757\u5185\u90e8\u7684 010 / 101\n\tres += Ask1(l, rbl[l] - 1);\n\trep (i, bl[l] + 1, bl[r] - 1) { res += lz[i]; }\n\tres += Ask1(lbl[r] + 1, r);\n\t// \u5904\u7406\u8fb9\u89d2\n\tste(i, lbl[l], lbl[r - sz], sz) {\n\t\tres += Check12(i);\n\t\tres += Check21(i);\n\t}\n\treturn res;\n}\n```\n\n## Subtask 6\n\n\u548c subtask 3 \u7c7b\u4f3c\uff0c\u8003\u8651\u5206\u5757\uff0c\u6211\u4eec\u989d\u5916\u7ef4\u62a4\u51e0\u4e2a\u6807\u8bb0\uff1a\n\n- $lzs(B_x)$ \u8868\u793a\u5757 $B_x$ \u4e2d\u7684\u6781\u5927 VS \u4e32\u957f\u5ea6\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u3002\n\n- $lzhzh(B_x)$ \u8868\u793a $lzs(B_x)$ \u7684\u540e\u7f00\u548c\u3002\n\n\u6bcf\u6b21\u67e5\u8be2 $3$ \u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5757\u5185\u8fdb\u884c\u4e8c\u5206\u3002\u590d\u6742\u5ea6 $O(n \\sqrt n \\log \\sqrt n)$\u3002\n\n```cpp\nvoid Up(int x) {\n  int b = bl[x];\n  l1[b] = a[lbl[x]];\n  r1[b] = a[rbl[x]];\n  // \u8ba1\u7b97 lzmx & lzs\n  lzmx[b] = 1;\n  lzs[b].clear();\n  int res = 1;\n  rep(i, lbl[x], rbl[x] - 1) {\n    if (a[i] != a[i + 1])\n      ++res;\n    else {\n      // \u53ea\u4fdd\u7559\u957f\u5ea6 >= 3 \u7684\n      if (res >= 3) lzs[b].push_back(res);\n      up(lzmx[b], res), res = 1;\n    }\n  }\n  up(lzmx[b], res);\n  if (res > 1) lzs[b].push_back(res);\n  // \u8ba1\u7b97 lzl & lzr\n  lzl[b] = lzr[b] = 1;\n  rep(i, lbl[x], rbl[x] - 1) {\n    if (a[i] != a[i + 1])\n      ++lzl[b];\n    else\n      break;\n  }\n  per(i, rbl[x], lbl[x] + 1) {\n    if (a[i] != a[i - 1])\n      ++lzr[b];\n    else\n      break;\n  }\n  sort(lzs[b].begin(), lzs[b].end());\n  // \u8ba1\u7b97 lzhzh\n  lzhzh[b].clear();\n  int sum = 0;\n  per(i, lzs[b].size() - 1, 0) {\n    sum += lzs[b][i];\n    lzhzh[b].push_back(sum);\n  }\n  reverse(lzhzh[b].begin(), lzhzh[b].end());\n}\n\n// \u4fee\u6539\u64cd\u4f5c\u7701\u7565\n\nint Ask1(int l, int r, int k) {\n  if (bl[l] == bl[r] || l >= r) {\n    Down(l);\n    int res = 1, cnt = 0;\n    rep(i, l, r - 1) {\n      if (a[i] != a[i + 1]) {\n        ++res;\n        if (res >= k) ++cnt;\n      } else\n        res = 1;\n    }\n    return cnt;\n  }\n  int cnt = Ask1(l, rbl[l], k), tail = min({lzr[bl[l]], rbl[l] - l + 1, k - 1});\n  rep(i, bl[l] + 1, bl[r] - 1) {\n    auto it = lower_bound(lzs[i].begin(), lzs[i].end(), k);\n    if (it != lzs[i].end())\n      cnt += *(it - lzs[i].begin() + lzhzh[i].begin()) -\n             (lzs[i].end() - it) * (k - 1);\n    // \u4e0d\u80fd\u62fc\u63a5\n    if (r1[i - 1] == l1[i]) tail = 0;\n    tail += min(lzl[i], k - 1), cnt += max(0, tail - k + 1);\n    // \u6ca1\u6709\u6574\u5757\u5168\u662f VS \u4e32\n    if (lzl[i] != sz) tail = lzr[i];\n    down(tail, k - 1);\n  }\n  if (r1[bl[r] - 1] == l1[bl[r]]) tail = 0;\n  tail += min({lzl[bl[r]], r - lbl[r] + 1, k - 1}), cnt += max(0, tail - k + 1);\n  cnt += Ask1(lbl[r], r, k);\n  return cnt;\n}\n```\n\n~~\u4ec0\u4e48\uff1f\u4f60\u9700\u8981\u5b8c\u6574\u4ee3\u7801\uff1f\u628a subtask 3 \u548c 6 \u7684\u4ee3\u7801\u62fc\u8d77\u6765\u6539\u4e00\u6539\u5c31\u597d\u4e86\u3002~~",
        "postTime": 1622981614,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "VSQ \u9898\u89e3"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P7825)\n\n>\u9898\u610f\uff1a  \n\u7ed9\u5b9a\u4e00\u4e2a $01$ \u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u8986\u76d6\uff0c\u533a\u95f4 $01$ \u53cd\u8f6c  \n\u5e76\u67e5\u8be2\u533a\u95f4 $01$ \u4ea4\u66ff\u5b50\u4e32\u6700\u957f\u957f\u5ea6\uff0c\u6216\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u4e32\u6709\u591a\u5c11\u3002  \n$n\\leq 3\\times 10^5$\uff0c$m\\leq 5\\times 10^5$\n\n\u8003\u8651\u5206\u5757\uff0c\u5148\u4e0d\u8003\u8651\u4fee\u6539\uff0c\u53ea\u5b9e\u73b0\u67e5\u8be2\u3002\n\n\u7531\u4e8e\u4e24\u4e2a $01$ \u4ea4\u66ff\u7684\u5b50\u4e32\u4e0d\u53ef\u80fd\u76f8\u4ea4\uff0c\u6240\u4ee5\u533a\u95f4\u5185\u6a2a\u8de8\u81f3\u5c11\u4e24\u5757\u7684 $01$ \u5b50\u4e32\u53ea\u6709 $O(\\sqrt n)$ \u4e2a\u3002  \n\u8fd9\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u5206\u522b\u5de6\u53f3\u7aef\u5f00\u59cb\u7684\u6781\u957f $01$ \u5b50\u4e32\uff0c\u5728\u67e5\u8be2\u65f6\u5408\u5e76\uff0c\u4ee5\u67e5\u6700\u5927\u957f\u5ea6\u3002  \n\u5bf9\u4e8e\u67e5\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u6bb5\uff0c\u6bcf\u4e2a\u6bb5\u7684\u8d21\u732e\u662f $[len\\geq k]len-k+1$\n\n\u800c\u81f3\u4e8e\u53ea\u5728\u6bcf\u4e2a\u5757\u5185\u90e8\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u5757\u5de6\u53f3\u8fde\u7eed\u6bb5\u5916\uff0c\u7ef4\u62a4**\u4e2d\u95f4\u7684\u6700\u5927\u503c**\u3002  \n\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u5757\u9664\u5de6\u53f3\u5916\uff0c\u6240\u6709\u8fde\u7eed\u6bb5\u7684**\u548c**\u4ee5\u53ca**\u4e2a\u6570**\u7684**\u540e\u7f00\u548c**\uff0c\u4ee5\u67e5\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u6bb5\u3002  \n\u7531\u4e8e\u5757\u5185\u8fde\u7eed\u6bb5\u957f\u5ea6\u4e0d\u8d85\u8fc7 $\\sqrt n$\uff0c\u53ea\u9700 $O(n)$ \u7684\u7a7a\u95f4\u5b58\u4e0b\u540e\u7f00\u548c\u3002\n\n\u6563\u5757\u4e5f\u5bb9\u6613\u5728\u67e5\u8be2\u65f6\u76f4\u63a5\u7ef4\u62a4 ~~\u53ea\u662f\u7ec6\u8282\u4e00\u5806~~\u3002\n\n\u800c\u5bf9\u4e8e\u4fee\u6539\uff0c\u53ef\u4ee5\u6574\u5757\u53ef\u4ee5\u6253\u6807\u8bb0\u5b9e\u73b0\u3002  \n\u8986\u76d6\u76f4\u63a5\u5c06\u5de6\u53f3\u8fde\u7eed\u4e32\u53d8\u4e3a $1$\uff0c\u4e14\u4e2d\u95f4\u7684\u540e\u7f00\u548c\u5931\u6548\u6e05\u96f6\u3002  \n$01$ \u53cd\u8f6c\u7684\u6807\u8bb0\u4e0d\u4f1a\u5f71\u54cd\u533a\u95f4\u5185\u90e8\uff0c\u53ea\u4f1a\u5f71\u54cd\u5408\u5e76\uff0c\u4e5f\u80fd\u7ef4\u62a4\u3002  \n\u4fee\u6539\u540e\u6563\u5757\u7684\u91cd\u6784\u4e5f\u662f $O(\\sqrt n)$ \u7684\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\sqrt n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u5b9e\u73b0\u9700\u8c28\u614e\uff0c\u4ee5\u514d\u88ab\u5361\u5e38\u3002\n\n$\\texttt{Code:}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5+10,NN=1001;\nint n,nn,m,x,y,tt,opt,k;\nint idx,idy,i,j,cv,rv,len; \nbool a[N],b[NN],rev[NN],aa;\nchar cov[NN];int ss[NN][NN],ans;\nint l[NN],r[NN],id[N],sz[NN];\nint l_[NN],r_[NN],m_[NN],s[NN][NN];\nvoid pushdown(int p){\n\tif(~cov[p]){\n\t\tfor(i=l[p];i<=r[p];++i)a[i]=cov[p];\n\t\tcov[p]=-1;\n\t}\n\tif(rev[p]){for(i=l[p];i<=r[p];++i)a[i]^=1;rev[p]=0;}\n}\nvoid reset(int p){\n\tl_[p]=r_[p]=1;m_[p]=b[p]=0;\n\tfor(i=1;i<=sz[p];++i)ss[p][i]=s[p][i]=0;\n\ti=l[p];while(a[i+1]^a[i]&&i^r[p])++l_[p],++i;\n\tif(l_[p]==sz[p])r_[p]=l_[p],b[p]=1;\n\telse {\n\t\ti=r[p];while(a[i-1]^a[i]&&i^l[p])++r_[p],--i;\n\t\tx=l[p]+l_[p],y=r[p]-r_[p];\n\t\tfor(i=x;i<=y;i=j+1){\n\t\t\tj=i;len=1;\n\t\t\twhile(a[j+1]^a[j]&&j^y)++j,++len;\n\t\t\tss[p][len]+=len,++s[p][len];len>m_[p]?m_[p]=len:0;\n\t\t}\n\t\tfor(i=sz[p]-1;i;--i)ss[p][i]+=ss[p][i+1],s[p][i]+=s[p][i+1];\n\t}\n}\nvoid modify_cov(int x,int y,bool c){\n\tidx=id[x],idy=id[y];\n\tif(idx^idy){\n\t\tpushdown(idx);for(i=r[idx];i>=x;--i)a[i]=c;reset(idx);\n\t\tpushdown(idy);for(i=l[idy];i<=y;++i)a[i]=c;reset(idy);\n\t\tfor(i=idx+1;i^idy;++i){\n\t\t\tcov[i]=c,rev[i]=0;\n\t\t\tb[i]=0;l_[i]=r_[i]=1;\n\t\t\tm_[i]=nn>2;\n\t\t}\n\t}\n\telse {\n\t\tpushdown(idx);for(i=x;i<=y;++i)a[i]=c;reset(idx);\n\t}\n}\nvoid modify_rev(int x,int y){\n\tidx=id[x],idy=id[y];\n\tif(idx^idy){\n\t\tpushdown(idx);for(i=r[idx];i>=x;--i)a[i]^=1;reset(idx);\n\t\tpushdown(idy);for(i=l[idy];i<=y;++i)a[i]^=1;reset(idy);\n\t\tfor(i=idx+1;i^idy;++i)rev[i]^=1;\n\t}\n\telse {\n\t\tpushdown(idx);for(i=x;i<=y;++i)a[i]^=1;reset(idx);\n\t}\n}\nvoid inquiry_k(int x,int y,int k){\n\tans=0;\n\tidx=id[x],idy=id[y];\n\tif(idx^idy){\n\t\tcv=cov[idx];\n\t\tif(~cv)aa=cv^rev[idx],len=1;\n\t\telse {\n\t\t\tfor(i=x;i<=r[idx];i=j+1){\n\t\t\t\tj=i;len=1;\n\t\t\t\twhile(a[j+1]^a[j]&&j^r[idx])++j,++len;\n\t\t\t\tlen>=k?ans+=len-k+1:0;\n\t\t\t}\n\t\t\tlen>=k?ans-=len-k+1:0;\n\t\t\taa=a[r[idx]]^rev[idx];\n\t\t}\n\t\tfor(i=idx+1;i^idy;++i){\n\t\t\tif(~cov[i]){\n\t\t\t\tlen+=aa^cov[i]^rev[i];\n\t\t\t\tlen>=k?ans+=len-k+1:0;len=1;\n\t\t\t\taa=cov[i]^rev[i];\n\t\t\t}\n\t\t\telse if(b[i]){\n\t\t\t\taa^a[l[i]]^rev[i]?len+=nn:\n\t\t\t\t(len>=k?ans+=len-k+1:0,len=nn);\n\t\t\t\taa=a[r[i]]^rev[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\taa^a[l[i]]^rev[i]?len+=l_[i]:\n\t\t\t\t(len>=k?ans+=len-k+1:0,len=l_[i]);\n\t\t\t\tlen>=k?ans+=len-k+1:0;len=r_[i];\n\t\t\t\taa=a[r[i]]^rev[i];\n\t\t\t\tnn>=k?ans+=ss[i][k]-s[i][k]*(k-1):0;\n\t\t\t}\n\t\t}\n\t\tcv=cov[idy];\n\t\tif(~cv)len+=aa^cv^rev[idy],len>=k?ans+=len-k+1:0;\n\t\telse {\n\t\t\taa^a[l[idy]]^rev[idy]?++len:\n\t\t\t(len>=k?ans+=len-k+1:0,len=1);\n\t\t\tfor(i=l[idy];i<=y;i=j+1){\n\t\t\t\tj=i;\n\t\t\t\twhile(a[j+1]^a[j]&&j^y)++j,++len;\n\t\t\t\tlen>=k?ans+=len-k+1:0;len=1;\n\t\t\t}\n\t\t}\n\t}\n\telse if(cov[idx]==-1){\n\t\tfor(i=x;i<=y;i=j+1){\n\t\t\tj=i;len=1;\n\t\t\twhile(a[j+1]^a[j]&&j^y)++j,++len;\n\t\t\tlen>=k?ans+=len-k+1:0;\n\t\t}\n\t}\n}\nvoid inquiry_max(int x,int y){\n\tans=1;\n\tidx=id[x],idy=id[y];\n\tif(idx^idy){\n\t\tcv=cov[idx];\n\t\tif(~cv)aa=cv^rev[idx],len=1;\n\t\telse {\n\t\t\tfor(i=x;i<=r[idx];i=j+1){\n\t\t\t\tj=i;len=1;\n\t\t\t\twhile(a[j+1]^a[j]&&j^r[idx])++j,++len;\n\t\t\t\tlen>ans?ans=len:0;\n\t\t\t}\n\t\t\taa=a[r[idx]]^rev[idx];\n\t\t}\n\t\tfor(i=idx+1;i^idy;++i){\n\t\t\tif(~cov[i]){\n\t\t\t\tlen+=aa^cov[i]^rev[i];\n\t\t\t\tlen>ans?ans=len:0;len=1;\n\t\t\t\taa=cov[i]^rev[i];\n\t\t\t}\n\t\t\telse if(b[i]){\n\t\t\t\taa^a[l[i]]^rev[i]?len+=nn:\n\t\t\t\t(len>ans?ans=len:0,len=nn);\n\t\t\t\taa=a[r[i]]^rev[i];\n\t\t\t}\n\t\t\telse {\n\t\t\t\taa^a[l[i]]^rev[i]?len+=l_[i]:\n\t\t\t\t(len>ans?ans=len:0,len=l_[i]);\n\t\t\t\tlen>ans?ans=len:0;len=r_[i];\n\t\t\t\taa=a[r[i]]^rev[i];\n\t\t\t\tm_[i]>ans?ans=m_[i]:0;\n\t\t\t}\n\t\t}\n\t\tcv=cov[idy];\n\t\tif(~cv)len+=aa^cv^rev[idy],len>ans?ans=len:0;\n\t\telse {\n\t\t\taa^a[l[idy]]^rev[idy]?++len:\n\t\t\t(len>ans?ans=len:0,len=1);\n\t\t\tfor(i=l[idy];i<=y;i=j+1){\n\t\t\t\tj=i;\n\t\t\t\twhile(a[j+1]^a[j]&&j^y)++j,++len;\n\t\t\t\tlen>ans?ans=len:0;len=1;\n\t\t\t}\n\t\t}\n\t}\n\telse if(cov[idx]==-1){\n\t\tfor(i=x;i<=y;i=j+1){\n\t\t\tj=i;len=1;\n\t\t\twhile(a[j+1]^a[j]&&j^y)++j,++len;\n\t\t\tlen>ans?ans=len:0;\n\t\t}\n\t}\n}\nmain(){\n\tcin>>n>>m;nn=sqrt(n);register int i;\n\tfor(i=1;i<=n;++i)id[i]=(i-1)/nn+1;\n\tfor(i=1;i<=n;++i)r[id[i]]=i,l[id[n-i+1]]=n-i+1;\n\tfor(i=1;i<=n;++i)cin>>a[i];\n\tfor(i=1;i<=id[n];++i)sz[i]=r[i]-l[i]+1,cov[i]=-1,reset(i);\n\twhile(m--){\n\t\tcin>>opt>>x>>y;\n\t\tif(opt<2)modify_cov(x,y,opt);\n\t\telse if(opt==2)modify_rev(x,y);\n\t\telse if(opt==3)cin>>k,inquiry_k(x,y,k),cout<<ans<<endl;\n\t\telse inquiry_max(x,y),cout<<ans<<endl;\n\t}\n}\n```\n",
        "postTime": 1645076493,
        "uid": 334380,
        "name": "Y_B_X",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[P7825 \u300cRdOI R3\u300dVSQ]"
    },
    {
        "content": "[P7825 \u300cRdOI R3\u300dVSQ](https://www.luogu.com.cn/problem/P7825)\u89e3\u9898\u62a5\u544a\uff1a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1816673)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684 01 \u5e8f\u5217\uff0c\u5171 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u652f\u6301\u533a\u95f4\u63a8\u5e73\uff0c\u533a\u95f4\u53cd\u8f6c\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u957f $01$ \u95f4\u9694\u4e32\uff0c\u67e5\u8be2\u533a\u95f4\u957f\u5ea6\u4e3a $k$ \u7684 $01$ \u95f4\u9694\u4e32\u6570\u91cf\u3002\n\n$1\\leqslant n,m\\leqslant 5\\times 10^5$\u3002\n\n## \u5206\u6790\n\n\u4e3a\u4ec0\u4e48\u6211\u8981\u505a\u8fd9\u79cd\u6bd2\u7624 ds \u9898\u554a\uff0c\u6bd2\u7624 ds \u6bc1\u6211\u4e00\u4e0a\u5348\u3002\n\n\u9996\u5148\u5957\u8def\u5730\u8fdb\u884c\u5dee\u5206\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u5c31\u53d8\u6210\u4e86\uff1a\u652f\u6301\u5e8f\u5217 $a$ \u7684\u533a\u95f4\u63a8\u5e73\uff0c\u5f02\u6216\uff0c\u652f\u6301 $a$ \u7684\u5dee\u5206\u5e8f\u5217 $b$ \u7684\u533a\u95f4\u63a8\u5e73\u4e3a $0$ \u548c\u5355\u70b9\u4fee\u6539\uff0c\u4ee5\u53ca\u67e5\u8be2 $b$ \u7684\u533a\u95f4\u6700\u957f\u5168 $1$ \u6bb5\u548c\u533a\u95f4\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $k$ \u7684\u5168 $1$ \u6bb5\u6570\u3002\n\n\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7528\u4e24\u9897\u7ebf\u6bb5\u6811\u5957\u8def\u5730\u7ef4\u62a4\uff0c\u8003\u8651\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u600e\u4e48\u7ef4\u62a4\uff0c\u8003\u573a\u6211\u60f3\u7684\u662f\u5206\u5757\uff0c\u53d1\u73b0\u590d\u6742\u5ea6\u5b8c\u5168\u4e0d\u80fd\u63a5\u53d7\uff0c\u4e8e\u662f\u5199\u4e86\u5199\u73c2\u6735\u8389\u6811\uff0c\u53d1\u73b0\u4e5f\u4e0d\u884c\uff0c\u5c31\u7f5a\u5750\u5230\u6bd4\u8d5b\u7ed3\u675f\u3002/ll\n\n\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8003\u8651\u7528\u7b2c\u4e8c\u68f5\u7ebf\u6bb5\u6811\u540c\u65f6\u7ef4\u62a4\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u7684\u6240\u6709\u5168 $1$ \u6bb5\uff0c\u6bcf\u6b21\u533a\u95f4\u63a8\u5e73\u4e3a $0$ \u5c31\u5728\u6bcf\u4e2a\u7ed3\u70b9\u66b4\u529b\u5220\u9664\u5168 $1$ \u6bb5\uff0c\u5355\u70b9\u4fee\u6539\u5c31\u5728\u5bf9\u5e94\u7684\u7ed3\u70b9\u7528\u73c2\u6735\u8389\u6811\u7c7b\u4f3c\u7684\u5199\u6cd5\u5408\u5e76\u4e0e\u5206\u88c2\u533a\u95f4\uff0c\u7136\u540e\u6bcf\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u6254\u5230\u5bf9\u5e94\u7ed3\u70b9\u7684\u6811\u72b6\u6570\u7ec4\u91cc\uff0c\u6bcf\u6b21\u67e5\u8be2\u8bb0\u4e00\u4e0b\u4e0a\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5728\u6811\u72b6\u6570\u7ec4\u5185\u67e5\u4e00\u67e5\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5c31\u53ef\u4ee5\u505a\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log^2 n)$\u3002\n\n## \u4ee3\u7801\n```\n#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<set>\n#define lc(x) (x)<<1\n#define rc(x) (x)<<1|1\n#define lowbit(x) x&-x \nusing namespace std;\nconst int maxn=500005,maxm=500005,maxt=maxn<<2;\nint n,m;\nint a[maxn],b[maxn],qo[maxm],ql[maxm],qr[maxm],qk[maxm],tag[maxt],lazy[maxt];\nvoid abuild(int l,int r,int now){\n\tlazy[now]=-1;\n\tif(l==r){\n\t\tlazy[now]=a[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tabuild(l,mid,lc(now)),abuild(mid+1,r,rc(now));\n}\ninline void agetlazy(int now,int v){\n\tlazy[now]=v,tag[now]=0;\n}\ninline void agettag(int now){\n\tif(lazy[now]!=-1)\n\t\tlazy[now]^=1;\n\telse tag[now]^=1;\n}\ninline void apushdown(int now){\n\tif(tag[now])\n\t\tagettag(lc(now)),agettag(rc(now)),tag[now]=0;\n\tif(lazy[now]!=-1)\n\t\tagetlazy(lc(now),lazy[now]),agetlazy(rc(now),lazy[now]),lazy[now]=-1;\n}\nvoid aupdate(int l,int r,int now,int L,int R,int v){\n\tif(L<=l&&r<=R){\n\t\tagetlazy(now,v);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tapushdown(now);\n\tif(L<=mid)\n\t\taupdate(l,mid,lc(now),L,R,v);\n\tif(mid<R)\n\t\taupdate(mid+1,r,rc(now),L,R,v);\n}\nvoid aupdatexor(int l,int r,int now,int L,int R){\n\tif(L<=l&&r<=R){\n\t\tagettag(now);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tapushdown(now);\n\tif(L<=mid)\n\t\taupdatexor(l,mid,lc(now),L,R);\n\tif(mid<R)\n\t\taupdatexor(mid+1,r,rc(now),L,R);\n}\nint aquery(int l,int r,int now,int pos){\n\tif(l==r)\n\t\treturn tag[now]^lazy[now];\n\tapushdown(now);\n\tint mid=(l+r)>>1;\n\treturn pos<=mid? aquery(l,mid,lc(now),pos):aquery(mid+1,r,rc(now),pos);\n}\nvector<int>t1[maxt],t2[maxt];\nvoid update(int now,int pos,int val){\n\tif(pos==1)\n\t\treturn ;\n\tint len=t1[now].size()-1;\n\tfor(int i=len-pos+1;i<=len;i+=lowbit(i))\n\t\tt1[now][i]+=val,t2[now][i]+=val*pos;\n}\nint query(int now,int pos){\n\tif(pos==1)\n\t\treturn 0;\n\tint len=t1[now].size()-1,res=0;\n\tif(len<pos)\n\t\treturn 0;\n\tfor(int i=len-pos+1;i;i-=lowbit(i))\n\t\tres+=t2[now][i]-t1[now][i]*(pos-1);\n\treturn res;\n}\nint blazy[maxt];\nstruct bnode{\n\tint pre,suf,maxx,len;\n}t[maxt];\nstruct section{\n\tint l,r;\n\tbool operator < (const section &p)const{\n\t\treturn l<p.l;\n\t}\n}lst;\nset<section>s[maxt];\nvoid cmodify(int now,int x,int v){\n//\tprintf(\"cmodify %d (%d,%d)\\n\",now,x,v);\n\tif(v==1){\n\t\tif(s[now].empty()){\n\t\t\ts[now].insert(section{x,x}),update(now,1,1);\n\t\t\treturn ;\n\t\t}\n\t\tset<section>::iterator itr=s[now].upper_bound(section{x,-1}),itl=itr;\n\t\titl--;\n\t\tint l=itl->l,r=itr->r;\n\t\tint lt=itr!=s[now].begin()&&itl->r==x-1,rt=itr!=s[now].end()&&itr->l==x+1;\n\t\tif(lt==0&&rt==0)\n\t\t\ts[now].insert(section{x,x}),update(now,1,1);\n\t\tif(lt==1&&rt==0)\n\t\t\ts[now].erase(itl),update(now,x-l,-1),s[now].insert(section{l,x}),update(now,x-l+1,1);\n\t\tif(lt==0&&rt==1)\n\t\t\ts[now].erase(itr),update(now,r-x,-1),s[now].insert(section{x,r}),update(now,r-x+1,1);\n\t\tif(lt==1&&rt==1)\n\t\t\ts[now].erase(itl),update(now,x-l,-1),s[now].erase(itr),update(now,r-x,-1),s[now].insert(section{l,r}),update(now,r-l+1,1);\n\t}\n\tif(v==0){\n\t\tset<section>::iterator it=s[now].upper_bound(section{x,-1}); \n\t\tit--;\n\t\tint l=it->l,r=it->r;\n\t\ts[now].erase(it),update(now,r-l+1,-1);\n\t\tif(l==x&&r!=x)\n\t\t\ts[now].insert(section{l+1,r}),update(now,r-l,1); \n\t\tif(l!=x&&r==x)\n\t\t\ts[now].insert(section{l,r-1}),update(now,r-l,1);\n\t\tif(l!=x&&r!=x)\n\t\t\ts[now].insert(section{l,x-1}),update(now,x-l,1),s[now].insert(section{x+1,r}),update(now,r-x,1);\n\t}\n}\nset<section>::iterator split(int now,int pos){\n\tset<section>::iterator it=s[now].lower_bound(section{pos,-1}),tmp=it;\n\tif(it!=s[now].end()&&(it==s[now].begin()||it->l==pos))\n\t\treturn it;\n\ttmp--;\n\tif(tmp->r<pos)\n\t\treturn it;\n\tint l=tmp->l,r=tmp->r;\n\ts[now].erase(tmp),update(now,r-l+1,-1);\n\tif(pos>l)\n\t\ts[now].insert(section{l,pos-1}),update(now,pos-l,1);\n\tupdate(now,r-pos+1,1);\n\treturn s[now].insert(section{pos,r}).first;\n}\nbnode merge(bnode a,bnode b){\n\tbnode res;\n\tres.pre=a.len==a.pre? (a.len+b.pre):a.pre;\n\tres.suf=b.len==b.suf? (b.len+a.suf):b.suf;\n\tres.maxx=max(max(a.maxx,b.maxx),a.suf+b.pre);\n\tres.len=a.len+b.len;\n\treturn res;\n}\ninline void bpushup(int now){\n\tt[now]=merge(t[lc(now)],t[rc(now)]);\n}\nvoid bbuild(int l,int r,int now){\n//\tprintf(\"l=%d r=%d now=%d\\n\",l,r,now);\n\tt1[now].resize(r-l+2),t2[now].resize(r-l+2);\n\tfor(int i=l;i<=r;i++)\n\t\tif(b[i])\n\t\t\tcmodify(now,i,1);\n\tif(l==r){\n\t\tt[now].len=1,t[now].pre=t[now].suf=t[now].maxx=b[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbbuild(l,mid,lc(now)),bbuild(mid+1,r,rc(now));\n\tbpushup(now);\n}\ninline void bgetlazy(int now){\n\tt[now].pre=t[now].suf=t[now].maxx=0,blazy[now]=1;\n}\ninline void bpushdown(int now){\n\tif(blazy[now])\n\t\tbgetlazy(lc(now)),bgetlazy(rc(now)),blazy[now]=0;\n}\nvoid bmodify(int l,int r,int now,int pos,int v){\n\tcmodify(now,pos,v);\n\tif(l==r){\n\t\tb[l]=t[now].pre=t[now].suf=t[now].maxx=v;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbpushdown(now);\n\tif(pos<=mid)\n\t\tbmodify(l,mid,lc(now),pos,v);\n\telse bmodify(mid+1,r,rc(now),pos,v);\n\tbpushup(now);\n}\nvoid bupdate(int l,int r,int now,int L,int R){\n\tif(L<=l&&r<=R){\n\t\tbgetlazy(now);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1; \n\tbpushdown(now);\n\tif(L<=mid)\n\t\tbupdate(l,mid,lc(now),L,R);\n\tif(mid<R)\n\t\tbupdate(mid+1,r,rc(now),L,R);\n\tbpushup(now);\n}\nvoid cupdate(int l,int r,int now,int L,int R){\n\tif(s[now].size()==0)\n\t\treturn ;\n\tif(l==r){\n\t\tfor(set<section>::iterator it=s[now].begin();it!=s[now].end();it=s[now].erase(it))\n\t\t\tupdate(now,it->r-it->l+1,-1);\n\t\treturn ;\n\t}\n\tset<section>::iterator itr=split(now,min(r,R)+1),itl=split(now,max(l,L));\n\twhile(itl!=itr)\n\t\tupdate(now,itl->r-itl->l+1,-1),itl=s[now].erase(itl);\n\tint mid=(l+r)>>1; \n\tif(L<=mid)\n\t\tcupdate(l,mid,lc(now),L,R);\n\tif(mid<R)\n\t\tcupdate(mid+1,r,rc(now),L,R);\n}\nint bget(int l,int r,int now,int pos){\n\tif(l==r)\n\t\treturn t[now].maxx;\n\tint mid=(l+r)>>1;\n\tbpushdown(now);\n\treturn pos<=mid? bget(l,mid,lc(now),pos):bget(mid+1,r,rc(now),pos);\n}\nint bquerysum(int l,int r,int now,int L,int R,int K){\n\tif(s[now].empty())\n\t\treturn 0;\n\tif(L<=l&&r<=R){\n\t\tint res=query(now,K);\n\t\tsection st=*s[now].begin(),ed=*s[now].rbegin();\n\t\tif(lst.r+1==st.l){\n\t\t\tres+=max(st.r-lst.l+1-K+1,0)-max(lst.r-lst.l+1-K+1,0)-max(st.r-st.l+1-K+1,0);\n\t\t\tif(s[now].size()==1)\n\t\t\t\tlst=section{lst.l,ed.r};\n\t\t\telse lst=ed;\n\t\t}\n\t\telse lst=ed;\n\t\treturn res;\n\t}\n\tint mid=(l+r)>>1,res=0;\n\tif(L<=mid)\n\t\tres+=bquerysum(l,mid,lc(now),L,R,K);\n\tif(mid<R)\n\t\tres+=bquerysum(mid+1,r,rc(now),L,R,K);\n\treturn res;\n}\nbnode bquerymax(int l,int r,int now,int L,int R){\n\tif(L<=l&&r<=R)\n\t\treturn t[now];\n\tint mid=(l+r)>>1;\n\tbpushdown(now);\n\tif(L<=mid&&mid<R)\n\t\treturn merge(bquerymax(l,mid,lc(now),L,R),bquerymax(mid+1,r,rc(now),L,R));\n\tif(L<=mid)\n\t\treturn bquerymax(l,mid,lc(now),L,R);\n\treturn bquerymax(mid+1,r,rc(now),L,R);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tabuild(1,n,1);\n\tfor(int i=1;i<n;i++)\n\t\tb[i]=a[i]^a[i+1];\n\tbbuild(1,n,1);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&qo[i],&ql[i],&qr[i]);\n\t\tif(qo[i]==3)\n\t\t\tscanf(\"%d\",&qk[i]);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint opt=qo[i],l=ql[i],r=qr[i],k=qk[i]; \n\t\tif(opt==0){\n\t\t\tif(l>1){\n\t\t\t\tint x=aquery(1,n,1,l-1);\n\t\t\t\tif(bget(1,n,1,l-1)!=x)\n\t\t\t\t\tbmodify(1,n,1,l-1,x);\n\t\t\t}\n\t\t\tif(r<n){\n\t\t\t\tint y=aquery(1,n,1,r+1);\n\t\t\t\tif(bget(1,n,1,r)!=y)\n\t\t\t\t\tbmodify(1,n,1,r,y);\n\t\t\t}\n\t\t\tif(l<r)\n\t\t\t\tbupdate(1,n,1,l,r-1),cupdate(1,n,1,l,r-1);\n\t\t\taupdate(1,n,1,l,r,0);\n\t\t}\n\t\tif(opt==1){\n\t\t\tif(l>1){\n\t\t\t\tint x=aquery(1,n,1,l-1)^1;\n\t\t\t\tif(bget(1,n,1,l-1)!=x)\n\t\t\t\t\tbmodify(1,n,1,l-1,x);\n\t\t\t}\n\t\t\tif(r<n){\n\t\t\t\tint y=aquery(1,n,1,r+1)^1;\n\t\t\t\tif(bget(1,n,1,r)!=y)\n\t\t\t\t\tbmodify(1,n,1,r,y);\n\t\t\t}\n\t\t\tif(l<r)\n\t\t\t\tbupdate(1,n,1,l,r-1),cupdate(1,n,1,l,r-1);\n\t\t\taupdate(1,n,1,l,r,1);\n\t\t}\n\t\tif(opt==2){\n\t\t\tint x=bget(1,n,1,l-1),y=bget(1,n,1,r);\n\t\t\tif(l>1)\n\t\t\t\tbmodify(1,n,1,l-1,bget(1,n,1,l-1)^1);\n\t\t\tif(r<n)\n\t\t\t\tbmodify(1,n,1,r,bget(1,n,1,r)^1);\n\t\t\taupdatexor(1,n,1,l,r);\n\t\t}\n\t\tif(opt==3){\n\t\t\tif(l==r)\n\t\t\t\tputs(\"0\");\n\t\t\telse lst=section{-1,-1},printf(\"%d\\n\",bquerysum(1,n,1,l,r-1,k-1));\n\t\t}\n\t\tif(opt==4){\n\t\t\tif(l==r)\n\t\t\t\tputs(\"1\");\n\t\t\telse printf(\"%d\\n\",bquerymax(1,n,1,l,r-1).maxx+1);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1629347245,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7825\u3010\u300cRdOI R3\u300dVSQ\u3011"
    }
]