[
    {
        "content": "\u672c\u9898\u9700\u8981\u6211\u4eec\u6c42\u51fa\u6700\u957f\u7684\u79bb\u539f\u70b9\u8ddd\u79bb  \n\u90a3\u4e48\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5148\u8d70\u5b8c\u6240\u6709\u7684front,  \n\u5c1d\u8bd5\u8f6c\u5230\u4e00\u4e2a\u79bb180\u5ea6\u6700\u8fd1\u7684\u89d2\u5ea6\u540e\u8d70back\uff0c  \n\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u6c42\u51fa\u4e00\u901a\u778e\u8f6c\u540e\u79bb180\u5ea6\u6700\u8fd1\u7684\u89d2\u5ea6\uff0c \n\n\u9009\u53d6\u4efb\u610f\u65cb\u8f6c\u540e\u6ee1\u8db3\u67d0\u6761\u4ef6  \n\u8fd9\u4e0d\u5c31\u662f\u4e2a\u53d8\u5f62\u768401\u80cc\u5305\u561b  \n\u6309\u716701\u7684\u5199\u6cd5\u679a\u4e3e\u51fa\u6bcf\u4e00\u79cd\u53ef\u80fd\u8fbe\u5230\u7684\u89d2\u5ea6  \n\u7136\u540e\u6328\u4e2a\u904d\u5386\u53d6\u51fa\u79bb180\u6700\u8fd1\u7684\u89d2\u5ea6  \n\u6700\u540e\u4f59\u5f26\u516c\u5f0f\u5c31\u89e3\u51b3\u4e86  \n\u6ce8\u610f\u8ba1\u7b97cos\u7684\u65f6\u5019\u8981\u89d2\u5ea6\u8f6c\u5f27\u5ea6   \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[410],f[20010];\nint main(){\n\tint n;\n\tcin>>n;\n\tint x=0,y=0;\n\tfor(int i=1;i<=n;++i){\n\t\tstring s;cin>>s;\n\t\tint dis;cin>>dis;\n\t\tif(s==\"forward\")x+=dis;\n\t\tif(s==\"backward\")y+=dis;\n\t\tif(s==\"left\"){\n\t\t\tdis=dis%360;\n\t\t\ta[dis]++;\n\t\t\t//cout<<dis<<\" \"<<a[dis]<<endl;\n\t\t}\n\t\tif(s==\"right\"){\n\t\t\tdis=dis%360;\n\t\t\ta[360-dis]++;\n\t\t}\n\t}\n\tf[0]=1;\n\tfor(int i=0;i<360;++i)\n\t\twhile(a[i]--)\n\t\t\tfor(int j=20000;j>=0;--j)\n\t\t\t\tif(f[j])f[j+i]++;\n\tint minn=0x7fffffff;\n\tfor(int i=1;i<=20000;++i)\n\t\tif(f[i])\n\t\t\tminn=min(minn,abs(i%360-180));\n\tif(minn==0){\n\t\tprintf(\"%d.000000\",x+y);\n\t\treturn 0;\n\t}\n\tprintf(\"%.6f\",sqrt((double)x*x+(double)y*y-2*(double)x*(double)y*cos((double)(180-minn)*M_PI/180)));\n\treturn 0;\n}\n```\n",
        "postTime": 1565839142,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "\u80cc\u5305+\u8d2a\u5fc3"
    },
    {
        "content": "\u628a\u6240\u6709\u5411\u524d\u8d70\u7684\u5408\u5e76\uff0c\u5411\u540e\u8d70\u7684\u5408\u5e76\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u5206\u4e3a\u56db\u6b65\u8d70  1.\u628a\u5411\u524d\u7684\u8d70\u5b8c2.\u8f6c\u4e00\u5b9a\u89d2\u5ea6\uff08\u6700\u597d\u662f180\uff093.\u628a\u5411\u540e\u8d70\u7684\u8d70\u5b8c4.\u539f\u5730\u8f6c\u5b8c\u6ca1\u8f6c\u5b8c\u7684\u89d2\u5ea6\u3002\n\n\n\u90a3\u4e48\u6b64\u9898\u5c31\u662f\u6c42\u89e3\u89d2\u5ea6\u548c\u6700\u63a5\u8fd1180.\n\n\u4e4b\u524d\u7684\u4e00\u7247\u65e5\u5fd7\uff1a\u201c\u591a\u7c73\u8bfa\u9aa8\u724c\uff1a\u53cc\u5411\u80cc\u5305\u201d\u91cc\u9762\u8bb2\u4e86\u4e00\u79cd \u591a\u7c73\u8bfaDP\u601d\u8def\u3002\u7528\u5728\u672c\u9898\u518d\u9002\u5408\u4e0d\u8fc7\u4e86\n\n\u5728\u8bb2\u4e00\u4e0b\u9884\u5904\u7406\uff1a\u5148\u628a\u4efb\u610f\u89d2\u53d8\u5230\u4e00\u5708\u4e4b\u5185\uff0c\u7136\u540e\u9009\u5b9a\u4e00\u4e2a\u6b63\u65b9\u5411\uff0c\u53cd\u65b9\u5411\u7684\u89d2\u90fd\u53d8\u6210360-x\uff1b\n\n\u7136\u540e\u5c31\u8dd1\u591a\u7c73\u8bfaDP,\u672c\u9898\u53ea\u8981\u67d3\u8272\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u6700\u5c0f\u8f6c\u52a8\u6570\u3002\n\n\n\n\n```delphi\n\nprogram exam1;\nconst pi=3.141592653589793;\nvar f,g:array[0..360]of boolean;\nvar a,b:longint;\nvar i,j,num,m,n,x:longint;\nvar c:char;\nvar jd:array[1..50]of longint;\nvar ans1,ans:real;\n//function max(aa,bb:longint):longint;\n//begin\n//if abs(aa mod 360 -180)>abs(bb mod 360 -180) then\n//exit(bb mod 360)\n//else exit(aa mod 360);\n//end;\nbegin\nreadln(n);\nfor i:=1 to n do\nbegin\nread(c);\nif c='f'then\nbegin\nwhile c<>' ' do read(c);\nreadln(x);\na:=a+x;\nend\nelse if c='b' then\nbegin\nwhile c<>' ' do read(c);\nreadln(x);\nb:=b+x;\nend\nelse if c='l' then\nbegin\nwhile c<>' 'do read(c);\nreadln(x);\nif x>=360 then x:=x-360;\ninc(num);\njd[num]:=x;\nend\nelse if c='r' then\nbegin\nwhile c<>' ' do read(c);\nreadln(x);\nif x>=360 then x:=x-360;\nx:=360-x;\ninc(num);\njd[num]:=x;\nend;\nend;\n\n//for i:=1 to num do\n//for j:=num downto 1 do\n//f[j]:=max(f[j],f[j-1]+jd[i]);\n\n//ans1:=f[num];\nfillchar(f,sizeof(f),false);\nf[0]:=true;\nfor i:=1 to num do\nbegin\ng:=f;\nfor j:=0 to 360 do\nif f[j] then\ng[(j+jd[i])mod 360]:=true;\nf:=g;\nend;\ni:=180;\nj:=180;\nwhile true do\nbegin\nif f[i] then\nbegin\nans1:=i;\nbreak;\nend;\nif f[j] then\nbegin\nans1:=j;\nbreak;\nend;\ninc(i);\ndec(j);\nend;\n\nans:=sqr(a)+sqr(b)-2*a*b*cos(ans1*pi/180);\nans:=sqrt(ans);\nwriteln(ans:0:6);\nend.\n\n```\n",
        "postTime": 1443435469,
        "uid": 2266,
        "name": "\u51ef\u7279\u7433",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2625 \u3010\u8c6a\u534e\u6e38\u8f6e\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P2625)\n\n**\u636e\u8bf4\u8fd9\u9898\u6b63\u89e3\u662fDP\u3002\u3002\u3002\u7136\u800c\u672c\u83dc\u9e21\u5b8c\u5168\u4e0d\u4f1a\uff0c\u53ea\u80fd\u7528\u6a21\u62df\u9000\u706b+O2**~~\u706b\u4e00\u706b~~**\u6c34\u4e00\u6c34\u4e86\u3002\u3002\u3002**\n\n\u8fd9\u9898\u7528\u6a21\u62df\u9000\u706b\u8fd8\u662f\u86ee\u5bb9\u6613\u8fc7\u7684\uff0c\u53ea\u8981\u6ce8\u610f\u5224\u65ad\u7684\u65f6\u5019\u5361\u5361\u5e38\u5c31\u884c\u4e86\uff1a\n\n1.\u5224\u65ad\u65f6\u4e0d\u8981\u53d6\u6a21\uff0c\u800c\u662f\u66b4\u529b\u5224\u65ad\uff1b\n\n2.\u9884\u5904\u7406\u6bcf\u4e2a\u89d2\u5ea6\u7684sin\u503c\u548ccos\u503c\u3002\n\n\u8fd9\u6837\u8fd9\u9898\u5c31\u53ef\u4ee5\u706b\u8fc7\u4e86\uff01\n\n\u795d\u5927\u5bb6\u706b\u9898\u5feb\u4e50\uff01\uff01\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstdlib> \n#include <cstring>\n#include <cmath>\n\nint num[51],ord[51][2],n;\ndouble ans,old,cosine[400],sine[400];\ndouble check(){\n    double ans,x=0.,y=0.;\n    int direction=0;\n    for(int i=1;i<=n;i++){\n        if(ord[num[i]][0]<=1){\n            (direction+=ord[num[i]][1]);\n            if(direction>=360)direction-=360;\n        }\n        else if(ord[num[i]][0]==2)x+=cosine[direction]*(double)ord[num[i]][1],\n                                  y+=  sine[direction]*(double)ord[num[i]][1];\n        else\t\t\t\t\t  x-=cosine[direction]*(double)ord[num[i]][1],\n                                  y-=  sine[direction]*(double)ord[num[i]][1];\n    }\n    return sqrt(x*x+y*y);\n}\nvoid swap(int &a,int &b){int T=a;a=b;b=T;}\nvoid sa(){\n    int newx,newy;\n    double cnt;\n    for(register double T=2000.;T>=1e-9;T*=0.99999){\n        newx=rand()%n+1;\n        newy=rand()%n+1;\n        swap(num[newx],num[newy]);\n        if(newx==newy)continue;\n        cnt=check();\n        if(cnt>old){\n            if(cnt>ans)ans=cnt;\n            old=cnt;\n        }\n        else if(exp((cnt-old)/T)>(double)(rand()%1000000)/1000000.0)old=cnt;\n        else swap(num[newx],num[newy]);\n    }\n}\nchar str[20];\nint main(){\n    srand(19260817);\n    scanf(\"%d\",&n);\n    for(int i=0;i<360;i++)cosine[i]=cos((((double)i)/180.0)*3.1415926535),sine[i]=sin((((double)i)/180.0)*3.1415926535);\n    for(int i=1;i<=n;i++){\n        scanf(\"%s%d\",str,&ord[i][1]);\n        if(str[0]=='l')ord[i][0]=0,ord[i][1]%=360;\n        else if(str[0]=='r')ord[i][0]=1,ord[i][1]=(720-ord[i][1])%360;\n        else if(str[0]=='f')ord[i][0]=2;\n        else ord[i][0]=3;\n        num[i]=i;\n    }\n    old=ans=check();\n    sa();\n    sa();\n    printf(\"%.6lf\\n\",ans);\n}\n```",
        "postTime": 1541581824,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP2625 \u8c6a\u534e\u6e38\u8f6e"
    },
    {
        "content": "\u8fd9\u9898\u867d\u7136\u6807\u7684\u84dd\u9898\u4f46\u5728\u4ed4\u7ec6\u601d\u8003\u540e\u6211\u4eec\u53d1\u73b0\u5b83\u8fd8\u662f\u5f88\u6c34\u7684\n\n\u9996\u5148\uff0c\u5728\u524d\u540e\u8d70\u7684\u8def\u7a0b\u4e00\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba9\u8f6c\u7684\u5ea6\u6570\u5c3d\u91cf\u63a5\u8fd1180\u00b0\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c\u7528\u4e0d\u4e0a\u7684\u8f6c\u5411\u6211\u4eec\u53ea\u9700\u8981\u518d\u8d70\u5b8c\u540e\u8f6c\u5b8c\u5373\u53ef\uff0c\u5e76\u4e0d\u5f71\u54cd\u8d70\u7684\u8ddd\u79bb\u3002\n\n\u5176\u6b21\uff0c\u600e\u4e48\u4f7f\u8f6c\u7684\u5ea6\u6570\u63a5\u8fd1180\u00b0\u5462\uff1f\u6211\u4eec\u8f7b\u677e\u53d1\u73b0\u5b83\u662f\u4e00\u4e2a01\u80cc\u5305\uff0c\u4e8e\u662f\u7b97\u51fa\u8f6c\u4e86\u591a\u5c11\u5ea6\u540e\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u5b66\u8ba1\u7b97\u5c31\u641e\u5b9a\u4e86\u3002\u53e6\u5916\uff0csin\u7b49\u4e09\u89d2\u51fd\u6570\u5728c++\u4e2d\u90fd\u662f\u5f27\u5ea6\u5236\uff0c\n\n[\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u5f27\u5ea6\u7684\u5c0f\u4f19\u4f34\u4eec\u6233\u8fd9\u91cc](https://baike.so.com/doc/5548384-5763492.html)\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u8f7b\u677e\u641e\u5b9a\u4e86\u8fd9\u9053\u9898\n\n\u5176\u4ed6\u7ec6\u8282\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n , front , back , cir[51] , p = 1e3;//p\u662f\u80fd\u8f6c\u51fa\u7684\u6700\u63a5\u8fd1180\u7684\u89d2\u5ea6\nbool f[51][361]; //f[i][j]\u8868\u793a\u7528\u524di\u4e2a\u8f6c\u5411\u80fd\u5426\u8f6c\u51faj\u5ea6\nconst double PI = 3.1415926535;\n\nint main()\n{\n    scanf(\"%d\" , &n);\n    for(int i = 1;i <= n;i ++)\n    {\n        char s[11];\n        int x;\n        cin >> s;\n        scanf(\"%d\" , &x);\n        if(s[0] == 'f') front += x;\n        else if(s[0] == 'b') back += x;\n        else if(s[0] == 'l') cir[++ cir[0]] = -x;\n        else cir[++ cir[0]] = x;\n    }\n    //front\u4ee3\u8868\u5f80\u524d\u8d70\u4e86\u591a\u8fdc\uff0cback\u8868\u793a\u5f80\u540e\u9000\u4e86\u591a\u8fdc\uff0ccir\u662f\u8bb0\u5f55\u8f6c\u52a8\u5ea6\u6570\u7684\u6570\u7ec4\n    \n    f[0][0] = 1;\n    for(int i = 1;i <= cir[0];i ++)\n        for(int j = 0;j < 360;j ++)\n            if(f[i - 1][j] == 1)\n                f[i][j] = 1 , f[i][(j + cir[i] + 360 * 10) % 360] = 1;\n    //\u6838\u5fc3\u768401\u80cc\u5305  \n    \n    for(int i = 0;i < 360;i ++)\n        if(f[cir[0]][i] == 1)\n            p=min(p , abs(i - 180));\n    double ans = sqrt(front * front + back * back + 2 * back * front * cos(p * PI / 180));\n    printf(\"%.6f\\n\",ans);\n    //\u4e00\u70b9\u6570\u5b66\u8ba1\u7b97\n    \n    return 0;\n}\n  \n```",
        "postTime": 1545564559,
        "uid": 89354,
        "name": "Disillusionment",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2625 \u3010\u8c6a\u534e\u6e38\u8f6e\u3011"
    },
    {
        "content": "P\u515a\u53c8\u51fa\u73b0\n\n \u5bf9\u4e8e 30%\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u66b4\u529b\u641c\u7d22\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u6392\u5217\u65b9\u5f0f\uff0c\u53d6\u5f97\u5176\u4e2d\u79bb\u5f00\u6700\u8fdc\u7684\u6307\u4ee4\u65b9\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6 O(n!)\n\n \u5bf9\u4e8e 100%\u7684\u6570\u636e\uff0c\n1. \u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\u5728\u6700\u5f00\u59cb\u548c\u6700\u7ed3\u675f\u7684\u5730\u65b9\u8fdb\u884c\u8f6c\u5f2f\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u53ea\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u8f6c\u5f2f\u6307\u4ee4\u3002\u5e76\u4e14\u6211\u4eec\u4e0d\u4f1a\u9009\u62e9\u5728\u524d\u8fdb\u4e00\u6bb5\u8ddd\u79bb\u4e4b\u540e\u8f6c\u5f2f\u518d\u524d\u8fdb\u4e00\u6bb5\u8ddd\u79bb\uff0c\u6216\u662f\u540e\u9000\u4e00\u6bb5\u8ddd\u79bb\u540e\u8f6c\u5f2f\u518d\u540e\u9000\u2014\u2014\u56e0\u4e3a\u8fd9\u5fc5\u7136\u4f7f\u5f97\u8ddd\u79bb\u539f\u70b9\u8ddd\u79bb\u4e0d\u4f18\uff08\u6ce8\u610f\u5230\u539f\u70b9\u89d2\u5ea6\u65e0\u5173\uff09\u3002\u540c\u7406\u5148\u524d\u8fdb\u6216\u662f\u5148\u540e\u9000\u4e5f\u662f\u5bf9\u79f0\u7684\u3002\n2. \u95ee\u9898\u53ef\u4ee5\u76f4\u63a5\u7b80\u5316\u4e3a\uff1a\u524d\u8fdb\u6240\u6709\u80fd\u524d\u8fdb\u7684\u8ddd\u79bb\uff0c\u4e4b\u540e\u8f6c\u4e00\u4e2a\u53ef\u9009\u7684\u89d2\u5ea6\uff0c\u7136\u540e\u540e\u9000\u6240\u6709\u80fd\u540e\u9000\u7684\u8ddd\u79bb\u3002\u5bf9\u4e8e\u9009\u62e9\u89d2\u5ea6\u7684\u65cb\u8f6c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u52a8\u6001\u89c4\u5212\u7684\u65b9\u6cd5\u8f6c\u79fb\u51fa\u6240\u6709\u53ef\u80fd\u8f6c\u52a8\u7684\u603b\u89d2\u5ea6\uff0c\u6700\u591a\u6709 360 \u79cd\uff0c\u5229\u7528\u4f59\u5f26\u5b9a\u7406\u8ba1\u7b97\u51fa\u7b2c\u4e09\u8fb9\u957f\u3002\n3. (c2 = a2 + b2 - 2abcos(angle))\n\n~~\u5077\u61d2\u7684\u505a\u6cd5\uff1a\u53ef\u4ee5\u5728\u8fd9 360 \u79cd\u4e2d\u679a\u4e3e\uff0c\u9009\u62e9\u4e00\u4e2a\u6700\u4f18\u89e3\u5373\u53ef\u3002\n\u8fd9\u4fbf\u662f\u8fd9\u9053\u9898\u7684\u6ee1\u5206\u7b97\u6cd5\u3002\u65f6\u95f4\u590d\u6742\u5ea6 O(n)~~\n\n~~\u62d2\u7edd\u6284\u88ad\uff0c\u5c0f\u5c0f\u4fee\u6539~~\n\n```pascal\nvar qian,hou,jiao:array[0..51]of longint;\n    sumqian,sumhou,sumjiao:longint;\n    i,j,k,n,m:longint;\n    g,gg:array[0..360]of boolean;\n    maxx,ma,ans:real;\n    ch:char;\nfunction max(x,y:real):real;\nbegin if x>y then exit(x);exit(y);end;\nprocedure init;//\u5077\u61d2\u7684\u8bfb\u5165\uff0c\u54c8\u54c8\u54c8\nbegin\n  readln(n);\n  for i:=1 to n do\n    begin\n      read(ch);\n      case ch of\n      'f':begin\n            for j:=1 to 7 do read(ch);\n            inc(qian[0]);\n            readln(qian[qian[0]]);\n            sumqian:=sumqian+qian[qian[0]];\n          end;\n      'b':begin\n            for j:=1 to 8 do read(ch);\n            inc(hou[0]);\n            readln(hou[hou[0]]);\n            sumhou:=sumhou+hou[hou[0]];\n          end;\n      'l':begin\n            for j:=1 to 4 do read(ch);\n            inc(jiao[0]);\n            readln(jiao[jiao[0]]);\n          end;\n      'r':begin\n            for j:=1 to 5 do read(ch);\n            inc(jiao[0]);\n            readln(jiao[jiao[0]]);\n            jiao[jiao[0]]:=-jiao[jiao[0]];\n          end;\n      end;\n    end;\nend;\nbegin\n  fillchar(qian,sizeof(qian),0);\n  fillchar(hou,sizeof(hou),0);\n  fillchar(g,sizeof(g),0);\n  fillchar(gg,sizeof(gg),0);  \n  sumqian:=0;sumhou:=0;\n  init;                    \n  g[0]:=true;gg[0]:=true;\n  for i:=1 to jiao[0] do\n  begin\n    for j:=0 to 360-1 do\n      if g[j] then\n        gg[(j+360+jiao[i]) mod 360]:=true;\n    for j:=0 to 359 do\n      g[j]:=gg[j];\n    end;\n  for i:=0 to 360 do//\u5f53\u521d\u627e\u5230\u6700\u8fd1\u7684\u5c31\u9000\u51fa\u53ef\u662f\u3001\u3002\u3002\u3002\u53d1\u73b0\u5e03\u661f\u3002\u3002\u3002\u3002\n  if g[i] then\n  begin\n  maxx:=sqrt(sqr(sumqian)+sqr(sumhou)-2*sumqian*sumhou*cos(i*pi));//\u795e\u5947\u7684pi\n  if ans<maxx then ans:=maxx;\n  end;\n  writeln(ans:0:6);\nend.\n\n```",
        "postTime": 1537281571,
        "uid": 113976,
        "name": "\u83ab\u95ee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2625 \u3010\u8c6a\u534e\u6e38\u8f6e\u3011"
    },
    {
        "content": "### \u628a\u6b63\u7740\u8d70\u7684\u548c\u5012\u7740\u8d70\u7684\u7d2f\u52a0\uff0c\u901a\u8fc7\u4e00\u4e2a\u80cc\u5305\uff0c\u7b97\u51fa\u89d2\u5ea6\u8ddd180\u3002\uff08\u6b64\u5708\u5728\u53f3\u4e0a\u65b9\uff09\u6700\u8fdc\u7684\u3002\u901a\u8fc7\u4f59\u5f26\u5b9a\u7406\u8ba1\u7b97\u3002\n\n### Code:\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst double pi=3.1415926535;\nint n,sf,sb,p,ang[55];\ndouble ans;\nbool f[105][405];\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        char ch[11];\n        scanf(\"%s%d\",ch,&x);\n        if(ch[0]=='f')\n            sf+=x;\n        if(ch[0]=='b')\n            sb+=x;\n        if(ch[0]=='r')\n            ang[++ang[0]]=x;\n        if(ch[0]=='l')\n            ang[++ang[0]]=-x;\n    }\n    f[0][0]=1;\n    for(int i=1;i<=ang[0];i++)\n        for(int j=0;j<360;j++)\n            if(f[i-1][j])\n                f[i][j]=1,f[i][(j+ang[i]+720)%360]=1;\n    p=180;\n    for(int i=0;i<360;i++)\n        if(f[ang[0]][i])\n            p=min(p,abs(i-180));\n    ans=sqrt(sf*sf+sb*sb+2*sb*sf*cos(p*pi/180));\n    printf(\"%.6f\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1541305063,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2625 \u3010\u8c6a\u534e\u6e38\u8f6e\u3011"
    },
    {
        "content": "\u7b80\u5355\u770b\u4e0b\u4ee3\u7801\u5e94\u8be5\u90fd\u4f1a\u61c2\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7279\u6b8a\u4e00\u70b9\u7684\u80cc\u5305\u2014\u2014\u4e00\u5f00\u59cb\u519901\u80cc\u5305\u548c\u6700\u5c0f\u5269\u4f59\u5bb9\u91cf\u80cc\u5305\u7684\u90fd\u53ea\u80fd\u5f97\u523030\u5206\u2014\u2014\u56e0\u4e3a\u6ca1\u8003\u8651\u5927\u4e8e180\u5ea6\u7684\u52a0\u60c5\u51b5\n\n\u6700\u4f18\u60c5\u51b5\u8d2a\u5fc3\uff1a\u5148\u628aforward\u8d70\u5b8c\uff0c\u7136\u540e\u627e\u4e2a\u6700\u63a5\u8fd1180\u5ea6\u89d2\u7684\u8f6c\u56de\u6765\uff0c\u7136\u540e\u628abackward\u8d70\u5b8c\uff0c\u6839\u636e\u4e09\u89d2\u5f62\u4e24\u8fb9\u4e4b\u548c\u5927\u4e8e\u7b2c\u4e09\u8fb9\u8fd9\u6837\u662f\u6700\u4f18\u7684\uff0c\u7136\u540e\u5de6\u8f6c\u5b58\u6b63\uff0c\u53f3\u8f6c\u5b58\u8d1f\uff0c\u8dd1\u67d3\u8272\u8fc7\u7684\u80cc\u5305\u5c31\u597d\u5566\u2014\u2014\u6ce8\u610f\u4f59\u5f26\u5b9a\u7406\u4e2d\u7f16\u8bd1\u5668\u4f7f\u7528\u5f27\u5ea6\u5236\u8981\u5148\u628a\u89d2\u5ea6\u8f6c\u6210\u5f27\u5ea6\uff0c\u8fd8\u6709pi\u8bbe\u5b9a\u7684\u65f6\u5019\u8bb0\u5f97\u5c0f\u6570\u70b9\u540e\u591a\u51e0\u4f4d\u4fdd\u7559\u7cbe\u5ea6\uff0c\u8981\u4e0d\u4f1aWA\n\n```cpp\n\n#include <iostream>\n#include <vector>\n#include <cmath>\n#include <string>\n#include <iomanip>\nusing namespace std;\nconst double pi=3.1415926535;\nint n,i,j,num,F,B,p,R[100],cnt=0,tmp,f[100][360];\ndouble ans;\nstring ch;\nint main()\n{\n    cin >> n;\n    for (i=1;i<=n;i++)\n    {\n        cin >> ch >> num;\n        if (ch==\"left\") R[++cnt]=num;\n        if (ch==\"right\") R[++cnt]=-num;\n        if (ch==\"forward\") F+=num;\n        if (ch==\"backward\") B+=num;\n    }\n    f[0][0]=1;\n    for (i=1;i<=cnt;i++)\n        for (j=0;j<360;j++)\n            if (f[i-1][j])\n            {\n                f[i][j]=1;\n                tmp=(j+R[i]+720) % 360;\n                f[i][tmp]=1;\n            }\n    p=180;\n    for (i=0;i<360;i++) if (f[cnt][i]&&abs(i-180)<p) p=abs(i-180);\n    ans=sqrt(pow((double)F+cos((double)p/180*pi)*(double)B,2)\n            +pow(sin((double)p/180*pi)*(double)B,2));\n    cout << fixed << setprecision(6) << ans;\n    return 0;\n}\n\n```",
        "postTime": 1443314213,
        "uid": 988,
        "name": "Travis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2625 \u3010\u8c6a\u534e\u6e38\u8f6e\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u601d\u8def\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u662f\u6211\u628a\u4ed6\u6574\u7406\u4e86\u4e00\u4e0b\uff0c\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a\n+ 1.\u901a\u8fc7\u8ba1\u7b97\u7684\u65b9\u6cd5\u7d2f\u52a0\u6240\u6709foward\u4e0ebackward\n+ 2.\u4e0d\u96be\u53d1\u73b0\uff0c\u65b9\u6cd5\u662f\uff1a\u5148\u8d70foward\u6b65\u518d\u8f6c\uff0c\u5c3d\u53ef\u80fd\u63a5\u8fd1180\u5ea6\uff0c\u518d\u8d70backward\u6b65\u3002\n+ 3.\u5176\u4f59\u7684\u90e8\u5206\u53ef\u4ee5\u8d70\u5230\u4e86\u4e4b\u540e\u518d\u539f\u5730\u65cb\u8f6c\u3002\n\n\u8fd9\u4e2a\u601d\u8def\u53ef\u4ee5\u901a\u8fc7\u4e09\u89d2\u5f62\u4e24\u8fb9\u4e4b\u548c\u5927\u4e8e\u7b2c\u4e09\u8fb9\u6765\u8bc1\u660e\u3002\n\n\u540c\u6837\uff0c\u79bb\u5f00\u539f\u70b9\u7684\u8ddd\u79bb\u53ef\u4ee5\u901a\u8fc7\u4f59\u5f26\u5b9a\u7406\u6765\u8ba1\u7b97\uff0c\u516c\u5f0f\u4e3a\uff1a\n\n``\nsqrt(a*a+b*b-2*a*b*cos(PI*deg/180))\n``\n\n\u5176\u4e2ddeg\u4e3adp\u5f97\u5230\u7684\u89d2\u5ea6\u503c\uff0ca\u4e0eb\u5206\u522b\u4e3a\u524d\u8fdb\u4e0e\u540e\u9000\u7684\u8ddd\u79bb\u3002\n\n\u90a3\u4e48\uff0c\u95ee\u9898\u6765\u4e86\uff1a\u600e\u4e48\u8ba1\u7b97\u65cb\u8f6c\u89d2\u5ea6\u5462\uff1f\n\n\u7531\u4e8e\u89d2\u5ea6\u7684\u7edd\u5bf9\u503c\u4e0d\u4f1a\u8d85\u8fc7360*50=18000\uff0c\n\n\u8bbe\u89d2\u5ea6\u4e3ay\uff0c\u6240\u6709left\u53d8\u4e3ay%360\uff0cright\u53d8\u4e3a(720-y)%360\n\n\u6ce8\u610f\u628acnt--\u5426\u5219\u540e\u9762\u591a\u51fa\u6765\u4e00\u4f4d\n\n\u4e4b\u540e\u7528\u5e03\u5c14dp\u628a\u6bcf\u4e2a\u53ef\u4ee5\u5f97\u5230\u7684\u89d2\u5ea6\u8ba1\u7b97\u51fa\u6765\n\n\u7136\u540e\u9010\u4e2a\u679a\u4e3e\u6240\u6709\u7684\u89d2\u5ea6%360\u4e0e180\u7684\u5dee\n\n\u7136\u540e\u628a\u5dee\u6570\u7ec4sort\u4e00\u4e0b\n\n\u7136\u540e\u89d2\u5ea6\u7b49\u4e8e\u5dee\u6570\u7ec4\u7684\u7b2c18000\u4f4d\uff08\u56e0\u4e3a\u5df2\u7ecf\u8fdb\u884c\u7528180\u51cf\u7684\u9884\u5904\u7406\uff09\n\n\u6700\u540e\u7528\u4e00\u4e0b\u6b63\u5f26\u5b9a\u7406\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\n\n\u8fd8\u6709\u4e0d\u8981\u5fd8\u8bb0\u63a7\u5236\u8f93\u51fa6\u4f4d\u5426\u5219\u4f1a\u70b8\n```\n#include<bits/stdc++.h> \ntypedef long long ll;\nconst double PI=3.1415926535898;\nusing namespace std;\nint cnt=1;\nint m[250];\nbool flag[18001];\nint main()\n{\n    int f=0,b=0;\n    int x;\n    cin>>x;\n    string cmd;\n    int y;\n    while(x--)\n    {\n        cin>>cmd>>y;\n        if(cmd==\"forward\")\n        f+=y;\n        else if(cmd==\"backward\")\n        b+=y;\n        else\n        {\n            if(cmd==\"left\")m[cnt++]=y%360;\n            else m[cnt++]=(720-y)%360;\n        }\n    }\n    cnt--;\n    int deg=10000000;\n    memset(flag,0,sizeof(flag));\n    flag[0]=true;\n    for(int i=1;i<=cnt;i++)\n    {\n        for(int j=18000;j>=m[i];j--)\n        {\n            if(flag[j-m[i]])flag[j]=true;\n        }\n    }\n    int cha[18001];\n    for(int i=1;i<=18000;i++)\n    {\n        if(flag[i])\n        {\n            cha[i]=abs(180-(i%360));\n        }\n        else\n        {\n            cha[i]=180;\n        }\n        cha[i]=180-cha[i];\n    }\n    sort(cha+1,cha+18000+1);\n    deg=cha[18000];\n    int a=f;\n//\tcout<<deg<<endl;\n    cout<<fixed<<setprecision(6)<<(sqrt(a*a+b*b-2*a*b*cos(PI*deg/180)))<<endl;\n}\n```\n# [AC\u8bb0\u5f55](https://www.luogu.org/recordnew/show/19645652)",
        "postTime": 1559727027,
        "uid": 61940,
        "name": "QwQ_lky_QwQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2625 \u3010\u8c6a\u534e\u6e38\u8f6e\u3011"
    }
]