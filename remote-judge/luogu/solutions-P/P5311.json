[
    {
        "content": "\u89c9\u5f97\u5176\u4ed6\u5927\u4f6c\u7684\u9898\u89e3\u5199\u7684\u592a\u8fc7\u7b80\u7565\u4e86\uff0c\u6211\u7406\u89e3\u4e86\u597d\u4e45\u3002\u6240\u4ee5\u6211\u4f1a\u5199\u7684\u5c3d\u91cf\u8be6\u7ec6\u4e00\u4e9b\u3002\n\n\u8fd9\u9053\u9898\u9996\u5148\u4e00\u4e2a\u5de7\u5999\u7684\u5730\u65b9\u662f\u5efa\u70b9\u5206\u6811\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u6811\u4e0a\u7684\u4efb\u610f\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2a\u5728\u70b9\u5206\u6811\u4e0a\u6df1\u5ea6\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u5e76\u4e14\u6574\u4e2a\u8054\u901a\u5757\u90fd\u5728\u8fd9\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u4e2d\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u4e00\u5b9a\u6210\u7acb\u5462\uff1f\u6211\u60f3\u4e86\u597d\u4e45\u53d1\u73b0\u8fd9\u4e2a\u53ef\u4ee5\u53cd\u8bc1\u6cd5\u3002\u5047\u8bbe\u70b9\u5206\u6811\u4e0a\u6700\u6d45\u7684\u8282\u70b9\u53eb\u505a$p$\uff0c\u8054\u901a\u5757\u4e2d\u6709\u4e00\u4e2a\u70b9$q$\u4e0d\u5728$p$\u7684\u5b50\u6811\u5185\u3002\u7531\u4e8e\u70b9\u5206\u6811\u4e0a$p$\u7684\u5b50\u6811\u4e5f\u662f\u539f\u6811\u4e2d\u7684\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u5e76\u4e14**\u6240\u6709$p$\u5b50\u6811\u4e4b\u5916\u7684\u70b9\u5230\u8fbe$p$\u90fd\u5fc5\u987b\u7ecf\u8fc7\u4e00\u4e2a\u6bd4$p$\u66f4\u6d45\u7684\u8282\u70b9**\uff0c\u6240\u4ee5$q$\u5230$p$\u7684\u8def\u5f84\u4e0a\u6700\u6d45\u7684\u70b9\u4e00\u5b9a\u6bd4$p$\u6d45\uff0c\u800c\u540c\u65f6\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u4e5f\u5728\u8054\u901a\u5757\u5185\uff0c\u8fd9\u8fdd\u53cd\u4e86\u201c$p$\u662f\u6700\u6d45\u7684\u8282\u70b9\u201d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u8be2\u95ee$l,r,x$\uff0c\u5f52\u5728\u548c$x$\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5757\u4e2d\u7684\u70b9\u5206\u6811\u4e0a\u6700\u6d45\u7684\u8282\u70b9\u3002\u7136\u540e\u5c31\u53ea\u9700\u8981\u5bf9\u70b9\u5206\u6811\u4e0a\u6bcf\u4e2a\u70b9\u904d\u5386\u4e00\u904d\u5b50\u6811\uff0c\u5206\u5f00\u6765\u5904\u7406\u3002\n\n\u4e0b\u9762\u5047\u8bbe\u5f53\u524d\u626b\u63cf\u5230\u7684\u70b9\u53eb\u505a$p$\uff0c$q$\u662f$p$\u70b9\u5206\u6811\u4e0a\u5b50\u6811\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u3002\u5bb9\u6613\u53d1\u73b0\u9009\u4e2d$q$\u7684\u6761\u4ef6\u662f$p$\u5230$q$\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u90fd\u5728$[l,r]$\u4e4b\u4e2d\u3002\u6240\u4ee5\u628a\u4e00\u4e2a$q$\u5199\u6210\u4e8c\u7ef4\u5e73\u9762\u4e2d\u7684\u4e00\u4e2a\u70b9$(mn,mx)$\uff0c\u5176\u4e2d\u7684$mn,mx$\u5c31\u662f$p$\u5230$q$\u8def\u5f84\u4e2d\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002\u4e8e\u662f\u4e00\u4e2a\u8be2\u95ee\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u6570\u989c\u8272\uff0c\u67e5\u8be2\u6240\u6709$mn\\ge l,mx\\le r$\u70b9\u7684\u989c\u8272\u6570\u3002\u8fd9\u4e1c\u897f\u4e4d\u4e00\u770b\u4e0d\u592a\u53ef\u505a\uff0c\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u628a\u6240\u6709\u7684\u70b9\u6392\u5217\u6210$mn,mx$\u90fd\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217\uff0c\u5176\u4ed6\u70b9\u90fd\u6ca1\u6709\u610f\u4e49\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e2a$pre$\uff0c\u5316\u6210\u4e09\u7ef4\u6570\u70b9\u3002\u53ef\u60dc\u8fd9\u6837\u7b97\u4e0a\u70b9\u5206\u6cbb\u4e00\u5171\u662f\u4e09\u4e2alog\uff0c\u80af\u5b9a\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\n\n\u7136\u540e\u6211\u4ed4\u7ec6\u7814\u7a76\u4e86\u5176\u4ed6\u9898\u89e3\u7684\u4ee3\u7801\uff0c\u7ec8\u4e8e\u9886\u609f\u4e86\u6b63\u786e\u7684\u505a\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u70b9\u548c\u8be2\u95ee\u6309\u7167\u7b2c\u4e00\u7ef4\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u7136\u540e\u53ea\u9700\u8981\u4e00\u8fb9\u626b\u63cf\u7ebf\uff0c\u4e00\u8fb9\u8bb0\u5f55**\u6bcf\u79cd\u989c\u8272$mx$\u6700\u5c0f\u7684\u4e00\u6b21\u51fa\u73b0**\u3002\u8fd9\u6837\u53ef\u4ee5\u5de7\u5999\u7684\u4fdd\u8bc1\u6bcf\u79cd\u989c\u8272\u53ea\u88ab\u7b97\u5230\u4e86\u6700\u591a\u4e00\u6b21\uff0c\u5e76\u4e14\u539f\u6765\u7b97\u5f97\u5230\u7684\u989c\u8272\u73b0\u5728\u8fd8\u662f\u7b97\u5f97\u5230\u3002\u7136\u540e\u5c31\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^2{n})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n)$\u6216$O(n\\log n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,cl[1<<17],rt,mn,S,siz[1<<17],vis[1<<17],mv[1<<17],ans[1<<17],c[1<<17];\nbasic_string<int> v[1<<17];\nstruct ev{int x,y,z,tp;};basic_string<ev>q[1<<17],fa[1<<17];\nvoid getrt(int p,int f=0){\n\tsiz[p]=1;int mx=0;\n\tfor(int i:v[p])if(!vis[i] && i!=f)\n\t\tgetrt(i,p),siz[p]+=siz[i],mx=max(mx,siz[i]);\n\tif((mx=max(mx,S-siz[p]))<mn)mn=mx,rt=p;\n}\nvoid dfs(int p,int f=0,int mn=1e9,int mx=-1e9){\n\tmn=min(mn,p),mx=max(mx,p);fa[p]+={mn,mx,rt};\n\tsiz[p]=1;q[rt]+={mn,mx,cl[p],0};\n\tfor(int i:v[p])if(i!=f && !vis[i])dfs(i,p,mn,mx),siz[p]+=siz[i];\n}\nvoid work(int p){\n\tvis[p]=1;dfs(p);\n\tfor(int i:v[p])if(!vis[i])\n\t\tS=siz[i],mn=1e9,getrt(i),work(rt);\n}\nvoid ins(int p,int v){for(;p<=n;p+=p&-p)c[p]+=v;}\nint qry(int p){int r=0;for(;p;p&=p-1)r+=c[p];return r;}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",cl+i);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tv[x]+=y,v[y]+=x;\n\t}\n\tS=n,mn=1e9;getrt(1);work(rt);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\n\t\tfor(ev&j:fa[z])if(j.x>=x && j.y<=y)\n\t\t\t{q[j.z]+={x,y,i,1};break;}\n\t}\n\tmemset(mv,0x3f,sizeof mv);\n\tfor(int i=1;i<=n;i++){\n\t\tsort(q[i].begin(),q[i].end(),[](ev x,ev y){\n\t\t\treturn x.x>y.x || x.x==y.x&&x.tp<y.tp;\n\t\t});\n\t\tfor(ev&E:q[i])if(E.tp)ans[E.z]=qry(E.y);else\n\t\t\tif(E.y<mv[E.z]){if(mv[E.z]<1e9)ins(mv[E.z],-1);ins(mv[E.z]=E.y,1);}\n\t\tfor(ev&E:q[i])if(!E.tp){\n\t\t\tmv[E.z]=1e9;for(int p=E.y;p<=n;p+=p&-p)c[p]=0;\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1557965041,
        "uid": 30093,
        "name": "cosmicAC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5311 \u3010[Ynoi2012]D1T3\u3011"
    },
    {
        "content": "\u601d\u8def\uff08\u5bf9\u6211\u6765\u8bf4\uff09\u597d\u6bd2\u7624\u7684\u4e00\u9053\u9898\u554a\u2026\u2026 %%%lxl %%%\u6bd4\u8d5b\u65f6AC\u7684\u5927\u4f6c\n\n\uff08\u4ee5\u4e0b\u662f\u6211\u5bf9\u4e8e\u6b63\u89e3\u7684\u7406\u89e3\uff09\n\u5927\u6982\u6765\u8bf4\uff0c\u662f\u6709\u4e24\u6b21\u7684\u95ee\u9898\u8f6c\u5316\u7684\u8fc7\u7a0b\uff1a\n\n**\u7b2c\u4e00\u6b65**\n\n\u5efa\u51fa\u70b9\u5206\u6811\uff0c\u8fd9\u6837\u5bf9\u4e8e\u8be2\u95ee(l,r,x)\u4e2dx\u6240\u5728\u7684\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5fc5\u5b9a\u5b8c\u5168\u5305\u542b\u5728[l,r]\u533a\u95f4\u5185\u67d0\u4e00\u4e2a\u8282\u70b9\uff08\u5728\u70b9\u5206\u6811\u4e0a\uff09\u7684\u5b50\u6811\u91cc\u9762\uff0c\u5728\u70b9\u5206\u6811\u4e0a\u66b4\u529b\u8df3\u7236\u4eb2\u5373\u53ef\u627e\u5230\u8fd9\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u8be2\u95ee\"\u9001\"\u7ed9\u8fd9\u4e2a\u8282\u70b9\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4e00\u4e2a\u8282\u70b9\u4e00\u4e2a\u8282\u70b9\u5730\u5904\u7406\u8fd9\u4e9b\u8be2\u95ee\u3002\n\n\u8fd9\u6837\u8f6c\u5316\u4e4b\u540e\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u5728\u4e00\u68f5\u6811\u4e2d\uff0c\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u53ea\u7ecf\u8fc7[l,r]\u8303\u56f4\u5185\u7684\u70b9\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u989c\u8272\u6570\u3002\n\n**\u7b2c\u4e8c\u6b65**\n\n\u6211\u4eec\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u8282\u70b9\u5230\uff08\u70b9\u5206\u6811\u4e0a\u7684\uff09\u6bcf\u4e2a\u7956\u5148\u7684\u8def\u5f84\u4e0a\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9\u548c\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\uff0c\u5206\u522b\u8bbe\u6210L\u548cR\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u6709\u5bf9\u4e8ex\u8282\u70b9\u62e5\u6709\u7684\u4e00\u4e2a\u8be2\u95ee(l,r)\uff0c\u53ea\u6709L>=l\u4e14R<=r\u7684\u8282\u70b9\u624d\u80fd\u5bf9\u7b54\u6848\u6709\u8d21\u732e\n\n\u4e8e\u662f\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\u4e86\u2026\u2026\u5c06\u8be2\u95ee\u79bb\u7ebf\u4e00\u6ce2\uff0c\u7b2c\u4e00\u7ef4\u6392\u5e8f\u7b2c\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u89e3\u51b3\u3002\n\n\u4e11\u964b\u7684\u4e0d\u884c\u7684\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nint n,m,xi,yi,zi;\nint col[100010],ans[100010],cx[100010];\nint nxt[200010],to[200010],head[100010],gs;\nint size[100010],used[100010],d[100010];\nint rt,srt,tot;\n\nstruct node{\n\tint l,r,id;node(int a=0,int b=0,int c=0){l=a;r=b;id=c;}\n\tbool operator <(const node d)const{return l==d.l?id>d.id:l>d.l;}\n};\n\nvector<node> v[100010],q[100010];\n\ninline void lb(int x,int y){\n\tnxt[++gs]=head[x];head[x]=gs;to[gs]=y;\n}\n\nvoid frt(int x,int fa){\n\tint mn=size[x]=1;for(int i=head[x];i;i=nxt[i])\n\t\tif(to[i]!=fa && !used[to[i]])frt(to[i],x),size[x]+=size[to[i]],mn=max(mn,size[to[i]]);\n\tmn=max(mn,tot-size[x]);if(mn<srt)srt=mn,rt=x;\n}\n\nvoid dfs(int x,int fa,int mx,int mn){\n\tsize[x]=1;v[x].push_back(node(mn,mx,rt)),q[rt].push_back(node(mn,mx,col[x]));for(int i=head[x];i;i=nxt[i])\n\t\tif(to[i]!=fa && !used[to[i]])dfs(to[i],x,max(mx,to[i]),min(to[i],mn)),size[x]+=size[to[i]];\n}\n\nvoid vp(int x){\n\ttot=size[x];srt=0x3f3f3f3f;frt(x,-1);used[rt]=1;dfs(x=rt,-1,rt,rt);\n\tfor(int i=head[x];i;i=nxt[i])if(!used[to[i]])vp(to[i]);\n}\n//\u4ee5\u4e0a\u4e3a\u849f\u84bb\u7684\u70b9\u5206\u6811\nvoid update(int x,int v){for(;x<=n;x+=x&-x)d[x]+=v;}\nint query(int x,int ans=0){for(;x;x-=x&-x)ans+=d[x];return ans;}\n//\u4ee5\u4e0a\u4e3a\u849f\u84bb\u7684\u6811\u72b6\u6570\u7ec4\nint main(){\n\tscanf(\"%d %d\",&n,&m);for(int i=1;i<=n;i++)scanf(\"%d\",&col[i]);\n\tfor(int i=1;i<n;i++)scanf(\"%d %d\",&xi,&yi),lb(xi,yi),lb(yi,xi);\n\tsize[1]=n;vp(1);for(int i=1;i<=m;i++){\n\t\tscanf(\"%d %d %d\",&xi,&yi,&zi);\n\t\tfor(vector<node>::iterator id=v[zi].begin();id!=v[zi].end();id++){\n\t\t\tnode j=*id;if(j.l>=xi && j.r<=yi){q[j.id].push_back(node(xi,yi,-i));break;}\n\t\t}//id\u4e3a\u8d1f\u8868\u793a\u662f\u4e00\u4e2a\u8be2\u95ee\n\t}for(int i=1;i<=n;i++){\n\t\tsort(q[i].begin(),q[i].end());\n\t\tfor(vector<node>::iterator id=q[i].begin();id!=q[i].end();id++){\n\t\t\tnode j=*id;\n\t\t\tif(j.id<0)ans[-j.id]=query(j.r);\n\t\t\telse{\n\t\t\t\tif(cx[j.id]>j.r)update(cx[j.id],-1),cx[j.id]=0;\n\t\t\t\tif(!cx[j.id])update(j.r,1),cx[j.id]=j.r;\n\t\t\t}\n\t\t}\n\t\tfor(vector<node>::iterator id=q[i].begin();id!=q[i].end();id++){\n\t\t\tnode j=*id;\n\t\t\tif(j.id>0 && cx[j.id]==j.r)update(j.r,-1),cx[j.id]=0;\n\t\t}\n\t}for(int i=1;i<=m;i++)printf(\"%d\\n\",ans[i]);return lxl\u6bd2\u7624;\n}\n```\n",
        "postTime": 1553073715,
        "uid": 82611,
        "name": "PurpleWonder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5267 \u3010\u7f8e\u597d\u7684\u6bcf\u4e00\u5929~\u4e0d\u8fde\u7eed\u7684\u5b58\u5728~\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5728\u70b9\u5206\u6811\u4e0a\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6700\u6d45\u7684\u70b9\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u70b9\u662f $x$ \u5728\u70b9\u5206\u6811\u4e2d\u7684\u7956\u5148\uff0c\u4e14\u5728\u70b9\u5206\u6811\u4e0a\u5230 $x$ \u7ecf\u8fc7\u7684\u70b9\u7f16\u53f7\u6700\u5c0f/\u5927\u503c\u7ec4\u6210\u7684\u533a\u95f4 $[\\min,\\max]$ \u88ab $[l,r]$ \u5305\u542b\uff0c\u90a3\u4e48\u6240\u6709\u7f16\u53f7\u5728 $[l,r]$ \u5185\u7684\u4e0e $x$ \u8fde\u901a\u7684\u70b9\uff0c\u4e00\u5b9a\u90fd\u5728\u70b9\u5206\u6811\u4e2d\u8fd9\u4e2a\u6700\u6d45\u7684\u70b9\u7684\u5b50\u6811\u5185\uff0c\u56e0\u4e3a\u5982\u679c\u5b58\u5728\u53e6\u4e00\u4e2a\u70b9\u4e0d\u5728\u8fd9\u4e2a\u5b50\u6811\u5185\u4e14\u4e0e $x$ \u8fde\u901a\uff0c\u5219\u8fd9\u4e2a\u4e0d\u5728\u5b50\u6811\u5185\u7684\u70b9\u548c\u6211\u4eec\u627e\u5230\u7684\u6700\u6d45\u7684\u70b9\u4e4b\u95f4\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u8def\u5f84\uff0c\u7ecf\u8fc7\u7684\u7f16\u53f7\u90fd\u662f\u5408\u6cd5\u7684\u3002\u6240\u4ee5\u4ed6\u4eec\u7684 LCA \u4e5f\u662f\u5408\u6cd5\u7684\uff0c\u65e2\u7136 LCA \u5408\u6cd5\u5e76\u4e14\u66f4\u6d45\uff0c\u4e0e\u6211\u4eec\u201c\u627e\u5230\u7684\u6700\u6d45\u7684\u70b9\u201d\u76f8\u77db\u76fe\u3002\n\n\u6240\u4ee5\u628a\u6bcf\u4e2a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u6700\u6d45\u7684\u70b9\uff0c\u8ba9\u8fd9\u4e2a\u6700\u6d45\u7684\u70b9\u5904\u7406\u8fd9\u4e2a\u8be2\u95ee\u3002\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u6c42\u4e00\u4e2a\uff08\u70b9\u5206\u6811\u4e2d\u7684\uff09\u6709\u6839\u6811\u4e2d\u4e0e $x$ \u5728\u539f\u6811\u4e2d\u8fde\u901a\u7684\u8fde\u901a\u5757\u989c\u8272\u6570\u3002\n\n\u53d1\u73b0\u4e00\u4e2a\u70b9\u6ee1\u8db3\u6761\u4ef6\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u70b9\u5230\u6839\u7ecf\u8fc7\u7684\u70b9\u7684 $\\min\\geq l,\\max \\leq r$\uff0c\u4e5f\u5c31\u662f\u7ecf\u8fc7\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u5904\u7406\u8fd9\u4e2a\u8be2\u95ee\uff0c\u662f\u4e00\u4e2a 2-side \u6570\u989c\u8272\u95ee\u9898\uff0c\u548c 2-side \u6570\u70b9\u95ee\u9898\u5dee\u4e0d\u591a\u4e00\u6837\u505a\u5c31\u884c\uff0c\u6309\u7167 $l$ \u4ece\u540e\u5f80\u524d\u626b\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u989c\u8272\u4e4b\u524d\u51fa\u73b0\u7684\u6700\u5c0f\u7684 $r$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u989c\u8272\u53ea\u5728\u6700\u5c0f\u7684 $r$ \u5904 $+1$ \u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\ntemplate <typename T> T Max(T x, T y) { return x > y ? x : y; }\ntemplate <typename T> T Min(T x, T y) { return x < y ? x : y; }\ntemplate <typename T>\nT& read(T& r) {\n\tr = 0; bool w = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') w = ch == '-' ? 1 : 0, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') r = r * 10 + (ch ^ 48), ch = getchar();\n\treturn r = w ? -r : r;\n}\nconst int N = 100010;\ninline int lowbit(int x) { return x & (-x); }\nint n, m, head[N], ent, tot;\nint tree[N];\nvoid modify(int x, int v) { for(; x <= n; x += lowbit(x)) tree[x] += v; }\nint query(int x) { int sumq = 0; for(; x; x -= lowbit(x)) sumq += tree[x]; return sumq; }\nint mx[N], siz[N], fa[N], col[N], col_[N], lst[N], ans[N];\nint all, rt, now;\nbool vis[N];\nstruct Edge {\n\tint next, to;\n}e[N << 1];\ninline void add(int x, int y) {\n\te[++ent].to = y; e[ent].next = head[x]; head[x] = ent;\n}\nstruct Node {\n\tint l, r, id;\n\tNode(int ll = 0, int rr = 0, int idd = 0) { l = ll; r = rr; id = idd; }\n};\nbool cmp(Node x, Node y) { return x.l == y.l ? x.id > y.id : x.l > y.l; }\nstd::vector<Node>vec1[N], vec2[N];\nvoid dfs(int x, int f, int mn, int mx) {\n\tvec1[x].push_back(Node(mn, mx, rt)); vec2[rt].push_back(Node(mn, mx, col[x]));\n\tsiz[x] = 1;\n\tfor(int i = head[x]; i; i = e[i].next) {\n\t\tint v = e[i].to; if(v == f || vis[v]) continue ;\n\t\tdfs(v, x, Min(mn, v), Max(mx, v));\n\t\tsiz[x] += siz[v];\n\t}\n}\nvoid getrt(int x, int f) {\n\tmx[x] = siz[x] = 1;\n\tfor(int i = head[x]; i; i = e[i].next) {\n\t\tint v = e[i].to; if(v == f || vis[v]) continue ;\n\t\tgetrt(v, x); siz[x] += siz[v]; mx[x] = Max(mx[x], siz[v]);\n\t} mx[x] = Max(mx[x], all - siz[x]);\n\tif(!rt || mx[x] < now) rt = x, now = mx[x];\n}\nvoid work(int x) {\n\tall = siz[x]; rt = 0; now = 0x7fffffff;\n\tgetrt(x, 0); vis[rt] = 1;\n\tdfs(x = rt, 0, rt, rt);\n\tfor(int i = head[x]; i; i = e[i].next) {\n\t\tint v = e[i].to; if(vis[v]) continue ;\n\t\twork(v);\n\t}\n}\nsigned main() { //freopen(\"in.txt\", \"r\", stdin);\n\tread(n); read(m); \n\tfor(int i = 1; i <= n; ++i) col_[i] = read(col[i]);\n\tstd::sort(col_+1, col_+n+1);\n\ttot = std::unique(col_+1, col_+n+1) - col_ - 1;\n\tfor(int i = 1; i <= n; ++i) col[i] = std::lower_bound(col_+1, col_+tot+1, col[i]) - col_;\n\tfor(int i = 1, u, v; i < n; ++i) read(u), read(v), add(u, v), add(v, u);\n\tsiz[1] = n;\n\twork(1);\n\tfor(int i = 1; i <= m; ++i) {\n\t\tint x, y, z; read(x); read(y); read(z);\n\t\tfor(auto j : vec1[z]) {\n\t\t\tif(j.l >= x && j.r <= y) {\n\t\t\t\tvec2[j.id].push_back(Node(x, y, -i));\n\t\t\t\tbreak ;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1; i <= n; ++i) {\n\t\tstd::sort(vec2[i].begin(), vec2[i].end(), cmp);\n\t\tfor(auto j : vec2[i]) {\n\t\t\tif(j.id < 0)\n\t\t\t\tans[-j.id] = query(j.r);\n\t\t\telse {\n\t\t\t\tif(!lst[j.id] || lst[j.id] > j.r) {\n\t\t\t\t\tif(lst[j.id]) modify(lst[j.id], -1);\n\t\t\t\t\tlst[j.id] = j.r;\n\t\t\t\t\tmodify(lst[j.id], 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(auto j : vec2[i])\n\t\t\tif(j.id > 0 && lst[j.id]) {\n\t\t\t\tmodify(lst[j.id], -1);\n\t\t\t\tlst[j.id] = 0;\n\t\t\t}\n\t}\n\tfor(int i = 1; i <= m; ++i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1627566211,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300d\u6d1b\u8c37P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d"
    },
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a\u6dc0\u7c89\u8d28\uff0c\u6811\u72b6\u6570\u7ec4\n\n\u5bb9\u6613\u53d1\u73b0\u6bcf\u6b21\u8be2\u95ee\u7684\u4e1c\u897f\u7b49\u4ef7\u4e8e\u67e5\u8be2\u6ee1\u8db3 **\u5230\u70b9 $x$ \u4e4b\u95f4\u7684\u8def\u5f84\u4e0a \u7684\u6240\u6709\u70b9 \u7684\u7f16\u53f7 \u7684\u6700\u5c0f\u503c\u5927\u4e8e\u7b49\u4e8e $l$\uff0c\u6700\u5927\u503c\u5c0f\u4e8e\u7b49\u4e8e $r$** \u7684\u70b9\u4e2d\u6709\u591a\u5c11\u79cd\u989c\u8272\u3002   \n\u5f62\u5f0f\u5316\u5730\uff0c\u8bbe $mn(u,v)$ \u8868\u793a $u,v$ \u95f4\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c\uff08\u5305\u62ec $u,v$\uff09\uff1b$mx(u,v)$ \u8868\u793a $u,v$ \u95f4\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7f16\u53f7\u7684\u6700\u5927\u503c\uff08\u5305\u62ec $u,v$\uff09\uff0c\u5219\u6bcf\u6b21\u67e5\u8be2\u7684   \n$$query(l,r,x)=|\\{col[p]|p\\in[1,n],l\\le mn(p,x)\\le mx(p,x)\\le r\\}|$$  \n\u7531\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u90fd\u662f\u4e00\u4e2a\u70b9\u548c\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u4e00\u4e9b\u70b9\u4e4b\u95f4\u7684\uff0c\u6240\u4ee5\u8003\u8651 **\u70b9\u5206\u6cbb\u7edf\u8ba1\u7b54\u6848**\u3002    \n\n\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u4ec5\u8ba1\u7b97\u8fc7\u5206\u6cbb\u4e2d\u5fc3\u7684\u7b54\u6848\u3002\u5bf9\u4e8e\u5f53\u524d\u5206\u6cbb\u7684\u5b50\u6811\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u70b9 $x$ \u7edf\u8ba1\u4e00\u4e2a\u5230\u5206\u6cbb\u4e2d\u5fc3 $u$ \u7684\u8def\u5f84\u4e0a\u7684\u6700\u5c0f\u548c\u6700\u5927\u7f16\u53f7\uff0c\u5206\u522b\u8bb0\u4e3a $mn_u$ \u548c $mx_u$\u3002\u90a3\u4e48\u5bf9\u4e8e\u5b50\u6811\u5185\u7684\u4e00\u4e2a\u8be2\u95ee $[l,r,x]$\uff0c\u5982\u679c $l\\leq mn_u\\leq mx_u\\leq r$\uff0c\u90a3\u4e48\u7b54\u6848\u5e94\u8be5\u52a0\u4e0a\u5f53\u524d\u5206\u6cbb\u6811\u4e0a\u6240\u6709 $mn$ \u5927\u4e8e\u7b49\u4e8e $l$ \u4e14 $mx$ \u5c0f\u4e8e\u7b49\u4e8e $r$ \u7684\u70b9\u4e2d\u7684\u989c\u8272\u6570\u3002  \n\n\u7136\u800c\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u5f53\u524d\u5206\u6cbb\u6811\u4e2d\u7edf\u8ba1\u4e86\uff0c\u7136\u540e\u53c8\u5728\u5f53\u524d\u5206\u6cbb\u6811\u7684\u67d0\u4e2a\u5b50\u6811\uff08\u5b50\u6811\u7684\u5b50\u6811\u7684\u2026\u2026\u5b50\u6811\uff09\u4e2d\u88ab\u7edf\u8ba1\u4e86\uff0c\u5c31\u91cd\u590d\u7edf\u8ba1\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u91cd\u590d\u7edf\u8ba1\u3002\u8bbe\u4e00\u5408\u6cd5\u5206\u6cbb\u6811\uff08\u6307\u5206\u6cbb\u4e2d\u5fc3\u5230\u8be2\u95ee\u70b9\u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7f16\u53f7\u90fd\u5728 $[l,r]$ \u4e4b\u95f4\uff09\u5206\u6cbb\u4e2d\u5fc3\u4e3a $u$\uff0c\u67d0\u4e2a\u6210\u529f\u7edf\u8ba1\u7684\u5b50\u6811\uff08\u5b50\u6811\u7684\u5b50\u6811\u7684\u2026\u2026\u5b50\u6811\uff09\u7684\u5206\u6cbb\u4e2d\u5fc3\u4e3a $v$\uff0c\u67e5\u8be2\u7684\u70b9\u4e3a $x$\uff0c\u7edf\u8ba1\u7684\u70b9\u4e3a $y$\u3002  \n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5fc5\u7136\u6709\u5408\u6cd5\u8def\u5f84\uff08\u6307\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7f16\u53f7\u90fd\u5728 $[l,r]$ \u4e4b\u95f4\uff09$(u,x),(v,x),(v,y)\\Rightarrow(u,x),(x,y)\\Rightarrow (u,y)$\uff0c\u6240\u4ee5\u5728 $u$ \u4e5f\u4e00\u5b9a\u80fd\u7edf\u8ba1\u5230\u3002  \n\u8fd9\u8bf4\u660e\u5bf9\u4e8e\u4efb\u4e00\u8be2\u95ee\uff0c**\u6240\u6709\u5408\u6cd5\u70b9\uff08\u80fd\u88ab\u6210\u529f\u7edf\u8ba1\u7684\u70b9\uff09\u90fd\u4f1a\u5728\u5411\u4e0b\u5206\u6cbb\u65f6\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u5408\u6cd5\u5206\u6cbb\u6811\u4e2d\u88ab\u7edf\u8ba1**\u3002  \n\u90a3\u4e48\u95ee\u9898\u5c31\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u5411\u4e0b\u5206\u6cbb\uff0c\u9047\u5230\u7b2c\u4e00\u4e2a\u5408\u6cd5\u5206\u6cbb\u6811\u5c31\u5904\u7406\u8be2\u95ee\uff0c\u4e4b\u540e\u4e0d\u518d\u5904\u7406\u5c31\u597d\u3002  \n\n\u73b0\u5728\u95ee\u9898\u53d8\u4e3a\u6c42\u5f53\u524d\u5206\u6cbb\u6811\u4e0a\u6240\u6709 $mn$ \u5927\u4e8e\u7b49\u4e8e $l$ \u4e14 $mx$ \u5c0f\u4e8e\u7b49\u4e8e $r$ \u7684\u70b9\u4e2d\u7684\u989c\u8272\u6570\u3002   \n\u7ecf\u5178\u5957\u8def\u3002\u5c06\u4fee\u6539\uff08\u70b9\uff09\u548c\u8be2\u95ee\u5747\u6309\u7167 $r$\uff08$mx$\uff09 \u6392\u5e8f\uff0c\u5c06\u884c\u6240\u6709 $mx\\leq r$ \u7684\u70b9\u5bf9\u5e94\u989c\u8272\u7684 $mn$ \u7684\u6700\u5927\u503c\u4fee\u6539\u5230\u6811\u72b6\u6570\u7ec4\u4e0a\uff0c\u7136\u540e\u5728\u6570\u72b6\u6570\u7ec4\u4e0a\u7edf\u8ba1 $\\max\\{mn\\}\\geq l$ \u7684\u989c\u8272\u6570\u3002   \n\n\u4e8e\u662f\u6211\u4eec\u5c31\u4f7f\u7528\u70b9\u5206\u6cbb\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u6ca1\u7528\u70b9\u5206\u6811\uff0c\u7a7a\u95f4 $\\mathbf O(n)$\uff0c\u6d1b\u8c37\u5df2\u77e5\u65f6\u95f4\u6700\u77ed\uff0c\u7a7a\u95f4\u6700\u5c0f\uff0c\u4ee3\u7801\u6700\u77ed\u89e3\uff08\u6d1b\u8c37\u8fd9\u4e2a\u9898\u6700\u540e\u65f6\u95f4\u5f88\u8ff7\uff0c\u597d\u50cf\u662f\u4f7f\u7528\u968f\u673a\u4e00\u4e2a\u70b9\u7684\u65f6\u95f4\uff0c\u6211\u4ea4\u4e86\u51e0\u6b21\u8dd1\u5f97\u6700\u6162\u7684\u53cd\u800c\u62ff\u4e86\u6700\u4f18\u89e3\u5c31\u79bb\u8c31\uff09\u3002  \n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nconst int N=1e5+10,logN=17,INF=0x3f3f3f3f;\nint n,m,c[N],ans[N],siz[N],son[N],sz,mxs,rt,mx[N],t[N];\nbool vis[N],bo[N];\ntypedef struct{int l,r,id;} quest;\nbool operator< (const quest &x,const quest &y){return x.r<y.r;}\ninline void update(int x,int a){for(;x&&x<=n;x+=x&-x)t[x]+=a;}\ninline int query(int x){int a=0;for(;x;x-=x&-x)a+=t[x];return a;}\nstd::vector<int>g[N];\nstd::vector<quest>qu[N],q,a;\nvoid dfsr(int u,int f=0)\n{\n\tsiz[u]=1;son[u]=0;\n\tfor(int v:g[u])if(v!=f&&!vis[v])\n\tdfsr(v,u),siz[u]+=siz[v],son[u]=std::max(son[u],siz[v]);\n\tif(mxs>(son[u]=std::max(son[u],sz-siz[u])))mxs=son[rt=u];\n}\nvoid dfsm(int u,int f,int l,int r)\n{\n\tsiz[u]=1;a.push_back((quest){l,r,c[u]});\n\tfor(auto p:qu[u])if(!bo[p.id]&&p.l<=l&&r<=p.r)bo[p.id]=true,q.push_back(p);\n\tfor(int v:g[u])if(v!=f&&!vis[v])\n\tdfsm(v,u,std::min(l,v),std::max(r,v)),siz[u]+=siz[v];\n}\nvoid dfs(int u)\n{\n\tmxs=INF;dfsr(u);vis[u=rt]=true;\n\tq.clear();a.clear();dfsm(u,0,u,u);\n\tstd::sort(q.begin(),q.end());\n\tstd::sort(a.begin(),a.end());\n\tfor(int i=0,j=0,lq=q.size(),la=a.size();i<lq;i++)\n\t{\n\t\twhile(j<la&&a[j].r<=q[i].r)\n\t\t\t(a[j].l>mx[a[j].id])&&(update(mx[a[j].id],-1),update(mx[a[j].id]=a[j].l,1),0),++j;\n\t\tans[q[i].id]=query(n)-query(q[i].l-1);\n\t}\n\tfor(auto p:a)update(mx[p.id],-1),mx[p.id]=0;\n\tfor(int v:g[u])if(!vis[v])sz=siz[v],dfs(v);\n}\nint main()\n{\n\tint i,l,r,x,y;scanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)scanf(\"%d\",&c[i]);\n\tfor(i=1;i<n;i++)scanf(\"%d%d\",&x,&y),g[x].push_back(y),g[y].push_back(x);\n\tfor(i=1;i<=m;i++)scanf(\"%d%d%d\",&l,&r,&x),qu[x].push_back((quest){l,r,i});\n\tsz=n;dfs(1);for(i=1;i<=m;i++)printf(\"%d\\n\",ans[i]);return 0;\n}\n```",
        "postTime": 1617451738,
        "uid": 35137,
        "name": "a___",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d"
    },
    {
        "content": "\u7b97\u662f\u9898\u89e3\u91cc\u9762\u7684\u65b0\u89e3\u6cd5\u963f\u3002\u4e0b\u9762\u6709\u4e00\u4e9b\u5e9f\u8bdd\uff0c\u53ef\u4ee5\u8df3\u8fc7\u3002\n\n\u6700\u8fd1\u51e0\u5929\u81ea\u95ed\u4e09\u8fde\u3002\u96ea\u4e43\u8f93\u7ed9\u857e\u59c6\u4e00\u70b9\u70b9\uff0c\u5927\u8001\u5e08\u5bf9\u6298\u68d2\u4e5f\u8f93\u4e86\u3002\u4e3a\u4ec0\u4e48\u6298\u68d2\u8fd9\u4e48\u731b\u5462\uff01\uff01\u867d\u7136\u786e\u5b9e\u6709\u70b9\u53ef\u7231\u3002\n\n\u7136\u540e\u4eca\u5929\u4e0b\u5348\u53bb\u770b\u7535\u5f71\uff0c\u7279\u6548\u5f88\u725b\u903c\u6211\u88ab\u6485\u6655\u4e86\uff0c\u5728\u6655\u6b7b\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u8fd9\u9898\u6dc0\u7c89\u8d28\u7684\u505a\u6cd5\u4e5f\u5f88\u725b\u903c\uff0c\u5c31\u662f\u4e0d\u592a\u5bf9\u5934\u3002\u600e\u4e48\u7528\u5947\u602a\u89e3\u6cd5\u5462\uff01\uff01\u4e3a\u4ec0\u4e48\u9898\u89e3\u5168\u662f\u6dc0\u7c89\u8d28\u5462\uff01\uff01\uff01\n\n\u7136\u540e\u53d1\u73b0\u53ef\u4ee5\u7528\u8d85\u8d85\u7b80\u5355\u7684\u975e\u5e38\u5e38\u89c4\u89e3\u6cd5\u3002\n\n\u5982\u679c\u8bbe\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u4e3a\u4e24\u7aef\u70b9\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\u6700\u5c0f\u503c\u7b49\u4ef7\u4e8e\u70b9\u6743\u6700\u5c0f\u503c\u3002\u6700\u5927\u503c\u540c\u7406\u3002\n\n\u90a3\u4e48\u5c31\u628a\u4e24\u79cd\u8fb9\u6743\u5efa\u91cd\u6784\u6811\uff0c\u53d1\u73b0\u5c31\u662f\u7b49\u4ef7\u4e8e\u7ed9\u4f60\u4e24\u68f5\u6811\uff0c\u6bcf\u6b21\u7ed9\u4f60\u4e24\u4e2a\u5b50\u6811\u6c42\u5176\u4ea4\u7684\u989c\u8272\u6570~~\u8fd9\u4e0d\u5c31 dfn \u62cd\u4e0b\u6765\u7136\u540e\u56de\u6eda\u83ab\u961f\u8dd1\u4e8c\u7ef4\u5206\u5757\u5417\uff01\uff01\uff01~~\n\n\u76f4\u63a5\u5bf9\u4e00\u68f5\u6811\u8dd1 dsu on tree\uff0c\u7136\u540e\u5c31\u662f\u652f\u6301 $O(n\\log n)$ \u6b21\u63d2\u5165\u5220\u9664\u70b9\uff0c\u6c42\u5b50\u6811\u4e2d\u7684\u989c\u8272\u6570\u3002\u8fd9\u4e2a\u5f88\u5178\u554a\uff0c\u8003\u8651\u6bcf\u79cd\u989c\u8272\u7684\u8d21\u732e\u5c31\u662f\u8fd9\u79cd\u989c\u8272\u7684\u70b9\u5230\u6839\u7684\u94fe\u5e76\uff0c\u76f4\u63a5\u5bf9\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4 set \u6309 dfn \u6392\u5e8f\uff0c\u63d2\u5165\u6bcf\u4e2a\u70b9\u7136\u540e\u628a\u76f8\u90bb\u70b9\u7684 lca \u7684\u8d21\u732e\u62b5\u6d88\u6389\u3002\u5176\u5b9e\u5c31\u662f $O(n\\log n)$ \u6b21\u94fe\u52a0\u5355\u70b9\u6c42\u503c\u3002\u76f4\u63a5\u6811\u72b6\u6570\u7ec4 $O(n\\log^2 n)$ \u641e\u5b9a\u3002\n\n\u6211\u5f88\u4e45\u6ca1\u5199\u4ee3\u7801\u4e86\u7136\u540e\u5199\u4e86\u4e00\u5c0f\u4f1a\u4e00\u53d1\u8fc7\u4e86\uff0c\u8bf4\u660e\u4ee3\u7801\u5f88\u597d\u5199\u554a\uff01\uff01\u7136\u800c\u91cd\u6784\u6811\u7684\u90e8\u5206\u76f4\u63a5\u628a\u9694\u58c1 werewolf \u7684\u4ee3\u7801\u8d3a\u8fc7\u6765\u7684\u3002\u7a7a\u95f4\u5199\u7684\u500d\u589e  $O(n\\log n)$\uff0c\u5176\u5b9e\u7ebf\u6027\u5f88\u597d\u641e\u3002\n\n\u8fd9\u4e2a\u5e94\u8be5\u505a\u4e0d\u4e86\u4e00\u822c\u56fe\uff0c\u56e0\u4e3a\u6811\u8def\u5f84\u552f\u4e00\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define Yukinoshita namespace\n#define Yukino std\nusing Yukinoshita Yukino;\nint read()\n{\n\tint s=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n\treturn s;\n}\nconst int mxn=2e5+5;\nstruct edge\n{\n\tint x,y,v;\n\tfriend bool operator <(const edge &x,const edge &y)\n\t{\n\t\treturn x.v<y.v;\n\t}\n}a[mxn];\nint c[mxn],f[mxn];\nint v[mxn],v2[mxn];\nint t[mxn][2],t2[mxn][2];\nint fa[mxn][19],fa2[mxn][19];\nint dfnl[mxn],dfnr[mxn],size[mxn],dep[mxn];\nint find(int x)\n{\n\treturn f[x]==x?x:f[x]=find(f[x]);\n}\nint n,dcnt;\nvector<pair<int,int> > q[mxn];\nint ans[mxn];\nstruct bit\n{\n\t#define lowbit(x) (x&-x)\n\tint t[mxn];\n\tvoid add(int x,int v)\n\t{\n\t\tif(!x) return;\n\t\tfor(;x<n*2;x+=lowbit(x))\n\t\t\tt[x]+=v;\n\t}\n\tint ask(int x)\n\t{\n\t\tint s=0;\n\t\tfor(;x;x-=lowbit(x))\n\t\t\ts+=t[x];\n\t\treturn s;\n\t}\n}T;\nvoid dfs(int d,int f,int t[][2],int fa[][19])\n{\n\tif(!d) return;\n\tfa[d][0]=f;\n\tfor(int i=1;i<=18;i++)\n\t\tfa[d][i]=fa[fa[d][i-1]][i-1];\n\tdfs(t[d][0],d,t,fa),dfs(t[d][1],d,t,fa);\n}\nint asklca(int x,int y)\n{\n\tif(!x||!y) return 0;\n    if(x==y) return x;\n    if(dep[x]>dep[y]) swap(x,y);\n    int i;\n    for(i=16;i>=0;i--)\n        if(dep[fa2[y][i]]>=dep[x])\n            y=fa2[y][i];  \n    if(x==y) return x;\n    for(i=16;i>=0;i--)\n        if(fa2[x][i]!=fa2[y][i])\n            x=fa2[x][i],y=fa2[y][i];\n    return fa2[x][0];\n}\nvoid build(int t[][2],int fa[][19],int v[],bool fl)\n{\n\tsort(a+1,a+n);\n\tif(fl) reverse(a+1,a+n);\n\tint i,fx,fy,cnt=n;\n\tdcnt=0;\n\tfor(i=1;i<n*2;i++)\n\t\tf[i]=i;\n\tfor(i=1;i<n;i++)\n\t\tif((fx=find(a[i].x))!=(fy=find(a[i].y)))\n\t\t{\n\t\t\tf[fx]=f[fy]=++cnt;\n\t\t\tv[cnt]=a[i].v;\n\t\t\tt[cnt][0]=fx,t[cnt][1]=fy;\n\t\t}\n\tdfs(cnt,0,t,fa);\n}\nvoid dfs1(int d)\n{\n\tif(!d) return;\n\tsize[d]=d<=n;\n\tdfs1(t[d][0]),dfs1(t[d][1]);\n\tsize[d]+=size[t[d][0]]+size[t[d][1]];\n}\nvoid dfs2(int d,int deep)\n{\n\tif(!d) return;\n\tdfnl[d]=++dcnt,dep[d]=deep;\n\tdfs2(t2[d][0],deep+1),dfs2(t2[d][1],deep+1);\n\tdfnr[d]=dcnt;\n}\nvoid ask(int id,int x,int L,int R)\n{\n\tint i,y=x;\n\tfor(i=18;i>=0;i--)\n\t\tif(v[fa[y][i]]<=R)\n\t\t\ty=fa[y][i];\t\n\tfor(i=18;i>=0;i--)\n\t\tif(v2[fa2[x][i]]>=L)\n\t\t\tx=fa2[x][i];\n\tq[y].push_back({x,id});\n}\nset<pair<int,int> > st[mxn]; \nvoid insert(int d)\n{\n\tint pre=(--st[c[d]].lower_bound({dfnl[d],d}))->second,nxt=st[c[d]].lower_bound({dfnl[d],d})->second;\n\tT.add(dfnl[d],1);\n\tT.add(dfnl[asklca(d,pre)],-1);\n\tT.add(dfnl[asklca(d,nxt)],-1);\n\tT.add(dfnl[asklca(pre,nxt)],1);\n\tst[c[d]].insert({dfnl[d],d});\n}\nvoid erase(int d)\n{\n\tst[c[d]].erase({dfnl[d],d});\n\tint pre=(--st[c[d]].lower_bound({dfnl[d],d}))->second,nxt=st[c[d]].lower_bound({dfnl[d],d})->second;\n\tT.add(dfnl[d],-1);\n\tT.add(dfnl[asklca(d,pre)],1);\n\tT.add(dfnl[asklca(d,nxt)],1);\n\tT.add(dfnl[asklca(pre,nxt)],-1);\n}\nvoid add(int d,bool fl)\n{\n\tif(!d) return;\n\tif(d<=n)\n\t\tfl?insert(d):erase(d);\n\tadd(t[d][0],fl),add(t[d][1],fl);\n}\nvoid solve(int d)\n{\n\tif(!d) return;\n\tif(size[t[d][0]]>size[t[d][1]]) swap(t[d][0],t[d][1]);\n\tsolve(t[d][0]),add(t[d][0],0);\n\tsolve(t[d][1]),add(t[d][0],1);\n\tif(d<=n)\n\t\tinsert(d);\n\tfor(int i=0;i<q[d].size();i++)\n\t\tans[q[d][i].second]=T.ask(dfnr[q[d][i].first])-T.ask(dfnl[q[d][i].first]-1);\n}\nint main()\n{\n\tint q,i,l,r;\n\tn=read(),q=read();\n\tfor(i=1;i<=n;i++)\n\t\tc[i]=read();\n\tfor(i=1;i<n;i++)\n\t\ta[i].x=read(),a[i].y=read(),a[i].v=max(a[i].x,a[i].y);\n\tv[0]=2e9,v2[0]=-2e9;\n\tbuild(t,fa,v,0);\n\tfor(i=1;i<n;i++)\n\t\ta[i].v=min(a[i].x,a[i].y);\n\tbuild(t2,fa2,v2,1);\n\tdfs1(n*2-1),dfs2(n*2-1,0);\n\tfor(i=1;i<=n;i++)\n\t\tst[i].insert({0,0}),st[i].insert({INT_MAX,0});\n\tfor(i=1;i<=q;i++)\n\t\tl=read(),r=read(),ask(i,read(),l,r);\n\tsolve(n*2-1);\n\tfor(i=1;i<=q;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n} \n```\n",
        "postTime": 1674485577,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d"
    },
    {
        "content": "## \u524d\u8a00\n\u8fd9\u4e2a\u9898\u592a\u9ad8\u4e86\uff01!1\n## Part 1\n\u8003\u8651\u5982\u679c\u6811\u662f $1\\sim n$ \u7684\u94fe\uff0c$[l,r]$ \u4e00\u5b9a\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u5185\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u6570\u989c\u8272\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u3002\n\n\u8003\u8651\u4e3a\u4ec0\u4e48\u53ef\u80fd\u6709\u4e9b\u70b9\u548c $x$ \u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\uff0c\u663e\u7136\u90a3\u662f\u5b83\u548c $x$ \u7684\u8def\u5f84\u4e0a\u6709 $<l$ \u6216\u8005 $>r$ \u7684\u70b9\u3002\n\n\u6362\u4e2a\u66f4\u7b80\u6d01\u7684\u5f62\u5f0f\uff1a\u6211\u4eec\u8981\u6c42\u7684\u5373\u6240\u6709\u548c $x$ \u8def\u5f84\u4e0a\u70b9\u6743 $l\\leq\\min,\\max\\leq r$ \u7684\u70b9\u7684\u989c\u8272\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u500d\u589e\u5f80\u4e0a\u8df3\u8df3\u5230\u8fd9\u4e2a\u8fde\u901a\u5757\u6700\u9876\u4e0a\u7684\u70b9\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ea\u9700\u8981\u7edf\u8ba1\u5b50\u6811\u7684\u70b9\u5373\u53ef\u3002\n\n\u7136\u800c\u5b50\u6811\u7684\u5927\u5c0f\u662f $O(n)$ \u7684\u554a\u2026\u2026\u6709\u6ca1\u6709\u4ec0\u4e48\u80fd\u8ba9\u6811**\u5747\u8861**\u4e00\u70b9\u7684\u64cd\u4f5c\u5462\uff1f\n## Part 2\n\u60f3\u5230\u5747\u8861\uff0c\u6211\u556a\u7684\u4e00\u4e0b\u5c31\u8d3a\u4e86\u4e2a\u70b9\u5206\u6811\uff0c\u5f88\u5feb\u554a\uff01\n\n* Conclusion\uff1a\u4e00\u4e2a\u6811\u4e0a\u8fde\u901a\u5757\u4e2d\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u5176\u4f59\u6240\u6709\u70b9\u90fd\u5728\u5b83\u70b9\u5206\u6811\u4e0a\u7684\u5b50\u6811\u4e2d\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u5176\u5b9e\u5f88\u597d\u8bc1\u660e\uff0c\u56e0\u4e3a\u5982\u679c\u6240\u6709\u70b9\u7684 LCA \u4e0d\u5728\u8fd9\u4e2a\u8fde\u901a\u5757\u91cc\u9762\uff0c\u5219\u4e24\u68f5\u5b50\u6811\u91cc\u7684\u70b9\u662f\u65e0\u6cd5\u63a5\u4e0a\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u66b4\u529b\u8df3\u5230\u8fd9\u4e2a\u8fde\u901a\u5757\u5728\u70b9\u5206\u6811\u4e0a\u6700\u9876\u4e0a\u7684\u70b9\uff08\u6ce8\u610f\u8fd9\u91cc\u8981\u8df3\u5b8c\uff0c\u53cd\u6b63\u6df1\u5ea6\u662f $O(\\log n)$ \u7684\uff09\uff0c\u7edf\u8ba1\u5b50\u6811\u7684\u70b9\u5373\u53ef\u3002\u6b64\u65f6\uff0c\u867d\u7136\u5b50\u6811\u5927\u5c0f\u8fd8\u662f $O(n)$ \u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5206\u522b\u5904\u7406\uff0c\u5b50\u6811\u5927\u5c0f\u5c31\u662f\u5747\u644a $O(n\\log n)$ \u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u6211\u4eec\u8981\u8df3 $O(\\log)$ \u6b21\uff0c\u5224\u5b9a\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u4f7f\u7528\u6811\u94fe\u5256\u5206\u52a0 st \u8868\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(q\\log^2 n)$\u3002\n## Another implementation\n\u4e8b\u5b9e\u4e0a\u66b4\u529b\u8df3 $O(\\log n)$ \u6b21\u5199\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u56e0\u4e3a\u4f60\u8981\u591a\u5199\u4e00\u4e2a\u6811\u5256\u548c st \u8868\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u8be2\u95ee\u6302\u5728 $x$ \u4e0a\uff0c\u76f4\u63a5\u8fdb\u884c\u4e00\u6b21\u70b9\u5206\u6cbb\uff0c\u6bcf\u6b21\u80fd\u53d6\u5230\u7684\u70b9\u6253\u4e0a\u6807\u8bb0\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log n+q)$ \u7684\u3002\n## Part 3\n\u4e8e\u662f\u95ee\u9898\u53d8\u4e3a\u4e86\u7ed9 $N$ \u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709 $\\min,\\max$ \u548c\u989c\u8272\uff0c\u6709 $Q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u53eb\u4f60\u7b97\u51fa $l\\leq\\min,\\max\\leq r$ \u7684\u70b9\u7684\u989c\u8272\u6570\u3002\n\n\u4e8e\u662f\u5957\u8def\u626b\u63cf\u7ebf\u626b $\\max$ \u7ef4\u62a4\u6240\u6709 $r\\leq\\max$ \u7684 $l$\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\u7ef4\u62a4\u6700\u5c0f\u7684 $l$ \u5373\u53ef\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $(N+Q)\\log N$\u3002\n\n\u7531\u4e8e $\\sum N\\leq n\\log n,\\sum Q\\leq q$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log^2n+q\\log n)$\u3002",
        "postTime": 1620456239,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5311"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5311)\n\n## \u601d\u8def\u7b80\u8ff0\n\n\u5728\u7ebf\u662f\u56f0\u96be\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u79bb\u7ebf\uff0c\u628a\u6bcf\u6b21\u8be2\u95ee\u653e\u5728\u7ed9\u5b9a\u7684 $x$ \u4e0a\u3002\n\n\u6c42\u5c06\u6811\u4e2d\u7f16\u53f7\u5728 $[l,r]$ \u5185\u7684\u6240\u6709\u8282\u70b9\u4fdd\u7559\uff0c$x$ \u6240\u5728\u8fde\u901a\u5757\u4e2d\u989c\u8272\u79cd\u7c7b\u6570\u3002\n\n\u53ef\u4ee5\u8f6c\u5316\u4e3a\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u7f16\u53f7\u5fc5\u987b\u5728 $[l,r]$ \u4e4b\u95f4\uff0c$x$ \u6240\u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\u7684\u989c\u8272\u79cd\u6570\u3002\n\n---\n\n\u5148\u60f3\u4e00\u4e2a\u66b4\u529b\uff1a\u4ee5\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u7684 $x$ \u4f5c\u4e3a\u6811\u6839\u904d\u5386\u5168\u6811\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5230 $x$ \u7684\u8def\u5f84\u6ee1\u8db3\u6761\u4ef6\uff0c\u7ed9\u7b54\u6848\u8d21\u732e $1$\u3002\n\n\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u7ed3\u8bba\uff1a\u5982\u679c\u5bf9\u4e8e\u8be2\u95ee\u7ed9\u5b9a\u7684 $x$ \u80fd\u5728\u6ee1\u8db3\u8be2\u95ee\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\u5230\u8fbe\u70b9 $y$\uff0c\u90a3\u4e48\u8be2\u95ee $(l,r,x)$ \u7b49\u4ef7\u4e8e $(l,r,y)$\u3002\n\n---\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u70b9\u5206\u6cbb\u3002\n\n\u4ee4 $R$ \u8868\u793a\u5f53\u524d\u70b9\u5206\u6cbb\u4e2d\u5fc3\u3002\n\n\u8bbf\u95ee\u5230\u4e00\u4e2a\u70b9\uff0c\u5982\u679c $R$ \u5230\u8be5\u70b9\u7684\u8def\u5f84\u6ee1\u8db3\u8be2\u95ee\u7684\u8981\u6c42\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u6b21\u7b54\u6848\u7edf\u8ba1\u4e2d\u7b97\u51fa\u8be5\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u8be2\u95ee delete\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u628a\u8be2\u95ee $(l,r,x)\\rightarrow (l,r,R)$\u3002\n\n\u7136\u540e\u5c31\u5bf9\u4e8e\u5f53\u524d\u5206\u6cbb\u7684\u6574\u68f5\u6811\u7684\u6bcf\u4e2a\u70b9\uff0c\u7ef4\u62a4 $(min,max,color)$ \u8fd9\u4e2a\u4e09\u5143\u7ec4\u3002\n\n$max$ \u8868\u793a $R$ \u5230\u8be5\u70b9\u7684\u8def\u5f84\u4e0a\u7f16\u53f7\u7684\u6700\u5927\u503c\u3002\n\n$min$ \u8868\u793a $R$ \u5230\u8be5\u70b9\u7684\u8def\u5f84\u4e0a\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u3002\n\n$color$ \u8868\u793a\u8be5\u70b9\u7684\u989c\u8272\u3002\n\n---\n\n\u90a3\u4e48\u5c31\u53d8\u6210\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff1a\n\n\u7ed9\u5b9a $n$ \u4e2a\u96c6\u5408\u3002\n\n\u6709\u4e00\u4e9b\u4fee\u6539\u64cd\u4f5c\uff0c\u5728 $[min,max]$ \u7684\u96c6\u5408\u4e2d\u52a0\u5165 $color$\u3002\n\n\u4fee\u6539\u540e\u6709\u4e00\u4e9b\u8be2\u95ee\uff0c\u6c42 $[l,r]$ \u7684\u6240\u6709\u96c6\u5408\u7684\u5e76\u96c6\u7684\u5927\u5c0f\u3002\n\n\u8054\u60f3\u5230 [HH\u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972)\uff0c\u53d1\u73b0\u4e0d\u8fc7\u662f\u628a\u52a0\u5165\u989c\u8272\u7684\u64cd\u4f5c\u4ece\u5355\u70b9\u6539\u6210\u4e86\u533a\u95f4\u3002\n\n\u5957\u8def\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u5c11\u4e86\u53f3\u7aef\u70b9\u7684\u9650\u5236\u3002\n\n\u7136\u540e\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u989c\u8272\u7684\u4fee\u6539\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u7684\u6700\u5927\u503c\u3002\n\n\u6bcf\u6b21\u5904\u7406\u4fee\u6539\u65f6\u5355\u70b9\u4fee\uff0c\u5904\u7406\u8be2\u95ee\u65f6\u533a\u95f4\u67e5\u8be2\u3002\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n## \u4e11\u964b\u306e\u4ee3\u7801\n\n\u4ee3\u7801\u6bd4\u6211\u6e05\u695a\u3002\n[click here](https://www.luogu.com.cn/paste/gj63d84u)\n",
        "postTime": 1659851565,
        "uid": 312306,
        "name": "LJ07",
        "ccfLevel": 0,
        "title": "[Solution]P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d"
    },
    {
        "content": "\u7b2c\u4e00\u9053 $\\text{Ynoi}$\uff0c\u540c\u65f6\u4e5f\u662f\u6211\u7684 $\\text{1000 AC}$\u3002\n\n\u5c06\u9898\u76ee\u8f6c\u5316\uff0c\u5373\u6c42\u6709\u591a\u5c11\u4e2a\u70b9\u4e0e $x$ \u7684\u8def\u5f84\u4e0a\u7684\u7684\u70b9\u7684\u7f16\u53f7\u5728 $l,r$ \u8303\u56f4\u5185\u3002\n\n\u8003\u8651\u70b9\u5206\u6cbb/\u70b9\u5206\u6811\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u6cbb\u4e2d\u5fc3\uff0c\u8bb0\u5f55\u4e0b\u6765\u6bcf\u4e2a\u70b9\u5230\u5176\u8def\u5f84\u4e0a\u70b9\u7684\u7f16\u53f7\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\n\n\u5bf9\u4e8e\u904d\u5386\u5230\u7684\u8be2\u95ee\u70b9 $x$\uff0c\u5982\u679c\u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\u5728\u8be2\u95ee\u7684\u6700\u5927\u503c\u4ee5\u5185\uff0c\u6700\u5c0f\u503c\u5728\u8be2\u95ee\u7684\u6700\u5c0f\u503c\u4ee5\u5185\uff0c\u90a3\u4e48\u70b9 $x$ \u4e00\u5b9a\u548c\u5206\u6cbb\u4e2d\u5fc3\u8054\u901a\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u5e94\u8be5\u7edf\u8ba1\u5b8c\u5168\uff0c\u90a3\u4e48\u627e\u5230\u6700\u5927\u7684\u4e00\u4e2a\u80fd\u591f\u548c $x$ \u8054\u901a\u7684\u5206\u6cbb\u4e2d\u5fc3 $F_{max}$ \u7edf\u8ba1\u5373\u53ef\u3002\u56e0\u4e3a\u5982\u679c\u9009\u62e9\u4e00\u4e2a\u66f4\u5c0f\u7684\u5305\u542b $x$ \u7684\u5206\u6cbb\u4e2d\u5fc3 $F^\\prime$\uff0c\u7531\u4e8e\u70b9\u5206\u6811\u7684\u6027\u8d28\uff0c\u4e0d\u96be\u5f97\u5230 $F_{max}$ \u4e0e $F^\\prime$ \u4e00\u5b9a\u662f\u5305\u542b\u5173\u7cfb\u3002\u7531\u4e8e $F_{max}$ \u662f\u6700\u5927\u7684\u5305\u542b $x$ \u7684\u5206\u6cbb\u4e2d\u5fc3\uff0c\u90a3\u4e48 $F_{max}$ \u4e00\u5b9a\u5305\u542b $F^\\prime$\uff0c\u5373\u53ea\u6709\u5728 $F_{max}$ \u5904\u7edf\u8ba1\u7b54\u6848\u80fd\u591f\u4e0d\u91cd\u4e0d\u6f0f\u5730\u7edf\u8ba1\u5b8c\u5168\u3002\n\n\u8003\u8651\u5df2\u7ecf\u627e\u5230\u4e86\u8fd9\u4e2a\u5206\u6cbb\u4e2d\u5fc3\uff0c\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u8bbe\u8be2\u95ee\u7684\u533a\u95f4\u4e3a $l,r$\uff0c\u8fd9\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u91cc\u4e00\u4e2a\u70b9\u7684\u6700\u5927\u6700\u5c0f\u503c\u4e3a $L,R$\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u88ab\u7edf\u8ba1\uff0c\u5f53\u4e14\u4ec5\u5f53 $l \\le L \\le R \\le r$\u3002\n\n\u5373\u4e00\u4e2a\u4e8c\u7ef4\u6570\u70b9\u95ee\u9898\uff0c\u5c06\u4e00\u4e2a\u7aef\u70b9\u6392\u5e8f\uff0c\u53e6\u4e00\u4e2a\u7aef\u70b9\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u7531\u4e8e\u70b9\u5206\u6cbb\u662f\u4ece\u4e0a\u5411\u4e0b\u8fdb\u884c\u7684\uff0c\u5219**\u7b2c\u4e00\u6b21\u5305\u542b**\u70b9 $x$ \u65f6**\u4e00\u5b9a\u662f\u6700\u5927**\u7684\u3002\u5bf9\u4e8e\u8fd9\u4e00\u90e8\u5206\u7684\u4f53\u73b0\u8be6\u89c1\u4ee3\u7801\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n$)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace IO{\n    template<typename T>inline void read(T &x){\n        x=0;\n        char ch=getchar();\n        bool flag=0;\n        while(ch<'0'||ch>'9') flag=flag||(ch=='-'),ch=getchar();\n        while(ch>='0'&&ch<='9') x=x*10+(ch^'0'),ch=getchar();\n        if(ch!='.'){\n            x=flag?-x:x;\n            return;\n        }\n        double Base=0.1;\n        while(ch<'0'||ch>'9') ch=getchar();\n        while(ch>='0'&&ch<='9') x=x+Base*(ch^'0'),Base/=10.0,ch=getchar();\n        x=flag?-x:x;\n    }\n    template<typename T>void prt(T x){\n        if(x>9) prt(x/10);\n        putchar(x%10+'0');\n    }\n    template<typename T>inline void put(char ch,T x){\n        if(x<0) putchar('-'),x=-x;\n        prt(x);\n        putchar(ch);\n    }\n    const int DM[10]={1,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000};\n    inline void putd(char ch,double x,int w){\n        if(x<0) putchar('-'),x=-x;\n        if(!w){\n            put(ch,(int)(x+0.5));\n            return;\n        }\n        int prex=(int)x;\n        x-=(int)x;\n        x*=DM[w];\n        x+=0.5;\n        int nowx=(int)x,now=0;\n        if(nowx>=DM[w]) nowx=0,prex++;\n        put('.',prex);\n        int xx=nowx;\n        if(!xx) now=1;\n        else while(xx) xx/=10,now++;\n        now=w-now;\n        while(now--) putchar('0');\n        put(ch,nowx);\n    }\n    inline void putstr(string s){\n        for(int i=0;i<s.length();i++) putchar(s[i]);\n    }\n}\nusing namespace IO;\n#define N 100005\n#define lowbit(x) (x&-x)\nint n,m,w[N],head[N],cnt;\nstruct edge{\n    int v,nxt;\n}e[N<<1];\nstruct que{\n    int l,r,id;\n    que(){}\n    que(int _l,int _r,int _id){\n        l=_l,r=_r,id=_id;   \n    }\n    inline bool operator<(const que &b)const{//\u4e8c\u4f4d\u6570\u70b9\uff0c\u5c06\u8be2\u95ee\u6392\u5e8f\n        return r<b.r;\n    }\n};\nint c[N],siz[N],ans[N],lst[N],mx[N],rt;\nbool vis[N],book[N];\n//q\u5b58\u50a8\u8fd9\u4e2a\u70b9\u7684\u8be2\u95ee\uff0cA\u5b58\u50a8\u5b50\u8282\u70b9\uff0cB\u5b58\u50a8\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\u5185\u7684\u8be2\u95ee\nvector<que> q[N],A,B;\ninline void add(int u,int v){\n    e[++cnt]=(edge){v,head[u]},head[u]=cnt;\n}\ninline void update(int x,int v){//\u6811\u72b6\u6570\u7ec4\u90e8\u5206\n    if(!x) return;\n    for(;x<=n;x+=lowbit(x)) c[x]+=v;\n}\ninline int query(int x){\n    int res=0;\n    for(;x;x^=lowbit(x)) res+=c[x];\n    return res;\n}\nvoid get_wc(int x,int fa,int sum){//\u5bfb\u627e\u91cd\u5fc3\n    siz[x]=1,mx[x]=0;\n    for(int i=head[x];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(!vis[v]&&v!=fa){\n            get_wc(v,x,sum);\n            mx[x]=max(mx[x],siz[v]);\n            siz[x]+=siz[v];\n        }\n    }\n    mx[x]=max(mx[x],sum-mx[x]);\n    if(mx[x]<=mx[rt]) rt=x;\n}\nvoid dfs(int x,int fa,int l,int r){//\u5c06\u8fd9\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u5185\u7684\u70b9\u5168\u90e8\u653e\u8fdb\u6765\n    siz[x]=1;\n    A.emplace_back(que(l,r,w[x]));\n    for(auto now:q[x])\n        if(!book[now.id]&&now.l<=l&&now.r>=r) book[now.id]=1,B.emplace_back(now);//B\u5b58\u50a8\u67e5\u8be2\u4fe1\u606f\uff0cbook\u5b58\u50a8\u8fd9\u4e2a\u8be2\u95ee\u662f\u5426\u5df2\u7ecf\u5904\u7406\u3002\u7531\u4e8e\u4ece\u4e0a\u5411\u4e0b\u9012\u5f52\uff0c\u53ef\u80fd\u591a\u6b21\u9047\u5230\u8fd9\u4e2a\u8be2\u95ee\u3002\n    for(int i=head[x];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(!vis[v]&&v!=fa) dfs(v,x,min(l,v),max(r,v)),siz[x]+=siz[v];\n    }\n}\ninline void devide(int x){//\u70b9\u5206\u6cbb\u6838\u5fc3\n    vis[x]=1;//\u6807\u8bb0\n    A.clear(),B.clear();\n    dfs(x,0,x,x);//\u83b7\u53d6\u70b9\u5206\u6811\u5185\u4fe1\u606f\n    sort(A.begin(),A.end()),sort(B.begin(),B.end());//\u8fdb\u884c\u6392\u5e8f\uff0c\u65b9\u4fbf\u4e8c\u7ef4\u6570\u70b9\n    for(int i=0,j=0;i<B.size();i++){//\u679a\u4e3e\u6bcf\u4e2a\u8be2\u95ee\n        while(j<A.size()&&A[j].r<=B[i].r){//\u5c06\u53ef\u4ee5\u5165\u961f\u7684\u5168\u90e8\u6254\u8fdb\u53bb\n            if(A[j].l>lst[A[j].id]) update(lst[A[j].id],-1),update(lst[A[j].id]=A[j].l,1);//\u540c\u4e00\u79cd\u989c\u8272\u53ea\u80fd\u7559\u4e00\u4e2a\uff0c\u6240\u4ee5\u9009\u62e9\u4e00\u4e2a\u6700\u6709\u53ef\u80fd\u88ab\u7edf\u8ba1\u7684\u70b9\n            j++;\n        }\n        ans[B[i].id]=query(n)-query(B[i].l-1);\n    }\n    for(auto now:A) update(lst[now.id],-1),lst[now.id]=0;\n    for(int i=head[x];i;i=e[i].nxt){//\u8fdb\u884c\u4e0b\u4e00\u5c42\u5206\u6cbb\n        int v=e[i].v;\n        if(!vis[v]){\n        \trt=0;\n            get_wc(v,x,siz[v]);\n            devide(rt);\n        }\n    }\n}\nint main(){\n    read(n),read(m);\n    mx[0]=n+1;\n    for(int i=1;i<=n;i++) read(w[i]);\n    for(int i=1,u,v;i<n;i++)\n        read(u),read(v),add(u,v),add(v,u);\n    for(int i=1,l,r,d;i<=m;i++)\n        read(l),read(r),read(d),q[d].emplace_back(que(l,r,i));//\u5728d\u70b9\u5b58\u50a8\u8be2\u95ee\n    get_wc(1,0,n);\n    devide(rt);\n    for(int i=1;i<=m;i++) put('\\n',ans[i]);\n    return 0;\n}\n```\n",
        "postTime": 1638589437,
        "uid": 172370,
        "name": "fzj2007",
        "ccfLevel": 0,
        "title": "P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d"
    },
    {
        "content": "\u6bcf\u6b21\u8be2\u95ee\u662f\u5173\u4e8e $x$ \u6240\u5728\u7684\u8fde\u901a\u5757\uff0c\u6240\u4ee5\u8003\u8651\u7528\u70b9\u5206\u6811\u6765\u89e3\u51b3\u672c\u9898\u3002\n\n\u70b9\u5206\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u5b50\u6811\uff0c\u90fd\u662f\u539f\u6811\u4e2d\u7684\u4e00\u4e2a\u8fde\u901a\u5757\u3002\u8be2\u95ee\u4e2d\u7ed9\u5b9a $x$ \u548c\u533a\u95f4 $[l,r]$\uff0c\u5176\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\u539f\u6811\u7684\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u70b9\u5206\u6811\u4e0a\u627e\u5230\u6700\u5927\u7684\u4e00\u4e2a\u5b50\u6811\u5305\u542b\u8be5\u8fde\u901a\u5757\uff0c\u7edf\u8ba1\u5176\u5185\u90e8\u5408\u6cd5\u70b9\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u9996\u5148\u5904\u7406\u51fa\u70b9\u5206\u6811\u4e0a\u6bcf\u4e2a\u70b9\u5728\u539f\u6811\u4e0a\u5230\u70b9\u5206\u6811\u6839\u8282\u70b9\u7684\u94fe\u4e0a\u6240\u6709\u8282\u70b9\u8def\u5f84\u7ecf\u8fc7\u8282\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5728 $x$ \u5230\u6839\u8282\u70b9\u7684\u94fe\u4e0a\u627e\u5230\u6df1\u5ea6\u6700\u6d45\u7684\u4e00\u4e2a\u70b9\uff0c\u4e14\u539f\u6811\u4e0a $x$ \u5230\u5176\u8def\u5f84\u7ecf\u8fc7\u8282\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u5728\u533a\u95f4 $[l,r]$ \u5185\uff0c\u8fd9\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u5b50\u6811\u5c31\u5305\u542b\u4e86\u8be5\u8be2\u95ee\u6240\u5bf9\u5e94\u7684\u8fde\u901a\u5757\uff0c\u5c06\u8be2\u95ee\u6302\u5230\u8fd9\u4e2a\u8282\u70b9\u4e0a\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u8be2\u95ee\uff0c$x$ \u548c\u627e\u5230\u7684\u8fd9\u4e2a\u8282\u70b9\u662f\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u7edf\u8ba1\u5b50\u6811\u5185\u6709\u591a\u5c11\u8282\u70b9\u662f\u548c\u8be5\u8282\u70b9\u8fde\u901a\uff0c\u5373\u5176\u5b50\u6811\u5185\u6709\u591a\u5c11\u4e2a\u70b9\u5728\u539f\u6811\u4e0a\u5230\u8be5\u8282\u70b9\u7684\u8def\u5f84\u7ecf\u8fc7\u8282\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u5728\u533a\u95f4 $[l,r]$ \u5185\u3002\n\n\u7136\u540e\u53ef\u4ee5\u904d\u5386\u70b9\u5206\u6811\u4e0a\u6bcf\u4e2a\u70b9\u7684\u5b50\u6811\u6765\u5904\u7406\u8be2\u95ee\uff0c\u56e0\u4e3a\u70b9\u5206\u6811\u6240\u6709\u70b9\u7684\u5b50\u6811\u548c\u4e3a $n\\ log\\ n$ \u7ea7\u522b\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u6b63\u786e\u3002\n\n\u8bbe\u4e00\u4e2a\u8282\u70b9\u5230\u5176\u70b9\u5206\u6811\u4e0a\u5b50\u6811\u7684\u6839\u8282\u70b9\u7684\u8282\u70b9\u7f16\u53f7\u6700\u5c0f\u503c\u4e3a $L$\uff0c\u6700\u5927\u503c\u4e3a $R$\uff0c\u5bf9\u4e8e\u8be2\u95ee $[l,r]$\uff0c\u53ea\u6709\u5f53 $l \\leqslant L,r \\geqslant R$\uff0c\u4e14\u5176\u989c\u8272\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u8be5\u70b9\u624d\u4f1a\u5bf9\u8fd9\u4e2a\u8be2\u95ee\u4ea7\u751f\u8d21\u732e\u3002\u53ef\u4ee5\u5148\u5bf9\u8282\u70b9\u548c\u8be2\u95ee\u7684 $L$ \u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u7ef4\u62a4\u6bcf\u79cd\u989c\u8272\u7684 $R$ \u7684\u6700\u5c0f\u503c\uff0c\u8ba9\u6700\u5c0f\u503c\u5bf9\u8be2\u95ee\u4ea7\u751f\u8d21\u732e\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5373\u53ef\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200010\n#define inf 1000000000\n#define lowbit(x) (x&(-x))\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,m,tot,root;\nint v[maxn],mi[maxn],ma[maxn],siz[maxn],ans[maxn],t[maxn];\nbool vis[maxn];\nstruct node\n{\n    int l,r,id,type;\n};\nbool cmp(const node &a,const node &b)\n{\n    if(a.l==b.l) return a.type<b.type;\n    return a.l>b.l;\n}\nvector<node> ve[maxn],p[maxn];\nstruct edge\n{\n    int to,nxt;\n}e[maxn];\nint head[maxn],edge_cnt;\nvoid add(int from,int to)\n{\n    e[++edge_cnt]=(edge){to,head[from]};\n    head[from]=edge_cnt;\n}\nvoid dfs_root(int x,int fath)\n{\n    siz[x]=1,ma[x]=0;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(vis[y]||y==fath) continue;\n        dfs_root(y,x),siz[x]+=siz[y];\n        ma[x]=max(ma[x],siz[y]);\n    }\n    ma[x]=max(ma[x],tot-siz[x]);\n    if(ma[x]<ma[root]) root=x;\n}\nvoid dfs_find(int x,int fath,int l,int r)\n{\n    p[x].push_back((node){l,r,root,0});\n    ve[root].push_back((node){l,r,v[x],0});\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(vis[y]||y==fath) continue;\n        dfs_find(y,x,min(l,y),max(r,y));\n     }\n}\nvoid solve(int x)\n{\n    int now=tot;\n    vis[x]=true,dfs_find(x,0,x,x);\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(vis[y]) continue;\n        root=0,tot=siz[y];\n        if(siz[y]>siz[x]) tot=now-siz[x];\n        dfs_root(y,x),solve(root);\n    }\n} \nvoid update(int x,int v)\n{\n    while(x<=n) t[x]+=v,x+=lowbit(x);\n}\nint query(int x)\n{\n    int v=0;\n    while(x) v+=t[x],x-=lowbit(x);\n    return v;\n}\nint main()\n{\n    read(n),read(m);\n    for(int i=1;i<=n;++i) read(v[i]),mi[v[i]]=inf;\n    for(int i=1;i<n;++i)\n    {\n        int x,y;\n        read(x),read(y);\n        add(x,y),add(y,x);\n    }\n    tot=ma[0]=n,dfs_root(1,0),solve(root);\n    for(int i=1;i<=m;++i)\n    {\n        int l,r,x;\n        read(l),read(r),read(x);\n        for(int j=0;j<p[x].size();++j)\n        {\n            if(l<=p[x][j].l&&r>=p[x][j].r)\n            {\n                ve[p[x][j].id].push_back((node){l,r,i,1});\n                break;\n            }\n        }\n    }\n    for(int i=1;i<=n;++i)\n    {\n        sort(ve[i].begin(),ve[i].end(),cmp);\n        for(int j=0;j<ve[i].size();++j)\n        {\n            node x=ve[i][j];\n            if(x.type) ans[x.id]=query(x.r);\n            else if(x.r<mi[x.id])\n                update(mi[x.id],-1),update(x.r,1),mi[x.id]=x.r;\n        }\n        for(int j=0;j<ve[i].size();++j)\n        {\n            node x=ve[i][j];\n            if(!x.type&&mi[x.id]==x.r)\n                update(x.r,-1),mi[x.id]=inf;\n        }\n    }\n    for(int i=1;i<=m;++i) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1595377307,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5311 \u3010[Ynoi2011]\u6210\u90fd\u4e03\u4e2d\u3011"
    },
    {
        "content": "\u4e0d\u7406\u89e3\uff0c\u4e3a\u4ec0\u4e48\u81ea\u5b9a\u4e49\u6392\u5e8f\u5199\u6210 if \u5224\u65ad\u53e5\u6c38\u8fdc\u4f1a\u7206\u5947\u602a\u7684\u9519\u8bef\u2026\u2026\n\n\u603b\u7684\u6765\u8bf4\u8fd8\u662f\u6bd4\u8f83 ez \u7684\u3002\n\n**P5311**\u9898\u89e3\u3002\n\n--------------------------------------------------------\n\n\u521a\u5f00\u59cb\u7cca\u6d82\u4e86\uff0c\u5f88\u5feb\u5c31\u7cca\u4e86\u4e2a\u70b9\u5206\u6811\u4e0a\u5dee\u5206\u4e8c\u7ef4\u70b9\u4e0a\u6570\u989c\u8272\u7684\u505a\u6cd5\uff0c\u6ca1\u6709\u63a8\u5b8c\u6027\u8d28\u3002\n\n\u6700\u5173\u952e\u7684\u4e00\u4e2a\u6027\u8d28\uff1a\u5bf9\u539f\u6811\u8fdb\u884c\u70b9\u5206\u6cbb\u540e\uff0c\u4efb\u610f\u8fde\u901a\u5757\u4e00\u5b9a\u6709\u4e00\u4e2a\u5728\u70b9\u5206\u6811\u4e0a\u6700\u6d45\u7684\u8282\u70b9\uff0c\u5176\u5b50\u6811\u5b8c\u5168\u5305\u542b\u8fde\u901a\u5757\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u8003\u8651\u7528\u53cd\u8bc1\u6cd5\uff0c\u5982\u679c\u5728\u8fde\u901a\u5757\u4e0a\u4f46\u662f\u4e0d\u5728\u5b50\u6811\u91cc\u9762\u8bf4\u660e\u8fd8\u6709\u66f4\u6d45\u7684\u5728\u8fde\u901a\u5757\u4e0a\u7684\u70b9\u5206\u6811\u8282\u70b9\u3002\n\n\u7136\u540e\u5c31\u7b80\u5355\u4e86\uff1a\u4e00\u4e2a\u70b9\u88ab\u8054\u901a\u7684\u6761\u4ef6\u662f\u5230\u6839\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u90fd\u5728\u533a\u95f4 $[l,r]$ \u5185\uff0c\u4e0d\u96be\u60f3\u5230\u4e00\u4e2a\u70b9\u5728\u6839\u786e\u5b9a\u65f6\u7684\u9650\u5236\u5c31\u662f\u8def\u5f84\u4e0a\u8282\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c/\u6700\u5927\u503c\u7ec4\u6210\u7684\u4e8c\u5143\u7ec4\u4fe1\u606f $(l_i,r_i)$\uff0c\u540c\u65f6\u5176\u8d21\u732e\u662f\u989c\u8272 $col_i$\u3002\n\n\u5bf9\u6bcf\u4e2a\u6839\u5355\u72ec\u64cd\u4f5c\uff0c\u6309\u7167 $r$ \u626b\u63cf\u7ebf\uff0c\u6bcf\u6b21\u7ef4\u62a4\u6bcf\u4e2a\u989c\u8272\u7684 lst \u5c31\u53ef\u4ee5\u50cf HH \u9879\u94fe\u90a3\u6837\u6570\u989c\u8272\u4e86\uff0c\u7531\u4e8e\u662f\u5355\u70b9\u52a0\u533a\u95f4\u67e5\u76f4\u63a5\u4e0a\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n + q \\log n)$\uff0c\u8d38\u7136\u5728\u5904\u7406\u70b9\u5206\u6cbb\u7684\u65f6\u5019\u591a\u5e26\u4e00\u4e2a $\\log n$ \u9884\u8ba1\u4f1a T \u98de\u3002\n\n",
        "postTime": 1649382236,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u711a\u82b1\u5165\u9aa8\uff0c\u711a\u6b4c\u4e3a\u5f15\uff0c\u4e00\u8d77\u5954\u5411\u90a3\u9065\u8fdc\u7684\u5149\u660e"
    },
    {
        "content": "## P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d\n\n### \u9898\u610f\n\n\u7ed9\u4f60\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u79cd\u989c\u8272\uff0c\u6709 $m$ \u6b21\u67e5\u8be2\u64cd\u4f5c\u3002\n\n\u67e5\u8be2\u64cd\u4f5c\u7ed9\u5b9a\u53c2\u6570 $l\\ r\\ x$\uff0c\u9700\u8f93\u51fa\uff1a\n\n\u5c06\u6811\u4e2d\u7f16\u53f7\u5728 $[l,r]$ \u5185\u7684\u6240\u6709\u8282\u70b9\u4fdd\u7559\uff0c$x$ \u6240\u5728\u8fde\u901a\u5757\u4e2d\u989c\u8272\u79cd\u7c7b\u6570\u3002\n\n\u6bcf\u6b21\u67e5\u8be2\u64cd\u4f5c\u72ec\u7acb\u3002\n\n### \u601d\u8def\n\n\u8003\u8651\u70b9\u5206\u6811\u7684\u601d\u60f3\u3002\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5efa\u51fa\u70b9\u5206\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5206\u6cbb\u4e2d\u5fc3\uff0c\u6211\u4eec\u5e94\u8be5\u7ef4\u62a4\u4ec0\u4e48\u4e1c\u897f\uff1f\n\n\u6211\u4eec\u4ece\u5206\u6cbb\u4e2d\u5fc3\u5f00\u59cb\u904d\u5386\uff0c\u8bb0\u5f55\u904d\u5386\u5230\u6bcf\u4e2a\u70b9\u8def\u5f84\u4e0a\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u3002\u5f88\u663e\u7136\uff0c\u5982\u679c\u904d\u5386\u5230\u4e00\u4e2a\u8be2\u95ee\u7684 $x$ \u7684\u65f6\u5019\u8def\u5f84\u4e0a\u6700\u503c\u8303\u56f4\u5728\u8be2\u95ee\u533a\u95f4\u4ee5\u5185\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u8be2\u95ee $x$ \u70b9\u4e0e\u5206\u6cbb\u4e2d\u5fc3\u662f\u8054\u901a\u7684\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u662f\u600e\u4e48\u7ed9\u8be2\u95ee\u66f4\u65b0\u7b54\u6848\u7684\u3002\u6211\u4eec\u5728\u904d\u5386\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u5230\u8fbe\u6bcf\u4e2a\u70b9\u65f6\u7684\u8def\u5f84\u6700\u503c\u548c\u8be5\u70b9\u7684\u989c\u8272\uff0c\u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u679a\u4e3e\u6bcf\u4e2a\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\uff0c\u7528\"HH\u7684\u9879\u94fe\"\u4e00\u9898\u7684\u65b9\u6cd5\u7528\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55\u6bcf\u79cd\u989c\u8272\u7684\u6700\u5c0f\u7f16\u53f7\u7684\u6700\u5927\u503c\u7684\u989c\u8272\u4e2a\u6570\uff0c\u67e5\u8be2\u533a\u95f4\u7b54\u6848\u5373\u53ef\u3002\u663e\u7136\uff0c\u8fd9\u4e2a\u65f6\u5019\u6811\u72b6\u6570\u7ec4\u91cc\u7684\u6bcf\u4e00\u4e2a\u7b54\u6848\u90fd\u4e0e\u5206\u6cbb\u4e2d\u5fc3\u8054\u901a\uff0c\u800c\u5206\u6cbb\u4e2d\u5fc3\u53c8\u4e0e\u8be2\u95ee\u70b9\u8054\u901a\uff0c\u6545\u80fd\u5c06\u8303\u56f4\u5185\u7684\u7b54\u6848\u7edf\u8ba1\u5b8c\u5168\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6bcf\u4e2a\u8be2\u95ee\u7b54\u6848\u88ab\u7edf\u8ba1\u51e0\u6b21\u3001\u5728\u54ea\u91cc\u88ab\u7edf\u8ba1\u80fd\u7edf\u8ba1\u5b8c\u5168\u5462\uff1f\n\n\u8003\u8651\u70b9\u5206\u6811\u7684\u7ed3\u6784\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u7684\u7f16\u53f7\u533a\u95f4\uff0c\u5047\u8bbe $u$ \u4e3a\u8be2\u95ee\u70b9 $x$ \u7684\u70b9\u5206\u6811\u7956\u5148\uff0c$v$ \u4e3a $u$ \u70b9\u5206\u6811\u7956\u5148\uff0c\u4e14\u4e24\u8005\u90fd\u4e0e $x$ \u8054\u901a\uff0c\u90a3\u4e48 $v$ \u5305\u542b\u7684\u8303\u56f4\u4e00\u5b9a\u6bd4 $u$ \u5927\u800c\u4e14\u5b8c\u5168\u5305\u542b $u$ \u7684\u8303\u56f4\u3002\u6211\u4eec\u521a\u624d\u8bf4\u5728\u5206\u6cbb\u4e2d\u5fc3\u7684\u7edf\u8ba1\u80fd\u5c06\u6574\u4e2a\u8303\u56f4\u5185\u7684\u7b54\u6848\u90fd\u7edf\u8ba1\u5b8c\u5168\uff0c\u6240\u4ee5 $x$ \u5728 $v$ \u5904\u88ab\u7edf\u8ba1\u4e00\u5b9a\u5305\u542b\u5728 $u$ \u5904\u7edf\u8ba1\u7684\u6240\u6709\u7b54\u6848\u3002\n\n\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e2a\u4e8b\u60c5\uff0c\u82e5 $u\\ v$ \u5b9a\u4e49\u540c\u4e0a\uff0c\u4f46$u$ \u4e0e $x$ \u8054\u901a\u800c $v$ \u4e0d\u4e0e $x$ \u8054\u901a\uff0c\u90a3\u4e48\u4e0e $u$ \u76f8\u5bf9\u7684 $v$ \u7684\u5f7c\u5904\u7684\u6240\u6709\u70b9\u90fd\u4e00\u5b9a\u4e0d\u4e0e $x$ \u8054\u901a\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u70b9\u4e00\u5b9a\u4f1a\u7ecf\u8fc7 $v$ \u70b9\u3002\n\n\u7efc\u4e0a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u6df1\u5ea6\u6700\u5c0f\u7684\u8054\u901a\u7684\u7956\u5148\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\u8fd9\u65f6\u7edf\u8ba1\u7684\u7b54\u6848\u662f\u5b8c\u5168\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u751a\u81f3\u4e0d\u9700\u8981\u5efa\u51fa\u70b9\u5206\u6811\u3002\u76f4\u63a5\u70b9\u5206\u6cbb\uff0c\u5728\u6bcf\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u641c\u7d22\u51fa\u8303\u56f4\u5185\u5408\u6cd5\u7684\u8be2\u95ee\uff0c\u76f4\u63a5\u6309\u7167\u4e0a\u8ff0\u7edf\u8ba1\u65b9\u5f0f\u5c06\u8be2\u95ee\u7b54\u6848\u6c42\u51fa\uff0c\u4ee5\u540e\u90fd\u4e0d\u518d\u66f4\u65b0\u8be5\u8be2\u95ee\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\u7a7a\u95f4\u5c0f\u3001\u65f6\u95f4\u5e38\u6570\u5c0f\u3001\u4ee3\u7801\u77ed\u7684\u65b9\u6cd5\u8c01\u4e0d\u559c\u6b22\u5462~\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#include<cmath>\n#include<vector>\nusing namespace std;\ninline int read(){\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=x*10+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nnamespace star\n{\n\tconst int maxn=1e5+10;\n\tint n,m,c[maxn],C[maxn],ans[maxn],siz[maxn],rt,mx[maxn],lst[maxn];\n\tbool vis[maxn],mark[maxn];\n\tstruct que{\n\t\tint l,r,id;\n\t\tque(){}\n\t\tque(int l,int r,int id):l(l),r(r),id(id){}\n\t\tbool operator < (const que &b) const {return r<b.r;}\n\t};\n\tvector<int> V[maxn];\n\tvector<que> qu[maxn],a,q;\n\tinline void insert(int x,int k){if(x)for(;x<=n;x+=x&-x) C[x]+=k;}\n\tinline int query(int x){int ans=0;for(;x;x-=x&-x) ans+=C[x]; return ans;}\n\tvoid getrt(int x,int fa,int S){\n\t\tsiz[x]=1,mx[x]=0;\n\t\tfor(auto u:V[x]) if(!vis[u] and u!=fa) getrt(u,x,S),mx[x]=max(mx[x],siz[u]),siz[x]+=siz[u];\n\t\tif((mx[x]=max(mx[x],S-siz[x]))<mx[rt]) rt=x;\n\t}\n\tvoid dfs(int x,int fa,int l,int r){\n\t\tsiz[x]=1,a.emplace_back(l,r,c[x]);\n\t\tfor(auto u:qu[x]) if(!mark[u.id] and u.l<=l and r<=u.r) mark[u.id]=true,q.push_back(u);\n\t\tfor(auto u:V[x]) if(!vis[u] and u!=fa) dfs(u,x,min(l,u),max(r,u)),siz[x]+=siz[u];\n\t}\n\tvoid solve(int x){\n\t\tvis[x]=true;\n\t\ta.clear(),q.clear(),dfs(x,0,x,x);\n\t\tsort(a.begin(),a.end()),sort(q.begin(),q.end());\n\t\tfor(int i=0,j=0;i<q.size();i++){\n\t\t\twhile(j<a.size() and a[j].r<=q[i].r){\n\t\t\t\tif(a[j].l>lst[a[j].id]) insert(lst[a[j].id],-1),insert(lst[a[j].id]=a[j].l,1);\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tans[q[i].id]=query(n)-query(q[i].l-1);\n\t\t}\n\t\tfor(auto u:a) insert(lst[u.id],-1),lst[u.id]=0;\n\t\tfor(auto u:V[x]) if(!vis[u]) rt=0,getrt(u,x,siz[u]),solve(rt);\n\t}\n\tinline void work(){\n\t\tn=read(),m=read(),mx[0]=n+1;\n\t\tfor(int i=1;i<=n;i++) c[i]=read();\n\t\tfor(int u,v,i=1;i<n;i++) u=read(),v=read(),V[u].push_back(v),V[v].push_back(u);\n\t\tfor(int l,r,i=1;i<=m;i++) l=read(),r=read(),qu[read()].emplace_back(l,r,i);\n\t\tgetrt(1,0,n),solve(rt);\n\t\tfor(int i=1;i<=m;i++) printf(\"%d\\n\",ans[i]);\n\t}\n}\nsigned main(){\n\tstar::work();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1617599284,
        "uid": 280015,
        "name": "Star_Cried",
        "ccfLevel": 9,
        "title": "P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d"
    },
    {
        "content": "# P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d\n\n## \u601d\u8def\n\n\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u9898\u89e3\u533a\u91cc\u90fd\u80fd\u76f4\u63a5\u79d2\u4e86\u70b9\u5206\u6811\uff0c\u4e0d\u9700\u8981\u5206\u6790\u4e00\u4e0b\u5417\u3002\n\n\u5728\u6811\u4e2d\u4fdd\u7559\u70b9\u7684\u7f16\u53f7\u5728 $[l,r]$ \u5185\u7684\u70b9\uff0c\u60f3\u5230\u4ee4\u4e00\u6761\u8fb9\u7684\u6743\u4e3a\u4e00\u5bf9 `pair` $(mn,mx)$ \u8868\u793a\u8fb9\u4e24\u7aef\u7684\u70b9\u7f16\u53f7\u7684\u8f83\u5c0f\u503c\u548c\u8f83\u5927\u503c\uff0c\u90a3\u4e48\u9898\u76ee\u8f6c\u5316\u4e3a\u4ece $x$ \u51fa\u53d1\u6bcf\u6b21\u53ea\u80fd\u8d70 $l\\leq mn,mx\\leq r$ \u7684\u8fb9\uff0c\u6700\u7ec8\u80fd\u8d70\u5230\u7684\u70b9\u7684\u989c\u8272\u6570\u3002\n\n~~\u53d1\u73b0\u4ed6\u5f88\u50cf\u7701\u9009\u8054\u8003 2021~~\uff0c\u6811\u4e0a\u8def\u5f84\u95ee\u9898\uff0c\u8003\u8651\u70b9\u5206\u6cbb\u3002\n\n\u5efa\u70b9\u5206\u6811\uff08\u5efa\u51fa\u6765\u66f4\u597d\u7406\u89e3\u800c\u5df2\uff0c\u4e0d\u5efa\u4e5f\u53ef\u4ee5\uff09\uff0c\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u5206\u6cbb\u4e2d\u5fc3\uff0c\u5982\u679c\u5728\u5b83\u7684\u5b50\u6811\u5185\u5b58\u5728\u4e00\u4e2a\u70b9 $x$ \u4e0a\u6709\u8be2\u95ee $l,r$\uff0c\u4e14 $x$ \u5230\u6b64\u65f6\u7684\u5206\u6cbb\u4e2d\u5fc3\u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9 $u$ \u5747\u6ee1\u8db3 $\\forall u\\in [l,r]$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8be2\u95ee\u7b49\u4ef7\u4e8e\u4ee5\u6b64\u65f6\u7684\u5206\u6cbb\u4e2d\u5fc3\u51fa\u53d1\u53ea\u8d70\u8fb9\u6743\u5728 $l\\leq mn,mx\\leq r$ \u5185\u7684\u8fb9\uff0c\u6700\u540e\u7684\u989c\u8272\u6570\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u4e00\u5b9a\u9700\u8981\u627e\u5728\u70b9\u5206\u6811\u4e0a\u6df1\u5ea6\u6700\u6d45\u4e14\u6ee1\u8db3\u5982\u4e0a\u6761\u4ef6\u7684\u5206\u6cbb\u4e2d\u5fc3\uff0c\u628a\u8be2\u95ee\u79bb\u7ebf\u7136\u540e\u6302\u5728\u8fd9\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u4e0a\uff0c\u8fd9\u6837 $x$ \u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u4e00\u5b9a\u6700\u5927\u5316\uff08\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u9898\u89e3\u533a\u9700\u8981\u8bc1\u660e\u8fd9\u4e2a\u4e1c\u897f\uff09\u3002\n\n\u7136\u540e\u95ee\u9898\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u6709\u82e5\u5e72\u4e2a\u5f62\u5982 $[l,r]$ \u7684\u8be2\u95ee\u4e86\uff0c\u8fd9\u5df2\u7ecf\u53d8\u4e3a\u5e73\u51e1\u95ee\u9898\u4e86\uff0c\u6211\u4eec\u8bb0\u5f55\u6b64\u65f6\u5728\u70b9\u5206\u6811\u5185\u6240\u6709\u70b9\u5230\u5206\u6cbb\u4e2d\u5fc3\u8def\u5f84\u4e0a\u7684\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u4e8c\u7ef4\u95ee\u9898\u8003\u8651\u626b\u63cf\u7ebf\u3002\n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd\u626b\u63cf\u7ebf\u601d\u60f3\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u5230\u5206\u6cbb\u4e2d\u5fc3\u8def\u5f84\u4e0a\u8bb0\u5f55\u7684 $(mn,mx)$ \u62bd\u8c61\u4e3a\u4e00\u4e2a\u70b9\uff0c\u5f62\u5982 $l,r$ \u7684\u8be2\u95ee\u62bd\u8c61\u6210\u77e9\u9635\uff0c\u90a3\u4e48\u4e00\u4e2a\u70b9 $(mn,mx)$ \u5728 $l,r$ \u8fd9\u4e2a\u8be2\u95ee\u91cc\u6709\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53 $l\\leq mn$ \u4e14 $mx\\leq r$\uff0c\u8fd9\u4e2a\u662f\u4e00\u4e2a 2-side \u77e9\u5f62\uff0c\u7136\u540e\u53d8\u6210\u4e8c\u7ef4\u6570\u989c\u8272\u3002\n\n\u6216\u8005\u4f60\u53ef\u4ee5\u628a\u8be2\u95ee\u62bd\u8c61\u6210\u70b9\uff0c$(mn,mx)$ \u62bd\u8c61\u6210\u77e9\u5f62\uff0c\u7136\u540e\u53d8\u4e3a\u77e9\u9635\u6709\u989c\u8272\uff0c\u67e5\u5355\u70b9\u8986\u76d6\u95ee\u9898\u3002\u8fd9\u6837\u660e\u663e\u4f1a\u9ebb\u70e6\u5f88\u591a\uff0c\u6240\u4ee5\u7b14\u8005\u7528\u7b2c\u4e00\u79cd\u601d\u60f3\u3002\uff08\u505a\u9898\u9700\u8981\u53d8\u901a\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u9898\u627e\u5230\u80fd\u6700\u8f7b\u677e\u7ef4\u62a4\u67e5\u8be2\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\u3002\uff09\n\n\u56de\u5230\u9898\u76ee\u91cc\uff0c2-side \u77e9\u9635\u6570\u989c\u8272\u5f31\u4e8e\u77e9\u9635\u6570\u989c\u8272\uff0c\u6709\u5e73\u51e1\u505a\u6cd5\u3002\u6211\u4eec\u626b\u7b2c\u4e00\u7ef4\uff0c\u7b2c\u4e8c\u7ef4\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u8003\u8651\u6bcf\u6b21\u8bb0\u5f55\u4e00\u4e2a\u6570\u7ec4 $col$ \u8868\u793a\u6bcf\u4e2a\u989c\u8272 \u6700\u5c0f/\u6700\u5927 \u51fa\u73b0\u7684**\u7eb5\u5750\u6807**\u7684\u4f4d\u7f6e\uff0c\uff08\u6211\u4eec\u628a\u76ee\u524d\u626b\u5230\u7684\u6240\u6709\u70b9\u90fd\u6309\u7167\u7eb5\u8f74\u62cd\u6210\u4e00\u7ef4\uff0c\u53ea\u6709\u5728\u6570\u8f74\u4e0a\u51fa\u73b0\u4f4d\u7f6e \u6700\u5c0f/\u6700\u5927 \u7684\u70b9\u7684\u8d21\u732e\u662f\u6700\u5f3a\u7684\uff09\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7ef4\u62a4 $col$ \u6570\u7ec4\u548c\u5bf9\u5e94\u7684\u6811\u72b6\u6570\u7ec4\u5373\u53ef\u3002\n\n\u5173\u4e8e\u590d\u6742\u5ea6\uff0c\u70b9\u5206\u6811\u7684 $\\sum siz$ \u662f $n\\log n$ \u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8fd8\u6709\u4e00\u6b21\u6811\u72b6\u6570\u7ec4\u64cd\u4f5c\uff0c\u6700\u540e\u7684\u590d\u6742\u5ea6\u662f $\\mathcal O(n\\log^ 2 n)$\u3002\n\n#### \u7ec6\u8282\uff1a\n\n\u5173\u4e8e\u7ebf\u6027\u7a7a\u95f4\uff0c\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u7a7a\u95f4\u3002\u8fd9\u91cc\u91c7\u7528\u7684\u662f $\\mathcal O(n\\log n)$ \u7a7a\u95f4\u505a\u6cd5\uff0c\u8003\u8651\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5230\u70b9\u5206\u6811\u4e0a\u6240\u6709\u7956\u5148\u7684 $(mn,mx)$ \u4fe1\u606f\uff0c\u7136\u540e\u4ece\u6700\u6d45\u7684\u6839\u5f00\u59cb\u8ddf\u8be2\u95ee\u7684 $l,r$ \u6bd4\u8f83\u3002\u800c\u70b9\u5206\u6811\u7684 $\\sum dep$ \u4e5f\u662f $n\\log n$ \u7684\u3002\n\n## code\n\n\u7b14\u8005\u70b9\u5206\u6cbb\u6bd4\u8f83\u4e11\u3002\n\n```c++\n#include <bits/stdc++.h>\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\nusing namespace std;\nconst int N = 2e5 + 10;\nconst int inf = 0x3f3f3f3f;\ntypedef pair <int, int> pii;\ninline int read ()\n{\n\tint x = 0, f = 1;\n\tchar c = getchar ();\n\twhile (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar (); }\n\twhile (c >= '0' && c <= '9') { x = (x << 1) + (x << 3) + (c ^ 48); c = getchar (); }\n\treturn x * f;\n}\nint n, m, root, S, rt;\nint a[N];\nstruct edge {\n\tint ver, nxt;\n} e[N << 1];\nint head[N], tot;\nvoid add_edge (int u, int v) { e[++tot] = (edge) {v, head[u]}; head[u] = tot; }\nint siz[N], mxs[N];\nbool vis[N];\nvector <int> E[N]; // \u70b9\u5206\u6811\u5728\u8fd9\u91cc\u7684\u7528\u5904\u53ea\u662f\u4f18\u5316\u4e8c\u6b21\u70b9\u5206\u6cbb\u7684\u590d\u6742\u5ea6\u800c\u5df2\nint dep[N];\nint mn[N][26], mx[N][26], fa[N][26];\nstruct query { \n\tint l, r, id;\n\tbool operator < (const query &A) const {\n\t\treturn l > A.l;\n\t}\n};\nvector <query> q[N];\nstruct point {\n\tint x, y, col;\n\tbool operator < (const point &A) const {\n\t\treturn x > A.x;\n\t}\n} p[N]; int cntp;\nstruct BIT {\n\t#define lowbit(x) x & (-x)\n\tint tree[N];\n\tvoid add (int x, int val) { for ( ; x <= n; x += lowbit(x)) tree[x] += val; }\n\tint query (int x) { int res = 0; for ( ; x > 0; x -= lowbit(x)) res += tree[x]; return res; }\n} T;\nint ans[N];\nvoid get_root (int u, int f)\n{\n    siz[u] = 1; mxs[u] = 0;\n    for (int i = head[u]; i; i = e[i].nxt)\n    {\n        int v = e[i].ver;\n        if (v == f || vis[v]) continue;\n        get_root (v, u);\n        siz[u] += siz[v];\n        mxs[u] = max (mxs[u], siz[v]);\n    }\n    mxs[u] = max (mxs[u], S - siz[u]);\n    if (mxs[u] < mxs[root]) root = u;\n}\nvoid getdis (int u, int f, int Mn, int Mx, int d)\n{\n    mn[u][dep[d]] = Mn, mx[u][dep[d]] = Mx; fa[u][dep[d]] = d; \n    for (int i = head[u]; i; i = e[i].nxt)\n    {\n        int v = e[i].ver;\n        if (v == f || vis[v]) continue;\n        getdis (v, u, min (e[i].ver, Mn), max (e[i].ver, Mx), d);\n    }\n}\nvoid divide (int u)\n{\n    vis[u] = true;\n\tgetdis (u, 0, u, u, u);\n    for (int i = head[u]; i; i = e[i].nxt)\n    {\n        int v = e[i].ver;\n        if (vis[v]) continue;\n        S = siz[u]; root = 0; mxs[0] = n;\n        get_root(v, u);\n\t\tdep[root] = dep[u] + 1;\n\t\tE[u].pb (root); // u -> root\n        divide(root);\n    }\n}\nint col[N];\nvoid dfs (int u, int f, int Mn, int Mx, int d)\n{\n\tp[++cntp] = (point) {Mn, Mx, a[u]};\n\tfor (int i = head[u]; i; i = e[i].nxt)\n\t{\n\t\tint v = e[i].ver;\n\t\tif (v == f || dep[v] < d) continue;\n\t\tdfs (v, u, min (Mn, v), max (Mx, v), d);\n\t}\n}\nvoid solve (int u)\n{\n\tcntp = 0; dfs (u, 0, u, u, dep[u]);\n\tsort (p + 1, p + cntp + 1);\n\tsort (q[u].begin (), q[u].end());\n\tint now = 1;\n\tfor (auto i : q[u])\n\t{\n\t\twhile (p[now].x >= i.l && now <= cntp)\n\t\t{\n\t\t\tint c = p[now].col;\n\t\t\tif (p[now].y < col[c])\n\t\t\t{\n\t\t\t\tif (col[c] <= n) T.add(col[c], -1);\n\t\t\t\tT.add (p[now].y, 1);\n\t\t\t}\n\t\t\tcol[c] = min (col[c], p[now].y);\n\t\t\tnow++;\n\t\t}\n\t\tans[i.id] = T.query (i.r);\n\t}\n\tfor (int i = 1; i <= cntp; i++)\n\t\tif (col[p[i-].col] <= n)\n\t\t\tT.add (col[p[i].col], -1), col[p[i].col] = inf;\n\tfor (auto v : E[u]) solve (v);\n}\nsigned main ()\n{\n\tn = read (), m = read ();\n\tfor (int i = 1; i <= n; i++) a[i] = read ();\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tint u = read (), v = read ();\n\t\tadd_edge (u, v);\n\t\tadd_edge (v, u);\n\t}\n\tS = n; mxs[0] = n; root = 0;\n\tget_root (1, 0);\n\tdep[root] = 1; rt = root;\n\tdivide (root);\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint l = read (), r = read (), x = read ();\n\t\tfor (int j = 1; j <= 25; j++) if (l <= mn[x][j] && mx[x][j] <= r) { q[fa[x][j]].pb ((query) {l, r, i}); break; }\n\t}\n\tmemset (col, 0x3f, sizeof (col));\n\tsolve(rt);\n\tfor (int i = 1; i <= m; i++) printf (\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1676446873,
        "uid": 177837,
        "name": "violin_wyl",
        "ccfLevel": 6,
        "title": "[Ynoi2011] \u6210\u90fd\u4e03\u4e2d"
    },
    {
        "content": "\u7b2c\u4e00\u9053\u9ed1 Ynoi\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u592a\u96be\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8f6c\u6362\u9898\u610f\u3002\n\n\u4fdd\u7559\u6bcf\u4e2a\u70b9\uff0c\u7b49\u4ef7\u4e8e\u5728\u7b97\u5230**\u7b26\u5408\u8981\u6c42**\u7684\u70b9**\u4ee5\u524d**\u4e0d\u8ba1\u7b97\u8fd9\u4e9b\u70b9\u7684\u8d21\u732e\u3002\n\n\u6240\u4ee5\u9488\u5bf9\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u7406\u89e3\u6210\u5230 $x$ \u7684\u8def\u5f84\u4e0a**\u7f16\u53f7\u7684\u6700\u5c0f\u503c**\u5927\u4e8e\u7b49\u4e8e $l$ \u5e76\u4e14**\u7f16\u53f7\u7684\u6700\u5927\u503c**\u5c0f\u4e8e\u7b49\u4e8e $r$ \u7684\u989c\u8272\u79cd\u7c7b\u3002\n\n\u56e0\u4e3a\u4ed6\u8981\u5904\u7406\u4e00\u5927\u5806\u6811\u4e0a\u8def\u52b2\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651**\u70b9\u5206\u6cbb**\u6c42\u89e3\u7b54\u6848\u3002\n\n\u5728\u6c42\u51fa\u91cd\u5fc3\u4e4b\u540e\uff0c\u6211\u4eec\u8ba1\u7b97\u7ecf\u8fc7\u5f53\u524d\u91cd\u5fc3\u7684\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u8be2\u95ee\u4e2d $x$ \u662f\u5f53\u524d\u91cd\u5fc3\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u5176\u4ed6\u70b9\u7684\u7b54\u6848\u4f1a\u5728\u5176\u4f59\u7684\u5206\u6cbb\u4e2d\u88ab\u6c42\u51fa\u6765\u3002\n\n\u90a3\u4e48\u6211\u4eec\u8003\u8651\u600e\u4e48\u8ba1\u7b97\u5f53\u524d\u5206\u6cbb\u4e2d\u5fc3\u7684\u7b54\u6848\u5462\uff1f\n\n\u6211\u4eec\u4ece\u5f53\u524d\u7684\u5206\u6cbb\u4e2d\u5fc3\u5f00\u59cb\u641c\u7d22\uff0c\u8bb0\u5f55\u4ece**\u5206\u6cbb\u4e2d\u5fc3**\u5230**\u5f53\u524d\u8282\u70b9**\u4e2d\u70b9\u7f16\u53f7\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u641c\u5230\u4e00\u4e2a\u70b9\u65f6\u5c06\u70b9\u7684\u7f16\u53f7\u4e0e\u5f53\u524d\u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\u53d6 $\\max$ \u4e0e $\\min$ \u5373\u53ef\u3002\n\n\u5e76\u4e14\u6bcf\u6b21\u641c\u5230\u4e00\u4e2a\u70b9\uff0c\u8fd8\u9700\u8981\u66f4\u65b0\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u989c\u8272\u2014\u2014\u7f16\u53f7\u5728 $l$ \u5230 $r$ \u4e4b\u95f4\u7684\u70b9\u90fd\u53ef\u4ee5\u4eab\u53d7\u5230\u5f53\u524d\u989c\u8272\u7684\u8d21\u732e\u3002\n\n\u641c\u5230\u4e00\u4e2a\u70b9\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0a**\u8be2\u95ee\u7684 $r$ \u5927\u4e8e\u7b49\u4e8e**\u8def\u5f84\u4e0a\u70b9\u7f16\u53f7\u7684\u6700\u5927\u503c\uff0c\u5e76\u4e14\u8fd9\u4e2a\u70b9\u4e0a**\u8be2\u95ee\u7684 $l$ \u5c0f\u4e8e\u7b49\u4e8e**\u8def\u5f84\u4e0a\u70b9\u7f16\u53f7\u7684\u6700\u5c0f\u503c\uff0c\u5e76\u4e14\u8fd9\u4e2a\u8be2\u95ee**\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7**\uff0c\u90a3\u4e48\u5c31\u628a\u8fd9\u4e2a\u8be2\u95ee\u52a0\u5165**\u641c\u7d22\u8fd9\u4e2a\u70b9\u65f6**\u6240\u53d1\u73b0**\u53ef\u4ee5\u89e3\u51b3**\u7684\u8be2\u95ee\u2014\u2014\u7136\u540e\u6807\u8bb0\u8fd9\u4e2a\u8be2\u95ee\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u4e86\u3002\n\n\u5982\u679c\u641c\u5230\u4e00\u4e2a\u70b9\u65f6\uff0c\u8fd9\u4e2a\u70b9\u4e0a\u6709\u8be2\u95ee\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u4f46\u662f**\u4e0d\u6ee1\u8db3**\u4e0a\u8ff0\u5bf9\u70b9\u7f16\u53f7\u7684\u8981\u6c42\uff0c\u90a3\u600e\u4e48\u529e\uff1f\u56e0\u4e3a\u6bcf\u4e00\u6b21\u641c\u7d22\u90fd\u4f1a\u5bf9**\u5168\u56fe**\u8fdb\u884c\u4e00\u4e2a\u641c\u7d22\uff0c\u6240\u4ee5\u5982\u679c\u5f53\u524d\u8be2\u95ee\u4e0d\u6ee1\u8db3\u5bf9\u70b9\u7f16\u53f7\u7684\u8981\u6c42\uff0c\u90a3\u53ea\u80fd\u8bf4\u660e**\u5f53\u524d\u8def\u5f84**\u4e0d\u6ee1\u8db3\u5176\u8981\u6c42\u800c\u4e0d\u80fd\u8bf4\u660e**\u5168\u56fe\u90fd\u4e0d\u6ee1\u8db3**\u4e0d\u6ee1\u8db3\u5176\u8981\u6c42\uff0c\u6240\u4ee5\u4f1a\u5728\u4e0b\u4e00\u6b21\u6ee1\u8db3\u65f6\u5c06\u8be5\u8be2\u95ee\u52a0\u5165**\u53ef\u4ee5\u89e3\u51b3**\u7684\u8be2\u95ee\u7684\u96c6\u5408\u3002\n\n---\n\n\u73b0\u5728\u6211\u4eec\u6709\u4e86\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb\u641c\u4e00\u6b21\u56fe\u6240\u6709\u7684**\u989c\u8272**\u4e0e**\u7b26\u5408\u6761\u4ef6**\u7684\u8be2\u95ee\u96c6\u5408\uff0c\u8be5\u7edf\u8ba1\u7b54\u6848\u4e86\u3002\n\n\u56e0\u4e3a\u7b54\u6848\u90fd\u662f\u4ee5\u70b9\u7f16\u53f7\u7684\u533a\u95f4\u8fdb\u884c\u6807\u53f7\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u5de6\u5f80\u53f3\u5904\u7406\u989c\u8272\u548c\u8be2\u95ee\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u904d\u5386\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5c31\u50cf [P1972](https://www.luogu.com.cn/problem/P1972) \u4e00\u6837\uff0c\u5904\u7406\u6240\u6709**\u53f3\u7aef\u70b9**\u5c0f\u4e8e\u7b49\u4e8e**\u5f53\u524d\u8be2\u95ee\u53f3\u7aef\u70b9**\u7684\u989c\u8272\u533a\u95f4\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n\u5982\u679c\u5f53\u524d\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u5927\u4e8e\u5f53\u524d\u989c\u8272\u7684**\u6700\u53f3\u7684\u989c\u8272\u533a\u95f4**\u80fd\u4ee3\u8868\u7684**\u6700\u53f3\u4f4d\u7f6e**\uff0c\u8bf4\u660e\u8fd9\u4e2a\u989c\u8272\u5931\u6548\u4e86\uff0c\u5c06\u5f53\u524d\u7684\u989c\u8272\u533a\u95f4**\u53f3\u7aef\u70b9**\u63d2\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u5e76\u4e14\u5220\u6389\u4e0a\u4e00\u4e2a**\u76ee\u524d\u989c\u8272**\u4ee3\u8868\u7684\u989c\u8272\u533a\u95f4\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002\n\n\u6bcf\u6b21\u7edf\u8ba1\u5b8c\u7b54\u6848\uff0c\u8981\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/vsyvnnex)",
        "postTime": 1658911706,
        "uid": 107432,
        "name": "\u30c0\u30d6\u30eb\u30ea\u30fc\u30c1",
        "ccfLevel": 5,
        "title": "P5311\u9898\u89e3"
    },
    {
        "content": "\u4fdd\u7559\u7f16\u53f7\u5728 $[l, r]$ \u4e2d\u7684\u8282\u70b9\u6c42\u8fde\u901a\u5757\uff0c\u7b49\u4ef7\u4e8e $x$ \u5230\u67d0\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\u6807\u53f7\u6700\u5c0f\u503c $\\ge l$ \u4e14\u6807\u53f7\u6700\u5927\u503c $\\le r$\u3002\u7531\u6b64\uff0c\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u5173\u4e8e $x$ \u7684\u8def\u5f84\u95ee\u9898\u3002\n\n\u8003\u8651\u7528\u70b9\u5206\u6cbb\u89e3\u51b3\u3002\u8bbe\u5206\u6cbb\u4e2d\u5fc3\u4e3a $u$\uff0c`dfs` \u5230\u7684\u70b9\u4e3a $v$\uff0c$u \\to v$ \u8def\u5f84\u4e0a\u6807\u53f7\u6700\u5c0f\u3001\u6700\u5927\u503c\u5206\u522b\u4e3a $L_v, R_v$\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee $x$\uff0c\u5f53\u4e14\u4ec5\u5f53 $L_x \\ge l$ \u4e14 $R_x \\le r$ \u65f6\uff0c$x$ \u4e0e $u$ \u8fde\u901a\u3002\u4e00\u4e2a\u70b9 $v$ \u8981\u548c $x$ \u8fde\u901a\uff0c\u4e5f\u9700\u8981\u6ee1\u8db3 $L_v \\ge l$ \u4e14 $R_v \\le r$\u3002\n\n\u628a $[L_v, R_v]$ \u770b\u6210\u6709\u8272\u7ebf\u6bb5\u3002\u56e0\u4e3a\u8981\u6c42 $[l,r]$ \u5305\u542b $[L_v, R_v]$\uff0c\u6240\u4ee5\u6839\u636e [HH \u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972) \u7684\u5957\u8def\uff0c\u53ef\u4ee5\u6309 $L$ \u6392\u5e8f\uff0c\u628a\u989c\u8272\u653e\u5728 $R$ \u4e0a\uff0c\u4ece\u53f3\u5f80\u5de6\u626b\u7684\u540c\u65f6\u628a*\u65b0\u989c\u8272*\u6807\u8bb0\u653e\u5728\u6700\u9760\u8fd1 $L$ \u7684\u70b9\u4e0a\u3002\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\u6b64\u65f6\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u786e\u5b9a\u4e00\u4e2a\u70b9\u5e94\u5f53\u5728\u54ea\u4e2a\u5206\u6cbb\u4e2d\u5fc3\u88ab\u7edf\u8ba1\u3002\u5982\u679c\u6309\u7167\u4f20\u7edf\u7684\u5957\u8def\uff0c\u4ec5\u5728\u4e0d\u540c\u5b57\u6570\u95f4\u5408\u5e76\uff0c\u90a3\u4e48\u7edf\u8ba1\u662f\u56f0\u96be\u7684\u3002\n\n\u672c\u9898\u53ef\u4ee5\u653e\u5bbd\u9650\u5236\uff0c\u5141\u8bb8\u540c\u4e00\u5b50\u6811\u5408\u5e76\u3002\u8fd9\u6837\u505a\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u7684\u6b63\u786e\u6027\u3002\u82e5 $x$ \u80fd\u901a\u8fc7 $u$ \u5230\u8fbe $v$\uff0c\u5219\u4e00\u5b9a\u80fd\u901a\u8fc7\u66f4\u6df1\u7684\u5206\u6cbb\u4e2d\u5fc3 $u'$ \u5230\u8fbe $v$\u3002[\u4e3a\u4ec0\u4e48\uff1f](https://www.luogu.com.cn/paste/0h83hp6e)\n\n\u94a6\u5b9a\u6bcf\u4e2a\u8be2\u95ee\u4ec5\u5728\u7b2c\u4e00\u6b21\u80fd\u5230\u8fbe\u5206\u6cbb\u4e2d\u5fc3\u7684\u65f6\u5019\u7edf\u8ba1\uff0c\u8fd9\u6837\u624d\u4e0d\u4f1a\u7b97\u91cd\u3002\n\n[\u4ee3\u7801](https://www.luogu.com.cn/paste/7kzb4a6s)",
        "postTime": 1658908890,
        "uid": 120324,
        "name": "Yansuan_HCl",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3] P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d"
    },
    {
        "content": "\u672c\u9898\u7684\u7b2c 1k \u63d0\u4ea4 qwq\n\n## \u626b\u63cf\u7ebf + \u6dc0\u7c89\u6c41\n\n\u8fde\u901a\u5757\u5f88\u795e\u5947 \u6211\u4eec\u8003\u8651\u5c06\u95ee\u9898\u84bb\u5316\u8fdb\u884c\u8003\u8651\n\n\u5982\u679c\u56fa\u5b9a $x$ \u4e3a\u6839 \u95ee\u9898\u5c06\u4ece\u90bb\u57df\u95ee\u9898\u8f6c\u5316\u4e3a\u6709\u5411\u90bb\u57df\u5373\u5b50\u6811\u5185\u95ee\u9898\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u54ea\u4e9b\u70b9\u4f1a\u5bf9\u7b54\u6848\u505a\u51fa\u8d21\u732e \u53d1\u73b0\u4e00\u5b9a\u662f\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a $\\text{maxid}\\leqslant r$ \u4e14 $\\text{minid}\\geqslant l$ \u7684\u70b9\n\n\u6211\u4eec $O(n)$ \u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u5230\u6839\u7684 $\\text{maxid}$ \u548c $\\text{minid}$ \u7136\u540e\u626b\u63cf\u7ebf\u5904\u7406 \u81f3\u4e8e\u56e0\u4e3a\u662f\u989c\u8272\u6570 \u53ef\u4ee5\u540c [P7880 [Ynoi2006] rldcot](https://www.luogu.com.cn/problem/P7880) \u8fdb\u884c\u5904\u7406 [\u849f\u84bb\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/hl2021hcj/solution-p7880)\n\n\u73b0\u5728\u6211\u4eec\u6709\u5904\u7406\u56fa\u5b9a\u6839\u7684 $O(siz\\log siz)$ \u7684\u65b9\u6cd5 $siz$ \u662f\u6811\u7684\u5927\u5c0f\n\n\u5982\u679c\u679a\u4e3e\u6bcf\u4e2a\u6839\u6700\u60b2\u60e8\u7684\u60c5\u51b5\u662f $O(mn\\log n)$ \u6709\u70b9\u560e \u5f88\u560e\n\n\u7531\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u4e2d\u4ee5 $x$ \u7684\u8fde\u901a\u5757\u4e2d\u4efb\u610f\u4e00\u4e2a\u70b9\u4e3a\u6839\u90fd\u662f\u53ef\u4ee5\u7684 \u6709\u70b9\u652f\u914d\u7684\u5473\u9053\n\n\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2a\u73a9\u610f\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u6839 \u4e14 $\\sum siz$ \u73c2\u4ee5\u63a5\u53d7\n\n\u8003\u8651\u7528\u70b9\u5206\u6cbb \u7531\u4e8e\u70b9\u5206\u6cbb\u7684\u5206\u6cbb\u6811\u4e00\u5171 $\\log n$ \u5c42\u7684\u7279\u70b9 \u6bcf\u5c42\u603b\u548c\u90fd\u662f $n$ \u8fd9\u6837 $\\sum siz=O(n\\log n)$ \u770b\u8d77\u6765\u5f88\u5f73\u4e8d\n\n\u6211\u4eec\u8003\u8651\u5177\u4f53\u5b9e\u73b0 \u5148\u5efa\u51fa\u70b9\u5206\u6cbb\u7684\u5206\u6cbb\u6811 \u7136\u540e\u6bcf\u4e2a\u8be2\u95ee\u627e $x$ \u6240\u5728\u8fde\u901a\u5757\u4e2d\u7684\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u6700\u9760\u4e0a\u7684\u90a3\u4e2a \u7136\u540e\u628a\u95ee\u9898\u6302\u5728\u90a3\u4e2a\u70b9\u4e0a \u7b49\u505a\u90a3\u4e2a\u70b9\u7684\u626b\u63cf\u7ebf\u7684\u65f6\u5019\u89e3\u51b3\u5373\u53ef\n\n\u4e3a\u4ec0\u4e48\u5c31\u662f\u5bf9\u7684\u5462 \u5047\u5982\u6709\u4e00\u90e8\u5206\u8fde\u901a\u5757\u4e2d\u70b9\u8fd8\u4e0d\u5728\u8fd9\u4e2a\u6211\u4eec\u627e\u5230\u7684\u6700\u9760\u4e0a\u7684\u70b9\u6240\u5904\u7406\u7684\u5b50\u8fde\u901a\u5757\u4e2d \u5219\u5728\u5916\u9762\u7684\u70b9\u5728\u5206\u6cbb\u6811\u4e0a\u7684\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u70b9\u7684 $\\text{lca}$ \u5728\u4e5f\u4e00\u5b9a\u5728\u8fde\u901a\u5757\u4e2d \u8fd9\u4e2a\u662f\u70b9\u5206\u6cbb\u7684\u95ee\u9898 \u753b\u4e2a\u56fe\u8fd8\u662f\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u7ed3\u8bba\u662f\u6bd4\u8f83\u663e\u7136\u7684 \n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86 \u679a\u4e3e\u6839 \u626b\u63cf\u7ebf \u590d\u6742\u5ea6 $O(n\\log^2 n+m\\log n)$\n\n\u4e3a\u4ec0\u4e48\u697c\u4e0a\u7684\u4ee3\u7801\u90fd\u90a3\u4e48\u77ed $\\text{qaq}$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read()\n{\n\tint x=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c<='9'&&c>='0')\n\t{\n\t\tx=(x<<1)+(x<<3)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x;\n}\nconst int N=1e5+3;\nstruct edge\n{\n\tint to;\n\tint nxt;\n}e[N<<1];\nint h[N],etot,dtot,n,w[N];\ninline void eadd(int x,int y)\n{\n\te[++etot].to=y;\n\te[etot].nxt=h[x];\n\th[x]=etot;\n}\nbool vis[N];\nint minn,rt,siz[N],tot,idmax[N],idmin[N];\nvoid find(int x,int fa)\n{\n\tsiz[x]=1;\n\tint maxsub=0;\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(e[i].to!=fa&&!vis[e[i].to])\n\t\t{\n\t\t\tfind(e[i].to,x);\n\t\t\tmaxsub=max(siz[e[i].to],maxsub);\n\t\t\tsiz[x]+=siz[e[i].to];\n\t\t}\n\t}\n\tmaxsub=max(maxsub,tot-siz[x]);\n\tif(maxsub<minn)\n\t{\n\t\tminn=maxsub;\n\t\trt=x;\n\t}\n}\nstruct divedge\n{\n\tint to,nxt;\n}de[N];\nint fa[N],hd[N],root,dep[N];\ninline void dadd(int x,int y)\n{\n\tfa[y]=x;\n\tde[++dtot].to=y;\n\tde[dtot].nxt=hd[x];\n\thd[x]=dtot;\n}\nstruct dak\n{\n\tint minid,maxid,rt;\n};\nvector<dak>v[N];\nvoid lxl(int x,int fa)\n{\n\tidmax[x]=max(x,idmax[fa]);\n\tidmin[x]=min(x,idmin[fa]);\n\tv[x].emplace_back((dak){idmin[x],idmax[x],rt});\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(!vis[e[i].to]&&e[i].to!=fa)\n\t\t{\n\t\t\tlxl(e[i].to,x);\n\t\t}\n\t}\n}\nvoid build(int x)\n{\n\tvis[x]=1;\n\tlxl(x,0);\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(!vis[e[i].to])\n\t\t{\n\t\t\ttot=siz[e[i].to];\n\t\t\tminn=siz[e[i].to];\n\t\t\tfind(e[i].to,x);\n\t\t\tdadd(x,rt);\n\t\t\tdep[rt]=dep[x]+1;\n\t\t\tbuild(rt);\n\t\t}\n\t}\n}\nint ans[N];\nstruct qes\n{\n\tint l,r,id;\n\tbool friend operator < (const qes a,const qes b)\n\t{\n\t\treturn a.l<b.l;\n\t}\n};\nvector<qes>q[N];\nstruct dot\n{\n\tint l,r;\n\tbool friend operator < (const dot a,const dot b)\n\t{\n\t\treturn a.l==b.l?a.r>b.r:a.l<b.l;\n\t}\n};\nint fw[N],cntfw;\nbool oked[N];\nvector<dot>col[N];\nvoid dfs(int x,int fa)\n{\n\tidmax[x]=max(x,idmax[fa]);\n\tidmin[x]=min(x,idmin[fa]);\n\tcol[w[x]].emplace_back((dot){idmin[x],idmax[x]});\n\tfw[++cntfw]=w[x];\n\tfor(int i=h[x];i;i=e[i].nxt)\n\t{\n\t\tif(e[i].to!=fa&&vis[e[i].to])dfs(e[i].to,x);\n\t}\n}\nstruct scan\n{\n\tint pos,r,dx;\n\tbool friend operator < (const scan a,const scan b)\n\t{\n\t\treturn a.pos<b.pos;\n\t}\n}line[N<<2];\nint ltot,top;\ndot stc[N];\nint t[N];\n#define lb x&-x\ninline void modify(int x,int dx)\n{\n\tfor(;x<=n;x+=lb)t[x]+=dx;\n}\ninline int query(int x)\n{\n\tint res=0;\n\tfor(;x;x-=lb)res+=t[x];\n\treturn res;\n}\ninline void ladd(int pos,int r,int dx)\n{\n\tline[++ltot].pos=pos;\n\tline[ltot].r=r;\n\tline[ltot].dx=dx;\n}\ninline void ins(int x)\n{\n\tsort(col[x].begin(),col[x].end());\n\ttop=0;\n\tfor(int i=0;i<col[x].size();i++)\n\t{\n\t\twhile(stc[top].r>=col[x][i].r&&top)--top;\n\t\tstc[++top]=col[x][i];\n\t}\n\tint lst=1;\n\tfor(int i=1;i<=top;i++)\n\t{\n\t\tladd(lst,stc[i].r,1);\n\t\tlst=stc[i].l+1;\n\t\tladd(lst,stc[i].r,-1);\n\t}\n}\ninline void solve(int x)\n{\n\tdfs(x,0);\n\tfor(int i=1;i<=cntfw;i++)\n\t{\n\t\tif(oked[fw[i]])continue;\n\t\toked[fw[i]]=1;\n\t\tins(fw[i]);\n\t}\n\tsort(q[x].begin(),q[x].end());\n\tsort(line+1,line+ltot+1);\n\tint cntq=0;\n\tfor(int i=1;i<=ltot;i++)\n\t{\n\t\tif(cntq<q[x].size())\n\t\twhile(q[x][cntq].l<line[i].pos)\n\t\t{\n\t\t\tans[q[x][cntq].id]=query(q[x][cntq].r);\n\t\t\tcntq++;\n\t\t\tif(cntq>=q[x].size())break;\n\t\t}\n\t\tmodify(line[i].r,line[i].dx);\n\t}\n\twhile(cntfw)\n\t{\n\t\tif(oked[fw[cntfw]])\n\t\t{\n\t\t\tcol[fw[cntfw]].clear();\n\t\t\toked[fw[cntfw]]=0;\n\t\t}\n\t\t--cntfw;\n\t}\n\tltot=0;\n}\nvoid div(int x)\n{\n\tvis[x]=0;\n\tif(!q[x].empty())solve(x);\n\tfor(int i=hd[x];i;i=de[i].nxt)div(de[i].to);\n}\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\t//freopen(\"out.txt\",\"w\",stdout);\n\tn=read();\n\tint m=read();\n\tidmax[0]=0;\n\tidmin[0]=n+1;\n\tfor(int i=1;i<=n;i++)w[i]=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x=read(),y=read();\n\t\teadd(x,y);\n\t\teadd(y,x);\n\t}\n\ttot=n;\n\tminn=n;\n\tfind(1,0);\n\troot=rt;\n\tbuild(rt);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint l=read(),r=read(),x=read();\n\t\tint idu=x,mindep=dep[x];\n\t\tfor(int j=0;j<v[x].size();j++)\n\t\t{\n\t\t\tif(dep[v[x][j].rt]<mindep&&v[x][j].minid>=l&&v[x][j].maxid<=r)\n\t\t\t{\n\t\t\t\tmindep=dep[v[x][j].rt];\n\t\t\t\tidu=v[x][j].rt;\n\t\t\t}\n\t\t}\n\t\tq[idu].emplace_back((qes){l,r,i});\n\t}\n\tdiv(root);\n\tfor(int i=1;i<=m;i++)printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1646829905,
        "uid": 223560,
        "name": "_HL_",
        "ccfLevel": 0,
        "title": "P5311 [Ynoi2011] \u6210\u90fd\u4e03\u4e2d \u9898\u89e3"
    },
    {
        "content": "\u672c\u6765\u4e00\u76f4\u5728\u60f3\u6309\u7167\u989c\u8272\u5927\u5c0f\u8003\u8651\u5efa\u865a\u6811\u7684\u3002\n\n\u7136\u540e\u7a81\u7136\u60f3\u5230\u4e86\u70b9\u5206\u6811\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u6811\u7684\u70b9\u5206\u6811\u7ed9\u5efa\u9020\u51fa\u6765\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u8054\u901a\u5757\uff0c\u663e\u7136\u4ed6\u4eec\u5728\u70b9\u5206\u6811\u4e0a\u7684\u6700\u6d45\u8282\u70b9\u552f\u4e00\u3002\uff08\u867d\u7136\u4ed6\u4eec\u53ef\u80fd\u5728\u70b9\u5206\u6811\u4e0a\u4e0d\u8fde\u901a\uff09\uff0c\u800c\u4e14\u4e00\u5b9a\u662f\u70b9\u5206\u6811\u4e0a\u7ed9\u51fa\u8282\u70b9\u7684\u67d0\u4e2a\u7236\u4eb2\uff08\u6216\u8005\u4ed6\u81ea\u5df1\uff09\n\n\u6211\u4eec\u5728\u627e\u5230\u6700\u6d45\u8282\u70b9\u4e4b\u540e\u8003\u8651\u8ba1\u7b97\u5f3a\u5236\u5305\u542b\u8fd9\u4e2a\u70b9\uff0c\u5e76\u4e14\u4e0d\u5305\u542b\u8fd9\u4e2a\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u7684\u65f6\u5019\uff0c\u5408\u6cd5\u533a\u95f4\u7684\u7b54\u6848(\u5176\u5b9e\u5305\u542b\u8fdb\u53bb\u4e5f\u6ca1\u6709\u5173\u7cfb\u56e0\u4e3a\u7b54\u6848\u4f1a\u5728\u4ed6\u7684\u7236\u4eb2\u4e0a\u88ab\u8ba1\u7b97)\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u4e0d\u540c\u989c\u8272\u5206\u5f00\u8003\u8651\u3002\n\n\u5bf9\u4e8e\u76f8\u540c\u7684\u989c\u8272\uff0c\u6211\u4eec\u53d1\u73b0\u5728\u628a\u533a\u95f4\u770b\u6210\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9\u7684\u65f6\u5019\uff0c\u8fd9\u79cd\u989c\u8272\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u82e5\u5e72\u4e2a\u77e9\u5f62\u7684\u9762\u79ef\u5e76\u3002\n\n\u5728\u641e\u51fa\u77e9\u5f62\u9762\u79ef\u5e76\u4e4b\u540e\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u65f6\u95f4\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a$O(nlog^{2}n)$",
        "postTime": 1552747662,
        "uid": 33736,
        "name": "\u5927\u5934",
        "ccfLevel": 10,
        "title": "ynoi2019\u6a21\u62df\u8d5bT3"
    }
]