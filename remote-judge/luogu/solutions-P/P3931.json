[
    {
        "content": "# P3931 SAC E#1 - \u4e00\u9053\u96be\u9898 Tree   \n\n------\n\n# \u5199\u5728\u524d\u9762\n\nlovny(YKJ):\u7528\u6811\u5f62DP\u5440\uff1f\n\nVenus(LYT):\u8fd8\u5728\u505a\u7f51\u7edc\u6d41\uff1f\n\n\u3002\u3002\u3002\n\n\u6ca1\u5fc5\u8981\uff01\u5b8c\u5168\u6ca1\u5fc5\u8981\uff01\u8fd9\u9053\u9898DFS\u5c31\u591f\u4e86\uff01\n\n# \u601d\u8def\n\n\u5f88\u660e\u663e\uff0c\u8981\u4f7f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u4e0d\u4e86\u7956\u5148\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff1a\n\n> \u4ed6\u7684\u67d0\u4e2a\u7956\u5148\u5230\u4e0d\u4e86\u6839\u8282\u70b9\n>\n> \u5b83\u7236\u4eb2->\u5b83 \u5220\u4e86\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u904d\u5386\u4e00\u904d\u6811\u3002\n\nDFS( x, fa ) = $\\Sigma$min(DFS( i, x ) ( \u5b58\u5728\u8fb9x->i), val(x->i) )\n\nfa\u662f\u4e3a\u4e86\u907f\u514d\u641c\u5230\u7236\u4eb2\u8282\u70b9\u3002\n\n\u82e5x\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56deINF\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8981\u4e48\u65ad\u5f00x->i\u8ba9i\u5230\u4e0d\u4e86\u6839\u8282\u70b9\uff0c\u4e0b\u9762\u5c31\u4e0d\u7528\u518d\u5220\u8fb9\u4e86\uff0c\u8981\u4e48\u8ba9i\u5230\u7684\u4e86\u6839\u8282\u70b9\uff0c\u5728\u4e0b\u9762\u67d0\u5904\u518d\u65ad\u5f00\u3002\n\n\u4ed6\u6ca1\u8bf4c\u7684\u8303\u56f4\uff0c\u4fdd\u9669\u8d77\u89c1\u5f00long long\n\n\u4ee3\u7801\u5f88\u77ed\u3002\u3002\u3002\u771f\u7684\u5f88\u77ed\u3002\u3002\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define open(s) freopen( s\".in\", \"r\", stdin ), freopen( s\".out\", \"w\", stdout )\n#define MAXN 100005\n#define MAXM 200005\n#define LL long long\n\nint n, S;\nint hd[MAXN], to[MAXM], nxt[MAXM], tot(1);\nLL val[MAXM];\n\nvoid Add( int x, int y, int z ){\n\tnxt[++tot] = hd[x]; hd[x] = tot; val[tot] = z; to[tot] = y;\n\tnxt[++tot] = hd[y]; hd[y] = tot; val[tot] = z; to[tot] = x;\n}\n\nLL DFS( int x, int fa ){\n\tLL ans(0); bool flg(0);\n\tfor ( int i = hd[x]; i; i = nxt[i] )\n\t\tif ( to[i] != fa ) ans += min( DFS( to[i], x ), val[i] ), flg = 1;\n\tif ( !flg ) return LONG_LONG_MAX;\n\treturn ans;\n}\n\nint main(){\n\tscanf( \"%d%d\", &n, &S );\n\tfor ( int i = 1; i < n; ++i ){\n\t\tint x, y; LL z;\n\t\tscanf( \"%d%d%lld\", &x, &y, &z );\n\t\tAdd( x, y, z );\n\t}\n\tprintf( \"%lld\\n\", DFS( S, S ) );\n\treturn 0;\n}\n```\n\n",
        "postTime": 1545132075,
        "uid": 70786,
        "name": "_louhc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "\u5514\u55ef\uff0c\u53ea\u662f\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u601d\u8def\u3002\n\n\u968f\u673a\u8df3\u9898\u8df3\u5230\u4e86\u8fd9\u9898\uff0c\u89c9\u5f97\u6709\u70b9\u610f\u601d\u5c31\u82b1\u4e86$3min$\u7ed9$A$\u6389\u4e86\uff0c\u5e76\u4e14\u4f3c\u4e4e\u662f\u4e2a\u6ca1\u4eba\u5199\u8fc7\u7684\u601d\u8def\u2026\u2026\uff1f\n\n\u9898\u76ee\u610f\u601d\u5c31\u662f\u8ba9\u4ece\u6839\u5230\u6bcf\u4e2a\u53f6\u5b50\u7684\u8def\u5f84\u4e0a\u6709\u81f3\u5c11\u4e00\u6761\u8fb9\u88ab\u5272\u3002\u90a3\u4e48\u4e0d\u59a8\u8bbe\u8ba1\u4e00\u4e2azz\u72b6\u6001$f_i$\uff0c$f_i$\u8868\u793a\u524d$i$\u4e2a\u53f6\u5b50\u88ab\u5272\u5b8c\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u8f6c\u79fb\u7684\u65f6\u5019\u8003\u8651\u501f\u52a9$dfs$\u5e8f\u3002\u5982\u679c$dfn_x=dfn_{fa_x}+sz_{fa_x}-1$\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u662f\u672c\u5b50\u6811\u5185$dfs$\u5e8f\u6700\u9760\u540e\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u6709\u8f6c\u79fb\n\n$$f_i=f_{i-ctn_{fa_x}}+cost_{fa_x}$$\n\n\u5176\u4e2d$cost_x$\u8868\u793a\u4e0e$fa_x$\u95f4\u8fde\u8fb9\u7684$val$\uff0c$ctn_x$\u8868\u793a$x$\u5b50\u6811\u5185\u6709\u591a\u5c11\u53f6\u5b50\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5220\u6389$fa$\u6765\u641e\u6389\u8fd9\u6574\u68f5\u5b50\u6811\u3002\u540c\u7406\u6211\u4eec\u53ef\u4ee5\u4e0d\u65ad\u627e\u6df1\u5ea6\u66f4\u5c0f\u7684\u7956\u5148\uff0c\u65b9\u6cd5\u4e5f\u5927\u4f53\u7c7b\u4f3c\u3002\n\n\u4e0b\u9762\u8bf4\u4e00\u4e0b\u805a\u5408\u5206\u6790\u51fa\u6765\u7684\u590d\u6742\u5ea6\u3002\u4e0d\u59a8\u4ee4$end_x$\u8868\u793a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u5185$dfn$\u5e8f\u6700\u5927\u7684\u70b9\uff0c\u5982\u679c$end_x=end_{fa_x}$\u90a3\u4e48\u6211\u4eec\u4ee4$end_x=x$\uff0c\u540c\u65f6\u4ee4$ofa(end_x)=x$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a$x$\u90fd\u6709\u552f\u4e00\u7684$end_x$\uff0c\u4e5f\u53ea\u4f1a\u5728\u904d\u5386\u5230$end_x$\u7684\u65f6\u5019\u4f1a\u5411\u4e0a\u56de\u6eaf\u5230$x$\uff0c\u90a3\u4e48\u603b\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(n+\\sum({dep_x-dep_{end_x}}))$\u3002\u8003\u8651\u540e\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\uff0c\u5728\u540c\u4e00\u68f5\u5927\u5b50\u6811\u5185\uff0c\u6700\u52a3\u7684\u60c5\u51b5\u663e\u7136\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u90fd\u8981\u5411\u4e0a\u8df3\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u53ea\u4f1a\u53d1\u751f\u5728\u4e0b\u4e00\u4e2a\u53f6\u5b50\u7684$ofa$\u6070\u662f\u4e0a\u4e00\u4e2a\u53f6\u5b50\u7684$ofa$\u7684$fa$\u3002\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u8df3$1$\uff0c\u7b2c\u4e8c\u4e2a\u8df3$2$\u2026\u2026\u6ce8\u610f\u8fd9\u6837\u6700\u591a\u8df3$\\sqrt n$\u6b21\uff0c\u6240\u4ee5\u7b2c\u4e8c\u90e8\u5206\u7684\u590d\u6742\u5ea6\u5c31\u662f$1+2+3\\cdots+\\sqrt n=O(n)$\uff08\u7c7b\u4f3c\u5361\u957f\u94fe\u5256\u5206\u7684\u90a3\u79cd\u6811\uff09\u3002\n\n\u4e8e\u662f\u6700\u540e\u7684\u590d\u6742\u5ea6\u4e3a$O(n)+O(n)$.\n\n233\u5c31\u5f53\u987a\u4fbf\u7ec3\u7ec3\u590d\u6742\u5ea6\u5206\u6790\u4e86\u3002\n\n```cpp\nvoid dfs(int u, int fr){\n\tbool fg = 1 ;\n\tdfn[u] = ++ Id, sz[u] = 1, fa[u] = fr ;\n\tfor (int k = head[u] ; k ; k = next(k)){\n\t\tif (to(k) == fr) continue ;\n\t\tfg = 0, cost[to(k)] = val(k) ;\n\t\tdfs(to(k), u), sz[u] += sz[to(k)], ctn[u] += ctn[to(k)] ; \n\t}\n\tif (fg) Ls[++ tot] = u, ctn[u] = 1 ;\n}\nint main(){\n\tcin >> N >> rt ; int i, j, u, v ;\n\tfor (i = 1 ; i < N ; ++ i) \n\t\tu = qr(), v = qr(), j = qr(), add(u, v, j) ; \n\tdfs(rt, 0) ; \n\tfor (i = 1 ; i <= tot ; ++ i){\n\t\tint n = Ls[i], nid = dfn[n] ; \n\t\tf[i] = f[i - 1] + cost[Ls[i]] ; \n\t\twhile (fa[n]){\n\t\t\tif (fa[n] != rt && nid == dfn[fa[n]] + sz[fa[n]] - 1) \n\t\t\t\tf[i] = min(f[i], f[i - ctn[fa[n]]] + cost[fa[n]]) ; \n\t\t\telse break ;\n\t\t\tn = fa[n] ;\n\t\t}\n\t}\n\tcout << f[tot] << endl ; return 0 ;\n}\n```\n\n\n",
        "postTime": 1573023276,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "**\u7f51\u7edc\u6d41\u505a\u6cd5**\n\n\u8fd9\u662f\u4e2a\u6700\u5c0f\u5272\u95ee\u9898\uff0c\u90a3\u4e48\u5c31\u5bf9\u5e94\u7684\u7528\u6700\u5927\u6d41\u505a\u6cd5\u3002\n\n\u6bcf\u4e00\u6761\u8fb9\u90fd\u5bf9\u5e94\u7684\u4e00\u4e2a\u6743\u503c\uff0c\u5bf9\u5176\u5efa\u7acb\u7f51\u7edc\u6d41\u6a21\u578b\uff0c\u8dd1\u4e00\u904dDinic\u5c31\u662f\u7b54\u6848\u3002\n\n[Youngsc](https://youngscc.github.io/)\n\n## \u4ee3\u7801\u8fd9\u91cc\n\n```cpp\n# include <algorithm>\n# include <iostream>\n# include <cstring>\n# include <cstdio>\n# include <queue>\n# include <cmath>\n# define R register\n# define LL long long\n# define inf 2000101900\n\nusing namespace std;\n\nint n,root,x,y,z,h[100010],v[100010],used[100010],e=-1,t,ans;\nstruct zx{int v,flow,pre;}ed[300010];\nqueue <int> q;\n\ntemplate <typename T> void in(R T& a){\n    R T x=0,f=1; R char c = getchar();\n    while(!isdigit(c)){if(c == '-') f=-1; c = getchar();}\n    while(isdigit(c)) x = (x<<1)+(x<<3)+c-'0',c = getchar();\n    a = x*f;\n}\n\ntemplate <typename T> void maxx(R T &a,const T b){a>b? 0:a=b;}\ntemplate <typename T> void minn(R T &a,const T b){a<b? 0:a=b;}\n\ninline void add(R int x,R int y,R int z){\n    ed[++e] = (zx){y,z,h[x]};\n    h[x] = e;\n}\n\ninline void dfs(R int x,R int fa){\n    R bool flag = 0;\n    for(R int i=h[x]; i!=-1; i=ed[i].pre)\n        if(fa != ed[i].v) flag = 1,dfs(ed[i].v,x),ed[i^1].flow = 0;\n    if(!flag) add(x,t,inf),add(t,x,0);\n}\n\ninline bool bfs(){\n    memset(v,0,sizeof(v));\n    v[root] = 1;\n    q.push(root);\n    while(!q.empty()){\n        R int x = q.front();\n        q.pop();\n        for(R int i=h[x]; i!=-1; i=ed[i].pre)\n        {\n            R int p = ed[i].v;\n            if(v[p]||!ed[i].flow) continue;\n            v[p] = v[x]+1;\n            q.push(p);\n        }\n    }\n    return v[t];\n}\n\ninline int maxflow(R int x,R int want){\n    if(!want||x == t) return want;\n    R int flow = 0;\n    for(R int i=used[x]; i!=-1; i=ed[i].pre,used[x]=i)\n    {\n        R int p = ed[i].v;\n        if(v[p] == v[x]+1&&ed[i].flow)\n        {\n            R int f = maxflow(p,min(want,ed[i].flow));\n            if(!f) continue;\n            want -= f;\n            flow += f;\n            ed[i].flow -= f;\n            ed[i^1].flow += f;\n        }\n    }\n    return flow;\n}\n\nint main(){\n    memset(h,-1,sizeof(h));\n    in(n),in(root);\n    t = n+1;\n    for(R int i=1; i<n; ++i) in(x),in(y),in(z),add(x,y,z),add(y,x,z);\n    dfs(root,-1);\n    while(bfs()){\n        memcpy(used,h,sizeof(h));\n        ans += maxflow(root,inf);\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1508727873,
        "uid": 36282,
        "name": "Youngsc",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "# \u6ca1\u6709EK\u7684\u8bdd ~~\u6211\u6765\u6c34\u4e00\u6ce2qwq~~\n\n**[\u9898\u610f](https://www.luogu.org/problemnew/show/P3931):\u7ed9\u51fa\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u6240\u6709\u8fb9\u90fd\u6709\u503c\u3002\u5982\u679c\u53d6\u8d70\u8fb9\u4e0a\u7684\u503c\u5c31\u80fd\u4f7f\u8fb9\u6d88\u5931\uff0c\u8981\u6c42\u53d6\u6700\u5c0f\u7684\u6570\u4f7f\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u4e0e\u6839\u5206\u79bb\u3002**\n\n\u7531\u4e8e\u6700\u8fd1\u5728\u5b66\u7f51\u7edc\u6d41\uff0c\u5c31\u4e0d\u7528dfs\u4e86\u3002~~\uff08\u6211\u8fd8\u5495\u4e86\u597d\u4e45\uff09~~**[$\\color{red}\\text{\u63a8\u8350blog}$](https://blog.csdn.net/qq_41357771/article/details/79416899) \u7ed3\u8bba\uff1a\u6700\u5c0f\u5272\u95ee\u9898\u7528\u6700\u5927\u6d41\u89e3**\n\n\u5206\u6790\uff1a\u5982\u679c\u518d\u7ed9\u4e00\u4e2an+1\u7684\u70b9\u4f5c\u4e3a\u7f51\u7edc\u6d41\u7684\u6c47\u70b9\uff0c\u8fde\u63a5\u53f6\u5b50\u7ed3\u70b9\u5c31\u5927\u81f4\u80fd\u6784\u9020\u51fa\u4e00\u4e2a\u7f51\u7edc\u6d41\uff0c\u90a3\u5c31\u662f\u88f8\u7684\u6700\u5c0f\u5272\u95ee\u9898\u4e86\u3002\n\n\n\n------------\n\n\n\n\n### \u90a3\u4e48\u5b58\u5728\u51e0\u4e2a\u95ee\u9898\uff1a\n\n1\u3001\u6811\u662f\u65e0\u5411\u56fe\uff0c\u800c\u7f51\u7edc\u6d41\u662f\u6709\u5411\u56fe\uff0c\u600e\u4e48\u5224\u65ad\u65b9\u5411\u5462\uff1f\n\n2\u3001\u600e\u4e48\u5224\u65ad\u53f6\u5b50\u7ed3\u70b9\u5462\uff1f\n\n------------\n\n\n1\u3001\u6211\u4eec\u5148\u4e0d\u8981\u7ed9\u8fb9\u8d4b\u503c\uff0c\u5148\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u7b49\u5224\u65ad\u540e\u518d\u7ed9\u6b63\u5411\u8fb9\u8d4b\u503c\u3002\n\n2\u3001\u5224\u65ad\u53f6\u5b50\u7ed3\u70b9\u53ea\u9700\u5728\u5224\u65ad\u65b9\u5411\u540e\u7528\u6570\u7ec4$value[]$\u5b58\u5165**\u4f5c\u4e3a\u8fb9\u7684\u8d77\u59cb\u70b9\u7684\u6b21\u6570**\n\n--\u90a3\u600e\u4e48\u5224\u65ad\u65b9\u5411\u5462\uff1f\n\n--\u628a\u56fe\u5efa\u51fa\u6765\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u6811\u7684\u65b9\u5411\u5c31\u662f\u4ece\u6839\u5230\u53f6\u5b50\u7ed3\u70b9\uff0c\u7528\u4e00\u904d$dfs$\u786e\u5b9a$value$\u5c31\u884c\u4e86\n\n## \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nbool qwq[N];\nint pd[N],value[N];\nvoid dfs(int x)//\u4ece\u6839\u5f00\u59cb\u5f00\u59cb\n{\n    qwq[x]=1; //\u6807\u8bb0\u904d\u5386\u8fc7\n    for(ri i=head[x];i;i=edge[i].nex)\n    {\n        if(qwq[edge[i].v]==1) continue; //\u9632\u6b62\u53cd\u5411\u904d\u5386\n        dfs(edge[i].v); //\u641c\u4e0b\u4e00\u4e2a\u70b9\n        pd[x]++; //\u4f5c\u4e3a\u8fb9\u7684\u8d77\u59cb\u70b9\u7684\u6b21\u6570+=1\n        edge[i].val=value[i|1]; //\u7ed9\u6b63\u5411\u8fb9\u8d4b\u503c\uff08value\u7684\u5b58\u5165\u987a\u5e8f\u89c1\u4e0b\u65b9\u4ee3\u7801\uff09\n    }\n}\n```\n\n### \u7136\u540e\u8fde\u63a5\u53f6\u5b50\u7ed3\u70b9\u548cn+1:\n\n```cpp\nfor(ri i=1;i<=n;++i) if(pd[i]==0) add(i,t,inf),add(t,i,0);\n```\n\n\n\n------------\n\n## \u5b8c\u6574\u5efa\u56fe:\n\n```cpp\nint n,s,t;\nbool qwq[N];\nint head[N],value[N],tot=1;\nstruct Edge{int u,v,val,nex;}edge[N<<1];\nint pd[N];\nint gi()\n{\n    int s=0;char ch=getchar();\n    while(!(ch>='0'&&ch<='9')) ch=getchar();\n    while(ch>='0'&&ch<='9') {s=s*10+ch-'0';ch=getchar();}\n    return s;\n}\nvoid add(int u,int v,int val)\n{\n    edge[++tot].u=u;\n    edge[tot].v=v;\n    edge[tot].val=val;\n    edge[tot].nex=head[u];\n    head[u]=tot;\n}\nvoid dfs(int x)\n{\n    qwq[x]=1;\n    for(ri i=head[x];i;i=edge[i].nex)\n    {\n        if(qwq[edge[i].v]==1) continue;\n        dfs(edge[i].v);\n        pd[x]++;\n        edge[i].val=value[i|1];//\u5982\u679ci=2\uff0c\u90a3\u4e48\u53cd\u5411\u8fb9\u662fedge[3],\u6b63\u5411\u8fb9edge[2].val=value[3]\n    }\n}\nint main()\n{\n    n=gi(),s=gi(),t=n+1;\n    for(ri i=1;i<=n-1;++i)\n    {\n        int u=gi(),v=gi();\n        add(u,v,0);\n        add(v,u,0);\n        value[tot]=gi();//tot=3,5,7\n    }\n    dfs(s);\n    for(ri i=1;i<=n;++i) if(pd[i]==0) add(i,t,inf),add(t,i,0);\n}\n```\n\n## \u6700\u540e\u5957EK\u6a21\u677f\u5c31\u884c\u4e86\uff08\u662f\u4e0d\u662f\u5f88\u5bb9\u6613\uff09\n\n\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<queue>\n#define ri register int\nusing namespace std;\nconst int N = 2e5;\nconst int inf = 1<<30;\nint n,s,t;\nbool qwq[N];\ninline int gi()\n{\n    int s=0;char ch=getchar();\n    while(!(ch>='0'&&ch<='9')) ch=getchar();\n    while(ch>='0'&&ch<='9') {s=s*10+ch-'0';ch=getchar();}\n    return s;\n}\ninline int min(int a,int b){if(a<b) return a;return b;}\nint head[N],value[N],tot=1;\nstruct Edge{int u,v,val,nex;}edge[N<<1];\nint pd[N];\ninline void add(int u,int v,int val)\n{\n    edge[++tot].u=u;\n    edge[tot].v=v;\n    edge[tot].val=val;\n    edge[tot].nex=head[u];\n    head[u]=tot;\n}\nbool vis[N];\nstruct Pre{int v/*\u524d\u4e00\u4e2a\u70b9*/,e/*\u76f8\u8fde\u7684\u8fb9*/;}pre[N];\ninline bool BFS()//\u627e\u589e\u5e7f\u8def\n{\n    queue<int>q;\n    for(ri i=1;i<=n;++i) pre[i].v=pre[i].e=-1;\n    for(ri i=1;i<=n;++i) vis[i]=0;\n    vis[s]=1;\n    q.push(s);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(ri i=head[u];i;i=edge[i].nex)\n        {\n            int v=edge[i].v;\n            if(vis[v]==0&&edge[i].val>0)\n            {\n                pre[v].v=u,pre[v].e=i;\n                if(v==t) return 1;\n                vis[v]=1;\n                q.push(v);\n            }\n        }\n    }\n    return 0;\n}\ninline int EK()\n{\n    int ans=0;\n    while(BFS())\n    {\n        int minn=inf;\n        for(ri i=t;i!=s;i=pre[i].v) minn=min(minn,edge[pre[i].e].val);\n        for(ri i=t;i!=s;i=pre[i].v)\n        {\n            edge[pre[i].e].val-=minn;\n            edge[pre[i].e^1].val+=minn;\n        }\n        ans+=minn;\n    }\n    return ans;\n}\ninline void dfs(int x)\n{\n    qwq[x]=1;\n    for(ri i=head[x];i;i=edge[i].nex)\n    {\n        if(qwq[edge[i].v]==1) continue;\n        dfs(edge[i].v);\n        pd[x]++;\n        edge[i].val=value[i|1];\n    }\n}\nint main()\n{\n    n=gi(),s=gi(),t=n+1;\n    for(ri i=1;i<=n-1;++i)\n    {\n        int u=gi(),v=gi();\n        add(u,v,0);\n        add(v,u,0);\n        value[tot]=gi();\n    }\n    dfs(s);\n    for(ri i=1;i<=n;++i) if(pd[i]==0) add(i,t,inf),add(t,i,0);\n    printf(\"%d\",EK());\n}\n```\n\n\n\n\n\n\n",
        "postTime": 1563170986,
        "uid": 81366,
        "name": "TLEphage",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "\u6811\u5f62dp\u3002\n\n\n\u5bf9\u4e8e\u4e00\u68f5\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u8981\u4e48\u5272\u6389i\u4e0e\u5b83\u7236\u4eb2\u7684\u90a3\u4e00\u6761\u8fb9\uff0c\u8981\u4e48\u5c31\u662f\u5728i\u7684\u513f\u5b50\u4e2d\u9009\u62e9\u8fb9\u5272\u6389\u3002\u4e8e\u662f\u95ee\u9898\u53c8\u8f6c\u5316\u4e3ai\u7684\u513f\u5b50\u7684\u6700\u5c0f\u4ef7\u503c\u3002\n\n\n\u8bbedp[i]\u8868\u793a\u6839\u8282\u70b9\u4e3ai\u7684\u5b50\u6811\u5272\u8fb9\u7684\u4ef7\u503c\uff0c\u5219\n\n\ndp[i]=min(e[i],dp[a]+dp[b]+dp[c]+....)(e[i]\u8868\u793ai\u4e0e\u5b83\u7236\u4eb2\u7684\u8fde\u8fb9\u7684\u6743\u503c\uff0ca,b,c...\u8868\u793ai\u7684\u513f\u5b50\u8282\u70b9)\u3002\n\n\n\u7b54\u6848\u4e3adp[c]\uff08c\u4e3a\u6574\u68f5\u6811\u7684\u6839\uff09\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,rt,cnt,head[100010],dp[100010];\nstruct edge{\n    int to,dis,nxt;\n}e[100010<<1];\nvoid dfs(int u,int en,int fa){\n    int sum=0;\n    for(int i=head[u];i;i=e[i].nxt)\n    if(e[i].to!=fa){\n        dfs(e[i].to,i,u);\n        sum+=dp[e[i].to];\n    }\n    dp[u]=e[en].dis;\n    if(sum&&sum<dp[u])dp[u]=sum;\n}\nint main(){\n    cnt=0;\n    memset(head,0,sizeof head);\n    scanf(\"%d%d\",&n,&rt);\n    for(int i=1;i<n;++i){\n        int u,v,t;\n        scanf(\"%d%d%d\",&u,&v,&t);\n        e[++cnt]=(edge){v,t,head[u]};\n        head[u]=cnt;\n        e[++cnt]=(edge){u,t,head[v]};\n        head[v]=cnt;\n    }\n    e[0].dis=0x3f3f3f3f;\n    memset(dp,0x3f,sizeof dp);\n    dfs(rt,0,0);\n    printf(\"%d\\n\",dp[rt]);\n    return 0;\n}\n```\n[blog](http://www.cnblogs.com/Mrsrz/p/7665390.html)\n",
        "postTime": 1507939906,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "## [~~\u5706~~\u539f\u9898\u9762](https://www.luogu.org/problemnew/show/P3931)\n\n\u6211\u73af\u987e\u56db\u5468\uff0c\u53d1\u73b0\u5927\u4f6c\u4eec\u7684\u5199\u6cd5\u90fd\u597d\u9ad8\u7aef\uff01\n\n\u6bd4\u8f83\u5dee\u52b2\u7684\u6211\uff0c\u53ea\u80fd\u4ea4\u4e0a\u4e00\u4efd**DFS**\u7684\u9898\u89e3\n\n## \u601d\u8def\uff1a\n\n### DFS\uff08\u5f53\u7136\u4e86\uff0c\u5176\u4ed6\u7b97\u6cd5\u4e5f\u884c\uff09\n\n\u8981\u60f3\u5207\u65ad**\u53f6\u5b50\u8282\u70b9**\u5230**\u6839\u8282\u70b9**\u7684\u8fde\u63a5\n\n\u5c31\u662f\u5728**\u53f6\u5b50\u8282\u70b9**\u548c**\u6839\u8282\u70b9**\u4e4b\u95f4\u780d\u6389\u4e00\u6761\u8fb9\n\n\u8fd9\u660e\u663e\u5c31\u5f88\u7b26\u5408**DFS**\u7684\u6027\u8d28\uff0c\u4e00\u6761\u8def\u4e00\u76f4\u8d70\u4e0b\u53bb\uff0c\u9047\u5230\u5206\u679d\u5c31\u5206\u5f00\u8d70\n\n\u4e8e\u662f\u6211\u4eecDFS\u6bcf\u4e00\u6761\u8def\u5f84\uff0c\u7136\u540e\u6c42\u7b54\u6848\n\n\u590d\u6742\u5ea6\u4e3a`O(n)`\n\n### \u4f46\u662f\u2014\u2014\u8fd8\u6ca1\u5b8c\uff01\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0DFS\u6709\u4e09\u79cd\u60c5\u51b5\n\n1\u3001\u8be5\u8282\u70b9\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u6b64\u65f6\u53ea\u80fd\u5220\u53bb\u8fde\u63a5\u5b83\u548c\u7236\u8282\u70b9\u7684\u8fb9\n\n2\u3001\u8be5\u8282\u70b9\u4e3a\u679d\u8282\u70b9\uff0c\u6709\u7236\u8282\u70b9\u548c\u5b50\u8282\u70b9\uff0c\u9700\u8981\u9009\u62e9\u6027\u7684\u5220\u9664\n\n3\u3001\u8be5\u8282\u70b9\u4e3a\u6839\u8282\u70b9\uff0c\u53ea\u6709\u5b50\u8282\u70b9\uff0c\u53ea\u80fd\u5220\u53bb\u8fde\u63a5\u5b83\u548c\u5b50\u8282\u70b9\u7684\u8fb9\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x7f7f7f7f\nusing namespace std;\nstruct node{\n\tint to,cost;\n\tint nxt;\n\tnode(int a,int b):to(a),cost(b){\t}\n\tnode(){\t}\n}b[200010];\nint n,t,r;\nint head[100010];\nint read()\n{\n\tint s=0;\n\tchar c=getchar();\n\twhile(!isdigit(c))\n\t\tc=getchar();\n\twhile(isdigit(c))\n\t{\n\t\ts=(s<<1)+(s<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s;\n}\nvoid add(int x,int y,int cost)//\u5efa\u8fb9\n{\n\tb[++t]=node(y,cost);\n\tb[t].nxt=head[x];\n\thead[x]=t;\n\tb[++t]=node(x,cost);\n\tb[t].nxt=head[y];\n\thead[y]=t;\n\treturn;\n}\nint Get(int k,int in)\n{\n\tint i;\n\tint res=0;\n\tfor(i=head[k];i;i=b[i].nxt)\n\t\tif(i!=(in^1))//\u6210\u5bf9\u53d8\u6362\u539f\u7406\uff0c\u5f02\u6216\u503c\u76f8\u540c\u4f46\u65b9\u5411\u76f8\u53cd\u7684\u8fb9\u4e3a\u4e00\u7ec4\uff0c\u907f\u514d\u91cd\u590d\n\t\t\tres+=Get(b[i].to,i);\n\tif(!b[head[k]].nxt&&k!=r)//\u786e\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\n\t\tres=b[in].cost;\n\telse\n\t\tres=min(res,b[in].cost);//\u5426\u5219\u4e24\u79cd\u65b9\u6cd5\u9009\u5176\u4e00\n\treturn res;\n}\nint main()\n{\n\tint i;\n\tint x,y,cost;\n\tn=read();r=read();\n\tt=1;//\u521d\u59cb\u8d4b1\uff0c\u5229\u4e8e\u6210\u5bf9\u53d8\u6362\n\tfor(i=1;i<n;i++)\n\t{\n\t\tx=read();y=read();cost=read();\n\t\tadd(x,y,cost);\n\t}\n\tb[0].cost=INF;//\u5bf9\u4e8e\u6839\u8282\u70b9\u7684\u53cc\u91cd\u4fdd\u9669\uff0c\u9632\u6b62\u51fa\u4ec0\u4e48\u5c94\u5b50\uff0c\u6bd4\u5982\u7ed3\u679c\u4e3a0\n\tprintf(\"%d\",Get(r,0));\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1545134024,
        "uid": 83564,
        "name": "hovny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e00\u68f5\u6709\u6839\u6811\uff0c\u6811\u4e0a\u6bcf\u6761\u8fb9\u90fd\u5e26\u6743\uff0c\u6c42\u51fa\u4e00\u4e2a\u5272\u8fb9\u96c6\uff0c\u4f7f\u5f97\u7ed9\u96c6\u5408\u4e2d\u8fb9\u6743\u4e4b\u548c\u6700\u5c0f\n\n\u770b\u5b8c\u9898\u53d1\u73b0\u5c31\u662f\u4e2a \u6700\u5c0f\u5272/\u6700\u5927\u6d41\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9 $t$ \uff0c\u5e76\u8ba9\u6240\u6709\u53f6\u5b50\u8282\u70b9\u5411 $t$ \u8fde\u4e00\u6761\u8fb9\uff0c\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41\n\n\u8fc7\u4e86\u6837\u4f8b\uff0c\u63d0\u4ea4 $0$ \u5206\u3002\u3002\u3002\n\n\u56de\u6765\u68c0\u67e5\u53d1\u73b0 \u6811\u4e2d\u7684\u65e0\u5411\u8fb9\u88ab\u6211\u5904\u7406\u6210\u6709\u5411\u8fb9\u4e86\u3002  \n\u6b63\u89e3\u5e94\u8be5\u662f\u5148\u5b58\u8fdb\u53cc\u5411\u8fb9\uff0c\u5c06\u6811\u7528 $dfs$ \u904d\u5386\u6210\u6709\u6839\u6811\u7ed3\u6784\u540e\u518d\u52a0\u8fb9\uff0c\u987a\u4fbf\u518d $dfs$ \u4e2d\u5bfb\u627e\u53f6\u5b50\u8282\u70b9\n\n\n#### \u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<cstring>\n#include<vector>\nusing namespace std;\nconst int Maxn=100000+10,Maxm=400000+10,inf=0x3f3f3f3f;\nstruct edge{\n\tint v,len;\n\tedge(int x,int y)\n\t{\n\t\tv=x,len=y;\n\t}\n};\nvector <edge> e[Maxn];\nint nxt[Maxm],to[Maxm],flow[Maxm];\nint head[Maxn],d[Maxn];\nint n,s,t,edgecnt=1,ans;\ninline void add(int x,int y,int c)\n{\n\t++edgecnt;\n\tnxt[edgecnt]=head[x];\n\tto[edgecnt]=y;\n\tflow[edgecnt]=c;\n\thead[x]=edgecnt;\n}\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0' && ch<='9')s=(s<<3)+(s<<1)+(ch^48),ch=getchar();\n\treturn s*w;\n}\nvoid dfs(int x,int fa)\n{\n\tbool flag=0;\n\tfor(int i=0;i<e[x].size();++i)\n\t{\n\t\tint y=e[x][i].v;\n\t\tif(y==fa)continue;\n\t\tflag=1;\n\t\tadd(x,y,e[x][i].len);\n\t\tadd(y,x,0);\n\t\tdfs(y,x);\n\t}\n\tif(!flag) // \u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\n\t{\n\t\tadd(x,t,inf);\n\t\tadd(t,x,0);\n\t}\n}\nbool bfs()\n{\n\tqueue <int> q;\n\tmemset(d,0,sizeof(d));\n\td[s]=1,q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=to[i];\n\t\t\tif(d[y] || !flow[i])continue;\n\t\t\td[y]=d[x]+1;\n\t\t\tif(y==t)return 1;\n\t\t\tq.push(y);\n\t\t}\n\t}\n\treturn 0;\n}\nint dinic(int x,int cur)\n{\n\tif(x==t)return cur;\n\tint ret=cur;\n\tfor(int i=head[x];i && ret;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(d[y]!=d[x]+1 || !flow[i])continue;\n\t\tint tmp=dinic(y,min(ret,flow[i]));\n\t\tif(!tmp)d[y]=0;\n\t\tflow[i]-=tmp,flow[i^1]+=tmp,ret-=tmp;\n\t}\n\treturn cur-ret;\n}\nint main()\n{\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tn=read(),s=read();\n\tt=n+1;\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint x=read(),y=read(),c=read();\n\t\te[x].push_back(edge(y,c));\n\t\te[y].push_back(edge(x,c));\n\t}\n\tdfs(s,0);\n\t\n\tint tmp=0;\n\twhile(bfs())\n\twhile(tmp=dinic(s,inf))ans+=tmp;\n\tprintf(\"%d\\n\",ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1576460521,
        "uid": 120362,
        "name": "Priori_Incantatem",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "\u4e00\u9053\u975e\u5e38\u503c\u5f97\u7ec3\u624b\u7684**\u7f51\u7edc\u6d41**~~\u6c34~~\u9898\uff08~~\u66b4\u529b\u4e5f\u80fd\u8fc7~~\uff09\uff0c\u9898\u76ee\u5927\u81f4\u4e3a\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u9897\u5e26**\u8fb9\u6743\u6709\u6839\u6811**\uff0c\u6c42\u51fa\u5272\u53bb\u8fb9\u7684\u8fb9\u6743**\u6700\u5c0f\u503c**\uff0c\u4f7f\u4efb\u610f\u53f6\u5b50\u8282\u70b9\u4e0e\u6839\u8282\u70b9**\u4e0d\u8fde\u901a**\u3002\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9\uff0c**\u5728\u4e00\u9897\u6811\u4e2d\uff0c\u4efb\u610f\u4e24\u70b9\u95f4\u6709\u4e14\u53ea\u6709\u4e00\u6761\u7b80\u5355\u8def\u5f84**\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5220\u9664\u6539\u70b9\u5230\u6839\u8282\u70b9\u7684**\u4efb\u610f\u4e00\u6761\u8fb9**\uff0c\u5c31\u53ef\u4ee5\u4f7f\u8be5\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u4e0d\u8fde\u901a\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u662f\u4efb\u610f\u5220\u4e00\u6761\u8fb9\uff0c\u5373\u6211\u4eec\u9009\u62e9\u6700\u5c0f\u7684\u90a3\u6761\u8fb9\u5220\u9664\u3002\n\n\u518d\u60f3\u60f3\uff0c\u5176\u5b9e\u8fd9\u5c31\u662f**\u7f51\u7edc\u6d41\u4e2d\u6c42\u6700\u5c0f\u5272**\uff0c\u6211\u4eec\u5c06root\u4f5c\u4e3a**\u8d77\u70b9/\u6e90\u70b9**\uff0c\u518d\u5efa\u4e00\u4e2a\u865a\u62df\u7684\u6c47\u70b9\uff0c**\u5c06\u6240\u6709\u53f6\u5b50\u8282\u70b9\u4e0e\u865a\u62df\u6c47\u70b9\u5efa\u8fb9**\uff0c\u5efa\u56fe\u5b8c\u6210\u540e\u5237\u4e00\u8d9fDinic\u5373\u53efAC\n\n**\u4e0d\u4f1a\u7f51\u7edc\u6d41\u7684\u770b\u7740**\uff1a[\u7f51\u7edc\u6d41\u8be6\u89e3](https://blog.csdn.net/qq_41357771/article/details/79416899)\n\n\u6700\u540e\uff0c\u9644\u4e0aAC\u4ee3\u7801\uff08\u4ec5\u4f9b\u53c2\u8003\uff09\uff1a\n\n```\n#include<bits/stdc++.h>\n#define maxn 100005\n#define maxe 200005\nusing namespace std;\nint Q[maxn],Dep[maxn],n,T,S,x,y,z,tot=1,lnk[maxn],nxt[maxe],son[maxe],w[maxe];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline void add(int x,int y,int z){nxt[++tot]=lnk[x];lnk[x]=tot;w[tot]=z;son[tot]=y;}\ninline bool Bfs(){\n\tmemset(Dep,0,sizeof Dep);\n\tint hed=0,til=1;\n    Q[1]=S;Dep[S]=1;\n    while (hed!=til){\n    \thed++;\n    \tfor (int i=lnk[Q[hed]];i;i=nxt[i])\n    \t  if (!Dep[son[i]]&&w[i]>0){\n    \t  \tDep[son[i]]=Dep[Q[hed]]+1;\n    \t  \tQ[++til]=son[i];\n\t\t  }\n\t}\n\treturn Dep[T];\n}\ninline int Dfs(int x,int flow){\n\tif (x==T) return flow;\n\tint sum=0;\n\tfor (int i=lnk[x];i&&sum<flow;i=nxt[i])\n\t  if (w[i]&&Dep[son[i]]==Dep[x]+1){\n\t  \tint Now=Dfs(son[i],min(w[i],flow-sum));\n\t  \tw[i]-=Now,w[i^1]+=Now;\n\t    sum+=Now;\n\t  }\n\t  return sum;\n}\ninline int Dinic(){\n\tint Ans=0;\n\twhile (Bfs()) Ans+=Dfs(S,1<<30);\n\treturn Ans;\n}\ninline void DFS(int x,int fa){\n\tbool flg=0;\n\tfor (int i=lnk[x];i;i=nxt[i])\n\t  if (son[i]!=fa) flg=1,w[i^1]=0,DFS(son[i],x);\n    if (!flg) add(x,T,1<<30),add(T,x,0);\n}\nint main(){\n\tn=read(),S=read();T=n+1;\n\tfor (int i=1;i<n;i++) x=read(),y=read(),z=read(),add(x,y,z),add(y,x,z);\n\tDFS(S,0);\n\tprintf(\"%d\",Dinic());\n\treturn 0;\n}\n```\n",
        "postTime": 1565613127,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "\u6811\u5f62dp\uff1b\u53e6\u4e00\u79cd\u65b9\u7a0b\uff1a\u8bbef[x]\u4e3a**\u622a\u65ads\u4e0e\u5b50\u6811x\u7684\u8054\u7cfb**\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0cmn[x]\u4e3a**\u4eces\u5230x\u7684\u8def\u5f84\u4e0a\u6700\u5c0f\u7684\u8fb9\u6743**\uff08\u7279\u522b\u5730\uff0cmn[x]=inf\uff09\uff0cson[x]\u4e3ax\u7684\u513f\u5b50\u96c6\u5408\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u4e3a\n\n$$\nf[x]=\\min(mn[x], \\sum_{y\\in son[x]}f[y])\n$$\n\n\u5f53\u7136\u4e86\uff0c\u82e5\u6ca1\u6709\u513f\u5b50\u76f4\u63a5\u4ee4f[x]=mn[x]\u3002\n\n\u4ee3\u7801\uff1a\n\n```\nint dp(int x,int pa,int mn) {\n\tint c=-1;\n\tfor(int i=head[x]; i; i=last[i]) {\n\t\tif(to[i]!=pa) c+=dp(to[i],x,min(mn,len[i]));\n\t}\n\treturn (~c)?min(c+1,mn):mn;\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&s);\n\tfor(int x,y,w,i=n; --i; ) {\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tadd_edge(x,y,w);\n\t\tadd_edge(y,x,w);\n\t}\n\tprintf(\"%d\\n\",dp(s,0,2e9));\n\treturn 0;\n}\n\n```\n\n\u5907\u6ce8\uff1a\u5229\u7528\u8fd9\u4e2a\u65b9\u7a0b\u53ef\u4ee5\u5c0f\u5e38\u6570\u5730\u89e3\u51b3 [P2495](https://www.luogu.org/problemnew/show/P2495)\u8fd9\u9898\uff0c\u8bd5\u8bd5\u770b\u5427\u3002",
        "postTime": 1544425050,
        "uid": 125139,
        "name": "nosta",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "# P3931 \u9898\u89e3\n\n\u56e0\u4e3a\u849f\u84bb\u4e0d\u4f1a\u9ad8\u7aef\u7f51\u7edc\u6d41\uff0c\n\n\u6240\u4ee5\u9009\u62e9\u4e86\u6811\u5f62DP\n\n\u5b9a\u4e49 $f[u]$ \u4e3a \u5207\u65ad u \u8fd9\u4e2a\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n**\u5982\u679c u \u4e3a\u53f6\u5b50\u7ed3\u70b9\uff0c**\n\n\u663e\u7136 f[u]=0(\u4ee3\u7801\u4e2d\u6709\u4e00\u70b9\u4e0d\u4e00\u6837\uff0c\u4f46\u6574\u4f53\u7684\u72b6\u6001\u8f6c\u79fb\u8fd8\u662f\u4e00\u6837\u5f97\uff09\n\n**\u4f46\u662f\u5982\u679c u \u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\u9700\u8981\u5206\u4e24\u79cd\u60c5\u51b5\uff1a**\n\n1.\u5207\u65ad u->v \u8fd9\u6761\u8fb9\uff0c\u4ee3\u4ef7\u4e3a $edge_{u->v}$\n\n2.\u4e0d\u5207\u65ad u->v \u8fd9\u6761\u8fb9\uff0c\u4f46\u662f\u8981\u4fdd\u8bc1 u \u4e0d\u80fd\u5230\u8fbe\u6240\u6709 v \u4e2d\u5b50\u6811\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u8fd9\u4e2a\u7684\u4ee3\u4ef7\u4e3a f[v]\n\n\u6240\u4ee5\u5728\u6bcf\u6b21\u8fc7\u7a0b\u4e2d\u53d6min\u5c31\u597d\u4e86\n\n\u63a8\u51fa\u65b9\u7a0b\u5c31\u5f88\u7b80\u5355\u4e86\n\nCode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5,M=2e5+5,INF=0x3f3f3f3f;\nint head[N],edge[M],Next[M],to[M],tot,n,size[N],dep[N],root,f[N];\n\ninline void add(int u,int v,int z){to[++tot]=v,edge[tot]=z,Next[tot]=head[u],head[u]=tot;}\n\ninline void dfs(int x,int fa){\n  size[x]=1,dep[x]=dep[fa]+1;\n  for(int i=head[x];i;i=Next[i]){\n    if(to[i]!=fa){\n      dfs(to[i],x);\n      size[x]+=size[to[i]];\n    }\n  }\n  return;\n}\n\ninline int dp(int x,int fa){\n  if(size[x]==1){f[x]=INF;return f[x];}\n  for(int i=head[x];i;i=Next[i]){\n    int y=to[i];\n    if(y!=fa){f[x]+=min(dp(y,x),edge[i]);}\n  }\n  return f[x];\n}\n\nint main(){\n  freopen(\"tree.in\",\"r\",stdin);\n  //freopen(\"tree.out\",\"w\",stdout);\n  scanf(\"%d%d\",&n,&root);\n  int u,v,w;\n  for(int i=1;i<n;++i){\n    scanf(\"%d%d%d\",&u,&v,&w);\n    add(u,v,w),add(v,u,w);\n  }\n  dfs(root,0);\n  printf(\"%d\\n\",dp(root,0));\n  return 0;\n}\n\n```\n",
        "postTime": 1601637149,
        "uid": 67621,
        "name": "NuoCarter",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "## \u6811\u5f62DP\u6c34\u9898\n\n\u8bbe$dp[i]$\u4e3a\u5c06\u6839\u4e3ai\u7684\u5b50\u6811\u5904\u7406\u6389\u7684\u4ee3\u4ef7\n\n\u6bcf\u6b21\u67092\u4e2a\u9009\u62e9\uff1a\n\n1. \u5272\u6389\u5f53\u524d\u7236\u4eb2\u8282\u70b9\u4e0e\u513f\u5b50\u8282\u70b9\u8fde\u63a5\u7684\u8fb9\uff0c\u4ee3\u4ef7\u4e3a\u8fb9\u6743\n\n2. \u4e0d\u5272\u6389\u8fd9\u6761\u8fb9\uff0c\u9009\u62e9\u5728\u4ee5\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u4e0b\u89e3\u51b3\uff0c\u4ee3\u4ef7\u4e3a$dp[son]$\n\n**\u56e0\u6b64**\n\n$dp[x]=min(dp[y_1],e[y_1])+...+min(dp[y_i],e[y_i])$\n\n\u5176\u4e2d$y_i$\u4e3ax\u7684\u513f\u5b50\uff0c$e[y_i]$\u4e3ay\u5230x\u7684\u8fb9\u6743\n\n#### \u7279\u5224\uff1a\n\n\u4f46\u5f53\u5230**\u53f6\u8282\u70b9**\u7684\u65f6\u5019\u662f\u6ca1\u6709\u5b50\u6811\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8ba9$dp[y]$\u4e3a\u5230\u4ed6\u7236\u4eb2\u7684\u8fb9\u6743\n\n\u9644\u4e0a\u4ee3\u7801\uff0c~~\u5fe0\u544a\uff1a\u4e0d\u8981\u6284\u9898\u89e3~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nconst int MAXN=2e5+5;\nint nex[MAXN],ver[MAXN],head[MAXN];\nint tot;\nll edge[MAXN];\nll dp[MAXN];\nll f[MAXN];//\u5176\u5230\u7236\u4eb2\u8282\u70b9\u7684\u8fb9\u6743\uff0c\u53ea\u5728\u53f6\u8282\u70b9\u65f6\u6709\u7528\ninline void add(int x,int y,ll z){//\u5efa\u56fe\n    nex[++tot]=head[x];\n    ver[tot]=y;\n    head[x]=tot;\n    edge[tot]=z;\n    f[y]=z;\n}\ninline void dfs(int x,int fa){\n    bool judge=true;//\u5224\u65ad\u5f53\u524d\u8282\u70b9\u6709\u6ca1\u6709\u5b50\u6811\n    for(int i=head[x];i;i=nex[i]){\n        int y=ver[i];\n        if(y==fa)  continue;\n        dfs(y,x);\n        dp[x]+=min(edge[i],dp[y]);\n        judge=false;\n    }\n    if(judge)//\u5f53\u524d\u8282\u70b9\u4e3a\u53f6\u8282\u70b9\n        dp[x]=f[x];\n}\nint n;\nint root;//\u6839\u8282\u70b9\u7f16\u53f7\nint main(){\n    freopen(\"tree.in\",\"r\",stdin);\n    freopen(\"tree.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&root);\n    for(int i=1;i<n;i++){\n        int x,y;ll z;\n        scanf(\"%d%d%lld\",&x,&y,&z);\n        add(x,y,z);\n        add(y,x,z);\n    }\n    dfs(root,-1);\n    printf(\"%lld\",dp[root]);\n    return 0;\n}\n\n```\n",
        "postTime": 1601624322,
        "uid": 67618,
        "name": "haooo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "## LUOGU P3931 SOLUTION\n### \u601d\u8def\u70b9\u62e8\n\u6839\u636e\u9898\u610f\uff0c\u672c\u9898\u4e0e\u6700\u5c0f\u5272\u95ee\u9898\u6781\u4e3a\u76f8\u4f3c\uff0c\u6839\u636e\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\uff0c\u672c\u9898\u53ef\u8f6c\u5316\u4e3a\u6c42\u7f51\u7edc\u6700\u5927\u6d41\u3002  \n  \n\u8fd8\u672a\u5b66\u4e60\u8be5\u77e5\u8bc6\u7684\uff0c\u8bf7[\u70b9\u6211\u5b66\u4e60](https://www.luogu.org/blog/ONE-PIECE/wang-lao-liu-di-zong-jie)\uff0c\u7136\u540e\u5efa\u8bae\u5148\u5199\u6a21\u677f\u9898\uff08[\u70b9\u6211\u8df3\u8f6c](https://www.luogu.org/problem/P3376)\uff09\u7ec3\u4e60\u4e00\u4e0b\u3002  \n  \n**\u9996\u5148\uff0c\u63d0\u9192\u4e00\u4e2a\u96f7\u533a\uff01\u9898\u76ee\u7ed9\u7684\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6545\u6211\u4eec\u9700\u8981\u5148\u4ece\u6811\u6839\u5f00\u59cb\u5bf9\u8fd9\u4e2a\u65e0\u5411\u56fe\u8fdb\u884cdfs\u9884\u5904\u7406\uff0c\u628a\u65e0\u5411\u8fb9\u8f6c\u6362\u6210\u6709\u5411\u8fb9\u3002\uff08WA 20\u5206\u7684\u7edd\u5927\u591a\u6570\u90fd\u5ffd\u7565\u4e86\u8fd9\u4e00\u70b9\uff0c\u5305\u62ec\u6211\uff09**  \n  \n\u7136\u540e\uff0c\u4e00\u4e2a\u7f51\u7edc\u6d41\u56fe\u4e0d\u4ec5\u8981\u6709\u6e90\u70b9\uff08\u5373\u6811\u7684\u6839\u8282\u70b9\uff09\uff0c\u8fd8\u8981\u6709\u6c47\u70b9\u3002\u6211\u4eec\u5047\u8bben+1\u5373\u4e3a\u6c47\u70b9\uff0c\u8ba9\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u90fd\u4f38\u51fa\u4e00\u6761\u6307\u5411n+1\u7684\u6709\u5411\u8fb9\uff08\u8fd9\u4e2a\u53ef\u4ee5\u5728dfs\u9884\u5904\u7406\u65f6\u987a\u4fbf\u5904\u7406\u4e00\u4e0b\uff0c\u800c\u4e14\u8981\u8bb0\u5f97\u5efa\u53cd\u5411\u8fb9\uff09\u3002  \n  \n\u9898\u76ee\u8981\u6c42\u4efb\u4f55\u53f6\u5b50\u8282\u70b9\u90fd\u548c\u6839\u8282\u70b9\u4e0d\u8fde\u901a\uff0c\u800c\u8fd9\u4e2a\u6761\u4ef6\u6070\u6070\u548c\u6c47\u70b9\u548c\u6e90\u70b9\u4e0d\u8fde\u901a\u662f\u7b49\u4ef7\u7684\uff08\u56e0\u4e3a\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u548c\u6c47\u70b9\u8fde\u901a\uff0c\u6545\u4f46\u51e1\u6709\u4efb\u4f55\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u548c\u6839\u8282\u70b9\u8fde\u901a\uff0c\u6c47\u70b9\u548c\u6e90\u70b9\u90fd\u662f\u8fde\u901a\u7684\uff09\u3002  \n  \n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u6784\u9020\uff0c\u63a5\u4e0b\u6765\u95ee\u9898\u5c31\u53ea\u5269\u4e0b\u6c42\u7f51\u7edc\u6d41\u56fe\u7684\u6700\u5927\u6d41\u4e86\u3002\u8fd9\u91cc\u6709\u591a\u79cd\u7b97\u6cd5\u53ef\u4ee5\u9009\u62e9\uff0c\u6211\u4f7f\u7528\u7684\u662fdinic\u7b97\u6cd5\uff0c\u5177\u4f53\u5b9e\u73b0\u4e0d\u518d\u8d58\u8ff0\u3002\u5728\u5b58\u56fe\u65f6\u6211\u91c7\u53d6\u7684\u662fvector\u5b58\u56fe\uff0c\u548c\u5927\u591a\u6570\u4eba\u7684\u4e60\u60ef\u4e0d\u592a\u4e00\u6837\uff08\u6545\u7f51\u4e0a\u7684\u4ee3\u7801\u57fa\u672c\u90fd\u662f\u90bb\u63a5\u8868\u5b58\u56fe\uff09\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u4ee3\u7801\u3002\n### AC\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#define N 100005\n#define I 0x3f3f3f3f//\u65e0\u7a77\u5927\nusing namespace std;\nstruct road{int to,w;};\nstruct edge{int to,w;}e[N<<2];//\u5b58\u50a8\u8fb9\u7684\u4fe1\u606f\uff0c\u8003\u8651\u5230\u53cc\u5411\u5efa\u8fb9\uff08\u5305\u62ec\u53f6\u5b50\u8282\u70b9\u4e0e\u6c47\u70b9\uff09\u7684\u95ee\u9898\uff0c\u4fdd\u9669\u8d77\u89c1\u5f00\u56db\u500d\u6570\u7ec4\nvector<road> g[N];//\u5b58\u521d\u59cb\u7684\u65e0\u5411\u56fe\nvector<int> v[N];//\u5b58\u8f6c\u5316\u4e4b\u540e\u7684\u6709\u5411\u56fe\nint n,s,t,t1,t2,t3,cnt,ans,d[N];\nvoid pre(int x,int fa)\n{\n  if(g[x].size()==1&&g[x][0].to==fa)//\u5224\u53f6\u5b50\u8282\u70b9\uff0c\u548c\u6c47\u70b9\u5efa\u8fb9\n    {\n      v[x].push_back(cnt);\n      e[cnt].to=t;\n      e[cnt++].w=I;\n      v[t].push_back(cnt);//\u5efa\u53cd\u5411\u8fb9\n      e[cnt].to=x;\n      e[cnt++].w=0;\n      return;\n    }\n  for(int i=0;i<g[x].size();i++)\n    {\n      int to=g[x][i].to,w=g[x][i].w;\n      if(to==fa)continue;\n      v[x].push_back(cnt);\n      e[cnt].to=to;\n      e[cnt++].w=w;\n      v[to].push_back(cnt);//\u5efa\u53cd\u5411\u8fb9\n      e[cnt].to=x;\n      e[cnt++].w=0;\n      pre(to,x);\n    }\n}\nbool bfs()\n{\n  queue<int> q;\n  memset(d,0,sizeof(d));\n  d[s]=1;\n  q.push(s);\n  while(q.size())\n    {\n      int now=q.front();\n      q.pop();\n      for(int i=0;i<v[now].size();i++)\n\t{\n\t  int temp=v[now][i];\n\t  int to=e[temp].to,w=e[temp].w;\n\t  if(!d[to]&&w)\n\t    {\n\t      d[to]=d[now]+1;\n\t      q.push(to);\n\t    }\n\t}\n    }\n  return d[t];\n}\nint dfs(int now,int minn)\n{\n  if(now==t)return minn;\n  for(int i=0;i<v[now].size();i++)\n    {\n      int temp=v[now][i];\n      int to=e[temp].to,w=e[temp].w;\n      if(d[to]==d[now]+1&&w)\n\t{\n\t  int res=dfs(to,min(minn,w));\n\t  if(res)\n\t    {\n\t      e[temp].w-=res;\n\t      e[temp^1].w+=res;\n\t      return res;\n\t    }\n\t}\n    }\n  return 0;\n}\nint main()\n{\n  scanf(\"%d%d\",&n,&s);\n  t=n+1;//\u8bbe\u7f6e\u6c47\u70b9\n  for(int i=1;i<n;i++)\n    {\n      scanf(\"%d%d%d\",&t1,&t2,&t3);\n      g[t1].push_back({t2,t3});//\u5b58\u65e0\u5411\u56fe\n      g[t2].push_back({t1,t3});\n    }\n  pre(s,s);//\u9884\u5904\u7406\uff0c\u65e0\u5411\u56fe\u8f6c\u6709\u5411\u56fe\n  while(bfs())//dinic\u7b97\u6cd5\u6c42\u6700\u5927\u6d41\n    ans+=dfs(s,I);\n  printf(\"%d\",ans);\n  return 0;\n}\n```\n",
        "postTime": 1570713880,
        "uid": 118377,
        "name": "Honeta",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3931 \u3010\u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "\u5199\u5b8cdp \u5199\u6700\u5c0f\u5272\u53d1\u73b0\u6709\u70b9\u4e0d\u5bf9\u7684\u5730\u65b9\u3002\uff08\u8ba4\u771f\u601d\u8003\u53d1\u73b0\u5f88\u591a\u7f51\u7edc\u6d41\u7684\u505a\u6cd5\u662f\u5b8c\u5168\u4e0d\u5fc5\u8981\u7684\u3002\uff09\n\n\u904d\u89c2\u6240\u6709\u7684\u7f51\u7edc\u6d41\u9898\u89e3\u6211\u53d1\u73b0\u5f88\u591a\u90fd\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u81ea\u5df1\u7f51\u7edc\u6d41\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u8fc7\u6216\u8005\u8bf4\u5efa\u53cc\u5411\u8fb9\u90fd\u6709\u6743\u503c\u4e5f\u4e0d\u4f1a\u9519\u7684\u539f\u56e0\u3002\n\n\u8fd9\u91cc\u6211\u7ed9\u51fa\u89e3\u91ca \u8ba4\u771f\u770b\u9898\u76ee\u4f60\u4f1a\u53d1\u73b0\u6c42\u7684\u662f\u5272\u65ad\u4ece\u53f6\u5b50\u8282\u70b9\u5230S\u7684\u8def\u5f84\u7684\u4e00\u6761\u8fb9\u4f7f\u603b\u4ef7\u503c\u6700\u5927\uff0cdp\u4f7f\u5f88\u597d\u5199\u7684\u3002\u770b\u8d77\u6765\u50cf\u662f\u6700\u5c0f\u5272\u7684\u6a21\u578b\u8003\u8651\u4f7f\u7528\u7f51\u7edc\u6d41\u3002\n\n1. \u4f17\u6240\u5468\u77e5 \u6700\u5927\u6d41=\u6700\u5c0f\u5272\uff0c\u8bc1\u660e\u7684\u8bdd\u60f3\u4e00\u4e0b\u6211\u4eec\u6d41\u5411\u6c47\u70b9\u7684\u6bcf\u6761\u6d41\u7684\u8def\u5f84\u4e0a\u5fc5\u6709\u4e00\u6761\u8def\u5f84\u662f\u6ee1\u6d41\u7684\uff0c\u7136\u540e\u8fd9\u4e9b\u6ee1\u6d41\u7684\u52a0\u8d77\u6765\u5c31\u662f\u6211\u4eec\u7684\u6700\u5927\u6d41\u4e86\uff0c\u81ea\u7136\u628a\u8fd9\u4e9b\u6ee1\u6d41\u7684\u5220\u6389\u5c31\u662f\u6700\u5c0f\u5272\u4e86\uff0c\u5982\u679c\u4e0d\u662f\u90a3\u8bf4\u660e\u8fd8\u5177\u6709\u589e\u5e7f\u8def\uff0c\u7531\u6211\u4eec\u6c42\u6700\u5927\u6d41\u7684\u65f6\u5019\u628a\u8fb9\u90fd\u589e\u5e7f\u4e86\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f97\u8bc1\u3002\n\n2. \u8fd9\u9053\u9898 \u4e5f\u5f88\u6e05\u6670\u660e\u4e86\u5176\u5b9e\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u81ea\u5df1\u7684\u589e\u5e7f\u8def\u4e5f\u53ea\u6709\u552f\u4e00\u7684\u4e00\u6761\u8def\u7f62\u4e86\uff0c\u4e0d\u53ef\u80fd\u6709\u7b2c\u4e8c\u6761\u589e\u5e7f\u8def\u56e0\u4e3a\u5982\u679c\u6709\u4e24\u6761\u589e\u5e7f\u8def\uff0c\u7531\u4e8e\u8fd9\u662f\u4ece\u6e90\u70b9\u51fa\u53d1\u7684\u4e24\u6761\u8def\u4e14\u90fd\u5230\u8fbe\u4e86\u540c\u4e00\u4e2a\u70b9\u6240\u4ee5\u6709\u73af\u8bf4\u660e\u4e0d\u662f\u6811\u4f46\u662f\u9898\u76ee\u4e2d\u4fdd\u8bc1\u8fd9\u662f\u4e00\u9897\u6811\u6545\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u589e\u5e7f\u8def\u4e5f\u53ea\u6709\u4e00\u6761\u3002\n\n3. \u65e2\u7136\u589e\u5e7f\u8def\u53ea\u6709\u4e00\u6761\u8fd9\u8bf4\u660e\u4e86\u53cd\u5411\u6d41\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u589e\u5e7f\u4e4b\u540e\u5df2\u7ecf\u4e0d\u53ef\u80fd\u518d\u6b21\u589e\u5e7f\u4e86\u6240\u4ee5\u8fd9\u9053\u9898\u5176\u5b9e\u53ea\u9700\u8981\u8dd1\u4e00\u904ddinic \u8fde\u5efa\u5206\u5c42\u56fe\u4e5f\u4e0d\u5fc5\u8981\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u6240\u4ee5\u8fd9\u4e5f\u5c31\u89e3\u91ca\u4e86\u8ba8\u8bba\u4e2ddinic\u80fd\u89e3\u51b31e5\u7684\u6570\u636e\u8303\u56f4\u7684\u539f\u56e0\u3002\u3002\n\n\u5728\u9898\u89e3\u8bf8\u591a\u7684\u73af\u5883\u4e2d\u6211\u4eec\u5f88\u5bb9\u6613\u88ab\u4e00\u4e9b\u9898\u89e3\u7684\u601d\u8def\u7ed9\u5e26\u504f\u6240\u4ee5\u8981\u8ba4\u771f\u7684\u601d\u8003\u51fa\u81ea\u5df1\u5bf9\u9898\u76ee\u7684\u7406\u89e3\u4e0d\u8981\u76f2\u76ee\u7684\u53bb\u770b\u9898\u89e3\u5199\u4e00\u4e9b\u4e0d\u5fc5\u8981\u6216\u8005\u5343\u7bc7\u4e00\u5f8b\u7684\u7b97\u6cd5\u3002(~~\u89c9\u5f97\u6709\u9053\u7406\u70b9\u4e2a\u8d5e\u5427\uff01~~\n\n```cpp\n//#include<bits/stdc++.h>\n#include<iomanip>\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<queue>\n#include<deque>\n#include<cmath>\n#include<ctime>\n#include<cstdlib>\n#include<stack>\n#include<algorithm>\n#include<vector>\n#include<cctype>\n#include<utility>\n#include<set>\n#include<bitset>\n#include<map>\n#define INF 1000000000\n#define ll long long\n#define min(x,y) (x>y?y:x)\n#define max(x,y) (x>y?x:y)\n#define RI register ll\n#define up(p,i,n) for(ll i=p;i<=n;++i)\n#define db double\nusing namespace std;\nchar buf[1<<15],*fs,*ft;\ninline char getc()\n{\n    return (fs==ft&&(ft=(fs=buf)+fread(buf,1,1<<15,stdin),fs==ft))?0:*fs++;\n}\ninline ll read()\n{\n    ll x=0,f=1;char ch=getc();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getc();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getc();}\n    return x*f;\n}\ninline void put(ll x)\n{\n    x<0?x=-x,putchar('-'):0;\n    int num=0;char ch[20];\n    while(x)ch[++num]=x%10+'0',x/=10;\n    num==0?putchar('0'):0;\n    while(num)putchar(ch[num--]);\n    putchar('\\n');return;\n}\nconst int MAXN=200010;\nint n,s,len=1,t,h,flow,maxx;\nint d[MAXN],vis[MAXN],ru[MAXN];\nint lin[MAXN],ver[MAXN<<1],nex[MAXN<<1],e[MAXN<<1];\ninline void add(int x,int y,int z)\n{\n\tver[++len]=y;\n\tnex[len]=lin[x];\n\tlin[x]=len;\n\te[len]=z;\n}\ninline int dinic(int x,int flow)\n{\n\tif(x==n+1)return flow;\n\tint rest=flow,k;vis[x]=1;\n\tfor(int i=lin[x];i&&rest;i=nex[i])\n\t{\n\t\tint tn=ver[i];\n\t\tif(!e[i]||vis[tn])continue;\n\t\tk=dinic(tn,min(rest,e[i]));\n\t\te[i]-=k;rest-=k;\n\t}\n\treturn flow-rest;\n}\nint main()\n{\n\t//freopen(\"1.in\",\"r\",stdin);\n\tn=read();s=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint x,y,z;\n\t\tx=read();y=read();z=read();\n\t\tadd(x,y,z);add(y,x,z);\n\t\t++ru[x];++ru[y];\n\t}\n\tfor(int i=1;i<=n;++i)if(i!=s&&ru[i]==1)add(i,n+1,INF);\n\tput(dinic(s,INF));\n\treturn 0;\n}\n\n```\n",
        "postTime": 1560124586,
        "uid": 59688,
        "name": "chdy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u5272\u5f00\u6811\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u6700\u5c0f\u5272\n\n\u800c\u5272\u5f00\u4e00\u68f5\u6811\u662f\u8981\u8ba9\u6240\u6709\u7684\u53f6\u8282\u70b9\u548c\u6839\u8282\u70b9\u90fd\u4e0d\u8fde\u901a\uff0c\u6e90\u70b9\u5f88\u5bb9\u6613\u627e\uff08\u5373\u4e3a\u6839\u8282\u70b9\uff09\uff0c\u90a3\u4e48\u6c47\u70b9\u4e0d\u6b62\u4e00\u4e2a\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u627e\u4e00\u4e2a\u201c\u8d85\u7ea7\u6c47\u70b9\u201d\uff08\u6240\u6709\u7684\u6c47\u70b9\u90fd\u6c47\u805a\u5230\u8fd9\u4e2a\u70b9\u4e0a\uff0c\u8ddd\u79bb\u4e3ainf\uff09\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u6807\u51c6\u7684\u6700\u5c0f\u5272\uff08\u6700\u5927\u6d41\uff09\u95ee\u9898\u4e86\n\n### \u4e0b\u9762\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=200050,M=400050;\nconst int inf=0x7fffffff;\n\nll head[N],ver[M*2],edge[M*2],next[M*2],d[N];\nll n,s,t,tot=1,maxflow=0;\nint leaf[N];                   //0\u4e3a\u4e0d\u5b58\u5728\uff0c1\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c2\u4e3a\u975e\u53f6\u5b50\u8282\u70b9 \n\nvoid add(int x,int y,ll z)\n{\n\tver[++tot]=y,edge[tot]=z,next[tot]=head[x],head[x]=tot;\n\tver[++tot]=x,edge[tot]=z,next[tot]=head[y],head[y]=tot;\n}\n\nqueue<ll> q;\nbool bfs()                     //\u5efa\u5c42\u6b21\u56fe \n{\n\tfor(;q.size();q.pop());\n\tmemset(d,0,sizeof(d));\n\td[s]=1;\n\tq.push(s);\n\tfor(;q.size();)\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[x];i;i=next[i])\n\t\t\tif(edge[i]&&!d[ver[i]])\n\t\t\t{\n\t\t\t\td[ver[i]]=d[x]+1;\n\t\t\t\tq.push(ver[i]);\n\t\t\t\tif(ver[i]==t) return true;\n\t\t\t}\n\t}\n\treturn false;\n}\n\nll dinic(int x,ll flow)            //dinic\u7b97\u6cd5 \n{\n\tif(x==t) return flow;\n\tll rest=flow,k;\n\tfor(int i=head[x];i&&rest;i=next[i])\n\t\tif(edge[i]&&d[ver[i]]==d[x]+1)\n\t\t{\n\t\t\tk=dinic(ver[i],min(edge[i],rest));\n\t\t\tif(!k) d[ver[i]]=0;\n\t\t\trest-=k;\n\t\t\tedge[i]-=k;\n\t\t\tedge[i^1]+=k;\n\t\t}\n\treturn flow-rest;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&s);\n\tmemset(leaf,0,sizeof(leaf));\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd(a,b,c);\n\t\tleaf[a]++;\n\t\tleaf[b]++;\n\t}\n\tfor(int i=1;i<=n;i++)                   //n+1\u4e3a\u8d85\u7ea7\u6c47\u70b9 \n\t\tif(leaf[i]==1&&i!=s) add(n+1,i,inf);\n\tt=n+1;\n\tll flow=0;\n\tfor(;bfs();)\n\t\tfor(;flow=dinic(s,inf);maxflow+=flow);\n\tprintf(\"%lld\\n\",maxflow);\n\treturn 0;\n}\n```",
        "postTime": 1526541643,
        "uid": 54728,
        "name": "wangxuye",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "\u8bbe $f_x$ \u4e3a\u4ee5 $x$ \u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u4e2d\u6240\u6709\u7684\u53f6\u5b50\u7ed3\u70b9\u90fd\u88ab\u5272\u6389\u4e86\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u8003\u8651\u4ece\u513f\u5b50\u8f6c\u79fb\u5230\u7236\u4eb2\uff0c\u4e24\u4e2a\u9009\u62e9\uff0c\u7b2c\u4e00\u79cd\u513f\u5b50\u5df2\u7ecf\u5272\u5b8c\uff0c\u7b2c\u4e8c\u79cd\u628a\u7236\u4eb2\u5230\u513f\u5b50\u7684\u8fb9\u5272\u53bb\u3002\u53d6\u4e24\u4e2a\u9009\u62e9\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5bf9\u6bcf\u4e2a\u513f\u5b50\u7684\u7ed3\u679c\u518d\u6c42\u548c\u3002\u5373\uff1a\n\n$$f_x = \\sum _{v \n\\in son(x)}\\min\\{f_v,\\operatorname{dis}(x,v) \\}$$\n\n\u7b54\u6848\u4e3a $f_s$\n\n**\u4ee3\u7801**\n\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <cstring>\n#include <algorithm>\n\n#define ll long long\n\nconst int N = 100005;\n\nusing namespace std;\n\nll f[N];\nstruct data{\n\tint to, next;\n\tll val;\n}edge[N << 1];\nint head[N], tot = 0, size[N], leaf[N];\nint n, s;\n\nvoid dfs(int x, int fa){\n\tsize[x] = 1;\n\tfor(int i = head[x]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif(v == fa) continue;\n\t\tdfs(v, x);\n\t\tsize[x] += size[v];\n\t}\n}\n\nvoid solve(int x, int fa){\n\tif(leaf[x]) return;\n\tfor(int i = head[x]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif(v == fa) continue;\n\t\tsolve(v, x);\n\t\tf[x] += min(f[v], edge[i].val);\n\t}\n}\n\nvoid add(int u, int v, int d){\n\tedge[++tot].to = v;\n\tedge[tot].val = d;\n\tedge[tot].next = head[u];\n\thead[u] = tot;\n}\n\nint main(){\n\tcin >> n >> s;\n\tfor(int i = 1; i < n; i++){\n\t\tint u, v; ll d;\n\t\tcin >> u >> v >> d;\n\t\tadd(u, v, d);\n\t\tadd(v, u, d);\n\t}\n\t\n\tdfs(s, 0);\n\tfor(int i = 1; i <= n; i++) if(size[i] == 1) { f[i] = 1e18; leaf[i] = 1; }\n\tsolve(s, 0);\n\t\n\tcout << f[s];\n\t\n\treturn 0;\n}\n```",
        "postTime": 1597843026,
        "uid": 35584,
        "name": "KillerXu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "# \u6811\u5f62dp\n\n\n\u8fd9\u771f\u7684\u767e\u5206\u767e\u6ca1\u6709\u84dd\u9898\u554a\u3002\u3002\u3002\n\n\u5176\u4ed6\u7684\u6811\u5f62dp\u9898\u76ee\u6bd4\u8fd9\u4e2a\u96be\u5f88\u591a\n\n\u8003\u8651\u8fd9\u4e00\u4e2a\u6027\u8d28:\n\n\u4e00\u4e2a\u7236\u8282\u70b9\u662f\u7531\u5176\u5b50\u6811\u8f6c\u79fb\u8fc7\u6765\u7684\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5199\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f0f\uff1a\n\nf[u] \u8868\u793a\u5bf9\u4e8e\u8282\u70b9u\uff0c\u786e\u4fdd\u4ed6\u7684\u5b50\u6811\u548c\u6839\u8282\u70b9\u6ca1\u6709\u4e00\u6761\u8def\u5f84\uff0c\u6240\u9700\u8981\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u4e3a\u4ec0\u4e48\u6211\u89c9\u5f97\u8fd9\u4e2a\u94c1\u5b9a\u6ca1\u6709\u84dd\u9898\u5462\uff1f\n\n\u56e0\u4e3a\u8f6c\u79fb\u8fd9\u4e2a\u6700\u5c0f\u82b1\u8d39\u7684\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\n\n1. \u76f4\u63a5\u5220\u8282\u70b9 u \u548c\u5b83\u7236\u4eb2\u7684 \u8fb9\n1. \u5b83\u7684\u5b50\u6811\u7684\u4ee3\u4ef7\u4e4b\u548c\n\n\u8fd9\u6837\u5c31\u80fd\u5199\u51fa\u4ee3\u7801\u4e86\u3002\u3002\u3002\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nconst int maxn = 100050;\nint rd(){\n\tint x = 0, f = 1; char c = getchar();\n\twhile(c < '0' || c > '9'){if (c == '-'){ f = -1;} c = getchar();}\n\twhile(c >= '0' && c <= '9'){x = x* 10 + c - '0'; c = getchar();} \n\treturn x*f;\n}\n\nstruct Edge{\n\tint u, v, w, next;\n}edge[maxn << 1];\n\nint head[maxn], cnt, N, rt, t1, t2, t3, f[maxn];\nint fa[maxn];\n\nvoid addedge(int u, int v, int w){\n\tedge[++cnt].u = u;\n\tedge[cnt].v = v;\n\tedge[cnt].w = w;\n\tedge[cnt].next = head[u];\n\thead[u] = cnt;\n}\n\nint dfsfa(int u, int fat){\n\tfor(int i = head[u]; i; i = edge[i].next){\n\t\tint v = edge[i].v, w = edge[i].w;\n\t\tif(v == fat)continue;\n\t\t//cout<<v<<\" 1\"<<endl;\n\t\tfa[v] = w;\n\t\tdfsfa(v, u);\n\t}\n}\n\nint dfs(int u, int fat){\n\tint ans = 0x3f3f3f;\n\tf[u] = fa[u]; \n\tfor(int i = head[u]; i; i = edge[i].next){\n\t\tint v = edge[i].v, w = edge[i].w;\n\t\tif(v == fat)continue;\n\t\tdfs(v, u);\n\t\tif(ans == 0x3f3f3f)ans = 0;\n\t\tans += f[v];\n\t}\n\tf[u] = min(fa[u], ans);\n}\n\nint main(){\n\tN = rd(), rt = rd();\n\tfor(int i = 1; i < N; i++){\n\t\tt1 = rd(), t2 = rd(), t3 = rd();\n\t\taddedge(t1,t2,t3), addedge(t2,t1,t3);\n\t}\n\tdfsfa(rt , -1);\n\tfa[rt] = 0x3f3f3f;//\u9884\u5904\u7406 \n\tdfs(rt, -1);\n\tcout<<f[rt];\n}\n \n```\n\u5176\u5b9e\u90a3\u4e2adfsfa\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u5199...\n\u8fd9\u9053\u9898\u76ee\u7684\u540d\u5b57\u8499\u853d\u4e86\u6211\u7684\u53cc\u773c\uff0c\u4e8e\u662f\u4e0b\u610f\u8bc6\u7684\u5f04\u5f97\u590d\u6742\u4e86\u3002\n\n\u5efa\u8bae\u628a\u96be\u5ea6\u8c03\u6210\u7eff\u9898\uff0c\u4f5c\u4e3a\u6811\u5f62dp\u7684\u5165\u95e8\u9898\uff08~~\u867d\u7136\u6c34\uff0c\u4f46\u662f~~\u7ecf\u5178\uff09",
        "postTime": 1573027649,
        "uid": 208273,
        "name": "dzz1537568241",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u4e3a\u4e86\u5b66\u4e60\u6700\u5c0f\u5272\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u4f46\u662f\u770b\u9898\u89e3\u7684\u65f6\u5019\u53d1\u73b0\u505a\u6cd5\u8fd8\u6709\u6811\u5f62 $DP$ ~~\u6bd5\u7adf\u6ca1\u600e\u4e48\u8ba4\u771f\u60f3\u8fc7\u9898~~\uff0c\u5199\u5b8c\u6700\u5c0f\u5272\u4e4b\u540e\uff0c\u987a\u624b\u6765\u4e86\u53d1\u6811\u5f62 $DP$ \uff0c\u7136\u540e\u5c31\u8fc7\u4e86\uff0c\u611f\u89c9\u771f\u723d\u554a~~\n\n# \u9898\u9762\n\n[\u9898\u9762](https://www.luogu.org/problem/P3931)\n\n# Solution\n\n## \u89e3\u6cd5\u4e00\uff1a\u6700\u5c0f\u5272\u6700\u5927\u6d41\n\n\u56e0\u4e3a\u8981\u6c42\u662f\u6240\u6709\u7684\u53f6\u8282\u70b9\u90fd\u4e0d\u80fd\u5230\u8fbe\u6839\u7ed3\u70b9\uff0c\u800c\u4e14\u53ef\u4ee5\u5220\u9664\u8fb9\uff0c\u8981\u6c42\u5220\u8fb9\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u770b\u7740\u5c31\u5f88\u50cf\u6700\u5c0f\u5272\u3002\u4f46\u662f\u4ed4\u7ec6\u4e00\u770b\uff0c\u53d1\u73b0\u5272\u5b8c\u4e4b\u540e\u53f6\u8282\u70b9\u7ec4\u6210\u4e86\u5f88\u591a\u4e2a\u70b9\u96c6\uff0c\u600e\u4e48\u529e\uff1f\n\n\u6211\u4eec\u53ea\u9700\u8981\u518d\u865a\u62df\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u5c06\u6240\u6709\u7684\u6839\u7ed3\u70b9\u5168\u90e8\u8fde\u5411\u8be5\u8282\u70b9\uff0c\u4e14\u8fb9\u7684\u6d41\u91cf\u5747\u4e3a $INF$ \u3002\uff08\u56e0\u4e3a\u8fd9\u4e9b\u8fb9\u662f\u6211\u4eec\u4eba\u4e3a\u52a0\u7684\uff0c\u80af\u5b9a\u4e0d\u80fd\u9009\u8fd9\u4e9b\u8fb9\u5272\u53bb\uff09\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u6240\u6709\u7684\u8fb9\u5272\u5b8c\u4e4b\u540e\uff0c\u5b9e\u9645\u4e0a\u662f\u5c06\u8fd9\u5e45\u56fe\u53d8\u6210\u4e86\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u70b9\u96c6\uff0c\u4e14 $S$ \u548c $T$ \u5206\u522b\u5904\u4e8e\u4e00\u4fa7\u3002\u8fd9\u6837\u5c31\u53d8\u6210\u4e86\u6700\u5c0f\u5272\u7684\u6a21\u677f\u4e86\uff0c\u76f4\u63a5\u8dd1\u6700\u5927\u6d41\u5373\u53ef\uff08\u6700\u5c0f\u5272\u5728\u6570\u503c\u4e0a\u7b49\u4e8e\u6700\u5927\u6d41\uff0c\u4e0d\u6e05\u695a\u7684\u81ea\u884c\u767e\u5ea6\uff09\u3002\n\n\n\n## \u89e3\u6cd5\u4e8c\uff1a\u6811\u5f62 $DP$\n\n\u56e0\u4e3a\u53f6\u8282\u70b9\u4e0d\u80fd\u5230\u6839\u7ed3\u70b9\uff0c\u6211\u4eec\u8003\u8651\u6811\u5f62 $DP$ \u4ece\u4e0b\u5411\u4e0a\u7edf\u8ba1\u3002~~\u8fd9\u662f\u4ec0\u4e48\u903b\u8f91\uff08\u96fe~~\n\n\u8003\u8651 $dp_u$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u65f6\uff0c\u6240\u9700\u8981\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a $dp_u=\\sum \\min(dp_i,dis_i)$ \u3002\u5176\u4e2d $i$ \u4e3a $u$ \u7684\u5b50\u8282\u70b9\uff0c $dis$ \u8868\u793a $i$ \u5230 $u$ \u7684\u8ddd\u79bb\u3002\n\n\u7406\u89e3\uff1a\u5bf9\u4e8e\u5305\u542b\u4e8e\u4ee5 $i$ \u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u7684\u53f6\u8282\u70b9\uff0c\u5272\u53bb\u4ed6\u4eec\u6240\u9700\u7684\u6700\u5c0f\u4ee3\u4ef7\u4e3a\u76f4\u63a5\u5272\u53bb\u8fd9\u9897\u5b50\u6811\u548c\u4fdd\u6301\u539f\u6765\u505a\u6cd5\u7684\u6700\u5c0f\u503c\uff0c\u800c\u4e00\u4e2a $u$ \u53ef\u80fd\u6709\u591a\u4e2a\u5b50\u6811\uff0c\u6240\u4ee5\u8981\u6c42\u548c\uff08\u4e0d\u540c\u5b50\u6811\u76f8\u4e92\u72ec\u7acb\uff0c\u4e92\u4e0d\u5f71\u54cd\uff09\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u65f6\u5019\uff0c\u5f53 $u$ \u7684\u5b50\u8282\u70b9 $i$ \u5c31\u4e3a\u53f6\u8282\u70b9\u65f6\uff0c $dp_i$ \u8981\u8bbe\u4e3a $INF$ \uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5220\u53bb\u8be5\u70b9\u7684\u503c\u4e00\u5b9a\u4e3a $dis_i$ \u3002\n\n# Code\n\n## \u89e3\u6cd5\u4e00\uff1a\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(res*bas)%mod;\n\t\tbas=(bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 1e5+5;\nint n,s,t,u,v,d,cur[MAXN],head[MAXN],num_edge=-1,dis[MAXN];\nstruct Edge{\n\tint next,to,w;\n\tEdge(){}\n\tEdge(int next,int to,int w):next(next),to(to),w(w){}\n}edge[MAXN<<2];\nil add_edge(int u,int v,int w){\n\tedge[++num_edge]=Edge(head[u],v,w),head[u]=num_edge;\n\tedge[++num_edge]=Edge(head[v],u,w),head[v]=num_edge;\n}\nil build(int u,int fa){\n\tbool fla=0;\n\tfor(ri i=head[u];i!=-1;i=edge[i].next){\n\t\tif(edge[i].to==fa) continue;\n\t\tedge[i^1].w=0;\n\t\tbuild(edge[i].to,u),fla=1;\n\t}\n\tif(!fla) add_edge(u,t,INF);\n}\ninl bool BFS(int s,int t){\n\tdel(dis,0),dis[s]=1;\n\tqueue<int> q;q.push(s);\n\twhile(!q.empty()){\n\t\tri pos=q.front();q.pop();\n\t\tfor(ri i=head[pos];i!=-1;i=edge[i].next)\n\t\t\tif(!dis[edge[i].to]&&edge[i].w>0){\n\t\t\t\tdis[edge[i].to]=dis[pos]+1;\n\t\t\t\tif(edge[i].to==t) return true;\n\t\t\t\tq.push(edge[i].to);\n\t\t\t}\n\t}\n\treturn false;\n}\nit DFS(int now,int t,int flow){\n\tif(now==t) return flow;\n\tri s=0,k;\n\tfor(ri &i=cur[now];i!=-1;i=edge[i].next)\n\t\tif(dis[edge[i].to]==dis[now]+1&&edge[i].w>0){\n\t\t\tk=DFS(edge[i].to,t,min(flow-s,edge[i].w));\n\t\t\ts+=k,edge[i].w-=k,edge[i^1].w+=k;\n\t\t\tif(s==flow) break;\n\t\t}\n\tif(s==0) dis[now]=0;\n\treturn s;\n}\nit Dinic(int s,int t){\n\tri res=0;\n\twhile(BFS(s,t)){\n\t\tmemcpy(cur,head,sizeof(head));\n\t\tres+=DFS(s,t,INF);\n\t}\n\treturn res;\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(s),t=n+1,del(head,-1);\n\tfor(ri i=1;i<n;++i) read(u),read(v),read(d),add_edge(u,v,d);\n\tbuild(s,0);\n\tprintf(\"%d\",Dinic(s,t));\n\treturn 0;\n}\n```\n\n## \u89e3\u6cd5\u4e8c\uff1a\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il print(T x){\n\tif(x/10) print(x/10);\n\tputchar(x%10+'0');\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(res*bas)%mod;\n\t\tbas=(bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 1e5+5;\nint n,s,dp[MAXN],u,v,d,head[MAXN],num_edge;\nstruct Edge{\n\tint next,to,dis;\n\tEdge(){}\n\tEdge(int next,int to,int dis):next(next),to(to),dis(dis){}\n}edge[MAXN<<1];\nil add_edge(int u,int v,int dis){\n\tedge[++num_edge]=Edge(head[u],v,dis),head[u]=num_edge;\n\tedge[++num_edge]=Edge(head[v],u,dis),head[v]=num_edge;\n}\nil DFS(int u,int fa){\n\tbool fla=0;\n\tfor(ri i=head[u];i;i=edge[i].next){\n\t\tif(edge[i].to==fa) continue;fla=1;\n\t\tDFS(edge[i].to,u),dp[u]+=min(dp[edge[i].to],edge[i].dis);\n\t}\n\tif(!fla) dp[u]=INF;\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(s);\n\tfor(ri i=1;i<n;++i) read(u),read(v),read(d),add_edge(u,v,d);\n\tDFS(s,0);\n\tprintf(\"%d\",dp[s]);\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u6700\u5c0f\u5272\u4e5f\u662f\u7f51\u7edc\u6d41\u7684\u4e00\u4e2a\u91cd\u8981\u5206\u652f\uff0c\u4e5f\u662f\u4e00\u4e2a\u5efa\u56fe\u6e38\u620f\uff0c\u591a\u505a\u9898\uff0c\u627e\u5230\u611f\u89c9\uff0c\u5b66\u4e60\u4e0d\u540c\u7684\u6280\u5de7\uff0c\u624d\u80fd\u591f\u81ea\u5df1\u719f\u7ec3\u638c\u63e1\u3002",
        "postTime": 1566176420,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P3931 SAC E#1 - \u4e00\u9053\u96be\u9898 Tree \u9898\u89e3"
    },
    {
        "content": " [\u5b89\u5229\u4e00\u6ce2\u535a\u5ba2](https://www.cnblogs.com/cold-cold/p/10153495.html)\n\n\u8fd9\u9898\u771f\u7684\u4e0d\u662f\u4e00\u9053\u7528\u7f51\u7edc\u6d41\u89e3\u51b3\u7684\u597d\u9898\uff0c\u521d\u5b66\u8005\u5e94\u7ed5\u8def\n\n\u4f46\u6211\u504f\u504f\u5c31\u7528\u7f51\u7edc\u6d41\u5199\u4e86\n\n\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u8fde\u5411\u8d85\u7ea7\u6c47\u70b9n+1\uff0c\u5373\u53ef\n\n\u4f46\u6211\u5f53\u65f6\u628a \u6240\u8c13\u5272\u5f00\u4e00\u68f5\u6709\u6839\u6811\uff0c\u5c31\u662f\u5220\u9664\u82e5\u5e72\u6761\u8fb9\uff0c\u4f7f\u5f97\u4efb\u4f55\u53f6\u5b50\u8282\u70b9\u548c\u6839\u8282\u70b9\u4e0d\u8fde\u901a\u3002\n\n\u770b\u6210\u4e86\u6240\u8c13\u5272\u5f00\u4e00\u68f5\u6709\u6839\u6811\uff0c\u5c31\u662f\u5220\u9664\u82e5\u5e72\u6761\u8fb9\uff0c\u4f7f\u5f97\u4efb\u4f55\u8282\u70b9\u548c\u6839\u8282\u70b9\u4e0d\u8fde\u901a\u3002\n\n\u8fd9\u4e14\u4e0d\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\n\n\u8fd9\u68f5\u6811\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9\n\n\u8bfb\u5165\u8fb9\u4ee5\u540e\uff0cdfs\u5efa\u6811\n\n\u7b2c\u4e8c\u79cd\u5c31\u6bd4\u8f83\u7384\u5b66\n\n\u6211\u4eec\u5c06\u53cd\u5411\u8fb9\u4e0d\u8bbe\u4e3a0\uff0c\u800c\u4e5f\u8bbe\u4e3a\u539f\u6743\u503c\n\n\u56e0\u4e3a\u5b83\u662f\u65e0\u5411\u56fe\uff0c\u800c\u8fd9\u79cd\u505a\u6cd5\u4e0d\u4f1a\u9519\u7684\u539f\u56e0\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u662f\u4e00\u68f5\u6811\n\n\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <map>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long ll;\ninline int read()\n{\n    register int p(1),a(0);register char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if(ch=='-') p=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') a=a*10+ch-48,ch=getchar();\n    return a*p;\n}\nconst int N=100100,M=200100,INF=0x3f3f3f3f;\nqueue<int> Q;\nint n,m,src,st,u,v,w,cnt,ans=0,d[N],head[N],du[N];\nstruct EDGE{int nxt,val,to;}e[M<<1];\nvoid add(int u,int v,int w){e[cnt]=(EDGE){head[u],w,v};head[u]=cnt++;}\nint BFS()\n{\n    memset(d,-1,sizeof(d));\n    while(!Q.empty()) Q.pop();;\n    d[src]=0;Q.push(src);int u,v,w;\n    while(!Q.empty())\n    {\n        u=Q.front();Q.pop();\n        for(int i=head[u],v=e[i].to;i!=-1;i=e[i].nxt,v=e[i].to) if(e[i].val&&d[v]==-1)\n        {\n            d[v]=d[u]+1;\n            if(v==st) return 1;\n            Q.push(v);\n        }\n    }\n    return 0;\n}\nint Dinic(int u,int flow)\n{\n    if(u==st||flow==0) return flow;\n    int res=flow,tt;\n    for(int i=head[u],v=e[i].to;i!=-1&&res;i=e[i].nxt,v=e[i].to)\n    if(e[i].val&&d[v]==d[u]+1)\n    {\n        tt=Dinic(v,min(res,e[i].val));\n        if(!tt) d[v]=-1;\n        e[i].val-=tt;\n        e[i^1].val+=tt;\n        res-=tt;\n    }\n    return flow-res;\n}\nint main()\n{\n    // freopen(\"input\",\"r\",stdin);\n    // freopen(\"output\",\"w\",stdout);\n    memset(head,-1,sizeof(head));\n    n=read(),m=n-1,src=read(),st=n+1;\n    for(int i=1;i<=m;i++)\n    {\n        u=read(),v=read(),w=read(); du[u]++;du[v]++;\n        add(u,v,w);add(v,u,w);\n    }\n    for(int i=1;i<=n;i++)if(i!=src&&du[i]==1) add(i,st,INF),add(st,i,0);\n    while(BFS())\n        ans+=Dinic(src,INF);\n    printf(\"%d\",ans);\n    return 0;\n}\n/*\n \n*/\n```",
        "postTime": 1545324628,
        "uid": 48934,
        "name": "cold_cold",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    },
    {
        "content": "**\u6811\u5f62DP**\n\n**F[x]\u8868\u793a\u9009\u53d6x\u8282\u70b9\u4ee5\u4e0b\u7684\u8fb9\u80fd\u4f7f\u53f6\u5b50\u7ed3\u70b9\u4e0ex\u4e0d\u8fde\u901a\u7684\u6700\u5c0f\u503c**\n\n**F[x]=min(\u4e0e\u5b50\u8282\u70b9\u7684\u6743\u503c\uff0c\u4e0e\u5b50\u6811\u7684\u6743\u503c\uff09**\n\n**\u8fb9\u754c\u6761\u4ef6F[\u5b50\u8282\u70b9]=INF**\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define maxn 300000\nusing namespace std;\nstruct node\n{\n    int next,to,cost;\n}e[maxn];\nint deep[maxn];\nint cnt;\nint head[maxn];\nint f[maxn];\nint add(int u,int v,int w)\n{\n    e[++cnt].next=head[u];\n    e[cnt].to=v;\n    e[cnt].cost=w;\n    head[u]=cnt;\n}\nint dfs(int x,int fa)\n{\n    if(deep[x]==1&&fa!=0)      //\u53f6\u5b50\u7ed3\u70b9 \n    {\n        f[x]=0x7fffffff;        //\u8fb9\u754c \u5904\u7406  \n        return 0;      \n    }\n    for(int i=head[x];i;i=e[i].next)     //\u679a\u4e3e\u513f\u5b50\u7ed3\u70b9 \n    {\n        int to=e[i].to;\n        if(to!=fa)\n        {\n            dfs(to,x);                  \n            f[x]+=min(f[to],e[i].cost); //\u8f6c\u79fb \n        }\n    }\n}\nint main()\n{\n    int n,s;\n    cin>>n>>s;\n    for(int i=1;i<n;i++)\n    {\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        deep[x]++,deep[y]++;       //\u7528\u4e8e\u627e\u53f6\u5b50\u7ed3\u70b9 \n        add(x,y,z);            //\u8fde\u8fb9 \n        add(y,x,z);\n    }\n    dfs(s,0);           //\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u627e \n    cout<<f[s]<<endl;       //\u6700\u5c0f\u503c\u4f7f\u5f97\u53f6\u5b50\u7ed3\u70b9\u4e0e\u6839\u8282\u70b9\u4e0d\u8fde\u901a \n    return 0;\n}\n```",
        "postTime": 1507366900,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3931 \u3010SAC E#1 - \u4e00\u9053\u96be\u9898 Tree\u3011"
    }
]