[
    {
        "content": "~~\u849f\u84bb~~\u53c8\u6765\u53d1\u9898\u89e3\u5566\uff01\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u975e\u5e38\u795e\u5947\u7684\u56fe\u8bba\u5c0f\u9898\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u90bb\u7684\u62ec\u53f7\uff1a    \n\u5982\u679c\u62ec\u53f7\u76f8\u540c\u5219\u8fde\u4e00\u6761\u6743\u503c\u4e3a _**a**_ \u7684\u8fb9\uff0c\u5426\u5219\u8fde\u4e00\u6761\u6743\u503c\u4e3a _**b**_ \u7684\u8fb9\u3002   \n\u9274\u4e8e\u6b64\u9898\u7684 _**n**_ \u8f83\u5927\uff0c\u4f7f\u7528**Floyd-Warshall**\u7b97\u6cd5\u4f1a\u8d85\u65f6\uff0c\u8fd9\u91cc\u4f7f\u7528**Dijkstr**a\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u3002      \n\n\n------------\n\n\u4ee3\u7801\u6765\u5566\uff01\uff01\uff01\uff08\u4f38\u624b\u515a\u52ff\u6270\uff0c\u6709\u5751\uff01\uff01\uff01\uff09\n\n```cpp\n//\u4ee3\u7801\u6539\u7f16\u81eaUSACO\u7684\u5b98\u65b9\u9898\u89e3\n#include<bits\\stdc++.h>\n//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\n#define NMAX 40\nint grid[NMAX][NMAX];\nint di[4]={1,-1,0,0};\nint dj[4]={0,0,1,-1};\nbool visited[NMAX][NMAX];\nstruct node\n{\n\tint i,j;\n\tint dist;\n\tnode(int i,int j,int dist):i(i),j(j),dist(dist){ }\n\tbool operator<(node const& other)const {\n\t\treturn dist > other.dist;\n\t}\n};\nint getRadius(int n,int sourcei,int sourcej,int costSame,int costDiff)\n{\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=0;j<n;j++) visited[i][j]=false;\n\t}\n\tpriority_queue<node> q;\n\tq.push(node(sourcei, sourcej, 0));\n\tint maxDist=0;\n\twhile(q.size()>0)\n\t{\n    \tnode v=q.top();\n    \tq.pop();\n    \tif(!visited[v.i][v.j])\n\t\t{\n\t\t\tvisited[v.i][v.j]=true;\n\t\t\tfor(int d=0;d<4;d++)\n\t\t\t{\n\t\t\t\tint i1=v.i+di[d];\n        \t\tint j1=v.j+dj[d];\n        \t\tif(i1>=0&&i1<n&&j1>=0&&j1<n)\n\t\t\t\t{\n\t\t\t\t\tint dist=v.dist+(grid[v.i][v.j]==grid[i1][j1]?costSame:costDiff);\n\t\t\t\t\tq.push(node(i1, j1, dist));\n\t\t\t\t}\n\t\t\t}\n\t\t\tmaxDist=max(maxDist, v.dist);\n\t\t}\n\t}\n\treturn maxDist;\n}\nint main()\n{\n\tint n,costSame,costDiff;\n\tcin<<n<<costSame<<costDiff;\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tchar c;\n\t\t\tdo \n\t\t\t{\n\t\t\t\tc=fgetc(stdin);\n\t\t\t}while(c!='('&&c!=')');\n\t\t\tgrid[i][j]=c;\n\t\t}\n\t}\n\tint diam=0;\n\tfor(int i=0;i<n;i++)\n\t{\n    \tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tint radius=getRadius(n,i,j,costSame,costDiff);\n      \t\tdiam=max(diam,radius);\n\t\t}\n\t}\n\tcout<<diam<<'/n';\n\treturn 0;\n}\n```\n\u4f46\u662f...TLE...233333333333   \n\u4e8e\u662f\u5982\u4f55\u5904\u7406TLE\u5462\uff1f   \n1. \u8bfb\u5165\u4f18\u5316\uff01\uff01\uff01    \nc++\u4e2d\u7684\u6d41\u8f93\u5165\u6bd4c\u4e2d\u7684scanf\u6ee1\u4e86\u592a\u591a\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u4e3b\u7a0b\u5e8f\u4e00\u5f00\u59cb\u52a0\u4e0a\u8fd9\u6837\u4e00\u53e5\u8bdd\uff1a\n```cpp\nios::sync_with_stdio(false);\n```\n\u8fd9\u6837\u53ef\u4ee5\u5c06cin\u7684\u901f\u5ea6\u52a0\u901f\u5230scanf\u751a\u81f3\u66f4\u5feb\uff01\uff01\uff01   \n2. \u8bfb\u5165\u4f18\u5316\uff01\uff01\uff01(2)   \n\u5229\u7528\u81ea\u5b9a\u4e49\u51fd\u6570read\u52a0\u901f\u8bfb\u5165\u3002\n\n3. \u7384\u5b66\u52a0\u901f\n\u4ee5\u4e0b\u662f @ttyclear \u5927\u795e\u7ed9\u6211\u7684\u7384\u5b66\u52a0\u901f\uff0c\u9700\u8981\u52a0\u5728\u5934\u6587\u4ef6\u524d\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n```\n4. \u6c27\u4f18\u5316\uff08O2\uff09",
        "postTime": 1532923868,
        "uid": 46654,
        "name": "\u98ce\u683c\u96e8\u5173",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3057 \u3010[USACO12NOV]\u8fdc\u5904\u7684\u7267\u573aDistant Pastures\u3011"
    },
    {
        "content": "### \u524d\u8a00\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3057)\n\n[$\\color{red}{see}\\space \\color{green}{in}\\space \\color{blue}{my}\\space \\color{purple}{blog}$](https://www.luogu.com.cn/blog/liangbowen/solution-P3057)\n\n\u5728\u5b66\u6821\u6bd4\u8d5b\u65f6\u9047\u5230\u4e86\u8fd9\u4e00\u9898\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u672c\u9898\u662f\u6700\u77ed\u8def\u597d\u9898\u3002\n\n### \u601d\u8def\n\n\u6b64\u9898\u660e\u663e\u662f\u6700\u77ed\u8def\u3002\n\n\u6211\u4eec\u9700\u8981\u6c42\u4efb\u610f\u4e24\u70b9\u7684\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\uff0c\u5373\u5168\u6e90\u6700\u77ed\u8def\u3002\n\n\u672c\u9898\u5171\u6709 $n^2$ \u4e2a\u70b9\uff0c\u5982\u679c\u8dd1 Floyd \u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^6)$\uff0c\u975e\u5e38\u6781\u9650\uff0c\u4e0d\u662f\u672c\u9898\u6b63\u89e3\u3002\n\n\u4f46\u662f\uff0c\u6211\u53c8\u4e0d\u4f1a\u5199 Johnson \u5168\u6e90\u6700\u77ed\u8def\uff0c\u600e\u4e48\u529e\u5462?\n\n\u6bcf\u4e2a\u70b9\u671d\u56db\u5468\u5efa\u8fb9\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u8fb9\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 $4 \\times n^2$\u3002\n\n\u60f3\u5230\u8fd9\u91cc\uff0c\u660e\u663e\u53ef\u4ee5\u8dd1 $n^2$ \u6b21 dijkstra \u5b9e\u73b0\uff0c\u56e0\u4e3a\u5f53\u8fb9\u6570\u8f83\u5c0f\u65f6\uff0c\u8dd1\u591a\u6b21 dijkstra \u4f1a\u6bd4 Floyd \u5feb\u3002\n\n\u6b64\u5904 dijkstra \u662f\u4f7f\u7528\u4f18\u5148\u961f\u5217\u5b9e\u73b0\u3002\n\n\u90a3\u4e48\u5c31\u5f88\u5bb9\u6613\u5199\u51fa\u4ee3\u7801\u4e86\u3002\n\n### \u601d\u8def\u603b\u7ed3\n\n1. \u8bfb\u5165\u6570\u636e\u3002\n\n2. \u6bcf\u4e2a\u70b9\u671d\u56db\u5468\u5efa\u8fb9\u3002\n3. \u5199\u4e00\u4e2a dijkstra \u7684\u6a21\u7248\u3002\n4. \u7edf\u8ba1\u6700\u5927\u503c\uff0c\u8f93\u51fa\u3002\n\n### \u4ee3\u7801\n\n\u6700\u77ed\u8def\u6a21\u7248\u6ca1\u6709\u5f3a\u5236\u8981\u6c42\uff0c\u6309\u7167\u81ea\u5df1\u7684\u4e60\u60ef\u5199 dijkstra \u5f53\u7136\u53ef\u4ee5\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff1a\u8fb9\u6570 $m$ \u6700\u591a\u6709\u591a\u5c11\uff1f\n\n$m = 905 * 4 * 2 = 7200$\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#define N 905\n#define M 7205\nusing namespace std;\nint n, nn, A, B;\nint dict[4][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nbool a[35][35];\nstruct Node\n{\n\tint now, nxt, w;\n}e[M];\nint head[N], cur;\nvoid add(int x, int y, int k)\n{\n\te[++cur].now = y;\n\te[cur].nxt = head[x];\n\te[cur].w = k;\n\thead[x] = cur;\n}\nstruct Dis\n{\n\tint pos, len;\n\tbool operator <(const Dis &t) const\n\t{\n\t\treturn len > t.len; \n\t}\n}dis[N];\nbool vis[N];\nint dijkstra(int first) \n{\n\tpriority_queue <Dis> Q;\n\tfor (int i = 1; i <= nn; i++) dis[i].pos = i, dis[i].len = 2147483647, vis[i] = false;\n\tdis[first].len = 0;\n\tQ.push(dis[first]);\n\twhile (!Q.empty())\n\t{\n\t\tint topi = Q.top().pos;\n\t\tQ.pop();\n\t\tif (vis[topi]) continue;\n\t\tvis[topi] = true;\n\t\tfor (int i = head[topi]; i; i = e[i].nxt)\n\t\t\tif (dis[topi].len + e[i].w < dis[e[i].now].len)\n\t\t\t{\n\t\t\t\tdis[e[i].now].len = dis[topi].len + e[i].w;\n\t\t\t\tQ.push(dis[e[i].now]);\n\t\t\t}\n\t}\n    //\u6b64\u5904\u6709\u662f\u60df\u4e00\u4e0e\u666e\u901a\u6a21\u7248\u4e0d\u540c\u7684\u5730\u65b9\uff0c\u9700\u8981\u627e\u51fa\u6700\u5927\u503c\u3002\n\tint maxn = 0;\n\tfor (int i = 1; i <= nn; i++) maxn = max(maxn, dis[i].len);\n\treturn maxn;\n}\nvoid Input()\n{\n\tscanf(\"%d%d%d\", &n, &A, &B);\n\tnn = n * n;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tchar x;\n\t\t\tcin >> x;\n\t\t\tif (x == '(') a[i][j] = true;\n\t\t}\n}\nvoid get_edge()\n{\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tfor (int k = 0; k < 4; k++)\n\t\t\t{\n\t\t\t\tint x = i + dict[k][0], y = j + dict[k][1];\n\t\t\t\tif (!(1 <= x && x <= n && 1 <= y && y <= n)) continue;\n\t\t\t\tint t1 = n * (i-1) + j, t2 = n * (x-1) + y;\n\t\t\t\tif (a[i][j] == a[x][y]) add(t1, t2, A);\n\t\t\t\telse add(t1, t2, B);\n\t\t\t}\n}\nvoid solve()\n{\n\tint maxn = 0;\n\tfor (int i = 1; i <= nn; i++) maxn = max(maxn, dijkstra(i));\n\tprintf(\"%d\", maxn);\n}\nint main()\n{\n\tInput();\n\tget_edge();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1653542796,
        "uid": 367488,
        "name": "liangbowen",
        "ccfLevel": 0,
        "title": "P3057 \u9898\u89e3"
    },
    {
        "content": "\u4e00\u773c\u56fe\u8bba\u9898\u3002\r\n\r\n\u7531\u4e8e\u6b64\u9898\u6570\u636e\u8f83\u5c0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u671d\u56db\u4e2a\u65b9\u5411\u8d70\uff0c\u6240\u4ee5\u8003\u8651\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\uff0c\u5982\u679c\u6b64\u9898\u53ea\u80fd\u671d\u53f3\u4e0b\u4e24\u4e2a\u65b9\u5411\u8d70\uff0c\u5c31\u8003\u8651\u52a8\u6001\u89c4\u5212\uff0c\u56e0\u4e3a\u52a8\u6001\u89c4\u5212\u662f\u901a\u8fc7\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u5f97\u5230\u7b54\u6848\u7684\uff0c\u800c\u672c\u9898\u4e00\u4e2a\u70b9\u53ef\u80fd\u4f1a\u88ab\u91cd\u590d\u66f4\u65b0\u3002\r\n\r\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u671d\u4e0e\u5b83\u76f8\u90bb\u7684\u56db\u4e2a\u70b9\u5efa\u8fb9\uff0c\u4ecb\u4e8e\u6b64\u9898\u7684\u6570\u636e\u8303\u56f4\uff0cFloyd \u7b97\u6cd5\u65e0\u6cd5\u901a\u8fc7\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u5806\u4f18\u5316\u7684 Dijkstra \u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm\\log m)$\uff0c\u5176\u4e2d $m$ \u4e3a\u8fb9\u6570\u3002\r\n\r\n\u4f46\u7531\u4e8e\u6b64\u9898\u6570\u636e\u8f83\u6c34\uff0c\u6240\u4ee5 Floyd \u7b97\u6cd5\u4e5f\u80fd\u901a\u8fc7\uff0c\u4f46\u6211\u4eec\u63a5\u4e0b\u6765\u91cd\u70b9\u8bb2\u7684\u662f\u5bf9 Floyd \u7b97\u6cd5\u7684\u4f18\u5316\u3002\r\n\r\n\u4ee5\u4e0b\u662f\u6b63\u5e38\u7684 Floyd \u7b97\u6cd5\u4ee3\u7801\uff1a\r\n```cpp\r\nfor(int k=1;k<=n;k++) for(int i=1;i<=n;i++) for(int j=1;j<=n;j++) a[i][j]=min(a[i][j],a[i][k]+a[k][j]);\r\n```\r\n\u4ee5\u4e0b\u662f\u4f18\u5316\u7684 Floyd \u7b97\u6cd5\u4ee3\u7801\uff1a\r\n```cpp\r\nfor(int k=1;k<=n;k++) for(int i=1;i<=n;i++) {\r\n\tif(a[i][k]==1e9) continue;\r\n\tfor(int j=1;j<=n;j++) a[i][j]=min(a[i][j],a[i][k]+a[k][j]);\r\n}\r\n```\r\n\u975e\u5e38\u597d\u7406\u89e3\uff0c\u5982\u679c\u8fd9\u4e00\u6761\u8fb9\u65e0\u6cd5\u5bf9\u4efb\u4f55\u8fb9\u8fdb\u884c\u677e\u5f1b\uff0c\u5219\u8fd9\u6761\u8fb9\u65e0\u7528\u3002\r\n\r\n\u4f18\u5316\u540e\u7684 Floyd \u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u754c\u4e3a $O(n^3)$\uff0c\u4e0b\u754c\u4e3a $O(n^2)$\u3002\r\n\r\n\u8fd9\u662f\u6211\u4e24\u4efd\u4ee3\u7801\u7684\u65f6\u95f4\u5dee\u8ddd\uff0c[\u8fd9\u4e00\u7bc7\u4ee3\u7801](https://www.luogu.com.cn/record/102893135)\u6ca1\u6709\u52a0\u4f18\u5316\uff0c\u800c[\u53e6\u4e00\u7bc7\u4ee3\u7801](https://www.luogu.com.cn/record/102890804)\u6709\u3002\r\n\r\n\u53ef\u4ee5\u770b\u5230\uff0c\u4e24\u4efd\u4ee3\u7801\u7684\u65f6\u95f4\u5dee\u8ddd\u8fd8\u662f\u975e\u5e38\u5927\u7684\uff0c\u5dee\u4e86\u5c06\u8fd1\u4e24\u500d\u3002",
        "postTime": 1682858702,
        "uid": 670775,
        "name": "12345678hzx",
        "ccfLevel": 4,
        "title": "P3057\u9898\u89e3"
    },
    {
        "content": "\u5982\u679c\u53ea\u80fd\u5411\u53f3\u3001\u4e0b\u8d70\uff0c\u8003\u8651 dp\uff1b\u53ef\u4ee5\u5411\u56db\u4e2a\u65b9\u5411\u8d70\uff0c\u5982\u672c\u9898\uff0c\u8003\u8651\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\u3002\n\n\u800c $n \\le 30$ \u7684\u6570\u636e\u8303\u56f4\u5c31\u5341\u5206\u5141\u8bb8\u6211\u4eec\u5efa\u56fe\u679a\u4e3e\u3002\u5bf9\u4e8e\u5efa\u56fe\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u4f4d\u7f6e $a_{i,j}$ \u62bd\u8c61\u6210\u4e00\u4e2a\u70b9 $(i-1) \\times n+j$\uff0c\u4ee3\u8868\u8fd9\u4e2a\u70b9\u7684\u7f16\u53f7\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u679a\u4e3e\u56db\u5468\u7684\u56db\u4e2a\u70b9\uff0c\u5982\u679c\u62ec\u53f7\u76f8\u540c\uff0c\u5c31\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $a$ \u7684\u8fb9\uff1b\u5426\u5219\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a $b$ \u7684\u8fb9\u3002\u63a5\u7740\u5c31\u53ef\u4ee5\u8dd1\u6700\u77ed\u8def\u3002\u6211\u4eec\u679a\u4e3e $n^2$ \u4e2a\u70b9\uff0c\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u6e90\u70b9\u5206\u522b\u8dd1\u4e00\u6b21\u5355\u6e90\u6700\u77ed\u8def\u3002\u7136\u540e\u518d\u8fdb\u884c $n^2$ \u6b21\u679a\u4e3e\uff0c\u53d6\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\u3002\u8fd9\u91cc\u6211\u4f7f\u7528\u5806\u4f18\u5316\u7684 dijkstra\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^4 \\log (n^2))$\u3002\n\n### Code\uff1a\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nint n, s, p, x, y, h[910], dis[910], vis[910];\nchar a[35][35];\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\nstruct node{\n\tint x, y, z, next;\n}d[7510];\nstruct edge{\n\tint p, d;\n\tbool operator < (const edge &A) const{\n\t\treturn A.d < d;\n\t}\n};\nvoid add(int x, int y, int z){\n\td[++p].y = y, d[p].z = z, d[p].next = h[x], h[x] = p;\n}\nvoid dijkstra(int s){\n\tmemset(vis, 0, sizeof(vis));\n\tmemset(dis, 9, sizeof(dis));\n\tpriority_queue <edge> q;\n\tq.push((edge){s, 0});\n\tdis[s] = 0;\n\twhile (!q.empty()){\n\t\tedge T = q.top(); q.pop();\n\t\tif (vis[T.p]) continue; vis[T.p] = 1;\n\t\tfor (int i=h[T.p]; i; i=d[i].next){\n\t\t\tint sy = d[i].y;\n\t\t\tif (dis[sy] > dis[T.p] + d[i].z){\n\t\t\t\tdis[sy] = dis[T.p] + d[i].z; q.push((edge){sy, dis[sy]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf (\"%d%d%d\", &n, &x, &y);\n\tfor (int i=1; i<=n; i++){\n\t\tfor (int j=1; j<=n; j++){\n\t\t\tcin >> a[i][j];\n\t\t}\n\t}\n\tfor (int i=1; i<=n; i++){\n\t\tfor (int j=1; j<=n; j++){\n\t\t\tfor (int k=0; k<4; k++){\n\t\t\t\tint nx = i + dx[k], ny = j + dy[k];\n\t\t\t\tif (nx <= 0 || ny <= 0 || nx > n || ny > n) continue;\n\t\t\t\tif (a[nx][ny] == a[i][j]) add((i-1)*n+j, (nx-1)*n+ny, x);\n\t\t\t\telse add((i-1)*n+j, (nx-1)*n+ny, y);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1; i<=n; i++){\n\t\tfor (int j=1; j<=n; j++){\n\t\t\tdijkstra((i-1)*n+j);\n\t\t\tfor (int k=1; k<=n; k++){\n\t\t\t\tfor (int l=1; l<=n; l++){\n\t\t\t\t\ts = max(s, dis[(k-1)*n+l]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf (\"%d\\n\", s);\n\treturn 0;\n}\n\n```",
        "postTime": 1657023239,
        "uid": 399286,
        "name": "\u82cf\u8054\u5c0f\u6e23",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3] P3057 [USACO12NOV]Distant Pastures S"
    },
    {
        "content": "# [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3057)\n\n## \u89e3\u9898\u601d\u8def\uff1a\u6700\u77ed\u8def\uff08dijkstra\uff09\n\n\u9605\u8bfb\u9898\u9762\uff0c\u53ef\u4ee5\u77e5\u9053\u662f\u6c42\u70b9\u5bf9\u95f4\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\u3002\u5148\u8003\u8651floyed\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\u8fbe $\\large O(n^6)$ \uff0c\u660e\u663e\u4f1a\u8d85\u65f6\u3002~~\u867d\u7136\u6709\u4e2a\u540c\u5b66\u8fd8\u771f\u5361\u8fc7\u53bb\u4e86~~\n\n\u8fd9\u4e2a\u65f6\u5019\u5176\u5b9e\u53ef\u4ee5\u8003\u8651\u8dd1 $n^2$ \u904d\u5355\u6e90\u6700\u77ed\u8def\u3002\u8fd9\u91cc\u6211\u7528\u7684\u662fdijkstra,\u8bbe $m$ \u4e3a\u8fb9\u6570\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6 $\\large O(n^2(n^2+m)\\log n^2)$ \u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1007;\nint n,A,B,ans,dis[maxn][maxn];\nbool bk[50][50],vis[50][50];\nconst int pyx[5]={0,-1,0,1,0},pyy[5]={0,0,-1,0,1};\nstruct zb{\n\tint x,y,c;\n\tbool operator <(const zb &x)const{return c>x.c;}\n}d[maxn];\npriority_queue<zb> q;\ninline int plc(int x,int y){//\u6c42\u56fe\u4e0a(x,y)\u70b9\u5728d\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\n\treturn (x-1)*n+y;\n}\nvoid dij(int x,int y){\n\twhile(!q.empty())q.pop();\n\tfor(int i=1;i<=n*n;i++)d[i]={i%n?i/n+1:i/n,i%n?i%n:n,2147483647};\n\td[plc(x,y)].c=0;\n\tmemset(vis,false,sizeof(vis));\n\tq.push(d[plc(x,y)]);\n\twhile(!q.empty()){\n\t\tzb now=q.top();q.pop();\n\t\tif(vis[now.x][now.y])continue;\n\t\tvis[now.x][now.y]=true;\n\t\tfor(int i=1;i<=4;i++){\n\t\t\tint nx=now.x+pyx[i],ny=now.y+pyy[i],nc=d[plc(now.x,now.y)].c+(bk[now.x][now.y]==bk[nx][ny]?A:B);\n\t\t\tif(nx>=1&&ny>=1&&nx<=n&&ny<=n&&!vis[nx][ny]&&nc<d[plc(nx,ny)].c){\n\t\t\t\td[plc(nx,ny)].c=nc;\n\t\t\t\tq.push(d[plc(nx,ny)]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n*n;i++){\n\t\tif(vis[i%n?i/n+1:i/n][i%n?i%n:n])ans=max(d[i].c,ans);\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&A,&B);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tchar tmp;\n\t\t\tcin>>tmp;\n\t\t\tbk[i][j]=(tmp=='(');\n\t\t}\n\t}\n\tmemset(dis,0x7f,sizeof(dis));\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tdij(i,j);\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n}\n```\n",
        "postTime": 1653189962,
        "uid": 578590,
        "name": "yinhee",
        "ccfLevel": 0,
        "title": "P3057\u9898\u89e3"
    },
    {
        "content": "\u4e0d\u96be\u60f3\u5230\uff0c\u5c06\u77e9\u9635\u7684\u6bcf\u4e2a\u70b9\u90fd\u770b\u6210\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u8fde\u8fb9\u8dd1\u6700\u77ed\u8def\u3002\u6211\u4eec\u4ee4\u77e9\u9635\u4e2d $(i,\\,j)$ \u7684\u8282\u70b9\u7f16\u53f7\u4e3a $n \\times (i-1) + j$\uff0c\u8bbe $N$ \u4e3a\u8282\u70b9\u6570\uff0c\u90a3\u4e48\u56fe\u4e2d\u4e00\u5171\u4f1a\u6709 $N=n^2$ \u4e2a\u8282\u70b9\u3002\u8fde\u8fb9\u65f6\u82e5 $maze_{i,\\,j} = maze_{k,\\,l}$ \u5219\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $a$ \u7684\u8fb9\uff0c\u5426\u5219\u8fb9\u6743\u4e3a $b$\u3002\n\n\u9898\u76ee\u8981\u6c42\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u6700\u77ed\u8def\u7684\u6700\u5927\u503c\uff0c\u9996\u5148\u60f3\u5230 $\\text{Floyd}$ \u7b97\u6cd5\uff0c\u7136\u800c $O(N^3)$\uff0c\u5373 $O(n^6)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u65e0\u6cd5\u901a\u8fc7\u3002\u8003\u8651\u4f7f\u7528\u5806\u4f18\u5316 $\\text{Dijkstra}$ \u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(N(N+M) \\log N)$\uff0c\u5176\u4e2d $M$ \u4e3a\u8fb9\u6570\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n\u6ce8\u610f\uff0c\u54ea\u4e9b\u5730\u65b9\u7684\u6570\u7ec4\u8981\u5f00 $n \\times n$\uff0c\u54ea\u4e9b\u4e0d\u9700\u8981\u3002\n\n$\\text{Code}$\uff1a\n\n```cpp\n#define def(N, K, b) const K N = b;\n#define rep(i, b, s) for(int i = b; i <= s; ++i)\n#define fi first\n#define se second\n#define pii pair<int, int>\n\ndef(N, int, 31)\ndef(M, int, 3605)\ndef(inf, int, 0x3f3f3f3f)\n\nstruct Edge {\n\tint to, val, nxt;\n} e[M << 1];\n\nint n, a, b, mx;\nchar mze[N][N];\nint head[N * N], cnt;\nint dis[N * N];\nbool vis[N * N];\n\nvoid add(int u, int v, int type) {\n\te[++cnt].to = v;\n\te[cnt].val = (type ? a : b);\n\te[cnt].nxt = head[u];\n\thead[u]\t= cnt;\n}\n\nvoid Add(int u, int v, int type) { add(u, v, type), add(v, u, type); }\n\nvoid Dijkstra(int x) {\n\tmemset(dis, 0x3f, sizeof dis); memset(vis, 0, sizeof vis);\n\tdis[x] = 0;\n\tpriority_queue<pii, vector<pii >, greater<pii > > q;\n\tq.push(mp(0, x));\n\twhile(!q.empty()) {\n\t\tint u = q.top().se;\n\t\tq.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u] = true;\n\t\tfor(int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif(dis[v] > dis[u] + e[i].val) {\n\t\t\t\tdis[v] = dis[u] + e[i].val;\n\t\t\t\tif(!vis[v]) q.push(mp(dis[v], v));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tcin >> n >> a >> b;\n\trep(i, 1, n) scanf(\"%s\", mze[i] + 1);\n\trep(i, 1, n) rep(j, 1, n) {\n\t\tint now = (i - 1) * n + j;\n\t\tif(i > 1) Add(now, now - n, (mze[i][j] == mze[i - 1][j]));\n\t\tif(j > 1) Add(now, now - 1, (mze[i][j] == mze[i][j - 1]));\n\t}\n\trep(i, 1, n * n) {\n\t\tDijkstra(i);\n\t\trep(j, 1, n * n) To_max(mx, (dis[j] == inf ? 0 : dis[j]));\n\t}\n\tprintf(\"%d\\n\", mx);\n \treturn 0;\n}\n```\n",
        "postTime": 1612158778,
        "uid": 457831,
        "name": "\u0418\u0254l\u0254",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3057 [USACO12NOV]Distant Pastures S"
    },
    {
        "content": "## P3057 \u9898\u89e3\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8bb0\u4e3a $ (i,j) $\uff0c\u6211\u4eec\u4ee5\u5b83\u4e3a\u56fe\u4e2d\u7684\u8282\u70b9\uff0c\u5411\u5b83\u56db\u5468\u7684\u70b9\uff08\u5982\u679c\u6709\uff09\u8fde\u8fb9\uff0c\u8dd1\u6700\u77ed\u8def\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u6bcf\u4e2a\u70b9\u8fdb\u884c**\u79bb\u6563\u5316**\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u5728\u8dd1\u6700\u77ed\u8def\u7684\u5224\u65ad\u6bcf\u4e2a\u70b9\u5728\u7b2c\u51e0\u884c\u7b2c\u51e0\u5217\u4e86\u3002\n\n\u5728\u8fd9\u4e2a $ N \\cdot N $ \u7684\u77e9\u9635\u4e2d\uff0c\u5bf9\u4e8e $ \\forall (i,j),\\ i,j\\in [1,N] $\uff0c\u7ed9\u5b83\u6dfb\u52a0\u4e00\u4e2a\u7f16\u53f7\u3002\u7f16\u53f7\u4ece $ (1,1) $ \u5f00\u59cb\u7684 $1$ \u5230 $ (N,N) $ \u7684 $n^2$\uff0c\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\n$$ 1\\ \\ 2\\ \\ 3 $$\n\n$$ 4\\ \\ 5\\ \\ 6 $$\n\n$$ 7\\ \\ 8\\ \\ 9 $$\n\n\u90a3\u4e48\u5bb9\u6613\u63a8\u5f97\u7f16\u53f7\u8ba1\u7b97\u7684\u516c\u5f0f\uff1a\n\n$$ idx[(i,j)]=n\\cdot (i-1)+j $$\n\n\u79bb\u6563\u5316\u8fdb\u884c\u5b8c\u6bd5\uff0c\u73b0\u5728\u8003\u8651\u8fde\u8fb9\u3002\u663e\u7136\uff0c\u5728\u6700\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u4ee5\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a\n\n- \u4e0a\u9762\u7684\u70b9\uff1a\u5e94\u8be5\u6ee1\u8db3 $ i\\in [2,N] $\uff0c\u6839\u636e\u4e0a\u9762\u7684\u516c\u5f0f\uff0c\u8fd9\u4e2a\u70b9\u7684\u7f16\u53f7\u662f $ idx[(i,j)]-n $\n\n- \u4e0b\u9762\u7684\u70b9\uff1a\u5e94\u8be5\u6ee1\u8db3 $ i\\in [1,N-1] $\uff0c\u6839\u636e\u4e0a\u9762\u7684\u516c\u5f0f\uff0c\u8fd9\u4e2a\u70b9\u7684\u7f16\u53f7\u662f $ idx[(i,j)]+n $\n\n- \u5de6\u9762\u7684\u70b9\uff1a\u5e94\u8be5\u6ee1\u8db3 $ j\\in [2,N] $\uff0c\u6839\u636e\u4e0a\u9762\u7684\u516c\u5f0f\uff0c\u8fd9\u4e2a\u70b9\u7684\u7f16\u53f7\u662f $ idx[(i,j)]-1 $\n\n- \u53f3\u9762\u7684\u70b9\uff1a\u5e94\u8be5\u6ee1\u8db3 $ j\\in [1,N-1] $\uff0c\u6839\u636e\u4e0a\u9762\u7684\u516c\u5f0f\uff0c\u8fd9\u4e2a\u70b9\u7684\u7f16\u53f7\u662f $ idx[(i,j)]+1 $\n\n- $ i,j\\in [1,N] $\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u88ab\u626b\u63cf\u5230\u4e00\u6b21\uff0c\u5728\u6bcf\u6b21\u8fde\u8fb9\u7684\u65f6\u5019\u8fde\u5355\u5411\u8fb9\u5373\u53ef\uff0c\u8282\u7701\u7a7a\u95f4\u548c\u65f6\u95f4\u3002\n\n\u63a5\u4e0b\u5c31\u53ea\u9700\u8981\u8dd1\u4e00\u8fb9\u5168\u6e90\u6700\u77ed\u8def\uff0c\u5e76\u8f93\u51fa\u5176\u4e2d\u6700\u5927\u503c\u5373\u53ef\u3002\u6700\u4f18\u7684\u5f53\u7136\u662f $ \\text{Johnson} $\uff0c\u4f46\u672c\u9898\u7684\u6570\u636e\u5b8c\u5168\u53ef\u4ee5\u8dd1 $n$ \u6b21 $ \\text{Dijkstra} $ \u6c42\u89e3\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f $ O(n\\cdot (logn+n)) $\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\nusing namespace std;\n\nconst int MAXN=31;\nint n,dat[MAXN*MAXN+1];\nlong long A,B,ans,dist[MAXN*MAXN+1];\nbool vis[MAXN*MAXN+1];\nchar tmp;\nvector < pair <int,long long> > E[MAXN*MAXN+1];\n\ninline void add(int i,int j)\n{\n\tlong long w=dat[i]==dat[j]?A:B;\n\tE[i].push_back(make_pair(j,w));\n}\n\ninline void Dijkstra(int s)\n{\n\tpriority_queue < pair <long long,int> > q;\n\tfor(int i=1;i<=n*n;i++)\n\t{\n\t\tdist[i]=1e18;\n\t\tvis[i]=false;\n\t}\n\tq.push(make_pair(0,s)),dist[s]=0;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.top().second;\n\t\tq.pop();\n\t\tif(vis[x])\n\t\t\tcontinue;\n\t\tvis[x]=true;\n\t\tfor(int i=0;i<E[x].size();i++)\n\t\t{\n\t\t\tint y=E[x][i].first;\n\t\t\tlong long z=E[x][i].second;\n\t\t\tif(dist[x]+z<dist[y])\n\t\t\t{\n\t\t\t\tdist[y]=dist[x]+z;\n\t\t\t\tq.push(make_pair(-dist[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%lld%lld\",&n,&A,&B);\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tcin>>tmp;\n\t\t\tint k=n*(i-1)+j;\n\t\t\tdat[k]=tmp=='('?0:1;\n\t\t}\n\t\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tint k=n*(i-1)+j;\n\t\t\tif(i>1)\n\t\t\t{ \n\t\t\t\tint u=n*(i-2)+j;\n\t\t\t\tadd(k,u);\n\t\t\t}\n\t\t\tif(i<n)\n\t\t\t{\n\t\t\t\tint d=n*i+j;\n\t\t\t\tadd(k,d);\n\t\t\t}\n\t\t\tif(j>1)\n\t\t\t{\n\t\t\t\tint l=k-1;\n\t\t\t\tadd(k,l);\n\t\t\t}\n\t\t\tif(j<n)\n\t\t\t{\n\t\t\t\tint r=k+1;\n\t\t\t\tadd(k,r);\n\t\t\t}\n\t\t}\n\t\t\n\tfor(int i=1;i<=n*n;i++)\n\t{\n\t\tDijkstra(i);\n\t\tfor(int j=1;j<=n*n;j++)\n\t\t\tans=max(ans,dist[j]);\n\t}\n\t\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n------------\n\n\u5173\u4e8e\u672c\u9898\u7684\u79bb\u6563\u5316\uff1a\n\n\u7b14\u8005\u8ba4\u4e3a\u79bb\u6563\u5316\u4e4b\u540e\u8fde\u8fb9\u548c\u8dd1\u56fe\u7684\u4ee3\u7801\u80fd\u66f4\u52a0\u7f8e\u89c2\uff0c\u65b9\u4fbf\u8c03\u8bd5\u548c\u8fdb\u884c\u67e5\u9519\u3002\u4e0e\u6211\u540c\u673a\u623f\u7684\u4e00\u4f4d\u5927\u4f6c\u5c31\u662f\u8fd9\u6837\u5199\u6302\u4e86\u3002\n\n------------\n\n\u611f\u8c22\u9605\u8bfb\uff01",
        "postTime": 1599745379,
        "uid": 177531,
        "name": "ZolaWatle",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3057 \u3010[USACO12NOV]Distant Pastures S\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684\u6700\u77ed\u8def\u3002\n\n\u7ed9\u65b9\u683c\u91cc\u6bcf\u4e2a\u70b9\u4e00\u4e2a\u5e8f\u53f7\uff0c$id(i,j)=n(i-1)+j$ \n\n\u4e8e\u662f\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u5411\u56db\u5468\u5efa\u8fb9\u3002\n\n\u8dd1 $n^2$ \u6b21 Dijkstra \uff0c\u4ee5\u6c42\u51fa\u56fe\u4e0a\u7684\u6700\u957f\u8def\u5f84\u3002\n\n\u6ce8\u610f\u8981\u7528\u5806\u4f18\u5316\uff0c\u4e0d\u7136 $O(n^4)$ \u8981T\u98de\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^3 \\log n)$ \u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n^2)$\n\ncode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar c[40][40];\nstruct qq\n{\n    int v,w;\n};\nvector<qq>g[910];\nint n,a,b;\nint id(int i,int j)\n{\n    return n*(i-1)+j;\n}\nstruct node\n{\n    int u,dis;\n    bool operator < (const node &x) const\n    {\n        return x.dis<dis;\n    }\n};\npriority_queue<node>q;\nint xx[4]={1,-1,0,0},yy[4]={0,0,1,-1};\nint vis[901],dis[901],ans;\nvoid dij(int s)\n{\n    memset(dis,0x3f,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    dis[s]=0;q.push((node){s,0});\n    while(!q.empty())\n    {\n        node qp=q.top();q.pop();int u=qp.u;\n        if(vis[u])continue;vis[u]=1;\n        for(int i=0,v,w;i<g[u].size();i++)\n        {\n            v=g[u][i].v;w=g[u][i].w;\n            if(dis[v]>dis[u]+w)\n            {\n                dis[v]=dis[u]+w;\n                q.push((node){v,dis[v]});\n            }\n        }\n    }\n    for(int i=1;i<=n*n;i++)ans=max(ans,dis[i]);\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&a,&b);\n    for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)cin>>c[i][j];\n    for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)for(int k=0;k<4;k++)\n    {\n        int xc=xx[k]+i,yc=yy[k]+j;\n        if(xc<1||xc>n||yc<1||yc>n)continue;\n        g[id(i,j)].push_back((qq){id(xc,yc),(c[i][j]==c[xc][yc])?a:b});\n    }\n    for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)dij(id(i,j));\n    cout<<ans;\n    return 0;\n}\n```\n\n",
        "postTime": 1594957433,
        "uid": 223624,
        "name": "Apollo13",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3057 \u3010[USACO12NOV]Distant Pastures S\u3011"
    },
    {
        "content": "\u597d\u591a\u5929\u6ca1\u5199\u9898\u89e3\u4e86\u3002\n##**\u9898\u76ee**\n\n\u81ea\u5df1\u770b\u770b\u5427[\u70b9\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P3057)\n\n##**\u601d\u8def**\n\n\u4e0d\u8981\u770b\u5b83\u662f\u5b57\u7b26\u4e32\uff0c\u5176\u5b9e\u5f88\u6c34\u3002\u770b\u5b8c\u9898\u76ee\u4e86\u4e4b\u540e\u5148\u662f\u60f3\u5230\u4e86\u6700\u77ed\u8def\u627e\u6700\u5927\u7684\u4e00\u6761\u8def\u5f84\u3002\n\u7a81\u7136\u60f3\u8d77\u4e86BFS\u4e0e\u6700\u77ed\u8def\u4e4b\u95f4\u4e0d\u53ef\u63cf\u8ff0\u7684\u5173\u7cfb\uff0c\u6700\u540e\u849f\u84bb\u6253\u4e86\u4e00\u4e2a\u53c8\u50cfSPFA\u53c8\u50cfBFS\u7684\u4e1c\u897f\u3002\u4f46\u5728\u5199\u4ee3\u7801\u65f6\u4e5f\u662f\u8981\u6ce8\u610f\u597d\u4e00\u4e9b\u5c0f\u7ec6\u8282\uff01\n\n\n\u6ce8\u610f\u597d\u8d77\u70b9\u4e0d\u4e00\u5b9a\u662f\uff081,1\uff09\u70b9\uff0c\u8fd8\u53ef\u80fd\u662f\u5176\u4ed6\u70b9\uff0c\u8111\u4e2d\u8e66\u51fa\u6765TLE\u7684\u611f\u89c9\uff0c\u770b\u4e86\u4e00\u773c\u8303\u56f4\u624d\u6ce8\u610f\u5230\u4e0d\u5fc5\u62c5\u5fc3\u3002\u90a3\u5c31\u5f00\u59cb\u4e86\u6253\u4ee3\u7801\u7684\u5feb\u4e50\u65f6\u5149\u3002\n\n##**\u4ee3\u7801**\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nstruct node{\n    int x,y;\n};//\u5b58\u5f53\u524d\u7684\u5750\u6807\nint n,a,b;long long dis[101][101],ans;\nchar s[101][101]; int mv[4][2]={{1,0},{-1,0},{0,-1},{0,1}};//\u6269\u5c55\u8282\u70b9\u56db\u4e2a\u65b9\u5411\nbool mapp[101][101];//\u6807\u8bb0\u662f\u5426\u5728\u961f\u5217\u4e4b\u4e2d\nvoid BFS(int sx,int sy){\n    queue<node>que; memset(dis,0x7f7f7f7f,sizeof(dis));\n    memset(mapp,0,sizeof(mapp));//\u6ce8\u610f\u521d\u59cb\u5316\n    mapp[sx][sy]=1; que.push((node){sx,sy}); dis[sx][sy]=0;\n    while(que.size()){//\u5f00\u59cb\u4e86\u6211\u4eec\u7684\u6700\u77ed\u8def\u4e4b\u65c5\n        node d=que.front(); que.pop(); mapp[d.x][d.y]=0;//\u53d6\u51fa\u961f\u9996\n        for(int i=0;i<4;i++){//\u6269\u5c55\u8282\u70b9\n            int tx=mv[i][0]+d.x;\n            int ty=mv[i][1]+d.y;\n            if(tx>0&&tx<=n&&ty>0&&ty<=n){//\u662f\u5426\u7b26\u5408\u5730\u56fe\u8303\u56f4\n                int t;\n                if(s[tx][ty]==s[d.x][d.y]) t=a;\n                else t=b;//\u770b\u5f53\u524d\u4e0e\u6269\u5c55\u70b9\u662f\u5426\u76f8\u540c\n                if(dis[tx][ty]>dis[d.x][d.y]+t){//\u677e\u5f1b\u64cd\u4f5c\n                    dis[tx][ty]=dis[d.x][d.y]+t;\n                    if(mapp[tx][ty]==0) mapp[tx][ty]=1,que.push((node){tx,ty});\n                }//\u4e0d\u5728\u961f\u5217\u4e4b\u4e2d\u8981\u653e\u5165\u961f\u5217\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    ans=max(ans,dis[i][j]);//\u5728\u6574\u4e2a\u5730\u56fe\u4e2d\u627e\u6700\u5927\u7684\u6700\u77ed\u8def\n}\nint main(){\n    cin>>n>>a>>b;\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    cin>>s[i][j];//\u8f93\u5165\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    BFS(i,j);//\u4e0d\u65ad\u679a\u4e3e\u5f00\u59cb\u70b9\n    cout<<ans<<endl;//\u8f93\u51fa\n    return 0;\n}\n```\n\n\u6700\u540e\u8bf4\u51e0\u53e5\uff0c\u770b\u5230\u8fd9\u79cd\u9898\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u4e0d\u4f1a\u5c31\u66b4\u529b\u70b9\uff0c\u603b\u662f\u4f1a\u6709\u5206\u7684\u3002\u4f46\u4e4b\u540e\u6709\u60f3\u6cd5\u6765\u6539\u8fdb\u90a3\u662f\u4e00\u5b9a\u8981\u6765\u5c1d\u8bd5\u4e00\u4e0b\u3002\n\n\u849f\u84bb\u8868\u793a\u53c8\u6c34\u4e86\u4e00\u5929\uff0c\u5f00\u5fc3\u3002",
        "postTime": 1545042424,
        "uid": 47757,
        "name": "dunko",
        "ccfLevel": 6,
        "title": "\u8fdc\u5904\u7684\u7267\u573aDistant Pastures"
    },
    {
        "content": "spfa\u6700\u77ed\u8def\n\u5f00\u4e24\u4e2a\u961f\u5217\u5206\u522b\u5b58\u50a8\u5750\u6807\n\u7136\u540e\u5224\u65ad\u4e24\u79cd\u60c5\u51b5\n```c\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#define ll long long\n#define DB double\n#define inf 2147480000\nusing namespace std;\ninline int read()\n{\n\tint x=0,w=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') w=-1;ch=getchar();}\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn x*w;\n}\nconst int N=40;\nint n,A,B,ans,d[N][N],v[N][N];\nint dx[]={0,0,1,-1},dy[]={1,-1,0,0}; \nchar a[N][N];\nqueue<int>qx,qy;\nvoid spfa(int sx,int sy)\n{\n\tfor(int i=1;i<=n;++i)\n\t for(int j=1;j<=n;++j)\n\t  d[i][j]=inf,v[i][j]=0;\n\tqx.push(sx);qy.push(sy);\n\td[sx][sy]=0;v[sx][sy]=1;\n\twhile(!qx.empty())\n\t{\n\t\tint fx=qx.front();qx.pop();\n\t\tint fy=qy.front();qy.pop();\n\t\tv[fx][fy]=0;\n\t\tfor(int i=0;i<=3;++i)\n\t\t{\n\t\t\tint rx=fx+dx[i];\n\t\t\tint ry=fy+dy[i];\n\t\t\tif(rx<1 || rx>n || ry<1 || ry>n) continue;\n\t\t\tif(a[rx][ry]==a[fx][fy])//---A\n\t\t\t{\n\t\t\t\tif(d[rx][ry]>d[fx][fy]+A)\n\t\t\t\t{\n\t\t\t\t\td[rx][ry]=d[fx][fy]+A;\n\t\t\t\t\tif(!v[rx][ry])\n\t\t\t\t\t qx.push(rx),qy.push(ry),v[rx][ry]=1;\n\t\t\t\t}\n\t\t\t}else{//---B\n\t\t\t    if(d[rx][ry]>d[fx][fy]+B)\n\t\t\t\t{\n\t\t\t\t\td[rx][ry]=d[fx][fy]+B;\n\t\t\t\t\tif(!v[rx][ry])\n\t\t\t\t\t qx.push(rx),qy.push(ry),v[rx][ry]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\t}\n\tfor(int i=1;i<=n;++i)\n\t for(int j=1;j<=n;++j)\n\t  ans=max(ans,d[i][j]);\n} \nint main()\n{\n\tn=read();A=read();B=read();\n\tfor(int i=1;i<=n;++i) scanf(\"%s\",a[i]+1);\n\tfor(int i=1;i<=n;++i)\n\t for(int j=1;j<=n;++j)\n\t  spfa(i,j);\n\tcout<<ans;\n\treturn 0;\n}\n```\n//\u770b\u4e86TOT",
        "postTime": 1522491700,
        "uid": 83546,
        "name": "\u4f9d\u4f9d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3057 \u3010[USACO12NOV]\u8fdc\u5904\u7684\u7267\u573aDistant Pastures\u3011"
    }
]