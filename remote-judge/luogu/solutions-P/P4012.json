[
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u4f20\u9001\u95e8\uff01](https://www.luogu.com.cn/problem/P4012)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/liangbowen/p/17058926.html)\n\n\u7f51\u7edc\u6d41 $24$ \u9898\uff1a\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\u8fd8\u7b97\u7b80\u5355\u4e14\u5957\u8def\u7684\u4e00\u9053\u9898\u3002\n\n## \u5feb\u6377\u6b65\u9aa4\n\n\u8fd9\u91cc\u5148\u8bf4\u4e24\u70b9\u3002\u7b2c\u4e00\u70b9\uff0c\u5f88\u591a\u9898\u89e3\u63d0\u5230\u4e86\uff0c\u8f93\u5165\u975e\u5e38\u9ebb\u70e6\uff0c\u9700\u8981\u7c7b\u4f3c\u4e8e\u628a\u56fe\u7ffb\u8fc7\u6765\u7684\u64cd\u4f5c\u3002\n\n\u8fd9\u5b9e\u9645\u4e0a\u662f\u5b8c\u5168\u6ca1\u5fc5\u8981\u7684\u3002\u4f60\u628a\u5168\u90e8\u70b9\u7ffb\u4e86\u548c\u6ca1\u7ffb\u4e00\u6837\uff0c\u4e3a\u5565\u8981\u7ffb\u3002\u800c\u4e14\u7ffb\u4e86\u4e5f\u4e0d\u4f1a\u8ba9\u4f60\u7406\u89e3\u8d77\u6765\u66f4\u987a\u7545\u3002\n\n\u7b2c\u4e8c\u70b9\uff0c\u5b9e\u9645\u4e0a\uff0c\u6ca1\u5fc5\u8981\u8d39\u5fc3\u601d\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u7f16\u53f7\u3002\u4f60\u76f4\u63a5\u7528 `idx` \u8bb0\u5f55\u4e0b\u5168\u90e8\u70b9\u5373\u53ef\u3002\n\n\u8fd9\u4e5f\u662f\u975e\u5e38\u663e\u7136\u7684\u4e8b\u60c5\u3002\n\n```cpp\ns = ++idx, t = ++idx;\nfor (int i = 0; i <= n; i++)\n    for (int j = 0; j <= m; j++)\n        id[i][j] = ++idx; //\u7ed9\u6bcf\u4e2a\u70b9\u4e00\u4e2a\u7f16\u53f7\n```\n\n## \u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u53ea\u770b\u6bcf\u4e00\u4e2a\u70b9\u3002\u662f\u5178\u578b\u7684[\u65b9\u683c\u53d6\u6570](https://www.luogu.com.cn/problem/P2045)\u95ee\u9898\uff0c\u53ef\u4ee5\u8003\u8651\u8d39\u7528\u6d41\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u76f8\u90bb\u7684\u3001\u53ef\u4ee5\u8d70\u5230\u7684\u70b9 $(x, y)$ \u4e0e $(dx, dy)$\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fde\u8fb9 $(x,y) \\xrightarrow{cap=1\\ cost=w} (dx,dy)$\uff0c\u8868\u793a\uff1a\u4f60\u60f3\u62ff\u5230\u8fd9\u4e2a\u683c\u5b50\u7684\u4ef7\u503c\uff0c\u90a3\u4e48\u4f60\u53ea\u80fd\u62ff\u4e00\u6b21\u3002\n\n\u4f46\u662f\u8fd9\u6837\u5e76\u4e0d\u5bf9\u3002\u56e0\u4e3a\u53ea\u662f\u8fd9\u6837\u5b50\uff0c\u4ee3\u8868**\u8fd9\u4e00\u6761\u8fb9\u53ea\u80fd\u8d70\u4e00\u6b21**\u3002\u5f88\u663e\u7136\u8fd9\u662f\u4e0d\u5bf9\u7684\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u8d70\u8fd9\u6761\u8fb9\uff0c\u4f46\u662f\u4ec0\u4e48\u90fd\u4e0d\u62ff\u3002\n\n\u4e8e\u662f\u6211\u4eec\u518d\u5efa\u4e00\u6761 $(x,y) \\xrightarrow{cap=\\infty \\ cost=0} (dx,dy)$\uff0c\u8868\u793a\uff1a\u8fd9\u6761\u8fb9\u968f\u4fbf\u8d70\uff0c\u4f46\u662f\u6ca1\u6709\u8d39\u7528\u3002\n\n\u8fd9\u5c31\u662f\u7b2c\u4e00\u6b65\u3002\u6211\u4eec\u518d\u770b\u4e00\u4e0b\u6e90\u70b9\u4e0e\u6c47\u70b9\uff1a\u90a3 $a$ \u4e2a\u70b9\u5c31\u662f\u6e90\u70b9\uff0c\u90a3 $b$ \u4e2a\u70b9\u5c31\u662f\u6c47\u70b9\u3002\n\n\u5f88\u5957\u8def\u5730\uff0c\u5efa\u7acb\u591a\u6e90\u591a\u6c47\u5373\u53ef\uff1a\u8d85\u7ea7\u6e90\u70b9\u8fde\u5411\u6bcf\u4e00\u4e2a\u6e90\u70b9\uff0c\u8d85\u7ea7\u6c47\u70b9\u8fde\u5411\u6bcf\u4e00\u4e2a\u6c47\u70b9\u3002\n\n\u5177\u4f53\u5730\uff1a\n\n+ \u5047\u8bbe\u6709 $k$ \u4e2a\u6df1\u6d77\u673a\u5668\u4eba\u4ece $(x, y)$ \u4f4d\u7f6e\u51fa\u53d1\uff0c\u5c31 $S \\xrightarrow{cap=k \\ cost=0} (x, y)$\u3002\n+ \u5047\u8bbe\u6709 $r$ \u4e2a\u6df1\u6d77\u673a\u5668\u4eba\u4ece $(x, y)$ \u4f4d\u7f6e\u4f5c\u4e3a\u76ee\u7684\u5730\uff0c\u5c31 $(x,y) \\xrightarrow{cap=k \\ cost=0} T$\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\u60a8\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u770b\u770b\u4e0b\u9762\u8fd9\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gvulwwqh.png)\n\n## \u4ee3\u7801\n\n\u6700\u591a\u7684\u70b9\u6570\u5e94\u8be5\u662f $nm$ \u7684\u7ea7\u522b\uff08\u8fd8\u8981\u591a\u4e00\u4e9b\uff09\uff0c\u53ef\u4ee5\u76f4\u63a5\u6309 $400$ \u7b97\u3002\n\n\u6700\u591a\u7684\u8fb9\u6570\u5927\u6982\u662f $2 \\times (2nm + 2nm + a + b) = 8nm+2a+2b \\approx 8\\times400+2\\times10+2\\times10=3240$\uff08\u53cd\u6b63\u5f00\u591a\u4e00\u70b9\u51c6\u6ca1\u9519\uff09\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\n/**********\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u6a21\u7248\uff0c\u53ef\u4ee5\u81ea\u5df1\u5199**********/\nconst int N = 400, inf = 0x3f3f3f3f;\nstruct Edge {int now, nxt, w, cost;} e[3240];\nint head[N], cur = 1;\nvoid ad(int u, int v, int  w, int cost)\n{\n    e[++cur].now = v, e[cur].nxt = head[u], e[cur].w = w, e[cur].cost = cost;\n    head[u] = cur;\n}\nvoid add(int u, int v, int w, int cost) {ad(u, v, w, cost), ad(v, u, 0, -cost);}\nint dis[N], icost[N], pre[N]; bool inque[N];\nint s, t;\nbool spfa()\n{\n    queue <int> q;\n    memset(dis, -0x3f, sizeof dis), memset(icost, 0, sizeof icost);\n    q.push(s), dis[s] = 0, icost[s] = inf, inque[s] = true;\n    while (!q.empty())\n    {\n        int u = q.front();\n        q.pop(), inque[u] = false;\n        for (int i = head[u]; i; i = e[i].nxt)\n        {\n            int v = e[i].now;\n            if (!e[i].w) continue;\n            if (dis[u] + e[i].cost > dis[v])\n            {\n                dis[v] = dis[u] + e[i].cost, pre[v] = i;\n                icost[v] = min(icost[u], e[i].w);\n                if (!inque[v]) q.push(v), inque[v] = true;\n            }\n        }\n    }\n    return icost[t] > 0;\n}\nint EK()\n{\n    int ans = 0;\n    while (spfa())\n    {\n        int w = icost[t];\n        ans += w * dis[t];\n        for (int i = t; i != s; i = e[pre[i] ^ 1].now)\n            e[pre[i]].w -= w, e[pre[i] ^ 1].w += w;\n    }\n    return ans;\n}\n/**********\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u6a21\u7248\uff0c\u53ef\u4ee5\u81ea\u5df1\u5199**********/\nint id[20][20];\nint main()\n{\n    int a, b, n, m, idx = 0;\n    scanf(\"%d%d%d%d\", &a, &b, &n, &m);\n    s = ++idx, t = ++idx;\n    for (int i = 0; i <= n; i++)\n        for (int j = 0; j <= m; j++)\n            id[i][j] = ++idx; //\u7ed9\u6bcf\u4e2a\u70b9\u7f16\u53f7\n    for (int i = 0; i <= n; i++)\n        for (int j = 0; j < m; j++)\n        {\n            int w;\n            scanf(\"%d\", &w);\n            add(id[i][j], id[i][j + 1], 1, w), add(id[i][j], id[i][j + 1], inf, 0); //\u5efa\u7acb\u76f8\u90bb\u70b9\u7684\u8fb9\n        }\n    for (int j = 0; j <= m; j++)\n        for (int i = 0; i < n; i++)\n        {\n            int w;\n            scanf(\"%d\", &w);\n            add(id[i][j], id[i + 1][j], 1, w), add(id[i][j], id[i + 1][j], inf, 0); //\u5efa\u7acb\u76f8\u90bb\u70b9\u7684\u8fb9\n        }\n    while (a--) //\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u4e0e\u591a\u4e2a\u6e90\u70b9\u7684\u8fb9\n    {\n        int w, i, j;\n        scanf(\"%d%d%d\", &w, &i, &j);\n        add(s, id[i][j], w, 0);\n    }\n    while (b--) //\u5efa\u7acb\u8d85\u7ea7\u6c47\u70b9\u4e0e\u591a\u4e2a\u6c47\u70b9\u7684\u8fb9\n    {\n        int w, i, j;\n        scanf(\"%d%d%d\", &w, &i, &j);\n        add(id[i][j], t, w, 0);\n    }\n    cout << EK();\n    return 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1674004598,
        "uid": 367488,
        "name": "liangbowen",
        "ccfLevel": 0,
        "title": "P4012 \u9898\u89e3"
    },
    {
        "content": "\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u9053\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff0c\u5957\u7528\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7684\u677f\u5b50\uff0c\u53ea\u662f\u5728\u5efa\u56fe\u65f6\u8d39\u7528\u4e3a\u8d1f\n\n\u4f46\u662f\u9700\u8981\u628a\u56fe\u7ffb\u8fc7\u6765\u2026\u2026\u5373\uff08\u6837\u4f8b\uff09![](https://a-failure.github.io/img/study/shenhai.png) \n\n\u7136\u540e\u628a\u5404\u4e2a\u70b9\u4ece\u5750\u6807\u538b\u4e3a\u4e00\u4e2a\u6570\u8868\u793a$(x-1)\\times Q+y$\n\n\u6bcf\u4e2a\u70b9\u4e0e\u5357\u8fb9\u7684\u70b9\u8fde\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a\u6807\u672c\u4ef7\u503c\uff08\u5148\u5230\u7684\u673a\u5668\u4eba\uff09\n\n\u4e00\u6761\u5bb9\u91cf\u4e3a$inf$\uff0c\u8d39\u7528\u4e3a$0$\uff0c\u4e1c\u8fb9\u540c\u7406\uff08\u6ce8\u610f\u5efa\u8fb9\u987a\u5e8f\uff09\n\n\u6e90\u70b9\u4e0e\u7ed9\u51fa\u7684\u51fa\u53d1\u70b9\u8fde\uff0c\u5bb9\u91cf\u4e3a\u673a\u5668\u4eba\u6570\uff0c\u6c47\u70b9\u540c\u7406\uff0c\u7136\u540e\u8f93\u51fa\u6700\u5927\u8d39\u7528\uff08\u8981\u53d6\u8d1f\uff09\n\n\u4ee3\u7801\uff1a\n```\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<queue>\n# define pu(x,y) (x-1)*Q+y\nusing namespace std;\nconst int INF=1e8,MAX=400001,Max=1001,s=0,t=1000;\nstruct p{\n    int x,y,dis,cn;\n}c[MAX];\nint a,b,P,Q,num,tot1;\nint h[Max],d[Max],last[Max],pre[Max];\nbool use[Max];\nvoid add(int x,int y,int dis,int cn)\n{\n    c[num].x=h[y];c[num].y=x;c[num].dis=0,c[num].cn=-cn;h[y]=num++;\n    c[num].x=h[x];c[num].y=y;c[num].dis=dis,c[num].cn=cn;h[x]=num++;\n}\nvoid EK()\n{\n    while(1)\n    {\n        queue<int> qu;\n        qu.push(0);\n        memset(d,127,sizeof(d));\n        d[0]=0;\n        while(!qu.empty())\n        {\n            int tt=qu.front();\n            qu.pop();\n            use[tt]=0;\n            for(int i=h[tt];i;i=c[i].x)\n              if(d[c[i].y]>d[tt]+c[i].cn&&c[i].dis)\n              {\n                  d[c[i].y]=d[tt]+c[i].cn;\n                  pre[c[i].y]=i;\n                  if(!use[c[i].y])\n                  {\n                      use[c[i].y]=1;\n                      qu.push(c[i].y);\n                }\n              }\n        }\n        if(d[t]>1e7) return;\n        int hh=t,sum=1e9;\n        while(pre[hh])\n        {\n            int l=pre[hh];\n            sum=min(sum,c[l].dis);\n            hh=c[l^1].y;\n        }\n        hh=t;\n        while(pre[hh])\n        {\n            int l=pre[hh];\n            c[l].dis-=sum;\n            c[l^1].dis+=sum;\n            tot1+=sum*c[l].cn;\n            hh=c[l^1].y;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&a,&b,&P,&Q);\n    P++,Q++;\n    for(int i=1;i<=P;i++)\n      for(int j=1;j<Q;j++)\n        {\n            int x,hh=pu(i,j),tt=hh+1;\n            scanf(\"%d\",&x);\n            add(hh,tt,1,-x);\n            add(hh,tt,INF,0);\n        }\n    for(int j=1;j<=Q;j++)\n      for(int i=1;i<P;i++)\n        {\n            int x,hh=pu(i,j),tt=hh+Q;\n            scanf(\"%d\",&x);\n            add(hh,tt,1,-x);\n            add(hh,tt,INF,0);\n        }\n    for(int i=1;i<=a;i++)\n      {\n          int k,x,y;\n          scanf(\"%d%d%d\",&k,&x,&y);\n          x++,y++;\n          add(s,pu(x,y),k,0);\n      }\n    for(int i=1;i<=b;i++)\n      {\n          int k,x,y;\n          scanf(\"%d%d%d\",&k,&x,&y);\n          x++,y++;\n          add(pu(x,y),t,k,0);\n      }\n    EK();\n    printf(\"%d\",-tot1);\n    return 0;\n}\n```",
        "postTime": 1514037753,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    },
    {
        "content": "[\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898](https://www.luogu.com.cn/problem/P4012)\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20\u7f51\u683c\u56fe\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u8fb9\u6743\u3002\u8981\u4ece\u82e5\u5e72\u4e2a\u70b9\u51fa\u53d1\uff0c\u6bcf\u4e2a\u70b9\u51fa\u53d1\u82e5\u5e72\u6b21\uff0c\u5230\u8fbe\u82e5\u5e72\u4e2a\u7ec8\u70b9\uff0c\u6bcf\u4e2a\u7ec8\u70b9\u53ea\u80fd\u5230\u8fbe\u82e5\u5e72\u6b21\u3002\u53ea\u80fd\u5411\u4e0a\u6216\u5411\u53f3\u8d70\uff0c\u6c42\u6700\u5927\u7684\u7ecf\u8fc7\u7684\u8fb9\u6743\u7684\u548c\u3002\u91cd\u590d\u7ecf\u8fc7\u7684\u8fb9\u53ea\u8ba1\u7b97\u4e00\u6b21\u3002\n\n### \u601d\u8def\u5206\u6790\n\n\u9898\u9762\u53ef\u80fd\u6709\u4e9b\u7ed5\uff08~~\u7b80\u5316\u4e86\u4e4b\u540e\u66f4\u7ed5\u4e86~~\uff09\u3002\n\n\uff08\u8fd9\u9053\u9898\u548c [\u65b9\u683c\u53d6\u6570\u52a0\u5f3a\u7248](https://www.luogu.com.cn/problem/P4012) \u5f88\u50cf\uff0c\u4e0d\u540c\u7684\u662f\u8fd9\u4e2a\u9898\u662f\u8fb9\u6743\u4e14\u6709\u591a\u4e2a\u8d77\u70b9/\u7ec8\u70b9\u3002\uff09\n\n\u770b\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u4e00\u9053\u7f51\u7edc\u6d41\uff0c\u8fd8\u662f\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff08\u6781\u5c0f\u7684\u6570\u636e\u8303\u56f4\uff0c\u5947\u602a\u7684\u9650\u5236\u6761\u4ef6\uff0c\u6700\u5927\u7684\u548c\uff09\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5efa\u8fb9\u5462\uff1f\n\n- \u9996\u5148\u5904\u7406\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u6211\u4eec\u5efa\u7acb\u865a\u62df\u6e90\u70b9\uff0c\u6c47\u70b9\uff0c\u5411\u6240\u6709\u8d77\u70b9/\u7ec8\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u51fa\u53d1/\u5230\u8fbe\u7684\u6b21\u6570\uff0c\u4ef7\u503c\u4e3a $0$\u3002\n- \u90a3\u4e48\u5269\u4e0b\u7684\u5c31\u662f\u7f51\u683c\u4e2d\u7684\u70b9\u3002\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\u7b2c\u4e00\u6b21\u88ab\u7ecf\u8fc7\u65f6\u83b7\u5f97\u4ef7\u503c\uff1b\u4e4b\u540e\u7684\u6240\u6709\u7ecf\u8fc7\u6ca1\u6709\u4ef7\u503c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u56fe\u4e2d\u7684\u8fb9\u53d8\u6210\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u4ef7\u503c\u4e3a\u8fb9\u6743\uff08\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\uff0c\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff0c\u83b7\u5f97\u4ef7\u503c\uff09\uff0c\u53e6\u4e00\u6761\u5bb9\u91cf\u4e3a $+\\infty$\uff0c\u4ef7\u503c\u4e3a $0$\u3002\uff08\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff0c\u53ef\u4ee5\u7ecf\u8fc7\u65e0\u9650\u6b21\uff0c\u6ca1\u6709\u4ef7\u503c\uff09\n\n![](https://i.328888.xyz/2023/02/24/7lvu3.md.png)\n\n\u7136\u540e\u8dd1\u4e00\u904d\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5c31\u505a\u5b8c\u4e86\u3002\n\n### \u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=100100;//\u4e0d\u8981\u7ba1\u7a7a\u95f4\n#define inf 0x3f3f3f3f\n\nint to[N],nxt[N],head[N],w[N],c[N];\nint idx=1,n,m,S,T,in1,in2,in3,a,b;\nint dis[N],vis[N],minw[N],pre[N];\nqueue <int> q;\n\nint point(int x,int y){return x*(m+1)+y+1;}//\u5c06\u6bcf\u4e00\u4e2a\u70b9\u91cd\u7f16\u53f7\nvoid add(int u,int v,int x,int y){\n    idx++;to[idx]=v;nxt[idx]=head[u];head[u]=idx;w[idx]=x;c[idx]=-y;\n    idx++;to[idx]=u;nxt[idx]=head[v];head[v]=idx;w[idx]=0;c[idx]=y;//\u6211\u4eec\u5c06\u4ef7\u503c\u53d6\u53cd\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u518d\u5c06\u7b54\u6848\u53d6\u53cd\u5c31\u884c\u4e86\n}\n\n//\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u6a21\u677f\n\nbool spfa(){\n    memset(dis,0x3f,sizeof dis);dis[S]=0;\n    memset(minw,0,sizeof minw);minw[S]=inf;\n    q.push(S);\n    while(!q.empty()){\n        int now=q.front();q.pop();vis[now]=0;\n        for(int i=head[now];i;i=nxt[i]){\n            int v=to[i];\n            if(dis[v]<=dis[now]+c[i]||!w[i]) continue;\n            dis[v]=dis[now]+c[i];pre[v]=i;\n            minw[v]=min(minw[now],w[i]);\n            if(!vis[v]){q.push(v);vis[v]=1;}\n        }\n    }\n    return minw[T]>0;\n}\n\nint EK(){\n    int ans=0;\n    while(spfa()){\n        int t=minw[T];ans+=t*dis[T];\n        for(int i=T;i!=S;i=to[pre[i]^1]){w[pre[i]]-=t;w[pre[i]^1]+=t;}\n    }\n    return ans;\n}\n\n//------\n\nint main(){\n    scanf(\"%d%d%d%d\",&a,&b,&n,&m);\n    S=0,T=N-5;//\u865a\u62df\u6e90\u6c47\n    //\u7136\u540e\u6309\u4e0a\u9762\u7684\u505a\u6cd5\u8fde\u8fb9\n    for(int i=0;i<=n;i++)//\u4ece0\u5f00\u59cb\n        for(int j=0;j<m;j++){\n            scanf(\"%d\",&in1);\n            add(point(i,j),point(i,j+1),1,in1);\n            add(point(i,j),point(i,j+1),inf,0);\n        }\n    for(int i=0;i<=m;i++)\n        for(int j=0;j<n;j++){\n            scanf(\"%d\",&in1);\n            add(point(j,i),point(j+1,i),1,in1);\n            add(point(j,i),point(j+1,i),inf,0);\n        }\n    for(int i=1;i<=a;i++){\n        scanf(\"%d%d%d\",&in1,&in2,&in3);\n        add(S,point(in2,in3),in1,0);\n    }\n    for(int i=1;i<=b;i++){\n        scanf(\"%d%d%d\",&in1,&in2,&in3);\n        add(point(in2,in3),T,in1,0);\n    }\n    cout<<-EK()<<'\\n';\n    return 0;\n}\n```",
        "postTime": 1677221652,
        "uid": 767096,
        "name": "TKXZ133",
        "ccfLevel": 4,
        "title": "\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898 \u9898\u89e3"
    },
    {
        "content": "**\u6211\u7684\u535a\u5ba2\uff1a[\u4f20\u9001\u95e8](https://www.wjyyy.top/3069.html)**\n\n## \u9898\u89e3\uff1a\n\n\u770b\u4e0a\u53bb\u8fd8\u662f\u4e00\u4e2a**\u201c\u65b9\u683c\u53d6\u6570\u201d\u7c7b**\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u6bcf\u4e2a\u70b9\u3001\u6bcf\u6761\u8fb9\u662f\u53ef\u4ee5\u7ecf\u8fc7\u591a\u6b21\u7684\u3002\u6211\u4eec\u76f4\u63a5\u6309\u56fe\u4e0a\u7f51\u683c\u5efa\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff0c\u65b9\u5411\u662f$\\rightarrow,\\uparrow$\u3002\n\n\u4f46\u662f\u91cd\u70b9\u662f\u6bcf\u6761\u8fb9\u53ea\u5728\u7b2c\u4e00\u6b21\u88ab\u7ecf\u8fc7\u65f6\u4ea7\u751f\u6536\u76ca\uff0c\u8fd9\u4e2a\u770b\u6765\u662f\u4e0d\u597d\u5728\u8d39\u7528\u6d41\u4e2d\u8fdb\u884c\u7279\u5224\u7684\u4e86\u3002\n\n\u5982\u679c\u8fd9\u4e9b\u8fb9\u7684\u5bb9\u91cf\u5168\u90e8\u8bbe\u4e3a$l1$\uff0c\u90a3\u4e48\u4e00\u6761\u8fb9\u5c31\u4e0d\u80fd\u88ab\u7ecf\u8fc7\u7b2c\u4e8c\u6b21\u4e86\uff0c\u8fd9\u5f53$\\sum k+\\sum r$\u5f88\u5927\u7684\u65f6\u5019\u4f1a\u5b58\u5728\u673a\u5668\u4eba\u8dd1\u4e0d\u8fc7\u53bb\u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u8fd9\u4e9b\u8fb9\u7684\u5bb9\u91cf\u4e3a$\\inf$\uff0c\u90a3\u4e48\u4e0d\u5bb9\u6613\u5224\u65ad\u8fd9\u6761\u8fb9\u662f\u7b2c\u51e0\u6b21\u88ab\u7ecf\u8fc7\uff0c\u800c\u4e14\u6b8b\u91cf\u7f51\u7edc\u4e5f\u4e0d\u65b9\u4fbf\u66f4\u65b0\u3002\n\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5efa\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u662f\u5e26\u8d39\u7528\u7684\uff0c\u5bb9\u91cf\u4e3a$1$\uff0c\u53e6\u4e00\u6761\u662f\u4e0d\u5e26\u8d39\u7528\u7684\uff0c\u5bb9\u91cf\u4e3a$\\inf$\u3002\u4f46\u662f\u8fd9\u4e24\u6761\u8fb9\u7684\u4f18\u5148\u7ea7\u600e\u4e48\u786e\u5b9a\u5462\uff1f\n\n\u7531\u4e8e\u8d39\u7528\u6d41\u7684\u7279\u6b8a\u6027\uff0cEK\u8d39\u7528\u6d41\u662f\u901a\u8fc7spfa\u6765\u589e\u5e7f\u7684\uff0c\u5f53\u5b58\u5728\u4e0a\u8ff0\u5e26\u8d39\u7528\u7684\u8fb9\u65f6\uff0c\u4f1a\u5148\u8dd1\u5e26\u8d39\u7528\u7684\u8fb9\uff08_\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u4e2d\u6743\u503c\u5b9e\u9645\u4e3a\u8d1f*****_\uff09\u3002\u6b64\u65f6\u5c31\u65e2\u89e3\u51b3\u4e86\u6536\u76ca\u6700\u5927\u5316\u95ee\u9898\uff0c\u4e5f\u89e3\u51b3\u4e86\u6536\u76ca\u5355\u6b21\u6027\u95ee\u9898\u3002\n\n\u4e0d\u8fc7\u50cf\u3010\u6d1b\u8c37 P4001 \u72fc\u6293\u5154\u5b50[\u9898\u76ee](https://www.luogu.org/problemnew/show/P4001)\uff0c[\u9898\u89e3](https://www.wjyyy.top/1540.html)\u3011\u8fd9\u4e00\u9898\u7684\u5efa\u6a21\u5c31\u66f4\u8003\u5bdf\u601d\u7ef4\u4e86\u3002\n\n***\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u4e2d\u628a\u539f\u8fb9\u6743\u53d6\u53cd\uff08\u8d1f\uff09\u8dd1\u6700\u77ed\u8def\u589e\u5e7f\u4f1a\u65b9\u4fbf\u5f88\u591a\uff0c\u6700\u540e\u7b54\u6848\u518d\u53d6\u53cd\u3002**\n\n## Code\uff1a\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define s 290\n#define t 291\nusing std::queue;\nstruct edge\n{\n    int n,nxt,v,w;\n    edge(int n,int nxt,int v,int w)\n    {\n        this->n=n;\n        this->nxt=nxt;\n        this->v=v;\n        this->w=w;\n    }\n    edge(){}\n}e[2000];\nint head[300],ecnt=-1;\nvoid add(int from,int to,int v,int w)\n{\n    e[++ecnt]=edge(to,head[from],v,w);\n    head[from]=ecnt;\n    e[++ecnt]=edge(from,head[to],0,-w);\n    head[to]=ecnt;\n}\nint dis[300],pre[300];\nbool used[300];\nbool spfa()\n{\n    memset(dis,0x3f,sizeof(dis));\n    queue<int> q;\n    q.push(s);\n    used[s]=1;\n    dis[s]=0;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        used[x]=0;\n        for(int i=head[x];~i;i=e[i].nxt)\n            if(e[i].v&&dis[e[i].n]>dis[x]+e[i].w)\n            {\n                dis[e[i].n]=dis[x]+e[i].w;\n                pre[e[i].n]=i;\n                if(!used[e[i].n])\n                {\n                    used[e[i].n]=1;\n                    q.push(e[i].n);\n                }\n            }\n    }\n    return dis[t]!=0x3f3f3f3f;\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    int a,b,n,m,u,v,w;\n    scanf(\"%d%d%d%d\",&a,&b,&n,&m);\n    for(int i=0;i<=n;++i)\n        for(int j=0;j<m;++j)\n        {\n            scanf(\"%d\",&u);//\u8ba1\u7b97\u4e00\u7ef4\u5750\u6807\u65f6\u9700\u8981\u6ce8\u610f\n            add(i*(m+1)+j,i*(m+1)+j+1,1,-u);//\u6bcf\u4e00\u884c\u65e2\u67090\u53c8\u6709m\n            add(i*(m+1)+j,i*(m+1)+j+1,0x3fffffff,0);//\u6240\u4ee5\u6709m+1\u4e2a\u6570\n        }\n    for(int i=0;i<=m;++i)\n        for(int j=0;j<n;++j)\n        {\n            scanf(\"%d\",&u);\n            add(j*(m+1)+i,(j+1)*(m+1)+i,1,-u);\n            add(j*(m+1)+i,(j+1)*(m+1)+i,0x3fffffff,0);\n        }\n    for(int i=1;i<=a;++i)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        add(s,v*(m+1)+w,u,0);\n    }\n    for(int i=1;i<=b;++i)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        add(v*(m+1)+w,t,u,0);\n    }\n    int ans=0;\n    pre[s]=-1;\n    while(spfa())\n    {\n        int p=pre[t],mn=0x3fffffff;\n        while(~p)\n        {\n            mn=mn<e[p].v?mn:e[p].v;\n            p=pre[e[p^1].n];\n        }\n        p=pre[t];\n        while(~p)\n        {\n            e[p].v-=mn;\n            e[p^1].v+=mn;\n            ans+=e[p].w*mn;\n            p=pre[e[p^1].n];\n        }\n    }\n    printf(\"%d\\n\",-ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1547549689,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e0b\u5927\u610f\u548c\u5efa\u56fe\u601d\u60f3\n#### $Description$\n\u5728\u4e00\u4e2a$n\\times m$\u7684\u77e9\u9635\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u81ea\u5df1\u7684\u6743\u503c\n\n\u6709$a$\u4e2a\u8d77\u70b9\uff0c$b$\u4e2a\u7ec8\u70b9\n\n\u6bcf\u4e2a\u8d77\u70b9\u90fd\u6709$ka_i$\u4e2a\u673a\u5668\u4eba\uff0c\u6bcf\u4e2a\u7ec8\u70b9\u53ef\u4ee5\u5230\u8fbe$kb_i$\u4e2a\u673a\u5668\u4eba\n\n\u673a\u5668\u4eba\u53ea\u80fd\u5411\u53f3\u6216\u5411\u4e0a\u8d70\uff0c\u5f53\u673a\u5668\u4eba\u7ecf\u8fc7\u67d0\u4e2a\u70b9\u65f6\u53ef\u4ee5\u53d6\u8d70\u5f53\u524d\u70b9\u7684\u6743\u503c\uff08`\u53ea\u80fd\u53d6\u4e00\u6b21`\uff09\n\n\u6c42\u5230\u8fbe\u7ec8\u70b9\u7684\u673a\u5668\u4eba\u7684\u6700\u5927\u6743\u503c\u603b\u548c\n\n\u6570\u636e\u8303\u56f4\uff1a\n$n,m\\leq15$\n$a\\leq 4$\n$b\\leq 6$\n***\n#### $Solution$\n\u9e23\u8c22[$wyc$](https://blog.csdn.net/mr_wuyongcong)\u5927\u4f6c\u7684\u8bb2\u89e3\uff0c\u7b97\u662f\u6bd4\u8f83\u80fd\u5f04\u61c2\u8fd9\u9898\u7684\u5efa\u56fe\u4e86\uff0c\u4e00\u773c\u5c31\u770b\u51fa\u6b63\u89e3\u7684\u4ed6\u592a\u5f3a\u5566%%%\n\n\u6839\u636e\u6570\u636e\u8303\u56f4~~\u548c\u6807\u7b7e~~\u53ef\u4ee5\u770b\u51fa\u8fd9\u9898\u662f\u4e00\u9053\u7f51\u7edc\u6d41\n\n\u5bb9\u6613\u770b\u51fa\u8fd9\u9053\u9898\u7684\u6a21\u578b\u6709\u70b9\u7c7b\u4f3c\u4e8e\u4f20\u7eb8\u6761\uff0c\u56e0\u4e3a\u683c\u5b50\u7684\u503c\u662f\u975e\u8d1f\u7684\uff0c\u6240\u4ee5\u6211\u663e\u7136\u8d8a\u591a\u673a\u5668\u4eba\u5230\u8fbe\u65f6\u8d8a\u597d\u7684\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u6700\u5927\u6d41\u3002\n\n\u73b0\u5728\u6211\u4eec\u8981\u5728\u6b64\u57fa\u7840\u4e0a\u4f7f\u5f97\u6743\u503c\u603b\u548c\u6700\u5927\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u4e86\n\n\u73b0\u5728\u6211\u4eec\u8003\u8651\u8d39\u7528\n\n\u542f\u52a8\u673a\u5668\u4eba\u662f\u65e0\u4ee3\u4ef7\u7684\uff0c\u65e5\u5e38\u8d39\u75280\n\n\u4e3b\u8981\u8003\u8651\u53d6\u8d70\u8fd9\u4e2a\u95ee\u9898\uff0c\u7531\u4e8e\u6bcf\u4e2a\u53ea\u80fd\u53d6\u4e00\u6b21\uff0c\u6240\u4ee5\u5bb9\u91cf\u4e3a1\uff0c\u4ee3\u4ef7\u4e3a\u5176\u4ef7\u503c\uff0c\u4f46\u662f\u5982\u679c\u5355\u7eaf\u8fd9\u6837\u5efa\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5b83\u53d6\u8d70\u4e4b\u540e\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u8d70\uff0c\u6240\u4ee5\u8fd8\u8981\u5efa\u4e00\u6761\u201c\u7ecf\u8fc7\u70b9\u201d\uff0c\u5bb9\u91cf\u4e3a\u65e0\u7a77\u5927\uff08\u65e0\u9650\u7ecf\u8fc7\uff09\uff0c\u4ee3\u4ef7\u4e3a0\uff08\u7ecf\u8fc7\u5f53\u7136\u6ca1\u6709\u4ee3\u4ef7\u4e86\u5566\uff09\n\n\u5176\u5b83\u7684\u65e5\u5e38\u7f51\u7edc\u6d41\u5566\n\n\u4f9d\u7167\u7f51\u7edc\u6d41\u7684\u5957\u8def\uff0c\u6211\u4eec\u628a\u8d39\u7528\u53d6\u8d1f\uff0c\u7136\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\n\n\u5982\u56fe\uff08\u771f\u7684\u826f\u5fc3\u7ed8\u56fe\uff09\uff1a![\u56fe\u7247](https://cdn.luogu.com.cn/upload/pic/52987.png)\n\n[\u7ed8\u56fe\u7f51\u5740](https://www.processon.com/i/5afc01e3e4b096c6eeb3834b)\n***",
        "postTime": 1551448824,
        "uid": 52915,
        "name": "Ajwallet",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9[](http://blog.csdn.net/a_comme_amour/article/details/79581717)\u8fd9\u91cc\n\u9898\u76ee\n-\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4012)\n\u9898\u89e3\n-\n\n\u548c[\u65b9\u683c\u53d6\u65702](http://blog.csdn.net/A_Comme_Amour/article/details/79580875)\u5b9e\u9645\u4e0a\u662f\u4e00\u9053\u9898\n\u5bf9\u4e8e\u65b9\u683c\u4e2d\u7684\u6bcf\u4e2a\u70b9\uff0c\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u4e3a\u5165\u70b9\u548c\u51fa\u70b9\u3002\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u8fde\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a\u70b9\u7684\u6743\u503c\uff0c\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u6570\u53ea\u53ef\u4ee5\u53d6\u4e00\u6b21\uff1b\u53e6\u4e00\u6761\u5bb9\u91cf\u4e3ainf\uff0c\u8d39\u7528\u4e3a0\uff0c\u4ec5\u8868\u793a\u53ef\u4ee5\u7ecf\u8fc7\u65e0\u6570\u6b21\uff1b \n\n\u5bf9\u4e8e\u5728\u5176\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\uff0c\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3ainf\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\uff0c\u8868\u793a\u4e14\u4ec5\u8868\u793a\u4e00\u79cd\u8054\u901a\u7684\u5173\u7cfb\n\u8f93\u5165\u975e\u5e38\u7684\u6076\u5fc3\uff0c\u4e0d\u60f3\u591a\u8bf4\n\n\u4ee3\u7801\n-\n\n```\n#include<bits/stdc++.h>  \nusing namespace std;  \n  \nconst int maxm=1050;  \nconst int maxn=1050;  \nconst int INF=0x3f3f3f3f;  \nint s,t,tot,n,m;  \nint a,b;  \n  \nstruct Edge{  \n    int to,nxt,cap,flow,cost;  \n}edge[105000];  \nint Head[maxn],tol;  \nint mp[maxn][maxn];  \nint pre[maxn],dis[maxn];  \nbool vis[maxn];  \n  \nvoid addedge2(int u,int v,int cap,int cost){  \n    edge[tol].to=v;  \n    edge[tol].cap=cap;  \n    edge[tol].cost=cost;  \n    edge[tol].flow=0;  \n    edge[tol].nxt=Head[u];  \n    Head[u]=tol++;  \n}  \n  \nvoid addedge(int u,int v,int cap,int cost){  \n    addedge2(u,v,cap,cost);  \n    addedge2(v,u,0,-cost);  \n}  \n  \nbool spfa(int s,int t){  \n    queue<int> q;  \n    for(int i=0;i<tot;i++){  \n        dis[i]=INF;vis[i]=false;pre[i]=-1;  \n    }  \n    dis[s]=0;vis[s]=true;  \n    q.push(s);  \n    while(!q.empty()){  \n        int u=q.front();  \n        q.pop();  \n        vis[u]=false;  \n        for(int i=Head[u];i!=-1;i=edge[i].nxt){  \n            int v=edge[i].to;  \n            if (edge[i].cap>edge[i].flow&&dis[v]>dis[u]+edge[i].cost){  \n                dis[v]=dis[u]+edge[i].cost;  \n                pre[v]=i;  \n                if (!vis[v]){  \n                    vis[v]=true;  \n                    q.push(v);  \n                }  \n            }  \n        }  \n    }  \n    if (pre[t]==-1) return false;  \n    return true;  \n}  \n  \nint minCostMaxflow(int s,int t,int &cost){  \n    int flow=0;  \n    cost=0;  \n    while(spfa(s,t)){  \n        int Min=INF;  \n        for(int i=pre[t];i!=-1;i=pre[edge[i^1].to])  \n            if (Min>edge[i].cap-edge[i].flow)  \n                Min=edge[i].cap-edge[i].flow;  \n        for(int i=pre[t];i!=-1;i=pre[edge[i^1].to]){  \n            edge[i].flow+=Min;  \n            edge[i^1].flow-=Min;  \n            cost+=edge[i].cost*Min;  \n        }  \n        flow+=Min;  \n    }  \n    return flow;  \n}  \n  \nint main(){  \n    //freopen(\"input.txt\",\"r\",stdin);  \n    while(scanf(\"%d%d%d%d\",&a,&b,&n,&m)!=EOF){  \n        memset(Head,-1,sizeof(Head));  \n        int cost,c=0,x,y;  \n        tol=s=0;  \n        t=(n+1)*(m+1)+1;  \n        tot=t+1;  \n        for(int i=0;i<=n;i++)  \n            for(int j=0;j<=m;j++)  \n                mp[i][j]=++c;  \n        for(int i=0;i<=n;i++)  \n        for(int j=0;j<m;j++){  \n            scanf(\"%d\",&c);  \n            addedge(mp[i][j],mp[i][j+1],1,-c);  \n            addedge(mp[i][j],mp[i][j+1],INF,0);  \n        }  \n        for(int j=0;j<=m;j++)  \n        for(int i=0;i<n;i++){  \n            scanf(\"%d\",&c);  \n            addedge(mp[i][j],mp[i+1][j],1,-c);  \n            addedge(mp[i][j],mp[i+1][j],INF,0);  \n        }  \n        for(int i=0;i<a;i++){  \n            scanf(\"%d%d%d\",&c,&x,&y);  \n            addedge(s,mp[x][y],c,0);  \n        }  \n        for(int i=0;i<b;i++){  \n            scanf(\"%d%d%d\",&c,&x,&y);  \n            addedge(mp[x][y],t,c,0);  \n        }  \n        int flow;  \n        flow=minCostMaxflow(s,t,cost);  \n        printf(\"%d\\n\",-cost);  \n    }  \n    return 0;  \n}  \n```",
        "postTime": 1521183152,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    },
    {
        "content": "### Problem  \n\u5728\u4e00\u4e2a $n$ \u884c $m$ \u5217\u7684\u77e9\u9635\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u6709\u5176\u70b9\u6743\u5e76\u4e14\u8be5\u70b9\u6743\u53ea\u80fd\u53d6\u4e00\u6b21\u3002\u73b0\u5728\u6709 $k$ \u4e2a\u5165\u53e3\u5e76\u4e14\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6d1e\uff0c\u53ef\u4ee5\u51fa\u53bb $r$ \u4e2a\u673a\u5668\u4eba\uff0c\u5141\u8bb8 $k$ \u4e2a**\u53ea\u80fd\u5411\u5de6\u53f3\u6216\u8005\u53ea\u80fd\u5411\u4e0a\u4e0b\u884c\u52a8**\u7684\u673a\u5668\u4eba\u8fdb\u5165\u8fd9\u4e2a\u77e9\u9635\uff0c\u8bf7\u95ee\u5b83\u4eec\u6240\u80fd\u53d6\u51fa\u7684\u6700\u5927\u4ef7\u503c\u7684\u7269\u54c1\u6709\u591a\u5c11\u7684\u4ef7\u503c\uff1f  \n### Solution  \n\u8fd9\u9053\u9898\u7b2c\u4e00\u773c\u770b\u8fc7\u53bb\uff1a\u662f\u4e00\u4e2a\u51b3\u7b56\u9898\uff0c\u7531\u4e8e\u8003\u8651\u5176\u6ca1\u6709\u8d2a\u5fc3\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u53ea\u6709\u53ef\u80fd\u662f dp \u95ee\u9898\u6216\u8005\u6700\u5927\u6d41\u6700\u5c0f\u5272\u95ee\u9898\u4e86\u3002\u540c\u65f6\uff0c\u8fd9\u9053\u9898\u7684\u51b3\u7b56**\u5177\u6709\u540e\u6548\u6027\u5e76\u4e14\u72b6\u6001\u592a\u591a\u4e86\uff01\uff01\uff01**\uff0c\u6240\u4ee5 dp \u7684\u89e3\u6cd5\u4e5f\u6ca1\u6709\u53ef\u80fd\u3002\u73b0\u5728\u6211\u4eec\u8981\u6c42\u6700\u5927\u6d41\u6216\u6700\u5c0f\u5272\u3002\u4f46\u662f\u73b0\u5728\u6709\u4e00\u4e2a\u95ee\u9898\uff1a  \n**\u600e\u4e48\u540c\u65f6\u6709\u4ef7\u503c\u548c\u901a\u884c\u6570\u91cf\u4e24\u4e2a\u8981\u6c42\u554a**  \n\u5f88\u663e\u7136\uff0c\u8fd9\u73a9\u610f\u666e\u901a\u6700\u5927\u6d41\u6700\u5c0f\u5272\u89e3\u51b3\u4e0d\u4e86\uff0c\u4f46\u662f\u6bcf\u4e2a\u70b9\u5e76\u6ca1\u6709\u89c4\u5b9a\u5fc5\u987b\u662f\u54ea\u51e0\u4e2a\u673a\u5668\u4eba\u51fa\u53bb\uff0c\u8fd9\u6070\u597d\u6ee1\u8db3\u4e86\u6700\u5927\u6d41\u4e2d\u6d41\u6ca1\u6709\u7279\u6b8a\u6027\u7684\u6027\u8d28\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u628a\u901a\u884c\u9650\u5236\u7684\u8fb9\u5efa\u51fa\u6765\u3002\u6700\u5927\u6d41\u5c31\u662f\u673a\u5668\u4eba\u603b\u6570\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u673a\u5668\u4eba\u90fd\u8981\u56de\u5bb6\u3002\u73b0\u5728\u5728\u8fd9\u4e2a\u6700\u5927\u6d41\u4e0b\u8981\u627e\u51fa\u6700\u5927\u7684\u8d39\u7528\uff0c\u5f88\u96be\u4e0d\u8ba9\u4eba\u60f3\u5230**\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41**\uff0c\u70b9\u6743\u53ea\u80fd\u53d6\u4e00\u6b21\u7684\u8fd9\u4e2a\u8bbe\u5b9a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u62c6\u70b9\uff0c\u5e76\u4e8e\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u5206\u522b\u5efa\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u6d41\u91cf\u4e3a 1\uff0c\u4f46\u662f\u6743\u503c\u4e3a\u70b9\u6743\uff0c\u53e6\u5916\u4e00\u6761\u6d41\u91cf\u4e3a $inf$\uff0c\u4f46\u6743\u503c\u4e3a 0\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3\u53d6\u4e00\u6b21\u7684\u95ee\u9898\u4e86\u3002  \n\u4f46\u662f\uff01\u8fd9\u9053\u9898\u8981\u6c42\u7684\u662f\u6700\u5927\u8d39\u7528\uff0c\u5176\u5b9e\u90a3\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5c06\u70b9\u6743\u53d6\u53cd\uff0c\u5728\u8f93\u51fa\u65f6\u518d\u53d6\u53cd\u5c31\u53ef\u4ee5\u4e86\uff01  \n\u8fdc\u53e4 code\uff08\u7531\u4e8e\u662f\u5f88\u4e45\u4ee5\u524d\u5199\u7684\u4e86\u6240\u4ee5\u7801\u98ce\u5f88\u96be\u770b\uff09\uff1a  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint a,b;\nint q,p;\nint value;\nstruct node{\n\tint x,y,data;\n}st[20];\nnode en[20];\nint head[1010];\nstruct EDGE{\n\tint next;\n\tint w;\n\tint v;\n\tint f;\n\tint neg;\n}edge[10100];\nint cnt;\nvoid add(int u,int v,int w,int f){\n\t++cnt;\n\tedge[cnt].next=head[u];\n\tedge[cnt].f=f;\n\tedge[cnt].w=w;\n\tedge[cnt].v=v;\n\thead[u]=cnt;\n\tedge[cnt].neg=cnt+1;\n\t++cnt;\n\tedge[cnt].next=head[v];\n\tedge[cnt].f=0;\n\tedge[cnt].w=-w;\n\tedge[cnt].v=u;\n\thead[v]=cnt;\n\tedge[cnt].neg=cnt-1;\n}\nint predot[1010];\nint preedge[1010];\nint incf[1010];\nint cost;\nqueue <int> Q;\nint dis[1010];\nbool vis[1010];\nbool SPFA(){\n\tfor(int i=0;i<=(q+1)*(p+1)+1;i++){\n\t\tincf[i]=1e9;\n\t\tdis[i]=-1e9;\n\t\tvis[i]=false;\n\t\tpredot[i]=-1;\n\t\tpreedge[i]=0;\n\t}\n\tQ.push(0);\n\tdis[0]=0;\n\tvis[0]=true;\n\twhile(!Q.empty()){\n\t\tint cur=Q.front();\n\t\tQ.pop();\n\t\tvis[cur]=false;\n\t\tfor(int i=head[cur];i;i=edge[i].next){\n\t\t\tif(edge[i].f!=0){\n\t\t\t\tint v=edge[i].v;\n\t\t\t\tint w=edge[i].w;\n\t\t\t\tint f=edge[i].f;\n\t\t\t\tif(dis[cur]+w>dis[v]){\n\t\t\t\t\tdis[v]=dis[cur]+w;\n\t\t\t\t\tincf[v]=min(incf[cur],f);\n\t\t\t\t\tpredot[v]=cur;\n\t\t\t\t\tpreedge[v]=i;\n\t\t\t\t\tif(!vis[v]){\n\t\t\t\t\t\tvis[v]=true;\n\t\t\t\t\t\tQ.push(v);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[(q+1)*(p+1)+1]!=-1e9){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\nvoid update(){\n\tint x=(q+1)*(p+1)+1;\n\tint minflow=incf[x];\n\twhile(x!=0){\n\t\tedge[preedge[x]].f-=minflow;\n\t\tedge[edge[preedge[x]].neg].f+=minflow;\n\t\tx=predot[x];\n\t}\n\tcost+=dis[(q+1)*(p+1)+1]*minflow;\n}\nvoid MCMF(){\n\twhile(SPFA()){\n\t\tupdate();\n\t}\n}\nint tmp;\nint main(){\n\tcin>>a>>b>>q>>p;\n\tq++;\n\tp++;\n\ttmp=q;\n\tq=p;\n\tp=tmp;\n\tfor(int i=1;i<=p;i++){\n\t\tfor(int j=1;j<q;j++){\n\t\t\tcin>>value;\n\t\t\tadd((i-1)*q+j,(i-1)*q+j+1,value,1);\n\t\t\tadd((i-1)*q+j,(i-1)*q+j+1,0,1e9);\n\t\t}\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tfor(int j=1;j<p;j++){\n\t\t\tcin>>value;\n\t\t\tadd(i+(j-1)*q,i+j*q,value,1);\n\t\t\tadd(i+(j-1)*q,i+j*q,0,1e9);\n\t\t}\n\t}\n\tfor(int i=1;i<=a;i++){\n\t\tcin>>st[i].data>>st[i].x>>st[i].y;\n\t\t++st[i].x;\n\t\t++st[i].y;\n\t\tadd(0,(st[i].x-1)*q+st[i].y,0,st[i].data);\n\t}\n\tfor(int i=1;i<=b;i++){\n\t\tcin>>en[i].data>>en[i].x>>en[i].y;\n\t\t++en[i].x;\n\t\t++en[i].y;\n\t\tadd((en[i].x-1)*q+en[i].y,(q+1)*(p+1)+1,0,en[i].data);\n\t}\n\tMCMF();\n\tcout<<cost;\n\treturn 0;\n}\n```\n",
        "postTime": 1648354712,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "\u7f51\u7edc\u6d41\u7ecf\u5178\u9898\u76ee--\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898"
    },
    {
        "content": "# P4012 \u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\n\n[\u66f4\u597d\u4f53\u9a8c](https://juruo999.blog.luogu.org/solution-p4012)  \n[\u9898\u76ee](https://www.luogu.com.cn/problem/P4012)\n\n\u4e00\u9053\u8d39\u7528\u6d41\u5efa\u6a21\u9898\n\n## \u9898\u610f\n\n\u673a\u5668\u4eba\u6d3b\u52a8\u533a\u57df\u4e3a $p\\times q$ \u7684\u7f51\u683c\u56fe\u3002\n\n\u6709 $a$ \u4e2a\u51fa\u53d1\u70b9\uff0c\u6bcf\u4e2a\u51fa\u53d1\u70b9\u6709 $k_i$ \u4e2a\u6df1\u6d77\u673a\u5668\u4eba\u3002  \n\u6709 $b$ \u4e2a\u76ee\u7684\u5730\uff0c\u6bcf\u4e2a\u76ee\u7684\u5730\u9700\u8981 $r_i$ \u4e2a\u6df1\u6d77\u673a\u5668\u4eba\u5230\u8fbe\u3002\n\n\u6bcf\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u4ece\u51fa\u53d1\u70b9\u51fa\u53d1\u5411\u4e1c\u6216\u5411\u5317\u79fb\u52a8\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u673a\u5668\u4eba\u53ef\u4ee5\u91c7\u96c6\u6cbf\u9014\u7684\u6807\u672c\u5e76\u83b7\u5f97\u4ef7\u503c\uff0c**\u6bcf\u4e2a\u6807\u672c\u53ea\u80fd\u88ab\u91c7\u96c6\u4e00\u6b21**\uff0c\u4f46**\u8fb9\u53ef\u4ee5\u88ab\u91cd\u590d\u8d70\u8fc7**\uff0c\u540c\u4e00\u65f6\u523b\u591a\u4e2a\u673a\u5668\u4eba\u53ef\u5360\u636e\u540c\u4e00\u4e2a\u70b9\u3002\n\n## \u5efa\u6a21\n\n\u770b\u5230\u591a\u4e2a\u673a\u5668\u4eba\u4e00\u8d77\u8fd0\u52a8\uff0c\u6c42\u6700\u5927\u4ee3\u4ef7\uff0c\u679c\u65ad\u8d39\u7528\u6d41\u3002\n\n_P.S.\u8fd9\u91cc\u4e0d\u533a\u5206\u8d39\u7528\u6d41\u6a21\u578b\u4e2d\u7684\u70b9\u548c\u7f51\u683c\u56fe\u4e2d\u7684\u70b9_\n\n\u4ece\u8d85\u7ea7\u6e90\u70b9\u5f80\u6bcf\u4e2a\u51fa\u53d1\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf $k_i$\uff0c\u8d39\u7528 $0$\uff0c\u8868\u793a $k_i$ \u4e2a\u673a\u5668\u4eba\u4ece\u7b2c $i$ \u4e2a\u51fa\u53d1\u70b9\u51fa\u53d1\u3002\n\n\u4ece\u6bcf\u4e2a\u76ee\u7684\u5730\u5f80\u8d85\u7ea7\u6c47\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf $r_i$\uff0c\u8d39\u7528 $0$\uff0c\u8868\u793a $r_i$ \u4e2a\u673a\u5668\u4eba\u5c06\u4f1a\u6700\u7ec8\u5230\u8fbe\u7b2c $i$ \u4e2a\u76ee\u7684\u5730\u3002\n\n\u5982\u679c\u6bcf\u4e2a\u6807\u672c\u53ef\u4ee5\u65e0\u9650\u6b21\u91c7\u96c6\uff0c\u90a3\u5c31\u5f88\u597d\u529e\uff0c\u7f51\u683c\u56fe\u4e2d\u7684\u6bcf\u4e2a\u70b9\u5411\u5b83\u4e1c\u8fb9\u3001\u5317\u8fb9\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u8d39\u7528\u4e3a\u5bf9\u5e94\u6807\u672c\u4ef7\u503c\uff0c\u5bb9\u91cf\u4e3a $\\infty$\uff0c\u8868\u793a\u6bcf\u6761\u8fb9\u53ef\u4ee5\u65e0\u9650\u6b21\u8d70\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u6bcf\u4e2a\u6807\u672c**\u53ea\u80fd\u88ab\u91c7\u96c6\u4e00\u6b21**\u3002\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u628a\u4e00\u6761\u8fb9\u62c6\u6210\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u8d39\u7528\u4e3a\u8fd9\u6761\u8fb9\u4e0a\u7684\u6807\u672c\u4ef7\u503c\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u53e6\u4e00\u6761\u8d39\u7528\u4e3a $0$\uff0c\u5bb9\u91cf\u4e3a $\\infty$\u3002\n\n\u6700\u540e\u56fe\u662f\u8fd9\u6837\u7684\n\n![](https://s3.bmp.ovh/imgs/2022/03/9d549b9cc566d67b.png)\n\n\u56fe\u4e2d\u7eff\u70b9\u8868\u793a\u51fa\u53d1\u70b9\uff0c\u84dd\u70b9\u8868\u793a\u76ee\u7684\u5730\uff0c\u6ce8\u610f\u56fe\u4e2d\u7684\u4e00\u4e2a\u7bad\u5934\u80fd\u540c\u65f6\u8868\u793a\u6700\u7ec8\u56fe\u4e2d\u7684\u4e24\u6761\u8fb9\n\n\u6700\u540e\u8dd1\u4e00\u4e2a\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n## code\n\n\u5efa\u56fe\u90e8\u5206\n\n```cpp\n\tfor(int i=1;i<=p;i++){\t// \u5411\u4e1c\u8def\u5f84\n\t\tfor(int j=1;j<q;j++){\n\t\t\tll t;scanf(\"%lld\",&t);\n\t\t\tcflow::addflow(id(i,j),id(i,j+1),1,-t);\t// \u8d39\u7528\u53d6\u76f8\u53cd\u6570\u8f6c\u6362\u4e3a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\t\t\tcflow::addflow(id(i,j),id(i,j+1),inf,0); //\u6ce8\u610f\u8fd9\u6761\u8fb9\u4e0d\u662f\u53cd\u5411\u8fb9\n\t\t\t// \u52a0\u53cd\u5411\u8fb9\u5728 addflow \u91cc\n\t\t}\n\t}\n\t\n\tfor(int j=1;j<=q;j++){\t// \u5411\u5317\u8def\u5f84\n\t\tfor(int i=1;i<p;i++){\n\t\t\tll t;scanf(\"%lld\",&t);\n\t\t\tcflow::addflow(id(i,j),id(i+1,j),1,-t);\n\t\t\tcflow::addflow(id(i,j),id(i+1,j),inf,0);\n\t\t}\n\t}\n\n\tfor(int i=1;i<=a;i++){\n\t\tll k;int x,y;\n\t\tscanf(\"%lld%d%d\",&k,&x,&y);\n\t\tcflow::addflow(1,id(x+1,y+1),k,0);\t// \u51fa\u53d1\u70b9\n\t}\n\t\n\tfor(int i=1;i<=b;i++){\n\t\tll k;int x,y;\n\t\tscanf(\"%lld%d%d\",&k,&x,&y);\n\t\tcflow::addflow(id(x+1,y+1),2,k,0);\t// \u76ee\u7684\u5730\n\t}\n```\n\n\n\u5b8c\u6574\u7248\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\ntypedef long long ll;\nconst ll inf=0x3f3f3f3f3f3f3f3f;\n\nnamespace cflow{\t// \u539f\u59cb\u5bf9\u5076\u7b97\u6cd5\n\n\tconst int maxn=5005,maxm=50005;\n\n\tint n,s,t;\n\n\tinline int oth(int x){\n\t\treturn ((x-1)^1)+1;\n\t}\n\n\tstruct edge{\n\t\tint u,v; ll w,c; int nxt;\n\t\tedge(){}\n\t\tedge(int u_,int v_,ll w_,ll c_,int nxt_)\n\t\t\t{ u=u_,v=v_,w=w_,c=c_,nxt=nxt_; }\n\t}e[2*maxm];\n\tint fst[maxn],tp=0;\n\n\tvoid addedge(int u,int v,ll w,ll c){\n\t\te[++tp]=edge(u,v,w,c,fst[u]);\n\t\tfst[u]=tp;\n\t}\n\tvoid addflow(int u,int v,ll w,ll c){\n\t\taddedge(u,v,w,c);\n\t\taddedge(v,u,0,-c);\n\t}\n\n\tll dis[maxn],h[maxn],mxw[maxn];int cnt[maxn],frm[maxn],fre[maxn];\n\tbool vis[maxn];\n\n\tvoid spfa(){\n\t\tstatic queue<int> q;\n\t\twhile(!q.empty()){ q.pop(); }\n\n\t\tmemset(dis,0x3f,sizeof(dis));\n\t\tmemset(cnt,0,sizeof(cnt));\n\t\tmemset(vis,0,sizeof(vis));\n\n\t\tdis[s]=0;vis[s]=1;q.push(s);cnt[s]++;\n\t\twhile(!q.empty()){\n\t\t\tint u=q.front();q.pop();vis[u]=0;\n\t\t\tif(cnt[u]>n+1){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(int i=fst[u];i!=0;i=e[i].nxt){\n\t\t\t\tint v=e[i].v;\n\t\t\t\tll c=e[i].c;\n\t\t\t\tif(e[i].w==0){ continue; }\n\t\t\t\tif(dis[v]>dis[u]+c){\n\t\t\t\t\tdis[v]=dis[u]+c;\n\t\t\t\t\tif(!vis[v]){ vis[v]=1;q.push(v);cnt[v]++; }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid clear(){\n\t\tmemset(cflow::fst,0,sizeof(cflow::fst));cflow::tp=0;\n\t}\n\tvoid init(int n_,int s_,int t_){\n\t\tclear();\n\t\tn=n_,s=s_,t=t_;\n\t}\n\n\tstruct pr{\n\t\tll dis;int u;pr(){}pr(int u_,ll dis_){u=u_,dis=dis_;}\n\t};\n\tbool operator<(pr a,pr b){\n\t\treturn (a.dis!=b.dis)?(a.dis>b.dis):(a.u>b.u);\n\t}\n\n\tbool dijkstra(){\n\t\tstatic priority_queue<pr> q;\n\t\twhile(!q.empty()){ q.pop(); }\n\t\tmemset(dis,0x3f,sizeof(dis));\n\t\tdis[s]=0;mxw[s]=inf;q.push(pr(s,0));\n\t\twhile(!q.empty()){\n\t\t\tint u=q.top().u;q.pop();\n\t\t\tfor(int i=fst[u];i!=0;i=e[i].nxt){\n\t\t\t\tint v=e[i].v;\n\t\t\t\tll c=e[i].c+h[u]-h[v],w=e[i].w;\n\t\t\t\tif(w && (dis[v]>dis[u]+c)){\n\t\t\t\t\tdis[v]=dis[u]+c;\n\t\t\t\t\tmxw[v]=min(mxw[u],w);\n\t\t\t\t\tfrm[v]=u;\n\t\t\t\t\tfre[v]=i;\n\t\t\t\t\tq.push(pr(v,dis[v]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dis[t]!=inf;\n\t}\n\n\tll mincost,maxflow;\n\n\tvoid MCMF(){\n\n\t\tspfa();\n\t\tmemcpy(h,dis,sizeof(h));\n\n\t\tmincost=maxflow=0;\n\t\twhile(dijkstra()){\n\t\t\tll flow=mxw[t];\n\t\t\tmaxflow+=flow;\n\t\t\tmincost+=flow*(dis[t]-h[s]+h[t]);\n\t\t\tfor(int i=t;i!=s;i=frm[i]){\n\t\t\t\te[fre[i]].w-=flow;\n\t\t\t\te[oth(fre[i])].w+=flow;\n\t\t\t}\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\th[i]+=dis[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\nint a,b,p,q;\n\ninline int id(int i,int j){\n\treturn q*(i-1)+j+2;\n}\n\nint main(){\n\t\n\tscanf(\"%d%d%d%d\",&a,&b,&p,&q);p++,q++;\t// \u6ce8\u610f\u6709 (p+1)*(q+1) \u4e2a\u70b9\n\t\n\tcflow::init(p*q+100,1,2);\t// \u4ee5 1 \u4e3a\u6e90\u70b9\uff0c2 \u4e3a\u6c47\u70b9\n\t\n\tfor(int i=1;i<=p;i++){\t// \u5411\u4e1c\u8def\u5f84\n\t\tfor(int j=1;j<q;j++){\n\t\t\tll t;scanf(\"%lld\",&t);\n\t\t\tcflow::addflow(id(i,j),id(i,j+1),1,-t);\t// \u8d39\u7528\u53d6\u76f8\u53cd\u6570\u8f6c\u6362\u4e3a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\t\t\tcflow::addflow(id(i,j),id(i,j+1),inf,0); //\u6ce8\u610f\u8fd9\u6761\u8fb9\u4e0d\u662f\u53cd\u5411\u8fb9\n\t\t\t// \u52a0\u53cd\u5411\u8fb9\u5728 addflow \u91cc\n\t\t}\n\t}\n\t\n\tfor(int j=1;j<=q;j++){\t// \u5411\u5317\u8def\u5f84\n\t\tfor(int i=1;i<p;i++){\n\t\t\tll t;scanf(\"%lld\",&t);\n\t\t\tcflow::addflow(id(i,j),id(i+1,j),1,-t);\n\t\t\tcflow::addflow(id(i,j),id(i+1,j),inf,0);\n\t\t}\n\t}\n\n\tfor(int i=1;i<=a;i++){\n\t\tll k;int x,y;\n\t\tscanf(\"%lld%d%d\",&k,&x,&y);\n\t\tcflow::addflow(1,id(x+1,y+1),k,0);\t// \u51fa\u53d1\u70b9\n\t}\n\t\n\tfor(int i=1;i<=b;i++){\n\t\tll k;int x,y;\n\t\tscanf(\"%lld%d%d\",&k,&x,&y);\n\t\tcflow::addflow(id(x+1,y+1),2,k,0);\t// \u76ee\u7684\u5730\n\t}\n\t\n\tcflow::MCMF();\n\tprintf(\"%lld\\n\",-cflow::mincost);\t// \u8d39\u7528\u53d6\u4e86\u76f8\u53cd\u6570\n\n\treturn 0;\n\n}\n```",
        "postTime": 1647059006,
        "uid": 371818,
        "name": "juruo999",
        "ccfLevel": 7,
        "title": "P4012 \u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898 \u9898\u89e3"
    },
    {
        "content": "UPD\uff1a\u63cf\u8ff0\u4e0e\u539f\u9898\u51fa\u73b0\u4e86\u504f\u5dee\u5bfc\u81f4\u5206\u6790\u6709\u70b9\u9519\u8bef\uff0c\u5df2\u4fee\u6b63\u3002\n\n\u8fd9\u9898\u5bf9\u6211\u8fd9\u79cd\u96be\u4ee5\u638c\u63e1\u65b9\u5411\u7684\u4eba\u6765\u8bf4\u975e\u5e38\u4e0d\u53cb\u597d\u554a\u2026\u2026\n\n## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a $P\\times Q$ \u7684\u7f51\u683c\u56fe\uff0c\u4ece $(0,0)$ \u5230 $(P,Q)$\u3002\n\n\u56fe\u4e0a\u4f1a\u51fa\u73b0\u4e00\u4e9b\u673a\u5668\u4eba\uff0c\u6bcf\u4e2a\u673a\u5668\u4eba\u53ea\u80fd\u5411\u5317\u6216\u5411\u4e1c\u8d70\uff0c\u800c\u4e14\u5728\u67d0\u4e2a\u4f4d\u7f6e\u5411\u67d0\u4e2a\u65b9\u5411\u8d70\u4f1a\u5f97\u5230\u5bf9\u5e94\u7684\u5206\u6570\uff0c\u4f46\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5206\u6570\u53ea\u80fd\u53d6\u4e00\u6b21\u3002\n\n\u7ed9\u51fa\u67d0\u4e9b\u70b9 $(x_1,y_1)$ \u548c $k_1$\uff0c\u8868\u793a\u5728\u8fd9\u4e9b\u70b9\u4f1a\u51fa\u73b0 $k_1$ \u4e2a\u673a\u5668\u4eba\u3002\n\n\u7ed9\u51fa\u53e6\u5916\u4e00\u4e9b\u70b9 $(x_2,y_2)$ \u548c $k_2$\uff0c\u8868\u793a\u5728\u8fd9\u4e9b\u70b9\u6709 $k_2$ \u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u79bb\u5f00\u3002\n\n\u6c42\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5f97\u5206\u3002\n\n## Solution\n\n\u9996\u5148\u663e\u7136\u7684\u53ef\u4ee5\u770b\u51fa\uff0c\u4e00\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u4ee3\u8868\u4e00\u4e2a\u6d41\u91cf\uff0c\u6bcf\u83b7\u5f97\u4e00\u5206\u53ef\u4ee5\u4ee3\u8868\u8d39\u7528\u52a0\u4e00\u3002\n\n\u770b\u5230\u9898\u76ee\u8981\u6c42\u7684\u4e0d\u662f\u6709\u591a\u5c11\u4e2a\u673a\u5668\u4eba\u80fd\u79bb\u5f00\uff0c\u800c\u662f\u80fd\u83b7\u5f97\u591a\u5c11\u5206\uff0c\u6240\u4ee5\u9009\u62e9\u6c42\u6700\u5927\u6d41\u4e0b\u7684\u6700\u5927\u8d39\u7528\u3002\n\n\u7136\u540e\u6765\u5206\u6790\u4e00\u4e0b\u600e\u4e48\u5efa\u56fe\u3002\n\n\u5df2\u77e5\u4f1a\u6709\u4e0d\u786e\u5b9a\u4e2a\u70b9\u51fa\u73b0\u4e0d\u786e\u5b9a\u4e2a\u673a\u5668\u4eba\uff0c\u5e76\u4e14\u4ed6\u4eec\u7684\u51fa\u73b0\u5e76\u4e0d\u4f1a\u589e\u52a0\u5f97\u5206\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u6e90\u70b9 $S$ \u5206\u522b\u5411\u8fd9\u4e9b\u8d77\u70b9\u8fde\u6d41\u91cf\u4e3a\u673a\u5668\u4eba\u4e2a\u6570\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u540c\u7406\uff0c\u5bf9\u4e8e\u6700\u591a\u80fd\u79bb\u5f00\u4e0d\u786e\u5b9a\u4e2a\u673a\u5668\u4eba\u7684\u7ec8\u70b9\uff0c\u4ece\u5b83\u4eec\u5411\u6c47\u70b9\u5206\u522b\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u673a\u5668\u4eba\u4e2a\u6570\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u5bf9\u4e8e\u56fe\u4e2d\u7684\u70b9\uff0c\u6839\u636e\u673a\u5668\u4eba\u7684\u884c\u8d70\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u673a\u5668\u4eba\u53ea\u80fd\u4ece\u897f\u8d70\u5411\u4e1c\u6216\u4ece\u5357\u8d70\u5411\u5317\uff0c\u5e76\u4e14\u6bcf\u6b21\u53ea\u80fd\u8d70\u4e00\u683c\u3002\n\n\u53c8\u56e0\u4e3a\u7b2c\u4e00\u6b21\u8d70\u67d0\u4e2a\u4f4d\u7f6e\u90fd\u53ef\u4ee5\u83b7\u5f97\u5bf9\u5e94\u7684\u6743\u503c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5411\u5b83\u6240\u80fd\u5230\u8fbe\u7684\u70b9\uff08\u4e5f\u5c31\u662f\u5b83\u4e1c\u8fb9\u548c\u5317\u8fb9\u76f4\u63a5\u76f8\u90bb\u7684\u70b9\uff09\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a\u5bf9\u5e94\u6743\u503c\u7684\u8fb9\u3002\n\n\u8d70\u8fc7\u7684\u8fb9\u8fd8\u53ef\u4ee5\u968f\u4fbf\u8d70\uff0c\u4f46\u662f\u4e0d\u4f1a\u518d\u83b7\u5f97\u5206\u6570\uff0c\u6240\u4ee5\u518d\u4ece\u6bcf\u4e2a\u70b9\u5411\u5b83\u6240\u80fd\u5230\u8fbe\u7684\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u65e0\u7a77\u5927\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u7136\u540e\u8dd1\u8d39\u7528\u6d41\u5c31\u884c\u4e86\u3002\n\n\u53e6\u5916\u5bf9\u4e8e\u65b9\u5411\uff0c\u867d\u7136\u9898\u76ee\u8981\u6c42\u7684\u662f\u5411\u4e1c\u548c\u5411\u5317\u8d70\uff0c\u4f46\u5176\u5b9e\u53ea\u8981\u7eb5\u5411\u548c\u6a2a\u5411\u5206\u522b\u89c4\u5b9a\u4e00\u4e2a\u65b9\u5411\uff0c\u7136\u540e\u8f93\u5165\u6743\u503c\u548c\u5efa\u8fb9\u7684\u65f6\u5019\u4e0e\u65b9\u5411\u5bf9\u5e94\u4e0a\u5373\u53ef\u3002\n\n\u60f3\u7ec3\u4e60\u8f93\u51fa\u65b9\u6848\u53ef\u4ee5\u53bb\u505a [P3356 \u706b\u661f\u63a2\u9669\u95ee\u9898](https://www.luogu.com.cn/problem/P3356)\uff0c\u53ea\u662f\u51fa\u73b0\u4e86\u969c\u788d\u70b9\uff0c\u5176\u4ed6\u7684\u5dee\u4e0d\u591a\u3002\n\n## Code\n\n```cpp\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define maxn 601000\n#define maxm 300000\n#define INF 0x3f3f3f3f\n//#define int long long\n\nusing namespace std;\n\nbool vis[maxn];\nint n,m,s,t,tot=1,res,a,b;\nint val[3010][3010],id[3010][3010];\nint Dis[maxn],cur[maxn],head[maxn];\nint north[3010][3010],east[3010][3010];\nstruct edge{int fr,to,dis,cost,nxt;}e[maxm];\n\nint read(){\n    int s=0,w=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=(s<<1)+(s<<3)+ch-'0',ch=getchar();\n    return s*w;\n}\n\nvoid add(int fr,int to,int dis,int cost){\n    e[++tot].fr=fr;e[tot].cost=cost;\n    e[tot].to=to;e[tot].nxt=head[fr];\n    e[tot].dis=dis;head[fr]=tot;\n}\n\nbool spfa(){\n    bool flag=false;\n    memset(Dis,INF,sizeof Dis);\n    memcpy(cur,head,sizeof head);\n    deque<int> q;q.push_back(s);Dis[s]=0;\n    while(!q.empty()){\n        int u=q.front();\n        q.pop_front();vis[u]=0;\n        for(int i=head[u];i;i=e[i].nxt){\n            int to=e[i].to;\n            if(Dis[to]>Dis[u]+e[i].cost&&e[i].dis){\n                Dis[to]=Dis[u]+e[i].cost;\n                if(!vis[to]){\n                    vis[to]=1;\n                    if(!q.empty()&&Dis[to]<Dis[q.front()]) q.push_front(to);\n                    else q.push_back(to);\n                }\n                if(to==t) flag=true;\n            }\n        }\n    }\n    return flag;\n}\n\nint dfs(int u,int limit){\n    if(u==t) return limit;int flow=0;vis[u]=1;\n    for(int i=cur[u];i&&flow<limit;i=e[i].nxt){\n        int to=e[i].to;cur[u]=i;\n        if(Dis[to]==Dis[u]+e[i].cost&&!vis[to]&&e[i].dis){\n            int f=dfs(to,min(e[i].dis,limit-flow));\n            if(!f)Dis[to]=INF;res+=f*e[i].cost;\n            e[i].dis-=f;e[i^1].dis+=f;flow+=f;\n        }\n    }\n    vis[u]=0;\n    return flow;\n}\n\nint dinic(){\n    int Maxflow=0,flow=0;\n    while(spfa())\n        while(flow=dfs(s,INF))\n            Maxflow+=flow;\n    return Maxflow;\n}\n\nint main(){\n    a=read();b=read();n=read()+1;m=read()+1;int pos=0;s=301;t=s+1;\n    for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)id[i][j]=++pos;\n    for(int i=1,val;i<=n;i++)for(int j=2;j<=m;j++)east[i][j]=read();\n    for(int i=1,val;i<=m;i++)for(int j=2;j<=n;j++)north[j][i]=read();\n    for(int i=1,k,x,y;i<=a;i++){\n        k=read();x=read()+1;y=read()+1;\n        add(s,id[x][y],k,0);\n        add(id[x][y],s,0,0);\n    }\n    for(int i=1,r,x,y;i<=b;i++){\n        r=read();x=read()+1;y=read()+1;\n        add(id[x][y],t,r,0);\n        add(t,id[x][y],0,0);\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(i+1<=n){\n                add(id[i][j],id[i+1][j],1,-north[i+1][j]);\n                add(id[i+1][j],id[i][j],0,north[i+1][j]);\n                add(id[i][j],id[i+1][j],INF,0);\n                add(id[i+1][j],id[i][j],0,0);\n            }\n            if(j+1<=m){\n                add(id[i][j],id[i][j+1],1,-east[i][j+1]);\n                add(id[i][j+1],id[i][j],0,east[i][j+1]);\n                add(id[i][j],id[i][j+1],INF,0);\n                add(id[i][j+1],id[i][j],0,0);\n            }\n        }\n    }\n    dinic();printf(\"%d\\n\",-res);\n    return 0;\n}\n```\n",
        "postTime": 1616161542,
        "uid": 281497,
        "name": "KEBrantily",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u662f\u7f51\u7edc\u6d41 $24$ \u9898\u4e2d\u7684\u4e00\u9053\u9898\uff0c\u4e5f\u662f\u4e00\u9053\u5f88\u7ecf\u5178\u7684\u9898\u76ee\uff0c\u603b\u7684\u6765\u8c08\uff0c\u7f51\u7edc\u6d41\u771f\u7684\u662f\u4e00\n\n\u79cd\u5f88\u5b9e\u7528\u548c\u65b9\u4fbf\u7684\u7b97\u6cd5\uff0c\u5728\u5f88\u591a\u9898\u76ee\u4e0b\u90fd\u80fd\u4f7f\u7528\uff0c\u800c\u7f51\u7edc\u6d41\u7684\u5173\u952e\u5c31\u5728\u4e8e\u5efa\u56fe\uff0c\u8fd9\n\n\u9053\u9898\u4e5f\u53ef\u4ee5\u5f88\u597d\u7684\u63d0\u9ad8\u6211\u4eec\u7684\u5efa\u6a21\u80fd\u529b\u3002\n\n\n\n------------\n\n\n## \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u4f60\u6709\u4e00\u5f20 $P\u00d7Q$ \u7684\u5730\u56fe\uff0c\u6bcf\u4e2a\u65b9\u683c\u6709\u4e00\u4e2a\u4ef7\u503c $C$ \u3002\u6709 $a$ \u4e2a\u8d77\u70b9\u548c $b$ \u4e2a\n\n\u7ec8\u70b9\uff0c\u7b2c $i$ \u4e2a\u8d77\u70b9\u4e0a\u6709 $k_i$ \u6570\u91cf\u7684\u673a\u5668\u4eba\uff0c\u53ea\u5141\u8bb8\u5411\u4e0a\u6216\u8005\u5411\u53f3\u884c\u8d70\uff0c\u5e76\u83b7\u5f97\u5bf9\u5e94\n\n\u65b9\u683c\u4e4b\u4e2d\u7684\u4ef7\u503c\uff0c\u6bcf\u4e2a\u65b9\u683c\u7684\u4ef7\u503c\u53ea\u80fd\u88ab\u83b7\u5f97\u4e00\u6b21\uff0c\u6c42\u6700\u5927\u7684\u4ef7\u503c\u3002\n\n## Solution:\n\n\u5728\u89e3\u51b3\u4e86\u4e00\u5b9a\u6570\u91cf\u7684\u7f51\u7edc\u6d41\u9898\u76ee\u4e4b\u540e\uff0c\u5bf9\u5efa\u6a21\u8fd9\u4e00\u5757\u5176\u5b9e\u5df2\u7ecf\u5f88\u6709\u611f\u89c9\u4e86\uff0c\u8fd9\u9053\u9898\n\n\u8981\u6c42\u6211\u4eec\u65e2\u8981\u6ee1\u8db3\u9898\u76ee\u673a\u5668\u4eba\u548c\u8def\u5f84\u7684\u8981\u6c42\uff0c\u53c8\u8981\u4ef7\u503c\u6700\u5927\uff0c\u6709\u4e24\u91cd\u9650\u5236\uff0c\u8fd9\u5c31\u63d0\n\n\u793a\u6211\u4eec\u8981\u7528\u8d39\u7528\u6d41\uff0c\u5e76\u4e14\u6c42\u6700\u5927\u4ef7\u503c\uff0c\u4e00\u5b9a\u662f\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u6bcf\u4e2a\u673a\u5668\u4eba\u6709\u8d77\u70b9\uff0c\u4e8e\u662f\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u521d\u72b6\u6001\u4e86\uff0c\u4e3a\u4e86\u65b9\u4fbf\u8dd1\u6700\u5927\u6d41\uff0c\u6211\u4eec\u5efa\u7acb\n\n\u4e00\u4e2a\u6e90\u70b9 $S$ \u548c\u4e00\u4e2a\u6c47\u70b9 $T$ \uff0c\u7528\u6e90\u70b9 $S$ \u5411\u6bcf\u4e2a\u8d77\u70b9\u5efa\u8fb9\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u8d77\u70b9\u90fd\n\n\u6709 $k_i$ \u4e2a\u673a\u5668\u4eba\uff0c\u6545\u5bb9\u91cf\u4e3a $k_i$ \uff0c\u8d39\u7528\u4e3a $0$ \u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5904\u7406\u4ef7\u503c\u548c\u8def\u5f84\uff0c\u56e0\u4e3a\u6bcf\u6761\u8fb9\u7684\u4ef7\u503c\u53ea\u80fd\u53d6\u4e00\u6b21\uff0c\u4e14\u673a\u5668\u4eba\u53ea\u80fd\u5411\n\n\u4e0a\u6216\u5411\u53f3\u884c\u8d70\uff0c\u6545\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8d77\u70b9\uff0c\u90fd\u5411\u8be5\u70b9\u4e0a\u9762\u548c\u53f3\u8fb9\u5efa\u7acb\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a\n\n$1$\uff0c\u8d39\u7528\u4e3a\u90a3\u6761\u8def\u5f84\u7684\u4ef7\u503c\u3002\u540c\u65f6\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u591a\u6b21\u7ecf\u8fc7\u540c\u4e00\u4e2a\u70b9\u7684\uff0c\u53ea\n\n\u4e0d\u8fc7\u6ca1\u6709\u4ef7\u503c\u7f62\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u6b63\u65e0\u7a77\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\n\n\u6700\u540e\uff0c\u4e0d\u8981\u5fd8\u4e86\u628a $B$ \u4e2a\u7ec8\u70b9\u5411\u6c47\u70b9 $T$ \u8fde\u8fb9\u3002\n\n\u5efa\u597d\u56fe\uff0c\u76f4\u63a5\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u6c42\u51fa\u7b54\u6848\uff0c\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 400005\nusing namespace std;\nint num=1,k,x,y;\nint S,T,n,m,A,B,C,D,first[N],nex[N],v[N],w[N],c[N],dis[N],vis[N],mmin[N],INF=-2139062144,ansflow,anscost,b[N],p,q;\nint que[N];\nvoid Add(int s,int e,int cd,int cost)\n{\n\tnex[++num]=first[s];\n\tfirst[s]=num;\n\tv[num]=e;\n\tw[num]=cd;\n\tc[num]=cost;\n}\nbool SPFA(int u)\n{\n\tint head=1,tail=1;\n\tmemset(dis,128,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(que,0,sizeof(que));\n\tdis[u]=0;\n\tvis[u]=1;\n\tque[tail]=u;//STL\u7684\u961f\u5217\u5e38\u6570\u5f88\u5927\uff0c\u5efa\u8bae\u624b\u5199\uff0c\u5feb\u5f88\u591a \n    tail++;\n\tmmin[u]=-INF;\n\twhile(head<tail)\n\t{\n\t\tint x=que[head];\n\t\thead++;\n\t\tvis[x]=0;\n\t\tfor(int i=first[x];i;i=nex[i])\n\t\t{\n\t\t\tif(w[i]!=0&&dis[x]+c[i]>dis[v[i]])\n\t\t\t{\n\t\t\t\tdis[v[i]]=dis[x]+c[i];\n\t\t\t\tmmin[v[i]]=min(mmin[x],w[i]);\n\t\t\t\tb[v[i]]=i;\n\t\t\t\tif(!vis[v[i]])\n\t\t\t\t{\n\t\t\t\t\tque[tail]=v[i];\n\t\t\t\t    tail++;\n\t\t\t\t\tvis[v[i]]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[T]==INF) return 0;\n\telse return 1; \n}\nint bh(int i,int j)\n{\n\treturn (i-1)*q+j;\n}\nint main()\n{\n    scanf(\"%d%d\",&A,&B);\n    scanf(\"%d%d\",&p,&q);\n    p++;q++;\n    S=399998;T=399999;\n    for(int i=1;i<=p;i++)\n    {\n    \tfor(int j=1;j<=q-1;j++)\n    \t{\n    \t\tscanf(\"%d\",&C);\n    \t\tAdd(bh(i,j),bh(i,j)+1,1,C);\n    \t\tAdd(bh(i,j)+1,bh(i,j),0,-C);\n    \t\tAdd(bh(i,j),bh(i,j)+1,-INF,0);\n    \t\tAdd(bh(i,j)+1,bh(i,j),0,0);\n\t\t}\n\t}\n\tfor(int j=1;j<=q;j++)\n\t{\n\t\tfor(int i=1;i<=p-1;i++)\n        {\n            scanf(\"%d\",&C);\n            Add(bh(i,j),bh(i,j)+q,1,C);\n            Add(bh(i,j)+q,bh(i,j),0,-C);\n            Add(bh(i,j),bh(i,j)+q,-INF,0);\n            Add(bh(i,j)+q,bh(i,j),0,0);\n        }\n\t}\n    for(int i=1;i<=A;i++)\n    {\n    \tscanf(\"%d%d%d\",&k,&x,&y);\n    \tx++;y++;\n    \tAdd(S,bh(x,y),k,0);\n    \tAdd(bh(x,y),S,0,0);\n\t}\n\tfor(int i=1;i<=B;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&k,&x,&y);\n    \tx++;y++;\n    \tAdd(bh(x,y),T,k,0);\n    \tAdd(T,bh(x,y),0,0);\n\t}\n\twhile(SPFA(S))\n\t{\n\t\tanscost=anscost+dis[T]*mmin[T];\n\t    int now=T,tmp;\n\t    while(now!=S)\n\t    {\n\t    \ttmp=b[now];\n\t    \tw[tmp]=w[tmp]-mmin[T];\n\t    \tw[tmp^1]=w[tmp^1]+mmin[T];\n\t    \tnow=v[tmp^1];\n\t\t}\n\t}\n\tcout<<anscost;\t\n    return 0;\n}\n```\n\n\n\n\n\n\n",
        "postTime": 1612929203,
        "uid": 213256,
        "name": "Constant",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    },
    {
        "content": "~~\u53d1\u73b0\u5b66\u957f\u53d1\u8fc7\u8fd9\u9053\u9898\u7684\u9898\u89e3\u6240\u4ee5\u6211\u4e5f\u6765\u6c34\u4e00\u4e0b~~\n\n## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c\u6bcf\u4e00\u6761\u7f51\u683c\u8fb9\u4e0a\u90fd\u6709\u8fb9\u6743\uff0c\u7ed9\u4f60 $a$ \u4e2a\u8d77\u70b9\uff0c\u6bcf\u4e00\u4e2a\u8d77\u70b9\u53ef\u4ee5\u6709 $A_{i}$ \u4e2a\u4eba\u4ece\u8fd9\u91cc\u8d70\uff1b\u7ed9\u4f60 $b$ \u4e2a\u7ec8\u70b9\uff0c\u6bcf\u4e00\u4e2a\u7ec8\u70b9\u6700\u591a\u53ef\u4ee5\u6709 $B_{i}$ \u4e2a\u4eba\u5728\u8fd9\u91cc\u7ed3\u675f\u884c\u7a0b\uff0c\u95ee\u4f60\u6700\u5927\u7684\u8fb9\u6743\u548c\u3002\n\n## \u601d\u8def\n\n\u8003\u8651\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\u7684\u4e00\u70b9\u5c31\u662f\u9898\u76ee\u91cc\u8bf4\u4e86\u673a\u5668\u4eba\u53ea\u80fd\u5411\u5317\u6216\u8005\u5411\u4e1c\u8d70\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u4f1a\u4ece\u5de6\u4e0b\u89d2\u5f80\u53f3\u4e0a\u89d2\u8d70\uff0c\u6211\u4eec\u628a\u4ed6\u7ed9\u53cd\u8fc7\u6765\uff0c\u8ba9\u4ed6\u4ece\u5de6\u4e0a\u89d2\u5f80\u53f3\u4e0b\u89d2\u8d70\uff0c\u4e5f\u5c31\u662f\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8f93\u5165\u4e2d\u662f $Q$ \u548c $P$\uff0c\u4f46\u7531\u4e8e\u662f\u4ece $(0,0)$ \u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u5b9e\u9645\u7684\u70b9\u6570\u662f $(Q+1)\\times(P+1)$ \u7684\uff0c\u5728\u7ed9\u70b9\u7f16\u53f7\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u3002\u9996\u5148\u662f\u628a\u6a2a\u7740\u7684\u8fb9\u7ed9\u5b58\u8d77\u6765\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6839\u636e\u4e0a\u9762\u8bf4\u7684\u53ea\u80fd\u5f80\u4e0b\u6216\u5f80\u53f3\u8d70\uff0c\u6211\u4eec\u77e5\u9053\u5f53\u524d\u6a2a\u7740\u8fb9\u662f\u94fe\u63a5\u4e86\u4ed6\u5de6\u53f3\u4e24\u4e2a\u7aef\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u628a\u4ed6\u7ed9\u5b58\u8d77\u6765\u3002\u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u4e00\u4e2a\u6807\u672c\u53ea\u6709\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u540e\u9762\u7684\u673a\u5668\u4eba\u6765\u8fd9\u91cc\u7684\u8bdd\u662f\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u5f97\u5230\u7684\u4ef7\u503c\u4e3a $0$\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5728\u5b58\u8fb9\u7684\u65f6\u5019\u5b58\u4e00\u6761\u6d41\u91cf\u4e3a $1$\uff0c\u82b1\u8d39\u4e3a\u5f53\u524d\u7f51\u683c\u8fb9\u8fb9\u6743\u7684\u8fb9\uff0c\u8868\u793a\u53ea\u6709\u4e00\u4e2a\u673a\u5668\u4eba\u53ef\u4ee5\u91c7\u5230\u6807\u672c\uff0c\u7136\u540e\u518d\u5b58\u4e00\u6761\u6d41\u91cf\u4e3a $\\infty$\uff0c\u82b1\u8d39\u4e3a $0$ \u7684\u8fb9\uff0c\u8868\u793a\u5176\u4ed6\u7ecf\u8fc7\u8fd9\u6761\u7f51\u683c\u8fb9\u7684\u673a\u5668\u4eba\u90fd\u4e0d\u4f1a\u91c7\u5230\u6807\u672c\u3002\u540c\u7406\u6211\u4eec\u628a\u540e\u9762\u7684\u90a3\u4e9b\u7ad6\u8fb9\u4e5f\u5904\u7406\u51fa\u6765\uff08\u5728\u679a\u4e3e\u7684\u65f6\u5019\u8981\u6ce8\u610f\u6a2a\u7740\u7684\u8fb9\u4e00\u5171\u662f $Q+1$ \u884c\uff0c\u4f46\u662f\u4e00\u884c\u53ea\u6709 $P$ \u6761\u8fb9\uff0c\u56e0\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u624d\u662f\u8fb9\uff0c\u540c\u7406\u7ad6\u8fb9\u4e00\u5171\u662f $P+1$ \u5217\uff0c\u4f46\u662f\u4e00\u5217\u53ea\u6709 $Q$ \u6761\u8fb9\uff09\u3002\n\n\u7136\u540e\u6211\u4eec\u6765\u5904\u7406\u6bcf\u4e00\u4e2a\u8d77\u70b9\u548c\u6bcf\u4e00\u4e2a\u7ec8\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4e2a\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u6709\u673a\u5668\u4eba\u4e2a\u6570\u9650\u5236\uff0c\u6bd4\u5982\u7b2c $i$ \u4e2a\u8d77\u70b9\u6700\u591a\u6709 $A_{i}$ \u4e2a\u673a\u5668\u4eba\u4ece\u8fd9\u91cc\u51fa\u53d1\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u8d85\u7ea7\u6e90\u70b9\u5411\u6bcf\u4e00\u4e2a\u8d77\u70b9\u90fd\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $A_{i}$\uff0c\u82b1\u8d39\u4e3a $0$ \u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u6bcf\u4e00\u4e2a\u8d77\u70b9\u673a\u5668\u4eba\u6570\u91cf\u7684\u9650\u5236\uff1b\u540c\u7406\u4e5f\u53ef\u4ee5\u8fd9\u6837\u6765\u9650\u5236\u5230\u8fbe\u6bcf\u4e00\u4e2a\u7ec8\u70b9\u7684\u673a\u5668\u4eba\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5efa\u5b8c\u56fe\u4e4b\u540e\u76f4\u63a5\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff08\u5728\u5b58\u8fb9\u7684\u65f6\u5019\u628a\u8fb9\u6743\u53d6\u4e2a\u76f8\u53cd\u6570\u5c31\u8f6c\u5316\u4e3a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u4e86\uff09\u5c31\u597d\u4e86\u3002\n\n### code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define N 100010\nusing namespace std;\nint cnt=1,head[N],n,m,s,t,a,b,mcost;\nint dis[N],vis[N],flow[N],pre[N],ff[N];\nstruct sb{int v,w,val,next;}e[N];\ninline int bh(int x,int y){return x*(m+1)+y+1;}//\u6c42\u51fa\u7f16\u53f7 \ninline void add(int u,int v,int w,int val)//W\u662f\u6d41\u91cf\uff0cval\u662f\u82b1\u8d39 \n{\n\te[++cnt].v=v;e[cnt].w=w;e[cnt].val=val;e[cnt].next=head[u];head[u]=cnt;\n\te[++cnt].v=u;e[cnt].w=0;e[cnt].val=-val;e[cnt].next=head[v];head[v]=cnt;\n}\ninline int SPFA()\n{\n\tqueue<int>q;\n\tmemset(dis,INF,sizeof dis);\n\tmemset(vis,0,sizeof vis);\n\tdis[s]=0;\n\tvis[s]=1;\n\tflow[s]=INF;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tvis[u]=0;\n\t\tfor(int i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].v,w=e[i].val;\n\t\t\tif(e[i].w&&dis[v]>dis[u]+w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tpre[v]=i;\n\t\t\t\tff[v]=u;\n\t\t\t\tflow[v]=min(flow[u],e[i].w);\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tq.push(v);\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]!=INF;\n}\ninline void EK()\n{\n\twhile(SPFA())\n\t{\n\t\tint k=t;\n\t\twhile(k!=s)\n\t\t{\n\t\t\te[pre[k]].w-=flow[t];\n\t\t\te[pre[k]^1].w+=flow[t];\n\t\t\tk=ff[k];\n\t\t}\n\t\tmcost+=dis[t]*flow[t];\n\t}\n}\nsigned main()\n{\n\tcin>>a>>b>>n>>m;\n\ts=0;t=N-1;//\u8d77\u70b9\u548c\u7ec8\u70b9\u7f16\u53f7 \n\tfor(int i=0;i<=n;i++)//\u679a\u4e3e\u6240\u6709\u6a2a\u7740\u7684\u8fb9 \n\t{\n\t\tfor(int j=0;j<m;j++)//\u4e00\u884cm\u6761 \n\t\t{\n\t\t\tint x;\n\t\t\tcin>>x;\n\t\t\tadd(bh(i,j),bh(i,j+1),1,-x);//\u5c06\u5f53\u524d\u70b9\u548c\u4e0b\u4e00\u4e2a\u70b9\u94fe\u63a5\u8d77\u6765\uff0c\u82b1\u8d39\u662f-x\u56e0\u4e3a\u8981\u6c42\u7684\u662f\u6700\u5927\u82b1\u8d39\u6700\u5927\u6d41\uff0c\u56e0\u4e3a\u6807\u672c\u53ea\u80fd\u91c7\u4e00\u6b21\u6240\u4ee5\u6d41\u91cf\u662f1 \n\t\t\tadd(bh(i,j),bh(i,j+1),INF,0);//\u8fd9\u4e2a\u662f\u540e\u9762\u7684\u8fb9\uff0c\u6807\u672c\u6ca1\u4e86\u82b1\u8d39\u4e3a0\uff0c\u53ef\u4ee5\u65e0\u9650\u91cd\u590d\u8d70\uff0c\u6240\u4ee5\u6d41\u91cf\u662fINF \n\t\t}\n\t}\n\tfor(int i=0;i<=m;i++)//\u540c\u7406\u679a\u4e3e\u6240\u6709\u7ad6\u7740\u7684\u8fb9 \n\t{\n\t\tfor(int j=0;j<n;j++)\n\t\t{\n\t\t\tint x;\n\t\t\tcin>>x;\n\t\t\tadd(bh(j,i),bh(j+1,i),1,-x);\n\t\t\tadd(bh(j,i),bh(j+1,i),INF,0);\n\t\t}\n\t}\n\tfor(int i=1;i<=a;i++)//\u8fd9\u4e2a\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8d77\u70b9\uff0c \n\t{\n\t\tint x,y,z;\n\t\tcin>>z>>x>>y;\n\t\tadd(s,bh(x,y),z,0);\n\t}\n\tfor(int i=1;i<=b;i++)\n\t{\n\t\tint x,y,z;\n\t\tcin>>z>>x>>y;\n\t\tadd(bh(x,y),t,z,0);\n\t}\n\tEK();\n\tcout<<(-mcost)<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1678017364,
        "uid": 526519,
        "name": "Aisaka_Taiga",
        "ccfLevel": 0,
        "title": "P4012 \u9898\u89e3"
    },
    {
        "content": "## \u5206\u6790\n\u4ece\u9898\u76ee\u4e2d\u7684\u5bb9\u91cf\u9650\u5236\u4ee5\u53ca\u8fb9\uff08\u7f51\u683c\u70b9\u4e4b\u95f4\u7684\u8fb9\uff09\u5177\u6709**\u8d39\u7528**\u7684\u5c5e\u6027\u53ef\u4ee5\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a**\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u95ee\u9898**\u3002\n\n\u4e0b\u9762\u8003\u5bdf\u4e00\u4e0b\u5982\u4f55\u5efa\u56fe\u5c31\u53ef\u4ee5\u4e86\uff1a\n+ \u56e0\u4e3a\u8fb9\u7684\u8d39\u7528\u53ea\u80fd\u53d6\u4e00\u6b21\uff0c\u6240\u4ee5\u8981\u5728\u6d41\u7f51\u7edc\u7684\u70b9\u4e0e\u70b9\u4e4b\u95f4\u8fde\u63a5\u4e24\u6761\u8fb9\uff1a\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \uff0c\u8d39\u7528\u4e3a\u8f93\u5165\u7684\u6807\u672c\u4ef7\u503c $w$ \uff0c\u8868\u793a\u53ea\u80fd\u591f\u53d6\u4e00\u6b21\uff1b\u800c\u53e6\u4e00\u6761\u5bb9\u91cf\u4e3a $\u221e$ \uff0c\u8d39\u7528\u4e3a $0$ \uff0c\u8868\u660e\u5f53\u53d6\u8d70\u6807\u672c\u4e4b\u540e\uff0c\u7ecf\u8fc7\u6b21\u6570\u4e0d\u53d7\u7ea6\u675f\uff0c\u4f46\u65e0\u6cd5\u518d\u53d6\u5f97\u8d39\u7528\u3002\n\n+ \u800c\u56e0\u4e3a\u8fd9\u9898\u5177\u6709\u591a\u4e2a\u6e90\u70b9\u548c\u591a\u4e2a\u6c47\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u5206\u522b\u5efa\u7acb\u865a\u62df\u6e90\u70b9 $S$ \uff0c$T$ \uff0c$S$ \u5411\u591a\u4e2a\u6e90\u70b9\u8fde\u8fb9\uff0c$T$ \u5411\u591a\u4e2a\u6c47\u70b9\u8fde\u8fb9\u5373\u53ef\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\uff1a\n+ \u6ce8\u610f\u8bfb\u5165\uff0c\u5728\u8bfb\u5165\u8fb9\u7684\u8d39\u7528\u65f6\u9898\u76ee\u8bfb\u5165\u7684\u987a\u5e8f\u5b58\u5728\u5148\u8bfb\u5165\u5217\u540e\u8bfb\u5165\u884c\u7684\u60c5\u51b5\u3002\n+ \u6c42\u53d6\u6700\u5927\u8d39\u7528\uff08\u5373\u6700\u957f\u8def\uff09\u65f6\uff0c\u53ea\u9700\u5c06\u4e00\u822c\u7684 spfa \u4e2d `d[go]>d[hd]+e[i].w` \u6539\u4e3a `d[go]<d[hd]+e[i].w` \uff0c\u521d\u59cb\u5316\u8ddd\u79bb `d[]` \u4e3a $-\u221e$ \u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=400, M=4*N+10+10<<1, INF=0x3f3f3f3f;\n\nint n, m, S, T;\nint cnt_s, cnt_t;\n\nstruct node{\n\tint to, c, w, next;\n}e[M];\n\nint h[N], tot;\n\nvoid add(int u, int v, int c, int w){\n\te[tot].to=v, e[tot].c=c, e[tot].w=w, e[tot].next=h[u], h[u]=tot++;\n\te[tot].to=u, e[tot].c=0, e[tot].w=-w, e[tot].next=h[v], h[v]=tot++;\n}\n\nint d[N], q[N], lim[N], pre[N];\nbool vis[N];\n\nbool spfa(){\n\tmemset(vis, false, sizeof vis), memset(lim, 0, sizeof lim), memset(d, 0xcf, sizeof d);\n\tint tt=0, hh=0;\n\tq[tt++]=S, d[S]=0, lim[S]=INF;\n\t\n\twhile(tt!=hh){\n\t\tint hd=q[hh++]; if(hh==N) hh=0; // spfa \u53ef\u80fd\u5b58\u5728\u70b9\u591a\u6b21\u5165\u961f\u60c5\u51b5\uff0c\u91c7\u53d6\u5faa\u73af\u961f\u5217\u5199\u6cd5\u3002\n\t\tvis[hd]=false;\n\t\tfor(int i=h[hd]; ~i; i=e[i].next){\n\t\t\tint go=e[i].to;\n\t\t\tif(d[go]<d[hd]+e[i].w && e[i].c){\n\t\t\t\td[go]=d[hd]+e[i].w;\n\t\t\t\tlim[go]=min(lim[hd], e[i].c);\n\t\t\t\tpre[go]=i;\n\t\t\t\tif(!vis[go]){\n\t\t\t\t\tvis[go]=true;\n\t\t\t\t\tq[tt++]=go; if(tt==N) tt=0; // spfa \u53ef\u80fd\u5b58\u5728\u70b9\u591a\u6b21\u5165\u961f\u60c5\u51b5\uff0c\u91c7\u53d6\u5faa\u73af\u961f\u5217\u5199\u6cd5\u3002\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn lim[T]>0;\n}\n\nint EK(){\n\tint cost=0;\n\twhile(spfa()){\n\t\tint t=lim[T];\n\t\tcost+=t*d[T];\n\t\tfor(int i=T; i!=S; i=e[pre[i]^1].to){\n\t\t\te[pre[i]].c-=t, e[pre[i]^1].c+=t; \n\t\t}\n\t}\n\treturn cost;\n}\n\nint id[20][20], cnt;\n\nint main(){\n\tmemset(h, -1, sizeof h);\n\tcin>>cnt_s>>cnt_t>>n>>m;\n\t\n\tfor(int i=0; i<=n; i++) for(int j=0; j<=m; j++) id[i][j]=++cnt; // \u9884\u5904\u7406\u70b9\u7f16\u53f7\n\t\n\tS=0, T=cnt+1;\n\tfor(int i=0; i<=n; i++) for(int j=0; j<=m-1; j++){\n\t\tint w; cin>>w;\n\t\tadd(id[i][j], id[i][j+1], 1, w), add(id[i][j], id[i][j+1], INF, 0);\n\t}\n\t\n\tfor(int j=0; j<=m; j++) for(int i=0; i<=n-1; i++){ // \u6ce8\u610f\u8fd9\u91cc\u7684\u8bfb\u5165\n\t\tint w; cin>>w;\n\t\tadd(id[i][j], id[i+1][j], 1, w), add(id[i][j], id[i+1][j], INF, 0);\n\t}\n\t\n\twhile(cnt_s--){\n\t\tint c, x, y; cin>>c>>x>>y;\n\t\tadd(S, id[x][y], c, 0);\n\t}\n\t\n\twhile(cnt_t--){\n\t\tint c, x, y; cin>>c>>x>>y;\n\t\tadd(id[x][y], T, c, 0);\n\t}\n\t\n\tcout<<EK()<<endl;\n\t\t\n\treturn 0;\n}\n```",
        "postTime": 1621046418,
        "uid": 138960,
        "name": "Tenshi",
        "ccfLevel": 0,
        "title": "P4012 \u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u4e4b\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\n\u5efa\u6a21\uff1a\n- \u5728\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u8fde\u4e24\u6761\u8fb9\uff0c\u4e00\u6761\u7684\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u8f93\u5165\uff1b\u53e6\u4e00\u6761\u5bb9\u91cf\u4e3aINF\uff0c\u8d39\u7528\u4e3a0\n- \u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\uff0c\u4ece\u8d85\u7ea7\u6e90\u70b9\u5230\u673a\u5668\u4eba\u7684\u51fa\u53d1\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u70b9\u4e0a\u51fa\u53d1\u7684\u673a\u5668\u4eba\u6570\uff0c\u8d39\u7528\u4e3a0\uff1b\u4ece\u673a\u5668\u4eba\u7684\u51fa\u53d1\u70b9\u5230\u8d85\u7ea7\u6c47\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u70b9\u4e0a\u5230\u8fbe\u7684\u673a\u5668\u4eba\u6570\uff0c\u8d39\u7528\u4e3a0\n\n\u7136\u540e\u8dd1\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff08\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u7684\u5957\u8def\u7b80\u8981\u8bf4\u4e0b\uff0c\u5c31\u662f\u8fde\u8fb9\u65f6\u8d39\u7528\u53d6\u76f8\u53cd\u6570\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u6700\u540e\u8f93\u51fa\u65f6\u7ed3\u679c\u4e5f\u8f93\u51fa\u76f8\u53cd\u6570\uff09\n\n\u53e6\u5916\u9898\u76ee\u91cc\u90a3\u53e5\u201ca\u884c\u548cb\u884c\u8f93\u5165\u65f6\u6a2a\u7eb5\u5750\u6807\u8981\u53cd\u8fc7\u6765\u201d\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u65e0\u89c6\u6389\u5c31\u884c\u4e86\n\n\u4ee3\u7801\uff08spfa\u8d39\u7528\u6d41\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\n#define INF 2147483647\nusing namespace std;\n\nll A,B,P,Q,s,t,maxcost;\nll ver[100010],edge[100010],Next[100010],head[100010],cost[100010],tot=1;\nll v[100010],d[100010],flow[100010],prenode[100010],preedge[100010];\n//flow[i]\u8868\u793a\u5230\u70b9i\u7684\u6700\u5927\u6d41\u91cf\n//prenode[i]\u8868\u793a\u5230\u70b9i\u7684\u6700\u5927\u6d41\u91cf\u4e2d\u524d\u4e00\u4e2a\u70b9\u662f\u4ec0\u4e48\n//preedge[i]\u8868\u793a\u5230\u70b9i\u7684\u6700\u5927\u6d41\u91cf\u4e2d\u524d\u4e00\u6761\u8fb9\u662f\u4ec0\u4e48\nqueue<ll> q;\n\ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n}\n\ninline void addEdge(ll x,ll y,ll z,ll w){\n\tver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot,cost[tot]=w;\n\tver[++tot]=x,edge[tot]=0,Next[tot]=head[y],head[y]=tot,cost[tot]=-w;\n}\n\ninline ll id(ll x,ll y){//\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u4e00\u4e2a\u4e00\u7ef4\u7684\u7f16\u53f7\n\treturn x*20+y+3;\n}\n\ninline bool spfa(){\n    memset(v,0,sizeof(v));\n    memset(d,0x3f,sizeof(d));\n    memset(flow,0x3f,sizeof(flow));\n    //\u521d\u59cb\u5316\n    q.push(s); v[s]=1; d[s]=0;\n    while(!q.empty()){\n        ll x=q.front(); q.pop();\n        v[x]=0;\n        for(ll i=head[x]; i; i=Next[i]){\n            ll y=ver[i],z=edge[i];\n            if(z&&d[y]>d[x]+cost[i]){\n                d[y]=d[x]+cost[i];\n                flow[y]=min(flow[x],edge[i]);\n                prenode[y]=x; preedge[y]=i;\n                if(v[y]==0){\n                    v[y]=1;\n                    q.push(y);\n                }\n            }\n        }\n    }\n    return d[t]<INF;\n}\n\nint main(){\n\tA=read(); B=read();\n\tP=read(); Q=read();\n\ts=1,t=2;\n   //\u5728\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u8fde\u4e24\u6761\u8fb9\n\tfor(ll i=0; i<=P; i++){\n\t\tfor(ll j=0; j<Q; j++){\n\t\t\taddEdge(id(i,j),id(i,j+1),1,-read());\n\t\t\taddEdge(id(i,j),id(i,j+1),INF,0);\n\t\t}\n\t}\n\tfor(ll j=0; j<=Q; j++){\n\t\tfor(ll i=0; i<P; i++){\n\t\t\taddEdge(id(i,j),id(i+1,j),1,-read());\n\t\t\taddEdge(id(i,j),id(i+1,j),INF,0);\n\t\t}\n\t}\n    \n   //\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\u5e76\u8fde\u8fb9\n\twhile(A--){\n\t\tll x=read(),y=read(),z=read();\n\t\taddEdge(s,id(y,z),x,0);\n\t}\n\twhile(B--){\n\t\tll x=read(),y=read(),z=read();\n\t\taddEdge(id(y,z),t,x,0);\n\t}\n    \n   //\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\n\twhile(spfa()){\n\t\tmaxcost-=d[t]*flow[t];\n\t\tfor(ll i=t; i!=s; i=prenode[i]){\n\t\t\tedge[preedge[i]]-=flow[t];\n\t\t\tedge[preedge[i]^1]+=flow[t];\n\t\t}\n\t}\n\tcout<<maxcost<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1562935765,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    },
    {
        "content": "#### \u89e3\u6790\n\n\u9898\u76ee\u7565\u5fae\u5197\u6742\uff0c\u591a\u8bfb\u4e00\u4f1a\u3002\n\n\u5f97\u5230\u5982\u4e0b\u51e0\u70b9\u4e8b\u9879\uff1a\n\n- \u6211\u4eec\u628a\u6570\u4e2a\u673a\u5668\u4eba\u653e\u5230\u5404\u4e2a\u8d77\u70b9\uff0c\u8ba9\u4ed6\u4eec\u6309\u7167\u67d0\u79cd\u8def\u7ebf\u8fd0\u52a8\uff0c\u673a\u5668\u4eba\u53ea\u80fd\u5411\u4e0a\u6216\u5411\u53f3\u8d70\uff0c\u4e14\u540c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u6709\u591a\u4e2a\u673a\u5668\u4eba\u540c\u65f6\u7ecf\u8fc7\u3002\n- \u6bcf\u6761\u8fb9\u4e0a\u6709\u751f\u7269\u6807\u672c\uff0c\u751f\u7269\u6807\u672c\u53ea\u80fd\u88ab\u91c7\u96c6\u4e00\u6b21\uff0c\u91c7\u96c6\u751f\u7269\u6807\u672c\u4f1a\u83b7\u5f97\u5176\u5bf9\u5e94\u4ef7\u503c\u3002\n- \u673a\u5668\u4eba\u53ea\u80fd\u5728\u51e0\u4e2a\u89c4\u5b9a\u7684\u7ec8\u70b9\u56de\u6536\uff0c\u4e14\u6bcf\u4e2a\u7ec8\u70b9\u56de\u6536\u673a\u5668\u4eba\u6570\u91cf\u6709\u4e0a\u9650\u3002\n- \u6211\u4eec\u8981\u5236\u5b9a\u4e00\u79cd\u673a\u5668\u4eba\u653e\u7f6e\u53ca\u8def\u7ebf\u89c4\u5212\u65b9\u6848\u4f7f\u5176\u83b7\u5f97\u6700\u5927\u4ef7\u503c\u3002\u6c42\u8fd9\u4e2a\u6700\u5927\u4ef7\u503c\u3002\n- ~~\u8f93\u5165\u4ee4\u4eba\u70e6\u8e81\u3002~~\n\n\u7406\u6e05\u9898\u610f\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u591a\u6e90\u6c47\u7684\u7f51\u683c\u56fe\u6a21\u578b\u3002\n\n\u9996\u5148\u5957\u591a\u6e90\u6c47\u7684\u5957\u8def\uff0c\u6211\u4eec\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\uff0c\u5411\u6240\u6709\u7684\u8d77\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a $k$ \u7684\u8fb9\uff0c$k$ \u4e3a\u8fd9\u4e2a\u8d77\u70b9\u7684\u673a\u5668\u4eba\u6570\u91cf\u3002\u6240\u6709\u7684\u7ec8\u70b9\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u4e00\u6761 \u5bb9\u91cf\u4e3a $r$ \u7684\u8fb9\uff0c$r$ \u4e3a\u8fd9\u4e2a\u7ec8\u70b9\u7684\u56de\u6536\u6570\u91cf\u4e0a\u9650\u3002\u8fd9\u4e9b\u8fb9\u8d39\u7528\u90fd\u4e3a $0$ \u3002\n\n\u7136\u540e\u662f\u5957\u7f51\u683c\u56fe\u7684\u5957\u8def\uff0c\u6211\u4eec\u6839\u636e\u5176\u5411\u53f3\u548c\u5411\u4e0a\u7684\u884c\u8d70\u65b9\u5411\uff0c\u53ef\u77e5\u9053\u70b9 $(i,j)$ \u5411 $(i+1,j)$ \u548c $(i,j+1)$ \u8fde\u8fb9\u3002\u7531\u4e8e\u53ea\u6709\u4e00\u6b21\u80fd\u91c7\u96c6\u5230\u6807\u672c\uff0c\u6211\u4eec\u5c06\u8fb9\u5206\u4e3a\u4e24\u6761\uff0c\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c \u8d39\u7528\u5c31\u662f\u6807\u672c\u4ef7\u503c\u3002\u53e6\u5916\u4e00\u6761\u5bb9\u91cf $+\\infty$ \uff0c\u8d39\u7528 $0$\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u539f\u95ee\u9898\u7684\u4efb\u610f\u4e00\u4e2a\u884c\u8d70\u65b9\u6848\u53ef\u4ee5\u5bf9\u5e94\u5230\u8fd9\u4e2a\u7f51\u7edc\u7684\u4e00\u4e2a\u6700\u5927\u6d41\uff0c\u4e14\u539f\u95ee\u9898\u65b9\u6848\u7684\u4ef7\u503c\u548c\u5bf9\u5e94\u6700\u5927\u6d41\u7684\u8d39\u7528\u4e5f\u80fd\u591f\u5bf9\u5e94\u3002\n\n\u6545\u6211\u4eec\u6700\u5927\u5316\u8d39\u7528\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u4f7f\u7528\u7684\u662fEK\u7b97\u6cd5\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N=2e5+10,M=1e6+10,INF=1e8+10;\n\nint n,m,A,B,S,T;\nint head[N],ver[M],nxt[M],cc[M],ww[M],tot=0;\nvoid add(int x,int y,int c,int d)\n{\n\tver[tot]=y; cc[tot]=c; ww[tot]=d; nxt[tot]=head[x]; head[x]=tot++;\n\tver[tot]=x; cc[tot]=0; ww[tot]=-d; nxt[tot]=head[y]; head[y]=tot++;\n}\nint q[N],d[N],incf[N],pre[N];\nbool vis[N];\n\nint get(int x,int y)//\u5750\u6807->\u70b9\u7f16\u53f7\n{\n\treturn x*16+y+1;\n}\n\nbool spfa()\n{\n\tint hh=0,tt=1;\n\tmemset(d,-0x3f,sizeof d);\n\tmemset(incf,0,sizeof incf);\n\tq[0]=S; d[S]=0; incf[S]=INF;\n\twhile(hh!=tt)\n\t{\n\t\tint x=q[hh++];\n\t\tif(hh==N) hh=0;\n\t\tvis[x]=0;\n\n\t\tfor(int i=head[x];~i;i=nxt[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(cc[i] && d[y]<d[x]+ww[i])\n\t\t\t{\n\t\t\t\td[y]=d[x]+ww[i];\n\t\t\t\tpre[y]=i;\n\t\t\t\tincf[y]=min(cc[i],incf[x]);\n\t\t\t\tif(!vis[y])\n\t\t\t\t{\n\t\t\t\t\tq[tt++]=y;\n\t\t\t\t\tif(tt==N) tt=0;\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn incf[T]>0;\n}\n\nint EK()\n{\n\tint cost=0;\n\twhile(spfa())\n\t{\n\t\tint tmp=incf[T];\n\t\tcost+=d[T]*tmp;\n\t\tfor(int i=T; i!=S; i=ver[pre[i]^1])\n\t\t{\n\t\t\tcc[pre[i]]-=tmp;\n\t\t\tcc[pre[i]^1]+=tmp;\n\t\t}\n\t}\n\treturn cost;\n}\n\nint main()\n{\n\tscanf(\"%d%d%d%d\",&A,&B,&n,&m);\n\tmemset(head,-1,sizeof head);\n\tS=N-1,T=N-2;\n\tfor(int i=0;i<=n;i++)\n\t{\n\t\tfor(int j=0;j<m;j++)//(i,j)->(i,j+1)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tadd(get(i,j),get(i,j+1),1,x);\n\t\t\tadd(get(i,j),get(i,j+1),INF,0);\n\t\t}\n\t}\n\tfor(int i=0;i<=m;i++)\n\t{\n\t\tfor(int j=0;j<n;j++)//(j,i)->(j+1,i)\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tadd(get(j,i),get(j+1,i),1,x);\n\t\t\tadd(get(j,i),get(j+1,i),INF,0);\n\t\t}\n\t}\n\tfor(int i=1;i<=A;i++)\n\t{\n\t\tint k,x,y;\n\t\tscanf(\"%d%d%d\",&k,&x,&y);\n\t\tadd(S,get(x,y),k,0);\n\t}\n\tfor(int i=1;i<=B;i++)\n\t{\n\t\tint r,x,y;\n\t\tscanf(\"%d%d%d\",&r,&x,&y);\n\t\tadd(get(x,y),T,r,0);\n\t}\n\tprintf(\"%d\",EK());\n\treturn 0;\n}\n\n```",
        "postTime": 1614002494,
        "uid": 278259,
        "name": "RemiliaScarlet\u25ce",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    },
    {
        "content": "## \u5206\u6790   \n&emsp;&emsp;\u7ed9\u51fa\u4e86\u6bcf\u6761\u8fb9\u7684\u4ef7\u503c\uff0c\u8981\u4f7f\u591a\u6761\u8def\u7ebf\u7684\u4ef7\u503c\u548c\u6700\u5927\uff0c\u663e\u7136\u53ef\u4ee5\u5957\u7528\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u6a21\u578b\u3002    \n&emsp;&emsp;\u4e0d\u59a8\u5c06 $p,q$ \u90fd\u52a0\u4e00\uff0c\u5750\u6807\u539f\u70b9\u8bbe\u4e3a $(1,1)$\uff0c\u65b9\u4fbf\u8868\u793a\u5750\u6807\u4e3a $(x,y)$ \u7684\u70b9\u7684\u7f16\u53f7\u3002\u5b9a\u4e49\u5750\u6807\u4e3a $(x,y)$ \u7684\u70b9\u7684\u7f16\u53f7\u4e3a $ID(x,y)=p(x-1)+y$\u3002  \n&emsp;&emsp;\u8bbe\u6e90\u70b9 $s$\uff0c\u6c47\u70b9 $t$\u3002\u4ece $s$ \u5411\u6bcf\u4e2a\u673a\u5668\u4eba\u5f00\u59cb\u7684\u5730\u65b9\u8fde\u5bb9\u91cf\u4e3a\u673a\u5668\u4eba\u6570\u91cf\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\u4ece\u6bcf\u4e2a\u76ee\u7684\u5730\u5411 $t$\u8fde\u5bb9\u91cf\u4e3a $r$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\u8fd9\u5c31\u9650\u5b9a\u4e86\u6700\u5927\u6d41\u4e3a\u673a\u5668\u4eba\u7684\u603b\u6570\u3002  \n&emsp;&emsp;\u503c\u5f97\u601d\u8003\u7684\u662f\u76f8\u90bb\u70b9\u4e4b\u95f4\u7684\u8fde\u8fb9\u3002\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $(x,y)$\uff0c\u5176\u76f8\u90bb\u70b9\u4e3a $(x+1,y)$ \u548c $(x,y+1)$\u3002\u7531\u4e8e\u751f\u7269\u6807\u672c\u53ea\u80fd\u91c7\u96c6\u4e00\u6b21\uff0c\u53ef\u4ee5\u4ece $(x,y)$ \u5411\u5176\u76f8\u90bb\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a\u91c7\u96c6\u751f\u7269\u6807\u672c\u7684\u4ef7\u503c\uff1b\u4f46\u662f\u540c\u4e00\u4f4d\u7f6e\u53ef\u4ee5\u5bb9\u7eb3\u591a\u4e2a\u673a\u5668\u4eba\u505c\u7559\uff0c\u90a3\u4e48\u4e0d\u59a8\u518d\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a $+\\infty$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u3002\u6c42\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u65f6\uff0c\u4ea7\u751f\u4ef7\u503c\u7684\u8fb9\u4e00\u5b9a\u4f1a\u6ee1\u6d41\uff0c\u4e14\u6d41\u91cf\u53ea\u80fd\u4e3a $1$\uff0c\u53e6\u4e00\u6761\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\u7528\u6765\u627f\u8f7d\u4e0d\u91c7\u96c6\u6807\u672c\u7684\u673a\u5668\u4eba\u3002  \n&emsp;&emsp;\u6700\u540e\u6c42\u51fa\u7684\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5373\u4e3a\u7b54\u6848\u3002  \n\n## \u4ee3\u7801  \n```cpp\n/******************************************************************\nCopyright: 11D_Beyonder All Rights Reserved\nAuthor: 11D_Beyonder\nProblem ID: \u6d1b\u8c37 P4012\nDate: 8/5/2020\nDescription: Maximum-cost Flow\n*******************************************************************/\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int N=1003;\nstruct E\n{\n\tint to;\n\tint cap;\n\tint cost;\n\tint Next;\n};\nE edge[N<<6];\nint head[N],tot;\nint incf[N],pre[N];\nint dis[N];\nbool inqueue[N];\nint a,b;\nint p,q;\nint s,t;\nvoid init();\nint ID(int,int);\ninline void add_edge(int,int,int,int);\nbool SPFA();\nint MCMF();\nint main()\n{\n\tint i,j;\n\tcin>>a>>b;\n\tcin>>p>>q;\n\tp++;\n\tq++;\n\tinit();\n\t//\u5411\u4e1c\u8d70\u7684\u4ef7\u503c\n\tfor(j=1;j<=p;j++)//\u679a\u4e3e\u7eb5\u5750\u6807\n\t{\n\t\tfor(i=1;i<=q-1;i++)//\u679a\u4e3e\u6a2a\u5750\u6807\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tadd_edge(ID(i,j),ID(i+1,j),1,-x);\n\t\t\tadd_edge(ID(i,j),ID(i+1,j),inf,0);\n\t\t}\n\t}\n\t//\u5411\u5317\u8d70\u7684\u4ef7\u503c\n\tfor(i=1;i<=q;i++)//\u679a\u4e3e\u6a2a\u5750\u6807\n\t{\n\t\tfor(j=1;j<=p-1;j++)//\u679a\u4e3e\u7eb5\u5750\u6807\n\t\t{\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\tadd_edge(ID(i,j),ID(i,j+1),1,-x);\n\t\t\tadd_edge(ID(i,j),ID(i,j+1),inf,0);\n\t\t}\n\t}\n\t//\u5750\u6807\u8981\u53cd\u7740\u8bfb\n\twhile(a--)\n\t{\n\t\tint k,x,y;\n\t\tscanf(\"%d%d%d\",&k,&y,&x);\n\t\tx++;\n\t\ty++;\n\t\tadd_edge(s,ID(x,y),k,0);\n\t}\n\twhile(b--)\n\t{\n\t\tint r,x,y;\n\t\tscanf(\"%d%d%d\",&r,&y,&x);\n\t\tx++;\n\t\ty++;\n\t\tadd_edge(ID(x,y),t,r,0);\n\t}\n\tcout<<-MCMF()<<endl;\n\treturn 0;\n}\nvoid init()\n{\n\ttot=1;\n\tmemset(head,-1,sizeof(head));\n\ts=0;\n\tt=p*q+1;\n}\ninline void add_edge(int u,int v,int cap,int cost)\n{\n\ttot++;\n\tedge[tot].to=v;\n\tedge[tot].cap=cap;\n\tedge[tot].cost=cost;\n\tedge[tot].Next=head[u];\n\thead[u]=tot;\n\ttot++;\n\tedge[tot].to=u;\n\tedge[tot].cap=0;\n\tedge[tot].cost=-cost;\n\tedge[tot].Next=head[v];\n\thead[v]=tot;\n}\nbool SPFA()\n{\n\tqueue<int>q;\n\tmemset(dis,inf,sizeof(dis));\n\tmemset(inqueue,0,sizeof(inqueue));\n\tq.push(s);\n\tdis[s]=0;\n\tinqueue[s]=1;\n\tincf[s]=inf;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tinqueue[x]=0;\n\t\tfor(register int i=head[x];~i;i=edge[i].Next)\n\t\t{\n\t\t\tif(!edge[i].cap) continue;//\u5269\u4f59\u5bb9\u91cf\u4e3a0\uff0c\u4e0d\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u3002\n\t\t\tint y=edge[i].to;\n\t\t\tif(dis[y]>dis[x]+edge[i].cost)\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+edge[i].cost;//\u677e\u5f1b\u64cd\u4f5c\n\t\t\t\tincf[y]=min(incf[x],edge[i].cap);//\u6700\u5c0f\u5269\u4f59\u5bb9\u91cf\n\t\t\t\tpre[y]=i;//\u8bb0\u5f55\u524d\u9a71\n\t\t\t\tif(!inqueue[y])\n\t\t\t\t{\n\t\t\t\t\tinqueue[y]=1;\n\t\t\t\t\tq.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[t]==inf) return 0;//\u6c47\u70b9\u4e0d\u53ef\u8fbe\uff0c\u5df2\u7ecf\u6c42\u51fa\u6700\u5927\u6d41\n\telse return 1;\n}\nint MCMF()\n{\n\tint maxflow,mincost;\n\tmaxflow=mincost=0;\n\twhile(SPFA())\n\t{\n\t\tint x=t;\n\t\t//\u6cbf\u7740\u524d\u9a71\u5012\u7740\u8d70\u589e\u5e7f\u8def\n\t\twhile(x!=s)\n\t\t{\n\t\t\tint y=pre[x];\n\t\t\tedge[y].cap-=incf[t];\n\t\t\tedge[y^1].cap+=incf[t];\n\t\t\tx=edge[y^1].to;\n\t\t}\n\t\tmaxflow+=incf[t];\n\t\tmincost+=dis[t]*incf[t];\n\t}\n\treturn mincost;\n}\nint ID(int x,int y) {return (x-1)*p+y;}\n```\n## \u540e\u8bb0  \n&emsp;&emsp;\u4e25\u683c\u6309\u7167\u9898\u76ee\u56fe\u4e2d\u63cf\u8ff0\u7684\u5750\u6807\uff0c\u8bfb\u5165 $a$ \u884c\u548c $b$ \u884c\u786e\u5b9e\u8981\u53cd\u8fc7\u6765\u3002",
        "postTime": 1596655374,
        "uid": 253240,
        "name": "11D_Beyonder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4012 \u3010\u6df1\u6d77\u673a\u5668\u4eba\u95ee\u9898\u3011"
    }
]