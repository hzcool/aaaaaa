[
    {
        "content": "[\u5b89\u5229\u4e00\u6ce2\u6211\u7684$blog$](https://ctz45562.github.io/2019/03/04/%E9%A2%98%E8%A7%A3-%E6%B4%9B%E8%B0%B7-P3582-%E3%80%90-POI2015-KIN%E3%80%91/)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3582)\n\n\u8fd9\u7bc7\u9898\u89e3\u7684\u601d\u8def\u5176\u5b9e\u662f\u56e0\u673a\u623f\u67d0\u4f4d\u738b\u59d3\u795e\u4ed9\u6307\u70b9\u800c\u6765$QwQ$\n\n\u9996\u5148\u8981\u4f1a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u5b50\u6bb5\u548c\uff0c[\u4e0d\u4f1a\u7684\u53ef\u4ee5\u505a\u505a\u8fd9\u4e2a](https://www.luogu.org/problemnew/show/SP1716)\n\n\u628a\u9898\u76ee\u7b80\u5316\u4e00\u4e0b\uff1a\n\n> \u4efb\u53d6\u4e00\u6bb5\u95ed\u533a\u95f4\uff0c\u4f7f\u533a\u95f4\u8d21\u732e\u6700\u5927\n\n\u6709\u6ca1\u6709\u79cd\u6700\u5927\u5b50\u6bb5\u548c\u7684\u611f\u89c9\uff1f\u4f46\u662f\u8981\u6c42\u6570\u5b57\u91cd\u590d\u7684\u4e0d\u80fd\u7b97\u3002\u90a3\u4e48\u5982\u679c\u6709\u4e24\u4e2a\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4e00\u4e2a\u8d21\u732e\u7f6e\u4e3a\u4e3a\u6b63\uff0c\u53e6\u4e00\u4e2a\u7f6e\u4e3a\u8d1f\uff0c\u4e92\u76f8\u62b5\u6d88\u5c31\u80fd\u53bb\u91cd\u4e86\u3002\u4e8e\u662f\u626b\u4e00\u904d\u4f9d\u6b21\u52a0\u5165\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\uff0c\u6bcf\u6b21\u90fd\u53d6\u4e00\u4e0b\u5f53\u524d\u6700\u5927\u503c\u3002\n\n\u653e\u4e2a\u56fe\u6765\u770b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/53220.png )\n\n\u7ea2\u8272\u7684\u662f\u76f8\u540c\u7684\u5143\u7d20\u3002\n\n\u5728\u7b2c\u4e00\u4e2a\u7ea2\u70b9\u4f1a\u6709\u6b63\u7684\u8d21\u732e$a$\u3002\n\n\u7136\u540e\u52a0\u5230\u7b2c\u4e8c\u4e2a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/53221.png )\n\n\u628a\u7b2c\u4e00\u4e2a\u7f6e\u4e3a$-a$\uff0c\u8fd9\u65f6\u5982\u679c\u540c\u65f6\u9009$1$\u3001$2\u200b$\u70b9\u5c31\u4f1a\u6b63\u597d\u62b5\u6d88\u3002\u800c\u5982\u679c\u53ea\u9009\u4e2d\u7b2c\u4e00\u4e2a\u70b9\u867d\u7136\u8d21\u732e\u4e0d\u6b63\u786e\uff0c\u4f46\u662f\u56e0\u4e3a\u662f\u4e00\u8fb9\u626b\u4e00\u904d\u53d6\u6700\u5927\u503c\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u5728\u4e4b\u524d\u5df2\u7ecf\u88ab\u53d6\u5230\u4e86\u3002\n\n\u518d\u6765\u7b2c\u4e09\u4e2a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/53222.png )\n\n\u6ce8\u610f\u8981\u628a\u7b2c\u4e00\u4e2a**\u6e05\u96f6**\uff0c\u5426\u5219\u8fd9\u65f6\u5982\u679c\u4e09\u4e2a\u70b9\u90fd\u9009\u7684\u8bdd\u8d21\u732e\u5c31\u4e3a\u8d1f\u4e86\u3002\n\n\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u79cd\u989c\u8272\u4e0a\u4e00\u4e2a\u51fa\u73b0\u7684\u4f4d\u7f6e\u5c31\u80fd\u505a\u4e86$QwQ$\u3002\n\n\u7ec6\u8282\uff1a\u6ce8\u610f\u5224\u65ad\u8be5\u989c\u8272\u662f\u5426\u4e3a\u7b2c\u4e00\u6b21\u51fa\u73b0\u3002\u8fd8\u6709\u8981\u5f00$long\\ long$\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 1000005\n#define inf 0x3f3f3f3f\n#define pn putchar('\\n')\n#define px(x) putchar(x)\n#define ps putchar(' ')\n#define pd puts(\"======================\")\n#define pj puts(\"++++++++++++++++++++++\")\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\ntemplate<typename T>\ninline T read(){\n\tT x=0;\n\tint y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nint f[maxn],pre[maxn],last[maxn];\n//f\u662f\u7535\u5f71\uff0cpre[i]\u662f\u4e0a\u4e00\u4e2a\u548cf[i]\u76f8\u540c\u7684\u4f4d\u7f6e\uff0clast\u662f\u67d0\u79cd\u989c\u8272\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\nlong long a[maxn];\n//a\u8bb0\u5f55\u7535\u5f71\u8d21\u732e\nstruct Segment_Tree{\n\tlong long ll[maxn<<2],rr[maxn<<2],ma[maxn<<2],sum[maxn<<2];\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\n\tinline void update(int node){\n\t\tsum[node]=sum[ls(node)]+sum[rs(node)];\n\t\tll[node]=max(ll[ls(node)],sum[ls(node)]+ll[rs(node)]);\n\t\trr[node]=max(rr[rs(node)],sum[rs(node)]+rr[ls(node)]);\n\t\tma[node]=max(max(ma[ls(node)],ma[rs(node)]),rr[ls(node)]+ll[rs(node)]);\n\t}\n\tvoid add(int poi,int l,int r,int node,long long d){\n        //\u628a\u70b9poi\u7684\u503c\u6539\u4e3ad\n\t\tif(l==r){\n\t\t\tsum[node]=ll[node]=rr[node]=ma[node]=d;\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tif(poi<=mid)add(poi,l,mid,ls(node),d);\n\t\telse add(poi,mid+1,r,rs(node),d);\n\t\tupdate(node);\n\t}\n}st;\nint main(){\n\tint n=read(),m=read();\n\tfor(register int i=1;i<=n;++i)\n\t\tf[i]=read();\n\tfor(register int i=1;i<=m;++i)\n\t\ta[i]=read<long long>();\n\tlong long ans=0;\n\tfor(register int i=1;i<=n;++i){\n\t\tpre[i]=last[f[i]],last[f[i]]=i;\n\t\tif(pre[i])st.add(pre[i],1,n,1,-a[f[i]]);\n        //\u628a\u4e0a\u4e00\u4e2a\u8be5\u989c\u8272\u7684\u4f4d\u7f6e\u8d21\u732e\u7f6e\u4e3a\u8d1f\n\t\tif(pre[pre[i]])st.add(pre[pre[i]],1,n,1,0);\n        //\u628a\u4e0a\u4e0a\u4e2a\u8d21\u732e\u7f6e\u4e3a0\n\t\tst.add(i,1,n,1,a[f[i]]);\n        //\u52a0\u4e0a\u8be5\u70b9\u7684\u8d21\u732e\n\t\tans=max(ans,st.ma[1]);\n        //\u4e00\u8fb9\u8dd1\u4e00\u8fb9\u53d6\u6700\u5927\u503c\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\n",
        "postTime": 1551765811,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5 [link](https://www.luogu.com.cn/problem/P3582)\n\n## \u4e00\u53e5\u8bdd\u9898\u610f\n\n\u7ed9\u5b9a\u5e8f\u5217 $A$ \uff0c\u8ba1\u7b97 $A$ \u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u5176\u4e2d\u91cd\u590d\u7684\u6570\u53ea\u80fd\u8ba1\u7b97\u4e00\u904d\u3002\n\n## \u601d\u8def\n\n\u73b0\u5728\u770b\u6765\uff0c\u5c31\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u8ba1\u7b97\u533a\u95f4\u6700\u5927\u503c\u7684\u6a21\u7248\u5e94\u7528\u3002\u5f53\u7136\uff0c\u8981\u662f\u8fd8\u4e0d\u4f1a\u7684\u8bdd\uff0c[\u8fd9\u91cc\u9762](https://www.luogu.com.cn/problem/SP1716)\u8bb2\u7684\u8fd8\u662f\u633a\u6e05\u695a\u7684\u3002\u7b80\u5355\u6982\u62ec\u5c31\u662f\u7edf\u8ba1\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u5206\u522b\u7684\u5b50\u6bb5\u548c\u3002\n\n\u56de\u5230\u8fd9\u9053\u9898\u6765\u770b\uff0c\u4f1a\u53d1\u73b0\uff0c\u601d\u8def\u771f\u7684\u5f88\u50cf\u3002\n\n\u53ea\u9700\u8981\u8bb0\u5f55\u6bcf\u6b21\u7535\u5f71\u4e0a\u6b21\u64ad\u653e\u7684\u65f6\u95f4\u548c\u4e0b\u6b21\u64ad\u653e\u7684\u65f6\u95f4\uff0c\u518d\u5c06\u5b83\u4eec\u62b5\u6d88\u4e3a $0$\uff0c\u4e2a\u4eba\u611f\u89c9\u548c\u4e3b\u5e2d\u6811\uff08\u6216\u8005\u662f\u5e76\u67e5\u96c6\uff1f\uff09\u6709\u4e00\u4e1d\u4e1d\u76f8\u4f3c\u4e4b\u5904\uff08\uff1f\u3002\n\n\u90a3\u5982\u4f55\u62b5\u6d88\uff1f\u5982\u679c\u5c06\u540e\u4e00\u6b21\u5355\u70b9\u4fee\u6539\u6210 $0$ \u7684\u8bdd\u4f1a\u4f7f\u7ed3\u679c\u5f88\u5927\u53ef\u80fd\u4e0a\u4e0d\u6b63\u786e\u3002\u90a3\u4e48\u8be5\u600e\u4e48\u505a\u5462\uff1f\u5982\u679c\u5bf9\u8ba1\u7b97\u6700\u5927\u5b50\u6bb5\u548c\u638c\u63e1\u5f88\u597d\u7684\u8bdd\uff0c\u4e0d\u96be\u770b\u51fa\uff0c\u7edf\u8ba1\u5b8c\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u524d\u4e00\u6b21\u51fa\u73b0\u6539\u4e3a\u8d1f\u503c\uff0c\u518d\u524d\u4e00\u6b21\u6539\u4e3a $0$ \uff0c\u8fd9\u6837\u5bf9\u7edf\u8ba1\u7ed3\u679c\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u4f46\u540c\u65f6\u4e5f\u53ef\u4ee5\u4e0d\u628a\u91cd\u590d\u7684\u6709\u8da3\u503c\u7edf\u8ba1\u8fdb\u53bb\uff0c\u800c\u662f\u62b5\u6d88\u6389\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\uff1a\n~~~cpp\n#include<bits/stdc++.h>\n#define mid(l,r) (l+r)>>1\n#define int long long\n#define lc(a) a<<1\n#define rc(a) a<<1|1\n#define MAXN 1000005\n//#define max(a,b) a>b?a:b\n#define forr(i,a,b) for(int i=a;i<=b;++i)\n#define chkmax(a,b) a=a>b?a:b\n#define de puts(\"debug\");\nusing namespace std;\nint a[MAXN],f[MA\u202cXN];\nint pre[MAXN],last[MAXN];\nint n,m;\ntypedef struct Segment_Tree{\n\tint les,res;\n\tint ans,val;\n}Tree;\nTree tree[MAXN*4];\nvoid update(int i){\n\tTree l=tree[lc(i)],r=tree[rc(i)];\n\ttree[i].val=l.val+r.val;\n\ttree[i].les=max(l.les,l.val+r.les);\n\ttree[i].res=max(r.res,r.val+l.res);\n\ttree[i].ans=max(l.res+r.les,max(l.ans,r.ans));\n}\nvoid build(int i,int l,int r){\n\tif(l==r){\n\t\ttree[i].ans=tree[i].les=tree[i].res=tree[i].val=a[l];\n\t\treturn;\n\t}\n\tint mid=mid(l,r);\n\tbuild(lc(i),l,mid);\n\tbuild(rc(i),mid+1,r);\n\tupdate(i);\n}\nvoid Change(int p,int i,int l,int r,int val){\n\tif(l==r){\n\t\ttree[i].ans=tree[i].les=tree[i].res=tree[i].val=val;\n\t\treturn;\n\t}\n\tint mid=mid(l,r);\n\tif(p<=mid){\n\t\tChange(p,lc(i),l,mid,val);\n\t}\n\telse Change(p,rc(i),mid+1,r,val);\n\tupdate(i);\n}\nint ans;\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tforr(i,1,n){\n\t\tcin>>f[i];\n\t}\n\tforr(i,1,m){\n\t\tcin>>a[i];\n\t}\n\tforr(i,1,n){\n\t\tpre[i]=last[f[i]],last[f[i]]=i;\n\t\tif(pre[i]){\n\t\t\tChange(pre[i],1,1,n,-a[f[i]]);\n\t\t}\n\t\tif(pre[pre[i]]){\n\t\t\tChange(pre[pre[i]],1,1,n,0);\n\t\t}\n\t\tChange(i,1,1,n,a[f[i]]);\n\t\tans=max(ans,tree[1].ans);\n\t}\n\tprintf(\"%lld\",ans);\n}\n~~~",
        "postTime": 1617026134,
        "uid": 352464,
        "name": "JJA_",
        "ccfLevel": 0,
        "title": "P3582 [POI2015]KIN \u9898\u89e3"
    },
    {
        "content": "## ~~\u4e0d\u8bf4\u5e9f\u8bdd~~\u2026\u2026\n\n\u8fd9\u9053\u9898\u76ee\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5148\u8bb0\u5f55\u6bcf\u79cd\u7535\u5f71\u4e0a\u4e00\u6b21\u5f00\u64ad\u65f6\u95f4\u548c\u4e0b\u4e00\u6b21\u5f00\u64ad\u65f6\u95f4(\u5373\u4ee5\u4e0b\u4ee3\u7801\u4e2d\u7684$last$\u6570\u7ec4\u548c$nxt$\u6570\u7ec4)\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u79cd\u7535\u5f71\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5904\u7406\u4e2d\u5b83\u662f\u5426\u64ad\u653e\u8fc7\u5bf9\u540e\u9762\u533a\u95f4\u7684\u5f71\u54cd\u60c5\u51b5\uff0c\u7136\u540e\u518d\u5bf9$n$\u4e2a\u65f6\u95f4\u70b9\u5206\u522b\u8003\u8651\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u7136\u540e\u6839\u636e\u5de6\u7aef\u70b9\u7535\u5f71\u7684\u64ad\u653e\u60c5\u51b5\u5c31\u53ef\u4ee5\u786e\u5b9a\u5b83\u53ef\u4ee5\u5f71\u54cd\u5230\u7684\u6700\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u4e0d\u65ad\u66f4\u65b0\uff0c\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u6700\u5927\u503c\uff0c\u6700\u540e\u90a3\u4e2a\u6700\u5927\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#define ll long long\n#define maxn 1000007\n#define ls rt<<1\n#define rs rt<<1|1\nusing namespace std;\nint n,m,f[maxn],nxt[maxn],last[maxn],a[maxn];\nll ans;\ninline int qread() {            //\u5feb\u8bfb\uff0c\u4e0d\u89e3\u91ca\u2026\u2026\n  char c=getchar();int num=0,f=1;\n  for(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n  for(;isdigit(c);c=getchar()) num=num*10+c-'0';\n  return num*f;\n}\nstruct Tree {\n  ll maxx,lazy;\n}tree[maxn<<2];\ninline void pushdown(int rt) {    //\u4e0b\u653elazy\u6807\u8bb0\u3002\n  if(tree[rt].lazy) {\n    tree[ls].lazy+=tree[rt].lazy;\n    tree[rs].lazy+=tree[rt].lazy;\n    tree[rs].maxx+=tree[rt].lazy;\n    tree[ls].maxx+=tree[rt].lazy;\n    tree[rt].lazy=0;\n  }\n}\nvoid modify(int rt,int l,int r,int L,int R,int val) { //\u533a\u95f4\u4fee\u6539\uff0c\u7528\u4e8e\u540e\u9762\u7684\u66f4\u65b0\u3002\n  if(L>r||R<l) return;\n  if(L<=l&&r<=R) {\n    tree[rt].lazy+=val;\n    tree[rt].maxx+=val;\n    return;\n  }\n  pushdown(rt);\n  int mid=(l+r)>>1;\n  modify(ls,l,mid,L,R,val),modify(rs,mid+1,r,L,R,val);\n  tree[rt].maxx=max(tree[ls].maxx,tree[rs].maxx);\n}\nint main() {\n  n=qread(),m=qread();\n  for(int i=1;i<=n;++i) f[i]=qread();\n  for(int i=1;i<=m;++i) a[i]=qread();\n  for(int i=n;i>=1;--i) nxt[i]=last[f[i]],last[f[i]]=i; //\u5904\u7406\u51fanxt\u548clast\u6570\u7ec4\u3002\n  for(int i=1;i<=m;++i) {\n    if(last[i]) {                   //\u5982\u679c\u8fd9\u4e2a\u7535\u5f71\u5df2\u7ecf\u64ad\u653e\u8fc7\u3002\n      int zrj=nxt[last[i]];\n      if(zrj) modify(1,1,n,last[i],zrj-1,a[i]);  \n      //\u5982\u679c\u8fd9\u4e0d\u662f\u6700\u540e\u4e00\u6b21\u64ad\u653e\u8fd9\u4e2a\u7535\u5f71\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f71\u54cd\u5230\u7684\u6700\u53f3\u7aef\u70b9\u662fnxt[last[i]]-1\uff0c\u7136\u540elast[i]\u5c31\u662f\u5de6\u7aef\u70b9\uff0c\u4e5f\u662f\u7b2c\u4e00\u6b21\u770b\uff0c\u6240\u4ee5\u5728\u8fd9\u4e2a\u533a\u95f4\u52a0\u4e0a\u8fd9\u4e2a\u7535\u5f71\u7684\u4ef7\u503c\u3002\n      else modify(1,1,n,last[i],n,a[i]);  //\u5982\u679c\u662f\u6700\u540e\u4e00\u6b21\uff0c\u90a3\u4e48\u5b83\u5c06\u4e00\u76f4\u5f71\u54cd\u5230\u6700\u540e\u3002\n    }\n  }\n  for(int i=1;i<=n;++i) {\n    ans=max(ans,tree[1].maxx);         //\u6bcf\u6b21\u66f4\u65b0\u4e00\u4e0b\u6700\u5927\u503c\u3002\n    int zrj=nxt[i];\n    if(zrj) {\t\t\t\t\t//\u5982\u679c\u7b2c\u4e8c\u6b21\u64ad\u653e\u3002\n      modify(1,1,n,i,zrj-1,-a[f[i]]);  //\u5728\u8fd9\u6b21\u548c\u4e4b\u540e\u7684\u4e00\u6b21\u7684\u533a\u95f4\u4e0a\u4ef7\u503c\u51cf\u53bb\u8fd9\u4e2a\u7535\u5f71\u7684\u4ef7\u503c\uff0c\u56e0\u4e3a\u76f8\u540c\u7535\u5f71\u770b\u4e86\u4ef7\u503c\u4e3a0\u3002\n      if(nxt[zrj]) modify(1,1,n,zrj,nxt[zrj]-1,a[f[i]]); //\u7b2c\u4e8c\u6b21\u548c\u7b2c\u4e09\u6b21\u4e4b\u95f4\u52a0\u4e0a\u8fd9\u4e2a\u7535\u5f71\u7684\u4ef7\u503c(\u56e0\u4e3a\u662f\u4ee5\u7b2c\u4e8c\u6b21\u4e3a\u5de6\u7aef\u70b9\uff0c\u53ea\u770b\u4e86\u4e00\u6b21)\u3002\n      else modify(1,1,n,zrj,n,a[f[i]]); //\u4e0d\u7136\u5c31\u628a\u7b2c\u4e8c\u6b21\u4e4b\u540e\u7684\u52a0\u4e0a\u8fd9\u4e2a\u4ef7\u503c\u3002\n    }\n    else modify(1,1,n,i,n,-a[f[i]]);  //\u6ca1\u6709\u7b2c\u4e8c\u6b21\u64ad\u653e\uff0c\u5c31\u4ece\u5f53\u524d\u65f6\u95f4\u5f00\u59cb\u4e00\u76f4\u5230\u6700\u540e\uff0c\u51cf\u53bb\u8fd9\u4e2a\u4ef7\u503c\u3002\n  }\n  printf(\"%lld\\n\",ans);\n  return 0;\n}\n```",
        "postTime": 1545635678,
        "uid": 68622,
        "name": "King\u4e28\u5e1d\u5fa1\u5a01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "## \u7ebf\u6bb5\u6811\u3002\n### \u8fd9\u9053\u9898\u4e4d\u4e00\u770b\u662f\u9053dp\uff0c\u4f46\u662f\u53d1\u73b01e6\u7684\u8303\u56f4\u3002\u3002\u3002~~(N^2\u8fc7\u767e\u4e07)~~\u5e76\u4e14\u6709\u540e\u6548\u6027qaqqqqqq......\n\u6211\u7684\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a\u8003\u8651\u66b4\u529b\uff0c\u6211\u4eec\u6bcf\u6b21\u679a\u4e3e\u5de6\u7aef\u70b9\uff0cO\uff08n\uff09\u6c42\u548c\uff0c\u590d\u6742\u5ea6N^2\u3002\u5982\u4f55\u4f18\u5316\u5462\uff1f\u8003\u8651\u524d\u7f00\u548c\uff0c\u5f53\u6211\u4eec\u626b\u8fc7\u67d0\u4e2a\u70b9\u540e\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\uff1f\u8bbeNXT[ i ]\u8868\u793ai\u70b9\u4e4b\u540e\u7b2c\u4e00\u4e2a\u4e0e i \u76f8\u540c\u7684\u6570\u5b57\u7684\u7f16\u53f7\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728[1,nxt[i]-1]\u4e2d\u51cf\u53bbi \u7684\u8d21\u732e\uff0c\u5728[ nxt[i],nxt[nxt[i]] ]\u8303\u56f4\u5185\u52a0\u4e0a\u8d21\u732e\u5c31\u597d\u4e86\u3002\u6ce8\u610f\u7279\u5224\u8fb9\u754c\uff08\u4e00\u5f00\u59cb60\u5206qwq\uff09\n\n### code\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\n#include<cstring>\n#define int long long \n#define half (l+r)>>1\nconst int maxn=5000006;\nusing namespace std;\nint n,m;\nstruct hzw \n{\n    int tag,sum,lc,rc,mx;\n}t[maxn];\nint id[maxn],cost[maxn],nxt[maxn];\nint pan[maxn];\nbool flag[maxn];\nint val[maxn];\ninline void pushup(int s)\n{\n    t[s].sum=t[t[s].lc].sum+t[t[s].rc].sum;\n    t[s].mx=max(t[t[s].lc].mx,t[t[s].rc].mx);\n}\nint tot;\ninline void build(int s,int l,int r)\n{\n    if (l==r)\n    {\n        t[s].sum+=val[l];\n        t[s].mx=val[l];\n        return;\n    }\n    int mid=half;\n    t[s].lc=++tot;\n    build(tot,l,mid);\n    t[s].rc=++tot;\n    build(tot,mid+1,r);\n    pushup(s);\n}\ninline void pushdown(int s,int l,int r)\n{\n    int mid=half,le=t[s].lc,ri=t[s].rc;\n    t[le].tag+=t[s].tag,t[ri].tag+=t[s].tag;\n    t[le].sum+=(mid-l+1)*t[s].tag,t[ri].sum+=(r-mid)*t[s].tag;\n    t[le].mx+=t[s].tag,t[ri].mx+=t[s].tag;\n    t[s].tag=0;\n}\ninline void update(int s,int k,int cl,int cr,int l,int r)\n{\n    if (l==cl&&r==cr)\n    {\n        t[s].sum+=(r-l+1)*k;\n        t[s].tag+=k;\n        t[s].mx+=k;\n        return;\n    }\n    int mid=half;\n    if (t[s].tag) pushdown(s,l,r);\n    if (cr<=mid) update(t[s].lc,k,cl,cr,l,mid);\n    else if (cl>mid) update(t[s].rc,k,cl,cr,mid+1,r);\n    else \n    {\n        update(t[s].lc,k,cl,mid,l,mid);\n        update(t[s].rc,k,mid+1,cr,mid+1,r);\n    }\n    pushup(s);\n}\ninline int query(int s,int cl,int cr,int l,int r)\n{\n    if (l==cl&&r==cr)\n    {\n        return t[s].mx;\n    }\n    int mid=half;\n    if (t[s].tag) pushdown(s,l,r);\n    if (cr<=mid) return query(t[s].lc,cl,cr,l,mid);\n    else if (cl>mid) return query(t[s].rc,cl,cr,mid+1,r);\n    else\n    {\n        return max(query(t[s].lc,cl,mid,l,mid),query(t[s].rc,mid+1,cr,mid+1,r));\n    }\n}\nsigned main()\n{\n    cin>>n>>m;\n    tot=1;\n    for (int i=1;i<=n;++i) scanf(\"%lld\",&id[i]);\n    for (int i=1;i<=m;++i) scanf(\"%lld\",&cost[i]);\n    for (int i=1;i<=n;++i)\n    {\n        if (pan[id[i]])\n        {\n            nxt[pan[id[i]]]=i;\n            pan[id[i]]=i;\n            if (!flag[id[i]])\n            {\n                flag[id[i]]=1;\n                val[i]=val[i-1]-cost[id[i]];\n            } \n            else val[i]=val[i-1];\n            continue;\n        }\n        int tmp=val[i-1]+cost[id[i]];\n        val[i]=tmp;\n        pan[id[i]]=i;\n    }\n    int ans=-23333;\n    build(1,1,n);\n    for (int i=1;i<=n;++i)\n    {\n        ans=max(ans,query(1,i,n,1,n));\n        if (nxt[i]) \n        {\n            int tmp;\n            if (!nxt[nxt[i]])  tmp=n+1;//\u7279\u5224\n            else tmp=nxt[nxt[i]];\n            tmp--;\n            update(1,-cost[id[i]],1,nxt[i]-1,1,n);\n            update(1,cost[id[i]],nxt[i],tmp,1,n);\n        }\n        else update(1,-cost[id[i]],1,n,1,n);//\u7279\u5224\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1537082299,
        "uid": 54926,
        "name": "Apricot",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3582)\n\n\u8fd9\u4e00\u9053\u9898\u7528\u7684\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n## \u6700\u5927\u5b50\u6bb5\u548c\n\n\u5373\u5982\u679c\u8fd9\u4e00\u9898\u91cd\u770b\u7535\u5f71\u53ef\u4ee5\u83b7\u5f97\u597d\u770b\u503c\u7684\u60c5\u51b5\u4e0b\u6c42\u7684\u7ed3\u679c\n\n\u6700\u5927\u5b50\u6bb5\u548c\u600e\u4e48\u7ef4\u62a4\u5462\uff1f\n\n\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u5b58\u56db\u4e2a\u503c\n\n```cpp\nstruct cxk{//\u4e0d\u8981\u4ecb\u610f\u8fd9\u4e2acxk\uff0c\u4e2a\u4eba\u4e60\u60ef\n\tint l,r,ans,sum;\n}tree[N*4];\n```\n\n$sum$\u4ee3\u8868\u8fd9\u4e00\u6bb5\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u548c\uff0c\u6b63\u5e38\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n\n$l$\u4ee3\u8868\u8fd9\u4e00\u6bb5\u533a\u95f4\u5185\u4ece\u5de6\u7aef\u5f80\u53f3\u7684\u6700\u5927\u5b50\u6bb5\uff0c\u5373\uff1a\n\n$\\large{MAX}\\sum\\limits_{i=1}^nw_{f_i}$\n\n\u5982\u4f55\u7ef4\u62a4$l$\u5462\n\n\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u7b2c\u4e00\u79cd\uff0c\u8fd9\u6bb5\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u5728\u4e2d\u70b9\u5de6\u8fb9\n\n$l_o=l_{o*2}$\n\n\u7b2c\u4e8c\u79cd\uff0c\u8fd9\u6bb5\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u5728\u4e2d\u70b9\u53f3\u8fb9\uff0c\u90a3\u4e48\u9700\u8981\u5de6\u5b50\u6811\u7684\u5168\u90e8\u5373\u53f3\u5b50\u6811\u9760\u5de6\u7aef\u70b9\u7684\u90e8\u5206\n\n$l_o=sum_{o*2}+l_{o*2+1}$\n\n\u4e24\u8005\u53d6\u6700\u5927\u503c\u5373\u53ef\n\n$r$\u4ee3\u8868\u4e00\u6bb5\u533a\u95f4\u5185\u4ece\u53f3\u5f80\u5de6\u7684\u6700\u5927\u5b50\u6bb5\uff0c\u6c42\u7684\u65b9\u6cd5\u7c7b\u6bd4$l$\n\n$r_o=MAX(sum_{o*2+1}+r_{o*2},r_{o*2+1})$\n\n$ans$\u5c31\u4ee3\u8868\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u5373\u7b54\u6848\n\n\u8fd9\u91cc\u9664\u4e86\u8003\u8651\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\uff0c\u8fd8\u8981\u8003\u8651\u4e2d\u95f4\u90e8\u5206\uff0c\u5206\u4e09\u79cd\u60c5\u51b5\uff1a\n\n\u7b2c\u4e00\u79cd\uff0c\u662f\u8fd9\u4e2a\u533a\u95f4\u5b8c\u5168\u5728\u4e2d\u70b9\u5f80\u5de6\uff0c\u4e5f\u5c31\u662f\u5de6\u5b50\u6811\u7684$ans$\n\n\u7b2c\u4e8c\u79cd\uff0c\u5c31\u662f\u5b8c\u5168\u5f80\u53f3\uff0c\u53f3\u5b50\u6811\u7684$ans$\n\n\u7b2c\u4e09\u79cd\uff0c\u5c31\u662f\u521a\u597d\u5728\u4e2d\u95f4\uff0c\u5c31\u662f\u5de6\u5b50\u6811\u7684$r$\u548c\u53f3\u5b50\u6811\u7684$l$\u7684\u548c\n\n\u5f53\u7136\u8fd8\u8981\u548c\u8fd9\u68f5\u6811\u7684$l$\u548c$r$\u53d6$max$\n\n$ans_o=MAX(l_o,r_o,ans_{o*2},ans_{o*2+1},r_{o*2}+l_{o*2+1})$\n\n\u503c\u5f97\u6ce8\u610f\u4e00\u4e0b\uff0c\u8fd9\u4e00\u9898\u67e5\u8be2\u7684\u65f6\u5019\u6211\u8fd4\u56de\u7684\u503c\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u6700\u540e\u53ea\u9700\u8981\u8fd4\u56de\u7684\u503c\u4e2d\u7684$ans$\u5c31\u597d\u4e86\n\n```cpp\nvoid update(int o,int l,int r,int x,int v){\n\tif(l>x||r<x)return;\n\tif(l==r&&l==x){\n\t\ttree[o].l=tree[o].r=tree[o].ans=tree[o].sum=v;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid)update(o*2,l,mid,x,v);\n\telse update(o*2+1,mid+1,r,x,v);\n\ttree[o].sum=tree[o*2].sum+tree[o*2+1].sum;\n\ttree[o].l=max(tree[o*2].l,tree[o*2].sum+tree[o*2+1].l);\n\ttree[o].r=max(tree[o*2+1].r,tree[o*2+1].sum+tree[o*2].r);\n\ttree[o].ans=max(max(tree[o].l,tree[o].r),max(tree[o*2].r+tree[o*2+1].l,max(tree[o*2].ans,tree[o*2+1].ans)));\n}\ncxk query(int o,int l,int r,int x,int y){\n\tif(l>y||r<x)return {0,0,0,0};\n\tif(l>=x&&r<=y)return tree[o];\n\tint mid=(l+r)/2;\n\tcxk v1=query(o*2,l,mid,x,y);\n\tcxk v2=query(o*2+1,mid+1,r,x,y);\n\tcxk v;\n\tv.sum=v1.sum+v2.sum;\n\tv.l=max(v1.l,v1.sum+v2.l);\n\tv.r=max(v2.r,v2.sum+v1.r);\n\tv.ans=max(max(v.l,v.r),max(v1.r+v2.l,max(v1.ans,v2.ans)));\n\treturn v;\n}\n```\n\n\u597d\u4e86\uff0c\u56de\u5f52\u9898\u76ee\uff0c\u8fd9\u4e00\u9898\u9664\u4e86\u5728\u6c42\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u8fd8\u8981\u6c42\u540c\u6837\u7684\u7535\u5f71\u4e0d\u80fd\u91cd\u770b\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e00\u4e2a$1,i$\u7684\u6700\u5927\u5b50\u6bb5\u548c\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a$last$\u6570\u7ec4\u5b58\u8be5\u7535\u5f71\u4e0a\u4e00\u6b21\u770b\u548c\u4e0a\u4e24\u6b21\u770b\u7684\u65f6\u5019\n\n\u6bcf\u4e00\u6b21\u770b\u628a\u524d\u4e00\u6b21\u770b\u7684\u503c\u6539\u6210\u8d1f\u7684\uff0c\u628a\u518d\u524d\u4e00\u6b21\u7684\u6539\u6210$0$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u524d\u540e\u7f00\u7684\u503c\u4e2d\u91cd\u590d\u770b\u7684\u7535\u5f71\u4e0d\u7b97\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5c31\u597d\u4e86\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define max(x,y) (x>y?x:y)\nusing namespace std;\nconst int N=1000010;\nint n,m,f[N],w[N],last[2][N],ans;\nstruct cxk{\n\tint l,r,ans,sum;\n}tree[N*4];\nvoid update(int o,int l,int r,int x,int v){\n\tif(l>x||r<x)return;\n\tif(l==r&&l==x){\n\t\ttree[o].l=tree[o].r=tree[o].ans=tree[o].sum=v;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid)update(o*2,l,mid,x,v);\n\telse update(o*2+1,mid+1,r,x,v);\n\ttree[o].sum=tree[o*2].sum+tree[o*2+1].sum;\n\ttree[o].l=max(tree[o*2].l,tree[o*2].sum+tree[o*2+1].l);\n\ttree[o].r=max(tree[o*2+1].r,tree[o*2+1].sum+tree[o*2].r);\n\ttree[o].ans=max(max(tree[o].l,tree[o].r),max(tree[o*2].r+tree[o*2+1].l,max(tree[o*2].ans,tree[o*2+1].ans)));\n}\ncxk query(int o,int l,int r,int x,int y){\n\tif(l>y||r<x)return {0,0,0,0};\n\tif(l>=x&&r<=y)return tree[o];\n\tint mid=(l+r)/2;\n\tcxk v1=query(o*2,l,mid,x,y);\n\tcxk v2=query(o*2+1,mid+1,r,x,y);\n\tcxk v;\n\tv.sum=v1.sum+v2.sum;\n\tv.l=max(v1.l,v1.sum+v2.l);\n\tv.r=max(v2.r,v2.sum+v1.r);\n\tv.ans=max(max(v.l,v.r),max(v1.r+v2.l,max(v1.ans,v2.ans)));\n\treturn v;\n}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%lld\",&f[i]);\n\tfor(int i=1;i<=m;i++)scanf(\"%lld\",&w[i]);\n\tfor(int i=1;i<=n;i++){\n\t\tint x=f[i];\n\t\tif(!last[0][x]){//\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u51fa\u73b0\u8fc7\n\t\t\tlast[0][x]=i;//\u8fed\u4ee3\n\t\t\tupdate(1,1,n,i,w[x]);//\u6539\u503c\n\t\t}else if(!last[1][x]){//\u5982\u679c\u4e4b\u524d\u51fa\u73b0\u8fc7\u4e00\u6b21\n\t\t\tlast[1][x]=last[0][x];//\u8fed\u4ee3\n\t\t\tlast[0][x]=i;\n\t\t\tupdate(1,1,n,last[1][x],-w[x]);//\u6539\u503c\n\t\t\tupdate(1,1,n,i,w[x]);\n\t\t}else{//\u5982\u679c\u4e4b\u524d\u51fa\u73b0\u8fc7\u591a\u6b21\n\t\t\tupdate(1,1,n,last[1][x],0);//\u6539\u503c\n\t\t\tupdate(1,1,n,last[0][x],-w[x]);\n\t\t\tupdate(1,1,n,i,w[x]);\n\t\t\tlast[1][x]=last[0][x];//\u8fed\u4ee3\n\t\t\tlast[0][x]=i;\n\t\t}//\u6ce8\u610f\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u4e0b\u6539\u503c\u548c\u8fed\u4ee3\u7684\u987a\u5e8f\n\t\tans=max(ans,query(1,1,n,1,i).ans);\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\n**\u5b8c\u7ed3**",
        "postTime": 1607507152,
        "uid": 310802,
        "name": "_Diu_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "\u8fd9\u9898\u548c[P2605 [ZJOI2010]\u57fa\u7ad9\u9009\u5740](https://www.luogu.com.cn/problem/P2605)\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5904\uff0c\u8fc7\u4e86\u90a3\u9898\u518d\u505a\u8fd9\u9898\u5c31\u5f88\u8f7b\u677e\u4e86\n\n------------\n\u6b63\u7740\u505a\u4e0d\u597d\u505a\uff0c\u6211\u4eec\u8003\u8651\u6bcf\u4e00\u4e2a\u4eba\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n\u6211\u4eec\u5148\u679a\u4e3e\u6240\u9009\u533a\u95f4\u7684\u5de6\u7aef\u70b9$L$\uff0c\u663e\u7136\uff0c$L$\u5de6\u8fb9\u7684\u503c\u5bf9$L$\u90fd\u662f\u6ca1\u6709\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u8ba1\u7b97\u5176\u53f3\u8fb9\u7684\u503c\u5c31\u597d\u4e86\n\n\u5bf9\u4e8e\u5176\u53f3\u8fb9\u7684\u503c\uff0c\u5176\u5f71\u54cd\u7684\u533a\u95f4\u4e5f\u5f88\u597d\u6c42\uff0c\u4e0d\u59a8\u8bbe\uff1a\n\n$\\large Next_i:$\u7b2c$i$\u4e2a\u503c\u53f3\u8fb9\u6700\u8fd1\u7684\u76f8\u540c\u503c\u7684\u4f4d\u7f6e\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u7b2c$i$\u4e2a\u503c\uff0c\u4ed6\u6240\u5f71\u54cd\u7684\u533a\u95f4\u662f$i$\u5230$Next_i-1$\uff0c\u6240\u4ee5\u5f53\u53f3\u7aef\u70b9\u5728\u8fd9\u6bb5\u533a\u95f4\u65f6\uff0c\u7b2c$i$\u4e2a\u503c\u5bf9\u7b54\u6848\u662f\u6709\u8d21\u732e\u7684\uff0c\u5373\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5c06\u533a\u95f4\u52a0\u4e0a\u7b2c$i$\u4e2a\u503c\u5bf9\u4e8e\u7684$w_i$\n\n\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5982\u679c\u7b2c$i$\u4e2a\u503c\u8ba1\u7b97\u4e86\uff0c\u90a3\u4e48$Next_i$\u4e4b\u540e\u7684\u76f8\u540c\u503c\u5bf9\u4e8e\u5f53\u524d\u7684\u5de6\u7aef\u70b9\u90fd\u4e0d\u9700\u8981\u8ba1\u7b97\u4e86\uff0c\u56e0\u4e3a\u524d\u9762\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u503c$i$\u4e86\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u5f53\u524d\u7684\u5de6\u7aef\u70b9$L$\uff0c\u5176\u6700\u5927\u503c\u5c31\u662f\u5728\u7ebf\u6bb5\u6811\u4e2d\u533a\u95f4$L$\u5230$n$\u7684\u6700\u5927\u503c\n\n\u597d\u4e86\uff0c\u5de6\u7aef\u70b9\u662f$L$\u7684\u533a\u95f4\u6700\u5927\u503c\u5df2\u7ecf\u8ba1\u7b97\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5de6\u7aef\u70b9\u4e3a$L+1$\u7684\u533a\u95f4\n\n\u6700\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\u91cd\u65b0\u5efa\u6811\uff0c\u521a\u624d\u7684\u64cd\u4f5c\u91cd\u65b0\u6765\u4e00\u904d\uff0c\u4f46\u592a\u6162\u4e86\u80af\u5b9a\u8fc7\u4e0d\u4e86\n\n\u770b$\\large [L,R]\\rightarrow [L+1,R]$\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u6709\u548c\u7b2c$L$\u4e2a\u503c\u6709\u5173\u7684\u91cf\u53d8\u4e86\uff0c\u5176\u4ed6\u90fd\u6ca1\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5904\u7406\u7b2c$L$\u4e2a\u503c\u5c31\u597d\u4e86\n\n\u4f46\u662f\u7b2c$L$\u4e2a\u503c\u5f71\u54cd\u4e86\u54ea\u4e9b\u91cf\u5462\uff1f\n\n\u9996\u5148\uff0c\u56e0\u4e3a$L+1>L$\uff0c\u6240\u4ee5$w_L$\u80af\u5b9a\u662f\u53d6\u4e0d\u5230\u7684\uff0c\u6536\u56de\u4e4b\u524d\u7684\u533a\u95f4\u533a\u95f4\u52a0\uff0c\u5373$[L,Next_L-1]-w_i$\n\n\u4e4b\u524d$Next_L$\u53ca\u5176\u540e\u9762\u7684\u548c$L$\u76f8\u540c\u7684\u503c\u90fd\u6ca1\u6709\u8ba1\u7b97\uff0c\u4ee5\u4e3a\u524d\u9762\u6709\u4e86$L$\n\n\u4f46\u662f\u73b0\u5728$L$\u5df2\u7ecf\u6ca1\u6709\u4e86\uff0c\u6240\u4ee5\u8ba1\u7b97$Next_L$\u4e86\uff0c\u505a\u6cd5\u548c\u524d\u9762\u4e00\u6837\uff0c\u7ebf\u6bb5\u6811\u5b9e\u73b0\u533a\u95f4\u52a0\n\n\u8fd9\u6837\u679a\u4e3e\u5b8c$1$\u5230$n$\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662f$logn$\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5373\u4e3a$O(nlogn)$\uff0c\u8fc7$10^6$\u7ef0\u7ef0\u6709\u4f59\n\n## code\n```\n#include<bits/stdc++.h>\n#define maxn 1000005\n#define ll long long\nusing namespace std;\nint n,m,Nxt[maxn],a[maxn],b[maxn],lst[maxn],L,R,x;\nbool vis[maxn];\nll Ans;\nstruct lc{\n\tint L,R;\n\tll k,Mx;\n}tree[maxn<<2];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline void build(int k,int L,int R){\n\ttree[k].L=L,tree[k].R=R;\n\tif (L==R) return;\n\tint mid=L+R>>1;\n\tbuild(k<<1,L,mid);build(k<<1|1,mid+1,R);\n}\ninline void down(int k){\n\ttree[k<<1].Mx+=tree[k].k;\n\ttree[k<<1].k+=tree[k].k;\n\ttree[k<<1|1].Mx+=tree[k].k;\n\ttree[k<<1|1].k+=tree[k].k;\n\ttree[k].k=0;\n}\ninline void change(int k){\n\tif (tree[k].L>=L&&tree[k].R<=R){tree[k].k+=x,tree[k].Mx+=x;return;}\n\tif (tree[k].k) down(k);\n\tint mid=tree[k].L+tree[k].R>>1;\n\tif (L<=mid) change(k<<1);\n\tif (R>mid) change(k<<1|1);\n\ttree[k].Mx=max(tree[k<<1].Mx,tree[k<<1|1].Mx);\n}\ninline ll Get(int k){\n\tif (tree[k].L>=L&&tree[k].R<=R) return tree[k].Mx;\n\tif (tree[k].k) down(k);\n\tint mid=tree[k].L+tree[k].R>>1;ll Mx=0;\n\tif (L<=mid) Mx=Get(k<<1);\n\tif (R>mid) Mx=max(Mx,Get(k<<1|1));\n\ttree[k].Mx=max(tree[k<<1].Mx,tree[k<<1|1].Mx);\n\treturn Mx;\n}\nint main(){\n\tn=read(),m=read();build(1,1,n);\n\tfor (int i=1;i<=n;i++) a[i]=read(),Nxt[i]=n+1;Nxt[n+1]=n+2;\n\tfor (int i=1;i<=m;i++) b[i]=read();\n\tfor (int i=1;i<=n;i++) Nxt[lst[a[i]]]=i,lst[a[i]]=i;\n\tfor (int i=1;i<=n;i++) if (!vis[a[i]]) L=i,R=Nxt[i]-1,x=b[a[i]],change(1),vis[a[i]]=1;\n    for (int i=1;i<=n;i++){\n    \tL=i,R=n;Ans=max(Ans,Get(1));\n    \tL=i+1,R=Nxt[i]-1,x=-b[a[i]];change(1);\n    \tL=Nxt[i],R=Nxt[Nxt[i]]-1,x=b[a[Nxt[i]]];\n\t\tif (L<=n) change(1);\n\t}\n\tprintf(\"%lld\",Ans);\n\treturn 0;\n}\n```\n\n### \u6700\u540e\uff0c\u5982\u6709\u4e0d\u61c2\u7684\uff0c\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\uff01",
        "postTime": 1591858683,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "**\u7ebf\u6bb5\u6811**\n\n\u533a\u95f4\u67e5\u8be2\u6700\u5927\u503c\n```\nnow[a[i]]=nxt[a[i]],nxt[a[i]]=i;\n\n```\n\u5176\u4e2d\u7528\u5230\u4e86\u6eda\u52a8\u7684\u601d\u60f3\uff0c\u6bcf\u6b21\u5c06\u524d\u4e00\u4e2a\u503c\u5bc4\u5b58\u8d77\u6765\uff0c\u4e0b\u4e00\u6b21\u66f4\u65b0\u65f6\u5c06\u5b83\u7684val\u51cf\u53bb\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u907f\u514d\u5355\u90e8\u7535\u5f71\u91cd\u590d\u8fd0\u7b97\u3002\n\n\u7531\u4e8e\u533a\u95f4\u548c\u4ece0\u5f00\u59cb\uff0c\u56e0\u6b64\u4e0d\u9700\u8981```build(int l,int r,int rt){}```\u51fd\u6570\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#define de puts(\"#\")\n#define bug(x) cout<<#x<<\" : \"<<x<<endl\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\n#define cha1 printf(\"L : %lld,R : %lld,x : %lld,l : %lld,r : %lld,rt : %lld\\n\",L,R,x,l,r,rt)\n#define cha2 printf(\"L : %lld,R : %lld,l : %lld,r : %lld,rt : %lld\\n\",L,R,l,r,rt)\n#define re register\n#define int long long\nusing namespace std;\nconst int maxn=1e6+5;\nint a[maxn],b[maxn],now[maxn],nxt[maxn],sum[maxn<<2],lazy[maxn<<2],dp[maxn];\n\nvoid up(int rt) {\n\tsum[rt]=max(sum[rt<<1],sum[rt<<1|1]);\n}\n\nvoid down(int rt) {\n\tint &t=lazy[rt];\n\tif(!t)return;\n\tsum[rt<<1]+=t,sum[rt<<1|1]+=t;\n\tlazy[rt<<1]+=t,lazy[rt<<1|1]+=t;\n\tt=0;\n}\n\nvoid update(int L,int R,int x,int l,int r,int rt) {\n\tif(L>R)return;\n\tif(L<=l&&R>=r) {\n\t\tsum[rt]+=x;\n\t\tlazy[rt]+=x;\n\t\treturn;\n\t}\n\tdown(rt);\n\tint mid=(l+r)>>1;\n\tif(R<=mid)update(L,R,x,l,mid,rt<<1);\n\telse if(L>mid)update(L,R,x,mid+1,r,rt<<1|1);\n\telse {\n\t\tupdate(L,mid,x,l,mid,rt<<1);\n\t\tupdate(mid+1,R,x,mid+1,r,rt<<1|1);\n\t}\n\tup(rt);\n}\n\nint query(int L,int R,int l,int r,int rt) {\n\tif(L>R)return 0;\n\tif(L<=l&&R>=r)return sum[rt];\n\tdown(rt);\n\tint mid=(l+r)>>1;\n\tif(R<=mid)return query(L,R,l,mid,rt<<1);\n\tif(L>mid)return query(L,R,mid+1,r,rt<<1|1);\n\treturn max(query(L,mid,l,mid,rt<<1),query(mid+1,R,mid+1,r,rt<<1|1));\n}\n\nsigned main() {\n\tint n,m;\n\tscanf(\"%lld %lld\",&n,&m);\n\tfor(re int i=1; i<=n; i++)scanf(\"%lld\",&a[i]);\n\tfor(re int i=1; i<=m; i++)scanf(\"%lld\",&b[i]);\n\tfor(re int i=1; i<=n; i++) {\n//\t\tprintf(\"now[%lld]=%lld,nxt[%lld]=%lld\\n\",a[i],now[a[i]],a[i],nxt[a[i]]);\n\t\tif(nxt[a[i]])update(now[a[i]]+1,nxt[a[i]],-b[a[i]],1,n,1);\n\t\tupdate(nxt[a[i]]+1,i,b[a[i]],1,n,1);\n\t\tdp[i]=query(1,i,1,n,1);\n\t\tnow[a[i]]=nxt[a[i]],nxt[a[i]]=i;\n\t}\n\tint ans=0;\n\tfor(re int i=1; i<=n; i++)ans=max(ans,dp[i]);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1563083739,
        "uid": 200853,
        "name": "liunian",
        "ccfLevel": 0,
        "title": "Kin(P3582)"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problemnew/show/P3582)\n\n\u611f\u89c9\u8fd9\u79cd\u9898\u597d\u5957\u8def\u554a\uff0c\u600e\u4e48\u53c8\u662f\u8fd9\u4e2a\u505a\u6cd5\n\n\u764c\u4e0d\u8fc7\u600e\u4e48\u6ca1\u6709\u4eba\u548c\u6211\u4e00\u6837\u4e9b\u5199\u5957\u8def\u505a\u6cd5\uff0c\u90a3\u5e72\u8106\u6765\u5199\u4e2a\u9898\u89e3\u5427\n\n\u6211\u4eec\u8003\u8651\u679a\u4e3e\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u4ece$1$\u5230$i$\u7684\u6700\u5927\u533a\u95f4\u5c31\u597d\u4e86\n\n\u7531\u4e8e\u6211\u4eec\u9009\u62e9\u4e86\u8fd9\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c\u9996\u5148\u4ea7\u751f\u7684\u8d21\u732e\u662f\u8fd9\u4e2a\u7535\u5f71\u7684\u4ef7\u503c\uff0c\u4f46\u6211\u4eec\u4e0a\u4e00\u6b21\u770b\u5f97\u8fd9\u4e2a\u7535\u5f71\u5c31\u4e0d\u80fd\u4ea7\u751f\u8d21\u732e\u4e86\uff0c\u800c\u4e14\u4e0d\u4ec5\u4ec5\u662f\u4e0d\u80fd\u4ea7\u751f\u8d21\u732e\u4e86\uff0c\u8fd8\u5f97\u628a\u539f\u6765\u7684\u8d21\u732e\u51cf\u6389\uff0c\u4e8e\u662f\u628a\u539f\u6765\u7684\u4f4d\u7f6e\u53d6\u53cd\n\n\u76f8\u5e94\u7684\uff0c\u4e0a\u4e0a\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u6211\u4eec\u53d6\u53cd\u4e86\uff0c\u8fd9\u6b21\u5c31\u4e0d\u7528\u8003\u8651\u5b83\u4e86\uff0c\u4e8e\u662f\u628a\u90a3\u4e2a\u4f4d\u7f6e\u53d8\u6210$0$\u5c31\u597d\u4e86\n\n\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u6700\u5927\u5b50\u6bb5\u548c\u4e86\uff0c\u7ebf\u6bb5\u6811\u968f\u4fbf\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define LL long long\n#define re register\n#define maxn 1200005\ninline int read() {\n\tchar c=getchar();int x=0;while(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nint n,m;\nint l[maxn<<1],r[maxn<<1];\nLL d[maxn<<1],lc[maxn<<1],rc[maxn<<1],ans,sum[maxn<<1];\nint nx[maxn],cnt[maxn];\nint w[maxn],a[maxn],pos[maxn];\ninline void pushup(int i) {\n\tsum[i]=sum[i<<1|1]+sum[i<<1];\n\tlc[i]=max(lc[i<<1],sum[i<<1]+lc[i<<1|1]);\n\trc[i]=max(rc[i<<1|1],sum[i<<1|1]+rc[i<<1]);\n\td[i]=max(d[i<<1],d[i<<1|1]);d[i]=max(d[i],lc[i<<1|1]+rc[i<<1]);\n}\nvoid build(int x,int y,int i) {\n\tl[i]=x,r[i]=y;\n\tif(x==y) return;\n\tint mid=x+y>>1;\n\tbuild(x,mid,i<<1),build(mid+1,y,i<<1|1);\n}\nvoid change(int pos,int i,int val) {\n\tif(pos==l[i]&&l[i]==r[i]) {d[i]=sum[i]=lc[i]=rc[i]=val;return;}\n\tint mid=l[i]+r[i]>>1;\n\tif(pos<=mid) change(pos,i<<1,val);\n\t\telse change(pos,i<<1|1,val);\n\tpushup(i);\n}\nint main() {\n\tn=read(),m=read();\n\tfor(re int i=1;i<=n;i++) a[i]=read();\n\tfor(re int i=1;i<=m;i++) w[i]=read();\n\tbuild(1,n,1);\n\tfor(re int i=1;i<=n;i++) \n\t\tnx[i]=pos[a[i]],pos[a[i]]=i;\n\tfor(re int i=1;i<=n;i++) {\n\t\tif(!nx[i]) change(i,1,w[a[i]]);\n\t\t\telse if(!nx[nx[i]]) change(i,1,w[a[i]]),change(nx[i],1,-1*w[a[i]]);\n\t\t\t\telse change(i,1,w[a[i]]),change(nx[i],1,-1*w[a[i]]),change(nx[nx[i]],1,0);\n\t\tans=max(ans,d[1]);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1551614653,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "\u5148Orz\u697c\u4e0bdalao\uff0c\u4ee3\u7801\u592a\u9ad8\u6df1\uff0c\u89e3\u91ca\u592a\u7b80\u7565\uff0c\u849f\u84bb\u770b\u4e0d\u61c2\u3002\n\n## \u601d\u8def\n\n\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u6bcf\u6b21ans=max(ans,sum[1])\u5c31\u884c\uff08sum\u662f\u7ebf\u6bb5\u6811\u6570\u7ec4\uff09\n\n\u7b2c\u4e00\u904d\u8fc7\u4e86\uff0c\u7136\u540e\u52a0\u4e86\u4e9b\u5e38\u6570\u4f18\u5316\uff0c\u5c31\u5230rank1\u4e86\uff0c500ms\u8dd1\u5b8c\u3002\n\n\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u89e3\u91ca\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <set>\n#include <map>\n#include <vector>\n#include <stack>\n#include <list>\n#define rep(i,m,n) for(register int i=m;i<=n;i++)\n#define dop(i,m,n) for(register int i=m;i>=n;i--)\n#define lowbit(x) (x&(-x))\n#define ll long long\n#define INF 2147483647\n#define Open(s) freopen(s\".in\",\"r\",stdin);freopen(s\".out\",\"w\",stdout);\n#define Close fclose(stdin);fclose(stdout);\n#define re register\nusing namespace std;\ninline int read(){\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\nconst int maxn=1000010;\nint a[maxn],b[maxn],Next[maxn],last[maxn],n,m,add[maxn<<2];\nll sum[maxn<<2],ans;\ninline void PushDown(int now){\n    if(add[now]){\n      add[now<<1]+=add[now];\n      add[now<<1|1]+=add[now];\n      sum[now<<1]+=add[now];\n      sum[now<<1|1]+=add[now];\n      add[now]=0;\n    }\n}\ninline void Change(int now,int l,int r,int wl,int wr,int p){     //\u7ebf\u6bb5\u6811\uff08RMQ\uff09\n    if(l>wr||r<wl) return;\n    if(l>=wl&&r<=wr){sum[now]+=p;add[now]+=p;return;}\n    PushDown(now);\n    int mid=(l+r)>>1;\n    Change(now<<1,l,mid,wl,wr,p);\n    Change(now<<1|1,mid+1,r,wl,wr,p);\n    sum[now]=max(sum[now<<1],sum[now<<1|1]);\n}\nint main(){\n    n=read();m=read();\n    rep(i,1,n) a[i]=read();\n    rep(i,1,m) b[i]=read();\n    dop(i,n,1) Next[i]=last[a[i]],last[a[i]]=i;    //Next[i]\u8868\u793a\u4e0b\u4e00\u4e2a\u653e\u7b2ca[i]\u90e8\u7535\u5f71\u7684\u65f6\u95f4,last[a[i]]\u8868\u793a\u4e0a\u4e00\u4e2a\u653e\u7b2ca[i]\u90e8\u7535\u5f71\u7684\u65f6\u95f4\uff08\u5faa\u73af\u6267\u884c\u5b8clast[a[i]]\u8868\u793a\u7b2c\u4e00\u4e2a\u653e\u7b2ca[i]\u90e8\u7535\u5f71\u7684\u65f6\u95f4\uff09\n    rep(i,1,m)\n       if(last[i])          //\u5982\u679c\u8fd9\u90e8\u7535\u5f71\u64ad\u653e\u8fc7\n         if(!Next[last[i]]) Change(1,1,n,last[i],n,b[i]);   //\u5982\u679c\u6ca1\u6709\u7b2c\u4e8c\u6b21\u64ad\u653e\uff0c\u628a\u8fd9\u6b21\u64ad\u653e\u4ee5\u540e\u6bcf\u4e2a\u65f6\u95f4\u90fd\u52a0\u4e0a\u8fd9\u90e8\u7535\u5f71\u7684\u4ef7\u503c\uff0c\u56e0\u4e3a\u8fd9\u90e8\u7535\u5f71\u64ad\u653e\u540e\u4efb\u4f55\u5305\u62ec\u5b83\u7684\u533a\u95f4\u90fd\u80fd\u56e0\u5b83\u53d7\u76ca\n         else Change(1,1,n,last[i],Next[last[i]]-1,b[i]);  //\u5982\u679c\u6709\u7b2c\u4e8c\u6b21\u64ad\u653e\uff0c\u628a\u7b2c\u4e00\u6b21\u64ad\u653e\u548c\u7b2c\u4e8c\u6b21\u64ad\u653e\u4e4b\u95f4\u7684\u65f6\u95f4\u52a0\u4e0a\u8fd9\u90e8\u7535\u5f71\u7684\u4ef7\u503c\uff0c\u7406\u7531\u540c\u4e0a\n    rep(i,1,n){   //\u679a\u4e3e\u5de6\u7aef\u70b9\n       ans=max(ans,sum[1]);   //\u66f4\u65b0\u6700\u4f18\u89e3\n       int t=Next[i];\n       if(t){    //\u5982\u679c\u6709\u7b2c\u4e8c\u6b21\u64ad\u653ea[i]\u8fd9\u90e8\u7535\u5f71\uff0c\n         Change(1,1,n,i,t-1,-b[a[i]]);      //\u5148\u628a\u8fd9\u6b21\u548c\u7b2c\u4e8c\u6b21\u64ad\u653e\u4e4b\u95f4\u51cf\u6389\u8fd9\u90e8\u7535\u5f71\u4ef7\u503c\uff08\u540c\u4e00\u90e8\u7535\u5f71\u64ad\u653e2\u6b21\u4ef7\u503c\u4e3a0\uff09\n         if(Next[t]) Change(1,1,n,t,Next[t]-1,b[a[i]]);  //\u5982\u679c\u6709\u7b2c\u4e09\u6b21\u64ad\u653e\uff0c\u628a\u7b2c\u4e8c\u6b21\u548c\u7b2c\u4e09\u6b21\u4e4b\u95f4\u7684\u65f6\u95f4\u51cf\u6389\u8fd9\u90e8\u7535\u5f71\u4ef7\u503c\n         else Change(1,1,n,t,n,b[a[i]]);    //\u5426\u5219\u628a\u7b2c\u4e8c\u6b21\u64ad\u653e\u4e4b\u540e\u7684\u65f6\u95f4\u90fd\u52a0\u4e0a\u8fd9\u90e8\u7535\u5f71\u4ef7\u503c\n       }\n       else Change(1,1,n,i,n,-b[a[i]]);  //\u5982\u679c\u6ca1\u6709\u7b2c\u4e8c\u6b21\u64ad\u653e\u8fd9\u90e8\u7535\u5f71\uff0c\u628a\u8fd9\u90e8\u7535\u5f71\u4e4b\u540e\u7684\u65f6\u95f4\u90fd\u51cf\u6389\u8fd9\u90e8\u7535\u5f71\u4ef7\u503c\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1507174121,
        "uid": 54636,
        "name": "Riven_Yasuo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "## \u3010\u9898\u610f\u3011\n\n\u6709 $m$ \u90e8\u7535\u5f71\uff0c\u6bcf\u90e8\u7535\u5f71\u6709\u4ef7\u503c $w$\uff0c\u5c06\u8981\u653e\u6620 $n$ \u5929\uff0c\u6bcf\u5929\u653e\u4e00\u90e8\u7535\u5f71\uff0c\u770b\u540c\u4e00\u90e8\u7535\u5f71\u591a\u6b21\u4e0d\u4f1a\u83b7\u5f97\u8be5\u7535\u5f71\u7684\u4ef7\u503c\uff0c\u8981\u8fde\u7eed\u770b\u82e5\u5e72\u5929\u7535\u5f71\uff0c\u6c42\u6700\u5927\u6536\u76ca\u3002\n\n## \u3010\u5206\u6790\u3011\n\n\u5982\u679c\u6ca1\u6709\u201c\u770b\u7535\u5f71\u591a\u6b21\u5c31\u6ca1\u6709\u6536\u76ca\u201d\u8fd9\u4e00\u9650\u5236\uff0c\u8fd9\u5c31\u662f\u88f8\u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n\u8bbe\u7b2c $i$ \u90e8\u7535\u5f71\u7b2c $j$ \u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $a_{i,j}$\uff0c\u7b2c $k$ \u5929\u7535\u5f71\u7684\u6536\u76ca\u4e3a $v_k$\u3002\n\n\u5c06 $v_{a_{i,1}}$ \u8bbe\u4e3a $w_i$\uff0c$v_{a_{i,2}}$ \u8bbe\u4e3a $-w_i$\u3002\n\n\u9ed8\u8ba4 $L \\leqslant a_{i,1}$\u3002\n\n$R$ \u5728 $[a_{i,1},a_{i,2})$ \u8fd9\u6bb5\u4e2d\u53d6\u5c31\u4f1a\u7b97\u4e0a $w_i$\uff0c\u5728 $[a_{i,2},n]$ \u4e2d\u53d6\u8d21\u732e\u4f1a\u62b5\u6d88\uff0c\u7b26\u5408\u9898\u610f\u3002\n\n\u521d\u59cb\u65f6\u5bf9\u6bcf\u4e00\u79cd\u7535\u5f71\u90fd\u8fdb\u884c\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u6b64\u65f6\u7684\u6700\u5927\u5b50\u6bb5\u548c\u5c31\u662f $L=1$ \u65f6\u7684\u7b54\u6848\u3002\n\n\u8bbe\u5728\u7b2c $i$ \u5929\u4e4b\u540e\u653e\u7684\u7b2c\u4e00\u90e8\u76f8\u540c\u7535\u5f71\u7684\u4f4d\u7f6e\u662f $next_i$\n\n\u7136\u540e\u8ba9 $L$ \u53d6 $2$\uff0c\u4e0e\u524d\u4e00\u4e2a\u72b6\u6001\u7684\u552f\u4e00\u533a\u522b\u5c31\u662f\u9700\u8981\u6539\u53d8 $v_{next_1}$ \u4e0e $v_{next_{next_1}}$\u3002\n\n$v_{next_1}$ \u53d6 $w_{f_1}$\uff0c$v_{next_{next_1}}$ \u53d6 $-w_{f_1}$\uff0c\u518d\u6c42 $[2,n]$ \u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002\n\n\u91cd\u590d\u8fd9\u51e0\u4e2a\u64cd\u4f5c\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u64cd\u4f5c\u7528\u7ebf\u6bb5\u6811\u5b9e\u73b0\u3002\n\n## \u3010\u7b97\u6cd5\u3011\n\n\u7ebf\u6bb5\u6811\n\n## \u3010\u4ee3\u7801\u3011\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\nconst int maxn=1e6+5,maxt=maxn*4;\nint n,m;\nLL f[maxn],w[maxn];\nint lst[maxn],nxt[maxn];\nchar gc(){\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\n#define getchar gc\nint read(){\n    int ret=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n    return ret*f;\n}\nstruct segment_tree{\n\tstruct data{\n\t\tLL l,r,s,m;\n\t}t[maxt];\n\t#define ls (k<<1)\n\t#define rs (k<<1|1)\n\t#define mid (l+r>>1)\n\t#define s(k) t[k].s\n\t#define l(k) t[k].l\n\t#define r(k) t[k].r\n\t#define m(k) t[k].m\n\tdata merge(data L,data R){\n\t\tdata ret;\n\t\tret.s=L.s+R.s;\n\t\tret.l=max(L.l,L.s+R.l);\n\t\tret.r=max(R.r,R.s+L.r);\n\t\tret.m=max(ret.l,ret.r);\n\t\tret.m=max(ret.m,max(L.m,R.m));\n\t\treturn ret;\n\t}\n\tvoid update(int k,int l,int r,int x,int v){\n\t\tif(l==r){s(k)=l(k)=r(k)=m(k)=v;return;}\n\t\tif(x<=mid) update(ls,l,mid,x,v);\n\t\telse update(rs,mid+1,r,x,v);\n\t\tt[k]=merge(t[ls],t[rs]);\n\t}\n\tdata query(int k,int l,int r,int x,int y){\n\t\tif(x<=l&&r<=y) return t[k];\n\t\tif(x<=mid&&mid<y) return merge(query(ls,l,mid,x,y),query(rs,mid+1,r,x,y));\n\t\tif(x<=mid) return query(ls,l,mid,x,y);\n\t\tif(mid<y) return query(rs,mid+1,r,x,y);\n\t}\n}T;\nLL ans;\nint main(){\n\tfreopen(\"P3582.in\",\"r\",stdin);\n\tfreopen(\"P3582.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) f[i]=read();\n\tfor(int i=1;i<=m;i++) w[i]=read();\n\tfor(int i=1;i<=n;i++){\n\t\tif(lst[f[i]]) nxt[lst[f[i]]]=i;\n\t\telse T.update(1,1,n,i,w[f[i]]);\n\t\tlst[f[i]]=i;\n\t}\n\tmemset(lst,0,sizeof lst);\n\tfor(int i=1;i<=n;i++){\n\t\tif(!lst[f[i]]&&nxt[i]) T.update(1,1,n,nxt[i],-w[f[i]]);\n\t\tlst[f[i]]=i;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tans=max(ans,T.query(1,1,n,i,n).m);\n\t\tif(nxt[i]) T.update(1,1,n,nxt[i],w[f[i]]);\n\t\tif(nxt[nxt[i]]) T.update(1,1,n,nxt[nxt[i]],-w[f[i]]);\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1635855135,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "~~\u53c8\u662f\u849f\u84bb\u6c34\u9898\u89e3\u7684\u5730\u65b9~~\n\n# $\\texttt{Description}$\n[\u9898\u9762\u53cb\u597d\uff0c\u4e0d\u505a\u89e3\u91ca](https://www.luogu.com.cn/problem/P3582)\n\n# $\\texttt{Solution}$\n\u8003\u8bd5\u7684\u65f6\u5019\u6ca1\u505a\u51fa\u6765\u3002\u8d5b\u540e\u624d\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u5957\u8def\u9898\u3002\n\n\u5bf9\u4e8e\u8fd9\u79cd\u201c\u9009\u51fa\u4e00\u6bb5\u533a\u95f4\uff0c\u8981\u6c42\u603b\u8d21\u732e\u6700\u5927\u201d\u7684\u9898\u76ee\uff0c\u5c1d\u8bd5\u6cbf\u7528\u8fd9\u6837\u4e00\u79cd\u601d\u8def\uff1a\u4ece\u5de6\u5f80\u53f3\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u5feb\u901f\u627e\u5230\u6700\u4f18\u7684\u53f3\u7aef\u70b9\u3002\u672c\u9898\u6211\u4ece\u53f3\u5f80\u5de6\u626b\uff0c\u56e0\u4e3a\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n$nxt_i$ \u8868\u793a\u7b2c $i$ \u90e8\u7535\u5f71\u540e\u9762\u7684\u7b2c\u4e00\u90e8\u4e0e\u5b83\u76f8\u540c\u7684\u7535\u5f71\u5728\u7b2c\u51e0\u5929\u653e\u6620\u3002\n\n\u7136\u540e\u4ece\u53f3\u5f80\u5de6\u679a\u4e3e\u533a\u95f4\u5de6\u7aef\u70b9\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5bf9\u4e8e\u5f53\u524d\u7684\u5de6\u7aef\u70b9\uff0c\u6bcf\u4e2a\u53f3\u7aef\u70b9\u80fd\u5f97\u5230\u7684\u8d21\u732e\u3002\u5f53\u53f3\u7aef\u70b9\u7531 $r+1$ \u53d8\u4e3a $r$ \u65f6\uff0c\u5c06 $[r,nxt_r)$ \u533a\u95f4\u52a0\u4e0a $w_{f_i}$\uff0c\u5c06 $nxt_{nxt_i}$ \u533a\u95f4\u51cf\u5c11 $w_{f_i}$\u3002\u8fd9\u4e2a\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u3002\n\n# $\\texttt{Code}$\n```cpp\n#include <cstdio>\n#define int long long\n\ninline int max(const int x, const int y) {return x > y ? x : y;}\nstruct Node {\n\tint l, r, v, Lazy;\n} c[4000005];\nint wow[4000005];\nvoid make_tree(const int O, const int L, const int R) {\n\tc[O].l = L, c[O].r = R;\n\tif (L != R) make_tree(O << 1, L, L + R >> 1), make_tree(O << 1 | 1, (L + R >> 1) + 1, R);\n}\nvoid pushdown(const int O) {\n\tc[O << 1].v += c[O].Lazy, c[O << 1 | 1].v += c[O].Lazy;\n\tc[O << 1].Lazy += c[O].Lazy, c[O << 1 | 1].Lazy += c[O].Lazy;\n\tc[O].Lazy = 0;\n}\nvoid update(const int O, const int L, const int R, const int d) {\n\tif (L <= c[O].l && c[O].r <= R) {c[O].Lazy += d, c[O].v += d; return;}\n\tint mid(c[O].l + c[O].r >> 1);\n\tpushdown(O);\n\tif (L <= mid) update(O << 1, L, R, d);\n\tif (mid < R) update(O << 1 | 1, L, R, d);\n\tc[O].v = max(c[O << 1].v, c[O << 1 | 1].v);\n}\nint f[1000005], w[1000005], nxt[1000005], pre[1000005];\n\nsigned main() {\n\tint n, m, ans(0LL);\n\tscanf(\"%lld%lld\", &n, &m);\n\tfor (int i(1); i <= n; ++ i) scanf(\"%lld\", f + i);\n\tfor (int i(1); i <= m; ++ i) scanf(\"%lld\", w + i);\n\tfor (int i(1); i <= n; ++ i) nxt[pre[f[i]]] = i, pre[f[i]] = i;\n\tmake_tree(1, 1, n);\n\tfor (int i(n); i; -- i)  {//\u679a\u4e3e\u53f3\u7aef\u70b9\n\t\tif (nxt[i]) update(1LL, i, nxt[i] - 1LL, w[f[i]]);\n\t\telse update(1LL, i, n, w[f[i]]);//\u7279\u5224\u8fb9\u754c\n\t\tif (nxt[i]) {\n\t\t\tif (nxt[nxt[i]]) update(1LL, nxt[i], nxt[nxt[i]] - 1LL, -w[f[i]]);\n\t\t\telse update(1LL, nxt[i], n, -w[f[i]]);//\u7279\u5224\u8fb9\u754c\n\t\t}\n\t\tans = max(ans, c[1].v);//\u7531\u4e8e\u662f\u6574\u4f53\u53d6\u6700\u5927\u503c\uff0c\u53ef\u4ee5\u5c11\u5199\u4e00\u4e2a\u67e5\u8be2\u51fd\u6570\uff0c\u76f4\u63a5\u53d6\u6839\u8282\u70b9\u7684\u503c\u5373\u53ef\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n\n# $\\texttt{Summary}$\n\n\u8fd9\u79cd\u7ecf\u5178\u7684\u5957\u8def\u9898\u8fd8\u662f\u6709\u5fc5\u8981\u603b\u7ed3\u4e00\u4e0b\u7684\u3002\n\n\u9996\u5148\uff0c\u8fd9\u79cd\u201c\u9009\u62e9\u4e00\u6bb5\u533a\u95f4\uff0c\u4f7f\u5176\u603b\u8d21\u732e\u6700\u5927/\u603b\u82b1\u8d39\u6700\u5c0f\u201d\u7684\u9898\u76ee\uff0c\u5e94\u8be5\u7acb\u5373\u53cd\u5e94\u5230\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u5feb\u901f\u627e\u5230\u6700\u4f18\u53f3\u7aef\u70b9\u7684\u65b9\u6cd5\u3002\u5178\u578b\u5982[UVA1471](https://www.luogu.com.cn/problem/UVA1471)\n\n\u5176\u6b21\uff0c\u7c7b\u4f3c\u201c\u91cd\u590d\u7684\u53ea\u7b97\u4e00\u6b21\u201d\uff08\u672c\u9898\u4e00\u6b21\u90fd\u4e0d\u7b97\uff09\uff0c\"\u6c42\u79cd\u7c7b\u6570\"\u7684\u9898\uff0c\u4e00\u822c\u662f\u8bb0\u5f55 $nxt_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u201c\u6570\u201d\u540e\u9762\u4e0e\u5b83\u79cd\u7c7b\u76f8\u540c\u7684\u201c\u6570\u201d\uff0c\u7136\u540e\u91c7\u7528\u6811\u72b6\u6570\u7ec4/\u7ebf\u6bb5\u6811\u7b49\u652f\u6301\u533a\u4fee\u533a\u67e5\u6216\u5355\u4fee\u533a\u67e5\u7684\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u5bf9\u5e94\u53f3\u7aef\u70b9\u7684\u53d6\u503c\u3002\u5178\u578b\u5982[HH\u7684\u9879\u94fe](https://www.luogu.com.cn/problem/P1972)\n\nend.",
        "postTime": 1614414772,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3852\u3010[POI2015]KIN\u3011"
    },
    {
        "content": "### \u597d\u9898!\n\n\u8bb2\u771f\u7684\u8fd9\u9053\u9898\u6bd4\u8f83\u6709\u4ee3\u8868\u6027,~~\u6bd4\u8f83\u5957\u8def?(bushi~~\u8003\u8bd5\u7684\u65f6\u5019\u6ca1\u5199\u51fa\u6765(tcl )\uff0c\u83dc\u662f\u539f\u7f6a\n\n### \u9898\u610f:\n\u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u5e8f\u5217\u4e0a\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u5c5e\u4e8e\u4e00\u79cd\u79cd\u7c7b\uff0c\u5e76\u4e14\u6bcf\u4e00\u79cd\u5143\u7d20\u6709\u5176\u5bf9\u5e94\u7684\u4ef7\u503c\uff0c\u4f60\u53ef\u4ee5\u4efb\u610f\u53d6\u4e00\u6bb5\u533a\u95f4,\u8ba1\u7b97\u8fd9\u6bb5\u533a\u95f4\u4e2d\u6ca1\u6709\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\u79cd\u7c7b\u7684\u4ef7\u503c\u4e4b\u548c.\u4f60\u9700\u8981\u6700\u5927\u5316\u8fd9\u4e2a\u4ef7\u503c\u4e4b\u548c.\n\n### \u601d\u8def:\n\n\u8fd9\u9053\u9898\u770b\u4e0a\u53bb\u5c31\u5f88\u8ba9\u6211\u61f5\u903c\uff0c\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u7ef4\u62a4\"\u6ca1\u6709\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\u79cd\u7c7b\"......\n\n\u601d\u8def\u4e00: \u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u533a\u95f4+\u66b4\u529b\u8ba1\u7b97\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u3000O(n ^ 3),\u5f97\u520623\u5206\n\n\u601d\u8def\u4e8c\uff1a\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5de6\u7aef\u70b9\uff0c\u4e0d\u65ad\u5c06\u53f3\u7aef\u70b9\u5f80\u53f3\u8fb9\u79fb\u52a8\uff0c\u8bb0\u5f55\u4e00\u4e0b\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u5f97\u5230\u7684\u4ef7\u503c\u4e4b\u548c\u7684\u6700\u5927\u503c,\u65f6\u95f4\u590d\u6742\u5ea6O(n ^ 2),\u5f97\u520640 \u5206\u3000\n\n\u601d\u8def\u4e09:\n\n\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u79cd\u7c7b\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e.\n      \u5bf9\u4e8e\u53f3\u7aef\u70b9\u5411\u53f3\u8fb9\u79fb\u52a8\u7684\u64cd\u4f5c,\u5047\u8bbe\u5f53\u524d\u79cd\u7c7b\u662fi,\u5c06\u533a\u95f4[pre[i]+1,i]\u52a0\u4e0ai\u7684\u4ef7\u503c,\n\u5c06\u533a\u95f4[pre[pre[i]]+1,pre[i]]\u51cf\u53bbi\u7684\u4ef7\u503c,\u540c\u65f6\u6c42\u4e00\u4e0b\u533a\u95f4[1,i]\u6700\u5927\u503c\u5c31\u884c\u4e86,\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\n\u5f97\u5206:100pts\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long \nint mp[1000005];\nint a[1000005],f[1000005];\nint pre[1000005];\nint n,m;\nstruct node{\n\tint l,r,Max,laz;\n}T[4000005];\nvoid build(int x,int l,int r)\n{\n\tT[x].l = l , T[x].r = r;\n\tT[x].Max = 0;\n\tif(T[x].l == T[x].r)return ;\n\tint mid = (l + r) >> 1;\n\tbuild(x << 1 , l , mid);\n\tbuild(x << 1 | 1 , mid + 1 , r );\n\treturn ;\n}\nvoid ad(int x,int k)\n{\n\tT[x].Max += k;\n\tT[x].laz += k;\t\n}\nvoid pushdown(int x)\n{\n\tif(T[x].laz == 0)return ;\n\tad(x << 1 , T[x].laz);\n\tad(x << 1 | 1 , T[x].laz);\n\tT[x].laz = 0;\n\treturn ;\n}\nvoid change(int x,int l,int r,int k)\n{\n\tif(T[x].l >= l && T[x].r <= r){ad(x,k);return ;}\n\tpushdown(x);\n\tint mid = (T[x].l + T[x].r) >> 1;\n\tif(l <= mid)change(x << 1 , l , r , k);\n\tif(r  > mid)change(x << 1 | 1 , l , r , k);\n\tT[x].Max = max(T[x << 1].Max , T[x << 1 | 1].Max);\n}\nint getMax(int x,int l,int r)\n{\n\tint Max = 0;\n\tif(T[x].l >= l && T[x].r <= r)return T[x].Max;\n\tpushdown(x);\n\tint mid = (T[x].l + T[x].r) >> 1;\n\tif( l <= mid )Max = max(Max,getMax(x << 1 , l , r ));\n\tif( r  > mid )Max = max(Max,getMax(x << 1 | 1 , l , r ));\n\treturn Max;\n}\ninline int read(){\n\tint x = 0 ,flag = 1;\n\tchar ch = getchar();\n\tfor( ; ch > '9' || ch < '0' ; ch = getchar())if(ch == '-')flag = -1;\n\tfor( ; ch >= '0' && ch <= '9' ; ch = getchar())x = (x << 3) + (x << 1) + ch - '0';\n\treturn x * flag;\n}\nsigned main()\n{\n\tn = read(),m = read();\n\tint M = 0;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t\ta[i] = read();\n\tfor(int j = 1 ; j <= m ; j ++)\n\t\tf[j] = read();\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tif(mp[a[i]] != 0)pre[i] = mp[a[i]];\n\t\tmp[a[i]] = i;\n\t}\n\tbuild(1 , 1 , n);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tif(pre[i]){\n\t\t\tchange(1 , pre[i] + 1 , i , f[a[i]]);\n\t\t\tchange(1 , pre[pre[i]] + 1 , pre[i] , -f[a[i]]);\n\t\t}\n\t\telse change(1, 1 , i , f[a[i]]);\n\t\tM = max(getMax(1,1,i),M);\n\t}\n\tcout << M;\n\treturn 0;\n}\n```",
        "postTime": 1603529088,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "\u5185\u5bb9\u89c1[\u535a\u5ba2](https://blog.csdn.net/LightningUZ/article/details/89433370)\n\n\u4ee3\u7801:\n```cpp\n#include<bits/stdc++.h>\n#define N 1001000\n#define int long long\nusing namespace std;\nclass SegmentTree\n{\n    private:\n        struct node\n        {\n            int l,r;\n            int s,a;\n        }tree[N<<2];\n    public:\n        #define ls index<<1\n        #define rs index<<1|1\n\n        #define L tree[index].l\n        #define R tree[index].r\n        #define S tree[index].s\n        #define A tree[index].a\n        void Update(int index)\n        {\n            S=max(tree[ls].s,tree[rs].s);\n        }\n        void BuildTree(int l,int r,int index)\n        {\n            L=l,R=r;\n            S=A=0;\n            if (l==r)\n            {\n                return;\n            }\n            int mid=(l+r)>>1;\n            BuildTree(l,mid,ls);\n            BuildTree(mid+1,r,rs);\n            Update(index);\n        }\n        void AddOne(int x,int index)\n        {\n            A+=x;\n            S+=x;\n        }\n        void PushDown(int index)\n        {\n            if (A)\n            {\n                AddOne(A,ls);\n                AddOne(A,rs);\n                A=0;\n            }\n        }\n        void Add(int l,int r,int x,int index)\n        {\n            if (l>R or L>r) return;\n            if (l<=L and R<=r)\n            {\n                AddOne(x,index);\n                return;\n            }\n            PushDown(index);\n            Add(l,r,x,ls);\n            Add(l,r,x,rs);\n            Update(index);\n        }\n        int Query(int l,int r,int index)\n        {\n            if (l>R or L>r) return 0;\n            if (l<=L and R<=r)\n            {\n                return S;\n            }\n            PushDown(index);\n            return max(Query(l,r,ls),Query(l,r,rs));\n        }\n}T;\n\nint n,m;\nint a[N],b[N];\nint pre[N],last[N];\nvoid Input()\n{\n    scanf(\"%lld%lld\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%lld\",&b[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        pre[i]=last[a[i]],last[a[i]]=i;\n    }\n}\n\nvoid Solve()\n{\n    T.BuildTree(1,n,1);\n    int ans=0;\n    for(int i=1;i<=n;i++)\n    {\n        T.Add(pre[i]+1,i,b[a[i]],1);\n        if (pre[i])\n        {\n            T.Add(pre[pre[i]]+1,pre[i],-b[a[i]],1);\n        }\n        ans=max(ans,T.Query(1,i,1));\n    }\n    printf(\"%lld\\n\",ans);\n}\nmain()\n{\n    Input();\n    Solve();\n    return 0;\n}\n```",
        "postTime": 1555832167,
        "uid": 106252,
        "name": "LightningUZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "\u4e4b\u524d\u505a\u5b8c\u7684\u65f6\u5019\u662f\u9760\u7740\u611f\u89c9\u5728\u505a\uff0c\u4eca\u5929\u91cd\u65b0\u770b\u7684\u65f6\u5019\u624d\u53d1\u73b0\u5f53\u65f6\u6211\u538b\u6839\u5c31\u6ca1\u7406\u89e3\uff0c\u60f3\u4e86\u597d\u4e45\uff0c\u7ffb\u4e86\u5f88\u591a\u7bc7\u9898\u89e3\uff0c\u53d1\u73b0\u5927\u5bb6\u601d\u8def\u6027\u7684\u4e1c\u897f\u5199\u7684\u90fd\u771f\u7684\u610f\u8bc6\u6d41\u3002\u3002\u3002\u50cf\u6211\u8fd9\u79cd\u5f31\u7701\u7684\u849f\u84bb\u53ea\u80fdOrz\n\n\u4e3a\u4e86\u5e2e\u52a9\u90a3\u4e9b\u50cf\u6211\u4e00\u6837\u7684\u849f\u84bb\uff0c\u6211\u5728\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u505a\u9898\u7684\u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u5206\u6790\u95ee\u9898\uff0c\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u50cf\u662f\u4e2aO(N)\u7684DP\u9898\u3002\u3002\u4f46\u662f\uff0c\u4f60\u53d1\u73b0\u4f60\u538b\u6839\u63a8\u4e0d\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff0c\u8fd9\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u9009\u62e9\u5177\u6709\u540e\u6548\u6027\u3002\u3002\n\n\u53cd\u6b63\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u8bf4\u3002\u3002\u4f60\u5c31\u4f1a\u60f3\u5230\u4e00\u5929\u4e00\u5929\u5f80\u540e\u9762\u63a8\u6765\u6c42\u89e3\u3002\u3002\u7eaf\u9760\u505a\u9898\u611f\u89c9= =\n\n\u6211\u4eec\u628a\u4e4b\u524d\u4e00\u5929\u8bb0\u4e3apre[i]\uff0c\u4e0d\u7136\u6211\u90fd\u770b\u4e0d\u61c2\u81ea\u5df1\u5199\u7684\u5565\u3002\u3002\n\n\u7136\u540e\u4f60\u5c31\u628a\u5f53\u524d\u63a8\u5230\u7684\u4e00\u5929\u4f5c\u4e3a\u6700\u540e\u4e00\u5929\uff0c\u5982\u679c\u8fd9\u4e00\u5929\u6211\u4eec\u9009\u62e9\u770b\uff0c\u90a3\u4e48\u663e\u7136\u7684\uff0c\u5b83\u6700\u4f18\u7684\u9009\u62e9\u662f\u770b\u5230\u4e0a\u4e00\u6b21\u540c\u6837\u662f\u8fd9\u4e00\u90e8\u7535\u5f71\u90a3\u4e00\u5929\u7684\u540e\u4e00\u5929\uff08pre[i] + 1\uff09\uff08\u7a0d\u5fae\u6709\u70b9\u7ed5\uff09\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4f60\u82e5\u662f\u518d\u5f80\u524d\u9762\u770b\uff0c\u5c31\u4f1a\u770b\u5230\u91cd\u590d\u7684\u4eca\u5929\u8fd9\u90e8\u7535\u5f71\u7684\uff0c\u90a3\u4f60\u4eca\u5929\u7684\u7535\u5f71\u7684\u597d\u611f\u4e0d\u5c31\u6ca1\u4e86\uff1f\u90a3\u8ddf\u4f60\u6628\u5929\u770b\u6709\u5565\u533a\u522b\uff0c\u751a\u81f3\u8fd8\u4f1a\u66f4\u5dee\u3002\u3002\u6240\u4ee5\u6211\u4eec\u53d1\u73b0\u4eca\u5929\u7684\u5f71\u54cd\u6700\u591a\u4f1a\u5f71\u54cd\u5230\u4e0a\u4e00\u6b21\u653e\u8fd9\u90e8\u7535\u5f71\u90a3\u4e00\u5929\uff08pre[i]\uff09\u3002\u3002\n\n\u7136\u540e\u6211\u4eec\u5982\u679c\u8bbe\u7acb\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55**\u4eca\u5929**\u5230\u4e4b\u524d\u6bcf\u4e00\u5929\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5927\u597d\u611f\u5ea6\uff0c\u663e\u7136\uff0c\u4f60\u4eca\u5929\u770b\u7535\u5f71\u4f1a\u4f7f\u5f97\u8fd9\u4e00\u5929(i)\u5230\u4e4b\u524d\u540c\u6837\u662f\u8fd9\u90e8\u7535\u5f71\u7684\u90a3\u4e00\u5929(pre[i])\u7684\u6240\u6709\u503c\u589e\u52a0\u3002\n\n\u540c\u65f6\u4f60\u9700\u8981\u628a\u4e4b\u524d\u540c\u6837\u662f\u8fd9\u90e8\u7535\u5f71\u7684\u90a3\u4e00\u5929(pre[i])\u5230\u5728\u90a3\u66f4\u65e9\u4e4b\u524d\u7684\u540c\u6837\u662f\u8fd9\u90e8\u7535\u5f71\u7684\u90a3\u4e00\u5929\u7684\u540e\u4e00\u5929(pre[pre[i]] + 1)\u7684\u503c\u51cf\u5c11\uff0c\u4e00\u5f00\u59cb\u6211\u6ca1\u6709\u60f3\u901a\u8fd9\u4e00\u70b9\uff0c\u8ba4\u4e3a\u53ef\u80fd\u4f1a\u5bf9\u540e\u7eed\u9020\u6210\u5f71\u54cd\uff0c\u4f46\u662f\u4ed4\u7ec6\u5206\u6790\u540e\u53d1\u73b0\uff0c\u5047\u5982\u4e4b\u540e\u6709\u4e00\u5929\uff08j > i\uff09\uff0c\u5b83\u540c\u6837\u5f71\u54cd\u5230\u4e86\u8fd9\u4e4b\u524d\u7684\u90a3\u4e00\u5929\uff08pre[j] < pre[i]\uff09\u90a3\u4e48\u5b83\u4e00\u5b9a\u7ecf\u8fc7\u4e86\u4eca\u5929\uff08i\uff09,\u6240\u4ee5\u540c\u6837\u4f1a\u4f7f\u5f97\u90a3\u4e00\u5929\u7684\u597d\u611f\u5ea6\u51cf\u5c11\uff0c\u56e0\u6b64\u8981\u51cf\u53bb\u3002\uff08\u4f60\u95ee\u6211\u4e3a\u5565\u53ea\u5230\uff08pre[i] + 1\uff09?\u56e0\u4e3a\u4e4b\u524d\u5df2\u7ecf\u88ab\u51cf\u8fc7\u4e86\u554a\u3002\u3002\u3002\uff09\n\n\u54e6\uff0c\u5bf9\u4e86\u5173\u4e8e\u7b54\u6848\u7684\u7edf\u8ba1\uff0c\u5c31\u662f\u6bcf\u4e00\u6b21\u66f4\u65b0\u540e\u53d6\u4e00\u6b21\u533a\u95f4\u6700\u5927\u503c\u3002\uff08\u4f60\u6bcf\u6b21\u5f80\u540e\u679a\u4e3e\uff0c\u540c\u65f6\u533a\u95f4\u6700\u5927\u503c\u4f1a\u8986\u76d6\u4e4b\u524d\u6240\u6709\u7684\u70b9\uff0c\u663e\u7136\u8003\u8651\u6240\u6709\u60c5\u51b5\uff09\n\n\u533a\u95f4\u52a0\u6cd5\uff0c\u533a\u95f4\u6700\u5927\u503c\uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u8d70\u8d77\n\n~~\u732e\u4e0a\u6211\u65e0\u654c\u5927\u5e38\u6570\u7684\u5783\u573e\u7ebf\u6bb5\u6811~~\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll MAXN = 1000000+5;\n \nstruct node\n{\n    ll num,lazy;\n    node *ls,*rs;\n    node(ll n,node *l,node *r) : num(n),ls(l),rs(r),lazy(0){}\n    node(){}\n    inline void pushup(){this->num = max(ls->num,rs->num);}\n    inline void pushdown(){\n        if(this->lazy && this->ls != NULL)\n        {\n            rs->num += this->lazy;ls->num += this->lazy;\n            rs->lazy += this->lazy;ls->lazy += this->lazy;\n            this->lazy = 0;\n        }\n    }\n}pool[MAXN<<1];\nnode *NewNode(ll num,node *ls,node *rs){\n    static ll cnt = 0;\n    pool[cnt] = node(num,ls,rs);\n    return &pool[cnt++];\n}\nnode *build(ll l,ll r){\n    node *rt = NewNode(0,NULL,NULL);ll mid = (l+r) >> 1;\n    if(l < r){\n        rt->ls = build(l,mid);\n        rt->rs = build(mid + 1,r);\n    } \n    return rt;\n}\nvoid add(node *rt,ll L,ll R,ll l,ll r,ll x){\n    ll mid = (l + r) >> 1;\n    if(L > R)return ;\n    if(L <= l && r <= R){\n        rt->num += x;\n        rt->lazy += x;\n        return ;\n    }  \n    rt->pushdown(); \n    if(mid >= L)add(rt->ls,L,R,l,mid,x);\n    if(mid < R)add(rt->rs,L,R,mid + 1,r,x);\n    rt->pushup();\n}\nll ans = 0;\nnode *rt;\nll n,m;\nll f[MAXN],w[MAXN],pre[MAXN],now[MAXN];\nint main()\n{\n    //freopen(\"1.in\",\"r\",stdin);\n    //freopen(\"1.out\",\"w\",stdout);\n    scanf(\"%lld %lld\",&n,&m);\n    for(ll i = 1; i <= n; i++){\n        scanf(\"%lld\",&f[i]);\n        pre[i] = now[f[i]];\n        now[f[i]] = i;\n    }\n   // for(int i = 1; i <= n; i++){\n  //      printf(\"%d \",pre[i]);\n   // }\n   // puts(\" \");\n    rt = build(1,n);\n    for(ll i = 1; i <= m; i++){scanf(\"%lld\",&w[i]);}\n    for(ll i = 1; i <= n; i++){\n        add(rt,pre[i] + 1,i,1,n,w[f[i]]);\n        add(rt,pre[pre[i]] + 1,pre[i],1,n,-w[f[i]]);\n       // printf(\"%lld\\n\",ans);\n        ans = max(ans,rt->num);\n    }\n    printf(\"%lld\",ans);\n}\n\n```",
        "postTime": 1525613413,
        "uid": 52576,
        "name": "moye\u5230\u7897\u91cc\u6765",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    },
    {
        "content": "\u7ed9\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u524d\u9a71\uff0c\u5f53\u52a0\u5230\u8fd9\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u5c31\u8981\u628a\u524d\u9a71\u4ee5\u53ca\u5176\u4e4b\u524d\u7684\u4e00\u6bb5\u5220\u6389\u3002\n\n\u800c\u533a\u95f4\u7684\u52a0\u6cd5\u4e0e\u6700\u5927\u503c\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\n\n\n\n\n\n\n\n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define Rep( i , _begin , _end ) for(int i=(_begin),i##_END=(_end);i<=(i##_END);i++)\n#define For( i , _begin , _end ) for(int i=(_begin),i##_END=(_end);i!=(i##_END);i++)\n#define Lop( i , _begin , _end ) for(int i=(_begin),i##_END=(_end);i>=(i##_END);i--)\n#define Dnt( i , _begin , _end ) for(int i=(_begin),i##_END=(_end);i!=(i##_END);i--)\nusing std :: max;\nusing std :: min;\ntypedef long long LL;\nconst int maxx = 1000000 + 25;\nint pos[maxx],v[maxx];\nint fnl[maxx],pre[maxx];\nint n,m,x,y,z;\nLL Tx[maxx<<2],Add[maxx<<2];\nLL ans;\nnamespace Zyerstream{\n    const int L = 1<<15;\n    char buffer[L],*S,*T;\n    inline char Getchar(){\n        if(S == T){\n            T = (S=buffer) + fread(buffer,1,L,stdin);\n            if(S == T) return EOF;\n        }\n        return *S++;\n    }\n    template <class T> inline void read(T &in){\n        char c;\n        for(c = Getchar();c > '9' || c < '0';c = Getchar());\n        for(in = 0;c >= '0' && c <= '9';c = Getchar()) in = (in<<1) + (in<<3) + c - '0'; \n    }\n}\nusing namespace Zyerstream;\nnamespace Segment_Tree{\n    void pushdown(int i,int l,int r){\n        if(l == r) return;\n        Tx[i<<1] += Add[i];Tx[i<<1|1] += Add[i];\n        Add[i<<1] += Add[i];Add[i<<1|1] += Add[i];\n        Add[i] = 0;\n    }\n    void modify(int i,int x,int y,int l,int r,int k){\n        if(x <= l && r <= y) {Tx[i] += k;Add[i] += k;return;}\n        int mid = (l+r) >> 1;if(Add[i]) pushdown(i,l,r);\n        if(x <= mid) modify(i<<1,x,y,l,mid,k);\n        if(y >  mid) modify(i<<1|1,x,y,mid+1,r,k);\n        Tx[i] = max(Tx[i<<1],Tx[i<<1|1]);\n    }\n    LL Query(int i,int x,int y,int l,int r){\n        if(x <= l && r <= y) return Tx[i];LL ans = 0;\n        int mid = (l+r) >> 1;if(Add[i]) pushdown(i,l,r);\n        if(x <= mid) ans = max(ans,Query(i<<1,x,y,l,mid));\n        if(y >  mid) ans = max(ans,Query(i<<1|1,x,y,mid+1,r));\n        return ans;\n    }\n}\nusing namespace Segment_Tree;\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    Rep( i , 1 , n ) read(pos[i]); \n    Rep( i , 1 , m ) read(v[i]);\n    Rep( i , 1 , n ) pre[i] = fnl[pos[i]],fnl[pos[i]] = i;\n    Rep( i , 1 , n ){\n        modify(1,pre[i] + 1,i,1,n,v[pos[i]]);\n        if(pre[i]) modify(1,pre[pre[i]] + 1,pre[i],1,n,-v[pos[i]]);\n        ans = max(ans,Query(1,1,i,1,n));\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1495115004,
        "uid": 21673,
        "name": "Sor4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3582 \u3010[POI2015]KIN\u3011"
    }
]