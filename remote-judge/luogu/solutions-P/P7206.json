[
    {
        "content": "## \u9898\u610f\n\n\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u6709\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u6c42\u6700\u957f\u7684\u56de\u6587\u8def\u5f84\u3002\n\n\n------------\n## \u601d\u8def\n\n\u8def\u5f84\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u7528*\u70b9\u5206\u6cbb*\u6765\u6c42\u89e3\u3002\n\n\u6211\u4eec\u70b9\u5206\u6cbb\u7684\u65f6\u5019\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u91cd\u5fc3\u7684**\u6b63\u53cd\u8def\u5f84**\u7684 hash \u503c\u3002\n\n\u8bbe\u70b9\u5230\u91cd\u5fc3\u7684 hash \u503c\u4e3a $A$\uff0c\u91cd\u5fc3\u5230\u70b9\u7684 hash \u503c\u4e3a $B$\u3002\n\n\u5047\u8bbe\u5b9e\u73b0\u6211\u4eec\u6709\u4e24\u4e2a\u957f\u5ea6\u5206\u522b\u4e3a $L_1,L_2$ \u7684\u8def\u5f84\uff0c\u5b83\u4eec\u7684 LCA \u662f\u5f53\u524d\u5206\u6cbb\u5230\u7684\u91cd\u5fc3\u3002\n\n\u8fd9\u4e24\u6761\u8def\u5f84\u8981\u7ec4\u6210\u56de\u6587\u8def\u5f84\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n$$A_1+B_2\\times 27^{L_1}=A_2+B_1\\times 27^{L_2}$$\n\n\u79fb\u9879\uff0c\u540c\u9664 $27^{L_1+L_2}$\uff1a\n\n$$A_1/27^{L_1+L_2}-B_1/ 27^{L_1}=A_2/27^{L_1+L_2}-B_2/ 27^{L_2}$$\n\n\u8fd9\u91cc $L_1+L_2$ \u5c31\u662f\u56de\u6587\u8def\u5f84\u7684\u957f\u5ea6\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u8def\u5f84\u5982\u679c\u662f\u56de\u6587\u8def\u5f84\uff0c\u90a3\u4e48\u53bb\u6389\u5934\u5c3e\u4e24\u4e2a\u7ed3\u70b9\u5b83\u4ecd\u7136\u662f\u56de\u6587\u8def\u5f84\u3002\n\n\u6211\u4eec\u8003\u8651**\u5947\u5076\u957f\u5ea6**\u5206\u5f00\u6765\u4e8c\u5206\uff0c\u7136\u540e\u6bcf\u6b21\u505a\u70b9\u5206\u6cbb\uff0c\u5e76\u8bb0\u5f55\u4e0b $A/27^{len}-B/ 27^{L}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^3n)$\uff0c\u9700\u8981\u5361\u5e38\u3002\n\n\u4e00\u4e2a\u5361\u5e38\u6280\u5de7\u5c31\u662f\uff0c\u5982\u679c \u5206\u6cbb\u5230\u7684\u8054\u901a\u5757\u5927\u5c0f \u5c0f\u4e8e \u56fa\u5b9a\u7684\u56de\u6587\u8def\u5f84\u957f\u5ea6 \u65f6\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de\u3002\n\n\u8bb0\u5f55\u65f6\u5c06 map \u6362\u6210 unordered_map \u5b9e\u6d4b\u5feb\u4e0d\u5c11\u3002\n\n\n------------\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<fstream>\n#include<algorithm>\n#include<cmath>\n#include<cstdlib>\n#include<cstring>\n#include<queue>\n#include<unordered_map>\n#include<set>\n#include<bitset>\n#define LL long long\nusing namespace std;\nnamespace MOD\n{\n    const int mod = 1e9 + 7;\n    inline int add(int a, int b) {return a + b >= mod ? a + b - mod : a + b;}\n    inline int mul(int a, int b) {return 1ll * a * b % mod;}\n    inline int sub(int a, int b) {return a - b < 0 ? a - b + mod : a - b;}\n    inline int fast_pow(int a, int b)\n    {\n        int re = 1;\n        while(b)\n        {\n            if(b & 1) re = mul(re, a);\n            a = mul(a, a);\n            b >>= 1;\n        }\n        return re;\n    }\n    inline int inv(int a) {return fast_pow(a, mod - 2);}\n} using namespace MOD;\nint n, ans = 1, p[50005], invp[50005]; char c[50005];\nstruct Node\n{\n    int to, nxt;\n}r[100005]; int he[50005];\ninline void Edge_add(int u, int v)\n{\n    static int cnt = 0;\n    r[++cnt] = (Node){v, he[u]};\n    he[u] = cnt;\n}\nbitset<50005> vis;\nint tot, sz[50005], Mx[50005], rt;\nvoid getrt(int now, int fa)\n{\n    sz[now] = 1, Mx[now] = 0;\n    for(int i = he[now]; i; i = r[i].nxt)\n    {\n        int to = r[i].to;\n        if(vis[to] || to == fa) continue;\n        getrt(to, now);\n        sz[now] += sz[to];\n        Mx[now] = max(Mx[now], sz[to]);\n    }\n    Mx[now] = max(Mx[now], tot - sz[now]);\n    if(Mx[now] < Mx[rt]) rt = now;\n}\nint h1[50005], h2[50005], dep[50005], q[50005], ta, nlen;\nint L, R; bool chk;\n#define pii pair<int, int>\n#define mp make_pair\nstruct hash_pair { \n    template <class T1, class T2> \n    size_t operator()(const pair<T1, T2>& p) const\n    { \n        auto hash1 = hash<T1>{}(p.first); \n        auto hash2 = hash<T2>{}(p.second); \n        return hash1 ^ hash2; \n    } \n}; \nunordered_map<pii, bool, hash_pair> f;\ninline void gethash(int now, int fa)\n{\n    for(int i = he[now]; i; i = r[i].nxt)\n    {\n        int to = r[i].to;\n        if(vis[to] || to == fa) continue;\n        h1[to] = add(mul(h1[now], 27), c[to] - 'a' + 1), h2[to] = add(h2[now], mul(c[to]- 'a' + 1, p[dep[to] = dep[now] + 1]));\n        q[++ta] = to;\n        gethash(to, now);\n    }\n}\n#define h(H1, H2, sum, len) sub(mul(H1, invp[sum]), mul(H2, invp[len]))\ninline void calc(int now)\n{\n    f.clear();\n    h1[now] = h2[now] = c[now] - 'a' + 1, dep[now] = 0;\n    f[mp(0, 0)] = 1;\n    for(int i = he[now]; i; i = r[i].nxt)\n    {\n        int to = r[i].to;\n        if(vis[to]) continue;\n        h1[to] = add(c[to] - 'a' + 1, h1[now] * 27); h2[to] = add(h2[now], (c[to] - 'a' + 1) * 27), dep[to] = 1;\n        q[ta = 1] = to;\n        gethash(to, now);\n        for(int j = 1; j <= ta; j++)\n        {\n            int val = h(h1[q[j]], h2[q[j]], nlen, dep[q[j]] + 1);\n            if(f[mp(val, nlen - dep[q[j]] - 1)])\n                {chk = true; return;}\n        }\n        for(int j = 1; j <= ta; j++)\n        {\n            int H1 = sub(h1[q[j]], mul(h1[now], p[dep[q[j]]]));\n            int H2 = mul(sub(h2[q[j]], h1[now]), invp[1]);\n            int val = h(H1, H2, nlen, dep[q[j]]);\n            f[mp(val, dep[q[j]])] = 1;\n        }\n    }\n}\nvoid solve(int now)\n{\n    vis[now] = 1, calc(now); if(chk) return;\n    int rp = tot - sz[now];\n    for(int i = he[now]; i; i = r[i].nxt)\n    {\n        int to = r[i].to;\n        if(vis[to]) continue;\n        tot = Mx[rt = 0] = (sz[to] > sz[now] ? rp : sz[to]);\n        if(tot < nlen) continue;\n        getrt(to, 0);\n        solve(rt);\n    }\n}\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"test.in\", \"r\", stdin);\n    freopen(\"test.out\", \"w\", stdout);\n#endif\n    scanf(\"%d%s\", &n, c + 1);\n    p[0] = invp[0] = 1; for(int i = 1; i <= n; i++) p[i] = mul(p[i - 1], 27);\n    invp[n] = inv(p[n]); for(int i = n - 1; i >= 1; i--) invp[i] = mul(invp[i + 1], 27);\n    for(int i = 1; i < n; i++)\n    {\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        Edge_add(u, v), Edge_add(v, u);\n    }\n    L = 1, R = (n + 3) >> 1;\n    while(L + 1 < R)\n    {\n        int mid = (L + R) >> 1;\n        vis = chk = 0; nlen = (mid << 1) - 1;\n        tot = Mx[rt = 0] = n;\n        getrt(1, 0);\n        solve(rt);\n        if(chk) L = mid;\n        else R = mid;\n    }\n    ans = max(ans, (L << 1) - 1);\n    L = ans >> 1, R = (n + 2) >> 1;\n    while(L + 1 < R)\n    {\n        int mid = (L + R) >> 1;\n        vis = chk = 0; nlen = mid << 1;\n        tot = Mx[rt = 0] = n;\n        getrt(1, 0);\n        solve(rt);\n        if(chk) L = mid;\n        else R = mid;\n    }\n    ans = max(ans, L << 1);\n    printf(\"%d\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1654683472,
        "uid": 69288,
        "name": "zuytong",
        "ccfLevel": 7,
        "title": "P7206 [COCI2019-2020#3] Lampice"
    },
    {
        "content": "- \u795d\u613f\u5929\u4e0b\u4eba\uff0c\u8eab\u4f53\u5065\u5eb7\u3002\n\n**\u9898\u610f**\n- [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P7206)\u3002\n- \u7ed9\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u5b57\u7b26\uff0c\u627e\u5230\u6700\u957f\u7684\u56de\u6587\u6811\u94fe\u3002\n- \u6811\u7684\u5927\u5c0f\u4e0d\u5927\u4e8e $50000$\uff0c\u65f6\u95f4\u9650\u5236 $3.5$ \u79d2\u3002\n\n**\u5206\u6790**\n- \u7279\u522b\u63d0\u9192\uff1a\u7531\u4e8e\u4f5c\u8005\u76ee\u524d\u4e0d\u4f1a\u4efb\u4f55\u5b57\u7b26\u4e32\u7b97\u6cd5\uff0c\u8fd9\u7bc7\u9898\u89e3\u662f\u7531[\u5b57\u7b26\u4e32\u54c8\u5e0c](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/ha-xi)\u7684\u601d\u8def\u5199\u6210\u7684\u3002\n- \u8fd9\u4e2a\u65f6\u95f4\u9650\u5236\u4ec5\u4ec5\u662f\u7528\u6765\u5361 $O(n^2)$ \u7684\u66b4\u529b\u7684\uff08\u6211\u4eec\u6070\u597d\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u66b4\u529b\uff09\u3002\n- \u4f5c\u8005\u4e0d\u4f1a\u4efb\u4f55\u7684\u7384\u5b66\u7b97\u6cd5\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\uff1a\u5982\u679c\u6211\u4eec\u6709\u529e\u6cd5\u628a\u4e00\u5806\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u6570\u636e\u5408\u5e76\u8d77\u6765\u7136\u540e\u5224\u65ad\u5b83\u662f\u5426\u5f62\u6210\u56de\u6587\u4e32\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u70b9\u5206\u6cbb\u8fd9\u6837\u7684\u7b97\u6cd5\u5feb\u901f\u89e3\u51b3\u5b83\u3002\n- \u8bf4\u5e72\u5c31\u5e72\uff0c\u52a0\u5165\u73b0\u5728\u5206\u6cbb\u91cd\u5fc3\u6709\u5b57\u7b26 $e$\uff0c\u4e24\u6761\u94fe\u4e2d\u5411\u4e0b\u7684\u7247\u6bb5\u662f $a_0,b_0$\uff0c\u5411\u4e0a\u7684\u7247\u6bb5\u6709\u5b57\u7b26 $a_1,b_1$\uff0c\u4e24\u6761\u94fe\u7684\u957f\u5ea6\u4e3a $L_1,L_2$\uff0c\u90a3\u4e48\u5b83\u662f\u56de\u6587\u4e32\u7684\u5fc5\u8981\u6761\u4ef6\u662f\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/kerekrb2.png)\n$$a_1+e\\cdot B^{L_1}+b_0\\cdot B^{L_1+1}=a_0\\cdot B^{L_2+1}+e\\cdot B^{L_2}+b_1$$\n- \u663e\u7136\u6211\u4eec\u60f3\u8981\u628a\u8d21\u732e\u62c6\u5206\u5bf9\u5427\uff0c\u6240\u4ee5\u6211\u4eec\u7ee7\u7eed\u53d8\u5f62\u3002\n$$\\frac{a_1}{B^{L_1+L_2}}+\\frac{e}{B^{L_2}}+\\frac{b_0}{B^{L_2-1}}=\\frac{a_0}{B^{L_1-1}}+\\frac{e}{B^{L_1}}+\\frac{b_1}{B^{L_1+L_2}}$$\n$$\\frac{b_0}{B^{L_2-1}}+\\frac{e}{B^{L_2}}-\\frac{b_1}{B^{L_1+L_2}}=\\frac{a_0}{B^{L_1-1}}+\\frac{e}{B^{L_1}}-\\frac{a_1}{B^{L_1+L_2}}$$\n- \u6700\u540e\uff1a\u95ee\u9898\u5728\u4e8e $B^{L_1+L_2}$ \u8fd8\u6ca1\u6709\u88ab\u5316\u7b80\u5e76\u62c6\u5206\uff0c\u6216\u8bb8\u60a8\u4e5f\u5982\u540c\u4f5c\u8005\u4e00\u5f00\u59cb\u8ba4\u4e3a\u7684\u90a3\u6837\uff1a\u6b64\u8def\u4e0d\u901a\uff0c\u4f46\u5b9e\u9645\u5374\u662f\uff1a\u5b83\u53ef\u4ee5\u6307\u5bfc\u4e00\u79cd\u89e3\u6cd5\u3002\n- \u8ba9\u6211\u4eec\u56de\u5f52\u4e00\u4e2a\u57fa\u672c\u4e8b\u5b9e\uff1a\u82e5\u957f\u5ea6\u4e3a $n>2$ \u7684\u56de\u6587\u4e32\u5b58\u5728\uff0c\u90a3\u4e48\u957f\u5ea6\u4e3a $n-2$ \u7684\u56de\u6587\u4e32\u4e5f\u5b58\u5728\uff1a\u56e0\u4e3a\u8fd9\u5c31\u662f\u62c6\u6389\u5934\u5c3e\u4e24\u4e2a\u5b57\u6bcd\u4e4b\u95f4\u7684\u5dee\u522b\u3002\n- \u4e5f\u5c31\u662f\u8bf4\uff1a\u5982\u679c\u6211\u4eec\u68c0\u6d4b\u5230\u5b58\u5728\u957f\u5ea6\u4e3a $L$ \u7684\u56de\u6587\u4e32\uff0c\u90a3\u4e48\u4e00\u5b9a\u5b58\u5728\u957f\u5ea6\u4e3a $l\\le L$ \u4e14\u4e0e $L$ \u540c\u5947\u5076\u7684\u56de\u6587\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u5947\u5076\u4e8c\u5206\u67d0\u4e2a\u56de\u6587\u4e32\u957f\u5ea6\u662f\u5426\u51fa\u73b0\uff01\u6240\u4ee5\u6700\u7ec8\uff0c\u6211\u4eec\u7528\u4e00\u79cd\u4e0d\u4f18\u7f8e\u4f46\u5b9e\u7528\u7684\u671f\u671b $O(n\\log^2n)$ \u590d\u6742\u5ea6\u89e3\u51b3\u4e86\u6b64\u9898\uff0c\u4e0d\u9700\u8981\u7528\u5230\u4efb\u4f55\u590d\u6742\u7684\u5b57\u7b26\u4e32\u7b97\u6cd5\uff0c\u53ea\u9700\u8981\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u4ee5\u53ca\u4e00\u70b9\u4e8c\u5206\u548c\u5206\u6cbb\u7684\u601d\u60f3\uff0c[\u4ee3\u7801](https://www.luogu.com.cn/paste/006efzmw)\u3002",
        "postTime": 1654584123,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "Lampice"
    }
]