[
    {
        "content": "\u5148\u819c\u4e00\u6ce2\u697c\u4e0b\u75282^30\uff0c2^60,2^16\u8fdb\u5236\u7684julao\n_________________\n\n\u5176\u5b9e\u6211\u4eec\u53d1\u73b0\u6709\u4e2a\u795e\u5947\u7684\u4e1c\u897f\u53ebunsinged int\uff0c\u901a\u8fc7\u8fd9\u4e2a\u795e\u5947\u7684\u4e1c\u897f\u6211\u4eec\u53ef\u4ee5\u8f7b\u800c\u6613\u4e3e\u7684\u7ed5\u5f00\u9ad8\u7cbe\u5ea6\u7684\u4e71\u4e03\u516b\u7cdf\u7684\u5206\u7c7b\u8ba8\u8bba\uff0c\u90a3\u4e48\u4ecb\u7ecd\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u975e\u5e38\u795e\u5947\u7684\u7b97\u6cd5\u597d\u4e86\u2026\u2026\n_____________\n## \u672c\u9898\u9898\u89e3\n\n### \u524d\u7f6e\u829d\u58eb:\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\u7684\u5747\u644a\u590d\u6742\u5ea6\n\n\u5728\u300a\u7b97\u6cd5\u5bfc\u8bba\u300b\u7684\u644a\u8fd8\u5206\u6790\u4e00\u8282\u4e3e\u4e86\u4e00\u4e2a\u5c0f\u6817\u5b50\uff0c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\uff0c\u5982\u679c\u66b4\u529b\u7684\u6bcf\u6b21\u7ed9\u5b83\u52a01\uff0c\u6bcf\u6b21\u505a\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u7684\u8bdd\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5b83\u7684\u5747\u644a\u590d\u6742\u5ea6\u662f$O(1)$\u800c\u4e0d\u662f$O(logn)$\u5177\u4f53\u8bc1\u660e\u662f\u8003\u8651\u6bcf\u4e2a\u5bf9\u4e8e\u6bcf\u4e2a\u4e8c\u7684\u6574\u6b21\u5e42\u6211\u4eec\u5176\u5b9e\u4ec5\u4ec5\u505a\u4e86$O(n)$\u6b21\u64cd\u4f5c\uff0c\u53ea\u662f\u591a\u4e86\u4e00\u4e2a\u5927\u6982\u662f2\u7684\u5e38\u6570\uff0c\u800c\u4e00\u4e2a\u4efb\u610f\u6570\u548c\u6700\u63a5\u8fd1\u5b83\u7684\u4e8c\u7684\u6574\u6b21\u5e42\u6700\u591a\u5dee2\u500d\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8bc1\u660en\u6b21\u66b4\u529b\u9ad8\u7cbe\u52a01\u7684\u5355\u6b21\u590d\u6742\u5ea6\u662f\u5747\u644a$O(1)$\u7684\n\n_____________\n\n### \u5c40\u9650\u6027\n\n\u4f46\u662f\u5982\u679c\u4f60\u5bf9\u5747\u644a\u7684\u590d\u6742\u5ea6\u7565\u6709\u4e86\u89e3\u7684\u8bdd\uff0c\u4f1a\u77e5\u9053\u5747\u644a\u7684\u590d\u6742\u5ea6\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5b83\u4e0d\u652f\u6301\u56de\u64a4\u2026\u2026\uff0c\u56e0\u4e3a\u5747\u644a\u590d\u6742\u5ea6\u610f\u5473\u7740\u6709\u4e00\u6b65\u6216\u8005\u591a\u6b65\u7684\u590d\u6742\u5ea6\u5c06\u4f1a\u5f88\u9ad8\uff0c\u9ad8\u51fa\u4e86\u5e73\u5747\u590d\u6742\u5ea6\uff0c\u800c\u5982\u679c\u6211\u4eec\u53cd\u590d\u56de\u64a4\u8fd9\u51e0\u6b65\u6211\u4eec\u5c31\u4f1a\u534e\u4e3d\u7684T\u98de\u6389\n\n\u4f46\u95ee\u9898\u8fd9\u9053\u9898\u5c31\u662f\u8ba9\u6211\u4eec\u652f\u6301\u51cf\u53bb\u4e00\u4e2a\u6570\uff0c\u800c\u8fd9\u548c\u56de\u64a4\u6ca1\u4ec0\u4e48\u533a\u522b\u2026\u2026\n\n\u6b64\u65f6\u7ee7\u7eed\u4f7f\u7528\u66b4\u529b\uff0c\u5148\u4e0d\u7ba1\u7a7a\u95f4\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u51cf\u53bb\u7684\u6570\u53ef\u80fd\u4f1a\u8ba9\u6211\u4eec\u53cd\u590d\u56de\u64a4\u51e0\u4e2a\u975e\u5e38\u9ad8\u590d\u6742\u5ea6\u7684\u6b65\u9aa4\uff0c\u6b64\u65f6\u6211\u4eec\u5c31T\u98de\u4e86\n\n\u6216\u8005\u8fd8\u6709\u66f4\u574f\u7684\u60c5\u51b5\uff0c\u8003\u8651\u4e0b\u9762\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5148\u8ba9\u7b2c$10^6$\u4f4d\u52a01\uff0c\u7136\u540e\u5728\u7b2c\u4e00\u4f4d\u51cf1\uff0c\u8fd9\u4f1a\u7acb\u5373\u5bfc\u81f4\u6211\u4eec\u505a$10^6$\u4e2a\u64cd\u4f5c\uff0c\u5982\u679c\u6211\u4eec\u63a5\u4e0b\u6765\u7684$10^6$\u4e2a\u64cd\u4f5c\u91cc\u6bcf\u6b21\u53cd\u590d\u52a01\u6216\u8005\u51cf1\u7684\u8bdd\u6211\u4eec\u4f1a\u53cd\u590d\u91cd\u590d\u8fd9\u4e9b\u64cd\u4f5c\u2026\u2026\u7136\u540e\u6211\u4eec\u5c31\u4f1aT\u7684\u98de\u8d77\n\n---------------------------\n\n## \u89e3\u51b3\n\n\u6240\u4ee5\u6211\u4eec\u552f\u4e00\u7684\u505a\u6cd5\u5c31\u662f\u5bf9\u4e8e\u52a0\u6cd5\u548c\u51cf\u6cd5\u5206\u522b\u7528\u66b4\u529b\u7ef4\u62a4\u5b83\u4eec\u7684\u7edd\u5bf9\u503c\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\u7684\u6b63\u786e\u6027\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u6bcf\u4e00\u6b21\u52a0\u6cd5\u9700\u8981\u62c6\u6210$O(log{10^9})$\u7684\u52a01\uff0c\u663e\u7136\u590d\u6742\u5ea6\u8fd8\u662f\u5e26\u4e00\u4e2a$log$\u4f1aT\u98de\u2026\u2026e\n\n\u6240\u6709\u6211\u4eec\u9700\u8981\u60f3\u4e00\u4e9b\u5947\u6280\u6deb\u5de7\u6765\u5e2e\u52a9\u6211\u4eec\u52a0\u901f\u2026\u2026\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86\u795e\u5947\u7684unsigned int\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u975e\u5e38\u5927\u7684\u6570\u4f7f\u7528unsigned int \u6bcf32\u4f4d\u5206\u6210\u4e00\u4e2a\u5c0f\u5757\uff0c\u8fd9\u6837\u539f\u6765\u7684\u7b2cb\u4f4d\u5c31\u53d8\u6210\u4e86\u7b2c$b/32$\u4e2a\u6570\u7684\u7b2c$b\\%32$\u4f4d\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u56e0\u4e3aa\u7684\u503c\u4e0d\u662f\u5f88\u5927\uff0c\u56e0\u6b64\u6bcf\u6b21\u6700\u591a\u5bf9\u4e24\u4e2aunsigned int\u6570\u8fdb\u884c\u66b4\u529b\u7684\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\uff0c\u590d\u6742\u5ea6\u53d8\u6210\u4e86\u5747\u644a$O(1)$\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u7406\u89e3\u6210\u8fdb\u884c\u8fdb\u884c\u4e86$2^{32}$\u8fdb\u5236\u8868\u793a\u4e5f\u53ef\u4ee5\u3002\n\n\u90a3\u4e48\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u5bf9unsigned int\u8fdb\u884c\u65e0\u8111\u52a0\u6cd5\u4f7f\u5176\u81ea\u7136\u6ea2\u51fa\u5373\u53ef\uff0c\u7136\u540e\u5bf9\u4e8e\u5224\u65ad\u8fdb\u4f4d\u8fd9\u4e2a\u6709\u4e00\u4e2a\u5947\u6280\u6deb\u5de7\uff0c\u56e0\u4e3a\u52a0\u7684\u6570\u4e0d\u8d85\u8fc7unsigned int\uff0c\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u5224\u65ad\u52a0\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u5927\u5c0f\uff0c\u5982\u679c\u8d8a\u52a0\u8d8a\u5c0f\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u662f\u8fdb\u4e86\u4e00\u4f4d\uff0c\u8df3\u5230\u4e0b\u4e00\u4e2a\u5757\u53bb\u505a\u52a0\u6cd5\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5\u5747\u644a$O(n)$\u7684\u590d\u6742\u5ea6\u5206\u522b\u7ef4\u62a4\u6b63\u7684\u90e8\u5206\u548c\u8d1f\u7684\u90e8\u5206\n\n\u73b0\u5728\u6211\u4eec\u8981\u5904\u7406\u8be2\u95ee\u4e86\u2026\u2026\n\n\u663e\u7136\u6211\u4eec\u662f\u4e0d\u53ef\u4ee5\u65e0\u8111\u63d0\u53d6\u51fa\u6765\u6b63\u7684\u8fd9\u4e00\u4f4d01\u503c\u4e0e\u8d1f\u7684\u8fd9\u4e00\u4f4d01\u503c\u7136\u540e\u65e0\u8111\u76f8\u51cf\u7684\u2026\u2026\uff0c\u56e0\u4e3a\u8fd9\u6837\u6211\u4eec\u4f1a\u5c11\u8003\u8651\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u95ee\u9898\uff0c\u501f\u4f4d\uff0c\u5982\u679c\u53d1\u751f\u4e86\u501f\u4f4d\uff0c\u90a3\u4e480\u4f1a\u53d8\u62101\uff0c1\u4f1a\u53d8\u62100\u2026\u2026\n\n\u662f\u5426\u53d1\u751f\u501f\u4f4d\u5f53\u7136\u4e5f\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u53ea\u9700\u8981\u6bd4\u8f83\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u540e\u7684\u540e\u7f00\u6570\u5b57\u662f\u6b63\u7684\u5927\u8fd8\u662f\u8d1f\u7684\u5927\u5c31\u884c\u4e86\u2026\u2026\n\n\u7b49\u7b49\u2026\u2026$10^6$\u957f\u5ea6\u7684\u6570\u4f60\u8ba9\u6211\u6bd4\u8f83\u5927\u5c0f\uff1f\n\n\u6240\u4ee5\u6211\u4eec\u6bd4\u8f83\u4e24\u4e2a\u540e\u7f00\u7684\u5927\u5c0f\u5176\u5b9e\u6709\u70b9\u50cf\u6bd4\u8f83\u5b57\u7b26\u4e32\u5927\u5c0f\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5728\u4f4d\u7f6eb\u4e4b\u540e\u4e0d\u7b49\u7684\u4f4d\u7f6e\u7136\u540e\u6bd4\u8f83\u5927\u5c0f\u5373\u53ef\u4e86\u2026\u2026\n\n\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u7b49\u7684\u4f4d\u7f6e\u5462\uff1f\n\n\u8fd9\u4e2a\u95ee\u9898\u6709\u70b9\u50cflower\\_bound\u7684\u67e5\u627e\uff0c\u4f46\u662f\u6211\u4eec\u8981\u652f\u6301\u52a8\u6001\u7684\u7ef4\u62a4\u4e0d\u7b49\u7684\u4f4d\u7f6e\n\n\u597d\u50cfset\u5c31\u53ef\u4ee5\u7ef4\u62a4\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u4fee\u6539\u768432\u4f4d\u5757\u6700\u591aO(n)\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u5927\u53ef\u4ee5\u4fee\u6539\u4e00\u4e2a\u5757\u5c31\u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u548c\u5bf9\u5e94\u7684\u6b63\u5757\u6216\u8005\u8d1f\u5757\u76f8\u7b49\uff0c\u7136\u540e\u5728set\u91ccerase\u6216\u8005insert\u8fd9\u4e2a\u5757\u7684\u7f16\u53f7\uff0c\u7136\u540e\u6211\u4eec\u67e5\u627e\u7b2c\u4e00\u4e2a\u4e0d\u7b49\u4f4d\u7f6e\u7684\u65f6\u5019\u76f4\u63a5lower\\_bound\u51fa\u8fd9\u4e2a\u5757\u7684\u7f16\u53f7\uff0c\u7136\u540e\u4e24\u4e2aunsigned int\u8fdb\u884c\u5927\u5c0f\u6bd4\u8f83\u5373\u53ef\n\n\u6ce8\u610f\u6211\u4eec\u53ef\u80fd\u9700\u8981\u7279\u5224\u4e00\u4e0b\u4e0d\u662f\u6574\u5757\u7684\u90e8\u5206\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u76f4\u63a5\u819c\u4e00\u4e0b\u63d0\u53d6\u51fa\u8fd9\u4e2a\u90e8\u5206\u5c31\u53ef\u4ee5\u5566~\n\n\u53e6\u5916\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6211\u4e0d\u652f\u6301>>32\u8fd9\u4e2a\u64cd\u4f5c\u2026\u2026\uff0c\u6240\u4ee5\u6211\u662f\u901a\u8fc7>>31\u7136\u540e>>1\u5b9e\u73b0\u7684^\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<set>\nusing namespace std;const int N=1e6+10;typedef unsigned int uit;\nuit inc[N];uit dec[N];set <int> s;int n;int t1;int t2;int t3;\nint main()\n{\n\tscanf(\"%d%d%d%d\",&n,&t1,&t2,&t3);set <int>::iterator it;\n\tfor(int i=1,t,a,b;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&t);\n\t\tif(t==1)\n\t\t{\n\t\t\tscanf(\"%d%d\",&a,&b);int p=b/32;int q=b%32;//\u5148\u8f6c\u6362\u6210\u5757\u4e0a\u4f4d\u7f6e \n\t\t\tif(a>0)\n\t\t\t{\n\t\t\t\tuit st=(uit)a<<q;uit ic=(uit)a>>(31-q);ic>>=1;//\u65e0\u8111\u9ad8\u7cbe\u52a0 \n\t\t\t\tuit od=inc[p];inc[p]+=st;ic+=(od>inc[p]);//\u5904\u7406\u4e0bset \n\t\t\t\tif(inc[p]^dec[p])s.insert(p);else if(s.count(p))s.erase(p);p++;\n\t\t\t\twhile(ic!=0)\n\t\t\t\t{\n\t\t\t\t\tod=inc[p];inc[p]+=ic;ic=(od>inc[p]);//\u5224\u65ad\u8fdb\u4f4d \n\t\t\t\t\tif(inc[p]^dec[p])s.insert(p);else if(s.count(p))s.erase(p);p++;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(a<0)//\u8d1f\u7684\u662f\u4e00\u6837\u7684 \n\t\t\t{\n\t\t\t\ta=-a;\n\t\t\t\tuit st=(uit)a<<q;uit ic=(uit)a>>(31-q);ic>>=1;//\u8fd9\u91cc\u63d0\u53d6\u4e0d\u51fa\u6765>>32\u53ef\u4ee5>>31\u7136\u540e>>1 \n\t\t\t\tuit od=dec[p];dec[p]+=st;ic+=(od>dec[p]);\n\t\t\t\tif(inc[p]^dec[p])s.insert(p);else if(s.count(p))s.erase(p);p++;\n\t\t\t\twhile(ic!=0)\n\t\t\t\t{\n\t\t\t\t\tod=dec[p];dec[p]+=ic;ic=(od>dec[p]);\n\t\t\t\t\tif(inc[p]^dec[p])s.insert(p);else if(s.count(p))s.erase(p);p++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse \n\t\t{\n\t\t\tscanf(\"%d\",&b);int p=b/32;int q=b%32;int ans=((inc[p]>>q)^(dec[p]>>q))&1;//\u4e24\u4e2a\u4f4d\u7f6e\u65e0\u8111\u76f8\u51cf \n\t\t\tuit v1=inc[p]%(1<<q);uit v2=dec[p]%(1<<q);//\u63d0\u53d6\u975e\u6574\u6bb5\u90e8\u5206 \n\t\t\tif(v1<v2){printf(\"%d\\n\",ans^1);}//\u9700\u8981\u501f\u4f4d \n\t\t\telse if(v1>v2||s.empty()||p<=*(s.begin())){printf(\"%d\\n\",ans);}//\u5224\u65ad\u4e0b\u65e0\u9700\u501f\u4f4d\u7684\u60c5\u51b5 \n\t\t\telse \n\t\t\t{\n\t\t\t\tit=s.lower_bound(p);--it;//lower_bound\u51fa\u524d\u9a71(\u81ea\u5df1\u7684\u4e0d\u4e25\u683c\u540e\u7ee7--) \n\t\t\t\tif(inc[*it]>dec[*it]){printf(\"%d\\n\",ans);}//\u6bd4\u8f83\u5927\u5c0f \n\t\t\t\telse {printf(\"%d\\n\",ans^1);}//\u8f93\u51fa \n\t\t\t}\n\t\t}\n\t}return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1525785892,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3822 \u3010[NOI2017]\u6574\u6570\u3011"
    },
    {
        "content": "\u9996\u5148\u5c06\u52a0\u548c\u51cf\u5206\u5f00\u7edf\u8ba1\uff0c\u53ea\u8981\u6bd4\u8f83\u540e\u7f00\u5927\u5c0f\u5c31\u884c\n\n\u5982\u4f55\u6bd4\u8f83\u540e\u7f00\u5927\u5c0f\uff1f\u66b4\u529b\u627e\u5230\u4e0b\u4e00\u4e2a\u4e0d\u7b49\u7684\u4f4d\u7f6e\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7528set\u7ef4\u62a4\u4e0d\u7b49\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6b21\u67e5\u627e\u4ee5\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662fO\uff08L log L\uff09\n\n\u5176\u4e2dL\u8868\u793a\u6570\u5b57\u6700\u5927\u4f4d\u6570\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u5728\u4e8e\u4fee\u6539\u3002\n\n\u6211\u4eec\u8003\u8651\u4e8c\u8fdb\u5236\u4f18\u5316\u3002\n\n\u6211\u4eec\u5c06\u6570\u5b57\u6bcf16\u4e2a\u5206\u6210\u4e00\u4f4d\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u662f\u4fee\u6539\u5757\u5185\u662f\u4e3a\u4e0d\u540c\u7684\u6570\u5b57\u4e2a\u6570\n\n\u7136\u540e\u7528set\u7ef4\u62a4\u6bcf\u4e00\u5757\u5185\u662f\u5426\u6709\u4e0d\u540c\u7684\u6570\u5b57\n\n\u6bcf\u6b21\u8be2\u95ee\u6211\u4eec\u5148\u5728\u5f53\u524d\u5757\u4e2d\u67e5\u8be2\u3002\n\n\u5982\u679c\u6ca1\u6709\u5219\u5728\u4e0a\u4e00\u4e2a\u6709\u4e0d\u540c\u6570\u5b57\u7684\u5757\u4e2d\u67e5\u627e\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4fee\u6539\uff1aO\uff08N\\*30\uff09\n\n\u67e5\u8be2\uff1aO\uff08N\\*\uff0816+logN\uff09\uff09\n\n\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6O\uff08NlogN\uff09\n\n\u5728\u53d1\u5e16\u65f6bzoj\u6392rk4\uff0cUOJ\u6392rk3,\u6d1b\u8c37rk1\n\n\u00b7\u00b7\u00b7 cpp\n\n```cpp\n#include<bits/stdc++.h>\n#define N 30000005\nusing namespace std;\nconst int L=200005;\nchar LZH[L],*S=LZH,*T=LZH;\ninline char gc(){\n    if (S==T){\n        T=(S=LZH)+fread(LZH,1,L,stdin);\n        if (S==T) return EOF;\n    }\n    return *S++;\n}\ninline int read(){\n    int x=0,f=1;\n    char c=gc();\n    for (;c<'0'||c>'9';c=gc())\n        if (c=='-') f=-1;\n    for (;c>='0'&&c<='9';c=gc())\n        x=(x<<1)+(x<<3)+c-48;\n    return x*f;\n}\nint n,x,y;\nbool fl,a[N],b[N];\nstruct ZYY_CMP{\n    bool operator ()(const int &x,const int &y){\n        return x>y;\n    }\n};\nstruct ZYY_SET{\n    int cnt[2000005];\n    set<int,ZYY_CMP> S;\n    ZYY_SET(){\n        S.insert(-1);\n        memset(cnt,0,sizeof(cnt));\n    }\n    void insert(int x){\n        x+=16;\n        if (!cnt[x>>4]) S.insert(x>>4);\n        cnt[x>>4]++;\n    }\n    void erase(int x){\n        x+=16;\n        cnt[x>>4]--;\n        if (!cnt[x>>4]) S.erase(x>>4);\n    }\n    int query(int x){\n        if (x<0) return -2;\n        x+=16;\n        for (int i=x;i>=((x>>4)<<4)&&i>=16;i--)\n            if (a[i-16]^b[i-16]) return i-16;\n        int y=*S.lower_bound((x>>4)-1);\n        if (y==-1) return -2;\n        for (int i=(y<<4)+15;i>=(y<<4)&&i>=16;i--)\n            if (a[i-16]^b[i-16]) return i-16;\n        return -2;\n    }\n}Set;\ninline void add(){\n    bool tg=1;\n    for (int i=y;i<=n*30&&((tg^1)||x);i++,x/=2){\n        if ((tg^1)^(x&1)){\n            if (a[i]^b[i]) Set.erase(i);\n            else Set.insert(i);\n            if (fl) tg=(a[i]^=1);\n            else tg=(b[i]^=1);\n        }\n        else\n            tg=((tg^1)&&(x&1))^1;\n    }\n}\nint main(){\n    n=read(); read(); read(); read();\n    Set.insert(-2);\n    for (int i=1;i<=n;i++){\n        if (read()==1){\n            x=read(); y=read();\n            fl=(x>0); x=x<0?-x:x;\n            add();\n        }\n        else{\n            x=read(); y=Set.query(x-1);\n            putchar((a[x]^b[x]^(y!=-2&&!a[y]))+'0'); puts(\"\");\n        }\n    }\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1504268198,
        "uid": 33736,
        "name": "\u5927\u5934",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3822 \u3010\u6574\u6570\u3011"
    },
    {
        "content": "NOI2017 Day1 T1\u3002\n\n\u9996\u5148\uff0c\u5728\u8bb0\u5f55\u7684\u65f6\u5019\uff0c\u628a\u6bcf\u8fde\u7eed60\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u538b\u4f4d\uff0c\u4f7f\u5f97\u4e0e\u6bcf\u4e2a\u4fee\u6539\u64cd\u4f5c\u76f8\u5173\u76842^60\u8fdb\u5236\u4f4d\u6570\u4e0d\u4f1a\u8d85\u8fc72\u3002\u5e76\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u53f6\u5b50\u8282\u70b9\u8868\u793a\u7684\u662f\u75282^60\u8fdb\u5236\u8868\u793a\u65f6\u67d0\u4e00\u4f4d\u7684\u503c\u3002\n\n\u540c\u65f6\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\uff0c\u518d\u7ef4\u62a4\u4e09\u4e2a\u503c\uff1a\n\npre\uff1a\u5f53\u524d\u7684\u6570\u75282^60\u8fdb\u5236\u8868\u793a\u65f6\uff0c\u5bf9\u5e94\u533a\u95f4\u6700\u4f4e\u4f4d\u7684\u503c\u3002\n\nsuf\uff1a\u5f53\u524d\u7684\u6570\u75282^60\u8fdb\u5236\u8868\u793a\u65f6\uff0c\u5bf9\u5e94\u533a\u95f4\u6700\u9ad8\u4f4d\u7684\u503c\u3002\n\nlen\uff1a\u5f53\u524d\u7684\u6570\u75282^60\u8fdb\u5236\u8868\u793a\u65f6\uff0c\u4ece\u5bf9\u5e94\u533a\u95f4\u7684\u6700\u4f4e\u4f4d\u5f80\u9ad8\u4f4d\u8ba1\u6570\u6700\u591a\u80fd\u6570\u5230\u7684\u4e0e\u6700\u4f4e\u4f4d\u7684\u503c\u76f8\u540c\u7684\u6570\u4f4d\u7684\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u5206\u6210x\u4e3a\u6b63\u548c\u8d1f\u4e24\u79cd\u60c5\u51b5\u8003\u8651\u3002\n\nx\u4e3a\u6b63\u65f6\uff0c\u628a\u4e0e\u4e4b\u76f8\u5173\u76842^60\u8fdb\u5236\u4f4d\u8fdb\u884c\u5355\u70b9\u4fee\u6539\u3002\u7136\u540e\u5982\u679c\u6709\u8fdb\u4f4d\uff0c\u5219\u8be2\u95ee\u4ece\u5f53\u524d\u4f4d\u7684\u4e0b\u4e00\u4f4d\u5f00\u59cb\uff0c\u6700\u591a\u80fd\u6570\u5230\u591a\u5c11\u4e2a2^60\u8fdb\u5236\u4f4d\u7684\u503c\u4e3a2^60-1\uff0c\u628a\u8fd9\u4e9b\u4f4d\u7684\u503c\u6539\u4e3a0\uff0c\u5e76\u628a\u518d\u4e0b\u4e00\u4f4d\u7684\u503c\u52a0\u4e0a1\u3002\n\nx\u4e3a\u8d1f\u65f6\uff0c\u540c\u6837\u5904\u7406\u3002\u5982\u679c\u6709\u9000\u4f4d\uff0c\u5219\u8be2\u95ee\u4ece\u5f53\u524d\u4f4d\u7684\u4e0b\u4e00\u4f4d\u5f00\u59cb\uff0c\u6700\u591a\u80fd\u6570\u5230\u591a\u5c11\u4e2a2^60\u8fdb\u5236\u4f4d\u7684\u503c\u4e3a0\uff0c\u628a\u8fd9\u4e9b\u4f4d\u7684\u503c\u6539\u4e3a2^60-1\uff0c\u5e76\u628a\u518d\u4e0b\u4e00\u4f4d\u7684\u503c\u51cf\u53bb1\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\u64cd\u4f5c\u5c31\u662f\u7b80\u5355\u7684\u5355\u70b9\u8be2\u95ee\u3002\n\n\u4ee3\u7801\uff08\u5728BZOJ\u4e0aAC\uff0c\u5728\u6d1b\u8c37\u4e0a7\u4e2a\u70b9TLE\uff0cNOI\u539f\u9898\u4e2d\u7684\u65f6\u9650\u662f2s\u800c\u4e0d\u662f1s\uff09\uff1a\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define p2 p << 1\n#define p3 p << 1 | 1\nusing namespace std;\ninline int read() {\n    int res = 0; bool bo = 0; char c;\n    while (((c = getchar()) < '0' || c > '9') && c != '-');\n    if (c == '-') bo = 1; else res = c - 48;\n    while ((c = getchar()) >= '0' && c <= '9')\n        res = (res << 3) + (res << 1) + (c - 48);\n    return bo ? ~res + 1 : res;\n}\ntypedef long long ll;\nconst int N = 6e5;\nconst ll CYX = 1ll << 60;\nint n, V[(N << 2) + 5]; ll T[(N << 2) + 5], add[(N << 2) + 5],\npre[(N << 2) + 5], suf[(N << 2) + 5];\nvoid build(int l, int r, int p) {\n    if (l == r) {\n        T[p] = pre[p] = suf[p] = 0;\n        V[p] = r - l + 1; add[p] = 0;\n        return;\n    }\n    int mid = l + r >> 1;\n    build(l, mid, p2); build(mid + 1, r, p3);\n    pre[p] = pre[p2];\n    suf[p] = suf[p3]; V[p] = r - l + 1; add[p] = 0;\n}\nvoid down(int p) {\n    add[p2] += add[p]; add[p3] += add[p];\n    add[p] = 0;\n}\nvoid calc(int l, int r, int p) {\n    ll r3, r4, r5, r6; int r7, r8, mid = l + r >> 1;\n    r3 = pre[p2] + add[p2]; r4 = pre[p3] + add[p3];\n    r5 = suf[p2] + add[p2]; r6 = suf[p3] + add[p3];\n    r7 = V[p2]; r8 = V[p3]; pre[p] = r3;\n    suf[p] = r6; V[p] = (r7 == mid - l + 1 && r4 == r5) ? r7 + r8 : r7;\n} \nvoid change(int l, int r, int s, int e, ll v, int p) {\n    if (l == s && r == e) return (void) (add[p] += v);\n    int mid = l + r >> 1; down(p);\n    if (e <= mid) change(l, mid, s, e, v, p2);\n    else if (s >= mid + 1) change(mid + 1, r, s, e, v, p3);\n    else change(l, mid, s, mid, v, p2),\n        change(mid + 1, r, mid + 1, e, v, p3);\n    calc(l, r, p);\n}\nbool modify1(int l, int r, int pos, ll v, int p) {\n    if (l == pos && pos == r) {\n        ll val = T[p] + add[p] + v;\n        if (val >= CYX) add[p] += v - CYX;\n        else add[p] += v;\n        return val >= CYX;\n    }\n    int mid = l + r >> 1; down(p); bool res = 0;\n    if (pos <= mid) res = modify1(l, mid, pos, v, p2);\n    else res = modify1(mid + 1, r, pos, v, p3);\n    calc(l, r, p); return res;\n}\nbool modify2(int l, int r, int pos, ll v, int p) {\n    if (l == pos && pos == r) {\n        ll val = T[p] + add[p] - v;\n        if (val < 0) add[p] -= v - CYX;\n        else add[p] -= v;\n        return val < 0;\n    }\n    int mid = l + r >> 1; down(p); bool res = 0;\n    if (pos <= mid) res = modify2(l, mid, pos, v, p2);\n    else res = modify2(mid + 1, r, pos, v, p3);\n    calc(l, r, p); return res;\n}\nint ask1(int l, int r, int s, int e, ll v, int p) {\n    if (l == s && r == e) return pre[p] + add[p] == v ? V[p] : 0;\n    int mid = l + r >> 1; down(p); int res = 0;\n    if (e <= mid) res = ask1(l, mid, s, e, v, p2);\n    else if (s >= mid + 1) res = ask1(mid + 1, r, s, e, v, p3);\n    else {\n        int cc = ask1(l, mid, s, mid, v, p2),\n            ff = ask1(mid + 1, r, mid + 1, e, v, p3);\n        if (cc == mid - s + 1 && pre[p3] + add[p3] == v\n            && suf[p2] + add[p2] == v)\n                res = cc + ff;\n        else res = cc;\n    }\n    calc(l, r, p); return res;\n}\nll ask2(int l, int r, int pos, int p) {\n    if (l == pos && pos == r) return T[p] + add[p];\n    int mid = l + r >> 1; down(p); ll res = 0;\n    if (pos <= mid) res = ask2(l, mid, pos, p2);\n    else res = ask2(mid + 1, r, pos, p3);\n    calc(l, r, p); return res;\n}\nint main() {\n    int i, op, x, y; n = read(); read(); read(); read();\n    build(1, N, 1);\n    for (i = 1; i <= n; i++) {\n        op = read();\n        if (op == 1) {\n            x = read(); y = read();\n            if (x == 0) continue;\n            if (x > 0) {\n                int pos1, pos2; pos1 = pos2 = y / 60 + 1;\n                if (1ll * x >> 60 - y % 60) pos2 = pos1 + 1;\n                else pos2 = pos1;\n                if (pos1 == pos2) {\n                    bool flag = modify1(1, N, pos1, 1ll * x << y % 60, 1);\n                    if (flag) {\n                        int tt = ask1(1, N, pos1 + 1, N, CYX - 1, 1);\n                        if (tt) change(1, N, pos1 + 1, pos1 + tt, 1ll - CYX, 1);\n                        modify1(1, N, pos1 + tt + 1, 1, 1);\n                    }\n                }\n                else {\n                    int le = (pos1 << 6) - (pos1 << 2) - y;\n                    bool flag0 = modify1(1, N, pos1,\n                        1ll * (x & ((1 << le) - 1)) << 60 - le, 1), flag;\n                    flag = flag0 ? modify1(1, N, pos2, (x >> le) + 1, 1)\n                        : modify1(1, N, pos2, x >> le, 1);\n                    if (flag) {\n                        int tt = ask1(1, N, pos2 + 1, N, CYX - 1, 1);\n                        if (tt) change(1, N, pos2 + 1, pos2 + tt, 1ll - CYX, 1);\n                        modify1(1, N, pos2 + tt + 1, 1, 1);\n                    }\n                }\n            }\n            else {\n                x = ~x + 1; int pos1, pos2; pos1 = pos2 = y / 60 + 1;\n                if (1ll * x >> 60 - y % 60) pos2 = pos1 + 1;\n                else pos2 = pos1;\n                if (pos1 == pos2) {\n                    bool flag = modify2(1, N, pos1, 1ll * x << y % 60, 1);\n                    if (flag) {\n                        int tt = ask1(1, N, pos1 + 1, N, 0, 1); if (tt)\n                        change(1, N, pos1 + 1, pos1 + tt, CYX - 1, 1);\n                        modify2(1, N, pos1 + tt + 1, 1, 1);\n                    }\n                  }\n                else {\n                    int le = (pos1 << 6) - (pos1 << 2) - y;\n                    bool flag0 = modify2(1, N, pos1,\n                        1ll * (x & ((1 << le) - 1)) << 60 - le, 1), flag;\n                    flag = flag0 ? modify2(1, N, pos2, (x >> le) + 1, 1)\n                        : modify2(1, N, pos2, x >> le, 1);\n                    if (flag) {\n                        int tt = ask1(1, N, pos2 + 1, N, 0, 1); if (tt)\n                        change(1, N, pos2 + 1, pos2 + tt, CYX - 1, 1);\n                        modify2(1, N, pos2 + tt + 1, 1, 1);\n                    }\n                }\n            }\n        }\n        else {\n            x = read(); ll res = ask2(1, N, x / 60 + 1, 1);\n            printf(\"%d\\n\", (res >> x % 60) & 1);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1501495570,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3822 \u3010\u6574\u6570\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u6211\u4ec0\u4e48\u4f18\u5316\u90fd\u6ca1\u52a0\u4e00\u4e2a\u5927\u66b4\u529b set \u5c31\u8fc7\u4e86?\n\n\u7528 set \u7ef4\u62a4\u4e00\u6bb5\u4e00\u6bb5\u7684 1 , \u7136\u540e\u4fee\u6539\u62c6\u6210\u5bf9\u6bcf\u4e00\u4f4d\u5206\u522b\u4fee\u6539 , \u8fd9\u6837\u6bcf\u6b21\u4fee\u6539\u6700\u591a30\u4e2a\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e8e\u6b63\u8d1f\u5c31\u90fd\u5927\u529b\u8ba8\u8bba\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u90fd\u5f88\u7b80\u5355\uff0c\u80fd\u591f\u5361\u7684\u5e38\u6570\u5c31\u5361\u5361\u3002\n~~\uff08mutable\u5927\u6cd5\u597d\uff09~~\n\n\u590d\u6742\u5ea6\u4e0a\u754c $O(30nlog(10^7))$ \u53cd\u6b63\u975e\u5e38\u4e0d\u6ee1\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define Set(a,b) memset(a,b,sizeof(a))\ntemplate<class T>inline void init(T&x){\n\tx=0;char ch=getchar();bool t=0;\n\tfor(;ch>'9'||ch<'0';ch=getchar()) if(ch=='-') t=1;\n\tfor(;ch>='0'&&ch<='9';ch=getchar()) x=(x<<1)+(x<<3)+(ch-48);\n\tif(t) x=-x;return;\n}typedef long long ll;\nconst int N=1e6+10;\nint n,t1,t2,t3;\nstruct interval{\n\tmutable int l,r;\n\tinterval(){}\n\tinterval(int _l,int _r){l=_l,r=_r;}\n\tinline bool operator <(const interval b)const{return l<b.l||(l==b.l&&r<b.r);}\n};\nset<interval> S;\nset<interval>::iterator iter;\ninline void Change(int x,bool fl){\n\titer=S.upper_bound(interval(x,1e9));\n\tif(iter==S.begin()) {\n\t\tif(fl) {// -\n\t\t\tconst interval I=*iter;\n\t\t\tint r=I.l-1;\n\t\t\tif(I.l==I.r) S.erase(iter);\n\t\t\telse         ++(*iter).l;\n\t\t\tS.insert(interval(x,r));\n\t\t}else  {// +\n\t\t\tif(iter!=S.end()&&(*iter).l==x+1) --(*iter).l;\n\t\t\telse S.insert(interval(x,x));\n\t\t}\n\t}else {\n\t\tset<interval>::iterator it=iter;--it;\n\t\tconst interval I=*it;\n\t\tif(fl) {// -\n\t\t\tif(I.r>=x) {\n\t\t\t\tif(I.l<x) {\n\t\t\t\t\t(*it).r=x-1;\n\t\t\t\t\tif(I.r>x) S.insert(interval(x+1,I.r));\n\t\t\t\t}else{\n\t\t\t\t\tif(I.r>x) (*it).l=x+1;\n\t\t\t\t\telse S.erase(it);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tconst interval II=*iter;\n\t\t\t\tint r=II.l-1;\n\t\t\t\tif(II.l==II.r) S.erase(iter);else ++(*iter).l;\n\t\t\t\tif(I.r==x-1) (*it).r=r;\n\t\t\t\telse S.insert(interval(x,r));\n\t\t\t}\n\t\t}else  {// +\n\t\t\tint r;\n\t\t\tif(I.r>=x) {\n\t\t\t\tr=I.r+1;\n\t\t\t\tif(iter!=S.end()) {\n\t\t\t\t\tconst interval II=*iter;\n\t\t\t\t\tif(II.l==r+1) --(*iter).l;\n\t\t\t\t\telse S.insert(interval(r,r));\n\t\t\t\t}else S.insert(interval(r,r));\n\t\t\t\tif(x==I.l) S.erase(it);\n\t\t\t\telse (*it).r=x-1;\n\t\t\t}else {\n\t\t\t\tbool Linkl=0,Linkr=0;\n\t\t\t\tint R;\n\t\t\t\tif(iter!=S.end()) {\n\t\t\t\t\tconst interval II=*iter;R=II.r;\n\t\t\t\t\tif(II.l==x+1) Linkr=1;\n\t\t\t\t\tif(I.r==x-1)  Linkl=1;\n\t\t\t\t}else {\n\t\t\t\t\tR=x;\n\t\t\t\t\tif(I.r==x-1) Linkl=1;\n\t\t\t\t}\n\t\t\t\tif(Linkl&&Linkr) {S.erase(iter);(*it).r=R;}\n\t\t\t\telse if(Linkr) --(*iter).l;\n\t\t\t\telse if(Linkl) ++(*it).r;\n\t\t\t\telse S.insert(interval(x,x));\n\t\t\t}\n\t\t}\n\t}\n}\ninline void Solve(int a,int b){\n\tbool fl=0;if(a<0) fl=1,a=-a;\n\tfor(register int i=0;a;a>>=1,++i) {\n\t\tregister int c=a&1;if(!c) continue;\n\t\tChange(i+b,fl);\n\t}return;\n}\n\nint main()\n{\n\tinit(n),init(t1),init(t2),init(t3);\n\tfor(int i=1;i<=n;++i) {\n\t\tint tp;init(tp);\n\t\tif(tp==1) {\n\t\t\tint a,b;init(a),init(b);\n\t\t\tSolve(a,b);\n\t\t}else{\n\t\t\tint k;init(k);\n\t\t\titer=S.upper_bound(interval(k,1e9));\n\t\t\tif(iter!=S.begin()) {\n\t\t\t\t--iter;\n\t\t\t\tif((*iter).r>=k) puts(\"1\");\n\t\t\t\telse puts(\"0\");\n\t\t\t}else puts(\"0\");\n\t\t}\n\t\t\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1556616838,
        "uid": 47803,
        "name": "NeosKnight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3822 \u3010[NOI2017]\u6574\u6570\u3011"
    },
    {
        "content": "\u4e00\u79cd\u5f88\u4e0d\u9700\u8981\u8111\u5b50\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u5199\u8d77\u6765\u771f\u7684\u4e0d\u597d\u8bf4\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u505a\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u5982\u679c\u5b83\u8868\u793a\u7684\u6570\u4e3a $x$\uff0c\u4e14\u533a\u95f4\u662f $[l,r]$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f00 $3$ \u4e2a\u53d8\u91cf $val,a,b$\uff0c\u5176\u4e2d $val$ \u662f $\\left\\lfloor\\dfrac x{2^r}\\right\\rfloor$\uff0c$a$ \u662f\u6700\u5c11\u51cf\u591a\u5c11\u4e2a $2^l$ \u80fd\u4f7f $val$ \u9000\u4f4d\uff0c$b$ \u662f\u6700\u5c11\u52a0\u591a\u5c11\u4e2a $2^l$ \u80fd\u4f7f $val$ \u8fdb\u4f4d\u3002\n\n\u663e\u7136\u5b83\u53ef\u4ee5\u5feb\u901f\u5408\u5e76\uff0c\u4f46\u662f $a,b$ \u8fc7\u5927\u7684\u8bdd\uff08$val$ \u518d\u5927\u4e5f\u4e0d\u4f1a\u8d85\u8fc7 $10^9\\times n$) \u5c31\u4e0d\u80fd\u5feb\u901f\u5408\u5e76\u4e86\u3002\n\n\u5bf9\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u4e00\u4e2a\u9608\u503c $V>10^9\\times n$\uff0c\u5982\u679c $a,b>V$\uff0c\u5c31\u8868\u793a\u65e0\u8bba \u52a0/\u51cf \u591a\u5c11\u4e2a $2^l$ \u90fd\u4e0d\u53ef\u80fd\u4f7f $val$ \u53d1\u751f\u53d8\u5316\u3002\n\n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\u5c31\u662f\uff0c\u5982\u679c $a$ \u6216 $b>V$ \u7684\u8bdd\uff0c\u5e76\u4e0d\u4ee3\u8868\u4ee5\u540e\u6c38\u8fdc\u90fd\u662f $>V$ \u7684\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c $a>V,b=1$\uff0c\u90a3\u4e48\u51cf\u53bb\u4e00\u4e2a $2^l$ \u4e4b\u540e\uff0c$val$ \u9000\u4e86\u4e00\u4f4d\uff0c$a,b$ \u5e94\u8be5\u5206\u522b\u662f $1,>V$\uff0c\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u6211\u8c03\u4e86\u5feb $2$ \u5c0f\u65f6\u3002\n\n\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u5355\u70b9\u4fee\u6539\uff0c\u524d\u7f00\u67e5\u8be2\u4e86\u3002\n\n\u5f53\u7136\u6700\u597d\u7684\u5efa\u8bae\u662f\u522b\u5199\u8fd9\u4e2a\u89e3\u6cd5\uff0c\u7ec6\u8282\uff0c\u5751\u70b9\u975e\u5e38\u591a\uff08\u6bd4\u5982 $>V$\uff0c\u8d1f\u6570\uff0c\u5404\u79cd\u8ba8\u8bba\u548c\u9632\u6ea2\u51fa\u7b49\u7b49\u7b49\u7b49\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\n\n\u4ec0\u4e48\uff0c\u4f60\u8bf4\u7ebf\u6bb5\u6811\u5927\u5c0f\u662f $30n$ \u7684\uff1f\n\n\u4e0d\u597d\u610f\u601d\uff0c\u8fd9\u4e2a\u652f\u6301\u79bb\u6563\u5316\uff0c\u751a\u81f3 $b$ \u548c $k$ \u662f\u53ef\u4ee5\u52a0\u5f3a\u5230 $10^{18}$ \u7ea7\u522b\u7684\uff08\n\n# \u4ee3\u7801\n```cpp\n#define inf 1000000000000000001\nstruct node{\n\tint x,y;ll l,r,v;\n}p[2000005];\nint tot,a[2000005],cnt,ls[2000005],rs[2000005];\ninline ll lmod(ll x,ll p){\n\treturn x+(x>>63&p);\n}\ninline node merge(node x,node y){\n\tif(!x.x) return y;\n\tnode res;ll to1,to2;\n\tif(a[y.x]-a[x.y]<55){\n\t\tto1=(1ll<<a[y.x]-a[x.y])-lmod(x.v%(1ll<<a[y.x]-a[x.y]),1ll<<a[y.x]-a[x.y])-1,to2=lmod(x.v%(1ll<<a[y.x]-a[x.y]),1ll<<a[y.x]-a[x.y]);\n\t\tif(x.v<0&&x.v%(1ll<<a[y.x]-a[x.y])) x.v=x.v/(1ll<<a[y.x]-a[x.y])-1;else x.v=x.v/(1ll<<a[y.x]-a[x.y]);\n\t}\n\telse{\n\t\tif(x.v<0) to2=inf,to1=-x.v-1;else to2=x.v,to1=inf;\n\t\tif(x.v<0) x.v=-1;else x.v=0;\n\t}\n\tif(y.r^inf) y.r-=x.v;if(y.l^inf) y.l+=x.v;\n\tif(y.r>=1ll<<55) y.r=inf;if(y.l>=1ll<<55) y.l=inf;\n\tif(y.r<=0){\n\t\ty.v++;\n\t\tif(a[y.y]-a[y.x]<55){\n\t\t\ty.r+=1ll<<a[y.y]-a[y.x];\n\t\t\tif(y.r<=0){\n\t\t\t\tll cnt=(-y.r)/(1ll<<a[y.y]-a[y.x])+1;\n\t\t\t\ty.v+=cnt,y.r+=cnt*(1ll<<a[y.y]-a[y.x]);\n\t\t\t}\n\t\t\ty.l=(1ll<<a[y.y]-a[y.x])+1-y.r;\n\t\t}\n\t\telse y.l=-y.r+1,y.r=inf;\n\t}\n\telse if(a[y.y]-a[y.x]<55) y.r=(y.r-1)%(1ll<<a[y.y]-a[y.x])+1;\n\tif(y.l<=0){\n\t\ty.v--;\n\t\tif(a[y.y]-a[y.x]<55){\n\t\t\ty.l+=1ll<<a[y.y]-a[y.x];\n\t\t\tif(y.l<=0){\n\t\t\t\tll cnt=(-y.l)/(1ll<<a[y.y]-a[y.x])+1;\n\t\t\t\ty.v-=cnt,y.l+=cnt*(1ll<<a[y.y]-a[y.x]);\n\t\t\t}\n\t\t\ty.r=(1ll<<a[y.y]-a[y.x])+1-y.l;\n\t\t}\n\t\telse y.r=-y.l+1,y.l=inf;\n\t}\n\telse if(a[y.y]-a[y.x]<55) y.l=(y.l-1)%(1ll<<a[y.y]-a[y.x])+1;\n\tres.v=y.v;\n\tif(y.r>1&&a[y.x]-a[x.x]>54||(__int128)(y.r-1)*(1ll<<a[y.x]-a[x.x])>=1ll<<55) res.r=inf;\n\telse if(to1&&a[x.y]-a[x.x]>54||(y.r-1)*(1ll<<a[y.x]-a[x.x])+x.r+(__int128)to1*(1ll<<a[x.y]-a[x.x])>=1ll<<55) res.r=inf;\n\telse res.r=(y.r-1)*(1ll<<a[y.x]-a[x.x])+x.r+to1*(1ll<<a[x.y]-a[x.x]);\n\tif(y.l>1&&a[y.x]-a[x.x]>54||(__int128)(y.l-1)*(1ll<<a[y.x]-a[x.x])>=1ll<<55) res.l=inf;\n\telse if(to2&&a[x.y]-a[x.x]>54||(y.l-1)*(1ll<<a[y.x]-a[x.x])+x.l+(__int128)to2*(1ll<<a[x.y]-a[x.x])>=1ll<<55) res.l=inf;\n\telse res.l=(y.l-1)*(1ll<<a[y.x]-a[x.x])+x.l+to2*(1ll<<a[x.y]-a[x.x]);\n\tres.x=x.x,res.y=y.y;return res;\n}\nvoid build(int &x,int l,int r){\n\tx=++tot;\n\tif(l==r){\n\t\tp[x].l=p[x].r=1;p[x].x=p[x].y=l;return ;\n\t}\n\tint mid=l+r>>1;build(ls[x],l,mid),build(rs[x],mid+1,r),p[x]=merge(p[ls[x]],p[rs[x]]);\n}\nvoid change(int x,int l,int r,int pos,int v){\n\tif(l==r){\n\t\tp[x].v+=v;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tif(mid<pos) change(rs[x],mid+1,r,pos,v);else change(ls[x],l,mid,pos,v);\n\tp[x]=merge(p[ls[x]],p[rs[x]]);\n}\nnode query(int x,int l,int r,int l1,int r1){\n\tif(l<=l1&&r1<=r){\n\t\treturn p[x];\n\t}\n\tint mid=l1+r1>>1;node res={0,0,0,0,0};\n\tif(l<=mid) res=query(ls[x],l,r,l1,mid);if(mid<r) res=merge(res,query(rs[x],l,r,mid+1,r1));\n\treturn res;\n}\nstruct ask{\n\tint op,x,y;\n}q[1000005];\nint main(){\n\tint n=re(n),t1=re(t1),t2=re(t2),t3=re(t3),rt;\n\tfor(int i=1;i<=n;i++){\n\t\tre(q[i].op);\n\t\tif(q[i].op==1) re(q[i].x),re(q[i].y),a[i]=q[i].y;\n\t\telse a[i]=re(q[i].x);\n\t}\n\tsort(a+1,a+n+1),cnt=unique(a+1,a+n+1)-a-1;build(rt,1,cnt);\n\tfor(int i=1;i<=n;i++){\n\t\tif(q[i].op==1) change(1,1,cnt,lb(a+1,a+cnt+1,q[i].y)-a,q[i].x);\n\t\telse{\n\t\t\tll x=query(1,1,lb(a+1,a+cnt+1,q[i].x)-a,1,cnt).v;\n\t\t\tcout<<(x&1)<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1662557108,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3822"
    },
    {
        "content": "\u7ed9\u4e00\u79cd\u4e0d\u540c\u7684~~\u6781\u901f~~\u505a\u6cd5\n\n\u9996\u5148\uff0c\u8981\u628a\u52a0\u6cd5\u548c\u51cf\u6cd5\u5206\u522b\u5904\u7406\uff0c\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u9ad8\u7cbe\u5b58\n\n\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u5c31\u5728\u5bf9\u5e94\u4f4d\u7f6e\u52a0\u4e0a\u8fd9\u4e2a\u6570\n\n\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u590d\u6742\u5ea6\n\n\u5047\u8bbe\u6211\u4eec\u7528\u7684\u662f\u4e0d\u538b\u4f4d\u7684\u4e8c\u8fdb\u5236\u9ad8\u7cbe\n\n\u90a3\u4e48\u8fdb\u4f4d\u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u73b0\u6709\u4e00\u5927\u5806\u4e3a1\u7684\u4f4d\u53d8\u6210\u4e860\n\n\u800c\u6267\u884c\u6bcf\u6b21\u64cd\u4f5c\u6700\u591a\u628a$\\log a_i$\u4e2a\u4f4d\u53d8\u4e3a1\n\n\u8fd9\u6837\uff0c\u603b\u590d\u6742\u5ea6\u4e0d\u4f1a\u9ad8\u4e8e$n\\log a_i$\uff0c\u800c\u538b\u4f4d\u53ea\u4f1a\u53d8\u5feb\n\n\u5982\u679c\u4e0d\u5206\u5f00\u7edf\u8ba1\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u51fa\u73b0\u4e00\u5927\u5806\u4e3a0\u7684\u4f4d\u53d8\u6210\u4e861\uff0c\u8fd9\u6837\u5c31\u53ef\u80fdTLE\n\n\u63a5\u4e0b\u6765\u8003\u8651\u64cd\u4f5c2\n\n\u8fd9\u6b65\u5b9e\u9645\u5c31\u662f\u5c06\u4e24\u4e2a\u9ad8\u7cbe\u6574\u6570\u4f4e\u4f4d\u53d6\u51fa\u76f8\u51cf\n\n\u76f4\u63a5\u51cf\u80af\u5b9a\u4e0d\u884c\uff0c\u4f46\u6211\u4eec\u53ea\u5173\u5fc3\u67d0\u4e00\u4f4d\u7684\u7ed3\u679c\n\n\u9996\u5148\uff0c\u53d6\u51fa\u4e24\u4e2a\u9ad8\u7cbe\u6574\u6570\u4e2d\u7684\u5bf9\u5e94\u4f4d\uff0c\u53d6\u5f02\u6216\n\n\u7136\u540e\uff0c\u6bd4\u8f83\u5269\u4f59\u90e8\u5206\u7684\u5927\u5c0f\uff0c\u51b3\u5b9a\u662f\u5426\u53d6\u53cd\n\n\u5b9e\u8d28\u4e0a\uff0c\u5c31\u662f\u4f4e\u4f4d\u76f8\u51cf\uff0c\u7136\u540e\u501f\u4f4d\uff0c\u518d\u628a\u9ad8\u4f4d\u76f8\u51cf\n\n\u7136\u800c\uff0c\u4e0d\u52a0\u4f18\u5316\u76f4\u63a5\u6bd4\u8f83\u80af\u5b9a\u4e0d\u884c\uff0c\u4f1aTLE\n\n\u4f46\u662f\u53d1\u73b0\uff0c\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u53ea\u6709\u4e00\u6bb5\u9700\u8981\u6bd4\u8f83\u5176\u4e2d\u67d0\u51e0\u4f4d\uff0c\u5176\u5b83\u90e8\u5206\u53ea\u9700\u8981\u6bd4\u8f83\u6574\u6bb5\uff08\u4e5f\u5c31\u662f\u4e00\u4e2aull\uff09\n\n\u8fd9\u6837\uff0c\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a\n\n\u6784\u9020\u4e24\u4e2a\u65b0\u7684\u6574\u6570\uff0c\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u539f\u6765\u7684\u4e00\u6bb5\n\n\u5982\u679c\u52a0\u6cd5\u64cd\u4f5c\u6570\u8f83\u5927\uff0c\u5219\u7b2c\u4e00\u4e2a\u6574\u6570\u8fd9\u4f4d\u4e3a1\uff0c\u7b2c\u4e8c\u4e2a\u6574\u6570\u8fd9\u4f4d\u4e3a0\n\n\u5982\u679c\u51cf\u6cd5\u64cd\u4f5c\u6570\u8f83\u5927\uff0c\u5219\u7b2c\u4e00\u4e2a\u6574\u6570\u8fd9\u4f4d\u4e3a0\uff0c\u7b2c\u4e8c\u4e2a\u6574\u6570\u8fd9\u4f4d\u4e3a1\n\n\u5982\u679c\u76f8\u7b49\uff0c\u5219\u5747\u4e3a0\uff08\u5747\u4e3a1\u4e5f\u53ef\u4ee5\uff09\n\n\u8fd9\u65f6\u53d1\u73b0\u53ea\u9700\u8981\u6bd4\u8f83\u65b0\u7684\u6574\u6570\u4e2d\u67d0\u51e0\u4f4d\u5373\u53ef\n\n\u800c\u4e14\uff0c\u8fd9\u4e2a\u95ee\u9898\u548c\u539f\u95ee\u9898\u7b49\u4ef7\uff0c\u53ea\u662f\u89c4\u6a21\u51cf\u5c0f\u4e86\n\n\u4e8e\u662f\u9012\u5f52\u5904\u7406\u5373\u53ef\n\n\u9012\u5f52\u7ed3\u675f\u6761\u4ef6\u662f\uff1a\n\n1.\u67d0\u4e00\u6b21\u6bd4\u8f83\u4e0d\u76f8\u7b49\uff0c\u8fd9\u65f6\u5c31\u80fd\u5f97\u51fa\u5927\u5c0f\u5173\u7cfb\n\n2.\u6ca1\u6709\u53ef\u6bd4\u8f83\u7684\u4f4d\uff0c\u8fd9\u65f6\u8868\u793a\u4e24\u90e8\u5206\u76f8\u7b49\n\n\u4e8e\u662f\uff0c\u5728\u64cd\u4f5c1\u7684\u65f6\u5019\u628a\u5f71\u54cd\u5230\u7684\u90e8\u5206\u66f4\u65b0\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u4e86\n\n\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6$n \\log k$\uff0c$k$\u5c31\u662f\u6700\u5927\u4f1a\u5f71\u54cd\u5230\u7684\u4f4d\n\n\u7136\u800c\u6bcf\u6b21\u9012\u5f52\u4f1a\u628a\u95ee\u9898\u89c4\u6a21\u51cf\u5c11\u5230$1/64$\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u6709\u4e00\u4e2a\u8d85\u5c0f\u5e38\u6570\n\n\u8fd9\u4e2a\u505a\u6cd5\u5e94\u8be5\u662f\u500d\u589e\u601d\u60f3\uff0c\u4e0d\u8fc7\u6bcf\u6b21\u662f64\u500d\n\n~~\u4e8e\u662f\u5c31\u6210\u6700\u4f18\u89e3\u4e86\uff0c953ms\uff0c\u6bd4\u7b2c\u4e8c\u5feb\u4e86300ms~~\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\nconst int N=1001007;\n#define u64 unsigned long long\nlong long read(){\n    long long n=0;char c=getchar();bool f=0;\n    while(c!='-'&&(c<'0'||c>'9'))c=getchar();\n    if(c=='-'){f=1;c=getchar();}\n    while(c>='0'&&c<='9'){n=n*10+c-'0';c=getchar();}\n    if(f)return -n;\n    else return n;\n}\nu64 num1[N*2],num2[N*2];\nvoid upd(u64 *s1,u64 *s2,int sz,int pl){\n    if(sz==0)return;\n    int t=pl%64;\n    int r=pl/64;\n    u64 *sn1=s1+sz+1,*sn2=s2+sz+1;\n    if(s1[pl]>s2[pl]){\n        sn1[r]|=(1ull<<t);\n        sn2[r]&=(~(1ull<<t));\n    }else if(s1[pl]<s2[pl]){\n        sn1[r]&=(~(1ull<<t));\n        sn2[r]|=(1ull<<t);\n    }else{\n        sn1[r]&=(~(1ull<<t));\n        sn2[r]&=(~(1ull<<t));\n    }\n    upd(sn1,sn2,sz/64,r);\n}\nint cmp(u64 *s1,u64 *s2,int sz,int pl){\n    if(pl==-1)return 0;\n    int t=pl%64;\n    int r=pl/64;\n    u64 a,b,m;\n    m=((1uLL<<(t+1))-1);\n    if(t==63)m=-1;\n    a=(s1[r]&m);\n    b=(s2[r]&m);\n    if(a>b)return 1;\n    if(a<b)return -1;\n    if(sz==0)return 0;//\u6ce8\u610f\u8fd9\u53e5\u8981\u653e\u5728\u540e\u9762\uff0c\u5426\u521980\u5206\n    return cmp(s1+sz+1,s2+sz+1,sz/64,r-1);\n}\n\nint n,sz,t;\nint opt;\nlong long a,b;\nu64 num;\nint main(){\n    n=read();t=read();t=read();t=read();\n    sz=1001000;\n    while(n--){\n        opt=read();\n        if(opt==1){\n            a=read();b=read();\n            \n            if(a==0)continue;\n            if(a>0){\n                num=a;\n                int t=b%64;\n                int r=b/64;\n                num1[r]+=(num<<t);\n                upd(num1,num2,sz,r);\n                if(num1[r]<(num<<t)){\n                    num>>=(64-t);\n                    if(t==0)num=0;\n                    num++;\n                }else{\n                    num>>=(64-t);\n                    if(t==0)num=0;\n                }\n                if(num==0)continue;\n                r++;\n                num1[r]+=num;\n                upd(num1,num2,sz,r);\n                while(num1[r]==0){\n                    r++;\n                    num1[r]++;\n                    upd(num1,num2,sz,r);\n                }\n            }else{\n                num=-a;\n                int t=b%64;\n                int r=b/64;\n                num2[r]+=(num<<t);\n                upd(num1,num2,sz,r);\n                if(num2[r]<(num<<t)){\n                    num>>=(64-t);\n                    if(t==0)num=0;\n                    num++;\n                }else{\n                    num>>=(64-t);\n                    if(t==0)num=0;\n                }\n                if(num==0)continue;\n                r++;\n                num2[r]+=num;\n                upd(num1,num2,sz,r);\n                while(num2[r]==0){\n                    r++;\n                    num2[r]++;\n                    upd(num1,num2,sz,r);\n                }\n            }\n        }else{\n            a=read();\n            int t=a%64;\n            int r=a/64;\n            int bit=0;\n            if(num1[r]&(1uLL<<t))bit^=1;\n            if(num2[r]&(1uLL<<t))bit^=1;\n            if(a!=0&&cmp(num1,num2,sz,a-1)==-1)bit^=1;\n            if(bit)puts(\"1\");\n            else puts(\"0\");\n        }\n    }\n}\n```\n~~\u5176\u5b9e\u662f\u56e0\u4e3a\u6211\u4e0d\u60f3\u5199\u6570\u636e\u7ed3\u6784\u624d\u60f3\u51fa\u7684\u8fd9\u4e2a\u65b9\u6cd5~~",
        "postTime": 1561126179,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3822 \u3010[NOI2017]\u6574\u6570\u3011"
    },
    {
        "content": " http://www.elijahqi.win/archives/2919\nhttps://blog.csdn.net/elijahqi/article/details/79832161\n\n\n\u8003\u8651\u5229\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b \u56e0\u4e3a\u4f4d\u6570\u592a\u591a \u6211\u9009\u62e9\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e00\u4e2a\u8282\u70b9\u538b30\u4f4d  \u7136\u540e\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55len0,len1\u8868\u793a\u6700\u957f\u5ef6\u4f38\u76841\u62160\u7684\u957f\u5ea6 \u6211\u7684\u7ebf\u6bb5\u6811\u5de6\u8fb9\u4f4e\u4f4d\u53f3\u8fb9\u9ad8\u4f4d \u5728\u5de6\u52a0\u6cd5\u7684\u65f6\u5019\u5c06a\u62c6\u5206\u6210\u4e24\u4e2a\u5148\u52a0\u540e\u534a\u90e8\u5206 \u5982\u679c\u6709\u8fdb\u4f4d \u90a3\u4e48\u6211\u5c31\u52a0\u5230\u524d\u534a\u90e8\u5206\u7136\u540e\u518d\u53bb\u7ebf\u6bb5\u6811\u4e0a\u52a0\u8fd9\u4e2a\u8282\u70b9 \u5982\u679c\u8fd8\u6709\u8fdb\u4f4d\u6211\u5c31\u67e5\u8be2\u4e00\u4e0b\u6700\u957f\u7684\u8fde\u7eed1\u5ef6\u4f38\u5230\u54ea\u91cc\u4e2d\u95f4\u5168\u90e8\u6539\u62100\u524d\u9762\u6539\u62101  \u5728\u67e5\u8be2\u7684\u65f6\u5019\u5c31\u7c7b\u4f3cupdate\u7684\u65f6\u5019\u4e00\u6837 \u5982\u679c\u4f4d\u7f6e\u5728\u5de6\u8fb9\u6211\u5224\u65ad\u4e0b\u53f3\u8fb9\u662f\u5426\u8fde\u7eed \u5982\u679c\u8fde\u7eed\u90a3\u4e48\u6211\u7684\u8fde\u7eed\u957f\u5ea6\u5c31\u8981\u52a0\u4e0a\u4ed6 \u7136\u540e\u4e00\u8def\u627e\u4e0b\u53bb\u5373\u53ef\n\n\u8d1f\u6570\u7684\u60c5\u51b5 \u7c7b\u4f3c\u6574\u6570 \u9996\u5148\u53d6\u7edd\u5bf9\u503c \u7136\u540e\u6bcf\u6b21\u6539\u7684\u65f6\u5019\u5f80\u91cc\u9762\u6539\u8d1f\u6570\u5373\u53ef\n\n\u5199\u7684\u65f6\u5019\u5361\u4e86\u5361\u5e38 \u7136\u800c\u8fd8\u662f\u8fd9\u4e48\u6162qwq\n\n\u611f\u8c22pickupwin\u5de8\u4f6c\u5e2e\u5fd9\u67e5\u9519 \u505a\u9898debug\u4e00\u5929 \u95ee\u4e86\u5de8\u4f6c\u4e00\u4e0b\uff0c\u5de8\u4f6c\u5c31\u5e2e\u6211\u770b\u51fa\u6765\u9519\u8bef\u4e86\n```\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\n#define N 1000010\n#define lc (x<<1)\n#define rc (x<<1|1)\nint n0=30;\nconst int full=(1<<n0)-1;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\ninline int read(){\n    int x=0,f=1;char ch=gc();\n    while(!isdigit(ch)) {if (ch=='-') f=-1;ch=gc();}\n    while(isdigit(ch)) x=x*10+ch-'0',ch=gc();\n    return x*f;\n}\nconst int OUT_LEN = 1024 * 1024;\nchar obuf[OUT_LEN], *oh = obuf;\ninline void write_char(char c) {\n    if (oh == obuf + OUT_LEN) fwrite(obuf, 1, OUT_LEN, stdout), oh = obuf;\n    *oh++ = c;\n}\ntemplate<class T>\ninline void W(T x) {\n    static int buf[30], cnt;\n    if (x == 0) write_char('0');\n    else {\n        if (x < 0) write_char('-'), x = -x;\n        for (cnt = 0; x; x /= 10) buf[++cnt] = x % 10 + 48;\n        while (cnt) write_char(buf[cnt--]);\n    }\n}\ninline void flush() {\n    fwrite(obuf, 1, oh - obuf, stdout);\n}\nstruct node{\n    int len0,len1,v,tag;//tag=-1->0 tag=1->full\n}tree[N<<2];\ninline void update(int x,int l,int r,int mid){\n    int len=mid-l+1;\n    tree[x].len0=(tree[lc].len0==len)*tree[rc].len0+tree[lc].len0;\n    tree[x].len1=(tree[lc].len1==len)*tree[rc].len1+tree[lc].len1;\n}\ninline void dochange(int x,int l,int r,int v){\n    if (v==full){\n        tree[x].v=full;tree[x].len0=0;tree[x].len1=r-l+1;tree[x].tag=2;return;\n    }tree[x].v=0;tree[x].len1=0;tree[x].len0=r-l+1;tree[x].tag=-1;\n}\ninline void pushdown(int x,int l,int r){\n    if (!tree[x].tag) return;int mid=l+r>>1;\n    dochange(lc,l,mid,tree[x].tag==-1?0:full);\n    dochange(rc,mid+1,r,tree[x].tag==-1?0:full);\n    tree[x].tag=0;\n}\ninline bool modify(int x,int l,int r,int l1,int r1,int v){\n    if (l1<=l&&r1>=r){\n        tree[x].v+=v;bool flag=0;tree[x].len0=tree[x].len1=0;\n        if (tree[x].v>full) tree[x].v&=full,flag=1;\n        if (tree[x].v<0) tree[x].v+=full+1,flag=1;\n        if (tree[x].v==full) tree[x].tag=2,tree[x].len1=r-l+1;\n        if (!tree[x].v) tree[x].tag=-1,tree[x].len0=r-l+1;return flag;\n    }int mid=l+r>>1;pushdown(x,l,r);bool tmp=0;\n    if (l1<=mid) tmp|=modify(lc,l,mid,l1,r1,v);\n    if (r1>mid) tmp|=modify(rc,mid+1,r,l1,r1,v);update(x,l,r,mid);return tmp;\n}\ninline void change(int x,int l,int r,int l1,int r1,int v){\n    if (l1>r1) return;\n    if (l1<=l&&r1>=r) {dochange(x,l,r,v);return;}\n    int mid=l+r>>1;pushdown(x,l,r);\n    if (l1<=mid) change(lc,l,mid,l1,r1,v);\n    if (r1>mid) change(rc,mid+1,r,l1,r1,v);update(x,l,r,mid);\n}\ninline bool query(int x,int l,int r,int p,int k){\n    if(l==r) return (tree[x].v>>k)&1;int mid=l+r>>1;pushdown(x,l,r);\n    if (p<=mid) return query(lc,l,mid,p,k);\n    else return query(rc,mid+1,r,p,k);\n}\ninline int lg(int x){\n    static int cnt;cnt=0;while(x) ++cnt,x>>=1;return cnt;\n}\ninline int qr1(int x,int l,int r,int p,int len){\n    if (l==r) return tree[x].len1==0?0:tree[x].len1+len;int mid=l+r>>1;pushdown(x,l,r);\n    if(p<=mid){\n        if (tree[rc].len1==r-mid) return qr1(lc,l,mid,p,len+tree[rc].len1);\n        return qr1(lc,l,mid,p,tree[rc].len1);\n    }return qr1(rc,mid+1,r,p,len);      \n}\ninline int qr0(int x,int l,int r,int p,int len){\n    if (l==r) return tree[x].len0==0?0:tree[x].len0+len;int mid=l+r>>1;pushdown(x,l,r);\n    if(p<=mid){\n        if (tree[rc].len0==r-mid) return qr0(lc,l,mid,p,len+tree[rc].len0);\n        return qr0(lc,l,mid,p,tree[rc].len0);\n    }return qr0(rc,mid+1,r,p,len);\n}\ninline int abs(int x){return x<0?-x:x;}\nint n,t1,t2,t3,bin[30];\nint main(){\n    //freopen(\"bzoj4942.in\",\"r\",stdin);\n    //freopen(\"bzoj4942.out\",\"w\",stdout);\n    n=read();t1=read();t2=read();t3=read();dochange(1,0,1e6,0);\n    for (int i=0;i<=29;++i) bin[i]=(1<<i+1)-1;\n    for (int i=1;i<=n;++i){\n        static int op,a,b,k,b1,r,b2;static bool tmp;op=read();\n        if (op==1){\n            a=read(),b=read();b1=b/n0,b2=b%n0;\n            if (a>0){\n                tmp=modify(1,0,1e6,b1,b1,(a&(bin[n0-b2-1]))*(1<<b2));\n                a>>=n0-b2;a+=tmp;if (!a) continue;\n                tmp=modify(1,0,1e6,b1+1,b1+1,a);if (!tmp) continue;\n                r=qr1(1,0,1e6,b1+2,0);change(1,0,1e6,b1+2,b1+2+r-1,0);\n                modify(1,0,1e6,b1+2+r,b1+2+r,1);\n            }else{a=abs(a);\n                tmp=modify(1,0,1e6,b1,b1,-(a&(bin[n0-b2-1]))*(1<<b2));\n                a>>=n0-b2;a+=tmp;if (!a) continue;\n                tmp=modify(1,0,1e6,b1+1,b1+1,-a);if (!tmp) continue;\n                r=qr0(1,0,1e6,b1+2,0);change(1,0,1e6,b1+2,b1+2+r-1,full);\n                modify(1,0,1e6,b1+2+r,b1+2+r,-1);\n            }\n        }else{\n            k=read();static int tmp;\n            tmp=k/n0;k%=n0;W(query(1,0,1e6,tmp,k));write_char('\\n');\n        }\n    }flush();\n    return 0;\n}\n```",
        "postTime": 1522986317,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3822 \u3010[NOI2017]\u6574\u6570\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u7ebf\u6bb5\u6811\u7684\u601d\u8def\n\n### \u9898\u76ee\u5206\u6790\n\n\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u4e24\u4e2a\u53c2\u6570 $a,b$\uff0c\u5176\u4e2d\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u662f\u4e8c\u8fdb\u5236\u7b2c $b$ \u4f4d\u4e0a\u7684\u7cfb\u6570\u3002\u8fd9\u662f\u6211\u4eec\u4e0d\u514d\u60f3\u5230\u9ad8\u7cbe\u3002\n\n\u663e\u7136\u76f4\u63a5\u6734\u7d20\u7ef4\u62a4\u9ad8\u7cbe\u4e0d\u53ef\u53d6\u3002\u6bcf\u6b21\u76f4\u63a5\u66f4\u6539\u53ef\u80fd\u4f1a\u4fee\u6539 $O(n)$ \u4f4d\u3002\u5982\u5f53\u524d $x=2^{10^6}$ \uff0c\u6b64\u65f6\u6211\u4eec\u53cd\u590d\u8fdb\u884c $+1$ \u548c $-1$ \u64cd\u4f5c\uff0c\u6bcf\u4e00\u4f4d\u4e0a\u90fd\u4f1a\u53d1\u751f\u6539\u53d8\u3002\n\n\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u7ef4\u62a4\u9ad8\u7cbe\u7684\u65b9\u6cd5\u4e0d\u53ef\u53d6\u3002\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u6bcf\u4e00\u6b21\u4fee\u6539\u5bf9 $x$ \u6bcf\u4e00\u4f4d\u4e0a\u7684\u5f71\u54cd\uff0c\u5982\u8bbe $x=(1100011110010111)_ 2$\uff0c\u6211\u4eec\u5bf9\u5b83\u8fdb\u884c\u52a0 $a=(111100000)_ 2$ \u64cd\u4f5c\uff0c\u4e0d\u59a8\u7ad6\u5f0f\u6765\u89c2\u5bdf\n\n$$\n\\begin{aligned}\n& x&=&&1100011110010111\\\\\n& a&=&&111100000\\\\\n& x^\\prime&=&&1100100101110111\n\\end{aligned}\n$$\n\n\u6211\u4eec\u53ef\u4ee5\u5c06 $x^\\prime$ \u5206\u4e3a $5$ \u4e2a\u90e8\u5206\uff1a\n\n$$\n\\begin{aligned}\n& x&=&&{\\color{red}{1100}}{\\color{Purple}{0}}{\\color{Goldenrod}11}{\\color{Magenta}{1100}}{\\color{lightblue}{10111}}\\\\\n& a&=&&{\\color{Magenta}1111}{\\color{lightblue}00000}\\\\\n& x^\\prime&=&&{\\color{red}{1100}}{\\color{Purple}{1}}{\\color{Goldenrod}00}{\\color{Magenta}{1011}}{\\color{lightblue}{10111}}\n\\end{aligned}\n$$\n\n\u7ea2\u8272\uff1a\u52a0\u6cd5\u8fdb\u4f4d\u6ca1\u6709\u5f71\u54cd\u5230\u7684\u4f4d\u7f6e\u3002\n\n\u7d2b\u8272\uff1a\u52a0\u6cd5\u8fdb\u4f4d\u5f71\u54cd\u5230\u7684\u4f4d\u7f6e\uff0c\u4f7f\u4e4b\u52a0 $1$\u3002\n\n\u9ec4\u8272\uff1a\u52a0\u6cd5\u8fdb\u4f4d\u5f71\u54cd\u5230\u7684\u4f4d\u7f6e\uff0c\u4f7f\u53d8\u4e3a $0$\u3002\n\n\u7c89\u8272\uff1a\u52a0\u6cd5\u76f4\u63a5\u5f71\u54cd\u5230\u7684\u4f4d\u7f6e\uff0c\u76f4\u63a5\u8ba1\u7b97\uff0c\u5bf9\u5e94 $a\\times2^b$ \u7684\u90e8\u5206\u3002\n\n\u84dd\u8272\uff1a\u52a0\u6cd5\u6ca1\u6709\u5f71\u54cd\u5230\u7684\u4f4d\u7f6e\uff0c\u5bf9\u5e94\u540e $b-1$ \u4f4d\u3002\n\n### \u601d\u8def\n\n\u6ce8\u610f\u5230\u6709\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\uff0c\u67e5\u8be2\u5f53\u524d\u5f80\u5de6\u7b2c\u4e00\u4e2a $0$ \u7684\u4f4d\u7f6e\uff0c\u5f53\u524d\u5f80\u5de6\u7b2c\u4e00\u4e2a $1$ \u7684\u4f4d\u7f6e\u3002\u663e\u7136\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u5355\u6b21\u8981\u4fee\u6539 $O(\\log a)$ \u4f4d\uff0c\u90a3\u4e48\u5230\u7ebf\u6bb5\u6811\u4e0a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log ^2n)$ \uff0c\u663e\u7136\u8fd8\u4e0d\u591f\u4f18\u79c0\u3002\u8003\u8651\u538b\u4f4d\uff0c\u8bbe\u6bcf $w$ \u4f4d\u538b\u4e3a\u4e00\u4f4d\u3002\u90a3\u4e48\u5355\u6b21\u4fee\u6539\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n+\\dfrac {\\log^2 n} w)$\uff0c\u5f53 $w$ \u53d6\u5230 $\\log n$ \u65f6\u6700\u4f73\u3002\u6ce8\u610f\u53f6\u8282\u70b9\u7684\u533a\u95f4\u8986\u76d6\u5bf9\u5e94\u6309\u4f4d\u4e0e\u8fd0\u7b97\u3002\n\n\u4ee3\u7801\u7565\u3002",
        "postTime": 1630844802,
        "uid": 148195,
        "name": "gcwixsxr",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3822 \u3010 [NOI2017] \u6574\u6570\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u6765\u81ea CF \u5927\u4f6c adament \u7684[\u6709\u8da3\u601d\u8def](https://codeforces.com/blog/entry/115626)\u3002\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u7684\u662f\u4e00\u4e2a\u53ea\u589e\u52a0\u7684 $b$ \u8fdb\u5236\u6574\u6570\u8ba1\u6570\u5668\uff0c\u5982\u679c $b$ \u662f\u5e38\u6570\u90a3\u4e48\u590d\u6742\u5ea6\u662f\u5747\u644a $O(1)$ \u7684\u3002\u8bc1\u660e\u53ea\u9700\u8981\u8003\u8651\u5c06 $b$ \u8fdb\u5236\u4e2d\u4e3a $b-1$ \u7684\u6240\u6709\u4f4d\u7684\u4f4d\u6570\u5f53\u6210\u52bf\u80fd\uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u8fdb\u4f4d\u4e00\u5b9a\u662f $b-1\\to 0$ \u4e00\u5b9a\u4f1a\u6d88\u8017\u52bf\u80fd\u51fd\u6570\u3002\n\n\u4f46\u8fd9\u9053\u9898\u6709\u52a0\u53c8\u6709\u51cf\uff0c\u95ee\u9898\u51fa\u5728\u4e86\u53ef\u80fd\u6709\u201c\u9000\u4f4d\u201d $0\\to b-1$\uff0c\u8fd9\u65f6\u5bfc\u81f4\u4e86\u52bf\u80fd\u51fd\u6570\u7684\u589e\u52a0\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5747\u644a\u7b97\u6cd5\u901a\u5e38\u4e0d\u80fd\u652f\u6301\u64a4\u56de\u3002\u5e38\u89c4\u7684\u505a\u6cd5\u662f\u628a\u52a0\u51cf\u5206\u5f00\u8003\u8651\u53d8\u6210\u53ea\u52a0\u7684\u60c5\u51b5\u3002\u5176\u5b9e\u8fd8\u6709\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u505a\u6cd5\uff1a\u6211\u4eec\u4e0d\u9650\u5236\u4e00\u4e2a\u4f4d\u4e0a\u7684\u503c\u4e00\u5b9a\u662f $[0,b)$ \u7684\uff0c\u800c\u662f $(-b,b)$\u3002\u6b64\u65f6\u7684\u8fdb\u4f4d/\u9000\u4f4d\u7684\u5f62\u5f0f\u90fd\u662f $1-b\\to 0$ \u6216 $b-1 \\to 0$\u3002\u6211\u4eec\u5c06**\u975e\u96f6\u4f4d**\u7684\u4e2a\u6570\u5f53\u6210\u52bf\u80fd\uff0c\u8fd9\u6837\u8fdb\u4f4d/\u9000\u4f4d\u90fd\u4f1a\u51cf\u5c0f\u52bf\u80fd\uff0c\u800c\u52bf\u80fd\u51fd\u6570\u7684\u603b\u91cf\u5c31\u662f $O(n)$ \u7684\u4e86\u3002\n\n\u7136\u800c\u73b0\u5728\u8981\u67e5\u8be2\u539f\u6570\u67d0\u4e00\u4f4d\uff0c\u5982\u4f55\u6765\u8fd8\u539f\u539f\u6570\u7684\u4e00\u4f4d\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u8fdb\u4f4d\u5bf9\u4e8e\u4e0b\u4e00\u4f4d\u7684\u5f71\u54cd\u603b\u662f $\\pm 1$ \u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u6211\u4eec\u5f53\u524d\u67e5\u8be2\u7684\u4f4d\u7684\u4e25\u683c\u975e\u96f6\u524d\u9a71\uff0c\u5224\u65ad\u4e00\u4e0b\u5b83\u662f\u5426\u4e3a\u8d1f\uff0c\u5982\u679c\u662f\u5f53\u524d\u4f4d\u5c31\u9700\u8981 $-1$ \u7136\u540e\u8f93\u51fa\u3002\n\n\u5177\u4f53\u5230\u8fd9\u9898\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6570 $T$ \u4e2a\u538b\u6210\u4e00\u4f4d\uff0c\u6211\u5b9e\u73b0\u538b\u4e86 $62$ \u4f4d\u3002\u7ef4\u62a4\u52a8\u6001\u524d\u9a71\u7528\u4e86 zkw \u7ebf\u6bb5\u6811\u4e0a finger search\uff08\u53ea\u662f\u51cf\u5c0f\u5e38\u6570\uff09\u3002\u8f93\u51fa\u65f6\u6709\u4e2a\u5c0f\u6280\u5de7\uff0c\u8d1f\u6570\u7684\u8865\u7801\u5b9e\u9645\u4e0a\u5c31\u662f\u5b83\u5728\u4e8c\u8fdb\u5236\u4e0b\u7684\u8868\u793a\uff0c\u6240\u4ee5\u63d0\u53d6\u8d1f\u6570\u7684\u67d0\u4e00\u7ef4\u53ef\u4ee5\u76f4\u63a5\u8ddf\u6b63\u6570\u4e00\u8d77\u4f4d\u8fd0\u7b97\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\u975e\u5e38\u597d\u5199\uff0c\u8dd1\u5f97\u4e5f\u98de\u5feb\uff0c\u590d\u6742\u5ea6 $O(\\frac{30n\\log n}{T})$\u3002\n\n\n```cpp\n#include <cstdio>\n#include <bitset>\nusing namespace std;\nint read(){\n\tchar c=getchar();int x=0;bool f=0;\n\twhile(c<48||c>57) f|=(c=='-'),c=getchar();\n\tdo x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\twhile(c>=48&&c<=57);\n\tif(f) return -x;\n\treturn x;\n}\nconst int lT=62,sT=30;\ntypedef long long ll;\nconst ll Base=(1ll<<lT);\nint q,dlt;\nnamespace ds{\n\tbitset<1<<20> f;\n\tvoid ins(int x){\n\t\tx+=dlt;\n\t\twhile(!f[x]) f[x]=1,x>>=1;\n\t}\n\tvoid del(int x){\n\t\tx+=dlt;\n\t\twhile(f[x]){\n\t\t\tf[x]=0;\n\t\t\tif(f[x^1]) return;\n\t\t\tx>>=1;\n\t\t}\n\t}\n\tint pre(int x){\n\t\tif(!x) return -1;\n\t\tx+=dlt-1;\n\t\tif(f[x]) return x-dlt;\n\t\twhile(x>1){\n\t\t\tif((x&1)&&f[x^1]) break;\n\t\t\tx>>=1;\n\t\t}\n\t\tx^=1;\n\t\tif(!x) return -1;\n\t\twhile(x<dlt){x<<=1;if(f[x^1]) x^=1;}\n\t\treturn x-dlt;\n\t}\n}\nll a[500003];\nvoid upd(int x,ll v){\n\tif(!v) return;\n\tif(!a[x]) ds::ins(x);\n\ta[x]+=v;\n\tif(!a[x]) ds::del(x);\n}\nvoid inc(int x,int t){\n\tbool sig=0;\n\tif(x<0) sig=1,x=-x;\n\tint bl=t/lT,wid=lT*(bl+1)-t;\n\tif(wid>sT) wid=sT;\n\tif(sig){\n\t\tupd(bl,-((ll)(x&((1ll<<wid)-1))<<(t-bl*lT)));\n\t\tupd(bl+1,-(x>>wid));\n\t}\n\telse{\n\t\tupd(bl,(ll)(x&((1ll<<wid)-1))<<(t-bl*lT));\n\t\tupd(bl+1,(x>>wid));\n\t}\n\tll tmp=0;\n\tint fl=0;\n\tdo{\n\t\tupd(bl,tmp);\n\t\ttmp=a[bl]/Base;\n\t\tupd(bl,-Base*tmp);\n\t\t++bl;++fl;\n\t}while(fl<2||tmp);\n}\nbool qry(int x){\n\tint bl=x/lT,p=ds::pre(bl);x%=lT;\n\tif(p>=0&&a[p]<0) return (a[bl]-1)>>x&1;\n\telse return a[bl]>>x&1;\n}\nint main(){\n\tq=read();read();read();read();\n\tfor(dlt=1;dlt<=(q>>1)+1;dlt<<=1);\n\twhile(q--){\n\t\tint op=read(),x=read();\n\t\tif(op==1) inc(x,read());\n\t\telse printf(\"%d\\n\",qry(x));\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1682864278,
        "uid": 163729,
        "name": "yyyyxh",
        "ccfLevel": 7,
        "title": "\u518d\u89e3 [NOI2017] \u6574\u6570"
    },
    {
        "content": "\u8003\u8651\u5355\u70b9\u52a0 $\\pm1$\uff0c\u4ee5 $+1$ \u4e3a\u4f8b\uff0c\u76f4\u63a5\u7ebf\u6bb5\u6811\u67e5\u627e\u524d\u9a71 $0$ \u53d8\u4e3a $1$\uff0c\u5c06\u8fd9\u4e4b\u540e\u7684 $1$ \u533a\u95f4\u63a8\u5e73\u4e3a $0$\uff0c\u5c31\u662f $O(\\log n)$ \u7684\u3002\n\n\u82e5\u591a\u70b9\u589e\u52a0\uff0c\u4f46\u662f\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u64cd\u4f5c\u662f\u63a8\u5e73\uff0c\u800c\u591a\u6b21\u52a0 $1$ \u7684\u8ddd\u79bb\u4e0d\u8d85\u8fc7 $\\log_2V$\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5bf9\u8fd9 $O(\\log V)$ \u957f\u5ea6\u7684\u533a\u95f4\u66b4\u529b\u66f4\u65b0\uff0c\u518d\u66b4\u529b\u91cd\u6784\u5176\u6240\u5728\u533a\u95f4\u7684\u5b50\u6811\u3002\u7136\u540e\u5269\u4e0b\u6700\u591a\u5c31\u53ea\u9700\u8981\u8dd1\u4e00\u4e2a\u63a8\u5e73\u64cd\u4f5c\uff0c\u5176\u5de6\u7aef\u70b9\u8d85\u51fa\u8fd9\u4e2a\u533a\u95f4\uff0c\u76f4\u63a5\u66f4\u65b0\uff0c\u5c31\u4ecd\u4e3a $O(\\log n+\\log V)$\u3002\n\n> \u5176\u5b9e\u8003\u8651\u5230\u8fd9\u91cc\u5c31\u5bb9\u6613\u60f3\u5230\u538b\u4f4d\u4e86\uff0c\u8fd9\u6837\u65f6\u95f4\u548c\u7a7a\u95f4\u90fd\u76f4\u63a5\u6ee1\u8db3\u4e86\u3002\n\n\u6700\u540e\u4e00\u4e2a\u70b9\u662f\u5173\u4e8e\u7a7a\u95f4\uff0c\u5f00 $30n$ \u7684\u503c\u57df\u5341\u5206\u5371\u9669\uff0c\u8003\u8651\u5230\u4e0a\u8ff0\u64cd\u4f5c\u7684\u7aef\u70b9\u6700\u591a\u53ea\u6709\uff1a\u6bcf\u4e2a\u64cd\u4f5c\u6240\u5728\u7684\u4f4d\u7f6e\u53ca\u5176\u9ad8\u4e00\u4f4d\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u79bb\u6563\u5316\u5373\u53ef $O(n)$ \u7a7a\u95f4\u3002",
        "postTime": 1682752966,
        "uid": 62440,
        "name": "MuelsyseU",
        "ccfLevel": 0,
        "title": "P3822 [NOI2017] \u6574\u6570 \u9898\u89e3"
    },
    {
        "content": "\u4e00\u4e2a\u65e0\u4efb\u4f55\u601d\u8003\u96be\u5ea6\u7684\u89e3\u6cd5\uff0c\u5c31\u662f\u5e38\u6570\u6709\u70b9\u5927\u3002\n\n\u8003\u8651 $\\pm 2^b$ \u600e\u4e48\u505a\u3002\u6211\u4eec\u4e00\u5b9a\u662f\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5230 $b$ \u5f00\u59cb\u7684\u4e00\u6bb5\u8fde\u7eed $0$ \u6216\u8005 $1$ \u6bb5\uff0c\u7136\u540e flip \u4e00\u4e0b\u3002\n\n\u7136\u540e\u8003\u8651 $\\pm a$ \u600e\u4e48\u505a\u3002$a$ \u6700\u591a\u662f $V=10^9$ \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u66b4\u529b\u53d6\u51fa $[b,b+29]$ \u4f4d\u7684\u7ebf\u6bb5\u6811\u4e0a\u7684\u53f6\u8282\u70b9\uff0c\u4fee\u6539\u540e pushup\u3002\u8fd9\u4e2a\u64cd\u4f5c\u9700\u8981\u7528\u5230\u7684\u8282\u70b9\u6570\u662f $\\log V+\\log n$ \u7684\u3002\u7136\u540e\u53ef\u80fd\u4f1a\u6709\u5230 $b+30$ \u4f4d\u7684\u8fdb\u4f4d\u6216\u9000\u4f4d\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a $\\pm 2^b$ \u7684\u95ee\u9898\u4e86\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log V)$\u3002\u7ebf\u6bb5\u6811\u53ef\u80fd\u9700\u8981\u5361\u5361\u7a7a\u95f4\uff0c\u4e0d\u8fc7\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a tag\uff08\u53ef\u4ee5\u7528 bitset \u5b58\uff09\uff0c\u5b50\u6811\u5185 $1$ \u4e2a\u6570\u8fd8\u6709\u5de6\u513f\u5b50\uff08\u53f3\u513f\u5b50\u8bbe\u4e3a\u5de6\u513f\u5b50\u52a0\u4e00\uff09\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u552f\u4e00\u7684\u7f3a\u70b9\u662f\u8dd1\u7684\u786e\u5b9e\u6bd4\u8f83\u6162\uff0c\u4f46\u662f\u6b63\u5e38\u5199\u80af\u5b9a\u80fd\u8fc7\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\n#define fi first\n#define se second\n#define eb emplace_back\n#define popc __builtin_popcount\n#define clz __builtin_clz\n#define ctz __builtin_ctz\n#define sgn(x) ((x)&1?-1:1)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef tuple<int,int,int> tiii;\ntypedef vector<int> vi;\ntypedef vector<pii> vp;\ntypedef unsigned long long ull;\ntypedef long double ld;\n \nint read() {\n\tint x=0,w=1; char c=getchar(); \n\twhile(!isdigit(c)) {if(c=='-') w=-1; c=getchar();}\n\twhile(isdigit(c)) {x=x*10+c-'0'; c=getchar();}\n\treturn x*w;\n}\n\nconst int N=30000100,lim=30000052;\nint n,t1,t2,t3,y;\n\nnamespace SegT {\n\tint t[N<<1],ls[N<<1],tot=1,st[5009],top,f[5009],cnt,p[5009];\n\t#define rs(p) (ls[p]+1)\n\tbitset<N*2>tag;\n\tvoid flip(int p,int l,int r) {t[p]=r-l+1-t[p], tag[p]=tag[p]^1;}\n\tvoid psu(int p) {t[p]=t[ls[p]]+t[ls[p]+1];}\n\tvoid psd(int p,int l,int r) {\n\t\tint mid=l+r>>1;\n\t\tif(tag[p]) flip(ls[p],l,mid), flip(ls[p]+1,mid+1,r), tag[p]=0;\n\t}\n\tvoid build(int p,int l,int r) {\n\t\tif(l==r) {t[p]=0; return;} int mid=l+r>>1;\n\t\t++tot, ++tot, build(ls[p]=tot-1,l,mid), build(ls[p]+1,mid+1,r);\n\t\tpsu(p);\n\t}\n\tint qry(int p,int l,int r,int x) {\n\t\tif(l==r) return t[p]; psd(p,l,r); int mid=l+r>>1;\n\t\tif(x<=mid) return qry(ls[p],l,mid,x);\n\t\telse return qry(ls[p]+1,mid+1,r,x);\n\t}\n\tvoid get(int p,int l,int r,int x,int y) {\n\t\tif(l==r) {f[++cnt]=p; return;}\n\t\tpsd(p,l,r); int mid=l+r>>1; st[++top]=p;\n\t\tif(y<=mid) get(ls[p],l,mid,x,y);\n\t\telse if(x>mid) get(ls[p]+1,mid+1,r,x,y);\n\t\telse get(ls[p],l,mid,x,mid), get(ls[p]+1,mid+1,r,mid+1,y);\n\t}\n\tvoid flip(int p,int l,int r,int x,int y) {\n\t\tif(l==x&&r==y) {flip(p,l,r); return;}\n\t\tpsd(p,l,r); int mid=l+r>>1;\n\t\tif(y<=mid) flip(ls[p],l,mid,x,y);\n\t\telse if(x>mid) flip(ls[p]+1,mid+1,r,x,y);\n\t\telse flip(ls[p],l,mid,x,mid), flip(ls[p]+1,mid+1,r,mid+1,y);\n\t\tpsu(p);\n\t}\n\tbool add(int p,int l,int r,int x) {\n\t\tif(!(r-l+1-t[p])) return 0;\n\t\tif(l==r) {flip(1,0,lim,x,l); return 1;} int mid=l+r>>1; psd(p,l,r);\n\t\tif(x>mid||!(r-l+1-t[ls[p]])) return add(ls[p]+1,mid+1,r,x);\n\t\telse if(!add(ls[p],l,mid,x)) return add(ls[p]+1,mid+1,r,x);\n\t\telse return 1;\n\t}\n\tbool mns(int p,int l,int r,int x) {\n\t\tif(!t[p]) return 0;\n\t\tif(l==r) {flip(1,0,lim,x,l); return 1;} int mid=l+r>>1; psd(p,l,r);\n\t\tif(x>mid||!t[ls[p]]) return mns(ls[p]+1,mid+1,r,x);\n\t\telse if(!mns(ls[p],l,mid,x)) return mns(ls[p]+1,mid+1,r,x);\n\t\telse return 1;\n\t}\n\tvoid modify(int a,int b) {\n\t\tcnt=0, top=0, get(1,0,lim,b,b+29);\n\t\trep(i,1,31) p[i]=0;\n\t\trep(i,1,30) p[i]=t[f[i]];\n\t\tint tp=0; if(a<0) tp=1, a=-a;\n\t\trep(i,1,30) {\n\t\t\tint x=a&1; a>>=1;\n\t\t\tif(tp==0) p[i]+=x;\n\t\t\telse p[i]-=x;\n\t\t\tif(p[i]>=2) p[i]-=2, p[i+1]++;\n\t\t\telse if(p[i]<0) p[i]+=2, p[i+1]--;\n\t\t}\n\t\trep(i,1,30) if(p[i]!=t[f[i]]) flip(f[i],b+i-1,b+i-1);\n\t\tper(i,top,1) psu(st[i]);\n\t\tif(p[31]>0) add(1,0,lim,b+30);\n\t\telse if(p[31]<0) mns(1,0,lim,b+30);\n\t}\n}\n\nsigned main() {\n\tn=read(), t1=read(), t2=read(), t3=read();\n\tSegT::build(1,0,lim);\n\trep(i,1,n) {\n\t\tint op=read();\n\t\tif(op==1) {\n\t\t\tint a=read(), b=read();\n\t\t\tSegT::modify(a,b);\n\t\t} else {\n\t\t\tint res, k=read();\n\t\t\tprintf(\"%d\\n\",res=SegT::qry(1,0,lim,k));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1680081201,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "P3822"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u66b4\u529b\uff0c\u7528\u5e03\u5c14\u578b\u6570\u7ec4\u50a8\u5b58\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u503c\uff08$0$ \u6216 $1$\uff09\uff0c\u66b4\u529b\u6309\u4f4d\u4fee\u6539\u3002\n\n\u4f46\u662f\u78b0\u5230\u52a0\u8d1f\u6570\u65f6\u5c31\u4e0d\u597d\u529e\u4e86\uff0c\u4e8e\u662f\u6b63\u8d1f\u5206\u5f00\u8bb0\u5f55\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u5224\u65ad\u6bcf\u4e00\u4f4d\u7684\u6570\uff1a\n\n1. \u82e5\u5f53\u524d\u4f4d\u76f8\u540c\uff0c\u540e\u7f00\u975e\u8d1f\u5219\u7b54\u6848\u4e3a $0$\uff0c\u5426\u5219\u4e3a $1$\u3002\n\n2. \u82e5\u5f53\u524d\u4f4d\u4e0d\u540c\uff0c\u540e\u7f00\u975e\u8d1f\u5219\u7b54\u6848\u4e3a $1$\uff0c\u5426\u5219\u4e3a $0$\u3002\n\n\u4f46\u662f\u66b4\u529b\u6bd4\u8f83\u540e\u7f00\u80af\u5b9a\u8d85\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 STL set \u8bb0\u5f55\u6b63\u8d1f\u6570\u7ec4\u4e0d\u540c\u7684\u4f4d\u7f6e\uff0c\u8fbe\u5230 $\\log(n)$ \u7ea7\u522b\u7684\u67e5\u8be2\u3002\n\n\u8003\u8651\u5230\u5185\u5b58\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5e03\u5c14\u578b\u6570\u7ec4\u8be5\u6539\u4e3a bitset\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6 $O(n(\\log(n))^2)$\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nset<int>SET;\nbitset<30005000>aa,bb;\nvoid insert(int x){\n\tSET.insert(x);\n}\nvoid erase(int x){\n\tSET.erase(x);\n}\nvoid aa_add(int x,int v){\n\tint zz=v,l=v+1,r=0;\n\twhile(x){\n\t\tint ad=(x&1);++zz;\n\t\tif(ad){\n\t\t\tif(aa[zz]){aa.set(zz,0);x++;}\n\t\t\telse aa.set(zz,1);\n\t\t}\n\t\tx>>=1;\n\t}\n\tr=zz;\n\tfor(int i=l;i<=r;i++){\n\t\t(aa[i]^bb[i])? insert(i):erase(i);\n\t}\n}\nvoid bb_add(int x,int v){\n\tint zz=v,l=v+1,r=0;\n\twhile(x){\n\t\tint ad=(x&1);++zz;\n\t\tif(ad){\n\t\t\tif(bb[zz]){bb.set(zz,0);x++;}\n\t\t\telse bb.set(zz,1);\n\t\t}\n\t\tx>>=1;\n\t}\n\tr=zz;\n\tfor(int i=l;i<=r;i++){\n\t\t(aa[i]^bb[i])? insert(i):erase(i);\n\t}\n}\nvoid add(int x,int v){\n\t(x>0)? aa_add(x,v):bb_add(-x,v); \n}\nvoid ask(int x){\n\tint pd1,pd2;\n\tauto zz=SET.lower_bound(x);\n\tzz--;\n\tpd1=(aa[x]^bb[x])? 1:0;\n\tpd2=(aa[*zz]<bb[*zz])? 1:0;\n\tputs((pd1^pd2)? \"1\":\"0\");\n}\nint main(){\n\t//freopen(\"integer.in\",\"r\",stdin);\n\t//freopen(\"integer.out\",\"w\",stdout);\n\tint n,opt,a,b;\n\tcin>>n>>opt>>opt>>opt;\n\tSET.insert(0);\n\tSET.insert(30*n+50);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&opt,&a);\n\t\tif(opt==1){\n\t\t\tscanf(\"%d\",&b);\n\t\t\tadd(a,b);\n\t\t}\n\t\telse{\n\t\t\task(++a);\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1627703248,
        "uid": 399239,
        "name": "\u5929\u5357\u661f\u9b54\u828b",
        "ccfLevel": 0,
        "title": "P3822 [NOI2017] \u6574\u6570 \u9898\u89e3"
    }
]