[
    {
        "content": "## \u53cb\u60c5\u63d0\u9192\uff0c\u4e0d\u8981\u8bd5\u56fe\u770b\u697c\u4e0a\u7684\u9898\u89e3\u7684\u4ee3\u7801\uff0c\u5426\u5219\u4f60\u4f1a\u5f03\u9898\u800c\u8d70\u7684\uff0c\u4e0d\u662f\u5f88\u660e\u767d\u4e3a\u4ec0\u4e48\u4ed6\u80fd\u5199\u8fd9\u4e48\u591a\n\n#### \u5173\u952e\u601d\u60f3\u5c31\u662f\u901a\u8fc7\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u6570\u5217\uff0c\u8fbe\u5230\u6d88\u9664\u540e\u6548\u6027\u7684\u6548\u679c\u3002\u5177\u4f53\u770b\u4ee3\u7801\u6ce8\u91ca\uff0c\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u5bf9\u65b9\u6848\u7684\u8bb0\u5f55\uff1a\n##### 1.\u7b2c\u4e00\u6b21\u8bb0\u5f55\u5f88\u7b80\u5355\uff0c\u5173\u952e\u5728\u4e8e\u540e\u9762\u7684\u51e0\u6b21\uff0c\u56e0\u4e3a\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u4e2d\u95f4\u88ab\u6d88\u6389\u4e86\u5f88\u591a\u5757\uff0c\u6240\u4ee5\u67d0\u4e2a\u6570\u5b57\u7684\u5e8f\u53f7\u53ef\u80fd\u4f1a\u6539\u53d8\u3002\u6240\u4ee5\u5b9a\u4e49\u4e86\u4e00\u4e2ahsb\u53bb\u8bb0\u5f55\u5df2\u6d88\u7684\u5143\u7d20\u4e2a\u6570\u3002\u7531\u4e8e | \u5df2\u7ecf\u88ab\u6d88\u7684\u5143\u7d20 | \u4e00\u5b9a\u662f | \u5f53\u524d\u8ba1\u7b97\u7684\u5143\u7d20 | \u524d\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u76f4\u63a5\u51cf\u53bb\u5c31\u597d\u4e86\u3002\n##### 2.\u7531\u4e8e\u4e24\u4e2a\u76f8\u540c\u5143\u7d20\u4e4b\u95f4\u53ef\u80fd\u4e0d\u6b62\u9694\u4e86\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u5faa\u73af\u53bb\u586b\u65b9\u6848\uff1a\ndis\u76f8\u540c\u5143\u7d20\u7684\u8ddd\u79bb\uff0ct\u4e3a\u5f53\u524d\u8ba1\u7b97\u7684\u5143\u7d20\uff0chsb\u4e3a\u5f53\u524d\u5143\u7d20\u524d\u5df2\u88ab\u6d88\u9664\u7684\u5143\u7d20\n\n---\n\n```cpp\nint t=i,dis=Query(i-1)-Query(v[s[i]]);\nwhile(dis) stp[++cnt]=t-1-hsb,t--,dis--;\n```\n\n---\n\n##### 3.\u7b97\u4e86\u591a\u4e00\u53e5\u5634\uff0c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4e3a\u5565\u4f1a\u4f7f\u540e\u6548\u88ab\u6d88\u9664\uff1f\n---\n\n\u6709\u51e0\u79cd\u60c5\u51b5\n\n\u7b2c\u4e00\u79cd\uff1a 1.....1 2.....2\u8fd9\u6837\u5148\u6d881\u548c\u5148\u6d882\u4e00\u6837\n\n\u7b2c\u4e8c\u79cd\uff1a1212  \u540c\u4e0a\uff0c\u5e76\u4e14\u53ea\u7528\u6d88\u4e00\u4e2a\n\n\u7b2c\u4e09\u79cd\uff1a 1 2 ....2 1 \u663e\u7136\u5148\u6d882\u66f4\u4f18\n\n---\n\u5176\u4e2d\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u6bcf\u6b21\u4ea4\u6362\u4e3a\u4e86\u7f29\u77ed\u76f8\u540c\u5143\u7d20\u7684\u8ddd\u79bb\uff0c\u90fd\u4f1a\u628a\u65e0\u5173\u7684\u540e\u8c03\uff0c\u6811\u72b6\u6570\u7ec4\u662f\u76f4\u63a5\u628a\u76f8\u540c\u7684\u5143\u7d20\u7ed9\u6d88\u9664\u4e86\uff0c\u5bf9\u5176\u5b83\u5143\u7d20\u7684\u5f71\u54cd\u5c31\u662f\uff1a\n\n1. \u6ca1\u5f71\u54cd\n\n2. \u76f8\u540c\u5143\u7d20\u8ddd\u79bb\u7f29\u77ed\n\n\u81ea\u884c\u7406\u89e3\u5427\uff0c\u8fd8\u662f\u597d\u61c2\u7684\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define SIZE 50010\n#define lowbit(x) x&(-x)\n#define LL long long\nusing namespace std;\n\nLL n,ans,cnt,hsb;\nLL tr[2*SIZE],v[2*SIZE],s[2*SIZE],stp[1000005];\n\n//\u6811\u72b6\u6570\u7ec4\u4e0d\u89e3\u91ca\ninline void Add(int x,int y){\n\t//\u6ce8\u610f\u8fd9\u91cc\u662f2*n\u4e0d\u662fn\n\tfor( ;x<=2*n;x+=lowbit(x)) tr[x]+=y;\n}\ninline LL Query(int x){\n\tLL sum=0;\n\tfor( ;x;x-=lowbit(x)) sum+=tr[x];\n\treturn sum;\n}\n\nint main(){\n\tcin>>n;\n    \n    //\u521d\u59cb\u5316\n\tfor(int i=1;i<=2*n;i++) cin>>s[i],Add(i,1);\n\tfor(int i=1;i<=2*n;i++){\n    \t//\u5982\u679c\u9047\u7684\u5143\u7d20\u4e3a\u7b2c\u4e00\u6b21\u9047\u5230\uff0c\u8bb0\u5f55\u5176\u4f4d\u7f6e\n\t\tif(!v[s[i]]) v[s[i]]=i;\n        //\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u6b21\u9047\u5230\n\t\telse{\n        \t//\u7edf\u8ba1\u6b65\u6570\uff0c\u4e2d\u95f4\u6709\u51e0\u4e2a\uff0c\u5c31\u8981\u4ea4\u6362\u51e0\u56de\n\t\t\tans+=Query(i)-Query(v[s[i]])-1;\n\t\t\tint t=i,dis=Query(i-1)-Query(v[s[i]]);\n\t\t\twhile(dis) stp[++cnt]=t-1-hsb,t--,dis--;\n            //\u6d88\u9664\u5f71\u54cd\n\t\t\tAdd(v[s[i]],-1); Add(i,-1); \n            hsb+=2; //\u4e00\u6b21\u5408\u5e76\u6d88\u4e24\u4e2a\u5143\u7d20\n\t\t}\n\t}\n    \n    //\u8f93\u51fa\u65b9\u6848\u4e0d\u89e3\u91ca\n\tprintf(\"%lld\\n\",ans);\n\tfor(int i=1;i<=cnt;i++) printf(\"%lld\\n\",stp[i]);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1533648019,
        "uid": 44669,
        "name": "fletmer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3460 \u3010[POI2007]TET-Tetris Attack\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problem/P3460)\n\n\u8003\u8651\u8d2a\u5fc3\uff0c\u663e\u7136\u7684\u7b56\u7565\u5c31\u662f\u5f00\u4e00\u4e2a\u6808\uff0c\u4e00\u65e6\u9047\u5230\u4e00\u4e2a\u4e4b\u524d\u51fa\u73b0\u7684\u6570\u5c31\u4ea4\u6362\u8fc7\u53bb\u6d88\u6389\uff1b\u5426\u5219\u5c31\u76f4\u63a5\u52a0\u5165\u6808\uff1b\u7b54\u6848\u5c31\u662f\u66b4\u529b\u79fb\u52a8\u7684\u6b21\u6570\n\n\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u8fd9\u6837\u4e00\u5b9a\u4e0a\u6700\u4f18\u7684\uff0c\u5bf9\u4e8e\u6570$i$\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e$beg_i$\u548c\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e$end_i$\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u628a$beg_i$\u5f80\u524d\u6362\u6216\u662f\u5c06$end_i$\u5f80\u540e\u6362\uff1b\u5c3d\u7ba1\u8fd9\u6837\u53ef\u80fd\u4f1a\u628a\u4e00\u4e9b\u4e1c\u897f\u6362\u8fdb\u6765\u4f7f\u5f97\u6570$i$\u88ab\u8fde\u9501\u6d88\u6389\uff0c\u4f46\u662f\u6211\u4eec\u76f4\u63a5\u5c06$beg_i$\u5f80\u540e\u6362\u6216$end_i$\u5f80\u524d\u6362\u663e\u7136\u6709\u7b49\u4ef7\u7684\u6548\u679c\n\n\u8fd8\u6709\u8ddd\u79bb\u5e76\u4e0d\u9700\u8981\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u65e2\u7136\u80fd\u8f93\u51fa\u65b9\u6848\u7b54\u6848\u663e\u7136\u4e0d\u4f1a\u5f88\u5927\uff0c\u76f4\u63a5\u66b4\u529b\u5f39\u6808\u5c31\u597d\n\n\u4ee3\u7801~~\u5e76\u4e0d\u9700\u8981\u5199\u5f97\u5f88\u957f~~\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\ninline int read() {\n\tchar c=getchar();int x=0;while(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nconst int maxn=1e5+5;\nint a[maxn],vis[maxn],tax[maxn],ans,top,st[maxn],n,Ans[1000005],np;\nint main() {\n\tn=read();for(re int i=1;i<=n+n;++i) a[i]=read();\n\tfor(re int i=1;i<=n+n;i++) \n\tif(vis[a[i]]) {\n\t\tnp=0;\n\t\twhile(st[top]!=a[i]) Ans[++ans]=top,tax[++np]=st[top--];\n\t\t--top;while(np) st[++top]=tax[np--];  \n\t}\n\telse st[++top]=a[i],vis[a[i]]=1;\n\tprintf(\"%d\\n\",ans);for(re int i=1;i<=ans;i++) printf(\"%d\\n\",Ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1572866322,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3460 \u3010[POI2007]TET-Tetris Attack\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u4e2a\u9898\u663e\u7136\u662f\u8d2a\u5fc3\uff0c\u7136\u540e\u4e00\u4e2a~~\u778e~~\u8d2a\u5fc3\u7684\u601d\u8def\u5c31\u662f\u6bcf\u6b21\u76f4\u63a5\u627e\u8ddd\u79bb\u6700\u8fd1\u7684\u4e00\u5bf9\u6765\u5f3a\u884c\u5408\u5e76\u5230\u4e00\u5757\uff0c\u4f46\u662f\u8fd9\u4e2a\u662f\u6709\u540e\u6548\u6027\u7684\uff0c\u56e0\u4e3a\u5b83\u80fd\u5f71\u54cd\u5230\u522b\u7684\u6570\u7684\u5408\u5e76\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u5149\u6309\u7167\u8ddd\u79bb\u5927\u5c0f\u6765\u4f18\u5148\u53d6\uff0c\u5e94\u8be5\u5728\u4f18\u5148\u7ea7\u91cc\u52a0\u4e0a\u5bf9\u522b\u7684\u6570\u7684\u5f71\u54cd\u3002\n\n\u8fd9\u4e2a\u5f71\u54cd\u662f\u5565\u5462\uff1f\u5c31\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\uff1a\n\n$1\\space2\\space4\\space3\\space3\\space2\\space1\\space4$\n\n\u5982\u679c\u6211\u4eec\u628a3\u5408\u5e76\uff0c\u90a3\u4e48\u5408\u5e761\u30012\u30014\u7684\u4ee3\u4ef7\u5c31\u4f1a\u76f8\u5e94\u7684\u51cf\u5c112\uff08\u8ddd\u79bb\u90fd\u62c9\u8fd1\u4e862\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8ba1\u7b97\u51fa\u5408\u5e76\u4e00\u4e2a\u6570\u4f1a\u4f7f\u591a\u5c11\u5bf9\u6570\u7684\u8ddd\u79bb\u51cf\u5c0f\u591a\u5c11\u3002\u6bd4\u5982\u8fd9\u4e2a\uff1a\n\n\\____A______B_______________\n\nAB\u5206\u522b\u4e3a\u8fd9\u4e2a\u6570\u524d\u540e\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5408\u5e76\u540eB\u540e\u9762\u53ea\u6709\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u7684\u6570\u4f1a\u524d\u79fb1\uff0cA\u524d\u9762\u53ea\u6709\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u4f1a\u524d\u79fb1\u3002\u6211\u4eec\u4e0d\u59a8\u8bbe$f[i]$\u4e3ai\u524d\u9762\u6709\u591a\u5c11\u4e2a\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\uff0c$g[i]$\u4e3ai\u524d\u9762\u6709\u591a\u5c11\u4e2a\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u7684\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7a0d\u5fae\u5bb9\u65a5\u4e00\u4e0b\uff0cB\u540e\u9762\u6709\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u7684\u6570\u4e3a$n-g[B]$\uff0c\u4f46\u662fB\u540e\u9762\u53ef\u80fd\u6709\u51d1\u5bf9\u7684\uff0c\u6240\u4ee5\u5c31\u8981\u51cf\u53bbB\u540e\u9762\u6709\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570$n-f[B-1]$\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709$f[B-1]-g[B]$\u4e2a\u8d21\u732e\uff0c\u540c\u7406A\u4e5f\u4f1a\u6709$f[A]-g[A-1]$\u4e2a\u8d21\u732e\uff0c\u518d\u51cf\u53bb\u5408\u5e76\u8fd9\u4e2a\u9700\u8981\u82b1\u8d39\u7684\u4ee3\u4ef7$B-A-1$\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u5c31\u53d6\u8d21\u732e\u6700\u5927\u7684\u6570\u8fdb\u884c\u5408\u5e76\uff0c\u800c\u4e14\u8fd9\u4e2a\u5408\u5e76\u540e\u5bf9\u522b\u7684\u6570\u7684\u8d21\u732e\u7684\u5f71\u54cd\u90fd\u662f\u76f8\u5bf9\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u52a8\u6001\u7ef4\u62a4\uff0c\u76f4\u63a5\u6309\u7167\u8d21\u732e\u6392\u4e2a\u5e8f\u5373\u53ef\u3002\n\n\u7136\u540e\u65b9\u6848\u4e5f\u5c31\u597d\u7b97\u4e86\uff0c\u6211\u4eec\u6bcf\u6b21\u76f4\u63a5\u628aB\u79fb\u5230A\uff08\u8fd9\u4e2a\u9898\u6bd4\u8f83\u7384\u5b66\u7684\u4e00\u70b9\u5c31\u662fA\u79fb\u5230B\u5c31\u4f1aWA2\u4e2a\u70b9\uff0c\u6211\u4e5f\u65e0\u6cd5\u89e3\u91ca\u2026\u2026\uff09\uff0c\u7136\u540e\u8fd9\u4e4b\u4e2d\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\u5e76\u4e14\u8bb0\u5f55\u65b9\u6848\uff0c\u5408\u5e76\u540e\u8fd9\u4e24\u4e2a\u6570\u4f1a\u5220\u6389\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u63d0\u9ad8\u6548\u7387\uff0c\u5c31\u76f8\u5f53\u4e8e\u94fe\u8868\u4e00\u6837\uff0c\u5c31\u662f\u6307\u5411\u8fd9\u4e2a\u4f4d\u7f6e\u53f3\u9762\u79bb\u5b83\u6700\u8fd1\u7684\u4f4d\u7f6e\uff08\u53ef\u4ee5\u662f\u81ea\u5df1\uff09\uff0c\u8fd9\u6837\u5728\u66b4\u529b\u8bb0\u5f55\u65b9\u6848\u65f6\u5c31\u4f1a\u76f4\u63a5\u8df3\u8fc7\u5df2\u7ecf\u5220\u8fc7\u7684\u70b9\u3002\u800c\u4e14\u4e3a\u4e86\u8bb0\u5f55\u8fd9\u4e2a\u5730\u65b9\u73b0\u5728\u53d8\u6210\u4e86\u4f4d\u7f6e\u51e0\uff0c\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u8fd9\u4e2a\u4f4d\u7f6e\u524d\u9762\u6709\u591a\u5c11\u4e2a\u672a\u5220\u9664\u7684\u6570\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u6bd4\u8f83\u5751\u7684\u4e00\u70b9\u662f\uff0c\u76f8\u540c\u7684\u6570\u78b0\u5230\u4e00\u5757\u540e\u5fc5\u987b\u5f97\u6d88\u6389\u4e0d\u7136\u4f1a\u5224\u4e3a\u65b9\u6848\u9519\u8bef\uff0c\u6240\u4ee5\u6bcf\u6b21\u79fb\u52a8\u7684\u65f6\u5019\u5f97\u7279\u5224\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u524d\u540e\u662f\u4e0d\u662f\u6709\u76f8\u540c\u7684\uff0c\u7136\u540e\u79fb\u5b8c\u4e4b\u540e\u76f4\u63a5\u628a\u5b83\u4eec\u5220\u9664\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ninline int get(){\n    int n;char c;while((c=getchar())||1)if(c>='0'&&c<='9')break;\n    n=c-'0';while((c=getchar())||1){\n        if(c>='0'&&c<='9')n=n*10+c-'0';\n        else return(n);\n    }\n}\nint bit1[200001],bit2[200001];\nint ints[200001],pos[100001][2];\nint c[200002];int n;\nint bcj[200001];\nint bcj1[200001];\nint find(int n){\n    if(bcj[n]==n)return(n);return(find(bcj[n]));\n}\nint find1(int n){\n    if(bcj1[n]==n)return(n);return(find1(bcj1[n]));\n}\ninline int setpt(int pt,int num){\n    for(register int i=pt;i<=n;i+=(i&-i))c[i]+=num;\n}\ninline int getpt(int pt){\n    int ans=0;for(register int i=pt;i>0;i-=(i&-i))ans+=c[i];return(ans);\n}\ntypedef struct _n{\n    int pt;int data;\n    friend bool operator <(const _n &a,const _n &b){\n        return(a.data>b.data);\n    }\n}node;node memchi[100001];\nint anss[1000001];\nvoid print(int num){\n    if(num>=10)print(num/10);putchar(num%10+'0');\n}\nunsigned char bv[100001];\ninline void delpt(int pt){\n\tif(pt==0||pt>n/2)return;\n\tbv[pt]=1;\n\tbcj[pos[pt][1]]=find(pos[pt][1]+1);\n    bcj[pos[pt][0]]=find(pos[pt][0]+1);\n    bcj1[pos[pt][0]]=find1(pos[pt][0]-1);\n    bcj1[pos[pt][1]]=find1(pos[pt][1]-1);\n    setpt(pos[pt][0],-1);setpt(pos[pt][1],-1);\n}\nint main(){\n    n=get()*2;for(register int i=1;i<=n;i++){\n        ints[i]=get();if(!pos[ints[i]][0]){\n            pos[ints[i]][0]=i;\n            bit1[i]=bit1[i-1]+1;bit2[i]=bit2[i-1];\n        }else{\n            pos[ints[i]][1]=i;\n            bit1[i]=bit1[i-1];bit2[i]=bit2[i-1]+1;\n        }setpt(i,1);\n    }\n    int nn=n>>1;for(register int i=1;i<=nn;i++){\n        memchi[i].pt=i;int a=pos[i][0],b=pos[i][1];\n        memchi[i].data=bit1[a]-bit2[a-1]+bit1[b-1]-bit2[b]-(b-a-1);\n    }\n    for(register int i=1;i<=n;i++)bcj[i]=i,bcj1[i]=i;\n    int ans=0;\n    sort(memchi+1,memchi+1+nn);int pub=1;\n    for(register int i=1;i<=nn;i++){\n    \tif(bv[memchi[i].pt])continue;\n        //ans+=(getpt(pos[memchi[i].pt][1]-1)-getpt(pos[memchi[i].pt][0]));\n        int ptr=getpt(pos[memchi[i].pt][1])-1;\n        int last=find(pos[memchi[i].pt][0]+1);\n        for(register int j=find1(pos[memchi[i].pt][1]);j>last;j=find1(j-1)){\n            //printf(\"swap(%d)\\n\",j);\n            anss[pub]=ptr;ptr--;pub++;ans++;\n        }\n        delpt(memchi[i].pt);\n        //printf(\"delpt(%d)\\n\",memchi[i].pt);\n        if(ints[find(pos[memchi[i].pt][0])]==ints[find1(pos[memchi[i].pt][0])]){\n        \t//printf(\"Extra del %d\\n\",find(pos[memchi[i].pt][0]));\n        \tdelpt(ints[find(pos[memchi[i].pt][0])]);\n\t\t}\n\t\tif(ints[find(pos[memchi[i].pt][1])]==ints[find1(pos[memchi[i].pt][1])]){\n\t\t\t//printf(\"Extra del %d\\n\",find(pos[memchi[i].pt][1]));\n        \tdelpt(ints[find(pos[memchi[i].pt][1])]);\n\t\t}\n        //printf(\"del(%d)\\n\",memchi[i].pt);\n    }cout<<ans<<endl;\n    //cout<<endl;\n    for(register int i=1;i<pub;i++){\n        print(anss[i]);putchar('\\n');\n    }\n    return(0);\n}\n```",
        "postTime": 1528169137,
        "uid": 56917,
        "name": "\u989c\u4f1f\u4e1a_C_Asm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3460 \u3010[POI2007]TET-Tetris Attack\u3011"
    },
    {
        "content": "\u5206\u6790\u9898\u76ee\u8fd9\u662f\u4e00\u4e2a\u6d88\u65b9\u5757\u7684\u6e38\u620f\uff0c\u5e76\u4e14\u4f1a\u6709\u8fde\u9501\u53cd\u5e94\u3002       \n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u6bcf\u79cd\u5143\u7d20\u7684\u65b9\u5757\u5b9e\u9645\u4e0a**\u53ea\u6709\u4e00\u5bf9**\u3002       \n\u6211\u4eec\u5e94\u4ee5\u6b64\u4e3a\u51fa\u53d1\u70b9\uff0c\u5982\u679c\u6211\u4eec\u4ea4\u6362\u65b9\u5757\u5e76\u5220\u9664\u5b83\u4eec\uff0c\u53ea\u4f1a\u6539\u53d8\u5176\u4f59\u5404\u961f\u7684\u8ddd\u79bb\u5bf9\u7b54\u6848\u8fdb\u884c\u8d21\u732e\u3002            \n\u800c\u8d21\u732e\u5219\u662f\u8d8a\u5927\u8d8a\u597d\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5148\u6d88\u9664\u5185\u90e8\u7684\u65b9\u5757\u4f1a\u6700\u5927\u5316\u51cf\u5c0f\u8ddd\u79bb\uff0c\u8fdb\u800c\u4ea7\u751f\u4e00\u7cfb\u5217\u8fde\u9501\u53cd\u5e94\u3002      \n\u6240\u4ee5\u4e00\u79cd\u8f83\u4e3a\u7b80\u5355\u7684\u6d88\u9664\u5185\u90e8\u65b9\u5757\u7684\u65b9\u6cd5\u5c31\u662f**\u8bb0\u5f55\u6bcf\u79cd\u5143\u7d20\u7684\u5f00\u59cb\u70b9\u82e5\u9047\u5230\u5f00\u59cb\u70b9\u5df2\u6709\uff0c\u5373\u4e0d\u4e3a\u7a7a**\u3002       \n\u90a3\u4e48\u7acb\u5373\u4ea4\u6362\u5e76\u5220\u9664\u5b83\u4eec\uff0c\u6b64\u65f6\u8bb0\u5f55\u8d21\u732e\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u7ef4\u62a4\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u8d21\u732e\uff0c\u8bb0\u5f55\u4ea4\u6362\u7b54\u6848\u662f**\u8ddd\u79bb\u51cf\u53bb\u8d21\u732e**\u3002     \n\u5bf9\u4e8e\u6784\u9020\u8f93\u51fa\uff0c\u65e0\u9700\u8fc7\u591a\u89e3\u91ca\uff0c\u8be6\u60c5\u89c1\u4ee3\u7801\u5177\u4f53\u90e8\u5206\u3002\n\n\u683c\u5f0f\u5316\u4ee3\u7801\uff0c\u611f\u8c22\u98df\u7528\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef double db;\n\nconst int N = 1e5 + 50;\nconst int M = 1e5 + 50;\nconst int Mod = 1e9 + 7;\n\ninline int read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x * f;\n}\n\nint n;\n\nint a[N];\n\nint tree[N];\n\nint lowbit(int x) { return x & (-x); }\n\nvoid update(int x, int k)\n{\n    for (int i = x; i <= 2 * n; i += lowbit(i))\n    {\n        tree[i] += k;\n    }\n}\n\nint query(int x)\n{\n    int res = 0;\n    for (int i = x; i > 0; i -= lowbit(i))\n    {\n        res += tree[i];\n    }\n    return res;\n}\n\nint b[N];\n\nqueue<int>q;\n\nint main()\n{\n    n = read();\n    for (int i = 1; i <= 2 * n; ++i)\n    {\n        a[i] = read();\n    }\n    int ans = 0;\n    for (int i = 1; i <= 2 * n; ++i)\n    {\n        if (!b[a[i]])\n            b[a[i]] = i;\n        else\n        {\n        \tint k=i - b[a[i]] - 1 + query(i) - query(b[a[i]] - 1);\n            ans+=k;\n            int l=b[a[i]]+query(b[a[i]]);\n            for(int i=l;i<=l+k-1;++i) q.push(i);\n            update(i, -1);\n            update(b[a[i]], -1);\n        }\n    }\n    printf(\"%d\\n\", ans);\n    while(!q.empty()){\n    \tprintf(\"%d\\n\",q.front());\n    \tq.pop();\n    }\n    return 0;\n}\n```",
        "postTime": 1675499184,
        "uid": 750803,
        "name": "_Revenge_",
        "ccfLevel": 0,
        "title": "P3460"
    },
    {
        "content": "# \u9898\u610f\n\u6709\u4e00\u4e2a\u6808\uff0c\u5176\u4e2d\u5305\u542b $2n$ \u4e2a\u5143\u7d20\uff0c\u6709 $n$ \u4e2a\u6807\u8bb0\uff0c\u6bcf\u79cd\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u6807\u8bb0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u6807\u8bb0\uff0c\u6808\u4e2d\u90fd\u6709 $2$ \u4e2a\u3002\u4f60\u53ef\u4ee5\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u76f8\u540c\uff0c\u5219\u5c06\u4ed6\u4eec\u5220\u9664\uff0c\u5220\u9664\u540e\uff0c\u4ed6\u4eec\u4e0a\u9762\u7684\u5143\u7d20\u5c31\u4f1a\u6389\u4e0b\u6765\u3002\u95ee\u5c06\u6808\u6e05\u7a7a\u4f7f\u7528\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u4ee5\u53ca\u65b9\u6848\u3002\n\n# \u89e3\u9898\u601d\u8def\n\u5f00\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u7528\u6765\u7ef4\u62a4\u5143\u7d20\u95f4\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u524d\u9762\u6709\u548c\u76ee\u524d\u5143\u7d20\u6807\u8bb0\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5c31\u79fb\u52a8\u4e24\u4e2a\u5143\u7d20\u76f4\u63a5\u7684\u8ddd\u79bb\u51cf\u4e00\u6b21\uff0c\u8fc7\u7a0b\u4e2d\u987a\u4fbf\u8bb0\u5f55\u79fb\u52a8\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u524d\u9762\u6ca1\u6709\uff0c\u5c31\u628a\u5f53\u524d\u5143\u7d20\u7684\u4f4d\u7f6e\u8bb0\u5f55\u4e0b\u6765\uff0c\u4ee5\u4fbf\u540e\u7eed\u5904\u7406\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u79fb\u52a8\u7684\u6b21\u6570\uff0c\u800c\u65b9\u6848\u5df2\u7ecf\u5728\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e0b\u6765\u4e86\u3002\n\n\u81ea\u884c\u7406\u89e3\u4e00\u4e0b\u5427\uff0c\u8fd8\u662f\u5f88\u597d\u61c2\u7684\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6807\u8bb0\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u7b2c\u4e8c\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u628a\u7b2c\u4e00\u4e2a\u5f80\u524d\u6362\u6216\u628a\u7b2c\u4e8c\u4e2a\u5f80\u540e\u6362\uff0c\u5c3d\u7ba1\u8fd9\u6837\u53ef\u80fd\u5f15\u6765\u4e00\u8fde\u4e32\u7684\u6d88\u6d88\u4e50\uff0c\u4f46\u6211\u4eec\u76f4\u63a5\u628a\u7b2c\u4e00\u4e2a\u5f80\u540e\u6362\u6216\u628a\u7b2c\u4e8c\u4e2a\u5f80\u524d\u6362\u5176\u5b9e\u4e5f\u6709\u540c\u6837\u7684\u6548\u679c\u3002\n\n# \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 5;\nint n, tr[N], ans[N], cnt, vis[N], tot; //cnt\u7528\u6765\u8bb0\u5f55\u76ee\u524d\u5df2\u7ecf\u5220\u9664\u7684\u5143\u7d20\u4e2a\u6570\uff0cvis\u6570\u7ec4\u7528\u6765\u8bb0\u5f55\u524d\u4e00\u4e2a\u4e0e\u76ee\u524d\u5143\u7d20\u76f8\u540c\u6807\u8bb0\u7684\u5143\u7d20\u7684\u53d8\u53f7 \nint lowbit(int x) {return x & -x;} \nvoid add(int x, int y) //\u6811\u72b6\u6570\u7ec4\u6a21\u677f \n{\n\twhile (x <= n)\n\t{\n\t\ttr[x] += y;\n\t\tx += lowbit(x);\n\t}\n}\nint query(int x)\n{\n\tint res = 0;\n\twhile (x)\n\t{\n\t\tres += tr[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%d\", &n);\n\tn <<= 1;\n\tfor (int i = 1; i <= n; i ++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\tadd(i, 1); //i\u4f4d\u7f6e\u4e0a\u52a0\u4e861\u4e2a\u5143\u7d20 \n\t\tif (!vis[x]) vis[x] = i;\n\t\telse\n\t\t{\n\t\t\tint dis = query(i - 1) - query(vis[x]); //dis\u662f\u5143\u7d20\u5f53\u524d\u5143\u7d20\u4e0e\u524d\u4e00\u4e2a\u5143\u7d20\u4e4b\u95f4\u7684\u8ddd\u79bb \n\t\t\tfor (int j = 1; j <= dis; j ++) ans[++ tot] = i - cnt - j; //\u8def\u4e0a\u9700\u8981\u4ea4\u6362\u7684\u70b9\u76f4\u63a5\u8ba1\u5165\u7b54\u6848\uff0c\u6ce8\u610f\u8981\u51cf\u53bb\u5df2\u7ecf\u5220\u9664\u7684\u70b9\u7684\u4e2a\u6570\n\t\t\tadd(vis[x], -1), add(i, -1); //\u6d88\u9664\u8fd9\u4e24\u4e2a\u70b9 \n\t\t\tcnt += 2; //\u5220\u9664\u70b9\u6570\u52a02 \n\t\t}\n\t}\n\tprintf(\"%d\\n\", tot);\n\tfor (int i = 1; i <= tot; i ++) printf(\"%d \", ans[i]); //\u8f93\u51fa \n\treturn 0; //\u5b8c\u7ed3\u6492\u82b1\uff01 \n}\n```\n\n\u795d\u5927\u5bb6\u65b0\u5e74\u5feb\u4e50\uff01",
        "postTime": 1674363407,
        "uid": 508927,
        "name": "Tong_Yuxin",
        "ccfLevel": 5,
        "title": "P3460 [POI2007]TET-Tetris Attack \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u5148\u8003\u8651\u66b4\u529b\u6a21\u62df\u7684\u7b97\u6cd5\uff08\u6b63\u6240\u8c13**\u66b4\u529b\u51fa\u5947\u8ff9**\uff09\n\n\u9996\u5148\u4ece\u7b2c\u4e00\u4e2a\u65b9\u5757\u5f00\u59cb\u5f80\u540e\u4ea4\u6362\uff0c\u6362\u5230\u548c\u4e0e\u548c\u5b83\u76f8\u540c\u7684\u65b9\u5757\u76f8\u90bb\u65f6\uff0c\u628a\u5b83\u4eec\u6d88\u9664\uff0c\u7136\u540e\u7ee7\u7eed\u4ece\u7b2c\u4e8c\u4e2a\u65b9\u5757\u5f00\u6362\uff0c\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u4ee5\u6b64\u7c7b\u63a8\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u5e76\u4e14\u5728\u8fdb\u884c\u64cd\u4f5c\u7684\u65f6\u5019\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n\n\u663e\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^2)$\uff0c~~\u547d\u4e2d\u6ce8\u5b9a~~\u662f\u8fc7\u4e0d\u6389\u54d2\uff01\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5\u8ba1\u7b97\u6bcf\u6b21\u4ea4\u6362\u65b9\u5757\u7684\u6b21\u6570\uff08\u4e5f\u5c31\u662f\u76f8\u90bb\u7684\u4e24\u4e2a\u65b9\u5757\u7684\u8ddd\u79bb\u51cf\u6389\u4e00\uff09\uff0c\u5e76\u4e14\u5c1d\u8bd5\u5220\u6389\u8fd9\u4e24\u4e2a\u65b9\u5757\uff08\u5176\u5b9e\u53ea\u7528\u5220\u6389\u53f3\u8fb9\u7684\u65b9\u5757\uff0c\u56e0\u4e3a\u5de6\u8fb9\u7684\u4e5f\u662f\u6700\u5de6\u8fb9\u7684\uff0c\u4e0d\u53ef\u80fd\u53c2\u4e0e\u8ba1\u7b97\uff09\u3002\u4e8e\u662f\u7528\u6811\u72b6\u6570\u7ec4\u5c31\u884c\u54d2\u5566\uff01\n\n\u81f3\u4e8e\u8f93\u51fa\u65b9\u6848\uff0c\u6839\u636e\u8fd9\u4e24\u4e2a\u65b9\u5757\u7684\u4f4d\u7f6e\u8f93\u51fa\u5c31\u884c\u5566\uff01\n\n\u4ee3\u7801\u90e8\u5206\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nvector<int>v;\nint n,a[200005],fst[100005];\nlong long ans,tr[200005];\n\nvoid add(int xx,long long adn){\n\twhile(xx<=2*n){\n\t\ttr[xx]+=adn;\n\t\txx+=xx&-xx;\n\t}\n}\n\nlong long ask(int xx){\n\tlong long ret=0;\n\twhile(xx>0){\n\t\tret+=tr[xx];\n\t\txx-=xx&-xx;\n\t}\n\treturn ret;\n}\n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=2*n;i++){\n\t\tcin>>a[i];\n\t\tif(fst[a[i]]){\n\t\t    int num=ask(fst[a[i]]),num2=ask(i-1);\n\t\t\tans+=num2-num;\n\t\t\tfor(int j=num;j<num2;j++){\n\t\t\t    v.push_back(j);\n\t\t\t}\n\t\t\tadd(fst[a[i]],-1);\n\t\t}\n\t\telse{\n\t\t\tfst[a[i]]=i;\n\t\t\tadd(i,1);\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\tfor(int o=0;o<v.size();o++){\n\t    printf(\"%d\\n\",v[o]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1650878663,
        "uid": 472950,
        "name": "Mr_Terminator",
        "ccfLevel": 4,
        "title": "\u6211\u4e0d\u8d77\u6807\u9898\u6211\u5c31\u4e0d\u8d77\u6807\u9898\uff0c\u4f60\u62ff\u6211\u600e\u4e48\u529e\u3010\u72d7\u5934\u6ed1\u7a3d\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u52a8\u6001\u7ef4\u62a4\u4e24\u4e2a\u6570\u4e4b\u95f4\u6709\u591a\u5c11\u4e2a\u6570\u5e76\u4e14\u652f\u6301\u5220\u9664\u64cd\u4f5c\uff0c\u5f88\u591a\u6570\u636e\u7ed3\u6784\u90fd\u53ef\u4ee5\uff0c\u8fd9\u91cc\u6211\u6253\u7684\u662f\u6811\u72b6\u6570\u7ec4\u3002\n\n\u6700\u5f00\u59cb\u6211\u7684\u601d\u8def\u662f\u6709\u4e2a\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\u628a\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u4e4b\u95f4\u7684\u957f\u5ea6\u5b58\u4e0b\u6765\uff0c\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u5904\u7406\uff0c\u7406\u8bba\u4e0a\u8bf4\u8fd9\u79cd\u505a\u6cd5\u590d\u6742\u4e86\u4f46\u5e94\u8be5\u6ca1\u6709\u95ee\u9898\uff0c\u7136\u540e\u88ab SPJ \u9a73\u56de\u4e86\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u540e\u6765\u60f3\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e0d\u7528\u4ece\u5c0f\u5230\u5927\u641e\uff0c\u53ea\u9700\u8981\u9047\u5230\u4e00\u4e2a\u51fa\u73b0\u4e24\u6b21\u7684\u6570\u5c31\u5220\uff0c\u8fd9\u6837\u662f\u5e38\u89c4\u601d\u8def\uff0c\u7136\u540e\u5c31\u8fc7\u4e86\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u8fd9\u9898\u7684 SPJ \u771f\u7684\u6709 BUG\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define lowbit(x) (x&-x)\nusing namespace std;\nint qr(){\n\tint x=0,f=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)) f|=(c=='-'),c=getchar();\n\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?~(x-1):x;\n} \nstruct node{\n\tint len,l,r;\n\tbool operator<(const node &p)const{\n\t\treturn len<p.len;\n\t}\n}b[50005];\nint n,a[100005],ans,bit[100005],pos[50005];\nvoid add(int x){\n\twhile(x<=2*n){\n\t\t++bit[x];\n\t\tx+=lowbit(x);\n\t}\n\treturn ;\n}\nvoid del(int x){\n\twhile(x<=2*n){\n\t\t--bit[x];\n\t\tx+=lowbit(x);\n\t}\n\treturn ;\n}\nint get(int x){\n\tint tot=0;\n\twhile(x){\n\t\ttot+=bit[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn tot;\n}\nqueue<int> qu;\nint main() {\n\tn=qr();\n\tfor(int i=1;i<=2*n;i++){\n\t\ta[i]=qr();\n\t}\n\tfor(int i=1;i<=2*n;i++){\n\t\tbit[i]=lowbit(i);\n\t}\n\tfor(int i=1;i<=2*n;i++){\n\t\tif(!pos[a[i]]){\n\t\t\tpos[a[i]]=i;\n\t\t}else{\n\t\t\tans+=get(i-1)-get(pos[a[i]]);\n\t\t\tfor(int j=get(i-1),k=1,tmp=get(i-1)-get(pos[a[i]]);k<=tmp;k++,j--) qu.push(j);\n\t\t\tdel(i),del(pos[a[i]]);\n\t\t}\n\t}\n\tcout << ans << endl;\n\twhile(!qu.empty()){\n\t\tcout << qu.front() << endl;\n\t\tqu.pop();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1639115864,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "P3460 \u9898\u89e3"
    }
]