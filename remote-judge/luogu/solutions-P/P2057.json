[
    {
        "content": "#####   \u9898\u76ee\uff1a \u5e7c\u513f\u56ed\u91cc\u6709n\u4e2a\u5c0f\u670b\u53cb\u6253\u7b97\u901a\u8fc7\u6295\u7968\u6765\u51b3\u5b9a\u7761\u4e0d\u7761\u5348\u89c9\u3002\u5bf9\u4ed6\u4eec\u6765\u8bf4\uff0c\u8fd9\u4e2a\u95ee\u9898\u5e76\u4e0d\u662f\u5f88\u91cd\u8981\uff0c\u4e8e\u662f\u4ed6\u4eec\u51b3\u5b9a\u53d1\u626c\u8c26\u8ba9\u7cbe\u795e\u3002\u867d\u7136\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u4e3b\u89c1\uff0c\u4f46\u662f\u4e3a\u4e86\u7167\u987e\u4e00\u4e0b\u81ea\u5df1\u670b\u53cb\u7684\u60f3\u6cd5\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u6295\u548c\u81ea\u5df1\u672c\u6765\u610f\u613f\u76f8\u53cd\u7684\u7968\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u6b21\u6295\u7968\u7684\u51b2\u7a81\u6570\u4e3a\u597d\u670b\u53cb\u4e4b\u95f4\u53d1\u751f\u51b2\u7a81\u7684\u603b\u6570\u52a0\u4e0a\u548c\u6240\u6709\u548c\u81ea\u5df1\u672c\u6765\u610f\u613f\u53d1\u751f\u51b2\u7a81\u7684\u4eba\u6570\u3002\u6bcf\u4f4d\u5c0f\u670b\u53cb\u5e94\u8be5\u600e\u6837\u6295\u7968\uff0c\u624d\u80fd\u4f7f\u51b2\u7a81\u6570\u6700\u5c0f\uff1f\n\n\n------------\n\n\n# \u7b97\u6cd5\u5efa\u6a21\u5206\u6790\n\n\u6b64\u9898\u7684\u5173\u952e\u662f\u4e3a\u4ec0\u4e48\u5c0f\u670b\u53cb\u4e4b\u95f4\u8981\u8fde\u53cc\u5411\u8fb9(\u8fd9\u4e00\u70b9\u6211\u5c06\u4e00\u6b65\u4e00\u6b65\u5206\u6790\uff09\n\n\n\u6211\u4eec\u4ece\u5173\u7cfb\u51fa\u53d1\uff0c\u6682\u4e14\u4e0d\u7ba1\u51b2\u7a81\u7684\u4e8b\u60c5\n\u4f17\u6240\u5468\u77e5,\u56fe\u53ef\u4ee5\u8868\u793a\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb,\u8fd9\u79cd\u5173\u7cfb\u5373\u70b9\u4e4b\u95f4\u7684\u8fde\u7ebf\n\u5206\u6790\u9898\u76ee\u53ef\u4ee5\u5f97\u51fa\u4e24\u79cd\u5173\u7cfb\uff1a\n1\u3001\u597d\u670b\u53cb\u95f4\u7684\u5173\u7cfb\n2\u3001\u5c0f\u670b\u53cb\u4e0e\u7acb\u573a\u7684\u5173\u7cfb\uff08\u540c\u610f\u6216\u8005\u4e0d\u540c\u610f\u7761\u89c9\uff09\n\u4e0b\u9762\uff0c\u6211\u4eec\u5c31\u8981\u4f9d\u7167\u8fd9\u4e24\u79cd\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21\n\n\n## \u5bf9\u4e8e\u7acb\u573a\u7684\u5efa\u6a21\n\u9996\u5148,\u5bf9\u4e8e\u662f\u5426\u7761\u89c9\u7684\u95ee\u9898\uff0c\u53ea\u6709\u4e24\u79cd\u4e92\u65a5\u7684\u60c5\u51b5\uff1a**\u540c\u610f**  \u6216\u8005 **\u4e0d\u540c\u610f**  \n\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e24\u4e2a\u96c6\u5408\uff0c\u5c06\u540c\u610f\u7684\u5c0f\u670b\u53cb\u548c\u4e0d\u540c\u610f\u7684\u5c0f\u670b\u53cb\u5206\u522b\u653e\u5165\u4e24\u4e2a\u96c6\u5408\u91cc\n\n\u90a3\u4e48\u5982\u4f55\u4e0e\u7f51\u7edc\u6d41\u7ed3\u5408\u8d77\u6765\uff0c\u5c31\u4e0d\u8a00\u800c\u55bb\u4e86\u3002\n\n\u6211\u4eec\u5c06\u540c\u610f\u7684\u5c0f\u670b\u53cb\u4e0e\u6e90\u70b9\u76f8\u8fde\n\n\n\u4e0d\u540c\u610f\u7684\u5c0f\u670b\u53cb\u4e0e\u6c47\u70b9\u76f8\u8fde\n(\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u53cd\u8fc7\u6765\u8fde\uff09\n\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\u4e00\u6761\u5355\u5411\u8fb9\u7684\u542b\u4e49\uff1a\n### \u4e00\u6761\u4eceA\u2014\u2014>B\u7684\u8fb9\uff0c\u8868\u793a A \u8981\u6c42 B \u540c\u5b83\u540c\u7acb\u573a\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u5c0f\u670b\u53cb\u7a76\u7adf\u662f\u5728\u54ea\u4e2a\u96c6\u5408\u91cc\u5462\uff1f\n\u6211\u4eec\u5c06\u6e90\u70b9\u548c\u6c47\u70b9\u5747\u79f0\u4e3a**\u7acb\u573a\u70b9**\n\n\uff08~~\u539f\u8c05\u6211\u53d6\u540d\u6c34\u5e73\u6709\u9650~~\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\uff09\n\n### \u4ece\u7acb\u573a\u70b9\u51fa\u53d1\uff0c\u51e1\u662f\u80fd\u5230\u8fbe\u7684\u70b9\u90fd\u5e94\u6301\u8be5\u7acb\u573a\n\n\uff08\u6ce8\u610f\uff0c\u8fd9\u4e2a\u770b\u4f3c\u6beb\u65e0\u7528\u5904\u7684\u5224\u65ad\u65b9\u5f0f\uff0c\u5c06\u89e3\u51b3\u63a5\u4e0b\u6765\u7684\u51b2\u7a81\u95ee\u9898\uff09\n\n## \u5bf9\u4e8e\u597d\u670b\u53cb\u95f4\u7684\u5efa\u6a21\n\n\u5728\u6b64\u65f6\u6211\u4eec\u5f15\u5165\u51b2\u7a81\u7684\u6982\u5ff5\n\n\u4e3a\u4ec0\u4e48\u8981\u5728\u6b64\u65f6\u5f15\u5165\u51b2\u7a81\u5462\uff1f\n\n\u56de\u987e\u4e00\u4e0b\u9898\u76ee\n\n#### \u4e3a\u4e86\u7167\u987e\u4e00\u4e0b\u81ea\u5df1\u670b\u53cb\u7684\u60f3\u6cd5\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u6295\u548c\u81ea\u5df1\u672c\u6765\u610f\u613f\u76f8\u53cd\u7684\u7968\u3002\u6211\u4eec\u5b9a\u4e49\u4e00\u6b21\u6295\u7968\u7684\u51b2\u7a81\u6570\u4e3a\u597d\u670b\u53cb\u4e4b\u95f4\u53d1\u751f\u51b2\u7a81\u7684\u603b\u6570\u52a0\u4e0a\u548c\u6240\u6709\u548c\u81ea\u5df1\u672c\u6765\u610f\u613f\u53d1\u751f\u51b2\u7a81\u7684\u4eba\u6570\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u53d1\u751f\u51b2\u7a81\u7684\u4e24\u79cd\u60c5\u51b5\u4e0e\u4e0a\u8ff0\u7684\u4e24\u79cd\u5173\u7cfb\u662f\u76f8\u5bf9\u5e94\u7684\n\n _**1\u3001\u8fdd\u80cc\u81ea\u8eab\u7684\u610f\u613f**_ \n\n _**2\u3001\u8fdd\u80cc\u597d\u670b\u53cb\u7684\u610f\u613f**_ \n\n\n------------\n\n### **\u5173\u4e8e\u7b2c\u4e00\u79cd\u51b2\u7a81\uff0c\u6839\u672c\u4e0a\u662f\u7531\u4e8e\u7b2c\u4e8c\u79cd\u51b2\u7a81\u5f15\u8d77\u7684**\n\n\u8bd5\u60f3:\u5047\u5982\u8fd9\u7fa4\u5c0f\u670b\u53cb\u95f4\u4e0d\u5b58\u5728\u597d\u670b\u53cb\u5173\u7cfb\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u5b58\u5728\u4efb\u4f55\u51b2\u7a81\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u8fdd\u80cc\u597d\u670b\u53cb\u7684\u610f\u613f\uff0c\u4e5f\u4e0d\u4f1a\u4e3a\u4e86\u548c\u597d\u670b\u53cb\u7684\u7acb\u573a\u4fdd\u6301\u4e00\u81f4\u800c\u8fdd\u80cc\u4e86\u81ea\u8eab\u7684\u610f\u613f\n\n\n------------\n\n### \u5173\u4e8e\u7b2c\u4e8c\u79cd\u51b2\u7a81\uff0c\u662f\u7531\u4e8e\u4e00\u5bf9\u597d\u670b\u53cb\u6301\u4e0d\u540c\u7684\u7acb\u573a\n\n\u6362\u4e00\u79cd\u7406\u89e3\n\n(\u8bbe\u6709\u4e00\u5bf9\u597d\u670b\u53cb\uff0c\u5c0fA \u5c0fB\uff09\n\n\u5c0fA \u8981\u6c42 \u5c0fB\u540c\u81ea\u5df1\u4e00\u4e2a\u7acb\u573a \uff0c\u800c\u5c0fB\u8981\u6c42\u5c0fA\u540c\u81ea\u5df1\u4e00\u4e2a\u7acb\u573a\n\n\uff08~~\u8bdd\u8bf4\u8fd9\u5c31\u662f\u5c0f\u670b\u53cb\u7684\u53cb\u8c0a\u554a\uff0c\u603b\u662f\u5e0c\u671b\u597d\u670b\u53cb\u548c\u81ea\u5df1\u4fdd\u6301\u4e00\u81f4~~\uff09\n\n\u7531\u4e8e\u5c0fA\uff0c\u5c0fB\u90fd\u8981\u6c42\u5bf9\u65b9\u6539\u53d8\u7acb\u573a\uff0c\u662f\u4e0d\u662f\u5c31\u53d1\u751f\u4e86\u51b2\u7a81\uff1f\n\n------------\n\n\u73b0\u5728\uff0c\u6211\u4eec\u518d\u56de\u5230\u6211\u4eec\u8bbe\u5b9a\u7684\u5355\u5411\u8fb9\u542b\u4e49\n\n### \u4e00\u6761\u4eceA\u2014\u2014>B\u7684\u8fb9\uff0c\u8868\u793a A \u8981\u6c42 B \u540c\u5b83\u540c\u7acb\u573a\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u597d\u670b\u53cb\u4e4b\u95f4\u9700\u8981\u8fde\u53cc\u5411\u8fb9\u662f\u4e0d\u662f\u5c31\u89e3\u51b3\u4e86\uff1f.........\n\n _\u597d\u670b\u53cb\u4e92\u76f8\u8981\u6c42\u5bf9\u65b9\u540c\u81ea\u5df1\u4e00\u4e2a\u7acb\u573a_ \n \n \u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u591a\u89d2\u5ea6\u601d\u8003\uff1a\n \n \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u5012\u8fc7\u6765\u60f3\uff1a _\u5018\u82e5\u597d\u670b\u53cb\u4e4b\u95f4\u662f\u5355\u5411\u8fb9\uff1f\u90a3\u4e48\u672c\u8eab\u56fe\u5c31\u662f\u8d70\u4e0d\u901a\u7684\uff0c\u4e5f\u5c31\u4e0d\u5b58\u5728\u51b2\u7a81\u4e86,\u663e\u7136\u4e0d\u7b26_ \n \n \u4e5f\u53ef\u4ee5\u4ece\u5bf9\u79f0\u6027\u7684\u89d2\u5ea6\u6765\u770b\uff1a _A \u4e0e B\u7684\u670b\u53cb\u5173\u7cfb\u662f\u76f8\u5bf9\u7684\uff0c\u5355\u5411\u8fb9\u663e\u7136\u4e0d\u7b26\u5408\u5bf9\u79f0\u6027_ \n \n------------\n\n## \u89e3\u51b3\u51b2\u7a81\n\u7531\u4e8e\uff0c\u8fdd\u80cc\u81ea\u5df1\u610f\u613f\u7684\u51b2\u7a81\u6839\u672c\u4e0a\u662f\u7531\u4e8e\u597d\u670b\u53cb\u4e4b\u95f4\u7684\u51b2\u7a81\n\n\u90a3\u4e48\uff0c\u89e3\u51b3\u51b2\u7a81\u5c31\u5fc5\u987b\u5148\u89e3\u51b3\u597d\u670b\u53cb\u95f4\u7684\u51b2\u7a81\n\n\u6240\u4ee5\uff0c\u5982\u4f55\u89e3\u51b3\u597d\u670b\u53cb\u95f4\u7684\u51b2\u7a81\u5462\uff1f\u2014\u2014**\u5f88\u7b80\u5355\uff0c\u6539\u53d8\u4e24\u4eba\u95f4\u4efb\u610f\u4e00\u4e2a\u4eba\u7684\u7acb\u573a**\n\n\uff08 _\u5373\u5272\u6389\u597d\u670b\u53cb\u95f4\u7684\u4e00\u6761\u8fb9\uff0c\u4e00\u4e2a\u4eba\u5c31\u4e0d\u518d\u8981\u6c42\u53e6\u4e00\u4e2a\u4eba\u7684\u7acb\u573a_ \uff09\n\n\u5176\u6b21\uff0c\u5982\u4f55\u89e3\u51b3\u8fdd\u80cc\u81ea\u8eab\u7684\u51b2\u7a81\u5462\uff1f\u2014\u2014**\u65e0\u975e\u4e5f\u662f\u5272\u8fb9\uff0c\u8ba9\u81ea\u5df1\u4e0d\u518d\u88ab\u8981\u6c42\u6301\u8be5\u7acb\u573a**\n\n\u5982\u4f55\u4ed8\u51fa\u6700\u5c0f\u7684\u4ee3\u4ef7\uff0c\u5c31\u89e3\u51b3\u6240\u6709\u7684\u51b2\u7a81\u5462\uff1f\u6240\u5272\u7684\u8fb9**\u5bb9\u91cf\u4e4b\u548c**\u6700\u5c0f\u3002\u8fd9\u5c31\u8f6c\u5316\u6210**\u6700\u5c0f\u5272\u95ee\u9898**\u4e86\u3002\n### \u6839\u636e\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406 \u6700\u5c0f\u5272\u7b49\u4e8e\u6700\u5927\u6d41\n(\u5173\u4e8e\u6b64\u5b9a\u7406\u7684\u8bc1\u660e\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c~~\u8bf7\u95ee\u5ea6\u5a18\u5427~~)\n\n _\u6240\u4ee5\uff0c\u5efa\u5b8c\u56fe\u540e\u8dd1\u4e00\u8fb9\u6700\u5927\u6d41\u5c31\u5b8c\u4e8b\u4e86_ \n \n######  \u732e\u4e0a\u849f\u84bb\u7684\u4ee3\u7801\n \n ```cpp\n#include <bits/stdc++.h>\n#define inf 0x3f3f3f3f\nusing namespace std;\nconst int N=200520;\nint n,m,s,t,pos,tot=1,maxflow;\nint vis[N],incf[N],pre[N],head[N],Next[N],ver[N],edge[N];\nvoid add(int x,int y,int z){\n    ver[++tot]=y;edge[tot]=z;Next[tot]=head[x];head[x]=tot;\n    ver[++tot]=x;edge[tot]=0;Next[tot]=head[y];head[y]=tot;\n}\nbool bfs(){    \n    memset(vis,0,sizeof(vis));vis[s]=1;\n    queue<int> q;q.push(s);\n    incf[s]=inf;\n    while(q.size()){\n        int x=q.front();q.pop();\n        for(int i=head[x];i;i=Next[i])\n            if(edge[i]){\n            \tint y=ver[i];\n            \tif(vis[y])continue;\n            \tincf[y]=min(incf[x],edge[i]);\n            \tpre[y]=i;\n            \tq.push(y);\n            \tvis[y]=1;\n            \tif(y==t)return 1;\n        \t}\n    }\n    return 0;\n}\nvoid update(){\n    int x=t;\n    while(x!=s){\n        int i=pre[x];\n        edge[i]-=incf[t];\n        edge[i^1]+=incf[t];\n        x=ver[i^1];\n    }\n    maxflow+=incf[t];\n}\nint main()\n{\n    //\u670b\u53cb\u95f4\u5efa\u53cc\u5411\u8fb9\uff0c\u53cd\u5bf9\u548c\u540c\u610f\u5206\u522b\u4e0e\u6e90\u70b9\u548c\u6c47\u70b9\u76f8\u8fde\uff0c\u6700\u5c0f\u51b2\u7a81\u5373\u6700\u5c0f\u5272\uff0c\u5373\u6700\u5927\u6d41 \n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    s=0,t=n+1;\n  \tfor(int i=1;i<=n;i++){\n  \t\tcin>>pos;\n  \t\tif(pos)add(s,i,1);\n  \t\telse add(i,t,1);\n      }\n    for(int i=1;i<=m;i++){\n        int x,y;\n        cin>>x>>y;\n        add(x,y,1);\n        add(y,x,1); \n    } \n    while(bfs())update();\n    cout<<maxflow<<endl;\n    return 0;\n}\n\n```\n\u672c\u9898\u662f\u6211\u5199\u7684\u7f51\u7edc\u6d41\u7b2c\u4e09\u9898\uff08~~\u4e0d\u7b97\u677f\u5b50\u5e94\u8be5\u662f\u7b2c\u4e8c\u9898~~\uff09\n\n\u8fd9\u4e5f\u662f\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff08\u8fd8\u771f\u662f\u610f\u4e49\u5de8\u5927\uff09\u4e5f\u5e9f\u4e86\u4e0d\u5c11\u529f\u592b\n\n\u6240\u4ee5\uff0c\u5982\u679c\u770b\u61c2\u7684\u8bdd\u4e0d\u59a8\u70b9\u4e2a\u8d5e\uff0c\n\u7b97\u662f\u5bf9\u6211\u7684\u8ba4\u53ef\u5427\uff0c\u4e5f\u4e3a\u4e86\u8ba9\u66f4\u591a\u548c\u6211\u4e00\u6837\u88ab\u6bd2\u7624\u7684\u7f51\u7edc\u6d41\u56f0\u6270\u7684\u840c\u65b0\u4eec\u770b\u5230~~~~\n\n##### \u6e9c\u6e9c\u6e9c_________________________________________________________________________________________________________________________\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1558758175,
        "uid": 114545,
        "name": "ReZHUI",
        "ccfLevel": 0,
        "title": "\u5584\u610f\u7684\u6295\u7968\u9898\u89e3"
    },
    {
        "content": " \u597d\u4e45\u6ca1\u6709\u5199\u9898\u89e3\u4e86\u554a\uff5e\r\n\r\n### \u7406\u89e3\u4e0b\u9898\u610f\uff1a###\r\n\r\n\u9898\u610f\u5927\u81f4\u5c31\u662f\u6709n\u4e2a\u4eba\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u610f\u89c1\u5e76\u4e14\u6709\u8bb8\u591a\u670b\u53cb\uff0c\u9700\u8981\u8ba9\u670b\u53cb\u95f4\u5c3d\u53ef\u80fd\u7684\u7edf\u4e00\u610f\u89c1\uff08\u5c11\u53d1\u751f\u51b2\u7a81\uff09\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u8fdd\u53cd\u81ea\u5df1\u7684\u672c\u610f\u4e5f\u7b97\u51b2\u7a81\uff0c\u6c42\u6700\u5c11\u7684\u51b2\u7a81\u3002\u3002\u3002\r\n\r\n### \u601d\u8def\uff1a###\r\n\r\n\u660e\u773c\u4eba\u76f4\u63a5\u53d1\u73b0\u662f\u6700\u5c0f\u5272\uff0c\u4e24\u79cd\u610f\u89c1\u53ef\u4ee5\u770b\u4f5c\u6e90\u70b9S\u548cT\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u5272\u6700\u5c11\u7684\u8fb9\u4f7f\u5f97S\u548cT\u6210\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u89e3\u91ca\uff1a\u5272\u6389\u7684\u8fb9\u76f8\u5f53\u4e8e1\u6b21\u51b2\u7a81\uff08\u56e0\u4e3a\u82e5\u67d0\u8fb9\u88ab\u5272\u8d70\uff0c\u5219\u663e\u7136\u8fd9\u6761\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u901a\u5411\u4e86S\u548cT\uff0c\u6240\u4ee5\u7b97\u662f\u4e00\u6b21\u51b2\u7a81\uff09\uff0c\u5f53S\u548cT\u8fd8\u8fde\u901a\u65f6\u5219\u5fc5\u7136\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u8fd9\u6837\u80af\u5b9a\u4f1a\u6709\u51b2\u7a81\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u5f97S\u548cT\u5b64\u7acb\u3002\r\n\r\n# \u5b9e\u73b0\uff1a\r\n\r\n**\u5b9e\u73b0\u65f6\u8fd9\u6837\u5efa\u56fe\uff1a\u76f4\u63a5\u5c06S\u8fde\u5411\u540c\u610f\u7684\u4eba\uff0cT\u8fde\u5411\u4e0d\u540c\u610f\u7684\u4eba\uff0c\u82e5\u4e24\u4eba\u662f\u670b\u53cb\uff0c\u5219\u5728\u4ed6\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761\u53cc\u5411\u8fb9\uff08\u8fd9\u91cc\u6709\u4e9b\u4eba\u4e0d\u7406\u89e3\uff1a\u82e5\u4e24\u4e2a\u4eba\u6709\u51b2\u7a81\uff0c\u5219\u53ea\u9700\u8981\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u4eba\u6539\u53d8\u610f\u89c1\u5c31\u884c\u4e86\uff0c\u7b80\u5355\u8bf4\u662f\u8ba9a\u540c\u610fb\u7684\u610f\u89c1\u6216\u8005b\u540c\u610fa\u7684\u610f\u89c1\uff0c\u6240\u4ee5\u53ea\u9700\u5272\u6389\u4e00\u6761\u8fb9\u6ee1\u8db3\u4e00\u79cd\u60c5\u51b5\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u5efa\u53cc\u5411\u8fb9\uff09\u3002\u6700\u540e\u5c31\u662f\u6c42\u6700\u5c0f\u5272\u4e86\uff0c\u76f4\u63a5\u5957\u4e0a\u6700\u5927\u6d41\u7684\u6a21\u677f\u5c31ok\u4e86\u3002**\r\n\r\n\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n    #include<bits/stdc++.h>\r\n    #define il inline\r\n    using namespace std;\r\n    const int N=100005,inf=23333333;\r\n    int n,m,s,t=520,h[N],cnt=1,dis[N],ans;\r\n    struct edge{\r\n    int to,net,v;\r\n    }e[N*4];\r\n    il void add(int u,int v,int w)\r\n    {\r\n        e[++cnt].to=v,e[cnt].net=h[u],e[cnt].v=w,h[u]=cnt;\r\n        e[++cnt].to=u,e[cnt].net=h[v],e[cnt].v=0,h[v]=cnt;\r\n    }\r\n    queue<int>q;\r\n    il bool bfs()\r\n    {\r\n        memset(dis,-1,sizeof(dis));\r\n        q.push(s),dis[s]=0;\r\n        while(!q.empty())\r\n        {\r\n            int u=q.front();q.pop();\r\n            for(int i=h[u];i;i=e[i].net)\r\n            if(dis[e[i].to]==-1&&e[i].v>0)dis[e[i].to]=dis[u]+1,q.push(e[i].to);\r\n        }\r\n        return dis[t]!=-1;\r\n    }\r\n    il int dfs(int u,int op)\r\n    {\r\n        if(u==t)return op;\r\n        int flow=0,used=0;\r\n        for(int i=h[u];i;i=e[i].net)\r\n        {\r\n            int v=e[i].to;\r\n            if(dis[v]==dis[u]+1&&e[i].v>0)\r\n            {\r\n                used=dfs(v,min(op,e[i].v));\r\n                if(!used)continue;\r\n                flow+=used,op-=used;\r\n                e[i].v-=used,e[i^1].v+=used;\r\n                if(!op)break;\r\n            }\r\n        }\r\n        if(!op)dis[u]=-1;\r\n        return flow;\r\n    }\r\n    int main()\r\n    {\r\n        scanf(\"%d%d\",&n,&m);\r\n        int x,y;\r\n        for(int i=1;i<=n;i++){\r\n            scanf(\"%d\",&x);\r\n            if(x==1)add(s,i,1);\r\n            else add(i,t,1);\r\n        }\r\n        for(int i=1;i<=m;i++){\r\n            scanf(\"%d%d\",&x,&y);\r\n            add(x,y,1),add(y,x,1);\r\n        }\r\n        while(bfs())ans+=dfs(s,inf);\r\n        cout<<ans;\r\n        return 0;\r\n}\r\n```",
        "postTime": 1514894169,
        "uid": 44000,
        "name": "\u6d45\u8272\u8c03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2057 \u3010\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "\n\u5176\u5b9e\u8fd9\u9898\u6a21\u62df\u9000\u706b\u4e5f\u80fd\u8fc7\u3002\n\n\u6a21\u62df\u9000\u706b\uff0c\u4e00\u822c\u7528\u4e8e\u6c42\u6700\u4f18\u503c\u7684\u95ee\u9898\uff0c\n\n\u9996\u5148\u8bbe\u5b9a\u4e00\u4e2a\u521d\u59cb\u6e29\u5ea6\uff0c\u5728\u9ad8\u6e29\u72b6\u6001\u6bd4\u8f83\u5bb9\u6613\u63a5\u53d7\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u4e4b\u540e\u6e29\u5ea6\u964d\u4f4e\uff0c\u8f83\u4e3a\u96be\u63a5\u53d7\u4e0d\u4f18\u89e3\n\n\u8fd9\u9898\u4e5f\u662f\u8fd9\u6837\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MAXN 305  \n#define db double \n\nstruct aa\n{\n\tint x,y,ls;\n}b[MAXN*MAXN*2];\nint cnt,t[MAXN];\nint n,m,ans;\nint a[MAXN],d; \nbool c[MAXN];\n\nvoid jb(int x,int y)//\u5efa\u8fb9\n{\n\tcnt ++;\n\tb[cnt].x = x;\n\tb[cnt].y = y;\n\tb[cnt].ls = t[x];\n\tt[x] = cnt;\n}\n\nvoid rd()//\u8f93\u5165\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1; i <= n; i ++)\n\t\tcin >> a[i];\n\tfor(int i = 1; i <= m; i ++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tjb(x,y);\n\t\tjb(y,x); \n\t}\n}\n\ndb sj()\n{\n\treturn ((db)(rand()*rand()%19260817))/(db)19260817;\n} \n\nvoid mnth(db s,db dt,db tt)//s:\u73b0\u5728\u6e29\u5ea6\uff0cdt\u6bcf\u6b21\u964d\u6e29\uff0ctt\u6700\u7ec8\u6e29\u5ea6\uff0cd\u8868\u793a\u73b0\u5728\n{\n\tfor(s;s >= tt; s *= dt)\n\t{\n\t\tint x = rand()%n+1,ls =d;\n\t\tc[x] = !c[x];//\u6539\u53d8\u4e00\u4e2a\u4eba\u7684\u9009\u7968\n\t\tif(c[x] == a[x]) d -= 1;\n\t\telse d += 1;//\u548c\u81ea\u5df1\u610f\u5411\u4e0d\u540c\n\t\t\n\t\tfor(int i = t[x]; i != 0; i = b[i].ls) \n\t\t\tif(c[x] == c[b[i].y]) d -= 1;\n\t\t\telse d += 1;//\u548c\u670b\u53cb\u9009\u7968\u4e0d\u540c\n\t\tans = min(ans,d);\n\t\tif(d < ls || exp((d-ls)/s) < sj()*10) \n\t\t{\n\t\t\t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc[x] = !c[x];\n\t\t\td = ls;\n\t\t}\n\t}\n\tfor(int i = 1; i <= 233; i ++)\n\t{\n\t\tint x = rand()%n+1,ls =d;\n\t\tc[x] = !c[x];\n\t\tif(c[x] == a[x]) d -= 1;\n\t\telse d += 1;\n\t\t\n\t\tfor(int i = t[x]; i != 0; i = b[i].ls) \n\t\t\tif(c[x] == c[b[i].y]) d -= 1;\n\t\t\telse d += 1;\n\t\tans = min(ans,d);\n\t\tif(d < ls) \n\t\t{\n\t\t\t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc[x] = !c[x];\n\t\t\td = ls;\n\t\t}\t\t\n\t}\t\n}\n\nint main()\n{\n\trd();\n\tfor(int i = 1; i <= n; i ++)\n\t\tif(a[i] != 0) \n\t\t\tans ++;\n\td = ans;\n\n\tmnth(1000000000,0.9997,0.0000001);\n\tif(n < 100)\n\t{\n\t\tmnth(1000000000,0.99997,0.0000001);\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1541163909,
        "uid": 17850,
        "name": "ChthollyTree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "\u6bcf\u4e2a\u5c0f\u670b\u53cb\u6295\u540c\u610f\u6216\u8005\u53cd\u5bf9\n\n\u76f8\u5f53\u4e8e\u628a\u5c0f\u670b\u53cb\u4eec\u5272\u4e3a\u4e24\u5757\n\n\u90a3\u4e48\uff0c\u8003\u8651\u6700\u5c0f\u5272\n\n\u9996\u5148\uff0c\u5206\u522b\u5c06\u540c\u610f\u548c\u53cd\u5bf9\u7684\u4e0e\u6e90\u70b9\u6216\u8005\u6c47\u70b9\u8fde\u8fb9\n\n\u5982\u679c\u8fdd\u53cd\u81ea\u5df1\u610f\u613f\uff0c\u5219\u76f8\u5f53\u4e8e\u4e0e\u8fd9\u4e2a\u70b9\u5272\u5f00\n\n\u540c\u65f6\uff0c\u6bcf\u4e2a\u70b9\u4e0e\u81ea\u5df1\u7684\u670b\u53cb\u8fde\u8fb9\n\n\u5982\u679c\u5272\u5f00\uff0c\u76f8\u5f53\u4e8e\u4e0e\u670b\u53cb\u610f\u89c1\u4e0d\u540c\n\n\u6700\u540e\u89e3\u51b3\u6700\u5c0f\u5272\uff0c\u5373\u6c42\u6700\u5927\u6d41\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<set>\n#include<map>\n#include<vector>\n#include<queue>\nusing namespace std;\n#define MAX 500\n#define MAXL 200000\n#define INF 20000000\ninline int read()\n{\n    int x=0,t=1;char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n    if(ch=='-')t=-1,ch=getchar();\n    while(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nstruct Line\n{\n    int v,next,w;\n}e[MAXL];\nint h[MAX],cnt;\nint ans,S,T,n,m;\ninline void Add(int u,int v,int w)\n{\n    e[cnt]=(Line){v,h[u],w};\n    h[u]=cnt++;\n    e[cnt]=(Line){u,h[v],0};\n    h[v]=cnt++;\n}\nint level[MAX];\nint cur[MAX];\nbool BFS()\n{\n    memset(level,0,sizeof(level));\n    level[S]=1;\n    queue<int> Q;\n    Q.push(S);\n    while(!Q.empty())\n    {\n        int u=Q.front();Q.pop();\n        for(int i=h[u];i!=-1;i=e[i].next)\n        {\n            int v=e[i].v;\n            if(e[i].w&&!level[v])\n                level[v]=level[u]+1,Q.push(v);\n        }\n    }\n    return level[T];\n}\nint DFS(int u,int flow)\n{\n    if(flow==0||u==T)return flow;\n    int ret=0;\n    for(int &i=cur[u];i!=-1;i=e[i].next)\n    {\n        int v=e[i].v;\n        if(e[i].w&&level[v]==level[u]+1)\n        {\n            int dd=DFS(v,min(flow,e[i].w));\n            flow-=dd;ret+=dd;\n            e[i].w-=dd;e[i^1].w+=dd;\n        }\n    }\n    return ret;\n}\nint Dinic()\n{\n    int ret=0;\n    while(BFS())\n    {\n        for(int i=S;i<=T;++i)cur[i]=h[i];\n        ret+=DFS(S,INF);\n    }\n    return ret;\n}\nint main()\n{\n    memset(h,-1,sizeof(h));\n    n=read();m=read();\n    S=0,T=n+1;\n    for(int i=1;i<=n;++i)\n    {\n        int k=read();\n        if(k)Add(S,i,1);\n        else Add(i,T,1);\n    }\n    for(int i=1;i<=m;++i)\n    {\n        int u=read(),v=read();\n        Add(u,v,1);Add(v,u,1);\n    }\n    printf(\"%d\\n\",Dinic());\n    return 0;\n}\n\n```",
        "postTime": 1514364971,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2057 \u3010\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "\u5efa\u6a21\u65b9\u5f0f\u5982\u4e0b\u56fe\u2193\n\n![](https://cdn.luogu.com.cn/upload/pic/15953.png)\n\n\u4e3a\u4e86\u5c06\u6b64\u9898\u6a21\u578b\u62bd\u8c61\u5316\u3001\u666e\u904d\u5316\uff0c\u6211\u4eec\u79f0\u652f\u6301\u7761\u89c9\u4e3a\u65b9\u68481\uff0c\u53cd\u5bf9\u7761\u89c9\u4e3a\u65b9\u68482\uff0c\u4e14\u4e24\u65b9\u6848\u4e92\u65a5\u3002\n\n\u652f\u63011\u7684\u8fde\u6e90\u70b9\uff0c\u652f\u63012\u7684\u8fde\u6c47\u70b9\uff0c\u8fb9\u6743\u90fd\u4e3a1\uff0c\u8fd9\u5c31\u4ee3\u8868\u4e86**\u4e0e\u5176\u65b9\u6848\u76f4\u63a5\u51b2\u7a81**\u7684\u4ee3\u4ef7\uff1b\u540c\u7406\uff0c\u670b\u53cb\u4e4b\u95f4\u8fde\u53cc\u5411\u8fb9\uff0c\u4e14\u8fb9\u6743\u4e3a1\uff0c\u4ee3\u8868**\u4e24\u4eba\u534f\u5546**\u7684\u4ee3\u4ef7\u3002\n\n\u8fd9\u6837\u6700\u5c0f\u5272\u7684\u610f\u4e49\u5c31\u660e\u786e\u4e86\u2014\u2014\u6bcf\u4eba\u65b9\u6848\u76f8\u4e92\u51b2\u7a81\u6216\u534f\u5546**\u4ea7\u751f\u4ee3\u4ef7\u7684\u6700\u5c0f\u503c**\u3002\n\n\u4ee3\u7801\u5982\u4e0b\u2193\n\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nconst int INF=2e9;\n\nint n,m,s,t,np=1,x,y;\nint h[305],cur[305],tp[305],q[60050];\nstruct rpg{\n    int li,nx,ln;\n}a[60050];\n\ninline void add(int ls,int nx,int ln){\n    a[++np]=(rpg){h[ls],nx,ln};\n    h[ls]=np;\n}\n\ninline bool bfs(){\n    memset(tp,0,sizeof(tp));\n    int hd=1,tl=1;\n    q[hd]=s;\n    tp[s]=1;\n    while(hd<=tl){\n        int nw=q[hd++];\n        for(int i=h[nw];i;i=a[i].li){\n            if(a[i].ln&&!tp[a[i].nx]){\n                tp[a[i].nx]=tp[nw]+1;\n                q[++tl]=a[i].nx;\n            }\n        }\n    }return tp[t];\n}\n\nint dfs(int u,int maxn){\n    if(u==t||!maxn) return maxn;\n    int sum=0;\n    for(int& i=cur[u];i;i=a[i].li){\n        if(a[i].ln&&tp[a[i].nx]==tp[u]+1){\n            int f=dfs(a[i].nx,min(maxn,a[i].ln));\n            if(f){\n                maxn-=f;\n                sum+=f;\n                a[i].ln-=f;\n                a[i^1].ln+=f;\n                if(!maxn) break;\n            }\n        }\n    }return sum;\n}\n\nint dnc(){\n    int ans=0;\n    while(bfs()){\n        for(int i=0;i<=t;++i) cur[i]=h[i];\n        while(int d=dfs(s,INF)) ans+=d;\n    }return ans;\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);t=n+1;\n    for(register int i=1;i<=n;++i){\n        scanf(\"%d\",&x);\n        if(x){\n            add(s,i,1);\n            add(i,s,0);\n        }else{\n            add(i,t,1);\n            add(t,i,0);\n        }\n    }for(register int i=1;i<=m;++i){\n        scanf(\"%d%d\",&x,&y);\n        add(x,y,1);\n        add(y,x,1);\n    }printf(\"%d\\n\",dnc());\n    return 0;\n}\n```",
        "postTime": 1521638931,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "# \u5176\u5b9e\u8fd9\u9898\u66b4\u641c\u4e5f\u80fd\u8fc7\u3002\u3002\u3002\n\n\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u72b6\u6001\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e0e\u5b83\u76f8\u90bb\u7684\u70b9\uff0c\u6839\u636e\u5df2\u786e\u5b9a\u7684\u76f8\u90bb\u70b9\u7684\u72b6\u6001\u8ba1\u7b97\u8d21\u732e\uff0c\u7136\u540e\u8d2a\u5fc3\u7684\u9009\u62e9\u51b2\u7a81\u6570\u8f83\u5c0f\u7684\u72b6\u6001\u5148\u641c\u7d22\uff0c\u7136\u540e\u518d\u641c\u53e6\u4e00\u79cd\uff0c\u8fd9\u6837\u52a0\u4e00\u4e2a\u6700\u4f18\u5316\u51cf\u679d\u53ef\u4ee5\u76f4\u63a5\u62ff\u523080\u5206\u3002\u7136\u540e\u518d\u52a0\u4e00\u4e2a\u4f18\u5316\uff0c\u5373\u5bf9\u4e8e\u8fd8\u672a\u786e\u5b9a\u7684\u76f8\u90bb\u70b9\u7684\u72b6\u6001\uff0c\u5982\u679c\u5b83\u539f\u6765\u7684\u610f\u613f\u548c\u5f53\u524d\u70b9\u9009\u62e9\u7684\u4e0d\u540c\uff0c\u5148\u8ba1\u7b971\u7684\u8d21\u732e\uff0c\u4e4b\u540e\u518d\u51cf\u53bb\uff0c\u8fd9\u6837\u5c31\u80fd\u62ff\u5230100\u5206\u4e86\u3002\u3002\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 507\nconst int inf=1e9;\nint a[N],b[N],n,ans;\nbool vis[N];\nvector<int> e[N];\nvoid adde(int x,int y)\n{\n\te[x].push_back(y);\n\te[y].push_back(x);\n}\nvoid dfs(int x,int d)\n{\n\tif(d>=ans)return;\n\tif(x>n)\n\t{\n\t\tans=min(ans,d);\n\t\treturn ;\n\t}\n\tif(vis[x])d--;\n\tint s0=0,s1=0;\n\tvector<int> d0,d1;\n\tfor(auto u:e[x])\n\t{\n\t\tif(u>x)\n\t\t{\n\t\t\tif(!vis[u])\n\t\t\t{\n\t\t\t\tif(a[u]==1)s0++,d0.push_back(u);\n\t\t\t\telse s1++,d1.push_back(u);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(b[u]==1)s0++;\n\t\t\telse s1++;\n\t\t}\n\t}\n\t//printf(\"%d %d\\n\",d0.size(),d1.size());\n\tif(a[x]==1)s0++;\n\telse s1++;\n\tif(s0<s1)\n\t{\n\t\tfor(auto u:d0)vis[u]=true;\n\t\tb[x]=0;dfs(x+1,d+s0);\n\t\tfor(auto u:d0)vis[u]=false;\n\t\tfor(auto u:d1)vis[u]=true;\n\t\tb[x]=1;dfs(x+1,d+s1);\n\t\tfor(auto u:d1)vis[u]=false;\n\t}\n\telse\n\t{\n\t\tfor(auto u:d1)vis[u]=true;\n\t\tb[x]=1;dfs(x+1,d+s1);\n\t\tfor(auto u:d1)vis[u]=false;\n\t\tfor(auto u:d0)vis[u]=true;\n\t\tb[x]=0;dfs(x+1,d+s0);\n\t\tfor(auto u:d0)vis[u]=false;\n\t}\n}\nint main()\n{\n\tint m,i,x,y;\n\t//freopen(\"data.in\",\"r\",stdin);\n\t//freopen(\"test.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadde(x,y);\n\t}\n\tans=inf;\n\tdfs(1,0);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1557129552,
        "uid": 100806,
        "name": "lyyi2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "\u6570\u636e\u771f\u6c34\uff0c\u6211\u8fd9\u79cd\u975e\u6b63\u89e3\u7684\u9a97\u5206\u505a\u6cd5\u7adf\u7136\u4e5f\u80fdAC\u2026\u2026\u5f3a\u70c8\u8981\u6c42\u52a0\u5f3a\u6570\u636e\u3002\n\n\u4ecb\u7ecd\u4e00\u4e0b\u6211\u7684\u8d2a\u5fc3\u9a97\u5206\u505a\u6cd5\u3002\n\n\u7531\u4e8e\u670b\u53cb\u76f4\u63a5\u53d1\u751f\u51b2\u7a81\u6570\u4e0e\u6539\u53d8\u81ea\u5df1\u7684\u610f\u89c1\u662f\u7b49\u6548\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u8fd9\u6837\u8d2a\u5fc3\uff1a\u4e00\u5207\u968f\u670b\u53cb\u3002\u4e00\u4e2a\u670b\u53cb\u96c6\u4f53\u5185\u6240\u6295\u7684\u7968\u662f\u4e00\u81f4\u7684\uff0c\u800c\u6240\u6295\u7684\u5185\u5bb9\u5c31\u662f\u8fd9\u4e2a\u670b\u53cb\u7fa4\u4e2d\u5927\u90e8\u5206\u4eba\u7684\u610f\u613f\u3002\u800c\u5176\u4ea7\u751f\u7684\u51b2\u7a81\u503c\u5c31\u4e3a\u652f\u6301\u53e6\u4e00\u79cd\u7684\u4eba\u7684\u4eba\u6570\u3002\n\n\u8fd9\u53ef\u4ee5\u7b80\u5355\u5730\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\n\n```cpp\n#include <cstdio>\n \nconst int maxn=300;\nint n,m;\nint a[maxn+1], fa[maxn+1], res[maxn+1][2];\n \nint bcj(int x) {\n    if (x==fa[x])\n        return x;\n    return fa[x]=bcj(fa[x]);\n}\n \nvoid init() {\n    scanf(\"%d %d\",&n,&m);\n    for (int i=1; i<=n; i++)\n        fa[i]=i;\n    for (int i=1; i<=n; i++)\n        scanf(\"%d\",a+i);\n}\n \nvoid solve() {\n    int x,y;\n    for (int i=1; i<=m; i++) {\n        scanf(\"%d %d\",&x,&y);\n        int p=bcj(x), q=bcj(y);\n        if (p!=q)\n            fa[p]=q;\n    }\n    for (int i=1; i<=n; i++) {\n        int p=bcj(i);\n        res[p][a[i]]++;\n    }\n}\n \nvoid print() {\n    int ans=0;\n    for (int i=1; i<=n; i++) {\n        if (res[i][0]>res[i][1])\n            ans+=res[i][1];\n        else\n            ans+=res[i][0];\n    }\n    printf(\"%d\\n\",ans);\n}\n \nint main() {\n    init();\n    solve();\n    print();\n    return 0;\n}\n```",
        "postTime": 1517909349,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "## \u5584\u610f\u7684\u6295\u7968\n### \u524d\u8a00\n\u6700\u8fd1\u5b66\u4e60\u4e86\u7f51\u7edc\u6d41\uff0c\u53d1\u73b0\u5728\u56fe\u8bba\u4e0a\u9762\u683c\u5916\u597d\u7528\uff0c\u73b0\u5728\u6765\u770b\u4e00\u770b\u8fd9\u6837\u7684\u9898\uff0c\u62d3\u5f20\u4e00\u4e0b\u77e5\u8bc6\n\n### \u9898\u610f\n\u5c31\u662f\u8ba9\u4f60\u6c42\u5c0f\u76c6\u53cb\u600e\u4e48\u6837\u6295\u7968\u624d\u80fd\u591f\u4f7f\u51b2\u7a81\u6570\u6700\u5c0f\uff08~~\u5f88\u663e\u7136\u4e86~~\uff09\n\n###  \u601d\u8def\n\u81ea\u53e4\u4ee5\u6765\uff0c\u7f51\u7edc\u6d41\u7684\u677f\u5b50\u6c38\u8fdc\u662f\u88aboier\u4eec\u6240\u94ed\u8bb0\u7684\uff0c\u4f46\u662f\uff0c\u5982\u4f55\u5efa\u6a21\uff08\u5efa\u8fb9\uff09\u4e00\u76f4\u5c31\u662f\u4e00\u9053\u96be\u9898\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u9053\u9898\u6211\u4eec\u5c31\u4e3b\u8981\u6765\u8bb2\u4e00\u4e0b\uff0c\u5efa\u6a21\u7684\u65b9\u6cd5\n\n### \u5206\u6790\n\u55ef\uff0c\u8fd9\u9053\u9898\u76ee\u7684\u5efa\u6a21\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u57fa\u7840\u7684\u4e86\uff0c\u5176\u5b9e\u771f\u5b9e\u96be\u5ea6\u6700\u591a\u53ea\u6709\u4e00\u9053\u84dd\u9898\u3002\n\n\u4e0d\u626f\u4e86\uff0c\u6b63\u5f0f\u5f00\u59cb\u8bb2\n\n\u660e\u773c\u4eba\u76f4\u63a5\u53d1\u73b0\u662f\u6700\u5c0f\u5272\uff0c\u4e24\u79cd\u610f\u89c1\u53ef\u4ee5\u770b\u4f5c\u6e90\u70b9S\u548cT\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u5272\u6700\u5c11\u7684\u8fb9\u4f7f\u5f97S\u548cT\u6210\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\n\n\u89e3\u91ca\uff1a\u5272\u6389\u7684\u8fb9\u76f8\u5f53\u4e8e1\u6b21\u51b2\u7a81\uff08\u56e0\u4e3a\u82e5\u67d0\u8fb9\u88ab\u5272\u8d70\uff0c\u5219\u663e\u7136\u8fd9\u6761\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u901a\u5411\u4e86S\u548cT\uff0c\u6240\u4ee5\u7b97\u662f\u4e00\u6b21\u51b2\u7a81\uff09\uff0c\n\n\u5f53S\u548cT\u8fd8\u8fde\u901a\u65f6\u5219\u5fc5\u7136\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u8fd9\u6837\u80af\u5b9a\u4f1a\u6709\u51b2\u7a81\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u5f97S\u548cT\u5b64\u7acb\u3002\n\n\u6240\u4ee5\u5c31\u662f\u6c42\u8fd9\u9053\u9898\u76ee\u7684\u6700\u5c0f\u5272\uff0c\u800c\u6700\u5c0f\u5272\u5c31\u7b49\u4e8e\u6700\u5927\u6d41\uff0c\u6240\u4e00\u8fd9\u9053\u9898\u6700\u5927\u6d41\u8dd1\u4e00\u8dd1\u5c31\u597d\u4e86\n\n### \u5efa\u6a21\n\u4e0a\u6587\u4e5f\u8bf4\u5230\uff0c\u8981\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u4ee5\u53ca\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u5c06\u5176\u4ed6\u7684\u4e1c\u897f\u5168\u90e8\u8fde\u4e0a\u90a3\u4e48\u4e24\u4e2a\u70b9\u3002\n\n\u8fd9\u662f\uff0c\u7f51\u7edc\u6d41\u91cc\u6700\u6700\u6700\u57fa\u672c\u7684\u5efa\u56fe\u65b9\u6cd5\u3002\u6240\u4ee5\u5fc5\u987b\u719f\u6089\u7684\u638c\u63e1\n\n\u4f46\u662f\uff0c\u5728\u4ee5\u540e\uff0c\u4e5f\u4f1a\u9047\u5230\u8981\u62c6\u70b9\uff0c\u800c\u8fd9\u4e2a\u4e1c\u897f\u5c31\u6bd4\u8f83\u96be\u4e86\uff0c\u6709\u4e00\u4e9b\u9ad8\u96be\u5ea6\u7684\u9898\u76ee\u90fd\u9700\u8981\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u62c6\u70b9\u3002\u4f8b\u5982\uff1aP1231\n\n### \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<queue>\n#define N 2000005\n#define INF 23333333\nusing namespace  std;\nstruct edge\n{\n    int v, next, c;\n}edge[N];\nint st[N], tot, s, t,d[N], n, m;\nvoid add(int u, int v, int c)\n{\n    edge[tot].v = v;\n    edge[tot].c = c;\n    edge[tot].next = st[u];\n    st[u] = tot ++;\n}\nvoid insert(int u, int v, int c)\n{\n    add(u, v, c);\n    add(v, u, 0);\n}\nint bfs()\n{\n    memset(d, -1, sizeof d);\n    queue<int> q;\n    q.push(s);\n    d[s] = 0;\n    while(q.size())\n    {\n        int u = q.front(); q.pop();\n        for(int i = st[u]; i + 1; i = edge[i].next)\n        {\n            int v = edge[i].v;\n            if(edge[i].c && d[v] == -1)\n            {\n                d[v] = d[u] + 1;\n                q.push(v);\n            }\n        }\n    }\n    return d[t] != -1;  \n}\nint dfs(int u, int flow)\n{\n    if(u == t) \n        return flow;\n    int ret = 0;\n    for(int i = st[u]; i + 1; i = edge[i].next)\n    {\n        int v = edge[i].v;\n        if (edge[i].c && d[v] == d[u] + 1)\n        {\n            int tmst = dfs(v, min(flow, edge[i].c));\n            flow -= tmst;\n            edge[i].c -= tmst;\n            edge[i^1].c += tmst;\n            ret += tmst;\n            if(!flow) \n                break;\n        }\n    }\n    if(!ret) \n        d[u] = -1;\n    return ret;\n}\nint Dinic()\n{\n    int maxn=0;\n    for(;bfs();) \n        maxn+= dfs(s, INF);\n    return maxn;\n}\nint main()\n{\n    memset(st,-1,sizeof st);\n    tot=0;\n    scanf(\"%d%d\", &n, &m);\n    s=0;t=n+1;\n    int u,v,x;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        if(x) \n            insert(i,t,1); \n        else \n            insert(s,i,1);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&u,&v);\n        insert(u,v,1);\n        insert(v,u,1);\n    }\n    printf(\"%d\", Dinic());\n}\n```\n",
        "postTime": 1555140018,
        "uid": 41988,
        "name": "RNG_XDD\u5c0f\u53ee\u5f53",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "\u7f51\u7edc\u6d41\u4e4b\u6700\u5c0f\u5272\n\n\u5b89\u5229\u4e2a\u4eba [blog](https://www.luogu.com.cn/blog/et2006/wang-lao-liu-hao-ti-ti-xie-hui-zong)\n\n\u8fd9\u9053\u9898\u6709\u4e9b\u610f\u601d\u3002\n\n\u5efa\u56fe\u975e\u5e38\u7b80\u5355\uff1a\n\n1. \u5bf9\u4e8e\u6bcf\u4e2a\u540c\u5b66 $i$\uff0c\u5982\u679c\u4ed6\u4e0d\u540c\u610f\uff0c\u5c31\u8fde\u8fb9 $(S,i,1)$\uff0c\u5426\u5219\u8fde\u8fb9 $(i,T,1)$\u3002\n2. \u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u597d\u670b\u53cb $(a,b)$\uff0c\u8fde\u8fb9 $(a,b,1)$ \u548c $(b,a,1)$\u3002\n\n\u7136\u540e\u8dd1\u6700\u5c0f\u5272\u5373\u6700\u5927\u6d41\u5c31\u884c\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5c31\u5bf9\u4e86\u5462\uff1f\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u5982\u679c\u4e0d\u5272\u6389 $i$ \u4e0e $S/T$ \u4e4b\u95f4\u7684\u8fb9\uff0c\u5c31\u8868\u660e\u7b2c $i$ \u4e2a\u5b66\u751f\u7684\u9009\u62e9\u4e0e\u4ed6\u7684\u610f\u613f\u76f8\u7b26\uff0c\u5426\u5219\u8bf4\u660e\u7b2c $i$ \u4e2a\u5b66\u751f\u7684\u9009\u62e9\u4e0e\u4ed6\u7684\u610f\u613f\u4e0d\u7b26\u3002\u5982\u679c\u4e0d\u5272\u6389\u597d\u670b\u53cb\u4e4b\u95f4\u7684\u8fb9\u5c31\u8868\u660e\u5b83\u4eec\u7684\u610f\u613f\u4e00\u81f4\uff0c\u5426\u5219\u8bf4\u660e\u5b83\u4eec\u7684\u610f\u613f\u4e0d\u4e00\u81f4\u3002\n\n\u7136\u540e\u6211\u4eec\u770b\u4e00\u4e0b\u5982\u679c\u5b58\u5728 $S$ \u5230 $T$ \u7684\u8def\u5f84\u4f1a\u63a8\u51fa\u4ec0\u4e48\u77db\u76fe\uff1a\u5047\u8bbe\u6709\u4e00\u6761\u8def\u5f84 $S \\rightarrow i \\rightarrow j \\rightarrow T$\uff0c\u90a3\u4e48 $i$ \u7684\u9009\u62e9\u4e0e\u4ed6\u7684\u610f\u613f\u76f8\u540c\uff0c\u90fd\u662f\u4e0d\u540c\u610f\uff0c$j$ \u7684\u9009\u62e9\u4e0e\u4ed6\u7684\u610f\u613f\u4e5f\u76f8\u540c\uff0c\u90fd\u662f\u540c\u610f\uff0c\u800c\u5b58\u5728 $i \\rightarrow j$ \u7684\u8fb9\uff0c\u8bf4\u660e $i$ \u4e0e $j$ \u7684\u9009\u62e9\u76f8\u540c\uff0c\u77db\u76fe\uff01\n\n```cpp\n/*\n\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u591a\u6d4b\u4e0d\u8bfb\u5b8c\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8fb9\u754c\u4e0d\u7279\u5224\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d2a\u5fc3\u4e0d\u8bc1\u660e\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\nD P \u987a\u5e8f\u9519\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u5927\u5c0f\u5c11\u7b49\u53f7\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u53d8\u91cf\u4e0d\u7edf\u4e00\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d8a\u754c\u4e0d\u5224\u65ad\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8c03\u8bd5\u4e0d\u6ce8\u91ca\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u6ea2\u51fa\u4e0d l l\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi\t\t\tfirst\n#define se\t\t\tsecond\n#define fz(i,a,b)\tfor(int i=a;i<=b;i++)\n#define fd(i,a,b)\tfor(int i=a;i>=b;i--)\n#define foreach(it,v) for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\n#define put(x)\t\tputchar(x)\n#define eoln        put('\\n')\n#define space\t\tput(' ')\n#define y1\t\t\ty_chenxiaoyan_1\n#define y0\t\t\ty_chenxiaoyan_0\ninline int read(){\n\tint x=0,neg=1;char c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\tneg=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\tx=x*10+c-'0',c=getchar();\n\treturn x*neg;\n}\ninline void print(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tprint(abs(x));\n\t\treturn;\n\t}\n\tif(x<=9)\tputchar(x+'0');\n\telse{\n\t\tprint(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\ninline int qpow(int x,int e,int _MOD){\n\tint ans=1;\n\twhile(e){\n\t\tif(e&1)\tans=ans*x%_MOD;\n\t\tx=x*x%_MOD;\n\t\te>>=1;\n\t}\n\treturn ans;\n}\nint head[20005];\nstruct edge{\n\tint to,nxt,cap;\n} e[3000005];\nint ecnt=1;\ninline void addedge(int u,int v,int f){\n\te[++ecnt].to=v;e[ecnt].cap=f;e[ecnt].nxt=head[u];head[u]=ecnt;\n}\nint dep[20005];\ninline bool bfs(int s,int t){\n\tqueue<int> q;\n\tmemset(dep,-1,sizeof(dep));\n\tq.push(s);dep[s]=0;\n\twhile(!q.empty()){\n\t\tint cur=q.front();q.pop();\n\t\tfor(int i=head[cur];i;i=e[i].nxt){\n\t\t\tint to=e[i].to;\n\t\t\tif(dep[to]==-1&&e[i].cap){\n\t\t\t\tdep[to]=dep[cur]+1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\tif(dep[t]!=-1)\treturn 1;\n\treturn 0;\n}\ninline int dfs(int x,int t,int f){\n\tif(x==t)\treturn f;\n\tint ret=0;\n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(dep[y]==dep[x]+1&&e[i].cap){\n\t\t\tint w=dfs(y,t,min(f-ret,e[i].cap));\n\t\t\te[i].cap-=w;\n\t\t\te[i^1].cap+=w;\n\t\t\tret+=w;\n\t\t\tif(ret==f)\treturn f;\n\t\t}\n\t}\n\tif(ret==0)\tdep[x]=-1;\n\treturn ret;\n}\ninline int Dinic(int s,int t){\n\tint tot=0;\n\twhile(bfs(s,t))\ttot+=dfs(s,t,0x3f3f3f3f);\n\treturn tot;\n}\nint n=read(),m=read();\nsigned main(){\n\tfz(i,1,n){\n\t\tint x=read();\n\t\tif(x==0)\taddedge(0,i,1),addedge(i,0,0);\n\t\telse\t\taddedge(i,n+1,1),addedge(n+1,i,0);\n\t}\n\tfz(i,1,m){\n\t\tint x=read(),y=read();\n\t\taddedge(x,y,1);addedge(y,x,0);addedge(y,x,1);addedge(x,y,0);\n\t}\n\tcout<<Dinic(0,n+1)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1581679993,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968 / [JLOI2010]\u51a0\u519b\u8c03\u67e5\u3011"
    },
    {
        "content": "[\u9898\u76ee](/problem/P2057)\n\n\u8fd9\u7b97\u662f\u4e00\u4e2a\u7ecf\u5178\uff08\uff1f\uff09\u7684\u7f51\u7edc\u6d41\u5efa\u6a21\u9898\u4e86\u5427\u3002\n\n\u5199\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u60f3\u8bb0\u5f55\u4e00\u4e0b\u5efa\u6a21\u7684\u5957\u8def\u3002\n\n\u4e0b\u9762\u9ed8\u8ba4\u4f60\u5df2\u7ecf\u4f1a\u6700\u5927\u6d41\u4e86\u3002\n\n### \u5206\u6790\n\n\u9898\u76ee\u6c42\u201c\u6700\u5c0f\u7684\u51b2\u7a81\u6570\u201d\uff0c\u600e\u4e48\u6c42\uff1f\n\n\u6700\u5927\u6d41\u4f3c\u4e4e\u662f\u7528\u6765\u6c42\u6700\u5927\u7684\uff0c\u600e\u4e48\u6c42\u6700\u5c0f\uff1f\n\n\u6839\u636e**\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406**\uff0c\u5982\u679c\u6b8b\u91cf\u7f51\u7edc\u5df2\u7ecf\u6ca1\u6709\u589e\u5e7f\u8def\uff08\u5373\u6b8b\u91cf\u7f51\u7edc\u5df2\u7ecf\u4e0d\u8fde\u901a\u4e86\uff09\uff0c\u90a3\u5f53\u524d\u6d41\u5c31\u662f\u6700\u5927\u6d41\uff0c\u540c\u65f6\u4e5f\u662f\u6700\u5c0f\u5272\u3002\n\n\u6240\u4ee5\u8003\u8651\u5efa\u4e00\u4e2a\u56fe\uff0c\u5f53\u8fd9\u4e2a\u56fe\u88ab\u5206\u6210\u81f3\u5c11\u4e24\u90e8\u5206\u4e0d\u8fde\u901a\u65f6\uff0c\u5f97\u5230\u6700\u5c0f\u5272\uff0c\u5373\u6700\u5c0f\u7684\u51b2\u7a81\u6570\u3002\n\n\u4e8e\u662f\u60f3\u5230\uff0c\u5f53\u8fd9\u4e2a\u56fe\u4e0d\u8fde\u901a\u65f6\uff0c\u548c\u6e90\u70b9\u5728\u540c\u4e00\u8fde\u901a\u5b50\u56fe\u4e2d\u7684\u7ed3\u70b9\uff0c\u9009\u62e9\u7761\u5348\u89c9\uff0c\u5176\u4f59\u7ed3\u70b9\u9009\u62e9\u4e0d\u7761\u5348\u89c9\u3002\n\n\u90a3\u53ef\u4ee5\u8003\u8651**\u7ed9\u6bcf\u4e2a\u81ea\u5df1\u610f\u613f\u662f\u7761\u5348\u89c9\u7684\u7ed3\u70b9\uff0c\u8fde\u4e00\u6761\u8fb9\u5230\u6e90\u70b9\uff1b\u7ed9\u81ea\u5df1\u610f\u613f\u662f\u4e0d\u7761\u5348\u89c9\u7684\u7ed3\u70b9\uff0c\u8fde\u4e00\u6761\u8fb9\u5230\u6c47\u70b9\u3002**\n\n\u8fd9\u6837\uff0c\u5982\u679c\u8fde\u5411\u6e90\u70b9\u7684\u8fb9\u65ad\u4e86\uff0c\u8bf4\u660e\u9009\u62e9\u4e0d\u7761\u5348\u89c9\uff0c\u8fdd\u80cc\u4e86\u672c\u6765\u7684\u610f\u613f\uff1b\u5982\u679c\u8fd9\u6761\u8fb9\u6ca1\u65ad\uff0c\u8bf4\u660e\u9009\u62e9\u7761\u5348\u89c9\u3002\u4e00\u6b21\u65ad\u8fb9\u5bf9\u5e94\u4e00\u6b21\u51b2\u7a81\u3002\n\n\u90a3\u201c\u597d\u670b\u53cb\u201d\u600e\u4e48\u4f53\u73b0\u5462\uff1f\n\n\u5982\u679c\u4e00\u5bf9\u597d\u670b\u53cb\uff0c\u540c\u65f6\u9009\u62e9\u7761\u5348\u89c9\uff0c\u5e94\u8be5\u5e76\u4e0d\u4f1a\u65ad\u5f00\u4e00\u6761\u8fb9\uff1b\u5982\u679c\u4e00\u4e2a\u9009\u62e9\u7761\u5348\u89c9\uff0c\u4e00\u4e2a\u9009\u62e9\u4e0d\u7761\u5348\u89c9\uff0c\u5c31\u5e94\u8be5\u65ad\u5f00\u4e00\u6761\u8fb9\u3002\n\n\u610f\u601d\u662f\uff1a\u5982\u679c\u4e00\u5bf9\u201c\u597d\u670b\u53cb\u7ed3\u70b9\u201d\u90fd\u548c\u6e90\u70b9\u8fde\u901a\uff0c\u5e94\u8be5\u4e0d\u4f1a\u65ad\u5f00\u4e00\u6761\u8fb9\uff1b\u5982\u679c\u8fd9\u5bf9\u70b9\u4e00\u4e2a\u548c\u6e90\u70b9\u8fde\u901a\uff0c\u4e00\u4e2a\u4e0d\u8fde\u901a\uff0c\u5c31\u5e94\u8be5\u65ad\u5f00\u4e00\u6761\u8fb9\u3002\n\n\u5efa\u6a21\u65b9\u6cd5\u4e0d\u5c31\u51fa\u6765\u4e86\u5417\uff1a**\u7ed9\u6bcf\u5bf9\u201c\u597d\u670b\u53cb\u7ed3\u70b9\u201d\u8fde\u4e00\u6761\u8fb9**\u3002\u5982\u679c\u8fd9\u5bf9\u70b9\u90fd\u548c\u6e90\u70b9\u8fde\u901a\uff0c\u8fd9\u6761\u8fb9\u5c31\u4e0d\u4f1a\u65ad\uff1b\u5982\u679c\u8fd9\u5bf9\u70b9\u4e00\u4e2a\u8fde\u901a\u4e00\u4e2a\u4e0d\u8fde\u901a\uff0c\u90a3\u8fd9\u6761\u8fb9\u80af\u5b9a\u4f1a\u65ad\u3002\n\n\u7136\u800c\u8fd9\u4e2a\u56fe\u4e5f\u6709\u53ef\u80fd\u65ad\u6210\u4e09\u90e8\u5206\u3001\u56db\u90e8\u5206\u6216\u8005\u66f4\u591a\u3002\n\n\u4e0d\u8fc7\u6839\u636e\u5272\u7684\u5b9a\u4e49\uff0c\u53ea\u8981**\u5c06\u56fe\u7684\u70b9\u5206\u6210\u4e24\u4e2a\u96c6\u5408\uff0c\u6e90\u70b9\u548c\u6c47\u70b9\u5206\u522b\u5c5e\u4e8e\u4e24\u4e2a\u96c6\u5408\uff0c\u4e14\u4e24\u4e2a\u96c6\u5408\u76f4\u63a5\u4e0d\u8fde\u901a**\u5c31\u884c\u4e86\uff0c\u5e76\u6ca1\u6709\u8981\u6c42\u96c6\u5408\u5185\u90e8\u662f\u8fde\u901a\u7684\u3002\n\n\u6bd4\u5982 $S$ \u96c6\u5408\u5b9a\u4e49\u4e3a\u548c\u6e90\u70b9\u8fde\u901a\u7684\u7ed3\u70b9\uff0c\u90a3\u4e48\u5176\u4f59\u7684\u7ed3\u70b9\u867d\u7136\u4e0d\u4e00\u5b9a\u548c\u6c47\u70b9\u8fde\u901a\uff0c\u4f46\u90fd\u5728 $T$ \u96c6\u5408\u91cc\uff0c\u6240\u4ee5\u4e0d\u7528\u8003\u8651 $T$ \u96c6\u5408\u5185\u90e8\u65ad\u8fb9\u9020\u6210\u7684\u95ee\u9898\u3002\uff08$T$ \u96c6\u5408\u5185\u90e8\u65ad\u5f00\u7684\u8fb9\u4e0d\u7b97\u8fdb\u5272\u4e2d\uff09\n\n### \u6838\u5fc3\u4ee3\u7801\n\n\uff08\u53bb\u6389\u6700\u5927\u6d41\u677f\u5b50\uff09\n\n```cpp\nint main(){\n\tcin>>n>>m; S=n+1; T=n+2;\n\t//S \u8868\u793a\u6e90\u70b9\uff0cT \u8868\u793a\u6c47\u70b9\n\tfor(int i=1;i<=n;i++){\n\t\tint t; cin>>t;\n\t\tif(t) add(S,i,1);//\u5982\u679c\u672c\u6765\u610f\u613f\u662f\u7761\u5348\u89c9\uff0c\u5c31\u8fde\u5230\u6e90\u70b9\n\t\t//add(u,v,w) \u8868\u793a\u8fde\u4e00\u6761 (u,v) \u7684\u8fb9\uff0c\u6d41\u91cf\u9650\u5236\u662f w\n\t\telse add(i,T,1);//\u5982\u679c\u672c\u6765\u610f\u613f\u662f\u4e0d\u7761\u5348\u89c9\uff0c\u5c31\u8fde\u5230\u6c47\u70b9\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v; cin>>u>>v;\n\t\tadd(u,v,1); add(v,u,1);//\u7ed9\u6bcf\u5bf9\u597d\u670b\u53cb\u7ed3\u70b9\u8fde\u4e00\u6761\u53cc\u5411\u8fb9\n\t}\n\tn+=2;//\u5c06\u6e90\u70b9\u548c\u6c47\u70b9\u7b97\u5230 n \u91cc\n\t//\u8fd0\u884c\u6700\u5927\u6d41\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1593414764,
        "uid": 178294,
        "name": "zhy137036",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968 / [JLOI2010]\u51a0\u519b\u8c03\u67e5\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**\u5206\u6790\u4e0e\u9898\u89e3\uff1a**\u6211\u4eec\u5b9a\u4e49\u548c$S$\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u8868\u793a\u7761\u5348\u89c9\uff0c\u548c$T$\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u8868\u793a\u4e0d\u7761\u5348\u89c9\u3002\u82e5\u7b2c$i$\u4e2a\u5c0f\u670b\u53cb\u610f\u89c1\u662f\u7761\u5348\u89c9\uff0c\u6211\u4eec\u4fbf\u628a$i$\u548c$S$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$0$\uff0c\u628a$i+n$\u548c$T$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$1$\uff0c\u8fd9\u6837\u8868\u793a\u8fd9\u4e2a\u5c0f\u670b\u53cb\u8981\u662f\u9009\u62e9\u7761\u5348\u89c9\u4fbf\u4e0d\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e$1$\uff0c\u53cd\u4e4b\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e$1$\u3002\u82e5\u7b2c$i$\u4e2a\u5c0f\u670b\u53cb\u610f\u89c1\u662f\u4e0d\u7761\u5348\u89c9\uff0c\u6211\u4eec\u4fbf\u628a$i$\u548c$S$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$1$\uff0c\u628a$i+n$\u548c$T$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$0$\uff0c\u8fd9\u6837\u8868\u793a\u8fd9\u4e2a\u5c0f\u670b\u53cb\u8981\u662f\u9009\u62e9\u4e0d\u7761\u5348\u89c9\u4fbf\u4e0d\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e$1$\uff0c\u53cd\u4e4b\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e$1$\u3002\u8fd9\u6837\u6211\u4eec\u4fbf\u628a\u8fd9\u4e2a\u5c0f\u670b\u53cb\u548c\u81ea\u5df1\u7684\u610f\u613f\u76f8\u53cd\u7684\u60c5\u51b5\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5904\u7406\u5b8c\u6bd5\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u5c0f\u670b\u53cb\uff0c\u6211\u4eec\u8003\u8651\u628a\u4ed6\u4eec\u4e92\u76f8\u8fde\u5728\u4e00\u8d77\uff0c\u56e0\u4e3a\u662f\u53ea\u6709\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5$i$\u548c$j+n$\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff0c$j$\u548c$i+n$\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff08$i$\u548c$j$\u662f\u597d\u670b\u53cb\uff09\u3002\u8fd9\u6837\u5efa\u51fa\u6765\u7684\u56fe\u5c31\u53ef\u4ee5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\u3002\n\n```c++\n// luogu-judger-enable-o2\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define N 1010\n#define inf 1000000000\nint n,m,ans,idx=1,dis[N],cur[N<<1],s,t;\nint head[N<<1],to[N*N<<2],val[N*N<<2],nxt[N*N<<2];\nvoid add(int a,int b,int c)\n    {nxt[++idx]=head[a],head[a]=idx,to[idx]=b,val[idx]=c;}\nbool bfs()\n{\n    memset(dis,-1,sizeof dis),dis[s]=0;\n    queue <int> q; q.push(s);\n    while(!q.empty())\n    {\n        int p=q.front();q.pop();\n        if(p==t) return true;\n        for(int i=head[p];i;i=nxt[i])\n            if(val[i]>0&&dis[to[i]]==-1)\n                dis[to[i]]=dis[p]+1,q.push(to[i]);\n    } return false;\n}\nint dfs(int p,int flow)\n{\n    int now,temp=flow;\n    if(p==t) return flow;\n    for(int i=cur[p];i;i=nxt[i])\n        if(val[i]>0&&dis[to[i]]==dis[p]+1)\n        {\n            now=dfs(to[i],min(val[i],temp));\n            if(!now) dis[to[i]]=-1;\n            temp-=now,val[i]-=now,val[i^1]+=now;\n            if(val[i]) cur[p]=i;\n            if(!temp) break;\n        } return flow-temp;\n}\nvoid dinic() {while(bfs()) memcpy(cur,head,sizeof(head)),ans+=dfs(s,inf);}\nint main()\n{\n    scanf(\"%d%d\",&n,&m),s=n*2+1,t=n*2+2;\n    for(int i=1,a;i<=n;i++)\n        scanf(\"%d\",&a),(a==1)?(add(s,i,1),add(i,s,0)):(add(i+n,t,1),add(t,i+n,0));\n    for(int i=1,a,b;i<=m;i++)\n        scanf(\"%d%d\",&a,&b),add(a,b+n,1),add(b+n,a,0),add(b,a+n,1),add(a+n,b,0);\n    dinic();printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1545619172,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u662f\u5c31\u4e00\u4e2a\u7ecf\u5178\u7684\u201c\u4e8c\u8005\u53d6\u5176\u4e00\u5f0f\u95ee\u9898\u201d\u3002\u6bcf\u4e2a\u5c0f\u670b\u53cb\u82e5\u662f\u8d5e\u6210\uff0c\u5efa\u4e00\u6761\uff08s\uff0ci\uff0c1\uff09,\u5426\u5219\u5efa\u4e00\u6761\uff08i,t,1\uff09;\u5bf9\u4e00\u5bf9\u670b\u53cbi,j\u800c\u8a00\uff0c\u5efa\uff08i,j,1\uff09,(j,i,1),\u7136\u540e\u8dd1\u6700\u5927\u6d41\u6c42\u4e2a\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstdlib>\nusing namespace std;\nconst int INF=1e9;\nint n,m,str,end;\nstruct edge{\n    int from,to,cap,flow;\n};\nvector<edge>edges;\nvector<int>g[150010];\nqueue<int>q;\nint vis[150010],d[150010],cur[150010],s[310];\nvoid add(int a,int b,int c,int d)\n{\n    edges.push_back((edge){a,b,c,d});\n    edges.push_back((edge){b,a,0,0});\n    int t=edges.size();\n    g[b].push_back(t-1);\n    g[a].push_back(t-2);\n}\nbool bfs()\n{\n    memset(vis,0,sizeof(vis));\n    q.push(str);vis[str]=1;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=0;i<g[x].size();i++)\n        {\n            edge &e=edges[g[x][i]];\n            if(e.cap>e.flow&&!vis[e.to])\n            {\n                vis[e.to]=1;\n                d[e.to]=d[x]+1;\n                q.push(e.to);\n            }\n        }\n    }\n    return vis[end];\n}\nint dfs(int x,int t)\n{\n    if(x==end||t==0)return t;\n    int flow=0,f;\n    for(int &i=cur[x];i<g[x].size();i++)\n    {\n        edge &e=edges[g[x][i]];\n        if(d[e.to]==d[x]+1&&(f=dfs(e.to,min(e.cap-e.flow,t))))\n        {\n        //    printf(\"a\");\n            e.flow+=f;\n            edges[g[x][i]^1].flow-=f;\n            flow+=f;\n            t-=f;\n            if(t==0)break;\n        }\n    }\n    return flow;\n}\nint maxflow()\n{\n    int flow=0;\n    while(bfs())\n    {\n        memset(cur,0,sizeof(cur));\n        flow+=dfs(str,INF);\n    }\n    return flow;\n}\nint main()\n{\n   freopen(\"2057.in\",\"r\",stdin);\n   freopen(\"2057.out\",\"w\",stdout);\n   scanf(\"%d%d\",&n,&m);\n   str=n+1;end=n+2;\n   for(int i=1;i<=n;i++)\n   {\n    scanf(\"%d\",&s[i]);\n    if(s[i]==1)\n    {\n        add(str,i,1,0);\n    }\n    else\n    add(i,end,1,0);\n   }\n   int a,b;\n   for(int i=1;i<=m;i++)\n   {\n        scanf(\"%d%d\",&a,&b);\n        add(a,b,1,0);\n        add(b,a,1,0);\n   }\n   printf(\"%d\\n\",maxflow());\n   fclose(stdin);\n   fclose(stdout);\n   return 0;\n}\n\n```",
        "postTime": 1475927252,
        "uid": 22157,
        "name": "lzy\u518dlzy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2057 \u3010\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "\n\u6700\u8fd1\u505a\u7f51\u7edc\u6d41\u90fd\u5feb\u505a\u5410\u4e86\u3002\u3002\u3002\n\n\n------------\n\n[\u5584\u610f\u7684\u6295\u7968](https://www.luogu.com.cn/problem/P2057)\n\n\u5e38\u89c4\u7684\u6700\u5c0f\u5272\u95ee\u9898\uff0c\u53ea\u662f\u5efa\u8fb9\u7565\u5fae\u6709\u4e9b\u5de7\u5999\u3002\n\n**\u9898\u76ee\u5206\u6790**:\n\n- \u7b2c\u4e00\u6b65\uff0c\u5148\u786e\u5b9a\u6e90\u70b9\u548c\u6c47\u70b9\u3002\u5e38\u89c4\u601d\u8def\uff1a\u5c06\u6e90\u70b9\u770b\u4f5c**\u540c\u610f**\uff0c\u6c47\u70b9\u770b\u4f5c**\u4e0d\u540c\u610f**\uff1b\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u6700\u5c0f**\u51b2\u7a81\u6570**\uff0c\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5206\u6790\u4e00\u4e0b\uff0c\u5176\u5b9e\u5c31\u662f\u8ba9\u4f60\u6c42\u5efa\u597d\u7f51\u7edc\u6d41\u7684\u6700\u5c0f\u5272\u3002\n\n**\u539f\u56e0**: \n\n\u56e0\u4e3a\u5df2\u7ecf\u786e\u5b9a\u4e86\u6e90\u70b9\u4e3a**\u540c\u610f**\uff0c\u6c47\u70b9\u4e3a**\u4e0d\u540c\u610f**\uff0c\u6240\u4ee5\u8fde\u5411\u6e90\u70b9\u7684\u8fb9\u610f\u4e3a**\u540c\u610f**\uff0c\u6c47\u70b9\u5219\u76f8\u53cd\u3002\n\n\u90a3\u4e48\u5982\u679c\u4efb\u610f\u4e00\u70b9\u65e2\u53ef\u4ee5\u901a\u5411\u6e90\u70b9\uff0c\u53c8\u53ef\u4ee5\u901a\u5411\u6c47\u70b9\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u70b9\u662f\u51b2\u7a81\u7684\uff08\u6709\u4e24\u79cd\u9009\u62e9\uff09\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u56e0\u6b64\uff0c\u8981\u4f7f\u5176\u4e0d\u51b2\u7a81\uff0c\u5c31\u8981\u8ba9\u6e90\u70b9 $s$ \u548c\u6c47\u70b9 $t$ \u4e0d\u8054\u901a\u3002\u6240\u4ee5\u51b2\u7a81\u6570\u5c31\u662f $s$ \u548c $t$ \u4e4b\u95f4\u76f8\u4e92\u8054\u901a\u7684\u8fb9\u3002\u90a3\u4e48\uff0c**\u6700\u5c0f\u5272**\u4e86\u89e3\u4e00\u4e0b\uff1f\n\n- \u7b2c\u4e8c\u6b65\uff0c\u8fde\u8fb9\u3002\u5148\u5c06\u5c0f\u76c6\u53cb\u4eec\u672c\u6765\u7684\u610f\u613f\u8fde\u8fb9\uff0c\u540c\u610f\u8fde\u5411\u6e90\u70b9\uff0c\u4e0d\u540c\u610f\u8fde\u6c47\u70b9\u3002\u7136\u540e\uff0c\u5982\u679c\u4e24\u4e2a\u5c0f\u76c6\u53cb\u662f\u597d\u4f19\u4f34\uff0c\u8bf4\u660e\u4e24\u4eba\u53ef\u4ee5**\u76f8\u4e92**\u5f71\u54cd\uff0c\u6240\u4ee5\u5728\u5979\u4eec\u4e4b\u95f4\u8fde\u4e00\u6761**\u65e0\u5411\u8fb9**\uff1b\n\n- \u6700\u540e\uff0c\u6a21\u677f\u8ba1\u7b97\u6700\u5c0f\u5272\u3002\u8fd9\u4e2a\u4e0d\u7528\u8bb2\u4e86\u5427\u3002\u6e9c\u5566~\n\n\n\n**\u5b8c\u6574\u4ee3\u7801** :\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\n#define rt register int\nconst int N = 310,M = 8e4, inf = 1e9;\nstruct node {\n\tint to,nex;\n}e[M];\nint n,m,s,t,top,ed,dep[N],head[N],cur[N],tot = 1,f[M],q[N];\ninline void add(int x,int y,int w,int w2) {\n\te[++tot] = (node) {y,head[x]}, f[tot] = w, head[x] = tot;\n\te[++tot] = (node) {x,head[y]}, f[tot] = w2, head[y] = tot; \n}\ninline bool bfs() {\n\tmemset(dep,-1,sizeof(dep));\n\tdep[s] = 0, cur[s] = head[s], q[top = 1] = s; ed = 1;\n\tint now,ver;\n\twhile(top <= ed) {\n\t\tnow = q[top++];\n\t\tfor(rt i = head[now]; i; i = e[i].nex) {\n\t\t\tver = e[i].to;\n\t\t\tif(dep[ver] == -1 && f[i]) {\n\t\t\t\tdep[ver] = dep[now] + 1, cur[ver] = head[ver];\n\t\t\t\tif(ver == t) return 1;\n\t\t\t\tq[++ed] = ver;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline int find(int x,int limit) {\n\tif(x == t) return limit;\n\tint flow = 0, tmp, ver;\n\tfor(rt i = head[x]; i && flow < limit; i = e[i].nex) {\n\t\tver = e[i].to;\n\t\tif(dep[ver] == dep[x] + 1 && f[i]) {\n\t\t\ttmp = find(ver,min(limit - flow,f[i]));\n\t\t\tif(!tmp) dep[ver] = -1;\n\t\t\tf[i] -= tmp, f[i ^ 1] += tmp, flow += tmp; \n\t\t}\n\t}\n\treturn flow;\n}\ninline int dinic() {\n\tint res = 0, flow;\n\twhile(bfs()) res += find(s,inf);\n\treturn res;\n}\ninline void read(int &x) {\n\tx = 0;int ff = 1;\n\tchar s = getchar();\n\twhile(s < '0' || s > '9') {\n\t\tif(s == '-') ff = -1;\n\t\ts = getchar();\n\t}\n\twhile(s <= '9' && s >= '0') {x = x * 10 + s - '0', s = getchar(); }\n\tx *= ff;\n}\nsigned main() {\n\tread(n), read(m);\n\tint u,v;\n\ts = n + 1, t = s + 1;\n\tfor(rt i = 1; i <= n; i ++) {\n\t\tread(u);\n\t\tif(u) add(s,i,1,0);\n\t\telse add(i,t,1,0);\n\t}\n\tfor(rt i = 1; i <= m; i ++) {\n\t\tread(u), read(v);\n\t\tadd(u,v,1,1);\n\t}\n\tprintf(\"%d\",dinic());\n\treturn 0;\n} \n```\n\n",
        "postTime": 1609161690,
        "uid": 140643,
        "name": "crescentic",
        "ccfLevel": 0,
        "title": "P2057 [SHOI2007] \u5584\u610f\u7684\u6295\u7968"
    },
    {
        "content": "#### \u9898\u76ee\u8981\u6c42\uff1a\n\u8ba9\u8fdd\u80cc\u610f\u613f\u7684\u4eba\u6570+\u597d\u670b\u53cb\u4e4b\u95f4\u7684\u51b2\u7a81\u6570\uff0c\u6700\u5c0f\u3002\u6211\u4eec\u8003\u8651\u8ba9\u8fdd\u80cc\u610f\u613f\u7684\u4eba\u548c\u51b2\u7a81\u7684\u597d\u670b\u53cb\u90fd\u4ed8\u51fa\u5927\u5c0f\u4e3a1\u7684\u4ee3\u4ef7\uff0c\u90a3\u4e48\u53ea\u8981\u8ba1\u7b97\u4ee3\u4ef7\u7684\u6700\u5c0f\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n#### \u89e3\u51b3\u529e\u6cd5\uff1a\n\u53ef\u4ee5\u5efa\u7acb\u6e90\u70b9 s \u548c\u6c47\u70b9 t \uff0c\u6211\u4eec\u8003\u8651\u8ba9\u6700\u7ec8\u6e90\u70b9\u4e00\u4fa7\u7684\u5272\u96c6\u4ee3\u8868\u9009\u62e9\u540c\u610f\u7761\u89c9\u7684\u4eba\uff0c\u8ba9\u6c47\u70b9\u4e00\u4fa7\u7684\u5272\u96c6\u4ee3\u8868\u53cd\u5bf9\u7761\u89c9\u7684\u4eba\uff0c\u6e90\u70b9 s \u5411\u4ee3\u8868\u6700\u521d\u540c\u610f\u7761\u89c9\u7684\u6240\u6709\u4eba\u5bf9\u5e94\u7684\u70b9\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u53cd\u5bf9\u7761\u89c9\u7684\u6240\u6709\u4eba\u5bf9\u5e94\u7684\u70b9\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u597d\u670b\u53cb (i,j) \u4e4b\u95f4\uff0c\u4ece i \u5411 j \u548c\u4ece j \u5411 i \u5206\u522b\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\u3002                 \n\n\u8fd9\u6837\uff0c\u6c42s \u5230 t\u7684\u6700\u5c0f\u5272\uff0c\u5982\u679c\u4e24\u4e2a\u597d\u670b\u53cb\u4e4b\u95f4\u6709\u8fb9\u4e14\u6700\u521d\u7684\u610f\u613f\u4e0d\u540c\uff0c\u4e3a\u4e86\u5272\u65ad s,t\uff0c\u8981\u4e48\u5176\u4e2d\u4e00\u4eba\u6539\u53d8\u610f\u613f\uff08\u5373\u5272\u6389\u5176\u4e0e\u6e90\u70b9\u6216\u6c47\u70b9\u7684\u8fb9\uff09\uff0c\u8981\u4e48\u4ed6\u4eec\u4e4b\u95f4\u53d1\u751f\u51b2\u7a81\uff08\u5373\u5272\u65ad\u597d\u670b\u53cb\u4e4b\u95f4\u7684\u4e00\u6761\u5355\u8fb9\uff09\uff0c\u65e0\u8bba\u54ea\u79cd\u9009\u62e9\u90fd\u4f1a\u4ed8\u51fa\u76f8\u5e94\u7684\u4ee3\u4ef7\u3002\u56e0\u6b64\u6700\u7ec8\u6c42\u51fa\u7684\u6700\u5c0f\u5272\u5c31\u662f\u76f8\u5e94\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002          \n\n```\n#include<bits/stdc++.h>\n#define maxm 100010\n#define maxn 400\n#define inf (~0U>>1)\nusing namespace std;\nint n,m,source,sink,l,ans;\nint last[maxn],other[maxm<<1],len[maxm<<1],pre[maxm<<1],flag[maxn];\nint que[maxn],d[maxn];\nvoid connect(int x,int y,int z) {\n\tpre[++l]=last[x];\n\tlast[x]=l;\n\tother[l]=y;\n\tlen[l]=z;\n}\nbool bfs() {\n\tmemset(d,0,sizeof d);\n\tque[1]=source; d[source]=1;\n\tint h=0,t=1;\n\twhile (h<t) {\n\t\tint cur=que[++h];\n\t\tfor (int p=last[cur];p;p=pre[p]) {\n\t\t\tif (d[other[p]]) continue;\n\t\t\tif (!len[p]) continue;\n\t\t\td[other[p]]=d[cur]+1;\n\t\t\tque[++t]=other[p];\n\t\t\tif (other[p]==sink) return 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint dinic(int x,int flow) {\n\tif (x==sink) return flow;\n\tint rest=flow;\n\tfor (int p=last[x];p;p=pre[p]) {\n\t\tif (!len[p]) continue;\n\t\tif (d[other[p]]!=d[x]+1) continue;\n\t\tif (!rest) continue;\n\t\tint tmp=dinic(other[p],min(len[p],rest));\n\t\tif (!tmp) d[other[p]]=0;\n\t\tlen[p]-=tmp; len[p^1]+=tmp;\n\t\trest-=tmp;\n\t}\n\treturn flow-rest;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tsource=n+2; sink=source+1; l=1;\n\tfor (int i=1;i<=n;i++) {\n\t\tscanf(\"%d\",&flag[i]);\n\t\tif (flag[i]) connect(source,i,1),connect(i,source,0); else\n\t\tconnect(i,sink,1),connect(sink,i,0);\n\t}\n\tfor (int i=1;i<=m;i++) {\n\t\tint x,y; scanf(\"%d%d\",&x,&y);\n\t\tconnect(x,y,1); connect(y,x,0);\n\t\tconnect(y,x,1); connect(x,y,0);\n\t}\n\twhile (bfs()) ans+=dinic(source,inf);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1592034813,
        "uid": 324858,
        "name": "\u26a1114514_zzm\u26a1",
        "ccfLevel": 5,
        "title": "P2057 [SHOI2007]\u5584\u610f\u7684\u6295\u7968 / [JLOI2010]\u51a0\u519b\u8c03\u67e5\u9898\u89e3"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u548c\u72fc\u548c\u7f8a\u7684\u6545\u4e8b\u5dee\u4e0d\u591a\n\n\u90fd\u662f\u6700\u5c0f\u5272\n\n\u6211\u4eec\u53ea\u8981\u5bf9\u4e8e\u539f\u56fe\u5efa\u4e00\u4e2a\u6e90\u70b9\uff0c\u6c47\u70b9\n\n\u90a3\u9053\u9898\u662f\n\n\u6e90\u70b9\u5411\u6240\u6709\u72fc\u8fde\u6d41\u91cf oo \u7684\u8fb9\n\n\u6240\u6709\u7f8a\u5411\u6c47\u70b9\u8fde\u6d41\u91cf oo \u7684\u8fb9\n\n\u6240\u6709\u70b9\u5411\u56db\u5468\u80fd\u5230\u8fbe\u8fde\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\u3002\n\n\u8fd9\u9053\u9898\u662f\n\n\u4e0d\u540c\u610f\u89c1\u7684\u8fde\u8fb9\n\n\u597d\u53cb\u76f4\u63a5\u4e5f\u8fde\u8fb9\n\n\u53ef\u4ee5\u7406\u89e3\u4e00\u4e0b\uff0c\u6d88\u8017\u4e00\u6d41\u91cf\u53ef\u4ee5\u51cf\u5c11\u4e00\u5bf9\u51b2\u7a81\uff0c\u8ba9\u5f7c\u6b64\u8fbe\u6210\u5171\u8bc6\n\n\u6240\u4ee5\u4e5f\u662f\u4e00\u4e2a\u6700\u5c0f\u5272\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 50005, M = N << 4, inf = 1 << 30;\nint to[M], nxt[M], len[M], inv[M], fir[N], cur[N], lev[N], q[N];\nint S, T, ecnt;\nbool vis[N];\nvoid ae(int u, int v, int w) {\n    to[++ecnt] = v; nxt[ecnt] = fir[u]; len[ecnt] = w; inv[ecnt] = ecnt + 1; fir[u] = ecnt;\n    to[++ecnt] = u; nxt[ecnt] = fir[v]; len[ecnt] = 0; inv[ecnt] = ecnt - 1; fir[v] = ecnt;\n}\nbool make_level() {\n    int l, r, u, v, w, i;\n    memset(vis, false, sizeof(vis));\n    for (i = S; i <= T; ++i) cur[i] = fir[i];\n    q[l = r = 1] = S; lev[S] = 0; vis[S] = true;\n    while (l <= r) {\n        u = q[l++];\n        for (i = fir[u]; i; i = nxt[i]) {\n            v = to[i]; w = len[i];\n            if (w && !vis[v]) {\n                lev[v] = lev[u] + 1;\n                vis[q[++r] = v] = true;\n            }\n        }\n    }\n    return vis[T];\n}\nint dinic(int u, int lim) {\n    if (u == T) return lim;\n    int tmp, ret = 0, v, w, i;\n    for (i = cur[u]; i; i = nxt[i]) {\n        v = to[i]; w = len[i];\n        if (w && lev[v] == lev[u] + 1) {\n            tmp = dinic(v, min(w, lim));\n            len[i] -= tmp; len[inv[i]] += tmp;\n            ret += tmp; lim -= tmp;\n            if (!lim) {cur[u] = i; return ret;}\n        }\n    }\n    cur[u] = 0; return ret;\n}\nint main() {\n    int n, m, i, x, y, ans = 0;\n    scanf(\"%d%d\", &n, &m);\n    S = 0; T = n + 1;\n   \tfor (i = 1; i <= n; ++i) {\n   \t\tscanf(\"%d\", &x);\n   \t\tif (x == 1) ae(S, i, 1); else ae(i, T, 1);\n   \t}\n   \tfor (i = 1; i <= m; ++i) {\n   \t\tscanf(\"%d%d\", &x, &y);\n\t\tae(x, y, 1); ae(y, x, 1);\t\n\t}\n    while (make_level()) ans += dinic(S, inf);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1552129286,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "### [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/10316523.html )\n\n### [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2057)\n\n\u6211\u4eec\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u6700\u5c0f\u5272\u7684\u9898\n\n\u6211\u4eec\u8bbe\u4e0d\u7761\u89c9\u8fd9\u79cd\u72b6\u6001\u4e3aS\uff0c\u7761\u89c9\u8fd9\u79cd\u72b6\u6001\u4e3aT\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u5982\u679c\u4e0d\u60f3\u7761\u89c9\uff0c\u5c31\u4eceS\u5411\u8fd9\u4e2a\u4eba\u8fde\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0c\u5426\u5219\uff0c\u5c31\u4ece\u8fd9\u4e2a\u4eba\u5411T\u8fde\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u670b\u53cb\uff0c\u4e92\u76f8\u8fde\u6d41\u91cf\u4e3a1\u7684\u8fb9\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u56fe\u7684\u6700\u5c0f\u5272\uff0c\u5373\u6700\u5927\u6d41\uff08\u81ea\u5df1\u753b\u56fe\u60f3\u4e00\u60f3\uff09\n\n\u968f\u4fbf\u5199\u4e2aISAP\u5c31\u884c\u4e86\n\n```cpp\n#include <bits/stdc++.h>\n#define N 305\n#define M 90005\n#define inf (1<<30)\n#define getchar nc\nusing namespace std;\ninline char nc(){\n    static char buf[100000],*p1=buf,*p2=buf; \n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++; \n}\ninline int read()\n{\n    register int x=0,f=1;register char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return x*f;\n}\ninline void write(register int x)\n{\n    if(!x)putchar('0');if(x<0)x=-x,putchar('-');\n    static int sta[20];register int tot=0;\n    while(x)sta[tot++]=x%10,x/=10;\n    while(tot)putchar(sta[--tot]+48);\n}\ninline int Min(register int a,register int b)\n{\n    return a<b?a:b;\n}\nstruct node{\n    int to,next,v;\n}e[M<<1];\nint head[N],cnt=1;\ninline void add(register int u,register int v,register int val)\n{\n    e[++cnt]=(node){v,head[u],val};\n    head[u]=cnt;\n} \nint n,m,s,t,maxflow=0;\nint dep[N],gap[N],cur[N];\ninline void bfs()\n{\n    memset(dep,-1,sizeof(dep));\n    memset(gap,0,sizeof(gap));\n    dep[t]=0;\n    ++gap[dep[t]];\n    queue<int> q;\n    q.push(t);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(register int i=head[u];i;i=e[i].next)\n        {\n            int v=e[i].to;\n            if(dep[v]!=-1)\n                continue;\n            q.push(v);\n            dep[v]=dep[u]+1;\n            ++gap[dep[v]];\n        }\n    }\n}\ninline int dfs(register int u,register int flow)\n{\n    if(u==t)\n    {\n        maxflow+=flow;\n        return flow;\n    }\n    int used=0;\n    for(register int i=cur[u];i;i=e[i].next)\n    {\n        cur[u]=i;\n        int v=e[i].to;\n        if(e[i].v&&dep[v]+1==dep[u])\n        {\n            int tmp=dfs(v,Min(e[i].v,flow-used));\n            if(tmp)\n            {\n                e[i].v-=tmp;\n                e[i^1].v+=tmp;\n                used+=tmp;\n            }\n            if(used==flow)\n                return used;\n        }\n    }\n    --gap[dep[u]++]==0?dep[s]=n+1:++gap[dep[u]];\n    return used;\n}\ninline void ISAP()\n{\n    maxflow=0;\n    bfs();\n    while(dep[s]<n)\n    {\n        memcpy(cur,head,sizeof(head));\n        dfs(s,inf);\n    }\n}\nint main()\n{\n    n=read(),m=read();\n    s=0,t=n+1;\n    for(register int i=1;i<=n;++i)\n    {\n        int x=read();\n        if(x)\n            add(i,t,1),add(t,i,0);\n        else\n            add(s,i,1),add(i,s,0);\n    }\n    for(register int i=1;i<=m;++i)\n    {\n        int u=read(),v=read();\n        add(u,v,1),add(v,u,1);\n    }\n    n+=2;\n    ISAP();\n    write(maxflow);\n    return 0;\n}\n```",
        "postTime": 1548333152,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "\u89e3\u6cd5\u540c [[SHOI2007]\u5584\u610f\u7684\u6295\u7968](https://www.luogu.org/problemnew/show/P2057) \u3002\r\n\r\n\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u6700\u7ec8\u53ea\u4f1a\u6709\u4e00\u4e2a\u610f\u89c1\uff0c\u6240\u4ee5**\u4e0d\u7528\u62c6\u70b9\u3002**\r\n\r\n\u76f4\u63a5\u628a\u8ba4\u540c\u7684\u7ed9S\u96c6\uff0c\u4e0d\u8ba4\u540c\u7684\u7ed9T\u96c6\uff0c\u670b\u53cb\u4e4b\u95f4\u8fde\u6b63\u53cd\u5bb9\u91cf\u90fd\u4e3a $1$ \u7684\u8fb9\u5373\u53ef\u3002\r\n\r\n\u5272\u6389\u8fdeS\u7684\u4ee3\u8868\u8ba4\u540c\u7684\u6539\u6210\u4e0d\u8ba4\u540c\u7684\u3002\r\n\r\n\u5272\u6389\u8fdeT\u7684\u4ee3\u8868\u4e0d\u8ba4\u540c\u7684\u6539\u6210\u8ba4\u540c\u7684\u3002\r\n\r\n\u5272\u6389\u4e2d\u95f4\u7684\u4ee3\u8868\u670b\u53cb\u4ea7\u751f\u77db\u76fe\u3002\r\n\r\n\u6ce8\u610f\u5230\u670b\u53cb\u8fb9\u65e0\u6548\u5f53\u4e14\u4ec5\u5f53\u8fde\u63a5\u7684\u4e24\u70b9\u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u5f53\u4e00\u4e2a\u4eba\u6539\u53d8\u96c6\u5408\u9009\u62e9\u65f6\uff0c\u8fd9\u6761\u65e0\u6548\u8fb9\u5c31\u4f1a\u6709\u6548\uff0c\u800c\u7f51\u7edc\u6d41\u7684\u81ea\u6211\u8c03\u6574\u6027\u5b9e\u8d28\u4e0a\u89e3\u51b3\u4e86\u8fd9\u4e00\u70b9\u3002\r\n\r\n```C++\r\n#include<cstdio>\r\n#include<cctype>\r\n#include<cstdlib>\r\n#include<cstring>\r\n#include<iostream>\r\n#include<algorithm>\r\n#define N 310\r\n#define M 200010\r\n#define R register\r\n#define gc getchar\r\n#define inf 2000000000\r\nusing namespace std;\r\n\r\ninline int rd(){\r\n  int x=0; bool f=0; char c=gc();\r\n  while(!isdigit(c)){if(c=='-')f=1;c=gc();}\r\n  while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=gc();}\r\n  return f?-x:x;\r\n}\r\n\r\nint n,m,k,sum,S,T,U,V,tot=1,hd[N];\r\n\r\nstruct edge{int to,nxt,f;}e[M<<1];\r\n\r\ninline void add(int u,int v,int f){\r\n  e[++tot].to=v; e[tot].f=f; e[tot].nxt=hd[u]; hd[u]=tot;\r\n  e[++tot].to=u; e[tot].f=0; e[tot].nxt=hd[v]; hd[v]=tot;\r\n}\r\n\r\ninline void addu(int u,int v,int f){\r\n  e[++tot].to=v; e[tot].f=f; e[tot].nxt=hd[u]; hd[u]=tot;\r\n  e[++tot].to=u; e[tot].f=f; e[tot].nxt=hd[v]; hd[v]=tot;\r\n}\r\n\r\nstruct Q{\r\n  int x[N*10],hd,tl;\r\n  inline void pop(){++hd;}\r\n  inline void reset(){hd=1;tl=0;}\r\n  inline int front(){return x[hd];}\r\n  inline bool empty(){return hd>tl;}\r\n  inline void push(int a){x[++tl]=a;}\r\n}q;\r\n\r\nbool use[N];\r\n\r\nint d[N],h[N];\r\n\r\ninline bool bfs(){\r\n  for(R int i=S;i<=T;++i) d[i]=0;\r\n  q.reset(); q.push(S); d[S]=1;\r\n  while(!q.empty()){\r\n    int u=q.front(); q.pop();\r\n    for(R int i=hd[u],v;i;i=e[i].nxt)\r\n      if(e[i].f&&!d[v=e[i].to]){\r\n        d[v]=d[u]+1; q.push(v);\r\n      }\r\n  }\r\n  return d[T]>0;\r\n}\r\n\r\nint dfs(int u,int flow){\r\n  if(u==T||!flow) return flow;\r\n  int res=0,tmp;\r\n  for(R int &i=h[u],v;i;i=e[i].nxt)\r\n    if(e[i].f&&d[v=e[i].to]==d[u]+1){\r\n      tmp=dfs(v,min(flow-res,e[i].f));\r\n      if(!tmp){d[v]=-1;continue;}\r\n      res+=tmp; e[i].f-=tmp; e[i^1].f+=tmp;\r\n      if(flow==res) return res;\r\n    }\r\n  return res;\r\n}\r\n\r\ninline int dinic(){\r\n  int totf=0;\r\n  while(bfs()){\r\n    memcpy(h,hd,sizeof(hd));\r\n    totf+=dfs(S,inf);\r\n  }\r\n  return totf;\r\n}\r\n\r\nint main(){\r\n  n=rd(); m=rd(); S=0; T=n+1;\r\n  for(R int i=1;i<=n;++i)\r\n    rd()>0?add(S,i,1):add(i,T,1);\r\n  for(R int i=1;i<=m;++i) addu(rd(),rd(),1);\r\n  printf(\"%d\\n\",dinic());\r\n  return 0;\r\n}\r\n\r\n```",
        "postTime": 1546837738,
        "uid": 56839,
        "name": "SGColin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "##### \u989d\uff0c\u4f60\u4eec\u61c2\u7684 \n\n\u8fd9\u9898\u8fd8\u662f\u633a\u6709\u542f\u53d1\u6027~~\uff08\u5957\u8def\uff09~~\u7684\n\n### \u601d\u8def\n#### \u5c06\u662f\u5426\u7761\u5348\u89c9\u5206\u522b\u4f5c\u4e3a\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u7136\u540e\u628a\u6bcf\u4e2a\u4eba\u4f5c\u4e3a\u70b9\u5411\u4ed6\u4eec\u7684\u9009\u62e9\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u7136\u540epy\uff08\u670b\u53cb\uff09\u4e4b\u95f4\u4e5f\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u90a3\u4e48\u95ee\u9898\u53ef\u4ee5\u8f6c\u6362\u4e3a\u65ad\u6389\u6700\u5c11\u7684\u8fb9\uff08\u5373\u4ea7\u751f\u51b2\u7a81\uff09\uff0c\u4f7f\u5f97\u6240\u6709\u70b9\u5206\u6210\u4e24\u4e2a\u96c6\u5408.\n\n#### \u8fd9\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u5c31\u662f\u6700\u5c0f\u5272\u561b\n\n\u6837\u4f8b\u5982\u4e0b\u56fe\n![](https://i.loli.net/2019/01/01/5c2b623314237.png)\n\n```cpp\n#include<bits/stdc++.h>\n#define N 2000005\n#define INF 23333333\nusing namespace std;\nstruct edge{\n    int v, nxt, c;\n}e[N];\nint p[N], eid, S, T;\nvoid init(){\n    memset(p, -1, sizeof p);\n    eid = 0;\n}\nvoid add(int u, int v, int c){\n    e[eid].v = v;\n    e[eid].c = c;\n    e[eid].nxt = p[u];\n    p[u] = eid ++;\n}\nvoid insert(int u, int v, int c){\n    add(u, v, c);\n    add(v, u, 0);\n}\nint d[N], n, m;\nint bfs(){\n    memset(d, -1, sizeof d);\n    queue<int> q;\n    q.push(S);\n    d[S] = 0;\n    while(q.size()){\n        int u = q.front(); q.pop();\n        for(int i = p[u]; i + 1; i = e[i].nxt){\n            int v = e[i].v;\n            if(e[i].c && d[v] == -1){\n                d[v] = d[u] + 1;\n                q.push(v);\n            }\n        }\n    }\n    return d[T] != -1;\t\n}\nint dfs(int u, int flow){\n    if(u == T) return flow;\n    int ret = 0;\n    for(int i = p[u]; i + 1; i = e[i].nxt){\n        int v = e[i].v;\n        if(e[i].c && d[v] == d[u] + 1){\n            int tmp = dfs(v, min(flow, e[i].c));\n            flow -= tmp;\n            e[i].c -= tmp;\n            e[i^1].c += tmp;\n            ret += tmp;\n            if(!flow) break;\n        }\n    }\n    if(!ret) d[u] = -1;\n    return ret;\n}\nint Dinic(){\n    int ret = 0;\n    for(;bfs();) ret += dfs(S, INF);\n    return ret;\n}\nint main(){\n    init();\n    scanf(\"%d%d\", &n, &m);\n    S = 0, T = n + 1;\n    for(int i = 1; i <= n; i ++){\n        int x;\n        scanf(\"%d\", &x);\n        if(x) insert(i, T, 1); //\u5982\u679c\u7761\u5c31\u5411\u6e90\u70b9\u8fde\u8fb9 \n        else insert(S, i, 1);//\u5426\u5219\u5411\u6c47\u70b9\u8fde\u8fb9 \n    }\n    for(int i = 1; i <= m; i ++){\n        int u, v;\n        scanf(\"%d%d\", &u, &v);\n        insert(u, v, 1);//py\u4e4b\u95f4\u8fde\u53cc\u5411\u8fb9 \n        insert(v, u, 1);\n    }\n    printf(\"%d\", Dinic());//\u7136\u540e\u8dd1\u6700\u5927\u6d41   \u6700\u5927\u6d41 = \u6700\u5c0f\u5272 \n    return 0;\n}\n```\n",
        "postTime": 1546347345,
        "uid": 31656,
        "name": "lomit",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2057 \u3010[SHOI2007]\u5584\u610f\u7684\u6295\u7968\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**\u5206\u6790\u4e0e\u9898\u89e3\uff1a**\u6211\u4eec\u5b9a\u4e49\u548c$S$\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u8868\u793a\u7761\u5348\u89c9\uff0c\u548c$T$\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u8868\u793a\u4e0d\u7761\u5348\u89c9\u3002\u82e5\u7b2c$i$\u4e2a\u5c0f\u670b\u53cb\u610f\u89c1\u662f\u7761\u5348\u89c9\uff0c\u6211\u4eec\u4fbf\u628a$i$\u548c$S$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$0$\uff0c\u628a$i+n$\u548c$T$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$1$\uff0c\u8fd9\u6837\u8868\u793a\u8fd9\u4e2a\u5c0f\u670b\u53cb\u8981\u662f\u9009\u62e9\u7761\u5348\u89c9\u4fbf\u4e0d\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e$1$\uff0c\u53cd\u4e4b\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e$1$\u3002\u82e5\u7b2c$i$\u4e2a\u5c0f\u670b\u53cb\u610f\u89c1\u662f\u4e0d\u7761\u5348\u89c9\uff0c\u6211\u4eec\u4fbf\u628a$i$\u548c$S$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$1$\uff0c\u628a$i+n$\u548c$T$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$0$\uff0c\u8fd9\u6837\u8868\u793a\u8fd9\u4e2a\u5c0f\u670b\u53cb\u8981\u662f\u9009\u62e9\u4e0d\u7761\u5348\u89c9\u4fbf\u4e0d\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e$1$\uff0c\u53cd\u4e4b\u4f1a\u5bf9\u7b54\u6848\u8d21\u732e$1$\u3002\u8fd9\u6837\u6211\u4eec\u4fbf\u628a\u8fd9\u4e2a\u5c0f\u670b\u53cb\u548c\u81ea\u5df1\u7684\u610f\u613f\u76f8\u53cd\u7684\u60c5\u51b5\u5bf9\u4e8e\u7b54\u6848\u7684\u8d21\u732e\u5904\u7406\u5b8c\u6bd5\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u5c0f\u670b\u53cb\uff0c\u6211\u4eec\u8003\u8651\u628a\u4ed6\u4eec\u4e92\u76f8\u8fde\u5728\u4e00\u8d77\uff0c\u56e0\u4e3a\u662f\u53ea\u6709\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u4ea7\u751f\u8d21\u732e\uff0c\u6240\u4ee5$i$\u548c$j+n$\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff0c$j$\u548c$i+n$\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff08$i$\u548c$j$\u662f\u597d\u670b\u53cb\uff09\u3002\u8fd9\u6837\u5efa\u51fa\u6765\u7684\u56fe\u5c31\u53ef\u4ee5\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\u3002\n\n```c++\n// luogu-judger-enable-o2\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define N 1010\n#define inf 1000000000\nint n,m,ans,idx=1,dis[N],cur[N<<1],s,t;\nint head[N<<1],to[N*N<<2],val[N*N<<2],nxt[N*N<<2];\nvoid add(int a,int b,int c)\n    {nxt[++idx]=head[a],head[a]=idx,to[idx]=b,val[idx]=c;}\nbool bfs()\n{\n    memset(dis,-1,sizeof dis),dis[s]=0;\n    queue <int> q; q.push(s);\n    while(!q.empty())\n    {\n        int p=q.front();q.pop();\n        if(p==t) return true;\n        for(int i=head[p];i;i=nxt[i])\n            if(val[i]>0&&dis[to[i]]==-1)\n                dis[to[i]]=dis[p]+1,q.push(to[i]);\n    } return false;\n}\nint dfs(int p,int flow)\n{\n    int now,temp=flow;\n    if(p==t) return flow;\n    for(int i=cur[p];i;i=nxt[i])\n        if(val[i]>0&&dis[to[i]]==dis[p]+1)\n        {\n            now=dfs(to[i],min(val[i],temp));\n            if(!now) dis[to[i]]=-1;\n            temp-=now,val[i]-=now,val[i^1]+=now;\n            if(val[i]) cur[p]=i;\n            if(!temp) break;\n        } return flow-temp;\n}\nvoid dinic() {while(bfs()) memcpy(cur,head,sizeof(head)),ans+=dfs(s,inf);}\nint main()\n{\n    scanf(\"%d%d\",&n,&m),s=n*2+1,t=n*2+2;\n    for(int i=1,a;i<=n;i++)\n        scanf(\"%d\",&a),(a==1)?(add(s,i,1),add(i,s,0)):(add(i+n,t,1),add(t,i+n,0));\n    for(int i=1,a,b;i<=m;i++)\n        scanf(\"%d%d\",&a,&b),add(a,b+n,1),add(b+n,a,0),add(b,a+n,1),add(a+n,b,0);\n    dinic();printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1545619210,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4572 \u3010[JLOI2010]\u51a0\u519b\u8c03\u67e5\u3011"
    },
    {
        "content": "\u9898\u89e3\u88ab\u5c01\u7684\u7b2c\u4e00\u4e2a\u9898\u89e3\n\n\u601d\u8def\u662f\u697c\u4e0b\u7684 \u5bf9\u4e8e\u6bcf\u5bf9\u597d\u670b\u53cb \u5efa\u4e24\u6761\u76f8\u4e92\u7684\u8fb9  \u8dd1\u4e00\u8fb9\u6700\u5927\u6d41 \u5c31\u53ef\u4ee5\u8fc7\u4e86\n\n\u5148\u662f80\u5206\u7eafdfs\u65b9\u6cd5\n\n\n```cpp\nconst oo=100000000;\nvar v:array[0..1000,0..1000] of longint;\n    dinic:array[0..5000] of longint;\n    boo:array[0..10000] of boolean;\n    b,c,d,e,n,m,f,ans:longint;\nfunction min(a1,a2:longint):longint;\nbegin\n  if a1>a2 then exit(a2);\n  exit(a1);\nend;\nfunction dfs(a1,a2:longint):longint;\nvar i,j,k:longint;\nbegin\n  if a1=b+1 then\n    exit(a2);\n  for i:=1 to b+1 do\n  if v[a1,i]>0 then\n    if not boo[i] then\n    begin\n      boo[i]:=true;\n      k:=dfs(i,min(a2,v[a1,i]));\n      boo[i]:=false;\n      if k>0 then\n      begin\n        dec(v[a1,i]);\n        inc(v[i,a1]);\n        exit(k);\n      end;\n     end;\n  exit(0);\nend;\nprocedure add(a1,a2:longint);\nbegin\n  inc(v[a1,a2]);\nend;\nbegin\n  assign(input,'1.txt');\n  assign(output,'2out.txt');\n  reset(input);\n  rewrite(output);\n  readln(b,c);\n  for d:=1 to b do\n  begin\n    read(f);\n    if f=0 then add(0,d) else add(d,b+1);\n  end;\n  for c:=1 to c do\n  begin\n    readln(d,f);\n    add(d,f);\n    add(f,d);\n  end;\n  f:=dfs(0,oo);\n  while f>0 do\n  begin\n    ans:=ans+f;\n    f:=dfs(0,oo);\n  end;\nwriteln(ans);\nend.\n```\n\u7528dinic\u4f18\u5316 \u4e00\u6b21\u627e\u5230\u591a\u6761\u8def\u5f84\n\n\n\n\n```cpp\nconst oo=100000000;\nvar v:array[0..1000,0..1000] of longint;\n    dinic:array[0..500] of longint;\n    boo:array[0..1000] of boolean;\n    b,c,d,e,n,m,f,ans:longint;\nfunction min(a1,a2:longint):longint;\nbegin\n  if a1>a2 then exit(a2);\n  exit(a1);\nend;\nprocedure chushihua;\nvar i,j:longint;\nbegin\n  for i:=1 to b+1 do\n    dinic[i]:=oo;\nend;\nfunction dfs(a1,a2:longint):longint;\nvar i,j,k,h:longint;\nbegin\n  if a1=b+1 then exit(a2);\n  k:=0;\n  for i:=1 to b+1 do\n  if (v[a1,i]>0)and (not boo[i]) and (dinic[i]=dinic[a1]+1) then\n  begin\n    boo[i]:=true;\n    j:=dfs(i,min(a2,v[a1,i]));\n    a2:=a2-j;\n    boo[i]:=false;\n    k:=k+j;\n    dec(v[a1,i],j);\n    inc(v[i,a1],j);\n  end;\n  exit(k)\nend;\nprocedure bfs(a1:longint);\nvar i,j,k:longint;\nbegin\n  for i:=1 to b+1 do\n  if v[a1,i]>0 then\n   if dinic[i]>(dinic[a1]+1) then\n    begin\n      dinic[i]:=dinic[a1]+1;\n      bfs(i);\n    end;\nend;\nprocedure add(a1,a2:longint);\nbegin\n  inc(v[a1,a2]);\nend;\nbegin            {\n  assign(input,'1.txt');\n  reset(input);\n  assign(output,'1out.txt');\n  rewrite(output); }\n  readln(b,c);\n  for d:=1 to b do\n  begin\n    read(f);\n    if f=0 then add(0,d) else add(d,b+1);\n  end;\n  for c:=1 to c do\n  begin\n    readln(d,f);\n    add(d,f);\n    add(f,d);\n  end;\n  chushihua;\n  bfs(0);\n  while dinic[b+1]<>oo do\n  begin\n    ans:=ans+dfs(0,oo);\n    chushihua;\n    bfs(0);\n  end;\n  writeln(ans);\nend.\n```",
        "postTime": 1487231542,
        "uid": 13437,
        "name": "\u849f\u84bbpks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2057 \u3010\u5584\u610f\u7684\u6295\u7968\u3011"
    }
]