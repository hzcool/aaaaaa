[
    {
        "content": "\u5148\u679a\u4e3e\u6240\u6709\u7684\u5339\u914d\u65b9\u5f0f\uff0c\u7136\u540e\u5339\u914d\u5b8c\u4e4b\u540edfs\u641c\u627e\u73af\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\n\n```cpp\n/*\nID: ylx14271\nPROG: wormhole \nLANG: C++\n */\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n;\nstruct node\n{\n    int x;int y;\n} a[30];\nint b[30];\nint ans;\nbool cmp(node aa,node bb)//\u6392\u5e8f \n{\n    if (aa.y==bb.y) return aa.x<bb.x;\n    return aa.y<bb.y;\n}\nint f(int num,int d,int begin,int p1)//\u68c0\u67e5\uff0cnum\u53ea\u662f\u7528\u6765\u6807\u8bb0\u7684 \n{ //begin,\u8bb0\u5f55\u5f00\u59cb\u4f4d\u7f6e\uff0c\u7528\u6765\u5224\u65ad\u662f\u5426\u56de\u5230\u539f\u70b9\u4e86\uff0c\n//p1=1\uff1a\u8d70\u7684\u65b9\u5f0f\u5230\u8fbe\u70b9d \u7684\uff0cp1=0\uff1a\u4ece\u67d0\u866b\u6d1e\u5230\u8fbed \u7684 \n    if (num!=1&&d==begin&&p1==1) return 1; // \u56de\u5230\u539f\u70b9\u4e86\uff0c\u800c\u4e14\u662f\u7528\u8d70\u7684\u65b9\u5f0f \n    if (p1==0)//\u4ece\u866b\u6d1ed\u51fa\u6765\uff0c\u5c31\u5f80\u524d\u8d70\uff0c\u5982\u679c\u524d\u9762\u6709\u866b\u6d1e\uff0c\u5c31\u8d70\u8fc7\u53bb\uff0c\u6ca1\u6709\u5c31\u8fd4\u56de0 \n    {\n        if (a[d].y==a[d+1].y) return f(num+1,d+1,begin,1);\n        else return 0;//\u6ca1\u6709\u5f62\u6210\u73af\u5c31\u8fd4\u56de0 \n    }\n    if (p1==1) return f(num+1,b[d],begin,0);//\u8d70\u5230\u866b\u6d1e\u53e3\u4e86\u5c31\u8df3\u8fdb\u53bb \n}\nbool check()\n{\n    for (int j=1;j<=n;j++)//\u5c1d\u8bd5\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\uff0c\u770b\u4f1a\u4e0d\u4f1a\u5f62\u6210\u73af \n        if (f(1,j,j,1)==1) return 1;//\u6709\u4e00\u4e2a\u4f1a\u5f62\u6210\u73af\u5c31\u8fd4\u56de1 \n    return 0;\n}\nvoid dfs(int x)//\u914d\u5bf9\n{\n    if (x==n+1)    {if (check()==1) ans++;return;}//n\u4e2a\u70b9\u90fd\u5339\u914d\u5b8c\u4e86\uff0c\u5c31\u68c0\u67e5 \n    if (b[x]==0)//\u5982\u679cx\u6ca1\u6709\u5339\u914d \n    {\n        for (int i=x+1;i<=n;i++)//\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u7684\u5339\u914d \n            if (b[i]==0)\n            {\n                b[i]=x;b[x]=i;//\u6807\u8bb0\uff0ci\u5339\u914dx\uff0cx\u5339\u914di \n                dfs(x+1);//\u5f80\u540e\u641c \n                b[i]=0;b[x]=0;//\u8fd8\u539f \n            }\n\n    }\n    if (b[x]!=0) dfs(x+1);//x\u5339\u914d\u8fc7\u4e86\u5c31\u7ee7\u7eed\u5f80\u540e\u641c \n    return;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&a[i].x,&a[i].y);//\u8fd9\u91cc\u7684x\u662f\u6a2a\u5750\u6807\uff0cy\u662f\u7eb5\u5750\u6807 \n    }\n    sort(a+1,a+n+1,cmp);//\u6392\u5e8f\u6309\u7167\u7eb5\u5750\u6807\u6392\uff0c\u7eb5\u5750\u6807\u76f8\u540c\u6309\u6a2a\u5750\u6807 \n    dfs(1);//\u4e00\u4e2a\u70b9\u4e00\u4e2a\u70b9\u7684\u53bb\u5339\u914d \n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\u8fd8\u662f\u6bd4\u8f83\u7b80\u6d01\u7684\n",
        "postTime": 1499401711,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u601d\u8def\uff0c\u8fd9\u73a9\u610f\u53ef\u4ee5\u6362\u6210\u4e00\u4e2a\u56fe\u3002\n\n\u56e0\u4e3a\u53ea\u80fd\u5f80\u53f3\u8d70\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u866b\u6d1e\u6309\u5750\u6807\u6392\u4e2a\u5e8f\uff0c\u5bf9\u540c\u4e00\u884c\u7684\u866b\u6d1e\u8fdb\u884c\u5904\u7406\uff0c\u76f8\u90bb\u7684y\u5750\u6807\u76f8\u540c\u7684\u866b\u6d1e\u8fde\u4e00\u6761**\u6709\u5411\u8fb9**\u3002\n\n\u7b2c\u4e8c\u601d\u8def\uff0c\u679a\u4e3e\u3002\u4fdd\u8bc1\u679a\u4e3e\u7684\u6240\u6709\u70b9\u5bf9(a,b)\u4e2d**a<b**\uff0c\u6211\u91c7\u7528\u4e86\u8fd9\u4e2a\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u7406\u7684\u4e0d\u91cd\u590d\u679a\u4e3e\u65b9\u6cd5.-.\u8bf7\u5404\u4f4d\u81ea\u884c\u4f53\u4f1a\u3002\n\n\u6bcf\u679a\u4e3e\u4e00\u4e2a\u70b9\u5bf9\uff0c\u5c31\u628a\u866b\u6d1e\u7684\u4fe1\u606f\u66f4\u6539\uff0c\u5c06\u5176\u4e92\u8054\u3002**\uff08\u6ce8\u610f\u866b\u6d1e\u7684\u4fe1\u606f\u4e0e\u56fe\u7684\u4fe1\u606f\u662f\u5206\u5f00\u5b58\u50a8\u7684\uff09**\u3002\n\n\u7b2c\u4e09\u601d\u8def\uff0c\u6d4b\u73af\u3002\u8bf4\u660e\u4e00\u4e0b\u6807\u8bb0\u2014\u2014\u8fd9\u91cc\u6807\u8bb0\u7684\u5e76\u4e0d\u662f\u70b9\uff08\u866b\u6d1e\uff09\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5165\uff0c\u4e5f\u53ef\u4ee5\u51fa\u3002\u8fd9\u91cc\u6807\u8bb0\u7684\u662f\uff0c**\u8be5\u70b9\u5230\u4e0b\u4e00\u4e2a\u70b9\u4e4b\u95f4\u7ecf\u8fc7\u7684\u7ebf\u6bb5\u3002**\u540c\u65f6\uff0c\u8fdb\u5165\u641c\u7d22\u7684\u4e0b\u4e00\u5c42\u65f6\uff0c\u76f4\u63a5\u8fdb\u5165\u8be5\u70b9\u6240\u8fde\u63a5\u7684\u70b9\u3002\u8fd9\u6837\u505a\u7684\u542b\u4e49\u662f**\u4f20\u9001\u5230\u8be5\u70b9\u6240\u8fde\u63a5\u7684\u70b9\u7684\u524d\u9762\u4e00\u6761\u7ebf\u6bb5**\u3002\n\n\u5176\u5b9e\u5e76\u4e0d\u96be.-.\u5199\u641c\u73af\u7684\u65f6\u5019\u601d\u8003\u4e00\u4e0b\u6807\u8bb0\u7684\u65b9\u5f0f\uff0c\u7a0d\u5fae\u6539\u6539\u5dee\u4e0d\u591a\u5c31OK\uff0c\u4ee5\u4e0a\u7684\u89e3\u91ca\u53ea\u662f\u5bf9\u4ee3\u7801\u542b\u4e49\u7684\u4e00\u4e2a\u5408\u7406\u89e3\u91ca\u3002\n\n\u66f4\u591a\u601d\u8def\u7ec6\u8282\u548c\u5b9e\u73b0\u7ec6\u8282\u8bf7\u53c2\u8003\u4ee3\u7801\u3002\n\n**UPD:\u4f18\u5316\u540e\u4ee3\u7801**\n\n```cpp\n// Code by ajcxsu\n// Problem: wormhole\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=20;\nstruct Pos {\n    int x,y;\n} p[N];\nbool cmp(const Pos &a, const Pos &b) {\n    return a.y<b.y || (a.y==b.y && a.x<b.x);\n}\nint n;\nint to[N];\nbool tag[N];\nint con[N];\n\nbool cycle(int x) {\n    while(to[x]) {\n        if(tag[x]) return 1;\n        tag[x]=1;\n        x=con[to[x]];\n    }\n    return 0;\n}\n\nint ans=0;\nvoid dfs1(int k) {\n    if(k>n) {\n        bool ok=0;\n        for(int i=1;i<=n && !ok;i++)\n            memset(tag,0,sizeof(tag)), ok|=cycle(i);\n        ans+=ok;\n        return;\n    }\n    if(con[k]) dfs1(k+1);\n    else {\n        for(int i=k+1;i<=n;i++)\n            if(!con[i]) {\n                con[i]=k, con[k]=i;\n                dfs1(k+1);\n                con[i]=con[k]=0;\n            }\n    }\n}\n\nint main() {\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d%d\",&p[i].x,&p[i].y);\n    sort(p+1,p+1+n,cmp);\n    for(int i=1;i<=n-1;i++)\n        if(p[i].y==p[i+1].y) to[i]=i+1;\n    dfs1(1);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1500536256,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "\u53d1\u73b0\u4e86\u5976\u725b\u9898\u603b\u662f\u4e71\u52a0\u6807\u7b7e\u3002\n\n\u89c2\u5bdf\u5230\u6570\u636e\u8303\u56f4\u53ea\u523012\uff0c\u6240\u4ee5\u8003\u8651\u66b4\u529b\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u6392\u5217\u7136\u540e\u4e00\u4e00\u5224\u65ad\u3002\u53ef\u4ee5\u63a5\u53d7\u7684\u6700\u9ad8\u590d\u6742\u5ea6\u4e3aO(n^7)\uff0c\u4e0d\u4f18\u5316\u4e5f\u4e0d\u4f1a\u88ab\u7eed\u3002\n\n\u7136\u800c\u8fd8\u662f\u501f\u9274\u4e86\u522b\u4eba\u7684\u601d\u8def\u256e(\u256f\u25bd\u2570)\u256d\n\n\n## \u9884\u5904\u7406\n\n\u5bf9\u6570\u636e\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\u65b9\u4fbf\u6392\u5e8f\u3002\u8ba9\u6570\u636e\u6309\u7167y\u9012\u589e\uff0c\u5f53y\u76f8\u540c\u65f6\u6309\u7167x\u9012\u589e\uff0c\u8fd9\u6837\u53ef\u4ee5\u67e5\u8868\u627e\u51fa\u4e0b\u4e00\u4e2a\u5750\u6807\u4f4d\u7f6e\uff0c\u6216\u8005\u5224\u65ad\u51fa\u884c\u8d70\u65b9\u5411\u4e0a\u6709\u6ca1\u6709\u4e0b\u4e00\u4e2a\u70b9\u3002\n\n\u5b9e\u73b0\uff1a\n\n```cpp\nstruct node{\n    int x,y;\n}map[13];\n\nbool law(node a,node b){\n    if(a.y!=b.y)\n        return a.y<b.y;\n    return a.x<b.x;\n}\n\nsort(map+1,map+n+1,law);\n```\n\n## \u679a\u4e3e\u914d\u5bf9\n\n\u901a\u8fc7dfs\u83b7\u53d6\u53ef\u80fd\u7684\u6bcf\u4e2a\u6392\u5217\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u50a8\u5b58\u3002\n\n\u6709\u70b9\u5168\u6392\u5217\u7684\u610f\u601d\uff0c\u6216\u8bb8\u53ef\u4ee5\u7528next\\_permutation\uff1f\n\n\u5b9e\u73b0\uff1a\n\n```cpp\nbool book[13];\nint set[13];\nint k;\n\nvoid dfs(void){\n    if(k==n){                    //\u5f53set\u4e2d\u6709\u4e86\u4e00\u6574\u4e2a\u6392\u5217 \n        check();\n        return;\n    }\n    int pos;\n    for(int i=1;i<=n;i++)        //\u6269\u5c55\u4e00\u4e2a\u70b9 \n        if(!book[i]){\n            set[++k]=i;\n            book[i]=1;\n            pos=i;\n            break;\n        }\n    for(int i=pos+1;i<=n;i++)    //\u641c\u7d22\u4e0b\u4e00\u4e2a\u70b9 \n        if(!book[i]){\n            set[++k]=i;\n            book[i]=1;\n            dfs();\n            k--;//\u56de\u6eaf \n            book[i]=0;\n        }\n    book[pos]=0;//\u6062\u590d \n    k--;\n    return;\n}\n```\n\n## \u68c0\u67e5\n\n\u89c2\u5bdf\u8fd9\u4e2a\u6392\u5217\u662f\u5426\u53ef\u4ee5\u6ee1\u8db3\u6b7b\u5faa\u73af\uff0c\u770b\u6ce8\u91ca\u5427\u3002\n\n```cpp\nint ans;\n\nvoid check(void){\n    bool flag=0;\n    for(int i=1;i<=n;i++){//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9 \n        int x=i;//\u5907\u4efd\u5f53\u524d\u70b9\u5750\u6807 \n        for(int j=1;j<=n;j++){\n            int t=(x%2)?set[x+1]:set[x-1];\n            //\u8fd9\u53e5\u4e0d\u597d\u7406\u89e3\uff0c\u610f\u601d\u662f\u83b7\u53d6\u4e00\u4e2a\n            //\u5750\u6807\uff0cx\u4e3a\u5076\u6570\u8868\u793ax\u662f\u4e00\u4e2a\u6392\u5217\n            //\u4e2d\u7684\u524d\u4e00\u4e2a\u5143\u7d20\uff0c\u53cd\u4e4b\u4e3a\u540e\u4e00\u4e2a \n            if(t==n||map[t+1].y!=map[t].y)\n            //\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u6216\u8005\n            //\u672c\u6392\u5217\u4e0d\u80fd\u8d70\u5230\u4e0b\u4e00\u4e2a\u70b9 \n                break;\n            for(int m=1;m<=n;m++)\n                if(set[m]==t+1){\n                //\u627e\u5230\u4e86\u4e0b\u4e00\u4e2a\u70b9 \n                    x=m;\n                    break;\n                }\n            if(j==n){\n                //\u672c\u5faa\u73af\u5230\u7ed3\u675f\u90fd\u6ca1\u88ab\n                //break,\u8bf4\u660e\u7b26\u5408\u6761\u4ef6 \n                ans++;\n                flag=1;\n                break;\n            }\n        }\n        if(flag) \n            break;\n    }\n    return;\n}\n```\n### \\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\n\n\u5b8c\u5168\u7684\u4ee3\u7801\u4e0d\u8d34\u4e86\uff0c\u6838\u5fc3\u7b97\u6cd5\u5df2\u7ecf\u5728\u8fd9\u4e86\u3002\n\n\u5976\u725b\u9898\u90fd\u633a\u6709\u610f\u601d\u7684\uff0c\u770b\u8d77\u6765\u8ddf\u505a\u8d77\u6765\u5b8c\u5168\u4e24\u56de\u4e8b\u3002\n",
        "postTime": 1495247715,
        "uid": 36503,
        "name": "\u4e1c\u95e8\u4e4b\u6768",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e00\u770b\u5c31\u662f\u786c\u641c\u7d22,\u96be\u70b9\u6709\u4e24\u4e2a\uff1a\n\n1\u3001\u5982\u4f55\u679a\u4e3e\u4e24\u4e24\u7684\u642d\u914d\uff0c\u4f7f\u5f97\u7ed3\u679c\u5b8c\u6574\uff1f\n\n2\u3001\u5982\u4f55\u7b80\u6d01\u5730\u68c0\u9a8c\u662f\u5426\u5b58\u5728\u73af\uff1f\n\n.\n\n\u5148\u6765\u89e3\u51b3\u95ee\u98981\u3002\u8fd9\u4e2a\u641c\u7d22\u8981\u6c42\u5e73\u65f6\u771f\u7684\u5f88\u5c11\u89c1\uff0c\u5b83\u8981\u6c42\u4e0d\u6f0f\u4e0d\u91cd\u5730\u679a\u4e3e\u4e24\u4e24\u95f4\u5339\u914d\u7684\u60c5\u51b5\u3002\u6211\u4eec\u8fd9\u6837\u505a\uff1a\u5728\u8f6e\u5230k\u9009\u62e9\u65f6\uff0c\u5b83\u987a\u624b\u5e26\u4e0a\u4e00\u4e2a\u642d\u6863\uff0c\u540c\u65f6\u628a\u642d\u6863\u7684\u9009\u62e9\u6743\u7ed9\u9664\u6389\u3002\u8fd9\u6837\u505a\uff0c\u5c31\u53ef\u4ee5\u628ak\u548c\u4ed6\u7684\u642d\u6863\u6253\u5305\uff0c\u770b\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u4e0d\u81f3\u4e8e\u4f7fk\u627e\u4e86\u4ed6\u7684\u642d\u6863\uff0c\u54ea\u56de\u4ed6\u7684\u642d\u6863\u653e\u8fc7\u6765\u627e\u4ed6\u3002\n\n.\n\n\u95ee\u98982\u7684\u65b9\u6cd5\u5c31\u5f88\u591a\u4e86\u3002\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u5728\u539f\u56fe\u4e0a\u8fde\u63a5\u65b0\u7684\u8fb9\u540e\u76f4\u63a5\u8dd1\u539f\u56fe\u3002\u4f46\u8fd9\u6837\u505a\u6709\u51e0\u4e2a\u95ee\u9898\uff0c\u4e00\u662f\u56fe\u5f88\u5927\uff0c\u4e0d\u53ef\u80fd\u4e00\u4e2a\u4e2a\u5750\u6807\u7684\u8dd1\uff0c\u4e8c\u662f\u5982\u679c\u76f4\u63a5\u4fee\u6539\u539f\u56fe\uff0c\u5728\u7528\u5b8c\u540e\u8fd8\u8981\u8fd8\u539f\uff0c\u4e0d\u65b9\u4fbf\u3002\n\n\u8981\u514b\u670d\u8fd9\u4e24\u4e2a\u95ee\u9898\u4e0d\u96be\u3002\u5982\u679c\u56fe\u5927\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u7ed9\u4ed6\u4eec\u8fde\u8fb9\uff0c\u8ba9\u4ed6\u4eec\u6309\u8fb9\u8d70\u3002\u8fde\u8fb9\u7684\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u53ef\u4ee5\u7528\u90bb\u63a5\u8868\u3002\u8003\u8651\u5230\u5979\u7684\u65b9\u5411\u662f\u4e00\u76f4\u5411x\u8f74\u7684\u6b63\u65b9\u5411\uff0c\u5979\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u80fd\u5230\u8fbe\u7684\u70b9\u662f\u56fa\u5b9a\u7684\uff0c\u53d8\u5c31\u53d8\u5728\u866b\u6d1e\u7684\u4f20\u9001\u3002\u53d8\u7684\u4e0d\u8981\u7406\u4ed6\uff0c\u628a\u56fa\u5b9a\u7684\u5148\u89e3\u51b3\u597d\u3002\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u7ed9\u6bcf\u4e2a\u70b9\u4e0a\u6807\u8bb0\uff0c\u8bb0\u5f55\u4ed6\u80fd\u5230\u8fbe\u7684\u70b9\u3002\n\n\u5bf9\u4e8e\u4f1a\u6539\u53d8\u7684\u8fb9\uff0c\u6211\u4eec\u53e6\u5f00\u4e2a\u6570\u7ec4\u6765\u5904\u7406\u3002\u5728\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u628a\u4f20\u9001\u7684\u4e24\u4e2a\u70b9\u8fde\u8d77\u6765\uff0c\u5728\u8981\u4f20\u9001\u65f6\u6309\u8fd9\u4e2a\u8d70\u3002\n\u901a\u8fc7\u5206\u6210\u4e24\u5757\u6765\u5904\u7406\uff0c\u5206\u5f00\u4e86\u53d8\u4e0e\u4e0d\u53d8\uff0c\u4f7f\u5f97\u539f\u5148\u7684\u8fd8\u539f\u64cd\u4f5c\u5f97\u4ee5\u5220\u53bb\u3002\u771f\u662f\u7edd\u5999\u7684\u4e00\u62db\uff01\n\n\u3010\u4ee3\u7801\u3011\uff08\u501f\u9274https://www.luogu.org/paste/t2yn4e63\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=20;\nstruct Pos\n{\n\tint x,y;\n} p[N];\nbool cmp(const Pos &a, const Pos &b)\n{\n\treturn a.y<b.y || (a.y==b.y && a.x<b.x);\n}\nint n;\nint to[N];\nbool tag[N];\nint con[N];\n\nbool cycle(int x)\n{\n\twhile(to[x])\n\t{\n\t\tif(tag[x]) return 1;\n\t\ttag[x]=1;\n\t\tx=con[to[x]];\n\t}\n\treturn 0;\n}\n\nint ans=0;\nvoid dfs1(int k)\n{\n\tif(k>n)\n\t{\n\t\tbool ok=0;\n\t\tfor(int i=1; i<=n && !ok; i++)\n\t\t\tmemset(tag,0,sizeof(tag)), ok|=cycle(i);\n\t\tans+=ok;\n\t\treturn;\n\t}\n\tif(con[k]) dfs1(k+1);\n\telse\n\t{\n\t\tfor(int i=k+1; i<=n; i++)\n\t\t\tif(!con[i])\n\t\t\t{\n\t\t\t\tcon[i]=k, con[k]=i;\n\t\t\t\tdfs1(k+1);\n\t\t\t\tcon[i]=con[k]=0;\n\t\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1; i<=n; i++) scanf(\"%d%d\",&p[i].x,&p[i].y);\n\tsort(p+1,p+1+n,cmp);\n\tfor(int i=1; i<=n-1; i++)\n\t\tif(p[i].y==p[i+1].y) to[i]=i+1;\n\tdfs1(1);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1524227580,
        "uid": 31585,
        "name": "2002chenhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\n/*\n\u7b97\u6cd5\u6b65\u9aa4:\n\u2460\u641c\u7d22\u6240\u6709\u53ef\u80fd\u7684\u914d\u5bf9\uff0c\u9700\u8981\u786e\u4fdd\u4e0d\u4f1a\u91cd\u590d\uff1a\n-> n \u4e2a\u4e0d\u540c\u7684\u7269\u54c1\u653e\u5230 n/2 \u4e2a\u76f8\u540c\u7684\u76d2\u5b50\u91cc\uff0c\u4e0d\u80fd\u51fa\u73b0\u91cd\u590d\u3002\n-> \u6bcf\u5bf9\u4e2d\u7684\u7b2c 2 \u4e2a\u5143\u7d20 > \u7b2c 1 \u4e2a\u5143\u7d20\uff0c\u7b2c i \u5bf9\u7684\u7b2c 1 \u4e2a\u5143\u7d20 > \u7b2c i-1\n\u5bf9\u7684\u7b2c 1 \u4e2a\u5143\u7d20\n\u2461\u5224\u65ad\u662f\u5426\u4f1a\u51fa\u73b0\u5faa\u73af\uff1a\n-> \u5bf9\u4e8e\u6bcf\u4e00\u79cd\u914d\u5bf9\u65b9\u6848\uff0c\u4f9d\u6b21\u6a21\u62df Bessie \u4ece\u7b2c 1 \u4e2a\u5230\u7b2c n \u4e2a\u866b\u6d1e\u51fa\u53d1\u3002\n-> \u6a21\u62df\u8d70 n \u6b65\uff0c\u6839\u636e\u62bd\u5c49\u539f\u7406\uff0c\u5982\u679c n \u6b65\u4ee5\u540e Bessie \u8fd8\u5728\u67d0\u4e2a\u866b\u6d1e\u4e2d\u5219\uff0c\n\u51fa\u73b0\u4e86\u5faa\u73af\u3002\n\u2462\u521d\u59cb\u5316:\n-> \u8bb0\u5f55\u6bcf\u4e2a\u866b\u6d1e\u53f3\u8fb9\u7684\u866b\u6d1e\uff0c\u6a21\u62df\u5224\u65ad\u5faa\u73af\u65f6\u4f7f\u7528\u3002\n*/ \nconst int N=15;\nstruct Node{\n\tint x,y;//\u866b\u6d1e\u7684 x \u548c y \u5750\u6807\n}w[N];\n//part[i]\u5b58\u50a8\u7b2c i \u4e2a\u866b\u6d1e\u7684\u914d\u5bf9\u866b\u6d1e\uff0cto[i]\u8bb0\u5f55 i \u53f3\u8fb9\u7684\u866b\u6d1e\u3002\nint n,ans,part[N],to[N];\nbool is_cycle(){\n\t//\u6a21\u62df\u4ece\u7b2c 1 \u4e2a\u5230\u7b2c n \u4e2a\u866b\u6d1e\u51fa\u53d1\n\tfor(int start=1;start<=n;start++){\n\t\tint pos=start;\n\t\tfor(int cnt=1;cnt<=n;cnt++)\n\t\t\tpos=to[part[pos]];\n\t\tif(pos)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\n//n \u4e2a\u4e0d\u540c\u7684\u7269\u54c1\u653e\u5230 n/2 \u4e2a\u76f8\u540c\u7684\u76d2\u5b50\u91cc\uff0c\u4e0d\u80fd\u51fa\u73b0\u91cd\u590d\u3002\n//\u4e3a\u9632\u6b62\u91cd\u590d\uff0c\u641c\u7d22\u8fc7\u7a0b\u4e2d\u6ca1\u5bf9\u4e2d\u7684\u5143\u7d20 2>\u5143\u7d20 1\uff0c\u6bcf\u4e00\u5bf9\u7684\u5143\u7d20 1>\u4e0a\u4e00\u5bf9\u7684\u5143\u7d20 1 \u3002\nvoid dfs(int cur,int pre){\n\tif(cur>n/2){\n\t\tif(is_cycle())//\u6240\u6709\u914d\u5bf9\u5b8c\u6210\uff0c\u5230\u8fbe\u76ee\u7684\u5730\n\t\t\tans++;\n\t\treturn;\n\t}\n\tfor(int i=pre+1;i<=n;i++) \n\tif(!part[i])//i \u8fd8\u672a\u914d\u5bf9\n\t\tfor(int j=i+1;j<=n;j++)\n\t\t\tif(!part[j]){//j \u8fd8\u672a\u914d\u5bf9\n\t\t\t\tpart[i]=j,part[j]=i;//i \u548c j \u914d\u5bf9\n\t\t\t\tdfs(cur+1,i);\n\t\t\t\tpart[i]=part[j]=0;\n\t\t\t\t//i \u548c j \u59cb\u7ec8\u5728\u53d8\u52a8\uff0c\u9700\u8981\u6062\u590d\u72b6\u6001\n\t\t\t} \n}\nint main() {\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>w[i].x>>w[i].y;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(w[j].y==w[i].y&&w[j].x>w[i].x)\n\t\t\t\tif(to[i]==0||w[j].x<w[to[i]].x)\n\t\t\t\t\tto[i]=j;//j \u5728 i \u53f3\u8fb9\n\tdfs(1,0);\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1601684383,
        "uid": 177423,
        "name": "\u738b\u8f69\u9038",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1e wormhole\u3011"
    },
    {
        "content": "- \u9ec4\u9898\u5c45\u7136\u5bf9\u62cd\u4e861\u5929QwQ\u3002\n- \u5751\u70b9\uff1a\n  - \u5982\u679c\u9047\u5230\u866b\u6d1e\uff0c\u5fc5\u987b\u4f20\u9001\u8fc7\u53bb\u3002\n  - \u53ef\u80fd\u4e24\u70b9\u4e4b\u95f4\u65e2\u53ef\u4ee5\u7528\u866b\u6d1e\uff0c\u53c8\u53ef\u4ee5\u7528\u8d70\u8def\u3002\n- \u601d\u8def\u5206\u6790\uff1a\n  - \u663e\u7136\uff0c\u4e24\u70b9\u4e4b\u95f4\u80fd\u5426\u8d70\u8def\u662f\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u7684\u3002\n  - **\u4f46\u662f** \uff0c \u5f53\u6709\u4e09\u70b9\u6ee1\u8db3 $ A( x_{1} , y )\\  B(x_{2} , y)\\  C(x_{3} , y) $ \u4e14 \u6ee1\u8db3$ x_{1} < x_{2} < x_{3} $ \uff0c\u5219$A$\u53ef\u8d70$B$\uff0c$B$\u53ef\u8d70$C$\uff0c\u4f46$A$\u4e0d\u53ef\u8d70\uff08\u8d70\u5230$B$\u65f6\uff0c\u4f1a\u88ab\u5f3a\u5236\u4f20\u9001\uff09$C$\u3002\n  - \u6240\u4ee5\uff0c\u9884\u5904\u7406\u65f6\u5e94\u5148\u53cc\u5173\u952e\u5b57{y , x}\u6392\u5e8f\uff0c\u5904\u7406$\\color{Blue}{f_{i}}$\u8868\u793a$\\color{blue}{i}$\u80fd\u5426\u5230$\\color{blue}{i + 1}$\u3002\n  - \u4e4b\u540e\u53ef\u4ee5DFS\u51fa\u9ed1\u6d1e\u914d\u5bf9\u65b9\u6848\u3002\n  - \u4e4b\u540e\u601d\u8003\u5982\u4f55check\u3002\u53ef\u4ee5\u679a\u4e3e\u8d1d\u897f\u6700\u5f00\u59cb\u7684\u866b\u6d1e\u3002\u4e4b\u540e\u6bcf\u5f53\u8d1d\u897f\u8fd8\u53ef\u4ee5\u8d70\u7684\u65f6\u5019\uff0c\u5c31\u8ba9\u8d1d\u897f\u8d70\u4e00\u6b65\u540e\u8df3\u866b\u6d1e\u3002\u5c31\u6109\u5feb\u5730AC\u4e86\n- \u4ee3\u7801\uff1a\n```\n# include <iostream>\n# include <cstdio>\n# include <cstring>\n# include <algorithm>\nusing namespace std ;\nint n ;\nint posx[15] , posy[15] ;\nint f[15] ;\nint pairs[15] ;\nint ans = 0 ;\nbool already[15] ;\nbool check( int begin )\n{\n\twhile ( f[begin] )\n\t{\n\t\tif ( already[begin] ) return true ;\n\t\talready[begin] = true ;\n\t\tbegin = pairs[f[begin]] ;\n\t}\n\treturn false ;\n}\nvoid dfs( int x )\n{\n    if ( x > n )\n    {\n        for ( int i = 1 ; i <= n ; i++ )\n        {\n            memset( already , false , sizeof( already ) ) ;\n            if ( check( i ) )\n            {\n                ans ++ ;\n                break ;\n            }\n        }\n        return ;\n    }\n    if ( pairs[x] ) \n    {\n        dfs( x + 1 ) ;\n        return ;\n    }\n    for ( int i = x + 1 ; i <= n ; i++ )\n    {\n        if ( i == x ) continue ;\n        if ( pairs[i] ) continue ;\n        pairs[x] = i ;\n        pairs[i] = x ;\n        dfs( x + 1 ) ;\n        pairs[x] = 0 ;\n        pairs[i] = 0 ;\n    }\n}\nstruct node\n{\n\tint x , y ;\n\tvoid read()\n\t{\n\t\tscanf(\"%d%d\" , &x , &y) ; \n\t}\n} point[105] ;\nbool cmp( node a , node b )\n{\n\tif ( a.y != b.y ) return a.y < b.y ;\n\treturn a.x < b.x ;\n}\nint main()\n{\n    scanf(\"%d\" , &n) ;\n    for ( int i = 1 ; i <= n ; i++ )\n    \tpoint[i].read() ;\n    sort( point + 1 , point + n + 1 , cmp ) ;\n    for ( int i = 1 ; i < n ; i++ )\n    {\n    \tif ( point[i].y == point[i + 1].y )\n    \t{\n    \t\tf[i] = i + 1 ;\n\t\t}\n\t}\n\tdfs( 1 ) ;\n    printf(\"%d\\n\" , ans) ;\n    return 0 ;\n}\n\n```",
        "postTime": 1583224276,
        "uid": 219868,
        "name": "xsap",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1e wormhole\u3011"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e9b\u70b9\uff0c\u5728\u6a2a\u5411\u7a7f\u8fc7\u8fd9\u4e9b\u70b9\u65f6\u5c06\u4f1a\u88ab\u4f20\u9001\u56de\u7eb5\u5750\u6807\u76f8\u540c\u7684 $y$ \u8f74\u4e0a\uff0c\u95ee\u6709\u591a\u5c11\u79cd\u60c5\u51b5\u4f1a\u4f7f\u5f97\u6c38\u8fdc\u5411\u53f3\u722c\u7684\u866b\u5b50\u9677\u5165\u6b7b\u5faa\u73af\u3002\n\n### \u601d\u8def\uff1a\n\n\u9996\u5148\u56e0\u4e3a\u53ea\u4f1a\u5411\u53f3\u722c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u5c06\u540c\u4e00\u884c\u4e0a\u7684\u70b9\u95f4\u8fde\u8fb9\uff0c\u7136\u540e $dfs$ \u66b4\u529b\u627e\u5339\u914d\uff0c\u4e4b\u540e\u5224\u73af\u5373\u53ef\u3002\n\n### Code\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define x second\n#define y first\nusing namespace std;\nint n,to[20],pre[20],ans;\nbool vis[20];\npair<int,int>p[20];\nbool check(int k) { //\u5224\u73af\n\twhile(to[k]) {\n\t\tif(vis[k]) return true;\n\t\tvis[k]=true;\n\t\tk=pre[to[k]];\n\t}\n\treturn false;\n}\nvoid dfs(int dep) { //\u66b4\u529b\u627e\u5339\u914d\n\tif(dep>n) {\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tfill(vis+1,vis+1+n,0);\n\t\t\tif(check(i)) {\n\t\t\t\tans++;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tif(pre[dep]) dfs(dep+1);\n\telse {\n\t\tfor(int i=dep+1; i<=n; i++)\n\t\t\tif(!pre[i]) {\n\t\t\t\tpre[i]=dep;\n\t\t\t\tpre[dep]=i;\n\t\t\t\tdfs(dep+1);\n\t\t\t\tpre[i]=0;\n\t\t\t\tpre[dep]=0;\n\t\t\t}\n\t}\n}\nint main() {\n\tcin>>n;\n\tfor(int i=1; i<=n; i++) cin>>p[i].x>>p[i].y;\n\tsort(p+1,p+1+n);\n\tfor(int i=1; i<n; i++) if(p[i].y==p[i+1].y) to[i]=i+1;\n\tdfs(1);\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1601459196,
        "uid": 351320,
        "name": "RBI_GL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1e wormhole\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u6211\u60f3\u76f4\u63a5\u5efa\u56fe\u627e\u73af\uff0c\u540e\u6765\u53d1\u73b0\u8fd9\u662f\u4e0d\u884c\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u65e2\u6709\u6709\u5411\u8fb9\u53c8\u6709\u65e0\u5411\u8fb9\u7684\u56fe\uff0c\u76f4\u63a5\u627e\u73af\u5f88\u9ebb\u70e6\n\n\u7a0d\u52a0\u5206\u6790\u540e\u53d1\u73b0\uff0c\u4ece\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u4e0a\u4e00\u6b21\u6211\u662f\u4ece\u866b\u6d1e\u8d70\u6765\u7684\uff0c\u8fd9\u6b21\u6211\u53ea\u80fd\u6b65\u884c\uff1b\u5982\u679c\u6211\u662f\u6b65\u884c\u6765\u7684\uff0c\u8fd9\u6b21\u6211\u5fc5\u7136\u8d70\u866b\u6d1e\n\n\u56e0\u6b64\uff0c\u8981\u628a\u866b\u6d1e\u548c\u6b65\u884c\u5206\u5f00\u5b58\uff0c\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u70b9i,j\u5982\u679c\u5176y\u5750\u6807\u76f8\u7b49\u5219\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u7136\u540e\u679a\u4e3e\u866b\u6d1e\u7684\u5339\u914d\u60c5\u51b5\uff0c\u6700\u540e\u5728\u679a\u4e3e\u5b8c\u6210\u540e\u8fdb\u884c\u5224\u73af\uff0c\u5982\u4e0b\uff1a\n\n\u4ee4to[i]\u4e3a\u6b65\u884c\u5230\u7684\u70b9\uff0ccon[i]\u4e3ai\u7684\u866b\u6d1e\uff0c\u5219\u4f4d\u4e8ei\uff0c\u8981\u5148\u8d70\u5230to[i]\uff0c\u518d\u8d70\u5411to[i]\u7684\u866b\u6d1e\uff0c\u5373i = con[to[i]],\u8bb0\u5f55instack\u5224\u73af\u5373\u53ef\n\n\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u679c\u6709\u591a\u4e2a\u70b9\u7684y\u90fd\u76f8\u540c\uff0c\u8fd9\u65f6\u662f\u4e0d\u80fd\u76f2\u76ee\u8fde\u8fb9\u7684\n\n\u56e0\u6b64\uff0c\u5c06\u70b9\u6309y\u5750\u6807\u6392\u5e8f\uff0cy\u76f8\u540c\u65f6\u6309x\u6392\u5e8f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9i\uff0c\u5982\u679ci\u548ci +\uff11\u7684\uff59\u76f8\u540c\uff0c\u5219\u5728i\u548ci + 1\u95f4\u8fde\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\u4f8b\u5982\u6700\u5c0f\u548c\u7b2c\u4e09\u5c0f\u7684\u70b9\u95f4\u8fde\u8fb9\u7684\u60c5\u51b5\uff08\u800c\u8fd9\u672c\u6765\u662f\u4e0d\u53ef\u80fd\u7684\uff09\n\n\u4ee5\u4e0a\uff0c\u5c31\u505a\u51fa\u4e86\u8fd9\u9053\u9898\n```\n\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ntypedef long long ll;\ninline ll read()\n{\n  ll ans = 0,op = 1;\n  char ch = getchar();\n  while(ch < '0' || ch > '9')\n    {\n      if(ch == '-') op = -1;\n      ch = getchar();\n    }\n  while(ch >= '0' && ch <= '9')\n    {\n      (ans *= 10) += ch - '0';\n      ch = getchar();\n    }\n  return ans * op;\n}\nint n;\nstruct node\n{\n  ll x,y;\n}a[20];\nbool cmp(const node &a,const node &b)\n{\n  return a.y < b.y || (a.y == b.y && a.x < b.x);\n}\nint con[101],to[101];\nint ans = 0;\nbool vis[1001];\nbool instack[1001];\nbool flag = 0;\nbool dfs_cy(int u)\n{\n  while(to[u])\n    {\n      if(instack[u]) return 1;\n      instack[u] = 1;\n      u = con[to[u]];\n    }\n  return 0;\n}\nvoid dfs(int k)\n{\n  if(k > n)\n    {\n      flag = 0;\n      for(int i = 1;i <= n && !flag;i++) memset(instack,0,sizeof(instack)),flag |= dfs_cy(i);\n      ans += flag;\n    }\n  if(con[k]) dfs(k + 1);\n  else\n    {\n  for(int i = k + 1;i <= n;i++)\n    {\n    if(!con[i])\n      {\n    con[i] = k,con[k] = i;\n    dfs(k + 1);\n    con[i] = con[k] = 0;\n      }\n    }\n    }\n}\nbool ok[101][101];\nint main()\n{\n  n = read();\n  for(int i = 1;i <= n;i++) a[i].x = read(),a[i].y = read();\n  sort(a + 1,a + 1 + n,cmp);\n  for(int i = 1;i <= n;i++) if(a[i].y == a[i + 1].y) to[i] = i + 1;\n  //for(int i = 1;i <= n;i++) printf(\"%d \",to[i]);\n  //cout << endl;\n  dfs(1);\n  printf(\"%d\",ans);\n}\n```",
        "postTime": 1542419070,
        "uid": 86721,
        "name": "L_M_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u6211\u53ea\u4f1a\u7528\u641c\u7d22\uff0c\u7136\u800c\u6211\u7684\u8111\u5b50\u5e76\u4e0d\u592a\u597d\u4f7f\u3002\u3002\u3002\u6240\u4ee5\u6709\u51e0\u4e2a\u5730\u65b9\uff0c\u5361\u4e86\u534a\u5929\u3002\u3002\u3002\n\n1.\u53bb\u91cd\u3002\u679a\u4e3e\u65f6\uff0c\u9996\u5148\u8981\u8ba9\u5bf9\u5e94\u5173\u7cfb\u4e0d\u91cd\u590d\uff0c\u5176\u6b21\u987a\u5e8f\u91cd\u590d\u7684\u8bdd\uff0c\u901a\u8fc7\u5927\u5c0f\u987a\u5e8f\u5224\u65ad\u5c31\u884c\u4e86\u3002\n\n2.\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u5e76\u4e0d\u610f\u5473\u7740\u4e0b\u4e00\u6b21\u6765\u5230\u5b83\u65f6\u5c31\u9677\u5165\u4e86\u6b7b\u5faa\u73af\u3002\u3002\u6709\u53ef\u80fd\u5de6\u8fdb\u53f3\u51fa\u3002\u56e0\u6b64\uff0c\u7ecf\u8fc7\u65f6\u8981\u6709\u4e24\u4e2a\u65b9\u5411\uff0c\u4e00\u4e2a\u5224\u5de6\uff0c\u4e00\u4e2a\u5224\u53f3\u3002\u7136\u540e\u3002\u3002dfs\u5c31\u884c\u4e86\u3002\n\n\u5728\u6b64\u732e\u4e0aC\u5f0fC++\u4ee3\u7801\uff1a\n\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint a[20],b[20],bj[20],dy[20],i,c,sum;//a\u4e3a\u6a2a\u5750\u6807\uff0cb\u4e3a\u7eb5\u5750\u6807,bj\u8bb0\u5f55\u5165\u6808,dy\u8bb0\u5f55\u5bf9\u5e94\u5173\u7cfb;\nint tj=2;//\u7edf\u8ba1\u5b58\u5165\u4e86\u591a\u5c11\u4e2a\u6d1e,\u521d\u59cb\u503c\u8d4b\u503c\u4e3a2\u662f\u4e3a\u4e86\u9632\u6b62\u8d8a\u754c(bb\u8d8a\u754c)\nint bh[20];//\u8bb0\u5f55\u8fd9\u4e2a\u6d1e\u53f3\u8fb9\u7684\u4e0b\u4e00\u4e2a\u6d1e\uff0c\u65b9\u4fbf\u8fd0\u7b97\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u8d4b\u503c\u4e3a-1\nint bn[20][2];//\u8bb0\u5f55\u8fd9\u4e2a\u6d1e\u6709\u6ca1\u6709\u88ab\u8fdb\u8fc7\uff0c\u7528\u6765\u5224\u65ad\u65e0\u9650\u5faa\u73af;\nint min1;\nint on;//\u8f85\u52a9bh\u8bb0\u5f55\u5bf9\u5e94\u5173\u7cfb\nint now;//\u8bb0\u5f55\u76ee\u524d\u5728\u54ea\u4e2a\u6d1e\nint bb[20];//\u8bb0\u5f55\u5165\u961f\u60c5\u51b5\uff0c\u9632\u6b62\u91cd\u590d\u3002\nint f;//\u6ca1\u5375\u7528\n\nint pd(){\n\tfor(int i=1;i<=c;i++)\n\t{\n\t\tbn[i][0]=1;\n\t\tnow=i;\n\t\twhile(1)\n\t\t{\n\t\t\tnow=dy[now];\n\t\t\t\n\t\t\tif(bn[now][1]==1) return 1;\n\n\t\t\tbn[now][1]=1;\n\t\t\tif(bh[now]==-1) {for(int ww=1;ww<=c;ww++) {bn[ww][1]=0; bn[ww][0]=0;}break;}\n\n\t\t\tnow=bh[now];\n\t\t\t\n\t\t\tif(bn[now][0]==1) return 1;\n\n\t\t\tbn[now][0]=1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint search(int n){\n\t\n\tfor(int o=1;o<=c;o++)\n\t{\n\t\tif(bj[o]!=1 && o>n && (bb[tj/2-1]<n))\n\t\t{\n\t\t\tbj[o]=1;\n\t\t\tdy[o]=n;\n\t\t\tdy[n]=o;\n\t\t\tbb[tj/2]=n;\n\t\t\ttj+=2;\n\t\t\t\n\t\t\tif(tj==c+2)\n\t\t\t{\n\t\t\t\tsum+=pd();\n\t\t\t\tfor(int om=1;om<=c;om++)\n\t\t\t\t{\n\t\t\t\t\tbn[om][0]=0;\n\t\t\t\t\tbn[om][1]=0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(int p=1;p<=c;p++)//\u679a\u4e3e\u5373\u5c06\u5230\u6765\u7684\u4e0b\u4e00\u7ec4\u6d1e\n\t\t\tif(bj[p]!=1)\n\t\t\t{\n\t\t\t\tbj[p]=1;\n\t\t\t\tsearch(p);\n\t\t\t\tbj[p]=0;\n\t\t\t}\n\t\t\tbj[o]=0;\n\t\t\tdy[o]=0;\n\t\t\tdy[n]=0;\n\t\t\ttj-=2;//\u56de\u6eaf\n\t\t}\n\t}\n}\n\nint main(){\n\tcin>>c;\n\tfor(i=1;i<=c;i++)\n\tcin>>a[i]>>b[i];\n\n\tfor(int h=1;h<=c;h++)\n\t{\n\t\ton=0;\n\t\tmin1=2100000000;\n\t\tfor(int h1=1;h1<=c;h1++)\n\t\t{\n\t\t\tif(b[h]==b[h1] && a[h]<a[h1] && a[h1]-a[h]<min1)\n\t\t\t{\n\t\t\t\tmin1=a[h1]-a[h];\n\t\t\t\ton=h1;\n\t\t\t}\n\t\t}\n\t\tbh[h]=on;\n\t}//\u627e\u51fa\u6bcf\u4e2a\u866b\u6d1e\u6700\u9760\u8fd1\u5b83\u53f3\u8fb9\u7684\u6d1e\u65b9\u4fbf\u8fd0\u7b97\n\t\n\tfor(int h=1;h<=c;h++)\n\t{\n\t\tif(bh[h]==0) bh[h]=-1;\n\t}\n\n\tbj[1]=1;//\u4ece1\u5f00\u59cb\u627e\n\tsearch(1);\n\tcout<<sum;\n\treturn 0;\n}\n```\n",
        "postTime": 1551620232,
        "uid": 55357,
        "name": "Thaumaturge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u5148dfs\u8fde\u63a5\u6240\u6709\u7684\u866b\u6d1e\uff0c\u518d\u5224\u65ad\uff0c\u8bb0\u5f55\u5e76\u8f93\u51fa\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;\nstruct node//\u866b\u6d1e\u7684\u5750\u6807 \n{\n    int x,y;\n}a[21];\nint n,ans=0;\nint f[21];\ninline int cmp(const void *xx,const void *yy)//\u6392\u5e8f\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u8fde\u63a5\u866b\u6d1e\u4e86\uff0cpd\u51fd\u6570\u4e2d\u663e\u793a\u51fa\u6765 \n{\n    node x=*(node*)xx;\n    node y=*(node*)yy;\n    if(x.y<y.y) return 1;\n    if(x.y==y.y && x.x<y.x) return 1;\n    return 0;\n}\nbool pd(int k,int t,int bk,int c)//k\u8868\u793a\u6b65\u6570\uff0ct\u8868\u793a\u5f53\u524d\u866b\u6d1e\u7684\u7f16\u53f7\uff0cbk\u8868\u793a\u521d\u59cb\u866b\u6d1e\uff0cc\u8868\u793a\u662f\u5426\u80fd\u5229\u7528\u8fd9\u4e2a\u866b\u6d1e\u6765\u4f20\u9001 \n{\n    if(k!=1 && t==bk && c==0)//\u5982\u679c\u9677\u5165\u5faa\u73af\uff0c\u5c31\u8fd4\u8fd8\u53ef\u4ee5 \n    {\n        return true;\n    }\n    if(c==0)//\u5982\u679c\u4e0d\u53ef\u4ee5\u7528\u866b\u6d1e\u4f20\u9001\uff0c\u5c31\u8981\u6b65\u884c\u5230\u4e0b\u4e00\u4e2a \n    {\n        if(a[t].y==a[t+1].y)//\u5982\u679c\u80fd\u8d70\u5230\u7684\u8bdd \n        {\n            return pd(k+1,t+1,bk,1);//\u5f80\u4e0b\u6df1\u641c\uff0c\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u4f20\u9001 \n        }\n        else return false;//\u4e0d\u7136\u5c31\u4e0d\u80fd\u9677\u5165\u5faa\u73af \n    }\n    if(c==1)//\u5982\u679c\u53ef\u4ee5\u5e8a\u9001\u7684\u8bdd \n    {\n        return pd(k+1,f[t],bk,0);//\u4e0b\u4e00\u4e2a\u4e0d\u80fd\u4f20\u9001 \n    }\n}\n\nvoid dfs(int k)//dfs\u6765\u627e\u51fa\u6240\u6709\u7684\u73af \n{\n    if(k==n+1)//\u5982\u679c\u627e\u5b8c\u4e86\u6240\u6709\u7684\u73af \n    {\n        for(int i=1;i<=n;i++)//\u5224\u65ad\u4e00\u4e0b \n        {\n        \tif(pd(1,i,i,0)==true)//\u5982\u679c\u53ef\u4ee5 \n        \t{\n        \t\tans++;break;//\u8bb0\u5f55\uff0c\u5e76\u9000\u51fa \n        \t}\n        }\n        return;//\u4e0d\u7ba1\u4e0b\u9762\u7684\u51fd\u6570\u4e86 \n    }\n    if(f[k]==0)//\u5982\u679c\u8fd8\u6ca1\u6709\u88ab\u627e\u8fc7 \n    {\n        for(int i=k+1;i<=n;i++)//\u5f80\u4e0b\u641c\u7d22 \n        {\n            if(f[i]==0)\n            {\n                f[k]=i;f[i]=k;\n                dfs(k+1);\n                f[k]=0;f[i]=0;//\u56de\u6eaf \n            }\n        }\n    }\n    else \n    {\n    \tdfs(k+1);//\u88ab\u627e\u8fc7\u5c31\u4e0d\u7ba1\u4e86 \n    }\n}\nint main()\n{\n    int i;\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) scanf(\"%d%d\",&a[i].x,&a[i].y);//\u8f93\u5165\u5750\u6807 \n    qsort(a+1,n,sizeof(node),cmp);dfs(1);//\u6392\u5e8f\uff0c\u5e76dfs \n    printf(\"%d\\n\",ans);//\u6700\u540e\u8f93\u51fa\u5c31\u597d\u4e86 \n    return 0;\n}\n```",
        "postTime": 1524835855,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "\u7a77\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\uff0c\u5224\u65ad\u6709\u6ca1\u6709\u73af\u3002\n\n\u7a77\u4e3e\u65b9\u6cd5\uff1a\u7528DFS\u4f5cn\u5168\u6392\u5217\uff0c\u5176\u4e2d1\u4e0e2\u8fde\u63a5\uff0c3\u4e0e4\u8fde\u63a5\uff0c...\uff08n-1\uff09\u4e0en\u8fde\u63a5\u3002\u89c4\u5b9a\uff1a\u5bf9\u4efb\u610f\u76842k+1\u9879\uff0c\u4e0d\u5b58\u5728\u4efb\u610f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u4f7f\u5f97\u8be5\u6570\u5c0f\u4e8e2k+1\u9879\u7684\u6570\u4e14\u4f4d\u7f6e\u57282k+1\u540e\u9762\u3002\u53ef\u8bc1\uff1a\u6309\u7167\u8be5\u8981\u6c42\u8fdb\u884c\u5168\u6392\u5217\u7684\u7ed3\u679c\u662f\u4e0d\u91cd\u590d\u4e0d\u9057\u6f0f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nbool go( int a , int b )//\u5224\u65ad\u662f\u5426\u6709\u73af\n{\n    bool went[13] = { 0 };\n    while( 1 )\n    {\n        int minnum = 0 , minx = 2147483647;\n        for( int i = 1 ; i <= n ; i++ )\n            if( y[i] == b && x[i] > a && x[i] < minx )\n            {\n                minx = x[i];\n                minnum = i;\n            }\n//\u8ba1\u7b97\u4ece\uff08a,b\uff09\u5f00\u59cb\u8d70\u4f1a\u8fdb\u5165\u54ea\u4e2a\u866b\u6d1e\uff0c\u82e5\u4e0d\u4f1a\u8fdb\u5165\u5219\u4e3a0\n        if( minnum == 0 )\n            return 0;\n        if( went[minnum] )\n            return 1;\n        went[minnum] = 1;\n//\u6ce8\u610f\uff1a\u4e0d\u80fd\u6807\u8bb0\u7ec8\u70b9\uff0c\u53ef\u4ee5\u4e3e\u51fa\u53cd\u4f8b\n        int i;\n        for( i = 1 ; i <= n ; i++ )\n            if( com[i] == minnum )\n                break;\n        if( i % 2 == 0 )\n        {\n            a = x[com[i - 1]];\n            b = y[com[i - 1]];\n        }\n        else\n        {\n            a = x[com[i + 1]];\n            b = y[com[i + 1]];\n        }\n    }\n}\n\nint ans = 0;\nbool used[13] = { 0 };\nvoid dfs( int now )\n{\n    if( now > n )\n    {\n/*\u53ea\u9700\u8ba8\u8bba\u4ece\u67d0\u4e00\u4e2a\u866b\u6d1e\u51fa\u53d1\u7684\u60c5\u51b5\uff1a\u82e5\u4ece(m,n)\u51fa\u53d1\u65e0\u6cd5\u8fdb\u5165\u866b\u6d1e\uff0c\u5219\u65e0\u9700\u8003\u8651\uff1b\u82e5\u4ece(m,n)\u51fa\u53d1\u8fdb\u5165a\u53f7\u866b\u6d1e\uff0c\u4e14a\u53f7\u866b\u6d1e\u4e0eb\u53f7\u866b\u6d1e\u76f8\u8fde\uff0c\u5219\u4ece(m,n)\u51fa\u53d1\u7b49\u4ef7\u4e8e\u4eceb\u53f7\u866b\u6d1e\u51fa\u53d1\u3002*/\n        for( int i = 1 ; i <= n ; i++ )\n            if( go( x[i] , y[i] ) )\n            {\n                ans++;\n                break;\n            }\n        return;\n    }\n    if( now % 2 == 1 )\n        for( int i = 1 ; i <= n ; i++ )\n            if( !used[i] )\n            {\n                com[now] = i;\n                used[i] = 1;\n                dfs( now + 1 );\n                used[i] = 0;\n                return;\n//\u7b5b\u53bb\u91cd\u590d\u60c5\u51b5\uff08\u5982\uff1a1 2 3 4\uff1b1 2 4 3\uff09\n            }\n    for( int i = 1 ; i <= n ; i++ )\n        if( !used[i] )\n        {\n            com[now] = i;\n            used[i] = 1;\n            dfs( now + 1 );\n            used[i] = 0;\n        }\n}\n//\u4e3b\u51fd\u6570\u7565\n```",
        "postTime": 1514648890,
        "uid": 61068,
        "name": "01190220csl",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6bcf\u4e24\u4e2a\u866b\u6d1e\u90fd\u53ef\u4ee5\u914d\u5bf9\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u53ef\u4ee5\u5728\u6709\u9650\u7684\u866b\u6d1e\u4e24\u4e24\u914d\u5bf9\u65b9\u6848\u4e2d\u8fdb\u884c\u641c\u7d22\uff0c\u7136\u540e\u6bcf\u79cd\u65b9\u6848\u5224\u65ad\u662f\u5426\u9677\u5165\u6b7b\u5faa\u73af\uff0c\u5177\u4f53\u7684\u770b\u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint n;    //n\u4e2a\u866b\u6d1e\nint ans=0;    //\u7ed3\u679c\nint b[13]= {0};    //\u8bb0\u5f55\u914d\u5bf9\u60c5\u51b5\nstruct A {    //\u8bb0\u5f55\u70b9\u7684\u5750\u6807\n    int x;\n    int y;\n} a[13];\nint my(const A &i,const A &j) {    //\u6392\u5e8f\u7684\u51fd\u6570\n    if(i.y<j.y)\n        return 1;\n    if(i.y==j.y) {\n        if(i.x<j.x)\n            return 1;\n    }\n    return 0;\n}\nint doit(int num,int x,int begin,int into) {//\u6a21\u62df\u725b\u8d70\u52a8\u7684\u60c5\u51b5,into\u8868\u793a\u5230\u8fbe\u8be5\u70b9\u7684\u65b9\u5f0f\uff0c0\u8868\u793a\u5728\u8be5\u70b9\u8d70\u51fa\u866b\u6d1e\uff0c1\u8868\u793a\u8d70\u5230\u8be5\u70b9\n    if(num!=1&&x==begin&&into==0) {    //\u5982\u679c\u4ece\u8d77\u59cb\u70b9\u8d70\u51fa\u6765\uff0c\u8bf4\u660e\u5faa\u73af\u4e86\n        return 1;\n    }\n    if(into==0) {    //\u82e5\u5728\u8be5\u70b9\u8d70\u51fa\u866b\u6d1e\uff0c\u5c31\u5411\u524d\u8d70\n        if(a[x].y==a[x+1].y) {    //\u5982\u679c\u524d\u9762\u6709\u866b\u6d1e\uff0c\u5c31\u8d70\u8fdb\u53bb\n            return doit(num+1,x+1,begin,1);\n        } else {    //\u5982\u679c\u524d\u9762\u6ca1\u6709\u866b\u6d1e\uff0c\u5c31\u8bf4\u660e\u5faa\u73af\u7ed3\u675f\n            return 0;\n        }\n    }\n    if(into==1) {    //\u82e5\u662f\u8d70\u5230\u8be5\u70b9\uff0c\u5c31\u8d70\u8fdb\u53bb\n        return doit(num+1,b[x],begin,0);\n    }\n}\nint judge() {    //\u5224\u65ad\n    int i,j;\n    for(i=1; i<=n; i++) {    //\u4ece\u7b2ci\u4e2a\u70b9\u5f00\u59cb\u8d70\n        if(doit(1,i,i,0)==1) {\n            return 1;\n        }\n    }\n    return 0;\n}\nvoid mpair(int x) {    //\u914d\u5bf9\n    int i,j;\n    if(x==n+1) {    //\u82e5\u5df2\u7ecf\u914d\u5bf9\u5b8c\u6210\n        if(judge()==1) {    //\u5224\u65ad\u662f\u5426\u9677\u5165\u6b7b\u5faa\u73af\n            ans++;\n        }\n        return ;\n    }\n    if(b[x]==0) {    //\u5982\u679c\u5f53\u524d\u866b\u6d1e\u6682\u4e3a\u914d\u5bf9\uff0c\u5c31\u4e3a\u5176\u914d\u5bf9\n        for(i=x+1; i<=n; i++) {\n            if(b[i]==0) {\n                b[x]=i;\n                b[i]=x;\n                mpair(x+1);\n                b[x]=0;\n                b[i]=0;\n            }\n        }\n    } else {    //\u5982\u679c\u5f53\u524d\u866b\u6d1e\u5df2\u88ab\u914d\u5bf9\uff0c\u5c31\u7ee7\u7eed\u627e\u4e0b\u4e00\u4e2a\u866b\u6d1e\n        mpair(x+1);\n    }\n    return ;\n}\nint main() {\n    int i,j,k;\n    cin>>n;\n    for(i=1; i<=n; i++) {\n        cin>>a[i].x>>a[i].y;\n    }\n    for(;;);//\u9632\u6284\u9898\u89e3\n    sort(a+1,a+n+1,my);    //\u6392\u5e8f\uff0c\u65b9\u4fbf\u67e5\u627e\u540c\u4e00\u884c\u7684\u866b\u6d1e\n    mpair(1);    //\u4ece\u7b2c\u4e00\u4e2a\u866b\u6d1e\u5f00\u59cb\u914d\u5bf9\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1503015594,
        "uid": 52232,
        "name": "Kewth",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "/\\*\n\u770b\u4e86\u8fd9\u4e48\u591a\u56fe\u8bba\u505a\u6cd5\uff0c\u90a3\u6211\u5c31\u79bb\u6563\u5316+dfs\u8d70\u4e00\u6ce2\u5427.\u4ee3\u7801\u2193\n\n\\*/\n-------------------\n\n\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\u2018\u4e07\u80fd\u5934\u6587\u4ef6 \nusing namespace std;//\u6d41\u64cd\u4f5c\u547d\u540d\u7a7a\u95f4 \n// **line\u662f\u79bb\u6563\u7684\u884c\u7684\u4f20\u9001\u95e8\uff08\u866b\u6d1e\uff09\u4e2a\u6570**\n// **they\u5bf9\u5e94\u79bb\u6563\u540e\u7684\u4f20\u9001\u95e8\u5750\u6807**\n// **to\u662f\u5bf9\u5e94\u79bb\u6563\u540e\u7684\u6307\u5411\u6307\u9488\uff08dfs\u65f6\u786e\u8ba4\uff09** \n// **height\u6807\u8bc6\u79bb\u6563\u524d\u7684y\u8f74\u9ad8\u5ea6**\n// a\u662f\u603b\u91cf\uff0cgeted\u662f\u5224\u91cd\u6807\u8bc6,all\u662f\u603b\u5faa\u73af\u6570\uff0cpoint\u662f\u4e34\u65f6\u6307\u9488 \nint line[12],they[12][2],to[12];\nint height[12];int a;bool geted[12];int all,point;\n//\u68c0\u6d4b\u8fde\u63a5\u65b9\u5f0f\u662f\u5426\u6709\u5faa\u73af \nvoid check(){\n    for(int i=0;i<=a-1;i++){//\u904d\u5386\u6bcf\u4e2a\u70b9\u4e3a\u8d77\u59cb \n        int now=i;for(int j=0;j<=11;j++)geted[j]=false;//\u8bb0\u5f55\u8d77\u59cb\u4f4d\u7f6e//\u6e05\u7a7a\u6807\u8bc6 \n        while(1){//\u4e0d\u65ad\u5faa\u73af \n            if(geted[now]){all++;return;}//\u5982\u679c\u8def\u91cd\u590d\u5219\u6709\u5faa\u73af\uff0c\u52a01\uff0c\u8df3\u51fa\u5bfb\u627e\u4e0b\u4e00\u5339\u914d \n            geted[now]=true;//\u8bb0\u5f55\u6765\u8fc7\u7684\u70b9 \n            if(line[they[now][0]]==they[now][1])break;//\u5982\u679cX\u8f74\u4e0a\u65e0\u4e0b\u4e00\u70b9\u5219\u5224\u4e0b\u4e00\u51fa\u53d1\u70b9 \n            else now=to[now+1];//\u5982\u679c\u6709\u4e0b\u4e00\u70b9\u5219\u5230\u8df3\u4e0b\u4e00\u70b9\u7684\u5bf9\u5e94\u70b9//\u4e0b\u4e00\u70b9\u4e0d\u6807\u8bb0 \n        }\n    }\n}\n//dfs\u5339\u914d \nvoid dfs(int index){\n    if(index==a/2){//\u82e5index\u8fbe\u5230\u603b\u4f20\u9001\u70b9\u76841/2\uff0c\u5219\u6709\u552f\u4e00\u5339\u914d \n        int i=0;while(to[i]!=-1)i++;//\u5faa\u73af\u627e\u5230\u552f\u4e00\u5339\u914d \n        int j=i+1;while(to[j]!=-1)j++;\n        to[i]=j;to[j]=i;//\u8d4b\u503c\u5230\u8fde\u63a5\u6570\u7ec4 \n        check();//\u68c0\u6d4b\u5339\u914d \n        to[i]=-1;to[j]=-1;//\u6e05\u9664\u5339\u914d \n    }else{\n        int i=0;while(to[i]!=-1)i++;//\u5bfb\u627e\u6240\u6709\u5339\u914d \n        for(int j=i+1;j<=a-1;j++){\n            if(to[j]==-1){\n                to[i]=j;to[j]=i;\n                dfs(index+1);//dfs\u5bfb\u627e\u4e0b\u4e00\u5339\u914d \n                to[i]=-1;to[j]=-1;\n            }\n        }\n    }\n    return;\n}\nint main(){\n    cin>>a;int tmp=-1;//\u8f93\u5165//\u5b9a\u4e49\u4e34\u65f6\u53d8\u91cf \n    for(int i=0;i<=a-1;i++){\n        int m,n;cin>>m>>n;//\u8f93\u5165//m\u5176\u5b9e\u6ca1\u6709\u7528\uff0c\u79bb\u6563\u5316\u540e\u65e0\u89c6\u987a\u5e8f\u7684// \n        for(int j=0;j<=point-1;j++){\n            if(height[j]==n){line[j]++;goto l;}//\u5982\u679c\u6b64\u9ad8\u5ea6\u5df2\u5b58\u5728\uff0c\u5219\u6b64\u9ad8\u5ea6\u7684\u961f\u5217\u52a01 \n        }\n        height[point]=n;line[point]++;point++;//\u5426\u5219\u52a01\u4e2a\u79bb\u6563\u7684\u961f\u5217 \n        l:continue;\n    }\n    for(int i=0;i<=a-1;i++)to[i]=-1;//\u6e05\u9664\u8fde\u63a5\u6807\u8bc6 \n    for(int i=0;i<=point-1;i++){\n        for(int j=1;j<=line[i];j++){\n            tmp++;they[tmp][0]=i;they[tmp][1]=j;//\u987a\u5e8f\u5b58\u5165\u70b9\u7684\u79bb\u6563\u5750\u6807 \n        }\n    }\n    dfs(1);//dfs \n    cout<<all;//\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1502953538,
        "uid": 52934,
        "name": "Bzy_temp",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    },
    {
        "content": "\u6ca1\u6709Pascal\u9898\u89e3\u54e6\uff0c\u6765\u4e00\u6ce2\u798f\u5229\u3002\n\n\u9996\u5148\u5339\u914d\u866b\u6d1e\uff0c\u679a\u4e3e\u72b6\u6001\uff0c\u7136\u540e\u518d\u68c0\u67e5\u866b\u6d1e\u662f\u5426\u8fde\u901a\u5373\u53ef\u3002\n\n\u4e00\u4e2adfs\u548c\u5224\u65ad\u5c31\u80fd\u5b8c\u6210\u5566\uff08\u6bd5\u7adf\u6570\u636e\u624d12\uff09\u3002\n\n\u5177\u4f53\u7684\u89c1\u4ee3\u7801\uff1a\n\n```cpp\nprogram p1444;\n  var i,j,n,total:longint;\n      x,y,partner,next_on_right:array[0..13]of longint;\nfunction cycle_exists:boolean;\n  var start,pos,count:longint;\nbegin\n  for start:=1 to n do\n  begin\n    pos:=start;\n    for count:=0 to n-1 do\n    begin\n      pos:=next_on_right[pos];//\u5148\u5411\u53f3\u8d70\u3002\n      pos:=partner[pos];//\u518d\u8fdb\u866b\u6d1e\u53e6\u4e00\u7aef\u3002\n    end;\n    if pos<>0 then exit(true);\u5982\u679c\u4e00\u76f4\u8d70\u4e0b\u53bb\u90fd\u6709\u866b\u6d1e\u90a3\u4e48\u5c31\u8fdb\u5165\u5faa\u73af\uff0c\u52a0\u4e00\u79cd\u53ef\u80fd\u3002\n  end;\n  exit(false);\nend;\nprocedure solve;\n  var i,j:longint;\nbegin\n  for i:=1 to n+1 do\n  if partner[i]=0 then break;\n  if (i>n) then\n  if cycle_exists=true then inc(total);//\u5339\u914d\u5b8c\u68c0\u9a8c\u8fd9\u79cd\u5339\u914d\u662f\u5426\u53ef\u884c\u3002\n  for j:=i+1 to n do\n  if partner[j]=0 then\n  begin//\u5148\u4efb\u610f\u5339\u914d\u4e24\u4e2a\u866b\u6d1e\u3002\n    partner[i]:=j;\n    partner[j]:=i;\n    solve;\n    partner[i]:=0;\n    partner[j]:=0;\n  end;\nend;\nbegin\n  readln(n);\n  for i:=1 to n do\n  readln(x[i],y[i]);\n  for i:=1 to n do\n  for j:=1 to n do\n  if (x[j]>x[i]) and (y[i]=y[j]) then\n  if (next_on_right[i]=0) or (x[j]-x[i]<x[next_on_right[i]]-x[i]) then\n  next_on_right[i]:=j;//\u8bb0\u5f55i\u53f3\u8fb9\u7684\u7b2c\u4e00\u4e2a\u866b\u6d1ej\uff0c\u82e5i\u53f3\u8fb9\u65e0\u866b\u6d1e\u5c31\u662f0\u3002\n  total:=0;\n  solve;\n  writeln(total);\nend.\n```",
        "postTime": 1493787338,
        "uid": 19540,
        "name": "zk1431043937",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1444 \u3010[USACO1.3]\u866b\u6d1ewormhole\u3011"
    }
]