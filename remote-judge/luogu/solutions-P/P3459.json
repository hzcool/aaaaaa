[
    {
        "content": "### Solution:\n\n\u3000\u3000\u672c\u9898\u7ffb\u8bd1\u6709\u6bd2\u3002\u6211\u89e3\u91ca\u4e00\u6ce2\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u68f5\u6839\u8282\u70b9\u4e3a$1$\uff0c$n$\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u539f\u672c\u6bcf\u6761\u8fb9\u957f\u5ea6\u4e3a$1$\uff0c\u6709$m+n-1$\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u4fee\u6539\u4e00\u6761\u8fb9\u4f7f\u5f97\u8fb9\u6743\u4e3a$0$\uff0c\u6216\u8005\u67e5\u8be2$1$\u5230\u67d0\u4e2a\u70b9\u7684\u8ddd\u79bb\uff08\u8fb9\u6743\u548c\uff09\u3002\n  \n  $\\quad\\;\\;$**\u6838\u5fc3\u601d\u8def\uff1a$dfs$\u5e8f+\u79bb\u6563+\u7ebf\u6bb5\u6811**\n\n\u3000\u3000\u4e0d\u96be\u53d1\u73b0\uff0c\u6bcf\u6b21\u4fee\u6539\u4e00\u6761\u8fb9\uff08\u5047\u8bbe\u662f$u->v$\uff09\uff0c\u5230\u6839\u8282\u70b9\u8ddd\u79bb\u4f1a\u51cf\u5c11\u7684\u70b9\u5b9e\u9645\u4e0a\u5c31\u662f\u4ee5$v$\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e0a\u7684\u6240\u6709\u7684\u70b9\u3002\n\n\u3000\u3000\u4e8e\u662f\u6211\u4eec\u5148\u6c42\u51fa$dfs$\u5e8f\uff0c\u5f97\u5230\u6bcf\u68f5\u5b50\u6811\uff0c\u5e76\u7edf\u8ba1\u6bcf\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\u3002\n\n\u3000\u3000\u7136\u540e\u5bf9$dfs$\u5e8f\u4ece\u524d\u5f80\u540e\u626b\uff0c\u79bb\u6563\u4e00\u4e0b\uff0c\u8fd9\u6837\u4fdd\u8bc1\u79bb\u6563\u540e\u7684$dfs$\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u4f7f\u5f97\u5b50\u6811\u4e4b\u95f4\u4e0d\u4f1a\u6709\u4ea4\u96c6\uff0c\u4fbf\u53ef\u4ee5\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6240\u6709\u5b50\u6811\u7684\u4fe1\u606f\u3002\n\n\u3000\u3000\u90a3\u4e48\u6bcf\u6b21\u64cd\u4f5c\u65f6\uff0c\u5c31\u662f\u533a\u95f4\u4fee\u6539\u548c\u5355\u70b9\u67e5\u8be2\u4e86\uff0c\u6bcf\u6b21\u8f93\u51fa\u7684\u662f\u6240\u9700\u8282\u70b9\u5b50\u6811\u5927\u5c0f\u51cf\u53bb\u5355\u70b9\u67e5\u8be2\u7684\u503c\u3002\n\n$\\quad\\; \\;$\u6b22\u8fce\u6765\u8e29\u535a\u5ba2\uff1a[five20](http://www.cnblogs.com/five20/p/9045377.html)\uff08\u849f\u84bb\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u4e07\u5206\u611f\u8c22\uff01\uff09\n### \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define il inline\n#define lson l,m,rt<<1\n#define rson m+1,r,rt<<1|1\n#define For(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)\nusing namespace std;\nconst int N=250005;\nint n,dfn[N<<2],ct,cnt,h[N],to[N],net[N],dep[N],tot[N];\nint mp[N],add[N<<2],sum[N<<2],p,m;\nchar s[4];\nil int gi(){\n    int a=0;char x=getchar();\n    while(x<'0'||x>'9')x=getchar();\n    while(x>='0'&&x<='9')a=(a<<3)+(a<<1)+x-48,x=getchar();\n    return a;\n}\nil void addd(int u,int v){to[++cnt]=v,net[cnt]=h[u],h[u]=cnt;}\nil void dfs1(int x){\n    dfn[++ct]=x;tot[x]=1;\n    for(int i=h[x];i;i=net[i])dep[to[i]]=dep[x]+1,dfs1(to[i]),tot[x]+=tot[to[i]];\n    dfn[++ct]=x;\n}\nil void pushup(int rt){sum[rt]=sum[rt<<1]+sum[rt<<1|1];}\nil void pushdown(int rt,int k){\n    if(add[rt]){\n        add[rt<<1]+=add[rt];\n        add[rt<<1|1]+=add[rt];\n        sum[rt<<1]+=add[rt]*(k-(k>>1));\n        sum[rt<<1|1]+=add[rt]*(k>>1);\n        add[rt]=0;\n    }\n}\nil void update(int L,int R,int c,int l,int r,int rt){\n    if(L<=l&&R>=r){\n        add[rt]+=c;sum[rt]+=c*(r-l+1);\n        return;\n    }\n    pushdown(rt,r-l+1);\n    int m=l+r>>1;\n    if(L<=m)update(L,R,c,lson);\n    if(m<R)update(L,R,c,rson);\n    pushup(rt);\n}\nil int query(int L,int R,int l,int r,int rt){\n    if(L<=l&&R>=r)return sum[rt];\n    pushdown(rt,r-l+1);\n    int m=l+r>>1,ret=0;\n    if(L<=m)ret+=query(L,R,lson);\n    if(m<R)ret+=query(L,R,rson);\n    return ret;\n}\nint main(){\n    n=gi();\n    int u,v;\n    For(i,1,n-1)u=gi(),v=gi(),addd(u,v);\n    dfs1(1);\n    For(i,1,ct)\n        if(!mp[dfn[i]])mp[dfn[i]]=++p,dfn[i]=p;\n        else dfn[i]=mp[dfn[i]];\n    m=gi()+n-1;\n    while(m--){\n        scanf(\"%s\",s);\n        if(s[0]=='W'){\n            u=gi();\n            printf(\"%d\\n\",dep[u]-query(mp[u],mp[u],1,n,1));\n        }\n        else{\n            u=gi();v=gi();\n            if(u<v)swap(u,v);\n            update(mp[u],mp[u]+tot[u]-1,1,1,n,1);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1526445794,
        "uid": 44000,
        "name": "\u6d45\u8272\u8c03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "\n\u6837\u4f8b\u8bf4\u660e\uff1a\n\n![](http://www.lydsy.com/JudgeOnline/images/1103.jpg)\n\n\u7b97\u6cd5\uff1adfs\u5e8f+\u6811\u72b6\u6570\u7ec4\n\n\u5f88\u660e\u663e\uff0c\u9898\u76ee\u7ed9\u4e86\u6211\u4eec\u4e00\u9897\u6811(\u4ee51\u4e3a\u6839\u8282\u70b9\uff09\uff0c\u5e76\u5728\u6811\u4e0a\u8fdb\u884c\u4e86\u67e5\u8be2\u548c\u4fee\u6539\u64cd\u4f5c\u3002\u5bf9\u4e8eu->v\u8fd9\u4e00\u6761\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u7528v\u6765\u8868\u793a\u8fd9\u6761\u8def\u5f84\uff08\u5f53v\u4e3a1\u8868\u793a\u8be5\u8def\u5f84\u4e3a\u571f\u8def\uff0c0\u4e3a\u516c\u8def\uff09\u3002\u663e\u7136\uff0c\u5230X\u70b9\u7ecf\u8fc7\u571f\u8def\u7684\u6570\u91cf\uff0c\u5c31\u662f1->X\u7ecf\u8fc7\u70b9\u7684\u6743\u503c\n\u5f53X\u70b9\u88ab\u6539\u52a8\u65f6\uff0c\u5b83\u5f71\u54cd\u7684\u8303\u56f4\u662f\u4ee5\u5b83\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\n\n\u8fd9\u4e1c\u897f\u5f88\u660e\u663e\u53ef\u4ee5\u7528\u6811\u94fe\u5256\u5206\u505a\uff0c\u4f46\u8fd9\u91cc\u6211\u4eec\u8bb2\u7684\u662f\u5229\u7528dfs\u5e8f\u7684\u65b9\u6cd5\n\nQ\uff1a\u4ec0\u4e48\u662fdfs\u5e8f\uff1f\uff1f \nA\uff1a\u5c31\u662fdfs\u904d\u5386\u987a\u5e8f\u554a\uff0c\u6bd4\u5982\u6837\u4f8b\u7684dfs\u5e8f\u5c31\u662f\uff1a1 4 5 2 3\n\n\u90a3\u4e48\uff0c\u600e\u4e48\u4f7f\u7528dfs\u5e8f\u5462\uff1f \n\u4e0d\u96be\u53d1\u73b0dfs\u5e8f\u4e2d\uff0c \u6bcf\u4e00\u9897\u5b50\u6811\u90fd\u5206\u522b\u4f4d\u4e8e\u4e00\u4e2a\u533a\u95f4\u4e2d\uff0c\u6211\u4eec\u53ea\u8981\u8bb0\u4e0b\u533a\u95f4\u8303\u56f4\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u9898\u76ee\u4e2d\u5206\u679d\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u9898\u76ee\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210 \u533a\u95f4\u4fee\u6539+\u5355\u70b9\u67e5\u8be2 \u4e86\u3002 \n\u505a\u8fc7[\u6d1b\u8c37 P3368 \u3010\u6a21\u677f\u3011\u6811\u72b6\u6570\u7ec4 2](https://www.luogu.org/problemnew/show/P3368)\u7684\u4eba\u5e94\u8be5\u90fd\u77e5\u9053\uff0c\u8fd9\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\uff0c \u67e5\u8be2\u5c31\u662f\u7edf\u8ba1\u524d\u7f00\u548c\u3002 \n\n\u8fd9\u6837\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n[\u4ee3\u7801\u94fe\u63a5](http://blog.csdn.net/qq_36288976/article/details/79364299)\n",
        "postTime": 1519471891,
        "uid": 8952,
        "name": "M_se\u0430",
        "ccfLevel": 0,
        "title": "\u6d1b\u8c37P3459 [POI2007]MEG-Megalopolis [POI2007]\u5927\u90fd\u5e02meg"
    },
    {
        "content": "dfn\u5e8f\u4e0a\u7684\u524d\u7f00\u548c\uff0c\u8fd9\u6837\u7684\u601d\u8def\u771f\u662f\u53c8\u7384\u5b66\u53c8\u4ee4\u6211\u60ca\u53f9\uff08 ~~\u6211\u592a\u5f31\u5566\uff0c\u6839\u672c\u60f3\u4e0d\u5230\uff09~~Orz\u5404\u8defDalao\n\n\u4eca\u5929\u8003\u4e86\u8fd9\u9053\u9898\uff0c\u6570\u636e\u8303\u56f4\u8fd8\u6bd4\u6d1b\u8c37\u7684\u5c0f\uff0c\u53ea\u6709$10^5$\uff08\u5bb3\u6211\u590d\u5236\u7c98\u8d34\u4e00\u6ce2\u4ea4\u4e0a\u53bbRE\uff09\uff0c\u8ba9\u6211\u5f88\u653e\u5fc3\u5730\u53bb\u60f3\u6811\u5256\u4e86\u3002\n\n\u7136\u800c\u5c34\u5c2c\u7684\u662f\u6211\u4e0d\u4f1a\u6811\u5256\uff0c\u5374\u5148\u5b66\u4e86LCT\uff08~~\u518d\u6b21\u66b4\u9732\u849f\u84bb\u7684\u672c\u6027~~\uff09\n\n\u6811\u5256\u7684\u6a21\u578b\u662f\uff0c\u628a\u571f\u8def\u89c6\u4e3a\u6743\u503c\uff0c\u6709\u4fee\u6539\uff0c\u7136\u540e\u8981\u67e5\u8be2\u67d0\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u6743\u503c\u548c\u3002\u6ca1\u6709\u6362\u6839\u7684\u8bdd\uff0c\u8fb9\u6743\u76f4\u63a5\u89c6\u4e3a\u70b9\u6743\u3002\n\n\u7136\u540e\u6211\u5e72\u8106\u76f4\u63a5\u7528Splay\u7ef4\u62a4\u94fe\u5256\u5206\u7b97\u5566\uff08\u5176\u5b9e\u5c31\u662f\u5f31\u5316\u677f\u7684LCT\uff0c\u6709\u70b9\u50cf[\u6211\u5f39\u98de\u7ef5\u7f8a\u7684\u5199\u6cd5](http://www.cnblogs.com/flashhu/p/8349984.html)\uff0c\u4f46\u8fd9\u91cc\u8fdelink\u548ccut\u90fd\u6ca1\u6709\uff09\n\n\u5f88\u660e\u663e\uff0c\u5e38\u6570\u5de8\u5927\u3002\u3002\u3002\u3002\u3002\u3002\u4e0d\u8fc7\u6211\u8fd8\u662f\u76f8\u4fe1\uff0c\u80fd\u7528\u6811\u5256\u7684\u4e00\u5b9a\u4e0d\u4f1a\u5361\u6389Splay\u94fe\u5256\u5206\uff0c\u6240\u4ee5\u6211\u8fd8\u662f\u653e\u5fc3\u5927\u80c6\u5730\u5199\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n```\n#include<cstdio>\n#define R register int\n#define I inline void\n#define lc c[x][0]\n#define rc c[x][1]\n#define G c=getchar()\n#define gc G;while(c<'-')G\n#define in(z) gc;z=c&15;G;\\\n\twhile(c>'-')z*=10,z+=c&15,G\nconst int N=250009;\nint f[N],c[N][2],s[N];//s\u8868\u793a\u8def\u5f84\u4e0a\u571f\u8def\u603b\u548c\nbool tu[N];//\u662f\u5426\u4e3a\u571f\u8def\ninline bool nroot(R x){\n\treturn c[f[x]][0]==x||c[f[x]][1]==x;\n}\nI pushup(R x){\n\ts[x]=s[lc]+s[rc]+tu[x];\n}\nI rotate(R x){\n\tR y=f[x],z=f[y],k=c[y][1]==x,w=c[x][!k];\n\tif(nroot(y))c[z][c[z][1]==y]=x;c[x][!k]=y;c[y][k]=w;\n\tf[w]=y;f[y]=x;f[x]=z;\n\tpushup(y);\n}\nI splay(R x){\n\tR y;\n\twhile(nroot(x)){\n\t\tif(nroot(y=f[x]))\n\t\t\trotate((c[f[y]][0]==y)^(c[y][0]==x)?x:y);\n\t\trotate(x);\n\t}\n\tpushup(x);\n}\nI access(R x){\n\tfor(R y=0;x;x=f[y=x])\n\t\tsplay(x),rc=y,pushup(x);\n}//Splay\u94fe\u5256\u5206\uff08\u4f3c\u4e4e\u6240\u6709\u51fd\u6570\u8282\u9009\u81eaLCT\uff09\nint main(){\n\tR n,m,u,v,i,t;\n\tregister char c;\n\tin(n);\n\tfor(i=1;i<n;++i){\n\t\tin(u);in(v);\n\t\tif(u>v)t=u,u=v,v=t;//\u9898\u76ee\u4fdd\u8bc1\u4e86\u7f16\u53f7\u5c0f\u7684\u4e3a\u7236\u4eb2\n\t\tf[v]=u;tu[v]=1;\n\t}\n\tin(m);\n\tfor(i=n+m-1;i;--i){\n\t\tgc;\n\t\tif(c=='A'){\n\t\t\tin(u);in(v);\n\t\t\tif(u>v)t=u,u=v,v=t;\n\t\t\tsplay(v);tu[v]=0;pushup(v);//\u8f6c\u5230\u6839\u518d\u6539\n\t\t}\n\t\telse{\n\t\t\tin(v);\n\t\t\taccess(v);splay(v);\n\t\t\tprintf(\"%d\\n\",s[v]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1519455340,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "DFS+\u6811\u72b6\u6570\u7ec4\n\n\u7528\u6811\u72b6\u6570\u7ec4\u5b58\u50a8\uff0c\u524d\u7f00\u548c\u4ee3\u8868\u5230\u8fbe\u7ecf\u8fc7\u7684\u571f\u8def\u6570\u3002\n\n\u7528DFS\u904d\u5386\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8bb0\u5f55\u8fdb\u5165\u65f6\u523b\u548c\u79bb\u5f00\u65f6\u523b\uff0c\u8fd9\u6837\u53ea\u6709\u5728\u4e24\u4e2a\u65f6\u523b\u4e4b\u95f4\u51fa\u73b0\u7684\u70b9\u624d\u662f\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u3002\n\n\u6bcf\u6b21\u4fee\u8def\u90fd\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\n    \n    \n    \n    \n    \n```cpp\n    #include<cstdio>\n    #include<cstdlib>\n    using namespace std;\n    const int maxn=250000;\n    int n,m,u,v,clock,size;\n    int val[maxn],in[maxn],leave[maxn],h[maxn];\n    char c;\n    int max(int a,int b){return a>b?a:b;}\n    //\u6811\u72b6\u6570\u7ec4\n    int lowbit(int x) {return x&(-x);}\n    void add(int x,int a)\n    {\n        while(x<=n)\n        {\n            val[x]+=a;\n            x+=lowbit(x);\n        }\n    }\n    int sum(int x)\n    {\n        int res=0;\n        while(x>0)\n        {\n            res+=val[x];\n            x-=lowbit(x);\n        }\n        return res;\n    }\n    //\u8fb9\n    struct edge{int v,next;} e[maxn<<1];\n    int addedge(int u,int v)\n    {\n        e[++size].v=v; e[size].next=h[u]; h[u]=size;\n        e[++size].v=u; e[size].next=h[v]; h[v]=size;\n    }\n    void dfs(int p)\n    {\n        in[p]=++clock;\n        for(int i=h[p];i+1;i=e[i].next)\n            if(!in[e[i].v]) dfs(e[i].v);\n        leave[p]=clock;\n    }\n    int main()\n    {\n        scanf(\"%d\",&n);\n        for(int i=0;i<=n;i++) h[i]=-1;\n        for(int i=1;i<n && scanf(\"%d%d\",&u,&v);i++) addedge(u,v);\n        dfs(1);\n        for(int i=2;i<=n;i++) add(in[i],1),add(leave[i]+1,-1);\n        scanf(\"%d\",&m);\n        for(int i=1;i<m+n;i++)\n        {\n            getchar();\n            scanf(\"%c%d\",&c,&v);\n            if(c=='A')\n            {\n                scanf(\"%d\",&u);\n                add(in[max(u,v)],-1);\n                add(leave[max(u,v)]+1,1);\n            }\n            else printf(\"%d\\n\",sum(in[v]));\n        }\n        return 0;\n}\n```",
        "postTime": 1506586819,
        "uid": 30994,
        "name": "timsu1104",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u5b9a\u4e00\u4e2a$N$\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u4ee5$1$\u4e3a\u6811\u7684\u6839\u3002\u6811\u4e0a\u8fb9\u6743\u521d\u59cb\u90fd\u4e3a$1$\uff0c\u6709$m$\u6b21\u8be2\u95ee\u548c$n-1$\u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5c06\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u53d8\u4e3a$0$\uff0c\u6bcf\u6b21\u8be2\u95ee\u70b9\u5230\u6839\u7684\u8def\u5f84\u4e0a\u8fb9\u6743\u4e4b\u548c\u3002\n\n### \u6ce8\u610f\n- \u6bcf\u6b21\u53ea\u4f1a\u4fee\u6539\u4e00\u6761\u8fb9\uff0c\u4e14\u6bcf\u6761\u8fb9\u53ea\u4f1a\u4fee\u6539\u4e00\u6b21\uff0c\u56e0\u6b64\u6b63\u597d\u603b\u5171\u4f1a\u6709$n-1$\u6b21\u4fee\u6539\n\n### **solution**\n\u5c06\u8fb9\u6743\u770b\u505a\u5176\u8fde\u63a5\u7684\u5b50\u8282\u70b9\u7684\u70b9\u6743\uff0c\u9898\u76ee\u5219\u53d8\u4e3a\u94fe\u4e0a\u5355\u70b9\u4fee\u6539$+$\u533a\u95f4\u67e5\u8be2\n\n~~\u88f8\u7684\u6811\u94fe\u5256\u5206~~\n\n### **code**\n```\n#include <cstdio>\nusing namespace std;\n#define re register\n#define il inline\n#define isdigit(ch) (ch>='0'&&ch<='9')\n#define ls(x) (x<<1)\n#define rs(x) (x<<1|1)\nconst int N=250050;\nil void read(int &x)\n{\n\tx=0;char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n}\nil void write(int x)\n{\n\tif(x/10) write(x/10);\n\tputchar(x%10+48);\n}\nil void swap(int &a,int &b){int tmp=a;a=b;b=tmp;}\nint n,m;\nint cnt,h[N];\nstruct edge{int v,nxt;}e[N];\nil void add(int u,int v){e[++cnt]=(edge){v,h[u]};h[u]=cnt;}\nint dfn[N],top[N],siz[N],son[N],fa[N];\nil void dfs1(int x)\n{\n\tsiz[x]=1;\n\tfor(re int i=h[x],v;i;i=e[i].nxt)\n\t{\n\t\tv=e[i].v;\n\t\tdfs1(v);\n\t\tsiz[x]+=siz[v];\n\t\tif(siz[v]>siz[son[x]]) son[x]=v;\n\t}\n}\nil void dfs2(int x)\n{\n\tdfn[x]=++dfn[0];\n\tif(son[x])\n\t{\n\t\ttop[son[x]]=top[x];\n\t\tdfs2(son[x]);\n\t}\n\tfor(re int i=h[x],v;i;i=e[i].nxt)\n\t{\n\t\tv=e[i].v;\n\t\tif(v==son[x]) continue;\n\t\ttop[v]=v;\n\t\tdfs2(v);\n\t}\n}\nstruct segtree{int l,r,sum;}t[N<<2];\nil void build(int p,int l,int r)\n{\n\tt[p]=(segtree){l,r,0};\n\tif(l==r){t[p].sum=1;return;}\n\tre int mid=(l+r)>>1;\n\tbuild(ls(p),l,mid);\n\tbuild(rs(p),mid+1,r);\n\tt[p].sum=t[ls(p)].sum+t[rs(p)].sum;\n}\nil void change(int p,int x)\n{\n\tif(t[p].l>x||t[p].r<x) return;\n\tif(t[p].l==t[p].r){t[p].sum=0;return;}\n\tchange(ls(p),x);change(rs(p),x);\n\tt[p].sum=t[ls(p)].sum+t[rs(p)].sum;\n}\nil int query(int p,int l,int r)\n{\n\tif(t[p].l>r||t[p].r<l) return 0;\n\tif(t[p].l>=l&&t[p].r<=r) return t[p].sum;\n\treturn query(ls(p),l,r)+query(rs(p),l,r);\n}\n//\u7ebf\u6bb5\u6811\nint main()\n{\n\tread(n);\n\tfor(re int i=1,a,b;i<n;++i)\n\t{\n\t\tread(a),read(b);\n\t\tif(a<b) add(a,b),fa[b]=a;\n\t\telse add(b,a),fa[a]=b;\n\t}\n\ttop[1]=1;\n\tdfs1(1);dfs2(1);//\u6811\u94fe\u5256\u5206\n\tbuild(1,1,n);//\u7ebf\u6bb5\u6811\u5efa\u6811\n\tread(m);\n\tm=n+m-1;//\u8be2\u95ee\u6b21\u6570+\u64cd\u4f5c\u6b21\u6570\n\twhile(m--)\n\t{\n\t\tchar opt=getchar();\n\t\twhile(opt!='A'&&opt!='W') opt=getchar();\n\t\tif(opt=='A')\n\t\t{\n\t\t\tre int u,v;\n\t\t\tread(u),read(v);\n\t\t\tif(dfn[u]>dfn[v]) swap(u,v);\n\t\t\tchange(1,dfn[v]);\n\t\t}//\u4fee\u6539\n\t\telse\n\t\t{\n\t\t\tre int x,ans=0;\n\t\t\tread(x);\n\t\t\twhile(top[x]!=1)\n\t\t\t{\n\t\t\t\tans+=query(1,dfn[top[x]],dfn[x]);\n\t\t\t\tx=fa[top[x]];\n\t\t\t}\n\t\t\tans+=query(1,2,dfn[x]);\n\t\t\twrite(ans);puts(\"\");\n\t\t}//\u8be2\u95ee\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1595810021,
        "uid": 209454,
        "name": "watermonster",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6709\u4e2a\u5f88\u597d\u7684\u6027\u8d28\u5c31\u662f\u4e00\u68f5\u6811\n\n\u8fd8\u6709\u5c31\u662f\u7236\u8282\u70b9\u4e00\u5b9a\u5c0f\u4e8e\u5b50\u8282\u70b9\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u597d\u7684\u5224\u65ad\u8c01\u662f\u5b50\u8282\u70b9\n\n\u8be2\u95ee\u6c42\u7684\u662f\u6709\u51e0\u4e2a\u7236\u8282\u70b9\u88ab\u8986\u76d6\u8fc7\u4e86\n\n\u5927\u6982\u5c31\u662fdfs\u5e8f\u4e00\u6ce2\u4e4b\u540e\u518d\u6811\u72b6\u6570\u7ec4\u4e0a\u5dee\u5206\u4e00\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,x,y,f[2000000],d[2000000],last[2000000],a[2000000][2],l[2000000],r[2000000],k,kk,q;\nchar c;\ninline int read(){\n    char c=getchar();while (c!='-'&&(c<'0'||c>'9'))c=getchar();\n    int k=1,kk=0;if (c=='-')k=-1;else kk=c-'0';c=getchar();\n    while (c>='0'&&c<='9')kk=kk*10+c-'0',c=getchar();return k*kk; \n}void doit(int x,int y){a[++kk][0]=last[x];a[kk][1]=y;last[x]=kk;}\nvoid dfs(int x,int fa,int de){\n    d[x]=de;l[x]=++k;for (int i=last[x];i;i=a[i][0])\n        if (a[i][1]!=fa)dfs(a[i][1],x,de+1);\n    r[x]=k;\n}\nvoid putit(int x,int y){for (;x<=1000000;x+=x&(-x))f[x]+=y;}\nint findit(int x){int ans=0;for (;x;x-=x&(-x))ans+=f[x];return ans;}\nint main(){\n    n=read();for (int i=1;i<n;i++){\n        x=read();y=read();if (x>y)swap(x,y);\n        doit(x,y);\n    }dfs(1,0,0);q=read();while (q){\n        c=getchar();while (c!='W'&&c!='A')c=getchar();\n        if (c=='W'){\n            x=read();q--;//q\u6b21\u9001\u4fe1\u6240\u4ee5\u3002\u3002\n            printf(\"%d\\n\",d[x]-findit(l[x]));\n        }else{\n            x=read();y=read();if (x>y)swap(x,y);\n            putit(l[y],1);putit(r[y]+1,-1);\n        }\n    }\n}\n```",
        "postTime": 1506575039,
        "uid": 44165,
        "name": "Starria\u7684\u8111\u6b8b\u7c89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u7b2c\u4e00\u6b21\u5199dfs\u5e8f+\u6811\u72b6\u6570\u7ec4\u3002\u4fee\u6539\u67d0\u4e2a\u8282\u70b9\u7684\u503c\u5c06\u4f1a\u5f71\u54cd\u4ee5\u4ed6\u6839\u7684\u5b50\u6811\u7684\u503c\u3002\u4ec0\u4e48\u662fdfs\u5e8f\u5462\uff1f\u5c31\u662f\u904d\u5386\u7684\u987a\u5e8f\u3002\u6211\u521a\u5f00\u59cb\u8282\u70b9\u7f16\u53f7\u53ef\u4ee5\u7528\u6765\u5145\u5f53dfs\u5e8f\u3002\u7ed3\u679cwrong\u3002\u53ea\u80fd\u901a\u8fc7dfs\u6765\u5f97\u5230dfs\u5e8f\u3002\u7136\u540e\u5c31\u662f\u5dee\u5206\u4e86\u3002\uff08\u539f\u7406\u548c\u6d1b\u8c37 P3368\u8fd9\u4e2a\u9898\u76ee\u4e00\u6837\uff09\u521d\u59cb\u65f6\uff0c\u6bcf\u6761\u8fb9\u90fd\u4e3a1.\u5982\u679cu-v\u4e3a\u571f\u8def\uff0c\u5c31\u4e3a1.\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c31\u8ba9c[v]=1\u3002\u5168\u90e8\u5904\u7406\u5b8c\u3002\u4fee\u6539\u67d0\u4e2a\u70b9\u4f1a\u9020\u6210\u4ee5\u4ed6\u4e3a\u8ddf\u7684\u5b50\u8282\u70b9\u7684\u503c\u53d1\u751f\u6539\u53d8\u3002\u6240\u4ee5\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u53d1\u751f\u4e86\u6539\u53d8\u3002\u5982\u679c\u6839\u4e3a1\uff0c\u6700\u5927\u53f6\u5b50\u8282\u70b9\u7f16\u53f7\u4e3a3.\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u5c31\u662f\u30101,3\u3011\u3002\u600e\u4e48\u6765\u7684\u5462\uff1f\u5c31\u662f\u4ee5\u5f53\u524d\u8282\u70b9\u7684dfs\u5e8f\u4e3a\u5de6\u7aef\u70b9\uff0c\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u8ddf\u80fd\u8d70\u5230\u6700\u8fdc\uff08\u6216\u8005\u6700\u5927\u7684\u4e3a\u53f3\u7aef\u70b9\uff09\u3002\u8fd9\u6837\u5c31\u662f\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\u4e86\u3002\u8be6\u7ec6\u770b\u4ee3\u7801\u3002\n\n```c\n#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#define MAXN  250005\ntypedef  long long  LL;\nusing namespace std;\n\nint n,m,tot;\nvector<int> G[MAXN];\nbool vis[MAXN];\nint Left[MAXN],Right[MAXN];\nint c[MAXN];\n\nint lowbit(int x)\n{\n    return (x&((-1)*x));\n}\n\nvoid add(int x,int d)\n{\n    while(x<=n)\n    {\n        c[x]+=d;\n        x+=lowbit(x);\n    }\n}\n\nint sum(int x)\n{\n    int ans=0;\n    while(x>0)\n    {\n        ans+=c[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\n\nvoid dfs(int u,int fa)\n{\n    vis[u]=true;\n    Left[u]=++tot;\n    //tot=u;\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(vis[v])\n            continue;\n        dfs(v,u);\n    }\n    Right[u]=tot;\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    tot=0;\n    int uu,vv;\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d %d\",&uu,&vv);\n        G[uu].push_back(vv);\n        G[vv].push_back(uu);\n    }\n    memset(vis,false,sizeof(vis));\n    dfs(1,-1);\n    for(int i=2;i<=n;i++)\n    {\n        add(Left[i],1);\n        add(Right[i]+1,-1);\n    }\n    scanf(\"%d\",&m);\n    int mm,nn;\n    char ch;\n    for(int i=0;i<n+m-1;i++)\n    {\n        cin>>ch;\n        if(ch=='W')\n        {\n            cin>>mm;\n            printf(\"%d\\n\",sum(Left[mm]));\n        }\n        else if(ch=='A')\n        {\n           cin>>mm>>nn;\n            add(Left[nn],-1);\n            add(Right[nn]+1,1);\n        }\n        //getchar();\n    }\n    return 0;\n}\n\n```\n\n",
        "postTime": 1568795313,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "//- - - - - - - - - - - - - \u7533\u660e\u4e00\u4e0b\u8fd9\u91cc\u9762\u6709\u5f88\u591a\u5de8\u4f6c\u7684\u9898\u89e3 \n\n//****************\n\n\n//********************\n _\n//   _ ___\u6211\u590d\u5236\u4e86\u5f88\u591a\u4eba\u7684\u9898\u89e3_  __ _ \n_ \n\n------------\n\n\n------------\n\n\n------------\n\n\n------------\n\n\n------------\n\n\n------------\n\n\n------------\n\n\n------------\n\n\n------------\n \n\n//\u590d\u4e60\u4e0e\u603b\u7ed3  \u6811\u72b6\u6570\u7ec4\u548cdfs\u5e8f\u7684\u603b\u7ed3\u4e0e\u5f52\u7eb3\n\n//####### ### \u5982\u679c\u6709\u4eba\u770b\u5230\u8bf7\u5ffd\u7565\n\n//\u5bf9\u4e8e\u8fd9\u6837\u7684\u4e00\u9053\u9898\uff0c\u660e\u663e\u662f\u4e00\u68f5\u6811\uff0c\u800c\u4e14\u5e94\u8be5\u7528\u6811\u72b6\u6570\u7ec4\u6765\u89e3\u51b3\n\n//\u53ef\u6211\u51fa\u4eba\u610f\u6599\u7684\u5199\u4e86\u4e00\u4e2a\u5355\u6e90\u6700\u77ed\u8def  \u53ea\u670938\u5206\uff0c\u5176\u4f59\u5168\u90e8TLE;\n\n//\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,m,s,dis[100010];\nint r,st;\nchar a;\nint b,c;\nint sum=0;\nstruct Edge \n{\n\tint v,w,nxt;\n}e[500010];\nint head[100010],cnt=0;\nvoid addEdge(int u,int v,int w) {\n\te[++cnt].v=v;\n\te[cnt].w=w;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nstruct node { \n\tint u,d;\n\tbool operator <(const node& rhs) const {\n\treturn d>rhs.d;\n\t}\n};\nvoid Dj() \n{\n\tfor (int i=1; i<=n; i++) dis[i]=2147483647;\n\tdis[s]=0;\n\tpriority_queue<node> Q;\n\tQ.push((node) {s,0});\n\twhile (!Q.empty()) \n\t{\n\t\tnode fr=Q.top();\n\t\tQ.pop();\n\t\tint u=fr.u,d=fr.d;\n\t\tif (d!=dis[u]) continue;\n\t\tfor (int i=head[u]; i; i=e[i].nxt) \n\t\t{\n\t\t\tint v=e[i].v,w=e[i].w;\n\t\t\tif (dis[u]+w<dis[v]) \n\t\t\t{\n\t\t\tdis[v]=dis[u]+w;\n\t\t\tQ.push((node) {v,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\ts=1;\n\tcin>>n;\n\tst=n-1;\n\tfor (int i=1; i<=st; i++) \n\t{\n\tint X,Y;\n\tcin>>X>>Y;\n\taddEdge(X,Y,1);\n\t}\n\tDj();\n\tcin>>m;\n\tfor(int i=1;i<=n+m-1;i++)\n\t{\n\tcin>>a;\n\tif(a=='W') {cin>>b; cout<<dis[b]<<endl;}\n\tif(a=='A') {cin>>b>>c;addEdge(b,c,0);Dj();}\n\t}\t\n\treturn 0;\n}\n```\n\n//\u53ef\u5982\u4eca\u51b7\u9759\u4e0b\u6765\u5e94\u8be5\u5982\u4f55\u5199\n\n//\u6211\u770b\u4e86\u4e00\u4f4d\u5927\u4f6c\u7684\u9898\u89e3,\u4ed6\u662f\u7528\u6811\u72b6\u6570\u7ec4\u548cdfs\u5e8f\u505a\u7684\u6ee1\u5206\n\n//\u9996\u5148\u5148\u6765\u8bf4\u4e00\u4e0b\u8fd9\u4e2a\u9898\u7684\u601d\u8def\n\n//\u5148\u6c42dfs\u5e8f\uff0cin\u3010x\u3011out\u3010x\u3011\u5206\u522b\u8868\u793ax\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0cx\u5b50\u6811\u7ed3\u5c3e\u518d\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n//\u6bcf\u6b21\u4fee\u6539\u4e00\u6761\u516c\u8defu-v\uff0c\u6211\u4eec\u8bb0\u6df1\u5ea6\u66f4\u5927\u7684\u90a3\u4e2a\u70b9\u4e3ax\uff08x = max(u,v)\uff09\uff0c\u518ddfs\u5e8f\u5217\u4e2d\u628ax\u7684\u5b50\u6811\u8fd9\u4e00\u6bb5\u533a\u95f4\u90fd-1\u3002\n\n//\u8fd9\u4e48\u505a\u662f\u56e0\u4e3ax\u7684\u5b50\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u90fd\u4f1a\u7ecf\u8fc7\u8fd9\u4e00\u6761\u4fee\u6539\u7684\u8fb9\u3002\n\n//\u90a3\u4e48\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u9700\u67e5\u8be2dfs\u5e8f\u5217\u4e2d\u7684\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n//Q\uff1a\u4ec0\u4e48\u662fdfs\u5e8f\uff1f\uff1f A\uff1a\u5c31\u662fdfs\u904d\u5386\u987a\u5e8f\u554a\uff0c\u6bd4\u5982\u6837\u4f8b\u7684dfs\u5e8f\u5c31\u662f\uff1a1 4 5 2 3\n\n\n//\u90a3\u4e48\uff0c\u600e\u4e48\u4f7f\u7528dfs\u5e8f\u5462\uff1f \u4e0d\u96be\u53d1\u73b0dfs\u5e8f\u4e2d\uff0c \u6bcf\u4e00\u9897\u5b50\u6811\u90fd\u5206\u522b\u4f4d\u4e8e\u4e00\u4e2a\u533a\u95f4\u4e2d\uff0c\u6211\u4eec\u53ea\u8981\u8bb0\u4e0b\u533a\u95f4\u8303\u56f4\uff0c\u5c31\u53ef\u4ee5\u907f\u514d\u9898\u76ee\u4e2d\u5206\u679d\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u9898\u76ee\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210 \u533a\u95f4\u4fee\u6539+\u5355\u70b9\u67e5\u8be2 \u4e86\u3002\n\n//\u5148\u6765\u68b3\u7406\u4e00\u4e0bdfs\u5e8f\n```cpp\nvoid dfs(int u, int fa) {\n\tin[u] = ++ Clock;\n\tfor (int i = head[u]; i; i = e[i].nex)\n\t\tif (e[i].to != fa) dfs(e[i].to, u);\n\tout[u] = Clock;\n}\n```\n\n\n\n//\u6700\u540e\u732e\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 250010;\nint n, m, Clock = 0, cnt = 0;\nint head[N], in[N], out[N], T[N], X[N], Y[N];\nchar ch[3];\nstruct Edge {\n\tint to, nex;\n} e[N*2];\nint lowbit(int k) {\n\treturn k & -k;\n}\nvoid add(int x, int y) {\n\te[++ cnt].to = y;\n\te[cnt].nex = head[x];\n\thead[x] = cnt;\n}\nvoid dfs(int u, int fa) {\n\tin[u] = ++ Clock;\n\tfor (int i = head[u]; i; i = e[i].nex)\n\t\tif (e[i].to != fa) dfs(e[i].to, u);\n\tout[u] = Clock;\n}\nvoid change(int x,int k) {\n\twhile(x<=n) {\n\t\tT[x]+=k;\n\t\tx+=lowbit(x);\n\t}\n}\nint getSum(int x) {\n\tint ans=0;\n\twhile(x!=0) {\n\tans+=T[x];\n\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\nint main() \n{\n\tcin>>n;\n\tfor (int i = 1; i < n; i ++) \n\t{\n\tcin>>X[i]>>Y[i];\n\tadd(X[i], Y[i]);\n\tadd(Y[i], X[i]);\n\t}\n\tdfs(1, 0);\n\tfor (int i = 1; i < n; i ++) \n\t{\n\tif (in[X[i]] < in[Y[i]]) swap(X[i], Y[i]);\n\tchange(in[X[i]], 1);\n\tchange(out[X[i]]+1, -1); //\u672c\u6765\u6240\u6709\u8fb9\u90fd\u662f\u516c\u8def\n\t}\n\tcin>>m;\n\tfor (int i = 1; i <= n+m-1; i ++) \n\t{\n\t\tscanf(\"%s\", ch);\n\t\tif (ch[0] == 'A') \n\t\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tif (in[x] < in[y]) swap(x, y);\n\t\tchange(in[x], -1);\n\t\tchange(out[x]+1, 1); //\u4fee\u6539\u4e3a\u571f\u8def\n\t\t} \n\t\telse \n\t\t{\n\t\tint x;cin>>x;\n\t\tcout<<getSum(in[x])<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1539784510,
        "uid": 116132,
        "name": "\u7ba1\u4ef2",
        "ccfLevel": 0,
        "title": "P3459  MEG-Megalopolis"
    },
    {
        "content": "\u3010POI\u8865\u5168\u8ba1\u5212#43 POI2007 MEG\u3011\n\n\u6211\u4eec\u6765\u5c1d\u8bd5\u66b4\u529b\u4e00\u70b9\u7684\u505a\u6cd5\uff1a\u6811\u5256\n\n\u57fa\u672c\u4e0a\u5c31\u662f\u65e0\u8111\u641e\uff0c\u5c06\u95ee\u9898\u8f6c\u6362\u4e3a\uff1a\n\n\u7ef4\u62a4\u6811\u4e0a\u4e24\u4e2a\u64cd\u4f5c\n\n1.\u6811\u4e0a\u5355\u6761\u8fb9\u6743-1\n\n2.\u67e5\u8be2\u6811\u4e0a\u70b9\u5230\u6839\u8def\u5f84\u4e0a\u6743\u503c\u548c\n\n\u5c31\u5f53\u662f\u7528\u4f5c\u6811\u94fe\u5256\u5206\u6a21\u677f\u9898\u4e86\n\nP.S.\u5355\u70b9\u4fee\u6539\u94fe\u4e0a\u67e5\u8be2\u4e00\u822c\u53ef\u4ee5\u8f6c\u5316\u4e3adfs\u5e8f\uff0c\u800c\u4e14dfs\u5e8f\u5e38\u6570\u4e00\u822c\u6bd4\u6811\u94fe\u5256\u5206\u5c0f\uff08\u697c\u4e0b\u7684\u89e3\u6cd5\uff09\n\n\u8d34\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<map>\nusing namespace std;\nconst int MAXN=250010;\nstruct node\n{\n    int l,r,sum;\n    node *lson,*rson;\n}*root,pool[MAXN*4];\nint top;\nnode* build(int l,int r)\n{\n    node *tmp=&pool[++top];\n    tmp->l=l;tmp->r=r;\n    tmp->sum=r-l+1;\n    if(l!=r)\n    {\n        int mid=(l+r)/2;\n        tmp->lson=build(l,mid);\n        tmp->rson=build(mid+1,r);\n    }\n    return tmp;\n}\nvoid change(node *cur,int pos)//minus 1\n{\n    cur->sum--;\n    if(cur->l==cur->r)return;\n    if(cur->lson->r>=pos)change(cur->lson,pos);\n    else change(cur->rson,pos);\n}\nint query(node *cur,int l,int r)\n{\n    if(cur->l==l&&cur->r==r)\n        return cur->sum;\n    if(cur->lson->r>=r)return query(cur->lson,l,r);\n    else if(cur->rson->l<=l)return query(cur->rson,l,r);\n    else return query(cur->lson,l,cur->lson->r)+query(cur->rson,cur->rson->l,r);\n}\nstruct edge\n{\n    int v,id;\n    edge *next;\n}*h[MAXN],epool[MAXN*2];\nint etop;\ninline void addedge(int u,int v)\n{\n    edge *tmp=&epool[++etop];tmp->v=v;tmp->next=h[u];h[u]=tmp;\n    edge *pmt=&epool[++etop];pmt->v=u;pmt->next=h[v];h[v]=pmt;\n}\nint dep[MAXN],siz[MAXN],pa[MAXN],maxson[MAXN],paedge[MAXN],pathroot[MAXN];\nvoid dfs1(int u)\n{\n    siz[u]=1;\n    for(edge *tmp=h[u];tmp;tmp=tmp->next)\n    {\n        if(!dep[tmp->v])\n        {\n            dep[tmp->v]=dep[u]+1;\n            pa[tmp->v]=u;\n            dfs1(tmp->v);\n            siz[u]+=siz[tmp->v];\n            if(siz[tmp->v]>siz[maxson[u]])maxson[u]=tmp->v;\n        }\n    }\n}\nint cur;\nvoid dfs2(int u)\n{\n    if(maxson[u])\n    {\n        paedge[maxson[u]]=++cur;\n        pathroot[maxson[u]]=pathroot[u];\n        dfs2(maxson[u]);\n    }\n    for(edge *tmp=h[u];tmp;tmp=tmp->next)\n    {\n        if(tmp->v!=maxson[u]&&dep[tmp->v]==dep[u]+1)\n        {\n            paedge[tmp->v]=++cur;\n            pathroot[tmp->v]=tmp->v;\n            dfs2(tmp->v);\n        }\n    }\n}\ninline int qtree(int x)\n{\n    int ans=0;\n    while(x)\n    {\n        ans+=query(root,paedge[pathroot[x]],paedge[x]);\n        x=pa[pathroot[x]];\n    }\n    return ans;\n}\nint main()\n{\n    int n,q,a,b;\n    char ch;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n-1;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        addedge(a,b);\n    }\n    dep[1]=1;\n    dfs1(1);\n    pathroot[1]=1;\n    dfs2(1);\n    root=build(0,n-1);\n    scanf(\"%d\",&q);\n    for(int i=1;i<=n+q-1;i++)\n    {\n        scanf(\" %c\",&ch);\n        if(ch=='W')\n        {\n            scanf(\"%d\",&a);\n            printf(\"%d\\n\",qtree(a)-1);\n        }\n        else\n        {\n            scanf(\"%d%d\",&a,&b);\n            change(root,paedge[b]);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1506585347,
        "uid": 3346,
        "name": "oscar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "\u9898\u610f:\n\n\u7ed9\u4e00\u68f5\u6811 \u8fb9\u6743\u90fd=1\n\n\u6bcf\u6b21\u5c06\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\u6539\u4e3a0\n\n\u6216\u8005\u8be2\u95ee\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8fb9\u7684\u8fb9\u6743\u548c\n\n\u9898\u89e3:\n\ndfs\u5e8f\n\u4fee\u6539\u5c31\u662f\u533a\u95f4\u4fee\u6539\n\n\u8be2\u95ee\u5c31\u662f\u5355\u70b9\u8be2\u95ee\n\n\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,l,r) for(int i=l;i<=r;++i)\n#define pb push_back\n\n#define gc (c=getchar())\nint read()\n{\n    char c;\n    while(gc<'0');\n    int x=c-'0';\n    while(gc>='0')x=x*10+c-'0';\n    return x;\n}\n\nconst int N=250005;\nint f[N],in[N],out[N];\nint c[N];\nint n,m;\nvector<int>link[N];\n\nint tot;\nvoid dfs(int x,int fr)\n{\n    f[x]=fr;\n    in[x]=++tot;\n    for(vector<int>::iterator i=link[x].begin();i!=link[x].end();++i)\n    {\n        if(*i!=fr) dfs(*i,x);\n    }\n    out[x]=tot;\n}\n\nvoid add(int i,int w)\n{\n    for(;i<=n;i+=i&-i)c[i]+=w;\n}\nint qiu(int i)\n{\n    int ans=0;\n    for(;i;i-=i&-i)ans+=c[i];\n    return ans;\n}\n\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);\n    n=read();\n    rep(i,1,n-1)\n    {\n        int x=read(),y=read();\n        link[x].pb(y);link[y].pb(x);\n    }\n    \n    dfs(1,0);\n    \n    rep(i,2,n) {++c[in[i]];--c[out[i]+1];}\n    rep(i,1,n) \n    {\n        int j=i+(i&-i);\n        if(j<=n)c[j]+=c[i];\n    }\n    \n    int m=read()+n-1;char type[5];\n    while(m--)\n    {\n        scanf(\"%s\",type);\n        int x=read();\n        if(*type=='W') printf(\"%d\\n\",qiu(in[x]));\n        else\n        {\n            int y=read();\n            if(f[y]==x)x=y;\n            add(in[x],-1);add(out[x]+1,1);\n        }\n    }\n}\n```",
        "postTime": 1497692300,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "\u601d\u8def\u548c\u697c\u4e0b\u5dee\u4e0d\u591a\uff08~~\u5176\u5b9e\u662f\u770b\u4e86\u697c\u4e0b\u7684\u624d\u60f3\u5230\u7684= =~~\uff09\n\n\u7a0d\u5fae\u8be6\u7ec6\u5730\u89e3\u91ca\u4e0b\uff1a\n\n\u5148\u6c42dfs\u5e8f\uff0cin[x]out[x]\u5206\u522b\u8868\u793ax\u5728\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0cx\u5b50\u6811\u7ed3\u5c3e\u518d\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\u3002\u6bcf\u6b21\u4fee\u6539\u4e00\u6761\u516c\u8defu-v\uff0c\u6211\u4eec\u8bb0\u6df1\u5ea6\u66f4\u5927\u7684\u90a3\u4e2a\u70b9\u4e3ax\uff08x = max(u,v)\uff09\uff0c\u518ddfs\u5e8f\u5217\u4e2d\u628ax\u7684\u5b50\u6811\u8fd9\u4e00\u6bb5\u533a\u95f4\u90fd-1\u3002\u8fd9\u4e48\u505a\u662f\u56e0\u4e3ax\u7684\u5b50\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u5230\u6839\u7684\u8def\u5f84\u90fd\u4f1a\u7ecf\u8fc7\u8fd9\u4e00\u6761\u4fee\u6539\u7684\u8fb9\u3002\u90a3\u4e48\u67e5\u8be2\u7684\u65f6\u5019\u53ea\u9700\u67e5\u8be2dfs\u5e8f\u5217\u4e2d\u7684\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u8d34\u4e0b\u4ee3\u7801\u5427\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\nusing namespace std;\n\nconst int N = 250010;\nint n, m, clock = 0, cnt = 0;\nint head[N], in[N], out[N], T[N], X[N], Y[N];\nchar ch[3];\n\nstruct Edge{\n    int to, nex;\n}e[N<<1];\n\ninline int read()\n{\n    char ch = getchar(); int x = 0, flag = 0;\n    while (!isdigit(ch)){ if (ch == '-') flag = 1; ch = getchar(); }\n    while (isdigit(ch)){ x = x * 10 + ch - '0'; ch = getchar(); }\n    return flag ? -x : x;\n}\n\ninline void write(int a){ if (a >= 10) write(a/10); putchar('0'+a%10); }\ninline void writeln(int a){ write(a); puts(\"\"); }\n\ninline void add(int x, int y){ e[++ cnt].to = y; e[cnt].nex = head[x]; head[x] = cnt; }\n\ninline void dfs(int u, int fa)\n{\n    in[u] = ++ clock;\n    for (int i = head[u]; i; i = e[i].nex)\n        if (e[i].to != fa) dfs(e[i].to, u);\n    out[u] = clock;\n}\n\ninline void change(int k, int v){ for (; k < N; k += k&-k) T[k] += v; }\ninline int getSum(int k){ int ret = 0; for (; k; k -= k&-k) ret += T[k]; return ret; }\n\nint main()\n{\n    n = read();\n    for (int i = 1; i < n; i ++){\n        X[i] = read(), Y[i] = read();\n        add(X[i], Y[i]); add(Y[i], X[i]);\n    }\n    dfs(1, 0);\n    for (int i = 1; i < n; i ++){\n        if (in[X[i]] < in[Y[i]]) swap(X[i], Y[i]);\n        change(in[X[i]], 1); change(out[X[i]]+1, -1); //\u672c\u6765\u6240\u6709\u8fb9\u90fd\u662f\u516c\u8def\n    }\n    m = read();\n    for (int i = 1; i <= n+m-1; i ++){\n        scanf(\"%s\", ch);\n        if (ch[0] == 'A'){\n            int x = read(), y = read();\n            if (in[x] < in[y]) swap(x, y);\n            change(in[x], -1); change(out[x]+1, 1); //\u4fee\u6539\u4e3a\u571f\u8def\n        } else{\n            int x = read();\n            writeln(getSum(in[x]));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1507693419,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "dfs+\u6811\u72b6\u6570\u7ec4\n\n\ndfs\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u8fdb\u5165\u4e0e\u79bb\u5f00\u65f6\u95f4\u3002\u8fdb\u5165\u65f6\u6743\u503c+1\uff0c\u79bb\u5f00\u65f6\u6743\u503c-1\u3002\n\n\u5f53\u4fee\u8def\u65f6\uff0c\u6743\u503c\u6539\u4e3a0\u3002\n\n\n\n \n \n \n \n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nconst int maxn=250000;\nint value[maxn]={},in[maxn]={},leave[maxn]={},head[maxn]={};\nint size=0,Clock=0,ans=0,n=0,m=0;\nstruct node\n{\n    int v,next;\n}e[maxn*2];\ninline int lowbit(int x)\n{\n    return x&(-x);\n} \ninline void add(int x,int a)\n{\n    while(x<=n)\n    {\n        value[x]+=a;\n        x+=lowbit(x);\n    }\n}\ninline int query(int x)\n{\n    int a=0;\n    while(x>0)\n    {\n        a+=value[x];\n        x-=lowbit(x); \n    }\n    return a;\n}\nvoid addedge(int u,int v)\n{\n    size++;\n    e[size].v=v;\n    e[size].next=head[u];\n    head[u]=size;\n    size++;\n    e[size].v=u;\n    e[size].next=head[v];\n    head[v]=size;\n}\nvoid dfs(int p)\n{\n    Clock++;\n    in[p]=Clock;\n    for(int i=head[p];i!=-1;i=e[i].next)\n        if(!in[e[i].v])\n            dfs(e[i].v);\n    leave[p]=Clock;\n}\nint max(int a,int b)\n{\n    return a>b?a:b;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=0;i<=n;i++)\n        head[i]=-1;\n    int v,u;\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d%d\",&v,&u);\n        addedge(v,u);\n    }\n    dfs(1);\n    int p;\n    for(int i=2;i<=n;i++)\n    {\n        add(in[i],1);\n        add(leave[i]+1,-1);\n    } \n    scanf(\"%d\",&m);\n    char c;\n    for(int i=1;i<m+n;i++)\n    {\n        getchar();\n        scanf(\"%c\",&c);\n        scanf(\"%d\",&v);\n        if(c=='A')\n        {\n            scanf(\"%d\",&u);\n            p=in[max(v,u)];\n            add(p,-1);\n            p=leave[max(v,u)]+1;\n            add(p,1);\n        }\n        else\n        {\n            p=in[v];\n            ans=query(p);\n            printf(\"%d\\n\",ans);\n        }\n    }\n    system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1498724344,
        "uid": 38188,
        "name": "\u6570\u5b66\u7cfb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u65b0\u601d\u8def\uff0c\u4e0d\u8fc7\u61d2\u5f97\u5199\u4ee3\u7801\u4e86\u3002\u9996\u5148\u628a\u6240\u6709\u8be2\u95ee\u548c\u6539\u53d8\u4ee5\u53ca\u5b83\u4eec\u7684\u65f6\u95f4\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e4b\u540edfs\u52a0\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff08\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\uff09\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u7956\u5148\u7ed3\u70b9\u67d0\u4e2a\u65f6\u95f4\u5efa\u6210\u516c\u8def\u7684\u4e2a\u6570\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u7956\u5148\u4e2d\u7684\u571f\u8def\u7684\u4e2a\u6570\u5373\u4e3a\u6df1\u5ea6\u51cfT.query(0,time)\uff0ctime\u4ee3\u8868\u5f53\u524d\u65f6\u95f4\u3002\u4e4b\u540e\u518d\u52a0\u4e0a\u6807\u51c6\u7684LCA\u5c31\u53ef\u4ee5\u67e5\u8be2\u4e86\u3002",
        "postTime": 1525946964,
        "uid": 64366,
        "name": "ddwqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3459 \u3010[POI2007]MEG-Megalopolis\u3011"
    }
]