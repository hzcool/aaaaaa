[
    {
        "content": "\u8fd9\u9053\u9898\u5982\u679c\u76f4\u63a5\u6a21\u62df\u53ea\u80fd\u591f\u8fc7\u56db\u4e2a\u6570\u636e\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u627e\u51fa\u76f8\u8fde\u7684\u5305\u542b\u6700\u591a\u8981\u80cc\u7684\u5355\u8bcd\u5e76\u4e14\u5355\u8bcd\u957f\u5ea6\u6700\u77ed\u3002\uff08\u6ce8\u610f\uff0c\u6587\u6bb5\u4e2d\u7684\u5355\u8bcd\u53ef\u80fd\u662f\u591a\u4f59\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u7528\u80cc\u7684\u3002\uff09\n\n\u4ee3\u7801\u5982\u4e0b\n\n```delphi\n\nvar a:array[1..1000] of string[10];\n    b:array[1..100000] of string[10];\n    len,f:array[0..1000] of longint;\n    s:array[0..100000] of longint;\n    i,j,m,n,t:longint;\nprocedure qsort(l,r:longint);\nvar i,j:longint;\n    mid,st:string[10];\nbegin\n  i:=l;j:=r;\n  mid:=a[(l+j) div 2];\n  while i<=j do\n   begin\n     while a[i]<mid do inc(i);\n     while a[j]>mid do dec(j);\n     if i<=j then\n      begin\n        st:=a[i];a[i]:=a[j];a[j]:=st;\n        inc(i);dec(j);\n      end;\n   end;\n  if l<j then qsort(l,j);\n  if i<r then qsort(i,r);\nend;\nprocedure half(st:string[10];l,r:longint);\nvar mid:longint;\nbegin\n  if l+1<r then\n   begin\n     mid:=(l+r) div 2;\n     if a[mid]<=st then half(st,mid,r) else half(st,l,mid);\n   end\n  else\n   begin\n     if a[l]<>st then exit;\n     if f[l]=0 then inc(t);\n     inc(f[l]);\n     s[i]:=l;\n   end\nend;\n\nbegin\n  readln(n);\n  for i:=1 to n do readln(a[i]);\n  qsort(1,n);\n  readln(m);\n  for i:=1 to m do readln(b[i]);\n  for i:=1 to n do len[i]:=maxint;\n  i:=0;\n  while i<m do\n   begin\n     inc(i);\n     half(b[i],1,n+1);\n     while (j<i)and((f[s[j]]>1)or(s[j]=0)) do\n      begin\n        if s[j]<>0 then dec(f[s[j]]);\n        inc(j);\n      end;\n     if i-j+1<len[t] then len[t]:=i-j+1;\n   end;\n  writeln(t);\n  writeln(len[t]);\nend.\n\n```",
        "postTime": 1373968067,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "## \u601d\u8def\r\n\r\n\u5f88\u660e\u663e\uff0c\u8fd9\u5c31\u662f\u4e00\u9053 HASH\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 map + string\uff0c\u4ee3\u7801\u96be\u5ea6\u5c31\u5927\u5927\u4e0b\u964d\u4e86\u3002\r\n\r\n\u6211\u4eec\u6bcf\u6b21\u8bb0\u5f55\u6b64\u65f6\u6709\u591a\u5c11\u4e2a\u5355\u8bcd\uff0c\u82e5\u6bd4\u4e4b\u524d\u591a\uff0c\u5219\u76f4\u63a5\u66f4\u65b0\u957f\u5ea6\u4e0e\u6570\u91cf\u3002\r\n\r\n\u7136\u540e\u5728\u66f4\u65b0\u5de6\u8fb9 $l$\uff0c\u82e5\u6700\u5de6\u8fb9\u7684\u5355\u8bcd\u4e0d\u60f3\u80cc\uff0c\u6216\u540e\u6587\u5df2\u51fa\u73b0\u5c31\u66f4\u65b0\uff0c\u628a\u957f\u5ea6\u53bb\u6700\u77ed\u5373\u53ef\u3002\r\n\r\n## \u65f6\u95f4\r\n\r\n$O(m \\log m)$\uff0c\u975e\u5e38\u4f18\u79c0\u3002\r\n\r\n## \u6700\u77ed\u4ee3\u7801\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nmap<string,int>sum;\r\nmap<string,bool>flag;\r\nint ans1,ans2,n,m,l;\r\nstring s[100005],s1; \r\nint main()\r\n{\r\n\tcin>>n;\r\n\tfor(int i=1;i<=n;i++)cin>>s1,flag[s1]=1;//\u6807\u8bb0\u5355\u8bcd\u60f3\u4e0d\u60f3\u80cc\r\n\tcin>>m;l=1;\r\n\tfor(int i=1;i<=m;i++)\r\n\t{\r\n\t\tcin>>s[i];\r\n\t\tif(flag[s[i]])sum[s[i]]++;//\u8bb0\u5f55\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\r\n\t\tif(sum[s[i]]==1)ans1++,ans2=i-l+1;//\u66f4\u65b0\r\n\t\twhile(l<=i)\r\n\t\t{\r\n\t\t\tif(!flag[s[l]]){l++;continue;}//\u5224\u65ad\u8981\u4e0d\u8981\u80cc\r\n\t\t\tif(sum[s[l]]>=2){sum[s[l]]--,l++;continue;}//\u6709\u6ca1\u6709\u91cd\u590d\u51fa\u73b0\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tans2=min(ans2,i-l+1);//\u66f4\u65b0\r\n\t}\r\n\tcout<<ans1<<endl<<ans2<<endl;\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\u5982\u679c\u6709\u5e2e\u5230\u4f60\uff0c\u8bf7\u70b9\u8d5e\u652f\u6301\uff0c\u8c22\u8c22\u3002",
        "postTime": 1600436736,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "Ps. QAQ\u7ec6\u8282\u554a\u7ec6\u8282\u554a\u7ec6\u8282\u554a\u7ec6\u8282\u5f88\u91cd\u8981\uff01\uff01\uff01\uff01\n\n\n\u56e0\u6b64WA\u4e86n\u591a\u6b21\u8fd8\u6302\u5728\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u60c5\u51b5\u4e0a\u2026\u2026sad\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n**\u9898\u76ee\u8981\u6c42**\n\n\n\u7ed9\u5b9an\u4e2a\u5355\u8bcd\u548c\u4e00\u4e2a\u957f\u4e3am\u7684\u6bb5\u843d\uff0c\u8981\u6c42\u5728\u8be5\u6bb5\u843d\u5185\u627e\u51fa\u5305\u542b\u7ed9\u5b9a\u5355\u8bcd\u79cd\u7c7b\u6570\u6700\u591a\u4e14\u6700\u77ed\u7684\u6700\u4f18\u6bb5\u843d\uff0c\u6c42\u8be5\u6bb5\u843d\u5305\u542b\u7ed9\u5b9a\u5355\u8bcd\u7684\u79cd\u7c7b\u6570\u548c\u6bb5\u843d\u957f\u5ea6\u3002\n\n\n**\u601d\u8def\u5206\u6790**\n\n\n\u4e3a\u4e86\u65b9\u4fbf\u53d9\u8ff0\uff0c\u6211\u4eec\u7ea6\u5b9a\u7528\u6570\u7ec4a[ ]\u6765\u5b58\u50a8\u7ed9\u5b9a\u7684n\u4e2a\u5355\u8bcd\uff08\u5c06\u5176\u79f0\u4e3a\u76ee\u6807\u5355\u8bcd\uff09\uff0c\u7528\u6570\u7ec4b[ ]\u6765\u6309\u7167\u987a\u5e8f\u5b58\u50a8\u7ed9\u5b9a\u7684m\u6bb5\u5185\u7684m\u4e2a\u5355\u8bcd\u3002\n\n\n\u521d\u6b65\u601d\u8def\uff1a\n\n\n\u5927\u81f4\u601d\u8def\u5e94\u8be5\u662f\u5f88\u597d\u60f3\u7684\uff0c\u5dee\u4e0d\u591a\u5c31\u662f\u5bf9\u6bb5\u843d\u6574\u4f53\u626b\u63cf\u4e00\u904d\u6765\u6c42\u6700\u4f18\u6bb5\u843d\u3002\u9996\u5148\u7528Hash\u6765\u8bb0\u5f55n\u4e2a\u7ed9\u5b9a\u5355\u8bcd\u548cm\u4e2a\u6bb5\u843d\u5185\u5355\u8bcd\uff0c\u7136\u540e\u5bf9\u6bd4\u5f97\u51fa\u7ed9\u5b9a\u6bb5\u843d\u5185\u5305\u542b\u4e86\u591a\u5c11\u79cd\u76ee\u6807\u5355\u8bcd\uff0c\u6700\u540e\u5bf9\u6bb5\u843d\u6574\u4f53\u626b\u63cf\u4e00\u904d\u6765\u5bfb\u5f97\u6700\u4f18\u6bb5\u843d\u3002\n\n\n\u90a3\u4e48\u91cd\u70b9\u662f\uff0c\u5982\u4f55\u5bf9\u6bb5\u843d\u6574\u4f53\u626b\u63cf\u5462\uff1f\n\n\n\u6211\u4eec\u5728Hash\u65f6\u9996\u5148\u5bf9\u6bb5\u843d\u626b\u63cf\u505a\u597d\u9884\u5148\u5904\u7406\uff1a\u5bf9a[ ]\u5185\u5355\u8bcdHash\u65f6\u8bb0\u5f55a[ ]\u7684Hash\u503c\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4e0eb[ ]\u6bd4\u8f83\uff0c\u6211\u4eec\u5c06\u5176\u7528bool\u6570\u7ec4\u5b58\u50a8\uff08\u8fd9\u6837\u5c31\u76f8\u5f53\u4e8e\u7528\u6570\u7ec4\u6765\u8868\u793a\u8be5Hash\u503c\u662f\u5426\u51fa\u73b0\u8fc7\uff09\u3002\u5982\u679c\u8fd9\u4e2a\u5730\u65b9\u6ca1\u770b\u61c2\u7684\u8bdd\uff0c\u53bb\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\u5e94\u8be5\u5c31\u7406\u89e3\u4e86\u3002\u5bf9b[ ]\u5185\u5355\u8bcdHash\u65f6\uff0c\u6211\u4eec\u7528vis[]\u6570\u7ec4\u6765\u5bf9\u5176\u662f\u5426\u4e3a\u76ee\u6807\u5355\u8bcd\u505a\u6807\u8bb0\uff0c\u5982\u679c\u8be5\u5355\u8bcd\u7684Hash\u503c\u5728a[ ]\u4e2d\u5df2\u7ecf\u51fa\u73b0\u8fc7\uff0c\u8bf4\u660e\u8be5\u5355\u8bcd\u662f\u76ee\u6807\u5355\u8bcd\u4e4b\u4e00\uff0c\u5219\u5c06\u5176\u5bf9\u5e94\u7684vis[ ]\u6807\u8bb0\u4e3a1\uff0c\u540c\u65f6\u7528cnt\u8bb0\u5f55\u51fa\u73b0\u7684\u76ee\u6807\u5355\u8bcd\u7684\u79cd\u7c7b\u6570\u3002\n\n\n\u5b8c\u6210\u4e86\u9884\u5148\u5904\u7406\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8ba8\u8bba\u5982\u4f55\u5bf9\u6bb5\u843d\u8fdb\u884c\u626b\u63cf\u6c42\u89e3\u6700\u4f18\u6bb5\u843d\u3002\n\n\n\u6211\u4eec\u91c7\u7528\u679a\u4e3e\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u7684\u65b9\u6cd5\u6765\u5bf9\u6bb5\u843d\u8fdb\u884c\u626b\u63cf\u3002\u8fd9\u91cc\u6211\u662f\u4ece\u6700\u53f3\u7aef\u5411\u5de6\u5f00\u59cb\u679a\u4e3e\u533a\u95f4\u3002\u5982\u679c\u89c9\u5f97\u4ece\u5de6\u5f00\u59cb\u679a\u4e3e\u66f4\u597d\u7406\u89e3\u7684\u8bdd\uff0c\u7ffb\u5230\u6211\u7684\u9898\u89e3\u5e95\u90e8~\n\n\n\u6211\u4eec\u9996\u5148\u5bf9\u5de6\u7aef\u70b9\u8fdb\u884c\u79fb\u52a8\u3002\u79fb\u52a8\u5de6\u7aef\u70b9\u7684\u540c\u65f6\uff0c\u6211\u4eec\u4f7f\u7528appear[]\u8bb0\u5f55\u4e00\u4e0b\u76ee\u6807\u5355\u8bcd\u5728\u5f53\u524dl,r\u5305\u542b\u7684\u6bb5\u843d\u5185\u51fa\u73b0\u7684\u6b21\u6570\u3002\u5982\u679c\u8be5\u5355\u8bcd\u662f\u521d\u6b21\u51fa\u73b0\uff0c\u90a3\u4e48cnt--\uff08\u6216\u8005\u518d\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u51fa\u73b0\u4e00\u79cd++\u4e00\u4e0b\uff0c\u6700\u540e\u6bd4\u8f83\u662f\u5426\u548ccnt\u76f8\u7b49\u4e5f\u53ef\uff09\uff0c\u540c\u65f6appear[ ]++\uff08\u4e0d\u662f\u521d\u6b21\u51fa\u73b0\u4e5f\u8981\u52a0\uff0c\u952e\u89c1\u4ee3\u7801\uff09\u3002\u5982\u679ccnt=0\u4e86\uff0c\u90a3\u4e48\u8bf4\u660e\u5f53\u524d\u6211\u4eec\u679a\u4e3e\u7684\u6bb5\u843d\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u6709\u79cd\u7c7b\u7684b[ ]\u5185\u76ee\u6807\u5355\u8bcd\u3002\u8fd9\u65f6\u9996\u5148\u6211\u4eec\u66f4\u65b0ans\u503c\u6765\u5b58\u50a8\u5f53\u524d\u7684\u6700\u4f18\u89e3\uff0c\u7136\u540e\u5bf9\u53f3\u7aef\u70b9\u8fdb\u884c\u64cd\u4f5c\u3002\u7136\u540e\u5982\u679c\u5f53\u524d\u6211\u4eec\u7684\u53f3\u7aef\u70b9\u4e0a\u7684\u5355\u8bcd\u4e0d\u662f\u76ee\u6807\u5355\u8bcd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u5b83\u820d\u53bb\uff0c\u5373r--\uff1b\u5982\u679c\u53f3\u7aef\u70b9\u4e0a\u7684\u5355\u8bcd\u5728\u5f53\u524d\u679a\u4e3e\u6bb5\u843d\u5185\u5df2\u7ecf\u91cd\u590d\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ef\u5c06\u5176\u820d\u53bb\u3002\u5982\u679c\u53f3\u7aef\u70b9\u4e0a\u7684\u5355\u8bcd\u662f\u76ee\u6807\u5355\u8bcd\u4e14\u4ec5\u51fa\u73b0\u4e00\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u5b83\u820d\u53bb\u7684\u65f6\u5019\u5c31\u518d\u5c06cnt++\uff0c\u7136\u540e\u8fdb\u884c\u4e0b\u4e00\u6b21\u626b\u63cf\u3002\u8fd9\u4e2a\u5730\u65b9\u662f\u6700\u96be\u7406\u89e3\u7684\uff0c\u5982\u679c\u60f3\u4e0d\u660e\u767d\u7684\u8bdd\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u3002\n\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff08\u5df2\u5305\u542b\u6ce8\u89e3\uff09\uff1a\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\ntypedef long long ll;\nconst int p=909043; \nint base=313;\nint n,m,cnt,ans=1<<30,l,r;\nchar s[33];\nint a[100003],b[100003];\nint appear[5000003],vis[5000003],pre[5000003];\n//pre[]\u8bb0\u5f55\u7075\u68a6\u8981\u80cc\u7684\u5355\u8bcd\n//vis[]\u8bb0\u5f55\u7075\u68a6\u8981\u80cc\u7684\u5355\u8bcd\u5728\u7ed9\u51fa\u7684\u6bb5\u843d\u4e2d\u662f\u5426\u51fa\u73b0\n//appear[]\u8bb0\u5f55\u8981\u80cc\u7684\u5355\u8bcd\u5728\u76ee\u524d\u641c\u7d22\u5230\u7684\u6bb5\u843d\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \nint hashs(char qwq[])\n{\n    int len=strlen(qwq);\n    int sum=0;\n    for(int i=0;i<len;i++)\n    {\n        sum=(sum*base+qwq[i])%p;\n    }\n    return sum;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        cin>>s;\n        a[i]=hashs(s);\n        pre[a[i]]=1;\n    }\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        cin>>s;\n        b[i]=hashs(s);\n        if(pre[b[i]]&&!vis[b[i]])\n        {\n            vis[b[i]]=1;\n            cnt++;\n        }\n    }\n    if(cnt==0)\n    {\n        printf(\"0\\n0\");//\u4e00\u5b9a\u8981\u8bb0\u5f97\u8ba8\u8bba\u8fd9\u79cd\u60c5\u51b5QAQQ \n        return 0;\n    }\n    else printf(\"%d\\n\",cnt);\n    l=m;//\u4ece\u53f3\u5411\u5de6\u626b \n    r=m;\n    while(true)\n    {\n        if(!cnt)//cnt==0\u65f6\u5bf9\u7b54\u6848\u8fdb\u884c\u66f4\u65b0 \n        {\n            while(!vis[b[r]]) r--;\n            //\u5982\u679c\u533a\u95f4\u53f3\u7aef\u70b9\u4e0d\u662f\u7075\u68a6\u8981\u80cc\u7684\u5355\u8bcd\u5c31\u5c06\u6bb5\u843d\u957f\u5ea6\u7f29\u5c0f \n            ans=min(ans,r-l);//\u60f3\u60f3\u4e3a\u4ec0\u4e48\u4e0d\u662f(r-l+1)\u5440qwq    \n            if(appear[b[r]]>=1) \n            {\n                if(appear[b[r]]==1)\n                {\n                    cnt++;\n                }\n                appear[b[r]]--;\n                r--;\n            }\n            //\u5982\u679c\u53f3\u7aef\u70b9\u7684\u5355\u8bcd\u5df2\u7ecf\u5728\u6bb5\u843d\u91cc\u51fa\u73b0\u8fc7\u4e86\uff0c\u5c31\u53ef\u4ee5\u7f29\u5c0f\u6bb5\u843d\u957f\u5ea6\n            //\u5982\u679c\u53f3\u7aef\u70b9\u7684\u5355\u8bcd\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u53f3\u7aef\u70b9\u5411\u5de6\u79fb\u7684\u540c\u65f6\u8981cnt++(\u56e0\u4e3a\u8fd9\u79cd\u5355\u8bcd\u5728\u5f53\u524d\u679a\u4e3e\u6bb5\u843d\u5185\u5df2\u7ecf\u4e0d\u518d\u51fa\u73b0\u5566) \n        }\n        else\n        {\n            if(l==0) break; \n            if(vis[b[l]])\n            {\n                if(!appear[b[l]])//\u5982\u679c\u8fd9\u79cd\u5355\u8bcd\u5728\u5f53\u524d\u679a\u4e3e\u7684\u6bb5\u843d\u91cc\u521d\u6b21\u51fa\u73b0\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u5f53\u524d\u6bb5\u843d\u5185\u7684\u79cd\u7c7b\u6570\u52a0\u4e00 \n                {\n                    cnt--;\n                }\n                appear[b[l]]++;//\u8be5\u79cd\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u589e\u52a0 \n            }\n            l--;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u5514\uff0c\u6700\u540e\u63a8\u8350\u4e00\u4efd\u548c\u6211\u601d\u8def\u5dee\u4e0d\u591a\u7684\u4ee3\u7801\uff1aUid\u4e3a35527\uff0c\u53ef\u4ee5\u5728\u63d0\u4ea4\u8bb0\u5f55\u91cc\u627e\u5230\u3002\u4e2a\u4eba\u8ba4\u4e3aTA\u7684\u4ee3\u7801\u6bd4\u6211\u7684\u66f4\u6613\u7406\u89e3\uff0c\u5199\u8d77\u6765\u4e5f\u6bd4\u6211\u7684\u7b80\u5355\uff0c\u67d0\u4e9b\u7ec6\u8282\u4f18\u5316\u505a\u7684\u4e5f\u6bd4\u6211\u5230\u4f4d\uff0c\u89c9\u5f97\u4ece\u53f3\u7aef\u70b9\u679a\u4e3e\u4e0d\u5982\u4ece\u5de6\u7aef\u70b9\u65b9\u4fbf\u7406\u89e3\u4e00\u4e9b\u7684\u8bdd\u5c31\u53bb\u770b\u4e00\u4e0bTA\u7684\u5427\u3002\n",
        "postTime": 1508469103,
        "uid": 32529,
        "name": "Merak",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "# \u6807\u9898\uff1a\u4f18(~~c~~)\u7f8e(~~n~~)\u7684(~~m~~)\u7684\u201c\u5c3a\u53d6\u6cd5\u201d\n\n\n\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u9053\u201c\u5c3a\u53d6\u6cd5\u201d\u7684\u6a21\u7248\u9898\u3002\u8bdd\u8bf4\u5c3a\u53d6\u6cd5\uff0c\u7b80\u5355\u5730\u8bf4\uff0c\u5176\u4f5c\u7528\u5c31\u662f\u5bf9\u7ed9\u5b9a\u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u5728\u5e8f\u5217\u4e2d\u5bfb\u627e\u5305\u542b\u5168\u90e8\u9700\u6c42\u7684\uff0c\u957f\u5ea6\u6700\u5c0f\u7684\u4e00\u6bb5\u5b50\u5e8f\u5217\u7684O(n)\u7684\u4f18\u79c0\u7b97\u6cd5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u7684\u4f5c\u7528\u8fdc\u4e0d\u6b62\u8fd9\u4e9b\u3002\n\n\n\u5176\u8fc7\u7a0b\u901a\u5e38\u53ef\u4ee5\u8fd9\u6837\u63cf\u8ff0\uff1a\n\n- \u521d\u59cb\u5316\u5de6\u53f3\u4e0b\u6807l,r\u5230\u9002\u5f53\u4f4d\u7f6e;\n\n- \u4e0d\u505c\u7684\u5411\u53f3\u79fb\u52a8r\uff0c\u76f4\u5230r\u51fa\u754c\u6216\u8005[l,r]\u81ea\u533a\u95f4\u5df2\u7ecf\u6ee1\u8db3\u8981\u6c42\n\n- \u63a5\u4e0b\u6765```ans=min(ans,r-l+1)```\uff0c\u6ce8\u610f\u7a0b\u5e8f\u4e2d\u5f80\u5f80\u533a\u95f4\u662f\u6307[l,r+1]\uff0c\u6240\u4ee5```ans=min(ans,r-l)```;\n- \u79fb\u52a8l\u5230\u9002\u5f53\u4f4d\u7f6e\u3002\u91cd\u590d\u7b2c\u4e00\u4e2a\u8fc7\u7a0b\u3002\n\n\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\uff08\u8fd9\u6837\u4e00\u5b9a\u80fd\u626b\u63cf\u5230\u6700\u4f18\u89e3\uff0c~~\u4e0d\u4fe1\u4f60\u5728\u8349\u7a3f\u7eb8\u4e0a\u753b\u4e00\u753b\uff1f~~\uff09\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\uff0c\u6ce8\u610f\u7279\u5224\uff1a\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int P=10000019;\nint str_hash(char* a) {\n    int ln=strlen(a);\n    long long res=0;\n    for(int i=0;i<ln;i++) {\n        res*=31,res+=a[i]-'a';\n        res%=P;\n    }\n    return res%P;\n}\nint n,m,p1,p2=1<<30;\nint a[1001],b[100010];\nint vis[P];\nbool need[P];\nint main() {\n    char in[101];\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) {\n        scanf(\"%s\",in);\n        a[i]=str_hash(in);\n        need[a[i]]=1;\n    }\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++) {\n        scanf(\"%s\",in);\n        b[i]=str_hash(in);\n        if(need[b[i]]&&!vis[b[i]]) {\n            p1++,vis[b[i]]=1;  \n        }\n    }\n    if(p1==0) {\n        printf(0\\n0\\n);\n        return 0;\n    }\n    memset(vis,0,sizeof vis);\n    int l=1,r=1,cnt=p1;\n    while(1) {\n        if(!cnt) {\n            while(!need[b[l]]) l++;\n            if(l==m+1) break;\n            p2=min(p2,r-l);\n            if(vis[b[l]]==1) cnt++;\n            if(vis[b[l]]>=1) vis[b[l]]--,l++; \n        } else {\n            if(r==m+1) break;\n            if(need[b[r]]) {\n                if(!vis[b[r]]) cnt--;\n                vis[b[r]]++;\n            }\n            r++;\n        }\n    }\n    printf(\"%d\\n%d\\n\",p1,p2);\n    return 0;\n}\n\n```\n\n---\n\n05/11 \u6392\u7248\u66f4\u65b0",
        "postTime": 1512286646,
        "uid": 34920,
        "name": "\u65e9\u53f3\u6615",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "**\u8fd9\u662f\u4e00\u7bc7**\n- \u7b80\u6d01\u6613\u61c2\n- \u89e3\u6cd5\u8be6\u7ec6\n- \u4ee3\u7801\u4f18\u8d28\n\n**\u7684\u9898\u89e3**\n\n\u5e0c\u671b\u80fd\u591f\u5e2e\u5230\u60a8\u3002\n- - -\n## \u9898\u610f\n\u9996\u5148\u8f93\u5165 $m$ \u4e2a\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u8981\u4f60\u4ece\u63a5\u4e0b\u6765\u8f93\u5165\u7684 $n$ \u4e2a\u5355\u8bcd\u4e2d\u627e\u5230\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u533a\u95f4\u662f\u6240\u6709\u533a\u95f4\u4e2d\u5305\u542b\u6700\u591a\u7684\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u4e14\u662f\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\u7684\u533a\u95f4\u4e2d\u957f\u5ea6\u6700\u77ed\u7684\u4e00\u4e2a\uff0c\u8f93\u51fa\u957f\u5ea6\u3002\u540c\u65f6\uff0c\u5728\u8f93\u51fa\u957f\u5ea6\u4e4b\u524d\u4f60\u8fd8\u8981\u8f93\u51fa\u8fd9\u6240\u6709 $n$ \u4e2a\u5355\u8bcd\u4e2d\u5305\u542b\u4e86\u591a\u5c11\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\u3002\n\n## \u89e3\u51b3\u7b2c\u4e00\u95ee\n\n\u5f53\u7136\u8fd9\u662f\u4e00\u4e2a\u4e2d\u95f4\u7684\u8fc7\u7a0b\uff0c\u6bd4\u8f83\u7b80\u5355\u7684\u95ee\u9898\uff0c\u53ea\u9700\u8981\u5728\u53d1\u73b0\u4e00\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\u7684\u65f6\u5019\u5224\u65ad\u662f\u4e0d\u662f\u5df2\u7ecf\u7edf\u8ba1\u8fc7\u4e86\u4ed6\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u628a\u4ed6\u7edf\u8ba1\u4e00\u4e0b\uff0c\u5e76\u4e14\u6807\u8bb0\u4ed6\u4e3a\u7edf\u8ba1\u8fc7\u4e86\u3002\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n    ios::sync_with_stdio(false);\n    string str;\n    cin>>m;\n    for(int i=1;i<=m;i++) cin>>str,book[str]=1;\n    cin>>n;\n    for(int i=1;i<=n;i++) cin>>a[i];\n    for(int i=1;i<=n;i++) if(book[a[i]] && !flag[a[i]]) val++,flag[a[i]]=1;\n    cout<<val<<'\\n';  //val\u5373\u4e3a\u7b2c\u4e00\u95ee\u7b54\u6848\n```\n\n## \u89e3\u51b3\u7b2c\u4e8c\u95ee\n\n\u53ef\u4ee5\u77e5\u9053\u6211\u4eec\u8981\u627e\u7684\u8fd9\u4e2a\u533a\u95f4\u4e2d\u6240\u5305\u542b\u7684\u8981\u80cc\u7684\u5355\u8bcd\u6570\u5373\u4e3a $val$\u3002\u6211\u4eec\u53d1\u73b0\u533a\u95f4\u7684\u957f\u5ea6\u7684\u679a\u4e3e\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u533a\u95f4\u8d8a\u957f\uff0c\u5c31\u8d8a\u6709\u53ef\u80fd\u5305\u542b\u66f4\u591a\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u533a\u95f4\u8d8a\u77ed\uff0c\u5305\u542b\u7684\u8981\u80cc\u7684\u5355\u8bcd\u6570\u5c31\u8d8a\u5c11\u3002\n\n\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u60f3\u5230\u4e86\u4e8c\u5206\u7b54\u6848\uff0c\u8981\u4e8c\u5206\u7684\uff0c\u662f\u533a\u95f4\u7684\u957f\u5ea6\u3002\u6211\u4eec\u9700\u8981 $check$ \u7684\u6587\u7ae0\u4e2d\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3a $mid$ \u7684\u533a\u95f4\u6700\u591a\u80fd\u591f\u5305\u542b\u591a\u5c11\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\u3002\n\n\u9488\u5bf9 $check$\uff0c\u5982\u679c\u6211\u4eec\u679a\u4e3e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u50cf\u4e0b\u9762\u90a3\u6837\u5b50\uff1a\n```cpp\nfor(int i=1;i<=n-mid+1;i++,flag.clear(),ans=max(ans,cnt))\n\tfor(int j=i;j<=i+mid-1;j++)\n    \tif(book[a[j]] && flag[a[j]]==0) cnt++;\nreturn ans;\n```\n\u663e\u7136\u662f\u975e\u5e38\u4f4e\u6548\u7684\uff0c\u590d\u6742\u5ea6 $O(n^2)$\u3002\n\n\u66f4\u9ad8\u6548\u7684\u7b97\u6cd5\u662f\u6ed1\u52a8\u7a97\u53e3\u3002\u6211\u4eec\u60f3\uff0c\u50cf\u4e0b\u56fe\uff0c\u4ece\u9ed1\u8272\u6846\uff08\u524d\u4e00\u6b21\u679a\u4e3e\u7684\u533a\u95f4\uff09\u5230\u7ea2\u8272\u6846\uff08\u5f53\u524d\u6b63\u8981\u679a\u4e3e\u7684\u533a\u95f4\uff09\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u9ed1\u8272\u6846\u6709\u591a\u5c11\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u90a3\u4e48\u6211\u4eec\u8be5\u5982\u4f55\u63a8\u5bfc\u51fa\u7ea2\u8272\u6846\u4e2d\u6709\u591a\u5c11\u8981\u80cc\u7684\u5355\u8bcd\u5462\uff1f\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8bb0\u4e4b\u524d\u533a\u95f4\u7684\u7b54\u6848\u4e3a $cnt$\u3002\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/petspwmi.png)\n\n1. \u5982\u679c $a_{c0}$ \u820d\u6389\u4e4b\u540e\u533a\u95f4\u4e2d\u4f1a\u5c11\u4e00\u79cd\u5355\u8bcd\uff0c\u90a3\u4e48\u5c31\u628a $cnt$ \u51cf\u4e00\u3002\u5426\u5219\uff08\u820d\u6389 $a_{c0}$ \u4e4b\u540e\u5b9e\u5219\u533a\u95f4\u4e2d\u8fd8\u6709\u5176\u4ed6\u7684 $a_{c0}$\uff0c\u4ed6\u51fa\u73b0\u4e86\u591a\u6b21\uff09\uff0c\u90a3\u4e48\u820d\u6389\u5c31\u820d\u6389\u5427\uff0c\u6ca1\u5f71\u54cd\uff0c$cnt$ \u4e0d\u53d8\u3002\n2. \u5982\u679c $a_i$ \u52a0\u4e0a\u4e4b\u540e\u533a\u95f4\u4e2d\u4f1a\u591a\u4e00\u79cd\u5355\u8bcd\uff0c\u90a3\u4e48\u5c31\u628a $cnt$ \u52a0\u4e00\u3002\u5426\u5219\uff08\u533a\u95f4\u4e2d\u672c\u6765\u5c31\u6709 $a_i$ \u8fd9\u4e2a\u5355\u8bcd\uff09\uff0c\u90a3\u52a0\u4e0a\u4e86\u8fd9\u4e2a $a_i$ \u6ca1\u5f71\u54cd\uff0c$cnt$ \u4e0d\u53d8\u3010\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c\u5982\u679c\u201c\u533a\u95f4\u4e2d\u672c\u6765\u5c31\u6709\u7684 $a_i$\u201d\u5176\u5b9e\u662f $a_{c0}$ \u5462\uff1f\u90a3\u662f\u4e0d\u662f\u8bf4\u6211\u4eec\u5c31\u767d\u767d\u7684\u8ba9 $cnt$ \u51cf\u4e00\u4e86\uff1f\u5176\u5b9e\u6211\u4eec\u4e0d\u5fc5\u591a\u8651\u2014\u2014\u8fd9\u79cd\u60c5\u51b5\u6216\u8bb8\u5bf9\u7b54\u6848\u6709\u5f71\u54cd\uff0c\u53ef\u662f\u4e8b\u5b9e\u8bc1\u660e\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7684\u7b54\u6848\uff0c\u5f53\u7136\uff0c\u5982\u679c\u4f60\u63a8\u7ffb\u4e86\u6b64\u7ed3\u8bba\uff0c\u4f60\u53ef\u4ee5\u79c1\u4fe1\u6211 $\\color{silver}{\\tiny{\u4e5f\u53ef\u4ee5\u79c1\u4fe1\u51fa\u9898\u4eba--\u5212\u6389}}$\u3011\u3002\n\n\u8fd9\u4e00\u6bb5\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nint check(int x){\n    int c0=1,cnt=0,ans=0;\n    vis.clear();\n    for(int i=1;i<=x;i++) {\n        if(book[a[i]] && !vis[a[i]]) cnt++;\n        if(book[a[i]]) vis[a[i]]++;\n    }\n    for(int i=x+1;i<=n;i++){\n        ans=max(cnt,ans);\n        if(book[a[i]] && !vis[a[i]])\n            cnt++;\n        if(book[a[c0]] && vis[a[c0]]-1==0) \n            cnt--;\n        vis[a[i]]++,vis[a[c0]]--;\n        c0++;\n    } \n    return max(cnt,ans);\n}\nint search(){\n    int L=-1,R=n,mid;\n    while(L<R-1){\n        mid=(L+R)/2;\n        if(check(mid)==val) R=mid;\n        else L=mid;\n    }\n    return R;\n}\n```\n\n\u5230\u6b64\uff0c\u4e3b\u8981\u90e8\u5206\u90fd\u8bf4\u5b8c\u4e86\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <string>\n#include <unordered_map>\nusing namespace std;\nint m,n,val;\nstring a[100005];\nunordered_map<string,int> book,flag,vis;\nint check(int x){\n    int c0=1,cnt=0,ans=0;\n    vis.clear();\n    for(int i=1;i<=x;i++) {\n        if(book[a[i]] && !vis[a[i]]) cnt++;\n        if(book[a[i]]) vis[a[i]]++;\n    }\n    for(int i=x+1;i<=n;i++){\n        ans=max(cnt,ans);\n        if(book[a[i]] && !vis[a[i]])\n            cnt++;\n        if(book[a[c0]] && vis[a[c0]]-1==0) \n            cnt--;\n        vis[a[i]]++,vis[a[c0]]--;\n        c0++;\n    } \n    return max(cnt,ans);\n}\nint search(){\n    int L=-1,R=n,mid;\n    while(L<R-1){\n        mid=(L+R)/2;\n        if(check(mid)==val) R=mid;\n        else L=mid;\n    }\n    return R;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    string str;\n    cin>>m;\n    for(int i=1;i<=m;i++) cin>>str,book[str]=1;\n    cin>>n;\n    for(int i=1;i<=n;i++) cin>>a[i];\n    for(int i=1;i<=n;i++) if(book[a[i]] && !flag[a[i]]) val++,flag[a[i]]=1;\n    cout<<val<<'\\n'<<search()<<endl;\n    return 0;\n}  //p.s.\u7531\u4e8e\u5361\u5e38\uff0c\u8bf7\u7528 c++17(luogu c++ \u4e0d\u652f\u6301 unordered_map)\u5916\u52a0O2\u4f18\u5316\u63d0\u4ea4\n```",
        "postTime": 1591845003,
        "uid": 300078,
        "name": "pengyule",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u611f\u89c9\u6709\u70b9\u5355\u8c03\u961f\u5217\u7684\u5f71\u5b50\n\n\u8003\u8651\u8fd9\u9898\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u56fa\u5b9a\u53f3\u7aef\u70b9\uff0c\u961f\u5217\u91cc\u5b58\u7684\u662f\u5de6\u7aef\u70b9\uff0c\u6bcf\u6b21\u66f4\u65b0\u7b54\u6848\u65f6\uff0c\n\n\u53ea\u9700\u770b\u5de6\u7aef\u8fd9\u4e2a\u5143\u7d20\u5728\u5de6\u7aef\u548c\u53f3\u7aef\u4e4b\u95f4\u6709\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u51fa\u73b0\u4e86\u90a3\u4e48\u5de6\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\uff0c\u7136\u540e\u66f4\u65b0\u7b54\u6848\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<map>\nusing namespace std;\nconst int maxn=100000+10;\nint n,m,h,t;\nint tot,num,ans=0x7f7f7f7f;\nmap<string,int>mapp;\nchar s[maxn];\nint a[maxn],b[maxn],q[maxn];\nbool vis[maxn];\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",s);\n        mapp[s]=i;\n    }scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%s\",s);a[i]=mapp[s];//printf(\"%d \",a[i]);\n        if(a[i]==0)continue;\n        if(!vis[a[i]])tot++,vis[a[i]]=true;\n    }h=1;t=0;\n    for(int i=1;i<=m;i++)\n    {\n        if(b[a[i]]==0 && a[i]!=0)\n        {\n            num++;\n        }b[a[i]]=i;q[++t]=i;\n        while(h<=t && q[h]<b[a[q[h]]])h++;\n        if(num==tot)ans=min(ans,i-q[h]+1);\n    }\n    if(num==0)printf(\"0\\n0\\n\");\n    else printf(\"%d\\n%d\\n\",tot,ans);\n}\n```",
        "postTime": 1506302306,
        "uid": 25365,
        "name": "zhouenji",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "\u8be6\u7ec6\u4ee3\u7801\u4e0e\u6ce8\u91ca\u5982\u4e0b\uff1a\n\n```cpp\n//#pragma GCC optimize(3)\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ninline int read() {\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') {\n\t\tif(c == '-') {\n\t\t\tf = -1;\n\t\t}\n\t\tc = getchar();\n\t}\n\twhile (c <= '9' && c >= '0') {\n\t\tx = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\n\t}\n\treturn x * f;\n}\n\n#define Mem(a, x) memset(a, x, sizeof(a))\n#define Binary l + r >> 1\n#define Inf 2147483647\n#define Maxn 1001\n#define Maxm 100001\n\nconst int kM = 1000007;  // \u8d28\u6570\n\nint h[kM], a[Maxm], b[Maxn];\n\nstring s[Maxn];\n\nint n, m, ans, ansl;\n\ninline int Hash(int x) {  // \u8ba1\u7b97\u7b2cx\u4e2a\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\n\tint v = 0;\n\tfor (register int i = 0; i < s[x].size(); ++i) {  // \u679a\u4e3e\u6bcf\u4e2a\u5b57\u7b26\n\t\tv = ((v << 8) + s[x][i]) % kM;  // \u79fb\u4f4d\uff0c\u4e0e\u5f53\u524d\u5b57\u7b26\u76f8\u52a0\uff0c\u53d6\u6a21\n\t}\n\treturn v;\n}\n\ninline int Find(int x) {  // \u67e5\u627e\u7b2cx\u4e2a\u5b57\u7b26\u4e32\n\tint p = Hash(x);\n\twhile (h[p]) {            // \u4f4d\u7f6e\u6709\u5b57\u7b26\u4e32\n\t\tif (s[h[p]] == s[x]) {  // \u627e\u5230\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\n\t\t\treturn p;\n\t\t}\n\t\tp = (p + 1) % kM;  // \u7ebf\u6027\u63a2\u6d4b\n\t}\n\treturn p;  // \u627e\u5230\u7a7a\u4f4d\u7f6e\n}\n\ninline void Calc() {\n\tint r = 0; // \u4ece\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5f00\u59cb\u9700\u8981\u80cc\u8bf5\u7684\u53f3\u8fb9\u754c\n\tb[0] = -1; // \u4e0d\u8003\u8651\u4e0d\u9700\u8981\u80cc\u7684\u5355\u8bcd\n\tfor (register int i = 1; i <= m; ++i) {  // \u6309\u987a\u5e8f\u68c0\u67e5\u5355\u8bcd\n\t\tif (!b[a[i]]) {               // \u7b2c\u4e00\u6b21\u51fa\u73b0\n\t\t\tans++;                      // \u7d2f\u52a0\u7b54\u6848\n\t\t\tr = i;         // \u66f4\u65b0\u9700\u8981\u80cc\u7684\u6709\u8fb9\u754c\n\t\t\tb[a[i]] = -1;  // \u6807\u8bb0\u51fa\u73b0\n\t\t}\n\t}\n\tif (!ans) {  // \u6ca1\u6709\u7b54\u6848\u5219\u65e0\u9700\u7ee7\u7eed\u8ba1\u7b97\n\t\treturn;\n\t}\n\tfor (register int i = m, t; i >= 1; --i) {  // \u6c42\u51fa\u6bcf\u4e2a\u6570\u4e0b\u4e00\u4e2a\u76f8\u540c\u6570\u7684\u4f4d\u7f6e\n\t\tt = a[i];\n\t\tif (t) {        // \u5f53\u524d\u4f4d\u7f6e\u6709\u6570\n\t\t\ta[i] = b[t];  // \u8bb0\u5f55\u4e0b\u4e00\u4e2a\u76f8\u540c\u6570\u7684\u4f4d\u7f6e\n\t\t\tb[t] = i;     // \u8bb0\u5f55\u5f53\u524d\u6570\u7684\u4f4d\u7f6e\n\t\t}\n\t}\n\tansl = r;                           // \u521d\u59cb\u5316\u7b54\u6848\n\tfor (register int i = 1; a[i] != -1; ++i) {  // \u4f9d\u6b21\u4ece i + 1\u5f00\u59cb\u80cc\u8bf5\n\t\tr = max(r, a[i]);                 // \u81f3\u5c11\u8981\u80cc\u5230\u4e0b\u4e00\u4e2a\u76f8\u540c\u6570\n\t\tansl = min(ansl, r - i);          // \u66f4\u65b0\u7b54\u6848\n\t}\n\treturn;\n}\n\nint main() {\n\tn = read();\n\tfor (register int i = 1; i <= n; ++i) {\n\t\tcin >> s[i];\n\t\tint p = Find(i);  // \u67e5\u627e\u4f4d\u7f6e\n\t\th[p] = i;         // \u63d2\u5165\n\t}\n\tm = read();\n\tfor (register int i = 1; i <= m; ++i) {\n\t\tcin >> s[0];\n\t\tint p = Find(0);  // \u67e5\u627e\u4f4d\u7f6e\n\t\ta[i] = h[p];      // \u8bb0\u5f55\u7f16\u53f7\n\t}\n\tCalc();\n\tprintf(\"%d\\n\", ans);\n\tprintf(\"%d\\n\", ansl);\n\treturn 0;\n}\n```\n",
        "postTime": 1578814981,
        "uid": 130812,
        "name": "XyzL",
        "ccfLevel": 0,
        "title": "P1381 \u5355\u8bcd\u80cc\u8bf5 \u9898\u89e3"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n#### \u5b57\u7b26\u4e32\u54c8\u5e0c\u52a0\u5c3a\u53d6\u6cd5\u679a\u4e3e\u533a\u95f4\u3002\n\n~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u8fd9\u4fe9\u77e5\u8bc6\u70b9\u6211\u90fd\u662f\u73b0\u5b66\u7684~~\u3002\n\n\u4e00\u5f00\u59cb\u7684\u601d\u8def\u7ea6\u7b49\u4e8e\u6ca1\u6709\u601d\u8def\uff1a\u6328\u4e2a\u679a\u4e3e\uff0c\u9010\u5b57\u7b26\u5339\u914d\uff08\u61a8\u6279\uff09\uff0c\u533a\u95f4\u679a\u4e3e\u3002\u540e\u6765\u53d1\u73b0\u6076\u5fc3\u7684\u8981\u547d\uff0c\u6839\u672c\u8fde\u6253\u7684\u52c7\u6c14\u90fd\u6ca1\u6709\u3002\n\n\u4e8e\u662f\u5b57\u7b26\u4e32\u54c8\u5e0c\u4e0a\u573a\u4e86\u3002\u6211\u5bf9\u54c8\u5e0c\u7684\u7406\u89e3\u5c31\u662f\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u6210\u4e00\u4e2a\u6570\uff0c\u7b80\u5316\u5b57\u7b26\u4e32\u5339\u914d\u7684\u8fc7\u7a0b\u3002\n\n\u5173\u4e8e\u54c8\u5e0c\uff0c\u5982\u6709\u4e0d\u4f1a\u8bf7\u79fb\u6b65\u672c\u849f\u84bb\u7684\u603b\u7ed3\u535a\u5ba2\uff1a\n\n[\u6d45\u8c08\u5b57\u7b26\u4e32Hash](https://www.cnblogs.com/fusiwei/p/11736860.html)\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u628a\u8981\u80cc\u7684\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u5b58\u5230a\u6570\u7ec4\u4e2d\uff0c\u5e76\u6253\u4e0a\u6807\u8bb0\u3002\u628a\u6587\u7ae0\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u5b58\u5230b\u6570\u7ec4\u4e2d\u3002\u7136\u540e\u6838\u5bf9\u6807\u8bb0\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b2c\u4e00\u95ee\u4e86\u3002\n\n\u7b2c\u4e8c\u95ee\u662f\u672c\u9898\u7684\u96be\u70b9\u3002\n\n\u5982\u4f55\u6c42\u51fa\u4e00\u4e2a\u6700\u77ed\u7684\u7b26\u5408\u8981\u6c42\u7684\u5e8f\u5217\u957f\u5ea6\u5462\uff1f\n\n\u66b4\u529b\u7684\u601d\u8def\u662f\u533a\u95f4\u679a\u4e3e\u5de6\u53f3\u7aef\u70b9\uff0c\u6838\u5bf9\u662f\u5426\u7b26\u5408\u6761\u4ef6\u3002\u4f46\u662f\u8fd9\u6837\u505a\u663e\u7136\u4e0d\u884c\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u7528\u5c3a\u53d6\u6cd5\u4f18\u5316\u533a\u95f4\u679a\u4e3e\u3002\n\n\u5173\u4e8e\u5c3a\u53d6\u6cd5\uff0c\u5982\u6709\u4e0d\u592a\u4e86\u89e3\u7684\u8bf7\u79fb\u6b65\u672c\u849f\u84bb\u7684\u603b\u7ed3\u535a\u5ba2\uff1a\n\n[\u5c3a\u53d6\u6cd5\u8bb2\u89e3](https://www.cnblogs.com/fusiwei/p/11313817.html)\n\n\u4e86\u89e3\u4e86\u5c3a\u53d6\u6cd5\u7684\u57fa\u672c\u5185\u6db5\u3002\u9488\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5229\u7528\u5c3a\u53d6\u7684\u5b9e\u73b0\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\n\n\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6c42\u5f97\u4e86\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7528\u8fd9\u4e2a\u5df2\u77e5\u7b54\u6848\u6765\u786e\u5b9a\u8fd9\u4e2a\u533a\u95f4\u662f\u5426\u662f\u53ef\u884c\u7684\u89e3\u3002\u5177\u4f53\u64cd\u4f5c\u65b9\u6cd5\u662f\uff1a\u5efa\u7acb\u4e00\u4e2a$appear[]$\u6570\u7ec4\uff0c\u5b58\u6bcf\u4e2a\u5355\u8bcd\uff08\u5f53\u7136\u662f\u4ed6\u4eec\u7684\u54c8\u5e0c\u503c\uff09\u51fa\u73b0\u7684\u6b21\u6570\u3002\u5982\u679c\u8fd9\u4e2a\u8bcd\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u90a3\u4e48\u663e\u7136\u76ee\u524d\u533a\u95f4\u4e2d\u7684\u5355\u8bcd\u6570\u91cf\u5e94\u8be5\u52a0\u4e00\u3002\u540c\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\u8981\u662f\u5927\u4e8e\u7b49\u4e8e1\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5c1d\u8bd5\u8fdb\u884c\u820d\u53bb\uff0c\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u66f4\u4f18\u7684\u9009\u62e9\u3002\n\n\u8fd9\u4e2a\u5730\u65b9\u4f1a\u6bd4\u8f83\u96be\u7406\u89e3\uff1a\u6211\u628a\u5b83\u53eb\u505a**\u201d\u4e0d\u80fd\u504f\u5b89\u4e00\u9685\u201c**\uff0c\u6211\u4eec\u4e0d\u80fd\u53ea\u662f\u5728$appear[]$\u5927\u4e8e1\u7684\u65f6\u5019\u820d\u53bb\u8fd9\u4e2a\u70b9\uff0c\u7b49\u4e8e1\u7684\u65f6\u5019\u4e00\u6837\u8981\u820d\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u5c31\u662f\u56e0\u4e3a\uff0c\u5047\u5982\u4f60\u9009\u62e9\u4e86\u8fd9\u4e2a\u5355\u8bcd\u4f5c\u4e3a\u533a\u95f4\u4e2d\u552f\u4e00\u51fa\u73b0\u7684\u76ee\u6807\u5355\u8bcd\uff0c\u4f46\u662f\u5b83\u548c\u533a\u95f4\u4e2d\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u53e6\u4e00\u4e2a\u76ee\u6807\u5355\u8bcd\u975e\u5e38\u8fdc\uff0c\u4f46\u662f\u533a\u95f4\u5916\u9762\u8fd8\u6709\u4e00\u4e2a\u5355\u8bcd\uff0c\u548c\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u76ee\u6807\u5355\u8bcd\u8d85\u7ea7\u8fd1\u3002\u8fd9\u4e2a\u65f6\u5019\u4f60\u5e94\u8be5\u9009\u54ea\u4e00\u79cd\u5462\uff1f\u663e\u800c\u6613\u89c1\uff0c\u90a3\u4e2a\u66f4\u8fd1\u7684\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f\u66f4\u4f18\u7684\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u5728$appear[]$\u7b49\u4e8e1\u7684\u65f6\u5019\u4e5f\u8fdb\u884c\u820d\u53bb\uff0c\u7136\u540e\u7ee7\u7eed\u626b\u63cf\u3002\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u7684$ans$\u5df2\u7ecf\u88ab\u66f4\u65b0\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u6101\u7b54\u6848\u9519\u8bef\u3002\n\n\u7136\u540e\u5c31\u6c42\u5f97\u4e86\u7b2c\u4e8c\u95ee\u7684\u7b54\u6848\u3002\n\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u9053\u9898\u7684\u601d\u8def\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u7684\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u592a\u5927\u7684\u96be\u70b9\u3002\u4e3b\u8981\u662f\u5c3a\u53d6\u6cd5\u90e8\u5206\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\u4ee5\u53ca\uff0c\u63d0\u9192\u5927\u5bb6\uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u8981\u5f00\u7684\u548c\u6a21\u6570\u4e00\u6837\u5927\uff0c\u5426\u5219\u5c31\u4f1a\u6709\u51e0\u7387RE...\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int maxn=1010;\nconst int maxm=1e5+10;\nconst int mod=1e6;\nconst int p=31;\nconst int INF=1e9;\nint n,m,cnt,ans=INF,l,r;\nint a[maxn],b[maxm],appear[mod];\nchar input[110];\nbool need[mod],v[mod];\nint hash(char s[])\n{\n    int len=strlen(s);\n    ll ret=0;\n    for(int i=0;i<=len;i++)\n    {\n        ret*=p,ret+=s[i]-'a';\n        ret%=mod;\n    }\n    return ret%=mod;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",input);\n        a[i]=hash(input);\n        need[a[i]]=1;\n    }\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%s\",input);\n        b[i]=hash(input);\n        if(need[b[i]] && !v[b[i]])\n            cnt++,v[b[i]]=1;\n    }\n    if(!cnt)\n    {\n        puts(\"0\");\n        puts(\"0\");\n        return 0;\n    }\n    else\n        printf(\"%d\\n\",cnt);\n    l=1,r=1;\n    while(1)\n    {\n        if(cnt)\n        {\n            if(r>m)\n                break;\n            if(need[b[r]])\n            {\n                if(!appear[b[r]])\n                    cnt--;\n                appear[b[r]]++;\n            }\n            r++;\n        }\n        else\n        {\n            while(!need[b[l]])\n                l++;\n            if(l>m)\n                break;\n            ans=min(ans,r-l);\n            if(appear[b[l]]==1)\n                cnt++;\n            if(appear[b[l]]>=1)\n                appear[b[l]]--,l++;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1571990874,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "## \u7b97\u6cd5\uff1a \u5355\u8c03\u961f\u5217\uff1f\n\n~~\u5439\u7206\u5e73\u677f\u7535\u89c6\uff01~~ \u80fd\u7528\u9ed1\u79d1\u6280\u7684\u8bdd\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a\u5462\n\n\u5927\u81f4\u601d\u8def\u5c31\u662f\u6807\u8bb0\u6bcf\u4e2a\u5355\u8bcd\u6700\u540e\u4e00\u6b21\u5728\u6587\u7ae0\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c \u7136\u540e\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u542b\u6700\u591a\u5355\u8bcd\u7684\u533a\u95f4\uff0c \u5e76\u4e14\u5de6\u7aef\u70b9\u5c3d\u53ef\u80fd\u7684\u9760\u53f3\n\n\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u5355\u8bcd\u5c31\u538b\u5230\u961f\u5c3e\uff0c \u5e76\u4e14\u4e0d\u65ad\u5f39\u51fa\u961f\u5934\u7684\u5355\u8bcd\uff0c\u76f4\u5230\u961f\u5934\u7684\u5355\u8bcd\u5728\u961f\u5217\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u662f\u4ed6\u6700\u540e\u4e00\u6b21\u5728\u6587\u7ae0\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u7136\u540e\u4e0d\u65ad\u66f4\u65b0\u7b54\u6848\n\n### \u7ec6\u8282\uff1a\n\n1\uff09 \u8981\u628a\u5b57\u7b26\u4e32\u7f16\u53f7\uff0c\u4e24\u79cd\u65b9\u5f0f:\u4e00\u79cd\u5c31\u662f\u624b\u5199hash\uff0c\u4e00\u79cd\u5c31\u7528map\u5427\n\n\u542c\u8bf4map\u662fO(logn) \u8c8c\u4f3c\u5e73\u677f\u7535\u89c6\u91cc\u7684\u662fO(1) \u7528\u4e86\u4e00\u4e0b\u611f\u89c9\u98de\u5feb\n\n\n2\uff09 \u6587\u7ae0\u91cc\u51fa\u73b0\u7684\u4e0d\u4e00\u5b9a\u662f\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u611f\u89c9\u8fd9\u4e2a\u90fd\u60f3\u7684\u5230\u5427\uff0c\u4e5f\u5c31\u6211\u849f\u84bb\u5230\u4e00\u5f00\u59cb\u56e0\u4e3a\u8fd9\u4e2aWA\u3002\u3002\u3002\n\n3\uff09 \u8981\u80cc\u7684\u5355\u8bcd\u4e0d\u4e00\u5b9a\u4f1a\u5728\u6587\u7ae0\u91cc\u51fa\u73b0\uff0c\u6240\u4ee5\u66f4\u65b0\u7b54\u6848\u7684\u65f6\u5019\u5c31\u8981\u6ce8\u610f\u70b9\uff0c\u591a\u80cc\u5355\u8bcd\u6bd4\u6587\u7ae0\u77ed\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u6bcf\u51fa\u73b0\u4e00\u4e2a\u4ece\u672a\u5728\u4e4b\u524d\u6587\u7ae0\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u5c31\u628a\u5355\u8bcd\u6570+1\uff0c \u957f\u5ea6\u5176\u5b9e\u5c31\u662f\u5f53\u524d\u4f4d\u7f6e\u5230\u961f\u5934\u7684\u4f4d\u7f6e\u90a3\u4e48\u957f\uff0c\u6211\u4e3a\u4e86\u65b9\u4fbf\uff0c\u76f4\u63a5\u8bbe\u6210\u65e0\u7a77\u5927\uff0c\u53cd\u6b63\u4e0b\u9762\u8981\u66f4\u65b0\u3002\u3002\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/hash_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define reg register\nconst int N = 1000 + 5;\n\nstruct node { int pos, val; }; //pos\u5c31\u662f\u538b\u8fdb\u961f\u5217\u65f6\u7684\u4f4d\u7f6e\uff0c val\u5c31\u662f\u7f16\u53f7\ngp_hash_table<string, int> id;\nint n, m, ans1, ans2; string str;\nint v[N]; queue<node> q;\n\nint main() {\n    ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    cin>>n;\n    for (reg int i=1; i<=n; ++i) cin>>str, id[str]=i;\n    ans1=ans2=0;\n    cin>>m;\n    for (reg int i=1; i<=m; ++i) {\n        cin>>str; if (id.find(str)==id.end()) continue;\n        int k=id[str];\n        if (!v[k]) ++ans1, ans2=INT_MAX; //\u4e4b\u524d\u672a\u51fa\u73b0\u5355\u8bcd\u8fd9\u6837\u5904\u7406\n        v[k]=i; q.push((node){i, k});\n        while (q.front().pos!=v[q.front().val]) q.pop(); //\u6838\u5fc3\u90e8\u5206\n        ans2=min(ans2, i-q.front().pos+1);\n    }\n    cout<<ans1<<endl<<ans2<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1546695569,
        "uid": 26023,
        "name": "_Atyou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "~~\u6765\u81ea\u4e00\u540d\u79bbcsp\u4e8c\u8f6e\u53ea\u6709\u534a\u5468\u65f6\u95f4\u4e86\u624d\u5b66\u4f1a\u54c8\u5e0c\u7684\u849f\u84bb\u7684\u9898\u89e3~~\n\n\u7ffb\u4e86\u4e0b\u9898\u89e3\uff0c\u770b\u5230\u5927\u4f6c\u4eec\u90fd\u662f\u5dee\u4e0d\u591a\u90fd\u662f\u5355\u54c8\u5e0c\u52a0map\uff08\u5f53\u7136\u4e5f\u6709\u5f88\u591a\u7528\u522b\u7684\u9a9a\u65b9\u6cd5\u7684\u5927\u4f6cORZ\uff09\uff0c\u8fd8\u6ca1\u6709\u4e00\u4e2a\u7528\u53cc\u54c8\u5e0c\u7684\u3002\n\n\u4e2a\u4eba\u4e0d\u662f\u5f88\u719f\u6089map\uff08\u90fd\u8981\u4e8c\u8f6e\u4e86\u7b49\u4f1a\u513f\u8fd8\u662f\u53bb\u5b66\u4e00\u5b66\uff09\uff0c\u800c\u4e14\u591a\u5355\u54c8\u5e0c\u603b\u6709\u4e00\u79cd\u89c9\u5f97\u4e0d\u7a33\u7684\u611f\u89c9\uff0c\u559c\u6b22\u7528\u53cc\u54c8\u5e0c\u3002\u800c\u53cc\u54c8\u5e0c\u914d\u5408Map\u7684\u8bdd\u5bf9\u6211\u8fd9\u4e2a\u4e0d\u719f\u6089map\u7684\u849f\u84bb\u66f4\u662f\u96be\u4e0a\u52a0\u96be\uff08\u8bdd\u8bf4\u771f\u7684\u6709\u4e8c\u7ef4map\u8fd9\u79cd\u4e1c\u897f\u5417\u3002\u3002\uff09\u3002\n\n\u6240\u4ee5\u5c31\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a:\n\n### \u53cc\u54c8\u5e0c\uff0c\u6392\u5e8f+lowerbound\u5b9e\u73b0map\u7684\u6548\u679c\uff0c\u6700\u540e\u5c3a\u53d6\u6cd5\u89e3\u51b3\u7b2c\u4e8c\u95ee\u3002\n\n\u90fd\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u7684\u5e94\u8be5\u90fd\u5df2\u7ecf\u719f\u6089hash\u64cd\u4f5c\u4e86\u5427,\u672c\u849f\u84bb\u5728\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\uff0c\u60f3\u5b66\u7684\u53ef\u4ee5\u53bb[\u54c8\u5e0c\u6a21\u677f](https://www.luogu.org/problem/P3370)\n\n\u5177\u4f53\u7ec6\u8282\u5b9e\u73b0\u770b\u4ee3\u7801\u5427\u3002\n\n\u9644\u4e0a\u5de8\u4e11\u4ee3\u7801\u4e00\u4efd\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define base 131\n#define int unsigned long long\t\t//\u61d2\u9b3c\u5199\u6cd5(\u642d\u914dsigned main\u4f7f\u7528) \nusing namespace std;\nstruct node\n{\n\tint x,y;//\u4e24\u4e2a\u4e0d\u540c\u7684\u54c8\u5e0c\u503c \n\tfriend bool operator < (node x,node y)//\u4ee5x\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f \n\t{\n\t\treturn x.x<y.x;\n\t}\n}a[1005];//\u50a8\u5b58\u5355\u8bcd\u8868 \nint cnt[1005];//\u5c3a\u53d6\u6cd5\u5f53\u524d\u533a\u95f4\u5185\u6bcf\u4e2a\u5355\u8bcd(\u4ee5\u4e0b\u6807\u8868\u793a)\u51fa\u73b0\u7684\u6b21\u6570 \nint b[100005];//\u50a8\u5b581\u6587\u7ae0\u4e2d\u5bf9\u5e94\u5355\u8bcd\u7684\u4f4d\u7f6e \nbool vis[1005];\nint HSH(string s,int mod)//\u6807\u51c6\u7684\u54c8\u5e0c \n{\n\tint ans=0;\n\tint sz=s.size();\n\tfor(int i=0;i<sz;i++)\n\t{\n\t\tans=(ans*base+s[i])%mod;\n\t}\n\treturn ans;\n}\nsigned main()\n{\n\tint n,ans1=0,ans2=1000000;\n\tcin>>n;\n\tstring tmp;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>tmp;\n\t\ta[i].x=HSH(tmp,1e9+7);\n\t\ta[i].y=HSH(tmp,1e9+9);//\u54c8\u5e0c\u5904\u7406 \n\t}\n\tsort(a+1,a+n+1);//\u6392\u5e8f\u4ee5\u4fbflowerbound\u5bf9\u7167\u4e0b\u6807 \n\tint m;\n\tcin>>m;\n\tfor(int i=1;i<=m;i++) \n\t{\n\t\tcin>>tmp;\n\t\tnode tsh=node{HSH(tmp,1e9+7),HSH(tmp,1e9+9)};\n\t\tint p=lower_bound(a+1,a+n+1,tsh)-a;//p\u8868\u793a\u6587\u7ae0\u4e2d\u8be5\u5355\u8bcd\u5728\u5355\u8bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4f46\u6709\u53ef\u80fd\u5355\u8bcd\u8868\u4e2d\u6ca1\u6709)\n\t\tbool flag=0;//\u8bb0\u5f55\u5230\u5e95\u6709\u6ca1\u6709\u8fd9\u4e2a\u5355\u8bcd \n\t\tfor(;;p++)\n\t\t{\n\t\t\tif(a[p].x==tsh.x)//\u5982\u679c\u7b2c\u4e00\u7ef4\u76f8\u540c \n\t\t\t{\t\n\t\t\t\tif(a[p].y==tsh.y)//\u7b2c\u4e8c\u7ef4\u4e5f\u76f8\u540c\uff0c\u90a3\u5c31\u5dee\u4e0d\u591a\u662f\u4e00\u4e2a\u4e86\uff08\u8fd9\u90fd\u80fd\u649e\u5230\u4e24\u4e2a\u5c31\u771f\u662f\u89c1\u9b3c\u4e86\u3002\u3002\u3002\uff09 \n\t\t\t\t{\n\t\t\t\t\tb[i]=p;//\u8bb0\u5f55\u4f4d\u7f6e \n\t\t\t\t\tif(!vis[p])\n\t\t\t\t\t{\n\t\t\t\t\t\tvis[p]=1;\n\t\t\t\t\t\tans1++;\n\t\t\t\t\t}\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t//\u53ef\u80fd\u5b58\u5728\u7b2c\u4e00\u4f4d\u76f8\u540c\u7b2c\u4e8c\u7ef4\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u627e\u4e0b\u4e00\u4e2a\u4f4d\u7f6e \n\t\t\t}\n\t\t\telse//\u7b2c\u4e00\u7ef4\u90fd\u4e0d\u540c \n\t\t\t\tbreak;//\u90a3\u5c31\u80af\u5b9a\u4e0d\u884c\u4e86 \n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tb[i]=n+1;//\u6ca1\u627e\u5230\u7684\u8bdd\u5c31\u628a\u4ed6\u7684\u5bf9\u5e94\u4e0b\u6807\u653e\u5230n+1 \n\t\t}\n\t}\n\tcnt[n+1]=10000000;//\u4e0d\u5b58\u5728\u7684\u4e1c\u897f\u65e0\u8bba\u662f\u8fdb\u4e86\u5c3a\u53d6\u6cd5\u8303\u56f4\u8fd8\u662f\u51fa\u4e86\u5c3a\u53d6\u6cd5\u8303\u56f4\u90fd\u4e0d\u5e94\u8be5\u5f71\u54cd\u8ba1\u6570 \n\tfor(int i=1,cntn=0/*\u7edf\u8ba1\u5f53\u524d\u6709\u51e0\u79cd\u5355\u8bcd*/,l=1/*\u5de6\u6307\u9488*/;i<=m;i++)\n\t{\n\t\tif(!cnt[b[i]])//\u5982\u679c\u8fd9\u4e2a\u5355\u8bcd\u672a\u51fa\u73b0\u8fc7 \n\t\t{\n\t\t\tcntn++;//\u5355\u8bcd\u79cd\u7c7b\u6570+1 \n\t\t}\n\t\tcnt[b[i]]++;//\u8fd9\u79cd\u5355\u8bcd\u7684\u6570\u91cf+1 \n\t\twhile(cnt[b[l]]>1)//\u5982\u679c\u533a\u95f4\u5f00\u5934\u90a3\u4e2a\u5355\u8bcd\u662f\u591a\u4f59\u7684\uff08\u4e5f\u5c31\u662f\u5728\u540e\u9762\u8fd8\u4f1a\u51fa\u73b0\uff09 \n\t\t{\n\t\t\tcnt[b[l]]--;//\u5c31\u5220\u53bb\u5b83 \n\t\t\tl++;//\u5e76\u79fb\u52a8\u5de6\u6307\u9488 \n\t\t}\n\t\tif(cntn==ans1)//\u5df2\u7ecf\u51fa\u73b0\u4e86\u5168\u90e8\u5355\u8bcd \n\t\t{\n\t\t\tans2=min(ans2,i-l+1);//\u8ba1\u7b97\u7b54\u6848 \n\t\t}\n\t}\n\tcout<<ans1<<endl<<(ans2==1000000?0:ans2);//\u5982\u679cans2\u65e0\u6cd5\u66f4\u65b0\uff0c\u518d\u7279\u522b\u8f93\u51fa\u4e00\u4e0b \n\treturn 0;\n}\n```\n",
        "postTime": 1573476036,
        "uid": 114732,
        "name": "Derpy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "\u505a\u6cd51\uff1aHash\u4e71\u641e\uff0c\u5224\u65ad\u4e00\u4e0b\n\n\u505a\u6cd52\uff1a\u66b4\u529bmap\uff0c\u7528map\u6c42\u51fa\u7b2c\u4e00\u4e2a\u7b54\u6848\uff0c\u7136\u540e\u7528\u6307\u9488\u5f80\u540e\u4e00\u626b\u8fc7\u53bb\uff0c\u540c\u65f6\u66f4\u65b0\u7b54\u6848\u3002\n\n\u505a\u6cd53\uff1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u6210\u6570\u5b57\u7136\u540e\u8fdb\u884c\u64cd\u4f5c\uff1b\n\n\u6211\u7528\u7684\u662f\u7b2c\u4e8c\u79cd\u505a\u6cd5\uff0cmap\u53ef\u4ee5\u76f4\u63a5\u5728string\u4e0a\u9762\u64cd\u4f5c\uff0c\u5f88\u5feb\u5f88\u65b9\u4fbf\u3002\u7b80\u5355\u53c8\u81ea\u7136\u3002\u3002\u3002\n\n```cpp\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<string>\nusing namespace std;\nstring a[200005];\nmap<string,int> v;\nmap<string,bool> v1,v2;\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tstring s1;\n\t\tcin>>s1;\n\t\tv1[s1]=1;\n\t}\n\tint ans1=0;\n\tint m;\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tstring ch;\n\t\tcin>>ch;\n\t\ta[i]=ch;\n\t\tif(v1[ch])\n\t\t{\n\t\t\tif(v2[ch])\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tv2[ch]=1;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans1);\n\tint head=1;\n\tint cnt=0;\n\tint ans2=1e9;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(v1[a[i]]==0)\n\t\tcontinue;\n\t\tstring s=a[i];\n\t\tif(v[s]==0)\n\t\tcnt++;\n\t\tv[s]++;\n\t\twhile((v1[a[head]]==0) || (v[a[head]]==0 && head<i))\n\t\t{\n\t\t\tv[a[head]]--;\n\t\t\thead++;\n\t\t}\n\t\tif(cnt==ans1)\n\t\t{\n\t\t\tans2=min(ans2,i-head+1);\n\t\t}\n\t}\n\tif(ans2>=1e9)\n\tprintf(\"0\\n\");\n\telse\n\tprintf(\"%d\\n\",ans2);\n\treturn 0;\n}\n```\n",
        "postTime": 1572763569,
        "uid": 114514,
        "name": "zzr8178541919",
        "ccfLevel": 7,
        "title": "\u5355\u8bcd\u80cc\u8bf5"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/whx666/p/11409650.html)\n\n\u5176\u5b9e\u8fd9\u9898\u8ddfhash\u6ca1\u4ec0\u4e48\u5173\u7cfb,\u76f4\u63a5\u7528\u961f\u5217\u505a\u5c31\u53ef\u4ee5\u4e86\uff08[\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u8fc7\u5f97\u53bb](https://www.luogu.org/record/23319072)\uff09\u3002\n\n\u9700\u8981\u9884\u5904\u7406\u7684\u4fe1\u606f\uff1a\u6587\u7ae0\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u5bf9\u5e94\u76f8\u540c\u7684\u8981\u80cc\u7684\u5355\u8bcd\uff08\u4e0b\u6807\uff09\n\n\u8fd9\u91cc\u5148\u5c06\u8981\u80cc\u7684\u5355\u8bcd\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206(lower_bound)\u67e5\u627e\u63d0\u9ad8\u6548\u7387\uff08\u6253\u4e71\u987a\u5e8f\u4e0d\u5f71\u54cd\u7ed3\u679c\uff09\n\n\u7136\u540e\u4ece1\u5230m\u904d\u5386\u6587\u7ae0\u4e2d\u7684\u5355\u8bcd\n\n\u8981\u505a\u7684\u4e8b\u60c5\u5982\u4e0b\uff1a\n\n1\u3001\u5c06\u5f53\u524d\u7684\u4e0b\u6807\u52a0\u5165\u961f\u5217\uff0c\u5e76\u66f4\u65b0\u6700\u4f18\u89e3\uff08\u6700\u591a\u5355\u8bcd\u6570\uff09\n\n2\u3001\u4e0d\u96be\u770b\u51fa\uff1a\u5982\u679c\u961f\u9996\u7684\u5143\u7d20\u5728\u961f\u5217\u4e2d\u5df2\u7ecf\u51fa\u73b0\u591a\u6b21(>1)\uff0c\u5c06\u961f\u9996\u5220\u9664\u7b54\u6848\u66f4\u4f18\uff08\u591a\u4f59\u7684\u6570\uff09\n\n3\u3001\u66f4\u65b0\u6700\u5c0f\u957f\u5ea6\uff08\u5982\u679c\u8fd9\u4e2a\u5355\u8bcd\u4e4b\u524d\u672a\u51fa\u73b0\uff0c\u76f4\u63a5\u8d4b\u503c\u4e3a\u961f\u5217\u957f\u5ea6\uff0c\u5426\u5219\u4e0e\u81ea\u8eab\u53d6min\u503c\uff09\n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, m, ans, minl, now, p[100005], vis[1005]; \n//vis\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\uff0cp\u8868\u793a\u6587\u7ae0\u4e2d\u6bcf\u4e2a\u8bcd\u5bf9\u5e94\u7684\u8981\u80cc\u7684\u8bcd \nstring s, str[1005];\nint main() {\n\tscanf (\"%d\", &n);\n\tfor (register int i = 1; i <= n; ++i)  cin >> str[i];\n\tsort (str + 1, str + n + 1);\n\tscanf (\"%d\", &m);\n\tfor (register int i = 1; i <= m; ++i) {\n\t\tcin >> s;\n\t\tint t = lower_bound (str + 1, str + n + 1, s) - str;   //\u4e8c\u5206\u67e5\u627e\u5bf9\u5e94\u7684\u8bcd \n\t\tif (str[t] == s)  p[i] = t; \n\t}\n\tqueue <int> q;  vis[0] = 1e9;   //0\u8868\u793a\u6ca1\u6709\u5bf9\u5e94\u7684\u8bcd\uff0c\u65b9\u4fbf\u5904\u7406\u8d4b\u4e3a\u6781\u5927\u503c \n\tfor (register int i = 1; i <= m; ++i) {\n\t\tint k(0);     //k\u6807\u8bb0\u5f53\u524d\u7b54\u6848\u662f\u5426\u6709\u66f4\u65b0 \n\t\tif (!vis[p[i]]) k = 1, ans++;\n\t\tq.push(i), vis[p[i]]++;\n\t\tint t = q.front();\n\t\twhile (vis[p[t]] > 1 and q.size()) --vis[p[t]], q.pop(), t = q.front();   //\u5220\u9664\u961f\u9996\u591a\u4f59\u7684\u6570 \n\t\tint tmp = q.size();\n\t\tif (k)  minl = tmp;\n\t\telse minl = min (minl, tmp);   //\u5982\u679c\u7b54\u6848\u6709\u66f4\u65b0\uff0c\u76f4\u63a5\u8d4b\u503c\u4e3a\u961f\u5217\u957f\u5ea6\uff0c\u5426\u5219\u4e0e\u81ea\u8eab\u53d6min\u503c \n\t}\n\tprintf (\"%d\\n%d\", ans, minl);\n\treturn 0;\n}\n```\n",
        "postTime": 1566742493,
        "uid": 84619,
        "name": "\u6e05\u5c18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "map\u76f8\u4fe1\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u4eca\u5929\u7ed9\u5927\u5bb6~~\u9686\u91cd~~\u63a8\u8350\u4e00\u4e2a\u65f6\u95f4\u5feb\u4e8emap\u7684\u4e1c\u897f\u2014\u2014unordered_map\u3002\n\n### - \u4ec0\u4e48\u662funordered_map\uff1f\n\n\u65e0\u5e8f\u7684map~~\u8bf4\u4e86\u8ddf\u6ca1\u8bf4\u4e00\u6837~~\n\n~~\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e0b\u6807\u53ef\u4ee5\u662f\u4efb\u4f55\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\uff0c\u7406\u8bba\u8bbf\u95ee\u65f6\u95f4\u4e3aO(1)\u7684\u540a\u6253map\u7684C++11\u7528\u6237\u624d\u80fd\u7528\u7684\u798f\u5229~~\n\n### - \u5982\u4f55\u4f7f\u7528unordered_map?\n\n```\n#include <unordered_map>\n//\u5176\u5b9e\u4e07\u80fd\u5934\u4e5f\u884c\n```\n\n\u5f53\u7136\u9996\u5148\u5f97\u7528C++11\u7f16\u8bd1\u3002\n\n### - unordered_map\u7684\u4f5c\u7528\n\n~~\u662f\u5426\uff0c\u4f60\u66fe\u56e0\u4e3a\u6876\u7684\u4e0b\u6807\u8fc7\u5927\u800c\u4e0d\u5f97\u4e0d\u4f7f\u7528\u79bb\u6563\u5316\uff1f~~\n\n~~\u662f\u5426\uff0c\u4f60\u66fe\u56e0\u4e3a\u5b57\u7b26\u4e32\u800c\u653e\u5f03\u4f7f\u7528\u6876\uff1f~~\n\n\u6709\u4e86unordered_map\uff0c\u4e00\u5207\u90fd\u4e0d\u662f\u95ee\u9898\uff0c\u800c\u4e14\u7531\u4e8e\u5185\u5bb9\u7684\u65e0\u5e8f\u6027\uff0c\u5b83\u7684\u65f6\u95f4\u8981\u8fdc\u8fdc\u4f18\u4e8emap\uff08\uff09\n\n\u81f3\u4e8e\u5b83\u7684\u7528\u6cd5\uff0c\u57fa\u672c\u7b49\u540c\u4e8emap\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u767e\u5ea6\n\n\u8d34\u4ee3\u7801\uff1a\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <string>\n#include <unordered_map> //\u4e0d\u52a0\u5b83\u7f16\u8bd1\u8fc7\u4e0d\u4e86\nusing namespace std;\n\nconst int N = 1003, M = 100003;\nunordered_map <string, int> w, k; //\u5b9a\u4e49\u65b9\u6cd5\u7b49\u540c\u4e8emap\nint n, m;\nstring a[N], b[M];\n\nint main () {\n\tscanf (\"%d\", &n);\n\tint i, j; for (i = 1; i <= n; ++i) {\n\t\tcin >> a[i];\n\t\t++w[a[i]];\n\t}\n\tscanf (\"%d\", &m);\n\tfor (i = 1; i <= m; ++i) cin >> b[i];\n\ti = j = 1;\n\tint now = 0;\n\tint ans = 0, minlen = (1 << 30);\n\twhile (j <= m) {\n\t\tif (w[b[j]] && !k[b[j]]) {\n\t\t\t++now;\n\t\t\tk[b[j]] = 1;\n\t\t} //\u5982\u679c\u8be5\u5355\u8bcd\u662f\u8981\u80cc\u7684\u4e14\u5728\u5f53\u524d\u533a\u95f4\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\n\t\telse ++k[b[j]]; \n\t\twhile (i <= j && (!w[b[i]] || k[b[i]] > 1)) {\n\t\t\t--k[b[i]];\n\t\t\t++i;\n\t\t} //\u5982\u679c\u5de6\u7aef\u70b9\u7684\u5355\u8bcd\u5728\u5f53\u524d\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u5927\u4e8e1\u5219\u53ef\u4ee5\u629b\u5f03\u6389\n\t\tif (now > ans) {\n\t\t\tans = now;\n\t\t\tminlen = j - i + 1;\n\t\t}\n\t\telse if (now == ans) minlen = min (minlen, j - i + 1);\n\t\t++j;\n\t}\n\tprintf (\"%d\\n%d\\n\", ans, minlen);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1566371682,
        "uid": 31193,
        "name": "\u68a7\u6850\u706f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "\u9996\u5148\u8bb0\u5f55\u5728\u6587\u7ae0\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\n\n\u6211\u4eec\u53ef\u4ee5\u7528map\u65b9\u4fbf\u5730\u8bb0\u5f55\u67d0\u4e2a\u5355\u8bcd\u662f\u5426\u662f\u8981\u80cc\u7684\u5355\u8bcd/\u662f\u5426\u88ab\u8bb0\u5f55\u8fc7\n\n\u7528vis\u8bb0\u5f55\u67d0\u4e2a\u5355\u8bcd\u662f\u5426\u662f\u8981\u80cc\u7684\u5355\u8bcd\uff0cvi\u8bb0\u5f55\u8fd9\u4e2a\u5355\u8bcd\u662f\u5426\u5df2\u7ecf\u88ab\u8bb0\u5f55\u8fc7\uff0c\u4ece\u800c\u6c42\u51fa\u6587\u7ae0\u4e2d\u8981\u80cc\u7684\u5355\u8bcd\u4e2a\u6570num\n\n\u7136\u540e\u679a\u4e3e\u6587\u7ae0\u4e2d\u51fa\u73b0\u7684\u6bcf\u4e00\u4e2a\u5355\u8bcd\uff0c\u7528cnt\u8bb0\u5f55\u6bb5\u843d\u4e2d\u6709\u591a\u5c11\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u7528v\u8bb0\u5f55\u6bcf\u4e2a\u5355\u8bcd\u5728\u6bb5\u843d\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u7528head\u8bb0\u5f55\u6bb5\u843d\u5f00\u5934\u7684\u4f4d\u7f6e\n\n\u5982\u679c\u5728head\u4f4d\u7f6e\u7684\u5355\u8bcd\u4e0d\u9700\u8981\u80cc/\u5728\u6bb5\u843d\u4e2d\u51fa\u73b0\u8fc7\u4e24\u6b21\u4ee5\u4e0a\uff0c\u5c31\u8ba9head\u524d\u79fb\u4e00\u4f4d\n\n\u5982\u679c\u6bb5\u843d\u4e2d\u8981\u80cc\u7684\u5355\u8bcd\u6570\u76ee\u7b49\u4e8enum\uff0c\u5c31\u6bcf\u6b21\u53d6\u6700\u5c0f\u957f\u5ea6\u4f5c\u4e3a\u7b54\u6848\n\n\u849f\u84bb\u8bed\u6587\u4e0d\u597d\uff0c\u8bf7\u7ed3\u5408\u4ee3\u7801\u7406\u89e3~\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<map>\n#include<string>\nusing namespace std;\nstring a[100003];\nmap<string,int> v;\nmap<string,bool> vis,vi;\nint n,m,head=1,cnt,num;\nint ans=2147483647;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tstring s;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>s;\n\t\tvis[s]=true;\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>s;\n\t\ta[i]=s;\n\t\tif(vis[s]&&!vi[s])\n        //\u8981\u80cc\u4e14\u4e4b\u524d\u6ca1\u6709\u8bb0\u5f55\n\t\t{\n\t\t\tvi[s]=true;\n\t\t\tnum++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",num);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\ts=a[i];\n\t\tif(!vis[s]) continue;\n        //\u4e0d\u9700\u8981\u80cc\u5c31continue\n\t\tif(!v[s]) cnt++;\n        //\u4e4b\u524d\u6ca1\u51fa\u73b0\u8fc7cnt\u5c31+1\n\t\tv[s]++;//\u51fa\u73b0\u6b21\u6570+1\n\t\twhile(!vis[a[head]]||(head<i&&v[a[head]]>1))\n        //\u4e0d\u9700\u8981\u80cc\u6216\u8005\u51fa\u73b0\u8fc7\u4e00\u6b21\u4ee5\u4e0a\n\t\t{\n\t\t\tv[a[head]]--;\n\t\t\thead++;\n\t\t}\n\t\tif(cnt==num) ans=min(ans,i-head+1);\n\t}\n\tif(ans!=2147483647) printf(\"%d\",ans);\n\telse printf(\"0\");\n    //\u4e00\u5b9a\u8981\u7279\u5224\uff01\u4e0d\u7136\u4f1aWA\u6389\u4e00\u4e2a\u70b9\n\treturn 0;\n}\n```\n\u5982\u679c\u6709\u66f4\u597d\u7684\u505a\u6cd5\uff0c\u6b22\u8fce\u63d0\u51fa~",
        "postTime": 1541596962,
        "uid": 91889,
        "name": "Dirt\u3001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "## \u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u63d0\u4f9b\u4e00\u79cd\u4e8c\u5206\u7684\u60f3\u6cd5\n\n```\n\n    Hash\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bb2\u4e86\n    \n    \u663e\u7136\uff0c\u9009\u62e9\u7684\u6587\u7ae0\u6bb5\u843d\u5c3d\u53ef\u80fd\u7684\u957f\uff0c\u5c31\u8d8a\u6709\u53ef\u80fd\u66f4\u4f18\u79c0\n    \n    \u5373m\u4e2a\u6570\u5168\u90e8\u9009\u4e00\u5b9a\u6ee1\u8db3\uff0c\u53ea\u9009n\u4e2a\u6570\u4e0d\u592a\u53ef\u80fd\u6ee1\u8db3\n    \n    \u662f\u5177\u6709\u5355\u8c03\u6027\u7684\n    \n    \u4e8c\u5206\u533a\u95f4\u957f\u5ea6\uff0cle=n,ri=m\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(logn)\n    \n    \u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u600e\u4e48\u5728O(n)\u7684\u590d\u6742\u5ea6\u91cc\u5224\u65ad\u5f53\u524d\u7684\u533a\u95f4\u957f\u5ea6\u662f\u5426\u53ef\u884c\n    \n    \u8fd9\u91cc\u7c7b\u4f3c\u4e8e\u83ab\u961f\u7684\u601d\u60f3\n    \n    \u5047\u8bbe\u4e8c\u5206\u51fa\u6765\u7684\u957f\u5ea6\u662flen\n    \u4e00\u4e2a\u5355\u8bcds\u88ab\u5b66\u4e60\u8fc7\u7684\u6b21\u6570\u662fcs[s]\n    \u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u662fans\n    \u5f53\u524d\u5b66\u4e60\u8fc7\u7684\u5355\u8bcd\u4e2a\u6570\u4e3ares\n    \n    \u5de6\u7aef\u70b9l\uff0c\u53f3\u7aef\u70b9r,\u95f4\u9694\u4e3alen\n    \u90a3\u4e48\u6211\u4eec\u8003\u8651\u5411\u5de6\u79fb\u52a8\n    \u5220\u53bb\u5de6\u7aef\u70b9\u5bf9res\u7684\u8d21\u732e\u662f\u4ec0\u4e48?\n    \n    \u5982\u679c\u5f53\u524d\u5355\u8bcds\u662f\u5e94\u5f53\u8981\u5b66\u4e60\u7684\n    \u5e76\u4e14cs[s]==1\n    \u90a3\u4e48\u8fd9\u4e2a\u5355\u8bcd\u7684\u8d21\u732e\u5c31\u6ca1\u6709\u4e86 res--\n    cs[s]--;\n    \n    \u53f3\u7aef\u70b9\u8d21\u732e\uff1f\n    \u5982\u679c\u5f53\u524d\u5355\u8bcds\u662f\u5e94\u5f53\u8981\u5b66\u4e60\u7684\n    \u5e76\u4e14cs[s]==0\n    \u90a3\u4e48\u8fd9\u4e2a\u5355\u8bcd\u7684\u8d21\u732e\u5c31\u4ea7\u751f res++\n    cs[s]++;\n    \n    res==ans\u5373\u5408\u6cd5\n    \n    \u603b\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\n    \n    \u9644\u4ee3\u7801\n    \n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#define il inline\n#define rg register\n#define ll long long\n#define ld long double\n#define N 100001\n#define M 1500000\n#define inf 2147483647\n#define mod 1226959\n#define base 27\nusing namespace std;\nint n,m,S[N],T[N];\nint ans,jud,vis[M],Std[M];\nstring p[N],q[N];\nil void re(rg int &x);\nil int f(string x);\nil int check(rg int len);\nint main(){\n\tfreopen(\"s.in\",\"r\",stdin);\n\tre(n);\n\tfor(rg int i=1;i<=n;++i){\n\t\tcin>>p[i],S[i]=f(p[i]);\n\t\tvis[S[i]]++,Std[S[i]]=vis[S[i]];\n\t}\n\tre(m);\n\tfor(rg int i=1;i<=m;++i){\n\t\tcin>>q[i],T[i]=f(q[i]);\n\t\tif(vis[T[i]])ans++,vis[T[i]]=0;\n\t}\n\tprintf(\"%d\\n\",ans),jud=ans;\n\tif(ans==0){\n\t\tputs(\"0\");\n\t\treturn 0;\n\t}\n\trg int le=n,ri=m;\n\twhile(le<=ri){\n\t\trg int mid=((le+ri)>>1);\n\t\tif(check(mid))ans=mid,ri=mid-1;\n\t\telse le=mid+1;\n\t}\n\tprintf(\"%d\",ans);\n    return 0;\n}\nint cs[M];\nil int check(rg int len){\n\tmemset(cs,0,sizeof(cs));\n\trg int cnt=0;\n\tfor(rg int i=1;i<=len;++i)\n\t\tif(Std[T[i]]){\n\t\t\tif(!cs[T[i]])cnt++;\n\t\t\tcs[T[i]]++;\n\t\t}\n\tif(cnt==jud)return 1;\n\tfor(rg int p=len+1;p<=m;++p){\n\t\tif(Std[T[p]]){\n\t\t\tif(!cs[T[p]])cnt++;\n\t\t\tcs[T[p]]++;\n\t\t}\n\t\tif(Std[T[p-len]]){\n\t\t\tif(cs[T[p-len]]==1)cnt--;\n\t\t\tcs[T[p-len]]--;\n\t\t}\n\t\tif(cnt==jud)return 1;\n\t}\n\treturn 0;\n}\nil int f(string x){\n\trg int now=0,i=0;\n\twhile(x[i])\n\t\tnow=(now*base+x[i])%mod,i++;\n\treturn now;\n}\nil void re(rg int &x){\n    x=0;rg int w=1;char c=getchar();\n    while((c<'0'||c>'9')&&c!='-')c=getchar();\n    if(c=='-')w=-1,c=getchar();\n    while(c>='0'&&c<='9')x=(x<<3)+(x<<1)+c-'0',c=getchar();\n    x*=w;\n}\n\n```",
        "postTime": 1528361217,
        "uid": 66915,
        "name": "Tyher",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5148\u7528hash\u5c06\u6bcf\u4e2a\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6574\u6570(\u5373\u5173\u952e\u5b57)\u8bfb\u8fdb\u6570\u7ec4,\u5904\u7406\u8d77\u6765\u5c31\u65b9\u4fbf\u591a\u4e86(\u4f46\u662f\u4f60\u4e0b\u4e00\u6b2111\u8fde\u4f1a\u4e00\u4e2aUR\u90fd\u6ca1\u6709)\n\n\u7136\u540e\u6211\u7684\u505a\u6cd5\u6bd4\u8f83\u795e\u5947\u3002\u3002\n\n**\u7b2c\u4e00\u95ee**\n\n- \u6211\u7528\u4e86\u4e00\u4e2a\u8d85\u5927\u7684\u6876\u8bb0\u5f55\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u518d\u7528\u53d8\u91cf tot \u7edf\u8ba1\u6587\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\n\n**\u7b2c\u4e8c\u95ee**\n\n- \u5c06\u7b2c\u4e00\u95ee\u4e2d\u5f97\u5230\u7684tot\u8d4b\u503c\u7ed9p,p\u662f\u8fd8\u9700\u5bfb\u627e\u7684\u5355\u8bcd\u6570\n\n- \u7136\u540e\u8fdb\u884c\u961f\u5217\u64cd\u4f5c\uff0c\u82e5\u8fd8\u672a\u627e\u5230\u5168\u90e8\u5355\u8bcd\u5219**\u5c3e\u6307\u9488++**\n\n- \u82e5\u627e\u5230\u4e00\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\u5c31\u7528\u53e6\u4e00\u4e2a\u6876\u8bb0\u5f55\u5230\u76ee\u524d\u4e3a\u6b62\u8be5\u5355\u8bcd\u51fa\u73b0\u7684\u6b21\u6570\n\n- \u82e5\u8be5\u5355\u8bcd\u662f\u7b2c\u4e00\u6b21\u627e\u5230\u5219p--;\n\n- \u82e5\u627e\u5230\u4e86\u6240\u6709\u7684\u5355\u8bcd\u5219\u5224\u65ad\u5f53\u524d\u5934\u5c3e\u6307\u9488\u95f4\u7684\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8eans\n\n**\u5904\u7406\u5934\u6307\u9488**\n\n- \u82e5\u627e\u5230\u4e00\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\u5219\u5224\u65ad\u8be5\u5355\u8bcd\u662f\u5426\u662f\u76ee\u524d\u627e\u5230\u7684\u6700\u540e\u4e00\u4e2a\n\n- if(\u4e0d\u662f)\u5934\u6307\u9488++;\u6876\u4e2d\u8be5\u5355\u8bcd\u6b21\u6570--\uff1b\n\n- else \u5934\u6307\u9488++\uff1b\u6876\u4e2d\u8be5\u5355\u8bcd\u6b21\u6570--\uff1bp++;\n\n- \u53cd\u590d\u5904\u7406\u5934\u6307\u9488\u5c3e\u6307\u9488\u5e76\u5728\u6bcf\u6b21\u627e\u5230\u6240\u6709\u5355\u8bcd\u65f6\u8bb0\u5f55ans\u76f4\u5230\u5c3e\u6307\u9488\u5230\u8fbem\n\n- \u6700\u540e\u5c31\u627e\u5230\u7b54\u6848\u4e86\n\n- \u54c8\u5e0c\u51fd\u6570\u57fa\u672c\u4e0a\u5c31\u662f\u4e2a\u62bd\u5956\u5668 \u3002\u3002\u75af\u72c2\u51b2\u7a81\n\n- \u4ee5\u4e0b\u8d34\u51fa\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nvoid stri();\nint hash_func(const char*);\nint pu[10]={3,13,31,131,313,1313,3131,13131,31313,131313},m,n,tot;\nll a[1005],b[100005],hi[3000000],c[3000000];\nint main()\n{\n    int k=n;\n    stri();\n    if(tot==0){cout<<0<<\"\\n\"<<0<<endl;return 0;}\n    cout<<tot<<endl;\n    sort(a,a+n);\n    int p=tot,l=0,r=0,ans=999999;\n    while(1)\n    {\n        if(p==0)\n        {\n            while(b[l]==0)l++;\n            if(ans>r-l){ans=r-l;}\n            if(c[b[l]]>1){c[b[l]]--;l++;}\n            else{c[b[l]]--;l++;p++;}\n        }\n        else\n        {\n            if(r==m)break;\n            if(hi[b[r]]!=0){c[b[r]]++;if(c[b[r]]==1)p--;}\n            r++;\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\nvoid stri()\n{\n    cin>>n;\n    char si[15];\n    ll t;\n    for(int i=0;i<n;++i)\n    {\n        cin>>si;\n        a[i]=hash_func(si);\n        hi[a[i]]=2;\n    }\n    cin>>m;\n    for(int i=0;i<m;++i)\n    {\n        cin>>si;\n        t=hash_func(si);\n        if(hi[t]==0)b[i]=0;\n        else b[i]=t;\n        if(hi[t]==2){hi[t]=1;tot++;}\n    }\n}\nint hash_func(const char *str)//key\u503c\n{\n    int to=0;\n    for(int i=0;i<strlen(str);++i)\n    {\n        to+=(str[i]-13)*pu[i];\n    }\n    return to%1313131+1;\n}\n```",
        "postTime": 1481113117,
        "uid": 25476,
        "name": "Zn_Hua",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "\u9700\u8981\u8003\u8651\u6ca1\u6709\u7b26\u5408\u7684\u5355\u8bcd\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u8f93\u51fa0 0\n\n\u4ee3\u7801\u957f\u4e14\u4e0d\u89c4\u8303\uff0c\u4f46\u601d\u8def\u7b80\u5355\u6613\u7406\u89e3\n\n\uff08\u54c8\u5e0c+\u5355\u8c03\u6027\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,e,wo;\nchar x[13];\nint b[10003];\nunsigned long long y[100005];\nunsigned long long q[15];\nunsigned long long g[1006],t[100005];\ninline unsigned long long has(char ss[13])\n{\n    unsigned long long tot=0;\n    for(int i=strlen(ss)-1;i>=0;i--)\n    {\n        tot+=(ss[i]-'a'+1)*q[i];\n    }\n    return tot;\n}\nbool ef(int l,int r,unsigned long long k)\n{\n    e=(l+r)>>1;\n    if(k==t[e]) return 1;\n    if(l==r) return 0;\n    if(k<t[e]) return ef(l,e,k);\n    else return ef(e+1,r,k);\n}\nint ff(int l,int r,unsigned long long k)\n{\n    e=(l+r)>>1;\n    if(k==g[e]) return e;\n    if(l==r) return 0;\n    if(k<g[e]) return ff(l,e,k);\n    else return ff(e+1,r,k);\n}\nvoid init()\n{\n    q[1]=1;\n    for(int i=2;i<=13;i++)\n    q[i]=q[i-1]*27;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",&x);\n        g[i]=has(x);\n    }\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%s\",&x);\n        t[i]=has(x);\n        y[i]=t[i];\n    }\n}\nint main()\n{\n    int tot=0,z;\n    init();\n    sort(t,t+m+1);\n    for(int i=1;i<=n;i++) if(ef(1,m,g[i])) tot++;\n    printf(\"%d\\n\",tot);wo=tot;\n    int l=0,r=0;int mi=m;\n    sort(g,g+n+1);\n    if(tot==0) mi=0;\n    else\n    while(1)\n    {\n        if(wo==0)\n        {\n            if(mi>r-l) mi=r-l;\n            l++;\n            z=ff(1,n,y[l]);\n            if(z!=0) {b[z]--;if(b[z]==0) wo++;}\n        }\n        else \n        {\n            if(r==m) break;\n            r++;\n            z=ff(1,n,y[r]);\n            if(z!=0) {b[z]++;if(b[z]==1) wo--;}\n        }\n    }\n    printf(\"%d\\n\",mi);\n    return 0;\n}\n```",
        "postTime": 1466822334,
        "uid": 12822,
        "name": "awipppp",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    },
    {
        "content": "# \u7b2c\u4e00\u95ee\uff08\u54c8\u5e0c\uff09\n\u8981\u4f7f\u5f97\u5305\u542b\u5355\u8bcd\u6700\u591a\uff0c\u90a3\u4e48\u5c31\u9700\u5c06\u6587\u7ae0\u4e2d\u6240\u6709\u5728\u5355\u8bcd\u8868\u4e2d\u51fa\u73b0\u8fc7\u7684\u5355\u8bcd\u5168\u90e8\u7edf\u8ba1\u3002\n\n\u800c\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u7684\u6bd4\u5bf9\u590d\u6742\u5ea6\u8fc7\u9ad8\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u6c42\u51fa\u5355\u8bcd\u8868\u4e0e\u6587\u7ae0\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5$O(1)$\u6bd4\u8f83\u4e86\u3002\u800c\u54c8\u5e0c\u4e4b\u540e\u7684\u503c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u76ee\u524d\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u6709\u4e24\u4e2a\u6570\u7ec4$A[]$\u548c$B[]$\uff0c$A[]$\u6570\u7ec4\u4e2d\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6570\u5728$B[]$\u4e2d\u51fa\u73b0\u8fc7\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u5f88\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a$bool$\u6570\u7ec4$C[]$\u4e0e$bool$\u6570\u7ec4$used[]$,\u626b \u4e00\u904d$A[]$\uff0c\u4ee5$A[]$\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e3a\u4e0b\u6807\uff0c\u8d4b\u503c\u4e3a$true$\u3002\u626b\u4e00\u904d$B[]$\uff0c\u5982\u679c$C[B[i]]==true$\u4e14$used[B[i]]=false$\u90a3\u4e48$cnt++$\uff0c$used[B[i]]$\u8d4b\u503c\u4e3a$true$\u3002\n\n\u90a3\u4e48\u5f88\u663e\u7136\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u54c8\u5e0c\u503c\u4f5c\u4e3a$C[]$\u6570\u7ec4\u7684\u4e0b\u6807\uff08\u8981\u4fdd\u8bc1\u5728\u6c42\u54c8\u5e0c\u4e4b\u6a21\u7684\u6570\u80fd\u4f5c\u4e3a\u6570\u7ec4\u4e0b\u6807\uff09\u6109\u5feb\u7684\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u3002\n```cpp\n    cin >> n;\n    for (int i = 0; i < n; i++){\n        cin >> s;\n        have[hsh(s)] = true;\n    }\n    cin >> m;\n    for (int i = 1; i <= m; i++){\n        cin >> s;\n        val[i] = hsh(s);\n        if (have[val[i]] && !used[val[i]]){\n            cnt++;\n            used[val[i]] = true;\n        }\n    }\n```\n\n\n\u6b64\u6b65\u590d\u6742\u5ea6\u4e3a$O(m)$\n\n# \u7b2c\u4e8c\u95ee\n## \u7b2c\u4e8c\u95ee\u66b4\u529b\u90e8\u5206\u5206\n### $O(m^3)$\u66b4\u529b\u679a\u4e3e\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u957f\u5ea6$len$\u5e76\u5206\u522b\u5224\u65ad\u4ece\u7b2c$i$\u4e2a\u5355\u8bcd\u5f00\u59cb\u4e3a\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u4e3a$len$\u5b50\u4e32\u662f\u5426\u5408\u6cd5\uff08\u5373\u5728$B[]$\u4e2d\u5b58\u5728\u8fde\u7eed\u7684\u957f\u5ea6\u4e3a$k$\u7684\u4e00\u6bb5\uff0c\u5305\u542b$cnt$\u4e2a\u5355\u8bcd\uff09\u3002\u5176\u4e2d$1\u2264len\u2264m$\uff0c\u5224\u65ad\u7684\u590d\u6742\u5ea6\u4e3a$O(m^2)$\n\n\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a$O(m^3)$\n\n### $O(m^2\\ log\\ m)$\u66b4\u529b\u4e8c\u5206\n\u5728\u4e0a\u9762\u6240\u63cf\u8ff0\u7684\u66b4\u529b\u4e2d\uff0c\u6211\u4eec\u5c06\u7b2c\u4e8c\u95ee\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u5224\u5b9a\u95ee\u9898\u3002\n\n\u800c\u5728\u6211\u4eec\u6240\u679a\u4e3e\u7684\u96c6\u5408\u5f88\u663e\u7136\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff1a\n\n\u5982\u679c\u7b54\u6848\u4e3a$k$\n\n\u90a3\u4e48\u5982\u679c\u957f\u5ea6\u5927\u4e8e$k$\u5fc5\u7136\u5408\u6cd5\n\n\u800c\u957f\u5ea6\u8981\u662f\u5c0f\u4e8e$k$\u5219\u5fc5\u7136\u4e0d\u5408\u6cd5\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u957f\u5ea6$len$\uff0c$check$\u7684\u590d\u6742\u5ea6\u4e3a$O(m^2)$\uff0c\u4e8c\u5206\u7684\u590d\u6742\u5ea6\u4e3a$O(log\\ m)$\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a$O(m^2\\ log\\ m)$\u3002\n\n## $O(m)$\u6b63\u89e3\n\u8bbe$f_{l,r}$\u4e3a\u4ece$B[l]$\u5230$B[r]$\u8fd9\u6bb5\u533a\u95f4\u5185\uff0c\u5305\u542b$A[]$\u4e2d\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u5f53$f_{l,r}=cnt$\u4e14$C[B[r]]=true$\u5e76\u6ee1\u8db3\u4e8e$C[B[r+1]]=false$\u65f6\n\n\n\u8bbe\u5176\u4e2d\u5305\u542b$cnt$\u4e2a$A[]$\u4e2d\u5143\u7d20\u4e2a\u6570\u7684\u6700\u77ed\u533a\u95f4\u4e3a$[a,b]$\uff08\u7b49\u4ef7\u4e8e$[a,r]$\uff09\n\n\u90a3\u4e48\u663e\u7136$f_{a,b}=f_{l,r}=f_{a,r}$\n\n\u90a3\u4e48\u6211\u4eec\u5219\u53ef\u4ee5\u7528$r - a + 1$\u66f4\u65b0\u5143\u7d20\n\n\n\n\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u96c6\u5408$S$\u4e0e$S'$\uff0c$S$\u5305\u62ec$B[l] \\sim B[r]$\uff0c$S'$\u5305\u62ec$B[a] \\sim B[r]$\n\n\u90a3\u4e48$(r-l+1)=|S|$\uff0c$(r-a+1)=|S'|$\n\n\u6211\u4eec\u5df2\u77e5$l,r$\u4e0e\u96c6\u5408$S$\uff0c\u63a5\u4e0b\u6765\u5373\u6c42\u51fa$a$\u4e0e$S'$\n\n\u56e0\u4e3a$f_{l,r}=f_{a,r}=cnt$\u4e14$[a,r]$\u4e3a\u5305\u542b$cnt$\u4e2a$A[]$\u4e2d\u5143\u7d20\u4e2a\u6570\u7684\u6700\u77ed\u533a\u95f4\n\n\u90a3\u4e48$f_{a+1,r}$\u5fc5\u7136\u5c0f\u4e8e$cnt$\n\n\u4e14$f_{l,r-1}$\u5fc5\u7136\u5c0f\u4e8e$cnt$\n\n\u4e14$[a,r]$\u4e3a\u8fde\u7eed\u7684\u4e00\u6bb5\n\n\u56e0\u6b64\u6211\u4eec\u5f97\u5230$S'$\u6700\u6734\u7d20\u7684\u505a\u6cd5\u5373\u4ece$l$\u5f00\u59cb\u4f9d\u6b21\u5220\u9664$B[i]$\u6240\u5bf9\u5e94\u7684\u96c6\u5408\u7684\u5143\u7d20\u3002\u5bf9\u5e94\u7684\u533a\u95f4\u4e3a$[c,r]$\u5f53$f_{c,r}<cnt$\u65f6$r-c+2$\u5373\u4e3a$r - a + 1$\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e$r$\uff0c\u8ba1\u7b97$f_{1,r}$\u5e76\u7ef4\u62a4\u96c6\u5408$S$\uff0c\u6bcf\u6b21\u679a\u4e3e\u63d2\u5165$B[r]$\u3002\n\n\u5f53$f_{1,r}=cnt$\u65f6\u4f9d\u6b21\u5220\u9664\u524d$i$\u4e2a\u5143\u7d20\uff0c\u76f4\u5230$f_{1,r}<cnt$\n\n\u5e76\u7528$|S'|+1$\u66f4\u65b0\u7b54\u6848\u3002\n\n\u800c\u5bf9\u4e8e\u96c6\u5408$S$\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5728\u4e00\u7aef\u63d2\u5165\uff0c\u4e00\u7aef\u5220\u9664\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u961f\u5217\u7ef4\u62a4\u3002\n\n\u800c\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u8fdb\u961f$1$\u6b21\u51fa\u961f$1$\u6b21\u3002\n\n\u56e0\u6b64\u590d\u6742\u5ea6\u4e3a$O(m)$\u3002\n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\nusing namespace std;\nconst int mod = 1000007;\nconst int base = 131;\nbool have[mod], used[mod];\nint val[100005],sum[mod];\nchar s[15];\nqueue<int> q;\n\nint hsh(char* s){\n    int ret = 0, len = strlen(s);\n    for (int i = 0; i < len; i++){\n        ret = (ret * base + s[i]) % mod;\n    }\n    return ret;\n}\n\nint main() {\n    int n, m, cnt = 0, len, now;\n\tcin >> n;\n    for (int i = 0; i < n; i++){\n        cin >> s;\n        have[hsh(s)] = true;\n    }\n    cin >> m;\n    for (int i = 1; i <= m; i++){\n        cin >> s;\n        val[i] = hsh(s);\n        if (have[val[i]] && !used[val[i]]){\n            cnt++;\n            used[val[i]] = true;\n        }\n    }\n    if (cnt == 0){\n        cout << 0 << endl;\n        cout << 0 << endl;\n    }else{\n        len = m;\n        now = 0;\n        for (int i = 1; i <= m; i++){\n            int queuelen = q.size();\n            q.push(i);\n            sum[val[i]]++;\n            if (have[val[i]] && sum[val[i]] == 1) now++;\n            if (now == cnt){\n                while (now == cnt){\n                    int v = q.front();\n                    q.pop();\n                    sum[val[v]]--;\n                    if (sum[val[v]] == 0 && have[val[v]]) now--;\n                }\n                queuelen = q.size() + 1;\n                len = min(len,queuelen);\n            } \n        }\n        cout << cnt << endl << len;\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1592459418,
        "uid": 317459,
        "name": "RyexAwl",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011\uff08\u54c8\u5e0c\uff0c\u961f\u5217\uff09"
    },
    {
        "content": "\u63d0\u9ad8+\u7684\u9898\u89e3\u597d\u6fc0\u52a8\u554a\uff1b\n\n\u8fd9\u4e2a\u9898\u636e\u8bf4\u662f\u9053\u54c8\u5e0c\u7684\u6a21\u677f\u9898\uff0c\u4e0d\u8fc7\u6211\u7528\u5b57\u5178\u6811\u505a\u7684\u628a\u8fd9\u9898AC\u4e86\uff0c\u800c\u4e14\u6548\u7387\u4e5f\u4e0d\u4f4e\uff1b\n\n\u4eba\u751f\u7b2c\u4e00\u9053\u5b57\u5178\u6811\u7684\u9898\uff0c\u6743\u5f53\u5237\u6a21\u677f\u4e86\uff1b\n\n\uff08\u5e9f\u8bdd\u6709\u70b9\u591a\uff09\u8a00\u5f52\u6b63\u4f20\n\n#\u5177\u4f53\u601d\u8def\n\n\u9996\u5148\u660e\u786e\u4e00\u70b9\uff0c\u4f60\u5f97\u5728\u8981\u80cc\u5355\u8bcd\u6700\u591a\u7684\u60c5\u51b5\u4e0b\u8f93\u51fa\u6700\u77ed\u957f\u5ea6\uff0c\u5373\u4f60\u4e0d\u80fd\u56e0\u4e3a\u6700\u77ed\u957f\u5ea6\u800c\u653e\u5f03\u66f4\u591a\u8981\u80cc\u7684\u5355\u8bcd\u3002\n\n##\u5b57\u5178\u6811\u9884\u5904\u7406\n\n\u9996\u5148\uff0c\u628a\u8981\u80cc\u7684\u5355\u8bcd\u751f\u6210\u4e00\u68f5\u5b57\u5178\u6811\uff0c\u5176\u6b21\uff0c\u5bf9\u8981\u8bfb\u5165\u7684\u6bcf\u4e2a\u5355\u8bcd\u8fdb\u884c\u67e5\u8be2\uff0c\u5982\u679c\u5728\u6811\u4e0a\uff0c\u5c31\u628aa[i]\u8d4b\u503c\u4e3a\u8fd9\u4e2a\u5355\u8bcd\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u5728\u6811\u4e0a\u7684\u6307\u9488\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u5462\uff0c\u5b66\u8fc7\u5b57\u5178\u6811\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u77e5\u9053\uff0c\u6bcf\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u5728\u5b57\u5178\u6811\u4e2d\u7684\u4f4d\u7f6e\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bb0\u5f55\u5355\u8bcd\u7684\u540e\u7f00\u5b57\u6bcd\u6765\u8868\u660e\u8fd9\u4e2a\u5355\u8bcd\u662f\u5426\u8981\u80cc\u4ee5\u53ca\u8fd9\u4e2a\u5355\u8bcd\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\uff0c\u4ee5\u5907\u4e0b\u4e00\u6b21\u67e5\u8be2\u4e4b\u7528\u3002\u8fd9\u4e9b\u9884\u5904\u7406\u90fd\u505a\u5b8c\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u5c3a\u53d6\u6cd5\u4e86\uff1b\n\n##\u5c3a\u53d6\u6cd5\n\u5148\u89e3\u91ca\u4e00\u4e0b\u51e0\u4e2a\u53d8\u91cf\u7684\u542b\u4e49\uff0cbo[]\u6570\u7ec4\u7528\u6765\u6807\u660e\u67d0\u4e2a\u5355\u8bcd\u662f\u5426\u662f\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u8fd9\u4e2a\u7684\u9884\u5904\u7406\u6211\u5df2\u7ecf\u5728\u751f\u6210\u6811\u7684\u65f6\u5019\u628a\u6bcf\u4e2a\u5355\u8bcd\u7684\u540e\u7f00\u5b57\u6bcd\u90fd\u505a\u597d\u6807\u8bb0\u4e86\uff0cnum[]\u6570\u7ec4\u8868\u793a\u5728\u5f53\u524d\u957f\u5ea6\u4e2d\u67d0\u4e2a\u5355\u8bcd\u7684\u5177\u4f53\u6570\u91cf\uff0csum\u8868\u793a\u8fd9\u6bb5\u533a\u95f4\u5185\u8981\u80cc\u5355\u8bcd\u7684\u6700\u591a\u6570\u91cf\uff0cans[i]\u5219\u8868\u793a\u5728\u533a\u95f4\u5185\u76ee\u6807\u5355\u8bcd\u6570\u91cf\u4e3ai\u65f6\uff0c\u533a\u95f4\u7684\u6700\u77ed\u957f\u5ea6\uff08\u5176\u5b9e\u8fd9\u4e2a\u8bf4\u6cd5\u5e76\u4e0d\u51c6\u786e\uff0c\u53ea\u6709ans[sum]\u662f\u7b26\u5408\u8fd9\u4e2a\u5b9a\u4e49\u7684\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u5f71\u54cd\u6b63\u786e\u6027\uff08\u56e0\u4e3a\u6211A\u4e86\u6240\u4ee5\u80af\u5b9a\u662f\u6b63\u786e\u7684\uff08\u624b\u52a8\u5212\u6389\uff09\uff09\u6bd4\u5982\u5f53i\u4e3a4\u65f6\uff0ci=1,2,3\u65f6\u7684\u7ed3\u679c\u5c31\u4e0e\u6b63\u786e\u7b54\u6848\u6beb\u65e0\u5173\u7cfb\u4e86\uff09\uff0chead\u548ctail\u5219\u662f\u8fd9\u4e2a\u5c3a\u5b50\u7684\u5934\u548c\u5c3e\n\n\u5c3a\u53d6\u6cd5\u7684\u601d\u8def\uff1a\n\u904d\u5386a[i]\u6570\u7ec4\uff0c\u5982\u679c\u8fd9\u4e2a\u5355\u8bcd\u662f\u76ee\u6807\u5355\u8bcd\uff08\u5bf9\u5e94if(bo[a[i]]==1)\uff09\uff0c\u4e14\u8fd9\u4e2a\u5355\u8bcd\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff08\u5bf9\u5e94if(num[a[i]]==0)\uff09\uff0c\u90a3\u4e48sum\u5c31\u8981+1\u8868\u793a\u5c3a\u5b50\u91cc\u53c8\u591a\u4e00\u4e2a\u8981\u80cc\u7684\u5355\u8bcd\uff0c\u63a5\u7740\u8fd9\u4e2a\u5355\u8bcd\u5728\u5c3a\u5b50\u91cc\u7684\u6570\u91cf\u4e5f\u8981+1\uff08\u5bf9\u5e94num[a[i]]++;\uff09\u3002\n\n\u90a3\u4e48\u4ec0\u4e48\u65f6\u5019\u7f29\u5c0f\u5c3a\u5b50\u957f\u5ea6\u5462\uff1f\u5176\u5b9e\u53ea\u8981\u5f00\u5934\u7684\u5355\u8bcd\u4e0d\u662f\u8981\u80cc\u7684\uff08a[head]==0\uff09\u6216\u662f\u5c3a\u5b50\u91cc\u591a\u6b21\u51fa\u73b0\u7684\u76ee\u6807\u5355\u8bcd\uff08num[a[head]]>1\uff09\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5355\u8bcd\u90fd\u53ef\u4ee5\u5220\u53bb\uff08head++\uff09\uff0c\u5373\u5728\u4fdd\u8bc1sum\u4e0d\u4f1a--\u7684\u60c5\u51b5\u4e0b\uff0c\u5f00\u5934\u5355\u8bcd\u90fd\u53ef\u4ee5\u88ab\u5220\u6389\uff0c\u6ce8\u610f\u4f60\u5220\u6389\u8fd9\u4e2a\u5355\u8bcd\u4ee5\u540e\u522b\u5fd8\u4e86\u628anum--\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u89e3\u91ca\uff0c\u6709\u7684\u540c\u5b66\u5c31\u6709\u7591\u95ee\u4e86\uff0c\u5f00\u5934\u6ca1\u7528\u7684\u5355\u8bcd\u53ef\u4ee5\u5220\uff0c\u90a3\u672b\u5c3e\u7684\u5355\u8bcd\u600e\u4e48\u529e\u5462\uff0c\u6bd4\u59825123000005\uff0c\u540e\u9762\u768400005\u5b8c\u5168\u53ef\u4ee5\u4e0d\u8981\uff0c\u4f46\u662f\u5355\u7eafhead++\u662f\u4e0d\u53ef\u80fd\u628a\u540e\u9762\u7684\u5355\u8bcd\u5220\u6389\u7684\uff0c\u8fd9\u65f6\u5019\u6211\u91c7\u7528ans\u8bb0\u5f55\u6700\u5c0f\u503c\u7684\u529e\u6cd5\uff08\u5bf9\u5e94ans[sum]=min(i-head+1,ans[sum])\uff09\uff0c\u5373\u5f53ans[4]\u904d\u5386\u52305123000005\u76843\u65f6\uff0c\u5c31\u5df2\u7ecf\u628a\u6700\u4f18\u89e3\u8d4b\u503c\u4e86\uff0c\u4e4b\u540e\u53ea\u8981\u6ca1\u6709\u6bd4\u5b83\u5c0f\u7684\u7b54\u6848\u5c31\u7edd\u5bf9\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff0c\u6ce8\u610f\u4e00\u5b9a\u8981\u6709\u8fd9\u4e00\u6b65\uff1a\"if(ans[sum]==0) ans[sum]=i-head+1;\"\u5426\u5219\u4f60\u8f93\u51fa\u7684\u7ed3\u679c\u5168\u662f\u96f6\uff1b\n\n\u4ee5\u4e0a\u5c31\u662f\u6211\u7684\u601d\u8def\u4e86\n\n\u63a5\u4e0b\u6765\u4e0a\u4ee3\u7801(60\u591a\u884c\u4ee3\u7801\u5f88\u7b80\u6d01)\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nchar bo[10010],s[15];\nint tr[10010][30],num[10010],l,n,m,tot,a[100010],sum,head,tail,ans[1010];\nvoid cr()//\u5b57\u5178\u6811\u63d2\u5165 \n{\n\tint u=0,c;\n\tfor(int i=0;i<l;++i)\n\t{\n\t\tc=s[i]-'a';\n\t\tif(tr[u][c]==0)tr[u][c]=++tot;\n\t\tu=tr[u][c];\n\t}\n\tbo[u]=1;\n}\nint cx()//\u5b57\u5178\u6811\u67e5\u8be2 \n{\n\tint u=0,c;\n\tfor(int i=0;i<l;++i)\n\t{\n\t\tc=s[i]-'a';\n\t\tif(tr[u][c]==0) return 0;\n\t\tu=tr[u][c];\n\t}\n\tif(bo[u]==0) return 0;\n\treturn u; \n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tl=strlen(s);\n\t\tcr();\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tl=strlen(s);\n\t\ta[i]=cx();\n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tif(bo[a[i]]==1)\n\t\t{\n\t\t\tif(num[a[i]]==0) sum++;\n\t\t\tnum[a[i]]++;\n\t\t\tif(head!=i)\n\t\t\twhile(num[a[head]]>1||a[head]==0) \n\t\t\t{\n\t\t\t\tnum[a[head]]--;\n\t\t\t\t++head;\n\t\t\t}\n\t\t\tif(ans[sum]==0) ans[sum]=i-head+1;\n\t\t\tans[sum]=min(i-head+1,ans[sum]);\n\t\t}\n\t}\n\tprintf(\"%d\\n%d\",sum,ans[sum]);\n\treturn 0;\n}\n```",
        "postTime": 1547079441,
        "uid": 120594,
        "name": "\u9f99\u00b7\u6d77\u6d41",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1381 \u3010\u5355\u8bcd\u80cc\u8bf5\u3011"
    }
]