[
    {
        "content": "\u9996\u5148\u6211\u4eec\u77e5\u9053 $n$ \u4e2a\u70b9\u7684\u6811\u6709 $n-1$ \u6761\u8fb9\uff0c\u56e0\u6b64\u5bf9\u4e8e\u68ee\u6797\u6765\u8bf4\uff0c\u5176\u70b9\u6570\u51cf\u8fb9\u6570\u5373\u4e3a\u6811\u7684\u4e2a\u6570\u3002\u90a3\u4e48\u5bf9\u4e8e\u666e\u901a\u7684\u56fe\uff0c\u6c42\u51fa\u5176\u4efb\u610f\u4e00\u4e2a\u751f\u6210\u6811\u68ee\u6797\uff0c\u68ee\u6797\u4e2d\u6811\u7684\u4e2a\u6570\u5373\u4e3a\u539f\u56fe\u4e2d\u8fde\u901a\u5757\u7684\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u70b9\u6570\u51cf\u8fb9\u6570\u3002\n\n\u56e0\u6b64\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u4e00\u4e2a\u56fe\u7684\u751f\u6210\u6811\u68ee\u6797\u7684\u8fb9\u6570\u3002\n\n\u8003\u8651\u7528 $LCT$ \u6765\u7ef4\u62a4\u539f\u56fe\u7684\u4e00\u4e2a\u751f\u6210\u6811\u68ee\u6797\u3002\u6309\u987a\u5e8f\u52a0\u8fb9\uff0c\u5f53\u53d1\u73b0\u4e24\u7aef\u70b9\u5df2\u7ecf\u8fde\u901a\uff0c\u8981\u5f62\u6210\u73af\u65f6\uff0c\u5c31\u5220\u53bb\u73af\u4e0a\u6700\u65e9\u52a0\u5165\u7684\u4e00\u6761\u8fb9\u3002\u540c\u65f6\u7528\u4e3b\u5e2d\u6811\u6765\u7ef4\u62a4\u6bcf\u6761\u8fb9\u662f\u5426\u5728\u5f53\u524d\u7684\u751f\u6210\u6811\u68ee\u6797\u4e2d\u51fa\u73b0\u3002\n\n\u8be2\u95ee\u65f6\u5728 $r$ \u6240\u5bf9\u5e94\u7684\u4e3b\u5e2d\u6811\u4e0a\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u4e2d\u6709\u51e0\u6761\u8fb9\u5b58\u5728\uff0c\u5b58\u5728\u7684\u8fb9\u6570\u5373\u4e3a\u5bf9\u5e94\u7684\u751f\u6210\u6811\u68ee\u6797\u7684\u8fb9\u6570\uff0c\u7528 $n$ \u51cf\u53bb\u8fb9\u6570\u5373\u4e3a\u7b54\u6848\u3002\n\n\u56e0\u4e3a $LCT$ \u7ef4\u62a4\u7684\u662f\u4ee5\u65f6\u95f4\u4e3a\u8fb9\u6743\u7684\u6700\u5927\u751f\u6210\u6811\u68ee\u6797\uff0c\u6240\u4ee5\u6bcf\u6761\u8fb9\u90fd\u5c3d\u53ef\u80fd\u7684\u9009\u7528\u51fa\u73b0\u65f6\u95f4\u665a\u7684\uff0c\u8fd9\u5c31\u4f7f\u5f97 $r$ \u6240\u5bf9\u5e94\u7684\u4e3b\u5e2d\u6811\u4e2d\u533a\u95f4 $[l,r]$ \u4e2d\u8fb9\u7684\u51fa\u73b0\u662f\u6700\u591a\u7684\uff0c\u6240\u4ee5\u5c31\u4fdd\u8bc1\u4e86\u6b63\u786e\u6027\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 400010\n#define maxm 12000010\n#define inf 1000000000\n#define mid ((l+r)>>1)\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,m,q,t,ans,tree_cnt;\nint ls[maxm],rs[maxm],cnt[maxm],rt[maxn];\nint fa[maxn],ch[maxn][2],rev[maxn],val[maxn],mi[maxn];\nstruct edge\n{\n    int x,y;\n}e[maxn];\nvoid get(int &l,int &r)\n{\n    if(t) l=(l+ans)%m+1,r=(r+ans)%m+1;\n    if(l>r) swap(l,r);\n}\nbool check(int x)\n{\n    return ch[fa[x]][1]==x;\n}\nbool notroot(int x)\n{\n    return ch[fa[x]][0]==x||ch[fa[x]][1]==x;\n}\nvoid pushup(int x)\n{\n    mi[x]=val[x];\n    mi[x]=min(mi[x],min(mi[ch[x][0]],mi[ch[x][1]]));\n}\nvoid pushrev(int x)\n{\n    rev[x]^=1,swap(ch[x][0],ch[x][1]);\n}\nvoid pushdown(int x)\n{\n    if(!rev[x]) return;\n    pushrev(ch[x][0]),pushrev(ch[x][1]),rev[x]=0;\n}\nvoid rotate(int x)\n{\n    int y=fa[x],z=fa[y],k=check(x),w=ch[x][k^1];\n    if(notroot(y)) ch[z][check(y)]=x;\n    ch[x][k^1]=y,ch[y][k]=w;\n    if(w) fa[w]=y;\n    fa[x]=z,fa[y]=x;\n    pushup(y),pushup(x);\n}\nvoid all(int x)\n{\n    if(notroot(x)) all(fa[x]);\n    pushdown(x);\n}\nvoid splay(int x)\n{\n    all(x);\n    for(int y;notroot(x);rotate(x))\n        if(notroot(y=fa[x]))\n            rotate(check(x)^check(y)?x:y);\n    pushup(x);\n}\nvoid access(int x)\n{\n    for(int y=0;x;y=x,x=fa[x])\n        splay(x),ch[x][1]=y,pushup(x);\n}\nvoid makeroot(int x)\n{\n    access(x),splay(x),pushrev(x);\n}\nvoid split(int x,int y)\n{\n    makeroot(x),access(y),splay(y);\n}\nint findroot(int x)\n{\n    access(x),splay(x);\n    while(ch[x][0]) x=ch[x][0];\n    splay(x);\n    return x;\n}\nvoid link(int x,int y)\n{\n\tsplit(x,y),fa[x]=y;\n}\nvoid cut(int x,int y)\n{\n\tsplit(x,y),fa[x]=ch[y][0]=0;\n}\nint ask(int x,int y)\n{\n    split(x,y);\n    return mi[y];\n}\nvoid modify(int l,int r,int pos,int v,int &cur)\n{\n    int x=++tree_cnt;\n    ls[x]=ls[cur],rs[x]=rs[cur],cnt[x]=cnt[cur]+v,cur=x;\n    if(l==r) return;\n    if(pos<=mid) modify(l,mid,pos,v,ls[cur]);\n    else modify(mid+1,r,pos,v,rs[cur]);\n}\nint query(int L,int R,int l,int r,int cur)\n{\n    if(L<=l&&R>=r) return cnt[cur];\n    int v=0;\n    if(L<=mid) v+=query(L,R,l,mid,ls[cur]);\n    if(R>mid) v+=query(L,R,mid+1,r,rs[cur]);\n    return v;\n}\nint main()\n{\n    read(n),read(m),read(q),read(t);\n    for(int i=0;i<=n;++i) val[i]=mi[i]=inf;   \n    for(int i=1;i<=m;++i) read(e[i].x),read(e[i].y),val[i+n]=mi[i+n]=i;\n    for(int i=1;i<=m;++i)\n    {\n        int x=e[i].x,y=e[i].y;\n        rt[i]=rt[i-1];\n        if(x==y) continue;\n        modify(1,m,i,1,rt[i]);\n        if(findroot(x)==findroot(y))\n        {\n            int p=ask(x,y);\n            cut(e[p].x,p+n),cut(e[p].y,p+n);\n            modify(1,m,p,-1,rt[i]);\n        }\n        link(x,i+n),link(y,i+n);\n    }\n    while(q--)\n    {\n        int l,r;\n        read(l),read(r),get(l,r);\n        printf(\"%d\\n\",ans=n-query(l,r,1,m,rt[r]));\n    }\n    return 0;\n}\n```",
        "postTime": 1594643621,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5385 \u3010[Cnoi2019]\u987b\u81fe\u5e7b\u5883\u3011"
    },
    {
        "content": "\u8fd9\u5176\u5b9e\u662f\u4e00\u9053[BZOJ\u539f\u9898](https://www.lydsy.com/JudgeOnline/problem.php?id=3514)\u3002\u3002  \n\n### \u9898\u89e3\n \n\u6211\u4eec\u8bbe\u7b2c $i$ \u6761\u8fb9\u7684\u6743\u503c\u4e3a $i$\uff0c\u7528 $\\texttt{LCT}$ \u7ef4\u62a4\u6700\u5927\u751f\u6210\u6811\u3002  \n\n\u6309\u987a\u5e8f\u52a0\u5165\u8fb9\uff0c\u5982\u679c\u672a\u8fde\u901a\u76f4\u63a5\u8fde\u4e0a\u53bb\uff1b\u5df2\u7ecf\u8fde\u901a\u5c31\u628a\u539f\u8def\u5f84\u4e0a\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u65ad\u6389\uff0c\u7136\u540e\u518d\u628a\u5f53\u524d\u8fb9\u52a0\u4e0a\u53bb\u3002\n\n\u8981\u6ce8\u610f\u7684\u662f $\\texttt{LCT}$ \u4e0d\u4fbf\u4e8e\u7ef4\u62a4\u8fb9\u6743\uff0c\u4e8e\u662f\u6bcf\u6761\u8fb9\u5efa\u4e00\u4e2a\u865a\u70b9\uff0c\u4e24\u70b9\u4e4b\u95f4\u8fde\u8fb9\u7684\u65f6\u5019\uff0c\u5206\u522b\u8fde\u5230\u865a\u70b9\u4e0a\u5373\u53ef\u3002  \n\n\u5728\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u52a0\u5165\u7684\u8fb9 $i$\uff0c\u90fd\u8981\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u65f6\u88ab\u5220\u9664\u7684\u8fb9 $a_i$\uff0c\u5982\u679c\u5b83\u7684\u52a0\u5165\u6ca1\u6709\u5220\u9664\u8fb9\uff0c\u5219 $a_i=0$\u3002  \n\n\u8fd8\u6709\u4e2a\u5751\u70b9\u5c31\u662f\u81ea\u73af\uff0c\u5bf9\u4e8e\u6709\u81ea\u73af\u7684\u60c5\u51b5\uff0c\u8fd9\u6761\u8fb9\u662f\u6ca1\u6709\u7528\u7684\uff0c\u6240\u4ee5\u5c06 $a_i$ \u8bbe\u4e3a $m+1$ \u5c31\u597d\u4e86\u3002  \n\n\u6839\u636e $a$ \u6570\u7ec4\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u65f6\uff0c\u5bf9\u4e8e $a_i<l$ \u7684\u4e00\u6761\u8fb9\uff0c\u5b83\u4f1a\u8fde\u63a5\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u4ea7\u751f $-1$ \u7684\u8d21\u732e\u3002  \n\n\u6240\u4ee5\u6bcf\u6b21\u67e5\u8be2\u7684\u7b54\u6848\u5c31\u662f   \n$$\\large n-\\sum\\limits_{i=l}^r[a_i<l]$$  \n\n\u540e\u9762\u90a3\u4e2a\u6c42\u548c\uff0c\u5b9e\u9645\u4e0a\u6c42\u7684\u5c31\u662f $[l,r]$ \u4e2d\u5c0f\u4e8e $l$ \u7684\u6570\u4e2a\u6570\u3002  \n\n\u8fd9\u4e2a\u662f\u53ef\u4ee5\u7528\u4e3b\u5e2d\u6811\u6765\u7ef4\u62a4\u7684\uff0c\u4f46\u662f\u6211\u6bd4\u8f83\u83dc\uff0c\u5c31\u5199\u4e86\u5206\u5757\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(m\\sqrt m)$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\Theta(m \\log n+q \\sqrt m)$\u7684\u3002   \n\n\u6548\u7387\u8fd8\u8fd8\u53ef\u4ee5\uff0c\u6700\u6162\u7684\u70b9\u4e5f\u5c31 $1300\\text{ms}$\u3002\n\n\u4ee3\u7801\uff1a  \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#define N 300003\n#define ll long long\n#define reg register\n#define ls son[u][0]\n#define rs son[u][1]\n#define inf 0x3f3f3f3f\nusing namespace std;\n\nstruct edge{\n    int u,v;\n    edge(int u=0,int v=0):u(u),v(v){}\n}e[N];\n\nint f[N],a[N],uf[N],be[N],bl[N],br[N];\nint cnt[451][200004];\nint n,m,q,t,unit;\n\ninline void read(int &x);\nvoid print(int x);\n\nstruct Link_Cut_Tree{ //LCT\u677f\u5b50\n    int son[N][2],fa[N],st[N];\n    int rev[N],minn[N];\n\n    inline bool notroot(int u){\n        return son[fa[u]][0]==u||son[fa[u]][1]==u;\n    }\n\n    inline void pushup(int u){ // \u7ef4\u62a4\u94fe\u4e0a\u6743\u503c\u6700\u5c0f\u8282\u70b9\u8282\u70b9\u7684*\u4f4d\u7f6e*\n        minn[u] = u;\n        if(ls&&a[minn[ls]]<a[minn[u]]) minn[u] = minn[ls];\n        if(rs&&a[minn[rs]]<a[minn[u]]) minn[u] = minn[rs]; \n    }\n\n    inline void pushr(int u){\n        swap(ls,rs);\n        rev[u] ^= 1;\n    }\n\n    inline void pushdown(int u){\n        if(!rev[u]) return;\n        if(ls) pushr(ls);\n        if(rs) pushr(rs);\n        rev[u] = 0;\n    }\n\n    inline void rotate(int x){\n        int y = fa[x],z = fa[y];\n        int k = son[y][1]==x,w = son[x][k^1];\n        if(notroot(y)) son[z][son[z][1]==y] = x;\n        son[x][k^1] = y;\n        son[y][k] = w;\n        if(w) fa[w] = y;\n        fa[y] = x,fa[x] = z;\n        pushup(y);\n    }\n\n    inline void splay(int x){\n        int y = x,z = 0;\n        st[++z] = y;\n        while(notroot(y)) st[++z] = y = fa[y];\n        while(z) pushdown(st[z--]);\n        while(notroot(x)){\n            y = fa[x],z = fa[y];\n            if(notroot(y)){\n                if((son[z][1]==y)==(son[y][1]==x)) rotate(y);\n                else rotate(x);\n            }\n            rotate(x);\n        }\n        pushup(x);\n    }\n\n    inline void access(int u){\n        for(reg int y=0;u;u=fa[u]){\n            splay(u);\n            rs = y;\n            pushup(u);\n            y = u;\n        }\n    }\n\n    inline void makeroot(int u){\n        access(u),splay(u);\n        pushr(u);\n    }\n\n    inline void split(int u,int v){\n        makeroot(u);\n        access(v),splay(v);\n    }\n\n    inline void link(int u,int v){\n        makeroot(u);\n        fa[u] = v;\n    }\n\n    inline void cut(int u,int v){\n        split(u,v);\n        son[v][0] = fa[u] = 0;\n        pushup(v);\n    }\n\n    inline int query(int u,int v){\n        split(u,v);\n        return minn[v];\n    }\n}T;\n\ninline int find(int x){\n    while(x!=uf[x]) x = uf[x] = uf[uf[x]];\n    return x;\n}\n\ninline int query(int l,int r,int k){ //\u5206\u5757\u67e5\u8be2[l,r]\u4e2d\u5c0f\u4e8ek\u7684\u6570\u4e2a\u6570\n    if(k<1) return 0;\n    int res = 0;\n    if(be[r]-be[l]<2){\n        for(reg int i=l;i<=r;++i) res += f[i]<k;\n        return res;\n    }\n    for(reg int i=l;i<=br[l];++i) res += f[i]<k;\n    for(reg int i=be[l]+1;i<be[r];++i) res += cnt[i][k-1];\n    for(reg int i=bl[r];i<=r;++i) res += f[i]<k;\n    return res;\n}\n\nint main(){\n    int u,v,w,l,r,key = 0;\n    read(n),read(m),read(q),read(t);\n    for(reg int i=1;i<=n;++i) a[i] = inf;\n    for(reg int i=1;i<=m;++i) a[i+n] = i;\n    for(reg int i=1;i<=n+m;++i) uf[i] = T.minn[i] = i;\n    for(reg int i=1;i<=m;++i){\n        read(u),read(v);\n        if(u==v){\n            f[i] = m+2;\n            continue;\n        }\n        e[i] = edge(u,v);\n        if(find(u)==find(v)){\n            w = T.query(u,v);\n            T.cut(w,e[w-n].u); //\u65ad\u6389w\u8fd9\u4e2a\u865a\u70b9\u6240\u5bf9\u5e94\u7684\u8fb9\n            T.cut(w,e[w-n].v);\n            f[i] = w-n;\n        }else uf[find(u)] = find(v);\n        T.link(u,n+i),T.link(v,n+i);\n    }\n    unit = sqrt(m)+1;\n    for(reg int i=1;i<=m;++i){\n        be[i] = (i-1)/unit+1;\n        cnt[be[i]][f[i]]++;\n        if(be[i]==be[i-1]) bl[i] = bl[i-1]; //\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u6240\u5728\u5757\u7684\u6700\u5de6\u7aef\u70b9\n        else bl[i] = i;\n    }\n    for(reg int i=m;i>=1;--i){\n        if(be[i]==be[i+1]) br[i] = br[i+1]; //\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u6240\u5728\u5757\u7684\u6700\u53f3\u7aef\u70b9\n        else br[i] = i;\n    }\n    w = m/unit+1;\n    for(reg int i=1;i<=w;++i){ //\u503c\u57df\u5206\u5757\u524d\u7f00\u548c\n        for(reg int j=1;j<=m;++j)\n            cnt[i][j] += cnt[i][j-1];\n    }\n    while(q--){\n        read(l),read(r);\n        if(t==1){\n            l = (l+key)%m+1;\n            r = (r+key)%m+1;\n        }\n        if(l>r) swap(l,r);\n        key = n-query(l,r,l);   \n        print(key),putchar('\\n');\n    }\n    return 0;\n}\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n\nvoid print(int x){\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n```",
        "postTime": 1563026108,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5385 \u3010[Cnoi2019]\u987b\u81fe\u5e7b\u5883\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5230\u8fde\u901a\u5757\u4e2a\u6570\u53ef\u4ee5\u8f6c\u5316\u4e3a\u8ba1\u7b97\u751f\u6210\u68ee\u6797\u4e2d\u7684\u8fb9\u6570\uff0c\u4e0d\u59a8\u8003\u8651\u6bcf\u6761\u8fb9\u7684\u8d21\u732e\u3002\n\n\u4ee4\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u4e3a\u5176\u7f16\u53f7\uff0c\u5219\u5728\u8be2\u95ee $[l,r]$ \u4e2d\uff0c$(u,v)$ \u4ea7\u751f\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53 $[1,r]$ \u7684\u6700\u5927\u751f\u6210\u68ee\u6797\u4e2d\uff0c$u$ \u5230 $v$ \u8981\u4e48\u4e0d\u8fde\u901a\uff0c\u8981\u4e48\u8def\u5f84\u4e0a\u5b58\u5728\u6743\u503c $<l$ \u7684\u8fb9\u3002\n\n\u4e8e\u662f\u8003\u8651\u4ece\u5934\u626b\uff0c\u7528 LCT \u52a8\u6001\u7ef4\u62a4\u6700\u5927\u751f\u6210\u68ee\u6797\uff0c\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u5b83\u4ea7\u751f\u8d21\u732e\u9700\u8981\u7684\u533a\u95f4\u5de6\u7aef\u70b9\u81f3\u5c11\u662f\u591a\u5c11\u3002\u8fd9\u6837\u6211\u4eec\u5bf9\u4e8e\u4e00\u6761\u8fb9 $i$\uff0c\u5c31\u53ef\u4ee5\u8868\u793a\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(i,d_i)$\uff0c\u4e5f\u5c31\u662f\u8bf4 $i$ \u4ea7\u751f\u8d21\u732e\uff0c\u533a\u95f4\u5de6\u7aef\u70b9\u81f3\u5c11\u4e3a $d_i$\u3002\n\n\u7531\u4e8e\u5f3a\u5236\u5728\u7ebf\uff0c\u7528\u4e3b\u5e2d\u6811\u4e8c\u7ef4\u6570\u70b9\u5373\u53ef\u3002\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int, int> P;\n\nconst int MAXM = 200005;\nstruct LinkCutTree {\n    static const int MAXM = 300005;\n    int rev[MAXM], son[MAXM][2], fa[MAXM], mn[MAXM], val[MAXM], sta[MAXM];\n    LinkCutTree() { mn[0] = INT_MAX; }\n    bool isroot(int x) { return !fa[x] || (son[fa[x]][0] != x && son[fa[x]][1] != x); }\n    void pushup(int x) { mn[x] = min(mn[son[x][0]], min(val[x], mn[son[x][1]])); }\n    void rotate(int x){\n        int y = fa[x], f = fa[y], w = son[y][0] == x;\n        if(!isroot(y)) son[f][son[f][1] == y] = x;\n        fa[x] = f, fa[y] = x;\n        if(son[x][w]) fa[son[x][w]] = y;\n        son[y][!w] = son[x][w], son[x][w] = y;\n        pushup(y);\n    }\n    void pushdown(int x) {\n        if (!rev[x]) return;\n        rev[son[x][0]] ^= 1, rev[son[x][1]] ^= 1;\n        rev[x] = 0, swap(son[x][0], son[x][1]);\n    }\n    void splay(int x) {\n        int tp = 0;\n        sta[++tp] = x;\n        for (int i = x; !isroot(i); i = fa[i]) sta[++tp] = fa[i];\n        while (tp > 0) pushdown(sta[tp--]);\n        while (!isroot(x)) {\n            int y = fa[x], z = fa[y];\n            if (!isroot(y)) {\n                if (son[y][1] == x ^ son[z][1] == y) rotate(y);\n                else rotate(x);\n            } rotate(x);\n        }\n        pushup(x);\n    }\n    void access(int x) {\n        for (int t = 0; x; t = x, x = fa[x])\n            splay(x), son[x][1] = t, pushup(x);\n    }\n    void change(int x) {\n        access(x), splay(x), rev[x] ^= 1;\n    }\n    int find(int x) {\n        access(x), splay(x);\n        while (son[x][0]) x = son[x][0];\n        return x;\n    }\n    void link(int x, int y) {\n        change(x), fa[x] = y;\n    }\n    void cut(int x) {\n        access(x), splay(x);\n        fa[son[x][0]] = 0;\n        son[x][0] = 0;\n        pushup(x);\n    }\n    int query(int x, int y) {\n        change(x), access(y), splay(y);\n        return mn[y];\n    }\n} lct;\nstruct PersistenceTree {\n    static const int MAXT = 4000005;\n    int sum[MAXT], ls[MAXT], rs[MAXT], tot;\n    int update(int p, int x, int l, int r) {\n        int k = ++tot;\n        sum[k] = sum[p] + 1, ls[k] = ls[p], rs[k] = rs[p];\n        if (l == r) return k;\n        int mid = (l + r) >> 1;\n        if (x <= mid) ls[k] = update(ls[p], x, l, mid);\n        else rs[k] = update(rs[p], x, mid + 1, r);\n        return k;\n    }\n    int query(int a, int b, int k, int l, int r) {\n        if (a > r || b < l || !k) return 0;\n        if (a <= l && b >= r) return sum[k];\n        int mid = (l + r) >> 1;\n        return query(a, b, ls[k], l, mid) + query(a, b, rs[k], mid + 1, r);\n    }\n} pt;\nint fr[MAXM], to[MAXM], del[MAXM], rt[MAXM], n, m, Q, A;\nint main() {\n    //freopen(\"input.txt\", \"r\", stdin);\n    scanf(\"%d%d%d%d\", &n, &m, &Q, &A);\n    for (int i = 1; i <= m; i++)\n        scanf(\"%d%d\", fr + i, to + i);\n    for (int i = 1; i <= n; i++) lct.val[i] = lct.mn[i] = INT_MAX;\n    for (int i = 1; i <= m; i++) lct.val[i + n] = lct.mn[i + n] = i;\n    for (int i = 1; i <= m; i++) {\n        int u = fr[i], v = to[i];\n        if (u == v) { del[i] = i; continue; }\n        if (lct.find(u) == lct.find(v)) {\n            int q = lct.query(u, v);\n            lct.change(u);\n            lct.cut(q + n);\n            lct.change(v);\n            lct.cut(q + n);\n            del[q] = i;\n        }\n        lct.link(u, i + n);\n        lct.link(v, i + n);\n    }\n    for (int i = 1; i <= m; i++) {\n        if (!del[i]) del[i] = m + 1;\n        rt[i] = pt.update(rt[i - 1], del[i], 1, m + 1);\n    }\n    int ans = 0;\n    while (Q--) {\n        int l, r; scanf(\"%d%d\", &l, &r);\n        if (A) l = (l + ans) % m + 1, r = (r + ans) % m + 1;\n        if (l > r) swap(l, r);\n        int a = pt.query(r + 1, m + 1, rt[r], 1, m + 1);\n        int b = pt.query(r + 1, m + 1, rt[l - 1], 1, m + 1);\n        printf(\"%d\\n\", ans = n - a + b);\n    }\n    return 0;\n}\n```",
        "postTime": 1562893807,
        "uid": 30575,
        "name": "waaadreamer",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5385 \u3010[Cnoi2019]\u987b\u81fe\u5e7b\u5883\u3011"
    },
    {
        "content": "\u4e00\u5f20\u56fe\u7684\u8fde\u901a\u5757\u6570\u91cf\u7b49\u4e8e\u70b9\u7684\u6570\u91cf\u51cf\u53bb\u4efb\u610f\u4e00\u4e2a\u751f\u6210\u68ee\u6797\u7684\u8fb9\u7684\u6570\u91cf\u3002\n\n\u7528 LCT \u7ef4\u62a4\u52a8\u6001\u56fe\u8fde\u901a\u6027\uff08\u79bb\u7ebf\uff09\u7684\u65f6\u5019\uff0c\u7ef4\u62a4\u4e86\u4e00\u68f5\u4ee5\u5220\u9664\u65f6\u95f4\u4e3a\u6743\u503c\u7684\u6700\u5927\u751f\u6210\u6811\u3002\u5982\u679c\u4e00\u6761\u8fb9\u88ab\u4ece\u6700\u5927\u751f\u6210\u6811\u4e0a\u5220\u53bb\uff0c\u8bf4\u660e\u8fd9\u6761\u8fb9\u52a0\u5165\u56fe\u4e2d\u5f62\u6210\u7684\u73af\u4e0a\u4f1a\u6bd4\u8fd9\u6761\u8fb9\u66f4\u665a\u6d88\u5931\uff0c\u4e5f\u5c31\u662f\u8bf4\u52a0\u5165\u8fd9\u6761\u8fb9\u5e26\u6765\u7684\u8fde\u901a\u6027\u53ef\u4ee5\u88ab\u8fd9\u4e2a\u73af\u53d6\u4ee3\u4e86\uff0c\u56e0\u6b64\u8fd9\u6761\u8fb9\u4e5f\u4e0d\u9700\u8981\u7ee7\u7eed\u5b58\u5728\u3002\n\n\u5728\u7528 LCT \u7ef4\u62a4\u6700\u5927\u751f\u6210\u68ee\u6797\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u6c42\u51fa $val_i$\uff0c\u8868\u793a\u5728\u8fb9 $f_i$ \u52a0\u5165\u540e\u8fb9 $i$ \u4e0d\u518d\u5b58\u5728\u4e8e\u6700\u5927\u751f\u6210\u68ee\u6797\u4e2d\u3002\u8fd9\u8868\u793a $[i+1,f_i]$ \u8fd9\u4e2a\u8fb9\u96c6\u53ef\u4ee5\u53d6\u4ee3 $i$ \u8fd9\u6761\u8fb9\u7684\u8fde\u901a\u6027\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u7684\u533a\u95f4 $[l,r]$\uff0c\u67e5\u8be2 $\\sum_{i=l}^{r}[f_i\\leq r]$\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u6709\u591a\u5c11\u6761\u8fb9\u4e0d\u5728\u6700\u5927\u751f\u6210\u68ee\u6797\u4e2d\uff0c\u4e5f\u5c31\u662f\u6c42\u51fa\u4e86\u4e00\u4e2a\u751f\u6210\u68ee\u6797\u7684\u8fb9\u6570\uff0c\u5e76\u80fd\u591f\u8ba1\u7b97\u51fa\u8054\u901a\u5757\u7684\u4e2a\u6570\u3002\n\n\u4e00\u6bb5\u533a\u95f4\u5185\u5c0f\u4e8e\u67d0\u4e2a\u503c\u7684\u4e2a\u6570\u662f\u53ef\u51cf\u7684\u4fe1\u606f\uff0c\u4f7f\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u7ec6\u8282\uff1a\n\n1. \u5b58\u5728\u81ea\u73af\uff0c\u81ea\u73af\u7684\u8fb9\u4e0d\u4f1a\u5b58\u5728\u4e8e\u6700\u5927\u751f\u6210\u6811\u4e2d\uff0c\u6709 $f_i=0$\u3002\n\n2. \u5f3a\u5236\u5728\u7ebf\u7684\u65b9\u5f0f\u4e0d\u662f\u5f02\u6216\u800c\u662f\u52a0\u3002\n\n\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $O(n\\log n)$\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\n#define I inline int\n#define V inline void\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\nconst int N=3e5+1,INF=0x7fffffff;\nint n,m,q,type,tot,rt[N];\nint a[N],b[N],c[N],val[N];\nint ch[N][2],fa[N],tag[N],w[N];\nstruct ele{int ls,rs,siz;}t[N<<5];\nV input(){\n\tscanf(\"%d%d%d%d\",&n,&m,&q,&type);\n\tFOR(i,1,m)scanf(\"%d%d\",a+i,b+i),c[i+n]=i;\n}\n#define lc ch[x][0]\n#define rc ch[x][1]\nI id(int x){return x==ch[fa[x]][1];}\nI nrt(int x){return x==ch[fa[x]][id(x)];}\nV upd(int x){\n\tw[x]=x;\n\tif(c[w[lc]]<c[w[x]])w[x]=w[lc];\n\tif(c[w[rc]]<c[w[x]])w[x]=w[rc];\n}\nV rot(int x){\n\tint y=fa[x],z=fa[y],p=id(x),w=ch[x][p^1];\n\tif(nrt(y))ch[z][id(y)]=x;if(w)fa[w]=y;\n\tfa[x]=z,fa[y]=x,ch[y][p]=w,ch[x][p^1]=y;\n\tupd(y),upd(x);\n}\nV rev(int x){swap(lc,rc),tag[x]^=1;}\nV psd(int x){if(tag[x])rev(lc),rev(rc),tag[x]=0;}\nV psa(int x){if(nrt(x))psa(fa[x]);psd(x);}\nV splay(int x){\n\tfor(psa(x);nrt(x);rot(x))if(nrt(fa[x]))\n\t\trot(id(x)==id(fa[x])?fa[x]:x);\n}\nV acc(int x){\n\tfor(int y=0,p=x;p;p=fa[y=p])\n\t\tsplay(p),ch[p][1]=y,upd(p);\n\tsplay(x);\n}\nV mrt(int x){acc(x),rev(x);}\nV link(int x,int y){mrt(x),fa[x]=y;}\nI frt(int x){\n\tfor(acc(x);lc;)psd(x),x=lc;\n\treturn splay(x),x;\n}\nV cut(int x,int y){mrt(x),acc(y),fa[x]=ch[y][0]=0,upd(y);}\nI getmin(int x,int y){return mrt(x),acc(y),w[y];}\n#undef lc\n#undef rc\n#define lc t[p].ls\n#define rc t[p].rs\n#define lson lc,L,mid\n#define rson rc,mid+1,R\n#define root(u) rt[u],0,m\nV ins(int&p,int L,int R,int x){\n\tt[++tot]=t[p],t[p=tot].siz++;\n\tif(L==R)return;int mid=L+R>>1;\n\t(x<=mid)?ins(lson,x):ins(rson,x);\n}\nI ask(int p,int L,int R,int l,int r){\n\tif(L==l&&R==r)return t[p].siz;\n\tint mid=L+R>>1;\n\tif(l>mid)return ask(rson,l,r);\n\tif(r<=mid)return ask(lson,l,r);\n\treturn ask(lson,l,mid)+ask(rson,mid+1,r);\n}\nV init(){\n\tFOR(i,0,n)c[i]=INF;\n\tFOR(i,1,m){\n\t\tint x=a[i],y=b[i],p;\n\t\tif(x==y){val[i]=i;continue;}\n\t\tif(frt(x)==frt(y))\n\t\t\tp=getmin(x,y),val[p-n]=i,cut(p,a[p-n]),cut(p,b[p-n]);\n\t\tp=i+n,link(p,x),link(p,y);\n\t}\n\tFOR(i,1,m){\n\t\trt[i]=rt[i-1];\n\t\tif(val[i])ins(root(i),val[i]);\n\t}\n}\nV work(){\n\tint l,r,ans=0;\n\twhile(q--){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tif(type)l=(l+ans)%m+1,r=(r+ans)%m+1;\n\t\tif(l>r)swap(l,r);\n\t\tans=ask(root(r),0,r)-ask(root(l-1),0,r);\n\t\tcout<<(ans=n-(r-l+1-ans))<<'\\n';\n\t}\n}\nint main(){\n\tinput();\n\tinit();\n\twork();\n\treturn 0;\n}\n```",
        "postTime": 1581947783,
        "uid": 109236,
        "name": "Fuyuki",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5385 \u3010[Cnoi2019]\u987b\u81fe\u5e7b\u5883\u3011"
    },
    {
        "content": "`\u8fd9\u66fe\u4eca\u6709\u4e00\u4e2a\u51c4\u5a49\u54c0\u4f24\u7684\u6545\u4e8b\uff0c\u4f46\u662f\u88ab\u51fa\u9898\u4eba\u5220\u6863\u5f04\u4e22\u4e86\u3002`\n\n\u9898\u76ee\u540d\u5b57\u8fd9\u4e48\u9ad8\u5c1a\uff0c\u80cc\u666f\u4f60\u5374\u7ed9\u6211\u5495\u4e86\uff1f\uff1f\n\n## Description\n\n\u70b9\u6570 $n$ \uff0c\u8fb9\u6570 $m$ \uff0c\u8be2\u95ee $q$ \u6b21\uff0c\u6c42\u4e00\u6bb5\u533a\u95f4\u5185\u7684\u8fb9\u7ec4\u6210\u7684\u6b8b\u56fe\u7684\u8fde\u901a\u5757\u4e2a\u6570\u3002\n\n$n,\\ q \\leq 10 ^ 5,\\ m \\leq 2 \\cdot 10 ^ 5$\n\n## Analysis\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\u5bf9\u4e8e\u4e00\u4e2a\u6b8b\u56fe\uff0c\u5b83\u7684\u70b9\u6570\u51cf\u751f\u6210\u68ee\u6797\u7684\u8fb9\u6570\u5c31\u662f\u8fde\u901a\u5757\u7684\u4e2a\u6570\u3002\n\n\u56e0\u4e3a\u5b83\u672c\u8eab\u662f\u4f5c\u4e3a\u56fe\u4e3a\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u5373\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u751f\u6210\u6811\uff08\u68ee\u6797\uff09\u3002\n\n## Solution\n\n\u53c8\u662f\u533a\u95f4\uff0c\u53c8\u662f\u751f\u6210\u6811\u4ec0\u4e48\u8ddf\u56fe\u626f\u4e0a\u5173\u7cfb\u7684\u8981\u6c42\uff0c\u770b\u8d77\u6765\u5c31\u5934\u5927\u3002\n\n\u53ef\u4ee5\u8003\u8651\u7528 $\\text{LCT}$ \u7ef4\u62a4\u751f\u6210\u6811\u3002\n\n\u4f46\u662f\u751f\u6210\u6811\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u79cd\uff0c\u6211\u4eec\u5c31\u9700\u8981\u6240\u6709\u8fb9\u7f16\u53f7\u5c3d\u53ef\u80fd\u9760\u8fd1\u90a3\u4e2a\u533a\u95f4\u3002\n\n\u600e\u4e48\u529e\u3002\n\n\u6211\u4eec\u8003\u8651\u5728\u52a0\u8fb9\u7684\u65f6\u5019\uff0c\u5047\u5982\u5f53\u524d\u4e24\u4e2a\u70b9\u539f\u5148\u5df2\u7ecf\u8054\u901a\uff0c\u6211\u4eec\u5c1d\u8bd5\u53bb\u627e\u8fde\u901a\u5757\u4e0a\u6700\u65e9\u52a0\u8fdb\u6765\u7684\u8fb9\uff0c\u5e76\u628a\u4ed6\u5220\u6389\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1\u5728\u56fe\u7684\u8fde\u901a\u6027\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba9\u751f\u6210\u6811\u4e0a\u7684\u8fb9\u5c3d\u53ef\u80fd\u9760\u8fd1\u53f3\u8fb9\u754c\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5728 $\\text{LCT}$ \u91cc\u9762\u7ef4\u62a4\u8fde\u901a\u5757\u5185\u7f16\u53f7\u6700\u5c0f\u7684\u5730\u65b9\u3002\n\n\u4f17\u6240\u5468\u77e5 $\\text{LCT}$ \u662f\u7ef4\u62a4\u7684\u70b9\u6743\uff0c\u6240\u4ee5\u8981\u628a\u8fb9\u5316\u70b9\u3002\u4e0d\u8fc7\u6bd4\u8f83\u5178\u7684\u5957\u8def\uff0c\u53ef\u4ee5\u76f4\u63a5\u628a\u8fb9\u4e5f\u5f53\u4f5c\u70b9\u585e\u5230 $\\text{LCT}$ \u91cc\u9762\uff0c\u5c31\u50cf $\\text{kruskal}$ \u91cd\u6784\u6811\u90a3\u6837\u8fde\u8fb9\u3002\n\n\u6240\u8fd9\u6837\u53ea\u9700\u8981\u628a\u8fb9\u7684\u7f16\u53f7\u5f53\u4f5c\u70b9\u6743\uff0c\u5176\u4ed6\u56fe\u4e0a\u7684\u70b9\u8bbe\u6210 $\\infty$ \uff0c\u7ef4\u62a4\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002\n\n\u90a3\u5982\u679c\u6211\u4eec\u60f3\u8981\u968f\u65f6\u77e5\u9053\u524d r \u6761\u8fb9\u6709\u591a\u5c11\u6761\u751f\u6210\u6811\u8fb9\uff0c\u628a\u8fd9\u4e9b\u7529\u5230\u4e3b\u5e2d\u6811\u4e0a\u5c31\u884c\u4e86\u3002\u4f46\u662f\u6ce8\u610f\u8fd9\u73a9\u610f\u76f8\u5f53\u4e8e\u80fd\u67e5\u8be2\u524d r \u6761\u8fb9\u6709\u591a\u5c11\u6761\u5b58\u5728\u4e8e\u751f\u6210\u6811\u4e0a\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u662f\u5c3d\u91cf\u8ba9\u6240\u6709\u6811\u8fb9\u7f16\u53f7\u5c3d\u53ef\u80fd\u5927\uff0c\u6240\u4ee5\u5c31\u7c7b\u4f3c\u4e8c\u4f4d\u6570\u70b9 $f_r - f_{l - 1}$ \u90a3\u6837\u505a\u4e2a\u5dee\u5c31\u77e5\u9053\u524d $r$ \u6761\u8fb9\u6700\u591a\u6709\u591a\u5c11\u6761\u5728\u533a\u95f4 $[l,\\ r]$ \u5185\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4 $\\text{LCT}$ \u6709\u4e9b\u64cd\u4f5c\u770b\u8d77\u6765\u662f\u771f\u7684\u5389\u5bb3\uff08\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$ \u3002\n\n## Code\n\n```cpp\n/*\n\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define File(a) freopen(a\".in\", \"r\", stdin), freopen(a\".out\", \"w\", stdout);\n#define Check(a) freopen(a\".in\", \"r\", stdin), freopen(a\".ans\", \"w\", stdout);\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef std::pair<int, int> pii;\n#define fi first\n#define se second\n#define mp std::make_pair\n\nconst int mod = 998244353;\ntemplate <typename A>\ninline int M(A x) {return x;}\ntemplate <typename A, typename ...B>\ninline int M(A x, B ... args) {return 1ll * x * M(args...) % mod;}\n\n#define mi(x) (x >= mod) && (x -= mod)\n#define ad(x) (x < 0) && (x += mod)\n\nconst int N = 2e5 + 10, P = 3e5 + 10, INF = 1e9;\n\nint n, m, q, op, rt[N], del[N];\nstruct edge {int u, v;} e[N];\n\nstruct LCT {\n\t#define ls(x) ch[x][0]\n\t#define rs(x) ch[x][1]\n\n\tint ch[P][2], fa[P], mn[P], va[P], rev[P], st[P], tp;\n\n\t#define pd(x) (!(rs(fa[x]) ^ x))\n\t#define isrt(x) (ls(fa[x]) ^ x && rs(fa[x]) ^ x)\n\n\tinline void pushup(int x) {mn[x] = min(va[x], min(mn[ls(x)], mn[rs(x)]));}\n\n\t#define prev(x) (rev[x] ^= 1, ls(x) ^= rs(x) ^= ls(x) ^= rs(x))\n\n\tinline void pushdown(int x) {\n\t\trev[x] && (\n\t\t\tls(x) && (prev(ls(x))), \n\t\t\trs(x) && (prev(rs(x))), rev[x] = 0\n\t\t);\n\t}\n\n\tinline void rotate(int x) {\n\t\tint d = fa[x], t = pd(x);\n\t\tch[d][t] = ch[x][t ^ 1]; fa[ch[x][t ^ 1]] = d;\n\n\t\t!isrt(d) && (ch[fa[d]][pd(d)] = x);\n\n\t\tfa[x] = fa[d]; ch[x][t ^ 1] = d; fa[d] = x;\n\t\tpushup(d); pushup(x);\n\t}\n\n\tinline void push(int x) {\n\t\tfor (; !isrt(x); x = fa[x]) st[++tp] = x;\n\t\tst[++tp] = x;\n\t\twhile (tp) pushdown(st[tp--]);\n\t}\n\n\tinline void splay(int x) {\n\t\tfor (push(x); !isrt(x); rotate(x)) {\n\t\t\t!isrt(fa[x]) && (rotate((pd(x) ^ pd(fa[x])) ? x : fa[x]), 1);\n\t\t}\n\t\tpushup(x);\n\t}\n\n\tinline void access(int x) {\n\t\tfor (int y = 0; x; y = x, x = fa[x]) splay(x), rs(x) = y, pushup(x);\n\t}\n\n\tinline void makert(int x) {access(x); splay(x); prev(x);}\n\n\tinline void split(int x, int y) {makert(x); access(y); splay(y);}\n\n\tinline int firt(int x) {\n\t\taccess(x); splay(x);\n\t\tfor (; ls(x); pushdown(x), x = ls(x));\n\t\tsplay(x); return x;\n\t}\n\n\tinline void link(int x, int y) {makert(x); fa[x] = y;}\n\n\tinline void cut(int x, int y) {split(x, y); ls(y) = fa[x] = 0; pushup(y);}\n\n\t#undef ls\n\t#undef rs\n\n\t#undef pd\n\t#undef isrt\n} L;\n\nstruct PresiTree {\n\tstruct mdzz {int su, ch[2];} tr[N << 5];\n\tint cnt;\n\n\t#define ls(x) tr[x].ch[0]\n\t#define rs(x) tr[x].ch[1]\n\n\tinline void modify(int &x, int l, int r, int k, int p) {\n\t\tx = ++cnt; tr[x] = tr[p]; ++tr[x].su;\n\t\tif (l == r) return ;\n\n\t\tint mid = (l + r) >> 1;\n\t\tif (k <= mid) modify(ls(x), l, mid, k, ls(p));\n\t\telse modify(rs(x), mid + 1, r, k, rs(p));\n\t}\n\n\tinline int query(int x, int l, int r, int L, int R) {\n\t\tif (!x) return 0;\n\t\tif (L <= l && r <= R) return tr[x].su;\n\n\t\tint mid = (l + r) >> 1, ret = 0;\n\t\tif (L <= mid) ret += query(ls(x), l, mid, L, R);\n\t\tif (R > mid) ret += query(rs(x), mid + 1, r, L, R);\n\t\treturn ret;\n\t}\n\n\t#undef ls\n\t#undef rs\n} Pt;\n\nint main() {\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(nullptr);\n\n\tstd::cin >> n >> m >> q >> op;\n\tfor (int i = 0; i <= n; ++i) L.va[i] = L.mn[i] = INF;\n\tfor (int i = 1; i <= m; ++i) L.va[i + n] = L.mn[i + n] = i;\n\n\tfor (int i = 1, j; i <= m; ++i) {\n\t\tstd::cin >> e[i].u >> e[i].v;\n\t\tint x = e[i].u, y = e[i].v;\n\n\t\tif (!(x ^ y)) {del[i] = i; continue;}\n\n\t\tL.firt(x) == L.firt(y) && (\n\t\t\tL.split(x, y), j = L.mn[y], \n\t\t\tL.cut(e[j].u, j + n), L.cut(e[j].v, j + n), del[j] = i\n\t\t);\n\t\tL.link(x, i + n); L.link(y, i + n);\n\t}\n\n\tfor (int i = 1; i <= m; ++i) {\n\t\tif (!del[i]) del[i] = m + 1;\n\t\tPt.modify(rt[i], 1, m + 1, del[i], rt[i - 1]);\n\t}\n\n\tint ans = 0;\n\n\twhile (q--) {\n\t\tint l, r; std::cin >> l >> r;\n\t\top && (l = (l + ans) % m + 1, r = (r + ans) % m + 1);\n\t\tl > r && (l ^= r ^= l ^= r);\n\n\t\tint a = Pt.query(rt[r], 1, m + 1, r + 1, m + 1);\n\t\tint b = Pt.query(rt[l - 1], 1, m + 1, r + 1, m + 1);\n\t\tans = n - a + b;\n\n\t\tstd::cout << ans << \"\\n\";\n\t}\n\n\treturn 0;\n}\n\n```",
        "postTime": 1659754781,
        "uid": 206024,
        "name": "Illusory_dimes",
        "ccfLevel": 7,
        "title": "[Cnoi2019]\u987b\u81fe\u5e7b\u5883"
    }
]