[
    {
        "content": "\u7ec8\u4e8e\u628a\u6b20\u4e0b\u51e0\u4e2a\u6708\u7684\u5927\u5751\u586b\u4e0a\u4e86\u2026\u2026\n\n\u4e00\u9053\u6bd4\u8f83\u7ecf\u5178\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u95ee\u9898\u3002\n\n\u8003\u8651~~\u4f17\u6240\u5468\u77e5\u7684~~\u7ebf\u6bb5\u6811\u4e94\u95ee\uff1a\n\n1\u3001\u6bcf\u4e2a\u533a\u95f4\u9700\u8981\u8bb0\u5f55\u54ea\u4e9b\u503c\uff1f\n\n\u533a\u95f4\u7ef4\u62a4\u4efb\u9009c\u4e2a\u6570\u7684\u4e58\u79ef\u4e4b\u548c\u53ef\u80fd\u6bd4\u8f83\u68d8\u624b\uff0c\u4e0d\u8fc7\u6ce8\u610f\u5230c\u53ea\u670920\uff0c\u6211\u4eec\u4e0d\u59a8\u66b4\u529b\u5730\u628a\u90090~20\u4e2a\u6570\u7684\u7b54\u6848\u5168\u90fd\u8bb0\u4e0b\u6765\u3002\n\n2\u3001\u9700\u8981\u54ea\u4e9b\u6807\u8bb0\uff1f\n\n\u533a\u95f4\u52a0\u6807\u8bb0\uff0c\u533a\u95f4\u53d6\u53cd\u6807\u8bb0\u3002\n\n3\u3001\u5982\u4f55\u53e0\u52a0\u6807\u8bb0\uff08\u5728\u539f\u6709\u6807\u8bb0\u7684\u533a\u95f4\u589e\u52a0\u65b0\u7684\u6807\u8bb0\uff1f\uff09\n\n\u533a\u95f4\u52a0\u6807\u8bb0\u76f4\u63a5\u53e0\u52a0\u5c31\u884c\u4e86\u3002\n\n\u5904\u7406\u53d6\u53cd\u6807\u8bb0\u65f6\uff0c\u4e0e\u539f\u5148\u7684\u6807\u8bb0xor\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u6211\u4eec\u94a6\u5b9a\u53d6\u53cd\u6807\u8bb0\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u533a\u95f4\u52a0\u6807\u8bb0\u3002\u8fd9\u6837\u7684\u8bdd\u522b\u5fd8\u4e86\u5728\u52a0\u4e00\u4e2a\u53d6\u53cd\u6807\u8bb0\u65f6\u628a\u539f\u6765\u7684\u533a\u95f4\u52a0\u6807\u8bb0\u4e5f\u53d6\u53cd\u3002\n\n4\u3001\u5982\u4f55\u5bf9\u533a\u95f4\u8fdb\u884c\u6574\u4f53\u4fee\u6539\uff1f\n\n\u5148\u8003\u8651\u53d6\u53cd\u3002\n\n\u7531\u4e8e\u5947\u6570\u4e2a-1\u76f8\u4e58\u662f-1\uff0c\u5076\u6570\u4e2a-1\u76f8\u4e58\u662f1\uff0c\u6240\u4ee5\u5bf9\u4e8e\u533a\u95f4\u5185\u5947\u6570\u4e2a\u6570\u7684\u7b54\u6848\u8981\u53d6\u53cd\uff0c\u5076\u6570\u4e2a\u6570\u7684\u7b54\u6848\u4e0d\u53d8\u3002\n\n\u533a\u95f4\u52a0\u5904\u7406\u8d77\u6765\u53ef\u80fd\u6bd4\u8f83\u9ebb\u70e6\uff1a\n\n\u8bbe\u533a\u95f4\u5927\u5c0f\u4e3ap\u3002\n\n\u539f\u5148\u533a\u95f4\u5185\u7684\u6570\u662fa1,a2\u2026\u2026,ap,\u533a\u95f4\u52a0x\u540e\u53d8\u6210\u4e86(a1+x),(a2+x),\u2026\u2026,(ap+x)\u3002\n\n\u8003\u8651\u5bf9\u533a\u95f4\u7684\u7b2ci\u9879\u8fdb\u884c\u4fee\u6539\uff0c\u6211\u4eec\u53d6\u4efb\u610f\u4e00\u7ec4\u4e58\u79ef(a1+x)\u00b7(a2+x)\u00b7\u2026\u2026\u00b7(ai+x)\n\n\u628a\u5b83\u5c55\u5f00\uff1a\n\n\u539f\u5f0f=a1\u00b7a2\u00b7\u2026\u2026\u00b7ai + x\u00b7(a1\u00b7a2\u00b7\u2026\u2026\u00b7ai-1+a1\u00b7a2\u00b7\u2026\u2026\u00b7ai-2\u00b7ai + \u2026\u2026) + x^2\u00b7(a1\u00b7a2\u00b7\u2026\u2026\u00b7ai-2+\u2026\u2026) + \u2026\u2026 \n\n\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u76f8\u5f53\u4e8e sigma (j=1~i) x^(i-j)\u00b7(\u4ece\u8fd9i\u4e2a\u6570\u4e2d\u9009\u51faj\u4e2a\u6570\u7684\u4e58\u79ef\u4e4b\u548c)\u3002\n\n\u4ecd\u7136\u4e0d\u600e\u4e48\u597d\u5904\u7406\uff0c\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u8f6c\u800c\u53bb\u7b97\u8fd9\u6837\u4e00\u4e2a\u4e1c\u897f\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2aj\u4e2a\u6570\u7684\u4e58\u79ef\u7684\u5f0f\u5b50\uff0c\u5bf9i\u4e2a\u6570\u7684\u4e58\u79ef\u7684\u8d21\u732e\u6709\u591a\u5c11\u3002\n\n\u5373\uff1a\u8fd9\u4e2a\u5f0f\u5b50\u5728\u8ba1\u7b97\u7b2ci\u9879\u7b54\u6848\u65f6\u88ab\u7b97\u8fc7\u591a\u5c11\u6b21\u3002\n\n\u5c31\u76f8\u5f53\u4e8e\uff1a\u6709\u591a\u5c11\u4e2a\u4ecep\u4e2a\u6570\u4e2d\u9009i\u4e2a\u6570\u7684\u65b9\u6848\uff0c\u5305\u542b\u4e86\u67d0\u7279\u5b9a\u7684j\u4e2a\u6570\u3002\n\n\u76f8\u5f53\u4e8e\u8fd9j\u4e2a\u6570\u5fc5\u987b\u9009\uff0c\u8fd8\u8981\u4ece\u5269\u4f59(p-j)\u4e2a\u6570\u4e2d\u4efb\u610f\u9009\u51fa(i-j)\u4e2a\u6570\u3002\n\n\u7b54\u6848\u662fC(p-j,i-j)\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u6709\u4e86\u5f0f\u5b50\uff1aans[i] = sigma(j=0~i) x^(i-j)\u00b7ans[j]\u00b7C(p-j,i-j)\u3002\n\n\u6768\u8f89\u4e09\u89d2\u9884\u5904\u7406\u51fa(n,20)\u4ee5\u5185\u7684\u7ec4\u5408\u6570\uff0c\u66f4\u65b0\u7b54\u6848\u65f6\u6ce8\u610f\u8981\u4ece\u5927\u5230\u5c0f\u66f4\u65b0\u3002\n\n5\u3001\u5982\u4f55\u5408\u5e76\u533a\u95f4\uff1f\n\nans[now][i]= sigma (j=0~i) ans[ls][j] * ans[rs][i-j]\u3002\n\n\u5373\uff1a\u5927\u533a\u95f4\u9009\u4e86i\u4e2a\u6570\uff0c\u53ef\u4ee5\u662f\u5de6\u533a\u95f4\u90090\u4e2a\uff0c\u53f3\u533a\u95f4\u9009i\u4e2a\uff1b\u5de6\u533a\u95f4\u90091\u4e2a\uff0c\u53f3\u533a\u95f4\u9009(i-1)\u4e2a\uff0c\u2026\u2026\uff0c\u5de6\u533a\u95f4\u9009i\u4e2a\uff0c\u53f3\u533a\u95f4\u90090\u4e2a\u3002\n\n\u6ce8\u610f\u7279\u5224\u4e00\u4e0b\u90090\u4e2a\u7684\u60c5\u51b5(\u5e94\u8be5\u4e581\u800c\u4e0d\u662f\u4e580)\uff0c\u5728\u8fd9\u91ccwa\u4e86\u597d\u51e0\u6b21\u3002\n\n\u4e8e\u662f\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c~~\u662f\u4e0d\u662f\u975e\u5e38\u7b80\u5355~~\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ln q << 1\n#define rn (q << 1) | 1\n#define lson ln,l,mid\n#define rson rn,mid + 1,r\n#define md int mid = l + r >> 1\n#define lint long long\nusing namespace std;\nconst int mo = 19940417;\nint n,m;\nint zuhe[50010][21];\nstruct node{\n\tlint c[21],c1;\n\tint sz;\n\tbool c2;\n\tnode(){c1 = sz = c2 = 0;memset(c,0,sizeof(c));}\n}t[200010];\nint a[50010];\nlint tmp[21];\nint read(){\n\tint x = 0,y = 1;\n\tchar c;\n\tc = getchar();\n\twhile(c < '0' || c > '9'){\n\t\tif(c == '-') y = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9'){\n\t\tx = (x << 1) + (x << 3) + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * y;\n}\nvoid print(lint q){\n\tif(q >= 10) print(q / 10);\n\tputchar(q % 10 + '0');\n}\nvoid upd(int q){//\u5411\u4e0a\u66f4\u65b0\u8282\u70b9 \n\tregister int i,j;\n\tmemset(t[q].c,0,sizeof(t[q].c));\n\tfor(i = 0;i <= 20 && i <= t[ln].sz;++i){\n\t\tfor(j = 0;j + i <= 20 && j <= t[rn].sz;++j){\n\t\t\tt[q].c[i + j] += t[ln].c[i] * t[rn].c[j];\n\t\t}\n\t}\n\tfor(i = 0;i <= 20 && i <= t[q].sz;++i) t[q].c[i] %= mo;\n}\nvoid build(int q,int l,int r){//\u521d\u59cb\u5316 \n\tt[q].sz = r - l + 1;\n\tif(l == r) {\n\t\tt[q].c[0] = 1;\n\t\tt[q].c[1] = (a[l] % mo + mo) % mo; \n\t\treturn;\n\t}\n\tmd;\n\tbuild(lson);\n\tbuild(rson);\n\tupd(q);\n}\nvoid add(int q,int x){//\u533a\u95f4\u52a0\u7684\u66f4\u65b0 \n\tif(!q || !x) return;\n\tregister int i,j;\n\ttmp[0] = 1;\n\tfor(i = 1;i <= 20 && i <= t[q].sz;++i) tmp[i] = tmp[i - 1] * x % mo;\n\tfor(i = min(20,t[q].sz);i;--i){\n\t\tfor(j = 0;j < i;++j){\n\t\t\tt[q].c[i] = (t[q].c[i] + t[q].c[j] * tmp[i - j] % mo * zuhe[t[q].sz - j][i - j]) % mo;\n\t\t}\n\t}\n\tt[q].c1 = (t[q].c1 + x) % mo;\n}\nvoid rev(int q){//\u533a\u95f4\u53d6\u53cd\u7684\u66f4\u65b0 \n\tif(!q) return;\n\tfor(int i = 1;i <= 20 && i <= t[q].sz;++i) t[q].c[i] = (i & 1) ? mo - t[q].c[i] : t[q].c[i];\n\tt[q].c1 = mo - t[q].c1;\n\tt[q].c2 ^= 1;\n}\nvoid psc(int q){//\u4e0b\u4f20\u6807\u8bb0 \n\tif(t[q].c2){\n\t\trev(ln);\n\t\trev(rn);\n\t\tt[q].c2 = 0;\n\t}\n\tif(t[q].c1){\n\t\tadd(ln,t[q].c1);\n\t\tadd(rn,t[q].c1);\n\t\tt[q].c1 = 0;\n\t}\n}\nvoid md1(int q,int l,int r,int al,int ar,int ax){//\u533a\u95f4\u52a0 \n\tif(l >= al && r <= ar){\n\t\tadd(q,ax);\n\t\treturn;\n\t}\n\tpsc(q);\n\tmd;\n\tif(mid >= al) md1(lson,al,ar,ax);\n\tif(mid < ar) md1(rson,al,ar,ax);\n\tupd(q);\n}\nvoid md2(int q,int l,int r,int al,int ar){//\u533a\u95f4\u53d6\u53cd \n\tif(l >= al && r <= ar) {\n\t\trev(q);\n\t\treturn;\n\t}\n\tpsc(q);\n\tmd;\n\tif(mid >= al) md2(lson,al,ar);\n\tif(mid < ar) md2(rson,al,ar);\n\tupd(q);\n}\nnode mg(node q,node w){//\u5408\u5e76\u4e24\u6bb5\u533a\u95f4 \n\tnode e;\n\tregister int i,j;\n\te.sz = q.sz + w.sz;\n\tfor(i = 0;i <= 20 && i <= q.sz;++i){\n\t\tfor(j = 0;j + i <= 20 && j <= w.sz;++j){\n\t\t\te.c[i + j] = (e.c[i + j] + q.c[i] * w.c[j]) % mo;\n\t\t}\n\t}\n\treturn e;\n}\nnode query(int q,int l,int r,int al,int ar){//\u533a\u95f4\u67e5\u8be2 \n\tif(l >= al && r <= ar) return t[q];\n\tpsc(q);\n\tmd;\n\tif(ar <= mid) return query(lson,al,ar);\n\telse if(al > mid) return query(rson,al,ar);\n\telse return mg(query(lson,al,ar),query(rson,al,ar));\n}\nint main(){\n\tint i,j,k,l,r,x;\n\tchar c;\n\tn = read();\n\tm = read();\n\tfor(i = 1;i <= n;++i) a[i] = read();\n\tt[0].c[0] = 1; \n\tzuhe[0][0] = 1;\n\tfor(i = 1;i <= n;++i){\n\t\tzuhe[i][0] = 1;\n\t\tfor(j = 1;j <= 20 && j <= i;++j) zuhe[i][j] = (zuhe[i - 1][j] + zuhe[i - 1][j - 1]) % mo;\n\t}//\u9884\u5904\u7406\u7ec4\u5408\u6570 \n\tbuild(1,1,n);\n\tfor(i = 1;i <= m;++i){\n\t\tc = getchar();\n\t\twhile(c != 'I' && c != 'Q' && c != 'R') c = getchar();\n\t\tl = read();\n\t\tr = read();\n\t\tif(c == 'I'){\n\t\t\tx = read();\n\t\t\tx = (x % mo + mo) % mo;\n\t\t\tmd1(1,1,n,l,r,x);\n\t\t}\n\t\telse if(c == 'R'){\n\t\t\tmd2(1,1,n,l,r);\n\t\t}\n\t\telse{\n\t\t\tx = read();\n\t\t\tprint((query(1,1,n,l,r).c[x] % mo + mo) % mo);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1524231798,
        "uid": 45775,
        "name": "liuzhangfeiabc",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4247 \u3010[\u6e05\u534e\u96c6\u8bad]\u5e8f\u5217\u64cd\u4f5c\u3011"
    },
    {
        "content": "\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217,\u652f\u6301\u533a\u95f4\u52a0,\u533a\u95f4\u53d8\u4e3a\u76f8\u53cd\u6570,\u67e5\u8be2\u533a\u95f4\u4e2d\u53d6 $c$ \u4e2a\u6570\u7684\u4e58\u79ef\u7684\u6240\u6709\u65b9\u6848\u7684\u603b\u548c.\n\n# \u5206\u6790\n\n\u5148\u4ece\u6ca1\u6709\u4fee\u6539\u5f00\u59cb,\u67e5\u8be2\u533a\u95f4\u4e2d\u9009 $c$ \u4e2a\u6570\u4e58\u79ef\u7684\u6240\u6709\u65b9\u6848\u7684\u603b\u548c,$c$ \u7684\u8303\u56f4\u5f88\u5c0f,\u6240\u4ee5\u53ef\u4ee5\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4,\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4 $f$,$f_i$ \u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u7684\u533a\u95f4\u4e2d\u9009 $i$ \u4e2a\u6570\u7684\u4e58\u79ef\u7684\u6240\u6709\u65b9\u6848\u7684\u603b\u548c,\u81f3\u4e8e\u5408\u5e76,\u53ef\u4ee5\u679a\u4e3e\u4e24\u9897\u5b50\u6811\u4e2d\u9009\u53d6\u7684\u6570\u7684\u4e2a\u6570,\u7136\u540e\u76f8\u4e58\u8ba1\u7b97\u8d21\u732e(\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e24\u4e2a\u591a\u9879\u5f0f\u76f8\u4e58).\n\n\u5bf9\u4e8e\u53d8\u4e3a\u76f8\u53cd\u6570\u7684\u64cd\u4f5c\u8fd8\u662f\u5f88\u7b80\u5355\u7684,\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u662f\u5076\u6570\u4e2a\u6570\u76f8\u4e58\u90a3\u4e48\u5176\u4e2d\u7684\u6570\u5168\u90e8\u53d8\u4e3a\u76f8\u53cd\u6570\u5e76\u4e0d\u4f1a\u5bf9\u7ed3\u6784\u4ea7\u751f\u5f71\u54cd,\u5982\u679c\u662f\u5947\u6570\u4e2a\u6570\u76f8\u4e58\u90a3\u6700\u540e\u7684\u7ed3\u679c\u4e5f\u4f1a\u53d8\u6210\u76f8\u53cd\u6570,\u6240\u4ee5\u53ea\u8981\u5947\u5076\u6027\u5224\u65ad\u4e00\u4e0b\u5c31\u597d\u4e86.\n\n\u7136\u540e\u662f\u533a\u95f4\u52a0\u7684\u64cd\u4f5c,\u4e5f\u662f\u672c\u9898\u7684\u91cd\u70b9.\n\n\u5148\u4ece\u627e\u89c4\u5f8b\u5f00\u59cb:\n\n\u5bf9\u4e8e $a_1a_2$ \u4e2d\u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0a $x$ \u4ee5\u540e,$(a_1+x)(a_2+x)=a_1a_2+(a_1+a_2)x+x^2$\n\n\u5bf9\u4e8e $a_1a_2a_3$ \u4e2d\u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0a $x$ \u4ee5\u540e,$(a_1+x)(a_2+x)(a_3+x)=a_1a_2a_3+(a_1a_2+a_1a_3+a_2a_3)x+(a_1+a_2+a_3)x^2+x^3$\n\n\u5bf9\u4e8e $a_1a_2a_3a_4$ \u4e2d\u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0a $x$ \u4ee5\u540e,$(a_1+x)(a_2+x)(a_3+x)(a_4+x)=a_1a_2a_3a_4+(a_1a_2a_3+a_1a_2a_4+a_1a_3a_4+a_2a_3a_4)x+(a_1a_2+a_1a_3+a_1a_4+a_2a_3+a_2a_4+a_3a_4)x^2+(a_1+a_2+a_3+a_4)x^3+x^4$\n\n$\\ldots$\n\n\u5bf9\u4e8e $a_1a_2a_3\\cdots a_{n-1}a_{n}$ \u4e2d\u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0a $x$ \u4ee5\u540e,$(a_1+x)(a_2+x)(a_3+x)\\cdots(a_{n-1}+x)(a_{n}+x)=\\sum_{i=0}^{n}f_{n-i}x^i$(\u5176\u4e2d $f_i$ \u540c\u7ebf\u6bb5\u6811\u7684\u6807\u8bb0,\u4e3a\u9009\u51fa $i$ \u4e2a\u6570\u7684\u4e58\u79ef\u7684\u6240\u6709\u65b9\u6848\u7684\u548c,\u6ce8\u610f $f_0=1$)\n\n\u4f46\u662f\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u8981 $\\mathcal{O}(n)$ \u663e\u7136\u662f\u4e0d\u4f18\u79c0\u7684.\n\n\u90a3\u4e48\u8003\u8651\u5728 $a$ \u9009\u51fa $j$ \u4e2a\u6570\u7684\u8d21\u732e,\u5bf9\u4e8e $a_{p_1}a_{p_2}a_{p_3}\\cdots a_{p_{j-1}}a_{p_j}$ \u8fd9\u6837\u7684\u4e00\u6bb5\u4e58\u79ef\u4f1a\u51fa\u73b0\u5728\u6240\u6709\u5305\u542b\u8fd9\u8fd9\u4e9b\u6570\u7684\u65b9\u6848\u4e2d,\u90a3\u4e48\u8fd9\u6bb5\u6570\u7684\u8d21\u732e\u5c31\u662f\u8fd9\u6bb5\u6570\u7684\u4e58\u79ef $\\times$ \u8fd9\u6bb5\u6570\u51fa\u73b0\u5728\u7684\u65b9\u6848\u7684\u4e2a\u6570 $\\times$ \u5728\u4e0d\u540c\u957f\u5ea6\u7684\u65b9\u6848\u4e2d\u8fd9\u6bb5\u6570\u9700\u8981\u4e58\u4e0a\u7684 $x$ \u7684\u5e42\u6b21.\u800c\u5bf9\u4e8e\u6240\u6709\u7684\u957f\u5ea6\u4e3a $j$ \u7684 $p$ \u6570\u7ec4\u5bf9\u4e8e\u7684 $a$ \u6570\u7ec4\u4e2d\u7684\u6570\u7684\u4e58\u79ef\u7684\u548c\u5c31\u662f $f_j$,\u4e8e\u662f\u53ea\u8981\u8ba1\u7b97\u51fa\u51fa\u73b0\u7684\u65b9\u6848\u6570\u4e4b\u540e\u5c31\u53d8\u5f97\u5f88\u597d\u8ba1\u7b97\u4e86,\u81f3\u4e8e\u65b9\u6848\u6570\u7684\u8ba1\u7b97\u53ef\u4ee5\u53d1\u73b0\u8fd9 $j$ \u4e2a\u6570\u662f\u56fa\u5b9a\u4e0d\u80fd\u53d8\u7684,\u5982\u679c\u8981\u8ba1\u7b97\u5bf9\u4e8e $f_i$ \u7684\u8d21\u732e\u65f6\u5c31\u662f\u9700\u8981\u5728 $n-j$ \u4e2a\u6570\u4e2d\u518d\u9009\u53d6 $i-j$ \u4e2a\u6570,\u6240\u4ee5\u65b9\u6848\u6570\u5c31\u662f $C_{n-j}^{i-j}$,\u800c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u9884\u5904\u7406\u4ee5\u540e\u505a\u5230 $O(1)$ \u8ba1\u7b97,\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u505a\u597d\u4e86.\n\n\u6700\u540e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(N\\log_2N\\times c^2)$($c$ \u4e3a $\\min(N,20)$).\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define REP(i,first,last) for(int i=first;i<=last;++i)\n#define DOW(i,first,last) for(int i=first;i>=last;--i)\nusing namespace std;\nconst int MAXN=5e4+7;\nconst long long mod=19940417;\nint N,M;\nlong long arr[MAXN];\nlong long c[MAXN][22];//\u901a\u8fc7\u6768\u8f89\u4e09\u89d2\u8ba1\u7b97\u7ec4\u5408\u6570\nstruct LazyTag//\u61d2\u6807\u8bb0\n{\n\tbool flips;\n\tlong long add;\n\tvoid Clean()//\u6e05\u7a7a\u61d2\u6807\u8bb0\n\t{\n\t\tflips=0;\n\t\tadd=0;\n\t}\n}ForMake;\nlong long Mod(long long a)//\u56e0\u4e3a\u6709\u8d1f\u6570,\u6240\u4ee5\u624b\u5199\u4e00\u4e2a\u53d6\u6a21\n{\n\ta%=mod;\n\ta+=mod;\n\ta%=mod;\n\treturn a;\n}\nLazyTag MakeLazyTag(long long add,bool flips=0)//\u5efa\u4e00\u4e2a\u61d2\u6807\u8bb0(\u6ca1\u5565\u7528)\n{\n\tForMake.add=Mod(add);\n\tForMake.flips=flips;\n\treturn ForMake;\n}\nstruct SegmentTree//\u7ebf\u6bb5\u6811\u90e8\u5206\n{\n\tlong long choose[22];//\u6bcf\u4e2a\u8282\u70b9\u9700\u8981\u8ba1\u7b97\u5f53\u524d\u533a\u95f4\u7528\u9009c\u4e2a\u6570\u7684\u4e58\u79ef\u7684\u7684\u6240\u6709\u65b9\u6848\u7684\u548c\n\tint len;//min(right-left+1,20)\n\tLazyTag tag;\n}sgt[MAXN*4];\n#define LSON (now<<1)\n#define RSON (now<<1|1)\n#define MIDDLE ((left+right)>>1)\n#define LEFT LSON,left,MIDDLE\n#define RIGHT RSON,MIDDLE+1,right\n#define NOW now_left,now_right\nvoid PushUp(int now)//\u5408\u5e76\n{\n\tREP(i,0,sgt[now].len)\n\t{\n\t\tsgt[now].choose[i]=0;\n\t}\n\tREP(i,0,sgt[LSON].len)//\u679a\u4e3e\u5de6\u53f3\u5b50\u6811\u53d6\u7684\u6570\u7684\u4e2a\u6570\n\t{\n\t\tREP(j,0,sgt[RSON].len)\n\t\t{\n\t\t\tif(i+j<=sgt[now].len)\n\t\t\t{\n\t\t\t\tsgt[now].choose[i+j]+=sgt[LSON].choose[i]*sgt[RSON].choose[j]%mod;//\u8ba1\u7b97\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4\u7684\u8d21\u732e\n\t\t\t\tsgt[now].choose[i+j]=Mod(sgt[now].choose[i+j]);\n\t\t\t}\n\t\t}\n\t}\n}\nvoid Build(int now=1,int left=1,int right=N)//\u5efa\u6811\n{\n\tsgt[now].len=min(20,right-left+1);\n\tif(left==right)\n\t{\n\t\tsgt[now].choose[0]=1;//\u6ce8\u610f\u90090\u4e2a\u6570\u4e3a1\n\t\tsgt[now].choose[1]=Mod(arr[left]);\n\t\treturn;\n\t}\n\tBuild(LEFT);\n\tBuild(RIGHT);\n\tPushUp(now);\n}\nlong long power[22]={1};\n#define LEN (right-left+1)\nvoid DownAdd(LazyTag tag,int now,int left,int right)//\u52a0\u7684\u64cd\u4f5c\n{\n\tif(!tag.add)\n\t{\n\t\treturn;\n\t}\n\tREP(i,1,sgt[now].len)//\u5148\u8ba1\u7b97\u52a0\u7684\u6570\u7684\u5e42\u6b21\n\t{\n\t\tpower[i]=Mod(power[i-1]*tag.add);\n\t}\n\tDOW(i,sgt[now].len,1)\n\t{\n\t\tREP(j,0,i-1)\n\t\t{\n\t\t\t//\u8ba1\u7b97\u5f53\u524d\u5fc5\u987b\u9009\u7684\u957f\u5ea6\u5bf9\u4e8e\u5f53\u524d\u7684\u957f\u5ea6\u7684\u8d21\u732e\n\t\t\tsgt[now].choose[i]+=(sgt[now].choose[j]*power[i-j]%mod*c[LEN-j][i-j])%mod;\n\t\t\tsgt[now].choose[i]%=mod;\n\t\t}\n\t}\n\tsgt[now].tag.add+=tag.add;\n}\nvoid DownFlips(LazyTag tag,int now,int left,int right)//\u533a\u95f4\u53d8\u4e3a\u76f8\u53cd\u6570\n{\n\tif(!tag.flips)\n\t{\n\t\treturn;\n\t}\n\tsgt[now].tag.flips^=1;\n\tsgt[now].tag.add=mod-sgt[now].tag.add;//\u6ce8\u610f\u9700\u8981\u5c06\u52a0\u6807\u8bb0\u4e5f\u53d6\u53cd\n\tREP(i,1,sgt[now].len)\n\t{\n\t\tif(i&1)//\u5947\u6570\u4f4d\u7f6e\u53d8\u4e3a\u76f8\u53cd\u6570\n\t\t{\n\t\t\tsgt[now].choose[i]=mod-sgt[now].choose[i];\n\t\t}\n\t}\n}\nvoid PushDown(int now,int left,int right)//\u4e0b\u4f20\u61d2\u6807\u8bb0\n{\n\tDownFlips(sgt[now].tag,LEFT);\n\tDownFlips(sgt[now].tag,RIGHT);\n\tDownAdd(sgt[now].tag,LEFT);\n\tDownAdd(sgt[now].tag,RIGHT);\n\tsgt[now].tag.Clean();\n}\n//\u4fee\u6539\u90e8\u5206\u4e0d\u591a\u8bf4\nvoid UpdataAdd(int now_left,int now_right,int add,int now=1,int left=1,int right=N)\n{\n\tif(now_right<left||right<now_left)\n\t{\n\t\treturn;\n\t}\n\tif(now_left<=left&&right<=now_right)\n\t{\n\t\tDownAdd(MakeLazyTag(add),now,left,right);\n\t\treturn;\n\t}\n\tPushDown(now,left,right);\n\tUpdataAdd(NOW,add,LEFT);\n\tUpdataAdd(NOW,add,RIGHT);\n\tPushUp(now);\n}\nvoid UpdataFlips(int now_left,int now_right,int now=1,int left=1,int right=N)\n{\n\tif(now_right<left||right<now_left)\n\t{\n\t\treturn;\n\t}\n\tif(now_left<=left&&right<=now_right)\n\t{\n\t\tDownFlips(MakeLazyTag(0,1),now,left,right);\n\t\treturn;\n\t}\n\tPushDown(now,left,right);\n\tUpdataFlips(NOW,LEFT);\n\tUpdataFlips(NOW,RIGHT);\n\tPushUp(now);\n}\nlong long answer[22];//\u8bb0\u5f55\u7b54\u6848\nlong long help[22];//\u5e2e\u52a9\u8ba1\u7b97\nbool check=0;//\u8bb0\u5f55\u5f53\u524d\u662f\u4e0d\u662f\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u533a\u95f4\nvoid BeforeQuery()//\u67e5\u8be2\u524d\u9884\u5904\u7406\n{\n\tREP(i,0,21)\n\t{\n\t\tanswer[i]=0;\n\t}\n\tanswer[0]=1;\n\tcheck=0;\n}\nvoid Query(int now_left,int now_right,int now=1,int left=1,int right=N)//\u67e5\u8be2\n{\n\tif(now_right<left||right<now_left)\n\t{\n\t\treturn;\n\t}\n\tif(now_left<=left&&right<=now_right)\n\t{\n\t\tif(!check)//\u5982\u679c\u6ca1\u6709\u67e5\u8be2\u5230\u8fc7\u5c31\u8d4b\u503c\n\t\t{\n\t\t\tREP(i,0,sgt[now].len)\n\t\t\t{\n\t\t\t\tanswer[i]=Mod(sgt[now].choose[i]);\n\t\t\t}\n\t\t\tcheck=1;\n\t\t}\n\t\telse//\u5982\u679c\u67e5\u8be2\u5230\u8fc7\u9700\u8981\u50cf\u5408\u5e76\u4e24\u9897\u5b50\u6811\u7684\u65b9\u5f0f\u4e00\u6837\u5408\u5e76\n\t\t{\n\t\t\tREP(i,0,20)\n\t\t\t{\n\t\t\t\thelp[i]=answer[i];\n\t\t\t\tanswer[i]=0;\n\t\t\t}\n\t\t\tREP(i,0,20)\n\t\t\t{\n\t\t\t\tREP(j,0,sgt[now].len)\n\t\t\t\t{\n\t\t\t\t\tif(i+j<=20)\n\t\t\t\t\t{\n\t\t\t\t\t\tanswer[i+j]+=help[i]*sgt[now].choose[j]%mod;\n\t\t\t\t\t\tanswer[i+j]=Mod(answer[i+j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tPushDown(now,left,right);\n\tQuery(NOW,LEFT);\n\tQuery(NOW,RIGHT);\n}\nint main()\n{\n\tscanf(\"%d%d\",&N,&M);\n\tREP(i,1,N)\n\t{\n\t\tscanf(\"%lld\",&arr[i]);\n\t}\n\tc[0][0]=1;//\u6768\u8f89\u4e09\u89d2\u8ba1\u7b97\u7ec4\u5408\u6570\n\tREP(i,1,N)\n\t{\n\t\tc[i][0]=1;\n\t\tREP(j,1,20)\n\t\t{\n\t\t\tc[i][j]=Mod(c[i-1][j]+c[i-1][j-1]);\n\t\t}\n\t}\n\tBuild();//\u5efa\u6811\n\tchar opt;\n\tint left,right,c;\n\tREP(i,1,M)\n\t{\n\t\tcin>>opt;\n\t\tscanf(\"%d%d\",&left,&right);\n\t\tif(opt=='I')\n\t\t{\n\t\t\tscanf(\"%d\",&c);\n\t\t\tUpdataAdd(left,right,c);//\u533a\u95f4\u52a0\n\t\t}\n\t\tif(opt=='R')\n\t\t{\n\t\t\tUpdataFlips(left,right);//\u533a\u95f4\u53d8\u4e3a\u76f8\u53cd\u6570\n\t\t}\n\t\tif(opt=='Q')\n\t\t{\n\t\t\tscanf(\"%d\",&c);\n\t\t\tBeforeQuery();\n\t\t\tQuery(left,right);//\u67e5\u8be2\n\t\t\tprintf(\"%lld\\n\",answer[c]);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582892376,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4247 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u5e8f\u5217\u64cd\u4f5c\u3011"
    },
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\n- \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u652f\u6301 $n$ \u4e2a\u64cd\u4f5c\n\n\t- $\\text{I a b c}$ \u8868\u793a\u5c06 $[a,b]$ \u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u5143\u7d20\u96c6\u4f53\u589e\u52a0 $c$\uff1b\n\t- $\\text{R a b}$ \u8868\u793a\u5c06 $[a,b]$ \u533a\u95f4\u5185\u6240\u6709\u5143\u7d20\u53d8\u6210\u76f8\u53cd\u6570\uff1b\n\t- $\\text{Q a b c}$ \u8868\u793a\u8be2\u95ee $[a,b]$ \u8fd9\u4e00\u6bb5\u533a\u95f4\u4e2d\u9009\u62e9 $c$ \u4e2a\u6570\u76f8\u4e58\u7684\u6240\u6709\u65b9\u6848\u7684\u548c $\\bmod 19940417$ \u7684\u503c\u3002\n    \n\u60f3\u4e86 $\\text{1h30min+}$ \u7684\u7ec6\u8282\u624d\u505a\u51fa\u6765\uff0c\u679c\u7136\u6211\u8fd8\u662f\u7ec4\u5408\u6570\u5b66\u83dc\u9e21\u554a/dk\n    \n\u524d\u4e24\u4e2a\u64cd\u4f5c\u8fd8\u7b97\u6b63\u5e38\uff0c\u548c **[\u6a21\u677f]\u7ebf\u6bb5\u68112** \u662f\u672c\u8d28\u76f8\u540c\u7684\uff0c\u90fd\u662f\u76f8\u4e92\u5f71\u54cd\u7684\u64cd\u4f5c\u3002\u89c2\u5bdf\u4e00\u4e0b\uff0c\u5b9a\u4e49\u53d6\u76f8\u53cd\u6570\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u5373\u53ef\u3002\n\n\u52a0\u4e0a\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u5c31\u53d8\u5f97\u68d8\u624b\u4e86\u5f88\u591a\uff0c\u4e0d\u59a8\u60f3\u60f3\u53ea\u6709\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u7684\u505a\u6cd5\u3002\n\n\u6ce8\u610f\u5230 $c$ \u5f88\u5c0f\uff0c\u663e\u7136\u662f\u4e00\u4e2a\u57fa\u4e8e $c$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u505a\u6cd5\u3002\u53ef\u4ee5\u60f3\u5230 $\\text{DP}$ \uff0c\u8bbe $f[l,r,i]$ \u4e3a $[l,r]$ \u4e2d\u9009 $i$ \u4e2a\u76f8\u4e58\uff0c\u6240\u6709\u65b9\u6848\u7684\u548c\u3002\u90a3\u4e48\u6709 \n\n$$\nf[l,r,i]=\\sum_{k=0}^i f[l,j,k]\\times f[j+1,r,k]\n$$\n\n\u5176\u4e2d $j$ \u4e3a\u679a\u4e3e\u7684\u4e00\u4e2a\u5e38\u6570\u3002\u7531\u4e8e\u8fd9\u4e2a $j$ \u53ef\u4ee5\u53d6\u4efb\u4f55\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ee4\u8fd9\u4e2a $j$ \u5728\u4efb\u4f55\u65f6\u5019\u90fd\u53d6\u7ebf\u6bb5\u4e2d\u70b9 $mid$\u3002\n\n\u6839\u636e\u4e0a\u5f0f\uff0c\u5728\u5df2\u7ecf\u6709\u4e86 $[l,mid],[mid+1,r]$ \u4e24\u4e2a\u533a\u95f4\u7684\u4fe1\u606f\u4ee5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5408\u5e76\u8fd9\u4e24\u4e2a\u533a\u95f4 $[l,mid]$ \u548c $[mid+1,r]$ $\\to[l,r]$\u3002\u770b\u4e0a\u53bb\u662f\u4e0d\u662f\u5f88\u50cf\u7ebf\u6bb5\u6811\u7684 $\\text{pushup}$\uff1f\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a $f$ \u653e\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\uff0c\u5982\u679c\u53ea\u6709\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230 $O(nc^2 \\log n)$\uff0c\u76f8\u6bd4\u66b4\u529b\u7684 $O(n^2c)$\uff0c\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u975e\u5e38\u4f18\u79c0\u7684\u3002\n\n\u90a3\u4e48\u8003\u8651\u52a0\u5165\u524d\u4e24\u4e2a\u64cd\u4f5c\u3002\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5217\u4e3e\u51fa\u4e00\u4e9b\u60c5\u51b5\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u7684\u60c5\u51b5\u50cf\u662f\u8fd9\u4e2a\u6837\u5b50\uff1a$c=2$ \u65f6\uff0c$a_1a_2+a_2a_3+a_1a_3\\to (a_1+val)(a_2+val)+(a_2+val)(a_3+val)+(a_1+val)(a_3+val)$\u3002$a_i$ \u663e\u7136\u662f\u5e38\u6570\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e $val$ \u7684 $c$ \u6b21\u591a\u9879\u5f0f\u3002\u5c06 $val$ \u7684\u4e0d\u540c\u6b21\u9879\u5206\u5f00\u8ba1\u7b97\uff0c\u53ef\u5f97\uff1a\n\n$$\nf'[l,r,i]=\\sum_{k=0}^i\\left(\\binom{n-i+k}{k}f[l,r,i-k]\\right)val^k\n$$\n\n\u5176\u4e2d $f'[l,r,i]$ \u4e3a\u533a\u95f4\u52a0\u64cd\u4f5c\u4e4b\u540e\u7684 $f[l,r,i]$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u5176\u5b9e\u5c31\u662f\u53cd\u8f6c\u6b63\u8d1f\u6027\uff0c\u5c06\u7b54\u6848\u4e2d\u6bcf\u4e2a\u90e8\u5206\u7684\u7b26\u53f7\u5199\u51fa\u6765\uff0c\u89c2\u5bdf\u5e76\u8bc1\u660e\uff0c\u53ef\u4ee5\u5f97\u5230\u5f53 $c$ \u4e3a\u5947\u6570\u65f6\uff0c\u6b63\u8d1f\u6027\u4e0d\u53d8\uff0c$c$ \u4e3a\u5076\u6570\u65f6\uff0c\u6b63\u8d1f\u6027\u6539\u53d8\uff0c\u5f62\u5f0f\u5316\u7684\u8868\u8fbe\uff1a\n\n$$\nf'[l,r,i]=-f[l,r,i],when \\ i\\equiv1\\pmod 2\n$$\n\n\u90a3\u4e48\u6839\u636e\u4ee5\u4e0a\u4e09\u4e2a\u67ff\u5b50\u7ef4\u62a4 $f$ \uff0c\u518d\u7a0d\u5fae\u8003\u8651\u4e00\u4e0b $1,2$ \u4e24\u4e2a\u64cd\u4f5c\u7684\u4f18\u5148\u7ea7\uff0c\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n- **\u5e8f\u5217\u7684\u7edd\u5bf9\u503c$\\leq 10^9$\uff0c\u800c\u975e\u5e8f\u5217 $\\leq 10^9$ \uff0c\u6ce8\u610f\u5bf9\u521d\u59cb\u5e8f\u5217\u7684\u53d6\u6a21 ~~\uff08\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u88ab\u8fd9\u4e2a\u5361\u4e86 2h~~**\n\n- **$19970417$ \u4e0d\u662f\u8d28\u6570\uff0c\u4e0d\u80fd\u4f7f\u7528\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u800c\u5e94\u4f7f\u7528\u6768\u8f89\u4e09\u89d2\u6c42\u7ec4\u5408\u6570**\n\n- **\u5bf9\u53d6\u6a21\u7b49\u64cd\u4f5c\u8fdb\u884c\u5c01\u88c5\u4f1a\u628a\u7a0b\u5e8f\u5361 $\\texttt{TLE}$\uff0c\u672c\u9898\u9700\u8981\u4e00\u5b9a\u7684\u5361\u5e38\u529f\u5e95\u8bf7\u614e\u91cd\u98df\u7528 ~~\uff08\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u88ab\u8fd9\u4e2a\u5361\u4e86\u4e00\u665a\u4e0a~~**\n\n**Show the Code**\n```cpp\n#include<cstdio>\n#define ls p<<1\n#define rs p<<1|1 \n#define min(a,b) ((a)<(b)? (a):(b))\ntypedef long long ll;\nconst ll mod=19940417;\nint a[50005],C[50005][25];\nstruct Segment {Segment() {l=r=add=0;rev=1;f[0]=1;for(register int i=1;i<=20;++i) f[i]=0;} int l,r,rev,add; int f[25];} t[200005];\ninline char _read() {register char s=getchar();while(s>'Z'||s<'A') s=getchar();return s;}\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();} \n\treturn x*f;\n}\ninline void work_add(int p,int v) {\n\tint n=t[p].r-t[p].l+1,lim=min(n,20); v=(v%mod+mod)%mod;\n\tfor(register int i=lim;i>=1;--i) for(register int k=1,now=v;k<=i;++k,now=(ll)now*(ll)v%mod) t[p].f[i]=(t[p].f[i]+(((ll)C[n-(i-k)][k]*(ll)t[p].f[i-k]%mod)*(ll)now%mod))%mod;\n\tt[p].add=(t[p].add+v)%mod;\n}\ninline void work_rev(int p) {int lim=min(t[p].r-t[p].l+1,20);for(register int i=1;i<=lim;i+=2) t[p].f[i]=((mod-t[p].f[i])%mod+mod)%mod;t[p].add=((mod-t[p].add)%mod+mod)%mod;t[p].rev*=-1;}\ninline void pushup(int p) {int lim=min(t[p].r-t[p].l+1,20);for(register int i=1;i<=lim;++i) {t[p].f[i]=0;for(register int k=0;k<=i;++k) t[p].f[i]=(t[p].f[i]+((ll)t[ls].f[k]*(ll)t[rs].f[i-k]%mod))%mod;}}\ninline void spread(int p) { \n\tif(t[p].rev!=1) {work_rev(ls);work_rev(rs);t[p].rev=1;}\n\tif(t[p].add) {work_add(ls,t[p].add);work_add(rs,t[p].add);t[p].add=0;}\n}\ninline void build(int p,int l,int r) {\n\tt[p].rev=1; t[p].add=0; t[p].l=l; t[p].r=r; t[p].f[0]=1; if(l==r) {t[p].f[1]=a[l];return;} \n\tint mid=l+r>>1; build(ls,l,mid); build(rs,mid+1,r); pushup(p);\n}\ninline void modify_add(int p,int l,int r,int val) {\n\tint L=t[p].l,R=t[p].r,mid=L+R>>1;\n\tif(l<=L&&R<=r) {work_add(p,val);return;} spread(p);\n\tif(l<=mid) modify_add(ls,l,r,val);\n\tif(r>mid) modify_add(rs,l,r,val);\n\tpushup(p);\n}\ninline void modify_rev(int p,int l,int r) {\n\tint L=t[p].l,R=t[p].r,mid=L+R>>1;\n\tif(l<=L&&R<=r) {work_rev(p);return;} spread(p);\n\tif(l<=mid) modify_rev(ls,l,r);\n\tif(r>mid) modify_rev(rs,l,r);\n\tpushup(p);\n}\ninline Segment ask(int p,int l,int r) {\n\tint L=t[p].l,R=t[p].r,mid=L+R>>1; Segment res;\n\tif(l<=L&&R<=r) return t[p]; spread(p);\n\tif(r<=mid) return ask(ls,l,r); if(l>mid) return ask(rs,l,r);\n\tSegment x=ask(ls,l,mid),y=ask(rs,mid+1,r); int lim=min(R-L+1,20); \n\tfor(register int i=1;i<=lim;++i) {res.f[i]=0;for(register int k=0;k<=i;++k) res.f[i]=(res.f[i]+((ll)x.f[k]*(ll)y.f[i-k]%mod))%mod;} \n\treturn res;\n}\nsigned main() {\n\tint n=read(),T=read();\n\tfor(register int i=0;i<=20;++i) {C[i][0]=1;for(register int j=1;j<=i;++j) C[i][j]=(C[i-1][j]+C[i-1][j-1])%mod;}\n\tfor(register int i=21;i<=n;++i) {C[i][0]=1;for(register int j=1;j<=20;++j) C[i][j]=(C[i-1][j]+C[i-1][j-1])%mod;}\n\tfor(register int i=1;i<=n;++i) a[i]=(read()%mod+mod)%mod; build(1,1,n);\n\twhile(T--) {\n\t\tchar op=_read(); int l=read(),r=read();\n\t\tif(op=='I') {int x=read();modify_add(1,l,r,x);}\n\t\telse if(op=='R') {modify_rev(1,l,r);}\n\t\telse {int x=read();printf(\"%d\\n\",ask(1,l,r).f[x]);}\n\t}\n\treturn 0;\n}\n```\n\n\n\n\n\n",
        "postTime": 1600155765,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4247 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u5e8f\u5217\u64cd\u4f5c\u3011"
    },
    {
        "content": "# \u9898\u89e3\n\u672c\u9898\u9898\u89e3\u540c\u6b65\u53d1\u5e03\u4e8e\u6211\u7684\u535a\u5ba2[[THUT2012]\u5e8f\u5217\u64cd\u4f5c \u9898\u89e3 | KSkun's Blog](https://ksmeow.moe/sequence_thut12_sol/)\uff0c\u6b22\u8fce\u6765\u901b~\n\n\u8fd9\u4e2a\u9898\u91cc\u9762\u6709\u4e24\u79cd\u6807\u8bb0\uff08\u76f8\u53cd\u6570\u3001\u533a\u95f4\u52a0\uff09\u548c\u4e00\u79cd\u8be2\u95ee\u3002\u6211\u4eec\u5206\u5f00\u6765\u770b\u3002\n## \u6807\u8bb0\u4e0e\u6807\u8bb0\u7684\u5e94\u7528\n\u8fd9\u91cc\u6211\u4eec\u89c4\u5b9a\u76f8\u53cd\u6570\u7684\u6807\u8bb0\u6bd4\u52a0\u6cd5\u6807\u8bb0\u4f18\u5148\u7ea7\u66f4\u9ad8\u3002\u8bd5\u60f3\uff0c\u5982\u679c\u5e94\u7528\u7684\u987a\u5e8f\u76f8\u53cd\uff0c\u53ef\u80fd\u4f1a\u9020\u6210$-a_i+add_i$\u53d8\u6210$-(a_i+add_i)$\u3002\n\n\u9996\u5148\u8003\u8651\u533a\u95f4\u4fe1\u606f\u7684\u8bbe\u7f6e\u3002\u5e94\u8be5\u8bb0\u4e0b\u672c\u533a\u95f4\u957f\u5ea6\u548c\u4e00\u4e2a`f[21]`\u6570\u7ec4\uff0c\u4ee3\u8868\u8fd9\u4e2a\u533a\u95f4\u5185\u5bf9\u4e8e\u6bcf\u4e2ac\u8be2\u95ee\u7684\u7b54\u6848\u3002\u89c4\u5b9a\u4efb\u610f\u7684`f[0]`\u4e3a0\u3002\n\n\u5982\u679c\u8981\u5e94\u7528\u4e00\u4e2a\u53d6\u76f8\u53cd\u6570\u6807\u8bb0\uff0c\u5e94\u8be5\u5c06\u4e0a\u8ff0c\u4e3a\u5947\u6570\u65f6\u7684\u60c5\u51b5\u7684f\u503c\u53d6\u76f8\u53cd\u6570\uff0c\u56e0\u4e3a\u5076\u6570\u6b21\u76f8\u4e58\u8d1f\u53f7\u4f1a\u62b5\u6d88\u3002\n\n\u5982\u679c\u8981\u5e94\u7528\u4e00\u4e2a\u533a\u95f4\u52a0\u6807\u8bb0\uff0c\u601d\u8003\u5bf9\u7b54\u6848\u7684\u6539\u53d8\uff0c\u4ee5`f[15]`\u8fd9\u4e2a\u503c\u4e3a\u4f8b\uff1a\n\n\u5047\u5982\u9009\u62e9\u524d15\u4e2a\u503c\u76f8\u4e58\uff0c\u53d8\u5316\u5982\u4e0b\n\n$[a_1, a_2, \\cdots, a_{15}] \\to [a_1 + c, a_2 + c, \\cdots, a_{15} + c]$\n\n\u4e58\u8d77\u6765\u662f\u8fd9\u6837\u7684\n\n$f_{15} = C_{len-15}^0 \\cdot c^0 \\cdot f_{15} + C_{len-14}^1 \\cdot c^1 \\cdot f_{14} + C_{len-13}^2 \\cdot c^2 \\cdot f_{13} + \\cdots + C_{len-0}^{15} \\cdot c^{15} \\cdot f_0$\n\n\u90a3\u6211\u4eec\u5c31\u660e\u767d\u4e86\uff0c\u5012\u5e8f\u6c42f\u503c\u5c31\u597d\u4e86\u3002\u8fd9\u91cc\u7684C\u53ef\u4ee5\u5f00\u59cb\u7684\u65f6\u5019\u9884\u5904\u7406\u6253\u4e2a\u5927\u8868\uff0c\u7a7a\u95f4\u662f\u591f\u7684\u3002\u533a\u95f4\u52a0\u6807\u8bb0\u5e94\u7528\u5bf9\u5e94\u7684\u4ee3\u7801\u957f\u8fd9\u6837\n\n```cpp\ninline void add(Data &dat, LL x) {\n\tfor(int i = std::min(dat.len, 20ll); i >= 0; i--) {\n\t\tLL t = x;\n\t\tfor(int j = i - 1; j >= 0; j--) {\n\t\t\tdat.f[i] = (dat.f[i] + dat.f[j] * C[dat.len - j][i - j] % MO * t % MO) % MO;\n\t\t\tdat.f[i] = (dat.f[i] + MO) % MO;\n\t\t\tt = t * x % MO;\n\t\t}\n\t}\n\tdat.toadd = (dat.toadd + x) % MO;\n}\n```\n\n## \u533a\u95f4\u5408\u5e76\n\u91cd\u70b9\u662f\u8981\u8ba1\u7b97f\u503c\u3002\u9996\u5148\u8003\u8651\u5927\u533a\u95f4\u9009\u82e5\u5e72\u4e2a\u662f\u53ef\u4ee5\u62c6\u6210\u5de6\u8fb9\u9009\u82e5\u5e72\u4e2a\u548c\u53f3\u8fb9\u9009\u82e5\u5e72\u4e2a\u4e58\u5728\u4e00\u8d77\u7684\uff0c\u8fd9\u6837\u65e2\u7136\u5de6\u53f3\u4e24\u8fb9\u7684\u7b54\u6848\u90fd\u662f\u4e00\u5806\u4e58\u79ef\u52a0\u8d77\u6765\uff0c\u4e24\u5757\u76f4\u63a5\u4e58\u5728\u4e00\u8d77\u5c31\u76f8\u5f53\u4e8e\u4e24\u4e24\u914d\u5bf9\u540e\u52a0\u8d77\u6765\uff0c\u56e0\u6b64\u6211\u4eec\u5408\u5e76\u7684\u516c\u5f0f\u5c31\u662f\uff1a\n\n$f_k = \\sum_{i=0}^k fl_i \\times fr_{k-i}$\n\n\u4e24\u5c42\u5faa\u73af\u52a0\u4e00\u4e0b\u5c31\u597d\u3002\n\n# \u4ee3\u7801\n\u6bd4\u8f83\u957f\uff0c\u76f4\u63a5\u8d34\u592a\u5360\u7248\u9762\u4e86\uff0c\u53ef\u4ee5\u770b\u535a\u5ba2\u91cc\u7684qwq",
        "postTime": 1519394262,
        "uid": 35795,
        "name": "KSkun",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4247 \u3010[\u6e05\u534e\u96c6\u8bad]\u5e8f\u5217\u64cd\u4f5c\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$ \u548c $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5f62\u5982\u4ee5\u4e0b\u4e09\u79cd\uff1a\n\n- `I a b c`\uff0c\u8868\u793a\u5c06 $[a,b]$ \u5185\u7684\u5143\u7d20\u52a0 $c$\u3002\n\n- `R a b`\uff0c\u8868\u793a\u5c06 $[a,b]$ \u5185\u7684\u5143\u7d20\u53d8\u6210\u76f8\u53cd\u6570\u3002\n\n- `Q a b c`\uff0c\u8868\u793a\u5728 $[a,b]$ \u5185\u6240\u6709\u9009\u51fa $c$ \u4e2a\u5143\u7d20\u7684\u4e58\u79ef\u4e4b\u548c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u8f93\u51fa\u7b54\u6848\u5bf9 $19940417$ \u53d6\u6a21\u7684\u503c\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq q\\leq 50000$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13669908.html)\n\n\u597d\u9898\u554a\u3002\n\n\u770b\u5230\u8fd9\u79cd\u9898\u9a6c\u4e0a\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u5185 $(1+a_ix)$ \u7684\u4e58\u79ef\uff0c\u7136\u540e\u7b54\u6848\u5c31\u662f\u53d6\u4e00\u9879\u3002\n\n\u8003\u8651\u5982\u4f55\u6253\u61d2\u6807\u8bb0\u3002\u5bf9\u4e8e\u76f8\u53cd\u6570\u7684\u8bdd\uff0c\u8bbe $F(x)=\\prod\\limits_{i=1}^{n}(1+a_ix)$\uff0c\u90a3\u4e48\u6709\n\n$$\\prod\\limits_{i=1}^{n}(1-a_ix)=\\sum\\limits_{i=0}^{n}(-1)^i[x^i]F(x)x^i$$\n\n\u8fd9\u4e2a\u7ed3\u8bba\u5927\u6982\u53ef\u4ee5\u624b\u73a9\u4e00\u4e0b\uff0c\u6240\u4ee5\u8bf4\u6253\u61d2\u6807\u8bb0\u7684\u65f6\u5019\u53ea\u9700\u8981\u5947\u6b21\u9879\u53d6\u76f8\u53cd\u6570\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u662f\u533a\u95f4\u52a0\u8fd9\u4e2a\u5927\u6bd2\u7624\uff0c\u8fd8\u662f\u8003\u8651\u61d2\u6807\u8bb0\u7684\u6253\u6cd5\u3002\n\n\u63a5\u4e0b\u6765\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u7528 $S_k$ \u8868\u793a $a_1,a_2,\\cdots a_n$ \u4e2d\u53d6 $k$ \u9879\u7684\u6240\u6709\u4e58\u79ef\u4e4b\u548c\uff0c\u90a3\u4e48\u6709\n\n$$[1+(a_1+c)x][1+(a_2+c)x][1+(a_3+c)x]=1+(S_1+3cx)+(S_2+2S_1c+3c^2)x^2+(S_3+S_2c+S_1c^2+c^3)x^3$$\n\n\u6ce8\u610f\u5230\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u4e00\u4e0b\u591a\u9879\u5f0f\u7684 $i$ \u6b21\u9879\u7cfb\u6570\u548c\u8fd9\u4e00\u9879\u7cfb\u6570\u91cc\u9762\u662f\u53d6 $j$ \u9879\u7684\u6240\u6709\u65b9\u6848\u6570\u7684\u4e58\u79ef\u4e4b\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u5f97\u5230\u5f53\u524d\u679a\u4e3e\u7684 $i,j$ \u5bf9\u5e94\u7684 $S_j$ \u7684\u7cfb\u6570\u4e3a\uff1a\n\n$$\\frac{\\binom{n}{i}\\binom{i}{j}c^{i-j}}{\\binom{n}{j}}$$\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec4\u5408\u610f\u4e49\u7684\u89e3\u91ca\uff1a\u9996\u5148\u5c06 $(a_i+c)x$ \u770b\u505a\u6574\u4f53\uff0c\u4ece $n$ \u4e2a\u4e2d\u9009\u51fa $i$ \u4e2a\u6784\u6210 $(a_1+c)(a_2+c)\\cdots(a_i+c)x^i$ \u8fd9\u4e00\u9879\u3002\u63a5\u4e0b\u6765\u5728\u6c42\u51fa\u8fd9\u4e00\u9879\u4e2d\u5bf9\u5e94\u7684 $c^{i-j}$ \u7684\u7cfb\u6570\uff0c\u4e5f\u5c31\u662f\u9009\u4e86 $j$ \u4e2a $a$ \u548c $i-j$ \u4e2a $c$\u3002\u6700\u540e\uff0c\u4e00\u5171\u6709 $\\binom{n}{j}$ \u79cd\u65b9\u5f0f\u4ece\u8fd9\u4e9b $a_i$ \u4e2d\u51fa\u9009 $j$ \u4e2a\uff0c\u800c\u6bcf\u79cd\u65b9\u5f0f\u88ab\u8ba1\u7b97\u7684\u6b21\u6570\u90fd\u662f\u76f8\u7b49\u7684\uff0c\u4e8e\u662f\u5f97\u9664\u6389\uff0c\u5c31\u5f97\u5230\u8fd9\u4e2a\u4e1c\u897f\u88ab\u7b97\u4e86\u51e0\u6b21\uff0c\u4e5f\u5c31\u662f $S_j$ \u7684\u7cfb\u6570\u3002\n\n\u5229\u7528\u4e00\u4e9b\u57fa\u672c\u7684\u6052\u7b49\u5f0f\u6211\u4eec\u6709\n\n$$\\frac{\\binom{n}{i}\\binom{i}{j}c^{i-j}}{\\binom{n}{j}}=\\binom{n-j}{i-j}c^{i-j}$$\n\n\u4e8e\u662f\u679a\u4e3e\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u5c31\u6ca1\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(c^2n\\log n)$\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\nconst ll MAXN=5e4+51,MOD=19940417; \nstruct SegmentTree{\n\tll l,r,tag,tag2;\n\tll f[21];\n};\nSegmentTree tree[MAXN<<2];\nll n,qcnt,l,r,u;\nchar op;\nll x[MAXN],pw[MAXN],binom[MAXN][21],g[21];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline void conv(ll *f,ll *g,ll *res)\n{\n\tli cur;\n\tfor(register int i=0;i<=20;i++)\n\t{\n\t\tcur=0;\n\t\tfor(register int j=0;j<=i;j++)\n\t\t{\n\t\t\tcur+=(li)f[j]*g[i-j]%MOD;\n\t\t}\n\t\tres[i]=cur%MOD;\n\t}\n}\n#define ls node<<1\n#define rs (node<<1)|1\ninline void update(ll node)\n{\n\tconv(tree[ls].f,tree[rs].f,tree[node].f);\n}\ninline void create(ll l,ll r,ll node)\n{\n\ttree[node]=(SegmentTree){l,r,0,1,{1}};\n\tif(l==r)\n\t{\n\t\treturn (void)(tree[node].f[1]=x[l]);\n\t}\n\tll mid=(l+r)>>1;\n\tcreate(l,mid,ls),create(mid+1,r,rs),update(node);\n}\ninline void spread(ll node)\n{\n\tif(tree[node].tag2!=1)\n\t{\n\t\tfor(register int i=1;i<=20;i+=2)\n\t\t{\n\t\t\ttree[ls].f[i]=(MOD-tree[ls].f[i])%MOD;\n\t\t\ttree[rs].f[i]=(MOD-tree[rs].f[i])%MOD;\n\t\t}\n\t\ttree[ls].tag2*=-1,tree[rs].tag2*=-1,tree[node].tag2=1;\n\t\ttree[ls].tag=(MOD-tree[ls].tag)%MOD;\n\t\ttree[rs].tag=(MOD-tree[rs].tag)%MOD;\n\t}\n\tif(tree[node].tag)\n\t{\n\t\tll lenl=tree[ls].r-tree[ls].l+1,lenr=tree[rs].r-tree[rs].l+1;\n\t\tli curl,curr;\n\t\tfor(register int i=1;i<=20;i++)\n\t\t{\n\t\t\tpw[i]=(li)pw[i-1]*tree[node].tag%MOD;\n\t\t}\n\t\tfor(register int i=20;i;i--)\n\t\t{\n\t\t\tcurl=curr=0;\n\t\t\tfor(register int j=0;j<i;j++)\n\t\t\t{\n\t\t\t\tcurl+=(li)tree[ls].f[j]*pw[i-j]%MOD*binom[lenl-j][i-j]%MOD;\n\t\t\t\tcurr+=(li)tree[rs].f[j]*pw[i-j]%MOD*binom[lenr-j][i-j]%MOD;\n\t\t\t}\n\t\t\ttree[ls].f[i]=(tree[ls].f[i]+curl)%MOD;\n\t\t\ttree[rs].f[i]=(tree[rs].f[i]+curr)%MOD;\n\t\t}\n\t\ttree[ls].tag+=tree[node].tag,tree[rs].tag+=tree[node].tag;\n\t\ttree[ls].tag%=MOD,tree[rs].tag%=MOD,tree[node].tag=0;\n\t}\n}\ninline void add(ll l,ll r,ll val,ll node)\n{\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\tll len=tree[node].r-tree[node].l+1;\n\t\tli cur=0;\n\t\tfor(register int i=1;i<=20;i++)\n\t\t{\n\t\t\tpw[i]=(li)pw[i-1]*val%MOD;\n\t\t}\n\t\tfor(register int i=20;i;i--)\n\t\t{\n\t\t\tcur=0;\n\t\t\tfor(register int j=0;j<i;j++)\n\t\t\t{\n\t\t\t\tcur+=(li)tree[node].f[j]*pw[i-j]%MOD*binom[len-j][i-j]%MOD;\n\t\t\t}\n\t\t\ttree[node].f[i]=(tree[node].f[i]+cur)%MOD;\n\t\t}\n\t\treturn (void)(tree[node].tag=(tree[node].tag+val)%MOD);\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tspread(node);\n\tl<=mid?add(l,r,val,ls):(void)1,r>mid?add(l,r,val,rs):(void)1;\n\tupdate(node);\n}\ninline void mul(ll l,ll r,ll node)\n{\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\tfor(register int i=1;i<=20;i+=2)\n\t\t{\n\t\t\ttree[node].f[i]=(MOD-tree[node].f[i])%MOD;\n\t\t}\n\t\ttree[node].tag=(MOD-tree[node].tag)%MOD;\n\t\treturn (void)(tree[node].tag2*=-1);\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tspread(node);\n\tl<=mid?mul(l,r,ls):(void)1,r>mid?mul(l,r,rs):(void)1,update(node);\n}\ninline SegmentTree query(ll l,ll r,ll node)\n{\n\tSegmentTree res;\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\treturn tree[node];\n\t}\t\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tspread(node),conv(l<=mid?query(l,r,ls).f:g,r>mid?query(l,r,rs).f:g,res.f);\n\treturn res;\n}\nint main()\n{\n\tn=read(),qcnt=read(),binom[0][0]=pw[0]=g[0]=1;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tx[i]=(read()%MOD+MOD)%MOD;\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tbinom[i][0]=1;\n\t\tfor(register int j=1;j<=20;j++)\n\t\t{\n\t\t\tbinom[i][j]=(binom[i-1][j]+binom[i-1][j-1])%MOD;\n\t\t}\n\t}\n\tcreate(1,n,1);\n\tfor(register int i=0;i<qcnt;i++)\n\t{\n\t\tcin>>op,l=read(),r=read();\n\t\tif(op=='I')\n\t\t{\n\t\t\tu=(read()%MOD+MOD)%MOD,add(l,r,u,1);\n\t\t}\n\t\tif(op=='R')\n\t\t{\n\t\t\tmul(l,r,1);\n\t\t}\n\t\tif(op=='Q')\n\t\t{\n\t\t\tu=read();\n\t\t\tprintf(\"%d\\n\",query(l,r,1).f[u]);\n\t\t}\n\t}\n}\n```",
        "postTime": 1600088165,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4247 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u5e8f\u5217\u64cd\u4f5c\u3011"
    },
    {
        "content": "~~\u7531\u4e8e\u4e8b\u5954\u7740\u7ebf\u6bb5\u6811\u6765\u7684\u6240\u4ee5\u8df3\u8fc7\u600e\u4e48\u60f3\u5230\u7ebf\u6bb5\u6811\u8fd9\u4e00\u90e8\u5206~~\n\n\u770b\u5230\u8fd9\u9898\uff0c\u60f3\u5230\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a $f$ \u6570\u7ec4\uff0c$f_i$ \u8868\u793a\u5728\u8be5\u533a\u95f4\u5185\u9009\u51fa $i$ \u4e2a\u6570\u76f8\u4e58\u6240\u6709\u65b9\u6848\u4e4b\u548c\u3002\n\n\u5219\u4ee4 $ls$ \u4e3a\u5de6\u513f\u5b50\uff0c$rs$ \u4e3a\u53f3\u513f\u5b50\uff0c\u6613\u5f97\u8f6c\u79fb\uff1a\n\n$$f_i=ls.f_i+rs.f_i\\sum\\limits^{c-1}_{i=1}ls.f_i\\cdot rs.f_{c-j}$$\n\n\u4fee\u6539\u64cd\u4f5c\uff0c\u5982\u679c\u662f\u533a\u95f4\u53cd\u8f6c\u76f4\u63a5\u628a $i$ \u4e3a\u5947\u6570\u7684 $f_i$ \u53d6\u4e2a\u76f8\u53cd\u6570\uff0c\u91cd\u70b9\u5728\u4e8e\u533a\u95f4\u52a0\u3002\n\n\u5148\u8003\u8651\u8ba1\u7b97 $\\prod^k_{i=1}(a_i+x)-\\prod^k_{i=1}a_i$\u3002\n\n\u89c2\u5bdf $\\prod^k_{i=1}(a_i+x)$ \u7684\u5c55\u5f00\u5f0f\uff0c\u5f97\u5230\u4e0a\u5f0f\u7b49\u4e8e $\\sum\\limits^k_{i=1}x_i\\cdot g_{k-i}$\n\n$g_i$ \u8868\u793a\u5728 $a_1...a_k$ \u4e2d\u9009\u51fa $i$ \u4e2a\u6570\u76f8\u4e58\u7684\u6240\u6709\u65b9\u6848\u603b\u548c\u3002\n\n\u7531\u4e8e\u5728\u4e00\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u5bf9\u5e94\u7684\u533a\u95f4\u4e2d\u6709\u5f88\u591a\u957f\u5ea6\u4e3a $k$ \u7684\u533a\u95f4\uff0c\u663e\u7136\u4e0d\u80fd\u4e00\u4e00\u8ba1\u7b97 $g$ \u6570\u7ec4\uff0c\u7531\u4e8e $f,g$ \u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c\uff0c\u8003\u8651\u5229\u7528 $f$ \u63a8\u5bfc $g$\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u5f97\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c$f_i=\\sum\\limits_{p_1,p_2..p_k\\in [l,r]}\\prod^k_{i=1}(a_{p_i}+x)-\\prod^k_{i=1}a_{p_i}$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5176\u5b9e\u8981\u8ba1\u7b97\uff1a\u4ece $[l,r]$ \u533a\u95f4\u4e2d\u9009\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u5e8f\u5217\uff0c\u518d\u4ece\u4e2d\u9009\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a $k-i$ \u7684\u5b50\u5e8f\u5217\uff0c\u8ba1\u7b97\u8fd9\u4e9b\u5b50\u5e8f\u5217\u6240\u6709\u6570\u7684\u4e58\u79ef\u4e4b\u548c\u3002\n\n\u5047\u8bbe $[l,r]$ \u533a\u95f4\u957f\u5ea6\u4e3a $n$\u3002\n\n\u76f4\u63a5\u9009\u51fa $k-i$ \u4e2a\u6570\u6709 $\\tbinom{n}{k-i}$ \u79cd\u65b9\u6848\uff0c\u6309\u7167\u4e0a\u8ff0\u65b9\u5f0f\u9009\u62e9\u6709 $\\tbinom{n}{k}\\tbinom{k}{k-i}$ \u79cd\u65b9\u6848\uff0c\u5373\u6bcf\u79cd\u5728\u533a\u95f4 $[l,r]$ \u76f4\u63a5\u9009\u5b50\u5e8f\u5217\u7684\u6bcf\u79cd\u65b9\u6848\u90fd\u88ab\u8ba1\u7b97\u4e86 $\\frac{\\tbinom{n}{k}\\tbinom{k}{k-i}}{\\tbinom{n}{i}}=\\tbinom{n-k+i}{i}$ \u79cd\u65b9\u6848\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u7b54\u6848\u5c31\u662f\uff0c\u5c06\u533a\u95f4 $[l,r]$ \u52a0\u4e0a\u4e00\u4e2a\u6570 $x$ \u540e\uff0c$f_k$ \u4f1a\u589e\u52a0\n\n$$\\sum\\limits^{i\\le k}_{i=1}x_i\\cdot \\tbinom{n-k+i}{i}\\cdot f_{k-i}$$\n\n\n\u90a3\u4e48\u672c\u9898\u552f\u4e00\u7684\u96be\u70b9\u533a\u95f4\u52a0\u64cd\u4f5c\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u533a\u95f4\u67e5\u8be2\u6309\u7167\u6700\u5f00\u59cb\u63d0\u5230\u7684\u8f6c\u79fb\u641e\u4e00\u641e\u5c31\u884c\u4e86\uff0c\u7531\u4e8e\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\u6ce8\u610f\u53ca\u65f6 `delete` \u4ebf\u4e9b\u7a7a\u95f4\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\uff08\u5176\u5b9e\u6211\u6ca1`delete`\u5b8c\uff0c\u4f46\u8db3\u4ee5\u5e94\u4ed8\u8fd9\u9898\u7684\u7a7a\u95f4\u9650\u5236\uff09\u3002\n\n\u6700\u540e\u6ce8\u610f\u61d2\u6807\u8bb0\uff0c\u6211`pushdown`\u65f6\u5148\u8003\u8651\u53cd\u8f6c\u6807\u8bb0\u518d\u8003\u8651\u52a0\u6cd5\u6807\u8bb0\uff0c\u90a3\u4e48\u6bcf\u6b21\u4e00\u4e2a\u8282\u70b9\u6536\u5230\u53cd\u8f6c\u6807\u8bb0\u65f6\u90fd\u8981\u5c06\u5b83\u7684\u52a0\u6cd5\u6807\u8bb0\u53d6\u76f8\u53cd\u6570\u3002\n\n\u51fa\u4eba\u610f\u6599\u7684\u662f\u8fd9\u9898\u867d\u7136\u4ee3\u7801\u4e0d\u77ed\u4f46\u5f88\u597d\u5199\n\n```cpp\n#include <cstdio>\n#define int long long\ninline int min(const int x, const int y) {return x < y ? x : y;}\n\nconst int mod = 19940417;\nstruct Node {\n\tint l, r, n, c[21], Lazy;\n\tbool rev;\n} tree[200005];\ntypedef int* Array;\nint a[50005], C[50005][21], n, q;\n\nvoid pushup(int O) {\n\tfor (int i = 1; i <= min(20, tree[O].n); ++ i) {\n\t\ttree[O].c[i] = tree[O << 1].c[i] + tree[O << 1 | 1].c[i];\n\t\tfor (int j = 1; j < i; ++ j)\n\t\t\ttree[O].c[i] = (tree[O].c[i] + tree[O << 1].c[j] * tree[O << 1 | 1].c[i - j]) % mod;\n\t}\n}\nvoid reverse(int O) {\n\tfor (int i = 1; i <= min(20, tree[O].n); i += 2)\n\t\ttree[O].c[i] = -tree[O].c[i];\n\ttree[O].Lazy = -tree[O].Lazy;\n}\nvoid add(int O, int d) {\n\tfor (int i = min(20, tree[O].n); i; -- i) {\n\t\tint ret = 0;\n\t\tfor (int j = 1, x = d; j <= i; ++ j, x = x * d % mod)\n\t\t\tret = (ret + x * C[tree[O].n - i + j][j] % mod * tree[O].c[i - j]) % mod;\n\t\ttree[O].c[i] = (tree[O].c[i] + ret);\n\t}\n}\nvoid pushdown(int O) {\n\tif (tree[O].rev) {\n\t\ttree[O << 1].rev ^= 1, tree[O << 1 | 1].rev ^= 1;\n\t\treverse(O << 1), reverse(O << 1 | 1);\n\t\ttree[O].rev = false;\n\t}\n\tif (tree[O].Lazy) {\n\t\ttree[O << 1].Lazy += tree[O].Lazy, tree[O << 1 | 1].Lazy += tree[O].Lazy;\n\t\tadd(O << 1, tree[O].Lazy), add(O << 1 | 1, tree[O].Lazy);\n\t\ttree[O].Lazy = 0;\n\t}\n}\n\nvoid make_tree(int O, int L, int R) {\n\ttree[O].l = L, tree[O].r = R, tree[O].n = R - L + 1, tree[O].c[0] = 1;\n\tif (L != R) {\n\t\tmake_tree(O << 1, L, L + R >> 1);\n\t\tmake_tree(O << 1 | 1, (L + R >> 1) + 1, R);\n\t\tpushup(O);\n\t} else tree[O].c[1] = a[L];\n}\n\nvoid update(int O, int L, int R, int d) {\n\tif (L <= tree[O].l && tree[O].r <= R) {\n\t\tadd(O, d), tree[O].Lazy += d; return;\n\t}\n\tint mid = tree[O].l + tree[O].r >> 1;\n\tpushdown(O);\n\tif (L <= mid) update(O << 1, L, R, d);\n\tif (mid < R) update(O << 1 | 1, L, R, d);\n\tpushup(O);\n}\nvoid Reverse(int O, int L, int R) {\n\tif (L <= tree[O].l && tree[O].r <= R) {\n\t\treverse(O), tree[O].rev ^= 1; return;\n\t}\n\tint mid = tree[O].l + tree[O].r >> 1;\n\tpushdown(O);\n\tif (L <= mid) Reverse(O << 1, L, R);\n\tif (mid < R) Reverse(O << 1 | 1, L, R);\n\tpushup(O);\n}\nArray query(int O, int L, int R) {\n\tif (L <= tree[O].l && tree[O].r <= R) {\n\t\tint* c = new int[21];\n\t\tfor (int i = 0; i <= 20; ++ i) c[i] = 0;\n\t\tfor (int i = 1; i <= min(20, tree[O].n); ++ i) c[i] = tree[O].c[i];\n\t\treturn c;\n\t}\n\tpushdown(O);\n\tint mid = tree[O].l + tree[O].r >> 1;\n\tif (mid >= R) return query(O << 1, L, R);\n\tif (L > mid) return query(O << 1 | 1, L, R);\n\tint *a = query(O << 1, L, R), *b = query(O << 1 | 1, L, R), *c = new int[21];\n\tfor (int i = 0; i <= 20; ++ i) c[i] = 0;\n\tfor (int i = 1; i <= min(20, tree[O].n); ++ i) {\n\t\tc[i] = a[i] + b[i];\n\t\tfor (int j = 1; j < i; ++ j) c[i] = (c[i] + a[j] * b[i - j] % mod) % mod;\n\t}\n\tdelete a, delete b;\n\treturn c;\n}\n\nsigned main() {\n\tscanf(\"%lld%lld\", &n, &q);\n\tC[0][0] = 1;\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%lld\", a + i);\n\t\tC[i][0] = 1;\n\t\tfor (int j = 1; j <= min(i, 20); ++ j)\n\t\t\tC[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;\n\t}\n\tmake_tree(1, 1, n);\n\twhile (q --) {\n\t\tchar opt;\n\t\tint l, r, v;\n\t\tscanf(\" %c%lld%lld\", &opt, &l, &r);\n\t\tif (opt == 'I') scanf(\"%lld\", &v), update(1, l, r, v);\n\t\telse if (opt == 'R') Reverse(1, l, r);\n\t\telse scanf(\"%lld\", &v), printf(\"%lld\\n\", (query(1, l, r)[v] + mod) % mod);\n\t}\n}\n```",
        "postTime": 1625632098,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P4247 [\u6e05\u534e\u96c6\u8bad2012]\u5e8f\u5217\u64cd\u4f5c\u3011"
    },
    {
        "content": "\u8865\u4e00\u4e0b\u590f\u4ee4\u8425\u7684\u9898\u3002\n\n## \u9898\u610f\n\u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u5b9e\u73b0\u4ee5\u4e0b\u51e0\u4e2a\u64cd\u4f5c\u3002\n\n- \u533a\u95f4\u52a0\n- \u533a\u95f4\u53d6\u53cd\n- \u533a\u95f4\u4e2d\u9009\u62e9 $c$ \u4e2a\u6570\u7684\u4e58\u79ef\u4e4b\u548c\n\n## \u89e3\u51b3\n\n\u524d\u4e24\u4e2a\u64cd\u4f5c\u5f88 naive\uff0c\u4f46\u662f\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u6709\u70b9\u96be\u641e\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u4e1c\u897f\u8be5\u600e\u4e48\u7ef4\u62a4\u3002\n\n### \u9884\u5904\u7406\n\u9884\u5904\u7406\u4e00\u4e0b\u7ec4\u5408\u6570\u3002\n\n\u540e\u9762\u4f1a\u8bf4\u5982\u4f55\u7528\u3002\n\n### \u5efa\u6811\n\u53d1\u73b0\u4ed6\u7684 $c$ \u975e\u5e38\u5c0f\uff08$c \\le 20$\uff09\uff0c\u7136\u540e\u5c31\u60f3\u5230\u53ef\u4ee5**\u628a\u6bcf\u4e00\u4e2a\u4e0d\u540cc\u7684\u7ed3\u679c\u90fd\u5b58\u8d77\u6765**\u3002\n\n\u4e00\u5f00\u59cb\u7684\u5904\u7406\uff1a\u4e00\u4e2a\u533a\u95f4\u7684 $c_{i+j}$ \u5c31\u662f\u5176\u4e24\u4e2a\u5b50\u533a\u95f4\u7684 $\\sum _{i=0,j=0}^{i+j<=20}c_{i}\\times c_{j}$ \u3002\u5176\u4e2d $c_i$ \u8868\u793a\u5728\u5de6\u513f\u5b50\u533a\u95f4\u4e2d\u9009\u62e9 $i$ \u4e2a\uff0c$c_j$ \u8868\u793a\u5728\u53f3\u513f\u5b50\u533a\u95f4\u4e2d\u9009\u62e9 $j$ \u4e2a\uff0c$c_{i+j}$ \u8868\u793a\u5728\u603b\u533a\u95f4\u4e2d\u9009\u62e9 $i+j$ \u4e2a\u3002\n\n\u7136\u540e\u8003\u8651\u52a0\u5165\u533a\u95f4\u52a0\u548c\u533a\u95f4\u53d6\u53cd\u64cd\u4f5c\u3002\n\n### \u533a\u95f4\u53d6\u53cd\n\u5148\u8bf4\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u7684**\u533a\u95f4\u53d6\u53cd**\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\n\n\u5f53\u9009\u53d6\u7684\u6570\u91cf $k$ \u4e3a\u5947\u6570\u65f6\uff0c$c_{k}$ \u4e5f\u5e94\u5f53\u53d6\u53cd\uff1b\n\n\u5f53\u9009\u53d6\u7684\u6570\u91cf $k$ \u4e3a\u5076\u6570\u65f6\uff0c$c_{k}$ \u4e0d\u4f1a\u6539\u53d8\uff08\u8d1f\u8d1f\u5f97\u6b63\uff09\u3002\n\n\u7136\u540e\u6253\u4e0a\u4e00\u4e2a\u53d6\u53cd\u6807\u8bb0\u5373\u53ef\u3002\n\n\u7136\u540e\uff0c\u5904\u7406\u4e00\u4e0b\u6807\u8bb0\u7684\u4f18\u5148\u7ea7\uff0c\u628a\u52a0\u6807\u8bb0\u53d6\u53cd\u5373\u53ef\u3002\n### \u533a\u95f4\u52a0\n\n\u7136\u540e\u6211\u4eec\u6765\u8ba8\u8bba\u4e00\u4e0b**\u533a\u95f4\u52a0**\u3002\n\n\u5047\u8bbe\u539f\u6765\u7684\u533a\u95f4\u662f $a_l,a_{l+1},a_{l+2}\\dots,a_r$\uff0c\u7136\u540e\u52a0\u540e\u53d8\u4e3a $(a_{l}+k),(a_{l+1}+k),(a_{l+2}+k)\\dots,(a_{r}+k)$ \u3002\n\n\u8bbe\u539f\u5148\u4efb\u610f\u9009\u53d6 $c$ \u9879\u7684\u4e58\u79ef\u4e3a\uff1a$a_1 \\times a_{2}\\dots \\times a_{c}$\n\n\u5219\u4fee\u6539\u540e $c$ \u9879\u4e58\u79ef\uff1a \n\n$$\n\\begin{aligned}(a_1+k)(a_2+k)\\dots(a_c+k) & = a_1 \\times a_2 \\dots \\times a_c+k\\times(a_1\\times a_2 \\dots\\times a_{c-1} +a_1\\dots)+k^2 \\times (a_1\\times a_2\\dots\\times a_{c-2}+a_1\\dots)\\dots\\end{aligned}\n$$\n\n\u800c\u8fd9\u4e2a\u4e1c\u897f\u5373\u662f \uff1a$($\u539f $c$ \u9879\u7684\u4e58\u79ef $ + \\sum \\limits_{i=1}^c x^{c-i}\\times $ \u539f\u6765 $c$ \u9879\u4e2d\u9009\u53d6 $i$ \u9879\u7684\u4e58\u79ef $)$\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a $c$ \u9879\u4e2d\u9009 $i$ \u9879\u5f88\u96be\u5904\u7406\uff0c\u56e0\u4e3a\u4f60\u4f3c\u4e4e\u65e0\u6cd5\u4ece\u5f53\u524d\u7684\u5b58\u50a8\u7684\u6570\u503c\u76f4\u63a5\u63a8\u5bfc\u51fa\u6765\u3002\uff08\u8fd9\u91cc\u6211\u4e5f\u4e0d\u662f\u5f88\u786e\u5b9a\uff0c\u56e0\u4e3a\u6211\u4e0d\u4f1a\u8fd9\u6837\u641e\uff0c\u5982\u679c\u6709\u795e\u4ed9\u4f1a\u505a\u8bf7\u79c1\u6211\uff09\n\n\u6240\u4ee5\u7ee7\u7eed\u89c2\u5bdf\u5f0f\u5b50\u3002\n\n\u53d1\u73b0\u4e00\u4e2a\u73b0\u8c61\uff1a\u8fd9\u4e9b\u548c\u91cc\u9762\u6709\u4e00\u4e9b\u76f8\u540c\u7684\u56e0\u5f0f $a_i \\times a_{i+1}\\dots \\times a_{j}$\uff0c\u800c\u8fd9\u4e9b\u56e0\u5f0f\u6bcf\u4e00\u6b21\u51fa\u73b0\u6240\u5e26\u7684\u522b\u7684\u4e1c\u897f\u662f\u4e0d\u4e00\u6837\u7684\u3002\n\n\u8bbe\u4e0a\u9762\u7684\u90a3\u4e2a\u56e0\u5f0f\u4e3a $t_{i,j}$ \uff0c\u5176\u4e00\u5171\u6709 $y$ \u9879\u3002\n\n\u5219\u5f88\u663e\u7136\u7684\uff0c\u8fd9\u4e2a\u56e0\u5f0f\u7684\u8d21\u732e\u5c31\u662f $res_y=\\sum \\limits_{z=0}^y x^{y-z} \\times res_z \\times \\dbinom{size-z}{y-z}$\n\n\u5176\u610f\u4e49\u662f\uff1a \u4ece $size$ \u4e2a\u6570\u4e2d\u9009 $y$ \u4e2a\u6570\uff0c\u4e14\u5305\u542b\u4e86\u7279\u5b9a\u7684 $z$ \u4e2a\u6570\u3002\n\n\u6240\u4ee5\u9884\u5904\u7406\u7ec4\u5408\u6570\uff0c\u7136\u540e\u76f4\u63a5\u7b97\u5c31\u884c\u4e86\u3002\n\n### \u5408\u5e76\u533a\u95f4\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u9700\u8981\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u503c\u3002\n\n\u4e0e\u9884\u5904\u7406\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u628a $c_{i+j}$ \u66f4\u65b0\u5373\u53ef\u3002\n\n\u4ee3\u7801\u8f83\u957f\uff0c\u6709\u4e00\u4e9b\u7ec6\u8282\u3002\n\n\u8fd8\u8981\u6ce8\u610f\u4ed6\u8f93\u5165\u7684\u6570\u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u6240\u4ee5\u8981\u8bb0\u5f97\u5904\u7406\u8d1f\u6570\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nconst int N = 50010, P = 19940417;\nint n, m;\nint a[N], C[N][21];\n\nstruct node {\n\tint sz, c[21];\n\tint ad, f;\n}t[N << 2];\n\n//\u9884\u5904\u7406\u7ec4\u5408\u6570\nvoid init() {\n\tt[0].c[0] = 1;\n\tC[0][0] = 1;\n\tfor(int i = 1;i <= n;i ++) {\n\t\tC[i][0] = 1;\n\t\tfor(int j = 1;j <= i && j <= 20;j ++){\n\t\t\tC[i][j] = (C[i-1][j] + C[i-1][j-1]) % P;\n\t\t}\n\t}\n}\n\n//update\u66f4\u65b0\u5f53\u524d\u8282\u70b9\u7684\u503c\nvoid update(int q) {\n\tmemset(t[q].c, 0, sizeof t[q].c);\n\tfor(int i = 0;i <= t[q << 1].sz && i <= 20;i ++) {\n\t\tfor(int j = 0;i+j <= 20 && j <= t[q << 1|1].sz;j ++) {\n\t\t\tt[q].c[i+j] = (t[q].c[i+j] + t[q << 1].c[i] * t[q << 1|1].c[j] % P) % P;\n\t\t}\n\t}\n}\n//\u5efa\u6811\nvoid build(int q, int l, int r) {\n\tt[q].sz = (r - l + 1);\n\tif(l == r) {\n    \t\t//\u628a\u9009\u62e9 0 \u6216 1 \u4e2a\u7684\u60c5\u51b5\u8bb0\u4e0b\u6765\n\t\tt[q].c[0] = 1;\n\t\tt[q].c[1] = (a[l]%P + P) % P;\n\t\treturn ;\n\t} \n\tint mid = l+r >> 1;\n\tbuild(q << 1, l, mid);\n\tbuild(q << 1|1, mid+1, r);\n\tupdate(q);\n}\n\n//\u5904\u7406\u52a0\u6807\u8bb0\nvoid puad(int q, int x) {\n\tif(!q || !x) return ;\n\tint tmp[50];\n\ttmp[0] = 1;\n\tfor(int i = 1; i <= 20 && i <= t[q].sz;i ++) tmp[i] = tmp[i-1] * x % P;\n\tfor(int i = min((int)20, t[q].sz);i != 0;i --) { \n\t\tfor(int j = 0;j < i;j ++) {\n\t\t\tt[q].c[i] = (t[q].c[i] + t[q].c[j] * tmp[i-j] % P * C[t[q].sz - j][i-j] ) % P;\n\t\t}\n\t}\n\tt[q].ad = (t[q].ad + x) % P;\n}\n\n//\u5904\u7406\u53d6\u53cd\u6807\u8bb0\nvoid pure(int q){\n\tif(!q) return ;\n\tfor(int i = 1;i <= 20 && i <= t[q].sz;i ++) {\n\t\tif(i % 2) t[q].c[i] = P - t[q].c[i];\n\t\telse continue;\n\t}\n\tt[q].f ^= 1;\n\tt[q].ad = P - t[q].ad;\n}\n\nvoid pushdown(int q) {\n\tif(t[q].f) {\n\t\tpure(q << 1);\n\t\tpure(q << 1|1);\n\t\tt[q].f = 0;\n\t} \n\tif(t[q].ad) {\n\t\tpuad(q << 1, t[q].ad);\n\t\tpuad(q << 1|1, t[q].ad);\n\t\tt[q].ad = 0;\n\t}\n}\n\n//\u533a\u95f4\u52a0\nvoid add(int q, int stl, int str, int l, int r, int x) {\n\tif(stl > r || str < l) return;\n\tif(stl >= l && str <= r) {\n\t\tpuad(q, x);\n\t\treturn ;\n\t}\n\tpushdown(q);\n\tint mid = str + stl >> 1;\n\tadd(q<<1, stl, mid, l, r, x);\n\tadd(q<<1|1, mid+1, str, l, r, x);\n\tupdate(q);\n}\n\n//\u533a\u95f4\u53d6\u53cd\nvoid rev(int q, int stl, int str, int l, int r) {\n\tif(stl > r || str < l) return;\n\tif(stl >= l && str <= r) {\n\t\tpure(q);\n\t\treturn ;\n\t}\n\tpushdown(q);\n\tint mid = str + stl >> 1;\n\trev(q<<1, stl, mid, l, r);\n\trev(q<<1|1, mid+1, str, l, r);\n\tupdate(q);\n}\n\n//\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\nnode merge(node a, node b) {\n\tnode e;\n\te.sz = a.sz + b.sz;\n\tmemset(e.c, 0, sizeof e.c);\n\tfor(int i = 0;i <= (int)20 && i <= a.sz;i ++) {\n\t\tfor(int j = 0;j <= b.sz && i+j <= (int)20;j ++) {\n\t\t\te.c[i+j] = (e.c[i+j] + a.c[i] * b.c[j] % P) % P;\n\t\t} \n\t}\n\treturn e;\n}\n//\u533a\u95f4\u67e5\u8be2\nnode query(int q, int stl, int str, int l, int r) {\n\tif(stl >= l && str <= r) {\n\t\treturn t[q];\n\t}\n\tpushdown(q);\n\tint mid = stl+ str >> 1;\n\tif(r <= mid) return query(q << 1, stl, mid, l, r);\n\telse if(l > mid) return query(q << 1|1, mid+1, str, l, r);\n\telse return merge(query(q << 1, stl, mid, l, r), query(q << 1|1, mid+1, str, l, r));\n}\n\nsigned main() {\n\tcin >> n >> m;\n\tfor(int i = 1;i <= n;i ++) {\n\t\tcin >> a[i];\n\t}\n\tinit();\n\tbuild(1, 1, n);\n\twhile(m --) {\n\t\tchar op;\n\t\tcin >> op;\n\t\tif(op == 'I') {\n\t\t\tint a, b, c;\n\t\t\tcin >> a >> b >> c;\n\t\t\tc = (c % P + P) % P;\n\t\t\tadd(1, 1, n, a, b, c);\n\t\t}\n\t\tif(op == 'R') {\n\t\t\tint a, b;\n\t\t\tcin >> a >> b;\n\t\t\trev(1, 1, n, a, b);\n\t\t}\n\t\tif(op == 'Q') {\n\t\t\tint a, b, c;\n\t\t\tcin >> a >> b >> c;\n\t\t\tnode e = query(1, 1, n, a, b);\n\t\t\tif(e.c[c] < 0) cout << P - e.c[c] << endl;\n\t\t\telse cout << e.c[c] % P << endl;\n\t\t}\n\t}\n\t\n\treturn 0;\n} \n```\n",
        "postTime": 1632061488,
        "uid": 195388,
        "name": "alvis",
        "ccfLevel": 5,
        "title": "P4247 \u5e8f\u5217\u64cd\u4f5c"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4247)\n\n\u7ebf\u6bb5\u6811\u7684\u597d\u9898\u3002\u9996\u5148\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff1a$c\\leq20$\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e00\u79cd\u60c5\u51b5\u4e0b\u7684\u7b54\u6848\u90fd\u8bb0\u5f55\u4e0b\u6765\u3002\u4e0d\u59a8\u8bbe $v[i]$ \u8868\u793a\u4e00\u4e2a\u533a\u95f4\u5185\u53d6 $i$ \u4e2a\u6570\u76f8\u4e58\u6240\u6709\u7ed3\u679c\u7684\u603b\u548c\u3002\u6613\u5f97\u4e0a\u4f20\u516c\u5f0f\uff1a$rt.v[i]=\\sum_{j=0}^ilch.v[j]\\times rch.v[i-j]$\uff1b\u53d6\u53cd\u516c\u5f0f\uff1a$rt.v[i]={(-1)}^i rt.v[i]$\u3002\u4f46\u5982\u679c\u4ec5\u4ec5\u5230\u8fd9\u91cc\uff0c\u6b64\u9898\u7684\u96be\u5ea6\u8fd8\u8fdc\u8fdc\u8bc4\u4e0d\u4e86\u9ed1\u3002\n\n\u95ee\u9898\u51fa\u5728\u533a\u95f4\u52a0\u3002\u4f5c\u533a\u95f4\u52a0\u65f6\uff0c\u6211\u4eec\u6240\u7ef4\u62a4\u7684 $v[i]$ \u65e0\u6cd5\u76f4\u63a5\u8fdb\u884c\u66f4\u65b0\uff0c\u9700\u8981\u501f\u52a9\u4e4b\u524d\u7b97\u51fa\u7684\u7ed3\u679c\u3002\u5047\u8bbe\u67d0\u4e00\u79cd\u65b9\u6848\u6240\u9009\u7684 $c$ \u4e2a\u6570\u662f $\\left\\{a_1,a_2\u2026a_c\\right\\}$\uff0c\u533a\u95f4\u52a0 $x$\uff0c\u5219\u52a0\u540e\u6570\u503c\u53d8\u4e3a\uff1a$(a_1+x)(a_2+x)\u2026(a_c+x)=a_1a_2\u2026a_c+(a_1a_2\u2026a_{c-1}+a_1\u2026a_{c-2}a_c+\u2026+a_2a_3\u2026a_c)x+(a_1a_2\u2026a_{c-2}+\u2026+a_3a_4\u2026a_c)x^2+\u2026+x^c$\u3002\u4e0d\u96be\u53d1\u73b0\u5f0f\u5b50\u4e2d $x^i$ \u7684\u7cfb\u6570\u4e0e\u6211\u4eec\u7684 $v[c-i]$ ~~\u4e00\u6837\u4f46\u53c8\u4e0d\u5b8c\u5168\u4e00\u6837~~ \u5f88\u50cf\uff0c\u53ef\u4ee5\u8003\u8651\u7528 $v[c-i]$ \u4ee3\u66ff\u8ba1\u7b97\u3002\u7531\u4e8e\u6211\u4eec\u7b97\u7684\u662f\u6240\u6709\u65b9\u6848\u4e4b\u548c\uff0c\u56e0\u6b64\u53ea\u9700\u77e5\u9053 $v[c-i]$ \u88ab\u7528\u5230\u7684\u6b21\u6570\u5c31\u597d\u4e86\u3002\u5047\u8bbe\u8fd9\u4e00\u6bb5\u533a\u95f4\u7684\u957f\u5ea6\u4e3a $len$\uff0c\u5219 $v[c-i]$ \u4e2d\u7684\u4e00\u79cd\u65b9\u6848\u6269\u5c55\u81f3   $v[c]$ \u6709 $C_{len-c+i}^i$\uff08\u6709 $len-c+i$ \u4e2a\u6570\u53ef\u9009\u62e9\uff0c\u9700\u8981\u9009\u62e9 $i$ \u4e2a\u6570\uff09\u79cd\u65b9\u6848\uff0c\u800c\u6bcf\u4e00\u79cd\u65b9\u6848\u90fd\u8981\u7528\u5230\u8fd9\u4e2a\u65b9\u6848\u4e00\u6b21\uff0c\u6545 $v[c-i]$ \u5728 $v[c]$ \u4e2d\u4e00\u5171\u88ab\u7528\u5230\u4e86 $C_{len-c+i}^i$ \u6b21\u3002\u8fd9\u6837\u5c31\u5bb9\u6613\u5f97\u51fa\u66f4\u65b0 $v[c]$ \u7684\u516c\u5f0f\u4e86\uff1a$v[c]=v[c]+\\sum_{i=1}^c C_{len-i}^{c-i} x^iv[i]$\u3002\u518d\u63d0\u524d\u6839\u636e $C_i^j=C_{i-1}^j+C_{i-1}^{j-1}$ \u9884\u5904\u7406\u51fa\u7ec4\u5408\u6570\u5373\u53ef\u3002\u6ce8\u610f\u53d6\u6a21\u4e0e\u52a0\u6cd5\u53d6\u53cd\u7684\u987a\u5e8f\u3002\n\n$Code$\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio> \nusing namespace std;\n#define int long long\nconst int Mod=19940417,MAXN=5e4+10;\nstruct seg_tr{\n\tint l,r;\n\tint v[22],add_tag,mul_tag;\n}tr[MAXN*4];\nint n,q,a[MAXN];\nint mat[MAXN][21],l[MAXN];\nvoid add(int k,int x){\n\tl[0]=1;\n\tfor(int i=1;i<=20;i++) l[i]=(l[i-1]*x)%Mod;\n\tint len=tr[k].r-tr[k].l+1;\n\tfor(int i=min((int)20,len);i;i--){\n\t\tfor(int j=0;j<i;j++){\n\t\t\ttr[k].v[i]+=((l[i-j]*tr[k].v[j]%Mod)*mat[len-j][i-j])%Mod;\n\t\t}\n\t\ttr[k].v[i]%=Mod;\n\t} \n\ttr[k].add_tag=(tr[k].add_tag+x)%Mod;\n}\nvoid mul(int k,int x){\n\tfor(int i=1;i<=19;i+=2) tr[k].v[i]*=x;\n\ttr[k].add_tag=(tr[k].add_tag*x%Mod+Mod)%Mod;\n\ttr[k].mul_tag*=x;\n}\nseg_tr push_up(seg_tr lson,seg_tr rson){\n\tseg_tr rt;\n\trt.l=lson.l,rt.r=rson.r;\n\trt.mul_tag=1,rt.add_tag=0;\n\tfor(int i=0;i<=20;i++){\n\t\trt.v[i]=0;\n\t\tfor(int j=0;j<=i;j++)\n\t\t\trt.v[i]+=(lson.v[j]*rson.v[i-j])%Mod;\n\t\trt.v[i]=(rt.v[i]%Mod+Mod)%Mod;\n\t}\n\treturn rt;\n}\t\nvoid push_down(int k){\n\tmul(k<<1,tr[k].mul_tag);\n\tmul(k<<1|1,tr[k].mul_tag);\n\ttr[k].mul_tag=1;\n\tadd(k<<1,tr[k].add_tag);\n\tadd(k<<1|1,tr[k].add_tag);\n\ttr[k].add_tag=0;\n}\nvoid build(int k,int l,int r){\n\ttr[k].l=l;\n\ttr[k].r=r;\n\tfill(tr[k].v,tr[k].v+21,0);\n\ttr[k].mul_tag=1;\n\tif(l==r){\n\t\ttr[k].v[0]=1;\n\t\ttr[k].v[1]=(a[l]%Mod+Mod)%Mod;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n\ttr[k]=push_up(tr[k<<1],tr[k<<1|1]);\n}\nvoid update(int k,int l,int r,int x){\n\tif(tr[k].l>=l&&tr[k].r<=r){\n\t\tadd(k,x);\n\t\treturn;\n\t}\n\tif(tr[k].l>r||tr[k].r<l) return;\n\tpush_down(k);\n\tupdate(k<<1,l,r,x);\n\tupdate(k<<1|1,l,r,x);\n\ttr[k]=push_up(tr[k<<1],tr[k<<1|1]);\n}\nvoid modify(int k,int l,int r){\n\tif(l<=tr[k].l&&tr[k].r<=r){\n\t\tmul(k,-1);\n\t\treturn;\n\t}\n\tif(tr[k].l>r||tr[k].r<l) return;\n\tpush_down(k);\n\tmodify(k<<1,l,r);\n\tmodify(k<<1|1,l,r);\n\ttr[k]=push_up(tr[k<<1],tr[k<<1|1]);\n}\nseg_tr query(int k,int l,int r){\n\tif(tr[k].l>=l&&tr[k].r<=r) return tr[k];\n\tpush_down(k);\n\tint mid=(tr[k].l+tr[k].r)>>1;\n\tif(r<=mid) return query(k<<1,l,r);\n\tif(l>mid) return query(k<<1|1,l,r);\n\treturn push_up(query(k<<1,l,r),query(k<<1|1,l,r));\n}\nvoid pre(){\n\tfor(int j=0;j<=21;j++){\n        mat[j][j]=1;\n        for(int i=j+1;i<=n;i++){\n            if(!j) mat[i][j]=1;\n            else mat[i][j]=(mat[i-1][j-1]+mat[i-1][j])%Mod; \n        }\n    }\n}\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin>>n>>q;\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\tpre(); \n\tbuild(1,1,n);\n\tfor(int i=1;i<=q;i++){\n\t\tchar op;\n\t\tint l,r,c; \n\t\tcin>>op>>l>>r;\n\t\tif(op=='I'){\n\t\t\tcin>>c;\n\t\t\tupdate(1,l,r,c);\n\t\t}else if(op=='R'){\n\t\t\tmodify(1,l,r);\n\t\t}else{\n\t\t\tcin>>c;\n\t\t\tcout<<(query(1,l,r).v[c]%Mod+Mod)%Mod<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1629274726,
        "uid": 314991,
        "name": "zhouyuhang",
        "ccfLevel": 7,
        "title": "P4247 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148 Q \u64cd\u4f5c $c$ \u5f88\u5c0f\uff0c\u53ef\u4ee5\u60f3\u5230\u5728\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u53f6\u5b50\u4e0a\u7ef4\u62a4 $20$ \u4e2a\u6807\u8bb0\u3002\n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u53ef\u80fd\u7684 $c$ \uff0c\u7ef4\u62a4\u533a\u95f4\u5185\u9009 $c$ \u4e2a\u6570\u76f8\u4e58\u7684\u7b54\u6848\uff0c\u8bb0\u505a $t_{0}$ ~ $t_{20}$ \u3002(\u4ee4 $t_{0}=1$ )\n\n\u7136\u540e\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7ef4\u62a4\u4e24\u4e2a tag(rv,add) \u3002(\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5148\u4e0b\u653e rv \u540e add )\n\n\u8003\u8651\u64cd\u4f5c\n\n1. merge:\n\n$ \\quad $ \u53ef\u4ee5\u53d1\u73b0\u628a\u5de6\u53f3\u533a\u95f4\u642d\u914d\u4e00\u4e0b\u4e58\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002\n\n$ \\quad $ \u5373 $t[rt]_{k}=\\sum_{a+b=k}t[lc]_a\\cdot r[rx]_b $\n\n\n2. reverse:\n\n$ \\quad \\forall a\\in odd \\ \\ , t_a=-t_a$\n\n3. **add (hard)**\n\n$ \\quad $ \u8fd9\u5c31\u6bd4\u8f83\u9ebb\u70e6\u4e86\n\n$ \\quad $ \u8003\u8651\u67d0\u79cd\u65b9\u6848\u9009\u4e86 $m$ \u4e2a\u6570\uff1a $x_1\\cdot x_2 \\cdot ...\\cdot x_m$\n\n$ \\quad $ \u533a\u95f4\u52a0 $k$ \u540e\u4e3a $(x_1+k)\\cdot(x_2+k)\\cdot ...\\cdot(x_m+k)$\n\n$ \\quad $ \u5c55\u5f00\uff0c\u5f97 ( $2^m$ \u9879 ) : \n$t_m(new)=\\sum_{choose\\ \\ x_1..x_m}\n\\sum_{s\\subseteq\\{1..m\\} }\nk^{m-|s|}\\prod_{i\\in s}x_i $\n\n$ \\quad (let\\ \\ \\{1..m\\}=\\{x\\in \\mathbb{N}|1\\leq x\\leq m\\},|s|$\u4e3a$s$\u7684\u5927\u5c0f$)$\n\n$ \\quad $ \u8fd8\u662f\u5f88\u6655\u3002\u3002\n\n$ \\quad $ \u8003\u8651\u5f0f\u5b50\u4e2d\u7684 $\\prod_{i\\in s}x_i$,\u53d1\u73b0\u662f $t_{|s|}$ \u7684\u4e00\u90e8\u5206\u3002\n\n$\\quad$ \u53ef\u4ee5\u731c\u51fa\u6bcf\u4e2a $t_{|s|(|s|\\le m)}$ \u5728\u65b0 $t_m$ \u4e2d\u6709\u4e00\u5b9a\u8d21\u732e\u3002\n\n$\\quad$ \u5373 $t_{m}(new)=\\prod_{|s|=0}^{m}t_{|s|}\\cdot2^{m-|s|}\\cdot $ \u4e00\u4e2a\u7cfb\u6570\n\n$\\quad$ \u4f46\u8fd9\u4e2a\u7cfb\u6570\u662f\u591a\u5c11\u5462\uff1f\uff1f\uff1f\n~~(\u6211\u7ec4\u5408\u6570\u5b66\u4e00\u56e2\u7cdf\u60f3\u4e86\u597d\u957f\u65f6\u95f4)~~\n\n$\\quad$ \u8bbe\u8282\u70b9rt\u5bf9\u5e94\u533a\u95f4\u957f\u5ea6\u4e3a $l0$ , $|s|=r$\n\n$\\qquad$ \u662f $C_{l0}^{r}$ \u5417\uff1f\n\n$\\qquad$ \u5148\u9009\u5b9a $m$ \u624d\u6709 $t$ \u3002\n\n$\\qquad$ \u6240\u4ee5\u662f $C_{l0}^{m}\\cdot C_{m}^{r}$ ?\n\n$\\qquad$ \u6211\u5f53\u65f6\u4e00\u76f4\u4ee5\u4e3a\u662f\u8fd9\u4e2a\uff0c\u4f46\u662f\u5176\u5b9e\u8fd9\u4e2a\u662f $\\prod_{i\\in s}x_i$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n$\\qquad$ \u4e00\u4e2a $t_r$ \u662f $C_{l0}^{r}$ \u4e2a $\\prod_i x_i$ \u7684\u548c\u3002\n\n$\\qquad$ \u6240\u4ee5\u7cfb\u6570\u4e3a \n$$\\frac{C_{l0}^{m}\\cdot C_{m}^{r}}{C_{l0}^r}$$\n\n\n$\\qquad$ \u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u6709\u591a\u5c11\u4e2a\u4ece $l0$ \u4e2a\u6570\u4e2d\u9009 $m$ \u4e2a\u6570\u7684\u65b9\u6848\uff0c\u5305\u542b\u4e86\u67d0\u7279\u5b9a\u7684 $r$ \u4e2a\u6570\u3002(\u6709\u4e00\u4e2a\"\u7279\u5b9a\"\u5c31\u4e0d\u4f1a\u7b97\u91cd\u4e86)\n\n$\\qquad$ \u76f8\u5f53\u4e8e\u8fd9 $r$ \u4e2a\u6570\u5fc5\u987b\u9009\uff0c\u8fd8\u8981\u4ece\u5269\u4f59 $(l0-r)$ \u4e2a\u6570\u4e2d\u4efb\u610f\u9009\u51fa $(m-r)$ \u4e2a\u6570\u3002\n\n$$\\frac{C_{l0}^{m}\\cdot C_{m}^{r}}{C_{l0}^r}\n=\\frac{C_{l0}^{r}\\cdot C_{l0-r}^{m-r}}{C_{l0}^r}=C_{l0-r}^{m-r}$$\n\n$\\quad$ \u4e24\u79cd\u60f3\u6cd5\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002\n\n---\n\n$\\tiny{reference:}$\n\n$\\tiny{\\qquad @liuzhangfeiabc \\ \\ 's\\ \\ solution}$\n\n$\\tiny{\\qquad @Karry5307 \\ \\ 's\\ \\ solution}$\n\n---\n\n$\\color{grey}{c}\\color{blue}{o}\\color{purple}{d}\\color{orange}{e}\\color{yellow}{:}$\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<assert.h>\nusing namespace std;\ntypedef long long LL;\nconst int N=1e5+100,D=20,mod=19940417;//not prime\nint C[N][D+10];\n#define lc (rt*2)\n#define rc (rt*2|1)\n#define X tree[rt]\n#define Lc tree[lc]\n#define Rc tree[rc]\n#define chk(i) (i>=mod?i-=mod:(i<0?i+=mod:i))\nstruct node{\n\tint t[D+2],add,l,r;\n\tbool rv;//rv/rev isn't reverse seq,is reverse num\n\tvoid tagA(int v){\n\t\tif(!v)return;\n\t\tadd+=v,chk(add);\n\t\tfor(int l0=r-l+1,i=min(D,l0);i>0;i--){//(**)i=min... to prevent index out of bounds \n\t\t\tint a=0,k=1;\n\t\t\tfor(int j=i;j>=0;j--)\n\t\t\t\ta+=(LL)t[j]*k%mod*C[l0-j][i-j]%mod,\n\t\t\t\tchk(a),k=(LL)k*v%mod;//(***)*v not *add\n\t\t\tt[i]=a;\n\t\t}\n\t}\n\tvoid tagR(){\n\t\trv^=1,add=-add,chk(add);\n\t\tfor(int i=1;i<=D;i+=2)t[i]=-t[i],chk(t[i]);\n\t}\n}tree[N*4];\nvoid pushup(int rt){\n\tassert(!X.rv&&!X.add);\n\tfor(int i=0;i<=D;i++)X.t[i]=0;//***\n\tfor(int i=0;i<=D;i++)\n\t\tfor(int j=0;i+j<=D;j++)\n\t\t\tX.t[i+j]+=(LL)Lc.t[i]*Rc.t[j]%mod,chk(X.t[i+j]);\n}\nvoid putdown(int rt){\n\tif(X.rv)Lc.tagR(),Rc.tagR();//(***)rv first,add next\n\tLc.tagA(X.add),Rc.tagA(X.add);\n\tX.rv=0,X.add=0;\n}\n#define in l<=X.l&&r>=X.r\n#define Check if(r<X.l||l>X.r)return\nvoid modify(int l,int r,int v,int rt){\n\tCheck;\n\tif(in){X.tagA(v);return;}\n\tputdown(rt);//***\n\tmodify(l,r,v,lc),modify(l,r,v,rc);\n\tpushup(rt);\n}\nvoid rev(int l,int r,int rt){\n\tCheck;\n\tif(in){X.tagR();return;}\n\tputdown(rt);\n\trev(l,r,lc),rev(l,r,rc);\n\tpushup(rt);\n}\nstruct temp{int _[D+2];temp(int x=0){memset(_,0,sizeof(_)),_[0]=x;}};\ntemp mg(const temp&a,const temp&b){\n\ttemp c;\n\tfor(int i=0;i<=D;i++)\n\t\tfor(int j=0;i+j<=D;j++)\n\t\t\tc._[i+j]+=(LL)a._[i]*b._[j]%mod,chk(c._[i+j]);\n\treturn c;\n}\ntemp query(int l,int r,int rt){\n\tCheck temp(1);\n\ttemp a;\n\tif(in){\n\t\tfor(int i=0;i<=D;i++)a._[i]=X.t[i];\n\t\treturn a;\n\t}\n\tputdown(rt);\n\treturn mg(query(l,r,lc),query(l,r,rc));\n}\n\nint a[N];\nvoid build(int l,int r,int rt){\n\tX.l=l,X.r=r;\n\tif(l==r){X.t[0]=1,X.t[1]=a[l]%mod;return;}\n\tint mid=(l+r)/2;\n\tbuild(l,mid,lc),build(mid+1,r,rc);\n\tpushup(rt);\n}\nint main(){\n\tint n,q;\n\tscanf(\"%d%d\",&n,&q);\n\tC[0][0]=1;\n\tfor(int i=1;i<=n;i++){\n\t\tC[i][0]=1;\n\t\tfor(int j=1;j<=D;j++)C[i][j]=C[i-1][j]+C[i-1][j-1],chk(C[i][j]);//(***)chk\n\t}\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",a+i);\n\tbuild(1,n,1);\n\twhile(q--){\n\t\tchar s[5];int a,b,c;\n\t\tscanf(\"%s%d%d\",s,&a,&b);\n\t\tif(*s!='R')scanf(\"%d\",&c);\n\t\tif(*s=='I')c%=mod,modify(a,b,c,1);//(***)%\n\t\tif(*s=='R')rev(a,b,1);\n\t\tif(*s=='Q')printf(\"%d\\n\",query(a,b,1)._[c]);\n\t}\n\treturn 0;\n}\n\n\n```\n\n![](\u4e0d\u592a\u660e\u767d\uff1a\u516c\u5f0f\u4e0d\u8981\u7528\u542b\u6709\u975e\u4e0b\u6807\u6570\u5b57\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u5bb9\u6613\u6df7\u6dc6 )",
        "postTime": 1627382092,
        "uid": 157677,
        "name": "maruize",
        "ccfLevel": 0,
        "title": "P4247&bzoj2962 [\u6e05\u534e\u96c6\u8bad2012]\u5e8f\u5217\u64cd\u4f5c"
    },
    {
        "content": "[\u9898\u4f20](https://www.luogu.com.cn/problem/P4247)\n\n~~\u8c03\u4e86\u4e00\u5929\u7ec8\u4e8e\u8fc7\u4e86\uff0c\u5199\u7bc7\u9898\u89e3\u5e86\u795d~~\n\n\u524d\u4e24\u4e2a\u64cd\u4f5c\u662f\u4e2a [\u677f\u5b50](https://www.luogu.com.cn/problem/P3373)\uff0c\u6211\u4eec\u8003\u8651\u64cd\u4f5c 3\u3002\n\n\u6ce8\u610f\u5230 $c \\le 20$\uff0c\u4e0d\u59a8\u8bbe $f_i$ \u4e3a\u9009 $i$ \u4e2a\u6570\u76f8\u4e58\u7684\u65b9\u6848\u548c\u3002\n\n\u663e\u7136\u6709 $f_i=\\sum_{j=0}^{i} f_{ls, j} \\times f_{rs, i-j}$\uff0c\u66b4\u529b\u65f6\u5411\u4e0a $O(c^2)$ \u5408\u5e76\uff0c\u90a3\u4e48\u6ca1\u6709\u64cd\u4f5c 1\u30012 \u7684\u4e16\u754c\u5b8c\u6210\u4e86\uff01\uff011\n\n\u8003\u8651\u52a0\u4e0a\u64cd\u4f5c 1 \u600e\u4e48\u505a\uff0c\u65b9\u6848\u4e2d\u539f\u672c\u7684\u4e00\u4e2a\u548c\u5927\u6982\u957f\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n$$s_c=\\prod_{i=1}^{c} x_i$$\n\n\u6bcf\u4e2a\u6570\u90fd\u52a0\u4e0a\u4e00\u4e2a $v$\uff1a\n\n$$s'_c=\\prod_{i=1}^{c} (x_i+v)$$\n\n\u7c7b\u4f3c\u4e8e\u4e8c\u9879\u5f0f\u5b9a\u7406\uff0c\u5c06\u5176\u62c6\u89e3\uff1a\n\n$$s'_c=\\sum_{cnt=0}^{c} (\\prod_{p_1<p_2<...p_{cnt}} x_{p}) \\times v^{c-cnt}$$\n\n\u4e0d\u96be\u53d1\u73b0\u62ec\u53f7\u91cc\u9762\u90a3\u5806\u4e1c\u897f\u5c31\u662f\u65e7\u7684 $f_{cnt}$\uff0c\u5373\uff1a\n\n$$s'_c=\\sum_{cnt=0}^{c} f_{cnt} \\times v^{c-cnt}$$\n\n\u4e5f\u662f\u66b4\u529b\u5408\u5e76\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c\u4e8c\uff0c\u76f4\u63a5\u5c06\u5947\u6570\u4e2a\u76f8\u4e58\u7684\u3001\u4ee5\u53ca\u52a0\u6cd5\u6807\u8bb0\u53d6\u53cd\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8981\u5148\u4e0b\u4f20\u4e58\u6cd5\u6807\u8bb0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n c^2 \\log n)$\u3002\n\n### Code\uff1a\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\nusing namespace std;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f;\nconst int mo=19940417;\nconst int R=20;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ninline int mod(int x){return (x%mo+mo)%mo;}\nnamespace Solution{\n\tconst int N=5e4+5;\n\tint n, m, a[N], C[N][25];\n\tstruct node{\n\t\tnode(){at=mt=len=0, f[0]=1;for(int i=1; i<=20; i++) f[i]=0;}\n\t\tint f[25], len;\n\t\tint at, mt;\n\t}S;\n\tnode add(node l, node r){\n\t\tnode c=S;\n\t\tc.len=l.len+r.len;\n\t\tfor(int i=1; i<=min(R, c.len); i++)\n\t\t\tfor(int j=0; j<=i; j++)\n\t\t\t\tc.f[i]=mod(c.f[i]+1ll*l.f[j]*r.f[i-j]%mo);\n\t\treturn c;\n\t}\n\tnode d[N*30];\n\tstruct SegmentTree{\n\t\t#define ls k<<1\n\t\t#define rs k<<1|1\n\t\t#define mid (l+r>>1)\n\t\tvoid upd1(int k, int v){//\u533a\u95f4\u52a0 \n\t\t\tint t=min(R, d[k].len);\n\t\t\tfor(int i=t; i; i--)\n\t\t\t\tfor(int j=1, st=v; j<=i; j++, st=1ll*st*v%mo)\n\t\t\t\t\td[k].f[i]=mod(d[k].f[i]+1ll*d[k].f[i-j]*st%mo*C[d[k].len-i+j][j]%mo);\n\t\t\td[k].at=mod(d[k].at+v);\n\t\t}\n\t\tvoid upd2(int k){//\u533a\u95f4\u53d6\u53cd\n\t\t\tint t=min(R, d[k].len);\n\t\t\tfor(int i=1; i<=t; i++)\n\t\t\t\tif(i&1) d[k].f[i]=mod(-d[k].f[i]);\n\t\t\td[k].at=mod(-d[k].at);\n\t\t\td[k].mt^=1; \n\t\t}\n\t\tvoid pushdown(int k){\n\t\t\tif(d[k].mt) upd2(ls), upd2(rs);\n\t\t\tif(d[k].at) upd1(ls, d[k].at), upd1(rs, d[k].at);\n\t\t\td[k].at=0, d[k].mt=0;\n\t\t\treturn ;\n\t\t}\n\t\tvoid build(int k, int l, int r){\n\t\t\td[k]=S;d[k].len=r-l+1;\n\t\t\tif(l==r){d[k].f[1]=a[l&r];return ;}\n\t\t\tbuild(ls, l, mid), build(rs, mid+1, r);\n\t\t\td[k]=add(d[ls], d[rs]);\n\t\t}\n\t\tvoid change(int k, int l, int r, int x, int y, int v, bool flg){\n//\t\t\tif(flg) printf(\">>%d %d\\n\", k, v);\n\t\t\tif(x<=l&&r<=y) return flg?upd1(k, v):upd2(k);pushdown(k);\n\t\t\tif(x<=mid) change(ls, l, mid, x, y, v, flg);\n\t\t\tif(mid<y) change(rs, mid+1, r, x, y, v, flg);\n\t\t\td[k]=add(d[ls], d[rs]);\n\t\t}\n\t\tnode query(int k, int l, int r, int x, int y){\n\t\t\tif(x<=l&&r<=y) return d[k];pushdown(k);\n\t\t\tif(y<=mid) return query(ls, l, mid, x, y);\n\t\t\tif(x>mid) return query(rs, mid+1, r, x, y);\n\t\t\treturn add(query(ls, l, mid, x, y), query(rs, mid+1, r, x, y));\n\t\t}\n\t\tvoid debug(){\n\t\t\tfor(int j=1; j<=n; j++) printf(\"---%d\",d[1].f[j]);puts(\"\");\n\t\t}\n\t\t#undef ls\n\t\t#undef rs\n\t\t#undef mid\n\t}Chtholly;\t\n\tsigned work(){\n\t\tn=read(), m=read();\n\t\tfor(int i=0; i<=20; i++){\n\t\t\tC[i][0]=1;\n\t\t\tfor(int j=1; j<=i; j++) \n\t\t\t\tC[i][j]=mod(C[i-1][j]+C[i-1][j-1]);\n\t\t}\n\t\tfor(int i=21; i<=n; i++){\n\t\t\tC[i][0]=1;\n\t\t\tfor(int j=1; j<=20; j++) \n\t\t\t\tC[i][j]=mod(C[i-1][j]+C[i-1][j-1]);\n\t\t}\n\t\tfor(int i=1; i<=n; i++)\n\t\t\ta[i]=mod(read());\n\t\tChtholly.build(1, 1, n);//Chtholly.debug();\n\t\tfor(int i=1; i<=m; i++){\n\t\t\tchar opt=getchar();\n\t\t\tint a, b, c;\n\t\t\twhile(opt!='I'&&opt!='R'&&opt!='Q') opt=getchar();\n\t\t\tif(opt=='I') \n\t\t\t\ta=read(), b=read(), c=mod(read()), Chtholly.change(1, 1, n, a, b, c, 1);\n\t\t\telse if(opt=='R')\n\t\t\t\ta=read(), b=read(), Chtholly.change(1, 1, n, a, b, 0, 0);\n\t\t\telse \n\t\t\t\ta=read(), b=read(), c=read(),\n\t\t\t\tprintf(\"%d\\n\", Chtholly.query(1, 1, n, a, b).f[c]);\n\t\t\t//Chtholly.debug();\n\t\t}\n\t\treturn 0;\n\t}\n}\nsigned main(){\n\tSolution :: work();\n\treturn 0;\n}\n```",
        "postTime": 1627307937,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "P4247 [\u6e05\u534e\u96c6\u8bad2012]\u5e8f\u5217\u64cd\u4f5c"
    },
    {
        "content": "### P.S.\n### Discription.\n\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\n1. \u533a\u95f4\u53d8\u76f8\u53cd\u6570\n2. \u533a\u95f4\u52a0\n3. \u533a\u95f4\u67e5\u8be2\u4efb\u9009 k \u4e2a\u6570\u7684\u4e58\u79ef\u548c\n\n### Solution.\n\u7ebf\u6bb5\u6811+\u4e8c\u9879\u5f0f\u5b9a\u7406  \n\n\u9996\u5148\u6211\u4eec\u89c2\u5bdf\u5230 $k$ \u5f88\u5c0f\uff0c\u53ea\u6709 $20$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u66b4\u529b\u8bb0\u5f55\u4e0d\u540c $k$ \u7684\u7b54\u6848\u3002  \n\u63a5\u4e0b\u6765\u6211\u4eec\u6309\u7167\u7ebf\u6bb5\u6811\u9898\u76ee\u7684\u57fa\u672c\u5957\u8def\uff0c\u76f4\u63a5\u8003\u8651\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\u3002  \n1. \u5408\u5e76\u4e24\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\n2. \u80fd\u5426\u5feb\u901f\u7ef4\u62a4\u533a\u95f4\u4fee\u6539\n3. \u65f6\u7a7a\u590d\u6742\u5ea6\u662f\u5426\u591f\u3001\u5e38\u6570\u662f\u5426\u591f\uff08\u663e\u7136\u591f\n\n#### 1. \u5408\u5e76\u4e24\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\n\u6211\u4eec\u73b0\u5728\u5df2\u77e5\u5728\u5de6\u8fb9\u9009 $i$ \u4e2a\u7684\u8d21\u732e\u548c\uff0c\u4ee5\u53ca\u5728\u53f3\u8fb9\u9009 $j$ \u4e2a\u7684\u8d21\u732e\u548c\uff0c\u90a3\u4e48\u76f4\u63a5\u5377\u79ef\u8d77\u6765\u5c31\u597d\u4e86\u3002  \n$$T_{now,i+j}=\\sum T_{lson,i}\\times T_{rson,j}$$\n~~\u6b64\u65f6\u53ef\u4ee5\u7528 FFT \u5feb\u901f\u5408\u5e76~~\uff0c\u76f4\u63a5\u66b4\u529b\u5e73\u65b9\u7ea7\u5377\u79ef\u5c31\u597d\u4e86  \n\u590d\u6742\u5ea6 $O(20^2)$\n\n#### 2. \u5feb\u901f\u7ef4\u62a4\u533a\u95f4\u53d8\u76f8\u53cd\u6570\u64cd\u4f5c\n\u8fd9\u4e2a\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u533a\u95f4\u4e2d\u5947\u6570\u4e3a\u53d6 `-`\uff0c\u5076\u6570\u4f4d\u4e0d\u53d8\u5c31\u597d\u4e86\u3002  \n\n#### 3. \u5feb\u901f\u7ef4\u62a4\u533a\u95f4\u52a0\u64cd\u4f5c\n\u8fd9\u4e2a\u6bd4\u8f83\u590d\u6742\uff0c\u6bd4\u5982\u6211\u4eec\u6709\u4e00\u4e2a~~\u67ff~~\u5f0f\u5b50\n$$\\prod_{i=1}^{k}a_i$$\n\u90a3\u4e48\u5982\u679c\u5bf9\u533a\u95f4\u7684\u6240\u6709 $\\{a_i\\}$ \u52a0 $c$\uff0c\u90a3\u4e48\u5f0f\u5b50\u5c31\u662f\n$$F_k=\\prod_{i=1}^k(a_i+c)$$\n$$=\\sum_{i=0}^k(C_k^i\\times c^i\\times F_{k-i})$$\n\u6ce8\u610f\u8ba1\u7b97\u5927\u7684 $F$ \u65f6\u8981\u7528\u5230\u5230\u5c0f\u7684 $F$\uff0c\u6240\u4ee5\u8981\u4ece\u540e\u5411\u524d\u626b\u3002\n\n### Coding.\n```cpp\n//\u613f\u4f60\u6709\u4e00\u5929\u80fd\u548c\u4f60\u91cd\u8981\u7684\u4eba\u91cd\u9022\u3002\n#include<bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}\nconst int P=19940417;\nstruct node{int vl[25],len,rv,tg;}t[200005],_1;\nint n,q,a[50005],C[50005][25],tmp[25];\ninline node operator+(node a,node b)\n{//\u7ebf\u6bb5\u6811\u4fe1\u606f\u5408\u5e76\u64cd\u4f5c\n\tnode c;memset(c.vl,0,sizeof(c.vl)),c.len=20;\n\tfor(int i=0;i<=20&&i<=a.len;i++)\n\t\tfor(int j=0;i+j<=20&&j<=b.len;j++)\n\t\t\t(c.vl[i+j]+=1ll*a.vl[i]*b.vl[j]%P)%=P;\n\treturn c;\n}\ninline void up(int x) {node c=t[x<<1]+t[x<<1|1];memcpy(t[x].vl,c.vl,sizeof(t[x].vl));}\n//\u9632\u6b62\u4e22\u5931\u539f\u6765\u7684tag\u4fe1\u606f\uff08\u5176\u5b9e\u4e0d\u9700\u8981\uff0c\u53ea\u662f\u4e60\u60ef\ninline void rev(int x)\n{\n\tfor(int i=1;i<=20&&i<=t[x].len;++++i) t[x].vl[i]=t[x].vl[i]?P-t[x].vl[i]:0;\n\tt[x].tg=t[x].tg?P-t[x].tg:0,t[x].rv^=1;\n}\ninline void dwrv(int x) {if(t[x].rv) rev(x<<1),rev(x<<1|1),t[x].rv=0;}\ninline void add(int x,int c)\n{\n\ttmp[0]=1;for(int i=1;i<=20;i++) tmp[i]=1ll*tmp[i-1]*c%P;\n\tfor(int i=min(20,t[x].len);i;i--) for(int j=0;j<i;j++) (t[x].vl[i]+=1ll*t[x].vl[j]*tmp[i-j]%P*C[t[x].len-j][i-j]%P)%=P;\n\tt[x].tg=(t[x].tg+c)%P;\n}\ninline void dwad(int x) {if(t[x].tg) add(x<<1,t[x].tg),add(x<<1|1,t[x].tg),t[x].tg=0;}\ninline void down(int x) {dwrv(x),dwad(x);}\ninline void build(int x,int l,int r)\n{\n\tt[x].len=r-l+1;if(l==r) return(void)(t[x].vl[0]=1,t[x].vl[1]=(a[l]%P+P)%P);\n\tbuild(x<<1,l,(l+r)>>1),build(x<<1|1,((l+r)>>1)+1,r),up(x);\n}\ninline void updrev(int x,int l,int r,int dl,int dr)\n{\n\tif(l>dr||dl>r) return;else if(dl<=l&&r<=dr) return rev(x);else down(x);\n\tupdrev(x<<1,l,(l+r)>>1,dl,dr),updrev(x<<1|1,((l+r)>>1)+1,r,dl,dr),up(x);\n}\ninline void updadd(int x,int l,int r,int dl,int dr,int w)\n{\n\tif(l>dr||dl>r) return;else if(dl<=l&&r<=dr) return add(x,w);else down(x);\n\tupdadd(x<<1,l,(l+r)>>1,dl,dr,w),updadd(x<<1|1,((l+r)>>1)+1,r,dl,dr,w),up(x);\n}\ninline node query(int x,int l,int r,int dl,int dr)\n{\n\tif(l>dr||dl>r) return _1;else if(dl<=l&&r<=dr) return t[x];else down(x);\n\treturn query(x<<1,l,(l+r)>>1,dl,dr)+query(x<<1|1,((l+r)>>1)+1,r,dl,dr);\n}\nint main()\n{\n\tC[0][0]=1,read(n),read(q),memset(_1.vl,0,sizeof(_1.vl)),_1.len=20,_1.vl[0]=1;char ch[25];\n\tfor(int i=1;i<=50000;i++) {C[i][0]=1;for(int j=1;j<=i&&j<=20;j++) C[i][j]=(C[i-1][j-1]+C[i-1][j])%P;}\n\tfor(int i=1;i<=n;i++) read(a[i]);\n\tfor(build(1,1,n);q--;)\n\t{\n\t\tscanf(\"%s\",ch+1);int a,b,c;read(a),read(b);\n\t\tif(ch[1]=='I') read(c),updadd(1,1,n,a,b,c);\n\t\telse if(ch[1]=='R') updrev(1,1,n,a,b);\n\t\telse read(c),printf(\"%d\\n\",(query(1,1,n,a,b).vl[c]+P)%P);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605955510,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P4247[\u6e05\u534e\u96c6\u8bad2012]\u5e8f\u5217\u64cd\u4f5c\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "~~\u6700\u8fd1\u51c6\u5907 $CSP$\uff0c\u6b63\u597d\u5728\u5199\u7ebf\u6bb5\u6811\uff0c \u8003\u8bd5\u524d\u71ac\u591c\u5199\u4e86\u8fd9\u9053\u9ed1\u9898\u3002\u4e0b\u5348\u8003\u63d0\u9ad8\u7ec4\uff0c\u6ca1\u60f3\u5230\u7b2c\u4e09\u9898\u5c45\u7136\u5c31\u662f\u7ebf\u6bb5\u6811\u9a97\u5206\uff08\u867d\u7136\u6211\u5e76\u6ca1\u6709\u9a97\u5230\u5206\uff09\u3002~~\n# \u6b63\u6587\n\u5c31\u662f\u4e00\u9053\u7ebf\u6bb5\u6811 $+$ \u66b4\u529b\u7684\u9898\uff0c\u4e2a\u4eba\u611f\u89c9\u8fd8\u4e0d\u5982 [\u5409\u8001\u5e08\u7ebf\u6bb5\u6811\uff1f](https://www.luogu.com.cn/problem/P6242)\n# \u601d\u8def\n\u5bf9\u4e8e\u64cd\u4f5c\u4e00\u548c\u64cd\u4f5c\u4e8c\uff0c\u5dee\u4e0d\u591a\u7eff\u9898\u7684\u96be\u5ea6\uff0c\u96be\u70b9\u5728\u64cd\u4f5c\u4e09\u3002\n\n#### 1. \u9996\u5148\u6211\u4eec\u8003\u8651\u5efa\u6811\u3001\u64cd\u4f5c\u4e00\u548c\u64cd\u4f5c\u4e8c\n\u8fd9\u91cc\u76f4\u63a5\u653e\u4ee3\u7801\u3002\n## code\uff1a\n```cpp\nvoid build(int p,int l,int r){//\u5efa\u6811\n\ttree[p].size=r-l+1;//\u8bb0\u5f55\u533a\u95f4\u957f\u5ea6\uff0c\u540e\u9762\u6709\u5999\u7528\n\tif(l==r){\n\t\ttree[p].pro[0]=1;\n\t\ttree[p].pro[1]=(a[l]%mod+mod)%mod;\n\t\treturn;\n\t}\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n\tpush_up(p);\n}\n```\n\n---\n```cpp\nvoid change_1(int p,int l,int r,int xl,int xr,int x){//\u533a\u95f4\u52a0\n\tif(l>=xl&&r<=xr){\n\t\tadd(p,x);\n\t\treturn;\n\t}\n\tpush_down(p);//\u4e0b\u653e\u61d2\u6807\u8bb0\n\tif(mid>=xl) change_1(lc,l,mid,xl,xr,x);\n\tif(mid<xr) change_1(rc,mid+1,r,xl,xr,x);\n\tpush_up(p);\n}\n```\n\n---\n```cpp\nvoid change_2(int p,int l,int r,int xl,int xr){//\u533a\u95f4\u53d6\u53cd\n\tif(l>=xl&&r<=xr){\n\t\topp(p);\n\t\treturn;\n\t}\n\tpush_down(p);//\u4e0b\u653e\u61d2\u6807\u8bb0\n\tif(mid>=xl) change_2(lc,l,mid,xl,xr);\n\tif(mid<xr) change_2(rc,mid+1,r,xl,xr);\n\tpush_up(p);\n}\n```\n\n---\n\u770b\u8d77\u6765\u57fa\u672c\u4e0a\u548c\u7ebf\u6bb5\u6811 2 \u5dee\u4e0d\u591a\u5bf9\u4e0d\u5bf9\uff1f\u522b\u6025\uff0c\u6211\u4eec\u63a5\u7740\u6765\u770b\u672c\u7b97\u6cd5\u7684\u7cbe\u9ad3\u3002\n### 2. \u63a5\u7740\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55\u5de7\u5999\u5904\u7406\u64cd\u4f5c\u4e09\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u9898\u76ee\u8981\u6c42\u7684 $c$ \u53ea\u6709 $c \\leqslant 20$\u3002\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u66b4\u529b\u679a\u4e3e\u5de6\u513f\u5b50\u4e2d\u7684 $i$ \u4e2a\u6570\u4e0e\u53f3\u513f\u5b50\u4e2d\u7684 $j$ \u4e2a\u6570\u76f8\u4e58\u4e4b\u548c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u5904\u7406\u533a\u95f4\u52a0\u548c\u533a\u95f4\u53d6\u53cd\u5bf9\u64cd\u4f5c\u4e09\u7684\u5f71\u54cd\u5462\uff1f\u89c2\u5bdf\u4e0b\u9762\u8fd9\u4e9b\u5f0f\u5b50\uff1a\n\n---\n$(a+b)^2=a^2+ab+b^2$\n\n$(a+b)^3=a^3+3a^2b+3ab^2+b^2$\n\n$(a+b)^4=a^4+4a^3b+6a^2b^2+4ab^3+b^4$\n\n$(a+b)^5=a^5+5a^4b+10a^3b^2+10a^2b^3+5ab^4+b^5$\n\n$\u2026\u2026$\n\n---\n\u5982\u679c\u5355\u72ec\u53ea\u770b\u7cfb\u6570\u7684\u8bdd\u5c31\u662f\u8fd9\u6837\u5b50\uff1a\n\n---\n$\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ 1$\n\n$\\ \\ \\ \\ \\ \\ 1 \\ \\ 2\\ \\ 1$\n\n$\\ \\ \\ 1 \\ \\ \\ 3\\ \\ \\ 3\\ \\ 1$\n\n$1\\ \\ \\ 4\\ \\ \\ 6\\ \\ \\ 4\\ \\ \\ 1$\n\n$\\ \\ \\ \u2026\u2026\u2026$\n\n\n---\n\u6ca1\u9519\uff0c\u5c31\u662f\u5927\u540d\u9f0e\u9f0e\u7684\u6768\u8f89\u4e09\u89d2\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6768\u8f89\u4e09\u89d2 $n$ \u884c\u524d\u7684\u6240\u6709\u6570\u3002\n## code\uff1a\n```cpp \nvoid make_triangle(){\n\ttri[0][0]=1;\n\tfor(ri i=1;i<=n;i++){\n\t\ttri[i][0]=1;\n\t\tfor(ri j=1;j<=i&&j<=20;j++){\n\t\t\ttri[i][j]=(tri[i-1][j]+tri[i-1][j-1])%mod;\n\t\t}\n\t}\n}\n```\n\n---\n\u6709\u4e86\u6768\u8f89\u4e09\u89d2\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u5904\u7406\u533a\u95f4\u52a0\uff0c\u90a3\u4e48\u533a\u95f4\u76f8\u53cd\u6570\u5462\uff1f\u53ea\u8981\u628a\u5947\u6b21\u9879\u7684\u79ef\u53d6\u53cd\uff0c\u5076\u6b64\u9879\u4e0d\u53d8\u5373\u53ef\u3002\n## code\uff1a\n```cpp\nvoid push_up(int p){\n\tmemset(tree[p].pro,0,sizeof(tree[p].pro));\n\tfor(ri i=0;i<=tree[lc].size&&i<=20;i++){\n\t\tfor(ri j=0;j<=tree[rc].size&&j+i<=20;j++){\n\t\t\ttree[p].pro[i+j]+=tree[lc].pro[i]*tree[rc].pro[j]; \n\t\t}\n\t}\n\tfor(ri i=0;i<=20&&i<=tree[p].size;i++) tree[p].pro[i]%=mod;\n}\n```\n```cpp\nvoid add(int p,int x){//\u533a\u95f4\u548c\u64cd\u4f5c\n\tif(!p||!x) return;\n\ttemp[0]=1;\n\tfor(ri i=1;i<=20&&i<=tree[p].size;i++) temp[i]=temp[i-1]*x%mod;\n\tfor(ri i=min((long long)20,tree[p].size);i;i--){\n\t\tfor(ri j=0;j<i;j++){\n\t\t\ttree[p].pro[i]=(tree[p].pro[i]+tree[p].pro[j]*temp[i-j]%mod*tri[tree[p].size-j][i-j])%mod;\n\t\t}\n\t}\n\ttree[p].add=(tree[p].add+x)%mod;\n}\n```\n\n---\n```cpp\nvoid opp(int p){//\u533a\u95f4\u53d6\u53cd\u64cd\u4f5c\n\tif(!p) return;\n\tfor(ri i=1;i<=20&&i<=tree[p].size;i++){\n\t\tif(i&1){\n\t\t\ttree[p].pro[i]=-tree[p].pro[i];\n\t\t}\n\t} \n\ttree[p].add=mod-tree[p].add;\n\ttree[p].opp^=1;\n}\n```\n\n---\n```cpp\nvoid push_down(int p){\n\tif(tree[p].opp){\n\t\topp(lc);\n\t\topp(rc);\n\t\ttree[p].opp=0;\n\t}\n\tif(tree[p].add){\n\t\tadd(lc,tree[p].add);\n\t\tadd(rc,tree[p].add);\n\t\ttree[p].add=0;\n\t}\n}\n```\n### 3. \u533a\u95f4\u67e5\u8be2\n\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n---\n- \u76ee\u6807\u533a\u95f4\u5168\u5728\u5de6\u513f\u5b50\n\n- \u76ee\u6807\u533a\u95f4\u5168\u5728\u53f3\u513f\u5b50\n\n- \u76ee\u6807\u533a\u95f4\u4e00\u534a\u5728\u5de6\u3001\u4e00\u534a\u5728\u53f3\n---\n\u7b2c\u4e09\u79cd\u60c5\u51b5\u8f83\u4e3a\u590d\u6742\uff0c\u9700\u8981\u518d\u6b21\u5408\u5e76\u3002\n## code\uff1a\n```cpp\nNode merge(Node l,Node r){\n\tNode mer;\n\tmer.size=l.size+r.size;\n\tfor(ri i=0;i<=20&&i<=l.size;i++){\n\t\tfor(ri j=0;j+i<=20&&j<=r.size;j++){\n\t\t\tmer.pro[i+j]=(mer.pro[i+j]+l.pro[i]*r.pro[j])%mod;\n\t\t}\n\t}\n\treturn mer;\n}\n```\n```cpp\nNode ask(int p,int l,int r,int xl,int xr){\n\tif(l>=xl&&r<=xr){\n\t\treturn tree[p];\n\t}\n\tpush_down(p);\n\tif(mid>=xr) return ask(lc,l,mid,xl,xr);\n\telse if(mid<xl) return ask(rc,mid+1,r,xl,xr);\n\telse return merge(ask(lc,l,mid,xl,xr),ask(rc,mid+1,r,xl,xr));\n}\n```\n# \u6700\u540e\u5b8c\u6574\u4ee3\u7801\u5e86\u795d $CSP$ \u5b8c\u7f8e\u7ed3\uff08bao\uff09\u675f\uff08ling\uff09\uff01\uff01!\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ri register int\n#define N 50005\n#define lc p*2\n#define rc lc+1\n#define mid (l+r)/2 \nusing namespace std;\nconst int mod=19940417;\nint n,m;\nint a[N];\nstruct Node{\n\tint pro[25];\n\tint size;\n\tbool opp;\n\tint add;\n\tNode(){\n\t\topp=add=size=0;\n\t\tmemset(pro,0,sizeof(pro));\n\t}\n}tree[N*4];\nint tri[N][25],temp[25];\nvoid make_triangle(){\n\ttri[0][0]=1;\n\tfor(ri i=1;i<=n;i++){\n\t\ttri[i][0]=1;\n\t\tfor(ri j=1;j<=i&&j<=20;j++){\n\t\t\ttri[i][j]=(tri[i-1][j]+tri[i-1][j-1])%mod;\n\t\t}\n\t}\n}\nvoid push_up(int p){\n\tmemset(tree[p].pro,0,sizeof(tree[p].pro));\n\tfor(ri i=0;i<=tree[lc].size&&i<=20;i++){\n\t\tfor(ri j=0;j<=tree[rc].size&&j+i<=20;j++){\n\t\t\ttree[p].pro[i+j]+=tree[lc].pro[i]*tree[rc].pro[j]; \n\t\t}\n\t}\n\tfor(ri i=0;i<=20&&i<=tree[p].size;i++) tree[p].pro[i]%=mod;\n}\nvoid build(int p,int l,int r){\n\ttree[p].size=r-l+1;\n\tif(l==r){\n\t\ttree[p].pro[0]=1;\n\t\ttree[p].pro[1]=(a[l]%mod+mod)%mod;\n\t\treturn;\n\t}\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n\tpush_up(p);\n}\nvoid add(int p,int x){\n\tif(!p||!x) return;\n\ttemp[0]=1;\n\tfor(ri i=1;i<=20&&i<=tree[p].size;i++) temp[i]=temp[i-1]*x%mod;\n\tfor(ri i=min((long long)20,tree[p].size);i;i--){\n\t\tfor(ri j=0;j<i;j++){\n\t\t\ttree[p].pro[i]=(tree[p].pro[i]+tree[p].pro[j]*temp[i-j]%mod*tri[tree[p].size-j][i-j])%mod;\n\t\t}\n\t}\n\ttree[p].add=(tree[p].add+x)%mod;\n}\nvoid opp(int p){\n\tif(!p) return;\n\tfor(ri i=1;i<=20&&i<=tree[p].size;i++){\n\t\tif(i&1){\n\t\t\ttree[p].pro[i]=-tree[p].pro[i];\n\t\t}\n\t} \n\ttree[p].add=mod-tree[p].add;\n\ttree[p].opp^=1;\n}\nvoid push_down(int p){\n\tif(tree[p].opp){\n\t\topp(lc);\n\t\topp(rc);\n\t\ttree[p].opp=0;\n\t}\n\tif(tree[p].add){\n\t\tadd(lc,tree[p].add);\n\t\tadd(rc,tree[p].add);\n\t\ttree[p].add=0;\n\t}\n}\nvoid change_1(int p,int l,int r,int xl,int xr,int x){\n\tif(l>=xl&&r<=xr){\n\t\tadd(p,x);\n\t\treturn;\n\t}\n\tpush_down(p);\n\tif(mid>=xl) change_1(lc,l,mid,xl,xr,x);\n\tif(mid<xr) change_1(rc,mid+1,r,xl,xr,x);\n\tpush_up(p);\n}\nvoid change_2(int p,int l,int r,int xl,int xr){\n\tif(l>=xl&&r<=xr){\n\t\topp(p);\n\t\treturn;\n\t}\n\tpush_down(p);\n\tif(mid>=xl) change_2(lc,l,mid,xl,xr);\n\tif(mid<xr) change_2(rc,mid+1,r,xl,xr);\n\tpush_up(p);\n}\nNode merge(Node l,Node r){\n\tNode mer;\n\tmer.size=l.size+r.size;\n\tfor(ri i=0;i<=20&&i<=l.size;i++){\n\t\tfor(ri j=0;j+i<=20&&j<=r.size;j++){\n\t\t\tmer.pro[i+j]=(mer.pro[i+j]+l.pro[i]*r.pro[j])%mod;\n\t\t}\n\t}\n\treturn mer;\n}\nNode ask(int p,int l,int r,int xl,int xr){\n\tif(l>=xl&&r<=xr){\n\t\treturn tree[p];\n\t}\n\tpush_down(p);\n\tif(mid>=xr) return ask(lc,l,mid,xl,xr);\n\telse if(mid<xl) return ask(rc,mid+1,r,xl,xr);\n\telse return merge(ask(lc,l,mid,xl,xr),ask(rc,mid+1,r,xl,xr));\n}\nsigned main(){\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(ri i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\ttree[0].pro[0]=1;\n\tmake_triangle();\n\tbuild(1,1,n);\n\tfor(ri i=1;i<=m;i++){\n\t\tchar c;\n\t\tint x,y,z;\n\t\tcin>>c;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tif(c=='I'){\n\t\t\tscanf(\"%lld\",&z);\n\t\t\tz=(z%mod+mod)%mod;\n\t\t\tchange_1(1,1,n,x,y,z);\n\t\t}\n\t\tif(c=='R'){\n\t\t\tchange_2(1,1,n,x,y);\n\t\t}\n\t\tif(c=='Q'){\n\t\t\tscanf(\"%lld\",&z);\n\t\t\tprintf(\"%lld\\n\",(ask(1,1,n,x,y).pro[z]%mod+mod)%mod);\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1604763991,
        "uid": 244165,
        "name": "_121017_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4247 \u3010[\u6e05\u534e\u96c6\u8bad2012]\u5e8f\u5217\u64cd\u4f5c\u3011"
    }
]