[
    {
        "content": "###\u8d2a\u5fc3+DP###\n\n\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u8fd9\u9053\u9898\u5c31\u662f\uff1a\u517b\u732a  (\u9898\u76ee\u540d)\n\n\u6b22\u8fce\u6765\u8e29\u535a\u5ba2\uff1a[five20](http://www.cnblogs.com/five20/p/7804548.html)\n\n**\u601d\u8def\uff1a**\u9996\u5148\uff0c\u5410\u69fd\u4e00\u4e0b\u9898\u76ee\u6570\u636e\uff0c\u6ca1\u6709\u6307\u51faMi>=Bi\uff0c\u5927\u5bb6\u5e94\u8be5\u628a\u8fd9\u4e2a\u5f53\u4f5c\u9690\u85cf\u6761\u4ef6\u3002\u81f3\u4e8e\u601d\u8def\uff0c\u6211\u4eec\u5148\u601d\u8003\uff0c\u5f88\u660e\u663e\u82e5\u53ea\u90091\u68f5\u6811\uff0c\u90a3\u5c31\u9009\u4ef7\u503c\u6700\u5927\u7684\uff0c\u82e5\u8981\u9009\u591a\u68f5\u6811\uff0c\u5219\u8981\u5148\u9009\u6d88\u8017\u6700\u5927\u7684(\u4e0d\u4e00\u5b9a\u4ef7\u503c\u6700\u5927)\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\u5047\u8bbe\u6211\u4eec\u67093\u68f5\u6811\u4e14\u8981\u9009\u5168\u90e8\uff0c\u6bcf\u68f5\u4ef7\u503c\u548c\u6bcf\u6b21\u6d88\u8017\u5206\u522b\u4e3am1,m2,m3;b1,b2,b3;\u5219\u603b\u4ef7\u503c=m1+m2+m3-k1\\*b1-k2\\*b2-k3\\*b3\uff0c\u5176\u4e2dk\u4e3a\u7b2c\u51e0\u6b21\u9009-1\uff0c\u5f88\u660e\u663e\u6d88\u8017\u7684\u5927\u7684\u7cfb\u6570\u8981\u5c0f\uff0c\u5373\u6d88\u8017\u5927\u7684\u8981\u5148\u53d6\u3002\u4ee5\u6b64\u6211\u4eec\u53ef\u4ee5\u63a8\u53ca\u5230n\u68f5\u6811\u9009k\u68f5\u7684\u60c5\u51b5(\u660e\u663e\u5c31\u662fdp\u4e86\u561b)\uff0c\u5148\u6309\u6d88\u8017\u4ece\u5927\u5230\u5c0f\u8d2a\u5fc3\u6392\u5e8f\uff0c\u8fd9\u6837\u53bb\u53d6\u80af\u5b9a\u4fdd\u8bc1\u6700\u4f18\uff0c\u7136\u540e\u8003\u8651dp\uff0c\u8bbef[i][j]\u8868\u793a\u524di\u68f5\u6811\u9009j\u68f5\u5f97\u5230\u7684\u6700\u5927\u503c\uff0c\u5219\u5f88\u5bb9\u6613\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[i][j]=max(f[i-1][j],f[i-1][j-1]+max(0,m[i]-b[i]\\*(j-1))) \u3002\n\n**\u6ce8\u610f\uff1a**\u4ef7\u503c\u51cf\u5c0f\u52300\u540e\u76f4\u63a5\u8d4b\u4e3a0\u3002\n\n**\u4ee3\u7801\uff1a**\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\n#define ll long long\n#define il inline\nint n,k,f[1005][1005],ans;\nstruct pig{\nint a,p;\n}zhu[1005];\nil bool cmp(pig a,pig b){return a.p>b.p;}\nil int gi()\n{\n    int a=0;char x=getchar();bool f=0;\n    while((x<'0'||x>'9')&&x!='-')x=getchar();\n    if(x=='-')x=getchar(),f=1;\n    while(x>='0'&&x<='9')a=a*10+x-48,x=getchar();\n    return f?-a:a;\n}\nil int max(int a,int b){if(a>b)return a;return b;}\nint main()\n{\n    while(1){\n        n=gi(),k=gi();\n        if(n==0&&k==0)return 0;\n    ans=0;\n    memset(f,0,sizeof(f));\n    for(int i=1;i<=n;i++)zhu[i].a=gi();\n    for(int i=1;i<=n;i++)zhu[i].p=gi();\n    sort(zhu+1,zhu+n+1,cmp);\n    for(int i=1;i<=k;i++)\n    for(int j=1;j<=n;j++)\n    {\n        int x=zhu[j].a-zhu[j].p*(i-1);\n        x=x>0?x:0;\n        f[j][i]=max(f[j-1][i],f[j-1][i-1]+x);\n    }\n    for(int i=1;i<=k;i++)ans=max(f[n][i],ans);\n    printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1510128517,
        "uid": 44000,
        "name": "\u6d45\u8272\u8c03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1987 \u3010\u6447\u94b1\u6811\u3011"
    },
    {
        "content": "\u611f\u89c9\u73b0\u6709\u7684\u4e24\u7bc7\u9898\u89e3\u90fd\u6ca1\u6709\u4e25\u683c\u8bc1\u660e\u4e3a\u4ec0\u4e48\u8981\u6309\u7167``p``\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6240\u4ee5\u6211\u5c31\u5199\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\n\n\u5e7f\u544a\uff1ahttps://llf0703.com\n\n## \u65b9\u6cd5\n\n\u8d2a\u5fc3+dp\u3002\u8d2a\u5fc3\u7b56\u7565\u662f\u6309``P``\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e01\u80cc\u5305\u51b3\u5b9a\u780d\u4e0d\u780d\u5373\u53ef\u3002\u8d2a\u5fc3\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u5047\u8bbe\u6700\u521d\u7684\u987a\u5e8f\u662f $$ A[1],A[2],...,A[x],A[x+1],...,A[n] $$ \u53ca $$ P[1],P[2],...,P[x],P[x+1],...,P[n] $$ \n\n\u5bf9\u4e8e\u7b2c $ x $ \u548c\u7b2c $x+1$  \u68f5\u6811\uff0c\u780d\u4e86\u5b83\u4eec\u83b7\u5f97\u7684\u5229\u76ca\u548c $ W1 $ \u662f \n\n$$ A[x]-P[x]\\times (x-1)+A[x+1]-P[x+1]\\times x $$\n\n\u5982\u679c\u6211\u4eec\u4ea4\u6362\u7b2c $ x $ \u548c\u7b2c $ x+1 $  \u68f5\u6811\uff0c\u5229\u76ca\u548c $ W2 $ \u5c31\u53d8\u6210\u4e86\n\n$$ A[x]-P[x]\\times x+A[x+1]-P[x+1]\\times (x-1) $$\n\n\u80af\u5b9a\u662f\u6709\u66f4\u591a\u5229\u76ca\u6211\u4eec\u624d\u4f1a\u4ea4\u6362\uff0c\u6240\u4ee5\u9700\u8981\u6ee1\u8db3\n\n$$ W2-W1=P[x+1]-P[x]>0 $$\u5373 $$ P[x+1]>P[x] $$ \n\n\u4ea4\u6362\u540e\u5c31\u662f $ P[x]>P[x+1] $ \u4e86\uff0c\u6240\u4ee5\u6309\u7167``p``\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u6807\u51c601\u80cc\u5305\uff0c\u7531\u4e8e\u6570\u636e\u4e0d\u5927\uff0c\u7528\u4e0d\u7528\u6eda\u52a8\u6570\u7ec4\u90fd\u53ef\u4ee5\u3002\u65b9\u7a0b\u5f0f\u662f\uff1a\n\n$$ f[i][j]=\\max \\begin{cases} f[i-1][j] \\\\ f[i-1][j-1]+\\max(0,A[i]-P[i]*(j-1)) \\end{cases} $$\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\n\nusing namespace std;\n\ninline int read()\n{\n    char ch=getchar();\n    int f=1,x=0;\n    while (ch<'0' || ch>'9')\n    {\n        if (ch=='-') f=-1;\n        ch=getchar();\n    }\n    while (ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return f*x;\n}\n\nint n,k,f[1005][1005],ans;\nstruct pig{\n    int a,p;\n} s[1005];\n\ninline bool cmp(pig x,pig y)\n{\n    return x.p>y.p;\n}\n\nint main()\n{\n    while (~scanf(\"%d%d\",&n,&k) && n && k)\n    {\n        memset(f,0,sizeof(f));\n        ans=0;\n        if (k>n) k=n;\n        for (int i=1;i<=n;i++) s[i].a=read();\n        for (int i=1;i<=n;i++) s[i].p=read();\n        sort(s+1,s+n+1,cmp);\n        for (int i=1;i<=n;i++)\n            for (int j=k;j;j--)\n                f[i][j]=max(f[i-1][j-1]+max(0,s[i].a-s[i].p*(j-1)),f[i-1][j]);\n        for (int i=1;i<=k;i++) ans=max(ans,f[n][i]);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1540807446,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1987 \u3010\u6447\u94b1\u6811\u3011"
    },
    {
        "content": "## \u9898\u89e3\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u524d\u7684\u72b6\u6001\u662f\u8bb0\u5f55\u4e0d\u4e86\u7684\uff0c\u90a3\u4e48\u9700\u8981\u6309\u4e00\u5b9a\u987a\u5e8f\u8fdb\u884cdp\u3002\n\n\u82e5\u4e00\u7ec4\u6570\u5217\uff0c$n=k$\uff0c\u9700\u8981\u90fd\u9009\uff0c\u5982\u679c\u7b2c $i$ \u68f5\u6811\u662f\u7b2c $C_i$ \u6b21\u9009\u5b83\uff0c$sum$ \u8868\u793a $\\sum M_i$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $ans=sum-(C_i-1)\\times B_i$\u3002**\u53ef\u4ee5\u53d1\u73b0 $ans$ \u53d6\u6700\u5927\u503c\u65f6\uff0c\u5fc5\u5b9a\u662f\u6309 $B_i$ \u4ece\u5927\u5230\u5c0f\u9009\u7684\u3002** \u540c\u7406\uff0c$(M_{x_1},M_{x_2},\\dots,M_{x_k})$\uff0c$(x_1,x_2,\\dots,x_k)$ \u4e3a\u9009\u62e9\u7684\u6811\u7684\u4e0b\u6807\u5e8f\u5217\uff0c\u4e5f\u540c\u6837\u662f\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u3002\n\n\u6240\u4ee5\u6309\u7167 $B_i$ \u8fdb\u884c\u6392\u5e8f\uff0c\u518d\u8fdb\u884cdp\uff0c\u5c31\u514d\u53bb\u8bb0\u5f55\u72b6\u6001\u4e86\u3002\n\n\u8bbe $f[i][j]$ \u4e3a\u5230\u7b2c $i$ \u68f5\u6811\u65f6\uff0c\u5df2\u9009\u62e9\u4e86 $j$ \u68f5\u6811\u7684\u91d1\u5e01\u7684\u6700\u5927\u503c\u3002\u90a3\u4e48\u8f6c\u79fb\u5c31\u662f\u4ece\u524d\u4e00\u68f5\u6811\u8f6c\u79fb\u5230\u5f53\u524d\u7684\u6811\u3002\n\n```\nnum = max(0, M[i] - B[i] * (j - 1));\nf[i][j] = max(f[i - 1][j], f[i - 1][j - 1] + num);\n```\n\n\u6ce8\u610f\u6700\u540e\u7b54\u6848\u5e76\u4e0d\u662f $f[n][k]$\u3002\u76f8\u4fe1\u5f88\u591a\u4eba\u90fd\u6709\u7591\u60d1\u3002\u6211\u6765\u8bb2\u4e00\u4e0b\u3002\n\n$f[n][k]$ \u8868\u793a\u5728\u7b2c $n$ \u68f5\u6811\u5df2\u9009\u4e86 $k$ \u68f5\u6811\u3002\u6709\u4eba\u4f1a\u8bf4\uff0c\u5c31\u7b97\u6700\u4f18\u7684\u5e8f\u5217\u53ea\u6709\u524d\u51e0\u4e2a\u4ea7\u751f\u4e86\u8d21\u732e\uff0c\u540e\u9762\u767d\u5ad6\u4e0d\u5c31\u884c\u4e86\u3002\u5f88\u53ef\u60dc\uff0c\u60f3\u5230\u4e86\u540e\u9762\uff0c\u6ca1\u60f3\u5230\u524d\u9762\u3002\n\n$$k=4$$\n$$M[]: 2,\\dots,2,2,100,100$$\n$$B[]: 2,\\dots,2,2,1,1$$\n\n\u82e5\u8f93\u51fa $f[n][k]$\uff0c\u5219\u4e3a $197$\u3002\n\u82e5\u8f93\u51fa $f[n][2]$\uff0c\u5219\u4e3a $199$\u3002\n\n\u53d1\u73b0\u4e86\u5417\uff1f\u82e5\u5728\u6700\u540e\uff0c\u524d\u9762\u7684\u6811\u6d6a\u8d39\u4e86\u6b21\u6570\u5374\u6ca1\u6709\u4ea7\u751f\u8d21\u732e\u3002\n\n\u6545\uff0c$ans = \\text{MAX}\\{f[n][i]\\}$\u3002\n\n\u672c\u9898\u4e2d $f$ \u6570\u7ec4\u53ef\u4ee5\u6eda\u5230 $1$ \u7ef4\u4e0a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(t \\times n \\times k)$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\n#define MAXN 1010\n#define ll long long\n\nusing namespace std;\n\nint n, k, ans;\n\nstruct node {\n\tint m, b;\n}a[MAXN];\n\nbool cmp(node x, node y) {\n\treturn x.b > y.b;\n}\n\nint f[MAXN];\n\nint main() {\n\tscanf(\"%d%d\", &n, &k);\n\twhile (n || k) {\n\t\tk = min(k, n);\n\t\tmemset(f, 0, sizeof(f));\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tscanf(\"%d\", &a[i].m);\n\t\t}\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tscanf(\"%d\", &a[i].b);\n\t\t}\n\t\tsort(a + 1, a + n + 1, cmp);\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tfor (int j = k; j >= 1; j--) {\n\t\t\t\tint num = a[i].m - a[i].b * (j - 1);\n\t\t\t\tif (num < 0) num = 0;\n//\t\t\t\tf[i][j] = max(f[i - 1][j], f[i - 1][j - 1] + num);\n\t\t\t\tf[j] = max(f[j], f[j - 1] + num);\n\t\t\t}\n\t\t}\n\t\tans = 0;\n//\t\tfor (int i = 1; i <= k; i++) ans = max(ans, f[n][i]);\n\t\tfor (int i = 1; i <= k; i++) ans = max(ans, f[i]);\n\t\tcout << ans << endl;\t\n\t\tscanf(\"%d%d\", &n, &k);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1585325435,
        "uid": 18673,
        "name": "ctq1999",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1987 \u6447\u94b1\u6811"
    },
    {
        "content": "## Part 1\uff1a\u9898\u76ee\u5206\u6790\n\u8fd9\u9053\u9898\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u80cc\u5305\uff0c\u4f46\u4e0d\u540c\u7684\u662f\u6bcf\u4e00\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u6bcf\u5929\u90fd\u4f1a\u51cf\u5c11\u3002\n\n\u5148\u6765\u770b\u770b\u666e\u901a\u7684 01 \u80cc\u5305\u3002\u7531\u4e8e\u7269\u54c1\u7684\u4ef7\u503c\u4e0d\u4f1a\u51cf\u5c11\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u7269\u54c1\uff0c\u5148\u53d6\u8fd8\u662f\u540e\u53d6\u6ca1\u6709\u533a\u522b\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4ece $1\\sim n$ \u679a\u4e3e\u7269\u54c1\uff0c\u7136\u540e\u6309\u7167\u5269\u4f59\u7684\u80cc\u5305\u5bb9\u91cf\u820d\u53bb\u5373\u53ef\u3002\n\n\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6bcf\u4e00\u68f5\u6447\u94b1\u6811\u90fd\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u7269\u54c1\uff0c\u5b83\u5728\u6bcf\u4e00\u5929\u7684\u91d1\u5e01\u6570\u91cf\u5c31\u662f\u5b83\u7684\u4ef7\u503c\uff08\u4f1a\u51cf\u5c11\uff09\u3002\u6240\u4ee5\u603b\u7684\u5929\u6570\uff08$k$\uff09\u5c31\u53ef\u4ee5\u770b\u6210\u80cc\u5305\u5bb9\u91cf\u3002\u5e76\u4e14\u7531\u4e8e\u6bcf\u4e00\u68f5\u6447\u94b1\u6811\u53ea\u80fd\u88ab\u780d\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a 01 \u80cc\u5305\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u90fd\u4f1a\u51cf\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5c06\u7269\u54c1\u6bcf\u5929\u51cf\u5c11\u7684\u4ef7\u503c**\u4ece\u5927\u5230\u5c0f**\u6392\u5e8f\uff0c\u518d\u8dd1 01 \u80cc\u5305\u5373\u53ef\u3002\n\n\u8fd9\u79cd\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u4e5f\u5f88\u597d\u8bc1\u660e\uff0c01 \u80cc\u5305\u5bf9\u7269\u54c1\u7684\u53d6\u820d\u5e76\u4e0d\u53d7\u7269\u54c1\u987a\u5e8f\u7684\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u8fd9\u4e2a\u9009\u62e9\u4e00\u4e2a\u7269\u54c1\u4f1a\u4f7f\u7ed3\u679c\u589e\u52a0\uff0c\u90a3\u4e48\u65e0\u8bba\u5b83\u5728 $1\\sim n$ \u7684\u54ea\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\n\n## Part 2\uff1a\u9898\u76ee\u6c42\u89e3\n\u7531\u4e8e\u6211\u4eec\u8981\u5c06\u8fd9 $n$ \u4e2a\u7269\u54c1\u6309\u7167\u6bcf\u5929\u51cf\u5c11\u7684\u4ef7\u503c\u6392\u5e8f\uff0c\u6240\u4ee5\u6700\u597d\u7684\u9009\u62e9\u4fbf\u662f\u7ed3\u6784\u4f53\u3002\n```cpp\nstruct node{int m,b;}t[maxn];\nbool cmp(node a,node b){return a.b>b.b;} //\u91cd\u5b9a\u4e49sort\u4e2d\u7684cmp\u51fd\u6570\n```\n\u63a5\u4e0b\u6765\u4fbf\u662f 01 \u80cc\u5305\u7684\u8fc7\u7a0b\u4e86\u3002\n\n\u4e0e\u4e00\u822c\u7684 01 \u80cc\u5305\u4e0d\u540c\u7684\u662f\uff0c\u9009\u62e9\u4e00\u4e2a\u7269\u54c1\u6240\u5f97\u5230\u7684\u4ef7\u503c\u5e76\u4e0d\u662f\u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u3002\u56e0\u4e3a\u5f53\u6211\u4eec\u5728\u7b2c $j$ \u5929\u9009\u62e9\u8fd9\u4e2a\u7269\u54c1\u65f6\uff0c\u8fd9\u4e2a\u7269\u54c1\u5df2\u7ecf\u51cf\u5c11\u4e86 $j-1$ \u5929\u7684\u4ef7\u503c\uff0c\u6240\u4ee5\u5f97\u5230\u7684\u4ef7\u503c\u5e94\u8be5\u662f\u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u51cf\u53bb\u5df2\u7ecf\u51cf\u5c11\u7684\u4ef7\u503c\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5e94\u8be5\u662f\uff1a\n\n$$f_{i,j}=\\max \\begin{Bmatrix} f_{i-1,j}\n \\\\\nf_{i-1,j-1}+m_i-b_i\\times(j-1)\n\\end{Bmatrix} $$\n\n```cpp\n//\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\nfor(int i=1;i<=n;i++) //\u679a\u4e3e\u7269\u54c1\n\tfor(int j=k;j>0;j--) //\u679a\u4e3e\u5269\u4f59\u80cc\u5305\u5bb9\u91cf\n\t\tf[j]=max(f[j],f[j-1]+t[i].m-t[i].b*(j-1)); //\u8f6c\u79fb\n```\n\u5728\u8fd9\u91cc $f_j$ \u521d\u59cb\u5316\u4e3a $0$\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u8003\u8651 $f_{i-1,j-1}+m_i-b_i\\times(j-1)$ \u5c0f\u4e8e $0$ \u7684\u60c5\u51b5\u3002\n\n\u8fd8\u6709\u4e00\u70b9\uff0c\u6211\u4eec\u4e0d\u4e00\u5b9a\u8981\u628a $k$ \u5929\u5168\u90e8\u7528\u5b8c\uff0c\u6240\u4ee5\u6700\u540e\u9700\u8981\u679a\u4e3e $f_0\\sim f_k$\uff0c\u6c42\u51fa\u6700\u5927\u503c\u3002\n\n```cpp\nint ans=0;\nfor(int i=0;i<=k;i++) ans=max(ans,f[i]); //\u66f4\u65b0\u6700\u5927\u503c\n```\n## Part 3\uff1aCode\n\u591a\u7ec4\u6570\u636e\uff0c\u8bb0\u5f97\u6e05\u96f6\u6570\u7ec4\uff01\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 10005\nusing namespace std;\nstruct node{int m,b;}t[maxn];\nint n,k;\nint f[maxn];\nbool cmp(node a,node b){return a.b>b.b;} //\u91cd\u5b9a\u4e49sort\u4e2d\u7684cmp\u51fd\u6570\nint main(){\n\twhile(~scanf(\"%d %d\",&n,&k) and n and k){\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&t[i].m);\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&t[i].b);\n\t\tsort(t+1,t+n+1,cmp); //\u6392\u5e8f\n\t\tmemset(f,0,sizeof(f));\n\t\tfor(int i=1;i<=n;i++) //\u679a\u4e3e\u7269\u54c1\n\t\t\tfor(int j=k;j>0;j--) //\u679a\u4e3e\u5269\u4f59\u80cc\u5305\u5bb9\u91cf\n\t\t\t\tf[j]=max(f[j],f[j-1]+t[i].m-t[i].b*(j-1)); //\u8f6c\u79fb\n\t\tint ans=0;\n\t\tfor(int i=0;i<=k;i++) ans=max(ans,f[i]); //\u66f4\u65b0\u6700\u5927\u503c\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1640506196,
        "uid": 444235,
        "name": "Erinyes",
        "ccfLevel": 0,
        "title": "P1987 \u6447\u94b1\u6811 \u9898\u89e3"
    },
    {
        "content": "\u5927\u610f\uff1a\u7b97\u51fa$Cpg$\u5728\u8fd9$K$\u5929\u4e2d\uff0c\u901a\u8fc7\u780d\u6bcf\u5929\u4f1a\u6389\u91d1\u5e01\u7684\u6447\u94b1\u6811\uff0c\u6700\u591a\u80fd\u591f\u83b7\u5f97\u7684\u91d1\u5e01\u6570\u91cf\u3002\n\n**\u8d2a\u5fc3+$DP$($01$\u80cc\u5305\u95ee\u9898)**\n\n\u7531\u4e8e\u6211\u4eec\u60f3\u8981\u5c3d\u53ef\u80fd\u7684\u53bb\u62ff\u91d1\u5e01\uff0c\u6211\u4eec\u4e0d\u80fd\u8003\u8651\u91d1\u5e01\u6570\u91cf\u6700\u591a\u8fd9\u4e00\u4e2a\u56e0\u7d20\uff08\u987e\u6b64\u5931\u5f7c\uff09\u3002\n\n\u6211\u4eec\u53ef\u4ee5**\u8003\u8651\u5148\u9009\u62e9\u6447\u94b1\u6811\u6bcf\u5929\u6389\u91d1\u5e01\u6570\u91cf\u66f4\u5927\u7684\uff0c\u518d\u9009\u62e9\u6bcf\u5929\u6389\u91d1\u5e01\u6570\u91cf\u66f4\u5c0f\u7684\u3002**\n\n**\u8bc1\u660e\uff1a**\n\n\u8bbe$money$\u6570\u7ec4\u4e3a\u8fd9\u68f5\u6811\u672c\u8eab\u6709\u7684\u91d1\u5e01\uff0c$cost$\u6570\u7ec4\u4e3a\u6bcf\u5929\u6389\u7684\u91d1\u5e01 \n\n\u5047\u8bbe\u5f53\u524d\u4e3a\u7b2ci\u5929\uff0c\u6b63\u5728\u9009$X$\u548c$Y$\u4e24\u9897\u6811\u3002\n\n\u5148\u780d$X$\u6811\uff0c\u5229\u76ca\u4e3a$money[x]-cost[x]*(i-1)+money[y]-cost[y]*i$---------\u2460\n\n\u5148\u780d$Y$\u6811\uff0c\u5229\u76ca\u4e3a$money[y]-cost[y]*(i-1)+money[x]-cost[x]*i$---------\u2461\n\n\u2460-\u2461\u5f97$cost[X]-cost[Y]$\n\n\u6b64\u65f6\u5982\u679c$cost[X]>cost[Y]$\uff0c\u5219\u5148\u780d$X$\u7684\u5229\u76ca\u66f4\u5927\u3002\n\n**\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b**\n\n\u8bbe$f[i][j]$ \u4e3a\u524d$i$\u68f5\u6811\u780d\u4e86$j$\u5929\u7684\u6700\u5927\u503c\n\n\u7ecf\u8003\u8651\uff0c\u53ea\u53ef\u80fd\u4ece$f[i-1][j-1]$\u548c$f[i-1][j]$\u8fd9\u79cd\u60c5\u51b5\u8f6c\u79fb\u8fc7\u6765\uff08\u780d\u4e00\u68f5\u6811\u548c\u4e0d\u780d\u6811\uff09\n\n\u6240\u4ee5\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u96be\u60f3\u5230\uff1a\n\n\n$f[i][j]=max\\begin{cases}f[i-1][j]&& \\\\f[i-1][j-1]+max(money[i]-cost[i]*(j-1),0)\\end{cases}$\n\n\u5f53\u7136\u4e86\u6211\u4eec\u53ef\u4ee5\u53bb\u6389$[i]$\u8fd9\u4e00\u7ef4\u5ea6\uff0c\u53c8\u53ef\u5f97\uff1a\n\n$f[j]=max\\begin{cases}f[j]&& \\\\f[j-1]+max(money[i]-cost[i]*(j-1),0)\\end{cases}$\n\n**\u7b54\u6848**\n\n\n\u6700\u540e\u7684\u7b54\u6848\u4e0d\u5728\u7b2c$f[k]$\u4e2d\uff0c\u8fd9\u662f\u56e0\u4e3a\u6709\u53ef\u80fd\u5b58\u5728\n\n\u4e00\u4e9b\u6811\uff0c\u6bcf\u5929\u6389\u843d\u7684\u94b1\u5c11\uff0c\u4e14\u672c\u8eab\u94b1\u591a\uff1b\u4e00\u4e9b\u6811\uff0c\u6bcf\u5929\u6389\u843d\u7684\u94b1\u591a\uff0c\u4f46\u672c\u8eab\u6811\u4e0a\u7684\u94b1\u5c11\uff1b\n\n\u5982\u679c\u540e\u8005\u7684\u94b1\u6389\u5149\u65f6\u8fd8\u6ca1\u6709\u88ab\u9009\u4e2d\uff0c\u90a3\u4e48\u5b83\u7684$cost[i]$\u53d8\u4e3a$0$\uff0c\u800c\u6b64\u65f6\u524d\u8005\u7684$cost[i]>0$\uff0c\n\n\u4e5f\u5c31\u662f\u8fdd\u80cc\u4e86\u6211\u4eec\u7684\u8d2a\u5fc3\u7b56\u7565,\u90a3\u4e48\u5728\u4ed6\u4eec\u540e\u9762\u7684\u6811\u5f80\u524d\u586b\u66f4\u4f18\u3002\n\n\u4e5f\u5c31\u51fa\u73b0\u4e86\u540e\u9762\u7684\u6811\u586b\u5728\u524d\u9762\uff0c\u800c$f[k]$\u4e0d\u662f\u6700\u4f18\u89e3\u7684\u60c5\u51b5\u3002\n\n**\u53c2\u8003\u7a0b\u5e8f**\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nint n,k,f[1005],ans;\nstruct tree\n{\n    int money,cost;\n} trees[1005];\nbool cmp(tree x,tree y)\n{\n    return x.cost>y.cost;\n}\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tcin>>n>>k;\n    while (n&&k)\n    {\n        memset(f,0,sizeof(f));\n        ans=0;\n        if (k>n) k=n;\n        for (int i=1;i<=n;i++) \n\t\t\tcin>>trees[i].money;\n        for (int i=1;i<=n;i++) \n\t\t\tcin>>trees[i].cost;\n        sort(trees+1,trees+1+n,cmp);\n        for (int i=1;i<=n;i++)\n            for (int j=k;j;j--)\n                f[j]=max(f[j-1]+max(0,trees[i].money-trees[i].cost*(j-1)),f[j]);\n        for (int i=1;i<=k;i++) ans=max(ans,f[i]);\n        printf(\"%d\\n\",ans);\n        cin>>n>>k;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1608530998,
        "uid": 51800,
        "name": "\u5929\u5357\u5730\u5317",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1987 \u3010\u6447\u94b1\u6811\u3011"
    },
    {
        "content": "\u8fd9\u9898\u548c**P1659 \u517b\u732a**\u6709\u4ec0\u4e48\u533a\u522b\u5417\uff08\u9ed1\u4eba\u95ee\u53f7\uff01\uff1f\uff09\n\n\u5148\u6309\u6bcf\u5929\u6389\u7684\u82f9\u679c\u6570\u91cf\u6392\u5e8f\n\n\u7136\u540e\u5c31\u662f01\u80cc\u5305\n\n**f[j]=max(f[j],f[j-1]+max(tree[i].m-tree[i].b\\*(j-1),0));**\n\n\u6700\u540e\u626b\u4e00\u904d\uff0c\u8f93\u51faK\u5929\u5185\u6700\u4f18\u503c\u5373\u53ef\n\n\n\n\n\n```cpp\n #include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int MaxN=1005;\nstruct node\n{\n    int m,b;\n}tree[MaxN];\nint f[MaxN];\nint N,K,ans;\nbool flag=true;\ninline int Get_Val()\n{\n    int s=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    while(ch>='0'&&ch<='9')\n        s=s*10+ch-'0',ch=getchar();\n    return s;\n}\ninline bool cmp(node i,node j)\n{\n    if(i.b!=j.b) return i.b>j.b;\n    return i.m>j.m;\n}\nint main()\n{\n    int i,j;\n    while(flag)\n    {\n        N=Get_Val(),K=Get_Val(),ans=0;\n        if(!N&&!K) return 0;\n        memset(f,0,sizeof(f));\n        for(i=1;i<=N;i++)\n            tree[i].m=Get_Val();\n        for(i=1;i<=N;i++)\n            tree[i].b=Get_Val();\n        sort(tree+1,tree+N+1,cmp);//\u591a\u7ec4\u6570\u636e\u6bcf\u6b21\u8981\u5148\u521d\u59cb\u5316\n        for(i=1;i<=N;i++)\n            for(j=max(K,i);j>0;j--)\n                f[j]=max(f[j],f[j-1]+max(tree[i].m-tree[i].b*(j-1),0));\n        for(i=1;i<=K;i++)\n            ans=max(ans,f[i]);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1504280942,
        "uid": 54473,
        "name": "Fortitude",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1987 \u3010\u6447\u94b1\u6811\u3011"
    },
    {
        "content": "# P1987 \u6447\u94b1\u6811\n\u8fd9\u662f\u4e00\u9053~~\u5c0f\u6c34~~\u9898~\uff0c\u60f3\u901a\u4e86\u5c31\u7b80\u5355\u4e86\u3002\n## \u9519\u8bef\u89e3\u6cd5\uff1a\n\u6a21\u62df\uff0c\u6bcf\u5929\u9009\u5269\u4e0b\u7684\u6700\u591a\u94b1\u7684\u6811\u3002\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u6837\u8d2a\u5fc3\u662f\u9519\u7684\u3002\u5bb9\u6613\u4e3e\u51fa\u53cd\u4f8b\uff1a\n\n```\n2 2\n100 50\n1 50\n```\n\u663e\u7136\uff0c\u7b54\u6848\u662f\u5148\u9009\u7b2c\u4e8c\u68f5\u6811\u3002\u4f46\u8d2a\u5fc3\u5c31\u4f1a\u6302\uff08~~\u84dd\u9898\u679c\u7136\u4e0d\u662f\u8fd9\u4e48\u597d\u6c34\u7684\u545c\u545c\u545c~~\uff09\u3002\n## DP\uff08\u80cc\u5305\uff09\u89e3\u6cd5\uff1a\n\uff08~~\u5077\u770b\u6807\u7b7e\u4e2d~~\uff09\u3002\n\n\u8ba9\u6211\u4eec\u6362\u79cd\u8bf4\u6cd5\uff1a\n$n$ \u4e2a\u7269\u54c1\uff0c\u9009 $k$ \u4e2a\u3002\u88ab\u9009\u7684\u7269\u54c1\u4ef7\u503c\u51cf\u5c11\u4e00\u5b9a\u4ef7\u503c\u3002\u9009\u5f97\u8d8a\u665a\u4ef7\u503c\u8d8a\u4f4e\u3002\n\n\u6b38\uff0c\u8fd9\u6837\u770b\u8d77\u6765\u5c31\u5f88\u50cf**\u80cc\u5305**\u4e86\u561b\u3002\u81f3\u4e8e\u540e\u9762\u7684\u95ee\u9898\uff0c\u4e3e\u4e2a\u6817\u5b50\u6765\u770b\u3002\n\n\u5047\u5982\u6211\u4eec\u9009\u4e86\u8fd9\u4e48\u51e0\u4e2a\u7269\u54c1\u3002\n\n```\n100 200 300\n10 20 30\n```\n\u90a3\u4e48\uff0c\u600e\u4e48\u8c03\u6574\u9009\u7684\u987a\u5e8f\u4f7f\u4ef7\u503c\u6700\u5927\u5316\u5462\uff1f\n\n\u660e\u663e\u5730\uff0c**\u5148\u9009\u6d88\u8017\u5927\u7684**\u3002\u90a3\u4e48\uff0c\u505a\u80cc\u5305\u65f6\uff0c\u5148\u5c06\u6d88\u8017\u5927\u7684\u653e\u5728\u524d\uff0c\u5c31\u4fdd\u8bc1\u9009\u7684\u6d88\u8017\u5927\u7684\u7269\u54c1\u4e00\u5b9a\u5728\u524d\u9762\u3002\n\n### \u4eba\u89c1\u4eba\u7231\u7684\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint dp[1001];\nstruct tree {\n\tint los, mon;// los \u4ee3\u8868\u635f\u8017\uff0c mon \u4ee3\u8868\u539f\u59cb\u4ef7\u503c\u3002\n}t[1001];\nbool cmp(tree a, tree b) {\n\treturn a.los > b.los;\n}\nint main() {\n\twhile (1) {\n\t\tmemset(dp, 0, sizeof(dp));//\u8bb0\u5f97\u6e05\u7a7a\u6570\u7ec4\u3002\n\t\tint n, m, ans = 0;\n\t\tscanf(\"%d%d\", &n, &m);\n\t\tif (!n && !m) break;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tscanf(\"%d\", &t[i].mon);\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tscanf(\"%d\", &t[i].los);\n\t\tsort(t + 1, t + 1 + n, cmp);//\u635f\u8017\u5927\u7684\u5728\u524d\u3002\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = min(i, m); j > 0; j--)//\u5012\u5e8f\u538b\u7ef4\uff0c\u57fa\u672c\u64cd\u4f5c\u3002\n\t\t\t\tdp[j] = max(dp[j], dp[j - 1] + max(t[i].mon - (j - 1) * t[i].los, 0));//\u6389\u6210\u8d1f\u6570\u5176\u5b9e\u5c31\u662f\u6389\u5b8c\u4e86\uff08\u5373 0\uff09\u3002\n\t\tfor (int i = 0; i <= min(n, m); i++) ans = max(ans, dp[i]);//\u627e\u6700\u4f18\u89e3\u3002\n\t\tprintf(\"%d\\n\", ans);\n\t}\n}\n```\n\u5982\u6709\u4e0d\u8db3\uff0c\u8bf7\u63d0\u51fa\u3002",
        "postTime": 1680264988,
        "uid": 763215,
        "name": "Boenzhang",
        "ccfLevel": 0,
        "title": "P1987"
    },
    {
        "content": "#### \u601d\u8def\u5206\u6790\n\n\n------------\n\u672c\u9898\u601d\u8def\u4e0e [\u70f9\u8c03\u65b9\u6848](https://www.luogu.com.cn/problem/P1417) \u7c7b\u4f3c\uff0c\u90fd\u5c5e\u4e8e\u7269\u54c1\u4ef7\u503c\u968f\u65f6\u95f4\u53d8\u5316\u9010\u6e10\u53d8\u5c0f\u7684\u4e00\u7c7b\u52a8\u6001\u89c4\u5212\u95ee\u9898\u3002\n\n\u8003\u8651\u5c06\u7269\u54c1\u6309\u7167\u67d0\u4e00\u6807\u51c6\u6392\u5e8f\u3002\n\n\u539f\u5e8f\u5217\u4e2d\u4e24\u7269\u54c1 $A_i,A_{i+1}$ \u7684\u4ef7\u503c\u4e3a $m_i- b_i \\times i + m_{i+1} - b_{i+1} \\times (i+1) $\n\n\u4ea4\u6362\u4e24\u7269\u54c1\u540e\u4ef7\u503c\u4e3a $m_i - b_i \\times (i+1)+m_{i+1}-b_{i+1}\\times i$\n\n\u5c06\u4e24\u5f0f\u4f5c\u5dee\u540e\u5f97\u5230 $b_i - b_j$\n\n\u82e5 $b_i > b_j$ \u5219\u4e0d\u4ea4\u6362\u4e24\u7269\u54c1\n\n\u53cd\u4e4b\u5219\u4ea4\u6362\u3002\n\n\u7efc\u4e0a\uff0c\u6309\u7167 $b_i$ \u7684\u4ef7\u503c\u6392\u5e8f\u540e DP \u5373\u53ef\u3002\n\n$f_{i,j}$ \u8868\u793a\u524d $j$ \u5929\u9009\u4e86\u5728\u524d $i$ \u68f5\u6811\u4e2d\u9009 $j$ \u68f5\u7684\u6700\u5927\u4ef7\u503c\n\n\u6bcf\u5929\u8981\u4e48\u9009\u62e9\u62ff\u8d70\u5f53\u524d\u8fd9\u68f5\u6811\u4e0a\u6240\u6709\u7684\u91d1\u5e01\u8981\u4e48\u9009\u62e9\u4e0d\u9009\u8fd9\u68f5\u6811\u3002\n\n$\\mathit{f}_{i,j}  =\\max \\left\\{\\begin{array}{l}\nf_{i-1,j} \\\\\nf_{i-1,j-1}+\\max (0, m_i-b_i \\times (j-1))\n\\end{array}\\right.$\n\n#### \u4ee3\u7801\u5b9e\u73b0\n\n\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<cmath>\n#include<climits>\n#include<queue>\n#include<vector>\n#define int long long\nusing namespace std;\nconst int INF = 0x3f3f3f3f;\nconst int mod = 998244353;\nconst int N = 3e3 + 10;\nconst int M = 1e5 + 10;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n\tfor(; isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n\treturn x*f;\n}\nint f[N][N];\nstruct Node{\n\tint v,p;\n}a[N];\nbool cmp(Node x,Node y){\n\treturn x.p > y.p;\n}\nint n,k,ans;\nvoid Sol(){\n\tmemset(f,0,sizeof(f));\n\tfor(int i=1;i<=n;i++) a[i].v = read();\n\tfor(int i=1;i<=n;i++) a[i].p = read();\n\tsort(a+1,a+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=k;j++){\n\t\t\tf[i][j] = max(f[i-1][j],f[i-1][j-1] + max(0ll,a[i].v - a[i].p * (j - 1)));\n\t\t}\n\t}\n\tans = 0;\n\tfor(int i=1;i<=n;i++){\n\t\tans = max(ans,f[n][i]);\n\t}\n\tcout<<ans<<\"\\n\";\n}\nsigned main(){\n\twhile(cin>>n>>k){\n\t\tif(n == 0 && k == 0) break;\n\t\tSol();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1667308051,
        "uid": 335615,
        "name": "0xFF",
        "ccfLevel": 0,
        "title": "P1987 \u6447\u94b1\u6811"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a $n$ \u68f5\u6447\u94b1\u6811\uff0c\u7b2c $i$ \u68f5\u6447\u94b1\u6811\u4e0a\u7684\u521d\u59cb\u91d1\u5e01\u4e3a $a_i$\uff0c\u6bcf\u5929\u4f1a\u6389\u4e0b $b_i$ \u4e2a\u91d1\u5e01\u3002\u5728 $k$ \u5929\u5185\uff0c\u6bcf\u5929\u90fd\u53ef\u4ee5\u780d\u4e00\u68f5\u6447\u94b1\u6811\uff0c\u7b2c $i$ \u5929\u780d\u7b2c $j$ \u68f5\u6447\u94b1\u6811\u53ef\u4ee5\u5f97\u5230 $a_j-(i-1)*b_j$ \u4e2a\u91d1\u5e01\uff0c\u6c42\u6700\u7ec8\u5f97\u5230\u7684\u91d1\u5e01\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n## \u601d\u8def\n\n\u9996\u5148\u53ef\u4ee5\u5c06\u9898\u76ee\u4e2d\u7684 $k$ \u5929\u770b\u6210\u662f\u4e00\u4e2a\u5bb9\u91cf\u4e3a $k$ \u7684\u80cc\u5305\uff0c\u7b2c $j$ \u68f5\u6447\u94b1\u6811\u770b\u6210\u662f\u4e00\u4e2a\u4f53\u79ef\u4e3a $1$\uff0c\u4ef7\u503c\u4e3a $\\max(a_j-(i-1)*b_j,0)$ \u7684\u7269\u54c1\u3002\u5176\u4e2d $i$ \u8868\u793a\u8be5\u7269\u54c1\u662f\u7b2c $i$ \u4e2a\u653e\u8fdb\u80cc\u5305\u7684\u7269\u54c1\u3002\u90a3\u4e48\u4e5f\u5c31\u53ef\u4ee5\u5c06\u9898\u76ee\u8f6c\u5316\u4e3a\u4e00\u4e2a \u7ecf\u5178\u7684 $01$ \u80cc\u5305\u95ee\u9898\u3002\n\n\u4f46\u662f\u7531\u4e8e\u6709 $(i-1)$ \u8fd9\u4e2a\u53d8\u91cf\u5728\u5f71\u54cd\u4ef7\u503c\uff0c\u6240\u4ee5\u679a\u4e3e\u7269\u54c1\u653e\u8fdb\u80cc\u5305\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u7b54\u6848\u4e5f\u4f1a\u4e0d\u540c\u3002\u6240\u4ee5\u9700\u8981\u5148\u6309\u7167 $b_i$ \u7684\u5927\u5c0f\u5bf9\u7269\u54c1\u8fdb\u884c**\u6392\u5e8f**\uff0c\u518d\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u3002\u8fd9\u662f\u56e0\u4e3a\u672c\u9898\u6ee1\u8db3\u4e00\u4e2a\u8d2a\u5fc3\u6027\u8d28\uff1a\u5728\u653e**\u540c\u6837\u591a**\u7684\u7269\u54c1\u7684\u6240\u6709\u65b9\u6848\u4e2d\uff0c\u5148\u653e $b_i$ **\u5927**\u7684\u7269\u54c1\u7684\u65b9\u6848\u6700\u4f18\u3002\n\n\n------------\n\n\n\u8bc1\u660e\uff1a\n\n\u8bbe\u5f53\u524d\u80cc\u5305\u4e2d\u5df2\u7ecf\u653e\u4e86 $p$ \u4e2a\u7269\u54c1\uff0c\u73b0\u5728\u8981\u653e $i$ \u548c $j$ \u4e24\u4e2a\u7269\u54c1\u3002\n\n\u5148\u653e\u7269\u54c1 $i$ \u7684\u4ef7\u503c\uff1a$f[p]+a_i-(p-1)*b_i+a_j-p*b_j$------ \u2460\u3002\n\n\u5148\u653e\u7269\u54c1 $j$ \u7684\u4ef7\u503c\uff1a$f[p]+a_j-(p-1)*b_j+a_i-p*b_i$------ \u2461\u3002\n\n\u2460 \u5f0f\u51cf\u53bb \u2461 \u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a$b_i-b_j$\u3002\n\n\u5f53 $b_i>b_j$ \u65f6\uff0c\u5148\u653e\u7269\u54c1 $i$ \u66f4\u4f18\uff1b\u5f53 $b_i<b_j$ \u65f6\uff0c\u5148\u653e\u7269\u54c1 $j$ \u66f4\u4f18\u3002\n\n\u6545\u540c\u6837\u653e $i$ \u4e2a\u7269\u54c1\u65f6\uff0c\u5148\u653e $b_i$ \u5927\u7684\u7269\u54c1\u66f4\u4f18\u3002\u6240\u4ee5\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f $\\max(f[i])$\n\n\n\n------------\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6700\u7ec8\u7684\u7b54\u6848**\u4e0d\u4e00\u5b9a**\u4e3a $f[k]$\uff0c\u5982\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e\uff1a\n```cpp\n3 3\n1000000 2 1\n1000 10000 111111\n```\n\u663e\u7136\u5728\u8fd9\u7ec4\u6570\u636e\u4e2d\uff0c\u5148\u4e00\u4e2a\u7269\u54c1\u65f6\u6700\u4f18\u3002\u4f46\u662f\u4e0a\u9762\u7684**\u8d2a\u5fc3\u6027\u8d28\u5c31\u51b3\u5b9a**\u4e86\u628a\u8981\u6240\u6709\u7269\u54c1\u90fd\u653e\u8fdb\u53bb\u65f6\uff0c\u4e0d\u53ef\u80fd\u5148\u653e\u7b2c\u4e00\u4e2a\u7269\u54c1\u3002\u800c\u5728\u6240\u6709\u65b9\u6848\u4e2d\uff0c\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u7269\u54c1\u6700\u5148\u653e\u8fdb\u53bb\u7684\u65b9\u6848\uff0c\u5c31\u53ea\u6709 $f[1]$ \uff0c\u6240\u4ee5\u5728\u8fd9\u7ec4\u6837\u4f8b\u4e2d\u7684\u7b54\u6848\u5c31\u662f $f[1]$\u3002\n\n\u7531\u8fd9\u7ec4\u6837\u4f8b\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u8981\u653e\u6240\u6709\u7269\u54c1\uff0c\u5c31\u6709\u53ef\u80fd\u4f1a\u653e\u4ef7\u503c\u5df2\u7ecf\u964d\u5230 $0$ \u7684\u7269\u54c1\uff0c\u800c\u767d\u767d\u6d6a\u8d39\u4e86\u540e\u9762\u4ef7\u503c\u66f4\u5927\u7684\u7269\u54c1\u3002\u6240\u4ee5\u4e0d\u4e00\u5b9a\u653e\u6240\u6709\u7684\u7269\u54c1\u6700\u4f18\u3002\n\n\u56e0\u6b64\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u4e3a $\\max_{1\\leq i \\leq k}f[i] $\u3002\n\n## code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=1010;\nint n,k,f[N];\nstruct node{\n\tint m,b;\n\tbool operator <(const node &t)const{\n\t    return b>t.b;\n\t}\n}tr[N];\nint max(int a,int b){return a>b?a:b;}\nint min(int a,int b){return a<b?a:b;}\nint main()\n{\n\twhile(scanf(\"%d%d\",&n,&k),n)\n\t{\n\t\tmemset(f,0,sizeof(f));\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&tr[i].m);\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&tr[i].b);\n\t\tsort(tr+1,tr+n+1);\n\t\tfor(int i=1;i<=n;i++)\n\t\t    for(int j=min(k,n);j>=1;j--)\n\t\t        f[j]=max(f[j],f[j-1]+max(tr[i].m-(j-1)*tr[i].b,0));\n\t\tfor(int i=1;i<=k;i++) ans=max(ans,f[i]);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1625102026,
        "uid": 288192,
        "name": "ListenSnow",
        "ccfLevel": 7,
        "title": "P1987 \u6447\u94b1\u6811"
    },
    {
        "content": "\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684\u80cc\u5305\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230\u8d2a\u5fc3\u601d\u60f3\uff1a\u5c06\u6bcf\u68f5\u6811\u6309\u6bcf\u5929\u6389\u7684\u94b1\u7684\u6570\u91cf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5148\u62ff\u6389\u7684\u5feb\u7684\uff0c\u4f7f\u80fd\u5f97\u5230\u7684\u5229\u76ca\u6700\u5927\u5316\uff0c\u4e25\u8c28\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\u8bbe$A$\u6570\u7ec4\u4e3a\u8fd9\u68f5\u6811\u672c\u8eab\u6709\u7684\u91d1\u5e01\uff0c$B$\u6570\u7ec4\u4e3a\u6bcf\u5929\u6389\u7684\u91d1\u5e01\n\u5047\u8bbe\u5f53\u524d\u4e3a\u7b2c$k$\u5929\uff0c\u6b63\u5728\u9009$x$\u548c$y$\u4e24\u9897\u6811\u3002\n\n\u5982\u679c\u5148\u780d$x$\u6811\uff0c\u5229\u76ca\u4e3a$A[x]-B[x]*(k-1)+A[y]-B[y]*k$ ---------\u2460\n\n\u5982\u679c\u5148\u780d$y$\u6811\uff0c\u5229\u76ca\u4e3a$A[y]-B[y]*(k-1)+A[x]-B[x]*k$ ---------\u2461\n\n\u2460-\u2461\u5f97$B[x]-B[y]$\n\n\u6b64\u65f6\u5982\u679c$B[x]>B[y]$\uff0c\u5219\u5148\u780d$x$\u7684\u5229\u76ca\u66f4\u5927\n\n\u53cd\u4e4b\uff0c\u5148\u780d$y$\u7684\u5229\u76ca\u66f4\u5927\n\n\u6240\u4ee5\u53ef\u5f97\uff0c\u8c01\u6bcf\u5929\u6389\u843d\u5f97\u591a\uff0c\u5148\u780d\u8c01\u5f97\u5230\u7684\u603b\u6536\u76ca\u5c31\u6700\u5927\u3002\n\n\u77e5\u9053\u4e86\u8fd9\u4e2a\u4e4b\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e00\u4e2a01\u80cc\u5305\u6a21\u677f\u9898\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u5c06\u8fd9\u68f5\u6811\u653e\u5230\u4ec0\u4e48\u65f6\u5019\u780d\u5373\u53ef\u5373\u53ef\uff0c\u7531\u4e8e\u53ea\u8ddf\u6bcf\u4e00\u5929\u90fd\u53ea\u524d\u4e00\u5929\u6709\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u4e3a\u4e00\u7ef4\uff0c\u6240\u4ee5\u6700\u540e\u5b9a\u4e49$dp[i]$\u4e3a\u5c06\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8fd9\u68f5\u6811\u653e\u5230\u7b2ci\u4e2a\u780d\uff0c\u7136\u540e\u6700\u540e\u679a\u4e3e$dp[1]-dp[k]$\u4e2d\u7684\u6700\u5927\u503c\uff0c\u6709\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u95ee\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u4e0d\u662f\u5f88\u7b80\u5355\u7684\u9053\u7406\u5417\uff1f\u4f60\u5f53\u7136\u9700\u8981\u679a\u4e3e\u6700\u540e\u4e00\u68f5\u6811\u653e\u5230\u4ec0\u4e48\u65f6\u5019\u780d\u662f\u6700\u597d\u7684\u6765\u627e\u5230\u6700\u5927\u503c\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint dp[1005];\nint maxn[1005];\nbool aim[1005];\nstruct node{\n\tint fir;\n\tint out;\n} ss[10005];\nbool cmp(node a,node b)\n{\n\treturn a.out > b.out;\n}\nint main()\n{\n\tint n, m;\n\twhile(scanf(\"%d%d\",&n,&m)&&(n||m))\n\t{\n\t\tmemset(dp, 0, sizeof dp);\n\t\tif(m>n)\n\t\t\tm = n;\n\t\tfor (int i = 1;i<=n;i++)\n\t\t\tscanf(\"%d\", &ss[i].fir);\n\t\tfor (int i = 1;i<=n;i++)\n\t\t\tscanf(\"%d\", &ss[i].out);\n\t\tsort(ss + 1, ss + n + 1, cmp);\n\t\tfor (int i = 1; i <= n;i++)\n\t\t{\n\t\t\tfor (int j = m; j > 0;j--)\n\t\t\t{\n\t\t\t\tdp[j] = max(dp[j - 1] + max(0,(ss[i].fir - ss[i].out * (j - 1))), dp[j]);\n\t\t\t}\n\t\t}\n\t\tint maxn = 0;\n\t\tfor (int j = 1; j <= m;j++)\n\t\t\tmaxn = max(dp[j], maxn);\n\t\tprintf(\"%d\\n\", maxn);\n\t}\n}\n```\n",
        "postTime": 1606653928,
        "uid": 278481,
        "name": "Link_Space",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1987 \u3010\u6447\u94b1\u6811\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\u8fd9\u9053\u9898\u53ea\u9700\u8981\u5728\u6392\u5e8f\u540e\u505a\u4e00\u4e2a $01$ \u80cc\u5305\u5c31\u53ef\u4ee5\u4e86 ~~\uff08\u7136\u800c\u8003\u573a\u4e0a\u4e00\u76f4\u6ca1\u60f3\u51fa\u6765\uff09~~\n\u65b9\u7a0b\u5f0f\u662f\uff1a\n\n$f[i][j]=max\\begin{cases}f[i-1][j]\\\\f[i-1][j-1]+max(x[i]-y[i]*(j-1),0))\\end{cases}$\n\n\n\u8fd9\u91cc\u6211\u7528\u4e86\u6eda\u52a8\u6570\u7ec4\uff0c\u90a3\u4e48\u65b9\u7a0b\u5f0f\u5c31\u662f\uff1a\n\n$f[j]=max(f[j],f[j-1]+max(x[i]-y[i]*(j-1),0))$\n## code\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node{\n    int x,y;\n}a[1039];\nint f[1039];\nint n,k,ans;\ninline bool cmp(node i,node j){\n    if(i.y!=j.y) return i.y>j.y;\n    return i.x>j.x;\n}\nint main(){\n    register int i,j;\n    while(1){\n    \tans=0;\n    \tscanf(\"%d%d\",&n,&k);\n      \tif(!n&&!k) return 0;\n    \tmemset(f,0,sizeof(f));\n    \tfor(i=1;i<=n;i++)\n        \tscanf(\"%d\",&a[i].x);\n    \tfor(i=1;i<=n;i++)\n        \tscanf(\"%d\",&a[i].y);\n    \tsort(a+1,a+n+1,cmp);\n    \tfor(i=1;i<=n;i++)\n        \tfor(j=max(k,i);j>0;j--)\n            \t\tf[j]=max(f[j],f[j-1]+max(a[i].x-a[i].y*(j-1),0));\n    \tfor(i=1;i<=k;i++)\n        \tans=max(ans,f[i]);\n    \tprintf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1602055916,
        "uid": 164696,
        "name": "qzcbw",
        "ccfLevel": 5,
        "title": "P1987 \u6447\u94b1\u6811 \u9898\u89e3"
    },
    {
        "content": "\u603b\u7684\u601d\u8def\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff1a\u8d2a\u5fc3\u52a001\u80cc\u5305\n\n\u4f46\u662f\u5f88\u591a\u4eba\u770b\u5b8c\u5176\u4ed6\u9898\u89e3\u53ef\u80fd\u4f1a\u6709\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48\u8dd1\u5b8c01\u80cc\u5305\u540e\u8981\u8dd1\u4e00\u904d1~k\u6765\u627e\u7b54\u6848\u5462\uff1f\n\n\u6211\u770b\u5b8c\u5c31\u6709\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u7ffb\u5b8c\u6240\u6709\u9898\u89e3\uff08\u5305\u62ec\u767e\u5ea6\u4e0a\u7684\uff09\u90fd\u6ca1\u6709\u4efb\u4f55\u5173\u4e8e\u6b64\u7684\u89e3\u91ca\uff0c\u7136\u540e\u6211\u60f3\u4e0b\u8f7d\u6570\u636e\u6765\u5eb7\u5eb7\uff0c\u7136\u800c\u5e76\u4e0d\u80fd\u4e0b\u2026\u2026\n\n\u6700\u540e\u5728\u4e0e\u540c\u5b66\u7684\u8ba8\u8bba\u4e2d\u5f97\u51fa\u4e86\u7b54\u6848\u3002\n\n\u539f\u56e0\u662f\uff1a\u5982\u679c\u5b58\u5728\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a\u6709\u4e00\u4e9b\u6811\uff0c\u6bcf\u5929\u6389\u843d\u7684\u94b1\u5c11\uff0c\u4e14\u672c\u8eab\u94b1\u591a\uff1b\u53e6\u4e00\u4e9b\u6811\uff0c\u6bcf\u5929\u6389\u843d\u7684\u94b1\u591a\uff0c\u4f46\u672c\u8eab\u6811\u4e0a\u7684\u94b1\u5c11\uff1b\u5982\u679c\u540e\u8005\u7684\u94b1\u6389\u5149\u65f6\u8fd8\u6ca1\u6709\u88ab\u9009\u4e2d\uff0c\u90a3\u4e48\u5b83\u7684B[i]\u53d8\u4e3a0\uff0c\u800c\u6b64\u65f6\u524d\u8005\u7684B[i]>0\uff0c\u4e5f\u5c31\u662f\u8fdd\u80cc\u4e86\u6211\u4eec\u7684\u8d2a\u5fc3\u7b56\u7565\uff0c\u90a3\u4e48\u5728\u4ed6\u4eec\u540e\u9762\u7684\u6811\u5f80\u524d\u586b\u66f4\u4f18,\u4e5f\u5c31\u51fa\u73b0\u4e86\u540e\u9762\u7684\u6811\u586b\u5728\u524d\u9762\uff0c\u800cdp[k]\u4e0d\u662f\u6700\u4f18\u89e3\u7684\u60c5\u51b5\n\n\u8bf7\u770b\u4e0b\u9762\u4e00\u7ec4\u6570\u636e\n\n```\n5 4\n1 1 1 100 100\n2 2 2 1 1\n5 4\n100 1 1 100 100\n2 2 2 1 1\n0 0\n```\n\u8fd9\u7ec4\u6570\u636e\u7b54\u6848\u53d6dp[k]\u65f6\u7ed3\u679c\u4e3a\n```\n196\n295\n```\n\u800c\u7b54\u6848\u53d6max{dp[1~k]}\u7684\u7ed3\u679c\u4e3a\n```\n199\n297\n```\n\u5927\u5bb6\u53ef\u4ee5\u81ea\u5df1\u624b\u7b97\u52a0\u6df1\u7406\u89e3\u3002\n\n\u800c\u4e14\u7ecf\u6211\u5b9e\u6d4b\uff0c\u9664\u4e86\u6570\u636e\u70b91\uff0c\u5176\u4ed6\u7684\u4e5d\u4e2a\u70b9\u90fd\u5b58\u5728k>n\u7684\u60c5\u51b5\u3002~~\u522b\u95ee\u6211\u662f\u600e\u4e48\u6d4b\u51fa\u6765\u7684~~\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u66f4\u9700\u8981\u8dd11~k\u627e\u7b54\u6848\uff0c\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u524d1~n\u4e2d\u6709\u6570\u636e\u3002\n\n\u6700\u540e\uff0c\u4e0a\u4e2a\u4ee3\u7801\u7ed9\u5927\u5bb6\u53c2\u8003\u4e00\u4e0b\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct Tree {\n\tint w,b;\n}a[1005];\ninline bool cmp(Tree a,Tree b) {return a.b>b.b;}\ninline int cg(int a) {return a<0?0:a;}\ninline int MAX(int a,int b) {return a>b?a:b;}\nint dp[1005];\nint main() {\n\tint n,k;\n\twhile(1) {\n\t\tscanf(\"%d%d\",&n,&k);\n\t\tif(n==0 && k==0) break;\n\t\tmemset(dp,0,sizeof(dp));\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i].w);\n\t\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i].b);\n\t\tsort(a+1,a+1+n,cmp);\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=k;j>0;j--)\n\t\t\t\tdp[j]=MAX(dp[j],dp[j-1]+cg(a[i].w-(j-1)*a[i].b));\n\t\tint ans=0;\n\t\tfor(int i=1;i<=k;i++) ans=MAX(ans,dp[i]);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1573049564,
        "uid": 174433,
        "name": "\u590f\u83e1\u5fb7\u4f51",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1987 \u3010\u6447\u94b1\u6811\u3011"
    }
]