[
    {
        "content": "\u697c\u4e0b\u7684\u9898\u89e3\u90fd\u662f\u5927\u795e\u53d1\u7684\uff0c\u6211\u771f\u7684\u4e00\u4e2a\u90fd\u770b\u4e0d\u61c2\u3002\u4eca\u5929\u7ecf\u8fc7\u4e00\u5929\u7684\u6574\u7406\uff0c\u7ec8\u4e8e\u7406\u89e3\u4e86\u8fd9\u9053\u9898\u7684\u505a\u6cd5\uff0c\u5e76\u4e14\u4e00\u904dAC\u3002\n\n\n\u4e0b\u9762\u7684\u795e\u7287\u4eec\u867d\u7136\u90fd\u5f88\u725b\uff0c\u4f46\u662f\u89e3\u91ca\u90fd\u8fc7\u4e8e\u7684\u7b80\u6d01\uff0c\u50cf\u6211\u8fd9\u79cd\u849f\u84bb\u662f\u4e0d\u53ef\u80fd\u770b\u61c2\u7684\u3002\u6240\u4ee5\uff0c\u6211\u60f3\u5728\u8fd9\u4e00\u9898\u7684\u9898\u89e3\u91cc\u4e3a\u4e00\u4e9b\u8ddf\u6211\u4e00\u6837\u770b\u4e0d\u61c2\u697c\u4e0b\u5927\u795e\u7287\u4eec\u7684\u4ee3\u7801\u7684\u540c\u5b66\u6765\u4e00\u6ce2\u798f\u5229\u3002\n\n\n\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e00\u9898\u7684\u66b4\u529b\u601d\u8def\u3002\u5176\u5b9e\u66b4\u529b\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u679a\u4e3e\u884c\u7684\u6240\u6709\u53ef\u80fd\u7ec4\u5408\uff0c\u518d\u679a\u4e3e\u5217\u7684\u6240\u6709\u53ef\u80fd\u7ec4\u5408\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u5982\u9898\u76ee\u6240\u8ff0\u822c\u7684\u5904\u7406\uff0c\u7136\u540e\u53d6\u6240\u6709\u60c5\u51b5\u7684\u6700\u5c0f\u503c\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(C(n,n/2)^2\\*n^2)\uff0c\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c\u53ef\u80fd\u7684\u6700\u5927\u8fd0\u7b97\u603b\u6570\u662fC(16,8)^2\uff0c\u672c\u4eba\u8ba1\u7b97\u4e86\u4e00\u4e0b\uff0c\u5927\u7ea6\u5df2\u7ecf\u6709\u4e09\u767e\u4ebf\u4e86\uff08\u6ce8\u610f\u540e\u9762\u90a3\u4e2an^2\uff0c\u5b83\u662f\u5904\u7406\uff08\u5373\uff09\u6bcf\u4e00\u4e2a\u60c5\u51b5\u65f6\u6240\u82b1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff09\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u8fc7\u6240\u6709\u7684\u6570\u636e\u70b9\uff08\u672c\u4eba\u8bd5\u9a8c\u4e86\u4e00\u4e0b\uff0c\u53ea\u670960\u5206\uff09\u3002\n\n\n\u5f88\u591a\u4eba\u56e0\u6b64\u6b62\u6b65\uff0c\u662f\u56e0\u4e3a\u90fd\u5728\u60f3\u7740\u6b63\u89e3\u4f1a\u4e0d\u4f1a\u662f\u6839\u672c\u4e0d\u7528\u679a\u4e3e\u60c5\u51b5\uff0c\u76f4\u63a5O(n^k)\uff08k\u4e0d\u77e5\u9053\u662f\u591a\u5c11\u2026\u2026\uff09DP\u5c31\u641e\u5b9a\u4e86\u3002\u90a3\u6211\u544a\u8bc9\u5404\u4f4d\uff0c\u6b63\u89e3\u5176\u5b9e\u8fd8\u662f\u8981\u679a\u4e3e\u7684\u2026\u2026\u6240\u4ee5\uff0c\u8fd9\u91cc\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u4e0d\u8981\u88ab\u4f20\u7edf\u7684DP\u5f62\u5f0f\u5751\u4e86\u3002\n\n\n\u505a\u6cd5\u7684\u7ed3\u6784\u5927\u81f4\u662f\u8fd9\u6837\u7684\uff1a\u9996\u5148\u679a\u4e3e\u5176\u884c\u7684\u6392\u5217\u60c5\u51b5\uff08\u7c7b\u4f3c\u5168\u6392\u5217\uff0c\u53ea\u662f\u5143\u7d20\u4e2a\u6570\u786e\u5b9a\uff09\u3002\u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u884c\u7684\u6392\u5217\u60c5\u51b5\uff0cDP\u51fa\u5b83\u5217\u7684\u6700\u4f18\u60c5\u51b5\uff08DP\u7b49\u4f1a\u513f\u518d\u8bb2\uff09\uff0c\u7136\u540e\u53d6\u6240\u6709\u884c\u7684\u6392\u5217\u60c5\u51b5\u7684\u6700\u4f18\u60c5\u51b5\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u6837\uff0c\u5c31\u53ea\u9700\u8981\u4e00\u7ef4\u7684\u679a\u4e3e\u4e86\uff0c\u6bd4\u66b4\u529b\u5feb\u4e86\u4e0d\u5c11\u3002\u6709\u7684\u4eba\u53ef\u80fd\u8fd8\u4f1a\u95ee\uff0c\u8fd9\u6837\u4f1a\u4e0d\u4f1a\u4e5f\u8d85\u65f6\uff1f\u6211\u4eec\u6765\u7b97\u4e00\u4e0b\u3002\u8fd9\u6837\u7684\u7ed3\u6784\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff1aO(C(n,n/2)\\*n^3)\uff0c\u5176\u4e2d(C(n,n/2)\u662f\u4e00\u7ef4\u679a\u4e3e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0cn^3\u662fDP\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c\u5b83\u6700\u591a\u7684\u8fd0\u7b97\u6b21\u6570\u662f\uff1aC(16,8)\\*16^3\uff0c\u5927\u7ea6\u662f\u4e94\u5343\u4e07\uff0c\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\u3002\u6240\u4ee5\u53ea\u8981\u628a\u7ec6\u8282\u6253\u51fa\u6765\uff0c\u6b64\u9898\u5c31\u8fc7\u4e86\u3002\n\n\n\u90a3\u4e48\uff0c\u5177\u4f53\u7684\u7b97\u6cd5\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\u9996\u5148\uff0c\u679a\u4e3e\u5c31\u4e0d\u7528\u8bb2\u4e86\uff08\u4ee3\u7801\u91cc\u4f1a\u8bb2\u5230\u4e00\u70b9\u4f18\u5316\u526a\u679d\uff09\uff0c\u7136\u540e\u5c31\u662fDP\u7684\u4e8b\u4e86\u3002\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55DP\u5462\uff1f\u5176\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e00\u79cd\u679a\u4e3e\u51fa\u6765\u7684\u884c\u7684\u60c5\u51b5\u90fd\u8fdb\u884c\u4e00\u6b21\u7c7b\u4f3c\u7684DP\u3002\u800c\u9488\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u62bd\u8c61\u5316\u6210\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u95ee\u9898\uff1a\u4e00\u4e2ar\\*m\u77e9\u9635\uff0c\u9009\u62e9c\u5217\uff0c\u95ee\u5176\u76f8\u90bb\u5143\u7d20\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u548c\u6700\u5c0f\u662f\u591a\u5c11\uff1f\u5728\u8fd9\u4e2ar\\*m\u7684\u77e9\u9635\u4e2d\uff0c\u90a3r\u884c\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u5df2\u7ecf\u679a\u4e3e\u51fa\u6765\u7684\u51e0\u884c\uff0c\u800cm\u548cc\u4e0e\u539f\u9898\u4e2d\u7684m\u548cc\u76f8\u540c\uff0c\u4ece\u800c\u5c06\u4e8c\u7ef4\u9009\u62e9\u7684\u95ee\u9898\u964d\u81f3\u4e86\u4e00\u7ef4\u3002\n\n\u800cDP\u4e5f\u53d8\u5f97\u5341\u5206\u660e\u663e\u4e86\uff1a\u8bbef[i][j]\u8868\u793a\u5728\u8fd9\u4e2ar\\*m\u7684\u77e9\u9635\u4e2d\uff0c\u5728\u5176\u524di\u5217\u4e2d\u9009\u62e9j\u5217\uff08\u4e14\u9009\u7684\u5217\u4e2d\u5305\u62ec\u7b2ci\u5217\uff09\uff0c\u7ec4\u6210\u7684\u5b50\u77e9\u9635\u4e2d\uff0c\u6700\u5c0f\u503c\uff08\u5373\u5176\u76f8\u90bb\u5143\u7d20\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u548c\u7684\u6700\u5c0f\u503c\uff08\u4e4b\u540e\u7684\u503c\u7b49\u8868\u8fbe\u4e5f\u662f\u6307\u7684\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5373\u9898\u76ee\u8981\u6c42\u6c42\u51fa\u7684\u503c\uff09\uff09\u662f\u591a\u5c11\u3002\u8fd9\u6837\uff0c\u4fbf\u53ef\u4ee5\u5f88\u663e\u7136\u7684\u63a8\u51fa\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n##f[i][j]=min(f[k][j-1]+lc[i]+hc[i][k])\n\n\u8fd9\u91cc\u7684lc[i]\u6307\u7684\u662f\u7b2ci\u5217\u4e2d\u6240\u6709\u5143\u7d20\u7684\u503c\uff0c\u800chc[i][j]\u6307\u7684\u662f\u4ec5\u5bf9\u4e8e\u7b2ci\u5217\u4e0e\u7b2cj\u5217\u4e4b\u95f4\uff0c\u6240\u6709\u540c\u884c\u5143\u7d20\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u548c\u3002\u61c2\u7ebf\u6027DP\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u80fd\u7406\u89e3\u8fd9\u4e2a\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u3002\u800c\u6c42lc\u4e0ehc\u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5728DP\u524d\u66b4\u529b\u9884\u5904\u7406\u5373\u53ef\u3002\u4e8e\u662f\uff0cDP\u4fbf\u5199\u5b8c\u4e86\u3002\n\n\n\u800c\u6b64\u9898\u5e76\u6ca1\u6709\u5230\u6b64\u7ed3\u675f\uff0c\u56e0\u4e3a\u8fb9\u754c\u6761\u4ef6\u4e5f\u662f\u9700\u8981\u683c\u5916\u6ce8\u610f\u7684\u3002\u9996\u5148\u662fk\uff0ck\u7684\u53d6\u503c\u8303\u56f4\u662f\u4ecej-1\u5230i-1\u3002i-1\u5f88\u597d\u7406\u89e3\uff0c\u800cj-1\u662f\u56e0\u4e3a\u82e5k\u5c0f\u4e8ej-1\uff0c\u5219k<j-1\uff0cf[k][j-1]\u8fd9\u4e2a\u72b6\u6001\u4e5f\u5c31\u81ea\u7136\u4e0d\u5b58\u5728\u4e86\uff08\u4ece\u5b9a\u4e49\u4e0a\u5f88\u597d\u7406\u89e3\uff09\u3002\u6240\u4ee5\u5f97\u51fa\u4e86k\u7684\u53d6\u503c\u8303\u56f4\u3002\n\n\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fb9\u754c\u60c5\u51b5\uff0c\u6709\u4e24\u4e2a\u8fb9\u754c\uff1a\n\n###\u7b2c\u4e00\u4e2a\u662fj==1\u7684\u60c5\u51b5\uff0c\u6b64\u65f6f[i][j]=lc[i]\n\n###\u7b2c\u4e8c\u4e2a\u662fj==i\u7684\u60c5\u51b5\uff0c\u5373\u524di\u5217\u90fd\u53d6\uff0c\u6240\u4ee5f[i][j]=f[i-1][j-1]+lc[i]+hc[i][j-1]\u3002\u5c06DP\u5199\u597d\uff0c\u6b64\u9898\u4fbf\u5904\u7406\u5b8c\u6210\u4e86\u3002\n\n\n\u5199\u4e86\u8fd9\u4e48\u591a\uff0c\u603b\u7ed3\u4e00\u4e0b\u5427\u3002DP\u9898\u5f88\u5bb9\u6613\u88ab\u770b\u51fa\u6765\uff0c\u4f46\u662f\u603b\u662f\u56e0\u4e3aDP\u7684\u53d8\u6362\u83ab\u6d4b\u96be\u4ee5\u5165\u624b\u3002\u6240\u4ee5\uff0c\u4e00\u5b9a\u8981\u597d\u597d\u5730\u7ec3DP\u3002\n\n\u6b64\u9898\u7684\u7b97\u6cd5\u5206\u6790\u5c31\u5199\u8fd9\u4e48\u591a\u4e86\uff0c\u5927\u5bb6\u5982\u679c\u4ecd\u6709\u4e00\u4e9b\u5c0f\u95ee\u9898\u53ef\u4ee5\u76f4\u63a5\u770b\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\nusing namespace std;\nint n,m,r,c;\nint num[20][20]={0};\nint ch[20]={0},gs=1;//dfs\u6570\u7ec4\nint lc[20]={0},hc[20][20]={0};\nint f[20][20];//DP\u6570\u7ec4\nvoid mems()//\u9884\u5904\u7406\n{\n    for(int i=1;i<=m;i++)//\u9884\u5904\u7406lc[i]\n    {\n        lc[i]=0;\n        for(int j=1;j<r;j++)\n        {\n            lc[i]+=abs(num[ch[j]][i]-num[ch[j+1]][i]);//\u8ba1\u548c\n        }\n    }\n    for(int i=2;i<=m;i++)//\u9884\u5904\u7406hc[i][j]\uff08\u524d\u63d0\u6761\u4ef6\uff1ai>j\uff09\n    {\n        for(int j=1;j<i;j++)\n        {\n            hc[i][j]=0;\n            for(int k=1;k<=r;k++)\n            {\n                hc[i][j]+=abs(num[ch[k]][i]-num[ch[k]][j]);//\u8ba1\u548c\n            }\n        }\n    }\n}\nint minn=2e9;//\u5168\u90e8\u72b6\u6001\u7684\u6700\u5c0f\u503c\uff0c\u5373\u8f93\u51fa\nint cmin;\nvoid dp()//DP\n{\n    for(int i=1;i<=m;i++)//\u679a\u4e3ei\n    {\n        cmin=min(i,c);//j\u7684\u8fb9\u754c\u503c\uff08\u4e00\u5b9a\u8981\u6ce8\u610f\u4e0d\u80fd\u5927\u4e8ec\uff09\n        for(int j=1;j<=cmin;j++)\n        {\n            if(j==1)//\u7b2c\u4e00\u79cd\u8fb9\u754c\n            {\n                f[i][j]=lc[i];\n            }\n            else\n            if(i==j)//\u7b2c\u4e8c\u79cd\u8fb9\u754c\n            {\n                f[i][j]=f[i-1][j-1]+lc[i]+hc[i][j-1];\n            }\n            else//\u6b63\u5e38\u60c5\u51b5\n            {\n                f[i][j]=2e8;//\u521d\u59cb\u5316\uff0c\u53d6inf\n                for(int k=j-1;k<i;k++)//\u6ce8\u610f\u8fb9\u754c\n                {\n                    f[i][j]=min(f[i][j],f[k][j-1]+lc[i]+hc[i][k]);//\u53d6\u6700\u5c0f\u503c\n                }\n            }\n            if(j==c)minn=min(minn,f[i][c]);//\u5b58\u5728\u6b64\u72b6\u6001\uff0c\u5219\u66f4\u65b0\u6700\u5c0f\u503c\n        }\n    }\n}\nvoid dfs(int node)//\u679a\u4e3e\n{\n    if(node>n)//\u5df2\u7ecf\u53d6\u5230\u4e86\u4e00\u79cd\u72b6\u6001\n    {\n        mems();\n        dp();\n        return;\n    }\n    if(r-gs+1==n-node+1)//\u8fd9\u91cc\u5c31\u662f\u89e3\u91ca\u4e2d\u6240\u8ff0\u7684\u4f18\u5316\u3002\u5982\u679cnode\u548cnode\u4ee5\u540e\u7684\u5143\u7d20\u5fc5\u987b\u5168\u90e8\u53d6\u5b8c\uff0c\u624d\u80fd\u6ee1\u8db3\u521a\u597d\u6709r\u4e2a\u7684\u6761\u4ef6\uff0c\u5219\u5fc5\u987b\u53d6node\uff0c\u5426\u5219\u4fbf\u4f1a\u53d6\u5230\u5c11\u4e8er\u4e2a\u5143\u7d20\u7684\u60c5\u51b5\u3002\u6837\u4fdd\u8bc1\u4e86node>n\u65f6\u6240\u6709\u60c5\u51b5\u90fd\u521a\u597d\u6709r\u4e2a\uff0c\u8fd9\u4fbf\u662f\u4e2a\u4f18\u5316\u526a\u679d\n    {\n        ch[gs++]=node;\n        dfs(node+1);\n        ch[gs--]=0;//\u8bb0\u5f97gs\u8981\u51cf\u56de\u6765\n        return;\n    }\n    dfs(node+1);//\u4e0d\u53d6node\n    if(gs<=r)//\u5982\u679c\u5df2\u7ecf\u53d6\u6ee1\u4e86r\u4e2a\u5143\u7d20\uff0c\u4fbf\u4e0d\u80fd\u518d\u53d6\u4e86\n    {\n        ch[gs++]=node;\n        dfs(node+1);\n        ch[gs--]=0;\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&r,&c);//\u8bfb\u5165\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n            scanf(\"%d\",&num[i][j]);\n        }\n    }\n    dfs(1);//\u4e3b\u8981\u8fc7\u7a0b\n    printf(\"%d\",minn);//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1506686475,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u66b4\u529b\u5f88\u597d\u6253\uff1a\n\n\u524d\u9762dfs\u679a\u4e3e\u884c\uff0c\u540e\u9762dfs\u679a\u4e3e\u5217\uff0c\u6700\u540e\u6c42\u5f97\u5b50\u77e9\u9635\uff0c$O(r\\times c)$\u6c42\u89e3\u8fd9\u4e2a\u5b50\u77e9\u9635\u7684\u5206\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\left(C_{n/2}^n\\right)^2\\times r\\times c)$(C\u4e3a\u7ec4\u5408)\uff0c$50\\%$\u7684\u6570\u636e\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\u3002\n\n----\n## \u7b97\u6cd5\u5206\u6790\n\n\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u5b50\u77e9\u9635\u7684\u4ee3\u4ef7\u5982\u4f55\u8ba1\u7b97\uff1a\n\n![](https://s2.ax1x.com/2019/09/01/npIFld.png)\n\n> \u76f8\u90bb\u7684\u5143\u7d20\uff1a\u77e9\u9635\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\u4e0e\u5176\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u5143\u7d20\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\u662f\u76f8\u90bb\u7684\u3002\n\n> \u77e9\u9635\u7684\u5206\u503c\uff1a\u77e9\u9635\u4e2d\u6bcf\u4e00\u5bf9\u76f8\u90bb\u5143\u7d20\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u3002\n\n\u76f8\u90bb\u5143\u7d20\u53ef\u4ee5\u5206\u4e3a2\u7c7b\uff1a\u6a2a\u5411\u6570\u5bf9\uff0c\u7eb5\u5411\u6570\u5bf9\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5df2\u7ecf\u786e\u5b9a\u4e00\u79cd\u884c\u7684\u7ec4\u5408\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217\u7684\u7eb5\u5411\u6570\u5bf9\u5206\u6570\u548c\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u4efb\u4f552\u5217\u7684\u6a2a\u5411\u6570\u5bf9\u5206\u6570\u548c\u4e5f\u662f\u786e\u5b9a\u7684\u3002\n\n\u6709\u70b9\u7ed5\uff0c\u6211\u4eec\u8fd8\u4ee5\u9898\u9762\u4e2d\u7684\u77e9\u9635\u4e3e\u4f8b\uff1a\n\n![](https://s1.ax1x.com/2018/10/25/isvwrj.png)\n\n\u8fd9\u91cc\u7eb5\u5411\u6570\u5bf9\u5206\u6570\u548c\u5206\u522b\u662f\uff1a\n\n![](https://s1.ax1x.com/2018/10/25/isvfsJ.png)\n\n\u6a2a\u5411\u6570\u5bf9\u5206\u6570\u548c\u5206\u522b\u662f\uff1a\n\n| \u52172\u2193\u52171\u2192 | 1 | 2 | 3 | 4 | 5 |\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n| 1 | \\ | \\ | \\ | \\ | \\ |\n| 2 | $|9-4|+|6-8|$ | \\ | \\ | \\ | \\ |\n| 3 | $|9-8|+|6-5|$ | $|4-8|+|8-5|$ | \\ | \\ | \\ |\n| 4 | $|9-7|+|6-6|$ | $|4-7|+|8-6|$ | $|8-7|+|5-6|$ | \\ | \\ |\n| 5 | $|9-4|+|6-9|$ | $|4-4|+|8-9|$ | $|8-5|+|5-9|$ |  $|7-4|+|6-9|$ | \\ |\n\n\u50cf\u8fd9\u6837\uff0c\u6211\u4eec\u628a\u884c\u786e\u5b9a\u540e\u4ea7\u751f\u7684\u8f85\u52a9\u8ba1\u7b97\u5206\u6570\u7684\u5185\u5bb9\u9884\u5904\u7406\uff0c\u518d\u5bf9\u5217\u679a\u4e3e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\left(C_{n/2}^n\\right)^2\\times r^2\\times c^2)$\n\n\u770b\u4e0a\u53bb\u597d\u50cf\u66f4\u5dee\u4e86\uff0c\u4e0d\u8fc7\u6700\u540e\u5bf9\u5217\u7684\u5904\u7406\u5df2\u7ecf\u66f4\u52a0\u7b80\u5355\uff0c\u884c\u9009\u62e9\u786e\u5b9a\uff0c\u6b64\u65f6\u66f4\u50cf\u4e00\u4e2a01\u9009\u62e9\u95ee\u9898\u3002\n#### \u80fd\u4e0d\u80fdDP?\n\u8bbe$dp[i][j]$\u4e3a\u5728\u5f53\u524d\u884c\u9009\u62e9\u4e0b\uff0c\u5f53\u524d\u5728$i$\u8fd9\u4e2a\u4f4d\u7f6e\u5e76\u4e14\u9009\u62e9$i$\u8fd9\u4e00\u5217\uff0c\u6b64\u65f6\u5df2\u7ecf\u9009\u62e9\u4e86$j$\u5217\u7684\u6700\u5c0f\u5206\u6570\u3002\n\n\u8bbe$up[i]$\u4e3a\u5f53\u524d\u884c\u9009\u62e9\u4e0b\u7b2c$i$\u5217\u7684\u7eb5\u5411\u6570\u5bf9\u5206\u6570\u548c\uff0c$lft[i][j]$\u4e3a\u5f53\u524d\u884c\u9009\u62e9\u4e0b\u9009\u62e9\u7b2c$i$\u548c\u7b2c$j$\u5217\uff0c\u4e14\u4e2d\u95f4\u6ca1\u6709\u518d\u9009\u62e9\u5176\u4ed6\u5217\u7684\u6a2a\u5411\u6570\u5bf9\u5206\u6570\u548c\uff08\u5373\u4e0a\u8ff0\u8868\u683c\u4e2d\u7684\u52171\uff0c\u52172\uff09\u3002\n\n\u4e0d\u96be\u8bbe\u8ba1\u51fa\u5982\u4e0b\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$dp[i][j]=\\min_{k\\in[1,i)}\\{dp[k][j-1]+up[i]+lft[k][i]\\}(i\\in[1,m],j\\in[2,c])$$\n\u8fb9\u754c:\n$$dp[i][1]=up[i]$$\n\u5f53\u524d\u884c\u9009\u62e9\u610f\u4e49\u4e0b\u7684\u5206\u6570\u6700\u5c0f\u503c$$ans=\\min_{i\\in[c,m]}\\{dp[i][c]\\}$$\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(C_{n/2}^n\\times m^2\\times \\max(c,r))$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n----\n\n### \u4ee3\u7801\u5b9e\u73b0\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 25\n#define inf 0x3f3f3f3f\ntemplate <typename Tp>\ninline void read(Tp &x){\n\tx=0;int f=1;char c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c&15);c=getchar();}x*=f;\n}\nint n,m,r,c,a[maxn][maxn],ch[maxn],ans=inf,up[maxn],lft[maxn][maxn],dp[maxn][maxn];\nint calc(){//O(m^2c)\n\tmemset(dp,0x3f,sizeof(dp));\n\tint ret=inf;\n\tfor(int i=1;i<=m;i++){\n\t\tdp[i][1]=up[i];\n\t\tfor(int j=2;j<=c;j++)\n\t\t\tfor(int k=1;k<i;k++)\n\t\t\t\tdp[i][j]=min(dp[i][j],dp[k][j-1]+up[i]+lft[k][i]);\n\t\tret=min(ret,dp[i][c]);\n\t}\n\treturn ret;\n}\nvoid pre(){//O(mr+m^2r)\n\tmemset(up,0,sizeof(up));\n\tmemset(lft,0,sizeof(lft));\n\tfor(int i=1;i<r;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tup[j]+=abs(a[ch[i]][j]-a[ch[i+1]][j]);\n\tfor(int i=1;i<=m;i++)\n\t\tfor(int j=i+1;j<=m;j++)\n\t\t\tfor(int k=1;k<=r;k++)\n\t\t\t\tlft[i][j]+=abs(a[ch[k]][i]-a[ch[k]][j]);\n}\nvoid dfs(int step){//O(C(n,r))\n\tif(step==r+1){\n\t\tpre();\n\t\tans=min(ans,calc());\n\t\treturn;\n\t}\n\tfor(int i=ch[step-1]+1;i<=n;i++){\n\t\tch[step]=i;\n\t\tdfs(step+1);\n\t\tch[step]=0;\n\t}//\u6211\u4e60\u60ef\u7528\u8fd9\u79cd\u5199\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5199\u621001\u9009\u62e9\u7684\u6807\u51c6dfs\u6a21\u677f\n}\nint main(){\n\tread(n);read(m);read(r);read(c);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tread(a[i][j]);\n\tdfs(1);//\u4ece1\u5f00\u59cb\uff0c\u9632\u6b62\u8bbf\u95eech[-1]\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1540442864,
        "uid": 35871,
        "name": "ZigZagKmp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u8fb9\u641c\u7d22\u8fb9dp\uff0c\u679a\u4e3e\u51fa\u9009\u90a3\u4e9b\u884c\uff0c\u7136\u540e\u7b97\u51fa\u6bcf\u5217\u4e4b\u95f4\u7684\u5206\u6570w\uff0c\u4e24\u5217\u4e4b\u95f4\u7684\u5206\u6570v\u3002\n\n\u5c31\u53ef\u4ee5\u5f00\u59cbdp\u4e86\uff0cf[i][j]\u8868\u793a\u5df2\u7ecf\u9009\u4e86i\u5217\uff0c\u6700\u540e\u4e00\u5217\u662fj\u7684\u6700\u5c0f\u5206\u6570\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[i][j]=min(f[i-1][k[+w[j]+v[j][k])\u3002\n\n\u4ee3\u7801\uff1a\n\n            \n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n#define min(a,b) (a<b?a:b)\nint n,m,r,c;\nint a[18][18],f[18][18];\n//f[i][j]\u8868\u793a\u5df2\u7ecf\u9009\u4e86i\u5217\uff0c\u6700\u540e\u4e00\u5217\u662fj\u7684\u6700\u5c0f\u5206\u6570\nint w[18],v[18][18],rec[18];\n//\u6bcf\u5217\u4e4b\u95f4\u7684\u5206\u6570w\uff0c\u4e24\u5217\u4e4b\u95f4\u7684\u5206\u6570v\nint ans=1<<30;\nvoid dps()\n{\n    memset(f,127,sizeof(f));\n    memset(w,0,sizeof(w));\n    memset(v,0,sizeof(v)); \n    //f[i][j]=min(f[i-1][k]+w[j]+v[j][k],f[i][j])\n    int i,j,k;\n    for (i=1; i<=m; ++i)\n    {\n        for (j=1; j<r; ++j)\n        {\n            w[i]=w[i]+abs(a[rec[j]][i]-a[rec[j+1]][i]);\n        }\n        //cout<<w[i]<<\"w\"<<endl;\n    }\n    for (i=1; i<=m; ++i) \n    {\n        for (j=i+1; j<=m; ++j) \n        {\n            for (k=1; k<=r; ++k)\n            {\n                v[i][j]=v[i][j]+abs(a[rec[k]][i]-a[rec[k]][j]);\n            }\n            //cout<<v[i][j]<<\"v\";\n        }\n    }\n    f[0][0]=0; //(0,0)=0\n    for (i=1; i<=c; ++i) //\u9009\u4e86I\u5217\n    {\n        for (j=i; j<=m; ++j) //\u6700\u540e\u4e00\u5217\u4e3aJ\n        {\n            for (k=0; k<j; ++k) //\u679a\u4e3e\u4e0a\u4e00\u6b21\u9009\u7684\u5217\u6570\n            {\n                f[i][j]=min(f[i-1][k]+w[j]+v[k][j],f[i][j]);\n            } \n        } \n    } \n    for (i=c; i<=m; ++i)\n    {\n        ans=min(ans,f[c][i]);\n    }\n}\nvoid dfs(int x,int y)\n{\n    if(y>r)\n    {\n        dps();\n        return;\n    }\n    if (x>n) return;\n    dfs(x+1,y); //\u8fd9\u4e00\u5217\u4e0d\u9009 ,Next one\n    rec[y]=x; //\u8bb0\u5f55x\u7684\u503c\u5728rec\u3010y\u3011\u4e2d\u4f53\u73b0 \n    dfs(x+1,y+1); //\u9009\uff01 \n}\nint main()\n{\n    int i,j;\n    cin>>n>>m>>r>>c;\n    for (i=1; i<=n; ++i)\n    {\n        for (j=1; j<=m; ++j)\n        {\n            scanf(\"%d\",&a[i][j]);\n        }\n    }\n    dfs(1,1);\n    cout<<ans;    \n}\n```",
        "postTime": 1498879664,
        "uid": 22841,
        "name": "Right",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "# \u53d1\u4e00\u4e2a\u7528\u72b6\u538b\u5199\u7684dp\uff08\u9003\n# \u7287\u7287\u52ff\u55b7\n\n \u7528dp[i][j][k]\u8868\u793adp\u5230\u7b2ci\u884c\u4e14\u7b2ci\u884c\u88ab\u9009\u5165\uff0c\u5df2\u7ecf\u9009\u4e86j\u884c\uff0c\u9009\u5217\u72b6\u6001\u4e3ak\u7684\u6700\u5c0f\u5206\u503c\u3002k\u662f\u72b6\u538b\u7684\u3002\n \u8f6c\u79fb\u6bd4\u8f83\u663e\u7136\uff0cdp[i][j][k]=min(dp[ii][j - 1][k])\n \u6ce8\uff1aii\u662f\u4ece1\u5f00\u59cbfor\u5230i - 1\u3002\n \u52a0\u70b9\u526a\u679d\u4ec0\u4e48\u7684\u3002\u3002\u6bd4\u5982k\u4e0d\u5408\u6cd5\u76f4\u63a5continue\u3002\n \n \u590d\u6742\u5ea6\u5c31\u662f\u72b6\u6001\u4e58\u4e0a\u8f6c\u79fb\u5566\uff0cO(2^n\uff0an^3)\uff0c\u590d\u6742\u5ea6\u770b\u8d77\u6765\u4e0d\u592a\u5bf9\uff0c\u7136\u800c\u8dd1\u4e0d\u6ee1\uff1f\u518d\u4ed4\u7ec6\u5206\u6790\u4e00\u6ce2\uff0c\u524d\u9762\u5b9e\u9645\u4e0a\u4e0d\u662f2^n\uff0c\u800c\u662fC(c,m)\uff0c\u8fd9\u5927\u6982\u5c31\u6bd4\u8f83\u5bf9\u4e86\uff1f\n \n \u4e0a\u4ee3\u7801\u5566\n \n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define maxn 17\ninline int read()\n{\n\tint x = 0,f = 1;char ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-')f = -1;ch = getchar();}\n\twhile(ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n\treturn x * f;\n}\ninline int minn(int a,int b){return a < b ? a : b;}\nint arr[maxn][maxn],dp[maxn][maxn][1 << maxn];\n\nint main()\n{\n\tfreopen(\".in\",\"r\",stdin);\n\tfreopen(\".out\",\"w\",stdout);\n\tint n = read(),m = read(),r = read(),c = read();\n\tfor(int i = 1;i <= n;i++)\n\t{\n\t\tfor(int j = 1;j <= m;j++)\n\t\t{\n\t\t\tarr[i][j] = read();\n\t\t\tfor(int k = 0;k < (1 << m);++k)\n\t\t\t{\n\t\t\t\tdp[i][j][k] = INT_MAX;\n\t\t\t}\n\t\t}\n\t}\n\tint ans = INT_MAX;\n\tfor(int i = 1;i <= n;++i)\n\t{\n\t\tfor(int j = (1 << c) - 1;j < (1 << m);++j)\n\t\t{\n\t\t\tint ti = 0,tcnt = 0,tem1 = 0;\n\t\t\tfor(int ii = 0;(1 << ii) <= j;ii++)\n\t\t\t{\n\t\t\t\tif((1 << ii) & j)\n\t\t\t\t{\n\t\t\t\t\tif(ti)\n\t\t\t\t\t{\n\t\t\t\t\t\ttem1 += abs(arr[i][ii + 1] - arr[i][ti]);\n\t\t\t\t\t\tti = ii + 1;tcnt++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tti = ii + 1;tcnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(tcnt != c)continue;\n\t\t\tfor(int k = 1;k <= minn(r,i);++k)\n\t\t\t{\n\t\t\t\tfor(int kk = k - 1;kk < i;++kk)\n\t\t\t\t{\n\t\t\t\t\tint tem2 = 0;\n\t\t\t\t\tif(kk)\n\t\t\t\t\t\tfor(int iii = 0;(1 << iii) <= j;++iii)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif((1 << iii) & j)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttem2 += abs(arr[i][iii + 1] - arr[kk][iii + 1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tdp[i][k][j] = minn(dp[i][k][j],dp[kk][k - 1][j] + tem1 + tem2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tans = minn(ans,dp[i][r][j]);\n\t\t}\n\t}\n\tcout << ans;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568794055,
        "uid": 156448,
        "name": "CN_how",
        "ccfLevel": 0,
        "title": "\u849f\u84bb\u7684fw\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u91cc\u5c31\u8bf4\u8bf4\u6211\u601d\u8003\u8fd9\u9053\u9898\u7684\u65b9\u6cd5\u5427\uff0c\u5c31\u5f53\u662f\u4e2a\u603b\u7ed3\u4e86\n\n---\n\u9996\u5148\u8fd9\u9898\u5f88\u660e\u663e\u662f\u4e00\u9053DP\uff0c\u4f46\u662f\u4f3c\u4e4e\u4e8c\u7ef4\u4e0d\u592a\u597d\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8003\u8651\u4e00\u7ef4\u7684\u60c5\u51b5\uff0c\u5373\u4e3a\n\n**\u7ed9\u5b9a\u4e00\u4e2an\u4e2a\u6b63\u6574\u6570\u7684\u5e8f\u5217\uff0c\u4ece\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u9009\u51fa\u4e00\u4e2ar\u4e2a\u6570\u7684\u5b50\u5e8f\u5217\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\u5206\u503c\u6700\u5c0f(\u5206\u503c\u6307\u5176\u76f8\u90bb\u5143\u7d20\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u548c\u7684\u6700\u5c0f\u503c)\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u5206\u503c\u3002**\n\n\u8fd9\u4e2a\u95ee\u9898\u5bb9\u6613\u4e86\u8bb8\u591a\uff0c\u8bbe$f[i][j]$\u8868\u793a\u5728\u5176\u524di\u4e2a\u6570\u4e2d\u9009\u62e9j\u4e2a\uff08\u4e14\u9009\u7684\u6570\u4e2d\u5305\u62ec\u7b2ci\u4e2a\uff09\uff0c\u7ec4\u6210\u7684\u5b50\u5e8f\u5217\u4e2d\u5206\u503c\u6700\u5c0f\u503c\u662f\u591a\u5c11\u3002\u90a3\u4e48\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u5f88\u663e\u7136\u662f\uff1a\n\n#### $f[i][j]=min(f[k][j-1]+abs(a[i]-a[k]))(i>k>=j-1)$\n\n\u6ce8\u610f\u8fd9\u91cc$k>=j-1$\n\n\u6700\u7ec8\u7ed3\u679c\u5c31\u662f$min(f[i][r])(n>=i>=r)$\n\n\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(n^2k)$\n\n---\n\u4e00\u7ef4\u7684\u60c5\u51b5\u8003\u8651\u5b8c\u4e86\u90a3\u6211\u4eec\u518d\u56de\u6765\u770b\u770b\u539f\u9898\uff0c\u662f\u5426\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4e00\u4e2a\u76f8\u4f3c\u7684\u72b6\u6001\u5462\uff0c\u8981\u4e0d\u5148\u8bbe$f[a][b][c][d]$\u8868\u793a\u524da\u884cb\u5217,\u5df2\u7ecf\u9009\u4e86c\u884cd\u5217\u7ec4\u6210\u7684\u5b50\u5e8f\u5217\u5206\u503c\u6700\u5c0f\u662f\u591a\u5c11\uff0c\u4f46\u662f\u4f3c\u4e4e\u4e0d\u592a\u597d\u8f6c\u79fb\uff1f\u90a3\u6362\u4e00\u79cd\u601d\u8def\u770b\u770b...\n\n\u518d\u56de\u5934\u770b\u770b\u4e0a\u9762\u5199\u7684\u90a3\u4e2a\u4e00\u7ef4\u7684\u65b9\u7a0b\n#### $f[i][j]=min(f[k][j-1]+abs(a[i]-a[k]))(i>k>=j-1)$\n\u5b83\u548c\u4e8c\u7ef4\u7684\u60c5\u51b5\u6709\u4ec0\u4e48\u8054\u7cfb\u5462\uff0c\u7b49\u7b49\uff0c\u5982\u679c\u628a\u9009\u51fa\u6765\u7684\u5b50\u77e9\u9635\u7b2c$i$\u884c(\u7b2c$i$\u5217\u4e5f\u53ef\u4ee5)\u7684\u6240\u6709\u540c\u884c\u5143\u7d20\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u548c\u770b\u4f5c\u4e0a\u9762\u5b50\u5e8f\u5217\u7684\u4e2d\u7b2c$i$\u4e2a\u6570\uff0c\u90a3\u72b6\u6001\u548c\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e0d\u5c31\u548c\u4e0a\u9762\u7684\u65b9\u7a0b\u4e00\u6837\u4e86\u4e48\u3002\n\n\u4f46\u662f\u600e\u4e48\u77e5\u9053\u6bcf\u4e00\u884c\u9009\u4e86\u90a3\u4e9b\u6570\uff0c\u4e5f\u5c31\u662f\u9009\u4e86\u54ea\u51e0\u5217\uff0c\u90a3\u679a\u4e3e\u8bd5\u8bd5\u770b\u5427\uff0c\u4f3c\u4e4e\u4e5f\u627e\u4e0d\u5230\u66f4\u4f18\u79c0\u7684\u529e\u6cd5\u4e86\n\n\u6700\u540e\u628a \u6240\u6709\u540c\u884c\u5143\u7d20\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u548c \u548c \u4efb\u610f\u4e24\u884c\u4e4b\u95f4\u7684\u5206\u503c\u8fd8\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u548c\u5176\u4ed6\u5927\u4f6c\u7684\u5dee\u4e0d\u591a\u8fd9\u91cc\u5c31\u4e0d\u5217\u51fa\u4e86\n\n\u8fd9\u6837\u6700\u5dee\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f$O(C(16,8)* 16^3)$\uff0c\u5927\u6982\u662f\u4e94\u5343\u591a\u4e07\uff0c\u8fd9\u6837\u5c31\u901a\u8fc7\u4e86\u8fd9\u9053\u9898\n\n---\n\u4e2a\u4eba\u89c9\u5f97\u8fd9\u9053\u9898\u8fd8\u662f\u503c\u5f97\u84dd\u9898\u7684\u96be\u5ea6\u7684\u3002\n\n\u6700\u540e\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u5bf9\u5927\u5bb6\u6709\u6240\u5e2e\u52a9\uff0c\u8c22\u8c22\u3002",
        "postTime": 1564806578,
        "uid": 110904,
        "name": "X_yea",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u672c\u4eba\u592a\u5f31\uff0c~~\u4e0d\u4f1aDP~~\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4e2a**\u53ea\u7528DFS**\u7684\u9898\u89e3\n\n\u9996\u5148\uff0c\u6211\u4eec\u4f1a\u60f3\u5230\u66b4\u529b\u505a\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7ea6\u4e3aO(C(n,r)C(m,c)rc)\uff0c\u53ef\u4ee5\u5f97\u523060\u5206\uff0c\u4ee3\u7801\u5c31\u4e0d\u63d0\u4f9b\u4e86\n\n\u66b4\u529b\u505a\u6cd5\u4e4b\u6240\u4ee5\u6162\uff0c\u662f\u56e0\u4e3a\u8fdb\u884c\u4e86\u91cd\u590d\u7684\u8ba1\u7b97\uff0c\u800c\u4e14\u7f3a\u5c11\u526a\u679d\u3002\n\n\u77e9\u9635\u7684\u5206\u503c\u5305\u542b\u4e24\u90e8\u5206\uff0c**\u4e00\u662f\u540c\u4e00\u884c\u4e24\u4e2a\u6570\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u4e8c\u662f\u540c\u4e00\u5217\u4e24\u4e2a\u6570\u5dee\u7684\u7edd\u5bf9\u503c**\u3002\u5982\u679c\u6211\u4eec\u5148\u641c\u7d22\u884c\u518d\u641c\u7d22\u5217\uff0c\u7b2c\u4e8c\u79cd\u5206\u503c\u5c31\u53ef\u4ee5\u5728\u641c\u7d22\u884c\u65f6\u8ba1\u7b97\uff0c\u800c\u7b2c\u4e00\u79cd\u5206\u503c\u5728\u641c\u7d22\u5217\u65f6\u8fb9\u641c\u7d22\u8fb9\u8ba1\u7b97\u3002\n\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u52a0\u4e0a\u641c\u7d22\u5e38\u7528\u7684\u6700\u4f18\u6027\u526a\u679d\uff0c\u5c31\u662f\u5f53\u6b64\u65f6\u77e9\u9635\u7684\u5206\u503c\u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u6700\u4f18\u7b54\u6848\uff0c\u90a3\u4e48\u5c31\u9000\u51fa\u641c\u7d22\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid dfsl(ci&x,ci&y,ci&z){//const\u7c7b\u578b\u4f20\u53c2\uff0c\u5361\u5e38\u6570\u5fc5\u5907\uff0cx\u4e3a\u4e0a\u4e00\u5217\uff0cy\u4e3a\u5df2\u641c\u7d22\u7684\u5217\u6570\uff0cz\u4e3a\u5f53\u524d\u7b54\u6848\n\tif(y==c){\n\t\ts=z;//\u66f4\u65b0\u7b54\u6848\n\t\treturn;\n\t}\n\tregister int i=x+1,en=y+m-c+2,j,zz;//register\u7c7b\u578b\u5361\u5e38\u6570\uff0cen\u4e3a\u641c\u7d22\u7ec8\u6b62\u4f4d\u7f6e\n\tfor(;i<en;++i){\n\t\tzz=z+p[i];//p\u6570\u7ec4\u5b58\u50a8\u7b2c\u4e8c\u79cd\u5206\u503c\n\t\tif(zz>=s)continue;//\u526a\u679d\n\t\tif(x!=0){\n\t\t\tfor(j=0;j<r;++j){\n\t\t\t\tzz+=abs(v[e[j]][i]-v[e[j]][x]);//\u7d2f\u52a0\u7b2c\u4e00\u79cd\u5206\u503c\n\t\t\t}\n\t\t}\n\t\tif(zz<s)dfsl(i,y+1,zz);\n\t}\n}\nvoid dfsh(ci&x,ci&y){//\u641c\u7d22\u884c\n\tif(y==r){\n\t\tdfsl(0,0,0);//\u641c\u5b8c\u5219\u641c\u7d22\u5217\n\t\treturn;\n\t}\n\tregister int i=x+1,en=y+n-r+2,j,q[19];//q\u6570\u7ec4\u5fc5\u987b\u5728dfsh\u51fd\u6570\u5185\u5b9a\u4e49\uff0c\u7528\u4e8e\u56de\u6eaf\n\tfor(;i<en;++i){\n\t\tif(x!=0){\n\t\t\tfor(j=1;j<=m;++j){\n\t\t\t\tq[j]=abs(v[x][j]-v[i][j]),p[j]+=q[j];\n\t\t\t}\n\t\t}\n\t\te[y]=i,dfsh(i,y+1);//e\u6570\u7ec4\u4fdd\u5b58\u53d6\u51fa\u7684\u884c\n\t\tif(x!=0){\n\t\t\tfor(j=1;j<=m;++j)p[j]-=q[j];//\u56de\u6eaf\n\t\t}\n\t}\n}\n```\n80\u5206\uff0c\u8d85\u65f6\uff0c\u9700\u8981\u7ee7\u7eed\u4f18\u5316\n\n\u6211\u4eec\u4f1a\u53d1\u73b0abs\u8fdb\u884c\u8c03\u7528\u7684\u6b21\u6570\u5f88\u591a\uff0c\u56e0\u6b64\u53ef\u4ee5\u9884\u5904\u7406\u6240\u6709\u5206\u503c\uff0c\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nfor(i=1;i<n;++i){//\u9884\u5904\u7406\u7b2c\u4e8c\u79cd\u5206\u503c\n\t\tfor(j=i+1;j<=n;++j){\n\t\t\tfor(k=1;k<=m;++k){\n\t\t\t\tg[i][j][k]=abs(v[i][k]-v[j][k]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<m;++i){//\u9884\u5904\u7406\u7b2c\u4e00\u79cd\u5206\u503c\n\t\tfor(j=i+1;j<=m;++j){\n\t\t\tfor(k=1;k<=n;++k){\n\t\t\t\th[i][j][k]=abs(v[k][i]-v[k][j]);\n\t\t\t}\n\t\t}\n\t}\n```\n\u540c\u65f6\u76f8\u5e94\u4fee\u6539DFS\u51fd\u6570\uff1a\n```cpp\nvoid dfsl(ci&x,ci&y,ci&z){\n\tif(y==c){\n\t\ts=z;\n\t\treturn;\n\t}\n\tregister int i=x+1,en=y+m-c+2,j,zz;\n\tfor(;i<en;++i){\n\t\tzz=z+p[i];\n\t\tif(zz>=s)continue;\n\t\tif(x!=0){\n\t\t\tfor(j=0;j<r;++j){\n\t\t\t\tzz+=h[x][i][e[j]];//\u7d2f\u52a0\u7b2c\u4e00\u79cd\u5206\u503c\n\t\t\t}\n\t\t}\n\t\tif(zz<s)dfsl(i,y+1,zz);\n\t}\n}\nvoid dfsh(ci&x,ci&y){\n\tif(y==r){\n\t\tdfsl(0,0,0);\n\t\treturn;\n\t}\n\tregister int i=x+1,en=y+n-r+2,j;\n\tfor(;i<en;++i){\n\t\tif(x!=0){\n\t\t\tfor(j=1;j<=m;++j){\n\t\t\t\tp[j]+=g[x][i][j];//\u7b2c\u4e8c\u79cd\u5206\u503c\n\t\t\t}\n\t\t}\n\t\te[y]=i,dfsh(i,y+1);\n\t\tif(x!=0){\n\t\t\tfor(j=1;j<=m;++j)p[j]-=g[x][i][j];//\u56de\u6eaf\n\t\t}\n\t}\n}\n```\n\u4f9d\u7136\u662f80\u5206\uff0c\u4f46\u662f\u901f\u5ea6\u76f8\u6bd4\u4e4b\u524d\u7565\u5feb\uff0c\u9700\u8981\u7ee7\u7eed\u526a\u679d\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u7d2f\u52a0\u7b2c\u4e00\u79cd\u5206\u503c\u5728dfsh\u51fd\u6570\u4e2d\u8fdb\u884c\uff0c\u56e0\u4e3adfsh\u8c03\u7528\u6b21\u6570\u5c11\u4e8edfsl\uff0c\u56e0\u6b64\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid dfsl(ci&x,ci&y,ci&z){\n\tif(y==c){\n\t\ts=z;\n\t\treturn;\n\t}\n\tregister int i=x+1,en=y+m-c+2,j,zz;\n\tfor(;i<en;++i){\n\t\tzz=z+p[i]+w[x][i];//\u53ef\u4ee5\u4e00\u6b21\u6027\u6c42\u51fa\u4e24\u79cd\u5206\u503c\u4e4b\u548c\n\t\tif(zz<s)dfsl(i,y+1,zz);\n\t}\n}\nvoid dfsh(ci&x,ci&y){\n\tif(y==r){\n\t\tdfsl(0,0,0);\n\t\treturn;\n\t}\n\tregister int i=x+1,en=y+n-r+2,j,k;\n\tfor(;i<en;++i){\n\t\tif(x!=0){\n\t\t\tfor(j=1;j<=m;++j){\n\t\t\t\tp[j]+=g[x][i][j];\n\t\t\t}\n\t\t}\n\t\tfor(j=1;j<m;++j){\n\t\t\tfor(k=j+1;k<=m;++k){\n\t\t\t\tw[j][k]+=h[j][k][i];//\u7528w\u6570\u7ec4\u4fdd\u5b58\u7b2c\u4e00\u79cd\u5206\u503c\n\t\t\t}\n\t\t}\n\t\te[y]=i,dfsh(i,y+1);\n\t\tif(x!=0){\n\t\t\tfor(j=1;j<=m;++j)p[j]-=g[x][i][j];\n\t\t}\n\t\tfor(j=1;j<m;++j){\n\t\t\tfor(k=j+1;k<=m;++k){\n\t\t\t\tw[j][k]-=h[j][k][i];//\u6ce8\u610fw\u6570\u7ec4\u4e5f\u8981\u56de\u6eaf\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230[100\u5206](https://www.luogu.com.cn/record/24211528)\u4e86",
        "postTime": 1569127128,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "233\u4eca\u5929\u849f\u84bb\u6211\u8fde\u6587\u5316\u8bfe\u90fd\u6ca1\u542c\u5149\u60f3\u7740\u8fd9\u4e2a\u4e86\n\n\u7136\u540e\u6211\u8c03\u4e86\u4e00\u4e0b\u5348\u7ec8\u4e8e\u8fc7\u4e86\uff01\uff01\uff01\n\n\u5b89\u5229[\u535a\u5ba2](http://www.cnblogs.com/cellular-automaton/p/7491598.html)\n\n\u4e00\u770b\u6570\u636e\u8303\u56f4\u4f3c\u4e4e\u662f\u72b6\u538b\uff0c\u7136\u800c216\u7b49\u4e8e65536\u3002\u5f00\u4e00\u4e2a65536\\*65536\u7684\u4e8c\u7ef4\u6570\u7ec4\u4f3c\u4e4e\u4e0d\u592a\u73b0\u5b9e\u3002\n\n\u6240\u4ee5\u679a\u4e3e\u4ece1\u52302n-1\u7684\u6240\u6709\u96c6\u5408\uff0c\u628a\u4e8c\u8fdb\u5236\u6570\u4e2d1\u7684\u4e2a\u6570\u4e0d\u7b49\u4e8er\u7684\u90fd\u7b5b\u6389\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u5217\u5185\u90e8\u7684\u4ee3\u4ef7\uff0c\u9884\u5904\u7406\u51fa\u5217\u4e0e\u5217\u4e4b\u95f4\u7684\u4ee3\u4ef7\uff0c\u7136\u540e\u8fdb\u884cDP\u3002\n\n\u5176\u5b9e\u6211\u7684\u65b9\u6cd5\u4e0d\u80fd\u8bf4\u662f\u6700\u5feb\u7684\u3002\u4f46\u8d77\u7801\u80fdAC\u3002\u9884\u5904\u7406\u65b9\u9762\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cctype>\n#define Max ((1<<n)-1)\ninline long long read(){\n    long long num=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-')    f=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        num=num\\*10+ch-'0';\n        ch=getchar();\n    }\n    return num\\*f;\n}\ninline long long min(long long a,long long b){    return a<b?a:b;    }\nint que[1000][1000];\nint f[20][20];\nint d[20],w[20][20];\nbool s[100];\nint ans=0x7fffffff;\ninline int count(int x){\n    int ans=0;\n    while(x){\n        x&=(x-1);\n        ans++;\n    }\n    return ans;\n}\n\nint main(){\n    int n=read(),m=read(),r=read(),c=read();\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j)    que[i][j]=read();\n    for(int i=1;i<=Max;++i){\n        if(count(i)!=r)    continue;\n        memset(d,0,sizeof(d));\n        memset(f,127/3,sizeof(f));\n        memset(w,0,sizeof(w));\n        int x=i;\n        for(int j=1;j<=n;++j){\n            s[j]=x&1;\n            x>>=1;\n        }\n        for(int j=1;j<=m;++j)\n            for(int k=1;k<=n;++k)\n                if(s[k]){\n                    for(int u=1;u<j;++u)\n                        w[j][u]+=std::abs(que[k][j]-que[k][u]);\n                    int l=k-1;\n                    while(!s[l]&&l)    l--;\n                    if(!l)    continue;\n                    d[j]+=std::abs(que[k][j]-que[l][j]);\n                }\n        for(int j=1;j<=m;++j){\n            f[j][0]=0;\n            f[j][1]=d[j];\n        }\n        for(int j=1;j<=m;++j)\n            for(int k=1;k<=j&&k<=c;++k){\n                for(int l=1;l<j;++l){\n                    if(f[j][k-1]==f[0][0])    continue;\n                    f[j][k]=min(f[j][k],f[l][k-1]+w[j][l]+d[j]);\n                }\n            }\n        for(int j=c;j<=m;++j)    ans=min(ans,f[j][c]);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}",
        "postTime": 1504786226,
        "uid": 25815,
        "name": "\u5c01\u766b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "### \u7c7b\u4f3c\u72b6\u538b\u7684\u505a\u6cd5\uff08\u6bd2\u7624\u5361\u5e38\uff09\n\u8fd9\u9898\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u8f6c\u79fb\uff0c\u56e0\u4e3a\u9009\u62e9\u7684\u6bcf\u4e00\u884c\u4e2d\uff0c\u9009\u62e9\u7684\u5217\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u5148\u9884\u5904\u7406\u51fa\u53ef\u4ee5\u9009\u62e9\u7684\u5217\u6570\uff0c\u7136\u540e\u7528\u7c7b\u4f3c\u72b6\u538b\u7684\u529e\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002\u7528$f[i][j][l]$\u8868\u793a\u5927\u77e9\u9635\u5df2\u7ecf\u5230\u7b2ci\u884c,\u5c0f\u77e9\u9635\u9009\u62e9\u4e86j\u884c\uff0c\u5217\u7684\u72b6\u6001\u4e3al\u7684\u6700\u5c0f\u82b1\u8d39\u6570\u3002\n\u4f46\u662f\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u6240\u4ee5\u55ef\u3002\u3002\u3002\u5361\u5e38\u4e00\u65f6\u723d\u3002\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#define re register\nusing namespace std;\nint n,m,r,c,a[20][20],f[20][20][43000],cnt=0,d[43000],b[20],anss=0x3f3f3f3f;//\u5927\u77e9\u9635\u5230\u7b2ci\u884c\u72b6\u6001\u662fj \nint read()\n{\n\tint num=0;\n\tchar c;\n\tc=getchar();\n\twhile(c<'0'||c>'9')\n\t\tc=getchar();\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tnum=num*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn num;\n}\ninline void dfs(int x,int y,int num)//\u5230\u7b2cx\u4e2a\u6570\uff0c\u9009\u4e86y\u4e2a \n{\n\tif(x==m||y==c)\n\t{\n\t\tif(y==c)\n\t\t\td[++cnt]=num;\n\t\treturn ;\n\t}\n\tdfs(x+1,y,num);//\u4e0d\u9009\n\tdfs(x+1,y+1,num+(1<<x)); \n}\ninline int clc(int num,int x)\n{\n\tint st=0,ans=0;\n\tmemset(b,0,sizeof(b));\n\tfor(re int i=1;i<=m;i++)\n\t\tif((1<<(i-1))&(num))\n\t\t\tb[++st]=i;\n\tfor(re int i=2;i<=st;i++)\n\t\tif(i>1)\n\t\t\tans+=abs(a[x][b[i]]-a[x][b[i-1]]);\n\treturn ans;\n}\ninline int calc(int num,int x,int y)\n{\n\tint st=0,ans=0;\n\tfor(re int i=1;i<=m;i++)\n\t\tif((1<<(i-1))&(num))\n\t\t\tb[++st]=i;\n\tfor(re int i=1;i<=st;i++)\n\t{\n\t\tans+=abs(a[x][b[i]]-a[y][b[i]]);//\u5217 \n\t\tif(i>1)\n\t\t\tans+=abs(a[x][b[i]]-a[x][b[i-1]]);\n\t}\n\treturn ans;\n}\nint main()\n{\n\tn=read();\n\tm=read();\n\tr=read();\n\tc=read();\n\tfor(re int i=1;i<=n;i++)\n\t\tfor(re int j=1;j<=m;j++)\n\t\t\ta[i][j]=read();\n\tdfs(0,0,0);\n\tmemset(f,0x3f,sizeof(f));\n\tfor(re int i=1;i<=cnt;i++)//\u679a\u4e3e\u72b6\u6001\n\t\tfor(re int j=1;j<=n;j++)//\u679a\u4e3e\u884c\u6570 \n\t\t\tfor(re int l=1;l<=min(j,r);l++)//\u679a\u4e3e\u9009\u4e86\u51e0\u884c \n\t\t\t{\n\t\t\t\tif(l==1)\n\t\t\t\t{\n\t\t\t\t\tf[j][1][i]=clc(d[i],j);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor(re int k=1;k<j;k++)//\u4e0a\u4e00\u884c\n\t\t\t\t\tf[j][l][i]=min(f[j][l][i],f[k][l-1][i]+calc(d[i],j,k));\n\t\t\t}\n\tfor(re int i=1;i<=cnt;i++)\n\t\tfor(re int j=1;j<=n;j++)\n\t\t\tanss=min(anss,f[j][r][i]);\n\tprintf(\"%d\",anss);\n\treturn 0;\n} \n```\n",
        "postTime": 1566787623,
        "uid": 67886,
        "name": "\u5730\u8868\u6700\u5f3a\u7537\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0a\u7684\u9898\u89e3\u5413\u50bb\u4e86\uff0c\u7adf\u7136\u662f\u72b6\u538bdp\uff1f\uff01\n\n\u7136\u800c\u6211\u76f4\u63a5\u7528\u4e86\u4e00\u4e2a\u66b4\u529b\u7684dp\u505a\u6cd5\u5c31\u8fc7\u4e86\uff1f\uff01\n\n\n\u6211\u7684\u505a\u6cd5\uff1a\n\n\u9996\u5148\u6211\u4eec\u679a\u4e3e\u884c\u7684\u9009\u53d6\u60c5\u51b5\u3002\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u76f8\u90bb\u7684\u683c\u5b50\u5fc5\u5b9a\u662f\u5728\u540c\u4e00\u5217\u4e0d\u540c\u884c\uff0c\u6216\u8005\u662f\u5728\u4e0d\u540c\u5217\u540c\u4e00\u884c\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6765\u9884\u5904\u7406\u4e00\u4e0b\u3002\n\nw[i]\u8868\u793a\u5728\u5f53\u524d\u679a\u4e3e\u7684\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u9009\u53d6\u7b2ci\u5217\uff08\u540c\u4e00\u5217\u4e0d\u540c\u884c\u7684\u60c5\u51b5\uff09\u7684\u5206\u503c\u3002\n\nv[i][j]\u8868\u793a\u5728\u5f53\u524d\u679a\u4e3e\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u540c\u65f6\u9009\u53d6\u7b2ci\u5217\u548c\u7b2cj\u5217\uff08\u4e0d\u540c\u5217\u540c\u4e00\u884c\uff09\u7684\u5206\u503c\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cbdp\u5566\u3002\u3002\n\n\u8bbef[i][j]\u8868\u793a\u5728\u5f53\u524d\u679a\u4e3e\u884c\u7684\u60c5\u51b5\u4e0b\u603b\u5171\u9009\u53d6\u4e86i\u5217\u5e76\u4e14\u6700\u540e\u4e00\u5217\u662f\u7b2cj\u5217\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u5206\u503c\uff0c\u5f88\u663e\u7136i>=j\u3002\n\n\u5f53i=1\u65f6\uff0cf[i][j]=v[j]\n\n\u5f53i>1\u65f6\uff0cf[i][j]=min{f[i-1][k]+w[k][j]+v[j]}\n\n\u6700\u540e\u5728\u5f53\u524d\u679a\u4e3e\u884c\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u5206\u5ea6\u503c\u5c31\u662fmin{F[C][i]}\n\n\n\u6700\u540e\uff0c\u6211\u4eec\u5728\u6240\u6709\u679a\u4e3e\u884c\u7684\u60c5\u51b5\u4e0b\u53d6\u5176\u6700\u5c0f\u5206\u5ea6\u503c\u5373\u53ef\u3002\n\n\n```cpp\n\n\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst size_t Max_NM(20);\n\nsize_t N, M;\nsize_t R, C;\nint Value[Max_NM][Max_NM];\nint F[Max_NM][Max_NM];//F[i][j]\u8868\u793a\u4e00\u5171\u9009\u4e86i\u5217\uff0c\u5e76\u4e14\u6700\u540e\u9009\u7684\u4e00\u5217\u662fj\u7684\u60c5\u51b5\u4e0b\u6700\u5c0f\u7684\u5206\u503c \n\nint choose[Max_NM];\n\nint v[Max_NM];\nint w[Max_NM][Max_NM];\n\nint Ans(0X7F7F7F7F);\n\ninline\nint Abs(const int &x)\n{\n    return x >= 0 ? x : -x;\n}\n\nvoid init()\n{\n    scanf(\"%u%u%u%u\", &N, &M, &R, &C);\n    for (size_t i = 1;i <= N;++i)\n        for (size_t j = 1;j <= M;++j)\n            scanf(\"%d\", &Value[i][j]);\n}\n\nvoid dp()\n{\n    for (size_t i = 1;i <= C;++i)\n        for (size_t j = i;j <= M;++j)\n            if (i == 1)\n                F[i][j] = v[j];\n            else\n                for (size_t k = i - 1;k < j;++k)\n                    F[i][j] = min(F[i][j], F[i - 1][k] + w[k][j] + v[j]);\n}\n\nvoid DFS(const size_t &now, const unsigned int &cnt)\n{\n    if ((now > N && cnt < R) || N - now + 1 < R - cnt)\n        return;\n    if (cnt == R)\n    {\n        memset(F, 0X7F, sizeof(F));\n        memset(v, 0, sizeof(v));\n        memset(w, 0, sizeof(w));\n        for (size_t i = 1;i <= M;++i)\n            for (size_t j = 2;j <= R;++j)\n                v[i] += Abs(Value[choose[j]][i] - Value[choose[j - 1]][i]);\n        for (size_t i = 1;i <= M;++i)\n            for (size_t j = i + 1;j <= M;++j)\n                for (size_t k = 1;k <= R;++k)\n                    w[i][j] += Abs(Value[choose[k]][i] - Value[choose[k]][j]);\n        \n        dp();\n        \n        for (size_t i = C;i <= M;++i)\n            Ans = min(Ans, F[C][i]);\n        \n        return;\n    }\n    DFS(now + 1, cnt);\n    choose[cnt + 1] = now;\n    DFS(now + 1, cnt + 1);\n}\n\nint main()\n{\n    init();\n    \n    DFS(1, 0);\n    \n    printf(\"%d\", Ans);\n    \n    return 0;\n}\n\n```",
        "postTime": 1445695299,
        "uid": 3182,
        "name": "Created_equal1",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u5728n\u884cm\u5217\u4e2d\u9009\u62e9r\u884cc\u5217\uff0c\u4ea4\u53c9\u90e8\u5206\u6784\u6210\u4e00\u4e2a\u65b0\u77e9\u9635\u3002\n\n\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\u679a\u4e3e\u5217\u548c\u884c\uff0c\u5171\u6709$C_n^r*C_m^c$\u79cd\u60c5\u51b5\uff0c\u8ba1\u7b97\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u7136\u540e\u53ef\u4ee5dp\u8fdb\u884c\u4f18\u5316\uff0c\u5728\u679a\u4e3e\u5b8c\u884c\u548c\u5217\u7684\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u540e\uff0c\u5269\u4e0b\u7684\u53e6\u4e00\u4e2a\u53d8\u91cf\u5c31\u4e0d\u9700\u8981\u7ee7\u7eed\u66b4\u529b\u679a\u4e3e\uff0c\u800c\u53ef\u4ee5\u91c7\u7528dp\u4f18\u5316\u7684\u65b9\u5f0f\u8fdb\u884c\u7edf\u8ba1\u6700\u4f18\u89e3\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5148dfs\u6765\u679a\u4e3e\u6bcf\u4e00\u79cd\u5217\u7684\u9009\u62e9\u65b9\u5f0f\uff0c\u7136\u540e\u6211\u4eec\u8bbe\u4e00\u4e2a\u53d8\u91cf$f[i][j]$\u8868\u793a\u524d$i$\u884c\u9009\u4e86$j$\u5217\u7684\u6700\u4f18\u89e3\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b$f[i][j]=min(f[i][j],f[k][j-1]+tot)$\uff0c\u5176\u4e2d$k\u2208[1,i-1]$\uff0c$tot$\u8868\u793a\u9009\u4e86\u7b2c$i$\u884c\u4e14\u4e0a\u4e00\u884c\u662f\u7b2c$k$\u884c\u65f6\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u503c.\n\n\u7136\u540e\u662f$tot$\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u6211\u4eec\u5728dfs\u5217\u65f6\uff0c\u5bf9\u679a\u4e3e\u5230\u7684\u5217\u6253\u4e0a\u6807\u8bb0\uff0c\u4e4b\u540e\u5728\u8ba1\u7b97\u4e2d,\u5bf9\u6709\u6807\u8bb0\u7684\u5730\u65b9\u8fdb\u884c\u8ba1\u7b97\u5c31\u884c\u3002\n\n\u521d\u59cb\u5316\u65f6\u8981\u6ce8\u610f\u7684\u662f\uff0ci\u8981\u4ece2\u5f00\u59cb\u679a\u4e3e\uff0c\u5426\u5219k\u65e0\u6cd5\u8fdb\u5165\u5faa\u73af\uff0c\u56e0\u6b64\u521d\u59cb\u5316\u65f6\u6211\u4eec\u8981\u5bf9\u5168\u90e8$f[i][1]$\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u800c\u56e0$f[i][1]$\u5bf9\u7b54\u6848\u65e0\u5f71\u54cd\uff0c\u6211\u4eec\u76f4\u63a5\u521d\u59cb\u5316\u4e3a\u7b2c$i$\u884c\u7684\u6a2a\u5411\u76f8\u90bb\u6570\u7684\u603b\u503c\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\nint lr[100],f[100][100],a[100][100],d[100][100];\nint n,m,r,c,ans=1e9;\n\nvoid search(int x,int num)\n{\n\tif(num==c)\n\t{\n\t\tfor(int i=0;i<=17;i++)\n\t\t{\n\t\t\tfor(int j=0;j<=17;j++)\n\t\t\t{\n\t\t\t\td[i][j]=1e9;\n\t\t\t}\n\t\t}\n\t\tmemset(f,0x3f,sizeof(f));\n\t\tfor(int i=0;i<=n;i++) f[i][0]=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tf[i][1]=0;\n\t\t\tint last=0;\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tif(lr[j])\n\t\t\t\t{\n\t\t\t\t\tif(last)\n\t\t\t\t\t{\n\t\t\t\t\t\tf[i][1]+=abs(a[i][j]-last);\n\t\t\t\t\t}\n\t\t\t\t\tlast=a[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int j=2;j<=r;j++)\n\t\t{\n\t\t\tfor(int i=j;i<=n;i++)\n\t\t\t{\n\t\t\t\tfor(int k=1;k<i;k++)\n\t\t\t\t{\n\t\t\t\t\tint tot=0,last=0;\n\t\t\t\t\tfor(int l=1;l<=m;l++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(lr[l])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttot+=abs(a[i][l]-a[k][l]);\n\t\t\t\t\t\t\tif(last)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttot+=abs(a[i][l]-last);\n\t\t\t\t\t\t\t\tlast=a[i][l];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse last=a[i][l];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tf[i][j]=min(f[i][j],f[k][j-1]+tot);\n//\t\t\t\t\tcout<<i<<\" \"<<j<<\" \"<<f[i][j]<<\" \"<<tot<<endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tans=min(ans,f[i][r]);\n\t\t}\n//\t\tcout<<ans<<endl;\n\t\treturn ;\n\t}\n\tfor(int i=x+1;i<=m;i++)\n\t{\n\t\tlr[i]=1;\n\t\tsearch(i,num+1);\n\t\tlr[i]=0;\n\t}\n\treturn ;\n}\n\nint main()\n{\n//\tfreopen(\"submatrix.in\",\"r\",stdin);\n//\tfreopen(\"submatrix.out\",\"w\",stdout);\n\tscanf(\"%d%d%d%d\",&n,&m,&r,&c);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tsearch(0,0);\n\tcout<<ans;\n\treturn 0;\n }\n```\n",
        "postTime": 1566744554,
        "uid": 108459,
        "name": "lizh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u770b\u5230\u67d0\u5927\u4f6c\u521d\u4e00AK\u4e8614\u5e74\u7684\u666e\u53ca\n\n\u6211\u5b89\u6170\u81ea\u5df1\u8bf4\n\n\u80af\u5b9a\u662f\u56e0\u4e3a\u7b80\u5355\n\n\u770b\u5230\u8fd9\u9053\u9898\u540e\u2026\u2026\n\n\u63a5\u4e0b\u6765\u8bb2\u4e00\u4e0b\u8fd9\u9053\u9898(\u9002\u5408dp\u6709\u4e00\u5b9a\u57fa\u7840\u7684\u4eba\u89c2\u770b)\n\n\u6211\u4e0d\u77e5\u9053\u5927\u4f6c\u8bb2\u7684\u662f\u4ec0\u4e48\n\n\u4ec0\u4e48\u8868\u8fbe\u5f0f\uff1f\n\n\u6211\u90fd\u6ca1\u770b\u61c2\n\n\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u4e00\u70b9\u8003\u8651\n\n\u9996\u5148\u4f60\u5f97\u95fb\u51fa\u8fd9\u9898\u7684dp\u6c14\u606f\n\n\u5982\u679c\u5b9e\u5728\u95fb\u4e0d\u51fa\u6765\u5c31\u591a\u8bfb\u9898\n\n\u7136\u540e\u4f60\u80af\u5b9a\u4f1a\u5f88\u82e6\u607c\n\n\u6b7b\u547d\u60f3\n\n\u4f46\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\n\n\u5982\u679c\u6211\u4eec\u786e\u5b9a\u4e86\u884c\u6216\u5217\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u63a8\u51fa\u6700\u5927\u503c\n\n\u63a5\u4e0b\u6765\u4f60\u6beb\u65e0\u5934\u7eea\n\n\u4f46\u4f60\u5e94\u8be5\u9192\u609f\u4e86\n\n\u4e0d\u7528\u786e\u5b9a\n\n\u53ea\u9700\u8981\u679a\u4e3e\u5c31\u884c\u4e86\uff01\n\n\u6709\u7cbe\u9510\u5c31\u8981\u8bf4\u4e86\n\n\u4f60**\u5728\u5f00\u73a9\u7b11\n\n\u5982\u679c\u679a\u4e3e\u53ef\u4ee5\u4e0d\u5c31\u662f\u66b4\u529b\u5417\n\n\u8fd8\u9700\u8981dp\uff1f\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7528\u901a\u4fd7\u6613\u61c2\u7684\u65b9\u6cd5\u6765\u8bc1\u660e\n\n\u8fd9\u662f\u4e0d\u4f1a\u8d85\u65f6\u7684(\u751a\u81f3\u5c3d\u91cf\u4e0d\u6d89\u53ca\u5230\u521d\u4e2d\u6570\u5b66)\n\n\u9996\u5148\uff0c\u6211\u4eec\u4f30\u8ba1\uff0c\u8ba1\u7b97\u673a\u6bcf\u79d2\u53ef\u4ee5\u8ba1\u7b97100000000\u6b21(8\u4e2a0\uff0c\u4e5f\u5c31\u662f1\u4ebf\u6b21\uff0c\u8bb0\u4f5c$1\\times10^8$\uff0c\u6216\u80051e8)\n\n\u7136\u540e\u60f3\u4e00\u60f3\n\n\u8fd9\u4e2a\u679a\u4e3e\u884c\u6216\u5217\u7684\u6240\u4ee5\u6392\u5217\u53ef\u80fd(\u5168\u6392\u5217)\uff0c\u9700\u8981\u8ba1\u7b97\u591a\u5c11\u6b21\u5462\n\n\u9996\u5148\u60f3\u5230\u6570\u636e\u7684\u6700\u5927\u503c\uff0cn=16\u662f\u5427\uff0c\u90a3\u518d\u60f3\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u8fd9\u4e2ar\u53d6\u591a\u5c11\u53ef\u4ee5\u4f7f\u6392\u5217\u7684\u79cd\u6570\u6700\u5927\uff0c\u5148\u770br=1,16\u79cd\uff1b\u518d\u662fr=16,1\u79cd\uff0c\u4f60\u770b\uff0c\u5979\u4eec\u4fe9\u4e58\u8d77\u6765\u4e00\u6837\uff0c\u662f\u610f\u5916\u5417(\u662f\u7684)\uff0c\u90a3\u6211\u4eec\u4e0d\u96be\u60f3\u5230\uff0cr\u5f88\u5c0f\u6216\u5f88\u5927\uff0c\u7ed3\u679c\u79cd\u6570\u90fd\u4f1a\u5c11\uff0c\u90a3\u4e48\u6211\u4eec\u53d6\u4e2a\u4e2d\u95f4\u65708\n\n\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u8ba1\u7b97\u8fd9\u65f6\u6709\u51e0\u79cd\u6392\u5e8f\n\n\u600e\u4e48\u8ba1\u7b97\uff0c\u7b80\u5355\uff01\n\n\u5199\u4e2adfs\u66b4\u529b\uff0c\u7136\u540e\u679a\u4e3e\u4e00\u6b21\u5c31ans++\uff0cprintf ans\u5c31\u884c\n\n\u7b54\u6848\u662f12430\n\n\u7136\u540e\u5462\uff0c\u5982\u679c\u76f4\u63a5\u66b4\u529b\u5c31\u5f97154504900\u6b21\n\n\u4f46\u7528dp\u5462\uff0c\n\n\u4f60\u53ef\u4ee5\u7b97\u4e00\u4e0b\n\n\u5c31\u662f50913280\u6b21\n\n\u90a3\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u53ef\u884c\u4e86\n\n```cpp\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n#define int long long\n#define inf INT_MAX\n\nusing namespace std;\n\nint n,m,r,c,ans=inf;\nint key[17][17];\nint dp[17][17];\nint cha[17];\nint sth[17];//\u4f60\u600e\u4e48\u8d70\u7684\nint S[17][17];\n\nint jue(int x){\n\treturn x>=0?x:-x;\n}\n\nvoid dfs(int cur,int _wei){\n\tif(cur==r+1){\n//\t\t\u9884\u5904\u7406 \n\t\tfor(int i=1;i<=m;i++)\n\t\t\tcha[i]=0;\n\t\tfor(int i=1;i<r;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tcha[j]+=jue(key[sth[i]][j]-key[sth[i+1]][j]);\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tfor(int j=i+1;j<=m;j++)\n\t\t\t\tS[i][j]=0;\n\t\tfor(int k=1;k<=r;k++)\n\t\t\tfor(int i=1;i<=m;i++)\n\t\t\t\tfor(int j=i+1;j<=m;j++)\n\t\t\t\t\tS[i][j]+=jue(key[sth[k]][i]-key[sth[k]][j]); \n\t\tfor(int i=2;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tdp[i][j]=inf;\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tdp[0][j]=0;\n\t\t\tdp[1][j]=cha[j];\n\t\t}\n\t\t\t\n//\t\t\u771fdp \n\t\tfor(int i=1;i<c;i++){\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tfor(int k=j+1;k<=m;k++)\n\t\t\t\t\tdp[i+1][k]=min(dp[i][j]+cha[k]+S[j][k],dp[i+1][k]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tans=min(dp[c][i],ans);\n\t\treturn;\n\t}\n\t\n\tfor(int i=_wei+1;i<=n;i++){\n\t\tsth[cur]=i;\n\t\tdfs(cur+1,i);\n\t}\n}\n\nsigned main(){\n#ifdef txy\n\tfreopen(\"data.txt\",\"r\",stdin);\n#endif\n\tscanf(\"%lld%lld%lld%lld\",&n,&m,&r,&c);\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tscanf(\"%lld\",&key[i][j]); \n\t\n\tdfs(1,0);\n\t\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n\n\u6700\u540e\u795d\u5404\u4f4d\u5927\u4f6c\u4e5fAK NOIp\n\n\u5982\u679c\u6709\u95ee\u9898\u53ef\u4ee5\u79c1\u4fe1\u6211",
        "postTime": 1582185372,
        "uid": 110389,
        "name": "tianxuan",
        "ccfLevel": 6,
        "title": "\u5b50\u77e9\u9635\u9898\u89e3"
    },
    {
        "content": "\u5728\u77e9\u9635\u4e2d\u6c42\u89e3\u6700\u4f18\u60c5\u51b5\uff0c\u5176\u4e2d$n \\leq 16$\n\n\u5047\u8bbe\u73b0\u5728\u5df2\u7ecf\u5f97\u5230\u4fdd\u7559\u7684\u884c\u4e0e\u5217\u7684\u7f16\u53f7\uff0c\u9012\u63a8\u77e9\u9635\u5206\u503c\u7684\u590d\u6742\u5ea6\u662f$O(n^2)$\u904d\u5386\u4e00\u904d\u5c31ok\n\n50pts \u5047\u8bbe\u884c\u5217\u5168\u90e8\u679a\u4e3e\u5168\u6392\u5217\u7684\u8bdd\uff0c\u679a\u4e3e\u6b21\u6570\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u662f$(C_{12}^6)^2=924^2$,\u5728\u52a0\u4e0a\u6c42\u5206\u503c\u7684\u590d\u6742\u5ea6\u5219\u603b\u590d\u6742\u5ea6\u8fd8\u662f\u52c9\u5f3a\u53ef\u4ee5\u63a5\u53d7\u7684?\n\n\u76f4\u63a5\u770b100pts\u89e3\u6cd5,\u4ecd\u7136\u679a\u4e3e\u4e00\u6b21\u884c\u7684\u5168\u6392\u5217\uff0c\u590d\u6742\u5ea6\u662f$O(C_m^c)$\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5f97\u5230\u7684\u5176\u5b9e\u662f\u4e00\u884c\u6570\u5217\uff0c\u6570\u5217\u4e0a\u7684\u6bcf\u4e2a\u6570\u6709\u9009\u62e9\u548c\u4e0d\u9009\u62e9\u4e24\u79cd\u72b6\u6001\uff0c\u9009\u62e9\u6bcf\u4e2a\u6570\u4f1a\u589e\u52a0\u5206\u503c\uff0c\u5206\u522b\u662f\uff1a\n\n - \u81ea\u8eab\u7684\u5206\u6570(\u8be5\u5217\u4e0a\u4e0b\u6570\u5b57\u5dee\u503c\u7edd\u5bf9\u503c\u548c)\n \n - \u76f8\u5bf9\u5de6\u4fa7(\u53f3\u4fa7)\u7684\u5206\u6570,\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u9009\u62e9\u90fd\u4f1a\u5f71\u54cd\u8fd9\u79cd\u76f8\u5bf9\u5206\u6570\n \n \u90a3\u4e48\u63d0\u524d\u9884\u5904\u7406\u51fa\u6570\u5217\u4e0a\u6bcf\u4e2a\u6570\u4e24\u4e24\u4e4b\u95f4\u76f8\u5bf9\u7684\u5206\u6570\u548c\u81ea\u8eab\u7684\u5206\u6570\uff0c\u56e0\u4e3a\u8981\u679a\u4e3e$m$\u7684\u539f\u56e0\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f$O(n^3)$\n \n \u8fdb\u884cdp\uff0c\u8bbe$f[i][l]$\u4e3a\u5df2\u9009\u62e9\u5230\u6570\u5217\u4e0a\u7b2c$i$\u4e2a\u6570\uff0c\u5df2\u9009\u62e9$l$\u4e2a\u6570\u7684\u6700\u5927\u503c\uff0c\u5f88\u660e\u663e$f[i][l]=min(f[k][l-1]+sum[k][i])$ \u5176\u4e2d$k \\subseteq[1,i-1]$\uff0c\u4e0d\u9700\u8981\u592a\u591a\u4f18\u5316\uff0c\u53ea\u8981\u679a\u4e3e$i,k,l$\u5c31\u53ef\u4ee5\u5728$O(n^3)$\u4e4b\u5185\u89e3\u51b3\u95ee\u9898\uff0c\u8be5\u79cd\u65b9\u6cd5\u603b\u590d\u6742\u5ea6$O(C_m^c n^3)$\u53ef\u4ee5\u901a\u8fc7$n=16$\u7684\u6570\u636e\n\n\n```\n//2019/7/19->Riko->AtNCU->luoguP2258\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\n\nbool digit (int ch) { return (ch <= '9' and ch >= '0');}\ninline int in () {\n    int x = 0, ch = getchar(), base = 1;\n    while (!digit(ch)) {\n    \tif (base == '-') base = -1;\n        ch = getchar();\n    }\n    while (digit(ch)) x = x*10+ch-'0', ch = getchar();\n    return x*base;\n}\ntemplate <typename T> inline void smin (T& x, T y) { if (x > y) x = y;}\ninline int abs (int x) { return (x < 0) ? -x : x;}\n\nconst int N = 24;\nint n, m, r, c, ans, cnt;\nint f[N][N], a[N][N], sum[N][N], suml[N], bol[N];\n\nvoid work () {\n    memset(sum, 0, sizeof(sum));\n    memset(suml, 0, sizeof(suml));\n    memset(f, 0x3f, sizeof(f));\n    for (int i = 1; i <= n; ++i) {\n        for (int j = i+1; j <= n; ++j) {\n            int seg = 0;\n            for (int l = 1; l <= m; ++l) {\n                if (bol[l]) seg += abs(a[i][l]-a[j][l]);\n            }\n            sum[i][j] = sum[j][i] = seg;\n        }\n        int last = 0;\n        for (int l = 1; l <= m; ++l) {\n            if (bol[l]) {\n                if (last) suml[i] += abs(a[i][l]-last);\n                last = a[i][l];\n            }\n        }\n    }\n    for (int i = 1; i <= n; ++i) { f[i][1] = suml[i];}\n    for (int i = 1; i <= n; ++i) {\n        for (int l = 2; l <= r; ++l) {\n            int Min = f[0][0];\n            for (int j = 1; j < i; ++j) {\n                smin(Min, f[j][l-1]+sum[j][i]);\n            }\n            f[i][l] = Min+suml[i];\n        }\n    }\n    for (int i = 1; i <= n; ++i) { smin(ans, f[i][r]);}\n}\nvoid dfs (int idx, int num) {\n    if (num == c) {\n        work();\n        return;\n    }\n    for (int i = idx; i <= m; ++i) {\n        bol[i] = true;\n        dfs(i+1, num+1);\n        bol[i] = false;\n    }\n}\nvoid prepare () {\n    n = in(); m = in();\n    r = in(); c = in();\n    ans = 999999999;\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= m; ++j) {\n            a[i][j] = in();\n        }\n    }\n    dfs(1, 0);\n    printf(\"%d\", ans);\n} int main () { prepare();}\n```\n",
        "postTime": 1563584299,
        "uid": 114643,
        "name": "RikoHere",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 P2258 \u5b50\u77e9\u9635"
    },
    {
        "content": "\u5b89\u5229blog\uff1ahttps://www.luogu.org/blog/Picking-up/#\n\n\u8fd9\u9053\u84dd\u9898\u6211\u7adf\u7136\u4e00\u904d\u8fc7\u4e86zzzzzz\u3002~~\u77ac\u95f4\u9a84\u50b2~~\n\n\u6ca1\u4eba\u7528\u5927\u6cd5\u5e08\uff1f\n\n\u7136\u540e\u5f00\u59cb\u4e86\u526a\u679d\u4e4b\u65c5\u2026\u2026\n\n1\u3001\u5148dfs\u884c\uff0c\u884c\u5efa\u8bae\u4e0d\u8981\u7528\u5168\u6392\u5217\u7684\u65b9\u5f0f\u641c\uff0c\u641c\u7d22\u6bcf\u4e2a\u768401\u4f1a\u66f4\u5feb\u3002\n\n2\u3001\u82e5\u628a\u5269\u4e0b\u7684\u90fd\u9009\u4e0a\u8fd8\u4e0d\u6ee1\u8db3\u5c31\u9000\u51fa\u3002\n\n3\u3001\u641c\u7d22\u5217\u7684\u65f6\u5019\u4e5f\u4e00\u6837\u3002\n\n4\u3001\u91cd\u70b9\uff01\uff01\uff01\u641c\u7d22\u5217\u7684\u65f6\u5019\u53ef\u4ee5\u7528\u4e0a\u8bb0\u5fc6\u5316\uff01\uff01\uff01~~\u77ac\u95f4\u5feb\u4e86\u597d\u591a~~\n\n```c\nvar n,m,r,c,i,j,max:longint;a,f:array[0..100,0..100]of longint;b,b1:array[0..100]of longint;\nprocedure dfs1(k,l,ans:longint);\nvar i,j,t:longint;bl:boolean;\nbegin\n  if (m-k+1+l)<c then exit;//\u526a\u679d2\n  t:=0;bl:=true;\n  if l=c then\n  begin\n    max:=ans;\n    exit;\n  end;\n  if l<c then\n  begin\n    b1[l+1]:=k;\n    if f[b1[l],b1[l+1]]<>0 then t:=f[b1[l],b1[l+1]]//\u526a\u679d3\n    else\n    begin\n    for i:=1 to r do\n    begin\n      if i<r then t:=t+abs(a[b[i],b1[l+1]]-a[b[i+1],b1[l+1]]);\n      if l+1>1 then t:=t+abs(a[b[i],b1[l+1]]-a[b[i],b1[l]]);\n    end;\n    f[b1[l],b1[l+1]]:=t;\n    end;\n    if (ans+t<max) then dfs1(k+1,l+1,ans+t);\n  end;\n  if (m-k+1+l+1)>=c then dfs1(k+1,l,ans);\nend;\nprocedure dfs(k,l:longint);\nbegin\n  if (n-k+1+l)<r then exit;//\u526a\u679d2\n  if l=r then\n  begin\n    fillchar(f,sizeof(f),0);\n    dfs1(1,0,0);\n    exit;\n  end;\n  if l<r then\n  begin\n    b[l+1]:=k;\n    dfs(k+1,l+1);\n  end;\n  if (n-k+1+l+1)>=r then dfs(k+1,l);\nend;\nbegin\n  readln(n,m,r,c);max:=maxlongint;\n  for i:=1 to n do\n    for j:=1 to m do read(a[i,j]);\n  dfs(1,0);\n  writeln(max);\nend.\n\n```\n",
        "postTime": 1557541269,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011P2258 \u5b50\u77e9\u9635"
    },
    {
        "content": "\u7528\u4f4d\u8fd0\u7b97\u6807\u8bb0\u9009\u7684\u884c\u3001\u5217\uff0c\u4e00\u5217\u5217\u641c\uff0c\u9009\u5b9a\u5217\u540e\u518d\u641c\u884c\uff0c\u518d\u52a0\u4e86\u4e00\u4e9b\u5c0f\u4f18\u5316\uff0c\u8fd8\u53ef\u4ee5\u518d\u8fdb\u884c\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u5c06\u6bcf\u4e00\u884c\u7684\u6700\u5c0f\u503c\u7b97\u51fa\u6765\uff0c\u5982\u679c\u5df2\u7ecf\u5927\u4e8e\u7ed3\u679c\u53ef\u4ee5\u8df3\u8fc7\n\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\nconst int maxn=250,maxm=100010;\nint A[maxn][maxn],B[maxm],S[maxn][maxn];\nint n,m,r,c,ans=1<<30;\nvoid dfsr(int x,int px,int nr,int cid,int s)\n{\n    if(nr==r)\n    {\n        if(s<ans) ans=s;\n        return;\n    }\n    if(n-x+1<r-nr) return;\n    if(s>=ans) return;\n    dfsr(x+1,px,nr,cid,s);\n    int t=0,q=0;\n    int p=cid;\n    while(p)\n    {\n        int j=B[p & -p];\n        if(px) t+=abs(A[x][j]-A[px][j]);\n        if(q) t+=abs(A[x][j]-A[x][q]);\n        q=j;\n        p-=p & -p;\n    }\n    dfsr(x+1,x,nr+1,cid,s+t);\n}\nvoid dfsl(int y,int nc,int cid)\n{\n    if(nc==c)\n    {\n      dfsr(1,0,0,cid,0);\n      return;\n    }\n    if(m-y+1<c-nc)return;\n    dfsl(y+1,nc,cid);\n    dfsl(y+1,nc+1,cid+(1<<(y-1)));\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&r,&c);\n    for(int i=1;i<=16;i++)\n      B[1<<(i-1)]=i;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        scanf(\"%d\",&A[i][j]);\n    dfsl(1,0,0);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1507104971,
        "uid": 29261,
        "name": "Masterchief",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "**\u72b6\u6001\u538b\u7f29DP~\u5dee\u70b9MLE~**\n\n**\u5982\u679c\u4f60\u8981\u770b\u6807\u51c6\u89e3\u6cd5\uff0c\u8bf7\u79fb\u6b65\u5411\u4e0b\u7ffb\u5176\u4ed6\u4eba\u7684\u9898\u89e3**\n\n\n- \u5b9a\u4e49f[S][i][x]\u4e3a\u5b50\u77e9\u9635\u5df2\u7ecf\u51b3\u5b9a\u9009\u96c6\u5408S\u4e2d\u7684\u5217\uff0c\u884c\u51b3\u5b9a\u5230\u7b2ci\u884c\uff0c\u5df2\u7ecf\u51b3\u5b9a\u4e86x\u884c\u7684\u6700\u5c0f\u7684\u5b50\u77e9\u9635\u5206\u6570\u3002\uff08\u7b2ci\u884c\u662f\u9009\u4e2d\u7684\u6700\u540e\u4e00\u884c\uff09\n\n\u53ef\u4ee5\u5f97\u5230\uff1a\n\n```cpp\n    f[S][i][x] = min{f[S][j][x-1] | j<i} + s[i][S][j]\n    //\u540c\u65f6\u8981\u6c42f[S][i][x] f[S][j][x-1]\u90fd\u662f\u5408\u6cd5\u7684\uff0c\n    //\u5373\u4e0d\u80fd\u51fa\u73b0\u9009\u5230\u7b2c4\u884c\u5df2\u9009\u4e865\u884c\u8fd9\u6837\u7684\u95ee\u9898\u3002\n```\ns[i][S][j]\u8868\u793a\u5217\u9009\u4e86S\u91cc\u7684\uff0c\u7b2cj\u884c\u540e\u9762\u63a5\u4e0a\u7b2ci\u884c\u6784\u6210\u7684\u65b0\u5b50\u77e9\u9635\u589e\u52a0\u7684\u5206\u503c\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n// Luogu (www.luogu.org)\n// P2258\n#include <cstdio>\n#include <cstring>\nconst int maxN = 16;\nconst int maxM = 16;\nconst int BIIT = (1 << maxM) + 5;\nconst int inf = 0x3f3f3f3f;\nint n, m, r, c, a[maxN][maxM];\nunsigned short s[maxN][BIIT][maxN];\nint cnt[BIIT], loc[BIIT];\nint f[BIIT][maxN][maxN+2];\n//f[S][i][x]\n\ninline int max(int a, int b){\n    return a > b ? a : b;\n}\ninline int min(int a, int b){\n    return a < b ? a : b;\n}\ninline int abs(int a){\n    return a < 0 ? -a : a;\n}\n\ninline void init(){\n    //input\n    scanf(\"%d%d%d%d\", &n, &m, &r, &c);\n    for(int i=0; i<n; i++){\n        for(int j=0; j<m; j++){\n            scanf(\"%d\", &a[i][j]);\n        }\n    }\n    \n    //init 'cnt'\n    memset(cnt, 0, sizeof(cnt));\n    for(int i=0; i<1<<m; i++){\n        int p = i;\n        while(p){\n            cnt[i]++;\n            p &= (p-1);\n        }\n    }\n    \n    //init 'loc'\n    memset(loc, -1, sizeof(loc));\n    for(int i=0; i<=m; i++) loc[1 << i] = i;\n    \n    //init 's'\n    int tmp[maxM+3], len;\n    memset(s, 0, sizeof(s));\n    for(int i=0; i<n; i++){\n        for(int S=0; S<1<<m; S++)if(cnt[S]==c){\n            int P = S;\n            len = 0; memset(tmp, 0, sizeof(tmp));\n            while(P){\n                tmp[len++] = loc[P ^ (P & (P-1))];\n                P &= (P-1);\n            }\n            if(len != c) printf(\"WTF?!\\n\");\n            int base = 0;\n            for(int k=0; k<len-1; k++){\n                base += abs(a[i][tmp[k]] - a[i][tmp[k+1]]);\n            }\n            for(int j=0; j<=i; j++){\n                s[i][S][j] = base;\n                for(int k=0; k<len; k++)\n                    s[i][S][j] += abs(a[i][tmp[k]] - a[j][tmp[k]]);\n            }\n        }\n    }\n}\n\n\nint main(){\n    \n    init();\n    \n    memset(f, 0, sizeof(f));\n    for(int S=0; S<1<<m; S++) if(cnt[S] == c){\n        //i==0\n        f[S][0][0] = 0;\n        f[S][0][1] = s[0][S][0];\n        for(int i=1; i<n; i++){\n            f[S][i][1] = s[i][S][i];\n            for(int x=2; x<=i+1; x++){\n                f[S][i][x] = f[S][i-1][x-1] + s[i][S][i-1];\n                for(int pre=max(0, x-2); pre<i; pre++){\n                    f[S][i][x] = min(f[S][i][x], f[S][pre][x-1] + s[i][S][pre]);\n                    //pre >= x-1-1 = x-2\n                }\n            }\n            //x==i-1\n        }\n    }\n    \n    int ans = inf;\n    for(int S=0; S<1<<m; S++) if(cnt[S] == c){\n        for(int i=r-1; i<n; i++){\n            if(f[S][i][r] < ans){\n                ans = f[S][i][r];\n            }\n        }\n    }\n    \n    printf(\"%d\\n\", ans);\n    \n    \n    return 0;\n}\n```\n\u5176\u5b9e\u548cDFS+DP\u672c\u8d28\u5dee\u4e0d\u591a\u3002\u6700\u540e\u662f\u559c\u95fb\u4e50\u89c1\u7684\u5206\u6790\u590d\u6742\u5ea6\uff1a\n\n\n#\u5206\u6790\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6~\n\n\u76f4\u63a5\u770b\u67092^M \\* N\\*N\\*N\u4e2a\u72b6\u6001\n\n\u4f46\u662fS\u96c6\u5408\u53ea\u8ba1\u7b97\u96c6\u5408\u5143\u7d20\u4e2a\u6570\u4e3aC\u7684\u3002\n\n\n\u590d\u6742\u5ea6\u53d8\u6210C(M, C)\\*N\\*N\\*N\n\n\u6700\u574f\u60c5\u51b5\u662f16 16 16 8\uff0c\u5927\u7ea6\u6709\u4e94\u5343\u4e07\uff0c\u7531\u6700\u6162\u7684\u70b9\u8dd1\u4e86300ms\u53ef\u77e5\u6570\u636e\u6ca1\u6709\u90a3\u4e48BT~\n\n\n#\u5206\u6790\u4e0b\u7a7a\u95f4\u590d\u6742\u5ea6~\n\ns\u6570\u7ec4\u548cf\u6570\u7ec4\u6700\u5927\uff0c\u5360\u7528\n\n2^16 \\* 16 \\* 16 \\* 4(int\u7684\u5927\u5c0f\uff0cP\u53eblongint) \\* 2(\u4e24\u4e2a\u6570\u7ec4) = 134M\n\n\u9650\u5236128M\uff0c\u795e\u5361\uff01\n\n\u57fa\u4e8eS\u53ea\u8981\u8ba1\u7b97\u9700\u8981\u7684\uff0c\u4e8e\u662f\u53ef\u4ee5\u7ed9\u96c6\u5408\u6d41\u6c34\u7f16\u53f7\u3002\n\nBUT\u8fd9\u6837\u592a\u9ebb\u70e6\uff0c\u4e8e\u662f\u6211\u673a\u667a\u5730\u770b\u51fas\u6570\u7ec4\u7684\u5143\u7d20\u6bcf\u4e00\u4e2a\u6700\u5927\u662f(16\\*2\\*1000=32000)\uff0c\u628as\u6539\u6210unsigned short\u7c7b\u578b\u7684(P\u53ebword)\uff0c\u5c31\u53ef\u4ee5\u505a\u5230100M~\n\n\n\u6709\u60ca\u65e0\u9669\u3002\n",
        "postTime": 1503300107,
        "uid": 28890,
        "name": "HeHere",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u628a\u72b6\u6001\u5b9a\u4e49\u4e3a\u201c\u4ee5\u539f\u5e8f\u5217\u7684\u7b2c j\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u957f\u5ea6\u4e3a i \u7684\u5b50\u5e8f\u5217\u7684\u5206\u503c\u201d\u3002\u8fd9\u6837\uff0c\u4e0d\u96be\u5217\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[i,j]:=min{f[i-1,k]+|a[j]-a[k]|} (i\u2264k<j)\n\u8fd9\u91cc\uff0cf\u662f\u72b6\u6001\u6570\u7ec4\uff0ca \u50a8\u5b58\u539f\u59cb\u5e8f\u5217\u3002\u6ce8\u610f\uff0c\u6240\u6709\u7684\u52a0\u6570\u90fd\u5728 min \u7684\u5927\u62ec\u53f7\u4e2d\u3002\u8fd9\u662f\u4e00\u4e2a\u65f6\u95f4\n\n\u590d\u6742\u5ea6\u4e3a O(n3)\u7684\u4e8c\u7ef4 DP\u3002\u6709\u4e86\u8fd9\u4e2a\u65b9\u7a0b\uff0c\u6211\u4eec\u518d\u56de\u5230\u539f\u95ee\u9898\u3002\u601d\u8003\u4ee5\u540e\u53d1\u73b0\uff0c\u8981\u60f3\u76f4\u63a5\u628a\u8fd9\u4e2a\u65b9\n\n\u7a0b\u5347\u7ea7\u5230\u4e8c\u7ef4\u662f\u5341\u5206\u56f0\u96be\u7684\u3002\u6ce8\u610f\u5230\u201c1\u2264n,m\u226416\u201d\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u60f3\u5230\uff0c\u53ef\u4e0d\u53ef\u4ee5\u4e00\u534a\u641c\u7d22\u4e00\u534a DP\n\n\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4efb\u9009\u884c\u6216\u5217\u8fdb\u884c\u641c\u7d22\uff08\u4ee5\u641c\u7d22\u884c\u4e3a\u4f8b\uff09\uff0c\u6bcf\u6b21\u7a77\u641c\u5230\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6709 r\n\n\u4e2a\u5143\u7d20\u7684\u884c\u6807\u5e8f\u5217\u3002\u63a5\u4e0b\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5217 j\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06 a[ik,j]\uff08k\u8868\u793a\u6240\u6709\u5f53\u524d\u88ab\u641c\u4e2d\u7684\u884c\uff09\n\n\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002\u5bf9\u4e8e\u5728\u4e00\u7ef4\u5e8f\u5217\u4e2d\u7684\u4ee3\u4ef7\u201c|a[j]-a[k]|\u201d\uff0c\u5728\u4e8c\u7ef4\u77e9\u9635\u4e2d\u53ef\u4ee5\u628a\u5b83\u5206\u89e3\u4e3a\u4e0a\u4e0b\u4e24\n\u4e2a\u5143\u7d20\u7684\u201c\u7eb5\u5dee\u201d\u548c\u5de6\u53f3\u4e24\u4e2a\u5143\u7d20\u7684\u201c\u6a2a\u5dee\u201d\uff0c\u5728\u6bcf\u6b21 DP \u4e4b\u524d\u8fdb\u884c\u521d\u59cb\u5316\u3002\u8fd9\u6837\u5c31\u628a\u4e8c\u7ef4\u77e9\u9635\u538b\u7f29\n\n\u6210\u4e86\u4e00\u7ef4\u5e8f\u5217\uff0c\u53ef\u4ee5\u5e94\u7528\u521a\u624d\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e86\u2014\u2014\u5f53\u7136\u8fd8\u8981\u53d8\u6362\u4e00\u4e0b\uff1a\n\nf[i,j]:=min{f[i-1,k]+hc[k,j]}+zc[j] (i\u2264k<j)\n\n\u521d\u59cb\u6761\u4ef6\u4e3a\uff1a\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#define INF 1<<30\n#define rep(i,a,b) for (int i=a;i<=b;i++)\nusing namespace std;\nint t,zc[200],hc[200][200],a[2000][200],m,n,r,c,rb[200],f[200][200],ans=INF;\nint ab(int x){return (x>0)?x:0-x;}int min(int x,int y){return (x>y)?y:x;}\nvoid dp(){\n    memset(zc,0,sizeof(zc));memset(hc,0,sizeof(hc));rb[r+1]=rb[r];\n    rep(i,1,m) rep(j,1,r) \n         zc[i]+=ab(a[rb[j]][i]-a[rb[j+1]][i]);\n    rep(i,1,m-1) rep(j,i+1,m) rep(k,1,r)\n         hc[i][j]+=ab(a[rb[k]][i]-a[rb[k]][j]);\n    memset(f,0,sizeof(f));rep(i,1,m) f[1][i]=zc[i];\n    rep(i,2,c) \n        rep(j,i,m){t=INF;\n            rep(k,i-1,j-1) t=min(t,f[i-1][k]+hc[k][j]);\n            f[i][j]=t+zc[j];\n        }\n    rep(i,c,m) ans=min(ans,f[c][i]);\n}\nvoid dfs(int k,int p){\n    if (k==r) {dp();return;}\n    for (int i=p+1;i<=n;i++){rb[k+1]=i;dfs(k+1,i);}\n}\nint main(){\n    scanf(\"%d%d%d%d\",&n,&m,&r,&c);\n    rep(i,1,n) rep(j,1,m) scanf(\"%d\",&a[i][j]);\n    dfs(0,0);printf(\"%d\\n\",ans);\n}\n\nf[1,i]=zc[i](1\u2264i\u2264m)\n\n```",
        "postTime": 1456723135,
        "uid": 11783,
        "name": "Shawn01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u666e\u53ca\u6bd4\u63d0\u9ad8\u96be\u7cfb\u5217\u3002\u3002\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\u9996\u5148\u60f3\u5230\u72b6\u538b\n\n\u9996\u5148\u628a\u5217\u72b6\u538b\u4e86 \u679a\u4e3e\u67d0\u5217\u9009\u4e0d\u9009\u3002\u3002\n\n\u7136\u540e\u5c31\u76f8\u5f53\u4e8e\u964d\u7ef4\u4e86 \u53d8\u6210\u5e8f\u5217\u4e0a\u7684\u95ee\u9898\u4e86\u3002\n\nf[i][j][s]\u8868\u793a\u5217\u72b6\u6001\u4e3as\u65f6\uff0c\u5fc5\u987b\u9009\u7b2ci\u884c\uff0c\u9009\u4e86j\u884c\u7684\u7b54\u6848\n\nf[i][j][s]=min(f[k][j-1][s]+w[i][k],f[i][j][s]); w[i][j]\u662f\u4ee3\u4ef7 \u6309\u7167\u9898\u610f\u9884\u5904\u7406\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\u3002\n\n\u603b\u590d\u6742\u5ea6O(C(m,c)\\*n^2\\*r) \u53ef\u4ee5\u8fc7 \u5e94\u8be5\u6709\u66f4\u4f18\u7684\u505a\u6cd5\uff1f\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<bitset>\nusing namespace std;\nconst int N=30;\nint a[N][N];\nint n,m,r,c;\nint f[N][N];\nint w[N][N];\nbitset<20>now;//\u5077\u61d2\u7528\u4e86bitset\u505a\u72b6\u538b\u3002\u3002\u3002 \nint calc(int x)//\u8ba1\u7b97\u6a2a\u7740\u7684 \u7b2cx\u884c \n{\n    int last=0x3f3f3f3f,ret=0;\n    for(int i=0;i<m;i++)\n    if(now[i])\n    {\n        if(last!=0x3f3f3f3f)\n        ret+=abs(a[x][i+1]-last);\n        last=a[x][i+1];\n    }\n    return ret;\n}\nint work(int x,int y)//x\u662f\u8fd9\u4e00\u884c y\u662f\u4e0a\u4e00\u884c \n{\n    if(y==0)return 0;\n    int ret=0;\n    for(int i=0;i<m;i++)\n    if(now[i])\n    ret+=abs(a[x][i+1]-a[y][i+1]);\n    return ret;\n}\nvoid init()\n{\n    for(int i=1;i<=n;i++)\n    {\n        int t1=calc(i);\n        for(int j=i-1;j>=0;j--)\n        w[i][j]=t1+work(i,j);\n    }\n}\nvoid dp()\n{\n    int ans=0x3f3f3f3f;\n    for(int s=0;s<(1<<m);s++)\n    {    \n        now=s;\n        if(now.count()!=c)continue;\n        memset(f,0x3f,sizeof f);\n        f[0][0]=0;\n        init();\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=r;j++)\n            {\n                for(int k=0;k<i;k++)\n                f[i][j]=min(f[k][j-1]+w[i][k],f[i][j]);\n            }\n            ans=min(ans,f[i][r]);\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&r,&c);\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=m;j++)\n    scanf(\"%d\",&a[i][j]);\n    dp();\n}\n\n```",
        "postTime": 1439902737,
        "uid": 8779,
        "name": "postcards",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "```\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=30;\nint n,m,r,c,ans=1<<30;\nint a[maxn][maxn],f[maxn][maxn],g[maxn][maxn];\nint b[maxn],C[maxn];\nvoid dp()\n{\n     //\u5728b\u6570\u7ec4\u7684\u57fa\u7840\u4e0a\u518d\u52a8\u89c4r\u884c\n     //\u5148\u6c42\u51fa\u90a3c\u5217\u7684\u6a2a\u5411\u5dee\uff0c\u8bb0\u5f55\u5230C\u6570\u7ec4\u91cc\n     memset(C,0,sizeof(C));\n     for(int i=1;i<=n;i++)\n       for(int j=2;j<=c;j++)\n         C[i]+=abs(a[i][b[j]]-a[i][b[j-1]]);\n     //g[i][j]\u6570\u7ec4\u8bb0\u5f55\u5728\u5f53\u524db\u6570\u7ec4\u7684\u57fa\u7840\u4e0a\u9009\u62e9\u7b2ci\u884c\u548c\u7b2cj\u884c\u7684\u7ad6\u5411\u5206\u503c\n     memset(g,0,sizeof(g));\n     for(int i=1;i<n;i++)\n       for(int j=i+1;j<=n;j++)\n         for(int k=1;k<=c;k++)\n           g[i][j]+=abs(a[i][b[k]]-a[j][b[k]]);\n     //f[i][j]\u6570\u7ec4\u8bb0\u5f55\u5728\u5f53\u524d\u60c5\u51b5\u4e0b\u5728\u524di\u884c\u91cc\u9009\u4e2dj\u884c\u7684\u77e9\u9635\u5206\u503c\u7684\u6700\u5c0f\u503c\n     //f[i][j]=min(f[i][j],f[k][j-1]+g[k][i]+C[k]+C[i])\n     memset(f,0x3f,sizeof(f));\n     for(int i=0;i<=n;i++)\n       f[i][0]=0;\n     for(int j=1;j<=r;j++)\n       for(int i=j;i<=n;i++)\n         for(int k=j-1;k<i;k++)\n           f[i][j]=min(f[i][j],f[k][j-1]+g[k][i]+C[i]);\n     for(int i=r;i<=n;i++)\n       ans=min(ans,f[i][r]);\n} \nvoid dfs(int x,int y)\n{\n     //\u641c\u7d22\u5f97\u5230c\u5217\u7684\u7ec4\u5408\n     //\u8bb0\u5f55\u5230b\u6570\u7ec4\u91cc\n     //\u5373\u4eceb[1]\u5230b[c]\u5206\u522b\u4e3a\u9009\u4e2d\u7684c\u5217\u7684\u5e8f\u53f7 \n     /*\n     if(x>m+1)\n       return;\n     */\n     if(y==c)\n     {\n       dp();\n       return;\n     }\n     if(x>m)\n       return;\n     /* \n       \u4e3a\u4ec0\u4e48\u8981\u5148\u5224\u65ady\u7b49\u4e8ec\u7684\u60c5\u51b5\n       \u518d\u5224\u65adx>m\u5462 \n       \u56e0\u4e3a\u4e3b\u7a0b\u5e8f\u4e2d\u7684dfs\u662f\u4ece(1,0)\u5f00\u59cb\u7684\n       \u610f\u601d\u662f\u6b63\u8981\u5904\u7406\u7b2c1\u4e2a\uff0c\u5df2\u7ecf\u9009\u62e9\u4e860\u4e2a\n       \u6240\u4ee5\u5373\u4f7fx\u7b49\u4e8em\uff0c\u4e5f\u6709\u53ef\u80fd\u5df2\u7ecf\u5904\u7406\u5b8c\u4e86m\u5217\uff0c\n       \u5982\u679c\u8fd9\u65f6y\u6070\u597d\u7b49\u4e8ec\uff0c\u4e5f\u662f\u4e00\u79cd\u5408\u6cd5\u60c5\u51b5,\u5c31\u4e0d\u53ef\u4ee5\u5148\u5224\u65adif(x>m) return; \n       \u5982\u679c\u975e\u8981\u5148\u5224\u65ad\u7684\u8bdd\uff0c\u5c31if(x>m+1) return; \u4e5f\u662f\u53ef\u4ee5\u7684 \n     */\n     dfs(x+1,y);\n     b[y+1]=x;\n     dfs(x+1,y+1);\n     \n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&r,&c);\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n        scanf(\"%d\",&a[i][j]);\n    dfs(1,0);\n    printf(\"%d\\n\",ans);\n    system(\"pause\");\n    return 0;\n}\n    \n\n```\n",
        "postTime": 1572351888,
        "uid": 148757,
        "name": "wanxiang_zx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a$DFS+DP$\uff0c$DP$\u697c\u4e0b\u5df2\u7ecf\u8bb2\u5f97\u975e\u5e38\u6e05\u695a\u4e86\u3002\n\n\u4f46\u5bf9\u4e8e\u6211\u8fd9\u4e2a(~~\u4e27\u5fc3\u75c5\u72c2\u7684~~)\u4eba\u6765\u8bf4\uff0c$DFS$\u592a\u5e73\u5eb8(~~\u65e0\u804a~~)\u4e86\u3002\n\n\u4e8e\u662f\uff0c\u60f3\u5230\u4e86\u5b50\u96c6\u679a\u4e3e\u3002\n\n\u601d\u8def\uff1a\u5b50\u96c6\u679a\u4e3e+\u72b6\u6001\u538b\u7f29+$DP$\n\n\u5047\u8bbe $n=3$\uff0c$r=2$\uff0c\u4ee5\u4e8c\u8fdb\u5236\u6765\u8868\u793a\u6bcf\u4e00\u884c\uff0c\u5219\uff1a\n```cpp\n0 1 1  //\u8868\u793a\u9009\u5b9a1\u30012\u884c\n1 0 1  //\u8868\u793a\u9009\u5b9a1\u30013\u884c\n1 1 0  //\u8868\u793a\u9009\u5b9a2\u30013\u884c\n```\n\u53ef\u4ee5\u770b\u5230\uff0c\u6240\u6709\u7684\u60c5\u51b5\u5373\u4e3a\u5728\u957f\u5ea6\u4e3a $n$ \u7684\u4e8c\u8fdb\u5236\u4e2d\uff0c\u5b58\u5728 $r$ \u4e2a $1$ \u7684\u60c5\u51b5\u3002\n\n\u770b\u8d77\u6765\u8fd8\u9ebb\u70e6\u7684\u6837\u5b50\uff0c\u4f46\u5982\u679c\u4f60\u505a\u8fc7[POJ 2453](http://poj.org/problem?id=2453)\uff0c\u90a3\u4e00\u5207\u95ee\u9898\u90fd\u8fce\u5203\u800c\u89e3\u4e86\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4efd[\u9898\u89e3](http://blog.csdn.net/w57w57w57/article/details/6657547)\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5f88\u5f00\u5fc3\u5730\u7528\u4e86\uff1a\n\n(\u6c42\u4e0b\u4e00\u4e2a\u5305\u542b\u548c $S$ \u7684\u4e8c\u8fdb\u5236\u4e0b $1$ \u7684\u6570\u91cf\u76f8\u540c\u7684\u6570)\n```cpp\nint x=s&(-s),t=s+x;\ns=t|((s^t)/x)>>2;\n```\n\u786e\u5b9a\u4e86\u884c\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u52a8\u6001\u89c4\u5212\u4e86\uff0c\u4eff\u7167\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\n\n\u4ee4 $f_{i,j}$ \u8868\u793a\u4ee5\u7b2c $i$ \u5217\u7ed3\u5c3e\u7684 $r$ \u884c $j$ \u5217\u7684\u5b50\u77e9\u9635\u7684\u6700\u4f18\u503c\uff0c\u5219\u6709\n\n$f_{i,j}=max\\{f_{k,j-1}+f_{i,1}+get(k,i)\\}$\n\n\u7b54\u6848\u662f$max\\{f_{i,c}\\} (c \\le i \\le m)$\n\n\u5b8c\u6574\u4ee3\u7801(C++\uff0c\u4e11\u52ff\u55b7)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,r,c,a[20][20];\nint b[20],f[20][20];\nint ans=2000000000;\nvoid work(int s)\t//DP\u8fc7\u7a0b\n{\n    for(int i=b[0]=0; i<n; i++)\t//\u89e3\u72b6\u6001\u538b\u7f29\n        if(s&(1<<i))\n            b[++b[0]]=i+1;\n    memset(f,127,sizeof(f));\t//\u6c42\u6700\u5c0f\u521d\u59cb\u5316\u6210\u6700\u5927\n    for(int i=1; i<=m; i++) {\t//\u8fb9\u754c\u5904\u7406\n        f[i][1]=0;\n        for(int j=2; j<=b[0]; j++)\n            f[i][1]+=abs(a[b[j]][i]-a[b[j-1]][i]);\n    }\n    for(int j=2; j<=c; j++)\n        for(int i=j; i<=m; i++)\n            for(int k=j-1; k<i; k++) {\n                int x=0,p=1;\n                while(p<=b[0])\n                    x+=abs(a[b[p]][k]-a[b[p++]][i]);\n                f[i][j]=min(f[i][j],f[k][j-1]+f[i][1]+x);\n            }\n    for(int i=c; i<=m; i++)\t//\u6c42\u7b54\u6848\n        ans=min(ans,f[i][c]);\n    return ;\n}\nint main(void)\n{\n    scanf(\"%d%d%d%d\",&n,&m,&r,&c);\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++)\n            scanf(\"%d\",&a[i][j]);\n    int s=0,e=0,x,t;\n    for(int i=0; i<r; i++)\t\t//\u6c42\u5f00\u59cb\u72b6\u6001\u5b50\u96c6\n        s=s|(1<<i);\n    for(int i=n-r; i<n; i++)\t\t//\u6c42\u7ed3\u675f\u72b6\u6001\u5b50\u96c6\n        e=e|(1<<i);\n    while(s<=e) {\n\t\twork(s);\t\t//DP\u8fc7\u7a0b\n\t\tx=s&(-s),t=s+x;\t//\u6c42\u4e0b\u4e00\u4e2a\u548cS\u7684\u4e8c\u8fdb\u5236\u4e0b\u76841\u7684\u6570\u91cf\u76f8\u540c\u7684\u6570\n        s=t|((s^t)/x)>>2;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1518507515,
        "uid": 29372,
        "name": "glassy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u660e\u663e\u662fdp\uff0c\u4f46\u662f\u5982\u679c\u76f4\u63a5dp\uff0c\u53ef\u80fd\u5f88\u4e0d\u597d\u60f3\uff08\u81f3\u5c11\u6211\u60f3\u4e0d\u51fa\u6765\uff09\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u641c\u7d22\u884c\uff0cdp\u5217\u3002\u5047\u8bbe\u884c\u5df2\u7ecf\u641c\u7d22\u5b8c\u4e86\uff0c\u6211\u4eec\u5c31\u52a8\u89c4\u77e9\u9635\u7684\u5217\uff0c\u600e\u4e48\u52a8\u89c4\u5462\uff0c\u5982\u679c\u7528f[i][j]\u8868\u793a\u5f53\u524d\u53d6\u4e86i\u5217\uff0c\u4ee5j\u5217\u7ed3\u5c3e\u7684\u6700\u4f18\u503c\uff0c\u90a3\u4e48f[i][j]=max(f[i][k]+\u5408\u5e76\u8d77\u6765\u589e\u52a0\u7684\u503c)\u53d6\u503c\u8303\u56f4\u8bf7\u53c2\u8003\u4ee3\u7801\uff0c\u7ec6\u8282\u4e5f\u8bf7\u53c2\u8003\u4ee3\u7801\u3002\u4f46\u662f\u8fd9\u91cc\u8981\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u4efd\u4ee3\u7801\u6548\u7387\u8f83\u4f4e\uff0c\u7b2c\u4e00\u6b21\u63d0\u4ea4AC\uff0c\u7b2c\u4e8c\u6b21\u628amemset\u53d8\u6210for\u5c3195\u5206\uff08TLE\u4e00\u4e2a\u70b9\uff09\uff0c\u7b2c\u4e09\u6b21\u4ee3\u7801\u8ddf\u7b2c\u4e00\u6b21\u4e00\u6a21\u4e00\u6837\uff0c\u4e5f\u662f95\u5206\uff08TLE\u4e00\u4e2a\u70b9\uff09\uff0c\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u4ee3\u7801\u8ddf\u7b2c\u4e09\u6b21\u5b8c\u5168\u4e00\u6837\u7136\u540e\u5c31\u53c8AC\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u9644\u4e0a\uff08\u5f97\u5206\u503c\u4e3a90-100\u5206\u7684\uff09\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nint n,m,r,c,s[20][20],ans=1e9,p[20];\nvoid pd(){\n    int f[20][20],u,h;\n    memset(f,0,sizeof(f));\n    for (int i=1;i<=c;i++)\n    for (int j=0;j<m;j++)\n    {\n        f[i][j]=1e9;u=0;\n        for (int k=1;k<r;k++)\n        u+=abs(s[p[k]][j]-s[p[k-1]][j]);\n        if (i<2)\n        {f[i][j]=u;if (i==c && f[i][j]<ans)ans=f[i][j];continue;}\n        for (int k=0;k<j;k++)\n        {\n            h=0;\n            for (int l=0;l<r;l++)\n            h+=abs(s[p[l]][k]-s[p[l]][j]);\n            if (i<2)h=0;\n            if (f[i-1][k]+u+h<f[i][j])f[i][j]=f[i-1][k]+u+h;\n        }\n        if (i==c && f[i][j]<ans)ans=f[i][j];\n    }\n}\nvoid ccj(int x,int y){\n    if (y>r)return;\n    if (x==n)\n    {\n        if (y<r)return;\n        pd();\n        return;\n    }\n    p[y]=x;ccj(x+1,y+1);ccj(x+1,y);\n}\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&m,&r,&c);\n    for (int i=0;i<n;i++)\n    for (int j=0;j<m;j++)\n    scanf(\"%d\",&s[i][j]);\n    ccj(0,0);\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1470492774,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "f[i,j]\u8868\u793a\u53d6\u4e86i\u5217\uff0c\u4e14\u7b2ci\u5217\u662fj\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u641c\u7d22\u884c\n\n\u5728\u52a8\u5f52\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u601d\u8003\uff0c\u600e\u4e48\u624d\u80fd\u679a\u4e3e\u6700\u5c0f\u7684c\u5217\uff1f\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5148\u9884\u5904\u7406\u90a3\u4e9b\u9700\u8981\u8ba1\u7b97\u7684\u503c\uff1f\n\n\n\u6bd4\u5982\u7b2c\u4e00\u4e2a\u6837\u4f8b\uff0c\u5047\u5982\u6211\u4eec\u5df2\u7ecf\u641c\u5230\u4e862\u884c\u548c4\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7684\u77e9\u9635:\n\n9 4 8 7 4\n\n6 8 5 6 9\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u6c42\u51fa\u6bcf\u5217\u7684\u4e0a\u4e0b\u4e4b\u95f4\u7684\u5dee\uff0c\u653e\u5728\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u91cc(d[i]\u8868\u793a\u7b2ci\u5217\u76f8\u90bb\u6570\u4e4b\u95f4\u4e0a\u4e0b\u7684\u503c)\n\n\n\u90a3\u4e48\u5f53\u4e00\u5217\u4e00\u5217\u5408\u8d77\u6765\u65f6\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8ba1\u7b97\u5de6\u53f3\u7684\u503c\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6765\u8868\u793a(e[i,j]\u8868\u793ai\u5217\u548cj\u5217\u4e4b\u95f4\u5de6\u53f3\u503c i<j)\n\n\n\u5b8c\u6210\u4e86\u4ee5\u4e0b\u94fa\u57ab\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u52a8\u5f52\u4e86\uff0c\u679a\u4e3e\u63a5\u4e0a\u53bb\u7684\u90a3\u4e2a\u70b9\uff0c\u5e76\u7d2f\u52a0\u76f8\u5e94\u7684\u503c\uff0c\u8fd9\u79cd\u76f4\u7ebf\u578b\u7684\u52a8\u5f52\u7c7b\u4f3c\u4e8e\u9a6c\u53a9\u95ee\u9898\u548c80\u5206\u7684\u7f8a\u7f8a\u5217\u961f\uff0c\u662fdp\u7684\u4e00\u4e2a\u7ecf\u5178\u6a21\u578b\n\n\n\n\n\n\n\n\n\n```cpp\nvar n,m,r,c,i,j,ans:longint;\nb,d,p:array[0..16]of longint;\na,e,f:array[1..16,1..16]of longint;\nfunction min(a,b:longint):longint;\nbegin\n  if a<b then exit(a) else exit(b);\nend;\nprocedure dp;\nvar i,j,k:longint;\nbegin\n  fillchar(d,sizeof(d),0);\n  fillchar(e,sizeof(e),0);\n  fillchar(f,sizeof(f),$7f);\n  for i:=1 to m do\n  for j:=1 to r-1 do d[i]:=d[i]+abs(a[b[j],i]-a[b[j+1],i]);\n  for i:=1 to m do\n  for j:=i+1 to m do\n  for k:=1 to r do e[i,j]:=e[i,j]+abs(a[b[k],j]-a[b[k],i]);\n  for i:=1 to m do f[1,i]:=d[i];\n  for i:=2 to c do\n  for j:=i to m do\n  for k:=i-1 to j-1 do\n  f[i,j]:=min(f[i,j],f[i-1,k]+e[k,j]+d[j]);\n  for i:=c to m do\n  ans:=min(ans,f[c,i]);\nend;\nprocedure ldy(k:longint);\nvar i:longint;\nbegin\n  if k>r then\n  begin\n    dp;\n    exit;\n  end;\n  for i:=1 to n do\n  if(p[i]=0)and(i>b[k-1]) then\n  begin\n    p[i]:=1;\n    b[k]:=i;\n    ldy(k+1);\n    p[i]:=0;\n  end;\nend;\nbegin\n  readln(n,m,r,c);\n  ans:=maxlongint;\n  for i:=1 to n do\n  for j:=1 to m do read(a[i,j]);\n  ldy(1);\n  writeln(ans);\nend.\n```",
        "postTime": 1453446324,
        "uid": 7161,
        "name": "sunjunhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528\u641c\u7d22+dp\n\n\u65e2\u7136\u662f\u6700\u540e\u4e00\u9898\uff0c\u7b97\u6cd5\u81ea\u7136\u4e0d\u4f1a\u7b80\u5355\u256e(\u256f\u25bd\u2570)\u256d\n\n\u5177\u4f53\u8bf7\u770bAC\u4ee3\u7801\n\n\n\n\n\n\n\n```cpp\nconst max=1000000000;\nvar n,m,r,c,i,j,ans:longint;\n    a,p,f:array[0..16,0..16] of longint;\n    x,h:array[0..16] of longint;\nprocedure dp;\nvar i,j,k,t:longint;\nbegin\nfor i:=1 to m do\n    begin\n     h[i]:=0;\n     for j:=1 to r-1 do\n        h[i]:=h[i]+abs(a[x[j],i]-a[x[j+1],i]);\n    end;\nfor i:=1 to m-1 do\n    for j:=i+1 to m do\n        begin\n         p[i,j]:=0;\n         for k:=1 to r do\n            p[i,j]:=p[i,j]+abs(a[x[k],i]-a[x[k],j]);\n        end;\nfor i:=1 to m do\n    f[i,1]:=h[i];\nfor i:=2 to c do\n    f[1,i]:=max;\nfor i:=2 to m do\n    for j:=2 to c do\n        begin\n         f[i,j]:=max;\n         if j>i then continue;\n         for k:=1 to i-1 do\n            begin\n             t:=f[k,j-1]+p[k,i];\n             if t<f[i,j] then f[i,j]:=t;\n            end;\n         f[i,j]:=f[i,j]+h[i];\n        end;\nend;\nprocedure search(u,l:longint);\nvar i:longint;\nbegin\nif u=r+1 then\n    begin\n     dp;\n     for i:=1 to m do\n        if f[i,c]<ans then ans:=f[i,c];\n     exit;\n    end;\nfor i:=l+1 to n-r+u do\n    begin\n     x[u]:=i;\n     search(u+1,i);\n    end;\nend;\nbegin\nreadln(n,m,r,c);\nfor i:=1 to n do\n    for j:=1 to m do\n        read(a[i,j]);\nans:=maxlongint;\nsearch(1,0);\nwriteln(ans);\nend.\n\u6700\u540e\u795d\u5927\u5bb6\u5237\u9898\u6109\u5feb\uff0c\u4e0b\u6b21\u4e89\u53d6\u4e00\u7b49\u256e(\u256f\u25bd\u2570)\u256d\n```",
        "postTime": 1417527235,
        "uid": 4469,
        "name": "ckd\u98de\u9f20",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u6211\u8fd9\u91cc\u63a8\u8350\u4e00\u4e0b[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/szr666--blog/)\n\n\u5728\u535a\u5ba2\u91cc\u89c2\u770b\u66f4\u7f8e\u89c2\u54e6~\n\n[\u9898\u76ee](https://www.luogu.org/problemnew/show/P2258)\n------------\n\n------------\n\n\u534e\u4e3d\u7684\u5206\u5272\u7ebf\n# \u89e3\u6790\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7c7b\u6bd4\u6700\u5927\u5b57\u6bb5\u548c\u4e0e\u6700\u5927\u5b50\u77e9\u9635\u7684\u5173\u7cfb\n\n### dp\u72b6\u6001\u8bbe\u8ba1\n\n\u5148\u8bben=1,\u5373\u77e9\u9635\u9000\u5316\u4e3a\u5e8f\u5217,\u56e0\u4e3a\u6700\u7ec8\u8981\u9009c\u4e2a\u6570,\n\n\u6240\u4ee5\u628a\u5f53\u524d\u9009\u4e86j\u4e2a\u6570\u52a0\u5165\u72b6\u6001\u3002\n\n\u56e0\u4e3a\u9009\u6570\u4ea7\u751f\u7684\u5206\u503c\u7531\u5f53\u524d\u6570\u4e0e\u4e4b\u524d\u9009\u7684\u6570\u6709\u5173\uff0c\n\n\u628a\u4e0a\u4e00\u6b21\u5f3a\u5236\u9009\u4e86\u7b2ck\u4e2a\u6570\u52a0\u5165\u72b6\u6001\n\n\u8bbedp[j][k]\u8868\u793a\u5f53\u524d\u9009\u4e86j\u4e2a\u6570,\u4e14\u5f3a\u5236\u9009\u62e9\u7b2ck\u4e2a\u6570\u7684\u6700\u5c0f\u5206\u503c\n\n### \u9012\u63a8\u8f6c\u79fb\u65b9\u7a0b\u5f0f\n\n\u679a\u4e3e\u5728\u7b2ck\u4e2a\u6570\u524d\u9009\u4e86\u7b2ci\u4e2a\u6570\uff0c\u6216\u8005\u4e0d\u9009\n\n\u5219 dp[j][k]=min(dp[j][k],dp[j-1][i]+f[i][k]);\n\n\u5176\u4e2df[i][k]\u8868\u793ai,k\u4e4b\u95f4\u5dee\u7684\u7edd\u5bf9\u503c\n\n\u6ce8\u610fdp[1][k]=0,\u56e0\u4e3a\u524d\u9762\u6ca1\u6709\u6570,\u503c\u7b49\u4e8e0\n\ndp[j][k]\u5728\u6c42\u4e4b\u524d\u90fd\u8981\u5148\u8d4b\u503c\u4e3a\u65e0\u7a77\u5927\n\n### \u8ba9\u679a\u4e3e\u4e3adp\u521b\u9020\u6761\u4ef6\n\n\u73b0\u5728\u628a\u4e00\u4e2a\u6570\u53d8\u6210\u4e00\u5217\u4e2d\u7684\u51e0\u4e2a\u6570,\u4f46\u6211\u4eec\u4e0d\u77e5\u9053\u662f\u54ea\u51e0\u4e2a\u6570\n\n\u90a3\u4e48\u5c31\u4ecen\u884c\u4e2d\u66b4\u529b\u641c\u7d22\u9009\u51fac\u884c,\u4e0e\u5217\u76f8\u4ea4\u7684\u5730\u65b9\u4fbf\u662f\u8981\u9009\u7684\u6570\n\n\u73b0\u5728\u6211\u4eec\u6709\u4e00\u4e2ac*m\u7684\u77e9\u9635\uff0c\u4e5f\u5c31\u662f\u628a\u5e8f\u5217\u4e2d\u7684\u6570\u53d8\u6210\u4e86c\u4e2a\u6570\n\n### \u6700\u540e\u7684dp\n\n\u6211\u4eec\u8981\u8003\u8651\u5217\u4e0e\u5217\u4e4b\u95f4\u7684\u5206\u503c\u548c\u884c\u4e0e\u884c\u4e4b\u95f4\u7684\u5206\u503c\n\n\u56e0\u4e3a\u884c\u5df2\u7ecf\u786e\u5b9a,\u5219\u8bbeh[i]\u4e3a\u7b2ci\u5217\u4e2d\u76f8\u90bb\u6570\u95f4\u7684\u5206\u503c\n\n\u7531\u4e8e\u5217\u4e0d\u786e\u5b9a\u9009\u54ea\u4e9b,\u8bbef[i][k]\u4e3a\u4efb\u610f\u4e24\u5217\u4e4b\u95f4\u7684\u5206\u503c\n\n\u5219 dp[j][k]=min(dp[j][k],dp[j-1][i]+h[k]+f[i][j]);\n\nh[k]\u4e3a\u9009\u62e9\u7b2ck\u5217\u5728\u884c\u4e0e\u884c\u4e4b\u95f4\u4ea7\u751f\u7684\u5206\u503c\n\ndp[1][k]=h[k],\u5373\u53ea\u4ea7\u751f\u884c\u4e4b\u95f4\u7684\u5206\u503c\n\n\u56e0\u4e3a\u884c\u6570\u4e0d\u8d85\u8fc716,\u6211\u5728\u679a\u4e3e\u4e2d\u7528\u4e00\u4e2a\u6570\u4ee3\u66ff\u5224\u91cd\u6570\u7ec4\n\n### \u603b\u7ed3\n\n\u5bf9\u4e8e\u4e8c\u7ef4\u7684\u95ee\u9898,\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u5176\u4e2d\u7684\u884c,\u7136\u540e\u628a\u4e00\u7ef4dp\u4e2d\n\n\u5bf9\u4e8e\u6570\u7684\u64cd\u4f5c\u53d8\u4e3a\u5bf9\u4e8e\u5217\u7684\u64cd\u4f5c\n\n# \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint n,m,r,c;\nint a[20][20],b[20][20],f[20][20],dp[20][20],h[20];\nint state,ans;\nvoid read(int &x)\n{\n    x=0;\n    int f;\n    f=1;\n    char c;\n    c=getchar();\n    while((c<'0'||c>'9')&&c!='-')\n    {\n        c=getchar();\n    }\n    if(c=='-')\n    {\n        f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<3)+(x<<1)+(c^48);\n        c=getchar();\n    }\n    x=x*f;\n}\ninline int min(int x1,int x2)\n{\n    return x1<x2 ? x1 : x2;\n}\nint solve()\n{\n    memset(f,0,sizeof(f));\n    memset(dp,0x3f3f3f3f,sizeof(dp));\n    memset(h,0,sizeof(h));\n    int i,j,k;\n    j=0;\n    for(i=1;i<=n;i++)\n    {\n        if(state&(1<<i))\n        {\n            j++;\n            for(k=1;k<=m;k++)\n            {\n                b[j][k]=a[i][k];\n            }\n        }\n    }\n    for(i=1;i<=m;i++)\n    {\n        for(j=i+1;j<=m;j++)\n        {\n            for(k=1;k<=r;k++)\n            {\n                f[i][j]+=abs(b[k][i]-b[k][j]);\n            }\n        }\n    }\n    for(i=1;i<=m;i++)\n    {\n    \tfor(j=1;j<r;j++)\n    \t{\n    \t\th[i]+=abs(b[j][i]-b[j+1][i]);\n        }\n    }\n    for(k=1;k<=m;k++)\n    {\n    \tdp[1][k]=h[k];\n        for(j=2;j<=c&&j<=k;j++)\n        {\n            for(i=1;i<k;i++)\n            {\n                dp[j][k]=min(dp[j][k],dp[j-1][i]+f[i][k]+h[k]);\n            }\n        }\n    }\n    k=0x3f3f3f3f;\n    for(i=c;i<=m;i++)\n    {\n    \tk=min(k,dp[c][i]);\n    }\n    return k;\n}\nvoid dfs(int x,int sum)\n{\n    if(sum==r)\n    {\n        ans=min(ans,solve());\n        return;\n    }\n    int i;\n    for(i=x+1;i<=n;i++)\n    {\n        state|=(1<<i);\n        dfs(i,sum+1);\n        state^=(1<<i);\n    }\n}\nint main()\n{\n    ans=0x3f3f3f3f;\n    read(n);\n    read(m);\n    read(r);\n    read(c);\n    int i,j;\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=m;j++)\n        {\n            read(a[i][j]);\n        }\n    }\n    state=0;\n    dfs(0,0);\n    printf(\"%d\",ans);\n}\n```\n",
        "postTime": 1563271879,
        "uid": 129849,
        "name": "szr666",
        "ccfLevel": 4,
        "title": "\u63d0\u9ad8+\u7701\u9009-\u4e13\u9898[dp][\u679a\u4e3e]\uff1aP2258 \u5b50\u77e9\u9635"
    },
    {
        "content": "\u7ed9P\u515a\u53d1\u70b9\u798f\u5229\uff0c\u6bd5\u7adfFreePascal\u5728NOIP\u7684\u65e5\u5b50\u4e0d\u957f\u4e86\u3002\n\n\u5f88\u663e\u7136\u6253\u4e24\u4e2a\u66b4\u529b\u7ec4\u5408\u662f\u53ef\u4ee5\u62ff\u5206\u7684\uff0c\u66b4\u529b\u51fa\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u65b9\u5f0f\uff0c\u8bb0\u5f55\u6700\u4f18\u503c\u3002\n\n\n\u90a3\u4e48\u6ee1\u5206\u7b97\u6cd5\u8be5\u5982\u4f55\u5b9e\u73b0\u3002\u9996\u5148\u5982\u679c\u8bf4\u662f\u4e00\u4e2a\u6570\u5217\u91cc\u53d6x\u4e2a\u6570\uff0c\u6c42\u4e00\u4e2a\u5206\u5ea6\u6700\u5c0f\u7684\u65b9\u6848\u662f\u53ef\u4ee5\u7528DP\u6bd4\u8f83\u5bb9\u6613\u5b9e\u73b0\u7684\u3002\u7528f[i,j]\u8868\u793a\u53d6i\u4e2a\u6570\uff0c\u4ee5\u539f\u6570\u5217\u4e2d\u7b2cj\u4e2a\u6570\u7ed3\u5c3e\u7684\u6700\u4f18\u503c\u3002k\u8868\u793a\u53d6\u7684\u7b2ci-1\u4e2a\u6570\uff0c\u5373j\u7684\u524d\u5bfc\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5927\u6982\u662f\u8fd9\u6837\n\n\n\n    f[i,j]:=max(f[i,j],f[i-1,k]+abs(a[j]-a[k]));\n\n\u90a3\u4e48\u6709\u4e86\u8fd9\u6837\u7684\u65b9\u6cd5\u518d\u6765\u770b\u5b50\u77e9\u9635\u8fd9\u9053\u9898\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\u3002\n\n\n\u4e24\u4e2a\u66b4\u529b\u7ec4\u5408\u8d85\u65f6\uff0c\u4f46\u4e00\u4e2a16\u4e2a\u4ee5\u5185\u7684\u66b4\u529b\u7ec4\u5408\u65f6\u95f4\u8fd8\u662f\u7ef0\u7ef0\u6709\u4f59\u7684\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u66b4\u529b\u4e00\u534a\uff0cDP\u4e00\u534a\u7684\u65b9\u5f0f\u8fdb\u884c\u7ef4\u5ea6\u548c\u65f6\u95f4\u538b\u7f29AC\u6389\u3002\n\n\n\u7528\u66b4\u529b\u7ec4\u5408\u6c42\u51fa\u6bcf\u79cd\u884c\u7684\u7ec4\u5408\u65b9\u6848\uff0c\u7136\u540eDP\u5217\u6c42\u6700\u4f18\u3002\u552f\u4e00\u8981\u6ce8\u610f\u7684\u5c31\u662f\u8981\u5728\u6bcf\u6b21DP\u524d\u521d\u59cb\u5316DP\u548c\u9884\u5904\u7406\u6570\u7ec4\u3002\u5f53\u786e\u5b9a\u67d0\u4e00\u4e2a\u884c\u7684\u7ec4\u5408\u65f6\uff0c\u53d6\u6bcf\u5217\u7684\u5206\u5ea6\u663e\u7136\u5df2\u7ecf\u662f\u53ef\u4ee5\u9884\u6c42\u5f97\u7684\uff0c\u540c\u6837\uff0c\u53d6\u4efb\u610f\u4e24\u5217\u7684\u5206\u5ea6\u4e5f\u662f\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\u7684\u3002\u90a3\u4e48\u5c31\u5df2\u7ecf\u53ef\u4ee5\u628a\u53d6\u6bcf\u5217\u7684\u5206\u5ea6\u770b\u505a\u4e00\u4e2a\u957fm\u7684\u5e8f\u5217\uff0c\u800c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u6c42\u8fd9\u4e2a\u5e8f\u5217\u7684\u6700\u4f18\u5b50\u5e8f\u5217\u3002\u7528c\\_ud[i]\u8bb0\u5f55\u53d6\u7b2ci\u5217\u7684\u5206\u5ea6\uff0c\u7528c\\_lr[i,j]\u8bb0\u5f55\u53d6\u7b2ci,j\u4e24\u5217\u7684\u5206\u5ea6\u3002i,j,k\u7684\u4ee3\u8868\u4e0d\u53d8\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5927\u6982\u957f\u8fd9\u6837\n\n\n\n  f[i,j]:=max(f[i,j],f[i-1,k]+c\\_lr[j,k])+c\\_ud[j];\n\n\u7a0b\u5e8f\u8d60\u9001~\n\n\n\n\n```cpp\nvar i,j,k,n,m,x,y,s,oo,ans,nn,mm:longint;\n    t,c_ud:array[0..20]of longint;\n    a,f,c_lr:array[0..20,0..20]of longint;\n     //f[i,j]\u8868\u793a\u9009i\u5217\u4ee5j\u7ed3\u5c3e\u7684\u6700\u4f18\u5b50\u77e9\u9635\uff1b\nfunction min(a,b:longint):longint;\nbegin\n  if a<b then exit(a); exit(b);\nend;\nprocedure dp;\nvar i,j:longint;\nbegin\n  fillchar(f,sizeof(f),$7f);\n  fillchar(c_ud,sizeof(c_ud),0);\n  fillchar(c_lr,sizeof(c_lr),0);\n  for i:=1 to mm do\n   for j:=2 to n do\n    c_ud[i]:=c_ud[i]+abs(a[t[j],i]-a[t[j-1],i]);\n  for i:=1 to mm do\n   for j:=1 to mm do\n    for k:=1 to n do\n     c_lr[i,j]:=c_lr[i,j]+abs(a[t[k],i]-a[t[k],j]);\n  for i:=1 to mm do f[1,i]:=c_ud[i];\n  for i:=2 to m do\n   for j:=i to mm do\n    begin\n    for k:=i-1 to j-1 do\n     f[i,j]:=min(f[i,j],f[i-1,k]+c_lr[k,j]);\n    inc(f[i,j],c_ud[j]);\n    end;\n  for i:=m to mm do ans:=min(ans,f[m,i]);\nend;\nprocedure ysq(k:longint);\nvar i:longint;\nbegin\n  if k=n+1 then begin dp; exit; end;\n  for i:=t[k-1]+1 to nn do\n   begin t[k]:=i; ysq(k+1); t[k]:=0; end;\nend;\nbegin\n  oo:=maxlongint div 3;\n  readln(nn,mm,n,m);\n  for i:=1 to nn do\n   for j:=1 to mm do read(a[i,j]);\n  ans:=oo;\n  ysq(1);\n  writeln(ans);\nend.\n```",
        "postTime": 1477409887,
        "uid": 24716,
        "name": "Beginner_df016",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u9053\u7ec3\u4e60\u641c\u7d22\u526a\u679d\u4ee5\u53ca\u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u597d\u9898\u3002\u6211\u6700\u521d\u5199\u4e86\u4e00\u4e2a\u53cc\u91cddfs\uff0c\u56e0\u4e3a\u6709\u5f3a\u5927\u7684\u526a\u679d\u7684\u4e8690\u5206\u3002\u7136\u800c\u6b64\u9898\u6807\u7b97\u4e3a\uff1a\u4e00\u534adfs\uff0c\u4e00\u534adp\u3002\n\n\u8003\u8651\u5230\u9996\u5148\u9700\u8981\u679a\u4e3e\u4e00\u884c\u4e2d\u7684\u67d0\u4e9b\u5217\uff0c\u524d\u4e00\u534a\u5fc5\u987bdfs\uff0c\u52a0\u4e0a\u4e00\u70b9\u526a\u679d\u3002\n\n\u800c\u4e00\u65e6\u5217\u5df2\u7ecf\u786e\u5b9a\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u628a\u786e\u5b9a\u7684\u5217\u548c\u672a\u786e\u5b9a\u7684\u884c\u7ec4\u5408\u8d77\u6765\uff0c\u770b\u6210\u4e00\u4e2a\u5355\u4e00\u7684\u77e9\u9635\u3002\n\n\u6b64\u65f6\u6211\u4eec\u719f\u6089\u7684dp\u5c31\u53ef\u4ee5\u7528\u4e0a\u4e86\u3002\n\n\u9644\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[i][j] = min(f[i-1][k] + w[k][j] + f[1][j]) //i\u8868\u793a\u5df2\u9009i\u884c\uff0c j\u8868\u793a\u9009\u7684\u6700\u540e\u4e00\u884c\u7684\u884c\u6570\n\n\u8003\u8651\u5230dp\u662f\u4e09\u7ef4\u7684\uff0c\u800cdfs\u662f2^n\u7684\uff0c\u800cn\u89c4\u6a21\u8f83\u5c0f\uff0c\u6211\u4eec\u8ba1\u7b97\u4e00\u4e0b\u65f6\u95f4\u7684\u6210\u672c\uff08\u60f3\u5f53\u521d\u6211\u5c31\u662f\u53e3\u7b97\u5931\u8bef\uff0c\u5bfc\u81f4\u6ca1\u9009\u62e9\u66f4\u4f18\u79c0\u7b97\u6cd5\u7684\uff09\n\n\u524d50\u5206\uff1an=12. dp:12^3=1728 , dfs:2^12=4096\n\n\u540e50\u5206\uff1an=16. dp:16^3=4096 , dfs:2^16=65536\n\n\u597d\u5427\uff0c\u663e\u800c\u6613\u89c1\uff0c\u65e2\u7136n\u8fd8\u662f\u6709\u70b9\u5927\u7684\uff0c\u80fd\u4e0d\u7528dfs\u5c31\u4e0d\u7528\uff0c\u662f\u5427\uff1f\n\n\u9644\u4e0a\u534e\u4e3d\u7684100\u5206c++\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio> \n#include<cstring>\n#include<cmath>\nusing namespace std;\nint n,m,r,c,ans=1000001;\nint matrix[17][17];\nint used[17];  //\u8bb0\u5f55\u9009\u53d6\u7684\u5217 \nint f[17][17],w[17][17];\nvoid dp()\n{\n    for (int i=1; i<n; i++)\n      for (int j=i+1; j<=n; j++)\n        for (int k=1; k<=c; k++)\n          w[i][j]+=abs(matrix[i][used[k]]-matrix[j][used[k]]); //\u9884\u5904\u7406\u4e24\u884c\u95f4\u7684\u5206\u6570 \n    for (int i=2; i<=r; i++)\n      for (int j=i; j<=n; j++)\n        for (int k=i-1; k<j; k++)\n          if (f[i][j] > f[i-1][k] + w[k][j] + f[1][j])\n             f[i][j] = f[i-1][k] + w[k][j] + f[1][j];\n    for (int i=r; i<=n; i++) \n      if (ans > f[r][i]) ans = f[r][i];\n}\nvoid dfs(int a, int b) \n{\n    if (a > m) return;\n    if (b+m-a < c) return;  //\u53ef\u884c\u6027\u526a\u679d \n    if (b+m-a == c) \n    {\n        for (int i=b+1; i<=c; i++)\n          used[i] = m-c+i;\n        b = c;\n    }\n    if (b == c) \n    {\n        memset(f,1,sizeof(f));\n        memset(w,0,sizeof(w));\n        for (int j=1; j<=n; j++)\n        {\n            f[1][j]=0;\n            for (int i=1; i<c; i++)\n              f[1][j] += abs(matrix[j][used[i]] - matrix[j][used[i+1]]);\n        }\n        dp();\n        return;\n    }\n    dfs(a+1,b);\n    used[b+1]=a+1;\n    dfs(a+1,b+1);\n    used[b+1]=0; //\u52ff\u5fd8\u57fa\u7840\u800c\u7b80\u5355\u7684\u56de\u6eaf \n}\nint main()\n{\n    memset(used,0,sizeof(used));\n    scanf(\"%d%d%d%d\",&n,&m,&r,&c);\n    for (int i=1; i<=n; i++)\n      for (int j=1; j<=m; j++)\n        scanf(\"%d\",&matrix[i][j]);\n    dfs(1,0);\n    used[1]=1;\n    dfs(1,1);\n    printf(\"%d\",ans);\n    return 0;\n} //\u8bdd\u8bf42014noip\u666e\u53ca\u4f3c\u4e4e\u633a\u6c34\u7684\uff0c\u4e5f\u5c31\u8fd9\u9053\u9898\u6709\u70b9\u610f\u601d\n```",
        "postTime": 1472299674,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    },
    {
        "content": "\u4e0d\u526a\u679d\u7684\u679a\u4e3e\u884c\uff0c\u5217\uff1b\u8ba1\u7b97\u5206\u503c\u300b55\u5206\n\n\u53d1\u73b0\u5f53\u884c\u4e00\u5b9a\u65f6\uff0c\n\n\u5bf9\u67d0\u5217\u5176\u5143\u7d20(\u7684\u5dee\u7684\u548c)\u7684\u8ba1\u7b97\u662f\u91cd\u590d\u8fdb\u884c\u7684\uff0c\n\n\u5bf9\u67d0\u4e24\u5217\u5728\u6bcf\u884c\u4e4b\u95f4\u7684\u5143\u7d20(\u7684\u5dee\u7684\u548c)\u7684\u8ba1\u7b97\u662f\u91cd\u590d\u8fdb\u884c\u7684\u3002\n\n\u679a\u4e3e\u884c\u540e\u5148\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\uff0c\n\n\u5e76\u5728\u4e4b\u540e\u641c\u7d22\u4e2d\u8bb0\u5f55\u5f53\u524d\u5206\u503c\u300b85\u5206\n\n\u53d1\u73b0\u5f53\u884c\u4e00\u5b9a\u65f6\uff0c\n\n\u5bf9\u9009\u53d6\u7b2cl\u5217\u4f5c\u4e3a\u9009\u53d6\u7684(\u5de6\u5f80\u53f3\u6570)\u7b2ck\u5217\u4e4b\u540e\u7684\u8ba1\u7b97\u662f\u91cd\u590d\u7684\u3002\n\n\u56e0\u6b64\u53ef\u4ee5\u8bb0\u5f55(\u8bb0\u5fc6\u5316\u641c\u7d22)\u300b100\u5206\n",
        "postTime": 1445757135,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2258 \u3010\u5b50\u77e9\u9635\u3011"
    }
]