[
    {
        "content": "\u7528\u4f18\u5148\u961f\u5217q\u6765\u6a21\u62df\u6211\u4eec\u7684cpu\uff0c\u6700\u5f00\u59cb\u65f6\uff0ccpu\u4e2d\u6ca1\u6709\u8fdb\u7a0b\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u628a\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u653e\u8fdb\u53bb\uff0c\u7b2c\u4e8c\u4e2a\u8fdb\u7a0b\u8fdb\u6765\u65f6\u4f1a\u6709\u9009\u62e9\uff0c\u6709\u51e0\u79cd\u53ef\u80fd\uff0c\u8981\u8fdb\u5165\u7684\u8fdb\u7a0b\u7684\u5f00\u59cb\u65f6\u95f4\u5728\u524d\u9762\u90a3\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u65f6\u95f4\u4e4b\u540e\uff0c\u6211\u4eec\u76f8\u5f53\u4e8e\u53ef\u4ee5\u76f4\u63a5\u5b8c\u573a\u6b64\u65f6cpu\u4e2d\u7684\u8fdb\u7a0b\uff0c\u5c06\u65f6\u95f4\u8282\u70b9\u66f4\u65b0\u5f53\u524d\u7ed3\u675f\u65f6\u95f4\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5f53\u524dcpu\u4e2d\u8fdb\u7a0b\u7684\u7ed3\u675f\u65f6\u95f4\u5728\u8981\u8fdb\u6765\u7684\u8fd9\u4e2a\u8fdb\u7a0b\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e\uff0c\u8fd9\u662f\u6211\u4eec\u9009\u62e9\u6bd4\u8f83\u4f18\u5148\u7ea7\uff0c\u5982\u679ccpu\u4e2d\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u5c0f\uff0c\u90a3\u4e48\u5f53\u524d\u8fdb\u7a0b\u53ea\u4f1a\u6267\u884c\u4e00\u534a\uff0c\u6211\u4eec\u7b97\u51fa\u4ed6\u80fd\u591f\u6267\u884c\u7684\u65f6\u95f4\uff0c\u66f4\u65b0\u8fd9\u4e2a\u8fdb\u7a0b\u5e76\u4e14\u91cd\u65b0\u653e\u56decpu\u4e2d\uff0c\u5e76\u5c06\u5373\u5c06\u8fdb\u5165\u7684\u8fdb\u7a0b\u653e\u8fdb\u53bb\uff0c\uff0c\u7ee7\u7eed\u7b49\u5f85\u4e0b\u4e00\u6b65\u5904\u7406\uff0c\u5f53\u524d\u5728q\u4e2d\u7684\u6240\u6709\u8fdb\u7a0b\uff0c\u90fd\u5df2\u7ecf\u4e0d\u7528\u7ba1\u5f00\u59cb\u65f6\u95f4\u4e86\uff0c\u56e0\u4e3a\u5982\u679c\u5728q\u4e2d\uff0c\u5c31\u8868\u660e\u8981\u4e48\u5df2\u7ecf\u6267\u884c\u8fc7\uff0c\u6240\u4ee5\u5728\u95e8\u53e3\u7b49\u5f85\u6267\u884c\uff0c\u8981\u4e48\u662f\u5373\u5c06\u6267\u884c\uff0c\u4ed6\u4eec\u7684st\u90fd\u5df2\u7ecf\u4e0d\u5b58\u5728\u4ec0\u4e48\u610f\u4e49\uff0c\u90fd\u5df2\u7ecf\u662f\u8feb\u4e0d\u53ca\u5f85\u7b49\u5f85\u4e86\uff0c\u6240\u4ee5q\u4e2d\u7684\u4e1c\u897f\u53ea\u7528\u7ba1\u4f18\u5148\u7ea7\u3002\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nstruct node{\n\tint id,st,re,pr;\n\tbool operator < (const node\t&a)const{\n\t\tif(pr==a.pr)  return st>a.st;\n\t\telse return pr<a.pr;\n\t}\n};\nnode c;\nlong long ti;\npriority_queue<node>q;\nint main(){\n\twhile(scanf(\"%d%d%d%d\",&c.id,&c.st,&c.re,&c.pr)!=EOF){\n\t\twhile(!q.empty()&&ti+q.top().re<=c.st){\n\t\t\tnode b=q.top();\n\t\t\tq.pop();\n\t\t\tprintf(\"%d %lld\\n\",b.id,ti+b.re);\n\t\t\tti+=b.re;\n\t\t}\n\t\tif(!q.empty()){\n\t\t\tnode d=q.top();\n\t\t\tq.pop();\n\t\t\td.re=d.re-c.st+ti;\n\t\t\tq.push(d);\n\t\t}\n\t\tq.push(c);\n\t\tti=c.st;\n\t}\n\twhile(!q.empty()){\n\t\tnode f=q.top();\n\t\tq.pop();\n\t\tti+=f.re;\n\t\tprintf(\"%d %lld\\n\",f.id,ti);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1538178655,
        "uid": 46743,
        "name": "loaky",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u6211\u5148\u4ea4\u4e00\u53d1\u5e76\u6ca1\u6709\u7684STL\u4f18\u5148\u961f\u5217\u7684\u9898\u89e3\u3002\n\n\u5176\u5b9e\u6b64\u9898\u8981\u64cd\u4f5c\u4e24\u4e2a\u5e8f\u5217\uff1a\n\n\u4e00\u4e2a\u662f\u8fd8\u672a\u5f00\u59cb\u7684\u8fdb\u7a0b\uff0c\u53e6\u4e00\u4e2a\u662f\u6309\u7167\u4f18\u5148\u7ea7\u6392\u5e8f\u7684\u7b49\u5f85\u8fdb\u7a0b\uff1b\n\n\u6bcf\u6b21\u505a\u65f6\u6bd4\u8f83\u4e24\u4e2a\u5e8f\u5217\u7684\u961f\u5934\uff0c\u5982\u679c\u662f\u5f53\u524d\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u5148\u7ed3\u675f\uff0c\n\n\u5219\u628a\u6b64\u8fdb\u7a0b\u8f93\u51fa\uff0c\u5e76\u5c06\u5176\u5f39\u51fa\u4f18\u5148\u961f\u5217\uff1b\u5982\u679c\u662f\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u8981\u5f00\u59cb\uff0c\n\n\u5219\u5148\u7ed3\u7b97\u5f53\u524d\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u7684\u5269\u4f59\u65f6\u95f4\uff0c\u5e76\u5c06\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u52a0\u5165\u4f18\u5148\u961f\u5217\uff1b\n\n\n\u9644\u4e0a\u6e05\u771f\u7684\u603b\u517130\u884c\u7684\u4ee3\u7801\uff1a\n\n\n\n```cpp\n%:pragma GCC optimize(3)\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\n\nstruct XY{int num,s,t,val;}v[1000000];\nstruct cmp{\n    bool operator ()(XY &a,XY &b){ //\u5b9a\u4e49\u4f18\u5148\u7ea7 \n        return a.val<b.val||a.val==b.val&&a.num>b.num;\n    }\n};\n\nint n=0,rest,cnt=1,sz=0,time;//cnt\u662f\u8868\u793a\u4e0b\u4e00\u4e2a\u8fd8\u672a\u5f00\u59cb\u7684\u8fdb\u7a0b \npriority_queue<XY,vector<XY>,cmp> Q;\n\nint main(){\n    while (scanf(\"%d%d%d%d\",&v[n+1].num,&v[n+1].s,&v[n+1].t,&v[n+1].val)!=EOF) ++n;\n    rest=n;v[n+1].s=1e9;\n    while (rest!=0){ //\u6ca1\u6709\u5427N\u4e2a\u8fdb\u7a0b\u90fd\u7ed3\u675f \n        if (sz==0) Q.push(v[cnt]),time=v[cnt].s,sz++,cnt++;//\u5982\u679c\u5f53\u524dCPU\u662f\u7a7a\u7684 \n        XY tmp=Q.top();Q.pop();sz--; //\u53bb\u51fa\u4f18\u5148\u961f\u5217\u4e2d\u6700\u5148\u7684 \n        int last_time=time;\n        time=min(v[cnt].s,last_time+tmp.t); //\u6700\u8fd1\u7684\u65f6\u95f4\u70b9 \n        if (time==last_time+tmp.t) printf(\"%d %d\\n\",tmp.num,time),rest--; //\u7ed3\u675f\u5f39\u51fa \n                              else tmp.t-=time-last_time,Q.push(tmp),sz++;//\u7ed3\u7b97 \n        if (time==v[cnt].s)    Q.push(v[cnt]),sz++,cnt++; //\u52a0\u5165\u65b0\u8fdb\u7a0b \n    }\n    return 0;\n}\n```",
        "postTime": 1496200310,
        "uid": 20360,
        "name": "zj\u4f59\u80fd",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "- \u8fd9\u9053\u9898\u662f\u4e00\u9053\u7eaf\u6a21\u62df\u9898\uff1b\u4f46\u8bdd\u867d\u5982\u6b64\uff0c\u5374\u76f8\u5f53\u7e41\u7410\u548c\u6ce8\u91cd\u7ec6\u8282\u4e0a\u7684\u903b\u8f91\uff0c\u96be\u5ea6\u4e0d\u4f4e\u3002\n\n- \u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u4ee5\u4e0b\u6587\u5b57\u4e2d\uff0c\u5c06\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u7684\u7ed3\u675f\uff0c\u4e2d\u9014\u66ff\u6362\u548c\u52a0\u5165\u65b0\u8fdb\u7a0b\u7edf\u79f0\u201c\u4e8b\u4ef6\u201d\uff1b\u4f18\u5148\u7ea7\u5c0f\u7684\u8fdb\u7a0b\u88ab\u4f18\u5148\u7ea7\u5927\u7684\u8fdb\u7a0b\u4e2d\u9014\u66ff\u6362\u88ab\u79f0\u4e3a\u201c\u62a2\u593a\u201d\u3002\n\n- \u9996\u5148\u7b2c\u4e00\u65f6\u95f4\u80fd\u591f\u60f3\u5230\u7684\u6a21\u62df\u65b9\u6848\u662f\u5c06\u5faa\u73af\u7684\u53d8\u91cf\uff08\u6bd4\u5982i\uff09\u8bbe\u7f6e\u4e3a\u76ee\u524d\u7684\u65f6\u95f4\u70b9\uff08int i=1\uff09\uff0c\u7136\u540e\u4e00\u70b9\u70b9\u5730\u589e\u52a0\u65f6\u95f4\uff08i++\uff09\uff0c\u5bf9\u6bcf\u4e2a\u65f6\u95f4\u70b9\u90fd\u5224\u65ad\u662f\u5426\u4f1a\u53d1\u751f\u201c\u4e8b\u4ef6\u201d\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u8fd9\u6837\u7684\u6a21\u62df\u65b9\u6cd5\u5f53\u7136\u5f88\u7a33\u59a5\uff0c\u4e0d\u592a\u53ef\u80fd\u51fa\u9519\uff0c\u4ee3\u7801\u5199\u8d77\u6765\u4e5f\u7b80\u5355\uff0c\u4f46\u662f\u5f31\u70b9\u4e5f\u5f88\u660e\u663e\uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u7531\u4e8e\u9898\u76ee\u6570\u636e\u5e76\u6ca1\u6709\u660e\u786e\u7ed9\u51fa\u6700\u540e\u4e00\u4e2a\u8fdb\u7a0b\u7ed3\u675f\u65f6\u95f4\u7684\u6700\u5927\u503c\uff0c\u800c\u8fd9\u79cd\u6a21\u62df\u65b9\u6cd5\u4e00\u6b21\u5faa\u73af\u53c8\u53ea\u5bf9\u5f53\u524d\u65f6\u95f4+1\uff0c\u5faa\u73af\u6b21\u6570\u5f88\u53ef\u80fd\u662f\u4e00\u4e2a\u6781\u5927\u7684\u6570\u503c\uff0c\u5c06\u5bfc\u81f4\u8d85\u65f6\uff0c\u56e0\u6b64\u8fd9\u79cd\u6a21\u62df\u65b9\u6cd5\u4e0d\u53ef\u53d6\u3002\n\n- \u867d\u7136\u5982\u6b64\uff0c\u4f46\u8fd9\u79cd\u521d\u6b65\u7684\u65b9\u6848\u5374\u80fd\u7ed9\u6211\u4eec\u6307\u51fa\u4e00\u79cd\u601d\u8def\uff1a\u5c06\u7a0b\u5e8f\u7684\u6ce8\u610f\u529b\u653e\u5728\u53ef\u80fd\u53d1\u751f\u201c\u4e8b\u4ef6\u201d\u7684\u65f6\u95f4\u70b9\u4e0a\u3002\u5728\u521d\u6b65\u7684\u65b9\u6848\u4e2d\uff0c\u6b63\u662f\u7531\u4e8e\u65e0\u6cd5\u80af\u5b9a\u4ec0\u4e48\u65f6\u5019\u4f1a\u53d1\u751f\u201c\u4e8b\u4ef6\u201d\uff0c\u56e0\u6b64\u5c06\u6ce8\u610f\u529b\u653e\u5728\u4e86\u6bcf\u4e2a\u65f6\u95f4\u70b9\u4e0a\uff0c\u624d\u5bfc\u81f4\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8fc7\u5927\u3002\n\n- \u90a3\u4e48\uff0c\u4ec0\u4e48\u65f6\u5019\u53ef\u80fd\u53d1\u751f\u201c\u65f6\u95f4\u201d\u5462\uff1f\u6709\u5f53\u524d\u8fdb\u7a0b\u7ed3\u675f\uff0c\u65b0\u8fdb\u7a0b\u5230\u8fbe\uff0c\u53ea\u6709\u8fd9\u4e24\u79cd\u60c5\u51b5\u6709\u53ef\u80fd\u89e6\u53d1\u201c\u4e8b\u4ef6\u201d\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5176\u4e2d\u8fd8\u6d89\u53ca\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u201c\u62a2\u593a\u201d\u7b49\u8bb8\u591a\u590d\u6742\u7684\u56e0\u7d20\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u96be\u4ee5**\u5e73\u7b49\uff0c\u5e76\u884c\u5730**\u540c\u65f6\u5173\u6ce8\u8fd9\u4e24\u79cd\u60c5\u51b5\u7684\u53d1\u751f\uff0c\u56e0\u6b64\u8981\u4ee5\u5176\u4e2d\u4e00\u79cd\u60c5\u51b5\u7684\u53d1\u751f\u65f6\u95f4\u70b9\u4e3a\u8fb9\u754c\uff0c\u89c2\u5bdf\u53e6\u4e00\u79cd\u60c5\u51b5\u5730\u53d1\u751f\u3002\u7efc\u5408\u8003\u8651\u4e0b\u6765\uff0c\u6211\u4eec\u9009\u5b9a\u4ee5\u5f53\u524d\u8fdb\u7a0b\u7684\u7ed3\u675f\u65f6\u95f4\u4e3a\u8fb9\u754c\uff0c\u89c2\u5bdf\u65b0\u8fdb\u7a0b\u7684\u5230\u8fbe\u3002\n\n**\uff08\u63a5\u4e0b\u6765\u7684\u6587\u5b57\u8bf7\u548c\u7a0b\u5e8f\u6309\u7167\u76f8\u540c\u987a\u5e8f\u4e00\u5e76\u9605\u8bfb\uff0c\u5404\u4e2a\u91cd\u8981\u53d8\u91cf\u4ee3\u8868\u7684\u610f\u4e49\u90fd\u6709\u6ce8\u91ca\uff09**\n\n- \u5728\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u662f\u666e\u901a\u961f\u5217\uff0c\u53e6\u4e00\u4e2a\u662f\u4ee5\u8fdb\u7a0b\u4f18\u5148\u7ea7\u4e3a\u9996\u8981\u6392\u5217\u5173\u952e\u5b57\uff0c\u5230\u8fbe\u65f6\u95f4\u4e3a\u6b21\u8981\u6392\u5217\u5173\u952e\u5b57\u7684\u4f18\u5148\u961f\u5217\u3002\u666e\u901a\u7684\u961f\u5217\u662f\u4e3a\u4e86\u5b58\u50a8\u548c\u4f7f\u7528\u65b9\u4fbf\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u4ee3\u66ff\u3002\u800c\u4f18\u5148\u961f\u5217\u5219\u662f\u89e3\u9898\u7684\u6838\u5fc3\uff0c\u800c\u4f18\u5148\u961f\u5217\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff08\u624b\u5199\uff09\u5806\u4ee3\u66ff\u3002\n\n- \u9996\u5148\uff0c\u4ece\u666e\u901a\u961f\u5217\u4e2d\u8bfb\u5165\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u4f5c\u4e3a\u5f53\u524d\u8fdb\u7a0b\u3002\n\n- \u63a5\u4e0b\u6765\u8fdb\u5165\u5faa\u73af\u4e2d\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5f53\u524d\u8fdb\u7a0b\uff0c\u6211\u4eec\u5148\u5c06\u201c\u5230\u8fbe\u65f6\u95f4\u201d\u5728\u5f53\u524d\u8fdb\u7a0b\u7684\u201c\u7ed3\u675f\u65f6\u95f4\u201d\u4e4b\u524d\u7684\u6240\u6709\u8fdb\u7a0b\u4e0d\u65ad\u4ece\u666e\u901a\u961f\u5217\u52a0\u5165\u4f18\u5148\u961f\u5217\uff08\u5373\u201d\u4ee5\u5f53\u524d\u8fdb\u7a0b\u7684\u7ed3\u675f\u65f6\u95f4\u4e3a\u8fb9\u754c\uff0c\u89c2\u5bdf\u65b0\u8fdb\u7a0b\u7684\u5230\u8fbe\u201c\uff09\uff0c\u540c\u65f6\u6bcf\u5411\u4f18\u5148\u961f\u5217\u52a0\u5165\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5c31\u5c1d\u8bd5\u7528\u961f\u9996\u8fdb\u7a0b\u5bf9\u5f53\u524d\u8fdb\u7a0b\u8fdb\u884c\u201d\u62a2\u593a\u201c\uff08\u62a2\u593a\u7684\u542b\u4e49\u89c1\u5f00\u5934\u7b2c\u4e8c\u884c\u7684\u8bf4\u660e\uff09\u3002\u5982\u679c\u62a2\u593a\u6210\u529f\uff0c\u5219\u5c06\u5f53\u524d\u8fdb\u7a0b\u9700\u8981\u7684\u6267\u884c\u65f6\u95f4\u51cf\u53bb\u5176\u5df2\u7ecf\u8fd0\u884c\u4e86\u7684\u65f6\u95f4\uff0c\u7136\u540e\u5c06\u5176\u52a0\u5165\u4f18\u5148\u961f\u5217\u7b49\u5f85\uff0c\u540c\u65f6\u5c06\u62a2\u593a\u6210\u529f\u7684\u4f18\u5148\u961f\u5217\u961f\u9996\u53d8\u4e3a\u5f53\u524d\u8fdb\u7a0b\u3002\u6ce8\u610f\u8fd9\u65f6\u8bbe\u7f6e\u7684\u8fb9\u754c\uff0c\u201d\u5f53\u524d\u8fdb\u7a0b\u7684\u7ed3\u675f\u65f6\u95f4\u201c\uff0c\u4e5f\u968f\u7740\u5f53\u524d\u8fdb\u7a0b\u7684\u66ff\u6362\u800c\u6539\u53d8\uff0c\u7b26\u5408\u4e86\u6a21\u62df\u7684\u903b\u8f91\u3002\n\n- \u5bf9\u5f53\u524d\u8fdb\u7a0b\u7684\u4e00\u8f6e\u62a2\u593a\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u8fdb\u5165\u5224\u65ad\u9636\u6bb5\u3002\n\n\uff081\uff09\u5982\u679c\u5f53\u524d\u4f18\u5148\u961f\u5217\u4e0d\u4e3a\u7a7a\u3002\u8fd9\u91cc\u4e3a\u4e86\u9632\u6b62\u903b\u8f91\u53ef\u80fd\u7684\u6df7\u4e71\uff0c\u6211\u505a\u4e86\u4e00\u4e2a\u4fdd\u9669\uff0c\u518d\u4e00\u6b21\u5c1d\u8bd5\u7528\u961f\u9996\u8fdb\u7a0b\u5bf9\u5f53\u524d\u8fdb\u7a0b\u8fdb\u884c\u4e00\u6b21\u62a2\u593a\u3002\u62a2\u593a\u5931\u8d25\u7684\u8bdd\uff0c\u5c31\u5c06\u5f53\u524d\u8fdb\u7a0b\u4e00\u76f4\u6267\u884c\u5230\u5176\u7ed3\u675f\u5e76\u8f93\u51fa\u7b54\u6848\u3002\u7531\u4e8e\u4e4b\u524d\u5df2\u7ecf\u5c06\u5230\u8fbe\u65f6\u95f4\u5c0f\u4e8e\u5f53\u524d\u8fdb\u7a0b\u7ed3\u675f\u65f6\u95f4\u7684\u6240\u6709\u8fdb\u7a0b\u90fd\u52a0\u5165\u4e86\u4f18\u5148\u961f\u5217\uff0c\u56e0\u6b64\u5f53\u62a2\u593a\u5931\u8d25\u540e\uff0c\u53ef\u4ee5\u80af\u5b9a\u5728\u5f53\u524d\u8fdb\u7a0b\u7ed3\u675f\u4e4b\u524d\u4e0d\u4f1a\u6709\u201c\u4e8b\u4ef6\u201d\u53d1\u751f\u3002\u5f53\u524d\u8fdb\u7a0b\u7ed3\u675f\u540e\uff0c\u7531\u4e8e\u6211\u4eec\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u5bf9\u6bcf\u4e2a\u201c\u5f53\u524d\u8fdb\u7a0b\u201d\u90fd\u8981\u8fdb\u884c\u4e00\u8f6e\u62a2\u593a\uff0c\u56e0\u6b64\u4e0d\u7528\u8003\u8651\u5c06\u666e\u901a\u961f\u5217\u961f\u9996\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u201c\u5f53\u524d\u8fdb\u7a0b\u201d\uff0c\u800c\u662f\u76f4\u63a5\u5c06\u4f18\u5148\u961f\u5217\u961f\u9996\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u201c\u5f53\u524d\u8fdb\u7a0b\u201d\u5373\u53ef\u3002\uff08\u56e0\u4e3a\u5982\u679c\u5c06\u666e\u901a\u961f\u5217\u961f\u9996\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u201c\u5f53\u524d\u8fdb\u7a0b\u201d\u624d\u662f\u6b63\u786e\u505a\u6cd5\u7684\u8bdd\uff0c\u4f18\u5148\u961f\u5217\u961f\u9996\u5c31\u4e00\u5b9a\u4f1a\u5728\u4e0b\u4e00\u6b21\u62a2\u593a\u5224\u5b9a\u65f6\u906d\u5230\u62a2\u593a\uff0c\u56e0\u6b64\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff09\u3002\n\n\uff082\uff09\u5982\u679c\u5f53\u524d\u4f18\u5148\u961f\u5217\u4e3a\u7a7a\u3002\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u76f4\u63a5\u5c06\u666e\u901a\u961f\u5217\u961f\u9996\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u201c\u5f53\u524d\u8fdb\u7a0b\u201d\u3002\n\n- \u6700\u540e\uff0c\u7531\u4e8e\u53d1\u751f\u62a2\u593a\u65f6\u6211\u4eec\u5e76\u4e0d\u4f1a\u8f93\u51fa\u4efb\u4f55\u7b54\u6848\uff0c\u56e0\u6b64\u5f53\u666e\u901a\u961f\u5217\u4e2d\u7684\u8fdb\u7a0b\u5df2\u7ecf\u5168\u90e8\u51fa\u961f\u65f6\u6709\u4e00\u90e8\u5206\u8fdb\u7a0b\u4ecd\u5728\u4f18\u5148\u961f\u5217\u4e2d\u3002\u8fd9\u65f6\u5019\u4e0d\u7528\u518d\u8003\u8651\u662f\u5426\u53d1\u751f\u62a2\u593a\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4f18\u5148\u961f\u5217\u7684\u51fa\u961f\u987a\u5e8f\u88ab\u6211\u4eec\u8bbe\u7f6e\u6210\u4f18\u5148\u7ea7\u5927\u7684\u5148\u51fa\u3002\u4e0d\u65ad\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\u6ce8\u610f\u5f53\u4f18\u5148\u961f\u5217\u4e5f\u7a7a\u4e86\u7684\u65f6\u5019\uff0c\u4ecd\u6709\u4e00\u4e2a\u8fdb\u7a0b\u88ab\u4f5c\u4e3a\u201c\u5f53\u524d\u8fdb\u7a0b\u201d\u800c\u6ca1\u6709\u8f93\u51fa\uff0c\u56e0\u6b64\u8981\u505a\u6700\u540e\u7684\u4e00\u6b21\u8f93\u51fa\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstdlib>\n#include<queue>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nstruct process\n{\n    int no,reach,time,prio;//no\u4ee3\u8868\u8fdb\u7a0b\u53f7\uff0creach\u4ee3\u8868\u5230\u8fbe\u65f6\u95f4\uff0ctime\u8868\u793a\u6267\u884c\u9700\u8981\u7684\u65f6\u95f4\uff0cprio\u4ee3\u8868\u4f18\u5148\u7ea7\n}re;\nbool operator<(const process a,const process b)\n{\n    if(a.prio==b.prio)\n    {\n        return a.reach>b.reach;\n    }\n    else\n    {\n        return a.prio<b.prio;\n    }\n```\n}//\u4ee5prio\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0creach\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u4f18\u5148\u961f\u5217\n```cpp\npriority_queue<process>p;\nqueue<process> q;\nint main()\n{\n    int start,num,need,which,pri,mem;//which\u4ee3\u8868**\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b**\u7684\u8fdb\u7a0b\u53f7\uff0cstart\u4ee3\u8868\u5176\u5f00\u59cb\u65f6\u95f4\uff0cmem\u4ee3\u8868\u5176\u5230\u8fbe\u65f6\u95f4\uff08\u91cd\u65b0\u5165\u961f\u65f6\u7528\u5230\uff09\uff0cneed\u4ee3\u8868\u5176\u6267\u884c\u9700\u8981\u65f6\u95f4\uff0cpri\u4ee3\u8868\u5176\u4f18\u5148\u7ea7\u3002\n    while(scanf(\"%d\",&num)!=EOF)\n    {\n        re.no=num;\n        scanf(\"%d%d%d\",&re.reach,&re.time,&re.prio);\n        q.push(re);\n    }\n    which=q.front().no;\n    need=q.front().time;\n    pri=q.front().prio;\n    start=q.front().reach;\n    mem=q.front().reach;\n    q.pop();\n    while(q.empty()==0)\n    {\n        for(;q.front().reach<(start+need)&&q.empty()==0;)\n        {\n            p.push(q.front());\n            q.pop();\n            if(p.top().prio>pri)\n            {\n                need-=(p.top().reach-start);\n                re.time=need;\n                re.reach=mem;\n                re.no=which;\n                re.prio=pri;\n                p.push(re);\n                which=p.top().no;\n                need=p.top().time;\n                start=p.top().reach;\n                mem=p.top().reach;\n                pri=p.top().prio;\n                p.pop();\n            }\n        }\n        if(p.empty()==0)\n        {\n            if(p.top().prio>pri)\n            {\n                need-=(p.top().reach-start);\n                re.time=need;\n                re.reach=mem;\n                re.no=which;\n                re.prio=pri;\n                p.push(re);\n                which=p.top().no;\n                need=p.top().time;\n                start=p.top().reach;\n                mem=p.top().reach;\n                pri=p.top().prio;\n                p.pop();\n            }\n            else\n            {\n                printf(\"%d %d\\n\",which,need+start);\n                start=need+start;\n                which=p.top().no;\n                need=p.top().time;\n                mem=p.top().reach;\n                pri=p.top().prio;\n                p.pop();\n            }\n        }\n        else if(q.empty()==0)\n        {\n            printf(\"%d %d\\n\",which,need+start);\n            which=q.front().no;\n            need=q.front().time;\n            pri=q.front().prio;\n            start=q.front().reach;\n            mem=q.front().reach;\n            q.pop();\n        }\n    }\n    while(p.empty()==0)\n    {\n        printf(\"%d %d\\n\",which,need+start);\n        start=need+start;\n        which=p.top().no;\n        need=p.top().time;\n        p.pop();\n    }\n    printf(\"%d %d\\n\",which,need+start);\n    return 0;\n}\n```",
        "postTime": 1509611099,
        "uid": 53927,
        "name": "YangQuijote",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u662f\u6a21\u62df + \u5806\u3002\n\n\u5176\u5b9e\u6a21\u62df\u8fc7\u7a0b\u5927\u5bb6\u90fd\u6709\u601d\u8def\uff0c\u95ee\u9898\u662f\u5982\u4f55\u5b9e\u73b0\u3002\n\n\u4e0b\u9762\u7ed9\u5927\u5bb6\u5206\u4eab\u6211\u7684\u601d\u8def\uff1a\n\n1.\u7531\u4e8e\u5230\u8fbe\u65f6\u95f4\u662f\u6392\u597d\u5e8f\u4e86\u7684\uff0c\u53ef\u4ee5\u8fb9\u8f93\u8fb9\u5904\u7406\u3002\n\n2.\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u7ed3\u6784\u4f53\u91cc\u5b9a\u4e49\u4e00\u4e2ahasmade\uff08\u5df2\u5b8c\u6210\u7684\u90e8\u5206\uff09\uff0c\u4fbf\u4e8e\u8ba1\u7b97\u3002\n\n3.\u4fdd\u5b58\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5230\u8fbe\u65f6\u95f4\uff0c\u5f53\u524d\u8fdb\u7a0b\u4e0e\u5176\u503c\u4e4b\u5dee\u53ef\u4ee5\u7528\u6765\u5904\u7406\u5f53\u524d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8fdb\u7a0b\uff08\u5373\u6539\u53d8\u5176hasmade\uff0c hasmade\u6ee1\u4e86\u540e\u8f93\u51fa\uff0c\u5e76\u6267\u884c\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\uff09\u3002\n\n4.\u5f53\u8fdb\u7a0b\u5168\u90e8\u5230\u8fbe\u65f6\uff0c\u8fdb\u884c\u6700\u540e\u5904\u7406\uff0c\u4e5f\u5f88\u7b80\u5355\uff0c\u6309\u987a\u5e8f\u7d2f\u52a0\u65f6\u95f4\u5373\u53ef\u3002\n\nPS\uff1a\u6700\u91cd\u8981\u7684\u662f\u4e0d\u80fd\u5ffd\u7565hasmade\uff01\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <queue>\nusing namespace std;\nint n;\nstruct node\n{\n\tint xh, begin, time, yxj, hasmade, ans;\n\tfriend bool operator < (node a, node b)  //\u4f18\u5148\u961f\u5217\u91cd\u8f7d \n    {  \n        if (a.yxj != b.yxj) return a.yxj < b.yxj;\n        else return a.xh > b.xh;\n    }\n}a[2000005];\npriority_queue <node> q;\nint main()\n{\n\tint i = 1, t, lt = 0;//lt\u4fdd\u5b58\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5230\u8fbe\u65f6\u95f4\uff0c\u521d\u59cb\u5316\u4e3a0 \n\twhile(scanf(\"%d %d %d %d\", &a[i].xh, &a[i].begin, &a[i].time, &a[i].yxj) != EOF)\n\t{\n\t\tt = a[i].begin;//t\u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u5230\u8fbe\u65f6\u95f4 \n\t\twhile(!q.empty())//\u82e5CPU\u4e2d\u8fd8\u6709\u8fdb\u7a0b\u5728\u5904\u7406\uff0c \u5229\u7528lt - t\u7684\u65f6\u95f4\u5904\u7406 \n\t\t{\n\t\t    node p = q.top();\n\t\t    if (max(lt, p.begin) + p.time - a[p.xh].hasmade <= t) //\u82e5\u80fd\u5728lt - t\u7684\u65f6\u95f4\u5185\u5904\u7406\u5b8c\uff0c\u8f93\u51fa \n\t\t    {\n\t\t    \ta[p.xh].ans = max(lt, p.begin) + p.time - a[p.xh].hasmade;\n\t\t    \tprintf(\"%d %d\\n\", p.xh, a[p.xh].ans);\n\t\t    \tlt = a[p.xh].ans;\n\t\t    \tq.pop();\n\t\t\t}\n\t\t\telse //\u4e0d\u7136\u5c31\u66f4\u65b0\u4e00\u4e0b\u5176hasmade \n\t\t\t{\n\t\t\t\ta[p.xh].hasmade += t - max(lt, p.begin);\n\t\t\t\tlt = t;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tq.push(a[i]);//\u52a0\u5165\u5f53\u524d\u68c0\u67e5 \n\t\tlt = t;\n\t\ti++;\n\t}\n\twhile(!q.empty())//\u6700\u540e\u5904\u7406 \n\t{\n\t\tnode p = q.top();\n\t\ta[p.xh].ans = max(lt, p.begin) + a[p.xh].time - a[p.xh].hasmade;\n\t\t//\u6ce8\u610fmax(lt, p.begin)\uff0c\u665a\u5230\u665a\u5904\u7406\uff0c\u65e9\u5230\u4e5f\u5f97\u7b49\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u5904\u7406\u5b8c \n\t\tprintf(\"%d %d\\n\", p.xh, a[p.xh].ans);\n\t\tq.pop();\n\t\tlt = a[p.xh].ans;\n\t}\n\treturn 0; \n}\n```\n\u8c22\u8c22\u5927\u5bb6\uff01",
        "postTime": 1538493260,
        "uid": 66316,
        "name": "\u8d1e\u767d\u94c1\u6218\u9038",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u5927\u5bb6\u543c\uff0c\u6211\u662f\u4e00\u4e2a\u61d2\u4eba\uff0c\u4e0d\u613f\u610f\u4ed4\u7ec6\u601d\u8003\u6b63\u89e3\u3002\n\n\u4e8e\u662f\u6211\u5c31\u7528\u73c2\u6735\u8389\u6811A\u4e86\u5b83\u3002\n\n\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u628a\u8fd9\u4e00\u5806\u4efb\u52a1\u4ee5\u4f18\u5148\u7ea7\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff08\u964d\u5e8f\uff09\uff0c\u5230\u8fbe\u65f6\u95f4\uff08\u5347\u5e8f\uff09\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u4e00\u4e2a\u5e8f\u3002\u90a3\u4e48\u6392\u5728\u540e\u9762\u7684\u4efb\u52a1\u65e0\u8bba\u5982\u4f55\u90fd\u62a2\u4e0d\u4e86\u6392\u5728\u524d\u9762\u7684\u4efb\u52a1\u7684\u65f6\u95f4\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5c31\u7528\u73c2\u6735\u8389\u6811\u6765\u7ef4\u62a4\u65f6\u95f4\u7684\u5360\u7528\u60c5\u51b5\uff0c\u7b80\u5355\u6a21\u62df\u5373\u53ef\u3002\n\n\u5173\u4e8e\u73c2\u6735\u8389\u6811\uff0c\u8fd9\u662f\u4e00\u79cd\u66b4\u529b\u7684\u6570\u636e\u7ed3\u6784\uff08\u5efa\u7acb\u5728set\u4e0a\uff09\uff0c\u4e2d\u5fc3\u601d\u60f3\u5c31\u662f\u628a\u4e00\u6bb5\u5177\u6709\u76f8\u540c\u6027\u8d28\u7684\u533a\u95f4\u7f29\u6210set\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\uff08\u5f53\u7136\u8fd9\u4e2a\u9898\u91cc\u5c31\u662f\u8fd9\u4e00\u79d2\u662f\u5426\u88ab\u5360\u7528\uff0c\u7528flag=1/0\u6765\u8868\u793a\uff09\uff0c\u7136\u540e\u4e0d\u505c\u5730\u5206\u88c2\u533a\u95f4\u548c\u5408\u5e76\u533a\u95f4\u3002\u5efa\u8bae\u4e0d\u4e86\u89e3\u7684\u53bb\u505a\u4e00\u505a\u8fd9\u9053\u9898 [\u73c2\u6735\u8389\u6811\u5165\u95e8\u9898](https://www.luogu.org/problemnew/show/CF896C)\uff0c\u522b\u88ab\u8bc4\u7ea7\u5413\u5230\uff0c\u4e0d\u96be\u3002\n\n\u7136\u540e\u6211\u60f3\u8bf4\u4f60\u4eec\u4f1a\u53d1\u73b0\u5927\u5bb6\u4e00\u822c\u90fd\u662f\u5148\u5206\u88c2\u53f3\u8fb9\u518d\u5206\u88c2\u5de6\u8fb9\uff0c\u5e76\u4e14\u79f0\u4e4b\u4e3a\u73c2\u5b66\u5b9a\u5f8b\u3002\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\uff0c\u5982\u679c\u5148\u5206\u88c2\u5de6\u8fb9\u518d\u5206\u88c2\u53f3\u8fb9\uff0c\u53f3\u8fb9\u6709\u53ef\u80fd\u628a\u5de6\u6307\u9488\u6307\u5411\u7684\u533a\u95f4\u53c8\u7ed9\u5206\u4e86\uff0c\u4e8e\u662f\u5de6\u6307\u9488\u5c31\u51c9\u4e86\uff0c\u6240\u4ee5\u4e0d\u884c\u3002\n\n\u4e0a\u4ee3\u7801\uff0c\u6211\u89c9\u5f97\u5de8\u597d\u61c2\u3002\n```cpp\n#include<bits/stdc++.h>\n#define IT std::set<Node>::iterator\nusing namespace std;\nstruct node {\n\tlong long id,s,t,p,e;\n\tnode(long long id=0,long long s=0,long long t=0,long long p=0):id(id),s(s),t(t),p(p) {}\n\tfriend bool operator <(node x,node y) {\n\t\tif(x.p!=y.p)return x.p<y.p;\n\t\telse return x.s>y.s;\n\t}\n};\nstd::priority_queue<node>Q;\nnode v[1000005];\nlong long cnt;\nstruct Node {\n\tlong long l,r;\n\tbool flag;\n\tNode(long long l=0,long long r=0,bool flag=0):l(l),r(r),flag(flag) {}\n\tfriend bool operator <(Node x,Node y) {\n\t\treturn x.l<y.l;\n\t}\n};\nstd::set<Node>S;\nIT split(long long pos) {\n\tIT x=S.lower_bound(Node(pos,0,0));\n\tif(x!=S.end()&&x->l==pos)return x;\n\t--x;\n\tNode u=*x;\n\tS.erase(x);\n\tS.insert(Node(u.l,pos-1,u.flag));\n\treturn S.insert(Node(pos,u.r,u.flag)).first;\n}\nint main() {\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tlong long id,s,t,p;\n\tS.insert(Node(1,LONG_LONG_MAX,0));\n\tios::sync_with_stdio(false);\n\twhile(cin>>id>>s>>t>>p)\n\t\tQ.push(node(id,s,t,p));\n\twhile(!Q.empty()) {\n\t\tnode u=Q.top();\n\t\tQ.pop();\n\t\tIT r=split(u.s+1);\n\t\twhile(r->flag)++r;\n\t\tlong long nl=r->l;\n\t\twhile(r->flag||r->r-r->l+1<u.t) {\n\t\t\tif(!r->flag)u.t-=r->r-r->l+1;\n\t\t\t++r;\n\t\t}\n\t\tr=split(r->l+u.t);\n\t\tIT l=split(u.s+1);\n\t\twhile(true) {\n\t\t\tIT j=l;\n\t\t\tl--;\n\t\t\tif(!l->flag) {\n\t\t\t\tl=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tlong long ll=l->l,nr=r->l-1;\n\t\tS.erase(l,r);\n\t\tS.insert(Node(ll,nr,1));\n\t\tv[cnt++]=(node(u.id,0,0,nr));\n\t}\n\tsort(v,v+cnt);\n\tfor(long long i=0; i<cnt; i++) {\n\t\tcout<<v[i].id<<\" \"<<v[i].p<<endl;\n\t}\n\treturn 0;\n}\n```\nps\uff1a\u6211\u662f\u5438\u4e86\u6c27\u7684\u3002\u4e0d\u8fc7\u6211jio\u5f97\u6253\u4e2a\u5feb\u8bfb\u5e94\u8be5\u5c31\u4e0d\u7528\u4e86\u5427\u3002",
        "postTime": 1559463466,
        "uid": 109396,
        "name": "Uniecho1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65f6\u95f4\u7ed3\u70b9\uff0c\u53ea\u6709\u53ef\u80fd\u505a\u4ee5\u4e0b\u7684\u4e8b\uff1a\n\n1. \u521a\u505a\u5b8c\u4e00\u4e2a\u4efb\u52a1\n\n\t\u8f93\u51fa\u8fdb\u7a0b\u53f7\u548c\u76ee\u524d\u7684\u65f6\u95f4\n\n\t- \u5f53\u961f\u5217\u91cc\u6709\u4efb\u52a1\uff1a\u627e\u5230\u961f\u5217\u91cc\u4f18\u5148\u7ea7\u6700\u5927\u7684\uff0c\u8fdb\u5165$case3$\n    \n    - \u961f\u5217\u6ca1\u6709\u4efb\u52a1\uff1a\u8fdb\u5165\u4e0b\u4e00\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\uff0c\u8fdb\u5165$case2$\n    \n2. \u6765\u4e86\u65b0\u7684\u4efb\u52a1\n\n\t- \u505c\u6b62\u6b63\u5728\u8fdb\u884c\u7684\u4efb\u52a1\uff0c\u5c06\u65b0\u7684\u4efb\u52a1\u653e\u8fdb\u961f\u5217\uff0c\u53d6\u51fa\u961f\u5217\u91cc\u4f18\u5148\u7ea7\u6700\u5927\u7684\uff0c\u8fdb\u5165$case3$\n    \n3. \u6b63\u5f00\u59cb\u505a\u4e00\u4ef6\u4efb\u52a1\n\n\t- \u82e5\u5728\u4e0b\u4e00\u4e2a\u4efb\u52a1\u4e4b\u524d\u80fd\u505a\u5b8c\uff1a\u5f53\u524d\u65f6\u95f4\u52a0\u4e0a\u6b64\u4efb\u52a1\u9700\u8981\u7684\u65f6\u95f4\uff0c\u628a\u6b64\u4efb\u52a1\u5f39\u51fa\u961f\u5217\uff0c\u8fdb\u5165$case1$\n    \n    - \u82e5\u65e0\u6cd5\u5728\u4e0b\u4e00\u4e2a\u4efb\u52a1\u4e4b\u524d\u505a\u5b8c\u4efb\u52a1\uff1a\u65f6\u95f4\u51cf\u53bb\u6700\u591a\u80fd\u505a\u7684\u65f6\u95f4\uff0c\u5f53\u524d\u65f6\u95f4\u4e5f\u540c\u6837\u52a0\u4e0a\u8fd9\u4e48\u591a\uff0c\u8fdb\u5165$case1$\n    \n\u9898\u610f\u73b0\u5728\u975e\u5e38\u663e\u7136\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n- \u6bcf\u4e2a\u4efb\u52a1\u6700\u591a\u8fdb\u5165\u961f\u5217$1$\u6b21\uff0c\u5e72\u6270\u8fdb\u7a0b$1$\u6b21\uff0c\u5f39\u51fa\u961f\u5217$1$\u6b21\n\n- \u961f\u5217\u662f\u4f18\u5148\u961f\u5217\n\n\u5982\u679c\u6211\u4eec\u7528\u6700\u6734\u7d20\u7684\u65b9\u6cd5\uff0c\u65f6\u95f4\u9700\u8981$\\Theta(NM)$\uff08$N$\u4e3a\u4efb\u52a1\u603b\u4e2a\u6570\uff0c$M$\u4e3a\u961f\u5217\u5185\u6700\u591a\u6709\u591a\u5c11\u4e2a\u5143\u7d20\uff09\n\n\u8fd9\u6837\u660e\u663e\u662f\u8981\u8d85\u65f6\u7684\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528$STL$\u7684\u4f18\u5148\u961f\u5217\u6216\u624b\u5199\u5806\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\Theta(NlogM)$\uff0c\u521a\u597d\u80fd\u8fc7\n\n### \u6ce8\u610f\u4e8b\u9879\n\n- \u5982\u4f55\u5199$STL$\u4f18\u5148\u961f\u5217\u7684\u6bd4\u8f83\n\n\u5728\u7ed3\u6784\u4f53\u5185\u9996\u5148\u5199\u4e0a\u4ee5\u4e0b\u4ee3\u7801\uff08\u7801\u98ce\u81ea\u884c\u51b3\u5b9a\uff0c\u53ea\u662f\u6ce8\u610f\u4e0d\u8981$CE$\uff09\uff08$hh$\u4e3a\u7ed3\u6784\u4f53\u540d\u79f0\uff09\uff1a\n\n```cpp\nfriend bool operator < (const hh&x,const hh&y){\n\t\n}\n```\n\n\u62ec\u53f7\u5916\u76f8\u5f53\u4e8e\u51fd\u6570\u7684\u58f0\u660e\uff0c\u91cc\u9762\u9700\u8981\u4f60\u8fd4\u56de\u4e00\u4e2a```bool```\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4e00\u822c~~\u6b63\u5e38\u4eba~~\u53ea\u4f1a\u6bd4\u8f83\u5927\u5c0f\n\n\u82e5\u4f60\u8fd4\u56de\u8fd9\u79cd\u4e1c\u897f```x.v<y.v```\uff0c\u6b64\u961f\u5217\u4f1a\u6309$v$\u7684\u4ece\u5927\u5230\u5c0f\u6392\u5217\n\n\u82e5\u4f60\u8fd4\u56de\u8fd9\u79cd\u4e1c\u897f```x.v>y.v```\uff0c\u6b64\u961f\u5217\u4f1a\u6309$v$\u7684\u4ece\u5c0f\u5230\u5927\u6392\u5217\n\n\u5373\u5927\u4e8e\u53f7\u4f1a\u6309\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u5c0f\u4e8e\u53f7\u4f1a\u6309\u5173\u952e\u5b57\u4ece\u5927\u5230\u5c0f\u6392\u5217\n\n- \u9700\u8981\u8f93\u51fa\u7684\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5b8c\u6210\u65f6\u95f4\n\n\u82e5\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5f00\u59cb\u65f6\u95f4\u4e3a$x$\uff0c\u9700\u8981\u7528$y$\u65f6\u95f4\u5b8c\u6210\uff0c\u5219\u4f60\u8981\u8f93\u51fa\u7684\u662f$x+y$\uff0c\u800c\u975e$x+y-1$\n\n- \u5982\u4f55\u8f93\u5165\u4e0d\u786e\u5b9a\u6570\u636e\u91cf\u7684\u6570\u636e\n\n\u5982\u679c\u6570\u636e\u4f1a\u6709\u4e00\u4e2a$flag$\u4ee3\u8868\u8f93\u5165\u5b8c\u4e86\uff0c\u90a3\u4e48\u4f60\u4f7f\u7528\u4ec0\u4e48\u8f93\u5165\u90fd\u53ef\u4ee5\n\n\u5982\u679c\u6ca1\u6709\uff0c\u63a8\u8350\u4f7f\u7528```scanf```\uff0c\u5f53\u6ca1\u6709\u8f93\u5165\u540e\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u503c```EOF```\uff0c\u5728```int```\u5f62\u5f0f\u4e0b\u5b83\u662f$-1$\uff0c\u5373\u4f60\u53ef\u4ee5\u5224\u5b9a\u5b83\u662f\u5426\u662f```EOF```\u6216$-1$\u6765\u770b\u662f\u5426\u5c06\u6570\u636e\u8f93\u5165\u5b8c\u6210\n\n\u5f53\u7136\uff0c\u8fd9\u65b9\u6cd5\u65e0\u6cd5\u5728$.exe$\u7a97\u683c\u4e0b\u5b9e\u73b0\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <queue>\nusing namespace std;\nint n,sum,now;\nstruct hh{\n    int id,t,s,x;\n    friend bool operator < (const hh&x,const hh&y){\n        if(x.x!=y.x) return x.x<y.x;\n        return x.t>y.t;\n    }\n}a[100000002]; \npriority_queue<hh> q;\ninline int Min(int x,int y){\n    return x<y?x:y;\n}\nint main(){\n    while(~scanf(\"%d%d%d%d\",&a[n+1].id,&a[n+1].t,&a[n+1].s,&a[n+1].x)) n++;\n    a[n+1].t=0x7fffffff;\n    for(register int i=1;i<=n;i++)\n    {\n        q.push(a[i]);now=a[i].t;\n        while(!q.empty()&&now<a[i+1].t&&sum<n)\n        {\n            hh temp=q.top();q.pop();\n            int x=Min(temp.s,a[i+1].t-now);\n            temp.s-=x;now+=x;\n            if(!temp.s) {printf(\"%d %d\\n\",temp.id,now);sum++;}\n            else q.push(temp);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1561108268,
        "uid": 80679,
        "name": "Register",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u5f00\u4e00\u4e2a\u53d8\u91cfnow\u8bb0\u5f55\u73b0\u5728\u7684\u65f6\u523b\n\n\u8003\u8651 \u5bf9\u4e8e\u6bcf\u6765\u7684\u4e00\u4e2a\u673a\u5668\n\n\u5b83\u5230\u6765\u7684\u65f6\u95f4x \u5982\u679c\u8db3\u591f\u5806\u9876\u7684\u8fdb\u7a0b\u5904\u7406\u5b8c,\u4e00\u76f4\u5904\u7406\u5806\u9876,\u66f4\u65b0now,\u5f39\u51fa\u5806\u9876\n\n\u7136\u540e\u73b0\u5728\u65f6\u523b\u53d8\u6210now'\n\n\u5806\u9876\u7684\u8fdb\u7a0b now'\u548cx\u4e4b\u95f4\u8fd8\u53ef\u80fd\u6709\u4e00\u6bb5\u65f6\u95f4,\u8fd9\u6bb5\u65f6\u95f4\u5904\u7406\u5806\u9876,\u66f4\u65b0\u5806\u9876\u7684\u5269\u4f59\u9700\u8981\u7684\u65f6\u95f4\n\n\u7136\u540e\u63d2\u5165push\u4e00\u4e0b\u5c31\u884c\u4e86...\n\npush\u7684\u65f6\u5019,\u6709\u4e2a\u95ee\u9898,\u5c31\u662f\u9047\u5230\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u8fdb\u7a0b...\n\n\u5982\u679c\u9047\u5230 \u5806\u4e2d\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u8fdb\u7a0b \u4e0d\u662f\u5806\u9876,\u90a3\u4e48\u5230\u6765\u65f6\u95f4\u65e9\u7684\u66f4\u4f18,\u5728\u5806\u4e2d\u9760\u4e0a\u7684\u4f4d\u7f6e\n\n\u5982\u679c \u5806\u4e2d\u4f18\u5148\u7ea7\u76f8\u540c\u7684\u8fdb\u7a0b \u662f\u5806\u9876,\u90a3\u4e48\u5f85\u63d2\u5165\u7684\u65b0\u6765\u7684\u8fdb\u7a0b\u5c31\u5f97\u7b49\u5f85...\n\n\n\n\u7a9d\u6728\u6709\u7528stl,\u624b\u5199\u7684\u5806...\u5e76\u4e0d\u662f\u5f88\u96be,20\u884c+,\u800c\u4e14\u5feb\u54e6....\n\n \n\n\u65f6\u95f4\u590d\u6742\u5ea6 O(m\\*log(n)) m\u662f\u64cd\u4f5c\u6570\n\n\n\n \n \n \n \n     \n \n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define N 40009\nusing namespace std;\nint lheap,x,y,z,now;\nstruct node{int pri,left,num,come;}heap[N];\nbool pd(int x,int y)//\u4f18\u5148\u7ea7\u76f8\u540c\u7684 \u65f6\u95f4\u65e9\u7684\u5148\u5904\u7406\n{\n    return heap[x].pri>heap[y].pri||heap[x].pri==heap[y].pri&&heap[x].come<heap[y].come;\n}\nvoid push(int num,int x,int y,int z)\n{\n    int i=++lheap;\n    heap[i].pri=z,heap[i].left=y,heap[i].num=num,heap[i].come=x;\n    while (i>1)\n        if (pd(i,i/2)&&i/2>=2) swap(heap[i],heap[i/2]),i/=2;//\u548c\u4e0d\u662f\u5806\u9876\u7684\u6bd4\u8f83\n            else if (i/2==1&&heap[i].pri>heap[1].pri) \u548c\u662f\u5806\u9876\u7684\u6bd4\u8f83\n                swap(heap[i],heap[1]),i=1;\n            else return;\n}\nvoid pop()\n{\n    int i=1;\n    printf(\"%d %d\\n\",heap[1].num,heap[1].left+now);\n    now=heap[1].left+now;\n    heap[1]=heap[lheap],lheap--;\n    while (i*2<=lheap)\n        {\n            int p=i*2;\n            if (p+1<=lheap&&pd(p+1,p)) p++;\n            if (pd(p,i)) swap(heap[i],heap[p]),i=p;\n                else return;\n        }\n}\nint main()\n{\n    int i,j,k;\n    while( scanf(\"%d%d%d%d\",&i,&x,&y,&z)!=EOF)\n        {\n            while ( lheap&&heap[1].left<=x-now  ) \n                pop();\n            if (lheap&&(x-now)) \n                heap[1].left-=(x-now);\n            now=x;\n            push(i,x,y,z);\n        }\n    while (lheap) \n        pop();\n}\n\n```",
        "postTime": 1478218997,
        "uid": 18141,
        "name": "a41881147",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u4f60\u8c37\u667a\u9893\u7ed9\u6211\u7684\u9898\u3002\n\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6709\u4f18\u5148\u7ea7\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u5728\u524d\u9762\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u8fdb\u7a0b\u5e8f\u5217\u3002\n\n\u4e8e\u662f\u8003\u8651\u5728\u4e0a\u4e00\u6b21\u8fdb\u7a0b\u5f00\u59cb\u4e0e\u7b2c\u73b0\u5728\u8fdb\u7a0b\u5f00\u59cb\u7684\u8fd9\u4e00\u6bb5\u65f6\u95f4\u662f\u5728\u8fd0\u884c\u90a3\u4e9b\u8fdb\u7a0b\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u4f18\u5148\u7ea7\uff0c\u6240\u4ee5\u76f4\u63a5\u53d6\u51fa\u961f\u9996\uff08\u4f18\u5148\u7ea7\u6700\u5927\uff09\n\n\u5224\u65ad\u5b83\u80fd\u4e0d\u80fd\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u5b8c\u6210\uff0c\u5982\u679c\u53ef\u4ee5\u5b8c\u6210\uff0c\u90a3\u4e48\u770b\u4f18\u5148\u7ea7\u7b2c\u4e8c\uff0c\u4e09\u2026\u2026\uff0c\u5982\u679c\u4e0d\u80fd\u5b8c\u6210\uff0c\u8fd9\u6bb5\u65f6\u95f4\u5b83\u8fd8\u662f\u8981\u8fdb\u884c\uff0c\u4e8e\u662f\u6211\u4eec\u4fee\u6539\u5b83\u8981\u7684\u65f6\u95f4\u5c31\u597d\u4e86\u3002\n\n\n\u53e6\u5916\u5728\u4f18\u5148\u961f\u5217\u91cc\u9762\u4fee\u6539\u65f6\u95f4\u5e76\u4e0d\u597d\u505a\u5230\uff0c\u4f46\u662f\u4f18\u5148\u7ea7\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4f18\u5148\u961f\u5217\u53ea\u8003\u8651\u4f18\u5148\u7ea7\u548c\u7f16\u53f7\uff08\u7f16\u53f7\u5728\u524d\u9762\u8bf4\u660e\u5f00\u59cb\u65f6\u95f4\u5c31\u5728\u524d\u9762\uff09\uff0c\u4fee\u6539\u6240\u9700\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b58\u4e0b\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5c06\u8be5\u7f16\u53f7\u5bf9\u5e94\u7684\u65f6\u95f4\u51cf\u5c31\u597d\u4e86\u3002\u5224\u65ad\u662f\u5426\u80fd\u8fd0\u884c\u7684\u65f6\u5019\u6709\u4e2a\u5c0f\u7ec6\u8282\uff0c\u6211\u4f1a\u5728\u4ee3\u7801\u91cc\u9762\u63d0\u5230\u3002\uff08\u5982\u679c\u770b\u4e0d\u61c2\u8fd9\u4e00\u6bb5\u53ef\u4ee5\u770b\u4ee3\u7801\uff09\n\n```cpp\n#include<touwenjian.h>\n\nusing namespace std;\n\nstruct task{\n\tint st,le,co,bh;\n    // st \u5f00\u59cb\u65f6\u95f4\uff0cle \u4f18\u5148\u7ea7\n    // co \u82b1\u8d39\u65f6\u95f4, bh \u7f16\u53f7\n\tbool operator < (const task& a)\n\tconst{\n\t\tif(a.le!=le) return le<a.le;\n\t\telse return bh>a.bh; \n\t}\n}a[1926514];  //\u7531\u4e8e\u4e0d\u77e5\u9053\u8981\u8bfb\u591a\u5c11\u4e2a\u6570\u5b57\uff0c\u56e0\u6b64\u6211\u4eec\u6570\u7ec4\u5f00\u5927\u4e00\u70b9\n\npriority_queue <task> q;\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tint i=0;\n\tint t,lef=0;\n\twhile(cin>>i)\n\t{\n\t\tcin>>a[i].st>>a[i].co>>a[i].le;\n\t\ta[i].bh=i;\n\t\tt=a[i].st; //\u8fd9\u6b21\u4efb\u52a1\u5f00\u59cb\u7684\u65f6\u95f4\n\t\twhile(!q.empty())\n\t\t{\n\t\t\ttask p=q.top();\n            //lef \u5df2\u7ecf\u5904\u7406\u5230\u7684\u8fdb\u7a0b\u7684\u65f6\u95f4\u70b9\uff08\u5728\u8fd9\u4e2a\u65f6\u95f4\u70b9\u4e4b\u524d\u7684\u4efb\u52a1\u90fd\u8fdb(\u8fc7)\u4e86\u6211\u4eec\u7684\u4f18\u5148\u961f\u5217\uff09\n            //\u4e4b\u6240\u4ee5\u662fmax(lef,p.st)\u662f\u56e0\u4e3a\u6015\u4e00\u4e9b\u4efb\u52a1\n\t\t\tif(max(lef,p.st)+a[p.bh].co<=t)  //p\u73b0\u5728\u7684co\u5e76\u4e0d\u662f\u771f\u6b63\u7684co(\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u4fee\u6539)\n\t\t\t{\n\t\t\t\tcout<<p.bh<<\" \"<<(max(lef,p.st)+a[p.bh].co)<<endl;\n\t\t\t\tlef=max(lef,p.st)+a[p.bh].co;\n\t\t\t\tq.pop();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta[p.bh].co-=(t-max(lef,p.st));\n\t\t\t\tlef=t;\n\t\t\t\tbreak;\n                //\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\u4e0d\u591f\u4e86\uff0c\u6211\u4eec\u53ea\u80fd\u5b8c\u6210\u4e00\u90e8\u5206\uff0c\u4e4b\u540e\u5c31\u6ca1\u6709\u65f6\u95f4\u4e86\uff0c\u76f4\u63a5break\n\t\t\t}\n\t\t}\n\t\tq.push(a[i]);\n\t\tlef=t;\n\t}\n\twhile(!q.empty())\n\t{\n\t\ttask p=q.top();\n\t\tlef=max(lef,p.st)+a[p.bh].co;\n\t\tcout<<p.bh<<\" \"<<lef<<endl;\n\t\tq.pop();\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1575687408,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u4e00\u9053~~\u5927\u6a21\u62df~~\n\n\u9898\u9762\u60f3\u5fc5\u5927\u5bb6\u90fd\u5f88\u6e05\u695a\u4e86\uff0c\u4e00\u5806\u8fdb\u7a0b\u5728\u62a2\u5360\u8d44\u6e90\uff0c\u9664\u4e86\u5148\u6765\u540e\u5230\u7684\u987a\u5e8f\u4ee5\u5916\uff0c\u4f18\u5148\u7ea7\u5927\u7684\u8fd8\u53ef\u4ee5\u63d2\u961f\uff0c\u7a7a\u95f2\u7684\u65f6\u5019\u672a\u7ed3\u675f\u7684\u8fdb\u7a0b\u4f1a\u63d2\u8fdb\u6765\u5360\u7528\u7a7a\u95f2\u7684\u65f6\u95f4\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5bb9\u6613\u5730\u60f3\u5230\uff0c\u6211\u4eec\u5bfb\u627e\u8fd9\u4e2a\u6700\u5927\u7684\u4f18\u5148\u7ea7\u9700\u8981\u4f7f\u7528\u5806\u3002\n\n\u8fd9\u91cc\u5c31\u8981\u6d89\u53ca\u5230\u4e00\u4e2a\u5806\u7684\u6bd4\u8f83\u3002\u5982\u679c\u6211\u4eec\u9009\u7528\u4e86STL\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5904\u7406\u7e41\u6742\u7684\u6bd4\u8f83\u5173\u7cfb\u3002\u8981\u7528\u5230\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d...\n\n```cpp\nstruct Name{\n   int data1,data2,data3;\n   bool operator < (const Name &y) const{\n      return this->data3 < y.data3;\n   }\n   bool operator > (const Name &y) const{\n      return this->data3 > y.data3;\n   }\n};\n```\n\n\u6ca1\u9519\u5c31\u662f\u8fd9\u6837\u7684\uff0c\u4e0a\u9762\u8fd9\u4e2a\u7ed3\u6784\u4f53\u53ef\u4ee5\u6309data3\u6bd4\u8f83\u3002\n\n\u90a3\u4e48\u653e\u4ee3\u7801~\n\n**\u4ee3\u7801\u91cc\u7684\u6ce8\u91ca\u8981\u770b\u54e6**\n\n```cpp\n#include <cstdio>\n#include <queue>\ninline int min(const int &a,const int &b) {\n\treturn a<b? a:b;\n}\n//&\u53d6\u5730\u5740\u76f4\u63a5\u8fd0\u7b97\uff0c\u65e2\u8282\u7701\u7a7a\u95f4\u53c8\u8282\u7ea6\u4e86\u65f6\u95f4\n//\u52a0\u4e0a\u4e00\u4e2aconst\u4fdd\u8bc1\u4e0d\u80fd\u4fee\u6539\n//\u7edd\u5bf9\u4fdd\u9669\nstruct task {\n\tint k,time,y;\n\tbool operator<(const task &x)const {\n\t    if(y==x.y) return k>x.k;\n\t     return y<x.y;\n\t}\n    //\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86const ... & ...\n\tbool operator>(const task &x)const {\n\t    if(y==x.y) return k<x.k;\n\t\t  return y>x.y;  //\u8fd0\u7b97\u7b26\u91cd\u8f7d\n          //\u6ce8\u610f\u8fd9\u91cc\u8fd8\u8981\u6bd4\u8f83\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\u5e8f\u53f7\u4f18\u5148\u6bd4\u8f83\n          //\u6210\u5458\u51fd\u6570,this\u6307\u9488\u5728\u8fd9\u91cc\u53ef\u4ee5\u7701\u7565\n\t}\n} now;\nstd::priority_queue <task> q;\n//\u9ed8\u8ba4\u662f\u5927\u6839\u5806\uff0c\u521a\u597d\u7b26\u5408\u6211\u4eec\u7684\u9700\u6c42\uff0c\u7f3a\u7701\u586b\u5199\u5373\u53ef\n//\u5c0f\u8ddf\u5806\u662f\u8fd9\u6837\u7684std::priority_queue <int,vector<int>,greater<int> > qq;\n//\u5f53\u7136\u6ca1\u7528\nint main() {\n\tint a,b,c,k,tim=0;  //tim\u662f\u65f6\u95f4\u8282\u70b9\n\n\twhile(scanf(\"%d%d%d%d\",&k,&a,&b,&c)!=EOF) {\n\t\twhile(tim<a) {\n        //now\u662f\u7528\u6765\u8bb0\u5f55\u6b63\u5728\u8dd1\u7684\u8fdb\u7a0b\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2aCpu\n        //now.k=0\u7684\u610f\u601d\u662f\u5f53\u524dCPU\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\n        //\u7a7a\u95f2\u65f6\u95f4\u8981\u5229\u7528\u8d77\u6765\u8dd1\u8fdb\u7a0b\n\t\t\tint tmp=min(now.time,a-tim);\n         //\u8fd9\u91cc\u53ef\u4ee5\u907f\u514d\u6700\u540e\u4e00\u6b21\u8dd1\u4e0d\u5b8c\u7684\u60c5\u51b5\n\t\t\ttim+=tmp,now.time-=tmp;\n\t\t\tif(now.time==0) {\n         //\u5982\u679c\u8fdb\u7a0b\u65f6\u95f4\u8dd1\u5b8c\u4e86\n\t\t\t\tif(now.k) printf(\"%d %d\\n\",now.k,tim);\n\t\t\t\tif(!q.empty()) now=q.top(),q.pop();\n\t\t\t\telse {\n             //\u5982\u679c\u961f\u5217\u5df2\u7a7a\u8bf4\u660e\u6ca1\u6709\u8fdb\u7a0b\u53ef\u4ee5\u8dd1\u4e86\uff0c\u76f4\u63a5\u8dd1\u4e0b\u4e00\u4e2a\n             //\u6709\u4e0anow.k=0\u7684\u610f\u601d\u662f\u5f53\u524dCPU\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\n             //\u6240\u4ee5now.k=0\n\t\t\t\t\tnow.k=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t} else break;\n        //\u7a7a\u95f2\u65f6\u95f4\u7528\u5b8c\u4e86\u4e5f\u8981\u9000\u51fa\n\t\t}\n\t\tif(tim<a) tim=a;\n     //\u5176\u5b9e\u8fd9\u884c\u53ef\u4ee5\u548c\u4e0a\u9762\u90a3\u4e2a\u961f\u5217\u5df2\u7a7a\u7684\u5408\u5e76\u6210\u4e00\u53e5\n\t\tif(c>now.y||!now.k) {\n\t\t\tif(now.k) q.push(now);\n\t\t\tnow=(task) { k,b,c };\n        //\u63d2\u8fdb\u6765\u4e00\u4e2a\u4f18\u5148\u7ea7\u5927\u7684(\u6216\u8005CPU\u7a7a\u95f2)\n\t\t} else {\n\t\t\ttask tmp;\n\t\t\ttmp.k=k,tmp.time=b,tmp.y=c;\n\t\t\tq.push(tmp);\n        //\u5426\u5219\u8bb2\u7a76\u5148\u6765\u540e\u5230\n\t\t}\n\t}\n\twhile(!q.empty()) {\n     //\u8fd8\u6709\u6ca1\u505a\u5b8c\u7684\u8fdb\u7a0b\u554a\uff0c\u8fd8\u8981\u6309\u4f18\u5148\u7ea7\u8dd1\u8fdb\u7a0b\n\t\ttim+=now.time;\n\t\tnow.time-=now.time;\n\t\tprintf(\"%d %d\\n\",now.k,tim);\n\t\tnow=q.top();\n\t\tq.pop();\n\t}\n   //\u5f39\u5b8c\u4e4b\u540e\u591a\u51fa\u4e86\u6700\u540e\u4e00\u5757\n\ttim+=now.time;\n\tnow.time-=now.time;\n\tprintf(\"%d %d\\n\",now.k,tim);\n   //\u5f88\u4e0d\u7f8e\u89c2...\n\treturn 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1~\n\n",
        "postTime": 1576498673,
        "uid": 124283,
        "name": "rsjw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "# \u9b3c\u624d\u601d\u8def\n\u4e3b\u8981\u601d\u60f3\uff1a\u5c06\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u4efb\u52a1\u4e4b\u95f4\u7684\u65f6\u95f4\u4e0d\u65ad\u5206\u914d\u7ed9\u5806\u9876\u7684\u4efb\u52a1\n```cpp\n #include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nstruct str{\n\tll id,s,last,w;\n\tbool operator < (const str & tmp)const{\n\t\tif(w==tmp.w)return s>tmp.s;\n\t\treturn w<tmp.w;\n\t}\n}task,rest;\npriority_queue<str>q;\nint main(){\n\tll a,b,c,d;\n\twhile(scanf(\"%lld %lld %lld %lld\",&task.id,&task.s,&task.last,&task.w)!=EOF){\n\t\tif(q.empty()){\n\t\t\tq.push(task);\n\t\t\trest=task;\n\t\t\tcontinue;\n\t\t}\n\t\tstr x=q.top();\n\t\tll time=task.s-rest.s;\n\t\twhile(x.last<=time&&!q.empty()){//\u5206\u914d\u7ed9\u5806\u4e2d\u7684\u4efb\u52a1 \n\t\t\ttime-=x.last;\n\t\t\trest.s+=x.last;\n\t\t\tq.pop();\n\t\t\tprintf(\"%lld %lld\\n\",x.id,rest.s);\n\t\t\tx=q.top();\n\t\t}\n\t\tx.last-=time;\n\t\tif(!q.empty()){\n\t\t\tq.pop();q.push(x);//\u66f4\u65b0 \n\t\t}\n\t\tq.push(task);\n\t\trest=task;\n\t}\n\tint t=task.s;\n\twhile(!q.empty()){//\u5904\u7406\u5269\u4f59\u7684\u672a\u5b8c\u6210\u4efb\u52a1 \n\t\tstr x=q.top();\n\t\tt+=x.last;\n\t\tprintf(\"%lld %lld\\n\",x.id,t);\n\t\tq.pop();\n\t\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1568899360,
        "uid": 44308,
        "name": "wym1111",
        "ccfLevel": 0,
        "title": "P2278 [HNOI2003]\u64cd\u4f5c\u7cfb\u7edf"
    },
    {
        "content": "STL Never dies!\n\n\u8fd9\u9053\u9898\u663e\u7136\u662f\u8981\u7528\u5806\u7ef4\u62a4\u8fd9\u4e2a\u5e8f\u5217\uff0c\u540c\u65f6\u4e0d\u80fd\u5f00\u6570\u7ec4\uff1a1e8\u80af\u5b9a\u5f00\u4e0d\u4e0b\u3002\n\n2\u4e2a\u4f18\u5148\u961f\u5217\u8c8c\u4f3c\u7a0d\u5fae\u6709\u70b9\u8d39\u2026\u2026\u5176\u5b9e1\u4e2a\u5c31\u591f\u3002\n\n\u9996\u5148\u6f84\u6e05\u4e00\u4e0b\u9898\u610f\uff1a\u4e00\u4e2a\u8fdb\u7a0b\u662f\u53ef\u4ee5\u5206\u6210\u4efb\u610f\u591a\u4e2a\u65f6\u95f4\u6bb5\u6765\u5904\u7406\uff0c\u6bd4\u5982\u4e00\u4e2a\u9700\u89819\u5355\u4f4d\u65f6\u95f4\u7684\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u5728\u65f6\u523b1~5\u548c\u65f6\u523b100~103\u6765\u5904\u7406\u3002\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u2026\u2026\u4f60\u5c3d\u7ba1\u505a\u53bb\u5427qwq\n\n\u7136\u540e\u600e\u4e48\u7528\u5806\u7ef4\u62a4\u5462\uff1f\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0cCPU\u8981\u8fd0\u884c\u7684\u4e00\u5b9a\u662f\u4e00\u4e2a\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8fdb\u7a0b\uff0c\u6240\u4ee5\u5806\u8981\u6309\u7167\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u5176\u6b21\u6309\u7167\u5230\u8fbe\u65f6\u95f4\u6392\u5e8f\uff08\u8fd9\u4e00\u70b9\u5df2\u7ecf\u5728\u9898\u76ee\u4e2d\u63d0\u5230\u4e86\uff09\u3002\n\n\u7136\u540e\u5c31\u662f\u8fd0\u884c\u8fdb\u7a0b\u4e86\u3002\u9996\u5148\u628a\u7b2c1\u4e2a\u8fdb\u7a0b\u585e\u8fdb\u4f18\u5148\u961f\u5217\u3002\n\n\u7136\u540e\uff0c\u8003\u8651\u7b2c$i$\u4e2a\u8fdb\u7a0b\u3002\n\n\u9996\u5148\uff0c\u5f53\u7b2c$i$\u4e2a\u8fdb\u7a0b\u5230\u8fbe\u65f6\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u5f85\u8fd0\u884c\u7684\u8fdb\u7a0b\u7684\u8fd0\u884c\u5b8c\u6210\u7684\u65f6\u95f4$<$\u7b2c$i$\u4e2a\u8fdb\u7a0b\u5230\u8fbe\u7684\u65f6\u95f4\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e9b\u8fdb\u7a0b\u5904\u7406\u6389\u4e86\u3002\u6ce8\u610f\uff1a\u8fd9\u91cc\uff0c\u6240\u6709\u5e94\u8be5\u5904\u7406\u7684\u8fdb\u7a0b\u90fd\u8981\u4ece\u5806\u9876\u53d6\u51fa\u6765\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4e0d\u5e72\u6270$i$\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u4e92\u76f8\u5e72\u6270\uff0c\u6240\u4ee5\u8981\u6309\u7167\u4f18\u5148\u5e8f\u6765\u3002\n\n\u8fd9\u91cc\uff0c\u6709\u4e9b\u540c\u5b66\u53ef\u80fd\u4f1a\u63d0\u95ee\u9898\uff1a\u5982\u679c\u6709\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u8fdb\u7a0b$p$\u548c\u8fdb\u7a0b$q$\uff0c\u5982\u679c$p$\u7684\u4f18\u5148\u7ea7\u6bd4$q$\u7684\u5927\uff0c\u4f46\u662f$q$\u53ef\u4ee5\u5728\u4e0d\u5e72\u6270$i$\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u800c$p$\u4e0d\u884c\uff0c\u90a3\u4e0d\u5c31\u51fa\u95ee\u9898\u4e86\uff1f\n\n\u7b54\u6848\uff1a\u9996\u5148$p$\u548c$q$\u4e00\u5b9a\u662f\u4e92\u76f8\u5e72\u6270\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4e24\u8005\u4e0d\u4e92\u76f8\u5e72\u6270\uff0c\u90a3\u4e48\u5b83\u4eec\u4e2d\u7684\u4e00\u4e2a\u80af\u5b9a\u5df2\u7ecf\u88ab\u53e6\u4e00\u4e2a\u5904\u7406\u5b8c\u4e86\u3002\u7136\u540e\uff0c\u56e0\u4e3a$p$\u4e00\u5b9a\u4f1a\u9650\u5236$q$\uff0c\u800c$p$\u76ee\u524d\u8fd8\u65e0\u6cd5\u8fd0\u884c\u5b8c\u6210\u3002\u6240\u4ee5$q$\u662f\u65e0\u8bba\u5982\u4f55\u90fd\u65e0\u6cd5\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u8ff0\u60c5\u51b5\u3002\n\n\u5176\u6b21\uff0c\u628a\u5806\u9876\u4f1a\u5e72\u6270$i$\u7684\u8fdb\u7a0b\u62c9\u51fa\u6765\u8fd0\u884c**\u4e00\u90e8\u5206**\u7136\u540e\u518d\u6254\u8fdb\u961f\u5217\u91cc\u9762\uff0c\u540c\u65f6\u628a$i$\u6254\u8fdb\u961f\u5217\u91cc\u9762\u3002\n\n\u6b63\u786e\u6027\u662f\u53ef\u4ee5\u8bc1\u660e\u7684\uff1a\u5982\u679c\u7b2c$i$\u4e2a\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u5927\u4e8e\u5806\u9876\u4f1a\u5e72\u6270$i$\u7684\u8fdb\u7a0b\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u8fd0\u884c\u7684\u8fdb\u7a0b\u5c06\u662f$i$\uff1b\u5426\u5219\uff0c\u5c06\u4f1a\u7ee7\u7eed\u8fd0\u884c\u90a3\u4e2a\u8fdb\u7a0b\u3002\n\n\u6700\u540e\uff0c\u5f53\u6240\u6709\u8fdb\u7a0b\u90fd\u5df2\u7ecf\u8f93\u5165\u4e86\uff0c\u90a3\u4e48\u5c31\u628a\u5806\u91cc\u9762\u6240\u6709\u7684\u7b49\u5f85\u8fdb\u7a0b\u6309\u7167\u4f18\u5148\u5e8f\u5168\u62c9\u51fa\u6765\u8fd0\u884c\u4e86\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4f46\u662f\u663e\u7136\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u65f6\u95f4\u6233$T$\uff0c\u8fd9\u4e2a$T$\u662f\u8981\u7528\u6765\u8ba1\u7b97\u8fdb\u7a0b\u7ed3\u675f\u7684\u65f6\u95f4\u3002\u90a3\u4e48\uff0c\u5f53\u6211\u4eec\u8fd0\u884c\u4e0e$i$\u65e0\u5173\u7684\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u628a\u6240\u6709\u8fd0\u884c\u9700\u8981\u7684\u65f6\u95f4\u5168\u90e8\u52a0\u5230$T$\u91cc\u9762\u53bb\uff1b\u5f53\u6211\u4eec\u5904\u7406\u7b2c$i$\u4e2a\u8fdb\u7a0b\u548c\u5806\u9876\u8fdb\u7a0b\u65f6\uff0c$T$\u66f4\u65b0\u4e3a\u7b2c$i$\u4e2a\u5143\u7d20\u7684\u5230\u8fbe\u65f6\u95f4\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u4e1c\u897f\u5c31\u53ef\u4ee5\u7528STL\u7684priority_queue\u7ed3\u6784\u6765\u7ef4\u62a4\u4e86\u3002\n\n\u987a\u4fbf\u7eaa\u5ff5\u4e00\u4e0b\u6211\u7b2c\u4e00\u6b21**\u5feb\u8bfb\u5199\u6302**= =|||\u2026\u2026\u6211\u4e5f\u662f\u5f31\u7684\u6ca1\u8c01\u4e86qwq\n\npaste my code(with comments)\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <queue>\nusing namespace std;\n\n//\u7528\u6765\u5b58\u50a8\u8fdb\u7a0b\u7684\u7ed3\u6784\u4f53\nstruct Mission {\n\tlong long idx, arv, poc, pri;//idx\u4e3a\u8fdb\u7a0b\u7f16\u53f7\uff0carv\u4e3a\u5230\u8fbe\u65f6\u95f4\uff0cpoc\u4e3a\u5904\u7406\u65f6\u95f4\uff0cpri\u4e3a\u4f18\u5148\u7ea7\n\tbool operator < (const Mission& mis) const {\n\t\tif (pri != mis.pri) {\n\t\t\treturn pri < mis.pri;\n\t\t}\n\t\treturn arv > mis.arv;\n\t}//\u4f18\u5148\u7ea7\n};\npriority_queue <Mission> que;//\u7ef4\u62a4\u8fdb\u7a0b\u7684\u4f18\u5148\u961f\u5217\n//\u5feb\u8bfb\u5feb\u8f93\ninline long long QuickRead() {\n\tlong long x = 0;\n\tchar c;\n\tif ((c = getchar()) == EOF) {\n\t\treturn -1;\n\t}\n\twhile (c < '0' || c > '9') {\n\t\tif ((c = getchar()) == EOF) {\n\t\t\treturn -1;\n\t\t}\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tif ((c = getchar()) == EOF) {\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn x;\n}\n\nvoid QuickPut(long long x, bool f) {\n\tif (x == 0) {\n\t\tif (f) {\n\t\t\tputchar('0');\n\t\t}\n\t\treturn;\n\t}\n\tQuickPut(x / 10, 0);\n\tputchar(x % 10 + 48);\n}\n\nvoid Solve() {\n\tMission m;\n\tlong long t = 0;//\u65f6\u95f4\u6233\n\tm.idx = QuickRead(); m.arv = QuickRead(); m.poc = QuickRead(); m.pri = QuickRead();\n\tt = m.arv;\n\tque.push(m);//\u5904\u7406\u7b2c1\u4e2a\u8fdb\u7a0b\n\tfor (;;) {\n\t\tm.idx = QuickRead(); m.arv = QuickRead(); m.poc = QuickRead(); m.pri = QuickRead();\n\t\tif (m.idx == -1 || m.arv == -1 || m.poc == -1 || m.pri == -1) {\n\t\t\tbreak;//\u5df2\u7ecf\u8bfb\u5165\u4e86\u6240\u6709\u8fdb\u7a0b\n\t\t}\n\t\tMission m2;\n\t\twhile (!que.empty() && t + que.top().poc <= m.arv) {//\u5904\u7406\u6240\u6709\u4e0d\u5e72\u6270\u7684\u8fdb\u7a0b\n\t\t\tif (que.empty()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tm2 = que.top();\n\t\t\tque.pop();\n\t\t\tQuickPut(m2.idx, 1); \n\t\t\tputchar(' ');\n\t\t\tQuickPut(t + m2.poc, 1);\n\t\t\tputchar('\\n');//\u8f93\u51fa\u8fd0\u884c\u7ed3\u679c\n\t\t\tt += m2.poc;//\u66f4\u65b0\u65f6\u95f4\u6233\n\t\t}\n\t\tif (que.empty()) {//\u6ca1\u6709\u5e72\u6270\u5b83\u7684\u8fdb\u7a0b\n\t\t\tque.push(m);//\u6ce8\u610f\uff1a\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u5e72\u6270\u7b2ci+1\u4e2a\u8fdb\u7a0b\u540c\u65f6\u4f18\u5148\u7ea7\u8981\u6ca1\u6709\u5b83\u9ad8\n\t\t\tt = m.arv;//\u8fd8\u662f\u66f4\u65b0\u65f6\u95f4\u6233\n\t\t\tcontinue;\n\t\t}\n\t\tm2 = que.top();\n\t\tque.pop();\n\t\tm2.poc -= m.arv - t;//\u8fd0\u884c\u4e00\u90e8\u5206\n\t\tque.push(m);\n\t\tque.push(m2);//\u628a\u4e24\u4e2a\u8fdb\u7a0b\u90fd\u52a0\u5165\u961f\u5217\n\t\tt = m.arv;//\u4f9d\u7136\u662f\u66f4\u65b0\u65f6\u95f4\u6233\n\t}\n\twhile (!que.empty()) {//\u628a\u6240\u6709\u672a\u8fd0\u884c\u7684\u8fdb\u7a0b\u90fd\u62c9\u51fa\u6765\u8fd0\u884c\n\t\tMission m = que.top();\n\t\tque.pop();\n\t\tQuickPut(m.idx, 1);\n\t\tputchar(' ');\n\t\tQuickPut(t + m.poc, 1);\n\t\tputchar('\\n');\n\t\tt += m.poc;\n\t}\n}\n\nint main() {\n\tSolve();\n\treturn 0;\n}\n```\n\n\u6e05\u771f\u7684**\u6b63\u597d100\u884c**\u7684\u4ee3\u7801\uff01\n\n\u6709\u95ee\u9898\u79c1\u4fe1\uff0c\u4e0d\u770b\u8bc4\u8bbaqwq",
        "postTime": 1561551008,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "          \u6a21\u62df\uff0b\u4f18\u5148\u961f\u5217\n * \u8fd9\u9053\u9898\u4e00\u770b\u4f18\u5148\u7ea7\u5c31\u53ef\u4ee5\u53d1\u73b0\u662f\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u7684\u9898\uff0c\u7136\u540e\u6211\u4eec\u5c31\u5f00\u59cb\u6a21\u62df\uff0c\u600e\u4e48\u6765\u6a21\u62df\u5462\uff0c\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u8303\u56f41e8\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u77e5\u9053\u6bcf\u4e2a\u7684\u65f6\u95f4\u6709\u591a\u5927\uff0c\u53ef\u80fd+\u4e8b\u95f4\u540e\uff0c\u5c31\u4f1a\u8d85\u6700\u5927\u65f6\u9650\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u65f6\u95f4\u6765\u4e00\u4e2a\u4e00\u4e2a\u52a0\uff0c\u5462\u548b\u529e\u5462\uff1f   \n * \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u53ea\u8ba9\u6211\u4eec\u8f93\u51fa\u7f16\u53f7\uff0c\u548c\u7ed3\u675f\u65f6\u95f4\uff0c\u5c31\u6ca1\u6709\u522b\u7684\u4e86\uff0c\u8fd9\u6837\u6211\u4eec\u5176\u5b9e\u5c31\u53ef\u4ee5\u4e0d\u7528\u591a\u7ef4\u62a4\u522b\u7684\u4e1c\u897f\uff0c\u53ea\u8981\u770b\u5b83\u5728\u5565\u65f6\u5019\u7ed3\u675f\u5c31\u6b27\u514b\u4e86\u3002    \n *  \u6240\u4ee5\u6211\u4eec\u8003\u8651\u5982\u4f55\u6765\u4e00\u6bb5\u65f6\u95f4\uff0c\u4e00\u6bb5\u65f6\u95f4\u7684\u6765\u641e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u4e00\u4e2a\u4efb\u52a1\u5b8c\u6210\u6709\u4e24\u79cd\u53ef\u80fd\u3002   \n   * \u5f88\u987a\u5229\uff0c\u76f4\u63a5\u4ece\u5f00\u59cb\u5230\u7ed3\u675f\uff0c\u8fd9\u8981\u5565\u6761\u4ef6\u5462\uff0c\u5c31\u662f\u5982\u679c\u4e0b\u4e00\u4e2a\u8fdb\u6765\u7684\u65f6\u95f4-\u5f53\u524d\u7684\u65f6\u95f4\u5927\u4e8e\u7b49\u4e8e\u4e86\u5b83\u8981\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u6216\u8005\u4e00\u76f4\u8fdb\u6765\u76f4\u5230\u5b83\u88ab\u5b8c\u6210\u8fd9\u4e00\u65f6\u95f4\u6bb5\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u90fd\u6bd4\u4ed6\u5c0f\u3002   \n   * \u5f88\u66f2\u6298\uff0c\u6709\u8fdb\u6765\u6bd4\u4ed6\u4f18\u5148\u7ea7\u5927\u7684\uff0c\u62a2\u4e86\u4ed6\u7684\u5934\u53f7\uff0c\u7136\u540e\u4e00\u76f4\u5f00\u59cb\uff0c\u7ed3\u675f\uff0c\u5f00\u59cb\uff0c\u7ed3\u675f\uff0c\u76f4\u5230\u6700\u540e\u7684\u7ed3\u675f\u3002    \n   \n *   \u6211\u4eec\u53d1\u73b01\u4e2d\u7684\u7b2c\u4e00\u4e2a\u60c5\u51b5\u5f88\u597d\u6a21\u62df\uff0c\u4e00\u4e2aif\u5c31?\u54af\uff0c\u7136\u800c\u7b2c\u4e8c\u79cd\u5c31\u6709\u70b9\u4e0d\u597d\u6a21\u62df\uff0c\u4f46\u662f\u8ddf2\u4e2d\u7684\u6a21\u62df\u5f88\u76f8\u4f3c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u4ed6\u4eec\u4e00\u8d77\u641e\uff08\u56e0\u4e3a\u5f53\u524d\u662f\u628a\u4ed6\u4eec\u6254\u5230\u4f18\u5148\u961f\u5217\u7684\u91cc\uff0c\u8fd9\u68372\u4e2a\u90fd\u53ef\u4ee5\u6ee1\u8db3\u3002   \n *  \u6211\u4eec\u8003\u8651\u600e\u4e48\u6254\u5462\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u540e\u53ea\u8981\u8f93\u51fa\u7ed3\u675f\u65f6\u95f4\uff0c\u522b\u7684\u90fd\u4e0d\u9700\u8981\uff0c\u6240\u4ee5\u522b\u7684\u4e1c\u897f\u6211\u4eec\u5c31\u53ef\u4ee5\u76f8\u5e94\u505a\u51fa\u66f4\u6539\u3002   \n *  \u6211\u4eec\u8bbe\u5f53\u524d\u7b2c\u4e00\u4e2a\u5ef6\u7eed\u65f6\u95f4\u4e3at1,\u4f18\u5148\u7ea7\u4e3ayxj1\uff0c\u5f53\u524d\u65f6\u95f4\u4e3at\uff0c\u4e0b\u4e00\u4e2a\u5ef6\u7eed\u65f6\u95f4\u4e3at2,\u5f00\u59cb\u65f6\u95f4\u4e3aks2\uff0c\u4f18\u5148\u7ea7\u4e3ayxj2\uff0c\u5462\u4e48\u6839\u636e\u4e0a\u9762\u8bf4\u7684\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u60c5\u51b5\uff0c1.yxj1>yxj2 \u3002 2...<...         \n \n* \u8fd9\u6837\u6211\u4eec\u90fd\u53ef\u4ee5\u6254\u5230\u4f18\u5148\u961f\u5217\u91cc\uff0c\u56e0\u4e3a\u5b83\u8fd4\u56de\u6700\u4f18\u7684\u4e00\u4e2a\uff0c\u8fd9\u6837\u6211\u4eec\u8003\u8651\uff0c\u5982\u679c\u6211\u4eec\u628a\u7b2c\u4e00\u4e2a\u6254\u8fdb\u53bb\uff0c\u540e\u7b2c\u4e8c\u4e2a\u62a2\u4e86\u5b83\u7684\u7b2c\u4e00\uff0c\u8fd9\u6837\u4ee5\u540e\u7b97\u7b2c\u4e00\u4e2a\u7684\u65f6\u95f4\u5c31\u4e0d\u597d\u7b97\u54af\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u8f6c\u6362\u6cd5\u628a\u7b2c\u4e00\u4e2a\u7b49\u4ef7\u4e8e\u5728ks2\u7684\u65f6\u5019\u6254\u8fdb\u53bb\u4e00\u4e2a\u4f18\u5148\u7ea7\u4e3ayxj1\u7684\u5ef6\u957f\u65f6\u95f4\u4e3atime1-ks2\u7684\u8fd9\u6837\u4ee5\u540e\u6211\u4eec\u5c31\u6709\u4e24\u79cd\u65b9\u6cd5\u628a\u5b83\u8f93\u51fa\uff0c   \n* \u7b2c\u4e00\u79cd\u5c31\u662f\u901a\u8fc7\u65b9\u6cd51\uff0c\u628a\u5b83\u6254\u51fa\uff0c\u7b2c\u4e8c\u79cd\u5c31\u662f\u6700\u540e\u5f53\u4ed6\u4eec\u8fd8\u6709\u5728\u961f\u5217\u4e2d\u7684\u6211\u4eec\u5c31\u53ef\u4ee5\u6309\u4f18\u5148\u7ea7\u4e00\u4e2a\u4e00\u4e2a\u8f93\u51fa\u54af\uff0c\u56e0\u4e3a\u6211\u4eec\u6700\u540e\u5269\u4e0b\u7684\u5c31\u662f\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u7684\uff0c\u6ca1\u6709\u4eba\u62a2\u4ed6\u4eec\u7684\u4f4d\u7f6e\u6240\u4ee5\u53ea\u8981\u4e00\u76f4\u66f4\u65b0\u65f6\u95f4\uff0c\u5728\u8f93\u51fa\u5c31?\u54af  \n \n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio> \n#include<string>\n#include<queue>\nusing namespace std;\n\nstruct node\n{\n\tint id,time,yxj;\n}tmp;\n\n\n\nbool operator <(node a,node b)//\u4f18\u5148\u961f\u5217\u81ea\u5b9a\u4e49\u5c31\u662f\u4e00\u4e2a\u5927\u6839\u5806\u3002\u53ea\u80fd\u4fee\u6539 <\n{\n\tif(a.yxj!=b.yxj)\u5f53\u4f18\u5148\u7ea7\u4e0d\u7b49\u8fd8\u4e3a< \u8bf4\u660e\u4e86\u8fd8\u4e3a\u4ee5\u4f18\u5148\u7ea7\u4e3a\u5173\u952e\u5b57\u5927\u6839\u5806\n\t{\n\t\treturn a.yxj<b.yxj;\n\t}\n\treturn a.id>=b.id;\u53cd\u4e4b\u53d8\u4e3a>=\u5c31\u7b49\u4e8e\u6539\u4e3a\u4e86\u4ee5\u7f16\u53f7\u4e3a\u5173\u952e\u5b57\u7684\u5c0f\u6839\u5806\n}\npriority_queue<node> q;\nint a,b,c,d,t;\n\nint main()\n{\n\twhile(scanf(\"%d%d%d%d\",&a,&b,&c,&d)!=EOF)\n\t{\n\t\twhile(!q.empty())\n\t\t{\n\t\t\ttmp=q.top();\n\t\t\tq.pop();\n\t\t\tif(t+tmp.time<=b)\n\t\t\t{\n\t\t\t\tt+=tmp.time;\n\t\t\t\tprintf(\"%d %d\\n\",tmp.id,t);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttmp.time-=(b-t);\n\t\t\t\tq.push(tmp);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttmp.id=a;\n\t\ttmp.time=c;\n\t\ttmp.yxj=d;\n\t\tq.push(tmp);\n\t\tt=b;\n\t}\n\twhile(!q.empty())\n\t{\n\t\ttmp=q.top();\n\t\tq.pop();\n\t\tt+=tmp.time; \n\t\tprintf(\"%d %d\\n\",tmp.id,t);\n\t}\n\treturn 0;\n}\n\n\n```\n\n\u8fd9\u5c31\u597d\u54af\"*\u2605,\u00b0*:.\u2606(\uffe3\u25bd\uffe3)/$:*.\u00b0\u2605* \u3002\"",
        "postTime": 1535201048,
        "uid": 102786,
        "name": "Sym_Je",
        "ccfLevel": 0,
        "title": "P2278 [HNOI2003]\u64cd\u4f5c\u7cfb\u7edf"
    },
    {
        "content": "# \u601d\u8def\n\u672c\u9898\u601d\u8def\u6bd4\u8f83\u660e\u786e\uff0c\u6839\u636e\u9898\u76ee\u4e2d\u6709\u5173\u201c\u4f18\u5148\u7ea7\u201d\u7684\u64cd\u4f5c\u4e0d\u96be\u60f3\u51fa\u672c\u9898\u4e3b\u8981\u4f7f\u7528\u4f18\u5148\u961f\u5217\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f9d\u636e\u9898\u610f\u8fdb\u884c\u6a21\u62df\u3002\n\n\u6a21\u62df\u8fc7\u7a0b\u4e2d\u6211\u4eec\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282:\n\n1.\u6bcf\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5230\u8fbe\u65f6\uff0c\u6709\u53ef\u80fd\u6253\u65ad\u6b63\u5728\u8fdb\u884c\u7684\u8fdb\u7a0b\u3002\u56e0\u6b64\u6211\u7684\u65b9\u6cd5\u65f6\uff0c\u6bcf\u5f53\u65b0\u8fdb\u7a0b\u5230\u8fbe\u65f6\uff0c\u7acb\u5373\u6253\u65ad\u5f53\u524d\u8fdb\u7a0b\uff0c\u8fd0\u884c\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8fdb\u7a0b\uff08\u8981\u4e48\u65b0\u8fdb\u7a0b\uff0c\u8981\u4e48\u5f53\u524d\u8fdb\u7a0b).\n\n 2.\u6574\u4e2a\u8fc7\u7a0b\u5b8c\u6210\u4e4b\u524dCPU\u4e0d\u4f1a\u7a7a\u95f2\uff0c\u4e00\u65e6\u4e00\u4e2a\u8fdb\u7a0b\u5b8c\u6210\uff0c\u968f\u5373\u8fdb\u884c\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u3002 \u6240\u4ee5\u53ea\u8981\u65f6\u95f4\u6709\u5269\u4f59\uff0c\u8fdb\u7a0b\u5c31\u4e0d\u4f1a\u88ab\u6253\u65ad\u3002  \n \n 3.\u5f53\u4e0d\u518d\u6709\u8fdb\u7a0b\u5230\u8fbe\u540e\uff0c\u4e0d\u4f1a\u88ab\u6253\u65ad\uff0c\u76f4\u63a5\u6309\u7167\u4f18\u5148\u7ea7\u6a21\u62df\u3002\n\n# \u4ee3\u7801\n\n```\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cmath>\n#include <ext/pb_ds/priority_queue.hpp>\nusing namespace std;\nstruct task{  //\u4efb\u52a1\u8fdb\u7a0b\n\tint num,tim,rank;\n\ttask (int a, int c, int d) {\n\t\tnum=a,tim=c,rank=d;\n\t}\n};\nint a,b,c,d,now;\nbool operator < (task x, task y) { //\u7ef4\u62a4\u5927\u6839\u5806\n    if(x.rank!=y.rank) return x.rank<y.rank;\n    return x.num>y.num;    \n}\n__gnu_pbds::priority_queue <task> q; //\u5efa\u7acb\u4f18\u5148\u961f\u5217 \n\nint main()\n{\n\twhile(scanf(\"%d%d%d%d\",&a,&b,&c,&d)!=EOF){\n\t\twhile(!q.empty()){\n\t\t\ttask top=q.top(); //\u8fd8\u6709\u65f6\u95f4\u5269\u4f59\uff0c\u8fdb\u884c\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\n\t\t\tq.pop();\n\t\t\tif(now+top.tim<=b){ //\u5982\u679c\u6709\u5269\u4f59\u65f6\u95f4\uff08\u4e0d\u88ab\u6253\u65ad\uff09\uff0c\u6b63\u5e38\u51fa\u961f\n\t\t\t\tnow+=top.tim;\n\t\t\t\tprintf(\"%d %d\\n\",top.tim,now);\n\t\t\t}\n\t\t\telse{ //\u5982\u679c\u5269\u4f59\u65f6\u95f4\u4e0d\u591f\uff08\u88ab\u6253\u65ad\uff09\uff0c\u5269\u4f59\u8fdb\u7a0b\u5165\u961f\n\t\t\t\ttop.tim-=(b-now); //\u51cf\u53bb\u5df2\u7ecf\u5b8c\u6210\u7684\u8fdb\u5ea6\n\t\t\t\tq.push(top);\n\t\t\t\tbreak;  //\u6ca1\u4e8b\u5269\u4f59\u65f6\u95f4\uff0c\u8df3\u51fa\u5faa\u73af\n\t\t\t}\n\t\t}\n\t\tq.push(task(a,c,d)); //\u5c06\u8fdb\u7a0b\u5165\u961f\n\t\tnow=b; //\u66f4\u65b0\u5f53\u524d\u65f6\u95f4\n\t}\n\twhile(!q.empty()){ //\u4e0d\u518d\u6709\u8fdb\u7a0b\u5230\u8fbe\n\t\ttask top=q.top();\n\t\tq.pop();\n\t\tnow+=top.tim; //\u66f4\u65b0\u5f53\u524d\u65f6\u95f4\n\t\tprintf(\"%d %d\\n\",top.num, now);\n\t} \n\treturn 0;\n}\n```",
        "postTime": 1517564839,
        "uid": 56316,
        "name": "crazydave",
        "ccfLevel": 0,
        "title": "\u9898\u89e3  P2278  \u3010\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u8981\u5728\u5927\u725b\u5206\u7ad9\u4ea4 \u4e0d\u7136\u6700\u540e\u4e00\u4e2a\u70b9\u4f1at\n\n```cpp\n#include<cstdio>  \n#include<queue>  \nusing namespace std;\nstruct dqs\n{  \n    int num,tim,yxj;  //\u8fdb\u7a0b\u53f7\uff0c\u6267\u884c\u8fc7\u7a0b\u65f6\u95f4\u548c\u4f18\u5148\u7ea7   \n}tmp;   \nint n,t,a,b,c,d;  \npriority_queue<dqs> q;  \nbool operator < (dqs a,dqs b)  \n{  \n    if(a.yxj!=b.yxj) \n        return a.yxj<b.yxj;  \n    return a.num>=b.num;  \n}  \nint main()  \n{  \n    while(scanf(\"%d%d%d%d\",&a,&b,&c,&d)==4)  //\u8fdb\u7a0b\u53f7\uff0c\u5230\u8fbe\u65f6\u95f4\uff0c\u6267\u884c\u65f6\u95f4\u548c\u4f18\u5148\u7ea7   \n    {  \n        while(!q.empty())  \n        {  \n            tmp=q.top();\n            q.pop();  \n            if((t+tmp.tim)<=b)  \n            {  \n                t+=tmp.tim;  \n                printf(\"%d %d\\n\",tmp.num,t);  \n            }  \n            else  \n            {  \n                tmp.tim-=(b-t);  \n                q.push(tmp);break;  \n            }  \n        }  \n        tmp.yxj=d;\n        tmp.num=a;\n        tmp.tim=c;\n        q.push(tmp);  \n        t=b;\n    }  \n    while(!q.empty())  \n    {  \n        tmp=q.top();\n        q.pop();\n        t+=tmp.tim;  \n        printf(\"%d %d\\n\",tmp.num,t);  \n    }  \n    return 0;  \n}\n```",
        "postTime": 1507691039,
        "uid": 21712,
        "name": "zzkya",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P2278)\n\n\u539f\u6765\u662f\u9053\u5927\u6c34\u9898\uff0c\u4f46\u662f\u5b83\u7684\u9898\u9762\u6709\u70b9\u610f\u601d\uff0c\u4e8e\u662f\u6211\u5c31\u624b\u6b8b\u628a\u5b83\u52a0\u8fdb\u4e86\u89e3\u9898\u8ba1\u5212\u4e2d\u3002\n\n## \u9898\u9762\u63cf\u8ff0\n\u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6211\u4eec\u53ea\u62e5\u6709\u4e00\u4e2aCPU\uff0c\u53ea\u80fd\u540c\u65f6\u5904\u7406\u4e00\u4e2a\u4efb\u52a1\u3002\u73b0\u5728\u6709\u5f88\u591a\u4efb\u52a1\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u89e3\u51b3\uff0c\u5b83\u4eec\u5c06\u6309\u7167\u4ea7\u751f\u65f6\u95f4\u8f93\u5165\u3002\n\n\u6bcf\u4e2a\u4efb\u52a1\u90fd\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\u5b8c\u6210\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u4e00\u4e2a\u4f18\u5148\u7ea7\u548c\u4ea7\u751f\u65f6\u95f4\u3002\u5f53\u5b83\u4eec\u4ea7\u751f\u65f6\uff0c\u5982\u679cCPU\u7a7a\u95f2\uff0c\u90a3\u4e48\u4f1a\u76f4\u63a5\u5904\u7406\u8fd9\u4e2a\u4efb\u52a1\uff0c\u5982\u679cCPU\u5fd9\u788c\u4f46\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u6ca1\u6709\u5b83\u9ad8\uff0c\u4f1a\u4e2d\u65ad\u5f53\u524d\u4efb\u52a1\u7684\u6267\u884c\uff0c\u4f18\u5148\u6267\u884c\u8be5\u4efb\u52a1\u3002\u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u5747\u4e0d\u6ee1\u8db3\uff0c\u8be5\u4efb\u52a1\u4f1a\u8fdb\u5165\u7b49\u5f85\u961f\u5217\u3002\n\n\u5bf9\u4e8eCPU\uff0c\u5f53\u5f53\u524d\u4efb\u52a1\u8fd0\u884c\u5b8c\u540e\u5c06\u4f1a\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u4f18\u5148\u503c\u6700\u9ad8\u7684\u4efb\u52a1\uff0c\u5e76\u4e14\u7acb\u523b\u5f00\u59cb\u8fd0\u884c\u8be5\u4efb\u52a1\u3002\u5e76\u4e14\u5bf9\u4e8e\u4e00\u4e2a\u88ab\u4e2d\u65ad\u7684\u4efb\u52a1\uff0c\u5f53\u5b83\u88ab\u518d\u6b21\u8fd0\u884c\u65f6\u53ea\u9700\u4ece\u4e2d\u65ad\u51fa\u5f00\u59cb\u8fd0\u884c\u5373\u53ef\uff0c\u65e0\u9700\u91cd\u65b0\u5f00\u59cb\u3002\n## \u5206\u6790\n\u8003\u8651\u5230CPU\u5728\u7a7a\u95f2\u65f6\u4f1a\u4ece\u7b49\u5f85\u961f\u5217\u4e2d\u53d6\u51fa\u4f18\u5148\u503c\u6700\u9ad8\u7684\u90a3\u4e2a\u4efb\u52a1\u5f00\u59cb\u8fd0\u884c\uff0c\u6240\u4ee5\u5f88\u663e\u7136\u8fd9\u5c31\u662f\u4e2a\u4f18\u5148\u961f\u5217\u3002\u53ea\u8981\u8ba9\u4f18\u5148\u961f\u5217\u5c06\u4f18\u5148\u503c\u6700\u9ad8\u7684\u90a3\u4e2a\u4efb\u52a1\u4e00\u76f4\u653e\u5728\u5806\u9876\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5bf9\u4e8e\u521a\u51fa\u73b0\u7684\u6bcf\u4e00\u4e2a\u4efb\u52a1\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u5b83\u653e\u8fdb\u961f\u5217\uff0c\u7136\u540e\u5728\u4e0b\u4e00\u4e2a\u4efb\u52a1\u51fa\u73b0\u524d\u4e0d\u65ad\u5730\u6328\u4e2a\u5904\u7406\u7a0b\u5e8f\u3002\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u5728\u8fd0\u884c\u5230\u4e00\u534a\u7684\u65f6\u5019\u88ab\u4e2d\u65ad\uff0c\u90a3\u4e48\u4fdd\u5b58\u5269\u4f59\u8fd0\u884c\u65f6\u95f4\u4e3a\u603b\u8fd0\u884c\u65f6\u95f4\u540e\u5c06\u5b83\u91cd\u65b0\u538b\u56de\u961f\u5217\u3002\n## \u4ee3\u7801\n\u6211\u4eec\u4f7f\u7528\u7ed3\u6784\u4f53\u6765\u5b58\u653e\u6bcf\u4e2a\u4efb\u52a1\u7684\u4fe1\u606f\u3002\n```cpp\nstruct task\n{\n\tint number;//\u4efb\u52a1\u7f16\u53f7\n\tint need;//\u9700\u8981\u65f6\u95f4\n\tint get;//\u51fa\u73b0\u65f6\u95f4\n\tint grade;//\u4f18\u5148\u7ea7\n\tinline bool operator < (const task &b) const\n\t{//\u7ed9\u4f18\u5148\u961f\u5217\u63d0\u4f9b\u7684\u8fd0\u7b97\u7b26\uff0c\u6211\u4eec\u4f1a\u5c06\u4f18\u5148\u7ea7\u9ad8\u7684\uff0c\u6216\u8005\u662f\u4f18\u5148\u7ea7\u76f8\u540c\u4f46\u6765\u7684\u66f4\u65e9\u7684\u4efb\u52a1\u653e\u5230\u5806\u9876\n\t\treturn this->grade<b.grade||(this->grade==b.grade&&this->get>b.get);\n\t}\n};\n```\n\u7136\u540e\u662f\u4f18\u5148\u961f\u5217\n```cpp\nstd::priority_queue<task,std::vector<task>,std::less<task>> wait;\n```\n\u6700\u540e\u5c31\u662f\u4e3b\u51fd\u6570\u4e86\n```cpp\nint main()\n{\n\tint num,get,times,grade;\n\tint time=-1;\n\twhile(scanf(\"%d%d%d%d\",&num,&get,&times,&grade)!=EOF)\n\t{\n\t\twhile((!wait.empty())&&time+wait.top().need<=get)\n\t\t{\n\t\t\ttime+=wait.top().need;\n\t\t\tprintf(\"%d %d\\n\",wait.top().number,time);\n\t\t\twait.pop();\n\t\t}\n\t\tif(!wait.empty())\n\t\t{\n\t\t\ttask cache=wait.top();\n\t\t\twait.pop();\n\t\t\tcache.need-=get-time;\n\t\t\twait.push(cache);\n\t\t}\n\t\twait.push({num,times,get,grade});\n\t\ttime=get;\n\t}\n\twhile(!wait.empty())\n\t{\n\t\ttime+=wait.top().need;\n\t\tprintf(\"%d %d\\n\",wait.top().number,time);\n\t\twait.pop();\n\t}\n\treturn 0;\n}\n```\n\u6211\u4eec\u6700\u5f00\u59cb\u4f7f\u7528\u4e00\u4e2a$time$\u6765\u5b58\u653e\u5f53\u524d\u8fd0\u884c\u5230\u7684\u65f6\u523b\u3002\u6bcf\u4e00\u6b21\u8bfb\u5165\u4e00\u4e2a\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u610f\u5473\u7740\u4ece$time+1$\u65f6\u523b\u5230\u5f53\u524d\u51fa\u73b0\u7684\u4e00\u5239\u90a3\u8fd9\u6bb5\u65f6\u95f4\u90fd\u4e0d\u4f1a\u88ab\u6253\u65ad\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u6211\u4eec\u4e0d\u65ad\u5730\u53d6\u51fa\u4e00\u4e2a\u4efb\u52a1\uff0c\u5e76\u8bd5\u7740\u5b8c\u6210\u5b83\uff0c\u5e76\u7528\u6700\u540e\u4f59\u7559\u4e0b\u6765\u7684\u4e00\u70b9\u65f6\u95f4\u6765\u5b8c\u6210\u90e8\u5206\u7684\u4efb\u52a1\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u5b8c\u6210\u4e00\u90e8\u5206\u7684\u4efb\u52a1\u653e\u56de\u961f\u5217\uff0c\u5728\u6b64\u65f6\u8f93\u5165\u7684\u90a3\u7ec4\u4efb\u52a1\u5c31\u6b63\u5f0f\u51fa\u73b0\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u5b83\u653e\u5165\u961f\u5217\uff0c\u5e76\u4e14\u628a$time$\u8bbe\u4e3a\u5f53\u524d\u65f6\u523b\u3002\u7136\u540e\u5728\u6240\u6709\u7684\u4efb\u52a1\u8f93\u5165\u5b8c\u4e4b\u540e\u9010\u4e2a\u5b8c\u6210\u5269\u4e0b\u6240\u6709\u7684\u4efb\u52a1\uff0c\u5c31\u662f\u6700\u540e\u4e00\u4e2awhile\u5faa\u73af\u6240\u5728\u505a\u7684\u3002\n\n\u8fd9\u6837\uff0c\u8fd9\u9053\u9898\u5c31\u7ed3\u675f\u4e86\u3002\n\n[\u672c\u9898\u5b8c\u6574\u4ee3\u7801](https://www.luogu.com.cn/blog/Kysic-Studio/code-P2278)",
        "postTime": 1575002453,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "P2278"
    },
    {
        "content": "\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6765\u6a21\u62df CPU \u7684\u591a\u4efb\u52a1\uff0c\u5c06\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u6309\u7167\u4f18\u5148\u7ea7\u548c\u5230\u8fbe\u65f6\u95f4\u6392\u5e8f\u3002\n\n\u5c06\u65f6\u95f4\u79bb\u6563\u5316\u540e\uff0c\u4e0d\u96be\u53d1\u73b0\u53ea\u6709\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u5f00\u59cb\u65f6\u95f4\u662f\u6709\u610f\u4e49\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u5728\u5b83\u52a0\u5165\u4f18\u5148\u961f\u5217\u524d\uff0c\u5148\u8ba9\u65f6\u95f4\u6d41\u901d\u5230\u8be5\u8fdb\u7a0b\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u518d\u5c06\u8be5\u8fdb\u7a0b\u52a0\u5165\u4f18\u5148\u961f\u5217\u3002\n\n\u5728\u65f6\u95f4\u6d41\u901d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6267\u884c\u6bcf\u4e2a\u53ef\u4ee5\u5b8c\u6574\u6267\u884c\u5b8c\u6bd5\u7684\u8fdb\u7a0b\uff1b\u5bf9\u4e8e\u4e0d\u80fd\u5b8c\u6574\u6267\u884c\u5b8c\u6bd5\u7684\u8fdb\u7a0b\uff0c\u5148\u8ba9\u5b83\u6267\u884c\u5230\u5f53\u524d\u5373\u5c06\u6267\u884c\u7684\u8fdb\u7a0b\u5f00\u59cb\u6267\u884c\u524d\uff0c\u5e76\u5c06\u8be5\u8fdb\u7a0b\u5269\u4f59\u672a\u6267\u884c\u7684\u90e8\u5206\u91cd\u65b0\u52a0\u5165\u4f18\u5148\u961f\u5217\uff08\u8fd9\u65f6\u4f18\u5148\u961f\u5217\u4e2d\u8fd8\u672a\u6267\u884c\u7684\u8fdb\u7a0b\u90fd\u4e0d\u53ef\u4ee5\u6267\u884c\u4e86\uff09\u3002\n\n\u6700\u540e\u5c06\u65f6\u95f4\u6d41\u901d\u5230 $\\infty$\uff0c\u4ee5\u6267\u884c\u5b8c\u6240\u6709\u672a\u6267\u884c\u7684\u8fdb\u7a0b\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct data {\n  int id;\n  int s, t, p;\n\n  data(int id, int s, int t, int p) : id(id), s(s), t(t), p(p) {}\n\n  bool operator <(data b) const {\n    if (p != b.p) {\n      return p < b.p;\n    } else {\n      return s > b.s;\n    }\n  }\n};\n\npriority_queue<data> q;\nint ti = 0;\n\nvoid time_pass(int t) {\n  while (!q.empty()) {\n    data d = q.top(); q.pop();\n    if (t - ti < d.t) {\n      d.t -= t - ti;\n      q.push(d);\n      break;\n    } else {\n      ti += d.t;\n      cout << d.id << ' ' << ti << endl;\n    }\n  }\n\n  ti = t;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n\n  int id, s, t, p;\n  while (cin >> id >> s >> t >> p) {\n    time_pass(s);\n    q.emplace(id, s, t, p);\n  }\n\n  time_pass(INT_MAX);\n}\n\n```",
        "postTime": 1573086629,
        "uid": 218817,
        "name": "Suyun",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u6b64\u9898\u4e2d\u5e76\u6ca1\u6709\u7ed9\u51fa\u8f93\u5165\u6587\u4ef6\u7684\u603b\u884c\u6570\uff0c\u6240\u4ee5\u5efa\u8bae\u4e0d\u5f00\u6570\u7ec4\uff0c\u8fb9\u8bfb\u5165\u8fb9\u64cd\u4f5c\u3002\n\n\u6b64\u9898\u662f\u5f88\u660e\u663e\u7684\u5806+\u6a21\u62df\uff0c\u9700\u8981\u5206\u51e0\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n1.\u8f93\u5165\u4e00\u4e2a\u8fdb\u7a0b\u540e\uff0c\u5982\u679c\u5806\u4e0d\u4e3a\u7a7a\uff0c\u5148\u5904\u7406\u4ece\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5f00\u59cb\u65f6\u95f4\u5230\u6b64\u8fdb\u7a0b\u7684\u5f00\u59cb\u65f6\u95f4\u8fd0\u884c\u7684\u6240\u6709\u8fdb\u7a0b\uff0c\u5c06\u8fd0\u884c\u7ed3\u675f\u7684\u8fdb\u7a0b\u8f93\u51fa\u5e76\u51fa\u5806\n\n2.\u5982\u679c\u5806\u4e3a\u7a7a\uff0c\u76f4\u63a5\u5c06\u5f53\u524d\u8fdb\u7a0b\u52a0\u5165\u5806\uff0ccontinue\n\n3.\u5982\u679c\u5806\u4ecd\u4e0d\u4e3a\u7a7a\uff0c\u6bd4\u8f83\u5f53\u524d\u8fdb\u7a0b\u4e0e\u5806\u9876\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\uff0c\u5982\u679c\u5806\u9876\u8fdb\u7a0b\u4f18\u5148\u7ea7\u9ad8\uff0c\u5c06\u5f53\u524d\u8fdb\u7a0b\u52a0\u5165\u5806\uff0ccontinue\n\n4.\u5982\u679c\u5f53\u524d\u8fdb\u7a0b\u4f18\u5148\u7ea7\u9ad8\uff0c\u5219\u5c06\u5f53\u524d\u8fdb\u7a0b\u653e\u5165\u5806\uff0c\u5806\u9876\u8fdb\u7a0b\u7ee7\u7eed\u7b49\u5f85\n\n\u8f93\u5165\u6587\u4ef6\u7ed3\u675f\u540e\uff0c\u9700\u8981\u5904\u7406\u5806\u4e2d\u5269\u4f59\u7684\u8fdb\u7a0b\uff0c\u76f4\u5230\u5806\u4e3a\u7a7a\u518d\u7ed3\u675f\u7a0b\u5e8f\n\n\u4ee3\u7801\uff08\u8d85\u7b80\u77ed\uff0c\u4ec520\u884c\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint id,a,b,c,t;//t\u4e3a\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5f00\u59cb\u65f6\u95f4\nstruct jc{\n\tint id,a,b,c;\n}p,q;//id\u4e3a\u5e8f\u53f7\uff0ca\u4e3a\u5f00\u59cb\u65f6\u95f4\uff0cb\u4e3a\u8fd0\u884c\u65f6\u95f4\uff0cc\u4e3a\u4f18\u5148\u7ea7\uff0cp\u5b58\u50a8\u5f53\u524d\u8fdb\u7a0b\uff0cq\u7528\u4e8e\u4fee\u6539\u5806\u9876\u8fdb\u7a0b\nbool operator <(jc x,jc y){\n\treturn x.c==y.c?x.a>y.a:x.c<y.c;\n}//\u6bd4\u8f83\u4f18\u5148\u7ea7\uff0c\u4f18\u5148\u7ea7\u76f8\u540c\u5219\u6bd4\u8f83\u5f00\u59cb\u65f6\u95f4\npriority_queue<jc>h;//\u5806\nint main(){\n\twhile(scanf(\"%d%d%d%d\",&id,&a,&b,&c)!=EOF){//\u5faa\u73af\u8bfb\u5165\n\t\tp.a=a,p.b=b,p.c=c,p.id=id;\n\t\twhile(!h.empty()&&a-t>=h.top().b)t+=h.top().b,printf(\"%d %d\\n\",h.top().id,t),h.pop();//\u5904\u7406\u4ece\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u5f00\u59cb\u65f6\u95f4\u5230\u6b64\u8fdb\u7a0b\u5f00\u59cb\u65f6\u95f4\u8fd0\u884c\u7684\u6240\u6709\u8fdb\u7a0b\n\t\tif(h.empty())t=a,h.push(p);//\u5806\u7a7a\n\t\telse if(p<h.top())h.push(p);//\u5806\u9876\u8fdb\u7a0b\u4f18\u5148\u7ea7\u9ad8\n\t\telse q=h.top(),h.pop(),q.b-=a-t,h.push(q),h.push(p),t=a;//\u5f53\u524d\u8fdb\u7a0b\u4f18\u5148\u7ea7\u9ad8\uff0c\u5219\u4fee\u6539\u5806\u9876\u8fdb\u7a0b\u5269\u4f59\u65f6\u95f4\uff0c\u518d\u5c06\u5806\u9876\u8fdb\u7a0b\u548c\u5f53\u524d\u8fdb\u7a0b\u90fd\u5165\u5806\n\t}\n\twhile(!h.empty())t+=h.top().b,printf(\"%d %d\\n\",h.top().id,t),h.pop();//\u5904\u7406\u8f93\u5165\u7ed3\u675f\u540e\u5269\u4f59\u7684\u8fdb\u7a0b\n}\n```\n",
        "postTime": 1564118441,
        "uid": 221955,
        "name": "panyf",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u601d\u8def\u7684\u8bdd\u697c\u4e0a\u7684dalao\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\u3002\n\n\u7ef4\u62a4\u4e00\u4e2acurt\u548ccput\uff0c\u7136\u540e\u7528\u5806\u7ef4\u62a4\u8fdb\u7a0b\u6267\u884c\u987a\u5e8f\u3002\n\n\u8fd9\u91cc\u5206\u4eab\u4e00\u4e2a\u5c0ftrick\uff0c\u5982\u679c\u76f4\u63a5`pq.top().xxx = xxx`\u7684\u8bdd\uff0c\u4f1aCE\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u53d8\u91cf\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u53ea\u8bfb\u7684\u4e1c\u897f\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7`T* t = (T*)((void*)&pq.top())`\u5c06\u5176\u8f6c\u6210\u53ef\u4ee5\u8bfb\u5199\uff0c\u7136\u540e`t->xxx = xxx`\uff08\u8be6\u89c1\u4ee3\u7801\uff09\n\n\u6ce8\u610f\uff0cxxx\u4e0d\u80fd\u53c2\u4e0e\u6392\u5e8f\uff0c\u5426\u5219\u4f1a\u7834\u574f\u5806\u7684\u6027\u8d28\u3002\u5b9e\u6d4b\u80fdAC\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\nusing namespace std;\n\nstruct line\n{\n\tint art;\n\tint lev;\n\tint contin; //\u8fd8\u5269\u4f59\u7684\u65f6\u95f4\n\tint id;\n};\n\nclass pqcmp\n{\npublic:\n\tbool operator()(line a,line b)\n\t{\n\t\tif(a.lev != b.lev)\n\t\t{\n\t\t\treturn a.lev < b.lev;\n\t\t}\n\t\treturn a.art > b.art;\n\t}\n};\n\ninline line makel(int id,int art,int runt,int lev)\n{\n\tline nl;\n\tnl.id = id;\n\tnl.art = art;\n\tnl.contin = runt;\n\tnl.lev = lev;\n\treturn nl;\n}\n\nint main()\n{\n\tpriority_queue<line,vector<line>,pqcmp> pq;\n\t\n\tint curt = 0;\n\tint cput = 0;\n\tint i,a,r,l;\n\twhile(scanf(\"%d%d%d%d\",&i,&a,&r,&l)!=EOF)\n\t{\n\t\tcurt = a;\n\t\t\n\t\twhile(cput < curt)\n\t\t{\n\t\t\tif(pq.empty())\n\t\t\t{\n\t\t\t\tcput = curt;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(cput + pq.top().contin <= curt)\n\t\t\t{\n\t\t\t\tcput += pq.top().contin;\n\t\t\t\tprintf(\"%d %d\\n\",pq.top().id,cput);\n\t\t\t\tpq.pop();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tline *t = (line*)((void*)&pq.top()); //trick\n\t\t\t\tt->contin -= curt-cput; //\u6ce8\u610f\uff0c\u8fd9\u91cccontin\u6ca1\u6709\u53c2\u4e0e\u6392\u5e8f\u624d\u80fd\u8fd9\u4e48\u7528\n\t\t\t\t\n\t\t\t\tcput = curt;\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpq.push(makel(i,a,r,l));\n\t}\n\t\n\tcurt = 0x7f7f7f7f;\n\t\n\twhile(cput < curt)\n\t{\n\t\tif(pq.empty())\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcput += pq.top().contin;\n\t\t\tprintf(\"%d %d\\n\",pq.top().id,cput);\n\t\t\tpq.pop();\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n```\n\n\u5728\u5de5\u7a0b\u91cc\u7528\u8fd9\u4e2a\u6280\u5de7\uff1f\u6b7b\u51e0\u5343\u6b21\u90fd\u4e0d\u591f\u3002",
        "postTime": 1563707065,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u6807\u51c6\u7684\u4f18\u5148\u7ea7\uff0c\u5f88\u660e\u663e\u8fd9\u4e2a\u9898\u5c31\u662f\u7528\u5806\u6765\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u7a0b\u5e8f\u7684\u5904\u7406\u65f6\u95f4\u4e86\u3002\n\n\u4e0d\u8fc7\u672c\u9898\u6709\u4e2a\u8981\u6c42\uff0c\u5c31\u662fcpu\u7a7a\u95f2\u65f6\uff0c\u5982\u679c\u6709\u591a\u4e2a\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8fdb\u7a0b\uff0c\u5219\u9009\u62e9\u5230\u8fbe\u65f6\u95f4\u6700\u65e9\u7684\u3002\u4e5f\u5c31\u662f\u6307\u5f53\u4f18\u5148\u7ea7\u76f8\u7b49\u65f6\uff0c\u4f7fid\u6700\u5c0f\u7684\u5904\u4e8e\u5806\u9876\u3002\n\n\u7531\u4e8estl\u4f18\u5148\u961f\u5217\u5806\u9ed8\u8ba4\u662f\u5927\u8ddf\u5806\uff08\u5373\u6700\u5927\u7684\u5728\u5806\u9876\uff09\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5c06\u9ed8\u8ba4\u7684\u5c0f\u4e8e\u53f7\u5728\u5224\u65ad\u65f6\u6539\u6210\u5927\u4e8e\u53f7\u5c31\u53d8\u6210\u5c0f\u6839\u5806\u4e86\u3002\n```cpp\nstruct node\n{\n\tint id,ti,le;\n    //\u5728\u672c\u9898\u5206\u522b\u5bf9\u5e94\u8fdb\u7a0b\u53f7\u3001\u5269\u4f59\u6267\u884c\u65f6\u95f4\u3001\u4f18\u5148\u7ea7\u3002\n\tbool operator < (const node &a) const\n\t{\n\t\tif(le==a.le) return id>a.id;//id\u66f4\u5c0f\u7684\u5728\u5806\u9876\n\t\telse return le<a.le;//\u4f18\u5148\u7ea7\u8ddf\u9ad8\u7684\u5728\u5806\u9876\n\t}\n\uff5d\npriority_queue<node>heap; \n\n```\n\n~~\u7531\u4e8e\u628a\u5230\u8fbe\u65f6\u95f4\u6700\u65e9\u770b\u6210\u6267\u884c\u65f6\u95f4\u6700\u77ed\u9001\u51fa\u4e00\u8840~~\n\n\u90a3\u4e48\u4f1a\u9020\u5806\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u6a21\u62df\u4e86\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u53ef\u4ee5\u5728\u6bcf\u6b21\u7a0b\u5e8f\u8fbe\u5230\u7684\u65f6\u5019\u8fdb\u884c\u4e00\u6b21\u6027\u5904\u7406cpu\uff08\u53ca\u5806\u91cc\uff09\u91cc\u7684\u4ee5\u524d\u672a\u5904\u7406\u7684\u7a0b\u5e8f\uff0c\u90a3\u4e48\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\u4e3anow,cuse\uff0c\u7b2c\u4e00\u4e2a\u662f\u76ee\u524d\u5904\u7406\u67d0\u4e00\u6570\u636e\u5904\u4e8e\u7684\u65f6\u95f4\uff0c\u7b2c\u4e8c\u4e2a\u4e3a\u5728now\u548c\u5230\u8fbe\u65b0\u7a0b\u5e8f\u4e4b\u95f4\u53ef\u4ee5\u4f7f\u7528\u7684\u65f6\u95f4\u3002\u6bcf\u6b21\u5904\u7406\u5806\u9876\u7a0b\u5e8f\u7684\u65f6\u5019\u5224\u65adcuse\u548c\u8be5\u7a0b\u5e8f\u7684ti\uff0c\u5982\u679cnow>=ti,\u4e5f\u5c31\u662f\u8bf4\u5728\u5230\u8fbe\u65b0\u7a0b\u5e8f\u4e4b\u524d\u8fd9\u4e2a\u7a0b\u5e8f\u5c31\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\u4e86\uff0c\u8f93\u51faid\u548cnow\uff0c\u5e76\u66f4\u65b0now\u548ccuse\uff0cnow=now+ti\uff0ccuse=cuse-ti\uff0c\u7136\u540e\u518d\u8fdb\u884c\u5224\u65ad\u4e0b\u4e00\u4e2a\u5806\u9876\u3002\n\n\u5982\u679cnow<it,\u90a3\u4e48\u5c31\u8ba9\u76ee\u524d\u5806\u9876\u5904\u7406\u65f6\u95f4\u51cf\u53bbnow\uff0c\u4f7fnow=0\uff0cnow=\u5f53\u524d\u65f6\u95f4\u70b9\u3002\n\n\u5f53\u6240\u6709\u7a0b\u5e8f\u90fd\u5230\u8fbe\u5b8c\u6bd5\u540e\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u6309\u5806\u7684\u987a\u5e8f\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u871c\u6c41\u7801\u98ce\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint read(){\n\tchar c=getchar();int a=0;bool f=0;\n\twhile(c<'0'||c>'9'){if(c=='-') f=1;c=getchar();}\n\twhile(c>='0'&&c<='9') a=(a<<1)+(a<<3)+(c^48),c=getchar();\n\treturn f?-a:a;\n}\nint pr(int a)\n{\n\tif(a<0){putchar('-');a=-a;}\n\tif(a>=10) pr(a/10);\n\tputchar(a%10+'0');\n}\nstruct node\n{\n\tint id,ti,le;\n\tbool operator < (const node &a) const\n\t{\n\t\tif(le==a.le) return id>a.id;\n\t\telse return le<a.le;\n\t}\n\tnode(int id,int ti,int le):id(id),ti(ti),le(le){}\n\tnode(){}\n};\npriority_queue<node>heap; \nint i,now=0,cuse=0,t,ti,le;\nnode it;\nbool f=0;\nint main()\n{\n\twhile(scanf(\"%d\",&i)!=EOF)\n\t{\n\t\tt=read(),ti=read(),le=read(),cuse=(t-now);\n\t\tif(!heap.empty()) it=heap.top();\n\t\twhile(!heap.empty()&&cuse>=it.ti&&now+it.ti<=t)\n\t\t{\n\t\t\tnow+=it.ti;\n\t\t\tcuse-=it.ti;\n\t\t\tpr(it.id);putchar(' ');pr(now);putchar('\\n');\n\t\t\theap.pop();\n\t\t\tif(!heap.empty()) it=heap.top();\n\t\t}\n\t\tif(!heap.empty()&&cuse)\n\t\t{\n\t\t\tit=heap.top();\n\t\t\theap.pop();\n\t\t\theap.push(node(it.id,it.ti-cuse,it.le));\n\t\t}\n\t\theap.push(node(i,ti,le));\n\t\tnow=t;\n\t}\n\twhile(!heap.empty())\n\t{\n\t\tit=heap.top();\n\t\tpr(it.id);putchar(' ');pr(now+it.ti);putchar('\\n');\n\t\tnow+=it.ti;\n\t\theap.pop();\n\t}\n}\n```\n",
        "postTime": 1554991915,
        "uid": 128616,
        "name": "\u849f\u84bbzExNocs",
        "ccfLevel": 0,
        "title": "P2278\u64cd\u4f5c\u7cfb\u7edf\u9898\u89e3"
    },
    {
        "content": "\u4e3b\u8981\u601d\u8def:\u6a21\u62df\uff0c\u4f18\u5148\u961f\u5217\n\n\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u91cd\u8f7d\u5c0f\u4e8e\u53f7\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u5c0f\u4e8e\u53f7\u7684\u5b9a\u4e49\u4e3a\u5982\u679c\u4e24\u4e2a\u5de5\u4f5c\u7b49\u7ea7\u76f8\u540c\uff0c\u90a3\u4e48\u6309\u7167\u5230\u8fbe\u65f6\u95f4\u5148\u540e\u6392\u5e8f\uff0c\u5426\u5219\u6309\u7167\u5de5\u4f5c\u7b49\u7ea7\u9ad8\u4f4e\u6392\u5e8f\n\n\u7136\u540e\u6bcf\u8f93\u5165\u4e00\u4e2a\u5de5\u4f5c\uff0c\u8003\u8651\u5728\u8fd9\u4e2a\u5de5\u4f5c\u6267\u884c\u4e4b\u524d\u6240\u6709\u53ef\u4ee5\u88ab\u5b8c\u6210\u7684\u5de5\u4f5c\uff0c\u5f53\u5df2\u7ecf\u4e0d\u5b58\u5728\u53ef\u4ee5\u88ab\u5b8c\u6210\u7684\u5de5\u4f5c\u4f46\u961f\u5217\u975e\u7a7a\u7684\u65f6\u5019\uff0c\u8868\u793a\u76ee\u524d\u7684\u5de5\u4f5c\u53ea\u80fd\u88ab\u5b8c\u6210\u4e00\u90e8\u5206\uff0c\u90a3\u4e48\u5904\u7406\u8fd9\u4e2a\u90e8\u5206\u5e76\u66f4\u65b0\u5f53\u524d\u65f6\u95f4\u548c\u8fd9\u4e2a\u5de5\u4f5c\u5b8c\u6210\u9700\u8981\u7684\u65f6\u95f4\n\n\u5bf9\u4e8e\u5728\u8f93\u5165\u7ed3\u675f\u540e\u8fd8\u6ca1\u6709\u88ab\u5b8c\u6210\u7684\u5de5\u4f5c\uff0c\u5176\u5df2\u7ecf\u5728\u4f18\u5148\u961f\u5217\u4e2d\u6309\u7167\u987a\u5e8f\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u4ece\u961f\u5934\u5f00\u59cb\u5b8c\u6210\u5e76\u8f93\u51fa\u5373\u53ef\n\n\u6ce8\u610f\u70b9:\n\n1.\u4f18\u5148\u961f\u5217\u4e2d\u5b9a\u4e49\u7684\u662f\u5c0f\u4e8e\u53f7\uff0c\u76f8\u5173\u5927\u5c0f\u6bd4\u8f83\u9700\u8981\u76f8\u53cd\n\n2.scanf\u5728\u6210\u529f\u8f93\u5165\u65f6\u7684\u8fd4\u56de\u503c\u662f\u8f93\u5165\u4e2a\u6570\uff0c\u5931\u8d25\u65f6\u8fd4\u56de\u503c\u662f-1\uff1b\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nstruct node{\n    int id,rea,nee,lev;\n    bool operator <(const node &rhs) const{\n        return lev==rhs.lev?rea>rhs.rea:lev<rhs.lev;\n    }\n};\nnode pre;\nint a,b,c,d,tnow=0;\npriority_queue<node>q;\nint main(){\n    while(scanf(\"%d %d %d %d\",&a,&b,&c,&d)!=EOF){\n        pre.id=a; pre.rea=b;\n        pre.nee=c;pre.lev=d;\n        while(!q.empty()&&tnow+q.top().nee<=pre.rea){\n            node fr=q.top();\n            q.pop();\n            printf(\"%d %d\\n\",fr.id,fr.nee+tnow);\n            tnow+=fr.nee;\n        }\n        if(!q.empty()){\n            node fr=q.top();\n            q.pop();\n            fr.nee=fr.nee-pre.rea+tnow;\n            q.push(fr);\n        }\n        q.push(pre);\n        tnow=pre.rea;\n    }    \n    while(!q.empty()){\n        node fr=q.top();\n        q.pop();\n        tnow+=fr.nee;\n        printf(\"%d %d\\n\",fr.id,tnow);\n    }\n    return 0;\n}\n\n````",
        "postTime": 1538986591,
        "uid": 106632,
        "name": "Rbrq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u663e\u7136\u8003\u8651\u7528\u4f18\u5148\u961f\u5217\u6a21\u62df\uff0c\u4e3a\u4e86\u79bb\u6563\u65f6\u95f4\uff0c\u964d\u4f4e\u590d\u6742\u5ea6\uff0c\u5f53\u52a0\u5165\u4e00\u4e2a\u65b0\u4efb\u52a1\u65f6\u518d\u66f4\u65b0\u5c40\u9762\n\n\u82e5\u961f\u9996\u4efb\u52a1\u53ef\u4ee5\u5728\u65b0\u4efb\u52a1\u5230\u8fbe\u524d\u5b8c\u6210 \u5219\u76f4\u63a5\u5f39\u51fa\u5e76\u8f93\u51fa\n\n\u82e5\u4e0d\u53ef\u4ee5\uff0c\u5219\u6d88\u8017\u6389\u5728\u65b0\u4efb\u52a1\u6765\u4e4b\u524d\u7684\u65f6\u95f4\uff08\u65f6\u95f4\u5feb\u8fdb\u5927\u6cd5\uff09\u7136\u540e\u52a0\u5165\u65b0\u4efb\u52a1\n\n\u6700\u540e\u6162\u6162\u628a\u6240\u6709\u5269\u4e0b\u7684\u8f93\u51fa\u5c31\u884c\u4e86\n\n\n> \u6ce8\u610f\uff1a\u6392\u5e8f\u548c\u6bd4\u8f83\u64cd\u4f5c\u90fd\u5728\u5df2\u5728\u201ccpu\u201d\u5185\u90e8\u8fdb\u884c\u4e86\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define MAXL 20000\ntemplate <typename T>\ninline void Swap(T &_a,T &_b){\n\tT t=_a;_a=_b,_b=t;\n}\ntemplate <typename T>\nstruct Heap{\n\tT a[MAXL+10];int tail;\n\tHeap():tail(0){}\n\tvoid Insert(const T _x){\n\t\ta[++tail]=_x;\n\t\tint p=tail;\n\t\twhile(p>1&&a[p]<a[p>>1]) Swap(a[p],a[p>>1]),p>>=1;\n\t}\n\tvoid Pop(void){\n\t\tif(tail==0) return ;\n\t\ta[1]=a[tail--];\n\t\tint p=2;\n\t\twhile(p<=tail){\n\t\t\tif(a[p+1]<a[p]) p++;\n\t\t\tif(a[p]<a[p>>1]) Swap(a[p],a[p>>1]);else break;\n\t\t\tp<<=1;\n\t\t}\n\t}\n\tconst T Top(void){\n\t\treturn a[1];\n\t}\n\tconst bool Empty(void){\n\t\treturn tail==0;\n\t}\n};\nstruct Task{\n\tint id,priority,startTime,usingTime;\n\tTask(){}\n\tTask(int _id,int _startTime,int _usingTime,int _priority):id(_id),priority(_priority),startTime(_startTime),usingTime(_usingTime){}\n\tfriend bool operator < (Task a,Task b){\n\t\tif(a.priority==b.priority) return a.id<b.id;\n\t\treturn a.priority>b.priority;\n\t}\n};\nHeap<Task> cpu;\nint main(){\n\tint a,b,c,d,now=0;\n\tTask u,v;\n\twhile(~scanf(\"%d%d%d%d\",&a,&b,&c,&d)){\n\t\tu=Task(a,b,c,d);\n\t\twhile(!cpu.Empty()){\n\t\t\tv=cpu.Top();cpu.Pop();\n\t\t\tif(now+v.usingTime<=u.startTime) {\n\t\t\t\tnow+=v.usingTime;\n\t\t\t\tprintf(\"%d %d\\n\",v.id,now);\n\t\t\t}else {\n\t\t\t\tv.usingTime-=u.startTime-now;\n\t\t\t\tcpu.Insert(v);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcpu.Insert(u);\n\t\tnow=u.startTime;\n\t}\n\twhile(!cpu.Empty()){\n\t\tu=cpu.Top();cpu.Pop();\n\t\tnow+=u.usingTime;\n\t\tprintf(\"%d %d\\n\",u.id,now);\n\t}\n\treturn 0;\n}\n```\n\u6beb\u4e0d\u8981\u8138\u7684\u8d34\u4e0a\u539f\u535a\u5ba2(\u672c\u4eba)\u5730\u5740\uff1a[https://oi.ozem.xyz/Luogu/p2278.html](https://oi.ozem.xyz/Luogu/p2278.html)",
        "postTime": 1523781755,
        "uid": 16225,
        "name": "EkiXu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709pas\u7684so\u6765\u4e00\u53d1\n\n\n**\u8d64\u88f8\u88f8**\u7684\u6a21\u62df\u554a\uff0c\u4e3a\u4e86\u4e0d**TLE**\u6240\u4ee5\u8981\u52a0\u4e2a\u5806\u4f18\u5316\n\n\n\u7ef4\u62a4\u4e00\u4e2a**\u6700\u5927\u5806**\n\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\ntype prog=\n    record\n        pid,start,time,level:longint;\n    end;\nvar \n    h:array[1..15001] of prog;\n    now,size,pid,start,time,level:longint;\n    t:prog;\nfunction cmp(x,y:prog):boolean;//\u6bd4\u8f83\u51fd\u6570\nbegin\n    if x.level>y.level then exit(true);//\u4f18\u5148\u7ea7\u9ad8\u7684\u5728\u524d\n    if (x.level=y.level)and(x.start<y.start) then exit(true);//\u5982\u679c\u4f18\u5148\u7ea7\u76f8\u7b49\u5148\u5230\u5148\u6765\n    exit(false);\nend;\nprocedure swap(x,y:longint);//\u4ea4\u6362\u51fd\u6570\nvar t:prog;\nbegin\n    t:=h[x];\n    h[x]:=h[y];\n    h[y]:=t;\nend;\nprocedure up(i:longint);//\u5806-\u5411\u4e0a\u8c03\u6574\nvar flag:boolean;\nbegin\n    if i=1 then exit();\n    flag:=true;\n    while (i<>1)and(flag) do\n    begin\n        if cmp(h[i],h[i div 2]) then \n            swap(i,i div 2)\n        else\n            flag:=false;\n        i:=i div 2;\n    end;\nend;\nprocedure down(i:longint);//\u5806-\u5411\u4e0b\u8c03\u6574\nvar t:longint;\n    flag:boolean;\nbegin\n    flag:=true;\n    while ((i*2)<=size)and(flag) do\n    begin\n        t:=i;\n        if cmp(h[i*2],h[i]) then t:=i*2;\n        if ((i*2+1)<=size) then\n            if cmp(h[i*2+1],h[t]) then t:=i*2+1;\n        if t<>i then\n        begin\n            swap(i,t);\n            i:=t;\n        end else\n            flag:=false;\n    end;\nend;\nfunction pop():prog;//\u53d6\u5806\u9876\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u53d6\u4f18\u5148\u7ea7\u6700\u9ad8\u5148\u5230\u7684\u90a3\u4e2a\u8fdb\u7a0b\nvar t:prog;\nbegin\n    t:=h[1];\n    h[1]:=h[size];\n    size:=size-1;\n    down(1);\n    exit(t);\nend;\nbegin\n    now:=0;//\u73b0\u5728\u65f6\u95f4\n    while not eof do //\u8bfb\u5230\u6587\u4ef6\u7ed3\u675f \"eof\": End Of File\n    begin\n        readln(pid,start,time,level);\n        //\u4f18\u5316-\u5982\u679c\u4e0b\u4e00\u4e2a\u6765\u7684\u65f6\u95f4\u4e4b\u524d\u5f53\u524d\u8fdb\u7a0b\u80fd\u5904\u7406\u5b8c\n        while (size>0)and(h[1].time<=start-now) do\n        begin\n            t:=pop();\n            inc(now,t.time);\n            writeln(t.pid,' ',now);\n        end;\n        //\u4f18\u5316 \u5904\u7406\u5b8c\u65f6 \u5982\u679c\u81f3\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u5230\u6765\u8fd8\u6709\u65f6\u95f4\u5219\u8df3\u8fc7\n        if (size>0)and((start-now)>0) then \n            dec(h[1].time,start-now);\n        now:=start;//\u66f4\u65b0\u73b0\u5728\u65f6\u95f4\n        //\u4f18\u5316-\u5806\n        inc(size);\n        h[size].time:=time;\n        h[size].start:=start;\n        h[size].pid:=pid;\n        h[size].level:=level;\n        up(size);\n    end;\n    //\u6267\u884c\u6700\u540e\u51e0\u4e2a\u8fdb\u7a0b\n    while (size>0) do \n    begin\n        t:=pop();\n        inc(now,t.time);\n        writeln(t.pid,' ',now);\n    end;\nend.\n```",
        "postTime": 1504169506,
        "uid": 16730,
        "name": "\u5fa1\u5742\u5fa1\u5742",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u57fa\u672c\u4e0a\u662f\u6a21\u677f\u9898\n\n\u5b58\u6bcf\u4e2a\u4efb\u52a1\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u5269\u4f59\u65f6\u95f4\u3002\n\n\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\u5143\u7d20\uff0c\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\u524d\u5224\u65ad\u4e00\u4e0b\u5728\u5f53\u524d\u65f6\u95f4\u548c\u5b8c\u6210\u65f6\u95f4\u4e4b\u4e2d\u6709\u6ca1\u6709\u65b0\u4efb\u52a1\u51fa\u73b0\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u5904\u7406\u3002\u5982\u679c\u6709\u5c31\u5148\u5230\u8fbe\u4e0b\u4e2a\u4efb\u52a1\u7684\u65f6\u95f4\uff0c\u66f4\u65b0\u5269\u4f59\u65f6\u95f4\u3002\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#define fa (o>>1)\nusing std::swap;\nusing std::vector;\nusing std::max;\nconst int SZ=15010;\nstruct TASK{int pid,at,dt,pri;\nTASK(int a,int b,int c,int d):pid(a),at(b),dt(c),pri(d){}\nbool operator<(const TASK& rhs)const {\n    if(pri==rhs.pri) return at>rhs.at;\n    return pri<rhs.pri;\n}\nbool operator>(const TASK& rhs)const {\n    if(pri==rhs.pri) return at<rhs.at;\n    return pri>rhs.pri;\n}\n};\nvector<TASK> vec;\nstruct HP{\n    int st[SZ<<2],sz;\n    void up(int o){\n        while(o>1){\n            if(vec[st[o]]>vec[st[fa]]) swap(st[o],st[fa]),o=fa;\n            else break;\n        }\n    }\n    void down(int o){\n        while((o<<1)<=sz){\n            int mxch=o<<1;\n            if(mxch<sz&&vec[st[mxch]]<vec[st[mxch+1]]) mxch++;\n            if(vec[st[o]]<vec[st[mxch]]) swap(st[o],st[mxch]),o=mxch;\n            else break;\n        }\n    }\n    void in(int iid){\n        st[++sz]=iid;\n        up(sz);\n    }\n    int pop(){\n        int ret=st[1];\n        swap(st[1],st[sz]);\n        sz--;\n        down(1);\n        return ret;\n    }\n}hp;\nlong long nowt;\nvoid show(int iid){\n    printf(\"Time %lld : pid %d left:%d\\n\",nowt,vec[iid].pid,vec[iid].dt);\n}\nint main(){\n    int a,b,c,d;\n    while(scanf(\"%d%d%d%d\",&a,&b,&c,&d)!=EOF) vec.push_back(TASK(a,b,c,d));\n    for(int i=0;i<vec.size();i++){\n        hp.in(i);\n        nowt=max(nowt,(long long)vec[i].at);\n        while(hp.sz){\n            int top=hp.st[1];\n            //show(top);\n            if(i+1<vec.size()){\n                if(nowt+vec[top].dt<=vec[i+1].at)\n                    printf(\"%d %lld\\n\",vec[top].pid,nowt+=vec[top].dt),hp.pop();\n                else {\n                    vec[top].dt-=vec[i+1].at-nowt;\n                    nowt=vec[i+1].at;\n                    hp.in(++i);\n                }\n            }\n            else printf(\"%d %lld\\n\",vec[top].pid,nowt+=vec[top].dt),hp.pop();\n        }\n    }\n}\n```",
        "postTime": 1474966139,
        "uid": 15183,
        "name": "Rapiz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u5e94\u7528\u4f18\u5148\u961f\u5217\u7684\u786e\u662f\u4e00\u53ef\u884c\u7684\u7b97\u6cd5\uff0c\u4f46\u8fd9\u9053\u9898\u8fd8\u53ef\u4ee5\u7528\u5806\u3002\n\n\u5148\u521d\u59cb\u5316\u4e00\u4e2a\u5b58\u50a8\u8fdb\u7a0b\u7684\u5806\uff0c\u4ee4\u5806\u4e3a\u7a7a\uff0ci=0\u3002\u7136\u540e\u8ba9\u7a0b\u5e8f\u505a\u4ee5\u4e0b\u6b65\u9aa4n\uff08n\u4e3a\u8fdb\u7a0b\u6570\uff09\u6b21\uff1a\n\n1\u3001\u8ba9i\u589e\u52a01\uff1b\n\n2\u3001\u82e5\u5806\u4e0d\u4e3a\u7a7a\u4e14\u5806\u9876\u8fdb\u7a0b\u80fd\u5728\u7b2ci\u4e2a\u8fdb\u7a0b\u5230\u8fbe\u524d\u8fd0\u884c\u5b8c\u6bd5\uff0c\u5219\u8f93\u51fa\u8fd0\u884c\u7ed3\u675f\u65f6\u95f4\u5e76\u5220\u9664\u6b64\u8fdb\u7a0b\u5143\u7d20\uff0c\u7136\u540e\u91cd\u590d\u6b64\u6b65\u9aa4\u76f4\u5230\u5806\u4e3a\u7a7a\u6216\u5806\u9876\u8fdb\u7a0b\u4e0d\u80fd\u5728\u7b2ci\u4e2a\u8fdb\u7a0b\u5230\u8fbe\u524d\u8fd0\u884c\u5b8c\u6bd5\uff08\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u5f53\u524d\u65f6\u95f4\u548c\u8fdb\u7a0b\u8fd0\u884c\u65f6\u95f4\uff09\uff1b\n\n3\u3001\u5c06\u8fdb\u7a0bi\u5165\u5806\u3002\n\n\u5f53\u7136\uff0c\u52a0\u5165\u6216\u5220\u9664\u5143\u7d20\u4e4b\u540e\u8981\u8c03\u6574\u5806\u3002\u6700\u540e\uff0c\u8ba9\u7a0b\u5e8f\u91cd\u590d\u505a\u4e00\u4e0b\u6b65\u9aa4\u76f4\u81f3\u5806\u4e3a\u7a7a\uff1a\n\n1\u3001\u8f93\u51fa\u8fd0\u884c\u7ed3\u675f\u65f6\u95f4\uff1b\n\n2\u3001\u5220\u9664\u6b64\u8fdb\u7a0b\u5143\u7d20\u3002\n\n\u540c\u6837\u7684\uff0c\u6bcf\u91cd\u590d\u4e4b\u540e\u90fd\u8981\u8c03\u6574\u5806\u3002\u663e\u7136\uff0c\u6b64\u7b97\u6cd5\u662f\u53ef\u884c\u7684\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogn)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\nusing namespace std;\nstruct attribute\n{\n       int number,arrive,surplus,level;\n};\nstruct list\n{\n       attribute process[300002];\n       int n;\n}in,heap;\nint i,end,now;\nbool compare (attribute first,attribute last)\n{\n     return first.level>last.level||first.level==last.level&&first.arrive<last.arrive;\n}\nvoid heapify (int No)\n{\n     if (compare(heap.process[No*2],heap.process[No])&&No*2<=heap.n&&(compare(heap.process[No*2],heap.process[No*2+1])||No*2+1>heap.n))\n     {\n                                                                                                                                        swap(heap.process[No],heap.process[No*2]);\n                                                                                                                                        heapify(No*2);\n     }\n     else\n     if (compare(heap.process[No*2+1],heap.process[No])&&No*2+1<=heap.n)\n     {\n                                                                       swap(heap.process[No],heap.process[No*2+1]);\n                                                                       heapify(No*2+1);\n     }\n}\nvoid insert (int No)\n{\n     if (compare(heap.process[No],heap.process[No/2])&&No>1)\n     {\n                                                            swap(heap.process[No/2],heap.process[No]);\n                                                            insert(No/2);\n     }\n}\nint main ()\n{\n    freopen(\".in\",\"r\",stdin);\n    freopen(\".out\",\"w\",stdout);\n    for (in.n=1;scanf(\"%d %d %d %d\",&in.process[in.n].number,&in.process[in.n].arrive,&in.process[in.n].surplus,&in.process[in.n].level)>0;in.n++);\n    in.n--;\n    heap.n=0;\n    in.process[i-1].arrive=0;\n    for (i=1;i<=in.n;i++)\n    {\n        heap.process[1].surplus-=in.process[i].arrive-in.process[i-1].arrive;\n        end=in.process[i].arrive+heap.process[1].surplus;\n        while (heap.process[1].surplus<=0&&heap.n>0)\n        {\n              cout<<heap.process[1].number<<' '<<end<<endl;\n              heap.process[1]=heap.process[heap.n];\n              heap.n--;\n              heapify(1);\n              heap.process[1].surplus-=in.process[i].arrive-end;\n              end=in.process[i].arrive+heap.process[1].surplus;\n        }\n        end=in.process[i].arrive;\n        heap.n++;\n        heap.process[heap.n]=in.process[i];\n        insert(heap.n);\n    }\n    now=end;\n    for (;heap.n>=1;heap.n--)\n    {\n        now+=heap.process[1].surplus;\n        cout<<heap.process[1].number<<' '<<now<<endl;\n        heap.process[1]=heap.process[heap.n];\n        heapify(1);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1437913544,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7528\u4f18\u5148\u961f\u5217\u6a21\u62df\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u4e00\u5b9a\u8981\u5feb\u901f\u8bfb\u5165\uff0c\u6211\u7528cin\u5c31TLE\u4e86\n\n```cpp\n\n#include<algorithm>\n#include<queue>\n#include<vector>\n#include<cstdio>\nusing namespace std;\nstruct Process\n{\n    int Pid, StartTime, LastTime, Priority;\n    Process(int pid, int st, int lt, int p) :Pid(pid), StartTime(st), LastTime(lt), Priority(p) {}\n    bool operator <(const Process &p) const\n    {\n        return StartTime < p.StartTime;\n    }\n};\nvector<Process> v;\nstruct Ptr\n{\n    int no;\n    Ptr(int p) :no(p) {}\n    bool operator <(const Ptr &p) const\n    {\n        Process &a = v[no], &b = v[p.no];\n        return a.Priority == b.Priority ? a.StartTime>b.StartTime:a.Priority < b.Priority;\n    }\n};\nint read()\n{\n    int x = 0, f = 1; char ch = getchar();\n    while (ch<'0' || ch>'9'){ if (ch == '-')f = -1; ch = getchar(); }\n    while (ch >= '0'&&ch <= '9'){ x = x * 10 + ch - '0'; ch = getchar(); }\n    return x*f;\n}\nint main()\n{\n    priority_queue<Ptr> q;\n    int a, b, c, d;\n    while (scanf(\"%d\", &a) != EOF)\n    {\n        b = read();\n        c = read();\n        d = read();\n        v.push_back(Process(a, b, c, d));\n    }\n    sort(v.begin(), v.end());\n    vector<Process>::iterator it = v.begin(), top;\n    for (int t = 1;;)\n    {\n        if (!q.empty() && top->LastTime == 0)\n        {\n            printf(\"%d %d\\n\", top->Pid, t);\n            q.pop();\n            if (!q.empty()) top = v.begin() + q.top().no;\n        }\n        if (it != v.end() && it->StartTime == t)\n        {\n            q.push(Ptr(it - v.begin()));\n            top = v.begin() + q.top().no;\n            it++;\n        }\n        if (q.empty() && it == v.end()) break;\n        if (q.empty())\n        {\n            t = it->StartTime;\n        }\n        else if (it == v.end())\n        {\n            t += top->LastTime;\n            top->LastTime = 0;\n        }\n        else\n        {\n            int dt = min(it->StartTime - t, top->LastTime);\n            t += dt;\n            top->LastTime -= dt;\n        }\n    }\n}\n\n```",
        "postTime": 1430193120,
        "uid": 6210,
        "name": "sqc1999",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2278 \u3010[HNOI2003]\u64cd\u4f5c\u7cfb\u7edf\u3011"
    }
]