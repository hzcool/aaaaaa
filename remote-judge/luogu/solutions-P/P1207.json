[
    {
        "content": "### \u54b1\u4e0d\u8c08\u4ec0\u4e48\u9ad8\u7ea7\u7b97\u6cd5\uff0c\u4ec0\u4e48\u9ad8\u6df1\u6a21\u62df\uff0c\u751a\u81f3\u8f6c\u5316\u8fdb\u5236\u90fd\u4e0d\u9700\u8981\u3002\n\n### \u5e76\u4e14\uff0c\u7b97\u6cd5\u590d\u6742\u5ea6\u6700\u9ad8\u4ec5\u4e3a$O(n+300)$\n\n### \u66f4\u52a0NB\u7684\u662f\uff0cmain\u91cc\u7684\u4ee3\u7801\u4ec5\u4ec54\u884c\uff01\n\n\u90a3\u4e48\u4f60\u53ef\u80fd\u8981\u95ee\u6211\u662f\u4ec0\u4e48\u4ee3\u7801\u8fd9\u4e48NB\u3002\n\n**\u7b54\u6848\u5c31\u662f\uff1a\u6253\u8868\u65e0\u654c\uff01\uff01\uff01\uff01**\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint num[300]={0,1,2,3,4,5,6,7,8,9,10,15,16,\n17,18,20,21,24,26,27,28,31,\n33,36,40,45,46,50,51,52,55,\n57,63,65,67,73,78,80,82,85,\n88,91,92,93,98,99,100,104,105,107,\n109,111,114,119,121,127,129,130,135,141,\n142,150,151,154,160,164,170,171,173,178,\n182,185,186,191,195,200,203,209,212,215,\n219,227,235,242,246,252,255,257,264,273,\n282,292,300,313,316,325,328,333,341,342,\n343,357,364,365,373,381,393,400,414,427,\n434,438,446,455,464,471,484,495,511,513,\n546,555,560,564,585,624,626,644,646,651,\n656,666,676,692,693,701,717,728,730,757,\n771,777,787,819,820,856,868,910,939,975,\n1023,1025,1066,1105,1221,1285,1312,1365,1432,1441,\n1460,1539,1550,1640,1667,1755,1885,2000,2188,2268,\n2293,2550,2565,2709,2730,2910,2920,2925,2997,3069,\n3074,3075,3280,3315,3550,3591,3640,3663,3735,3740,\n3855,3951,3999,4095,4097,4161,4225,4257,4289,4369,\n4433,4593,4617,4681,5001,5049,5125,5189,5397,5461,\n5740,5840,5854,6148,6200,6560,6562,6643,6697,6724,\n6761,6825,6886,6889,6953,7300,7373,7381,7409,7447,\n7462,7517,7667,7703,7777,7801,7997,8038,8119,8194,\n8200,8258,8281,8322,8386,8578,8778,8802,9009,9103,\n9201,9222,9490,9958,10252,10308,10658,10794,10858,10922,\n10986,11253,11314,11757,11898,11950,12291,12355,12419,12483, \n12547,12654,12691,13107,13124,13131,13205,13286,13299,13331};\nint n,s,g;\nint main()\n{\n\tcin>>n>>s;\n\tfor(g=1;num[g]<=s;g++);\n\tfor(int i=0;i<n;i++)cout<<num[g+i]<<endl;\n\treturn 0;\n}\n```\n\n**\u4f60\u8981\u662f\u770b\u8fd9\u4e2a\u4ee3\u7801\u8fd8\u4e0d\u4f1a\uff0c\u7b97\u6211\u8f93\u3002**\n\n## \u5f53\u7136\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u8fd9\u4e2a\u8868\u662f\u4ece\u54ea\u91cc\u6765\u7684\uff1f\n\n**~~\u7b54\uff1a\u6211\u4f1a\u624b\u7b97\uff01~~**\n\n**\u7b54\uff1a\u6211\u4f1a\u5199\u4ee3\u7801\uff01**\n\n\u90a3\u4e48\u600e\u4e48\u5199\u8fd9\u4e2a\u4ee3\u7801\u5462\uff1f\n\n## **\u6ce8\u610f\uff1a\u4e0b\u9762\u8981\u5f00\u59cb\u4ecb\u7ecd\u6253\u8868\u7684\u6280\u5de7\uff0c\u8fd9\u4e9b\u6280\u5de7\u53ef\u80fd\u4f1a\u5728\u6bd4\u8d5b\u4e2d\u7528\u5230**\n\n### **\u8fd9\u4e9b\u6280\u5de7\u4ec5\u9002\u7528\u4e8e\u8f83\u96be\u9898~~\u4ee5\u53ca\u61d2\u5f97\u5199\u4ee3\u7801~~\u3002\u5b9e\u4e43\u9a97\u5206\u597d\u6cd5\u3002**\n\n- ### \u7b2c\u4e00\u6b65\n\n\u770b\u9898\u76ee\uff0c**\u6211\u4eec\u8981\u6c42\u7684\u662f\u6ee1\u8db3\u81f3\u5c11\u4e24\u4e2a\u8fdb\u5236\u7684\u56de\u6587\u6570\u5bf9\u5427\u3002**\n\n\u90a3\u4e48\u6211\u4eec\u5148\u65b0\u5f00\u4e00\u4e2a\u6e90\u7801\u6c42\u6bcf\u4e2a\u8fdb\u5236\u4e0b\u7684\u56de\u6587\u6570\u3002\n\n**\u7a0d\u5fae\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u56de\u6587\u6570\u770b\u505a\u4e00\u4e2a\u6570\u6b63\u7740\u8f93\u4e00\u904d\uff0c\u5728\u5012\u7740\u8f93\u4e00\u904d\u3002\uff08\u5982\u679c\u662f\u5947\u6570\u4f4d\u4e2d\u95f4\u7684\u6570\u53ea\u8f931\u6b21\uff09** \u90a3\u4e48\u6211\u4eec\u7684**\u7b2c\u4e00\u4efd\u6e90\u7801**\u5c31\u51fa\u6765\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528for\u5957for\u5957for....\u8fd9\u4e2a\u4ee3\u7801\u6c42\u6bcf\u4e2a\u8fdb\u5236\u4e0b\u7684\u56de\u6587\u6570\uff0c\u542c\u8d77\u6765\u4e0d\u96be\u662f\u5427\uff1f>.<\n\n**\u7531\u4e8e\u662f\u4e0d\u540c\u8fdb\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u52a0\u4e0a\u9650\u5236\u6761\u4ef6\u3002\u5373\u6bcf\u4e00\u4f4d\u679a\u4e3e\u4e0d\u80fd\u5927\u4e8e$k$\uff0c$k$\u4e3a\u8fdb\u5236\u6570\u3002**\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u8f93\u51fa\u3002\uff08\u8bb0\u5f97\u7528$freopen$\uff01\uff09\n\n\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u6c424\u8fdb\u52367\uff0c8\u4f4d\u56de\u6587\u6570\u7684\u8fc7\u7a0b\u3002**\u5f53\u7136\u8fd9\u4e2a\u4ee3\u7801\u53ef\u4ee5\u8fd0\u884c9\u6b21\u3002\u53ea\u9700\u8981\u628a\u9650\u5236\u6761\u4ef64\u6539\u4e3a2-10\u4e2d\u7684\u53e6\u4e00\u4e2a\u6570\u518d\u8fd0\u884c\u5c31\u53ef\u4ee5\u4e86\u3002\u8981\u6c42\u5176\u4ed6\u4f4d\u6570\u7684\u56de\u6587\u6570\u53ea\u9700\u8981\u589e\u51cffor\u5faa\u73af\u4e2a\u6570\u4ee5\u53cacout\u4e2a\u6570\u5c31\u53ef\u4ee5\u4e86\u3002**\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tfor(int a=1;a<4;a++)\n\t\tfor(int b=1;b<4;b++)\n\t\t\tfor(int c=1;c<4;c++)\n\t\t\t\tfor(int d=1;d<4;d++)//\u4f60\u8981\u662f\u591f\u83bd\uff0c\u53ef\u4ee5\u5f00\u66f4\u591afor\n\t\t\t\t{\n\t\t\t\t\tcout<<a<<b<<c<<d<<c<<b<<a;\n\t\t\t\t\tcout<<a<<b<<c<<d<<d<<c<<b<<a;\n\t\t\t\t}\t\n}\n```\n\u5f53\u7136\u542c\u8d77\u6765\u597d\u50cf\u662f\u5f88\u9ebb\u70e6\uff0c\u4f46\u662f\u505a\u8d77\u6765\u7684\u6548\u7387\u5176\u5b9e\u86ee\u9ad8\u4e86\u3002**\u5982\u679c\u4f60\u8fd8\u662f\u5acc\u9ebb\u70e6\uff0c\u4f60\u53ef\u4ee5\u5199\u4e2a\u9012\u5f52\uff0c\u7528\u6539\u53d8\u91cf\u7684\u65b9\u5f0f\u66ff\u4ee3\u6539for\u4e8ecout\u3002**\n\n\u597d\u4e86\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5404\u4e2a\u8fdb\u5236\u4e0b\u7684\u56de\u6587\u6570\u3002\n\n\uff08\u4ec0\u4e48\uff01\u4f60\u628a\u6570\u636e\u4e22\u4e86\uff1f\u6211\u53eb\u8fc7\u4f60\u7528$freopen$\u5427\uff1f\uff09\n\n- ### \u7b2c\u4e8c\u6b65\uff1a\n\n\u6211\u4eec\u73b0\u5728\u9700\u8981\u628a\u4f60\u5f97\u5230\u5404\u4e2a\u8fdb\u5236\u4e0b\u7684\u56de\u6587\u6570\u5168\u90e8\u8f6c\u5316\u4e3a10\u8fdb\u5236\u3002\n\n\u8fd9\u4e2a\u5b9e\u73b0\u5f88\u7b80\u5355\u5427\u3002\u90a3\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\u4e86\uff01\n\n\u8bb0\u4f4f\u8981\u52a0$freopen$\uff01\u522b\u770b\u6211\u6ca1\u52a0\uff01~~\u6211\u61d2~~\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,ans;//\u5176\u4e2d,k\u4ee3\u8868\u8fdb\u5236\u3002\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\nint main()\n{\n\twhile(cin>>n)\n\t{\n\t\tfor(int i=0;n;i++)//\u5176\u4e2di\u4e3a\u8fdb\u5236\u4f4d\u6570\uff0c\u4e3a\u7d2f\u4e58\u670d\u52a1\n\t\t{\n\t\t\tint tmp=n%10;//\u53d6\u6700\u540e\u4e00\u4f4d\n\t\t\telse for(int j=1;j<=i;j++)tmp*=k;\n\t\t\tans+=tmp;\n\t\t\tn/=10;//\u4e22\u6700\u540e\u4e00\u4f4d\n\t\t}\n\t\tcout<<ans<<\" \";\n\t}\n}\n```\n\n- ### \u7b2c\u4e09\u6b65\n\n\u73b0\u5728\u4f60\u5f97\u5230\u7684\u56de\u6587\u6570\u5168\u662f10\u8fdb\u5236\u4e86\u3002\u4f46\u662f\u9898\u76ee\u8981\u6c42\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u4e24\u79cd\u8fdb\u5236\u7684\u56de\u6587\u6570\u624d\u7b97\u3002\n\n\u6211\u4eec\u600e\u4e48\u505a\u5462\uff1f\n\n\u975e\u5e38\u7b80\u5355\uff01\u4f60\u521a\u521a\u5f97\u5230\u4e869\u4e2a\u6587\u4ef6\u5bf9\u5427\uff1f\u4ed6\u4eec\u8bb0\u5f55\u4e86\u5404\u4e2a\u8fdb\u5236\u7684\u56de\u6587\u6570\uff0c\u5e76\u4e14\u5168\u90e8\u8f6c\u5316\u4e3a\u4e8610\u8fdb\u5236\u3002\n\n**\u90a3\u4e48\u5c31\u4e0a\u9ed1\u79d1\u6280\uff1aCtrl+C and Ctrl+V**\n\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u628a\u6240\u6709\u7684\u6570\u636e\u8d34\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u3002\n\n**\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5f88\u5feb\u4e50\u7684\u7528\u4e00\u4e2a\u5224\u91cd\u4ee3\u7801\u6765\u8f93\u51fa\u90a3\u4e9b\u51fa\u73b0\u6b21\u6570\u591a\u4f592\u7684\u6570\u5b57\u3002**\n\n\u8bb0\u4f4f\u8981$freopen$\uff01\uff01\uff08\u8bdd\u8bf4\u8fd9\u662f\u7b2c\u51e0\u56de\u63d0\u9192\u4e86...\uff09\n\n### \u5230\u6b64\u4e3a\u6b62\uff01\u4f60\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u8868!\n\n~~\u662f\u4e0d\u662f\u88ab\u6211\u7684\u9a97\u5206\u65b9\u6cd5\u611f\u52a8\u4e86~~\n\n# \u603b\u7ed3\n**\u867d\u8bf4\u6253\u8868\u66b4\u529b\u65e0\u60c5\uff0c\u4f46\u662f\u5176\u5b9e\u6253\u8868\u4e5f\u6709\u4ed6\u72ec\u7279\u7684\u65b9\u6cd5\u3002\u5982\u679c\u4f60\u80fd\u5728\u9002\u5f53\u65f6\u95f4\u8fdb\u884c\u6253\u8868\uff0c\u90a3\u4e48\u4f60\u603b\u80fd\u5360\u5230\u4e00\u4e9b\u4fbf\u5b9c\u3002\u4e0a\u9762\u90a3\u4e2a\u9898\u4e0d\u662f\u5f88\u96be\uff0c\u53ef\u80fd\u8fd8\u6ca1\u5230\u6253\u4e00\u4e2a\u8868\u7684\u5730\u6b65\u3002\u4f46\u662f\u6211\u8fd9\u91cc\u7740\u91cd\u5c55\u793a\u4e86\u6253\u8868\u7684\u65b9\u6cd5\u3002\u5e0c\u671b\u5bf9\u5404\u4f4dOIer\u6709\u5e2e\u52a9\uff01**",
        "postTime": 1558872787,
        "uid": 133426,
        "name": "stone_juice\u77f3\u6c41",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u666e\u901a\u7684\u66b4\u529b\u679a\u4e3e\u505a\u6cd5\u4e0d\u8bf4\u4e86\uff0c\u67d0\u4f4d\u5de8\u4f6c\u5df2\u7ecf\u8bb2\u5b8c\u4e86\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u6700\u590d\u6742\u7684\u90e8\u5206\u5c31\u662f\u8f6c\u6362\u8fdb\u5236\u7684\u90e8\u5206\uff0c\u8fd9\u4f4d\u5de8\u4f6c\u662f\u624b\u5199\u7684\u3002\u4f46\u5728\u8fd9\u91cc\u6211\u8981\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e2a\u51fd\u6570\uff1a$itoa$\uff01\n\n### $itoa$\u51fd\u6570\u662f\u7528\u6765\u5e72\u5565\u7684\n\n$itoa$\u662f$integer$ $to$ $ascii$\u7684\u7f29\u5199\u3002\u6b64\u51fd\u6570\u80fd\u591f\u5c06\u4e00\u4e2a$int$\u7c7b\u578b\u7684\u6570\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\u3002\u4e0d\u8fc7\u8fd9\u53ef\u4e0d\u662f\u7b80\u5355\u7684\u590d\u5236\uff0c\u5b83\u8fd8\u80fd\u591f\u8f6c\u6362\u8fdb\u5236\uff01\n\n\u8ba9\u6211\u4eec\u770b\u770b\u5e93\u5f62\u53c2\uff1a```itoa(int _Val, char *_DstBuf, int _Radix)```\u3002\u7b2c\u4e00\u4e2a```_Val```\u662f\u4f60\u8981\u8f6c\u6362\u7684\u6570\uff0c\u7b2c\u4e8c\u4e2a```*_DstBuf```\u4f20\u8fdb\u53bb\u7684\u662f\u4e00\u4e2a```char *```\u7c7b\u578b\u7684\uff08\u610f\u601d\u662f\u4f20\u8fdb\u53bb\u4e00\u4e2a\u6570\u7ec4\uff09\uff0c\u4ee3\u8868\u4f60\u8981\u8d4b\u503c\u7684\u6570\u7ec4\u3002\u7b2c\u4e09\u4e2a```_Radix```\u5c31\u662f\u4f60\u8981\u8f6c\u6362\u7684\u8fdb\u5236\u4e86\u3002\n\n### $itoa$\u7684\u95ee\u9898\n\n- $Linux$\u4e0b\u5e76\u6ca1\u6709$itoa$\u51fd\u6570\uff01\u6240\u4ee5\u5343\u4e07\u4e0d\u8981\u518d$NOIp$\u6216\u6d1b\u8c37\u4e0a\u4f7f\u7528$itoa$\u51fd\u6570\uff0c\u5426\u5219\u4f1a$CE$\uff01\n\n- $itoa$\u51fd\u6570\u518d\u8f6c\u6362\u6210\u5927\u4e8e$10$\u8fdb\u5236\u7684\u65f6\u5019\u662f\u5c0f\u5199\u5b57\u6bcd\u3002\u6240\u4ee5\u5982\u679c\u9898\u76ee\u8981\u8f93\u51fa\u5927\u5199\u5b57\u6bcd\u7684\u8bdd\u8fd8\u8981\u5355\u5904\u7406\u3002\n\n\u6ce8\uff1a\u867d\u7136$itoa$\u5e76\u4e0d\u80fd\u5728$NOIp$\u4e0a\u7528\uff0c\u4f46\u53ef\u4ee5\u5728\u975e$Linux$\u7684\u73af\u5883\u4e0b\u7684\u6bd4\u8d5b\u4f7f\u7528\u5e76\u4e14\u6b64\u51fd\u6570\u975e\u5e38\u6709\u7528\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c$itoa$\u6700\u4e3b\u8981\u7684\u4f5c\u7528\u662f\u8f6c\u6362\u8fdb\u5236\u3002\n\n**\u6838\u5fc3\u4ee3\u7801\uff1a**\n\n```\n    for(int i = n + 1; ; i ++ ) {//\u66b4\u529b\u679a\u4e3e\n    \tint Counter = 0;//i\u662f\u4e0d\u662f\u53cc\u91cd\u56de\u6587\u6570\n    \tfor(int j = 2; j <= 10; j ++ ) {/2\u523010\u8fdb\u5236\u679a\u4e3e\n    \t\tif(i % j == 0) continue;//\u5982\u679c\u672b\u5c3e\u662f0\uff0c\u76f4\u63a5\u679a\u4e3e\u4e0b\u4e00\u79cd\n    \t\titoa(i, str, j);//\u8f6c\u6362\u8fdb\u5236\n    \t\tif(check(str) == true) {//check\u51fd\u6570\u662f\u7528\u6765\u5224\u65adstr\u662f\u4e0d\u662f\u56de\u6587\u4e32\u7684\uff0c\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\n    \t\t\tCounter ++ ;\n            }\n            if(Counter == 2) break;\n        }\n        \n        if(Counter == 2) {\n            printf(\"%d\\n\", i);\n            counter ++ ;//\u8fd9\u662f\u5927\u7684\u8ba1\u6570\u5668\n        } \n        \n        if(counter == s) exit(0);\n    } \n\n```\n\n### \u5982\u679c\u60a8\u89c9\u5f97\u8fd8\u884c\u7684\u8bdd\u8bf7\u5230\u9876\u90e8\u70b9\u4e2a\u8d5e\u5427",
        "postTime": 1554721122,
        "uid": 89396,
        "name": "wxy_god",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u8ddfUSACO\u7684\u4e0a\u4e00\u9898\u7b80\u76f4\u5c31\u662f\u914d\u5957\u6c34\u9898\u5927\u793c\u5305\u3010\u6ed1\u7a3d\u3011\n\n\u4e0a\u4e00\u9898\u6ca1\u6539\u51e0\u4e2a\u5b57\u5c31\u5230\u4e86\u8fd9\u4e00\u9898\u3002\n\n\u601d\u8def\uff1a\u679a\u4e3e\uff0c\u6309\u7167\u9898\u76ee\u601d\u8def\u5224\u65ad\u7b54\u6848\u662f\u5426\u5408\u6cd5\u3002\u91cd\u70b9\u5728\u4e8ek\u8fdb\u5236\u8f6c\u6362\u548c\u5224\u65ad\u56de\u6587\uff0c\u8fd9\u662f\u6bd4\u8f83\u57fa\u7840\u4e5f\u6bd4\u8f83\u5e38\u89c1\u7684\u5185\u5bb9\u3002\n\n\u4e0b\u9762\u63d0\u4f9b\u6bd4\u8f83\u7b80\u6d01\u7684\u4ee3\u7801\u5b9e\u73b0\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nbool ispal(int n,int k){\n    short res[100]={0},p=0;//res\u91cc\u88c5\u7684\u662f\u8f6c\u6362\u540e\u7684k\u8fdb\u5236\u6570\n    while(n){\n        res[p++]=n%k;\n        n/=k;\n    }//10\u8f6c2\u8fdb\u5236\u600e\u4e48\u8f6c\uff0c10\u8f6ck\u8fdb\u5236\u5c31\u600e\u4e48\u8f6c\u2014\u2014\u6a21\u62df\u77ed\u9664\u6cd5\u3002\u5f53\u7136\u8fd9\u4e48\u641e\u5230\u7684k\u8fdb\u5236\u6570\u5728\u6570\u7ec4\u91cc\u662f\u4e2a\u53cd\u7684\u3002 \n    //\u5373\u4f7f\u6570\u5b57\u53cd\u4e86\uff0c\u56e0\u4e3a\u53ea\u7528\u5224\u65ad\u662f\u4e0d\u662f\u56de\u6587\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u7ba1\u3002\n    //\u518d\u8005\uff0c\u5982\u679c\u662f\u56de\u6587\uff0c\u90a3\u53cd\u4e0d\u53cd\u8f6c\u597d\u50cf\u6ca1\u5565\u533a\u522b.... \n    int i=0,j=p-1;\n    while(i<j)\n        if(res[i++]!=res[j--])return 0;        //\u5224\u65ad\u662f\u4e0d\u662f\u56de\u6587\n    return 1;\n}\n\nint main(){\n    int n,s;\n    cin>>n>>s;\n    int ans=0;\n    for(int i=s+1;ans!=n;i++){\n        int cnt=0;\n        for(int j=2;j<=10&&cnt<2;j++){\n            if(ispal(i,j))cnt++;//\u5728j\u8fdb\u5236\u4e0bi\u4e3a\u56de\u6587\u6570\uff0c\u8ba1\u6570cnt++ \n        }\n        if(cnt>=2)printf(\"%d\\n\",i),ans++;//\u82e5\u8ba1\u6570\u4e0d\u5c0f\u4e8e2\uff0c\u5219\u8f93\u51fa\uff0c\u7b54\u6848\u8ba1\u6570ans++ \n    }\n    return 0;\n}\n```",
        "postTime": 1500467544,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u770b\u4e86\u597d\u51e0\u4e2a\u9898\u89e3\uff0c\u597d\u50cf\u5176\u4ed6\u5927\u4f6c\u90fd\u662f\u7d2f\u52a0\u6570\uff0c\u518d\u4ece\u4e8c\u5230\u5341\u4e00\u4e2a\u4e00\u4e2a\u8f6c\u8fdb\u5236\u7684\u554a-_-\n\n\u8fd9\u91cc\u7ed9\u4e00\u79cd\u66f4\u7701\u65f6\u95f4\u7684\u65b9\u6cd5\uff1a\n## \u8fdb\u5236\u52a0\n\u628a\u6bcf\u4e2a\u8fdb\u5236\u7684\u6570\u5404\u5b58\u8fdb\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u4e8c\u8fdb\u5236\u9022\u4e8c\u8fdb\u4e00\uff0c\u4e09\u8fdb\u5236\u9022\u4e09\u8fdb\u4e00\uff0c\u4ee5\u6b64\u7c7b\u63a8\n\n\u4ee3\u7801\u5949\u4e0a\uff1a\n```\n#include<iostream>\n#include<cstdio>\nusing namespace std;\ninline int read()//\u5feb\u901f\u8bfb\u5165\n{\n    int neg=1,x=0;\n    char c;\n    while((c=getchar())<'0'||c>'9')\n      if(c=='-')\n        neg=-1;\n    x=c-'0';\n    while((c=getchar())>='0'&&c<='9')\n      x=x*10+(c-'0');\n    return neg*x;\n}\nint a[11][101];//\u4fdd\u5b582~10\u8fdb\u5236\u7684\u6570\u503c\nbool check(int x)//\u56de\u6587\u5224\u65ad\n{\n\tint head=1,tail=a[x][0];//\u5934\u5c3e\u6307\u9488\n\twhile(head<tail)\n\t{\n\t\tif(a[x][head]!=a[x][tail])//\u5982\u679c\u5934\u5c3e\u6307\u9488\u5bf9\u5e94\u7684\u6570\u4e0d\u76f8\u7b49\uff0c\u76f4\u63a5\u8fd4\u56de0\n\t\t  return 0;\n\t\thead++,tail--;//\u5934\u6307\u9488\u52a0\uff0c\u5c3e\u6307\u9488\u51cf\n\t}\n\treturn 1;//\u8fd4\u56de1\n}\nint main()\n{\n\tint n=read(),k=read(),t;//\u8bfb\u5165n\u3001k(s)\n\tfor(int i=2;i<=10;i++)\n\t{\n\t\tt=k;\n\t\twhile(t>0)\n\t\t{\n\t\t\ta[i][++a[i][0]]=t%i;\n\t\t\tt/=i;\n\t\t}\n\t}//\u8fd9\u4e2afor\u5faa\u73af\u662f\u5427k\u8f6c\u5316\u62102~10\u8fdb\u5236\n\tint ans=0,step,sum,num=k;//\u5b9a\u4e49\u5404\u6570\u5e76\u521d\u59cb\u5316\u56de\u6587\u4e2a\u6570\n\twhile(ans<n)\n\t{\n\t\tsum=0;\n\t\tnum++;//\u6570\u5b57\u52a0\u4e00\n\t\tfor(int i=2;i<=10;i++)\n\t\t{\n\t\t\ta[i][1]++;//\u6700\u4f4e\u4f4d\u52a0\u4e00\n\t\t\tstep=1;//\u5c06\u6570\u4f4d\u6539\u4e3a1\n\t\t\twhile(a[i][step]==i)//\u9022i\u8fdb\u4e00\n\t\t\t{\n\t\t\t\ta[i][step]=0;\n\t\t\t\ta[i][++step]++;\n\t\t\t\tif(step>a[i][0])\n\t\t\t\t  a[i][0]++;\n\t\t\t}//\u8fdb\u5236\u52a0\n\t\t\tif(check(i))\n\t\t\t  sum++;\n\t\t}\n\t\tif(sum>=2)//\u5982\u679c\u8fd9\u4e2a\u6570\u5728\u4e24\u4e2a\u4ee5\u4e0a\u8fdb\u5236\u4e3a\u56de\u6587\u6570\n\t\t  cout<<num<<endl,ans++;//\u8f93\u51fa\u8fd9\u4e2a\u6570\u5e76\u5c06\u4e2a\u6570\u52a0\u4e00\n\t}\n\treturn 0;//\u7ed3\u675f\u55bd(\uffe3\u25bd\uffe3)~*\n}\n```\n\u7ed9\u4e2a\u597d\u8bc4\u5457O(\u2229_\u2229)O\u8c22\u8c22\n\n![](http://p0.so.qhimgs1.com/bdr/_240_/t0136de3c3a4c871b30.jpg)",
        "postTime": 1543671014,
        "uid": 47945,
        "name": "\u5f00\u6302\u8001\u53f8\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "/\\*\n\n\u8bf7\u52ff\u590d\u5236,\u521b\u5efa\u7f8e\u597d\u9898\u89e3\n\n\n\\*/\n###\u4e4d\u4e00\u770b,\u8fd9\u9053\u9898\u4e0d\u5c31\u8ddf\u4e0a\u9053\u9898\u56de\u6587\u5e73\u65b9\u6570\u4e00\u6bdb\u4e00\u6837\u5417?\n\n##\u7136\u800c\u7684\u786e\u662f\u4e00\u6bdb\u4e00\u6837\n\n###\u8ba9\u6211\u5f3a\u884c\u627e\u4e00\u4e2a~~\u4e0d\u7b97\u91cd\u70b9\u7684~~\u91cd\u70b9\u5427--\u8981\u4eceM+1\u5f00\u59cb\u679a\u4e3e.\n\n\u6211\u76f4\u63a5\u8d34\u4ee3\u7801\u5427\n\n```cpp\n/*\nID: czj20052\nLANG: C++\nTASK: dualpal\n*///\u4e0d\u8981\u5728\u610f\u8fd9\u4e9b\u7ec6\u8282~~USACO\u4e0a\u8981\u7684\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint a[10000];\nint l1,l2;\nint hw()//\u5224\u65ad\u56de\u6587\u7684\u51fd\u6570\u62c9\n{\n    for (int i=1;i<=l1/2;i++)\n        if (a[i]!=a[l1-i+1])\n            return 0;\n    return 1;\n}\nint pd(int k,int n)//\u8f6c\u5316\u8fdb\u5236\u7684\u5c0f\u51fd\u6570\n{\n    l1=0;\n    do\n    {\n        a[++l1]=k%n;\n        k/=n;\n    } while (k!=0);\n    return 0;\n}\nint main()\n{\n    freopen(\"dualpal.in\",\"r\",stdin);\n    freopen(\"dualpal.out\",\"w\",stdout);//\u6e29\u99a8\u63d0\u793a,\u6284\u4ee3\u7801\u7684\u8bb0\u5f97\u5220\u6389\n    int n,m;\n    cin>>n>>m;\n    int i=m+1;//\u8fd9\u91cc\u8981\u6ce8\u610f!!!\n    int k=0;\n    while(k<n)//K\u662f\u8bb0\u8f93\u51fa\u4e86\u51e0\u4e2a\u6570\u7684\u8ba1\u6570\u5668\n    {\n        int ans=0;\n        for(int j=2;j<=10;j++)//\u4ece\u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u4e00\u4e00\u679a\u4e3e\n        {\n            memset(a,0,sizeof(0));//\u6bcf\u6b21\u8bb0\u5f97\u628a\u8fd9\u4e2a\u6570\u7ec4\u6e05\u96f6\n            pd(i,j);\n            if(hw()==1)\n             {\n                 ans++;\n             }\n        }\n        if(ans>=2)//\u5982\u679c\u6709\u4e24\u79cd\u4ee5\u4e0a\u7684\u8fdb\u5236\u662f\u56de\u6587\u7684,\u90a3\u4e48\u8f93\u51fa,K++\n        {\n            cout<<i<<endl;\n            k++;\n        }\n        i++;\n    }\n    return 0;\n}```\n\u5176\u5b9e\u5c31\u662f\u4e00\u9053\u679a\u4e3e\u5165\u95e8\u9898,\u76f8\u4fe1\u4f60\u4eec\u90fd\u80fd\u505a\u51fa\u6765\u7684\u62c9\n",
        "postTime": 1507293912,
        "uid": 35255,
        "name": "Chaos1018",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "__\u601d\u8def__\uff1a\u8fd9\u4e00\u9898\uff0c\u53ef\u4ee5 __\u5b8c\u5168\u679a\u4e3e__ \uff0c\u5148\u4eces+1\u5f00\u59cb\u5faa\u73af\uff0c\u4e00\u76f4\u5230\u627e\u5230n\u4e2a\u53cc\u91cd\u56de\u6587\u6570\u4e4b\u540e\u9000\u51fa\u5faa\u73af\u3002\n\n__\u6838\u5fc3\u4ee3\u7801__ :\n\n```cpp\nint pd(int n,int k)//\u5224k\u8fdb\u5236\u4e0b\u7684n\u662f\u4e0d\u662f\u56de\u6587\u6570\n{\n\tint p[1005];\n\tint t=0;\n\twhile(n!=0)//\u8fdb\u5236\u8f6c\u6362\u6cd5\uff0c\u8f97\u8f6c\u76f8\u9664\u6cd5\u7684\u6a21\u62df\uff0c\u5982\u679c\u5b9e\u5728\u4e0d\u4f1a\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u80cc\u4e0b\u6765\n\t{\n\t\tp[++t]=n%k;\n\t\tn/=k;\n\t}\n\tfor(int i=1,j=t;i<=t/2;i++,j--)//\u5224\u65ad\u662f\u5426\u56de\u6587\uff0ci\u6307\u5411\u6700\u524d\uff0cj\u6307\u5411\u6700\u540e\uff0c\u4e00\u4e2a\u4e00\u4e2a\u6bd4\u8f83\u770b\u662f\u5426\u76f8\u540c\uff0c\u4e0d\u76f8\u540c\u76f4\u63a5\u8fd4\u56de0\n\t\tif(p[i]!=p[j])\n\t\t\treturn 0;\n\treturn 1;//\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u56de\u6587\u7684\u8bdd\u5c31\u5df2\u7ecf\u9000\u51fa\u51fd\u6570\u6765\uff0c\u80fd\u6267\u884c\u5230\u5faa\u73af\u7ed3\u675f\u5c31\u4ee3\u8868\u662f\u56de\u6587\u6570\n}\n\n```\n\n__\u5b8c\u6574\u4ee3\u7801__\uff08\u52a0\u5165\u5c11\u91cf\u6ce8\u91ca\uff09\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint pd(int n,int k)//\u89e3\u91ca\u8fc7\u4e86\uff0c\u4e0d\u591a\u8bf4\u3002\n{\n\tint p[1005];\n\tint t=0;\n\twhile(n!=0)\n\t{\n\t\tp[++t]=n%k;\n\t\tn/=k;\n\t}\n\tfor(int i=1,j=t;i<=t/2;i++,j--)\n\t\tif(p[i]!=p[j])\n\t\t\treturn 0;\n\treturn 1;\n}\n\nint main(){\n\tint n,s,ans=0;//ans\u4e3a\u5df2\u7ecf\u627e\u5230\u7684\u4e2a\u6570\n\tcin>>n>>s;\n\tfor(int i=s+1;ans<n;i++)\n\t{\n\t\tint count=0;//count\u4ee3\u8868i\u5728\u51e0\u4e2a\u8fdb\u5236\u4e0b\u662f\u56de\u6587\u7684\n\t\tfor(int j=2;j<=10;j++)//2~10\u8fdb\u5236\u679a\u4e3e\n\t\t\tif(pd(i,j)==1)//\u5224\u65ad\uff0c\u82e5j\u8fdb\u5236\u4e0b\u662f\u56de\u6587\u5c31count++\n\t\t\t\t++count;\n\t\tif(count>=2)//\u5982\u679c\u591a\u4e8e\u4e24\u4e2a\u5c31\u4ee3\u8868\u662f\u53cc\u91cd\u56de\u6587\u6570\n\t\t{\n\t\t\t++ans;\n\t\t\tcout<<i<<endl;\n\t\t\t\n\t\t}\n\t}\n    return 0;\n}\n\n```",
        "postTime": 1571314904,
        "uid": 151647,
        "name": "sycqwq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "# \u53cc\u91cd\u56de\u6587\u6570\n\u8fd9\u9898\uff0c\u672c\u849f\u84bb\u4f7f\u7528\u66b4\u529b\u679a\u4e3e\u505a\u7684\uff0c\u4eces+1\u4e00\u76f4\u5f80\u540e\u627e\uff0c\u627e\u5230\u7b54\u6848\u5c31++\uff0c\u77e5\u9053\u6ee1\u8db3ans==n\u5c31\u8df3\u51fa\u3002\n\u8d34\u4ee3\u7801\u3002\u3002\u3002\n```\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <cmath>\n#include <iostream>\nusing namespace std;\n\nconst int Maxn=10001;\n\nint n,s;\nint a[Maxn],cnt;\n\nbool is_ok(int x,int k)//\u5224\u65ad\u662f\u5426\u5728k\u8fdb\u5236\u4e0b\u6ee1\u8db3\u56de\u6587\u6570\n{\n\tcnt=0;\n\twhile(x>0) {//\u8f6c\u6210k\u8fdb\u5236\n\t\ta[++cnt]=x%k;\n\t\tx/=k;\n\t}\n\tfor(int i=1; i<=cnt/2; i++)//\u5224\u65ad\u662f\u5426\u56de\u6587\n\t\tif(a[i]!=a[cnt-i+1])\n\t\t\treturn false;//\u4e00\u65e6\u627e\u5230\u4e00\u4e2a\u4e0d\u56de\u6587\u7684\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\u5047\n\treturn true;\n    //\u8f6c\u6210k\u8fdb\u5236\u4e4b\u540e\uff0c\u867d\u7136\u662fk\u8fdb\u5236\u4e0b\u53cd\u5411\u7684\uff0c\u4f46\u5982\u679c\u662f\u56de\u6587\u6570\uff0c\u90a3\u4e48\u53cd\u8f6c\u8fc7\u540e\u4f9d\u7136\u662f\u56de\u6587\u6570\uff0c\u6240\u4ee5\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u6b21\u53cd\u8f6c\u4e86\n}\n\nint main()\n{\n\tcin>>n>>s;\n\tint ans=0;\n\tfor(int i=s+1; ans!=n; i++) {//\u679a\u4e3e\u4ece\u5927\u4e8es\u7684\u7b2c\u4e00\u4e2a\u6570\u5f00\u59cb\n\t\tint sum=0;\n\t\tfor(int j=2; j<=10; j++)//\u679a\u4e3e2~10\u8fdb\u5236\n\t\t\tif(is_ok(i,j)==true)\n\t\t\t\tsum++;//\u7d2f\u8ba1\u53ef\u4ee5\u7684\u8fdb\u5236\n\t\tif(sum>=2) {//\u5982\u679c\u53ef\u884c\u7684\u8fdb\u5236\u5927\u4e8e\u7b49\u4e8e2\uff0c\u5c31\u8f93\u51fa\uff0c\u5e76\u7d2f\u52a0\u7b54\u6848\n\t\t\tcout<<i<<endl;\n\t\t\tans++;\t\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1523533927,
        "uid": 26800,
        "name": "Sshenyyyu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u8bf7\u6ce8\u610f\uff1a\u6b64\u65b9\u6cd5\u5f53\u4e14\u4ec5\u5f53\u7f16\u8bd1\u5668\u652f\u6301C++11\u53ca\u4ee5\u4e0a\u6807\u51c6\u65f6\u5373\u53ef\u98df\u7528\uff0cNOIP/NOI\u7b49\u7ade\u8d5b\u7f16\u8bd1\u5668\u9ed8\u8ba4\u4e0d\u6253\u5f00C++11\u652f\u6301\u3002\n\n\u6a21\u62df\uff0c\u8f85\u52a9\u51fd\u6570\uff1a\n\n\u2460\u8f6c\u8fdb\u5236\uff1a\u7528stl\u7684\u6808\u548cstring\u5b9e\u73b0\uff08\u5176\u5b9e\u53ea\u7528string\u5b9e\u73b0\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\u3002\u3002\uff09\n\n\u2461\u5224\u65ad\u56de\u6587\uff1a\u8bfb\u5165\u4e00\u4e2astring\uff0c\u518d\u521b\u5efa\u8fd9\u4e2astring\u7684\u526f\u672c\uff0c\u7136\u540e\u5c06\u526f\u672c\u53cd\u8f6c\uff08stl\u7684reverse()\u51fd\u6570\uff09\uff0c\u6700\u540e\u5224\u65ad\u662f\u5426\u76f8\u7b49\u5373\u53ef\n\n\u4e3b\u51fd\u6570\uff1a\u7528k\u6765\u8bb0\u5f55\u8fdb\u5236\u6570\uff0c\u7528x\u6765\u8bb0\u5f55\u4e2a\u6570\uff0c\u6a21\u62df\u5373\u53ef\n\n\u8be6\u7ec6C++11\u7684\u51fd\u6570\u7684\u8c03\u7528\u5904\u8bf7\u770b\u4ee3\u7801\uff08\u8bdd\u8bf4C++11\u771f\u597d\u75282333\uff09\n\n```cpp\n#include<cstdio>\n#include<string>\n#include<iostream>\n#include<stack>\n#include<algorithm>\n\nusing namespace std;\n\nstack<int> s;\n\nstring changeSys(int num,int sys){\n\tdo{\n\t\ts.push(num % sys);\n\t\tnum /= sys;\n\t}while(num != 0);\n\t\n\tstring ans = \"\";\n\twhile(s.size()){\n\t\tans += to_string(s.top());//to_string()\u5f53\u4e14\u4ec5\u5f53C++11\u4e0b\u53ef\u7528\uff0c\u53ef\u4ee5\u5c06int/double/long long\u7b49\u7c7b\u578b\u8f6c\u6362\u4e3astring\u7c7b\u578b \n\t\ts.pop();\n\t}\n\t\n\treturn ans;\n}\n\nbool isPal(string s){\n\tstring ss = s;\n\treverse(ss.begin(),ss.end());\n\t\n\treturn ss == s ? true : false;\n}\n\nint main(){\n\tint n,s;\n\tscanf(\"%d %d\",&n,&s);\n\t\n\tint k = 0,x = 0;\n\tfor(int i = s + 1;i <= 666666;i++){\n\t\tfor(int j = 2;j <= 10;j++){\n\t\t\tif(isPal(changeSys(i,j))){\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(k >= 2 && x < n){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tx++;\n\t\t}\n\t\t\n\t\tif(x == n){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tk = 0;\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1518003767,
        "uid": 77211,
        "name": "i9_7980XE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u4e00\u5927\u6c34\u9898\n\n#\u8981\u6ce8\u610f\u7684\u6709\u4ee5\u4e0b\u51e0\u70b9\n\n1.\u6ca1\u67091\u8fdb\u5236\n\n2.\u662f\u4eces+1\u5f00\u59cb\u5224\u65ad\u7684\n\n3.\u5148\u8f93\u5165\u8981\u5224\u65ad\u51e0\u4e2a\u6570\u518d\u8f93\u5165\u4ece\u51e0+1\u5f00\u59cb\n\n\u8fd9\u4e09\u70b9\u8fc7\u5173\u4e86\uff0c\u8fd9\u9053\u9898\u76ee\u5c31\u7b80\u5355\u4e86\n\n30\u884c\u79d2\u8fc7\uff0c\u5f53\u7136\u8fd8\u53ef\u4ee5\u66f4\u7b80\u5355\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n\n#include <iostream>\n#include <string>\nusing namespace std;\nint jzzh(long long int s,int i)\n{\n    long long int ss=s; //\u641e\u4e86\u4e00\u4e2ass\u6765\u4f5cs\u7684\u66ff\u8eab \n    string ds=\"\",zs=\"\"; //\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cds=\u5012\u6570\uff0czs=\u6b63\u6570\uff0c\u5dee\u4e0d\u591a\u5c31\u884c \n    while(ss!=0)\n    {\n        ds+=(ss%i)+48; //\u6ce8\u610f\u8981+48\uff0c\u56e0\u4e3a\u8981\u53d8\u6210\u5b57\u7b26 \n        ss/=i; //10\u8fdb\u5236\u8f6cn\u8fdb\u5236\uff08n<=10\uff09\u7684\u516c\u5f0f \n    }\n    for(int j=ds.size()-1;j>=0;j--)\n    zs+=ds[j]; //\u628a\u5b83\u53cd\u8fc7\u6765 \n    if(zs==ds)return 1; //\u5224\u65ad\u56de\u6587\u6570 \n    else return 0;\n}\nint main()\n{\n    long long int s,m; //\u5b9a\u4e49\u53c2\u6570 \n    cin>>m>>s; //\u8f93\u5165 \n    while(m>=1) //\u5982\u679cm\u5927\u4e8e\u7b49\u4e8e1\u5c31\u5faa\u73af\uff0c\u7b49\u4e8em!=0 \n    {\n        s++; //\u6570\u5b57+1 \n        int s1=0; //\u7528\u4e8e\u5224\u65ad\u6709\u51e0\u4e2a\u8fdb\u5236\u662f\u56de\u6587\u6570\u7684\u53c2\u6570\uff0c\u8d4b\u521d\u503c\u4e3a0 \n        for(int i=2;i<=10;i++)\n        {if(jzzh(s,i)==1)s1++;} //\u5224\u65ad\uff0c\u5982\u679c\u662f\u56de\u6587\u6570\uff0cs1++ \n        if(s1>=2){cout<<s<<endl;m--;} //\u5982\u679c\u6761\u4ef6\u6210\u7acb\uff0c\u6253\u5370\uff0cm-- \n    }\n}\n\n```",
        "postTime": 1467202233,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u4e00\u9053\u8fdb\u5236\u9898\u3002\n\n>\u7ed9\u5b9a\u4e24\u4e2a\u5341\u8fdb\u5236\u6570 $n$,$s$\uff0c\u7136\u540e\u627e\u51fa\u524d $n$ \u4e2a\u6ee1\u8db3\u5927\u4e8e$s$ \u4e14\u5728\u4e0d\u5c11\u4e8e\u4e24\u79cd\u8fdb\u5236\uff08\u4e8c\u8fdb\u5236\u81f3\u5341\u8fdb\u5236\uff09\u4e0a\u662f\u56de\u6587\u6570\u7684\u5341\u8fdb\u5236\u6570\uff0c\u8f93\u51fa\u5230\u6587\u4ef6\u4e0a\u3002\n\n\u5f88\u663e\u7136\uff0c\u7528\u679a\u4e3e\u6cd5\u505a\u3002\n\n\u601d\u8def\uff1a\n\n\u5b9a\u4e49\u4e24\u4e2a\u81ea\u5b9a\u4e49\u51fd\u6570\u3002\u4e00\u4e2a\u7528\u6765\u5c06$x$\u53d8\u6210$2\\sim10$\u8fdb\u5236\u7684\u6570\uff0c\u53e6\u4e00\u4e2a\u7528\u6765\u5224\u65ad\u5f53\u524d\u8fdb\u5236\u7684\u6570\u662f\u5426\u4e3a\u56de\u6587\u6570\u3002\n\n\u4e3b\u7a0b\u5e8f\u4e2d\uff0c\u5faa\u73af\u679a\u4e3e\u7b54\u6848\uff0c\u8c03\u7528\u4e24\u4e2a\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u7684\u4e24\u79cd\u8fdb\u5236\u662f\u56de\u6587\u6570\uff0c$t+1$\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6570\u3002\n\n\u5982\u679c\u5df2\u7ecf\u627e\u5230$n$\u4e2a\u6570\u4e86\uff0c\u90a3\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86\u3002\n\n\u8fdb\u5236\u8f6c\u6362\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\uff1a\n\n```cpp\nint pd(int x) {\n\tint y=0,z;\n\tmemset(b,0,sizeof(b));\n\tfor(int i=2; i<=10; ++i) {\n\t\tm=0;\n\t\tz=x;\n\t\twhile(z!=0) {\n\t\t\tb[++m]=z%i;\n\t\t\tz/=i;\n\t\t}\n\t\t//for(int j=1; j<=m; ++j) printf(\"%d \",b[i]);\n\t\tif(ppdd()) y++;\n\t\tif(y>=2) return 1;\n\t}\n\tif(y>=2) return 1;\n\treturn 0;\n}\n```\n\n\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\uff1a\n\n```cpp\nint ppdd() {\n\tint l=1,r=m;\n\twhile(l<=r) {\n\t\tif(b[l]!=b[r]) return 0;\n\t\tl++;\n\t\tr--;\n\t}\n\treturn 1;\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint s,n,t=0,b[1001],m;\nint ppdd() {\n\tint l=1,r=m;\n\twhile(l<=r) {\n\t\tif(b[l]!=b[r]) return 0;\n\t\tl++;\n\t\tr--;\n\t}\n\treturn 1;\n}\nint pd(int x) {\n\tint y=0,z;\n\tmemset(b,0,sizeof(b));\n\tfor(int i=2; i<=10; ++i) {\n\t\tm=0;\n\t\tz=x;\n\t\twhile(z!=0) {\n\t\t\tb[++m]=z%i;\n\t\t\tz/=i;\n\t\t}\n\t\t//for(int j=1; j<=m; ++j) printf(\"%d \",b[i]);\n\t\tif(ppdd()) y++;\n\t\tif(y>=2) return 1;\n\t}\n\tif(y>=2) return 1;\n\treturn 0;\n}\nint main() {\n\tscanf(\"%d%d\",&n,&s);\n\tfor(int i=s+1; t<n; ++i) {\n\t\tif(pd(i)) {\n\t\t\t++t;\n\t\t\tprintf(\"%d\\n\",i);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u7ed9\u51fa\u4e00\u7ec4\u6570\u636e\u65b9\u4fbf\u5927\u5bb6\u8c03\u8bd5\uff1a\n\n$P1207.in$\n\n```cpp\n9 10\n```\n\n$P1207.out$\n\n```cpp\n15\n16\n17\n18\n20\n21\n24\n26\n27\n```\n\n>PS\uff1a\u4ee5\u4e0a\u6570\u636e\u4ec5\u4f9b\u8c03\u8bd5\uff0c\u8bf7\u4e0d\u8981\u7528\u4e8e\u5176\u4ed6\u9014\u5f84\u3002",
        "postTime": 1580110172,
        "uid": 186034,
        "name": "Callous_Murder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u849f\u84bb\u6765\u4e5f[delete]\uff08\u6700\u8fd1\u8111\u5b50\u4e0d\u597d\u4f7f\uff0c\u53ea\u80fd\u5237\u4e9b\u9898\u6fc0\u6d3b\u4e00\u4e0b\u6c89\u7761\u7684\u8111\u7ec6\u80de\u4e86\uff09[/delete]\uff01\n\n\u6309\u7167\u9898\u610f\u6a21\u62df\uff0c\u679a\u4e3e\u5927\u4e8es\u7684\u6574\u6570\uff0c\u8f6c\u8fdb\u5236\uff0c\u5224\u56de\u6587\u3002\n\n\u5f53\u7136\uff0c\u6570\u636e\u5927\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u6709\u53e6\u4e00\u79cd\u89e3\u6cd5\uff1a\u5148\u628as+1\u4ece2\u523010\u8fdb\u5236\u8f6c\u4e00\u6b21\uff0c\u5224\u56de\u6587\u7684\u65f6\u5019\u76f4\u63a5\u5224\u6570\u7ec4\u5c31\u597d\uff1b\u7136\u540e\u6bcf\u6b21+1\u5c31\u4e0d\u7528\u518d\u8f6c\u8fdb\u5236\u4e86\uff0c\u76f4\u63a5\u5199\u9ad8\u7cbe\u8fdb\u5236\u52a0\u2192\\_\u2192\n\n```delphi\n\nvar\n n,s,m,i,j,t:longint;\n\nfunction judge(s:ansistring):boolean;//\u5224\u56de\u6587\nvar i:longint;\nbegin\n if (s[1]='0') or (s[length(s)]='0') then exit(false);//\u7279\u5224\n judge:=true;\n for i:=1 to length(s) div 2 do//\u5224\u4e00\u534a\u957f\u5ea6\u5c31\u591f\u4e86\n  if s[i]<>s[length(s)-i+1] then exit(false)\nend;\n\nfunction work(m,n:longint):ansistring;//\u8f6c\u8fdb\u5236\nbegin\n work:='';\n repeat\n  if m mod n>9 then work:=chr(m mod n+55)+work else work:=chr(m mod n+48)+work;\n  m:=m div n\n until m=0\nend;\n\nbegin\n read(n,s);\n i:=s+1;\n m:=0;\n repeat\n  t:=0;\n  for j:=2 to 10 do if judge(work(i,j)) then inc(t);\n  if t>1 then\n   begin\n    writeln(i);\n    inc(m)\n   end;\n  inc(i)\n until m=n\nend.\n\n```",
        "postTime": 1426406412,
        "uid": 2699,
        "name": "Ufowoqqqo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u53d1\u9898\u89e3\u4e86\uff01\n\n\u9996\u5148\uff0c\u5927\u591a\u6570\u6e23\u6e23\u80af\u5b9a\u548c\u6211\u4e00\u6837\uff0c\u770b\u5230\u8fd9\u9898\u540e\n\nrepeat\n\u601d\u8def\u5168\u65e0\uff1b\n\n\u751f\u6210\u6cd5\uff1f\u53ef\u4ee5\u5417\uff1f\u592a\u590d\u6742\u4e86\uff1b\n\nuntil\uff08\u770b\u5230\u201c\u672c\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u4e0d\u9700\u8981\u4f7f\u7528\u5927\u4e8e32\u4f4d\u7684\u6574\u578b \u201d\uff09\uff1b\n\n\u968f\u540e\u51b3\u5b9a\uff1a\u679a\u4e3e\uff08\u867d\u7136\u8d34\u4e86\u6807\u7b7e\uff09\u3002\n\n\u600e\u4e48\u679a\u4e3e\uff1f\u591a\u5927\u7684\u8303\u56f4\uff1f\u9898\u76ee\u4e2d\u6ca1\u6709\u660e\u786e\u5730\u6807\u51fa\uff0c\u4f46\u4ece\u4e0a\u53e5\u53ef\u4ee5\u770b\u51fa\u8303\u56f4\u4e00\u5b9a\u5728maxlongint\u4ee5\u5185\uff0c\u4e8e\u662f\u5c31\u51b3\u5b9a\u679a\u4e3e\u5230maxlongint\u3002\uff08\u539f\u56e0\uff1a\u9996\u5148\uff0c\u4e0d\u80fd\u518d\u5927\u4e86\uff0c\u5176\u6b21\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd0\u7528\u526a\u679d\u6765\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u6700\u77ed\uff0c\u4e0b\u9762\u7684\u6807\u7a0b\u4e2d\u4f1a\u6807\u6ce8\u51fa\uff09\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u7528search(i,j)\u6765\u8868\u793a\u5341\u8fdb\u5236\u6570i(i<=maxlongint)\u5728j\u8fdb\u5236\u4e0b\u662f\u4e0d\u662f\u56de\u6587\u6570\uff0c\u6240\u4ee5\u6709\u5fc5\u8981\u628asearch\u53d8\u6210function\uff1aboolean(\u867d\u7136\u6ca1\u6709\u786c\u6027\u89c4\u5b9a\uff09\uff0c\u8fd9\u91cc\u6211\u6015\u9519\uff0c\u5c31\u591a\u505a\u4e86\u51e0\u4e2a\u7279\u5224\uff0c\u4e8e\u662f\u53c8\u591a\u4e86\u51e0\u4e2a\u526a\u679d\uff0c\u6211\u4f30\u8ba1\u6211\u8fd9\u79cd\u65b9\u6cd5\u80fdac\u5c31\u662f\n\n1.\u526a\u679d\u526a\u5f97\u8fd8\u884c\uff1b2.luogu\u795e\u673a\u4e0d\u89e3\u91ca\n\n\u6807\u7a0b\u53c2\u4e0a\uff1a\n\n```delphi\nvar i,j,k,l,m,n,s,sum,max,ll:longint;\n    s1,s2:string;\nfunction search(x,y:longint):boolean;\nvar ans,mid,t,w:longint;\n    a:array[1..100000]of longint;\nbegin\n  ans:=0;//\u8fd8\u662f0\u4e00\u4e0b\u6bd4\u8f83\u597d\n  repeat\n  inc(ans);\n  a[ans]:=x mod y;\n  x:=x div y;\n  until x=0;//\u8f6c\u5316\u6210j\u8fdb\u5236\n  if ans mod 2=0 then//\u5206\u4e24\u79cd\u60c5\u51b5\n  begin\n    t:=1;\n    w:=ans;\n    repeat\n    if a[t]<>a[w] then exit(false);//\u8fd9\u91cc\u6bd4\u8f83\u91cd\u8981\uff0c\u5982\u679c\u4e0d\u662f\u76f4\u63a5\u9000\u51fa\n    inc(t);dec(w);\n    if a[t]<>a[w] then exit(false);//\u4e24\u91cd\u7279\u5224\uff0c\u5982\u679c\u662f\u56de\u6587\u6570\u5c31\u4e00\u5b9a\u4e0d\u6015\u7684\uff0c\u771f\u91d1\u4e0d\u6015\u706b\u70bc\n    until (t+1=w)or(w+1=t);//\u624b\u6a21\u51fa\u6765\u7684\u7ed3\u679c\n    if a[1]<>0 then exit(true);\n  end\n  else\n  begin\n    if ans=3 then begin if (a[1]=a[3])and(a[1]<>0) then exit(true) else exit(false);end;//\u4e09\u4f4d\u6570\u7684\u8bdd\u76f4\u63a5\u5224\u65ad\u5c31\u597d\u4e86\n    if ans=1 then exit(true);//\u4e00\u4f4d\u6570\u4e00\u5b9a\u662f\u56de\u6587\u6570\n    t:=1;\n    w:=ans;\n    repeat\n    if a[t]<>a[w] then exit(false);\n    inc(t);dec(w);\n    if a[t]<>a[w] then exit(false);//\u540c\u4e0a\n    until t=w;\n    if a[1]<>0 then exit(true);\n  end;\nend;\nbegin\n  read(n,s);\n  max:=maxlongint;//\u5b9a\u4e49\u5230\u6700\u5927\u503c\n  for i:=s+1 to max do//\u5f00\u59cb\u679a\u4e3e\u6570\u5b57\n  begin\n  if sum=n then halt;//\u526a\u679d1\uff1a\u5df2\u8fbe\u5230n\u7684\u503c\u5c31halt\uff1b\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\n  l:=0;\n    for j:=2 to 10 do\n    begin\n      if search(i,j) then inc(l);//\u5982\u679c\u662f\uff0cinc\uff08l\uff09\uff0c\u5f88\u7b80\u5355\n      if l=2 then begin writeln(i);inc(sum);break;end;//\u8fd9\u79cd\u76f4\u63a5\u8df3\u51fa\u4e00\u91cd\u5faa\u73af\u5c31\u597d\u4e86\n    end;\n  end;\nend.\n```\n\u611f\u8c22\u9605\u8bfb\n",
        "postTime": 1387643344,
        "uid": 35,
        "name": "\u4e00\u7897\u7ca5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "**\u8fd9\u662f\u4e00\u9053\u53ef\u4ee5\u5de9\u56fa\u8fdb\u5236\u8f6c\u6362\u548c\u6a21\u62df\u7684\u597d\u9898\u76ee\u3002**\n\n**\u4e3a\u4e86\u65b9\u4fbf\u65b0\u624b\u9605\u8bfb\uff0c\u6211\u5c31\u7528\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u65b9\u6cd5\u6765\u8bb2\u89e3\u3002**\n\n\n------------\n\n### \u672c\u9898\u7684\u601d\u8def\uff1a\n\n#### \u679a\u4e3e\u524dn\u4e2a\u5927\u4e8es\u7684\u6570\uff0c\u770b\u5b83\u662f\u5426\u6ee1\u8db3\u5728\u4e24\u79cd\u6216\u4e24\u79cd\u4ee5\u4e0a\u8fdb\u5236\uff08\u4e8c\u8fdb\u5236\u81f3\u5341\u8fdb\u5236\uff09\u4e0a\u662f\u56de\u6587\u6570\u7684\u5341\u8fdb\u5236\u6570\u3002\u5982\u679c\u6ee1\u8db3\uff0c\u8f93\u51fa\u3002\n\n\n\n------------\n\n\u56e0\u4e3a\u672c\u9898\u6d89\u53ca**\u8fdb\u5236\u8f6c\u6362**\uff0c\u5c31\u5148\u8bb2\u4e00\u4e0b\u8fd9\u4e2a\u3002\u5982\u679c\u60a8\u4e86\u89e3\u6b64\u77e5\u8bc6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u3002\n\n### 1.  \u4ec0\u4e48\u662f\u8fdb\u5236\n\n**\u8fdb\u5236\u4e5f\u5c31\u662f\u8fdb\u4f4d\u8ba1\u6570\u5236\uff0c\u662f\u4eba\u4e3a\u5b9a\u4e49\u7684\u5e26\u8fdb\u4f4d\u7684\u8ba1\u6570\u65b9\u6cd5\uff08\u6709\u4e0d\u5e26\u8fdb\u4f4d\u7684\u8ba1\u6570\u65b9\u6cd5\u3002**\n\n**\u8bf4\u7b80\u5355\u70b9\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f8b**\uff08\u6817\uff09**\u5b50\u6765\u8bf4\u660e\u3002 \u5f53\u6211\u4eec\u7edf\u8ba1\u9009\u7968\u65f6\uff0c\u53ef\u80fd\u4f1a\u7528\u201c\u6b63\u201d\u5b57\u8bb0\u6570\u6cd5\u3002\u6bcf\u6ee15\u4e2a\u5c31\u5199\u51fa\u4e00\u4e2a\u201c\u6b63\u201d\u5b57\u3002\u8fd9\u5c31\u662f\u4e00\u79cd\u8fdb\u5236**\n\n### 2. \u5982\u4f55\u5b9e\u73b0\u8fdb\u5236\u8f6c\u6362\n\n\u672c\u9898\u9700\u8981\u7528\u7684\u8fdb\u5236\u8f6c\u6362\u65b9\u6cd5\u662f**\u77ed\u9664\u6cd5**\u3002\u6846\u67b6\u5982\u4e0b\uff1a\n\n```cpp\nstring s;\nwhile(\u8981\u8f6c\u6362\u7684\u6570\u4e0d\u4e3a0\u65f6)\n{\n\ts=char(\u8981\u8f6c\u6362\u7684\u6570%\u8981\u8f6c\u6210\u7684\u8fdb\u5236+'0')+s;\n\t\u8981\u8f6c\u6362\u7684\u6570/=\u8981\u8f6c\u6210\u7684\u8fdb\u5236\uff1b\n}\n```\n\n\n------------\n\n### \u4ee3\u7801 && \u8bb2\u89e3\n\n\u601d\u8def\u8be6\u89c1\u672c\u9898\u89e3\u5f00\u5934\u3002\n\n**\u8bf7\u52ff\u6284\u88ad\uff01**\n\n```cpp\n#include<iostream>\n#include<string>\nusing namespace std;\nbool turn(int n)\n{\n\tint a[9]={n,n,n,n,n,n,n,n,n},jz=2,temp=0,x=0;\n\t\t// a\u6570\u7ec4\u5b58\u50a8\u4e862...10\u8fdb\u5236\u8f6c\u6362\u9700\u8981\u7528\u7684n\uff0cjz\u4e3a\u5f53\u524d\u8981\u8f6c\u6362\u7684\u8fdb\u5236\uff0ctemp\u4e3a\u8fd9\u4e2a\u6570\u6ee1\u8db3\u7684\u8fdb\u5236\u4e2a\u6570\uff0cx\u63a7\u5236a\u6570\u5b57\u7684\u4e0b\u6807 \n\twhile(temp<=2&&jz<=10)\t//\u5f53\u8fd9\u4e2a\u6570\u6ee1\u8db3\u7684\u8fdb\u5236\u4e2a\u6570\u22642\u4e14 \u524d\u8981\u8f6c\u6362\u7684\u8fdb\u5236\u226410\u65f6 \n\t{\n\t\tstring s=\"\";\n\t\twhile(a[x])\t\t//\u5229\u7528\u77ed\u9664\u6cd5\u8fdb\u884c\u8f6c\u6362 \n\t\t{\n\t\t\ts=char(a[x]%jz+'0')+s;\n\t\t\ta[x]/=jz;\n\t\t}\n\t\tx++;\n\t\tint len=s.size();\n\t\tbool f=1;\n\t\tfor(int i=0,j=len-1;i<=j;i++,j--)\t//\u5224\u65ad\u8fd9\u4e2a\u6570\u5728\u5f53\u524d\u8fdb\u5236\u4e0b\u662f\u4e0d\u662f\u56de\u6587\u6570 \n\t\t\tif(s[i]!=s[j])\n\t\t\t{\n\t\t\t\tf=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(f) temp++;\t//\u5982\u679c\u662f\u56de\u6587\u6570\uff0c \u6ee1\u8db3\u7684\u8fdb\u5236\u4e2a\u6570+1 \n\t\tjz++;\n\t}\n\tif(temp>=2) return 1;\t\t//\u5982\u679c\u6ee1\u8db3\u7684\u8fdb\u5236\u4e2a\u6570\u22652\uff0c\u6ee1\u8db3\u9898\u610f \n\telse return 0;\t\t\t\t//\u5426\u5219\u4e0d\u6ee1\u8db3 \n}\nint main()\n{\n\tios::sync_with_stdio(0);\n\tint n,s;\n\tcin>>n>>s;\n\tfor(int i=s+1;n;i++)\t//\u4ece\u7b2c\u4e00\u4e2a\u5927\u4e8es\u7684\u6570\u5f00\u59cb\u5224\u65ad\u3002\u5982\u679c\u6ee1\u8db3\u9898\u610f\uff0cn-1 \n\t\tif(turn(i))\n\t\t{\n\t\t\tcout<<i<<endl;\t//\u8f93\u51fa\u6ee1\u8db3\u9898\u610f\u7684\u6570\n\t\t\tn--;\n\t\t}\n\treturn 0;\n}\n```",
        "postTime": 1563872506,
        "uid": 70200,
        "name": "AutumnTripod906",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "# \u91cd\u70b9\u91cd\u70b9\uff01\u672c\u9898\u65b9\u6cd5\u91cd\u70b9\uff01\n\n\u672c\u9898\u8003\u9a8c\u7684\u662f\u8fdb\u5236\u7684\u8f6c\u6362\uff0c\u548c\u56de\u6587\u6570\u7684\u5224\u65ad\u3002\u8fdb\u5236\u8f6c\u6362\u5e94\u8be5\u7528\u77ed\u9664\u6cd5\u6700\u7b80\u4fbf\u3002\u56de\u6587\u6570\u5e94\u8be5\u7528\u5206\u79bb\u7684\u65b9\u5f0f\u6216\u8005\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u5224\u65ad\u3002\n\n\n\n-------------------------------------------------------------\u4ee3\u7801\u5206\u5272\u7ebf----------------------------------------------------\n\u4ee5\u4e0b\u662fc++\u4ee3\u7801\n```cpp\n#include<cstdio>//\u5934\u6587\u4ef6\nusing namespace std;\nbool judge(int x)//\u5224\u65ad\u51fd\u6570\n{\n    int d[100],len,cnt=0;\n    for(int i=2;i<=10;i++)\n    {\n        int h=x;\n        len=0;\n        while(h!=0)\n        {\n            d[++len]=h%i;\n            h/=i;\n        }\n        bool flag=true;\n        for(int i=1;i<=len-i+1;i++)\n            if(d[i]!=d[len-i+1])\n            {\n                flag=false;\n                break;\n            }\n        if(flag)\n            cnt++;\n        if(cnt==2)\n            return true;//\u5224\u65ad\n    }\n    return false;\n}\nint main()\n{\n    //freopen(\"dualpal.in\",\"r\",stdin);\n//\tfreopen(\"dualpal.out\",\"w\",stdout);\n    int n,s;\n    scanf(\"%d %d\",&n,&s);\n    for(int i=s+1,j=1;j<=n;i++)\n        if(judge(i))\n        {\n            printf(\"%d\\n\",i);\n            j++;\n        }\n    return 0;\n}\n```\n\u4ee5\u4e0b\u662fPascal\u4ee3\u7801\n```pascal\nvar\n        n,x,i,l,r,tot,j,t:longint;\n        s,s1:string;//\u5b9a\u4e49\u53d8\u91cf\nfunction h(s:string;n:longint):boolean;//\u5224\u65ad\u56de\u6587\u51fd\u6570\nvar\n        i:longint;//\u5c40\u90e8\u53d8\u91cf\nbegin\n        for i:=1 to n div 2 do\n        begin\n                if s[i]<>s[n+1-i] then exit(false);//\u4ece1\u5230\u4e00\u534a\u4e0d\u76f8\u7b49\u76f4\u63a5\u8fd4\u56deFalse\n        end;\n        exit(true);\nend;\nbegin\n        {assign(input,'dualpal.in'); reset(input);\n        assign(output,'dualpal.out'); rewrite(output);}\u6b64\u5904\u4e3a\u6587\u64cd\n        readln(l,r);\n        while l>0 do//\u4e3b\u5faa\u73af\n        begin\n                inc(r);\n                tot:=0;\n                j:=1;\n                while (j<10)and(tot<2) do\n                begin\n                        s:='';\n                        inc(j);\n                        x:=r;\n                        t:=0;\n                        while x>0 do\n                        begin\n                                str(x mod j,s1);\n                                s:=s+s1;\n                                x:=x div j;\n                                inc(t);\n                        end;\n                        while s[t]='0' do dec(t);\n                        if h(s,t) then inc(tot);\n                end;\n                if tot=2 then\n                begin\n                        writeln(r);\n                        dec(l);\n                end;\n        end;\n\n        close(input); close(output);\nend.\n```\n\n",
        "postTime": 1562581831,
        "uid": 217804,
        "name": "Gast",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u6839\u636e\u56de\u6587\u5e73\u65b9\u6570\u7684\u7a0b\u5e8f\uff0c\u628a\u4e3b\u7a0b\u5e8f\u6539\u4e00\u4e0b\uff1a\n\n\u8f93\u5165n\u548cs\uff0c\u7528\u4e00\u4e2a\u53d8\u91cfr\u5b58\u50a8s+1\uff08\u524dN\u4e2a\u6ee1\u8db3\u5927\u4e8eS\u7684\u7b26\u5408\u6761\u4ef6\u7684\u6570\uff09\uff0c\n\n\u53cc\u91cd\u5faa\u73af\uff0c\u8f6c\u6362\u597d\u8fdb\u5236\u4ee5\u540e\u5224\u65ad\u5982\u679c\u662f\u56de\u6587\u6570\u5c31\u8ba9\u8d1f\u8d23\u7d2f\u52a0\u7684\u53d8\u91cf\u52a0\u4e00\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u53d8\u91cf\u5927\u4e8e\u7b49\u4e8e2\u4e86\uff0c\u8bf4\u660e\u4ed6\u662f\u5728\u4e24\u79cd\u6216\u4e24\u79cd\u4ee5\u4e0a\u8fdb\u5236\uff08\u4e8c\u8fdb\u5236\u81f3\u5341\u8fdb\u5236\uff09\u4e0a\u662f\u56de\u6587\u6570\u7684\u5341\u8fdb\u5236\u6570\uff0c\u5c31\u8f93\u51fa\u3002\n\n\u6bcf\u8f93\u51fa\u5b8c\u4e00\u6b21\uff0c\u624d\u8ba9\u7b2c\u4e00\u4e2a\u5faa\u73af\u53d8\u91cf\u52a0\u4e00\u3002\n\n\u6700\u540e\uff0c\u5728\u6bcf\u6b21\u5927\u5faa\u73af\u7ed3\u675f\u4e4b\u524d\uff0c\u8ba9\u53d8\u91cfr++\u3002\n\nAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934 \nusing namespace std;\nint a,n;\nint s[301];\nvoid jz(int a,int b){//\u8fdb\u5236 \n    int r=0;\n    while(a){\n        s[++r]=a%b;\n        a/=b;\n    }\n    s[0]=r;\n}\nbool change(){//\u56de\u6587 \n    for(int i=1;i<=s[0];i++){\n    if(s[i]!=s[s[0]+1-i]) return false;\n    }\n    return true;\n}\nvoid print(){//\u6253\u5370\uff0c\u8f93\u51fa \n    for(int i=s[0];i>=1;i--){\n        if(s[i]<=9) cout<<s[i];\n        else cout<<(char)(s[i]-10+'A');\n    }\n} \nint main() {\n\tcin>>n>>a;\n\tint r=a+1;\n\tfor(int i=1;i<=n;){\n    \tint sum=0;\n    \tfor(int j=2;j<=10;j++){\n        \tjz(r,j);\n        \tif(change()) sum++;\n    \t} \n    \tif(sum>=2){\n\t        cout<<r<<endl;\n\t        i++;\n\t    }\n\t    r++;\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1557011473,
        "uid": 146179,
        "name": "Violette",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u57fa\u672c\u601d\u8def\u662f\u5c06\u6bcf\u4e2a10\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a2\u8fdb\u5236\u30013\u8fdb\u5236\u2026\u2026\uff0c\u53d1\u73b0\u56de\u6587\u5219\u8ba1\u6b21\uff0c\u67092\u6b21\u5c31\u8f93\u51fa\u539f10\u8fdb\u5236\u6570\uff0c\u8f93\u51fa\u6b21\u6570\u8fbe\u5230n\u6b21\uff0c\u5c31\u7ed3\u675f\u7a0b\u5e8f\u3002\n\n\u56e0\u6b64\uff0c\u5916\u5faa\u73afi\u4eces+1\u5f00\u59cb\u4f9d\u6b21\u589e1\uff0c\u5185\u5faa\u73afj\u5219\u4ece2\u523010\u8fdb\u5236\u4f9d\u6b21\u904d\u5386\uff0c\u8f6e\u6d41\u5c06i\u8f6c\u6362\u4e3aj\u8fdb\u5236\uff0c\u8fd9\u6837\u5c31\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2a\u4ece10\u8fdb\u5236\u6570\u8f6c\u5316\u4e3aj\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u51fd\u6570\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool hw(string s)//\u5224\u65ad\u5b57\u7b26\u4e32\u56de\u6587 \n{\n\tint i,len=s.size();//\u5047\u8bbelen=4 \n\tfor(i=0;i<len/2;++i)//\u5947\u6570\u957f\u5ea6\u6700\u4e2d\u95f4\u5b57\u7b26\u4e0d\u53c2\u52a0\u6bd4\u8f83\n\t{//\u5076\u6570\u957f\u5ea6\u53ea\u6bd4\u8f831-len/2\u6b21\uff0c\u6b21\u6570\u4ece0\u8ba1\u8d77\u5c31\u8981\u51cf1 \n\t\tif(s[i]!=s[len-1-i])//s[1]!=s[4-1-1]\n\t\t\treturn false;\n\t}\t\n\treturn true;\n}\nstring ten2b(int n,int b)//10\u8fdb\u5236\u6574\u578bn\u8f6cb\u8fdb\u5236\u5b57\u7b26\u4e32x \n{\t\n\tstring x,dic=\"0123456789\";//\u8fdb\u5236\u6570\u505a\u6210\u5b57\u5178\n\twhile(n)\n\t{\n\t\tx=dic[n%b]+x;//\u53d6\u4f59\u540e\u67e5\u8868\u8f6c\u5316\n\t\tn/=b;\n\t}\n\treturn x;\n}\nint main()\n{\n    int i,j,n,s,k,m=0;\n    string t;\n    cin>>n>>s;//\u524dn\u4e2a\u6bd4s\u5927\u7684\u89e3 \n    for(i=s+1;;++i)//\u6bd4s\u5927 \n    {\n    \tk=0;\n    \tfor(j=2;j<=10;++j)//2-10\u8fdb\u5236\u4f9d\u6b21\u8f6c\u6362 \n    \t{\n    \t\tt=ten2b(i,j);//j\u8fdb\u5236\u4e0b\u7684i \n    \t\tif(hw(t)) k++;\n    \t\tif(k==2) //2\u6b21\u4e0d\u540c\u8fdb\u5236\u4e0b\u56de\u6587\n\t\t\t{\n\t\t\t\tcout<<i<<endl;\n\t\t\t\tm++;//\u89e3\u7684\u4e2a\u6570\u8981\u5c0f\u4e8en \n\t\t\t\tif(m==n) return 0;//\u5230\u8fben\u4e2a \n\t\t\t\tbreak;//\u5176\u4ed6\u8fdb\u5236\u4e0d\u5fc5\u8fdb\u884c\n\t\t\t}\t\t\t\n\t\t}\n\t}\n}\n\n```",
        "postTime": 1547040774,
        "uid": 62715,
        "name": "buickboy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u53cc\u5411\u961f\u5217.\n\n\u601d\u8def\u5c31\u662f\u8f6c\u6362\u6210i=2~10\u8fdb\u5236\uff0c\u5224\u65ad\u56de\u6587,\u7528\u53cc\u5411\u961f\u5217\u5934\u5c3e\u5224\u65ad.\n\n```cpp\n#include <iostream>\n#include <queue>\nusing namespace std;\n\nint N, K, C; \n\nbool Judge(int num) {\n    int cnt = 0, x;\n    for(int i=2; i<=10; i++) {\n        x = num;\n        deque<int> S;\n        while(x) S.push_back(x % i), x /= i; //\u8f6c\u6362\u6210i\u8fdb\u5236 \n        while(!S.empty()) {\n            if(S.front() != S.back()) break; //\u4e0d\u56de\u6587 \n            if(S.size() == 1 || (S.size() == 2 && S.front() == S.back())) { //\u56de\u6587 \n                cnt ++;\n                break;\n            }\n            S.pop_back();\n            S.pop_front();\n        }\n        if(cnt == 2) break;\n    }\n    return cnt == 2;\n}\n\nint main() {\n    cin >> K >> N;\n    for(int i=N+1; C<K; i++) {\n        if(Judge(i)) {\n            cout << i << endl;\n            C ++;\n        }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1515286286,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "AC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n**\u8bf7\u52ff\u6284\u88ad**\n\n~~\u6284\u88ad\u8bb0\u5f97\u5220\u9664freopen~~\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\nint n,s,len=0;\nint a[105];\nint ifhw(){    //\u5224\u65ad\u8fd9\u4e2a\u8fdb\u5236\u8f6c\u6362\u540e\u7684\u6570\u662f\u4e0d\u662f\u56de\u6587\u6570 \n    for(int i=1;i<=len/2;i++){\n        if(a[i]!=a[len-i+1]){\n            return 0;    //\u4e0d\u662f\u56de\u6587\u6570\u8fd4\u56de0 \n        }\n    }\n    return 1;    //\u662f\u56de\u6587\u6570\u8fd4\u56de1 \n}\nint turn(int x,int k){    //\u8fdb\u5236\u8f6c\u6362\uff0c\u5c06x\u8f6c\u6362\u4e3ak\u8fdb\u5236\u7684\u6570 \uff0c\u6bcf\u4e00\u4f4d\u653e\u5728a\u6570\u7ec4\u91cc \n    len=0;\n    memset(a,0,sizeof(a));\n    while(x>0){\n        a[++len]=x%k;\n        x/=k;\n    }\n    return 0;\n}\nint main(){\n    freopen(\".in\",\"r\",stdin);\n    freopen(\".out\",\"w\",stdout);\n    scanf(\"%d %d\",&n,&s);\n    int begin=s+1;//\u5f00\u59cb\u4eces\u5927\u4e00\u7684\u6570\u5f00\u59cb\u5224\u65ad \n    for(int k=1;k<=n;){\n        int ans=0;\n        for(int i=2;i<=10;i++){\n            turn(begin,i);//\u4ece2\u523010\u8fdb\u5236\u4e00\u4e00\u679a\u4e3e \n            if(ifhw()==1)ans++;\n        }\n        if(ans>=2){\n            printf(\"%d\\n\",begin);\n            k++;\n        }\n        begin+=1;\n    }\n    return 0;\n}\n\n```",
        "postTime": 1514991883,
        "uid": 32973,
        "name": "\u6a31\u58a8\u6284",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u4e3b\u8981\u601d\u8def\u5c31\u662f\u5148\u8f6c\u6362\u8fdb\u5236\uff0c\u518d\u5224\u65ad\u56de\u6587\u3002\u5341\u8fdb\u5236\u8f6cn\u8fdb\u5236\u4e3b\u8981\u5c31\u662f\u77ed\u9664\u6cd5\uff0c\u628a\u4f59\u6570\u653e\u5728\u4e00\u8d77\u5373\u53ef\uff1b\u56de\u6587\u6570\u662f\u7b2ci\u4f4d\u4e0e\u7b2cn-i+1\u4f4d\u76f8\u540c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint a[105],n,ans=0;\nbool used=false;\nvoid transdefine(int x,int k)//\u4e00\u4e2a\u51fd\u6570\n{\n    int i=1,sum=0;\n    if(x<k) \n    {\n        ans++;\n        return;\n    }\n    else\n    {\n        while(x>=k)//\u5224\u65ad\u4f4d\u6570\u548c\u5269\u4f59\u91cf\uff08\u8f6c\u6362\u8fdb\u5236\uff09\n        {\n           a[i]=x%k;\n           x=x/k;\n           i++;\n        }\n        i--;\n        a[i+1]=x;\n        if(a[1]==0||a[i+1]==0) return;\n        else//\u56de\u6587\u6570\u7684\u5224\u5b9a\n        {\n           for(int j=1;j<=(i+1)/2;j++)\n           {\n              if(a[j]==a[i+2-j]) sum++;\n           }\n           if(sum>=(i+1)/2)\n           {\n              ans++;\n              return;\n           } \n           else return;\n        }\n    }\n}\nint main()\n{\n    int s;\n    cin>>n>>s;\n    for(int j=s+1;;j++)\n    {\n        for(int i=2;i<=10;i++)\n        {\n            transdefine(j,i);\n            if(ans==2)\n            {\n               used=true;\n               n--; //cout<<n<<\" \";\n               break;\n            }\n        }\n        ans=0;\n        if(n<0) break;\n        if(used==true)\n        {\n            cout<<j<<endl;\n            used=false;\n        }\n    }\n     return 0;\n}\n```",
        "postTime": 1501942113,
        "uid": 51357,
        "name": "babingbaboom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "~~Pascal\u515a\u798f\u5229~~\n\n\u5c31\u662f\u4e00\u9053\u6c34\u6c34\u7684\u6a21\u62df\u9898\uff0c\n\n\u601d\u8def\u5c31\u662f\u679a\u4e3e\u8fdb\u5236\u3001\u5224\u65ad\u8fdb\u5236\u3001\u5224\u65ad\u56de\u6587\u3001while\u63a7\u5236\n\n\u9996\u5148\u662f\u5224\u65ad\u56de\u6587\uff0c\n\n\u5047\u8bbe\u6211\u4eec\u5728\u6570\u7ec4a\u4e2d\u5b58\u50a8\u4e86\u4e00\u4e2a\u8f6c\u8fdb\u5236\u540e\u7684\u6570\uff0c\u8bf7\u5224\u65ad\u5176\u662f\u5426\u4e3a\u56de\u6587\u6570\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u7ed9\u51facheck\u51fd\u6570\n\n```cpp\nfunction check(n:longint):boolean;//\u4f20\u5165\u8fd9\u4e2a\u6570\u6709\u51e0\u4f4d\nvar i:longint;\nbegin\n for i:=1 to n div 2+1 do\n  if a[i]<>a[n-i+1] then exit(false);\n exit(true);\nend;\n```\n\u63a5\u4e0b\u6765\u5c31\u662f\u8f6c\u8fdb\u5236\uff0c\u4e5f\u4e0d\u96be\uff0c\n\u6ce8\u610f\u6211\u4eec\u628a\u6574\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u5b9a\u4e49\u5728a[0]\u4e2d\n\n```cpp\nprocedure ff(x,k:longint);\nVar i:longint;\nBegin\n  Fillchar(a,sizeof(a),0);\n  i:=0;\n  While x>0 do begin\n    i:=i+1;\n    a[i]:=x mod k;\n    x:=x div k;\n  End;\n  a[0]:=i;//\u5b58\u6570\u4f4d\nEnd;\n```\n\u7136\u540e\u5c31\u662f\u679a\u4e3e\u4e86\uff0c\u8fd9\u5c31\u4e0d\u7528\u591a\u8bf4\u4e86\u5427\u3002\n\u4e3b\u8981\u8bb2\u8bb2\u5751\u70b9\uff1a\n\n- \u9898\u76ee\u8bf4\uff1a\u6709\u4e00\u4e9b\u6570\uff08\u598221\uff09\uff0c\u5728\u5341\u8fdb\u5236\u65f6\u4e0d\u662f\u56de\u6587\u6570\uff0c\u4f46\u5728\u5176\u5b83\u8fdb\u5236\uff08\u5982\u4e8c\u8fdb\u5236\u65f6\u4e3a10101\uff09\u65f6\u5c31\u662f\u56de\u6587\u6570\u3002\u4f46\u662f\u4e8b\u5b9e\u4e0a\u6211\u4eec\u679a\u4e3e\u52309\u8fdb\u5236\u53ea\u80fd\u62ff\u523057\u5206\uff0c\u7b2c\u4e00\u6b21\u5c31\u683d\u5728\u8fd9\u91cc~~\n\n- \u9898\u76ee\u8bf4\uff1a\u627e\u51fa\u524dN\u4e2a\u6ee1\u8db3\u5927\u4e8eS\u4e14\u5728\u4e24\u79cd\u6216\u4e24\u79cd\u4ee5\u4e0a\u8fdb\u5236\uff08\u4e8c\u8fdb\u5236\u81f3\u5341\u8fdb\u5236\uff09\u4e0a\u662f\u56de\u6587\u6570\u7684\u5341\u8fdb\u5236\u6570\uff0c\u8f93\u51fa\u5230\u6587\u4ef6\u4e0a\u3002\u8bf4\u660e\u6211\u4eec\u627e\u52302\u4e2a\u8fdb\u5236\u7b26\u5408\u5373\u53ef\uff0c\u4e0d\u5fc5\u7ee7\u7eed\u8ba1\u7b97\n\n- \u8f6c\u8fdb\u5236\u540e\u662f\u5012\u53d9\u5b58\u5728\u6570\u7ec4\u4e2d\uff0c\u8fd9\u91cc\u4e0d\u6362\u56de\u6765\u662f\u56e0\u4e3a\u672c\u8eab\u5c31\u662f\u5224\u65ad\u56de\u6587\uff0c\u4e0e\u5176\u6b63\u5e8f\u5012\u5e8f\u65e0\u5173~~\n\n\u6240\u4ee5\u8fd9\u9053\u9898\u5c31\u59a5\u59a5\u7684AC\u4e86\n\n```cpp\nvar a:array[0..100000]of integer;\n    n,s,i,tt,cnt,j:longint;\nprocedure ff(x,k:longint);\nVar i:longint;\nBegin\n  Fillchar(a,sizeof(a),0);\n  i:=0;\n  While x>0 do begin\n    i:=i+1;\n    a[i]:=x mod k;\n    x:=x div k;\n  End;\n  a[0]:=i;\nEnd;\nfunction check(n:longint):boolean;\nvar i:longint;\nbegin\n for i:=1 to n div 2+1 do\n  if a[i]<>a[n-i+1] then exit(false);\n exit(true);\nend;\nbegin\n readln(n,s);\n while cnt<n do begin\n  inc(s);  tt:=0;\n  for i:=2 to 10 do begin\n  ff(s,i);\n  if check(a[0]) then inc(tt);\n  if tt=2 then break;\n  end;\n  if tt=2 then begin writeln(s);inc(cnt); end;\n end;\nend.\n\n```",
        "postTime": 1488543072,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "\u8981\u6709\u533a\u5757\u5316\u7684\u7f16\u7a0b\u601d\u60f3\uff0cjudge\u5224\u56de\u6587,turn\u8f6c\u8fdb\u5236\uff0csearch\u679a\u4e3e\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint sum=0,a[20],cnt,n,s;\nint turn(int n,int w)\n{  \n    memset(a,0,sizeof(a)); \n    int i=0;\n    while(n>0)\n    {\n        a[++i]=n%w;\n        n/=w;\n    }\n    return i;    \n}\nbool judge(int x)\n{\n    int i=1,j=x;\n    while(i<j)\n    {\n        if(a[i++]!=a[j--]) return false;\n    }\n    return true;\n}\nvoid search()\n{\n    int i,j;\n    for(i=s+1;sum<n;i++)\n    {\n        cnt=0;\n        for(j=2;j<=10;j++)\n        {\n            int x=turn(i,j);\n            if(judge(x))\n                cnt++;\n            if(cnt>=2)\n            {\n                sum++;\n                printf(\"%d\\n\",i);\n                break;\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&s);\n    search();\n    return 0;\n}\n```",
        "postTime": 1475557600,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,s,zs;\nstring zjz(int a,int jz)\n{\n    string st=\"\";\n    while (a>0)\n    {\n        int ys=a%jz;\n        string ch=\"\";\n        if (ys<10) ch+=(ys+48);else ch+=(ys+55);\n        st=ch+st;\n        a/=jz;\n    }\n    return st;\n}\n//\u7528\u51fd\u6570\u8f6c\u6362\u6210\u76f8\u5e94\u8fdb\u5236\nbool hw(string st)\n{\n    bool p=true;\n    for (int j=0;j<st.size();j++)\n        if (st[j]!=st[st.size()-j-1])\n        {\n            p=false;\n            break;\n        }\n    return p;\n}\n//\u5224\u65ad\u662f\u4e0d\u662f\u56de\u6587\u6570\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    for (int i=s+1;zs<n;i++)\u6ce8\u610f\u662fs+1\uff01\uff01\uff01\n    {\n        int ans=0;\n        for (int j=2;j<=10;j++)\n        {\n            if (hw(zjz(i,j))) ans++;//\u5982\u679c\u8f6c\u6362\u6210j\u8fdb\u5236\u540e\u662f\u56de\u6587\u6570\uff0c\u603b\u6570+1\n            if (ans==2) break;//\u627e\u5230\u4e24\u4e2a\uff0c\u4e0d\u7528\u518d\u627e\uff0c\u9000\u51fa\uff01\n        }\n        if (ans==2) \n        {\n            printf(\"%d\\n\",i);\n            zs++;//\u627e\u5230\u603b\u6570+1\n        }\n    }\n    return 0;\n}\n```\n*********************************************************************************************\n#\u9700\u8981\u91cd\u70b9\u6ce8\u610f\uff1a\u662f\u4eces+1\u5f00\u59cb\u627e\u8d77\uff01\uff01\uff01\n",
        "postTime": 1468229910,
        "uid": 12349,
        "name": "FREEH",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1207 \u3010[USACO1.2]\u53cc\u91cd\u56de\u6587\u6570 Dual Palindromes\u3011"
    }
]