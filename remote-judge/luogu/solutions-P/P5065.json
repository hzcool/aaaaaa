[
    {
        "content": "\u5206\u5757\u597d\u9898\u554a\u2026\u2026\n\n~~\u91cd\u5ea6\u5361\u5e38\u6570\uff0c\u52a0\u4e86\u597d\u51e0\u4e2a\u526a\u679d\u624d\u8fc7~~\n\n~~\u636e\u8bf4\u6709$O(nlog^4n)$\u7684\u9ad8\u8bba\u505a\u6cd5\uff0c\u7136\u9e45\u5e76\u4e0d\u4f1a~~\n____________\n\n### \u524d\u7f6e\u829d\u58eb:\u961f\u5217\n\n~~\u5982\u679c\u4e0d\u4f1a\u961f\u5217\u7684\u8bdd\u8bf7\u968f\u4fbf\u767e\u5ea6\u4e00\u4e0b\u5c31\u4f1a\u4e86\uff0c\u4f60\u7ad9\u6ca1\u6709\u961f\u5217\u7684\u6a21\u677f~~\n\n## \u672c\u9898\u9898\u89e3\n\n\u597d\u4e86\u6765\u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\uff0c\u5c45\u7136\u662f$50000$\uff0c\u8fd9\u5728ynoi\u4e2d\u7edd\u5bf9\u662f\u4e00\u4e2a\u7f55\u89c1\u7684\u6570\u636e\u8303\u56f4\uff0c\u8bc1\u660e\u6211\u4eec\u7684\u6807\u7b97\u4e0d\u53ef\u80fd\u662f$O(n\\sqrt{n})$\u7684\uff0c\u5426\u5219\u65e0\u8bba\u5982\u4f55\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u90fd\u8be5\u662f$10^5,10^5$\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u6765\u60f3\u4e00\u4e2a$O(wN\\sqrt{N})$\u7684\u505a\u6cd5\uff0c\u5176\u4e2dw\u662f\u4e8c\u8fdb\u5236\u6570\u5b57\u7684\u6700\u9ad8\u4f4d\u6570,\u5728\u8fd9\u9898\u91cc\u662f$31$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u9898\u7684\u8be2\u95ee\u975e\u5e38\u7684\u6709\u7279\u8272\uff0c\u8be2\u95eeor\u548c\u5927\u4e8e\u7b49\u4e8ek\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6bb5\n\n\u90a3\u4e48\u9996\u5148\u4e00\u4e2a\u6700\u88f8\u7684\u66b4\u529b\u5c31\u662f\u679a\u4e3e\u6240\u6709\u7684\u533a\u95f4\uff0c\u590d\u6742\u5ea6$O(mn^2)$\uff0c\u663e\u7136\u8fd9\u4e2a\u66b4\u529b\u5e76\u4e0d\u80fd\u62ff\u6765\u7ed9\u5206\u5757\u7528\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u60f3\u4e00\u4e2a\u4e0d\u90a3\u4e48\u88f8\u7684\u66b4\u529b\u6bd4\u5982\u5b83\u7684\u590d\u6742\u5ea6\u662f$O(mnw)$\u7684\n\n\u90a3\u4e48\u6211\u4eec\u7684\u601d\u8def\u975e\u5e38\u7b80\u5355\u5c31\u662f\u66b4\u529b\u7684\u679a\u4e3e\u533a\u95f4\u7684\u5de6\u7aef\u70b9\n\n\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u94a6\u5b9a\u4e86\u5de6\u7aef\u70b9\u5fc5\u987b\u662f$i$\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6211\u4eec\u8dd1$O(mn^2)$\u66b4\u529b\u7684\u65f6\u5019\u5728\u5e72\u4ec0\u4e48\n\n\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u4e86$(i,j-1)$\u7684or\u548c\uff0c\u628a\u5b83or\u4e0a$a(j)$\u5c31\u5f97\u5230\u4e86$(i,j)$\u7684or\u548c\u4e86\n\n\u628a\u6309\u4f4d\u6216\u7684\u8fd0\u7b97\u89c4\u5219\u5ff5\u4e00\u904d:\u5982\u679ca\u548cb\u7b2ci\u4f4d\u4e2d\u67091\u4e2a\u662f1,\u90a3\u4e48a|b\u7684\u7b2ci\u4f4d\u5c31\u662f1\n\n\u6240\u4ee5\u5728\u6211\u4eec\u66b4\u529b\u7684\u8fc7\u7a0b\u5f53\u4e2d\u67d0\u4e00\u4f4d\u53d8\u6210\u4e861\u5c31\u4e0d\u53ef\u80fd\u518d\u6b21\u53d8\u56de0,\u8fd9\u544a\u8bc9\u6211\u4eec\u5de6\u7aef\u70b9\u56fa\u5b9a\u7684\u65f6\u5019\u533a\u95f4\u7684$or$\u548c\u6700\u591a\u6709$O(w)$\u79cd\u672c\u8d28\u4e0d\u540c\u7684\u53d6\u503c\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2adp,$dp(i,j)$\u8868\u793a\u4ee5i\u4e3a\u5de6\u7aef\u70b9\u65f6\u7b2cj\u4e2abit\u7b2c\u4e00\u6b21\u53d8\u62101\u7684\u53f3\u7aef\u70b9\u662f\u8c01\n\n\u90a3\u4e48\u8f6c\u79fb\u5341\u5206\u7b80\u5355,\u5982\u679c$a(i)$\u7684\u7b2cj\u4f4d\u662f0\u90a3\u4e48$dp(i,j)=dp(i+1,j)$\u5426\u5219$dp(i,j)=i$\n\n\u6709\u4e86\u8fd9\u4e2adp\u6570\u7ec4\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u521d\u6b65\u7684\u8bbe\u8ba1\u4e00\u4e2a$O(mnwlogw)$\u7684\u66b4\u529b\n\n\u6211\u4eec\u66b4\u529b\u7684\u679a\u4e3e\u533a\u95f4\u7684\u5de6\u7aef\u70b9i,\u7136\u540e\u628a$(j,dp(i,j))$\u8fd9\u4e9b\u4e8c\u5143\u7ec4\u6309\u7167$dp(i,j)$\u6392\u597d\u5e8f\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u5f53\u53f3\u7aef\u70b9\u7684\u503c\u7b49\u4e8e$k$\u7684\u65f6\u5019\u8fd9\u4e2a\u533a\u95f4\u7684or\u503c\u4e86\uff0c\u6240\u6709dp\u503c\u5c0f\u4e8ek\u7684bit\u5168\u90e8\u662f1\u5269\u4f59\u7684\u5168\u90e8\u662f0\uff0c\u7531\u4e8e\u6211\u4eec\u8981\u6c42\u51fa\u6700\u5c0f\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u56e0\u6b64\u6211\u4eec\u4ec5\u4ec5\u679a\u4e3e\u6240\u6709\u7684dp\u503c\u4f5c\u4e3a\u53f3\u7aef\u70b9\u5c31\u53ef\u4ee5\u4e86\uff0c\u5982\u6b64\u8fd9\u822c\u6211\u4eec\u7684\u590d\u6742\u5ea6\u5c31\u964d\u5230\u4e86$O(mnwlogw)$\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u9700\u8981\u6392\u5e8f\uff0c\u5728w\u7b49\u4e8e30\u7684\u65f6\u5019\u5176\u5b9elogw\u7684\u5e38\u6570\u8fd8\u662f\u5f88\u5927\u7684,\u6240\u4ee5\u8ba9\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e2alogw\u5361\u4e0b\u6765\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\uff0c\u961f\u5217\u91cc\u5b58\u50a8\u7684\u662f$(j,dp(i,j))$\u8fd9\u4e9b\u4e8c\u5143\u7ec4\uff0c\u5e76\u4e14\u5df2\u7ecf\u6309\u7167$dp(i,j)$\u7684\u987a\u5e8f\u6392\u597d\u5e8f\u4e86\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u6709\u4e86$i+1$\u7684\u961f\u5217\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u53ef\u4e0d\u53ef\u4ee5\u5728$O(w)$\u7684\u65f6\u95f4\u5185\u9012\u63a8\u5230$i$\u7684\u961f\u5217\n\n\u7b54\u6848\u662f\u53ef\u884c\u7684\uff0c\u5982\u679c\u8fd9a(i)\u7684\u7b2cj\u4f4d\u662f$1$\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u7ed9\u961f\u5217push\u4e00\u4e2a$(j,i)$\u8fd9\u4e2a\u4e8c\u5143\u7ec4,\u4e4b\u540e\u6211\u4eec\u4ece\u524d\u5230\u540e\u626b\u4e00\u904d$i+1$\u7684\u961f\u5217\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5143\u7ec4$(j,dp(i+1,j))$\u5982\u679ca(i)\u7684\u7b2cj\u4f4d\u662f0\u6211\u4eec\u5c31\u5728\u961f\u5217\u91ccpush\u4e00\u4e2a\u4e8c\u5143\u7ec4$(j,dp(i+1,j))$\u5982\u6b64\u8fd9\u822c\u6211\u4eec\u5c31\u4ece$i+1$\u7684\u961f\u5217\u8fed\u4ee3\u5230i\u7684\u961f\u5217\u4e86\n\n\u5176\u5b9e\u4f60\u53ef\u4ee5\u628a\u521a\u624d\u7684\u7b97\u6cd5\u6d41\u7a0b\u770b\u6210\u4e00\u4e2a\u5f52\u5e76,\u4f1a\u597d\u60f3\u4e00\u70b9\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u628a\u521a\u624d\u7684\u66b4\u529b\u4f18\u5316\u5230\u4e86$O(mnw)$\u4e86\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u66b4\u529b\u62ff\u6765\u7ed9\u5206\u5757\u7528\u4e86\n\n\u5f53\u7136\u6309\u7167\u5206\u5757\u9898\u7684\u4e00\u8d2f\u5957\u8def\u6211\u4eec\u628a\u5e8f\u5217\u5206\u6210$O(\\sqrt{N})$\u5757\n\n\u7136\u540e\u6211\u4eec\u5728\u6bcf\u5757\u5185\u7ef4\u62a4\u4e00\u4e2a\u6570\u7ec4$mx(i)$\u8868\u793a\u957f\u5ea6\u4e3ai\u7684\u533a\u95f4\u7684\u6700\u5927or\u548c\u662f\u591a\u5c11\n\n\u6211\u4eec\u8fd8\u5728\u8fd9\u4e2a\u5757\u91cc\u7ef4\u62a4\u4e24\u4e2a\u961f\u5217$suf$\u548c$pre$\uff0c\u5176\u4e2dsuf\u91cc\u5b58\u50a8\u7684\u662f$(j,dp(l,j))$\u8fd9\u4e9b\u4e8c\u5143\u7ec4\u6392\u597d\u5e8f\u4e4b\u540e\u7684\u7ed3\u679c,\n\n$pre$\u5b58\u50a8\u7684\u4fe1\u606f\u7a0d\u7a0d\u6709\u70b9\u7279\u6b8a\uff0c\u6211\u4eec\u4ee4$fdp(i,j)$\u8868\u793a\u5f53\u4ee5i\u4e3a\u53f3\u7aef\u70b9\u7684\u65f6\u5019\u7b2cj\u4f4d\u7b2c\u4e00\u6b21\u53d8\u4e3a1\u7684\u5de6\u7aef\u70b9,\u90a3\u4e48pre\u91cc\u5b58\u7684\u5c31\u662f$(j,fdp(r,j))$\u8fd9\u4e9b\u4e8c\u5143\u7ec4\u6392\u597d\u5e8f\u7684\u7ed3\u679c\n\n_l,r\u5206\u522b\u662f\u8fd9\u4e2a\u5757\u7684\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9_\n\n\u663e\u7136\u6211\u4eec\u5355\u70b9\u4fee\u6539\u7684\u65f6\u5019\u66b4\u529b\u91cd\u6784\u6574\u4e2a\u5757\u5c31\u884c\u4e86,\u8ba1\u7b97mx\u6570\u7ec4\u53ef\u4ee5\u7528\u521a\u624d\u7684$O(mnw)$\u66b4\u529b\u4e2d\u7684\u7b97\u6cd5\uff0c\u679a\u4e3e\u5de6\u7aef\u70b9\u4e4b\u540e\u533a\u95f4or\u548c\u6700\u591a31\u79cd\uff0c\u66f4\u65b0\u5bf9\u5e94\u7684mx\u6570\u7ec4\u5373\u53ef\n\n\u8fd9\u6837\u6211\u4eec\u56de\u7b54\u8be2\u95ee\u7684\u65f6\u5019\u53ef\u4ee5\u5c06\u533a\u95f4\u5206\u4e3a\u4e24\u7c7b,\u8fd9\u4e2a\u533a\u95f4\u5b8c\u5168\u88ab\u4e00\u4e2a\u5757\u5305\u542b\u6216\u8005\u8fd9\u4e2a\u533a\u95f4\u8de8\u8d8a\u4e86\u4e00\u4e9b\u5757\n\n\u5bf9\u4e8e\u5b8c\u5168\u5728\u5757\u5185\u7684\u533a\u95f4\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5757\u7684$mx$\u6570\u7ec4\u4e0a\u5927\u529b\u4e8c\u5206\u51fa\u7b54\u6848\n\n\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u6211\u4eec\u5982\u4f55\u5904\u7406\u8de8\u8d8a\u4e86\u4e00\u4e9b\u5757\u7684\u533a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a\u5757\u7684\u5de6\u7aef\u70b9\u5728\u54ea\u4e2a\u5757\u91cc,\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u679a\u4e3e\u5230\u4e86\u7b2ci\u4e2a\u5757\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u6839\u53f7n\u4e2a\u961f\u5217$ans(i)$,$ans(i)$\u91cc\u5b58\u50a8$(j,dp(i.l,j))$\u6392\u597d\u5e8f\u7684\u7ed3\u679c\uff0c\u5176\u4e2di.l\u8868\u793a\u7b2ci\u4e2a\u5757\u7684\u5de6\u7aef\u70b9\n\n\u8ba1\u7b97$ans(i)$\u53ef\u4ee5\u628a\u7b2ci\u4e2a\u5757\u7684$suf$\u961f\u5217\u548c$ans(i+1)$\u5f52\u5e76\u5f97\u5230\uff0c\u5f52\u5e76\u4e00\u6b21\u7684\u590d\u6742\u5ea6\u662f$O(w)$,\u8fd9\u6837\u6211\u4eec\u4fee\u6539\u7684\u65f6\u5019\u66b4\u529b\u91cd\u6784\u5c31\u884c\u4e86\n\n\u4e3a\u4e86\u65b9\u4fbf\u5f52\u5e76\u6211\u4eec\u53ef\u80fd\u8fd8\u9700\u8981\u7ef4\u62a4\u4e00\u6ce2\u7b2ci\u4e2a\u5757\u7684\u533a\u95f4or\u548c\n\n\u6211\u4eec\u8bbe$f(i)$\u8868\u793a\u5f53\u5de6\u7aef\u70b9\u4e3ai\u7684\u65f6\u5019\u6700\u5c0f\u7684\u53f3\u7aef\u70b9\u4f7f\u5f97$i,f(i)$\u8fd9\u6bb5\u533a\u95f4\u7684or\u548c\u5927\u4e8ek\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5f53\u5de6\u7aef\u70b9i\u5355\u8c03\u7684\u5411\u5de6\u79fb\u52a8\u7684\u65f6\u5019\u53f3\u7aef\u70b9\u662f\u8ddf\u7740\u5411\u5de6\u79fb\u52a8\u7684\uff0c\u8bc1\u660e\u53ef\u4ee5\u81ea\u884c\u53cd\u8bc1\u6cd5\u4e00\u4e0b\n\n\u90a3\u4e48\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7b2c$i$\u4e2a\u5757\u7684pre\u961f\u5217\u548c$ans(i+1)$\u8fd9\u4e2a\u961f\u5217\u4e0a\u8dd1\u53cc\u6307\u9488\u6765\u66f4\u65b0\u7b54\u6848\u4e86\uff0c\u590d\u6742\u5ea6\u540c\u6837\u662f$O(w)$\u7684\n\n\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u4fee\u6539\u590d\u6742\u5ea6\u662f$O(\\sqrt{n}w)$\u8be2\u95ee\u590d\u6742\u5ea6\u662f$O(\\sqrt{n}w)$\u7684\u7b97\u6cd5\uff0c\u7a0d\u52a0\u4f18\u5316\u5c31\u53ef\u901a\u8fc7\u6b64\u9898\u4e86~\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=5*1e4+10;const int B=250;\nvoid read(int &x){\n    char c;\n    bool op = 0;\n    while(c = getchar(), c < '0' || c > '9')\n    if(c == '-') op = 1;\n    x = c - '0';\n    while(c = getchar(), c >= '0' && c <= '9')\n    x = x * 10 + c - '0';\n    if(op) x = -x;\n}\n#define b(x) (x&31)\n#define p(x) (x>>5)\nstruct qu//\u961f\u5217\u7ed3\u6784\u4f53\n{\n    int dat[33];int hd;\n    inline int& operator [](const int& x){return dat[x];}\n};\ninline void cins(qu& x,qu& y,const int& u,const int& pos)\n{\n    int& hd=x.hd;hd=0;\n    for(int i=0;i<31;i++)if((u>>i)&1)x[++hd]=(pos<<5)|i;\n    for(int i=1,t=~u;i<=y.hd;i++)if((t>>b(y[i]))&1)x[++hd]=y[i];\n}\ninline void cmg(qu& x,qu& y,const int& u,qu& op)\n{\n    int& hd=op.hd;hd=0;\n    for(int i=1;i<=x.hd;i++)if((u>>b(x[i]))&1)op[++hd]=x[i];\n    for(int i=1,t=~u;i<=y.hd;i++)if((t>>b(y[i]))&1)op[++hd]=y[i];\n}\nstruct blk\n{\n    qu pre[B+3];qu suf[B+3];int a[B+3];int mx[B+3];\n    int siz;int sumor;int dl;\n    inline int& operator [](const int& x){return a[x];}\n    inline void cmx()//\u6c42\u51famax\u6570\u7ec4\n    {\n        for(int i=1;i<=siz;i++)mx[i]=-0x3f3f3f3f;\n        for(int i=1;i<=siz;i++)\n            for(int u=0,j=1;j<=pre[i].hd;j++)\n            {\n                u|=(1<<b(pre[i][j]));int& np=mx[i-p(pre[i][j])+dl+1];\n                np=max(np,u);\n            }for(int i=1;i<=siz;i++)mx[i]=max(mx[i-1],mx[i]);\n    }\n    inline void build()\n    {\n        for(int i=1;i<=siz;i++)sumor|=a[i];\n        for(int i=1;i<=siz;i++)cins(pre[i],pre[i-1],a[i],i+dl);\n        for(int i=siz;i>=1;i--)cins(suf[i],suf[i+1],a[i],i+dl);cmx();\n    }\n    inline void modify(int pos,int va)//\u66b4\u529b\u4fee\u6539\u5373\u53ef\n    {\n        int ch=a[pos]^va;a[pos]=va;sumor=0;int cur=0;\n        for(int i=1;i<=siz;i++)sumor|=a[i];\n        cins(pre[pos],pre[pos-1],a[pos],pos+dl);\n    \tfor(int i=pos+1;i<=siz;i++)\n        {cins(pre[i],pre[i-1],a[i],i+dl);cur|=a[i];if(ch==(cur&ch))break;}\n        cmx();cur=0;cins(suf[pos],suf[pos+1],a[pos],pos+dl);\n        for(int i=pos-1;i>=1;i--)\n        {cins(suf[i],suf[i+1],a[i],i+dl);cur|=a[i];if(ch==(cur&ch))break;}\n    }\n    inline int qry(int k,int lim)//\u8be2\u95ee\u7684\u65f6\u5019\u5927\u529b\u4e8c\u5206\u5373\u53ef\n    {\n        int l=1;int r=min(siz+1,lim);\n        while(l!=r){int mid=(l+r)>>1;if(mx[mid]>=k)r=mid;else l=mid+1;}\n        return (l==siz+1)?0x3f3f3f3f:l;\n    }\n}bl[N/B+3];int bi[N];int bj[N];qu suf[N/B+3];int n;int m;\ninline void modify(const int& pos,int& va)//\u4fee\u6539\n{\n    bl[bi[pos]].modify(bj[pos],va);\n    for(int i=bi[pos];i>=1;i--)cmg(bl[i].suf[1],suf[i+1],bl[i].sumor,suf[i]);\n}\ninline int qry(int k)//\u8be2\u95ee\n{\n    int ret=0x3f3f3f3f;\n    for(int i=1;i<=bi[n];i++)ret=min(ret,bl[i].qry(k,ret));\n    for(int i=bi[n],v,pv;i>=2;i--)\n    {\n        v=bl[i-1].sumor;qu& q=bl[i-1].pre[bl[i-1].siz];int pl=bl[i].dl;\n        for(int p1=1,p2=q.hd,u=0;p1<=suf[i].hd;p1++)\n        {\n            if(p(suf[i][p1])-pl>=ret)break;\n            u|=(1<<b(suf[i][p1]));if((u|v)<k)continue;\n            while(p2!=1){pv=v&(~(1<<b(q[p2])));if((pv|u)>=k)p2--,v=pv;else break;}\n            ret=min(ret,p(suf[i][p1])-p(q[p2])+1);\n            if(p2==1)break;\n        }\n    }return (ret==0x3f3f3f3f)?-1:ret;\n}\ninline void pre()//\u5206\u5757\n{\n    for(int i=1;i<=n;i++)bi[i]=(i-1)/B+1;for(int i=1;i<=n;i++)bj[i]=(i-1)%B+1;\n    for(int i=1;i<bi[n];i++)bl[i].siz=B;bl[bi[n]].siz=(n%B)?n%B:B;\n    for(int i=n;i>=1;i--)bl[bi[i]].dl=i-1;\n}\nint main()\n{\n    read(n);read(m);pre();\n    for(int i=1;i<=n;i++)read(bl[bi[i]][bj[i]]);\n    for(int i=1;i<=bi[n];i++)bl[i].build();\n    for(int i=bi[n];i>=1;i--)cmg(bl[i].suf[1],suf[i+1],bl[i].sumor,suf[i]);\n    for(int i=1,tp,x,y;i<=m;i++)\n    {\n        scanf(\"%d\",&tp);\n        if(tp==1)scanf(\"%d%d\",&x,&y),modify(x,y);\n        else scanf(\"%d\",&x),printf(\"%d\\n\",qry(x));\n    }return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1546330068,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5065 \u3010[Ynoi2014]\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec\u3011"
    },
    {
        "content": "\u6211\u60f3\u4e86\u5f88\u4e45\u90fd\u4e0d\u77e5\u9053 4log \u600e\u4e48\u5361\u6210 3log\u3002\u3002\u3002\n\n\u7136\u540e\u95ee\u4e86 142857\uff0c\u4ed6\u8bf4\u4e86\u4e00\u4e2a 3log \u505a\u6cd5\u3002\u548c 4log \u7684\u601d\u8def\u5b8c\u5168\u4e0d\u76f8\u540c\u3002\n\n\u5bf9\u6bcf\u4e2a\u503c\u7ef4\u62a4\u5bf9\u4e8e\u5176\u6bcf\u4e2a\u957f\u5ea6\u7684\u6570\u91cf\u3002\u5355\u6b21\u4fee\u6539\u7684\u65f6\u5019\u628a $i$ \u5de6\u53f3\u4e24\u8fb9\u7684\u524d\u540e\u7f00 or \u5206\u6bb5\u6c42\u51fa\u6765\uff0c\u8fd9\u6837\u5171\u6709 $O(n\\log^2 a)$ \u4e2a\u503c\u3002\n\n\u7136\u540e\u8003\u8651\u5bf9\u6bcf\u4e2a\u503c\u7684\u533a\u95f4\u957f\u5ea6\u6570\u91cf\u4fee\u6539\u3002\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5c31\u662f\u5de6\u8fb9\u6709\u4e00\u4e2a\u533a\u95f4 $[l_1,r_1]$\uff0c\u53f3\u8fb9\u6709\u4e00\u4e2a\u533a\u95f4 $[l_2,r_2]$\uff0c\u8fd9\u4e2a\u503c\u7684\u533a\u95f4 $L\\in [l_1,r_1],R\\in [l_2,r_2]$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5ea6 $len$\uff0c$l_1\\le L\\le r_1,l_2\\le L+len-1\\le r_2$ \u5373\u5171\u6709 $\\min(r_2-len+1,r_1)-\\max(l_2-len+1,l_1)+1$ \u4e2a\u533a\u95f4\u3002\n \n\u8fd9\u663e\u7136\u662f\u4e2a\u5206\u6bb5\u7684\u4e00\u6b21\u51fd\u6570\u3002\u4e5f\u5c31\u662f\u8981\u652f\u6301\u533a\u95f4\u52a0\u4e00\u6b21\u51fd\u6570\uff0c\u6c42\u7b2c\u4e00\u4e2a\u975e $0$ \u7684\u503c\u3002\n\n\u8fd9\u4e2a\u5730\u65b9\u6709\u70b9\u8bc8\u9a97\u7684\u610f\u5473\u3002\u5982\u679c\u4f60\u53bb\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\u80af\u5b9a\u6ca1\u6551\u3002\u7136\u800c\u8981\u6c42\u7684\u662f\u975e $0$ \u7684\u503c\u800c\u4e14\u6240\u6709\u6570\u90fd\u975e\u8d1f\u6240\u4ee5\u7ef4\u62a4\u533a\u95f4\u548c\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\u3002\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5355\u6b21\u4fee\u6539\u4e4b\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u503c\u6c42\u51fa\u5176\u6700\u77ed\u533a\u95f4\uff0c\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n\\log^2a)$\u3002",
        "postTime": 1674811030,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u8fd9\u5c31\u662f 142857 \u7684\u5b9e\u529b | \u9898\u89e3 P5065 [Ynoi2014] \u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec"
    },
    {
        "content": "> \u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4f17\u4eba\uff0c \u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\uff0c\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\u3001\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c\u76fc\u541b\u52ff\u5fd8\u3002\u2014\u2014\u2014\u2014\u4e16\u754c\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69\n\n\u76fc\u4f60\u5f52\u6765\uff0c\u73c2\u6735\u8389~\n\n---\n\n~~\u8fd9\u4e9b\u9898\u76ee\u679c\u7136\u4e00\u9053\u6bd4\u4e00\u9053\u795e\u4ed9~~\n\n\u4f17\u6240\u5468\u77e5\uff0c\u8fd9\u9053\u9898\u5206\u5757\u3002\n\n~~\u7136\u540e\u4f60\u5c31\u73c2\u4ee5\u53bb\u770bshadowice1984\u7684\u9898\u89e3\u4e86~~\n\n\u597d\u5427\u7a9d\u6765\u590d\u8ff0\u4e00\u4e0b\u5427\uff08\u96fe\uff09\n\n\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u56fa\u5b9a\uff0c\u5219\u533a\u95f4or\u548c\u7684\u4e0d\u540c\u53d6\u503c\u6700\u591a$\\log a$\u4e2a\uff0c\u56e0\u4e3aor\u548c\u662f\u6309\u4f4d\u53d8\u5927\u7684\uff08\u4e0d\u4f1a\u53d8\u5c0f\uff09\u3002\n\n\u5148\u5047\u8bbe\u6211\u4eec\u624b\u91cc\u6709\u4e00\u4e2a\u5df2\u7ecf\u5206\u597d\u5757\u7684\u5e8f\u5217\uff0c\u5757\u5927\u5c0f\u4e3a$S$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8be2\u95ee\uff0c\u5c31\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u533a\u95f4\u5728\u4e00\u4e2a\u5757\u5185\uff0c\u533a\u95f4\u8de8\u4e86\u51e0\u4e2a\u5757\u3002\n\n\u8003\u8651\u5904\u7406\u51fa\u6bcf\u4e2a\u5757\u5185\uff0c\u957f\u5ea6\u4e3a$len$\u7684\u533a\u95f4\u7684\u6700\u5927 or \u548c\u3002\u7136\u540e\u5bf9\u4e8e\u533a\u95f4\u5728\u5757\u5185\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u4e8c\u5206\u5373\u53ef\u3002\u5355\u6b21\u8be2\u95ee\u590d\u6742\u5ea6$O(\\frac{n\\log S}{S})$\u3002\n\n\u7531\u4e8e\u6709\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u8fd8\u8981\u8003\u8651\u5feb\u901f\u4fee\u6539\u8fd9\u4e2a\u6570\u7ec4\u3002\u6839\u636e\u521a\u521a\u8bf4\u7684\u7ed3\u8bba\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u4f5c\u7aef\u70b9\uff0c\u4e0d\u540cor\u548c\u6700\u591a$\\log a$\u4e2a\uff0c\u6240\u4ee5\u5904\u7406\u51fa\u6bcf\u4e2a\u6570\u7684\u6bcf\u4e00\u4f4d\u5728\u4e4b\u540e\uff08\u5305\u62ec\u81ea\u5df1\uff09\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6309\u987a\u5e8for\u5373\u53ef\u3002\n\n\u8fd8\u6709\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u201c\u6309\u987a\u5e8f\u201dor\uff0c\u6392\u5e8f\u7684\u8bdd\u5c31\u4f1a\u591a\u4e00\u4e2a$\\log\\log a$\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4f4d\u7f6e$i$\u8981or\u7684\u90a3\u4e9b\u4f4d\u7f6e\u7684\u987a\u5e8f\u6784\u6210\u7684\u961f\u5217\uff0c\u5bf9\u4e8e\u4f4d\u7f6e$i-1$\uff0c\u5148\u628a\u5b83\u51fa\u73b0\u8fc7\u7684\u4f4d\u585e\u8fdb\u961f\u5217\uff0c\u518d\u4ece\u524d\u5f80\u540e\u626b\u63cf\u4f4d\u7f6e$i$\u7684\u961f\u5217\uff0c\u628a\u6ca1\u51fa\u73b0\u5728\u4f4d\u7f6e$i-1$\u7684\u4f4d\u585e\u8fdb\u961f\u5217\u3002\u8fd9\u4e2a\u961f\u5217\u5c31\u662f\u7b2c$i-1$\u4f4d\u8981\u8f6c\u79fb\u7684\u4f4d\u7f6e\u7684\u987a\u5e8f\u3002\u5355\u6b21\u590d\u6742\u5ea6$O(S\\log a)$\u3002\n\n\u73b0\u5728\u8003\u8651\u8de8\u5757\u7684\u533a\u95f4\u3002\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u679a\u4e3e\u5757\uff0c\u5904\u7406\u4ee5\u7b2c$i$\u4e2a\u5757\u7684\u5757\u5c3e\u7ed3\u5c3e\u7684\u540e\u7f00\u7684\u4e0d\u540cor\u548c\uff08\u540c\u65f6\u8bb0\u5f55\u4f4d\u7f6e\uff09\u3002\n\n\u7136\u540e\u8003\u8651\u7b2c$i+1$\u4e2a\u5757\u7684\u6240\u6709\u4e0d\u540c\u524d\u7f00\uff0c\u7528\u53cc\u6307\u9488\u626b\u63cf\u540e\u7f00\u548c\u524d\u7f00\uff08\u5de6\u7aef\u70b9\u5f80\u53f3\uff0c\u53f3\u7aef\u70b9\u4e5f\u5f80\u53f3\uff09\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n\u63a5\u7740\u8003\u8651\u5982\u4f55\u4ece\u7b2c$i$\u5757\u7684\u540e\u7f00\u8f6c\u79fb\u5230\u7b2c$i+1$\u5757\u7684\u8d21\u732e\u3002\u5148\u628a\u539f\u6765\u7684\u540e\u7f00or\u4e0a\u7b2c$i+1$\u5757\u6240\u6709\u6570\u7684or\u548c\uff0c\u7136\u540e\u7528\u5f52\u5e76\u6392\u5e8f\u628a\u7b2c$i+1$\u5757\u7684\u540e\u7f00\u5e76\u4e0a\u53bb\u5373\u53ef\u3002\u6700\u540e\u53bb\u91cd\uff0c\u51fa\u73b0\u591a\u6b21\u7684\u4fdd\u7559\u6700\u540e\u51fa\u73b0\u7684\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6$O(\\frac{n\\log a}{S})$\u3002\n\n$S$\u53d6$\\sqrt n$\uff0c\u5f97\u603b\u590d\u6742\u5ea6$O(n\\sqrt n\\log n)$\u3002\n\n\u7136\u540e\u5361\u5361\u5e38\u6570\u3002\n\n## Code\uff1a\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#include<cstdio>\n#include<cctype>\n#include<utility>\n#include<algorithm>\n#include<cstring>\nchar buf[8888888],*it;\nvoid init(){fread(it=buf,1,8888886,stdin);fclose(stdin);}\ninline int readint(){\n\tint d=0;\n\tfor(;!isdigit(*it);++it);\n\twhile(isdigit(*it))d=d*10+(*it++^'0');return d;\n}\n#define mp std::make_pair\n#define bel(x)((x-1)/siz+1)\ntypedef std::pair<int,int>PII;\ninline bool operator<(const PII&a,const PII&b){\n\treturn(a.first!=b.first)?a.first<b.first:a.second>b.second;\n}\nconst int siz=400;\nint a[60000];\ninline void chkmax(int&a,const int&b){if(a<b)a=b;}\ninline void chkmin(int&a,const int&b){if(a>b)a=b;}\nint ans,pv;\nPII q[23333],vec[66],c[66];\nstruct BLOCK{\n\tint mx[402],val[402],L,R,cntp,cnts,all;\n\tPII pre[33],suf[33];\n\tvoid re(){\n\t\tmemset(mx,0,sizeof mx);\n\t\tfor(int i=1,p=cntp=0;i<=siz;++i)\n\t\tif((p|=val[i])!=pre[cntp].first)pre[++cntp]=mp(p,i+L-1);\n\t\tfor(int i=siz,p=cnts=0;i;--i)\n\t\tif((p|=val[i])!=suf[cnts].first)suf[++cnts]=mp(p,i+L-1);\n\t\tint head=1,tail=0;\n\t\tfor(int i=siz;i;--i){\n\t\t\tconst int lst=tail,v=val[i];\n\t\t\tfor(int j=v;j;j^=j&-j)\n\t\t\tq[++tail]=mp(__builtin_ctz(j),i);\n\t\t\tfor(int j=head;j<=lst;++j)\n\t\t\tif(!(v>>q[j].first&1))q[++tail]=q[j];\n\t\t\thead=lst+1;\n\t\t\tfor(int j=head,now=0;j<=tail;++j){\n\t\t\t\tconst int pos=q[j].second;\n\t\t\t\tchkmax(mx[pos-i+1],now|=val[pos]);\n\t\t\t}\n\t\t}\n\t\tfor(int i=2;i<=siz;++i)chkmax(mx[i],mx[i-1]);\n\t\tall=pre[cntp].first;\n\t}\n\tvoid build(int l,int r){\n\t\tL=l,R=r;\n\t\tfor(int i=l;i<=r;++i)val[i-l+1]=a[i];\n\t\tre();\n\t}\n\tvoid modify(int pos,int v){val[pos-L+1]=v;re();}\n\tinline int getlen(int v){return std::lower_bound(mx+1,mx+siz+1,v)-mx;}\n\tinline void merge_suffix_to_vec(){\n\t\tint l=1,r=1,it=1;\n\t\twhile(l<=pv&&r<=cnts)\n\t\tc[it++]=(vec[l]<suf[r])?vec[l++]:suf[r++];\n\t\twhile(l<=pv)c[it++]=vec[l++];\n\t\twhile(r<=cnts)c[it++]=suf[r++];\n\t\tvec[1]=c[1];\n\t\tfor(int i=2;i<it;++i){\n\t\t\tvec[i]=c[i];\n\t\t\tif(vec[i].first==vec[i-1].first)vec[i].second=vec[i-1].second;\n\t\t}\n\t\tpv=std::unique(vec+1,vec+it)-vec-1;\n\t}\n\tinline void check_prefix_with_vec(const int&v){\n\t\tint len=233333;\n\t\tfor(int i=1;i<=cntp;++i)\n\t\twhile(pv&&(vec[pv].first|pre[i].first)>=v)\n\t\tchkmin(len,pre[i].second-vec[pv--].second+1);\n\t\tchkmin(ans,len);\n\t}\n}b[130];\nint n,m,K;\nint main(){\n\tinit();\n\tn=readint(),m=readint();\n\tfor(int i=1;i<=n;++i)a[i]=readint();\n\tn=bel(n)*siz;\n\tK=n/siz;\n\tfor(int i=1;i<=K;++i)b[i].build((i-1)*siz+1,i*siz);\n\twhile(m--)\n\tif(readint()==1){\n\t\tconst int pos=readint(),x=readint();\n\t\tb[bel(pos)].modify(pos,x);\n\t\ta[pos]=x;\n\t}else{\n\t\tans=233333;\n\t\tconst int x=readint();\n\t\tfor(int i=1;i<=K;++i)\n\t\tif(b[i].all>=x)chkmin(ans,b[i].getlen(x));\n\t\tpv=0;\n\t\tb[1].merge_suffix_to_vec();\n\t\tfor(int i=2;i<=K;++i){\n\t\t\tb[i].check_prefix_with_vec(x);\n\t\t\tfor(int j=1;j<=pv;++j)vec[j].first|=b[i].all;\n\t\t\tb[i].merge_suffix_to_vec();\n\t\t}\n\t\tprintf(\"%d\\n\",(ans==233333)?-1:ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1550396289,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5065 \u3010[Ynoi2014]\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u590d\u6742\u5ea6\uff08\u76f8\u8f83\u4e8e\u9898\u9762\u4e2d\u7ed9\u51fa\u7684\uff09\u66f4\u4f18\u7684\u505a\u6cd5\uff01\n\n**\u9898\u610f** \uff1a \u7ef4\u62a4\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $A$\u3002\u652f\u6301 \uff1a\n\n- \u5355\u70b9\u4fee\u6539\u3002\n\n- \u8be2\u95ee\u6ee1\u8db3\u533a\u95f4 or \u548c\u5927\u4e8e\u7b49\u4e8e\u4e00\u4e2a\u6570\u7684\u533a\u95f4\u7684\u6700\u77ed\u53ef\u80fd\u957f\u5ea6\uff0c\u6216\u6307\u51fa\u65e0\u89e3\u3002\n\n$n,m\\leq 5\\times 10^4,A\\leq 2^{30}$ \uff0c\u65f6\u9650$\\texttt{1s}$\u3002\n\n------------\n\n\u76f8\u5173\u9898\u76ee \uff1a [P3794 \u7b7e\u5230\u9898IV](https://www.luogu.com.cn/problem/P3794)\n\n- ## \u5206\u5757 \uff1a $O(n\\sqrt{n}w)$\n\n\u8bb0\u5757\u957f\u4e3a $B$\u3002\n\n\u5148\u8003\u8651\u5982\u4f55\u6c42\u89e3\u9759\u6001\u5168\u5c40\u8be2\u95ee\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u7aef\u70b9\uff0c\u5de6\u7aef\u70b9\u5bf9\u5e94\u7684\u672c\u8d28\u4e0d\u540c or \u503c\u53ea\u6709 $O(w)$ \u4e2a\uff0c\u4e8e\u662f\u5bb9\u6613\u53cc\u6307\u9488 $O(Bw)$ \u8ba1\u7b97\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u957f\u5ea6\u7684\u6700\u5927 or \u548c\uff0c\u524d\u540e\u7f00\u672c\u8d28\u4e0d\u540c or \u548c\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u5bf9\u4e24\u8fb9\u7684\u6563\u5757\u5185\u90e8\u53ef\u4ee5\u5355\u72ec\u8dd1\u4e00\u6b21\uff0c\u5c06\u5176\u5408\u6210\u6574\u5757\u3002\n\n\u8003\u8651\u7b54\u6848\u533a\u95f4\u5728\u5757\u5185\u7684\u60c5\u51b5\uff0c\u5927\u529b\u679a\u4e3e\u6bcf\u4e2a\u5757\uff0c\u82e5\u5f53\u524d\u7b54\u6848\u80fd\u51cf\u5c0f\u5219\u4e0d\u65ad\u51cf\u5c0f\uff0c\u590d\u6742\u5ea6\u4e3a $O(B+n/B)$\u3002\n\n\u8003\u8651\u7b54\u6848\u533a\u95f4\u8de8\u8fc7\u4e24\u5757\u7684\u60c5\u51b5\uff0c\u679a\u4e3e\u53f3\u7aef\u70b9\u6240\u5728\u7684\u5757\uff0c\u7ef4\u62a4\u8be5\u5757\u4e4b\u524d\u5de6\u7aef\u70b9\u7684\u672c\u8d28\u4e0d\u540c or \u548c\u3002\n\n\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u5757\uff0c\u5c06\u4e4b\u524d\u7684\u5de6\u7aef\u70b9 or \u4e0a\u8fd9\u4e2a\u5757\uff0c\u518d\u52a0\u5165\u8fd9\u4e2a\u5757\u5185\u90e8\u7684\u540e\u7f00\uff0c\u7136\u540e\u53bb\u91cd\u3002\n\n\u5728\u6bcf\u4e2a\u5206\u754c\u7ebf\u5904\uff0c\u53cc\u6307\u9488\u6c42\u51fa\u7b54\u6848\u3002\u590d\u6742\u5ea6\u4e3a $O(nw/B)$\u3002\n\n\u4ee4 $B=O(\\sqrt{n})$ \u5373\u53ef\u505a\u5230 $O(n\\sqrt{n}w)$\u3002\n\n- ## \u7ebf\u6bb5\u6811 \uff1a$O(w^2\\log^2n)$\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5e8f\u5217 $A$ \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\uff0c\u7ef4\u62a4\u672c\u8d28\u4e0d\u540c\u7684\u524d\u7f00 or \u548c\u4e0e\u540e\u7f00 or \u548c\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u540e\uff0c\u5728\u6bcf\u4e2a\u53d7\u5230\u5f71\u54cd\u7684\u8282\u70b9\u5904\u66b4\u529b\u8ba1\u7b97\u8de8\u8d8a\u5206\u754c\u7ebf $mid$ \u7684\u533a\u95f4\u7684 or \u548c\u3002\u8fd9\u4e9b\u533a\u95f4\u6709 $O(w^2)$ \u4e2a\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u957f\u5ea6\uff0c\u7528\u5806\u6765\u7ef4\u62a4\u6700\u5927\u503c\u3002\u5c06\u8fd9\u4e9b\u6700\u5927\u503c\u518d\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u67e5\u8be2\u65f6\u53ea\u9700\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\n\n\u4fee\u6539\u7684\u590d\u6742\u5ea6\u4e3a $O(w^2\\log^2n)$ \uff0c\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\u3002\n\n- ## \u62fc\u5728\u4e00\u8d77\uff1f\uff1a$O(n\\sqrt{nw}+nw^2\\log n)$\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u5757\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u7ef4\u62a4\u533a\u95f4\u5185\u957f\u4e3a $1\\sim len$ \u7684\u6700\u5927\u533a\u95f4 or \u548c\u3002\n\n\u5408\u5e76\u65f6\uff0c\u8003\u8651\u4e24\u4e2a\u513f\u5b50\u7684\u8d21\u732e\uff0c\u4ee5\u53ca\u8de8\u8d8a\u4e2d\u70b9\u7684 $O(w^2)$ \u4e2a\u533a\u95f4\u7684\u8d21\u732e\u3002\n\n\u82e5\u5757\u5927\u5c0f\u4e3a $B$ \uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f $O(w^2\\log B+B+B/2+B/4)=O(w^2\\log B+B)$\u3002\n\n\u6211\u4eec\u4ee4 $B=\\sqrt{nw}$ \u5373\u53ef\u505a\u5230 $O(n\\sqrt{nw}+nw^2\\log n)$\u3002\n\n\u5361\u5e38 \uff1a \u5728\u533a\u95f4\u957f\u5ea6\u8f83\u5c0f\u65f6\u8dd1\u66b4\u529b\uff0c\u8fd9\u6837\u53ef\u4ee5\u540c\u65f6\u51cf\u5c0f\u65f6\u7a7a\u5e38\u6570\u3002\n\n\uff08\u672a\u4f7f\u7528\u5176\u4ed6\u526a\u679d\uff09\n\n\u76ee\u524d\u6700\u4f18\u89e3\uff0c\u6700\u6162\u70b9 `320ms`\u3002\n\n\u4ee3\u7801\u633a\u597d\u5199\u7684\u3002\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#define Pr pair<int,int>\n#define fir first\n#define sec second\n#define mp make_pair\n#define MaxN 50500\nusing namespace std;\nstruct Data{Pr p[32];int tn,s;};\ninline void add(Data &A,const Data &B){\n  for (int i=1;i<=B.tn;i++)\n    if ((B.p[i].fir|A.s)!=A.p[A.tn].fir)\n      A.p[++A.tn]=mp(B.p[i].fir|A.s,B.p[i].sec);\n  A.s|=B.s;\n}\nconst int BS=800,BS2=32;\nstruct Node{int *x,len;Data l,r;}a[(MaxN/BS2)<<2];\ninline void up(int u)\n{\n  int l=u<<1,r=u<<1|1;\n  a[u].l=a[l].l;add(a[u].l,a[r].l);\n  a[u].r=a[r].r;add(a[u].r,a[l].r);\n  memcpy(a[u].x+1,a[l].x+1,sizeof(int)*a[l].len);\n  memset(a[u].x+a[l].len+1,0,sizeof(int)*(a[u].len-a[l].len));\n  for (int i=1;i<=a[r].len;i++)a[u].x[i]=max(a[u].x[i],a[r].x[i]);\n  for (int i=1;i<=a[l].r.tn;i++)\n    for (int j=1;j<=a[r].l.tn;j++){\n      int len=a[r].l.p[j].sec-a[l].r.p[i].sec+1\n         ,s=a[r].l.p[j].fir|a[l].r.p[i].fir;\n      a[u].x[len]=max(a[u].x[len],s);\n    }\n  for (int i=2;i<=a[u].len;i++)\n    a[u].x[i]=max(a[u].x[i],a[u].x[i-1]);\n}\nint n,x[MaxN],_buf[MaxN<<4],*tbuf=_buf;\nvoid build2(int l,int r,Node &A)\n{\n  memset(A.x+1,0,sizeof(int)*A.len);\n  for (int i=l;i<=r;i++)\n    for (int j=i,s=0;j<=r;j++)\n      A.x[j-i+1]=max(A.x[j-i+1],s|=x[j]);\n  for (int i=2;i<=A.len;i++)\n    A.x[i]=max(A.x[i],A.x[i-1]);\n  A.l.tn=A.r.tn=0;\n  for (int i=l,s=0;i<=r;i++)\n    if (i==l||(s|x[i])!=s){\n      s|=x[i];\n      A.l.p[++A.l.tn]=mp(s,i);\n    }\n  for (int i=r,s=0;i>=l;i--)\n    if (i==r||(s|x[i])!=s){\n      s|=x[i];\n      A.r.p[++A.r.tn]=mp(s,i);\n    }\n  A.l.s=A.r.s=A.r.p[A.r.tn].fir;\n}\nvoid build(int l=1,int r=n,int u=1)\n{\n  a[u].len=r-l+1;\n  if (a[u].len<=BS){a[u].x=tbuf;tbuf+=a[u].len;}\n  if (a[u].len<=BS2){build2(l,r,a[u]);return ;}\n  int mid=(l+r)>>1;\n  build(l,mid,u<<1);\n  build(mid+1,r,u<<1|1);\n  if (a[u].len<=BS)up(u);\n}\nint to;\nvoid upd(int l=1,int r=n,int u=1)\n{\n  if (a[u].len<=BS2){build2(l,r,a[u]);return ;}\n  int mid=(l+r)>>1;\n  if (to<=mid)upd(l,mid,u<<1);\n  else upd(mid+1,r,u<<1|1);\n  if (a[u].len<=BS)up(u);\n}\nint st[505],tot,wfc,ret;\nvoid qry(int l=1,int r=n,int u=1)\n{\n  if (a[u].len<=BS){\n    if (ret>a[u].len&&a[u].x[a[u].len]>=wfc)ret=a[u].len;\n    if (ret<=a[u].len)while(ret>1&&a[u].x[ret-1]>=wfc)ret--;\n    st[++tot]=u;\n    return ;\n  }int mid=(l+r)>>1;\n  qry(l,mid,u<<1);qry(mid+1,r,u<<1|1);\n}\nint calc(Data &L,Data &R,int lim)\n{\n  int ret=n+1;\n  for (int i=1,p=R.tn+1;i<=L.tn;i++){\n    while(p>1&&(R.p[p-1].fir|L.p[i].fir)>=lim)p--;\n    if (p<=R.tn)ret=min(ret,R.p[p].sec-L.p[i].sec+1);\n  }return ret;\n}\nint m;\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  for (int i=1;i<=n;i++)scanf(\"%d\",&x[i]);\n  build();\n  for (int i=1,op;i<=m;i++){\n    scanf(\"%d\",&op);\n    if (op==1){\n      scanf(\"%d\",&to);\n      scanf(\"%d\",&x[to]);upd();\n    }\n    else {\n      scanf(\"%d\",&wfc);\n      tot=0;ret=n+1;qry();\n      Data tr[2];bool flag=0;\n      tr[0]=a[st[1]].r;\n      for (int i=2;i<=tot;i++){\n        ret=min(ret,calc(tr[flag],a[st[i]].l,wfc));\n        add(tr[!flag]=a[st[i]].r,tr[flag]);\n        flag^=1;\n      }printf(\"%d\\n\",ret==n+1 ? -1 : ret);\n    }\n  }return 0;\n}\n```\n\n\n\n",
        "postTime": 1624971233,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 \u3010P5065 [Ynoi2014] \u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\u5f88\u81ea\u95ed\uff0c\u505a\u8fd9\u9053\u9898\u7406\u8bba\u4e0a\u809d\u4e86\u5feb $1$ \u4e2a\u6708\uff0c\u5c5e\u5b9e\u6765\u8bf4\u809d\u4e86\u6574\u6574\u4e09\u4e2a\u665a\u81ea\u4e60\uff0c $1$ \u4e2a\u665a\u81ea\u4e60\u5199\uff0c $1$ \u4e2a\u665a\u81ea\u4e60\u8c03\uff0c\u6700\u540e $1$ \u4e2a\u665a\u81ea\u4e60\u8c03\u4e0d\u51fa\u6765\u5c31\u770b\u4e86\u9898\u89e3\u5199\u6cd5\u7136\u540e\u6539\u4e86\u6539\uff1f\uff1f\uff1f\u8fd8\u662f\u4ee3\u7801\u5b9e\u73b0\u80fd\u529b && \u8c03\u8bd5\u80fd\u529b\u70c2\u7684\u4e00\u5339\u3002     \n\n```Welcome home, Chtholly```\n# \u6b63\u6587      \n\n\u9996\u5148\u8fd9\u9053\u9898\u6309\u7406\u8bba\u4e0a\u800c\u8a00\u662f\u4e2a\u5206\u5757 + \u53cc\u6307\u9488 + dp + \u4e8c\u5206\u7684\u4e00\u4e2a\u6bd2\u7624\u6570\u636e\u7ed3\u6784\uff0c\u8bba\u4ee3\u7801\u5b9e\u73b0\u80fd\u529b\u7684\u8bdd\u6211\u771f\u7684\u89c9\u5f97\u8fd9\u662f\u4e2a\u9ed1\u9898\uff1f      \n\n\u9996\u5148\u5c31\u662f $Ynoi$ \u65e5\u5e38\u4e0b\u996d\u64cd\u4f5c\uff0c\u9762\u5411\u6570\u636e\u7f16\u7a0b\uff0c\u4f60\u770b\u8fd9 $1s$ \uff0c\u4f60\u770b\u8fd9 $5e4$ \uff0c\u5f88\u660e\u663e\u5c31\u4e0d\u5bf9\u561b\uff0c$lxl$ \u600e\u4e48\u53ef\u80fd\u4e0d\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u5361\u6ee1\uff0c\u6240\u4ee5\u521d\u6b65\u4f30\u8ba1\u8fd9\u662f\u4e00\u4e2a $O(n\\sqrt nlog_n)$ \u6216 $O(nlog_n^3)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8001\u5b9e\u8bf4\u6211\u89c9\u5f97 $O(nlog_n^4)$ \u8fc7\u4e0d\u6389\u3002         \n\n\u63a5\u7740\u6211\u4eec\u8fd8\u662f\u6765\u66b4\u529b\u4e00\u4e0b\uff0c\u9996\u5148\u6700\u76f4\u89c2\u7684\u5c31\u662f\u76f4\u63a5\u66b4\u529b\u628a\u6240\u6709\u533a\u95f4\u679a\u4e3e\u4e00\u904d\uff0c\u7136\u540e\u66b4\u529b\u7edf\u8ba1\u51fa\u6765\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u975e\u5e38\u4e0d\u53ef\u89c2\u7684 $O(n ^ 2m)$ \uff0c\u6b63\u6240\u8c13 $O(n ^ 2)$ \u4ec0\u4e48\u90fd\u80fd\u7ef4\u62a4\u3002      \n\n\u63a5\u7740\u6211\u4eec\u518d\u8003\u8651\u76f4\u89c2\u611f\u53d7\u4e00\u4e0b\u8fd9\u79cd\u64cd\u4f5c\uff0c\u5f88\u654f\u611f\u5730\u53d1\u73b0\u4e86\u8fd9\u9053\u9898\u7ef4\u62a4\u7684\u4e0d\u662f\u6211\u4eec\u559c\u95fb\u4e50\u89c1\u7684\u5f02\u6216\u64cd\u4f5c\uff0c\u800c\u662f\u6216\u64cd\u4f5c\uff0c\u8fd9\u5c31\u5f88\u8be1\u5f02\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u6216\u7684\u6027\u8d28\u5165\u624b\uff0c\u4e00\u8fde\u4e32\u7684\u6570\u6216\u8d77\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u5355\u72ec\u8003\u8651\uff0c\u53ea\u8981\u8fd9\u4e00\u8fde\u4e32\u7684\u6570\u91cc\u9762\u6709\u4e00\u4e2a\u6570\u8be5\u4f4d\u4e3a $1$ \uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u6216\u7ed3\u679c\u4e2d\u7684\u8be5\u4f4d\u4e3a $1$ \u3002       \n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u7b2c $i$ \u4e2a\u6570\u5411\u53f3\u6216\u65f6\uff0c\u7b2c $j$ \u4f4d\u7b2c\u4e00\u6b21\u4e3a $1$ \u65f6\u66f4\u65b0\u5230\u4e86\u54ea\u91cc\u8bb0\u4e3a $Nar(i , j)$ \uff0c\u5f88\u663e\u7136\u6211\u4eec\u5982\u679c\u80fd\u597d\u597d\u7ef4\u62a4\u8fd9\u73a9\u610f\u513f\u6211\u4eec\u5c31\u80fd\u7528 $O(mnw)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u6b64\u9898\uff0c\u5176\u4e2d\u53ef\u4ee5\u9ed8\u8ba4 $w = 30$ \uff0c\u5177\u4f53\u65b9\u6cd5\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u5f00\u4e00\u4e2a $vector$ \u7ef4\u62a4\u4e0a\u8ff0\u4fe1\u606f\u5e76\u4e14\u5728\u8fd9\u4e2a $vector$ \u4e2d\u6309\u7167 $Nar(i , j)$ \u628a\u4fe1\u606f\u6392\u597d\u5e8f\uff0c\u63a5\u7740\u66b4\u529b\u626b\u5c31\u53ef\u4ee5\u4e86\u3002      \n\n\u4e0d\u8fc7\u6211\u4eec\u53d1\u73b0\u8fd9\u4e1c\u897f\u4e0d\u597d\u641e\uff0c\u6211\u4eec\u5fc5\u987b\u5b9e\u73b0\u5feb\u901f\u8f6c\u79fb\u624d\u53ef\u4ee5\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651 $dp$ \u8fd9\u4e2a $vector$ \uff0c\u8fd9\u4e2a\u64cd\u4f5c\u4e5f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u8bb0 $v(i)$ \u8868\u793a\u7b2c $i$ \u4e2a\u6570\u7684 $vector$ \uff0c\u5982\u679c\u6b64\u65f6\u6211\u4eec\u8981\u4ece $v(i + 1) -> v(i)$ \u6211\u4eec\u5148\u5224\u5f53\u524d\u8fd9\u4e2a\u6570\u54ea\u4e9b\u4f4d\u5df2\u7ecf\u4e3a $1$ \u4e86\uff0c\u8fd9\u4e9b\u4f4d\u4e4b\u95f4\u5f80 $v(i)$ \u4e2d\u585e\uff0c\u63a5\u7740\u628a\u5f53\u524d\u4f4d\u4e0d\u4e3a $1$ \u7684\u4fe1\u606f\u4ece $v(i + 1)$ \u91cc\u9762\u62ff\u51fa\u6765\u585e\u5c31\u53ef\u4ee5\u4e86\uff0c\u66b4\u529b\u81f3\u6781\u3002       \n\n\u63a5\u7740\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u8981\u91cd\u65b0\u7ef4\u62a4\u8fd9\u73a9\u610f\u513f\u7a0b\u5e8f\u5b9e\u5728\u662f\u592a\u75b2\u4e8e\u5954\u547d\u4e86\uff0c\u800c\u4e14\u6211\u4eec\u73b0\u5728\u4e5f\u53ea\u80fd\u8fd9\u4e48\u7ef4\u62a4\u4e86\uff0c\u6240\u4ee5\u8003\u8651\u66b4\u529b\u5206\u5757\uff0c\u628a\u5927\u95ee\u9898\u53d8\u6210\u4e00\u4e9b\u5b50\u95ee\u9898\u6700\u540e\u67e5\u8be2\u65f6\u66b4\u529b\u5408\u5e76\u5c31\u53ef\u4ee5\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u6211\u4eec\u8fd8\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a $pre$ \u548c $suf$ \u7684 $vector$ \uff0c\u6211\u4eec\u8bb0 $L(i)$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u7684\u5de6\u7aef\u70b9\uff0c$R(i)$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u7684\u53f3\u7aef\u70b9\uff0c$pre$ \u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u53cd\u65b9\u5411\u7684 $vector$ \uff0c\u5c31\u662f\u8bb0\u5f55 $R(i)$ \u5411\u5de6\u6216\u65f6\uff0c\u5404\u4e2a\u4f4d\u7b2c\u4e00\u6b21\u53d8\u6210 $1$ \u65f6\u66f4\u65b0\u5230\u4e86\u54ea\u91cc\uff0c$suf(i)$ \u5c31\u662f $v(L(i))$ \u3002      \n      \n\u63a5\u7740\u6211\u4eec\u8fd8\u8981\u8bb0\u5f55\u4e00\u4e0b\u5757\u5185\u7684 $Or$ \u548c\u4ee5\u53ca\u4e00\u4e2a\u5757\u5185\u7684 $mx_i$ \u6570\u7ec4\u8868\u793a\u957f\u5ea6\u4e3a $i$ \u65f6\u7684\u6700\u5927 $Or$ \u503c\uff0c\u8fd9\u4e2a\u5f88\u660e\u663e\u7528\u6211\u4eec\u4e0a\u8ff0\u7684\u66b4\u529b\u5728\u5757\u5185\u641e\u5c31\u53ef\u4ee5\u4e86\u3002      \n\n\u4e0d\u8fc7\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5757\u5185\u7684\u6bcf\u4e2a\u503c\u7684 $suf$ \u4ee5\u53ca\u5757\u7684 $suf,pre$ \u90fd\u662f\u53ea\u8bb0\u5f55\u5f53\u524d\u5757\u5185\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u62bd\u8c61\u7406\u89e3\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u533a\u95f4\u3002        \n\n\u63a5\u7740\u6211\u4eec\u6765\u4e00\u4e2a\u5927\u7684\u53eb $ans$ \u7684 $vector$ \uff0c$ans_i$ \u8868\u793a\u7b2c $i$ \u4e2a\u5757\u7684 $suf$ \u961f\u5217\uff0c\u4e0d\u8fc7\u6b64\u65f6\u7684 $ans_i$ \u91cc\u9762\u7684\u4fe1\u606f\u53ef\u4ee5\u8de8\u8d8a\u5757\u3002\u8fd9\u4e2a\u5728\u6bcf\u6b21\u4fee\u6539\u65f6\u6765\u4e00\u6b21\u5c31\u597d\u4e86\u3002        \n\n\u6700\u540e\u6765\u5230\u4e86\u6211\u4eec\u7684\u67e5\u8be2\u73af\u8282\uff0c\u9996\u5148\u6211\u4eec\u73b0\u5728\u6bcf\u4e2a\u5757\u91cc\u9762\u505a\u4e00\u4e2a\u5c0f\u67e5\u8be2\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4e8c\u5206\uff0c\u63a5\u7740\u6211\u4eec\u5904\u7406\u8de8\u8d8a\u5757\u7684\u60c5\u51b5\u65f6\uff0c\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u5757\u7684 $pre$ \u548c $ans$ \u4e0a\u9762\u8dd1\u53cc\u6307\u9488\u5373\u53ef(\u5982\u679c\u5bf9\u4e8e\u8fd9\u91cc\u7684\u53cc\u6307\u9488\u6709\u7591\u60d1\u770b\u4e00\u4e0b\u4ee3\u7801\u4f60\u5c31\u4f1a\u4e86)    \n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nmlog_a)$ \uff0c\u4e0d\u8fc7\u7531\u4e8e\u8fd9\u9053\u9898\u5b9e\u73b0\u8d77\u6765\u786e\u5b9e\u5e38\u6570\u592a\u5927\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e9b\u5c0f\u4f18\u5316\uff1a     \n\n- \u5728\u5bf9\u6bcf\u4e2a\u5757 modify \u7684\u65f6\u5019\u6211\u4eec\u7528\u4e00\u4e2a ch \u53d8\u91cf\u63a7\u5236\u4e00\u4e0b\uff0c\u5982\u679c\u6b64\u65f6\u5df2\u7ecf\u6ca1\u6709\u5fc5\u8981\u518d\u5f80\u4e0b\u6539\u5c31\u76f4\u63a5 break \u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u6211\u8bd5\u4e86\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u4f18\u5316\u5fc5\u4e0d\u53ef\u5c11         \n\n- \u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u4e5f\u5c3d\u91cf\u80fdbreak\u5c31break\u5427        \n\n\u5982\u679c\u4f60\u8fd8\u60f3\u5361\u6210\u6700\u4f18\u89e3\u5176\u5b9e\u8fd8\u53ef\u4ee5\u8fd9\u4e48\u73a9\uff0c~~\u56e0\u4e3a\u8003\u8651\u5230\u8fd9\u9053\u9898\u7a7a\u95f4\u6ca1\u5361\u6ee1~~\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u518d\u6765\u4e2a\u961f\u5217\uff0c\u56e0\u4e3a\u6709\u65f6\u5019\u6211\u4eec\u679a\u4e3e $vector$ \u91cc\u9762\u7684\u5143\u7d20\u65f6\u5176\u5b9e\u5e76\u6ca1\u5f80\u53f3\u8fb9\u8d70\uff0c\u6211\u4eec\u53ea\u8981\u518d\u6765\u4e2a $vector$ \u628a $Nar(i,j)$ \u76f8\u540c\u7684\u5143\u7d20\u5408\u5e76\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e94\u8be5\u53ef\u4ee5\u8dd1\u5feb\u4e00\u70b9\u3002        \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int Len = 5e4 , SIZE = 250 , Inf = 1e9;\nint n,m,t;\ninline void read(int &x){\n    char c;\n    bool op = 0;\n    while(c = getchar(), c < '0' || c > '9')\n    if(c == '-') op = 1;\n    x = c - '0';\n    while(c = getchar(), c >= '0' && c <= '9')\n    x = x * 10 + c - '0';\n    if(op) x = -x;\n}\ninline void write(int x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nstruct node\n{\n\tint to,base;//\u5206\u522b\u8bb0\u5f55\u5230\u54ea\u91cc\uff0c\u4ee5\u53ca\u5f53\u524d\u8fd9\u4e00\u4f4d \n\tnode(){to = 0 , base = 0;}\n\tnode(int A,int B)\n\t{\n\t\tto = A , base = B;\n\t}\n};\nstruct qu//\u642c\u7684shadowwice\u54e5\u54e5\u7684vector \n{\n    node dat[33];int hd;\n    inline node& operator [](const int& x){return dat[x];}//\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684 \n};\ninline void Union_Point(qu& x , qu& y,int& u,int pos)//\u7531y\u5411x\u5408\u5e76 \n{\n\tx.hd = 0;\n\tfor(int i = 0 ; i < 31 ; i ++) if((u >> i) & 1) x[++ x.hd] = node(pos , i);\n\tfor(int i = 1 ; i <= y.hd ; i ++) if(!((u >> y[i].base) & 1)) x[++ x.hd] = y[i];\n}\ninline void Union_Block(qu& x , qu& y,int &u,qu &op)\n{\n\top.hd = 0;\n\tfor(int i = 1 ; i <= x.hd ; i ++) if((u >> x[i].base) & 1) op[++ op.hd] = x[i];\n\tfor(int i = 1 ; i <= y.hd ; i ++) if(!((u >> y[i].base) & 1)) op[++ op.hd] = y[i];\n}\nstruct Blocker\n{\n\tqu pre[SIZE + 5] , suf[SIZE + 5];int a[SIZE + 5] , mx[SIZE + 5] , siz , Orsum , dl;\n\tinline int& operator [](const int& x){return a[x];}\n\tinline void cmx()\n\t{\n\t\tfor(register int i = 1 ; i <= siz ; i ++) mx[i] = -Inf; \n\t\tfor(register int i = 1 ; i <= siz ; i ++)\n\t\t\tfor(register int j = 1 , u = 0 ; j <= pre[i].hd ; j ++)\n\t\t\t{\n\t\t\t\tu |= (1 << pre[i][j].base);\n\t\t\t\tmx[i + dl - pre[i][j].to + 1] = max(mx[i + dl - pre[i][j].to + 1] , u);\n\t\t\t}\n\t\tfor(register int i = 1 ; i <= siz ; i ++) mx[i] = max(mx[i] , mx[i - 1]);\n\t}\n\tinline void build()\n\t{\n\t\tfor(register int i = 1 ; i <= siz ; i ++) Orsum |= a[i];\n\t\tfor(register int i = 1 ; i <= siz ; i ++) Union_Point(pre[i] , pre[i - 1] , a[i] , dl + i);\n\t\tfor(register int i = siz ; i >= 1 ; i --) Union_Point(suf[i] , suf[i + 1] , a[i] , dl + i);\n\t\tcmx();\n\t}\n\tinline void modify(int pos,int va)//\u8fd9\u91cc\u4f20\u8fdb\u6765\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u662f\u6570\u5217\u4e2d\u7684pos \n\t{\n\t\tint ch = a[pos] ^ va , cur = 0; a[pos] = va;\n\t\tOrsum = 0;//\u76f4\u63a5\u66b4\u529b\u91cd\u65b0\u7b97\u5c31\u597d\u4e86 \n\t\tfor(register int i = 1 ; i <= siz ; i ++) Orsum |= a[i];\n\t\tUnion_Point(pre[pos] , pre[pos - 1] , a[pos] , pos + dl);\n\t\tfor(register int i = pos + 1 ; i <= siz ; i ++){Union_Point(pre[i] , pre[i - 1] , a[i] , dl + i);cur |= a[i];if(ch == (cur & ch)) break;}\n\t\tcmx();cur = 0;Union_Point(suf[pos] , suf[pos + 1] , a[pos] , pos + dl);\n\t\tfor(register int i = pos - 1 ; i >= 1 ; i --){Union_Point(suf[i] , suf[i + 1] , a[i] , dl + i);cur |= a[i];if(ch == (cur & ch)) break;} \n\t}\n\tinline int qry(int k,int lim)\n\t{\n\t\tint l = 1 , r = min(lim , siz + 1);\n\t\twhile(l < r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif(mx[mid] >= k) r = mid;\n\t\t\telse l = mid + 1;\n\t\t}\n\t\treturn (l == siz + 1) ? Inf : l;\n\t}\n}BL[SIZE + 5];\nint bl[Len + 5] , Blocki[Len + 5] ; qu suf[SIZE + 5];\ninline void modify(int pos,int va)\n{\n\tBL[bl[pos]].modify(Blocki[pos] , va);\n\tfor(int i = bl[pos] ; i >= 1 ; i --) Union_Block(BL[i].suf[1] , suf[i + 1] , BL[i].Orsum , suf[i]);\n}\ninline int qry(int k)\n{\n\tint Alen = Inf;\n\tfor(register int i = 1 ; i <= bl[n] ; i ++) Alen = min(Alen , BL[i].qry(k , Alen));\n\tfor(register int i = bl[n] , v , pv ; i >= 2 ; i --)\n\t{\n\t\tv = BL[i - 1].Orsum ; qu& q = BL[i - 1].pre[BL[i - 1].siz];int pl = BL[i].dl;\n\t\tfor(register int p1 = 1 , p2 = q.hd , u = 0 ; p1 <= suf[i].hd ; p1 ++)\n\t\t{\n\t\t\tif(suf[i][p1].to - pl >= Alen) break;\n\t\t\tu |= (1 << suf[i][p1].base);if((u | v) < k) continue;\n\t\t\twhile(p2 != 1)\n\t\t\t{\n\t\t\t\tpv = v & (~(1 << q[p2].base));//\u8fd8\u539f\u7f29\u5c0f\u7684\u533a\u95f4Or\u548c \n\t\t\t\tif((pv | u) >= k) p2 -- , v = pv;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tAlen = min(Alen , suf[i][p1].to - q[p2].to + 1);\n\t\t\tif(p2 == 1) break;\n\t\t}\t\t\n\t}\n\treturn (Alen == Inf) ? -1 : Alen;\n}\ninline void Init()\n{\n\tt = sqrt(n);\n\tfor(register int i = 1 ; i <= n ; i ++) bl[i] = (i - 1) / t + 1;for(int i = 1 ; i <= n ; i ++) Blocki[i] = (i - 1) % t + 1;\n\tfor(register int i = 1 ; i <= bl[n] ; i ++) BL[i].siz = t;\n\tBL[bl[n]].siz = (n % t) ? n % t : t;\n\tfor(register int i = n ; i >= 1 ; i --) BL[bl[i]].dl = i - 1;\n}\nint main()\n{\n\tread(n) , read(m) ; Init();\n\tfor(register int i = 1 ; i <= n ; i ++) read(BL[bl[i]][Blocki[i]]);\n\tfor(register int i = 1 ; i <= bl[n] ; i ++) BL[i].build();\n\tfor(register int i = bl[n] ; i >= 1 ; i --) Union_Block(BL[i].suf[1] , suf[i + 1] , BL[i].Orsum , suf[i]);\n\tfor(register int i = 1 ; i <= m ; i ++)\n\t{\n\t\tregister int opt,l,k;read(opt) , read(l);\n\t\tif(opt == 1){read(k) , modify(l , k);}\n\t\telse write(qry(l)) , puts(\"\");\n\t}\n\treturn 0;\n}\n```    \nPS\uff1a\u5e94\u8be5\u7b97\u662f\u672c\u4eba\u505a\u8fc7\u7684 $Ynoi$ \u91cc\u9762\u6700\u96be\u7801\u7684\u4e00\u9053\u9898\u4e86\uff0c\u5b9e\u73b0\u96be\u5ea6\u8f83\u9ad8\u3002",
        "postTime": 1612426345,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5065 \u3010[Ynoi2014] \u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec\u3011"
    },
    {
        "content": "\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\uff0c\u9010\u6e10\u6d88\u5931\u7684\u672a\u6765\u3002\n\n\u7ebf\u6bb5\u6811\u57fa\u7840\u7ec3\u4e60\u9898\uff0cnt \u5361\u5e38\u9898\u3002\n\n\u663e\u7136 or \u6709 $\\log a$ \u4e2a\u5206\u6bb5\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u7ed3\u70b9\u524d\u7f00\u3001\u540e\u7f00\u7684\u5206\u6bb5\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u628a\u5176\u5de6\u53f3\u513f\u5b50\u5408\u5e76\uff08\u5c31\u662f\u679a\u4e3e\u5de6\u8fb9\u540e\u7f00\u7684\u5206\u6bb5\u548c\u53f3\u8fb9\u524d\u7f00\u7684\u5206\u6bb5\uff09\uff0c\u52a0\u5165\u6570\u636e\u7ed3\u6784\u4e2d\u7ef4\u62a4\u3002\u663e\u7136\u8fd9\u4e2a\u662f\u5305\u542b\u4e86\u6240\u6709\u533a\u95f4\u7684\u7b54\u6848\u7684\u3002\u6216\u8005\u4f60\u53ef\u4ee5\u7528\u732b\u6811\u7ed3\u6784\u7406\u89e3\u3002\n\n\u8fd9\u6837\u6bcf\u6b21\u5355\u70b9\u66f4\u65b0\u7684\u65f6\u5019\u4f1a\u4fee\u6539 $O(\\log n\\log^2 a)$ \u4e2a\u4fe1\u606f\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u957f\u5ea6\u7b54\u6848\u7684\u6700\u5927\u503c\u67e5\u8be2\u7684\u65f6\u5019\u7ebf\u6bb5\u6811\u4e8c\u5206\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u7528\u61d2\u60f0\u5220\u9664\u7684\u5806\u7ef4\u62a4\u3002\u6240\u4ee5\u8fd9\u91cc\u5e26\u4e00\u4e2a $\\log$\u3002\n\n\u90a3\u4e48\u5355\u6b21\u4fee\u6539\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\log^2 n\\log^2 a)$\u3002\u548c lca \u7684\u505a\u6cd5\u4e00\u4e2a\u590d\u6742\u5ea6\u3002\u6211\u6682\u65f6\u4e0d\u4f1a jmr \u505a\u5230\u7684 3log\u3002\n\n\u663e\u7136\u8fd9\u6837\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\u4e24\u4e2a\u5361\u5e38\uff1a\n\n* \u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u7ed3\u70b9\u7684\u524d\u540e\u7f00\u4fe1\u606f\u5176\u5b9e\u4e0d\u4f1a\u66f4\u65b0\u5f88\u591a\u3002\u8bbe\u539f\u672c\u7684\u7ed3\u70b9\u524d\u3001\u540e\u7f00\u4fe1\u606f\u662f $a+b,c+d$\uff0c\u66f4\u65b0\u540e\u662f $a+e,c+f$\uff0c\u66f4\u65b0\u7684\u662f $(a+e)(c+f)-(a+b)(c+d)=af+ec+ef-bc-bd-ad$\uff0c\u7701\u53bb\u4e86\u89c4\u6a21\u5f88\u5927\u7684\u4e00\u6b21\u63d2\u5165\u548c\u4e00\u6b21\u5220\u9664\u3002\n\n* \u957f\u5ea6\u8f83\u5c0f\u7684\u533a\u95f4\u7ef4\u62a4\u8d77\u6765\u5f88\u6162\u800c\u4e14\u5360\u4e86\u5927\u90e8\u5206\u7a7a\u95f4\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u4e9b\u76f4\u63a5\u5f00 $20$ \u4e2a zkw \u7ebf\u6bb5\u7ef4\u62a4\u957f\u5ea6 $\\le 20$ \u7684\u533a\u95f4\u7b54\u6848\u3002\n\n\u5c31\u597d\u4e86\u3002\n\n970ms \u8fc7\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define Yukinoshita namespace\n#define Yukino std\nusing Yukinoshita Yukino;\nconst int mxn=5e4+5;\nconst int B=20;\nint a[mxn];\nint n;\n#define v first\n#define s second\n#define it set<pair<int,int> >::iterator\nstruct lazy_heap\n{\n\tpriority_queue<int> q1,q2;\n\tvoid insert(int v)\n\t{\n\t\tif(q2.size()&&q2.top()==v) q2.pop();\n\t\telse q1.push(v);\t\n\t} \n\tvoid erase(int v)\n\t{\n\t\tif(q1.top()==v) q1.pop();\n\t\telse q2.push(v);\n\t}\n\tint top()\n\t{\n\t\twhile(q2.size()&&q1.top()==q2.top())\n\t\t\tq1.pop(),q2.pop();\n\t\treturn q1.size()?q1.top():-1; \n\t}\n}q[mxn];\nstruct seg2\n{\n\tint l,r,mx;\n}t2[mxn*4];\n#define ls w<<1\n#define rs ls|1\nint wz[mxn];\nvoid build2(int w,int l,int r)\n{\n\tt2[w].l=l,t2[w].r=r,t2[w].mx=-1;\n\tif(l<r)\n\t{\n\t\tint mid=l+r>>1;\n\t\tbuild2(ls,l,mid);\n\t\tbuild2(rs,mid+1,r);\n\t}\n\telse wz[l]=w;\n}\nvoid insert(int v,int w)\n{\n\tq[w].insert(v);\n\tfor(w=wz[w];w;w>>=1)\n\t\tif(t2[w].mx<v)\n\t\t\tt2[w].mx=v;\n\t\telse return;\n}\nvoid erase(int v,int w)\n{\n\tq[w].erase(v);\n\tif(q[w].top()>=v) return;\n\tt2[wz[w]].mx=q[w].top();\n\tfor(w=wz[w]>>1;w;w>>=1)\n\t\tt2[w].mx=max(t2[ls].mx,t2[rs].mx);\n}\nint ask(int w,int v)\n{\n\tif(t2[w].l==t2[w].r) return t2[w].l;\n\tif(t2[ls].mx>=v) return ask(ls,v);\n\treturn ask(rs,v);\n}\nint D;\nstruct RMQ\n{\n\tint mx[mxn*4];\n\tinline void pushup(int w)\n\t{\n\t\tmx[w]=max(mx[ls],mx[rs]);\n\t}\n\tvoid add(int x,int v)\n\t{\n\t\tfor(x+=D,mx[x]=v,x>>=1;x;x>>=1)\n\t\t\tpushup(x);\n\t}\n}T[B+5];\n#undef ls\n#undef rs\nstruct seg\n{\n\tint l,r,s,v,cnt1,cnt2;\n\tpair<int,int> pre[32],nxt[32];\n}t[mxn*2+5];\n#define ls (w+1)\n#define rs (w+t[w].r-t[w].l+!(t[w].r-t[w].l&1)+1)\nvoid mergeans(pair<int,int> nxt[32],pair<int,int> pre[32],int cnt2,int cnt1,bool fl)\n{\n\tint i,j;  \n\tfor(i=1;i<=cnt2;i++)\n\t\tfor(j=1;j<=cnt1;j++)\n\t\t\tif(nxt[i].s+pre[j].s>B)\n\t\t\t\t(fl?insert:erase)(nxt[i].v|pre[j].v,nxt[i].s+pre[j].s);\n}\nvoid pushup(int w)\n{\n\tint i,L=ls,R=rs;\n\tt[w].v=t[L].v|t[R].v;\n\tt[w].cnt1=t[L].cnt1,t[w].cnt2=t[R].cnt2;\n\tmemcpy(t[w].pre,t[L].pre,t[L].cnt1+1<<3);\n\tfor(i=1;i<=t[R].cnt1;i++)\n\t\tif((t[R].pre[i].v|t[L].v)>t[w].pre[t[w].cnt1].v)\n\t\t\tt[w].pre[++t[w].cnt1].v=t[R].pre[i].v|t[L].v,\n\t\t\tt[w].pre[t[w].cnt1].s=t[R].pre[i].s+t[L].s;\n\tmemcpy(t[w].nxt,t[R].nxt,t[R].cnt2+1<<3);\n\tfor(i=1;i<=t[L].cnt2;i++)\n\t\tif((t[L].nxt[i].v|t[R].v)>t[w].nxt[t[w].cnt2].v)\n\t\t\tt[w].nxt[++t[w].cnt2].v=t[L].nxt[i].v|t[R].v,\n\t\t\tt[w].nxt[t[w].cnt2].s=t[L].nxt[i].s+t[R].s;\n}\nvoid build(int w,int l,int r)\n{\n\tt[w].l=l,t[w].r=r,t[w].s=r-l+1;\n\tif(l<r)\n\t{\n\t\tint mid=l+r>>1;\n\t\tbuild(ls,l,mid);\n\t\tbuild(rs,mid+1,r);\n\t\tpushup(w);\n\t\tmergeans(t[ls].nxt,t[rs].pre,t[ls].cnt2,t[rs].cnt1,1);\n\t}\n\telse\t\n\t\tt[w].v=t[w].pre[1].v=t[w].nxt[1].v=a[l],\n\t\tt[w].cnt1=t[w].cnt2=t[w].pre[1].s=t[w].nxt[1].s=1;\n}\npair<int,int> lt[3][32],rt[3][32];\nint cnt1[3],cnt2[3];\nvoid solve(pair<int,int> t[][32],int cnt[])\n{\n\tint i,j=1;\n\tbool t0[32]={0},t1[32]={0};\n\tcnt[2]=0; \n\tfor(i=1;i<=cnt[0];i++)\n\t{\n\t\tfor(;j<=cnt[1]&&t[1][j]<t[0][i];j++);\n\t\tif(j<=cnt[1]&&t[0][i]==t[1][j])\n\t\t\tt0[i]=t1[j]=1,t[2][++cnt[2]]=t[0][i];\n\t}\n\tj=0;\n\tfor(i=1;i<=cnt[0];i++)\n\t\tif(!t0[i])\n\t\t\tt[0][++j]=t[0][i];\n\tcnt[0]=j,j=0;\n\tfor(i=1;i<=cnt[1];i++)\n\t\tif(!t1[i])\n\t\t\tt[1][++j]=t[1][i];\n\tcnt[1]=j;\n}\nvoid add0(int x)\n{\n\tint i,j,s,l=max(x-B+1,1),r=min(x+B-1,n);\n\tfor(i=l;i<=x;i++)\n\t\tfor(s=0,j=i;j<=r;j++)\n\t\t{\n\t\t\ts|=a[j];\n\t\t\tif(j>=x&&j-i+1<=B)\n\t\t\t\tT[j-i+1].add(i,s); \n\t\t}\n}\nvoid add(int w,int x,int v)\n{\n\tif(t[w].l==t[w].r)\n\t{\n\t\tt[w].v=t[w].pre[1].v=t[w].nxt[1].v=a[x]=v;\n\t\tadd0(x);\n\t\treturn;\n\t}\n\tpair<int,int> tp0[32],tp1[32];\n\tint cnt10,cnt20;\n\tmemcpy(tp0,t[ls].nxt,t[ls].cnt2+1<<3),cnt10=t[ls].cnt2;\n\tmemcpy(tp1,t[rs].pre,t[rs].cnt1+1<<3),cnt20=t[rs].cnt1;\n\tif(t[ls].r>=x) add(ls,x,v);\n\telse add(rs,x,v);\n\tmemcpy(lt[0],tp0,cnt10+1<<3),cnt1[0]=cnt10;\n\tmemcpy(rt[0],tp1,cnt20+1<<3),cnt2[0]=cnt20;\n\tmemcpy(lt[1],t[ls].nxt,t[ls].cnt2+1<<3),cnt1[1]=t[ls].cnt2;\n\tmemcpy(rt[1],t[rs].pre,t[rs].cnt1+1<<3),cnt2[1]=t[rs].cnt1;\n\tsolve(lt,cnt1),solve(rt,cnt2);\n\tmergeans(lt[0],rt[0],cnt1[0],cnt2[0],0);\n\tmergeans(lt[0],rt[2],cnt1[0],cnt2[2],0);\n\tmergeans(lt[2],rt[0],cnt1[2],cnt2[0],0);\n\tmergeans(lt[1],rt[1],cnt1[1],cnt2[1],1);\n\tmergeans(lt[1],rt[2],cnt1[1],cnt2[2],1);\n\tmergeans(lt[2],rt[1],cnt1[2],cnt2[1],1);\n\tpushup(w);\t\n} \nint ask(int x)\n{\n\tfor(int i=1;i<=B;i++)\n\t\tif(T[i].mx[1]>=x)\n\t\t\treturn i;\n\treturn t2[1].mx<x?-1:ask(1,x);\n}\nint main()\n{\n\tn=read();\n\tfor(D=1;D<n;D<<=1);\n\tint m=read(),i,j,opt,x;\n\tbuild2(1,1,n);\n\tfor(i=1;i<=n;i++)\n\t\ta[i]=read();\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=i,x=0;j<=n&&j<=i+B-1;j++)\n\t\t\tT[j-i+1].add(i,x|=a[j]);\n\tbuild(1,1,n);\n\twhile(m--)\n\t{\n\t\topt=read();\n\t\tif(opt==1) x=read(),add(1,x,read());\n\t\telse x=read(),printf(\"%d\\n\",ask(x));\n\t}\n} \n```\n",
        "postTime": 1674787151,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5065 [Ynoi2014] \u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P5065)\n\n>\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c  \n\u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u6216\u6c42\u6700\u77ed\u7684\u533a\u95f4\u957f\u5ea6\u4f7f\u533a\u95f4 $\\operatorname{or}$ \u548c $\\geq k$\u3002  \n$n,m\\leq 5\\times 10^4$\uff0c\u65f6\u95f4\u9650\u5236 $1000\\text{ms}$\u3002\n\n\u7ed9\u51fa\u4e00\u4e2a\u5355\u6b21\u4fee\u6539 $O\\left(\\sqrt{nw}+n^{\\frac{1}{4}}w^{1.75}\\right)$\uff0c\u67e5\u8be2 $O\\left(\\sqrt{nw}+\\sqrt{n}\\dfrac{\\log n}{\\sqrt{w}}\\right)$ \u7684\u5206\u5757\u5957\u5206\u5757\u505a\u6cd5\u3002\n\n$n=5\\times 10^4$ \u65f6 $n^{\\frac{1}{4}}$ \u4e0e $\\log n$ \u5dee\u4e0d\u591a\uff0c$w^{1.75}$ \u6bd4 $w^2$ \u7565\u5c0f\uff0c\u770b\u8d77\u6765\u6bd4 $w^2\\log n$ \u597d\u4e00\u70b9\u3002\n\n\u9996\u5148\u662f $O(\\sqrt nw)$ \u7684\u505a\u6cd5\u3002\n\n\u5bf9\u5e8f\u5217\u5206\u5757\u540e\uff0c\u6240\u6709\u533a\u95f4\u8981\u4e48\u5728\u4e00\u4e2a\u6574\u5757\u5185\uff0c\u8981\u4e48\u8de8\u8fc7\u51e0\u4e2a\u5757\u3002\n\n\u8003\u8651\u5230\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u6216\u7ed3\u675f\u6700\u591a\u80fd $\\operatorname{or}$ \u51fa $w+1$ \u4e2a\u6570\u3002\n\n\u6574\u5757\u5185\u53ef\u4ee5 $O(Bw)$ \u5904\u7406\u51fa\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u7ed3\u675f\u7684 $O(w)$ \u4e2a\u4e0d\u540c\u7684\u6570 \u5404\u81ea\u6240\u9700\u7684 \u6700\u77ed\u533a\u95f4\u957f\u5ea6\u3002\n\n\u8fd9\u53ef\u4ee5\u901a\u8fc7 $\\operatorname{or}$ \u7684\u5355\u8c03\u6027\u5b9e\u73b0\u3002\n\n\u7136\u540e\u5f97\u51fa\u5757\u5185\u4e00\u4e2a\u957f\u5ea6\u80fd $\\operatorname{or}$ \u51fa\u7684\u6700\u5927\u6570\uff0c\u67e5\u8be2\u65f6\u4e8c\u5206\u5373\u53ef\u3002\n\n\u8fd9\u90e8\u5206\u4fee\u6539 $O(Bw)$\uff0c\u67e5\u8be2 $O\\left(\\dfrac{n}{B}\\log B\\right)$\u3002\n\n\u5bf9\u4e8e\u8de8\u8fc7\u5757\u7684\uff0c\u4ece\u53f3\u7aef\u70b9\u7684\u6240\u5728\u7684\u5757\u7684\u5de6\u7aef\u70b9\u5206\u5f00\uff0c\u5c31\u662f\u4e00\u4e9b\u540e\u7f00\u4e0e\u4e00\u4e2a\u5757\u5185\u7684\u524d\u7f00\u3002\n\n\u5904\u7406\u51fa\u6240\u6709\u5757\u7684\u524d\u7f00\u4e0e\u540e\u7f00 $\\operatorname{or}$ \u51fa\u7684 $O(w)$ \u4e2a\u6570\u3002\n\n\u7136\u540e\u4f9d\u6b21\u8df3\u5757\u5f80\u540e\u5f97\u51fa\u6bcf\u4e2a\u5757\u524d\u9762\u7684 \u6240\u6709\u540e\u7f00\u503c\uff0c\u518d\u548c\u672c\u5757\u7684\u524d\u7f00\u5408\u5e76\u3002\n\n\u5408\u5e76\u65f6\u53ea\u9700\u5bf9\u4e00\u4e2a\u524d\u7f00\u627e\u51fa\u4e00\u4e2a\u6700\u77ed\u7684\u540e\u7f00\u4f7f $\\operatorname{or}$ \u548c $\\geq k$\u3002\n\n\u8fd9\u5728\u524d\u7f00\u9012\u589e\u65f6\u6709\u5355\u8c03\u6027\uff0c\u53ea\u9700\u53cc\u6307\u9488\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u67e5\u8be2\u590d\u6742\u5ea6\u4e3a $O\\left(\\dfrac{n}{B}w\\right)$\u3002\n\n\u56e0\u6b64\u53d6 $B=\\sqrt n$ \u5373\u53ef\u505a\u5230\u4fee\u6539 $O\\left(\\sqrt{n}w\\right)$\uff0c\u67e5\u8be2 $O\\left(\\sqrt{n}w+\\sqrt{n}\\log n\\right)$\n\n$\\ $\n\n\u8fd9\u4e2a\u505a\u6cd5\u4e00\u4e2a\u5f88\u4e0d\u723d\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4fee\u6539\u8981 $O(Bw)$ \u7684\u590d\u6742\u5ea6\u91cd\u6784\u3002\n\n\u800c\u91cd\u6784\u7684\u74f6\u9888\u5728\u4e8e\u627e\u51fa\u4e00\u4e2a\u5757\u5185\uff0c\u6bcf\u4e2a\u957f\u5ea6\u80fd $\\operatorname{or}$ \u5f97\u7684\u6700\u5927\u6570\u3002\n\n$\\text{cmd}$ \u7ed9\u51fa\u7684\u65b9\u6cd5\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6574\u5757\uff0c\u5176\u5b9e\u6574\u5757\u5185\u518d\u8fdb\u884c\u4e00\u6b21\u5206\u5757\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\n\u8bbe\u4e00\u4e2a\u6574\u5757\u5185\u6bcf\u4e2a\u5c0f\u5757\u7684\u957f\u5ea6\u4e3a $K$\u3002\n\n\u4e0e\u4e4b\u524d\u4e00\u6837\uff0c\u5927\u5757\u5185\u7684\u6bcf\u4e2a\u533a\u95f4\u8981\u4e48\u5728\u4e00\u4e2a\u5c0f\u5757\u5185\uff0c\u8981\u4e48\u8de8\u8fc7\u51e0\u4e2a\u5c0f\u5757\u3002\n\n\u5bf9\u6bcf\u4e2a\u5c0f\u5757\u7ef4\u62a4\u524d\u540e\u7f00 $\\operatorname{or}$ \u51fa\u7684 $O(w)$ \u4e2a\u6570\uff0c\u4ee5\u53ca\u5c0f\u5757\u5185\u6bcf\u4e2a\u957f\u5ea6\u80fd $\\operatorname{or}$ \u5f97\u7684\u6700\u5927\u503c\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u65f6\u5148 $O(Kw)$ \u4fee\u6539\u5c0f\u5757\u3002\n\n\u7136\u540e\u679a\u4e3e\u6240\u6709\u5c0f\u5757 $O(B)$ \u66f4\u65b0\u533a\u95f4\u90fd\u5728\u5c0f\u5757\u5185\u7684\u957f\u5ea6\u6240\u5f97\u6700\u5927\u503c\u3002\n\n\u518d\u679a\u4e3e\u53f3\u7aef\u70b9\u6240\u5728\u7684\u5c0f\u5757\uff0c\u5c06\u524d\u540e\u7f00\u6240\u6709\u53ef\u80fd\u7684\u6570\u62fc\u8d77\u6765 $O\\left(\\dfrac{B}{K}w^2\\right)$ \u66f4\u65b0\u3002\n\n\u6700\u540e\u5bf9\u6bcf\u4e2a\u957f\u5ea6 $\\operatorname{or}$ \u5f97\u7684\u6700\u5927\u503c \u8fd8\u8981\u505a\u4e00\u4e2a\u524d\u7f00 $\\max$ \u3002\n\n\u4e8e\u662f\u4fee\u6539\u7684\u590d\u6742\u5ea6\u964d\u81f3 $O\\left(Kw+B+\\dfrac{B}{K}w^2\\right)$\u3002\n\n\u53d6 $K=\\sqrt{Bw}$ \u5f97\u51fa\u6700\u4f18\u7684 $O\\left(B+\\sqrt{Bw}\\times w\\right)$\n\n\u4e0e\u8be2\u95ee\u5408\u5728\u4e00\u8d77\u662f $O\\left(B+\\sqrt{Bw}\\times w+\\dfrac{n}{B}(w+\\log n)\\right)$\n\n\u4ee4 $B=\\sqrt{nw}$ \u5f97\u5230\u590d\u6742\u5ea6\u4e3a $O\\left(\\sqrt{nw}+\\sqrt{\\dfrac{n}{w}}\\log n+n^{\\frac{1}{4}}w^{1.75}\\right)$\n\n\u4ee4 $B=\\left(\\dfrac{n}{\\sqrt{w}}\\right)^{\\frac{2}{3}}$ \u5f97\u5230 $O\\left(\\left(\\dfrac{n}{\\sqrt{w}}\\right)^{\\frac{2}{3}}+\\sqrt[3]{nw}\\times (w+\\log n)\\right)$\n\n\u4e0d\u77e5\u9053\u54ea\u4e2a\u66f4\u597d\uff0c\u53cd\u6b63\u633a\u4f18\u79c0\u7684\uff0c\u6700\u6162\u7684\u70b9\u80fd\u8dd1 $450\\text{ms}$ \u5de6\u53f3\u3002\n\n$\\texttt{code:}$ \uff08\u8c03\u5757\u957f\u540e \u6700\u6162\u7684\u70b9\u4e0e\u603b\u65f6\u95f4\u6210\u53cd\u6bd4\u2026\u2026\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e4+10;\nconst int W=30;\nint n,m,nn,sn,sk,kk,k,pos,ans;\nint x,y,ii,jj,s,ps,i,xx,yy;\nint a[N],id[N],iid[N];\nint sor[N],ssor[N],sum_or;\nint res[1000][1000],rres[1000][1000];\nbool bsor,opt;\nstruct node{\n\tint v,l;node()=default;\n\tnode(int _v,int _l):v(_v),l(_l){}\n\tinline node operator |(const node &a){\n\t\treturn node(v|a.v,l+a.l);\n\t}\n\tinline void operator |=(const node a){\n\t\tv|=a.v,l+=a.l;\n\t}\n}p[50],pp[50],d;\nnode l[N][50],r[N][50];\nnode ll[N][50],rr[N][50];\nint lw[N],rw[N],llw[N],rrw[N];\nint l_[N],r_[N],ll_[N],rr_[N];\nint len[N],llen[N];\ninline void cmin(int &a,int b){b<a&&(a=b);}\ninline void cmax(int &a,int b){b>a&&(a=b);}\ninline void reset_(int iid){\n\txx=ll_[iid],yy=rr_[iid];\n\tfor(ii=1;ii<=llen[iid];++ii)rres[iid][ii]=0;\n\tfor(s=-1,ii=xx;ii<=yy;++ii){\n\t\tps=s;d=node(a[ii],1);\n\t\tfor(jj=0;jj<=ps;++jj)pp[jj]=p[jj]|d;\n\t\tp[s=0]=d;\n\t\tfor(jj=0;jj<=ps;++jj)\n\t\t\tif(p[s].v!=pp[jj].v)p[++s]=pp[jj];\n\t\tfor(jj=0;jj<=s;++jj)\n\t\t\tcmax(rres[iid][p[jj].l],p[jj].v);\n\t}\n\trrw[iid]=s;memcpy(rr[iid],p,sizeof(node)*(s+1));\n\tps=a[xx];p[s=0]=node(a[xx],1);\n\tfor(ii=xx+1;ii<=yy;++ii)\n\t\tif((ps|=a[ii])!=p[s].v)p[++s]=node(ps,ii-xx+1);\n\tllw[iid]=s;memcpy(ll[iid],p,sizeof(node)*(s+1));\n\tssor[iid]=ps;\n\tfor(ii=1;ii<=llen[iid];++ii)\n\t\tcmax(rres[iid][ii],rres[iid][ii-1]);\n}\ninline void reset(int id){\n\txx=iid[l_[id]],yy=iid[r_[id]];\n\tfor(i=1;i<=len[id];++i)res[id][i]=0;\n\tfor(s=-1,i=xx;i<=yy;++i){\n\t\tfor(ii=0;ii<=s;++ii){\n\t\t\tfor(jj=0;jj<=llw[i];++jj){\n\t\t\t\tcmax(res[id][p[ii].l+ll[i][jj].l],\n\t\t\t\t\t p[ii].v|ll[i][jj].v);\n\t\t\t}\n\t\t}\n\t\tps=s;d=node(ssor[i],llen[i]);\n\t\tfor(jj=0;jj<=ps;++jj)pp[jj]=p[jj]|d;\n\t\tmemcpy(p,rr[i],sizeof(node)*(rrw[i]+1));\n\t\ts=rrw[i];\n\t\tfor(jj=0;jj<=ps;++jj)\n\t\t\tif(p[s].v!=pp[jj].v)p[++s]=pp[jj];\n\t\tfor(ii=1;ii<=llen[i];++ii)\n\t\t\tcmax(res[id][ii],rres[i][ii]);\n\t}\n\trw[id]=s;memcpy(r[id],p,sizeof(node)*(s+1));\n\tmemcpy(p,ll[xx],sizeof(node)*(llw[xx]+1));\n\ts=llw[xx];d=node(ssor[xx],llen[xx]);\n\tfor(i=xx+1;i<=yy;++i){\n\t\tfor(jj=0;jj<=llw[i];++jj)\n\t\t\tif((ll[i][jj].v|d.v)!=p[s].v)\n\t\t\t\tp[++s]=ll[i][jj]|d;\n\t\td|=node(ssor[i],llen[i]);\n\t}\n\tlw[id]=s;memcpy(l[id],p,sizeof(node)*(s+1));\n\tsor[id]=d.v;\n\tfor(i=1;i<=len[id];++i)cmax(res[id][i],res[id][i-1]);\n}\ninline void inquiry(int k){\n\tans=n+1;\n\tfor(i=1;i<=sn;++i)if(sor[i]>=k){\n\t\tcmin(ans,\n\t\tlower_bound(res[i]+1,res[i]+len[i]+1,k)-res[i]);\n\t}\n\ts=rw[1];memcpy(p,r[1],sizeof(node)*(rw[1]+1));\n\tfor(i=2;i<=sn;++i){\n\t\tfor(ii=0;ii<=s;++ii)\n\t\t\tif((p[ii].v|l[i][lw[i]].v)>=k)break;\n\t\tjj=lw[i]+1;\n\t\tfor(;ii<=s;++ii){\n\t\t\twhile(jj&&(p[ii].v|l[i][jj-1].v)>=k)--jj;\n\t\t\tif((p[ii].v|l[i][jj].v)>=k){\n\t\t\t\tcmin(ans,p[ii].l+l[i][jj].l);\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t\tps=s;d=node(sor[i],len[i]);\n\t\tfor(jj=0;jj<=ps;++jj)pp[jj]=p[jj]|d;\n\t\tmemcpy(p,r[i],sizeof(node)*(rw[i]+1));\n\t\ts=rw[i];\n\t\tfor(jj=0;jj<=ps;++jj)\n\t\t\tif(p[s].v!=pp[jj].v)p[++s]=pp[jj];\n\t}\n}\nchar ch;\ninline void read(int &x){\n\tx=0;ch=getchar();while(ch<48)ch=getchar();\n\twhile(ch>47)x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n}\ninline void read(bool &x){\n\tch=getchar();while(ch<48)ch=getchar();\n\tx=ch^49,ch=getchar();\n}\nvoid write(int x){if(x>9)write(x/10);putchar(48|(x%10));}\nmain(){\n\tread(n),read(m);register int i;\n\tfor(i=1;i<=n;++i)read(a[i]);\n\tkk=100;nn=kk*7;\n\tsn=(n-1)/nn+1;sk=(n-1)/kk+1;\n\tfor(i=1;i<=n;++i)id[i]=(i-1)/nn+1; \n\tfor(i=1;i<=n;++i)iid[i]=(i-1)/kk+1;\n\tfor(i=1;i<=n;++i)r_[id[i]]=i;\n\tfor(i=1;i<=n;++i)rr_[iid[i]]=i;\n\tfor(i=n;i;--i)l_[id[i]]=i;\n\tfor(i=n;i;--i)ll_[iid[i]]=i;\n\tfor(i=1;i<=sn;++i)len[i]=r_[i]-l_[i]+1;\n\tfor(i=1;i<=sk;++i)llen[i]=rr_[i]-ll_[i]+1;\n\tfor(i=1;i<=sk;++i)reset_(i);\n\tfor(i=1;i<=sn;++i)reset(i);\n\tsum_or=0,bsor=1;\n\tfor(i=1;i<=sn;++i)sum_or|=sor[i];\n\twhile(m--){\n\t\tread(opt);\n\t\tif(opt){\n\t\t\tread(k);\n\t\t\tif(!bsor){\n\t\t\t\tsum_or=0,bsor=1;\n\t\t\t\tfor(i=1;i<=sn;++i)sum_or|=sor[i];\n\t\t\t}\n\t\t\tif(k>sum_or)puts(\"-1\");\n\t\t\telse {\n\t\t\t\tinquiry(k);\n\t\t\t\twrite(ans),putchar('\\n');\n\t\t\t} \n\t\t}\n\t\telse {\n\t\t\tread(pos);read(x);a[pos]=x;\n\t\t\treset_(iid[pos]);reset(id[pos]);\n\t\t\tbsor=0;\n\t\t}\n\t}\n} \n```",
        "postTime": 1661679123,
        "uid": 334380,
        "name": "Y_B_X",
        "ccfLevel": 7,
        "title": "\u9898\u89e3[P5065 \u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec]"
    },
    {
        "content": "\u51fa\u73b0\u4e86\u4e00\u7bc7\u8dd1\u5f97\u7092\u9e21\u6162\u7684\u9898\u89e3\uff01\n\n\n# noteskey\n\n\u65e0 fuck \u8bf4\uff0c\u597d\u50cf\u5c31\u662f\u6574\u4e2a\u6570\u5217\u5206\u5757\u7136\u540e\u5408\u5e76\u533a\u95f4...\u4ec0\u4e48\u7684\u5427\n\n\n\u5bf9\u4e8e\u6bcf\u5757\u5185\u90e8\u5c31\u662f\u7b97\u4e00\u4e0b\u524d\u7f00\u4fe1\u606f\u3001\u540e\u7f00\u4fe1\u606f\uff08\u5c31\u662f\u4ee5 \u7b2c\u4e00\u4e2a\u70b9/\u6700\u540e\u4e00\u4e2a\u70b9 \u4e3a\u4e00\u4e2a\u8fb9\u754c\uff0c\u4e0d\u8d85\u8fc7 log \u4e2a\u4e0d\u540c\u7684 or \u503c\u6240\u8981\u5230\u8fbe\u7684\u6700 \u5de6/\u53f3 \u70b9\uff09\u548c\u4e2d\u503c\u4fe1\u606f\uff08\u5c31\u662f\u67d0\u79cd\u533a\u95f4\u957f\u5ea6\u5185\u80fd or \u51fa\u6765\u7684\u6700\u5927\u503c\uff09\n\n\u7136\u540e\u8be2\u95ee\u7684\u65f6\u5019\u4ece\u7b2c\u4e00\u4e2a\u5757\u5f00\u59cb\uff0c\u5411\u540e\u5148\u67e5\u8be2\u5f53\u524d\u5757\u4e0e\u4e0b\u4e00\u4e2a\u5757\u5408\u5e76\u7684\u7b54\u6848\uff0c\u7136\u540e\u66f4\u65b0\u5f53\u524d\u5757\n\n\n# watch out\n\nnothing \uff0c\u6253\u4ee3\u7801\u7684\u65f6\u5019\u6ce8\u610f\u7ec6\u8282\u8c8c\u4f3c\u662f\u6240\u6709 coding \u7684 gift \uff1f \u3010\u96fe\n\n\n\n# code\n\n```\n//by Judge\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"unroll-loops\")\n#include<bits/stdc++.h>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define P pair<int,int>\n#define ll long long\n#define se second\n#define fi first\nusing namespace std;\nconst int bl=403;\nconst int M=6e4+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\nbool operator <(P& a,P& b){return a.fi^b.fi?a.fi<b.fi:a.se>b.se;}\ninline bool cmax(int& a,int b){return a<b?a=b,1:0;}\ninline bool cmin(int& a,int b){return a>b?a=b,1:0;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr='\\n'){\n    if(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n} int n,m,K,ans,pv,a[M],pos[M];\nP q[M],vec[bl+3],c[bl+3];\nstruct BLK{ int mx[bl+3],val[bl+3],L,R,cntp,cnts,all; P pre[33],suf[33]; //\u6700\u591a log \u4e2a\u4e0d\u540c\u7684 or \u503c \n\t// mx[i]  \u957f\u4e3a i \u7684\u533a\u95f4 or \u548c\u7684 max \u503c\uff0cval \u8868\u793a\u5757\u5185\u6bcf\u4e2a\u70b9\u7684\u503c  \n\tinline void re(){ memset(mx,0,sizeof mx); int p; // \u5c31\u7b97 mx \u6570\u7ec4 \n\t\tp=cntp=0; fp(i,1,bl) if((p|=val[i])!=pre[cntp].fi) pre[++cntp]=P(p,i+L-1);\n\t\tp=cnts=0; fd(i,bl,1) if((p|=val[i])!=suf[cnts].fi) suf[++cnts]=P(p,i+L-1);\n\t\tint head=1,tail=0;\n\t\tfd(i,bl,1){ int lst=tail,v=val[i];\n\t\t\tfor(Rg int j=v;j;j^=j&-j) q[++tail]=P(__builtin_ctz(j),i);\n\t\t\tfp(j,head,lst) if(!(v>>q[j].fi&1)) q[++tail]=q[j]; head=lst+1;\n\t\t\tRg int now=0,pos; fp(j,head,tail)\n\t\t\t\tpos=q[j].se,cmax(mx[pos-i+1],now|=val[pos]);\n\t\t}\n\t\tfp(i,2,bl) cmax(mx[i],mx[i-1]); all=pre[cntp].fi;\n\t}\n\tinline void build(int l,int r){ L=l,R=r;\n\t\tfp(i,l,r) val[i-l+1]=a[i]; re();\n\t}\n\tinline void update(int pos,int v){val[pos-L+1]=v,re();} //\u91cd\u6784\u5757 \n\tinline int len(int v){return lower_bound(mx+1,mx+1+bl,v)-mx;}\n\t//\u5f97\u5230\u6784\u6210\u957f\u5ea6\u4e3a v \u7684 or \u548c\u533a\u95f4\u6700\u77ed\u957f\u5ea6 \n\tinline void merge(){ int l=1,r=1,it=0; //\u5c06\u5f53\u524d\u7684\u533a\u95f4\u548c vec \u540e\u7f00\u5408\u5e76 \n\t\twhile(l<=pv&&r<=cnts) c[++it]=vec[l]<suf[r]?vec[l++]:suf[r++];\n\t\twhile(l<=pv) c[++it]=vec[l++]; while(r<=cnts) c[++it]=suf[r++];\n\t\tvec[1]=c[1]; fp(i,2,it) vec[i]=c[i],\n\t\t\tvec[i].fi==vec[i-1].fi&&(vec[i].se=vec[i-1].se);\n\t\tpv=unique(vec+1,vec+1+it)-1-vec;\n\t}\n\tinline void check(int v){ int len=2e9; //\u7528\u540e\u7f00 vec \u548c\u5f53\u524d\u5757\u7684\u524d\u7f00\u66f4\u65b0\u7b54\u6848 \n\t\tfp(i,1,cntp) while(pv&&(vec[pv].fi|pre[i].fi)>=v)\n\t\t\tcmin(len,pre[i].se-vec[pv--].se+1); cmin(ans,len);\n\t}\n}b[131];\nint main(){ n=read(),m=read(); fp(i,1,n) a[i]=read();\n\tfp(i,1,n) pos[i]=(i-1)/bl+1; K=pos[n],n=K*bl;\n\tfp(i,1,K) b[i].build((i-1)*bl+1,i*bl);\n\twhile(m--){\n\t\tif(read()&1){ int x=read(),y=read();\n\t\t\tb[pos[x]].update(x,y),a[x]=y;\n\t\t} else{ ans=2e9; int x=read();\n\t\t\tfp(i,1,K) if(b[i].all>=x)\n\t\t\t\tcmin(ans,b[i].len(x));\n\t\t\tpv=0,b[1].merge();\n\t\t\tfp(i,2,K){\n\t\t\t\tb[i].check(x);\n\t\t\t\tfp(j,1,pv) vec[j].first|=b[i].all;\n\t\t\t\tb[i].merge();\n\t\t\t} print(ans<2e9?ans:-1);\n\t\t}\n\t} return Ot(),0;\n}\n```\n",
        "postTime": 1555389258,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5065 \u3010[Ynoi2014]\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4eba\u4eec\u3011"
    }
]