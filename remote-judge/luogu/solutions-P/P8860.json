[
    {
        "content": "\u5148\u8bf4\u4e00\u70b9\u9898\u5916\u8bdd. \u539f\u672c\u4ee5\u4e3a\u5f00\u653e\u9898\u89e3\u4e4b\u540e\u5c31\u4f1a\u6709\u4eba\u6765\u63d0\u4ea4\u7b80\u5355\u9898\u89e3, \u6ca1\u60f3\u5230\u4e00\u4e2a\u661f\u671f\u8fc7\u53bb\u4e86\u8fd8\u662f\u5404\u79cd\u4e3b\u5e2d\u6811\u4e91\u4e91. \u660e\u660e\u8fd9\u9898\u6ca1\u90a3\u4e48\u9ebb\u70e6. \u6216\u8005\u8bf4\u6709\u7b80\u5355\u7684\u505a\u6cd5, \u867d\u7136\u6b63\u786e\u6027\u8fd8\u662f\u9700\u8981\u4e00\u70b9\u601d\u8003.\n\n## \u9898\u610f\n\n\u6709\u4e00\u5f20 $n$ \u70b9 $m$ \u8fb9\u6709\u5411\u56fe, $q$ \u6b21\u4fee\u6539. \u6bcf\u6b21\u4fee\u6539\u662f\u7ed9\u51fa\u539f\u56fe\u4e2d\u4e00\u6761\u8fb9, \u5982\u679c\u628a\u5b83\u5220\u6389\u4e4b\u540e\u4ecd\u7136\u5b58\u5728 $1$ \u5230 $n$ \u7684\u9053\u8def, \u5219\u628a\u5b83\u5220\u6389, \u5426\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a. \u5982\u679c\u8fd9\u6761\u8fb9\u5df2\u7ecf\u88ab\u5220\u6389\u4e86, \u90a3\u4e48\u4e5f\u4ec0\u4e48\u90fd\u4e0d\u505a.\n\n\u4f60\u9700\u8981\u5bf9\u6bcf\u6b21\u4fee\u6539\u8f93\u51fa\u662f\u5426\u5220\u6389\u4e86\u8fd9\u6761\u8fb9. $n, m, q \\leqslant 2 \\times 10^5$.\n\n## \u5206\u6790\u4e0e\u89e3\u7b54\n\n\u6211\u4eec\u662f\u4e00\u5b9a\u8981\u79bb\u7ebf\u505a\u7684 (\u4e0d\u7136\u5c31\u771f\u7684\u662f\u52a8\u6001\u56fe\u8fde\u901a\u6027\u4e86, \u7ea6\u7b49\u4e8e\u4e0d\u80fd\u505a).\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0, \u5982\u679c\u4e00\u6761\u8fb9\u88ab\u591a\u6b21\u8bd5\u56fe\u5220\u9664, \u90a3\u4e48\u540e\u9762\u90a3\u6b21\u80af\u5b9a\u662f\u6ca1\u6709\u7528\u7684.\n\n\u56e0\u4e3a\u5982\u679c\u7b2c\u4e00\u6b21\u5220\u9664\u5b83\u5c31\u6210\u529f\u5220\u9664, \u90a3\u4e48\u7b2c\u4e8c\u6b21\u5220\u9664\u7684\u65f6\u5019\u4f1a\u4ec0\u4e48\u90fd\u4e0d\u505a.\n\u5982\u679c\u7b2c\u4e00\u6b21\u5220\u9664\u5b83\u53d1\u73b0\u6ca1\u6cd5\u5220\u9664, \u90a3\u8bf4\u660e\u5b83\u662f\u4ece $1$ \u5230 $n$ \u7684\u5fc5\u7ecf\u4e4b\u8def.\n\u800c\u6574\u4e2a\u4fee\u6539\u8fc7\u7a0b\u4e2d\u8fb9\u53ea\u4f1a\u8d8a\u6765\u8d8a\u5c11, \u6240\u4ee5\u7b2c\u4e8c\u6b21\u5220\u9664\u7684\u65f6\u5019\u5b83\u4e00\u5b9a\u4e5f\u662f\u5fc5\u7ecf\u4e4b\u8def.\n\u56e0\u6b64\u7b2c\u4e8c\u6b21\u4e5f\u4e0d\u4f1a\u5220\u9664\u5b83.\n\n\u7efc\u4e0a\u6240\u8ff0, \u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6bcf\u6761\u8fb9\u53ea\u4f1a\u88ab\u5220\u9664\u4e00\u6b21. \u8bbe\u7b2c $i$ \u6761\u8fb9\u88ab\u5220\u9664\u7684\u65f6\u95f4\u662f $d_i$. \u5982\u679c\u6ca1\u88ab\u5220\u9664\u8fc7, \u5c31\u8bbe $d_i = \\infty$ \u6216\u8005\u8bf4 $d_i = q + 1$.\n\n\u6211\u4eec\u6765\u8003\u8651\u6240\u6709\u4fee\u6539\u90fd\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e, \u8fd8\u5269\u4e0b\u7684\u4ece $1$ \u5230 $n$ \u7684\u8def\u5f84\u662f\u54ea\u4e00\u6761.\n\u5982\u679c\u6211\u4eec\u80fd\u6c42\u51fa\u8fd9\u6761\u8def\u5f84, \u90a3\u4e48\u5728\u8def\u5f84\u4e0a\u7684\u8fb9\u90fd\u4e0d\u4f1a\u88ab\u5220\u9664, \u4e0d\u5728\u8def\u5f84\u4e0a\u7684\u8fb9\u90fd\u4f1a\u88ab\u5220\u9664 (\u56e0\u4e3a\u5220\u4e86\u8fd8\u662f\u6709\u8fd9\u6761\u8def\u5f84).\n\n\u8fd9\u6761\u8def\u5f84\u5e94\u8be5\u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\u5462?\n\n\u9996\u5148, \u6bd4\u8f83\u5bb9\u6613\u770b\u51fa\u6765\u7684\u662f, \u8fd9\u6761\u8def\u5f84\u4e0a $d_i$ \u6700\u5c0f\u7684\u8fb9\u8981\u5c3d\u91cf\u5927.\n\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u628a\u6240\u6709\u7684\u4ece $1$ \u5230 $n$ \u7684\u8def\u5f84\u90fd\u5217\u51fa\u6765, \u90a3\u4e48\u6700\u5148\u8d70\u4e0d\u901a\u7684\u662f\u6700\u5c0f $d_i = 1$ \u7684\u8def\u5f84, \u7136\u540e\u662f\u6700\u5c0f $d_i = 2$ \u7684\u8def\u5f84, \u4f9d\u6b64\u7c7b\u63a8,\n\u6700\u540e\u53ea\u5269\u4e0b\u6700\u5c0f $d_i$ \u6700\u5927\u7684\u8fd9\u4e9b\u8def\u5f84.\n\n\u5176\u6b21, \u5728\u6240\u6709\u8fd9\u6837\u7684\u8def\u5f84\u4e2d, $d_i$ \u6b21\u5c0f\u7684\u8fb9\u4e5f\u8981\u5c3d\u91cf\u5927. \u9053\u7406\u548c\u4e4b\u524d\u76f8\u540c.\n\n\u4f9d\u6b64\u7c7b\u63a8, \u6211\u4eec\u53ef\u4ee5\u628a\u6bd4\u8f83\u7684\u89c4\u5219\u603b\u7ed3\u4e3a: \u628a\u6bcf\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u7684 $d_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5217, \u6211\u4eec\u9700\u8981\u627e\u5230\u5f97\u5230\u7684\u6392\u5217\u5b57\u5178\u5e8f\u6700\u5927\u7684\u8def\u5f84.\n\n\u6211\u4eec\u8bbe $P_i$ \u662f\u4ece $1$ \u5230 $i$ \u7684\u6700\u4f18\u8def\u5f84,\n\u5b9a\u4e49\u4e24\u6761\u8def\u5f84\u4e4b\u95f4\u7684\u5927\u5c0f\u5c31\u662f\u4e0a\u9762\u7684\u6bd4\u8f83\u65b9\u6cd5,\n\u4e5f\u5c31\u662f\u8bf4\u628a\u7ecf\u8fc7\u7684 $d_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u6bd4\u8f83\u5b57\u5178\u5e8f.\n\n\u5982\u679c\u6211\u4eec\u622a\u6b62\u5230\u8fd9\u4e00\u6b65, \u90a3\u4e48\u53ef\u4ee5\u628a\u6bcf\u6761\u8def\u5f84\u7684\u8fb9\u6743, \u6216\u8005\u8bf4\u201c\u6392\u5217\u201d, \u7528\u4e3b\u5e2d\u6811\u5b58\u50a8\u6765\u6bd4\u8f83, \u8be6\u89c1\u5176\u4ed6\u9898\u89e3. \u4e0d\u8fc7\u4e8b\u5b9e\u4e0a\u6211\u4eec\u6709\u66f4\u5bb9\u6613\u7684\u65b9\u6cd5.\n\n_\u5982\u679c\u4f60\u4e0d\u60f3\u770b\u8bc1\u660e\u6216\u8005\u60f3\u81ea\u5df1\u601d\u8003\u8bc1\u660e, \u8bf7\u8df3\u5230\u4e0b\u9762\u52a0\u7c97\u7684**\u7efc\u4e0a\u6240\u8ff0**\u7684\u4f4d\u7f6e_.\n\n\u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf, \u6211\u4eec\u60f3\u8c61, \u8fd9\u4e2a\u95ee\u9898\u76f8\u5f53\u4e8e\u628a\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u5b9a\u4e3a $10^{q-d_i}$, \u7136\u540e\u9009\u53d6\u6700\u77ed\u8def. \u5bf9\u90a3\u4e9b\u6bcf\u5220\u9664\u7684\u8fb9, \u6211\u4eec\u8bbe\u8fb9\u6743\u662f $0$. \u6bd4\u5982\u8bf4 $q = 4$,\n\n> \u5982\u679c\u6211\u4eec\u7ecf\u8fc7\u4e86 $d_i = 2, 3$ \u7684\u8fb9, \u8def\u5f84\u957f\u5c31\u662f $110$.\n>\n> \u5982\u679c\u6211\u4eec\u7ecf\u8fc7\u4e86 $d_i = 2, 4$ \u7684\u8fb9, \u8def\u5f84\u957f\u5c31\u662f $101$, \u6bd4\u524d\u9762\u90a3\u4e2a\u77ed.\n\n\u6211\u4eec\u4f7f\u7528 Dijkstra \u7b97\u6cd5, \u8bbe $1$ \u5230 $i$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e3a $dis_i$. \u4e0d\u8fc7\u6211\u4eec\u4e0d\u53ef\u80fd\u771f\u7684\u7528\u9ad8\u7cbe\u628a\u8fd9\u4e2a\u4e1c\u897f\u7b97\u51fa\u6765, \u53ea\u662f\u65b9\u4fbf\u6211\u4eec\u5206\u6790.\n\n\u5047\u8bbe Dijkstra \u8fdb\u884c\u5230\u67d0\u4e2a\u65f6\u523b.\n\u6211\u4eec\u8981\u8003\u8651\u90a3\u4e9b\u8d77\u70b9\u5df2\u7ecf\u88ab\u6269\u5c55\u51fa\u6765, \u7ec8\u70b9\u8fd8\u6ca1\u6709\u88ab\u6269\u5c55\u51fa\u6765\u7684\u8fb9,\n\u9009\u53d6\u5176\u4e2d $dis_{\\text{\u8d77\u70b9}} + 10^{q-d}$ \u6700\u5c0f\u7684\u4e00\u4e2a, \u5e76\u4ee5\u6b64\u6269\u5c55\u5176\u7ec8\u70b9.\n\n\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0, \u6211\u4eec\u9700\u8981\u6bd4\u8f83\u4e24\u6761\u8fb9\u7684 $dis_{s_1} + 10^{q-d_1}$ \u548c $dis_{s_2} + 10^{q-d_2}$ \u7684\u5927\u5c0f.\n\n- \u5982\u679c $s_1 = s_2$, \u663e\u7136\u6211\u4eec\u53ea\u9700\u8981\u6bd4\u8f83 $d_1$ \u548c $d_2$.\n- \u5426\u5219, \u6211\u4eec\u5047\u8bbe $dis_{s_1} < dis_{s_2}$ (\u53cd\u8fc7\u6765\u4e5f\u4e00\u6837, \u6211\u5c31\u4e0d\u5199\u4e24\u904d\u4e86).\n- \u7531\u4e8e Dijkstra \u662f\u6309 $dis$ \u4ece\u5c0f\u5230\u5927\u6269\u5c55\u70b9,\n  \u800c $s_2$ \u5df2\u7ecf\u6269\u5c55\u51fa\u6765\u4e86, $dis_{s_1} + 10^{q-d_1}$ \u90a3\u4e2a\u70b9\u8fd8\u6ca1\u6269\u5c55\u51fa\u6765,\n  \u6211\u4eec\u4e00\u5b9a\u6709 $dis_{s_1} + 10^{q-d_1} > dis_{s_2}$.\n- \u7531\u4e8e\u6bcf\u6761\u8fb9\u7684 $d$ \u90fd\u662f\u552f\u4e00\u7684, $dis_{s_1}$ \u548c $dis_{s_2}$ \u4e2d\u90fd\u80af\u5b9a\u6ca1\u6709 $10^{q-d_1}$ \u8fd9\u4e00\u4f4d (\u56e0\u4e3a\u6709\u8fd9\u4e00\u4f4d\u7684\u8def\u5f84\u90fd\u7ecf\u8fc7\u4e86 $d_1$ \u5bf9\u5e94\u7684\u8fb9, \u4f46\u662f $d_1$ \u5bf9\u5e94\u7684\u8fd9\u6761\u8fb9\u7684\u7ec8\u70b9\u6211\u4eec\u8fd8\u6ca1\u6269\u5c55\u51fa\u6765\u5462).\n\n\u7efc\u4e0a, $dis_{s_1}$ \u4e0e $dis_{s_2}$ \u4e00\u5b9a\u957f\u8fd9\u6837:\n\n$$\\begin{aligned}\ndis_{s_1} &= {\\color{red}\\text{xxx}}{\\color{blue}0}{\\color{green}\\text{aaa}}\\\\\ndis_{s_2} &= {\\color{red}\\text{xxx}}{\\color{blue}0}{\\color{green}\\text{bbb}}\\\\\ndis_{s_1} + 10^{q-d_1} &= {\\color{red}\\text{xxx}}{\\color{blue}1}{\\color{green}\\text{aaa}}\\\\\n\\end{aligned}$$\n\n\u5176\u4e2d\u4e09\u4e2a\u7ea2\u8272\u7684 xxx \u90fd\u662f\u76f8\u540c\u7684\u6570\u5b57, \u800c aaa \u548c bbb \u4f4d\u6570\u76f8\u540c, aaa \u5c0f\u4e8e bbb;\n\u84dd\u8272\u7684 0/1 \u5c31\u662f $10^{q-d_1}$ \u6240\u5728\u7684\u4f4d.\n\n\u56e0\u6b64\u4e0d\u96be\u770b\u51fa, \u5982\u679c\u6211\u4eec\u628a $dis_{s_2}$ \u4e5f\u52a0\u4e0a\u67d0\u4e2a $10^{q-d_2}$,\n\u90a3\u4e48\u52a0\u4e0a\u7684\u8fd9\u4e2a `1` \u5982\u679c\u843d\u5728\u7eff\u8272\u4f4d\u7f6e, \u4e5f\u5c31\u662f $d_1 > d_2$ (\u6ce8\u610f\u6211\u4eec\u7684\u8fb9\u6743\u9009\u53d6\u5bfc\u81f4\u8fd9\u4e2a\u52a0\u6cd5\u4e0d\u53ef\u80fd\u8fdb\u4f4d),\n\u52a0\u5b8c\u4e4b\u540e\u4e5f\u6bd4 $dis_{s_1} + 10^{q-d_1}$ \u66f4\u5c0f;\n\u5982\u679c\u843d\u5728\u7ea2\u8272\u6216\u8005\u84dd\u8272\u4f4d\u7f6e, \u4e5f\u5c31\u662f $d_1 \\leq d_2$, \u52a0\u5b8c\u4e00\u5b9a\u6bd4 $dis_{s_1} + 10^{q-d_1}$ \u66f4\u5927.\n\n**\u7efc\u4e0a\u6240\u8ff0**, \u6211\u4eec\u5728 Dijkstra \u7684\u65f6\u5019\u53ea\u9700\u8981\u6bd4\u8f83\u6700\u540e\u8d70\u51fa\u7684\u8fd9\u4e00\u6b65\u7684 $d_i$,\n\u5728 $d_i$ \u76f8\u540c\u65f6\u6bd4\u8f83\u4e0a\u4e00\u6b65\u7684 $dis$ \u5373\u53ef.\n\n\u4e8b\u5b9e\u4e0a, $d_i$ \u76f8\u540c\u7684\u60c5\u51b5\u53ea\u4f1a\u5728 $d_i = \\infty$ \u7684\u65f6\u5019\u53d1\u751f.\n\u4e0d\u8fc7\u7531\u4e8e\u6ca1\u88ab\u5220\u7684\u8fb9\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u5904\u7f6e, \u53ef\u4ee5\u5047\u60f3\u8fd9\u4e9b\u8fb9\u5728\u7b2c $q+1, \\dots, q+m$ \u6b21\u4e5f\u4f9d\u6b21\u88ab\u5220\u9664\u4e86, \u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u5176\u5b9e\u53ef\u4ee5\u968f\u4fbf\u8ba4\u4e3a\u8c01\u66f4\u5927\u8c01\u66f4\u5c0f, \u90fd\u4e0d\u9700\u8981\u6bd4\u8f83\u4e0a\u4e00\u6b65\u7684 $dis$.\n\n(\u771f\u7684\u8981\u6bd4\u8f83\u4e5f\u4e0d\u96be, \u56e0\u4e3a\u6211\u4eec\u4e0d\u9700\u8981\u5b9e\u9645\u6c42\u51fa $dis$, \u53ea\u9700\u8981\u6bd4\u8f83\u4e24\u4e2a\u70b9\u5728 dijkstra \u8fc7\u7a0b\u4e2d\u8c01\u5148\u88ab\u6269\u5c55\u51fa\u6765, \u8c01\u7684 $dis$ \u5c31\u66f4\u5c0f.)\n\n\u6211\u4eec\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u7684\u524d\u9a71, \u6700\u540e\u5c31\u53ef\u4ee5\u627e\u51fa $1$ \u5230 $n$ \u5177\u4f53\u7684\u6700\u4f18\u8def\u5f84\u4e86.\n\n## \u6700\u521d\u7684\u60f3\u6cd5\n\n\u4e8b\u5b9e\u4e0a, \u8fd9\u4e2a\u89e3\u6cd5\u662f\u6211\u5728\u624b\u73a9\u4e86\u81ea\u5df1\u968f\u4fbf\u5199\u7684\u51e0\u4e2a\u6570\u636e\u4e4b\u540e\u60f3\u5230\u7684, \u5e76\u4e14\u6700\u5f00\u59cb\u4e5f\u4e0d\u4f1a\u6709\u8fd9\u4e9b\u590d\u6742\u5ea6\u8bc1\u660e, \u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8d2a\u5fc3\u60f3\u6cd5.\n\n\u5982\u679c\u6211\u4eec\u6709\u4e86\u8fd9\u4e2a\u60f3\u6cd5, \u8bd5\u56fe\u8bc1\u660e\u5b83\u4e5f\u4e0d\u662f\u56f0\u96be\u7684, \u8bfb\u8005\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bd5\u7740\u8bc1\u4e00\u4e0b.\n\u6838\u5fc3\u601d\u8def\u5c31\u662f\u5047\u8bbe\u6709\u4e00\u6761\u9053\u8def\u6bd4\u8fd9\u6837\u6c42\u51fa\u7684\u66f4\u4f18, \u7136\u540e\u60f3\u4e00\u60f3 Dijkstra \u4e2d\u54ea\u4e00\u6b65\u8d70\u4e0d\u901a. \u5982\u679c\u6ca1\u6709\u60f3\u6cd5, \u4e5f\u53ef\u4ee5\u81ea\u5df1\u753b\u70b9\u5c0f\u6570\u636e\u624b\u73a9\u4e00\u4e0b.\n\n## \u4ee3\u7801\n```cpp\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <functional>\n#include <utility>\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n\ntypedef long long LL;\nconst int N = 200050;\nint pre[N], nxt[N], fr[N], to[N], a[N], cnt;\nbool rm[N];\n\nint read() {\n  int ans = 0, c;\n  while (!isdigit(c = getchar()));\n  do ans = ans * 10 + c - '0';\n  while (isdigit(c = getchar()));\n  return ans;\n}\n\ntypedef std::pair<int, int> E;\n#define mp std::make_pair\n\nstd::priority_queue<E> Q;\nint fa[N];\n\nint main() {\n  int n = read(), m = read(), q = read();\n  for (int i = 1; i <= m; ++i) {\n    int x = fr[i] = read();\n    to[i] = read();\n    nxt[i] = pre[x];\n    pre[x] = i;\n    a[i] = q + 1;\n  }\n  for (int i = 0; i < q; ++i) {\n    int x = read();\n    if (a[x] > i) rm[a[x] = i] = true;\n    else rm[i] = false;\n  }\n  to[m + 1] = 1;\n  Q.push(mp(0, m + 1));\n  while (!Q.empty()) {\n    E x = Q.top(); Q.pop();\n    int u = x.second, t = to[u];\n    if (fa[t]) continue;\n    fa[t] = u;\n    for (int i = pre[t]; i; i = nxt[i])\n      Q.push(mp(a[i], i));\n  }\n  for (int i = n; i != 1; i = fr[fa[i]]) {\n    // printf(\"%d %d %d\\n\", i, fa[i], a[fa[i]]);\n    rm[a[fa[i]]] = false;\n  }\n  for (int i = 0; i < q; ++i)\n    printf(\"%d\\n\", rm[i] ? 1 : 0);\n}\n```\n\n## \u4e00\u4e9b\u5410\u69fd\n\n\u6211\u4e0d\u662f\u5f88\u61c2\u51fa\u9898\u4eba\u4e3a\u4ec0\u4e48\u628a\u8fd9\u9898\u653e\u5230\u6708\u8d5b\u7b2c\u4e09\u9898, \u6211\u89c9\u5f97\u5f97\u51fa\u8fd9\u4e2a\u8d2a\u5fc3\u5e76\u8bc1\u660e\u5b83\u5e76\u4e0d\u662f\u56f0\u96be\u7684. \u66f4\u4e0d\u61c2\u4e3a\u4ec0\u4e48\u51fa\u9898\u4eba\u6ca1\u6709\u5728\u9898\u89e3\u4e0a\u7ed9\u51fa\u66f4\u7b80\u5355\u7684\u505a\u6cd5. \u5927\u7ea6\u662f\u5176\u771f\u7684\u6ca1\u60f3\u5230\u5427.\n\n\u66f4\u5947\u602a\u7684\u662f\u5c45\u7136\u6bd4\u8d5b\u65f6\u5c11\u6709\u4eba AC. \u662f\u4e0d\u662f\u653e\u5728 C \u9898\u5c31\u628a\u5927\u5bb6\u5413\u8dd1\u4e86, \u60f3\u5230\u8d2a\u5fc3\u4e5f\u89c9\u5f97\u662f\u5047\u7684\u5462?",
        "postTime": 1669461722,
        "uid": 7868,
        "name": "_rqy",
        "ccfLevel": 10,
        "title": "\u6708\u8d5b\u9898 P8860 \u9898\u89e3"
    },
    {
        "content": "# Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6bcf\u6b21\u64cd\u4f5c\u6307\u5b9a\u4e00\u6761\u8fb9\uff0c\u5982\u679c\u5220\u53bb\u540e $1$ \u4ecd\u80fd\u5230\u8fbe $n$ \u5219\u6c38\u8fdc\u5220\u53bb\u8fd9\u6761\u8fb9\u3002\u8f93\u51fa\u6bcf\u6b21\u662f\u5426\u5220\u53bb\u4e86\u5bf9\u5e94\u7684\u8fb9\u3002\n\n$n,m,q \\le 2 \\times 10^5$\uff0c\u65f6\u9650 2s\u3002\n\n# Solution\n\n\u300a\u771f\u00b7\u6709\u5411\u56fe\u52a8\u6001\u8fde\u901a\u6027\u300b\uff0c\u8d5b\u65f6\u4ece Tarjan DFS \u6811\u7684\u65b9\u5411\u53bb\u8003\u8651\u4e86\uff0c\u548c\u6b63\u89e3\u5b8c\u5168\u78b0\u4e0d\u7740\u5934\u3002\u5b98\u65b9\u9898\u89e3\u7ed9\u51fa\u7684\u662f\u4e00\u79cd\u4e2a\u4eba\u8ba4\u4e3a\u5341\u5206\u7cbe\u5999\u7684\u57fa\u4e8e Dijkstra \u6bd4\u8f83\u7b54\u6848\u4f18\u52a3\u7684\u505a\u6cd5\u3002\u8fd9\u540c\u65f6\u5229\u7528\u4e86\u95ee\u9898\u5177\u6709\u201c\u5355\u6e90\u6027\u201d\u548c\u201c\u6c38\u4e45\u6027\uff08\u7531\u6b64\u5f15\u51fa\u7c7b\u4f3c\u5b57\u5178\u5e8f\u7684\u6bd4\u8f83\u4f18\u52a3\u65b9\u6cd5\uff09\u201d\u7684\u6027\u8d28\u3002\n\n------------\n\n\u5982\u679c\u4e00\u6761\u8fb9\u88ab\u5220\u53bb\u591a\u6b21\uff0c\u53ea\u9700\u4fdd\u7559\u7b2c\u4e00\u6b21\u64cd\u4f5c\u5373\u53ef\uff0c\u663e\u7136\u5982\u679c\u5b83\u88ab\u5220\u53bb\u7684\u8bdd\uff0c\u540e\u9762\u7684\u8bdd\u81ea\u52a8\u8fd4\u56de $0$ \u5373\u53ef\uff1b\u6ca1\u88ab\u5220\u53bb\u7684\u8bdd\uff0c\u540e\u9762\u4e5f\u4e0d\u53ef\u80fd\u5220\u53bb\u3002\n\n\u6211\u4eec\u8bb0 $t_i$ \u8868\u793a\u7b2c $i$ \u6761\u8fb9\u5728 $t_i$ \u65f6\u88ab\u64cd\u4f5c\uff0c\u6ca1\u6709\u88ab\u64cd\u4f5c\u7684\u8fb9\u6211\u4eec\u5230\u6700\u540e\u7edf\u4e00\u628a\u5b83\u4eec\u7684 $t$ \u8bb0\u4e3a\u4e00\u4e2a $>q$ \u7684\u6570\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u6700\u7ec8\u5c40\u9762\u4e2d\uff0c\u56fe\u4e00\u5b9a\u53ea\u4fdd\u7559\u4e86\u4e00\u6761 $1$ \u5230 $n$ \u7684\u8def\u5f84\u3002\u73b0\u5728\u6211\u4eec\u7684\u95ee\u9898\u5c31\u662f\u627e\u51fa\u8fd9\u6761\u8def\u5f84\uff0c\u5bb9\u6613\u53d1\u73b0\u5728\u8bb0\u5f55 $t_i$ \u540e\uff0c\u8fd9\u6761\u8def\u5f84\u662f\u552f\u4e00\u7684\u3002\u4e5f\u5c31\u662f\u5fc5\u7136\u5b58\u5728\u4e00\u79cd\u6bd4\u8f83\u4f18\u52a3\u7684\u65b9\u6cd5\u627e\u51fa\u8fd9\u6761\u8def\u5f84\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u8003\u8651 Dijkstra\uff0c\u7ed9\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u4e00\u4e2a\u96c6\u5408 $S_i$\uff0c\u8868\u793a $1$ \u5230 $i$ \u8d2a\u5fc3\u7559\u4e0b\u7684\u552f\u4e00\u8def\u5f84\u7684 $t_i$ \u7684\u96c6\u5408\u3002\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7ed9 $S_u$ \u52a0\u4e0a $t_w$\uff0c\u5bf9 $S_v$ \u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\u3002\u6211\u4eec\u8003\u8651\u600e\u4e48\u6bd4\u8f83\u4f18\u52a3\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u6211\u4eec\u7ed9\u96c6\u5408\u5185\u7684\u6570\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\uff0c\u4f9d\u6b21\u8fdb\u884c\u6bd4\u8f83\uff0c\u7b2c\u4e00\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u82e5\u662f $S_u$ \u66f4\u5927\uff0c\u5219 $S_u$ \u66f4\u4f18\uff0c\u5426\u5219 $S_v$ \u66f4\u4f18\u3002\u5982\u679c\u4e00\u4e2a\u96c6\u5408\u5df2\u7ecf\u6bd4\u8f83\u7a7a\u4e86\u8fd8\u5224\u65ad\u4e0d\u51fa\u4f18\u52a3\uff0c\u90a3\u4e48\u5143\u7d20\u6570\u91cf\u66f4\u5c0f\u7684\u96c6\u5408\u66f4\u4f18\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u6bd4\u8f83\u4e00\u5b9a\u6ee1\u8db3\u4e25\u683c\u5f31\u5e8f\uff0c\u6b63\u786e\u6027\u548c\u5b57\u5178\u5e8f\u7c7b\u4f3c\u3002\n\n\u4e0b\u9762\u6211\u4eec\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u96c6\u5408\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u54c8\u5e0c\u503c\uff0c\u901a\u8fc7\u7ebf\u6bb5\u6811\u4e8c\u5206\u6bd4\u8f83\u4e24\u96c6\u5408\u7684\u4f18\u52a3\uff0c\u7ef4\u62a4\u7684\u65b9\u6cd5\u662f\u5c06\u503c\u57df\u4e0a\u96c6\u5408\u4e2d\u7684\u6570\u6240\u5728\u7684\u4f4d\u7f6e\u8bbe\u4e3a $1$\uff0c\u5177\u4f53\u624b\u6cd5\u53ef\u4ee5\u89c1\u4ee3\u7801\u3002\n\n\u81f3\u6b64\u6211\u4eec\u5728 $\\mathcal O(m \\log^2 m)$ \u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u5185\u89e3\u51b3\u4e86\u672c\u9898\u3002\n\n# Code\n\n```cpp\nconst int N=2e5+5;\nconst ul bs=131;\nint n,m,q,rt[N],tim[N];\nul pw[N];\nstruct nd {\n\tint l,r,c;\n\tul v;\n}a[N*31];\nint tn;\n#define ls (a[x].l)\n#define rs (a[x].r)\nvoid up(int x) {\n\ta[x].c=a[ls].c+a[rs].c;\n\ta[x].v=a[ls].v+pw[a[ls].c]*a[rs].v;\n}\nvoid upd(int &x,int y,int l,int r,int p,bool u=1) {\n\tif (u) x=++tn;\n\telse {\n\t\tif (!x) x=++tn;\n\t}\n\ta[x]=a[y];\n\tif (l==r) {\n\t\ta[x].c=1,a[x].v=l;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif (p<=mid) upd(ls,a[y].l,l,mid,p,u);\n\telse upd(rs,a[y].r,mid+1,r,p,u);\n\tup(x);\n}\nint qry(int x,int y,int l,int r) {\n\tif (a[x].v==a[y].v) return 2;\n\tif (l==r) return a[x].c<a[y].c;\n\tint mid=(l+r)>>1;\n\tif (a[ls].v!=a[a[y].l].v) return qry(ls,a[y].l,l,mid);\n\treturn qry(rs,a[y].r,mid+1,r);\n}\nbool ans[N];\nvoid cal(int x,int l,int r) {\n\tif (!x) return;\n\tif (l==r) {\n\t\tans[l]=(a[x].c^1);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tcal(ls,l,mid),cal(rs,mid+1,r);\n}\n#undef ls\n#undef rs\nstruct cmp {\n\tbool operator()(const int &x,const int &y) const {\n\t\tint t=qry(rt[x],rt[y],1,m);\n\t\treturn (t==1);\n\t}\n};\nset<int,cmp> o;\nstruct edg {int v,id;};\nvector<edg> g[N];\nbool e[N];\nvoid dij(int s) {\n\to.ins(s);\n\trt[s]=0;\n\twhile (!o.emt) {\n\t\tint u=*o.bg;\n\t\to.ers(o.bg);\n\t\tif (e[u]) continue;\n\t\te[u]=1;\n\t\tfor (auto v:g[u]) {\n\t\t\tint t=0;\n\t\t\tupd(t,rt[u],1,m,tim[v.id]);\n\t\t\tif (rt[v.v]!=0 && qry(t,rt[v.v],1,m)==1) {\n\t\t\t\to.ers(v.v),rt[v.v]=t,o.ins(v.v);\n\t\t\t}\n\t\t}\n\t}\n}\nint qs[N];\nint main() {\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tpw[0]=1;\n\tfor (int i=1;i<=m;i++) pw[i]=pw[i-1]*bs;\n\tfor (int i=1,u,v;i<=m;i++) {\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tg[u].pb(edg{v,i});\n\t}\n\tfor (int i=1;i<=q;i++) ans[i]=1;\n\tint cnt=0;\n\tfor (int i=1;i<=q;i++) {\n\t\tscanf(\"%d\",&qs[i]);\n\t\tif (!tim[qs[i]]) tim[qs[i]]=++cnt;\n\t}\n\tfor (int i=1;i<=m;i++) {\n\t\tif (!tim[i]) tim[i]=++cnt;\n\t}\n\tint inf=0;\n\tfor (int i=1;i<=m;i++) upd(inf,inf,1,m,i,0);\n\tfor (int i=1;i<=n;i++) rt[i]=inf;\n\tdij(1);\n\tcal(rt[n],1,m);\n\tfor (int i=1;i<=q;i++) printf(\"%d\\n\",ans[tim[qs[i]]]),tim[qs[i]]=0;\n\treturn 0;\n}\n```\n",
        "postTime": 1669018940,
        "uid": 283913,
        "name": "ZillionX",
        "ccfLevel": 6,
        "title": "\u3010\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff0c\u54c8\u5e0c\uff0c\u7c7b Dijkstra\uff0c\u89c2\u5bdf\uff0c\u6280\u5de7\u3011[LGR-126 NOIP \u6a21\u62df\u8d5b T3] P8860 \u52a8\u6001\u56fe\u8fde\u901a\u6027"
    },
    {
        "content": "## \u601d\u8def\n\u4e0b\u6587\u4e2d\u5047\u8bbe $m=q$\uff0c\u4e14 $x_1\\sim x_n$ \u6784\u6210\u4e00\u4e2a\u6392\u5217\uff0c\u4e0d\u96be\u53d1\u73b0\u8be5\u95ee\u9898\u7b49\u4ef7\u4e8e\u539f\u95ee\u9898\u3002\n\n\u8003\u8651\u5b9e\u9645\u4e0a\u6211\u4eec\u6700\u540e\u53ea\u4f1a\u4fdd\u7559\u4e00\u6761\u4ece $1$ \u5230 $n$ \u7684\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u8fd9\u6761\u8def\u5f84\u662f\u7531\u54ea\u51e0\u4e2a\u70b9\u7ec4\u6210\u7684\u5373\u53ef\u3002\n\n\u4e8e\u662f\u6211\u4eec\u76f8\u5f53\u4e8e\u662f\u8981\u6c42 $1$ \u5230 $n$ \u7684\u5b57\u5178\u5e8f\u6700\u77ed\u8def\u3002\n\n\u4e0d\u96be\u60f3\u5230\u7528\u52a8\u6001\u5f00\u70b9\u7ef4\u62a4\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u6b63\u597d\u53ef\u4ee5\u5957\u7528 dijkstra \u7b97\u6cd5\uff0c\u66f4\u65b0\u6700\u77ed\u8def\u53ea\u9700\u8981\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230 dijkstra \u8fd8\u8981\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u8003\u8651\u600e\u4e48\u6bd4\u8f83\u4e24\u68f5\u4e3b\u5e2d\u6811\uff0c\u4f7f\u7528\u54c8\u5e0c\u6765\u7ef4\u62a4\u4e00\u68f5\u5b50\u6811\u7684\u6743\u503c\u60c5\u51b5\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n\\log m)$\u3002\n## \u4ee3\u7801\n```cpp\n//\u56de\u5bb6\uff1f\u6211\u6ca1\u6709\u5bb6\u53ef\u4ee5\u56de\uff0c\u6211\u6ca1\u6709\u9000\u8def\u3002\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint n=read(),m=read(),q=read(),cnt=1;\nconst int p=1019260817;\nint ls[10000003],rs[10000003],val[10000003];\nint dis[200003],pw[200003],tr[200003];\nvoid build(int nl,int nr,int x)\n{\n\tif(nl==nr) return ;\n\tint mid=(nl+nr)>>1;\n\tbuild(nl,mid,ls[x]=++cnt),\n\tbuild(mid+1,nr,rs[x]=++cnt);\n\treturn ;\n}\nint update(int nl,int nr,int t,int x)\n{\n\tif(nl==nr)\n\t{\n\t\tval[++cnt]=1;\n\t\treturn cnt;\n\t}\n\tint mid=(nl+nr)>>1,r=++cnt;\n\tls[r]=ls[x],rs[r]=rs[x];\n\tif(t<=mid) ls[r]=update(nl,mid,t,ls[x]);\n\telse rs[r]=update(mid+1,nr,t,rs[x]);\n\tval[r]=(1ll*pw[mid-nl+1]*val[ls[r]]+val[rs[r]])%p;\n\treturn r;\n}\nint cmp(int x,int y)\n{\n\tif(!rs[x]||!rs[y]) return val[x]<val[y];\n\tif(val[rs[x]]!=val[rs[y]]) return cmp(rs[x],rs[y]);\n\treturn cmp(ls[x],ls[y]);\n}\nbool vis[200003],ans[200003];\npair<int,int> a[200003];\nvector<pair<int,int>> e[200003];\n#define fi first\n#define se second\nstruct segt\n{\n\tint a[200003],f[800003];\n\tvoid update(int l,int r,int t,int k,int x=1)\n\t{\n\t\tif(l==r){a[l]=k,f[x]=l;return ;}\n\t\tint mid=(l+r)>>1;\n\t\tif(t<=mid) update(l,mid,t,k,x<<1);\n\t\telse update(mid+1,r,t,k,(x<<1)+1);\n\t\tf[x]=cmp(a[f[x<<1]],a[f[(x<<1)+1]])\n\t\t?f[x<<1]:f[(x<<1)+1];\n\t\treturn ;\n\t}\n}T;\nvoid dfs(int nl,int nr,int x)\n{\n\tif(nl==nr)\n\t{\n\t\tans[tr[nl]]=!val[x];\n\t\treturn ;\n\t}\n\tint mid=(nl+nr)>>1;\n\tdfs(nl,mid,ls[x]),dfs(mid+1,nr,rs[x]);\n}\nsigned main()\n{\n\tpw[0]=1;\n\tfor(int i=1; i<=200000; ++i)\n\t\tpw[i]=1313131ll*pw[i-1]%p;\n\tfor(int i=1; i<=m; ++i)\n\t\ta[i].fi=read(),a[i].se=read();\n\tint t=m;\n\tfor(int i=1,x; i<=q; ++i)\n\t\tif(!vis[x=read()])\n\t\t\ttr[t]=i,vis[x]=1,\n\t\t\te[a[x].fi].emplace_back(a[x].se,t--);\n\tfor(int i=1; i<=m; ++i)\n\t\tif(!vis[i])\n\t\t\te[a[i].fi].emplace_back(a[i].se,t--);\n\tbuild(1,m+1,1),dis[1]=1;\n\tint inf=update(1,m+1,m+1,1);\n\tfor(int i=2; i<=n; ++i)\n\t\tdis[i]=inf,T.update(1,n,i,inf);\n\tT.update(1,n,1,1);\n\tfor(int _=1; _<=n; ++_)\n\t{\n\t\tint x=T.f[1],id=dis[x];\n\t\tT.update(1,n,x,inf);\n\t\tfor(auto [y,z]:e[x])\n\t\t{\n\t\t\tint tmp=update(1,m+1,z,id);\n\t\t\tif(cmp(tmp,dis[y]))\n\t\t\t\tdis[y]=tmp,T.update(1,n,y,tmp);\n\t\t}\n\t}\n\tdfs(1,m+1,dis[n]);\n\tfor(int i=1; i<=q; ++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1669189328,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8860"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u79cd\u500d\u589e\u7684\u505a\u6cd5\u3002\n\n\u5018\u82e5\u6709\u4e00\u6761\u8fb9\u88ab\u8003\u8651\u5230\u4e86\u4e24\u6b21\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6b21\u8be2\u95ee\u5b83\u65f6\u76f4\u63a5\u5ffd\u7565\u5e76\u8f93\u51fa 0\u3002\u56e0\u6b64\u4e0b\u9762\u6211\u4eec\u5047\u8bbe\u6bcf\u6761\u8fb9\u53ea\u88ab\u8be2\u95ee\u5230\u4e86\u4e00\u6b21\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6ca1\u6709\u8be2\u95ee\u5230\u7684\u8fb9\uff0c\u6211\u4eec\u5f3a\u5236\u5c06\u5176\u52a0\u5165\u8be2\u95ee\uff0c\u653e\u5728\u539f\u6765\u8be2\u95ee\u7684\u8fb9\u7684\u540e\u9762\u3002\n\u5bb9\u6613\u53d1\u73b0\uff0c\u8fd9\u4e9b\u8be2\u95ee\u5bf9\u539f\u7b54\u6848\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u6211\u4eec\u53ea\u8981\u4e0d\u8f93\u51fa\u8fd9\u4e9b\u8be2\u95ee\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6700\u540e\u5220\u4e86\u5269\u4e0b\u7684\u8fb9\u4e00\u5b9a\u4f1a**\u4e0d\u5197\u4f59**\u5730\u6784\u6210\u4e00\u6761\u4ece 1 \u5230 $n$ \u7684\u8def\u5f84\u3002\n\n\u8bc1\u660e\uff1a\u5047\u8bbe\u8fd8\u6709\u4e00\u6761\u8fb9\u4e0d\u5728 1 \u5230 $n$ \u7684\u8def\u5f84\u4e0a\uff0c\u90a3\u4e48\u5220\u53bb\u8fd9\u6761\u8fb9\uff0c\u7b54\u6848\u80af\u5b9a\u4f1a\u66f4\u4f18\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8fb9\u7684\u6743\u503c\u4e3a\u8be2\u95ee\u8fd9\u6761\u8fb9\u662f\u5426\u88ab\u5220\u7684\u8be2\u95ee\u7684\u7f16\u53f7\u3002\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4 $d_x$ \u8868\u793a\u4ece 1 \u8d70\u5230 $x$ \u4e2d\u7684\u6bcf\u6761\u8def\u5f84\u7684\u6240\u6709\u7684\u8fb9\u7684\u6743\u503c\u6784\u6210\u7684\u96c6\u5408\u4e2d\u7684\u6700\u4f18\u7684\u90a3\u4e00\u4e2a\u96c6\u5408\u3002\u6211\u4eec\u5982\u4f55\u6bd4\u8f83\u54ea\u4e2a\u96c6\u5408\u66f4\u4f18\u5462\uff1f\u6211\u4eec\u6bcf\u6b21\u53d6\u4e24\u4e2a\u96c6\u5408\u7684\u6700\u5c0f\u503c\uff0c\u5224\u65ad\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u5219\u8df3\u8fc7\u53d6\u7b2c\u4e8c\u5c0f\u7684\uff0c\u5982\u679c\u8fd8\u76f8\u7b49\u5c31\u53d6\u7b2c\u4e09\u5c0f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5f53\u51fa\u73b0\u4e86\u4e0d\u76f8\u7b49\u7684\u503c\u65f6\uff0c\u6bd4\u8f83\u54ea\u4e2a\u96c6\u5408\u7684\u8fd9\u4e2a\u503c\u66f4\u5927\uff0c\u8fd9\u4e2a\u503c\u66f4\u5927\u7684\u96c6\u5408\u4f1a\u66f4\u4f18\u3002\u56e0\u4e3a\u6211\u4eec\u5220\u8fb9\u662f\u6309\u987a\u5e8f\u6765\u7684\uff0c\u80af\u5b9a\u8981\u4fdd\u8bc1\u5148\u8be2\u95ee\u7684\u5148\u5220\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e00\u4e2a\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u7684\u6846\u67b6\uff0c\u5e76\u4e14\u7528\u4e3b\u5e2d\u6811\u4f18\u5316\u96c6\u5408\u6bd4\u8f83\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(m \\log^2 m)$\u3002\uff08\u8fd9\u91cc\u7b14\u8005\u4e5f\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u56e0\u4e3a\u6ca1\u5199\u8fc7\uff09\u3002\n\n\u4e0a\u9762\u7684\u4e3b\u5e2d\u6811\u505a\u6cd5\u8d85\u51fa\u4e86 NOIP \u5927\u7eb2\u8303\u56f4\uff0c\u56e0\u6b64\u4e0b\u9762\u8981\u4ecb\u7ecd\u500d\u589e\u5199\u6cd5\u3002\n\n\u6211\u4eec\u8003\u8651\u8fb9\u6c42\u6700\u77ed\u8def\uff0c\u8fb9\u6784\u5efa\u6700\u77ed\u8def\u3002\u7531\u4e8e\u65b0\u52a0\u5165\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u4f5c\u4e3a\u53f6\u5b50\u8282\u70b9\u52a0\u5165\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728 $O(\\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u7ef4\u62a4\u8be5\u8282\u70b9\u7684\u500d\u589e\u4fe1\u606f\u3002\n\n\u5f53\u6211\u4eec\u6bd4\u8f83\u4e24\u4e2a\u8282\u70b9\u54ea\u4e2a\u66f4\u4f18\u65f6\uff0c\u53ef\u4ee5\u6c42\u51fa\u4ed6\u4eec\u5728\u6700\u77ed\u8def\u5f84\u6811\u4e0a\u7684 LCA\uff0c\u518d\u8fdb\u884c\u6bd4\u8f83\u3002\u6b64\u65f6\uff0c\u8def\u5f84\u88ab\u62c6\u6210\u4e86 $1 \\to LCA, LCA\\to x,LCA\\to y$ \u4e09\u4e2a\u90e8\u5206\u3002\u5176\u4e2d\u7b2c\u4e00\u4e2a\u662f\u4e09\u4e2a\u5171\u540c\u62e5\u6709\u7684\uff0c\u53ea\u7528\u6bd4\u8f83\u540e\u9762\u4e24\u4e2a\u3002\u6211\u4eec\u76f4\u63a5\u6c42\u51fa\u6700\u5c0f\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u8fd9\u662f\u56e0\u4e3a\u4e00\u4e2a\u8be2\u95ee\u4e0d\u53ef\u80fd\u67e5\u8be2\u4e24\u6761\u8fb9\uff0c\u6240\u4ee5\u8bf4\u6700\u5c0f\u503c\u4e00\u5b9a\u4f1a\u4e0d\u4e00\u6837\uff0c\u624d\u4fdd\u8bc1\u4e86\u8be5\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f\u8fea\u6770\u65af\u7279\u62c9\u7684\u590d\u6742\u5ea6\u4e58\u4e0a\u6bd4\u8f83\u4e24\u4e2a\u8282\u70b9\u7684\u590d\u6742\u5ea6\uff0c\u4e3a $O((m+n) \\log^2 n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 5, maxlog = 17;\nint n, m, qcnt, a[N], b[N], X[N], Y[N], Z[N], ver[N], edge[N], tot, nxt[N], head[N], ans[N], f[N][18], w[N][18], dep[N];\nbool exist[N], v[N];\ninline void add(int x, int y, int z) {\n\tver[++tot] = y, edge[tot] = z, nxt[tot] = head[x], head[x] = tot;\n}\nint lca(int x, int y) {\n\tif (dep[x] > dep[y]) swap(x, y);\n\tfor (int i = maxlog; i >= 0; --i)\n\t\tif (dep[f[y][i]] >= dep[x]) y = f[y][i];\n\tif (x == y) return x;\n\tfor (int i = maxlog; i >= 0; --i)\n\t\tif (f[x][i] ^ f[y][i]) x = f[x][i], y = f[y][i];\n\treturn f[x][0];\n}\nint getmi(int x, int LCA) {\n\tif (x == LCA) return 1e9;\n\tint ans = 1e9;\n\tfor (int i = maxlog; i >= 0; --i)\n\t\tif (dep[f[x][i]] > dep[LCA]) {\n\t\t\tans = min(ans, w[x][i]);\n\t\t\tx = f[x][i];\n\t\t}\n\treturn min(ans, w[x][0]);\n}\nstruct cmp {\n\tbool operator () (int x, int y) {\n\t\tint LCA = lca(x, y);\n\t\treturn getmi(x, LCA) > getmi(y, LCA);\n\t}\n};\nvoid dij() {\n\tmemset(v, 0, sizeof v);\n\tset<int, cmp> s;\n\tfor (int i = 1; i <= n; ++i) dep[i] = 1;\n\tw[1][0] = 1e9;\n\ts.insert(1);\n\twhile (s.size()) {\n\t\tint x = *s.begin();\n\t\ts.erase(s.begin());\n\t\tif (v[x]) continue;\n\t\tv[x] = 1;\n\t\tfor (int i = head[x]; i; i = nxt[i]) {\n\t\t\tint y = ver[i], z = edge[i], LCA = lca(x, y);\n\t\t\tif (getmi(y, LCA) < min(z, getmi(x, LCA))) {\n\t\t\t\ts.erase(y);\n\t\t\t\tf[y][0] = x;\n\t\t\t\tw[y][0] = z;\n\t\t\t\tfor (int i = 1; i <= maxlog; ++i) {\n\t\t\t\t\tf[y][i] = f[f[y][i - 1]][i - 1];\n\t\t\t\t\tw[y][i] = min(w[y][i - 1], w[f[y][i - 1]][i - 1]);\n\t\t\t\t}\n\t\t\t\tdep[y] = dep[x] + 1;\n\t\t\t\ts.insert(y);\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tcin >> n >> m >> qcnt;\n\tfor (int i = 1; i <= m; ++i) scanf(\"%d%d\", X + i, Y + i);\n\tint tt = 0;\n\tfor (int i = 1; i <= qcnt; ++i) {\n\t\tscanf(\"%d\", a + i);\n\t\tif (v[a[i]]) {\n\t\t\tans[i] = -1;\n\t\t\tcontinue;\n\t\t} else Z[a[i]] = ++tt, v[a[i]] = 1;\n\t}\n\tfor (int i = 1; i <= m; ++i)\n\t\tif (!Z[i]) Z[i] = ++tt;\n\tfor (int i = 1; i <= m; ++i) b[Z[i]] = i;\n\tfor (int i = 1; i <= m; ++i) add(X[i], Y[i], Z[i]);\n\tfor (int i = 0; i <= maxlog; ++i) w[0][i] = 1e9;\n\tdij();\n\tint x = n;\n\twhile (x != 1) exist[b[w[x][0]]] = 1, x = f[x][0];\n\tfor (int i = 1; i <= qcnt; ++i) {\n\t\tif (ans[i] == -1) ans[i] = 0;\n\t\telse ans[i] = !exist[a[i]];\n\t\tprintf(\"%d\\n\", ans[i]);\n\t}\n}\n```",
        "postTime": 1669094032,
        "uid": 162196,
        "name": "\u4f1f\u5927\u7684\u738b\u592b\u5b50",
        "ccfLevel": 6,
        "title": "P8860 \u52a8\u6001\u56fe\u8fde\u901a\u6027 \u9898\u89e3"
    },
    {
        "content": "\u611f\u89c9\u4e0d\u8bba\u662f\u6ca1\u60f3\u5230\u8f6c\u5316\u8fd8\u662f\u6ca1\u89c1\u8fc7\u8fd9\u4e2a\u5957\u8def\u90fd\u5f88\u96be\u60f3\u2026\u2026\n\n\u9898\u610f\u662f\u95ee\u6211\u4eec\u6bcf\u6b21\u662f\u5426\u53ef\u4ee5\u5220\u6389\u6709\u5411\u56fe\u7684\u4e00\u6761\u8fb9\u4f7f\u5f97\u4ecd\u7136**\u5b58\u5728**\u4e00\u6761 $1$ \u5230 $n$ \u7684\u8def\u5f84\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u4e00\u773c\u671b\u8fc7\u53bb\u662f\u5f88\u96be\u505a\u7684\u3002\u5982\u679c\u662f\u65e0\u5411\u56fe\u53ef\u4ee5\u901a\u8fc7\u5206\u6cbb\u52a0\u53ef\u64a4\u9500\u5e76\u67e5\u96c6\u6765\u627e\u5230\u5fc5\u987b\u4fdd\u7559\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u3002\u4f46\u6709\u5411\u56fe\u5e76\u6ca1\u6709\u4ec0\u4e48\u5f88\u597d\u7684\u529e\u6cd5\u6765\u7ef4\u62a4 $1$ \u4e0e $n$ \u7684\u6709\u5411\u8054\u901a\u6027\u3002\n\n\u8ba9\u6211\u4eec\u5c1d\u8bd5\u53d1\u73b0\u4e00\u4e9b\u6027\u8d28\u3002\u9996\u5148\uff0c\u5bf9\u4e8e\u4e00\u6761\u5728\u8be2\u95ee\u4e2d\u51fa\u73b0\u591a\u6b21\u7684\u8fb9\uff0c\u4e00\u5b9a\u53ea\u6709\u7b2c\u4e00\u6b21\u7684\u7b54\u6848\u4e0d\u786e\u5b9a\uff0c\u540e\u9762\u7684\u8be2\u95ee\u7b54\u6848\u90fd\u662f0\u3002\u56e0\u4e3a\u5982\u679c\u7b2c\u4e00\u6b21\u5220\u6389\u4e86\uff0c\u4f60\u4e0d\u53ef\u80fd\u518d\u5220\uff1b\u5982\u679c\u6ca1\u5220\u6389\uff0c\u4f60\u4e5f\u4e0d\u4f1a\u5728\u540e\u9762\u7684\u8be2\u95ee\u5220\u3002\u56e0\u6b64\uff0c\u6bcf\u6761\u8fb9\u53ea\u6709\u7b2c\u4e00\u6b21\u8be2\u95ee\u6709\u610f\u4e49\u3002\n\n\u89c2\u5bdf\u7b54\u6848\u7684 01 \u5e8f\u5217\u957f\u4ec0\u4e48\u6837\u5b50\u3002\u6ce8\u610f\u5230\uff0c\u5b83\u4e00\u5b9a\u662f\u6240\u6709\u6ee1\u8db3 $1$ \u5230 $n$ \u5b58\u5728\u8def\u5f84\u7684\u65b9\u6848\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u5c1d\u8bd5\u5220\u8fb9\u7684\u539f\u5219\u662f**\u80fd\u5220\u5c31\u5220**\u3002\u5b57\u5178\u5e8f\u5c0f\u7684\u663e\u7136\u66f4\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u3002\u5982\u679c\u4f60\u505a\u8fc7[CF464E](https://www.luogu.com.cn/problem/CF464E)\u7684\u8bdd\uff0c\u5e94\u8be5\u53ef\u4ee5\u6bd4\u8f83\u81ea\u7136\u7684\u60f3\u5230\u7ed9\u6bcf\u6761\u8fb9\u8d4b\u6743\uff0c\u6700\u540e\u4fdd\u7559\u4e00\u6761\u4ece $1$ \u5230 $n$ \u8fb9\u6743\u6700\u5c0f\u7684\u8def\u5f84\u3002\u5177\u4f53\u6765\u8bf4\u5bf9\u4e8e\u4e00\u6761\u8fb9 $x$ \uff0c\u5982\u679c\u5b83\u5728\u8be2\u95ee\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u662f $i$ \uff0c \u90a3\u4e48 $v_x=2^i$ \u3002\u7279\u6b8a\u7684\uff0c\u5982\u679c\u4e00\u6761\u8fb9\u6ca1\u6709\u51fa\u73b0\u5728\u8be2\u95ee\u4e2d\uff0c\u90a3\u4e48\u5b83\u7684\u6743\u503c\u4e3a $2^{q+1}$ \u3002\u5f53\u7136\u8fd9\u53ea\u662f\u4e00\u79cd\u65b9\u5f0f\uff0c\u5176\u4ed6\u80fd\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5f53\u7136\u4e5f\u53ef\u4ee5\u3002\u663e\u7136\u4e0d\u80fd\u76f4\u63a5\u7528\u9ad8\u7cbe\u5ea6\u6574\u6570\u5bf9\u8fd9\u5f20\u56fe\u8dd1dij\uff0c\u8003\u8651\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\u54c8\u5e0c\u503c\u6765\u76f4\u63a5\u6bd4\u8f83\u4e24\u4e2a 01 \u5e8f\u5217\u7684\u5b57\u5178\u5e8f\u3002\u6700\u540e\u6700\u77ed\u8def\u4fdd\u7559\u7684\u8fb9\u6211\u4eec\u5c31\u8ba4\u4e3a\u662f**\u5fc5\u987b**\u4e0d\u5220\u9664\u7684\u8fb9\uff0c\u5176\u4f59\u7684\u8fb9\u53ef\u4ee5\u968f\u4fbf\u5220\u9664\uff0c\u7136\u540e\u5c31\u505a\u5b8c\u4e86\u3002\u590d\u6742\u5ea6  $O(n\\log n\\log q)$ \uff0c\u5e38\u6570\u4e0d\u5927\u3002\u867d\u7136\u770b\u8d77\u6765\u8981\u505a\u7684\u4e8b\u5f88\u591a\uff0c\u4f46\u4ee3\u7801\u5e76\u4e0d\u96be\u5199\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ninline char nc()\n{\n\tstatic char buf[99999],*l,*r;\n\treturn l==r&&(r=(l=buf)+fread(buf,1,99999,stdin),l==r)?EOF:*l++;\n}\ntemplate <class code>inline code read(const code &a)\n{\n    code x=0;short w=0;char ch=0;\n    while(!isdigit(ch)) {w|=ch=='-';ch=nc();}\n    while(isdigit(ch)) {x=(x<<3)+(x<<1)+(ch^48);ch=nc();}\n    return w?-x:x;\n}\nvoid print(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>=10)print(x/10);\n\tputchar(x%10+48);\n}\nconst int maxn=2e5;\nint n,m,q;\nstruct pp{\n    int ne;\n    int rank;\n};\nvector<pp>w[maxn+5];\nint v[maxn+5],rt[maxn+5],ans[maxn+5],jl[maxn+5],tag[maxn+5];\nunsigned long long xd[40*maxn];\nint lc[40*maxn],rc[40*maxn],tot;\nvoid xj(int &rt){\n    xd[++tot]=xd[rt],lc[tot]=lc[rt],rc[tot]=rc[rt];\n    rt=tot;\n}\nvoid build(int &root,int zl,int zr){\n    root=++tot;\n    if(zl==zr){\n        \n        xd[root]=zl;\n        return;\n    }\n    int mid=(zl+zr)>>1;\n    build(lc[root],zl,mid);build(rc[root],mid+1,zr);\n    xd[root]=xd[lc[root]]*114514+xd[rc[root]];\n}\nvoid update(int &root,int x,int zl,int zr,int v){\n    xj(root);\n    if(zl==zr){\n        xd[root]=v*x;\n        return;\n    }\n    int mid=(zl+zr)>>1;\n    if(x<=mid)update(lc[root],x,zl,mid,v);\n    else update(rc[root],x,mid+1,zr,v);\n    xd[root]=xd[lc[root]]*114514+xd[rc[root]];\n}\nunsigned long long cx(int root,int x,int zl,int zr){\n    if(zl==zr)return xd[root];\n    int mid=(zl+zr)>>1;\n    if(x<=mid)return cx(lc[root],x,zl,mid);\n    return cx(rc[root],x,mid+1,zr);\n}\nint ef(int r1,int r2,int zl,int zr){\n    if(zl==zr)return xd[r1]<xd[r2];\n    int mid=(zl+zr)>>1;\n    if(xd[lc[r1]]==xd[lc[r2]])return ef(rc[r1],rc[r2],mid+1,zr);\n    return ef(lc[r1],lc[r2],zl,mid);\n}\nstruct node{\n    int rt;\n    int wz;\n};\nstruct cmp{\n    bool operator()(const node &x,const node &y){\n        return !ef(x.rt,y.rt,1,q+1);\n    }\n};\npriority_queue<node,vector<node>,cmp>dl;\nsigned main()\n{\n\t// freopen(\"text.in\",\"r\",stdin);\n    // freopen(\"text.out\",\"w\",stdout);\n    n=read(n),m=read(m),q=read(q);\n    for(int i=1;i<=m;i++){\n        int u=read(u),v=read(v);\n        pp now;now.ne=v,now.rank=i;\n        w[u].emplace_back(now);\n    }\n    for(int i=1;i<=q;i++){\n        int x=read(x);\n        jl[i]=x;\n        if(!v[x])v[x]=i;\n    }\n    for(int i=1;i<=m;i++)if(!v[i])v[i]=q+1;\n    int zrt=1;build(zrt,1,q+1);\n    for(int i=2;i<=n;i++)rt[i]=zrt;\n    rt[1]=++tot;node now;now.rt=rt[1],now.wz=1;\n    dl.push(now);\n    while(!dl.empty()){\n        node wz=dl.top();dl.pop();\n        if(wz.rt!=rt[wz.wz])continue;\n        for(pp ne:w[wz.wz]){\n            int cg=rt[wz.wz];\n            update(cg,v[ne.rank],1,q+1,1);\n            if(ef(cg,rt[ne.ne],1,q+1)){\n                rt[ne.ne]=cg;\n                dl.push((node){cg,ne.ne});\n            }\n        }\n    }\n    for(int i=1;i<=q;i++){\n        if(v[jl[i]]!=i||cx(rt[n],i,1,q+1))ans[i]=1;\n    }\n    for(int i=1;i<=q;i++){\n        if(ans[i])putchar('0');\n        else putchar('1');\n        puts(\"\");\n    }\n\treturn 0;\n}\n```\n",
        "postTime": 1669190117,
        "uid": 142067,
        "name": "wind_cross",
        "ccfLevel": 8,
        "title": "P8860"
    },
    {
        "content": "## Analysis\n\n\u8003\u8651\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u7ed9\u6bcf\u4e2a\u8be2\u95ee\u7684\u8fb9\u6309\u7167\u8be2\u95ee\u7684\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\u8d4b\u503c\u4e0a\u8fb9\u6743\u3002\u539f\u95ee\u9898\u7b49\u4ef7\u4e8e\u627e\u5230\u4e00\u6761\u4ece $1$ \u5230 $n$ \u7684\u8def\u5f84\uff0c\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\u6b64\u5904\u5b57\u5178\u5e8f\u7684\u5b9a\u4e49\u4e3a\uff1a\n\n- \u5c06\u7ecf\u8fc7\u7684\u8fb9\u8868\u793a\u4e3a\u4e00\u4e2a 01 \u4e32\uff0c\u82e5\u4e00\u6761\u8fb9\u88ab\u7ecf\u8fc7\uff0c\u5219\u5979\u7684\u8fb9\u6743\u7684\u4f4d\u7f6e\u4e3a $1$\uff0c\u5426\u5219\u4e3a $0$\u3002\u4f8b\u5982\u5171 $6$ \u6761\u8fb9\uff0c\u7ecf\u8fc7\u4e86 $5,1,4$ \u4e09\u6761\u8fb9\uff0c\u5219\u8be5 01 \u4e32\u8868\u793a\u4e3a $100110$\u3002\n\n\u90a3\u4e48\u82e5\u4e00\u6761\u8be2\u95ee\u7684\u8fb9\u5728\u8be5\u8def\u5f84\u4e0a\u88ab\u7ecf\u8fc7\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u88ab\u5220\u9664\uff0c\u5426\u5219\u4f1a\u88ab\u5220\u9664\u3002\u8fd9\u6837\u7684\u8def\u5f84\u5f97\u51fa\u7684\u7b54\u6848\u6b63\u786e\u6027\u663e\u7136\uff0c\u56e0\u4e3a\u4e00\u6761\u8fb9\u88ab\u7ecf\u8fc7\uff0c\u90a3\u4e48\u5220\u9664\u5979\u540e\u56fe\u4e00\u5b9a\u4e0d\u5b58\u5728 $1$ \u5230 $n$ \u7684\u8def\u5f84\uff08\u82e5\u5b58\u5728\uff0c\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8981\u6c42\u5fc5\u7136\u4f7f\u5979\u4e3a $0$\uff09\u3002\n\n\u53d1\u73b0\u8fd9\u6761\u8def\u5f84\u7c7b\u4f3c\u4e8e\u6700\u77ed\u8def\uff0c\u8003\u8651\u7528 dijkstra \u7b97\u6cd5\u6c42\u51fa\u8fd9\u6761\u8def\u5f84\u3002\u7531\u4e8e\u7ecf\u8fc7\u4e00\u6761\u8fb9\u540e\u53ea\u4f1a\u6709 $1$ \u6761\u8fb9\u7684\u7ecf\u8fc7\u60c5\u51b5\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u6545\u8003\u8651\u7528\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5230\u8fbe\u4e00\u4e2a\u70b9\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8def\u5f84\u4e0a\u6240\u7ecf\u8fc7\u7684\u70b9\u3002\u66f4\u65b0\u7b54\u6848\u53ea\u8981\u4e3b\u5e2d\u6811\u4e0a\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002\n\n\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u6bd4\u8f83\u4e24\u6761\u8def\u5f84\u7684\u5b57\u5178\u5e8f\u5927\u5c0f\u3002\u8003\u8651\u4e3b\u5e2d\u6811\u7ef4\u62a4\u533a\u95f4 01 \u4e32\u7684\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u51fa\u7b2c\u4e00\u4e2a\u503c\u4e0d\u4e00\u6837\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e00\u4f4d\u5c0f\u7684\u5219\u5b57\u5178\u5e8f\u66f4\u5c0f\u3002\n\n\u5269\u4e0b\u7684\u90e8\u5206\u5c31\u662f\u666e\u901a\u7684 dijkstra\u3002\n\n## Code\n\n```cpp\n#define int long long\nconst int N=200010;\nconst int base=13331;\nconst int mod=1011451423;\nint n,m,q,ans[N],t[N*31],rt[N],mi[N],ls[N*31],rs[N*31],idx[N],tot;\nvector<pair<int,int>> e[N];\nstruct Edge{\n  int u,v,w,vis;\n}edge[N];\n#define mid ((l+r)>>1)\nvoid upd(int &p,int q,int l,int r,int x){\n  p=++tot,t[p]=t[q],ls[p]=ls[q],rs[p]=rs[q];\n  if(l==r) return t[p]=1,void();\n  if(x<=mid) upd(ls[p],ls[q],l,mid,x);\n  else upd(rs[p],rs[q],mid+1,r,x);\n  t[p]=(t[ls[p]]*mi[r-mid]%mod+t[rs[p]])%mod;\n}\nbool compare(int x,int y,int l,int r){\n  if(!x||!y) return y?1:0;\n  if(l==r) return t[x]<t[y];\n  if(t[ls[x]]!=t[ls[y]]) return compare(ls[x],ls[y],l,mid);\n  return compare(rs[x],rs[y],mid+1,r);\n}\nbool rcompare(int x,int y,int l,int r){\n  if(!x||!y) return !x?0:1;\n  if(l==r) return t[x]<t[y];\n  if(t[ls[x]]!=t[ls[y]]) return rcompare(ls[x],ls[y],l,mid);\n  return rcompare(rs[x],rs[y],mid+1,r);\n}\nvoid solve(int c,int l,int r){\n  if(!c) return;\n  if(l==r) ans[idx[l]]=t[c];\n  solve(ls[c],l,mid),solve(rs[c],mid+1,r);\n}\nstruct node{\n  int u,rt;\n  node(){}\n  node(int x,int y){u=x,rt=y;}\n  friend bool operator>(node x,node y){\n    return compare(x.rt,y.rt,1,m);\n  }\n  friend bool operator<(node x,node y){\n    return rcompare(x.rt,y.rt,1,m);\n  }\n};\npriority_queue<node> pq;\nsigned main(){IOS;\n  cin>>n>>m>>q;\n  rep(i,1,m) cin>>edge[i].u>>edge[i].v;\n  int tim=0;\n  rep(i,1,q){\n    int x; cin>>x;\n    if(!edge[x].vis) edge[x].vis=1,edge[x].w=++tim,idx[tim]=i;\n    else ans[i]=1;\n  }\n  rep(i,1,m) if(!edge[i].vis) edge[i].w=++tim;\n  rep(i,1,m){\n    Edge cur=edge[i];\n    e[cur.u].eb(cur.v,cur.w);\n  }\n  mi[0]=1; rep(i,1,m) mi[i]=mi[i-1]*base%mod;\n  rt[1]=tot=1,pq.push(node(1,1));\n  while(!pq.empty()){\n    int u=pq.top().u,nrt=pq.top().rt;\n    pq.pop();\n    if(rt[u]!=nrt) continue;\n    for(auto nxt:e[u]){\n      int v=nxt.fi,w=nxt.se,tmp;\n      upd(tmp,nrt,1,m,w);\n      if(!rt[v]||compare(tmp,rt[v],1,m)){\n        rt[v]=tmp,pq.push(node(v,tmp));\n      }\n    }\n  }\n  solve(rt[n],1,m);\n  rep(i,1,q) cout<<1-ans[i]<<\"\\n\";\n}\n```",
        "postTime": 1669205058,
        "uid": 169574,
        "name": "Enucai",
        "ccfLevel": 7,
        "title": "P8860 \u52a8\u6001\u56fe\u8fde\u901a\u6027"
    },
    {
        "content": "\u524d\u6392\u63d0\u9192\uff1a\u672c\u9898\u89e3\u6d89\u53ca\u8d85\u7eb2\uff08\u76f8\u5bf9\u201c\u63d0\u9ad8\u7ea7\u201d\u800c\u8a00\uff0c\u5e76\u4e14\u8d85\u7eb2\u8d85\u7684\u6709\u70b9\u8fc7\uff09\u5185\u5bb9\uff0c\u5e76\u4e14\u6682\u65f6\u6ca1\u6709\u8fdb\u884c\u5b9e\u73b0\uff0c\u4f46\u6b63\u786e\u6027\u662f\u53ef\u4ee5\u4fdd\u8bc1\u7684\uff0c\u5927\u6982\u3002\r\n\r\n\u7b80\u5316\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u91cd\u8fb9 DAG \u4ee5\u53ca $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4ecd\u5b58\u5728\u4e8e\u5f53\u524d DAG \u7684\u4e00\u6761\u8fb9\uff0c\u8be2\u95ee\u5220\u6389\u540e\u662f\u5426\u4ecd\u5b58\u5728\u4e00\u6761\u7ed3\u70b9 $1$ \u5230\u7ed3\u70b9 $n$ \u7684\u8def\u5f84\uff0c\u662f\u5219\u8fd4\u56de $1$ \u5e76\u8fdb\u884c\u5220\u8fb9\uff08\u6c38\u4e45\u6027\u5220\u9664\uff0c\u5373\u5f71\u54cd\u540e\u7eed\u8be2\u95ee\uff09\uff0c\u5426\u5219\u4ec5\u8fd4\u56de $0$\uff0c\u4e0d\u5bf9\u539f DAG \u8fdb\u884c\u6539\u52a8\u3002\r\n\r\n\u9996\u5148\u53d1\u73b0\uff1a\u56fe\u4e2d\u91cd\u8981\u7684\u8fb9\u4e0e\u70b9\u53ea\u6709\u5168\u90e8\u6784\u6210 $1$ \u5230 $n$ \u8def\u5f84\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e00\u6b21 DAG DP \u6c42\u51fa\u6240\u6709\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u6700\u5927\u7ed3\u70b9\u6807\u53f7\uff0c\u4e4b\u540e\u6309\u7167\u8fd9\u4e2a\u6807\u53f7\u62a0\u51fa\u6765\u4e00\u5f20\u751f\u6210\u5b50\u56fe\uff0c\u6ee1\u8db3\uff1a\u4ec5\u6709\u70b9 $1$ \u65e0\u5165\u5ea6\uff0c\u70b9 $n$ \u65e0\u51fa\u5ea6\uff0c\u5176\u4ed6\u7684\u6240\u6709\u70b9\u4e0e\u8fb9\u90fd\u662f\u67d0\u6761 $1$ \u5230 $n$ \u8def\u5f84\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e00\u6b65\u5176\u5b9e\u5e76\u4e0d\u662f\u5fc5\u8981\u7684\uff0c\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u4e0e\u540e\u7eed\u601d\u8003\u3002\r\n\r\n\u5bf9\u8fd9\u5f20\u751f\u6210\u5b50\u56fe\u6c42\u51fa\u4efb\u610f\u4e00\u9897 DFS \u6709\u5411\u751f\u6210\u6811\uff0c\u8fd9\u9897\u6811\u7ef4\u62a4\u7684\u662f\u539f\u56fe\u4e2d\u82e5\u5e72\u6761\u8def\u5f84\uff0c\u53e6\u5916\u7684\u4e00\u4e9b\u8def\u5f84\u901a\u8fc7\u6a2a\u53c9\u8fb9\u7ef4\u6301\uff0c\u4e0d\u5728\u8fd9\u9897\u6811\u4e0a\u7ef4\u62a4\u3002\u6b64\u65f6\uff0c\u5b58\u5728\u8def\u5f84 $x \\to y$ \u7684\u5145\u8981\u6761\u4ef6\u53d8\u4e3a $x$ \u662f\u8fd9\u9897\u6811\u4e0a $y$ \u7684\u7956\u5148\u3002\r\n\r\n\u63a5\u4e0b\u6765\u8003\u8651\u5220\u6389\u4e00\u6761\u8fb9\uff0c\u5b83\u8981\u4e48\u662f\u6811\u8fb9\u8981\u4e48\u662f\u6a2a\u53c9\u8fb9\uff0c\u540e\u8005\u7531\u4e8e\u4e0d\u5728\u6811\u4e0a\u7ef4\u62a4\uff0c\u76f4\u63a5\u5220\u9664\u5373\u53ef\u3002\r\n\r\n\u91cd\u70b9\u5728\u4e8e\u5220\u6389\u4e00\u6761\u6811\u8fb9\u65f6\u5bf9\u8fde\u901a\u6027\u7684\u53d8\u52a8\uff1a\u8bbe\u8fd9\u6761\u8fb9\u4e3a $u \\to v$\uff0c\u6b64\u65f6\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u6a2a\u53c9\u8fb9\u7684\u8bdd\uff0c\u5b50\u6811 $v$ \u4e2d\u6240\u6709\u7ed3\u70b9\u90fd\u5c06\u65e0\u6cd5\u5728\u4ece $1$ \u51fa\u53d1\u65f6\u5230\u8fbe\uff0c\u56e0\u6b64\u5b83\u4eec\u5931\u53bb\u4e86\u5b58\u5728\u4e8e\u751f\u6210\u6811\u4e0a\u7684\u610f\u4e49\uff08\u751f\u6210\u6811\u4e0a\u7684\u5bf9\u5e94\u70b9\u4ec0\u4e48\u7684\uff0c\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\u3002\u56e0\u4e3a\u5df2\u7ecf\u6ca1\u6709\u4efb\u4f55\u76f8\u5173\u8def\u5f84\uff0c\u53bb\u8981\u7ef4\u62a4\u4e86\u3002\uff09\uff0c\u5220\u4e86\u5c31\u884c\u3002\r\n\r\n\u628a\u6a2a\u53c9\u8fb9\u52a0\u4e0a\uff0c\u7b2c\u4e00\u70b9\u5c31\u662f\u5982\u679c\u5220\u6389\u7684\u5b50\u6811\u6709\u6a2a\u53c9\u8fb9\uff0c\u5c31\u5220\u6389\u8fd9\u6761\u6a2a\u53c9\u8fb9\uff0c\u4f46\u4e0d\u8981\u8dd1\u5230\u5b83\u7684\u7ec8\u70b9\u4e0a\u5220\u5b50\u6811\uff0c\u56e0\u4e3a\u53ea\u662f\u7834\u574f\u4e86\u6a2a\u53c9\u8fb9\u7ef4\u62a4\u7684\u53ef\u8fbe\u5173\u7cfb\uff0c\u751f\u6210\u6811\u7ef4\u62a4\u7684\u8def\u5f84\u4e0d\u4e00\u5b9a\u88ab\u7834\u574f\u3002\u4e4b\u540e\u53d1\u73b0\uff1a\u5982\u679c\u8981\u88ab\u5220\u6389\u7684\u5b50\u6811\u7684\u67d0\u4e2a\u70b9\u5b58\u5728\u672a\u88ab\u5220\u9664\u7684\u6a2a\u53c9\u5165\u8fb9\uff0c\u8bf4\u660e\u4ecd\u7136\u6709\u5176\u4ed6\u8def\u5f84\u53ef\u4ee5\u4ece $1$ \u5230\u8fbe\u8fd9\u4e2a\u70b9\uff0c\u800c\u672a\u88ab\u5220\u9664\u7684\u6a2a\u53c9\u5165\u8fb9\u7684\u8d77\u70b9\u4e00\u5b9a\u662f\u751f\u6210\u6811\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a\u6309\u7167\u524d\u6587\u63d0\u5230\u7684\u5220\u9664\u6761\u4ef6\uff0c\u6a2a\u53c9\u5165\u8fb9\u7684\u8d77\u70b9\u5982\u679c\u88ab\u5220\u4e86\u90a3\u4e48\u5b83\u4e00\u5b9a\u4e00\u8d77\u88ab\u5220\u4e86\u3002\r\n\r\n\u6b64\u65f6\u5c31\u597d\u529e\u4e86\uff1a\u5220\u9664\u7236\u4eb2\u6811\u8fb9\u540e\u505c\u6b62\u5bf9\u8be5\u70b9\u7684\u9012\u5f52\u5220\u9664\uff0c\u4efb\u9009\u4e00\u6761\u6a2a\u53c9\u5165\u8fb9\u53d8\u6210\u6811\u8fb9\uff0c\u8be5\u70b9\u7684\u7236\u4eb2\u53d8\u4e3a\u6a2a\u53c9\u5165\u8fb9\u7684\u8d77\u70b9\uff0c\u56e0\u4e3a\u539f\u6765\u662f\u4e00\u9897\u6811\uff0c\u4ee5\u4e0a\u64cd\u4f5c\u76f8\u5f53\u4e8e\u6362\u4e86\u7236\u4eb2\uff0c\u8fd8\u662f\u4e00\u68f5\u6811\u3002\u5982\u679c\u8fd9\u6b21\u5220\u9664\u5408\u6cd5\uff0c\u8fd9\u6b21\u5220\u9664\u5220\u53bb\u7684\u5176\u4ed6\u8fb9\u53ef\u4ee5\u5728\u5220\u6389\u8fd9\u6761\u8fb9\u4e4b\u540e\u7684\u4efb\u610f\u65f6\u523b\u88ab\u5220\u9664\u3002\r\n\r\n\u90a3\u4e48\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7ef4\u62a4\u751f\u6210\u6811\u7684\u6b63\u786e\u6027\u5c31\u663e\u7136\u4e86\uff1a\u5220\u8fb9\u65f6\u8981\u4e48\u7834\u574f\u4e86\u5f53\u524d\u7ef4\u62a4\u7684\u8def\u5f84\u8981\u4e48\u7834\u574f\u4e86\u5176\u4ed6\u8def\u5f84\uff0c\u5bf9\u4e8e\u540e\u8005\u76f8\u5f53\u4e8e\u5220\u4e86\u6a2a\u53c9\u8fb9\uff0c\u5bf9\u4e8e\u524d\u8005\u76f8\u5f53\u4e8e\u628a\u6a2a\u53c9\u8fb9\u6362\u6210\u4e86\u6811\u8fb9\u7ee7\u7eed\u7ef4\u62a4\u53ef\u8fbe\u6027\uff08\u8def\u5f84\uff09\uff0c\u518d\u88ab\u5220\u7684\u65f6\u5019\u63a5\u7740\u7ef4\u62a4\u5c31\u53ef\u4ee5\u4e86\u3002\u89c9\u5f97\u4e0d\u5bf9\u52b2\u7684\u8bdd\uff0c\u5982\u679c\u6709\u4e00\u6761\u8def\u5f84\u5168\u662f\u6a2a\u53c9\u8fb9\u6784\u6210\u7684\uff0c\u5f53\u539f\u56fe\u53ea\u6709\u8fd9\u6761\u8def\u5f84\u65f6\uff0c\u8fd9\u4e9b\u6a2a\u53c9\u8fb9\u5df2\u7ecf\u5168\u90e8\u53d8\u6210\u4e86\u6811\u8fb9\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\uff0c\u6bcf\u4e2a\u70b9\u88ab\u5220\u9664\u7684\u6700\u5927\u6b21\u6570\u662f\u5176\u5165\u5ea6\uff0c\u663e\u7136\u603b\u548c\u4e3a $O(n)$ \u7ea7\u522b\uff09\u3002\r\n\r\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a\u600e\u4e48\u5224\u65ad\u4e00\u6761\u8fb9\u80fd\u4e0d\u80fd\u5220\uff1f\r\n\r\n\u5f53\u524d DFS \u751f\u6210\u6811\u7ef4\u62a4\u7684\u662f\u539f\u56fe\u7684\u4e00\u6761\u8def\u5f84\uff0c\u5220\u6811\u8fb9\u76f8\u5f53\u4e8e\u76f4\u63a5\u7834\u574f\u6240\u7ef4\u62a4\u7684\u8def\u5f84\uff0c\u7ed3\u5408\u4e4b\u524d\u63d0\u5230\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u5f53\u5220\u6389\u6811\u4e0a\u8def\u5f84 $1\\to n$ \u4e2d\u7684\u4e00\u6761\u8fb9\uff0c\u8bbe\u5176\u7ec8\u70b9\u4e3a $u$\uff0c\u5f53\u4e14\u4ec5\u5f53 DFS \u751f\u6210\u6811\u4e0a\u8def\u5f84 $u\\to n$ \u4e2d\u5b58\u5728\u67d0\u4e2a\u70b9\u6709\u672a\u88ab\u5220\u53bb\u7684\u6a2a\u53c9\u5165\u8fb9\u65f6\uff0c\u8fd9\u6761\u8fb9\u53ef\u4ee5\u5220\u53bb\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u6240\u6709\u5df2\u7ecf\u8fdb\u884c\u4e86\u7684\u5220\u9664\u64cd\u4f5c\u7684\u5408\u6cd5\u6027\uff0c\u88ab\u5220\u6389\u7684\u5176\u4ed6\u8fb9\u53ef\u4ee5\u5728\u8fd9\u6b21\u64cd\u4f5c\u4e4b\u540e\u7684\u4efb\u610f\u65f6\u523b\u88ab\u5220\u53bb\uff0c\u56e0\u4e3a\u4e0d\u5bf9\u5f53\u524d\u4ee5\u53ca\u4ee5\u540e\u7ef4\u62a4\u7684\u8def\u5f84\u9020\u6210\u5f71\u54cd\u3002\r\n\r\n\u81f3\u4e8e\u7ef4\u62a4\u6362\u7236\u4eb2\u548c\u5173\u952e\u8def\u5f84\u4e0a\u662f\u5426\u5b58\u5728\u6a2a\u53c9\u5165\u8fb9\uff0c\u4e0a LCT\u3002\u524d\u8005\u663e\u7136\uff0c\u540e\u8005\u989d\u5916\u5f00\u4e2a\u54c8\u5e0c\u8868\u4ec0\u4e48\u7684\u7ef4\u62a4\u6a2a\u53c9\u8fb9\u96c6\u5408\u8f85\u52a9\u5728 LCT \u4e0a\u7684\u4fee\u6539\uff0c\u4e4b\u540e\u6811\u94fe\u4e0a\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\u8bdd\u8bf4\u90fd\u770b\u5230\u8fd9\u91cc\u4e86\uff0c\u5e94\u8be5\u90fd\u53d1\u73b0\u4e86\uff1a\u8fd9\u9897 DFS \u751f\u6210\u6811\u662f\u5bf9\u4e8e\u6240\u6709\u8def\u5f84\u4efb\u9009\u4e00\u6761\u7ef4\u62a4\uff0c\u4e0d\u5c31\u50cf LCT \u91cc\u7684\u5b9e\u94fe\u5256\u5206\u5417\uff1f\r\n\r\n\u6ce8\u610f\u6362\u7236\u4eb2\u7684\u65f6\u5019\u7ef4\u62a4\u513f\u5b50\u90fd\u6709\u8c01\uff08\u4e00\u822c\u60c5\u51b5\u4e0b\u5355\u7eaf\u7684 LCT \u96be\u4ee5\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\uff09\uff0c\u53ef\u4ee5\u62ff\u54c8\u5e0c\u8868\u6216\u8005\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\u513f\u5b50\u96c6\u5408\uff0c DFS \u65f6\u5bf9\u7740\u8fd9\u4e2a\u513f\u5b50\u96c6\u5408\u904d\u5386\u5373\u53ef\u3002\r\n\r\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f $\\Theta((q+n)\\log n)$\uff0c\u8c8c\u4f3c\u6bd4\u5b98\u65b9\u5c11\u4e00\u4e2a $\\log$\uff0c\u4f46\u7b97\u6cd5\u8d85\u7eb2\uff0c\u4f30\u8ba1\u8fd8\u66f4\u96be\u7801\uff0c\u5982\u6807\u9898\u6240\u8a00\uff0c\u662f\u4e2a\u4ee4\u4eba\u773c\u524d\u4e00\u9ed1\u7684\u89e3\u6cd5\u3002\r\n\r\n\u5b9e\u73b0\u7684\u8bdd\u7b14\u8005\u56e0\u4e3a\u4e00\u4e9b\u610f\u5916\u9000\u5f79\u4e86\uff0c\u6ca1\u5de5\u592b\u5199\uff0c\u5c31\u516c\u5f00\u4e5e\u8ba8\u4e00\u4efd\u5427\uff08bushi \u7b49\u6709\u65f6\u95f4\u4e86\u5c3d\u91cf\u53bb\u8865\u3002\r\n\r\n\u53e6\u5916\u95ee\u4e00\u4e0b\u6b63\u89e3......\u662f HASH \u52a0\u4e3b\u5e2d\u6811\u7684\u8bdd\uff0c\u4e3b\u5e2d\u6811\u4e0d\u662f NOI \u7ea7\u7b97\u6cd5\u5417\uff08\u5f52\u5c5e\u4e8e\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\uff0c\u5927\u6982\uff09\u3002\r\n\r\n\u53e6\uff1a\u611f\u8c22\u7ba1\u7406\u5458\u8010\u5fc3\u6307\u51fa\u9519\u8bef\uff0c\u8fd9\u7bc7\u9898\u89e3\u524d\u540e\u9001\u5ba1\u4e86\u6709\u56db\u4e94\u6b21\u5927\u6982\uff0c~~\u7b97\u4e0d\u7b97\u9a9a\u6270\u7ba1\u7406\u554a~~\u603b\u4e4b\u592a\u611f\u8c22\u4e86\u3002",
        "postTime": 1669009448,
        "uid": 456724,
        "name": "2020kanade",
        "ccfLevel": 3,
        "title": "\u3010\u4ee4\u4eba\u773c\u524d\u4e00\u9ed1\u3002\u3011P8860 \u52a8\u6001\u56fe\u8fde\u901a\u6027 \u53e3\u80e1\u9898\u89e3"
    }
]