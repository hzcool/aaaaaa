[
    {
        "content": "[\u8be5\u7bc7\u6587\u7ae0\u540c\u6b65\u4e8e\u6211\u7684\u4e2a\u4eba\u535a\u5ba2](https://www.cnblogs.com/henry-1202/p/9307927.html)\r\n\r\n\u4e8c\u53c9\u5806\u662f\u4e00\u79cd\u57fa\u7840\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u6c42\u51fa\u4e00\u7ec4\u6570\u636e\u4e2d\u7684\u6700\u5927\u6700\u5c0f\u503c\u3002C++ \u7684STL\u4e2d\u7684\u4f18\u5148\u961f\u5217\u5c31\u662f\u4f7f\u7528\u4e8c\u53c9\u5806\u3002\u4e0d\u8fc7\u521d\u8d5b\u7ecf\u5e38\u8003\u4e8c\u53c9\u5806\u7684\u539f\u7406\u3002\r\n\r\n\u4e8b\u5b9e\u4e0a\u652f\u6301\u7684\u64cd\u4f5c\u4e5f\u662f\u633a\u6709\u9650\u7684\uff08\u76f8\u5bf9\u4e8e\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u800c\u8a00\uff09\uff0c\u4e5f\u5c31\u63d2\u5165\uff0c\u67e5\u8be2\uff0c\u5220\u9664\u8fd9\u4e00\u7c7b\r\n\r\n**\u5bf9\u4e86\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8bb2\u5230\u7684\u5806\u90fd\u662f\u4e8c\u53c9\u5806\uff0c\u800c\u4e0d\u662f\u659c\u5806\uff0c\u5de6\u504f\u6811\uff0c\u6590\u6ce2\u90a3\u5951\u5806\u4ec0\u4e48\u7684~~\u6211\u90fd\u4e0d\u4f1a\u554a~~**\r\n\r\n\r\n------------\r\n\u66f4\u65b0\u6982\u8981\uff1a\r\n\r\n~~\u65e0\u826f\u535a\u4e3b\u7ec8\u4e8e\u60f3\u8d77\u6765\u8981\u66f4\u65b0\u8fa3~~\r\n\r\n**upd1:\u66f4\u65b05.2.2-\u5bf9\u4e8e\u8be5\u5b50\u76ee\u6240\u9610\u8ff0\u7684\u64cd\u4f5c\u201c\u7528\u4e24\u4e2a\u5806\u6765\u7ef4\u62a4\u4e00\u4e9b\u67e5\u8be2\u7b2ck\u5c0f/\u5927\u7684\u64cd\u4f5c\u201d\u66f4\u65b0\u4e86\u4e00\u9053\u4f8b\u9898-\u8be5\u64cd\u4f5c\u5bf9\u4e8e\u4e2d\u4f4d\u6570\u9898\u76ee\u7684\u6c42\u89e3**\r\n\r\n**upd2\uff1a\u66f4\u65b05.3-\u5229\u7528\u5806\u6765\u7ef4\u62a4\u53ef\u4ee5\u201c\u53cd\u6094\u7684\u8d2a\u5fc3\u201d**\r\n\r\ncontinue...\r\n\r\n------------\r\n\r\n\r\n# \u4e00.\u5806\u7684\u6027\u8d28\r\n\r\n**1.\u5806\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811**\r\n\r\n**2.\u5806\u7684\u9876\u7aef\u4e00\u5b9a\u662f\u201c\u6700\u5927\u201d\uff0c\u6700\u5c0f\u201d\u7684\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u4e00\u4e2a\u70b9\uff0c\u8fd9\u91cc\u7684\u5927\u548c\u5c0f\u5e76\u4e0d\u662f\u4f20\u7edf\u610f\u4e49\u4e0b\u7684\u5927\u548c\u5c0f\uff0c\u5b83\u662f\u76f8\u5bf9\u4e8e\u4f18\u5148\u7ea7\u800c\u8a00\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u628a\u4f18\u5148\u7ea7\u5b9a\u4e3a\u4f20\u7edf\u610f\u4e49\u4e0b\u7684\u5927\u5c0f\uff0c\u4f46\u4e00\u5b9a\u8981\u7262\u8bb0\u8fd9\u4e00\u70b9\uff0c\u521d\u5b66\u8005\u5bb9\u6613\u628a\u5806\u7684\u201c\u5927\u5c0f\u201d\u76f4\u63a5\u5b9a\u4e49\u4e3a\u4f20\u7edf\u610f\u4e49\u4e0b\u7684\u5927\u5c0f\uff0c\u67d0\u4e9b\u9898\u5c31\u4e0d\u662f\u6309\u6570\u5b57\u7684\u5927\u5c0f\u4e3a\u4f18\u5148\u7ea7\u6765\u8fdb\u884c\u5806\u7684\u64cd\u4f5c\u7684**\r\n\r\n\uff08\u4f46\u662f\u4e3a\u4e86\u8bb2\u89e3\u65b9\u4fbf\uff0c\u4e0b\u6587\u76f4\u63a5\u628a\u5806\u7684\u4f18\u5148\u7ea7\u5b9a\u4e3a\u4f20\u7edf\u610f\u4e49\u4e0b\u7684\u5927\u5c0f\uff0c~~\u6240\u4ee5\u4e0a\u9762\u8ddf\u6ca1\u8bb2\u6709\u4ec0\u4e48\u533a\u522b\uff1f~~\uff09\r\n\r\n**3.\u5806\u4e00\u822c\u6709\u4e24\u79cd\u6837\u5b50\uff0c\u5c0f\u6839\u5806\u548c\u5927\u6839\u5806\uff0c\u5206\u522b\u5bf9\u5e94\u7b2c\u4e8c\u4e2a\u6027\u8d28\u4e2d\u7684\u201c\u5806\u9876\u6700\u5927\u201d\u201c\u5806\u9876\u6700\u5c0f\u201d\uff0c\u5bf9\u4e8e\u5927\u6839\u5806\u800c\u8a00\uff0c\u4efb\u4f55\u4e00\u4e2a\u975e\u6839\u8282\u70b9\uff0c\u5b83\u7684\u4f18\u5148\u7ea7\u90fd\u5c0f\u4e8e\u5806\u9876\uff0c\u5bf9\u4e8e\u5c0f\u6839\u5806\u800c\u8a00\uff0c\u4efb\u4f55\u4e00\u4e2a\u975e\u6839\u8282\u70b9\uff0c\u5b83\u7684\u4f18\u5148\u7ea7\u90fd\u5927\u4e8e\u5806\u9876\uff08\u8fd9\u91cc\u7684\u6839\u5c31\u662f\u5806\u9876\u5566qwq\uff09**\r\n\r\n\u6765\u4e00\u5f20\u56fe\u4e86\u89e3\u4e00\u4e0b\u5806\uff08\u8fd9\u91cc\u662f\u5c0f\u6839\u5806\uff09\uff08\u539f\u8c05\u6211\u4e11\u964b\u65e0\u6bd4\u7684\u56fe\uff09\r\n\r\n![](https://i.loli.net/2018/07/13/5b48bcc426d83.png)\r\n\r\n\u4e0d\u96be\u770b\u51fa\uff0c**\u5bf9\u4e8e\u5806\u7684\u6bcf\u4e2a\u5b50\u6811\uff0c\u5b83\u540c\u6837\u4e5f\u662f\u4e00\u4e2a\u5806**\uff08\u56e0\u4e3a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u561b\uff09\r\n\r\n# \u4e8c.\u5806\u7684\u64cd\u4f5c\r\n\r\n## 1.\u63d2\u5165\r\n\r\n\u5047\u8bbe\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2a\u5806\u4e86\uff0c\u5c31\u662f\u4e0a\u9762\u90a3\u4e2a\r\n\r\n\u8fd9\u4e2a\u65f6\u5019\u4f60\u5982\u679c\u60f3\u8981\u7ed9\u5b83\u52a0\u5165\u4e00\u4e2a\u8282\u70b9\u600e\u4e48\u529e\uff0c\u6bd4\u5982\u8bf40\uff1f\r\n\r\n\u5148\u63d2\u5230\u5806\u5e95\uff08\u4e25\u683c\u610f\u4e49\u4e0a\u6765\u8bf4\u5176\u5b9e0\u662f\u57285\u7684\u5de6\u513f\u5b50\u7684\uff0c\u56fe\u6ca1\u753b\u597d\u653e\u4e0d\u4e0b\u53bb\uff0c\u4e0d\u8fc7\u4e5f\u4e0d\u5f71\u54cd\uff09\r\n\r\n\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u5b83\u6bd4\u5b83\u7684\u7236\u4eb2\u5c0f\u554a\uff0c\u90a3\u600e\u4e48\u529e\uff1f\u4e0d\u7b26\u5408\u5c0f\u6839\u5806\u7684\u6027\u8d28\u4e86\u554a\uff0c\u90a3\u5c31\u4ea4\u6362\u4e00\u4e0b\u4ed6\u4eec\u7684\u4f4d\u7f6e\r\n\r\n![](https://i.loli.net/2018/07/13/5b48bd1106211.png)\r\n\r\n\u4ea4\u6362\u4e4b\u540e\u8fd8\u662f\u53d1\u73b0\u4e0d\u7b26\u5408\u5c0f\u6839\u5806\u7684\u6027\u8d28\uff0c\u90a3\u4e48\u518d\u6362\r\n\r\n![\u4e0a\u6d6e2.png](https://i.loli.net/2018/07/13/5b48bd7c385b4.png)\r\n\r\n\u8fd8\u662f\u4e0d\u884c\uff0c\u518d\u6362\r\n\r\n![\u4e0a\u6d6e3.png](https://i.loli.net/2018/07/13/5b48bd5579ff1.png)\r\n\r\n\u597d\u4e86\uff0c\u8fd9\u4e0b\u5c31\u7b26\u5408\u5c0f\u6839\u5806\u7684\u6027\u8d28\u4e86\uff0c\u662f\u4e0d\u662f\u987a\u773c\u5f88\u591a\u4e86\uff1f~~\uff08\u5047\u7684\uff0c\u56fe\u8d8a\u6765\u8d8a\u4e11\uff0c\u539f\u8c05\u6211\u4e0d\u60f3\u518d\u753b\uff09~~\r\n\r\n![\u4e0a\u6d6e4.png](https://i.loli.net/2018/07/13/5b48bdc07f3bc.png)\r\n\r\n\u4e8b\u5b9e\u4e0a\u5806\u7684\u63d2\u5165\u5c31\u662f\u628a\u65b0\u7684\u5143\u7d20\u653e\u5230\u5806\u5e95\uff0c\u7136\u540e\u68c0\u67e5\u5b83\u662f\u5426\u7b26\u5408\u5806\u7684\u6027\u8d28\uff0c\u5982\u679c\u7b26\u5408\u5c31\u4e22\u5728\u90a3\u91cc\u4e86\uff0c\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u90a3\u5c31\u548c\u5b83\u7684\u7236\u4eb2\u4ea4\u6362\u4e00\u4e0b\uff0c\u4e00\u76f4\u4ea4\u6362\u4ea4\u6362\u4ea4\u6362\uff0c\u76f4\u5230\u7b26\u5408\u5806\u7684\u6027\u8d28\uff0c\u90a3\u4e48\u5c31\u63d2\u5165\u5b8c\u6210\u4e86\r\n\r\nCode\uff1a\r\n```cpp\r\nvoid swap(int &x,int &y){int t=x;x=y;y=t;}//\u4ea4\u6362\u51fd\u6570 \r\nint heap[N];//\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u5806\r\nint siz;//\u5806\u7684\u5927\u5c0f \r\nvoid push(int x){//\u8981\u63d2\u5165\u7684\u6570 \r\n\theap[++siz]=x;\r\n\tnow=siz;\r\n\t//\u63d2\u5165\u5230\u5806\u5e95 \r\n\twhile(now){//\u8fd8\u6ca1\u5230\u6839\u8282\u70b9\uff0c\u8fd8\u80fd\u4ea4\u6362 \r\n\t\tll nxt=now>>1;//\u627e\u5230\u5b83\u7684\u7236\u4eb2 \r\n\t\tif(heap[nxt]>heap[now])swap(heap[nxt],heap[now]);//\u7236\u4eb2\u6bd4\u5b83\u5927\uff0c\u90a3\u5c31\u4ea4\u6362 \r\n\t\telse break;//\u5982\u679c\u6bd4\u5b83\u7236\u4eb2\u5c0f\uff0c\u90a3\u5c31\u4ee3\u8868\u7740\u63d2\u5165\u5b8c\u6210\u4e86 \r\n\t\tnow=nxt;//\u4ea4\u6362 \r\n\t}\r\n\treturn; \r\n}\r\n```\r\n## 2.\u5220\u9664\r\n\r\n\u628a0\u63d2\u5165\u5b8c\u4ee5\u540e\uff0c\u5ffd\u7136\u4f60\u770b\u8fd9\u4e2a0\u4e0d\u723d\u4e86\uff0c\u672c\u6765\u90fd\u662f\u6b63\u6574\u6570\uff0c\u600e\u4e48\u5c31\u6df7\u8fdb\u6765\u4f60\u8fd9\u4e2a0\uff1f\r\n\r\n\u4e8e\u662f\u8fd9\u65f6\u5019\u4f60\u5c31\u60f3\u628a\u5b83\u5220\u9664\u6389\r\n\r\n\u600e\u4e48\u5220\u9664\uff1f\u5728\u5220\u9664\u7684\u8fc7\u7a0b\u4e2d\u8fd8\u662f\u8981\u7ef4\u62a4\u5c0f\u6839\u5806\u7684\u6027\u8d28\r\n\r\n\u5982\u679c\u4f60\u76f4\u63a5\u5220\u6389\u4e86\uff0c\u90a3\u5c31\u6ca1\u6709\u5806\u9876\u4e86\uff0c\u8fd9\u4e2a\u5806\u5c31\u76f4\u63a5\u4e71\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4fdd\u8bc1\u5220\u9664\u540e\u8fd9\u4e00\u6574\u4e2a\u5806\u8fd8\u662f\u4e2a\u5b8c\u597d\u7684\u5c0f\u6839\u5806\r\n\r\n![\u4e0a\u6d6e4.png](https://i.loli.net/2018/07/13/5b48bdc07f3bc.png)\r\n\r\n\u9996\u5148\u5728\u5b83\u7684\u4e24\u4e2a\u513f\u5b50\u91cc\u9762\uff0c\u627e\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\uff0c\u548c\u5b83\u4ea4\u6362\u4e00\u4e0b\uff0c\u4f46\u662f\u8fd8\u662f\u6ca1\u6cd5\u5220\u9664\uff0c\u56e0\u4e3a\u4e0b\u65b9\u8fd8\u6709\u8282\u70b9\uff0c\u90a3\u5c31\u7ee7\u7eed\u4ea4\u6362\r\n\r\n![\u4e0a\u6d6e3.png](https://i.loli.net/2018/07/13/5b48bd5579ff1.png)\r\n\r\n\u8fd8\u662f\u4e0d\u884c\uff0c\u518d\u6362\r\n\r\n![\u4e0a\u6d6e2.png](https://i.loli.net/2018/07/13/5b48bd7c385b4.png)\r\n\r\n\u518d\u6362\r\n\r\n![](https://i.loli.net/2018/07/13/5b48bd1106211.png)\r\n\r\n\u597d\u4e86\uff0c\u8fd9\u4e2a\u788d\u773c\u7684\u4e1c\u897f\u7ec8\u4e8e\u7684\u4e0b\u9762\u7ec8\u4e8e\u6ca1\u6709\u8282\u70b9\u4e86\uff0c\u8fd9\u65f6\u5019\u76f4\u63a5\u628a\u5b83\u6254\u6389\u5c31\u597d\u4e86\r\n\r\n![](https://i.loli.net/2018/07/13/5b48bcc426d83.png)\r\n\r\n\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u5220\u9664\u64cd\u4f5c\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u7684\u4ee3\u7801\u64cd\u4f5c\u4e2d\uff0c\u5e76\u4e0d\u662f\u8fd9\u6837\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u7684\uff0c\u6709\u4e00\u5b9a\u7684\u5fae\u8c03\uff0c\u4ee3\u7801\u4e2d\u662f\u76f4\u63a5\u628a\u5806\u9876\u548c\u5806\u5e95\u4ea4\u6362\u4e00\u4e0b\uff0c\u7136\u540e\u628a\u4ea4\u6362\u540e\u7684\u5806\u9876\u4e0d\u65ad\u4e0e\u5b83\u7684\u5b50\u8282\u70b9\u4ea4\u6362\uff0c\u76f4\u5230\u8fd9\u4e2a\u5806\u91cd\u65b0\u7b26\u5408\u5806\u6027\u8d28~~\uff08\u4f46\u662f\u4e0a\u9762\u7684\u65b9\u5f0f\u597d\u7406\u89e3\u554a\uff09~~\r\n\r\n\u624b\u5199\u5806\u7684\u5220\u9664\u652f\u6301\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684\u5220\u9664\uff0c\u4e0d\u8fc7STL\u53ea\u652f\u6301\u5806\u9876\u5220\u9664\uff0cSTL\u7684\u6211\u4eec\u540e\u9762\u518d\u8bb2\r\n\r\nCode\uff1a\r\n```cpp\r\nvoid pop(){\r\n\tswap(heap[siz],heap[1]);siz--;//\u4ea4\u6362\u5806\u9876\u548c\u5806\u5e95\uff0c\u7136\u540e\u76f4\u63a5\u5f39\u6389\u5806\u5e95 \r\n\tint now=1;\r\n\twhile((now<<1)<=siz){//\u5bf9\u8be5\u8282\u70b9\u8fdb\u884c\u5411\u4e0b\u4ea4\u6362\u7684\u64cd\u4f5c \r\n    \tint nxt=now<<1;//\u627e\u51fa\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50 \r\n        if(nxt+1<=siz&&heap[nxt+1]<heap[nxt])nxt++;//\u770b\u770b\u662f\u8981\u5de6\u513f\u5b50\u8fd8\u662f\u53f3\u513f\u5b50\u8ddf\u5b83\u6362 \r\n        if(heap[nxt]<heap[now])swap(heap[now],heap[nxt]);//\u5982\u679c\u4e0d\u7b26\u5408\u5806\u6027\u8d28\u5c31\u6362 \r\n        else break;//\u5426\u5219\u5c31\u5b8c\u6210\u4e86 \r\n        now=nxt;//\u5f80\u4e0b\u4e00\u5c42\u7ee7\u7eed\u5411\u4e0b\u4ea4\u6362 \r\n\t}\r\n}\r\n```\r\n## 3.\u67e5\u8be2\r\n\r\n\u56e0\u4e3a\u6211\u4eec\u4e00\u76f4\u7ef4\u62a4\u7740\u8fd9\u4e2a\u5806\u4f7f\u5b83\u6ee1\u8db3\u5806\u6027\u8d28\uff0c\u800c\u5806\u6700\u7b80\u5355\u7684\u67e5\u8be2\u5c31\u662f\u67e5\u8be2\u4f18\u5148\u7ea7\u6700\u4f4e/\u6700\u9ad8\u7684\u5143\u7d20\uff0c\u5bf9\u4e8e\u6211\u4eec\u7ef4\u62a4\u7684\u8fd9\u4e2a\u5806heap\uff0c\u5b83\u7684\u4f18\u5148\u7ea7\u6700\u4f4e/\u6700\u9ad8\u7684\u5143\u7d20\u5c31\u662f\u5806\u9876\uff0c\u6240\u4ee5\u67e5\u8be2\u4e4b\u540e\u8f93\u51faheap[1]\u5c31\u597d\u4e86\r\n\r\n\u4e00\u822c\u7684\u9898\u76ee\u91cc\u9762\u67e5\u8be2\u64cd\u4f5c\u662f\u548c\u5220\u9664\u64cd\u4f5c\u6346\u7ed1\u7684\uff0c\u67e5\u8be2\u5b8c\u540e\u987a\u4fbf\u5c31\u5220\u6389\u4e86\uff0c\u8fd9\u4e2a\u4e3b\u8981\u56e0\u9898\u800c\u5f02\r\n\r\n# \u4e09.\u5806\u7684STL\u5b9e\u73b0\r\n\r\n\u8fd9\u5e74\u5934\u771f\u7684\u6ca1\u51e0\u4e2a\u4eba\u5199\u624b\u5199\u5806~~\uff08\u53ef\u80fd\u6709\u60c5\u6000\u515a\uff1f\uff09~~\r\n\r\n\u4e00\u662f\u624b\u5199\u5806\u5bb9\u6613\u5199\u9519\u4ee3\u7801\u53c8\u591a\uff0c\u4e8c\u662fSTL\t\u76f4\u63a5\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u73b0\u5806\u7684\u7b80\u5355\u65b9\u5f0f\uff1a\u4f18\u5148\u961f\u5217\r\n\r\n\u624b\u5199\u5806\u548cSTL\u7684\u4f18\u5148\u961f\u5217\u6709\u4ec0\u4e48\t\u533a\u522b\uff1f~~\u6ca1\u6709\u533a\u522b~~\r\n\r\n\u901f\u5ea6\u65b9\u9762\uff0c\u624b\u5199\u5806\u4f1a\u504f\u5feb\u4e00\u70b9\uff0c\u4f46\u662f\u5982\u679c\u5f00\u4e86O2\u4f18\u5316\u4f18\u5148\u961f\u5217\u53ef\u80fd\u4f1a\u66f4\u5feb\uff1b\r\n\r\n\u4ee3\u7801\u5b9e\u73b0\u96be\u5ea6\u65b9\u9762\uff1a\u4f18\u5148\u961f\u5217\u5b8c\u7206\u624b\u5199\u5806\r\n\r\n\u8fd9\u4e24\u65b9\u9762\u7efc\u5408\u8d77\u6765\uff0c\u4e00\u822c\u90fd\u662f\u7528STL\u7684\u4f18\u5148\u961f\u5217\u6765\u5b9e\u73b0\u5806\uff0c~~\u7701\u9009\u5f00O2\u554a~~\r\n\r\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u524d\u9762\u8bb2\u5806\u7684\u64cd\u4f5c\u65f6\u7528\u624b\u5199\u5806\uff0c\u597d\u7406\u89e3\u561b\uff0c\u6700\u597d\u5148\u6839\u636e\u4e0a\u9762\u7684\u4ee3\u7801\u548c\u56fe\u7406\u89e3\u4e00\u4e0b\u5806\u662f\u600e\u4e48\u5b9e\u73b0\u90a3\u4e9b\u64cd\u4f5c\u7684\uff0c\u518d\u6765\u770b\u4e00\u4e0b\u4e0b\u9762\u7684STL\u7684\u64cd\u4f5c\r\n\r\n\u5b9a\u4e49\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff1a\r\n```cpp\r\n\u9996\u5148\u4f60\u9700\u8981\u4e00\u4e2a\u5934\u6587\u4ef6\uff1a#include<queue>\r\npriority_queue<int> q;//\u8fd9\u662f\u4e00\u4e2a\u5927\u6839\u5806q\r\npriority_queue<int,vector<int>,greater<int> >q;//\u8fd9\u662f\u4e00\u4e2a\u5c0f\u6839\u5806q\r\n//\u6ce8\u610f\u67d0\u4e9b\u7f16\u8bd1\u5668\u5728\u5b9a\u4e49\u4e00\u4e2a\u5c0f\u6839\u5806\u7684\u65f6\u5019greater<int>\u548c\u540e\u9762\u7684>\u8981\u9694\u4e00\u4e2a\u7a7a\u683c\uff0c\u4e0d\u7136\u4f1a\u88ab\u7f16\u8bd1\u5668\u8bc6\u522b\u6210\u4f4d\u8fd0\u7b97\u7b26\u53f7>>\r\n```\r\n\u4f18\u5148\u961f\u5217\u7684\u64cd\u4f5c\uff1a\r\n```\r\nq.top()//\u53d6\u5f97\u5806\u9876\u5143\u7d20\uff0c\u5e76\u4e0d\u4f1a\u5f39\u51fa\r\nq.pop()//\u5f39\u51fa\u5806\u9876\u5143\u7d20\r\nq.push()//\u5f80\u5806\u91cc\u9762\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\r\nq.empty()//\u67e5\u8be2\u5806\u662f\u5426\u4e3a\u7a7a\uff0c\u4e3a\u7a7a\u5219\u8fd4\u56de1\u5426\u5219\u8fd4\u56de0\r\nq.size()//\u67e5\u8be2\u5806\u5185\u5143\u7d20\u6570\u91cf\r\n```\r\n\u5e38\u7528\u4e5f\u5c31\u8fd9\u4e9b\uff0c\u8c8c\u4f3c\u8fd8\u6709\u5176\u4ed6\uff0c\u4e0d\u8fc7\u57fa\u672c\u4e5f\u7528\u4e0d\u5230\uff0c\u77e5\u9053\u4e0a\u9762\u90a3\u51e0\u4e2a\u4e5f\u5c31\u53ef\u4ee5\u4e86\r\n\r\n\u4e0d\u8fc7\u6709\u4e2a\u5c0f\u95ee\u9898\u5c31\u662fSTL\u53ea\u652f\u6301\u5220\u9664\u5806\u9876\uff0c\u800c\u4e0d\u652f\u6301\u5220\u9664\u5176\u4ed6\u5143\u7d20\r\n\r\n\u4f46\u662f\u95ee\u9898\u4e0d\u5927\uff0c\u5f00\u4e00\u4e2a\u6570\u7ec4del\uff0c\u5728\u8981\u5220\u9664\u5176\u4ed6\u5143\u7d20\u7684\u65f6\u5019\u76f4\u63a5\u5c31\u6807\u8bb0\u4e00\u4e0bdel[i]=1\uff0c\u8fd9\u91cc\u7684\u4e0b\u6807\u662f\u5143\u7d20\u7684\u503c\uff0c\u7136\u540e\u5728\u67e5\u8be2\u7684\u65f6\u5019\u78b0\u5230\u8fd9\u4e2a\u5143\u7d20\u88ab\u6807\u8bb0\u4e86\u76f4\u63a5\u5f39\u51fa\u7136\u540e\u7ee7\u7eed\u67e5\u8be2\u5c31\u53ef\u4ee5\u4e86\r\n\uff08\u524d\u4e24\u5929\u521a\u4ece\u5b66\u957f\u5904get\u8fd9\u4e2a\u59ff\u52bf\uff09\r\n\r\n\u53e6\u5916\u56e0\u4e3aSTL\u597d\u5199\uff0c\u4e0b\u9762\u5806\u7684\u5e94\u7528\u5168\u90e8\u90fd\u4f1a\u91c7\u7528STL\u7684\u4ee3\u7801\u5b9e\u73b0~~\uff08\u61d2\u554a\uff0c\u5982\u679c\u6709\u653e\u4ee3\u7801\u7684\u8bdd\uff09~~\r\n\r\n\u8fd9\u91cc\u8865\u4e00\u4e0b\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5728STL\u7684\u4f18\u5148\u961f\u5217\u4e2d\u5e94\u7528\u5230\u7684\u77e5\u8bc6\r\n\r\n**\u91cd\u8f7d\u8fd0\u7b97\u7b26\u662f\u4ec0\u4e48\uff1f**\r\n\r\n**\u628a\u4e00\u79cd\u8fd0\u7b97\u7b26\u53d8\u6210\u53e6\u5916\u4e00\u79cd\u8fd0\u7b97\u7b26\uff08\u6ce8\u610f\uff0c\u90fd\u5fc5\u987b\u662f\u539f\u6709\u7684\u8fd0\u7b97\u7b26\uff09**\uff0c\u6bd4\u5982\u628a<\u53f7\u91cd\u8f7d\u6210>\u53f7\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5b66\u8fc7STL\u4e2d\u7684sort\u7684\u540c\u5b66\u5e94\u8be5\u4f1a\u6bd4\u8f83\u719f\u6089\r\n\r\n\u8fd9\u4e2a\u5728\u4f18\u5148\u961f\u5217\u4e2d\u6709\u4ec0\u4e48\u7528\u5904\u5462\uff1f\r\n\r\n\u4e4b\u524d\u6211\u4eec\u5c31\u8bb2\u5230\u4e86\uff0c\u5927\u6839\u5806\uff0c\u5c0f\u6839\u5806\u7684\u201c\u5927\u201d\u548c\u201c\u5c0f\u201d\u90fd\u4e0d\u662f\u4f20\u7edf\u610f\u4e49\u4e0b\u7684\u201c\u5927\u201d\u548c\u201c\u5c0f\u201d\uff0c\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5728STL\u7684\u4f18\u5148\u961f\u5217\u4e2d\u5c31\u662f\u7528\u6765\u89e3\u51b3\u8fd9\u79cd\u201c\u975e\u4f20\u7edf\u610f\u4e49\u7684\u2018\u5927\u2019\u548c\u2018\u5c0f\u2019\u201d\u7684\r\n\r\n\u73b0\u5728\u4f60\u6709\u4e00\u4e2a\u6570\u5217\uff0c\u5b83\u6709\u6743\u503c\u548c\u4f18\u5148\u7ea7\u4e24\u79cd\u5c5e\u6027\uff0c\u6743\u503c\u5373\u8be5\u6570\u7684\u5927\u5c0f\uff0c\u4f18\u5148\u7ea7\u662f\u7ed9\u5b9a\u7684\uff0c\u73b0\u5728\u8981\u4f60\u6309\u7167\u4f18\u5148\u7ea7\u7684\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u8fd9\u4e2a\u6570\u5217\r\n\r\n~~\u8fd9\u4e0d\u662fTreap\u5417\uff1f\u8fd9\u4e0d\u662fsort\u5417\uff1f~~\r\n\r\n\u4ee5\u4e0a\u4e24\u4e2a\u4e1c\u897f\u90fd\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u8fd9\u9053\u9898\uff08\u9003\uff0c\u800c\u4e14\u5c31\u5b9e\u7528\u6027\u800c\u8a00\uff0csort\u7528\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u662f\u6700\u65b9\u4fbf\u7684\uff0c\u4f46\u662f\u6211\u4eec\u73b0\u5728\u8981\u8bb2\u7684\u505a\u6cd5\u662f\u4f7f\u7528**\u5806\u6392\u5e8f**\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u8fd9\u9053\u9898\uff08\u5806\u6392\u5e8f\u662f\u4ec0\u4e48\uff1f\u4e0b\u6587\u5806\u7684\u5e94\u7528\u4e2d\u6709\u63d0\u5230\uff09\r\n\r\n\u9996\u5148\u5e94\u8be5\u60f3\u5f97\u5230\u7ed3\u6784\u4f53\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\r\n```cpp\r\nstruct node{\r\n\tint val,rnd;\r\n}a[100];\r\n```\r\n\u4f46\u662f\u4f7f\u7528\u4f20\u7edf\u505a\u6cd5\u662f\u884c\u4e0d\u901a\u7684\uff0c\u5728\u5c0f\u6839\u5806\u4e2d\u662f\u901a\u8fc7\u6bd4\u8f83\u6570\u7684\u5927\u5c0f\u6765\u786e\u5b9a\u5404\u4e2a\u5143\u7d20\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u8fd9\u4e2aa\u6570\u7ec4\uff0c\u4f60\u662f\u8981\u5bf9\u6bd4\u6743\u503cval\u7684\u503c\uff0c\u8fd8\u662f\u8981\u5bf9\u6bd4\u4f18\u5148\u7ea7rnd\u7684\u503c\uff1f\r\n\r\n\u8fd9\u65f6\u5019**\u91cd\u8f7d\u8fd0\u7b97\u7b26**\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\r\n\r\n\u6211\u4eec\u5728\u7ed3\u6784\u4f53\u91cc\u9762\u518d\u52a03\u884c\u4e1c\u897f\r\n\r\n```\r\nstruct node{\r\n\tint val,rnd;\r\n    bool operator < (const node&x) const {\r\n\t\treturn rnd<x.rnd;\r\n\t}\r\n}a[100];\r\n```\r\n\r\n\u8fd9\u4e2a\u73a9\u610f\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5199\u5462\uff1f\r\n\r\n\u9996\u5148\u8fd9\u4e2a\u73a9\u610f\u662fbool\u7c7b\u578b\u7684\uff0c\u56e0\u4e3a\u4f60\u53ea\u9700\u8981\u5224\u65ad\u8fd9\u4e24\u4e2a\u662f\u5927\uff0c\u8fd8\u662f\u5c0f\uff1b\u7136\u540e\uff0c\u8981\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5c31\u5fc5\u987b\u52a0\u4e00\u4e2aoperator\u8fd9\u4e2a\u73a9\u610f\uff0c\u4e0d\u7136\u8ba1\u7b97\u673a\u600e\u4e48\u77e5\u9053\u4f60\u8981\u5e72\u561b\uff1f\u540e\u9762\u63a5\u4e00\u4e2a\u4f60\u8981\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\uff0c\u8fd9\u91cc\u662f\u201c<\u201d\uff0c\u518d\u540e\u9762\u7684\u62ec\u53f7\u91cc\u9762\u7684\u4e1c\u897f\u5219\u662f\u4f60\u8981\u6bd4\u8f83\u7684\u6570\u636e\u7c7b\u578b\uff0c\u8fd9\u91cc\u662f\u6570\u636e\u7c7b\u578b\u4e3anode\uff0c\u5e76\u4e14\u52a0\u4e86\u4e00\u4e2a\u6307\u9488&\uff0c\u5c06\u5bf9\u8fd9\u4e2ax\u7684\u4fee\u6539\u540c\u6b65\u5230\u4f60\u5b9e\u9645\u4e0a\u8981\u4fee\u6539\u7684\u6570\u636e\u90a3\u91cc\u3002\u7136\u540e\u5c31\u662f\u8bb0\u5f97\u52a0\u90a3\u4e24\u4e2aconst\r\n\r\n\u7136\u540e\u4e24\u4e2a\u5927\u62ec\u53f7\u91cc\u9762\u5c31\u662f\u4f60\u91cd\u8f7d\u7684\u5185\u5bb9\u4e86\uff0c\u8fd9\u91cc\u662f\u628a\u6bd4\u8f83\u6570\u7684\u5927\u5c0f\u7684\u5c0f\u4e8e\u53f7\uff0c\u91cd\u8f7d\u6210\u6bd4\u8f83node\u8fd9\u4e2a\u6570\u636e\u7c7b\u578b\u91cc\u9762\u7684\u4f18\u5148\u7ea7\u7684\u5927\u5c0f\r\n\r\n\u8fd9\u4e2a\u73a9\u610f\u8bb2\u7684\u6bd4\u8f83\u591a\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u662f\u4e00\u4e2a\u5f88\u96be\u61c2\u7684\u4e1c\u897f~~\uff08\u5bf9\u6211\u6765\u8bf4\uff1f\u53cd\u6b63\u5f53\u65f6\u5b66\u7684\u65f6\u5019\u5c31\u662f\u611f\u89c9\u5f88\u6666\u6da9\u96be\u61c2\uff0c\u8fd9\u91cc\u5c31\u5c3d\u91cf\u5199\u8be6\u7ec6\u4e00\u70b9\uff0c\u7ed9\u548c\u5f53\u521d\u7684\u6211\u4e00\u6837\u7684\u840c\u65b0\u770b\u4e00\u4e0b\uff09~~\r\n\r\n\u800c\u4e14\u5728\u5b9e\u9645\u4e2d\uff0c\u8fd9\u4e2a\u4e1c\u897f\u7684\u7528\u5904\u4e5f\u5f88\u5927\uff0c\u5c31\u8bf4\u5728\u5806\u91cc\u9762\u7684\u5e94\u7528\uff0c\u5728NOIP\u63d0\u9ad8\uff0c\u7701\u9009\u7684\u90a3\u4e2a\u7ea7\u522b\uff0c\u5c31\u7edd\u5bf9\u4e0d\u53ef\u80fd\u8003\u88f8\u7684\u5806\u7684\uff0c\u5f80\u5f80\u4f60\u8981\u6bd4\u8f83\u7684\u4e1c\u897f\u5c31\u4e0d\u662f\u6570\u7684\u5927\u5c0f\u4e86\uff0c\u800c\u662f\u6309\u7167\u9898\u76ee\u8981\u6c42\u7075\u6d3b\u66f4\u6539\uff0c\u8fd9\u65f6\u5019\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5c31\u5e2e\u5f97\u4e0a\u5f88\u5927\u5fd9\u4e86\r\n\r\n**\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u5728\u524d\u9762\u53cd\u590d\u5f3a\u8c03\uff0c\u5806\u91cc\u9762\u7684\u5927\u5c0f\uff0c\u5e76\u975e\u4f20\u7edf\u610f\u4e49\u4e0b\u7684\u5927\u5c0f**\r\n\r\n# \u56db.\u5806\u7684\u590d\u6742\u5ea6\r\n\r\n\u56e0\u4e3a\u5806\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u6570\u4e3an\u7684\u5806\uff0c\u5b83\u7684\u9ad8\u5ea6\u4e0d\u4f1a\u8d85\u8fc7log2n\r\n\r\n\u6240\u4ee5\u5bf9\u4e8e\u63d2\u5165\uff0c\u5220\u9664\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3aO(log2n)\r\n\r\n\u67e5\u8be2\u5806\u9876\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3aO(1)\r\n\r\n# \u4e94.\u5806\u7684\u5e94\u7528\r\n\r\n## 1.\u5806\u6392\u5e8f\r\n\r\n\u5176\u5b9e\u5c31\u662f\u7528\u8981\u6392\u5e8f\u7684\u5143\u7d20\u5efa\u4e00\u4e2a\u5806\uff08\u89c6\u60c5\u51b5\u800c\u5b9a\u662f\u5927\u6839\u5806\u8fd8\u662f\u5c0f\u6839\u5806\uff09\uff0c\u7136\u540e\u4f9d\u6b21\u5f39\u51fa\u5806\u9876\u5143\u7d20\uff0c\u6700\u540e\u5f97\u5230\u7684\u5c31\u662f\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u4e86\r\n\r\n\u4f46\u662f\u88f8\u7684\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u6211\u4eec\u6709sort\u800c\u4e14sort\u8fd8\u6bd4\u5806\u6392\u5feb\uff0c\u6240\u4ee5\u5806\u6392\u4e00\u822c\u90fd\u6ca1\u6709\u8fd9\u79cd\u6a21\u677f\u9898\uff0c\u4e00\u822c\u662f\u5229\u7528\u5806\u6392\u7684\u601d\u60f3\uff0c\u7136\u540e\u6765\u641e\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u64cd\u4f5c\uff0c\u7b2c2\u4e2a\u5e94\u7528\u5c31\u6709\u6d89\u53ca\u5230\u4e00\u70b9\u5806\u6392\u7684\u601d\u60f3\r\n\r\n## 2.\u7528\u4e24\u4e2a\u5806\u6765\u7ef4\u62a4\u4e00\u4e9b\u67e5\u8be2\u7b2ck\u5c0f/\u5927\u7684\u64cd\u4f5c\r\n\r\n- [\u6d1b\u8c37P1801 \u9ed1\u5323\u5b50](https://www.luogu.org/problemnew/show/P1801)  \r\n\r\n\u5229\u7528\u4e00\u4e2a\u5927\u6839\u5806\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u7ef4\u62a4\u7b2ck\u5c0f\uff0c\u5e76\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf  \r\n\u4e0d\u5f3a\u5236\u5728\u7ebf\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u8bfb\u5165\u6240\u6709\u5143\u7d20\uff0c\u679a\u4e3e\u8be2\u95ee\uff0c\u56e0\u4e3a\u8981\u8be2\u95ee\u7b2ck\u5c0f\uff0c\u6240\u4ee5\u628a\u524d\u9762\u7684\u7b2ck\u4e2a\u5143\u7d20\u90fd\u653e\u8fdb\u5927\u6839\u5806\u91cc\u9762\uff0c\u7136\u540e\u5982\u679c\u5143\u7d20\u6570\u91cf\u5927\u4e8ek\uff0c\u5c31\u628a\u5806\u9876\u5f39\u6389\u653e\u5230\u5c0f\u6839\u5806\u91cc\u9762\uff0c\u4f7f\u5927\u6839\u5806\u7684\u5143\u7d20\u4e25\u683c\u7b49\u4e8ek\uff0c\u8fd9\u6837\u8fd9\u6b21\u8be2\u95ee\u7684\u7ed3\u679c\u5c31\u662f\u5c0f\u6839\u5806\u7684\u5806\u9876\u4e86\uff08\u524d\u9762k-1\u5c0f\u7684\u5143\u7d20\u90fd\u5728\u5927\u6839\u5806\u91cc\u9762\u4e86\uff09\u3002\u8bb0\u5f97\u5728\u5b8c\u6210\u8fd9\u6b21\u8be2\u95ee\u540e\u91cd\u65b0\u628a\u5c0f\u6839\u5806\u7684\u5806\u9876\u653e\u5230\u5927\u6839\u5806\u91cc\u9762\u5c31\u597d\u3002\r\n- [\u6d1b\u8c37P1090 \u5408\u5e76\u679c\u5b50](https://www.luogu.org/problemnew/show/P1090)  \r\n\r\n\u76f4\u63a5\u4ece\u6240\u6709\u679c\u5b50\u4e2d\u627e\u5230\u6700\u5c0f\u5806\u6700\u5c0f\u7684\u679c\u5b50\uff0c\u5408\u5e76\u4e4b\u540e\u518d\u653e\u5165\u5806\u4e2d\u3002\r\n- [\u6d1b\u8c37P1168 \u4e2d\u4f4d\u6570](https://www.luogu.org/problemnew/show/P1168)\r\n\r\n\u4e2d\u4f4d\u6570\u4e5f\u662f\u8fd9\u79cd\u64cd\u4f5c\u53ef\u4ee5\u89e3\u51b3\u7684\u4e00\u79cd\u7ecf\u5178\u95ee\u9898\uff0c\u4f46\u662f\u5b9e\u9645\u5e94\u7528\u4e0d\u5927\uff08\u8fd9\u79cd\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a$O(nlogn)$\uff0c\u7136\u800c\u6c42\u89e3\u4e2d\u4f4d\u6570\u6709$O(n)$\u505a\u6cd5\uff09\r\n\r\nLuogu\u4e2d\u4e5f\u6709\u6b64\u7c7b\u4f8b\u9898\uff0c\u9898\u89e3\u5185\u4e5f\u8bb2\u7684\u6bd4\u8f83\u6e05\u695a\u4e86\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\uff0c\u8bfb\u8005\u53ef\u5f53\u505a\u62d3\u5c55\u7ec3\u4e60\u8fdb\u884c\u98df\u7528\r\n\r\n\u63d0\u793a\uff1a\u8bbe\u5e8f\u5217\u957f\u5ea6\u4e3a$N$\uff0c\u5219\u4e2d\u4f4d\u6570\u5176\u5b9e\u7b49\u4ef7\u4e8e\u5e8f\u5217\u4e2d$N/2$\u5927\u7684\u5143\u7d20\r\n\r\n```\r\n#include <cstdio>\r\n#include <vector>\r\n#include <cstring>\r\n#include <queue>\r\n#define ll long long\r\n#define inf 1<<30\r\n#define il inline \r\n#define in1(a) read(a)\r\n#define in2(a,b) in1(a),in1(b)\r\n#define in3(a,b,c) in2(a,b),in1(c)\r\n#define in4(a,b,c,d) in2(a,b),in2(c,d)\r\nil int max(int x,int y){return x>y?x:y;}\r\nil int min(int x,int y){return x<y?x:y;}\r\nil int abs(int x){return x>0?x:-x;}\r\nil void swap(int &x,int &y){int t=x;x=y;y=t;}\r\nil void readl(ll &x){\r\n    x=0;ll f=1;char c=getchar();\r\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\r\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\r\n    x*=f;\r\n}\r\nil void read(int &x){\r\n    x=0;int f=1;char c=getchar();\r\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\r\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\r\n    x*=f;\r\n}\r\nusing namespace std;\r\n/*===================Header Template=====================*/\r\n#define N 200010\r\npriority_queue<int,vector<int>,greater<int> > q;\r\npriority_queue<int> q1;\r\nint n,m,a[N],b[N];\r\nint main(){\r\n    in2(n,m);\r\n    for(int i=1;i<=n;i++)in1(a[i]);\r\n    for(int i=1;i<=m;i++)in1(b[i]);\r\n    int i=1;\r\n    for(int j=1;j<=m;j++){\r\n        for(;i<=b[j];i++){\r\n            q1.push(a[i]);\r\n            if(q1.size()==j)q.push(q1.top()),q1.pop();\r\n        }\r\n        printf(\"%d\\n\",q.top());\r\n        q1.push(q.top());q.pop();\r\n    }\r\n    return 0;\r\n}\r\n```\r\n\r\n**\u4e8b\u5b9e\u4e0a\u5806\u5728\u96be\u5ea6\u8f83\u9ad8\u7684\u9898\u76ee\u65b9\u9762\u66f4\u591a\u7684\u7528\u4e8e\u7ef4\u62a4\u4e00\u4e9b\u8d2a\u5fc3\u64cd\u4f5c\uff0c\u4ee5\u964d\u4f4e\u590d\u6742\u5ea6\uff0c\u5f88\u5c11\u4f1a\u6709\u9898\u76ee\u662f\u4ee5\u5806\u4e3a\u6b63\u89e3\u6765\u51fa\u7684\u4e86\uff0c\u66f4\u591a\u7684\uff0c\u5806\u5728\u8fd9\u4e9b\u9898\u76ee\u4e2d\u5904\u4e8e\u201c\u5de5\u5177\u201d\u7684\u4f4d\u7f6e**\r\n\r\n## 3.\u5229\u7528\u5806\u6765\u7ef4\u62a4\u53ef\u4ee5\u201c\u53cd\u6094\u7684\u8d2a\u5fc3\u201d\r\n\r\n\u9898\u76ee\uff1a[Luogu P2949 [USACO09OPEN]\u5de5\u4f5c\u8c03\u5ea6Work Scheduling](https://www.luogu.org/problemnew/show/P2949)\r\n\r\n\u8fd9\u9053\u9898\u7684\u8bdd\u7b97\u662f\u8fd9\u79cd\u7c7b\u578b\u5e94\u7528\u7684\u7ecf\u5178\u9898\u4e86\r\n\r\n\u9996\u5148\u53ea\u8981\u6709\u8d2a\u5fc3\u57fa\u7840\u5c31\u4e0d\u96be\u60f3\u51fa\u4e00\u4e2a\u89e3\u9898\u601d\u8def\uff1a\u56e0\u4e3a\u6240\u6709\u5de5\u4f5c\u7684\u82b1\u8d39\u65f6\u95f4\u90fd\u4e00\u6837\uff0c\u6211\u4eec\u53ea\u8981\u5c3d\u91cf\u7684\u9009\u83b7\u5f97\u5229\u6da6\u9ad8\u7684\u5de5\u4f5c\uff0c\u4ee5\u53ca\u5bf9\u4e8e\u6bcf\u4e2a\u6240\u9009\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u5c3d\u91cf\u8ba9\u5b83\u5728\u66f4\u9760\u8fd1\u5b83\u7684\u7ed3\u675f\u65f6\u95f4\u7684\u5730\u65b9\u518d\u6765\u5de5\u4f5c\r\n\r\n\u4f46\u662f\u4e24\u79cd\u6761\u4ef6\u6211\u4eec\u5e76\u4e0d\u597d\u7ef4\u62a4\uff0c\u8fd9\u79cd\u4e24\u4e2a\u9650\u5236\u6761\u4ef6\u7684\u9898\u76ee\u4e5f\u662f\u6709\u4e00\u79cd\u633a\u7ecf\u5178\u7684\u505a\u6cd5\u7684\uff1a\u5bf9\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\u8fdb\u884c\u6392\u5e8f\uff0c\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u9650\u5236\u6761\u4ef6\u4f7f\u7528\u67d0\u4e9b\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\uff08\u5982treap\uff0c\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4\u4e4b\u7c7b\uff09\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u5728\u6211\u4eec\u4eca\u5929\u7684\u8ba8\u8bba\u8303\u7574QAQ\r\n\r\n\u8003\u8651\u600e\u4e48\u5c06\u8fd9\u4e24\u4e2a\u6761\u4ef6\u201c\u6709\u673a\u7edf\u4e00\u201d\u3002\r\n\r\n\u6392\u5e8f\u7684\u601d\u8def\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u5de5\u4f5c\u6309\u7167\u5b83\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u4ece\u800c\u6765\u7ef4\u62a4\u6211\u4eec\u7684\u7b2c\u4e8c\u4e2a\u8d2a\u5fc3\u7684\u60f3\u6cd5\u3002\r\n\r\n\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u6837\u505a\u6240\u5e26\u6765\u7684\u4e00\u4e2a\u51b2\u7a81\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u622a\u6b62\u65f6\u95f4\u5728d\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u6709\u53ef\u80fd\u628a0~d\u79d2\u5168\u90fd\u5b89\u6392\u6ee1\u4e86\uff08\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u4efb\u52a1\u7684\u622a\u6b62\u65f6\u95f4\u76f8\u540c\uff09\r\n\r\n\u600e\u4e48\u89e3\u51b3\u8fd9\u79cd\u51b2\u7a81\u5e76\u4fdd\u8bc1\u7b54\u6848\u7684\u6700\u6709\u6027\u5462\uff1f\r\n\r\n\u4e00\u4e2a\u76f4\u89c2\u7684\u60f3\u6cd5\u5c31\u662f\u628a\u6211\u4eec\u76ee\u524d\u5df2\u9009\u7684\u5de5\u4f5c\u5168\u90e8\u90fd\u6bd4\u8f83\u4e00\u4e0b\uff0c\u7136\u540e\u9009\u51fa\u4e00\u4e2a\u521b\u9020\u7684\u5229\u6da6\u6700\u4f4e\u7684\u5de5\u4f5c\uff08\u5047\u8bbe\u5f53\u524d\u6b63\u5728\u51b3\u7b56\u7684\u8fd9\u4e2a\u5de5\u4f5c\u4ef7\u503c\u5f88\u9ad8\uff09\uff0c\u7136\u540e\u820d\u5f03\u6389\u5229\u6da6\u6700\u4f4e\u7684\u5de5\u4f5c\uff0c\u628a\u8fd9\u4e2a\u5de5\u4f5c\u653e\u8fdb\u53bb\u539f\u6765\u7684\u90a3\u4e2a\u4f4d\u7f6e\u3002\uff08\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6309\u7167\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f\u4e86\uff0c\u6240\u4ee5\u820d\u5f03\u7684\u90a3\u4e2a\u4efb\u52a1\u7684\u622a\u6b62\u5b8c\u6210\u65f6\u95f4\u4e00\u5b9a\u5728\u5f53\u524d\u51b3\u7b56\u7684\u5de5\u4f5c\u7684\u4e4b\u524d\uff09\r\n\r\n\u4f46\u662f\u5bf9\u4e8e\u5927\u5c0f\u9ad8\u8fbe$10^6$\u7684n\uff0c$O(n^2)$\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\uff0c\u7ed3\u5408\u4e0a\u9762\u7684\u5185\u5bb9\uff0c\u8bfb\u8005\u4eec\u5e94\u8be5\u4e5f\u4e0d\u96be\u60f3\u51fa\uff0c\u53ef\u4ee5\u4f7f\u7528\u5806\u6765\u4f18\u5316\u8fd9\u4e2a\u64cd\u4f5c\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u5728\u9009\u7528\u4e86\u8fd9\u4e2a\u5de5\u4f5c\u4e4b\u540e\uff0c\u5c06\u5f53\u524d\u5de5\u4f5c\u653e\u5165\u5c0f\u6839\u5806\u4e2d\uff0c\u5982\u679c\u5806\u5185\u5143\u7d20\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u5de5\u4f5c\u7684\u622a\u6b62\u65f6\u95f4\u4e86\uff08\u56e0\u4e3a\u8fd9\u9053\u9898\u4e2d\uff0c\u4e00\u4e2a\u5de5\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u662f\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5f53\u524d\u5de5\u4f5c\u8ddf\u5806\u9876\u5de5\u4f5c\u7684\u4ef7\u503c\u6bd4\u8f83\uff0c\u5982\u679c\u5f53\u524d\u5de5\u4f5c\u7684\u4ef7\u503c\u8f83\u5927\uff0c\u5c31\u53ef\u4ee5\u5c06\u5806\u9876\u5f39\u51fa\uff0c\u7136\u540e\u5c06\u65b0\u7684\u5de5\u4f5c\u653e\u5165\u5806\u4e2d\uff0c\u7ed9\u7b54\u6848\u52a0\u4e0a\u5f53\u524d\u5de5\u4f5c\u51cf\u53bb\u5806\u9876\u5143\u7d20\u7684\u4ef7\u503c\uff08\u56e0\u4e3a\u5806\u9876\u5143\u7d20\u5728\u653e\u5165\u5806\u4e2d\u7684\u65f6\u5019\u4ef7\u503c\u5df2\u7ecf\u7d2f\u52a0\u8fdb\u5165\u7b54\u6848\u4e86\uff09\u3002\u5982\u679c\u5806\u5185\u5143\u7d20\u5c0f\u4e8e\u622a\u6b62\u65f6\u95f4\u90a3\u4e48\u76f4\u63a5\u653e\u5165\u5806\u4e2d\u5c31\u597d\r\n\r\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u4ee5$O(nlogn)$\u7684\u6548\u7387\u901a\u8fc7\u672c\u9898\r\n\r\n\u800c\u901a\u8fc7\u8fd9\u9053\u9898\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u6709\u5728\u4f18\u5316\u6211\u4eec\u601d\u8003\u51fa\u6765\u7684\u8d2a\u5fc3\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u65f6\uff0c\u6211\u4eec\u624d\u7528\u5230\u4e86\u5806\u3002\u6b63\u5982\u6211\u4eec\u5148\u524d\u6240\u8bf4\u5230\u7684\uff0c\u5728\u5927\u90e8\u5206\u6709\u4e00\u5b9a\u96be\u5ea6\u7684\u9898\u76ee\u91cc\uff0c\u5806\u90fd\u662f\u4ee5\u4e00\u4e2a\u201c\u5de5\u5177\u201d\u7684\u8eab\u4efd\u51fa\u73b0\uff0c\u7528\u4e8e\u4f18\u5316\u7b97\u6cd5\uff08\u5927\u591a\u65f6\u5019\u662f\u8d2a\u5fc3\uff09\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7b49\r\n\r\n```\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n\r\nusing namespace std ;\r\n\r\n#define N 100010\r\n#define int long long\r\n\r\nint n , m ;\r\nstruct node {\r\n\tint d,p ;\r\n\tbool operator < ( const node &x ) const { return p>x.p; }\r\n} a[ N ] ;\r\n\r\nbool cmp( node a , node b ) {\r\n\treturn a.d==b.d?a.p>b.p:a.d<b.d;\r\n}\r\n\r\npriority_queue< node > q ;\r\n\r\nsigned main() {\r\n\tscanf( \"%lld\" , &n ) ;\r\n\tfor( int i = 1 ; i <= n ; i ++ ) {\r\n\t\tscanf( \"%lld%lld\" , &a[i].d , &a[i].p ) ;\r\n\t}\r\n\tsort(a+1,a+n+1,cmp);\r\n\tint ans = 0 ;\r\n\tfor( int i = 1 ; i <= n ; i ++ ) {\r\n\t\tif( a[i].d<=(int)q.size() ) {\r\n\t\t\tif( q.top().p<a[i].p ) {\r\n\t\t\t\tans += a[i].p-q.top().p ; \r\n\t\t\t\tq.pop() ; \r\n\t\t\t\tq.push(a[i]) ;\r\n\t\t\t}\r\n\t\t} else q.push(a[i]) , ans += a[ i ].p ;\r\n\t}\r\n\tprintf( \"%lld\\n\" , ans ) ;\r\n}\r\n```\r\n\r\ncontinue...\u6301\u7eed\u66f4\u65b0\u4e2d",
        "postTime": 1531493789,
        "uid": 36526,
        "name": "henry_y",
        "ccfLevel": 0,
        "title": "\u6d45\u6790\u57fa\u7840\u6570\u636e\u7ed3\u6784-\u4e8c\u53c9\u5806"
    },
    {
        "content": "> \u5806\uff08$ \\rm Heap$\uff09\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u4e00\u7c7b\u7279\u6b8a\u7684\u6570\u636e\u7ed3\u6784\u7684\u7edf\u79f0\u3002\u5806\u901a\u5e38\u662f\u4e00\u4e2a\u53ef\u4ee5\u88ab\u770b\u505a\u4e00\u68f5\u6811\u7684\u6570\u7ec4\u5bf9\u8c61\u3002\u5806\u603b\u662f\u6ee1\u8db3\u4e0b\u5217\u6027\u8d28\uff1a\n\n> - \u5806\u4e2d\u67d0\u4e2a\u7ed3\u70b9\u7684\u503c\u603b\u662f\u4e0d\u5927\u4e8e\u6216\u4e0d\u5c0f\u4e8e\u5176\u7236\u7ed3\u70b9\u7684\u503c\uff1b\n> - \u5806\u603b\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\n\n\u4e0a\u9762\u63d0\u5230\u7684\u6027\u8d28 $1$ \u4e2d\uff0c\u5982\u679c\u4e0d\u5927\u4e8e\u5373\u4e3a\u5927\u6839\u5806\uff0c\u5982\u679c\u4e0d\u5c0f\u4e8e\u5373\u4e3a\u5c0f\u6839\u5806\uff0c\u770b\u56fe\uff1a\n\n![](https://s1.ax1x.com/2023/01/28/pSaPP0S.png)\n\n\u5982\u4e0a\u662f\u5927\u6839\u5806\u3002\n\n![](https://s1.ax1x.com/2023/01/28/pSaPDtH.png)\n\n\u5982\u4e0a\u662f\u5c0f\u6839\u5806\u3002\n\n\u5806\u5b9e\u8d28\u4e0a\u662f\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u4f7f\u7528\u4e00\u7ef4\u6570\u7ec4\uff0c\u7f16\u53f7\u4e3a $i$ \u7684\u7ed3\u70b9\u7684\u7236\u7ed3\u70b9\u7f16\u53f7\u4e3a $\\left\\lfloor\\dfrac{i}{2}\\right\\rfloor$\uff0c\u5de6\u513f\u5b50\u7f16\u53f7\u4e3a $2 \\times i$\uff0c\u53f3\u513f\u5b50\u7f16\u53f7\u4e3a $2 \\times i +1$\u3002\n\n\u56e0\u4e3a\u6027\u8d28 $1$\uff0c\u5806\u8fd8\u80fd\u7528\u4e8e\u6392\u5e8f\u3002\n\n#   \n\n**\u624b\u5199\u5806\uff1a**\n\n\u624b\u5199\u5806\u867d\u7136\u9ebb\u70e6\uff0c\u4f46\u662f\u6548\u7387\u6bd4\u8f83\u9ad8\uff0c\u5c3d\u7ba1\u6709\u66ff\u4ee3\u54c1\u4f46\u662f\u8fd9\u662f\u7406\u89e3\u5806\u53ca\u4e8c\u53c9\u6811\u601d\u60f3\u7684\u6700\u597d\u65b9\u6cd5\uff0c**\u4ee5\u4e0b\u8bb2\u89e3\u4e3a\u5c0f\u6839\u5806**\u3002\n\n\u9996\u5148\u4e09\u4e2a `#define`\n\n```cpp\n#define f(x) (((x)-1)/2)\n#define l(x) ((x)*2+1)\n#define r(x) ((x)*2+2)\n```\n\n\u4e09\u4e2a\u5b8f\u5b9a\u4e49\u5206\u522b\u8868\u793a $x$  \u7ed3\u70b9\u7684**\u7236\u4eb2**\uff0c**\u5de6\u513f\u5b50**\uff0c**\u53f3\u513f\u5b50**\uff08$+1+2$  \u4e3a\u4e2a\u4eba\u559c\u597d\uff09\u3002\n\n\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n1. `push` \u5411\u5806\u4e2d\u538b\u5165\u4e00\u4e2a\u5143\u7d20\n2. `pop` \uff08\u4e5f\u6709\u5199\u6cd5\u5199\u4f5c `del`($\\tt delete$)\uff09\u4ece\u5806\u4e2d\u5f39\u51fa\uff08\u5220\u9664\uff09\u5806\u9876\u5143\u7d20\n3. `top` \u67e5\u8be2\u5806\u9876\u5143\u7d20\n\n- `push`\uff1a\n\n\u538b\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u9996\u5148\u5806\u5143\u7d20\u6570\u91cf\uff08\u5927\u5c0f\uff09`siz` \u9700\u8981 $+1$\uff0c\u4ece\u5806\u5e95\u52a0\u5165\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5c0f\u6839\u5806\u7684\u6027\u8d28\uff08\u89c1\u5806\u7684\u6027\u8d28 $1$\uff09\uff0c\u5219\u4e0d\u65ad\u4e0a\u8c03\u76f4\u81f3\u6ee1\u8db3\u6027\u8d28\uff08\u5373\u7236\u7ed3\u70b9\u5c0f\u4e8e\u5f53\u524d\u7ed3\u70b9\uff09\u3002\n\n\u4f8b\u5982\u5bf9\u6b64\u5806\u6267\u884c `push(0)`\n\n![](https://s1.ax1x.com/2023/01/28/pSaPDtH.png)\n\n\u9996\u5148\u5728\u5806\u5e95\u63d2\u5165\uff1a\n\n![](https://s1.ax1x.com/2023/01/28/pSaiNCj.png)\n\n\u56e0\u4e3a $3>0$ \u6240\u4ee5\u4e0a\u8c03\uff1a\n\n![](https://s1.ax1x.com/2023/01/28/pSaioVO.png)\n\n\u56e0\u4e3a $1>0$ \u6240\u4ee5\u7ee7\u7eed\u4e0a\u8c03\uff1a\n\n![](https://s1.ax1x.com/2023/01/28/pSai7Ie.png)\n\n\u56e0\u4e3a $0<1$ \u6240\u4ee5\u64cd\u4f5c\u7ed3\u675f\u3002\n\n`push` \u51fd\u6570\u4e3a\uff1a\n\n```cpp\nvoid push(int x) {\n\tint pos = siz++;//\u5728\u5806\u5e95\u63d2\u5165\n\t/*\u4e0a\u8c03\u64cd\u4f5c*/while (pos > 0) {\n\t\tif (heap[f(pos)] <= x) {//\u5982\u679c\u7236\u7ed3\u70b9\u5c0f\u4e8e\u5f53\u524d\u7ed3\u70b9\uff0c\u6ee1\u8db3\u6027\u8d28\n\t\t\tbreak;//\u505c\u6b62\n\t\t}\n\t\theap[pos] = heap[f(pos)], pos = f(pos);//\u4e92\u6362\u4f4d\u7f6e\n\t}\n\theap[pos] = x;//\u786e\u5b9a\u4f4d\u7f6e\u540e\u8d4b\u503c\n    return;\n}\n```\n\n- `pop`\uff1a\n\n\u9996\u5148\u4f7f\u7528\u5806\u5e95\u7ed3\u70b9\u66ff\u6362\u6389\u5806\u9876\u5143\u7d20\uff08\u5148\u5220\u6389\u5806\u9876\u5143\u7d20\uff09\uff0c\u7136\u540e\u5bf9\u66ff\u6362\u4e0a\u6765\u7684\u7ed3\u70b9\u4e0d\u65ad\u4e0b\u8c03\u76f4\u81f3\u6ee1\u8db3\u6027\u8d28\u3002\n\n\u6211\u4eec\u5bf9\u521a\u521a\u8fdb\u884c\u8fc7 `push` \u64cd\u4f5c\u7684\u5806\u8fdb\u884c `pop` \u64cd\u4f5c\uff1a\n\n![](https://s1.ax1x.com/2023/01/28/pSai7Ie.png)\n\n\u6267\u884c `pop` \u4f7f\u7528 $3$ \u4ee3\u66ff $0$ \u53d8\u4e3a\uff1a\n\n![](https://s1.ax1x.com/2023/01/28/pSaF9Ig.png)\n\n\u56e0\u4e3a $3>1$ \u6240\u4ee5\u4e0b\u8c03\uff1a\n\n![](https://s1.ax1x.com/2023/01/28/pSaFFRs.png)\n\n\u56e0\u4e3a $1$ \u5df2\u7ecf\u662f\u6839\u7ed3\u70b9\uff08\u6574\u4e2a\u5806/\u6574\u68f5\u6811\u4e2d\u6700\u5c0f\u7684\uff09\uff0c\u6240\u4ee5\u64cd\u4f5c\u7ed3\u675f\u3002\n\n`pop` \u51fd\u6570\u4e3a\uff1a\n\n```cpp\nvoid pop() {\n\tint pos = 0, x = heap[--siz];\n\twhile (l(pos) < siz) {\n\t\tint t = (heap[l(pos)] < heap[r(pos)]) ? l(pos) : r(pos);//\u627e\u8f83\u5c0f\u513f\u5b50\n\t\t/*\u4e0b\u8c03\u64cd\u4f5c*/if (heap[t] >= x) {\n\t\t\tbreak;\n\t\t}\n\t\theap[pos] = heap[t], pos = t;\n\t}\n\n\theap[pos] = x;//\u540c\u4e0a\n  \treturn;\n}\n```\n\n- `top`\uff1a\n\n\u8fd4\u56de\u5806\u9876\u5143\u7d20\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684\u5143\u7d20\u3002\n\n![](https://s1.ax1x.com/2023/01/28/pSaFFRs.png)\n\n\u6267\u884c `top` \uff0c\u8fd4\u56de\u9876\u7aef\u7684 $1$ \u4e14 $1$ \u4e3a\u5806\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\u3002\n\n`top` \u51fd\u6570\u4e3a\uff1a\n\n```cpp\nint top() {\n\treturn heap[0];\n}\n```\n\n#    \n\n**\u4ee3\u7801**\uff1a\n\n_\u6b64\u4ee3\u7801\u53ef\u8fc7\u6a21\u677f\u9898_\n\n```cpp\n#include <bits/stdc++.h>\n#define f(x) (((x)-1)/2)\n#define l(x) ((x)*2+1)\n#define r(x) ((x)*2+2)\n#define JS ios::sync_with_stdio(false),cin.tie(nullptr),cout.tie(nullptr)\nusing namespace std;\nint heap[1000001], siz;\n\nvoid push(int x) {\n\tint pos = siz++;\n\twhile (pos > 0) {\n\t\tif (heap[f(pos)] <= x) {\n\t\t\tbreak;\n\t\t}\n\t\theap[pos] = heap[f(pos)], pos = f(pos);\n\t}\n\theap[pos] = x;\n\treturn;\n}\n\nvoid pop() {\n\tint pos = 0, x = heap[--siz];\n\twhile (l(pos) < siz) {\n\t\tint t = (heap[l(pos)] < heap[r(pos)]) ? l(pos) : r(pos);\n\t\tif (heap[t] >= x) {\n\t\t\tbreak;\n\t\t}\n\t\theap[pos] = heap[t], pos = t;\n\t}\n\theap[pos] = x;\n\treturn;\n}\n\nint top() {\n\treturn heap[0];\n}\nint T, num, op;\n\nint main() {\n\tJS;\n\tcin >> T;\n\twhile (T--) {\n\t\tcin >> op;\n\t\tif (op == 1) {\n\t\t\tcin >> num;\n\t\t\tpush(num);\n\t\t}\n\t\tif (op == 2) {\n\t\t\tcout << top() << '\\n';\n\t\t}\n\t\tif (op == 3) {\n\t\t\tpop();\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n#   \n\n**STL**\n\nSTL \u5b9e\u73b0\u7684\u5806\u6709\u4e24\u79cd\uff1a\n\n1. `std::heap`\uff08\u5806\uff09\n\n2. `std::priority_queue`\uff08\u4f18\u5148\u961f\u5217\uff09\n\n- `std::heap`\n\n\u5728\u5934\u6587\u4ef6 `<algotithm>` \u4e2d\uff0c\u4f7f\u7528 `heap` \u9700 `include` \u6216\u4f7f\u7528\u4e07\u80fd\u5934\u3002\n\n`make_heap()`\uff1a\n\n\u5148\u6307\u5b9a\u4e00\u4e2a\u5bb9\u5668\u7684\u8303\u56f4\u5efa\u5806\uff0c\u5e38\u7528 `vector`\uff0c\u5efa\u5806\u6267\u884c\u540e\u6700\u5927\u503c\u5728\u6240\u7ed9\u8303\u56f4\u7684\u6700\u5de6\u7aef\uff0c**\u5176\u4ed6\u503c\u5e76\u672a\u6392\u5e8f**\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\uff1a`make_heap(v.begin(),v.end,_Comp/*\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u975e\u5fc5\u8981*/);`_`v` \u4ee3\u8868 `vector` \u7684\u540d\u79f0_\n\n`v.push_back()` \u538b\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u4f46\u5143\u7d20\u5e76\u672a\u6392\u5e8f\uff08\u6ca1\u6709\u8fdb\u884c\u4e0a\u8c03\u64cd\u4f5c\uff09\u3002\n\n`push_heap()` \u5bf9\u521a\u521a\u538b\u5165\u5143\u7d20\u7684\u5806\u6267\u884c\u4e0a\u8c03\uff0c\u7528\u6cd5\uff1a`push_heap(v.begin(),v.end(),cmp/*\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u975e\u5fc5\u8981*/);`\n\n`pop_heap()` \u7b49\u4ef7\u4e8e\u624b\u5199\u5806\u7684 `pop` \u5f39\u51fa\uff08\u5220\u9664\uff09\u5806\u9876\uff08\u6700\u5927\u503c\uff09\uff0c\u7528\u6cd5\uff1a`pop_heap(v.begin(),v.end(),cmp/*\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u975e\u5fc5\u8981*/);`\n\n`sort_heap()` \u6267\u884c\u5806\u6392\u5e8f\uff0c\u53ef\u5f97\u5230\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217\uff0c\u7528\u6cd5\uff1a`sort_heap(v.begin(),v.end(),cmp/*\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u975e\u5fc5\u8981*/);`\n\n- `std::priority_queue`\uff1a\n\n\u5e95\u5c42\u4f7f\u7528 `std::heap` \u5b9e\u73b0\u3002\n\n\u5b9a\u4e49\uff1a`priority_queue<T/*\u6570\u636e\u7c7b\u578b*/,Cotainer/*\u5bb9\u5668*/,Compare/*\u6bd4\u8f83\u89c4\u5219\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49*/>`\n\n\u81ea\u5e26\u4e24\u79cd\u6bd4\u8f83\u51fd\u6570\uff1a\n\n1. `greater<T/*\u6570\u636e\u7c7b\u578b*/>` \u5c0f\u6839\u5806\n2. `less<T/*\u6570\u636e\u7c7b\u578b*/>` \u5927\u6839\u5806\n\n\u64cd\u4f5c\uff1a\n\n`push()` \u538b\u5165\u5143\u7d20\uff0c\u6784\u9020\u5b8c\u6bd5\u540e\u538b\u5165\uff08\u6267\u884c\u4e0a\u8c03\uff09\u3002\n\n`emplace()`\u540c\u65f6\u6267\u884c\u6784\u9020\u548c\u538b\u5165\uff08\u6267\u884c\u4e0a\u8c03\uff09\u3002\n\n`pop()` \u5f39\u51fa\u5806\u9876\u3002\n\n`top()` \u8fd4\u56de\u5806\u9876\u5143\u7d20\u3002\n\n`size()` \u8fd4\u56de\u5806\u5927\u5c0f\uff08\u5143\u7d20\u4e2a\u6570\uff09\u3002\n\n`empty()` \u67e5\u8be2\u5806\u662f\u5426\u4e3a\u7a7a\uff0c\u8fd4\u56de\u503c\u4e3a `bool` \u7c7b\u578b\uff0c\u5806\u4e3a\u7a7a\u65f6\u8fd4\u56de `true`\uff0c\u5426\u5219\u8fd4\u56de `false`\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\u90fd\u4e3a\uff1a`q.\u6210\u5458\u51fd\u6570()` _`q` \u4ee3\u8868 `priority_queue` \u7684\u540d\u79f0_\u3002\n\n#   \n\n**pb__ds**\n\n`pb__ds` \uff08$\\tt Policy-Based\\ Data\\ Structures$\uff09\u5e93\u5305\u542b\u4e8e `__gnu_pbds` \u547d\u540d\u7a7a\u95f4\u91cc\uff0c\u4f7f\u7528\u5176\u4e2d\u7684\u5806\u9700\u8981\u4e24\u4e2a\u5934\u6587\u4ef6\uff1a\n\n```cpp\n#include <ext/pb_ds/assoc_container.hpp> \n#include <ext/pb_ds/priority_queue.hpp> \n```\n\n**\u4e07\u80fd\u5934\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\uff0c`<bits/stdc++.h>` \u53ea\u5305\u542b\u6807\u51c6\u5e93\u7684\u6240\u6709\u5934\u6587\u4ef6\uff0c\u800cpb__ds\u5e93\u662f\u6269\u5c55\u5e93\uff01**\n\n\u5b9a\u4e49\u65b9\u6cd5\uff1a\n\n`__gnu_pbds::priority_queue<T, Compare = std::less<T>, Tag = __gnu_pbds::pairing_heap_tag, Allocator = std::allocator<char>>`\n\n`Tag` \u51b3\u5b9a\u4e86\u5806\u7684\u7c7b\u578b\uff0c\u5171\u6709\u4e94\u79cd\u5806\uff1a\n\n1. `__gnu_pbds::pairing_heap_tag` \u914d\u5bf9\u5806 `push,pop` \u6548\u7387\u8f83\u597d\uff0c`push,join` \u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(1)$\uff0c\u4f46 `pop` \u7684\u6700\u5dee\u590d\u6742\u5ea6\u5f88\u9ad8\u3002\n2. `__gnu_pbds::binary_heap_tag` \u4e8c\u53c9\u5806 `push,pop` \u6548\u7387\u9ad8\u3002\n3. `__gnu_pbds::binomial_heap_tag` \u4e8c\u9879\u5806 `push,pop` \u6548\u7387\u8f83\u5dee\uff0c\u4f46 `pop` \u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u6162\u53ea\u6709\u4e9a\u7ebf\u6027\u3002\n4. `__gnu_pbds::rc_binomial_heap_tag` \u5197\u4f59\u8ba1\u6570\u4e8c\u9879\u5806 \u76f8\u6bd4\u4e8c\u9879\u5806 `push,pop` \u66f4\u5dee\uff0c\u4f46\u662f `push` $\\mathcal{O}(1)$\u3002\n5. `__gnu_pbds::thin_heap_tag` \u6590\u6ce2\u90a3\u5951\u5806\uff08\u6ce8\uff1a\u5408\u5e76\u5806\u7684\u590d\u6742\u5ea6\u4e0e\u6590\u6ce2\u90a3\u5951\u5806\u4e0d\u540c\uff09\u9002\u5408\u56fe\u8bba\u7b97\u6cd5\uff0c\u5728\u4e00\u4e9b\u65b9\u9762\u751a\u81f3\u4f18\u4e8e\u6590\u6ce2\u90a3\u5951\u5806\uff0c\u4e0d\u8fc7\u7531\u4e8e\u5c01\u88c5\u8fc7\u7d27\uff0c\u5e38\u6570\u5927\uff0c\u53cd\u800c\u5728\u975e\u56fe\u8bba\u7b97\u6cd5\u4e0a\u6700\u52a3\u3002\n\n\u64cd\u4f5c\uff1a\n\n1. `push()` \u538b\u5165\u5143\u7d20\u3002\n2. `pop()` \u5f39\u51fa\u5806\u9876\u5143\u7d20\u3002\n3. `top()` \u8fd4\u56de\u5806\u9876\u5143\u7d20\u3002\n4. `empty()` \u8fd4\u56de\u662f\u5426\u4e3a\u7a7a\uff08\u8fd4\u56de\u503c `bool` \u7c7b\u578b\uff09\u3002\n5. `size()` \u8fd4\u56de\u5806\u5927\u5c0f\u3002\n6. `modify(iterator, key)` \u4fee\u6539\u8fed\u4ee3\u5668\u4f4d\u7f6e\u7684\u503c\u3002\n7. `erase(iterator)` \u5220\u9664\u8fed\u4ee3\u5668\u4f4d\u7f6e\u7684\u503c\u3002\n8. `join()` \u628a\u53e6\u4e00\u4e2a\u5806\u548c\u5f53\u524d\u5806\u5408\u5e76\u5e76\u6e05\u7a7a\u88ab\u5408\u5e76\u7684\u5806\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n$\\begin{array}{llllll} \n& \\text { push } & \\text {pop } & \\text { modify } & \\text { erase } & \\text { join } \\\\\n\\small \\text { std::priority\\_queue } & \\Theta(n) / \\Theta(\\log n) &\\Theta(\\log n) & \\Theta(n \\log n) & \\Theta(n \\log n) & \\Theta(n \\log n) \\\\\n\\small \\text { \\_\\_gnu\\_pbds::pairing\\_heap\\_tag } & \\mathcal{O}(1) & \\Theta(n) / \\Theta(\\log n) &\\Theta(n) / \\Theta(\\log n) & \\Theta(n) / \\Theta(\\log n)& \\mathcal{O}(1) \\\\\n\\small \\text { \\_\\_gnu\\_pbds::binary\\_heap\\_tag } & \\Theta(n) / \\Theta(\\log n) &\\Theta(n) / \\Theta(\\log n) &\\Theta(n) & \\Theta(n) & \\Theta(n) \\\\\n\\small \\text { \\_\\_gnu\\_pbds::binomial\\_heap\\_tag } & \\Theta(\\log n) / \\mathcal{O}(1) &\\Theta(\\log n) & \\Theta(\\log n) & \\Theta(\\log n) & \\Theta(\\log n) \\\\\n\\small \\text { \\_\\_gnu\\_pbds::rc\\_binomial\\_heap\\_tag } & \\mathcal{O}(1) & \\Theta(\\log n) & \\Theta(\\log n) & \\Theta(\\log n) & \\Theta(\\log n) \\\\\n\\small \\text { \\_\\_gnu\\_pbds::thin\\_heap\\_tag } & \\mathcal{O}(1) & \\Theta(n) / \\Theta(\\log n) &\\Theta(\\log n) / \\mathcal{O}(1) &\\Theta(n) / \\Theta(\\log n) & \\mathcal{O}(n)\n\\end{array}$\n\n\n#   \n\n**\u6590\u6ce2\u90a3\u5951\u5806**\uff1a\n\n\u6590\u6ce2\u90a3\u5951\u5806\u662f\u5806\u7684\u96c6\u5408\uff0c\u6bd4\u4e8c\u53c9\u5806\u62e5\u6709\u66f4\u9ad8\u7684\u6548\u7387\uff0c\u4f46\u662f\u7531\u4e8e\u5e38\u6570\u6bd4\u8f83\u5927\u800c\u4e14\u4e0d\u597d\u5199\u6240\u4ee5\u4e0d\u5e38\u7528\u3002\n\n**\u5806\u4f18\u5316 dijkstra**\uff1a\n\n\u6bcf\u6b21\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb\u7684\u65f6\u5019\u628a\u5bf9\u5e94\u7684\u5143\u7d20\u4e0a\u8c03\uff0c\u6bcf\u6b21\u4ece\u5c0f\u6839\u5806\u4e2d\u53d6\u5806\u9876\u505a\u4e0b\u4e00\u6b21\u8981\u7528\u7684\u9876\u70b9\uff0c\u4ece\u590d\u6742\u5ea6 $\\mathcal{O}(V^2)$ \u4f18\u5316\u5230 $\\mathcal{O}(E \\log V)$\u3002\n\n#   \n\n**\u590d\u6742\u5ea6**\uff1a\n\n\u9664\u5efa\u5806\u548c `top()` \u64cd\u4f5c\u662f $\\mathcal{O}(1)$ \u5916\uff0c\u5176\u4f59\u64cd\u4f5c\u5168\u90e8\u4e3a $\\mathcal{O}(\\log n)$\u3002\n\n#    \n\n**\u4f8b\u9898**\uff1a\n\n[P3378 \u3010\u6a21\u677f\u3011\u5806](https://www.luogu.com.cn/problem/P3378)\n\n[P3377 \u3010\u6a21\u677f\u3011\u5de6\u504f\u6811\uff08\u53ef\u5e76\u5806)](https://www.luogu.com.cn/problem/P3377)\n\n[P1628 \u5408\u5e76\u5e8f\u5217](https://www.luogu.com.cn/problem/P1628)",
        "postTime": 1674907804,
        "uid": 713955,
        "name": "__er",
        "ccfLevel": 0,
        "title": "\u7b97\u6cd5\u7b14\u8bb0-\u5806"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3378)\n\n\u4e00\u9053\u5c0f\u6839\u5806\u6a21\u677f\u9898\u3002\n\n\u5728\u505a\u8fd9\u9053\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u4e0b\u5c0f\u6839\u5806\u662f\u4ec0\u4e48\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u5c0f\u6839\u5806\u662f\u4e00\u79cd\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a**\u7236\u7ed3\u70b9**\u7684\u6743\u503c\u603b\u662f\u5c0f\u4e8e\u6216\u7b49\u4e8e**\u5b50\u8282\u70b9**\u6743\u503c\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u56e0\u6b64\uff0c\u4e0d\u96be\u770b\u51fa\uff0c\u4e00\u4e2a\u5c0f\u6839\u5806\u7684\u5806\u9876\uff08\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\uff09\u5e94\u8be5\u662f\u8fd9\u4e2a\u5806\uff08\u6811\uff09\u4e2d\u6743\u503c**\u6700\u5c0f\u7684**\u7ed3\u70b9\u3002\n\n\u7b80\u5355\u4ecb\u7ecd\u5b8c\u4e86\u5c0f\u6839\u5806\uff0c\u6211\u4eec\u518d\u4ecb\u7ecd\u4e0b\u5982\u4f55\u5b58\u50a8\u3002\n\n### \u5b58\u50a8\n\n\u6211\u4eec\u8003\u8651\u7528\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u5b58\u50a8\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u5806\u91cc\u7684\u5143\u7d20\u4e2a\u6570\u3002\n\n```cpp\nint heap[1000005]; // \u7528\u6570\u7ec4\u5b58\u50a8\nint cnt; // \u8bb0\u5f55\u5806\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u4e5f\u662f\u4e0b\u4e00\u4e2a\u5143\u7d20\u63d2\u5165\u8fdb\u6765\u7684\u4f4d\u7f6e\n```\n\n------------\n\n\u5b66\u4f1a\u4e86\u5982\u4f55\u5b58\u50a8\u5c0f\u6839\u5806\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5b9e\u73b0\u51e0\u4e2a\u64cd\u4f5c\uff1a\n\n- \u63d2\u5165\u4e00\u4e2a\u6570\n\n- \u67e5\u8be2\u5806\u9876\n\n- \u5220\u9664\u5806\u9876\n\n### \u63d2\u5165\u4e00\u4e2a\u6570\n\n\u6211\u4eec\u9700\u8981\u5728\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u63d2\u5165\uff0c\u7136\u540e\u4ece\u4e0b\u5f80\u4e0a\u8fdb\u884c\u7ef4\u62a4\u3002\u5982\u679c\u53d1\u73b0**\u7236\u7ed3\u70b9**\u7684\u6743\u503c\u5927\u4e8e**\u5b50\u7ed3\u70b9**\u7684\u6743\u503c\uff0c\u5219\u5c06**\u5b50\u7ed3\u70b9**\u4e0e**\u7236\u7ed3\u70b9**\u8fdb\u884c\u4ea4\u6362\uff0c\u7136\u540e\u7ee7\u7eed\u5f80\u4e0a\u8fdb\u884c\u641c\u7d22\u3002\n\n```cpp\nvoid xds(int cur) { \n    int fa = (cur - 1) / 2; // \u7236\u4eb2\u7ed3\u70b9\u7684\u4f4d\u7f6e\n    if (heap[fa] > heap[cur]) { // \u5982\u679c\u4e0d\u5408\u6cd5\n        swap(heap[fa], heap[cur]); // \u8fdb\u884c\u4ea4\u6362\n        xds(fa); // \u7ee7\u7eed\u5f80\u4e0a\u7ef4\u62a4\n    }\n}\nvoid insert(int x) {\n    heap[cnt] = x; // \u63d2\u5165\n    xds(cnt++); // \u7ef4\u62a4\n}\n```\n\n------------\n\n### \u67e5\u8be2\u5806\u9876\n\n\u4e4b\u524d\u8bf4\u8fc7\uff0c\u5806\u9876\u5e94\u8be5\u662f\u6574\u4e2a\u5806\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u800c\u6211\u4eec\u63d2\u5165\u7ef4\u62a4\u662f\u4ece\u4e0b\u5f80\u4e0a\u8fdb\u884c\u7ef4\u62a4\uff08\u5bf9\u4e8e\u6574\u4e2a\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\u662f\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u7ef4\u62a4\uff09\u7684\uff0c\u56e0\u6b64\u5806\u9876\u4e3a `heap[0]`\u3002\n\n------------\n\n### \u5220\u9664\u5806\u9876\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u5806\u9876\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u4e92\u6362\uff0c\u7136\u540e\u5c06\u957f\u5ea6\u51cf $1$\uff0c\u5c31\u76f8\u5f53\u4e8e\u5220\u6389\u4e86\u8fd9\u4e2a\u5143\u7d20\u3002\u4e4b\u540e\u6211\u4eec**\u4ece\u4e0a\u5f80\u4e0b**\u7ef4\u62a4\u4e00\u904d\uff0c\u6211\u4eec\u5206\u6210\u6ca1\u6709\u5b50\u7ed3\u70b9\uff0c\u6709\u4e00\u4e2a\u5b50\u7ed3\u70b9\uff0c\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\u8fd9 $3$ \u79cd\u60c5\u51b5\u8fdb\u884c\u7ef4\u62a4\uff0c\u539f\u7406\u4e0e\u63d2\u5165\u5dee\u4e0d\u591a\u3002\n\n```cpp\nvoid sdx(int cur) {\n    if (2 * cur + 1 >= cnt) return ; // \u6ca1\u6709\u5b50\u7ed3\u70b9\n    if (2 * cur + 2 >= cnt) { // \u6709\u4e00\u4e2a\u5b50\u7ed3\u70b9\n        if (heap[2 * cur + 1] < heap[cur]) swap(heap[2 * cur + 1], heap[cur]);\n        return ;\n    }\n    int l = 2 * cur + 1, r = l + 1;\n    if (heap[l] > heap[r]) swap(l, r); // \u786e\u5b9a\u54ea\u4e2a\u5b50\u7ed3\u70b9\u8ddf\u8fd9\u4e2a\u7ed3\u70b9\u4ea4\u6362\n    if (heap[l] < heap[cur]) { // \u4e0d\u5408\u6cd5\n        swap(heap[l], heap[cur]); // \u4ea4\u6362\n        sdx(l); // \u7ee7\u7eed\u5f80\u4e0b\u7ef4\u62a4\n    }\n}\nvoid del() {\n    swap(heap[0], heap[--cnt]); // \u5220\u6389\u5806\u9876\n    sdx(0); // \u4ece\u4e0a\u5f80\u4e0b\u8fdb\u884c\u7ef4\u62a4\n}\n```\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define INF 1e9\nusing namespace std;\nint n;\nint heap[1000005]; // \u7528\u6570\u7ec4\u5b58\u50a8\nint cnt; // \u8bb0\u5f55\u5806\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u4e5f\u662f\u4e0b\u4e00\u4e2a\u5143\u7d20\u63d2\u5165\u8fdb\u6765\u7684\u4f4d\u7f6e\nvoid xds(int cur) { \n    int fa = (cur - 1) / 2; // \u7236\u4eb2\u7ed3\u70b9\u7684\u4f4d\u7f6e\n    if (heap[fa] > heap[cur]) { // \u5982\u679c\u4e0d\u5408\u6cd5\n        swap(heap[fa], heap[cur]); // \u8fdb\u884c\u4ea4\u6362\n        xds(fa); // \u7ee7\u7eed\u5f80\u4e0a\u7ef4\u62a4\n    }\n}\nvoid insert(int x) {\n    heap[cnt] = x; // \u63d2\u5165\n    xds(cnt++); // \u7ef4\u62a4\n}\nvoid sdx(int cur) {\n    if (2 * cur + 1 >= cnt) return ; // \u6ca1\u6709\u5b50\u7ed3\u70b9\n    if (2 * cur + 2 >= cnt) { // \u6709\u4e00\u4e2a\u5b50\u7ed3\u70b9\n        if (heap[2 * cur + 1] < heap[cur]) swap(heap[2 * cur + 1], heap[cur]);\n        return ;\n    }\n    int l = 2 * cur + 1, r = l + 1;\n    if (heap[l] > heap[r]) swap(l, r); // \u786e\u5b9a\u54ea\u4e2a\u5b50\u7ed3\u70b9\u8ddf\u8fd9\u4e2a\u7ed3\u70b9\u4ea4\u6362\n    if (heap[l] < heap[cur]) { // \u4e0d\u5408\u6cd5\n        swap(heap[l], heap[cur]); // \u4ea4\u6362\n        sdx(l); // \u7ee7\u7eed\u5f80\u4e0b\u7ef4\u62a4\n    }\n}\nvoid del() {\n    swap(heap[0], heap[--cnt]); // \u5220\u6389\u5806\u9876\n    sdx(0); // \u4ece\u4e0a\u5f80\u4e0b\u8fdb\u884c\u7ef4\u62a4\n}\nsigned main() {\n    ios :: sync_with_stdio(0);\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        int op;\n        cin >> op;\n        if (op == 1) {\n            int x;\n            cin >> x;\n            insert(x);\n        }\n        else if (op == 2) cout << heap[0] << \"\\n\";\n        else del();\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1683101903,
        "uid": 760266,
        "name": "xvl_",
        "ccfLevel": 0,
        "title": "\u3010\u6a21\u677f\u3011\u5806 \u9898\u89e3"
    },
    {
        "content": "> \u4f60\u81ea\u4fe1\u6ee1\u6ee1\u7684\u6253\u5f00\u8fd9\u9898\uff0c\u5f00\u59cb\u5199\u9898\u89e3\u3002\n> \n> \u4f60\u81ea\u4fe1\u7684\u4ecb\u7ecd\u5b8c `priority_queue` \u540e\u9898\u89e3\u3002\n> \n> \u4f60\u53d1\u73b0\u7ba1\u7406\u5458\u9700\u8981\u4ecb\u7ecd\u666e\u901a\u7684\u64cd\u4f5c\uff0c\u4f60\u76f4\u63a5\u9000\u51fa\u4e0d\u5199\u4e86\uff08\u786e\u4fe1\u3002\n\n~~\u4ee5\u4e0a\u90fd\u662f\u95f2\u8bdd\uff0c\u73b0\u5728\u5f00\u59cb\u8bb2\u6b63\u6587\u3002~~\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217\u4e00\u5171\u4e09\u4e2a\u64cd\u4f5c\uff1a\n\n + \u7ed9\u5b9a\u4e00\u4e2a $x$\uff0c\u5c06 $x$ \u52a0\u5165\u6570\u5217\u4e2d\u3002\n + \u8f93\u51fa\u8fd9\u4e2a\u6570\u7ec4\u91cc\u9762\u7684\u6700\u5c0f\u503c\u3002\n + \u5220\u9664\u8fd9\u4e2a\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002\n \n# \u601d\u8def\n\n\u9996\u5148\uff0c\u5982\u679c\u6211\u4eec\u5c31\u8003\u8651\u666e\u901a\u7684\u505a\u6cd5\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u662f\u66b4\u529b\u7684\u8bdd\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\n\n + \u7ed9\u5b9a\u4e00\u4e2a $x$\uff0c\u5c06 $x$ \u52a0\u5165\u6570\u5217\u4e2d\u3002\n \n \t\u6bcf\u4e00\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\u5c31\u662f\u653e\u5230\u672b\u5c3e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(1)$\u3002\n    \n + \u8f93\u51fa\u8fd9\u4e2a\u6570\u7ec4\u91cc\u9762\u7684\u6700\u5c0f\u503c\u3002\n \t\n   \u6bcf\u4e00\u6b21\u626b\u4e00\u904d\u8fd9\u4e2a\u6570\u7ec4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n    \n + \u5220\u9664\u8fd9\u4e2a\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002\n \t\n   \u5148\u626b\u4e00\u904d\u6574\u4e2a\u6570\u7ec4\u627e\u5230\u6700\u5c0f\u503c\u6240\u5728\u7684\u4f4d\u7f6e $pos_{min}$\uff0c\u7136\u540e\u5c06 $pos_{min}$ \u4e4b\u540e\u7684\u6240\u6709\u6570\u5b57\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(n)$\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u5f97\u5230\u6700\u540e\u7684\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(n^2)$\uff0c\u4f46\u662f $n \\le 10^6$\uff0c\u6548\u7387\u660e\u663e\u4e0d\u591f\uff0c\u5c31\u5047\u6389\u529b\u3002\n\n\u6240\u4ee5\u73b0\u5728\u6211\u4eec\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u5f97\u8f93\u627e\u5230\u6700\u5c0f\u503c\u548c\u5220\u9664\u6700\u5c0f\u503c\u7684\u901f\u5ea6\u8981\u5feb\u3002\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u5c31\u662f **\u5806**\u3002\n\n## \u5806\u7684\u77e5\u8bc6\n\n\u5806\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u5927\u6839\u5806\uff0c\u4e00\u79cd\u662f\u5c0f\u6839\u5806\u3002\u800c\u8fd9\u4e00\u9898\u8981\u6c42\u7684\u662f\u6700\u5c0f\u662f\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u8981\u7528\u5c0f\u6839\u5806\n\n### 1. \u5806\u7684\u6027\u8d28\n\n\u5c0f\u6839\u5806\u6709\u4e24\u4e2a\u7279\u70b9\uff1a\n\n + \u662f\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\n + \u513f\u5b50\u503c $\\ge$ \u7236\u4eb2\u503c\u3002\n\n> \u6ce8\u610f\uff1a\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u6ee1\u4e8c\u53c9\u5806\u7684\u6700\u540e\u4e00\u5c42\u5220\u9664\u4e86\u53f3\u8fb9\u7684\u51e0\u4e2a\u8282\u70b9\u540e\u5f97\u5230\u7684\u6811\u3002\n\n![tree1](https://cdn.luogu.com.cn/upload/image_hosting/nvrztsgl.png) ![tree2](https://cdn.luogu.com.cn/upload/image_hosting/oxlzbgxk.png) ![tree3](https://cdn.luogu.com.cn/upload/image_hosting/34b350eb.png)\n\n\u4e0a\u9762\u7684\u4e09\u5e45\u56fe\u4e2d\uff0c\u7b2c\u4e00\u548c\u7b2c\u4e8c\u68f5\u6811\u5168\u90fd\u4e0d\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u7b2c\u4e09\u8bfe\u624d\u662f\u6b63\u786e\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\n\n### 2.\u5806\u7684\u64cd\u4f5c\n\n#### 1.\u63d2\u5165\u4e00\u4e2a\u6570 $x$\n\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u4e2a\u5806\u5982\u4e0b\uff08\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\u6211\u5df2\u7ecf\u5728\u56fe\u4e2d\u7f16\u4e86\u4e2a\u53f7\uff09\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/hlexmqh5.png)\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a\u7236\u8282\u70b9 $id$ \u7684\u5de6\u513f\u5b50\u6070\u597d\u662f $2 \\times id$\uff0c\u53f3\u513f\u5b50\u65e2\u662f $2 \\times id + 1$\uff0c\u5177\u4f53\u7684\u8bc1\u660e\u8fc7\u7a0b\u53ef\u4ee5\u770b [\u8fd9\u7bc7\u6587\u7ae0](https://www.cnblogs.com/sybil-hxl/p/15088324.html)\u3002\n\n\u7136\u540e\u6211\u4eec\u5047\u8bbe\u8981\u63d2\u5165\u4e00\u4e2a\u6570\u5b57 $11$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06 $11$ \u5f53\u4f5c\u4e00\u4e2a\u8282\u70b9\u653e\u5230\u201c\u6700\u540e\u201d\uff08\u8fd9\u91cc\u7684\u201c\u6700\u540e\u201d\u6307\u7684\u662f\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u65b0\u8282\u70b9\uff09\uff1a\t\n![](https://cdn.luogu.com.cn/upload/image_hosting/6w80kmai.png)\n\n\u63a5\u4e0b\u6765\uff0c\u6574\u4e2a\u6570\u7684\u7ed3\u6784\u5df2\u7ecf\u88ab\u7834\u574f\uff0c\u56e0\u4e3a $11$ \u8fd9\u4e00\u4e2a\u6570\u5e76\u4e0d\u5927\u4e8e\u4ed6\u7684\u7236\u4eb2\u8282\u70b9 $47$\uff0c\u6211\u4eec\u9700\u8981\u5c06 $11$ \u8fd9\u4e2a\u8282\u70b9\u5f80\u4e0a\u8c03\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/oa435msv.png)\n\n\u8c03\u4e86\u4e00\u6b21\u540e\u53d1\u73b0 $11$ \u8fd8\u662f\u6ca1\u6709\u5927\u4e8e\u4ed6\u7684\u7236\u4eb2\u8282\u70b9 $17$\uff0c\u4e8e\u662f\u6211\u4eec\u518d\u8c03\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ogu0fz4e.png)\n\n\u6211\u4eec\u53d1\u73b0\u73b0\u5728\u5df2\u7ecf\u6ee1\u8db3\u5c0f\u6839\u5806\u7684\u6761\u4ef6\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5~~\u8dd1\u8def~~\u5b8c\u6210\u4e86\u63d2\u5165\u8fd9\u4e2a\u64cd\u4f5c\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662f\u8fd9\u4e2a\u6811\u7684\u9ad8\u5ea6\u65e2 $O(\\log\\ n)$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u4e00\u4e0b\u63d2\u5165\u7684\u64cd\u4f5c\uff1a\n + \u5148\u628a\u8fd9\u4e2a\u6570\u63d2\u5165\u5230\u6700\u540e\u3002\n + \u7136\u540e\u4e0d\u65ad\u5730\u5411\u4e0a\u8c03\u6574\uff0c\u76f4\u5230\u6ee1\u8db3\u5c0f\u6839\u5806\u7684\u6761\u4ef6\u3002\n\n\u5411\u4e0a\u8c03\u6574\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvoid push_up(int &i,int val){//\u627e\u5230val\u63d2\u5165\u7684\u4f4d\u7f6e\n\t//i\u4e3a\u8fd9\u4e2a\u6570\u7684\u9ad8\u5ea6\uff0cval\u4e3a\u63d2\u5165\u7684\u6811\n\twhile(i > 1 && val < heap[i / 2]){//\u5982\u679c\u4e0d\u6ee1\u8db3\u5c0f\u6839\u5806\u7684\u6761\u4ef6\n\t\theap[i] = heap[i / 2];//\u8fd9\u4e2a\u70b9\u5c31\u53d8\u6210\u4ed6\u7684\u7236\u8282\u70b9\uff0c\u5c31\u662f\u628a\u8fd9\u4e2a\u6570\u5411\u4e0a\u627e\u5230\u4ed6\u63d2\u5165\u7684\u4f4d\u7f6e\n\t\ti /= 2;//\u53d8\u4e3a\u7236\u8282\u70b9\u7684\u7f16\u53f7\n\t}\n}\n```\n\n\u63d2\u5165\u4e00\u4e2a\u6570\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvoid insert(int val){//\u52a0\u5165val\n\tint i = ++size;//\u9ad8\u5ea6\n\tpush_up(i, val);//\u627e\u5230val\u63d2\u5165\u7684\u4f4d\u7f6e\n\theap[i] = val;//\u63d2\u5165val\n}\n```\n\n#### 2.\u5220\u9664\u6700\u5c0f\u503c\n\n\u56e0\u4e3a\u6211\u4eec\u8fd9\u4e2a\u5806\u662f\u5c0f\u6839\u5806\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5c06\u7b2c\u4e00\u4e2a\u8282\u70b9\u5220\u9664\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/l6eo3g82.png)\n\n\u8fd9\u65f6\uff0c\u5269\u4e0b\u7684\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9\u4e86\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff0c\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u7528\u201c\u4e16\u88ad\u5236\u201d\u7684\u65b9\u6cd5\u6765\u53bb\u201c\u53d8\u201d\u51fa\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u201c\u4e16\u88ad\u5236\u201d\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u5c31\u662f\u7687\u5e1d\u9886\u76d2\u996d\u540e\u7684\u4e0b\u4e00\u4f4d\u7687\u5e1d\u662f\u4ed6\u7684\u513f\u5b50\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5c31\u6309\u5e74\u9f84\u5927\u7684\u6765\u7b97\u3002\u56de\u5230\u6211\u4eec\u8fd9\u4e2a\u5806\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\u5c31\u50cf\u662f\u4ed6\u7684\u5e74\u9f84\uff0c\u73b0\u5728\u7687\u5e1d $9$ \u9886\u76d2\u996d\u4e86\uff0c\u90a3\u4e48\u4ed6\u7684\u4e0b\u4e00\u4f4d\u7ee7\u627f\u4eba\u5c31\u662f\u5e74\u9f84\uff08\u7f16\u53f7\uff09\u6700\u5927\u7684\u513f\u5b50\uff1a $31$\uff0c\u6211\u4eec\u5c06 $31$ \u653e\u5230\u7687\u5e1d\u7684\u4f4d\u7f6e\u4e0a\uff0c\u8fd9\u4e2a\u5806\u5c31\u53d8\u6210\u4e86\u4e0b\u9762\u8fd9\u4e2a\u6a21\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/f1vyr5ej.png)\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e2a\u5c0f\u6839\u5806\u53c8\u4e00\u6b21\u88ab\u7834\u574f\u4e86\uff0c$17$ \u8fd9\u4e2a\u8282\u70b9\u5c0f\u4e8e\u4ed6\u7684\u7236\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u5c06 $37$ \u5411\u4e0b\u8c03\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i39tjz36.png)\n\n\u6211\u4eec\u53c8\u53d1\u73b0 $23$ \u8fd9\u4e2a\u8282\u70b9\u5c0f\u4e8e $37$\uff0c\u6211\u4eec\u5c31\u7ee7\u7eed\u5c06 $37$ \u5411\u4e0b\u8c03\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/bd9uw2dl.png)\n\n\u73b0\u5728\u5c31\u6ee1\u8db3\u4e86\u5c0f\u6839\u5806\u7684\u6761\u4ef6\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5e94\u8be5\u548c\u63d2\u5165\u64cd\u4f5c\u4e00\u6837\uff0c\u662f\u8fd9\u4e2a\u6811\u7684\u9ad8\u5ea6\uff1a$O(\\log\\ n)$\u3002\n\n\u6211\u4eec\u53c8\u53ef\u4ee5\u603b\u7ed3\u4e00\u4e0b\u5220\u9664\u7684\u64cd\u4f5c\uff1a\n + \u628a\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u653e\u5230\u7b2c\u4e00\u4e2a\u3002\n + \u4e0d\u65ad\u5730\u5411\u4e0b\u8c03\u6574\uff0c\u76f4\u5230\u6ee1\u8db3\u5c0f\u6839\u5806\u7684\u6761\u4ef6\u3002\n\n\u5411\u4e0b\u8c03\u6574\u7684\u4ee3\u7801\uff1a\n```cpp\nvoid push_down(int &i,int val){//\u627e\u5230\u5220\u9664\n\tint ch = i * 2;\n\twhile(ch <= size){\n\t\tif(ch < size && heap[ch + 1] < heap[ch])ch++;\n\t\tif(val <= heap[ch])break;\n\t\theap[i] = heap[ch];\n\t\ti = ch;\n\t\tch += ch;\n\t}\n}\n```\n\n\u5220\u9664\u6700\u5c0f\u503c\u7684\u4ee3\u7801\uff1a\n```cpp\nvoid delete_min(){\n\tint i = 1, val = heap[size--];\n\tpush_down(i, val);//\u627e\u5230\u6700\u540e\u4e00\u4e2a\u6811\u5e94\u8be5\u5411\u4e0b\u8c03\u6574\u5230\u54ea\u4e2a\u4f4d\u7f6e\n\theap[i] = val;\n}\n```\n\n#### 3.\u8f93\u51fa\u6700\u5c0f\u503c\n\n\u6700\u5c0f\u503c\u5c31\u662f\u5806\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e00\u6b21\u8f93\u51fa\u8fd9\u4e2a\u503c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(1)$\u3002\n\n\u6700\u540e\u7684\u590d\u6742\u5ea6\u5e94\u8be5\u662f $O(n\\ \\log\\ n)$ \u80fd\u8fc7\u8fd9\u9053\u9898\uff0c\u5806\u7684\u77e5\u8bc6\u70b9\u6211\u4eec\u4e5f\u8bb2\u7684\u5dee\u4e0d\u591a\u4e86\u3002\n\n### \u624b\u5199\u5806\u5b9e\u73b0 AC \u4ee3\u7801\n\n```cpp\n/*****************************************\n\u5907\u6ce8\uff1a\n******************************************/\n#include<queue>\n#include<math.h>\n#include<stack>\n#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<iomanip>\n#include<map>\n#include<string.h>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\nconst int MAXN = 1e6 + 10;\nconst int MR = 10 + 5;\nconst int INF = 0x3f3f3f3f;\nconst int MOD = 998244353;\nint size, heap[MAXN];\nvoid push_up(int &i,int val){\n\twhile(i > 1 && val < heap[i / 2]){\n\t\theap[i] = heap[i / 2];\n\t\ti /= 2;\n\t}\n}\nvoid push_down(int &i,int val){\n\tint ch = i * 2;\n\twhile(ch <= size){\n\t\tif(ch < size && heap[ch + 1] < heap[ch])ch++;\n\t\tif(val <= heap[ch])break;\n\t\theap[i] = heap[ch];\n\t\ti = ch;\n\t\tch += ch;\n\t}\n}\nvoid insert(int val){\n\tint i = ++size;\n\tpush_up(i, val);\n\theap[i] = val;\n}\nvoid delete_min(){\n\tint i = 1, val = heap[size--];\n\tpush_down(i, val);\n\theap[i] = val;\n}\nsigned main()\n{\n\tint n;\n\tcin >> n;\n\tfor(int i = 1;i <= n; i++){\n\t\tint opt, x;\n\t\tcin >> opt;\n\t\tif(opt == 1){\n\t\t\tcin >> x;\n\t\t\tinsert(x);\n\t\t}\n\t\tif(opt == 2){\n\t\t\tcout << heap[1] << endl;\n\t\t}\n\t\tif(opt == 3){\n\t\t\tdelete_min();\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e2a c++ \u81ea\u5e26\u7684\u5806\u5b9e\u73b0\uff1a`priority_queue` \u4f18\u5148\u961f\u5217\u3002\n\n## `priority_queue` \u7684\u4f7f\u7528\u65b9\u6cd5\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u5148\u5b9a\u4e49\u5934\u6587\u4ef6 `#include<queue>`\u3002\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4ee5 `priority_queue<type> name;` \u7684\u65b9\u5f0f\u6765\u5b9a\u4e49\u3002\u5176\u4e2d `type` \u53ef\u4ee5\u662f `struct` \u7c7b\u578b\uff0c\u4f8b\u5982\uff1a\n\n```cpp\nstruct student\n{\n\tstring name;\n\tint score;\n};//\u8bb0\u5f55\u4e00\u4e2a\u5b66\u751f\u6210\u7ee9\npriority_queue<student> que;//\u5b9a\u4e49\u4e00\u4e2a\u4f18\u5148\u961f\u5217\n```\n---\n\u4f18\u5148\u961f\u5217\u8fd8\u652f\u6301\u81ea\u5b9a\u4e49\u6392\u5e8f\u65b9\u6cd5\uff0c\u4e00\u5171\u6709\u4e24\u79cd\uff1a\n\n + 1.\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\n```cpp\nstruct student \n{\n\tstring name;\n\tint score;\n\tbool operator < (const struct Status &x) const {\n\t\tif(score == x.score)return name < x.name;\n\t\treturn score > x.score;\n\t}//\u6309\u7167\u5206\u6570\u6392\u5e8f\n};\npriority_queue<student> que;//\u73b0\u5728\u5df2\u7ecf\u662f\u6309\u7167\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u65b9\u6cd5\u6765\u6392\u5e8f\n```\n\n + 2.\u81ea\u5b9a\u4e49\u6392\u5e8f\n \n```cpp\nbool cmp(const pair<int,int> &a, const pair<int,int> &b)\n{\n\treturn a.second>b.second;\n}//pair\u6309\u7167\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\npriority_queue<pair<int,int>, vector<pair<int,int> >, decltype(&cmp)> q(cmp);//\u5b9a\u4e49\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5efa\u8bae\u4e0d\u8981\u7528\u8fd9\u4e00\u79cd\n```\n\n---\n\n\u5c0f\u6839\u5806\u548c\u5927\u6839\u5806\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a\n\n```cpp\npriority_queue<int> que;//\u9ed8\u8ba4\u4e3a\u5c0f\u6839\u5806\n\npriority_queue<int, vector<int>, less<int> > que;//\u8fd9\u4e2a\u4e5f\u662f\u5c0f\u6839\u5806\n\npriority_queue<int, vector<int>, greater<int> > que;//\u8fd9\u4e2a\u662f\u5927\u6839\u5806\n\nbool cmp(const int &a, const int &b)\n{\n\treturn a > b;\n}\npriority_queue<int, vector<int >, decltype(&cmp)> q(cmp);//\u8fd9\u4e2a\u8fd8\u662f\u5927\u6839\u5806\n```\n---\n\n`priority_queue` \u7684\u64cd\u4f5c\u548c `queue` \u5dee\u4e0d\u591a\uff0c\u4e00\u5171\u6709\u4ee5\u4e0b $5$ \u79cd\uff1a\n\n```cpp\npriority_queue<int> que;\nque.push(x);//\u52a0\u5165\u4e00\u4e2a\u6570x\ncout << que.top();//\u8f93\u51fa\u7b2c\u4e00\u4e2a\u6570\ncout << que.size();//\u8f93\u51fa\u8fd9\u4e2a\u5806\u6709\u51e0\u4e2a\u5143\u7d20\nque.pop();//\u5f39\u51fa\u7b2c\u4e00\u4e2a\u5143\u7d20\ncout << que.empty();//\u5224\u65ad\u8fd9\u4e2a\u5806\u662f\u4e0d\u662f\u7a7a\u7684\n```\n\n`priority` \u7684\u77e5\u8bc6\u70b9\u4e5f\u8bb2\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u63a5\u4e0b\u6765\u56de\u5230\u8fd9\u9053\u9898\uff0c\u5c31\u662f\u4f7f\u7528\u4e0a\u9762\u7684 `push, top, pop` \u5c31\u53ef\u4ee5\u4e86\u3002\n\n## \u5176\u4ed6\u4f8b\u9898\n\n### 1.[\u5408\u5e76\u679c\u5b50](https://www.luogu.com.cn/problem/P1090)\n\n\u6bcf\u4e00\u6b21\u5c06\u8fd9\u4e2a\u6570\u5217\u7684\u6700\u5c0f\u503c\u548c\u6b21\u5c0f\u503c\u53d6\u51fa\uff0c\u7136\u540e\u76f8\u52a0\u518d\u653e\u56de\u53bb\u5806\u91cc\u5c31\u505a\u5b8c\u4e86\u3002\n\n#### \u624b\u5199\u5806\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint heap[100001], heap_length, n, x, y, i, tot = 0;\nvoid put(int t)\n{\n\tint now, next;\n\theap[++heap_length] = t;\n\tnow = heap_length;\n\twhile(now > 1)\n\t{\n\t\tnext = now / 2;\n\t\tif(heap[now] >= heap[next]) return;\n\t\tswap(heap[now], heap[next]);\n\t\tnow = next;\n\t}\n}\nint get()\n{\n\tint next, tot, now;\n\ttot = heap[1];\n\theap[1] = heap[heap_length--];\n\tnow = 1;\n\twhile(2 * now <= heap_length)\n\t{\n\t\tnext = 2 * now;\n\t\tif(next < heap_length && heap[next + 1] < heap[next])\n\t\t\tnext++;\n\t\tif(heap[now] <= heap[next]) return tot;\n\t\tswap(heap[now], heap[next]);\n\t\tnow = next;\n\t}\n\treturn tot;\n}\nint main(){\n\tcin >> n;\n\tfor(i = 1;i <= n; i++)\n\t{\n\t\tcin >> x;\n\t\tput(x);\n\t}\n\tfor(i = 1;i < n; i++)\n\t{\n\t\tx = get();\n\t\ty = get();\n\t\ttot += x + y;\n\t\tput(x + y);\n\t}\n\tcout << tot << endl;\n}\n```\n\n#### `priority_queue` \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint tot = 0, n;\npriority_queue<int, vector<int>, greater<int> > q;\nint main(){\n\tcin >> n;\n\tfor(int i = 1;i <= n; i++)\n\t{\n\t    int x;\n\t\tcin >> x;\n\t\tq.push(x);\n\t}\n\tfor(int i = 1;i < n; i++)\n\t{\n\t\tint x = q.top();q.pop();\n\t\tint y = q.top();q.pop();\n\t\ttot += x + y;\n\t\tq.push(x + y);\n\t}\n\tcout << tot << endl;\n}\n```\n\n\n\n# \u6301\u7eed\u66f4\u65b0\u4e2d\u2026\u2026\n\n~~\u5199\u4e86 3h \u9ebb\u70e6\u7ba1\u7406\u5458\u5927\u5927\u901a\u8fc7\u5427\u3002~~",
        "postTime": 1683098772,
        "uid": 341036,
        "name": "\u8521\u7ae3\u51ef",
        "ccfLevel": 4,
        "title": "\u3010\u6a21\u677f\u3011\u5806"
    },
    {
        "content": "## \u4e8c\u53c9\u5806\u7684\u7b80\u4ecb\n\u4e8c\u53c9\u5806\u662f\u4e00\u79cd\u57fa\u4e8e\u4e8c\u53c9\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u63d2\u5165\u5143\u7d20\uff0c\u5220\u9664\u3001\u8be2\u95ee\u6781\u503c\u7684\u64cd\u4f5c\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\u3002\n\n\u672c\u9898\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u5bf9\u4e8e\u4efb\u610f\u7236\u5b50\u8282\u70b9\u5173\u7cfb\uff0c\u6ee1\u8db3**\u7236\u4eb2\u7ed3\u70b9\u7684\u6743\u503c\u5c0f\u4e8e\u7b49\u4e8e\u5176\u513f\u5b50\u8282\u70b9\u7684\u6743\u503c**\u3002\n\n\u6bd4\u5982\u8fd9\u4e2a\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u5c0f\u6839\u5806\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/1cd6943m.png)\n\n## \u4e8c\u53c9\u5806\u7684\u64cd\u4f5c\n\n- \u7236\u5b50\u5173\u7cfb\u7684\u8868\u793a\n```cpp\n#define fa (pos >> 1)\n#define ls (pos << 1)\n#define rs (ls | 1)\n```\n\u50cf\u7ebf\u6bb5\u6811\u4e00\u6837\u5b58\u8282\u70b9\uff0c\u76f4\u63a5\u67e5\u8be2\u7236\u5b50\u5173\u7cfb\u3002\n\n- \u5411\u4e0a\u8c03\u6574 `void up(int pos)`\n\n\u4ece $pos$ \u53f7\u8282\u70b9\uff0c\u5f80\u6839\u627e\uff0c\u5982\u679c\u4e0d\u7b26\u5408\u5c0f\u6839\u5806\u7684\u6027\u8d28\uff0c\u4ea4\u6362\u7236\u5b50\u8282\u70b9\u3002\n```cpp\nvoid up(int pos)\n\t{\n\t\t\n\t\twhile (fa && num[fa] > num[pos])\n\t\t{\n\t\t\tswap(num[fa], num[pos]);\n\t\t\tpos = fa;\n\t\t}\n\t}\n```\n\u53ea\u8981\u5b58\u5728\u7236\u4eb2\uff0c\u800c\u4e14\u4e0d\u6ee1\u8db3\u5806\u7684\u6027\u8d28\uff0c\u4ea4\u6362\u7236\u5b50\u3002\n- \u63d2\u5165\uff08\u56fe\u4e2d\u6743\u503c\u4e3a 1 \u7684\u8282\u70b9\u4e3a\u6839\uff09\n\n**\u5728\u6700\u540e\u63d2\u5165\uff0c\u7136\u540e\u4e00\u8def\u4e0a\u8c03\u5373\u53ef\uff0c\u4e3e\u4e2a\u4f8b\u5b50\u3002**\n\n\u6bd4\u5982\u6211\u4eec\u8981\u5728\u8fd9\u4e2a\u7ed3\u6784\u4e0b\u63d2\u5165\u4e00\u4e2a $3$\u3002\n\n\n1. \u7b2c\u4e00\u6b65\uff0c\u628a\u4ed6\u8fde\u5230\u4efb\u610f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u4e0b\uff0c\u6bd4\u5982\u8fde\u5230 $6$ \u4e0b\u9762\uff0c\u5982\u56fe\u3002\n\n\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u73b0\u5728\u7684\u6811\u8fdd\u53cd\u4e86\u5c0f\u6839\u5806\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8c03\u6574\u3002\n\n2. \u4ea4\u6362 $3$ \u548c $6$\uff0c\u5982\u56fe\u3002\n\n3. \u63a5\u7740\uff0c\u4ea4\u6362 $3$ \u548c $4$\uff0c\u5982\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zdsbcvc8.png)\n\n\u8bf7\u540c\u5b66\u4eec\u5bf9\u7167\u7740\u56fe\u548c\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u3002\n\n```cpp\nvoid insert(int x)\n\t{\n\t\tnum[++cnt] = x;\n\t\tup(cnt);\n\t}\n```\n\n\n- \u5411\u4e0b\u8c03\u6574 `void down(int pos)`\n\n\u548c\u5411\u4e0a\u8c03\u6574\u7c7b\u4f3c\uff0c\u4ece\u67d0\u4e2a\u8282\u70b9\u5411\u4e0b\u5904\u7406\u7236\u5b50\u5173\u7cfb\uff0c\u5efa\u8bae\u8bfb\u8005\u81ea\u884c\u5bf9\u7167\u4ee3\u7801\u8fdb\u884c\u7406\u89e3\u3002\n\n```cpp\nvoid down(int pos)\n\t{\n\t// \u4ece\u4e0a\u5f80\u4e0b\u9012\u5f52\uff0c\u5982\u679c\u67d0\u4e2a\u513f\u5b50\u7684\u503c\u6bd4\u7236\u4eb2\u5c0f\n\t// \u5c31\u628a\u503c\u6700\u5c0f\u7684\u513f\u5b50\u4e0e\u7236\u4eb2\u4ea4\u6362 \n\t\twhile (1)\n\t\t{\n\t\t\tint tmp = pos;\n\t\t\tif (ls <= cnt && num[ls] < num[tmp])\n\t\t\ttmp = ls;\n\t\t\tif (rs <= cnt && num[rs] < num[tmp])\n\t\t\ttmp = rs;\n\t\t\tif (tmp == pos) break;\n\t\t\tswap(num[tmp], num[pos]);\n\t\t\tpos = tmp;\n\t\t}\n\t}\n```\n\n- \u5220\u9664\u6700\u5c0f\u503c `void erase()`\n\n\u76f4\u63a5\u628a\u6839\u7684\u6743\u503c\u6539\u6210\u7f16\u53f7\u6700\u5927\u70b9\u8282\u70b9\u7684\u6743\u503c\uff0c\u5411\u4e0b\u8c03\u6574\u4e00\u6b21\uff0c\u5e76\u4e14\u6254\u6389\u6807\u53f7\u6700\u5927\u70b9\u8282\u70b9\u3002\n```cpp\nvoid erase()\n\t{\n\t\tnum[1] = num[cnt];\n\t\t--cnt;\n\t\tdown(1);\n\t}\n```\n\n\u6bd4\u5982\u5728\u8fd9\u4e2a\u5806\u4e2d\uff0c\u6211\u8981\u5220\u9664\u6700\u5c0f\u503c 1\u3002\n\n\u7ecf\u8fc7\u8c03\u6574\uff0c\u65b0\u7684\u5806\u957f\u8fd9\u4e2a\u6837\u5b50\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/bqnmg6z3.png)\n\n- \u8be2\u95ee\u6700\u5c0f\u503c `int top()`\n\n\u6839\u636e\u6027\u8d28\u76f4\u63a5\u8fd4\u56de\u6839\u8282\u70b9\u6743\u503c\u5373\u53ef\u3002\n\n- \u65f6\u95f4\u590d\u6742\u5ea6\u8bf4\u660e\uff1a\u7531\u4e8e\u8282\u70b9\u662f\u4e00\u4e2a\u4e00\u4e2a\u5f00\u70b9\uff0c\u6240\u4ee5\u4e8c\u53c9\u6811\u662f\u201c\u77ee\u80d6\u201d\u7684\uff0c\u5c42\u6570\u4e3a $\\log \\ n$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u5355\u6b21\u63d2\u5165\u5220\u9664\u8be2\u95ee\u64cd\u4f5c\u5c31\u662f $O(\\log n)$\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n\n\u624b\u5199\u4e8c\u53c9\u5806\uff1a\n\n```cpp\n/* \u3010\u6a21\u677f\u3011\u5806 Luogu P3378\n\u5c0f\u6839\u5806\u5f97\u7ed3\u6784\uff1a\u7236\u4eb2\u8282\u70b9\u7684\u503c < \u513f\u5b50\u8282\u70b9\u7684\u503c\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\u63d2\u5165\uff1aO(log n)\n\u5220\u9664\uff1aO(log n)\n\u67e5\u8be2\u6700\u5927\u3001\u6700\u5c0f\u503c\uff1aO(1) \n*/\n#include <cstdio>\n#include <algorithm>\n#define fa (pos >> 1)\n#define ls (pos << 1)\n#define rs (ls | 1)\nusing namespace std;\nconst int mxn = 1000010;\nstruct heap\n{ // \u5c0f\u6839\u5806 \n\tint num[mxn], cnt;\n\tvoid up(int pos)\n\t{\n\t\t// \u4ece\u4e0b\u5f80\u4e0a\u627e\uff0c\u5982\u679c\u7236\u4eb2\u7684\u503c\u5927\u4e8e\u513f\u5b50\uff0c\u4ea4\u6362\u7236\u4eb2\u4e0e\u513f\u5b50 \n\t\twhile (fa && num[fa] > num[pos])\n\t\t{\n\t\t\tswap(num[fa], num[pos]);\n\t\t\tpos = fa;\n\t\t}\n\t}\n\tvoid down(int pos)\n\t{\n\t// \u4ece\u4e0a\u5f80\u4e0b\u9012\u5f52\uff0c\u5982\u679c\u67d0\u4e2a\u513f\u5b50\u7684\u503c\u6bd4\u7236\u4eb2\u5c0f\n\t// \u5c31\u628a\u503c\u6700\u5c0f\u7684\u513f\u5b50\u4e0e\u7236\u4eb2\u4ea4\u6362 \n\t\twhile (1)\n\t\t{\n\t\t\tint tmp = pos;\n\t\t\tif (ls <= cnt && num[ls] < num[tmp])\n\t\t\ttmp = ls;\n\t\t\tif (rs <= cnt && num[rs] < num[tmp])\n\t\t\ttmp = rs;\n\t\t\tif (tmp == pos) break;\n\t\t\tswap(num[tmp], num[pos]);\n\t\t\tpos = tmp;\n\t\t}\n\t}\n\tvoid insert(int x)\n\t{\n\t\tnum[++cnt] = x;\n\t\tup(cnt);\n\t}\n\tvoid erase()\n\t{\n\t\tnum[1] = num[cnt];\n\t\t--cnt;\n\t\tdown(1);\n\t}\n\tint top()\n\t{ return num[1]; }\n}data;\nint n;\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1, opt, x; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &opt);\n\t\tif (opt == 1)\n\t\t{\n\t\t\tscanf(\"%d\", &x);\n\t\t\tdata.insert(x);\n\t\t}\n\t\telse if (opt == 2) printf(\"%d\\n\", data.top());\n\t\telse data.erase();\n\t}\n\treturn 0;\n}\n```\n\n\u624b\u5199\u4e8c\u53c9\u5806\uff08template \u6a21\u677f+\u4ee3\u7801\u7cbe\u7b80\u7248\uff09\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T, size_t mxn>\nstruct Heap\n{\n\tint cnt;\n\tT val[mxn + 5];\n\tHeap() { cnt = 0; }\n\t#define fa (pos >> 1)\n\t#define ls (pos << 1)\n\t#define rs (ls | 1)\n\tvoid insert(T x)\n\t{\n\t\tval[++cnt] = x;\n\t\tint pos = cnt;\n\t\twhile (fa && val[fa] > val[pos])\n\t\t{\n\t\t\tswap(val[fa], val[pos]);\n\t\t\tpos = fa;\n\t\t}\n\t}\n\tvoid erase()\n\t{\n\t\tval[1] = val[cnt--];\n\t\tint pos = 1;\n\t\twhile (1)\n\t\t{\n\t\t\tint tmp = pos;\n\t\t\tif (ls <= cnt && val[ls] < val[tmp]) tmp = ls;\n\t\t\tif (rs <= cnt && val[rs] < val[tmp]) tmp = rs;\n\t\t\tif (tmp == pos) break;\n\t\t\tswap(val[pos], val[tmp]);\n\t\t\tpos = tmp;\t\n\t\t}\n\t}\n\tT top() { return val[1]; }\n\t#undef fa\n\t#undef ls\n\t#undef rs\n};\nHeap <int, 1000000> data;\nint n;\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1, opt, x; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &opt);\n\t\tif (opt == 1)\n\t\t{\n\t\t\tscanf(\"%d\", &x);\n\t\t\tdata.insert(x);\n\t\t}\n\t\telse if (opt == 2) printf(\"%d\\n\", data.top());\n\t\telse data.erase();\n\t}\n\treturn 0;\n}\n```\n\n\nSTL \u5b9e\u73b0\uff1a\n```cpp\n//\u3010\u6a21\u677f\u3011\u5806 Luogu P3378 STL \u5b9e\u73b0 \n#include <bits/stdc++.h>\nusing namespace std;\npriority_queue <int, vector <int>, greater <int> > q;\nint n;\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1, opt, x; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &opt);\n\t\tif (opt == 1) scanf(\"%d\", &x), q.push(x);\n\t\telse if (opt == 2) printf(\"%d\\n\", q.top());\n\t\telse q.pop();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1683099155,
        "uid": 425694,
        "name": "\u90d1\u671d\u66e6zzx",
        "ccfLevel": 6,
        "title": "\u3010\u6a21\u677f\u3011\u5806"
    },
    {
        "content": "\u521a\u5b66\u4e86\u4e8c\u53c9\u5806\u8fd9\u9898\u5c31\u6e05\u9898\u89e3\u4e86\uff0c\u90a3\u6211\u5c31\u6765\u4e00\u53d1\u5427\uff01\n\n\u4e8c\u53c9\u5806\u662f\u4e00\u68f5**\u5b8c\u5168\u4e8c\u53c9\u6811**\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\uff0c\u5b58\u50a8\u65f6\u4f9d\u636e\u8fd9\u4e24\u6761\u6027\u8d28\uff1a\n\n- \u7b2c $x$ \u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f $\\lfloor x \\div 2 \\rfloor$\u3002\n- \u7b2c $x$ \u4e2a\u8282\u70b9\uff08\u5982\u679c\u5b58\u5728\u5de6\u53f3\u513f\u5b50\uff0c\u90a3\u4e48\u5b83\uff09\u7684\u5de6\u513f\u5b50\u7f16\u53f7\u662f $2 \\times x$\uff0c\u53f3\u513f\u5b50\u7f16\u53f7\u662f $2 \\times x + 1$\u3002\n\n\u5b58\u50a8\u4e4b\u540e\u5982\u4e0b\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pz47v5ja.png)\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u9700\u8981\u7528\u4e00\u79cd\u7279\u6b8a\u7684\u5806\u7ed3\u6784\uff1a**\u5c0f\u6839\u5806**\u3002\u5c0f\u6839\u5806\u7236\u8282\u70b9\u7684\u503c\u4e00\u5b9a\u5c0f\u4e8e\u5b50\u8282\u70b9\u7684\u503c\u3002\u5982\u4e0b\u56fe\u5c31\u662f\u4e00\u4e2a\u5c0f\u6839\u5806\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cg2f4frr.png)\n\n\u63a5\u7740\uff0c\u6765\u770b\u600e\u4e48\u7528\u5c0f\u6839\u5806\u5b8c\u6210\u9898\u76ee\u4e2d\u7684\u4e09\u79cd\u5904\u7406\u3002\n\n### 1.\u67e5\u8be2\u6700\u5c0f\u503c\n\n\u5f88\u7b80\u5355\uff0c\u5c0f\u6839\u5806\u7684\u6839\u8282\u70b9\u5c31\u662f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nint top() {\n\treturn w[1]; // \u8fd4\u56de\u6839\u8282\u70b9\n}\n```\n\n### 2.\u52a0\u5165\u65b0\u5143\u7d20\n\n\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u65e0\u8bba\u5982\u4f55\u5148\u628a\u65b0\u7684\u5143\u7d20\u653e\u5728\u5806\u7684\u5c3e\u90e8\uff0c\u624d\u80fd\u4fdd\u8bc1\u4e0d\u8fdd\u53cd\u5806\u6700\u57fa\u672c\u7684\u6027\u8d28\uff0c\u50cf\u8fd9\u6837\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/t9s1mgfx.png)\n\n\u7136\u800c\u8fd9\u53c8\u8fdd\u53cd\u4e86\u5c0f\u6839\u5806\u7684\u6027\u8d28\uff1a\u7236\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\u5b50\u8282\u70b9\u7684\u503c\u3002\u6211\u4eec\u8003\u8651\u5bf9\u5c0f\u6839\u5806\u8fdb\u884c**\u4fee\u590d**\uff1a\n\n1. \u82e5\u81ea\u5df1\u662f\u6839\u6216\u81ea\u5df1\u7684\u503c\u5927\u4e8e\u7236\u8282\u70b9\uff08\u5373\u5c0f\u6839\u5806\u6027\u8d28\u6ee1\u8db3\uff09\u4e86\uff0c\u505c\u6b62\u4fee\u590d\u3002\n1. \u5426\u5219\u81ea\u5df1\u7684\u503c\u66f4\u5c0f\uff0c\u5c06\u81ea\u5df1\u4e0e\u7236\u8282\u70b9\u4ea4\u6362\uff0c\u7ee7\u7eed\u4fee\u590d\u3002\n\n\u4fee\u590d\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n\u9996\u5148\u7528 $3$ \u548c\u6839\u8282\u70b9 $5$ \u6bd4\u8f83\uff0c\u53d1\u73b0 $3<5$\uff0c\u4e0d\u7b26\u5408\u5c0f\u6839\u5806\u6027\u8d28\uff0c\u5c06\u4e24\u4e2a\u8282\u70b9\u4ea4\u6362\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5kdrf5tl.png)\n\n\u518d\u7528 $3$ \u548c\u73b0\u5728\u5b83\u7684\u6839\u8282\u70b9 $2$ \u6bd4\u8f83\uff0c\u53d1\u73b0 $3>2$\uff0c\u7b26\u5408\u5c0f\u6839\u5806\u6027\u8d28\uff0c\u4e8e\u662f\u4fee\u590d\u6210\u529f\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u6210\u529f\u7684\u5c06\u5143\u7d20 $2$ \u63d2\u5165\u4e86\u8fd9\u4e2a\u5c0f\u6839\u5806\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\nvoid modify(int x) { // \u63d2\u5165\u65f6\u81ea\u5e95\u5411\u4e0a\u4fee\u590d x \u53f7\u8282\u70b9\n    if(x == 1 || w[x] > w[x / 2]) return; // x \u5df2\u7ecf\u662f\u6839\u6216\u7b26\u5408\u5c0f\u6839\u5806\u6027\u8d28\n    swap(w[x], w[x / 2]);\n    modify(x / 2); // \u9012\u5f52\u7ee7\u7eed\u4fee\u590d\n}\nvoid push(int x) { // \u63d2\u5165\u5143\u7d20 x\n    w[++tot] = x; // \u76f4\u63a5\u63d2\u5230\u5c3e\u90e8\n    modify(tot); // \u4fee\u590d\n}\n```\n\n### 3.\u5220\u9664\u6700\u5c0f\u503c\n\n\u5982\u679c\u76f4\u63a5\u64e6\u6389\u6700\u5c0f\u503c\uff0c\u5806\u5c06\u4f1a\u5206\u88c2\u6210\u4e24\u4e2a\u5806\uff0c\u4f1a\u9047\u5230\u5927\u9ebb\u70e6\u3002\u6240\u4ee5\u5148\u628a\u6839\u8282\u70b9\u548c\u5c3e\u90e8\u8282\u70b9\u4ea4\u6362\uff0c\u518d\u76f4\u63a5\u628a\u5c3e\u8282\u70b9\u5220\u6389\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xgte705d.png)\n\n\u660e\u663e\u4e0d\u7b26\u5408\u6027\u8d28\u4e86\uff0c\u8fd8\u8981\u81ea\u4e0a\u800c\u4e0b\u4fee\u590d\uff0c\u89c4\u5219\u548c\u4e0a\u9762\u4e00\u6837\u3002\u4e0d\u653e\u56fe\u4e86\u3002\n\n\u6839\u636e\u8fd9\u4e2a\u601d\u8def\u5199\u51fa\u4ee3\u7801\uff1a\n\n```cpp\nvoid repair(int x) { // \u5220\u9664\u65f6\u81ea\u4e0a\u800c\u4e0b\u4fee\u590d x \u53f7\u8282\u70b9\n    if(x * 2 > tot) return; // \u5df2\u7ecf\u662f\u53f6\u5b50\u8282\u70b9\n    int tar = x * 2; // \u53f3\u8282\u70b9\u4e00\u5b9a\u5b58\u5728\n    if(x * 2 + 1 <= tot) tar = w[x * 2] < w[x * 2 + 1] ? x * 2 : x * 2 + 1;\n    // \u5982\u679c\u6709\u5de6\u8282\u70b9\uff0ctar \u53d6\u4e24\u8282\u70b9\u7684\u6700\u5c0f\u503c\n    if(w[x] < w[tar]) return; // \u4e0d\u8fdd\u53cd\u5c0f\u6839\u5806\u6027\u8d28\u8bf4\u660e\u4fee\u590d\u6210\u529f\uff0c\u8fd4\u56de\n    swap(w[x], w[tar]); // \u5426\u5219\u548c\u5c0f\u7684\u4ea4\u6362\n    repair(tar); // \u7ee7\u7eed\u4fee\u590d\n}\nvoid pop() { // \u5f39\u6389\u6700\u5c0f\u503c\n    swap(w[1], w[tot--]); // \u538b\u884c\u6280\u5de7\uff0c\u4ea4\u6362\u5c3e\u90e8\u8282\u70b9\u5e76\u5c06\u5c3e\u8282\u70b9\u8bbe\u4e3a\u65e0\u6548\n    repair(1); // \u4ece\u6839\u8282\u70b9\u4fee\u590d\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3a $O(\\log n)$\u3002\u8fd9\u6837\uff0c\u5c31\u5728\u4f18\u79c0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u4e86\u8fd9\u9053\u9898\u3002\n\n\u4f46\u662f\uff01\u4e0a\u9762\u7684\u5b9e\u73b0\u8fc7\u7a0b\u662f\u4e0d\u662f\u2026\u2026\u590d\u6742\u4e86\u70b9\uff1f\u5f88\u5e78\u8fd0\uff0cSTL \u63d0\u4f9b\u4e86**\u4f18\u5148\u961f\u5217**\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5373 `priority_queue`\uff0c\u5e95\u5c42\u5c31\u662f\u7528\u5806\u5b9e\u73b0\u7684\uff0c\u5934\u6587\u4ef6\u8fd8\u662f\u961f\u5217\u7684 `queue`\u3002\u4f18\u5148\u961f\u5217\u6709\u4ee5\u4e0b\u51e0\u79cd\u5e38\u7528\u64cd\u4f5c\uff1a\n\n- `priority_queue <int> q;` \u5efa\u7acb\u4e00\u4e2a `int` \u7c7b\u578b\u7684\u4f18\u5148\u961f\u5217\uff08\u5927\u6839\u5806\uff09 $q$\u3002\n\n- `priority_queue <int, vector<int>, greater<int> > q;` \u5efa\u7acb\u4e00\u4e2a\u5c0f\u6839\u5806 $q$\u3002\n\n- `q.top();` \u67e5\u8be2\u6700\u5927\uff08\u5c0f\uff09\u503c\u3002\n\n- `q.pop();` \u5f39\u51fa\u6700\u5927\uff08\u5c0f\uff09\u503c\u3002\n\n- `q.push(x);` \u5c06 $x$ \u52a0\u5165\u961f\u5217\u3002\n\n\u501f\u52a9 STL\uff0c\u8fd9\u9053\u9898\u77ac\u95f4\u53d8\u5f97\u5f88\u7b80\u5355\u4e86\u3002STL \u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, op, x;\npriority_queue <int, vector <int>, greater <int> > q; // \u6ce8\u610f\u5b9a\u4e49\u5c0f\u6839\u5806\u7684\u683c\u5f0f\nint main() {\n    cin >> n;\n    while(n--) {\n        cin >> op; // \u54ea\u79cd\u64cd\u4f5c\n        if(op == 1) {\n            cin >> x;\n            q.push(x); // \u63d2\u5165\uff0c\u4f7f\u7528 push()\n        } else if(op == 2)\n            cout << q.top() << endl; // \u67e5\u8be2\u6700\u5c0f\u503c\uff0c\u4f7f\u7528 top()\n        else q.pop(); // \u5f39\u51fa\u6700\u5c0f\u503c\uff0c\u4f7f\u7528 pop()\n    }\n    return 0;\n}\n```\n\n\n\u5b8c\u7ed3\u6492\u82b1\uff01",
        "postTime": 1683097258,
        "uid": 804115,
        "name": "Zhuyiming0325",
        "ccfLevel": 0,
        "title": "P3378"
    }
]