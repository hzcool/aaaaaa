[
    {
        "content": "#### ~~GF~~\u5b98\u65b9\u9898\u89e3\n\n\u666e\u53ca\u7ec4\u7ebf\u6bb5\u6811\uff08\u00bf\uff09\u3002\n\n\u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58 `I`\u3001`O`\u3001`IO`\u3001`OI`\u3001`IOI` \u7684\u4e2a\u6570\uff0c\u57fa\u4e8e\u4e58\u6cd5\u539f\u7406\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u5f53\u524d`I`\u7684\u4e2a\u6570 = \u5de6\u533a\u95f4`I`\u7684\u4e2a\u6570 + \u53f3\u533a\u95f4`I`\u7684\u4e2a\u6570\u3002\n\n\u5f53\u524d`O`\u7684\u4e2a\u6570\u540c\u7406\u3002\n\n\u5f53\u524d`IO`\u7684\u4e2a\u6570 = \u5de6\u533a\u95f4`IO`\u7684\u4e2a\u6570 + \u53f3\u533a\u95f4`IO`\u7684\u4e2a\u6570 + \u5de6\u533a\u95f4`I`\u7684\u4e2a\u6570 $\\times$ \u53f3\u533a\u95f4`O`\u7684\u4e2a\u6570\u3002\n\n\u5f53\u524d`OI`\u7684\u4e2a\u6570\u540c\u7406\u3002\n\n\u5f53\u524d`IOI`\u7684\u4e2a\u6570 = \u5de6\u533a\u95f4`IOI`\u7684\u4e2a\u6570 + \u53f3\u533a\u95f4`IOI`\u7684\u4e2a\u6570 + \u5de6\u533a\u95f4`I`\u7684\u4e2a\u6570 $\\times$ \u53f3\u533a\u95f4`OI`\u7684\u4e2a\u6570 + \u5de6\u533a\u95f4`IO`\u7684\u4e2a\u6570 $\\times$ \u53f3\u533a\u95f4`I`\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u662f\u5e76\u4e0d\u5f88\u96be\u7684\u4ee3\u7801\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#define ll long long\nusing namespace std;\nint n,m,a[500005];\nchar s[500005];\nstruct node{\n\tll i,o,oi,io,ioi;\n\tinline void mem(){\n\t\ti=o=oi=io=ioi=0;\n\t}\n}tree[4000005];\ninline node add(register node a,register node b){\n\tregister node c;\n\tc.mem();\n\tc.i=a.i+b.i;\n\tc.o=a.o+b.o;\n\tc.oi=a.oi+b.oi+a.o*b.i;\n\tc.io=a.io+b.io+a.i*b.o;\n\tc.ioi=a.ioi+b.ioi+a.i*b.oi+a.io*b.i;\n\treturn c;\n}\ninline void pushup(register int now){\n\ttree[now]=add(tree[now*2],tree[now*2+1]);\n\treturn;\n}\ninline void update(register int now,register int nowl,register int nowr,register int pos,register int k){\n\tif (nowl==nowr){\n\t\ttree[now].mem();\n\t\tif (k==0)tree[now].i=1;\n\t\telse tree[now].o=1;\n\t\treturn;\n\t}\n\tregister int mid=(nowl+nowr)/2;\n\tif (pos<=mid)update(now*2,nowl,mid,pos,k);\n\telse update(now*2+1,mid+1,nowr,pos,k);\n\tpushup(now);\n\treturn;\n}\ninline node query(register int now,register int nowl,register int nowr,register int lt,register int rt){\n\tif (nowl>=lt&&nowr<=rt)return tree[now];\n\tregister int mid=(nowl+nowr)/2;\n\tregister node s;s.mem();\n\tif (mid>=lt)s=add(s,query(now*2,nowl,mid,lt,rt));\n\tif (mid+1<=rt)s=add(s,query(now*2+1,mid+1,nowr,lt,rt));\n\treturn s;\n}\ninline void build(register int now,register int nowl,register int nowr){\n\ttree[now].mem();\n\tif (nowl==nowr){\n\t\tif (a[nowl]==0)tree[now].i=1;\n\t\telse tree[now].o=1;\n\t\treturn;\n\t}\n\tint mid=(nowl+nowr)/2;\n\tbuild(now*2,nowl,mid);\n\tbuild(now*2+1,mid+1,nowr);\n\tpushup(now);\n\treturn;\n}\nint main(){\n\tcin>>n>>m;\n\tscanf(\"%s\",s+1);\n    for (int i=1;i<=n;i++){\n        if (s[i]=='I')a[i]=0;\n        else a[i]=1;\n    }\n\tbuild(1,1,n);\n\tfor (int i=1;i<=m;i++){\n\t\tint flag;\n\t\tscanf(\"%d\",&flag);\n\t\tif (flag==1){\n\t\t\tint x,c;\n\t\t\tchar ch[5];\n\t\t\tscanf(\"%d%s\",&x,ch);\n\t\t\tif (ch[0]=='I')c=0;\n\t\t\telse c=1;\n\t\t\tupdate(1,1,n,x,c);\n\t\t}\n\t\telse{\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tprintf(\"%lld\\n\",query(1,1,n,l,r).ioi);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1586645696,
        "uid": 235926,
        "name": "1kri",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6373"
    },
    {
        "content": "\u62a2\u5148\u5199\u4e00\u4e2a\u65e0\u8111\u52a8\u6001 DP \u89e3\u6cd5\u3002\n\n\u8bbe $dp(i,0),dp(i,1),dp(i,2)$ \u5206\u522b\u8868\u793a\u524d $i$ \u4e2a\u5b57\u7b26\u4e2d $\\texttt{I},\\texttt{IO},\\texttt{IOI}$ \u4f5c\u4e3a\u5b50\u5e8f\u5217\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u5982\u679c $s_i=\\texttt{I}$\uff0c\u90a3\u4e48\u8f6c\u79fb\uff1a\n\n$$dp(i,0)=dp(i-1,0)+1$$\n\n$$dp(i,1)=dp(i-1,1)$$\n\n$$dp(i,2)=dp(i-1,2)+dp(i-1,1)$$\n\n\u5982\u679c $s_i=\\texttt{O}$\uff0c\u90a3\u4e48\u8f6c\u79fb\uff1a\n\n$$dp(i,0)=dp(i-1,0)$$\n\n$$dp(i,1)=dp(i-1,1)+dp(i-1,0)$$\n\n$$dp(i,2)=dp(i-1,2)$$\n\n\u628a\u8f6c\u79fb\u5199\u6210\u77e9\u9635\u5f62\u5f0f\u3002\n\n\u7528\u56db\u7ef4\u5411\u91cf $\\begin{bmatrix}dp(i,0)\\\\ dp(i,1)\\\\ dp(i,2)\\\\ 1\\end{bmatrix}$ \u8868\u793a\u4e00\u4e2a\u72b6\u6001\uff0c\u90a3\u4e48\u5bf9\u4e8e $\\texttt{I}$ \u7684\u8f6c\u79fb\u77e9\u9635\uff1a\n\n$$Mat_{I}=\\begin{bmatrix}1\\ \\ 0\\ \\ 0\\ \\ 0\\\\ 0 \\ \\ 1\\ \\ 1\\ \\ 0\\\\ 0\\ \\ 0\\ \\ 1\\ \\ 0\\\\ 1\\ \\ 0\\ \\ 0\\ \\ 1\\end{bmatrix}$$\n\n\u5bf9\u4e8e $\\texttt{O}$ \u7684\u8f6c\u79fb\u77e9\u9635\uff1a\n\n$$Mat_{O}=\\begin{bmatrix}1\\ \\ 1\\ \\ 0\\ \\ 0\\\\ 0 \\ \\ 1\\ \\ 0\\ \\ 0\\\\ 0\\ \\ 0\\ \\ 1\\ \\ 0\\\\ 0\\ \\ 0\\ \\ 0\\ \\ 1\\end{bmatrix}$$\n\n\u7136\u540e\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u77e9\u9635\u4e58\u79ef\u5373\u53ef\u5b9e\u73b0\u533a\u95f4\u8be2\u95ee\u548c\u5355\u70b9\u4fee\u6539\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int MAXN=500010;\nstruct Mat {\n\tMat () {memset(v,0,sizeof(v));}\n\tll v[4][4];\n\tMat operator * (Mat b) {\n\t\tMat c;\n\t\tfor (int i=0;i<=3;i++) {\n\t\t\tfor (int j=0;j<=3;j++) {\n\t\t\t\tfor (int k=0;k<=3;k++) {c.v[i][j]+=v[i][k]*b.v[k][j];}\n\t\t\t}\n\t\t}\n\t\treturn c;\n\t}\n\tvoid print () {\n\t\tfor (int i=0;i<=3;i++) {\n\t\t\tfor (int j=0;j<=3;j++) {printf(\"%d  \",v[i][j]);}\n\t\tprintf(\"\\n\");\n\t\t}\n\t\treturn;\n\t}\n}_i,_o,_e,v[MAXN<<2];\nint n,m,op,x,y;\nchar c[3],s[MAXN];\nvoid buildt (int p,int l,int r) {\n\tif (l==r) {v[p]=(s[l]=='I'?_i:_o);return;}\n\tint mid=(l+r)>>1;\n\tbuildt(p<<1,l,mid),buildt((p<<1)|1,mid+1,r);\n\tv[p]=v[p<<1]*v[(p<<1)|1];\n\t//printf(\"%d  %d  %d\\n\",p,l,r);\n\t//v[p].print();\n\treturn;\n}\nMat query (int p,int l,int r,int xl,int xr) {\n\tif (xr<l||r<xl) {return _e;}\n\tif (xl<=l&&r<=xr) {return v[p];}\n\tint mid=(l+r)>>1;\n\treturn query(p<<1,l,mid,xl,xr)*query((p<<1)|1,mid+1,r,xl,xr);\n}\nvoid modify (int p,int l,int r,int pos,char c) {\n\tif (l==r) {v[p]=(c=='I'?_i:_o);return;}\n\tint mid=(l+r)>>1;\n\tif (pos<=mid) {modify(p<<1,l,mid,pos,c);}\n\telse {modify((p<<1)|1,mid+1,r,pos,c);}\n\tv[p]=v[p<<1]*v[(p<<1)|1];\n\treturn;\n}\nint main () {\n\t_i.v[0][0]=_i.v[1][1]=_i.v[2][2]=_i.v[3][3]=_o.v[0][0]=_o.v[1][1]=_o.v[2][2]=_o.v[3][3]=1;\n\t_o.v[0][1]=_i.v[3][0]=_i.v[1][2]=1;\n\t_e.v[0][0]=_e.v[1][1]=_e.v[2][2]=_e.v[3][3]=1;\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%s\",s+1);\n\tbuildt(1,1,n);\n\tfor (int i=1;i<=m;i++) {\n\t\tscanf(\"%d\",&op);\n\t\tif (op==1) {\n\t\t\tscanf(\"%d%s\",&x,c+1);\n\t\t\tif (c[1]==s[x]) {continue;}\n\t\t\telse {s[x]=c[1];}\n\t\t\tmodify(1,1,n,x,c[1]);\n\t\t} else {\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tMat ans=query(1,1,n,x,y);\n\t\t\tprintf(\"%lld\\n\",ans.v[3][2]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n\n",
        "postTime": 1586617791,
        "uid": 113546,
        "name": "ix35",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P6373 \u3010\u300cStOI-1\u300dIOI\u8ba1\u6570\u3011"
    },
    {
        "content": "~~\u6bd4\u8d5b\u65f6\u8fd8\u4ee5\u4e3a\u662f\u6811\u72b6\u6570\u7ec4~~\n\n\u5b9e\u9645\u4e0a\u8fd9\u662f\u5230\u7ebf\u6bb5\u6811\u597d\u9898\u3002\n\n\u4f17\u6240\u5468\u77e5\u5355\u70b9\u4fee\u6539\u7ebf\u6bb5\u6811\u7684\u96be\u70b9\u5728\u4e8e\u4fe1\u606f\u5982\u4f55\u5408\u5e76\u4e0a\u4f20\u3002\n\n\u8bbe$\\text{I,O,IO,OI,IOI}$\u4e3a\u5b83\u4eec\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5219\uff1a\n\n$$I=left->I+right->I$$\n\n$$O=left->O+right->O$$\n\n$$IO=left->IO+right->IO+left->I\\times right->O$$\n\n$$OI=left->OI+right->OI+left->O\\times right->I$$\n\n$$IOI=left->IOI+right->IOI+left->I\\times right->OI+left->IO\\times right->I$$\n\n\u5f53\u7136\u8be2\u95ee\u7684\u65f6\u5019\u4e0d\u80fd\u76f4\u63a5\u5de6\u53f3\u513f\u5b50\u7b54\u6848\u76f8\u52a0\uff0c\u4f9d\u7136\u8981update\uff0c\u8be6\u89c1\u4ee3\u7801\u5427(\u6211\u7684\u7684\u7ebf\u6bb5\u6811\u662f\u6307\u9488\u5b9e\u73b0\u7684)\u3002\n\n\u8bb0\u5f97\u5f00long long\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nchar ch[500005], c;\nint n, m, opt, l, r;\n\nstruct node {\n\tint l, r, I, O, IO, OI, IOI;\n\tnode *left = NULL;\n\tnode *right = NULL;\n\t\n\tinline void update() {\n\t\tI = left -> I + right -> I;\n\t\tO = left -> O + right -> O;\n\t\tIO = left -> IO + right -> IO + left -> I * right -> O;\n\t\tOI = left -> OI + right -> OI + left -> O * right -> I;\n\t\tIOI = left -> IOI + right -> IOI + left -> I * right -> OI + left -> IO * right -> I;\n\t}\n\t\n\tinline void me() {\n\t\tI = O = IO = OI = IOI = 0;\n\t}\n\t\n\tinline void build(int l, int r) {\n\t\tthis -> l = l; this -> r = r; me();\n\t\tif (l >= r) {\n\t\t\tif (ch[l] == 'I') I = 1;\n\t\t\telse O = 1;\n\t\t\treturn ;\n\t\t}\n\t\tleft = new node; left -> build(l, l + r >> 1); \n\t\tright = new node; right -> build((l + r >> 1) + 1, r);\n\t\tupdate();\n\t}\n\t\n\tinline void modify(int l, char k) {\n\t\tif (this -> l >= this -> r) {\n\t\t\tI = O = IO = OI = IOI = 0;\n\t\t\tif (k == 'I') I =  1;\n\t\t\telse O = 1;\n\t\t\treturn ;\n\t\t}\n\t\tif (left -> r >= l) left -> modify(l, k);\n\t\telse right -> modify(l, k);\n\t\tupdate();\n\t}\n\t\n\tinline node* query(int l, int r) {\n\t\tnode *ret = new node; ret -> I = I; ret -> O = O; ret -> IO = IO; ret -> OI = OI; ret -> IOI = IOI;\n\t\tif (this -> l >= l && this -> r <= r ) return ret;\n\t\tif (left -> r >= l) ret -> left = left -> query(l, r);\n\t\telse { ret -> left = new node; ret -> left -> me(); }\n\t\tif (left -> r < r) ret -> right = right -> query(l, r);\n\t\telse { ret -> right = new node; ret -> right -> me(); }\n\t\tret -> update(); delete ret -> left; delete ret -> right;\n\t\treturn ret;\n\t}\n};\n\nint main() {\n\tscanf(\"%d%d\", &n, &m); scanf(\"%s\", ch + 1);\n\tnode *root = new node; root -> build(1, n);\n\twhile (m--) {\n\t\tscanf(\"%d%d\", &opt, &l);\n\t\tif (opt == 1) {\n\t\t\tc = getchar(); while (c != 'I' && c != 'O') c = getchar();\n\t\t\tif (ch[l] == c) continue; ch[l] = c;\n\t\t\troot -> modify(l, c);\n\t\t} else {\n\t\t\tscanf(\"%d\", &r); node *cur = root -> query(l, r);\n\t\t\tprintf(\"%d\\n\", cur -> IOI); delete cur;\n\t\t}\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1587111510,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6373 \u3010\u300cStOI-1\u300dIOI\u8ba1\u6570\u3011"
    },
    {
        "content": "### \u6b63\u9898\n\n\u663e\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u7136\u540e\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff0c\u5f53\u4e24\u4e2a\u533a\u95f4\u5408\u5e76\u65f6\uff0c```IOI``` \u4f1a\u6709\u591a\u5c11\u79cd\u60c5\u51b5\uff1f\n\n1. ```IOI``` \u90fd\u5728\u5de6\u533a\u95f4\u3002\n2. ```IOI``` \u90fd\u5728\u53f3\u533a\u95f4\u3002\n3. ```IO``` \u5728\u5de6\u533a\u95f4\uff0c```I``` \u5728\u53f3\u533a\u95f4\u3002\n4. ```I``` \u5728\u5de6\u533a\u95f4\uff0c```OI``` \u5728\u53f3\u533a\u95f4\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u5185\u7684 ```I```\uff0c```O```\uff0c```IO```\uff0c```OI```\uff0c```IOI``` \u7684\u6570\u91cf\u3002\n\n\u8f6c\u79fb\u5f88\u663e\u7136\uff1a\n\n$$I_x=I_{lson}+I_{rson}$$\n\n$$O_x=O_{lson}+O_{rson}$$\n\n$$IO_x=IO_{lson}+IO_{rson}+I_{lson}\\times O_{rson}$$\n\n$$OI_x=OI_{lson}+OI_{rson}+O_{lson}\\times I_{rson}$$\n\n$$IOI_x=IOI_{lson}+IOI_{rson}+I_{lson}\\times OI_{rson}+IO_{lson}\\times I_{rson}$$\n\n### Code\uff1a\n\n```cpp\n#include <cstdio>\n#define lc(x) (x << 1)\n#define rc(x) (x << 1 | 1)\nusing namespace std ;\ntypedef long long ll ;\nconst int MAXN = 5e5 + 10 ;\nint n , m ;\nchar s[MAXN] ;\nstruct sgt {\n\tll i , o , io , oi , ioi ;\n\tint l , r ;\n\tsgt () {i = io = oi = o = ioi = 0 ;}\n} t[MAXN << 2] ;\nvoid push_up (sgt &o , sgt x , sgt y) {\n\to.i = x.i + y.i ;\n\to.o = x.o + y.o ;\n\to.io = x.io + y.io + x.i * y.o ;\n\to.oi = x.oi + y.oi + x.o * y.i ;\n\to.ioi = x.ioi + y.ioi + x.i * y.oi + x.io * y.i ;\n}\nvoid build_tree (int o , int l , int r) {\n\tt[o].l = l ; t[o].r = r ;\n\tif (l == r) {\n\t\ts[l] == 'I' ? t[o].i = 1 : t[o].o = 1 ;\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1 ;\n\tbuild_tree (lc(o) , l , mid) ;\n\tbuild_tree (rc(o) , mid + 1 , r) ;\n\tpush_up (t[o] , t[lc(o)] , t[rc(o)]) ;\n}\nvoid update (int o , int x , char *ch) {\n\tif (t[o].l == t[o].r) {\n\t\tch[0] == 'I' ? (t[o].i = 1 , t[o].o = 0) : (t[o].i = 0 , t[o].o = 1) ;\n\t\treturn ;\n\t}\n\tint mid = t[o].l + t[o].r >> 1 ;\n\tif (x <= mid) update (lc(o) , x , ch) ;\n\telse update (rc(o) , x , ch) ;\n\tpush_up (t[o] , t[lc(o)] , t[rc(o)]) ;\n}\nsgt query (int o , int x , int y) {\n\tif (x <= t[o].l && t[o].r <= y) \n\t\treturn t[o] ;\n\tint mid = t[o].l + t[o].r >> 1 ;\n\tsgt ret , tmp ;\n\tif (x <= mid) {\n\t\ttmp = query (lc(o) , x , y) ;\n\t\tpush_up (ret , ret , tmp) ;\n\t}\n\tif (mid < y) {\n\t\ttmp = query (rc(o) , x , y) ;\n\t\tpush_up (ret , ret , tmp) ;\n\t}\n\treturn ret ;\n}\nint main () {\n\tscanf (\"%d %d\" , &n , &m) ;\n\tscanf (\"%s\" , s + 1) ;\n\tbuild_tree (1 , 1 , n) ;\n\twhile (m--) {\n\t\tint opt , x , y ;\n\t\tchar ch[5] ;\n\t\tscanf (\"%d\" , &opt) ;\n\t\tif (opt == 1) {\n\t\t\tscanf (\"%d %s\" , &x , ch) ;\n\t\t\tupdate (1 , x , ch) ;\n\t\t}\n\t\telse {\n\t\t\tscanf (\"%d %d\" , &x , &y) ;\n\t\t\tprintf (\"%lld\\n\" , query (1 , x , y).ioi) ;\n\t\t}\n\t}\n\treturn 0 ;\n}\n```",
        "postTime": 1587083458,
        "uid": 122641,
        "name": "GIFBMP",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6373 \u3010\u300cStOI-1\u300dIOI\u8ba1\u6570\u3011"
    },
    {
        "content": "### Preface\n\n\u601d\u8def\u4e0d\u96be\u7684\u7ebf\u6bb5\u6811\u57fa\u7840\u9898\uff0c\u7136\u800c\u5751\u70b9\u8fd8\u662f\u4e0d\u5c11\u7684\u3002\n\n### Solution\n\n\u76f4\u63a5\u8bb2\u6b63\u89e3\u3002\n\n\u521a\u5f00\u59cb\u770b\u5230\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u7b2c\u4e00\u611f\u89c9\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u3002\u4f46\u662f\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u662f\u524d\u7f00\u548c\uff0c\u81ea\u5df1\u778e\u641e\u4e86\u51e0\u4e0b\u53d1\u73b0\u5f88\u96be\u7ef4\u62a4\u3002\u6545\u8003\u8651\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u6839\u636e\u8ba1\u6570\u539f\u7406\uff0c\u6211\u4eec\u80fd\u8f7b\u677e\u5f97\u5230`IOI`\u7684\u8ba1\u7b97\u65b9\u5f0f\u3002\u5176\u4e2d\uff0c$k$ \u8868\u793a\u5f53\u524d\u8282\u70b9\uff0c$L,R$ \u5206\u522b\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u3002\n\n- $\\mathrm{I_k=I_L+I_R}$\n- $\\mathrm{O_k=O_L+O_R}$\n- $\\mathrm{IO_k=IO_L+IO_R+I_L\\times O_R}$\n- $\\mathrm{OI_k=OI_L+OI_R+O_L\\times I_R}$\n- $\\mathrm{IOI_k=IOI_L+IOI_R+IO_L\\times I_R+I_L\\times OI_R}$\n\n\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e0a\u8ff0\u4e94\u4e2a\u503c\u5373\u53ef\u3002\n\n### Notice\n\n\u601d\u8def\u4e0d\u96be\uff0c\u4f46\u662f\u5751\u70b9\u8fd8\u662f\u4e0d\u5c11\u7684\u3002\n\n1. \u4e0a\u8ff0\u7ef4\u62a4\u7684\u503c\u8981\u5f00`long long`\u3002\n\n1. \u7ed3\u6784\u4f53\u8fd8\u662f\u8981\u5199\u4e0a\u6784\u9020\u51fd\u6570\uff0c\u8d4b\u521d\u503c\u4e3a $0$\u3002\n\n1. \u7531\u4e8e\u7279\u6b8a\u7684\u8ba1\u6570\u65b9\u5f0f\uff0c`query()`\u7684\u65f6\u5019\u7edf\u8ba1\u7b54\u6848\u4e5f\u8981\u4f7f\u7528\u4e0a\u8ff0\u89c4\u5219\u3002\u8fd9\u4e2a\u65f6\u5019\u91cd\u8f7d\u8fd0\u7b97\u7b26`+`\u4f1a\u663e\u5f97\u65b9\u4fbf\u5f88\u591a\u3002\n\n1. \u5355\u70b9\u4fee\u6539\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u628a\u53e6\u4e00\u4e2a\u5b57\u6bcd\u7684\u7edf\u8ba1\u7684\u503c\u53d8\u4e3a $0$\u3002\n\n1. \u5408\u5e76\u7684\u65f6\u5019\uff0c\u7531\u4e8e\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u6574\u4f53\u8d4b\u503c\uff0c\u6839\u8282\u70b9\u7684\u4fdd\u5b58\u7684`l,r`\uff08\u5373\u5f53\u524d\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u533a\u95f4\uff09\u4f1a\u6539\u53d8\uff0c\u56e0\u6b64\u8981\u7528\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u4fdd\u5b58\u3002\n\n1. \u522b\u5fd8\u4e86\u7ebf\u6bb5\u6811\u6570\u7ec4\u5f00\u5230 $4$ \u500d\u3002\n\n1. \u6ce8\u610f\u5361\u5e38\u3002\n\n### Code\n\n\u672c\u4ee3\u7801\u5f00\u4e86 O2 \u4f18\u5316\u624d\u80fd\u5361\u5e38\u901a\u8fc7\u2026\u2026\u5927\u6982\u662f\u81ea\u5e26\u5927\u5e38\u6570 debuff\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\ntypedef long long ll;\ntypedef const int cint;\ncint MAXN=5e5+5;\nint n,m;\nchar ch[MAXN];\n\nclass segment_tree\n{\nprivate:\n\tstruct node\n\t{\n\t\tint l,r;\n\t\tll i,o,io,oi,ioi;\n\t\tnode(ll L=0,ll R=0,ll I=0,ll O=0,ll IO=0,ll OI=0,ll IOI=0):l(L),r(R),i(I),o(O),io(IO),oi(OI),ioi(IOI){}; //\u6784\u9020\u51fd\u6570\uff0c\u8d4b\u521d\u59cb\u503c\u4e3a0\n\t\tnode operator+(const node a)const//\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\t\t{\n\t\t\tnode res;\n\t\t\tres.i=i+a.i;\n\t\t\tres.o=o+a.o; \n\t\t\tres.io=io+a.io+i*a.o;\n\t\t\tres.oi=oi+a.oi+o*a.i;\n\t\t\tres.ioi=ioi+a.ioi+i*a.oi+io*a.i; \n\t\t\treturn res;//\u6ce8\u610f\u8fd9\u91cc\u4f1a\u6539\u53d8\u539f\u6765\u8282\u70b9\u7684l,r\n\t\t}\n\t}tree[MAXN<<2];//\u522b\u5fd8\u4e86\u5185\u5b58\u8981\u5f00\u591f\n\tvoid pushup(cint now)\n\t{\n\t\tnode res;cint lson=now<<1,rson=now<<1|1;\n\t\tres=tree[lson]+tree[rson];\n\t\tres.l=tree[now].l;res.r=tree[now].r;//\u4e34\u65f6\u53d8\u91cf\u4fdd\u5b58\u539f\u6765\u8282\u70b9\u7684l,r\n\t\ttree[now]=res;\n\t}\npublic:\n\tvoid build(cint now,cint l,cint r)//\u65e0\u5751\u70b9\n\t{\n\t\ttree[now].l=l;tree[now].r=r;\n\t\tif(l==r)\n\t\t{\n\t\t\tif(ch[l]=='I')\ttree[now].i=1;\n\t\t\tif(ch[l]=='O')\ttree[now].o=1;\n\t\t\treturn;\n\t\t}\n\t\tcint mid=(l+r)>>1,lson=now<<1,rson=now<<1|1;\n\t\tbuild(lson,l,mid);\n\t\tbuild(rson,mid+1,r);\n\t\tpushup(now);\n\t}\n\tvoid modify(cint now,cint pos,const char c)\n\t{\n\t\tif(tree[now].l==tree[now].r && tree[now].l==pos)\n\t\t{\n\t\t\tif(c=='I')\ttree[now].i=1,tree[now].o=0;//\u6ce8\u610f\u6539\u53d8\u53e6\u4e00\u4e2a\u5b57\u6bcd\u7684\u503c\n\t\t\tif(c=='O')\ttree[now].o=1,tree[now].i=0;\n\t\t\treturn;\n\t\t}\n\t\tcint mid=(tree[now].l+tree[now].r)>>1,lson=now<<1,rson=now<<1|1;\n\t\tif(pos<=mid)\tmodify(lson,pos,c);\n\t\telse\t\t\tmodify(rson,pos,c);\n\t\tpushup(now);\n\t}\n\tnode query(cint now,cint l,cint r)\n\t{\n\t\tif(l<=tree[now].l && tree[now].r<=r)\n\t\t return tree[now];\n\t\tcint mid=(tree[now].l+tree[now].r)>>1,lson=now<<1,rson=now<<1|1;\n\t\tnode res;//\u7279\u6b8a\u7684\u7edf\u8ba1\u65b9\u5f0f\uff0c\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26+\u7684\u4f18\u70b9\u4f53\u73b0\u5728\u8fd9\u91cc\n\t\tif(l<=mid)\tres=res+query(lson,l,r);\n\t\tif(mid<r)\tres=res+query(rson,l,r);\n\t\treturn res;\n\t}\n}t;\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n     cin>>ch[i];\n    t.build(1,1,n);\n    while(m--)\n    {\n    \tint opt;cin>>opt;\n    \tif(opt==1)\n    \t{\n    \t\tint pos;char c;cin>>pos>>c;\n    \t\tt.modify(1,pos,c);\n\t\t}\n\t\tif(opt==2)\n\t\t{\n\t\t\tint l,r;cin>>l>>r;\n\t\t\tcout<<t.query(1,l,r).ioi<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1587429879,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6373 \u3010\u300cStOI-1\u300dIOI\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5f88\u597d\u7684\u7ebf\u6bb5\u6811\u7684\u8fdb\u9636\u9898\u3002\n\n\u8fd9\u9053\u9898\u8981\u6c42\u7684\u662f `IOI` \u7684\u4e2a\u6570\uff0c\u6240\u4ee5\u9700\u8981\u5b58\u50a8 `I,O,IO,OI,IOI` \u8fd9\u4e9b\u5b57\u7b26\u4e32\u7684\u6570\u91cf\u3002\n\n```\nI\u7684\u6570\u91cf=\u5de6\u5b50\u6811I\u7684\u6570\u91cf+\u53f3\u5b50\u6811I\u7684\u6570\u91cf\nO\u7684\u6570\u91cf=\u5de6\u5b50\u6811O\u7684\u6570\u91cf+\u53f3\u5b50\u6811O\u7684\u6570\u91cf\nIO\u7684\u6570\u91cf=\u5de6\u5b50\u6811IO\u7684\u6570\u91cf+\u53f3\u5b50\u6811IO\u7684\u6570\u91cf+\u5de6\u5b50\u6811I\u7684\u6570\u91cf*\u53f3\u5b50\u6811O\u7684\u6570\u91cf\nOI\u7684\u6570\u91cf=\u5de6\u5b50\u6811OI\u7684\u6570\u91cf+\u53f3\u5b50\u6811OI\u7684\u6570\u91cf+\u5de6\u5b50\u6811O\u7684\u6570\u91cf*\u53f3\u5b50\u6811I\u7684\u6570\u91cf\nIOI\u7684\u6570\u91cf=\u5de6\u5b50\u6811IOI\u7684\u6570\u91cf+\u53f3\u5b50\u6811IOI\u7684\u6570\u91cf+\u5de6\u5b50\u6811IO\u7684\u6570\u91cf*\u53f3\u5b50\u6811I\u7684\u6570\u91cf+\u5de6\u5b50\u6811I\u7684\u6570\u91cf*\u53f3\u5b50\u6811OI\u7684\u6570\u91cf\n```\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u4e5f\u6bd4\u8f83\u65b9\u4fbf\u5408\u5e76\uff08\u5c31\u662f\u4ee3\u7801\u7e41\u6742\u4e86\u70b9\uff09\u3002\n\n\u53e6\u5916\u7684\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n\u5bf9\u4e8e\u5408\u5e76\u6570\u636e\u7684\u64cd\u4f5c\u5176\u5b9e\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a `\u6570\u636ea+\u6570\u636eb` \uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u529e\u6cd5\u6765\u7b80\u5316\u4ee3\u7801\u3002\n\n\u53e6\u5916\uff0c\u4e00\u5b9a\u8981\u5f00 `long long` \uff01\n\n\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=500009;\nstruct segment_tree{\n\tlong long I,O,IO,OI,IOI;//\u8fd9\u4e9b\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570\n}tree[N*4];\nint n,m;\nchar ch[N];\nsegment_tree set(segment_tree &a)//\u5c06a\u5b58\u50a8\u7684\u6570\u636e\u6e05\u7a7a\u4e3a\u51680\uff08\u521d\u59cb\u5316\uff09\u3002\n{\n\ta.I=a.O=a.IO=a.OI=a.IOI=0;\n}\nsegment_tree operator+(segment_tree now1,segment_tree now2)//\u76f8\u5f53\u4e8e\u5f53\u65f6\u63d0\u5230\u7684\u5408\u5e76\u64cd\u4f5c\u3002\n{\n\tsegment_tree ans;\n\tset(ans);\n\tans.I=now1.I+now2.I;\n\tans.O=now1.O+now2.O;\n\tans.IO=now1.IO+now2.IO+(1ll*now1.I*now2.O);\n\tans.OI=now1.OI+now2.OI+(1ll*now1.O*now2.I);\n\tans.IOI=now1.IOI+now2.IOI+(1ll*now1.I*now2.OI)+(1ll*now1.IO*now2.I);\n\treturn ans;\n}\nvoid make(int l,int r,int now)\n{\n\tset(tree[now]);\n\tif(l==r)\n\t{\n\t\tif(ch[l]=='I') tree[now].I=1;\n\t\tif(ch[l]=='O') tree[now].O=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tmake(l,mid,now*2);\n\tmake(mid+1,r,now*2+1);\n\ttree[now]=tree[now*2]+tree[now*2+1];//\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u597d\u5904\u5c31\u662f\u80fd\u8ba9\u7ebf\u6bb5\u6811\u6838\u5fc3\u4ee3\u7801\u90e8\u5206\u548c\u666e\u901a\u533a\u95f4\u52a0\u7ebf\u6bb5\u6811\u4ee3\u7801\u76f8\u4f3c\uff0c\u65b9\u4fbf\u8c03\u8bd5\u3002\n//\tprintf(\"%d %d %d %d %d %d %d\\n\",l,r,tree[now].I,tree[now].O,tree[now].IO,tree[now].OI,tree[now].IOI);\n}\nvoid change(int nowl,int nowr,int pos,char k,int now)\n{\n\tif(nowr<pos||pos<nowl) return;\n\tif(nowl==nowr&&nowl==pos)\n\t{\n\t\tset(tree[now]);\n\t\tif(k=='I') tree[now].I=1;\n\t\tif(k=='O') tree[now].O=1;\n\t\treturn;\n\t}\n\tint mid=(nowl+nowr)/2;\n\tif(pos<=mid) change(nowl,mid,pos,k,now*2);\n\telse change(mid+1,nowr,pos,k,now*2+1);\n\ttree[now]=tree[now*2]+tree[now*2+1];\n}\nsegment_tree query(int nowl,int nowr,int posl,int posr,int now)\n{\n\tif(posl<=nowl&&nowr<=posr) return tree[now];\n\tint mid=(nowl+nowr)/2;\n\tsegment_tree ans;\n\tset(ans);//\u522b\u5fd8\u4e86\u521d\u59cb\u5316\n\tif(posl<=mid) ans=ans+query(nowl,mid,posl,posr,now*2);\n\tif(mid<posr) ans=ans+query(mid+1,nowr,posl,posr,now*2+1);\n\treturn ans;\n}\nint flg;\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%s\",ch+1);\n\tmake(1,n,1);\n\twhile(m--)\n\t{\n\t//\tfor(int i=1;i<=20;i++)\n\t//\tprintf(\"%d %d %d %d %d %d %d\\n\",tree[i].l,tree[i].r,tree[i].I,tree[i].O,tree[i].IO,tree[i].OI,tree[i].IOI);\n\t\tscanf(\"%d\",&flg);\n\t\tif(flg==1)\n\t\t{\n\t\t\tint x;\n\t\t\tchar ch,c[5];\n\t\t\tscanf(\"%d%s\",&x,c);//\u5173\u4e8e\u8fd9\u4e2a\u5b57\u7b26\u8bfb\u5165\u7684\u95ee\u9898\uff0c\u672c\u673a\u603b\u662f\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u501f\u9274\u4e86\u9898\u89e3\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u5b57\u7b26\u4e32\u6765\u8bfb\u5165\u5b57\u7b26\u3002\n\t\t\tch=c[0];\n\t\t//\tcout<<ch<<endl;\n\t\t\tchange(1,n,x,ch,1);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l,r;\n\t\t\tscanf(\"%d%d\",&l,&r);\n\t\t\tsegment_tree ans=query(1,n,l,r,1);\n\t\t\tprintf(\"%lld\\n\",ans.IOI);\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1608211059,
        "uid": 192044,
        "name": "tobie",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6373 \u3010\u300cStOI-1\u300dIOI\u8ba1\u6570\u3011"
    },
    {
        "content": "\u5b98\u65b9\u9898\u89e3\u5bf9\u4e8e\u601d\u8def\u7684\u8bb2\u8ff0\u5df2\u7ecf\u975e\u5e38\u7684\u6e05\u6670\u4e86.\n\n### \u5206\u4eab\u4e00\u4e2a\u4e2a\u4eba\u5fc3\u5f97:\n\n#### \u7ebf\u6bb5\u6811\u5bf9\u4e8e\u5de6\u53f3\u533a\u95f4\u7684\u8fd0\u7528\n\n\u7ebf\u6bb5\u6811\u4e3b\u8981\u5c31\u662f\u5999\u5728\u5b83\u7684\u5408\u5e76\u533a\u95f4\u529f\u80fd\u4ee5\u53ca\u5bf9\u4e8e\u4e00\u4e2a\u6574\u5757\u8fdb\u884c\u5206\u6cbb\u7684\u601d\u60f3.\u4f60\u4f1a\u53d1\u73b0\uff0c\u6bcf\u6b21\u7ebf\u6bb5\u6811\u7684\u66f4\u65b0\u57fa\u672c\u4e0a\u90fd\u662f\u57fa\u4e8e\u5de6\u53f3\u513f\u5b50\u8fd9\u4e24\u4e2a\u5de6\u53f3\u533a\u95f4\u7684.\u5bf9\u4e8e\u53ef\u4ee5\u533a\u95f4\u7ef4\u62a4\u7684\u4fe1\u606f(\u57fa\u672c\u4e0a\u4e5f\u5c31\u662f\u53ef\u4ee5\u5206\u88c2\u6210\u5b50\u95ee\u9898\u7684\u95ee\u9898)\uff0c\u6211\u4eec\u603b\u662f\u6bcf\u6b21\u66f4\u65b0\u540e\u5c31\u9012\u5f52\u56de\u6eaf\u6839\u636e\u5f53\u524d\u70b9\u7684\u5de6\u53f3\u513f\u5b50\u8282\u70b9\u7ef4\u62a4\u4fe1\u606f.\u7ebf\u6bb5\u6811\u6700\u5999\u7684\u5730\u65b9\u6b63\u662f\u5728\u4e8e\u6b64\u5904\uff0c\u4e0d\u7ba1\u662f\u5408\u5e76\u4fe1\u606f(\u5408\u5e76\u7b54\u6848),\u6216\u8005\u662f\u5206\u6cbb\u5904\u7406\u4fe1\u606f(\u4fee\u6539 or \u67e5\u8be2)\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u90fd\u662f\u5f97\u7528\u5230\u5de6\u53f3\u533a\u95f4\u7684.\n\n#### \u4f8b\u5982\u8fd9\u4e2a\u9898\u76ee:\n\n\u8981\u6c42\u6211\u4eec\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u5185\"IOI\"\u7684\u4e2a\u6570\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\u6765\u89e3\u51b3.\u5047\u8bbe\u6211\u4eec\u8981\u67e5\u8be2\u7684\u533a\u95f4\u662f$[L,R]$,\u6211\u4eec\u53ef\u4ee5\u5148\u5904\u7406$[L,mid]$\u7684\u7b54\u6848\u4ee5\u53ca$[mid+1,R]$ \u7684\u7b54\u6848.\n\n\u540c\u65f6\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u90e8\u5206\u7b54\u6848\u662f\u6a2a\u8de8\u4e86\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\u7684,\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5904\u7406\u51fa\u5de6\u8fb9\u7684\"I\"\u7684\u6570\u91cf\u4ee5\u53ca\"IO\"\u7684\u6570\u91cf(\u663e\u7136\u5de6\u533a\u95f4\u7684\"OI\"\u5bf9\u4e8e\u8fd9\u79cd\u6a2a\u8de8\u5de6\u53f3\u4e24\u8fb9\u7684\u7b54\u6848\u6ca1\u6709\u8d21\u732e)\uff0c\u540c\u65f6\u4e5f\u5904\u7406\u51fa\u53f3\u533a\u95f4\"OI\"\u3001\"I\"\u7684\u6570\u91cf,\u8fd9\u65f6\u5019\u6211\u4eec\u6839\u636e\u4e58\u6cd5\u539f\u7406(\u5177\u4f53\u53ef\u4ee5\u770b\u5b98\u65b9\u9898\u89e3)\u9012\u5f52\u5904\u7406\u95ee\u9898\u5373\u53ef\n\n\u800c\u7ebf\u6bb5\u6811\u662f\u53ef\u4ee5\u5f88\u597d\u7684\u9002\u5e94\u8fd9\u4e2a\u95ee\u9898\u7684,\u56e0\u4e3a\u5176\u5b9e\u7ebf\u6bb5\u6811\u8fd0\u7528\u7684\u4e5f\u662f\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5b83\u521a\u597d\u4e5f\u6709\u5de6\u53f3\u533a\u95f4\uff0c\u800c\u4e14\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f,\u5e76\u4e14\u6709\u7740\u4f18\u79c0\u7684$logn$(\u5c3d\u7ba1\u5e38\u6570\u6bd4\u8f83\u5927......)\u7684\u65f6\u95f4\u590d\u6742\u5ea6,\u6240\u4ee5\u7ebf\u6bb5\u6811\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u4e86.\n\n\u8d34\u4e0a\u8fd9\u9053\u9898\u7684\uff21\uff23\u4ee3\u7801:\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long \nint n,Q;\nchar A[500005];\nint a[500005];\n\nstruct node{\n\t\n\tint i,o,oi,io,ioi,l,r;\n\tvoid clean()\n\t{\n\t\ti = o = io = oi = ioi = 0;\n\t\treturn ;\n\t}\n\t\n}T[2000005];\n\nnode updata(node x,node l,node r)\n{\n\tx.oi = l.o * r.i + l.oi + r.oi;\n\tx.io = l.i * r.o + l.io + r.io;\n\tx.i = l.i + r.i;\n\tx.o = l.o + r.o;\n\tx.ioi = l.i * r.oi + l.io * r.i + l.ioi + r.ioi;\n\treturn x;\n}\n\nvoid build_tree(int x,int l,int r)\n{\n\tT[x].clean();\n\tT[x].l = l , T[x].r = r;\n\tif(l == r)\n\t{\n\t\tif(a[l] == 0)T[x].o = 1;\n\t\telse T[x].i = 1;\n\t\treturn ;\n\t}\n\tint mid = (l + r) >> 1;\n\tbuild_tree(x << 1 , l , mid);\n\tbuild_tree(x << 1 | 1 , mid + 1 , r );\n\tT[x] = updata(T[x],T[x << 1] , T[x << 1 | 1]);\n\treturn ;\n}\n\nnode getans(int x,int l,int r)\n{\n\tif(T[x].l >= l && T[x].r <= r)return T[x];\n\tint mid = (T[x].l + T[x].r) >> 1;\n\tnode Sum ;\n\tSum.clean();\n\tif(l <= mid)Sum = updata(Sum,Sum,getans(x << 1, l , r));\n\tif(r  > mid)Sum = updata(Sum,Sum,getans(x << 1 | 1, l , r ));\n\treturn Sum;\n}\n\nvoid change(int x,int pos,int k)\n{\n\tif(T[x].l == T[x].r && T[x].l == pos)\n\t{\n\t\tif(k == 1)T[x].i = 1, T[x].o = 0;\n\t\telse T[x].i = 0 , T[x].o = 1;\n\t\treturn ;\n\t}\n\tint mid = (T[x].l + T[x].r) >> 1;\n\tif(pos <= mid)change(x << 1 , pos , k);\n\telse change(x << 1 | 1 , pos , k );\n\tT[x] = updata(T[x],T[x << 1] , T[x << 1 | 1]);\n\treturn ;\n}\n\nsigned main()\n{\n\tcin >> n >> Q;\n\tcin >> A;\n\tfor(int i = 0 ; i < n ; i ++)\n\t{\n\t\tif(A[i] == 'I')\n\t\ta[i + 1] = 1;\n\t\telse a[i + 1] = 0;\n\t}\n\tbuild_tree(1 , 1 , n);\n\twhile(Q)\n\t{\n\t\tint op,l,r;\n\t\tchar pos;\n\t\tcin >> op >> l;\n\t\tif(op == 2)\n\t\t{\n\t\t\tcin >> r;\n\t\t\tcout << getans(1,l,r).ioi << endl;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tcin >> pos;\n\t\t\tif(pos == 'I')\n\t\t\tchange(1,l,1);\n\t\t\telse change(1,l,0);\n\t\t}\n\t\tQ--;\n\t}\n\treturn 0;\n}\n```\n\n#### \u5c0f\u7ed3\n\n\u7ebf\u6bb5\u6811\u7684\u9898\u76ee\u6211\u4eec\u4e0d\u5e94\u8be5\u4e00\u5f00\u59cb\u5c31\u76f4\u63a5\u7ebf\u6bb5\u6811\u66b4\u529b\u641e\uff0c\u800c\u662f\u5e94\u8be5\u5148\u5206\u6790\u95ee\u9898\u4e3a\u4ec0\u4e48\u80fd\u7528\u7ebf\u6bb5\u6811\u505a\uff0c\u7ebf\u6bb5\u6811\u505a\u8fd9\u9053\u9898\u4f18\u8d8a\u6027\u5728\u54ea\u91cc\uff0c\u8fd9\u6837\u5b50\u6536\u83b7\u4e5f\u8bb8\u4f1a\u591a\u4e00\u70b9\uff0c\u4e5f\u53ef\u4ee5\u52a0\u6df1\u81ea\u5df1\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u7406\u89e3\uff0c\u7ebf\u6bb5\u6811\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6216\u8bb8\u4e5f\u53ef\u4ee5\u8bf4\u6210\u662f\u4e00\u79cd\u601d\u60f3\u3000",
        "postTime": 1603675389,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6373 \u3010\u300cStOI-1\u300dIOI\u8ba1\u6570\u3011"
    },
    {
        "content": "## $\\mathsf{Solution\\space To\\space P6373}$  \n\n\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u597d\u9898  \n\n\u901a\u8fc7\u8fd9\u9898\u53ef\u4ee5\u5b66\u5230\u6709\u65f6\u5019\u5e76\u4e0d\u80fd\u4e00\u53e3\u6c14\u76f4\u63a5\u6c42\u51fa\u7b54\u6848\uff0c\u8003\u8651\u5230\u7ebf\u6bb5\u6811\u64cd\u4f5c\u7684\u6838\u5fc3\u662f\u5408\u5e76\u5b50\u95ee\u9898\uff0c\u6240\u4ee5\u672c\u9898\u89e3\u9898\u7684\u5173\u952e\u5373\u5728\u4e8e\u5c06 `IOI` \u5206\u89e3\u6210 `I O IO OI` \u51e0\u4e2a\u6bd4\u8f83\u597d\u5408\u5e76\u7684\u53c2\u6570\u6700\u540e\u5f97\u5230\u6240\u6c42  \n\n\u51e0\u4e2a\u91cf\u7684\u7ef4\u62a4\u65b9\u5f0f  \n\n`I:` \u5de6\u53f3\u533a\u95f4 `I` \u6570\u91cf\u4e4b\u548c  \n`O:` \u540c `I`  \n`IO:` \u5de6\u53f3\u533a\u95f4\u7684 `IO` \u6570\u91cf\u4e4b\u548c\uff0c\u518d\u52a0\u4e0a\u5de6\u533a\u95f4\u7684 `I` \u4e58\u4ee5\u53f3\u533a\u95f4\u7684 `O`  \n`OI:` \u540c `IO`  \n`IOI:` \u5de6\u53f3\u533a\u95f4\u7684 `IOI` \u6570\u91cf\u4e4b\u548c\uff0c\u52a0\u4e0a\u5de6\u533a\u95f4\u7684 `IO` \u4e58\u4ee5\u53f3\u533a\u95f4\u7684 `I`\uff0c\u52a0\u4e0a\u53f3\u533a\u95f4\u7684 `OI` \u4e58\u4ee5\u5de6\u533a\u95f4\u7684 `I`  \n\n\u7ebf\u6bb5\u6811\u8282\u70b9\u5b9a\u4e49\u90e8\u5206\n```\nstruct seg_tree{\n    LL I,O,IO,OI,IOI;\n}tree[maxn<<2];\n//\u6b64\u5904\u91cd\u8f7d\u52a0\u53f7\u6548\u679c\u548cpushup\u6548\u679c\u4e00\u6837\uff0c\u4f46\u662f\u5728\u533a\u95f4\u67e5\u8be2\u7684\u65f6\u5019\u66f4\u7b80\u6d01\nseg_tree operator + (const seg_tree &x,const seg_tree &y)\n{\n    seg_tree t;\n    t.I=x.I+y.I;\n    t.O=x.O+y.O;\n    t.IO=x.IO+y.IO+x.I*y.O;\n    t.OI=x.OI+y.OI+x.O*y.I;\n    t.IOI=x.IOI+y.IOI+x.IO*y.I+x.I*y.OI;\n    return t;\n}\n```\n\n------------\n\u7136\u9e45\u4f20\u7edf\u7ebf\u6bb5\u6811\u901a\u8fc7\u672c\u9898\u7684\u603b\u7528\u65f6\u5927\u6982\u5728 $2\\sim3s$ \u5de6\u53f3  \n\u867d\u7136\u53ef\u4ee5\u901a\u8fc7\uff0c\u4f46\u662f\u53ef\u4ee5\u8ffd\u6c42\u66f4\u597d\u7684\u505a\u6cd5  \n\u6240\u4ee5\u5c31\u53ef\u4ee5\u7528zkw\u7ebf\u6bb5\u6811\u6765\u5927\u5e45\u5ea6\u4f18\u5316\u5e38\u6570\u4e86  \n### zkw\u7ebf\u6bb5\u6811\n\n#### 1.\u4f18\u5316\u539f\u7406\uff1a  \n\u4f20\u7edf\u7ebf\u6bb5\u6811\u91c7\u7528\u7684\u662f\u9012\u5f52\u5b9e\u73b0\uff0c\u9012\u5f52\u672c\u8eab\u5e38\u6570\u4f1a\u5927\u4e8e\u8fed\u4ee3\uff0c\u5e76\u4e14\u5185\u90e8\u7684\u5404\u79cd\u5224\u65ad\u4ee5\u53ca\u8f83\u591a\u7684\u53c2\u6570\u4f20\u9012\u5bfc\u81f4\u4f20\u7edf\u7ebf\u6bb5\u6811\u7684\u5e38\u6570\u4f1a\u6bd4\u8f83\u5927  \nzkw\u7ebf\u6bb5\u6811\u91c7\u7528\u7684\u662f\u8fed\u4ee3\u5b9e\u73b0\uff0c\u5e38\u6570\u4e0a\u8fdc\u4f18\u4e8e\u4f20\u7edf\u7ebf\u6bb5\u6811  \n~~\u800c\u4e14\u7801\u91cf\u5c0f\uff08\u4e0d\u4f1a\u8fd9\u624d\u662f\u4e3b\u8981\u539f\u56e0\u5427\u4e0d\u4f1a\u5427\u4e0d\u4f1a\u5427~~  \n#### 2.\u5b9e\u73b0\u65b9\u5f0f  \nzkw\u7ebf\u6bb5\u6811\u5b58\u50a8\u65b9\u5f0f\u548c\u7ebf\u6bb5\u6811\u7c7b\u4f3c\uff0c\u8282\u70b9 $i$ \u7684\u5de6\u53f3\u513f\u5b50\u5206\u522b\u4e3a $i\\times2$ \u548c $i\\times2+1$\uff0c\u4f7f\u7528\u6700\u4e0b\u9762\u4e00\u5c42\u8282\u70b9\u6765\u8868\u793a\u5355\u4e2a\u70b9\u3002  \n\u53f6\u5b50\u7ed3\u70b9\u8868\u793a\u7684\u4fe1\u606f\u662f\u4e00\u5f00\u59cb\u5c31\u77e5\u9053\u7684\uff08\u5355\u70b9\uff09  \n\u4f20\u7edf\u7ebf\u6bb5\u6811\u662f\u9012\u5f52\u5efa\u6811\uff0c\u5148\u8981\u9012\u5f52\u5230\u6700\u5e95\u5c42\u7136\u540e\u66f4\u65b0\u4e0a\u5c42  \nzkw\u7ebf\u6bb5\u6811\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u4f46\u662f\u7701\u53bb\u4e86\u9012\u5f52\u5230\u6700\u5e95\u5c42\u8fd9\u4e00\u6b65  \n\n\u6240\u4ee5\u6211\u4eec\u9996\u5148\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9  \n\u6309\u7167\u4f20\u7edf\u7ebf\u6bb5\u6811\u7684\u7f16\u53f7\u65b9\u5f0f\uff0c\u7b2c\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7f16\u53f7\u5e94\u8be5\u4e3a $2^k$ \uff08$k=\\lceil \\log_2 N\\rceil$\uff09  \n\n\u4f46\u662fzkw\u7ebf\u6bb5\u6811\u56e0\u4e3a\u533a\u95f4\u67e5\u8be2\u65b9\u5f0f\u6bd4\u8f83\u7279\u6b8a\uff0c\u53f6\u5b50\u7f16\u53f7\u6574\u4f53\u8981\u52a0\u4e00\uff0c\u53ef\u4ee5\u5148\u4e0d\u7ba1\u8fd9\u4e2a\uff0c\u770b\u5b8c\u533a\u95f4\u67e5\u8be2\u5c31\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e86  \n\n\u6545\u5efa\u6811\u4ee3\u7801\u5982\u4e0b  \n```\nvoid build()\n{\n    M=1;\n    while(M<N) M<<=1;\n    //M+1\u5373\u4e3a\u7b2c\u4e00\u4e2a\u53f6\u5b50\u7ed3\u70b9\n    for(int i=1;i<=N;i++)\n        tree[i+M].I=(s[i]=='I'),tree[i+M].O=(s[i]=='O');//\u53f6\u7ed3\u70b9\u5355\u70b9\u4fe1\u606f\n    for(int i=M-1;i;i--) tree[i]=tree[ls]+tree[rs];\n    //\u91cd\u8f7d\u4e86\u52a0\u53f7\uff0c\u6b64\u5904\u5373\u4e3apushup\n    return ;\n}\n```  \n\n\n------------\n\n\u5355\u70b9\u4fee\u6539\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd8\u662f\u60f3\u4f20\u7edf\u7684\u4fee\u6539\uff0c\u5148\u9012\u5f52\u627e\u5230\u53f6\u5b50\u8282\u70b9\u66f4\u65b0\u4fe1\u606f\u7136\u540e\u9010\u7ea7\u66f4\u65b0\u7956\u5148  \n\u5efa\u6811\u8fc7\u7a0b\u4e2d\u7684\u53d8\u91cf `M` \u53ef\u4ee5\u5e2e\u6211\u4eec $O(1)$ \u5b9a\u4f4d\u5230\u53f6\u5b50\u7ed3\u70b9\u4f4d\u7f6e  \n\u6545\u5355\u70b9\u4fee\u6539\u4ee3\u7801\u5982\u4e0b  \n```\nvoid update(int i)\n{\n    i+=M;//\u5b9a\u4f4d\u5230\u53f6\u5b50\u8282\u70b9\n    swap(tree[i].I,tree[i].O);//\u4fee\u6539\u4fe1\u606f\n    //\u6211\u5728\u4e3b\u51fd\u6570\u4e2d\u7279\u5224\u6389\u4e86\u4fee\u6539\u4f4d\u7f6e\u539f\u503c\u7b49\u4e8e\u4fee\u6539\u503c\u7684\u4fee\u6539\n    while(i>>=1) tree[i]=tree[ls]+tree[rs];//\u9010\u7ea7\u66f4\u65b0\u5230\u6839\n    return ;\n}\n```  \n\u77ed\uff0c\u800c\u4e14\u5e38\u6570\u5f88\u5c0f  \n\n\n------------\n\n\u6700\u540e\u662f\u533a\u95f4\u67e5\u8be2\uff0c\u8fd9\u4e5f\u662f\u672c\u9898zkw\u7ebf\u6bb5\u6811\u6700\u96be\u7406\u89e3\u7684\u90e8\u5206  \n![](https://cdn.luogu.com.cn/upload/image_hosting/0kp5zsc9.png)  \n\u56fe\u4e2d\u6807\u7eff\u7684\u533a\u95f4\u662f\u4f20\u7edf\u7ebf\u6bb5\u6811\u9012\u5f52\u8fc7\u7a0b\u4e2d\u4f1a\u8fd4\u56de\u7684\u51e0\u4e2a\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u7531\u8fd9\u51e0\u4e2a\u533a\u95f4\u62fc\u6210  \nzkw\u5927\u795e\u544a\u8bc9\u6211\u4eec\u628a\u533a\u95f4 $[L,R]$ \u8f6c\u6210 $(L-1,R+1)$\uff08\u8fd9\u4e5f\u662f\u4e3a\u5565\u5efa\u6811\u7684\u65f6\u5019\u8981\u52a0\u4e00\uff0c\u4e0d\u7136\u4f1a\u8ba9 $L-1$ \u53bb\u5230\u9519\u8bef\u7684\u5730\u65b9\uff09  \n\u6240\u4ee5\u9010\u7ea7\u5411\u4e0a\u7684\u8fc7\u7a0b\u5c31\u662f  \n![](https://cdn.luogu.com.cn/upload/image_hosting/4z04duu9.png)  \n\u7136\u540ezkw\u5927\u795e\u5c31\u603b\u7ed3\u51fa\u6765\u4e86\u89c4\u5f8b  \n1. \u5728\u5de6\u7aef\u70b9\u5411\u4e0a\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u5de6\u7aef\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u662f\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u513f\u5b50\u7684\u65f6\u5019\uff0c\u5176\u5144\u5f1f\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u4e00\u5b9a\u5728\u6211\u4eec\u6240\u6c42\u7684\u533a\u95f4\u4e2d  \n2. \u5728\u53f3\u7aef\u70b9\u5411\u4e0a\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u53f3\u7aef\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u662f\u67d0\u4e2a\u8282\u70b9\u7684\u53f3\u513f\u5b50\u65f6\uff0c\u5176\u5144\u5f1f\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u4e00\u5b9a\u5728\u6211\u4eec\u6240\u6c42\u7684\u533a\u95f4\u4e2d  \n3. \u4e0a\u8ff0\u5411\u4e0a\u8fc7\u7a0b\u4e00\u76f4\u8fdb\u884c\u5230\u5de6\u53f3\u7aef\u70b9\u4e92\u4e3a\u5bf9\u65b9\u5144\u5f1f\u8282\u70b9  \n\n\u6240\u4ee5\u6211\u4eec\u533a\u95f4\u67e5\u8be2\u7684\u4ee3\u7801\u4e5f\u6709\u5566  \n\uff08\u6ce8\u610f\u672c\u9898\u7684\u533a\u95f4\u662f\u5206\u5de6\u53f3\u7684\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u91c7\u7528\u52a0\u53f7\u4ee3\u66ffpushup\u7684\u8bdd\uff0c\u8fd9\u4e2a\u52a0\u6cd5\u662f\u4e0d\u6ee1\u8db3\u4ea4\u6362\u5f8b\u7684\uff0c\u597d\u5728zkw\u7ebf\u6bb5\u6811\u7d2f\u52a0\u7684\u533a\u95f4\u5728\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u5904\u90fd\u662f\u5206\u522b\u6709\u987a\u5e8f\u7684\uff0c\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u53d8\u91cf\u505a\uff09  \n```\nseg_tree query(int l,int r)\n{\n    seg_tree lre,rre;\n    lre.I=lre.IO=lre.IOI=lre.O=lre.OI=0;\n    rre.I=rre.IO=rre.IOI=rre.O=rre.OI=0;\n    //l^r^1=0\u7684\u65f6\u5019l,r\u4e92\u4e3a\u5144\u5f1f\u8282\u70b9\uff0c\u53ef\u4ee5\u4ece\u7ebf\u6bb5\u6811\u6807\u53f7\u65b9\u5f0f\u7406\u89e3\u8fd9\u4e00\u70b9\n    //l>>=1,r>>=1 \u662f\u5c06\u5176\u53d8\u4e3a\u5176\u7236\u4eb2\u8282\u70b9\n    for(l=l+M-1,r=r+M+1;l^r^1;l>>=1,r>>=1)\n    {\n        //\u5728\u7ebf\u6bb5\u6811\u4e2d\uff0c\u9664\u6839\u8282\u70b9\u5916\u4e00\u4e2a\u8282\u70b9\u662f\u67d0\u4e2a\u8282\u70b9\u5de6\u513f\u5b50\u7684\u5145\u8981\u6761\u4ef6\u5c31\u662f\u4ed6\u662f\u4e2a\u5076\u6570\n        if(~l&1) lre=lre+tree[l^1];\n        //\u540c\u7406\uff0c\u662f\u53f3\u513f\u5b50\u7684\u5145\u8981\u6761\u4ef6\u5c31\u662f\u4ed6\u662f\u4e2a\u5947\u6570\n        if(r&1) rre=tree[r^1]+rre;//\u6ce8\u610f\u6b64\u5904\u52a0\u6cd5\u987a\u5e8f\uff0c+\u53f7\u5de6\u4fa7\u4e00\u5b9a\u662f\u9760\u5de6\u7684\u533a\u95f4\n        //\u8282\u70b9i\u7684\u5144\u5f1f\u8282\u70b9\u5373\u4e3ai^1\n    }\n    return lre+rre;\n}\n```  \n\n\n------------\n\u533a\u95f4\u4fee\u6539\u672c\u9898\u6ca1\u6709\u6d89\u53ca\uff0c\u4f46\u662f\u57fa\u672c\u601d\u8def\u4e5f\u662f\u533a\u95f4\u4fee\u6539\u7684\u601d\u8def\uff0c\u7136\u540e\u4e3a\u4e86\u907f\u514dpushdown\uff08\u81ea\u5e95\u5411\u4e0a\u600e\u4e48pushdown\u554a\uff09\uff0c\u91c7\u7528\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u6b64\u5904\u70b9\u5230\u4e3a\u6b62  \n\n\n------------\n\u5b8c\u6574\u4ee3\u7801  \n```\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cctype>\n#include<cstdlib>\n#include<ctime>\nusing namespace std;\n#define getchar() (SS==TT&&(TT=(SS=BB)+fread(BB,1,1<<20,stdin),TT==SS)?EOF:*SS++)\nchar BB[1<<20],*SS=BB,*TT=BB;\ninline int R()\n{\n    int re;\n    char c;\n    while(!isdigit(c=getchar()));\n    re=c-48;\n    while(isdigit(c=getchar()))\n    re=re*10+c-48;\n    return re;\n}\nconst int maxn=500007;\ntypedef long long LL;\nstruct seg_tree{\n    LL I,O,IO,OI,IOI;\n}tree[maxn<<2];\nseg_tree operator + (const seg_tree &x,const seg_tree &y)\n{\n    seg_tree t;\n    t.I=x.I+y.I;\n    t.O=x.O+y.O;\n    t.IO=x.IO+y.IO+x.I*y.O;\n    t.OI=x.OI+y.OI+x.O*y.I;\n    t.IOI=x.IOI+y.IOI+x.IO*y.I+x.I*y.OI;\n    return t;\n}\n#define ls (i<<1)\n#define rs (i<<1|1)\nchar s[maxn];\nint M;\nint N,Q;\nvoid build()\n{\n    M=1;\n    while(M<N) M<<=1;\n    for(int i=1;i<=N;i++)\n        tree[i+M].I=(s[i]=='I'),tree[i+M].O=(s[i]=='O');\n    for(int i=M-1;i;i--) tree[i]=tree[ls]+tree[rs];\n    return ;\n}\nvoid update(int i)\n{\n    i+=M;\n    swap(tree[i].I,tree[i].O);\n    while(i>>=1) tree[i]=tree[ls]+tree[rs];\n    return ;\n}\nseg_tree query(int l,int r)\n{\n    seg_tree lre,rre;\n    lre.I=lre.IO=lre.IOI=lre.O=lre.OI=0;\n    rre.I=rre.IO=rre.IOI=rre.O=rre.OI=0;\n    for(l=l+M-1,r=r+M+1;l^r^1;l>>=1,r>>=1)\n    {\n        if(~l&1) lre=lre+tree[l^1];\n        if(r&1) rre=tree[r^1]+rre;\n    }\n    return lre+rre;\n}\nint main()\n{\n    #ifndef ONLINE_JUDGE\n    freopen(\"1.in\",\"r\",stdin);\n    #endif\n    N=R();Q=R();\n    char c;\n    while((c=getchar())!='I'&&c!='O');\n    s[1]=c;\n    for(int i=2;i<=N;i++)\n        s[i]=getchar();\n    build();\n    int op,l,r;\n    while(Q--)\n    {\n        op=R();\n        if(op==1)\n        {\n            l=R();\n            c=getchar();\n            if(s[l]!=c) update(l),s[l]=c;\n        }\n        else\n        {\n            l=R();r=R();\n            printf(\"%lld\\n\",query(l,r).IOI);\n        }\n    }\n    return 0;\n}\n```  \n$\\huge\\mathcal{The\\space End}$  \n~~zkw+fread\u7a33\u63a7\u6700\u4f18\u89e3/cy~~",
        "postTime": 1603202103,
        "uid": 215697,
        "name": "LeavingZ",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P6373 \u3010\u300cStOI-1\u300dIOI\u8ba1\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e0d\u96be \u4f46\u662f\u771f\u7684\u5f88\u5751      \n\u5148\u8bf4\u8bf4\u4e0d\u6bd2\u7624\u7684\u5730\u65b9     \n\u9996\u5148\u53d1\u73b0\u8fd9\u9053\u9898\u6709 **\u5355\u70b9\u4fee\u6539 \u533a\u95f4\u67e5\u8be2** \u7684\u7279\u5f81 \u518d\u770b\u770b\u9898\u76ee\u8ba9\u7ef4\u62a4\u7684\u4e1c\u897f \u5f97\u77e5\u8fd9\u9898\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u505a     \n#### \u8003\u8651\u5982\u4f55\u7ef4\u62a4   \n\u770b\u89c1\u9898\u76ee\u4e2d\u7684 $IOI$ \u88ab\u5206\u5f00\u4e86 \u8fd9\u7ed9\u6211\u4eec\u542f\u53d1   \n\u6211\u4eec\u5f00\u4e00\u4e2a\u5b58\u7ebf\u6bb5\u6811\u7684\u6570\u7ec4 \u5c31\u53eb\u5b83 $t[i]$ \u91cc\u9762\u7ef4\u62a4 $I$ $O$ $I$ $IO$ $OI$ $IOI$ \u5206\u522b\u4f5c\u4e3a\u5b57\u4e32\u51fa\u73b0\u7684\u6b21\u6570 \u6211\u4eec\u8ba9 $ls$ $rs$ \u5206\u522b\u4e3a $i$ \u7684\u5de6\u5b69\u5b50 \u53f3\u5b69\u5b50 ~~\u65b9\u4fbf\u53d9\u8ff0~~  \n\u663e\u7136\u6211\u4eec\u6709 \n$$t[i].i=t[ls].i+t[rs].i$$\n$$t[i].o=t[ls].o+t[rs].o$$  \n\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff1a\u5de6\u8fb9\u533a\u95f4\u62ff\u51fa\u4e00\u90e8\u5206 \u53f3\u8fb9\u533a\u95f4\u62ff\u51fa**\u540e\u9762**\u4e00\u90e8\u5206 \u62fc\u5728\u4e00\u8d77\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u76ee\u6807\u5b57\u4e32 \u4e0d\u8981\u5fd8\u8bb0\u518d\u52a0\u4e0a\u5de6\u53f3\u533a\u95f4\u5df2\u7ecf\u5f97\u5230\u7684\u76ee\u6807\u5b57\u4e32\u7684\u4e2a\u6570\uff01 \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5199\u51fa \n$$t[i].io=t[ls].i*t[rs].o+t[ls].io+t[rs].io$$\n$$t[i].oi=t[ls].o*t[rs].i+t[ls].oi+t[rs].oi$$  \n\u6700\u540e\u7684BOSS \u533a\u95f4 $IOI$ \u7684\u6b21\u6570     \n$$t[i].ioi=t[ls].i*t[rs].oi+t[ls].io*t[rs].i+t[ls].ioi+t[rs].ioi$$  \n\u4e3a\u4e86\u4ee3\u7801\u7684\u7b80\u6d01 \u6211\u4eec\u5199\u51fa\u4e00\u4e2a\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u51fd\u6570 $mergy(p1,p2)$ \u7528\u4e8e\u5408\u5e76 \n\n#### \u8bb2\u8bb2\u5751\u4e00\u70b9\u7684 \u7167\u6837\u4ece\u7b80\u5355\u7684\u5f00\u59cb     \n\n- \u4e0d\u5f00 $long$ $long$ \u89c1\u7956\u5b97     \n- \u7531\u4e8e\u672c\u9898\u7684\u7279\u6027 \u533a\u95f4\u67e5\u8be2\u4e0d\u80fd\u7b80\u5355\u7684\u52a0\u4e0a $IOI$ \u51fa\u73b0\u7684\u6b21\u6570 \u800c\u662f\u8981\u5408\u5e76\u533a\u95f4\u5e76\u8fd4\u56de \u76f4\u5230\u6700\u540e\u624d\u662f\u67e5\u8be2\u7684 $IOI$ \u51fa\u73b0\u7684\u6b21\u6570 \n\n\u4e0a\u4ee3\u7801\uff01\n\n\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\nchar a[500005];//\u8bfb\u5165\u7684\u5b57\u7b26\u4e32 \u4ece\u4e0b\u68071\u5f00\u59cb\u8bfb\u5165 \u65b9\u4fbf\u5efa\u6811 \nstruct node\n{\n\tll i;//\u4e94\u4e2a\u9700\u8981\u7ef4\u62a4\u7684\u503c \n\tll o;\n\tll io;\n\tll oi;\n\tll ioi;\n}t[2000005];//\u7ebf\u6bb5\u6811\u5f004\u500d\u7a7a\u95f4 \nll n,m;//\u5b57\u7b26\u4e32\u957f\u5ea6 \u64cd\u4f5c\u4e2a\u6570 \nll op,l,r;//\u6309\u7167\u9898\u76ee\u4e2d\u53d8\u91cf\u540d\u5b9a\u4e49 \nchar c;\nll x;\ninline void read(ll &x)//\u5feb\u8bfb \n{\n\tll f=1;char c;\n\tfor(x=0,c=getchar();c<'0'||c>'9';c=getchar()) if(c=='-') f=-1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48); x*=f;\n}\ninline void readc(char &x)//\u8bfb\u5b57\u7b26 \u5176\u5b9e\u5e76\u4e0d\u5feb \n{\n\tfor(x=getchar();x!='I'&&x!='O';x=getchar()) ;\t\n} \ninline node mergy(node p1,node p2)//\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u51fd\u6570 mergy \n{\n\tnode rest;\n\trest.i=p1.i+p2.i;//\u6309\u7167\u601d\u8def\u53bb\u8ba1\u7b97 \n\trest.o=p1.o+p2.o;\n\trest.io=p1.i*p2.o+p1.io+p2.io;\n\trest.oi=p1.o*p2.i+p1.oi+p2.oi;\n\trest.ioi=p1.i*p2.oi+p1.io*p2.i+p1.ioi+p2.ioi;\n\treturn rest;\n}\ninline void build(ll l,ll r,ll p)//\u5efa\u6811 \n{\n\tif(l==r)\n\t{\n\t\tif(a[l]=='I') t[p].i=1;//\u5355\u4e2a\u7684\u70b9 \u53ea\u53ef\u80fd\u51fa\u73b0 I \u6216\u8005 O \u6240\u4ee5\u53ea\u8981\u7ef4\u62a4\u8fd9\u4e2a\u5c31\u53ef\u4ee5\u4e86 \n\t\telse t[p].o=1;\n\t\treturn ;\n\t}\n\tll mid=(l+r)>>1;\n\tbuild(l,mid,p<<1);\n\tbuild(mid+1,r,p<<1|1);\n\tt[p]=mergy(t[p<<1],t[p<<1|1]);//\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53 \u76f4\u63a5\u8d4b\u503c\u5c31\u597d\u4e86  \n} \ninline void update(ll l,ll r,ll x,char c,ll p)//\u4fee\u6539 \n{\n\tif(l==r)\n\t{\n\t\ta[l]=c;//\u4fee\u6539\u539f\u4e32 \u5199\u5b8c\u53d1\u73b0\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528 \n\t\tt[p].i=t[p].o=0;//\u5148\u5168\u90e8\u8d4b\u503c\u4e3a 0 \n\t\tif(a[l]=='I') t[p].i=1;//\u518d\u91cd\u65b0\u8d4b\u503c \n\t\telse t[p].o=1;\n\t\treturn ;\n\t}\n\tll mid=(l+r)>>1;\n\tif(x<=mid) update(l,mid,x,c,p<<1);//\u4fee\u6539\u7684\u5728\u5de6\u533a\u95f4 \n\telse update(mid+1,r,x,c,p<<1|1);//\u4fee\u6539\u7684\u5728\u53f3\u533a\u95f4 \n\tt[p]=mergy(t[p<<1],t[p<<1|1]);//\u7167\u6837\u5408\u5e76\u8d4b\u503c \n}\ninline node query(ll ql,ll qr,ll l,ll r,ll p)//\u67e5\u8be2\u64cd\u4f5c \n{\n\tif(ql<=l&&r<=qr) return t[p];//\u8fd4\u56de\u7ed3\u6784\u4f53 \n\tll mid=(l+r)>>1;\n\tnode rest1,rest2;\n\trest1.i=rest1.o=rest1.io=rest1.oi=rest1.ioi=0;//\u6e05\u7a7a \n\trest2.i=rest2.o=rest2.io=rest2.oi=rest2.ioi=0;\n\tif(ql<=mid) rest1=query(ql,qr,l,mid,p<<1);\n\tif(qr>mid) rest2=query(ql,qr,mid+1,r,p<<1|1);\n\treturn mergy(rest1,rest2); //\u8fd4\u56de\u662f\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u503c \u5e76\u4e0d\u662f\u76f4\u63a5\u76f8\u52a0 IOI\u51fa\u73b0\u7684\u6b21\u6570 \n}\nint main()\n{\n\tread(n);read(m);\n\tscanf(\"%s\",1+a);//\u4ece\u4e0b\u68071\u5f00\u59cb\u8bfb\u5165\u5b57\u7b26\u4e32 \n\tbuild(1,n,1);//\u5efa\u6811 \n\twhile(m--)\n\t{\n\t\tread(op);\n\t\tif(op==1)\n\t\t{\n\t\t\tread(x);\n\t\t\treadc(c); \n\t\t\tupdate(1,n,x,c,1);//\u4fee\u6539\u64cd\u4f5c \n\t\t}\n\t\telse\n\t\t{\n\t\t\tread(l);\n\t\t\tread(r);\n\t\t\tprintf(\"%lld\\n\",query(l,r,1,n,1).ioi);//\u67e5\u8be2\u64cd\u4f5c \n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1586787179,
        "uid": 219198,
        "name": "Minecraft\u4e07\u5c81",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6373 \u3010\u300cStOI-1\u300dIOI\u8ba1\u6570\u3011"
    }
]