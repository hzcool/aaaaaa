[
    {
        "content": "~~\u6bd4\u8d5b\u91cc\u80fd\u505a\u51fa\u8fd9\u9898\u7684\u4eba\u771f\u7684\u975e\u5e38\u5389\u5bb3\uff0c\u81f3\u5c11\u4ed6\u7684\u667a\u5546\u548c\u86c7\u4e00\u6837\u8db3\u591f\u806a\u660e~~\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\n\n\u5f53\u524d\u6700\u5f3a\u7684\u86c7\u5403\u4e86\u6700\u5f31\u7684\u86c7\u4e4b\u540e\uff0c\u5982\u679c\u6ca1\u6709\u53d8\u6210\u6700\u5f31\u7684\u86c7\uff0c\u4ed6\u4e00\u5b9a\u4f1a\u9009\u62e9\u5403\uff01\n\n\u8bc1\u660e\uff1a\n\n\u5047\u8bbe\u5f53\u524d\u6700\u5f3a\u7684\u86c7\u53eb\u77f3\u8001\u677f\u3002\n\n- \u5982\u679c\u4e0b\u4e00\u6761\u6700\u5f3a\u7684\u86c7\u5982\u679c\u4f9d\u65e7\u662f\u77f3\u8001\u677f\uff0c\u90a3\u80af\u5b9a\u4e0d\u5403\u767d\u4e0d\u5403\uff1b\n\n- \u5982\u679c\u4e0b\u4e00\u6761\u6700\u5f3a\u86c7\u4e0d\u662f\u77f3\u8001\u677f\uff0c\u6b64\u65f6\u6700\u5f3a\u7684\u86c7\u6ca1\u6709\u539f\u5148\u5f3a\uff0c\u6700\u5f31\u7684\u86c7\u4e5f\u6ca1\u539f\u5148\u5f31\uff0c\u5403\u6389\u540e\u80af\u5b9a\u6bd4\u77f3\u8001\u677f\u8981\u5f31\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u524d\u6700\u5f3a\u7684\u86c7\u5403\u4e86\u4e4b\u540e\uff0c\u5982\u679c\u4f1a\u6b7b\uff0c\u4e5f\u4f1a\u6b7b\u5728\u77f3\u8001\u677f\u524d\u9762\u3002\u90a3\u4e48\u8fd9\u6837\u4e00\u6765\uff0c\u8fd9\u6761\u86c7\u4f1a\u60f3\u5c3d\u529e\u6cd5\u4e0d\u6b7b\uff0c\u4ece\u800c\u77f3\u8001\u677f\u4e5f\u4e00\u5b9a\u80fd\u4e0d\u6b7b\u3002\n\n\n\n\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u4e00\u90e8\u5206\u86c7\u53ef\u4ee5\u653e\u5fc3\u5927\u80c6\u5730\u5403\u4e86\uff0c\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u5982\u679c\u5403\u4e86\u4e4b\u540e\u53d8\u6210\u6700\u5f31\u7684\u86c7\u4e86\uff0c\u5230\u5e95\u9009\u62e9\u5403\u4e0d\u5403\u5462\uff1f\n\n\u7a0d\u5fae\u5f80\u540e\u63a8\u4e00\u63a8\u5c31\u660e\u767d\u4e86\uff1a\n\n\u5f53\u524d\u6700\u5f3a\u86c7\u8bb0\u4e3a\u77f3\u8001\u677f\uff0c\u4e0b\u4e00\u6761\u6700\u5f3a\u86c7\u8bb0\u4e3a\u55b5\u8001\u677f\u3002\u77f3\u8001\u677f\u8fdb\u98df\u540e\u53d8\u6210\u6700\u5f31\u7684\u86c7\u4e86\uff0c\u5982\u679c\u55b5\u8001\u677f\u8fdb\u98df\u540e\u4e0d\u662f\u6700\u5f31\u7684\u86c7\uff0c\u4ed6\u5c31\u4f1a\u9009\u62e9\u5403\uff08\u6839\u636e\u5f00\u5934\u7684\u7ed3\u8bba\uff09\uff0c\u8fd9\u6837\u77f3\u8001\u677f\u5c31\u51c9\u4e86\uff0c\u6240\u4ee5\u77f3\u8001\u677f\u5f53\u521d\u7684\u9009\u62e9\u4e00\u5b9a\u662f\u4e0d\u5403\u3002\n\n\u5982\u679c\u55b5\u8001\u677f\u8fdb\u98df\u540e\u4f9d\u65e7\u662f\u6700\u5f31\u7684\u86c7\uff0c\u90a3\u5c31\u4f1a\u8003\u8651\u4e0b\u4e00\u6761\u6700\u5f3a\u86c7\u7684\u60c5\u51b5\uff0c\u8d77\u540d\u4e3a\u6c6a\u8001\u677f\u3002\u540c\u6837\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\u5982\u679c\u6c6a\u8001\u677f\u8fdb\u98df\u540e\u4e0d\u662f\u6700\u5f31\u7684\u86c7\uff0c\u90a3\u4ed6\u5c31\u4f1a\u9009\u62e9\u5403\uff0c\u8fd9\u6837\u55b5\u8001\u677f\u5c31\u51c9\u4e86\uff0c\u6240\u4ee5\u4ed6\u5f53\u521d\u4f1a\u9009\u62e9\u4e0d\u5403\uff0c\u8fd9\u6837\u77f3\u8001\u677f\u5c31\u4e0d\u4f1a\u6b7b\uff0c\u90a3\u4e48\u77f3\u8001\u677f\u5f53\u521d\u5c31\u4f1a\u9009\u62e9\u5403\u3002\u5982\u679c\u6c6a\u8001\u677f\u8fdb\u98df\u540e\u53d8\u6210\u4e86\u6700\u5f31\u7684\u86c7\uff0c\u90a3\u5c31\u518d\u8003\u8651\u4e0b\u4e00\u6761\u86c7\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u8fd9\u4e2a\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u9012\u5f52\u7684\u95ee\u9898\u4e86\uff0c\u76f4\u5230**\u67d0\u6761\u86c7\u5403\u4e86\u4e4b\u540e\u4e0d\u662f\u6700\u5f31\u7684\u86c7\u6216\u8005\u53ea\u80fd\u4e0b\u4e24\u6761\u86c7\u4e3a\u6b62**\u3002\u8fd9\u6837\uff0c\u6700\u540e\u4e00\u6761\u86c7\u4f1a\u9009\u62e9\u5403\uff0c\u5012\u6570\u7b2c\u4e8c\u6761\u86c7\u4e3a\u4e86\u4fdd\u547d\u4f1a\u9009\u62e9\u4e0d\u5403\uff0c\u5012\u6570\u7b2c\u4e09\u6761\u86c7\u53ef\u4ee5\u653e\u5fc3\u5927\u80c6\u7684\u5403\uff0c\u5012\u6570\u7b2c\u56db\u6761\u86c7\u4f1a\u4fdd\u547d\u9009\u62e9\u4e0d\u5403\uff0c\u5012\u6570\u7b2c\u4e94\u6761\u86c7\u53ef\u4ee5\u653e\u5fc3\u5403\u2026\u2026\u2026\u2026\u2026\u2026\n\n\u8fd9\u6837\uff0c\u77f3\u8001\u677f\u9009\u62e9\u5403\u4e0d\u5403\uff0c\u5c31\u548c\u6700\u540e\u4e00\u6761\u86c7\u4e4b\u95f4\u7684\u5947\u5076\u6027\u76f8\u5173\u4e86\u3002\u5e76\u4e14\u77f3\u8001\u677f\u9009\u62e9\u4e0d\u5403\uff0c\u6e38\u620f\u7ed3\u675f\uff0c\u77f3\u8001\u677f\u9009\u62e9\u5403\uff0c\u6e38\u620f\u4e5f\u4f1a\u5728\u4e0b\u4e00\u8f6e\u7ed3\u675f\uff08\u56e0\u4e3a\u55b5\u8001\u677f\u4f1a\u9009\u62e9\u4e0d\u5403\uff09\u3002\n\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e2a\u9898\u76ee\u5f88\u6e05\u6670\u4e86\uff0c\u53ea\u9700\u6a21\u62df\u4e24\u4e2a\u9636\u6bb5\u5373\u53ef\uff1a\n\n\u9636\u6bb5\u4e00\uff1a\u6240\u6709\u6700\u5f3a\u86c7\u8fdb\u98df\u540e\u90fd\u4e0d\u662f\u6700\u5f31\u86c7\uff0c\u653e\u5fc3\u5927\u80c6\u5403\uff01\n\n\u9636\u6bb5\u4e8c\uff1a\u6240\u6709\u6700\u5f3a\u86c7\u8fdb\u98df\u540e\u90fd\u662f\u6700\u5f31\u86c7\uff0c\u76f4\u5230\u6709\u6761\u86c7\u53ef\u4ee5\u653e\u5fc3\u5403\u4e3a\u6b62\uff08\u5403\u4e86\u540e\u4e0d\u662f\u6700\u5f31\u6216\u8005\u53ea\u5269\u4e24\u6761\uff09\n\n\u9636\u6bb5\u4e00\u7ed3\u675f\u65f6\uff0c\u6e38\u620f\u5c31\u57fa\u672c\u7ed3\u675f\u4e86\uff08\u6839\u636e\u9636\u6bb5\u4e8c\u7684\u5947\u5076\u6027\u770b\u80fd\u4e0d\u80fd\u518d\u5403\u4e00\u6b21\uff09\n\n\u5229\u7528`set`\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ef4\u62a4\u6700\u5f3a\u3001\u6700\u5f31\u86c7\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(Tn\\log n)$\uff0c\u53ea\u80fd\u62ff 70 \u5206\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\nint a[N];\nint main() {\n    int _;\n    scanf(\"%d\", &_);\n    int n;\n    for (int cas = 1; cas <= _; cas++) {\n        if (cas == 1) {\n            scanf(\"%d\", &n);\n            for (int i = 1; i <= n; i++) {\n                scanf(\"%d\", &a[i]);\n            }\n        } else {\n            int k;\n            scanf(\"%d\", &k);\n            while (k--) {\n                int x, y;\n                scanf(\"%d%d\", &x, &y);\n                a[x] = y;\n            }\n        }\n        set<pair<int, int> > se;\n        for (int i = 1; i <= n; i++) {\n            se.insert({a[i], i});\n        }\n        int flag = 0, ans;\n        while (1) {\n            if (se.size() == 2) {\n                se.erase(se.begin());\n                if (flag) {\n                    if ((flag - se.size()) % 2) {\n                        ans = flag + 1;\n                    } else {\n                        ans = flag;\n                    }\n                } else\n                    ans = 1;\n                break;\n            }\n            set<pair<int, int> >::iterator it = se.end();\n            it--;\n            int x = it->first, id = it->second;\n            int y = se.begin()->first;\n            se.erase(it);\n            se.erase(se.begin());\n            se.insert({x - y, id});\n            if (se.begin()->second != id) {\n                if (flag) {\n                    if ((flag - se.size()) % 2) {\n                        ans = flag + 1;\n                    } else {\n                        ans = flag;\n                    }\n                    break;\n                }\n            } else {\n                if (flag == 0) flag = se.size();\n            }\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```\n\n\u6b63\u89e3\uff1a\u7528\u4e24\u4e2a\u53cc\u7aef\u961f\u5217 $q_1,q_2$ \u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5148\u628a\u521d\u59cb\u7684\u6709\u5e8f\u86c7\u653e\u8fdb $q_1$ \u91cc\uff0c\u6b64\u65f6 $q_1$ \u5df2\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u5934\u90e8\u5c0f\uff0c\u5c3e\u90e8\u5927\uff0c\u6211\u4eec\u540e\u9762\u4f1a\u8ba9 $q_2$ \u4e5f\u6ee1\u8db3\u8fd9\u6837\u7684\u5355\u8c03\u6027\u3002\n\n##### \u7b2c\u4e00\u9636\u6bb5\uff1a\n\n\u6bcf\u6b21\u4ece $q_1,q_2$ \u7684\u5c3e\u90e8\u53d6\u51fa\u6700\u5f3a\u7684\u86c7\uff0c\u4ece $q_1$ \u5934\u90e8\u53d6\u51fa\u6700\u5f31\u7684\u86c7\uff0c\u5982\u679c\u5403\u4e86\u4ee5\u540e\u662f\u6700\u5f31\u7684\uff0c\u90a3\u5c31\u8fdb\u5165\u7b2c\u4e8c\u9636\u6bb5\uff0c\u5426\u5219\u76f4\u63a5\u88c5\u5165 $q_2$ \u7684\u5934\u90e8\u3002\n\n\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u88c5\u8fdb $q_2$ \u5e76\u4e14\u662f $q_2$ \u91cc\u6700\u5f31\u7684\uff1f\u5176\u5b9e\u8bc1\u660e\u6700\u521d\u7684\u7ed3\u8bba\u65f6\u5df2\u7ecf\u89e3\u91ca\u8fc7\u4e86\uff0c\u540e\u9762\u8fdb\u98df\u7684\u86c7\u80af\u5b9a\u662f\u8d8a\u6765\u8d8a\u5f31\u7684\uff0c\u800c\u4e14\u8fd9\u4e2a\u9636\u6bb5\u6700\u5f31\u7684\u86c7\u4e00\u5b9a\u5728 $q_1$ \u4e2d\u3002\n\n##### \u7b2c\u4e8c\u9636\u6bb5\uff1a\n\n\u6b64\u65f6\u6700\u5f31\u7684\u86c7\uff0c\u5c31\u6ca1\u5fc5\u8981\u4e22\u8fdb\u961f\u5217\u91cc\u4e86\uff0c\u5355\u72ec\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u8fde\u7eed\u7684\u4e00\u6bb5\u8fdb\u98df\u540e\u90fd\u662f\u6700\u5f31\u7684\uff0c\u76f4\u5230\u603b\u86c7\u6570\u7b49\u4e8e $2$ \u6216\u8005\u8fdb\u98df\u540e\u4e0d\u662f\u6700\u5f31\u4e3a\u6b62\uff0c\u800c\u6700\u5f3a\u7684\u4f9d\u65e7\u4ece $q_1,q_2$ \u7684\u5c3e\u90e8\u627e\u3002\n\n\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u7528\u5176\u4ed6\u5e26 $\\log$ \u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(Tn)$\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```c++\nint a[N];\nint main() {\n    int _;\n    scanf(\"%d\", &_);\n    int n;\n    for (int cas = 1; cas <= _; cas++) {\n        if (cas == 1) {\n            scanf(\"%d\", &n);\n            for (int i = 1; i <= n; i++) {\n                scanf(\"%d\", &a[i]);\n            }\n        } else {\n            int k;\n            scanf(\"%d\", &k);\n            while (k--) {\n                int x, y;\n                scanf(\"%d%d\", &x, &y);\n                a[x] = y;\n            }\n        }\n        deque<pair<int, int> > q1, q2;\n        for (int i = 1; i <= n; i++) {\n            q1.push_back({a[i], i});\n        }\n        int ans;\n        while (1) {\n            if (q1.size() + q2.size() == 2) {\n                ans = 1;\n                break;\n            }\n            int x, id, y;\n            y = q1.front().first, q1.pop_front();\n            if (q2.empty() || !q1.empty() && q1.back() > q2.back()) {\n                x = q1.back().first, id = q1.back().second, q1.pop_back();\n            } else {\n                x = q2.back().first, id = q2.back().second, q2.pop_back();\n            }\n            pair<int, int> now = make_pair(x - y, id);\n            if (q1.empty() || q1.front() > now) {\n                ans = q1.size() + q2.size() + 2;  // \u4e0d\u5403\n                int cnt = 0;\n                while (1) {\n                    cnt++;\n                    if (q1.size() + q2.size() + 1 == 2) {\n                        if (cnt % 2 == 0) ans--;\n                        break;\n                    }\n                    int x, id;\n                    if (q2.empty() || !q1.empty() && q1.back() > q2.back()) {\n                        x = q1.back().first, id = q1.back().second, q1.pop_back();\n                    } else {\n                        x = q2.back().first, id = q2.back().second, q2.pop_back();\n                    }\n                    now = {x - now.first, id};\n                    if ((q1.empty() || now < q1.front()) && (q2.empty() || now < q2.front())) {\n                        ;\n                    } else {\n                        if (cnt % 2 == 0) ans--;\n                        break;\n                    }\n                }\n                break;\n            } else {\n                q2.push_front(now);\n            }\n        }\n        printf(\"%d\\n\", ans);\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1605040070,
        "uid": 54357,
        "name": "OMG_wc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\uff08\u6d1b\u8c37\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6211\u82b1\u4e861h\u8fc7\u6389\u4e86luogu\u7684\u6570\u636e\uff0c\u82b1\u4e86\u5927\u69822h\u8fc7\u6389\u4e86\u725b\u5ba2\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u505a\u6cd5\u8c8c\u4f3c\u8ddf\u9898\u89e3\u7684\u505a\u6cd5\u90fd\u4e0d\u592a\u4e00\u6837\uff0c\u6240\u4ee5\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u770b\u5b8c\u8fd9\u9898\u4ee5\u540e\uff0c\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\u6d77\u76d7\u5206\u91d1\u5b50\u7684\u90a3\u4e2a\u6a21\u578b\uff0c\u731c\u6d4b\uff0c\u56de\u5408\u548c\u56de\u5408\u4e4b\u95f4\u7684\u51b3\u7b56\u4e4b\u95f4\u4f1a\u4ea7\u751f\u4e00\u6761\u6761\u5f71\u54cd\u7684\"\u94fe\"\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u6a21\u62df\u5b8c\u4ee5\u540e\u7684\u7ed3\u679c\u662f\u8fd9\u6837\u7684\uff1a\n\n```\n|\u56de\u5408| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |\n|\u6700\u5927| 9 | 8 | 7 | 9 | 6 | * | * | * | * |\n|\u6700\u5c0f| 1 | 2 | 3 | 4 | 9 | * | * | * | * |\n```\n\n\u90a3\u4e48\u6211\u4eec\u5355\u72ec\u770b\u7b2c4\u56de\u5408\u548c\u7b2c5\u56de\u5408\u3002\n\n\u7b2c5\u56de\u5408\u4e2d\uff0c\u6b7b\u4ea1\u7684\u86c79\uff0c\u4e0a\u4e00\u6b21\u51b3\u7b56\u7684\u56de\u5408\u662f4\u3002\n\n\u90a3\u4e48\uff0c\u56de\u54085\u8ddf\u56de\u54084\u5c31\u4ea7\u751f\u4e86\"\u8054\u7cfb\"\uff0c\u5177\u4f53\u6765\u8bf4\u5c31\u662f\uff0c\u7b2c9\u6761\u86c7\uff0c\u4e3a\u4e86\u907f\u514d\u6b7b\u4ea1\uff0c\u53ef\u80fd\u4f1a\u5728\u7b2c4\u56de\u5408\u9009\u62e9\u7ed3\u675f\u6e38\u620f\u3002\n\n\u8fdb\u4e00\u6b65\u8003\u8651\uff0c\u8fd9\u4e9b\u8054\u7cfb\u4e00\u5b9a\u662f\u82e5\u5e72\u6761\u94fe\uff08\u56e0\u4e3a\u6bcf\u4e2a\u86c7\u53ea\u4f1a\u88ab\u5403\u4e00\u6b21\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u968f\u4fbf\u62ff\u4e00\u6761\u94fe\u51fa\u6765\uff1a\n\n3-8-12-22\n\n\u7b2c22\u56de\u5408\u7684\u86c7\uff0c\u4e00\u5b9a\u4f1a\u9009\u62e9\u65e0\u8111\u5403\uff0c\u56e0\u4e3a\u540e\u7eed\u6ca1\u6709\u86c7\u4f1a\u5403\u5b83\u3002\n\n\u90a3\u4e48\u7b2c12\u56de\u5408\u7684\u86c7\uff0c\u4e00\u5b9a\u4e0d\u6562\u5403\uff0c\u5426\u5219\u5b83\u4f1a\u572822\u56de\u5408\u6302\u6389\u3002\n\n\u90a3\u4e48\u7b2c8\u56de\u5408\u7684\u86c7\uff0c\u4e00\u5b9a\u6562\u5403\uff0c\u56e0\u4e3a12\u56de\u5408\u7684\u86c7\u4e0d\u6562\u5403\u3002\n\n...\n\n\u521d\u6b65\u53d1\u73b0\u7684\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u611f\u89c9\u5f88\u6709\u7528\uff0c\u4e8e\u662f\u5199\u4e86\u4e2a\u66b4\u529b\uff0c\u53bb\u628a\u6bcf\u6761\u94fe\u751f\u6210\u51fa\u6765\uff0c\u7136\u540e\u6a21\u62df\u4e00\u904d\u6c42\u51fa\u7f16\u53f7\u6700\u5c0f\u7684\u201c\u7ed3\u675f\u201d\u56de\u5408\u3002\u53d1\u73b0\uff0c\u5728luogu\u8fc7\u4e8655\u5206\uff08\u9884\u671f\u5206\u6570\uff09\uff0c\u725b\u5ba2\u6570\u636e\u53ea\u8fc7\u4e8620\uff08n<=3)\u3002\n\n\u7d27\u63a5\u7740\u6784\u9020\u4e86\u4e00\u4e2a\u53cd\u4f8b\uff1a\n\n\u94fe1\uff1a3-8    \u94fe2\uff1a4-5\n\n\u53d1\u73b0\uff0c3-8\u4e4b\u95f4\uff0c\u5b58\u5728\u4e00\u6761\u522b\u7684\u94fe4-5\uff0c\u90a3\u4e48\uff0c4-5\u4e4b\u95f4\u5fc5\u5b9a\u6709\u4e00\u6761\u86c7\u8981\u5f3a\u884c\u7ed3\u675f\u6e38\u620f\uff0c\u6240\u4ee53\u5176\u5b9e\u662f\u53ef\u4ee5\u65e0\u8111\u5403\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u4e0d\u80fd\u6709\u8fb9\u548c\u8fb9\u76f8\u4ea4\u7684\u60c5\u51b5\u3002\u601d\u8003\u4e86\u4e00\u4e0b\u540e\uff0c\u5728\u6a21\u62df\u7684\u8fc7\u7a0b\u7ef4\u62a4\u4e0a\u4e00\u4e2a\u94fe\u7684\u7aef\u70b9\u5373\u53ef\u3002\n\n\u4fee\u4e86\u8fd9\u4e2a\u9505\u4ee5\u540e\uff0c\u5728luogu\u548c\u725b\u5ba2\u90fd\u8fc7\u4e8655\uff0c\u8bc1\u660e\u7ed3\u8bba\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5bf9\u4e86\uff08\u5b9e\u9645\u4e0a\u611f\u89c9\u8fd8\u6709\u9505\uff0c\u7b49\u88abhack\u518d\u8bf4\u5427\uff09\u3002\n\n\u63a5\u4e0b\u6765\u6539log\u901f\u5ea6\u7684\u6a21\u62df\u5927\u5bb6\u90fd\u4f1a\uff0c\u5c31\u4e0d\u63d0\u4e86\u3002\n\n\u7136\u540e\u5c31\u8003\u8651\u5982\u4f55AC\u3002\n\n\u6211\u5e76\u4e0d\u64c5\u957f\u8bc1\u660e\u5355\u8c03\u6027\u4e4b\u7c7b\u7684\uff0c\u4e8e\u662f\u8003\u8651\u5230\u8fd9\u6837\u4e00\u4e2a\u4e8b\u60c5\uff1a\u6bcf\u6b21\u505a\u51b3\u7b56\u540e\u7684\u86c7\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6bd4\u4e4b\u524d\u505a\u8fc7\u51b3\u7b56\u7684\u86c7\u8981\u77ed\u3002\n\n\u90a3\u4e48\uff0c\u7ef4\u62a4\u4e24\u4e2a\u961f\u5217\uff0c\u4e00\u4e2a\u961f\u5217\u5c31\u662f\u539f\u59cb\u7684\u86c7\uff0c\u4e00\u4e2a\u961f\u5217\u662f\u505a\u8fc7\u51b3\u7b56\u4ee5\u540e\u7684\u86c7\uff0c\u6bcf\u6b21\u505a\u5b8c\u51b3\u7b56\u4ee5\u540e\uff0c\u628a\u65b0\u7684\u957f\u5ea6\u7528\u63d2\u5165\u6392\u5e8f\u7684\u65b9\u5f0f\u4ece\u540e\u9762\u4e00\u6b65\u6b65\u6362\u5230\u524d\u9762\u53bb\uff0c\u76f4\u89c9\u4e0a\u770b\u8fd9\u4e2a\u8fc7\u7a0b\u7ea6\u7b49\u4e8eO(1)\u7684\u3002\n\n\u4e8e\u662f\uff0c\u5728\u8fd9\u6b21\u4fee\u6539\u4e4b\u540e\uff0c\u7ec8\u4e8e\u901a\u8fc7\u4e86\u725b\u5ba2\u548cluogu\u7684\u6240\u6709\u6570\u636e\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cluogu\u7684\u6570\u636e\u8c8c\u4f3c\u5bf9\u8fd9\u4e2a\u505a\u6cd5\u5f3a\u5ea6\u4e0d\u592a\u591f\uff0c\u4e0d\u8003\u8651\u94fe\u76f8\u4ea4\u7684\u60c5\u51b5\uff0c\u540c\u65f6\u4e0d\u8fdb\u884c\u63d2\u6392\u7684\u8fc7\u7a0b\uff0c\u65e0\u8111\u628a\u65b0\u7684\u86c7\u4e22\u5230\u961f\u5217\u672b\u5c3e\uff0c\u4e5f\u8fd8\u662f\u80fdAC\u3002\n\n\u4ee3\u7801\u56e0\u4e3a\u662f\u4e00\u6b65\u6b65\u6539\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u975e\u5e38\u4e11\uff0c\u89c1\u8c05\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 1000005\nusing namespace std;\nint a[maxn];\nint T,n,k,x,y;\n\nint b[maxn<<1],c[maxn<<1];\nint idb[maxn<<1],idc[maxn<<1];\nint ans[maxn],pre[maxn];\nint link[maxn];\nint head1,head2,tail1,tail2;\nvoid out()\n{\n\tcout<<\"******\"<<endl;\n//\tcout<<head1<<\" \"<<tail1<<\" \"<<head2<<\" \"<<tail2<<endl;\n\tfor (int i=head1;i<=tail1;i++) cout<<b[i]<<\"(\"<<idb[i]<<\")\"<<\" \"; cout<<endl;\t\n\tfor (int i=head2;i<=tail2;i++) cout<<c[i]<<\"(\"<<idc[i]<<\")\"<<\" \"; cout<<endl;\n}\n\nvoid work()\n{\n\tfor (int i=1;i<=n;i++) pre[i]=link[i]=0;\n\tfor (int i=1;i<=n;i++) b[n-i+1+maxn]=a[i],idb[n-i+1+maxn]=i;\n\t\n\thead1=1+maxn,tail1=n+maxn;\n\thead2=1+maxn,tail2=0+maxn;\n\t\n\tint shang=-1; \n\tfor (int turn=1;turn<n;turn++)\n\t{\n//\t\tout();\n\t\tint zd,zx;\n\t\tint zuida,zuixiao;\n\t\tint zd1,zd2,zx1,zx2;\n\t\tint zh1,zh2,xh1,xh2;\n\t\tif (head1<=tail1) zd1=b[head1],zx1=b[tail1],zh1=idb[head1],xh1=idb[tail1]; else zd1=-1,zx1=999999999;\n\t\tif (head2<=tail2) zd2=c[head2],zx2=c[tail2],zh2=idc[head2],xh2=idc[tail2]; else zd2=-1,zx2=999999999;\n\t\t//\u62ff\u51fa\u6765\u6700\u5927\u7684 \n\t\tif (zd2>zd1 || (zd2==zd1 && zh2>zh1))\n\t\t{\n\t\t\tzd=idc[head2];\n\t\t\tzuida=zd2;\n\t\t\thead2++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzd=idb[head1];\n\t\t\tzuida=zd1;\n\t\t\thead1++;\n\t\t}\n\t\t//\u62ff\u51fa\u6765\u6700\u5c0f\u7684\n\t\tif (zx2<zx1 || (zx2==zx1 && xh2<xh1))\n\t\t{\n\t\t\tzx=idc[tail2];\n\t\t\tzuixiao=zx2;\n\t\t\ttail2--;\n\t\t} \n\t\telse\n\t\t{\n\t\t\tzx=idb[tail1];\n\t\t\tzuixiao=zx1;\n\t\t\ttail1--;\n\t\t}\t\n\t\t\n\t\tif (pre[zx]!=0)\n\t\t{\n\t\t\tif (shang==-1 || shang==pre[zx]) \n\t\t\t{\n\t\t\t\tlink[turn]=pre[zx];\n\t\t\t}\n\t\t\telse\n\t\t\t\tbreak;\n\t\t\tshang=turn;\n\t\t}\n\t\t//\u6700\u5927\u7684\u4eba\u8fd9\u56de\u5408\u6740\u4eba\u4e86 \n\t\tpre[zd]=turn;\n\t\t//\u51cf\u53bb\u8840\u91cf \n\t\tint tt=zuida-zuixiao;\n\t\tint id=zd;\n\t\t\n\t\ttail2++; c[tail2]=tt; idc[tail2]=zd;\n\t\tint now=tail2;\n\t\twhile (now>head2)\n\t\t{\n\t\t\tif (c[now]<c[now-1] || (c[now]==c[now-1] && idc[now]<idc[now-1])) break;\n\t\t\tswap(c[now],c[now-1]);\n\t\t\tswap(idc[now],idc[now-1]);\n\t\t\tnow--;\n\t\t}\n\t}\n\t\n\tint zuixiao=n;\n\tfor (int i=n;i>=1;i--)\n\tif (link[i])\n\t{\n\t\tint now=i,flag=0;\n\t\twhile (now!=0)\n\t\t{\n\t\t\tif (flag==1) zuixiao=min(zuixiao,now);\n\t\t\tint pp=now;\n\t\t\tnow=link[now];\n\t\t\tlink[pp]=0;\n\t\t\tflag=1-flag;\n\t\t}\n\t}\n\tcout<<n-zuixiao+1<<endl;\n\treturn;\n}\n\n\nint main()\n{\n\tscanf(\"%d\",&T);\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\twork();\n\tT--;\n\twhile (T--)\n\t{\n\t\tscanf(\"%d\",&k);\n\t\twhile (k--)\n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\ta[x]=y;\n\t\t}\n\t\twork();\n\t}\n}\n```\n\n",
        "postTime": 1605065253,
        "uid": 3432,
        "name": "dlhham",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\uff08\u6d1b\u8c37\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "# CSP2020-S T4 \u8d2a\u5403\u86c7\n\n# \u601d\u8def\n\n\u200b\t\u9996\u5148\u8fd9\u9053\u9898\uff0c\u8ddf16\u5e74\u7684\u86af\u8693\u5f88\u50cf\uff0c\u81f3\u5c11\u6211\u5728\u8003\u573a\u4e0a\u9762\u4e00\u770b\u7b2c\u4e00\u4e2a\u60f3\u7684\u5c31\u662f\u53cc\u961f\u5217\u4f18\u5316\uff0c\u4f46\u662f\u8fd9\u4e2a\u6682\u65f6\u4e0d\u80fd\u8bf4\u662f\u5bf9\u7684\uff0c\u4e5f\u6ca1\u9519\u3002\u90fd\u65e0\u59a8\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8bbe\u6240\u6709\u86c7\u7684\u5b9e\u529b\u4e3a $a_1,a_2,...,a_{n-1},a_n$.\n\n\u200b\t\u5148\u6765\u6a21\u62df\u4e00\u4e0b\u5427\u3002\n\n\u200b\t\u63d0\u51fa $a_n,a_1$ \u4f5c\u4e3a\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u8fd9\u91cc\u5efa\u8bae\u60f3\u6210\u5408\u5e76\u86c7\u3002\u5408\u5e76\u6210\u4e86\u4e00\u6761 $a_n-a_1$ \u7684\u86c7\uff08\u8bb0\u4e3a $a_x$\uff09\u3002\u5c06\u5b83\u653e\u5165\u86c7\u7fa4\u4e2d\u3002\n\n\u200b\t\u5e0c\u671b\u80fd\u591f\u6bcf\u6b21\u5c3d\u91cf\u5feb\u7684\u53d6\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u5219\u80fd\u53cc\u961f\u5217\u4f18\u5316\u662f\u6700\u597d\u7684\u3002\n\n\u200b\t\u73b0\u5728\u76ee\u7684\u662f\u4e3a\u4e86\u9760\u8fd1\u5355\u8c03\u6027\u3002\n\n\u200b\t\u5206\u7c7b\u8ba8\u8bba\uff0c\n\n## Case1\uff1a\n\n\u200b\t\u82e5\u662f $a_x$ \u4ecd\u4e3a\u6700\u5c0f\uff0c\u5219\u5e0c\u671b\u5355\u8c03\u9012\u51cf\u3002\u5219\u6709\u67ff\u5b50\u3002\n$$\na_x>a_{n-1}-a_x\\\\\na_n-a_1>a_{n-1}-a_n+a_1\\\\\n2a_n-a_{n-1}>2a_1\\\\\na_n>2a_1\n$$\n\u200b\t\u8fd9\u4e2a\u7ed3\u8bba\u662f EI \u6240\u8bf4\u8fc7\u7684\u3002\n\n## Case2\uff1a\n\n\u200b\t\u82e5\u662f $a_x$ \u4e0d\u4e3a\u6700\u5c0f\uff0c\u663e\u7136\u9700\u8981 $a_x>a_{n-1}-a_2$ \u6210\u7acb\u3002\u53c8\u7531\u4e8e $a_x>a_2$ (\u4e0d\u4e3a\u6700\u5c0f)\uff0c\u6240\u4ee5 $a_x>a_{n-1}-a_2>a_{n-1}-a_x$ \u7ed3\u8bba\u540c\u4e0a\u3002\u7136\u540e\u5f52\u7eb3\u51fa\u53ea\u8981**\u6bcf\u6b21\u53d6\u51fa\u7684\u6700\u5927\u503c\u4e3a\u6700\u5c0f\u503c\u7684\u4e24\u500d\u4ee5\u4e0a\u5c31\u80fd\u4fdd\u6301\u5355\u8c03**\u3002\uff08\u6b64\u5904\u6709\u5173\u7b49\u53f7\u7684\u4e8b\u60c5\u8981\u6c42\u7f16\u53f7\uff0c\u65e0\u5173\u7d27\u8981\uff0c\u624b\u73a9\u5373\u53ef\uff09\n\n\u200b\t\u540c\u65f6\u53ef\u4ee5\u53d1\u73b0\u7531\u4e8e $a_x>a_2>a_1$ \u6240\u4ee5 $a_n-a_1>a_1$,$Case2$ \u6052\u6ee1\u8db3\u7ed3\u8bba\u3002\n\n\u200b\t\u4e8e\u662f\u53ef\u77e5\u5728 $Case2$  \u201c**\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u4e0d\u4e3a\u65b0\u7684\u6700\u5c0f\u503c\u201d\uff08\u5373 $a_x>a_2$\uff09\uff0c\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u961f\u5217\uff0c\u7b26\u5408\u5355\u8c03\u6027\u3002**\uff0c\u5bf9\u4e8e $Case1$ \u5219\u662f\u53ea\u5728\u6ee1\u8db3\u7ed3\u8bba\u65f6\u5355\u8c03\u3002\n\n## \u66f4\u8fdb\u4e00\u6b65\n\n\u200b\t\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u8003\u8651\u7684**\u6240\u6709\u95ee\u9898\uff0c\u90fd\u662f\u56de\u7b54\u5f53\u524d\u6700\u5f3a\u86c7\u4f1a\u4e0d\u4f1a\u5403**\u3002\n\n\u200b\t\u8003\u8651\u5230\u5728 $case2$ \u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6761\u86c7\u5fc5\u5403\u65e0\u7591\u3002\n\n\u200b\t\u8bc1\u660e\uff1a\u56e0\u4e3a\u5355\u8c03\u6027\uff0c\u4e0b\u4e00\u6761\u6700\u5927\u7684\u86c7($a_{n-1}$) \u53bb\u5403\u6700\u5c0f\u503c\u4e4b\u540e\u4e00\u5b9a\u4f1a\u5c0f\u4e8e $a_x$ \u3002\u6240\u4ee5**\u5c31\u7b97\u8981\u6b7b\uff0c\u4e5f\u662f $a_{n-1}$ \u5148\u6b7b**\uff0c\u800c\u6240\u6709\u7684**\u5403\u8fc7\u7684\u86c7\u90fd\u662f\u4e0d\u53ef\u80fd\u6b7b\u7684**\u3002\u4e0d\u7136\u5b83\u4f1a\u4e0d\u5403\u8f6c\u800c\u76f4\u63a5\u7ed3\u675f\u6e38\u620f\u3002**\u6240\u4ee5 $a_n$ \u5c31\u4e0d\u53ef\u80fd\u6b7b**\u3002\u5403\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u200b\t\u6240\u4ee5\u8fde\u7eed\u7684 $Case 2$ \u76f4\u63a5\u6a21\u62df\u5c31\u884c\u3002\u4e8e\u662f\u4f1a\u9047\u5230\u7b2c\u4e00\u4e2a $Case1$\n\n## \u5355\u8c03\u6027\u7684\u6d88\u4ea1\n\n\u200b\t\u5f88\u9ebb\u70e6\u7684\u662f\uff0c$Case1$ \u65f6\u7ed3\u8bba\u5341\u5206\u4e0d\u597d\u6ee1\u8db3\u3002\u6240\u4ee5\u5f53\u6210**\u5192\u7740\u201c\u98ce\u9669\u201d\u53bb\u5403**\uff0c\u66f4\u8fdb\u4e00\u6b65\u7684\u8bf4\uff0c\u662f\u5148\u5403\uff0c\u7136\u540e\u89c2\u5bdf\u4e0b\u4e00\u4e2a\u6700\u5927\u7684\u4f1a\u4e0d\u4f1a\u5403\u3002\u82e5\u662f\u4e0b\u4e00\u4e2a\u4e0d\u4f1a\u5403\uff0c\u5f53\u524d\u6761\u5c31\u5403\uff0c\u5426\u5219\u4e0d\u5403\u3002\u6b64\u65f6\u9700\u8981\u6ce8\u610f\u5230**\u8fd9\u4e2a\u95ee\u9898\u4f9d\u65e7\u6ca1\u6709\u8131\u79bb\u201c\u6700\u5f3a\u86c7\u4f1a\u4e0d\u4f1a\u5403\u201d\u7684\u8303\u7574\uff0c\u53ea\u662f\u8be2\u95ee\u7684\u662f\u4e0b\u4e00\u6761\u6700\u5f3a\u86c7\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6709\u7740\u9012\u5f52\u6027\u8d28**\u3002\n\n\u200b\t\u90a3\u4e48\u9012\u5f52\u7684\u8fb9\u754c\u6709\u4e24\u4e2a\u3002\uff08\u5373\u4ec0\u4e48\u65f6\u5019\u5fc5\u5403\uff09\n\n\u200b\t**\u7b2c\u4e00\u4e2a\u8fb9\u754c\u662f\u5176\u540e\u7684\u67d0\u4e00\u6761\u86c7\u9047\u89c1\u4e86 $Case2$  \uff0c\u5fc5\u5403\u3002\u7b2c\u4e8c\u4e2a\u8fb9\u754c\u662f\u53ea\u5269\u4e24\u6761\u86c7\u4e86\u3002**\n\n\u200b\t\u4f46\u662f\u6b64\u65f6\u9700\u8981\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u5728 $Case1$ \u4e2d\uff0c\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u90a3\u4e48\u4e00\u76f4\u4ece\u4e24\u4e2a\u961f\u5217\u4e2d\u53d6\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u8fd8\u662f\u5bf9\u7684\u5417\uff1f\u7b54\u6848\u662f\u5bf9\u7684\u3002\u800c\u8fd9\u4e5f\u662f\u6211\u548c\u673a\u623f\u540c\u5b66\u601d\u8003\u4e861\u4e2a\u5c0f\u65f6\u7684\u95ee\u9898\u3002\n\n\u200b\t\u5355\u8c03\u6027\u662f\u76f8\u5bf9\u4e8e\u591a\u6b21\u7684\u63d2\u5165\u540c\u65f6\u90fd\u5728\u961f\u5217\u4e2d\u800c\u8a00\u7684\uff0c\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u7531\u4e8e $Case1$ \u7684**\u63d2\u5165\u7684 $a_x$ \u662f\u6700\u5c0f\u7684\u7684\u6027\u8d28**\uff0c\u5219\u5fc5\u7136\u4f1a\u5728\u4e0b\u4e00\u6b21\u53d6\u51fa\u6765\u3002\u66f4\u5177\u4f53\u7684\uff0c\u5f53\u9047\u5230\u4e00\u8fde\u4e32 $Case1$ \u7684\u65f6\u5019\uff0c\u5c31\u4f1a**\u4e00\u76f4\u5728\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\u53cd\u590d\u5b58\u50a8**\uff08\u82e5\u662f\u4e2d\u95f4\u6709 $Case2$  \u5c31\u5230\u8fbe\u8fb9\u754c\u4e86\uff09\u3002\n\n\u200b\t\u540c\u65f6**\u6700\u5927\u503c\u4e5f\u80af\u5b9a\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u5b58\u50a8\u7684\u4e00\u76f4\u53ea\u4e0e\u6700\u5c0f\u503c\u6709\u5173**\uff0c\u9664\u975e\u53ea\u5269\u4e24\u6761\u86c7\uff0c\u4f46\u8fd9\u53c8\u6070\u597d\u78b0\u4e0a\u4e86\u53e6\u4e00\u4e2a\u8fb9\u754c\u3002\n\n\u200b\t\u6700\u5927\u503c\u5408\u6cd5\uff0c\u6700\u5c0f\u503c\u4e5f\u5408\u6cd5\uff0c\u4e0d\u5355\u8c03\uff0c\u4e5f\u65e0\u59a8\u3002\n\n## \u5947\u5076\u6027\u7684\u5f71\u54cd\n\n\u200b\t\u8fd9\u4e2a\u90fd\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u867d\u7136\u8bf4\u662f\u9012\u5f52\uff0c\u4f46\u662f\u6253\u7684\u65f6\u5019\u76f4\u89c9\u5c31\u5f3a\u70c8\u7684\u544a\u8bc9\u6211\u548c\u5947\u5076\u6027\u76f8\u5173\u3002\n\n\u200b\t\u4e0d\u59a8\u8003\u8651\u8fb9\u754c\u505a\u51fa\u51b3\u7b56\u7684\u86c7\u662f\u7b2c i \u5c42 \uff0c\u90a3\u4e48\u7b2c i-1 \u5c42\u5fc5\u7136\u4e0d\u6562\u5192\u98ce\u9669\uff0c\u4e8e\u662f\u7b2c i-2 \u5c42\u5c31\u80fd\u5403\uff0c i-3\u5c42\u4e0d\u6562\u5192\u98ce\u9669....\n\n\u200b\t\u6240\u4ee5\u6027\u8d28\u663e\u7136\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u9012\u5f52\u591a\u5c11\u5c42\u5c31\u884c\u3002\n\n# CODE\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<fstream>\n#include<cmath>\nusing namespace std;\n#define pii pair<int,int>\n#define mp(x,y) make_pair(x,y)\ninline int read(){\n\tchar ch=getchar();\n\tint res=0,f=1;\n\tfor(;ch<'0'||ch>'9';ch=getchar())if(ch=='-')f=-1;\n\tfor(;ch>='0'&&ch<='9';ch=getchar())res=(res<<3)+(res<<1)+(ch-'0');\n\treturn res*f;\n}\nconst int MAXN=1e6+5,inf=1e9;\nint t,n,a[MAXN];\npii q1[MAXN],q2[MAXN];//q1\u5355\u8c03\u9012\u589e\uff0cq2\u5355\u8c03\u9012\u51cf\nint l1,r1,l2,r2;//\u9996\u5c3e\u6307\u9488\ninline pii mx(){//\u53d6\u51fa\u6700\u5927\u503c\u4e14\u5f39\u51fa\n\tif(r1==l1)return q2[l2++];\n\telse if(r2==l2)return q1[--r1];\n\telse if(q2[l2]>q1[r1-1])return q2[l2++];\n\telse return q1[--r1];\n}\ninline pii mn(){//\u53d6\u51fa\u6700\u5c0f\u503c\u5e76\u5f39\u51fa\n\tif(l1==r1)return q2[--r2];\n\telse if(r2==l2)return q1[l1++];\n\telse if(q2[r2-1]<q1[l1])return q2[--r2];\n\telse return q1[l1++];\n}\ninline pii M_min(pii x,pii y){\n\treturn x<y?x:y;\n}\ninline void solve(){\n\tl1=r1=l2=r2=0;\n\tfor(int i=1;i<=n;++i)q1[r1++]=mp(a[i],i);//\u521d\u59cb\u5316\n\tint fl=0,cnt=0,alf=0;\n\twhile(1){\n\t\t++cnt;//\u8ba1\u6570\u5668\uff0c\u540c\u65f6\u4e5f\u662f\u6b7b\u6389\u7684\u86c7\u6570\n\t\tpii x=mn(),y=mx();\n\t\tpii z=M_min((l1<r1?q1[l1]:mp(inf,-inf)),(l2<r2?q2[r2-1]:mp(inf,-inf)));//\u518d\u53d6\u51fa\u4e00\u4e2a\u6700\u5c0f\u503c\n\t\ty.first-=x.first;\n\t\tif(y>z||cnt==n-1){//Case2\u548c\u8fb9\u754c\u5199\u4e00\u8d77\u4e86\n\t\t\tif(fl){\n\t\t\t\tprintf(\"%d\\n\",n-(fl-(alf&1)));//\u5947\u5076\u6027\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tif(cnt==n-1){\n\t\t\t\tprintf(\"1\\n\");\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tq2[r2++]=y;//\u538b\u5165\u961f\u5217\n\t\t}\n\t\telse {\n\t\t\talf++;//\u8bb0\u5f55\u5c42\u6570\n\t\t\tif(!fl)fl=cnt;\t//\u7b2c\u4e00\u4e2a\u5f00\u59cb\u201c\u5192\u98ce\u9669\u201d\u7684\u86c7\u7684\u4e4b\u524d\u6b7b\u4e86\u591a\u5c11\n\t\t\tq2[r2++]=y;//\u538b\u5165\u961f\u5217\n\t\t}\n\t}\n}\nint main(){\n\tt=read()-1;\n\tn=read();\n\tfor(int i=1;i<=n;++i)a[i]=read();\n\tsolve();\n\twhile(t--){\n\t\tint k=read();\n\t\tfor(int i=1,x;i<=k;++i)x=read(),a[x]=read();\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```\n\n\u200b\t",
        "postTime": 1605080170,
        "uid": 68561,
        "name": "clockwhite",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\uff08\u6d1b\u8c37\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "[P7078 \u8d2a\u5403\u86c7](https://www.luogu.com.cn/problem/P7078)\n\n\u6bd4\u8d5b\u65f6\u80fd\u505a\u51fa\u6765\u8fd9\u9898\u7684\u90fd\u662f\u795e\u4ed9\uff0c\u56e0\u4e3a\u4ed6\u548c\u86c7\u4e00\u6837\u806a\u660e\uff01\n\u672c\u7bc7\u9898\u89e3\u7684\u4e3b\u8981\u601d\u8def\u662f\u53c2\u8003sll\u5b66\u957f\u7684\u89c6\u9891\u8bb2\u89e3\u7684\uff0c\u5728\u8fd9\u91ccorz\uff01\n\n\u8bbe\u6240\u6709\u86c7\u7684\u5b9e\u529b\u4e3a $a_1,a_2\\dots a_n$ \uff0c$a_1$ \u6700\u5c0f\uff0c $a_n$ \u6700\u5927\u3002\u4e0b\u9762\u6211\u4eec\u5206\u60c5\u51b5\u8ba8\u8bba\u6700\u5927\u7684\u86c7\u662f\u5426\u9009\u62e9\u5403\uff1a\n\n**Case1\uff1a\u5f53\u524d\u6700\u5f3a\u7684\u86c7\u5403\u4e86\u6700\u5f31\u7684\u86c7\u4e4b\u540e\u6ca1\u6709\u53d8\u6210\u6700\u5f31\u7684\u86c7**\n\n \uff08\u7ed3\u8bba\u4e00\uff09**\u5982\u679c\u5f53\u524d\u6700\u5f3a\u7684\u86c7\u5403\u4e86\u6700\u5f31\u7684\u86c7\u4e4b\u540e\u6ca1\u6709\u53d8\u6210\u6700\u5f31\u7684\u86c7\uff0c\u5b83\u4e00\u5b9a\u4f1a\u9009\u62e9\u5403\uff01**\u8bc1\u660e\u5982\u4e0b\uff1a \n\n* \u5982\u679c\u5b83\u5403\u5b8c\u4ee5\u540e\u4ecd\u7136\u662f\u6700\u5927\u7684\u86c7\uff0c\u4e0d\u5403\u767d\u4e0d\u5403\n* \u5426\u5219\uff0c\u4e0b\u4e00\u4e2a\u6700\u5927\u7684\u86c7\u4e3a $a_{n-1}$\uff0c\u4e0b\u4e00\u4e2a\u6700\u5c0f\u7684\u86c7\u4e3a $a_2$\u3002\u56e0\u4e3a $a_n\\geq a_{n-1}$\uff0c$a_2\\geq a_1$ \uff0c\u6240\u4ee5 $a_n-a_1\\geq a_{n-1}-a_2$ \u3002\u5982\u679c $a_{n-1}$ \u9009\u62e9\u5403\uff0c\u90a3\u4e48\u5b83\u5403\u5b8c\u540e\u4f1a\u6bd4 $a_n$ \u5403\u5b8c\u540e\u66f4\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u5982\u679c\u6b7b\u4e5f\u4f1a\u6b7b\u5728 $a_n$ \u4e4b\u524d\uff0c\u7531\u4e8e\u5b83\u4f1a\u5c3d\u91cf\u4e0d\u6b7b\uff0c\u6240\u4ee5 $a_n$ \u4e5f\u4e0d\u4f1a\u6b7b\uff1b\u5982\u679c $a_{n-1}$ \u9009\u62e9\u4e0d\u5403\uff0c\u90a3\u4e48\u51b3\u6597\u7ed3\u675f\uff0c $a_n$ \u4ecd\u7136\u5b89\u5168\u3002\n\n**Case2\uff1a\u5f53\u524d\u6700\u5f3a\u7684\u86c7\u5403\u4e86\u6700\u5f31\u7684\u86c7\u4e4b\u540e\u53d8\u6210\u4e86\u6700\u5f31\u7684\u86c7**\n\n\u663e\u7136~~(\u5e9f\u8bdd)~~ \uff0c\u5982\u679c\u5b83\u5403\u5b8c\u4ee5\u540e\uff0c\u5728\u4e4b\u540e\u7684\u51b3\u6597\u4e2d\u4e0d\u4f1a\u6b7b\uff0c\u5b83\u5c31\u5403\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\uff08\u7ed3\u8bba\u4e8c\uff09**\u5728\u8f6e\u5230\u5b83\u6b7b\u4e4b\u524d\uff0c\u5df2\u7ecf\u6709\u86c7\u9009\u62e9\u7ed3\u675f\u51b3\u6597\uff0c\u5b83\u5c31\u5403\u3002**\n\n\u6839\u636e\u4ee5\u4e0a\u4e24\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u672c\u9898\u7684\u57fa\u672c\u601d\u8def\uff1a\n\n**\u6b65\u9aa4\u4e00** \uff1a\u6211\u4eec\u5148\u4e0d\u8003\u8651 Case2\uff0c\u5047\u8bbe\u6240\u6709\u7684\u86c7\u90fd\u4e0d\u806a\u660e\uff0c\u6309\u7167 Case1 \u8fdb\u884c\u6b63\u5411\u6a21\u62df\u4e00\u904d\uff0c\u8bb0\u5f55\u6bcf\u4e00\u8f6e\u4e2d\u5403\u7684\u86c7\u548c\u88ab\u5403\u7684\u86c7\uff08\u5373\u6700\u5927\u503c $mx_i$ \u548c\u6700\u5c0f\u503c $mi_i$\uff09\u3002\u663e\u7136\u7684\u505a\u6cd5\u662f\u7528 set \u7ef4\u62a4\u3002\n\n**\u6b65\u9aa4\u4e8c**\uff1a\u518d\u8003\u8651 Case2\u3002\u8bb0 $dead_i$ \u8868\u793a\u7b2c $i$ \u6761\u86c7\u6b7b\u7684\u65f6\u95f4\u3002\u4ece\u540e\u5f80\u524d\uff0c\u66ff\u6bcf\u4e00\u8f6e\u4e2d\u7684\u86c7\u51b3\u5b9a\u5b83\u662f\u5426\u8981\u5403\u3002**\u4ece\u540e\u5f80\u524d**\u662f\u56e0\u4e3a\u6bcf\u6761\u86c7\u5f53\u524d\u662f\u5426\u9009\u62e9\u7ed3\u675f\u6e38\u620f\uff0c\u662f\u8981\u6839\u636e\u5b83\u4e4b\u540e\u662f\u5426\u88ab\u5403\u5224\u65ad\u7684\uff08\u7ed3\u8bba\u4e8c\uff09\u3002\u8bb0 $ans$ \u8868\u793a\u51b3\u6597\u4f1a\u5728\u54ea\u4e00\u8f6e\u7ed3\u675f\u3002\u5982\u679c $dead_{mx_i}<ans$ \uff0c\u90a3\u4e48\u7ed3\u675f\uff0c$ans=i$\u3002\u6700\u7ec8\u7b54\u6848\u5373\u4e3a $n-ans+1$ \u3002\n\n\u4ee5\u4e0a\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u6b65\u9aa4\u4e00\u7684\u6a21\u62df\u4e2d\u9700\u8981\u7528\u5230 set \uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5927\u6700\u5c0f\u503c\u590d\u6742\u5ea6\u4e3a $O(\\log n)$ \uff0c\u6211\u4eec\u5e0c\u671b\u628a\u8fd9\u4e00\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u964d\u4e3a $O(1)$\u3002\u770b\u5230\u9898\u76ee\u4e2d\u8bf4**\u4fdd\u8bc1\u6bcf\u7ec4\u6570\u636e\uff08\u5305\u62ec\u6240\u6709\u4fee\u6539\u5b8c\u6210\u540e\u7684\uff09\u7684 $a_i$ \u4ee5\u4e0d\u964d\u987a\u5e8f\u6392\u5217**\uff0c\u6211\u4eec\u8003\u8651\u7528\u961f\u5217\u4ee3\u66ff set \u7ef4\u62a4\uff0c\u91cd\u65b0\u601d\u8003 Case1 \u548c Case2 \u4e2d\u9690\u542b\u7684**\u5355\u8c03\u6027**\u3002\n\n \u8bbe $w=a_n-a_1$\u3002\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u961f\u5217\uff0c $q1$ \u4e2d\u5b58\u539f\u6765\u7684\u86c7\uff0c$q2$ \u4e2d\u5b58\u6bcf\u6b21\u65b0\u5f97\u5230\u7684\u86c7\u3002\n\n**Case1\uff1a**\u5982\u679c $w>a_{n-1}$\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u7684\u6700\u5927\u503c\u4e3a $w$ \uff0c$w-a_2<w$\uff1b\u5426\u5219$w>a_{n-1}-a_2$ \u3002\u6ee1\u8db3\u5355\u8c03\u6027\u3002\uff08\u5176\u5b9e\u5c31\u662f\u4e0a\u9762\u5bf9\u7ed3\u8bba\u4e00\u7684\u8bc1\u660e\uff09\n\n**Case2**\uff1a $w$ \u5c31\u662f\u4e0b\u4e00\u6b21\u88ab\u5403\u6389\u7684\u86c7\u3002\u6240\u4ee5\u961f\u5217\u4e2d\u59cb\u7ec8\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u663e\u7136\u6ee1\u8db3\u5355\u8c03\u6027\u3002\n\n\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c \u5982\u679c\u53ea\u6709 Case1 \u6216 Case2 \uff0c $q2$ \u90fd\u662f\u5355\u8c03\u7684\u3002\u4f46\u5982\u679c Case1 \u548c Case2 \u4ea4\u66ff\u51fa\u73b0\u5462\uff1f\n\n* \u5982\u679c\u4e00\u4e32 Case1 \u540e\u8ddf\u4e00\u4e32 Case2 \uff0cCase2 \u4f1a\u53cd\u590d\u8fdb\u51fa\u961f\uff0c\u961f\u91cc\u4ee5\u524d\u7684\u5143\u7d20\u4e0d\u4f1a\u7528\u5230\n* \u5982\u679c\u4e00\u4e32 Case2 \u540e\u9047\u5230\u4e00\u4e2a Case1\uff0c\u786e\u5b9e\u53ef\u80fd\u4f1a\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\u3002**\u4f46\u662f\uff01\u8fd9\u6b21\u7684 Case1 \u88ab\u5403\u6389\u7684\u662f\u4e0a\u6b21 Case2 \u4e2d\u9009\u62e9\u5403\u86c7\u7684\u86c7\uff0c\u65e2\u7136\u5b83\u8fd9\u6b21\u88ab\u5403\u4e86\uff0c\u90a3\u4e48\u56e0\u4e3a\u5b83\u8db3\u591f\u806a\u660e\uff0c\u5b83\u4e0a\u4e00\u6b21\u5c31\u4e0d\u4f1a\u9009\u62e9\u5403\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u8fb9\u754c\u6761\u4ef6\uff0c\u51b3\u6597\u5728\u8fd9\u4e4b\u524d\u5c31\u7ed3\u675f\u5566\uff01**\u56e0\u6b64\uff0c\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\u4e5f\u662f\u6ca1\u6709\u5173\u7cfb\u7684\u3002\n\n\u7efc\u4e0a\uff1a$q1$ \u548c $q2$ \u90fd\u662f\u6ee1\u8db3\u5355\u8c03\u6027\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u4e2a deque \u4ee3\u66ff set\uff0c\u590d\u6742\u5ea6\u5c31\u964d\u4e3a $O(Tn)$ \u4e86\u3002\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801\u3002\n\n\u8fd9\u9053\u9898\u6211\u4ece\u5b66\u4e60\u89e3\u6cd5\uff0c\u5199\u4ee3\u7801\uff0c\u5230\u5199\u5b8c\u8fd9\u7bc7\u9898\u89e3\uff0c\u82b1\u4e86\u6574\u6574\u4e00\u4e0b\u5348\u65f6\u95f4\u3002\u8fd9\u4e5f\u662f\u6211\u5199\u8fc7\u7684\u6700\u957f\u4e14\u6700\u8be6\u7ec6\u7684\u4e00\u7bc7\u9898\u89e3\u3002\u5e0c\u671b\u5927\u5bb6\u548c\u4ee5\u540e\u518d\u56de\u6765\u770b\u8fd9\u7bc7\u9898\u89e3\u7684\u6211\u90fd\u80fd\u770b\u61c2\u5427\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define inl inline\nusing namespace std;\nnamespace FGF\n{\n\tint n,m;\n\tconst int N=1e6+5;\n\tint b[N],a[N],q[N],de[N],h,t,st,ed,fl,end;\n\tstruct Node{\n\t\tint mx,mi;\n\t\tNode(){};\n\t\tNode(int _mx,int _mi):mx(_mx),mi(_mi){};\n\t}c[N];\n\tint read()\n\t{\n\t\tint s=0;char ch=getchar();\n\t\twhile(!isdigit(ch))ch=getchar();\n\t\twhile(isdigit(ch))s=s*10+ch-'0',ch=getchar();\n\t\treturn s;\n\t}\n\tinl int getcm()//\u67e5\u627e\u6b21\u5c0f\u503c \n\t{\n\t\tint mi;\n\t\tif(st>ed)mi=q[t];\n\t\telse if(h>t)mi=st;\n\t\telse if(a[st]<a[q[t]]||(a[st]==a[q[t]]&&st<q[t]))mi=st;\n\t\telse mi=q[t];\n\t\treturn mi;\n\t}\n\tinl int getmi()//\u53d6\u51fa\u6700\u5c0f\u503c \n\t{\n\t\tint mi;\n\t\tif(st>ed)mi=q[t],t--;\n\t\telse if(h>t)mi=st,st++;\n\t\telse if(a[st]<a[q[t]]||(a[st]==a[q[t]]&&st<q[t]))mi=st,st++;\n\t\telse mi=q[t],t--;\n\t\treturn mi;\n\t}\n\tinl int getmx()//\u53d6\u51fa\u6700\u5927\u503c \n\t{\n\t\tint mx;\n\t\tif(st>ed)mx=q[h],h++;\n\t\telse if(h>t)mx=ed,ed--;\n\t\telse if(a[ed]>a[q[h]]||(a[ed]==a[q[h]]&&ed>q[h]))mx=ed,ed--;\n\t\telse mx=q[h],h++;\n\t\treturn mx;\n\t}\n\tvoid solve()\n\t{//\u8fd9\u91cc\u6211\u76f4\u63a5\u5c06a\u6570\u7ec4\u5f53q1\u7528\u4e86 \n\t\th=1,t=0,st=1,ed=n,fl=0,end=n-1;\n\t\tfor(int i=1;i<n;i++)//\u51b3\u6597\u6700\u591a\u8fdb\u884cn-1\u8f6e \n\t\t{\n\t\t\tint mx=getmx(),mi=getmi(),cm=getcm();\n\t\t\ta[mx]-=a[mi];\n\t\t\tq[++t]=mx;//\u628a\u65b0\u5f97\u5230\u7684\u503c\u653e\u5165q2 \n\t\t\tc[i].mx=mx,c[i].mi=mi;\n\t\t\tif(a[mx]>a[cm]||(a[mx]==a[cm]&&mx>cm))\n\t\t\t{\n\t\t\t\tif(fl)//\u4e00\u4e32Case2\u540e\u8ddf\u4e86\u4e00\u4e2aCase1\uff0c\u51b3\u6597\u7ed3\u675f \n\t\t\t\t{\n\t\t\t\t\tend=i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse fl=i;//\u8bb0\u5f55\u4e00\u4e0bCase2\u51fa\u73b0\u8fc7\u4e86 \n\t\t}\n\t\tfor(int i=1;i<=n;i++)de[i]=end+1;//\u521d\u59cb\u5316dead\u6570\u7ec4 \n\t\tde[c[end].mi]=end;\n\t\tint ans=end+1;\n\t\tfor(int i=end-1;i;i--)\n\t\t{\n\t\t\tif(de[c[i].mx]<ans)ans=i;\n\t\t\tde[c[i].mi]=i;\n\t\t}\n\t\tprintf(\"%d\\n\",n-ans+1);\n\t}\n\tvoid work()\n\t{\n\t\tint T=read();n=read();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tb[i]=a[i]=read();\n\t\tsolve();\n\t\tfor(int i=2;i<=T;i++)\n\t\t{\n\t\t\tint k=read();\n\t\t\tfor(int j=1;j<=n;j++)a[j]=b[j];\n\t\t\tfor(int j=1;j<=k;j++)\n\t\t\t{\n\t\t\t\tint x=read(),y=read();\n\t\t\t\tb[x]=a[x]=y;\n\t\t\t}\n\t\t\tsolve();\n\t\t}\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```",
        "postTime": 1605696274,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "P7078 \u8d2a\u5403\u86c7\uff08\u8d2a\u5fc3+\u5355\u8c03\u6027\u4f18\u5316\uff09"
    },
    {
        "content": "~~\u8003\u573a\u5dee\u70b9\u5fd8\u8bb0\u52a0 s~~\n\n~~\u4f46\u4e5f\u62b1\u7075\u4e86 qwq~~\n\n\u4f30\u8ba1\u6211\u662f\u7b2c\u4e00\u4e2a\u672c\u9898\u8003\u573a\u62b1\u7075\u6765\u5199\u9898\u89e3\u7684\u3002\n\n\u8bdd\u8bf4\u8003\u573a\u4e0a\u60f3\u5230\u4e86 $70$ \u5206\u89e3\u6cd5\uff0c\u5c45\u7136\u8c03\u4e86\u4e24\u4e2a\u5c0f\u65f6\u6ca1\u8c03\u51fa\u6765\u6211\u4e5f\u662f\u9189\u4e86\u3002\u7136\u800c\u6211\u53c8\u89c9\u5f97 T4 \u6bd4 T3 \u7b80\u5355\uff08~~\u4ec0\u4e48\u795e\u5947\u60f3\u6cd5~~\uff09\uff0c\u6240\u4ee5 T3 \u53ea\u6709\u66b4\u529b\u7684\u5206\u6570 qwq\u3002\n\n\u65e2\u7136\u5728\u8fd9\u9053\u9898\u4e0a\u53cd\u4f8b\u5927\u9519\uff0c\u90a3\u4e48\u8d5b\u540e\u5c31\u8be5\u597d\u597d\u53cd\u601d\uff0c\u4ee5\u540e\u4e0d\u8981\u518d\u72af\u8fd9\u6837\u7684\u806a\u660e\u3002~~OI\uff0c\u8981\u4ee5\u6838\u4e3a\u8d35\uff0c\u6211\u529d\u51fa\u9898\u4eba\u8017\u5b50\u5c3e\u6c41\uff0c\u4e0d\u8981\u641e\u7a9d\u91cc\u6597\u3002~~\n\n\u54b3\u54b3\uff0c\u6211\u4eec\u6b63\u5f0f\u6765\u8bb2\u89e3\u6cd5\u3002\n\n### \u5f15\u5165\n\n\u9996\u5148\u6211\u4eec\u4ee5\u4e00\u9053\u7ecf\u5178\u7684\u6d77\u76d7\u5206\u91d1\u95ee\u9898\u6765\u505a\u5f15\u5165\uff0c\u8fd9\u5bf9\u8fd9\u9053\u9898\u6709\u5f88\u5927\u542f\u53d1\u3002\n\n\u6211\u4eec\u6709 $5$ \u4e2a\u6d77\u76d7\uff0c\u4ed6\u4eec\u8981\u5206 $100$ \u4e2a\u91d1\u5e01\uff0c$5$ \u4e2a\u6d77\u76d7\u4ece\u4e00\u53f7\u5f00\u59cb\u4e00\u6b21\u63d0\u51fa\u81ea\u5df1\u7684\u5206\u91d1\u65b9\u6848\uff0c\u7136\u540e\u6295\u7968\u8868\u51b3\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u6d77\u76d7\u7684\u65b9\u6848\u5f97\u5230\u4e86\u534a\u6570\u4ee5\u4e0a\u7684\u4eba\u7684\u540c\u610f\uff0c\u90a3\u4e48\u6309\u7167\u4e00\u53f7\u7684\u65b9\u6848\u5206\u94b1\u3002\u5426\u5219\u4e00\u53f7\u4f1a\u88ab\u6254\u5230\u6d77\u91cc\u5582\u9ca8\u9c7c\u3002\u7136\u540e\u518d\u8868\u51b3\u4e8c\u53f7\u7684\u65b9\u6848\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002**\u5047\u8bbe\u6240\u6709\u6d77\u76d7\u8db3\u591f\u806a\u660e**\uff0c\u8bf7\u95ee\u4e00\u53f7\u6700\u591a\u83b7\u5f97\u591a\u5c11\u94b1\uff1f\n\n\u5148\u8bf4\u7b54\u6848\uff0c\u5982\u679c\u6ca1\u6709\u505a\u8fc7\u8fd9\u9053\u9898\uff0c\u4f60\u80af\u5b9a\u4f1a\u5927\u5403\u4e00\u60ca\uff1a\n\n**$$97$$**\n\n\u6211\u4eec\u6765\u5177\u4f53\u5206\u6790\u4e00\u4e0b\uff1a\n\n1. \u9996\u5148\u4ece\u4e24\u4e2a\u4eba\u7684\u60c5\u51b5\u8003\u8651\u3002\u5982\u679c\u53ea\u5269\u4e0b $4$ \u548c $5$\uff0c\u90a3\u4e48\u53ea\u8981 $5$ \u6295\u53cd\u5bf9\u7968\uff0c\u90a3\u4e48 $4$ \u53bb\u5582\u4e86\u9ca8\u9c7c\uff0c$100$ \u5757\u94b1\u5c31\u90fd\u662f $5$ \u7684\u3002\n2. \u73b0\u5728\u8003\u8651\u6709\u4e09\u4e2a\u4eba\uff0c\u65e2\u7136 $4$ \u5f88\u5f31\u52bf\uff0c\u90a3\u4e48\u4ed6\u4e3a\u4e86\u4e0d\u88ab\u5582\u9ca8\u9c7c\uff0c\u65e0\u8bba\u5982\u4f55\u4f1a\u6295\u8d5e\u6210\u7968\uff08\u6211\u4eec\u8003\u8651\u6b7b\u4ea1\u662f\u6700\u574f\u7ed3\u679c\uff0c\u6bd4\u62ff\u4e0d\u5230\u94b1\u8fd8\u574f\uff09\u3002$5$ \u7684\u7968\u4e0d\u91cd\u8981\uff0c\u6240\u4ee5 $3$ \u62ff $100$ \u5757\u94b1\uff0c$4,5$ \u4e00\u5206\u94b1\u62ff\u4e0d\u5230\u3002\n3. \u8003\u8651 $4$ \u4e2a\u4eba\u3002$5$ \u56e0\u4e3a\u5728 $3$ \u4e2a\u4eba\u7684\u65f6\u5019\u62ff\u4e0d\u5230\u94b1\uff0c\u6240\u4ee5\u53ea\u8981 $2$ \u7ed9\u4ed6 $1$ \u5757\u94b1\uff0c\u5c31\u4f1a\u6295\u8d5e\u6210\u7968\u3002$3$ \u56e0\u4e3a\u5728 $3$ \u4e2a\u4eba\u7684\u65f6\u5019\u6709 $100$ \u5757\u94b1\uff0c\u65e0\u8bba\u5982\u4f55\u4e0d\u4f1a\u540c\u610f $2$\u3002\u6240\u4ee5 $2$ \u8fd8\u9700\u8981\u4e00\u5757\u94b1\u8ba8\u597d $4$\u3002\u8fd9\u6837 $2$ \u6700\u591a\u62ff $98$ \u5757\u94b1\u3002\n4. \u6700\u540e\u8003\u8651 $5$ \u4e2a\u4eba\u3002\u73b0\u5728 $3$ \u53ea\u8981\u6709 $1$ \u5757\u94b1\u5c31\u4f1a\u652f\u6301 $1$\uff0c\u6240\u4ee5\u7ed9\u4ed6 $1$ \u5757\u94b1\u3002$2$ \u80af\u5b9a\u53cd\u5bf9\uff08\u7406\u7531\u540c\u4e0a\u4e00\u79cd\u60c5\u51b5 $3$ \u7684\u53cd\u5bf9\u7406\u7531\uff09\u3002$1$ \u53ea\u9700\u8981\u8ba8\u597d $4,5$ \u4e2d\u7684\u4e00\u4e2a\u5373\u53ef\uff0c\u7ed9 $4$ \u6216 $5$ \u5176\u4e2d\u4e00\u4e2a\u591a\u4e00\u5757\u94b1\uff0c\u5373 $2$ \u5757\u94b1\u5373\u53ef\uff0c\u53e6\u4e00\u4e2a\u4e0d\u7528\u7ed9\u3002\u56e0\u6b64 $1$ \u6700\u591a\u6709 $97$ \u5757\u94b1\u3002\n\n\u8fd9\u4e2a\u9898\u7684\u601d\u8def\u5c31\u548c\u8d2a\u5403\u86c7\u7684\u601d\u8def\u6709\u70b9\u7c7b\u4f3c\u4e86\uff0c\u6211\u4eec\u73b0\u5728\u518d\u6765\u7406\u89e3 snakes \u8fd9\u9053\u9898\u4f1a\u597d\u5f88\u591a\u3002\n\n### \u89e3\u9898\n\n\u6211\u4eec\u73b0\u5728\u8003\u8651\u89e3\u9898\u65b9\u6cd5\u3002\n\n\u73b0\u5728\u6211\u4eec\u7684\u86c7\u957f\u5ea6\u662f $a_1,a_2\\dots a_n$\u3002\u5403\u4e00\u6b21\u4f1a\u5f97\u5230\u4e00\u6761\u65b0\u7684\u86c7\uff0c\u957f\u5ea6\u4e3a $a_n-a_1$\u3002\u56e0\u4e3a\u86c7\u8db3\u591f\u806a\u660e\uff0c\u53ea\u8981\u80fd\u5403\uff0c\u6700\u957f\u7684\u86c7\u5c31\u4e00\u76f4\u5403\uff0c\u76f4\u5230\u6700\u957f\u7684\u86c7\u5403\u4e86\u6700\u77ed\u7684\u86c7\u540e\u53d8\u6210\u4e86\u6700\u77ed\u7684\u86c7\u3002\u8fd9\u7b26\u5408\u8d2a\u5fc3\u7684\u7b56\u7565\u3002\u8fd9\u4e2a\u8d2a\u5fc3\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4e00\u5f00\u59cb\u6211\u5c31\u60f3\u5230\u8fd9\u91cc\uff0c\u5f00\u5fc3\u6253\u4e86\u4ee3\u7801\u3002\u7ed3\u679c\u5927\u6837\u4f8b\u548c\u7b54\u6848\u8001\u662f\u5dee $1$\u3002\u5927\u6982\u6700\u540e\u8fd8\u5269\u534a\u4e2a\u5c0f\u65f6\u7684\u65f6\u5019\u60f3\u5230\u4e86\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n```plain\n1\n3\n3 4 5 6\n```\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c$6$ \u5403\u4e86 $3$ \u540e\u4f1a\u53d8\u6210 $3$\uff0c\u4f46\u662f $5$ \u4e0d\u6562\u52a8\u5b83\uff0c\u56e0\u4e3a\u52a8\u4e86\u81ea\u5df1\u4f1a\u88ab\u5403\u6389\uff0c\u56e0\u6b64 $6$ \u53ef\u4ee5\u5403 $3$ \u6700\u540e\u7b54\u6848\u4e3a $3$\u3002\u56e0\u6b64\u5728\u6700\u540e\u6211\u4eec\u8fd8\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u8fd8\u53ef\u4ee5\u518d\u5403\u4e00\u53e3\u3002\u6211\u4eec\u7684\u5224\u65ad\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u9012\u5f52\uff0c\u5373\u5047\u8bbe\u80fd\u5403\uff0c\u770b\u770b\u63a5\u4e0b\u6765\u662f\u5426\u80fd\u63a8\u51fa\u4e0d\u80fd\u5403\uff0c\u5bfc\u81f4\u77db\u76fe\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n\u6211\u4eec\u73b0\u5728\u5047\u8bbe $a_n-a_1<a_2$\uff0c\u5f00\u59cb\u5224\u65ad\u80fd\u5426\u7ee7\u7eed\u5403\uff0c\u5047\u8bbe\u6211\u4eec\u5403\u4e86\uff0c\u73b0\u5728\u6709 $a_n-a_1,a_2,a_3\\dots a_{n-1}$\u3002\u5982\u679c $a_{n-1}-(a_n-a_1)\\geq a_2$\uff0c\u90a3\u4e48\u539f\u6765\u5c31\u4e0d\u80fd\u5403\uff0c\u5426\u5219\u7ee7\u7eed\u5224\u65ad\u3002\u73b0\u5728\u6709 $a_{n-1}-(a_n-a_1),a_2,a_3\\dots a_{n-3}$\u3002\u5982\u679c\u8fd9\u4e00\u53e3~~\u53d1\u529b~~\u5403\u4e86\uff0c~~\u6ca1\u6709\u628a\u6700\u77ed\u7684\u86c7\u6253\u9aa8\u6298~~\uff0c\u65e0\u6cd5\u5403\u6389\u6700\u77ed\u7684\u86c7\uff0c\u4ecd\u7136\u8981\u7ee7\u7eed\u5224\u65ad\uff1b\u5426\u5219\u8bf4\u660e $a_{n-1}$ \u5403\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u90a3\u4e48 $a_n$ \u5c31\u8be5\u5403\uff0c\u4ee5\u6b64\u7c7b\u63a8\u76f4\u5230\u53ea\u5269 $2$ \u6761\u86c7\uff0c\u9664\u975e\u4e2d\u95f4\u5df2\u7ecf\u5224\u65ad\u51fa\u4e86\u7ed3\u679c\uff0c\u5373\u67d0\u4e00\u65f6\u523b\u6700\u957f\u7684\u86c7\u5403\u4e86\u6700\u77ed\u7684\u86c7\u540e\u4e0d\u662f\u6700\u77ed\u7684\u86c7\u3002\n\n\u7528\u9012\u5f52\u6c42\u89e3\u5373\u53ef\u3002\n\n\u6211\u4eec\u91c7\u7528 ```set``` \u6765\u7ef4\u62a4\u5f53\u524d\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\u975e\u8003\u573a\u4ee3\u7801\uff08\u6211\u8003\u573a\u4e0a\u90fd\u62b1\u7075\u4e86qwq\uff09\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n//Or,you'll be punished by Sakyamuni!!!\n#include<bits/stdc++.h>\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int maxn=1e6+10;\n\nint n;\n\nstruct snakes {\n\tint id,len;\n\t\n\tbool operator <(snakes b) const {\n\t\tif(len!=b.len) {\n\t\t\treturn len<b.len;\n\t\t}\n\t\treturn id<b.id;\n\t}\n\t\n\tsnakes operator -(snakes b) {\n\t\tsnakes ret;\n\t\tret.len=len-b.len;\n\t\tret.id=id;\n\t\treturn ret;\n\t}\n}a[maxn];//\u7ed3\u6784\u4f53\u9488\u4e0d\u6233\n\ntypedef set<snakes>::iterator its;\nset<snakes> s;\n\nbool eatornot() {//\u5224\u65ad\u662f\u5426\u8fd8\u80fd\u518d\u5403\n\tif(s.size()==2) {\n\t\treturn 1;//\u8fd8\u5269\u4e0b\u4e24\u6761\u86c7\u5f53\u7136\u968f\u4fbf\u5403\uff0c\u8fd4\u56de1\n\t}\n\tits ib,ie,ib2;\n\tib=s.begin();\n\tie=s.end();\n\tie--;\n\tib2=ib;\n\tib2++;\n\t\n\tsnakes now=(*ie);\n\tnow.len=(*ie).len-(*ib).len;\n\tif(!(now<(*ib2))) {\n\t\treturn 1;//\u5982\u679c\u5403\u4e86\u4e0d\u662f\u6700\u77ed\u7684\uff0c\u8bf4\u660e\u53ef\u4ee5\u5403\n\t} \n\ts.erase(ib);\n\ts.erase(ie);\n\ts.insert(now);\n\treturn !eatornot();\n\t//\u6ce8\u610f\u53d6\u53cd\u64cd\u4f5c\n\t//\u5982\u679c\u73b0\u5728\u80fd\u5403\uff0c\u8bf4\u660e\u4e0a\u4e00\u6761\u86c7\u4e0d\u8be5\u5403\n\t//\u53cd\u4e4b\u4ea6\u7136\n}\n\nsigned main() {\n\tfreopen(\"snakes.in\",\"r\",stdin);\n\tfreopen(\"snakes.out\",\"w\",stdout);\n\t\n\tint t;\n\tt=read();\n\t\n\tfor(int Q=1;Q<=t;Q++) {\n\t\tif(Q==1) {\n\t\t\tn=read();\n\t\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\t\ta[i].len=read();\n\t\t\t\ta[i].id=i;\n\t\t\t\ts.insert(a[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tint k=read();\n\t\t\tfor(int i=1;i<=k;i++) {\n\t\t\t\tint x=read();\n\t\t\t\tint y=read();\n\t\t\t\ta[x].len=y;\n\t\t\t}\n\t\t\ts.clear();\n\t\t\tfor (int i=1;i<=n;++i) {\n\t\t\t\ts.insert(a[i]);\n\t\t\t}\n\t\t}//\u4e24\u79cd\u8f93\u5165\u65b9\u5f0f\n\t\t\n\t\twhile(1) {\n\t\t\tits ib,ie,ib2;\n\t\t\tib=s.begin();\n\t\t\tie=s.end();\n\t\t\tie--;\n\t\t\tib2=ib;\n\t\t\tib2++;\n\t\t\t\n\t\t\tsnakes now=(*ie);\n\t\t\tnow.len=(*ie).len-(*ib).len;\n\t\t\tif(now<(*ib2)) {//\u6a21\u62df\n\t\t\t\tbreak;\n\t\t\t} \n\t\t\ts.erase(ib);\n\t\t\ts.erase(ie);\n\t\t\ts.insert(now);\n\t\t}\n\t\t\n\t\tint ans=s.size();\n\t\tif(eatornot()) {\n\t\t\tans--; //\u5982\u679c\u80fd\u5403\uff0c\u5c31\u5728\u54ac\u4e00\u53e3\u54af~\n\t\t}\n\t\t\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n\n```\n\n\u4ee5\u4e0a\u662f $70pts$ \u505a\u6cd5\uff0c\u73b0\u5728\u6765\u8003\u8651 $100pts$ \u505a\u6cd5\u3002\u7b97\u6cd5\u80af\u5b9a\u6ca1\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u8981\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 $O(n)$\u3002\n\n\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u8054\u60f3\u5230\u201c\u86af\u8693\u201d\u8fd9\u9053\u9898\uff0c\u5f00\u4e24\u4e2a\u961f\u5217\u6765\u7ef4\u62a4\u6700\u5927\u6700\u5c0f\uff0c\u5403\u5b8c\u540e\u7559\u4e0b\u7684\u86c7\u7684\u957f\u5ea6\u80af\u5b9a\u662f\u987a\u6b21\u5355\u8c03\u9012\u51cf\u7684\uff0c\u5f88\u597d\u8bc1\u660e\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u6211\u4eec\u73b0\u5728\u7ef4\u62a4\u4e24\u4e2a\u53cc\u7aef\u961f\u5217\uff0c\u7531\u4e8e\u6709\u5355\u8c03\u6027\uff0c\u6bcf\u4e2a\u961f\u5217\u4e2d\u86c7\u7684\u957f\u5ea6\u5355\u8c03\u9012\u589e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u7701\u53bb\u4e86\u90a3\u4e2a\u6c42\u6700\u5927\u6700\u5c0f\u503c\u7684 $O(\\log n)$\u3002\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n```cpp\n//Don't act like a loser.\n//This code is written by huayucaiji\n//You can only use the code for studying or finding mistakes\n#include<bits/stdc++.h>\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();\n\tint f=1,x=0;\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nconst int maxn=1e6+10;\n\nint n;\n\nstruct snakes {\n\tint id,len;\n\t\n\tbool operator <(snakes b) const {\n\t\tif(len!=b.len) {\n\t\t\treturn len<b.len;\n\t\t}\n\t\treturn id<b.id;\n\t}\n\t\n\tsnakes operator -(snakes b) {\n\t\tsnakes ret;\n\t\tret.len=len-b.len;\n\t\tret.id=id;\n\t\treturn ret;\n\t}\n}a[maxn];\n\ndeque<snakes> q1,q2,q;\n\nvoid work() {\n\tq1.clear();\n\tq2.clear();//\u8bb0\u5f97\u591a\u7ec4\u6570\u636e\u521d\u59cb\u5316\n\tq.clear();\n\t\n\tfor (int i = 1; i <= n; ++i) {\n\t\tq1.push_back(a[i]);\n\t}\n\t\n\twhile(1) {\n\t\tif(q1.size()+q2.size()==2) {\n\t\t\tprintf(\"1\\n\"); //\u8fd8\u5269\u4e0b 2 \u6761\u86c7\u76f4\u63a5\u8f93\u51fa\n\t\t\treturn ;\n\t\t}\n\t\t\n\t\tsnakes st=q1.front();\n\t\tq1.pop_front();\n\t\tsnakes ed=q1.back();\n\t\t\n\t\tif(!q2.empty()&&ed<q2.back()) {\n\t\t\ted=q2.back();\n\t\t\tq2.pop_back();//\u5982\u679c q2 \u4e2d\u7684\u86c7\u8f83\u957f\uff0c\u53d6 q2 \u4e2d\u7684\u86c7\n\t\t}\n\t\telse {\n\t\t\tq1.pop_back();\n\t\t}\n\t\t\n\t\tsnakes tmp;\n\t\ttmp.len=ed.len-st.len;\n\t\ttmp.id=ed.id;\n\t\tif(q1.front()<tmp) {\n\t\t\tq2.push_front(tmp);\n\t\t}//\u5c06\u65b0\u86c7\u6839\u636e\u5355\u8c03\u6027\u653e\u5165\u961f\u5217\u4e2d\n\t\telse {\n\t\t\tq1.push_front(tmp);\n\t\t\tbreak;\n\t\t\t//\u73b0\u5728\u8fd9\u6761\u86c7\u5403\u4e86\u4e00\u53e3\uff0c\u53d1\u73b0\u53d8\u6210\u6700\u77ed\u7684\u4e86\n\t\t\t//\u90a3\u4e48\u8fdb\u5165\u7b2c\u4e8c\u9636\u6bb5\n\t\t\t//\u6ce8\u610f\u6b64\u65f6\u653e\u5230 q1 \u8fd8\u662f q2 \u4e2d\u6ca1\u6709\u4efb\u4f55\u533a\u522b\u4e86\n\t\t}\n\t}\n\t\n\twhile(!q1.empty()&&!q2.empty()) {\n\t\tif(q1.front()<q2.front()) {\n\t\t\tq.push_back(q1.front());\n\t\t\tq1.pop_front();\n\t\t}\n\t\telse {\n\t\t\tq.push_back(q2.front());\n\t\t\tq2.pop_front();\n\t\t}\n\t}\n\twhile(!q1.empty()) {\n\t\tq.push_back(q1.front());\n\t\tq1.pop_front();\n\t}\n\twhile(!q2.empty()) {\n\t\tq.push_back(q2.front());\n\t\tq2.pop_front();\n\t}\n\t//\u4e3a\u4e86\u64cd\u4f5c\u65b9\u4fbf\u628a\u4e24\u4e2a\u961f\u5217\u5408\u5e76\n\t//\u548c\u5f52\u5e76\u65f6 O(n) \u5408\u5e76\u6709\u5e8f\u6570\u7ec4\u7684\u505a\u6cd5\u4e00\u81f4\n\t\n\tint ans=q.size();\n\t\n\tint eat=0;\n\t\n\twhile(q.size()>1) {\n\t\tsnakes st=q.front();\n\t\tq.pop_front();\n\t\tsnakes ed=q.back();\n\t\tq.pop_back();\n\t\t\n\t\tsnakes tmp;\n\t\ttmp.len=ed.len-st.len;\n\t\ttmp.id=ed.id;\n\t\t\n\t\teat++;\n\t\t\n\t\tif(q.size()==0||q.front()<tmp) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tq.push_front(tmp);//\u8fd8\u662f\u53ef\u7231\u7684\u5355\u8c03\u6027\n\t\t}\n\t}//\u7528 while \u6a21\u62df\u9012\u5f52\u5224\u65ad\uff0c\u672c\u8d28\u4e0a\u65e0\u5dee\u522b\n\t\n\tprintf(\"%d\\n\",ans+(eat&1? 1:0));\n\t//\u6ce8\u610f\u6211\u4eec\u8fd9\u4efd\u4ee3\u7801\u4e2d\u548c\u4e0a\u4e00\u4efd\u6709\u6240\u4e0d\u540c\n\t//\u4e0a\u9762\u662f\u5047\u8bbe\u8fd8\u6ca1\u5403\uff0c\u5224\u65ad\u662f\u5426\u8981\u5403 -1\n\t//\u8fd9\u91cc\u662f\u5df2\u7ecf\u5403\u4e86\uff0c\u5224\u65ad\u662f\u5426\u8981\u5410\u51fa\u6765 +1\n} \n\nsigned main() {\n\tfreopen(\"snakes.in\",\"r\",stdin);\n\tfreopen(\"snakes.out\",\"w\",stdout);\n\t\n\tint t;\n\tt=read();\n\t\n\tfor(int Q=1;Q<=t;Q++) {\n\t\t\n\t\tif(Q==1) {\n\t\t\tn=read();\n\t\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\t\ta[i].len=read();\n\t\t\t\ta[i].id=i;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tint k=read();\n\t\t\tfor(int i=1;i<=k;i++) {\n\t\t\t\tint x=read();\n\t\t\t\tint y=read();\n\t\t\t\ta[x].len=y;\n\t\t\t}\n\t\t}//\u4f3c\u66fe\u76f8\u8bc6\u7684\u8bfb\u5165\n\t\t\n\t\twork();//\u6c42\u89e3\n\t}\n\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n\n```\n\n\u8fd9\u9053\u9898\u5c31\u5206\u6790\u5b8c\u4e86\uff0c\u603b\u4f53\u6765\u8bf4\u96be\u5ea6\u4e0d\u7b97\u5927\uff0c\u4e0d\u81f3\u4e8e\u5230\u9ed1\u9898\uff08\u4f46\u662f\u5728\u8d26\u6237\u91cc\u591a\u4e00\u9053\u9ed1\u9898\u6536\u5165\u8fd8\u662f\u4e0d\u9519\u7684\uff09\u3002\u4e3b\u8981\u662f\u4e00\u4e2a\u601d\u7ef4\u9898\uff0c\u504f\u535a\u5f08\u7c7b\u578b\u3002\u8bf4\u53e5\u5b9e\u8bdd\u8fd9\u9898\u4e8e\u6211\u6765\u8bf4\u4e0d\u53ea\u662f\u641e\u61c2\u4e86\u4e00\u9053\u9898\uff0c\u8fd8\u8ba9\u6211\u597d\u597d\u53cd\u601d\u4e86\u6211\u7684\u505a\u9898\u7b56\u7565\uff0c\u53ef\u4ee5\u8bf4\uff0c\u5728\u6211\u4eba\u751f\u9053\u8def\u4e0a\u53ef\u80fd\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u8282\u70b9\u5427\u3002\u7279\u6b64\u5199\u4e86\u4e00\u7bc7\u9898\u89e3\u6765\u8c22\u8c22\u81ea\u5df1\u7684\u611f\u609f\uff0c\u4e5f\u628a\u77e5\u8bc6\u5206\u4eab\u7ed9\u5927\u5bb6\u3002\n\n\u6700\u540e\u7684\u6700\u540e\uff1a\n\n```cpp\nNOIP2020_rp++;\n```",
        "postTime": 1606484060,
        "uid": 132976,
        "name": "huayucaiji",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\u3011"
    },
    {
        "content": "Orz \u795e\u4ed9 [EI](https://www.luogu.com.cn/blog/EntropyIncreaser/ying-ye-ri-zhi-2020117-yi-ci-xin-xi-fou-dui-cheng-yin-fa-di-csp2020-t4-post)\n\n\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u53e6\u4e00\u79cd\u5b9e\u73b0\u8f83\u7b80\u5355\u7684\u505a\u6cd5\uff1b\u6bd4\u8f83\u4f9d\u8d56\u9898\u76ee\u6027\u8d28\uff0c\u62d3\u5c55\u6027\u5e76\u4e0d\u592a\u597d\n\n$\\text{Part1}$ \u548c $\\text{Part2}$ \u5f88\u5927\u7a0b\u5ea6\u4e0a\u53c2\u8003\u4e86 EI \u7684\u535a\u5ba2\uff1b$\\text{Part3}$ \u4e5f\u611f\u8c22 EI \u5728 uoj \u7fa4\u7684\u89e3\u91caqwq\uff1a\n\n![EI](https://cdn.luogu.com.cn/upload/image_hosting/58aiu3pw.png)\n\n~~\u6240\u4ee5\u5c31\u5f53\u6211\u4ec5\u662f\u8d1f\u8d23\u5c06\u8fd9\u4e9b\u4e1c\u897f\u6574\u5408\u5230\u4e00\u8d77\u7684\u7f62 \\kk~~\n\n## \u89e3\u6790\n\n### Part0\n\n\u6211\u4eec\u5148\u8003\u8651\u8ba9\u6240\u6709\u86c7\u90fd\u9009\u62e9\u5403\uff0c\u7136\u540e\u5904\u7406\u51fa\u6bcf\u8f6e\u505a\u9009\u62e9\u7684\u86c7\u548c\u6bcf\u6761\u86c7\u7684\u6b7b\u4ea1\u65f6\u95f4\n\n\u8bbe\u4e00\u4e2a\u9884\u671f\u505c\u6b62\u7684\u8f6e\u7f16\u53f7 `ans`\uff08\u5728\u7b2c `ans` \u8f6e\uff0c\u8be5\u8f6e\u4e3b\u5bfc\u7684\u86c7\u4e0d\u4f1a\u9009\u62e9\u5403\uff0c\u51b3\u6597\u7ed3\u675f\uff09\uff1b\u63a5\u7740\u4ece\u540e\u5f80\u524d\u626b\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u8f6e\u505a\u9009\u62e9\u7684\u86c7\u7684\u6b7b\u4ea1\u65f6\u95f4\u5728\u9884\u671f\u7684\u51b3\u6597\u7ed3\u675f\u65f6\u95f4\u5185\uff0c\u90a3\u4e48\u5c31\u5c06\u9884\u671f\u51b3\u6597\u7ed3\u675f\u65f6\u95f4\u8bbe\u4e3a\u8be5\u8f6e\n\n\u5176\u4e2d\u4ece\u540e\u5f80\u524d\u626b\u662f\u56e0\u4e3a\u524d\u9762\u7684\u86c7\u7684\u51b3\u7b56\u4e5f\u53d6\u51b3\u4e8e\u540e\u9762\u7684\u86c7\u7684\u51b3\u7b56\uff1b\u5373\u4f7f\u524d\u9762\u7684\u86c7\u9009\u62e9\u7ee7\u7eed\u51b3\u6597\u4f1a\u5bfc\u81f4\u81ea\u5df1\u5728\u540e\u9762\u67d0\u8f6e\u4f5c\u4e3a\u5f31\u86c7\uff0c\u53ea\u8981\u4e0d\u4f1a\u88ab\u5403\u6389\uff0c\u90a3\u4e48\u524d\u9762\u7684\u86c7\u4ecd\u4f1a\u9009\u62e9\u7ee7\u7eed\u51b3\u6597\n\n\uff08\u7136\u800c\u5230\u73b0\u5728\u4e3a\u6b62\u6839\u672c\u6ca1\u5230\u96be\u70b9...\\fad\uff09\n\n\u53ef\u4ee5\u53d1\u73b0\u8be5\u7b97\u6cd5\u7684\u74f6\u9888\u5728\u4e8e\u524d\u9762\u7684\u6a21\u62df\uff1b\u6bd4\u8f83 naive \u5730\u7528 `set` \u7ef4\u62a4\u662f $\\Theta(Tn\\log n)$ \u7684\n\n### Part1\n\n\u8003\u8651\u7528\u300cNOIP2016\u300d\u86af\u8693 \u7684\u65b9\u5f0f\u7ef4\u62a4\u4e24\u4e2a \u201c\u5355\u8c03\u961f\u5217\u201d\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8bbe $\\texttt{Q}_1, \\texttt{Q}_2$\uff0c\u521d\u59cb $\\texttt{Q}_1$ \u4e2d\u4ece\u5927\u5230\u5c0f\u987a\u5e8f\u5b58\u653e\u7740\u6240\u6709\u7684\u5143\u7d20\u3002\u6bcf\u6b21\u6211\u4eec\u4ece\u4e24\u4e2a\u961f\u5217\u5934\u90e8\u53d6\u51fa\u5143\u7d20\uff0c\u6bd4\u8f83\u5f97\u5230\u6700\u5927\u503c \uff1b\u4ece\u4e24\u4e2a\u961f\u5217\u5c3e\u90e8\u53d6\u51fa\u5143\u7d20\uff0c\u6bd4\u8f83\u5f97\u5230\u6700\u5c0f\u503c\uff1b\u6700\u540e\u518d\u5c06\u65b0\u7684\u5143\u7d20\u63d2\u5165 $\\texttt{Q}_2$ \u7684\u961f\u5c3e\u3002\u6211\u4eec\u671f\u671b $\\texttt{Q}_2$ \u4e2d\u7684\u5143\u7d20\u4e5f\u59cb\u7ec8\u662f\u6ee1\u8db3\u5355\u8c03\u9012\u51cf\u7684\n\n\u8bbe\u7b2c $i$ \u6b21\u5f97\u5230\u7684\u6700\u5927\u503c $x_i$ \u548c\u6700\u5c0f\u503c $y_i$\uff0c\u4ee5\u53ca\u8be5\u6b21\u5c06\u5f97\u5230\u7684\u65b0\u5143\u7d20\u503c $u_i=x_i-y_i$\n\n\u5982\u679c\u4fdd\u8bc1 $2y_i\\leq x_i$\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8bc1\u660e $u_i$ \u53ca\u5176\u7f16\u53f7\u662f\u9012\u51cf\u7684\u3002\u5bf9\u4e8e\u503c\uff0c\u9996\u5148\u53d1\u73b0\u603b\u662f\u6709 $x_i\\geq x_{i+1}$\uff1b\u518d\u7531 $y_i\\leq x_i-y_i=u_i$\uff0c\u53ef\u4ee5\u5f97\u5230 $y_i\\leq y_{i+1}$\uff1b\u56e0\u6b64\u603b\u6709 $u_i\\geq u_{i+1}$\u3002\u5bf9\u4e8e\u7f16\u53f7\uff0c\u7531\u4e8e\u6709 $x_i\\geq x_{i+1}, y_i\\leq y_{i+1}$\uff0c\u4e8e\u662f\u80fd\u5f97\u5230 $u_i=x_i-y_i=x_{i+1}-y_{i+1}=u_{i+1}$ \u5f53\u4e14\u4ec5\u5f53 $x_i=x_{i+1}$ \u4e14 $y_i=y_{i+1}$\uff1b\u53d1\u73b0 $u_{i+1}$ \u7684\u7f16\u53f7\u6765\u81ea $x_{i+1}$\uff0c\u56e0\u6b64\u603b\u6709 $u_i=u_{i+1}$ \u65f6\u7f16\u53f7\u9012\u51cf\n\n### Part2\n\n\u63a5\u4e0b\u6765\u8003\u8651\u7b2c\u4e00\u6b21\u6ee1\u8db3 $2y_i>x_i$ \u540e\u4f1a\u53d1\u751f\u4ec0\u4e48\n\n\u4e0d\u59a8\u5c06 $\\texttt{Q}_1$ \u4e0e $\\texttt{Q}_2$ \u7684\u5143\u7d20 \u201c\u5408\u5e76\u201d\uff0c\u91cd\u65b0\u5f97\u5230\u4e00\u4e2a\u5347\u5e8f\u6392\u5217\u7684\u5e8f\u5217 $\\{a_n\\}$\uff1b\u90a3\u4e48\u6211\u4eec\u5c31\u6709 $2a_1>a_n$\u3002\u5e76\u4e14\u6211\u4eec\u91cd\u65b0\u5bf9\u64cd\u4f5c\u8ba1\u6570\n\n1. \u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u63a8\u51fa\u7684**\u6570\u503c**\u4e3a $a_1, a_n$\uff0c\u63a8\u5165\u7684**\u6570\u503c**\u4e3a $a_n-a_1<a_i$\uff08\u7531 $2a_1>a_n$ \u5f97\u5230\uff09\n2. \u7b2c\u4e8c\u6b21\u64cd\u4f5c\uff0c\u63a8\u51fa\u7684\u6570\u503c\u4e3a $a_n-a_1, a_{n-1}$\uff0c\u63a8\u5165\u7684\u6570\u503c\u4e3a $a_{n-1}-a_n+a_1\\leq 0+a_1$\n3. \u7b2c\u4e09\u6b21\u64cd\u4f5c\uff0c\u63a8\u51fa\u7684\u6570\u503c\u4e3a $a_{n-1}-a_n+a_1, a_{n-2}$\uff0c\u63a8\u5165\u7684\u6570\u503c\u4e3a $a_{n-2}-(a_{n-1}-a_n+a_1)=(a_{n-2}-a_{n-1})+(a_n-a_1)\\leq 0+(a_n-a_1)<a_1$\n4. ...\n\n\u7528\u5f52\u7eb3\u6cd5\u4e0d\u96be\u5f97\u51fa\uff1a\u7b2c\u5947\u6570\u6b21\u64cd\u4f5c\u63a8\u5165\u7684\u6570\u503c $u_j$ \u603b\u6709 $u_j<a_1$\uff1b\u7b2c\u5076\u6570\u6b21\u64cd\u4f5c\u63a8\u5165\u7684\u6570\u503c $u_k$ \u603b\u6709 $u_k\\leq a_1$\n\n### Part3\n\n\u5173\u952e\u5728\u4e8e\u5076\u6570\u6b21\u63a8\u5165\u7684\u6570\u503c\u4e0e $a_1$ **\u76f8\u7b49**\uff0c\u5e76\u4e14\u6211\u4eec\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u8be5\u6b21\u63a8\u5165\u7684\u5143\u7d20\u7684**\u7f16\u53f7**\u6ee1\u8db3\u4ec0\u4e48\u6027\u8d28\uff0c\u56e0\u6b64\u6b64\u65f6\u5f88\u6709\u53ef\u80fd\u4f1a\u7834\u574f $\\texttt{Q}_2$ \u7684\u5355\u8c03\u6027\u3002\u4f46\u5176\u5b9e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u7b2c\u4e00\u6b21 $\\texttt{Q}_2$ \u5355\u8c03\u6027\u88ab\u7834\u574f\u540e\uff0c\u51b3\u6597\u5b9e\u9645\u4e0a**\u5df2\u7ecf\u7ed3\u675f\u4e86**\n\n\u9996\u5148\u6b64\u65f6\u4e00\u5b9a\u5df2\u7ecf\u6ee1\u8db3 $2y_i>x_i$ \u81f3\u5c11\u4e24\u8f6e\uff1b\u4e0d\u59a8\u8bbe\u6b64\u65f6\u662f\u7b2c $k$ \u8f6e\uff0c\u4e14\u5e94\u5f53\u662f\uff08\u4e0a\u8ff0\u7684\uff09\u7b2c\u5076\u6570\u6b21\u64cd\u4f5c\n\n\u82e5\u7b2c $k$ \u8f6e\u7684\u86c7 $A$ \u9009\u62e9\u5403\uff0c\u90a3\u4e48\u7531\u4e8e\u5355\u8c03\u6027\u88ab\u7834\u574f\uff0c\u4e0b\u4e00\u8f6e\u7684\u5f31\u86c7\u4e0d\u4f1a\u662f $A$\u3002\u82e5\u60f3\u8981 $A$ \u88ab\u5403\u6389\uff0c\u90a3\u4e48\u81f3\u5c11\u7b2c $k+1$ \u8f6e\u7684\u86c7\u548c\u7b2c $k+2$ \u8f6e\u7684\u86c7\u90fd\u8981\u9009\u62e9\u5403\uff0c$A$ \u624d\u6709\u53ef\u80fd\u5728\u7b2c $k+3$ \u8f6e\u6210\u4e3a\u5f31\u86c7\uff1b\u4f46\u53d1\u73b0\u8fd9\u610f\u5473\u7740\u7b2c $k+1$ \u8f6e\u7684\u86c7\u5fc5\u987b\u8981\u88ab\u5403\u6389\uff08\u5947\u6570\u6b21\u64cd\u4f5c $u_j<a_1$\uff09\uff0c\u51b3\u6597\u5728\u7b2c $k+1$ \u8f6e\u5c31\u4f1a\u505c\u6b62\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c$A$ \u82e5\u9009\u62e9\u5403\uff0c\u5b83\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5403\u6389\uff1b\u56e0\u6b64 $A$ \u4e00\u5b9a\u4f1a\u9009\u62e9\u5403\n\n\u8fd9\u65f6\u518d\u56de\u6765\u770b\u7b2c $k-1$ \u8f6e\u505a\u51b3\u7b56\u7684\u86c7\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u5c31\u662f\u5728\u7b2c $k$ \u8f6e\u4f1a\u88ab\u5403\u6389\u7684\u86c7\u3002\u6240\u4ee5\u7b2c $k-1$ \u8f6e\u7684\u86c7\u4e0d\u4f1a\u9009\u62e9\u5403\uff0c**\u51b3\u6597\u81f3\u5c11\u5728 $k-1$ \u8f6e\u5c31\u7ed3\u675f\u4e86**\n\n\u4e8e\u662f\u8fd9\u65f6\u6211\u4eec\u76f4\u63a5\u505c\u6b62\u6a21\u62df\uff0c\u4ece $k-2$ \u8f6e\u5f80\u56de\u626b\u5373\u53ef\uff08$k-1$ \u8f6e\u51b3\u6597\u7ed3\u675f\uff0c\u6ca1\u6709\u86c7\u6b7b\u4ea1\uff0c\u4e0d\u7528\u7ba1\uff09\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int MAXN =1e6+20;\n\n/*------------------------------IO------------------------------*/\n\nint read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x =(x<<1)+(x<<3)+(48^c), c =getchar();\n\treturn x;\n}\n\nvoid write(const int &x){\n\tif(x/10)\n\t\twrite(x/10);\n\tputchar('0'+x%10);\n}\n\n/*------------------------------Main------------------------------*/\n\nint q1[MAXN], h1, t1,\n\tq2[MAXN], h2, t2;\nint a[MAXN], a_backup[MAXN];\n\ninline int get_max(const int &id_1, const int &id_2){\n\tif(id_1 == 0 || id_2 == 0)\n\t\treturn (id_1 == 0) ? id_2 : id_1;\n\tif(a[id_1] == a[id_2])\n\t\treturn (id_1 > id_2) ? id_1 : id_2;\n\telse\n\t\treturn (a[id_1] > a[id_2]) ? id_1 : id_2;\n}\n\ninline int get_min(const int &id_1, const int &id_2){\n\tif(id_1 == 0 || id_2 == 0)\n\t\treturn (id_1 == 0) ? id_2 : id_1;\n\tif(a[id_1] == a[id_2])\n\t\treturn (id_1 < id_2) ? id_1 : id_2;\n\telse\n\t\treturn (a[id_1] < a[id_2]) ? id_1 : id_2;\n}\n\nint master[MAXN]/*\u6bcf\u8f6e\u505a\u51b3\u7b56\u7684\u86c7*/,\n\tt_die[MAXN]/*\u6bcf\u6761\u86c7\u7684\u6b7b\u4ea1\u65f6\u95f4*/;\n\nint main(){\n//\tfreopen(\"snakes.in\", \"r\", stdin);\n//\tfreopen(\"snakes.out\", \"w\", stdout);\n\tint n;\n\tfor(int t =0, T =read(); t < T; ++t){\n\t\tif(t == 0){\n\t\t\tn =read();\n\t\t\tfor(int i =1; i <= n; ++i)\n\t\t\t\ta[i] =read();\n\t\t}\n\t\telse{\n\t\t\tfor(int i =0, k =read(); i < k; ++i){\n\t\t\t\tint x =read(), y =read();\n\t\t\t\ta[x] =y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tmemcpy(a_backup+1, a+1, n*sizeof(int));\n\t\tfor(int i =1; i <= n; ++i)\n\t\t\tq1[n-i+1] =i;\n\t\th1 =1, t1 =n+1;\n\t\th2 =1, t2 =1, q2[h2] =0, q2[t2-1] =0;\n\t\tmemset(t_die, 0x3f, sizeof(t_die));\n\t\t\n\t\tint ans =0;/*\u7b2c\u51e0\u8f6e\u505c\u4e0b\uff0c\u4ece 0 \u5f00\u59cb\u8ba1\u6570*/\n\t\tfor(int i =0; i < n-1; ++i){\n\t\t\tint mxi =get_max(q1[h1], q2[h2]),\n\t\t\t\tmni =get_min(q1[t1-1], q2[t2-1]);\n\t\t\tif(mxi == q1[h1])\n\t\t\t\tq1[h1] =0, ++h1;\n\t\t\telse\n\t\t\t\tq2[h2] =0, ++h2;\n\t\t\tif(mni == q1[t1-1])\n\t\t\t\t--t1, q1[t1] =0;\n\t\t\telse\n\t\t\t\t--t2, q2[t2] =0;\n\t\t\tmaster[i] =mxi;\n\t\t\tt_die[mni] =i;\n\t\t\ta[mxi] -=a[mni];\n\t\t\tif(i == n-2){\n\t\t\t\tans =i+1;\n\t\t\t\t/*\u6700\u540e\u4e00\u8f6e\u7684\u86c7 = \u5012\u6570\u7b2c\u4e8c\u8f6e\u7684\u86c7 \u4e0d\u7528\u8003\u8651\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u6b7b*/\n\t\t\t\tfor(int k =i-1; k >= 0; --k)\n\t\t\t\t\tif(ans > t_die[master[k]])\n\t\t\t\t\t\tans =k;\n\t\t\t}// \u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u53d1\u73b0\u51b3\u7b56\u5df2\u7ecf\u7ed3\u675f -V //\n\t\t\telse if(t2 > h2 && get_min(q2[t2-1], mxi) != mxi){\n\t\t\t\tans =i-1;\n\t\t\t\t/*\u5728 i-1 \u8f6e\uff0c\u90a3\u6761\u86c7\u5c31\u4f1a\u505c\u4e0b\u6765\uff0c\u5426\u5219\u5b83\u5c31\u4f1a\u88ab\u5403\u6389*/\n\t\t\t\tfor(int k =i-2; k >= 0; --k)\n\t\t\t\t\tif(ans > t_die[master[k]])\n\t\t\t\t\t\tans =k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t\tq2[t2++] =mxi;\n\t\t}\n\t\t\n\t\twrite(n-ans), putchar('\\n');\n\t\t\n\t\tmemcpy(a+1, a_backup+1, n*sizeof(int));\n\t}\n}\n```",
        "postTime": 1604922734,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\u3011"
    },
    {
        "content": "[my blog](https://qaq-am.com/CSPS-2020-%E8%B4%AA%E5%90%83%E8%9B%87/)\r\n\r\n### \u9898\u89e3\r\n\u8003\u8651\u4e00\u6761\u86c7\u4ec0\u4e48\u65f6\u5019\u4f1a\u53eb\u505c\u3002\r\n\r\n\u5982\u679c\u5b83\u5403\u4e86\u4e4b\u540e\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u5403\u4e86\u4e4b\u540e\u4e00\u5b9a\u6bd4\u5b83\u5c0f(\u6307\u4ee5id\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u540e)\uff0c\u6b7b\u7684\u4e00\u5b9a\u6bd4\u5b83\u65e9\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u5403\uff0c\u7136\u540e\u628a\u95ee\u9898\u4ea4\u7ed9\u4e0b\u4e00\u6761\u86c7\u5373\u53ef\u3002\r\n\r\n\u5982\u679c\u5403\u4e86\u4e4b\u540e\u662f\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u6709\u53ef\u80fd\u5403\u5b83\uff0c\u90a3\u4e48\u5b83\u5403\u4e0d\u5403\u5c31\u548c\u4e0b\u4e00\u6761\u5403\u4e0d\u5403\u76f8\u5173\uff0c\u4e5f\u5c31\u662f\u548c\u5230\u4e4b\u540e\u7b2c\u4e00\u6b21\u5403\u4e86\u4e0d\u662f\u6700\u5c0f\u7684 \u7684\u8ddd\u79bb\u5947\u5076\u6027\u76f8\u5173\u4e86\u3002\r\n\r\n\u524d\u9762\u4e00\u90e8\u5206\u663e\u7136\u6ee1\u8db3\u540e\u4e00\u4e2a\u5403\u4e86\u4e4b\u540e\u6bd4\u5b83\u5c0f\u3002\u540e\u9762(\u9664\u4e86\u6700\u540e\u4e00\u6b21)\u4e5f\u6ee1\u8db3\u5403\u4e86\u4e4b\u540e\u4f1a\u53d8\u6210\u6700\u5c0f\u7684\u3002\r\n\r\n\u90a3\u4e48\u518d\u7528\u4e00\u4e2a\u961f\u5217\uff0c\u7528\u7c7b\u4f3c\u300cnoip2016 \u86af\u8693\u300d\u7684\u65b9\u6cd5\u7ef4\u62a4\u5373\u53ef\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$ \uff0c\u5e76\u4e14\u5728 $a_i$ \u4e0d\u6ee1\u8db3\u4e0d\u964d\u7684\u60c5\u51b5\u4e0b\u5e94\u8be5\u4e5f\u662f\u5bf9\u7684\u3002\r\n\r\n\u7136\u800c\u6211\u52a0\u4e86\u4e2a\u9519\u8bef\u7684assert\uff0c\u7136\u540e\u5c31\u6302\u4e86\u3002\r\n\r\n### \u4ee3\u7801\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef pair<int,int> pii;\r\n#define x first\r\n#define y second\r\nint n;\r\nint a[1000005];\r\nnamespace run{\r\n\tpii w1[1000005],w2[1000005];\r\n\tpii *l1,*r1,*l2,*r2;\r\n\tconst pii inf(0x3f3f3f3f,0x3f3f3f3f),ind(-0x3f3f3f3f,-0x3f3f3f3f);\r\n\tpii mx1(){return l1<=r1?*l1:ind;}\r\n\tpii mn1(){return l1<=r1?*r1:inf;}\r\n\tpii mx2(){return l2<=r2?*l2:ind;}\r\n\tpii mn2(){return l2<=r2?*r2:inf;}\r\n\tint cnt,cur;\r\n\tbool add0(){\r\n\t\tif(~cur){cur^=1;}\r\n\t\telse{cur=0;}\r\n\t\treturn 0;\r\n\t}\r\n\tbool add1(){\r\n\t\tif(~cur){cnt+=cur;return 1;}\r\n\t\t++cnt;return 0;\r\n\t}\r\n\tvoid solve(){\r\n\t\tl2=w2+1;r2=w2;\r\n\t\tl1=w1+1;r1=w1+n;\r\n\t\tfor(int i=1;i<=n;++i){\r\n\t\t\tw1[n+1-i].x=a[i];w1[n+1-i].y=i;\t\r\n\t\t}\r\n\t\tcnt=0;cur=-1;\r\n\t\tint s=n;\r\n\t\twhile(s>1){\r\n\t\t\tpii mx,mn;\r\n\t\t\tif(mx1()>mx2()){mx=mx1();++l1;}\r\n\t\t\telse{mx=mx2();++l2;}\r\n\t\t\tif(mn1()<mn2()){mn=mn1();--r1;}\r\n\t\t\telse{mn=mn2();--r2;}\r\n\t\t\tmx.x-=mn.x;\r\n\t\t\t--s;\r\n\t\t\t//assert(mx<mn2()); \u8fd9\u91cc\u663e\u7136\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u4ece\u6700\u5c0f\u53d8\u6210\u4e0d\u662f\u6700\u5c0f\u7684\u65f6\u5019\u4e0d\u4e00\u5b9a\u6bd4\u7b2c\u4e8c\u5c0f\u5c0f\u3002\r\n\t\t\tif(s>1 && mx<min(mn1(),mn2())){\r\n\t\t\t\tif(add0())return;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(add1())return;\r\n\t\t\t}\r\n\t\t\t*(++r2)=mx;\r\n/*\t\t\tif(add0())return;\r\n\t\t\tif(add1())return;*/\r\n\t\t}\r\n\t}\r\n\tbool main(){\r\n\t\tsolve();\r\n\t\tprintf(\"%d\\n\",n-cnt);\r\n\t\treturn 0;\r\n\t}\r\n}\r\nint main(){\r\n\tfreopen(\"snakes.in\",\"r\",stdin);\r\n\tfreopen(\"snakes.out\",\"w\",stdout);\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\tfor(int id=1;id<=t;++id){\r\n\t\tif(id==1){\r\n\t\t\tscanf(\"%d\",&n);\r\n\t\t\tfor(int i=1;i<=n;++i)scanf(\"%d\",a+i);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tint k,x;\r\n\t\t\tscanf(\"%d\",&k);\r\n\t\t\tfor(;k;--k){\r\n\t\t\t\tscanf(\"%d\",&x);\t\r\n\t\t\t\tscanf(\"%d\",a+x);\r\n\t\t\t}\r\n\t\t}\r\n\t\trun::main();\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\n\r\n",
        "postTime": 1604821450,
        "uid": 8943,
        "name": "\u8001K",
        "ccfLevel": 0,
        "title": "CSP-S 2020 \u8d2a\u5403\u86c7 \u9898\u89e3"
    },
    {
        "content": "\u5c31\u79bb\u8c31\u300270 \u5982\u6b64\u597d\u6253\u8003\u573a\u4e0a\u9762\u6ca1\u6562\u5b9e\u73b0\u3002\n\n\u9996\u5148\u6709\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4e00\u6761\u86c7\u505a\u51fa\u4e86\u9009\u62e9\uff08\u65e0\u8bba\u5403\u4e0e\u4e0d\u5403\uff09\u5e76\u4e14\u4e0d\u4f1a\u6210\u4e3a\u6700\u5c0f\u7684\u4e00\u6761\u86c7\uff0c\u8fd9\u6761\u86c7\u4ee5\u540e\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5403\u4e86\u3002\n\n\u8003\u8651\u5230\u8fd9\u4e2a\u95ee\u9898\u662f\u5177\u6709\u4e25\u683c\u504f\u5e8f\u6027\u8d28\u7684\u3002\u5047\u8bbe\u5f53\u524d\u6392\u51fa\u6765\u7684\u86c7\u7684\u5e8f\u5217\u4e3a $a_1,a_2, \\cdots ,a_n$\uff0c\u5e76\u4e14\u4fdd\u8bc1 $a$ \u5355\u8c03\u4e0d\u51cf\uff08\u56e0\u4e3a\u6709\u7f16\u53f7\uff09\u3002\n\n- \u4e0d\u5403\uff1a\u7ed3\u675f\u6e38\u620f\uff0c\u4e0d\u4f1a\u88ab\u5403\uff1b   \n- \u5403\uff1a\n  - \u5982\u679c\u4ecd\u7136\u662f\u6700\u5f3a\u7684\u86c7\uff0c\u80af\u5b9a\u4e0d\u4f1a\u88ab\u5403\uff1b   \n  - \u5982\u679c\u5f31\u4e86\uff0c\u663e\u7136 $a_n - a_1 > a_{n-1} - a_2$\uff0c\u6240\u4ee5\u8bf4\u5982\u679c\u4e0b\u4e00\u6761\u6700\u5927\u7684\u86c7\u8981\u5403\uff0c\u80af\u5b9a\u4e5f\u6bd4\u5f53\u524d\u8fd9\u4e2a\u6700\u5927\u7684\u86c7\u5403\u6389\u540e\u5c0f\uff0c\u4f1a\u5403\u3002\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u7528\u4e00\u4e2a\u5bb9\u5668\uff0c\u6bcf\u6b21\u627e\u5230\u6700\u5927\u6700\u5c0f\u7684\u86c7\uff0c\u76f8\u51cf\u6bd4\u8f83\u3002\u8003\u8651\u4ee5\u4e0b\u6309\u4ee5\u4e0b\u6d41\u7a0b\u8fdb\u884c\u7b97\u6cd5\u3002\n\n- \u627e\u5230\u5f53\u524d\u7684\u6700\u5c0f\u86c7 $x$\uff0c\u6b21\u5c0f\u86c7 $y$\uff0c\u6700\u5927\u86c7 $z$\uff1b   \n- \u5982\u679c $z-x > y$\uff0c\u5403\u6389\uff1b   \n- \u5426\u5219\uff0c\u6211\u4eec\u7684\u7b54\u6848\u5c31\u4e0e\u300c\u4e0b\u4e00\u53ea\u6700\u5927\u7684\u86c7\u662f\u5426\u4f1a\u5403\u300d\u6709\u5173\u3002\u518d\u5bf9\u8fd9\u4e2a\u5b50\u95ee\u9898\u8fdb\u884c\u51b3\u7b56\u5224\u65ad\u5373\u53ef\u3002\n\n\u5b9a\u4e49\u300c\u5192\u9669\u300d\u4e3a\u5f53\u524d\u7684\u6700\u5927\u86c7\u5403\u6389\u4e86\u6700\u5c0f\u86c7\u53d8\u6210\u4e86\u6700\u5c0f\u86c7\u3002\n\n\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u8ba1\u7b97\u7b54\u6848\u7684\u65b9\u6cd5\u5c31\u662f\u6bcf\u6b21\u9012\u5f52\u627e\u5f80\u4e0a\u4f20\u7b54\u6848\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u6211\u4eec\u77e5\u9053\u6709\u86c7\u5f00\u59cb\u300c\u5192\u9669\u300d\u7684\u65f6\u5019\uff0c\u8fd8\u6709\u591a\u5c11\u6761\u86c7\uff0c\u8bbe\u4e3a $p$\uff1b\u300c\u5192\u9669\u300d\u7684\u86c7\u6709\u591a\u5c11\uff0c\u8bbe\u4e3a $q$\u3002\u7b54\u6848\u5c31\u662f $p-(q \\bmod 2)$\u3002\n\n\u5bf9\u4e8e $p$ \u662f\u663e\u7136\u7684\uff0c\u5173\u952e\u662f $(q \\bmod 2)$ \u662f\u600e\u4e48\u6765\u7684\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u7528\u611f\u6027\u7406\u89e3\u3002\u5982\u679c\u8bf4\u6700\u540e\u4e00\u4e2a\u300c\u5192\u9669\u300d\u7684\u86c7\u300c\u5192\u9669\u300d\u4e4b\u540e\u6b7b\u4e0d\u6389\uff0c\u90a3\u4e48\u5012\u6570\u7b2c\u4e8c\u4e2a\u300c\u5192\u9669\u300d\u7684\u86c7\u5c31\u4e0d\u4f1a\u9009\u62e9\u53bb\u300c\u5192\u9669\u300d\u3002\u4f9d\u6b21\u5f80\u4e0a\u4f20\uff0c\u5c31\u6709\u4e86\u8fd9\u6837\u7684\u7b54\u6848\u3002\u4f46\u662f $O(Tn \\log n)$ \u7684\u4ee3\u7801\u6ca1\u90a3\u4e48\u5199\u3002\n\n\u652f\u6301\u52a8\u6001\u5220\u9664\u63d2\u5165\u67e5\u8be2\u6700\u5927\u6700\u5c0f\u6b21\u5c0f\u503c\uff0c\u53ef\u4ee5\u7528 `set` \u53bb\u7ef4\u62a4\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(Tn \\log n)$\u3002\n\n\u9644\u4e00\u4e2a luogu \u6c11\u95f4\u6570\u636e $75 \\sim 90$ \u7684\u4ee3\u7801\uff08\u4ee3\u7801\u5f88\u4e11\uff0c\u800c\u4e14\u6123\u662f\u6ca1\u5361\u8fc7\uff09\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<map>\n#include<set>\nusing namespace std;\nchar buf[1<<16],*p1=buf,*p2=buf;\n#define getchar() (p1==p2 && (p2=(p1=buf)+fread(buf,1,1<<16,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\n\t{\n\t\tif(c=='-')\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x*f;\n}\nvoid write(int x)\n{\n\tif(x<0)\tputchar('-'),x=-x;\n\tif(x>9)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nstruct Snake{\n\tint val,pos;\n\tSnake(int V=0,int P=0){val=V,pos=P;}\n\tbool operator < (Snake ano) const {return val<ano.val || (val==ano.val && pos<ano.pos);}\n\tSnake operator - (Snake ano) const {return Snake(val-ano.val,pos);}\n};\nset<Snake> S;\nint n,a[1000005],ans;\nbool dfs(bool flag)\n{\n\tif(int(S.size())==2)\treturn true;\n\tint del=0;\n\twhile(int(S.size())>=3)\n\t{\n\t\tset<Snake>::iterator it1=S.begin(),it2=S.begin(),it3=S.end();\n\t\t++it2,--it3;\n\t\tint tmp=int(S.size());\n\t\tSnake x=*it1,y=*it2,z=*it3,dec=z-x;\n\t\tS.erase(it3);\n\t\tS.erase(it1);\n\t\tS.insert(dec);\n\t\tif(dec<y)\n\t\t{\n\t\t\tif(!dfs(true))\n\t\t\t{\n\t\t\t\tans=tmp-1;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if(del)\n\t\t\t{\n\t\t\t\tans=tmp;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans=tmp;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t++del;\n\t\tif(del && flag)\treturn true;\n\t}\n\tans=1;\n\treturn true;\n}\nint main(){\n\tint T=read();\n\tn=read();\n\tlong long sum=0;\n\tfor(int i=1;i<=n;++i)\ta[i]=read(),sum+=a[i];\n\tsum-=a[n];\n\tif(n==3)\n\t{\n\t\tif(a[1]+a[2]<=a[3])\tputs(\"1\");\n\t\telse\tputs(\"3\");\n\t}\n\telse\n\t{\n\t\tif(sum<=a[n])\tputs(\"1\");\n\t\telse\n\t\t{\n\t\t\tfor(int i=1;i<=n;++i)\tS.insert(Snake(a[i],i));\n\t\t\tans=n;\n\t\t\tdfs(false);\n\t\t\twrite(ans);\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\t--T;\n\twhile(T-->0)\n\t{\n\t\tint k=read();\n\t\tfor(int i=1;i<=k;++i)\n\t\t{\n\t\t\tint pos=read(),val=read();\n\t\t\tsum-=a[pos];\n\t\t\ta[pos]=val;\n\t\t\tsum+=a[pos];\n\t\t}\n\t\tif(n==3)\n\t\t{\n\t\t\tif(a[1]+a[2]<=a[3])\tputs(\"1\");\n\t\t\telse\tputs(\"3\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(sum<=a[n])\n\t\t{\n\t\t\tputs(\"1\");\n\t\t\tcontinue;\n\t\t}\n\t\tS.clear();\n\t\tfor(int i=1;i<=n;++i)\tS.insert(Snake(a[i],i));\n\t\tans=n;\n\t\tdfs(false);\n\t\twrite(ans);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u4ed4\u7ec6\u56de\u987e\u4e00\u4e0b\u4e4b\u524d\u8bc1\u660e\u7684\u90a3\u4e2a\u7ed3\u8bba\u3002\u4e5f\u5c31\u662f $a_n - a_1 > a_{n-1} - a_2$\u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u4f1a\u4e0d\u4f1a\u6307\u5f15\u6211\u4eec\u53bb\u7528\u4e24\u4e2a\u961f\u5217\u5b58\u4e00\u4e0b\u539f\u6709\u86c7\u548c\u5403\u6389\u4e86\u5c0f\u86c7\u540e\u53d8\u6210\u7684\u86c7\uff08\u5206\u522b\u8bb0\u6210\u7b2c\u4e00\u4e2a\u961f\u5217\u548c\u7b2c\u4e8c\u4e2a\u961f\u5217\uff09\u5462\uff1f\n\n\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6709\u6548\u7684\uff0c\u5fc5\u987b\u6ee1\u8db3\u4e00\u4e0b\u56db\u79cd\u60c5\u51b5\uff1a\n\n- \u5982\u679c\u6700\u5927\u6700\u5c0f\u86c7\u90fd\u662f\u539f\u6709\u7684\uff0c\u90a3\u4e48\u65b0\u86c7\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u86c7\uff1b   \n- \u5982\u679c\u6700\u5927\u6700\u5c0f\u86c7\u90fd\u4e0d\u662f\u539f\u6709\u7684\uff0c\u90a3\u4e48\u65b0\u86c7\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u86c7\uff1b   \n- \u5982\u679c\u6700\u5927\u86c7\u662f\u539f\u6709\u7684\uff0c\u6700\u5c0f\u86c7\u4e0d\u662f\u539f\u6709\u7684\uff0c\u90a3\u4e48\u65b0\u86c7\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u86c7\uff1b   \n- \u5982\u679c\u6700\u5927\u86c7\u4e0d\u662f\u539f\u6709\u7684\uff0c\u6700\u5c0f\u86c7\u662f\u539f\u6709\u7684\uff0c\u90a3\u4e48\u65b0\u86c7\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u7684\u6700\u5c0f\u86c7\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\n\n\u56e0\u4e3a $a_n - a_1 > a_{n-1} - a_2$\uff0c\u5f52\u7eb3\u53ef\u8bc1\u660e\uff1b\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\n\n\u4e4d\u4e00\u770b\u662f\u4e0d\u7b26\u5408\u7684\uff0c\u5b9e\u9645\u4e0a\u300c\u4e0d\u662f\u539f\u6709\u7684\u300d\u548c\u300c\u5192\u9669\u300d\u662f\u7b49\u4ef7\u7684\u3002\u8fd9\u6837\u7684\u8bdd\u6700\u5c0f\u86c7\u80af\u5b9a\u4e0d\u4f1a\u5192\u9669\uff0c\u5b9e\u9645\u4e0a\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u5b58\u5728\u7684\u3002\n\n\u7b2c\u4e09\u79cd\u60c5\u51b5\uff1a\n\n\u540c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\n\n\u7b2c\u56db\u79cd\u60c5\u51b5\uff1a\n\n\u8003\u8651\u7528\u7b2c\u4e00\u79cd\u60c5\u51b5\u5f52\u7eb3\u4e0b\u6765\u7684\u7ed3\u8bba\uff0c\u53d1\u73b0\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u7684\u6761\u4ef6\u662f\u7b2c\u4e8c\u4e2a\u961f\u5217\u53ea\u6709\u4e00\u6761\u86c7\u800c\u4e14\u8fd9\u6761\u86c7\u662f\u6700\u5927\u86c7\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u663e\u7136\u662f\u6210\u7acb\u7684\u3002\n\n\u81f3\u6b64\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a\u53cc\u7aef\u961f\u5217/\u94fe\u8868\u53bb\u7ef4\u62a4\u4e24\u4e2a\u961f\u5217\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(Tn)$\uff0c\u5b9e\u9645\u64cd\u4f5c\u5e76\u6ca1\u6709\u4ec0\u4e48\u4e24\u6837\u3002\u968f\u4fbf\u6539\u4e00\u4e0b\u5e94\u8be5\u5c31\u80fd\u8fc7\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<map>\n#include<set>\nusing namespace std;\nchar buf[1<<16],*p1=buf,*p2=buf;\n#define getchar() (p1==p2 && (p2=(p1=buf)+fread(buf,1,1<<16,stdin),p1==p2)?EOF:*p1++)\nint read()\n{\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9')\n\t{\n\t\tif(c=='-')\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0' && c<='9')\tx=(x<<1)+(x<<3)+(c^'0'),c=getchar();\n\treturn x*f;\n}\nvoid write(int x)\n{\n\tif(x<0)\tputchar('-'),x=-x;\n\tif(x>9)\twrite(x/10);\n\tputchar(x%10+'0');\n}\nstruct Snake{\n\tint val,pos;\n\tSnake(int V=0,int P=0){val=V,pos=P;}\n\tbool operator < (Snake ano) const {return val<ano.val || (val==ano.val && pos<ano.pos);}\n\tSnake operator - (Snake ano) const {return Snake(val-ano.val,pos);}\n}q1[1000005],q2[1000005];\n//set<Snake> S;\nint n,a[1000005],ans,l1,r1,l2,r2;\nSnake Max()\n{\n\tif(l1>r1)\treturn q2[l2++];\n\tif(l2>r2)\treturn q1[r1--];\n\tif(q1[r1]<q2[l2])\treturn q2[l2++];\n\treturn q1[r1--];\n}\nSnake Min()\n{\n\tif(l1>r1)\treturn q2[r2--];\n\tif(l2>r2)\treturn q1[l1++];\n\tif(q1[l1]<q2[r2])\treturn q1[l1++];\n\treturn q2[r2--];\n}\nvoid dfs()\n{\n\tint risk=0,kill=0,dep=0;\n\twhile(1)\n\t{\n\t\t++kill;\n\t\tSnake x=Max(),z=Min(),y=min(l1<=r1?q1[l1]:Snake(100860010,n+1),l2<=r2?q2[r2]:Snake(1008610010,n+1)),dec=x-z;\n\t\tif(y<dec || kill==n-1)\n\t\t{\n\t\t\tif(risk)\n\t\t\t{\n\t\t\t\twrite(n-risk+(dep&1));\n\t\t\t\tputs(\"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(kill==n-1)\n\t\t\t{\n\t\t\t\tputs(\"1\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tq2[++r2]=dec;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t++dep;\n\t\t\tif(!risk)\trisk=kill;\n\t\t\tq2[++r2]=dec;\n\t\t}\n\t}\n}\nint main(){\n\tint T=read();\n\tn=read();\n\tlong long sum=0;\n\tfor(int i=1;i<=n;++i)\ta[i]=read(),sum+=a[i];\n\tsum-=a[n];\n\tif(n==3)\n\t{\n\t\tif(a[1]+a[2]<=a[3])\tputs(\"1\");\n\t\telse\tputs(\"3\");\n\t}\n\telse\n\t{\n\t\tif(sum<=a[n])\tputs(\"1\");\n\t\telse\n\t\t{\n\t\t\tl1=1,r1=n,l2=1,r2=0;\n\t\t\tfor(int i=1;i<=n;++i)\tq1[i]=Snake(a[i],i);\n\t\t\tans=n;\n\t\t\tdfs();\n\t\t}\n\t}\n\t--T;\n\twhile(T-->0)\n\t{\n\t\tint k=read();\n\t\tfor(int i=1;i<=k;++i)\n\t\t{\n\t\t\tint pos=read(),val=read();\n\t\t\tsum-=a[pos];\n\t\t\ta[pos]=val;\n\t\t\tsum+=a[pos];\n\t\t}\n\t\tif(n==3)\n\t\t{\n\t\t\tif(a[1]+a[2]<=a[3])\tputs(\"1\");\n\t\t\telse\tputs(\"3\");\n\t\t\tcontinue;\n\t\t}\n\t\tif(sum<=a[n])\n\t\t{\n\t\t\tputs(\"1\");\n\t\t\tcontinue;\n\t\t}\n\t\tl1=1,r1=n,l2=1,r2=0;\n\t\tfor(int i=1;i<=n;++i)\tq1[i]=Snake(a[i],i);\n\t\tans=n;\n\t\tdfs();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605244967,
        "uid": 184977,
        "name": "pomelo_nene",
        "ccfLevel": 9,
        "title": "CSP-S2020 T4 \u9898\u89e3"
    },
    {
        "content": "\u6bcf\u6761\u86c7\u90fd\u8db3\u591f\u806a\u660e\uff0c\u8fd9\u7c7b\u9898\u5728\u6570\u5b66\u4e2d\u662f\u5178\u578b\u7684\u64cd\u4f5c\u4e0e\u6e38\u620f\uff0c\u8fd9\u7c7b\u95ee\u9898\u4e00\u822c\u90fd\u662f\u627e\u5230\u6bcf\u4e2a\u4eba\u7684\u6b32\u671b\u548c\u6bcf\u4e2a\u4eba\u7684\u987e\u8651\uff0c\u7136\u540e\u6839\u636e\u77db\u76fe\u5012\u7740\u5411\u524d\u63a8\u524d\u9762\u5e94\u6709\u7684\u51b3\u7b56\uff0c\u4ee5\u8fbe\u5230\u5bf9\u6bcf\u4e2a\u4eba\u5229\u76ca\u6700\u5927\u5316\u7684\u535a\u5f08\u3002\u5f53\u7136\u8fd9\u4e2d\u95f4\u80af\u5b9a\u6709\u727a\u7272\uff0c\u8fd9\u5c31\u8bf4\u660e\u64cd\u4f5c\u535a\u5f08\u7684\u8fdb\u884c\u4e00\u5b9a\u662f\u6709\u5e8f\u7684\u3002\n\n\u8fd9\u9053\u9898\u5904\u5904\u7b26\u5408\u4ee5\u4e0a\u7279\u5f81\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u77e5\u9053\u86c7\u7684\u6b32\u671b\u548c\u987e\u8651\u3002\n\n\u6b32\u671b\u80af\u5b9a\u662f\u5c3d\u53ef\u80fd\u5403\u6389\u8f83\u591a\u7684\u86c7\uff0c\u987e\u8651\u5219\u662f\u7531\u4e8e\u4f53\u529b\u503c\u4f1a\u51cf\u5c0f\uff0c\u86c7\u8981\u786e\u4fdd\u81ea\u5df1\u4e0d\u4f1a\u88ab\u5403\u6389\u3002\n\n\u56e0\u4e3a\u6e38\u620f\u603b\u662f\u6700\u5f3a\u5e72\u6700\u5f31\uff0c\u9996\u5148\u8003\u8651\u5982\u679c\u4e00\u6761\u86c7\u5e72\u6389\u6700\u5f31\u7684\u86c7\u540e\u5e76\u4e0d\u662f\u6700\u5f31\u7684\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u5e72\u3002\u663e\u7136\uff0c\u7531\u4e8e\u4e0b\u4e00\u56de\u5408\u5b83\u4e0d\u662f\u6700\u5f31\uff0c\u6b21\u5f3a\u86c7\u4e0d\u4f1a\u5e72\u6389\u5b83\uff0c\u5e76\u4e14\u6b21\u5f3a\u86c7\u5982\u679c\u5e72\u6389\u4e86\u4e00\u6761\u86c7\uff0c\u90a3\u4e48\u6b21\u5f3a\u86c7\u5c31\u8981\u6bd4\u5b83\u8fd8\u8981\u5c0f\uff0c\u4f1a\u5728\u524d\u9762\u6321\u9505\u3002\u8fd9\u662f\u7531\u4e8e\u5b83\u672c\u6765\u5c31\u6bd4\u6b21\u5f3a\u86c7\u5f3a\uff0c\u5e76\u4e14\u5e72\u6389\u7684\u8fd8\u6bd4\u6b21\u5f3a\u86c7\u5e72\u6389\u7684\u5f31\u3002\n\n\u90a3\u4e48\u518d\u6b21\u8003\u8651\u5982\u679c\u6210\u4e86\u6700\u5f31\u86c7\uff0c\u5b83\u5c31\u8981\u987e\u8651\u540e\u4e00\u6761\u5f3a\u86c7\u4f1a\u4e0d\u4f1a\u5e72\u6389\u5b83\uff0c\u540c\u6837\u90a3\u6761\u540e\u9762\u7684\u5f3a\u86c7\u4e5f\u6709\u540c\u6837\u7684\u987e\u8651\u3002\u4e8e\u662f\u76f4\u5230\u4e00\u6761\u5e72\u5b8c\u4e4b\u540e\u5e76\u4e0d\u662f\u6700\u5c0f\u7684\u86c7\uff0c\u5b83\u4e00\u5b9a\u5e72\uff0c\u5b83\u524d\u4e00\u6761\u4e00\u5b9a\u4e0d\u5e72\uff0c\u90a3\u524d\u4e00\u6761\u7684\u524d\u4e00\u6761\u53c8\u4e0d\u5e72\u4e86\uff0c\u4f9d\u6b21\u7c7b\u63a8\u76f4\u5230\u5f53\u524d\u7684\u90a3\u6761\u86c7\u51b3\u5b9a\u5e72\u4e0d\u5e72\u3002\u5982\u679c\u53ef\u4ee5\u5e72\uff0c\u540e\u4e00\u6761\u5c31\u4e0d\u5e72\u4e86\uff0c\u6e38\u620f\u7ed3\u675f\u3002\u5982\u679c\u4e0d\u5e72\uff0c\u6e38\u620f\u76f4\u63a5\u7ed3\u675f\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e00\u65e6\u51fa\u73b0\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5c31\u4e00\u5b9a\u4f1a\u9012\u5f52\u5230\u8fb9\u754c\uff0c\u6e38\u620f\u4e00\u5b9a\u4f1a\u7ed3\u675f\u3002\u4ee5\u4e0a\u6a21\u62df\u7684\u64cd\u4f5c\u53ef\u4ee5\u5f00\u4e2a set\uff0c\u5361\u5361\u5e38\u5c31\u53ef\u4ee5\u3002\u6b63\u5e38\u7684\u590d\u6742\u5ea6\u662f\u4f7f\u7528\u53cc\u7aef\u961f\u5217\u3002\n\n\u9700\u8981\u6ce8\u610f\u7b2c\u4e8c\u79cd\u60c5\u51b5\u53ef\u80fd\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u53d1\u751f\uff0c\u5c31\u662f\u8bf4\u521a\u597d\u5269\u4e86\u4e24\u6761\u86c7\uff0c\u8fd9\u6837\u7b54\u6848\u5c31\u662f 1\u3002\n\ncode \u6709\u4e9b\u4e11\u3002\u3002\u3002\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000005\nusing namespace std;\nint T,a[N],b[N],n,k,q[N];\nnamespace AYX\n{\tinline void solve()\n\t{\tdeque<pair<int,int> > q1,q2;\n\t\tfor(int i=1;i<=n;++i)q1.push_back(make_pair(a[i],i));\n\t\twhile(1)\n\t\t{\tif(q1.size()+q2.size()==2){printf(\"1\\n\");return;}\n\t\t\tint minn=q1.front().first,maxn,id;q1.pop_front();\n\t\t\tif(q2.empty() or (!q1.empty() and q1.back().first>q2.back().first))maxn=q1.back().first,id=q1.back().second,q1.pop_back();\n\t\t\telse maxn=q2.back().first,id=q2.back().second,q2.pop_back();\n\t\t\tint now=maxn-minn;\n\t\t\tif(q1.empty() or now<q1.front().first)\n\t\t\t{\tint ans=q1.size()+q2.size()+2,cnt=0;\n\t\t\t\twhile(1)\n\t\t\t\t{\t++cnt;\n\t\t\t\t\tif(q1.size()+q2.size()==1){printf(\"%d\\n\",ans-(!(cnt&1)));return;}\n\t\t\t\t\tif(q1.empty() or (!q2.empty() and q1.back().first<=q2.back().first))maxn=q2.back().first,id=q2.back().second,q2.pop_back();\n\t\t\t\t\telse maxn=q1.back().first,id=q1.back().second,q1.pop_back();\n\t\t\t\t\tif((q1.empty() or maxn-now<q1.front().first or( maxn-now==q1.front().first and id<q1.front().second)) and (q2.empty() or maxn-now<q2.front().first or( maxn-now==q2.front().first and id<q2.front().second)))now=maxn-now;\n\t\t\t\t\telse\n\t\t\t\t\t{printf(\"%d\\n\",ans-(!(cnt&1)));return;}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\tq2.push_front(make_pair(now,id));\n\t\t}\n\t}\t\n\tinline short main()\n\t{\tscanf(\"%d\",&T);scanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;++i)scanf(\"%d\",&a[i]);\n\t\tsolve();--T;\n\t\twhile(T--)\n\t\t{\tscanf(\"%d\",&k);int id,val;\n\t\t\tfor(int i=1;i<=k;++i)scanf(\"%d%d\",&id,&val),a[id]=val;\n\t\t\tsolve();\n\t\t}\n\t\treturn 0;\t\n\t}\n}\nsigned main()\n{return AYX::main();}\n```\n",
        "postTime": 1628255674,
        "uid": 464886,
        "name": "hzoi_zxb",
        "ccfLevel": 0,
        "title": "P7078 [CSP-S2020] \u8d2a\u5403\u86c7"
    },
    {
        "content": "\u5ba3\u4f20\u535a\u5ba2->[link](https://blog.csdn.net/BWzhuzehao/article/details/110183444)\n\n\u8fd9\u9053\u9898\u6211\u8c03\u4e86\u597d\u4e45......\u7ec6\u8282\u975e\u5e38\u591a\u3002\n\n\u9996\u5148\uff0c\u770b\u5b8c\u9898\u76ee\u540e\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e00\u9053\u535a\u5f08\u95ee\u9898\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5047\u8bbe\u6700\u5f3a\u86c7\u4e3a $x$ \uff0c\u6700\u5f31\u86c7\u4e3a $y$ \uff0c\u90a3\u4e48\u8fd9\u91cc\u5c31\u6709\u4e24\u4e2a\u7ed3\u8bba\uff1a\n\n1. \u5982\u679c $x$ \u5403\u4e86 $y$ \u4e0d\u662f\u6700\u5f31\u7684\u86c7\uff0c\u5219 $x$ \u5fc5\u5403 $y$ \u3002\n    \u8bc1\u660e\uff1a\u5047\u8bbe\u5f53\u524d\u7b2c\u4e8c\u5f3a\u7684\u86c7\u4e3a $a$ \uff0c\u7b2c\u4e8c\u5f31\u7684\u86c7\u4e3a $b$ \uff0c\u90a3\u4e48 $x>a>b>y,x-y>b$ \uff0c\u90a3\u4e48\u5047\u8bbe $x$ \u5403\u4e86 $y$ \u4e4b\u540e\u53d8\u6210\u4e86 $z$ ,\u90a3\u4e48\u6b64\u65f6\u6709 $z>b$ (\u8fd9\u91cc $z$ \u548c $a$ \u7684\u5927\u5c0f\u4e0d\u80fd\u786e\u5b9a\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u6700\u5f3a\u86c7\u5403\u6389\u6700\u5f31\u86c7\u8fd8\u662f\u6700\u5f3a\u86c7) \uff0c\u5982\u679c $z>a$ \uff0c\u90a3\u4e48 $z$  \u8fd8\u662f\u6700\u5f3a\u86c7\uff0c\u6240\u4ee5 $x$ \u80af\u5b9a\u8981\u5403\u6389 $y$ \uff0c\u6bd5\u7adf\u5403\u5b8c\u540e\u9009\u62e9\u6743\u8fd8\u5728 $x$ \u624b\u4e0a\uff1b\u5982\u679c $a>z$ ,\u90a3\u4e48 $a>z=x-y>b$ \uff0c\u7531\u4e8e $x>a>b>y$ \uff0c\u5047\u8bbe $a$ \u5403\u4e86 $b$ \u4e4b\u540e\u53d8\u6210\u4e86 $c$ \uff0c\u90a3\u4e48\u6709 $z>c$ \u3002\u56e0\u6b64\uff0c\u5982\u679c $c$ \u4e0d\u6b7b\uff0c\u90a3\u4e48 $z$ \u4e0d\u4f1a\u6b7b\uff0c\u53ef\u4ee5\u653e\u5fc3\u5403\uff1b\u5426\u5219\uff0c$a$ \u4e3a\u4e86\u6d3b\u547d\uff0c\u4e0d\u80fd\u5403\u6389 $b$ \u53d8\u6210 $c$ \uff0c\u56e0\u6b64\u6b64\u65f6 $x$ \u4ecd\u7136\u53ef\u4ee5\u5403 $y$ \u3002\n    \u6240\u4ee5\u7efc\u4e0a\uff0c\u5982\u679c $x$ \u5403\u4e86 $y$ \u4e0d\u662f\u6700\u5f31\u7684\u86c7\uff0c\u5219 $x$ \u5fc5\u5403 $y$ \u3002\n2. \u5982\u679c $x$ \u5403\u4e86 $y$ \u4e4b\u540e\u53d8\u6210\u6700\u5f31\u7684\u86c7\u4e86\uff0c\u90a3\u4e48\u8981\u4e0d\u8981\u5403\u5462\uff1f\n    \u6b64\u65f6\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u770b $x$ \u7684\u9009\u62e9\u4e86\uff0c\u800c\u8981\u770b\u4e0b\u4e00\u6761\u86c7\u7684\u9009\u62e9\u3002\u6b64\u5904\u4ee4 $f$ \u4e3a\u7b2c\u4e8c\u5f3a\u7684\u86c7\uff0c$g$ \u4e3a\u7b2c\u4e09\u5f3a\u7684\u86c7\uff0c\u5982\u679c $x$ \u5403\u4e86 $y$ \u53d8\u6210 $z$ \uff0c\u90a3\u4e48 $z$ \u80fd\u4e0d\u80fd\u6d3b\u770b $f$ \u3002\u5982\u679c $f$ \u5403\u4e86 $z$ \uff0c\u90a3\u4e48 $x$ \u4e0d\u80fd\u5403 $y$ \uff1b\u5426\u5219\uff0c$f$ \u4e0d\u5403 $z$ \u90a3\u4e48 $x$ \u53ef\u4ee5\u5403 $y$\u3002\u90a3\u4e48 $f$ \u5403\u4e0d\u5403\u53c8\u662f\u770b\u8c01\u7684\u5462\uff1f\u5047\u8bbe $f$ \u5403\u6389\u6700\u5f31\u86c7\u4e0d\u662f\u6700\u5f31\u86c7\uff0c\u7531\u4e0a\u8ff0\u7ed3\u8bba $f$ \u53ef\u4ee5\u5403\u6700\u5f31\u86c7\uff1b\u5426\u5219\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u53d8\u6210\u4e86 \u201c\u5982\u679c $f$ \u5403\u4e86\u6700\u5f31\u86c7\u540e\u53d8\u6210\u4e86\u6700\u5f31\u86c7\uff0c\u90a3\u4e48\u8981\u4e0d\u8981\u5403\u5462\uff1f\u201d\u6b64\u65f6\uff0c\u6211\u4eec\u60ca\u559c\u7684\u53d1\u73b0\u8fd9\u4e2a\u95ee\u9898\u53d8\u6210\u4e86\u4e00\u4e2a **\u9012\u5f52\u95ee\u9898** \uff01\u90a3\u4e48 $f$ \u5403\u4e0d\u5403\u5b8c\u5168\u770b $g$ \u7684\u9009\u62e9\uff0c \u53ef\u4ee5\u63a8\u51fa\uff1a$g$ \u5403 $f$ \u4e0d\u5403 $x$ \u5403\uff0c$g$ \u4e0d\u5403 $f$ \u5403 $x$ \u4e0d\u5403\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u4e0d\u65ad\u9012\u5f52\u5c31\u597d\uff0c\u5047\u8bbe\u5f53\u524d\u7b2c $k$ \u5f3a\u7684\u86c7\u5403\uff0c\u90a3\u4e48 $k-1$ \u4e0d\u5403\uff0c$k-2$ \u5403\uff0c$k-3$ \u4e0d\u5403......\u76f4\u5230\u7b2c 1 \u5f3a\u7684\u86c7\u4e3a\u6b62\u3002\n\n\u56e0\u6b64\u601d\u8def\u5c31\u662f\uff1a\u5148\u8fd0\u884c\u7ed3\u8bba 1 \uff0c\u65e0\u6cd5\u8fd0\u884c\u65f6\u6839\u636e\u7ed3\u8bba 2 \u7684\u7ed3\u679c\u5224\u65ad\u662f\u5426\u8fd8\u80fd\u518d\u5403 1 \u6b21\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848\u3002\n\n\u800c\u7531\u4e8e\u539f\u5e8f\u5217\u5df2\u7ecf\u6709\u5e8f\uff0c\u56e0\u6b64\u8fd9\u9053\u9898\u6211\u4eec\u53ef\u4f7f\u7528\u4e24\u4e2a\u53cc\u7aef\u961f\u5217 $q1,q2$ \u7ef4\u62a4\u3002\u9996\u5148\u6240\u6709\u86c7\u5165\u961f $q1$ \uff0c\u8fd0\u884c\u7ed3\u8bba 1 \u65f6\u6240\u6709\u751f\u6210\u7684\u65b0\u86c7\u4ece\u5bf9\u5934\u5165\u961f $q2$ \uff0c\u6bcf\u4e00\u6b21\u53d6\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u5224\u65ad\u3002\u5f53\u6ca1\u529e\u6cd5\u518d\u8fd0\u884c\u7ed3\u8bba 1 \u65f6\uff0c\u8df3\u81f3\u7ed3\u8bba 2 \u9012\u5f52\u518d\u770b\u4e00\u6b21\u80fd\u5426\u518d\u5403 1 \u6761\u3002\u8fd9\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(Tn)$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=1e6+10;\nint t,n,a[MAXN],q1[MAXN][2],q2[MAXN][2],l1,l2,r1,r2,ans;//ans=\u88ab\u5403\u4e86\u51e0\u6761\u86c7\n//q1[i][0]=q2[i][0]=\u503c,q1[i][1]=q2[i][1]=\u7f16\u53f7\nstruct node\n{\n\tint flag,sum,id;\n};\n\nint read()\n{\n\tint sum=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') {sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n\treturn sum;\n}\n\nnode Get_Max()//\u53d6\u51fa\u6700\u5927\u503c\n{\n\tint sum=0,flag=1,id=0;\n\tif(l2<=r2)\n\t{\n\t\tif(q2[r2][0]>=sum) {sum=q2[r2][0];id=q2[r2][1];flag=2;}\n\t}\n\tif(l1<=r1)\n\t{\n\t\tif(q1[r1][0]>sum) {sum=q1[r1][0];id=q1[r1][1];flag=1;}\n\t\telse if(q1[r1][0]==sum&&q1[r1][1]>id) {sum=q1[r1][0];id=q1[r1][1];flag=1;}\n\t}\n\tif(flag==1) r1--;\n\telse r2--;\n\treturn (node){flag,sum,id};\n}\n\nnode Get_Min()//\u53d6\u51fa\u6700\u5c0f\u503c\n{\n\tint sum=0x7f7f7f7f,flag=1,id=0;\n\tif(l2<=r2)\n\t{\n\t\tif(q2[l2][0]<=sum) {sum=q2[l2][0];id=q2[l2][1];flag=2;}\n\t}\n\tif(l1<=r1)\n\t{\n\t\tif(q1[l1][0]<sum) {sum=q1[l1][0];id=q1[l1][1];flag=1;}\n\t\telse if(q1[l1][0]==sum&&q1[l1][1]<id) {sum=q1[l1][0];id=q1[l1][1];flag=1;}\n\t}\n\tif(flag==1) l1++;\n\telse l2++;\n\treturn (node){flag,sum,id};\n}\n\nvoid Solve1()//\u7ed3\u8bba 1\n{\n\twhile(1)\n\t{\n\t\tif(n-ans==1) return ;//\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\n\t\tnode x=Get_Max(),y=Get_Min();\n\t\tnode z=Get_Min();\n\t\tif(x.sum-y.sum>z.sum||(x.sum-y.sum==z.sum&&x.id>z.id))//\u80fd\u5403\n\t\t{\n\t\t\tans++;\n\t\t\tq2[--l2][0]=x.sum-y.sum;q2[l2][1]=x.id;\n\t\t\tif(l1<=r1&&(z.sum<q1[l1][0]||(z.sum==q1[l1][0]&&z.id<q1[l1][1]))) {q1[--l1][0]=z.sum;q1[l1][1]=z.id;}\n\t\t\telse {q2[--l2][0]=z.sum;q2[l2][1]=z.id;}\n\t\t\tcontinue;\n\t\t}\n\t\telse//\u4e0d\u80fd\u5403 \n\t\t{\n\t\t\tif(x.flag==1) {q1[++r1][0]=x.sum;q1[r1][1]=x.id;}else {q2[++r2][0]=x.sum;q2[r2][1]=x.id;}\n\t\t\tif(z.flag==1) {q1[--l1][0]=z.sum;q1[l1][1]=z.id;}else {q2[--l2][0]=z.sum;q2[l2][1]=z.id;}\n\t\t\tif(y.flag==1) {q1[--l1][0]=y.sum;q1[l1][1]=y.id;}else {q2[--l2][0]=y.sum;q2[l2][1]=y.id;}//\u585e\u56de\u961f\u5217\u91cc\u9762 \n\t\t\treturn ;\n\t\t}\n\t}\n}\n\nbool Slove2(int last)//\u7ed3\u8bba 2\n{\n\tif(last==0) return 0;\n\tif(last==1) return 0;\n\tif(last==2) return 1;//\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\n\tnode x=Get_Max();node y=Get_Min();node z=Get_Min();\n\tif(x.sum-y.sum>z.sum||(x.sum-y.sum==z.sum&&x.id>z.id)) return 1;//\u7ed3\u8bba 1\n\telse\n\t{ \n\t\tif(l1<=r1&&(z.sum<q1[l1][0]||(z.sum==q1[l1][1]&&q1[l1][1]>z.id))) {q1[--l1][0]=z.sum;q1[l1][1]=z.id;}\n\t\telse {q2[--l2][0]=z.sum;q2[l2][1]=z.id;}\n\t\tif(l1<=r1&&(x.sum-y.sum<q1[l1][0]||(x.sum-y.sum==q1[l1][0]&&q1[l1][1]>x.id))) {q1[--l1][0]=x.sum-y.sum;q1[l1][1]=x.id;}\n\t\telse {q2[--l2][0]=x.sum-y.sum;q2[l2][1]=x.id;}\n\t\treturn !Slove2(last-1);//\u9012\u5f52\u5b9e\u73b0 \n\t}\n}\n\nint main()\n{\n\tt=read();\n\tbool flag=0;\n\twhile(t--)\n\t{\n\t\tans=0;//\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\n\t\tmemset(q1,0,sizeof(q1));\n\t\tmemset(q2,0,sizeof(q2));\n\t\tif(!flag)\n\t\t{\n\t\t\tn=read();flag=1;\n\t\t\tfor(int i=1;i<=n;i++) a[i]=read();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint k=read();\n\t\t\tfor(int i=1;i<=k;i++)\n\t\t\t{\n\t\t\t\tint x,y;x=read();y=read();a[x]=y;\n\t\t\t}\n\t\t}\n\t\tl1=1;r1=0;l2=n+1;r2=n;\n\t\tfor(int i=1;i<=n;i++) q1[++r1][0]=a[i];\n\t\tfor(int i=1;i<=n;i++) q1[i][1]=i;\n\t\tSolve1();\n\t\tif(Slove2(n-ans)) ans++;//\u6839\u636e\u7ed3\u8bba 2 \u770b\u770b\u80fd\u4e0d\u80fd\u518d\u5403\u4e00\u6761 \n\t\tcout<<n-ans<<\"\\n\";//\u8f93\u51fa\u5b58\u6d3b\u86c7\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1606367615,
        "uid": 134000,
        "name": "Plozia",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\u3011"
    },
    {
        "content": "\u53c2\u8003 @OMG_wc \u7684\u9898\u89e3\uff0c\u8868\u793a\u90a3\u4f4d\u5927\u4f6c\u5199\u5f97\u5f88\u6e05\u695a\uff0c\u8ba9\u6211\u53d7\u76ca\u5f88\u591a\u3002\n\n\u8fd9\u662f\u4e00\u9053\u51fa\u5728CSP-S\u91cc\u5f88\u5408\u9002\u7684\u9898\u76ee\u3002\n\n\u9996\u5148\uff0c\u9898\u9762\u7b80\u77ed\uff0c\u662f\u9053\u601d\u7ef4\u597d\u9898\u3002\u6211\u4eec\u4ed4\u7ec6\u60f3\u60f3\uff0c\u53ef\u4ee5\u5148\u63a8\u51fa\u51e0\u4e2a\u7b80\u5355\u4f46\u6b63\u786e\u7684\u6027\u8d28\u3002\n\n\u8fd9\u662f\u672c\u9053\u9898\u7684\u7b2c\u4e00\u9636\u6bb5\u3002\n\n1. \u5982\u679c\u5f53\u524d\u6700\u5f3a\u86c7\u5403\u4e86\u6700\u5f31\u86c7\u540e\uff0c\u4e0d\u662f\u6700\u5f31\uff0c\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u5403\u3002(\u7b80\u8981\u8bc1\u660e\uff1a\u56e0\u4e3a\u5403\u540e\u4e0d\u662f\u6700\u5f31\uff0c\u6240\u4ee5\u5982\u679c\u539f\u5148\u6b21\u5f3a\u86c7\u9009\u62e9\u5403\uff0c\u90a3\u4e48\u4ed6\u4f1a\u6210\u4e3a\u6bd4\u539f\u5148\u6700\u5f3a\u86c7\u6d88\u5f31\u540e\u66f4\u5f31\u7684\u86c7\u3002\u56e0\u4e3a\u6bcf\u4e00\u6761\u86c7\u90fd\u4f1a\u9009\u62e9\u6700\u4f18\u7b56\u7565\uff0c\u90fd\u4e0d\u60f3\u88ab\u5403\uff0c\u90a3\u4e48\u5982\u679c\u539f\u5148\u6b21\u5f3a\u86c7\u9009\u62e9\u5403\uff0c\u5c31\u80fd\u4fdd\u8bc1\u4ed6\u4e0d\u4f1a\u6b7b\uff0c\u90a3\u4e48\u6bd4\u4ed6\u5f3a\u7684\u539f\u5148\u6700\u5f3a\u86c7\u4e5f\u4e0d\u4f1a\u6b7b\uff1b\u5982\u679c\u539f\u5148\u6b21\u5f3a\u86c7\u4e0d\u5403\uff0c\u90a3\u4e48\u6e38\u620f\u7ed3\u675f\uff0c\u4f9d\u65e7\u4e0d\u4f1a\u6b7b)\u3002\n\n2. \u5728\u4fdd\u8bc11\u6210\u7acb\u7684\u57fa\u7840\u4e0a\uff0c\u751f\u6210\u7684\u65b0\u86c7\u8d8a\u6765\u8d8a\u5f31\uff08\u6613\u8bc1\uff09\u3002\n\n\u90a3\u4e48\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u5982\u679c\u6700\u5f3a\u86c7\u5403\u4e86\u540e\uff0c\u53d8\u6210\u4e86\u6700\u5f31\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51b3\u7b56\u662f\u5426\u6709\u6267\u884c\u7684\u5fc5\u8981\uff1f\n\n\u8fd9\u662f\u672c\u9053\u9898\u7684\u7b2c\u4e8c\u9636\u6bb5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u9012\u5f52\u5730\u601d\u8003\u95ee\u9898\uff0c\u5982\u679c\u4e0b\u4e00\u6761\u51b3\u7b56\u86c7\u5403\u4e86\u539f\u86c7\u540e\u4e0d\u662f\u6700\u5f31\uff0c\u4ed6\u80af\u5b9a\u4f1a\u5403\u3002\u5982\u679c\u4e0b\u4e00\u6761\u51b3\u7b56\u86c7\u5403\u4e86\u539f\u86c7\u540e\uff0c\u53ea\u5269\u4ed6\u81ea\u5df1\uff0c\u4ed6\u4e5f\u80af\u5b9a\u4f1a\u5403\u3002\u5176\u4f59\u60c5\u51b5\u9012\u5f52\u89e3\u51b3\u3002\u81f3\u4e8e\u7a0b\u5e8f\u5b9e\u73b0\uff0c\u5c31\u662f\u8fed\u4ee3\u3002\u6211\u4eec\u4e5f\u53ea\u8981\u6ce8\u610f\u9012\u5f52\u6b21\u6570\u5947\u5076\u6027\uff0c\u56e0\u4e3a\u51b3\u7b56\u4f18\u52a3\u6027\u662f\u4ea4\u66ff\u7684\u3002\n\n\u90a3\u4e48\u95ee\u9898\u8fce\u5203\u800c\u89e3\uff0c\u4f60\u8ba4\u4e3a\u4f60AC\u4e86CSP\u7684\u6700\u540e\u4e00\u9898\uff0c\u53ef\u662f\u4f60\u53d1\u73b0\u4f60TLE\u4e86\uff01\n\n\u539f\u6765\u8fd9\u9898\u5361 $O(nlog_2n)$ \u7684\u505a\u6cd5\uff0c\u4e0d\u80fd\u7528set\u4e71\u641e\u3002\n\n\u6211\u4eec\u60f3\u8d77\u6765\u6709\u4e00\u5e74NOIp\u8003\u4e86\u4e00\u9898\u53eb\u86af\u8693\uff0c\u4e5f\u662f\u5361$O(nlog_2n)$ \u7684\u505a\u6cd5\u3002\u90a3\u9053\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u5355\u8c03\u6027\uff0c\u7528\u961f\u5217\u505a\u597d\u7684\u3002\n\n\u4f60\u96be\u9053\u4ee5\u4e3a\u9898\u76ee\u4e2d\u8f93\u5165\u6570\u636e\u7684\u5355\u8c03\u6027\u662f\u6ca1\u7528\u7684\u5417\uff1f\n\n\u6839\u636e\u6027\u8d282\uff0c\u5728\u7b2c\u4e00\u9636\u6bb5\uff0c\u751f\u6210\u86c7\u6709\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u76f4\u63a5\u4e24\u4e2a\u961f\u5217\u7ef4\u62a4\u3002\u4e00\u4e2a\u7ef4\u62a4\u539f\u86c7\uff0c\u53e6\u4e00\u4e2a\u7ef4\u62a4\u53d8\u86c7\uff0c\u90fd\u662f\u5355\u8c03\u7684\u3002\n\n\u7b2c\u4e8c\u9636\u6bb5\u540c\u7406\uff0c\u53ea\u8981\u6ce8\u610f\u6700\u540e\u5224\u65ad\u7684\u7ec6\u8282\u5c31\u597d\u5566\uff01\n\ncode\uff1a\n\n```cpp\n// Program written by Liu Zhaozhou ~~~\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline char gc(void) {\n\tstatic char buf[100000], *p1 = buf, *p2 = buf;\n\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;\n}\n\ntemplate <class T> inline void read(T &x) {\n\tT f = 1; x = 0; static char c = gc();\n\tfor (; !isdigit(c); c = gc()) if (c == '-') f = -f;\n\tfor (; isdigit(c); c = gc()) x = (x << 1) + (x << 3) + (c & 15);\n\tx *= f;\n}\n\ninline void readstr(char *s) {\n\tdo *s = gc(); while ((*s == ' ') || (*s == '\\n') || (*s == '\\r'));\n\tdo *(++s) = gc(); while ((~*s) && (*s != ' ') && (*s != '\\n') && (*s != '\\r'));\n\t*s = 0; return;\n}\n\ninline void readch(char&x) { while (isspace(x = gc())); }\n\nchar pf[100000], *o1 = pf, *o2 = pf + 100000;\n#define ot(x) (o1 == o2 ? fwrite(pf, 1, 100000, stdout), *(o1 = pf) ++= x : *o1 ++= x)\ntemplate <class T>\ninline void println(T x, char c = '\\n') {\n\tif (x < 0) ot(45), x = -x;\n\tstatic char s[15], *b; b = s;\n\tif (!x) *b ++= 48;\n\tfor (; x; * b ++= x % 10 + 48, x /= 10);\n\tfor (; b-- != s; ot(*b)); ot(c);\n}\n\ntemplate <class T> inline void write(T x) {\n\tif (x < 0) x = -x, putchar('-');\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + 48);\n}\n\ntemplate <class T> inline void writeln(T x, char c = '\\n') { write(x); putchar(c); }\ntemplate <class T> inline void chkmax(T &x, const T y) { x > y ? x = x : x = y; }\ntemplate <class T> inline void chkmin(T &x, const T y) { x < y ? x = x : x = y; }\n\n#define Ms(arr, opt) memset(arr, opt, sizeof(arr))\n#define Mp(x, y) make_pair(x, y)\n\ntypedef long long ll;\ntypedef pair <int, int> pii;\n\nconst int Maxn = 1e6 + 5;\nint T, n, a[Maxn];\n\ninline int solve(void) {\n\tdeque <pii> q1, q2; int ret = 0;\n\tfor (int i = 1; i <= n; i++) q1.push_back(Mp(a[i], i));\n\twhile (true) {\n\t\tif (q1.size() + q2.size() == 2) return 1;\n\t\tint x, y, idx; y = q1.front().first; q1.pop_front();\n\t\tif (q2.empty() || (!q1.empty() && q1.back() > q2.back())) {\n\t\t\tx = q1.back().first; idx = q1.back().second; q1.pop_back();\n\t\t} else {\n\t\t\tx = q2.back().first; idx = q2.back().second; q2.pop_back();\n\t\t} pii cur = Mp(x - y, idx);\n\t\t\n\t\tif (q1.empty() || q1.front() > cur) {\n\t\t\tret = (int) q1.size() + (int) q2.size() + 2; int cnt = 0;\n\t\t\twhile (true) {\n\t\t\t\t++cnt;\n\t\t\t\tif ((int) q1.size() + (int) q2.size() == 1) {\n\t\t\t\t\tif (cnt % 2 == 0) --ret; break;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tint x, idx;\n\t\t\t\tif (q2.empty() || (!q1.empty() && q1.back() > q2.back())) {\n\t\t\t\t\tx = q1.back().first; idx = q1.back().second; q1.pop_back();\n\t\t\t\t} else {\n\t\t\t\t\tx = q2.back().first; idx = q2.back().second; q2.pop_back();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcur = Mp(x - cur.first, idx);\n\t\t\t\tif (!((q1.empty() || cur < q1.front()) && (q2.empty() || cur < q2.front()))) {\n\t\t\t\t\tif (cnt % 2 == 0) --ret; break;\n\t\t\t\t}\n\t\t\t} break;\n\t\t} else q2.push_front(cur);\n\t} return ret;\n}\n\nsigned main(void) {\n\tread(T);\n\tfor (int i = 1; i <= T; i++) {\n\t\tif (i == 1) {\n\t\t\tread(n);\n\t\t\tfor (int j = 1; j <= n; j++) read(a[j]);\n\t\t} else {\n\t\t\tint k; read(k);\n\t\t\tfor (int j = 1, x, y; j <= k; j++)\n\t\t\t\tread(x), read(y), a[x] = y;\n\t\t} writeln(solve());\n\t}\n//\tfwrite(pf, 1, o1 - pf, stdout);\n\treturn 0;\n}\n\n/**/\n\n\n```\n",
        "postTime": 1605863665,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\u3011"
    },
    {
        "content": "# P7078 \u8d2a\u5403\u86c7\n#### [_2020 CSP-S_](https://www.luogu.com.cn/problem/list?tag=83%7C37&page=1) [_T4_](https://www.luogu.com.cn/problem/P7078)\n****\n\u8003\u573a\u4e0a\u770b\u5230\u8fd9\u9053\u9898\u60f3\u5230\u4e86\u5355\u8c03\u961f\u5217\uff0c\u4f46\u662f\u6ca1\u6709\u5206\u4e3a\u4e24\u4e2a\u5355\u8c03\u961f\u5217\u4f18\u5316\uff0c\u4e5f\u6ca1\u6709\u8003\u8651\u73a9\u5168\u4e0b\u9762\u7684 $Part\\;2$ \uff0c\u5bfc\u81f4\u5927\u6837\u4f8b\u6302\u4e86\uff0c\u6d1b\u8c37\u53ea\u6709 $25\\;pts$.\n## \u601d\u8def\n\u6211\u4eec\u8bbe\u86c7\u4e3a $a_1,a_2,a_3,..,a_n$\u3002\n****\n\u4ec0\u4e48\u65f6\u5019\u6700\u5f3a\u7684\u86c7\u4f1a\u5403\u6700\u5f31\u7684\u86c7\u5462\uff1f\n\n\u8bbe\u86c7\u5403\u5b8c\u540e\u7684\u5b9e\u529b\u4e3a $S=a_n-a_1$.\n****\n$$Part\\;1$$\n\u5982\u679c\u8fd9\u6761\u86c7\u5403\u5b8c\u540e\u7684\u5b9e\u529b $S>a_2$\uff0c\u90a3\u4e48\u5b83\u4f1a\u9009\u62e9\u5403\u3002\n\n$$\\because a_n> a_{n-k}\\enspace and\\enspace a_1< a_{1+k}$$\n$$\\therefore S>a_{n-k}-a_{1+k}$$\n\n\u5373\u8fd9\u6761\u6700\u5f3a\u7684\u86c7\u6c38\u8fdc\u4e0d\u4f1a\u662f\u6700\u5f31\u7684\u4e00\u6761\uff0c\u5373\u4f7f\u8981\u88ab\u5403\u6389\uff0c\u4e5f\u662f $a_{n-k}$ \u5148\u88ab\u5403\uff0c\u6240\u4ee5 $a_{n-k}$ \u4e0d\u4f1a\u9009\u62e9\u5403\uff0c\u6240\u4ee5\u8fd9\u6761\u86c7\u4e00\u5b9a\u4f1a\u5403\u3002\n\n\u4ece\u8fd9\u91cc\u53ef\u4ee5\u63a8\u51fa\u4e00\u6761\u7ed3\u8bba\uff1a\u5403\u8fc7\u7684\u86c7\u90fd\u4e0d\u4f1a\u88ab\u5403\u3002\n****\n$$Part\\;2$$\n\n\u5982\u679c\u8fd9\u6761\u86c7\u5403\u5b8c\u540e\u7684\u5b9e\u529b $S<a_2$\uff0c\u5219\u6709\u4ee5\u4e0b\u60c5\u51b5\uff1a\n\n- $a_{n-1}-S>a_2$\uff0c\u5982\u679c $a_{n-1}$ \u5403\u4e86\uff0c\u5b83\u4e5f\u4e0d\u4f1a\u53d8\u6210\u6700\u5f31\u7684\u86c7\uff0c\u4e5f\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5403\uff0c\u6240\u4ee5 $a_{n-1}$ \u4f1a\u653e\u5fc3\u5730\u5403\uff0c\u5373 $a_n$ \u4f1a\u88ab\u5403\u6389\uff0c\u6240\u4ee5 $a_n$ \u4e0d\u4f1a\u9009\u62e9\u5403\u3002\n\n- $a_{n-1}-S<a_2$\uff0c\uff0c\u5982\u679c $a_{n-1}$ \u5403\u4e86\uff0c\u5219\u5b83\u4f1a\u53d8\u6210\u6700\u5f31\u7684\u86c7\uff0c\u90a3\u4e48\u53c8\u9700\u8981\u8003\u8651 $a_{n-2}$ \u5403\u4e0d\u5403\u4e86\u3002\n\n\u5bf9\u4e8e\u60c5\u51b5\u4e8c\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4e3a\u9012\u5f52\u5904\u7406\uff0c\u9012\u5f52\u8fb9\u754c\u4e3a\u4e00\u6761\u86c7\u5fc5\u5403\uff0c\u800c\u5fc5\u5403\u7684\u60c5\u51b5\u6709\uff1a$1.$\u53ea\u5269\u4e24\u6761\u86c7\u4e86\uff1b$2.$\u5403\u5b8c\u540e\u7684\u5b9e\u529b $S>a_2$\u3002\n\n\u9012\u5f52\u4e86 $k$ \u5c42\uff0c\u5219\n- \u5982\u679c $k$ \u662f\u5947\u6570\uff0c\u5373\u7b2c $k$ \u6761\u86c7\u4e00\u5b9a\u4f1a\u5403\uff0c\u6240\u4ee5\u7b2c $k-1$ \u86c7\u4e0d\u4f1a\u5403\uff0c\u7b2c $k-2$ \u86c7\u4f1a\u5403\uff0c...\u6240\u4ee5\u7b2c $k-(k-1)=1$ \u86c7\u4f1a\u5403\uff0c\u6240\u4ee5\u5269\u4f59\u7684\u86c7\u6570\u4e3a\u76ee\u524d\u7684\u86c7\u6570 $-1$\uff0c\u5219\u7b2c $2$ \u6761\u86c7\u4e0d\u4f1a\u5403\uff0c\u7ed3\u675f\u51b3\u6597\uff1b\n\n- \u5982\u679c $k$ \u662f\u5076\u6570\uff0c\u5373\u7b2c $k$ \u6761\u86c7\u4e00\u5b9a\u4f1a\u5403\uff0c\u6240\u4ee5\u7b2c $k-1$ \u86c7\u4e0d\u4f1a\u5403\uff0c\u7b2c $k-2$ \u86c7\u4f1a\u5403\uff0c...\u6240\u4ee5\u7b2c $k-(k-1)=1$ \u86c7\u4e0d\u4f1a\u5403\uff0c\u6240\u4ee5\u5269\u4f59\u7684\u86c7\u6570\u4e3a\u76ee\u524d\u7684\u86c7\u6570\uff0c\u7acb\u5373\u7ed3\u675f\u51b3\u6597\u3002\n\n****\n\u5927\u90e8\u5206\u5403\u86c7\u90fd\u5728 $Part\\;1$ \u53d1\u751f\uff0c\u53ea\u6709\u6700\u540e\u53ef\u80fd\u8fdb\u884c\u4e00\u6b21 $Part\\;2$\uff0c\u5224\u65ad\u80fd\u4e0d\u80fd\u591a\u5403\u4e00\u6761\u3002\n****\n$$Part\\;3$$\n\u6211\u4eec\u7528\u4e24\u4e2a\u5355\u8c03\u961f\u5217 $a,b$ \u7ef4\u62a4\uff0c$a$ \u7528\u4e8e\u7ef4\u62a4\u6ca1\u5403\u8fc7\u7684\u86c7\uff0c$b$ \u7528\u4e8e\u7ef4\u62a4\u5403\u8fc7\u7684\u86c7\u3002\u4e0a\u9762\u5df2\u7ecf\u8bc1\u660e\u8fc7\u4e86\uff0c$b$ \u961f\u5217\u4e2d\u7684\u86c7\u90fd\u4e0d\u4f1a\u88ab\u5403\uff0c\u6240\u4ee5\u6bcf\u6b21\u5403\u6389\u7684\u86c7\u90fd\u4ece $a$ \u961f\u5217\u9996\u90e8\u53d6\u3002\n\n\u6bcf\u4e2a\u56de\u5408\u6309\u987a\u5e8f\u505a\u4e00\u4e0b\u64cd\u4f5c\uff1a\n\n- \u5982\u679c\u76ee\u524d\u53ea\u5269 $2$ \u6761\u86c7\uff0c\u5c31\u8fd4\u56de $1$ \u4ee3\u8868\u6700\u540e\u5269\u4f59 $1$ \u6761\u86c7\u3002\n\n- \u4ece $a$ \u961f\u5217\u7684\u524d\u9762\u53d6\u51fa\u5e76\u5f39\u51fa\u6700\u5f31\u7684\u86c7 $a_1$\uff0c\u4ece $a$ \u6216 $b$ \u961f\u5217\u540e\u7aef\u53d6\u51fa\u5e76\u5f39\u51fa\u6700\u5f3a\u7684\u86c7 $a_n$ \u3002\n\n- \u5982\u679c $a$ \u961f\u5217\u7a7a\u4e86\uff0c\u6216\u8005 $S<a_2$ \uff0c\u8fdb\u5165 $Part\\;2$\u3002\n\n- \u5426\u5219\uff0c\u5c06\u8fd9\u6761\u86c7\u653e\u5728 $b$ \u961f\u5217\u7684\u9996\u90e8\uff08\u4e4b\u524d\u8bc1\u660e\u4e86\u540e\u9762\u5403\u5b8c\u7684\u86c7\u4e00\u5b9a\u6bd4\u4e4b\u524d\u5403\u5b8c\u7684\u86c7\u5f31\uff09\u3002\n\n****\n## \u4ee3\u7801\u5b9e\u73b0\n\u5bf9\u4e8e\u7b2c $1$ \u4e2a\u6570\u636e\uff0c\u6211\u4eec\u5355\u72ec\u8bfb\u5165\uff0c\u5bf9\u4e8e\u540e\u9762\u7684 $T-1$ \u7ec4\u6570\u636e\uff0c\u4ee5\u8f93\u5165\u683c\u5f0f\u8bfb\u5165\u3002\n\n\u51b3\u6597\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $STL$ \u5bb9\u5668 $deque$ \u6216\u8005\u6570\u7ec4\u6a21\u62df\u961f\u5217\u3002\n\n\u86c7\u7684\u4fe1\u606f\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53\u6216\u8005 $pair$ \u4fdd\u5b58\uff08\u7528\u7ed3\u6784\u4f53\u4fdd\u5b58\u7684\u8bdd\u8fd8\u9700\u8981\u91cd\u8f7d\u8fd0\u7b97\u7b26$<,>,-$\uff09\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(Tn)$.\n\n$AC\\enspace code:$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n,k,len;\nchar ibuf[(1<<20)+1],*iS,*iT,out[(1<<20)+1];\n#define gh() (iS==iT?iT=(iS=ibuf)+fread(ibuf,1,(1<<20)+1,stdin),(iS==iT?EOF:*iS++):*iS++)\n#define reg register\ninline int read(){//\u5feb\u8bfb \n\treg char ch=gh();\n\treg int x=0;\n\twhile(ch<'0'||ch>'9') ch=gh();\n\twhile(ch>='0'&&ch<='9') x=x*10+(ch^48),ch=gh();\n\treturn x;\n}\ninline void write(int x){//\u5feb\u5199  \n\tif(x>9) write(x/10);\n\tout[len++]=x%10+48;\n}\nstruct node{\n\tint val,id;\n\tfriend bool operator<(const node &a,const node &b){//a\u6bd4b\u5f31 \n\t\tif(a.val!=b.val){\n\t\t\treturn a.val<b.val;\n\t\t}\n\t\treturn a.id<b.id;\n\t}\n\tfriend bool operator>(const node &a,const node &b){//a\u6bd4b\u5f3a \n\t\treturn b<a;\n\t}\n\tfriend node operator-(const node &a,const node &b){//a\u5403b \n\t\treturn (node){a.val-b.val,a.id};\n\t}\n}s[1000001];\ninline node zq(deque<node>&a,deque<node>&b){//\u53d6\u6700\u5f3a\u5e76\u5f39\u51fa \n\tnode q;\n\tif(b.empty()||!a.empty()&&a.back()>b.back()){\n\t\tq=a.back();\n\t\ta.pop_back();\n\t}else{\n\t\tq=b.back();\n\t\tb.pop_back();\n\t}\n\treturn q;\n}\ninline int solve(){//\u51b3\u6597 \n\tdeque<node>a,b;\n\tint ans;\n\tfor(int i=1;i<=n;i++){//\u539f\u6765\u7684\u86c7 \n\t\ta.push_back(s[i]);\n\t}\n\tfor(;;){\n\t\tif(a.size()+b.size()==2){//\u5269\u4f59\u4e24\u6761\u86c7 \n\t\t\treturn 1;\n\t\t}\n\t\tnode r=a.front();//\u6700\u5f31\u7684 \n\t\ta.pop_front();//\u5f39\u51fa\n\t\tnode q=zq(a,b);//\u6700\u5f3a\u7684 \n\t\tnode c=q-r;//S \n\t\tif(a.empty()||a.front()>c){//S<a2 \n\t\t\tans=a.size()+b.size()+2;//\u76ee\u524d\u5269\u4f59\u7684\u86c7 \n\t\t\tfor(int eat=1;;eat++){//\u9012\u5f52\u5c42\u6570\n\t\t\t\tif(a.size()+b.size()==1){//\u53ea\u52691\u6761\u86c7 \n\t\t\t\t\treturn ans-!(eat&1);\n\t\t\t\t}\n\t\t\t\tq=zq(a,b);\n\t\t\t\tc=q-c;\n\t\t\t\tif(!a.empty()&&a.front()<c||!b.empty()&&b.front()<c){//\u4e00\u5b9a\u5403 \n\t\t\t\t\treturn ans-!(eat&1);\n\t\t\t\t}\n\t\t\t}\n\t\t}else{//S>a2\n\t\t\tb.push_front(c);//\u63d2\u5165b\u961f\u5217 \n\t\t}\n\t}\n}\nint main(){\n// \tfreopen(\"snakes.in\",\"r\",stdin);\n// \tfreopen(\"snakes.out\",\"w\",stdout);\n\tt=read(),n=read(); \n\tfor(int i=1;i<=n;i++){//\u8bfb\u5165\u539f\u5b9e\u529b \n\t\ts[i].val=read();\n\t\ts[i].id=i;\n\t}\n\twrite(solve());\n\tout[len++]='\\n';\n\tfor(int i=2;i<=t;i++){\n\t\tk=read();\n\t\tfor(int j=1;j<=k;j++){\n\t\t\tint u=read(),w=read();\n\t\t\ts[u].val=w;//\u4fee\u6539\u5b9e\u529b \n\t\t}\n\t\twrite(solve());\n\t\tout[len++]='\\n';\n\t}\n\tfwrite(out,1,len,stdout);\n\treturn 0;\n}\n/*\nTime:525ms\nMemory:17.89MB\n*/\n```\n\u518d\u89c1\u4e86$qwq$~",
        "postTime": 1605413612,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6bcf\u4e00\u8f6e\u5728\u5403\u548c\u88ab\u5403\u7684\u86c7\u90fd\u662f\u67d0\u4e2a\u94a6\u5b9a\u5e8f\u5217\u7684\u524d\u7f00\u3002\u5047\u8bbe\u6211\u4eec\u5904\u7406\u51fa\u6765\u8fd9\u4e2a\u957f\u5ea6\u4e3a $n-1$ \u7684\u5e8f\u5217\uff0c\u600e\u4e48\u505a\uff1f\n\n\u8003\u8651\u865a\u62df\u7684\u7b2c $n-1$ \u8f6e\u3002\u5047\u8bbe\u524d\u9762\u8f6e\u7684\u86c7\u90fd\u4e0d\u8003\u8651\uff0c\u76f4\u63a5\u9009\u5403\uff1b\u73b0\u5728\u53ea\u5269\u4e0b\u4e24\u53ea\u86c7\u4e86\u3002\u8fd9\u4e00\u8f6e\u5728\u5403\u7684\u86c7\u80af\u5b9a\u4f1a\u9009\u5403\u3002  \n\u600e\u4e48\u63a8\u5e7f\u8fd9\u6837\u7684\u903b\u8f91\uff1f\u5728\u7b2c $i$ \u8f6e\uff0c\u5982\u679c\u5230\u4e86\u8fd9\u4e00\u8f6e\u7684\u8bdd\uff0c\u5728\u5403\u7684\u86c7\u4f1a\u9009\u62e9\u5403\u5f53\u4e14\u4ec5\u5f53\u5403\u4e86\u4e0d\u4f1a\u5bfc\u81f4\u5b83\u5728\u540e\u9762\u7684\u8f6e\u88ab\u5403\u3002  \n\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u8f6e\u8ba1\u7b97\u5728\u5403\u7684\u86c7\u4f1a\u9009\u62e9\u5403\u8fd8\u662f\u5f03\u6743\u3002\u5bf9\u7b2c $i$ \u8f6e\u5728\u5403\u7684\u86c7\uff0c\u5982\u679c\u4ece\u7b2c $i+1$ \u8f6e\u5230\u4e0b\u4e00\u4e2a\u5f03\u6743\u8f6e\u4e4b\u524d\u5b58\u5728\u4e00\u8f6e\u88ab\u5403\u7684\u86c7\u662f\u5f53\u524d\u5728\u5403\u7684\u86c7\uff0c\u5728\u5403\u7684\u86c7\u5fc5\u5b9a\u9009\u5f03\u6743\uff08\u4e0d\u80fd\u88ab\u5403\uff09\uff0c\u5426\u5219\u5fc5\u5b9a\u9009\u5403\uff08\u4e0d\u80fd\u5c11\u5403\uff09\u3002  \n\u5bf9\u8fd9\u4e2a\u90e8\u5206\u7ef4\u62a4\u4e00\u4e2a 0/1 \u6570\u7ec4\u5373\u53ef\uff1b\u4f4d\u7f6e $i$ \u7b49\u4e8e\u7b2c $i$ \u86c7\u662f\u5426\u4ece\u8fd9\u4e2a\u8f6e\u5230\u4e0b\u4e00\u4e2a\u5f03\u6743\u8f6e\u5f53\u8fc7\u88ab\u5403\u7684\u86c7\u3002\u6574\u4f53 $O(n)$\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u9700\u8981\u6784\u9020\u8fd9\u4e2a\u5728\u5403\u548c\u88ab\u5403\u7684\u5e8f\u5217\u4e86\u3002\u8fd9\u91cc\u9700\u8981\u652f\u6301\u627e\u5230\u6700\u5c0f\uff0c\u5220\u9664\u6700\u5c0f\uff0c\u627e\u5230\u6700\u5927\uff0c\u5220\u9664\u6700\u5927\uff0c\u63d2\u5165\u7684\u6570\u636e\u7ed3\u6784\u3002\u53ef\u4ee5 set \u641e\uff0c\u4f46\u662f\u8fd9\u662f $O(Tn\\log n)$\uff0c\u4f1a\u88ab\u5361\u5230 85 \u5206\u3002\n\n\u771f \u7684 \u561b \uff1f\n\n\u5f00\u59cb\u5361\u5e38\u3002\n\n - \u521d\u59cb\u9700\u8981 pair \u7ef4\u62a4\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u86c7\u7684\u6743\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u86c7\u7684\u7f16\u53f7\u3002\u8fd9\u6837\u6bd4\u8f83\u5e38\u6570\u8f83\u5927\uff0c\u7ed1\u6210\u4e00\u4e2a long long \u653e\u5165 set\u3002\n - set \u4fdd\u5b58\u4e0b\u6765 begin \u548c end \u7684\u6307\u9488\u6309\u7167\u8fd9\u4e9b\u5220\u9664\uff0c\u51cf\u5c11\u5bfb\u627e\u5e38\u6570\u3002\n - \u7528\u4e24\u4e2a priority queue \u6765\u66ff\u4ee3 set\u3002\u7b2c\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u662f\u6700\u5c0f\u4f18\u5148\uff1b\u7b2c\u4e8c\u4e2a\u662f\u6700\u5927\u4f18\u5148\u3002\u7531\u4e8e priority_queue \u4e0d\u652f\u6301\u5220\u9664\u4efb\u610f\u5143\u7d20\uff0c\u7ed9\u6240\u6709\u63d2\u5165\u7684\u5143\u7d20\u4e00\u4e2a\u6807\u53f7\u3002\u5f53\u60f3\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u628a\u8fd9\u4e2a\u6807\u53f7\u5728\u67d0\u4e2a\u6570\u7ec4\u91cc\u7edf\u8ba1\u4e3a\u201d\u88ab\u5220\u9664\u201c\u3002\u627e\u6700\u5c0f\u503c\u6216\u8005\u6700\u5927\u503c\u7684\u65f6\u5019\uff0c\u53ea\u8981\u5806\u9876\u88ab\u5220\u9664\u4e86\u5c31\u4e00\u76f4\u7ee7\u7eed pop\u3002\n - \u6346\u7ed1\u7528 1<<20 \u6346\u7ed1\u3002\n - \u591a\u6b21\u63d0\uff08x\uff08w\uff09i\uff08x\uff09n\uff08q\uff09\uff09\u4ea4\uff08y\uff08ak\uff09a\uff08i\uff09n\uff08o\uff09g\uff08i\uff09\uff09\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) *s = __c; *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n \nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nconst int MOD = 1000000007;\n\nint ar[1000006];\nint eater[1000006], eaten[1000006];\nbool willeaten[1000006];\nbool delted[2000006];\npair<ll,int> tmp[1000006];\nint solve(int n) {\n\trep1(i, n) tmp[i] = {(((ll)ar[i])<<20)|i, i};\n\tpriority_queue<pair<ll,int>, vector<pair<ll,int>>, less<>> mx(tmp+1, tmp+n+1);\n\tpriority_queue<pair<ll,int>, vector<pair<ll,int>>, greater<>> mi(tmp+1, tmp+n+1);\n\tint cur = n+1;\n\tmemset(delted, 0, sizeof delted);\n\trep(i, n-1) {\n\t\twhile(delted[mx.top().se]) mx.pop();\n\t\twhile(delted[mi.top().se]) mi.pop();\n\t\tll b = mx.top().fi, a = mi.top().fi;\n\t\teater[i] = b&1048575; eaten[i] = a&1048575;\n\t\tpair<ll,int> r = {b-a+eaten[i], cur++};\n\t\tdelted[mx.top().se] = delted[mi.top().se] = 1;\n\t\tmx.pop(); mi.pop();\n\t\tmx.push(r); mi.push(r);\n\t}\n\tmemset(willeaten, 0, sizeof willeaten);\n\tint roundend = n-1;\n\tfor(int i=n-2; i>=0; i--) {\n\t\tif(willeaten[eater[i]]) {\n\t\t\titer(j, i+1, roundend) willeaten[eaten[j]] = 0;\n\t\t\troundend = i;\n\t\t} else willeaten[eaten[i]] = 1;\n\t}\n\treturn n - roundend;\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int t, n; gi(t); gi(n);\n\tt--;\n\trep1(i, n) gi(ar[i]);\n\tcout << solve(n) << endl;\n\twhile(t--) {\n\t\tint k; gi(k);\n\t\trep(i, k) {\n\t\t\tint a, b; gi(a), gi(b);\n\t\t\tar[a] = b;\n\t\t}\n\t\tcout << solve(n) << endl;\n\t}\n}\n```",
        "postTime": 1605364807,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\uff08\u6d1b\u8c37\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "\u672c\u6587\u540c\u6b65\u53d1\u8868\u5728[\u6211\u7684blog](https://www.cnblogs.com/TEoS/p/13959808.html)\n\n------------\n\n**\u9898\u610f\u5206\u6790**\n\n\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217\uff0c\u4ee5\u6743\u503c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u7f16\u53f7\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u5355\u8c03\u9012\u589e\uff0c\u6bcf\u6b21\u64cd\u4f5c\u8ba9\u6700\u5927\u5143\u7d20\u7684\u6743\u503c\u51cf\u53bb\u6700\u5c0f\u5143\u7d20\u7684\u6743\u503c\uff0c\u5220\u9664\u6700\u5c0f\u5143\u7d20\uff0c\u5c06\u6700\u5927\u5143\u7d20\u63d2\u56de\u5e8f\u5217\u5e76\u7ef4\u62a4\u5355\u8c03\u6027\uff0c\u4e14\u6bcf\u6b21\u64cd\u4f5c\u8981\u4f7f\u5f53\u524d\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u4e0d\u5fc5\u5b9a\u88ab\u5220\u9664\uff0c\u6c42\u6700\u540e\u6700\u5c11\u80fd\u5269\u4e0b\u51e0\u4e2a\u5143\u7d20\u3002\n\n**\u601d\u8def\u5206\u6790**\n\n\u8bbe\u539f\u5e8f\u5217\u4e3a $\\{a_n\\}$ \u3002\u4e3a\u4e86\u65b9\u4fbf\u8868\u8ff0\uff0c\u672c\u6587\u5bf9\u5e8f\u5217  $\\{a_n\\}$ \u4e2d\u7684\u5143\u7d20\u7684\u5927\u5c0f\u6bd4\u8f83\u5747\u6307\u4ee5\u6743\u503c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u7f16\u53f7\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u6bd4\u8f83\u3002\u663e\u7136\uff0c\u8fd9\u79cd\u6bd4\u8f83\u4e0d\u4f1a\u51fa\u73b0\u76f8\u7b49\u7684\u60c5\u51b5\u3002\u5176\u4e2d\uff0c$val_i,num_i$ \u5206\u522b\u8868\u793a\u5143\u7d20 $i$ \u7684\u6743\u503c\u3001\u7f16\u53f7\u3002\n\n\u5206\u6790\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u64cd\u4f5c\u7ec8\u6b62\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\u3002\u7b2c\u4e00\u79cd\u5c31\u662f\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd9\u4e2a\u663e\u7136\uff1b\u7b2c\u4e8c\u79cd\u662f\u5f53\u51fa\u73b0\u4e00\u4e2a\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u4f1a\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u65f6\u3002\u82e5\u8fd9\u4e2a\u6700\u5927\u5143\u7d20\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u540e\uff0c\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u8fdb\u884c\u4e86\uff0c\u628a\u5b83\u5220\u4e86\uff0c\u90a3\u4e4b\u524d\u90a3\u4e2a\u64cd\u4f5c\u5c31\u4e0d\u4f1a\u8fdb\u884c\uff1b\u5426\u5219\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u5c31\u4e0d\u4f1a\u8fdb\u884c\uff0c\u540c\u6837\u7ec8\u6b62\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u5f88\u597d\u5224\u65ad\uff0c\u4e3b\u8981\u5206\u6790\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u4f1a\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\uff0c\u64cd\u4f5c\u5c31\u4f1a\u7ec8\u6b62\u3002\u56e0\u6b64\uff0c\u5728\u4e4b\u524d\u7684\u64cd\u4f5c\u4e2d\uff0c\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u4e00\u5b9a\u4e0d\u4f1a\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u3002\n\n> \u5f15\u7406\u4e00\uff1a\u5728\u51fa\u73b0\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u4e4b\u524d\uff0c\u64cd\u4f5c\u540e\u7684\u5143\u7d20\u5b58\u5728\u5355\u8c03\u6027\uff0c\u5373\u5148\u64cd\u4f5c\u7684\u5143\u7d20\u4e00\u5b9a\u5927\u4e8e\u540e\u64cd\u4f5c\u7684\u5143\u7d20\n>\n> \u7b80\u5355\u8bc1\u660e\uff1a\n>\n> \u5148\u8003\u8651\u6743\u503c\u5747\u4e0d\u7b49\u7684\u60c5\u51b5\u3002\u663e\u7136\uff0c\u8bbe\u5f53\u524d\u5e8f\u5217\u4e3a $a_1,a_2,a_3,...,a_{n-1},a_n$ \uff0c\u5219\u6709 $val_1<val_2<val_3<...<val_{n-1}<val_n$ \u3002\u56e0\u4e3a\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u4e0d\u4f1a\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\uff0c\u56e0\u6b64\u4e24\u6b21\u64cd\u4f5c\u540e\u7684\u6743\u503c\u4e00\u5b9a\u4f9d\u6b21\u662f $val_n-val_1,val_{n-1}-val_2$ \uff0c\u663e\u7136\u6709 $val_n-val_1>val_{n-1}-val_2$ \u3002\n>\n> \u518d\u8003\u8651\u6743\u503c\u51fa\u73b0\u76f8\u7b49\u7684\u60c5\u51b5\u3002\u6839\u636e\u9898\u8bbe\u6761\u4ef6\u6709 $val_1\\leq val_2\\leq val_3\\leq...\\leq val_{n-1}\\leq val_n$ \u3002\u82e5\u4e24\u6b21\u64cd\u4f5c\u540e\u7684\u6743\u503c\u662f\u76f8\u7b49\u7684\uff0c\u5373 $val_n-val_1=val_{n-1}-val_2$ \uff0c\u90a3\u4e48\u4e00\u5b9a\u6709 $val_1=val_2,val_{n-1}=val_n$ \uff0c\u56e0\u6b64\u6709 $num_1<num_2,num_{n-1}<num_n$ \uff0c\u90a3\u4e48\u5148\u64cd\u4f5c\u7684 $a_n$ \u4ecd\u7136\u6392\u5728\u540e\u64cd\u4f5c\u7684 $a_{n-1}$ \u524d\u9762\uff0c\u4e0d\u7834\u574f\u5355\u8c03\u6027\u3002\n\n> \u5f15\u7406\u4e8c\uff1a\u5728\u51fa\u73b0\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u4e4b\u524d\uff0c\u4e00\u5b9a\u662f\u539f\u5e8f\u5217  $\\{a_n\\}$ \u4ece\u5c0f\u5230\u5927\u88ab\u4f9d\u6b21\u5220\u9664\uff0c\u5373\u88ab\u5220\u53bb\u7684\u5143\u7d20\u4f9d\u6b21\u4e3a $a_1,a_2,a_3...$ \n>\n> \u7b80\u5355\u8bc1\u660e\uff1a\u6839\u636e\u5f15\u7406\u4e00\uff0c\u540e\u64cd\u4f5c\u7684\u5143\u7d20\u4e00\u5b9a\u6392\u5728\u5148\u64cd\u4f5c\u7684\u5143\u7d20\u540e\u9762\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u64cd\u4f5c\u540e\u4e0d\u662f\u6700\u5c0f\u5143\u7d20\u7684\u5143\u7d20\uff0c\u4e0b\u4e00\u6b21\u64cd\u4f5c\u4e00\u5b9a\u4f1a\u6709\u4e00\u4e2a\u5143\u7d20\u5c0f\u4e8e\u5b83\u800c\u6392\u5728\u5b83\u540e\u9762\uff0c\u56e0\u6b64\u5b83\u4e00\u5b9a\u4e0d\u4f1a\u6210\u4e3a\u6700\u5c0f\u7684\u5143\u7d20\u800c\u88ab\u5220\u9664\u3002\u800c\u64cd\u4f5c\u540e\u7684\u5143\u7d20\u4e0d\u4f1a\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\uff0c\u56e0\u6b64\u88ab\u5220\u9664\u7684\u5143\u7d20\u4e00\u5b9a\u662f\u6ca1\u64cd\u4f5c\u8fc7\u7684\u5143\u7d20\uff0c\u5373\u539f\u5e8f\u5217\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u5220\u9664\u3002\n\n\u6839\u636e\u5f15\u7406\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u961f\u5217\u7ef4\u62a4\u64cd\u4f5c\u540e\u7684\u5143\u7d20\uff0c\u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u5c31\u662f\u539f\u5e8f\u5217\u7684\u6700\u5927\u5143\u7d20\u548c\u961f\u5934\u5143\u7d20\u4e2d\u66f4\u5927\u7684\uff0c\u5373\u64cd\u4f5c\u540e\u548c\u6ca1\u64cd\u4f5c\u7684\u5143\u7d20\u4e2d\u66f4\u5927\u7684\u3002\n\n\u6839\u636e\u5f15\u7406\u4e8c\uff0c\u5bf9\u4e8e\u7b2c $i$ \u6b21\u64cd\u4f5c\uff0c\u88ab\u5220\u9664\u7684\u6700\u5c0f\u5143\u7d20\u5373\u4e3a $a_i$ \u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5 $O(n)$ \u6a21\u62df\u64cd\u4f5c\uff0c\u76f4\u5230\u51fa\u73b0\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u6216\u53ea\u5269\u4e00\u4e2a\u5143\u7d20\u4e3a\u6b62\u3002\n\n\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u5f53\u51fa\u73b0\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u4f1a\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u65f6\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7a76\u7adf\u8fdb\u4e0d\u8fdb\u884c\u3002\n\n\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u82e5\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u4f1a\u8fdb\u884c\u800c\u5c06\u5b83\u5220\u9664\uff0c\u5219\u8fd9\u4e2a\u64cd\u4f5c\u4e0d\u8fdb\u884c\uff1b\u82e5\u4e0d\u4f1a\u5220\u9664\uff0c\u5219\u8fdb\u884c\u3002\u800c\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u8fdb\u884c\u5462\uff1f\u5c31\u662f\u56e0\u4e3a\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u8fdb\u884c\u540e\u4e0b\u4e0b\u4e2a\u64cd\u4f5c\u4f1a\u5c06\u5b83\u5220\u9664\u3002\u8fd9\u6837\u8bb2\u53ef\u80fd\u6709\u70b9\u7ed5\u3002\u6309\u7167\u539f\u9898\u610f\uff0c\u5373\u5f53\u524d\u8fd9\u6761\u6700\u5927\u7684\u86c7\u9884\u5224\u6b21\u5927\u86c7\u4e0d\u6562\u5403\u5b83\uff0c\u6240\u4ee5\u5b83\u6562\u628a\u6700\u5c0f\u7684\u86c7\u5403\u4e86\u800c\u6210\u4e3a\u6700\u5c0f\u7684\u86c7\u3002\n\n\u5bf9\u4e8e\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u540e\uff0c\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u5224\u65ad\u8fd9\u4e2a\u64cd\u4f5c\u662f\u4e0d\u662f\u4e00\u5b9a\u8fdb\u884c\u3002\u800c\u5f53\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u4e0d\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u65f6\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u4e00\u5b9a\u8fdb\u884c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u54ea\u4e00\u6b21\u64cd\u4f5c\u540e\u6700\u5927\u5143\u7d20\u4e0d\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u6216\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u663e\u7136\u8fd9\u4e2a\u64cd\u4f5c\u662f\u4e00\u5b9a\u8fdb\u884c\u7684\uff0c\u5373\u7834\u574f\u4e86\u5f15\u7406\u4e00\u4e2d\u63d0\u5230\u7684\u5355\u8c03\u6027\u3002\n\n\u4e3a\u4ec0\u4e48\u5355\u8c03\u6027\u4f1a\u88ab\u7834\u574f\u5462\uff1f\u5f15\u7406\u4e00\u7684\u524d\u63d0\u662f\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u4e0d\u4f1a\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\uff0c\u6b64\u65f6\u88ab\u5220\u9664\u7684\u5143\u7d20\u7684\u6743\u503c\u5355\u8c03\u4e0d\u964d\uff0c\u56e0\u6b64\u5b58\u5728\u5355\u8c03\u6027\uff1b\u800c\u51fa\u73b0\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u540e\uff0c\u88ab\u5220\u9664\u7684\u5143\u7d20\u7684\u6743\u503c\u7684\u5355\u8c03\u6027\u4e0d\u5b58\u5728\u4e86\uff0c\u56e0\u6b64\u64cd\u4f5c\u540e\u7684\u5143\u7d20\u7684\u5355\u8c03\u6027\u4e5f\u4f1a\u88ab\u7834\u574f\u3002\n\n\u53ef\u4ee5\u60f3\u5230\u6a21\u62df\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u51fa\u73b0\u64cd\u4f5c\u540e\u6700\u5927\u5143\u7d20\u4e0d\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u6216\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u4e3a\u6b62\u3002\n\n\u663e\u7136\uff0c\u5728\u8fd9\u4e9b\u64cd\u4f5c\u4e2d\uff0c\u88ab\u5220\u9664\u7684\u5143\u7d20\u4e00\u5b9a\u662f\u4e0a\u4e00\u6b21\u64cd\u4f5c\u4e2d\u7684\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u4e00\u4e2a\u53d8\u91cf\u5b58\u50a8\u3002\u800c\u56e0\u4e3a\u64cd\u4f5c\u540e\u7684\u5143\u7d20\u5747\u4e3a\u6700\u5c0f\uff0c\u90a3\u4e48\u5176\u5b83\u5143\u7d20\u4e0d\u53d7\u5f71\u54cd\uff0c\u6240\u4ee5\u6700\u5927\u7684\u5143\u7d20\u53ea\u8981\u5728\u5176\u5b83\u5143\u7d20\u4e2d\u627e\u5230\u6700\u5927\u7684\u5373\u53ef\uff0c\u5177\u4f53\u65b9\u6cd5\u548c\u4e4b\u524d\u7684\u76f8\u540c\u3002\n\n\u5728\u6a21\u62df\u8fd9\u4e9b\u64cd\u4f5c\u65f6\u7edf\u8ba1\u6b21\u6570\uff0c\u82e5\u5728\u7b2c\u4e00\u4e2a\u6700\u5927\u5143\u7d20\u64cd\u4f5c\u540e\u6210\u4e3a\u6700\u5c0f\u5143\u7d20\u7684\u64cd\u4f5c\u540e\u7b2c $x$ \u4e2a\u64cd\u4f5c\u5fc5\u5b9a\u8fdb\u884c\uff0c\u90a3\u4e48\u7b2c $x-1$ \u4e2a\u64cd\u4f5c\u5fc5\u5b9a\u4e0d\u8fdb\u884c\uff0c\u7b2c $x-2$ \u4e2a\u64cd\u4f5c\u5fc5\u5b9a\u8fdb\u884c\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u56e0\u6b64\u5f53 $x$ \u4e3a\u5076\u6570\u65f6\uff0c\u5f53\u524d\u64cd\u4f5c\u8fdb\u884c\uff0c\u7b54\u6848\u51cf $1$ \uff1b\u5426\u5219\u5f53\u524d\u64cd\u4f5c\u4e0d\u8fdb\u884c\u3002\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u79cd $O(n)$ \u6c42\u89e3\u7684\u65b9\u6848\u3002\n\n**\u5177\u4f53\u64cd\u4f5c**\n\n1. \u6a21\u62df\u64cd\u4f5c\uff0c\u7528\u4e00\u4e2a\u961f\u5217\u7ef4\u62a4\u64cd\u4f5c\u540e\u7684\u5143\u7d20\uff0c\u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u4e3a\u539f\u5e8f\u5217\u7684\u6700\u5927\u5143\u7d20\u548c\u961f\u5934\u5143\u7d20\u4e2d\u66f4\u5927\u7684\uff0c\u7b2c $i$ \u6b21\u64cd\u4f5c\u88ab\u5220\u9664\u7684\u6570\u4e3a $a_i$ \u3002\u5f53\u51fa\u73b0\u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u64cd\u4f5c\u540e\u6210\u4e3a\u6700\u5c0f\u7684\u5143\u7d20\uff0c\u5373\u5c0f\u4e8e $a_{i+1}$ \u65f6\uff0c\u8fdb\u5165\u7b2c $2$ \u6b65\u64cd\u4f5c\uff1b\u5426\u5219\u5728\u53ea\u5269\u4e00\u4e2a\u5143\u7d20\u65f6\u505c\u6b62\u6a21\u62df\u3002\n\n2. \u6a21\u62df\u64cd\u4f5c\uff0c\u5f53\u524d\u6700\u5927\u5143\u7d20\u4e3a\u539f\u5e8f\u5217\u7684\u6700\u5927\u5143\u7d20\u548c\u961f\u5934\u5143\u7d20\u4e2d\u66f4\u5927\u7684\uff0c\u6700\u5c0f\u5143\u7d20\u5373\u4e3a\u4e0a\u4e00\u6b21\u64cd\u4f5c\u540e\u7684\u5143\u7d20\u3002\u5f53\u51fa\u73b0\u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u64cd\u4f5c\u540e\u4e0d\u662f\u6700\u5c0f\u7684\u5143\u7d20\u6216\u53ea\u5269\u4e24\u4e2a\u5143\u7d20\u65f6\u505c\u6b62\u6a21\u62df\u3002\n\n```c++\n//FJ-00445\n//NOIP2020 RP++\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int N=1e6+100,INF=1e9;\nstruct Node\n{\n\tint val,num;\n\t#define val(i) a[i].val\n\t#define num(i) a[i].num\n\tbool operator < (const Node y)\n\t{\n\t\treturn val==y.val?num<y.num:val<y.val;\n\t}\n\tbool operator == (const Node y)\n\t{\n\t\treturn val==y.val && num==y.num;\n\t}\n}a[N];\nint T,n,k,ph,pb;\nqueue<Node> q;\nNode blank={0,0},black={INF,INF};\nNode Max(Node x,Node y)\n{\n\treturn (x<y)?y:x;\n}\nNode Min(Node x,Node y)\n{\n\treturn (x<y)?x:y;\n}\nbool query(Node la)//\u4f20\u5165\u4e0a\u4e00\u6b21\u64cd\u4f5c\u540e\u7684\u5143\u7d20\n{\n\tint cnt=0;\n\tNode bk=Min(pb<ph?a[pb+1]:black,q.size()?q.back():black);//\u6b21\u5c0f\u5143\u7d20\n\twhile(1)\n\t{\n\t\tNode hd=Max(pb<ph?a[ph]:blank,q.size()?q.front():blank);//\u6700\u5927\u5143\u7d20\n\t\tif(a[ph]==hd)\n\t\t\tph--;\n\t\telse\n\t\t\tif(q.size())\n\t\t\t\tq.pop();//\u7ef4\u62a4\u6307\u9488\u548c\u961f\u5217\n\t\tif(hd==bk)\n\t\t\tbreak;//\u53ea\u5269\u4e24\u4e2a\u5143\u7d20\uff0c\u5373\u6b21\u5c0f\u5143\u7d20\u4e0e\u6700\u5927\u5143\u7d20\u76f8\u7b49\n\t\thd.val-=la.val;\n\t\tif(bk<hd)\n\t\t\tbreak;//\u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u64cd\u4f5c\u540e\u4e0d\u662f\u6700\u5c0f\u7684\u5143\u7d20\n\t\tla=hd;cnt++;//\u7ef4\u62a4\u6307\u9488\n\t}\n\treturn cnt&1;//\u5728\u7b2c x \u6b21\u64cd\u4f5c\u7ec8\u6b62\uff0c\u8fd4\u56de x-1 \u7684\u5947\u5076\u6027\n}\nint main()\n{\n\tscanf(\"%d\",&T);\n\tfor(int i=1;i<=T;i++)\n\t{\n\t\tif(i==1)\n\t\t{\n\t\t\tscanf(\"%d\",&n);\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tscanf(\"%d\",&val(j)),num(j)=j;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tscanf(\"%d\",&k);\n\t\t\tfor(int j=1,x,y;j<=k;j++)\n\t\t\t{\n\t\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\t\tval(x)=y;\n\t\t\t}\n\t\t}\n\t\tph=n,pb=1;//\u5206\u522b\u4e3a\u539f\u5e8f\u5217\u6700\u5927\u5143\u7d20\u548c\u6700\u5c0f\u5143\u7d20\u7684\u6307\u9488\n\t\twhile(q.size())\n\t\t\tq.pop();\n\t\twhile(pb<=ph)\n\t\t{\n\t\t\tNode x=Max((ph>pb)?a[ph]:blank,q.size()?q.front():blank);//\u6700\u5927\u5143\u7d20\n\t\t\tif(a[ph]==x)\n\t\t\t\tph--;\n\t\t\telse\n\t\t\t\tq.pop();//\u7ef4\u62a4\u6307\u9488\u548c\u961f\u5217\n\t\t\tx.val-=val(pb);\n\t\t\tif(x<a[pb+1] && n-pb>1)//\u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u64cd\u4f5c\u540e\u662f\u6700\u5c0f\u7684\u5143\u7d20\u4e14\u5269\u4e0b\u7684\u5143\u7d20\u4e0d\u6b62\u4e00\u4e2a\n\t\t\t{\n\t\t\t\tif(query(x))//\u6c42\u89e3\u662f\u5426\u8fdb\u884c\u672c\u6b21\u64cd\u4f5c\n\t\t\t\t\tpb++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tq.push(x);pb++;//\u7ef4\u62a4\u6307\u9488\u548c\u961f\u5217\n\t\t}\n\t\tprintf(\"%d\\n\",n-pb+1);\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1605087487,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "P7078 \u8d2a\u5403\u86c7"
    },
    {
        "content": "\u5982\u679c\u4f60\u60f3\u8981\u5b66\u4e60\u6b63\u89e3\u53ef\u4ee5\u770b\u8fd9\u4e2a \n[\u4e07\u6076\u4e4b\u6e90](https://www.luogu.com.cn/blog/EntropyIncreaser/ying-ye-ri-zhi-2020117-yi-ci-xin-xi-fou-dui-cheng-yin-fa-di-csp2020-t4-post)\n\n\u601d\u8def\u8c8c\u4f3c\u6ca1\u6709\u89c1\u8fc7\u548c\u6211\u4e00\u6837\u7684\u597d\u50cf,\u6211\u7684\u601d\u8def\u662f\u5148\u4e0d\u8003\u8651\u86c7\u806a\u660e\u4e0d\u806a\u660e,\u5047\u8bbe\u86c7\u90fd\u662f\u80fd\u5403\u5c31\u5403,\u8fd9\u6837\u4e00\u5171\u4f1a\u8fdb\u884c$N-1$\u8f6e\u6e38\u620f,\u8bb0\u5f55\u6bcf\u4e00\u8f6e\u6e38\u620f\u662f\u54ea\u4e2a\u86c7\u5403\u6389\u54ea\u4e2a\u86c7,\u5e76\u4e14\u8bb0\u5f55\u7b2c$i$\u6761\u86c7\u662f\u5728\u54ea\u4e00\u8f6e\u6e38\u620f\u6b7b\u4e86.\n\n\u81f3\u4e8e\u5982\u4f55\u5904\u7406\u51fa\u4e0a\u9762\u8fd9\u4e9b\u4e1c\u897f\u6211\u4eec\u653e\u5728\u540e\u9762\u8bb2\u89e3(\u60f3\u4e86\u597d\u957f\u65f6\u95f4,\u95ee\u4e86\u5f88\u591a\u5927\u4f6c\u624d\u60f3\u51fa\u6765\n\n\u77e5\u9053\u4e0a\u9762\u8fd9\u4e9b\u4e1c\u897f\u4ee5\u540e,\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u64a4\u56de\u64cd\u4f5c,\u6211\u4eec\u5012\u7740\u4fbf\u5229\u6bcf\u4e00\u8f6e\u51b3\u6597,\u5224\u65ad\u53d1\u8d77\u4eba\u662f\u9009\u62e9\u7ed3\u675f\u8fd8\u662f\u53d1\u8d77,\u5982\u679c\u9009\u62e9\u7ed3\u675f\u7684\u8bdd,\u4e00\u5b9a\u8981\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\n```cpp\n1.\u6b64\u6b21\u64cd\u4f5c\u662f\u53d1\u8d77\u8005\u7684\u6700\u540e\u4e00\u6b21\u64cd\u4f5c,\n\n2.\u53d1\u8d77\u8005\u4e0d\u662f\u80dc\u5229\u8005,\u5e76\u4e14\u5728\u76ee\u524d\u4e00\u5b9a\u4f1a\u9009\u62e9\u7ed3\u675f\u7684\u64cd\u4f5c\u4e4b\u524d\u6b7b\u4e86\n```\n\u5982\u679c\u6ee1\u8db3\u4e0a\u9762\u4e24\u4e2a\u6761\u4ef6,\u6b64\u6b21\u64cd\u4f5c\u5c31\u662f\u4e00\u4e2a\u4e00\u5b9a\u4f1a\u9009\u62e9\u7ed3\u675f\u7684\u64cd\u4f5c\n\n\u5148\u653e\u4e00\u4e2a70\u5206\u7684\u4ee3\u7801\u5427,\u76f4\u63a5\u7528\u5806\u5904\u7406\u51fa\u6765\u6574\u4e2a\u6e38\u620f\u7684\u8fc7\u7a0b,\u7136\u540e\u5904\u7406.(\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528$set$\u6a21\u62df)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\npriority_queue<pair<int,int> >q;\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > qq;\nint x[1000001];\nint y[1000001];\nint l[1000001];\nint chi[1000001];\nint ci=1;\nint cha=0;\nint nxt[1000001];\nint last[1000001];\nint minn;\nint dead[1000001];\n int a[1000001];\n \n int read()\n{\n    int x=0;\n    int f=1;\n    char ch;\n    ch=getchar( );\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')f=-1;\n        ch=getchar( );\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar( );\n    }\n    return x*f;\n}\n\nint main( )\n{\t\nint t;\n\tt=read( );\n\tpair<int,int>ll;\n\tn=read( );\n\tfor(int i=1;i<=n;i++)\n\t{\t\n\t\ta[i]=read();\n\t} \n\twhile(t--)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tll.first=a[i];\n\t\t\tll.second=i;\n\t\t\tq.push(ll);\n\t\t\tqq.push(ll); \n\t\t}\n\t\tmemset(x,0,sizeof(x));\n\t\tmemset(y,0,sizeof(y));\n\t\tmemset(l,0,sizeof(l));\n\t\tmemset(nxt,0,sizeof(nxt));\n\t\tmemset(last,0,sizeof(last));\n\t\tmemset(dead,0,sizeof(dead));\n\t\tci=1;\n\t\twhile(ci<n)\n\t\t{\n\t\t\tpair<int,int>xx;\n\t\t\tpair<int,int>yy;\n\t\t\txx=q.top( );\n\t\t\twhile(l[xx.second]==1)\n\t\t\t{\n\t\t\t\tq.pop( );\n\t\t\t\txx=q.top( );\n\t\t\t}\n\t\t\tyy=qq.top( );\n\t\t\twhile(l[yy.second]==1)\n\t\t\t{\n\t\t\t\tqq.pop( );\n\t\t\t\tyy=qq.top( );\n\t\t}\n\t\tq.pop( );\n\t\tqq.pop( );\n\t\tx[ci]=xx.second;\n\t\ty[ci]=yy.second;\n\t\tdead[yy.second]=ci;\n\t\tll.first=xx.first-yy.first;\n\t\tll.second=xx.second;\n\t\tchi[xx.second]++;\n\t\tl[yy.second]++; \n\t\tq.push(ll);\n\t\tci++;\n\t\tqq.push(ll);\n\t}\n\twhile(!q.empty( ))q.pop( );\n\twhile(!qq.empty( ))qq.pop( );\n/*\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcout<<dead[i]<<\" \";\n\t}\n\tcout<<endl;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcout<<x[i]<<\" \"<<y[i]<<endl;\n\n\t}*/\n\tfor(int i=n-1;i>=1;i--)\n\t{\n\t\tnxt[i]=last[x[i]];\n\t\tlast[x[i]]=i;\n\t}\n\tminn=n;\n\tint ans=n-1;\n\tfor(int i=n-1;i>=1;i--)\n\t{\n\t\tif((nxt[i]==0||nxt[i]>=minn)&&(dead[x[i]]<minn&&dead[x[i]]!=0))\n\t\t{\n\t\t\tminn=i;\n\t\t\tans=i-1;\n\t\t}\n\t//\tcout<<minn<<\" \";\n\t}\n\t//cout<<endl;\n\tcout<<n-ans<<endl;\n\tif(t==0)continue;\n\telse \n\t{\n\t\tint o;\n\t\to=read();\n\t\tfor(int i=1;i<=o;i++)\n\t\t{\n\t\t\tint h,j;\n\t\t\th=read( );\n\t\t\tj=read();\n\t\t\ta[h]=j;\n\t\t}\n\t}\n\t}\n\t\n}\n```\n\u4f46\u662f\u56e0\u4e3a\u5806\u7684\u64cd\u4f5c\u662fO(nlongn)\u7684\u6240\u4ee5\u53ea\u670970\u5206,\u6240\u4ee5\u76f4\u63a5\u7528\u5806\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u4e0d\u53ef\u53d6\u7684.\n\n\n\u6240\u4ee5\u6211\u5c31\u9009\u62e9\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u505a\u6cd5(\u4e00\u4e2a100\u5206\u7684\u4f2a\u4f5c\u6cd5\n\n\u5148\u5f00\u4e24\u4e2a\u53cc\u7aef\u961f\u5217,\u7136\u540e\u628a\u539f\u672c\u7684\u503c\u5168\u90e8\u653e\u8fdb\u7b2c\u4e00\u4e2a\u961f\u5217\u91cc\u9762,\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u9009\u62e9\u5269\u4e0b\u7684\u6570\u91cc\u9762\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c(\u6bd4\u8f83\u4e24\u4e2a\u961f\u5217\u7684\u5934\u548c\u5c3e),\u8bb0\u5f55\u5dee,\u5982\u679c\u5927\u4e8e\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u6700\u5927\u503c\u6216\u8005\u5c0f\u4e8e\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u5c31\u653e\u5728\u7b2c\u4e00\u4e2a\u961f\u5217\u4e2d,\u5426\u5219\u653e\u5728\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d.\n\n\u8fd9\u79cd\u505a\u6cd5\u5e94\u8be5\u7b97\u662fO(n)\u7684,\u4f46\u662f\u8fd9\u6837\u5e76\u4e0d\u662f\u5b8c\u5168\u6b63\u786e\u7684\u4e00\u4e2a\u5199\u6cd5,\u5728\u4e0d\u8003\u8651\u5e8f\u53f7\u7684\u60c5\u51b5\u4e0b,\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u662f\u5355\u8c03\u7684,\u4f46\u662f\u5728\u8003\u8651\u5e8f\u5217\u7684\u60c5\u51b5\u4e0b\u662f\u4e0d\u6b63\u786e\u7684(\u4e5f\u5c31\u662f\u8bf4\u5dee\u662f\u5355\u8c03\u7684).\n\n\u6240\u4ee5\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u6211\u7528\u66b4\u529b\u7ef4\u62a4,\u5982\u679c\u4ed6\u653e\u5165\u4e00\u4e2a\u65b0\u6570\u540e\u4e0d\u662f\u5355\u8c03\u7684,\u5c31\u624d\u7528\u5192\u6ce1\u6392\u5e8f\u7684\u65b9\u6cd5\u8fdb\u884c\u5904\u7406,\u4f7f\u5e8f\u5217\u4ecd\u7136\u6709\u5e8f.(\u4f46\u662f\u5e94\u8be5\u53ea\u9700\u8981\u5f88\u5c11\u7684\u6b21\u6570)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ndeque<pair<int,int> >f;\ndeque<pair<int,int> >ff;\nint x[1000001];\nint y[1000001];\nint l[1000001];\nint chi[1000001];\nint ci=1;\nint cha=0;\nint nxt[1000001];\nint last[1000001];\nint minn;\nint dead[1000001];\n int a[1000001],n;\nstack<pair<int,int> >lei;\n \n int read()\n{\n    int x=0;\n    int f=1;\n    char ch;\n    ch=getchar( );\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')f=-1;\n        ch=getchar( );\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar( );\n    }\n    return x*f;\n}\nint t;\n\nint main( )\n{\n    t=read( );\n    pair<int,int>ll;\n    n=read( );\n    for(int i=1;i<=n;i++)a[i]=read();\n    while(t--)\n    {\n        while(!f.empty())f.pop_front( );\n        while(!ff.empty())ff.pop_front( );\n        for(int i=n;i>=1;i--)\n        {\n            ll.first=a[i];\n            ll.second=i;\n            f.push_back(ll);\n        }\n        memset(x,0,sizeof(x));\n        memset(y,0,sizeof(y));\n        memset(nxt,0,sizeof(nxt));\n        memset(last,0,sizeof(last));\n        memset(dead,0,sizeof(dead));\n        ci=1;\n        while(ci<n)\n        {\n            pair<int,int>xx;\n            pair<int,int>yy;\n            if(f.empty()==1)\n            {\n                xx=ff.front( );\n                ff.pop_front( );\n                yy=ff.back( );\n                ff.pop_back();\n                ll.first=xx.first-yy.first;\n                ll.second=xx.second;\n                x[ci]=xx.second;\n                y[ci]=yy.second;\n                dead[yy.second]=ci;\n                f.push_front(ll);\n            }\n            else if(ff.empty()==1)\n            {\n                xx=f.front( );\n                f.pop_front( );\n                yy=f.back( );\n                f.pop_back();\n                ll.first=xx.first-yy.first;\n                ll.second=xx.second;\n                if(f.empty()==1)f.push_back(ll);\n                else  if(ll<f.back()) f.push_back(ll);\n                else if(ll>f.front())  f.push_front(ll);\n                else ff.push_front(ll);\n                x[ci]=xx.second;\n                y[ci]=yy.second;\n                dead[yy.second]=ci;\n            }\n            else\n            {\n                if(f.front()>ff.front())\n                {\n                    xx=f.front( );\n                    f.pop_front( );\n                }\n                else\n                {\n                    xx=ff.front( );\n                    ff.pop_front( );\n                }\n                if(f.empty()==1)\n                {\n                    yy=ff.back( );\n                    ff.pop_back( );\n                }\n                else if(ff.empty()==1)\n                {\n                    yy=f.back( );\n                    f.pop_back( );\n                }\n                else if(f.back()<ff.back())\n                {\n                    yy=f.back( );\n                    f.pop_back( );\n                }\n                else\n                {\n                    yy=ff.back( );\n                    ff.pop_back( );\n                }\n                x[ci]=xx.second;\n                y[ci]=yy.second;\n                ll.first=xx.first-yy.first;\n                ll.second=xx.second;\n                dead[yy.second]=ci;\n                if(f.empty()==1)f.push_back(ll);\n                else  if(ll<f.back()) f.push_back(ll);\n                else if(ll>f.front())  f.push_front(ll);\n                else if(ff.empty()==1)ff.push_front(ll);\n                else\n                {\n                    while(ll>ff.back( )&&!ff.empty())\n                    {\n                        lei.push(ff.back( ));\n                        ff.pop_back();\n                    }\n                    ff.push_back(ll);\n                    while(!lei.empty( ))\n                    {\n                        ff.push_back(lei.top( ));\n                        lei.pop( );\n                    }\n                }\n            }\n            ci++;\n        }\n        for(int i=n-1;i>=1;i--)\n        {\n            nxt[i]=last[x[i]];\n            last[x[i]]=i;\n        }\n        minn=n;\n        int ans=n-1;\n        for(int i=n-1;i>=1;i--)\n        {\n            if((nxt[i]==0||nxt[i]>=minn)&&(dead[x[i]]<minn&&dead[x[i]]!=0))\n            {\n                minn=i;\n                ans=i-1;\n            }\n        //    cout<<minn<<\" \";\n        }\n        cout<<n-ans<<endl;\n        if(t==0)continue;\n        else\n        {\n            int o;\n            o=read();\n            for(int i=1;i<=o;i++)\n            {\n                int h,j;\n                h=read( );\n                j=read();\n                a[h]=j;\n            }\n        }\n    }\n}\n```\n\u76f8\u6bd4\u4e0e\u6b63\u89e3\u800c\u8a00,\u8fd9\u4e2a\u7b97\u6cd5\u4ec5\u4ec5\u662f\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5bf9\u9519\u8bef\u8d2a\u5fc3\u7684\u66b4\u529b\u5904\u7406,\u76f8\u5bf9\u6765\u8bf4\u66f4\u5bb9\u6613\u60f3\u4e00\u70b9.\u4f46\u662f\u65f6\u95f4\u5e76\u4e0d\u662f\u5f88\u4f18\u79c0.\n\nu1s1\u88ab\u91d1\u94a9\u7237142857cs\u7684\u6570\u636e\u6740\u6ca1\u4e86\n\n3 3 3 3 3 10 11 13 15 15 16 (\u6bcf\u4e00\u4e2a\u6570\u4ee3\u8868\u8fd9\u4e2a\u6570\u91cd\u590dm\u6b21)\n\n\u5bf9\u4e8e\u4f2a\u505a\u6cd5\u7684\u90a3\u4e2a\u4f7f\u7528\u961f\u5217\u7684\u65b9\u6cd5,\u6211\u4eec\u8003\u8651\u5176\u4ec0\u4e48\u65f6\u5019\u4f1a\u5355\u8c03\u6027\u8c03\u4ea1.\u9996\u5148\u5982\u679c\u6b64\u6b21\u51b3\u6597\u7ed3\u675f\u540e\u5355\u8c03\u6027\u8c03\u4ea1\u4e86,\u90a3\u4e48\u8fd9\u4e2a\u53d1\u8d77\u8005\u4e00\u5b9a\u4e4b\u524d\u81f3\u5c11\u5403\u8fc7\u4e00\u4e2a\u86c7\u4e86(\u56e0\u4e3a\u8c03\u4ea1\u662f\u56e0\u4e3a\u503c\u4e00\u6837\u4f46\u5e8f\u53f7\u5927\u7684\u86c7\u51fa\u73b0\u5728\u4e86\u6700\u540e\u9762),\u5e76\u4e14\u88ab\u5403\u7684\u90a3\u4e2a\u86c7\u4e5f\u4e00\u5b9a\u5403\u8fc7\u5176\u4ed6\u86c7(\u4e3a\u4ec0\u4e48\u5728\u4e0b\u9762\u89e3\u91ca),\u5e76\u4e14\u5982\u679c\u8fdb\u5165\u961f\u52172\u4e86\u8bf4\u660e\u5269\u4e0b\u7684\u90a3\u4e00\u90e8\u5206\u5e76\u4e0d\u662f\u6700\u5c0f\u503c,\u6362\u53e5\u8bdd\u8bf4\u53d1\u8d77\u8005\u662f\u5b89\u5168\u7684.\u6240\u4ee5\u8bf4\u5728\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u7ec8\u6b62\u6a21\u62df\u8fc7\u7a0b\u4e86,\u56e0\u4e3a\n\u88ab\u5403\u7684\u90a3\u6761\u86c7\u4e00\u5b9a\u4f1a\u5728\u81ea\u5df1\u53ef\u4ee5\u51b3\u7b56\u7684\u65f6\u5019\u5c31\u9009\u62e9\u7ec8\u6b62\u6574\u4e2a\u6e38\u620f\u6765\u4fdd\u8bc1\u81ea\u5df1\u7684\u5b89\u5168,\u8fd9\u6837\u7684\u8bdd\u8fc7\u7a0b\u5c31\u7b97O(n)\u7684\u5566.\n\n\u4e3a\u4ec0\u4e48\u88ab\u5403\u7684\u86c7\u4e00\u5b9a\u66fe\u7ecf\u5403\u8fc7\u5176\u4ed6\u86c7\u5462,\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u5403\u8fc7\n\u7684\u8bdd\u6211\u4eec\u5047\u8bbe\u8fd9\u6b21\u662f$a_{x}$\u5403\u4e86$a_{y}$,\u800c\u4e0a\u4e00\u6b21\u8fdb\u961f2\u7684\u662f$a_{xx}$\u5403\u4e86$a_{yy}$;\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\n$a_{x}>a_{xx}$&&$a_{y}<a_{yy}$\u5355\u8c03\u6027\u4e00\u5b9a\u4e0d\u4f1a\u6d88\u5931,\u6240\u4ee5\u88ab\u5403\u7684\u86c7\u4e00\u5b9a\u5403\u8fc7\u5176\u4ed6\u86c7.(\u5982\u679c\u8bc1\u660e\u7684\u4e0d\u5bf9\u6216\u8005\u6709\u66f4\u597d\u7684\u8bc1\u660e\u65b9\u6cd5\u53ef\u4ee5\u79c1\u4fe1\u6211)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ndeque<pair<int,int> >f;\ndeque<pair<int,int> >ff;\nint x[1000001];\nint y[1000001];\nint l[1000001];\nint chi[1000001];\nint ci=1;\nint cha=0;\nint nxt[1000001];\nint last[1000001];\nint minn;\nint dead[1000001];\n int a[1000001],n;\nstack<pair<int,int> >lei;\n \n int read()\n{\n    int x=0;\n    int f=1;\n    char ch;\n    ch=getchar( );\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')f=-1;\n        ch=getchar( );\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar( );\n    }\n    return x*f;\n}\nint t;\n\nint main( )\n{\n    t=read( );\n    pair<int,int>ll;\n    n=read( );\n    for(int i=1;i<=n;i++)a[i]=read();\n    while(t--)\n    {\n        while(!f.empty())f.pop_front( );\n        while(!ff.empty())ff.pop_front( );\n        for(int i=n;i>=1;i--)\n        {\n            ll.first=a[i];\n            ll.second=i;\n            f.push_back(ll);\n        }\n        memset(x,0,sizeof(x));\n        memset(y,0,sizeof(y));\n        memset(nxt,0,sizeof(nxt));\n        memset(last,0,sizeof(last));\n        memset(dead,0,sizeof(dead));\n        ci=1;\n        while(ci<n)\n        {\n            pair<int,int>xx;\n            pair<int,int>yy;\n            if(f.empty()==1)\n            {\n                xx=ff.front( );\n                ff.pop_front( );\n                yy=ff.back( );\n                ff.pop_back();\n                ll.first=xx.first-yy.first;\n                ll.second=xx.second;\n                x[ci]=xx.second;\n                y[ci]=yy.second;\n                dead[yy.second]=ci;\n                f.push_front(ll);\n            }\n            else if(ff.empty()==1)\n            {\n                xx=f.front( );\n                f.pop_front( );\n                yy=f.back( );\n                f.pop_back();\n                ll.first=xx.first-yy.first;\n                ll.second=xx.second;\n                if(f.empty()==1)f.push_back(ll);\n                else  if(ll<f.back()) f.push_back(ll);\n                else if(ll>f.front())  f.push_front(ll);\n                else ff.push_front(ll);\n                x[ci]=xx.second;\n                y[ci]=yy.second;\n                dead[yy.second]=ci;\n            }\n            else\n            {\n                if(f.front()>ff.front())\n                {\n                    xx=f.front( );\n                    f.pop_front( );\n                }\n                else\n                {\n                    xx=ff.front( );\n                    ff.pop_front( );\n                }\n                if(f.empty()==1)\n                {\n                    yy=ff.back( );\n                    ff.pop_back( );\n                }\n                else if(ff.empty()==1)\n                {\n                    yy=f.back( );\n                    f.pop_back( );\n                }\n                else if(f.back()<ff.back())\n                {\n                    yy=f.back( );\n                    f.pop_back( );\n                }\n                else\n                {\n                    yy=ff.back( );\n                    ff.pop_back( );\n                }\n                x[ci]=xx.second;\n                y[ci]=yy.second;\n                ll.first=xx.first-yy.first;\n                ll.second=xx.second;\n                dead[yy.second]=ci;\n                if(f.empty()==1)f.push_back(ll);\n                else  if(ll<f.back()) f.push_back(ll);\n                else if(ll>f.front())  f.push_front(ll);\n                else if(ff.empty()==1)ff.push_front(ll);\n                else\n                {\n                    if(ll>ff.back())\n                    {\n                        break;\n                    }\n                    else ff.push_back(ll);\n                }\n            }\n            ci++;\n        }\n        for(int i=ci-1;i>=1;i--)\n        {\n            nxt[i]=last[x[i]];\n            last[x[i]]=i;\n        }\n        minn=n;\n        int ans=n-1;\n        for(int i=ci-1;i>=1;i--)\n        {\n            if((nxt[i]==0||nxt[i]>=minn)&&(dead[x[i]]<minn&&dead[x[i]]!=0))\n            {\n                minn=i;\n                ans=i-1;\n            }\n        }\n        cout<<n-ans<<endl;\n        if(t==0)continue;\n        else\n        {\n            int o;\n            o=read();\n            for(int i=1;i<=o;i++)\n            {\n                int h,j;\n                h=read( );\n                j=read();\n                a[h]=j;\n            }\n        }\n    }\n}\n\n\n\n```\n\n",
        "postTime": 1604978753,
        "uid": 243750,
        "name": "\u661f\u7a7a\u821e\u6db5",
        "ccfLevel": 6,
        "title": "N\u65b9\u8fc7\u767e\u4e07,\u5173\u4e8eS\u7ec4T4\u7684\u53e3\u80e1"
    },
    {
        "content": "\u8fd9\u9053\u9898\u65e0\u8bba\u662f\u601d\u7ef4\u8fd8\u662f\u5b9e\u73b0\u4e0a\u90fd\u6709\u4e00\u5b9a\u7684\u96be\u5ea6\u3002\n\n# \u601d\u7ef4\n\n\u9996\u5148\uff0c\u660e\u786e\u4e00\u4e2a\u6982\u5ff5\uff1a**\u53ea\u8981\u51b3\u6597\u540e\u5f3a\u86c7\u4e0d\u4f1a\u6ca6\u4e3a\u6700\u5f31\u7684\u86c7\uff0c\u5b83\u5c31\u4e00\u5b9a\u4f1a\u5403\u3002** \u8bc1\u660e\u5982\u4e0b\uff1a\n\n+ \u6700\u5f3a\u86c7\u51b3\u6597\u540e\u4e00\u5b9a\u6bd4\u6b21\u5f3a\u86c7\u51b3\u6597\u540e\u5f3a\u3002\n$$\na_1>a_2>a_3>a_4\\rightarrow a_1-a_4>a_2-a_3\n$$\n+ \u6b21\u5f3a\u86c7\u51b3\u6597\u540e\u4e00\u5b9a\u5403\u4e0d\u4e86\u6700\u5f3a\u86c7\u3002\n\n+ \u66f4\u5f31\u86c7\u540c\u7406\u3002\n\n\u8bc1\u6bd5\u3002\n\n\u5176\u6b21\uff0c\u5982\u679c\u51b3\u6597\u540e\u6700\u5f3a\u86c7\u4f1a\u6ca6\u4e3a\u6700\u5f31\u86c7\uff0c\u5219\u9700\u8981\u770b\u51b3\u6597\u540e\u7684\u65b0\u7684\u6700\u5f3a\u86c7\u80fd\u5426\u5403\u6389\u5b83\u3002\n\n\u800c\u82e5\u65b0\u7684\u6700\u5f3a\u86c7\u51b3\u6597\u540e\u4e5f\u4f1a\u6ca6\u4e3a\u6700\u5f31\u86c7\uff0c\u5219\u7ee7\u7eed\u5411\u4e0b\uff0c\u76f4\u5230\u6709\u86c7\u80fd\u5403\u4e3a\u6b62\u3002\n\n\u901a\u8fc7\u5947\u5076\u6027\u53ef\u5f97\uff0c\u82e5\u5224\u65ad\u7684\u5c42\u6570\u4e3a\u5947\u6570\uff0c\u5219\u539f\u6700\u5f3a\u86c7\u4e0d\u80fd\u51b3\u6597\uff0c\u5426\u5219\u53ef\u4ee5\u3002\n# \u5b9e\u73b0\n\u8f93\u5165\u5904\u7406\u540e\uff0c\u4e3b\u5faa\u73af\u7528\u4e8e\u6a21\u62df\u51b3\u6597\u3002\u7528\u4e00\u4e2a\u53d8\u91cf `r` \u5b58\u50a8 *\u5c40\u6570* \uff0c\u53d8\u91cf `question` \u5b58\u50a8\u86c7\u7684 *\u63d0\u95ee* \u5728\u54ea\u5c40 \uff08\u5373\u86c7\u5904\u4e8e\u51b3\u6597\u540e\u4f1a\u6ca6\u4e3a\u6700\u5f31\u86c7\u7684\u72b6\u6001\uff0c\u9700\u8981 *\u5411\u4e0b\u5224\u65ad*\uff09\uff0c `tot` \u5b58\u6b7b\u86c7\u6570\u3002\n\n\u53d6\u51fa\u6700\u5927\u3001\u6700\u5c0f\u540e\uff1a\n\n+ \u82e5\u80fd\u5403\uff08\u4e0d\u4f1a\u6ca6\u4e3a\u6700\u5f31**\u6216**\u53ea\u5269\u4e24\u53ea\uff09\uff0c\u5219**\u5148**\u5224\u65ad\u63d0\u95ee\uff0c\u82e5 `r - question` \u4e3a\u5076\u6570\uff0c\u5219\u9700 `++tot` \u518d\u9000\u51fa\uff0c\u5426\u5219\u76f4\u63a5\u9000\u51fa\u3002\uff08\u4e0a\u6587\u5df2\u89e3\u91ca\uff09\u3002\u7136\u540e\u518d\u8fdb\u884c\u51b3\u6597\u7684 `++tot` \u3002\uff08\u5176\u5b9e\uff0c\u8fd9\u91cc\u6211\u4e00\u5f00\u59cb\u60f3\u9012\u5f52\u5224\u65ad\u7684\uff0c\u4f46\u6211\u53d1\u73b0\u5224\u65ad\u80fd\u5403\u548c\u5982\u6b64\u76f8\u4f3c\uff0c\u4fbf\u6709\u4e86\u5982\u6b64\u5947\u602a\u7684*\u6a21\u62df\u9012\u5f52*\uff09\n\n **\u6ce8\u610f\uff1a\u5f53\u4e24\u6761\u86c7\u4f53\u529b\u76f8\u540c\u65f6\uff0c\u5b83\u4eec\u662f\u4e0d\u4f1a\u51b3\u6597\u7684\uff0c\u6240\u4ee5\u4e0a\u6587\u5947\u5076\u6027\u5728\u6ee1\u8db3\u8be5\u6761\u4ef6\u65f6\u9700\u8c03\u6362\uff0c\u5373\u5947\u6570\u624d** `++tot` \u3002\n\n+ \u5426\u5219\uff0c\u53ea\u8981 `question` \u4e0d\u4e3a\u521d\u503c\uff0c\u5c31 `question = r` \uff0c**\u5e76\u628a\u51b3\u6597\u540e\u7684\u86c7\u653e\u56de**\u3002\n\n\u4e3a\u4e86\u80fd\u5feb\u901f\u53d6\u51fa\u6700\u5927\u503c\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a *\u795e\u5947\u7684\u6570\u636e\u7ed3\u6784* \u7ef4\u62a4\u5e78\u5b58\u7684\u6700\u5f3a\u3001\u6700\u5f31\u86c7\u3002\u4e8e\u662f\u6211\u4eec\u7b2c\u4e00\u65f6\u95f4\u60f3\u5230\u4e86 `set` \u3002\n\n$\\text{Time Limit Error 70}$\n\n\u54b3\u54b3\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u521a\u5f00\u59cb\u539f\u6570\u7ec4\u662f\u6392\u5e8f\u597d\u7684\uff0c\u800c\u7528 `set` \u662f $O(Tn\\log n)$ \uff0c\u8fd9\u4e0d\u7531\u5f97\u8ba9\u6211\u4eec\u601d\u8003 $O(Tn)$ \uff0c\u7528\u7ebf\u6027\u50a8\u5b58\u3002\n\n\u89c2\u5bdf\u51b3\u6597\u540e\u7684\u86c7\uff0c\u4f53\u529b\u503c\u4e00\u5b9a\u4f1a\u6bd4\u524d\u4e00\u4e2a\u51b3\u6597\u7684\u4f4e\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u51b3\u6597\u540e\u7684\u86c7\u7528 `deque` \u5b58\u8d77\u6765\uff0c\u51b3\u6597\u5b8c\u7684\u86c7\u653e\u5728\u961f\u9996\uff0c\u6700\u5c0f\u503c\u81ea\u7136\u4e5f\u5728\u961f\u9996\u53d6\uff1b\u5c06\u539f\u6570\u7ec4\u5b58\u5165\u53e6\u4e00\u4e2a `deque` \u3002\u8fd9\u6837\u6700\u5927\u503c\u5c31\u662f\u4e24\u4e2a\u961f\u5217\u961f\u5934\u7684\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u540c\u7406\u3002\n\n\u5b8c\u6bd5\uff0c\u4e0a\u4ee3\u7801\u3002\n# \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define P pair<int, int>\n/***\u2193\u5feb\u8bfb\u5feb\u5199\u597d\u4e60\u60ef\u4e0b***/\n#define wr(x) write(x, false)\nvoid write(int ans, bool bk) {\n    if (ans < 0)\n        putchar('-'), ans = -ans;\n    if (ans == 0) {\n        if (!bk)\n            putchar('0');\n        return;\n    }\n    write(ans / 10, true);\n    putchar(ans % 10 ^ '0');\n}\nvoid qr(int &ret) {\n    int x = 0, f = 0;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') f |= ch == '-', ch = getchar();\n    while (ch >= '0' && ch <= '9') x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n    ret = f ? -x : x;\n}\n/***\u2191\u5feb\u8bfb\u5feb\u5199\u597d\u4e60\u60ef\u2191***/\nP operator-(P a, P b) {  //\u51b3\u6597\n    return P(a.first - b.first, a.second);\n}\nint a[1000005];\ndeque<P> p, q;  // p:\u539f\u6570\u7ec4\uff0cq\uff1a\u51b3\u6597\u540e\u3002\nint n;\nP fmax() {  //\u53d6\u51fa\u5e76\u5220\u9664\u6700\u5927\u503c\n    P ret;\n    if (p.empty()) {\n        ret = q.back();\n        q.pop_back();\n    } else if (q.empty()) {\n        ret = p.back();\n        p.pop_back();\n    } else if (p.back() > q.back()) {\n        ret = p.back();\n        p.pop_back();\n    } else {\n        ret = q.back();\n        q.pop_back();\n    }\n    return ret;\n}\nP fmin() {  //\u53d6\u51fa\u5e76\u5220\u9664\u6700\u5c0f\u503c\n    P ret;\n    if (p.empty()) {\n        ret = q.front();\n        q.pop_front();\n    } else if (q.empty()) {\n        ret = p.front();\n        p.pop_front();\n    } else if (p.front() < q.front()) {\n        ret = p.front();\n        p.pop_front();\n    } else {\n        ret = q.front();\n        q.pop_front();\n    }\n    return ret;\n}\nP ndmin() {  //\u53ea\u53d6\u51fa\u4e0d\u5220\u9664\u6700\u5c0f\u503c\n    if (p.empty() && q.empty())\n        return P(0, 0);//\u9632RE \n    if (p.empty())\n        return q.front();\n    else if (q.empty())\n        return p.front();\n    else if (p.front() < q.front())\n        return p.front();\n    else\n        return q.front();\n}\nvoid solve() {\n    p.clear(), q.clear();\n    for (int i = 1; i <= n; ++i) {\n        p.push_back(P(a[i], i));\n    }\n    P MAX, MIN, nextmin;\n    int question = 0, r = 0, tot = 0;\n    while (1) {  //\u4e3b\u5faa\u73af\n        ++r;\n        if (p.size() + q.size() == 1)\n            break;\n        MAX = fmax(), MIN = fmin();\n        nextmin = ndmin();\n        if (MAX - MIN >= nextmin || p.empty() && q.empty()) {  //\u80fd\u51b3\u6597\n            bool cannot = (MAX - MIN).first == 0;//\u7279\u5224\n            q.push_front(MAX - MIN);\n            if (question) {\n                if (r - question & 1) {\n                    if (cannot)\n                        ++tot;\n                    break;\n                } else {\n                    if (!cannot)\n                        ++tot;\n                    break;\n                }\n            }\n            ++tot;\n        } else {\n            q.push_front(MAX - MIN);\n            if (!question)\n                question = r;\n        }\n    }\n    wr(n-tot);\n    putchar('\\n');\n}\nint main() {\n    int T;\n    cin >> T;\n    for (int t = 1; t <= T; ++t) {\n        if (t == 1) {\n            qr(n);\n            for (int i = 1; i <= n; ++i) qr(a[i]);\n        } else {\n            int k;\n            qr(k);\n            for (int i = 1; i <= k; ++i) {\n                int x, y;\n                qr(x), qr(y);\n                a[x] = y;\n            }\n        }\n        solve();\n    }\n}\n```",
        "postTime": 1626685162,
        "uid": 383785,
        "name": "Hagasei",
        "ccfLevel": 6,
        "title": "P7078 \u8d2a\u5403\u86c7\u9898\u89e3"
    },
    {
        "content": "> $Q$\uff1a\u6211\u4e3a\u4ec0\u4e48\u8981\u5199\u8fd9\u7bc7\u9898\u89e3\uff1f\n\n> $A$\uff1a~~\u6211\u662f\u9ebb\u7701\u5e7c\u513f\u56ed\u8df3\u7ef3\u547c\u5566\u5708\u53cc\u5b66\u4f4d\u6bd5\u4e1a\uff0c\u7814\u7a76\u751f\u8bfb\u7684\u662f\u9633\u5149\u5b66\u524d\u73ed\uff0c\u73b0\u5728\u662f\u5251\u6865\u5c0f\u5b66\u53cc\u5b66\u4f4d\u535a\u58eb\u540e\uff0c\u6211\u60f3\u6211\u6bd4\u8f83\u6709\u8d44\u683c\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u3002~~\n\u6211\u4ea4\u4e86\u4e24\u9875\u624dAC...\n\n[\u535a\u5ba2\u98df\u7528\u5e94\u8be5\u4e0d\u4f1a\u66f4\u4f73](https://www.luogu.com.cn/blog/EXODUS/p7078-ti-xie)\n\n###### \u4ee5\u4e0b\u662f\u6b63\u6587\u90e8\u5206\n------------\n\n\u8fd9\u9053\u9898\u662f\u8003\u5bdf\u601d\u7ef4\u7684\u795e\u4ed9\u9898\u3002\n\n\u770b\u5230\u9898\u76ee\uff0c\u53ef\u4ee5\u8003\u8651\u5148\u624b\u73a9\u4e00\u4e0b\u3002\n\n- $step\\ 1$\uff1a\n\u5982\u679c\u8bf4\u73b0\u5728\u8fd9\u6761\u6700\u5f3a\u7684\u86c7\u53eb\u505a\u5c0fA\uff0c\u5e76\u4e14\u4ed6\u60f3\u8981\u5403\u6389\u6700\u5f31\u7684\u5c0fB\u3002\u90a3\u4e48\u5c0fA\u5982\u679c\u4e0d\u662f\u5269\u4e0b\u7684\u6700\u5f31\u7684\u86c7\uff0c\u5219\u4ed6\u4e00\u5b9a\u4f1a\u5403\u3002\n\n  \u6211\u4eec\u6765\u6a21\u62df\u4e00\u4e0b\u5c0fA\u7684\u6e38\u620f\u8fc7\u7a0b\u3002\n\n  \u5c0fA\u5148\u5403\u6389\u4e86\u5c0fB\uff0c\u7136\u540e\u6210\u4e3a\u4e86\u4e00\u4e2a\u6700\u5f3a\u86c7\u4e0e\u6700\u5f31\u86c7\u4e4b\u95f4\u7684\u86c7\u3002\u90a3\u4e48\u4e0b\u4e00\u6b21\uff0c\u82e5\u76ee\u524d\u7684\u6700\u5f3a\u86c7\u5c0fC\u5c06\u9009\u62e9\u5403\u6389\u5f53\u524d\u7684\u6700\u5f31\u86c7\u5c0fD\u6216\u4e0d\u5403\uff0c\u5982\u679c\u5403\uff0c\u7531\u4e8e\u5c0fC\u7684\u80fd\u529b\u4e00\u5b9a\u5c0f\u4e8e\u5c0fA\uff0c\u5c0fD\u7684\u80fd\u529b\u503c\u4e00\u5b9a\u5927\u4e8e\u5c0fB\uff0c\u5219\u6709$A.power-B.power > C.power-D.power$\uff08\u5728\u8fd9\u91cc$power$\u662f\u6307\u80fd\u529b\u503c\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u5c0fC\u4e0d\u6b7b\uff0c\u5c0fA\u4e00\u5b9a\u6d3b\u7740\uff08\u56e0\u4e3a\u5c0fC\u7684\u5269\u4f59\u80fd\u529b\u5c0f\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5c0fA\u6709\u4e2a\u57ab\u80cc\u7684\uff09\uff1b\u82e5\u4e0d\u5403\uff0c\u5219\u6e38\u620f\u7ed3\u675f\uff0c\u5c0fA\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u6b7b\u3002\n  \n- $step\\ 2$\n\u5c0fB\u8bf4\uff1a\u4e0d\u884c\uff0c\u6211\u8981\u4e89\u6c14\u4e00\u70b9\uff0c\u8ba9\u5c0fA\u53d8\u6210\u6700\u5c0f\u7684\u3002\n\n  \u4e8e\u662f\uff0c\u5c0fA\u53d8\u6210\u6700\u5c0f\u7684\u4e86\u3002\n\n  \u6240\u4ee5\uff0c\u5c0fA\u5230\u5e95\u6562\u4e0d\u6562\u5403\u5c0fB\u5462\uff1f\n  \n  \u9996\u5148\uff0c\u5982\u679c\u5c0fA\u4e5f\u6bd4\u8f83\u4e89\u6c14\uff0c\u8ba9\u73b0\u5728\u7684\u6700\u5f3a\u86c7\u5c0fC\u5403\u6389\u5b83\u4ee5\u540e\u53d8\u6210\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\uff1a\u5c0fC\u6562\u4e0d\u6562\u5403\u5c0fA\uff1f\n  \n  \u518d\u6b21\u5411\u4e0b\u5ef6\u4f38\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u9012\u5f52\u7684\u95ee\u9898\uff0c\u53ea\u8981\u4e0d\u65ad\u5224\u65ad\u5c31\u53ef\u4ee5\u4e86\uff0c\u8bf4\u767d\u4e86\uff0c\u5c31\u662f\u628a\u5c0fA\u7684\u7f16\u53f7\u5b9a\u4e3a$0$\uff0c\u6bcf\u6b21\u9012\u5f52\u628a\u7f16\u53f7\u52a0$1$\uff0c\u628a\u6562\u653e\u5fc3\u5403\u6389\u5c0fX\u7684\u86c7\u7684\u7f16\u53f7\u5b9a\u4e3a$M$\uff0c\u5982\u679c$M\\%2=0$\uff0c\u5219\u5c0fA\u5c31\u53ef\u4ee5\u653e\u5fc3\u5403\uff0c\u7531\u4e8e\u4e0b\u4e00\u6761\u86c7\u4e3a\u4e86\u4fdd\u547d\u4e00\u5b9a\u4e0d\u5403\u5c0fA\uff0c\u6240\u4ee5\u6e38\u620f\u4e00\u5b9a\u7ed3\u675f\u3002\n  \n \u8003\u8651\u7528\u5806\u6216\u8005$set$\u4e00\u7c7b\u7684\u4e1c\u897f\u7ef4\u62a4\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(Tnlogn)=$\u53cd\u6b63\u8fc7\u4e0d\u53bb\u3002\n \n \u8fd9\u4e2a\u65f6\u5019\uff0c\u4e00\u4e2a\u53eb[OMG_wc](https://www.luogu.com.cn/user/54357)\uff08%%%\uff09\u7684\u5927\u4f6c\u6a2a\u7a7a\u51fa\u4e16\uff0c\u5e76\u5927\u558a\u4e00\u53e5\uff1a\n \n > \u4f60\u518d\u8bfb\u4e00\u904d\u9898\uff01\uff01\uff01\n \n > \u4fdd\u8bc1\u6bcf\u7ec4\u6570\u636e\uff08\u5305\u62ec\u6240\u6709\u4fee\u6539\u5b8c\u6210\u540e\u7684\uff09\u7684$a_i$\n  \u4ee5\u4e0d\u964d\u987a\u5e8f\u6392\u5217\n\n\u8fd9\u4e2a\u5927\u4f6c\u53d1\u73b0\uff1a\u6211\u4eec\u53ef\u4ee5\u7528$deque$\uff08\u53cc\u7aef\u961f\u5217\uff09\u6765\u7ef4\u62a4\u3002\n- $step\\ 3$\n\u53cc\u7aef\u961f\u5217\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u5efa\u7acb\u4e24\u4e2a\u53cc\u7aef\u961f\u5217$q1$\uff0c$q2$\u3002\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u5148\u628a\u6240\u6709\u7684\u6570\u636e\u653e\u5165$q1$\uff0c\u7531\u9898\u610f\u5f97$q1$\u503c\u9012\u589e\uff0c\u7136\u540e\u628a\u5403\u6389\u5c0f\u86c7\u540e\u7684\u5927\u86c7\u4e22\u8fdb\u7b2c\u4e8c\u4e2a\u961f\u5217$q2$\u4e2d\uff0c\u7531$step\\ 1$\u63a8\u5bfc\u53ef\u77e5$q2$\u503c\u9012\u589e\uff0c\u5219\u6700\u5927\u503c\u4e3a$q1$\uff0c$q2$\u7684\u5c3e\u90e8\u6700\u5927\u503c\uff0c\u6700\u5c0f\u503c\u4e3a$q1$\u5934\u90e8\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define mp make_pair\n#define pr pair<int,int>\nusing namespace std;\nint n,k;\ndeque<pair<int,int> >q1;\ndeque<pair<int,int> >q2;\nint cnt=0;\nint T;\nint snake[1428571];\ninline void init(){\n\twhile(!q1.empty()){\n\t\tq1.pop_back();\n\t}\n\twhile(!q2.empty()){\n\t\tq2.pop_back();\n\t}\n}\ninline void read_in(int ID){\n\tif(ID==1){\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&snake[i]);\n\t\t\tq1.push_back(mp(snake[i],i));\n\t\t}\n\t\t//cout<<n;\n\t}\n\telse{\n\t\tscanf(\"%d\",&k);\n\t\tfor(int i=1;i<=k;i++){\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tsnake[x]=y;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tq1.push_back(mp(snake[i],i));\n\t\t}\n\t}\n}\ninline pr get_max(){\n\tpr maxn;\n\tif(q2.empty()||!q1.empty()&&q1.back()>q2.back()){\n\t\tmaxn=mp(q1.back().first,q1.back().second);\n\t\tq1.pop_back();\n\t}else{\n\t\tmaxn=mp(q2.back().first,q2.back().second);\n\t\tq2.pop_back();\n\t}\n\treturn maxn;\n}\nint main()\n{\n\tfreopen(\"snakes4.in\",\"r\",stdin);\n\tscanf(\"%d\",&T);\n\tfor(int qwert=1;qwert<=T;qwert++){\n\t\tread_in(qwert);\n\t\tint ans=0;\n\t\twhile(true){\n\t\t\tif(q1.size()+q2.size()==2){\n\t\t\t\tans=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpr weak,strong,minu;\n\t\t\tweak=q1.front();\n\t\t\tq1.pop_front();\n\t\t\tstrong=get_max();\n\t\t\tminu=mp(strong.first-weak.first,strong.second);\n\t\t\tif(q1.empty()||q1.front()>minu){\n\t\t\t\tans=q1.size()+q2.size()+2;\n\t\t\t\tint tot=0;\n\t\t\t\twhile(true){\n\t\t\t\t\ttot++;\n\t\t\t\t\tif(q1.size()+q2.size()+1==2){\n\t\t\t\t\t\tans-=(!(tot&1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tpr strong_now;\n\t\t\t\t\tstrong_now=get_max();\n\t\t\t\t\tminu=mp(strong_now.first-minu.first,strong_now.second);\n\t\t\t\t\tif((q1.empty()||minu<q1.front())&&(q2.empty()||minu<q2.front())){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tans-=(!(tot&1));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}else{\n\t\t\t\tq2.push_front(minu);\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t\tinit();\n\t}\n\treturn 0;\n}\n```\n\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u66b4\u8e29\n\n\u6c42\u4e2a\u8d5e\uff08\u9003~~",
        "postTime": 1613571567,
        "uid": 373699,
        "name": "EXODUS",
        "ccfLevel": 0,
        "title": "P7078\u9898\u89e3"
    },
    {
        "content": "UPD: \u8865\u5145\u4e86\u4e00\u6761\u8d2a\u5fc3\u7ed3\u8bba\u7684\u5f52\u7eb3\u8bc1\u660e\u3002\n\n## \u9898\u610f\n\n\u539f\u9898\uff1a[[CSP-S2020] \u8d2a\u5403\u86c7](https://www.luogu.com.cn/problem/P7078)\n\n- \u86c7\u6309\u6743\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u7f16\u53f7\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\u3002\n\n- \u6bcf\u6b21\u6700\u5927\u7684\u86c7\u53ef\u4ee5\u9009\u62e9\u5403\u6700\u5c0f\u7684\u86c7\uff0c\u5e76\u628a\u6743\u51cf\u53bb\u6700\u5c0f\u7684\u86c7\u4f5c\u4e3a\u65b0\u6743\uff1b\u6216\u8005\u9009\u62e9\u7ed3\u675f\u6e38\u620f\u3002\n\n- \u86c7\u5e0c\u671b\u5728\u6d3b\u7740\u7684\u524d\u63d0\u4e0b\u5403\u66f4\u591a\u7684\u86c7\uff0c\u5e76\u4e14\u86c7\u8db3\u591f\u806a\u660e\u3002\n\n- \u6c42\u6700\u540e\u5269\u51e0\u6761\u86c7\u3002\n\n- \u591a\u7ec4\u6d4b\u8bd5\u3002\n\n## \u5206\u6790\n\n\u8fd9\u662f\u8d2a\u5fc3\u4ee5\u53ca\u535a\u5f08\u7efc\u5408\u3002\n\n\u7ed3\u8bba\uff1a\n\n> 1.\u5982\u679c\u5f53\u524d\u6700\u5927\u7684\u86c7\u5403\u4e86\u6700\u5c0f\u7684\u86c7\uff0c\u6ca1\u6709\u6210\u4e3a\u65b0\u7684\u6700\u5c0f\u7684\u86c7\uff0c\u5fc5\u7136\u9009\u62e9\u5403\u3002\u7279\u6b8a\u7684\uff0c\u4e24\u6761\u86c7\u7684\u65f6\u5019\u5fc5\u7136\u4f1a\u9009\u62e9\u5403\u3002\n> 2.\u5982\u679c\u4f1a\u6210\u4e3a\u6700\u5c0f\u7684\u86c7\uff0c\u9700\u8981\u8003\u8651\u8fd8\u4f1a\u7ecf\u8fc7\u591a\u5c11\u8f6e\u5230\u8fbe\u4e00\u4e2a\u4e0a\u8ff0 1 \u7684\u5c40\u9762\u3002\u5982\u679c\u76f8\u8ddd\u8f6e\u6570\u4e3a\u5076\u6570\u5219\u5403\uff0c\u5426\u5219\u4e0d\u5403\u5e76\u7ed3\u675f\u3002\n\n\u5bf9\u4e8e 1\uff0c\u663e\u7136\u53ef\u4ee5\u5f52\u7eb3\u8bc1\u660e\u3002\n\n- $n=2,3$ \u65f6\u6210\u7acb\u3002\n- \u5047\u8bbe $n$ \u6761\u86c7\u7684\u65f6\u5019\u6210\u7acb\u3002\u65b0\u52a0\u5165\u7b2c $n+1$ \u6761\u86c7\u540e\uff0c\u8bb0\u6700\u5927\u3001\u6b21\u5927\u3001\u6b21\u5c0f\u3001\u6700\u5c0f\u7684\u86c7\u5206\u522b\u4e3a $a,b,c,d$ \u3002\u5373\u8981\u8bc1\u660e $c<a-d$ \u65f6 $a-d$ \u4e0d\u4f1a\u88ab\u5403\u6389\u3002\u7531\u4e8e $n$ \u6761\u86c7\u65f6\u547d\u9898\u6210\u7acb\uff0c\u6240\u4ee5\u8981\u4e48 $b$ \u9009\u62e9\u4e0d\u5403\uff0c\u7ed3\u675f\u6e38\u620f\uff0c\u6b64\u65f6 $n+1$ \u7684\u547d\u9898\u6210\u7acb\uff1b\u8981\u4e48 $b$ \u9009\u62e9\u5403 $c$\uff0c\u4e14\u5fc5\u7136\u6ee1\u8db3 $b-c$ \u4e0d\u4f1a\u88ab\u5403\u6389\u3002\u7531\u4e8e $a-d>b-c$ \uff0c\u6240\u4ee5 $a-d$ \u4e5f\u5fc5\u7136\u4e0d\u4f1a\u88ab\u5403\u6389\uff0c\u6240\u4ee5\u547d\u9898\u6210\u7acb\u3002\n\n\u5bf9\u4e8e 2\uff0c\u8003\u8651\u8fbe\u5230 1 \u5c40\u9762\u7684\u65f6\u5019\u4e3a\u7b2c $k$ \u8f6e\uff0c\u6b64\u65f6\u6700\u5c0f\u7684\u86c7\u5fc5\u5b9a\u4f1a\u88ab\u5403\u6389\u3002\u90a3\u4e48\u5728 $k-1$ \u8f6e\u7684\u65f6\u5019\uff0c\u6700\u5927\u7684\u86c7\u82e5\u9009\u62e9\u5403\uff0c\u5c31\u4f1a\u53d8\u6210\u6700\u5c0f\u7684\u86c7\uff0c\u8fdb\u800c\u5728\u7b2c $k$ \u8f6e\u88ab\u5403\u6389\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u9009\u62e9\u5403\u3002\u56e0\u6b64 $k-2$ \u8f6e\u7684\u6700\u5927\u86c7\u4e0d\u4f1a\u56e0\u4e3a\u53d8\u6210\u6700\u5c0f\u7684\u86c7\u800c\u5728\u7b2c $k-1$ \u8f6e\u88ab\u5403\u6389\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u5403\uff0c\u56e0\u6b64\u4ed6\u4f1a\u9009\u62e9\u5403\u3002\u540c\u7406\u5f80\u4e0a\u63a8\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u6b21\u53ef\u4ee5\u53d6\u51fa\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u5e76\u63d2\u5165\u65b0\u503c\u3002\u914d\u5408\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u6a21\u62df\u5373\u53ef\u3002\n\n\u7531\u4e8e $n \\le 10^6$ \u5e76\u4e14 $T \\le 10$ \uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4e0d\u80fd\u5e26 $\\log$ \uff0c\u5fc5\u987b\u662f\u7ebf\u6027\u7684\u3002\n\n\u5f15\u7406\uff1a\n\n> \u540e\u5403\u7684\u86c7\u5403\u4e4b\u540e\u53d8\u6210\u7684\u86c7 \u5fc5\u5b9a\u5c0f\u4e8e \u5148\u5403\u7684\u86c7\u5403\u4e4b\u540e\u53d8\u6210\u7684\u86c7\u3002\uff08\u56e0\u4e3a\u6709\u7b2c\u4e8c\u5173\u952e\u5b57\u5728\uff0c\u8fd9\u91cc\u4e0d\u8003\u8651\u7b49\u53f7\uff09\n\n\u53ef\u4ee5\u53cd\u8bc1\u8bc1\u660e\u3002\n\n\u8003\u8651 $a>b>c>d>e$ \u3002\u5fc5\u7136\u6709 $a$ \u5403 $e$ \u53d8\u6210 $a-e$ \u3002\n\n- \u82e5 $a-e>b$ \uff0c\u6700\u5927\u86c7\u8fd8\u662f $a$ \uff0c\u5fc5\u7136\u6ee1\u8db3\u5f15\u7406\u3002\n- \u82e5 $b>a-e>c$\uff0c\u5219\u4e0b\u4e00\u8f6e $b$ \u5403 $d$ \u53d8\u6210 $b-d$ \uff0c\u663e\u7136 $a-e>c>b-d$ \uff0c\u6700\u5927\u7684\u86c7\u8fd8\u662f $a$\uff0c\u7ee7\u7eed\u8fdb\u884c\u4e0b\u53bb\u65e0\u6cd5\u63a8\u7ffb\u5f15\u7406\u3002\n- \u82e5 $c > a-e > d$ \uff0c\u4e0b\u4e00\u8f6e $b$ \u5403 $d$ \u53d8\u6210 $b-d$ \uff0c\u5c40\u9762\u53d8\u6210 $c>a-e>b-d$ \u3002\u4e0b\u4e00\u8f6e\u6709 $c$ \u5403 $b-d$ \u53d8\u6210 $c-b+d$\u3002\u5047\u8bbe\u4e0d\u6ee1\u8db3\u5f15\u7406\uff0c\u5373 $c-b+d>a-e$ \u3002\u7531\u4e8e $c-b<0$\uff0c\u6545\u6709 $d>a-e$ \u3002\u4f46\u8fd9\u79cd\u60c5\u51b5\u662f\u6ee1\u8db3 $a-e>d$ \u7684\uff0c\u77db\u76fe\uff0c\u6545\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u539f\u547d\u9898\u6210\u7acb\u3002\n- \u82e5 $d > a-e$ \uff0c$a$ \u6210\u4e86\u6700\u5c0f\u7684\u86c7\uff0c\u6839\u636e\u8d2a\u5fc3\u7ed3\u8bba\uff0c\u5b83\u4e0d\u4f1a\u88ab\u5403\u6389\uff0c\u6e38\u620f\u7ed3\u675f\uff0c\u6545\u6ee1\u8db3\u5f15\u7406\u3002\n\n\u7efc\u4e0a\uff0c\u5f15\u7406\u6210\u7acb\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c [[NOIP2016]\u86af\u8693](https://www.luogu.com.cn/problem/P2827) \u7684\u65b9\u6cd5\uff0c\u5f00\u4e24\u4e2a\u961f\u5217\uff0c\u5728\u7ef4\u62a4\u65f6\u4fdd\u8bc1\u5206\u522b\u5355\u589e\u3002\u8fd9\u53ef\u4ee5 $O(1)$ \u53d6\u51fa\u5168\u5c40\u6700\u5927\u503c\u6700\u5c0f\u503c\u3002\u5177\u4f53\u5730\uff0c\u5148\u628a\u6574\u4e2a\u6570\u5217\u4e22\u8fdb $q_1$\uff0c\u6bcf\u6b21\u5403\u51fa\u7684\u65b0\u86c7\u4ece\u961f\u5934\u4e22\u8fdb $q_2$ \u3002\u7531\u5f15\u7406\u77e5 $q_2$ \u7ee7\u7eed\u5355\u589e\u3002\u56e0\u6b64\u53ef\u4ee5\u7ebf\u6027\u7ef4\u62a4\u3002\n\n\u5982\u679c\u8981\u51cf\u5c0f\u5e38\u6570\u53ef\u4ee5\u624b\u5199\u961f\u5217\uff0c\u4f46\u672c\u4eba\u624b\u5199\u4e4b\u540e\u611f\u89c9\u8fd9\u91cc\u76f4\u63a5\u7528 `deque` \u66f4\u65b9\u4fbf\u3002\n\n\u5176\u5b83\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n## \u6e90\u7801\n\n```cpp\n#define gc getchar\n#define mkp make_pair\n#define fi first\n#define se second\ntypedef pair<int,int> pii; \nconst int N = 1e6+5;\nconst pii inf = mkp(1e9+5, 1e6+5), ind = mkp(-1e9-5, 0);\n\ninline int rd() {\n\tint x = 0, fg = 1;\n\tchar ch = gc();\n\twhile (ch < '0' || ch > '9') {\n\t\tif (ch == '-') fg = -1;\n\t\tch = gc();\n\t}\t\n\twhile (ch >= '0' && ch <= '9') {\n\t\tx = (x << 1) + (x << 3) + ch - '0';\n\t\tch = gc();\n\t}\n\treturn x * fg;\n}\n\nint n;\nint a[N];\n\npii q1[N], q2[N];//\u7ef4\u62a4\u65f6\u4fdd\u8bc1\u4e24\u4e2a\u961f\u5217\u5355\u589e \nint hd1, tl1, hd2, tl2;\n\ninline int add(int x) { if (++x == N) x = 0; return x; }\ninline int sub(int x) { if (--x == -1) x = N-1; return x; }\ninline pii mx1() { return sub(hd1) != tl1 ? q1[tl1] : ind; }\ninline pii mn1() { return sub(hd1) != tl1 ? q1[hd1] : inf; }\ninline pii mx2() { return sub(hd2) != tl2 ? q2[tl2] : ind; }\ninline pii mn2() { return sub(hd2) != tl2 ? q2[hd2] : inf; }\n\nint solve() {\n\thd1 = hd2 = 0, tl1 = tl2 = N-1;\n\tint num = n, sum = n;//num\u4e3a\u771f\u5b9e\u7684\u86c7\u7684\u6570\u91cf, sum \u4e3a\u5047\u8bbe\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u7684\u86c7\u6570\u91cf \n\tfor (int i = 1; i <= n; i++) q1[tl1 = add(tl1)] = mkp(a[i], i);\n\tint flag = 0, cur = 0;//\u662f\u5426\u8fdb\u5165\u7b2c\u4e8c\u9636\u6bb5, \u8fdb\u5165\u8f6e\u6570\u7684\u5947\u5076 \n\twhile (sum >= 2) {\n\t\tpii mx, mn;\n\t\tif (mx1() < mx2()) mx = mx2(), tl2 = sub(tl2);\n\t\telse mx = mx1(), tl1 = sub(tl1);\n\t\tif (mn1() > mn2()) mn = mn2(), hd2 = add(hd2);\n\t\telse mn = mn1(), hd1 = add(hd1);\n\t\n\t\tmx.fi -= mn.fi;\n\t\tsum--;\n\t\t\n\t\tif (sum >= 2 && mx < min(mn1(), mn2())) {\n\t\t\tif (flag) cur ^= 1;\n\t\t\telse flag = 1;\n\t\t}\n\t\telse {\n\t\t\tif (flag) return num - cur;\n\t\t\tnum--;\n\t\t}\n\t\tq2[hd2 = sub(hd2)] = mx;\n\t}\n\treturn num;\n}\n\nint main()\n{\n\tint T = rd();\n\tfor (int i = 1; i <= T; i++) {\n\t\tif (i == 1) {\n\t\t\tn = rd();\n\t\t\tfor (int j = 1; j <= n; j++) a[j] = rd();\n\t\t}\n\t\telse {\n\t\t\tint k = rd();\n\t\t\tfor (int j = 1; j <= k; j++) a[rd()] = rd();\n\t\t}\n\t\tprintf(\"%d\\n\", solve());\n\t}\n\treturn 0;\n}\n```\n\n\u672c\u4ee3\u7801\u53c2\u8003\u4e86 [\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/QAQAutoMaton/csp-s-2020-snakes)\u3002\n\n\u5982\u679c\u4e0a\u8ff0\u5206\u6790\u5b58\u5728\u6f0f\u6d1e\uff0c\u8fd8\u8bf7\u5927\u4f6c\u4eec\u6307\u6b63\u3002",
        "postTime": 1606298640,
        "uid": 138041,
        "name": "cyh_toby",
        "ccfLevel": 9,
        "title": "\u9898\u89e3\u3010[CSP-S2020]\u8d2a\u5403\u86c7\u3011"
    },
    {
        "content": "\u8003\u573a\u63a8\u4e86\u4e2a~~\u5047\u7ed3\u8bba~~\uff0c\u8fd8\u5728luogu\u4e0aA\u4e86\n\u7ed3\u679c\u88ab\u8fd9\u7ec4\u6570\u636ehack\u4e86\uff0c555\n```\ninput:\n1\n15\n0 1 2 2 2 2 3 3 4 5 5 6 7 8 8\noutput:\n8\n```\n\n\u7ed3\u8bba\u4e00\uff1a\u505a\u51fa\u8fc7\u9009\u62e9\u7684\u86c7\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5403\n\n\u8bc1\u660e\uff1a\u663e\u800c\u6613\u89c1\n\n\u7ed3\u8bba\u4e8c\uff1a\u5f53\u73b0\u5728\u6700\u5927\u7684\u86c7\u5403\u4e86\u4ee5\u540e\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u5c31\u4f1a\u9009\u62e9\u5403\n\n\u8bc1\u660e\uff1a\u7b2c\u4e8c\u5927\u7684\u5403\u7b2c\u4e8c\u5c0f\u7684\u4e00\u5b9a\u6bd4\u7b2c\u4e00\u5927\u7684\u5403\u7b2c\u4e00\u5c0f\u7684\u5c0f\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5728\u4e0b\u4e00\u6b21\uff0c\u4ed6\u5f00\u59cb\u5403\u4e4b\u524d\u4e00\u5b9a\u4f1a\u6709\u86c7\u57ab\u80cc\u3002\u3002\u3002\n\n\u7531\u6b64\u53ef\u5f97\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u7684$O(n)$\u65b9\u6cd5\n\u5373\u4e00\u4e2a\u961f\u5217\u4e3a\u80fd\u4f5c\u51fa\u9009\u62e9\u7684\uff0c\u53e6\u4e00\u4e2a\u4e3a\u5c1a\u4e14\u4e0d\u80fd\u9009\u62e9\u7684\n\u6bcf\u6b21\u66f4\u65b0\u5c31\u662f\u628a\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e2d\u6bd4\u5403\u5b8c\u540e\u7684\u6700\u5927\u503c\u5927\u7684\u653e\u5230\u7b2c\u4e00\u4e2a\u961f\u5217\uff0c  \n\u8868\u793a\u82e5\u8fd9\u4e00\u6b21\u7684\u6700\u5927\u503c\u5728\u5403\u5b8c\u540e\u4ecd\u7136\u80fd\u6d3b\u4e0b\u6765\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e5f\u6709\u9009\u62e9\u6743  \n\u5f53\u7b2c\u4e8c\u4e2a\u961f\u5217\u4e3a\u7a7a\u65f6\uff0c\u505c\u6b62\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u5c31\u7b97\u53d8\u6210\u4e86\u6700\u5c0f\u503c\uff0c\u540e\u9762\u7684\u86c7\u4e5f\u4e0d\u4e00\u5b9a\u80fd\u5403\u5b83\n\n\u6240\u4ee5\u6211\u4eec\u5728\u7b2c\u4e8c\u4e2a\u961f\u5217\u53d8\u6210\u7a7a\u7684\u65f6\u5019\u9012\u5f52\u5224\u65ad\u540e\u9762\u7684\u86c7\u6562\u4e0d\u6562\u5403\u5373\u53ef\n\n~~\u771f\u4e0d\u77e5\u9053\u8fd9\u9898\u4e3a\u4ec0\u4e48\u9ed1\u4e86~~\n\n```cpp\n#include<cctype>\n#include<cfloat>\n#include<climits>\n#include<clocale>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<ctime>\n#include<algorithm>\n#include<bitset>\n#include<deque>\n#include<iostream>\n#include<iterator>\n#include<limits>\n#include<list>\n#include<locale>\n#include<map>\n#include<memory>\n#include<new>\n#include<queue>\n#include<set>\n#include<stack>\n#include<string>\n#include<vector>\nusing namespace std;\nconst int N=1e6+5;\nint n,T,a[N];\nnamespace fhq{\n\tdeque<int>q1,q2;\n\tint val[N];\t\n\tinline void build(){\n\t\twhile(!q1.empty())q1.pop_front();\n\t\twhile(!q2.empty())q2.pop_front();\n\t\tq1.push_back(n);val[n]=a[n];\n\t\tfor(int i=1;i<n;i++)q2.push_back(i),val[i]=a[i];\n\t}\n\tinline int ncmp(int x,int y){\n\t\tif(x==y)return 0;\n\t\tif(val[x]>val[y])return 1;\n\t\tif(val[x]<val[y])return -1;\n\t\tif(x<y)return -1;\n\t\tif(x>y)return 1;\n\t}\n\tbool check(){\n\t\tif(q1.size()==1)return false;\n\t\tif(q1.size()==2)return true;\n\t\tint x=q1.front();q1.pop_front();\n\t\tint y=q1.back();q1.pop_back();\n\t\tval[y]-=val[x];\n\t\tif(ncmp(y,q1.front())<0){\n\t\t\tq1.push_front(y);\n\t\t\treturn !check();\n\t\t}return true;\n\t}\n\tinline bool calc(){\n\t\tint siz=q1.size()+q2.size();\n\t\tif(q2.empty())return false;\n\t\tint x=q1.back();q1.pop_back();\n\t\tint y=q2.front();q2.pop_front();\n\t\tval[x]-=val[y];\n\t\twhile(!q2.empty()&&ncmp(x,q2.back())<0){\n\t\t\tq1.push_front(q2.back());\n\t\t\tq2.pop_back();\n\t\t}q1.push_front(x);\n\t\tif(!q2.empty())return true;\n\t\tif(!check())return true;\n\t\treturn false;\n\t}\n\tinline int solve(){\n\t\tbuild();\n\t\tint ans=n;\n\t\twhile(calc())--ans;\n\t\treturn ans;\n\t}\n}\nint main(){\n//\tfreopen(\"snakes.in\",\"r\",stdin);\n//\tfreopen(\"snakes.out\",\"w\",stdout);\n\tscanf(\"%d\",&T);T--;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",a+i);\n\tprintf(\"%d\\n\",fhq::solve());\n\tfor(int k=0;T--;){\n\t\tscanf(\"%d\",&k);\n\t\tfor(int i=1,x,y;i<=k;i++){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\ta[x]=y;\n\t\t}printf(\"%d\\n\",fhq::solve());\n\t}return 0;\n}\n```",
        "postTime": 1605077266,
        "uid": 103990,
        "name": "asd_a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\uff08\u6d1b\u8c37\u6c11\u95f4\u6570\u636e\uff09\u3011"
    },
    {
        "content": "# \u9898\u89e3 \u8d2a\u5403\u86c7\n\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P7078)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/lsq147/p/13946020.html)\n\n\u4e00\u7ec4\u53ef\u80fd\u53ef\u4ee5 hack \u6389\u4f60\u7684\u4ee3\u7801\u7684\u6570\u636e\uff1a\n\n```\ninput:\n1\n15\n0 1 2 2 2 2 3 3 4 5 5 6 7 8 8\noutput:\n8\n```\n\n## \u9898\u76ee\u5206\u6790\n\n\u672c\u7bc7\u9898\u89e3\u53c2\u8003\u4e86 [EI \u7684\u4e00\u7bc7 blog](https://www.luogu.com.cn/blog/EntropyIncreaser/ying-ye-ri-zhi-2020117-yi-ci-xin-xi-fou-dui-cheng-yin-fa-di-csp2020-t4-post) \uff0c\u5b9e\u73b0\u6709\u90e8\u5206\u4e0d\u540c\uff0c\u5efa\u8bae\u5927\u5bb6\u53bb\u770b\u770b\u539f\u6587\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u64cd\u4f5c\u5e8f\u5217\u662f\u56fa\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5403\u86c7\u6e38\u620f\u8fdb\u884c\u4e86 $i$ \u8f6e\uff0c\u90a3\u4e48\u7b2c $j(1\\le j\\le i)$ \u8f6e\u7684\u9009\u62e9\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u5206\u89e3\u4e3a\u201c\u6c42\u6bcf\u4e00\u8f6e\u662f\u54ea\u6761\u86c7\u5403\u6389\u4e86\u54ea\u6761\u86c7\u201d\u548c\u201c\u5df2\u77e5\u6bcf\u4e00\u8f6e\u7684\u5403\u86c7\u60c5\u51b5\uff0c\u6c42\u51fa\u7b54\u6848\u201d\u3002\n\n\u9996\u5148\u8003\u8651\u201c\u5df2\u77e5\u6bcf\u4e00\u8f6e\u7684\u5403\u86c7\u60c5\u51b5\uff0c\u6c42\u51fa\u7b54\u6848\u201d\uff0c\u4e0d\u59a8\u5047\u8bbe\u7b2c $i$ \u8f6e\u7684\u5403\u86c7\u60c5\u51b5\u662f $A_i$ \u5403\u6389\u4e86 $B_i$ \uff0c\u8003\u8651\u4ece\u540e\u5f80\u524d\u9012\u63a8\uff0c\u7531\u4e8e\u6bcf\u6761\u86c7\u90fd\u4e0d\u60f3\u88ab\u5403\u6389\uff0c\u6240\u4ee5\u5982\u679c\u5728\u7b2c $i$ \u8f6e\u4e2d\uff0c $A_i$ \u9009\u62e9\u5403\u6389 $B_i$ \uff0c\u90a3\u4e48\u5fc5\u987b\u8981\u6ee1\u8db3\u5728\u7b2c $i+1$ \u8f6e\u53ca\u4ee5\u540e\u4e2d $A_i$ \u90fd\u4e0d\u4f1a\u88ab\u5403\u6389\uff0c\u5426\u5219 $A_i$ \u80af\u5b9a\u4f1a\u76f4\u63a5\u7ed3\u675f\u6e38\u620f\uff0c\u7528\u4e00\u4e2a\u6876\u6765\u7edf\u8ba1\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u201c\u6c42\u6bcf\u4e00\u8f6e\u662f\u54ea\u6761\u86c7\u5403\u6389\u4e86\u54ea\u6761\u86c7\u201d\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u7528\u5e73\u8861\u6811\u6216\u8005\u5806\u7b49\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\uff0c\u5c31\u662f\u6bcf\u6b21\u627e\u51fa\u6700\u5927\u7684\u548c\u6700\u5c0f\u7684\uff0c\u7136\u540e\u4e24\u4e2a\u76f8\u51cf\u518d\u653e\u56de\u53bb\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $\\mathcal O(Tn\\log_2n)$ \u7684\uff0c\u4e0d\u591f\u4f18\u79c0\u3002\n\n\u4e0d\u59a8\u5047\u8bbe\u6240\u6709\u7684\u86c7\u7684\u5b9e\u529b\u4ece\u5c0f\u5230\u5927\u5b9e\u529b\u4e00\u6837\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u4f9d\u6b21\u4e3a $a_1,a_2,\\dots,a_n$ \uff0c\u5982\u679c $a_n\\ge 2a_1$ \uff0c\u90a3\u4e48 $a_n-a_1\\ge a_1$ \uff0c\u6b64\u65f6\u6700\u5927\u503c\u4e00\u5b9a\u662f\u4e0d\u589e\u7684\uff0c\u6700\u5c0f\u503c\u4e00\u5b9a\u662f\u4e0d\u964d\u7684\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u961f\u5217\u6765\u7ef4\u62a4\uff0c\u6bcf\u6b21\u90fd\u628a\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u52a0\u5165\u5230\u961f\u5217\u4e2d\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a\u961f\u5217\u4e00\u5b9a\u662f\u5355\u8c03\u7684\uff0c\u8fd9\u4e2a\u5957\u8def\u548c \u201cNOIP2016\u86af\u8693\u201d \u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u961f\u5217\u6765\u7ef4\u62a4\u7b54\u6848\uff0c\u76f4\u5230\u6700\u5927\u503c\u5c0f\u4e8e\u6700\u5c0f\u503c\u7684\u4e24\u500d\u3002\n\n\u6b64\u65f6 $a_n<2a_1$ \uff0c\u6b64\u65f6 $a_1\\ne 0$ \uff0c\u53ef\u4ee5\u5f97\u5230\u6bcf\u6b21\u53d6\u51fa\u7684\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u7684\u503c\u662f\u591a\u5c11\uff1a\n\n1. \u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u4e3a $a_n-a_1<a_1$ \u3002\n2. \u7b2c\u4e8c\u6b21\u64cd\u4f5c\uff0c\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u4e3a $(a_{n-1}-a_n)+a_1\\le a_1$ \u3002\n3. \u7b2c\u4e09\u6b21\u64cd\u4f5c\uff0c\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u4e3a $(a_{n-2}-a_{n-1})+a_n-a_1<a_1$ \u3002\n4. ......\n\n**\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u9762\u8bf4\u7684\u662f\u201c\u503c\u201d\uff0c\u4f46\u662f\u5b9e\u9645\u6bd4\u8f83\u5927\u5c0f\u7684\u65f6\u5019\u6211\u4eec\u8fd8\u9700\u8981\u6bd4\u8f83\u7f16\u53f7\u3002**\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6700\u5c0f\u503c**\u6700\u5927**\u4e5f\u662f $a_1$ \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u503c\u4e3a $a_1$ \u7684\u6240\u6709\u7684\u7f16\u53f7\uff0c\u9996\u5148\u4e0d\u59a8\u5047\u8bbe $a_1=a_2=\\cdots=a_m<a_{m+1}\\le\\cdots\\le a_n$ \uff0c\u90a3\u4e48\u5728\u63a5\u4e0b\u6765 $n-m$ \u8f6e\u4e2d\uff0c\u6bcf\u4e00\u8f6e\u7684\u6700\u5927\u503c\u4f9d\u6b21\u4e3a $a_{n\\sim m+1}$ \u3002\n\n\u5148\u8003\u8651\u8fd9 $n-m$ \u8f6e\uff0c\u6700\u5927\u503c\u56fa\u5b9a\uff0c\u5982\u4f55\u7ef4\u62a4\u6700\u5c0f\u503c\uff1f\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c $\\mathcal O(n)$ \u6784\u9020 prufer \u5e8f\u5217\u7684\u601d\u8def\uff0c\u7528\u4e00\u4e2a\u7c7b\u4f3c\u6307\u9488\u7684\u4e1c\u897f\u6765\u8868\u793a\u503c\u4e3a $a_1$ \u7684\u6240\u6709\u7f16\u53f7\u4e2d\u6700\u5c0f\u7684\u662f\u4ec0\u4e48\uff0c\u7136\u540e\u6bcf\u6b21\u201c\u6700\u5927\u503c\u51cf\u53bb\u6700\u5c0f\u503c\u201d\u5982\u679c\u6bd4\u8fd9\u4e2a\u6307\u9488\u7684\u503c\u8981\u5c0f\uff0c\u6216\u8005\u7b49\u4e8e\u8fd9\u4e2a\u6307\u9488\u7684\u503c\u4f46\u662f\u7f16\u53f7\u5c0f\u4e8e\u8fd9\u4e2a\u6307\u9488\u7684\u7f16\u53f7\u7684\u8bdd\uff0c\u8fd9\u4e2a\u201c\u6700\u5927\u503c\u51cf\u6700\u5c0f\u503c\u201d\u5c31\u662f\u4e0b\u4e00\u6b21\u7684\u6700\u5c0f\u503c\uff0c\u4e0b\u4e00\u6b21\u4e00\u5b9a\u4f1a\u88ab\u5220\u9664\uff0c\u5426\u5219\u7684\u8bdd\u4e0b\u4e00\u6b21\u7684\u6700\u5c0f\u503c\u5c31\u662f\u8fd9\u4e2a\u6307\u9488\u6307\u7740\u7684\u503c\uff0c\u7136\u540e\u8ba9\u6307\u9488\u8df3\u4e0b\u4e00\u4e2a\u5c31\u884c\u4e86\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(n)$ \u3002\n\n\u7136\u540e\u8003\u8651\u540e\u9762 $m$ \u8f6e\uff0c\u6b64\u65f6\u5269\u4e0b\u7684\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u79cd\u60c5\u51b5\u662f\u6709\u4e00\u4e2a\u503c\u5c0f\u4e8e $a_1$ \uff0c\u5176\u4ed6\u503c\u90fd\u7b49\u4e8e $a_1$ \uff0c\u53e6\u4e00\u79cd\u60c5\u51b5\u662f\u6240\u6709\u503c\u90fd\u7b49\u4e8e $a_1$ \u3002\n\n\u5982\u679c\u6709\u4e00\u4e2a\u503c\u5c0f\u4e8e $a_1$ \uff0c\u4e0d\u59a8\u8bbe\u4e3a $x$ \uff0c\u90a3\u4e48 $x>0$ \uff08\u56e0\u4e3a $n-m$ \u8f6e\u4e2d\u7684\u6700\u540e\u4e00\u8f6e\u7684\u6700\u5927\u503c\u4e3a $a_{m+1}>a_1$ \uff0c\u800c\u6bcf\u4e00\u8f6e\u7684\u6700\u5c0f\u503c\u90fd $\\le a_1$ \uff09\uff0c\u4e8e\u662f\u6700\u5c0f\u503c\u5c31\u4f9d\u6b21\u662f $x,a_1-x,x,a_1-x,\\dots$ \uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u6700\u5927\u7684\u86c7\u80af\u5b9a\u4f1a\u5403\u6389\u4e00\u5f00\u59cb\u5c0f\u4e8e $a_1$ \u7684\u86c7\uff0c\u540e\u9762\u7684\u86c7\u5c31\u5403\u6389\u4e0a\u4e00\u6b21\u5403\u4e1c\u897f\u7684\u86c7\u3002\n\n\u5982\u679c\u6240\u6709\u503c\u90fd\u7b49\u4e8e $a_1$ \uff0c\u90a3\u4e48\u4e00\u5f00\u59cb\u6700\u5927\u7684\u86c7\u80af\u5b9a\u4f1a\u5403\u6389\u6b21\u5c0f\u7684\u86c7\uff0c\u7136\u540e\u5b9e\u529b\u53d8\u6210 $0$ \uff0c\u7136\u540e\u88ab\u6b21\u6b21\u5c0f\u7684\u86c7\u5403\u6389\uff0c\u7136\u540e\u6b21\u6b21\u5c0f\u7684\u86c7\u53d8\u6210\u6700\u5927\u7684\u86c7\uff0c\u4e00\u76f4\u7ee7\u7eed\u4e0b\u53bb\u3002\n\n\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $\\mathcal O(n)$ \u3002\n\n\u7efc\u4e0a\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(Tn)$ \u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define ch() getchar()\n#define pc(x) putchar(x)\nusing namespace std;\ntemplate<typename T>void read(T&x){\n\tstatic int f;static char c;\n\tfor(c=ch(),f=1;c<'0'||c>'9';c=ch())if(c=='-')f=-f;\n\tfor(x=0;c>='0'&&c<='9';c=ch())x=x*10+(c&15);x*=f;\n}\ntemplate<typename T>void write(T x){\n\tstatic int q[64];int cnt=0;\n\tif(x==0)return pc('0'),void();\n\tif(x<0)pc('-'),x=-x;\n\twhile(x)q[cnt++]=x%10,x/=10;\n\twhile(cnt--)pc(q[cnt]+'0');\n}\nconst int maxn=1000005;\nint n,a[maxn],q0[maxn],q1[maxn],q2[maxn],A[maxn],B[maxn],in[maxn],cp[maxn],c2;\nint hp[maxn];\nvoid solve2(int st){\n\tfor(int i=1;i<=n;++i)hp[i]=false;\n\tint key=a[q2[0]],p=1;hp[q2[0]]=true;\n\twhile(p<c2&&a[q2[p]]==key)hp[q2[p]]=true,++p;\n\tint e=p,MN=0;p=1;while(!hp[p])++p;\n\tfor(int i=c2-1;i>=e;--i){\n\t\tA[st]=q2[i];\n\t\tif(MN){\n\t\t\tB[st]=MN;\n\t\t\tif(((a[q2[i]]-=a[MN])<key)||q2[i]<p)\n\t\t\t\tMN=q2[i];\n\t\t\telse{\n\t\t\t\tMN=0;hp[q2[i]]=true;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tB[st]=p;hp[p]=false;++p;\n\t\t\twhile(p<=n&&!hp[p])++p;\n\t\t\ta[MN=q2[i]]-=key;\n\t\t}\n\t\t++st;\n\t}\n\tif(MN&&a[MN]==key){\n\t\thp[p=MN]=true;MN=0;\n\t}\n\tif(MN){\n\t\tfor(int i=n;i>=1;--i)if(hp[i]){\n\t\t\tA[st]=i;B[st]=MN;++st;MN=i;\n\t\t}\n\t}\n\telse{\n\t\tint o=0;\n\t\tfor(int i=n;i>=1;--i)if(hp[i]){\n\t\t\to^=1;\n\t\t\tif(o){\n\t\t\t\tif(MN){\n\t\t\t\t\tA[st]=i,B[st]=MN;++st;\n\t\t\t\t}\n\t\t\t\tMN=i;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tA[st]=MN;B[st]=i;++st;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid solve(void){\n\tfor(int i=1;i<=n;++i)cp[i]=a[i],in[i]=0;\n\tint f0=0,b0=0,f1=n,b1=n;\n\tfor(int i=1;i<=n;++i)q0[b0++]=i;\n\tfor(int i=1;i<n;++i){\n\t\tint mx=-1,mxp=0;\n\t\tif(f0<b0&&(a[q0[b0-1]]>mx||(a[q0[b0-1]]==mx&&q0[b0-1]>mxp)))mx=a[mxp=q0[b0-1]];\n\t\tif(f1<b1&&(a[q1[b1-1]]>mx||(a[q1[b1-1]]==mx&&q1[b1-1]>mxp)))mx=a[mxp=q1[b1-1]];\n\t\tint mn=1000000001,mnp=n+1;\n\t\tif(f0<b0&&(a[q0[f0]]<mn||(a[q0[f0]]==mn&&q0[f0]<mnp)))mn=a[mnp=q0[f0]];\n\t\tif(f1<b1&&(a[q1[f1]]<mn||(a[q1[f1]]==mn&&q1[f1]<mnp)))mn=a[mnp=q1[f1]];\n\t\tif(a[mxp]<a[mnp]*2){\n\t\t\tint _l=f0,_r=f1;c2=0;\n\t\t\twhile(_l<b0||_r<b1){\n\t\t\t\tif(_r>=b1||(_l<b0&&(a[q0[_l]]<a[q1[_r]]||(a[q0[_l]]==a[q1[_r]]&&q0[_l]<q1[_r])))){\n\t\t\t\t\tq2[c2++]=q0[_l++];\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tq2[c2++]=q1[_r++];\n\t\t\t\t}\n\t\t\t}\n\t\t\tsolve2(i);\n\t\t\tbreak;\n\t\t}\n\t\tA[i]=mxp;B[i]=mnp;\n\t\tif(f0<b0&&q0[f0]==mnp)++f0;else ++f1;\n\t\tif(f0<b0&&q0[b0-1]==mxp)--b0;else --b1;\n\t\ta[mxp]-=a[mnp];q1[--f1]=mxp;\n\t}\n\tint no=n;\n\tfor(int i=n-1;i>=1;--i){\n\t\t++in[B[i]];\n\t\tif(in[A[i]])\n\t\t\twhile(no>i)--in[B[--no]];\n\t}\n\t--no;\n\tfor(int i=1;i<=n;++i)a[i]=cp[i];\n\twrite(n-no),pc('\\n');\n}\nint main(){\n\tint T;read(T),read(n);\n\tfor(int i=1;i<=n;++i)read(a[i]);\n\tsolve();--T;\n\twhile(T--){\n\t\tint k;read(k);\n\t\twhile(k--){\n\t\t\tint x,y;\n\t\t\tread(x),read(y);\n\t\t\ta[x]=y;\n\t\t}\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1604843324,
        "uid": 230249,
        "name": "xiaolilsq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 \u8d2a\u5403\u86c7"
    },
    {
        "content": "~~\u9996\u5148\u7531\u4e8e\u8fd9\u662f\u4e00\u9053\u9ed1\u9898\u6211\u88ab\u5413\u4f4f\u4e86\u3002~~\n\n## Solution\n\n\u9996\u5148\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u5806\u86c7\u3002\u6700\u5f3a\u7684\u53ebA\uff0c\u6700\u5f31\u7684\u53ebB\u3002\n\n1. \u5982\u679cA\u5403\u4e86B\u4ee5\u540e\u4f9d\u65e7\u662f\u6700\u5f3a\u7684\u86c7\uff0c\u90a3\u4e48\u80af\u5b9a\u8981\u5403\u3002\n\n1. \u5982\u679cA\u5403\u4e86B\u4ee5\u540e\u4e0d\u662f\u6700\u5f3a\u4e5f\u4e0d\u662f\u6700\u5f31\uff0c\u90a3\u4e48\u4e0b\u4e00\u5c40\u4e0d\u4f1a\u6302\uff0c\u4f46\u662f\u80fd\u589e\u52a0\u51fb\u6740\u6570\u91cf\uff0c\u6240\u4ee5\u4e5f\u4f1a\u5403\u3002\n\n1. \u5982\u679cA\u5403\u4e86B\u540e\u53d8\u6210\u4e86\u6700\u5f31\u7684\u86c7\uff0c\u6b64\u65f6C\u662f\u6700\u5f3a\u7684\u86c7\uff0c\u90a3\u4e48A\u5c31\u8981\u505a\u51fa\u51b3\u7b56\u4e86\uff1a\n\n\t- \u5982\u679cC\u4e0d\u5403A\uff0c\u90a3\u4e48A\u5c31\u65e0\u6240\u754f\u60e7\u4e86\u3002\uff08\u4e3aB\u8868\u793a\u540c\u60c5\uff09\n\n\t- \u5982\u679cC\u4f1a\u5403A\uff0c\u529dA\u8fd8\u662f\u597d\u597d\u53cd\u601d\uff0c\u4e0d\u8981\u5403B\u3002\n\n\u597d\uff0c\u63a5\u4e0b\u6765\u95ee\u9898\u53c8\u8f6c\u5316\u6210C\u4e0eA\u7684\u4e86\u3002\n\n\u540c\u6837\u7684\uff0c\u5982\u679cC\u5403\u4e86A\u540e\u4e0d\u662f\u6700\u77ed\u7684\uff0c\u663e\u7136\u4f1a\u5403\uff0c\u90a3\u4e48A\u4e0d\u4f1a\u5403\u3002\n\n\u5982\u679cC\u5403\u4e86\u540e\u662f\u6700\u77ed\u7684\uff0c\u95ee\u9898\u5c31\u53c8\u7ed9\u4e86\u6b21\u957f\u7684\u86c7D\uff0c\u770bD\u4f1a\u4e0d\u4f1a\u5403C\u2026\u2026\n\n\u8fd9\u5f88\u50cf\u9012\u5f52\u7684\u8fc7\u7a0b\u3002\n\n\u6240\u4ee5\uff0c\u6700\u7ec8\u6211\u4eec\u4e3b\u9898\u8981\u4f7f\u7528\u9012\u5f52\u3002\n\n\u8003\u8651\u7528\u53cc\u7aef\u961f\u5217\u89e3\u51b3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(Tn)$\u3002",
        "postTime": 1606917884,
        "uid": 148507,
        "name": "_Imaginary_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7078 \u3010\u8d2a\u5403\u86c7\u3011"
    },
    {
        "content": "## # \u89e3\u6790\n\n\u4e00\u9053\u535a\u5f08\u601d\u60f3\u975e\u5e38\u590d\u6742\u7684\u9898\u2026\u2026\n\n### - \u5c0f\u66b4\u529b\n\n\u9996\u5148\u8f83\u7b80\u5355\u7684\u66b4\u529b\u60f3\u6cd5\u5c31\u662f\u5148\u5047\u8bbe\u6bcf\u6b21\u6700\u5927\u86c7\u90fd\u9009\u62e9\u5403\u6389\u6700\u5c0f\u86c7\uff0c\u4e00\u76f4\u7ade\u4e89\u5230\u53ea\u5269\u4e00\u6761\u3002\u7136\u540e\u518d\u4ece\u53ea\u5269\u4e00\u6761\u86c7\u7684\u72b6\u6001**\u5012\u63a8\u56de\u6765**\uff0c\u5373\u73b0\u5728\u6211\u4eec\u77e5\u9053\u2014\u2014\u5982\u679c\u7b2c $i$ \u6b21\u7ade\u4e89\u4e2d\uff0c\u6700\u5927\u86c7\u5403\u6389\u6700\u5c0f\u86c7\uff08\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\uff09\uff0c\u90a3\u4e48**\u6700\u7ec8\u5269\u4e0b\u7684\u86c7\u6709\u54ea\u4e9b**\u3002\u5982\u679c\u53d1\u73b0\u7b2c $i$ \u6b21\u7ade\u4e89\u540e\u6700\u5927\u86c7\u8fd8\u6d3b\u7740\uff0c\u5c31\u53ef\u4ee5\u5403\uff0c\u5426\u5219\u5c31\u505c\u6b62\u3002\n\n\u53ea\u9700\u8981 `set` \u7ef4\u62a4\u4e00\u4e0b\u6700\u5927\u86c7\u6700\u5c0f\u86c7\uff0c\u505a\u5230\u5355\u6b21 $O(n\\log n)$ \u7684\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u5f97\u5230 70pts \u7684\u597d\u6210\u7ee9~\n\n### - \u6b63\u89e3\n\n\u4f46\u662f\u6b63\u89e3\u601d\u8def\u8ddf\u8fd9\u4e2a\u5b8c\u5168\u4e0d\u4e00\u6837\u3002\n\n\u5148\u5206\u6790\u4e00\u4e2a\u6027\u8d28\uff1a\n\n> \uff08\u5269\u4e0b\u81f3\u5c11\u4e09\u6761\u86c7\uff09\u8bbe\u73b0\u5728 $h_i$ \u7684**\u6700\u5927\u503c\u3001\u6b21\u5c0f\u503c\u548c\u6700\u5c0f\u503c**\u5206\u522b\u662f $x,y,z$\n>\n> \u82e5 $x-z>y$ \u6216 $x-z=y$ \u4e14 x \u7684\u7f16\u53f7\u5927\u4e8e y\uff0c\u5373**\u6700\u5927\u86c7\u5403\u6389\u6700\u5c0f\u86c7\u540e\u6ca1\u6709\u53d8\u6210\u5269\u4e0b\u7684\u86c7\u4e2d\u6700\u5c0f\u7684**\uff0c\u5219\u6700\u5927\u86c7\u4e00\u5b9a\u53ef\u4ee5\u5403\u3002\n\n\u7b80\u5355\u8bc1\u660e\u5982\u4e0b\uff1a\u5206\u6790\u4e0b\u4e00\u6b21\u7ade\u4e89\uff0c\u8bb0\u6b64\u65f6\u7684\u6700\u5927\u503c\u4e3a $w$\uff0c\u663e\u7136\u6709 $w\\le x$\uff0c\u6b64\u65f6\u6700\u5c0f\u503c\u662f $y$\uff0c\u53c8\u6709 $y\\ge z$\uff1b\u5219 $w-y\\le x-z$\uff0c\u5219\u4e0b\u4e00\u6b21\u7ade\u4e89\u5f97\u5230\u7684\u201c\u65b0\u86c7\u201d\uff08\u5e26\u4e0a\u7f16\u53f7\u8003\u8651\uff09\u4e00\u5b9a\u66f4\u5c0f\uff1b\u5982\u679c $x-z$ \u88ab\u5403\uff0c$w-y$ \u4e00\u5b9a\u4f1a\u5148\u88ab\u5403\u6389\uff0c\u4e8e\u662f $w$ \u6b64\u65f6\u5c31\u4f1a\u9009\u62e9\u4e0d\u5403 $y$ \u7136\u540e\u7ade\u4e89\u7ed3\u675f\uff0c\u800c $x$ \u5c31\u53ef\u4ee5\u975e\u5e38\u5b89\u5168\u5730\u5403\u6389 $z$\u3002\n\n> \u4e0b\u9762\u501f\u7528\u535a\u4e3b Resuscitate \u7684[\u601d\u8def](https://www.luogu.com.cn/blog/_post/287882)\n\n\u5982\u679c\u6700\u5927\u86c7 $x$ \u5403\u6389\u6700\u5c0f\u86c7 $z$ \u540e\u53d8\u6210\u6700\u5c0f\u86c7\u4e86\uff08***\u60c5\u51b5\u4e8c***\uff09\uff0c\u5219\u79f0\u8fd9\u6b21\u7ade\u4e89\u662f\u4e00\u6b21***\u201c\u5192\u9669\u201d***\u3002\u5982\u679c\u8981\u5192\u9669\uff0c\u5219**\u5fc5\u987b\u4fdd\u8bc1\u5192\u9669\u540e\u7ade\u4e89\u7acb\u5373\u7ed3\u675f**\u3002\n\n\u5148\u4e00\u76f4\u6a21\u62df\uff0c\u76f4\u5230**\u7b2c\u4e00\u6b21\u201c\u5192\u9669\u201d**\u3002\u5047\u8bbe\u7ade\u4e89\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u7136\u540e\u7ee7\u7eed\u6a21\u62df\uff0c**\u76f4\u5230\u67d0\u4e00\u6b21\u7ade\u4e89\u4e2d\uff0c\u6700\u5927\u86c7\u53ef\u4ee5\u975e\u5e38\u5b89\u5168\u5730\u5403\u6389\u6700\u5c0f\u86c7**\uff0c\u6b64\u65f6\u6700\u5c0f\u86c7\u4e00\u5b9a\u662f\u4e0a\u4e00\u6b21\u7ade\u4e89\u4e2d\u5192\u9669\u7684\u86c7\u3002\u8bbe\u8fd9\u4e24\u6b21\u7ade\u4e89\u4e4b\u95f4\u4e00\u5171\u53d1\u751f\u4e86 $k$ \u6b21\u5192\u9669\uff0c\u5219\n\n> $k$ \u4e3a\u5076\u6570\u65f6\uff0c\u7b2c\u4e00\u6761\u5c06\u5192\u9669\u7684\u86c7\u4f1a\u5192\u9669\uff0c\u7136\u540e\u7ade\u4e89\u7acb\u5373\u7ed3\u675f\uff1b\u5426\u5219\u7b2c\u4e00\u6761\u5c06\u5192\u9669\u7684\u86c7\u76f4\u63a5\u7ed3\u675f\u7ade\u4e89\u3002\n\n\u5176\u5b9e\u624b\u73a9\u513f\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f04\u61c2\u2014\u2014\n\n- \u6700\u540e\u4e00\u6761\u5192\u9669\u7684\u86c7\u4f1a\u88ab\u5403\u6389\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5192\u9669\uff1b\n- \u5012\u6570\u7b2c\u4e8c\u6761\u5192\u9669\u7684\u86c7\u4e0d\u4f1a\u88ab\u5403\u6389\uff08\u56e0\u4e3a\u4e0b\u4e00\u6761\u86c7\u8ba9\u7ade\u4e89\u7acb\u5373\u7ed3\u675f\u4e86\uff09\uff0c\u6240\u4ee5\u5192\u9669\uff1b\n- \u5012\u6570\u7b2c\u4e09\u6761\u5192\u9669\u7684\u86c7\u4f1a\u88ab\u5012\u6570\u7b2c\u4e8c\u6761\u5192\u9669\u7684\u86c7\u5403\u6389\uff0c\u6240\u4ee5\u4e0d\u5192\u9669\uff1b\n- \u2026\u2026\n- \u5982\u679c $k$ \u662f\u5076\u6570\uff0c\u5219\u7b2c\u4e8c\u6761\u5192\u9669\u7684\u86c7\u4f1a\u7ec8\u6b62\u7ade\u4e89\uff0c\u90a3\u4e48\u7b2c\u4e00\u6761\u5192\u9669\u7684\u86c7\u53ef\u4ee5\u5b89\u5168\u5730\u5192\u9669\uff1b\u5426\u5219\u7b2c\u4e00\u6761\u86c7\u76f4\u63a5\u7ed3\u675f\u7ade\u4e89\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u5728\u6a21\u62df\u7684\u65f6\u5019\u7ef4\u62a4 $k$ \u548c\u7b2c\u4e00\u6b21\u5192\u9669\u65f6\u5df2\u7ecf\u6709\u591a\u5c11\u6761\u86c7\u88ab\u5403\u6389\u5373\u53ef\u3002\n\n\u8fd8\u6709\u4e2a\u95ee\u9898\u662f\u600e\u4e48 $O(n)$ \u6a21\u62df\u3002\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u6700\u5927\u86c7\u53ef\u4ee5\u5b89\u5168\u5403\u6389\u6700\u5c0f\u86c7\u7684***\u60c5\u51b5\u4e00***\uff0c\u6709 $x-z\\ge w-y$\uff0c\u5373**\u65b0\u4ea7\u751f\u7684\u86c7\u7684\u4f53\u529b\u503c\u5355\u8c03\u4e0d\u589e**\u3002\u53ef\u4ee5\u60f3\u5230\u7528\u4e24\u4e2a\u961f\u5217\u5206\u522b\u7ef4\u62a4\u539f\u6709\u7684\u86c7\u548c\u65b0\u4ea7\u751f\u7684\u86c7\u3002\n\n***\u60c5\u51b5\u4e00***\u53ef\u4ee5\u6ee1\u8db3\u4e24\u4e2a\u961f\u5217\u90fd\u5355\u8c03\uff0c\u4f46\u662f***\u60c5\u51b5\u4e8c***\u80fd\u5426\u5355\u8c03\uff1f\u5b9e\u9645\u4e0a\u5982\u679c\u5e26\u7f16\u53f7\u8003\u8651\u7684\u786e\u4e0d\u5355\u8c03\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0***\u60c5\u51b5\u4e8c***\u4e0d\u9700\u8981\u8003\u8651\u7f16\u53f7\u2014\u2014\n\n\u8bbe\u7b2c\u4e00\u6b21\u5192\u9669\u65f6\u7684\u4f53\u529b\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5217\u4e3a $\\{h_1,h_2,\\dots,h_n\\}$\uff0c\u5219\u6709 $h_n-h_1<h_2$\u3002\u66b4\u529b\u6a21\u62df\u7ade\u4e89\u8fc7\u7a0b\n\n1. $h_n\\to h_n-h_1$ \u4e00\u5b9a\u53d8\u4e3a\u6700\u5c0f\u86c7\uff0c\u5219 $\\{h_n-h_1,h_2,\\dots,h_{n-1}\\}$\uff1b\n2. $h_{n-1}\\to h_{n-1}-h_n+h_1$\uff0c$(h_{n-1}-h_n)+h_1\\le h_1\\le h_2$\uff0c**\u5728\u6570\u503c\u4e0a\u4e00\u5b9a\u7b49\u4e8e\u6700\u5c0f\u86c7**\uff1b\n3. $h_{n-2}\\to (h_{n-2}-h_{n-1})+(h_n-h_1)<h_2$\uff0c\u4e00\u5b9a\u662f\u6700\u5c0f\u86c7\uff1b\n4. \u2026\u2026\n\n\u4e8e\u662f\u5728\u6570\u503c\u7684\u610f\u4e49\u4e0a\u662f\u5355\u8c03\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u961f\u5217\u7ef4\u62a4\u3002\n\n---\n\n## # \u6e90\u4ee3\u7801\n\n```cpp\n/*Lucky_Glass*/\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\ntypedef pair<int,int> pii;\nconst int N=1e6+10,INF=0x3f3f3f3f;\n\nint n,cas;\nint num[N];\n\n//STL\u7684deque\u4f1a\u88ab\u5361\u5e38\u2026\u2026\nstruct DEQUE{\n\tpii ary[N<<1];\n\tint le,ri;\n\tDEQUE(){clear();}\n\tvoid clear(){le=N+1,ri=N;}\n\tbool empty(){return le>ri;}\n\tvoid push_back(pii x){ary[++ri]=x;}\n\tvoid pop_back(){ri--;}\n\tvoid push_front(pii x){ary[--le]=x;}\n\tvoid pop_front(){le++;}\n\tpii front(){return ary[le];}\n\tpii back(){return ary[ri];}\n};\n\nDEQUE org,mdi;\n\ninline int Read(int &r){\n\tint b=1,c=getchar();r=0;\n\twhile(c<'0' || '9'<c) b=c=='-'? -1:b,c=getchar();\n\twhile('0'<=c && c<='9') r=(r<<1)+(r<<3)+(c^'0'),c=getchar();\n\treturn r*=b;\n}\npii PopFront(){\n\tpii ret;\n\tbool tmp=false;\n\tif(org.empty()) tmp=false;\n\telse if(mdi.empty()) tmp=true;\n\telse tmp=org.front()<mdi.front();\n\tif(tmp) ret=org.front(),org.pop_front();\n\telse ret=mdi.front(),mdi.pop_front();\n\treturn ret;\n}\npii PopBack(){\n\tpii ret;\n\tbool tmp=false;\n\tif(org.empty()) tmp=false;\n\telse if(mdi.empty()) tmp=true;\n\telse tmp=org.back()>mdi.back();\n\tif(tmp) ret=org.back(),org.pop_back();\n\telse ret=mdi.back(),mdi.pop_back();\n\treturn ret;\n}\npii Front(){\n\tif(org.empty()) return mdi.front();\n\telse if(mdi.empty()) return org.front();\n\telse return min(mdi.front(),org.front());\n}\npii Back(){\n\tif(org.empty()) return mdi.back();\n\telse if(mdi.empty()) return org.back();\n\telse return max(mdi.back(),org.back());\n}\nbool Empty(){return org.empty() && mdi.empty();}\npii operator -(pii mx,pii mn){return make_pair(mx.first-mn.first,mx.second);}\n\nvoid Solve(){\n\tint tim=0,rem=-1,ris=0;\n\twhile((++tim)<=n-1){\n\t\tif(org.empty()) swap(org,mdi);\n\t\tpii mn=PopFront(),mx=PopBack(),now=mx-mn;\n\t\tif(Empty() || now>Front()){\n\t\t\t//\u5403\u6389\u540e\u4e0d\u662f\u6700\u5c0f\u86c7\uff0c\u5219\u4e00\u5b9a\u53ef\u4ee5\u4e0d\u88ab\u5403\u6389\n\t\t\tif(~rem){\n\t\t\t\t//\u5982\u679c\u6709\u86c7\u5192\u9669\uff0c\u5219\u6700\u540e\u4e00\u6761\u5192\u9669\u7684\u86c7\u4e00\u5b9a\u88ab\u5403\u6389\n\t\t\t\t//\u6240\u4ee5\u6700\u540e\u4e00\u6761\u5192\u9669\u7684\u86c7\u4e0d\u4f1a\u5192\u9669\n\t\t\t\t//\u5012\u6570\u7b2c\u4e8c\u6761\u5192\u9669\u7684\u86c7\u5c31\u4e0d\u4f1a\u88ab\u5403\u6389\uff0c\u9009\u62e9\u5192\u9669\n\t\t\t\t//\u5012\u6570\u7b2c\u4e09\u6761\u5192\u9669\u7684\u86c7\u4e00\u5b9a\u4f1a\u88ab\u5403\u6389\uff0c\u4e0d\u5192\u9669\n\t\t\t\t//...\n\t\t\t\t//\u5982\u679c\u5192\u9669\u7684\u86c7\u6709\u5947\u6570\u6761\uff0c\u7b2c\u4e00\u6761\u5c06\u8981\u5192\u9669\u7684\u86c7\u5c31\u4e0d\u4f1a\u5192\u9669\uff0c\u88ab\u5403\u7684\u86c7\u7684\u4e2a\u6570\u4e3a rem-1\n\t\t\t\tprintf(\"%d\\n\",n-rem+(ris&1));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse{ //\u201c\u5192\u9669\u201d\n\t\t\tif(rem==-1) rem=tim; //\u5b58\u50a8\u7b2c\u4e00\u6b21\u201c\u5192\u9669\u201d\u524d\u88ab\u5403\u4e86\u591a\u5c11\u86c7\n\t\t\tris++; //\u201c\u5192\u9669\u201d\u603b\u6b21\u6570\n\t\t}\n\t\tmdi.push_front(now);\n\t}\n\tprintf(\"1\\n\");\n}\nint main(){\n\tRead(cas);\n\tbool fir=true;\n\twhile(cas--){\n\t\tif(fir){\n\t\t\tRead(n);\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\tRead(num[i]);\n\t\t\tfir=false;\n\t\t}\n\t\telse{\n\t\t\tint tmp;Read(tmp);\n\t\t\tfor(int i=1,p,q;i<=tmp;i++)\n\t\t\t\tRead(p),Read(q),num[p]=q;\n\t\t}\n\t\torg.clear(),mdi.clear();\n\t\tfor(int i=1;i<=n;i++)\n\t\t\torg.push_back(make_pair(num[i],i));\n\t\tSolve();\n\t}\n\treturn 0;\n}\n```\n\n---\n\n## THE END\n\n#### Thanks for reading!",
        "postTime": 1605326473,
        "uid": 41243,
        "name": "Lucky_Glass",
        "ccfLevel": 9,
        "title": "CSP2020\u8d2a\u5403\u86c7\u9898\u89e3"
    },
    {
        "content": "\u672c\u4eba\u56e0\u67d0\u4e9b\u5947\u602a\u7684\u539f\u56e0\u672a\u53bb\u53c2\u52a0 $CSP$ ,\u4f46\u662f\u8fd9\u5e76\u4e0d\u59a8\u788d\u672c\u4eba\u53d1\u9898\u89e3.\n\n**\u672c\u7b97\u6cd5\u4e0d\u4e00\u5b9a\u51c6\u786e,\u4f46\u662f\u5f53\u524d\u6d1b\u8c37\u6570\u636e,\u5b66\u519b\u4e2d\u5b66\u6570\u636e,\u725b\u5ba2\u6570\u636e\u5747\u53ef\u901a\u8fc7.**\n\n\u76f8\u4fe1 $70$ \u5206\u7684\u4ee3\u7801\u4e0d\u96be\u60f3\u5230.\n\n```cpp\n//This Code was made by Chinese_zjc_.\n//Deleted\n#define int long long\n#define double long double\nusing namespace std;\nconst double PI = acos(-1);\nconst double eps = 0.0000000001;\nconst int INF = 0x3fffffffffffffff;\nint T, n, m, a[1000005], x, y, kill[1000005], ans, big[1000005], small[1000005];\nbool killed[1000005];\nstruct L\n{\n    int v, p;\n    bool operator<(const L &__Val) const\n    {\n        return v == __Val.v ? p < __Val.p : v < __Val.v;\n    }\n};\nmultiset<L> que;\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin >> T;\n    for (int C = 1; C <= T; ++C)\n    {\n        if (C == 1)\n        {\n            cin >> n;\n            for (int i = 1; i <= n; ++i)\n            {\n                cin >> a[i];\n            }\n        }\n        else\n        {\n            cin >> m;\n            for (int i = 1; i <= m; ++i)\n            {\n                cin >> x >> y;\n                a[x] = y;\n            }\n        }\n        que.clear();\n        for (int i = 1; i <= n; ++i)\n        {\n            que.insert({a[i], i});\n        }\n        for (int i = 1; i < n; ++i)\n        {\n            multiset<L>::iterator A = --que.end(), B = que.begin();\n            big[i] = A->p;\n            small[i] = B->p;\n            que.insert({(A->v) - (B->v), A->p});\n            que.erase(A);\n            que.erase(B);\n        }\n        memset(killed, false, sizeof(killed));\n        ans = n - 1;\n        for (int i = n - 1; i; --i)\n        {\n            if (killed[big[i]])\n            {\n                for (int j = ans; j > i; --j)\n                {\n                    killed[small[j]] = false;\n                }\n                ans = i - 1;\n                continue;\n            }\n            killed[small[i]] = true;\n        }\n        cout << n - ans << endl;\n    }\n    return 0;\n}\n```\n\n\u5c31\u76f4\u63a5\u7528`std::set`\u7ef4\u62a4\u5373\u53ef,\u6700\u540e\u518d\u53cd\u7740\u626b\u4e00\u904d\u627e\u5230\u65ad\u70b9.\n\n\u7136\u540e\u6211\u5c31\u5f00\u59cb\u731c\u60f3:\u8fd9\u4e2a\u6bcf\u6b21\u5f97\u5230\u7684\u86c7\u662f\u4e0d\u662f\u5355\u8c03\u9012\u51cf\u7684.\n\n\u7136\u540e\u5c31\u628a\u5b83\u6362\u6210\u4e86`list`,\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u6765\u63d2\u5165,\u4f7f\u5f97\u63d2\u5165\u540e\u4f7f\u5176\u4f9d\u7136\u6709\u5e8f.\n\n\u8c01\u77e5\u9053\u5c31 $AC$ \u4e86,\u5e76\u4e14\u5f53\u524d\u672a\u88ab`hack`.\n\n~~\u5e0c\u671b\u6709 hack \u6570\u636e\u7684\u8bdd\u8d76\u7d27\u79c1\u4fe1\u6211,\u628a\u6211\u6740\u4e86\u5427\u2026~~\n\n\u5927\u5e38\u6570\u9009\u624b,\u5f00\u4e86 $O2$ \u624d\u8fc7\u2026\n\n$Code$:\n\n```cpp\n//This Code was made by Chinese_zjc_.\n//Deleted again\n#define int long long\n#define double long double\nusing namespace std;\nconst double PI = acos(-1);\nconst double eps = 0.0000000001;\nconst int INF = 0x3fffffffffffffff;\nint T, n, m, a[1000005], x, y, kill[1000005], ans, big[1000005], small[1000005];\nbool killed[1000005];\nstruct L\n{\n    int v, p;\n    bool operator<(const L &__Val) const\n    {\n        return v == __Val.v ? p < __Val.p : v < __Val.v;\n    }\n    friend ostream &operator<<(ostream &ost, const L &__Val)\n    {\n        return ost << \"(\" << __Val.v << ',' << __Val.p << \")\";\n    }\n};\nlist<L> que;\n// void print(list<L> &nmsl)\n// {\n//     for (auto i : nmsl)\n//     {\n//         cout << i;\n//     }\n//     cout << endl;\n// }\ntemplate <typename T>\nvoid read(T &x)\n{\n    x = 0;\n    char c = getchar();\n    while ('0' > c || c > '9')\n    {\n        c = getchar();\n    }\n    while ('0' <= c && c <= '9')\n    {\n        x = x * 10 + (c & 15);\n        c = getchar();\n    }\n}\nsigned main()\n{\n    // cin >> T;\n    read(T);\n    for (int C = 1; C <= T; ++C)\n    {\n        if (C == 1)\n        {\n            // cin >> n;\n            read(n);\n            for (int i = 1; i <= n; ++i)\n            {\n                // cin >> a[i];\n                read(a[i]);\n            }\n        }\n        else\n        {\n            // cin >> m;\n            read(m);\n            for (int i = 1; i <= m; ++i)\n            {\n                // cin >> x >> y;\n                read(x);\n                read(y);\n                a[x] = y;\n            }\n        }\n        que.clear();\n        for (int i = 1; i <= n; ++i)\n        {\n            que.push_back({a[i], i});\n        }\n        // print(que);\n        list<L>::iterator jb = que.end();\n        for (int i = 1; i < n; ++i)\n        {\n            list<L>::iterator A = --que.end(), B = que.begin();\n            //\u663e\u7136\u5c31\u662f\u4eceset\u6539\u8fc7\u6765\u7684\n            L nxt = L{A->v - B->v, A->p};\n            big[i] = A->p;\n            small[i] = B->p;\n            if (A == jb)\n            {\n                ++jb;\n            }\n            if (B == jb)\n            {\n                ++jb;\n            }\n            que.erase(A);\n            que.erase(B);\n            while (jb != que.begin() && !(*--jb < nxt))\n                ;\n            if (*jb < nxt)\n            {\n                que.insert(++jb, nxt);\n            }\n            else\n            {\n                que.insert(jb, nxt);\n            }\n            // print(que);\n        }\n        memset(killed, false, sizeof(killed));\n        ans = n - 1;\n        for (int i = n - 1; i; --i)\n        {\n            if (killed[big[i]])\n            {\n                for (int j = ans; j > i; --j)\n                {\n                    killed[small[j]] = false;\n                }\n                ans = i - 1;\n                continue;\n            }\n            killed[small[i]] = true;\n        }\n        cout << n - ans << endl;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1605100612,
        "uid": 118239,
        "name": "Chinese_zjc_",
        "ccfLevel": 0,
        "title": "P7078 \u9898\u89e3"
    },
    {
        "content": "\u601d\u8def\uff1a\n```cpp\n\u5bf9\u4e8e\u53ea\u67093\u6761\u86c7\uff0c\u4e0d\u96be\u76f8\u7b49\uff0c\u6700\u5927\u86c7\u5403\u4e86\u6700\u5c0f\u86c7\u540e\uff0c\u8981\u4e48\u8fd8\u662f\u6700\u5927\uff0c\u8981\u4e48\u662f\u6700\u5c0f\uff1b\u5982\u679c\u662f\u6700\u5927\uff0c\u80af\u5b9a\u7ee7\u7eed\u5403\uff0c\u7b54\u6848\u4e3a1\uff1b\u5982\u679c\u662f\u6700\u5c0f\uff0c\u80af\u5b9a\u4e0d\u5403\uff0c\u56e0\u4e3a\u5403\u4e86\u80af\u5b9a\u88ab\u5403\uff0c\u6240\u4ee5\u7b54\u6848\u662f3\u3002 \u8fd9\u4e2a\u7ed3\u8bba\uff0c\u63a8\u5e7f\u5230n\uff0c\u5c31\u662f\u6700\u5927\u86c7\u5403\u4e86\u6700\u5c0f\u86c7\u540e\uff0c\u5982\u679c\u4e0d\u662f\u6700\u5c0f\uff0c\u80af\u5b9a\u5403\uff0c\u56e0\u4e3a\u4e0b\u4e00\u6b21\u201c\u6b21\u5927\u86c7\u201d\u5403\u201c\u6b21\u5c0f\u86c7\u201d\uff0c\u8fd8\u662fa-b\uff0c\u53ea\u662fa\u53d8\u5c0f\u3001b\u53d8\u5927\uff0c\u6700\u7ec8\u80af\u5b9a\u66f4\u5c0f\uff0c\u9700\u8981\u8003\u8651\u5403\u4e0d\u5403\u7684\u662f\u4e0b\u4e00\u6761\u86c7\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u3002\u5982\u679c\u662f\u6700\u5c0f\uff0c\u90a3\u4e48\u770b\u4e00\u4e0b\u4e0b\u4e00\u6761\u86c7\u5403\u5b8c\u662f\u4e0d\u662f\u6700\u5c0f\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u81ea\u5df1\u80af\u5b9a\u88ab\u5403\uff0c\u6240\u4ee5\u81ea\u5df1\u53d8\u6700\u5c0f\u80af\u5b9a\u4e0d\u5403\uff01\u5982\u679c\u4e00\u76f4\u90fd\u662f\u6700\u5c0f\uff0c\u90a3\u4e48\u4e00\u76f4\u6267\u884c\u4e0b\u53bb\uff0c\u76f4\u52302\u6761\u86c7\u4e3a\u6b62\uff0c\u89c4\u6a21\u8db3\u591f\u5c0f\uff0c\u53ef\u4ee5\u4e0b\u7ed3\u8bba\uff01 \u5bf9\u4e8e\u4e00\u76f4\u5403\u4e0b\u53bb\u7684\u60c5\u51b5\uff0c\u7b2c1\u6761\u86c7\u51fa\u73b0\u6700\u5c0f\u3001\u7b2c2\u6761\u86c7\u5403\u5b8c\u8fd8\u662f\u6700\u5c0f\u3001\u7b2c3\u6761\u86c7\u5403\u5b8c\u8fd8\u662f\u6700\u5c0f\u2026\u2026\u7b2ck\u6761\u86c7\u662f\u6700\u5c0f\uff0c\u7b2ck+1\u6761\u86c7\u7ec8\u4e8e\u4e0d\u662f\u6700\u5c0f\uff0c\u6b64\u65f6k\u53d1\u73b0\u81ea\u5df1\u4e0d\u80fd\u5403\uff0c\u90a3\u4e48k-1\u53d1\u73b0\u81ea\u5df1\u53ef\u4ee5\u5403\uff0ck-2\u53d1\u73b0\u81ea\u5df1\u4e0d\u80fd\u5403\u2026\u2026\u4e5f\u5c31\u662fk\u662f\u5076\u6570\u7684\u65f6\u5019\uff0c\u5076\u6570\u90fd\u4e0d\u5403\uff0c\u5947\u6570\u90fd\u5403\uff0c\u7b2c\u4e00\u6761\u86c7\u4f1a\u5403\uff0c\u5373\u5728\u6700\u521d\u60c5\u51b5\u4e0b\u591a\u54031\u6761\u86c7\u3002\u6700\u521d\u60c5\u51b5\uff0c\u5373\u5f53\u524d\u86c7\u7684\u6570\u91cf\u52a0\u4e0a\u8fde\u7eed\u591a\u5c11\u6761\u86c7\u5403\u5b8c\u6210\u4e3a\u6700\u5c0f\u3002 \u66b4\u529b\u505a\u6cd5\uff1a\u63d2\u5165\u6392\u5e8f\u7ef4\u62a4\u86c7\u7684\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u3001\u5185\u5b58\u64cd\u4f5c\u4f18\u5316\u4e00\u4e0b\uff0c\u6709\u53ef\u80fd\u9a97\u523070\u5206\uff1b \u5806\u505a\u6cd5\uff1a\u53ef\u4ee5\u662f\u4e24\u4e2a\u5bf9\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u548c\u6700\u5927\u86c7\uff0clog\u53ef\u8fc7\u51e0\u5341\u4e07\u7684\u6570\u636e\u3002 \u5bf9\u4e8e100\u4e07\u7684\u6570\u636e\uff0c\u5fc5\u987b\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\uff1a\u5bb9\u6613\u770b\u51fa\uff0c\u6bcf\u6b21\u5403\u5b8c\uff0c\u603b\u6570\u6bd4\u4e0a\u4e00\u6b21\u5403\u5b8c\u7684\u86c7\u5c0f\uff0c\u6240\u4ee5\u65b0\u589e\u4e00\u4e2a\u961f\u5217\uff0c\u4f9d\u6b21\u5b58\u50a8\u65b0\u86c7\u3002\u5982\u679c\u65b0\u86c7\u662f\u6700\u5c0f\u7684\uff0c\u6709\u53ef\u80fd\u7834\u574f\u5355\u8c03\u6027\uff0c\u4f46\u6b64\u65f6\u5df2\u51fa\u7ed3\u8bba\uff0c\u4e0d\u9700\u8981\u518d\u7ef4\u62a4\u4e86\u3002\n\n```\n# \u4ee3\u7801\n![](http://www.oier.cc/wp-content/uploads/2020/11/P7078%E8%B4%AA%E5%90%83%E8%9B%87%E6%9A%B4%E5%8A%9B.png)",
        "postTime": 1609390627,
        "uid": 448566,
        "name": "\u6930\u6893\u8f7b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P7078 \u3010[CSP-S2020] \u8d2a\u5403\u86c7\u3011"
    }
]