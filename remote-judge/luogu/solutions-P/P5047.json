[
    {
        "content": "~~\u4e00\u79cd\u975e\u5e38\u817b\u5bb3\u7684\u9ad8\u79d1\u6280\u3002\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\uff0c$stOlxlOrz$~~\n\n\u9996\u5148\u6211\u4eec\u5eb7\u5eb7\u8fd9\u9053\u9898\u7684\u66b4\u529b\u83ab\u961f\u600e\u4e48\u505a\u3002\n\n\u5176\u5b9e\u5c31\u662f\u641e\u4e2a\u6743\u503c\u6811\u72b6\u6570\u7ec4\uff0c\u6bcf\u6b21\u53f3\u6307\u9488\u53f3\u79fb\u7684\u65f6\u5019\u67e5\u8be2\u4e00\u4e0b\u5f53\u524d\u533a\u95f4 $[l,r]$ \u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5927\u5373\u53ef\u3002\n\n\u5176\u4ed6\u7c7b\u4f3c\u3002\n\n\u590d\u6742\u5ea6$O(n\\sqrt m\\log n)$\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint read() {\n    char cc = getchar(); int cn = 0, flus = 1;\n    while(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n    while(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n    return cn * flus;\n}\nconst int N = 100000 + 5 ;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define lowbit(x) ( x & ( - x ) )\nint n, m, tot, ans[N] ;\nint tree[N], c[N] ; \nstruct Q {\n    int l, r, id ;  \n} q[N], p[N];\nbool cmp( Q a, Q b ) {\n    return ( a.l / tot == b.l / tot ) ? a.r < b.r : a.l < b.l ;  \n}\nbool cmp2( Q a, Q b ) {\n    return a.l < b.l ;\n}\nvoid tr_add( int x, int k ) {\n    for( int i = x; i <= n; i += lowbit(i) ) tree[i] += k ; \n}\nint tr_sum( int x ) {\n    int ans = 0 ;\n    for( int i = x; i; i -= lowbit(i) ) ans += tree[i] ; \n    return ans ; \n}\nvoid init() {\n    sort( q + 1, q + m + 1, cmp ) ;\n    int l = 1, r = 0; int Ans = 0 ;\n    rep( i, 1, m ) {\n        while( r < q[i].r ) Ans += 1ll * ( r - l + 1 - tr_sum(c[++ r]) ), tr_add( c[r], 1 ) ;\n        while( r > q[i].r ) Ans -= 1ll * ( r - l + 1 - tr_sum(c[r --]) ), tr_add( c[r + 1], -1 ) ;\n        while( l < q[i].l ) Ans -= 1ll * tr_sum( c[l ++] - 1 ), tr_add( c[l - 1], -1 ) ;\n        while( l > q[i].l ) Ans += 1ll * tr_sum( c[-- l] - 1 ), tr_add( c[l], 1 ) ; \n        ans[q[i].id] = Ans ; \n    }\n    rep( i, 1, m ) printf(\"%lld\\n\", ans[i] ) ;\n}\nsigned main()\n{\n    n = read(), m = read() ; tot = n / sqrt( m * 1.5 ) ;\n    rep( i, 1, n ) p[i].l = c[i] = read(), p[i].id = i ; \n    sort( p + 1, p + n + 1, cmp2 ) ; \n    int idnum = 0 ; p[0].l = -1 ; \n    rep( i, 1, n ) c[p[i].id] = ( idnum += ( p[i].l != p[i - 1].l ) ) ;\n    rep( i, 1, m ) q[i].l = read(), q[i].r = read(), q[i].id = i ; \n    init() ; \n    return 0;\n}\n```\n\n\u8c8c\u4f3c\u5728$O(2)$\u52a0\u6301\u4e0b\u53ef\u4ee5\u83b7\u5f97 $20$ \u7684\u9ad8\u5206$(-///-)$\n\n\u8003\u8651\u4f18\u5316\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u7684\u67d0\u4e00\u6b21\u8be2\u95ee\u5176\u5b9e\u662f\u53ef\u4ee5\u5dee\u5206\u7684\u3002\n\n\u5373\u6bcf\u6b21\u53f3\u6307\u9488\u53f3\u79fb\u7684\u65f6\u5019\uff0c\u90fd\u6709\u8fd9\u6837\u7684\u4e00\u7ec4\u8be2\u95ee\uff1a$l-r$\u4e2d\u6709\u591a\u5c11\u6570\u6bd4$a[r]$\u5927\n\n\u7136\u800c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5dee\u5206\uff1a$[1,r]$\u4e2d\u6bd4$a[r]$\u5927\u7684\u6570\u7684\u6570\u91cf$-[1,l]$\u4e2d\u6bd4$a[r]$\u5927\u7684\u6570\u7684\u6570\u91cf\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u524d\u9762\u90a3\u4e00\u5768\u8c8c\u4f3c\u5c31\u662f\u76f4\u63a5\u7684\u9006\u5e8f\u5bf9\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u505a\u3002\n\u590d\u6742\u5ea6$O(nlogn)$\n\n\u7136\u540e\u5bf9\u4e8e\u540e\u9762\u90a3\u4e00\u5768\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u83ab\u961f\u6307\u9488\u7684\u79fb\u52a8\u518d\u6b21\u79bb\u7ebf\uff0c\u5c06\u6240\u6709\u6307\u9488$r$\u7684\u79fb\u52a8\uff0c\u5b58\u5230\u5176\u79fb\u52a8\u524d\u5bf9\u5e94\u7684$l$\u5904$($\u5f00\u4e2a$vector)$\n\n\u7136\u540e\u6211\u4eec\u60f3\u8981\u5904\u7406\u51fa\u540e\u9762\u90a3\u4e00\u5768\u600e\u4e48\u529e\uff0c\u5c06\u53f3\u6307\u9488\u7684\u79fb\u52a8\u518d\u6b21\u79bb\u7ebf\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4ee5\u7c7b\u4f3c\u4e8e\u626b\u63cf\u7ebf\u7684\u65b9\u5f0f\u8ba9\u5de6\u6307\u9488\u4ece$1-n$ **\u626b** \u8fc7\u53bb\n\n\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5728\u626b\u5230\u7684\u4f4d\u7f6e$x$\u65f6\u53bb\u89e3\u51b3\u4ee5$x$\u4e3a\u5de6\u7aef\u70b9\u7684\u53f3\u7aef\u70b9\u7684\u79fb\u52a8\u5373\u53ef\u3002\uff08\u5373$1-x$\u5185\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b58\u4e0b\u6765\u7684\u53f3\u7aef\u70b9\u5927\uff09\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4e00\u5171\u5b58\u4e86$n\\sqrt m$ \u7ec4\u79fb\u52a8\uff0c\uff08\u83ab\u961f\u590d\u6742\u5ea6\uff0c\u603b\u79fb\u52a8\u6b21\u6570\uff09\u4e5f\u5c31\u662f\u8981\u5904\u7406$n\\sqrt m$\u7ec4\u8be2\u95ee\u3002\n\n\u7136\u800c\u6211\u4eec\u53ef\u4ee5\u5e73\u8861\u5b83\u7684\u590d\u6742\u5ea6\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u5904\u7406$n\\sqrt m$\u8be2\u95ee\uff0c\u5374\u53ea\u9700\u8981\u63d2\u5165$O(n)$\u7ec4\u6570\uff08\u5373\u5de6\u7aef\u70b9\u626b\u8fc7\u53bb\u7684\u8fc7\u7a0b\u53ea\u79fb\u52a8 $n$ \u6b21\uff09\n\n\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u63d2\u5165$O(\\sqrt n),$\u67e5\u8be2$O(1)$\u7684\u6570\u7ec4\u7ed3\u6784$->$\u503c\u57df\u5206\u5757\u3002\n\n\u5bf9\u4e8e\u83ab\u961f\u4e2d\u7684\u56db\u79cd\u79fb\u52a8\u5206$4$\u7c7b\u8ba8\u8bba\uff0c\u6700\u540e\u9700\u8981\u4ece$1-n$\u7528\u5de6\u7aef\u70b9\u626b\u4e00\u904d\u8fd8\u9700\u8981\u518d\u7528\u53f3\u7aef\u70b9\u4ece$n-1$\u626b\u4e00\u904d\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u88ab\u5e73\u8861\u5230\u4e86$O(n\\sqrt m+n\\sqrt n)$\u8fa3\u3002\n\n\u4f46\u662f\u8fd9\u6837\u505a\u8981\u628a$n\\sqrt m$\u79fb\u52a8\u5b58\u4e0b\u6765\uff0c\u7a7a\u95f4\u5403\u4e0d\u4e0b\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u83ab\u961f\u7684\u79fb\u52a8\u548c\u6709\u89c4\u5f8b\uff0c\u5f53\u53f3\u7aef\u70b9\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u5176\u5de6\u7aef\u70b9\u5e76\u6ca1\u6709\u53d1\u751f\u4efb\u4f55\u79fb\u52a8\uff0c\u6362\u800c\u8a00\u53ea\uff0c\u6211\u4eec\u521a\u521a\u7684\u505a\u6cd5\u5176\u5b9e\u5c06\u6240\u6709\u53f3\u7aef\u70b9\u7684\u79fb\u52a8\u90fd\u5b58\u5728\u4e86\u540c\u4e00\u4e2a\u5de6\u7aef\u70b9$l$\u7684$vector$\u5185\u3002\n\n\u800c\u4e14\u8fd9\u4e9b\u53f3\u7aef\u70b9\u7684\u7f16\u53f7\u5176\u5b9e\u90fd\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u5176\u5b9e\u6211\u4eec\u6839\u672c\u5c31\u6ca1\u5fc5\u8981\u6240\u6709\u7684\u79fb\u52a8\u90fd\u5b58\u4e0b\u6765\uff0c\u53ef\u4ee5\u5c06\u5de6\u7aef\u70b9\u4e0d\u52a8\u7684\u82e5\u5e72\u6b21\u53f3\u7aef\u70b9\u7684\u79fb\u52a8\u5f53\u4f5c\u4e00\u4e2a\u533a\u95f4\u5b58\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n\u5f53\u7136\u4f60\u5bf9\u4e8e\u533a\u95f4\u5185\u7684\u5143\u7d20\u7684\u8be2\u95ee\u8fd8\u662f\u8981\u9010\u4e00\u5904\u7406\u7684\u3002\n\n\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u4e86 $O(M)$\n\n\u6ce8\u610f\uff0c\u5982\u679c\u8fd9\u6837\u5904\u7406\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2aans\u6570\u7ec4\u5176\u5b9e\u5b58\u4e0b\u6765\u7684\u662f\u5176\u4e8e\u4e0a\u4e00\u6b21\u7684\u5de6\u53f3\u7aef\u70b9\u4e4b\u95f4\u7684\u53d8\u5316\u91cf\uff0c\u6240\u4ee5\u8fd8\u8981\u518d\u505a\u4e00\u904d\u524d\u7f00\u548c\u3002\n\n\u4e0b\u9762\u662f\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801$QwQ$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\nint read() {\n    char cc = getchar(); int cn = 0, flus = 1;\n    while(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n    while(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n    return cn * flus;\n}\nconst int N = 100000 + 5 ;\nconst int M = 355 ; \n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define drep( i, t, s ) for( register int i = t; i >= s; -- i )\n#define lowbit(x) ( x & ( - x ) )\nint n, m, tot, idnum, tree[N], c[N], num1[N], num2[N], cnt, w[N], bel[N], sz, L[M], R[M], ad[M] ; \nLL ans[N], sum1[N], sum2[N];\nstruct Q { int l, r, id ; } q[N], p[N];\nstruct node { int p, l, r, id ; };\nvector< node> vec1[N], vec2[N] ; \nbool cmp( Q a, Q b ) { return ( a.l / tot == b.l / tot ) ? a.r < b.r : a.l < b.l ; }\nbool cmp2( Q a, Q b ) { return a.l < b.l ; }\nvoid tr_add( int x, int k ) { for( int i = x; i <= n; i += lowbit(i) ) tree[i] += k ; }\nint tr_sum( int x ) {\n    int ans = 0 ;\n    for( int i = x; i; i -= lowbit(i) ) ans += tree[i] ; \n    return ans ; \n}\nvoid add1( int x, int p, int k1, int k2, int id ) { //\u5b58\u67e5\u8be2 \n    vec1[x].push_back((node){ p, k1, k2, id } ) ;\n}\nvoid add2( int x, int p, int k1, int k2, int id ) {//\u5b58\u67e5\u8be2 \n    vec2[x].push_back((node){ p, k1, k2, id } ) ;\n}\nvoid pushup1( int x ) { //\u5de6\u8fb9\u505a\u7684\u503c\u57df\u5206\u5757 \n    if( ad[bel[x]] ) rep( i, L[bel[x]], R[bel[x]] ) w[i] += ad[bel[x]] ; ad[bel[x]] = 0 ;\n    rep( i, L[bel[x]], x ) ++ w[i];\n    int siz = bel[x] - 1 ; rep( i, 1, siz ) ++ ad[i] ;\n}\nvoid pushup2( int x ) { //\u53f3\u8fb9\u505a\u7684\u503c\u57df\u5206\u5757 \n    if( ad[bel[x]] ) rep( i, L[bel[x]], R[bel[x]] ) w[i] += ad[bel[x]] ; ad[bel[x]] = 0 ;\n    rep( i, x, R[bel[x]] ) ++ w[i] ; rep( i, bel[x] + 1, sz ) ++ ad[i] ; \n}\nvoid solve() {\n    cnt = sqrt( idnum ); sz = 1; L[sz] = 1;  \n    if( cnt * cnt < idnum ) ++ cnt ; \n    rep( i, 1, idnum ) { bel[i] = sz ; if( i % cnt == 0 ) R[sz] = i, L[++ sz] = i + 1 ; } //\u5206\u5757\u521d\u59cb\u5316 \n\tR[sz] = idnum ;\n\trep( i, 1, n ) {\n        int siz = vec1[i].size() - 1, fr, ed, id; LL p ; \n        rep( j, 0, siz ) { \n\t\tid = vec1[i][j].id, p = 1ll * vec1[i][j].p, fr = vec1[i][j].l, ed = vec1[i][j].r; \n\t\t\trep( k, fr, ed ) ans[id] += 1ll * p * ( ad[bel[c[k] + 1]] + w[c[k] + 1] );\n\t\t} pushup1( c[i] ); //\u7ed9[1,c[i]]+1 \n    }\n    memset( ad, 0, sizeof(ad) ), memset( w, 0, sizeof(w) ) ;\n    drep( i, n, 1 ) {\n        int siz = vec2[i].size() - 1, fr, ed, id; LL p ;\n        rep( j, 0, siz ) { \n\t\tid = vec2[i][j].id, p = 1ll * vec2[i][j].p, fr = vec2[i][j].l, ed = vec2[i][j].r; \n            rep( k, fr, ed ) ans[id] += 1ll * p * ( ad[bel[c[k] - 1]] + w[c[k] - 1] );\n\t\t} pushup2( c[i] ) ;//\u7ed9 [c[i],n]+1 \n    }\n}\nsigned main()\n{\n    n = read(), m = read() ; tot = 355 ;\n    rep( i, 1, n ) p[i].l = c[i] = read(), p[i].id = i ; \n    sort( p + 1, p + n + 1, cmp2 ), p[0].l = -1 ; \n    rep( i, 1, n ) c[p[i].id] = ( idnum += ( p[i].l != p[i - 1].l ) ) ; //\u79bb\u6563\u5316 \n    rep( i, 1, m ) q[i].l = read(), q[i].r = read(), q[i].id = i ;  //\u5b58\u67e5\u8be2 \n    rep( i, 1, n ) num1[i] += ( i - 1 - tr_sum(c[i]) ), tr_add( c[i], 1 ), sum1[i] = sum1[i - 1] + num1[i] ; //\u4ece\u5de6\u5f80\u53f3\u505a \n    memset( tree, 0, sizeof(tree) ) ; \n    drep( i, n, 1 ) num2[i] += tr_sum(c[i] - 1), tr_add( c[i], 1 ), sum2[i] = sum2[i + 1] + num2[i] ;//\u4ece\u53f3\u5f80\u5de6\u505a \n    sort( q + 1, q + m + 1, cmp ) ;\n    int l = 1, r = 0;\n    rep( i, 1, m ) {\n        if( r < q[i].r ) ans[q[i].id] += ( sum1[q[i].r] - sum1[r] ), \n\t\t\tadd1( l, -1, r + 1, q[i].r, q[i].id ), r = q[i].r ;\n        if( r > q[i].r ) ans[q[i].id] -= ( sum1[r] - sum1[q[i].r] ), \n\t\t\tadd1( l, 1, q[i].r + 1, r, q[i].id ), r = q[i].r ;\n        if( l < q[i].l ) ans[q[i].id] -= ( sum2[l] - sum2[q[i].l]), \n\t\t\tadd2( r, 1, l, q[i].l - 1, q[i].id ), l = q[i].l ;\n        if( l > q[i].l ) ans[q[i].id] += ( sum2[q[i].l] - sum2[l] ), \n\t\t\tadd2( r, -1, q[i].l, l - 1, q[i].id ), l = q[i].l ;\n    }\n    solve() ; \n    rep( i, 1, m ) ans[q[i].id] += ans[q[i - 1].id] ; rep( i, 1, m ) printf(\"%lld\\n\", ans[i] ) ;\n    return 0;\n}\n```",
        "postTime": 1556099974,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "lxl\u7ed9\u7684\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u7b97\u6cd5\u6a21\u677f\u4e4b\u4e00\u3002\n\n\u9898\u76ee\u7ed9\u4f60\u4e00\u4e2a\u6570\u5217\uff0c\u548c $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u6c42\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u5185\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u9996\u5148\u79bb\u6563\u5316\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u8003\u8651\u9700\u8981\u8ba1\u7b97\u7684\u8d21\u732e\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u6269\u5927\u5230\u4e86 $[l,r+1]$\uff0c\u5219\u591a\u51fa\u4e86\u4e00\u4e2a\u7f16\u53f7\u4e3a $r+1$ \u7684\u70b9\uff0c$x$\uff0c\u5b83\u7684\u8d21\u732e\u5219\u4e3a $x$ \u548c $[l,r]$ \u533a\u95f4\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\u800c\u8fd9\u4e2a\u503c\u5c31\u662f $x$ \u548c $[1,r]$ \u533a\u95f4\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff08\u8bbe\u503c\u4e3a $a$\uff09$-$ $x$ \u548c $[1,l-1]$ \u533a\u95f4\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff08\u8bbe\u503c\u4e3a $b$\uff09\u3002\n\n\u5982\u4f55\u6c42\u51fa $a$ \u7684\u503c\uff1f\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3c\u6811\u72b6\u6570\u7ec4\u7684\u4e1c\u897f\u521d\u59cb\u5316\u4e00\u4e0b\uff0c\u7136\u540e\u7528\u83ab\u961f\u6c42\u8d21\u732e\u548c\u6269\u5927\u533a\u95f4\u3002\n\n\u5982\u4f55\u6c42 $b$ \u90e8\u5206\u7684\u503c\uff1f\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u533a\u95f4\u6269\u5927\u5230\u4e86 $[l, r_1]$\uff0c\u8fd9\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u662f $x$\uff08\u65b0\u589e\u90e8\u5206\uff09\u548c $[1,l-1]$ \u7684\u533a\u95f4\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\u53ef\u4ee5\u7528 $\\texttt {vector}$ \u8bb0\u5f55\u5230\u5f53\u524d\u5143\u7d20\u53ef\u4ee5\u8d21\u732e\u7684\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u3002\n\n\u6700\u540e\u7edf\u8ba1\u603b\u8d21\u732e\u7684\u65f6\u5019\u53ef\u4ee5\u7528\u626b\u63cf\u7ebf\u4ece $1$ \u5230 $n$ \u8fc7\u4e00\u904d\uff0c\u5f97\u5230\u7b54\u6848\u8f93\u51fa\u6bcf\u4e2a\u8be2\u95ee\u5bf9\u5e94\u7684\u8f93\u51fa\u3002\n\n\u6240\u4ee5\u7528**\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f**\u590d\u6742\u5ea6\u5927\u7ea6\u5c31\u662f $O(n\\sqrt m + n\\sqrt n)$\uff0c\u79fb\u52a8\u64cd\u4f5c $O(\\sqrt n)$\uff0c\u67e5\u8be2\u4e3a $O(1)$\uff0c\u83ab\u961f\u590d\u6742\u5ea6\u76f8\u5f53\u4f18\u8d8a\u3002\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n- \u8fd9\u9898\u4e2d\u6709\u7684\u6570\u9700\u8981\u5f00ll\uff0c\u4f46\u662f\u4e0d\u8981\u76f4\u63a5\u90fd\u5f00\uff0c\u5426\u5219\u4f1aTLE\uff0c\u5f88\u96be\u5361\u3002\n\n- \u56e0\u4e3a\u67d0\u4e9b\u7384\u5b66\u7684\u539f\u56e0\uff0c\u83ab\u961f\u7b97\u6cd5\u9700\u8981\u628a\u6570\u7ec4\u5f00\u5927\uff0c$10^5$\u4f1a20pts\uff0c\u6211\u5f00\u5230\u4e86$2 \\times 10^5$ \u5c31\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n/* by JS\n * P5047 [Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\n * \u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u7b97\u6cd5 */\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n//#define int long long\n\n//#define lowbit(x) (x & -x)\n\nconst int MAXN = 200005;\n\nint n, m, a[MAXN], block, A[MAXN], L = 1, R;\nll _l[MAXN], _r[MAXN], b[MAXN], ec[MAXN], cnt[MAXN];\n\n/* block\uff1a\u5757\u957f\n * a\uff1a\u539f\u5e8f\u5217\n * n, m\uff1a\u9898\u76ee\u4e2d\u7684\u6570 */\n\ninline int getposition(register int i) { return (i - 1) / block + 1; } // \u6240\u5728\u7684\u5757\n\ninline int lowbit(register int x) {\n    return (x & (-x));\n}\n\nstruct Node {\n    int l, r, id;\n\n    friend bool operator<(const Node &a, const Node &b) {\n        if (a.l / block == b.l / block) {\n            return a.r < b.r;\n        }\n        return a.l < b.l;\n    }\n} nodes[MAXN];\n\nstruct vnode {\n    int l, r, id, x;\n};\nvector<vnode> __l[MAXN], __r[MAXN];\n\nstruct Bit {\n    int BIT[MAXN];\n\n    inline void add(register int x) { // \u52a0\n        while (x <= n) {\n            BIT[x]++;\n            x += lowbit(x);\n        }\n    }\n\n    inline int sum(register int x) { // \u6c42\u548c\n        register int ans = 0;\n        while (x) {\n            ans += BIT[x];\n            x -= lowbit(x);\n        }\n        return ans;\n    }\n\n    inline void clear() { // \u6e05\u7a7a\n        memset(BIT, 0, sizeof(BIT));\n    }\n} _bit;\n\ninline void addL(register int a) {\n    for (register int i = a; i >= (getposition(a) - 1) * block + 1; --i) {\n        cnt[i]++;\n    }\n    for (register int i = getposition(a) - 1; i; --i) {\n        ec[i]++;\n    }\n}\n\ninline void addR(register int a, register int uni) {\n    for (register int i = a; i <= (getposition(a) - 1) * block + block; ++i) {\n        cnt[i]++;\n    }\n    for (register int i = getposition(a) + 1; i <= getposition(uni); ++i) {\n        ec[i]++;\n    }\n}\n\ninline int calc(register int a) {\n    register int ans = cnt[a];\n    ans += ec[getposition(a)];\n    return ans;\n}\n\ninline void solve() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    cin >> n >> m;\n    block = sqrt(n); // \u53d6sqrt(n)\u5757\u957f\u90fd\u662f\u90aa\u6559 \u2014\u2014 ClCN\n    for (register int i = 1; i <= n; ++i) {\n        cin >> a[i];\n        A[i] = a[i];\n    }\n    sort(A + 1, A + n + 1);\n    register int uni = unique(A + 1, A + n + 1) - A - 1;\n    for (register int i = 1; i <= n; ++i) { // \u79bb\u6563\u5316\n        a[i] = lower_bound(A + 1, A + uni + 1, a[i]) - A;\n    }\n    for (register int i = 1; i <= m; ++i) {\n        cin >> nodes[i].l >> nodes[i].r;\n        nodes[i].id = i;\n    }\n    sort(nodes + 1, nodes + m + 1);\n    for (register int i = 1; i <= n; ++i) {\n        _l[i] = _l[i - 1] + _bit.sum(n) - _bit.sum(a[i]);\n        _bit.add(a[i]);\n    }\n    _bit.clear();\n    for (register int i = n; i; --i) {\n        _r[i] = _r[i + 1] + _bit.sum(a[i] - 1);\n        _bit.add(a[i]);\n    }\n    for (register int i = 1; i <= m; ++i) {\n        register int l = nodes[i].l, r = nodes[i].r, id = nodes[i].id;\n        if (R < r) {\n            __l[L - 1].push_back((vnode) {R + 1, r, id, 0});\n            b[id] += _l[r] - _l[R];\n        }\n        if (R > r) {\n            __l[L - 1].push_back((vnode) {r + 1, R, id, 1});\n            b[id] -= _l[R] - _l[r];\n        }\n        if (L > l) {\n            __r[r + 1].push_back((vnode) {l, L - 1, id, 0});\n            b[id] += _r[l] - _r[L];\n        }\n        if (L < l) {\n            __r[r + 1].push_back((vnode) {L, l - 1, id, 1});\n            b[id] -= _r[L] - _r[l];\n        }\n        L = l, R = r;\n    }\n    for (register int i = 1; i <= n; ++i) {\n        addL(a[i] - 1);\n        for (vnode &x:__l[i]) {\n            register int l = x.l, r = x.r, id = x.id, _x = x.x;\n            register ll tmp = 0;\n            for (register int j = l; j <= r; ++j) {\n                tmp += calc(a[j]);\n            }\n            if (_x) {\n                b[id] += tmp;\n            } else b[id] -= tmp;\n        }\n    }\n    memset(ec, 0, sizeof(ec));\n    memset(cnt, 0, sizeof(cnt));\n    for (register int i = n; i; --i) {\n        addR(a[i] + 1, uni);\n        for (vnode &x:__r[i]) {\n            register int l = x.l, r = x.r, id = x.id, _x = x.x;\n            register ll tmp = 0;\n            for (register int j = l; j <= r; ++j) {\n                tmp += calc(a[j]);\n            }\n            if (_x) {\n                b[id] += tmp;\n            } else b[id] -= tmp;\n        }\n    }\n    for (register int i = 1; i <= m; ++i) {\n        register int id = nodes[i].id;\n        b[id] += b[nodes[i - 1].id];\n    }\n    for (register int i = 1; i <= m; ++i) {\n        cout << b[i] << '\\n';\n    }\n}\n\nint main() {\n    //freopen(\"P5047_1.in\", \"r\", stdin);\n    //freopen(\"lxlduliu.out\", \"w\", stdout);\n    solve();\n    return 0;\n}\n```\n",
        "postTime": 1603883264,
        "uid": 298325,
        "name": "Marshadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "### \u6b63\u6587\n\n\u8fd8\u662f\u8003\u8651\u4e8c\u6b21\u79bb\u7ebf\uff0c\u90a3\u4e48\u9700\u8981\u9884\u5904\u7406\n\n$$\\sum_{i=1}^k (i,i)(1,i-1)\\quad | \\quad \\sum_{i=1}^k (i,i)(1,i)$$\n\n\u548c\n\n$$\\sum_{i=k+1}^n (i,i)(i+1,n)\\quad | \\quad \\sum_{i=k+1}^n (i,i)(i,n)$$\n\n\u8fd9 $4$ \u4e2a\u4fe1\u606f\uff0c\u56e0\u4e3a\u5728\u8ba1\u7b97\u9006\u5e8f\u5bf9\u7684\u65f6\u5019\u662f\u6709\u65b9\u5411\u6027\u7684\uff0c$l$ \u5411\u5de6\u6269\u5c55/\u5411\u53f3\u6536\u7f29\u5bf9\u5e94\u7684\u662f $(l+1,n)$ \u4e4b\u95f4\u7684\u4fe1\u606f\uff0c$r$ \u5411\u53f3\u6269\u5c55/\u5de6\u6536\u7f29\u5bf9\u5e94\u7684\u662f $(1,r-1)$ \u4e4b\u95f4\u7684\u4fe1\u606f\u3002\u540c\u65f6\u6ce8\u610f\u5230\u7531\u4e8e $(i,i)(1,i)=(i,i)(1,i-1)$ \uff0c\u6240\u4ee5\u672c\u8d28\u4e0a\u662f\u4e24\u4e2a\u4fe1\u606f\u3002\u8fd9\u4e2a\u53ef\u4ee5 $O(n\\log n)$ \u9884\u5904\u7406\u3002\n\n\u540c\u7406\uff0c\u5bf9\u4e8e\u4e0d\u80fd\u9884\u5904\u7406\u7684\u533a\u95f4\uff0c\u4e5f\u662f\u8981\u5206\u5de6\u8fb9\u7684\u8d21\u732e\u548c\u53f3\u8fb9\u7684\u8d21\u732e\u6765\u505a\u3002\u6839\u636e\u65b9\u5411\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5224\u65ad\u6bcf\u79cd\u60c5\u51b5\u8d21\u732e\u5e94\u8be5\u600e\u4e48\u52a0\uff0c\u62ff\u4e24\u79cd\u503c\u57df\u5206\u5757\uff0c\u5206\u522b\u7ef4\u62a4\u524d\u7f00\u548c&\u540e\u7f00\u548c\u5c31\u597d\u4e86\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\u65b9\u9762\u9700\u8981\u6ce8\u610f\uff1a\n\n1\u3001\u672c\u9898\u6570\u636e\u4e2d\u5b58\u5728 $a_i$ \u76f8\u540c\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u5730\u65b9\u4f1a\u5361\u6c42\u9006\u5e8f\u5bf9\u65f6\u7684\u8fb9\u754c\uff0c\u6ce8\u610f\u5224\u4e00\u4e0b\u5373\u53ef\u3002\n\n2\u3001\u503c\u57df\u5206\u5757\u9700\u8981\u6ce8\u610f\uff0c\u53ea\u9700\u8981\u4fee\u6539\u6574\u5757\u7684 `sum`\uff0c\u96f6\u6563\u7684\u70b9\u5355\u72ec\u7b97\u8d21\u732e\u3002\n\n____\n\n### \u8865\u5145\u77e5\u8bc6\n\n#### 1\u3001\u4e8c\u6b21\u79bb\u7ebf\u5728\u83ab\u961f\u4e0a\u7684\u5e94\u7528\n\n\u5927\u6982\u662f\u4e00\u79cd\u9700\u8981\u7ef4\u62a4\u4fe1\u606f\u5177\u6709\u53ef\u51cf\u6027\u7684\u83ab\u961f\u3002\u53ea\u8981\u5177\u53ef\u51cf\u6027\uff0c\u5c31\u53ef\u4ee5\u5bb9\u65a5\uff0c\u5c31\u53ef\u4ee5\u4e8c\u6b21\u79bb\u7ebf\u3002\u6240\u8c13\u300e\u4e8c\u6b21\u79bb\u7ebf\u300f\uff0c\u5927\u6982\u662f\u6307\u7531\u4e8e\u666e\u901a\u83ab\u961f\u65e0\u6cd5\u5feb\u901f\u8ba1\u7b97\u8d21\u732e\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b21\u79bb\u7ebf\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u7b2c\u4e8c\u6b21\u79bb\u7ebf\u628a\u83ab\u961f\u7684\u8f6c\u79fb\u8fc7\u7a0b\u79bb\u7ebf\u4e0b\u6765\u3002\u7136\u540e\u7531\u4e8e\u4fe1\u606f\u5177\u6709\u53ef\u51cf\u6027(\u6bd4\u5982\u5e38\u89c1\u7684\u300c\u70b9\u5bf9\u6570\u300d)\uff0c\u90a3\u4e48\u53ef\u4ee5\uff1a\n\n\u8bb0 $(a,b)(c,d)$ \u8868\u793a\u533a\u95f4 $[a,b]$ \u5185\u7684\u70b9\u548c\u533a\u95f4 $[c,d]$ \u5185\u7684\u70b9\u5bf9\u5f7c\u6b64\u4ea7\u751f\u7684\u8d21\u732e(\u533a\u95f4\u5185\u90e8\u4e0d\u7b97)\u3002 \n\n\uff081\uff09\u5982\u679c $[l,r]\\to [l+t,r]$ \uff0c\u90a3\u4e48\u53ef\u77e5 \n\n$$\\Delta ans=\\sum_{i=l}^{l+t-1} (i,i)(i+1,r)=\\sum_{i=l}^{l+t-1} \\left((i,i)(1,r)-(i,i)(1,i)\\right)=(l,l+t-1)(1,r)-\\sum_{i=l}^{l+t-1}(i,i)(1,i)$$\n\n\uff082\uff09\u5982\u679c $[l,r]\\to [l-t,r]$ \uff0c\u90a3\u4e48\u53ef\u77e5\n\n$$\\Delta ans=\\sum_{i=l-t}^{l-1} (i,i)(i+1,r)=\\sum_{i=l-t}^{l-1} \\left((i,i)(1,r)-(i,i)(1,i)\\right)=(l-t,l-1)(1,r)-\\sum_{i=l-t}^{l-1}(i,i)(1,i)$$\n\n\uff083\uff09\u5982\u679c $[l,r]\\to [l,r+t]$ \uff0c\u90a3\u4e48\u53ef\u77e5\n\n$$\\Delta ans=\\sum_{i=r+1}^{r+t}(i,i)(l,i-1)=\\sum_{i=r+1}^{r+t}((1,i-1)(i,i)-(1,l-1)(i,i))=-(1,l-1)(r+1,r+t)+\\sum_{i=r+1}^{r+t}(i,i)(1,i-1)$$\n\n\uff084\uff09\u5982\u679c $[l,r]\\to [l,r-t]$ \uff0c\u90a3\u4e48\u53ef\u77e5\n\n$$\\Delta ans=\\sum_{i=r-t+1}^{r}(i,i)(l,i-1)=\\sum_{i=r-t+1}^{r}((1,i-1)(i,i)-(1,l-1)(i,i))=-(1,l-1)(r-t+1,r)+\\sum_{i=r-t+1}^{r}(i,i)(1,i-1)$$\n\n\u5176\u4e2d $\\sum$ \u5e76\u4e0d\u662f\u771f\u6b63\u7684 $\\sum$ \uff0c\u4e0d\u540c\u60c5\u51b5\u4e0b\u9700\u8981\u6309\u987a\u5e8f(\u5373\u4e0d\u518d\u6709\u4ea4\u6362\u5f8b)\uff0c\u6bd4\u5982 $[l,r]\\to [l,r-t]$ \u65f6\u5c31\u9700\u8981\u4ece $r-1$ \u7b97\u5230 $r-t$ \u3002\n\n\u7136\u540e\u8fd9\u6837\u5bb9\u65a5\u4e4b\u540e\uff0c\u540e\u9762\u7684 $\\sum$ \u5c31\u53ef\u4ee5\u9884\u5904\u7406\u4e86\uff0c\u524d\u9762\u7684 $()()$ \uff0c\u7531\u4e8e\u83ab\u961f\u7684\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u77e5\u9053\u81f3\u591a\u6709 $n\\sqrt m$ \u4e2a\u4e0d\u540c\u7684\u8be2\u95ee\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u6bcf\u4e00\u7ec4\u8be2\u95ee\u6253\u6807\u8bb0\uff0c\u6253\u5230\u5de6\u7aef\u70b9\u662f $1$ \u7684\u90a3\u4e2a\u8be2\u95ee\u4e0a (\u6bd4\u5982 $[l,r]\\to [l,r-t]$ \u5c31\u6253\u5230 $l-1$ \u4e0a)\u3002\u6700\u540e\u626b\u4e00\u904d\u5168\u90e8\u7684 $i\\in[1,n]\\cap\\mathbb{Z_+}$\uff0c\u8fd9\u6837\u6700\u7ec8\u590d\u6742\u5ea6 $O(n\\sqrt m)$ \u3002\u53ef\u4ee5\u770b\u51fa\u6bd4\u8d77\u666e\u901a\u7684\u83ab\u961f\uff0c\u4e8c\u6b21\u79bb\u7ebf\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u5c31\u662f\u53ea\u6709 $O(n)$ \u6b21\u63d2\u5165\uff0c\u4e8e\u662f\u5bf9\u4e8e\u67d0\u4e9b\u9898\u5c31\u53ef\u4ee5\u7528\u503c\u57df\u5206\u5757\u7684\u6280\u5de7\u505a\u5230 $O(n\\sqrt m+n\\sqrt n)$ \u3002\n\n\n#### 2\u3001\u503c\u57df\u5206\u5757\n\n\u53d1\u73b0\u672c\u8d28\u4e0a\u9700\u8981\u652f\u6301\u8fd9\u4e48\u4e00\u79cd\u64cd\u4f5c\uff1a\n\n>  \u7ef4\u62a4\u4e00\u4e2a\u503c\u57df\u5e8f\u5217\uff0c\u8981\u6c42 $O(\\sqrt n)$  \u4fee\u6539\uff0c $O(1)$ \u6c42\u533a\u95f4\u548c\u3002\n\n\u8fd9\u4e2a\u6bd4\u8f83\u6709\u610f\u601d\u3002\u53d1\u73b0\u8981\u6c42 $O(1)$ \u6c42\u533a\u95f4\u548c\uff0c\u90a3\u81ea\u7136\u5c31\u662f\u8981\u7ef4\u62a4\u524d\u7f00\u548c\u3002\u4e8e\u662f\u5c31\u5206\u522b\u7ef4\u62a4\u5757\u7684\u524d\u7f00\u548c and \u5757\u5185\u90e8\u7684\u524d\u7f00\u548c\uff0c\u6bcf\u6b21\u4fee\u6539\u5c31\u662f\u8981\u4fee\u6539\u4e4b\u540e\u7684\u5757\u7684\u524d\u7f00\u548c and \u6563\u70b9\u6240\u5728\u5757\u5185\u90e8\u7684\u524d\u7f00\u548c\uff0c\u67e5\u8be2\u4f5c\u5dee\u5373\u53ef\u3002\n\n\u6700\u540e\u590d\u6742\u5ea6 $O(n\\sqrt m+n\\sqrt n)$ \u3002\n\n```cpp\nusing IPT::qrd;\nusing IPT::qra;\nusing IPT::qrs;\nusing IPT::qrdb;\nusing OPT::qw;\nusing OPT::qwa;\nusing OPT::qws;\n\nvector< tuple<int, int, int> > ql[N], qr[N] ;\n\nstruct query{ int id, l, r ;} q[N] ;\n\nil bool comp(const query &a, const query &b){\n\treturn (bl[a.l] ^ bl[b.l]) ? bl[a.l] < bl[b.l] : \n\t\t   ((bl[a.l] & 1) ? a.r < b.r : a.r > b.r) ;\n}\nil int ask(int p){\n    int ret = 0 ;\n    for ( ; p ; p -= p & -p) ret += _bit[p] ;\n    return ret ;\n}\nil void add(int p){\n    for ( ; p <= V ; p += p & -p) _bit[p] ++ ;\n}\nil void Inssuf(const int &x){\n    for (int i = blv[x] + 1 ; i <= blv[V] ; ++ i) sumb[i] ++ ;\n    for (int i = x ; blv[x] == blv[i] && i <= V ; ++ i) sump[i] ++ ;\n}\nil int Asksuf(const int &x){\n    return sump[x] + sumb[blv[x]] ;\n}\nil void Inspre(const int &x){\n    for (int i = 1 ; i <= blv[x] - 1 ; ++ i) sumb[i] ++ ;\n    for (int i = x ; blv[x] == blv[i] && i >= 1 ; -- i) sump[i] ++ ;\n}\nil int Askpre(const int &x){\n    return sump[x] + sumb[blv[x]] ;\n}\nint main(){\n\tqrd(n), qrd(m), B = n / sqrt(m) ;\n\tfor (int i = 1 ; i <= n ; ++ i)\n        qrd(base[i]), tmp[i] = base[i] ;\n    sort(tmp + 1, tmp + n + 1) ;\n    L = unique(tmp + 1, tmp + n + 1) - tmp - 1 ;\n    for (int i = 1 ; i <= n ; ++ i){\n        base[i] = lwb(tmp + 1, tmp + L + 1, base[i]) - tmp ;\n        V = max(base[i], V) ; bl[i] = i / B ;\n    }\n    B = sqrt(V) + 1 ;\n    for (int i = 0 ; i <= V ; ++ i) blv[i] = i / B + 1 ;\n    for (int i = n ; i >= 1 ; -- i)\n        s2[i] = s2[i + 1] + ask(base[i] - 1), add(base[i]) ;\n    fill(_bit, _bit + V + 1, 0) ;\n    for (int i = 1 ; i <= n ; ++ i)\n        s1[i] = s1[i - 1] + i - 1 - ask(base[i]), add(base[i]) ;\n\tfor (int i = 1 ; i <= m ; ++ i)\n\t\tqrd(q[i].l), qrd(q[i].r), q[i].id = i ;\n\tsort(q + 1, q + m + 1, comp) ; q[0].l = 1, q[0].r = 0 ;\n\tfor (int i = 1 ; i <= m ; ++ i){\n\t\tint newl = q[i].l ;\n\t\tint newr = q[i].r ;\n\t\tint l = q[i - 1].l ;\n\t\tint r = q[i - 1].r ;\n\t\tans[i] -= s2[l] + s1[r] ;//l \u7684\u8d21\u732e\u53d8\u6210\u4e86\u4e00\u4e2a\u540e\u7f00\uff0c\u539f\u6765\u662f l'-(l-1),\u73b0\u5728\u53d8\u6210\u4e86 l-l'\n\t\tans[i] += s2[newl] + s1[newr] ;//l \u548c r \u8981\u5206\u5f00\u8ba1\u7b97\u8d21\u732e\n\t\tif (newl < l)\n\t\t\tqr[newr + 1].emplace_back(newl, l - 1, -i) ;\n\t\telse if (newl > l)\n\t\t\tqr[newr + 1].emplace_back(l, newl - 1, i) ;\n\t\tif (newr < r)\n\t\t\tql[l - 1].emplace_back(newr + 1, r, i) ;\n\t\telse if (newr > r)\n\t\t\tql[l - 1].emplace_back(r + 1, newr, -i) ;\n\t}\n\tfor (int i = 1 ; i <= n ; ++ i){\n        Inspre(base[i]) ;\n\t\tfor (const auto &j : ql[i]){\n\t\t\tint l, r, id ;\n\t\t\ttie(l, r, id) = j ; ll tmp = 0 ;\n\t\t\tfor (int o = l ; o <= r ; ++ o)\n                tmp += Askpre(base[o] + 1) ;\n\t\t\tif (id < 0)\n                ans[id * (-1)] -= tmp ;\n            else ans[id] += tmp ;\n\t\t}\n\t}\n    memset(sumb, 0, sizeof(sumb)) ;\n    memset(sump, 0, sizeof(sump)) ;\n    for (int i = n ; i >= 1 ; -- i){\n        Inssuf(base[i]) ;\n\t\tfor (const auto &j : qr[i]){\n\t\t\tint l, r, id ;\n\t\t\ttie(l, r, id) = j ; ll tmp = 0 ;\n\t\t\tfor (int o = l ; o <= r ; ++ o)\n                tmp += Asksuf(base[o] - 1) ;\n\t\t\tif (id < 0)\n                ans[id * (-1)] -= tmp ;\n            else ans[id] += tmp ;\n\t\t}\n    }\n\tfor (int i = 1 ; i <= m ; ++ i) ans[i] += ans[i - 1] ;\n\tfor (int i = 1 ; i <= m ; ++ i) res[q[i].id] = ans[i] ; \n\tqwa(res, n, '\\n', '\\n') ;return 0 ;\n}\n```\n",
        "postTime": 1586700807,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "# \u9898\u89e3 P5047\n\n### Description\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $\\{a\\}$ \uff0c\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4 $[a,b]$ \u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n---\n\n### Solution\n\n\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\u5148\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e $a_i$\uff0c\u5728\u4ed6\u524d\u9762\u548c\u540e\u9762\u5206\u522b\u6709\u591a\u5c11\u4e2a\u6570\u548c\u5b83\u7ec4\u6210\u9006\u5e8f\u5bf9\u3002\n\n\u8fd9\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5b9e\u73b0\u3002\n\n\u5728\u83ab\u961f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u66f4\u65b0\u533a\u95f4\u53ef\u4ee5\u5229\u7528\u8bb0\u5f55\u7684\u6570\u7ec4 $suf$ \u548c $pre$ \u6765\u66f4\u65b0\u7b54\u6848\u3002\n\n\u8bbe\u539f\u533a\u95f4\u4e3a $[l,r]$\uff0c\u65b0\u533a\u95f4 $[ql,qr]$\u3002\n\n\u90a3\u4e48\u66f4\u65b0ans\u5c31\u662f $suf_{ql}+pre_{qr}-(suf_l+pre_r)$ \u3002\n\n\u4f46\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u505a\u4f1a\u591a\u7b97/\u5c11\u7b97\uff0c\u6240\u4ee5\u6211\u4eec\u4f9d\u6b21\u8003\u8651\u6bcf\u79cd\u60c5\u51b5\u3002\n\n---\n\n##### 1.1 ql<l\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3ubsx3dw.png)\n\n\u6211\u4eec\u51cf\u53bb\u4e86\u7ea2\u8272\u7684\u90e8\u5206\uff0c\u52a0\u4e0a\u4e86\u7eff\u8272\u7684\u533a\u57df\u3002\n\n\u6211\u4eec\u7684\u610f\u613f\u662f\u9664\u53bb $[ql,l-1]$ \u4e0e\u5f53\u524d\u533a\u95f4\u7684\u8d21\u732e\u3002 \n\n\u663e\u7136\uff0c\u6211\u4eec\u591a\u8003\u8651\u4e86 $[ql,l-1]$ \u8fd9\u4e2a\u533a\u95f4\uff08\u84dd\u8272\uff09\u548cqr\u4e4b\u540e\u7684\u6570\u7ec4\u6210\u9006\u5e8f\u5bf9\u7684\u8d21\u732e\u3002\n\n\u628a\u8be2\u95ee\u6302\u5728qr+1\u7684\u540e\u7f00\u8be2\u95ee\u4e0a\uff0c\u8be2\u95ee\u5b83\u53ca\u5b83\u4e4b\u540e\u7684\u6570\u548c\u8fd9\u4e2a\u533a\u95f4\u7684\u8d21\u732e\u3002\n\n\u6743\u503c\u8bbe\u4e3a $-1$\uff0c\u56e0\u4e3a\u8981\u51cf\u53bb\u3002\n\n##### 1.2 ql>l\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yeedwt6a.png)\n\n\u540c\u7406\uff0c\u8fd9\u6b21\u662f\u591a\u51cf\u53bb\u4e86 $[l-1,ql]$ \u7684\u8d21\u732e\u3002\n\n\u90a3\u4e48\u5728qr+1\u6302\u4e0a\u5b83\u4eec\u548c\u540e\u9762\u7684\u6570\u8d21\u732e\u7684\u8be2\u95ee\u5373\u53ef\uff0c\u6743\u503c\u4e3a $1$\u3002\n\n##### 2.1 qr<r\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/hluldeoh.png)\n\n\u7531\u4e8e\u6211\u4eec\u8003\u8651\u7684\u662f\u524d\u7f00 $pre$\uff0c\u6240\u4ee5\u8981\u8ba1\u7b97\u5b83\u4eec\u548cl\u4e4b\u524d\u7684\u6570\u7684\u8d21\u732e\u3002\n\n**\u6ce8\u610f\uff1a\u8fd9\u91cc\u4e0d\u662fql\uff0c\u800c\u662fl\u3002**\n\n\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u662f\u548c\u4e4b\u524d\u5de6\u7aef\u70b9\u7684\u8d21\u732e\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u5462\uff1a\u6211\u4eec\u4e4b\u524d\u5bf9l\u8ba8\u8bba\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u628a $ql$ \u548c $l$ \u8fd9\u4e24\u70b9\u4e4b\u95f4\u7684\u8d21\u732e\u6d88\u9664\u4e86\u3002\n\n\u5982\u82e5\u6b64\u65f6\u518d\u548cl\u76f8\u6bd4\uff0c\u90a3\u4e48\u5b83\u4eec\u4e4b\u95f4\u7684\u8d21\u732e\u53c8\u4f1a\u88ab\u8003\u8651\u3002\n\n\u8fd9\u4e00\u70b9\u660e\u767d\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u548c\u4e0a\u9762\u4e00\u6837\u4e86\u3002\n\n\u6b64\u65f6\u4ecd\u662f\u4e0d\u5305\u542br\u8fd9\u4e2a\u70b9\u3002\u8be2\u95ee\u6302\u5728l-1\u4e0a\u3002\n\n##### 2.2 qr>r\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qxcglvyn.png)\n\n\u8fd9\u548c\u4e0a\u9762\u5c31\u4e00\u81f4\u4e86\uff0c\u591a\u7b97\u4e86 $[r+1,qr]$ \u7684\u8d21\u732e\u3002\n\n---\n\n\u5728\u83ab\u961f\u8fc7\u540e\uff0c\u6211\u4eec\u7684\u7b54\u6848\u4e0e\u771f\u6b63\u503c\u53ea\u76f8\u5dee\u4e86\u6302\u5728\u67d0\u4e9b\u70b9\u7684\u8be2\u95ee\u3002\n\n\u90a3\u4e48\u5982\u4f55\u6765\u7edf\u8ba1\u8fd9\u4e9b\u8be2\u95ee\u5462\uff1f\u6709\u4e2anaive\u7684\u60f3\u6cd5\u4ecd\u65e7\u662f\u5229\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n\u5148\u7b97\u4e00\u7b97\u590d\u6742\u5ea6\uff0c\u8be2\u95ee\u7684\u4e2a\u6570\u662f $O(m)$ \u7684\u3002\n\n\u6302\u8d77\u6765\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u6bcf\u4e2a\u8be2\u95ee\u662f $O(\\sqrt n)$ \u7684\uff0c\u603b\u5171 $O(m\\sqrt n)$\u3002\n\n\u6811\u72b6\u6570\u7ec4\u5355\u6b21\u64cd\u4f5c $O(\\log n)$\uff0c\u663e\u7136\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4fee\u6539\u7684\u64cd\u4f5c\u6bd4\u8f83\u5c11\uff0c\u8be2\u95ee\u6bd4\u8f83\u591a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u91c7\u7528 $O(\\sqrt n)$ \u7684\u65f6\u95f4\u4fee\u6539\uff0c\u800c\u8981\u6c42 $O(1)$ \u8be2\u95ee\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u503c\u57df\u5206\u5757\u4e86\u3002\n\n\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e2a\u6570\u6bd4\u5b83\u5c0f/\u5927\u7684\u4e2a\u6570\u4e86\u3002\n\n\u65b0\u52a0\u5165\u4e00\u4e2a\u6570\u65f6\uff0c\u5728\u5b83\u524d/\u540e\u7684\u503c\u57df\u52a0\u4e00\u3002\n\n\u6574\u5757\u76f4\u63a5\u52a0\uff0c\u96f6\u6563\u5757\u66b4\u529b\u3002\n\n\u67e5\u8be2\u65f6\u8fd4\u56de\u96f6\u6563\u5757\u548c\u6574\u5757\u7684\u548c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6700\u540e\u4e0d\u8981\u5fd8\u4e86\u4e58\u4e0a\u6743\u503c\u3002\n\n\u8bb0\u5f97\u628a\u7b54\u6848\u7d2f\u52a0\uff0c\u56e0\u4e3a\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u7b97\u7684\u662f\u5dee\u503c\u3002\n\n---\n\n### Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace input\n{\n    const int InputBufferSize=(1<<23)+5;\n    char buffer[InputBufferSize],*s,*eof;\n    inline void init()\n    {\n        assert(stdin!=NULL);\n        s=buffer;\n        eof=s+fread(buffer,1,InputBufferSize,stdin);\n    }\n    inline bool read(int &x)\n    {\n        x=0;\n        int flag=1;\n        while(!isdigit(*s)&&*s!='-')s++;\n        if(eof<=s)return false;\n        if(*s=='-')flag=-1,s++;\n        while(isdigit(*s))x=x*10+*s++-'0';\n        x*=flag;\n        return true;\n    }\n    inline bool read(char* str)\n    {\n        *str=0;\n        while(isspace(*s))s++;\n        if(eof<s)return false;\n        while(!isspace(*s))*str=0,*str=*s,str++,s++;\n        *str=0;\n        return true;\n    }\n}\nnamespace output\n{\n    const int OutputBufferSize=(1<<23)+5;\n    char buffer[OutputBufferSize];\n    char *s=buffer;\n    inline void flush()\n    {\n        assert(stdout!=NULL);\n        fwrite(buffer,1,s-buffer,stdout);\n        s=buffer;\n        fflush(stdout);\n    }\n    inline void print(const char ch)\n    {\n        if(s-buffer>OutputBufferSize-2)flush();\n        *s++=ch;\n    }\n    inline void print(char* str)\n    {\n        while(*str!=0)print(char(*str++));\n    }\n    inline void print(long long x)\n    {\n        char buf[25]= {0},*p=buf;\n        if(x<0)print('-'),x=-x;\n        if(x==0)print('0');\n        while(x)*(++p)=x%10,x/=10;\n        while(p!=buf)print(char(*(p--)+'0'));\n    }\n}\nusing namespace input;\nusing namespace output;\nconst int N=2e5+9;\n#define ll long long\n#define lowbit(x) (x&-x)\n#define R register\nint n,m,a[N],sum[N],maxn,len,block;\nint bel[N];\nll tr[N],suf[N],pre[N],ans[N],Sum[N];\n\ninline int get(int x){return x/len;}\nstruct Query\n{\n\tint l,r,id;\n\tll ans;\n\tbool operator < (const Query &a)const\n\t{\n\t\treturn get(l)==get(a.l)?r<a.r:get(l)<get(a.l);\t\n\t}\n} Q[N];\nstruct query\n{\n\tint l,r,id,t;\n};\n\ninline void add(int x,int c)\n{\n\twhile(x<=maxn)\n\t{\n\t\ttr[x]+=c;\n\t\tx+=lowbit(x);\n\t}\n}\n\ninline int ask(int x)\n{\n\tint res=0;\n\twhile(x)\n\t{\n\t\tres+=tr[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\n\ninline void add1(int x)\n{//\u5c0f\u4e8ex\u7684\u4f4d\u7f6e\u52a0\u4e00\uff0c\u5206\u4e3a\u6574\u5757Sum\u548c\u96f6\u6563\u5757sum\n\tint pos=bel[x];\n\tfor(int i=1;i<=bel[x]-1;i++) Sum[i]++;\n\twhile(x>=1&&bel[x]==pos) sum[x]++,x--;\n}\n\ninline int query1(int x){return Sum[bel[x]]+sum[x];}\n\ninline void add2(int x)\n{//\u5927\u4e8ex\u7684\u4f4d\u7f6e\u52a0\u4e00\uff0c\u5206\u4e3a\u6574\u5757Sum\u548c\u96f6\u6563\u5757sum\n\tint pos=bel[x];\n\tfor(int i=bel[x]+1;i<=bel[maxn];i++) Sum[i]++;\n\twhile(x<=maxn&&bel[x]==pos) sum[x]++,x++;\n}\n\ninline int query2(int x){return Sum[bel[x]]+sum[x];}\n\nvector<query> vecl[N],vecr[N];\nvector<int> buk;\nint main()\n{\n\tinit();read(n),read(m);\n\tlen=sqrt(n);\n\tfor(R int i=1;i<=n;i++) read(a[i]),buk.push_back(a[i]);\n\tsort(buk.begin(),buk.end());\n\tbuk.erase(unique(buk.begin(),buk.end()),buk.end());\n\tfor(R int i=1;i<=n;i++)\n\t\ta[i]=lower_bound(buk.begin(),buk.end(),a[i])-buk.begin()+1,maxn=max(maxn,a[i]);\n\tblock=sqrt(maxn);\n\tfor(R int i=0;i<=maxn;i++) bel[i]=i/block+1;\n\tfor(int i=1;i<=n;i++) pre[i]=pre[i-1]+i-1-ask(a[i]),add(a[i],1);\n\tmemset(tr,0,sizeof tr);\n\tfor(int i=n;i>=1;i--) suf[i]=suf[i+1]+ask(a[i]-1),add(a[i],1);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tread(Q[i].l),read(Q[i].r);\n\t\tQ[i].id=i;\n\t}\n\tsort(Q+1,Q+1+m);\n\tint l=1,r=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint ql=Q[i].l,qr=Q[i].r;\n\t\tQ[i].ans-=suf[l]+pre[r];\n\t\tQ[i].ans+=suf[ql]+pre[qr];//\u753b\u56fe\u53ef\u77e5\uff0c\u4e24\u6b21\u533a\u95f4\u591a\u52a0/\u51cf\u4e86\u4e00\u4e9b\u533a\u57df\n\t\tif(l>ql) vecr[qr+1].push_back({ql,l-1,i,-1});\n\t\tif(l<ql) vecr[qr+1].push_back({l,ql-1,i,1});\n\t\tif(r<qr) vecl[l-1].push_back({r+1,qr,i,-1});\n\t\tif(r>qr) vecl[l-1].push_back({qr+1,r,i,1});\n\t\tl=ql,r=qr;            \n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd1(a[i]);\n\t\tfor(auto j:vecl[i])\n\t\t{\n\t\t\tint l=j.l,r=j.r,t=j.t,id=j.id;\n\t\t\tfor(int k=l;k<=r;k++)//\u67e5\u8be2\u5927\u4e8e\u5b83\u7684\u6570,\u6ee1\u8db3\u4e4b\u524d\u7684\u6570i\u4e0b\u6807\u5c0f\n\t\t\t\tQ[id].ans+=1ll*t*query1(a[k]+1);\n\t\t}\n\t}\n\tmemset(sum,0,sizeof sum);\n\tmemset(Sum,0,sizeof Sum);\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tadd2(a[i]);\n\t\tfor(auto j:vecr[i])\n\t\t{\n\t\t\tint l=j.l,r=j.r,t=j.t,id=j.id;\n\t\t\tfor(int k=l;k<=r;k++)//\u67e5\u8be2\u5c0f\u4e8e\u5b83\u7684\u6570,\u6ee1\u8db3\u4e4b\u524d\u7684\u6570i\u4e0b\u6807\u5927\n\t\t\t\tQ[id].ans+=1ll*t*query2(a[k]-1);\n\t\t}\n\t}\n\tfor(int i=2;i<=m;i++) Q[i].ans+=Q[i-1].ans;\n\tfor(int i=1;i<=m;i++) ans[Q[i].id]=Q[i].ans;\n\tfor(int i=1;i<=m;i++) print(ans[i]),print('\\n');\n\tflush();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1601610464,
        "uid": 237308,
        "name": "AlanSP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "~~\u3010\u6a21\u677f\u3011\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f~~\n\n## \u672c\u9898\u9898\u89e3\n\n\u76f8\u4fe1\u6253\u8fc7luogu\u6708\u8d5b\u7684\u4eba\u90fd\u4f1a\u5bf9  _\u7b2c\u5341\u56db\u5206\u5757(\u524d\u4f53)_ \u90a3\u9898\u5370\u8c61\u6df1\u523b\n\n\u56e0\u4e3a\u8fd9\u4e2a\u79d1\u6280\u53ef\u4ee5\u641e\u5b9a\u4e00\u4e9b\u8f6c\u79fb\u590d\u6742\u5ea6\u975e\u5e38\u5927\u7684\u83ab\u961f\u95ee\u9898\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u4e00\u4e0b\u7528\u4f20\u7edf\u7684\u83ab\u961f\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u5f53\u4f60\u5728(l,r)\u524d\u9762\u63d2\u5165\u4e00\u4e2a\u503cv\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u95ee\u4f60(l,r)\u5f53\u4e2d\u6709\u51e0\u4e2a\u70b9\u7684\u503c\u5c0f\u4e8ev\uff0c\u800c\u5728(l,r)\u540e\u8fb9\u63d2\u5165\u4e00\u4e2a\u503cv\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u95ee\u4f60(l,r)\u5f53\u4e2d\u6709\u51e0\u4e2a\u70b9\u7684\u503c\u5927\u4e8ev\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u590d\u6742\u5ea6\u663e\u7136$O(Nlogn\\sqrt{M})$\n\n\u800c\u4e14\u8fd9\u4e2a\u590d\u6742\u5ea6\u5e94\u8be5\u662f\u4e0d\u53ef\u4f18\u5316\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u505a\u4e86$O(N\\sqrt{M})$\u6b21\u4fee\u6539\u548c\u8be2\u95ee\u6240\u4ee5\u8bf4\u6211\u4eec\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u4fe1\u606f\u662f\u4e2a\u6b63\u786e\u7684\u51b3\u5b9a\n\n\u90a3\u4e48\u5047\u5982\u6211\u4eec\u6709\u4e00\u79cd\u9ed1\u79d1\u6280\u53ef\u4ee5\u8ba9\u4f60\u505a\u5230\u4ec5\u4ec5\u6709$O(n)$\u6b21\u63d2\u5165\u64cd\u4f5c\u800c\u6709$O(N\\sqrt{M})$\u8be2\u95ee\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u7ef4\u62a4\u6570\u636e\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\u7531\u6811\u72b6\u6570\u7ec4\u6362\u6210\u5206\u5757,\u8fd9\u6837\u7684\u8bdd\u590d\u6742\u5ea6\u5c31\u88ab\u5e73\u8861\u5230\u4e86$O(N(\\sqrt{N}+\\sqrt{M}))$\n\n\u800c\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u79d1\u6280\n\n\u8fd9\u4e2a\u601d\u60f3\u7684\u7cbe\u9ad3\u5c31\u662f\u628a\u8be2\u95ee$(l,r)$\u8fd9\u4e2a\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u6bd4l\u5927\u6216\u8005\u5c0f\u7684\u64cd\u4f5c\u53d8\u6210\u8be2\u95ee(1,l-1)\u8fd9\u4e2a\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u6bd4v\u5927\u6216\u8005\u5c0f\uff0c\u7136\u540e\u8be2\u95ee(1,r)\u5f53\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u6bd4v\u5927\u6216\u8005\u5c0f\n\n\u90a3\u4e48\u6b64\u65f6\u6211\u4eec\u5c06\u83ab\u961f\u7684\u8be2\u95ee\u64cd\u4f5c\u63a5\u7740\u79bb\u7ebf\uff0c\u6211\u4eec\u5c31\u5c31\u53ef\u4ee5\u8dd1\u4e00\u904d\u626b\u63cf\u7ebf\u56de\u7b54\u6240\u6709\u7684\u8be2\u95ee\u4e86\uff0c\u663e\u7136\u8fd9\u4e2a\u8fc7\u7a0b\u4ec5\u4ec5\u9700\u8981$O(n)$\u6b21\u63d2\u5165\u64cd\u4f5c\u800c\u8be2\u95ee\u6b21\u6570\u4f9d\u7136\u662f$O(N\\sqrt{M})$\u6b21\uff0c\u7528\u4e00\u4e2a\u5206\u5757\u6765\u7ef4\u62a4\u6b64\u65f6\u6211\u4eec\u7684\u590d\u6742\u5ea6\u5c31\u662f\u5bf9\u7684\n\n\u6ce8\u610f\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u4f60\u8fd9\u6837\u7b97\u51fa\u6765\u7684\u4e0d\u662f\u6bcf\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\uff0c\u800c\u662f\u76f8\u90bb\u4e24\u4e2a\u8be2\u95ee\u4e4b\u95f4\u7b54\u6848\u7684\u53d8\u5316\u91cf\uff0c\u6240\u4ee5\u6700\u540e\u505a\u4e00\u904d\u524d\u7f00\u548c\u624d\u662f\u5bf9\u7684\n\n\u4f46\u662f\u95ee\u9898\u6765\u4e86\u4f3c\u4e4e\u6211\u4eec\u505a\u626b\u63cf\u7ebf\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f$O(N\\sqrt{M})$\u7684\uff0c\u800c\u4e14\u4f60\u7684\u7b97\u6cd5\u5e94\u8be5\u4f1a\u56e0\u4e3acache miss\u7684\u95ee\u9898\u8dd1\u7684\u98de\u6162\u65e0\u6bd4\u2026\u2026\n\n\u600e\u4e48\u5361\u7a7a\u95f4\u5462\uff1f\n\n\u6211\u4eec\u5b9e\u9645\u4e0a\u8981\u5b9e\u73b0\u8fd94\u4e2a\u64cd\u4f5c\n\n\u53f3\u7aef\u70b9\u5de6/\u53f3\u79fb\u4e00\u6bb5\u8ddd\u79bb\uff0c\u5de6\u7aef\u70b9\u5de6/\u53f3\u79fb\u4e00\u6bb5\u8ddd\u79bb\n\n\u90a3\u4e48\u4f60\u624b\u73a9\u4e00\u4e0b\u8be2\u95ee\u7684\u8fc7\u7a0b\u4f1a\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u76f8\u5f53\u6709\u8da3\u7684\u4e8b\u5b9e\u662f\u4f60\u5bf9\u7740\u67d0\u4e00\u4e2a\u524d\u7f00\u8be2\u95ee\u4e86\u67d0\u4e00\u6bb5\u533a\u95f4\u4e2d\u7684\u503c,\u7b26\u53f7\u6216\u8005\u6b63\u6216\u8005\u8d1f\uff0c\u8fd9\u662f\u5176\u4e2d\u4e00\u90e8\u5206\u4e1c\u897f\u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0b\u9762push\u4e00\u4e2a\u533a\u95f4\u8868\u793a\u8be2\u95ee\u8fd9\u6bb5\u533a\u95f4\u4e2d\u7684\u70b9\u6765\u89e3\u51b3\n\n\u53e6\u4e00\u90e8\u5206\u7684\u8d21\u732e\u5219\u662f\u533a\u95f4\u4e2d\u7684\u70b9\u4e0d\u505c\u7684\u8be2\u95ee\u81ea\u5df1\u8fd9\u4e2a\u70b9\u5230\u81ea\u5df1\u524d\u9762\u90a3\u4e2a\u524d\u7f00\u7684\u7b54\u6848\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u5177\u4f53\u6765\u8bb2\u548c\u4e0a\u9762\u7684\u8d21\u732e\u5728\u4e00\u6b21\u626b\u63cf\u7ebf\u5f53\u4e2d\u505a\u5b8c,\u4e4b\u540e\u518d\u505a\u4e2a\u524d\u7f00\u548c,\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u6b21\u626b\u4e00\u4e0b\u6392\u597d\u5e8f\u7684\u8be2\u95ee\u5e8f\u5217\uff0c\u9010\u4e2a\u8be2\u95ee\u8003\u8651\u5b8c\u8fd9\u90e8\u5206\u8d21\u732e\u5c31\u884c\u4e86\n\n\u5f53\u7136\u4f60\u8fd8\u662f\u8981\u6ce8\u610f\u5e38\u6570\u7684\uff0c\u6bd4\u5982\u8bf4\u4e0d\u8981\u771f\u7684\u53bb\u5199\u4e2avector\uff0c\u81ea\u5df1\u624b\u5199\u4e2a\u90bb\u63a5\u8868\u53c8\u4e0d\u4f1a\u5c11\u51e0\u65a4\u8089\uff0c\u6700\u540e\u4e0d\u8981\u5fd8\u8bb0\u505a\u4e2a\u524d\u7f00\u548c\u518d\u8f93\u51fa\u7b54\u6848\n\n\u5f53\u7136\u4f60\u8fd8\u662f\u8981\u6ce8\u610f\u5361\u7a7a\u95f4\u7684\uff0c\u6bd4\u5982\u8bf4\u80fdint\u5c31\u4e0d\u8981\u778e\u5f00long long,\u540c\u4e00\u4e2a\u6570\u7ec4\u53ef\u4ee5\u7528\u6765\u79bb\u6563\u5316\u4e4b\u540e\u63a5\u7740\u7528\u6765\u5f53\u5206\u5757\u7684\u6570\u7ec4\uff0c\u4e4b\u7c7b\u7684\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\nusing namespace std;const int N=1e5+10;const int B=335;typedef long long ll;\ntemplate <class T>\nvoid read(T &x){\n    char c;\n    bool op = 0;\n    while(c = getchar(), c < '0' || c > '9')\n    if(c == '-') op = 1;\n    x = c - '0';\n    while(c = getchar(), c >= '0' && c <= '9')\n    x = x * 10 + c - '0';\n    if(op) x = -x;\n}\nint a[N];int bi[N];int su[N];int n;int m;ll ans[N];ll f1[N];ll f2[N];int S;\nnamespace lsh//\u79bb\u6563\u5316 \n{\n    inline bool cmp(const int& x,const int& y){return a[x]<a[y];}\n    inline void pre()\n    {\n        for(int i=1;i<=n;i++)bi[i]=i;sort(bi+1,bi+n+1,cmp);su[1]=1;\n        for(int i=2;i<=n;i++)su[i]=(a[bi[i-1]]==a[bi[i]])?su[i-1]:su[i-1]+1;\n        for(int i=1;i<=n;i++)a[bi[i]]=su[i];S=su[n];\n        for(int i=1;i<=n;i++)bi[i]=(i-1)/B+1;for(int i=1;i<=n;i++)su[i]=0;\n    }\n}\nstruct data//\u624b\u5199\u90bb\u63a5\u8868 \n{\n    int l;int r;int t;\n    friend bool operator <(data a,data b)\n    {int t1=a.l/B;int t2=b.l/B;return (t1==t2)?((t1&1)?a.r<b.r:a.r>b.r):t1<t2;}\n}q[N],ve[N<<1];int al[N];int x[N<<1];int ct;\ninline void pb(const data& a,int p){if(p==0)return;ve[++ct]=a;x[ct]=al[p];al[p]=ct;}\nnamespace blk//\u5206\u5757\u52a0 \n{\n    int lb[N/B+3];\n    inline int gt(const int& x){return su[x]+lb[bi[x]];}\n    inline void md(const int& x)\n    {\n        for(int i=x;bi[i]==bi[x];i++)su[i]++;\n        for(int i=bi[x]+1;i<=bi[S];i++)lb[i]++;\n    }\n}\ninline void deal(const data& va,const int& p)//\u5904\u7406\u4e00\u4e2a\u8be2\u95ee \n{\n    int t=va.t>>2;\n    switch(va.t&3)\n    {\n        case 0:{for(int i=va.l;i<=va.r;i++)ans[t]-=p-blk::gt(a[i]);break;}\n        case 1:{for(int i=va.l;i<=va.r;i++)ans[t]+=p-blk::gt(a[i]);break;}\n        case 2:{for(int i=va.l;i<=va.r;i++)ans[t]+=blk::gt(a[i]-1);break;}\n        case 3:{for(int i=va.l;i<=va.r;i++)ans[t]-=blk::gt(a[i]-1);break;}\n    }\n}\nint main()\n{\n    read(n);read(m);for(int i=1;i<=n;i++)read(a[i]);lsh::pre();\n    for(int i=1;i<=m;i++)read(q[i].l),read(q[i].r),q[i].t=i;sort(q+1,q+m+1);\n    int dl=q[1].l;int dr=q[1].r;pb((data){q[1].l,q[1].r,1<<2},q[1].l-1);\n    for(int i=2;i<=m;i++)//\u4e8c\u6b21\u79bb\u7ebf \n    {\n        if(q[i].l>dr||q[i].r<dl){pb((data){q[i].l,q[i].r,i<<2},q[i].l-1);dl=q[i].l;dr=q[i].r;continue;}\n        if(q[i].r>dr)pb((data){dr+1,q[i].r,i<<2},dl-1);if(q[i].r<dr)pb((data){q[i].r+1,dr,i<<2|1},dl-1);\n        if(q[i].l<dl)pb((data){q[i].l,dl-1,i<<2|2},q[i].r);if(q[i].l>dl)pb((data){dl,q[i].l-1,i<<2|3},q[i].r);\n        dl=q[i].l;dr=q[i].r;\n    }\n    for(int i=1;i<=n;i++)//\u9884\u5904\u7406\u4e00\u4e2a\u70b9\u5230\u5b83\u524d\u9762\u524d\u7f00\u7684\u8d21\u732e \n    {\n        f1[i]=(i-1)-blk::gt(a[i]);blk::md(a[i]);f2[i]=blk::gt(a[i]-1);\n        for(int j=al[i];j;j=x[j])deal(ve[j],i);\n    }\n    for(int i=1;i<=n;i++)f1[i]+=f1[i-1];for(int i=1;i<=n;i++)f2[i]+=f2[i-1];\n    dl=q[1].l;dr=q[1].r;ans[1]+=f1[dr]-f1[dl-1];\n    for(int i=2;i<=m;i++)//\u7b2c\u4e8c\u90e8\u5206\u7684\u8d21\u732e \n    {\n        if(q[i].l>dr||q[i].r<dl){ans[i]+=f1[q[i].r]-f1[q[i].l-1];dl=q[i].l;dr=q[i].r;continue;}\n        if(q[i].r>dr)ans[i]+=f1[q[i].r]-f1[dr];if(q[i].r<dr)ans[i]-=f1[dr]-f1[q[i].r];\n        if(q[i].l<dl)ans[i]-=f2[dl-1]-f2[q[i].l-1];if(q[i].l>dl)ans[i]+=f2[q[i].l-1]-f2[dl-1];\n        dl=q[i].l;dr=q[i].r;\n    }for(int i=1;i<=m;i++)if(q[i].l<=q[i-1].r&&q[i].r>=q[i-1].l)ans[i]+=ans[i-1];\n    for(int i=1;i<=m;i++)f1[q[i].t]=ans[i];\n    for(int i=1;i<=m;i++)printf(\"%lld\\n\",f1[i]);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n```\n",
        "postTime": 1543136744,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "### P5047 Yuno loves sqrt technology II\n\n\u7531\u4e8e\u6211\u4e5f\u4e0d\u77e5\u9053\u516c\u5f0f\u4f1a\u4e0d\u4f1a\u70b8\uff0c\u5efa\u8bae\u5230 Luogu \u535a\u5ba2\u6216\u8005\u5230 [\u8fd9\u91cc](https://www.yijan.co/p5047-yuno-loves-sqrt-technology-ii/) \u9605\u8bfb\u3002\n\n\u9996\u5148\u6211\u4eec\u663e\u7136\u4f1a\u4e00\u4e2a\u975e\u5e38\u8fa3\u9e21\u7684 $O(n\\sqrt m\\log n)$ \u505a\u6cd5\uff0c\u5c31\u662f\u83ab\u961f\u7ef4\u62a4 BIT \uff0c\u53ef\u60dc\u770b\u4e0d\u51fa\u600e\u4e48\u4f18\u5316\u3002\u3002\n\n\u4e8e\u662f\u8003\u8651\u4e0a\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\n\n\u8bbe $[a,b][c,d]$ \u8868\u793a\u6ee1\u8db3 $x\\in [a,b],y\\in [c,d],a_x>a_y$ \u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u533a\u95f4\u4e4b\u95f4\u7684\u9006\u5e8f\u5bf9\u6570\u3002\u5982\u679c $c<b$ \u6211\u4eec\u8ba4\u4e3a\u5b83\u6ca1\u6709\u5b9a\u4e49\u3002\n\n\u6211\u4eec\u8003\u8651\u79fb\u52a8\u4e00\u4e2a\u533a\u95f4\uff0c\u6bd4\u5982\u4ece $l,r$ \u79fb\u52a8\u5230 $l,r'$ \uff0c\u589e\u52a0\u91cf\u662f\uff1a\n$$\n\\sum_{i=r+1}^{r'} [l,i-1][i,i]\n$$\n\u663e\u7136\u540e\u9762\u90a3\u4e2a\u7b26\u53f7\u53ef\u4ee5\u62c6\u6210\u524d\u7f00\u7684\u5dee\uff1a\n$$\n\\sum_{i=r+1}^{r'} [1,i-1][i,i] - [1,l-1][i,i]\n$$\n\u6211\u4eec\u8003\u8651 $[1,i-1][i,i]$ \u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u65b9\u4fbf\u5730\u9884\u5904\u7406\u524d\u7f00\u548c\u3002\u4e8e\u662f\u8003\u8651\u6211\u4eec\u73b0\u5728\u8981\u7b97\u7684\u662f\uff1a\n$$\n\\sum_{i=r+1}^{r'} [1,l-1][i,i]\n$$\n\u4e5f\u5c31\u662f\uff1a\n$$\n[1,l-1][r+1,r']\n$$\n\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u7b97\u5462\uff1f\n\n\u6211\u4eec\u628a\u83ab\u961f\u9700\u8981\u7684\u8fd9\u79cd\u6837\u5b50\u7684\u8be2\u95ee\u90fd\u62ff\u51fa\u6765\uff0c\u628a\u6240\u6709 $[r+1,r']$ \u6302\u5728 $l-1$ \u4e0b\u9762\u5c31\u597d\u4e86\u3002\u4e00\u5171\u4f1a\u6709 $m$ \u4e2a\u957f\u6210\u8fd9\u6837\u7684\u8be2\u95ee\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(m)$\u3002\u5e76\u4e14\u7531\u4e8e\u83ab\u961f\u6211\u4eec\u77e5\u9053\u603b\u7684\u79fb\u52a8\u6b21\u6570\u662f\u4e0d\u8d85\u8fc7 $O(n\\sqrt m)$ \u7684\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u4ece\u518d\u6b21\u79bb\u7ebf\u7b97\u8fd9\u4e2a\u4e1c\u897f\uff0c\u4ece\u5de6\u5230\u53f3\u52a0\u5165\u6570\uff0c\u7136\u540e\u8ba1\u7b97\u6bd4 $[r+1,r']$ \u5185\u7684\u6570\u5927\u7684\u6570\u5b57\u4e2a\u6570\u3002\u4e3a\u4e86\u8ba9\u540e\u9762\u7684\u66b4\u529b\u8ba1\u7b97\u505a\u5230 $O(1)$ \u6211\u4eec\u53ef\u4ee5\u6839\u53f7\u5e73\u8861\uff0c\u503c\u57df\u5206\u5757\u4e00\u4e0b\uff0c\u63d2\u5165 $O(\\sqrt n)$ \u67e5\u8be2 $O(1)$ \uff0c\u63d2\u5165\u7684\u6b21\u6570\u662f\u4e0d\u8d85\u8fc7 $O(n)$ \u7684\u4e8e\u662f\u603b\u590d\u6742\u5ea6\u5c31\u4f18\u5316\u5230\u4e86 $O(n\\sqrt m+n\\sqrt n)$ \u3002\uff08\u5927\u6982\u662f\u8fd9\u4e2a\u590d\u6742\u5ea6\u5427\uff0c\uff0c\u4e0d\u77e5\u9053\u5b9e\u9645\u4e0a\u6709\u6ca1\u6709\u95ee\u9898\uff09\n\n\u7801\u8d77\u6765\u8fd8\u662f\u6bd4\u8f83\u8f7b\u677e\u7684\u3002\u3002\n\n```cpp\n#include \"iostream\"\n#include \"algorithm\"\n#include \"cstring\"\n#include \"cstdio\"\n#include \"cmath\"\n#include \"vector\"\n#include \"map\"\n#include \"set\"\n#include \"bitset\"\n#include \"queue\"\nusing namespace std;\n#define MAXN 200006\n//#define int long long\n#define rep(i, a, b) for (int i = (a), i##end = (b); i <= i##end; ++i)\n#define per(i, a, b) for (int i = (a), i##end = (b); i >= i##end; --i)\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n#define vi vector<int>\n#define all(x) (x).begin() , (x).end()\n#define mem( a ) memset( a , 0 , sizeof a )\n#define P 1000000007\ntypedef long long ll;\nint n , m , blo;\nint A[MAXN] , a[MAXN] , bl[MAXN];\n\nstruct que {\n    int l , r , id;\n    inline void rd( int x ) {\n        id = x; scanf(\"%d%d\",&l,&r);\n    }\n} Q[MAXN] ;\n\nlong long ans[MAXN];\nlong long Ls[MAXN] , Rs[MAXN]; // sum of [1,i-1][i,i] or [i,i][i+1,n]\n\nnamespace fwk {\n    int T[MAXN];\n    void add( int x , int c ) {\n        while( x <= n ) T[x] += c , x += ( x & -x );\n    }\n    int sum( int x ) {\n        int ret = 0;\n        while( x > 0 ) ret += T[x] , x -= ( x & -x );\n        return ret;\n    }\n}\n\nint BLO;\nnamespace kuai1 {\n    int T[MAXN] , lz[400];\n    void add( int x ) { // ( 1 ~ x - 1 ) + 1\n        per( i , x , ( x - 1 ) / BLO * BLO + 1 ) ++ T[i];\n        per( i , ( x - 1 ) / BLO , 1 ) ++ lz[i];\n    }\n    int get( int x ) {\n        return T[x] + lz[( x - 1 ) / BLO + 1];\n    }\n}\n\nnamespace kuai2 {\n    int T[MAXN] , lz[400] , tot;\n    void add( int x ) { // ( 1 ~ x - 1 ) + 1\n        rep( i , x , ( x - 1 ) / BLO * BLO + BLO ) ++ T[i];\n        rep( i , ( x - 1 ) / BLO + 2 , tot ) ++ lz[i];\n    }\n    int get( int x ) {\n        return T[x] + lz[( x - 1 ) / BLO + 1];\n    }\n}\n\nstruct dq { int l , r , id , c; };\nvector<dq> Rqs[MAXN] , Lqs[MAXN]; // Rqs : [1,i][l,r] , Lqs : [l,r][i,n]\n\nbool cmp( que a , que b ) {\n    return bl[a.l] == bl[b.l] ? bl[a.l] & 1 ? a.r < b.r : a.r > b.r : a.l < b.l;\n}\n\nvoid solve() {\n    cin >> n >> m;\n    blo = n / sqrt( m * 2 / 3 ); BLO = sqrt( n );\n    rep( i , 1 , n ) scanf(\"%d\",A + i) , bl[i] = ( i - 1 ) / blo + 1 , a[i] = A[i];\n    sort( a + 1 , a + 1 + n );\n    int sz = unique( a + 1 , a + 1 + n ) - a - 1;\n    rep( i , 1 , n ) A[i] = lower_bound( a + 1 , a + 1 + sz , A[i] ) - a;\n    rep( i , 1 , m ) Q[i].rd( i );\n    sort( Q + 1 , Q + 1 + m , cmp );\n    rep( i , 1 , n ) Ls[i] = fwk::sum( n - A[i] ) , fwk::add( n - A[i] + 1 , 1 );\n    rep( i , 1 , n ) Ls[i] += Ls[i - 1];\n    mem( fwk::T );\n    per( i , n , 1 ) Rs[i] = fwk::sum( A[i] - 1 ) , fwk::add( A[i] , 1 );\n    per( i , n , 1 ) Rs[i] += Rs[i + 1];\n    int l = 1 , r = 0 , L , R , idx;\n    rep( i , 1 , m ) {\n        L = Q[i].l , R = Q[i].r , idx = Q[i].id;\n        if( r < R ) Lqs[l - 1].eb( (dq){ r + 1 , R , idx , -1 } ) , ans[idx] += Ls[R] - Ls[r];\n        if( r > R ) Lqs[l - 1].eb( (dq){ R + 1 , r , idx , 1 } ) , ans[idx] -= Ls[r] - Ls[R];\n        r = R;\n        if( l > L ) Rqs[R + 1].eb( (dq){ L , l - 1 , idx , -1 } ) , ans[idx] += Rs[L] - Rs[l];\n        if( l < L ) Rqs[R + 1].eb( (dq){ l , L - 1 , idx , 1 } ) , ans[idx] -= Rs[l] - Rs[L];\n        l = L;\n    }\n    long long re;\n    rep( i , 1 , n ) {\n        kuai1::add( A[i] - 1 );\n        for( auto& t : Lqs[i] ) {\n            re = 0;\n            rep( j , t.l , t.r )\n                re += kuai1::get( A[j] );\n            ans[t.id] += t.c * re;\n        }\n    }\n    kuai2::tot = ( sz - 1 ) / BLO + 1;\n    per( i , n , 1 ) {\n        kuai2::add( A[i] + 1 );\n        for( auto& t : Rqs[i] ) {\n            re = 0;\n            rep( j , t.l , t.r )\n                re += kuai2::get( A[j] );\n            ans[t.id] += t.c * re;\n        }\n    }\n    rep( i , 1 , m ) ans[Q[i].id] += ans[Q[i - 1].id];\n    rep( i , 1 , m ) printf(\"%lld\\n\",ans[i]);\n}\n\nsigned main() {\n//    freopen(\"input\",\"r\",stdin);\n//    freopen(\"fuckout\",\"w\",stdout);\n//    int T;cin >> T;while( T-- ) solve();\n    solve();\n}\n```\n\n",
        "postTime": 1585198812,
        "uid": 63398,
        "name": "yijan",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "[\u51fa\u9898\u4eba\u9898\u89e3](http://olddrivertree.blog.uoj.ac/blog/4656)\n\n~~\u4f17\u6240\u5468\u77e5lxl\u662f\u4e2a\u6bd2\u7624\uff0cYnoi\u9053\u9053\u90fd\u662f\u795e\u4ed9\u9898~~\n\n\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4$[l,r]$\uff0c\u8003\u8651\u5c06\u53f3\u7aef\u70b9\u5411\u53f3\u79fb\u52a81\u683c\u3002\n\n\u5176\u591a\u51fa\u6765\u7684\u90e8\u5206\u662f$[l,r]$\u4e0e$a_{r+1}$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\uff08$a$\u4e0e$b$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u548c$b$\u4e0e$a$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u662f\u4e0d\u540c\u7684\uff09\u3002\n\n\u663e\u7136\uff0c\u53ef\u4ee5\u628a$[l,r]$\u533a\u95f4\u62c6\u6210$[1,r]-[1,-1]$\u3002\n\n\u6240\u4ee5\uff0c$[l,r]$\u4e0e$a_{r+1}$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9=$[1,r]$\u4e0e$a_{r+1}$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9-$[1,l-1]$\u4e0e$a_{r+1}$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u53f3\u7aef\u70b9\u4e0d\u65ad\u79fb\u52a8\uff0c\u533a\u95f4$[1,r]$\u59cb\u7ec8\u5728\u53d8\uff0c\u800c$[1,l-1]$\u5374\u662f\u4e0d\u53d8\u7684\u3002\n\n\u6211\u4eec\u5148\u8003\u8651$[1,r]$\u4e0e$a_{r+1}$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\uff0c\u663e\u7136\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u5728$O(n\\log n)$\u7684\u65f6\u95f4\u5185\u9884\u5904\u7406\u51fa\u8fd9\u4e2a\u4e1c\u897f\u7684\u524d\u7f00\u548c\u3002\n\n\u7136\u540e\u83ab\u961f\u7aef\u70b9\u79fb\u52a8\u3001\u8ba1\u7b97\u8fd9\u90e8\u5206\u8d21\u732e\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u505a\u5230$O(1)$\u3002\n\n\u7136\u540e\u8003\u8651$[1,l-1]$\u4e0e$a_{r+1}$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\uff0c\u5047\u8bbe$r$\u8981\u79fb\u52a8\u5230$r'$\uff08$r< r' $\uff09\u3002\n\n\u90a3\u4e48\uff0c\u8fd9\u90e8\u5206\u4ea7\u751f\u7684\u8d21\u732e\u5176\u5b9e\u662f$[1,l-1]$\u4e0e$[r,r']$\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u3002\n\n\u8003\u8651\u7528\u4e00\u4e2avector\uff0c$v_i$\u8bb0\u5f55$[1,i]$\u8fd9\u4e2a\u533a\u95f4\u4e0e\u5176\u4ed6\u54ea\u4e9b\u533a\u95f4\u4f1a\u4ea7\u751f\u9006\u5e8f\u5bf9\u3002\n\n\u7531\u4e8e\u83ab\u961f\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c$v_i$\u8bb0\u5f55\u7684\u533a\u95f4\u7684\u957f\u5ea6\u603b\u548c\u4e0d\u8d85\u8fc7$O(n\\sqrt n)$\uff0c\u6240\u4ee5\u76f4\u63a5\u626b\u63cf\u7ebf\uff0c\u7136\u540e\u66b4\u529b\u8ba1\u7b97\u8d21\u732e\u5373\u53ef\u3002\n\n\u5176\u4ed6\u7aef\u70b9\u79fb\u52a8\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301$O(1)$\u67e5\u8be2\u524d\u7f00\u548c\uff0c\u4e0d\u8d85\u8fc7$O(\\sqrt n)$\u7684\u65f6\u95f4\u8fdb\u884c\u5355\u70b9\u4fee\u6539\u3002\n\n\u90a3\u4e48\u7528\u6743\u503c\u5206\u5757\u5373\u53ef\uff0c\u8bb0\u5f55\u5757\u7684\u524d\u7f00\u548c\u548c\u6bcf\u4e2a\u4f4d\u7f6e\u5230\u8be5\u4f4d\u7f6e\u6240\u5728\u5757\u7684\u5757\u9996\u7684\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6211\u4eec\u8ba1\u7b97\u7684\u662f\u6bcf\u4e2a\u8be2\u95ee\u4e0e\u4e0a\u4e00\u4e2a\u8be2\u95ee\u7684\u5dee\uff0c\u6240\u4ee5\u6700\u540e\u8981\u8fdb\u884c\u4e00\u6b21\u524d\u7f00\u548c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt n+n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6$O(n+m)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cctype>\n#include<cstring>\n#define N 100005\n#define siz 317\nclass istream{\n    char buf[15000003],*s;\n    public:\n        inline istream(){\n            buf[fread(s=buf,1,15000001,stdin)]='\\n';\n            fclose(stdin);\n        }\n        template<typename T>\n        inline istream&operator>>(T&rhs){\n            for(rhs=0;!isdigit(*s);++s);\n            while(isdigit(*s))rhs=rhs*10+(*s++&15);\n            return*this;\n        }\n}cin;\nstruct ostream{\n    char buf[8000005],*s;\n    inline ostream(){s=buf;}\n    inline void operator<<(long long d){\n        if(!d){\n            *s++='0';\n        }else{\n            static long long w;\n            for(w=1;w<=d;w*=10);\n            for(;w/=10;d%=w)*s++=d/w^'0';\n        }\n        *s++='\\n';\n    }\n    inline ostream&operator<<(const char&c){*s++=c;return*this;}\n    inline~ostream(){fwrite(buf,1,s-buf,stdout);}\n}cout;\nstd::vector<int>ls;\nint n,m,a[N];\nlong long L_R[N],R_L[N],ans[N],out[N];\nstruct BiT{\n    int b[N];\n    inline void add(int i){for(;i<N;i+=i&-i)++b[i];}\n    inline int ask(int i){int x=0;for(;i;i^=i&-i)x+=b[i];return x;}\n}b;\nstruct que{\n    int l,r,id;\n    inline bool operator<(const que&rhs)const{\n        return(l/siz!=rhs.l/siz)?(l<rhs.l):(r<rhs.r);\n    }\n}q[N];\nstruct node{\n    int l,r,id,op;\n};\nstd::vector<node>L[N],R[N];\nint bL[320],bR[320],bel[123456],c[123456],s[320];\nint main(){\n    ls.push_back(-1);\n    cin>>n>>m;\n    for(int i=1;i<=n;ls.push_back(a[i++]))cin>>a[i];\n    std::sort(ls.begin(),ls.end());\n    ls.erase(std::unique(ls.begin(),ls.end()),ls.end());\n    for(int i=1;i<=n;++i)a[i]=std::lower_bound(ls.begin(),ls.end(),a[i])-ls.begin();\n    for(int i=1;i<=n;++i){\n        L_R[i]=L_R[i-1]+b.ask(1e5)-b.ask(a[i]);\n        b.add(a[i]);\n    }\n    memset(b.b,0,sizeof b.b);\n    for(int i=n;i;--i){\n        R_L[i]=R_L[i+1]+b.ask(a[i]-1);\n        b.add(a[i]);\n    }\n    for(int i=1;i<=m;++i)cin>>q[i].l>>q[q[i].id=i].r;\n    std::sort(q+1,q+m+1);\n    q[0].l=1;\n    for(int i=1;i<=m;++i){\n        ans[i]=L_R[q[i].r]-L_R[q[i-1].r]+R_L[q[i].l]-R_L[q[i-1].l];\n        if(q[i].r>q[i-1].r)\n        R[q[i-1].l-1].push_back((node){q[i-1].r+1,q[i].r,i,-1});\n        else\n        if(q[i].r<q[i-1].r)\n        R[q[i-1].l-1].push_back((node){q[i].r+1,q[i-1].r,i,1});\n        if(q[i].l<q[i-1].l)\n        L[q[i].r+1].push_back((node){q[i].l,q[i-1].l-1,i,-1});\n        else\n        if(q[i].l>q[i-1].l)\n        L[q[i].r+1].push_back((node){q[i-1].l,q[i].l-1,i,1});\n    }\n    for(int i=1;i<=siz;++i){\n        bL[i]=bR[i-1]+1;\n        bR[i]=i*siz;\n        for(int j=bL[i];j<=bR[i];++j)bel[j]=i;\n    }\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<bel[a[i]];++j)++s[j];\n        for(int j=bL[bel[a[i]]];j<=a[i];++j)++c[j];\n        for(node j:R[i]){\n            int l=j.l,r=j.r;\n            long long tmp=0;\n            for(int k=l;k<=r;++k)\n            tmp+=s[bel[a[k]+1]]+c[a[k]+1];\n            ans[j.id]+=j.op*tmp;\n        }\n    }\n    memset(c,0,sizeof c);\n    memset(s,0,sizeof s);\n    for(int i=n;i;--i){\n        for(int j=bel[a[i]]+1;j<=siz;++j)++s[j];\n        for(int j=a[i];j<=bR[bel[a[i]]];++j)++c[j];\n        for(node j:L[i]){\n            int l=j.l,r=j.r;\n            long long tmp=0;\n            for(int k=l;k<=r;++k)\n            tmp+=s[bel[a[k]-1]]+c[a[k]-1];\n            ans[j.id]+=j.op*tmp;\n        }\n    }\n    for(int i=1;i<=m;++i)ans[i]+=ans[i-1],out[q[i].id]=ans[i];\n    for(int i=1;i<=m;++i)cout<<out[i];\n    return 0;\n}\n\n```",
        "postTime": 1543149236,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "\u8c03\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u8fd8\u5361\u4e86\u4e00\u53d1\u5e38\u624d\u8fc7\u6389\uff0c\u786e\u5b9e\u6bd2\u7624\u3002     \n\n\u8bf4\u5b9e\u8bdd\u4e2a\u4eba\u611f\u89c9\u8fd9\u9053\u9898\u786e\u5b9e~~\u4e0d\u96be~~\uff0c\u4f46\u662f\u7ec6\u8282\u771f\u7684\u5f88\u591a\u3002     \n\n\u9898\u76ee\u5f88\u663e\u7136\u8ba9\u4f60\u6c42\u533a\u95f4\u9006\u5e8f\u5bf9\uff0c\u6211\u4eec\u9996\u5148\u8003\u8651\u9006\u5e8f\u5bf9\u7684\u6027\u8d28\uff1a     \n\n- \u8054\u60f3\u5230\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u4e00\u4e2a\u524d\u7f00\u72b6\u6001\u4e0b\u7684\u9006\u5e8f\u5bf9\u60c5\u51b5\u7136\u540e\u8fdb\u884c\u6c42\u89e3\u3002     \n- \u9006\u5e8f\u5bf9\u6ee1\u8db3\u4e00\u4e2a\u524d\u7f00\u7684\u6027\u8d28\uff0c\u5373\u6211\u6c42\u7b2c $x$ \u4e2a\u5143\u7d20\u5728\u533a\u95f4 $[l,r]$ \u91cc\u9762\u4ea7\u751f\u7684\u8d21\u732e\u7b49\u540c\u4e8e\u6c42\u7b2c $x$ \u4e2a\u5143\u7d20\u5728\u533a\u95f4 $[1,r]$ \u51cf\u53bb\u533a\u95f4 $[1,l - 1]$ \u7684\u8d21\u732e\u3002    \n\u6709\u4e86\u8fd9\u4e24\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u4e0d\u96be\u8054\u60f3\u5230\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\uff0c\u63a5\u7740\u6211\u4eec\u5c31\u8003\u8651\u4e00\u4e0b\u600e\u4e48\u597d\u597d\u5229\u7528\u8fd9\u4e2a~~\u6839\u53f7\u9ed1\u79d1\u6280~~\u91cc\u9762\u7684\u4e00\u5927\u91cd\u96be\u70b9\uff1a\u5c06\u533a\u95f4\u9012\u63a8\u8f6c\u5316\u6210\u524d\u7f00\u548c\u5f62\u5f0f\u3002     \n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u56db\u79cd\u533a\u95f4\u9012\u63a8\u64cd\u4f5c\uff0c\u4e3a\u4e86\u884c\u6587\u65b9\u4fbf\uff0c\u6211\u4eec\u8bbe $f(x , [l,r])$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u91cc\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5e8f\u5217\u4e2d\u7b2c $x$ \u4e2a\u6570\u5c0f\uff0c $c(x , [l,r])$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u91cc\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5e8f\u5217\u4e2d\u7b2c $x$\u4e2a\u6570\u5927\u3002\n\n- $delta(l - 1,[l,r]) = f(l - 1 , [1,r]) - f(l - 1,[1,l - 1])$   \n- $delta(l , [l,r]) = f(l , [l,r]) - f(l , [1 , l - 1])$   \n- $delta(r + 1 , [l,r]) = c(r + 1 , [1 , r]) - c(r + 1 , [1 , l - 1])$   \n- $delta(r , [l , r]) = c(r , [l,r]) - c(r , [1 , l - 1])$    \n\n\u5f88\u663e\u7136\uff0c\u6839\u636e\u6211\u4eec\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u7684\u5957\u8def\uff0c\u6211\u4eec\u80af\u5b9a\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u79cd\u8ba1\u7b97\u7684\u201c\u524d\u7f00\u7c7b\u201d(\u7531\u4e8e\u9006\u5e8f\u5bf9\u4e0d\u53ef\u80fd\u5bf9\u81ea\u5df1\u9020\u6210\u8d21\u732e\uff0c\u6240\u4ee5 $f(l - 1 , [l,r]) = f(l - 1,[l - 1 , r])$ , $c$ \u4e5f\u540c\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u5904\u7406\u65f6\u53ea\u9884\u5904\u7406\u4e24\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86)\uff0c\u5bf9\u4e8e\u53e6\u4e00\u7c7b\u8ba1\u7b97\uff0c\u6211\u4eec\u4e5f\u8fd8\u662f\u5957\u8def\u6ef4\u5f00\u4e2a $vector$ \u628a\u5b83\u6302\u5230\u76f8\u5e94\u7684\u53f3\u7aef\u70b9\u4e0b\u65b9\u5373\u53ef\u3002      \n\n\u4e0d\u8fc7\u5982\u679c\u5728\u5bf9\u53e6\u4e00\u7c7b\u8ba1\u7b97\u65f6\uff0c\u6211\u4eec\u8fd8\u662f\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u7684\u8bdd\uff0c\u5c31\u4f1a\u628a\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u641e\u5230 $O(n \\sqrt m log_n)$ \u53bb\uff0c\u5f88\u4e0d\u5e78\u8fd9\u9053\u9898\u628a\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u505a\u6cd5\u5361\u6389\u4e86\u3002    \n\n\u987a\u4fbf\u63d0\u4e00\u5634\uff0c\u7531\u4e8e\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u7684\u4f8b\u9898\u786e\u5b9e\u592a\u5c11\u4e86(\u6bd5\u7adf\u6bd4\u8f83\u51b7\u95e8)\uff0c\u6240\u4ee5\u73b0\u5728\u57fa\u672c\u4e0a\u627e\u4e0d\u5230\u4ec0\u4e48\u505a\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u7684\u6280\u5de7\uff0c\u6211\u6240\u4e86\u89e3\u7684\u53ea\u6709\u4e00\u4e2a\uff1a\u5bf9\u4e8e\u8fdb\u884c\u53e6\u4e00\u7c7b\u8ba1\u7b97\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5229\u7528\u67e5\u8be2 $O(1)$ \uff0c \u4fee\u6539\u53ef\u4ee5\u662f $O(log_n \\sim \\sqrt n)$ \u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u4f60\u8fdb\u884c\u53e6\u4e00\u7c7b\u8ba1\u7b97\u65f6\u53ef\u4ee5\u538b\u4e0b\u6765\u4f60\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5728\u672c\u9898\u4e2d\uff0c\u6700\u53cb\u597d\u7684\u53e6\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u8c8c\u4f3c\u53ea\u6709\u6743\u503c\u5206\u5757\u4e86\u3002    \n\n\u4e8e\u662f\u5957\u4e0a\u53bb\u4e00\u4e2a\u6743\u503c\u5206\u5757\uff0c\u8fd9\u5957\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u6210\u4e86 $O(n \\sqrt m + n \\sqrt n)$\uff0c\u53ef\u80fd\u5bf9\u4e8e\u90e8\u5206\u5927\u5e38\u6570\u4ee3\u7801\u9700\u8981\u4e00\u4e2a\u5feb\u8bfb\u624d\u53ef\u4ee5\u8fc7\uff0c\u4e0d\u8981\u778e\u5f00 $LL$ \u3002      \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\nusing namespace std;\nconst int Len = 1e5 + 5;\ninline int read() {\n    char ch = getchar();\n    int x = 0, f = 1;\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while ('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\ninline void write(long long x) {\n    if (x < 0)\n        putchar('-'), x = -x;\n    if (x > 9)\n        write(x / 10);\n    putchar(x % 10 + '0');\n}\nstruct node\n{\n\tint l,r,idx;\n\tlong long ans;\n}Sec[Len];\nint where[Len],size,lsh[Len],Cnt,cnt[Len],a[Len],n,m,F[Len],C[Len],c[Len];\nlong long Print[Len];\nint L[Len],R[Len],pos[Len],val[Len][2],Add[Len][2];\nint lowbit(int x){return x & (-x);}\nvoid add(int x)\n{\n\twhile(x <= Cnt)\n\t{\n\t\tc[x] ++;\n\t\tx += lowbit(x);\n\t} \n}\nint query(int x)\n{\n\tint res = 0;\n\twhile(x)\n\t{\n\t\tres += c[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn res;\n}\nbool cmp(node x,node y)\n{\n\tif(where[x.l] ^ where[y.l]) return where[x.l] < where[y.l];\n\treturn x.r < y.r;\n}\nstruct Node\n{\n\tint l,r,idx,op,opt;\n};\nvector<Node> q[Len];\nvoid Add_Min(int l,int r)//\u5b58\u7684\u662f\u6bd4\u8fd9\u4e2a\u6570\u5c0f\u7684\u6570 \n{\n\tif(l > r) return;\n\tint p = pos[l] , q = pos[r];\n\tif(p == q) for(int i = l ; i <= r ; i ++) Add[i][0] ++;\n\telse\n\t{\n\t\tfor(int i = p + 1 ; i <= q - 1 ; i ++) val[i][0] ++;\n\t\tfor(int i = l ; i <= R[p] ; i ++) Add[i][0] ++;\n\t\tfor(int i = L[q] ; i <= r ; i ++) Add[i][0] ++;\n\t}\n}\nvoid Add_Max(int l,int r)//\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570 \n{\n\tif(l > r) return;\n\tint p = pos[l] , q = pos[r];\n\tif(p == q) for(int i = l ; i <= r ; i ++) Add[i][1] ++;\n\telse\n\t{\n\t\tfor(int i = p + 1 ; i <= q - 1 ; i ++) val[i][1] ++;\n\t\tfor(int i = l ; i <= R[p] ; i ++) Add[i][1] ++;\n\t\tfor(int i = L[q] ; i <= r ; i ++) Add[i][1] ++;\n\t}\n}\nsigned main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tn = read() , m = read();\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\ta[i] = read();\n\t\tlsh[i] = a[i];\n\t}\n\tsize = sqrt(n);\n\tfor(int i = 1 ; i <= n ; i ++) where[i] = (i - 1) / size + 1;\n\tsort(lsh + 1 , lsh + 1 + n);\n\tCnt = unique(lsh + 1 , lsh + 1 + n) - lsh - 1;\n\tfor(int i = 1 ; i <= n ; i ++) a[i] = lower_bound(lsh + 1 , lsh + 1 + Cnt , a[i]) - lsh;\n\tfor(int i = 1 ; i <= n ; i ++)//\u8fd9\u91cc\u53ef\u4ee5\u9ed8\u8ba4f(i , [1,i]) = f(i , [1 , i - 1])\uff0c\u6bd5\u7adf\u662f\u9006\u5e8f\u5bf9\u561b \n\t{\n\t\tC[i] = i - query(a[i]) - 1;\n\t\tF[i] = query(a[i] - 1);\n\t\tadd(a[i]);\n\t}\n\t//for(int i = 1 ; i <= n ; i ++) printf(\"%d %d\\n\",F[i],C[i]); \n\tfor(int i = 1 ; i <= m ; i ++) \n\t{\n\t\tSec[i].l = read() , Sec[i].r = read();\n\t\tif(Sec[i].l == 0) Sec[i].l = 1;\n\t\tSec[i].idx = i;\n\t}\n\tsort(Sec + 1 , Sec + 1 + m , cmp);\n\tfor(int i = 1 , l = 1 , r = 0 ; i <= m ; i ++)\n\t{\n\t\tif(l > Sec[i].l) q[r].push_back((Node){Sec[i].l , l - 1 , i , 1 , 2});\n\t\twhile(l > Sec[i].l) Sec[i].ans -= F[-- l];\n\t\tif(r < Sec[i].r) q[l - 1].push_back((Node){r + 1 , Sec[i].r , i , -1 , 1});\n\t\twhile(r < Sec[i].r) Sec[i].ans += C[++ r];\n\t\tif(l < Sec[i].l) q[r].push_back((Node){l , Sec[i].l - 1 , i , -1 , 2});//\u56e0\u4e3a\u5bf9\u4e8e\u539f\u6765\u7684\u7b54\u6848\u800c\u8a00\uff0c\u73b0\u5728\u662f\u8981\u51cf\u53bb\u8fd9\u4e9b\u503c\uff0c\u6240\u4ee5\u628a\u539f\u5f0f\u53d6\u4e86\u4e2a-1 \n\t\twhile(l < Sec[i].l) Sec[i].ans += F[l ++];\n\t\tif(r > Sec[i].r) q[l - 1].push_back((Node){Sec[i].r + 1 , r , i , 1 , 1});//\u4e0e\u4e0a\u540c \n\t\twhile(r > Sec[i].r) Sec[i].ans -= C[r --];\n\t}\n\tint t = sqrt(Cnt);\n\tfor(int i = 1 ; i <= t ; i ++)\n\t{\n\t\tL[i] = (i - 1) * t + 1;\n\t\tR[i] = i * t;\n\t}\n\tif(R[t] < Cnt) L[t] = R[t - 1] + 1 , R[t] = Cnt;\n\tfor(int i = 1 ; i <= t ; i ++)\n\t\tfor(int j = L[i] ; j <= R[i] ; j ++) pos[j] = i;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tAdd_Min(a[i] + 1 , Cnt);//0:\u6bd4\u5b83\u5c0f\u7684\u6570 \n\t\tAdd_Max(1 , a[i] - 1);//1:\u6bd4\u5b83\u5927\u7684\u6570 \n\t\tfor(int j = 0 ; j < q[i].size() ; j ++)\n\t\t{\n\t\t\tNode ask = q[i][j];\n\t\t\tfor(int k = ask.l ; k <= ask.r ; k ++)\n\t\t\t{\n\t\t\t\tif(ask.opt == 1)//\u67e5\u8be2\u6bd4\u5b83\u5927\u7684\u6570\uff0c\u6b64\u65f6\u5df2\u7ecf\u52a0\u8fdb\u53bb\u4e86a_i \n\t\t\t\t\tSec[ask.idx].ans += 1LL * ask.op * (val[pos[a[k]]][1] + Add[a[k]][1]);\n\t\t\t\telse Sec[ask.idx].ans += 1LL * ask.op * (val[pos[a[k]]][0] + Add[a[k]][0]);\n\t\t\t\t//\u67e5\u8be2\u6bd4\u5b83\u5c0f\u7684\u6570\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= m ; i ++) Sec[i].ans += Sec[i - 1].ans;\n\tfor(int i = 1 ; i <= m ; i ++) Print[Sec[i].idx] = Sec[i].ans;\n\tfor(int i = 1 ; i <= m ; i ++) write(Print[i]) , putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1609311929,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "### \u795e\u4ed9\u9898\u9898\u89e3\n\u6bd5\u7adfYnoi\u9053\u9053\u90fd\u662f\u795e\u4ed9\u9898\uff0c\u8fd9\u662f\u4e00\u9053\u56f0\u6270\u6211\u6570\u5468\u7684\u9898\u76ee\u3002\n## \u524d\u7f6e\u77e5\u8bc6\uff1a\u79bb\u6563\u5316\uff0c\u83ab\u961f\uff08\u5747\u5fc5\u5907\uff09\n\u5728\u8fd9\u4e00\u7bc7\u9898\u89e3\u4e2d\uff0c\u4f60\u5c06\u4f1a\u5b66\u4e60\u5230\u4e00\u4e2a\u65b0\u7684\u4e1c\u897f\u2014\u2014\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u3002\n# \u6b63\u9898\n\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u533a\u95f4\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u66b4\u529b1\uff1a\u679a\u4e3e\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u9006\u5e8f\u5bf9\uff0c\u66b4\u529b\u679a\u4e3e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^2m)$\n\n\u66b4\u529b2\uff1a\u7528\u6811\u72b6\u6570\u7ec4\u679a\u4e3e\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nm\\log n)$\n\n\u90fd\u662f\u5fc5\u6302\u65e0\u7591\u7684\u3002\n\n\u8003\u8651\u666e\u901a\u7684\u83ab\u961f\uff1a\u5728\u8fd9\u4e00\u9898\u4e2d\uff0c\u6211\u4eec\u65e0\u6cd5\u8fbe\u5230\u4f7f\u7528\u83ab\u961f$O(1)$\u66f4\u65b0\u7b54\u6848\uff0c\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u4e0a\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u7136\u540e$O(\\log n)$\u66f4\u65b0\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O((n+m)\\sqrt n\\log n)$\u3002~~\u636e\u8bf4\u5f00O2\u53ef\u4ee5\u62ff20\u5206\u54e6\uff01~~\n## \u9ad8\u79d1\u6280\u4e0a\u573a\n\u8fd8\u662f\u8001\u5957\u8def\uff1a\u5148\u79bb\u6563\u5316\uff0c\u518d\u7528\u83ab\u961f\u3002\u4f46\u662f\u8fd9\u4e00\u6b21\u6211\u4eec\u4e0d\u80fd\u8fd9\u4e48\u73a9\u4e86\u3002\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u7b97\u51fa$s1_i$\uff0c$s1_i$\u8868\u793a\u7b2ci\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5927\uff0c\u5373$\\sum_{j=1}^{i-1}[a_j>a_i]$\u3002\u8fd8\u6709$s2_i$\uff0c\u8868\u793a\u7b2ci\u4e2a\u6570\u540e\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff0c\u522b\u62c5\u5fc3\uff0c\u5f88\u5feb\u4f60\u5c31\u77e5\u9053\u4e86\u3002\n\n\u8bbe\u83ab\u961f\u5f53\u524d\u6240\u5728\u7684\u4f4d\u7f6e\u5de6\u7aef\u70b9\u4e3a$l$\uff0c\u53f3\u7aef\u70b9\u4e3a$r$\u3002\u6bcf\u6b21\u5728\u83ab\u961f\u53f3\u8fb9\u52a0\u4e0a\u4e00\u4e2a\u6570\uff0c\u5c31\u4f1a\u4ea7\u751f$\\sum_{i=l}^r[a_i>a_{r+1}]$\u4e2a\u8d21\u732e\u3002\u8bbe$F(x,y)$\u8868\u793a\u533a\u95f4$\\sum_{i=1}^x[a_i>a_{y}]$\uff0c\u90a3\u4e48\u4ea7\u751f\u7684\u8d21\u732e\u7684\u5176\u5b9e\u5c31\u662f$F(r,r+1)-F(l-1,r+1)$\u3002\u524d\u9762\u7684$F(r,r+1)$\u5176\u5b9e\u5c31\u662f$s1_r$\uff0c\u540e\u9762\u7684\u6211\u4eec\u53ef\u4ee5\u5148\u5b58\u8d77\u6765\u3002\u540c\u7406\uff0c\u5728\u53f3\u8fb9\u51cf\u53bb\u4e00\u4e2a\u6570\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f97\u5230\u4f1a**\u51cf\u5c11**$F(r,r+1)-F(l-1,r+1)$\u4e2a\u8d21\u732e\uff0c\u6211\u4eec\u518d\u60f3\u529e\u6cd5\u628a$F(l-1.r+1)$\u5b58\u8d77\u6765\u3002\n\n\u7136\u540e\u8bbe$f(a,b,c)=\\sum_{i=a}^bF(c,i)$\uff0c\u8fd9\u6837\uff0c\u6bcf\u4e00\u6b21\u4ece$r$\u7aef\u70b9\u79fb\u5230$r+k$\u7aef\u70b9\u5c31\u662f$f(r,r+1,r+k)-f(l-1,r+1,r+k)$\u3002\u524d\u9762\u7684$f(r,r+1,r+k)$\u6211\u4eec\u53ef\u4ee5\u628as1\u6570\u7ec4\u505a\u4e00\u6b21\u524d\u7f00\u548c\uff0c\u7136\u540e\u5f97\u5230$f(r,r+1,r+k)=s1_{r+k}-s1_r$\u3002\n\n\u5982\u679c\u4f60\u8ba4\u771f\u7684\u770b\u4e86\u4e0a\u9762\u7684\u6750\u6599\uff0c\u76f8\u4fe1\u5f80\u5de6\u6dfb\u52a0/\u5220\u9664\u4e5f\u6ca1\u6709\u95ee\u9898\u4e86\u5427\u3002\n\n\u7136\u540e\u5f00\u59cb\u5904\u7406\u6700\u540e\u7684\u4e1c\u897f\u4e86\u3002\n\n\u6211\u4eec\u8981\u6c42\u6bcf\u4e00\u4e2a$F(x_i,y_i)$\u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u5b83\u7684\u7279\u6027\uff1a\n\n\u5982\u679c\u8981\u6c42\u6c42\u51fa$f(x_i,y_i,y_i+k)$\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u5148\u628a$a[1..x_i]$\u5b58\u5230\u4e00\u4e2a\u6876\u91cc\u9762\u3002\u6bd4\u5982\u8981\u6c42\u6c42\u51fa$f(2,3,5)$\uff0c\u5e8f\u5217\u4e3a$:2,3,1,4,5$\n\n\u6211\u4eec\u628a\u8fd9\u4e2a\u5e8f\u5217\u7684\u524d\u4e24\u4e2a\u5143\u7d20\u653e\u5230\u6876$k$\u91cc\u9762\uff0c\u5f97\uff1a$[0,1,1,0,0]$\uff0c\u7136\u540e\u518d\u505a\u4e00\u6b21\u524d\u7f00\u548c\uff0c\u5f97\u5230$[2,1,1,0,0]$,\u6240\u4ee5$f(2,3,5)=F(2,3)+F(2,4)+F(2,5)=2+0+0=2$\uff0c\u600e\u4e48\u6837\uff0c\u662f\u4e0d\u662f\u5f88\u795e\u5947\uff1f~~\u5176\u5b9e\u4e00\u70b9\u90fd\u4e0d\u795e\u5947\u3002~~ \u7136\u540e\u8003\u8651\u5982\u4f55\u5feb\u901f\u7684\u505a\u524d\u7f00\u548c\u3002\n\n\u90a3\u5c31\u662f\uff1a\n### ~~\u6811\u72b6\u6570\u7ec4~~\n\u5478\uff0c\u8fd9\u600e\u4e48\u884c\uff0c\u67e5\u8be2\u9700\u8981$O(\\log n)$\uff0c\u6700\u591a\u8fd8\u4f1a\u67e5\u8be2$n\\sqrt n$\u6b21\u5462\u3002\u65f6\u95f4\u7206\u70b8\u3002\n## \u5206\u5757\n\u5bf9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528$O(\\sqrt n)$\u63d2\u5165$+O(1)$\u67e5\u8be2\u3002\u6211\u4eec\u53ef\u4ee5\u628a$f$\u6309\u7167\u53c2\u6570$a$\u7684\u5927\u5c0f\u6765\u6392\u5e8f\uff0c\u7136\u540e\u56e0\u4e3a$a$\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6240\u4ee5\u53ea\u7528\u63d2\u5165$n$\u6b21\uff0c\u53c8\u6839\u636e\u83ab\u961f\u7684\u539f\u7406\uff0c\u6700\u591a\u53ea\u4f1a\u67e5\u8be2$n\\sqrt n$\u6b21\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u4f2a\u4ee3\u7801\uff0c\u5176\u4e2d$f$\u6570\u7ec4\u5df2\u7ecf\u6309\u7167\u5173\u952e\u5b57a\u7684\u5927\u5c0f\u6392\u597d\u5e8f(\u5176\u4e2da\u6570\u7ec4\u4e3a\u539f\u6570\u7ec4\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\uff0cp\u4e3af\u6570\u7ec4\u7684\u6b63\u8d1f)\n```cpp\nint xx=0;\nfor(int i=1;i<=m;i++)\n{\n\tfor(xx;xx<f[i].a;xx++)\n\t{\n\t\tpush(a[xx+1]);\n\t}\n\tfor(int j=f[i].b;j<=f[i].c;j++)\n\t{\n\t\tans[i]+=f[i].p*get(a[j]);\n\t}\n}\n```\n### \u8fd9\u5c31\u662f\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\n\u5230\u6b64\u4e3a\u6b62\uff0c\u5927\u81f4\u7684\u4ee3\u7801\u5df2\u7ecf\u5b8c\u5de5\uff0c\u4e0b\u9762\u8fdb\u5165\u4f18\u5316\u9636\u6bb5\u3002\n\n\u4f46\u662f\uff0c\u6392\u5e8f\u8fd9\u79cd\u65b9\u6cd5\u592a\u6162\u4e86\uff08\u9488\u5bf9\u8fd9\u4e00\u9898\uff09\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u6765\u4e00\u70b9\u66f4\u597d\u7684\u5462\u3002\u4e8e\u662f\uff1a\n# vector\n\u6211\u4eec\u5229\u7528\u6876\u6392\u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e00\u4e2a$f(a,b,c)$\u653e\u5230$t_a$\u8fd9\u4e2a\u6876\u91cc\u9762\u3002\u7136\u540e$b,c$\u518d\u5b58\u50a8\u8d77\u6765\uff0c\u8fd9\u6837\u5b50\u5c31\u65b9\u4fbf\u591a\u4e86\u3002\u5176\u4e2d\uff0c\u7ed3\u6784\u4f53\u91cc\u9762\u7684$u,v$\u7b49\u540c\u4e8e$f$\u6570\u7ec4\u4e2d\u7684$b,c$\u3002\n```cpp\nstruct node2{\n\tint u,v,p,id;\n};\nvector<node2> x1[N],x2[N];\nvoid add1(int id,int &r,int R,int type,int ID)\n{\n\tif(r<R) x1[id].push_back((node2){r+1,R,type,ID});\n\telse x1[id].push_back((node2){R+1,r,type,ID});\n\tr=R;\n}\n```\n\u4f46\u662f\uff0c\u5149\u8fd9\u6837\u80af\u5b9a\u4e0d\u884c\u7684\uff0c~~\u4f17\u6240\u5468\u77e5\uff1a\u51fa\u9898\u4eba\u662f\u6bd2\u7624~~ \u3002\n## \u5947\u5076\u6392\u5e8f\n\u5f88\u571f\u4e86\uff0c\u5e73\u65f6\u6211\u4eec\u7684\u83ab\u961f\u90fd\u662f\u5728\u540c\u4e00\u4e2a\u5757\u5185$r$\u6307\u9488\uff0c\u5355\u8c03\u9012\u589e\uff0c\u4f46\u662f\u5230\u4e86\u4e0b\u4e00\u4e2a\u5757\uff0c$r$\u6307\u9488\u5c31\u53c8\u632a\u56de\u6765\u4e86\uff08\u632a\u7684\u592a\u8fdc\u4e86\uff09\u3002\u4e3a\u4e86\u80fd\u8ba9$r$\u6307\u9488\u8dd1\u5f97\u6ca1\u90a3\u4e48\u8fdc\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0b\u4e00\u4e2a\u5757\u8ba9r\u6307\u9488\u5355\u8c03\u9012\u51cf\u3002\n```cpp\nbool cmp2(node a,node b)\n{\n\tif(a.w==b.w)\n\t{\n\t\tif(a.w&1) return a.r<b.r;\n\t\telse return a.r>b.r;\n\t}\n\telse return a.w<b.w;\n}\n```\n## \u4e0d\u5f00\u8bfb\u5165\u4f18\u5316 & for(register\n\u53cd\u6b63\u6211\u6700\u7ec8\u4ee3\u7801\u5c31\u8fd9\u4e2a\u6837\u3002\n\n\u63d0\u4ea4\u7684\u65f6\u5019\u6211\u6ca1\u6709\u6ce8\u610f\u592a\u591a\u7ec6\u8282\uff0c\u5bfc\u81f4\u5237\u5c4f\u3002\n\n\u7136\u540e\u5c31\u662f\u75af\u72c2\u7684\u5361\u5e38\u3002\n\n\u6700\u540e\uff0c\u6211\u95ee\u8001\u5e08\uff0c\u8001\u5e08\u8bf4\u8ba9\u6211\u5173\u6389\u8bfb\u5165\u4f18\u5316\u3002\u4e4b\u540e\uff0c\u53c8\u7ecf\u8fc7\u4e86\u8d85\u7ea7\u5361\u5e38+~~O3\u4f18\u5316~~ ,\u7ec8\u4e8e\u5361\u8fc7\u53bb\u4e86\u3002\n\n\u4e0b\u9762\u662f\u7ecf\u8fc7\u957f\u65f6\u95f4\u8c03\u8bd5\u5f04\u51fa\u6765\u7684\u4ee3\u7801\uff1a\n```cpp\n#pragma GCC optimize(3)\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<algorithm>\n#include<cstring>\n#define N 130010\nusing namespace std;\nint n,idb,d,w[N],m,block,k[N],K[N];\nlong long a[N],b[N],s1[N],s2[N],ans[N];\nstruct node{\n\tint l,r,w,id;\n\tvoid read()\n\t{\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tw=(l-1)/block;\n\t}\n} q[N];\nstruct tree_array{\n\tint tr[N];\n\tint lowbit(int a) {return a&(-a);}\n\tvoid add(int a)\n\t{\n\t\twhile(a<=n) tr[a]++,a+=lowbit(a);\n\t}\n\tlong long sum(int a)\n\t{\n\t\tlong long ans=0;\n\t\twhile(a) ans+=tr[a],a-=lowbit(a);\n\t\treturn ans;\n\t}\n} tr1,tr2;\nstruct node2{\n\tint u,v,p,id;\n};\nvector<node2> x1[N],x2[N];\nvoid add1(int id,int &r,int R,int type,int ID)\n{\n\tif(r<R) x1[id].push_back((node2){r+1,R,type,ID});\n\telse x1[id].push_back((node2){R+1,r,type,ID});\n\tr=R;\n}\nvoid add2(int id,int &l,int L,int type,int ID)\n{\n\tif(l<L) x2[id].push_back((node2){l,L-1,type,ID});\n\telse x2[id].push_back((node2){L,l-1,type,ID});\n\tl=L;\n}\nbool cmp2(node a,node b)\n{\n\tif(a.w==b.w)\n\t{\n\t\tif(a.w&1) return a.r<b.r;\n\t\telse return a.r>b.r;\n\t}\n\telse return a.w<b.w;\n}\nvoid push1(int a)\n{\n\tfor(register int i=a;w[a]==w[i];i--)\n\t{\n\t\tk[i]++;\n\t}\n\tfor(register int i=1;i<w[a];i++)\n\t{\n\t\tK[i]++;\n\t}\n}\nvoid push2(int a)\n{\n\tfor(register int i=a;w[a]==w[i];i++)\n\t{\n\t\tk[i]++;\n\t}\n\tfor(register int i=w[a]+1;i<=w[d];i++)\n\t{\n\t\tK[i]++;\n\t}\n}\nsigned main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(block=1;block*block<n;block++);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\tsort(b+1,b+n+1);\n\td=unique(b+1,b+n+1)-b-1;\n\tfor(register int i=1;i<=n;i++)\n\t\ta[i]=lower_bound(b+1,b+d+1,a[i])-b;\n\tfor(idb=1;idb*idb<=n;idb++);\n\tfor(register int i=n;i;i--)\n\t{\n\t\ts2[i]=tr2.sum(a[i]-1);\n\t\ts2[i]+=s2[i+1];\n\t\ttr2.add(a[i]);\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\ts1[i]=i-tr1.sum(a[i])-1;\n\t\ts1[i]+=s1[i-1];\n\t\ttr1.add(a[i]);\n\t}\n\tint r=0,id,l=1,p;\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tq[i].read();\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+m+1,cmp2);\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tid=q[i].id;\n\t\tif(r<q[i].r) ans[id]+=(s1[q[i].r]-s1[r]),add1(l,r,q[i].r,-1,id);\n\t\tif(r>q[i].r) ans[id]-=(s1[r]-s1[q[i].r]),add1(l,r,q[i].r,1,id);\n\t\tif(l<q[i].l) ans[id]-=(s2[l]-s2[q[i].l]),add2(r,l,q[i].l,1,id);\n\t\tif(l>q[i].l) ans[id]+=(s2[q[i].l]-s2[l]),add2(r,l,q[i].l,-1,id);\n\t}\n\tint siz=1;\n\tfor(register int i=1;i<=d;i++)\n\t{\n\t\tif(i%idb==0) siz++;\n\t\tw[i]=siz;\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tsiz=x1[i].size();\n\t\tfor(register int j=0;j<siz;j++)\n\t\t{\n\t\t\tid=x1[i][j].id;\n\t\t\tp=x1[i][j].p;\n\t\t\tl=x1[i][j].u;\n\t\t\tr=x1[i][j].v;\n\t\t\tfor(register int xx=l;xx<=r;xx++)\n\t\t\t{\n\t\t\t\tans[id]+=p*(K[w[a[xx]+1]]+k[a[xx]+1]);\n\t\t\t}\n\t\t}\n\t\tpush1(a[i]);\n\t}\n\tfor(register int i=1;i<=d;i++) k[i]=0;\n\tfor(register int i=1;i<=w[d];i++) K[i]=0;\n\tfor(register int i=n;i;i--)\n\t{\n\t\tsiz=x2[i].size();\n\t\tfor(register int j=0;j<siz;j++)\n\t\t{\n\t\t\tid=x2[i][j].id;\n\t\t\tp=x2[i][j].p;\n\t\t\tl=x2[i][j].u;\n\t\t\tr=x2[i][j].v;\n\t\t\tfor(register int xx=l;xx<=r;xx++)\n\t\t\t{\n\t\t\t\tans[id]+=p*(K[w[a[xx]-1]]+k[a[xx]-1]);\n\t\t\t}\n\t\t}\n\t\tpush2(a[i]);\n\t}\n\tfor(register int i=2;i<=m;i++) ans[q[i].id]+=ans[q[i-1].id];\n\tfor(register int i=1;i<=m;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n## \u8c22\u8c22\u5927\u5bb6\n~~\u8c22\u5b8c\u5c31\u9003~~",
        "postTime": 1587622151,
        "uid": 99506,
        "name": "_LHF_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\u677f\u5b50\u3002\n\n### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u6c42\u6ee1\u8db3\u6761\u4ef6 $i<j\\and a_i>a_j$ \u4e14 $i,j\\in [l,r]$ \u7684\u6570\u5bf9 $(i,j)$ \u7684\u6570\u91cf\u3002\n\n### Solution\n\n\u770b\u5230\u4e0a\u9762\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6211\u4eec\u80af\u5b9a\u80fd\u60f3\u5230\u83ab\u961f\u4e8c\u6b21\u79bb\u7ebf\uff08\u5982\u679c\u4f60\u4f1a\u7684\u8bdd\uff09\uff0c\u73b0\u5728\u6765\u601d\u8003\u5b9e\u73b0\u4e0a\u7684\u7ec6\u8282\u3002\n\n\u8bbe $F(x,k)$ \u4e3a\u6ee1\u8db3 $i\\in[1,k]$ \u4e14 $a_i>a_x$ \u7684 $i$ \u7684\u6570\u91cf\uff0c$G(x,k)$ \u4e3a\u6ee1\u8db3 $i\\in[1,k]$ \u4e14 $a_i<a_x$ \u7684 $i$ \u7684\u6570\u91cf\n\n\u5728\u5de6\u6307\u9488\u632a\u5230 $x$ \u65f6\u7b54\u6848\u7684\u53d8\u5316\u91cf\u4e3a $G(x,r)-G(x,x)$\uff0c\u53f3\u6307\u9488\u632a\u5230 $x$ \u65f6\u7b54\u6848\u7684\u53d8\u5316\u91cf\u4e3a $F(x,x-1)-F(x,l-1)$\u3002\n\n\u663e\u7136\uff0c$F(x,x-1)$ \u548c $G(x,x)$ \u90fd\u53ef\u4ee5\u76f4\u63a5 $O(n\\log n)$ \u6811\u72b6\u6570\u7ec4\u9884\u5904\u7406\uff0c\u800c $G(x.r)$ \u548c$F(x,l-1)$ \u53ef\u4ee5\u626b\u63cf\u7ebf\u5904\u7406\u3002\n\n\u5728\u5b9e\u73b0\u626b\u63cf\u7ebf\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u6211\u4eec\u9700\u8981\u4e00\u79cd\u652f\u6301 $O(\\sqrt n)$ \u63d2\u5165\uff0c$O(1)$ \u67e5\u8be2\u5728\u4e00\u4e2a\u503c\u57df\u8303\u56f4\u5185\u7684\u6570\u7684\u6570\u91cf\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5206\u5757\u5b8c\u5168\u53ef\u4ee5\u652f\u6301\uff0c\u53ea\u8981\u7ef4\u62a4\u5757\u5185\u524d\u7f00\u548c\u548c\u5757\u95f4\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u5177\u4f53\u7684\u5b9e\u73b0\u53ef\u4ee5\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<tuple>\n#include<cmath>\n#include<cstring>\nnamespace IO{\n\t#define BUFSIZE 10000000\n\tstruct read{\n\t\tchar buf[BUFSIZE],*p1,*p2,c,f;\n\t\tread():p1(buf),p2(buf){}\n\t\tchar gc(void){\n\t\t\tif(p1==p2)p2=buf+fread(p1=buf,1,BUFSIZE,stdin);\n\t\t\tif(p1==p2)return EOF;\n\t\t\telse return *p1++;\n\t\t}\n\t\tread& operator >>(int& x){\n\t\t\tc=gc(),f=1,x=0;\n\t\t\tfor(;c<'0'||c>'9';c=gc())if(c=='-')f=-1;\n\t\t\tfor(;c>='0'&&c<='9';c=gc())x=x*10+c-'0';\n\t\t\tx*=f;\n\t\t\treturn *this;\n\t\t}\n\t};\n\tstruct write{\n\t\tchar buf[BUFSIZE],*p1,*p2,s[50];\n\t\tint tp;\n\t\twrite():p1(buf),p2(buf+BUFSIZE){}\n\t\t~write(){flush();}\n\t\tvoid flush(void){\n\t\t\tfwrite(buf,1,p1-buf,stdout);\n\t\t\tp1=buf;\n\t\t}\n\t\tvoid pc(char c){\n\t\t\tif(p1==p2)flush();\n\t\t\t*p1++=c;\n\t\t}\n\t\twrite& operator <<(long long x){\n\t\t\tif(x<0)x=-x,pc('-');\n\t\t\tdo{s[tp++]=x%10+'0',x/=10;}while(x);\n\t\t\twhile(tp)pc(s[--tp]);\n\t\t\treturn *this;\n\t\t}\n\t\twrite& operator <<(char x){\n\t\t\tpc(x);\n\t\t\treturn *this;\n\t\t}\n\t};\n\tread in;\n\twrite out;\n}\nusing IO::in;\nusing IO::out;\nstd::vector<std::tuple<int,int,int,int,int> > v[100010];\nint c[100010];\nint n,m,a[100010],b[100010],bel[100010],le[100010],gr[100010],lv[320],rv[320],s[320],sv[320][320],sz,belv[100010];\nlong long ans[100010];\ninline void updated(int i,int const &x){for(;i<=n;i+=i&-i)c[i]+=x;}//\u6811\u72b6\u6570\u7ec4\ninline int queryd(int i){int ans=0;for(;i;i-=i&-i)ans+=c[i];return ans;}\ninline void update(int const &x){//\u5206\u5757\n\tfor(int i=x-lv[belv[x]],*k=sv[belv[x]];i<sz;i++)++k[i];\n\tfor(int i=belv[x],k=belv[n];i<=k;i++)++s[i];\n}\ninline int query(int const &x){\n\treturn s[belv[x]-1]+sv[belv[x]][x-lv[belv[x]]];\n}\nstruct node{\n\tint l,r,id;\n\tlong long ans;\n\tbool operator <(node const &x)const{\n\t\treturn bel[l]==bel[x.l]?r<x.r:l<x.l;\n\t}\n}q[100010];\nint main(){\n\tin>>n>>m;\n\tfor(int i=1;i<=n;i++)in>>a[i],b[i]=a[i];\n\tstd::sort(b+1,b+n+1);\n\tfor(int i=1;i<=n;i++)a[i]=std::lower_bound(b+1,b+n+1,a[i])-b;\n\tfor(int i=1;i<=n;i++){//\u9884\u5904\u7406\n\t\tle[i]=queryd(a[i]-1);\n\t\tgr[i]=queryd(n)-queryd(a[i]);\n\t\tupdated(a[i],1);\n\t}\n\t::sz=sqrt(n);\n\tfor(int i=1;i<=n;i++)belv[i]=(i-1)/::sz+1;\n\tfor(int i=0,j=1;i<n;i+=::sz,j++)lv[j]=i+1,rv[j-1]=i;\n\trv[belv[n]]=n;\n\tint sz=n/sqrt(m);\n\tfor(int i=1;i<=n;i++)bel[i]=(i-1)/sz+1;\n\tfor(int i=1;i<=m;i++)in>>q[i].l>>q[i].r,q[i].id=i;\n\tstd::sort(q+1,q+m+1);\n\tfor(int i=1,l=1,r=0;i<=m;i++){//\u83ab\u961f\n\t\tif(l>q[i].l) v[r].emplace_back(q[i].l,l-1,1,1,i);\n\t\twhile(l>q[i].l) --l,q[i].ans-=le[l];\n\t\tif(r<q[i].r) v[l-1].emplace_back(r+1,q[i].r,0,-1,i);\n\t\twhile(r<q[i].r) ++r,q[i].ans+=gr[r];\n\t\tif(l<q[i].l) v[r].emplace_back(l,q[i].l-1,1,-1,i);\n\t\twhile(l<q[i].l) q[i].ans+=le[l],++l;\n\t\tif(r>q[i].r) v[l-1].emplace_back(q[i].r+1,r,0,1,i);\n\t\twhile(r>q[i].r) q[i].ans-=gr[r],--r;\n\t}\n\tfor(int p=1;p<=n;p++){//\u626b\u63cf\u7ebf\n\t\tint l,r,cmp,kp,id;\n\t\tupdate(a[p]);\n\t\tfor(auto&& x:v[p]){\n\t\t\tstd::tie(l,r,cmp,kp,id)=x;\n\t\t\tfor(int i=l;i<=r;i++)\n\t\t\t\tif(cmp==1) q[id].ans+=kp*query(a[i]-1);\n\t\t\t\telse q[id].ans+=kp*(query(n)-query(a[i]));\n\t\t}\n\t}\n\tfor(int i=2;i<=m;i++)q[i].ans+=q[i-1].ans;\n\tfor(int i=1;i<=m;i++)ans[q[i].id]=q[i].ans;\n\tfor(int i=1;i<=m;i++)out<<ans[i]<<'\\n';\n\treturn 0;\n}\n```\n\n",
        "postTime": 1602845729,
        "uid": 55707,
        "name": "gxy001",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5047"
    },
    {
        "content": "\u9898\u76ee\u5728\u8fd9\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5047)\n\n\u666e\u901a\u83ab\u961f\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n}logn)$\uff0c\u5728\u8fd9\u4e00\u9898\u91cc\u88ab\u5361\u4e86\u3002\n\n\u600e\u4e48\u529e\uff1f\n\n\u5728\u66f4\u65b0\u7b54\u6848\u65f6\u95f4\u4e0d\u662f $O(1)$ \u65f6\uff0c\u6709\u4e00\u79cd\u795e\u5947\u7684\u4e8c\u6b21\u79bb\u7ebf\u83ab\u961f\u53ef\u4ee5\u89e3\u51b3\u3002\n\n\u5177\u4f53\u7684\u505a\u6cd5\u53ef\u4ee5\u53bb[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P4887)\u770b\u770b\u3002\n\n\u8fd9\u4e00\u9898\u662f\u8981\u6c42\u533a\u95f4\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u3002\u79fb\u52a8\u4e00\u6b21\u5de6\u6307\u9488\uff0c\u90a3\u4e48\u52a0\u4e0a\u7684\u8d21\u732e\u5e94\u8be5\u4e3a\u6bd4\u8fd9\u4e2a\u6570**\u5c0f**\u7684\u6570\u7684\u4e2a\u6570\uff0c\u800c\u79fb\u52a8\u4e00\u6b21\u53f3\u6307\u9488\u7684\u8d21\u732e\u5219\u662f\u6bd4\u8fd9\u4e2a\u6570**\u5927**\u7684\u6570\u7684\u4e2a\u6570\u3002\u6240\u4ee5\u5c31\u662f\u8981\u5206\u7c7b\u8ba8\u8bba\u3002\n\n\u7136\u540e\u662f\u7b2c\u4e8c\u6b21\u79bb\u7ebf\u3002\u8fd9\u6b21\u79bb\u7ebf\u6309\u7167\u6b63\u5e38\u601d\u7ef4\u5e94\u8be5\u4f1a\u7528\u63d2\u5165\u5220\u9664\u90fd\u662f $O(logn)$ \u7684\u6811\u72b6\u6570\u7ec4\u6765\u5199\u3002\u4f46\u662f\u8fd9\u4e00\u9898\u5f88\u5751\uff0c\u6709 $n$ \u4e2a\u8be2\u95ee\uff0c$n\\sqrt n$ \u4e2a\u8be2\u95ee\u3002\u8fd9\u65f6\u7528 $O(logn)$ \u67e5\u8be2\u7684\u65b9\u6cd5\u5c31\u5931\u8d25\u4e86\u3002\u4e3a\u4e86\u5e73\u8861\uff0c\u6211\u4eec\u5e94\u8be5\u9700\u8981\u4e00\u4e2a\u63d2\u5165\u5c0f\u4e8e\u7b49\u4e8e $O(\\sqrt n)$\uff0c\u5220\u9664 $O(1)$ \u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u53eb**\u503c\u57df\u5206\u5757**\u3002\n\n\u90a3\u4e48\u5e94\u7528\u4e0a\u503c\u57df\u5206\u5757\u5176\u5b9e\u5c31\u53ef\u4ee5 AC \u4e86\u3002\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<cmath>\nusing namespace std;\nconst int N=1e5+10;\nstruct value_block{\n\tint blo[N],lm[N],rm[N];\n\tint sum1[N],sum2[N],tag1[N],tag2[N];\n\tint block;\n\tvoid build(int n){\n\t\tblock=sqrt(n);\n\t\tfor(int i=1;i<=block;i++){\n\t\t\tlm[i]=(i-1)*block+1;\n\t\t\trm[i]=i*block;\n\t\t}\n\t\trm[block]=n;\n\t\tfor(int i=1;i<=block;i++)\n\t\t\tfor(int j=lm[i];j<=rm[i];j++)\n\t\t\t\tblo[j]=i;\n\t}\n\tinline void add(int val){\n\t\tint b=blo[val];\n\t\tfor(int i=1;i<=b-1;i++)\n\t\t\tsum2[i]++;\n\t\tfor(int i=lm[b];i<=val-1;i++)\n\t\t\ttag2[i]++;\n\t\tfor(int i=b+1;i<=block;i++)\n\t\t\tsum1[i]++;\n\t\tfor(int i=val+1;i<=rm[b];i++)\n\t\t\ttag1[i]++;\n\t}\n\tinline int query1(int val){\n\t\treturn sum1[blo[val]]+tag1[val];\n\t}\n\tinline int query2(int val){\n\t\treturn sum2[blo[val]]+tag2[val];\n\t}\n\tvoid clear(){\n\t\tmemset(sum1,0,sizeof sum1);\n\t\tmemset(tag1,0,sizeof tag1);\n\t\tmemset(sum2,0,sizeof sum2);\n\t\tmemset(tag2,0,sizeof tag2);\n\t}\n};\nstruct quest{\n\tint l,r;\n\tint pos;\n\tlong long ans;\n};\nstruct node{\n\tbool che;\n\tint l,r;\n\tint pos;\n\tint opt;\n};\nvalue_block vb;\nquest q[N];\nvector<node> v[N];\nint a[N],b[N],lm[N],rm[N],blo[N],f1[N],f2[N];\nlong long res[N];\nint t;\ninline int get(int val){\n\treturn lower_bound(b+1,b+t+1,val)-b;\n}\ninline bool cmp(quest x,quest y){\n\treturn blo[x.l]!=blo[y.l]?blo[x.l]<blo[y.l]:x.r<y.r;\n}\nint main(){\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t\tb[i]=a[i];\n\t}\n\tsort(b+1,b+n+1);\n\tt=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=get(a[i]);\n\tvb.build(t);\n\tint block=sqrt(n);\n\tfor(int i=1;i<=block;i++){\n\t\tlm[i]=(i-1)*block+1;\n\t\trm[i]=i*block;\n\t}\n\trm[block]=n;\n\tfor(int i=1;i<=block;i++)\n\t\tfor(int j=lm[i];j<=rm[i];j++)\n\t\t\tblo[j]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&q[i].l,&q[i].r);\n\t\tq[i].pos=i;\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tf1[i]=vb.query1(a[i]);\n\t\tf2[i]=vb.query2(a[i]);\n\t\tvb.add(a[i]);\n\t}\n\tint l=1,r=0;\n\tnode tmp;\n\tfor(int i=1;i<=m;i++){\n\t\tif(l<q[i].l){\n\t\t\ttmp.l=l;\n\t\t\ttmp.r=q[i].l-1;\n\t\t\ttmp.pos=i;\n\t\t\ttmp.opt=-1;\n\t\t\ttmp.che=true;\n\t\t\tv[r].push_back(tmp);\n\t\t}\n\t\twhile(l<q[i].l)\n\t\t\tq[i].ans+=f1[l++];\n\t\tif(r<q[i].r){\n\t\t\ttmp.l=r+1;\n\t\t\ttmp.r=q[i].r;\n\t\t\ttmp.pos=i;\n\t\t\ttmp.opt=-1;\n\t\t\ttmp.che=false;\n\t\t\tv[l-1].push_back(tmp);\n\t\t}\n\t\twhile(r<q[i].r)\n\t\t\tq[i].ans+=f2[++r];\n\t\tif(l>q[i].l){\n\t\t\ttmp.l=q[i].l;\n\t\t\ttmp.r=l-1;\n\t\t\ttmp.pos=i;\n\t\t\ttmp.opt=1;\n\t\t\ttmp.che=true;\n\t\t\tv[r].push_back(tmp);\n\t\t}\n\t\twhile(l>q[i].l)\n\t\t\tq[i].ans-=f1[--l];\n\t\tif(r>q[i].r){\n\t\t\ttmp.l=q[i].r+1;\n\t\t\ttmp.r=r;\n\t\t\ttmp.pos=i;\n\t\t\ttmp.opt=1;\n\t\t\ttmp.che=false;\n\t\t\tv[l-1].push_back(tmp);\n\t\t}\n\t\twhile(r>q[i].r)\n\t\t\tq[i].ans-=f2[r--];\n\t}\n\tvb.clear();\n\tint len,pos,opt;\n\tbool che;\n\tfor(int i=1;i<=n;i++){\n\t\tvb.add(a[i]);\n\t\tlen=v[i].size();\n\t\tfor(int j=0;j<len;j++){\n\t\t\tl=v[i][j].l;\n\t\t\tr=v[i][j].r;\n\t\t\tpos=v[i][j].pos;\n\t\t\topt=v[i][j].opt;\n\t\t\tche=v[i][j].che;\n\t\t\tfor(int k=l;k<=r;k++)\n\t\t\t\tif(che)\n\t\t\t\t\tq[pos].ans+=opt*vb.query1(a[k]);\n\t\t\t\telse\n\t\t\t\t\tq[pos].ans+=opt*vb.query2(a[k]);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tq[i].ans+=q[i-1].ans;\n\tfor(int i=1;i<=m;i++)\n\t\tres[q[i].pos]=q[i].ans;\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%lld\\n\",res[i]);\n}\n```",
        "postTime": 1616292563,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019 \u6a21\u62df\u8d5b] Yuno loves sqrt technology II\u3011"
    },
    {
        "content": "\u8003\u8651\u83ab\u961f\u3002\n\n\u5982\u679c\u662f\u5355\u7eaf\u7684\u83ab\u961f\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u9006\u5e8f\u5bf9\u6570\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u590d\u6742\u5ea6\u662f $O(n^{1.5}\\log n)$\uff0c\u96be\u4ee5\u63a5\u53d7\u3002\n\n\u600e\u4e48\u5c06\u8fd9\u4e2a\u6811\u72b6\u6570\u7ec4\u6d88\u9664\uff1f\n\n\u8003\u8651\u5f53\u524d\u533a\u95f4\u4e3a $[l,r-1]$ \uff0c\u9700\u8981\u5c06\u53f3\u7aef\u70b9\u5411\u53f3\u79fb\u52a8\uff0c\u5373\u52a0\u5165 $a_r$ \uff0c\u5e76\u4e14\u5c06\u7b54\u6848\u52a0\u4e0a $a_{l,l+1,\\cdots,r-1}$ \u4e2d\u5927\u4e8e $a_r$ \u7684\u6570\u7684\u4e2a\u6570\u3002\u5176\u5b9e\u8fd9\u4e5f\u5c31\u7b49\u4e8e $a_{1\\cdots r-1}$ \u4e2d\u5927\u4e8e $a_r$ \u7684\u4e2a\u6570\u51cf\u53bb $a_{1\\cdots l-1}$ \u4e2d\u5927\u4e8e $a_r$ \u7684\u4e2a\u6570\u3002\n\n\u7b2c\u4e00\u4e2a\u8d21\u732e\u53ef\u4ee5\u76f4\u63a5\u5c06\u6574\u4e2a\u6570\u7ec4\u626b\u4e00\u904d\u5904\u7406\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n\u7b2c\u4e8c\u4e2a\u8be2\u95ee\u7684\u8bdd\uff0c\u8003\u8651\u5c06 $l-1$ \u5904\u5f00\u4e2a\u6876\uff0c\u7136\u540e\u5c06 $r$ \u4e22\u5165\u3002\u56e0\u4e3a\u83ab\u961f\u7684\u79fb\u52a8\u6b21\u6570\u662f $O(n\\sqrt{m})$ \u7684\uff0c\u56e0\u6b64\u7a7a\u95f4\u7684\u9700\u6c42\u91cf\u4e5f\u662f $O(n\\sqrt{m})$ \u7684\u3002\n\n\u6700\u540e\u53ea\u9700\u8981\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u7136\u540e\u83b7\u53d6\u5176\u6876\u4e2d\u7684\u6570\u7684\u7b54\u6848\u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u9898\u5361\u7a7a\u95f4\uff0c\u4e0d\u80fd\u76f4\u63a5\u5b58\u50a8\u8d21\u732e\u3002\u540c\u65f6\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a $l$ \u5bf9\u5e94\u7684\u4e00\u6bb5 $r$ \u5176\u5b9e\u662f\u8fde\u7eed\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u5c06\u533a\u95f4\u505a\u53f3\u7aef\u70b9\u5b58\u4e0b\u5373\u53ef\u3002\n\n\u6ce8\u610f `ans` \u8bb0\u5f55\u7684\u662f\u7b54\u6848\u53d8\u5316\u91cf\uff0c\u56e0\u6b64\u6700\u7ec8\u8fd8\u9700\u8981\u505a\u4e00\u904d\u524d\u7f00\u548c\u3002\n\n\uff08\u5176\u5b9e\u5c31\u662f\u76f8\u5f53\u4e8e\u5c06\u83ab\u961f\u7684\u8f6c\u79fb\u518d\u6b21\u79bb\u7ebf\n\n```cpp\nconst int N=1e5+5;\n\nint n,m,_,a[N];\nll ans[N];\nstruct Query {int l,r,id;} q[N];\n\n// {{{ unique_a\ninline void unique_a() {\n\tstatic int h[N];\n\tlep(i,1,n) h[i]=a[i];\n\tstd::sort(h+1,h+1+n),_=1;\n\tlep(i,2,n) if(h[_]!=h[i]) h[++_]=h[i];\n\tlep(i,1,n) a[i]=std::lower_bound(h+1,h+1+_,a[i])-h;\n}\n// }}}\n\nnamespace Get_Pre { // {{{\nll pre[N],suf[N];\n\n// {{{ BIT\nint res,c[N];\ninline int lowbit(int x) {return x&(-x);}\ninline void modify(int x) {for(;x<=_;x+=lowbit(x)) ++c[x];}\ninline int query(int x) {res=0; for(;x;x-=lowbit(x)) res+=c[x]; return res;}\ninline void clear() {CLEAR(c);}\n// }}}\n\ninline void solve() {\n\tclear(); lep(i,1,n) pre[i]=pre[i-1]+query(_-a[i]),modify(_-a[i]+1);\n\tclear(); rep(i,n,1) suf[i]=suf[i+1]+query(a[i]-1),modify(a[i]);\n}\n} using Get_Pre::pre,Get_Pre::suf; // }}}\n\n// {{{ Solve\nstruct Node {int l,r,id,typ;};\nstd::vector <Node> sta1[N],sta2[N];\n\n// {{{ Block\nconst int SqrtN=4e2+5;\nint id[N],val[N],L[SqrtN],R[SqrtN],sum[SqrtN];\n\ninline int query(int x) {return val[x]+sum[id[x]];}\ninline void update1(int x) {\n\tlep(i,L[id[x]],x-1) ++val[i];\n\tlep(i,1,id[x]-1) ++sum[i];\n}\ninline void update2(int x) {\n\tlep(i,x+1,R[id[x]]) ++val[i];\n\tlep(i,id[x]+1,id[_]) ++sum[i];\n}\ninline void clear() {CLEAR(val),CLEAR(sum);}\n// }}}\n\ninline void solve() {\n\tint B=sqrt(_);\n\tfor(int l=1,r=0,c=1;l<=_;l=r+1,++c) {\n\t\tr=min(l+B-1,_),L[c]=l,R[c]=r;\n\t\tlep(i,l,r) id[i]=c;\n\t}\n\n\tclear(); lep(i,1,n) {\n\t\tupdate1(a[i]);\n\t\tfor(Node now:sta1[i]) lep(j,now.l,now.r) ans[now.id]+=1ll*query(a[j])*now.typ;\n\t}\n\tclear(); rep(i,n,1) {\n\t\tupdate2(a[i]);\n\t\tfor(Node now:sta2[i]) lep(j,now.l,now.r) ans[now.id]+=1ll*query(a[j])*now.typ;\n\t}\n}\n// }}}\n\nint pos[N];\nint main() {\n\tIN(n,m);\n\tlep(i,1,n) IN(a[i]);\n\tlep(i,1,m) IN(q[i].l,q[i].r),q[i].id=i;\n\n\tunique_a();\n\tGet_Pre::solve();\n\n\t#ifdef debug\n\tprintf(\"a : \"); lep(i,1,n) printf(\"%d \",a[i]); puts(\"\");\n\tprintf(\"pre : \"); lep(i,1,n) printf(\"%lld \",pre[i]); puts(\"\");\n\tprintf(\"suf : \"); lep(i,1,n) printf(\"%lld \",suf[i]); puts(\"\");\n\t#endif\n\n\tint B=n/sqrt(m*2/3+1);\n\tstd::sort(q+1,q+1+m,[&](Query x,Query y){return (x.l/B)^(y.l/B)?x.l<y.l:x.r<y.r;});\n\tlep(i,1,m) pos[q[i].id]=i;\n\n\tint l=1,r=0;\n\tlep(i,1,m) {\n\t\tif(r<q[i].r) ans[i]+=(pre[q[i].r]-pre[r]),sta1[l-1].pb((Node){r+1,q[i].r,i,-1}),r=q[i].r;\n\t\tif(r>q[i].r) ans[i]-=(pre[r]-pre[q[i].r]),sta1[l-1].pb((Node){q[i].r+1,r,i,1}),r=q[i].r;\n\t\tif(l<q[i].l) ans[i]-=(suf[l]-suf[q[i].l]),sta2[r+1].pb((Node){l,q[i].l-1,i,1}),l=q[i].l;\n\t\tif(l>q[i].l) ans[i]+=(suf[q[i].l]-suf[l]),sta2[r+1].pb((Node){q[i].l,l-1,i,-1}),l=q[i].l;\n\t}\n\n\tsolve();\n\tlep(i,1,m) ans[i]+=ans[i-1];\n\tlep(i,1,m) printf(\"%lld\\n\",ans[pos[i]]);\n\treturn 0;\n}\n```",
        "postTime": 1608476601,
        "uid": 194220,
        "name": "Moonlights",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5047 \u3010[Ynoi2019\u6a21\u62df\u8d5b]Yuno loves sqrt technology II\u3011"
    }
]