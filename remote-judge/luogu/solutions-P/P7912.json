[
    {
        "content": "\u5728[\u535a\u5ba2](https://yjh965.github.io/post/csp-j-2021-xiao-xiong-de-guo-lan-ti-jie/)\u98df\u7528\u66f4\u4f73\u3002\r\n\r\n# \u601d\u8def\r\n\r\n\u5bb9\u6613\u60f3\u5230\uff0c\u53ef\u4ee5\u628a\u6bcf\u4e00\u4e2a\u5757\u770b\u6210\u4e00\u4e2a\u6574\u4f53\u3002\r\n\r\n\u7531\u4e8e\u961f\u5217\u5148\u8fdb\u5148\u51fa\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u7ef4\u62a4\u5757\u3002\r\n\r\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u4e24\u4e2a\u5757\u5728\u961f\u5217\u91cc\u76f8\u90bb\u4e14\u5143\u7d20\u76f8\u540c\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u3002\r\n\r\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u9053\u6a21\u62df\u5566\uff01\r\n\r\n# \u4ee3\u7801\r\n\r\n```cpp\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <queue>\r\n\r\nusing namespace std;\r\n\r\nstruct kuai{ // \u5757\r\n\tint st, ed, th;\r\n}f, x, ad;\r\nint n, cnt, t[200002];\r\nqueue<kuai> q, q2;\r\nbool used[200001]; // \u8bb0\u5f55\u662f\u5426\u88ab\u53d6\u51fa\r\nint main(){\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 1;i <= n;i ++) scanf(\"%d\", &t[i]);\r\n\tt[n + 1] = !t[n];\r\n\tfor (int i = 2, si = 1;i <= n + 1;i ++){\r\n\t\tif (t[i] != t[i - 1]) q.push((kuai){si, i - 1, t[i - 1]}), si = i; // \u628a\u8fde\u7eed\u4e00\u6bb5\u76f8\u540c\u7684\u5143\u7d20\u5408\u6210\u4e00\u4e2a\u5757\r\n\t}\r\n\tcnt = n;\r\n\twhile (cnt){\r\n\t\twhile (q.size()){\r\n\t\t\tf = q.front();\r\n\t\t\tq.pop();\r\n\t\t\twhile (used[f.st] && f.st <= f.ed) f.st ++; // \u5982\u679c\u5df2\u7ecf\u88ab\u53d6\u4e86\r\n\t\t\tif (f.st > f.ed) continue;\r\n\t\t\tprintf(\"%d \", f.st), cnt --;\r\n\t\t\tused[f.st] = 1; // \u5c06\u5757\u7684\u5f00\u5934\u5143\u7d20\u53bb\u6389\u5e76\u8f93\u51fa\r\n\t\t\tif (f.ed == f.st) continue; // \u5982\u679c\u8fd9\u4e2a\u5757\u88ab\u53d6\u5b8c\u4e86\r\n\t\t\tf.st ++;\r\n\t\t\tq2.push(f); // \u5148\u4e34\u65f6\u5b58\u5230 q2 \u91cc\u8fdb\u884c\u5408\u5e76\r\n\t\t}\r\n\t\tputchar('\\n');\r\n\t\twhile (q2.size()){\r\n\t\t\tad = q2.front();\r\n\t\t\tq2.pop();\r\n\t\t\twhile (q2.size()){\r\n\t\t\t\tx = q2.front();\r\n\t\t\t\tif (x.th == ad.th){ // \u80fd\u5408\u5e76\u5c31\u5408\u5e76\r\n\t\t\t\t\tad.ed = x.ed;\r\n\t\t\t\t\tq2.pop();\r\n\t\t\t\t}\r\n\t\t\t\telse break;\r\n\t\t\t}\r\n\t\t\tq.push(ad); // \u4e22\u56de q \u91cc\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n# \u5173\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\r\n\r\n\u539f\u672c\uff0c\u5728\u8fd9\u79cd\u505a\u6cd5\u91cc\uff0c\u6bcf\u4e00\u4e2a\u6c34\u679c\u53ea\u4f1a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u6700\u591a\u4f1a\u5220\u9664 $n$ \u6b21\u3002\u4f46\u662f\uff0c\u6211\u7684\u4ee3\u7801\u5b9e\u73b0\u7684\u53ef\u80fd\u4e0d\u592a\u597d\uff0c\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n \\sqrt n)$ \u7684\uff0c\u4e3a\u4e86\u4fdd\u7559\u6bcf\u4e2a\u5143\u7d20\u539f\u672c\u7684\u4f4d\u7f6e\uff0c\u6211\u4f7f\u7528\u4e86\u4e00\u4e2a `bool` \u6570\u7ec4\uff0c\u5bf9\u6bcf\u5757\u91cc\u7684\u6570\u8fdb\u884c\u7c7b\u4f3c\u4e8e\u61d2\u60f0\u5220\u9664\u6cd5\u7684\u64cd\u4f5c\uff08\u89c1\u4ee3\u7801\u4e2d\u201c\u5982\u679c\u5df2\u7ecf\u88ab\u53d6\u4e86\u201d\u4e00\u884c\uff09\uff0c\u6784\u9020 `00000000111111000011011000011111100000000` \u8fd9\u6837\u7684\u6570\u636e\u53ef\u4ee5\u5c06\u8fd9\u90e8\u5206\u5361\u5230\u79fb\u52a8 $O(n \\sqrt n)$ \u6b21\u3002\u50cf\u8fd9\u6837\u7684\u505a\u6cd5\u5b9e\u73b0\u5e94\u8be5\u662f\u53ef\u4ee5\u505a\u5230 $O(n)$ \u7684\uff0c\u5982\u679c\u505a\u5230\u4e86\uff0c\u6b22\u8fce\u4e0e\u4f5c\u8005\u8ba8\u8bba\u5b9e\u73b0\u65b9\u5f0f\u3002",
        "postTime": 1635005247,
        "uid": 477443,
        "name": "YuJiahe",
        "ccfLevel": 7,
        "title": "[CSP-J 2021] \u5c0f\u718a\u7684\u679c\u7bee \u9898\u89e3"
    },
    {
        "content": "\u770b\u523099%\u7684\u4eba\u90fd\u5199\u4e86\u94fe\u8868\uff0c\u6211\u6765\u8bf4\u4e00\u4e2a\u6e05\u65b0\u505a\u6cd5\u2026\u2026\n\n\u8fd9\u9898\u8003\u573a\u4e0a\u60f3\u5230\u4e86\u94fe\u8868\u6b63\u89e3\uff0c\u7ed3\u679c\u5199\u6302\u4e86\u8fd8\u2122\u6ca1\u8c03\u51fa\u6765\uff0c\u5199\u4e86\u4e2a\u66b4\u529b\u670970\u6d77\u661f\uff0cCSP\u6b63\u89e3\u66b4\u529b\u533a\u5206\u5ea6\u771f\u662f\u4f4e\uff0c\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u5bfc\u81f4\u6211T3\u6ca1\u5224\u524d\u5bfc0\u76f4\u63a565pts \u54ce\n\n\u8003\u5b8c\u6559\u7ec3\u8ddf\u6211\u4eec\u8bf4\u4e86\u8fd9\u79cd\u505a\u6cd5.\n\n------------\n\u5927\u6982\u5c31\u662f\u5148\u8bb0\u5f55\u6240\u6709\u82f9\u679c\u548c\u6a58\u5b50\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u8f6e\u6d41\u53d6\uff0c\u4fdd\u8bc1\u53d6\u7684\u4e0b\u6807\u9012\u589e\uff0c\u53d6\u5b8c\u5c31\u6362\u884c\u518d\u4ece\u5934\u5f00\u59cb\u3002\n\n\u4ee5\u6837\u4f8b1\u4e3a\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/58xt9a3m.png)\n\n\u7136\u540e\u627e\u5230\u4e24\u5768\u91cc\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u91cc\u662f1\uff0c\u7136\u540e\u628a1\u53d6\u4e86\n\n\u63a5\u4e0b\u6765\u5c31\u53d60\u7684\u8fd9\u4e00\u5768\u5927\u4e8e\u4e4b\u524d\u6240\u53d6\u6570\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u91cc\u662f3\n\n\u5927\u6982\u5c31\u662f\u8fd9\u6837\u4ea4\u66ff\u53d6\uff0c\u53d6\u5230\u4e0d\u80fd\u53d6\u4e3a\u6b62\n\n\u56fe\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8696qjun.png)\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u53d6\u7684\u6240\u6709\u6570\u5c31\u662f\u7b2c\u4e00\u8f6e\u4e2d\u653e\u5230\u679c\u7bee\u91cc\u7684\u6570\uff0c\u6240\u4ee5\u5bf9\u5269\u4e0b\u7684\u6570\u8fd9\u6837\u7ee7\u7eed\u505a\u5c31\u884c\u4e86\u3002\n\n\u6613\u5f97\u5728\u4e00\u5806\u53d6\u5b8c\u540e\uff0c\u53e6\u4e00\u5806\u4f1a\u5269\u4e00\u4e2a\u533a\u95f4\uff0c\u4e00\u4e2a\u4e00\u4e2a\u8f93\u51fa\u5c31\u597d\u4e86\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e1c\u897f\u80fd\u7528 set \u7ef4\u62a4\uff0c\u67e5\u627e\u662f $\\log n$ \u7684\uff0c\u5220\u9664 erase \u662f $\\log n$ \u7684\uff0c\u5c31\u80fd\u8fc7\u4e86\uff0c\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n$\\mathfrak{m} \\mathtt{y} \\mathrm{c} \\sigma \\mathbf{d} \\mathsf{e} :$ \n\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 200010\nusing namespace std;\nint n;\nset<int>s1,s2;//\u628a\u4e0b\u6807\u6254\u5728\u4e24\u4e2aset\u91cc \nint main()\n{\n\tscanf(\"%d\",&n);\n\ts1.clear();\n\ts2.clear();\n\tint q;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&q);\n\t\tif (q) s1.insert(i);\n\t\telse s2.insert(i);\n\t}\n\ts1.insert(INF);//\u8fd9\u91cc\u585eINF\u7684\u539f\u56e0\u662f\u9632\u6b62set\u7a7a\u540e\u7684\u51fa\u9519 \n\ts2.insert(INF);\n\tint nw=0;\n\tbool p=*s1.begin()<*s2.begin()?0:1;//\u8fd9\u91cc\u662f\u627e\u4e24\u79cd\u4e1c\u897f\u6700\u5c0f\u4e0b\u6807\u7684\u5c0f\u503c\uff0cp\u662f\u5f53\u524d\u5220\u7684\u4e1c\u897f \n\twhile(!p && s1.size()>1 || p && s2.size()>1)//\u56e0\u4e3a\u6709\u4e2aINF\uff0c\u6240\u4ee5size\u8981>1 \n\t\tif (!p)\n\t\t{\n\t\t\tnw=*s1.upper_bound(nw);//upper_bound\u627e\u4e0b\u4e00\u4e2a \n\t\t\tif (nw==INF)//\u627e\u4e0d\u5b8c\u4e86\u5c31\u4ece\u5934\u5f00\u59cb \n\t\t\t{\n\t\t\t\tnw=0;\n\t\t\t\tp=*s1.begin()<*s2.begin()?0:1;//p\u8981\u91cd\u65b0\u9009 \n\t\t\t\tputs(\"\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%d \",nw);//\u53d6\u4e86\uff0c\u8f93\u51fa\uff0c\u5220\u9664 \n\t\t\ts1.erase(nw);\n\t\t\tp=!p;//\u53d6\u53e6\u5916\u4e00\u5768 \n\t\t}\n\t\telse//\u540c\u4e0a \n\t\t{\n\t\t\tnw=*s2.upper_bound(nw);\n\t\t\tif (nw==INF)\n\t\t\t{\n\t\t\t\tnw=0;\n\t\t\t\tp=*s1.begin()<*s2.begin()?0:1;\n\t\t\t\tputs(\"\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%d \",nw);\n\t\t\ts2.erase(nw);\n\t\t\tp=!p;\n\t\t}\n\tputs(\"\");//\u6700\u540e\u4e00\u4e2a\u679c\u7bee\u662f\u6ca1\u6362\u884c\u7684 \n\twhile(s1.size()>1) printf(\"%d\\n\",*s1.begin()),s1.erase(*s1.begin());//\u4e00\u5768\u53d6\u5b8c\u4ee5\u540e\uff0c\u53e6\u5916\u4e00\u5806\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u4e00\u884c\u4e00\u884c\u8f93\u51fa \n\twhile(s2.size()>1) printf(\"%d\\n\",*s2.begin()),s2.erase(*s2.begin());//\u540c\u4e0a \n\treturn 0;\n}\n```\n\n\u5176\u4ed6\u51e0\u70b9\uff1a\n\n1. \u8fd9\u91cc\u585eINF\u662f\u56e0\u4e3a\u4e0d\u585eINF\u800c\u5224end\u7684\u8bdd\uff0c\u540e\u9762\u518d\u627eupper_bound\u4f1a\u627e\u5230end\u4f1a\u70b8\n2. \u4e0d\u80fd\u5220\u5230\u5e95\u5c31\u4ece\u5934\u5f00\u59cb\uff0c\u56e0\u4e3a\u53ef\u80fd\u53e6\u5916\u4e00\u5806\u8fd8\u6709\u4e1c\u897f\u8981\u5220\n3. \u8fd9\u4e2a\u505a\u6cd5\u5728\u6c34\u679c\u79cd\u7c7b\u591a\u7684\u60c5\u51b5\u4e0b\u524d\u9014\u5f88\u597d\uff0c\u591a\u5f00\u51e0\u4e2aset\u8f6e\u6d41\u53d6\u5c31\u597d\u4e86\n\n\u5927\u6982\u5c31\u662f\u8fd9\u6837\u4e86\u53ed~",
        "postTime": 1635769380,
        "uid": 152535,
        "name": "_StarBird_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7912 \u3010\u5c0f\u718a\u7684\u679c\u7bee\u3011"
    },
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\n\u5c0f\u718a\u7684\u6c34\u679c\u5e97\u91cc\u6446\u653e\u7740\u4e00\u6392 $n$ \u4e2a\u6c34\u679c\u3002\u6bcf\u4e2a\u6c34\u679c\u53ea\u53ef\u80fd\u662f\u82f9\u679c\u6216\u6854\u5b50\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7528\u6b63\u6574\u6570 $1$\u3001$2$\u3001$3$\u3001\u2026\u2026\u3001$n$ \u7f16\u53f7\u3002\u8fde\u7eed\u6392\u5728\u4e00\u8d77\u7684\u540c\u4e00\u79cd\u6c34\u679c\u79f0\u4e3a\u4e00\u4e2a\u201c\u5757\u201d\u3002\u5c0f\u718a\u8981\u628a\u8fd9\u4e00\u6392\u6c34\u679c\u6311\u5230\u82e5\u5e72\u4e2a\u679c\u7bee\u91cc\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\uff1a\u6bcf\u6b21\u90fd\u628a\u6bcf\u4e00\u4e2a\u201c\u5757\u201d\u4e2d\u6700\u5de6\u8fb9\u7684\u6c34\u679c\u540c\u65f6\u6311\u51fa\uff0c\u7ec4\u6210\u4e00\u4e2a\u679c\u7bee\u3002\u91cd\u590d\u8fd9\u4e00\u64cd\u4f5c\uff0c\u76f4\u81f3\u6c34\u679c\u7528\u5b8c\u3002\u6ce8\u610f\uff0c\u6bcf\u6b21\u6311\u5b8c\u4e00\u4e2a\u679c\u7bee\u540e\uff0c\u201c\u5757\u201d\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6bd4\u5982\u4e24\u4e2a\u82f9\u679c\u201c\u5757\u201d\u4e4b\u95f4\u7684\u552f\u4e00\u6854\u5b50\u88ab\u6311\u8d70\u540e\uff0c\u4e24\u4e2a\u82f9\u679c\u201c\u5757\u201d\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u201c\u5757\u201d\u3002\u8bf7\u5e2e\u5c0f\u718a\u8ba1\u7b97\u6bcf\u4e2a\u679c\u7bee\u91cc\u5305\u542b\u7684\u6c34\u679c\u3002\n# \u9898\u89e3\n\u9996\u5148\u5bf9\u8f93\u5165\u5e8f\u5217\u5efa\u53cc\u5411\u94fe\u8868\uff0c\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u201c\u5047\u5757\u201d\u5934\u5efa\u53cc\u5411\u94fe\u8868\uff0c\u5171\u7ef4\u62a4\u4e24\u4e2a\u94fe\u8868\u3002\n\n\u8fd9\u91cc\u7684\u201c\u5047\u5757\u201d\u6307\u6bcf\u4e2a\u201c\u5047\u5757\u201d\u4e2d\u6c34\u679c\u79cd\u7c7b\u5fc5\u5b9a\u76f8\u540c\uff0c\u4f46\u76f8\u90bb\u201c\u5047\u5757\u201d\u4e2d\u6c34\u679c\u79cd\u7c7b\u53ef\u80fd\u76f8\u540c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53cc\u5411\u94fe\u8868\u7684\u5220\u9664\u5143\u7d20\u6765\u6a21\u62df\u5403\u4e00\u4e2a\u6c34\u679c\u3002\n\n\u4e0d\u65ad\u5faa\u73af\u904d\u5386\u201c\u5047\u5757\u201d\u5934\u94fe\u8868\uff0c\u904d\u5386\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u88ab\u5403\u6c34\u679c\u79cd\u7c7b\u3002\u904d\u5386\u5230\u67d0\u4e2a\u5757\u5934\u65f6\uff0c\u82e5\u5176\u6307\u5411\u7684\u6c34\u679c\u4e0e\u4e0a\u4e00\u4e2a\u88ab\u5403\u6c34\u679c\u79cd\u7c7b\u76f8\u540c\uff0c\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5757\u5934\u5220\u9664\uff0c\u76f8\u5f53\u4e8e\u5408\u5e76\u5757\uff1b\u82e5\u4e0d\u540c\uff0c\u5403\u6389\u8fd9\u4e2a\u6c34\u679c\uff0c\u66f4\u65b0\u4e0a\u4e00\u4e2a\u88ab\u5403\u6c34\u679c\u79cd\u7c7b\uff0c\u5c06\u8fd9\u4e2a\u5757\u5934\u6307\u5411\u7684\u6c34\u679c\u53d8\u6210\u88ab\u5403\u6c34\u679c\u7684\u4e0b\u4e00\u4e2a\u6c34\u679c\u3002\n\n\u5173\u4e8e\u4e00\u4e2a\u5047\u5757\u88ab\u5403\u5b8c\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u6b64\u65f6\u8fd9\u4e2a\u5047\u5757\u7684\u5757\u5934\u4e00\u5b9a\u4f1a\u6307\u5411\u4e0b\u4e00\u4e2a\u5757\u5934\u3002\u82e5\u8fd9\u4e2a\u5757\u5934\u7684\u79cd\u7c7b\u4e0e\u88ab\u5403\u6c34\u679c\u7684\u79cd\u7c7b\u4e0d\u540c\uff0c\u5220\u6389\u8fd9\u4e2a\u5757\uff0c\u56e0\u4e3a\u904d\u5386\u4e0b\u4e00\u4e2a\u5757\u65f6\u5c06\u4f1a\u5403\u6389\u8fd9\u4e2a\u6c34\u679c\uff1b\u82e5\u76f8\u540c\uff0c\u4e0d\u52a8\uff0c\u56e0\u4e3a\u63a5\u4e0b\u6765\u7684\u8fc7\u7a0b\u5c06\u4f1a\u628a\u4e0b\u4e00\u4e2a\u5757\u7684\u5757\u5934\u5220\u9664\u3002\u8fd9\u6837\u4fdd\u8bc1\u904d\u5386\u65f6\u4e0d\u4f1a\u51fa\u73b0\u957f\u5ea6\u5c0f\u4e8e\u4e00\u7684\u5047\u5757\u3002\u82e5\u5047\u5757\u6ca1\u6709\u88ab\u5403\u5b8c\uff0c\u5176\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u6c34\u679c\u4e00\u5b9a\u4e0e\u5403\u6389\u7684\u79cd\u7c7b\u76f8\u540c\uff0c\u540c\u6837\u4e0d\u505a\u4efb\u4f55\u5904\u7406\u3002\n\n\u6bcf\u4e2a\u6c34\u679c\u88ab\u904d\u5386\u4e00\u6b21\uff0c\u6bcf\u4e2a\u5757\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n\nusing namespace std;\n\nconst int MAXN = 2e5+10;\n\nstruct Node{\n  int prev;\n  int val;\n  int next;\n};\n\nint n;\n\nint shuiguo[MAXN];\nNode headList[MAXN];\nNode shuiguoList[MAXN];\nint cc;\n\nvoid EatOne(int pos) {\n  int prev = shuiguoList[pos].prev;\n  int next = shuiguoList[pos].next;\n  shuiguoList[prev].next = next;\n  shuiguoList[next].prev = prev;\n  printf(\"%d \", pos);\n}\n\nvoid Del(int pos) {\n  int prev = headList[pos].prev;\n  int next = headList[pos].next;\n  headList[prev].next = next;\n  headList[next].prev = prev;\n}\n\nvoid Chi() {\n  int solo = headList[0].next;\n  int nowcolor = shuiguo[headList[solo].val];\n  while (solo!=cc+1) {\n    if (shuiguo[headList[solo].val]!=nowcolor) {\n      Del(solo);\n      solo = headList[solo].next;\n      continue;\n    }\n    EatOne(headList[solo].val);\n    headList[solo].val = shuiguoList[headList[solo].val].next;\n    if (shuiguo[headList[solo].val]!=nowcolor) {\n      Del(solo);\n    }\n    solo = headList[solo].next;\n    nowcolor^=1;\n  }\n  putchar('\\n');\n}\n\nint main() {\n  scanf(\"%d\", &n);\n  shuiguoList[0].next = 1;\n  for (int i = 1; i <= n; i++) {\n    scanf(\"%d\", &shuiguo[i]);\n    shuiguoList[i].prev = i-1;\n    shuiguoList[i].next = i+1;\n  }\n  shuiguo[0] = 2;\n  shuiguo[n+1] = 2;\n  headList[0].next = 1;\n  for (int i = 1; i <= n; i++) {\n    if (shuiguo[i]!=shuiguo[i-1]) {\n      cc++;\n      headList[cc].prev = cc-1;\n      headList[cc].next = cc+1;\n      headList[cc].val = i;\n    }\n  }\n  while (shuiguoList[0].next!=n+1) {\n    Chi();\n  }\n  return 0;\n}\n\n```\n",
        "postTime": 1634984486,
        "uid": 124314,
        "name": "lcyxds",
        "ccfLevel": 0,
        "title": "P7912 [CSP-J 2021] \u5c0f\u718a\u7684\u679c\u7bee"
    },
    {
        "content": "\u8003\u8651\u7ef4\u62a4\u6bcf\u4e2a\u8fde\u7eed\u6bb5\u7684\u957f\u5ea6\u548c\u989c\u8272\uff0c\u6bcf\u6b21\u679a\u4e3e\u8fde\u7eed\u6bb5\u5e76\u5c06\u957f\u5ea6\u51cf\u4e00\u3002\u5982\u679c\u957f\u5ea6\u4e3a $0$\uff0c\u5408\u5e76\u4e24\u4fa7\u8fde\u7eed\u6bb5\u3002\u4e00\u4e2a\u5bb9\u6613\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u5c06\u975e\u7a7a\u8fde\u7eed\u6bb5\u653e\u5165\u6808\u5185\uff0c\u6bcf\u6b21\u5165\u6808\u65f6\u4e0e\u6808\u9876\u6bd4\u8f83\u989c\u8272\u3002\r\n\r\n\u4f46\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u597d\u7ef4\u62a4\u7f16\u53f7\u3002\u8003\u8651\u76f4\u63a5\u4f7f\u7528 pbds \u7684\u5e73\u8861\u6811\u66b4\u529b\u7ef4\u62a4\u8fd8\u5269\u54ea\u4e9b\u7f16\u53f7\uff0c\u90a3\u6bcf\u6b21\u67e5\u7b2c $k+1$ \u5c0f\u5c31\u77e5\u9053\u7f16\u53f7\u4e86\uff0c$k$ \u662f\u524d\u9762\u8fde\u7eed\u6bb5\u7684\u603b\u957f\u3002\r\n\r\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c`1 1 0 1 1 0 0`\uff0c\u6211\u4eec\u7528 $(length,color)$ \u8868\u793a\u957f\u5ea6\u4e0e\u989c\u8272\uff0c\u90a3\u4e48\u5e8f\u5217\u8f6c\u5316\u4e3a $(2,1),(1,0),(2,1),(2,0)$\u3002\r\n\r\n\u679a\u4e3e\u8fd9\u56db\u4e2a\u4e8c\u5143\u7ec4\uff0c\u957f\u5ea6\u51cf\u4e00\uff0c$(2,1),(1,0),(2,1),(2,0)\\to (1,1),(1,0),(2,1),(2,0)\\to(1,1),(0,0),(2,1),(2,0)$\r\n\r\n\u6b64\u65f6\u6ce8\u610f\u5230\u7b2c\u4e8c\u4e2a\u957f\u5ea6\u5df2\u7ecf\u4e3a $0$\uff0c\u5408\u5e76\u4e24\u4fa7\u4e8c\u5143\u7ec4\u53d8\u4e3a $(3,1),(2,0)$\u3002\r\n\r\n\u7ee7\u7eed\u957f\u5ea6\u51cf\u4e00\uff08\u6ce8\u610f\u4e0a\u4e00\u6b21\u679a\u4e3e\u5230\u7684 $(1,0)$ \u7684\u4e0b\u4e00\u4e2a\u73b0\u5728\u53d8\u4e3a\u4e86 $(3,1)$\uff09\uff0c\u53d8\u4e3a $(2,1),(2,0)\\to (2,1),(1,0)$\u3002\u8fd9\u6837\u5df2\u7ecf\u6210\u529f\u7ef4\u62a4\u4e86\u6240\u6709\u8fde\u7eed\u6bb5\u957f\u5ea6\u3002\r\n\r\n\u90a3\u4e48\u600e\u4e48\u77e5\u9053\u7f16\u53f7\u5462\uff1f\r\n\r\n\u521d\u59cb\u72b6\u6001\u7f16\u53f7\u96c6\u5408\u4e3a $1,2,3,4,5,6,7$\u3002\u5220\u53bb $(2,1)$ \u6700\u5de6\u4fa7\u5143\u7d20\u65f6\uff0c\u524d\u9762\u6ca1\u6709\u5143\u7d20\uff0c\u5220\u53bb\u7684\u662f\u6700\u5c0f\u503c $1$\u3002\u96c6\u5408\u53d8\u4e3a $2,3,4,5,6,7$\u3002\r\n\r\n\u5f53\u5220\u53bb $(1,0)$ \u7684\u6700\u5de6\u4fa7\u5143\u7d20\u65f6\uff0c\u6ce8\u610f\u6b64\u65f6\u56db\u4e2a\u4e8c\u5143\u7ec4\u5206\u522b\u4e3a $(1,1),(1,0),(2,1),(2,0)$\uff0c$(1,0)$ \u4e4b\u524d\u6709\u603b\u957f\u4e3a $1$ \u4e2a\u6c34\u679c\u4ecd\u7136\u5b58\u5728\uff0c\u56e0\u6b64\u9700\u8981\u8f93\u51fa\u7684\u662f\u5f53\u524d\u7f16\u53f7\u7b2c $1+1$ \u5c0f\u7684\u5143\u7d20\uff0c\u5373\u4e3a $3$\u3002\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nstruct Q\r\n{\r\n\tint len,v;\r\n\tQ(int a,int b):len(a),v(b){}\r\n};\r\nint main()\r\n{\r\n\tios::sync_with_stdio(0);cin.tie(0);\r\n\tint n,i,x;\r\n\ttree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> s;\r\n\tcin>>n;\r\n\tfor (i=1;i<=n;i++) s.insert(i);\r\n\tvector<Q> a;\r\n\tfor (i=1;i<=n;i++)\r\n\t{\r\n\t\tcin>>x;\r\n\t\tif (!a.size()||a.back().v!=x) a.emplace_back(1,x); else ++a.back().len;\r\n\t}\r\n\twhile (a.size())\r\n\t{\r\n\t\tvector<Q> b;\r\n\t\tint t=0;\r\n\t\tfor (auto &[x,y]:a)\r\n\t\t{\r\n\t\t\tint ans=*s.find_by_order(t);\r\n\t\t\tcout<<ans<<' ';\r\n\t\t\ts.erase(ans);\r\n\t\t\tif (--x)\r\n\t\t\t{\r\n\t\t\t\tif (!b.size()||b.back().v!=y) b.emplace_back(x,y); else b.back().len+=x;\r\n\t\t\t}\r\n\t\t\tt+=x;\r\n\t\t}\r\n\t\tcout<<'\\n';\r\n\t\ta=b;\r\n\t}\r\n}\r\n```",
        "postTime": 1634981331,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P7912 \u3010[CSP-J 2021] \u5c0f\u718a\u7684\u679c\u7bee\u3011"
    },
    {
        "content": "\u5927\u5bb6\u90fd\u7528\u4e86\u961f\u5217\uff0c\u5c31\u6211\u8fd9\u4e2a\u849f\u84bb\u7528\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u5e76\u67e5\u96c6\u7684\u65b9\u6cd5\u3002\n\n#### \u89e3\u9898\u601d\u8def\n\n\u5f00\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\uff0c\u53e6\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e00\u4e2a\u7684\u5f00\u5934\u3002\n\n\u6bcf\u5220\u9664\u4e00\u4e2a\u6570\u7684\u65f6\u5019\u5c31\u5c06\u8fd9\u4e2a\u6570\u548c\u8fd9\u4e2a\u6570\u51cf\u4e00\u76f8\u8fde\uff0c\u5f62\u6210\u4e00\u4e9b\u6811\u3002\n\n\u663e\u7136\u4e00\u68f5\u6811\u4e0a\u7684\u6570\u4e00\u5b9a\u662f\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6240\u6709\u6570\n\n\u6bcf\u6b21\u8fde\u8fb9\u7684\u65f6\u5019\u90fd\u8ba9\u5927\u7684\u6570\u4f5c\u4e3a\u7236\u8282\u70b9\uff0c\u8fd9\u6837\u4e00\u68f5\u6811\u7684\u6839\u4e00\u5b9a\u662f\u8fd9\u68f5\u6811\u4e0a\u6700\u5927\u7684\u6570\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u6570\u4e4b\u540e\u4e0b\u4e00\u4e2a\u6ca1\u6709\u88ab\u5220\u7684\u6570\u662f\u4ec0\u4e48\u3002\n\n\u53ef\u7528\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u65b9\u6cd5\u964d\u4f4e\u590d\u6742\u5ea6\u3002\n\n#### \u4ee3\u7801\n\n``` c++\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[200005],b[200005],t[200005],hd[200005],hd2[200005],nxt[200005],fa[200005],sum,cnt,c,ttt;\nint find(int i) {\n\tif(fa[i]!=i) return fa[i]=find(fa[i]);\n\treturn i;\n}\nvoid merge(int x,int y) {\n\tx=find(x),y=find(y);\n\tif(x>y) swap(x,y);\n\tfa[x]=y;\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&a[i]),fa[i]=i;\n\t++cnt;\n\tb[1]=1,hd[1]=1;\n\tfor(int i=2;i<=n;++i) {\n\t\tif(a[i]!=a[i-1]) ++cnt,hd[cnt]=i;\n\t\t++b[cnt];\n\t}\n\twhile(sum<n) {\n\t\tfor(int i=1;i<cnt;++i) printf(\"%d \",hd[i]),merge(hd[i]-1,hd[i]);\n\t\tprintf(\"%d\\n\",hd[cnt]);\n\t\tmerge(hd[cnt]-1,hd[cnt]);\n\t\tsum+=cnt;\n\t\tc=0;\n\t\tttt=0;\n\t\tfor(int i=1;i<=cnt;++i) {\n\t\t\tif(b[i]>1) {\n\t\t\t\tif(b[i-1]>1||c==0||ttt%2==0) ++c,hd2[c]=find(hd[i])+1,t[c]=0;\n\t\t\t\tt[c]+=b[i]-1;\n\t\t\t\tttt=0;\n\t\t\t}\n\t\t\telse ++ttt;\n\t\t}\n\t\tcnt=c;\n\t\tfor(int i=1;i<=cnt;++i) b[i]=t[i],hd[i]=hd2[i];\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1636026322,
        "uid": 369836,
        "name": "\u9cb6\u9c7c\u7684\u5fe0\u5b9e\u7c89",
        "ccfLevel": 7,
        "title": "P7912"
    },
    {
        "content": "## \u7b97\u6cd5\n\n\u6bcf\u4e2a\u5757\u7528\u4e00\u4e2a`vector`\u8bb0\u5f55\u3002\u6bcf\u6b21\u53d6\u5b8c\u4e00\u4e2a\u679c\u7bee\u540e\uff0c\u5982\u679c\u9700\u8981\u5408\u5e76\u5757\uff0c\u5219\u518d\u626b\u4e00\u904d\u6240\u6709`vector`\uff0c\u7136\u540e\u66b4\u529b\u5408\u5e76\u3002\n\n## \u590d\u6742\u5ea6\u5206\u6790\n\n\u8bbe\u6709$k$\u6b21\u53d6\u5b8c\u679c\u7bee\u540e\u9700\u8981\u5408\u5e76\uff0c\u90a3\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u53d6\u679c\u7bee\u7684\u65f6\u95f4\u662f$O(n)$\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6c34\u679c\u6700\u591a\u88ab\u53d6\u5230\u4e00\u6b21\u3002\u5408\u5e76\u5757\u7684\u65f6\u95f4\u662f$O(kn)$\u3002\u4e8e\u662f\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(kn)$\u3002\n\n\u4e0b\u9762\u8bc1\u660e\uff0c$k\u2264O(\\sqrt{n})$\u3002\n* \u5148\u770b\u6700\u540e\u4e00\u6b21\u5408\u5e76\uff0c\u5408\u5e76\u4ee5\u540e\u81f3\u5c11\u6709$1$\u5757\uff0c\u90a3\u4e48\u5408\u5e76\u524d\u81f3\u5c11\u6709$3$\u5757\uff0c\u6240\u4ee5\u8fd9\u6b21\u53d6\u7684\u679c\u7bee\u91cc\u81f3\u5c11\u6709$3$\u4e2a\u6c34\u679c\u3002\n* \u518d\u770b\u5012\u6570\u7b2c\u4e8c\u6b21\u5408\u5e76\uff0c\u5408\u5e76\u540e\u81f3\u5c11\u6709$3$\u5757\uff0c\u90a3\u4e48\u5408\u5e76\u524d\u81f3\u5c11\u6709$5$\u5757\uff0c\u6240\u4ee5\u8fd9\u6b21\u53d6\u7684\u679c\u7bee\u91cc\u81f3\u5c11\u6709$5$\u4e2a\u6c34\u679c\u3002\n* \u518d\u770b\u5012\u6570\u7b2c\u4e09\u6b21\u5408\u5e76\uff0c\u5408\u5e76\u540e\u81f3\u5c11\u6709$5$\u5757\uff0c\u90a3\u4e48\u5408\u5e76\u524d\u81f3\u5c11\u6709$7$\u5757\uff0c\u6240\u4ee5\u8fd9\u6b21\u53d6\u7684\u679c\u7bee\u91cc\u81f3\u5c11\u6709$7$\u4e2a\u6c34\u679c\u3002\n* \u2026\u2026\n\n\u4f9d\u6b21\u7c7b\u63a8\uff0c\u603b\u5171\u81f3\u5c11\u6709$3+5+7+9+...(2k+1)=O(k^2)$\u4e2a\u6c34\u679c\uff0c\u6240\u4ee5$k$\u81f3\u591a\u662f$O(\\sqrt{n})$\uff0c\u8bc1\u6bd5\u3002\n\n\u56e0\u6b64\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6$O(kn)\u2264O(n\\sqrt{n})$\u3002\u800c\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c`010011000111000011110000011111\u2026`\u80fd\u8ba9\u672c\u7b97\u6cd5\u8fbe\u5230$O(n\\sqrt{n})$\u7684\u590d\u6742\u5ea6\u3002",
        "postTime": 1635927994,
        "uid": 484659,
        "name": "zhongchengsh",
        "ccfLevel": 0,
        "title": "7912 [CSP-J 2021] \u5c0f\u718a\u7684\u679c\u7bee O(n*sqrt(n))\u7b97\u6cd5"
    },
    {
        "content": "\u5efa\u7acb\u4e24\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u4e00\u4e2a\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u7684\u94fe\u8868\uff0c\u53e6\u4e00\u4e2a\u662f\u5bf9\u4e8e\u6bcf\u4e00\u5757\u7684\u94fe\u8868\uff0c\u540e\u8005\u987a\u4fbf\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5757\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u5982\u679c\u5728\u521d\u59cb\u6570\u5217\u7684\u65f6\u5019\u8fd9\u4e2a\u6570\u7b49\u4e8e\u4e0a\u4e00\u4e2a\u6570\uff0c\u5c31\u5408\u5e76\u5230\u4e0a\u4e00\u4e2a\u6570\u6240\u5728\u7684\u5757\u3002    \n\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u5148\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5757\uff0c\u5220\u9664\u7b2c\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u5757\u5220\u9664\u4e4b\u540e\u5c31\u6ca1\u4e86\uff0c\u5c31\u5728\u5757\u94fe\u8868\u91cc\u9762\u628a\u8fd9\u4e2a\u5757\u5220\u4e86\uff1b\u5982\u679c\u5220\u9664\u540e\u524d\u540e\u4e24\u4e2a\u6570\u53ef\u4ee5\u5408\u5e76\uff0c\u5c31\u5408\u5e76\u8fd9\u4e24\u4e2a\u5757\u3002 \n   \n\u6bcf\u4e00\u4e2a\u6570\u53ea\u9700\u8981\u679a\u4e3e\u4e24\u6b21\uff0c\u679a\u4e3e\u590d\u6742\u5ea6\u7a33\u5b9a $ O(n) $\u3002\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nstruct lian{//\u6570\u94fe\u8868\uff0c\u540c\u65f6\u7ef4\u62a4\u6570\u503c \n\tint lst,nxt;\n\tint num;\n}a[200005];\nstruct kuai{//\u5757\u94fe\u8868\uff0c\u540c\u65f6\u7ef4\u62a4\u8fd9\u4e2a\u5757\u7684\u5934\u548c\u5c3e \n\tint lst,nxt=0;\n\tint bg,ed;\n}blk[200005];\nint n;\nint sumk,lshead=0;\nvoid delnum(int x){\n\tprintf(\"%d \",blk[x].bg);\n\ta[a[blk[x].bg].lst].nxt=a[blk[x].bg].nxt;\n\ta[a[blk[x].bg].nxt].lst=a[blk[x].bg].lst;\n\tblk[x].bg=a[blk[x].bg].nxt;\n}\nvoid delblock(int i){\n\tblk[blk[i].nxt].lst=blk[i].lst;\n\tblk[blk[i].lst].nxt=blk[i].nxt;\n\tsumk--;\n}\nsigned main(){\n\tfreopen(\"fruit.in\",\"r\",stdin);\n\tfreopen(\"fruit.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\ta[0].num=1919810;\n\tfor(int i=1;i<=n;i++){//\u5efa\u7acb\u94fe\u8868 \n\t\tscanf(\"%d\",&a[i].num);\n\t\ta[i].lst=i-1,a[i].nxt=i+1;\n\t\tif(a[i].num!=a[i-1].num){\n\t\t\tblk[lshead].nxt=i;\n\t\t\tblk[i].lst=lshead;\n\t\t\tblk[i].bg=i;blk[lshead].ed=i-1;\n\t\t\tlshead=i;\n\t\t\tsumk++;\n\t\t}\n\t}\n\tblk[lshead].ed=n;\n\twhile(sumk){\n\t\tfor(int i=blk[0].nxt;i!=0;i=blk[i].nxt){//\u5220\u9664\u5757 \n\t\t\tif(blk[i].bg>blk[i].ed){\n\t\t\t\tdelblock(i);\n\t\t\t}else{//\u5408\u5e76\u5757 \n\t\t\t\tif(a[blk[i].bg].num==a[blk[blk[i].lst].ed].num){\n\t\t\t\t\tblk[blk[i].lst].ed=blk[i].ed;\n\t\t\t\t\tdelblock(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=blk[0].nxt;i!=0;i=blk[i].nxt){//\u5220\u6570 \n\t\t\tdelnum(i);\n\t\t}\n\t\tif(sumk)putchar('\\n');\n\t}\n}\n```\n",
        "postTime": 1635734885,
        "uid": 511303,
        "name": "wangzhiyuan123",
        "ccfLevel": 7,
        "title": "P7912 [CSP-J 2021] \u5c0f\u718a\u7684\u679c\u7bee"
    },
    {
        "content": "\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u4ee5\u4e3a\u662f\u795e\u4ed9\u5206\u5757\u9898/\u6839\u53f7\u5206\u6cbb\uff0c\u6ca1\u60f3\u5230 $\\mathcal{O}(n)$ \u6216\u8005 $\\mathcal{O}(n\\log n)$ \u5c31\u8f7b\u677e\u89e3\u51b3\u4e86\u3002\n\n\u542c\u8bf4 hohodef \u5199\u4e86\u4e2a\u7c7b\u6625\u8282\u5341\u4e8c\u54cd\u7684\u542f\u53d1\u5f0f\u5408\u5e76\u8fd8\u662f\u5565\uff0c\u7136\u540e\u5e38\u6570\u88ab\u6211\u540a\u8d77\u6765\u6253\u4e86\u3002\n\n\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u4ec0\u4e48\u5947\u602a\u7384\u5b66\u590d\u6742\u5ea6\uff0c\u6700\u540e\u53d1\u73b0\u662f $\\mathcal{O}(n\\log n)$\u3002\n\n\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u7a0d\u4f5c\u8c03\u6574\u505a\u5230 $\\mathcal{O}(n)$ \u4f46\u662f\u6bd4\u8f83\u61d2\uff08\n\n## \u505a\u6cd5\n\n\u5927\u6982\u5c31\u662f\u8bf4\uff0c\u627e\u5230\u6bcf\u4e00\u4e2a\u5757\u7684\u5757\u5934\uff0c\u7136\u540e\u548c\u4e00\u4e2a\u865a\u62df\u70b9\u5efa\u7acb\u201c\u7236\u5b50\u5173\u7cfb\u201d\uff0c\u8fd9\u4e9b\u5c31\u662f\u4e0b\u6b21\u8981\u5220\u6389\u7684\u70b9\u3002\u540c\u65f6\u7528\u94fe\u8868\u7ef4\u62a4\u4e00\u4e0b\u5728\u5e8f\u5217\u4e2d\u7684\u524d\u540e\u7ee7\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u70b9\u5220\u7684\u987a\u5e8f\u3002\n\n\u5220\u7684\u8bdd\u5f88\u65b9\u4fbf\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u513f\u5b50\u4e86\uff0c\u90a3\u4e48\u76f4\u63a5\u5220\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u8fd8\u6709\u513f\u5b50\u90a3\u4e48\u628a\u513f\u5b50\u63a5\u5230\u4e0b\u4e00\u6b21\u8981\u5220\u7684\u70b9\u4e0a\u3002\n\n\u7136\u540e\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u4e2d\u90fd\u9700\u8981\u540c\u65f6\u5728\u94fe\u8868\u4e0a\u8fdb\u884c\u4fee\u6539\u3002\n\n\u5f53\u4f60\u628a\u4e00\u4e2a\u5757\u5220\u5b8c\u7684\u65f6\u5019\u5224\u4e00\u4e0b\u524d\u540e\u4e24\u4e2a\u5757\u989c\u8272\u662f\u4e0d\u662f\u4e00\u6837\uff0c\u5982\u679c\u4e00\u6837\u90a3\u4e48\u76f4\u63a5\u628a\u540e\u9762\u90a3\u4e2a\u5757\u5757\u5934\u8fde\u5230\u524d\u9762\u90a3\u4e2a\u5757\u5757\u5c3e\u4e0a\u9762\u53bb\u3002\n\n\u53ea\u9700\u8981\u94fe\u8868\u64cd\u4f5c\uff0c\u901f\u5ea6\u5feb\u7684\u4e00\u6279\uff08\n\n\u6240\u4ee5\u4e3a\u5565\u53ea\u6709 $n=200000$ \u554a\u3002\n\n## \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n#define N 200009\n#define INF 0x3f3f3f3f3f3f3f3f\nusing namespace std;\ntypedef long long ll;\ninline ll read(){\n\tll x=0,f=1;\n\tchar c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0',c=getchar();}\n\treturn x*f;\n}\nll n,a[N],son[N],nxt[N],pre[N],Son[N],cnt,p[N],tot=1;\nvoid init(){\n\tn=read();\n\ta[0]=a[n+1]=-1;\n\tfor(int i=1;i<=n;i++) a[i]=read(),nxt[i]=i+1,pre[i]=i-1;\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]==a[i-1]) son[i-1]=i;\n\t\telse Son[++cnt]=i;\n}\nvoid get(){\n\twhile(tot){\n\t\ttot=0;\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tif(Son[i]==0) continue;\n\t\t\tp[++tot]=Son[i];\n\t\t\tnxt[pre[Son[i]]]=nxt[Son[i]];\n\t\t\tpre[nxt[Son[i]]]=pre[Son[i]];\n\t\t\tif(son[Son[i]]!=0) Son[i]=son[Son[i]];\n\t\t\telse Son[i]=0;\n\t\t}\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t\tif(Son[i]==0) swap(Son[i],Son[cnt]),cnt--;\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tif(Son[i]==0) continue;\n\t\t\tif(a[pre[Son[i]]]==a[Son[i]]) son[pre[Son[i]]]=Son[i],Son[i]=0;\n\t\t}\n\t\tif(tot==0) break;\n\t\tsort(p+1,p+tot+1);\n\t\tfor(int i=1;i<tot;i++) printf(\"%lld \",p[i]);\n\t\tprintf(\"%lld\\n\",p[tot]);\n\t}\n}\nint main(){\n\t//freopen(\"fruit.in\",\"r\",stdin);\n\t//freopen(\"fruit.out\",\"w\",stdout);\n\tinit();\n\tget();\n\treturn 0;\n}\n```\n\n## \u590d\u6742\u5ea6\u5206\u6790\n\n\u590d\u6742\u5ea6\u5206\u6790\u4e00\u4e0b\uff0c\u4ee4 $\\sum\\text{\u5757\u6570}=k$\uff0c\u590d\u6742\u5ea6\u662f $\\mathcal{O}(k\\log k)$\uff08\u6709\u4e00\u4e2a\u6392\u5e8f\uff09\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0 $\\sum\\text{\u5757\u6570}=n$\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n\\log n)$",
        "postTime": 1635001391,
        "uid": 278629,
        "name": "Rubidium_Chloride",
        "ccfLevel": 7,
        "title": "\u611f\u89c9\u53ca\u5176\u597d\u73a9\u7684\u9898\u76ee"
    },
    {
        "content": "## \u5206\u6790\n\n\u8fd9\u9053\u9898\u6211\u4e00\u773c\u770b\u5230\uff1a\u54c7\uff0c\u73c2\u6735\u8389\u6811\u6b38\uff01\n\n\u4e8e\u662f\u6211\u5c31\u4e0d\u4f7f\u7528\u6b63\u89e3\u7684\u65b9\u5f0f\u505a\u4e86\u8fd9\u9053\u9898\u3002\n\n\u4ee3\u7801\u5462\uff0c\u5f88\u50cf\u73c2\u6735\u8389\u6811\u7684\u6a21\u677f\u3002\u4e3b\u8981\u5c31\u662f\u7ef4\u62a4 `set` \u4fdd\u5b58\u6240\u6709\u533a\u95f4\uff0c\u6bcf\u5220\u9664\u4e00\u4e2a\u6570\u5c31\u5224\u65ad\u5de6\u53f3\u533a\u95f4\u53ef\u4e0d\u53ef\u4ee5\u5408\u5e76\u3002\u6ce8\u610f\u8981\u5224\u65ad\u5220\u7a7a\u4e00\u4e2a\u533a\u95f4\u7684\u60c5\u51b5\u3002\n\n## \u4ee3\u7801\n```cpp\n// Author : Luogu Canstant0x5F3759DF\n#include <bits/stdc++.h>\n#define lld long long\nusing namespace std;\n#define frein(x) freopen(x, \"r\", stdin)\n#define freout(x) freopen(x, \"w\", stdout)\nstruct seg {\n\tint l, r;\n};\nbool operator < (const seg & a, const seg & b) {\n\treturn a.r < b.r;\n}\nset<seg> s;\nint n;\nint a[300010];\nbool del[300010];\nvoid remove(set<seg>::iterator & it) {\n\tseg x = *it;\n\tif (!x.l || !x.r) return;\n\ts.erase(it ++);\n\tdel[x.l] = 1;\n\t++ x.l;\n\twhile (del[x.l] && x.l <= x.r) ++ x.l;\n\tif (x.r < x.l) return;\n\tif (it != s.begin()) {\n\t\tset<seg>::iterator jt = it;\n\t\t-- jt;\n\t\tif (a[jt->r] == a[x.l]) {\n\t\t\tseg t = *jt;\n\t\t\ts.erase(jt);\n\t\t\tt.r = x.r;\n\t\t\ts.insert(t);\n\t\t\treturn;\n\t\t}\n\t}\n\ts.insert(x);\n}\nint main() {\n\tfrein(\"fruit.in\");\n\tfreout(\"fruit.out\");\n\tscanf(\"%d\", &n);\n\ta[0] = -1;\n\tseg x;\n\tx.l = x.r = 0;\n\tfor (int i = 1; i <= n; ++ i) {\n\t\tscanf(\"%d\", a + i);\n\t\tif (a[i] == a[i - 1]) x.r  = i;\n\t\telse {\n\t\t\tif (x.l) s.insert(x);\n\t\t\tx.l = x.r = i;\n\t\t}\n\t}\n \ts.insert(x);\n\tset<seg>::iterator it;\n\twhile (s.size()) {\n\t\tfor (it = s.begin(); it != s.end(); ++ it) \n\t\t\tprintf(\"%d \", it->l);\n\t\tputs(\"\");\n\t\tfor (it = s.begin(); it != s.end();)\n\t\t\tremove(it);\n\t}\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n\n```",
        "postTime": 1635002037,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "P7912 [CSP-J 2021] \u5c0f\u718a\u7684\u679c\u7bee\uff08\u6c11\u95f4\u6570\u636e\uff09 \u9898\u89e3"
    },
    {
        "content": "\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u5b58\u5f53\u524d\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u82f9\u679c/\u6854\u5b50\uff0c\u4e8c\u5206\u5728\u5f53\u524d\u70b9\u4e4b\u540e\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4e0e\u5f53\u524d\u70b9\u4e0d\u540c\u7684\u6c34\u679c\u3002\n\n\u82e5\u5728\u5f53\u524d\u70b9\u4e4b\u540e\u6ca1\u6709\u4e0e\u5f53\u524d\u70b9\u4e0d\u540c\u7684\u6c34\u679c\uff0c\u5219\u8fd9\u4e00\u8f6e\u5df2\u88ab\u9009\u5b8c\uff0c\u8f93\u51fa\u6362\u884c\u5e76\u627e\u5230\u6574\u4e2a\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u51fa\u73b0\u7684\u6c34\u679c\uff08\u82f9\u679c\u6216\u6854\u5b50\u90fd\u884c\uff09\u3002\n\n\u590d\u6742\u5ea6\u7a0d\u5927\uff0c\u4f46\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n```cpp\n//People who believe in miracles are as amazing as miracles themselves.\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline ll read(){\n\tll x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn x*f;\n}\n\n#define ls  (x<<1)\n#define rs  (x<<1|1)\n#define mid ((l+r)>>1)\nconst int N=2e5+10;\nint n,tmp,a[N],num[N<<2][2];\ninline void pushup(int x){\n\tnum[x][0]=num[ls][0]+num[rs][0],num[x][1]=num[ls][1]+num[rs][1];\n}\nvoid build(int x,int l,int r){\n\tif(l==r) return num[x][a[l]]=1,void();\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\tpushup(x);\n}\nvoid chg(int x,int l,int r,int p){\n\tif(l==r) return num[x][0]=num[x][1]=0,void();\n\tif(p<=mid) chg(ls,l,mid,p);\n\telse chg(rs,mid+1,r,p);\n\tpushup(x);\n}\nint que(int x,int l,int r,int p,int q,int k){\n\tif(p>q) return 0;\n\tif(l==p&&r==q) return num[x][k];\n\tif(q<=mid) return que(ls,l,mid,p,q,k);\n\tif(p>mid) return que(rs,mid+1,r,p,q,k);\n\treturn que(ls,l,mid,p,mid,k)+que(rs,mid+1,r,mid+1,q,k);\n}\nint erfen(int x,int l,int r,int p,int q,int k){\n\tif(!num[x][k]) return n+1;\n\n\tif(l==r) return l;\n\tif(q<=mid) return erfen(ls,l,mid,p,q,k);\n\tif(p>mid) return erfen(rs,mid+1,r,p,q,k);\n\n\tif(que(1,1,n,p,mid,k)) return erfen(ls,l,mid,p,mid,k);\n\telse return erfen(rs,mid+1,r,mid+1,q,k);\n}\nsigned main(){\n\tn=read();\n\tfor(int i=1;i<=n;++i) a[i]=read();\n\tbuild(1,1,n);\n\tfor(int i=1,now=1;i<=n;++i){\n\t\tprintf(\"%d \",now),chg(1,1,n,now);\n\t\tif(!que(1,1,n,now+1,n,!a[now])){\n\t\t\tnow=min(erfen(1,1,n,1,n,a[now]),erfen(1,1,n,1,n,!a[now]));\n\t\t\tputchar('\\n');\n\t\t}\n\t\telse now=erfen(1,1,n,now+1,n,!a[now]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1636027067,
        "uid": 336653,
        "name": "include_BM",
        "ccfLevel": 0,
        "title": "P7912 [CSP-J 2021] \u5c0f\u718a\u7684\u679c\u7bee"
    },
    {
        "content": "# \u5c0f\u718a\u7684\u679c\u7bee\n\n## \u9898\u9762\n\n\u5c0f\u718a\u7684\u6c34\u679c\u5e97\u91cc\u6446\u653e\u7740\u4e00\u6392 $n$ \u4e2a\u6c34\u679c\u3002\u6bcf\u4e2a\u6c34\u679c\u53ea\u53ef\u80fd\u662f\u82f9\u679c\u6216\u6854\u5b50\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u7528\u6b63\u6574\u6570 $1, 2, \\ldots, n$ \u7f16\u53f7\u3002\u8fde\u7eed\u6392\u5728\u4e00\u8d77\u7684\u540c\u4e00\u79cd\u6c34\u679c\u79f0\u4e3a\u4e00\u4e2a\u201c\u5757\u201d\u3002\u5c0f\u718a\u8981\u628a\u8fd9\u4e00\u6392\u6c34\u679c\u6311\u5230\u82e5\u5e72\u4e2a\u679c\u7bee\u91cc\uff0c\u5177\u4f53\u65b9\u6cd5\u662f\uff1a\u6bcf\u6b21\u90fd\u628a\u6bcf\u4e00\u4e2a\u201c\u5757\u201d\u4e2d\u6700\u5de6\u8fb9\u7684\u6c34\u679c\u540c\u65f6\u6311\u51fa\uff0c\u7ec4\u6210\u4e00\u4e2a\u679c\u7bee\u3002\u91cd\u590d\u8fd9\u4e00\u64cd\u4f5c\uff0c\u76f4\u81f3\u6c34\u679c\u7528\u5b8c\u3002\u6ce8\u610f\uff0c\u6bcf\u6b21\u6311\u5b8c\u4e00\u4e2a\u679c\u7bee\u540e\uff0c\u201c\u5757\u201d\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6bd4\u5982\u4e24\u4e2a\u82f9\u679c\u201c\u5757\u201d\u4e4b\u95f4\u7684\u552f\u4e00\u6854\u5b50\u88ab\u6311\u8d70\u540e\uff0c\u4e24\u4e2a\u82f9-\u679c\u201c\u5757\u201d\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u201c\u5757\u201d\u3002\u8bf7\u5e2e\u5c0f\u718a\u8ba1\u7b97\u6bcf\u4e2a\u679c\u7bee\u91cc\u5305\u542b\u7684\u6c34\u679c\u3002\n\n## \u5206\u6790\n\n\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u961f\u5217\u5c01\u88c5\u4e00\u4e2a\u201c\u5757\u201d\u7684\u72b6\u6001\u3002\n\n\u5148\u5904\u7406\u51fa\u4e00\u5f00\u59cb\u5404\u4e2a\u5757\u7684\u72b6\u6001\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u8f6e\u904d\u5386\u6309\u7167\u9898\u610f**\u6a21\u62df**\uff0c\u53d6\u51fa\u6bcf\u4e2a\u201c\u5757\u201d\u7684\u5de6\u7aef\u70b9\uff0c\u8bb0\u5f55\u4e3a\u7b54\u6848\uff0c\u7136\u540e\u7ef4\u62a4\u6bcf\u4e2a\u201c\u5757\u201d\u7684\u5de6\u7aef\u70b9\u53f3\u79fb\u4e00\u4f4d\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u5982\u4f55**\u7ef4\u62a4**\u8fd9\u4e9b\u201c\u5757\u201d\u3002\n\n\u9996\u5148\uff0c\u4e00\u4e2a\u5757\u51fa\u961f\u7684\u60c5\u51b5\u6bd4\u8f83\u663e\u7136\uff0c\u5982\u679c\u8fd9\u4e2a\u201c\u5757\u201d\u7684\u5de6\u7aef\u70b9\u5df2\u7ecf\u5927\u4e8e\u53f3\u7aef\u70b9\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5757\u4e2d\u7684\u503c\u5df2\u7ecf\u88ab\u6211\u53d6\u5b8c\u4e86\uff0c\u6211\u4eec\u4e0d\u518d\u5165\u961f\u3002\n\n\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u88ab\u4e00\u4e2a $1$ \u201c\u5757\u201d\u5206\u5f00\u7684\u4e24\u4e2a $0$ \u201c\u5757\u201d\u6709\u53ef\u80fd\u62fc\u5408\u6210\u4e00\u4e2a\u201c\u5757\u201d\u7684\u60c5\u51b5\u3002\u5176\u5b9e\uff0c\u6211\u4eec\u6ca1\u5fc5\u8981\u5728\u961f\u5217\u91cc\u9762\u5c06\u5176\u5408\u5e76\uff0c\u8bb0\u5f55\u524d\u4e00\u4e2a\u201c\u5757\u201d\u7684\u503c\uff0c\u5982\u679c\u5f53\u524d\u5757\u548c\u524d\u4e00\u4e2a\u5757\u7684\u503c\u76f8\u540c\uff0c\u8bf4\u660e\u4ed6\u4eec\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5757\uff0c\u8df3\u8fc7\u5373\u53ef\u3002\n\n## code\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+10;\ninline int read()\n{\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') { if(ch=='-') w*=-1; ch=getchar(); }\n    while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\nstruct node{ int l,r,opt; };\nint n,t;\nqueue<node> q,temp;\nvector<int> ans[N];\nbool vis[N];\nint main()\n{\n    n=read();\n    int l=-1,r=-1,last=-1;\n    for(register int i=1;i<=n;i++){\n        int x=read();\n        if(x!=last){\n            if(last!=-1) q.push((node){l,r,last});\n            l=i,r=i;\n        }\n        else r++;\n        last=x;\n    }\n    q.push((node){l,r,last});\n    while(!q.empty()){\n        t++;\n        int last=-1;\n        int l,r; \n        while(!q.empty()){\n            node now=q.front(); q.pop();\n            if(now.opt!=last){\n            \tif(last!=-1&&l<=r) temp.push((node){l,r,last});\n            //\tcout<<l<<\" \"<<r<<endl;\n            \twhile(vis[now.l]) now.l++;\n            \tvis[now.l]=true;\n\t\t\t\tans[t].push_back(now.l),now.l++;\n\t\t\t\tl=now.l,r=now.r;\n            }\n            else r=now.r;\n            last=now.opt;\n    \t}\n\t\tif(l<=r) temp.push((node){l,r,last});\t\n        while(!temp.empty()){\n            node add=temp.front();\n        //    cout<<add.l<<\" \"<<add.r<<\"\\n\";\n            temp.pop(),q.push(add);\n        }\n    }\n    for(register int i=1;i<=t;i++){\n        for(register int j=0;j<ans[i].size();j++)\n            printf(\"%d \",ans[i][j]);\n        puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1635772841,
        "uid": 258460,
        "name": "Booksnow",
        "ccfLevel": 0,
        "title": "[CSP-J 2021]\u5c0f\u718a\u7684\u679c\u7bee[\u9898\u89e3]"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u8003\u573a\u4e0a\u7684\u5947\u602a\u505a\u6cd5\u3002\n\n\u8003\u8651\u7ef4\u62a4\u6240\u6709\u5757\uff0c\u5728\u5757\u4e4b\u95f4\u7528\u94fe\u8868\u8fde\uff0c\u6bcf\u4e00\u5757\u4e5f\u62c9\u4e2a\u94fe\u8868\u7ef4\u62a4\u5757\u5185\u7684\u5143\u7d20\u3002\n\n\u6bcf\u6b21\u5982\u679c\u6709\u4e00\u5757\u6ca1\u4e86\u5c31\u66b4\u529b\u5408\u5e76\uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u6211\u7b97\u4e0d\u6765\uff0c\u5927\u6982\u8fc7\u4e0d\u53bb\u3002\n\n\u8003\u8651\u4f18\u5316\u6210\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u590d\u6742\u5ea6\u5c31\u53d8\u6210\u6700\u591a $O(n\\log n)$\uff0c\u539f\u56e0\u662f\u6bcf\u4e2a\u5143\u7d20\u81f3\u591a\u88ab\u5408\u5e76 $\\log n$ \u6b21\uff0c\u7136\u540e\u5c31\u8fc7\u53bb\u4e86\u3002\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,l,r) for(int i=(l);i<=(r);++i)\n#define Rep(i,l,r) for(int i=(l);i>=(r);--i)\nusing namespace std;\ntypedef deque<int> vec;\nconst int N=200005;\nint n,a[N],cnt,nxt[N],pre[N];\nvec block[N];\nvoid merge(int x,int y){\n\tif(block[x].size()<block[y].size()){\n\t\twhile(!block[x].empty())block[y].push_front(block[x].back()),block[x].pop_back();\n\t\tpre[y]=pre[x];nxt[pre[x]]=y;\n\t}else{\n\t\tfor(int t:block[y])block[x].push_back(t);\n\t\tnxt[x]=nxt[y];pre[nxt[y]]=x;\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\trep(i,1,n)scanf(\"%d\",&a[i]);\n\trep(i,1,n){\n\t\tint t=a[i];cnt++;\n\t\twhile(i<=n&&a[i]==t)block[cnt].push_back(i),i++;\n\t\ti--;\n\t}\n\trep(i,1,cnt)pre[i]=i-1,nxt[i-1]=i;\n\tnxt[cnt]=0,pre[0]=cnt;\n\twhile(nxt[0]){\n\t\tfor(int i=nxt[0];i;i=nxt[i])printf(\"%d \",block[i].front()),block[i].pop_front();\n\t\tputs(\"\");\n\t\tfor(int i=nxt[0];i;i=nxt[i])if(!block[i].size()){\n\t\t\tbool domerge=0;int x=pre[i];\n\t\t\twhile(i&&!block[i].size())domerge=1-domerge,i=nxt[i];\n\t\t\tif(!x){nxt[0]=i;pre[i]=0;continue;}\n\t\t\tif(!i){nxt[x]=0;pre[0]=x;continue;}\n\t\t\tif(!domerge)nxt[x]=i,pre[i]=x;\n\t\t\telse merge(x,i);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1634991833,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u5c0f\u718a\u7684\u679c\u7bee"
    },
    {
        "content": "**upd\uff1a\u52a0\u5165 AC \u4ee3\u7801\u53ca\u5176\u5fc5\u8981\u6ce8\u91ca\u3002**\n\n\u8003\u8651\u6bcf\u4e2a\u76f8\u540c\u7684\u201c\u5757\u201d\uff0c\u6bcf\u6b21\u901a\u8fc7\u4e00\u4e2a\u94fe\u8868\u628a\u4e0d\u540c\u989c\u8272\u7684\u5757\u94fe\u63a5\u8d77\u6765\u3002\n\n\u6bcf\u6b21\u5e73\u63a8\u7684\u65f6\u5019\u66b4\u529b\u524a\u53bb\u6240\u6709\u201c\u5757\u201d\u7684\u516c\u5171\u90e8\u5206\uff1a\n\n\u5047\u5982\u5e8f\u5217\u662f `0000011110000111111`\uff0c\u90a3\u4e48\n\n$$a=5,4,4,6$$\n\n\u6211\u4eec\u5c31\u524a\u53bb $\\min\\{5,4,4,6\\}=4$ \u4e2a\u90e8\u5206\u3002\n\n\u5bb9\u6613\u89c2\u5bdf\u5230\u8fd9\u6837\u505a\u7684\u4e0a\u754c\u4e0d\u9ad8\u3002\n\n\u8003\u8651\u4e24\u79cd\u6781\u7aef\u7684\u60c5\u51b5\uff1a\n\n$$a=1,1,1,1,1,1,1,\\dots$$\n\n\u8fd9\u6837\u4e00\u6b21\u5e73\u63a8\u4e4b\u540e\u5c31\u53ef\u4ee5\u524a\u6389\u5f88\u591a\u3002\n\n$$a=n/k,n/k,\\dots$$\n\n$k$ \u5f88\u5c0f\u3002\n\n\u8fd9\u6837\u4e00\u6b21\u5e73\u63a8\u4e4b\u540e\u81f3\u5c11\u6709\u4e00\u4e2a\u201c\u5757\u201d\u88ab\u5e73\u63a8\u5e72\u51c0\uff0c\u6548\u7387\u4e5f\u5f88\u9ad8\u3002\n\n\u4e00\u79cd\u663e\u800c\u610f\u89c1\u7684\u8ba9\u590d\u6742\u5ea6\u4e0a\u53bb\u7684\u6784\u9020\u662f\uff1a\n\n$$a=1,2,\\dots,\\sqrt{n}$$\n\n\u8fd9\u6837\u672c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u8bc1\u660e\u51fa\u662f $O(n\\sqrt{n})$\uff0c\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n---\n\n\u5b98\u65b9\u6570\u636e\u51fa\u6765\u4e4b\u540e\u66f4\u65b0\u4e00\u6ce2 AC \u4ee3\u7801\u3002\n\n**\u4e00\u4e2a\u4e0d\u9519\u7684\u5efa\u8bae\u662f\uff0c\u770b\u4e0a\u9762\u7684\u9898\u89e3\u81ea\u884c\u5b9e\u73b0\uff0c\u6709\u7ec6\u8282\u4e0d\u77e5\u9053\u5982\u4f55\u5b9e\u73b0\u7684\u518d\u9605\u8bfb\u4e0b\u9762\u7684\u4ee3\u7801\u3002**\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636e\u4e00\u4e9b\u57fa\u672c\u7684\u5e38\u8bc6\uff0c$2\\times10^5\\times\\log_2(2\\times10^5)$ \u7ea6\u4e3a $3.5\\times10^6$\u3002\n\n\u771f\u5b9e\u6570\u636e\u4e2d\u597d\u50cf\u6ca1\u6709\u7279\u522b\u6784\u9020\u8fd9\u79cd\u6570\u636e\uff0c**\u56e0\u4e3a\u6700\u6162\u7684\u70b9\u5927\u7ea6 10ms \u5c31\u8fc7\u4e86**\u3002\uff08\u5728\u6d1b\u8c37\u4e0a 10ms \u53ef\u4ee5\u89c6\u4f5c\u8bc4\u6d4b\u673a\u6ce2\u52a8\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\nint init(){\n\tchar c = getchar();\n\tint x = 0, f = 1;\n\tfor (; c < '0' || c > '9'; c = getchar())\n\t\tif (c == '-') f = -1;\n\tfor (; c >= '0' && c <= '9'; c = getchar())\n\t\tx = (x << 1) + (x << 3) + (c ^ 48);\n\treturn x * f;\n}\nvoid print(int x){\n\tif (x < 0) x = -x, putchar('-');\n\tif (x > 9) print(x / 10);\n\tputchar(x % 10 + '0');\n}\nconst int N = (int) 2e5 + 5;\nint n, a[N], pos[N]; // pos[i] : \u76ee\u524d\u5f85\u5728\u4f4d\u7f6e i \u4e0a\u7684\u6c34\u679c\u662f pos[i]\nstruct Node{ int st, ed; } s[N]; // \u8bb0\u5f55\u6bcf\u4e2a\u8fde\u540c\u5757\u7684\u76f8\u5173\u4fe1\u606f\uff08\u8d77\u70b9\uff0c\u7ec8\u70b9\uff09\nint mn(int x, int y){ return x < y ? x : y; }\nbool vis[N];\nint main(){\n\tn = init();\n\tfor (int i = 1; i <= n; ++i)\n        pos[i] = i, a[i] = init();\n    int pre = 1, m = 0; a[n + 1] = !a[n];\n\tfor (int i = 2; i <= n + 1; ++i)\n        if (a[i] != a[i - 1]) s[++m] = (Node) {pre, i - 1}, pre = i;\n    int cnt = 0, nn = n;\n    while (cnt < nn) { // \u590d\u6742\u5ea6\u7684\u4fdd\u8bc1\uff1a\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u5faa\u73af\u7684\u603b\u6b21\u6570\u4e0d\u8d85\u8fc7 sqrt(n) \u6b21\n    \tmemset(vis, 0, sizeof(vis));\n    \tint min = N;\n    \tfor (int i = 1; i <= m; ++i) min = mn(min, s[i].ed - s[i].st + 1);\n    \tfor (int k = 0; k < min; ++k, putchar('\\n'))\n    \t\tfor (int i = 1; i <= m; ++i)\n    \t\t\tprint(pos[s[i].st + k]), putchar(' '), vis[s[i].st + k] = 1, ++cnt;\n    \tint len = 0;\n    \tfor (int i = 1; i <= n; ++i) if (!vis[i]) a[++len] = a[i], pos[len] = pos[i];\n    \tn = len, pre = 1, m = 0; a[n + 1] = !a[n];\n    \tfor (int i = 2; i <= n + 1; ++i)\n            if (a[i] != a[i - 1]) s[++m] = (Node) {pre, i - 1}, pre = i;\n    }\n}\n```",
        "postTime": 1635732854,
        "uid": 50606,
        "name": "\u8a00\u7422\u10d3",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011P7912 [CSP-J 2021] \u5c0f\u718a\u7684\u679c\u7bee"
    },
    {
        "content": "\u9898\u5916\u8bdd\uff1a\u4eca\u5e74\u9898\u662f\u4e0d\u662f\u6709\u70b9\u7b80\u5355\u554a\u3002\u3002\u3002\n\n\u8fd9\u9898\u4f5c\u4e3a T4 \u611f\u89c9\u771f\u7684\u6709\u70b9\u7b80\u5355\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u94fe\u8868\u628a\u4e00\u4e2a\u4e2a\u5757\u8fde\u8d77\u6765\uff0c\u6bcf\u4e2a\u5757\u5185\u518d\u7528\u4e00\u4e2a\u94fe\u8868\u7ef4\u62a4\u5757\u5185\u6709\u54ea\u4e9b\u4f4d\u7f6e\u7684\uff0c\u7136\u540e\u6309\u7167\u9898\u76ee\u6a21\u62df\u5c31\u884c\u4e86\uff0c\u7531\u4e8e\u6bcf\u4e2a\u6c34\u679c\u6700\u591a\u88ab\u5220\u9664\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u662f\u8fd9\u6837\u7684\uff1a\n1. \u904d\u5386\u6bcf\u4e2a\u5757\uff0c\u5220\u6389\u7b2c\u4e00\u4e2a\u6c34\u679c\uff0c\u7136\u540e\u5224\u65ad\u5220\u6389\u540e\u662f\u5426\u8fd8\u6709\u6c34\u679c\uff0c\u5982\u679c\u8fd8\u6709\u8df3\u8fc7\u7b2c $2$ \u6b65\n1. \u628a\u5b83\u524d\u9762\u8fd8\u6ca1\u5220\u6389\u7684\u90a3\u4e2a\u5757\u548c\u5b83\u540e\u9762\u7684\u90a3\u4e2a\u5757\u8fde\u5728\u4e00\u8d77\uff0c\u4f46\u5728\u8fde\u4e0a\u4e4b\u524d\u540e\u9762\u90a3\u4e2a\u5757\u4e5f\u8981\u628a\u7b2c\u4e00\u4e2a\u6c34\u679c\u5220\u6389\uff08\u56e0\u4e3a\u9898\u76ee\u8bf4\u662f**\u540c\u65f6**\u5220\u6389\uff09\uff0c\u518d\u628a\u81ea\u5df1\u5220\u6389\u3002\n1. \u5982\u679c\u8fd8\u6709\u5757\u7684\u8bdd\uff0c\u56de\u5230\u7b2c $1$ \u6b65\n\n\u8003\u573a\u4ee3\u7801\uff1a\n```cpp\n#include<stdio.h>\n#include<ctype.h>\nFILE *in=fopen(\"fruit.in\",\"r\"),*out=fopen(\"fruit.out\",\"w\");\nnamespace fasti{\n\tchar buf[1<<15],*p1=buf,*p2=buf;\n\t#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<15,in),p1==p2)?EOF:*p1++)\n\tinline void read(int&x){\n\t\tchar c=getc();\n\t\tfor(;!isdigit(c);c=getc());\n\t\tfor(x=0;isdigit(c);c=getc())x=(x<<1)+(x<<3)+(c^48);\n\t}\n}\nusing fasti::read;\nint nxt[200010];\nstruct{\n\tint nxt,b,e;\n}list[200010];\nint a[200001],n;\nint main(){\n\tread(n);\n\tfor(int i=1;i<=n;++i)read(a[i]);\n\tint head=0,tail=0;\n\tfor(int i=1,j;i<=n;i=j){\n\t\tlist[tail].b=list[tail].e=i;\n\t\tfor(j=i+1;j<=n&&a[i]==a[j];++j)\n\t\t\tlist[tail].e=nxt[j-1]=j;\n\t\tlist[tail].nxt=tail+1,++tail;\n\t}\n\tfor(;head!=tail;){\n\t\tint last=-1;\n\t\tfor(int i=head;i!=tail;i=list[i].nxt){\n\t\t\tfprintf(out,\"%d \",list[i].b),list[i].b=nxt[list[i].b];\n\t\t\tif(!list[i].b){\n\t\t\t\tif((~last)&&list[i].nxt!=tail){\n\t\t\t\t\tfprintf(out,\"%d \",list[i=list[i].nxt].b),list[i].b=nxt[list[i].b];\n\t\t\t\t\tif(list[i].b)nxt[list[last].e]=list[i].b,list[last].e=list[i].e;\n\t\t\t\t\tlist[last].nxt=list[i].nxt;\n\t\t\t\t}\n\t\t\t\telse if(~last)list[last].nxt=tail;\n\t\t\t\telse head=list[i].nxt;\n\t\t\t}else last=i;\n\t\t}\n\t\tfputc('\\n',out);\n\t}\n\tfclose(in);\n\tfclose(out);\n\treturn 0;\n}\n```",
        "postTime": 1634993286,
        "uid": 203008,
        "name": "toaru",
        "ccfLevel": 5,
        "title": "CSP2021-J T4"
    },
    {
        "content": "## \u4e00\u4e2a\u4e0e\u4f17\u4e0d\u540c\u7684\u505a\u6cd5\n\n\u611f\u8c22\u6d1b\u8c37\u4e0a\u7684 dalao \u4eec\uff0c\u5e2e\u6211\u627e\u5230\u8fd9\u9898\u8003\u573a\u4e0a\u7684\u95ee\u9898\u3002\n\n### \u601d\u8def\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u5e8f\u5217\u3002\u6211\u4eec\u628a\u88ab\u5220\u9664\u7684\u7528 $2$ \u6765\u8868\u793a\uff0c\u8fd9\u4e2a\u5e8f\u5217\u5c31\u662f $[0,1,2]$ \u5e8f\u5217\u3002\n\n\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4 $0$ \u7684\u6570\u91cf\u3001$1$ \u7684\u6570\u91cf\u3001$2$ \u7684\u6570\u91cf\uff0c\u7136\u540e\u6309\u9898\u610f\u6a21\u62df\u65f6\uff0c\u80fd\u7ebf\u6bb5\u6811+\u4e8c\u5206\u67e5\u627e\u4e0b\u4e00\u4e2a\u3002\n\n\u5728\u6bcf\u6b21\u53d6\u6c34\u679c\u65f6\uff0c\u4f1a\u6709\u4e00\u4e2a\u67e5\u627e\u7b2c\u4e00\u4e2a\u975e $2$ \u5143\u7d20\u7684\u64cd\u4f5c\u3002\u8003\u573a\u8bef\u5199\u6210\u4e86 $O(n)$\uff0c\u53ef\u8c13\u662f\u5927\u610f\u5931\u8346\u5dde\u3002\u7528 $O(log^2)$ \u7684\u8bdd\u5e38\u6570\u8fc7\u5927\uff0c\u4e5f\u4f1a\u6b7b\u6389\u3002\u5229\u7528\u8fd9\u4e00\u5143\u7d20\u4f4d\u7f6e\u7684\u5355\u8c03\u6027\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u5b50\u95ee\u9898\u7684\u603b\u590d\u6742\u5ea6\u65f6 $O(n)$ \u7684\u3002\n\n### \u4ee3\u7801\n\n\u5f88\u4e11\u2026\u2026\n\n\u8003\u573a\u4ee3\u7801\u6539\u7f16\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int maxn=2e5+10;\nint n,a[maxn],ls[maxn<<2],rs[maxn<<2],v0[maxn<<2],v1[maxn<<2],v2[maxn<<2];\nstruct Node{\n\tint n0,n1,n2;\n};\ninline int read(){\n\tint x=0; char ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9')\n\t\tx=x*10+ch-'0',ch=getchar();\n\treturn x;\n}\ninline void pushup(int pos){\n\tv0[pos]=v0[pos<<1]+v0[pos<<1|1];\n\tv1[pos]=v1[pos<<1]+v1[pos<<1|1];\n\tv2[pos]=v2[pos<<1]+v2[pos<<1|1];\n}\ninline void build(int l,int r,int pos){\n\tls[pos]=l,rs[pos]=r;\n\tif(l==r){\n\t\tif(a[l]==0) v0[pos]=1;\n\t\telse v1[pos]=1;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(l<=mid) build(l,mid,pos<<1);\n\tif(mid<r)  build(mid+1,r,pos<<1|1);\n\tpushup(pos);\n}\ninline void update(int l,int pos){\n\tif(ls[pos]==rs[pos]){\n\t\tv0[pos]=v1[pos]=0; v2[pos]=1;\n\t\treturn;\n\t}\n\tint mid=ls[pos]+rs[pos]>>1;\n\tif(l<=mid) update(l,pos<<1);\n\telse update(l,pos<<1|1);\n\tpushup(pos);\n}\ninline Node Union(Node A,Node B){\n\tNode C;\n\tC.n0=A.n0+B.n0;\n\tC.n1=A.n1+B.n1;\n\tC.n2=A.n2+B.n2;\n\treturn C;\n}\ninline Node query(int l,int r,int pos){\n\tif(l<=ls[pos]&&rs[pos]<=r) return (Node){v0[pos],v1[pos],v2[pos]};\n\tint mid=ls[pos]+rs[pos]>>1; Node ans=(Node){0,0,0};\n\tif(l<=mid) ans=query(l,r,pos<<1);\n\tif(mid<r){\n\t\tNode tmp=query(l,r,pos<<1|1);\n\t\tans.n0+=tmp.n0,ans.n1+=tmp.n1,ans.n2+=tmp.n2;\n\t}\n\treturn ans;\n}\ninline void Update(int s){\n\ta[s]=2; update(s,1);\n} // \u7ebf\u6bb5\u6811\u677f\u5b50\n\n// \u4e00\u5b9a\u8981\u52a0 inline\uff0c\u5361\u5e38\u6570\nbool all=1;\nint main(){\n \tfreopen(\"fruit.in\",\"r\",stdin);\n \tfreopen(\"fruit.out\",\"w\",stdout);\n\tn=read();\n\tint prvi=1;\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=2;i<=n;i++){\n\t\tif(a[i]!=a[i-1]) all=0;\n\t}\n\tif(all){\n\t\tfor(int i=1;i<=n;i++) printf(\"%d\\n\",i);\n\t\treturn 0;\n\t} // \u7279\u5224\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u9700\u8981\u5361\n    // \u8fd9\u662f\u8003\u573a\u4e0a\u5199\u51fa\u6765\u7684\uff0c\u4e0d\u5199\u7684\u8bdd\u6700\u540e\u4e00\u4e2a\u70b9\u6d1b\u8c37\u6d4b 1.01s\n\tbuild(1,n,1);\n\tint i=1,prvx=1;\n\twhile(1){\n\t\tint too=prvx;\n\t\twhile(too<=n && a[too]==2) too++;\n        // \u5229\u7528\u4f4d\u7f6e\u5355\u8c03\u6027\u627e\n\t\ti=too; prvx=too;\n\t\tif(i==n+1) break;\n\t\tprintf(\"%d \",i);\n\t\twhile(1){\n\t\t\tif(i>n) break;\n\t\t\tint nowcol=a[i];\n\t\t\tint lft=i,rht=n,ans=-1;\n\t\t\twhile(lft<=rht){\n\t\t\t\tint mid=lft+rht>>1;\n\t\t\t\tNode TMP=query(i,mid,1);\n\t\t\t\tif(nowcol==0){\n\t\t\t\t\tif(TMP.n0+TMP.n2==(mid-i+1)){\n\t\t\t\t\t\tans=mid;\n\t\t\t\t\t\tlft=mid+1;\n\t\t\t\t\t}else rht=mid-1;\n\t\t\t\t}else{\n\t\t\t\t\tif(TMP.n1+TMP.n2==(mid-i+1)){\n\t\t\t\t\t\tans=mid;\n\t\t\t\t\t\tlft=mid+1;\n\t\t\t\t\t}else rht=mid-1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ans==-1) break;\n\t\t\tUpdate(i), i=ans+1;\n\t\t\tif(i<=n) printf(\"%d \",i);\n\t\t}\n\t\tputchar('\\n');\n        // \u7ebf\u6bb5\u6811+\u4e8c\u5206\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1636028225,
        "uid": 334727,
        "name": "BreakPlus",
        "ccfLevel": 0,
        "title": "Solution P7912"
    }
]