[
    {
        "content": "\u5148\u4e8c\u5206\u7b54\u6848\u561b\n\n\u7136\u540e\u6211\u5224\u65ad\u8fd9\u4e2a\u7b54\u6848\u561b\n\n\u4e00\u770b\u8303\u56f4\u8fd9\u4e48\u5c0f\u561b\n\n\u90a3\u4e48\u6211\u4eec\u7206\u641ci\u5750\u6807\uff0c\u770b\u5728\u54ea\u91cc\u5206\u5272\uff1b\n\n\u518d\u8d2a\u5fc3\u5f97\u987a\u63a8j\n\n\u5728J\u4e0a\u9762\u5c3d\u53ef\u80fd\u5c11\u7684\u5212\u5206\n\n\u5982\u679ci\u7684\u5212\u5206\u548cj\u7684\u5212\u5206\u7ed3\u679c>m\n\n\u90a3\u5c31\u4e0d\u884c\n\ni\u7684\u641c\u7d22\u4e48\u76f4\u63a5\u5927\u529b\u538b\u4f4d\n\n```cpp\n#include<bits/stdc++.h>\n#define Ll long long\nusing namespace std;\nconst int N=16;\nint a[N][N],b[N][N],c[N][N];\nbool ne[N];\nint n,m,t;\nbool check(int k,int v){\n    int top=1,o;memset(c,0,sizeof c);\n    for(int i=1;i<=n;i++){\n        if(i>1&&((k>>(i-2))&1))top++;\n        for(int j=1;j<=n;j++)c[top][j]+=b[i][j];        \n    }\n    if(top>m+1)return 0;o=m-top+1;\n    for(int l=0,r=1;r<=n;r++)\n        for(int i=1;i<=top;i++)\n            if(c[i][r]-c[i][r-1]>v)return 0;else \n                if(c[i][r]-c[i][l]>v)l=r-1,o--;\n    if(o<0)return 0;return 1;\n}\nint main()\n{\n    int l=0,r=0,mid,ans;bool ok;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)scanf(\"%d\",&a[i][j]),r+=a[i][j];\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)b[i][j]=b[i][j-1]+a[i][j];\n    t=(1<<(n-1));\n    while(r>=l){\n        mid=l+r>>1;ok=0;\n        for(int i=0;i<t;i++)\n            if(check(i,mid)){ok=1;break;}\n        if(ok)ans=mid,r=mid-1;else l=mid+1;\n    }\n    printf(\"%d\",ans);\n}\n\u4f46\u662f\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u66f4\u5feb\u7684\u65b9\u6cd5\uff0c\u53ef\u60dc\u770b\u4e0d\u4e86\u522b\u4eba\u4ee3\u7801\uff0c\u4e0d\u77e5\u9053\u600e\u4e48\u505a\uff0c\u5927\u5bb6\u4e0d\u59a8\u60f3\u4e00\u60f3\n```",
        "postTime": 1508335862,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3075 \u3010[USACO13FEB]\u5206\u533a\u7684\u519c\u573aPartitioning the Farm\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u672c\u9898\uff1a\n\t\n    \t\u6211\u4eec\u8981\u6c42\u7684\u662f\u7528k\u6761\u7ebf\uff0c\u5212\u5206\u6574\u4e2a\u77e9\u5f62\uff0c\u8981\u6c42\u6700\u5c0f\u5316\u6700\u5927\u503c\uff1b\n        \n\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4\uff1a$2<=N<=15$\n\n\u7136\u540e\u5c31\u83ab\u540d\u548c\u72b6\u538b\u60f3\u5230\u4e86\u4e00\u5757\u2026\u2026\n\n\u6211\u4eec\u60f3\uff1a\u4ed6\u662f\u7c7b\u4f3c\u4e8e\u4e00\u79cd\u6211\u62ff\u5200\u5212\u5206\u4e00\u4e2a\u77e9\u5f62\u86cb\u7cd5\u7684\u9898\n\n\u90a3\u6211\u4eec\u5c31\u679a\u4e3e\u6bcf\u4e00\u884c\u5212\u4e86\u51e0\u5200\uff0c\u7528\u4e8c\u8fdb\u5236\uff08\u72b6\u538b\u601d\u60f3\uff09\u4ee3\u8868\uff1b\n\n\u5bf9\u4e8e\u7b54\u6848\uff0c\u6211\u4eec\u4e0d\u786e\u5b9a\uff0c\uff0c\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540echeck\uff1b\n\ncode\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint a[17][17],b[17][17],c[17][17];\nbool ne[17];\nint n,m,t;\ninline bool check(int k,int v)\n{\n    int top=1,o;\n\tmemset(c,0,sizeof(c));\n    for(register int i=1;i<=n;i++)\n    {\n        if(i>1&&((k>>(i-2))&1))top++;\n        for(register int j=1;j<=n;j++)c[top][j]+=b[i][j];        \n    }\n    if(top>m+1)\n        return 0;\n    o=m-top+1;\n    for(register int l=0,r=1;r<=n;r++)\n    {\n        for(register int i=1;i<=top;i++)\n        {\n            if(c[i][r]-c[i][r-1]>v)\n                return 0;\n            else\n            {\n                if(c[i][r]-c[i][l]>v)\n                    l=r-1,o--;\n            }\n        }\n    }\n    if(o<0)return 0;return 1;\n}\nint main()\n{\n    int l=0,r=0,mid,ans;bool ok;\n    scanf(\"%d%d\",&n,&m);\n    for(register int i=1;i<=n;i++)\n    {\n        for(register int j=1;j<=n;j++)scanf(\"%d\",&a[i][j]),r+=a[i][j];\n    }\n    for(register int i=1;i<=n;i++)\n    {\n        for(register int j=1;j<=n;j++)b[i][j]=b[i][j-1]+a[i][j];\n    }\n    t=(1<<n)-1;\n    while(r>=l)\n    {\n        mid=(l+r)>>1;\n\t\tok=0;\n        for(register int i=0;i<t;i++)\n        {\n            if(check(i,mid))\n            {\n                ok=1;\n                break;\n            }\n        }\n        if(ok)\n            ans=mid,r=mid-1;\n        else\n            l=mid+1;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1573474829,
        "uid": 211665,
        "name": "ccsc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3075 \u3010[USACO13FEB]\u5206\u533a\u7684\u519c\u573aPartitioning the Farm\u3011"
    },
    {
        "content": "\u679a\u4e3e+\u52a8\u6001\u89c4\u5212\u3002\n\n\u6211\u4eec\u5148\u5bf9\u6c34\u5e73\u76f4\u7ebf\u8fdb\u884c\u679a\u4e3e\uff0c\u6700\u591a\u662f2^(N-1)\u79cd\u5206\u5272\u60c5\u51b5\u3002\u5bf9\u6bcf\u79cd\u5206\u5272\u60c5\u51b5\uff0c\u5728\u6c34\u5e73\u5206\u5272\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u7ad6\u76f4\u65b9\u5411\u4e0a\u7528\u52a8\u6001\u89c4\u5212\u6c42\u533a\u57df\u548c\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u4e2a\u52a8\u6001\u89c4\u5212\u4e0d\u96be\uff0cF[i, j]\u8868\u793a\u524d i \u5217\uff0c\u5207\u5272\u4e86 j \u6b21\uff08\u6700\u540e\u4e00\u6b21\u5207\u5272\u5728\u7b2c i \u5217\u53f3\u4fa7\uff09\uff0c\u90a3\u4e48 F[i, j] = min(max(F[k, j-1], calc\\_max(k+1, i))\uff0c\u5176\u4e2d calc\\_max(s, t) \u5c31\u662f\u6c42\u7b2c s \u5217\u5230\u7b2c t \u5217\u7684\u533a\u57df\u548c\u6700\u5927\u503c\uff08\u6ce8\u610f\u884c\u7684\u5207\u5272\u60c5\u51b5\u5df2\u7ecf\u56fa\u5b9a\u4e86\uff09\u3002\n",
        "postTime": 1509724099,
        "uid": 54522,
        "name": "\u51b7\u6708\u51b0\u77b3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3075 \u3010[USACO13FEB]\u5206\u533a\u7684\u519c\u573aPartitioning the Farm\u3011"
    }
]