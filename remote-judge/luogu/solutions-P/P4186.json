[
    {
        "content": "## $Part 0$\uff1a\u524d\u8a00\n\n\u8fd9\u662f\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6c42\u8d5e & \u6c42\u7ba1\u7406\u5458\u5927\u5927\u901a\u8fc7 $\\text{QAQ}$ \n\n## $Part 1$\uff1a\u8bfb\u9898\n\n\u9898\u76ee\u8981\u6c42\uff1aBessie \u5728\u4e00\u68f5\u6839\u4e3a $K$ \u53f7\u8282\u70b9\u7684\u6811\u6839\u4e0a\uff0c\u8981\u6c42\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\u653e\u7f6e\u519c\u6c11\u5e76\u6700\u5c0f\u5316\u519c\u6c11\u6570\u91cf\uff08\u519c\u6c11\u53ef\u79fb\u52a8\uff09\uff0c\u4f7f\u548c\u519c\u6c11\u901f\u5ea6\u76f8\u540c\u7684 Bessie \u5728\u4e0d\u63a5\u89e6\u5230\u519c\u6c11\u7684\u524d\u63d0\u4e0b\u65e0\u6cd5\u8d70\u5230\u4efb\u610f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u3002~~\u771f\u7b80\u6d01~~\n\n## $Part 2$\uff1a\u521d\u6b65\u7406\u6e05\u601d\u8def\n\n### \u601d\u8def\u4e00\uff1a\u786c\u603c\uff01\n\n\u5c31\u50cf [\u5927\u4f6c @bessie_goes_moo \u7684\u601d\u8def](https://www.luogu.com.cn/blog/125322/solution-p4186) \u90a3\u6837\uff0c\u76f4\u63a5\u6a21\u62df\u9898\u610f\u3002\n\n\u9884\u8ba1\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\text{O}(ans \\times n)$\n\n\u6700\u5927\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\text{O}(n^2)$\n\n~~\u597d\u50cf\u80fd\u88ab\u5361\u6389\uff08\u96fe~~\n\n### \u601d\u8def\u4e8c\uff1a\u6b63\u89e3\n\n\u5c31\u662f\u7ed9**\u6bcf\u4e00\u4e2a**\u53f6\u5b50\u8282\u70b9\u653e\u4e00\u4e2a\u519c\u6c11\uff0c\u8ba9\u4ed6\u4eec\u548c Bessie \u4e00\u8d77\u8d70\uff0c\u770b\u770b Bessie \u80fd**\u9047\u5230**\u51e0\u4e2a\u4eba\u3002\n\n\u8fd9\u91cc\u501f\u7528\u4e00\u4e0b @llzzxx712 \u5927\u4f6c\u7684\u56fe ~~\uff08\u6211\u61d2\u5f97\u753b\uff09~~\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qrvho2yu.png)\n\n\u6211\u4eec\u5148\u7ed9\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u5b89\u6392\u4e00\u4e2a\u519c\u6c11\uff1a\n\n\uff08\u6a59\u70b9\u4e3a\u519c\u6c11\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/m8q6qvau.png)\n\n\u7136\u540e\u8ba9\u519c\u6c11\u4e00\u76f4\u5f80\u4e0a\u8d70\uff0c\u76f4\u5230\u9047\u5230 ~~\u4f1a\u5f71\u5206\u8eab\u7684~~ Bessie\uff0c\u8fd9\u91cc\u5c31\u662f\u4ed6\u4eec\u80fd\u63a7\u5236\u7684\u70b9\uff1a\n\n\uff08\u7ea2\u70b9\u4e3a\u519c\u6c11\u53ef\u63a7\u5236\u7684\u70b9\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dij1ucb7.png)\n\n\u7136\u540e\u5f00\u59cb ```dfs```\uff0c\u8ba9 Bessie \u5f00\u59cb\u8d70\u3002Bessie \u9047\u5230\u4e86\u4e24\u4e2a\u7ea2\u70b9\uff0c\u8bf4\u660e\u53ea\u9700\u8981\u4e24\u4e2a\u519c\u6c11\u5c31\u53ef\u4ee5\u9501\u4f4f Bessie \u4e86\uff08\u5728\u8282\u70b9 $9 \\ (10)$ \u548c\u8282\u70b9 $17$ \uff09\u3002\n\n\u540c\u7406\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b\u6837\u4f8b\u3002\u9274\u4e8e\u7bc7\u5e45\u6709\u9650\uff0c\u6211\u653e\u5728\u4e86 [\u4e91\u526a\u8d34\u677f](https://www.luogu.com.cn/paste/1yllm232) \u91cc\u9762\uff0c\u5927\u5bb6\u53ef\u81ea\u884c\u89c2\u770b\u3002\n\n## $Part 3$\uff1a\u6df1\u5165\u601d\u8003\uff0c\u83b7\u5f97\u4ee3\u7801\u601d\u8def\n\n\u5927\u6982\u601d\u8def\u4e00\u6709\uff0c\u4ee3\u7801\u7684\u601d\u8def\u4e5f\u5c31\u51fa\u6765\u4e86\uff1a\u5728\u6bcf\u4e00\u4e2a\u88ab\u519c\u6c11\u63a7\u5236\u7684\u70b9\u505a\u4e00\u4e2a\u6807\u8bb0\uff0c\u518d\u904d\u5386\u6574\u68f5\u6811\uff0c\u9047\u5230\u6807\u8bb0\u5c31 $\\text{ans}$ \u52a0\u4e00\u3002\u6700\u540e\u8f93\u51fa $\\text{ans}$ \u5373\u53ef\u3002\n\n## $Part 4$\uff1a\u4ee3\u7801\n\n\u8fd9\u91cc\u6211\u63d0\u4f9b $3$ \u79cd\u4e0d\u540c\u7684\u6807\u8bb0\u5b9e\u73b0\u65b9\u5f0f\uff1a\n\n1. \u5728\u7b2c\u4e00\u904d\u904d\u5386\u7684\u65f6\u5019\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u7ed3\u70b9\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u518d\u5355\u72ec\u4ece\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u5411\u4e0a\u53cd\uff0c\u505a\u6807\u8bb0\u3002\n\n\n2. \u5728\u7b2c\u4e00\u904d\u904d\u5386\u7684\u65f6\u5019\u7528\u4e00\u4e2a\u6808\u8bb0\u5f55\u8def\u5f84\uff0c\u6bcf\u6b21\u627e\u5230\u53f6\u5b50\u8282\u70b9\u5c31\u5728 $($\u6808\u9876\u7684\u4f4d\u7f6e $\\times \\ \\dfrac{1}{2}$ $)$ \u5904\u7684\u8282\u70b9\u505a\u6807\u8bb0\u3002\n\n\n3. \u5728\u7b2c\u4e00\u904d\u904d\u5386\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e2a $\\text{down}$ \u6570\u7ec4\u8868\u793a\u79bb\u8fd9\u91cc\u6700\u8fd1\u7684\u53f6\u5b50\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u5728\u7b2c\u4e8c\u904d\u904d\u5386\u7684\u65f6\u5019\uff0c\u5982\u679c\u5f53\u524d\u7684\u6df1\u5ea6 $\\ge$ \u5f53\u524d\u8282\u70b9\u7684 $\\text{down}$ \u503c\uff0c\u5c31\u7b97\u9047\u5230\u4e86\u6807\u8bb0\u3002\n\n\n------------\n\n\u65b9\u5f0f $1$ \u7684\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, k, a, b, l, fa[100001], dep[100001] = {-1}, ans;\nbool leaf[100001], flag[100001];\nvector<int> tree[100001];\n\nvoid dfs1 (int i, int fr)\n{\n\tleaf[i] = 1;\n\tfa[i] = fr;\n\tdep[i] = dep[fr] + 1;\n\tfor (int k = 0; k < tree[i].size(); k++)\n\t{\n\t\tint now = tree[i][k];\n\t\tif (now != fr)\n\t\t{\n\t\t\tleaf[i] = 0;\n\t\t\tdfs1 (now, i);\n\t\t}\n\t}\n}\n\nvoid dfs2 (int i, int fr)\n{\n\tif (flag[i])\n\t{\n\t\tans++;\n\t\treturn;\n\t}\n\tfor (int k = 0; k < tree[i].size(); k++)\n\t{\n\t\tint now = tree[i][k];\n\t\tif (now != fr)\n\t\t\tdfs2 (now, i);\n\t}\n}\n\n\nint main()\n{\n\tcin >> n >> k;\n\tfa[k] = 0;\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tcin >> a >> b;\n\t\ttree[a].push_back (b);\n\t\ttree[b].push_back (a);\n\t}\n\tdfs1 (k, 0);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (leaf[i])\n\t\t{\n\t\t\tint dis = i;\n\t\t\tfor (int j = 1; j <= dep[i] / 2; j++)\n\t\t\t\tdis = fa[dis];\n\t\t\tflag[dis] = 1;\n\t\t}\n\t}\n\tdfs2 (k, 0);\n\tcout << ans;\n\treturn 0;\n}\n```\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/54107030)\n\n\n------------\n\n\u65b9\u5f0f $2$ \u7684\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, k, a, b, l, st[100001], top, fa[100001], dep[100001] = {-1}, ans;\nbool leaf[100001], flag[100001];\nvector<int> tree[100001];\n\nvoid dfs1 (int i, int fr)\n{\n\tst[++top] = i;\n\tif (tree[i].size() == 1)\n\t{\n\t\tflag[st[top / 2 + 1]] = 1;\n\t\ttop--;\n\t\treturn;\n\t}\n\tfor (int k = 0; k < tree[i].size(); k++)\n\t{\n\t\tint now = tree[i][k];\n\t\tif (now != fr)\n\t\t\tdfs1 (now, i);\n\t}\n\ttop--;\n}\n\nvoid dfs2 (int i, int fr)\n{\n\tif (flag[i])\n\t{\n\t\tans++;\n\t\treturn;\n\t}\n\tfor (int k = 0; k < tree[i].size(); k++)\n\t{\n\t\tint now = tree[i][k];\n\t\tif (now != fr)\n\t\t\tdfs2 (now, i);\n\t}\n}\n\n\nint main()\n{\n\tcin >> n >> k;\n\tfa[k] = 0;\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tcin >> a >> b;\n\t\ttree[a].push_back (b);\n\t\ttree[b].push_back (a);\n\t}\n\tdfs1 (k, 0);\n\tdfs2 (k, 0);\n\tcout << ans;\n\treturn 0;\n}\n```\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/58808893)\n\n\n------------\n\n\u65b9\u6848 $3$ \u7684\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n, k, a, b, down[100001], ans;\nvector<int> tree[100001];\n\nvoid dfs1 (int i, int fr)\n{\n\tdown[i] = 0x7fffffff;\n\tif (tree[i].size() == 1)\n\t\tdown[i] = 0;\n\t\n\tfor (int k = 0; k < tree[i].size(); k++)\n\t{\n\t\tint now = tree[i][k];\n\t\tif (now != fr)\n\t\t{\n\t\t\tdfs1 (now, i);\n\t\t\tdown[i] = min (down[now] + 1, down[i]);\n\t\t}\n\t}\n}\n\nvoid dfs2 (int i, int fr, int deep)\n{\n\tif (deep >= down[i])\n\t{\n\t\tans++;\n\t\treturn;\n\t}\n\tfor (int k = 0; k < tree[i].size(); k++)\n\t{\n\t\tint now = tree[i][k];\n\t\tif (now != fr)\n\t\t\tdfs2 (now, i, deep + 1);\n\t}\n}\n\n\nint main()\n{\n\tcin >> n >> k;\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tcin >> a >> b;\n\t\ttree[a].push_back (b);\n\t\ttree[b].push_back (a);\n\t}\n\tdfs1 (k, 0);\n\tdfs2 (k, 0, 0);\n\tcout << ans;\n\treturn 0;\n}\n```\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/54256878)\n\n\n------------\n\n**\u5b8c\u7ed3\u6492\u82b1~~~**",
        "postTime": 1630031498,
        "uid": 365751,
        "name": "Mr_\u7f57",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4186 [USACO18JAN]Cow at Large G"
    },
    {
        "content": "# P1486\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4186)\n\n## \u9898\u76ee\u5206\u6790\n\u5148\u6765\u770b\u6837\u4f8b\n![](https://cdn.luogu.com.cn/upload/image_hosting/fvc2x3yg.png)\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u9700\u8981\u57282\u30016\u30017\u4e09\u4e2a\u8282\u70b9\u4e0a\u653e\u6751\u6c11\u624d\u53ef\u4ee5\u5835\u4f4fBessie\u3002\n\n**\u90a3\u4e48\u53d8\u4e00\u4e0b\u5462\uff1f**\n\n\u5982\u679c\u53bb\u6389\u8282\u70b97\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5728\u8282\u70b92\u30015\u4e0a\u653e\u6751\u6c11\u5c31\u53ef\u4ee5\u4e86\u3002\u518d\u770b\uff0c\u9700\u8981\u7684\u6751\u6c11\u6570\u4ece\u4e09\u4e2a\u53d8\u6210\u4e24\u4e2a\u7684\u5173\u952e\u70b9\u5728\u54ea\u91cc\uff1f**\u5bf9\uff0c\u5728\u8282\u70b93\u3002**\uff0c\u53d8\u5316\u540e\u6211\u4eec\u57285\u8282\u70b9\u653e\u6751\u6c11\uff0c\u5c31\u53ef\u4ee5\u5360\u636e\u8fd9\u4e2a\u70b9\uff0c\u5c31\u4e0d\u9700\u8981\u57284\u4e0a\u9762\u653e\u6751\u6c11\u4e86\u3002\u800c\u56e0\u4e3a\u4ed6\u4eec\u7684\u901f\u5ea6\u76f8\u540c\uff0c\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u5360\u636e\u8282\u70b93\u7684\u5173\u952e\u5c31\u662f\u4ee5\u8282\u70b93\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\u53f6\u8282\u70b9\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u9700\u8981\u81ea\u5df1\u6784\u9020\u66f4\u5f3a\u529b\u7684\u6570\u636e\u6765\u9a8c\u8bc1\u6211\u4eec\u7684\u731c\u60f3\u3002\uff08\u6837\u4f8b\u592a\u6c34\u4e86\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qrvho2yu.png)\n\n\u8fd9\u5f20\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u53ea\u8981\u5728\u8282\u70b99\uff08\u621610\uff09\u548c\u8282\u70b917\u653e\u6751\u6c11\u5c31\u53ef\u4ee5\u4e86\u3002\n\n**\u5982\u679c\u53bb\u6389\u8282\u70b917\u5462\uff1f**\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728\u8282\u70b99\u300116\u30016\u653e\u6751\u6c11\u4e86\u3002\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u4ee52\u4e3a\u6839\u7684\u5b50\u6811\u6df1\u5ea6\u6700\u5c0f\u7684\u53f6\u8282\u70b9\u7684\u6df1\u5ea6\u4ece2\u53d8\u6210\u4e863\uff08\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a0\uff09\u3002\n\n### \u90a3\u5982\u4f55\u5206\u6790\u5b50\u6811\u4e2d\u6df1\u5ea6\u6700\u5c0f\u7684\u53f6\u8282\u70b9\u6df1\u5ea6\u591f\u4e0d\u591f\u5c0f\u5462\uff1f\n\n\u6211\u4eec\u770b\u5230\uff0c\u6211\u4eec\u5173\u6ce8\u53f6\u8282\u70b9\u6df1\u5ea6\u662f\u4e3a\u4e86\u770b\u5b83\u80fd\u4e0d\u80fd\u5728Bessie\u4ece\u6839\u8282\u70b9\u5230\u8fbe\u8be5\u5b50\u6811\u7684\u6839\u4e4b\u524d\uff08\u6216\u540c\u65f6\uff09\u5230\u8fbe\u5b50\u6811\u7684\u6839\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u6d45\u53f6\u8282\u70b9\u5230 \u5b50\u6811\u6839 \u7684\u8ddd\u79bb\u5e94\u8be5\u5c0f\u4e8e\u7b49\u4e8e \u6811\u6839 \u5230 \u5b50\u6811\u6839\u7684\u8ddd\u79bb\u3002\u53ea\u8981\u6ee1\u8db3\u4e86\u8fd9\u4e00\u70b9\uff0c\u8be5\u5b50\u6811\u5c31\u53ef\u4ee5\u53ea\u653e\u4e00\u4e2a\u6751\u6c11\u3002\u5426\u5219\u6211\u4eec\u5c31\u8981\u7ee7\u7eed\u53bb\u8003\u8651\u8fd9\u4e2a\u5b50\u6811\u7684\u5404\u4e2a\u5b50\u6811\u3002\n\n## \u5b9e\u73b0\u601d\u8def\n\u90bb\u63a5\u8868\u5b58\u65e0\u5411\u56fe\uff0c\u628ak\u5f53\u6210\u6811\u6839\uff0c\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u5b83\u7684\u6df1\u5ea6\u3001\u4ee5\u5b83\u4e3a\u6811\u6839\u7684\u5b50\u6811\u4e2d\u7684\u6700\u6d45\u53f6\u8282\u70b9\u6df1\u5ea6\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21 dfs \u6c42\u51fa\u3002\n\n\u7136\u540e\u518d\u8fdb\u884c\u4e00\u6b21 dfs\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u6811\uff0c\u5982\u679c\u5b83\u7684 \u6700\u6d45\u53f6\u8282\u70b9 \u5230 \u5b50\u6811\u6839 \u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e \u6811\u6839 \u5230 \u5b50\u6811\u6839\u7684\u8ddd\u79bb\u3002\u90a3\u4e48\u5c31\u628a\u7b54\u6848 +1 \uff08\u56e0\u4e3a\u53ea\u8981\u5728\u6700\u6d45\u53f6\u8282\u70b9\u90a3\u653e\u4e00\u4e2a\u6751\u6c11\u5c31\u53ef\u4ee5\u4e86\uff09\u3002\u5426\u5219\u5c31\u5206\u522b\u6c42\u8fd9\u4e2a\u5b50\u6811\u7684\u82e5\u5e72\u4e2a\u5b50\u6811\uff0c\u5e76\u5c06\u7b54\u6848\u7d2f\u52a0\uff08\u65e0\u6cd5\u5360\u636e\u5b50\u6811\u6839\u8282\u70b9\uff0c\u9700\u8981\u6bcf\u6761\u8def\u8fde\u7684\u5b50\u6811\u90fd\u6709\u6751\u6c11\u5835\u4e0a\uff09\u3002\n\n## \u6613\u9519\u70b9\n- \u6839\u8282\u70b9\u6df1\u5ea6\u5e94\u8be5\u8bbe\u4e3a0\uff0c\u4e0d\u7136\u5224\u65ad\u8ddd\u79bb\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u51fa\u9519\u3002\n\n## \u4ee3\u7801\n\n\u5185\u5e26\u8be6\u7ec6\u6ce8\u91ca\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define N 100002\nusing namespace std;\nvoid read(int &x) {\n    int f = 1; x = 0;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')   {if (ch == '-') f = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\n    x *= f;\n}\nint n,k,tot,ans;//n,k\u5982\u9898\u76ee\u6240\u793a \nint to[N*2],ne[N*2],head[N],de[N],smin[N];//de\u5b58\u6df1\u5ea6\uff0csmin[ i ]\u4ee3\u8868\u4ee5 i \u4e3a\u6839\u7684\u5b50\u6811\u7684\u6700\u6d45\u53f6\u8282\u70b9\u6df1\u5ea6 \nvoid add(int x,int y){//\u9886\u63a5\u8868 \n\tto[++tot]=y,ne[tot]=head[x],head[x]=tot;\n}\nvoid dfs(int x,int fa){//\u7b2c\u4e00\u6b21dfs\u6c42 de[]\u3001smin[] \n\tde[x]=de[fa]+1;\n\tint minn=de[x];//\u5982\u679c\u5b83\u662f\u53f6\u8282\u70b9\uff0c\u90a3\u4e48\u4ee5\u5b83\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6700\u6d45\u53f6\u8282\u70b9\u6df1\u5ea6\u5c31\u662f\u5b83\u81ea\u5df1 \n\tfor(int i=head[x];i;i=ne[i]){\n\t\tint y=to[i];\n\t\tif(y==fa) continue;\n\t\tdfs(y,x);\n\t\tif(minn==de[x]) minn=smin[y];//\u5b83\u4e0d\u662f\u53f6\u8282\u70b9\uff0c\u5c06minn\u66ff\u6362 \n\t\telse minn=min(minn,smin[y]);//\u4ece\u5b83\u7684\u5404\u4e2a\u513f\u5b50\u4e2d\u9009\u51fa\u6700\u5c0f\u7684 smin \u5373\u4e3a\u5b83\u7684 smin \n\t}\n\tsmin[x]=minn;//\u66f4\u65b0\u5b83\u7684 smin \n}\nvoid dfs2(int x,int fa){\n\tif(smin[x]<=de[x]*2){//\u6700\u6d45\u53f6\u8282\u70b9\u6df1\u5ea6\u5c0f\u4e8e\u7b49\u4e8e\u8be5\u8282\u70b9\u6df1\u5ea6\u7684\u4e24\u500d \u7b49\u4ef7\u4e8e \u6700\u6d45\u53f6\u8282\u70b9 \u5230 \u5b50\u6811\u6839 \u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e \u6811\u6839 \u5230 \u5b50\u6811\u6839\u7684\u8ddd\u79bb \n\t\tans++;\n\t\treturn;\n\t}\n\tfor(int i=head[x];i;i=ne[i]){//\u5426\u5219\u6c42\u5206\u522b\u82e5\u5e72\u4e2a\u5b50\u6811 \n\t\tint y=to[i];\n\t\tif(y==fa) continue;\n\t\tdfs2(y,x);\n\t}\n}\nint main()\n{\n\tcin>>n>>k;\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tread(x),read(y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tde[k]=-1;//\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a 0 \u4e86 \n\tdfs(k,k);\n\tdfs2(k,k);\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n\n~~**\u8fd9\u7bc7\u9898\u89e3\u5199\u4e86\u672c\u849f\u84bb\u4e24\u4e2a\u5c0f\u65f6\uff0c\u7ed9\u4e2a\u8d5e\u5457**~~",
        "postTime": 1582113922,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "### Part.0 \u9898\u5916\u8bdd\n\n\u5976\u725b\u9898\u53c8\u5f00\u59cb\u88ab\u6076\u610f\u8bc4\u5206\u4e86...\n\n\u4e0d\u8fc7\u6211\u8ba4\u4e3a\u8fd8\u662f\u4e00\u9053\u5f88\u68d2\u7684\u9898\n\n\u5982\u679c\u6ca1\u6709\u4eba\u8ddf\u6211\u8bf4\u8fd9\u9898$O(N)$\u7684\u8bdd\u6211\u53ef\u80fd\u4f1a\u5728\u4e8c\u5206\u8fd9\u4e2a\u6b7b\u80e1\u540c\u91cc\u51fa\u4e0d\u6765\n\n~~\u77f3\u4e0a\u4e09\u5e74~~\n\n\n------------\n\n### Part1.\u601d\u8def\n\n\u9898\u9762\u5f88\u7b80\u5355\uff0c\u95eeBessie\u4ece\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u9700\u8981\u6700\u5c11\u591a\u5c11\u4e2aFarmerJohn\u4ece\u53f6\u5b50\u8282\u70b9\u51fa\u53d1\u624d\u80fd\u6293\u4f4fBessie\uff0cBessie\u8d70\u5230\u6839\u8282\u70b9\u5c31\u7b97\u8d62\u3002\n\n\u7136\u540e\u9996\u5148\u8fd9\u4e48\u60f3\uff0c\u5982\u679c\u628a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u90fd\u653e\u4e00\u4e2a\u519c\u592b\uff0c\u90a3Bessie\u7edd\u5bf9\u6b7b\u7fd8\u7fd8\u3002\u6362\u53e5\u8bdd\u6765\u8bf4\u7b54\u6848\u4e0d\u4f1a\u8d85\u8fc7\u53f6\u5b50\u8282\u70b9\u7684\u6570\u91cf\u3002\n\n\u90a3\u54ea\u4e9b\u53f6\u5b50\u8282\u70b9\u80fd\u591f\u7701\u519c\u592b\u5462\uff1f\n\n\u5982\u679c\u519c\u592b\u5f80\u4e0a\u722c\uff0c\u6bcf\u722c\u4e00\u6b65\uff0c\u90a3\u4e48\u4ee5\u519c\u592b\u73b0\u5728\u6240\u5728\u7684\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e00\u5b9a\u662f\u88ab\u5c01\u9501\u6b7b\u4e86\uff08\u56e0\u4e3aBessie\u60f3\u8981\u5f80\u8fd9\u4e2a\u5b50\u6811\u8d70\u7684\u8bdd\u5fc5\u7136\u7ecf\u8fc7\u519c\u592b\u3002\uff09\n\n\u4f46\u5982\u679cBessie\u5df2\u7ecf\u5728\u8fd9\u4e2a\u5b50\u6811\u91cc\u4e86\u5462\uff1f\n\n\u90a3\u6700\u5f00\u59cb\u7684\u90a3\u4e2a\u519c\u592b\u5c31\u6307\u671b\u4e0d\u4e0a\u4e86\uff0c\u53ea\u80fd\u653e\u65b0\u519c\u592b\u4e86\uff08\u8ffd\u53ca\u95ee\u9898\uff09\n\n\u6362\u53e5\u8bdd\u6765\u8bf4\uff0c\u6211\u4eec\u628a\u5f53\u519c\u592b\u8d70\u5230$u$\u65f6\uff0c\u82e5\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e0d\u53ef\u80fd\u5b58\u5728Bessie\uff0c\u5219\u8bb0$u$\u80fd\u591f\u88ab\u519c\u592b\u63a7\u5236\u3002\n\n\u63a5\u7740\u6709\u4e00\u4e2a\u5b9a\u7406\uff0c\u5982\u679c$u$\u80fd\u88ab\u63a7\u5236\uff0c\u90a3\u4e48$u$\u7684\u6574\u68f5\u5b50\u6811\u90fd\u80fd\u88ab\u63a7\u5236\uff08\u8fd9\u662f\u4ec0\u4e48\u5e9f\u8bdd\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u6709\u5bf9\u4e8e\u6240\u6709\u6ee1\u8db3\u201c$u$\u80fd\u591f\u88ab\u4e00\u4e2a\u519c\u592b\u63a7\u5236\uff0c\u4e14$u$\u7684\u7236\u8282\u70b9\u4e0d\u80fd\u88ab\u519c\u592b\u63a7\u5236\u201d\u7684\u8fd9\u79cd$u$\u653e\u4e0a\u4e00\u4e2a\u519c\u592b\u5c31\u597d\u4e86\u3002\n\n\u9898\u76ee\u5c31\u662f\u6c42\u8fd9\u79cd$u$\u7684\u4e2a\u6570\u3002\n\n\u90a3\u8282\u70b9$u$\u80fd\u591f\u88ab\u63a7\u5236\uff0c\u4f1a\u6709\u4ec0\u4e48\u5f0f\u5b50\u5462\uff1f\n\n\u5c31\u662fBessie\u5230$u$\u6240\u82b1\u7684\u5355\u4f4d\u65f6\u95f4\u6bd4\u519c\u592b\u5230$u$\u7684\u5927\uff08\u53ef\u4ee5\u53d6\u7b49\u53f7\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65f6\u5019\u53d6\u7b49\u53f7\u7684\u8bddBessie\u548c\u519c\u592b\u521a\u597d\u78b0\u5934\uff0cBessie\u4f1a\u88ab\u6293\uff0c\u4e5f\u5c31\u662f\u88ab\u63a7\u5236\uff09\u3002\n\n\u5373$dep[u] - 1 >= nd[u] - dep[u] $\n\n$dep[u]$\u4ee3\u8868$u$\u7684\u6df1\u5ea6\uff0c$nd[u]$\u4ee3\u8868\u4ee5$u$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u6df1\u5ea6\u6700\u6d45\u7684\u90a3\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u3002\n\n\u7136\u540e\u7b2c\u4e00\u6b21$dfs$\u7b97\u51fa\u8fd9\u4e24\u4e2a\u6570\u7ec4\u518d\u8dd1\u4e00\u6b21$dfs$\u5c31\u597d\u5566\u3002\n\n------------\n\n### Part3. Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\nusing namespace std;\n\nconst int MAXN = 100000 + 5;\n\nint n , m , rt , f[MAXN] , nd[MAXN] , dep[MAXN];\n\nvector <int> G[MAXN];\n\nvoid add(int u , int v) {G[u].push_back(v);}\n\nint dfs(int u , int fa) {\n\tf[u] = fa;\n\tdep[u] = dep[fa] + 1;\n\tbool leafy = true;\n\tfor(int i = 0 , v ; i < (int)G[u].size() ; ++i) {\n\t\tif((v = G[u][i]) == fa) continue;\n\t\tnd[u] = min(dfs(v , u) , nd[u]);\n\t\tleafy = false;\n\t}\n\tif(leafy) return nd[u] = dep[u];\n\treturn nd[u];\n}\n\nint dfs2(int u) {\n\tif(2 * dep[u] > nd[u]) return 1;\n\tint res = 0;\n\tfor(int i = 0 , v ; i < (int)G[u].size() ; ++i) {\n\t\tif((v = G[u][i]) == f[u]) continue;\n\t\tres += dfs2(v); \n\t}\n\treturn res;\n}\n\nint main() {\n\tmemset(nd , 0x3f , sizeof nd);\n\tscanf(\"%d %d\" , &n , &rt);\n\tfor(int i = 1 , u , v ; i < n ; ++i) {\n\t\tscanf(\"%d %d\" , &u , &v);\n\t\tadd(u , v) , add(v , u);\n\t}\n\tdfs(rt , 0); \n\tprintf(\"%d\\n\" , dfs2(rt));\n\treturn 0;\n}\n```\n",
        "postTime": 1552300272,
        "uid": 55537,
        "name": "Parabola",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "\u601d\u8def\u662f\u8986\u76d6\u5b50\u6811\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u519c\u6c11\u60f3\u622a\u4f4f\u725b\u7684\u6700\u4f18\u7b56\u7565\u662f\u4e0d\u65ad\u5411\u4e0a\u6765\u5c3d\u53ef\u80fd\u5730\u8986\u76d6\u66f4\u5927\u7684\u5b50\u6811\n\n\u6211\u4eec\u60f3\u8981\u5c3d\u65e9\u5730\u8986\u76d6\u4e00\u4e2a\u5b50\u6811\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u662f\u5728\u8fd9\u4e2a\u5b50\u6811\u4e2d\u9009\u53d6\u6df1\u5ea6\u6700\u5c0f\u7684\u4e00\u4e2a\u653e\u519c\u6c11\n\n\u5982\u679c\u6211\u4eec\u5728\u4e00\u4e2a\u70b9\u653e\u7f6e\u4e86\u519c\u6c11\uff0c\u90a3\u4e48\u5176\u4ed6\u70b9\u4e5f\u4f1a\u88ab\u8986\u76d6\uff0c\u6240\u6709\u8fd9\u4e2a\u519c\u6c11\u80fd\u591f\u8986\u76d6\u7684\u53f6\u5b50\u90fd\u4e0d\u9700\u8981\u518d\u653e\u519c\u6c11\u4e86\n\n\u62bd\u8c61\u51fa\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53f6\u8282\u70b9\uff0c\u90fd\u6709\u4e00\u4e2a\u6df1\u5ea6\uff0c\u6211\u4eec\u628a\u53f6\u8282\u70b9\u6309\u6df1\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u6bcf\u6b21\u9009\u53d6\u6df1\u5ea6\u6700\u6d45\u7684\u70b9\u6253\u6807\u8bb0\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u628a\u8fd9\u4e2a\u70b9\u80fd\u8986\u76d6\u7684\u70b9\u5168\u90e8\u5220\u53bb\n\n\u90a3\u4e48\u6211\u4eec\u600e\u6837\u652f\u6301\u8fd9\u6837\u4e00\u79cd\u64cd\u4f5c\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a$set$\uff0c\u6bcf\u6b21\u53d6\u51fa$s.begin$\uff0c\u8003\u8651\u5b83\u662f\u5426\u80fd\u591f\u8986\u76d6\u70b9$x$\uff0c\u80fd\u591f\u8986\u76d6\u7684\u524d\u63d0\u662f$d[begin]-d[lca]<=d[lca]$\uff0c\u5373\u519c\u6c11\u6bd4\u5976\u725b\u5148\u6216\u540c\u65f6\u8d70\u5230$lca$\n\n\u590d\u6742\u5ea6\u6211\u4e0d\u4f1a\u8bc1\uff0c\u5982\u679c\u6709\u5927\u4f6c\u770b\u5230\u53ef\u4ee5\u5e2e\u5fd9\u8bc1\u4e00\u4e0b\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<set>\nusing namespace std;\nconst int maxn=1e5+10,lg=18;\nstruct edge{\n\tint next,to;\n}e[maxn*2];\nstruct node{\n\tint d,id;\n};\nint n,k,head[maxn],cnt,ans,d[maxn],deg[maxn],sk[maxn][20];\nset<node>s;\nbool operator <(const node &x,const node &y)\n{\n\treturn x.d==y.d?x.id<y.id:x.d<y.d;\n}\nvoid add(int x,int y)\n{\n\te[++cnt].next=head[x];\n\te[cnt].to=y;\n\thead[x]=cnt;\n}\nvoid make(int x,int pre)\n{\n\tsk[x][0]=pre,d[x]=d[pre]+1;\n\tif(deg[x]==1)\n\t\ts.insert((node){d[x],x});\n\tfor(int v,i=head[x];i;i=e[i].next)\n\t\tif((v=e[i].to)!=pre)\n\t\t\tmake(v,x);\n}\nvoid equals(int &x,int h)\n{\n\tfor(int i=0;h;i++)\n\t{\n\t\tif(h&1)\n\t\t\tx=sk[x][i];\n\t\th>>=1;\n\t}\n}\nint lca(int x,int y)\n{\n\tif(d[x]<d[y])\n\t\tswap(x,y);\n\tequals(x,d[x]-d[y]);\n\tif(x==y)\n\t\treturn x;\n\tfor(int i=lg;i>=0;i--)\n\t\tif(sk[x][i]!=sk[y][i])\n\t\t\tx=sk[x][i],y=sk[y][i];\n\treturn sk[x][0];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int x,y,i=1;i<n;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t\tdeg[x]++,deg[y]++;\n\t}\n\tif(deg[k]==1)\n\t{\n\t\tprintf(\"1\\n\");\n\t\treturn 0;\n\t}\n\td[0]=-1;\n\tmake(k,0);\n\tfor(int i=1;i<=lg;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tsk[j][i]=sk[sk[j][i-1]][i-1];\n\twhile(!s.empty())\n\t{\n\t\tnode u=*s.begin();\n\t\tans++;\n\t\ts.erase(s.begin());\n\t\tfor(set<node>::iterator it=s.begin();it!=s.end();)\n\t\t{\n\t\t\tnode tmp=*it;\n\t\t\tit++;\n\t\t\tif(d[u.id]<=2*d[lca(u.id,tmp.id)])\n\t\t\t\ts.erase(tmp);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1539601732,
        "uid": 57045,
        "name": "communist",
        "ccfLevel": 7,
        "title": "P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "**\u77e5\u8bc6\u70b9\uff1aDFS**\n\n~~\u5c31\u662f\u4e00\u4e2a\u52b2\u513f\u7684\u6df1\u641c\u554a~~\n\n\u4ecb\u7ecd\u51e0\u4e2a\u6570\u7ec4\u7684\u4f5c\u7528\uff1a\n\ndis\uff1a\u5f53\u4f5c\u4e34\u65f6\u6570\u7ec4 diso\uff1a\u6c42\u6839\u5230\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8ddd\u79bb dist\uff1a\u6c42\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u8fd1\u7684\u53f6\u8282\u70b9\n\n\u518d\u4ecb\u7ecddfs\u4e2d\u53c2\u6570p\uff1a\n\n0\uff1a\u5904\u7406\u6839\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb 1\uff1a\u8ddd\u79bb\u6bcf\u4e2a\u70b9\u7684\u6700\u8fd1\u53f6\u7684\u8ddd\u79bb 2\uff1a\u627e\u7b54\u6848\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue> \n#define MAXN 100005\n#define LL long long\n#define INF 2147483647\n#define MOD 1000000007\n#define free(s) freopen(\"s.txt\",\"r\",stdin);\n#define lowbit(x) ((x&(-x))) \nusing namespace std;\nconst int L=1e5+5;\nint n,k,dis[L],ans,diso[L],dist[L];\nvector<int>w[L];\nvoid dfs(int o,int fa,int p)\n{\n\tfor(int i=0;i<w[o].size();i++)\n\t{\n\t\tint v=w[o][i];\n\t\tif(v==fa)\n\t\t\tcontinue;\n\t\tif(p==0)\n\t\t{\n\t\t\tdiso[v]=diso[o]+1;\n\t\t\tdfs(v,o,0);\n\t\t}\n\t\tif(p==1)\n\t\t{\n\t\t\tdis[v]=dis[o]+1;\n\t\t\tif(w[v].size()==1)\n\t\t\t{\n\t\t\t\tdist[o]=min(dist[o],1);\n\t\t\t\tdist[v]=0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdfs(v,o,1);\n\t\t\t\tdist[o]=min(dist[v]+1,dist[o]);\n\t\t\t}\n\t\t}\n\t\tif(p==2)\n\t\t{\n\t\t\tif(diso[v]>=dist[v])\n\t\t\t\tans++;\n\t\t\telse\n\t\t\t\tdfs(v,o,2);\n\t\t}\n\t}\n}\nint main()\n{\n\tmemset(dis,0x3f,sizeof(dis));\n\tmemset(dist,0x3f,sizeof(dist));\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint t1,t2;\n\t\tscanf(\"%d%d\",&t1,&t2);\n\t\tw[t1].push_back(t2);\n\t\tw[t2].push_back(t1);\n\t}\n\tdfs(k,0,0);\n\tdis[k]=0;\n\tdfs(k,0,1);\n\tdfs(k,0,2);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1527984313,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "```cpp\n/*\n\u5f53\u6211\u4eec\u5c06\u5976\u725b\u7684\u51fa\u53d1\u70b9\u4f5c\u4e3a\u6811\u7684\u9876\u70b9\u65f6\n\u519c\u6c11\u7684\u51fa\u53d1\u70b9\u5c31\u662f\u6811\u7684\u53f6\u5b50\u8282\u70b9\n\u5230\u9876\u70b9\u7684\u8def\u5f84\u53ea\u6709\u4e00\u6761\n\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u9876\u70b9\u7684\u8def\u5f84\u5bf9\u534a\u5206\n\u5f97\u5230\u4ece\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u51fa\u53d1\u6293\u5230\u5976\u725b\u65f6\u7684\u8282\u70b9 \n\u7136\u540edfs \n*/\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int M=1e5+5;\nint n,k,tot=0,ans=0,fa[M],cc[M],zx[M],dis[M],first1[M],first[M];//dis[i]\u8868\u793ai\u8282\u70b9\u5230\u9876\u70b9\u7684\u8ddd\u79bb \nbool vis[M];\nstruct Edge1{//\u6b63\u5e38\u5efa\u6811 \n\tint nxt,to;\n}e1[M<<1];\nstruct Edge{//\u5efa\u7acb\u7b80\u5316\u7248\u7684\u6811 \n\tint nxt,to,val;\n}e[M<<1];\n\nint read(){\n\tint x=0,y=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') y=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*y;\n}\n\nvoid add1(int x,int y){\n\ttot++;\n\te1[tot].nxt=first1[x];\n\tfirst1[x]=tot;\n\te1[tot].to=y;\n}\n\nvoid add(int x,int y,int z){\n\ttot++;\n\te[tot].nxt=first[x];\n\tfirst[x]=tot;\n\te[tot].to=y;\n\te[tot].val=z;\n}\n\nvoid build(int u,int f1,int f2,int t){\n\tint son=0;\n\tfor(int i=first1[u];i;i=e1[i].nxt) if(e1[i].to!=f1) son++;\n\tif(son==0){\n\t\tcc[0]++;\n\t\tcc[cc[0]]=u;\n\t}\n\tif(son>1||son==0){\n\t\tfa[u]=f2;\n\t\tadd(u,f2,t);\n\t\tadd(f2,u,t);\n\t}\n\tfor(int i=first1[u];i;i=e1[i].nxt){\n\t\tint v=e1[i].to;\n\t\tif(v!=f1){\n\t\t\tif(son>1){\n\t\t\t\tbuild(v,u,u,1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tbuild(v,u,f2,t+1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid check(int u,int f,int t){\n\tdis[u]=t;\n\tfor(int i=first[u];i;i=e[i].nxt){\n\t\tint v=e[i].to,w=e[i].val;\n\t\tif(v!=f){\n//\t\t\tprintf(\"%d --> %d : %d\\n\",u,v,w);\n\t\t\tcheck(v,u,t+w);\n\t\t}\n\t}\n}\n\nvoid make_zx(int u,int jl,int yl){\n\tif(jl<(dis[u]-dis[fa[u]])){\n\t\tzx[yl]=u;\n\t\tvis[u]=1;\n\t}\n\telse{\n\t\tmake_zx(fa[u],jl-(dis[u]-dis[fa[u]]),yl);\n\t}\n}\n\nvoid find_ans(int u,int f){\n\tif(vis[u]==1){\n\t\tans++;\n\t\treturn;\n\t}\n\tfor(int i=first[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(v!=f){\n\t\t\tfind_ans(v,u);\n\t\t}\n\t}\n}\n\nint main(){\n\tn=read(),k=read();\n\tfor(int i=1;i<=n-1;i++){\n\t\tint a=read(),b=read();\n\t\tadd1(a,b);\n\t\tadd1(b,a);\n\t}\n\ttot=0;\n\tbuild(k,0,0,1);\n\tcheck(k,0,0);\n\tfor(int i=1;i<=cc[0];i++){\n\t\tmake_zx(cc[i],dis[cc[i]]/2,cc[i]);\n//\t\tprintf(\"%d --> %d dis:%d\\n\",cc[i],zx[cc[i]],dis[cc[i]]);\n\t}\n\tfind_ans(k,0);\n\tprintf(\"%d\\n\",ans);\n}\n```\n",
        "postTime": 1551881205,
        "uid": 116015,
        "name": "bellmanford",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "Bessie \u4ece $k$ \u51fa\u53d1\uff0c\u5f88\u660e\u663e\u662f\u5efa\u4e00\u9897\u4ee5 $k$ \u4e3a\u6839\u7684\u5b50\u6811\u3002\n\n\u4ee5\u4e0b\u5c06\u89c6\u89d2\u8f6c\u6362\u5230\u519c\u6c11\uff0c\u76ee\u7684\u662f\u4fdd\u62a4\u8c37\u4ed3\uff0c\u9632\u6b62 Bessie \u8dd1\u5230\u8c37\u4ed3\u91cc\u3002\n\n\u5bf9\u4e8e\u4e0b\u9762\u7684**\u5b89\u5168**\u7684\u7406\u89e3\uff1a\u5bf9\u4e8e\u4e00\u79cd\u5b89\u6392\u7b56\u7565\uff0c\u82e5 Bessie \u4e0d\u53ef\u80fd\u7ecf\u8fc7\u67d0\u70b9\uff08\u56e0\u4e3a Bessie \u4e5f\u77e5\u9053\u519c\u6c11\u7684\u4f4d\u7f6e\uff09\uff0c\u5219\u79f0\u8fd9\u4e2a\u70b9\u662f\u5b89\u5168\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981 Bessie \u7ecf\u8fc7\u4e86\u8fd9\u4e2a\u70b9\uff0c\u5b83\u5c31\u4e00\u5b9a\u4f1a\u88ab\u6293\u3002\n\n\u800c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u5b89\u6392\u65b9\u6848\uff0c\u4f7f\u5f97\u6839\u8282\u70b9 $k$ \u662f\u5b89\u5168\u7684\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u6839\u8282\u70b9 $x,y$\uff0c\u6ee1\u8db3 $deep_x<deep_y$ \uff08\u5728\u6811\u4e2d\u7684\u6df1\u5ea6\uff09\uff0c\u8bbe $z=\\operatorname {lca}(x,y)$\u3002\n\n\u82e5\u6709 $deep_x-deep_z\\le deep_z$ \uff08\u519c\u6c11\u4ece $x$ \u51fa\u53d1\u53ef\u4ee5\u6bd4 Bessie \u66f4\u5148\u5230\u8fbe $z$ \u6216\u8005\u540c\u65f6\u5230\u8fbe\uff09\uff0c\u5219 $y$ \u662f\u65e0\u7528\u7684\u8c37\u4ed3\uff0c\u519c\u6c11\u548c Bessie \u90fd\u4e0d\u7528\u53bb\u7ba1\u5b83\uff08\u56e0\u4e3a\u5982\u679c $x$ \u80fd\u88ab\u4fdd\u62a4\u7684\u8bdd\uff0c $y$ \u4e5f\u4e00\u5b9a\u80fd\u88ab\u4fdd\u62a4\uff09\u3002\n\n\u53cd\u4e4b\uff0c\u5219\u4ece $x$ \u51fa\u53d1\u7684\u519c\u6c11\u4e0d\u80fd\u4fdd\u62a4 $y$ \u8c37\u4ed3\uff0c$x$ \u548c $y$ \u5f7c\u6b64\u72ec\u7acb\u3002\n\n---\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u6811\u4e0a\u4efb\u610f\u4e00\u70b9 $z$\uff0c\u628a\u4ee5 $z$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6700\u6d45\u7684\u53f6\u5b50\u8282\u70b9\u79f0\u4f5c $x$\u3002\n\n\u82e5 $|x\\to z|\\le |root\\to z|$\uff08\u7406\u89e3\u4e3a\u5411\u91cf\u5927\u5c0f\u6bd4\u8f83\uff0c\u548c\u524d\u9762\u7684\u90a3\u4e2a $deep$ \u52a0\u51cf\u662f\u4e00\u4e2a\u610f\u601d\uff09\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5b89\u6392\u4e00\u4e2a\u519c\u6c11\u5728 $x$ \u4f7f\u5f97\u5b50\u6811 $z$ \u5b89\u5168\u3002\n\n\u5426\u5219\u5462\uff1f\u6211\u4eec\u53ea\u9700\u8981\u8ba9 $\\forall u\\to z$ \u6ee1\u8db3\u6240\u6709\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u5b89\u5168\uff0c\u90a3\u4e48 $z$ \u5c31\u662f\u5b89\u5168\u7684\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u4e5f\u662f\u5f88\u7b80\u5355\u7684\u3002\n\n~~\u6211\u5f53\u65f6\u8865\u6587\u5316\u8bfe\u4f5c\u4e1a\uff0c\u8003\u8bd5\u6ca1\u65f6\u95f4\u4e86\uff0c\u4e94\u5206\u949f\u6572\u7684~~\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\nconst int MAX=1e5+3;\nstruct milk\n{\n    int to,next;\n}a[MAX<<1];\nint h[MAX];\nint f[MAX];\nbool vit[MAX];\nint deep[MAX];\nint m_d[MAX];\nint nam;\nint n,k;\ninline void add(int x,int y){a[++nam].to=y;a[nam].next=h[x];h[x]=nam;}\ninline void dfs(int x)\n{\n    m_d[x]=0x3f3f3f3f;\n    vit[x]=true;\n    bool bj=false;\n    for(int i=h[x];i>0;i=a[i].next)\n    if(!vit[a[i].to])\n    {\n        bj=true;\n        deep[a[i].to]=deep[x]+1;\n        dfs(a[i].to);\n        m_d[x]=min(m_d[x],m_d[a[i].to]);\n        f[x]+=f[a[i].to];\n    }\n    if(!bj)m_d[x]=deep[x];\n    if(m_d[x]-deep[x]<=deep[x])f[x]=1;\n    return;\n}\nLL rin()\n{\n    LL s=0;\n    char c=getchar();\n    bool bj=0;\n    for(;(c>'9'||c<'0')&&c!='-';c=getchar());\n    if(c=='-')c=getchar(),bj=true;\n    for(;c>='0'&&c<='9';c=getchar())s=(s<<1)+(s<<3)+(c^'0');\n    if(bj)return -s;\n    return s;\n}\nint main()\n{\n    int i,j;\n    n=rin();k=rin();\n    int x,y;\n    for(i=1;i<n;i++)x=rin(),y=rin(),add(x,y),add(y,x);\n    dfs(k);\n    printf(\"%d\",f[k]);\n    return 0;\n}\n```\n",
        "postTime": 1599995406,
        "uid": 73551,
        "name": "zjjws",
        "ccfLevel": 7,
        "title": "P4186 [USACO18JAN]Cow at Large G"
    },
    {
        "content": "\u9898\u610f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6c42\u8ba9root\u65e0\u6cd5\u8d70\u5230\u5176\u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c11\u4eba\u6570\n\n\u95ee\u9898\u5c31\u5728\u4e8e\u5982\u4f55\u653e\u536b\u5175\n\n\u5728\u6df1\u5165\u7814\u7a76\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a\u536b\u5175\u80fd\u591f\u5b8c\u5168\u9501\u6b7b\u6240\u5728\u5b50\u6811\uff0c\u5f53\u4e14\u4ec5\u5f53**deep[i]>=deep[j]-deep[i](j\u8868\u793a\u536b\u5175\u6240\u653e\u4f4d\u7f6e\uff0ci\u662f\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\uff0cj\u662f\u4ee5i\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2ddeep\u6700\u6d45\u7684\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff09**\uff0c\uff08\u4e0d\u61c2\u7684\u53ef\u4ee5\u753b\u4e0b\u56fe\uff0c~~\u7136\u800c\u6211\u4e5f\u662f\u5728\u5927\u4f6c\u7684\u8bb2\u89e3\u4e4b\u4e0b\u641e\u61c2\u7684~~\uff09\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,root,cnt,ans,head[1000001],deep[100001];\nint f[1000001];\nbool v[1000001];\nstruct Edge{\n    int nxt,to;\n}tree[1000001];\nvoid add(int a,int b)\n{\n    tree[++cnt].nxt=head[a];\n    tree[cnt].to=b;\n    head[a]=cnt;\n}\nvoid put_deep(int x,int dep)\n{\n    v[x]=true;\n    deep[x]=dep;\n    for(int i=head[x];i;i=tree[i].nxt)\n    {\n        int j=tree[i].to;\n        if(!v[j])\n        put_deep(j,dep+1);\n    }\n}\nint dfs(int x)\n{\n    v[x]=false;\n    int re=2147483647;\n    for(int i=head[x];i;i=tree[i].nxt)\n    {\n        int zs=0;\n        int j=tree[i].to;\n        if(v[j]){\n            zs=dfs(j);\n            re=min(re,zs);\n        }\n    }\n    if(re==2147483647)re=0;\n    f[x]=re;\n//\tprintf(\"%d %d\\n\",x,re);\n    return re+1;\n}\nvoid find_ans(int x)\n{\t\n    v[x]=true;\n    if(f[x]<=deep[x]){\n        ans++;\n        return;\n    }//\u5982\u679c\u7b26\u5408\uff0c\u5c31\u653e\u536b\u5175\n    for(int i=head[x];i;i=tree[i].nxt)\n    {\n        int j=tree[i].to;\n        if(!v[j])find_ans(j);\n    }//\u5426\u5219\uff0c\u5c31\u7ee7\u7eed\u5f80\u4e0b\u641c\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&root);\n    for(int i=1;i<n;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n        add(y,x);\n    }\n    put_deep(root,0);//\u9884\u5904\u7406deep\n    dfs(root);//\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684deep[i]-deep[j]\n    find_ans(root);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1533560097,
        "uid": 73702,
        "name": "DQYdqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "~~\u7ecf\u5178\u7684\u6811\u4e0a\u95ee\u9898///~~\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u725b\u5230\u5b83\u7684\u6700\u77ed\u65f6\u95f4\u548c\u519c\u6c11\u5230\u5b83\u7684\u6700\u77ed\u65f6\u95f4\n\n\u5bf9\u4e8e\u6bcf\u4e00\u68f5\u5b50\u6811\u53ea\u9700\u8981\u4e00\u4e2a\u519c\u6c11\uff0c\u5f53\u4e14\u4ec5\u5f53\u519c\u6c11\u5230\u5b83\u7684\u6839\u7684\u6700\u77ed\u65f6\u95f4\u5c0f\u4e8e\u725b\u5230\u5b83\u7684\u6700\u77ed\u65f6\u95f4\n\n\uff08\u6216\u8005\u8bf4\uff0c\u82e5\u519c\u6c11\u5230\u67d0\u4e00\u4e2a\u8282\u70b9\u7684\u6700\u77ed\u65f6\u95f4\u5c0f\u4e8e\u725b\u5230\u5b83\u7684\u6700\u77ed\u65f6\u95f4\uff0c\u5219\u5f53\u524d\u8282\u70b9\u4e0e\u5b83\u7684\u5b50\u6811\u53ea\u9700\u8981\u4e00\u4e2a\u519c\u6c11\uff09\n\n\u5426\u5219\u5e94\u8be5\u5728\u5b83\u7684\u513f\u5b50\u4e0a\u91cd\u65b0\u5bfb\u627e\u5176\u4ed6\u8282\u70b9\u66f4\u65b0\u7b54\u6848\n\n**\u2191\u8fd9\u4e24\u53e5\u8bdd\u662f\u5173\u952e\u4e2d\u7684\u5173\u952e\uff0c\u8bf7\u7406\u89e3\u540e\u518d\u7ee7\u7eed\u5411\u4e0b\u770b**\n\n\u800c\u519c\u6c11\u5230\u67d0\u4e00\u8282\u70b9\u7684\u6700\u77ed\u65f6\u95f4\u5373\u4e3a\u6b64\u8282\u70b9\u5b50\u6811\u4e0a\u6700\u6d45\u7684\u53f6\u5b50\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\uff0c\u725b\u5230\u5b83\u7684\u6700\u77ed\u65f6\u95f4\u663e\u7136\u662f\u6df1\u5ea6\n\n\u8003\u8651\u4e09\u6b21dfs\uff0c\u7b2c\u4e00\u6b21\u7ef4\u62a4\u6df1\u5ea6`dep`\uff0c\u7b2c\u4e8c\u6b21\u7ef4\u62a4\u5b50\u6811\u4e0a\u6700\u6d45\u7684\u53f6\u5b50\u5230\u81ea\u5df1\u7684\u8ddd\u79bb`dis`\uff0c\u7b2c\u4e09\u6b21\u7edf\u8ba1\u7b54\u6848\n\n~~\u4e5f\u8bb8\u53ef\u4ee5\u628a2\u30013\u6b21\u5408\u5728\u4e00\u8d77~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint dep[100001], head[100001], nxt[200001], to[200001], dis[200001], fa[100001], tot, ans;\nvoid add(int x, int y)\n{\n    nxt[++tot] = head[x];\n    head[x] = tot;\n    to[tot] = y;\n}\nvoid dfs1(int x, int from, int dp)\n{\n    dep[x] = dp;\n    fa[x] = from;\n    for(int i = head[x]; i; i = nxt[i])\n    {\n        int y = to[i];\n        if(y != from)\n        {\n            dfs1(y, x, dp + 1);\n        }\n    }\n}\nvoid dfs2(int x)\n{\n    bool fl = 0;\n    for(int i = head[x]; i; i = nxt[i])\n    {\n        int y = to[i];\n        if(y != fa[x])\n        {\n            fl = 1;\n            dfs2(y);\n            dis[x] = min(dis[x], dis[y] + 1);\n        }\n    }\n    if(!fl) dis[x] = 0;\n}\nvoid dfs3(int x)\n{\n    for(int i = head[x]; i; i = nxt[i])\n    {\n        int y = to[i];\n        if(y != fa[x])\n        {\n            if(dep[y] >= dis[y]) ans++;\n            else dfs3(y);\n        }\n    }\n}\nint main()\n{\n    int n, rt;\n    cin >> n >> rt;\n    for(int i = 1; i < n; i++)\n    {\n        int x, y;\n        cin >> x >> y;\n        add(x, y);\n        add(y, x);\n    }\n    memset(dis, 0x3f, sizeof(dis));\n    dfs1(rt, 0, 0);\n    dfs2(rt);\n    dfs3(rt);\n    cout << ans;\n    return 0;\n}\n\n```",
        "postTime": 1603691622,
        "uid": 75954,
        "name": "AuCloud",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "\u6811\u5f62dp\u597d\u9898\u3002\n\n\u9996\u5148\u5148\u53d8\u6210\u6709\u6839\u6811\u3002\n\n\u9996\u5148\u8003\u8651\u6700\u574f\u7684\u60c5\u51b5\uff1a\u6bcf\u4e00\u4e2a\u51fa\u53e3\u90fd\u653e\u4e00\u4e2a\u770b\u5b88\uff0c\u8fd9\u6837\u725b\u600e\u4e48\u4e5f\u8fdb\u4e0d\u53bb\u3002\u6240\u4ee5\u7b54\u6848\u4e00\u5b9a $\\le n-1$\u3002\n\n\u4f46\u662f\u6709\u4e00\u4e9b\u770b\u5b88\u5c31\u662f\u53ef\u7528\u53ef\u4e0d\u7528\u7684\u3002\n\n\u4f46\u662f\u770b\u5b88\u662f\u4f1a\u52a8\u7684\uff0c\u53ea\u8981\u770b\u5b88\u5c01\u9501\u4f4f\u4e86\u4e00\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e2a\u5b50\u6811\u5c31\u88ab\u5835\u4f4f\u4e86\u3002\n\n\u4f46\u662f\uff0c\u5982\u679c\u725b\u5df2\u7ecf\u6e9c\u8fdb\u5b50\u6811\uff0c\u8fd9\u4e2a\u770b\u5b88\u5c31\u5931\u5ba0\u4e86\uff0c\u53ea\u80fd\u6362\u3002\n\n\u6211\u4eec\u8ba9\u4e00\u4e2a\u6700\u5feb\u7684\u770b\u5b88\u6765\uff0c\u4e5f\u9700\u8981 $upp\\_son_i - dep_i$ \u5355\u4f4d\u65f6\u95f4\u3002\n\n\u6211\u4eec\u8ba9\u5b83 $\\le dep_i-1$\uff08-1\u662f\u56e0\u4e3a $dep_k = 1$\uff09\uff0c\u8fd9\u6837\u7684\u8282\u70b9\u4e2a\u6570\u5c31\u662f\u6700\u5c11\u7684\u770b\u5b88\u4e2a\u6570\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e00\u904ddp\u9884\u5904\u7406\uff0c\u518d\u4e00\u904ddp\u6c42\u89e3\u3002\n\nCode\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,k,fa[100005],upp_son[100005],dep[100005];\nvector<int> g[100005];\n\nint pre(int u,int f)\n{\n\tfa[u]=f;dep[u]=dep[f]+1;\n\tbool isexit=1;\n\tfor(int i=0;i<g[u].size();i++)\n\t{\n\t\tint v=g[u][i];\n\t\tif(v==f)continue;\n\t\tupp_son[u]=min(pre(v,u),upp_son[u]);\n\t\tisexit=0;\n\t}\n\tif(isexit)upp_son[u]=dep[u];\n\treturn upp_son[u];\n}\n\nint sol(int u)\n{\n\tif(2*dep[u]>upp_son[u])return 1;\n\tint ret=0;\n\tfor(int i=0;i<g[u].size();i++)\n\t{\n\t\tint v=g[u][i];\n\t\tif(v==fa[u])continue;\n\t\tret+=sol(v);\n\t}\n\treturn ret;\n}\n\nint main()\n{\n\tmemset(upp_son,0x7f,sizeof(upp_son));\n\tcin>>n>>k;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;cin>>u>>v;\n\t\tg[u].push_back(v);g[v].push_back(u);\n\t}\n\tpre(k,0);cout<<sol(k);\n}\n```",
        "postTime": 1618412715,
        "uid": 313716,
        "name": "decltype_auto",
        "ccfLevel": 0,
        "title": "solution-p4186"
    },
    {
        "content": "\u697c\u4e0a\u4f17\u795e\u4ed9\u5199\u7684\u90fd\u662f\u6b63\u89e3\uff0c\u6211\u7684\u662f\u5728\u6a21\u62df\u8d5b\u778e\u7cca\u5f04\u7684\uff08~~\u9694\u4e86\u4e00\u5e74\u524d\u6253\u7684\uff0c\u4eca\u5929\u53c8\u5237\u5230\u4e86\uff0c\u7136\u9e45\u6211\u8fd8\u662f\u5f88\u83dc\uff0c\u5199\u7684\u5982\u4e0b\u7384\u5b66\u7b97\u6cd5~~\uff09\n\n\u5927\u81f4\u601d\u8def\u5c31\u662f\u8ba9bessie\u5411\u53f6\u5b50\u8dd1\uff0c\u5982\u679c\u8dd1\u51fa\u53bb\u4e86\u5728\u90a3\u91cc\u653e\u4e2a\u5b88\u536b\u91cd\u6765\u4e00\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662fO(Ans*N)\u7684\uff0c\u4f46\u5b9e\u9645\u8dd1\u51fa\u6765\u8fd8\u662f\u4e2a\u7384\u5b66\u65f6\u6548\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100005;\nint Q[maxn],son[2*maxn],lnk[maxn],nxt[2*maxn],ANS[maxn],s,du[maxn],tot,n;\nbool vis[maxn],Bissie[maxn];\ninline int read(){\n\tint red=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){ if(ch=='-') f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') red=red*10+ch-48,ch=getchar();\n\treturn red*f;\n}\nvoid add_e(int x,int y){\n    son[++tot]=y,nxt[tot]=lnk[x],lnk[x]=tot,du[y]++;\n}\nvoid BFS(){\n\tmemset(vis,0,sizeof vis);\n\tint hed=0,til=0;\n\tfor(int i=1;i<=ANS[0];i++) Q[++til]=ANS[i],Bissie[ANS[i]]=0,vis[ANS[i]]=1;\n\tQ[++til]=s,vis[s]=1,Bissie[s]=1;\n\twhile(hed<til){\n\t\tint x=Q[++hed];\n\t\tfor(int j=lnk[x];j;j=nxt[j])\n\t    if(!vis[son[j]]){ \n\t    \tif(du[son[j]]==1&&Bissie[x]){\n\t\t\t    ANS[++ANS[0]]=son[j];BFS();return;\n\t\t\t}\n\t    \tvis[son[j]]=1,Q[++til]=son[j],Bissie[son[j]]=Bissie[x];\n\t    }\n\t}\n}\nint main(){\n\tfreopen(\"atlarge.in\",\"r\",stdin);\n\tfreopen(\"atlarge.out\",\"w\",stdout);\n\tn=read(),s=read();\n\tfor(int i=1;i<n;i++){int x=read(),y=read();add_e(x,y),add_e(y,x);}\n\tif(du[s]==1){ANS[++ANS[0]]=s;}\n\tBFS();\n\tprintf(\"%d\\n\",ANS[0]);\n\treturn 0;\n}\n```\n",
        "postTime": 1566561977,
        "uid": 125322,
        "name": "bessie_goes_moo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "\u6211\u662f\u7528\u6811\u5f62DP\u505a\u7684 \u8bbedp[i]\u8868\u793a\u5728i\u70b9\u7684\u5b50\u6811\u653e\u591a\u5c11\u4e2a\u5b88\u536b\n\n\u663e\u7136 \u6709\u65b9\u7a0b\n\nif (mind[i]-(depth[i]-1)<=depth[i]) (\u5176\u4e2dmind\u8868\u793ai\u7684\u5b50\u6811\u5185\u7684\u53f6\u5b50\u8282\u70b9\u6700\u6d45\u7684\u6df1\u5ea6) dp[i]=1 \u5373\u5b88\u536b\u53ef\u4ee5\u6293\u5230\u8fd9\u4e2a\u4eba\n\nelse dp[i]=Sigma{dp[i.son]}\n```cpp\n#include<bits/stdc++.h>\nconst int N=100005;\nusing namespace std;\ntemplate<class T>\ninline void read(T &x)\n{\n\tx=0;\n\tstatic char ch=getchar();\n\twhile(!isdigit(ch))\tch=getchar();\n\twhile(isdigit(ch))\tx=x*10+ch-'0',ch=getchar();\n}\nint n,root;\nstruct Edge\n{\n\tint to,next;\n}edge[2*N];\nint first[N],tot;\ninline void addedge(int x,int y)\n{\n\ttot++;\n\tedge[tot].to=y; edge[tot].next=first[x]; first[x]=tot;\n}\nint depth[N],mind[N],son[N],dp[N];\t//dp[i]:\u5728i\u70b9\u7684\u5b50\u6811\u653e\u591a\u5c11\u4e2a\u5b88\u536b \nvoid dfs1(int now,int fa)\n{\n\tson[now]=1;\n\tdepth[now]=depth[fa]+1;\n\tfor(int u=first[now];u;u=edge[u].next)\n\t{\n\t\tint vis=edge[u].to;\n\t\tif(vis==fa)\tcontinue;\n\t\tdfs1(vis,now);\n\t\tson[now]+=son[vis];\n\t}\n}\nvoid dfs2(int now,int fa)\n{\n\tif(son[now]==1)\t\n\t{\n\t\tmind[now]=depth[now];\n\t\treturn;\n\t}\n\tfor(int u=first[now];u;u=edge[u].next)\n\t{\n\t\tint vis=edge[u].to;\n\t\tif(vis==fa)\tcontinue;\n\t\tdfs2(vis,now);\n\t\tmind[now]=min(mind[now],mind[vis]);\n\t}\n}\nvoid dfs3(int now,int fa)\n{\n\tif(son[now]==1)\n\t{\n\t\tdp[now]=1;\n\t\treturn; \n\t}\n\tbool flag=0;\n\tfor(int u=first[now];u;u=edge[u].next)\n\t{\n\t\tint vis=edge[u].to;\n\t\tif(vis==fa)\tcontinue;\n\t\tdfs3(vis,now);\n\t\tint ti=depth[now]-1;\t//\u8d70\u4e86\u591a\u6df1\u5c31\u8d70\u4e86\u591a\u4e45\n\t\tint h=mind[now]-ti;\t//\u6700\u5c4c\u7684\u5b88\u536b\u7684\u4f4d\u7f6e \n\t\tif(h<=depth[now])\tflag=1;\n\t}\n\tif(flag)\tdp[now]=1;\n\telse\n\t{\n\t\tfor(int u=first[now];u;u=edge[u].next)\n\t\t{\n\t\t\tint vis=edge[u].to;\n\t\t\tif(vis==fa)\t\tcontinue;\n\t\t\tdp[now]+=dp[vis];\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n>>root;\n\tfor(int i=1,u,v;i<=n-1;i++)\n\t{\n\t\tread(u); read(v);\n\t\taddedge(u,v); addedge(v,u);\n\t}\n\tmemset(mind,0x3f,sizeof(mind));\n\tdfs1(root,0);\n\tdfs2(root,0);\t\n\tdfs3(root,0);\n\tcout<<dp[root];\n\treturn 0; \n}\n```",
        "postTime": 1548481636,
        "uid": 60299,
        "name": "Patrickpwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    },
    {
        "content": "http://www.elijahqi.win/2018/02/02/luogu4186-usaco18jancow-at-large-g/\nhttp://blog.csdn.net/elijahqi/article/details/79243189\n\u9898\u76ee\u63cf\u8ff0\n\nCornered at last, Bessie has gone to ground in a remote farm. The farm consists of\n\nNN\n\nN barns (\n\n2\u2264N\u22641052 \\leq N \\leq 10^5\n\n2\u2264N\u2264105 ) and\n\nN\u22121N-1\n\nN\u22121 bidirectional tunnels between barns, so that there is a unique path between every pair of barns. Every barn which has only one tunnel is an exit. When morning comes, Bessie will surface at some barn and attempt to reach an exit.\n\nBut the moment Bessie surfaces, the law will be able to pinpoint her location. Some farmers will then start at various exit barns, and attempt to catch Bessie. The farmers move at the same speed as Bessie (so in each time step, each farmer can move from one barn to an adjacent barn). The farmers know where Bessie is at all times, and Bessie knows where the farmers are at all times. The farmers catch Bessie if at any instant a farmer is in the same barn as Bessie, or crossing the same tunnel as Bessie. Conversely, Bessie escapes if she reaches an exit barn before any farms catch her.\n\nBessie is unsure about her chances of success, which depends on the number of farmers that the law is able to deploy. Given that Bessie surfaces at barn\n\nKK\n\nK , help Bessie determine the minimum number of farmers who would be needed to catch Bessie, assuming that the farmers distribute themselves optimally among the exit barns.\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\nThe first line of the input contains\n\nNN\n\nN and\n\nKK\n\nK . Each of the following\n\nN\u22121N-1\n\nN\u22121 lines specify two integers, each in the range\n\n1\u2026N1 \\ldots N\n\n1\u2026N , describing a tunnel between two barns.\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\nPlease output the minimum number of farmers needed to ensure catching Bessie.\n\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n\u8f93\u5165\u6837\u4f8b#1\uff1a \u590d\u5236\n\n7 1\n1 2\n1 3\n3 4\n3 5\n4 6\n5 7\n\n\u8f93\u51fa\u6837\u4f8b#1\uff1a \u590d\u5236\n\n3\n\n\u9898\u610f\uff1a\u6c42\u7ed9\u5b9a\u4e00\u4e2a\u70b9 \u4f7f\u5f97\u4ed6\u65e0\u6cd5\u8d70\u5230\u53f6\u5b50\u8282\u70b9\u6211\u9700\u8981\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\u5b89\u6392\u7684\u6700\u5c0f\u4eba\u6570 \u5e76\u4e14\u6211\u53f6\u5b50\u8282\u70b9\u4e0a\u7684\u4eba\u53ef\u4ee5\u8d70\u52a8 \u4f46\u548c\u725b\u7684\u8d70\u52a8\u901f\u5ea6\u4e00\u6837  \u5c1d\u8bd5\u753b\u56fe\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u6211\u8fd9\u4e2a\u8282\u70b9\u63a7\u5236\u7684\u53f6\u5b50\u8282\u70b9\u6700\u8fd1\u7684\u90a3\u4e2a\u8d70\u5230\u8fd9\u91cc\u6bd4bessy\u8d70\u5230\u8fd9\u91cc\u8fd8\u8981\u8fd1\u8bf4\u660e\u6211\u8fd9\u91cc\u653e\u4e00\u4e2a\u5373\u53ef \u5982\u679c\u4e0d\u884c\u8bf4\u660e\u6211\u9700\u8981\u9012\u5f52\u4e0b\u53bb\u53bb\u505a \u4f7f\u5f97\u53ef\u4ee5\u88ab\u5c01\u6b7b \u90a3\u4e48\u663e\u7136\u53d8\u6210\u4e86\u4e00\u4e2a\u5b50\u95ee\u9898\u5c31\u6811\u5f62dp\u641e\u4e00\u4e0b \u4e00\u904ddfs\u7ef4\u62a4\u6700\u5c0f\u503c \u8fd8\u6709\u8ddd\u79bb \u6bd4\u8f83\u4e0b\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\u5373\u53ef\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 110000\nusing namespace std;\ninline char gc(){\n    static char now[1<<16],*S,*T;\n    if (T==S){T=(S=now)+fread(now,1,1<<16,stdin);if (T==S) return EOF;}\n    return *S++;\n}\ninline int read(){\n    int x=0,f=1;char ch=gc();\n    while(ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=gc();}\n    while(ch<='9'&&ch>='0') x=x*10+ch-'0',ch=gc();\n    return x*f;\n}\nstruct node{\n    int y,next;\n}data[N<<1];\nint n,k,ans,dp[N],min1[N],dis[N],num,h[N];\ninline void dfs(int x,int fa){\n    int tmp=0,nm=0;\n    for (int i=h[x];i;i=data[i].next){\n        int y=data[i].y;if (y==fa) continue;++nm;dis[y]=dis[x]+1;dfs(y,x);tmp+=dp[y];\n    }if (!nm) min1[x]=0;min1[fa]=min(min1[fa],min1[x]+1);if(dis[x]>=min1[x]) dp[x]=1;else dp[x]=tmp;\n}\nint main(){\n//\tfreopen(\"atlarge.in\",\"r\",stdin);\n//\tfreopen(\"atlarge.out\",\"w\",stdout);\n    n=read();k=read();memset(min1,0x3f,sizeof(min1));\n    for (int i=1;i<n;++i){\n        int x=read(),y=read();\n        data[++num].y=y;data[num].next=h[x];h[x]=num;\n        data[++num].y=x;data[num].next=h[y];h[y]=num;\n    }\n    for (int i=h[k];i;i=data[i].next){\n        int y=data[i].y;dis[y]=1;dfs(y,k);ans+=dp[y];\n    }printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1517576984,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4186 \u3010[USACO18JAN]Cow at Large G\u3011"
    }
]