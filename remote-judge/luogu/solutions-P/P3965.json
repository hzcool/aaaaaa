[
    {
        "content": "## \u601d\u8def\uff1a\n\u5176\u5b9e\u5176\u4ed6\u9898\u89e3\u601d\u8def\u8bb2\u7684\u5df2\u7ecf\u5dee\u4e0d\u591a\u4e86\uff0c\u6211\u53ea\u662f\u7c97\u7565\u7684\u8bc1\u660e\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u6bcf\u4e2a\u70b9\u5165\u5ea6\u80af\u5b9a\u5fc5\u4e3a1\n\n\u9996\u5148\u6211\u4eec\u8bc1\u660e\uff1a**\u82e5\u67d0\u4e2a\u70b9\u5165\u5ea6\u5927\u4e8e1\uff0c\u8fd9\u4e2a\u56fe\u4e00\u5b9a\u4e0d\u662f\u5faa\u73af\u56fe**\n\n\u663e\u7136\uff0c\u56e0\u4e3a**\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u90fd\u4e3a1**(\u7531\u9898\u610f\u5f97)\n\n\u5982\u679c\u67d0\u4e2a\u70b9\u5165\u5ea6\u5927\u4e8e1\uff0c\u90a3\u81f3\u5c11\u6709\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a0\n\n\u5165\u5ea6\u4e3a0\u7684\u70b9\u80af\u5b9a\u4e0d\u7b26\u5408\u6761\u4ef6\uff0c\u8bc1\u6bd5\u3002\n\n\u7136\u540e\u6211\u4eec\u8bc1\u660e\uff1a**\u82e5\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u5165\u5ea6\u90fd\u7b49\u4e8e1\uff0c\u8fd9\u4e2a\u56fe\u4e00\u5b9a\u662f\u5faa\u73af\u56fe**\n\n\u5176\u5b9e\u4e5f\u6bd4\u8f83\u663e\u7136\uff0c\u56e0\u4e3a**\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u90fd\u4e3a1**(\u7531\u9898\u610f\u5f97)\uff0c\n\n\u82e5\u67d0\u4e2a\u70b9\u4ece\u81ea\u5df1\u51fa\u53d1\u4e0d\u80fd\u56de\u5230\u81ea\u5df1\uff0c\u90a3\u5b83\u5c31\u4e0d\u80fd\u5230**\u6307\u5411\u5b83\u7684\u70b9**\uff0c\u540c\u65f6\u4e5f\u4e0d\u80fd\u5230**\u6307\u5411\u6307\u5411\u5b83\u7684\u70b9\u7684\u70b9**\u3002\u3002\u3002\n\n\u8fd9\u6837\u4e0b\u53bb\uff0c\u5b83\u5c31\u4e0d\u80fd\u5230\u81ea\u5df1\u4e86\uff0c\u77db\u76fe\uff0c\u8bc1\u6bd5\u3002\n\n## \u505a\u6cd5\uff1a\n\u5176\u4ed6\u9898\u89e3\u5e94\u8be5\u8bb2\u5f97\u591f\u6e05\u695a\u4e86\n\n## Code:\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\n#include<stack>\n#include<map>\n#include<deque>\n#define inf 0x7fffffff/2\n#define eps 1e-6\n#define N 100010\n#define M 21\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ninline ll read()\n{\n\tchar ch=getchar();\n\tll s=0,w=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\nstruct edge\n{\n\tint next,to,fl,v;\n}e[N<<1];\nint head[N],dist[N],pre[N],minn[N],cnt=1;\nint p[M][M],vis[N];\nqueue<int>Q;\nint n,m,V;\nint s,t;\nint x[4]={0,0,1,-1},y[4]={1,-1,0,0};\ninline int idx(int x,int y,int pos){return pos*V+(x-1)*m+y;}\ninline void add_edge(int from,int to,int fl,int v){e[++cnt].to=to;e[cnt].next=head[from];e[cnt].fl=fl;e[cnt].v=v;head[from]=cnt;}\nvoid update(int x,int flow)\n{\n\te[pre[x]].fl-=flow;\n\te[pre[x]^1].fl+=flow;\n\tif(e[pre[x]^1].to)update(e[pre[x]^1].to,flow);\n}\ninline int spfa()\n{\n\tmemset(vis,0,sizeof(vis));while(!Q.empty())Q.pop();\n\tfor(register int i=1;i<=t;i++)dist[i]=inf;\n\tminn[s]=inf;dist[s]=0;Q.push(s);vis[s]=1;\n\twhile(!Q.empty())\n\t{\n\t\tint x=Q.front();vis[x]=0;Q.pop();\n\t\tfor(register int i=head[x];i;i=e[i].next)\n\t\t{\n\t\t\tif(e[i].fl&&dist[e[i].to]>dist[x]+e[i].v)\n\t\t\t{\n\t\t\t\tdist[e[i].to]=dist[x]+e[i].v;\n\t\t\t\tminn[e[i].to]=min(minn[x],e[i].fl);\n\t\t\t\tpre[e[i].to]=i;\n\t\t\t\tif(!vis[e[i].to])\n\t\t\t\t{\n\t\t\t\t\tvis[e[i].to]=1;\n\t\t\t\t\tQ.push(e[i].to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(dist[t]==inf)return inf;\n\tupdate(t,minn[t]);\n\treturn dist[t]*minn[t];\n}\ninline int EK()\n{\n\tint sum=0;\n\twhile(1)\n\t{\n\t\tint x=spfa();\n\t\tif(x==inf)return sum;\n\t\tsum+=x;\n\t}\n\treturn sum;\n}//\u00d7\u00ee\u00d0\u00a1\u00b7\u00d1\u00d3\u00c3\u00d7\u00ee\u00b4\u00f3\u00c1\u00f7 \nint main()\n{\n\tn=read(),m=read();V=n*m+1;t=V*2+1;\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tchar s[M];\n\t\tscanf(\"%s\",s+1);\n\t\tfor(register int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(s[j]=='L'){p[i][j]=1;}\n\t\t\tif(s[j]=='R'){p[i][j]=0;}\n\t\t\tif(s[j]=='U'){p[i][j]=3;}\n\t\t\tif(s[j]=='D'){p[i][j]=2;}//\u00c5\u00d0\u00b6\u00cf\u00b7\u00bd\u00cf\u00f2 \n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=m;j++)\n\t\t{\n\t\t\tfor(register int k=0;k<4;k++)\n\t\t\t{\n\t\t\t\tint tox=i+x[k],toy=j+y[k];\n\t\t\t\tif(tox==0)tox=n;\n\t\t\t\tif(tox==n+1)tox=1;\n\t\t\t\tif(toy==0)toy=m;\n\t\t\t\tif(toy==m+1)toy=1;//\u00d7\u00a2\u00d2\u00e2\u00d4\u00bd\u00bd\u00e7\u00b5\u00c4\u00ca\u00b1\u00ba\u00f2\u00b5\u00c4\u00b4\u00a6\u00c0\u00ed \n\t\t\t\tint val=(!(p[i][j]==k));//\u00bf\u00b4\u00b5\u00b1\u00c7\u00b0\u00b7\u00bd\u00cf\u00f2\u00d3\u00eb\u00b1\u00be\u00c0\u00b4\u00b5\u00c4\u00b7\u00bd\u00cf\u00f2\u00ca\u00c7\u00b7\u00f1\u00cf\u00e0\u00cd\u00ac \n\t\t\t\tadd_edge(idx(i,j,0),idx(tox,toy,1),1,val);add_edge(idx(tox,toy,1),idx(i,j,0),0,-val);\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=m;j++)\n\t\t{\n\t\t\tadd_edge(s,idx(i,j,0),1,0);add_edge(idx(i,j,0),s,0,0);\n\t\t\tadd_edge(idx(i,j,1),t,1,0);add_edge(t,idx(i,j,1),0,0);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",EK());\n\treturn 0;\n}\n\n```\n**\u5982\u679c\u8ba4\u4e3a\u6211\u8fd9\u7bc7\u9898\u89e3\u5bf9\u4f60\u6709\u5e2e\u52a9\u7684\u53ef\u4ee5\u7ed9\u6211\u70b9\u4e00\u4e0b\u8d5eqwq\u3002\u5982\u679c\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u6216\u8005\u8ba4\u4e3a\u6211\u7684\u9898\u89e3\u6709\u4ec0\u4e48\u95ee\u9898\u7684\u8bdd\uff0c\u8bf7\u52a1\u5fc5\u79c1\u4fe1\u6211\uff0c\u611f\u6fc0\u4e0d\u5c3d\uff01\u6211\u4f1a\u52aa\u529b\u628a\u6211\u7684\u9898\u89e3\u5199\u5f97\u6700\u597d\u7684!**",
        "postTime": 1554045813,
        "uid": 72419,
        "name": "WAPER4EVER",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3965 \u3010[TJOI2013]\u5faa\u73af\u683c\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u5728\u7f51\u683c\u56fe\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u65b9\u5411\uff0c\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u4e4b\u540e\u8981\u5f80\u8fd9\u4e2a\u65b9\u5411\u8d70\u4e00\u683c\u8d70\u5230\u4e0b\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u8d70\u51fa\u7f51\u683c\u56fe\u5c31\u4ece\u53e6\u4e00\u8fb9\u8fdb\u53bb\uff0c\u8fd9\u4e9b\u65b9\u5411\u53ef\u4ee5\u66f4\u6539\uff0c\u8981\u6c42\u4ece\u4efb\u610f\u4e00\u70b9\u51fa\u53d1\uff0c\u7ecf\u8fc7\u82e5\u5e72\u6b65\u4e4b\u540e\u80fd\u91cd\u65b0\u56de\u5230\u6b64\u70b9\n\n\n### \u5206\u6790\n\n\u6bcf\u4e2a\u70b9\u90fd\u6709\u6307\u5411\uff0c\u90a3\u4e48\u8fb9\u6570\u5c31\u4e0e\u70b9\u6570\u76f8\u540c\uff0c\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u5c31\u662f1\n\n\u8981\u6c42\u80fd\u91cd\u65b0\u56de\u5230\u8fd9\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u70b9\u7684\u5165\u5ea6\u4e5f\u81f3\u5c11\u662f1\uff0c\u663e\u7136\uff0c\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u90fd\u662f1\n\n\u65e2\u7136\u6bcf\u4e2a\u70b9\u7684\u51fa\u3001\u5165\u5ea6\u90fd\u662f1\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f62\u6210\u82e5\u5e72\u4e2a\u73af\uff0c\u6bcf\u4e2a\u70b9\u7684\u51fa\u8fb9\u8fde\u5411\u53e6\u4e00\u4e2a\u70b9\uff0c\u67d0\u4e2a\u70b9\u7684\u51fa\u8fb9\u8fde\u5411\u8fd9\u4e2a\u70b9\n\n\u628a\u4e00\u4e2a\u70b9\u62c6\u62102\u4e2a\u70b9\uff0c\u6574\u5f20\u56fe\u4e0a\u6bcf\u4e2a\u51fa\u70b9\u4e0e\u5165\u70b9\u4e00\u4e00\u5339\u914d\n\n\u65e2\u7136\u8fd9\u4e9b\u70b9\u90fd\u4e00\u4e00\u5bf9\u5e94\uff0c\u90a3\u5c31\u53ef\u4ee5\u8dd1\u5e26\u6743\u4e8c\u5206\u56fe\u5339\u914d\u4e86\n\n### \u505a\u6cd5\n\n\u8ba9\u6bcf\u4e2a\u70b9\u5f804\u4e2a\u65b9\u5411\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a\u662f\u5426\u9700\u8981\u6539\u53d8\u65b9\u5411\n\n\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u4e0e\u8d85\u7ea7\u6c47\u70b9\uff0c\u8fde\u4e0a\u6bcf\u4e2a\u70b9\uff0c\u663e\u7136\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\n\n```cpp\nint now=get(i,j);\nADD(S,now,1,0),ADD(now+k,T,1,0);\nADD(now,get(i-1,j)+k,1,c[j]!='U');\nADD(now,get(i+1,j)+k,1,c[j]!='D');\nADD(now,get(i,j-1)+k,1,c[j]!='L');\nADD(now,get(i,j+1)+k,1,c[j]!='R');\n```\n\u6b64\u5904get(i,j)\u662f\u628a\u4e8c\u7ef4\u7684\u77e9\u9635\u8f6c\u5316\u4e3a\u4e00\u7ef4\uff0c\u5728\u8dd1\u8d39\u7528\u6d41\u7684\u65f6\u5019\u8f83\u65b9\u4fbf\n\n```cpp\nint get(int x,int y){\n\tx=x<1?x+n:(x>n?x-n:x);\n\ty=y<1?y+m:(y>m?y-m:y);\n\treturn (x-1)*m+y;\n}\n```\n\u8d39\u7528\u6d41\u6253\u7248\u5b50\u5373\u53ef\n\n\u5177\u4f53\u7ec6\u8282\u8bf7\u770b\u4ee3\u7801\n\n### \u89e3\u6cd5\n\n\u5e26\u6743\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u8d39\u7528\u6d41\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define IN inline\nusing namespace std;\nconst int maxn=10005,maxe=maxn<<3,INF=1<<30;\nint n,m,S,T,k,ans;\nint tot=1,lnk[maxn];\nint que[maxn],flow[maxn],dis[maxn],pre[maxn],lst[maxn];\nbool vis[maxn];\nchar c[20];\n\nstruct edge{\n\tint to,nxt,flow,dis;\n}e[maxe];\n\nIN int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\n\n\nIN int get(int x,int y){\n\tx=x<1?x+n:(x>n?x-n:x);\n\ty=y<1?y+m:(y>m?y-m:y);\n\treturn (x-1)*m+y;\n}\n/*\u4ee5\u4e0b\u662f\u8d39\u7528\u6d41\u677f\u5b50*/\nIN void add_e(int x,int y,int f,int d){\n\te[++tot]=(edge){y,lnk[x],f,d};\n\tlnk[x]=tot;\n}\nvoid ADD(int x,int y,int f,int d){\n\tadd_e(x,y,f,d),add_e(y,x,0,-d);\n}\n\nbool SPFA(int s,int t){\n\tfor(int i=1;i<=T;i++) flow[i]=dis[i]=INF,pre[i]=-1;\n\tint hed=0,til=1;\n\tque[1]=s,vis[s]=1,dis[s]=0,pre[t]=-1;\n\twhile(hed!=til){\n\t\tint x=que[hed=(++hed)%maxn];\n\t\tvis[x]=0;\n\t\tfor(int j=lnk[x];j;j=e[j].nxt){\n\t\t\tint y=e[j].to;\n\t\t\tif(e[j].flow&&dis[y]>dis[x]+e[j].dis){\n\t\t\t\tdis[y]=dis[x]+e[j].dis;\n\t\t\t\tflow[y]=min(flow[x],e[j].flow);\n\t\t\t\tpre[y]=x;\n\t\t\t\tlst[y]=j;\n\t\t\t\tif(!vis[y]){\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t\tque[til=(++til)%maxn]=y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn pre[t]!=-1;\n}\n\nvoid MCMF(int s,int t){\n\twhile(SPFA(s,t)){\n\t\tans+=(LL)flow[t]*dis[t];\n\t\tint now=t;\n\t\twhile(now!=s){\n\t\t\te[lst[now]].flow-=flow[t];\n\t\t\te[lst[now]^1].flow+=flow[t];\n\t\t\tnow=pre[now];\n\t\t}\n\t}\n\treturn;\n}\n/*\u4ee5\u4e0a\u662f\u8d39\u7528\u6d41\u677f\u5b50*/\nint main(){\n\tfreopen(\"P3965.in\",\"r\",stdin);\n\tfreopen(\"P3965.out\",\"w\",stdout);\n\tn=read(),m=read(),k=n*m;//k\u662f\u77e9\u9635\u5927\u5c0f\uff0c\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210x\uff08\u51fa\u70b9\uff09\u4e0ex+k\uff08\u5165\u70b9\uff09\n\tS=2*n*m+1,T=2*n*m+2;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",c+1);\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tint now=get(i,j);\n\t\t\tADD(S,now,1,0),ADD(now+k,T,1,0);\n\t\t\tADD(now,get(i-1,j)+k,1,c[j]!='U');\n\t\t\tADD(now,get(i+1,j)+k,1,c[j]!='D');\n\t\t\tADD(now,get(i,j-1)+k,1,c[j]!='L');\n\t\t\tADD(now,get(i,j+1)+k,1,c[j]!='R');\n\t\t}\n\t}\n\tMCMF(S,T);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1565824172,
        "uid": 116251,
        "name": "\u7834\u5fc6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3965 \u3010[TJOI2013]\u5faa\u73af\u683c\u3011"
    },
    {
        "content": "**\u9898\u76ee\u5927\u610f\uff1a** \u7ed9\u5b9a\u4e00\u4e2a $n \\times m$ \u7684\u5b57\u7b26\u4e32\u7f51\u683c\u56fe\uff0c\u5b57\u7b26\u96c6\u4e3a $\\{\\texttt{L},\\,\\texttt{R},\\,\\texttt{U},\\,\\texttt{D}\\}$\uff0c\u5206\u522b\u4ee3\u8868\u82e5\u8fdb\u5165\u5f53\u524d\u7f51\u683c\uff0c\u5219\u9700\u8981\u5206\u522b\u5411\u5de6\uff0c\u53f3\uff0c\u4e0a\uff0c\u4e0b\u65b9\u5411\u8d70\u4e00\u683c\u3002\u6c42\u51fa\u4e00\u4e2a\u4fee\u6539\u7f51\u683c\u56fe\u4e2d\u5b57\u7b26\u7684\u65b9\u6848\uff0c\u4f7f\u5f97**\u4ece\u4efb\u610f\u521d\u59cb\u7f51\u683c\u51fa\u53d1\uff0c\u7ecf\u8fc7\u82e5\u5e72\u8f6e\u4e4b\u540e\u90fd\u4f1a\u56de\u5230\u521d\u59cb\u7f51**\u683c\uff0c\u8f93\u51fa\u6700\u5c0f\u7684\u4fee\u6539\u6b21\u6570\u3002\n\n### Solution\n\n\u4e00\u822c\u6765\u8bf4\u8fd9\u79cd\u72b6\u538b\u5f88\u96be\u505a\u7684\u5c0f\u8303\u56f4\u7684\u7f51\u683c\u9898\uff0c\u5f80\u7f51\u7edc\u6d41\u7684\u65b9\u5411\u60f3\u662f\u6ca1\u6709\u9519\u7684\u3002\n\n- **\u7ed3\u8bba $1$\uff1a** \u82e5\u5c06**\u7b54\u6848\u7684\u7f51\u683c\u56fe**\u4e2d\u7f51\u683c\u6240\u6307\u5411\u7684\u65b9\u5411\u8fde\u4e00\u6761\u6709\u5411\u8fb9\uff0c\u5efa\u51fa\u7684\u6709\u5411\u56fe\u6ee1\u8db3**\u6240\u6709\u7ed3\u70b9\u7684\u5165\u5ea6\u90fd\u4e3a $1$\u3002**\n\n**\u8bc1\u660e\uff1a** \n\n\u663e\u7136\uff0c\u6240\u6709\u7ed3\u70b9\u7684\u51fa\u5ea6\u90fd\u4e3a $1$\uff0c\u56fe\u4e2d\u7ed3\u70b9\u7684\u51fa\u5ea6\u4e4b\u548c\u4e3a $n \\times m$\u3002\n\n\u53c8\uff0c\u6709\u5411\u56fe\u4e2d\u7ed3\u70b9\u5165\u5ea6\u4e4b\u548c\u4e0e\u51fa\u5ea6\u4e4b\u548c\u76f8\u7b49\uff0c\u6240\u4ee5\u56fe\u4e2d\u7ed3\u70b9\u5165\u5ea6\u4e4b\u548c\u4e3a $n \\times m$\u3002\n\n\u8003\u8651\u53cd\u8bc1\u6cd5\uff0c\u8bbe\u5b58\u5728\u4e00\u4e2a\u7ed3\u70b9\u5165\u5ea6\u5927\u4e8e\u7b49\u4e8e $2$\u3002\u5219\u5269\u4e0b $n \\times m - 1$ \u4e2a\u7ed3\u70b9\u7684\u5165\u5ea6\u4e4b\u548c\u5fc5\u7136\u5c0f\u4e8e\u6216\u7b49\u4e8e $n \\times m - 2$\uff0c\u6839\u636e\u62bd\u5c49\u539f\u7406\uff0c\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u7ed3\u70b9\u5165\u5ea6\u4e3a $0$\u3002\u800c\u4ece\u5165\u5ea6\u4e3a $0$ \u7684\u7ed3\u70b9\u51fa\u53d1\uff0c\u5fc5\u7136\u4e0d\u5b58\u5728\u4efb\u4f55\u8fdb\u5165\u8be5\u7ed3\u70b9\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u6ca1\u6709\u7ed3\u70b9\u7684\u5165\u5ea6\u5927\u4e8e\u7b49\u4e8e $2$\u3002\u7ed3\u70b9\u5165\u5ea6\u4e3a $0$ \u7684\u60c5\u51b5\u540c\u7406\u3002\n\n\u8bc1\u6bd5\u3002\n\n- **\u7ed3\u8bba $2$**\uff1a\u5728\u4efb\u610f\u5408\u6cd5\u65b9\u6848\u4e2d\uff0c\u82e5\u5c06\u4efb\u610f\u7ed3\u70b9\u6240\u51fa\u53d1\u7684\u56de\u8def\u89c6\u8bb0\u5f55\u4e0b\u6765\uff0c**\u8fd9\u4e9b\u56de\u8def\u4e24\u4e24\u4e4b\u95f4\u5fc5\u7136\u4e0d\u76f8\u4ea4\u3002**\n\n\u8bc1\u660e\uff1a\u5047\u8bbe\u5b58\u5728\u4e24\u4e2a\u56de\u8def\u76f8\u4ea4\uff0c\u5219\u5728\u5176\u4e2d\u67d0\u4e00\u56de\u8def\u7684\u67d0\u4e00\u7ed3\u70b9\u4e0a\u5fc5\u7136\u5b58\u5728\u51fa\u8fb9\u540c\u65f6\u6307\u5411\u8be5\u56de\u8def\u7684\u67d0\u4e2a\u7ed3\u70b9\u548c\u53e6\u4e00\u4e2a\u56de\u8def\u7684\u67d0\u4e2a\u7ed3\u70b9\uff0c\u4e0e\u7ed3\u70b9\u51fa\u5ea6\u90fd\u4e3a $1$ \u77db\u76fe\uff0c\u6240\u4ee5\u56de\u8def\u4e4b\u95f4\u5fc5\u7136\u4e24\u4e24\u4e0d\u76f8\u4ea4\u3002\uff08\u8fd9\u70b9\u5f88\u91cd\u8981\uff09\n\n\u5982\u679c\u60a8\u505a\u8fc7 [P4003](https://www.luogu.com.cn/problem/P4003)\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2a\u5f31\u5316\u7248\u3002\n\n\u7531\u4e8e\u8981\u540c\u65f6\u65b9\u6848\u7684\u5408\u6cd5\u6027\u548c\u4fee\u6539\u7684\u6700\u4f18\u6027\uff0c\u8003\u8651\u8d39\u7528\u6d41\u3002\n\n\u4e3a\u4e86\u540c\u65f6\u63cf\u8ff0\u6bcf\u4e2a\u7ed3\u70b9\u662f\u51fa\u6d41\u8fd8\u662f\u5165\u6d41\uff0c\u6211\u4eec\u9009\u62e9\u62c6\u70b9\uff0c\u5c06 $u$ \u62c6\u4e3a $u'$ \u548c $u''$\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u7684\u6d41\u662f\u8981\u4ece $u$ \u51fa\u53bb\u8fd8\u662f\u76f4\u63a5\u4ece $u$ \u8fdb\u53bb\u3002\n\n\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u53ef\u4ee5\u51fa\u53d1\uff0c\u4e8e\u662f\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9 $s$\uff0c\u4ece $s$ \u8fde\u5411\u6240\u6709\u7ed3\u70b9 $u$ \u7684\u5165\u70b9 $u'$\u3002\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$\u3002\n\n$u$ \u53ef\u4ee5\u65e0\u4ee3\u4ef7\u7684\u8d70\u5230\u5f53\u524d\u65b9\u5411\u6240\u4ee3\u8868\u7684\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fde\u5bf9\u5e94\u65b9\u5411\u7684\u7ed3\u70b9\u7684**\u51fa\u70b9**\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$\u3002\u5176\u4ed6\u65b9\u5411\u9700\u8981\u4e00\u6b21\u8d39\u7528\u4e3a $1$ \u7684\u9009\u62e9\uff0c\u5bb9\u91cf\u4ecd\u7136\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $1$\u3002\uff08\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u5f97\u5bb9\u91cf\u4e3a $1$ \u7684\u539f\u56e0\u5c31\u662f\u5f15\u7406 $2$ \u7684\u9650\u5236\uff0c\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u5fc5\u7136\u53ea\u88ab\u4e00\u4e2a\u56de\u8def\u7ecf\u8fc7\uff09\n\n\u6b64\u65f6\u6211\u4eec\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u7684\u51fa\u70b9\uff0c\u76f4\u63a5\u8fde\u5411\u8d85\u7ea7\u6c47\u70b9 $t$ \u5373\u53ef\u3002\n\n\u8dd1\u8d39\u7528\u6d41\uff0c\u8d39\u7528\u6d41\u5373\u4e3a\u7b54\u6848\u3002\n\n#### \u8003\u8651\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\u662f\u5bf9\u7684\u3002\n\n\u9996\u5148\u8bc1\u660e\u5176**\u5408\u6cd5\u6027\u3002**\n\n\u8981\u8bc1\u660e\u5408\u6cd5\u6027\uff0c\u9996\u5148\u6709 $n,\\,m \\ge 2$ \u65f6\u7b54\u6848\u7684**\u5b58\u5728\u6027**\u3002\n\n\u8fd9\u672c\u8d28\u4e0a\u662f\u7f51\u683c\u56fe\u7684\u591a\u91cd\u56de\u8def\u8986\u76d6\u95ee\u9898\u8ba1\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u6784\u9020\uff0c\u7565\u3002\n\n\u8bc1\u660e\u4e86\u5b58\u5728\u6027\uff0c\u5219\u82e5\u8981\u4f7f\u5f97\u6700\u5927\u6d41\u6700\u5927\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u5fc5\u7136\u51fa\u53bb\u4e86\u4e00\u4e2a\u6d41\uff0c\u8fdb\u5165\u4e86\u4e00\u4e2a\u6d41\uff0c\u4f7f\u5f97\u603b\u548c\u4e3a $n \\times m$\uff0c\u6309\u7167\u6d41\u7684\u65b9\u5411\u6784\u9020\u65b9\u6848\u3002\u8fd9\u70b9\u53ef\u4ee5\u76f4\u63a5\u6784\u9020\u4e00\u4e2a\u591a\u91cd\u56de\u8def\u8986\u76d6\u7136\u540e\u5c06\u73af\u4e0a\u7684\u7ed3\u70b9\u7684\u6d41\u5f3a\u5236\u5bfc\u5411\u4e0b\u4e00\u4e2a\u7ed3\u70b9\uff0c\u6700\u5927\u6d41\u5df2\u7ecf\u662f $n \\times m$ \u4e86\uff0c\u8be5\u65b9\u6848\u7684\u5408\u6cd5\u6027\u662f\u663e\u7136\u7684\u3002\n\n\u63a5\u4e0b\u6765\u8bc1\u660e\u5176**\u6700\u4f18\u6027**\uff0c\u5047\u8bbe\u5b58\u5728\u65b9\u6848\u4f7f\u5f97\u6700\u5c0f\u8d39\u7528\u4e0d\u4f18\uff0c\u5219\u76f4\u63a5\u6309\u7167\u8be5\u65b9\u6848\uff0c\u5728\u73af\u4e0a\u5c06\u6bcf\u4e2a\u7ed3\u70b9\u5bfc\u5411\u73af\u4e0a\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u7684\u51fa\u70b9\u3002\u8be5\u6d41\u662f\u5408\u6cd5\u7684\uff0c\u4e0e\u6700\u5c0f\u8d39\u7528\u77db\u76fe\u3002\u6240\u4ee5\u6700\u5c0f\u8d39\u7528\u6d41\u7684\u8d39\u7528\u5373\u4e3a\u6700\u4f18\u65b9\u6848\u7684\u7b54\u6848\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\uff08\u8fdc\u53e4\u4ee3\u7801\uff0c\u8bf7\u89c1\u8c05\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define inf 1000000000000000\n#define V 100100\n#define E 500100\ntypedef long long int ll;\nstruct edge {\n\tint to, next;\n\tll capa, cost;\n};\nint cnt = 0, head[V], n, m; edge node[E];\ninline void add(int fir, int nxt, ll w, ll c) {\n\tnode[cnt].to = nxt,\n\t\tnode[cnt].capa = w,\n\t\tnode[cnt].cost = c,\n\t\tnode[cnt].next = head[fir],\n\t\thead[fir] = cnt++;\n}\nint s, t, cur[V]; deque<int>que; ll dep[V], sum = 0, cost = 0;\nbool vis[V];\ninline bool spfa() {\n\tfor (register int i = 1; i <= t; ++i)dep[i] = inf;\n\tdep[s] = 0; que.push_back(s); int u, v;\n\twhile (!que.empty()) {\n\t\tv = que.front(); que.pop_front();\n\t\tfor (register int i = head[v]; i != -1; i = node[i].next) {\n\t\t\tu = node[i].to;\n\t\t\tif (dep[v] + node[i].cost < dep[u] && node[i].capa) {\n\t\t\t\tdep[u] = dep[v] + node[i].cost;\n\t\t\t\tif (!que.empty() && dep[u] < dep[que.front()])que.push_front(u);\n\t\t\t\telse que.push_back(u);\n\t\t\t}\n\t\t}\n\t}\n\treturn (dep[t] != inf);\n}\nll dfs(register int v, register ll flow) {\n\tif (flow == 0 || v == t)return flow; ll used = 0, wei = 0;\n\tvis[v] = true;\n\tfor (register int i = cur[v]; i != -1; i = node[i].next) {\n\t\tcur[v] = i;\n\t\tif (!vis[node[i].to] && dep[node[i].to] == dep[v] + node[i].cost && node[i].capa) {\n\t\t\twei = dfs(node[i].to, min(flow - used, node[i].capa));\n\t\t\tif (wei) {\n\t\t\t\tnode[i].capa -= wei,\n\t\t\t\t\tnode[i ^ 1].capa += wei,\n\t\t\t\t\tused += wei,\n\t\t\t\t\tcost += node[i].cost * wei;\n\t\t\t}\n\t\t}\n\t\tif (used == flow)break;\n\t}\n\tvis[v] = false;\n\treturn used;\n}\ninline void Dinic() {\n\twhile (spfa()) {\n\t\tmemcpy(cur, head, (t + 1) * sizeof(int));\n\t\tsum += dfs(s, inf);\n\t}\n}\ninline void addE(int u, int v, ll w, ll c) {\n\tadd(u, v, w, c);\n\tadd(v, u, 0, -c);\n}\ninline int iid(int x, int y) {\n\treturn (x - 1) * m + y;\n}\ninline int oid(int x, int y) {\n\treturn iid(x, y) + n * m;\n}\nint mtx[205][205]; char c;\nint dx[5] = { 0, 1, 0 ,-1, 0 }, dy[5] = { 0, 0, 1, 0, -1 };\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(); cout.tie();\n\tmemset(head, -1, V * sizeof(int));\n\tcin >> n >> m; s = 2 * n * m + 1, t = 2 * n * m + 2;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tcin >> c;\n\t\t\tif (c == 'D')mtx[i][j] = 1;\n\t\t\telse if (c == 'R')mtx[i][j] = 2;\n\t\t\telse if (c == 'U')mtx[i][j] = 3;\n\t\t\telse mtx[i][j] = 4;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\taddE(s, iid(i, j), 1, 0);\n\t\t\taddE(oid(i, j), t, 1, 0);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tfor (int k = 1; k <= 4; k++) {\t\n\t\t\t\tint nx = i + dx[k], ny = j + dy[k];\n\t\t\t\tif (nx == 0)nx = n;\n\t\t\t\telse if (nx == n + 1)nx = 1;\n\t\t\t\tif (ny == 0)ny = m;\n\t\t\t\telse if (ny == m + 1)ny = 1;\n\t\t\t\tif (k != mtx[i][j])addE(iid(i, j), oid(nx, ny), 1, 1);\n\t\t\t\telse addE(iid(i, j), oid(nx, ny), 1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tDinic();\n\tcout << cost << \"\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1679667185,
        "uid": 551861,
        "name": "wql_cai",
        "ccfLevel": 4,
        "title": "P3965-Solution"
    },
    {
        "content": "\u603b\u4f53\u6765\u8bf4\u8fd9\u9898\u6bcf\u4e00\u6b65\u9700\u8981\u7684\u601d\u7ef4\u542b\u91cf\u90fd\u4e0d\u5927\u3002\n\n\u7136\u800c\u6211\u5e76\u6ca1\u60f3\u51fa\u6765\u3002\n\n\u9996\u5148\u7b2c\u4e00\u4e2a\u6bd4\u8f83\u5bb9\u6613yy\u7684\u7ed3\u8bba\uff1a\u6bcf\u4e2a\u70b9\u5165\u5ea6\u51fa\u5ea6\u5fc5\u987b\u4e3a1.\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5efa\u56fe\uff0c\u5148\u62c6\u70b9\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u4e3a0\uff0c\u6240\u4ee5\u6e90\u70b9\u63d0\u4f9b1\u7684\u6d41\u91cf\u7ed9\u6bcf\u4e2a\u70b9\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u5165\u5ea6\u4e3a0\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u5411\u6c47\u70b9\u7684\u8fb9\u6d41\u91cf\u4e3a1.\n\n\u8003\u8651\u5982\u4f55\u5206\u914d\u4e00\u4e2a\u70b9\u7684\u51fa\u5ea6\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u7ed9\u53e6\u5916\u4e00\u4e2a\u70b9\u589e\u52a0\u5165\u5ea6\uff09\u3002\u91c7\u7528\u8d39\u7528\u6d41\uff0c\u82e5\u4e0e\u5f53\u524d\u65b9\u5411\u4e0d\u540c\uff0c\u8d39\u7528\u4e3a1\uff0c\u5426\u5219\u4e3a0\uff0c\u6d41\u91cf\u6052\u4e3a1.\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=20,maxn=700,M=100005,mod=600;\nstruct edge{\n\tint link,next,w1,w2,opp;\n}e[M];\nint g[N][N],n,m,tot,S,T,head[maxn];\nint xx[4]={0,0,-1,1},yy[4]={-1,1,0,0};\nchar s[N];\ninline void add_edge(int u,int v,int w1,int w2){\n\te[++tot]=(edge){v,head[u],w1,w2}; head[u]=tot;\n}\ninline void insert(int u,int v,int w1,int w2){\n\tadd_edge(u,v,w1,w2); e[tot].opp=tot+1;\n\tadd_edge(v,u,0,-w2); e[tot].opp=tot-1;\n}\nint id[200];\ninline void init(){\n\tscanf(\"%d%d\",&n,&m);\n\tid['L']=0; id['R']=1; id['U']=2; id['D']=3;\n\tfor (int i=1;i<=n;i++){\n\t\tfor (int j=1;j<=m;j++){\n\t\t\tg[i][j]=(i-1)*m+j;\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s+1);\n\t\tfor (int j=1;j<=m;j++){\n\t\t\tfor (int k=0;k<4;k++){\n\t\t\t\tint X=(i+xx[k]-1+n)%n+1,Y=(j+yy[k]-1+m)%m+1;\n\t\t\t\tif (k==id[s[j]]){\n\t\t\t\t\tinsert(g[i][j],g[X][Y]+n*m,1,0);\n\t\t\t\t}else{\n\t\t\t\t\tinsert(g[i][j],g[X][Y]+n*m,1,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nconst int inf=1e9;\nbool vis[maxn];\nint ans,flow[maxn],pre[maxn],pred[maxn],dis[maxn],q[maxn],h,t;\ninline void back(int i,int w){e[i].w1-=w; e[e[i].opp].w1+=w;}\ninline int spfa(){\n\tmemset(dis,127/3,sizeof(dis));\n\tdis[S]=0; q[++t]=S; flow[S]=inf; flow[T]=0;\n\twhile (h!=t){\n\t\tint u=q[h=h%mod+1];\n\t\tfor (int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].link;\n\t\t\tif (e[i].w1&&dis[v]>dis[u]+e[i].w2){\n\t\t\t\tdis[v]=dis[u]+e[i].w2; pre[v]=u; pred[v]=i;\n\t\t\t\tflow[v]=min(flow[u],e[i].w1);\n\t\t\t\tif (!vis[v]){\n\t\t\t\t\tq[t=t%mod+1]=v;\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[u]=0;\n\t}\n\tif (flow[T]==0) return 0;\n\tint u=T;\n\twhile (u!=S){\n\t\tback(pred[u],flow[T]);\n\t\tu=pre[u];\n\t}\n\tans+=flow[T]*dis[T];\n\treturn 1;\n}\ninline void solve(){\n\tT=n*m*2+1;\n\tfor (int i=1;i<=n*m;i++){\n\t\tinsert(S,i,1,0);\n\t\tinsert(i+n*m,T,1,0);\n\t}\n\twhile (spfa());\n\tprintf(\"%d\\n\",ans);\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1529322108,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3965 \u3010[TJOI2013]\u5faa\u73af\u683c\u3011"
    },
    {
        "content": "\u5efa\u56fe\u65b9\u6cd5 \u597d\u795e \u554a \u81ea\u5df1yy\u4e00\u4e2a\u9519\u8bef\u505a\u6cd5 \u53ef\u60dc\u6700\u540e\u8fd8\u662f\u770b\u4e86\u9898\u89e3\u7684\n\n\u9488\u5bf9\u539f\u9898\u7684\u8fd9\u4e2a\u8981\u6c42\u53ef\u4ee5\u8f6c\u5316\u6210 \u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u6070\u597d\u4e3a1  \u4fdd\u8bc1\u8fd9\u4e00\u70b9\u5373\u53ef\n\n\u90a3\u4e48\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u5165\u5ea6\u70b9\u548c\u51fa\u5ea6\u70b9 \u7136\u540e\u4e92\u76f8\u8fde\u8fb9\u8dd1\u8d39\u7528\u6d41\u5373\u53ef\n\n\u6e90\u70b9\u5411\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u8fde\u8fb9 \u6bcf\u4e2a\u70b9\u51fa\u5ea6\u5411\u6c47\u70b9\u8fde\u8fb9   \u7136\u540e\u5411\u56db\u5468\u8fde\u8fb9 \u5982\u679c\u539f\u6765\u5c31\u662f\u6307\u5411\u8fd9\u4e2a\u65b9\u5411 \u90a3\u4e48\u663e\u7136 \u82b1\u8d39\u5c31\u662f0\u5426\u5219\u6211\u9700\u8981\u82b1\u8d391\u624d\u53ef\u4ee5 \u4e3a\u4e86\u6ee1\u8db3\u539f\u56fe\u7684\u8981\u6c42 \u6211\u80af\u5b9a\u662f\u6700\u5927\u6d41\u5c31\u53ef\u4ee5\u6ee1\u8db3 \u8fd9\u65f6\u5019\u518d\u770b\u4e0b\u8d39\u7528\u5373\u53ef\n\n[\u8fa3\u9e21\u849f\u84bb\u6211\u7684blog QWQ](http://www.elijahqi.win/2017/12/11/bzoj3171luogu3965-tjoi2013\u5faa\u73af\u683c/ \"\u8fa3\u9e21\u849f\u84bb\u6211\u7684blog QWQ\")\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define inf 0x3f3f3f3f\n#define N 500\nusing namespace std;\nchar s[N][N];\nint dx[]={0,1,0,-1},dy[]={1,0,-1,0},num=1,r,c,T,nn;\ninline int calc(int x,int y,int op){\n    if (op==1) return (x-1)*c+y;else return (x-1)*c+y+nn;\n}\nint h[N],pre[N],path[N],flag[N],f[N];\nstruct node{\n    int y,z,next,c;\n}data[N<<4];\ninline void insert1(int x,int y,int z,int c){\n    data[++num].y=y;data[num].z=z;data[num].next=h[x];h[x]=num;data[num].c=c;\n    data[++num].y=x;data[num].z=0;data[num].next=h[y];h[y]=num;data[num].c=-c;\n}\ninline bool spfa(){\n    queue<int>q;memset(flag,0,sizeof(flag));memset(f,0x3f,sizeof(f));flag[0]=1;f[0]=0;memset(pre,-1,sizeof(pre));q.push(0);\n    while(!q.empty()){\n        int x=q.front();q.pop();flag[x]=0;\n        for (int i=h[x];i;i=data[i].next){\n            int y=data[i].y,z=data[i].z,c=data[i].c;\n            if (f[x]+c<f[y]&&z){\n                f[y]=f[x]+c;pre[y]=x;path[y]=i;\n                if (!flag[y]) flag[y]=1,q.push(y);\n            }\n        }\n    }if (pre[T]==-1) return 0;else return 1;\n}\nint main(){\n    freopen(\"bzoj3171.in\",\"r\",stdin);\n    scanf(\"%d%d\",&r,&c);T=r*c*2+1;nn=r*c;\n    for (int i=1;i<=r;++i) scanf(\"%s\",s[i]+1);\n    for (int i=1;i<=r;++i){\n        for (int j=1;j<=c;++j){\n            int tmp;if (s[i][j]=='R') tmp=0;insert1(0,calc(i,j,1),1,0);insert1(calc(i,j,2),T,1,0);\n            if (s[i][j]=='D') tmp=1;if(s[i][j]=='L') tmp=2;if (s[i][j]=='U') tmp=3;\n            for (int k=0;k<4;++k){\n                int x1=i+dx[k],y1=j+dy[k];if (x1==0) x1=r;if (x1==r+1) x1=1;if (y1==0) y1=c;if (y1==c+1) y1=1;\n                if(tmp==k){insert1(calc(i,j,1),calc(x1,y1,2),1,0);continue;}\n                insert1(calc(i,j,1),calc(x1,y1,2),1,1);\n            }\n        }\n    }int ans=0;\n    while(spfa()){\n        int now=T,minn=inf;\n        while(now) minn=min(minn,data[path[now]].z),now=pre[now];now=T;\n        while(now){ans+=minn*data[path[now]].c;data[path[now]].z-=minn;data[path[now]^1].z+=minn;now=pre[now];}\n    }printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1512999509,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3965 \u3010[TJOI2013]\u5faa\u73af\u683c\u3011"
    },
    {
        "content": "\u95ee\u9898\u7684\u672c\u8d28\u4e3a\uff0c \u5c06\u4e00\u4e2an\u4e2a\u70b9n\u6761\u8fb9\u7684\u56fe\u6539\u53d8\u6700\u5c11\u7684\u8fb9\uff0c\u4f7f\u5f97\u5b83\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u6570\u81f3\u5c11\u4e3a2\uff08\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u4e00\u4e2a\u5355\u72ec\u7684\u70b9\u89c6\u4f5c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff09\n\n\u95ee\u9898\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u7b49\u4e8e1\uff1b\n\n\u8bc1\u660e\uff1a\n\u82e5\u5b58\u5728\u5165\u5ea6\u7b49\u4e8e0\u7684\u70b9\uff0c\u8be5\u56fe\u4e0d\u5f3a\u8fde\u901a\n\u82e5\u7c97\u5728\u5165\u5ea6\u5927\u4e8e1\u7684\u70b9\uff0c\u5219\u4e0d\u6b62n\u6761\u8fb9\n\n\u6027\u8d28\uff1a\u6bcf\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u90fd\u4e0d\u4f1a\u4e0e\u53e6\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u6709\u8fb9\uff08\u5426\u5219\u5fc5\u7136\u5b58\u5728\u5165\u5ea6\u5927\u4e8e1\uff09\n\n\u4e0d\u96be\u60f3\u8c61\u9898\u76ee\u7684\u5269\u4e0b\u5efa\u56fe\u65b9\u6cd5\n\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n \nconst int INF = 0x3f3f3f3f;\nconst int maxn = 650;\nconst int maxm = 25000;\nchar ch[maxn][maxn];\nint mp[maxn][maxn];\nint xx[4]={0,0,-1,1},yy[4]={-1,1,0,0};\n \ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\n    while (ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n \nstruct Edge\n{\n    int to, next, cap, flow, cost;\n}edge[maxm];\nint head[maxn], tol;\nint pre[maxn], dis[maxn];\nbool vis[maxn];\nint N ;//\u8282\u70b9\u603b\u4e2a\u6570\uff0c\u8282\u70b9\u7f16\u53f7\u4ece0~N-1\nvoid init(int n)\n{\n    N = n;\n    tol = 0;\n    memset(head, -1, sizeof(head));\n}\nvoid addedge(int u, int v, int cap, int cost)\n{\n    edge[tol].to = v;\n    edge[tol].cap = cap;\n    edge[tol].cost = cost;\n    edge[tol].flow = 0;\n    edge[tol].next = head[u];\n    head[u] = tol++;\n    edge[tol].to = u;\n    edge[tol].cap = 0;\n    edge[tol].cost = -cost;\n    edge[tol].flow = 0;\n    edge[tol].next = head[v];\n    head[v] = tol++;\n}\n \nbool spfa(int s, int t)\n{\n    queue<int>q;\n    for(int i = 0; i < N; i++)\n    {\n        dis[i] = INF;\n        vis[i] = false;\n        pre[i] = -1;\n    }\n    dis[s] = 0;\n    vis[s] = true;\n    q.push(s);\n    while(!q.empty())\n    {\n        int u = q.front();\n        q.pop();\n        vis[u] = false;\n        for(int i = head[u]; i != -1; i = edge[i].next)\n        {\n            int v = edge[i].to;\n            if(edge[i].cap > edge[i].flow && dis[v] > dis[u] + edge[i].cost)\n            {\n                dis[v] = dis[u] + edge[i].cost;\n                    pre[v] = i;\n                if(!vis[v])\n                {\n                    vis[v] = true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    if(pre[t] == -1) return false;\n    else return true;\n}\n \nint minCostMaxflow(int s, int t, int &cost)\n{\n    int flow = 0;\n    cost = 0;\n    while(spfa(s,t))\n    {\n        int Min = INF;\n        for(int i = pre[t]; i != -1; i = pre[edge[i^1].to])\n        {\n            if(Min > edge[i].cap - edge[i].flow)\n                Min = edge[i].cap - edge[i].flow;\n        }\n        for(int i = pre[t]; i != -1; i = pre[edge[i^1].to])\n        {\n            edge[i].flow += Min;\n            edge[i^1].flow -= Min;\n            cost +=  edge[i].cost*Min;\n        }\n        flow += Min;\n    }\n    return flow;\n}\n \nint main()\n{\n    int l, r;\n    cin >> l >> r;\n    for(int i = 1; i <= l; i++)\n    {\n        scanf(\"%s\", ch[i]+1);\n        for(int j = 1; j <= r; j++)\n        {\n            if(ch[i][j] == 'L') mp[i][j] = 0;\n            else if(ch[i][j] == 'R') mp[i][j] = 1;\n            else if(ch[i][j] == 'U') mp[i][j] = 2;\n            else if(ch[i][j] == 'D') mp[i][j] = 3;\n        }\n    }\n    int s = 0, t = l*r*2+1;\n    init(t+1);\n    for(int i = 1; i <= l; i++)\n    {\n        for(int j = 1; j <= r; j++)\n        {\n            for(int k = 0; k < 4; k++)\n            {\n                int nowx = i+xx[k], nowy = j+yy[k];\n                if(nowx > l) nowx=1; if(nowx<1)nowx = l;\n                if(nowy > r) nowy=1; if(nowy<1)nowy = r;\n                if(k == mp[i][j])\n                {\n                    addedge((i-1)*r+j, (nowx-1)*r+nowy+l*r, 1, 0);\n                }\n                else\n                {\n                    addedge((i-1)*r+j, (nowx-1)*r+nowy+l*r, 1, 1);\n                }\n            }\n        }\n    }\n    for(int i = 1; i <= l*r; i++)\n    {\n        addedge(s, i, 1, 0);\n        addedge(i+l*r, t, 1, 0);\n    }\n    int c;\n    minCostMaxflow(s,t,c);\n    cout << c;\n    return 0;\n}\n\ufeff\n```\n",
        "postTime": 1561686978,
        "uid": 205840,
        "name": "Mark_4396",
        "ccfLevel": 0,
        "title": "P3965&&BZOJ3965"
    },
    {
        "content": "[$$\\color{#0e90d2}\\huge{\\texttt{my blog}}$$](https://wxwoo.github.io/2019/03/13/solution-p3965/)\n\n******\n\n[\u539f\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P3965)\n\n~~\u6d1b\u8c37\u968f\u673a\u8df3\u9898\u8df3\u5230\u7684~~\n\n\u6709\u6307\u5411\uff0c\u6709\u4fee\u6539\uff0c\u6c42\u6700\u5c0f\uff1a~~\u660e\u663e\u7684~~\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\n\u6211\u4eec\u5c06\u6bcf\u4e2a\u683c\u5b50\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u62c6\u70b9\uff0c\u5982\u4e0b\u5efa\u8fb9\uff1a\n\n> 1. \u6e90\u70b9\u5411\u6bcf\u4e2a\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\n>\n> 1. \u6bcf\u4e2a\u70b9\u7684\u62c6\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\n>\n> 1. \u6bcf\u4e2a\u70b9\u5411\u56db\u5468\u7684\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a1\uff0c\u9ed8\u8ba4\u6307\u5411\u8d39\u7528\u4e3a0\uff0c\u5176\u4ed6\u4e3a1\n\n\u4e0b\u9762\u6211\u4eec\u601d\u8003\u8fd9\u6837\u5efa\u8fb9\u7684\u6b63\u786e\u6027\n\n\u6839\u636e\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7684\u6027\u8d28\uff0c\u4e00\u5b9a\u4f1a\u4f18\u5148\u8d39\u7528\u4e3a0\u7684\u8fb9\uff08\u4e5f\u5c31\u662f\u9ed8\u8ba4\u6307\u5411\uff09\n\n\u7531\u4e8e\u6bcf\u6761\u8fb9\u6d41\u91cf\u90fd\u662f1\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u6307\u5411\u8fd9\u79cd\u60c5\u51b5\n\n> ps\uff1a3\uff0c4\u6570\u636e\u70b9\u7591\u4f3c\u5728Windows\u4e0b\u751f\u6210\uff0c\u4f7f\u7528getchar()\u8981\u6ce8\u610f\u5bf9\\r\u7684\u5224\u65ad\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define inf 1e9\nconst int N=3e5+1;\nstruct edge\n{\n    int from,to,next,cap,flow,cost;\n}e[N];\nbool vis[N];\nint cnt,n,m,sour,sink,head[N],ans,cost,q[N],p[N],d[N],h,t;\nconst int move[4][2]={-1,0,1,0,0,-1,0,1};\ninline void add(int u,int v,int l,int f)\n{\n    e[++cnt]=(edge){u,v,head[u],l,0,f};\n    head[u]=cnt;\n    e[++cnt]=(edge){v,u,head[v],0,0,-f};\n    head[v]=cnt;\n}\ninline void augment()\n{\n    int detla=inf,c=0;\n    for(int i=sink;i!=sour;i=e[p[i]].from)\n    {\n        detla=min(detla,e[p[i]].cap-e[p[i]].flow);\n        c+=e[p[i]].cost;\n    }\n    for(int i=sink;i!=sour;i=e[p[i]].from)\n    {\n        e[p[i]].flow+=detla;\n        e[((p[i]-1)^1)+1].flow-=detla;\n    }\n    ans+=detla;\n    cost+=detla*c;\n}\ninline bool find()\n{\n    memset(d,127,sizeof(d));\n    memset(vis,0,sizeof(vis));\n    vis[sour]=true;\n    d[sour]=0;\n    q[h=t=1]=sour;\n    while(h<=t)\n    {\n        int x=q[h++];\n        vis[x]=false;\n        for(int i=head[x];i;i=e[i].next)\n        {\n            if(e[i].cap>e[i].flow&&d[x]+e[i].cost<d[e[i].to])\n            {\n                if(!vis[e[i].to])\n                {\n                    vis[e[i].to]=true;\n                    q[++t]=e[i].to;\n                }\n                d[e[i].to]=d[x]+e[i].cost;\n                p[e[i].to]=i;\n            }\n        }\n    }\n    return d[sink]<inf;\n}\ninline void sap()\n{\n    while(find())\n        augment();\n}\ninline void read(int &x)\n{\n    char ch;\n    int f=1;\n    x=0;\n    do\n    {\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }while(!('0'<=ch&&ch<='9'));\n    do\n    {\n        x=(x<<3)+(x<<1)+ch-48;\n        ch=getchar();\n    }while('0'<=ch&&ch<='9');\n    x*=f;\n}\ninline int get(int x,int y)\n{\n    return (x-1)*m+y;\n}\nint main()\n{\n    read(n);\n    read(m);\n    sour=0;\n    sink=2*n*m+1;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n        {\n        \tchar c;\n        \tcin>>c;\n        \tint dir;\n        \tadd(sour,get(i,j),1,0);\n        \tadd(get(i,j)+n*m,sink,1,0);\n        \tif(c=='U')\n        \t\tdir=0;\n        \telse if(c=='D')\n        \t\tdir=1;\n        \telse if(c=='L')\n        \t\tdir=2;\n        \telse if(c=='R')\n        \t\tdir=3;\n        \tfor(int k=0;k<4;k++)\n        \t{\n        \t\tint x=i+move[k][0],y=j+move[k][1];\n        \t\tif(x==n+1)\n        \t\t\tx=1;\n        \t\telse if(x==0)\n        \t\t\tx=n;\n        \t\tif(y==m+1)\n        \t\t\ty=1;\n        \t\telse if(y==0)\n        \t\t\ty=m;\n        \t\tif(dir==k)\n        \t\t\tadd(get(i,j),get(x,y)+n*m,1,0);\n        \t\telse\n        \t\t\tadd(get(i,j),get(x,y)+n*m,1,1);\n        \t}\n        }\n    }\n    sap();\n    printf(\"%d\",cost);\n    return 0;\n}\n\n```",
        "postTime": 1552144229,
        "uid": 116659,
        "name": "wxwoo",
        "ccfLevel": 6,
        "title": "P3965 [TJOI2013]\u5faa\u73af\u683c \u9898\u89e3"
    },
    {
        "content": "\n\u56de\u8def\u9650\u5236\u7ecf\u5178\u9898\u3002\n\u6bcf\u4e2a\u70b9\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u6e90\u70b9\u8fde\u6bcf\u4e2a\u70b9\u7684\u51fa\u70b9\uff0c\u6d41\u91cf1\uff0c\u8d39\u75280\uff0c\u6bcf\u4e2a\u70b9\u51fa\u70b9\u8fde\u6c47\u70b9\uff0c\u6d41\u91cf1\uff0c\u8d39\u75280\uff0c\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u6ca1\u6709\u8fb9\u3002\n\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u70b9\u5fc5\u987b\u9760\u5176\u4ed6\u70b9\u6d41\u6765\u7684\u6d41\u91cf\u6765\u6d41\u5165\u6c47\u70b9\uff0c\u540c\u65f6\u81ea\u5df1\u7684\u6d41\u91cf\u6d41\u51fa\u53bb\uff0c\u8fd9\u65f6\u5019\u5c31\u4f1a\u5f62\u6210\u73af\uff0c\u53ea\u8981\u628a\u6240\u6709\u6d41\u91cf\u6d41\u6ee1\uff0c\u5c31\u5fc5\u5b9a\u662f\u9898\u76ee\u8981\u6c42\u7684\u60c5\u5f62\u3002\n\u6240\u4ee5\u6bcf\u4e2a\u70b9\u5411\u524d\u540e\u5de6\u53f3\u76f8\u90bb\u70b9\u8fde\u8fb9\uff0c\u5982\u679c\u672c\u6765\u5c31\u662f\u8fd9\u4e2a\u65b9\u5411\uff0c\u8d39\u7528\u4e3a0\uff0c\u5426\u5219\u8d39\u7528\u4e3a1\uff0c\u6700\u5c0f\u8d39\u7528\u5373\u4e3a\u7b54\u6848\u3002\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#define INF 2147483647\nusing namespace std;\nconst int MAXN = 1010;\nconst int MAXM = 200010;\nqueue <int> q; \nint s, t, now, n, m;\nstruct Edge{\n    int from, next, to, rest, cost;\n}e[MAXM];\nint head[MAXN], num = 1, dis[MAXN], vis[MAXN], Flow[MAXN], pre[MAXN];\ninline void Add(int from, int to, int flow, int cost){\n    e[++num] = (Edge){ from, head[from], to, flow, cost }; head[from] = num;\n    e[++num] = (Edge){ to, head[to], from, 0, -cost }; head[to] = num;\n}\nint RoadsExist(){\n    q.push(s);\n    memset(dis, 127, sizeof dis);\n    dis[s] = 0; Flow[s] = INF; pre[t] = 0;\n    while(!q.empty()){\n      now = q.front(); q.pop(); vis[now] = 0;\n      for(int i = head[now]; i; i = e[i].next)\n         if(e[i].rest && dis[e[i].to] > dis[now] + e[i].cost){\n           dis[e[i].to] = dis[now] + e[i].cost;\n           pre[e[i].to] = i;\n           Flow[e[i].to] = min(Flow[now], e[i].rest);\n           if(!vis[e[i].to]){\n             vis[e[i].to] = 1;\n             q.push(e[i].to);\n           }\n         }\n    }\n    return pre[t];\n}\nint a[20][20], mincost, l[] = {233, -1, 1, 0, 0}, r[] = {666, 0, 0, -1, 1};\nint id(int i, int j, int k){\n\treturn (i - 1) * m + j + k * 500;\n}\nchar ch;\nint main(){\n    scanf(\"%d%d\", &n, &m); s = 999; t = 1000;\n    for(int i = 1; i <= n; ++i)\n\t   for(int j = 1; j <= m; ++j){\n\t       ch = getchar(); while(ch == '\\n' || ch == '\\r' || ch == ' ') ch = getchar();\n\t       if(ch == 'U') a[i][j] = 1;\n\t       if(ch == 'D') a[i][j] = 2;\n\t       if(ch == 'L') a[i][j] = 3;\n\t       if(ch == 'R') a[i][j] = 4;\n\t       Add(s, id(i, j, 0), 1, 0);\n\t       Add(id(i, j, 1), t, 1, 0);\n\t   }\n\tfor(int i = 1; i <= n; ++i)\n\t   for(int j = 1; j <= m; ++j)\n\t      for(int k = 1; k <= 4; ++k){\n\t      \t int x = i + l[k], y = j + r[k];\n\t      \t if(!x) x = n; if(!y) y = m; if(x > n) x = 1; if(y > m) y = 1;\n\t      \t Add(id(i, j, 0), id(x, y, 1), 1, a[i][j] != k);\n\t      }\n    while(RoadsExist()){\n      mincost += Flow[t] * dis[t];\n      for(int i = t; i != s; i = e[pre[i]].from){\n         e[pre[i]].rest -= Flow[t];\n         e[pre[i] ^ 1].rest += Flow[t];\n      }\n    }\n    printf(\"%d\\n\", mincost);\n    return 0;\n}\n\n```",
        "postTime": 1552103443,
        "uid": 61834,
        "name": "Huami360",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3965 \u3010[TJOI2013]\u5faa\u73af\u683c\u3011"
    },
    {
        "content": "### [$$My\\ blog$$](https://www.cnblogs.com/hbxblog/p/10262281.html)\n---\n### \u9898\u76ee\u94fe\u63a5\n[\u6233\u6211](https://www.luogu.org/problemnew/show/P3965)\n### $Solution$\n\u6211\u4eec\u89c2\u5bdf\u53d1\u73b0\u5faa\u73af\u683c\u8981\u6ee1\u8db3\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u90fd\u4e3a$1$\n\n\u8bc1\u660e:\n>\u6211\u4eec\u5047\u8bbe\u6bcf\u4e2a\u70b9\u7684\u5165\u8bfb\u4e0d\u4e00\u5b9a\u4e3a$1$\uff0c\u90a3\u4e48\u5fc5\u5b9a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u70b9\u7684\u5165\u5ea6\u4e3a0\uff0c\u90a3\u4e48\u5219\u4e0d\u6ee1\u8db3\u5faa\u73af\u683c\u7684\u5b9a\u4e49\uff0c\u6240\u4ee5\u5047\u8bbe\u9519\u8bef\u3002\u6240\u4ee5\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u5fc5\u7136\u4e3a1\u3002  \n\n\u6240\u4ee5\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5efa\u56fe\u4e86\u3002\u5148\u8fdb\u884c\u62c6\u70b9\u64cd\u4f5c\uff0c\u5c06\u6bcf\u4e2a\u70b9\u62c6\u6210$x$\u548c$x'$\u5c06$x$\u548c$S$\u8fde\u63a5\uff0c\u6d41\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$0$\u518d\u5c06$x'$\u548c$T$\u8fde\u63a5\uff0c\u6d41\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$0$\n\n\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9$x$\u5c06\u5b83\u548c\u56db\u5468\u7684$'$\u70b9\u76f8\u8fde\u63a5\u3002\u6d41\u91cf\u4e3a1,\u8d39\u7528\u7684\u8bdd\u5728\u5224\u65ad\u4e00\u4e0b\u65b9\u5411\u548c\u5b57\u7b26\u662f\u5426\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\u4e3a$0$\uff0c\u4e0d\u540c\u4e3a$1$\n$end.$\n\n### $Code$\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint read() {\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9')\n        f=(c=='-')?-1:1,c=getchar();\n    while(c>='0'&&c<='9')\n        x=x*10+c-'0',c=getchar();\n    return x*f;\n}\nstruct node {\n    int to,next,v,w;\n} a[1000001];\nint dis[10001],f[10001],pre[10001],fa[10001],s,t,n,m,head[10001],cnt,x,y,z,c;\nvoid add(int x,int y,int c,int v) {\n    a[++cnt].to=y;\n    a[cnt].next=head[x];\n    a[cnt].v=c;\n    a[cnt].w=v;\n    head[x]=cnt;\n}\nqueue < int > q;\nint spfa() {\n    q.push(s);\n    memset(dis,127,sizeof(dis));\n    memset(f,0,sizeof(f));\n    f[s]=1,dis[s]=0;\n    int inf=dis[s+1];\n    while(!q.empty()) {\n        int now=q.front();\n        q.pop();\n        f[now]=0;\n        for(int i=head[now]; i; i=a[i].next) {\n            int v=a[i].to;\n            if(dis[v]>dis[now]+a[i].w&&a[i].v) {\n                dis[v]=dis[now]+a[i].w,pre[v]=i,fa[v]=now;\n                if(!f[v])\n                    f[v]=1,q.push(v);\n            }\n        }\n    }\n    if(dis[t]!=inf)\n        return 1;\n    return 0;\n}\nint ans1,ans;\nvoid anser() {\n    while(spfa()) {\n        int minx=2147483647;\n        for(int i=t; i!=s; i=fa[i])\n            minx=min(minx,a[pre[i]].v);\n        ans+=minx,ans1+=dis[t]*minx;\n        for(int i=t; i!=s; i=fa[i])\n            a[pre[i]].v-=minx,(pre[i]%2)?a[pre[i]+1].v+=minx:a[pre[i]-1].v+=minx;\n    }\n}\nchar hh[10]= {'0','D','U','L','R'};\nint fx[10]= {0,1,-1,0,0};\nint fy[10]= {0,0,0,-1,1};\nchar ss[101][101],l[1001];\nint main() {\n    int N=read(),M=read();\n    s=0,t=N*M*10,n=N*M;\n    for(int i=1; i<=n; i++)\n        add(s,i,1,0),add(i,s,0,0);\n    for(int i=1; i<=n; i++)\n        add(i+n,t,1,0),add(t,i+n,0,0);\n    for(int i=1; i<=N; i++) {\n        cin>>l;\n        for(int j=0; j<M; j++)\n            ss[i][j+1]=l[j];\n    }\n    for(int i=1; i<=N; i++)\n        for(int j=1; j<=M; j++) {\n            char pp=ss[i][j];\n            for(int k=1; k<=4; k++) {\n                int X=(i+fx[k]+N-1)%N+1,Y=(j+fy[k]+M-1)%M+1;\n                int now=(i-1)*M+j,nex=(X-1)*M+n+Y,o=(pp==hh[k])^1;\n                add(now,nex,1,o),add(nex,now,0,-o);\n            }\n        }\n    anser();\n    printf(\"%d\",ans1);\n}\n\n```",
        "postTime": 1547353973,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3965 \u3010[TJOI2013]\u5faa\u73af\u683c\u3011"
    }
]