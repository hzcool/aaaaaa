[
    {
        "content": "# **\u3010\u5b66\u4e60\u7b14\u8bb0\u3011\u5b57\u7b26\u4e32\u2014\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a**\n\n[$\\mathcal{My}\\ \\mathcal{Blog}$](https://www.cnblogs.com/Xing-Ling/p/12038349.html)\n\n$update\\ 2021.11.27:$ \u65f6\u9694\u591a\u5e74\u56de\u6765\u8865\u5751\uff0c\u6709\u4e86\u989d\u5916\u7684\u53d1\u73b0\uff0c\u5e76\u7ed9\u51fa\u8bc1\u660e\u3002  \n\u3010\u79bb\u7ebf\u5199\u6cd5\u518d\u63a2\u3011\u9610\u8ff0\u79bb\u7ebf $\\text{dfs}$ \u9519\u8bef\u539f\u56e0\uff0c\u8bc1\u660e\u79bb\u7ebf $\\text{bfs}$ \u6b63\u786e\u6027\uff1b\u9610\u8ff0\u5728\u7ebf\u5199\u6cd5\u7279\u5224 $1$ \u7684\u672c\u8d28\u4ee5\u53ca\u79bb\u7ebf\u5728\u7ebf\u5199\u6cd5\u7684\u4e4b\u95f4\u8054\u7cfb\uff1b\u4fee\u590d\u624b\u7ed8\u56fe\u7684\u4e00\u4e2a\u5c0f\u5931\u8bef\u3002\n\n$update\\ 2020.8.13:$ \u8fd9\u4e2a\u849f\u84bb\u53d1\u73b0\u81ea\u5df1\u50bb\u5f97\u4e0d\u884c\uff0c\u660e\u660e\u5f88\u7b80\u5355\u7684\u4e1c\u897f\u4e00\u76f4\u6ca1\u626f\u6e05\u695a\uff0c\u6240\u4ee5\u7acb\u9a6c\u6765\u8865\u9505\u4e86\uff0c\u987a\u4fbf\u601d\u8003\u4e86\u5982\u4f55 $\\text{hack}$ \u76d7\u7248\u3002  \n\u66f4\u65b0\u66f4\u7ec6\u81f4\u7684\u590d\u6742\u5ea6\u8bb2\u89e3\uff1b\u6dfb\u52a0\u5361\u6389\u76d7\u7248\u5728\u7ebf\u6784\u9020\u7684\u65b9\u6cd5\uff0c\u5e76\u5bf9\u7a7a\u8282\u70b9\u6027\u8d28\u8fdb\u884c\u6df1\u5165\u7814\u7a76\uff1b\u8c03\u6574\u677f\u5757\u5e03\u5c40\u3002\n\n$updata\\ 2020.7.13:$ ~~\u8feb\u4e8eezoixx130\u7684\u6deb\u5a01\u8dd1\u6765\u4fee\u9505\u5566\u3002~~  \n\u66f4\u65b0\u66f4\u4f91\u79c0\u7684\u5728\u7ebf\u6784\u9020\u6b63\u786e\u5199\u6cd5\uff1b\u589e\u4fee\u6587\u7ae0\u7ec6\u8282\uff1b$\\text{Latex}$ \u89c4\u8303\u5316\uff1b\u5e76\u6dfb\u52a0\u4e24\u9053\u4f8b\u9898\u3002\n\n$update\\ 2020.3.3:$ \u53d1\u73b0\u9898\u5e93\u91cc\u51fa\u73b0\u4e86\u6a21\u677f\uff0c\u51b3\u5b9a\u6dfb\u52a0\u4e24\u9053\u4f8b\u9898\uff0c\u5e76\u5bf9\u6587\u7ae0\u7ec6\u8282\u8fdb\u884c\u4fee\u6539\u3002\n\n## **\u4e00\uff1a\u3010\u524d\u8a00\u3011**\n\n\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u90fd\u5728\u7814\u7a76 **\u60ca(~~Ren~~)\u8273(~~Lei~~)\u65e0(~~Zhi~~)\u6bd4(~~Hui~~)\u3001\u7f8e(~~Li~~)\u5999(~~Xing~~)\u7edd(~~Yu~~)\u4f26(~~Yue~~)** \u7684\u81ea\u52a8\u673a\uff0c\u8fd9\u91cc\u5f15\u7528 [$\\text{bztMinamoto}$](https://www.cnblogs.com/bztMinamoto/) \u5de8\u4f6c\u7684\u4e00\u53e5\u8bdd\u6765\u8868\u8fbe\u6b64\u65f6\u7684\u5fc3\u60c5\uff1a\n\n> \u6211\u611f\u89c9\u6211\u6574\u4e2a\u4eba\u90fd\u81ea\u52a8\u673a\u4e86\u2026\u2026 \u2014\u2014[$bztMinamoto$](https://www.cnblogs.com/bztMinamoto/)\uff08[\u56de\u6587\u81ea\u52a8\u673a\u5b66\u4e60\u7b14\u8bb0](https://www.cnblogs.com/bztMinamoto/p/9630617.html)\uff09\n\n\u5728\u6b64\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u7f51\u4e0a\u8bb2\u5e7f\u4e49 $\\text{SAM}$ \u7684\u6587\u7ae0\u5f88\u5c11\uff0c\u800c\u4e14\u5f88\u591a\u90fd\u4e0d\u6b63\u786e\uff0c\u6240\u4ee5\u51b3\u5b9a\u6574\u7406\u4e00\u4e0b\u3002\n\n## **\u4e8c\uff1a\u3010\u5f15\u7406\u3011**\n\n\u4f17\u6240\u5468\u77e5\uff0c$\\text{SAM}$ \u7684\u4e00\u4e2a\u7ecf\u5178\u5e94\u7528\u662f\u6c42\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u6570\u91cf\uff0c\u90a3\u4e48\u5982\u679c\u6539\u4e3a\u6c42\u4e00\u4e2a $\\text{Trie}$ \u6811\u5462\uff1f\uff08$\\text{Trie}$ \u4e2d\u4ece\u4e0a\u5230\u4e0b\u82e5\u5e72\u524d\u7f00\u4e32\u7684\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\uff09\n\n> \u5927\u90e8\u5206\u53ef\u4ee5\u7528\u540e\u7f00\u81ea\u52a8\u673a\u5904\u7406\u7684\u5b57\u7b26\u4e32\u7684\u95ee\u9898\u5747\u53ef\u6269\u5c55\u5230 $Trie$ \u6811\u4e0a\u3002 \u2014\u2014\u5218\u7814\u7ece ($2015$ \u56fd\u5bb6\u961f\u8bba\u6587\u300a\u540e\u7f00\u81ea\u52a8\u673a\u5728\u5b57\u5178\u6811\u4e0a\u7684\u62d3\u5c55\u300b)\n\n\u6211\u4eec\u5c06\u8fd9\u79cd\u5efa\u7acb\u5728 $\\text{Trie}$ \u6811\u4e0a\u7684 $\\text{SAM}$ \u79f0\u4e3a\u5e7f\u4e49 $\\text{SAM}$ \u3002\u5728\u5b66\u4e60\u4e4b\u524d\uff0c\u9996\u5148\u8981\u786e\u4fdd\u5bf9[\u5355\u4e32 $\\text{SAM}$](https://www.cnblogs.com/zjp-shadow/p/9218214.html#autoid-4-1-0) \u8db3\u591f\u719f\u6089\u3002\n\n\u5176\u5b9e\u6211\u4eec\u901a\u5e38\u9700\u8981\u89e3\u51b3\u7684\u662f**\u591a\u6a21\u5f0f\u4e32\u95ee\u9898**\uff0c\u5373\u7ed9\u51fa\u591a\u4e2a\u4e32\u8ba9\u4f60\u53bb\u7edf\u8ba1\u5404\u79cd\u5404\u6837\u7684\u4fe1\u606f\uff08\u5c06\u591a\u4e2a\u4e32\u63d2\u5165\u5230\u4e00\u68f5 $\\text{Trie}$ \u4e2d\uff0c\u7136\u540e\u4f9d\u9760\u8fd9\u68f5 $\\text{Trie}$ \u6784\u9020\u5e7f\u4e49 $\\text{SAM}$\uff09\u3002  \n\u53ef\u80fd\u5c11\u90e8\u5206\u9898\u76ee\u4f1a\u6709\u76f4\u63a5\u7ed9\u51fa\u4e00\u68f5 $\\text{Trie}$ \u6811\u7684\u60c5\u51b5\uff0c\u4f46\u4e0d\u5e38\u89c1\u3002\n\n**\u672c\u6587\u4e3b\u8981\u89e3\u51b3\u524d\u4e00\u7c7b\u95ee\u9898**\uff0c\u540e\u8005\u4ec5\u7ed9\u51fa\u4e00\u79cd\u6784\u9020\u65b9\u6cd5\uff08\u5373 $bfs$ \u7248\u79bb\u7ebf\u5199\u6cd5\uff09\uff0c\u4e0d\u8be6\u8ff0\u5176\u5e94\u7528\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u4e24\u79cd\u7c7b\u578b\u9898\u76ee\u4e2d $\\text{Trie}$ \u6811\u6709\u4e0d\u540c\u7684\u6027\u8d28\uff1a  \n\u5bf9\u4e8e**\u591a\u6a21\u5f0f\u4e32\u95ee\u9898**\uff1a$G(T)=O(\\sum len)=O(|T|)$\uff0c  \n\u5bf9\u4e8e\u76f4\u63a5\u7ed9\u51fa\u7684 $\\text{Trie}$\uff1a$G(T)=O(|T|^2)$\uff08\u5982\u679c\u4e0d\u7406\u89e3\u8fd9\u4e2a $|T|^2$ \u53ef\u4ee5\u770b\u4e0b\u9762\u90a3\u5f20\u5ad6\u6765\u7684\u56fe\u7247\uff09\u3002  \n\uff08\u5176\u4e2d $G(T)$ \u4e3a $\\text{Trie}$ \u6811 $T$ \u6240\u6709\u53f6\u8282\u70b9\u6df1\u5ea6\u4e4b\u548c\uff0c$|T|$ \u4e3a $\\text{Trie}$ \u6811\u5927\u5c0f\uff09\n\n$G(T)$ \u8fd9\u4e2a\u4e1c\u897f\u770b\u8d77\u6765\u4f3c\u4e4e\u6ca1\u5565\u7528\u5904\uff0c\u4f46\u5b83\u4f1a\u76f4\u63a5\u5f71\u54cd\u6784\u9020\u5e7f\u4e49 $\\text{SAM}$ \u7684\u7b97\u6cd5\u590d\u6742\u5ea6\u3002\n\n## **\u4e09\uff1a\u3010\u7b97\u6cd5\u5b9e\u73b0\u3011**\n\n### **1.\u3010\u79bb\u7ebf\u6784\u9020\u3011**\n\n\u5728\u7528\u5e7f\u4e49 $\\text{SAM}$ \u5904\u7406**\u591a\u6a21\u5f0f\u4e32\u95ee\u9898**\u65f6\uff0c\u7f51\u4e0a\u6d41\u4f20\u7740\u7684**\u4e3b\u6d41**\u5199\u6cd5\u6709 $3$ \u79cd\uff1a\n\n$(1).$ \u7528\u7279\u6b8a\u7b26\u53f7\u5c06\u6240\u6709\u6a21\u5f0f\u4e32\u8fde\u6210\u4e00\u4e2a\u5927\u4e32\u653e\u5230\u4e00\u4e2a $\\text{SAM}$ \u4e2d\uff0c\u518d\u52a0\u4e00\u4e9b\u7384\u5b66\u5224\u65ad\u6765\u5904\u7406\u4fe1\u606f\u3002\n\n$(2).$ \u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6a21\u5f0f\u4e32\u4e4b\u524d\uff0c\u90fd\u628a $last$ \u8bbe\u4e3a $1$\uff0c\u6309\u7167\u666e\u901a $\\text{SAM}$ \u4e00\u6837\u63d2\u5165\uff0c\u5373\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u4ece\u8d77\u70b9 $1$ \u5f00\u59cb\u91cd\u65b0\u6784\u9020\u3002\n\n$(3).$ \u7528\u6240\u6709\u6a21\u5f0f\u4e32\u5efa\u51fa\u4e00\u9897 $\\text{Trie}$ \u6811\uff0c\u5bf9\u5176\u8fdb\u884c $\\text{dfs/bfs}$ \u904d\u5386\u6784\u5efa $\\text{SAM}$\uff0c$insert$ \u65f6 \u4f7f $last$ \u4e3a\u5b83\u5728 $\\text{Trie}$ \u6811\u4e0a\u7684\u7236\u4eb2\uff0c\u5176\u4f59\u548c\u666e\u901a $\\text{SAM}$ \u4e00\u6837\u3002\n\n\u7b2c\u4e00\u79cd\u5b9e\u7528\u6027\u4e0d\u9ad8\u4e14\u590d\u6742\u5ea6\u5371\u9669\u3002\u7b2c\u4e8c\u79cd\u673a\u623f\u5927\u4f6c\u8bf4\u662f\u76d7\u7248\uff0c\u4f46\u56e0\u4e3a\u590d\u6742\u5ea6\u4f9d\u65e7\u4e3a\u7ebf\u6027\u3001\u4ee3\u7801\u7b80\u5355\u4e14\u5728\u5927\u90e8\u5206\u9898\u4e2d\u90fd\u80fd\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u6240\u4ee5\u5f88\u591a\u4eba\u90fd\u7528\u7684\u8fd9\u79cd\uff08[$\\text{SAM Drawer}$](https://yutong.site/sam/) \u4f3c\u4e4e\u5c31\u662f\u4f9d\u636e\u8fd9\u4e2a\u505a\u6cd5\u7ed8\u7684\u56fe\uff09\u3002\u4f46\u6839\u636e\u5e7f\u4e49 $\\text{SAM}$ \u7684\u5b9a\u4e49\uff0c\u53ea\u6709\u7b2c\u4e09\u79cd\u4e2d\u624d\u662f\u6b63\u786e\u5199\u6cd5\u3002\u800c\u4e14\u968f\u4fbf\u629b\u7ec4\u6570\u636e\u5c31\u80fd\u7acb\u9a6c\u53d1\u73b0\u6784\u9020\u51fa\u6765\u7684\u5dee\u5f02\u3002\n\n$\\text{dfs}$ \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//Trie.tr[x]: Trie\u6811\u7684\u72b6\u6001\u8f6c\u79fb\u6570\u7ec4\n//Trie.c[x]: Trie\u6811\u4e0a\u8282\u70b9x\u7684\u5b57\u7b26\n//pos[x]:Trie\u4e0ax\u8282\u70b9\u7684\u524d\u7f00\u5b57\u7b26\u4e32\uff08\u8def\u5f84 \u6839->x \u6240\u8868\u793a\u7684\u5b57\u7b26\u4e32\uff09\u5728SAM\u4e0a\u7684\u5bf9\u5e94\u8282\u70b9\u7f16\u53f7\ninline void dfs(Re x){\n    for(Re i=0,to;i<26;++i)if(to=T1.tr[x][i])\n        pos[to]=insert(T1.c[to],pos[x]),dfs(to);\n}\ninline void build(){pos[1]=1,dfs(1);}//dfs\u904d\u5386Trie\u6811\u6784\u9020\u5e7f\u4e49SAM(Tire\u6811\u4e0a\u7684\u68391\u5728SAM\u4e0a\u7684\u4f4d\u7f6e\u4e3a\u68391)\n```\n\n$bfs$ \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//Trie.tr[x]: Trie\u6811\u7684\u72b6\u6001\u8f6c\u79fb\u6570\u7ec4\n//Trie.fa[x]: Trie\u6811\u4e0a\u8282\u70b9x\u7684\u7236\u8282\u70b9\n//Trie.c[x]: Trie\u6811\u4e0a\u8282\u70b9x\u7684\u5b57\u7b26\n//pos[x]:Trie\u4e0ax\u8282\u70b9\u7684\u524d\u7f00\u5b57\u7b26\u4e32\uff08\u8def\u5f84 \u6839->x \u6240\u8868\u793a\u7684\u5b57\u7b26\u4e32\uff09\u5728SAM\u4e0a\u7684\u5bf9\u5e94\u8282\u70b9\u7f16\u53f7\ninline void build(){//bfs\u904d\u5386Trie\u6811\u6784\u9020\u5e7f\u4e49SAM\n    for(Re i=0;i<C;++i)if(Trie.tr[1][i])Q.push(Trie.tr[1][i]);//\u63d2\u5165\u7b2c\u4e00\u5c42\u5b57\u7b26\n    pos[1]=1;//Tire\u6811\u4e0a\u7684\u68391\u5728SAM\u4e0a\u7684\u4f4d\u7f6e\u4e3a\u68391\n    while(!Q.empty()){\n        Re x=Q.front();Q.pop();\n        pos[x]=insert(Trie.c[x],pos[Trie.fa[x]]);//\u6ce8\u610f\u662fpos[Trie->fa[x]]\n        for(Re i=0;i<C;++i)if(Trie.tr[x][i])Q.push(Trie.tr[x][i]);\n    }\n}\n```\n\n\u4ee3\u7801\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u3002\n\n\u6709\u4eba\u8868\u793a\u80fd\u7406\u89e3**\u591a\u6a21\u5f0f\u4e32\u63d2\u5165**\uff0c\u4f46\u96be\u4ee5\u60f3\u8c61\u76f4\u63a5\u722c $\\text{Trie}$ \u6811\u6784\u9020\u81ea\u52a8\u673a\u7ef4\u62a4\u7684\u5230\u5e95\u662f\u5565\uff0c\u5176\u5b9e\u4e5f\u662f\u4e00\u6837\u7684\u9053\u7406\uff1a  \n\u5176\u5b9e\u8d28\u662f\u5c06 $\\text{Trie}$ \u6811\u4e0a\u82e5\u5e72\u6761\u4ece\u4e0a\u5230\u4e0b\u7684\u8def\u5f84\u62bd\u51fa\u6765\u5206\u522b\u63d2\u5165\u5230 $\\text{SAM}$\uff08\u6216\u8005\u8bf4\u4ece $\\text{Trie}$ \u6811\u4e2d\u8fd8\u539f\u51fa\u4e86\u82e5\u5e72\u5f85\u63d2\u5165\u4e32\uff09\u3002\u800c $\\text{Trie}$ \u672c\u8eab\u5c31\u538b\u7f29\u4e86\u5927\u91cf\u7684 $\\text{lcp}$\uff0c\u8fd9\u4e9b\u88ab\u538b\u7f29\u7684\u90e8\u5206\u4e0d\u9700\u8981\u591a\u6b21\u63d2\u5165\uff0c\u6545\u904d\u5386 $\\text{Trie}$ \u5373\u53ef\u3002  \n\n**\u591a\u6a21\u5f0f\u4e32\u63d2\u5165**\u548c\u76f4\u63a5\u722c $\\text{Trie}$ \u6811\u6784\u9020\u672c\u5c31\u662f\u540c\u6837\u7684\u539f\u7406\uff0c\u81ea\u52a8\u673a\u4e5f\u662f\u4e00\u6a21\u4e00\u6837\u7684\u5f62\u6001\uff0c\u53ea\u662f\u590d\u6742\u5ea6\u4e0d\u540c\u7f62\u4e86\u3002\uff08\u4e0d\u7406\u89e3\u8fd9\u6bb5\u8bdd\u7684\u53ef\u4ee5\u5148\u770b\u540e\u9762\uff09\n\n> \u6ce8\u610f\uff1a$\\text{dfs}$ \u904d\u5386\u7684\u590d\u6742\u5ea6\u4e3a $O(G(T))$\uff0c$\\text{bfs}$ \u4e3a $O(|T|)$ \u3002  \n\u5982\u679c\u9898\u76ee\u7ed9\u7684\u662f\u82e5\u5e72\u4e2a\u5f85\u63d2\u5165\u4e32 $S$\uff0c\u90a3\u4e48 $\\text{dfs/bfs}$ \u53ef\u4ee5\u4efb\u9009\u4e00\u79cd\uff0c\u56e0\u4e3a\u6b64\u65f6 $O(G(T))=O(\\sum|S|)$\u3002    \n\u4f46\u8981\u662f\u76f4\u63a5\u7ed9\u4e86\u4e00\u9897 $\\text{Trie}$\uff0c$\\text{dfs}$ \u5c31\u4f1a\u88ab\u5361\u3002  \n\u5173\u4e8e $G(T)=O(|T|^2)$ \u7684\u8bc1\u660e\uff0c\u8fd9\u91cc\u5ad6\u4e00\u5f20\u56fe\uff1a [\u3010\u56fe\u7247\u6765\u6e90\u3011](https://www.luogu.com.cn/paste/3oq8xx3b)  \n![](https://cdn.luogu.com.cn/upload/image_hosting/1d6n2trm.png)\n\n### **2.\u3010\u5728\u7ebf\u6784\u9020\u3011**\n\n\u4ec5\u9488\u5bf9\u4e8e**\u591a\u6a21\u5f0f\u4e32\u95ee\u9898**\uff0c\u6211\u4eec\u8fd8\u6709\u53e6\u4e00\u79cd\u6784\u9020\u5e7f\u4e49 $\\text{SAM}$ \u7684\u65b9\u6cd5\u3002\n\n\u201c\u79bb\u7ebf\u201d\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5bf9\u591a\u4e2a\u6a21\u5f0f\u4e32\u79bb\u7ebf\u6784\u9020\u51fa $\\text{Trie}$ \u6811\uff0c\u7136\u540e\u4f9d\u636e $\\text{Trie}$ \u6784\u9020\u5e7f\u4e49 $\\text{SAM}$ \u3002  \n\u800c\u201c\u5728\u7ebf\u201d\u5c31\u662f\u6307\u4e0d\u5efa\u7acb $\\text{Trie}$\uff0c\u76f4\u63a5\u628a\u7ed9\u51fa\u7684\u591a\u4e2a\u6a21\u5f0f\u4e32\u4f9d\u6b21\u63d2\u5165\u5230\u5e7f\u4e49 $\\text{SAM}$ \u4e2d\uff08\u7528\u5728\u7ebf\u505a\u6cd5\u5199\u6b63\u786e\u7684\u4eba\u5c11\u5f97\u53ef\u601c\uff09\u3002\n\n\u5177\u4f53\u7684\u8bf4\uff0c\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6a21\u5f0f\u4e32\u4e4b\u524d\uff0c\u90fd\u628a $last$ \u8bbe\u4e3a $1$\uff0c$insert$ \u51fd\u6570**\u5728\u666e\u901a** $\\text{SAM}$ **\u7684\u57fa\u7840\u4e0a\u52a0\u5165\u7279\u5224**\uff08\u6ce8\u610f\u524d\u9762\u8bf4\u7684\u76d7\u7248\u5199\u6cd5\u7528\u7684\u662f**\u4e0d\u52a0\u7279\u5224\u7684\u666e\u901a** $insert$\uff09\u3002\n\n\u66f4\u6539\u540e\u7684 $insert$ \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n//link[i]: \u540e\u7f00\u94fe\u63a5\n//trans[i]: \u72b6\u6001\u8f6c\u79fb\u6570\u7ec4\ninline int insert(Re ch,Re last){//\u5c06ch[now]\u63a5\u5230last\u540e\u9762\n    if(trans[last][ch]&&maxlen[last]+1==maxlen[trans[last][ch]])return trans[last][ch];\n    //\u5df2\u7ecf\u5b58\u5728\u9700\u8981\u7684\u8282\u70b9(\u7279\u52241)\n    Re x,y,z=++O,p=last,flag=0;maxlen[z]=maxlen[last]+1;\n    while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n    if(!p)link[z]=1;\n    else{\n        x=trans[p][ch];\n        if(maxlen[p]+1==maxlen[x])link[z]=x;\n        else{//\u9700\u8981\u62c6\u5206x\uff0c\u5c06len<=maxlen[p]+1\u7684\u90e8\u5206\u590d\u5236\u4e00\u4e2ay\u51fa\u6765\n            if(maxlen[p]+1==maxlen[z]/*\u6216\u8005\u5199\uff1ap==last*/)flag=1;(\u7279\u52242)\n            y=++O;maxlen[y]=maxlen[p]+1;\n            for(Re i=0;i<C;++i)trans[y][i]=trans[x][i];\n            while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n            link[y]=link[x],link[z]=link[x]=y;\n        }\n    }\n    return flag?y:z;//\u6ce8\u610f\u8fd4\u56de\u503c\n    //\u8fd4\u56de\u503c\u4e3a:ch[now]\u63d2\u5165\u5230SAM\u4e2d\u7684\u8282\u70b9\u7f16\u53f7\uff0c\n    //\u5982\u679cnow\u4e0d\u662f\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26,\n    //\u90a3\u4e48\u8fd9\u6b21\u8fd4\u56de\u503c\u5c06\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u63d2\u5165\u65f6\u7684last\n}\n```\n\n\u52a0\u5165\u8fd4\u56de\u503c\u662f\u65b9\u4fbf\u8bb0\u5f55 $last$ \u3002\n\n\u63a5\u4e0b\u6765\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u7279\u5224\u7684\u5177\u4f53\u542b\u4e49\uff1a\n\n```cpp\n(\u7279\u52241)\nif(trans[last][ch]&&maxlen[last]+1==maxlen[trans[last][ch]])return trans[last][ch];\n```\n\n```cpp\n(\u7279\u52242)\nif(maxlen[p]+1==maxlen[z]/*\u6216\u8005\u5199\uff1ap==last*/)flag=1;\n```\n\n\uff08\u56e0\u4e3a\u5c0f\u62ec\u53f7\u53cd\u590d\u5d4c\u5957\u770b\u8d77\u6765\u6bd4\u8f83\u5934\u75bc\uff0c\u4e0b\u9762\u76f4\u63a5\u7528\u65b9\u62ec\u53f7\u8868\u793a\u6570\u7ec4\uff09\n\n\u7279\u5224 $1$ \u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u6211\u4eec\u60f3\u8981\u5728 $last$ \u540e\u9762\u63d2\u5165\u4e00\u4e2a\u8282\u70b9 $z$ \u4f7f\u5f97 $maxlen[z]=maxlen[last]+1$\uff0c\u800c\u8fd9\u4e2a\u8282\u70b9\u5df2\u7ecf\u5b58\u5728\u4e8e$\\text{SAM}$ \u4e2d\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u3002\n\n**\u6ce8\u610f\uff1a\u8fd9\u91cc\u8fd4\u56de\u7684\u8fd9\u4e2a\u8282\u70b9\u4fdd\u5b58\u4e86\u591a\u4e2a\u6a21\u5f0f\u4e32\u7684\u72b6\u6001\uff0c\u5373\u5c06\u591a\u4e2a\u4e0d\u540c\u6a21\u5f0f\u4e32\u7684\u76f8\u540c\u5b50\u4e32\u4fe1\u606f\u538b\u7f29\u5728\u4e86\u8fd9\u4e00\u4e2a\u8282\u70b9\u5185\uff0c\u5982\u679c\u8981\u8bb0\u5f55 $\\{endpos\\}$ \u5927\u5c0f\u7684\u8bdd\uff0c\u5219\u9700\u8981\u7ed9\u6bcf\u4e2a\u6a21\u5f0f\u4e32\u90fd\u5355\u72ec\u7ef4\u62a4\u4e00\u4e2a $siz$ \u6570\u7ec4\u4f9d\u6b21\u66f4\u65b0\uff0c\u800c\u4e0d\u80fd\u5168\u90e8\u63c9\u6210\u4e00\u5768\uff08\u5177\u4f53\u89c1\u540e\u9762\u4f8b\u9898\uff09\u3002**\n\n\u7279\u5224 $2$ \u7684\u5b9e\u8d28\u662f\u5904\u7406 $trans[last][ch]\\neq NULL$ \u4e14 $maxlen[last]+1\\neq maxlen[trans[last][ch]]$ \u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u5148\u6765\u770b\u770b\u5355\u4e32 $\\text{SAM}$ \u7684 $insert$ \u56fe\u793a\uff08\u6765\u6e90\u4e8e [$\\text{hihocoder}$](http://hihocoder.com/problemset/problem/1445)\uff09\uff1a\n\n![](http://media.hihocoder.com/problem_images/20161210/14813690856741.png)\n\n\u5728\u4ece $last$ \u5f00\u59cb\u5f80\u524d\u8df3 $link$ \u65f6\uff0c\u5355\u4e32 $\\text{SAM}$ \u4e2d\u5fc5\u5b9a\u5b58\u5728\u7740 $trans[p][ch]=NULL$ \u7684\u4e00\u6bb5\uff08\u5728\u56fe\u4e2d\u8868\u73b0\u4e3a\u4ee5 $u$ \u8282\u70b9\u7ed3\u5c3e\u7684\u6700\u53f3\u8fb9\u90a3\u4e00\u6bb5\uff09\uff0c\u4f46\u6269\u5c55\u5230\u591a\u4e32\u540e\u53ef\u80fd\u5c31\u6ca1\u6709\u8fd9\u4e00\u6bb5\u4e86\uff0c\u5373**\u5b58\u5728** $trans[last][ch]=x$ **\u4e14** $maxlen[last]+1\\neq maxlen[x]$\uff08\u5bf9\u4e8e $maxlen[last]+1=maxlen[x]$ \u7684\u60c5\u51b5\u5728\u7279\u5224 $1$ \u65f6\u5c31\u8fd4\u56de\u4e86\uff09\u3002\n\n\u663e\u7136\uff0c\u6b64\u65f6 **\u6ca1\u6709\u4efb\u4f55\u8282\u70b9\u7684\u8f6c\u79fb\u51fd\u6570 $trans$ \u6216\u540e\u7f00\u94fe\u63a5 $link$ \u6307\u5411\u6700\u521d\u65b0\u5efa\u7684 $z$ \u8282\u70b9**\uff0c\u540c\u65f6 **\u5b83\u6ca1\u6709\u8bb0\u5f55\u4efb\u4f55\u4fe1\u606f**\uff0c\u56e0\u4e3a **\u65b0\u52a0\u5165\u7684\u4fe1\u606f\u5168\u90e8\u50a8\u5b58\u5728\u4e86** $link[z]=y$ **\u8282\u70b9\u4e0a\u9762**\uff08\u5373\u4ece $x$ \u4e2d\u62c6\u5206\u51fa\u6765\u7684\u90a3\u4e2a\u70b9\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a $z$ \u8282\u70b9\u662f\u4e00\u4e2a**\u7a7a\u8282\u70b9**\u3002\n\n> \uff08\u6ce8\uff1a\u4e0b\u9762\u8fd9\u6bb5\u8bdd\u7684\u610f\u4e49\u4e0d\u5927\uff0c\u800c\u4e14\u53ef\u80fd\u4f1a\u770b\u5f97\u4e00\u8138\u61f5\u903c\uff0c\u53ef\u4ee5\u76f4\u63a5\u7565\u8fc7\uff09  \n**\u989d\u5916\u601d\u8003**\uff1a\u5176\u5b9e\u4e0a\u8ff0\u5185\u5bb9\u5e76\u4e0d\u662f\u4ea7\u751f\u7a7a\u8282\u70b9 $z$ \u7684\u552f\u4e00\u60c5\u51b5\u3002  \n\u5982\u679c $\\text{SAM}$ \u5df2\u7ecf\u88ab\u7a7a\u8282\u70b9\u6c61\u67d3\uff0c\u4e14\u5bf9\u4e8e\u524d\u9762 $trans[p][ch]=NULL$ \u7684\u6bb5 $p$ \u5747\u4e3a\u7a7a\u8282\u70b9\uff0c\u90a3\u4e48\u6b64\u65f6 $z$ \u4e5f\u4e00\u5b9a\u4e3a\u7a7a\u3002  \n\u6bd4\u5982\u8fd9\u4e2a\u6570\u636e `dcab ab`\uff0c\u5728\u63d2\u5165\u4e32 $ab$ \u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26 $b$ \u65f6\uff0c$last$ \u4e3a\u4e0a\u4e00\u6b21 $insert(a)$ \u65f6\u4ea7\u751f\u7684\u7a7a\u8282\u70b9 $6$\uff0c\u800c $6$ \u76ee\u524d\u8fd8\u4e0d\u5b58\u5728 $trans$ \u8fb9\uff08\u5373$trans[last=6][ch=b]=NULL$\uff09\uff0c\u4f46\u6b64\u65f6\u65b0\u5efa\u7684 $z$\uff08\u5373 $8$ \u53f7\u8282\u70b9\uff09\u4ecd\u4e3a\u7a7a\uff0c\u4e14\u4e4b\u524d\u7684\u7a7a\u8282\u70b9 $6$ \u6709\u4e00\u6761\u6307\u5411 $8$ \u7684 $trans$ \u8fb9\u3002\u5177\u4f53\u53ef\u81ea\u884c\u753b\u56fe\u52a0\u6df1\u7406\u89e3\u3002  \n\uff08\u8bf7\u5230\u4e0b\u65b9\u4f8b\u9898\u5904\u62b1\u8d70std\uff0c\u7136\u540e\u4f7f\u7528\u4ee3\u7801\u8f93\u51fa\u81ea\u52a8\u673a\u7684\u8fb9\u518d\u753b\u5230\u7eb8\u4e0a\uff0c\u6700\u597d\u628a\u52a0/\u4e0d\u52a0\u7279\u5224\u6700\u7ec8\u4ea7\u751f\u7684\u5404\u79cd\u5f62\u6001\u90fd\u8bd5\u4e00\u4e0b\u770b\u770b\u3002\u4f46\u4e0d\u63a8\u8350\u81ea\u5df1\u6a21\u62df\u7ed8\u56fe\uff0c\u56e0\u4e3a\u5de5\u4f5c\u91cf\u5927\u4e14\u6781\u6613\u51fa\u9519\uff09\n\n\u56de\u5230**\u7a7a\u8282\u70b9**\u7684\u95ee\u9898\uff0c\u4e00\u822c\u6765\u8bb2\uff0c\u8fd9\u4e2a\u70b9\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\uff0c\u4f46\u4e5f\u6709\u529e\u6cd5\u80fd\u5361\u6389\uff0c\u5177\u4f53\u89c1\u4e0b\u65b9\u3010\u5173\u4e8e\u5982\u4f55\u5361\u6389\u76d7\u7248\u5728\u7ebf\u5199\u6cd5\u3011\u3002\n\n\u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 $minlen,maxlen$ \u7684\u5927\u5c0f\u6765\u63a8\u5bfc\u51fa $z$ \u4e3a\u7a7a\uff1a  \n> $z$ \u7684 $link$ \u4f1a\u6307\u5411 $x$ \u7684**\u62c6\u5206\u8282\u70b9** $y$\uff0c\u800c $maxlen[y]=maxlen[last]+1$\uff0c\u6240\u4ee5 $minlen[z]=maxlen[link[z]=y]+1=maxlen[last]+2$\uff0c\u53c8\u6709 $maxlen[z]=maxlen[last]+1<minlen[z]$\uff0c\u800c\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u7ef4\u62a4\u7684\u5b50\u4e32\u957f\u5ea6 $\\in [minlen,maxlen]$\uff0c\u6545 $z$ \u4e3a\u7a7a\u3002\n\n\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u770b\uff0c\u8282\u70b9 $y$ \u6ee1\u8db3 $trans[last][ch]=y$ \u4e14 $maxlen[y]=maxlen[last]+1$\uff0c\u8fd9\u4e0d\u6b63\u662f\u6211\u4eec\u60f3\u8981\u7684\u5417\uff08\u540c\u7279\u5224 $1$\uff09\uff1f\u6240\u4ee5\u53ef\u4ee5\u8fd4\u56de $y$\uff0c\u5e76\u7528 $y$ \u4f5c\u4e3a\u5f53\u524d\u6a21\u5f0f\u4e32\u4e0b\u4e00\u6b21 $insert$ \u7684 $last$ \u3002\n\n\u8fd8\u5269\u4e0b\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff1a\u524d\u9762\u8bf4\u7684\u8fd9\u4e24\u4e2a\u7279\u5224\u80fd\u6b63\u786e\u5730\u5408\u5e76\u597d\u7b49\u4ef7\u7c7b\uff0c\u4f46\u6ca1\u6709\u5904\u7406\u7a7a\u8282\u70b9 $z$ \u3002\u4e3a\u4f7f\u6784\u9020\u51fa\u7684\u81ea\u52a8\u673a\u8282\u70b9\u6570\u4e0e\u79bb\u7ebf\u505a\u6cd5\u4e00\u81f4\uff0c\u6211\u4eec\u8fd8\u9700\u8fdb\u4e00\u6b65\u6539\u8fdb\uff1a\u5f53\u5b58\u5728 $trans[last][ch]$ \u65f6\u5c31\u4e0d\u65b0\u5efa $z$ \u8282\u70b9\u4e86\uff0c\u76f4\u63a5\u4ece\u62c6\u5206\u8282\u70b9\u5f00\u59cb\u505a\uff08\u6216\u8005\u5728\u62c6\u5206\u8282\u70b9\u4e4b\u524d\u901a\u8fc7\u7279\u5224 $1$ \u8fd4\u56de\uff09\u3002\n\n\u4ee3\u7801\u6700\u7ec8\u7248\u5982\u4e0b\uff08\u8fd9\u6b21\u53ef\u4ee5\u6253\u5305\u7968\u8bf4\u662f\u6807\u51c6\u5199\u6cd5\u4e86\uff0c\u56e0\u4e3a\u6d4b\u8bd5\u4e86\u5927\u91cf\u7684\u6570\u636e\uff0c\u751f\u6210\u7684\u81ea\u52a8\u673a\u8282\u70b9\u4e2a\u6570\u5747\u4e0e\u79bb\u7ebf $\\text{bfs}$ \u505a\u6cd5\u76f8\u540c\uff09\uff1a\n\n```cpp\ninline int insert(Re ch,Re last){\n    if(trans[last][ch]){\n        Re p=last,x=trans[p][ch];\n        if(maxlen[p]+1==maxlen[x])return x;//\u5373\u6700\u521d\u7684\u7279\u52241\n        else{\n            Re y=++O;maxlen[y]=maxlen[p]+1;\n            for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n            while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n            link[y]=link[x],link[x]=y;\n            return y;//\u5373\u6700\u521d\u7684\u7279\u52242\n        }\n    }\n    Re z=++O,p=last;maxlen[z]=maxlen[last]+1;//\u4ece\u8fd9\u91cc\u5f00\u59cb\u5c31\u4e0e\u666e\u901aSAM\u4e00\u6bdb\u4e00\u6837\u4e86\n    while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n    if(!p)link[z]=1;\n    else{\n        Re x=trans[p][ch];\n        if(maxlen[p]+1==maxlen[x])link[z]=x;\n        else{\n            Re y=++O;maxlen[y]=maxlen[p]+1;\n            for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n            while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n            link[y]=link[x],link[z]=link[x]=y;\n        }\n    }\n    return z;\n}\n```\n\n\u8fd9\u91cc\u8865\u5145\u4e0b\u56fe\u7247\uff0c\u6a21\u62df\u6700\u7ec8\u7248\u4ee3\u7801\u6784\u9020\u8fc7\u7a0b\u4e2d\u7279\u5224 $2$ \u7684\u8fd0\u4f5c\uff1a\n\n\uff08$\\text{SAM}$ \u6839\u4e3a $1$\uff0c\u8f6c\u79fb\u51fd\u6570 $trans$ \u4e3a\u9ed1\u8fb9\uff0c\u540e\u7f00\u94fe\u63a5 $link$ \u4e3a\u7070\u8fb9\uff1b\u56fe\u7247\u4e0a\u534a\u90e8\u5206\u4e3a\u4e32 $aab$ \u6784\u9020\u7ed3\u675f\u540e\u7684\u5f62\u6001\uff0c\u4e0b\u534a\u90e8\u5206\u4e3a\u63d2\u5165\u4e32 $ab$ \u4e2d\u7b2c\u4e8c\u4e2a\u5b57\u7b26 $b$ \u65f6\u7684\u5f62\u6001\u53d8\u6362\u8fc7\u7a0b\uff09  \n![](https://cdn.luogu.com.cn/upload/image_hosting/45zflx7a.png)\n\n\u5982\u524d\u9762\u9ed1\u4f53\u5b57\u6240\u8bf4\uff0c\u4e00\u4e2a\u8282\u70b9\u53ef\u80fd\u4f1a\u50a8\u5b58\u591a\u4e2a\u5b57\u7b26\u4e32\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u8282\u70b9 $2$ \uff1a\u867d\u7136\u8868\u793a\u7684\u5b50\u4e32\u90fd\u4e3a $\\{a\\}$\uff0c\u4f46 $\\{endpos\\}$ \u5927\u5c0f\u5374\u4e0d\u76f8\u540c\uff08$siz_{aab}(2)=2,siz_{ab}(2)=1$\uff09\uff0c\u9700\u8981\u5bf9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5206\u522b\u8bb0\u5f55\u3002\n\n> \u7591\u95ee\uff1a\u5728\u7ebf\u5199\u6cd5\u548c\u79bb\u7ebf\u5199\u6cd5\u6709\u4ec0\u4e48\u4e0d\u540c\u5462\uff1f  \n\u89c1\u540e\u65874.\u3010\u79bb\u7ebf\u5199\u6cd5\u518d\u63a2\u3011\u3002\n\n### **3.\u3010\u5173\u4e8e\u5982\u4f55\u5361\u6389\u76d7\u7248\u5728\u7ebf\u5199\u6cd5\u3011**\n\n\u8fd9\u91cc\u8ba8\u8bba**\u4e0d\u52a0\u7279\u5224**\u7684\u5728\u7ebf\u5199\u6cd5\u3002\n\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8fd9\u79cd\u5199\u6cd5\u53ea\u662f\u591a\u4e86\u4e00\u4e9b\u8282\u70b9\uff0c\u591a\u4e86\u4e00\u4e9b $trans$ \u8fb9\u548c $link$ \u8fb9\uff0c**\u5b83\u4ecd\u662f\u4e00\u53ea\u6b63\u786e\u7684\u81ea\u52a8\u59ec\uff0c\u590d\u6742\u5ea6\u4e5f\u4f9d\u65e7\u4e3a\u7ebf\u6027**\uff08\u6240\u4ee5\u76d7\u7248\u5199\u6cd5\u624d\u4f1a\u6a2a\u884c\u554a......\uff09\u3002  \n\u4f46\u8fd9\u6837\u663e\u7136\u5c31\u4e0d\u7b26\u5408 $\\text{SAM}$ \u201c**\u7528\u6700\u5c11\u7684\u8282\u70b9\u50a8\u5b58\u6240\u6709\u4e32\u4fe1\u606f**\u201d\u8fd9\u4e00\u6027\u8d28\u4e86\uff0c\u5177\u4f53\u5730\u8bf4\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- **\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u88ab\u62c6\u6210\u82e5\u5e72\u4e2a\u8282\u70b9**\uff0c\u5b50\u4e32\u4fe1\u606f\u88ab\u5206\u6563\u3002\n\n- \u51fa\u73b0**\u7a7a\u8282\u70b9**\uff08\u5373 $z$\uff09\u3002\n\n**\u5df2\u77e5\u540e\u8005\u4f1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4ea7\u751f\u5f71\u54cd\uff0c\u524d\u8005\u8fd8\u6709\u5f85\u63a2\u8ba8\u3002**\n\n\u622a\u6b62 $2020.8.13$\uff0c\u6211\u53ea\u627e\u5230\u4e86\u4e24\u79cd\u65b9\u6848\uff08\u6ca1\u6709\u5199\u4ee3\u7801\u9010\u4e2a\u6d4b\u8bd5\uff0c\u5982\u679c\u60a8\u8ba4\u4e3a\u5206\u6790\u6709\u8bef\uff0c\u6700\u597d\u7ed9\u4e00\u4e0b\u4ee3\u7801\u548c $\\text{hack}$\u6570\u636e\u8bf4\u660e\uff09\u3002\n\n\u5148\u6765\u7f57\u5217\u4e00\u4e0b**\u7a7a\u8282\u70b9** $z$ \u7684\u6027\u8d28\uff1a\n\n- $(1)$ \u5176 $trans$ \u8fb9\u6307\u5411\u7684\u8282\u70b9\u4e5f\u4e00\u5b9a\u662f\u7a7a\u8282\u70b9\uff08$z$ \u672c\u8eab\u5c31\u4e3a\u7a7a\u4e86\uff0c\u7ee7\u7eed\u52a0\u5b57\u7b26\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff09\u3002\n\n- $(2)$ \u5176 $link$ \u6307\u5411 $y$\uff0c\u4e14\u6ca1\u6709\u8282\u70b9\u7684 $link$ \u6307\u5411 $z$\uff0c\u6545 $z$ \u5728 $parent$ \u6811\u4e0a\u662f\u53f6\u5b50\u8282\u70b9\u3002\n\n- $(3)$ $maxlen[z]=maxlen[last]+1=maxlen[y],$ $minlen[z]=maxlen[z]+1$\uff08\u7531 $link$ \u8fb9\u7684\u6307\u5411\u63a8\u5bfc\u5f97\u5230\uff09\u3002\n\n- $(4)$ \u5728\u65b0\u5efa\u8282\u70b9\u65f6\uff0c$z$ \u6bd4 $y$ \u5148\u51fa\u73b0\uff0c\u6240\u4ee5\u8282\u70b9\u7f16\u53f7 $z<y$ \u3002\n\n#### **\u3010\u65b9\u6848 1\u3011**\n\n[\u3010\u8fd9\u91cc\u3011](https://www.luogu.com.cn/paste/3oq8xx3b) \u56e0\u4e3a $pos$ \u6620\u5c04\u5230\u4e86\u7a7a\u8282\u70b9\u5bfc\u81f4\u67e5\u8be2 $siz$ \u51fa\u9519\u3002\n\n\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c\u539f\u672c\u67d0\u4e2a\u524d\u7f00\u4e32\u5e94\u8be5\u5339\u914d\u5230 $y$ \u8282\u70b9\u5904\uff0c\u67e5\u8be2 $siz$ \u4e5f\u5e94\u67e5 $y$\uff0c\u4f46\u5b9e\u9645\u7684 $pos$ \u5374\u6620\u5c04\u5230\u4e86 $z$ \u5904\uff08$insert$ \u51fd\u6570\u8fd4\u56de\u503c\u662f $z$\uff09\uff0c\u800c\u539f\u672c\u5e94\u7edf\u8ba1\u7684\u662f $y$ \u5b50\u6811\u5185 $siz$ \u4e4b\u548c\uff0c\u663e\u7136\u4f1a\u51fa\u9519\u3002\n\n\u5982\u679c\u52a0\u4e86\u7279\u5224 $2$ \u5219\u4f1a\u907f\u514d\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\u6216\u8005\u5efa\u597d\u81ea\u52a8\u673a\u540e\u518d\u628a\u6240\u6709\u4e32\u62ff\u51fa\u6765\u8dd1\u5339\u914d\u8bb0\u5f55 $\\text{pos}$ \u3002\n\n#### **\u3010\u65b9\u6848 2\u3011**\n\n[\u3010\u8fd9\u91cc\u3011](https://www.luogu.com.cn/discuss/show/108301?page=1) \u63d0\u5230\u4e86**\u7a7a\u8282\u70b9\u5f71\u54cd\u57fa\u62cd\u987a\u5e8f**\u3002\n\n\u8fd9\u79cd\u65b9\u6848\u5e94\u8be5\u662f\u53ef\u884c\u7684\uff08\u8bc4\u8bba\u91cc [$\\text{alpha1022}$](https://www.luogu.com.cn/user/75840) \u4e5f\u66fe\u63d0\u51fa\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u5f53\u65f6\u6211\u6ca1\u60f3\u6e05\u695a\uff09\u3002\n\n\u5177\u4f53\u5730\u8bf4\uff0c\u901a\u5e38\u59ec\u6392\u662f\u4f9d\u9760 $maxlen$ \u6765\u6c42\u51fa $parent$ \u6811\u7684\u62d3\u6251\u5e8f\uff0c$maxlen$ \u8f83\u5c0f\u7684\u6392\u5728\u524d\u9762\uff0c\u7136\u540e\u4f9d\u6b21\u4ece\u540e\u5f80\u524d\u626b\u5e76\u7edf\u8ba1 $siz$\uff0c\u4ee3\u7801\u5927\u6982\u662f\u9171\u7d2b\u7684\uff1a\n\n```cpp\nfor(Re i=1;i<=O;i++)++cnt[maxlen[i]];\nfor(Re i=1;i<=O;i++)cnt[i]+=cnt[i-1];\nfor(Re i=1;i<=O;i++)Q[cnt[maxlen[i]]--]=i;\nfor(Re i=O;i>=1;--i)siz[link[Q[i]]]+=siz[Q[i]];\n```\n\n\u5982\u679c\u51fa\u73b0\u4e86\u7a7a\u8282\u70b9 $z$\uff0c\u7531\u4e8e $maxlen[z]=maxlen[y]$ \u4e14 $z<y$\uff0c\u5728\u7a33\u5b9a\u6392\u5e8f\u4e0b $z$ \u4f1a\u6392\u5230 $y$ \u7684\u524d\u9762\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c$z$ \u7684\u90a3\u4e2a $siz$ \u8fd8\u6ca1\u6709\u7edf\u8ba1\u5230 $y$ \u5934\u4e0a\u65f6\uff0c $y$ \u5c31\u5df2\u7ecf\u7528\u81ea\u5df1\u7684 $siz$ \u53bb\u66f4\u65b0\u522b\u4eba\u4e86\uff0c\u8fd9\u6837\u7684\u540e\u679c\u5c31\u662f $y$ \u5728 $parent$ \u6811\u4e0a\u7684\u7956\u5148\u8282\u70b9 $siz$ \u90fd\u4f1a\u5c11 $1$\uff08\u8fd9\u4e9b\u90fd\u662f\u7406\u8bba\u5206\u6790\uff0c\u4e0d\u6562\u8bf4\u81ea\u5df1\u5b8c\u5168\u6b63\u786e\uff0c\u4f46\u6709 $\\text{ICPC}$ \u90a3\u9898\u7684\u4f8b\u5b50\uff0c\u5e94\u8be5\u80fd\u5b9e\u9524\uff09\u3002\n\n### **4.\u3010\u79bb\u7ebf\u5199\u6cd5\u518d\u63a2\u3011**\n\n$6$ \u6708 $15$ \u65e5\uff0c[$\\text{ix35}$](https://www.luogu.com.cn/user/113546) \u53d1\u5e03\u4e86\u4e00\u7bc7\u8ba8\u8bba\uff1a[\u60b2\u60e8\u6545\u4e8b \u957f\u6587\u8b66\u544a \u5173\u4e8e\u5e7f\u4e49 $\\text{SAM}$ \u7684\u8ba8\u8bba](https://www.luogu.com.cn/discuss/322224)\uff0c\u5728\u6587\u4e2d\u63d0\u5230\u6211\u7684\u79bb\u7ebf\u5199\u6cd5\u7684\u9519\u8bef\u3002\u5f53\u65f6\u7684\u6211\u521a\u9ad8\u8003\u5b8c\uff0c\u5b9e\u5728\u662f\u6ca1\u6709\u5fc3\u60c5\u4e5f\u6ca1\u6709\u5b9e\u529b\u53bb\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u65f6\u81f3\u4eca\u65e5\uff0c\u53d7 $\\text{Prean}$ \u63d0\u9192\uff0c\u6211\u56de\u8fc7\u5934\u6765\u91cd\u62fe\u7814\u7a76\uff0c\u53d1\u73b0 $\\text{ix35}$ \u8bf4\u7684\u662f\u79bb\u7ebf $\\text{dfs}$ \u5199\u6cd5\u6709\u95ee\u9898\uff08\u8bc4\u8bba\u533a\u4e5f\u6709\u4eba\u63d0\u5230\uff09\u3002\n\n\u6211\u7528\u5979\u7ed9\u51fa\u7684\u6570\u636e `iod od`\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u53d1\u73b0\u79bb\u7ebf $\\text{bfs}$ \u7684\u786e\u662f\u5bf9\u7684\uff0c\u79bb\u7ebf $\\text{dfs}$ \u6709\u8bef\u3002\n\n\u8fd9\u91cc\u4ea7\u751f\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a  \n1.\u4e3a\u4ec0\u4e48\u79bb\u7ebf $\\text{dfs}$ \u6709\u8bef\u3002  \n2.\u4e3a\u4ec0\u4e48\u79bb\u7ebf $\\text{bfs}$ \u6ca1\u6709\u95ee\u9898\uff1f\u6216\u8005\u8bf4\uff0c\u5b9e\u9645\u4e0a\u6709\u95ee\u9898\u4f46\u6211\u6ca1\u6709\u53d1\u73b0\uff1f  \n\n#### **(1).\u3010\u79bb\u7ebf dfs \u4e3a\u4f55\u6709\u8bef\u3011**\n\n\u6ce8\u610f\u5230 `iod` \u548c `od` \u8fd9\u4e24\u4e2a\u4e32\u6ca1\u6709\u516c\u5171\u524d\u7f00\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c$\\text{trie}$ \u5efa\u4e86\u4e2a\u5bc2\u5bde\uff0c\u5728 $\\text{dfs}$ \u904d\u5386 $\\text{trie}$ \u6811\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u548c\u6700\u5f00\u59cb\u63d0\u5230\u7684\u90a3\u4e2a**\u4e3b\u6d41\u5199\u6cd5** $\\text{(2)}$ \u662f\u4e00\u6837\u7684\uff08\u4ec5\u9488\u5bf9\u8fd9\u79cd\"\u5efa\u4e86\u4e2a\u5bc2\u5bde\"\u7684\u60c5\u51b5\uff09\u3002  \n\u4e8e\u662f\uff0c**\u5b83\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e00\u4e2a\u6ca1\u6709\u7279\u5224 $1$ \u4e5f\u6ca1\u6709\u7279\u5224 $2$ \u7684\u5728\u7ebf\u5199\u6cd5**\u3002\u4ea7\u751f\u7a7a\u8282\u70b9 $\\text{z}$ \u4e5f\u5c31\u4e0d\u96be\u7406\u89e3\u4e86\uff08\u4ec5\u5728\u8fd9\u79cd\"\u5efa\u4e86\u4e2a\u5bc2\u5bde\"\u7684\u60c5\u51b5\uff09\u3002  \n\u56de\u987e\u524d\u6587\uff0c\u5728\u8bb2\u7a7a\u8282\u70b9\u4ea7\u751f\u7684\u65f6\u5019\uff0c\u7528\u7684\u4f8b\u5b50\u662f `dcab ab`\uff0c\u8fd9\u4e2a\u6570\u636e\u548c`iod od` \u672c\u8d28\u4e00\u6837\u3002\n\n\uff08\u6ce8\uff1a\u4ee5\u4e0b\u7528\u201c**\u60c5\u51b5** $2$\u201d\u4ee3\u6307\u524d\u9762\u5728\u7ebf\u5199\u6cd5\u4e2d\u7279\u5224 $2$ \u6240\u9488\u5bf9\u7684\u7279\u6b8a\u60c5\u51b5\uff09\n\n> **\u989d\u5916\u601d\u8003**\uff1a\n> \u8003\u8651\u8fd9\u91cc`iod od`\u4ea7\u751f\u7684\u201c\u60c5\u51b5 $2$\u201d\u7684\u539f\u56e0\u662f\uff1a\u5f00\u59cb\u63d2\u5165 `od` \u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd'o'\u65f6\uff0c$last$ \u4e3a\u6839\u8282\u70b9 $1$\uff0c\u6b64\u65f6\u4ea7\u751f\u4e86\u60c5\u51b5 $2$\u3002  \n> \u90a3\u4e48\uff0c\u5982\u679c\u6709\u516c\u5171\u524d\u7f00\u5462\uff1f  \n> \u4e3e\u4e2a\u4f8b\u5b50\uff1a`aiod aod`\uff0c\u4f60\u4f1a\u53d1\u73b0\u6b64\u65f6 $\\text{dfs}$ \u662f\u6b63\u786e\u7684\uff08$\\text{SAM}$ \u7ed3\u6784\u548c\u79bb\u7ebf $\\text{bfs}$ \u4ee5\u53ca\u5728\u7ebf\u5199\u6cd5\u90fd\u4e00\u6837\uff09\uff0c\u8fd9\u662f\u56e0\u4e3a\u63d2\u5165\u7b2c\u4e8c\u4e2a\u4e32\u7684\u5b57\u7b26'o'\u65f6\uff0c$trans[last=pos[a]][o]=NULL$\uff08\u8fd9\u91cc\u7684 $a$ \u6307\u7684\u662f\u5b57\u7b26'a'\u6240\u5bf9\u5e94\u7684 $\\text{Trie}$ \u70b9 \uff09\u3002 \n> \u7531\u6b64\u81ea\u7136\u63d0\u51fa\u4e00\u4e2a\u731c\u60f3\uff1a\n> **\u731c\u60f3** $1$\uff1a\u5b58\u5728\u516c\u5171\u524d\u7f00\u7684\u4e24\u4e2a\u4e32\u5728\u5efa $\\text{SAM}$ \u65f6\u4e0d\u4f1a\u5728\u67d0\u4e2a\u4f4d\u7f6e\u51fa\u73b0\u60c5\u51b5 $2$\uff0c\u6b64\u65f6 $\\text{dfs}$ \u5199\u6cd5\u6b63\u786e\u3002  \n> \u4e0d\u8fc7\uff0c\u8be5\u731c\u60f3\u968f\u4fbf\u5199\u4e00\u4e2a\u66b4\u529b\u5bf9\u62cd\u5c31\u80fd\u8f7b\u677e $\\text{hack}$\u3002  \n> \u53cd\u4f8b\uff1a`ood od`\uff08\u4e0e\u524d\u9762\u63d0\u5230\u7684`aab ab`\u672c\u8d28\u4e00\u6837\uff09\u3002\n\n\u8fd9\u4e2a\u53cd\u4f8b\u544a\u8bc9\u6211\u4eec\u4e00\u4ef6\u4e8b\u60c5\uff1a\u60c5\u51b5 $2$ \u5728\u79bb\u7ebf $\\text{dfs}$ \u5199\u6cd5\u4e2d\u666e\u904d\u5b58\u5728\u3002\n\n**\u3010\u5982\u4f55\u6539\u8fdb\uff1f\u3011**\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u628a\u5728\u7ebf\u5199\u6cd5\u91cc\u7684\u6700\u7ec8\u7248 $insert$ \u76f4\u63a5\u642c\u8fc7\u6765\u3002\u8fd9\u6837\u505a\u5f53\u7136\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\uff0c\u7531\u8fd9\u91cc *\u201c\u5b83\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e2a\u6ca1\u6709\u7279\u5224 $1$\u3001\u7279\u5224 $2$ \u7684\u5728\u7ebf\u5199\u6cd5\u201d* \u5f97\u5230\u542f\u53d1\uff0c\u6211\u4eec\u5e94\u8be5\u6ce8\u610f\u5230\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u70b9\uff1a  \n**\u731c\u60f3 $2$\uff1a\u5728\u7ebf\u5199\u6cd5\u4e2d\u7684\u7279\u5224 $1$\uff0c\u5bf9\u5e94\u7740\u79bb\u7ebf\u5199\u6cd5\u4e2d\u7684 $\\text{Trie}$ \u7ed3\u6784\u5efa\u9020\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u52a0\u7279\u5224 $1$ \u7684\u5728\u7ebf\u5199\u6cd5\u548c\u4e0d\u52a0\u4efb\u4f55\u7279\u5224\u7684\u79bb\u7ebf $\\text{dfs}$ \u5199\u6cd5\u7c7b\u4f3c\u3002**\uff08\u4e8b\u5b9e\u4e0a\u8fd9\u4e00\u76f4\u89c9\u662f\u6b63\u786e\u7684\uff0c\u5177\u4f53\u8bc1\u660e\u89c1\u540e\u6587\uff09  \n\n> \u6ce8\uff1a\u6362\u53e5\u8bdd\u8bf4\uff0c\u79bb\u7ebf $\\text{dfs}$ \u5176\u5b9e\u662f\u4ecb\u4e8e\u201c\u79bb\u7ebf $\\text{bfs}$/\u6700\u7ec8\u7248\u5728\u7ebf\u201d\u548c\u201c\u672a\u52a0\u4efb\u4f55\u7279\u5224\u7684\u5728\u7ebf\u201d\u4e4b\u95f4\u7684\u4e00\u79cd\u6298\u4e2d\u5199\u6cd5\uff0c\u4e00\u79cd\u201c\u7279\u5224\u4e0d\u5168\u7684\u5728\u7ebf\u201d\uff0c\u5b83\u89e3\u51b3\u4e86\u7279\u5224 $1$ \u7684\u60c5\u51b5\uff08\u5b9e\u73b0 $\\text{Trie}$ \u7ed3\u6784\u610f\u4e49\u4e0a\u7684\u538b\u7f29\u8282\u70b9\uff09\uff0c\u4f46\u6ca1\u6709\u89e3\u51b3\u7279\u5224 $2$ \u7684\u60c5\u51b5\uff08\u591a\u4e32 $\\text{SAM}$ \u7ed3\u6784\u4e2d\u7a7a\u8282\u70b9\u7684\u538b\u7f29\uff09\u3002 \n\n\u8fd9\u6837\u6211\u4eec\u5c31\u7406\u89e3\u4e86\u79bb\u7ebf $\\text{dfs}$ \u7684\u672c\u8d28\uff0c\u53ea\u9700\u8981\u52a0\u7279\u5224 $2$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u7279\u5224 $1$ \u662f\u6ca1\u6709\u610f\u4e49\u7684\uff08$\\text{Trie}$ \u7ed3\u6784\u5df2\u7ecf\u9884\u5904\u7406\u597d\u4e86\uff09\u3002\n\n\uff08\u5f53\u7136\uff0c\u8fd9\u53ea\u662f\u89e3\u51b3\u4e86\u6b63\u786e\u6027\u7684\u95ee\u9898\uff0c\u590d\u6742\u5ea6\u80af\u5b9a\u8fd8\u662f\u4e0d\u5982 $\\text{bfs}$ \u7684\uff09\n\n\u79bb\u7ebf $\\text{dfs}$ \u4ee3\u7801\u6539\u8fdb\u7248\u5982\u4e0b\uff1a\n\n```cpp\ninline int insert(Re ch,Re last){//\u666e\u901aSAM\u6dfb\u52a0\u7279\u52242 \n    if(trans[last][ch]){//\u4e0d\u5b58\u5728\u7279\u52241\u7684\u60c5\u51b5 \n        Re p=last,x=trans[p][ch];\n        Re y=++O;maxlen[y]=maxlen[p]+1;\n        for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n        while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n        link[y]=link[x],link[x]=y;\n        return y;//\u5373\u6700\u521d\u7684\u7279\u52242\n    }\n    Re x,y,z=++O,p=last;maxlen[z]=maxlen[last]+1;\n    while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n    if(!p)link[z]=1;\n    else{\n        x=trans[p][ch];\n        if(maxlen[p]+1==maxlen[x])link[z]=x;\n        else{\n            y=++O;maxlen[y]=maxlen[p]+1;\n            for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n            while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n            link[y]=link[x],link[z]=link[x]=y;\n        }\n    }\n    return z;\n}\n```\n\n#### **(2).\u3010bfs \u4e3a\u4f55\u6b63\u786e\u3011**\n\n$\\text{bfs}$ \u4ee3\u7801\u4e5f\u662f\u4f7f\u7528\u7684\u666e\u901a $insert$\uff0c\u6ca1\u52a0\u4efb\u4f55\u7279\u5224\uff0c\u4e3a\u4ec0\u4e48\u5b83\u5c31\u6ca1\u6709\u50cf $\\text{dfs}$ \u90a3\u6837\u51fa\u95ee\u9898\u5462\uff1f\n\n\u5173\u4e8e\u7279\u5224 $1$ \u7684\u60c5\u51b5\uff0c\u524d\u9762\u5df2\u7ecf\u8ba8\u8bba\u8fc7\uff0c\u7531 $\\text{Trie}$ \u7ed3\u6784\u6240\u89e3\u51b3\u3002\n\n\u5173\u4e8e\u60c5\u51b5 $2$\uff1a  \n\u5148\u8bf4\u4e00\u4e0b\u4e24\u4e2a\u8bb0\u53f7\u8868\u8fbe\uff1a  \n$deep(a)$\uff1a$\\text{Trie}$ \u70b9 $a$ \u5728 $\\text{Trie}$ \u6811\u4e0a\u7684\u6df1\u5ea6\u3002  \n$S_{root_{Trie}->a}$\uff1a\u4ece $\\text{Trie}$ \u6811\u6839 $root_{Trie}$ \u5230 $\\text{Trie}$ \u70b9 $a$ \u8fd9\u4e00\u6761\u957f\u4e3a $deep(a)$ \u7684\u8def\u5f84\u6240\u8868\u793a\u7684\u5b57\u7b26\u4e32\uff08\u5373 $a$ \u5728 $\\text{Trie}$ \u4e0a\u7684\u524d\u7f00\u5b57\u7b26\u4e32\uff09\u3002\n\n> **\u5f15\u7406**\uff1a\u5bf9\u4e8e\u4efb\u4f55 $\\text{Trie}$ \u70b9 $a$\uff0c\u4e00\u5b9a\u6709 $maxlen[pos[a]]=deep(a)$ \u3002  \n> **\u8bc1\u660e**\uff1a  \n> \u2460$maxlen[pos[a]]<deep(a)$ \u663e\u7136\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a $pos[a]$ \u8fd9\u4e2a\u7b49\u4ef7\u7c7b\u4e00\u5b9a\u5305\u542b $S_{root_{Trie}->a}$\uff0c\u800c $|S_{root_{Trie}->a}|=deep(a)$ \u3002  \n> \u2461**\u5047\u8bbe** $maxlen[pos[a]]>deep(a)$\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6709\u53e6\u4e00\u70b9 $b$\uff0c$deep(b)>deep(a)$\uff0c$S_{root_{Trie}->b}$ \u4e5f\u5728\u8be5\u7b49\u4ef7\u7c7b\u4e2d\uff0c\u5373 $pos[b]=pos[a]$ \u3002  \n> \u4f46\u662f\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u666e\u901a $insert$ \u4ee3\u7801\uff0c\u6bcf\u4e00\u4e2a $a$ \u5bf9\u5e94\u7684 $pos[a]$ \u90fd\u662f\u65b0\u5efa\u7684\u70b9\uff0c\u6240\u4ee5 $pos[a]$ \u4e0d\u53ef\u80fd\u7b49\u4e8e $pos[b]$ \u3002  \n> **\u6545\u5047\u8bbe\u4e0d\u6210\u7acb**\u3002  \n\n$\\text{bfs}$ \u7684\u7279\u70b9\u662f\u4e00\u5c42\u4e00\u5c42\u904d\u5386\uff0c\u5b58\u5728\u8fd9\u6837\u4e00\u4e2a\u6027\u8d28\uff1a\u5f53\u524d $\\text{Trie}$ \u70b9 $a$ \u7684\u6df1\u5ea6 $deep(a)=deep(fa_{Trie}(a))+1$ \u4e3a\u76ee\u524d\u6240\u904d\u5386\u8fc7\u7684\u6700\u6df1\u7684\u6df1\u5ea6\u3002  \n\u5728\u51c6\u5907\u5c06 $\\text{Trie}$ \u70b9 $a$ \u63d2\u5165 $\\text{SAM}$ \u7684\u65f6\uff0c$last$ \u4e3a $pos[fa_{Trie}(a)]$ \u3002  \n\u6b64\u65f6\u4e00\u5b9a\u6709\u5982\u4e0b\u7ed3\u8bba\uff1a  \n\n> **\u7ed3\u8bba**\uff1a$trans[last][ch]= NULL$\u3002  \n> **\u8bc1\u660e**\uff1a**\u5047\u8bbe**\u5b58\u5728 $x=trans[last][ch]\\neq NULL$\uff0c\u5219\u6709 $maxlen[x]> maxlen[last]$\uff08\u8f6c\u79fb\u8fb9\u6307\u51fa\u53bb\u7684\u70b9\u7684\u957f\u5ea6\u4e0d\u53ef\u80fd\u5c0f\u4e8e\u7b49\u4e8e\u81ea\u8eab\uff09\u3002  \n> \u53c8\u7531\u5f15\u7406\u5f97\uff1a$maxlen[x]> maxlen[last]=deep(fa_{Trie}(a))$ \u2014\u2014\u2460  \n> \u5728\u7b49\u4ef7\u7c7b $x$ \u4e2d\u53d6\u6700\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32 $s_{maxlen}(x)$ \u5728 $\\text{Trie}$ \u4e0a\u5bf9\u5e94\u7684\u672b\u8282\u70b9 $a'$\uff08\u663e\u7136 $s_{maxlen}(x)$ \u5c31\u662f $S_{root_{Trie}->a'}$\uff09\uff0c\u6709 $pos[a']=x$\uff0c    \n> \u7531\u5f15\u7406\u53ca\u2460\u5f97\uff1a$deep(a')=maxlen[pos[a']]=maxlen[x]>deep(fa_{Trie}(a))$\uff0c  \n> \u5219\u5fc5\u6ee1\u8db3 $maxlen[x]=deep(a')=deep(fa_{Trie}(a))+1$ \u2014\u2014\u2461\uff08\u76ee\u524d\u6700\u6df1\u7684\u70b9\u6df1\u5ea6\u53ea\u80fd\u662f\u8fd9\u4e48\u5927\uff09\uff0c  \n> \u6240\u4ee5 $deep(a')=deep(a)$ \u3002  \n> \u6ce8\u610f\u6211\u4eec\u662f\u6cbf\u7740 $S_{root_{Trie}->fa_{Trie}(a)}$ \u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u5728\u81ea\u52a8\u673a\u4e0a\u4e00\u8def\u8d70\u5230 $last$ \u7684\uff0c$s_{maxlen}(last)$ \u5373\u4e3a $S_{root_{Trie}->fa_{Trie}(a)}$\uff0c\u4e14\u5b57\u7b26\u4e32 $SS=s_{maxlen}(last)+ch$ \u5fc5\u5b9a\u5728\u7b49\u4ef7\u7c7b $x$ \u4e2d\u3002  \n> \u8fd9\u91cc\u7684 $SS$ \u5b9e\u9645\u4e0a\u7b49\u4e8e $S_{root_{Trie}->a}$\uff0c\u6240\u4ee5 $|SS|=deep(a)=deep(a')=|S_{root_{Trie}->a'}|$\uff0c\u7531\u4e8e\u5b57\u7b26\u4e32 $S_{root_{Trie}->a'}$ \u4e5f\u5728\u8be5\u7b49\u4ef7\u7c7b\u4e2d\uff0c\u6240\u4ee5 $S_{root_{Trie}->a'}=SS=S_{root_{Trie}->a}$\uff08\u540c\u4e00\u7b49\u4ef7\u7c7b\u91cc\u4e00\u79cd\u957f\u5ea6\u53ea\u5bf9\u5e94\u4e00\u79cd\u5b57\u7b26\u4e32\uff09\u3002  \n> \u7531\u4e8e\u6b64\u65f6 $a$ \u76ee\u524d\u8fd8\u5728\u51c6\u5907\u63d2\u5165\u9636\u6bb5\uff0c\u5b9e\u9645\u8fd8\u6ca1\u6709\u5bf9\u5e94\u7684 $\\text{SAM}$ \u7684\u70b9\uff0c\u6240\u4ee5 $a'$ \u4e0e a \u4e3a\u4e0d\u540c\u7684 $\\text{Trie}$ \u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c$\\text{Trie}$ \u6811\u4e0a\u51fa\u73b0\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u70b9\u5bf9\u5e94\u7740\u5b8c\u5168\u76f8\u540c\u7684\u524d\u7f00\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f $\\text{Trie}$ \u7ed3\u6784\u6240\u4e0d\u5141\u8bb8\u7684\u3002  \n**\u6545\u5047\u8bbe\u4e0d\u6210\u7acb**\u3002  \n> \u53e6\u5916\uff0c\u7531\u5f15\u7406\u53ca\u2461\u53ef\u5f97 $maxlen[x]=deep(fa_{Trie}(a))+1=maxlen[last]+1$\uff0c\u53d1\u73b0\u6211\u4eec\u7684\u5047\u8bbe\u5176\u5b9e\u5c31\u662f\u7279\u5224 $1$ \u6240\u5224\u65ad\u7684\u60c5\u51b5\u3002  \n> \u6240\u4ee5\uff0c**\u524d\u6587\u6240\u8bf4\u7684\u201c\u7279\u5224 $1$ \u7531 $\\text{Trie}$ \u7ed3\u6784\u6240\u89e3\u51b3\u201d\u4e5f\u5f97\u5230\u4e86\u8bc1\u660e**\u3002  \n\n\n\u7531\u6b64\u8bc1\u660e\u79bb\u7ebf $\\text{bfs}$ \u4e0d\u9700\u8981\u5199\u4e0a\u8ff0\u4e24\u4e2a\u7279\u5224\u3002\n\n## **\u56db\uff1a\u3010\u5e7f\u4e49SAM\u7684\u590d\u6742\u5ea6\u3011**\n\n\u8bbe $|T|$ \u4e3a $\\text{Trie}$ \u6811\u5927\u5c0f\uff0c$|A|$ \u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\uff08\u53ef\u89c6\u4e3a\u5e38\u6570\uff09\uff0c$G(T)$ \u4e3a $\\text{Trie}$ \u6811\u6240\u6709\u53f6\u8282\u70b9\u6df1\u5ea6\u4e4b\u548c\u3002\n\n- \u72b6\u6001\u6570\uff08\u8282\u70b9\u6570\uff09\u4e3a\u7ebf\u6027 $O(2|T|)$ \u3002\n\n- \u8f6c\u79fb\u51fd\u6570\uff08\u8fb9\u6570\uff09\u4e0a\u754c\u4e3a $O(|T||A|)$ \u3002\n\n- \u79bb\u7ebf\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|T||A|+|T|)$ \u3002\n\n- \u5728\u7ebf\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(|T||A|+G(T))$ \u3002\n\n\u4e0a\u8ff0\u6027\u8d28\u5728\u5218\u7814\u7ece\u7684\u8bba\u6587\u90fd\u4e2d\u6709\u4e25\u8c28\u8bc1\u660e\uff0c\u8fd9\u91cc\u4e0d\u8d58\u8ff0\u3002\n\n\u6709\u8da3\u7684\u662f\uff0c\u5b9e\u9645\u8fd0\u884c\u6548\u7387\u5728\u7ebf\u6784\u9020\uff08\u5373\u4f7f\u662f\u4e0d\u591f\u4f91\u79c0\u7684\u5199\u6cd5\uff09\u8981\u6bd4\u79bb\u7ebf\u5feb\u5f97\u591a\u3002\n\n## **\u4e94\uff1a\u3010\u4f8b\u9898\u3011**\n\n\uff08\u7531\u4e8e\u4ee3\u7801\u8f83\u591a\uff0c\u53ef\u80fd\u4f1a\u663e\u5f97\u8f83\u5197\u957f\uff0c\u4f46\u5e7f\u4e49 $\\text{SAM}$ \u7684\u5199\u6cd5\u5177\u6709\u4e89\u8bae\uff0c\u5728\u5404\u79cd\u9898\u76ee\u4e2d\u90fd\u80fd\u89c1\u5230\u4e00\u4e9b\u5947\u602a\u7684\u505a\u6cd5\uff0c\u6240\u4ee5\u6211\u8fd8\u662f\u628a\u4ee3\u7801\u653e\u51fa\u6765\u4f9b\u5927\u5bb6\u53c2\u8003\u4e00\u4e0b\uff09\n\n### **1.\u3010\u5e7f\u4e49 SAM \u6a21\u677f\u3011**\n\n\u4f20\u9001\u95e8\uff1a[\u3010\u6a21\u677f\u3011\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u5e7f\u4e49 $\\text{SAM}$\uff09 $\\text{[P6139]}$](https://www.luogu.com.cn/problem/P6139)\n\n#### **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u6c42\u591a\u4e2a\u5b57\u7b26\u4e32\u7684\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u4e2a\u6570\u3002\n\n#### **\u3010\u5206\u6790\u3011**\n\n\u968f\u4fbf\u9009\u4e00\u79cd\u65b9\u5f0f\u5efa\u597d\u81ea\u52a8\u673a\uff0c\u7b54\u6848\u4e3a\uff1a$\\sum maxlen[i]-maxlen[link[i]]$ \u3002\n\n#### **\u3010Code (\u79bb\u7ebf)\u3011**\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#define Re register int\n#define LL long long\nusing namespace std;\nconst int N=2e6+5,M=1e6+3;\nint n,t;char ch[N];\ninline void in(Re &x){\n    int fu=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')fu|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=fu?-x:x;\n}\nstruct Trie{\n    int O,c[M],fa[M],tr[M][26];\n    //fa[x]: Trie\u6811\u4e0ax\u7684\u7236\u8282\u70b9\n    //c[x]: Trie\u6811\u4e0ax\u7684\u989c\u8272\n    Trie(){O=1;}//\u6839\u521d\u59cb\u5316\u4e3a1\n    inline void insert(char ch[]){\n        Re p=1;\n        for(Re i=1;ch[i];++i){\n            Re a=ch[i]-'a';\n            if(!tr[p][a])tr[p][a]=++O,fa[O]=p,c[O]=a;\n            p=tr[p][a];\n        }\n    }\n}T1;\nstruct Suffix_Automaton{\n    int O,pos[N],link[N],maxlen[N],trans[N][26];queue<int>Q;\n    //pos[x]:Trie\u4e0a\u7684x\u8282\u70b9\uff08\u8def\u5f841->x\u6240\u8868\u793a\u7684\u5b57\u7b26\u4e32\uff09\u5728SAM\u4e0a\u7684\u5bf9\u5e94\u8282\u70b9\u7f16\u53f7\n    //link[i]: \u540e\u7f00\u94fe\u63a5\n    //trans[i]: \u72b6\u6001\u8f6c\u79fb\u6570\u7ec4\n    Suffix_Automaton(){O=1;}//\u6839\u521d\u59cb\u5316\u4e3a1\n    inline int insert(Re ch,Re last){//\u548c\u666e\u901aSAM\u4e00\u6837\n        Re x,y,z=++O,p=last;maxlen[z]=maxlen[last]+1;\n        while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n        if(!p)link[z]=1;\n        else{\n            x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])link[z]=x;\n            else{\n                y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[z]=link[x]=y;\n            }\n        }\n        return z;\n    }\n    inline void build(){//bfs\u904d\u5386Trie\u6811\u6784\u9020\u5e7f\u4e49SAM \n        for(Re i=0;i<26;++i)if(T1.tr[1][i])Q.push(T1.tr[1][i]);//\u63d2\u5165\u7b2c\u4e00\u5c42\u5b57\u7b26\n        pos[1]=1;//Tire\u6811\u4e0a\u7684\u68391\u5728SAM\u4e0a\u7684\u4f4d\u7f6e\u4e3a\u68391\n        while(!Q.empty()){\n            Re x=Q.front();Q.pop();\n            pos[x]=insert(T1.c[x],pos[T1.fa[x]]);//\u6ce8\u610f\u662fpos[Trie->fa[x]]\n            for(Re i=0;i<26;++i)if(T1.tr[x][i])Q.push(T1.tr[x][i]);\n        }\n    }\n    inline void sakura(){\n        LL ans=0;\n        for(Re i=2;i<=O;++i)ans+=maxlen[i]-maxlen[link[i]];\n        printf(\"%lld\\n\",ans);\n    }\n}SAM;\nint main(){\n//    freopen(\"123.txt\",\"r\",stdin);\n    in(n);\n    for(Re i=1;i<=n;++i)scanf(\"%s\",ch+1),T1.insert(ch);\n    SAM.build(),SAM.sakura();\n}\n```\n\n#### **\u3010Code (\u5728\u7ebf)\u3011**\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#define Re register int\n#define LL long long\nusing namespace std;\nconst int N=2e6+5;\nint n;char ch[N];\ninline void in(Re &x){\n    int fu=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')fu|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=fu?-x:x;\n}\nstruct Suffix_Automaton{\n    int O,link[N],maxlen[N],trans[N][26];\n    //link[i]: \u540e\u7f00\u94fe\u63a5\n    //trans[i]: \u72b6\u6001\u8f6c\u79fb\u6570\u7ec4\n    Suffix_Automaton(){O=1;}//\u6839\u521d\u59cb\u5316\u4e3a1\n    inline int insert(Re ch,Re last){\n        if(trans[last][ch]){\n            Re p=last,x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])return x;//\u5373\u6700\u521d\u7684\u7279\u52241\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[x]=y;\n                return y;//\u5373\u6700\u521d\u7684\u7279\u52242\n            }\n        }\n        Re z=++O,p=last;maxlen[z]=maxlen[last]+1;\n        while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n        if(!p)link[z]=1;\n        else{\n            Re x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])link[z]=x;\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[z]=link[x]=y;\n            }\n        }\n        return z;\n    }\n    inline void sakura(){\n        LL ans=0;\n        for(Re i=2;i<=O;++i)ans+=maxlen[i]-maxlen[link[i]];\n        printf(\"%lld\\n\",ans);\n    }\n}SAM;\nint main(){\n//    freopen(\"123.txt\",\"r\",stdin);\n    in(n);\n    for(Re i=1;i<=n;++i){\n        scanf(\"%s\",ch+1);Re last=1;\n        for(Re j=1;ch[j];++j)last=SAM.insert(ch[j]-'a',last);\n    }\n    SAM.sakura();\n}\n```\n\n### **2.\u3010\u5206\u522b\u7ef4\u62a4\u4e0d\u540c\u4e32\u7684 siz\u3011**\n\n\u4f20\u9001\u95e8\uff1a[\u627e\u76f8\u540c\u5b57\u7b26 $\\text{[P3181]}$](https://www.luogu.com.cn/problem/P3181)\n\n#### **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u6c42\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u76f8\u540c\u5b50\u4e32\u6570\u91cf\u3002\n\n#### **\u3010\u5206\u6790\u3011**\n\n\u5982\u4e0a\u9ed1\u4f53\u5b57\u6240\u8bf4\uff0c\u4e24\u4e2a\u4e32\u7684 $|endpos|$ \u8981\u5206\u5f00\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7528 $siz[x][id]$ \u8868\u793a\u8282\u70b9 $x$ \u5728\u4e32 $id$ \u4e0a\u7684 $\\{endpos\\}$ \u5927\u5c0f\u3002\n\n\u5219\u7b54\u6848\u4e3a\uff1a$\\sum siz[i][0]\\times siz[i][1]\\times (maxlen[i]-maxlen[link[i]])$ \u3002\n\n#### **\u3010Code (\u79bb\u7ebf)\u3011**\n\n\u6c42 $siz$ \u7528\u79bb\u7ebf\u505a\u6cd5\u8c8c\u4f3c\u4f1a\u9ebb\u70e6\u4e00\u70b9\uff0c\u8981\u5728 $\\text{Trie}$ \u6811\u4e0a\u8bb0\u5f55\u4e0d\u540c\u5b57\u7b26\u4e32\u7684\u4fe1\u606f\uff0c\u7b49\u5565\u65f6\u5019~~\u5fc3\u60c5\u597d\u4e86~~\u6709\u7a7a\u4e86\u518d\u56de\u6765\u586b\u5751\u5427\u3002\n\n#### **\u3010Code (\u5728\u7ebf)\u3011**\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#define Re register int\n#define LL long long\nusing namespace std;\nconst int N=8e5+5;\nchar ch[200003];LL ans;\ninline void in(Re &x){\n    int fu=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')fu|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=fu?-x:x;\n}\nstruct Suffix_Automaton{\n    int O,ru[N],link[N],maxlen[N],siz[N][2],trans[N][26];queue<int>Q;\n    //siz[x]: |endpos[x]| \u5373\u8282\u70b9x\u7684endpos\u5927\u5c0f\n    Suffix_Automaton(){O=1;}\n    inline int insert(Re ch,Re last,Re id){\n        if(trans[last][ch]){\n            Re p=last,x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x]){siz[x][id]=1;return x;} \n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[x]=y;\n                siz[y][id]=1;return y;\n            }\n        }\n        Re z=++O,p=last;maxlen[z]=maxlen[last]+1;\n        while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n        if(!p)link[z]=1;\n        else{\n            Re x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])link[z]=x;\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[z]=link[x]=y;\n            }\n        }\n        siz[z][id]=1;\n        return z;\n    }\n    inline void sakura(){\n        for(Re i=2;i<=O;++i)++ru[link[i]];\n        for(Re i=1;i<=O;++i)if(!ru[i])Q.push(i);\n        while(!Q.empty()){\n            Re x=Q.front();Q.pop();\n            siz[link[x]][0]+=siz[x][0];//\u5206\u5f00\u66f4\u65b0\n            siz[link[x]][1]+=siz[x][1];\n            if(!(--ru[link[x]]))Q.push(link[x]);\n        }\n        for(Re i=2;i<=O;++i)//\u7edf\u8ba1\u7b54\u6848\n            ans+=(LL)siz[i][0]*siz[i][1]*(maxlen[i]-maxlen[link[i]]);\n        printf(\"%lld\\n\",ans);\n    }\n}SAM;\nint main(){\n//    freopen(\"123.txt\",\"r\",stdin);\n    for(Re i=0;i<2;++i){\n        scanf(\"%s\",ch+1);Re last=1;\n        for(Re j=1;ch[j];++j)last=SAM.insert(ch[j]-'a',last,i);\n    }\n    SAM.sakura();\n}\n```\n\n### **3.\u3010\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4 siz\u3011**\n\n\u4f20\u9001\u95e8\uff1a[$\\text{Forensic Examination}$](https://www.luogu.com.cn/problem/CF666E) [$\\text{[CF666E]}$](codeforces.com/problemset/problem/666/E)\n\n#### **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u7ed9\u51fa\u4e3b\u4e32 $S$ \u4ee5\u53ca $m$ \u4e2a\u5b57\u7b26\u4e32 $T[1..m]$ \u3002\u6709\u82e5\u5e72\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u67e5\u8be2 $S$ \u7684\u5b50\u4e32 $S[p_l..p_r]$ \u5728 $T[l..r]$ \u4e2d\u7684\u54ea\u4e2a\u4e32 $T_{i}$ \u91cc\u7684\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u8f93\u51fa $i$ \u4ee5\u53ca\u51fa\u73b0\u6b21\u6570\uff0c\u6709\u591a\u89e3\u5219\u53d6\u6700\u9760\u524d\u7684\u90a3\u4e00\u4e2a\u3002\n\n#### **\u3010\u5206\u6790\u3011**\n\n\u5148\u628a\u6240\u6709\u5b57\u7b26\u4e32\u90fd\u63d2\u5165\u5230\u5e7f\u4e49 $\\text{SAM}$ \u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u9897\u4e0b\u6807\u4e3a $[1,m]$ \u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4 $siz$\uff08\u6ce8\u610f\u63d2\u5165 $S$ \u65f6\u5c31\u4e0d\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u4e86\uff09\u3002\u7531\u4e8e $siz$ \u7684\u7ef4\u62a4\u662f\u7edf\u8ba1\u5b50\u6811\u548c\uff0c\u6240\u4ee5\u63d2\u5165\u7ed3\u675f\u540e\u8981\u5728 $parent$ \u6811\u4e0a\u8dd1\u4e00\u4e0b\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u67e5\u8be2\u65f6\u5148\u5728 $parent$ \u6811\u4e0a\u500d\u589e\u627e\u5230\u5305\u542b\u5b50\u4e32 $S[p_l,p_r]$ \u7684\u7b49\u4ef7\u7c7b\u72b6\u6001\u8282\u70b9\uff0c\u7136\u540e\u5728\u8be5\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2\u533a\u95f4 $[l,r]$ \u4e2d\u7684\u6700\u5927\u503c\uff0c\u987a\u4fbf\u7ef4\u62a4\u4e0b\u6700\u5927\u503c\u6240\u5904\u4f4d\u7f6e\u5373\u53ef\u3002\n\n#### **\u3010Code (\u79bb\u7ebf)\u3011**\n\n\u540c\u4e0a\uff0c\u9700\u8981\u8bb0\u5f55 $siz$ \u7684\u79bb\u7ebf\u505a\u6cd5\u5148\u5495\u7740\u3002\n\n#### **\u3010Code (\u5728\u7ebf)\u3011**\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<string>\n#define LL long long\n#define Re register int\nusing namespace std;\nconst int N=5e5+3,M=5e4+3,logN=21;\nint n,m,x,y,l,r,T,pos[N];char s[N],ch[M];\ninline void in(Re &x){\n    int f=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')f|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=f?-x:x;\n}\nstruct QWQ{\n    int x,id;QWQ(Re X=0,Re ID=0){x=X,id=ID;}\n    inline bool operator>(const QWQ &O)const{return x!=O.x?x>O.x:id<O.id;}\n};\ninline QWQ max(QWQ A,QWQ B){return A>B?A:B;}\nint pt[N+M<<1];\nstruct Segment_Tree{\n    #define pl (tr[p].lp)\n    #define pr (tr[p].rp)\n    #define mid ((L+R)>>1)\n    int O;\n    struct QAQ{int lp,rp;QWQ ans;}tr[(M<<1)*30];\n    inline void pushup(Re p){\n        tr[p].ans=max(tr[pl].ans,tr[pr].ans);\n    }\n    inline void change(Re &p,Re L,Re R,Re x){\n        if(!p)p=++O;\n        if(L==R){++tr[p].ans.x,tr[p].ans.id=L;return;}\n        if(x<=mid)change(pl,L,mid,x);\n        else change(pr,mid+1,R,x);\n        pushup(p);\n    }\n    inline int merge(Re p,Re q,Re L,Re R){\n        if(!p||!q)return p+q;\n        Re x=++O;\n        if(L==R){tr[x]=tr[p],tr[x].ans.x+=tr[q].ans.x;return x;}\n        tr[x].lp=merge(pl,tr[q].lp,L,mid);\n        tr[x].rp=merge(pr,tr[q].rp,mid+1,R);\n        pushup(x);return x;\n    }\n    inline QWQ ask(Re p,Re L,Re R,Re l,Re r){\n        if(!p)return QWQ(0,m+1);\n        if(l<=L&&R<=r)return tr[p].ans;\n        QWQ ans=QWQ(0,m+1);\n        if(l<=mid)ans=max(ans,ask(pl,L,mid,l,r));\n        if(r>mid)ans=max(ans,ask(pr,mid+1,R,l,r));\n        return ans;\n    }\n}TR;\nstruct Suffix_Automaton{\n    int O,link[N+M<<1],maxlen[N+M<<1],trans[N+M<<1][26];\n    Suffix_Automaton(){O=1;}\n    inline int insert(Re ch,Re last,Re id){\n        if(trans[last][ch]){\n            Re p=last,x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x]){if(id)TR.change(pt[x],1,m,id);return x;}\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[x]=y;\n                if(id)TR.change(pt[y],1,m,id);\n                return y;\n            }\n        }\n        Re z=++O,p=last;maxlen[z]=maxlen[p]+1;\n        while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n        if(!p)link[z]=1;\n        else{\n            Re x=trans[p][ch];\n            if(maxlen[x]==maxlen[p]+1)link[z]=x;\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<26;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[x]=link[z]=y;\n            }\n        }\n        if(id)TR.change(pt[z],1,m,id);\n        return z;\n    }\n    int o,deep[N+M<<1],head[N+M<<1],ant[N+M<<1][23];\n    struct QAQ{int to,next;}a[N+M<<1];\n    inline void add(Re x,Re y){a[++o].to=y,a[o].next=head[x],head[x]=o;}\n    inline void dfs(Re x,Re fa){\n        deep[x]=deep[ant[x][0]=fa]+1;\n        for(Re i=1;(1<<i)<=deep[x];++i)ant[x][i]=ant[ant[x][i-1]][i-1];\n        for(Re i=head[x],to;i;i=a[i].next)\n            dfs(to=a[i].to,x),pt[x]=TR.merge(pt[x],pt[to],1,m);\n    }\n    inline void build(){\n        for(Re i=2;i<=O;++i)add(link[i],i);dfs(1,0);\n    }\n    inline int get(Re x,Re len){\n        Re p=pos[x];\n        for(Re i=logN;i>=0;--i)if(ant[p][i]&&maxlen[ant[p][i]]>=len)p=ant[p][i];\n        return p;\n    }\n    inline void sakura(Re l,Re r,Re x,Re y){\n        QWQ ans=TR.ask(pt[get(y,y-x+1)],1,m,l,r);\n        if(ans.x==0)ans.id=l;\n        printf(\"%d %d\\n\",ans.id,ans.x);\n    }\n}SAM;\nint main(){\n//    freopen(\"123.txt\",\"r\",stdin);\n    scanf(\"%s\",s+1),n=strlen(s+1),in(m);\n    for(Re i=1;i<=m;++i){\n        scanf(\"%s\",ch+1);Re last=1;\n        for(Re j=1;ch[j];++j)last=SAM.insert(ch[j]-'a',last,i);\n    }\n    for(Re i=1,last=1;i<=n;++i)pos[i]=last=SAM.insert(s[i]-'a',last,0);\n    SAM.build(),in(T);\n    while(T--)in(l),in(r),in(x),in(y),SAM.sakura(l,r,x,y);\n}\n```\n\n### **4.\u3010\u6811\u4e0a\u672c\u8d28\u4e0d\u540c\u8def\u5f84\u6570\u3011**\n\n\u4f20\u9001\u95e8\uff1a[\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61 $\\text{[ZJOI2015] [P3346]}$](https://www.luogu.com.cn/problem/P3346) [$\\text{[Bzoj3926]}$](https://www.lydsy.com/JudgeOnline/problem.php?id=3926)\n\n#### **\u3010\u9898\u76ee\u63cf\u8ff0\u3011**\n\n\u7ed9\u51fa\u4e00\u9897\u53f6\u5b50\u7ed3\u70b9\u4e0d\u8d85\u8fc7 $20$ \u4e2a\u7684\u65e0\u6839\u6811\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u4e00\u4e2a\u4e0d\u8d85\u8fc7 $10$ \u7684\u6570\u5b57\uff0c\u6c42\u6811\u4e0a\u672c\u8d28\u4e0d\u540c\u7684\u8def\u5f84\u4e2a\u6570\uff08\u4e24\u6761\u8def\u5f84\u76f8\u540c\u5b9a\u4e49\u4e3a\uff1a\u5176\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u4e0a\u7684\u6570\u5b57\u4f9d\u6b21\u76f8\u8fde\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u76f8\u540c\uff09\u3002\n\n#### **\u3010\u5206\u6790\u3011**\n\n\u9996\u5148\u6709\u4e00\u4e2a\u5f88\u9ebb\u70e6\u7684\u5730\u65b9\u662f\u8def\u5f84\u53ef\u4ee5\u62d0\u5f2f\uff08\u5373\u4e24\u7aef\u70b9\u5206\u522b\u5728\u5176 $lca$ \u4e24\u4e2a\u4e0d\u540c\u513f\u5b50\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff09\uff0c\u800c $\\text{Trie}$ \u6811\u548c\u5404\u79cd\u81ea\u52a8\u673a\u5728\u201c\u63a5\u53d7\u201d\u5b57\u7b26\u4e32\u65f6\u90fd\u662f\u4ee5\u6839\u4e3a\u8d77\u70b9\u4ece\u4e0a\u5f80\u4e0b\u5f84\u76f4\u8d70\u5230\u5e95\uff08\u4ec0\u4e48\uff1f\u8df3 $parent$ \u6811\uff1f\u4f60\u8df3\u4efb\u4f60\u8df3\uff0c\u8df3\u5b8c\u8fd8\u662f\u76f4\u7684\uff09\n\n\u6240\u4ee5\u8981\u60f3\u529e\u6cd5\u628a\u8def\u5f84\u634b\u76f4\uff0c\u778e $yy$ \u53ef\u80fd\u4e0d\u592a\u5bb9\u6613\u60f3\u51fa\u6765\uff0c\u8fd9\u91cc\u76f4\u63a5\u629b\u7ed3\u8bba\uff1a\n\n> \u4e00\u9897\u65e0\u6839\u6811\u4e0a\u4efb\u610f\u4e00\u6761\u8def\u5f84\u5fc5\u5b9a\u53ef\u4ee5\u5728\u4ee5\u67d0\u4e2a\u53f6\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u53d8\u6210**\u4e00\u6761\u4ece\u4e0a\u5230\u4e0b\u7684\u8def\u5f84**\uff08\u5229\u4e8e\u5e7f\u4e49     $\\text{SAM}$ \u7684\u4f7f\u7528\uff09\u3002\n\n\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u8bf4\u53f6\u8282\u70b9\u4e0d\u8d85\u8fc7 $20$ \u4e2a\uff0c\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\uff1f\n\n\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53f6\u8282\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u904d\u5386\u6574\u68f5\u6811\u554a\uff01\n\n**\u5c06\u4e00\u5171 $cnt_{leaf}$ \u9897\u6811\u4e2d\u7684\u6240\u6709\u524d\u7f00\u4e32\u90fd\u62bd\u51fa\u6765\u5efa\u7acb\u5e7f\u4e49 $\\text{SAM}$\uff0c\u7136\u540e\u76f4\u63a5\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u3002** \u5176\u4e2d\u524d\u7f00\u4e32\u5b9a\u4e49\u4e3a\u4ece\u6839\u8282\u70b9\uff08\u65e0\u6839\u6811\u7684\u67d0\u4e2a\u53f6\u5b50\u7ed3\u70b9\uff09\u5230\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u6240\u6784\u6210\u7684\u5b57\u7b26\u4e32\uff08\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06 $cnt_{leaf}$ \u9897 $\\text{Trie}$ \u6811\u5408\u5728\u4e86\u4e00\u8d77\u8dd1\u5e7f\u4e49 $\\text{SAM}$\uff09\u3002\n\n**\u6ce8\u610f\u6570\u7ec4\u5927\u5c0f\u548c\u7a7a\u95f4\u9650\u5236\u3002**\n\n#### **\u3010Code (\u79bb\u7ebf)\u3011**\n\n\uff08\u672c\u9898 $\\text{Trie}$ \u6811\u7684\u6784\u9020\u65b9\u6cd5\u4e0e\u5176\u4ed6\u76f8\u6bd4\u8f83\u4e3a\u7279\u522b\uff09\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define Re register int\n#define LL long long\nusing namespace std;\nconst int N=4e6+5,N20=2e6+3,Nn=1e5+3;\nint n,m,o,x,y,t,C,du[Nn],co[Nn],head[Nn];LL ans;\nstruct QAQ{int to,next;}a[Nn<<1];\ninline void add(Re x,Re y){a[++o].to=y,a[o].next=head[x],head[x]=o;}\ninline void in(Re &x){\n    int fu=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')fu|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=fu?-x:x;\n}\nstruct Trie{\n    int O,c[N20],fa[N20],tr[N20][10];\n    Trie(){O=1;}\n    inline int insert(Re p,Re ch){//\u5728p\u540e\u9762\u63d2\u5165\u4e00\u4e2ach\n        if(!tr[p][ch])tr[p][ch]=++O,c[O]=ch,fa[O]=p;\n        return tr[p][ch];\n    }\n}T1;\nstruct Suffix_Automaton{    \n    int O,pos[N],link[N],trans[N][10],maxlen[N];queue<int>Q;\n    Suffix_Automaton(){O=1;}\n    inline int insert(Re ch,Re last){\n        Re x,y,z=++O,p=last;maxlen[z]=maxlen[last]+1;\n        while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n        if(!p)link[z]=1;\n        else{\n            x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])link[z]=x;\n            else{\n                y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<C;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[z]=link[x]=y;\n            }\n        }\n        return z;\n    }\n    inline void build(){ \n        for(Re i=0;i<C;++i)if(T1.tr[1][i])Q.push(T1.tr[1][i]);\n        pos[1]=1;\n        while(!Q.empty()){\n            Re x=Q.front();Q.pop();\n            pos[x]=insert(T1.c[x],pos[T1.fa[x]]);\n            for(Re i=0;i<C;++i)if(T1.tr[x][i])Q.push(T1.tr[x][i]);\n        }\n    }\n    inline void sakura(){\n        for(Re i=2;i<=O;++i)ans+=maxlen[i]-maxlen[link[i]];\n        printf(\"%lld\\n\",ans); \n    }\n}SAM;\ninline void dfs(Re x,Re fa,Re fap){//\u904d\u5386\u6784\u9020Trie\u6811 \n    Re xp=T1.insert(fap,co[x]);//\u8bb0\u5f55\u5728Trie\u6811\u4e0a\u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u4e0b\u6b21\u76f4\u63a5\u4f7f\u7528\n    for(Re i=head[x],to;i;i=a[i].next)\n        if((to=a[i].to)!=fa)dfs(to,x,xp);\n}\nint main(){\n//  freopen(\"123.txt\",\"r\",stdin);\n    in(n),in(C),m=n-1;\n    for(Re i=1;i<=n;++i)in(co[i]);\n    while(m--)in(x),in(y),add(x,y),add(y,x),++du[x],++du[y];\n    for(Re i=1;i<=n;++i)if(du[i]==1)dfs(i,0,1);//\u4f9d\u6b21\u628a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u4f5c\u4e3a\u6839\u63d2\u5165Trie\u6811\n    SAM.build(),SAM.sakura();\n}\n```\n\n#### **\u3010Code (\u5728\u7ebf)\u3011**\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define Re register int\n#define LL long long\nusing namespace std;\nconst int N=4e6+5,N20=2e6+3,Nn=1e5+3;\nint n,m,o,x,y,t,C,du[Nn],co[Nn],head[Nn];LL ans;\nstruct QAQ{int to,next;}a[Nn<<1];\ninline void add(Re x,Re y){a[++o].to=y,a[o].next=head[x],head[x]=o;}\ninline void in(Re &x){\n    int fu=0;x=0;char c=getchar();\n    while(c<'0'||c>'9')fu|=c=='-',c=getchar();\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n    x=fu?-x:x;\n}\nstruct Suffix_Automaton{\n    int O,link[N],trans[N][10],maxlen[N];\n    Suffix_Automaton(){O=1;}\n    inline int insert(Re ch,Re last){\n        if(trans[last][ch]){\n            Re p=last,x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])return x;\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<10;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[x]=y;\n                return y;\n            }\n        }\n        Re z=++O,p=last;maxlen[z]=maxlen[last]+1;\n        while(p&&!trans[p][ch])trans[p][ch]=z,p=link[p];\n        if(!p)link[z]=1;\n        else{\n            Re x=trans[p][ch];\n            if(maxlen[p]+1==maxlen[x])link[z]=x;\n            else{\n                Re y=++O;maxlen[y]=maxlen[p]+1;\n                for(Re i=0;i<10;++i)trans[y][i]=trans[x][i];\n                while(p&&trans[p][ch]==x)trans[p][ch]=y,p=link[p];\n                link[y]=link[x],link[z]=link[x]=y;\n            }\n        }\n        return z;\n    }\n    inline void sakura(){\n        for(Re i=2;i<=O;++i)ans+=maxlen[i]-maxlen[link[i]];\n        printf(\"%lld\\n\",ans); \n    }\n}SAM;\ninline void dfs(Re x,Re fa,Re fap){//\u904d\u5386\u5728\u7ebf\u6784\u9020SAM\n    Re xp=SAM.insert(co[x],fap);//\u8bb0\u5f55x\u5728SAM\u4e0a\u7684\u4f4d\u7f6e\uff0c\u65b9\u4fbf\u4e0b\u6b21\u76f4\u63a5\u4f7f\u7528\n    for(Re i=head[x],to;i;i=a[i].next)\n        if((to=a[i].to)!=fa)dfs(to,x,xp);\n}\nint main(){\n//  freopen(\"123.txt\",\"r\",stdin);\n    in(n),in(C),m=n-1;\n    for(Re i=1;i<=n;++i)in(co[i]);\n    while(m--)in(x),in(y),add(x,y),add(y,x),++du[x],++du[y];\n    for(Re i=1;i<=n;++i)if(du[i]==1)dfs(i,0,1);//\u4f9d\u6b21\u628a\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u4f5c\u4e3a\u6839\u63d2\u5165Trie\u6811\n    SAM.sakura();\n}\n```\n\n### **5.\u3010\u5361\u7a7a\u95f4\u5e38\u6570\u7684\u4f8b\u5b50\uff08\u51cf\u5c11\u65e0\u7528\u8282\u70b9\uff09\u3011**\n\n\u4f20\u9001\u95e8\uff1a[$\\text{Cyclical Quest}$](https://www.luogu.com.cn/problem/CF235C) [$\\text{[CF235C]}$](codeforces.com/problemset/problem/235/C)\n\n\u7ed9\u51fa\u4e3b\u4e32 $S$ \u548c $n$ \u4e2a\u8be2\u95ee\u4e32\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u4e32\uff0c\u6c42\u51fa\u5b83\u7684\u6240\u6709\u5faa\u73af\u540c\u6784\u5728\u4e3b\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u603b\u548c\u3002\n\n\u505a\u6cd5\u89c1 [\u9898\u89e3 $\\text{by asuldb}$](https://www.luogu.com.cn/blog/asuldb/solution-cf235c) \u3002\n\n\u7531\u4e8e\u662f\u66b4\u529b\u975e\u6b63\u89e3\uff0c\u9700\u8981\u75af\u72c2\u5361\u7a7a\u95f4\uff0c\u5982\u679c\u4f7f\u7528\u5728\u7ebf\u505a\u6cd5\u4e0d\u52a0\u7279\u5224 $1,2$\uff08\u5373\u4e4b\u524d\u5217\u4e3e\u51fa\u6765\u7684\u76d7\u7248\u505a\u6cd5\uff09\u4f1a[\u559c\u83b7 $\\text{MLE}$](https://codeforces.com/contest/235/submission/82583691) \u3002\u52a0\u4e86\u7279\u5224\u4f46\u4e0d\u5904\u7406\u65e0\u7528\u8282\u70b9 $z$ \u53ef\u4ee5 [\u4ee5 $476Mb$ \u7684\u597d\u6210\u7ee9 $\\text{AC}$](https://codeforces.com/contest/235/submission/82583743)\u3002\u4f7f\u7528\u6700\u7ec8\u7248\u4ee3\u7801\u5f53\u7136[\u4e5f\u53ef\u4ee5\u8fc7](https://codeforces.com/contest/235/submission/86714342)\uff0c\u4f46\u591a\u7528\u4e86\u4e00\u4e22\u4e22\u7a7a\u95f4\uff0c\u6216\u8bb8\u662f\u8bc4\u6d4b\u59ec\u6ce2\u52a8\uff1f\u53ef [$\\text{CF666E}$](https://www.luogu.com.cn/problem/CF666E) \u4ea6\u662f\u5982\u6b64\u3002\u53ef\u80fd.....\u65e0\u7528 $z$ \u7684\u4e2a\u6570\u6bd4\u8f83\u5c11\u5427.......\n\n## **\u516d\uff1a\u3010\u540e\u8bb0\u3011**\n\n\u521d\u5b66\u65f6\u6211\u5728\u7f51\u4e0a\u627e\u4e86\u5f88\u4e45\uff08\u5f53\u65f6\u50bb\u4e4e\u4e4e\u7684\uff0c\u770b\u4e0d\u61c2\u8bba\u6587\uff09\uff0c\u53ea\u53d1\u73b0\u4e86\u4e00\u7bc7\u7ec6\u8bb2\u5e7f\u4e49 $\\text{SAM}$ \u590d\u6742\u5ea6\u548c\u6b63\u786e\u6027\u7684\u535a\u5ba2\uff08\u4e5f\u5c31\u662f[\u8fd9\u4e2a](https://www.luogu.com.cn/paste/3oq8xx3b)\uff09\uff0c\u6240\u4ee5\u65e0\u6761\u4ef6\u76f8\u4fe1\u4e86\u91cc\u9762\u5199\u7684\u6240\u6709\u4e1c\u897f\uff0c\u5e76\u51ed\u501f\u672c\u7bc7\u535a\u5ba2\u53c8\u8bef\u5bfc\u4e86\u8bb8\u591a\u5176\u4ed6\u521d\u5b66\u8005\uff0c\u6df1\u611f\u60ed\u6127\u3002\n\n\u6211\u4eec\u5624\u8be5\u5b66\u4f1a\u72ec\u7acb\u601d\u8003\uff0c\u4e0d\u8981\u76f2\u76ee\u76f8\u4fe1\u522b\u4eba\u535a\u5ba2\u91cc\u5199\u7684\u4e1c\u897f\u554a......\uff08\u54b3\u54b3\uff0c\u672c\u7bc7\u4e5f\u4e0d\u4e00\u5b9a\u5b8c\u5168\u6b63\u786e\uff0c\u82e5\u53d1\u73b0\u6709\u8bef\u5e0c\u671b\u53ca\u65f6\u6307\u6b63\uff09\n\n## **\u4e03\uff1a\u3010\u53c2\u8003\u6587\u732e\u3011**\n\n- [\u540e\u7f00\u81ea\u52a8\u673a\uff08$\\text{SAM}$\uff09\u5b66\u4e60\u7b14\u8bb0](https://www.cnblogs.com/zjp-shadow/p/9218214.html#autoid-4-1-0)\n\n- [\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u2014\u2014$\\text{HocRiser}$](https://www.cnblogs.com/HocRiser/p/9580478.html)\n\n- [\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u2014\u2014\u9955\u992e\u4f20\u5947](https://www.luogu.com.cn/paste/3oq8xx3b)\n\n- [\u8bf8\u795e\u7737\u987e\u7684\u5e7b\u60f3\u4e61 \u9898\u89e3 $\\text{by zcysky}$](https://www.luogu.com.cn/blog/zcysky/solution-p3346)\n\n- [$\\text{Cyclical Quest}$ \u9898\u89e3 $\\text{by asuldb}$](https://www.luogu.com.cn/blog/asuldb/solution-cf235c)\n\n- [\u300a\u540e\u7f00\u81ea\u52a8\u673a\u5728\u5b57\u5178\u6811\u4e0a\u7684\u62d3\u5c55\u300b\u2014\u2014\u5218\u7814\u7ece](https://files-cdn.cnblogs.com/files/Xing-Ling/%E5%9B%BD%E5%AE%B6%E9%9B%86%E8%AE%AD%E9%98%9F2015%E8%AE%BA%E6%96%87%E9%9B%86.rar)\n\n- \u7279\u522b\u611f\u8c22 [$\\text{Prean}$](https://www.luogu.com.cn/user/160839) \u4e0d\u538c\u5176\u70e6\u5730\u534f\u52a9\u601d\u8003\u8bc1\u660e\u3002",
        "postTime": 1583200496,
        "uid": 110985,
        "name": "\u8fb0\u661f\u51cc",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6139 \u3010\u3010\u6a21\u677f\u3011\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u5e7f\u4e49SAM\uff09\u3011"
    },
    {
        "content": "AC \u81ea\u52a8\u673a\u5e94\u7528\u719f\u7ec3\u540e\uff0c\u81ea\u5df1\u5174\u51b2\u51b2\u5730\u53bb\u5b66 SAM \u3002\n\n\u7ed3\u679c\u88ab\u529d\u9000\u4e86\uff0c\u9e3d\u4e86\u5927\u534a\u5e74\u624d\u51fa\u6765\u3002\n\n\u603b\u7ed3\u4e86\u4e0b\u5b66\u4e60\u4e0a\u7684\u95ee\u9898\uff0c\u53d1\u73b0\u7f51\u4e0a\u7684 blog \u666e\u904d\u6709\u4ee5\u4e0b\u95ee\u9898\uff1a\n\n- \u5b9a\u4e49\u7e41\u7410\uff0c\u521a\u5b66\u65f6\u76f4\u63a5\u4e00\u4e2a $\\operatorname{endpos}$ \u7cca\u4f60\u8138\u4e0a\uff0c\u6781\u5176\u529d\u9000\u3002\n- \u4e00\u5f00\u59cb\u6240\u8c13\u538b\u7f29\u3001\u5408\u5e76\u89e3\u91ca\u7a81\u5140\uff0c\u65e0\u6cd5\u5faa\u5e8f\u6e10\u8fdb\u5730\u63a8\u51fa\u7ed3\u8bba\u3002\n\n\u56e0\u6b64\u5c31\u6709\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a\n- \u81ea\u52a8\u673a\u7684\u5b9a\u4e49\uff1a  \n  \u5b57\u5178\u6811\u62d3\u5c55\u4e3a \u201c\u5b57\u5178\u56fe\u201d \u5c31\u662f\u81ea\u52a8\u673a\u3002\u5982\u4e0b\u5c31\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u81ea\u52a8\u673a\uff1a  \n  ![](https://cdn.luogu.com.cn/upload/image_hosting/9zk0zhon.png)  \n  \u5176\u4e2d\u7684\u7ed3\u70b9\u79f0\u4e3a**\u72b6\u6001**\uff0c\u5e26\u6743\u7684\u6709\u5411\u8fb9\u79f0\u4e3a**\u8f6c\u79fb**\uff0c  \n  \u904d\u5386\u7684\u8d77\u70b9\u5373**\u521d\u59cb\u72b6\u6001**\uff0c\u6309\u7167\u5b57\u7b26\u4e32\u8d70\u5230\u7684\u5bf9\u5e94\u7ed3\u70b9\u79f0\u4e3a**\u76ee\u6807\u72b6\u6001**\u3002  \n  \u72b6\u6001\u7684\u6570\u91cf\u65e2\u53ef\u4ee5\u662f\u6709\u9650\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u65e0\u9650\u7684\u3002  \n  \u540c\u4e00\u72b6\u6001\u540c\u4e00\u6743\u503c\u7684\u51fa\u8fb9\u65e2\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\uff08**\u786e\u5b9a\u6027**\u7684\uff09\uff0c  \n  \u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\uff08**\u975e\u786e\u5b9a\u6027**\u7684\uff09\u3002  \n  OI \u4e00\u822c\u53ea\u7814\u7a76 \u6709\u9650\u72b6\u6001\u786e\u5b9a\u6027\u81ea\u52a8\u673a\uff08DFA\uff09\u3002\n- [AC \u81ea\u52a8\u673a\u53ca\u5176\u539f\u7406](https://www.luogu.com.cn/blog/wangrx/solution-p5357)\n \n## \u95ee\u9898\u5f15\u5165\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$\uff0c\u6c42\u53e6\u5916\u82e5\u5e72\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a $s$ \u7684\u5b50\u4e32\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u79bb\u7ebf\u53ef\u4ee5\u901a\u8fc7\u5c06 $s$ \u4ee5\u5916\u7684\u5b57\u7b26\u4e32\u5efa\u7acb AC \u81ea\u52a8\u673a\u6765\u89e3\u51b3\u3002\n\n\u4f46\u8be5\u95ee\u9898\u8981\u6c42\u5728\u7ebf\uff0c\u56e0\u6b64\u6613\u60f3\u5230\u5efa\u7acb\u4e00\u4e2a\u5173\u4e8e $s$ \u7684\u5b57\u5178\u6811\uff0c\u5b58\u50a8 $s$ \u7684\u6240\u6709\u5b50\u4e32\u3002  \n\n\u5982\u5b57\u7b26\u4e32 $\\texttt{cabab}$ \u5b50\u4e32\u6784\u6210\u7684\u5b57\u5178\u6811\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/rmp42as9.png)\n\n\u4f46\u663e\u7136\uff0c\u8fd9\u79cd\u505a\u6cd5\u65f6\u7a7a\u590d\u6742\u5ea6\u5747\u4e3a $\\Theta(|s|^2)$ \uff0c  \n\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u5feb\u901f\u6784\u5efa\u7684\u65b9\u6cd5\uff0c\u4e8e\u662f\u5c31\u6709\u4e86 SAM\u3002\n\n## \u5b57\u7b26\u7684\u52a0\u5165\u4e0e fail \u6307\u9488\n\n\u5b57\u7b26\u4e32\u7b97\u6cd5\u901a\u5e38\u4e3a $\\Theta(|s|)$\uff0c\u8fd9\u542f\u793a\u6211\u4eec\u8003\u8651\u52a0\u5165\u5355\u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u3002\n\n\u8003\u8651\u672b\u5c3e\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26 $\\texttt{c}$\uff0c\u5219\u663e\u7136\uff0c\u52a0\u5165\u7684\u5b50\u4e32\u6709\uff1a  \n```plain\ncababc\n ababc\n  babc\n   abc\n    bc\n     c\n```\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u4eec\u90fd\u662f\u7531 $s$ \u7684\u540e\u7f00\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26 $\\texttt{c}$ \u800c\u6765\u3002  \n\u6211\u4eec\u5c06 $s$ \u7684\u540e\u7f00\u5728\u5b57\u5178\u6811\u4e0a\u6807\u8bb0\u51fa\u6765\uff08\u5305\u62ec\u7a7a\u4e32\uff09\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/haeq11h5.png)\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u610f\u8bc6\u5230\uff1a\u904d\u5386 $s$ \u7684\u540e\u7f00\u7684\u8fc7\u7a0b\uff0c\u4e0d\u5c31\u662f\u8df3 AC \u81ea\u52a8\u673a\u7684 fail \u6307\u9488\u5417\uff1f  \n\u56e0\u4e3a fail \u6307\u9488\u7684\u5b9a\u4e49\u662f\uff1a\n\n> \u5b57\u7b26\u4e32 $s$ \u5728\u5b57\u5178\u6811\u4e0a\u51fa\u73b0\u4e86\u7684\u6700\u957f\u771f\u540e\u7f00\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u6807\u8bb0\u4e0a $s$ \u7684\u540e\u7f00\u7684 fail \u6307\u9488\uff0c\u53ef\u77e5\u5b83\u4eec\u5f62\u6210\u4e86\u4e00\u6761\u94fe\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/58at5gps.png)  \n\n\u4e8e\u662f\u53ea\u8981\u987a\u7740\u8fd9\u6761\u94fe\u5f80\u4e0a\u8df3\uff0c\u5c31\u53ef\u4ee5\u904d\u5386 $s$ \u7684\u6240\u6709\u540e\u7f00\uff0c\u6dfb\u52a0\u7ed3\u70b9\u4e86\uff1a    \n![](https://cdn.luogu.com.cn/upload/image_hosting/gc3fm95y.png)\n\n\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u77e5\u9053\u65b0\u589e\u7ed3\u70b9\u7684 fail \u6307\u9488\uff1a  \n\u8bbe\u72b6\u6001 $u$ \u8fb9\u6743\u4e3a $c$ \u7684\u51fa\u8fb9\u4e3a $u\\mathop{\\rightarrow}\\limits^c$\uff0c\u5219\u5728 AC \u81ea\u52a8\u673a\u4e0a\u6709\uff1a  \n- $u\\mathop{\\rightarrow}\\limits^c$ \u4e3a $u$ \u5728\u5b57\u5178\u6811\u4e0a\u7684\u513f\u5b50\uff0c\u5219 $fail_{u\\mathop{\\rightarrow}\\limits^c}=fail_u\\mathop{\\rightarrow}\\limits^c$\uff08\u8f6c\u79fb 1\uff09\n- \u5426\u5219\uff0c$u\\mathop{\\rightarrow}\\limits^c=fail_u\\mathop{\\rightarrow}\\limits^c$\uff08\u8f6c\u79fb 2\uff09\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u5e76\u6ca1\u6709\u4f18\u5316\u590d\u6742\u5ea6\uff0c\u4f46\u5374\u7ed9\u6211\u4eec\u4ee5\u6781\u5927\u7684\u542f\u53d1\uff1a  \n\u5982\u679c\u5c06\u591a\u4e2a\u72b6\u6001\u538b\u7f29\u4e3a\u4e00\u4e2a\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4 fail \u6307\u9488\u6765\u6784\u5efa\u81ea\u52a8\u673a\u3002\n\n## \u7ed3\u675f\u4f4d\u7f6e\u4e0e\u72b6\u6001\u538b\u7f29\n\n\u8003\u8651\u62a0\u9664 \u5b57\u5178\u6811\u4e0a\u7684\u51fa\u8fb9\uff0c\u53ea\u4fdd\u7559 fail \u6307\u9488\uff08\u4e5f\u5c31\u662f\u53ea\u770b fail \u6811\uff09\uff1a    \n![](https://cdn.luogu.com.cn/upload/image_hosting/0xeaa0j8.png)\n\n\u770b\u4e0d\u6e05\uff1f\u90a3\u5c31\u6574\u7406\u4e00\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p7cxlu99.png)\n\n\u53ef\u4ee5\u770b\u5230\uff0cfail \u6811\u4e0a\u5b58\u5728\u201c\u5355\u72ec\u201d\uff08\u9664\u94fe\u5e95\u5916\u5747\u6ca1\u6709\u513f\u5b50\uff09\u7684\u94fe\uff0c  \n\u6bd4\u5982 $4\\rightarrow 8\\rightarrow 11,5\\rightarrow 9\\rightarrow 12,7\\rightarrow 10$  \n\u538b\u7f29\u8fd9\u4e9b\u94fe\uff0c\u5c31\u80fd\u964d\u4f4e\u8df3 fail \u6811\u7684\u65f6\u7a7a\u95f4\u6210\u672c\uff08\u6682\u65f6\u5148\u4e0d\u7ba1\u51fa\u8fb9\uff09\u3002 \n\n\u56de\u5230\u6574\u7406\u524d\u7684\u56fe\uff0c\u8003\u8651\u8fd9\u4e9b\u94fe\u7684\u610f\u4e49\uff0c\u53d1\u73b0\u8fd9\u548c\u5b50\u4e32\u5728 $s$ \u4e2d\u7684\u7ed3\u675f\u4f4d\u7f6e\u6709\u5173\uff1a\n\n- \u5bf9\u4e8e\u5b50\u4e32 $a,b$\uff0c  \n  $a,b$ \u5b58\u5728\u4e00\u4e2a\u76f8\u540c\u7684\u7ed3\u675f\u4f4d\u7f6e $\\Leftrightarrow$ fail \u6811\u4e0a\u5176\u4e2d\u4e00\u4e2a\u4e3a\u53e6\u4e00\u4e2a\u7684\u7956\u5148\u3002  \n  \u8fd9\u662f\u663e\u7136\u7684\uff0c\u56e0\u4e3a\u76f8\u540c\u7684\u7ed3\u675f\u4f4d\u7f6e\u610f\u5473\u7740\u5176\u4e2d\u4e00\u4e2a\u4e3a\u53e6\u4e00\u4e2a\u7684\u540e\u7f00\u3002\n- \u5728\u8be5 fail \u6811\u4e0a\uff0c\u5b50\u4e32 $a$ \u4e3a\u5b50\u4e32 $b$ \u7236\u4eb2 $\\Leftrightarrow a$ \u6070\u597d\u4e3a $b$ \u53bb\u6389\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002  \n  \u7531 fail \u6307\u9488\u5b9a\u4e49\u53ef\u77e5 $a$ \u4e3a $b$ \u5728\u5b57\u5178\u6811\u4e0a\u7684\u6700\u957f\u771f\u540e\u7f00\uff0c  \n  \u81f3\u591a\u4e3a $b$ \u53bb\u6389\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002  \n  \u7531\u4e8e\u5b57\u5178\u6811\u4e0a\u5b58\u50a8\u4e86 $s$ \u7684\u6240\u6709\u5b50\u4e32\uff0c\u56e0\u6b64 $b$ \u7684\u6240\u6709\u5b50\u4e32\u4e5f\u5728\u91cc\u5934\uff0c  \n  \u8fd9\u4e2a\u53ef\u80fd\u7684\u6700\u5927\u503c\u5fc5\u7136\u5b58\u5728\u3002\n\n\u7531\u6b64\u5f15\u51fa\u4e86 $\\operatorname{endpos}$ \u7684\u5b9a\u4e49\uff1a\n\n$\\operatorname{endpos}(t)$ \u4e3a\u5b50\u4e32 $t$ \u5728\u539f\u4e32\u4e2d\u6240\u6709\u7ed3\u675f\u4f4d\u7f6e\u6784\u6210\u7684\u96c6\u5408\u3002\u4e8e\u662f\u53ef\u77e5\uff1a\n- \u8be5 fail \u6811\u4e0a\uff0c$a$ \u4e3a $b$ \u7684\u7956\u5148 $\\Leftrightarrow a$ \u4e3a $b$ \u7684\u540e\u7f00 $\\Leftrightarrow\\operatorname{endpos}(a)\\supseteq \\operatorname{endpos}(b)$\n- \u540c\u4e00\u6761\u201c\u5355\u72ec\u201d\u7684\u94fe\u4e0a\u7684\u5b50\u4e32 $\\Leftrightarrow\\operatorname{endpos}$ \u76f8\u540c\u3002\n- $\\operatorname{endpos}$ \u76f8\u540c\u7684\u5b50\u4e32\uff0c\u5176\u957f\u5ea6\u662f\u8fde\u7eed\u7684\uff0c\u4e14**\u51fa\u8fb9\u7684 $\\operatorname{endpos}$ \u76f8\u540c**\u3002  \n\n\u56e0\u6b64\uff0c$\\operatorname{endpos}$ \u76f8\u540c\u7684\u7ed3\u70b9\u5c31\u4f1a\u88ab\u6211\u4eec\u538b\u7f29\u4e3a\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5176\u51fa\u8fb9\u4fdd\u6301\u4e0d\u53d8\uff0c  \n\u4e14\u53ef\u4ee5\u7528\u6700\u957f\u4e32\u548c\u6700\u77ed\u4e32\u7684\u957f\u5ea6\u5f97\u51fa\u538b\u7f29\u7684\u70b9\u7684\u6570\u91cf\u3002\n\n## SAM \u6784\u5efa\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u7ec8\u4e8e\u5230\u4e86 SAM \u7684\u6784\u5efa\u3002  \n\u9664\u4e86\u51fa\u8fb9\uff0c\u6211\u4eec\u8fd8\u8981\u7ef4\u62a4\u4ee5\u4e0b\u4e24\u4e2a\u6570\u7ec4\uff1a\n- \u540e\u7f00\u94fe\u63a5 $\\operatorname{link}$\uff1a\"\u5355\u72ec\"\u7684\u94fe \u94fe\u9876\u7684 fail \u6307\u9488\u3002\n- $\\operatorname{len}$\uff1a\u538b\u7f29\u7684\u94fe\u4e2d\u6700\u957f\u4e32\u7684\u957f\u5ea6\u3002 \n\n\u4ee5\u53ca\u4e00\u4e2a\u989d\u5916\u53d8\u91cf\uff1a\n- $last$\uff1a\u6574\u4e2a\u4e32\u7684\u672b\u5c3e\u6240\u5728\u7ed3\u70b9\u3002\n  \n\u521d\u59cb\u65f6\uff0c\u6211\u4eec\u53ea\u6709\u81ea\u52a8\u673a\u7684\u8d77\u70b9\uff0c\u5373\u7a7a\u4e32\u3002\n\n\u6bcf\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26 $c$ \u81f3\u672b\u5c3e\uff0c\u65b0\u589e\u4e00\u4e2a\u7ed3\u70b9 $v,\\operatorname{len}_v=\\operatorname{len}_{last}+1$\uff0c  \n\u7136\u540e\u4ece $last$ \u5f80\u4e0a\u8df3\u540e\u7f00\u94fe\u63a5\uff0c\u8bbe\u8df3\u5230\u7684\u7ed3\u70b9\u4e3a $u$\uff0c\u5219\uff1a  \n- \u82e5 $u\\mathop{\\rightarrow}\\limits^c$ \u4e0d\u5b58\u5728\uff0c\u7531 \u8f6c\u79fb 2 \u53ef\u77e5\uff0c\u5c06 $u\\mathop{\\rightarrow}\\limits^c$ \u7f6e\u4e3a $v$\u3002\n- \u5426\u5219\uff0c\u7531\u8f6c\u79fb 1 \u53ef\u77e5\uff0c$\\operatorname{link}_v$ \u5fc5\u5728 $u\\mathop{\\rightarrow}\\limits^c$ \u4e2d\u3002\n  - \u82e5  $\\operatorname{len}_{u\\mathop{\\rightarrow}\\limits^c}=\\operatorname{len}_u+1$\uff0c\u5219\u76f4\u63a5\u5c06 $\\operatorname{link}_v$ \u7f6e\u4e3a $u\\mathop{\\rightarrow}\\limits^c$\uff0c\u9000\u51fa\uff1b\n  - \u5426\u5219\uff0c\u5c06 $u\\mathop{\\rightarrow}\\limits^c$ \u5206\u88c2\u4e3a\u4e24\u4e2a\u7ed3\u70b9\u3002  \n  \n    \u5177\u4f53\u5730\uff0c\u4ece $u\\mathop{\\rightarrow}\\limits^c$ \u590d\u5236\u51fa\u4e00\u4e2a\u7ed3\u70b9\uff0c  \n    \u65e7\u7684\u79f0\u4e3a $old$\uff0c\u65b0\u7684\u79f0\u4e3a $new$\uff0c\u4e8c\u8005\u51fa\u8fb9\u76f8\u540c\uff0c   \n    \u7136\u540e\u5c06 $\\operatorname{len}_{new}$ \u7f6e\u4e3a $\\operatorname{len}_u+1$\u3002  \n    \u63a5\u4e0b\u6765\uff0c\u5c06 $\\operatorname{link}_{new}$ \u7f6e\u4e3a $\\operatorname{link}_{old}$\uff0c\u518d\u5c06 $\\operatorname{link}_{old}$ \u7f6e\u4e3a $new$\u3002   \n    \u4ece $u$ \u7ee7\u7eed\u8df3\u540e\u7f00\u94fe\u63a5\uff0c\u82e5 $u\\mathop{\\rightarrow}\\limits^c=old$\uff0c\u5219\u7f6e $u\\mathop{\\rightarrow}\\limits^c$ \u4e3a $new$\uff0c  \n    \u76f4\u5230\u8df3\u5b8c\u4e86\u6839\u6216\u8005 $u\\mathop{\\rightarrow}\\limits^c\\not=old$\u3002\n\n    \u4e4b\u540e\uff0c\u5c06 $\\operatorname{link}_v$ \u7f6e\u4e3a $u$\uff0c\u9000\u51fa\u3002\n- \u82e5\u8df3\u5b8c\u4e86\u6839\u90fd\u672a\u51fa\u73b0\u8f6c\u79fb\uff0c\u5219\u5c06 $\\operatorname{link}_v$ \u7f6e\u4e3a\u7a7a\u4e32\u3002\n\n\u6700\u540e\uff0c\u8bb0\u5f97\u5c06 $last$ \u7f6e\u4e3a $v$\u3002\n\n```cpp\ntypedef unsigned int word;\nstruct SAM{\n\tword next[1<<21][26];//\u6362\u6210 map \u4e5f\u662f\u53ef\u4ee5\u7684\uff01\n\tword link[1<<21],len[1<<21];\n\tword size,last;\n\tinline SAM(){//\u521d\u59cb\u72b6\u6001\n\t\tsize=last=0;\n\t\tlink[0]=0xffffffff;\n\t}\n\t#define split()\t\t\t\t\t\\\n\t\tlen[++size]=len[last]+1;\t\\\n\t\tmemcpy(next[size],next[old],sizeof(next[0]));\t\\\n\t\tlink[size]=link[old],link[old]=size;\t\t\t\\\n\t\tfor(;last!=0xffffffff;last=link[last])\t\t\t\\\n\t\t\tif(next[last][c]==old) next[last][c]=size;\t\\\n\t\t\telse break; //\u5206\u88c2\u7ed3\u70b9\n\tinline void operator +=(char c){//\u6dfb\u52a0\u672b\u7aef\u5b57\u7b26\n\t\tregister word old;\n\t\tlen[++size]=len[last]+1;//\u65b0\u5efa\u7ed3\u70b9\n\t\tfor(;last!=0xffffffff;last=link[last])\n\t\t\tif((old=next[last][c])==0) next[last][c]=size;//\u8f6c\u79fb 2\n\t\t\telse if(len[old]==len[last]+1)//\u8f6c\u79fb 1 \u60c5\u51b5 1\n\t\t\t\treturn link[size]=old,void(last=size);\n\t\t\telse{//\u8f6c\u79fb 1 \u60c5\u51b5 2\n\t\t\t\tsplit();\n\t\t\t\treturn link[size-1]=size,void(last=size-1);\n\t\t\t}\n\t\treturn link[size]=0,void(last=size);\n\t}\n\t#undef split\n};\n```\n## \u65f6\u7a7a\u95f4\u590d\u6742\u5ea6\u53ca\u5176\u8bc1\u660e\n\u6c42\u8bc1\uff1aSAM \u7684\u7ed3\u70b9\u6570\u4e0d\u8d85\u8fc7 $2|s|-1$\u3002   \n\u8bc1\u660e\uff1a\u7b97\u6cd5\u672c\u8eab\u5373\u53ef\u8bc1\u660e\u8be5\u547d\u9898\u3002  \n$\\qquad\\quad$\u6bcf\u6b21\u6dfb\u52a0\u5b57\u7b26\u65f6\u53ea\u6dfb\u52a0\u4e00\u4e2a\u6216\u4e24\u4e2a\u7ed3\u70b9\u3002  \n$\\qquad\\quad$\u5934\u4e24\u6b21\u6dfb\u52a0\u5b57\u7b26\u53ea\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u7ed3\u70b9\uff0c  \n$\\qquad\\quad$\u7b97\u4e0a\u8d77\u70b9\uff0c\u81f3\u591a\u6709 $2|s|-1$ \u4e2a\u3002  \n$\\qquad\\quad\\texttt{abb}\\cdots\\texttt{bb}$ \u8fbe\u5230\u4e86\u8fd9\u4e2a\u4e0a\u754c\uff0c  \n$\\qquad\\quad$\u4ece\u7b2c\u4e09\u6b21\u5f00\u59cb\u6dfb\u52a0\u5b57\u7b26\u5f00\u59cb\u6bcf\u4e00\u6b21\u6dfb\u52a0\u5b57\u7b26\u90fd\u6dfb\u52a0\u4e86\u4e24\u4e2a\u7ed3\u70b9\u3002  \n\u6c42\u8bc1\uff1aSAM \u7684\u8f6c\u79fb\u6570\u4e0d\u8d85\u8fc7 $3|s|-4$\uff08\u5047\u8bbe $|s|\\ge 3$\uff09  \n\u8bc1\u660e\uff1a[\uff08\u4e0d\u4f1a\uff09](https://oi-wiki.org/string/sam/#_11) \n\n\u6c42\u8bc1\uff1aSAM \u7684\u64cd\u4f5c\u6b21\u6570\u4e3a\u7ebf\u6027\u7684\u3002  \n\u8bc1\u660e\uff1a[\uff08\u4e0d\u4f1a\uff09](https://oi-wiki.org/string/sam/#_7)\n\n\u7efc\u4e0a\uff0c\u82e5\u8bbe\u5b57\u7b26\u96c6\u4e3a $\\sum$\n- \u82e5\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u51fa\u8fb9\uff0c\u5219 SAM \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(|s|)$\uff0c  \n  \u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(|s|\\times|\\sum|)$\n- \u82e5\u4f7f\u7528 `std::map` \u5b58\u50a8\u51fa\u8fb9\uff0c\u5219 SAM \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(|s|\\log|\\sum|)$\uff0c  \n  \u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $\\Theta(|s|)$\n\n## \u5e7f\u4e49 SAM \u53ca\u5176\u6784\u5efa\n\u521a\u624d\u6211\u4eec\u7528 SAM \u89e3\u51b3\u4e86\u5355\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u5339\u914d\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u591a\u4e2a\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u3002  \n\u5bf9\u591a\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b50\u4e32\u5efa\u7acb\u5b57\u5178\u6811\uff0c  \n\u6613\u53d1\u73b0\u5176 fail \u6811\u6ee1\u8db3\u4ec5\u6709\u5355\u4e2a\u5b57\u7b26\u4e32\u5b50\u4e32\u65f6\u7684\u6240\u6709\u6027\u8d28\u3002  \n\uff08\u5177\u4f53\u5df2\u5728\u7ae0\u8282 \u7ed3\u675f\u4f4d\u7f6e\u4e0e\u72b6\u6001\u538b\u7f29 \u65f6\u7ed9\u51fa\uff09\n\n\u56e0\u6b64 SAM \u4fbf\u53ef\u4ee5\u8f6c\u79fb\u5230\u5b57\u5178\u6811\u4e0a\uff0c\u4f46\u6dfb\u52a0\u5b57\u7b26\u65f6\u8981\u7279\u5224\uff1a  \n\u65b0\u5efa\u7ed3\u70b9\u65f6 $last\\mathop{\\rightarrow}\\limits^c$ \u5df2\u7ecf\u51fa\u73b0\uff0c\u5219\u65e0\u9700\u65b0\u5efa\u7ed3\u70b9\uff0c\u76f4\u63a5\u8df3\u5230\u8f6c\u79fb 1\u3002\n```cpp\ntypedef unsigned int word;\nstruct SAM{\n\tword next[1<<21][26];\n\tword link[1<<21],len[1<<21];\n\tword size,last;\n\tinline SAM(){\n\t\tsize=last=0;\n\t\tlink[0]=0xffffffff;\n\t}\n\t#define split()\t\t\t\t\t\\\n\t\tlen[++size]=len[last]+1;\t\\\n\t\tmemcpy(next[size],next[old],sizeof(next[0]));\t\\\n\t\tlink[size]=link[old],link[old]=size;\t\t\t\\\n\t\tfor(;last!=0xffffffff;last=link[last])\t\t\t\\\n\t\t\tif(next[last][c]==old) next[last][c]=size;\t\\\n\t\t\telse break;\n\tinline void operator +=(char c){\n\t\tregister word old;\n\t\tif(old=next[last][c]){//\u7ed3\u70b9\u5df2\u7ecf\u51fa\u73b0\uff0c\u76f4\u63a5\u8df3\u5230\u8f6c\u79fb 1\n\t\t\tif(len[old]==len[last]+1)\n\t\t\t\treturn void(last=old);\n\t\t\tsplit();\n\t\t\treturn void(last=size);\n\t\t}\n\t\tlen[++size]=len[last]+1;\n\t\tfor(;last!=0xffffffff;last=link[last])\n\t\t\tif((old=next[last][c])==0) next[last][c]=size;\n\t\t\telse if(len[old]==len[last]+1)\n\t\t\t\treturn link[size]=old,void(last=size);\n\t\t\telse{\n\t\t\t\tsplit();\n\t\t\t\treturn link[size-1]=size,void(last=size-1);\n\t\t\t}\n\t\treturn link[size]=0,void(last=size);\n\t}\n\t#undef split\n};\n```\n\u6dfb\u52a0\u5b57\u7b26\u5230\u67d0\u4e2a\u4e32\u672b\u5c3e\u65f6\u5c06 $last$ \u8bbe\u4e3a\u8be5\u4e32\u7684\u672b\u5c3e\u6240\u5728\u7ed3\u70b9\u5373\u53ef\u3002  \n\u53ef\u4ee5\u8bc1\u660e\u5206\u88c2\u7ed3\u70b9\u65f6\u5404\u4e32\u672b\u5c3e\u6240\u5728\u7684\u7ed3\u70b9\u4e0d\u53d8\u3002  \n\u5efa\u8bae\u5199 SAM \u65f6\u76f4\u63a5\u5199\u5e7f\u4e49\u7684\u3002\n\n## SAM/\u5e7f\u4e49 SAM \u7684\u5176\u4ed6\u8fd0\u7528\n\nSAM/\u5e7f\u4e49 SAM \u8fd8\u6709\u5927\u91cf\u5176\u5b83\u8fd0\u7528\uff0c\u5747\u662f\u57fa\u4e8e\u88ab\u538b\u7f29\u7684 fail \u6811\u7684\uff1a  \n\u987a\u7740\u540e\u7f00\u94fe\u63a5\u5f80\u4e0a\u8df3\uff0c\u8df3\u5230\u7684\u70b9\u5747\u4e3a\u5176\u540e\u7f00\u3002\n\n1. \u67e5\u627e\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u3002  \n   \u5bf9\u4e8e\u5b50\u4e32 $t$\uff0c\n   \u51fa\u73b0\u6b21\u6570\u5176\u5b9e\u5c31\u662f\u7ed3\u675f\u4f4d\u7f6e\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f $|\\operatorname{endpos}(t)|$\u3002  \n   \u6bcf\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u6807\u8bb0\u5f53\u65f6\u7684 $last$\uff0c  \n   \u6700\u540e\u8fd9\u4e9b $last$ \u7edf\u4e00\u5f80\u4e0a\u8df3\uff0c\u8ba1\u7b97 $|\\operatorname{endpos}(t)|$ \u5373\u53ef\u3002\n2. \u67e5\u627e\u6240\u6709\u4e0d\u540c\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u3002  \n   \u8ba1\u7b97 $\\displaystyle\\sum_{\\texttt{\u5b50\u4e32} t}|\\operatorname{endpos}(t)|$ \u5373\u53ef\uff0c  \n   \u540c\u4e00\u4e2a $\\operatorname{endpos}$ \u5305\u542b\u7684\u5b50\u4e32\u6570\u91cf\u53ef\u7528 $\\operatorname{len}$ \u8ba1\u7b97\u51fa\u6765\u3002\n3. \u67e5\u627e\u6240\u6709\u4e0d\u540c\u5b50\u4e32\u7684\u603b\u957f\u3002  \n   \u540c\u4e00\u4e2a $\\operatorname{endpos}$ \u5305\u542b\u7684\u5b50\u4e32\u603b\u957f\u4e5f\u53ef\u4ee5\u7528\n$\\operatorname{len}$ \u8ba1\u7b97\u51fa\u6765\u3002\n4. \u67e5\u627e\u6240\u6709\u4e0d\u540c\u5b50\u4e32\u7684 \u603b\u957f $\\times$ \u51fa\u73b0\u6b21\u6570  \n   2. , 3. \u5df2\u7ecf\u7ed9\u51fa\uff0c\u56e0\u6b64\u540c\u4e0a\u3002\n5. \u67e5\u627e\u4e24\u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171\u540e\u7f00/\u524d\u7f00\u3002  \n   \u540e\u7f00\u5176\u5b9e\u5c31\u662f\u6c42 fail \u6811\u4e0a\u7684 LCA\uff0c\u524d\u7f00\u5bf9\u53cd\u4e32\u5efa SAM \u5373\u53ef\u3002\n\n\u8fd8\u6709\u975e\u5e38\u591a\u7684\u5e94\u7528\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u51fa\u4e86\u3002\n\n",
        "postTime": 1616761820,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "\uff08\u9898\u89e3 P6139\uff09SAM/\u5e7f\u4e49SAM \u4e0e  AC \u81ea\u52a8\u673a \u4e4b\u95f4\u7684\u5173\u7cfb"
    },
    {
        "content": "\u540e\u7f00\u6570\u7ec4\u505a\u6cd5\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n* \u540e\u7f00\u6570\u7ec4\n\n* \u540e\u7f00\u6570\u7ec4\u7684`height`\u6570\u7ec4\u6c42\u6cd5\u548c\u5e94\u7528\n\n## \u672c\u9898\u89e3\u6cd5\n\n\u6211\u4eec\u77e5\u9053\uff0c`height`\u6570\u7ec4\u7684\u542b\u4e49\u662f**\u6392\u540d\u76f8\u90bb\u7684\u4e24\u4e2a\u540e\u7f00\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u957f\u5ea6**\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a**\u5bf9\u4e8e\u4e00\u5bf9\u516c\u5171\u524d\u7f00\u6781\u957f\u7684\u540e\u7f00\uff0c\u6211\u4eec\u4f1a\u91cd\u590d\u8ba1\u7b97\u591a\u5c11\u76f8\u540c\u5b50\u4e32**\u3002\u8fd9\u6837\uff0c\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5b57\u7b26\u4e32$S$\uff0c\u5b83\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\u5c31\u662f\n$$\\frac{n(n + 1)}{2} - \\sum ^ n _ {i = 1}h_i$$\n\n\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u6709\u591a\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u5728\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u95f4**\u63d2\u5165\u4e00\u4e2a\u5947\u5947\u602a\u602a\u7684\u5b57\u7b26\uff0c\u6765\u9632\u6b62`height`\u6570\u7ec4\u51fa\u73b0\u8de8\u5b57\u7b26\u4e32\u7684\u524d\u7f00**\uff0c\u7136\u540e\u5e94\u7528\u521a\u624d\u90a3\u4e2a\u89c4\u5f8b\uff0c\u5c31\u53ef\u4ee5\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\u3002\u5047\u5982\u6709$m$\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fde\u63a5\u540e\u603b\u957f\u662f$L$\uff0c\u7b54\u6848\u5c31\u662f\n\n$$\\sum _ {i = 1} ^ m (\\frac{n_i(n_i + 1)}{2}) - \\sum _ {i = 1} ^ {L} h_i$$\n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\ntypedef long long LL;\nconst int MAXN = 2e6;\n\nint n, m = 'z', tot;\nLL ans;\nint rk[MAXN], sa[MAXN], tx[MAXN], tp[MAXN], ht[MAXN];\nchar ch[MAXN];\nint len;\nint a[MAXN];\n\nvoid RSort() {\n\tfor (int i = 0; i <= m; i++) tx[i] = 0;\n\tfor (int i = 1; i <= n; i++) tx[rk[i]]++;\n\tfor (int i = 1; i <= m; i++) tx[i] += tx[i - 1];\n\tfor (int i = n; i >= 1; i--) sa[tx[rk[tp[i]]]--] = tp[i];\n}\n\nvoid Build() {\n\tfor (int i = 1; i <= n; i++) {\n\t\trk[i] = a[i];\n\t\ttp[i] = i;\n\t}\n\tRSort();\n\tfor (int p = 1, w = 1; p < n; w <<= 1, m = p) {\n\t\tp = 0;\n\t\tfor (int i = 1; i <= w; i++)\n\t\t\ttp[++p] = n - w + i;\n\t\tfor (int i = 1; i <= n; i++) \n\t\t\tif (sa[i] > w)\n\t\t\t\ttp[++p] = sa[i] - w;\n\t\tRSort();\n\t\tswap(rk, tp);\n\t\trk[sa[1]] = p = 1;\n\t\tfor (int i = 2; i <= n; i++)\n\t\t\trk[sa[i]] = (tp[sa[i]] == tp[sa[i - 1]] && tp[sa[i] + w] == tp[sa[i - 1] + w]) ? p : ++p;\n\t}\n}\n\nvoid GetH() {\n\tfor (int i = 1; i <= n; i++) rk[sa[i]] = i;\n\tint k = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (rk[i] == 1) continue;\n\t\tif (k) k--;\n\t\tint j = sa[rk[i] - 1];\n\t\twhile (i + k <= n && j + k <= n && a[i + k] == a[j + k]) k++;\n\t\tht[rk[i]] = k;\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &tot);\n\twhile (tot--) {\n\t\tscanf(\"%s\", ch + 1);\n\t\tlen = strlen(ch + 1);\n\t\tans += (LL)len * (len + 1) / 2;\n\t\tfor (int i = 1; i <= len; i++) a[n + i] = ch[i];\n\t\tn += len;\n\t\ta[++n] = ++m;\n\t}\n\tBuild();\n\tGetH();\n\tfor (int i = 1; i <= n; i++) ans = (ans - ht[i]);\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n/*\n4\naa\nab\nbac\ncaa\n*/\n```",
        "postTime": 1583455439,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6139 \u3010\u3010\u6a21\u677f\u3011\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u5e7f\u4e49SAM\uff09\u3011"
    },
    {
        "content": "\u548c[Mital](https://www.luogu.com.cn/user/30036)\u81ea\u5df1yy\u7684\u540e\u7f00\u6811\u505a\u6cd5\uff0c\u4e0d\u77e5\u9053\u5168\u7f51\u6709\u6ca1\u6709\u7c7b\u4f3c\u505a\u6cd5\u3002~~\u4e2a\u4eba\u5bf9\u540e\u7f00\u6811\u7684\u7406\u89e3\u5e76\u4e0d\u6df1\u5165\uff0c\u6709\u95ee\u9898\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u63d0\u51fa\uff0c\u6c42\u8f7b\u55b7~~\n\n\u8fd8\u4e0d\u4f1a\u540e\u7f00\u6811\uff1f\u5b89\u5229\u4e00\u6ce2[EternalAlexander](https://www.luogu.com.cn/blog/EternalAlexander/xuan-ku-hou-zhui-shu-mo-shu)\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u6839\u636e\u540e\u7f00\u6811\u4e00\u822c\u5957\u8def\uff0c\u5728\u5176\u540e\u9762\u8865\u5145\u4e00\u4e2a\u5b57\u7b26\u96c6\u4ee5\u5916\u7684\u5b57\u7b26\u3002\n\n\u7136\u540e\u5c06\u5b57\u7b26\u96c6\u4e00\u4e2a\u4e2a\u4e22\u5c3d\u540e\u7f00\u6811\n\n\u6211\u4eec\u77e5\u9053\uff0c\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u5bf9\u5e94\u5230\u540e\u7f00\u6811\u4e0a\u5c31\u662f\u6240\u6709\u8fb9\u957f\u5ea6\u4e4b\u548c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4ed6\u7684$len$\u5728\u540e\u7f00\u6811\u4e2d\u662f\u89c6\u4e3a$\\infty$\u7684\uff0c\u8fd9\u91cc\u7684\u5904\u7406\u65b9\u5f0f\u662f\u5bf9\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u8bb0\u5f55\u4e00\u4e2a\u7ed3\u5c3e\u4f4d\u7f6e\uff0c\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u4e00\u5b9a\u8fd9\u6761\u8fb9\u4ee3\u8868$s[start[u], end]$\uff0c\u8bb0\u5f55\u4e00\u4e2a$end$\u5373\u53ef\n\n\u60f3\u8c61\u6211\u4eec\u628a\u6240\u6709\u5b57\u7b26\u96c6\u9996\u5c3e\u76f8\u8fde\uff0c\u4e4b\u95f4\u7528\u4e0d\u540c\u7684\u5b57\u7b26\u96c6\u8fde\u63a5\uff0c\u90a3\u4e48\u8fd9\u6837\u539f\u672c\u7684\u6bcf\u4e00\u4e2a\u5b50\u4e32\u90fd\u4f1a\u5305\u62ec\u8fdb\u6765\u3002\u552f\u4e00\u7684\u5f71\u54cd\u662f\u8de8\u56fd\u7279\u6b8a\u5b57\u7b26\u6240\u7ec4\u6210\u7684\u540e\u7f00\uff0c\u7136\u800c\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u4e00\u5b9a\u4f1a\u7531\u4e8e\u7279\u6b8a\u5b57\u7b26\u7684\u51fa\u73b0\uff0c\u800c\u5355\u72ec\u6210\u4e00\u4e2a\u8282\u70b9\u3002\u7531\u4e8e\u6211\u4eec\u8bb0\u5f55\u4e86$end$\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5f71\u54cd\u662f\u4e0d\u5b58\u5728\u7684\n```cpp\nil void extend(int x) {\n\t++ pax, ++ rem, last = 1;\n\twhile(rem) {\n\t\twhile(rem > len[ch[now][s[pax - rem + 1]]]) rem -= len[now = ch[now][s[pax - rem + 1]]];\n\t\tint &v = ch[now][s[pax - rem + 1]], c = s[start[v] + rem - 1];\n\t\tif(!v || c == x) {\n\t\t\tlink[last] = now, last = now;\n\t\t\tif(!v) v = newnode(pax, inf), son[now].push_back(s[pax - rem + 1]);\n\t\t\telse break;\n\t\t}\n\t\telse {\n\t\t\tint u = newnode(start[v], rem - 1);\n\t\t\tch[u][x] = newnode(pax, inf), son[u].push_back(x);\n\t\t\tch[u][c] = v, son[u].push_back(c), start[v] += rem - 1, len[v] -= rem - 1;\n\t\t\tlink[last] = v = u, last = u;\n\t\t}\n\t\tif(now == 1) -- rem; else now = link[now];\n\t}\n\tif(x > 25) ++ co;\n}\nil void dfs(int u, int dep) {\n\tans += e[u] - start[u];\n\tif(dep > inf / 10) return;\n\tfor(re int i = 0; i < son[u].size(); ++ i) if(ch[u][son[u][i]]) dfs(ch[u][son[u][i]], dep + len[ch[u][son[u][i]]]);\n}\n```\n\n\u4f46\u662f\u8fd9\u6837\u5b57\u7b26\u96c6\u592a\u5927\uff0c\u8fd8\u9700\u8981\u7528\u5230$map+vector$\u6765\u5904\u7406\uff0c\u5e38\u6570\u8fc7\u5927\uff0c\u800c\u4e14\u5e26\u4e0a$map$\u7684$log$\uff0c\u53ea\u80fd\u83b7\u5f97$60pts$\u7684\u597d\u6210\u7ee9\uff0c\u4e8e\u662f\u6211\u4eec\u6765\u601d\u8003\u8fd9\u4e2a\u63d2\u5165\u4e00\u4e2a\u4e0d\u540c\u5b57\u7b26\u7684\u610f\u4e49\n\n\u672c\u8d28\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6240\u6709\u540e\u7f00\u5728\u5b57\u7b26\u96c6\u4e0a\u51fa\u73b0\u8fc7\u5373\u53ef\u3002\u8bbe\u60f3\u4e00\u4e0b\uff0c\u5047\u8bbe\u6211\u4eec\u63d2\u5165\u7684\u5b57\u7b26\u96c6\u5168\u90e8\u4e00\u6837\uff0c\u90a3\u4e48\u90a3\u4e9b\u5730\u65b9\u662f\u4e0d\u5408\u6cd5\u7684\n\n\u663e\u7136\u5982\u679c\u4e00\u6761\u8fb9\u8de8\u8fc7\u4e86\u4e24\u4e2a\u5b57\u7b26\u4e32\uff08\u5305\u542b\u4e86\u4e00\u4e2a\u7279\u6b8a\u5b57\u7b26\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7279\u6b8a\u5b57\u7b26\u4ee5\u4e0b\u7684\u70b9\u662f\u4e0d\u80fd\u88ab\u8ba1\u7b97\u7684\u3002\u6211\u4eec\u51cf\u6389\u8d21\u732e\u5373\u53ef\uff08\u4e0e\u666e\u901a\u540e\u7f00\u6811\u53ea\u6709$dfs$\u7684\u5730\u65b9\u6709\u533a\u522b\uff09\n```cpp\nil void dfs(int u, int dep) {\n\tif(len[u] <= inf / 10 && lower_bound(End + 1, End + T + 1, start[u]) != lower_bound(End + 1, End + T + 1, start[u] + len[u])) {\n\t\tans += End[lower_bound(End + 1, End + T + 1, start[u]) - End] - start[u];\n\t\treturn;\n\t}\n\tans += e[u] - start[u];\n\tif(dep > inf / 10) return;\n\trep(i, 0, 26) if(ch[u][i]) dfs(ch[u][i], dep + len[ch[u][i]]);\n}\n```\n$\\rm Mital$\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u601d\u8def\uff0c\u5927\u6982\u662f\u6bcf\u6b21\u63d2\u5165\u5b8c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u65f6\uff0c\u5f3a\u884c\u8bb2$now=1, rem=0$\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7684\u540e\u7f00\u6811\u5f62\u6001\u662f\u53ea\u6709 \u6bcf\u4e2a\u4e32 \u7684\u6240\u6709\u540e\u7f00\uff0c\u8fd9\u6837\u64cd\u4f5c\u53ef\u4ee5\u76f8\u5f53\u4e8e\u6bcf\u6b21\u5f80\u540e\u7f00\u6811\u4e22\u8282\u70b9\uff0c\u7136\u540e\u6bcf\u4e2a\u5b57\u7b26\u4e32\u4e92\u4e0d\u5f71\u54cd\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u628a\u6240\u6709\u540e\u7f00\u6811\u8fdb\u884c\u4e86\u5408\u5e76\u3002\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u8ddf\u666e\u901a\u540e\u7f00\u6811\u51e0\u4e4e\u4e00\u6837\u3002",
        "postTime": 1583296589,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6139 \u3010\u3010\u6a21\u677f\u3011\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u5e7f\u4e49SAM\uff09\u3011"
    },
    {
        "content": "\u5e7f\u4e49 $\\texttt{SAM}$ :\n\n\u8fd9\u4e1c\u897f\u6709\u5f88\u591a\u79cd\u5199\u6cd5\uff0c\u636e\u8bf4\u6700\u79d1\u5b66\u7684\u662f\u5f04\u5230 $\\texttt{Trie}$ \u4e0a\uff0c\u53ef\u60dc\u6211\u4e0d\u4f1a\uff0c\u6211\u53ea\u4ecb\u7ecd $2$ \u79cd\u6bd4\u8f83\u7b80\u5355\u7684\u65b9\u5f0f\n\n- \u6bcf\u6b21\u63d2\u5165\u5b8c\u4e00\u4e2a\u5b57\u7b26\u4e32\u540e\uff0c\u628a $\\texttt{SAM}$ \u7684 $\\text{last}$ \u6307\u9488\u6307\u5411 $0$ \uff08\u5199\u6cd5\u4e0d\u540c\uff0c\u4e5f\u6709\u53ef\u80fd\u662f $1$ \uff09\n\n- \u6bcf\u6b21\u63d2\u5165\u5b8c\u4e00\u4e2a\u5b57\u7b26\u4e32\u540e\uff0c\u63d2\u5165\u4e00\u4e2a\u5206\u9694\u7b26\n\n\u7b2c\u4e00\u4e2a\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u7b2c\u4e8c\u4e2a\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u5339\u914d\u7684\u65f6\u5019\u5b50\u4e32\u4e0d\u80fd\u5305\u542b\u8fd9\u4e2a\u5206\u9694\u7b26\uff0c\u5c31\u76f8\u5f53\u4e8e\u5206\u5f00\u4e86\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c $\\texttt{DP}$ \u7684\u65f6\u5019\uff0c\u53ea\u8981\u8ba1\u7b97\u4e0d\u5305\u542b\u8fd9\u4e2a\u5206\u9694\u7b26\u7684\u5373\u53ef\n\n\u4e00\u822c\u5728\u5b57\u7b26\u4e32\u5339\u914d\u7684\u65f6\u5019\uff0c\u4e24\u79cd\u65b9\u6cd5\u5199\u8d77\u6765\u90fd\u5dee\u4e0d\u591a\uff0c\u800c\u5728 $\\texttt{DP}$ \u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u79cd\u4f1a\u7b80\u5355\u4e00\u70b9\uff08\u6bd5\u7adf\u548c\u666e\u901a $\\texttt{SAM}$ \u4e00\u6a21\u4e00\u6837\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define ll long long\nstruct SAM{\n\tint l,link,c[26];\n}a[2000000];\nint n,sz,lst,len;\nll ans;\nchar s[1000002];\ninline void ins(int x){\n\tint u=sz++,p=lst;a[u].l=a[p].l+1;\n\twhile(p!=-1&&!a[p].c[x]) {a[p].c[x]=u;p=a[p].link;}\n\tif(p==-1) a[u].link=0;\n\telse\n\t{\n\t\tint q=a[p].c[x];\n\t\tif(a[p].l+1==a[q].l) a[u].link=q;\n\t\telse\n\t\t{\n\t\t\ta[sz]=a[q];a[sz++].l=a[p].l+1;\n\t\t\twhile(p!=-1&&a[p].c[x]==q) {a[p].c[x]=sz-1;p=a[p].link;}\n\t\t\ta[q].link=a[u].link=sz-1;\n\t\t}\n\t}\n\tlst=u;ans+=(ll)a[u].l-a[a[u].link].l;/*\u8ba1\u7b97\u8d21\u732e*/\n}\nsigned main(){\n\tscanf(\"%d\",&n);a[0].link=-1;sz++;\n\tfor(register int i=1;i<=n;i++,lst=0/*last\u6307\u9488\u521d\u59cb\u5316*/)\n\t{\n\t\tscanf(\"%s\",s+1);len=strlen(s+1);\n\t\tfor(register int j=1;j<=len;j++) ins(s[j]-'a');\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1583246373,
        "uid": 80679,
        "name": "Register",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6139 \u3010\u3010\u6a21\u677f\u3011\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u5e7f\u4e49SAM\uff09\u3011"
    },
    {
        "content": "\n[\u53ef\u5230\u6211\u7684\u535a\u5ba2\u98df\u7528](https://mivik.gitee.io/2020/intro/general-sam/)\n\n## \u7ea6\u675f\n\n`tar[x][c]`\uff1aSAM \u8f6c\u79fb\n\n`pre[x]`\uff1a\u5e38\u7528\u540d\u6709 `link`\u3001`fail` \u7b49 ~~\uff08\u53cd\u6b63\u5c31\u90a3\u4e2a\u4e1c\u897f\uff09~~\n\n`len[x]`\uff1a\u7ed3\u70b9 `x` \u4ee3\u8868\u7684\u6700\u957f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n\n---\n\n\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u4e0b\u6587\u7528\u5e7f\u4e49 SAM \u6307\u4ee3\uff09\uff0c\u5373\u7528\u591a\u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u5efa\u51fa\u7684\u4e00\u4e2a\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u62e5\u6709\u548c\u540e\u7f00\u81ea\u52a8\u673a\u76f8\u4f3c\u7684\u6027\u8d28\u3002\n\n\u6709\u4e09\u79cd\u8f83\u6d41\u4f20\u5e7f\u6cdb\u7684\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u5199\u6cd5\uff1a\n\n### 1. \u63d2\u5165\u65b0\u5b57\u7b26\u4e32\u65f6\u5c06 last \u91cd\u7f6e\uff08 last = 1 \uff09\n\nSAM \u63d2\u5165\u65f6\u6709\u7528\u5230\u4e00\u4e2a `last` \u6765\u8bb0\u5f55\u4e0a\u4e00\u4e2a\u5b57\u7b26\u7684\u7ed3\u70b9\uff0c\u5c06\u5176\u91cd\u7f6e\u5373\u56de\u5230\u4e86\u6700\u521d\u672a\u63d2\u5165\u4efb\u4f55\u5b57\u7b26\u7684\u72b6\u6001\u3002\u770b\u4f3c\u5f88\u7b26\u5408\u903b\u8f91\uff0c\u4f46\u5b9e\u9645\u4e0a\u6784\u5efa\u51fa\u6765\u7684\u81ea\u52a8\u673a\u4f1a\u6709\u95ee\u9898\u3002\u95ee\u9898\u5c31\u5728\u4e8e\u539f\u6765\u7684\u7ed3\u70b9\u53ef\u80fd\u4f1a\u88ab\u65b0\u521b\u5efa\u7684\u7ed3\u70b9\u8986\u76d6\uff0c\u5e76\u6700\u7ec8\u5f71\u54cd\u7b54\u6848\u3002\n\n\u9996\u5148\u8fd9\u9053\u6a21\u677f\u9898\u80af\u5b9a\u662f\u5361\u4e0d\u6389\uff0c\u56e0\u4e3a\u672c\u9898\u53ea\u548c\u7ed3\u70b9\u4fe1\u606f\uff08`pre` \u548c `len` \uff09\u6709\u5173\u7cfb\u3002\u6211\u4eec\u5728\u5efa\u7acb\u8fd9\u79cd\u9519\u8bef\u7684\u5e7f\u4e49 SAM \u65f6\u5e76\u6ca1\u6709\u8986\u76d6\u4efb\u4f55\u7ed3\u70b9\u7684 `pre` \u548c `len` \u3002\u4f46\u8ba9\u6211\u4eec\u6765\u770b\u8fd9\u6837\u4e00\u9053\u9898\uff08\u6539\u81ea P3804\uff09\uff1a\n\n> \u7ed9\u5b9a $N$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u8fd9 $N$ \u4e2a\u5b57\u7b26\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u4e0d\u4e3a 1 \u8fde\u7eed\u5b50\u4e32\u7684\uff08\u51fa\u73b0\u6b21\u6570 * \u5b57\u7b26\u4e32\u957f\u5ea6\uff09\u7684\u6700\u5927\u503c\u3002\n\n\u8fd9\u9053\u9898\u9700\u8981\u7528\u5230\u4e00\u4e2a\u57fa\u672c\u7684\u62d3\u6251\u6392\u5e8f\uff0c\u7136\u540e\u8fd9\u79cd\u5047\u5e7f\u4e49 SAM \u5c31\u4f1a\u6302\u6389\uff0c\u5177\u4f53\u8bf4\u660e\u89c1 [dalao \u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/ChenXingLing/solution-p6139)\u3002\u5047\u5e7f\u4e49 SAM \u7531\u4e8e\u51fa\u73b0\u4e86\u5947\u602a\u7684\u7a7a\u7ed3\u70b9\u5728\u8fd9\u91cc\u5c31\u4f1a\u6302\u6389\u3002\u5199\u4efd\u7b80\u5355\u7684\u4ee3\u7801\u6f14\u793a\u4e00\u4e0b\u3002\n\n[\u5047 SAM \u89e3\u6cd5](https://www.luogu.com.cn/paste/j6gtnhg6)\n\n\u8fd9\u4efd\u4ee3\u7801\u628a `n` \u6539\u6210 1 \u540e\u662f\u53ef\u4ee5 [\u76f4\u63a5\u901a\u8fc7](https://www.luogu.com.cn/record/37429355) P3804 \u7684\u3002\u7136\u540e\u6211\u4eec\u6765\u7ed9\u4e00\u7ec4\u6570\u636e\uff1a\n\n```\n2\naaab\naaaab\n```\n\n\u55ef\uff0c\u4ee3\u7801\u8f93\u51fa\u4e86 8\uff0c\u4f46\u662f\u5f88\u663e\u7136 `aa` \u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e00\u5171\u51fa\u73b0\u4e86 5 \u6b21\uff0c\u56e0\u6b64\u6700\u5927\u503c\u5e94\u8be5\u662f 2*5=14 \u3002\u73b0\u5728\u5f88\u663e\u7136\u8fd9\u79cd\u6784\u5efa\u65b9\u6cd5\u662f\u9519\u8bef\u7684\u4e86\u3002\n\n### 2. \u4f7f\u7528 Trie \u6811\u5efa\u81ea\u52a8\u673a\n\n\u8fd9\u79cd\u65b9\u6cd5\u5f88\u597d\u7406\u89e3\uff0c\u5373\u79bb\u7ebf\u628a\u6240\u6709\u7684\u5b57\u7b26\u4e32\u6784\u5efa\u6210\u4e00\u68f5 Trie \u6811\uff0c\u7136\u540e\u518d\u628a\u5404\u4e2a\u5b57\u7b26\uff08\u5373 Trie \u6811\u4e0a\u5404\u4e2a\u7ed3\u70b9\uff09\u63d2\u5165\u5230 SAM \u91cc\u9762\u65f6\uff0c`last` \u8bbe\u7f6e\u4e3a\u5b83\u5728 Trie \u6811\u4e0a\u7684\u7236\u4eb2\u5bf9\u5e94\u7684 SAM \u4e0a\u7684\u7ed3\u70b9\u3002\u8fd9\u6837\u505a\u7684\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\uff0c~~\u4f46\u663e\u7136\u5e76\u4e0d\u7b49\u4e8e\u6613\u8bc1~~\u3002\u5177\u4f53\u8fd8\u662f\u53ef\u4ee5\u770b\u770b\u4e0a\u9762\u90a3\u7bc7\u535a\u5ba2\u6765\u7740\u3002\n\n[AC \u4ee3\u7801](https://www.luogu.com.cn/paste/ek21bo4d)\n\n### 3. \u5728\u7ebf\u6784\u5efa\n\n\u55ef\uff0c\u91cd\u5934\u620f\u6765\u4e86\u3002~~\u7136\u540e\u5177\u4f53\u5206\u6790\u8fd8\u662f\u53ef\u4ee5\u770b\u4e0a\u9762\u90a3\u7bc7\u535a\u5ba2\u3002~~\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6211\u4eec\u5728\u63d2\u5165\u5b57\u7b26\u4e32\u65f6\u9700\u8981\u770b\u4e00\u4e0b\u5f53\u524d\u51c6\u5907\u63d2\u5165\u7684\u4f4d\u7f6e\u662f\u5426\u5df2\u7ecf\u6709\u7ed3\u70b9\u4e86\uff0c\u5982\u679c\u6709\u7684\u8bdd\u6211\u4eec\u53ea\u9700\u8981\u5728\u5176\u57fa\u7840\u4e0a\u989d\u5916\u5224\u65ad\u4e00\u4e0b\u62c6\u5206 SAM \u7ed3\u70b9\u7684\u60c5\u51b5\u6ca1\uff1b\u5426\u5219\u7684\u8bdd\u5c31\u548c\u666e\u901a\u7684 SAM \u63d2\u5165\u4e00\u6a21\u4e00\u6837\u4e86\u3002\u8d34\u4e00\u4e0b\u4ee3\u7801\u3002\n\n\u9644\uff1a[\u5728\u7ebf\u6587\u672c\u6bd4\u5bf9\u5de5\u5177](http://tool.chinaz.com/tools/diff/)\n\n\u524d\u7f6e\uff1a\n\n```cpp\ninline int create(int l) {\n\tlen[++tot] = l;\n\treturn tot;\n}\n```\n\n\u666e\u901a\u7684 SAM \u63d2\u5165\uff1a\n\n```cpp\ninline void operator+=(int c) {\n\tint i = lst;\n\tlst = create(len[i]+1);\n\twhile (!tar[i][c]) {\n\t\ttar[i][c] = lst;\n\t\tif (!(i = pre[i])) return (void)(pre[lst] = 1);\n\t}\n\tconst int ori = tar[i][c];\n\tif (len[i]+1==len[ori]) return (void)(pre[lst] = ori);\n\tconst int sub = create(len[i]+1);\n\tmemcpy(tar[sub], tar[ori], sizeof(tar[0]));\n\tpre[sub] = pre[ori];\n\tpre[lst] = pre[ori] = sub;\n\tdo {\n\t\ttar[i][c] = sub;\n\t\ti = pre[i];\n\t} while (i && tar[i][c]==ori);\n}\n```\n\n\u5728\u7ebf\u7684\u5e7f\u4e49 SAM \u63d2\u5165\uff1a\n\n```cpp\ninline void operator+=(int c) {\n\tint i = lst;\n\tif (tar[i][c]) { // \u5982\u679c\u5df2\u7ecf\u6709\u7ed3\u70b9\u4e86\n\t\tconst int ori = tar[i][c];\n\t\tif (len[i]+1==len[ori]) return (void)(lst = ori);\n\t\tconst int sub = create(len[i]+1);\n\t\tmemcpy(tar[sub], tar[ori], sizeof(tar[0]));\n\t\tpre[sub] = pre[ori];\n\t\tlst = pre[ori] = sub;\n\t\tdo {\n\t\t\ttar[i][c] = sub;\n\t\t\ti = pre[i];\n\t\t} while (i && tar[i][c]==ori);\n\t} else { // ... \u5426\u5219\u521b\u5efa\u65b0\u7684\u7ed3\u70b9\n\t\tlst = create(len[i]+1);\n\t\twhile (!tar[i][c]) {\n\t\t\ttar[i][c] = lst;\n\t\t\tif (!(i = pre[i])) return (void)(pre[lst] = 1);\n\t\t}\n\t\tconst int ori = tar[i][c];\n\t\tif (len[i]+1==len[ori]) return (void)(pre[lst] = ori);\n\t\tconst int sub = create(len[i]+1);\n\t\tmemcpy(tar[sub], tar[ori], sizeof(tar[0]));\n\t\tpre[sub] = pre[ori];\n\t\tpre[lst] = pre[ori] = sub;\n\t\tdo {\n\t\t\ttar[i][c] = sub;\n\t\t\ti = pre[i];\n\t\t} while (i && tar[i][c]==ori);\n\t}\n}\n```\n\n\u55ef\uff0c\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u6bb5\u4ee3\u7801\u91cd\u590d\u4e86\u5f88\u591a\u3002\u4e8e\u662f\u6211\u4eec\u628a\u5b83\u62bd\u79bb\u51fa\u6765\u53d8\u6210\u4e86\u8fd9\u6837\uff1a\n\n```cpp\ninline void operator+=(int c) {\n\tint i = lst;\n\tint &ope = tar[i][c]? lst: pre[lst = create(len[i]+1)];\n\twhile (!tar[i][c]) { // \u5bf9\u4e8e\u5df2\u7ecf tar[i][c] \u4e0d\u4e3a\u96f6\u7684\u60c5\u51b5\uff0c\u8fd9\u6bb5\u4ee3\u7801\u6839\u672c\u4e0d\u4f1a\u6267\u884c\uff0c\u56e0\u6b64\u6ca1\u6709\u5f71\u54cd\n\t\ttar[i][c] = lst;\n\t\tif (!(i = pre[i])) return (void)(ope = 1);\n\t}\n\tconst int ori = tar[i][c];\n\tif (len[i]+1==len[ori]) return (void)(ope = ori);\n\tconst int sub = create(len[i]+1);\n\tmemcpy(tar[sub], tar[ori], sizeof(tar[0]));\n\tpre[sub] = pre[ori];\n\tope = pre[ori] = sub;\n\tdo {\n\t\ttar[i][c] = sub;\n\t\ti = pre[i];\n\t} while (i && tar[i][c]==ori);\n}\n```\n\n\u55ef\uff0c\u5b8c\u7f8e\uff01\u548c\u666e\u901a\u7684 SAM \u63d2\u5165\u5c31\u5dee\u4e86\u51e0\u884c\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u505a\u8fd9\u9053\u9898\u4e86\u3002\n\n[mivik.h](https://mivik.gitee.io/mivik.h)\n\n```cpp\n// Mivik 2020.8.21\n#include <mivik.h>\n\n#ifdef MIVIK\nMI cin(popen(\"xsel -ob\", \"r\"));\n#else\nMI cin;\n#endif\n\ntypedef long long qe;\n\nconst int nmax = 1000001;\nconst int cmax = 26;\n\ntemplate<typename T> inline bool getmax(T& a, const T& b) { return a<b && (a = b, true); }\n\nstruct _ {\n\tconst static int S = nmax*2;\n\tint tar[S][cmax], pre[S], len[S], too[nmax], seq[S], cnt[S];\n\tint lst = 1, tot = 1;\n\tint n;\n\tinline int create(int l) {\n\t\tlen[++tot] = l;\n\t\treturn tot;\n\t}\n\tinline void operator+=(int c) {\n\t\tint i = lst;\n\t\tint &ope = tar[i][c]? lst: pre[lst = create(len[i]+1)];\n\t\twhile (!tar[i][c]) {\n\t\t\ttar[i][c] = lst;\n\t\t\tif (!(i = pre[i])) return (void)(ope = 1);\n\t\t}\n\t\tconst int ori = tar[i][c];\n\t\tif (len[i]+1==len[ori]) return (void)(ope = ori);\n\t\tconst int sub = create(len[i]+1);\n\t\tmemcpy(tar[sub], tar[ori], sizeof(tar[0]));\n\t\tpre[sub] = pre[ori];\n\t\tope = pre[ori] = sub;\n\t\tdo {\n\t\t\ttar[i][c] = sub;\n\t\t\ti = pre[i];\n\t\t} while (i && tar[i][c]==ori);\n\t}\n\tinline qe solve() {\n\t\tint i;\n\t\tqe ret = 0;\n\t\tfor (i=2;i<=tot;i++) ret += len[i]-len[pre[i]];\n\t\treturn ret;\n\t}\n} sam;\nint main() {\n\tint n = R;\n\tchar c;\n\twhile (n--) {\n\t\tcin>c;\n\t\tsam.lst = 1;\n\t\twhile (c!=-1 && !isspace(c)) {\n\t\t\tsam += c-'a';\n\t\t\t++sam.cnt[sam.lst];\n\t\t\tc = cin.get();\n\t\t}\n\t\tgetmax(sam.n, sam.len[sam.lst]);\n\t}\n\tcout<sam.solve()<endl;\n\treturn 0;\n}\n```",
        "postTime": 1598056843,
        "uid": 45182,
        "name": "Mivik",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6139 \u3010\u3010\u6a21\u677f\u3011\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u5e7f\u4e49 SAM\uff09\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u7684\u88f8\u9898\uff0c\u5e7f\u4e49SAM\u5927\u6982\u5c31\u662f\u5bf9\u4e00\u4e2a\u5b57\u5178\u6811\u5efaSAM\u7684\u8fc7\u7a0b\u3002\n\n\u770b\u4e00\u4e0b\u8fd9\u4e2a\u9898\u8981\u6211\u4eec\u7edf\u8ba1\u591a\u4e2a\u4e32\u7684\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u4e32\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u662fSAM\u7684\u88f8\u9898\uff0c\u4e0d\u8fc7\u8981\u662f\u591a\u4e2a\u4e32\uff0c\u5c31\u9700\u8981\u5e7f\u4e49SAM\u6765\u8fdb\u884c\u7edf\u8ba1\u4e86\uff0c\u7136\u540e\u56e0\u4e3a\u8fd9\u4e9b\u4e32\u7684\u603b\u957f\u5ea6\u5f88\u5c0f\uff0c\u53ea\u67091e6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u8fd9\u4e9b\u4e32\u5efa\u4e00\u4e2a\u5b57\u5178\u6811\u3002\n\n\u5efa\u5b8c\u5b57\u5178\u6811\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u5728\u6811\u4e0a\u8dd1SAM\uff0c\u8fd9\u4e2a\u9898\u7684\u5e7f\u4e49SAM\u548c\u666e\u901aSAM\u533a\u522b\u5f88\u5c0f\uff0c\u56e0\u4e3a\u5b57\u5178\u6811\u662f\u4f60\u81ea\u5df1\u5efa\u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4e00\u4e2a\u5b57\u7b26\u540e\u9762\u63a5\u4e24\u4e2a\u540c\u6837\u7684\u5b57\u7b26\u7684\u60c5\u51b5\uff08\u5426\u5219\u4f60\u9700\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u6216\u8005\u5408\u5e76\u4e00\u4e0b\u70b9\uff09\u3002\u4f60insert\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u76f4\u63a5\u628alast\u8bbe\u6210\u5b83\u7238\u7238\u5728SAM\u4e0a\u7684\u5e8f\u53f7\u5c31\u884c\u3002\n\n\u5173\u4e8e\u5e7f\u4e49SAM\u6b63\u786e\u6027\u8bf7\u53c2\u8003\u96c5\u793c\u4e2d\u5b66\u5218\u7814\u7ece\u7684\u300a\u540e\u7f00\u81ea\u52a8\u673a\u5728\u5b57\u5178\u6811\u4e0a\u7684\u62d3\u5c55\u300b\u4e00\u6587\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 100005 \n#define maxm 200005\n#define maxt 4000005\n#define ll long long \n#define A ch[now][x[i] - 'a']\n#define For(i, j, n) for(register int i = j ; i <= n ; ++i) \n#define Foe(i, x) for(register int i = head[x] ; i ; i = nxt[i])\nint n, m, u, v, np, rt, cnt, num, tot;\nint fa[maxt], len[maxt], ch[maxt][30], go[maxt][30];\nll ans;\nstring s;\n\ninline void insert(string x){\n\tint now = 0, len = x.length() - 1;\t\n\tFor(i, 0, len) A = A ? A : ++num, now = A;\t\n}\ninline int insert(int x, int c){\n\tnp = ++cnt, len[np] = len[x] + 1;\n\tfor( ; !go[x][c] && x ; x = fa[x]) go[x][c] = np; \n\tif(!x) return fa[np] = rt, np;\n\tint q = go[x][c];\n\tif(len[q] == len[x] + 1) return fa[np] = q, np;\n\telse{\n\t\tint nq = ++cnt;\n\t\tlen[nq] = len[x] + 1, fa[nq] = fa[q], fa[np] = fa[q] = nq;\n\t\tmemcpy(go[nq], go[q], sizeof(go[nq]));\n\t\tfor( ; go[x][c] == q ; x = fa[x]) go[x][c] = nq;\n\t\treturn np;\n\t}\n}\ninline void dfs(int x, int c, int w){\n\tint tmp = insert(w, c);\n\tFor(i, 0, 25) if(ch[x][i]) dfs(ch[x][i], i, tmp);\n}\n\nint main(){\n\tscanf(\"%d\", &n), rt = cnt = 1;\n\tFor(i, 1, n) cin >> s, insert(s);\n\tFor(i, 0, 25) if(ch[0][i]) dfs(ch[0][i], i, rt);\n\tFor(i, 1, cnt) ans += len[i] - len[fa[i]]; \n\tprintf(\"%lld\\n\", ans); \n    return 0;\n}\n\n",
        "postTime": 1582965725,
        "uid": 163980,
        "name": "\u884c\u541f\u5578\u4e5d\u5dde",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6139 \u3010\u3010\u6a21\u677f\u3011\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u5e7f\u4e49SAM\uff09\u3011"
    },
    {
        "content": "\u5361\u5e38\u9898(\u786e\u4fe1\n\n\u63d0\u4f9b\u540e\u7f00\u6811\u505a\u6cd5\n\n\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u95f4\u63a5\u4e00\u4e2a\u4e0d\u540c\u7684\u7279\u6b8a\u5b57\u7b26\u7136\u540e\u62fc\u6210\u4e00\u4e2a\u4e32\n\n\u5efa\u6811\u540e\u904d\u5386\uff0c\u4e0d\u7ecf\u8fc7\u7279\u6b8a\u5b57\u7b26\u7684\u6240\u6709\u8fb9\u7684\u957f\u5ea6\u5373\u4e3a\u7b54\u6848\n\n\u4e00\u5f00\u59cb\u662f\u4e8c\u5206\uff0c\u7136\u540e\u53d1\u73b0\u6362\u6210\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u7ec8\u6b62\u957f\u5ea6\n\n\u53d1\u73b0\u8fc7\u4e0d\u4e86\uff0c\u7136\u540e\u5f00\u59cb\u5361\u5e38\n\n~~\u5c31\u662f\u56e0\u4e3a\u6bd2\u7624map~~\n\n\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u6240\u6709\u7684\u7279\u6b8a\u5b57\u7b26\u53ef\u4ee5\u4e00\u6837\n\n\u56e0\u4e3a\u5982\u679c\u4f7f\u7528\u76f8\u540c\u7279\u6b8a\u5b57\u7b26\u800c\u4ed6\u4eec\u88ab\u538b\u7f29\u4e86\u7684\u8bdd\n\n\u8bf4\u660e\u4e8c\u8005\u672c\u8d28\u76f8\u540c\uff0c\u4e0d\u4f1a\u6709\u8d21\u732e\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<set>\n#include<map>\n#include<queue>\n#include<unordered_map>\n#define M 2000010\n#define inf 2e9\n#define LL long long\nconst int mod=998244353;\nusing namespace std;\ninline int read(){\n\tint f=1,x=0;char s=getchar();\n\twhile (!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile (isdigit(s)){x=(x<<1)+(x<<3)+(s^48),s=getchar();}\n\treturn x*f;\n}\nint n,t,strl,strcnt,ref[M],ed[M];\nLL ans;\nchar str[M];\nstruct Suffix_Tree{\n\tint\tlink[M<<1],len[M<<1],start[M<<1],tot,rem,now,s[M],ch[M<<1][27];\n\tinline void reset(void){\n\t\tlen[0]=inf,tot=1,n=rem=0,now=1,strl=ans=0;\t\n\t}\n\tinline int New(int st,int le){start[++tot]=st,len[tot]=le,link[tot]=1;return tot;}\n\tinline void extend(int x){\n\t\ts[++n]=x,rem++;\n\t\tfor (int last=1;rem;){\n\t\t\twhile (rem>len[ch[now][s[n-rem+1]]])\n\t\t\t\trem-=len[now=ch[now][s[n-rem+1]]];\n\t\t\tint &v=ch[now][s[n-rem+1]],c=s[start[v]+rem-1];\n\t\t\tif (!v||x==c){\n\t\t\t\tlink[last]=now,last=now;\n\t\t\t\tif (!v) v=New(n-rem+1,inf);\n\t\t\t\telse break;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint u=New(start[v],rem-1);\n\t\t\t\tch[u][c]=v,ch[u][x]=New(n,inf);\n\t\t\t\tstart[v]+=rem-1,len[v]-=rem-1;\n\t\t\t\tlink[last]=v=u,last=u;\n\t\t\t}\n\t\t\tif (now==1) rem--;else now=link[now];\n\t\t}\n\t}\n\tinline void adjust(int x){\n\t\tint cnt=0;\n\t\tfor (int i=0;i<=26;i++) if (ch[x][i]) cnt++,adjust(ch[x][i]);\n\t\tif (!cnt) len[x]=strl-start[x]+1;\n\t}\n\tinline void dfs(int x){\n\t\tfor (int i=0;i<=25;i++){\n\t\t\tif (!ch[x][i]) continue;\n\t\t\tif (ref[start[ch[x][i]]]!=ref[start[ch[x][i]]+len[ch[x][i]]-1]){\n\t\t\t\tif (!ref[start[ch[x][i]]]) continue;\n\t\t\t\tans+=ed[ref[start[ch[x][i]]]]-start[ch[x][i]]+1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tans+=len[ch[x][i]],dfs(ch[x][i]);\n\t\t}\n\t}\n}tree;\nsigned main(void){\n//\tfreopen(\"my.in\",\"r\",stdin);\n\ttree.reset();strcnt=read();\n\tfor (int i=1;i<=strcnt;i++){\n\t\tscanf(\"%s\",str+1);\n\t\tint len=strlen(str+1);\n\t\tfor (int j=strl+1;j<=strl+len;j++) ref[j]=i;ed[i]=strl+len;\n\t\tfor (int j=1;j<=len;j++) tree.extend(str[j]-'a');\n\t\ttree.extend(26),strl+=len+1;\n\t}strl--;\n\ttree.adjust(1);\n\ttree.dfs(1);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1583163696,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6139 \u3010\u3010\u6a21\u677f\u3011\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\uff08\u5e7f\u4e49SAM\uff09\u3011"
    }
]