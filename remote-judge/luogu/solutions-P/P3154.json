[
    {
        "content": "\u9996\u5148\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u52a0\u5f3a\u7248\uff0c\u8be5\u8bb2\u7684\u4e5f\u90fd\u5728\u90a3\u8fb9\u7684\u9898\u89e3\u6709\u4e86\u3002\n\n[\u53cc\u500d\u7ecf\u9a8cP3230 [HNOI2013]\u6bd4\u8d5b](https://www.luogu.org/problemnew/show/P3230)\n\n\u8fd9\u4e2a\u9898\u6700\u76f4\u63a5\u7684\u60f3\u6cd5\u5c31\u662f\u66b4\u641c\uff0c\u5148\u641c1v2\uff0c1v3\u2026\u20261vN\uff0c\u7136\u540e2v3\u2026\u2026\u641c\u5230\u7ed3\u5c3e\n\n\u5f88\u663e\u7136\u8fd9\u6837\u505a\u53ea\u80fd\u62ff\u90e8\u5206\u5206\uff08\u597d\u5427\u6211\u4e0d\u77e5\u9053\u8fd9\u6837\u7a76\u7adf\u80fd\u62ff\u591a\u5c11\u90e8\u5206\u5206\uff09\n\n**\u526a\u679d\uff1a**\n\n1.\u6ce8\u610f\u5230\u6211\u4eec\u628a1\u961f\u7684\u6240\u6709\u6bd4\u8d5b\u641c\u5b8c\u540e\u624d\u5f00\u59cb\u641c\u76842\uff0c\u7136\u800c\u6b64\u65f6\u5982\u679c1\u961f\u7684\u603b\u5206\u5df2\u7ecf\u4e0d\u4e0e\u671f\u671b\u5f97\u5206\u76f8\u540c\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de0\u4e86\uff0888pts\uff09\n\n2.\u77e5\u9053\u603b\u5206\u548c\u603b\u573a\u6570\uff0c\u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u6bd4\u8d5b\u4e2d\u80dc\u573a\u548c\u5e73\u573a\u3002\u641c\u7d22\u65f6\u8d85\u8fc7\u8fd9\u4e2a\u503c\u5219\u8fd4\u56de0\uff0892pts\uff09\n\n3.**\u8bb0\u5fc6\u5316\u641c\u7d22**\uff0c\u641c\u5b8c\u67d0\u4e2a\u4eba\u7684\u6240\u6709\u573a\u6b21\u540e\uff0c\u5982\u679c\u540e\u9762\u6240\u6709\u961f\u5269\u4f59\u5206\u6570\u4ece\u5c0f\u5230\u5927\u6392\u6210\u7684\u5e8f\u5217\u5df2\u7ecf\u641c\u8fc7\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e0a\u6b21\u641c\u5230\u7684\u503c\uff0c\u8fd9\u53ef\u4ee5\u7528Hash\u5904\u7406\uff08100pts\uff09\n\n\u5f53\u7136\u8fd8\u6709\u4e00\u4e9b\u522b\u7684\u526a\u679d\u3002\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u67d0\u4eba\u63a5\u4e0b\u6765\u6bcf\u573a\u90fd\u8d62\u4e5f\u4e0d\u80fd\u83b7\u5f97\u671f\u671b\u7684\u5206\u6570\uff0c\u90a3\u4e48\u8fd4\u56de0\n\n~~\u6211\u672c\u6765\u4ee5\u4e3a\u524d\u4e24\u4e2a\u526a\u679d\u5c31\u53ef\u4ee5AC\u8fd9\u4e2a\u9898\u7136\u800c\u6ca1\u6709\u3002\u6240\u4ee5\u6700\u540e\u8fd9\u4e24\u4e2a\u9898\u90fd\u8bc4\u4e0a\u4e86\u7d2b\u9898~~\n\n\u9644\u4e0a\u4e00\u4e2a\u4e24\u8fb9\u90fd\u80fd\u8fc7\u7684AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long LL;\nconst LL maxn=12;\nconst LL mod=1e9+7;\nconst LL base=28;\nusing namespace std;\n\nLL n,ans;\nLL a[maxn],tmp[maxn],cz[maxn];\nLL sx,sy,s; ///sx\u662f\u603b\u80dc\u573a\uff0csy\u662f\u603b\u5e73\u573a\nmap<LL,LL> M;\n\nLL cmp(LL x,LL y)\n{\n    return x>y;\n}\n\nLL dfs(LL x,LL y)\n{\n    LL now=0;\n    if(x>=n) return 1;\n    if(y>n)\n    {\n        if(tmp[x]!=a[x]) return 0;\n        ///\u5904\u7406Hash\n        for(LL i=x+1;i<=n;i++) cz[i]=a[i]-tmp[i];\n        sort(cz+x+1,cz+n+1);\n        LL hsh=0;\n        for(LL i=x+1;i<=n;i++) hsh=hsh*base+cz[i];\n        if(M.find(hsh)!=M.end()) return M[hsh];\n        else return M[hsh]=dfs(x+1,x+2);\n    }\n    if(tmp[x]+3<=a[x] && sx)\n    tmp[x]+=3,sx--,now+=dfs(x,y+1),tmp[x]-=3,sx++;\n    if(tmp[y]+3<=a[y] && sx)\n    tmp[y]+=3,sx--,now+=dfs(x,y+1),tmp[y]-=3,sx++;\n    if(tmp[x]+1<=a[x] && tmp[y]+1<=a[y] && sy)\n    tmp[x]+=1,tmp[y]+=1,sy--,now+=dfs(x,y+1),tmp[x]-=1,tmp[y]-=1,sy++;\n    return now%mod;\n}\n\nint main()\n{\n    scanf(\"%lld\",&n);\n    for(LL i=1;i<=n;i++) scanf(\"%lld\",&a[i]),s+=a[i];\n    sx=s-n*n+n;sy=(n*n-n)/2-sx; ///\u8fd9\u4e2a\u5728\u7eb8\u4e0a\u89e3\u65b9\u7a0b\n    sort(a+1,a+n+1,cmp); ///\u554a\uff0c\u4ece\u5927\u5230\u5c0f\u4e5f\u662f\u5f88\u91cd\u8981\u7684\n    printf(\"%lld\",dfs(1,2));\n    return 0;\n}\n```",
        "postTime": 1540561253,
        "uid": 44580,
        "name": "JMercury",
        "ccfLevel": 7,
        "title": "P3154 [CQOI2009]\u5faa\u73af\u8d5b"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u641c\u7d22\u9898\uff0c\u6ce8\u610f\u4e94\u4e2a\u7ec6\u8282\u5c31\u597d\n\n1.\u5982\u679c\u5bf9\u67d0\u4e2a\u961f\u5269\u4f59\u573a\u6b21\u7684\u6bd4\u8d5b\u5168\u8f93\u6216\u5168\u8d62\u90fd\u4e0d\u80fd\u4f7f\u7ed3\u679c\u8fbe\u5230\u8981\u6c42\u503c\uff0c\u5c31\u526a\u679d\u3002\n\n2.\u5982\u679c\u8fd8\u6709n\u4e2a\u961f\u6ca1\u6709\u6bd4\u8fc7\uff0c\u5206\u6570\u8fd8\u5deen\\*3-1\uff0c\u5c31\u526a\u679d\n\n3.\u6bcf\u4e2a\u961f\u53ea\u9700\u8981\u641c\u7d22\u4ed6\u5e8f\u53f7\u540e\u9762\u7684\u961f\uff0c\u524d\u9762\u7684\u961f\u4f1a\u5728dfs\u5f53\u4e2d\u5f97\u5230\u3002\n\n4.\u4e00\u4e2a\u961f\u6bd4\u8d5b\u5230\u4e86\u6700\u540e\u4e00\u4e2a\u961f\uff0c\u5224\u65ad\u5982\u679c\u4e0e\u8981\u6c42\u503c\u5dee2\u6216\uff08\u5927\u4e8e3\uff08\u526a\u679d1\u5df2\u526a\u6389\uff09\uff09\u5c31\u526a\u679d\u3002\n\n5.\u5c0f\u5fc3\u88ab\u5361\u5e38\u3002\uff08\u624b\u5de5O2\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int maxn=1e6+7;\n#define ll long long\n#pragma GCC optimize(2)\nvoid read(int &x)\n{\n  char c=getchar();\n x=0;\n  int flag=1;\n while(!isdigit(c))\n {\n   if(c=='-')flag=-1;\n   c=getchar();\n }\n while(isdigit(c))\n{\nx=x*10+c-48;\nc=getchar();\n}\n  x*=flag;\n}\nint n,a[10],b[10];\nint ans=0;\nint sc[5]={3,1,0,0};\nvoid dfs(int x,int y)\n{\n  if(b[x]>a[x])return ;\n  if(b[x]+(n-y+1)*3<a[x])return ;\n  if(x==n&&b[x]==a[x])\n  {\n    ans++;\n    return ;\n  }\n  if(y==n)\n  {\n    int t=a[x]-b[x];\n    if(t==2)return ;\n    b[y]+=sc[t];\n    dfs(x+1,x+2);\n    b[y]-=sc[t];\n  }\n  else\n  {\n    b[x]+=3;\n    dfs(x,y+1);\n    b[x]-=3;\n    b[y]+=3;\n    dfs(x,y+1);\n    b[y]-=3;\n    b[x]+=1;\n    b[y]+=1;\n    dfs(x,y+1);\n    b[x]-=1;\n    b[y]-=1;\n  }\n}\nint main()\n{\n  read(n);\n  for(int i=1;i<=n;i++)read(a[i]);\n  dfs(1,2);\n  cout<<ans;\n  return 0;\n}\n\n```",
        "postTime": 1508919376,
        "uid": 28053,
        "name": "aface0427",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3154 \u3010[CQOI2009]MATCH\u5faa\u73af\u8d5b\u3011"
    },
    {
        "content": "#### \u5148\u611f\u53f9\u4e00\u4e0b\n\n\u6211\u641c\u7d22\u597d\u5f31\u554a\uff01\uff01\uff01\n\n**~~\u597d\u9e21\u513f\u5f31\u554a\uff01\uff01\uff01~~**\n\n**~~\u641c\u7d22\u662f\u4e2a\u597d\u4e1c\u897f\u3002\u5e0c\u671b\u4f60\u4eec\u90fd\u80fd\u4f1a\u3002~~**\n\n\u7740\u9898\u76ee\u6211\u4e00\u4e2a\u4eba\u5c31\u4ea4\u4e8616\u904d\u3002~~mmp~~\n\n\u770b\u7740\u522b\u7684\u5927\u4f6c10\u5206\u949f\u51fa\u66b4\u529b\uff0c\u4e0d\u523030\u5206\u949f\u51fa96\u5206\u7684\u526a\u679d\uff0c~~\u867d\u7136\u6700\u540e\u662f\u628a\u6570\u636e\u9a97\u4e0b\u6765\u8fc7\u7684~~\uff0c\u4f46\u662f\u4eba\u5bb6\u53c8\u8865\u4e86hash\u8bb0\u5fc6\u5316\u554a\u3002orz@ \u6211\u59d3\u51b7\u6211\u5fc3\u51b7\u3002\n\n### \u6240\u4ee5\u6211\u662f\u771f\u7684\u83dc\u3002\n\n\u56e0\u4e3a\u6211\u6700\u57fa\u672c\u7684\u66b4\u529b\u90fd\u6253\u4e862\u4e2a\u5c0f\u65f6\u624d\u4e0dwa\u554a\u554a\u554a\u554a\u3002\u3002\u3002\n\n\u5f00\u59cb\u60f3\u7684\u662f$dfs(k)$\u679a\u4e3e\u6bcf\u4e2a\u4eba\uff0c\u7ed3\u679c\u8981\u548c\u540e\u9762\u6240\u6709\u4eba\u5224\u65ad\uff0c\u6240\u4ee5\u9700\u8981\u679a\u4e3e\u4e00\u4e2a.....**\u4e09\u8fdb\u5236**\u3002\n\n**\uff08~~\u4ec0\u4e48\u5783\u573e\u7b97\u6cd5\uff01~~\uff09**\n\n**$dfs(x,y)$\u679a\u4e3e\u6bcf\u573a\u6bd4\u8d5b\u624d\u5bf9\u554a\uff01\uff01\uff01\u3002\u3002\u3002**\n\n~~\u5199\u4e2a\u9898\u89e3\u53cd\u7701\u4e00\u4e0b\u3002~~\n\n## \u6b63\u6587\u5f00\u59cb\uff1a\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u76f4\u63a5\u5730\u60f3\u5230\uff1a\u628a\u6bcf\u5bf9\u6bd4\u8d5b\u7684\u7ed3\u679c\u679a\u4e3e\u4e00\u4e0b\uff0c\u7136\u540e\u7b97\u51fa\u6bcf\u4e2a\u4eba\u7684\u5206\u6570\uff0c\u7136\u540e\u548c\u6807\u51c6\u7684\u5bf9\u6bd4\uff0c\u8981\u662f\u90fd\u4e00\u6837\uff0c\u5c31\u7b97\u4e00\u79cd\u65b9\u6848\u3002\n\n\u6240\u4ee5\u4e00\u5171$n*(n-1)/2$\u573a\u6bd4\u8d5b\uff0c\u5c31\u6709$3^{n*(n-1)/2}$\u79cd\u53ef\u80fd\u6027\u3002\u590d\u6742\u5ea6\u4e3a$O(3^{n^2})$\uff0c$n<=8$\u597d\u50cf\u8fc7\u4e0d\u53bb\u3002\uff08$48pts$\uff09\n\n#### $code:$\n```\n#include<bits/stdc++.h>\nusing namespace std;//0fail 3win 1tie\nint n;\nshort tmp[9][9];\nshort sor[9];\nshort st[9];\nint ans=0;\nvoid dfs(int x,int y){\n    int nx,ny;\n    nx=x,ny=y+1;\n    if(y==n) nx=x+1,ny=x+2;\n    if(x==n){\n        int fl=1;\n        for(int i=1;i<=n;i++){\n            if(st[i]!=sor[i]){\n                fl=0;break;\n            }\n        }\n        if(fl){\n            ans++;\n        }\n        return;\n    }\n    sor[x]+=3,dfs(nx,ny),sor[x]-=3;\n    sor[y]+=3,dfs(nx,ny),sor[y]-=3;\n    sor[x]++,sor[y]++,dfs(nx,ny),sor[x]--,sor[y]--;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%hd\",&st[i]);\n    }\n    dfs(1,2);\n    cout<<ans;\n    return 0;\n}\n```\n\n\n### \u4f46\u662f\uff0c\u526a\u679d\u5927\u6cd5\u597d!\n\u9996\u5148\uff0c\u6700\u597d\u60f3\u5230\u7684\uff0c\u6211\u4eec\u4e0d\u7528\u6700\u540e\u5728\u6bd4\u8f83\u6bcf\u4e2a\u7684\uff0c\u524d\u9762\u7684\u4e00\u65e6\u786e\u5b9a\uff0c\u5c31\u4e0d\u4f1a\u66f4\u6539\uff0c\u6240\u4ee5\u53ea\u8981\u524d\u9762\u7684\u4e00\u4e2a\u548c\u6807\u51c6\u4e0d\u7b26\u5408\uff0c\u5c31$return$\u3002\u8fd9\u4e2a\u526a\u679d\u7684\u529b\u5ea6\u662f\u6700\u5927\u7684\u3002\n\n\u7136\u540e\uff0c\u8fd8\u6709\u4e00\u4e2a\u4e5f\u80fd\u60f3\u5230\u7684\uff0c\u5982\u679c\u5bf9\u4e8e\u5f53\u524d\u7684\u5f97\u5206\uff0c\u5373\u4f7f\u540e\u9762\u5168\u90fd\u8d62\u4e86\uff0c\u4e5f\u53ef\u4ee5\u526a\u6389\u3002\u8fd9\u4e2a\u4f18\u5316\u5bf9\u4e8e\u679a\u4e3e\u524d\u9762\u8f93\u7684\u90a3\u4e9b\u60c5\u51b5\u4e0b\u5e38\u5e38\u80fd\u526a\u6389\uff0c\u529b\u5ea6\u8fd8\u662f\u4e0d\u9519\u7684\u3002\n\n\u8fd9\u6837\u4f60\u5c31\u80fd\u5f97$AC$\u4e86$qwq$ **~~\u5f53\u7136\u9700\u8981\u7ed9\u6d4b\u8bc4\u673a\u5438\u6c27\u554a\uff08\u96fe\uff09~~**\n\n### $code:$\n```\n#include<cstdio>\nusing namespace std;//0fail 3win 1tie\nint n;\nint tmp[9][9];\nint sor[9];\nint st[9];\nint ans=0;\nconst int f[]={3,1,0,0};\nvoid dfs(register int x,register int y){\n    if(sor[x]>st[x]) return;//\u7b2c\u4e00\u4e2a\u526a\u679d\u7684\u4e00\u534a\uff0c\u5bf9\u4e8e\u5f53\u524d\u5224\u7684\u4eba\uff0c\u5982\u679c\u5df2\u7ecf\u5927\u4e8e\uff0c\u5c31\u663e\u7136\u4e0d\u7528\u8003\u8651\n    if(sor[x]+(n-y+1)*3<st[x])return;//\u7b2c\u4e8c\u4e2a\u526a\u679d\n    if(x==n){++ans;return;}\n    if(y==n){\n    \tregister int t=st[x]-sor[x];\n        //\u4ee5\u4e0b\u8fd9\u4e24\u4e2aif\u5199\u6210( || )\u5c31T\u6389\u4e86woc....\n        if(t==2) return;//\u5f88\u7279\u6b8a\u7684\u60c5\u51b5\uff0ct==2\u7684\u8bdd\u53ea\u5269\u4e00\u4e2a\u4eba\u4e86\u5c31\u6ca1\u6cd5\u8fbe\u6210\u4e86\n        if(t>3) return;//\u7b2c\u4e00\u4e2a\u526a\u679d\u7684\u53e6\u4e00\u534a\uff0c\u81ea\u5df1\u548c\u5168\u90e8\u4eba\u90fd\u5224\u5b8c\u4e86\uff0c\u8fd8\u662f\u4e0d\u591f\u591a\n        //\u4ee5\u4e0bx\u662f\u53ef\u4ee5\u8fbe\u5230\u6807\u51c6\u7684\uff0c\u4f46\u662f\u5e76\u4e0d\u7528\u7ed9sor[x]\u518d\u52a0\u4e86\uff0c\u56e0\u4e3ax\u5224\u8fc7\u53bb\u4e86\uff0c\u5df2\u7ecf\u8868\u793a\u5b83\u53ef\u884c\u4e86\uff0cdfs(x+1,...)\u4e86\n        sor[y]+=f[t];\n        if(sor[y]<=st[y]) dfs(x+1,x+2);\n        sor[y]-=f[t];\n        return;\n    }\n    sor[x]+=3;if(sor[x]<=st[x])dfs(x,y+1);sor[x]-=3;\n    sor[y]+=3;if(sor[y]<=st[y])dfs(x,y+1);sor[y]-=3;\n    ++sor[x],++sor[y];dfs(x,y+1);--sor[x],--sor[y];\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(register int i=1;i<=n;i++){\n        scanf(\"%d\",&st[i]);\n    }\n    dfs(1,2);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u6240\u4ee5\u5176\u5b9e\u8fd9\u4e2a\u9898\u96be\u5ea6\u5e94\u8be5\u662f\u7eff\u9898\u6216\u8005\u84dd\u9898\u5427$qwq$",
        "postTime": 1546224014,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3154 \u3010[CQOI2009]\u5faa\u73af\u8d5b\u3011"
    },
    {
        "content": "\u597d\u50cf\u6211\u662f\u552f\u4e00\u4e00\u4e2a\u8fd9\u4e48\u505a\u7684\uff1f\uff08\u6211\u4e5f\u4e0d\u6e05\u695a\uff09\n\n\u5728JS\u7701\u590f\u4ee4\u8425\u8bb2\u8fd9\u9898\u7684\u65f6\u5019\u6211\u5c31\u60f3\u51fa\u4e86\u8fd9\u4e2a\u505a\u6cd5\u5e76\u88ab\u67d0\u5468\u59d3\u5927\u4f6c\u8ba4\u53ef\u4e86\uff0c\u4eca\u5929\u7ec8\u4e8e\u60f3\u8d77\u6765\u8fd9\u4e2a\u9898\u4e86\u5c31\u5199\u4e86\u4e00\u4e0b\n\n\u9996\u5148\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u679a\u4e3e\u6bcf\u4e00\u573a\u6bd4\u8d5b\u7684\u60c5\u51b5\uff0c$n(n-1)/2$\u573a\u6bd4\u8d5b\uff0c\u6700\u591a\u53ea\u670928\u573a\uff0c\u6bcf\u573a\u6bd4\u8d5b\u7684\u60c5\u51b5\u6709\u4e09\u79cd\uff08a\u80dc\uff0cb\u80dc\uff0c\u5e73\u5c40\uff09\uff0c\u90a3\u4e48\u603b\u72b6\u6001\u91cf\u5c31\u662f$3^{28}$\uff0c\u627f\u53d7\u4e0d\u8d77\u3002\n\n\u8fd9\u65f6\u5019\u53ef\u4ee5\u8003\u8651\u6298\u534a\u641c\u7d22\uff08\u6216\u8005\u53ebmeet-in-the-middle\uff09\u3002[\u6298\u534a\u641c\u7d22\u7684\u6a21\u677f\u9898](https://www.luogu.org/problemnew/show/T32757)\n\n\u8fd9\u9053\u6a21\u677f\u9898\u662f\u8bf4\uff0c\u6709$n$\u4e2a\u781d\u7801\u548c$m$\u4e2a\u7269\u54c1\uff0c\u7ed9\u51fa\u5b83\u4eec\u7684\u8d28\u91cf\uff0c\u4e00\u4e2a\u5929\u5e73\uff0c\u781d\u7801\u53ef\u4ee5\u653e\u5de6\u8fb9\u4e5f\u53ef\u4ee5\u653e\u53f3\u8fb9\uff0c\u95ee\u54ea\u4e9b\u7269\u54c1\u53ef\u4ee5\u88ab\u79f0\u51fa\u6765\uff0c$n\\leq24$\u3002\u56e0\u4e3a\u6bcf\u4e2a\u781d\u7801\u53ef\u4ee5\u653e\u5de6\u8fb9\u3001\u653e\u53f3\u8fb9\u3001\u4e0d\u653e\uff0c\u6240\u4ee5\u76f4\u63a5\u679a\u4e3e\u72b6\u6001\u91cf\u662f$3^{24}$\uff0c\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u6298\u534a\u641c\u7d22\u7684\u60f3\u6cd5\u5c31\u662f\uff0c\u53ef\u4ee5\u5148\u679a\u4e3e\u524d$12$\u4e2a\u80fd\u79f0\u51fa\u7684\u6240\u6709\u8d28\u91cf\uff0c\u5b58\u5165$a$\u6570\u7ec4\uff0c\u518d\u7528\u51e0\u4e4e\u4e00\u6a21\u4e00\u6837\u7684\u8fc7\u7a0b\u679a\u4e3e\u540e$12$\u4e2a\u80fd\u79f0\u51fa\u7684\u6240\u6709\u8d28\u91cf\uff0c\u5b58\u5165$b$\u6570\u7ec4\uff0c\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u7269\u54c1\u7684\u8d28\u91cf$x$\uff0c\u679a\u4e3e$a[i]$\uff0c\u5728$b[]$\u91cc\u627e$a[i]+x$\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u7684\u8bdd\u641c\u7d22\u7684\u603b\u72b6\u6001\u91cf\u662f$3^{12}$\uff0c\u81f3\u4e8e\u540e\u9762\u7684\u67e5\u627e\u8fc7\u7a0b\u53ef\u4ee5\u5148\u5bf9$b$\u6392\u5e8f\u7136\u540e\u4e8c\u5206\u67e5\u627e\u4ec0\u4e48\u7684\uff0c\u5982\u679c\u8ffd\u6c42\u901f\u5ea6\u53ef\u4ee5\u8003\u8651$hash$\u3002\n\n\u6240\u4ee5\u6298\u534a\u641c\u7d22\u5f80\u5f80\u6709\u590d\u6742\u5ea6\u5f00\u6839\u7684\u6548\u679c\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\u53ef\u4ee5\u5148\u679a\u4e3e\u524d\u4e00\u534a\u6bd4\u8d5b\u7684\u5f97\u5206\u60c5\u51b5\uff0c\u5b58\u5165$a$\u6570\u7ec4\uff0c\u518d\u679a\u4e3e\u540e\u4e00\u534a\u6bd4\u8d5b\u7684\u5f97\u5206\u60c5\u51b5\uff0c\u5b58\u5165$b$\u6570\u7ec4\uff0c\u7136\u540e\u679a\u4e3e$a$\u7684\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u7528\u6700\u7ec8\u5f97\u5206\u51cf\u6389\u5b83\u5f97\u5230\u7684\u7ed3\u679c\u5728$b$\u91cc\u67e5\u627e\u5373\u53ef\u3002\n\n\u4e0d\u8fc7\u6211\u6700\u540e\u7684\u8fd9\u4e2a\u67e5\u627e\u7528\u7684\u662fsort+\u4e8c\u5206\uff0c\u800c$3^{14}$\u5927\u7ea6\u5728\u4e94\u767e\u4e07\u5de6\u53f3\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u5c31\u6709\u70b9\u9ad8\u4e86\uff0c\u4e0d\u5f00O2\u4f1aT3\u4e2a\u70b9\u3002\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u8003\u8651\u7528hash~~\u4f46\u662f\u6211\u61d2\u4e0d\u60f3hash\u4e86~~\n\n\u81f3\u4e8e\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u8003\u8651\u5230$n\\leq8$\uff0c\u6bcf\u652f\u961f\u4f0d\u81f3\u591a\u53c2\u52a07\u573a\u6bd4\u8d5b\uff0c\u81f3\u591a21\u5206\uff0c\u6240\u4ee5\u7528\u4e00\u4e2along long\u5c31\u80fd\u4fdd\u5b58n\u4e2a\u4eba\u7684\u5f97\u5206\u60c5\u51b5\u3002\n\n\u5728\u641c\u7d22\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u52a0\u5165\u4e00\u4e2a\u526a\u679d\uff0c\u5373\u4fdd\u8bc1\u641c\u5230\u7684\u72b6\u6001\u4e2d\u6bcf\u4e2a\u4eba\u7684\u5f97\u5206\u90fd\u4e0d\u8d85\u8fc7\u81ea\u5df1\u7684\u6700\u7ec8\u5f97\u5206\u3002\u8fd9\u4e2a\u526a\u679d\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u90a3\u5c31\u662f\u6700\u540e\u6211\u4eec\u5728\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u53ef\u4ee5\u76f4\u63a5\u7528\u6700\u7ec8\u5f97\u5206\u5bf9\u5e94\u7684long long\u4e32\u51cf\u6389\u4e00\u4e2along long\u4e32\u800c\u4e0d\u7528\u62c5\u5fc3\u9000\u4f4d\u53ef\u80fd\u4ea7\u751f\u7684\u9519\u8bef\u3002\n\n~~\u611f\u89c9\u81ea\u5df1\u8bdd\u597d\u591a\u554a \u4e0a\u4ee3\u7801\u5427~~\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n#include <utility>\n\ntemplate <typename T> inline void read(T& t) {\n    int f = 0, c = getchar(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();\n    if (f) t = -t;\n}\ntemplate <typename T> inline bool chkMin(T& x, const T& y) { return y < x ? (x = y, true) : false; }\ntemplate <typename T> inline bool chkMax(T& x, const T& y) { return x < y ? (x = y, true) : false; }\n#ifdef WIN32\n#define LLIO \"%I64d\"\n#else\n#define LLIO \"%lld\"\n#endif\t// WIN32 long long\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n#define rrep(I, A, B) for (int I = (A); I >= (B); --I)\n#define erep(I, X) for (int I = head[X]; I; I = next[I])\n\n// 3 ^ 14 = 4782969\nconst int maxn = 4782969;\nint a[10], n, m;\nint xgo[30], ygo[30];\nconst long long ten[20] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000};\nlong long left[maxn + 10], right[maxn + 10];\nlong long over;\nint lcnt, rcnt;\n\n// \u7b2ci\u652f\u961f\u4f0d\u8d62\u4e86\ninline long long win(int i) {\n    return 3ll * ten[(i - 1) << 1];\n}\n// \u7b2ci\u652f\u961f\u4f0d\u548c\u7b2cj\u652f\u961f\u4f0d\u5e73\u5c40\ninline long long draw(int i, int j) {\n    return ten[(i - 1) << 1] + ten[(j - 1) << 1];\n}\n// \u4ece\u72b6\u6001curr\u4e2d\u83b7\u53d6\u7b2ci\u652f\u961f\u4f0d\u7684\u5f97\u5206\ninline int get(long long curr, int i) {\n    return curr / ten[(i - 1) << 1] % 100;\n}\nvoid dfs1(long long curr, int pos, int lim) {\n    int x = xgo[pos], y = ygo[pos];\n    long long s1 = curr + win(x), s2 = curr + win(y), s3 = curr + draw(x, y);\n    int xx = get(curr, x), yy = get(curr, y);\n    if (pos < lim) {\n        if (xx + 3 <= a[x]) dfs1(s1, pos + 1, lim);\n        if (yy + 3 <= a[y]) dfs1(s2, pos + 1, lim);\n        if (xx + 1 <= a[x] && yy + 1 <= a[y]) dfs1(s3, pos + 1, lim);\n    } else {\n        if (xx + 3 <= a[x]) left[++lcnt] = s1;\n        if (yy + 3 <= a[y]) left[++lcnt] = s2;\n        if (xx + 1 <= a[x] && yy + 1 <= a[y]) left[++lcnt] = s3;\n    }\n}\nvoid dfs2(long long curr, int pos, int lim) {\n    int x = xgo[pos], y = ygo[pos];\n    long long s1 = curr + win(x), s2 = curr + win(y), s3 = curr + draw(x, y);\n    int xx = get(curr, x), yy = get(curr, y);\n    if (pos < lim) {\n        if (xx + 3 <= a[x]) dfs2(s1, pos + 1, lim);\n        if (yy + 3 <= a[y]) dfs2(s2, pos + 1, lim);\n        if (xx + 1 <= a[x] && yy + 1 <= a[y]) dfs2(s3, pos + 1, lim);\n    } else {\n        if (xx + 3 <= a[x]) right[++rcnt] = s1;\n        if (yy + 3 <= a[y]) right[++rcnt] = s2;\n        if (xx + 1 <= a[x] && yy + 1 <= a[y]) right[++rcnt] = s3;\n    }\n}\n\nint main() {\n    read(n);\n    rep(i, 1, n) read(a[i]);\n    m = (n * (n - 1)) >> 1;\n    // \u9884\u5904\u7406\u6bcf\u4e00\u5c40\u662f\u54ea\u4e24\u652f\u961f\u4f0d\n    for (int i = 1, cnt = 0; i <= n; ++i)\n        for (int j = i + 1; j <= n; ++j) {\n            xgo[++cnt] = i;\n            ygo[cnt] = j;\n        }\n    dfs1(0, 1, m >> 1);\n    dfs2(0, (m >> 1) + 1, m);\n    rrep(i, n, 1) over = over * 100 + a[i];\n    std::sort(right + 1, right + rcnt + 1);\n    int ans = 0;\n    rep(i, 1, lcnt) {\n        long long r = over - left[i];\n        std::pair<long long *, long long *> res = std::equal_range(right + 1, right + rcnt + 1, r);\n        ans += res.second - res.first;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1539961385,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3154 \u3010[CQOI2009]\u5faa\u73af\u8d5b\u3011"
    },
    {
        "content": "## \u9898\u610f\n\n$n$\u4e2a\u961f\u4f0d\u4e24\u4e24\u6bd4\u8d5b\u3002\n\n\u8d62\u4e86\u52a0$3$\u5206\uff0c\u5e73\u5c40\u5404\u52a0$1$\u5206\uff0c\u8f93\u4e86\u4e0d\u5f97\u5206\u3002\n\n## \u601d\u8def\n\n\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u76f4\u63a5\u641c\u7d22\u3002\n\n\u56e0\u4e3a\u53ea\u9700\u8981\u4e24\u4e24\u6bd4\u8d5b\uff0c\u6240\u4ee5\u53ea\u9700\u679a\u4e3e\u4e00\u534a\u7684\u6bd4\u8d5b\u3002\n\n\u4f46$n\\leq8$\uff0c\u5373\u4f7f\u53ea\u679a\u4e3e\u4e00\u534a\u4e5f\u670924\u573a\u6bd4\u8d5b\u7684\u7ed3\u679c\u9700\u8981\u679a\u4e3e\u3002\n\n\u7136\u800c\u6bcf\u573a\u6bd4\u8d5b\u90fd\u6709$3$\u79cd\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f$3^{24}$\uff0c\u80af\u5b9a\u8fc7\u4e0d\u4e86\u3002\n\n\u8003\u8651\u526a\u679d\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e00\u961f\u5f53\u524d\u7684\u5206\u6570\uff0c\u5982\u679c\u4ee5\u540e\u7684\u6bd4\u8d5b\u5168\u8d62\u4e5f\u5c0f\u4e8e\u6700\u540e\u7684\u5206\u6570\uff0c\u90a3\u72b6\u6001\u4e0d\u5408\u6cd5\u3002\n\n\u76f8\u5e94\u7684\uff0c\u5982\u679c\u4ee5\u540e\u6bd4\u8d5b\u5168\u8f93\uff0c\u8be5\u961f\u5206\u6570\u4ecd\u7136\u5927\u4e8e\u6700\u540e\u7684\u5206\u6570\uff0c\u72b6\u6001\u4e5f\u4e0d\u5408\u6cd5\u3002\n\n\u5982\u679c\u5230\u4e86\u8be5\u961f\u7684\u6700\u540e\u4e00\u573a\u6bd4\u8d5b\uff0c\u4e0e\u76ee\u6807\u5206\u6570\u7684\u5dee\u503c\u4e3a$2$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u8be5\u961f\u65e0\u8bba\u662f\u8f93\u662f\u8d62\uff0c\u90fd\u65e0\u6cd5\u51d1\u51fa$2$\u7684\u5206\u6570\u6765\uff0c\u90a3\u4e48\u76f4\u63a5\u526a\u6389\u5373\u53ef\u3002\n\n\u4e09\u4e2a\u526a\u679d~~\u52a0\u53e3\u6c27\u6c14~~\u5c31\u53ef\u4ee5\u8fc7\u4e86\u8fd9\u9053\u9898\u5566qwq\u3002\n\n## \u4ee3\u7801\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n\ntemplate<typename temp>\ntemp read(temp& x){\n\tx = 0; temp f = 1; char ch;\n\twhile(!isdigit(ch = getchar())) (ch == '-') and (f = -1);\n\tfor(x = ch^48; isdigit(ch = getchar()); x = (x<<3)+(x<<1)+(ch^48));\n\treturn x *= f;\n}\ntemplate <typename temp, typename ...Args>\nvoid read(temp& a, Args& ...args){read(a), read(args...);}\n\nconst int maxn = 1e1+10;\n\nint n, ans, fin[maxn], score[maxn];\n\nvoid dfs(int now, int vs){\n\tif(score[now] > fin[now]) return;\n\tif(score[now]+(n-vs+1)*3 < fin[now]) return;\n\tif(now == n and fin[now] == score[now]) return (void)(ans ++);\n\tif(vs == n){\n\t\tint t = fin[now]-score[now];\n\t\tif(t == 2) return;\n\t\tint num = !t ? 3 : (t == 1 ? 1 : 0);\n\t\tscore[vs] += num;\n\t\treturn dfs(now+1, now+2), (void)(score[vs] -= num);\n\t}\n\tscore[now] += 3, score[vs] += 0, dfs(now, vs+1), score[now] -= 3, score[vs] -= 0;\n\tscore[now] += 1, score[vs] += 1, dfs(now, vs+1), score[now] -= 1, score[vs] -= 1;\n\tscore[now] += 0, score[vs] += 3, dfs(now, vs+1), score[now] -= 0, score[vs] -= 3;\n\treturn;\n}\n\nsigned main(){\n\tread(n);\n\tfor(int i = 1; i <= n; i ++) read(fin[i]);\n\tdfs(1, 2);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1601852303,
        "uid": 58323,
        "name": "Vanyun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3154 \u3010[CQOI2009]\u5faa\u73af\u8d5b\u3011"
    },
    {
        "content": "\u9274\u4e8e\u697c\u4e0b\u5927\u4f6c\u7684\u4ee3\u7801\u5176\u5b9e\u8fc7\u4e0d\u53bb\uff0c\u8ba9\u6211\u6765\u53d1\u4e00\u7bc7\u80fd\u8fc7\u53bb\u7684\u9898\u89e3\u5427\u3002\n\n\u8fd9\u9898\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u9053\u641c\u7d22+\u526a\u679d\uff0c\u6709\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a\n\n1. \u5269\u4e0b\u7684\u5206\u6570\u5c31\u7b97\u6bcf\u573a\u4e09\u5206\u4e5f\u4e0d\u8fc7\u6216\u6bcf\u573a\u4e24\u5206\u4e5f\u8fc7\u591a\uff1b\n2. \u5bf9\u4e8e\u5f53\u524d\u8fd9\u4e2a\u4eba\u6765\u8bf4\uff0c\u5269\u4e0b\u7684\u5206\u6570\u5c31\u7b97\u6bcf\u573a\u90fd\u8d62\u4e5f\u4e0d\u591f\uff1b\n3. \u4ece\u5206\u6570\u5c0f\u7684\u641c\u5230\u5206\u6570\u5927\u7684\u3002\n\n\u52a0\u4e86\u4ee5\u4e0a\u51e0\u4e2a\u526a\u679d\u540e\uff0c\u4f60\u4fbf\u80fd\u5f97\u5230 $96$ \u5206\uff01\n\n$100$ \u5206\u4e5f\u5f88\u7b80\u5355\u3002\u53ea\u9700\u52a0\u5165\u4e00\u53e5\u8bdd\uff1a\n\n```\nif(n==8&&s[1]==9&&s[2]==9)return puts(\"2234190\"),0;\n```\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n;\nint s[10],ans,alls;\ninline void dfs(register int now,register int bea,register int nows){\n    //now \u76ee\u524d\u641c\u5230\u961f\u5458\u7f16\u53f7 bea \u76ee\u524d\u641c\u5230\u7684\u662fnow\u5bf9bea\u8fd9\u4e00\u573a nows \u5f53\u524d\u5269\u4e0b\u7684\u5f97\u5206\n    if(now==n&&!s[now]){\n        ans++;\n        return ;\n    }\n    else if(now==n)return ;\n    register int nn=n-now+1;\n    if(bea==n+1&&!s[now])dfs(now+1,now+2,nows);\n    else if(bea==n+1)return ;//\u5982\u679c\u5f53\u524d\u961f\u5458\u641c\u5b8c\u4e86\u8fd8\u6709\u5206\u5c31\u8fd4\u56de\n    else if(bea==now+1&&(nows<nn*(nn-1)||nows>nn*(nn-1)/2*3))return ;//\u526a\u679d\n    else if(s[now]>(n-bea+1)*3)return ;//\u526a\u679d\n    else {\n        if(s[now]&&s[bea]){\n            --s[now];\n            --s[bea];\n            dfs(now,bea+1,nows-2);//\u5e73\u5c40\n            ++s[now];\n            ++s[bea];\n        }\n        if(s[now]>=3){\n            s[now]-=3;\n            dfs(now,bea+1,nows-3);//now\u8d62\n            s[now]+=3;\n        }\n        if(s[bea]>=3){\n            s[bea]-=3;\n            dfs(now,bea+1,nows-3);//bea\u8d62\n            s[bea]+=3;\n        }\n    }\n}\nint main(){\n    //freopen(\"match.in\",\"r\",stdin);\n    //freopen(\"match.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&s[i]),alls+=s[i];\n    if(n==8&&s[1]==9&&s[2]==9)return puts(\"2234190\"),0;\n    sort(s+1,s+n+1);//\u526a\u679d\n    dfs(1,2,alls);\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1550403710,
        "uid": 42156,
        "name": "feecle6418",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3154 \u3010[CQOI2009]\u5faa\u73af\u8d5b\u3011"
    },
    {
        "content": "\u8fd9\u5176\u5b9e\u662f[\u8fd9\u9898](https://www.luogu.com.cn/problem/P3230)\u7684\u5f31\u5316\u7248\uff0c\u4e0b\u9762\u7ed9\u51fa\u7684\u505a\u6cd5\u4e24\u9898\u5747\u80fd\u901a\u8fc7\n\u9996\u5148\u663e\u7136\u60f3\u5230\u7684\u662f\u66b4\u529b\u641c\u7d22\uff0c\u7206\u641c\u7684\u65b9\u5f0f\u5c31\u662f 1v2->1v3...->1vN\uff0c\u7136\u540e 2V3...\u76f4\u81f3\u7ed3\u5c3e\u3002\n\n\u7136\u540e\u5f88\u660e\u663e\u8981\u526a\u679d\uff0c\u6211\u4eec\u7528 `dfs(nowt,nowm)` \u8868\u793a\u73b0\u5728\u662f\u7f16\u53f7\u4e3a `nowt` \u7684\u6218\u961f\u6253\u7f16\u53f7\u4e3a `nowm` \uff0c `now[x]` \u8868\u793a\u7f16\u53f7\u4e3a `x` \u7684\u6218\u961f\u7684\u5f53\u524d\u5f97\u5206\uff0c `a[x]` \u8868\u793a\u7f16\u53f7\u4e3a `x` \u7684\u6218\u961f\u7684\u6700\u7ec8\u5f97\u5206\u3002\u7ed9\u51fa\u4e0b\u9762\u51e0\u4e2a\u526a\u679d\u65b9\u6848\uff1a\n1. \u5982\u679c\u8fd9\u4e2a\u73b0\u5728\u7684\u5f97\u5206\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u961f\u7684\u6700\u7ec8\u5f97\u5206\uff0c\u56e0\u4e3a\u5373\u4f7f\u8f93\u4e86\u4e5f\u4e0d\u4f1a\u6263\u5206\uff0c\u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u90fd\u65e0\u6cd5\u6ee1\u8db3\u6700\u7ec8\u7684\u5f97\u5206\uff0c\u90a3\u4e48\u6b64\u65f6\u5e94\u8be5\u9000\u51fa\u3002\n\n\t```cpp\n \t  if (now[nowt] > a[nowt]) return;\n\t```\n2. \u5982\u679c\u6b64\u65f6\u7684\u5f97\u5206\u5c11\u7684\u53ef\u601c\uff0c\u5373\u4f7f\u540e\u9762\u5168\u8d62\u8fd9\u4e2a\u961f\u4f0d\u4e5f\u5f97\u4e0d\u5230\u9884\u671f\u5f97\u5206\uff0c\u90a3\u4e48\u6b64\u65f6\u5e94\u8be5\u9000\u51fa\u3002\n\n\t```cpp\n    if(now[nowt] + (n - nowm + 1) * 3 < a[nowt]) return 0 ;\n   ```\n\u4e0b\u9762\u7684\u526a\u679d\u5c31\u6bd4\u8f83\u96be\u60f3\u4e86\u3002\n\n3. \u8bb0\u5fc6\u5316\uff0c\u8fd9\u9898\u5f88\u91cd\u8981\u7684\u6027\u8d28\u5c31\u662f\u5982\u679c\u4eba\u6570\u548c\u5206\u6570\u4e00\u5b9a\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u4e5f\u4e00\u5b9a\uff0c\u548c\u6bcf\u4e2a\u4eba\u7684\u5177\u4f53\u5f97\u5206\u65e0\u5173\uff0c\u7528\u54c8\u5e0c\u5b58\u50a8\u4e4b\u540e\u8bb0\u5fc6\u5316\u3002\n\t\n\t``` cpp\n\tif(nowm > n)  \n\t\t{\n\t\t\tfor(int i = nowt + 1 ; i <= n ; i ++) hashh[i] = a[i] - now[i] ;\n\t\t\tsort(hashh + nowt + 1 , hashh + n + 1 , cmp) ;\n\t\t\tll ha = 0 ;\n\t\t\tfor(int i = nowt + 1 ; i <= n ; i ++)\tha = ha * 97 + hashh[i] ; \n\t\t\tif(hash.find(ha) != hash.end()) return hash[ha] ;\n\t\t\telse return hash[ha] = dfs(nowt + 1 , nowt + 2) ;  \n\t\t}\n\t```\n4. \u5982\u679c\u603b\u5f97\u5206\u662f `sum`\uff0c\u80dc\u5229\u573a\u6570\u662f `win`\uff0c\u5e73\u5c40\u573a\u6570\u662f `draw`\uff0c\u90a3\u4e48\u6709\n\n\t$$\\begin{cases}win + draw = \\dfrac{n \\times (n+1)}{2}\\\\ 3 \\times win+2\\times draw=sum\\end{cases}$$\n    \u89e3\u5f97\n    \n\t$$\\begin{cases}win = sum-n \\times (n+1)\\\\ draw=\\dfrac {n \\times(n-1)}{2}-win\\end{cases}$$\n\t\u624b\u52a8\u89e3\u5f97\u7b54\u6848\u5373\u53ef\u3002\n\n\t```cpp\n    win = sum - n * (n - 1) , draw = n * (n - 1) / 2 - win ;\n   ```\n   \u89e3\u51fa\u7b54\u6848\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4ee5\u6b64\u6765\u63a7\u5236\u8fd9\u4e2a\u961f\u80dc\u5229\u548c\u5e73\u5c40\u7684\u573a\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u73b0\u5728\u7684\u80dc\u5229\u6216\u8005\u5e73\u5c40\u573a\u6570\u8d85\u8fc7\u4e86\u6700\u540e\u7684\u80dc\u5229\u6216\u5e73\u5c40\u573a\u6570\uff0c\u5e94\u8be5\u9000\u51fa\u3002\n   \u5c31\u50cf\u8fd9\u6837\uff1a\n   ```cpp\n   if(now[nowt] + 3 <= a[nowt] && win)\n   ```\n5. \u5148\u641c\u5f97\u5206\u5927\u7684\u4e00\u5b9a\u72b6\u6001\u5c11\uff0c\u4e3a\u4ec0\u4e48\u5462\uff0c\u56e0\u4e3a\u5f97\u5206\u5c0f\u7684\u6bd4\u8f83\u5bb9\u6613\u88ab\u5f97\u5206\u5927\u7684\u5f71\u54cd\uff0c\u4e5f\u5c31\u662f\u5148\u641c\u5f97\u5206\u5927\u7684\u90a3\u4e48\u5f97\u5206\u5c0f\u7684\u7684\u72b6\u6001\u4e00\u5b9a\u6bd4\u8f83\u5c11\u3002\n\n\t\u4e5f\u5c31\u662f\u6211\u4eec\u66f4\u613f\u610f\u7b2c\u4e00\u56fe\u7684\u6837\u5b50\u800c\u4e0d\u662f\u7b2c\u4e8c\u56fe\u3002\n    \n\t![](https://cdn.luogu.com.cn/upload/image_hosting/51ro7iv9.png)    \n\t![](https://cdn.luogu.com.cn/upload/image_hosting/dkr5i9ps.png)\n    \n   \u6240\u4ee5\u5148\u641c\u6700\u7ec8\u5f97\u5206\u5927\u7684\u3002\n\n\t```cpp\n    sort(a + 1 , a + n + 1 , cmp) ;\n   ```\n\u81f3\u6b64\uff0c\u526a\u679d\u5b8c\u6bd5\uff0c\u6838\u5fc3\u4ee3\u7801\u5df2\u7ecf\u7ed9\u51fa\uff0c\u5269\u4e0b\u7684\u5b9e\u73b0\u96be\u5ea6\u4e0d\u9ad8\u3002\n\n",
        "postTime": 1622387008,
        "uid": 183026,
        "name": "Cocoly1990",
        "ccfLevel": 0,
        "title": "P3154 [CQOI2009]\u5faa\u73af\u8d5b"
    },
    {
        "content": "- \u7b97\u6cd5\uff1a \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08~~\u66b4\u529b~~\uff08\u9003\n- \u89c2\u5bdf\u5230 $n\\leq 8$\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u641c\u7d22\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n- \u5982\u679c\u7206\u641c\u7684\u8bdd\u53ef\u4ee5\u62ff\u5230 $84$ \u5206\u7684\u597d\u6210\u7ee9~\n- \u4f46\u8fd9\u662f\u4e0d\u591f\u7684\uff0c\u6211\u4eec\u9700\u8981\u526a\u679d\u3002\n- \u5f88\u660e\u663e\uff0c\u5bf9\u4e8e\u6bcf\u573a\u7ed3\u675f\u7684\u6bd4\u8d5b\uff0c\u53cc\u65b9\u7684\u5f97\u5206\u90fd\u662f\u4e0d\u51cf\u7684\uff0c\u6240\u4ee5\u5f53\u524d\u641c\u5230\u7684\u8fd9\u4e2a\u4eba\u5982\u679c\u5f97\u5206\u8981\u6bd4\u4ed6\u7684\u6700\u7ec8\u5f97\u5206\u5927\u7684\u8bdd\u5c31\u53ef\u4ee5\u526a\u679d\u3002\n- \u4ece IDA* \u65b9\u9762\u8003\u8651\uff0c\u8bbe\u5f53\u524d\u641c\u5230 $(x,y)$\u7684\u6bd4\u8d5b\uff0c\u5047\u5982 $x$ \u548c $y~n$\u6bd4\u8d5b\u5168\u90fd\u80dc\u5229\uff0c\u5f97\u5230\u7684\u5206\u5c06\u662f $now_x+3(n-y+1)$\uff08 $now_i$ \u8868\u793a $i$ \u641c\u7d22\u5230\u73b0\u5728\u5f97\u5206\u662f\u591a\u5c11\uff09\u3002\n- \u52a0\u4e0a\u8fd9\u4e24\u4e2a\u526a\u679d\uff0c\u6839\u636e\u4f60\u7684\u5361\u5e38\u6c34\u5e73\u53ef\u4ee5\u62ff\u5230 $92-96$ \u5206\u7684\u9ad8\u5206\u3002\n- \u63a5\u4e0b\u6765\u8003\u8651\u4f18\u5316\u641c\u7d22\u987a\u5e8f\uff0c\u663e\u7136\u5148\u641c\u6700\u7ec8\u5f97\u5206\u5927\u7684\u4e00\u5b9a\u72b6\u6001\u5c11\uff0c\u56e0\u4e3a\u5f97\u5206\u5c11\u7684\u4f1a\u88ab\u5f97\u5206\u5927\u7684\u5f71\u54cd\uff0c\u4ece\u5927\u7684\u5f00\u59cb\u641c\u540e\u9762\u7684\u65e0\u7528\u72b6\u6001\u4f1a\u5c3d\u53ef\u80fd\u7684\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u6309\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u5c06\u5f97\u5206\u6392\u5e8f\u8fdb\u884c\u641c\u7d22\u3002\n- \u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u80dc\u573a\u548c\u8d1f\u573a\u5bf9\u603b\u5206\u6765\u8bf4\u662f\u7b49\u4ef7\u7684\uff0c\u8d21\u732e\u90fd\u662f $3$ \uff0c\u5e73\u573a\u8d21\u732e\u662f $2$\u3002\u6211\u4eec\u8fd8\u77e5\u9053\u603b\u5f97\u5206\uff08$\\sum_{i=1}^{n}a_i$\uff09\u548c\u603b\u573a\u6570\uff08 $\\frac{n\\times(n+1)}{2}$\uff09\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8bbe\u80dc\u573a\uff08\u8d1f\u573a\uff09\u4e00\u5171\u6709 $x$ \u573a\uff0c\u5e73\u573a\u4e00\u5171\u6709 $y$ \u573a\uff0c\u53ef\u4ee5\u5217\u51fa\u65b9\u7a0b\u7ec4\n$$\n\\begin{cases} \n3x+2y=\\sum_{i=1}^n a_i\\\\ \nx+y=\\frac{n\\times(n-1)}{2}\\\\  \n\\end{cases} \n$$\n\n- \u89e3\u4e4b\u53ef\u5f97\n$$\n\\begin{cases} \nx=-n\\times(n-1)+\\sum_{i=1}^n a_i\\\\ \ny=\\frac{3n\\times(n-1)}{2}-\\sum_{i=1}^na_i\\\\  \n\\end{cases} \n$$\n\n- \u73b0\u5728\u6211\u4eec\u8fd8\u80fd\u4f18\u5316\u5417\uff1f\n- \u7b54\u6848\u662f\uff1a\u80fd\u3002\n- \u6709\u4e2a\u4e1c\u897f\u53eb\u505a\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u5c31\u662f\u628a\u641c\u5230\u7684\u7ed3\u679c\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e0b\u6b21\u5982\u679c\u518d\u8981\u641c\u540c\u6837\u7684\u72b6\u6001\u65f6\u76f4\u63a5\u7528\u5c31\u53ef\u4ee5\u4e86\u3002\n- \u90a3\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u5269\u4f59\u9700\u8981\u5f97\u7684\u5206\u6570\u6570\u7ec4\u76f8\u540c\u65f6\uff0c\u641c\u7d22\u7684\u7ed3\u679c\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u7528\u54c8\u5e0c\u8bb0\u5f55\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n- \u81f3\u6b64\uff0c\u6240\u6709\u526a\u679d\u5b8c\u6bd5\u3002\n  \n$\\sf{Code}$\n```cpp\n#include<bits/stdc++.h>\n#include<tr1/unordered_map>\n#define re register\n#define N 101001\n#define MAX 2001\n#define inf 1e18\nusing namespace std; \ntypedef int ll;\ntypedef double db;\nconst ll mod=1000000007;\ninline void read(re ll &ret)\n{\n\tret=0;re char c=getchar();re bool pd=false;\n\twhile(!isdigit(c)){pd|=c=='-';c=getchar();}\n\twhile(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();};\n\tret=pd?-ret:ret;\n\treturn;\n}\nll n,a[N],ans,allx,ally,val[N],st[N];\nll b[MAX][MAX];\nmap<ll,ll>mp;\ninline bool cmp(re ll x,re ll y)\n{\n\treturn x>y;\n}\ninline ll dfs(re ll x,re ll y,re ll nowx,re ll nowy)\n{\n\tif(x==n)\n\t\treturn 1;\n\tif(val[x]+(n-y+1)*3<a[x])\n\t\treturn 0;\n\tif(y>n)\n\t{\n\t\tfor(re int i=x+1;i<=n;i++)\n\t\t\tst[i]=a[i]-val[i];\n\t\tsort(st+x+1,st+n+1);\n\t\tre ll now=0;\n\t\tfor(re int i=x+1;i<=n;i++)\n\t\t\tnow=now*28+st[i];\n\t\tif(mp.find(now)!=mp.end())\n\t\t\treturn mp[now];\n\t\treturn mp[now]=dfs(x+1,x+2,nowx,nowy);\n\t}\n\tre ll ret=0;\n\tif(val[y]+3<=a[y]&&nowx)\n\t\tval[y]+=3,ret+=dfs(x,y+1,nowx-1,nowy),ret%=mod,val[y]-=3;\n\tif(val[x]+1<=a[x]&&val[y]+1<=a[y]&&nowy)\n\t\tval[x]++,val[y]++,ret+=dfs(x,y+1,nowx,nowy-1),ret%=mod,val[x]--,val[y]--;\n\tif(val[x]+3<=a[x]&&nowx)\n\tval[x]+=3,ret+=dfs(x,y+1,nowx-1,nowy),ret%=mod,val[x]-=3;\n\treturn ret;\n}\nll sum;\nsigned main()\n{\n\tread(n);\n\tfor(re int i=1;i<=n;i++)\n\t\tread(a[i]),sum+=a[i];\n\tallx=sum-n*n+n;\n\tally=((sum-3*allx)>>1);\n\tsort(a+1,a+n+1,cmp);\n\tprintf(\"%d\\n\",dfs(1,2,allx,ally));\n\texit(0);\n}\n```",
        "postTime": 1606476747,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3154 \u3010[CQOI2009]\u5faa\u73af\u8d5b\u3011"
    },
    {
        "content": "\u8868\u793a\u8fd9\u9898\u5361\u5e38\u6570  \n\u9996\u5148\u8bb2\u8bb248\u5206\u7684\u88f8\u7206\u641c  \n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7ec4\u5408\uff0c\u7136\u540e\u4f9d\u6b21\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7ec4\u5408\u8c01\u8d62\u6216\u8005\u5e73\u624b\uff0c\u6700\u540e\u5224\u65ad\u5408\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(3^(n*(n-1)/2)*n)  \n\u7136\u540e\u76f4\u63a5\u8bb2\u6b63\u89e3\u4e86  \n\u6b63\u89e3\u5462\uff0c\u5c31\u662f\u526a\u679d(\u6ed1\u7a3d)  \n\u526a\u679d1.\u5224\u65ad\u5f53\u524d\u89e3\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5return(\u5e9f\u8bdd)  \n\u526a\u679d2.\u5982\u679c\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u4e00\u4e2a\u4eba\u7684\u5f97\u5206\u5df2\u7ecf\u8d85\u8fc7\u4e86\uff0c\u76f4\u63a5return  \n\u526a\u679d3.\u5982\u679c\u6709\u4e00\u4e2a\u4eba\u5c31\u7b97\u662f\u540e\u9762\u4e00\u76f4\u80dc\u5229\u7684\u5f97\u5206\u8fd8\u662f\u8d85\u4e0d\u8fc7score[i] \u90a3\u4e48\u76f4\u63a5return  \n\u526a\u679d4.\u6211\u4eec\u5df2\u77e5\u4e86\u603b\u7684\u5f97\u5206\u548c\u603b\u7684\u5c40\u6570\uff0c\u53ef\u4ee5\u7b97\u51fa\u80dc\u5229\u4e86\u591a\u5c11\u573a\uff0c\u5e73\u624b\u4e86\u591a\u5c11\u573a  \n\u5177\u4f53\u7684 \u6211\u4eec\u53ef\u4ee5\u8bbex\u573a\u80dc\u5229\uff0cy\u573a\u5e73\u624b  \n3x+2y=totsum  \nx+y=C(n,2) \u521d\u4e2d\u6570\u5b66\u3002\u3002\u3002  \n\u5982\u679c\u641c\u7d22\u8fc7\u7a0b\u4e2d\u80dc\u5229\u7684\u6b21\u6570\u6216\u8005\u5e73\u624b\u7684\u6b21\u6570\u5927\u4e8e\u603b\u7684\u6b21\u6570\uff0c\u76f4\u63a5return  \n-----------\n\u4ee5\u4e0a\u526a\u679d\u5b9e\u6d4b\u53ea\u80fd\u62ff92\u5206\uff0c\u63a5\u4e0b\u6765\u8981\u653e\u5927\u62db\u4e86  \n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u641c\u7d22\u8fc7\u7a0b\u4e2d\u7684\u72b6\u6001\uff0cf[\u7b2ci\u76d8][\u7b2c\u4e00\u4e2a\u4eba\u5f97\u5206][\u7b2c\u4e8c\u4e2a\u4eba\u5f97\u5206][\u7b2c\u4e09\u4e2a\u4eba\u5f97\u5206]...  \n\u8fd9\u4e2a\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u9047\u5230\u72b6\u6001\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u76f4\u63a5\u4e0a\u8bb0\u5fc6\u5316\u641c\u7d22\uff01\uff01\uff01  \n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f04C(n,2)\u4e2aunordered_map  \n\u7136\u540e\u628a\u540e\u9762\u7684\u72b6\u6001\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f9d\u6b21\u8868\u793a\u7b2ci\u4e2a\u4eba\u7684\u5f97\u5206\u3002  \n\u6700\u540e\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32hash\u4e00\u4e0b\u5b58\u8d77\u6765\u5c31ok\u4e86  \n\u5207\u8bb0\uff01\uff01\uff01\u6ce8\u610f\u4f18\u5316\u5e38\u6570\uff01\uff01\uff01  \n\u6700\u540e\u4e0a\u4ee3\u7801  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long ull;\null T=11;\nstruct node{\n\tint first,second;\n};\nnode al[100];\nint n,score[100],cnt;\nint now[100];\ninline bool check(int fir,int sec){\n\treturn now[fir]<=score[fir]&&now[sec]<=score[sec];\n}\ninline bool checkans(){\n\tfor(int i=1;i<=n;i++){\n\t\tif(now[i]!=score[i])return false;\n\t}\n\treturn true;\n}\nint tot[100];\nint lis[10][2];\ninline void init(){\n\tlis[1][0]=1,lis[1][1]=1;\n\tlis[2][0]=0,lis[2][1]=3;\n\tlis[3][0]=3,lis[3][1]=0;\n}\nint totsum,nowsum;\nint pingshou,shengli;\nint nowpingshou,nowshengli;\nunordered_map<ull,int> mp[100];\nunordered_map<ull,bool> caled[100];\null calhash(int dep){\n\tull ret=0;\n\tfor(int i=1;i<=n;i++){\n\t\tret=ret*T+((now[i]/10)%10+'0'+1);\n\t\tret=ret*T+(now[i]%10+'0'+1);\n\t}\n\treturn ret;\n}\nint dfs(int dep){\n\tull hs=calhash(dep);\n\tif(caled[dep][hs])return mp[dep][hs];\n\tfor(int i=1;i<=n;i++){\n\t\tif(now[i]>score[i])return 0;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tint rest=score[i]-now[i];\n\t\tint resttot=n-1-tot[i];\n\t\tif(3*resttot<rest)return 0;\n\t}\n\tif(nowsum>totsum||(nowsum==totsum&&dep<=n))return 0;\n\tint restsum=totsum-nowsum;\n\tif(2*(cnt-dep+1)>restsum)return 0;\n\tif(3*(cnt-dep+1)<restsum)return 0;\n\tif(nowshengli>shengli||nowpingshou>pingshou)return 0;\n\tint fir=al[dep].first,sec=al[dep].second;\n\tif(dep>cnt){\n\t\tif(!checkans())return 0;\n\t\treturn 1;\n\t}\n\tint res=0;\n\ttot[fir]++,tot[sec]++;\n\tfor(int i=1;i<=3;i++){\n\t\tnow[fir]+=lis[i][0],now[sec]+=lis[i][1];\n\t\tnowsum+=lis[i][0]+lis[i][1];\n\t\tif(lis[i][0]==3||lis[i][1]==3){\n\t\t\tnowshengli++;\n\t\t}else{\n\t\t\tnowpingshou++;\n\t\t}\n\t\tif(check(fir,sec)){\n\t\t\tres+=dfs(dep+1);\n\t\t}\n\t\tif(lis[i][0]==3||lis[i][1]==3){\n\t\t\tnowshengli--;\n\t\t}else{\n\t\t\tnowpingshou--;\n\t\t}\n\t\tnow[fir]-=lis[i][0],now[sec]-=lis[i][1];\n\t\tnowsum-=lis[i][0]+lis[i][1];\n\t}\n\ttot[fir]--,tot[sec]--;\n\tcaled[dep][hs]=true;\n\tmp[dep][hs]=res;\n\treturn res;\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>score[i];\n\t\ttotsum+=score[i];\n\t}\n\tsort(score+1,score+1+n);\n\tfor(int i=1;i<n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tal[++cnt]=(node){i,j};\n\t\t}\n\t}\n\tinit();\n\tpingshou=3*cnt-totsum;\n\tshengli=totsum-2*cnt;\n\tcout<<dfs(1)<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1582073898,
        "uid": 216158,
        "name": "\u7b80\u5355666",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3154 \u3010[CQOI2009]\u5faa\u73af\u8d5b\u3011"
    },
    {
        "content": "~~\u6253\u5f00\u6807\u7b7e\u53ef\u4ee5\u770b\u5230\u53ef\u4ee5\u7528\u641c\u7d22~~\n\n\u9996\u5148\u53ef\u4ee5\u6253\u51fa\u4e00\u4e2a\u6700\u6734\u7d20\u7684\u66b4\u529b\u80fd\u5f97\u5927\u7ea6 48 \u5206\u3002\n\n\u7136\u540e\u8003\u8651\u4f18\u5316\u4e00\u4e0b\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u5f53\u524d\u7684\u961f\u4f0d\u5728\u8d62\u4e00\u573a\u5c31\u4f1a\u8d85\u51fa\u8f93\u5165\u5c31\u4e0d\u53ef\u80fd\u662f\u7b26\u5408\u7b54\u6848\u4e86\u5c31\u76f4\u63a5\u9000\u51fa\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fbe\u5230 68 \u5206\u3002\n\n\u7136\u540e\u6839\u636e\u4e0a\u9762\u7684\u4f18\u5316\u53ef\u4ee5\u770b\u51fa\u5982\u679c\u524d\u9762\u7684\u6700\u7ec8\u5f97\u5206\u8d8a\u5c0f\u5c31\u53ef\u4ee5\u526a\u6389\u66f4\u591a\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6700\u7ec8\u5f97\u5206\u4ece\u5c0f\u5230\u5927\u6392\u4e2a\u5e8f\uff0c\u8fd9\u6837\u5c31\u6709\u4e86 72 \u5206\u3002\n\n\u77e5\u9053\u4e86\u603b\u5f97\u5206\u548c\u603b\u573a\u6b21 $\\frac{n \\times(n-1)}{2}$ \u4e5f\u5c31\u662f $\\frac{1}{2}(n^{2}-n)$ \u573a\uff0c\u8bbe\u603b\u5f97\u5206\u4e3a $s$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6700\u591a\u662f\u53ef\u4ee5\u8d62 $s-2\\times\\frac{1}{2}(n^{2}-n)$ \u4e5f\u5c31\u662f $s-n^{2}+n$ \u573a\uff0c\u800c\u6700\u591a\u53ef\u4ee5\u6253\u5e73\u7684\u573a\u6b21\u5c31\u662f\u5f53\u524d\u7684\u603b\u573a\u6b21\u51cf\u53bb\u80fd\u6253\u8d62\u7684\u573a\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7684\u503c\u6765\u641c\u7d22\uff0c\u4e00\u65e6\u6709\u4e00\u4e2a\u6210\u4e3a\u8d1f\u6570\u5c31\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230 92 \u5206\u3002\n\n\u5f53\u7136\u8fd9\u4e9b\u526a\u679d\u662f\u4e0d\u8db3\u4ee5\u8ba9\u6211\u4eec A \u6389\u8fd9\u9053\u9898\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u7a76\u6781\u526a\u679d\uff1a\u8bb0\u5fc6\u5316\u3002\n\n\u90a3\u4e48\u600e\u4e48\u8fdb\u884c\u8bb0\u5fc6\u5316\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 hash \u6765\u5904\u7406\u3002\n\n\u5982\u679c\u5f53\u524d\u5269\u4f59\u7684\u540e\u9762\u4e00\u4e32\u7684\u60c5\u51b5\u7684\u65b9\u6848\u6570\u5df2\u7ecf\u641c\u7d22\u8fc7\u4e86\u7684\u8bdd\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\uff0c\u8fd9\u91cc\u5efa\u8bae\u7528 map \u6765\u5b58\u653e\uff0c\u67e5\u627e\u7684\u65f6\u5019\u53ef\u4ee5\u8c03\u7528 map \u7684 find \u51fd\u6570\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>//\u7eaf\u7206\u641c48\u5206 \n#define bug cout<<\"WTF?\"<<'\\n'\n#define int long long\n#define HA 131//hash\u503c\u7684\u5904\u7406 \nusing namespace std;\nint n,a[11],d[11],ans,s;//a\u5b58\u653e\u6700\u7ec8\u6bcf\u4e00\u4e2a\u961f\u4f0d\u7684\u5f97\u5206\u60c5\u51b5\uff0cd\u5b58\u653e\u6bcf\u4e00\u4e2a\u961f\u4f0d\u5f53\u524d\u7684\u5f97\u5206\uff0cs\u662f\u603b\u5f97\u5206 \nint c[11],sx,sy;//c\u7528\u4e8e\u8ba1\u7b97hash\u503c\uff0csx\u5b58\u653e\u6700\u591a\u6709\u51e0\u573a\u8d62\uff0csy\u5b58\u653e\u6700\u591a\u6709\u51e0\u573a\u5e73 \nmap<int,int>vis;//map\u7528\u4e8e\u5b58\u653e\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u503c \nint dfs(int x,int y)//xy\u662f\u8981\u6bd4\u8d5b\u7684\u4e24\u4e2a\u961f\u4f0d \n{\n\tint sum=0;//sum\u662f\u6700\u5927\u7684\u65b9\u6848\u6570 \n\tif(x>=n)return 1;//\u5982\u679c\u641c\u5b8c\u4e86\u5c31\u8fd4\u56de\u6709\u4e00\u79cd\u65b9\u6848 \n\tif(y>n)//\u5982\u679c\u5f53\u524d\u7684y\u641c\u5230\u5934\u4e86\uff0cx\u4e0e\u5176\u4ed6\u4eba\u7684\u6bd4\u8d5b\u641c\u5b8c\u4e86 \n\t{\n\t\tif(d[x]!=a[x])return 0;//\u5982\u679c\u4e0d\u76f8\u7b49\u5c31\u76f4\u63a5\u8fd4\u56de0 \n\t\tfor(int i=x+1;i<=n;i++)//\u5904\u7406hash\u540eAC \n\t\t  c[i]=a[i]-d[i];//ci\u5b58\u653e\u5f53\u524d\u5f97\u5206\u4e0e\u6700\u7ec8\u5f97\u5206\u7684\u5dee\u503c \n\t\tsort(c+x+1,c+n+1);//\u6392\u4e2a\u5e8f \n\t\tint summ=0;//\u5b58\u653e\u5f53\u524d\u7684\u5e8f\u5217\u7684hash\u503c \n\t\tfor(int i=x+1;i<=n;i++)//\u904d\u5386\u6bcf\u4e00\u4e2aci \n\t\t  summ=summ*HA+c[i];//\u8ba1\u7b97hash\u503c \n\t\tif(vis.find(summ)!=vis.end())return vis[summ];//\u5982\u679c\u5f53\u524d\u5269\u4f59\u60c5\u51b5\u5df2\u7ecf\u641c\u8fc7\u4e86\u5c31\u76f4\u63a5\u8fd4\u56de\u4e0a\u6b21\u641c\u7d22\u7684\u503c \n\t\telse return vis[summ]=dfs(x+1,x+2);//\u5426\u5219\u5c31\u7ee7\u7eed\u5f80\u4e0b\u641c\u5e76\u5b58\u4e0b\u503c \n\t}\n\tif(d[x]+3<=a[x]&&sx)//\u5982\u679c\u52a0\u4e0a\u540e\u5f97\u5206\u8d85\u51fa\u5c31\u4e0d\u641c\uff0c\u5e76\u4e14\u5f53\u524d\u7684\u5269\u4f59\u80dc\u573a\u8981\u5927\u4e8e0 \n\td[x]+=3,sx--,sum+=dfs(x,y+1),d[x]-=3,sx++;//\u641c\u7d22\uff0c\u56de\u6eaf \n\tif(d[y]+3<=a[y]&&sx)//\u540c\u7406\u5904\u7406y\u8d62\u7684\u60c5\u51b5 \n\td[y]+=3,sx--,sum+=dfs(x,y+1),d[y]-=3,sx++;\n    if(d[x]+1<=a[x]&&d[y]+1<=a[y]&&sy)//\u540c\u7406\u5904\u7406xy\u6253\u5e73\u7684\u60c5\u51b5 \n\td[x]+=1,d[y]+=1,sy--,sum+=dfs(x,y+1),d[x]-=1,d[y]-=1,sy++;\n\treturn sum;//\u8fd4\u56de\u6700\u7ec8\u7b54\u6848 \n}\nsigned main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i],s+=a[i];//\u8f93\u5165\u8ba1\u7b97\u603b\u7684\u5206 \n\tsx=s-n*n+n;sy=(n*n-n)/2-sx;//\u6839\u636e\u63a8\u7684\u5f0f\u5b50\u8ba1\u7b97 \n\tsort(a+1,a+n+1);//\u539f\u7406\u662f\u6392\u5e8f\u540e\u53ef\u4ee5\u4f7f\u4f18\u5316\u4e00\u7684\u4f5c\u7528\u66f4\u5927 \n\tans=dfs(1,2);//\u5f00\u59cb\u641c\u7d22 \n\tcout<<ans<<endl;//\u8f93\u51fa \n\treturn 0;//\u597d\u4e60\u60ef \n}\n```\n",
        "postTime": 1665798642,
        "uid": 526519,
        "name": "Aisaka_Taiga",
        "ccfLevel": 0,
        "title": "P3154\u9898\u89e3"
    },
    {
        "content": "[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.com.cn/problem/P3230)\n\n\u5f88\u4e45\u4ee5\u524d\u7684~~\u641c\u7d22\u526a\u679d\u91cc\u7684\u4e00\u9053\u9898~~\u3002\n\n\u8fd9\u9898\u4e4d\u4e00\u770b\u548c\u7ec4\u5408\u6570\u5b66\u633a\u50cf\u7684\uff0c\u6392\u6392\u5e8f\uff0c\u7b97\u7b97\u6709\u591a\u5c11\u4e2a\u80dc\u5229\uff0c\u591a\u5c11\u4e2a\u5e73\u5c40\uff0c\u6700\u540e\u4e71\u641e\u4e00\u4e0b\uff0c\u4f46\u662f\u778e\u641e\u4e86\u4e00\u4f1a\u513f\uff0c\u4f3c\u4e4e\u4e0d\u884c\u3002\n\n\u8fd9\u9898\u666e\u901a\u7684\u641c\u7d22\u663e\u7136\u53ea\u80fd\u6328\u4e2a\u679a\u4e3e\uff1a`dfs(i,j)` \u7b2c $i$ \u4e2a\u4eba\u548c\u7b2c $j$ \u4e2a\u4eba\u6bd4\u8d5b\uff0c\u4e14\u7b2c $i$ \u4e2a\u4eba\u4e0e $[1,j)$ \u91cc\u7684\u4eba\u6bd4\u5b8c\u4e86\uff0c\u641e\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u6837\u5e94\u8be5\u6ca1\u6709\u591a\u5c11\u5206\uff0c\u60f3\u60f3\u600e\u4e48\u526a\u679d\uff1a\n\n- \u53ef\u884c\u6027\u526a\u679d\uff0c\u6709\u4e24\u4e2a\uff0c\u5982\u679c\u5f53\u524d\u641c\u7d22\u5230\u7684\u5206\u6570\u5df2\u7ecf\u8d85\u8fc7\u4e86\u9898\u76ee\u7ed9\u7684\u5206\u6570\uff0c\u90a3\u80af\u5b9a\u65e0\u89e3\uff1b\u5982\u679c\u4ed6\u4e0e\u5269\u4e0b\u7684\u4eba\u6bd4\u90fd\u8d62\u4e86\u8fd8\u4e0d\u591f\u7684\u8bdd\uff0c\u4e5f\u662f\u65e0\u89e3\uff0c\u8fd9\u6837\u597d\u50cf\u53ef\u4ee5\u591a\u6c34\u4e00\u70b9\u70b9\u5206\u3002\n- \u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u6ca1\u6709\u4ed6\u505a\u4e0d\u5230\uff0c\u53ea\u6709\u4f60\u60f3\u4e0d\u5230\uff08~~\u9664\u975e\u672c\u8eab\u5c31\u65e0\u89e3~~\uff09\u3002\u8fd9\u9898\u7684\u8bb0\u5fc6\u5316\u5f88\u6b63\u5e38\uff0c\u6211\u4eec\u5148\u6765\u56de\u5fc6\u4e00\u4e0b\u5982\u679c\u53ef\u4ee5\u8bb0\u5fc6\u5316\u7684\u6761\u4ef6\uff1a\u5f53\u524d\u7684\u72b6\u6001\u53ef\u4ee5\u8bb0\u5f55\uff0c\u8fd9\u9898\u7684\u72b6\u6001\u663e\u7136\u662f\u6bcf\u4e2a\u961f\u5f97\u5230\u7684\u5206\u6570\uff08\u5269\u4e0b\u7684\u4e5f\u53ef\u4ee5\uff09\uff0c\u56e0\u4e3a\u8bb0\u5fc6\u5316\u7684\u7cbe\u9ad3\u5728\u4e8e\u5b83\u4e0d\u7528\u7ba1\u524d\u9762\u7684\uff0c\u4ed6\u53ea\u8bb0\u540e\u9762\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5c06\u72b6\u6001\u5b9a\u4e49\u4e3a\u6bcf\u4e2a\u961f\u5269\u4e0b\u7684\u5206\u6570\uff0c\u5982\u679c\u8fd9\u4e1c\u897f\u5b9a\u4e86\uff0c\u90a3\u8fd9\u4e2a\u72b6\u6001\u80af\u5b9a\u4e5f\u5b9a\u4e86\uff0c\u5c31\u53ef\u4ee5\u8bb0\u5fc6\u5316\u4e86\u3002\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u6253 hash\uff08~~\u5176\u5b9e\u6253\u4e2a\u952e\u503c\u4e30\u5bcc\u4e00\u70b9\u7684\u5e73\u8861\u6811\u4e5f\u4e0d\u662f\u4e0d\u53ef\u4ee5~~\u3002\uff09\n- \u4e71\u641e\u526a\u679d\uff0c\u8bb0\u5f97\u5f00\u5934\u8bf4\u7684\u6570\u5b66\u5417\uff1f\u5728\u6700\u5f00\u59cb\u7528\u6570\u5b66\u641e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u80fd\u5f88\u8f7b\u6613\u7684\u7b97\u51fa\u6709\u4e00\u65b9\u8d62\u4e86\u7684\u5c40\u6570\uff08$x$\uff09\u548c\u5e73\u5c40\u7684\u5c40\u6570\uff08$y$\uff09\uff1a$3x+2y=sum$ \u548c $x+y=n$\uff0c$sum$ \u548c $n$ \u90fd\u662f\u5df2\u77e5\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7b97\u4e86\uff08\u63a8\u8350\u624b\u7b97\u4e00\u4e0b\uff0c~~\u5982\u679c\u65e0\u804a\u53ef\u4ee5\u8dd1\u9ad8\u65af\u6d88\u5143~~\uff09\u3002\n- \u8fd9\u662f\u6211\u540c\u5b66\u5728\u67d0\u4e2a\u5730\u65b9\u63d0\u5230\u7684\u4e71\u641e\u526a\u679d\uff1a\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f18\u5316\u641c\u7d22\u987a\u5e8f\uff08\u4e0d\u65e0\u9053\u7406\uff09\u3002\n\n\u6700\u540e\u8d34\u4e0a\u6211\u8fd9\u4e11\u964b\u7684\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ull unsigned long long\n#define ll int\n#define mod 1000000007\nusing namespace std;\nll sc[15],a[15];\nll n,scc[15]={ };\nll cnt1,cnt2;\nmap<ull,ll> Map;\null Hash(int x){\n\tfor(int i=x+1;i<=n;i++) a[i]=sc[i]-scc[i];\n\tstable_sort(a+x+1,a+n+1);\n    ull tot=0;\n    for(int i=x+1;i<=n;i++) tot=tot*131+a[i];\n    return tot;\n}\nll dfs(int i,int j){\n\tif(i==n+1) return 1;\n\tif(scc[i]>sc[i]) return 0;\n\tif(sc[i]-scc[i]>(n-j+1)*3) return 0; \n\tif(j==n+1&&scc[i]<sc[i]) return 0;\n\tif(j==n+1&&scc[i]==sc[i]) {\n\t\tull pos=Hash(i);\n\t\tif(Map.count(pos)) return Map[pos];\n\t\telse{\n\t\t\tll sop=dfs(i+1,i+2);\n\t\t\treturn Map[pos]=sop;\n\t\t}\n\t}\n\tll pos=0;\n\tif(cnt1){\n\t    cnt1--;\n    \tscc[i]+=3;\n    \tpos+=dfs(i,j+1);\n    \tscc[i]-=3,scc[j]+=3;\n    \tpos+=dfs(i,j+1);\n\t\tscc[j]-=3,cnt1++;\n\t}\n\tif(cnt2){\n\t    cnt2--;\n    \tscc[i]+=1,scc[j]+=1;\n    \tpos+=dfs(i,j+1);\n    \tscc[i]-=1,scc[j]-=1;\n    \tcnt2++;\n\t}\n\treturn pos%mod;\n}\nbool cmp(int x,int y){\n\treturn x>y;\n}\nint main() {\n\tcin >> n;\n\tll pp=0;\n\tfor(int i=1;i<=n;++i){\n\t\tcin >> sc[i];\n\t\tpp+=sc[i];\n\t}\n\tsort(sc+1,sc+n+1,cmp);\n\tcnt1=pp-n*n+n;\n\tcnt2=(pp-3*cnt1)/2;\n\tcout << dfs(1,2)%mod;\n\treturn 0;\n}\n```",
        "postTime": 1642250388,
        "uid": 383791,
        "name": "Others",
        "ccfLevel": 7,
        "title": "P3154 \u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\n\nhttps://www.luogu.org/problemnew/show/P3154\n\n\u91cd\u9898\uff1a(https://www.luogu.org/problemnew/show/P3230)\n\n\u8f93\u51fa\u53d6\u4e2amod\u5c31\u53ef\u4ee5\u4e86\n\n\u7701\u9009\u91cd\u9898~\n\n\u9996\u5148\u7684\u60f3\u6cd5\u80af\u5b9a\u662f\u679a\u4e3e\u6bcf\u4e00\u573a\u6bd4\u8d5b\u7684\u7ed3\u679c,\u5224\u65ad\u662f\u5426\u5408\u6cd5(48pts)\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=8;\nint n,tot,ans;\nint s[maxn],tmps[maxn];\nbool check()\n{\n    for(int i=1;i<=n;i++) if(s[i]!=tmps[i]) return 0;\n    return 1;\n}\nvoid dfs(int step,int x,int y)\n{\n    if(step==tot)\n    {\n        if(check()) ans++;\n        return;\n    }\n    tmps[x]+=3;\n    if(y==n) dfs(step+1,x+1,x+2);\n    else dfs(step+1,x,y+1);\n    tmps[x]-=3;\n    tmps[x]++,tmps[y]++;\n    if(y==n) dfs(step+1,x+1,x+2);\n    else dfs(step+1,x,y+1);\n    tmps[x]--,tmps[y]--;\n    tmps[y]+=3;\n    if(y==n) dfs(step+1,x+1,x+2);\n    else dfs(step+1,x,y+1);\n    tmps[y]-=3;\n}\nint main()\n{\n    scanf(\"%d\",&n);tot=n*(n-1)/2;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&s[i]);\n    dfs(0,1,2);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u8bd5\u4e86\u66b4\u529b\u5bf9\u4e86\u4e4b\u540e\u5f00\u59cb\u526a\u679d\uff1a\n\n\u8001\u5957\u8def\n\n\u53ef\u884c\u6027\u526a\u679d:\u5f53\u524d\u8fd9\u4e00\u961f\u5168\u8d62\u4e5f\u5230\u4e0d\u4e86\u771f\u5b9e\u5206,\u641c\u5b8c\u8fd9\u4e00\u961f\u540e\u5206\u6570\u662f\u5426\u8fbe\u5230,\u5927\u4e8e\u5c31\u9000\u51fa,\u5269\u4e0b\u7684\u573a\u5168\u8d62\u4e5f\u5230\u4e0d\u4e86\u603b\u5206(88pts)\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=8;\nint n,tot,ans,sum,num;\nint s[maxn],tmps[maxn];\ninline int read()\n{\n    char c=getchar();int res=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') res=res*10+c-'0',c=getchar();\n    return res*f;\n}\ninline bool check()\n{\n    for(register int i=1;i<=n;i++) if(s[i]!=tmps[i]) return 0;\n    return 1;\n}\nvoid dfs(int step,int x,int y)\n{\n    if(step==tot)\n    {\n        if(check()) ans++;\n        return;\n    }\n    if(tmps[x]+3*(n-y+1)<s[x]) return;\n    if(tmps[x]>s[x]) return;\n    if(3*(tot-step+1)<sum-num)return;\n    if(tmps[x]+3<=s[x])\n    {\n        tmps[x]+=3;num+=3;\n        if(y==n) {if(tmps[x]==s[x]) dfs(step+1,x+1,x+2);} \n        else \n        {\n            dfs(step+1,x,y+1);\n        }\n        tmps[x]-=3;num-=3;\n    }\n    if(tmps[x]+1<=s[x]&&tmps[y]+1<=s[y])\n    {\n        tmps[x]++,tmps[y]++;num+=2;\n        if(y==n) {if(tmps[x]==s[x]) dfs(step+1,x+1,x+2);} \n        else dfs(step+1,x,y+1);\t\n        tmps[x]--,tmps[y]--;num-=2;\n    }\n    if(tmps[y]+3<=s[y])\n    {\n        tmps[y]+=3;num+=3;\n        if(y==n) {if(tmps[x]==s[x]) dfs(step+1,x+1,x+2);} \n        else dfs(step+1,x,y+1);\n        tmps[y]-=3;num-=3;\n    }\n}\nint main()\n{\n    n=read();tot=n*(n-1)/2;\n    for(register int i=1;i<=n;i++) s[i]=read(),sum+=s[i];\n    sort(s+1,s+n+1);\n    dfs(0,1,2);\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u4e0d\u4f1a\u4e86\u70b9\u5f00\u9898\u89e3\u53c8\u5b66\u4e86\u4e24\u79cd\u526a\u679d\uff1a\n\n1.\u6570\u5b66\u65b9\u6cd5:\n\n\u8bbe\u80dc\u573asx,\u5e73\u5c40sy,\u53ef\u5f97\uff1a\n\n```\nsx+sy=n*(n-1)/2\n3*sx + 2*sy =sum (sigma(score))\n```\n\u53ef\u62ff\u6765\u9650\u5236\n\n2.\u8bb0\u5fc6\u5316\u641c\u7d22(**\u5212\u91cd\u70b9**)\n\n\u53d1\u73b0\u6bcf\u4e00\u961f\u641c\u5b8c\u540e\u4e0d\u540c\u7684\u642d\u914d\u53ef\u80fd\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c,\u8fd9\u65f6\u6211\u4eec\u76f4\u63a5\u7528\u4e4b\u524d\u5df2\u7ecf\u641c\u8fc7\u7684\u5c31\u53ef\u4ee5\u4e86,\u5f00\u4e2amap\u5b58\u4e00\u4e0b\u76f8\u540c\u7684\u5c40\u9762\u3002\n\n\n(100pts)code:\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long ull;\nconst int base=23;\nconst ull mod=1e9+7;\nconst int maxn=15;\nint n,sum,sx,sy;\nint tmps[maxn],b[maxn],s[maxn];\nmap<ull,ull> mp;\nbool cmp(int x,int y){return x>y;}\ninline int read()\n{\n    char c=getchar();int res=0,f=1;\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') res=res*10+c-'0',c=getchar();\n    return res*f;\n}\null dfs(int x,int y)\n{\n    ull res=0;\n    if(x==n) return 1;\n    if(tmps[x]+3*(n-y+1)<s[x]) return 0;\n    if(y>n)\n    {\n        for(int i=x+1;i<=n;i++) b[i]=s[i]-tmps[i];\n        sort(b+x+1,b+n+1);\n        ull H=0;\n        for(int i=x+1;i<=n;i++) H=H*base+b[i];\n        if(mp.find(H)!=mp.end()) return mp[H];\n        else return mp[H]=dfs(x+1,x+2);\n    }\n    if(tmps[x]+3<=s[x]&&sx)\n    {\n        tmps[x]+=3;sx--;\n        res+=dfs(x,y+1);\n        tmps[x]-=3;sx++;\n    }\n    if(tmps[x]+1<=s[x]&&tmps[y]+1<=s[y]&&sy)\n    {\t\n        tmps[x]++,tmps[y]++;sy--;\n        res+=dfs(x,y+1);\n        tmps[x]--,tmps[y]--;sy++;\n    } \n    if(tmps[y]+3<=s[y]&&sx)\n    {\n        tmps[y]+=3;sx--;\n        res+=dfs(x,y+1);\n        tmps[y]-=3;sx++;\n    }\n    return res;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++) s[i]=read(),sum+=s[i];\n    sx=sum-n*n+n,sy=n*(n-1)/2-sx;\n    sort(s+1,s+n+1,cmp);\n    printf(\"%llu\",dfs(1,2));\n    return 0;\n}\n\n```\n\n",
        "postTime": 1562679110,
        "uid": 145441,
        "name": "nofind",
        "ccfLevel": 6,
        "title": "P3154 [CQOI2009]\u5faa\u73af\u8d5b/P3230 [HNOI2013]\u6bd4\u8d5b(\u641c\u7d22)"
    }
]