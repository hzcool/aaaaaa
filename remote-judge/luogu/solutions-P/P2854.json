[
    {
        "content": "# \u4e0e\u80cc\u5305\u95ee\u9898\u7c7b\u4f3c\n\n## \u6838\u5fc3\u5185\u5bb9\uff1a\n\n**f[i][j]\u7684\u610f\u4e49\uff1a\u5750\u6807\u4e3a0~i\u7684\u8fde\u7eed\u8f68\u9053\u4e2d\uff0c \u4f7f\u7528\u6210\u672c\u4e3aj\u65f6\u7684\u6700\u5927\u4e50\u8da3\u503c\u3002**\n\n**\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1af[xi+wi][j+ci]=max(f[xi][j]+fi,f[xi+wi][j+ci])(1<=i<=n,0<=j<=b-ci)**\n\n\u6ce8\uff1a\u9700\u4fdd\u8bc1\u6b64\u65f60~xi+wi\u5747\u6709\u8f68\u9053\u8fde\u7740\uff0c\u8fd9\u4e2a\u6280\u5de7\u4e0b\u9762\u4f1a\u8bb2\u5230\n\n## \u57fa\u672c\u6b65\u9aa4\uff1a\n\n1.\u521d\u59cb\u5316\u4e8c\u7ef4\u6570\u7ec4f\u7684\u503c\u4e3a**-1**(\u5f53\u6ca1\u6709\u53ef\u884c\u65b9\u6848\u65f6\uff0c\u662f\u8f93\u51fa-1\u7684\uff0c~~\u8fd9\u70b9\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6ca1\u7ffb\u8bd1\u51fa\u6765~~)\u5e76\u4e14f[0][0]=0\n\n2.\u7528\u7ed3\u6784\u4f53\u50a8\u5b58\u6bcf\u6839\u8f68\u9053\u7684xi,wi,fi\u548cci\n\n3.\u7528sort\u6309xi\u4ece\u5c0f\u5230\u5927\u6392\u5e8f(\u65b9\u4fbfdp)\n\n4.dp\u4e2d\uff0c\u5f53f[xi][j]\u4e0d\u4e3a-1\u65f6\uff0c\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\uff0c\u56e0\u4e3af[xi][j]\u7b49\u4e8e-1\u8bf4\u660e\u6ca1\u6709\u8f68\u9053\u4ece\u8d77\u70b9\u4e00\u76f4\u8fde\u5230xi(\u8fd9\u5c31\u4fdd\u8bc1\u4e860~xi+wi\u5747\u6709\u8f68\u9053\u8fde\u7740)\n\n5.\u8f93\u51faf[l][i] (0<=i<=b)\u4e2d\u7684\u6700\u5927\u503c\n\n## \u4ee3\u7801\u4e00\u6ce2\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint l,n,b,f[1001][1001],ans=-1;\nstruct FT{\n    int st;\n    int ed;\n    int f;\n    int v;\n};\nFT p[100001];\nbool cmp(FT a1,FT a2){\n    return a1.st<a2.st;\n}\nint main(){\n    scanf(\"%d %d %d\",&l,&n,&b);\n    memset(f,-1,sizeof(f));\n    for(int i=1;i<=n;i++){\n        int b;\n        scanf(\"%d %d %d %d\",&p[i].st,&b,&p[i].f,&p[i].v);\n        p[i].ed=p[i].st+b;\n    }\n    sort(p+1,p+1+n,cmp);\n    f[0][0]=0;\n    for(int i=1;i<=n;i++){\n    \tfor(int j=0;j<=b-p[i].v;j++){\n    \t\tif(f[p[i].st][j]!=-1)f[p[i].ed][j+p[i].v]=max(f[p[i].ed][j+p[i].v],f[p[i].st][j]+p[i].f);\n        }\n    }\n    for(int i=0;i<=b;i++)ans=max(ans,f[l][i]);\n    cout<<ans;\n    return 0;\n}\n```\n\n## [\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.org/record/show?rid=13204914)\n\n104ms / 5.4MB \n\n\u4ee3\u7801\uff1a0.71KB C++",
        "postTime": 1541420404,
        "uid": 54298,
        "name": "\u7cea\u773e\u8126\u98b0\u7f77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "## \u5c31\u662f\u4e00\u4e2a\u80cc\u5305dp\u54e6qwq\n\n\u7b2c\u4e00\u7ef4\u662f\u8d77\u70b9\uff0c\u7b2c\u4e8c\u7ef4\u662f\u6210\u672c\u5462\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct item\n{\n    int a,b,v,w;\n}h[12000];\nint l,m,n,dp[1220][1220],ans;\nint cmd(item x,item y)\n{\n    return x.a<y.a;\n}\nint main()\n{\n    cin>>l>>n>>m;\n    for(int i=1;i<=n;i++)\n    cin>>h[i].a>>h[i].b>>h[i].w>>h[i].v;\n    /*for(int i=1;i<=n;i++)\n    {\n        for(int j=a[i];j<=a[i]+b[i];j++)\n        {\n            for(int k=m;k>=v[i];k--)\n            {\n                dp[j][k]=max(dp[j][k],dp[j][k-v[i]]+w[i]);\n            }\n        }\n    }*/\n    sort(h+1,h+n+1,cmd);\n    for(int i=1;i<=n;i++)\n    {\n        for(int k=m;k>=h[i].v;k--)\n        {\n            if(h[i].a!=0&&dp[h[i].a][k-h[i].v]==0)\n            continue;\n            dp[h[i].a+h[i].b][k]=max(dp[h[i].a+h[i].b][k],dp[h[i].a][k-h[i].v]+h[i].w);\n        }\n    }\n    for(int i=1;i<=m;i++)\n    {\n        ans=max(ans,dp[l][i]);\n    }\n    if(ans!=0)\n    cout<<ans;\n    else\n    cout<<-1;\n    \n    return 0;\n}\n\n```",
        "postTime": 1545022948,
        "uid": 116368,
        "name": "BinDir0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "\u6392\u5e8f\uff1f\u4e0d\u5b58\u5728\u7684\uff01\n\n\u591a\u597d\u7684\u4e00\u9053\u52a8\u89c4\u9898\u3002\n\n\"\u4e07\u7269\u7686\u53efDP\"\n\n\u8bfb\u9898\uff0c\u53ef\u4ee5\u60f3\u5230\u57fa\u672c\u7684\u8f6c\u79fb\u65b9\u7a0b \n\nf [i] [j] = max(f[ i-l[x] ] [ j-c[x] ] + h[i];\n\n\u5176\u4e2d f[i][j]\u8868\u793a\u5728i\u4f4d\u7f6e\uff0c\u5df2\u7ecf\u7528\u4e86j\u7684\u6210\u672c\uff0c\u6700\u591a\u53ef\u4ee5\u83b7\u5f97\u591a\u5c11\u4e50\u8da3\u503c\n\n\u4e0e\u697c\u4e0a\u5927\u4f6c\u4eec\u4e0d\u540c\u7684\u662f\uff0c\u5f00\u4e00\u4e2a** vector [i] \u8bb0\u5f55\u5230i\u70b9\u7ed3\u675f\u7684\u94a2\u8f68\u7f16\u53f7**\n\n\u8fd9\u6837\uff0c\u5728\u679a\u4e3e\u94a2\u8f68\u65f6\uff0c\u76f4\u63a5\u8bfb\u53d6\u5230i\u70b9\u7ed3\u675f\u7684\u94a2\u8f68\u7f16\u53f7\uff0c\u8fdb\u884c\u586b\u8868\u5373\u53ef\n\n\u5177\u4f53\u89c1\u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=10001;\n\nint l,n,b,ans;\n\nint f[1001][1001];\n\nvector<int>t[maxn];\n\nint len[maxn],c[maxn],h[maxn];\n\n\nint main() {\n\tscanf(\"%d%d%d\",&l,&n,&b);\n\tfor(int i=1; i<=n; i++) {\n\t\tint st;\n\t\tscanf(\"%d%d%d%d\",&st,&len[i],&h[i],&c[i]);\n\t\tt[st+len[i]].push_back(i);\n\t}\n\tfor(int i=0; i<=l; i++) {\n    \n\t\tfor(int j=0; j<=b; j++) {\n        \n\t\t\tfor(int k=0; k<t[i].size(); k++) {\n            \n\t\t\t\tint r=t[i][k];//r\u4e3a\u8fde\u63a5\u7740i\u7684\u94a2\u8f68\u7f16\u53f7\n\t\t\t\tif(i-len[r]>=0&&j-c[r]>=0) {//\u6ee1\u8db3\u6761\u4ef6\n                \n\t\t\t\t\tif(i-len[r]!=0&&!f[i-len[r]][j-c[r]])continue;\n                    //\u5f88\u91cd\u8981\uff0c\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\n                    //\u601d\u8003\u4e00\u4e0b\uff0c\u90fd\u4ec0\u4e48\u6837\u7684\u94a2\u8f68\u80fd\u591f\u4fee\u6539\u8be5\u70b9\u7684\u6700\u4f18\u503c\uff1f\n                    //\u53ea\u6709\u4ece\u8d77\u70b9\u4e00\u4e2a\u4e00\u4e2a\u8fde\u63a5\u8fc7\u6765\u7684\u624d\u53ef\u4ee5\n                    //\u4e0d\u7136\u4e0d\u80fd\u4fdd\u8bc1\u662f\u4ece\u8d77\u70b9\u8fde\u63a5\u8fc7\u6765\n                    //\u8fd9\u4e2a\u5730\u65b9\u5361\u4e86\u5f88\u4e45\uff0c\u5efa\u8bae\u81ea\u5df1\u753b\u56fe\u60f3\u4e00\u4e0b\n\t\t\t\t\tf[i][j]=max(f[i][j],f[i-len[r]][j-c[r]]+h[r]);\n                    \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0; i<=b; i++)ans=max(ans,f[l][i]);\n    //\u627e\u6700\u4f18\u89e3\uff0c\u5728n\u70b9\u6210\u672c\u2264b\u7684\u90fd\u53ef\u4ee5\n\tprintf(\"%d\",(ans>0?ans:-1));//\u7279\u5224-1\n}\n/*\n\n5 5 10\n0 2 20 6\n2 3 5 6\n0 1 2 1\n1 2 5 4\n3 2 10 2\n*/\n```\n\n\n------------\n~~\u5f88\u8ba4\u771f\u7684\u4e00\u7bc7\u9898\u89e3 \u5e0c\u671b\u901a\u8fc7~~\n\n\u4e0d\u61c2\u7684\u53ef\u4ee5\u79c1\u4fe1\u6211",
        "postTime": 1532754351,
        "uid": 65674,
        "name": "2017gangbazi",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<map>\n#include<queue>\n#define mod 100000007\n#define inf 21474347\n#define PI 3.1415926\n#define ll long long\nusing namespace std;\nll l,n,m,ans,f[1002][1002];//f[i][j]\u8868\u793a\u957f\u5ea6\u4e3ai,\u82b1\u8d39\u4e3aj\u7684\u6700\u5927\u6b22\u4e50\u503c \nstruct po{ll x,w,f,c;}a[10009];\nbool cmp(po xx,po yy){return xx.x<yy.x;} \nint main()\n{\n    scanf(\"%lld%lld%lld\",&l,&n,&m);\n    for(ll i=1;i<=n;i++)\n     scanf(\"%lld%lld%lld%lld\",&a[i].x,&a[i].w,&a[i].f,&a[i].c);    \n    sort(a+1,a+n+1,cmp);//\u5fc5\u987b\u8981\u6392\u5e8f\u624d\u80fd\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u539f\u5219 \n    memset(f,-1,sizeof(f));//\u521d\u59cb\u5316\uff0c\u65e0\u89e3\u7684\u60c5\u51b5\u5305\u542b\u5728\u91cc\u9762\u4e86 \n    ans=-inf;\n    f[0][0]=0;//\u663e\u800c\u6613\u89c1\u7684\u521d\u59cb\u5316 \n    for(ll i=1;i<=n;i++)\n    {\n     ll u=a[i].x;//\u5f00\u59cb \n     ll v=a[i].x+a[i].w;//\u7ed3\u675f \n     for(ll j=m;j>=a[i].c;j--)\n      if(f[u][j-a[i].c]!=(-1)) \n      //\u53ea\u6709\u5f53\u8d77\u70b9\u88ab\u9009\u4e2d\u7684\u65f6\u5019\u624d\u80fd\u53bb\u66f4\u65b0\u7ec8\u70b9 \n       f[v][j]=max(f[u][j-a[i].c]+a[i].f,f[v][j]);//\u7ec8\u70b9\u53d6\u6700\u4f18 \n    }\n    for(ll i=0;i<=m;i++)//\u56e0\u4e3a\u4e0d\u77e5\u9053\u82b1\u8d39\u591a\u5c11\u94b1\u5f97\u5230\u7684\u6b22\u4e50\u503c\u662f\u6700\u5927\u7684\uff0c\u6240\u4ee5\u8981\u626b\u4e00\u904d \n     ans=max(ans,f[l][i]);\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1506244381,
        "uid": 36397,
        "name": "\u6c89\u8fb0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "\u672c\u9898\u5c31\u662f\u80cc\u5305\u7684\u53d8\u79cd  \n\u6ce8\u610f\u4e8b\u9879\u5c31\u662f\u6bcf\u4e2a\u94a2\u8f68\u9996\u5c3e\u76f8\u63a5\uff0c\u4e0d\u80fd\u91cd\u53e0\u6216\u4e2d\u65ad  \n\u4ee3\u7801\u5177\u4f53\u4e3a(\u8d77\u70b9\u4e3a0||\u4e4b\u524d\u6709\u94a2\u8f68)  \n\u56e0\u4e3a\u6709\u8da3\u5ea6\u4e3a\u6b63\u6574\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u5224\u65ad\u6709\u8da3\u5ea6\u662f\u5426\u4e3a0   \n\u7136\u540e\u5c31\u662f\u6392\u5e8f\u540e\u57fa\u7840\u7684\u80cc\u5305\u4e86  \n\u56e0\u4e3a\u7ffb\u8bd1\u7684\u9505\uff0c\u53ef\u80fd\u9898\u610f\u6709\u4e9b\u6076\u5fc3  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long f[1010][1010];//(i\u6761)\u5230j\u4f4d\u7f6ek\u6210\u672c\u7684w \nstruct Point{\n\tint st,len,v,w;\n}a[10010];\nint st[10010],len[10010],v[10010],w[10010];\nbool cmp(const Point &x,const Point &y){\n\tif(x.st==y.st)return x.len<y.len;\n\treturn x.st<y.st;\n}\nint main(){\n\tint n,m,b;\n\tscanf(\"%d%d%d\",&b,&n,&m);\n\tfor(register int i=1;i<=n;++i)\n\t\tscanf(\"%d%d%d%d\",&a[i].st,&a[i].len,&a[i].w,&a[i].v);\n\tsort(a+1,a+n+1,cmp);\n\tfor(register int i=1;i<=n;++i){\n\t\tst[i]=a[i].st;\n\t\tlen[i]=a[i].len;\n\t\tv[i]=a[i].v;\n\t\tw[i]=a[i].w;\n\t}\n\tfor(register int i=1;i<=n;++i){\n\t\tint length=st[i]+len[i];\n\t\tfor(register int j=m;j>=v[i];--j)\n\t\t\tif(!st[i]||f[st[i]][j-v[i]])\n\t\t\t\tf[length][j]=max(f[length][j],f[st[i]][j-v[i]]+w[i]);\n\t}\t\n\tlong long ans=0;\n\tfor(register int i=0;i<=m;++i)\n\t\tans=max(ans,f[b][i]);\n\tif(ans==0)ans=-1;\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1568381424,
        "uid": 138543,
        "name": "\u6597\u795e_\u541b\u83ab\u7b11",
        "ccfLevel": 0,
        "title": "\u80cc\u5305-1"
    },
    {
        "content": "\u5f88\u5bb9\u6613\u60f3\u5230,\u53ea\u662f\u4e00\u9053\u80cc\u5305\u9898\n\n\u4f46\u662f\u8fd9\u9053\u9898\u6709\u4e24\u4e2a\u6761\u4ef6\uff0c\u957f\u5ea6\uff0c\u6210\u672c\uff0c\u6240\u4ee5\u4f1a\u60f3\u5230\u4e09\u91cd\u5faa\u73af\u80cc\u5305\n\n[like this->](https://www.luogu.org/problem/P1507)\n\n\u4f46\uff0c\u5bf9\u6bd4\u6570\u636e\n\n\u524d\u8005\uff0cN(1\u2264N\u226410000)\n\n\u540e\u8005\uff0cN(<50\uff09\n\n\u5475\u5475\u5475\uff0c\u6240\u4ee5\u663e\u7136\u4e0d\u884c\n\n\u4f46\u4ed4\u7ec6\u60f3\u4e00\u60f3\n\n\u6211\u4eec\u7528dp[i][j]\u8868\u793a\u4ed8\u51fai\u6210\u672c\uff0c\u5f53\u524d\u7ec8\u70b9\u4e3aj\uff0c\u5f97\u5230\u7684\u6700\u5927\u6709\u8da3\u6307\u6570\n\n\u4e8e\u662f\uff0c\u5f88\u5bb9\u6613\u60f3\u51fadp\n\n```\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=b;j>=a[i].c;j--)\n\t\t{\n\t\t\tif(dp[j-a[i].c][a[i].x]>0||a[i].x==0)\n\t\t\t{\n\t\t\t\tdp[j][a[i].x+a[i].w]=max(dp[j][a[i].x+a[i].w],dp[j-a[i].c][a[i].x]+a[i].f);//\u5148\u770b\u8fd9\u91cc\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u8fd9\u6837\u5c31\u4e0d\u8981\u591a\u5199\u4e00\u91cd\u5faa\u73af\n\n\u4f46\u6709\u5f88\u591a\u7ec6\u8282\n\n1.\u56e0\u4e3a\u94c1\u8f68\u8981\u8fde\u7eed\uff0c\u6240\u4ee5\u94c1\u8f68\u8981\u6309\u7167\u8d77\u70b9\u6392\u5e8f\n\n2.\u5982\u679c\u6240\u6709\u94c1\u8f68\u8d77\u70b9\u90fd\u6ca1\u6709\u542b0\u7684\uff0c\u8f93\u51fa\u65e0\u89e3\n\n3.\u5982\u679c\u4e2d\u95f4\u6709\u94c1\u8f68\u4e0d\u8fde\u7eed\uff0c\u4e0d\u80fd\u505a\u80cc\u5305\n\n\t\t\u6240\u4ee5\u624d\u6709\u8fd9\u4e00\u6bb5\n        \n\t\tif(dp[j-a[i].c][a[i].x]>0||a[i].x==0)\n\n\n4.\u7b54\u6848\u53ef\u4ee5\u6ee1\u8db3\u4efb\u610f\u6210\u672c\u60c5\u51b5\uff0c\u4f46\u7ec8\u70b9\u4e00\u5b9a\u8981\u662fL\n\n\n\u4e0a\u4ee3\u7801\n\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tint x;\n\tint w;\n\tint f;\n\tint c;\n}a[10005];\nint dp[10005][1005];\nint cmp(node a,node b)\n{\n\treturn a.x<b.x;\n}\nint main()\n{\n\tint l,n,b;\n\tscanf(\"%d%d%d\",&l,&n,&b);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&a[i].x,&a[i].w,&a[i].f,&a[i].c);\n\t}\n\tsort(a+1,a+1+n,cmp);\n\tif(a[1].x!=0)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=b;j>=a[i].c;j--)\n\t\t{\n\t\t\tif(dp[j-a[i].c][a[i].x]>0||a[i].x==0)\n\t\t\t{\n\t\t\t\tdp[j][a[i].x+a[i].w]=max(dp[j][a[i].x+a[i].w],dp[j-a[i].c][a[i].x]+a[i].f);\n\t\t\t}\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=b;i++)\n\t{\n\t\tans=max(ans,dp[i][l]);\n\t}\n\tif(ans==0)\n\t{\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1566285152,
        "uid": 89766,
        "name": "Mr_\u5b8f\u4f1f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P2854)\n\n\u8fd9\u662f\u4e00\u9053\u975e\u5e38\u4e0d\u9519\u7684\u4e8c\u7ef4\u80cc\u5305\u9898\uff08\u867d\u7136\u6211\u4e5f\u662f\u770b\u7740\u9898\u89e3\u6253\u7684\uff09\uff0c\u6240\u4ee5\u505a\u5b8c\u540e\u5199\u4e86\u7bc7\u9898\u89e3\u3002\n\n# 1\u3001\u9898\u610f\u7406\u89e3\n\n\u8fd9\u9053\u9898\u7684\u610f\u601d\u662f\u6709$n$\u6761\u94a2\u8f68\uff0c\u8981\u6c42\u4ece$0$\u8986\u76d6\u5230$L$\u4e14\u603b\u8d39\u7528\u4e0d\u80fd\u8d85\u8fc7$b$\uff08\u6ce8\u610f\uff1a\u53ef\u4ee5\u8986\u76d6\u5230\u6bd4$L$\u66f4\u5927\u7684\u70b9\uff09\uff0c\u7b2c$i$\u6761\u94a2\u8f68\u5fc5\u987b\u5934\u653e\u5728$X_i$\uff0c\u957f\u5ea6\u4e3a$T_i$\uff0c\u8d39\u7528\u4e3a$C_i$\uff0c\u4ef7\u503c\u4e3a$W_i$\u3002\u8981\u6c42\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u603b\u4ef7\u503c\u6700\u5927\u3002\u82e5\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\uff0c\u5219\u8f93\u51fa$-1$\u3002\n\n\u8fd9\u770b\u8d77\u6765\u662f\u4e00\u4e2a$01$\u80cc\u5305\u9898\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u591a\u4f59\u7684\u6761\u4ef6\uff0c\u5c31\u662f\u8981\u94fa\u6ee1$[0, L]$\u8fd9\u4e2a\u533a\u95f4\u3002\u56e0\u6b64\u6211\u4eec\u8981\u5728\u666e\u901a\u7684[$01$\u80cc\u5305](https://blog.csdn.net/u014296502/article/details/80015722)\u4e0a\u518d\u52a0\u4e00\u4e2a\u7ef4\u5ea6\u8868\u793a\u8d39\u7528\u3002\n\n# 2\u3001\u7b97\u6cd5\u7406\u89e3\n\n\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4$a$\uff0c\u8bb0\u5f55\u6bcf\u6839\u94c1\u8f68\u7684\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u4ef7\u503c\uff0c\u8d39\u7528\u3002\u7531\u4e8e\u6211\u4eec\u8fd8\u8981\u8ba8\u8bba\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u628a$f$\u6570\u7ec4\u521d\u59cb\u5316\u4e3a$-\\infty$\u3002\u7531\u4e8e\u6211\u4eec\u8981\u4ece\u540e\u5411\u524d\u679a\u4e3e\u94a2\u8f68\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5148\u6309\u6bcf\u6839\u94a2\u8f68\u7684\u8d77\u70b9\u6392\u4e2a\u5e8f\u3002\n\n\u6211\u4eec\u8bbe$f(i,j)$\u8868\u793a\u5f53\u524d\u8d70\u5230\u4e86$i$\uff0c\u800c\u5df2\u7ecf\u82b1\u7684\u603b\u8d39\u7528\u4e3a$j$\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\u3002\n\n\u5148\u4e0a\u52a8\u5f52\u8f6c\u79fb\u65b9\u7a0b\uff1a$ f(e_i,j)= \\max( f(s_i,j-c_i)+w_i ) $ \u5176\u4e2d$e_i$\uff0c$s_i$\uff0c$c_i$\uff0c$w_i$\u4e3a\u7b2c$i$\u6839\u94c1\u8f68\u7684\u7ec8\u70b9,\u8d77\u70b9,\u8d39\u7528\uff0c\u4ef7\u503c\uff0c\u5e76\u4e14\u4ec5\u5f53$f(s_i,j-c_i)$\u4e0d\u7b49\u4e8e$- \\infty$\u65f6\u624d\u80fd\u8f6c\u79fb\u3002\n\n\u8fd9\u4e2a\u52a8\u5f52\u65b9\u7a0b\u4e5f\u5f88\u597d\u7406\u89e3\uff1a\u5c31\u662f\u4e00\u4e2a\u4f4d\u7f6e\u5f53\u82b1\u8d39\u4e3a$j$\u65f6\uff0c\u5c31\u679a\u4e3e\u6bcf\u6839\u94a2\u8f68\u3002\u5982\u679c\u8fd9\u6839\u94a2\u8f68\u8d77\u70b9\u4e4b\u524d\u80fd\u88ab\u94fa\u6ee1\uff0c\u5c31\u8fdb\u884c\u4e00\u4e2a$01$\u80cc\u5305\u7684\u8f6c\u79fb\u3002\n\n**\u4f46\u662f\u6211\u8981\u518d\u5f3a\u8c03\u4e00\u904d$01$\u80cc\u5305\u7684\u91cd\u70b9\uff1a\u7b2c\u4e00\u5c42\u679a\u4e3e\u7269\u54c1\uff0c\u7b2c\u4e8c\u5c42\u679a\u4e3e\u5bb9\u91cf\u3002**\n\n\u5e76\u4e14\u6700\u540e\u522b\u5fd8\u4e86\u5982\u679c\u6240\u6709\u7ec8\u70b9\u4e3a$L$\u7684\u72b6\u6001\u90fd\u4e0d\u80fd\u53d6\u5230\uff08\u5747\u4e3a$- \\infty$\uff09\uff0c\u90a3\u4e48\u8f93\u51fa$-1$\u3002\u5e76\u4e14\u6211\u8fd8\u5728\u6700\u524d\u9762\u6392\u5b8c\u5e8f\u540e\u52a0\u4e86\u4e2a\u5c0f\u4f18\u5316\uff0c\u5c31\u662f\u5982\u679c\u6ca1\u6709\u94a2\u8f68\u7684\u8d77\u70b9\u5728$0$\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u53ef\u80fd\u94fa\u6ee1\u3002\n\n# 3\u3001\u4ee3\u7801\n\n\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\nconst int NR=10005;\nconst int MR=1005;\nconst int INF=0x7f7f7f;\n\nstruct comp\n{\n\tint start,end,fun,cost;//\u5206\u522b\u662f\u6bcf\u6839\u94a2\u8f68\u7684\u8d77\u70b9\uff0c\u7ec8\u70b9\uff0c\u4ef7\u503c\uff0c\u8d39\u7528 \n}a[NR];\n\nint l,n,b,ans;\nint f[MR][MR];\n\nbool cmp(struct comp u,struct comp v)//\u6392\u5e8f \n{\n\treturn u.start<v.start;\n}\n\ninline int max(int p,int q)//\u81ea\u5df1\u5199max\u66f4\u5feb \n{\n\treturn p>q?p:q;\n} \n\nint main()\n{\n\tmemset(f,-INF,sizeof(f));//\u521d\u59cb\u5316f\u4e3a\u8d1f\u65e0\u9650 \n\tcin>>l>>n>>b;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint k;\n\t\tcin>>a[i].start>>k>>a[i].fun>>a[i].cost;\n\t\ta[i].end=a[i].start+k;//\u628a\u8f93\u5165\u8f6c\u5316\u4e3a\u8d1f\u65e0\u9650 \n\t}\n\tsort(a+1,a+n+1,cmp);//\u7528\u5feb\u6392\u51fd\u6570\u6392\u4e2a\u5e8f \n\tif(a[1].start!=0)//\u4e00\u4e2a\u5c0f\u4f18\u5316 \n\t{\n\t\tcout<<-1;\n\t\treturn 0;\n\t}\n\tf[0][0]=0;//\u522b\u5fd8\u4e86\u521d\u59cb\u5316 \n\tfor(int i=1;i<=n;i++)//\u7b2c\u4e00\u5c42\u679a\u4e3e\u7269\u54c1 \n\t{\n\t\tfor(int j=b;j>=a[i].cost;j--)//\u7b2c\u4e8c\u5c42\u5012\u5e8f\u679a\u4e3e\u5bb9\u91cf \n\t\t{\n\t\t\tif(f[a[i].start][j-a[i].cost]!=(-INF))//\u5982\u679c\u8d77\u70b9\u6ee1\u8db3\u8981\u6c42 \n\t\t\t{\n\t\t\t\t//\u8f6c\u79fb \n\t\t\t\tf[a[i].end][j]=max(f[a[i].end][j],f[a[i].start][j-a[i].cost]+a[i].fun);\n\t\t\t}\n\t\t}\n\t}\n\tans=-INF;//\u5148\u628aans\u8bbe\u4e3a\u8d1f\u65e0\u9650 \n\tfor(int i=0;i<=b;i++)\n\t{\n\t\tans=max(ans,f[l][i]);\n\t}\n\tif(ans==-INF) cout<<-1;//\u5982\u679cans\u6ca1\u6709\u53d8 \uff0c\u8f93\u51fa-1 \n\telse cout<<ans;//\u8f93\u51fa \n\treturn 0;\n}\n```\n**\u82e5\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u51fa\uff01**\n",
        "postTime": 1615965403,
        "uid": 304775,
        "name": "linyinuo2008",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854  [USACO06DEC]Cow Roller Coaster S"
    },
    {
        "content": "##  \u6b64\u7bc7\u5c5e\u4e8e\u9898\u89e3\u4e0d\u4e00\u5b9a\u6b63\u89e3\u7cfb\u5217.\n\n\u673a\u623f\u6a21\u62df\u8d5b \u8001\u5e08\u7528\u4e86\u8fd9\u9898 \n\n\u6ca1\u60f3DP \u76f4\u63a5~~\u66b4\u8e81~~DFS  \u52a0O2~~\uff08\u624b\u52a8\uff09~~\n\n T \u4e24\u4e2a\u70b9. \u542c\u673a\u623f\u5927\u4f6c\u53ef\u4ee5\u8bb0\u5fc6\u5316. \n\n\u7136\u540e \u52a0\u4e2a\u8d3c\u7b80\u5355\u7684 \u8bb0\u5fc6\u5316 \u5c31\u8fc7\u4e86....\n\n~~\u5176\u5b9e\u662f\u539f\u9898\u6570\u636e\u592a\u6c34\u4e86~~\n\n\u6211\u4eec\u8001\u5e08 \u52a0\u4e86\u4e00\u7ec4\u6570\u636e \u5c31\u628a\u6240\u6709DFS\u7684\u5361\u6b7b\u4e86.\n\n\u5176\u5b9eDP\u662f\u6b63\u89e3..\n\n\u770bDP \u53ef\u4ee5\u770b\u7b2c\u4e00\u4e2a\u7684~~\u6211\u4eec\u673a\u623f\u5927\u4f6c\u53d1\u7684\u9898\u89e3~~\n\n\u4ee3\u7801+\u6ce8\u91ca:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct xx {\n\tint xi,wi,fi,ci;\n} a[10005];\nvector <int> s[1005]; // \u8868\u793a\u4e0d\u540c\u4f4d\u7f6e \u53ef\u4ee5\u63a5\u4e0a \u54ea\u51e0\u4e2a\u94c1\u8f68.\nint mem[1005]; // mem -> \u8bb0\u5fc6\u5230\u5f53\u524d\u4f4d\u7f6e \u6700\u5927\u7684\u6709\u8da3\u503c \nint ans=-1;   // \u65e0\u89e3\nint l,n,b;\nvoid dfs(int len,int he,int sum)  // he -> \u6b64\u65f6\u7684\u8d39\u7528 sum->\u6b64\u65f6\u7684\u6709\u8da3\u503c  len->\u6b64\u65f6\u7684\u957f\u5ea6. \n{\n\tif(he>b) return ;  // \u7b80\u5355\u7684\u526a\u679d \n\tif(mem[len] && mem[len] > sum) return ; //\u82e5\u76f8\u540c\u957f\u5ea6\u7684\u6709\u8da3\u503c \u5df2\u7ecf\u5c0f\u4e8e \u4ee5\u524d\u7684 \u90a3\u5c31\u6ca1\u5fc5\u8981\u641c\u4e0b\u53bb\u4e86. \n\tif(len==l) { //\u62b5\u8fbe\u76ee\u6807 \n\t\tans=max(sum,ans);\n\t\treturn ;\n\t}\n\t\n\tif(mem[len]==0) mem[len] = sum;\n\tmem[len] = max(sum,mem[len]) ; //\u53d6\u6700\u5927 \n\n\tint h = s[len].size();\n\tfor(int i=0 ; i<h; i++) { // \u904d\u5386\u6240\u6709\u53ef\u4ee5\u63a5\u4e0a\u7684\u94c1\u8f68. \n\t\tint z = s[len][i];\n\t\tdfs(len+a[z].wi,he+a[z].ci,sum+a[z].fi);\n\t}\n}\nvoid Ghost_main()\n{\n\tscanf(\"%d%d%d\",&l,&n,&b);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%d%d%d%d\",&a[i].xi,&a[i].wi,&a[i].fi,&a[i].ci); // \u8bfb\u5165\n\t\ts[a[i].xi].push_back(i); // \u5c06\u53ef\u4ee5\u63a5\u4e0a\u7684 \u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc DFS\u7528\n\t}\n\tdfs(0,0,0);\n\tprintf(\"%d\",ans);\n\treturn ;\n}\nint main()\n{\n#define offline_\n#ifdef offline\n\tfreopen(\"coaster.in\",\"r\",stdin);\n\tfreopen(\"coaster.out\",\"w\",stdout);\n\tGhost_main();\n\tfclose(stdin),fclose(stdout);\n#else\n\tGhost_main();\n#endif\n\treturn 0;\n}\n```",
        "postTime": 1541417279,
        "uid": 91416,
        "name": "Sairfzy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u9898\u89e3\u6ca1\u6709\u641c\u7d22\uff0c\u5c31\u5199\u4e86\u4e00\u4e2a\n\n\u66b4\u641c80\u5206\n\u4e0b\u9762\u662f**\u516b\u5341\u5206**\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<string>\nusing namespace std;\nint idline[1100][11000];\nint l,n,b;\nint ans=-1;\nstruct asd\n{\n    int x,w,f,c;\n}a[11000];\n\nint cmp(asd a,asd b)\n{\n    return a.f>b.f;\n}\n\nint dfs(int id,int money,int funny)\n{\n    if(money>b)//\u9650\u5236\u6761\u4ef6\u2460 \n    return 0;\n    \n    if(a[id].w+a[id].x==l)//\u5230\u8fbe \n    {\n        ans=max(funny,ans);\n        return 0;\n    }\n    \n    for(int i=1;i<=idline[a[id].w+a[id].x][0];i++)\n    {\n        int start=a[id].w+a[id].x;\n        dfs(idline[start][i],money+a[idline[start][i]].c,funny+a[idline[start][i]].f);\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&l,&n,&b);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d%d%d%d\",&a[i].x,&a[i].w,&a[i].f,&a[i].c);\n    \n    sort(a+1,a+n+1,cmp);\n    \n    for(int i=1;i<=n;i++)\n    {\n        idline[a[i].x][0]++;\n        idline[a[i].x][idline[a[i].x][0]]=i;\n    }\n    \n    dfs(0,0,0);\n    \n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n\u4e0b\u9762\u662f\n\u526a\u679d\u4ee3\u7801\n\u526a\u5b8cAC\uff0c\u89e3\u91ca\u90fd\u5728\u4ee3\u7801\u91cc\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<string>\nusing namespace std;\nint idline[1100][11000],f[1100];//idline\u5efa\u56fe \nint l,n,b;\nint ans=-1;//\u65e0\u89e3\u60c5\u51b5\u4e3a-1\uff1b \nstruct asd//\u5efa\u7acb\u7ed3\u6784\u4f53 \n{\n    int x,w,f,c;//x\u4e3a\u8d77\u70b9\uff0cw\u4e3a\u957f\u5ea6\uff0cf\u4e3a\u6709\u8da3\u7a0b\u5ea6\uff0cc\u4e3a\u6210\u672c \n}a[11000];\n\nint cmp(asd a,asd b)//\u6bd4\u8f83\u7ed3\u6784\u4f53\u91cc\u7684\u6709\u8da3\u7a0b\u5ea6\uff0c\u6709\u8da3\u7a0b\u5ea6\u9ad8\u7684\u4f18\u5148\u9009\u62e9\uff0c\u4e3a\u526a\u679d\u505a\u51c6\u5907 \n{\n    return a.f>b.f;\n}\n\nint dfs(int id,int money,int funny)\n{\n    if(money>b)//\u5f53\u524did\u8f68\u9053\u5efa\u6210\u540e\uff0c\u8d85\u51fa\u9884\u7b97\u5c31\u9000\u51fa \n    return 0;\n    \n    if(funny<f[a[id].x+a[id].w])//\u91cd\u8981\u526a\u679d\uff0c\u6ca1\u4e86\u5c31tle\u4fe9\u70b9 \n    return 0;\n\t/*\n\t\u5f53\u524d\u8f68\u9053\u5efa\u7acb\u5b8c\u6bd5\u540e\uff0c\u4e14\u9884\u7b97\u4e0d\u4f1a\u8d85\u51fa\uff0c\u4e14\u6709\u8da3\u7a0b\u5ea6\u6bd4\u201c\u524d\u8f88\u201d\uff08\u8fc7\u53bb\u5230\u4e86\u8fd9\u4e2a\u8ddd\u79bb\u7684\u524d\u8f88\uff09\u5927\n\t\u5c31\u8bb0\u5f55\u5176\u6709\u8da3\u7a0b\u5ea6\u5728\u8bb0\u5f55\u699cf\u6570\u7ec4\u91cc\u3002 \n\t*/ \n    f[a[id].x+a[id].w]=funny;\n    \n    if(a[id].w+a[id].x==l)//\u5230\u4e86\u7ec8\u70b9\u5c31\u8bb0\u5f55 \n    {\n        ans=max(funny,ans);\n        return 0;\n    }\n    \n    for(int i=1;i<=idline[a[id].w+a[id].x][0];i++)//\u5f53\u524did\u8f68\u9053\u5efa\u7acb\u5b8c\u6bd5\u540e\uff0c\u4ee5\u6b64\u4e3a\u8d77\u70b9\uff0c\u5f00\u59cbdfs \n    {\n        int start=a[id].w+a[id].x; \n        dfs(idline[start][i],money+a[idline[start][i]].c,funny+a[idline[start][i]].f);//\u8fd9\u4e2a\u8981\u6162\u6162\u7406\u89e3\u5566\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&l,&n,&b);//\u8bfb\u5165\u957f\u5ea6\uff0c\u8f68\u9053\u6570\uff0c\u9884\u7b97 \n    for(int i=1;i<=n;i++)//\u6bcf\u6761\u8f68\u9053 \n    scanf(\"%d%d%d%d\",&a[i].x,&a[i].w,&a[i].f,&a[i].c);\n    \n    sort(a+1,a+n+1,cmp);//\u6392\u5e8f\u6709\u8da3 \n    \n    for(int i=1;i<=n;i++)//\u56fe \n    {\n        idline[a[i].x][0]++;//\u8ba1\u6570 \n        idline[a[i].x][idline[a[i].x][0]]=i;//\u8ba1\u6570\u6bcf\u4e2a\u8f68\u9053\u7684\u8d77\u70b9\uff0c\u56e0\u4e3a\u4e4b\u524d\u6392\u5e8f\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019idline\u6570\u7ec4\u91cc\u7684\u6709\u8da3\u7a0b\u5ea6\u4e3a\u964d\u5e8f \n    }\n    \n    dfs(0,0,0);//\u4e00\u6761\u8f68\u9053\u90fd\u6ca1\u6709\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u8da3\u7a0b\u5ea6\u4e3a0\uff0c\u82b1\u8d39\u4e3a0 \n    \n    printf(\"%d\",ans);//\u8f93\u51fa\u7b54\u6848 \n    return 0;\n}\n```",
        "postTime": 1522056265,
        "uid": 46702,
        "name": "AnChun999",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "\u4e00\u9053\u7b80\u5355\u7684dp+\u80cc\u5305\u7684\u9898\n\n\u72b6\u6001\u65b9\u7a0b $f[i][j]$ \u8868\u793a\uff1a\u5b8c\u6210 $0$ \u5230 $i$ \u4e4b\u95f4\u94a2\u8f68\u62fc\u63a5\uff0c\u82b1\u8d39\u4e3a $j$  \uff0c\u6709\u8da3\u548c\u6700\u5927\u503c\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\uff1a$dp[i+w][k]$ $=max$\uff08$dp[i+w][k],dp[i][k-c]+f$\uff09\u3002\n\n\u5176\u5b83\u5904\u7406\uff1a\u5b9a\u4e49\u4e00\u4e2avector\u6570\u7ec4\uff0c\u4ee5\u6bcf\u4e2a\u94a2\u8f68\u7684\u8d77\u70b9\u4e3a\u4e0b\u6807\uff0c\u628a\u5176\u5b83\u4fe1\u606f\u5b58\u8fdb\u53bb\u3002\n\u904d\u5386\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u679a\u4e3e\u4f4d\u7f6e\u4e0a\u7684\u94a2\u8f68\uff0c\u518d\u5957\u7528\u5b8c\u5168\u80cc\u5305\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1005;\ntypedef long long ll;\nstruct nod{\n\tint w,f,c;\n}a[N*10];\nint l,n,b;\nll dp[N][N];\nvector<nod>q[N];\nint main(){\n\tscanf(\"%d%d%d\",&l,&n,&b);\n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tscanf(\"%d%d%d%d\",&x,&a[i].w,&a[i].f,&a[i].c);\n\t\tq[x].push_back(a[i]);\n\t}\n\tmemset(dp,-0x3f,sizeof(dp));\n\tdp[0][0]=0;\n\tfor(int i=0;i<=l;i++){\n\t\tfor(int j=0;j<q[i].size();j++){\n\t\t\tint w=q[i][j].w,c=q[i][j].c,f=q[i][j].f;\n\t\t\tfor(int k=b;k>=c;k--){\n\t\t\t\tdp[i+w][k]=max(dp[i+w][k],dp[i][k-c]+(ll)f);\n\t\t\t}\n\t\t}\n\t}\n\tll ans=-1;\n\tfor(int i=0;i<=b;i++){\n\t\tans=max(ans,dp[l][i]);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n} \n```\n",
        "postTime": 1621816935,
        "uid": 277664,
        "name": "\u968f\u4fbfAK",
        "ccfLevel": 6,
        "title": "P2854 [USACO06DEC]Cow Roller Coaster S \u9898\u89e3"
    },
    {
        "content": "\u597d\u9898\u554a!\u597d\u9898!\n\n\u53c8\u662f\u4e00\u9053~~\u90aa\u6076\u5751\u4eba\u7684~~DP\u9898!\n\n\u8bf4\u5b9e\u8bdd,\u6211\u89c9\u5f97\u8fd9\u9053\u9898\u8fd8\u662f\u4e00\u9053\u7eff\u9898\u771f\u662f\u4e0d\u5bf9!!\u96be\u5ea6\u9876\u591a\u4e5f\u5c31\u4e2a\u9ec4\u9898\u4e86\u5427.\n\n\u5148\u63a8\u4e00\u905301\u80cc\u5305\u88f8\u9898:[P2871 \u624b\u94feCharm Bracelet](https://www.luogu.org/problemnew/show/P2871)\n\n\u5206\u6790\u4e00\u4e0b:\n\n\u7b97\u6cd5:DP,01\u80cc\u5305\n\n\u6570\u636e\u8303\u56f4:1\u2264N\u226410000,1\u2264L\u22641000,1\u2264Wi\u2264L,1\u2264Xi\u2264L-Wi,1 \u2264Fi\u22641000000,1\u2264Ci\u22641000,1\u2264B\u22641000\n\n\u4e0a\u4ee3\u7801,\u5177\u4f53\u89e3\u91ca\u770b\u6ce8\u91ca.\n\n---\n\n\u4ee3\u7801:\n\n```cpp\n//dp\u4ee3\u7801.\n/*\n\u8fd9\u9053\u9898\u663e\u7136\u662f01\u80cc\u5305\u53d8\u79cd.\u6240\u4ee5\u752801\u80cc\u5305\u7684\u72b6\u6001\u6539\u6539\u5c31\u53ef\u4ee5\u4e86\n01\u80cc\u5305\u72b6\u6001:\n\u72b6\u6001:f[i]\u8868\u793a\u5728\u91cd\u91cf\u4e3ai\u65f6\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c         \n\u8f6c\u79fb:f[j]=max(f[j],f[j-a[i].w]+a[i].v); \n\u521d\u503c:0\n\u7b54\u6848:f[m] \n\n\u672c\u9898\u72b6\u6001:\n\u72b6\u6001:f[i][j]\u8868\u793a\u4ee5i\u4e3a\u7ec8\u70b9,\u9884\u7b97\u6700\u591a\u4e3aj\u65f6\u7684\u6700\u5927\u5feb\u4e50\u5ea6           \n\u8f6c\u79fb:f[x[k]+w[k]][j]=max(f[x[k]+w[k]][j],f[x[k]][j-c[i]]+f[i])\n\u521d\u503c:f[0][j]=0,f[i][j]=-999999\n\u7b54\u6848:f[l][b]\n\u662f\u4e0d\u662f\u5f88\u50cf~~~\n\u5927\u5bb6\u53ef\u4ee5\u5bf9\u6bd4\u7740\u6765\u770b.\u5b9e\u9645\u4e0a\u8fd9\u9053\u9898\u4e0e01\u80cc\u5305\u6700\u5927\u7684\u5dee\u522b\u4e5f\u5c31\u662f\u52a0\u4e86\u4e00\u7ef4.\n*/\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<iostream>\n#include<algorithm>\n#define for1(i,a,b) for(int i=a;i<=b;++i)\n#define for2(i,a,b) for(int i=a;i>=b;--i)\nusing namespace std;\nlong long f[1001][1001];                                                                                                                                                                                                                                                                                                                         \n//f[]\u7528\u4e8eDP.\u7531\u4e8e\u6781\u9650\u6570\u636efunny<=1000000,\u6240\u4ee5\u8981\u5f00long long.\u5f00int\u5e94\u8be5\u4f1a\u70b8. \n/*\n\u72b6\u6001:f[i][j]\u8868\u793a\u4ee5i\u4e3a\u7ec8\u70b9,\u9884\u7b97\u6700\u591a\u4e3aj\u65f6\u7684\u6700\u5927\u5feb\u4e50\u5ea6           \n\u8f6c\u79fb:f[x[k]+w[k]][j]=max(f[x[k]+w[k]][j],f[x[k]][j-c[i]]+f[i])\n\u521d\u503c:f[0][j]=0,f[i][j]=-999999\n\u7b54\u6848:f[l][b]\n*/\nstruct Roller_Coaster\n{\n   \tint start;//\u521d\u59cb \n   \tint length;//\u957f\u5ea6 \n   \tint funny;//\u5a31\u4e50\u5ea6 \n   \tint cost;//\u82b1\u8d39 \n}a[10001];\n//\u8fc7\u5c71\u8f66\u94c1\u8f68\u7684\u7ed3\u6784\u4f53.a[]\u4ee3\u8868\u94c1\u8f68\u7684\u8d44\u6599 \nbool cmp(Roller_Coaster x,Roller_Coaster y){\n   \treturn x.start<y.start;\n}\n//\u7528\u4e8esort()\u5feb\u6392 \nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n   \tstd::ios::sync_with_stdio(false);\n   \tint n,l,b;\n   \tcin>>l>>n>>b;//\u8bfb\u5165 \n   \tmemset(f,-999999,sizeof(f));//f[]\u521d\u59cb\u5316.\u6ce8\u610fmemst\u521d\u59cb\u5316\u5e76\u4e0d\u662f\u4f1a\u628a\u5b83\u4eec\u90fd\u8d4b\u503c\u4e3a\u5199\u7684\u503c(0,1\u9664\u5916),memset\u662f16\u8fdb\u5236\u5de5\u4f5c\u7684,\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u8f93\u51fa\u770b\u4e00\u4e0b\u7ed3\u679c.\u4f46\u65e0\u8bba\u5982\u4f55\u8fd9\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u503c. \n   \tfor1(i,1,n) cin>>a[i].start>>a[i].length>>a[i].funny>>a[i].cost;\n   \tsort(a+1,a+1+n,cmp);//\u6309\u8d77\u70b9\u6392\u5e8f \n   \tfor1(i,0,b)\n\t   \tf[0][i]=0;//f[]\u521d\u59cb\u5316 \n   \tfor1(i,1,n)\n\t   \tfor1(j,0,b)\n\t\t   \tif(j-a[i].cost>=0)\n\t\t\t   \tf[a[i].start+a[i].length][j]=max(f[a[i].start+a[i].length][j],f[a[i].start][j-a[i].cost]+a[i].funny);\n   \tif(f[l][b]<=0)\n\t   \tcout<<-1;//\u5982\u679c\u5728\u9884\u7b97\u4e3ab,l\u4e3a\u7ec8\u70b9\u65f6\u6700\u5927\u5feb\u4e50\u5ea6<=0,\u8bf4\u660e\u4e0d\u80fd\u653e\u94c1\u8f68,print(-1). \u6b64\u5904\u8981\u7279\u522b\u6ce8\u610f:\u4e00\u5b9a\u8981\u7279\u5224.\u4e0d\u52a0\u8fd9\u676180\u5206. \n   \telse\n\t   \tcout<<f[l][b];\n   \treturn 0;\n}   \n//2018 11 4\u5927\u5237\u9898,\u4f5c\u6b64\u7bc7.\u6b64\u7bc7\u672c\u4ebanoip2018\u524d\u6700\u540e\u4e00\u7bc7\u9898\u89e3,\u5237\u9898173\u9053,\u8c28\u4ee5\u6b64\u8bb0.\n```\n\nnoip2018 rp++!\n\n2018 11 10noip2018 \u795d\u5927\u5bb6\u597d\u8fd0,rp++.\n\n\u7801\u98ce\u52ff\u55b7\n\n\u8349\u539f\u98de\u98de\u7f8a \u4e8e2018 11 4 18:26",
        "postTime": 1541302921,
        "uid": 89934,
        "name": "\u8349\u539f\u98de\u98de\u7f8a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "## 1.\u9898\u610f\u7406\u89e3\n\n\u5bf9\u4e8e $0$ ~ $L$ \u7684\u8f68\u9053\u4e2d\uff0c\u586b\u6ee1\u6240\u6709\u6bb5\u8f68\u9053\uff0c\u4e14\u4fdd\u8bc1\u82b1\u8d39\u90fd\u5728 $B$ \u4e4b\u5185\uff0c\u6c42\u6700\u5927\u7684\u6536\u83b7\u503c\u3002\n\n## 2.\u5206\u6790\n\u8fd9\u9053\u9898\u7b2c\u4e00\u773c\u770b\u53bb\u5c31\u662f\u4e00\u9053\u80cc\u5305\u7c7b\u578b\u7684\u52a8\u89c4\u9898\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u591a\u4f59\u7684\u6761\u4ef6\uff0c\u5c31\u662f\u8981\u94fa\u6ee1 $[0,L]$ \u8fd9\u4e2a\u533a\u95f4\u3002\u6240\u4ee5\u6211\u4eec\u8981\u989d\u5916\u6dfb\u52a0\u4e00\u4e2a\u7ef4\u5ea6\u3002\n\n \u4ee5\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\n\n $f[end][j+c_i]= \\max (f[start][j]+f,f[end][j+ci])$ \n\n $f[i][j]$\t\u5176\u4e2d $i$ \u8868\u793a\u7b2c $i$ \u6bb5\u94c1\u8f68\uff0c$j$ \u8868\u793a\u5df2\u7ecf\u4f7f\u7528\u4e86\u591a\u5c11\u94b1\u3002\n\n## \u8be6\u89e3\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nint L,n,B;\nstruct line\n{\n\tint st,w,ed,f,c;\n}a[10001];\nint f[1001][10001];\nbool cmp(line a,line b)\n{\n\treturn a.st<b.st;\n}\nint main()\n{\n\tcin>>L>>n>>B;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i].st>>a[i].w>>a[i].f>>a[i].c;\n\t\ta[i].ed=a[i].st+a[i].w;\n\t}\t//\u5904\u7406\u8f93\u5165\n\tsort(a+1,a+n+1,cmp);\t\n   // \u6392\u5e8f\uff0c\u4fdd\u8bc1\u8d77\u70b9\u5728\u524d\u7684\u9996\u5148\u88ab\u4f7f\u7528\n   // \u5426\u5219\u4f1a\u51fa\u73b0\u95ee\u9898\n   // \u5982\u6570\u636e\t3 2 3\n   // \t\t   1 2 1 1\n   //\t\t   0 1 1 1\n   // \u8fd9\u4f1a\u4f7f\u5148\u5c1d\u8bd5\u7b2c\u4e00\u7ec4\uff0c\u5bfc\u81f4\u7b2c\u4e00\u7ec4\u65e0\u6cd5\u4f7f\u7528\uff0c\u539f\u56e0\u5f80\u4e0b\u770b\n\tmemset(f,-1,sizeof(f));\n\tf[0][0]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint b=B-a[i].c;\n\t\tfor(int j=0;j<=b;j++)\n\t\t{\n\t\t\tif(f[a[i].st][j]!=-1)\n            //\t\u5c31\u662f\u8fd9\u91cc\uff0c\u4e3a\u4ec0\u4e48\u5fc5\u987b\u8981\u9996\u5148\u6392\u6309\u7167\u8d77\u59cb\u70b9\u987a\u5e8f\u6392\u5e8f\n            //  \u5982\u679c\u51fa\u73b0\u8d77\u59cb\u70b9\u57282\uff0c\u4f46\u662f\u524d\u9762\u6ca1\u6709\u51fa\u73b0\u8fc7\u7ed3\u675f\u70b9\u4e3a2\n            // \u8fd9\u65f6\u5c31\u4f1a\u88ab\u8ba4\u4e3a\uff0c\u5982\u679c\u8fd9\u6bb5\u88ab\u6446\u4e0a\u53bb\uff0c\u90a3\u4e48\u94c1\u8def\u4e0d\u4f1a\u88ab\u5b8c\u6574\u7684\u4fee\u5b8c\n            //ps\uff1a\u94c1\u8def\u662f\u4e0d\u80fd\u91cd\u53e0\u6446\u653e\u7684\n                                               \n\t\t\t\tf[a[i].ed][j+a[i].c]=max(f[a[i].ed][j+a[i].c],f[a[i].st][j]+a[i].f);\n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=B;i++)ans=max(ans,f[L][i]);\n\tif(ans>0)cout<<ans;\n\telse\tcout<<-1;\n\treturn 0;\n}\n```",
        "postTime": 1643290744,
        "uid": 567632,
        "name": "\u671b\u6708\u91ceQwQ",
        "ccfLevel": 4,
        "title": "P2854 \u9898\u89e3"
    },
    {
        "content": "### P2854 \n\n\u6709 n \u6761\u7ebf\u6bb5\uff0c\u6bcf\u6761\u7ebf\u6bb5\u53ea\u80fd\u653e\u5728\u6570\u8f74\u4e0a\u7684\u4e00\u4e2a\u7279\u5b9a\u4f4d\u7f6e\uff0c\u73b0\u5728\u8ba9\u4f60\u4ece\u4e2d\u9009\u51fa\u4e00\u4e9b\u7ebf\u6bb5\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u7ebf\u6bb5\u80fd\u591f\u94fa\u6ee1\u6570\u8f74\u4e0a\u7684\u533a\u95f4\uff0c\u5e76\u4e14\u6240\u82b1\u8d39\u7528\u548c\u4e0d\u8d85\u8fc7 B\uff0c\u540c\u65f6\u8981\u4f7f\u4f60\u6536\u83b7\u7684\u4ef7\u503c\u5c3d\u91cf\u5927\u3002\n\n\u4e00\u9053\u7ecf\u5178\u7684dp\u95ee\u9898\u3002\u80cc\u5305\u7684\u601d\u60f3\u3002\u5176\u5b9e\u4e5f\u6709\u8d2a\u5fc3\u3002\n\n\u849f\u84bb\u8003\u524d\u5199\u4e00\u7bc7\u9898\u89e3\uff08\u6709\u751f\u4e4b\u5e74\u7684\u7b2c\u4e00\u7bc7\uff09\uff0c\u8c28\u4ee5\u6b64\u7eaa\u5ff52021noip\u7684\u5230\u6765\u3002\n\n**\u601d\u8def\u6765\u6e90\u4e8eczdalao** [@crosaa](https://www.luogu.com.cn/user/477676) \n(((cztql\uff01\uff01\uff01\uff01\uff01\n\n~~\u4e8e\u662f\u5c31\u4ea7\u751f\u4e86\u849f\u84bb\u7684\u6700\u4f18\u89e3~~ 25ms\n***\n\n\u505a\u6cd5\u533a\u522b\u4e8e\u5176\u4ed6\u9898\u89e3\u3002\n\n\u5148\u5bf9\u6240\u6709\u533a\u95f4**\u6309\u53f3\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f**\n\n\u7528\u4e24\u4e2a\u6570\u7ec4\u50a8\u5b58**\u72b6\u6001**\uff1a\n\n**f[ i ] \u8868\u793a\u94fa\u5230\u7b2ci\u4e2a\u5355\u4f4d\u957f\u5ea6\u7684\u6700\u5927\u4ef7\u503c**\n\n**g[ i ] \u8868\u793a\u72b6\u6001f[ i ]\u5bf9\u5e94\u7684\u6700\u5c0f\u82b1\u8d39**\n\n**\u521d\u59cb\u5316**\uff1a \n\nf[ ] \u521d\u59cb\u5316\u4e3a\u8d1f\u65e0\u7a77 g[ ]\u521d\u59cb\u5316\u4e3a\u6b63\u65e0\u7a77\n\n\u5f53\u94fa\u5230\u7b2c0\u4e2a\u5355\u4f4d\u957f\u5ea6\u65f6\u7684\u4ef7\u503c\u548c\u82b1\u8d39\u90fd\u662f0, \u56e0\u6b64```f[0]=g[0]=0 ```\n\n**\u72b6\u6001\u8f6c\u79fb**\uff1a\n\n\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\uff0c\u8fd9\u91cc\u7528\u7ed3\u6784\u4f53\u50a8\u5b58\u6bd4\u8f83\u65b9\u4fbf\u4e00\u4e9b\u3002\n\n\u5982\u679c\u4f7f\u7528\u8fd9\u5757\u6728\u677f\u53ef\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u4ef7\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u66f4\u65b0\u5b83\uff0c\u5e76\u4e14\u66f4\u65b0\u5b83\u6240\u5bf9\u5e94\u7684\u4ee3\u4ef7\n\n```cpp\n\t\tif(f[e[i].ed]<f[e[i].st]+e[i].w){\n\t\t\tf[e[i].ed]=f[e[i].st]+e[i].w;\n\t\t\tg[e[i].ed]=g[e[i].st]+e[i].c;\n\t\t}\n```\n\n\u5982\u679c\u4f7f\u7528\u8fd9\u5757\u6728\u677f\u4e0e\u4e0d\u4f7f\u7528\u5b83\u4ef7\u503c\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53d6\u6700\u5c0f\u7684\u4ee3\u4ef7\uff0c\u66f4\u65b0g[]\n\n```cpp\n\t\telse if(f[e[i].ed]==f[e[i].st]+e[i].w){\n\t\t\tg[e[i].ed]==min(g[e[i].ed],g[e[i].st]+e[i].c);\n\t\t}\n```\n\n\u6ce8\u610f\u6392\u9664\u4e0d\u5408\u6cd5\u72b6\u6001\uff0c\u5982\u679c\u4e4b\u524d\u7684\u4ee3\u4ef7\u52a0\u4e0a\u8fd9\u5757\u6728\u677f\u7684\u4ee3\u4ef7\u5927\u4e8em\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u8fc7\n\n```cpp\n\t\tif(g[e[i].st]+e[i].c>m) continue;\n```\n\u6700\u540e\u5224\u65ad\u4e00\u4e0b f[l] \u662f\u5426\u6709\u5408\u6cd5\u89e3\u5c31\u597d\u4e86\n\n\n\n### \u4ee3\u7801\n\n```cpp\nint read(){}\nconst int N=20510;\nint l,n,m,f[N],g[N];\n\nstruct node{\n\tint st,len,w,c,ed;\n}e[N];\n\nbool cmp(node x,node y){\n\treturn x.ed<y.ed;\n}\nint main(){\n\tl=read(), n=read(), m=read();\n\tfor(int i=1;i<=n;i++){\n\t\te[i].st=read(), e[i].len=read();\n\t\te[i].w=read(), e[i].c=read();\n\t\te[i].ed=e[i].st+e[i].len;\n\t}\n\tsort(e+1,e+1+n,cmp); //\u6392\u5e8f\n\tmemset(f,-0x3f,sizeof f);\n\tmemset(g, 0x3f,sizeof g);\n\tf[0]=0;g[0]=0; //\u521d\u59cb\u5316\n\tfor(int i=1;i<=n;i++){\n\t\tif(g[e[i].st]+e[i].c>m) continue; //\u4e0d\u5408\u6cd5\u72b6\u6001\n\t\tif(f[e[i].ed]<f[e[i].st]+e[i].w){ //\u66f4\u4f18\u4ef7\u503c\n\t\t\tf[e[i].ed]=f[e[i].st]+e[i].w; //\u4ee3\u4ef7\u548c\u82b1\u8d39\u90fd\u8981\u66f4\u65b0\n\t\t\tg[e[i].ed]=g[e[i].st]+e[i].c;\n\t\t}\n\t\telse if(f[e[i].ed]==f[e[i].st]+e[i].w){ //\u4ef7\u503c\u76f8\u540c \u53d6\u6700\u5c0f\u4ee3\u4ef7\n\t\t\tg[e[i].ed]==min(g[e[i].ed],g[e[i].st]+e[i].c);\n\t\t}\n\t\t\n\t}\n\tif(f[l]>0)\tprintf(\"%d\",f[l]);\n\telse printf(\"-1\"); //\u65e0\u89e3\n\treturn 0;\n}\n\n//\u5e0c\u671b\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u901a\u8fc7\n```\n\n***\n2021noip rp++\n\n",
        "postTime": 1637333439,
        "uid": 380475,
        "name": "Genevieve_xiao",
        "ccfLevel": 4,
        "title": "P2854 Cow Roller Coaster S \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u7b97\u662f\u4e00\u4e2a\u80cc\u5305\u95ee\u9898\n\n\u5927\u6982\u7684\u601d\u8def\u662f\uff0c\u4e4d\u770b\u4e00\u773c\u9898\u76ee\u91cc\u6709\u94a2\u8f68\u6570\u76een\uff0c\u957f\u5ea6l\uff0c\u548c\u82b1\u8d39b\u4e09\u79cd\u7ef4\u5ea6\u7684\u53d8\u91cf\uff0c\u4f5c\u4e3a\u80cc\u5305\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u8981\u4ece\u4e2d\u9009\u53d6\u51e0\u4e2a\u4f5c\u4e3a\u8bbe\u8ba1\u7684\u72b6\u6001\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u53d1\u73b0\u4e09\u4e2a\u90fd\u9009\u80af\u5b9a\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u53d1\u73b0\u9898\u76ee\u7684\u95ee\u9898\u662f\u4fee\u5efa\u957f\u5ea6\u4e3al\u7684\u94c1\u8def\uff0c\u5e76\u4e14\u8fd8\u7ed9\u51fa\u4e86\u6bcf\u6839\u94a2\u8f68\u7684\u8d77\u70b9\u548c\u957f\u5ea6\uff0c\u90a3\u4e48\u957f\u5ea6l\uff08\u6216\u8005\u4f4d\u7f6e\uff09\u5c31\u5fc5\u987b\u4f5c\u4e3a\u72b6\u6001\u91cc\u7684\u7ef4\u5ea6\u4e4b\u4e00\u3002\u53c8\u56e0\u4e3a\u82b1\u8d39b\u5fc5\u987b\u4f5c\u4e3a\u7ef4\u5ea6\u4e4b\u4e00\uff0c\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u94c1\u8f68\u6570\u76een\u5982\u679c\u4f5c\u4e3a\u4e00\u4e2a\u72b6\u6001\u7ef4\u5ea6\u7684\u8bdd\u5c31\u65e2\u4e0d\u597d\u8f6c\u79fb\u4e5f\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u51fa\u4e00\u4e2a\u8fd9\u6837\u7684dp\u6570\u7ec4\uff1adp[i][j]\u8868\u793a\u5728\u6b63\u597d\u82b1\u8d39\u4e3ai\u7684\u60c5\u51b5\u4e0b\u4fee\u5efa\u4ece0-j\u7684\u94c1\u8def\u7684\u6700\u5927\u6709\u8da3\u503c\u3002\n\n\u5f88\u5bb9\u6613\u5f97\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff0cdp[i][j]=max(dp[i][j],a[k].f+dp[i-a[k].c][j-a[k].w])\n\n\u4e0a\u9762\u5f0f\u5b50\u91cc\u7684k\u8868\u793a\uff0c\u56e0\u4e3a\u6211\u4eec\u76ee\u524d\u7684\u94c1\u8def\u662f\u4fee\u5230j\u4f4d\u7f6e\u7684\u6240\u4ee5\u81ea\u7136\u76ee\u524d\u7528\u7684\u8fd9\u5757\u94c1\u8f68\u5c31\u8981\u5728j\u7ed3\u675f\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u679a\u4e3e\u94c1\u8f68\u7f16\u53f7k\uff0c\u5982\u679c\u679a\u4e3e\u5230\u7684\u94c1\u8f68\u6b63\u597d\u5728k\u7ed3\u675f\u90a3\u4e48\u5c31\u53ef\u4ee5\u8fdb\u884c\u8f6c\u79fb\u4e86\u3002\n\n\u8fd9\u91cc\u8fd8\u8981\u6ce8\u610f\u4e00\u70b9\uff1ak\u7684\u8303\u56f4\u5982\u679c\u662f\u4ece1-n\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u8d85\u65f6\u3002\u4e8e\u662f\u505a\u8fd9\u6837\u7684\u4f18\u5316\uff1a\u5148\u6309\u7167\u6bcf\u6761\u94c1\u8f68\u7684\u7ec8\u70b9\u8fdb\u884c\u6392\u5e8f\u6bcf\u6b21\u9700\u8981\u8f6c\u79fb\u7684\u65f6\u5019\u4ece\u8fde\u7eed\u7684\u91cd\u70b9\u6b63\u597d\u662fj\u7684\u94c1\u8f68\u91cc\u53d6\u7528\u5373\u53ef\u3002\u8fd9\u90e8\u5206\u7684\u7ec6\u8282\u5177\u4f53\u5b9e\u73b0\u5728\u4ee3\u7801\u91cc\uff0c\u7ed9\u4e86\u6ce8\u91ca\u3002\n\n\u53e6\u5916\u8fd8\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u5c31\u662f\u67d0\u4e9b\u72b6\u6001\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u4e0d\u53ef\u4ee5\u7531\u4ed6\u4eec\u8f6c\u79fb\u800c\u6765\uff08\u5c31\u662f\u8fd9\u91cc\u5982\u679c\u4e0d\u6ce8\u610f\u5230\u53ea\u670930\u5206\uff09\u3002\u9996\u5148\u6bcf\u4e00\u79cd\u72b6\u6001\u5bf9\u5e94\u7684\u7684\u94c1\u8f68\u4fee\u5efa\u65b9\u5f0f\u5fc5\u987b\u4ece0\u5f00\u59cb\uff08\u8fd9\u53e5\u8bdd\u6709\u4e9b\u7ed5\uff09\n\n\u5927\u6982\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u5c31\u662f\u6bd4\u5982\u8fd9\u79cd\u4fee\u5efa\u65b9\u5f0f\u5c31\u662f\u4e0d\u5408\u6cd5\u7684\uff1a\n\n\uff081\uff0c2\uff09-\uff082\uff0c3\uff09-\uff083\uff0c4\uff09\n\n\u800c\u8fd9\u79cd\u4fee\u5efa\u65b9\u5f0f\u662f\u5408\u6cd5\u7684\n\n\uff080\uff0c1\uff09-\uff081\uff0c2\uff09-\uff082\uff0c3\uff09-\uff083\uff0c4\uff09\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u90a3\u4e9b\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\u7528-1\u6765\u8868\u793a\uff0c\u521d\u59cb\u503c\u662fdp[0][0]=0\uff0c\u5176\u4ed6\u7684\u90fd\u662f-1\u3002\u6bcf\u6b21\u53ea\u80fd\u4ece\u521d\u59cb\u503c\u4e0d\u662f-1\u7684\u5730\u65b9\u8f6c\u79fb\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,dp[2001][2001]={-1},ans=-1,l,b,s[10001]={0},cnt=0;\nstruct cow{\n\tint x,w,f,c,e;\n}a[200001];\nbool cmp(cow a,cow b){\n\treturn a.e<b.e;\n}\nint main(){\n\tfor(int i=0;i<=2000;i++)for(int j=0;j<=2000;j++)dp[i][j]=-1;\n\tcin>>l>>n>>b;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i].x>>a[i].w>>a[i].f>>a[i].c;\n\t\ta[i].e=a[i].x+a[i].w;\n\t}\n\tsort(a+1,a+n+1,cmp);\n\tdp[0][0]=0;\n\tfor(int i=1;i<=n;i++)s[a[i].e]=i;//\u7528s\u6570\u7ec4\u8bb0\u5f55s[i]\u8868\u793a\u6392\u5e8f\u540e\u7684a\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u7ec8\u70b9\u4e3aa[i].e\u7684\u94c1\u8f68\u7f16\u53f7\u662f\u591a\u5c11\uff0c\u56e0\u4e3a\u6392\u5e8f\u4e86\uff0c\u6240\u4ee5\u4fdd\u8bc1\u7ec8\u70b9\u4e3a\u4e00\u4e2a\u5b9a\u503c\u7684\u94c1\u8f68\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\n\tfor(int i=1;i<=b;i++){\n\t\tfor(int j=1;j<=l;j++){\n\t\t\tfor(int k=s[j];k>=1;k--){\n\t\t\t\tif(a[k].e!=a[s[j]].e)break;\n\t\t\t\tif(i>=a[k].c&&j-a[k].w==a[k].x&&dp[i-a[k].c][j-a[k].w]!=-1){dp[i][j]=max(dp[i][j],a[k].f+dp[i-a[k].c][j-a[k].w]);}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=b;i++)ans=max(ans,dp[i][l]);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1595851597,
        "uid": 141251,
        "name": "\u6c6a\u9e23\u8c26",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]Cow Roller Coaster S\u3011"
    },
    {
        "content": "## DP + Vector\n\n\n\u6b64\u9898\u6709\u4e00\u70b9\u50cf\u80cc\u5305\u95ee\u9898\uff0c\u4f46\u662f\uff0c\u6709\u4e00\u70b9\u4e0d\u540c\u3002\n\n\u80cc\u5305\u95ee\u9898\u53ea\u9700\u8981\u627e\u51fa\u6240\u6709\u7269\u54c1\u88c5\u53d1\u7684\u6700\u5927\u503c\uff0c\u6b64\u9898\u8981\u6c42\u8f68\u9053\u5fc5\u987b\u4ece0\u63a5\u5230l\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u9053\u9898\u5728\u80cc\u5305\u95ee\u9898\u4e0a\u52a0\u4e86\u4e00\u4e2a\u9650\u5236\u3002\n\n\u89e3\u6cd5\u548c\u80cc\u5305\u95ee\u9898\u7c7b\u4f3c\u3002\n\n$dp(i,j)$ \u8868\u793a\u8f68\u9053\u4ece0\u63a5\u5230i\uff0c\u62e5\u6709j\u94b1\u7684\u6700\u5927\u503c\u3002\n\n\u4e0d\u96be\u5f97\u51fa\uff0c$dp(i,j)$ \u53ea\u80fd\u4ece\u67d0\u4e00\u4e2a\u7ec8\u70b9\u4e3ai\u7684\u8f68\u9053\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u6240\u4ee5\uff0c$dp(i,j) = \\max(dp[pos[k]][j-c[k]] + f[k])$\u3002\n\n\u5176\u4e2d\uff0ck\u8868\u793a\u4e00\u4e2a\u7ec8\u70b9\u4e3ai\u7684\u8f68\u9053\u7684\u5b58\u50a8\u662f\u7684\u5750\u6807\uff08\u4e5f\u5c31\u662f\u8bfb\u5165\u65f6\u7b2c\u51e0\u4e2a\u8bfb\u5165\uff09\u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u6c42\u51fa\u8fd9\u4e2ak\u5462\uff1f\n\n\u663e\u7136\uff0c\u7ec8\u70b9\u4e3ai\u7684\u8f68\u9053\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528stl:vector\u6765\u5b58\u50a8\u3002\n\n\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u91cc\u9762\u5185\u5d4cvector\uff0c\u5b58\u50a8\u7ec8\u70b9\u4e3ai\u7684\u6240\u6709\u8f68\u9053\u7684\u5b58\u50a8\u5750\u6807\u3002\n\n### \u8fb9\u754c\u7ec6\u8282\n\n\u5982\u679c\u6309\u7167\u4e0a\u9762\u7684\u505a\u6cd5\u8fd8\u662f\u4f1a\u6709\u95ee\u9898\u3002\u56e0\u4e3a\u6709\u8fb9\u754c\u60c5\u51b5\u3002\n\n\u6211\u4eec\u8981\u627e\u7684\u5fc5\u987b\u662f\u4ece0\u63a5\u8fc7\u6765\u7684\u3002\n\n\u7136\u800c\u7531\u4e8edp\u6570\u7ec4\u521d\u59cb\u503c\u662f0\uff0c\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u53ef\u80fd\u8f6c\u79fb\u5230\u4e00\u4e2a\u5e76\u4e0d\u662f0\u4f4d\u8d77\u70b9\u7684\u72b6\u6001\u3002\n\n\u6bd4\u5982\u4e00\u4e2a\u8f68\u9053\u4ece1-3\u3002\u90a3\u4e48$dp(3,j)$\u4f1a\u8f6c\u79fb\u5230$dp(1,j-c[k])$\uff0c\u7136\u800c0\u5e76\u4e0d\u80fd\u52301\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u628adp\u6570\u7ec4\u521d\u59cb\u5316\u4e3a-1\uff0c\u8868\u793a\u8d70\u4e0d\u5230\uff0c\u5e76\u4e14$dp(0,j) = 0$\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65f6\u53ea\u8f6c\u79fb $dp$ \u6570\u7ec4\u975e0\u7684\u60c5\u51b5\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <map>\n#include <vector>\n#include <cstring>\nusing namespace std;\nconst int L = 1001,N = 10001,B = 1001;\nlong long dp[L][B];\nlong long l,n,b;\nlong long fun[N],c[N],x[N];\nstruct component\n{\n\tvector <int> start;\n}track[L];\ninline long long read()\t//\u5feb\u8bfb\u6a21\u677f\n{\n\tlong long ans = 0,f = 1;\n\tchar ch = getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch == '-') f = -1;\n\t\tch = getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tans = ans*10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn ans * f;\n}\nint main()\n{\n\tl=read(),n=read(),b=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tlong long w;\n\t\tx[i]=read(),w=read(),fun[i]=read(),c[i]=read();\n\t\ttrack[x[i]+w].start.push_back(i);\n\t}\n\tmemset(dp,-1,sizeof(dp));\n\tfor(register int i=1;i<=b;i++)\n\t\tdp[0][i] = 0;\n\tfor(register int i=1;i<=l;i++)\n\t{\n\t\tfor(register int j=0;j<=b;j++)\n\t\t{\n\t\t\tfor(register int k=0;k<track[i].start.size();k++)\n\t\t\t{\n\t\t\t\tint pos = track[i].start[k];\n\t\t\t\tif(j>=c[pos]&&dp[x[pos]][j-c[pos]]!=-1) //\u7279\u5224\n\t\t\t\t\tdp[i][j] = max(dp[i][j],dp[x[pos]][j-c[pos]]+fun[pos]);\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dp[l][b]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1582207768,
        "uid": 94605,
        "name": "\u674e\u82e5\u8c37",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "## P2854 USACO 06DEC Cow Roller Coaster\n\n### \u8fdb\u5165\u6b63\u9898\n### \u9898\u610f\n\n\u8981\u5efa\u9020\u4e00\u5ea7\u8fc7\u5c71\u8f66\uff0c\u7ed9\u51fa\u5efa\u9020\u9700\u8981\u7684\u96f6\u4ef6\u3002\u6bcf\u4e2a\u96f6\u4ef6\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u8d77\u59cb\u4f4d\u7f6e\u3001\u957f\u5ea6\u3001\u4e50\u8da3\u503c\u548c\u82b1\u8d39\u3002\u7ed9\u51fa\u8fc7\u5c71\u8f66\u7684\u957f\u5ea6\uff0c\u96f6\u4ef6\u7684\u6570\u91cf\uff0c\u603b\u5171\u7684\u9884\u7b97\uff0c\u8981\u6c42\u51fa\u5728\u9884\u7b97\u8303\u56f4\u5185\u9009\u51fa\u4e00\u4e9b\u96f6\u4ef6\uff0c\u4f7f\u603b\u7684\u4e50\u8da3\u503c\u6700\u5927\u3002\n\n------------\n\n### \u5206\u6790\n### \u4e8c\u7ef4\u80cc\u5305\u95ee\u9898\u3002\n\u8bbedp[i][j]\u8868\u793a\u5728i\u7684\u4f4d\u7f6e\u4fee\u5efa\u96f6\u4ef6\u82b1\u8d39\u4e3aj\u65f6\u6240\u83b7\u5f97\u7684\u6700\u5927\u4e50\u8da3\u503c\u3002\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3adp[com[i].x+com[i].w[j+com[i].c]>=dp[com[i].x][j]+com[i].f ~~\u770b\u7740\u6709\u70b9\u4e71~~\n\n\n------------\n### AC\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int x,w,f,c;\n}com[10005];\nint L,N,B,dp[1005][1005];\nbool cmp(node a,node b){\n    return a.x+a.w<b.x+b.w;\n}\nint main(){\n    while(cin>>L>>N>>B){\n        for(int i=0;i<N;i++)\n            cin>>com[i].x>>com[i].w>>com[i].f>>com[i].c;\n        sort(com,com+N,cmp);\n        memset(dp,-1,sizeof(dp));   \n        for(int i=0;i<=B;i++) dp[0][i]=0;\n        for(int i=0;i<N;i++)\n        for(int j=0;j<=B-com[i].c;j++){\n            if(dp[com[i].x][j]<0) continue;   \n            dp[com[i].x+com[i].w][j+com[i].c]=max(dp[com[i].x+com[i].w][j+com[i].c],dp[com[i].x][j]+com[i].f);\n        }\n        cout<<dp[L][B]<<endl;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1553780320,
        "uid": 121784,
        "name": "zyc____",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "**\u8bb0\u5fc6\u5316\u641c\u7d22**\n\nx\u8868\u793a\u641c\u5230\u4f4d\u7f6ex\n\nmoney\u662f\u5f53\u524d\u7528\u7684\u94b1\n\nID\u662f\u5f53\u524d\u5728\u94c1\u8f68\u4e2d\u7684\u4f4d\u7f6e\u4f18\u5316\n\n\u5f53\u94b1\u7528\u5b8c\u5c31\u8bf4\u660e\uff0c\u5230\u4e0d\u4e86\u7ec8\u70b9\uff0c\u8fd4\u56de\u4e00\u4e2a\u6781\u5c0f\u503c\n\n\u6700\u540e\u5f53ans\u4e3a\u8d1f\uff0c\u8bf4\u660e\u5230\u4e0d\u4e86\uff0c\u76f4\u63a5\u8f93\u51fa-1\n\n```cpp\n#include<bits/stdc++.h>\n#define rg register\n#define int long long\nusing namespace std;\nint l,n,b,d[10010][1010],ans;\nstruct node{\n\tint x,len,v,w;\n}a[10000];\nbool operator < (const node a,const node b){\n\treturn a.x<b.x;\n}\ninline int read(){\n\trg char ch=getchar();\n\trg int x=0,f=0;\n\twhile(ch<'0'||ch>'9') f|=(ch=='-'),ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn f?-x:x;\n}\nint dfs(int x,int money,int id){\n\tif(d[x][money])return d[x][money];\n\tif(money>=b) return -0x3f3f3f3f;\n\tif(x>=l) return 0;\n\tint value=-0x3f3f3f3f;\n\tfor(int i=id;i<=n;++i){\n\t\tif(a[i].x>x)break;\n\t\tif(a[i].x==x)\n\t\t\tvalue=max(dfs(x+a[i].len,money+a[i].w,i)+a[i].v,value);\n\t}\n\td[x][money]=value;\n\treturn value;\n}\nsigned main()\n{\n\tl=read(),n=read(),b=read();\n\tfor(rg int i=1;i<=n;++i){\n\t\ta[i].x=read(),a[i].len=read(),a[i].v=read(),a[i].w=read();\n\t}\n\tsort(a+1,a+1+n);//\u4f18\u5316\u641c\u7d22\u987a\u5e8f\n\tint ans=dfs(0,0,1);\n\tif(ans<=0)printf(\"-1\");\n\telse\n\tprintf(\"%lld\",ans);\n\treturn 2333;\n}\n```",
        "postTime": 1545830192,
        "uid": 121618,
        "name": "Accoty_AM",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u80cc\u5305\uff0c\u6ce8\u610ftop\u5e8f\u3002\n\n\u53e6\u6b64\u9898\u9700\u5224\u65ad\u53ef\u884c\u6027\uff0c\u5373\u8be5\u72b6\u6001\u662f\u5426\u53ef\u4ee5\u8fbe\u5230\u3002\n\n\u5c06f\u6570\u7ec4\u7f6e-1\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint i,j,l,n,b,ans=-1;\nint f[1001][1001];\nstruct ele\n{\n    int start, end, value, weight;\n} a[10001];\nint comp(ele a, ele b)\n{\n    return a.start<b.start;\n}\nint main()\n{\n    memset(f,-1,sizeof(f));\n    f[0][0]=0;\n    scanf(\"%d%d%d\",&l,&n,&b);\n    for (i=1; i<=n; i++)      \n    {\n        scanf(\"%d%d%d%d\",&a[i].start,&a[i].end,&a[i].value,&a[i].weight);\n        a[i].end+=a[i].start;\n    }\n    sort(a+1,a+n+1,comp);\n    for (i=1; i<=n; i++)\n      for (j=b; j>=a[i].weight; j--)\n        if (f[a[i].start][j-a[i].weight]>=0)\n          f[a[i].end][j]=max(f[a[i].end][j],f[a[i].start][j-a[i].weight]+a[i].value);\n    for (i=1; i<=b; i++)\n      ans=max(ans,f[l][i]);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1477657462,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2854 \u3010[USACO06DEC]\u725b\u7684\u8fc7\u5c71\u8f66Cow Roller Coaster\u3011"
    }
]