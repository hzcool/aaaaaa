[
    {
        "content": "### \u9898\u76ee\u5206\u6790\uff1a\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811\uff0c\u77e9\u9635\u3002\n\n\u4e00\u4e2a\u76f4\u89c2\u7684\u611f\u53d7\uff0c\u6574\u4e2a\u5b57\u7b26\u4e32\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u662f\u5339\u914d\u7684\u3002\u6211\u4eec\u6bcf\u6b21\u52a0\u5165\u7684\u65f6\u5019\u53ea\u7528\u8003\u8651\u5f53\u524d\u52a0\u5165\u7684\u62ec\u53f7\u5bf9\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u5f71\u54cd\u3002\n\n\u6211\u4eec\u8bb0 $p$ \u4e3a\u5f53\u524d\u5b57\u7b26\u4e32\u6700\u591a\u53ef\u4ee5\u5206\u5272\u6210\u62ec\u53f7\u5339\u914d\u7684\u5b50\u4e32\u7684\u6570\u91cf\u3002\n\n- \u5bf9\u4e8e\u64cd\u4f5c $1$\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u65e0\u8bba\u8fd9\u5bf9\u62ec\u53f7\u52a0\u5230\u54ea\u4e2a\u5730\u65b9\uff0c\u524d\u534a\u90e8\u5206\u8d21\u732e\u548c\u540e\u534a\u90e8\u5206\u8d21\u732e\u548c\u603b\u662f $p+1$\uff08\u52a0\u4e0a\u81ea\u8eab\u7684\u8d21\u732e\uff09\u3002\u6b64\u65f6\uff0c\u6574\u4e2a\u5e8f\u5217\u53ef\u4ee5\u591a\u5206\u5272\u51fa\u4e00\u4e2a\u62ec\u53f7\u5339\u914d\u4e86\u7684\u5b50\u4e32\uff0c\u5373 $p$ \u66f4\u65b0\u6210 $p+1$\u3002\u8003\u8651\u5c06\u8f6c\u79fb\u5199\u6210\u77e9\u9635\u7684\u5f62\u5f0f\uff0c\u5373\uff1a$\\begin{bmatrix}1&0&0\\\\1&1&0\\\\1&1&1\\\\\\end{bmatrix}$\u3002\n\n\u5176\u4e2d\uff0c$(1,1)$ \u4ee3\u8868\u5e38\u91cf $1$\uff0c$(2,1)$ \u4ee3\u8868\u5f53\u524d\u8fde\u7eed\u64cd\u4f5c $1$ \u7684\u4e2a\u6570\uff0c$(2,2)$ \u4ee3\u8868\u662f\u5426\u52a0\u4e0a\u81ea\u8eab\u8d21\u732e\uff08\u5728\u5f53\u524d\u4ec5\u6709\u64cd\u4f5c $1$ \u4e2d\u662f\u6709\u7684\uff09\uff0c$(3,1)$ \u4ee3\u8868\u5f53\u524d\u7684\u7b54\u6848\uff0c$(3,2)$ \u4ee3\u8868 $p$\uff0c$(3,3)$ \u4ee3\u8868\u8fd9\u4e2a\u81ea\u589e\u91cf $1$\u3002\n\n- \u5bf9\u4e8e\u64cd\u4f5c $2$\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u540c\u7406\u5f97\u51fa\u4ee5\u4e0b\u77e9\u9635\uff1a$\\begin{bmatrix}1&0&0\\\\0&0&0\\\\1&1&1\\\\\\end{bmatrix}$\u3002\n\n\u56e0\u4e3a\u5728\u64cd\u4f5c $2$ \u65f6\uff0c\u672c\u8eab\u5c31\u662f\u8fde\u7eed $0$ \u4e2a\u64cd\u4f5c $1$\uff0c\u4e0d\u9700\u8981\u52a0\u4e0a\u81ea\u8eab\u8d21\u732e\u3002\n\n- \u5bf9\u4e8e\u64cd\u4f5c $3$:\n\n\u6211\u4eec\u53ea\u9700\u8981\u7ffb\u8f6c\u8fd9\u4e2a\u65f6\u95f4\u7684\u64cd\u4f5c\uff0c\u6539\u6210\u5355\u4f4d\u77e9\u9635\u6216\u6062\u590d\u5176\u5f62\u6001\u5c31\u884c\u3002\n\n\u6700\u540e\u7b54\u6848\u5de6\u4e58\u4e0a\u4e00\u4e2a $\\begin{bmatrix}1,1,1\\end{bmatrix}$\u3002\n\n\u4ee3\u8868\u521d\u59cb\u72b6\u6001\u3002\n\n\u81ea\u884c\u7406\u89e3\u4e00\u4e0b\u77e9\u9635\u4e58\u6cd5\u7684\u8f6c\u79fb\u8fc7\u7a0b\u3002\n\n\u7531\u4e8e\u77e9\u9635\u4e58\u6cd5\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u77e9\u9635\u4e58\u6cd5\u3002\n\n### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+10;\n//===\n\u7f3a\u7701\u6e90\n//===\nstruct Matrix{\n\tll a[4][4];\n\tint n,m;\n\tvoid init1(){a[1][1]=a[2][1]=a[2][2]=a[3][1]=a[3][2]=a[3][3]=1;n=m=3;}\n\tvoid init2(){a[1][1]=a[3][1]=a[3][2]=a[3][3]=1;n=m=3;}\n\tvoid init3(){a[1][1]=a[2][2]=a[3][3]=1;n=m=3;}\n\tvoid init4(){a[1][1]=a[1][2]=a[1][3]=1;n=1,m=3;}\n\tvoid init5(){memset(a,0,sizeof(a));}\n\tMatrix operator *(Matrix B){\n\t\tMatrix ans;ans.init5();ans.n=this->n;ans.m=B.m;\n\t\tassert(this->m==B.n);\n\t\tfor(int i=1;i<=ans.n;i++)\n\t\t\tfor(int j=1;j<=ans.m;j++)\n\t\t\t\tfor(int k=1;k<=this->m;k++)\n\t\t\t\t\tans.a[i][j]+=this->a[i][k]*B.a[k][j];\n\t\treturn ans;\n\t}\n};\nint n;\nint p[N],rot[N],did[N];\nstruct node{Matrix x;}tr[N<<2];\nvoid pushup(int rt){tr[rt].x=tr[rt<<1].x*tr[rt<<1|1].x;}\nvoid build(int rt,int l,int r){\n\tif(l==r){tr[rt].x.init5();tr[rt].x.init3();return void();}\n\tint mid=l+r>>1;\n\tbuild(rt<<1,l,mid);build(rt<<1|1,mid+1,r);\n\tpushup(rt);\n\treturn;\n}void change(int rt,int l,int r,int x,int opt){\n\tif(l==r){\n\t\ttr[rt].x.init5();\n\t\tif(opt<0)tr[rt].x.init3();\n\t\telse if(opt==1)tr[rt].x.init1();\n\t\telse tr[rt].x.init2();\n\t\treturn void();\n\t}int mid=l+r>>1;\n\tif(x<=mid)change(rt<<1,l,mid,x,opt);\n\telse change(rt<<1|1,mid+1,r,x,opt);\n\tpushup(rt);\n}\nint main(){\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=IO::readInt();Matrix Base;Base.init4();\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++){\n\t\tint opt=IO::readInt();\n\t\tif(opt==1)p[i]=rot[i]=i,did[i]=1,change(1,1,n,p[i],1);\n\t\telse if(opt==2)p[i]=rot[i]=i,did[i]=2,change(1,1,n,p[i],2);\n\t\telse rot[i]=IO::readInt(),p[i]=p[rot[i]],did[i]=-did[rot[i]],change(1,1,n,p[i],did[i]);\n\t\tprintf(\"%lld\\n\",(Base*tr[1].x).a[1][1]);\n\t}return 0;\n}\n```\n",
        "postTime": 1681900623,
        "uid": 511271,
        "name": "\u30c0\u6708",
        "ccfLevel": 5,
        "title": "P6864 [RC-03] \u8bb0\u5fc6"
    },
    {
        "content": "\u5b98\u65b9\u9898\u89e3\u8c8c\u4f3c\u633a\u9ebb\u70e6\u7684\uff0c\u7ed9\u4e00\u4e2a\u4e0d\u592a\u7528\u52a8\u8111\u5b50\u7684\u65b9\u6cd5\uff08\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u4efb\u4f55\u65f6\u523b\u8fd9\u4e2a\u62ec\u53f7\u4e32\u90fd\u662f\u5339\u914d\u7684\uff0c\u8fd9\u70b9\u663e\u800c\u6613\u89c1\n\n\u8003\u8651\u8fdb\u884c\u4e00\u4e8c\u64cd\u4f5c\u4ea7\u751f\u7684\u5f71\u54cd\n   \n\u8bb0\u540e\u7f00\u5339\u914d\u62ec\u53f7\u6570\u4e3a $cnt$\n   \n\u90a3\u4e48\u4e00\u64cd\u4f5c\u4f1a\u589e\u52a0 $cnt + 1$ \u4e2a\u5339\u914d\u62ec\u53f7\u4e32\uff0c$cnt$ \u4e5f\u4f1a\u589e\u52a0 $1$\n   \n\u4e8c\u64cd\u4f5c\u540e\uff0c\u663e\u7136\u6574\u4e2a\u4e32\u4f1a\u662f\u5339\u914d\u7684\uff0c\u90a3\u4e48\u4f1a\u589e\u52a0\u591a\u5c11\u4e2a\u524d\u7f00\u5339\u914d\u4e32\u5462\uff08\u9ed8\u8ba4\u4e0d\u662f\u6574\u4e2a\u4e32\uff09\uff1f\n   \n\u7b54\u6848\u662f\u6ca1\u6709\uff0c\u539f\u56e0\u662f\u52a0\u4e0a\u4e00\u4e2a\u5de6\u62ec\u53f7\u540e\u5339\u914d\u7684\u524d\u7f00\u62ec\u53f7\u4e32\uff0c\u539f\u6765\u7684\u6743\u503c\u548c\uff08\u4e5f\u5c31\u662f\u5de6\u62ec\u53f7\u4f5c\u4e3a $1$\uff0c\u53f3\u62ec\u53f7\u4f5c\u4e3a $-1$ \u7684\u548c\uff09\u662f $-1$\uff0c\u800c\u8fdb\u884c\u64cd\u4f5c\u524d\u7684\u62ec\u53f7\u5e8f\u5217\u662f\u5339\u914d\u7684\uff0c\u4e5f\u5c31\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u524d\u7f00\n   \n\u540c\u6837\u7684\uff0c\u4e5f\u4e0d\u4f1a\u589e\u52a0\u540e\u7f00\u5339\u914d\u4e32\uff0c\u5982\u679c\u6709\u5339\u914d\u540e\u7f00\u4e32\u7684\u8bdd\uff0c\u5220\u53bb\u6700\u540e\u52a0\u4e0a\u7684\u53f3\u62ec\u53f7\uff0c\u5f62\u6210\u7684\u539f\u6765\u7684\u540e\u7f00\u62ec\u53f7\u4e32\u7684\u6743\u503c\u5c31\u662f $1$\uff0c\u56e0\u4e3a\u539f\u6765\u7684\u4e32\u6574\u4e2a\u7684\u6743\u503c\u548c\u4e3a $0$\uff0c\u610f\u5473\u7740\u6709\u4e00\u4e2a\u524d\u7f00\u62ec\u53f7\u4e32\u7684\u6743\u503c\u548c\u4e3a\u8d1f\u6570\n   \n\u4e8e\u662f\u8fdb\u884c\u4e8c\u64cd\u4f5c $ans$ \u4f1a\u589e\u52a0 $1$\uff0c$cnt$ \u53d8\u4e3a $1$\n   \n\u6ce8\u610f\u5230\u4e24\u79cd\u64cd\u4f5c\u8f6c\u79fb\u7684\u5f71\u54cd\u53ef\u4ee5\u5199\u6210\u4e00\u4e2a $3 \\times 3$ \u7684\u77e9\u9635\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u662f\u8981\u7ef4\u62a4\u77e9\u9635\u8fde\u7eed\u4e58\u79ef\n   \n\u64a4\u9500\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5355\u70b9\u4fee\u6539\u4e00\u4e2a\u77e9\u9635\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u5168\u5c40\u77e9\u9635\u8fde\u4e58\u79ef\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7b80\u5355\u7ef4\u62a4\n\n\u540c\u6837\u4e5f\u5728 $O(n \\log n)$ \u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u4f46\u662f\u5e38\u6570\u5de8\u5927\n\n```cpp\n#include <cstdio>\n#define ll long long\nint n;\nint tag[200005],op[200005],p[200005];\n\nstruct M{\n\tll v[5][5];\n}A,B,C;\n\nM operator * (M a,M b){\n\tM c;\n\tfor(int i = 1;i <= 3;i++){\n\t\tfor(int j = 1;j <= 3;j++){\n\t\t\tc.v[i][j] = 0;\n\t\t\tfor(int k = 1;k <= 3;k++){\n\t\t\t\tc.v[i][j] += a.v[i][k] * b.v[k][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn c;\n}\n\nM tree[800005];\n#define ls (rt * 2)\n#define rs (rt * 2 + 1)\n\nvoid upload(int rt,int l,int r,int id,int tp){\n\tif(l == r){\n\t\tif(tp == 1) tree[rt] = A;\n\t\telse if(tp == 2) tree[rt] = B;\n\t\telse tree[rt] = C;\n\t\treturn;\n \t}\n \tint mid = l + r >> 1;\n \tif(id <= mid){\n \t\tupload(ls,l,mid,id,tp);\n\t}else{\n\t \tupload(rs,mid+1,r,id,tp);\n\t}\n\ttree[rt] = tree[ls] * tree[rs];\n}\n\nint main(){\n\tA.v[1][1] = A.v[2][1] = A.v[2][2] = A.v[3][1] = A.v[3][2] = A.v[3][3] = 1;\n\tA.v[1][2] = A.v[1][3] = A.v[2][3] = 0;\n\tB.v[1][1] = B.v[3][1] = B.v[3][2] = B.v[3][3] = 1;\n\tB.v[1][2] = B.v[1][3] = B.v[2][1] = B.v[2][2] = B.v[2][3] = 0;\n\tC.v[1][1] = C.v[2][2] = C.v[3][3] = 1;\n\tC.v[1][2] = C.v[1][3] = C.v[2][1] = C.v[2][3] = C.v[3][1] = C.v[3][2] = 0;\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i <= 4 * n;i++) tree[i] = C;\n\tfor(int i = 1;i <= n;i++){\n\t    scanf(\"%d\",&op[i]);\n\t    if(op[i] == 1){\n\t    \tp[i] = i;\n\t    \tupload(1,1,n,i,1);\n\t\t}else if(op[i] == 2){\n\t\t\tp[i] = i;\n\t\t\tupload(1,1,n,i,2);\n\t\t}else{\n\t\t\tscanf(\"%d\",&p[i]);\n\t\t\tp[i] = p[p[i]];\n\t\t\tif(tag[p[i]]){\n\t\t\t\ttag[p[i]] = 0;\n\t\t\t\tupload(1,1,n,p[i],op[p[i]]);\n\t\t\t}else{\n\t\t\t\ttag[p[i]] = 1;\n\t\t\t\tupload(1,1,n,p[i],3);\n\t\t\t}\n\t\t}\n\t\tM tmp;\n\t\ttmp.v[1][1] = tmp.v[1][2] = tmp.v[1][3] = 1;\n\t\ttmp.v[2][1] = tmp.v[2][2] = tmp.v[2][3] = tmp.v[3][1] = tmp.v[3][2] = tmp.v[3][3] = 0;\n\t\ttmp = tmp * tree[1];\n\t\tprintf(\"%lld\\n\",tmp.v[1][1]);\n \t}\n\treturn 0;\n}\n```\n",
        "postTime": 1623067722,
        "uid": 49776,
        "name": "chenxinyang2006",
        "ccfLevel": 0,
        "title": "P6864 \u9898\u89e3"
    },
    {
        "content": "### Preface\n\n~~\u6211\u80fd\u544a\u8bc9\u662f\u4f60\u6211\u628a\u6837\u4f8b\u770b\u9519 30 min \u6240\u4ee5\u8c03\u4e86 30 min \u5417~~\n\n### Problem\n\n\u9898\u610f\uff1a\u7ed9\u4e00\u4e2a\u521d\u59cb\u4e3a `()` \u7684\u62ec\u53f7\u4e32\uff0c\u4e09\u79cd\u64cd\u4f5c\uff1a\n\n+ \u62ec\u53f7\u4e32\u540e\u9762\u52a0\u4e00\u4e2a `()`\uff1b\n+ \u62ec\u53f7\u4e32\u6574\u4f53\u52a0\u4e00\u4e2a `()`\uff1b\n+ \u64a4\u9500\u67d0\u4e00\u6b21\u64cd\u4f5c\uff0c\u53ef\u4ee5\u64a4\u9500\u64a4\u9500\u64cd\u4f5c\u3002\n\n\u6bcf\u6b21\u64cd\u4f5c\u540e\u8f93\u51fa\u5339\u914d\u7684\u62ec\u53f7\u5b50\u4e32\u6570\u91cf\u3002\n\n$1 \\leq$ \u64cd\u4f5c\u6570 $n \\leq 2\\times 10^5$\u3002\n\n### Solution\n\n\u64a4\u9500\u64cd\u4f5c\u4e4d\u4e00\u770b\u6bd4\u8f83\u96be\u641e\uff0c\u6211\u4eec\u5148\u770b\u6ca1\u6709\u64a4\u9500\u64cd\u4f5c\uff0c\u4f46\u662f\u8981\u628a\u5904\u7406\u65b9\u5f0f\u6539\u6210\u6613\u4e8e\u64a4\u9500\u7684\u65b9\u5f0f\u3002\n\n> + Hint $1$\uff1a\u4efb\u610f\u65f6\u523b\u8be5\u62ec\u53f7\u4e32\u662f\u5339\u914d\u7684\u3002\n\n\u8bc1\u660e\uff1a\u64cd\u4f5c\u4e00\u548c\u64cd\u4f5c\u4e8c\u662f\u663e\u7136\u7684\u3002\u5bf9\u64cd\u4f5c\u4e09\uff0c\u53ef\u4ee5\u770b\u505a\u65f6\u95f4\u5012\u6d41\u5230\u4e4b\u524d\u67d0\u4e2a\u5339\u914d\u7684\u72b6\u6001\uff0c\u8df3\u8fc7\u4e00\u6b21\u64cd\u4f5c\uff0c\u63a5\u7740\u5b8c\u6210\u5269\u4e0b\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e5f\u662f\u5339\u914d\u7684\u3002\n\n---\n\n\u5047\u8bbe\u5f53\u524d\u62ec\u53f7\u4e32\u6700\u591a\u53ef\u4ee5\u5206\u5272\u4e3a $cnt$ \u4e2a\u5339\u914d\u7684\u62ec\u53f7\u4e32\uff08\u628a `(` \u770b\u6210 $1$\uff0c`)` \u770b\u6210 $-1$\uff0c\u8fd9\u53ef\u4ee5\u770b\u505a\u5171\u6709 $cnt$ \u4e2a\u524d\u7f00\u548c $=0$\uff09\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u62ec\u53f7\u4e32 $\\texttt{\\color{red}(())\\color{green}()\\color{blue}(()())}$\uff0c$cnt = 3$\uff0c\u6211\u7528\u4e0d\u540c\u989c\u8272\u6807\u6ce8\u4e86\u8fd9 $3$ \u4e2a\u4e0d\u540c\u7684\u5339\u914d\u7684\u62ec\u53f7\u4e32\u3002\n\n\u6211\u4eec\u8003\u8651\u64cd\u4f5c\u4e00\uff1a\u62ec\u53f7\u4e32\u53d8\u6210 $\\texttt{\\color{red}(())\\color{green}()\\color{blue}(()())\\color{orange}()}$\uff0c\u8fd9\u91cc\u5339\u914d\u7684\u62ec\u53f7\u4e32\u589e\u52a0\u4e86\uff1a\n\n+ $\\texttt{\\color{orange}()}$\n+ $\\texttt{\\color{blue}(()())\\color{orange}()}$\n+ $\\texttt{\\color{green}()\\color{blue}(()())\\color{orange}()}$\n+ $\\texttt{\\color{red}(())\\color{green}()\\color{blue}(()())\\color{orange}()}$\n\n\u5171 $cnt + 1 = 3 + 1 = 4$ \u4e2a\u5339\u914d\u7684\u62ec\u53f7\u4e32\uff0c\u540c\u65f6 $cnt$ \u4e5f\u589e\u52a0\u4e86 $1$\u3002\n\n\u5f62\u5f0f\u5316\u7684\uff0c\u8fd9\u5e26\u6765\u7684\u5f71\u54cd\u662f\uff1a$ans \\leftarrow ans + cnt + 1, cnt \\leftarrow cnt + 1$\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5bf9 $[ans, cnt, 1]$ \u4e58\u4e0b\u5217\u77e9\u9635\u6765\u63cf\u8ff0\u8fd9\u4e2a\u53d8\u5316\uff1a\n\n$$ \\begin{bmatrix}\n 1 & 0 & 0 \\\\\n 1 & 1 & 0 \\\\\n 1 & 1 & 1 \\\\\n\\end{bmatrix} $$\n\n\u540c\u7406\uff0c\u64cd\u4f5c\u4e8c\u5e26\u6765\u7684\u77e9\u9635\u662f\uff1a\n\n$$ \\begin{bmatrix}\n 1 & 0 & 0 \\\\\n 0 & 0 & 0 \\\\\n 1 & 1 & 1 \\\\\n\\end{bmatrix} $$\n\n\u90a3\u4e48\u64cd\u4f5c\u4e09\u4e5f\u5c31\u7b80\u5355\u4e86\uff0c\u53ea\u9700\u8981\u627e\u5230\u7a76\u7adf\u64a4\u9500\u4e86\u4ec0\u4e48\u64cd\u4f5c\uff0c\u7136\u540e\u628a\u5b83\u7ffb\u8f6c\u6210\u6b63\u5e38\u7684\u77e9\u9635\u6216\u8005\u5355\u4f4d\u77e9\u9635\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(M^3n \\log n)$\uff0c\u5176\u4e2d $M = 3$\u3002\n\n### Code\n\n```cpp\n#include <bits/stdc++.h>\n\nstruct Matrix {\n#define MAXM 4\n\tlong long a[MAXM][MAXM]; int n, m;\n\tMatrix () { memset(a, 0, sizeof(a)); }\n\tMatrix (int N, int M) : n(N), m(M) { \n\t\tmemset(a, 0, sizeof(a));\n\t}\n\tinline void printMat() {\n\t\tfor (int i = 1; i <= n; ++i) \n\t\t\tfor (int j = 1; j <= m; ++j) \n\t\t\t\tstd::cout << a[i][j] << \" \\n\"[j == m];\n\t}\n};\nconst Matrix unit(int N) {\n\tMatrix ans = Matrix(N, N);\n\tfor (int i = 1; i <= N; ++i) ans.a[i][i] = 1;\n\treturn ans;\n}\nMatrix operator * (const Matrix& a, const Matrix& b) {\n\tassert(a.m == b.n);\n\tMatrix c(a.n, b.m);\n\tfor (int k = 1; k <= a.m; ++k) \n\t\tfor (int i = 1; i <= a.n; ++i) \n\t\t\tfor (int j = 1; j <= b.m; ++j) \n\t\t\t\tc.a[i][j] += a.a[i][k] * b.a[k][j];\n\treturn c;\n}\n\nMatrix IN(1, 3), AD(3, 3), CU(3, 3), UN = unit(3);\ninline void inisM() {\n\tIN.a[1][1] = IN.a[1][2] = IN.a[1][3] = AD.a[1][1] = AD.a[2][1] = AD.a[2][2] = AD.a[3][1] = AD.a[3][2] = AD.a[3][3] = CU.a[1][1] = CU.a[3][1] = CU.a[3][2] = CU.a[3][3] = 1;\n}\n\n#define MAXN 200001\nint tp[MAXN], don[MAXN];\nMatrix a[MAXN << 2];\nvoid build(int l, int r, int pos = 1) {\n\tif (l == r) return (void)(a[pos] = UN);\n\tint mid = l + r >> 1, lc = pos << 1, rc = pos << 1 | 1;\n\tbuild(l, mid, lc), build(mid + 1, r, rc);\n\ta[pos] = a[lc] * a[rc];\n}\nvoid upd(int l, int r, int x, int pos = 1) {\n\tif (r < x || x < l) return;\n\tif (l == r) {\n\t\tif (tp[x] > 0) a[pos] = UN;\n\t\telse a[pos] = (tp[x] == -1 ? AD : CU);\n\t\ttp[x] *= -1;\n\t\treturn;\n\t}\n\tint mid = l + r >> 1, lc = pos << 1, rc = pos << 1 | 1;\n\tupd(l, mid, x, lc), upd(mid + 1, r, x, rc);\n\ta[pos] = a[lc] * a[rc];\n}\nint main() {\n\tinisM();\n//\tIN.printMat(), AD.printMat(), CU.printMat();\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(nullptr), std::cout.tie(nullptr);\n\tint M; std::cin >> M; build(1, M);\n\tfor (int i = 1, op; i <= M; ++i) {\n\t\tstd::cin >> op;\n\t\tif (op == 3) \n\t\t\tstd::cin >> op, upd(1, M, don[i] = don[op]);\n\t\telse tp[i] = -op, upd(1, M, don[i] = i);\n\t\tstd::cout << (IN * a[1]).a[1][1] << '\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1672283367,
        "uid": 419487,
        "name": "irris",
        "ccfLevel": 7,
        "title": "P6864 Solution"
    },
    {
        "content": "[\u6b22\u8fce\u5230\u6211\u7684\u535a\u5ba2\u9605\u8bfb\u672c\u6587\uff0c\u8c22\u8c22](https://www.cnblogs.com/crab-in-the-northeast/p/luogu-p6864.html)\u3002\n\n\u8bbe\u5f53\u524d\u62ec\u53f7\u4e32 $S$ \u4e2d\uff1a\n\n- \u5408\u6cd5\u62ec\u53f7\u975e\u7a7a **\u5b50\u4e32** \u6570\u91cf\u4e3a $\\mathrm{ans}$\u3002\n- \u5408\u6cd5\u62ec\u53f7\u975e\u7a7a **\u540e\u7f00\u5b50\u4e32** \u6570\u91cf\u4e3a $\\mathrm{cnt}$\u3002\n\n>  \u4f8b\uff1a $S = \\mathtt{()()}$\uff0c\u5219 $\\mathrm{ans} = 3$\uff0c$\\mathrm{cnt} = 2$\u3002\n\n\u8bbe $S$ \u8fdb\u884c\u4e00\u6b65\u64cd\u4f5c\u4e00\u540e\uff0c\u53d8\u4e3a\u62ec\u53f7\u4e32 $S_1 = \\overline{S\\mathtt{()}}$\uff0c\u76f8\u5e94\u53c2\u6570\u53d8\u4e3a $\\mathrm{ans}_1$ \u548c $\\mathrm{cnt}_1$\u3002\n\n\u73b0\u8bd5\u56fe\u627e\u5230 $\\mathrm{ans_1}$ \u548c $\\mathrm{ans}$\u3001$\\mathrm{cnt_1}$ \u548c $\\mathrm{cnt}$ \u7684\u5173\u7cfb\u3002\n\n\u4e0d\u96be\u53d1\u73b0 $\\mathrm{cnt_1 = cnt + 1}$\uff0c$\\mathrm{ans_1 = ans + cnt + 1}$\u3002\n\n\u518d\u8bbe $S$ \u8fdb\u884c\u4e00\u6b65\u64cd\u4f5c\u4e8c\u540e\uff0c\u53d8\u4e3a\u62ec\u53f7\u4e32 $S_2 = \\overline{\\mathtt ( S\\mathtt)}$\uff0c\u76f8\u5e94\u53c2\u6570 $\\mathrm{ans_2}$ \u548c $\\mathrm{cnt_2}$\u3002\n\n\u6211\u4eec\u8bd5\u56fe\u8bc1\u660e\uff0c**\u65b0\u589e\u7684\u5408\u6cd5\u62ec\u53f7\u975e\u7a7a\u5b50\u4e32\u53ea\u6709 $\\boldsymbol{S_2}$ \u672c\u8eab\u4e00\u4e2a\u3002**\n\n\u53cd\u8bc1\u6cd5\uff0c\u6211\u4eec\u8003\u8651\u6709\u6ca1\u6709\u53ef\u80fd\uff0c\u65b0\u52a0\u7684\u8fd9\u5bf9\u62ec\u53f7\u4e2d\u7684\u5de6\u62ec\u53f7\uff0c\u548c $S$ \u7684\u4e00\u6bb5\u524d\u7f00\u7ec4\u6210\u4e00\u6bb5\u5408\u6cd5\u62ec\u53f7\u5b50\u4e32\uff1f\n\n\u5f88\u660e\u663e\uff0c\u8fd9\u8981\u6c42 $S$ \u7684\u8fd9\u6bb5\u524d\u7f00\u4e2d\uff0c\u53f3\u62ec\u53f7\u6bd4\u5de6\u62ec\u53f7\u591a\u4e00\u4e2a\u3002\n\n\u4f46\u5728\u64cd\u4f5c\u7684\u53d8\u6362\u4e2d\uff0c\u5b57\u7b26\u4e32\u59cb\u7ec8\u662f\u5408\u6cd5\u62ec\u53f7\u4e32\u3002\u56e0\u6b64\uff0c$S$ \u4e0d\u53ef\u80fd\u5b58\u5728\u4e00\u6bb5\u53f3\u62ec\u53f7\u6bd4\u5de6\u62ec\u53f7\u591a\u7684\u524d\u7f00\u3002\n\n\u90a3\u6709\u65e0\u53ef\u80fd\uff0c\u65b0\u52a0\u7684\u8fd9\u5bf9\u62ec\u53f7\u4e2d\u7684\u53f3\u62ec\u53f7\uff0c\u548c $S$ \u7684\u4e00\u6bb5\u540e\u7f00\u7ec4\u6210\u4e00\u6bb5\u5408\u6cd5\u62ec\u53f7\u5b50\u4e32\uff1f\n\n\u8fd9\u8981\u6c42 $S$ \u7684\u8fd9\u6bb5\u540e\u7f00\u91cc\uff0c\u5de6\u62ec\u53f7\u6bd4\u53f3\u62ec\u53f7\u591a\u4e00\u4e2a\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u5c31\u610f\u5473\u7740 $S$ \u9664\u53bb\u8fd9\u6bb5\u540e\u7f00\u7684\u5269\u4f59\u90a3\u90e8\u5206\u524d\u7f00\uff0c\u53f3\u62ec\u53f7\u6bd4\u5de6\u62ec\u53f7\u591a\u4e00\u4e2a\uff08\u56e0\u4e3a\u6574\u4e2a\u62ec\u53f7\u4e32\u5de6\u53f3\u62ec\u53f7\u6570\u76f8\u7b49\uff09\uff0c\u6240\u4ee5\u540c\u6837\u4e0d\u53ef\u80fd\u3002\n\n\u90a3\u4e48\u65b0\u589e\u7684\u5408\u6cd5\u62ec\u53f7\u5b50\u4e32\u53ea\u6709 $S_2$ \u672c\u8eab\u4e00\u4e2a\u54af\u3002\n\n\u6240\u4ee5 $\\mathrm{cnt_2} = 1$\uff0c$\\mathrm{ans_2} = \\mathrm{ans} + 1$\u3002\n\n\u73b0\u5728\u8003\u8651\u64a4\u9500\u64cd\u4f5c\u3002\u53d1\u73b0\u64a4\u9500\u64cd\u4f5c\u5bf9 $\\mathrm{cnt}$ \u548c $\\mathrm{ans}$ \u7684\u53d8\u5316\u5e76\u4e0d\u5e73\u51e1\u3002\n\n\u7136\u540e\u8fd9\u91cc\u6709\u4e00\u4e2a\u6bd4\u8f83\u4e0d\u6734\u7d20\u7684\u60f3\u6cd5\u2026\u2026\u90a3\u5c31\u662f\u7528\u77e9\u9635\u523b\u753b\u4e0a\u9762\u4e24\u79cd\u64cd\u4f5c\u7684\u53d8\u6362\u3002\n\n\u523b\u753b\u8fd8\u662f\u8f83\u4e3a\u5bb9\u6613\u7684\uff1a\n$$\n\\begin{bmatrix}\n\\mathrm{ans} & \\mathrm{cnt} & \\mathrm{1}\n\\end{bmatrix} \\times\n\\begin{bmatrix}\n1 & 0 & 0\\\\\n1 & 1 & 0\\\\\n1 & 1 & 1\n\\end{bmatrix} = \n\\begin{bmatrix}\n\\mathrm{ans_1} & \\mathrm{cnt_1} & \\mathrm{1}\n\\end{bmatrix}\n$$\n\n$$\n\\begin{bmatrix}\n\\mathrm{ans} & \\mathrm{cnt} & \\mathrm{1}\n\\end{bmatrix} \\times\n\\begin{bmatrix}\n1 & 0 & 0\\\\\n0 & 0 & 0\\\\\n1 & 1 & 1\n\\end{bmatrix} = \n\\begin{bmatrix}\n\\mathrm{ans_2} & \\mathrm{cnt_2} & \\mathrm{1}\n\\end{bmatrix}\n$$\n\n\u90a3\u4e48\u7b54\u6848\u53ef\u4ee5\u770b\u505a\u521d\u59cb\u77e9\u9635 $\\begin{bmatrix}1 & 1 & 1\\end{bmatrix}$ \u7ecf\u8fc7\u4e00\u7cfb\u5217\u77e9\u9635\u4e58\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u3002\n\n\u90a3\u64a4\u9500\u662f\u4ec0\u4e48\uff1f\u9898\u76ee\u7684\u64a4\u9500\u8fd8\u53ef\u4ee5\u64a4\u9500\u4e00\u4e2a\u64a4\u9500\u64cd\u4f5c\uff0c\u770b\u8d77\u6765\u5f88\u9ad8\u7ea7\uff0c\u4f46\u5b83\u7684\u5f71\u54cd\u6700\u540e\u65e0\u975e\u90fd\u662f\uff1a\n\n- \u5c06\u67d0\u4e2a\u975e\u64a4\u9500\u64cd\u4f5c\uff08\u5373\u64cd\u4f5c\u4e00\u6216\u64cd\u4f5c\u4e8c\uff09\u4ece\u8fdb\u884c\u6539\u4e3a\u4e0d\u8fdb\u884c\u3002\n- \u5c06\u67d0\u4e2a\u975e\u64a4\u9500\u64cd\u4f5c\uff08\u5373\u64cd\u4f5c\u4e00\u6216\u64cd\u4f5c\u4e8c\uff09\u4ece\u4e0d\u8fdb\u884c\u6539\u4e3a\u8fdb\u884c\u3002\n\n\u4e0d\u8fdb\u884c\u64cd\u4f5c\u4e5f\u662f\u53ef\u4ee5\u523b\u753b\u51fa\u77e9\u9635\u7684\uff0c\u5373\u5355\u4f4d\u77e9\u9635 $\\begin{bmatrix}1 & 0 & 0 \\\\0 & 1 & 0 \\\\ 0 & 0  & 1\\end{bmatrix}$\u3002\n\n\u6240\u4ee5\u4efb\u4f55\u4e00\u4e2a\u64a4\u9500\u64cd\u4f5c\u90fd\u662f\u5c06\u4e00\u4e2a\u975e\u64a4\u9500\u64cd\u4f5c\u5bf9\u5e94\u7684\u77e9\u9635\u5355\u70b9\u4fee\u6539\uff0c\u8981\u4e48\u662f\u4ece\u64cd\u4f5c\u77e9\u9635\u4fee\u6539\u6210\u5355\u4f4d\u77e9\u9635\uff0c\u8981\u4e48\u662f\u4ece\u5355\u4f4d\u77e9\u9635\u4fee\u6539\u6210\u64cd\u4f5c\u77e9\u9635\u3002\n\n\u56e0\u6b64\u73b0\u5728\u53d8\u6210\u4e00\u4e2a\u5bf9\u77e9\u9635\u5355\u70b9\u4fee\u6539\uff0c\u6c42\u77e9\u9635\u5168\u5c40\u4e58\u6cd5\u7684\u95ee\u9898\u3002\u56e0\u4e3a\u77e9\u9635\u4e58\u6cd5\u6709\u7ed3\u5408\u5f8b\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u56e0\u4e3a\u77e9\u9635\u4e58\u6cd5\u6ca1\u6cd5\u5dee\u5206\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528\u5355 $\\log$ \u7684\u6811\u72b6\u6570\u7ec4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(K^3 n \\log n)$\uff0c\u5176\u4e2d $K = 3$\u3002\n\n```cpp\n/*\n * @Author: crab-in-the-northeast \n * @Date: 2023-05-15 16:06:19 \n * @Last Modified by: crab-in-the-northeast\n * @Last Modified time: 2023-05-15 19:15:26\n */\n#include <bits/stdc++.h>\n#define int long long\ninline int read() {\n    int x = 0;\n    bool f = true;\n    char ch = getchar();\n    for (; !isdigit(ch); ch = getchar())\n        if (ch == '-')\n            f = false;\n    for (; isdigit(ch); ch = getchar())\n        x = (x << 1) + (x << 3) + ch - '0';\n    return f ? x : (~(x - 1));\n}\ninline int ls(int p) {\n    return p << 1;\n}\ninline int rs(int p) {\n    return p << 1 | 1;\n}\n\nstruct phalanx {\n    int a[4][4];\n\n    phalanx () {\n        for (int i = 1; i <= 3; ++i)\n            for (int j = 1; j <= 3; ++j)\n                a[i][j] = 0;\n    }\n    phalanx (std :: vector <int> v) {\n        for (int i = 1; i <= 3; ++i)\n            for (int j = 1; j <= 3; ++j)\n                a[i][j] = v[(i - 1) * 3 + j - 1];\n    }\n\n    const phalanx operator * (const phalanx b) const {\n        phalanx ans;\n        for (int i = 1; i <= 3; ++i)\n            for (int j = 1; j <= 3; ++j)\n                for (int k = 1; k <= 3; ++k)\n                    ans.a[i][j] += a[i][k] * b.a[k][j];\n        return ans;\n    }\n};\n\nconst phalanx UNIT({1, 0, 0, 0, 1, 0, 0, 0, 1}), \n                OP1({1, 0, 0, 1, 1, 0, 1, 1, 1}),\n                OP2({1, 0, 0, 0, 0, 0, 1, 1, 1});\n\nconst int N = (int)2e5 + 5;\n\nstruct node {\n    int l, r;\n    phalanx ans;\n} t[N << 2];\n\ninline node con(node lef, node rgt) {\n    return (node){\n        l: lef.l,\n        r: rgt.r,\n        ans: lef.ans * rgt.ans\n    };\n}\n\ninline void up(int p) {\n    t[p] = con(t[ls(p)], t[rs(p)]);\n}\n\nvoid build(int p, int l, int r) {\n    if (l == r) {\n        t[p].l = t[p].r = l;\n        t[p].ans = UNIT;\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    build(ls(p), l, mid);\n    build(rs(p), mid + 1, r);\n    up(p);\n}\n\nvoid modify(int p, int x, int op) {\n    int l = t[p].l, r = t[p].r;\n    if (l == r) {\n        if (op == 1)\n            t[p].ans = OP1;\n        else if (op == 2)\n            t[p].ans = OP2;\n        else\n            t[p].ans = UNIT;\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if (x <= mid)\n        modify(ls(p), x, op);\n    else\n        modify(rs(p), x, op);\n    up(p);\n}\n\nint ops[N];\nint pos[N];\n\nsigned main() {\n    int n = read();\n    build(1, 1, n);\n\n    for (int i = 1; i <= n; ++i) {\n        int op = ops[i] = read();\n        pos[i] = i;\n        if (op <= 2)\n            modify(1, i, op);\n        else {\n            int p = read();\n            p = pos[i] = pos[p];\n            ops[p] = -ops[p];\n            modify(1, p, ops[p]);\n        }\n        phalanx ans = t[1].ans;\n        printf(\"%lld\\n\", ans.a[1][1] + ans.a[2][1] + ans.a[3][1]);\n    }\n    return 0;\n}\n```",
        "postTime": 1684202376,
        "uid": 120868,
        "name": "dbxxx",
        "ccfLevel": 6,
        "title": "P6864"
    },
    {
        "content": "# P6864 [RC-03] \u8bb0\u5fc6 \u9898\u89e3\n\n\u8003\u8651\u6309\u7167\u9898\u76ee\u63cf\u8ff0\u6784\u9020\u51fa\u6765\u7684\u62ec\u53f7\u4e32\u5177\u6709\u7684\u6027\u8d28\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u6240\u6709\u7684\u62ec\u53f7\u8f6c\u6362\u6210\u4e00\u6bb5\u6298\u7ebf\u56fe\uff0c$\\texttt{(}$ \u8bb0\u5f55\u4e3a $+1$\uff0c$\\texttt{)}$ \u8bb0\u5f55\u4e3a $-1$\uff0c\u90a3\u4e48\u5bb9\u6613\u53d1\u73b0\u4f9d\u7167\u9898\u76ee\u63cf\u8ff0\u6784\u9020\u51fa\u6765\u7684\u6240\u6709\u4e32\u5e94\u8be5\u5f62\u5982\u4e0b\u56fe\uff1a\n\n![](https://s1.ax1x.com/2023/02/25/ppSDjk4.png)\n\n\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u5c06\u6574\u5f20\u6298\u7ebf\u56fe\u5212\u5206\u6210\u82e5\u5e72\u5c42\uff0c\u6bcf\u4e00\u5c42\u90fd\u662f\u4e0d\u65ad\u7684 $+1$ \u548c $-1$ \u7684\u9707\u8361\uff0c\u7136\u540e\u8fdb\u5165\u4e0b\u4e00\u5c42\u3002\u4e00\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5728\u5f53\u524d\u5c42\u672b\u5c3e\u65b0\u52a0\u5165\u4e00\u6b21\u9707\u8361\uff0c\u4e8c\u64cd\u4f5c\u76f8\u5f53\u4e8e\u8fdb\u5165\u4e0b\u4e00\u5c42\uff0c\u800c\u4e09\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5c06\u67d0\u4e00\u5c42\u53bb\u6389/\u6062\u590d\u4e00\u6b21\u9707\u8361\u6216\u662f\u5c06\u67d0\u4e24\u5c42\u5206\u88c2/\u5408\u5e76\u3002\u5bb9\u6613\u6ce8\u610f\u5230\u6bcf\u6b21\u4e00\u64cd\u4f5c\u6216\u4e8c\u64cd\u4f5c\u90fd\u4f1a\u552f\u4e00\u5730\u5bf9\u5e94\u4e0a\u56fe\u4e2d\u7684\u4e00\u4e2a\u70b9\u3002\n\n\u8003\u8651\u539f\u9898\u6240\u6c42\u7684\u5408\u6cd5\u62ec\u53f7\u4e32\u6570\u91cf\uff0c\u7b49\u4ef7\u4e8e\u9009\u62e9\u4e24\u4e2a\u5728\u6298\u7ebf\u56fe\u4e0a\u7b49\u9ad8\u7684\u70b9\uff0c\u4e14\u5b83\u4eec\u4e4b\u95f4\u6240\u6709\u7684\u70b9\u90fd\u4e0d\u4f4e\u4e8e\u5b83\u4eec\u7684\u9ad8\u5ea6\u3002\u7531\u4e8e\u6b64\u9898\u62ec\u53f7\u4e32\u7684\u7279\u6027\uff0c\u8fd9\u7b49\u4ef7\u4e8e\u9009\u62e9\u4e00\u5bf9\u4f4d\u4e8e\u540c\u4e00\u5c42\u7684\u70b9\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8bbe\u843d\u5728\u67d0\u4e00\u5c42\u4e0a\u7684\u70b9\u6570\u91cf\u4e3a $c_i$\uff08\u5ffd\u7565\u6700\u5de6\u4fa7\u8fde\u7eed\u4e0a\u5347\u7684\u6bb5\uff09\uff0c\u90a3\u4e48 $Ans=\\sum \\frac{c_i(c_i+1)}{2}$\u3002\u56e0\u6b64\uff0c\u5148\u4e0d\u8003\u8651\u64a4\u9500\u64cd\u4f5c\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a $set$\uff0c\u7ef4\u62a4\u6bcf\u4e00\u5c42\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u6700\u5f00\u59cb\u5411 $set$ \u4e2d\u52a0\u5165 $1$\uff0c\u8be2\u95ee\u4e0b\u6807\u6539\u4e3a $2\\sim q+1$\uff0c\u5c31\u53ef\u4ee5\u7b80\u5355\u5730\u7ef4\u62a4\u7b54\u6848\u3002\u5bf9\u4e8e\u4e00\u64cd\u4f5c\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u7b54\u6848\u52a0\u4e0a\u5f53\u524d\u5c42\u7684 $c_i$\uff1b\u5bf9\u4e8e\u4e8c\u64cd\u4f5c\uff0c\u6211\u4eec\u5411 $set$ \u4e2d\u52a0\u5165\u5f53\u524d\u8be2\u95ee\u4e0b\u6807\uff0c\u7136\u540e\u5c06\u7b54\u6848\u52a0\u4e0a $1$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u64a4\u9500\u64cd\u4f5c\u3002\u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u662f\u5426\u6709\u6548\u3002\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u7684\u6709\u6548\u72b6\u6001\uff0c\u5bf9\u4e8e\u4e00\u6b21\u64a4\u9500\uff0c\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u51fa\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9\u54ea\u4e00\u6b21\u4e00\u64cd\u4f5c\u6216\u4e8c\u64cd\u4f5c\u8fdb\u884c\u7684\uff0c\u7136\u540e\u5c06\u8fd9\u4e00\u6b21\u64cd\u4f5c\u7684\u6709\u6548\u72b6\u6001\u53d6\u53cd\uff0c\u5728\u66f4\u65b0\u7b54\u6848\u65f6\u5ffd\u7565\u6389\u533a\u95f4\u5185\u65e0\u6548\u7684\u64cd\u4f5c\uff0c\u7531\u4e8e\u4e8c\u64cd\u4f5c\u7684\u64a4\u9500\u6700\u591a\u6d89\u53ca\u4e24\u5c42\uff0c\u6b64\u65f6\u7684\u590d\u6742\u5ea6\u4f9d\u7136\u6b63\u786e\u3002\u5bf9\u4e8e\u4e09\u64cd\u4f5c\u800c\u8a00\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u5b83\u8bbe\u7f6e\u6210\u65e0\u6548\u64cd\u4f5c\u5373\u53ef\uff0c\u56e0\u4e3a\u8fd9\u4e00\u64cd\u4f5c\u672c\u8eab\u5e76\u4e0d\u4f1a\u5bf9\u62ec\u53f7\u4e32\u4ea7\u751f\u4efb\u4f55\u6539\u53d8\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nset<int>s;\nint q;\nint opt[200005],pos[200005];\nint t[200005];\nint lowbit(int x){return x&(-x);}\nvoid add(int x,int k){\n\twhile(x<=q){\n\t\tt[x]+=k;\n\t\tx+=lowbit(x);\n\t}\n}\nint sum(int x){\n\tint ret=0;\n\twhile(x){\n\t\tret+=t[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ret;\n}\nsigned main(){\n\tint p;\n\tcin>>q;\n\tq++;\n\ts.insert(1);\n\tint ans=1;\n\tfor(int i=2;i<=q;i++){\n\t\tscanf(\"%lld\",&opt[i]);\n\t\tif(opt[i]==1){\n\t\t\tpos[i]=i;\n\t\t\tint tmp=*(--s.end());\n\t\t\tint del=sum(i)-sum(tmp-1);\n\t\t\tint len=i-tmp+1;\n\t\t\tans+=len-del;\n\t\t}\n\t\telse if(opt[i]==2){\n\t\t\tpos[i]=i;\n\t\t\ts.insert(i);\n\t\t\tans++;\n\t\t}\n\t\telse{\n\t\t\tadd(i,1);\n\t\t\tscanf(\"%lld\",&p);\n\t\t\tp++;\n\t\t\topt[i]=opt[p],pos[i]=pos[p];\n\t\t\tp=pos[p];\n\t\t\tint chk=sum(p)-sum(p-1);\n\t\t\tif(!chk) chk=-1;\n\t\t\tint bg=*(--s.upper_bound(p));\n\t\t\tset<int>::iterator it=s.upper_bound(p);\n\t\t\tint ed;\n\t\t\tif(it==s.end()) ed=i;\n\t\t\telse ed=(*it)-1;\n\t\t\tif(opt[p]==1){\n\t\t\t\tint len=ed-bg+1;\n\t\t\t\tint del=sum(ed)-sum(bg-1);\n\t\t\t\tans-=(len-del)*(len-del+1)/2;\n\t\t\t\tadd(p,-chk);\n\t\t\t\tdel=sum(ed)-sum(bg-1);\n\t\t\t\tans+=(len-del)*(len-del+1)/2;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(chk==1){\n\t\t\t\t\tint del=sum(ed)-sum(bg-1);\n\t\t\t\t\tint len=ed-bg+1;\n\t\t\t\t\tans-=(len-del)*(len-del+1)/2;\n\t\t\t\t\tadd(p,-chk);\n\t\t\t\t\tint l1=p-bg,l2=ed-p+1,d1=sum(p-1)-sum(bg-1),d2=sum(ed)-sum(p-1);\n\t\t\t\t\tans+=(l1-d1)*(l1-d1+1)/2+(l2-d2)*(l2-d2+1)/2;\n\t\t\t\t\ts.insert(p);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tint bef=*(--s.lower_bound(p));\n\t\t\t\t\tint l1=bg-bef,l2=ed-bg+1,d1=sum(bg-1)-sum(bef-1),d2=sum(ed)-sum(bg-1);\n\t\t\t\t\tans-=(l1-d1)*(l1-d1+1)/2+(l2-d2)*(l2-d2+1)/2;\n\t\t\t\t\tadd(p,-chk);\n\t\t\t\t\tint len=ed-bef+1,del=sum(ed)-sum(bef-1);\n\t\t\t\t\tans+=(len-del)*(len-del+1)/2;\n\t\t\t\t\ts.erase(p);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1677307105,
        "uid": 455093,
        "name": "Schi2oid",
        "ccfLevel": 7,
        "title": "P6864 [RC-03] \u8bb0\u5fc6 \u9898\u89e3"
    }
]