[
    {
        "content": "\u8fd9\u9053\u9898\u770b\u4f3c\u50cfDP\uff0c\u53c8\u50cf\u56fe\u8bba\uff0c\u7ed3\u679c\u4e8c\u8005\u90fd\u4e0d\u662f\u3002\n### \u6b63\u89e3\u5c45\u7136\u662f------------\u534a\u5e73\u9762\u4ea4+\u6700\u77ed\u8def\uff1f\n\u5176\u5b9e\u6211\u770b\u4e86\u5f88\u4e45\u90fd\u6ca1\u6709\u770b\u51fa\u6765\uff0c~~\u679c\u7136\u6211\u592a\u849f\u84bb\u4e86~~\u3002\n\n\u8fd9\u4e2a\u9898\uff0c\u53ea\u8981\u6784\u5efa\u51fa\u4e86\u56fe\u7684\u6a21\u578b\u5c31\u597d\u505a\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u4eb2\u621a\u4e0e\u4ed6\u76f8\u90bb\u7684\u76d1\u89c6\u8303\u56f4\u6709\u516c\u5171\u8fb9\u7684\u5efa\u4e00\u6761\u53cc\u5411\u8fb9\uff0c\u8fb9\u957f\u4e3a1\uff0c\u51e1\u662f\u76d1\u89c6\u8303\u56f4\u4e0e\u77e9\u9635\u8fb9\u754c\u76f8\u90bb\u7684\u4eb2\u621a\u5c31\u5efa\u4e00\u6761\u4ed6\u5230\u7ec8\u70b9\u7684\u8fb9\uff0c\u8fb9\u957f\u4e5f\u4e3a1\uff0c\u7136\u540e\u627e\u5230\u6700\u5f00\u59cb\u76d1\u89c6\u76ee\u6807\u7684\u90a3\u4e2a\u4eba\uff0c\u4ee5\u4ed6\u7684\u7f16\u53f7\u4e3a\u8d77\u70b9\uff0c\u8dd1\u4e00\u8fb9\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5c31\u662f\u7b54\u6848\u4e86\u3002\u800c\u6700\u77ed\u8def\u5f88\u5bb9\u6613\u7528SPFA\u6216\u8005Dijkstra\u7b97\u6cd5\u5c31\u5f97\u51fa\u7b54\u6848\u4e86\u3002\n\n\n------------\n\n\u7136\u800c\uff0c\u5982\u4f55\u5efa\u8fb9\u5462\uff1f\u5982\u4f55\u786e\u5b9a\u76d1\u89c6\u8303\u56f4\u5462\uff1f\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u4e00\u4e2a\u4eb2\u621a\u7684\u76d1\u89c6\u8303\u56f4\u4e0e\u53e6\u4e00\u4e2a\u4eb2\u621a\u7684\u76d1\u89c6\u8303\u56f4\u7684\u5206\u754c\u7ebf\u5c31\u662f\u4ed6\u4eec\u4fe9\u7684\u8fde\u7ebf\u7684\u4e2d\u5782\u7ebf\uff0c~~\u81ea\u5df1\u753b\u753b\u56fe\u5c31\u77e5\u9053\u4e86~~\u5176\u5b9e\u8fd9\u4e2a\u5f88\u50cf[\u6cf0\u68ee\u591a\u8fb9\u5f62](https://baike.baidu.com/item/%E6%B3%B0%E6%A3%AE%E5%A4%9A%E8%BE%B9%E5%BD%A2/3428661?fr=aladdin)(\u9898\u5916\u8bdd\uff0c\u5e76\u65e0\u4ec0\u4e48\u7528)\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eb2\u621a\u7684\u76d1\u89c6\u8303\u56f4\u5c31\u662f\u4ed6\u4e0e\u6240\u6709\u5176\u4ed6\u4eb2\u621a\u7684\u5206\u754c\u7ebf\u7684\u9762\u5bf9\u4ed6\u81ea\u5df1\u7684\u534a\u5e73\u9762\u4ea4\uff0c\u6ce8\u610f\u7684\u662f\u8fd8\u8981\u9650\u5236\u5728\u7ed9\u5b9a\u7684\u77e9\u9635\u5185\u3002\u8fd9\u6837\u4e24\u4e24\u679a\u4e3e\uff0c\u5c31\u5728$O(n^2logn)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42\u51fa\u5e76\u5efa\u51fa\u56fe\u5566\uff01(\u5177\u4f53\u770b\u4ee3\u7801)\uff0c\u7136\u540e$n$\u5f88\u5c0f\uff0c\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n~~\u672c\u849f\u84bb\u4ee3\u7801\u4e11\u4e14\u5e38\u6570\u7092\u9e21\u5927\uff0c\u5c06\u5c31\u770b\u5427~~\n\n```cpp\n\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define db double\nusing namespace std;\nconst int M=1e4+1;\nconst int inf=0x7fffffff;\nconst db eps=1e-10;\nint dcmp(db x){if(fabs(x)<eps) return 0;return x<0?-1:1;}\nint T,n,s,t;\n//s,t\u8868\u793a\u8d77\u70b9\u7ec8\u70b9\u7f16\u53f7\ndb sx,sy,bx,by;\n//\u77e9\u9635\u5927\u5c0f\u548c\u8d77\u70b9\u5750\u6807\nstruct ss{\n    int to,last,val;\n    ss(int a=0,int b=0,int c=1):to(a),last(b),val(c){}\n}g[M<<1];\nint head[M],cnt;\nvoid add(int a,int b){\n    g[++cnt]=ss(b,head[a]);head[a]=cnt;\n    g[++cnt]=ss(a,head[b]);head[b]=cnt;\n}\nint dis[M];\nbool vis[M];\nint sze,que[M],pp,qq;\nint spfa(int tot){\n    for(int i=0;i<tot;i++) dis[i]=inf,vis[i]=0;\n    vis[s]=1;dis[s]=0;que[pp=qq=0]=s;\n    for(;pp<=qq;pp++){\n        int now=que[pp%tot];\n        vis[now]=0;\n        for(int i=head[now];i;i=g[i].last){\n            if(dis[g[i].to]>dis[now]+g[i].val){\n                dis[g[i].to]=dis[now]+g[i].val;\n                if(!vis[g[i].to]){\n                    que[++qq%tot]=g[i].to;\n                    vis[g[i].to]=1;\n                    if(dis[que[(pp+1)%tot]]>dis[que[qq%tot]])swap(que[(pp+1)%tot],que[qq%n]);\n                }\n            }\n        }\n    }\n    return dis[t];\n}\n//\u8fd9\u91cc\u6211\u7528\u7684SPFA\u7684\u6700\u77ed\u8def\nstruct point{\n    db x,y;\n    point(db a=0,db b=0):x(a),y(b){}\n    void in(){scanf(\"%lf%lf\",&x,&y);}\n}po[M];\n\npoint operator +(point a,point b){return point(a.x+b.x,a.y+b.y);}\npoint operator -(point a,point b){return point(a.x-b.x,a.y-b.y);}\npoint operator *(point a,db    b){return point(a.x*b  ,a.y*b  );}\npoint operator /(point a,db    b){return point(a.x/b  ,a.y/b  );}\n\ndb cross(point a,point b){return a.x*b.y-a.y*b.x;}\ndb dot  (point a,point b){return a.x*b.x+a.y*b.y;}\n//\u8ba1\u7b97\u51e0\u4f55\u57fa\u7840\u5566\uff0c\u5c31\u4e0d\u89e3\u91ca\u4e86\npoint rotate(point a){return point(-a.y,a.x);}\npoint getmid(point a,point b){return point((a.x+b.x)/2,(a.y+b.y)/2);}\n//rotate\u6c42\u9006\u65f6\u9488\u65cb\u8f6c\u5411\u91cf90\u5ea6\n//getmid\u6c42\u7ebf\u6bb5\u4e2d\u70b9\uff0c\u8fd9\u4e24\u4e2a\u662f\u6c42\u4e2d\u5782\u7ebf\u7528\u7684\nstruct line{\n    point p,v;\n    db ang;\n    int id;\n    line(){}\n    line(point a,point b,int c):p(a),v(b),id(c){ang=atan2(v.y,v.x);}\n    bool operator <(line a)const{return ang<a.ang;}\n    point getp(db t){return p+v*t;}\n}l[M];\n\nbool onleft(line le,point p){return cross(le.v,p-le.p)>0;}\n\npoint getlinecut(line a,line b){\n    point u=a.p-b.p;\n    db t=cross(b.v,u)/cross(a.v,b.v);\n    return a.getp(t);\n}\n\nint fi,la,vnt;\npoint p[M];\nline  q[M];\n\nbool no[M];\n\nvoid init(int a,int tot){\n    l[0]=line(point(0,sy),point(0,-1),n);\n    l[1]=line(point(0,0),point(1,0),n);\n    l[2]=line(point(sx,0),point(0,1),n);\n    l[3]=line(point(sx,sy),point(-1,0),n);\n    vnt=4;\n    for(int i=0;i<tot;i++){\n        if(i==a||no[i]) continue;\n        point mid=getmid(po[i],po[a]);\n        point v=rotate(po[i]-po[a]);\n        l[vnt++]=line(mid,v,i);\n    }\n    //\u521d\u59cb\u5316a\u53f7\u4eb2\u621a\u7684\u8fb9\u754c\n}\n\nvoid halfcut(int a,int tot){\n    sort(l,l+tot);\n    q[fi=la=0]=l[0];\n    for(int i=1;i<tot;i++){\n        while(fi<la&&!onleft(l[i],p[la-1])) --la;\n        while(fi<la&&!onleft(l[i],p[fi  ])) ++fi;\n        q[++la]=l[i];\n        if(fabs(cross(q[la].v,q[la-1].v))<eps){\n            --la;if(onleft(q[la],l[i].p)) q[la]=l[i];\n        }\n        if(fi<la) p[la-1]=getlinecut(q[la],q[la-1]);\n    }\n    while(fi<la&&!onleft(q[fi],p[la-1])) --la;\n    if(la-fi<=1) return;\n    for(int i=fi;i<=la;i++){add(a,q[i].id);}//id\u8bb0\u5f55\u8fd9\u6761\u8fb9\u6240\u5bf9\u7684\u90a3\u4e2a\u4eb2\u621a\u7684\u7f16\u53f7\n}\n//\u534a\u5e73\u9762\u4ea4\u6a21\u677f\nvoid clear(){\n    cnt=0;memset(head,0,sizeof(head));\n    memset(no,0,sizeof(no));\n}\n//\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u6709\u591a\u7ec4\u6570\u636e\ndb dist(point a,point b){return dot(a-b,a-b);}\n//\u6c42\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\nint main()\n{\n    scanf(\"%d\",&T);\n    while(T--){\n        clear();\n        scanf(\"%d\",&n);\n        scanf(\"%lf%lf%lf%lf\",&sx,&sy,&bx,&by);\n        if(!n){printf(\"0\\n\");continue;}//\u6ce8\u610f\u7279\u5224\n        t=n;//\u4e2d\u70b9\u7f16\u53f7\n        int pos=0;\n        db len=1e150;\n        for(int i=0;i<n;i++){\n            po[i].in();\n\t\t\tif(po[i].x>sx||po[i].y>sy)no[i]=1;\n            //\u4e0d\u77e5\u5230\u4e3a\u5565\u8fd8\u6709\u7ad9\u5728\u77e9\u9635\u5916\u7684\u4eb2\u621a\uff0c\u9700\u8981\u7279\u6b8a\u5904\u7406\u5254\u9664\u6389\n            db now=dist(po[i],point(bx,by));\n            if(len>now) len=now,pos=i;\n        }\n        s=pos;//\u8ddd\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u90a3\u4e2a\u4eb2\u621a\u5c31\u662f\u6700\u5f00\u59cb\u770b\u5b88\u5b83\u7684\n        for(int i=0;i<n;i++){\n            if(no[i]) continue;\n            init(i,n);\n            halfcut(i,vnt);\n\t\t\t//\u5efa\u56fe\u5566\n        }\n        printf(\"%d\\n\",spfa(n+2));\n        //\u6700\u77ed\u8def\u51fa\u7b54\u6848\n    }\n    return 0;\n}\n\n```\n\n\u6ce8\u610f\u4e00\u4e0b\u7279\u5224\u548c\u7cbe\u5ea6\u5c31\u597d\u5566\uff0c~~\u6700\u8ba8\u538c\u5361\u7cbe\u5ea6\u7684\u9898\uff0c\u4e0d\u8fc7\u8fd9\u9053\u8fd8\u597d~~",
        "postTime": 1522062978,
        "uid": 62235,
        "name": "TimeTraveller",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3297 \u3010[SDOI2013]\u9003\u8003\u3011"
    },
    {
        "content": "\u534a\u5e73\u9762\u4ea4 + \u6700\u77ed\u8def \n\n\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u6bd2\u7624\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u4eb2\u621a\u7684\u76d1\u89c6\u8303\u56f4\uff0c\u53d1\u73b0\uff0c\u4eb2\u621a\u4e24\u4e24\u4e4b\u95f4\u7684\u76d1\u89c6\u8303\u56f4\u7684\u5206\u754c\u7ebf\u5c31\u662f\u4e24\u4eba\u7684\u4e2d\u5782\u7ebf\uff08\u7ebf\u6bb5\u4e2d\u5782\u7ebf\u4e0a\u7684\u70b9\u5230\u7ebf\u6bb5\u4e24\u7aef\u70b9\u8ddd\u79bb\u76f8\u7b49\uff09\u8fd9\u662f\u4e00\u4e2a\u7531\u623f\u95f4\u8fb9\u754c\u548c\u4eb2\u621a\u4e4b\u95f4\u4e24\u4e24\u4e2d\u5782\u7ebf\u7684\u534a\u5e73\u9762\u4ea4\u3002\n\n\u6c42\u51fa\u8fd9\u4e2a\u534a\u5e73\u9762\u4ea4\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u8fd9\u53ef\u4ee5\u8bf4\u660e\u4e24\u4e2a\u4eb2\u621a\u662f\u5426\u76f8\u90bb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u80fd\u5426\u76f4\u63a5\u4ece\u4e00\u4e2a\u4eb2\u621a\u7684\u533a\u57df\u8d70\u5230\u53e6\u4e00\u4e2a\u4eb2\u621a\u7684\u533a\u57df\u3002\u5982\u679c\u4e00\u4e2a\u4eb2\u621a\u7684\u534a\u5e73\u9762\u4ea4\u7684\u8fb9\u4e2d\u542b\u6709\u8fb9\u754c\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u53ef\u4ee5\u4ece\u4ed6\u8d70\u5411\u7ec8\u70b9\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u56fe\u5efa\u597d\u4e86\uff0c\u4e4b\u540e\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\n\n\u6ce8\u610f\u7279\u5224\u6ca1\u6709\u4eb2\u621a\u7684\u60c5\u51b5\u3002\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#include<algorithm>\n#include<cstring>\n#define eps 1e-9\n#define re register\nusing namespace std;\nstruct edge {\n\tint to,next;\n} e[2000002];\nint head[700002];\nbool vis[700002];\ninline int spfa(re int s,re int t) {\n\tqueue<int>q;\n\twhile(!q.empty())q.pop();\n\tq.push(s),q.push(0);\n\tvis[s]=1;\n\twhile(!q.empty()) {\n\t\tre int x=q.front();\n\t\tq.pop();\n\t\tre int y=q.front();\n\t\tq.pop();\n\t\tif(x==t)return y;\n\t\tfor(re int i=head[x]; i; i=e[i].next)if(!vis[e[i].to])vis[e[i].to]=1,q.push(e[i].to),q.push(y+1);\n\t}\n}\nint n,lsy_ak_ioi,q[700002],tp,tl,st,cnt1;\ndouble x0,Y0,x1,Y1;\ninline double read() {\ndouble t=0;\nscanf(\"%lf\",&t);\n\treturn t;\n}\nstruct point {\n\tdouble x,y;\n} p[700002];\nstruct line {\n\tpoint x,y;\n\tdouble k,ang;\n\tint id;\n} l[700002];\ninline double slope(re point x,re point y) {\n\treturn (x.y-y.y)/(x.x-y.x);\n}\n\ninline void add(re int x,re int y) {\n\te[++cnt1].to=y;\n\te[cnt1].next=head[x];\n\thead[x]=cnt1;\n}\ninline double cs(point p1,point p2,point p0) {\n\treturn(p1.x-p0.x)*(p2.y-p0.y)-(p1.y-p0.y)*(p2.x-p0.x);\n}\ninline bool cmp(re line x,re line y) {\n\tif(fabs(x.ang-y.ang)<eps)return cs(y.x,y.y,x.x)>eps;\n\treturn x.ang<y.ang;\n}\ninline point addc(line l1,line l2) {\n\tdouble tmp=cs(l1.x,l1.y,l2.x),tmp1=cs(l1.x,l1.y,l2.y);\n\tpoint p;\n\tp.x=(l2.y.x*tmp-l2.x.x*tmp1)/(tmp-tmp1);\n\tp.y=(l2.y.y*tmp-l2.x.y*tmp1)/(tmp-tmp1);\n\treturn p;\n}\ninline bool judge(line l0,line l1,line l2) {\n\tpoint p;\n\tp=addc(l1,l2);\n\treturn cs(l0.x,l0.y,p)<-eps;\n}\ninline double dis(re point x,re point y){\n\treturn (x.x-y.x)*(x.x-y.x)+(x.y-y.y)*(x.y-y.y);\n}\nint main() {\n\tlsy_ak_ioi=read();\n\twhile(lsy_ak_ioi--) {cnt1=0;\n\tmemset(head,0,sizeof(head));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tst=0;\n\t\tn=read();\n\t\tx1=read();\n\t\tY1=read();\n\t\tx0=read();\n\t\tY0=read();\n\t\tfor(re int i=1; i<=n; ++i) {\n\t\t\tp[i].x=read();\n\t\t\tp[i].y=read();\n\t\t\tif(!st||(dis(p[st],(point){x0,Y0})>dis(p[i],(point){x0,Y0})))st=i;\n\t\t}\n\t\tif(!n){\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(re int i=1; i<=n; ++i) {\n\t\tl[1].x=(point) {0.0,0.0};\n\t\tl[1].y=(point) {x1,0.0};\n\t\tl[1].ang=atan2(0.0,x1);\n\t\tl[1].k=slope(l[1].x,l[1].y);\n\t\tl[2].x=(point) {x1,0.0};\n\t\tl[2].y=(point) {x1,Y1};\n\t\tl[2].ang=atan2(Y1,0.0);\n\t\tl[2].k=slope(l[2].x,l[2].y);\n\t\tl[3].x=(point) {x1,Y1};\n\t\tl[3].y=(point) {0.0,Y1};\n\t\tl[3].ang=atan2(0.0,-x1);\n\t\tl[3].k=slope(l[3].x,l[3].y);\n\t\tl[4].x=(point) {0,Y1};\n\t\tl[4].y=(point) {0,0};\n\t\tl[4].ang=atan2(-Y1,0.0);\n\t\tl[4].k=slope(l[4].x,l[4].y);\n\t\tl[1].id=l[2].id=l[3].id=l[4].id=0;\n\t\t\tre int tot=4;\n\t\t\tfor(re int j=1; j<=n; ++j)\n\t\t\t\tif(j!=i) {\n\t\t\t\t\tl[++tot].x.x=(p[i].x+p[j].x)/2,l[tot].x.y=(p[i].y+p[j].y)/2,l[tot].k=-1/slope(p[i],p[j]);\n\t\t\t\t\tif(fabs(l[tot].k)<1e16&&fabs(l[tot].k)>eps)\n\t\t\t\t\tl[tot].y.x=l[tot].x.x+1,l[tot].y.y=l[tot].x.y+l[tot].k;\n\t\t\t\t\telse if(fabs(l[tot].k)>=1e16)l[tot].y.x=l[tot].x.x,l[tot].y.y=l[tot].x.y+1;\n\t\t\t\t\telse if(fabs(l[tot].k)<eps)l[tot].y.x=l[tot].x.x+1,l[tot].y.y=l[tot].x.y;\n\t\t\t\t\tif(cs(l[tot].x,l[tot].y,p[i])<0) {\n\t\t\t\t\t\tpoint tmp=l[tot].x;\n\t\t\t\t\t\tl[tot].x=l[tot].y;\n\t\t\t\t\t\tl[tot].y=tmp;\n\t\t\t\t\t}\n\t\t\t\t\tl[tot].ang=atan2(l[tot].y.y-l[tot].x.y,l[tot].y.x-l[tot].x.x);\n\t\t\t\t\tl[tot].id=j;\n\t\t\t\t}\n\t\t\t/*\tprintf(\"%d\\n\",i);\n\t\t\t\tfor(re int j=1; j<=tot; ++j) {\n\t\t\t\t\tprintf(\"%.2lf %.2lf %.2lf %.2lf\\n\",l[j].x.x,l[j].x.y,l[j].y.x,l[j].y.y);\n\t\t\t\t}*/\n\t\t\tsort(l+1,l+tot+1,cmp);\n\t\t\tre int cnt=1;\n\t\t\tfor(re int j=2; j<=tot; ++j)if(fabs(l[j].ang-l[j-1].ang)>eps)l[++cnt]=l[j];\n\t\t\tq[1]=1;\n\t\t\tq[2]=2;\n\t\t\ttl=1;\n\t\t\ttp=2;\n\t\t\tfor(re int j=3; j<=cnt; ++j) {\n\t\t\t\twhile(tl<tp&&judge(l[j],l[q[tp-1]],l[q[tp]]))--tp;\n\t\t\t\twhile(tl<tp&&judge(l[j],l[q[tl+1]],l[q[tl]]))++tl;\n\t\t\t\tq[++tp]=j;\n\t\t\t}\n\t\t\twhile(tl<tp&&judge(l[q[tl]],l[q[tp-1]],l[q[tp]]))--tp;\n\t\t\twhile(tl<tp&&judge(l[q[tp]],l[q[tl+1]],l[q[tl]]))++tl;\n\t\t\t//printf(\"%d\\n\",i);\n\t\t\tfor(re int j=tl; j<=tp; ++j) {\n\t\t\t//\tprintf(\"%d \",l[q[j]].id);\n\t\t\t\tadd(i,l[q[j]].id);\n\t\t\t}\n\t\t}\n\t\t//printf(\"%d %d\\n\",st,ed);\n\t\tprintf(\"%d\\n\",spfa(st,0));\n\t}\n\n}\n```\n",
        "postTime": 1584846843,
        "uid": 41476,
        "name": "gyh20",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3297 \u3010[SDOI2013]\u9003\u8003\u3011"
    },
    {
        "content": "~~\u8bdd\u8bf4\u8fd9\u9898\u9898\u9762\uff08\u6216\u7740\u8bf4\u6570\u636e\uff09\u597d\u50cf\u51fa\u4e86\u5927\u9505\uff08~~\n\n## \u89e3\u6790\n\n\u5148\u8003\u8651\u4e24\u4e2a\u4eb2\u621a\u95f4\u63a7\u5236\u533a\u57df\u7684\u5206\u754c\uff0c\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e\u5c31\u662f\u5b83\u4eec\u6240\u5728\u7684\u4e24\u4e2a\u70b9\u7684\u4e2d\u5782\u7ebf\u3002\n\n\u90a3\u4e48\u67d0\u4e2a\u4eb2\u621a\u7684\u638c\u63a7\u8303\u56f4\uff0c\u5b9e\u9645\u4e0a\u5b83\u4e0e\u5176\u4ed6\u4eb2\u621a\u95f4\u7684\u4e2d\u5782\u7ebf\u52a0\u4e0a\u77e9\u5f62\u8fb9\u754c\u7684\u534a\u5e73\u9762\u4ea4\u8303\u56f4\uff08\u6709\u53ef\u80fd\u6709\u65e0\u7528\u7ebf\uff09\uff08\u76f4\u7ebf\u7684\u65b9\u5411\u8981\u4fdd\u8bc1\u5f53\u524d\u70b9\u5728\u534a\u5e73\u9762\u5185\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5 $O(n^2)$ \u5730\u6c42\u51fa\u6240\u6709\u4eb2\u621a\u7684\u638c\u63a7\u8303\u56f4\uff0c\u6700\u540e\u5c31\u50cf\u8fd9\u6837\uff1a\n\n![qwq](https://cdn.luogu.com.cn/upload/image_hosting/fw7f7x1b.png)\n\n\uff08\u8bdd\u8bf4\u8fd9\u4e1c\u897f\u5176\u5b9e\u5c31\u662f [\u8fd9\u4e2a](https://baike.baidu.com/item/%E6%B3%B0%E6%A3%AE%E5%A4%9A%E8%BE%B9%E5%BD%A2)\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u4e24\u4e2a\u76f8\u90bb\u7684\u51f8\u5305\u7684\u5171\u540c\u8fb9\u5176\u5b9e\u5c31\u662f\u8fd9\u4e24\u4e2a\u51f8\u5305\u6240\u5c5e\u7684 \u201c\u63a7\u5236\u70b9\u201d\uff08\u4eb2\u621a\uff09 \u7684\u4e2d\u5782\u7ebf\uff1a\u56e0\u4e3a\u5982\u679c\u8fd9\u6761\u8fb9\u4e0d\u662f\u8fd9\u4e24\u4e2a\u70b9\u7684\u4e2d\u5782\u7ebf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5**\u4f5c\u51fa**\u8fd9\u4e24\u4e2a\u70b9\u7684\u4e2d\u5782\u7ebf\uff0c\u5e76\u81f3\u5c11\u5bf9\u5176\u4e2d\u4e00\u4e2a\u51f8\u5305\u7684\u8fb9\u754c\uff08\u63a7\u5236\u533a\u57df\uff09**\u4ea7\u751f\u5f71\u54cd**\uff08\u5c31\u662f\u8bf4\u4f1a\u6539\u53d8\u5176\u4e2d\u4e00\u4e2a\u51f8\u5305\uff09\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8bb0\u5f55\u4e0b\u6bcf\u6761\u4e2d\u5782\u7ebf\u662f\u7531\u54ea\u4e24\u4e2a\u63a7\u5236\u70b9\u4ea7\u751f\u7684\uff0c\u6bcf\u6b21\u6c42\u5b8c\u534a\u5e73\u9762\u4ea4\u540e\u6309**\u5269\u4e0b\u7684**\u4e2d\u5782\u7ebf\u8bb0\u5f55\u7684\u4fe1\u606f\u8fde\u8fb9\u5efa\u56fe\uff0c\u5e76\u5bf9\u77e9\u5f62\u8fb9\u754c\u7684\u8fb9\u7279\u8bbe**\u4e00\u4e2a** \u201c\u8fb9\u754c\u201d \u7684\u70b9\uff08\u5efa\u7684\u56fe\u4e0a\uff09\uff0c\u6700\u540e\u53ea\u9700\u8dd1\u4e0b\u4ece\u8d77\u59cb\u51f8\u5305\u70b9\u5230\u8fb9\u754c\u70b9\u7684\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\uff08\u8d77\u59cb\u51f8\u5305\u5176\u5b9e\u5c31\u662f**\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u4eb2\u621a**\u638c\u63a7\u7684\u51f8\u5305\uff09\n\n**\u53e6\u5916\u6ce8\u610f**\u5bf9\u4e8e\u6ca1\u6709\u4eb2\u621a\uff0c\u6216\u4eb2\u621a\u5728\u77e9\u5f62\u5916\u8981\u7279\u5224\uff08\u6570\u636e\u5927\u9505\uff08\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\nusing std::sort;\nusing std::pair;\nusing std::min;\ntypedef pair<int, int> pad;\n\n/*------------------------------Computational geometry------------------------------*/\n\nconst double pi =acos(-1), eps =1e-6;\n\nstruct vect{\n\tdouble x, y;\n\tvect(){}\n\tvect(double xx, double yy):x(xx), y(yy){}\n\tvect operator + (vect v){ return vect(x+v.x, y+v.y); }\n\tvect operator - (vect v){ return vect(x-v.x, y-v.y); }\n\tvect operator * (double mu){ return vect(mu*x, mu*y); }\n\tdouble operator / (vect v){ return x*v.y-y*v.x; }/*\u53c9\u79ef*/\n};\n\nstruct line{\n\tvect u, v;\n\tint id;/**/\n\tdouble angle;\n\tline(){}\n\tline(vect uu, vect vv):u(uu), v(vv){ angle =atan2(vv.y-uu.y, vv.x-uu.x); }\n};\n\n/*a > b*/\ninline short gtr(double a, double b){ return (a-b > eps); }\n\n/*a == b*/\ninline bool eq(double a, double b){ return (a-b < eps && a-b > -eps); }\n\ninline bool onright(line f, vect w){ return (gtr((w-f.u)/(f.v-f.u), 0)); }\n\nvect getIntersection(line f, line g){\n\tdouble w =((g.u-f.u)/(f.u-f.v))/((f.u-f.v)/(g.u-g.v));\n\treturn g.u+(g.u-g.v)*w;\n}\n\nint cmp(line A, line B){\n\tif(eq(A.angle, B.angle)) return onright(B, A.u);/*\u6709\u5411\u76f4\u7ebf\u6700\u5de6\u7684\u5728\u6700\u540e\u9762\uff0c\u4f1a\u88ab\u4fdd\u7559*/\n\telse return (gtr(B.angle, A.angle));\n}\n\n/*\u6c42\u5de6\u4fa7\u534a\u5e73\u9762\u4ea4*/\ninline pad getHPI(line ls[], int totl, line hull[]){\n\tsort(ls, ls+totl, cmp);\n\tint l =0, r =0;\n\tfor(int i =0; i < totl; ++i){\n\t\twhile(i < totl-1 && eq(ls[i].angle, ls[i+1].angle)) ++i;\n\t\twhile(r-l > 1 && onright(ls[i], getIntersection(hull[r-1], hull[r-2]))) --r;\n\t\tif(eq(ls[i].angle-hull[r-1].angle, pi)) return pad(0, 0);/*\u5224\u65b9\u5411\u76f8\u53cd\u7684\u5e73\u884c*/\n\t\thull[r++] =ls[i];\n\t}\n\twhile(r-l > 1){\n        if(onright(hull[r-1], getIntersection(hull[l], hull[l+1]))) ++l;\n        else if(onright(hull[l], getIntersection(hull[r-1], hull[r-2]))) --r;\n        else break;/*\u5df2\u7ecf\u6ca1\u6709\u66f4\u65b0\u4e86*/\n    }\n\tif(r-l < 3) return pad(0, 0);/*\u8bf4\u8d77\u6765\u8fd9\u9898\u6ca1\u6709\u65e0\u89e3 qwq*/\n\telse return pad(l, r);\n}\n\ninline double dist(vect x, vect y){ return sqrt((y.x-x.x)*(y.x-x.x)+(y.y-x.y)*(y.y-x.y)); }\n\n/*\u4e2d\u5782\u7ebf\u5de6\u4fa7\u5305\u542b x*/\ninline line getmidline(vect x, vect y, int id){\n\tvect mid =vect((x.x+y.x)/2, (x.y+y.y)/2), v2 =vect((y-x).y, -(y-x).x)/*\u987a\u65f6\u9488\u65b9\u5411\uff0c\u4e0e (y-x) \u5782\u76f4\u7684\u5411\u91cf*/;\n\tline ret(mid+v2, mid);/*\u53ef\u4ee5\u753b\u4e2a\u56fe\u7406\u89e3\u4e0b*/\n\tret.id =id;\n\treturn ret;\n}\n\n/*------------------------------Main------------------------------*/\n\ninline void addbound(line ls[], int &totl, int xl, int yl, int totr){\n\tls[totl] =line(vect(xl, yl), vect(0, yl));\n\tls[totl++].id =totr;\n\tls[totl] =line(vect(0, yl), vect(0, 0));\n\tls[totl++].id =totr;\n\tls[totl] =line(vect(0, 0), vect(xl, 0));\n\tls[totl++].id =totr;\n\tls[totl] =line(vect(xl, 0), vect(xl, yl));\n\tls[totl++].id =totr;\n}\n\nline ls[700], hull[700];\n\nbool map[700][700], vis[700];\nint dst[700];\n\n/*n\u65b9\u7684 dijkstra*/\ninline int dijkstra(int s, int totr){\n\tmemset(dst, 0x3f, sizeof(dst));\n\tmemset(vis, 0, sizeof(vis));\n\tdst[s] =0;\n\twhile(1){\n\t\tint nw, mnd =0x7fffffff;\n\t\tfor(int i =0; i <= totr; ++i)\n\t\t\tif(!vis[i] && dst[i] < mnd) mnd =dst[i], nw =i;\n\t\tif(nw == totr) return mnd;\n\t\tvis[nw] =1;\n\t\tfor(int i =0; i <= totr; ++i)\n\t\t\tif(map[nw][i]) dst[i] =min(dst[i], dst[nw]+1);\n\t}\n\t//return -1;\n}\n\ninline int read(){\n\tint x =0; bool f =0; char c =getchar();\n\twhile(c < '0' || c > '9') (c == '-') ? f =1, c =getchar() : c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn (f) ? -x : x;\n}\n\nvect rel[700];/*\u4fdd\u5b58\u4eb2\u621a\u5750\u6807*/\n\nint main(){\n\tfor(int t =0, T =read(); t < T; ++t){\n\t\tint n =read();\n\t\tint xl =read(), yl =read(), x0 =read(), y0 =read();\n\t\tif(n == 0){/*\u6570\u636e\u7684\u9505*/\n\t\t\tputs(\"0\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tmemset(map, 0, sizeof(map));\n\t\tint totr =0;\n\t\tint s;\n\t\tdouble sdist =1ll*0x7fffffff;\n\t\tfor(int i =0; i < n; ++i){\n\t\t\tint x =read(), y =read();\n\t\t\tif(x > xl || y > yl) continue;/*\u8fd8\u662f\u6570\u636e\u7684\u9505*/\n\t\t\trel[totr++] =vect(x, y);\n\t\t\tdouble d =dist(vect(x0, y0), rel[totr-1]);\n\t\t\tif(gtr(sdist, d)) s =totr-1, sdist =d;/*\u53d6\u8ddd\u79bb\u6700\u8fd1\u7684\u4eb2\u621a\u4f5c\u4e3a\u521d\u59cb\u76d1\u89c6\u7684\uff08\u5373\u8d77\u70b9\uff09*/\n\t\t}\n\t\tfor(int i =0; i < totr; ++i){\n\t\t\tint totl =0;\n\t\t\tfor(int j =0; j < totr; ++j){\n\t\t\t\tif(j == i) continue;\n\t\t\t\tls[totl++] =getmidline(rel[i], rel[j], j);\n\t\t\t}\n\t\t\taddbound(ls, totl, xl, yl, totr);/*\u52a0\u5165\u77e9\u5f62\u8fb9\uff0ctotr \u4f5c\u4e3a\u8fb9\u754c\u70b9*/\n\t\t\tpad h =getHPI(ls, totl, hull);\n\t\t\tfor(int j =h.first; j < h.second; ++j)\n\t\t\t\tmap[i][hull[j].id] =map[hull[j].id][i] =1;\n\t\t}\n\t\tprintf(\"%d\\n\", dijkstra(s, totr));\n\t}\n}\n```\n",
        "postTime": 1592729536,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3297 \u3010[SDOI2013]\u9003\u8003\u3011"
    }
]