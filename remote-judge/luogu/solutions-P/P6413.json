[
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u9898\u9762\u5df2\u7ecf\u5f88\u7b80\u6d01\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n### \u601d\u8def\u5206\u6790\n\u5b9a\u74061\uff1a\u5bf9\u4e8e\u4e00\u6761\u6700\u77ed\u8def $u$ -> $v$\uff0c\u5b83\u7684\u4efb\u610f\u4e00\u4e2a\u5b50\u8def\u5f84 $u_1$ -> $v_1$ \u90fd\u662f\u4e00\u6761\u6700\u77ed\u8def\u3002\n\n\u8bc1\u660e\uff1a\u5047\u8bbe $u_1$ -> $v_1$ \u4e0d\u662f\u6700\u77ed\u8def\uff0c\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u6761\u8def\u5f84 $u_2$ -> $v_2$ \u4f7f\u5f97 $u$ -> $v$ \u66f4\u77ed\uff0c\u4e0e $u$ -> $v$ \u662f\u6700\u77ed\u8def\u77db\u76fe\u3002\n\n\u6839\u636e\u5b9a\u74061\uff0c\u4e00\u5f20\u56fe $G$\uff0c\u5728\u56fa\u5b9a\u6e90\u70b9 $S$ \u65f6\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u5f20\u5b50\u56fe $G_1$ \u4f7f\u5f97 $G_1$ \u4e0a\u4efb\u610f\u4e00\u6761\u8fb9\u90fd\u5728 $S$ \u5230\u81f3\u5c11\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e0a\uff0c\u4e14\u4e0d\u518d $G_1$ \u4e0a\u7684\u8fb9\u90fd\u4e0d\u5728 $S$ \u5230\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u4e0a\u3002\u6211\u4eec\u79f0\u56fe $G_1$ \u4e3a\u6700\u77ed\u8def\u56fe\u3002\n\n\u5224\u65ad\u4e00\u6761\u8fb9\u662f\u5426\u5728\u6700\u77ed\u8def\u56fe\u4e0a\uff0c\u53ea\u9700\u5224\u65ad $dis[u]+val[v] == dis[v]$ \u662f\u5426\u6210\u7acb\u3002\n\n\u6c42\u6700\u77ed\u8def\u56fe\u53ef\u4ee5\u7528 `SPFA` \u6765\u89e3\u51b3\u3002\n\n$dis[i]$ \u8868\u793a\u8ddd\u79bb\uff0c$vis[i]$ \u8868\u793a\u662f\u5426\u5165\u961f\uff0c$book[i]$ \u8868\u793a\u662f\u5426\u5728\u6700\u77ed\u8def\u56fe\u4e2d\u3002\n\n```cpp\nvoid spfa(int s){\n    memset(dis,0x3f,sizeof(dis));\n    memset(vis,false,sizeof(vis));\n    memset(book,false,sizeof(book));\n    dis[s]=0;\n    vis[s]=true;\n    q.push(s);\n    while(!q.empty()){\n        int now=q.front();\n        vis[now]=false;\n        q.pop();\n        for(int i=head[now];i;i=edge[i].next){\n            int v=edge[i].to;\n            if(dis[v]>dis[now]+edge[i].val){\n                dis[v]=dis[now]+edge[i].val;\n                if(!vis[v]){\n                    vis[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    for(int i=1;i<=m;i++){\n        if(dis[edge[i].from]+edge[i].val==dis[edge[i].to])\n            book[i]=true;\n    }\n}\n```\n\u5b9a\u74062\uff1a\u4efb\u610f\u7684\u6700\u77ed\u8def\u56fe\uff0c\u4e00\u5b9a\u4e0d\u5b58\u5728\u73af\u3002\n\n\u8bc1\u660e\uff1a\u5047\u8bbe\u56fe\u4e2d\u5b58\u5728\u73af $u_1$ -> $u_2$ -> $u_3$ -> \u2026\u2026 -> $u_n$ -> $u_1$\uff0c\u5219\u6709 $dis[u_1]+val[u_2] == dis[u_2]$\uff0c$dis[u_2]+val[u_3] == dis[u_3]$\uff0c\n\n\u2026\u2026 \n\n$dis[u_n]+val[u_1] == dis[u_1]$\u3002\n\n\u56e0\u4e3a\u8fb9\u6743\u90fd\u4e3a\u6b63\u6570\uff0c\u5219\u6709 $dis[u_n]>dis[u_1]$\uff0c$dis[u_1]>dis[u_n]$\u3002\n\u77db\u76fe\u3002\n \n\n\u6c42\u51fa\u6700\u77ed\u8def\u56fe\u540e\uff0c\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u8bbe `cnt1[i]` \u8868\u793a $S$ \u5230 $i$ \u70b9\u7684\u6700\u77ed\u8def\u6570\u91cf\uff0c`cnt2[i]` \u8868\u793a $i$ \u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u6570\u91cf\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u6761\u8fb9 $e(u,v)$\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u7b54\u6848\u4e3a $cnt1[u]*cnt2[v]$\u3002\n\n\u4f46\u9898\u76ee\u4e2d\u6e90\u70b9\u548c\u7ec8\u70b9\u5e76\u6ca1\u6709\u7ed9\u51fa\uff0c\u53ea\u679a\u4e3e\u6e90\u70b9\uff0c\u5e76\u4e0d\u80fd\u77e5\u9053\u7ec8\u70b9\u3002\u6839\u636e\u5b9a\u74062\u53ef\u4ee5\u8003\u8651\u5bf9\u6700\u77ed\u8def\u56fe\u62d3\u6251\u6392\u5e8f\uff0c\u7136\u540e\u6309\u7167\u62d3\u6251\u5e8f\u5012\u5e8f\u6c42 $cnt2$\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u679a\u4e3e\u987a\u5e8f\u4e3a\u62d3\u6251\u5e8f\u5012\u5e8f\uff0c\u5f53\u524d\u70b9\u4e3a $u$\uff0c$u$ \u70b9\u6307\u5411 $v_1$\uff0c$v_2$\uff0c\u5219\u6709\n$cnt2[u]=cnt2[v_1]+cnt2[v_2]$\u3002\n\n$topo$ \u6570\u7ec4\u4e0e $tag$ \u8bb0\u5f55\u62d3\u6251\u5e8f\u3002\n\n\n\n```cpp\nvoid TopoSort(int s){\n    memset(ind,0,sizeof(ind));\n    memset(cnt1,0,sizeof(cnt1));\n    memset(cnt2,0,sizeof(cnt2));\n    cnt1[s]=1;\n    q.push(s);\n    tag=0;\n    for(int i=1;i<=m;i++){\n        if(book[i])\n            ind[edge[i].to]++;\n        \n    }\n    while(!q.empty()){\n        int now=q.front();\n        q.pop();\n        topo[++tag]=now;\n        for(int i=head[now];i;i=edge[i].next){\n            if(!book[i])\n                continue;\n            int v=edge[i].to;\n            ind[v]--;\n            if(ind[v]==0)\n                q.push(v);\n            cnt1[v]+=cnt1[now];\n            cnt1[v]%=mod;\n        }\n    }\n    for(int i=tag;i;i--){\n        int now=topo[i];\n        cnt2[now]++;\n        for(int j=head[now];j;j=edge[j].next){\n            if(!book[j])\n                continue;\n            int v=edge[j].to;\n            cnt2[now]+=cnt2[v];\n            cnt2[now]%=mod;\n        }\n    }\n}\n```\n\n",
        "postTime": 1619924354,
        "uid": 225607,
        "name": "hellhell",
        "ccfLevel": 5,
        "title": "P6413 [COCI2008-2009#3] NAJKRACI \u9898\u89e3"
    },
    {
        "content": "# \u9898\u9762\n[\u9053\u8def](https://www.luogu.com.cn/problem/P2505)\n\n[My Blog](https://blog.csdn.net/init1064573673/article/details/116571091) \n# \u9898\u89e3\n### \u9898\u610f\n\u5bf9\u4e8e\u6bcf\u6761\u9053\u8def\uff0c\u6c42\u51fa\u6709\u591a\u5c11\u6761\u6700\u77ed\u8def\u7ecf\u8fc7\u5b83\u3002\n### \u89e3\u6790\n\u5148\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c\u4e0d\u7b97\u5927\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5206\u522b\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff0c\u7528SPFA\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u6e90\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u8fb9 $(u,v,w)$\uff0c\u5982\u679c $dis[u] + w = dis[v]$\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u4e00\u5b9a\u5728\u6e90\u70b9\u5230 $v$ \u7684\u6700\u77ed\u8def\u4e0a\u3002\n\u800c\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u8fb9\uff0c\u663e\u7136\u5bf9\u7b54\u6848\u6beb\u65e0\u8d21\u732e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u8dd1\u5b8c\u6700\u77ed\u8def\u540e\u5ffd\u7565\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u8fd9\u4e9b\u8fb9\u3002\n\n\u8fd9\u6837\u539f\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u526fDAG\u56fe\uff0c\u56e0\u4e3a\u4e0d\u5b58\u5728 $dis[u] + w = dis[v]$ \uff0c\u4e14 $dis[v] + w = dis[u]$\u3002\n\n\u5728DAG\u56fe\u4e0a\u6211\u4eec\u5c31\u53ef\u4ee5\u8dd1\u62d3\u6251\u6392\u5e8f\u4e86\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6c42\u51fa\u4ece\u6e90\u70b9\u5230\u8fbe\u5b83\u7684\u65b9\u6848\u6570\uff0c\u518d\u6309\u7167\u62d3\u6251\u6392\u5e8f\u7684\u9006\u5e8f\u6c42\u51fa\u4ece\u540e\u9762\u7684\u8282\u70b9\u5230\u8fbe\u5f53\u524d\u8282\u70b9\u7684\u65b9\u6848\u6570\u3002\n\n\u539f\u56e0\u8bf7\u770b\u4e0b\u56fe\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210509214202784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2luaXQxMDY0NTczNjcz,size_16,color_FFFFFF,t_70#pic_center)\n\u4ece\u6e90\u70b9\u5230 $u$ \u7684\u65b9\u6848\u6570\u8bb0\u4e3a $cnt1[u]$\uff0c\u4ece\u540e\u9762\u7684\u8282\u70b9\u5230\u8fbe $v$ \u7684\u65b9\u6848\u6570\u8bb0\u4e3a $cnt2[v]$ \uff0c\u4e0d\u96be\u53d1\u73b0\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u8fd9\u6761\u4ece $u$ \u5230 $v$ \u7684\u8fb9\u5c31\u6709 $cnt1[u] \\times cnt2[v]$ \u6761\u6700\u77ed\u8def\u7ecf\u8fc7\u4e86\u5b83\u3002\u56e0\u4e3a\u5f53\u524d\u56fe\u53ea\u4fdd\u7559\u4e86\u5728\u6700\u77ed\u8def\u4e0a\u7684\u8fb9\uff0c\u8fd9\u4e9b\u65b9\u6848\u6570\u786e\u5b9e\u90fd\u662f\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u7b54\u6848\u662f\u6b63\u786e\u7684\u3002\n# \u4ee3\u7801\n\u4e0d\u77e5\u9053\u6211\u6309\u7167\u6b63\u5e38\u7684SPFA\u7684\u5199\u6cd5\u4e3a\u4ec0\u4e48\u53ea\u80fd\u8fc740\u5206\uff0c\u8fd9\u4efd\u4ee3\u7801\u91cc\u9762\u7684SPFA\u7684\u5185\u5bb9\u662f\u53c2\u8003\u4e86\u5176\u5b83\u9898\u89e3\u7684\u5199\u6cd5\u7684\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#define re register\n\nusing namespace std;\n\nconst int N = 1505,M = 5005;\nconst int mod = 1e9 + 7;\n\nstruct edge {\n\tint from,next,to,w;\n}a[M];\nint head[N],dis[N],ans[M],que[M << 1],n,m,a_size = 0;\nbool vis[N],is[M];\ninline void add(int u,int v,int w) {\n\ta[++a_size] = (edge){u,head[u],v,w};\n\thead[u] = a_size;\n}\nvoid SPFA(int s) {\n    memset(dis,0x3f,sizeof(dis));\n    memset(is,0,sizeof(is)); re int len;\n    dis[que[len = 1] = s] = 0; vis[s] = true;\n    for (re int i = 1; i <= len; i++) {\n        int u = que[i]; vis[u] = 0;\n        for (re int e = head[u],v; e; e = a[e].next)\n            if (dis[u] + a[e].w < dis[v = a[e].to]) {\n                dis[v] = dis[u] + a[e].w;\n                if (!vis[v]) vis[que[++len] = v] = 1;\n            }\n    }\n    for (re int i = 1; i <= m; i++)\n        if (dis[a[i].from] + a[i].w == dis[a[i].to])\n            is[i] = 1;\n}\nint deg[N],cnt1[N],cnt2[N],ord[N],len;\nqueue<int> q;\nvoid tuopu(int s) {\n\twhile(!q.empty()) q.pop();\n\tmemset(deg,0,sizeof(deg));\n\tmemset(cnt1,0,sizeof(cnt1));\n\tmemset(cnt2,0,sizeof(cnt2)); len = 0;\n\tfor(re int i = 1; i <= m; i++) if(is[i]) deg[a[i].to]++;\n\tq.push(s); cnt1[s] = 1;\n\twhile(!q.empty()) {\n\t\tint x = q.front();\n\t\tq.pop(); ord[++len] = x;\n\t\tfor(int i = head[x]; i; i = a[i].next) {\n\t\t\tif(!is[i]) continue;\n\t\t\tint y = a[i].to;\n\t\t\tcnt1[y] = (cnt1[y] + cnt1[x]) % mod;\n\t\t\tif(--deg[y] == 0) q.push(y);\n\t\t}\n\t}\n\tfor(re int j = len; j >= 1; j--) {\n\t\tre int x = ord[j]; cnt2[x]++;\n\t\tfor(re int i = head[x]; i; i = a[i].next) {\n\t\t\tif(!is[i]) continue;\n\t\t\tcnt2[x] = (cnt2[x] + cnt2[a[i].to]) % mod; \n\t\t}\n\t}\n}\ninline int read() {\n\tre int x = 0,flag = 1;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9'){if(ch == '-')flag = -1;ch = getchar();}\n\twhile(ch >='0' && ch <='9'){x = (x << 3) + (x << 1) + ch - 48;ch = getchar();}\n\treturn x * flag;\n}\nint main() {\n\tn = read(),m = read();\n\tfor(re int i = 1,u,v,w; i <= m; i++) {\n\t\tu = read(),v = read(),w = read();\n\t\tadd(u,v,w);\n\t}\n\tfor(re int i = 1; i <= n; i++) {\n\t\tSPFA(i); tuopu(i);\n\t\tfor(re int j = 1; j <= m; j++)\n\t\t\tif(is[j]) ans[j] = (ans[j] + 1ll * cnt1[a[j].from] * cnt2[a[j].to] % mod) % mod;\n\t}\n\tfor(re int i = 1; i <= m; i++) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1620568513,
        "uid": 385145,
        "name": "\u795e\u7737\u4e4b\u6a31\u82b1",
        "ccfLevel": 4,
        "title": "P6453 \u9898\u89e3"
    },
    {
        "content": "## \u5206\u6790\n\n\u8ba1\u7b97\u51fa\u6700\u77ed\u8def\u540e\uff0c\u4e00\u6761\u8fb9\u662f\u6700\u77ed\u8def\u7684\u4e00\u90e8\u5206\uff0c\u5f53\u4e14\u4ec5\u5f53\u8d77\u70b9\u7684 $f$ \u503c\u52a0\u4e0a\u8be5\u8fb9\u8fb9\u6743\u7b49\u4e8e\u7ec8\u70b9\u7684 $f$ \u503c\uff0c\u6240\u4ee5\u8dd1\u6700\u77ed\u8def\u540e\uff0c\u5bf9 $m$ \u6761\u8fb9\u8fdb\u884c\u5224\u5b9a\uff0c\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u52a0\u5165\u6700\u77ed\u8def\u56fe\u3002\n\n\u52a0\u5165\u540e\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u8ba1\u7b97\u4ee5\u8be5\u8fb9\u4f5c\u4e3a\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u4e2a\u6570 $cntz$\uff0c\u548c\u8be5\u8fb9\u4f5c\u4e3a\u8d77\u70b9\u7684\u6700\u77ed\u8def $cntq$\uff0c\u6613\u8bc1\u4e24\u5b50\u95ee\u9898\u7684\u8ba1\u7b97\u4e92\u4e3a\u5012\u5e8f\uff0c\u62d3\u6251\u6392\u5e8f\u53ea\u9700\u8dd1\u8d77\u70b9\u5230\u7ec8\u70b9\u5373\u53ef\uff0c\u8dd1\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u987a\u5e8f\uff0c\u5728\u5012\u7740\u987a\u5e8f\u628a $cntz$ \u52a0\u56de\u6765\uff0c\u6700\u540e\u5c06\u4e24\u503c\u76f8\u4e58\uff0c\u5373\u4e3a\u7b54\u6848\u3002\n\n\u53e6\u5916\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u662f\u4e0d\u65ad\u6362\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\uff0cdijkstra \u7684\u590d\u6742\u5ea6\u53ef\u80fd\u56e0 memset \u8fc7\u591a\u800c\u65f6\u95f4\u8f83\u957f\uff0cspfa \u4f1a\u4f4e\u4e00\u4e9b\uff0c\u867d\u7136\u672c\u9898\u65f6\u95f4\u4e0a\u9650\u5f88\u9ad8\uff0c\u4f46\u5f53\u7136\u8d8a\u4f18\u8d8a\u597d\u3002\n\n### \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,head[1501],vis[1501],flag[5001],f[1501],cnt,ans[5001],sum[1501],cntm[1501],cntq[1501];\nconst int mod=1e9+7;\nstruct node{\n\tint to,w,fr,next;\n}a[5001];\nvoid read(int &res){\n\tchar c;\n\tres=0;\n\tc=getchar();\n\twhile(c<'0'||c>'9'){c=getchar();}\n\twhile(c>='0'&&c<='9')res=(res<<1)+(res<<3)+c-48,c=getchar();\n}\npriority_queue<pair<int,int> > q;\n/*\ninline void dijkstra(int qq){\n\tmemset(vis,0,sizeof(vis));\n\tmemset(flag,0,sizeof(flag));\n\tmemset(f,127,sizeof(f));\n\tf[qq]=0;\n\tq.push(make_pair(0,qq));\n\twhile(q.size()){\n\t\tint x=q.top().second;q.pop();\n\t\tif(vis[x])continue;\n\t\tvis[x]=1;\n\t\tfor(register int i=head[x];i;i=a[i].next){\n\t\t\tint v=a[i].to;\n\t\t\tif(f[v]>f[x]+a[i].w){\n\t\t\t\tf[v]=f[x]+a[i].w;\n\t\t\t\tq.push(make_pair(-f[v],a[i].to));\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i=1;i<=m;++i){\n\t\tif(f[a[i].fr]+a[i].w==f[a[i].to])flag[i]=1;\n\t}\n}\n*/\n\nint que[10001],len;\n\ninline void spfa(int qq) {\n    memset(f,127,sizeof(f));\n    memset(flag,0,sizeof(flag));\n    f[que[len=1]=qq]=0;\n    for (register int i = 1; i <= len; i++) {\n        int x=que[i];vis[x]=0;\n        for (register int i=head[x];i;i=a[i].next){\n        \tint v=a[i].to;\n            if(f[x]+a[i].w<f[v]){\n            \tf[v]=f[x]+a[i].w;\n            \tif(!vis[v])vis[que[++len]=v]=1;\n\t\t\t}\n\t\t}\n    }\n    for(register int i=1;i<=m;++i){\n\t\tif(f[a[i].fr]+a[i].w==f[a[i].to])flag[i]=1;//\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fdb\u884c\u6807\u8bb0 \n\t}\n}\n\nint qu[1501],tot;\ninline void topu(int qq){\n\tmemset(sum,0,sizeof(sum));\n\tmemset(cntm,0,sizeof(cntm));\n\tmemset(cntq,0,sizeof(cntq));\n\tfor(register int i=1;i<=m;++i)if(flag[i])sum[a[i].to]++;\n\tcntm[qq]=1;\n\tqu[tot=1]=qq;\n\tfor(register int i=1;i<=tot;++i){\n\t\tint x=qu[i];\n\t\tfor(register int i=head[x];i;i=a[i].next){\n\t\t\tif(!flag[i])continue;\n\t\t\tint v=a[i].to;\n\t\t\tif(!--sum[v])qu[++tot]=v;\n\t\t\tcntm[v]=(cntm[v]+cntm[x])%mod;\n\t\t}\n\t}\n\tfor(register int i=tot;i;i--){\n\t\tint x=qu[i];cntq[x]++;\n\t\tfor(register int i=head[x];i;i=a[i].next){\n\t\t\tif(!flag[i])continue;\n\t\t\tcntq[x]=(cntq[x]+cntq[a[i].to])%mod;\n\t\t}\n\t}\n}\n\ninline void sol(int qq){\n\tspfa(qq);topu(qq);\n\tfor(register int i=1;i<=m;++i){\n\t\tif(flag[i])ans[i]=(ans[i]+1ll*cntm[a[i].fr]*cntq[a[i].to]%mod)%mod;\n\t}\n}\n\ninline void add(int qq,int mm,int l){\n\ta[++cnt].fr=qq;\n\ta[cnt].next=head[qq];\n\thead[qq]=cnt;\n\ta[cnt].to=mm;\n\ta[cnt].w=l;\n}\nint main()\n{\n\tread(n);read(m);\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,j;\n\t\tread(x);read(y);read(j);\n\t\tadd(x,y,j);\n\t}\n\tfor(int i=1;i<=n;i++)sol(i);\n\tfor(int i=1;i<=m;i++){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1620395996,
        "uid": 166410,
        "name": "\u6f20\u5bd2",
        "ccfLevel": 7,
        "title": "P6413 [COCI2008-2009#3] NAJKRACI"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u6761\u9053\u8def\uff0c\u6c42\u51fa\u6709\u591a\u5c11\u6761\u6700\u77ed\u8def\u7ecf\u8fc7\u5b83\u3002\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u5bf9 $10^9+7$ \u53d6\u6a21\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u89c2\u5bdf\u5230 $n$ \u7684\u6570\u636e\u8303\u56f4\u8db3\u591f\u8dd1 $n^2$ \u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u6765\u4e2a\u66b4\u529b\u7b97\u6cd5\uff1a\n\n\u4ee5\u6bcf\u4e2a\u70b9\u4e3a\u539f\u70b9 $st$ \u8dd1\u4e00\u8fb9 $\\rm Spfa$\uff0c\u5982\u679c\u5b58\u5728\u4e00\u6761\u8fb9 $dis[u]+w=dis[v]$ \u90a3\u4e48\u8fb9 $(u,v)$ \u5728\u6700\u77ed\u8def\u5f84\u4e0a\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u6392\u9664\u6389\u90a3\u4e9b\u4e0d\u5728\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8fb9\u4e86\u3002\n\n\u4f46\u662f\u600e\u4e48\u6c42\u7ecf\u8fc7\u67d0\u6761\u9053\u8def\u7684\u6b21\u6570\u5462\uff1f\u4ee4 $cnt1[u]$ \u8868\u793a $st$ \u5230 $u$ \u7684\u6700\u77ed\u8def\u5f84\u6570\uff0c$cnt2[v]$ \u8868\u793a\u4ece\u70b9 $v$ \u51fa\u53d1\u7684\u6700\u77ed\u8def\u5f84\u6570\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u8fd9\u6761\u8fb9 $(u,v)$ \u7684\u5355\u6b21\u7ecf\u8fc7\u6b21\u6570\u4e3a $cnt1[u]\\times cnt2[v]$\uff0c\u603b\u5171\u7684\u7ecf\u8fc7\u6b21\u6570\u5373\u4e3a\u628a\u6240\u6709\u70b9\u90fd\u5f53\u505a\u4e00\u6b21\u539f\u70b9\u8dd1\u51fa\u7684\u7ed3\u679c\u4e4b\u548c\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u53ef\u4ee5\u8f7b\u6613\u5224\u65ad\u51fa\u6bcf\u6761\u8fb9\u662f\u5426\u5728\u6700\u77ed\u8def\u5f84\u4e0a\uff0c\u56e0\u4e3a $dis$ \u5bb9\u6613\u6c42\u3002$cnt1,cnt2$ \u5219\u8dd1\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\u5c31\u6c42\u51fa\u6765\u4e86\u3002\n\n\u5b58\u8fb9\u53ef\u4ee5\u7528 `tuple` \u5b58\u3002\n\n**\u6ce8\u610f\u591a\u6d4b\u8981\u6e05\u7a7a\uff01\uff01\uff01\uff08\u56e0\u4e3a\u4f1a\u628a\u6bcf\u4e2a\u70b9\u90fd\u5f53\u505a\u6e90\u70b9\u8dd1\u4e00\u6b21 $\\rm Spfa$ \u548c\u62d3\u6251\u6392\u5e8f\uff09**\n\n# \u4ee3\u7801\n\n```cpp\n//2022/4/19\n#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <tuple>\n#include <queue>\n#define enter putchar(10)\n#define debug(c,que) cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) cout << arr[i] << w;\n#define speed_up() ios::sync_with_stdio(false),cin.tie(0),cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define Abs(x) ((x) > 0 ? (x) : -(x))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\nusing namespace std;\ntypedef tuple<int,int,int> TII;\n\nconst int N = 5005;\nstruct Gragh {\n\tint v,w,nxt;\n} gra[N];\nint head[N],dis[N],cnt1[N],cnt2[N],ans[N],in[N],que[N];\nbool in_que[N],in_path[N];\nTII edges[N];\nint n,m,idx;\ninline void add(int u,int v,int w) {\n\tgra[++ idx].v = v,gra[idx].w = w,gra[idx].nxt = head[u],head[u] = idx;\n}\ninline void spfa(int st) {\n\tmst(dis,0x3f),mst(in_que,false),mst(in_path,false);\n\tdis[st] = 0,in_que[st] = true;\n\tqueue<int>q;\n\tq.push(st);\n\twhile (!q.empty()) {\n\t\tint u = q.front();q.pop();\n\t\tin_que[u] = false;\n\t\tfor (register int i = head[u];i;i = gra[i].nxt) {\n\t\t\tint v = gra[i].v,w = gra[i].w;\n\t\t\tif (dis[v] > dis[u] + w) {\n\t\t\t\tdis[v] = dis[u] + w;\n\t\t\t\tif (!in_que[v]) {\n\t\t\t\t\tin_que[v] = true;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\ninline void topsort(int st) {\n\tmst(cnt1,0),mst(cnt2,0),mst(in,0),mst(que,0);\n\tint cnt = 0;\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tif (in_path[i]) {\n\t\t\tin[get<1>(edges[i])] ++;\n\t\t}\n\t}\n\tcnt1[st] = 1;\n\tqueue<int>q;\n\tq.push(st);\n\twhile (!q.empty()) {\n\t\tint u = q.front();q.pop();\n\t\tque[++ cnt] = u;\n\t\tfor (register int i = head[u];i;i = gra[i].nxt) {\n\t\t\tint v = gra[i].v;\n\t\t\tif (in_path[i]) {\n\t\t\t\tcnt1[v] = MOD(cnt1[v] + cnt1[u]);\n\t\t\t\tin[v] --;\n\t\t\t\tif (!in[v]) q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tfor (register int i = cnt;i >= 1; -- i) {\n\t\tint u = que[i];\n\t\tcnt2[u] ++;\n\t\tfor (register int j = head[u];j;j = gra[j].nxt) {\n\t\t\tif (in_path[j]) {\n\t\t\t\tcnt2[u] = MOD(cnt2[u] + cnt2[get<1>(edges[j])]);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(void) {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.txt\",\"r\",stdin);\n#endif\n\tn = read(),m = read();\n\tfor (register int i = 1;i <= m; ++ i) {\n\t\tint u = read(),v = read(),w = read();\n\t\tadd(u,v,w);\n\t\tedges[i] = make_tuple(u,v,w);\n\t}\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tspfa(i);\n\t\tfor (register int j = 1;j <= m; ++ j) {\n\t\t\tif (dis[get<0>(edges[j])] + get<2>(edges[j]) == dis[get<1>(edges[j])]) {\n\t\t\t\tin_path[j] = true;\n\t\t\t}\n\t\t}\n\t\ttopsort(i);\n\t\tfor (register int j = 1;j <= m; ++ j) {\n\t\t\tif (in_path[j]) {\n\t\t\t\tans[j] = MOD(ans[j] + cnt1[get<0>(edges[j])] * cnt2[get<1>(edges[j])]);\n\t\t\t}\n\t\t}\n\t}\n\tfor (register int i = 1;i <= m; ++ i) printf(\"%d\\n\",ans[i]);\n\n\treturn 0;\n}\n```",
        "postTime": 1650379414,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P6413 [COCI2008-2009#3] NAJKRACI"
    },
    {
        "content": "\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u53d1\u73b0\u8fd9\u9898\u5b8c\u5168\u53ef\u4ee5\u8dd1 $n$ \u904ddij\u3002\n\n\u90a3\u5bf9\u4e8e\u6bcf\u4e00\u904ddij\u6211\u4eec\u600e\u4e48\u7edf\u8ba1\u7b54\u6848\u5462\uff1f\n\n\u8bbe\u5f53\u524ddij\u8ba1\u7b97\u4ee5 $source$ \u4e3a\u6e90\u70b9\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u3002\n\n\u8003\u8651\u91cd\u65b0\u5efa\u56fe\u3002\u5bf9\u4e8e\u4e00\u6761\u8fb9 $u\\rightarrow v$\uff0c\u82e5\u8fb9\u6743\u4e3a $w$\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u88ab\u4efb\u610f\u4e00\u6761\u6700\u77ed\u8def\u7ecf\u8fc7\uff08\u6211\u4eec\u4ee4 $dis_i$ \u8868\u793a $source$ \u5230 $i$ \u6700\u77ed\u8def\u957f\u5ea6\uff0c\u663e\u7136\u82e5 $dis_u+w>dis_v$\uff0c\u5219\u5b83\u6ca1\u6709\u88ab\u4efb\u610f\u4e00\u6761\u6700\u77ed\u8def\u7ecf\u8fc7\uff09\uff0c\u5219\u4e0d\u628a\u5b83\u52a0\u5165\u65b0\u7684\u56fe\uff0c\u5426\u5219\u52a0\u5165\u3002\u5269\u4e0b\u7684\u56fe\u4e00\u5b9a\u662f\u7531\u88ab\u4ee5 $source$ \u4f5c\u4e3a\u6e90\u70b9\u7684\u6700\u77ed\u8def**\u7ecf\u8fc7\u4e86\u81f3\u5c11\u4e00\u6b21\u7684\u70b9\u3002** \u53ef\u4ee5\u53d1\u73b0\uff0c\u5269\u4e0b\u7684\u56fe**\u4e00\u5b9a\u662fDAG**\u3002\u8fd9\u4e2a\u7ed3\u8bba\u5f88\u663e\u7136\u3002\n\n\u5728\u5269\u4e0b\u7684DAG\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u4e00\u6761\u8fb9\u88ab\u4ece $source$ \u5f00\u59cb\u7684\u6240\u6709\u8def\u5f84\u7ecf\u8fc7\u4e86\u591a\u5c11\u6b21\u3002$In_i$ \u8868\u793a\u4ee5 $source$ \u4e3a\u8d77\u70b9\uff0c$i$ \u4f5c\u4e3a\u7ec8\u70b9\u7684\u8def\u5f84\u6570\uff0c$Out_i$ \u8868\u793a\u4ee5 $i$ \u4f5c\u4e3a\u8d77\u70b9\u7684\u8def\u5f84\u6570\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6240\u6709\u6ee1\u8db3\u5b58\u5728\u4e00\u6761\u4ece $j$ \u5230 $i$ \u7684\u8fb9\u7684\u70b9 $j$\uff0c$In_i=\\sum In_j$\u3002\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u6240\u6709\u6ee1\u8db3\u5b58\u5728\u4e00\u6761\u4ece $i$ \u5230 $j$ \u7684\u8fb9\u7684\u70b9 $j$\uff0c$Out_i=\\sum Out_j$\u3002\n\n\u9700\u8981\u5bf9\u8fd9\u4e2aDAG\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u3002\u5e78\u8fd0\u7684\u662f\uff0cDijkstra\u7684\u8282\u70b9\u51fa\u961f\u987a\u5e8f\u672c\u8eab\u5c31\u662f\u8be5DAG\u7684\u4e00\u4e2a\u62d3\u6251\u5e8f\u5217\u3002\u6bd4\u5982 $source=1$\uff0c\u6211\u8282\u70b9\u51fa\u4f18\u5148\u961f\u5217\u7684\u987a\u5e8f\u662f $1,4,2,5,3$\uff0c\u90a3\u4e48\u8fd9\u4e2aDAG\u62d3\u6251\u5e8f\u5c31\u662f $1,4,2,5,3$\u3002\u8ba1\u7b97 $In$ \u6309\u7167\u62d3\u6251\u5e8f\u4ece\u5c0f\u5230\u5927\u8ba1\u7b97\uff0c\u7531\u62d3\u6251\u5e8f\u5c0f\u7684\u63a8\u62d3\u6251\u5e8f\u5927\u7684\uff0c$Out$ \u5219\u6309\u7167\u62d3\u6251\u5e8f\u4ece\u5927\u5230\u5c0f\u8ba1\u7b97\uff0c\u7531\u62d3\u6251\u5e8f\u5927\u7684\u63a8\u62d3\u6251\u5e8f\u5c0f\u7684\u3002\n\n# $Code$\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\ninline int max(const int x, const int y) {return x > y ? x : y;}\ntypedef std::pair<int, int> PII;\nstd::priority_queue<PII, std::vector<PII>, std::greater<PII> > q;\nconst int MOD = 1e9 + 7;\nstruct Edge {\n\tint from, to, w, nxt;\n\tbool mark;\n} e[5001];\nint head[1501], dis[1501], In[1501], Out[1501], top[1501], ans[5001], tot, toptot, n;\nbool done[1501];\ninline void AddEdge(const int u, const int v, const int w) {\n\te[++ tot].to = v, e[tot].from = u, e[tot].w = w, e[tot].nxt = head[u], head[u] = tot;\n}\n\ninline void Dijkstra(const int source) {\n\tmemset(dis, 0x3f, sizeof dis);\n\tmemset(done, 0, sizeof done);\n\tmemset(In, 0, sizeof In);\n\tmemset(Out, 0, sizeof Out);\n\ttoptot = 0;\n\twhile (q.size()) q.pop();\n\tfor (int i(1); i <= tot; ++ i) e[i].mark = false;\n\tq.push(std::make_pair(dis[source] = 0, source));\n\twhile (q.size()) {\n\t\tint u(q.top().second);\n\t\tq.pop();\n\t\tif (done[u]) continue;\n\t\tdone[u] = true;\n\t\ttop[++ toptot] = u;\n\t\tfor (int i(head[u]); i; i = e[i].nxt) {\n\t\t\tint v(e[i].to);\n\t\t\tif (dis[u] + e[i].w < dis[v])\n\t\t\t\tq.push(std::make_pair(dis[v] = dis[u] + e[i].w, v));\n\t\t}\n\t}\n\tfor (int i(1); i <= tot; ++ i)\n\t\tif (dis[e[i].from] + e[i].w == dis[e[i].to]) e[i].mark = true;\n\tfor (int i(toptot); i; -- i) {\n\t\tfor (int j(head[top[i]]); j; j = e[j].nxt) if (e[j].mark)\n\t\t\tOut[top[i]] += Out[e[j].to];\n\t\t++ Out[top[i]];\n\t}\n\tIn[source] = 1;\n\tfor (int i(1); i <= toptot; ++ i) {\n\t\tfor (int j(head[top[i]]); j; j = e[j].nxt) if (e[j].mark)\n\t\t\tIn[e[j].to] += In[top[i]];\n\t}\n\tfor (int i(1); i <= tot; ++ i)\n\t\tif (e[i].mark) ans[i] += 1LL * max(1, In[e[i].from]) * max(1, Out[e[i].to]) % MOD, ans[i] %= MOD;\n}\n\nint main() {\n\tint m;\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i(1); i <= m; ++ i) {\n\t\tint u, v, w;\n\t\tscanf(\"%d%d%d\", &u, &v, &w);\n\t\tAddEdge(u, v, w);\n\t}\n\tfor (int i(1); i <= n; ++ i) Dijkstra(i);\n\tfor (int i(1); i <= tot; ++ i) printf(\"%d\\n\", ans[i]);\n}\n```",
        "postTime": 1611912078,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6413 \u3010[COCI2008-2009#3] NAJKRACI\u3011"
    }
]