[
    {
        "content": "## $\\color{green}{\\text{Front Knowledge - A}^{*} \\text{ algorithm}}$\n\n`A* \u7b97\u6cd5`\uff0c\u5c31\u662f\u542f\u53d1\u5f0f\u7684 `BFS` \u7b97\u6cd5\u3002\u5b83\u4f9d\u8d56\u4e8e\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570\uff1a\n\n- $g$ \u51fd\u6570\uff1a\u5373\u4ece\u5f00\u59cb\u5230\u5f53\u524d\u72b6\u6001\u7684\u82b1\u8d39\u3002\n- $g^*$ \u51fd\u6570\uff1a\u4f30\u8ba1\u7684\u4ece\u5f00\u59cb\u5230\u5f53\u524d\u72b6\u6001\u7684\u82b1\u8d39\u3002\u7531\u4e8e `BFS` \u7684\u7279\u6b8a\u6027\uff0c\u6211\u4eec\u4e00\u5b9a\u6709 $g=g^*$\u3002\n- $h$ \u51fd\u6570\uff1a\u4ece\u5f53\u524d\u72b6\u6001\u5230\u7ed3\u675f\u72b6\u6001\u7684**\u5b9e\u9645**\u82b1\u8d39\u3002\n- $h^*$ \u51fd\u6570\uff1a\u4ece\u5f53\u524d\u72b6\u6001\u5230\u7ed3\u675f\u72b6\u6001\u7684**\u4f30\u8ba1**\u82b1\u8d39\u3002\n- $f$ \u51fd\u6570\uff1a\u4ece\u8d77\u59cb\u72b6\u6001\u5230\u5f53\u524d\u72b6\u6001\u518d\u5230\u7ed3\u675f\u72b6\u6001\u7684\u603b\u82b1\u8d39\u3002\u5373 $f=g+h$\u3002\n- $f^*$ \u51fd\u6570\uff1a\u4ece\u8d77\u59cb\u72b6\u6001\u5230\u5f53\u524d\u72b6\u6001\u518d\u5230\u7ed3\u675f\u72b6\u6001\u7684\u4f30\u8ba1\u82b1\u8d39\u3002\u5373 $f^* = g^*+h^* = g +h^*$\u3002\n\n\u6211\u4eec\u7684 `A*\u7b97\u6cd5` \u5c31\u662f\u6839\u636e $f^*$ \u4ece\u5c0f\u5230\u5927\u6765\u904d\u5386\u641c\u7d22\u8282\u70b9\uff08\u56e0\u4e3a\u5b83\u6700\u6709\u53ef\u80fd\u6700\u4f18\uff09\u3002\n\n\u4e3a\u4e86\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u6211\u4eec\u8981\u6c42 $h^* \\leq h$\u3002\u540c\u65f6 $h^*$ \u8d8a\u5927\uff0c`A*\u7b97\u6cd5` \u901f\u5ea6\u8d8a\u5feb\uff0c\u6240\u4ee5 $h^*$ \u51fd\u6570\u7684\u597d\u574f\u51b3\u5b9a\u4e86\u6574\u4e2a\u7b97\u6cd5\u7684\u597d\u574f\u3002\n\n---------------------------------------------------------------\n\n## $\\color{green}{\\text{K}^{\\text{th}} \\text{ Shortest Path}}$\n\n\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u6c42\u4e00\u5f20\u56fe\u7684\u7b2c $K$ \u77ed\u7684\u8def\u5f84\u3002\n\n\u8003\u8651\u66b4\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u7684\u53ef\u80fd\u8def\u5f84\uff0c\u7136\u540e\u6392\u5e8f\uff0c\u53d6\u7b2c $K$ \u5c0f\u503c\u5373\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6c42\u6240\u6709\u53ef\u80fd\u8def\u5f84\u7684\u7b97\u6cd5\u4f1a `TLE`\u3002\n\n\u8003\u8651\u5982\u4f55\u7528 $\\text{A}^{*}%$ \u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u6211\u4eec\u5148\u6c42\u51fa\u6240\u6709\u7684\u70b9\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb $dis_i$\uff0c\u7136\u540e\u8dd1\u4e00\u904d `A*` \u7b97\u6cd5\u3002$d^{*}$ \u51fd\u6570\u5c31\u662f\u5f53\u524d\u72b6\u6001\uff08\u70b9\uff09\u7684 $dis$ \u503c\uff0c\u8bb0\u4ece\u8d77\u70b9\u5230\u5f53\u524d\u70b9\u7684\u82b1\u8d39\u4e3a $t$\uff0c\u6545\u800c $f^{*} = d^{*} + g = dis + t$\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a $d^{*}$ \u51fd\u6570\u662f\u76f8\u5f53\u4f18\u79c0\u7684\u3002\u9996\u5148\uff0c\u5b83\u4e00\u5b9a $\\leq d$\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4ece\u4e00\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u82b1\u8d39\u80af\u5b9a $\\geq dis$\uff08\u5426\u5219 $dis$ \u5c31\u4e0d\u662f\u6700\u77ed\u8def\u5f84\u4e86\u5440\uff09\u3002\u5176\u6b21\uff0c\u5b83\u8db3\u591f\u4f18\u79c0\uff0c\u8db3\u591f\u5927\uff0c\u662f\u6211\u4eec\u6682\u65f6\u80fd\u60f3\u5230\u7684\uff0c\u6700\u597d\u6c42\uff0c\u6700\u5927\u7684 $d^{*}$ \u51fd\u6570\u4e86\u3002\n\n\u8fd9\u4e48\u505a\u8fd8\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u5c31\u662f\u7b2c $u$ \u6b21\u5230\u8fbe\u7ec8\u70b9\u5c31\u662f\u7b2c $u$ \u77ed\u8def\u3002\n\n```\n1.\u6c42\u51fa\u6240\u6709\u7684 dis (\u4e00\u904dSPFA/dijkstra) \u641e\u5b9a\n2.\u628a\u8d77\u70b9\u5165\u961f\u5217\n3.\u6269\u5c55 dis + t \u6700\u5c0f\u7684\u70b9\n4.\u7136\u540e\u5b83\u662f\u7ec8\u70b9\uff0c\u5219\u8bb0\u5f55\uff0c\u5982\u679c\u6c42\u51fa K \u77ed\u8def\uff0c\u518d\u89c1\n5.\u4e0d\u65ad\u8fdb\u884c 3 \u76f4\u81f3\u51fa\u89e3\n```\n\n------------------------------------------------------------\n\n## $\\color{green}{\\text{P2901\\ \\ \\ \\ \\ [USACO08MAR]Cow Jogging G}}$\n\n$\\color{blue}{\\text{\u3010\u9898\u610f\u3011\uff1a}}$ \u8f93\u51fa\u4e00\u5f20 $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\uff0c\u8f93\u51fa\u5176 $K$ \u77ed\u8def\uff0c\u82e5\u65e0\uff0c\u5c31\u8f93\u51fa `-1`\u3002\n\n$\\color{blue}{\\text{\u3010\u601d\u8def\u3011\uff1a}}$ `K \u77ed\u8def` \u7684\u6a21\u677f\u9898\u3002\n\n$\\color{blue}{\\text{\u3010\u4ee3\u7801\u3011\uff1a}}$\n```cpp\ntypedef long long ll;int n,m,k;\nconst int N=1e3+100,M=1e6+100;\nstruct edge{int next,to;ll len;};\nedge e[M],E[M];int h[N],H[N],tot,Tot;\ninline void add(int a,int b,int c){\n\te[++tot]=(edge){h[a],b,c};h[a]=tot;\n}//\u94fe\u5f0f\u524d\u5411\u661f\u2014\u2014\u6b63\u5411\u56fe \ninline void Add(int a,int b,int c){\n\tE[++Tot]=(edge){H[a],b,c};H[a]=Tot;\n}//\u94fe\u5f0f\u524d\u5411\u661f\u2014\u2014\u53cd\u5411\u56fe \nint dis[N];//\u70b9\u5230\u7ec8\u70b9\u7684\u957f\u5ea6 \nbool vis[N];//SPFA\u5224\u91cd\u7528\u6570\u7ec4 \ninline void spfa_algorithm(){\n\tqueue<int> q;q.push(1);\n\tmemset(dis,127,sizeof(dis));\n\tmemset(vis,true,sizeof(vis));\n\tvis[1]=false;dis[1]=0;\n\twhile (q.size()){\n\t\tint u=q.front();q.pop();vis[u]=1;\n\t\tfor(int i=H[u];i;i=E[i].next){\n\t\t\tregister int to=E[i].to;\n\t\t\tif (dis[to]>dis[u]+E[i].len){\n\t\t\t\tdis[to]=dis[u]+E[i].len;//updata\n\t\t\t\tif (vis[to]){vis[to]=0;q.push(to);}\n\t\t\t}//\u5355\u6e90\u6700\u77ed\u8def\u7684\u677e\u5f1b\u64cd\u4f5c \n\t\t}//\u7279\u522b\u6ce8\u610f\uff0c\u6211\u4eec\u8dd1\u7684\u662f\u53cd\u5411\u56fe \n\t}\n}\nstruct node{int pos;ll len;};\nbool operator < (node a,node b){\n\treturn a.len+dis[a.pos]>b.len+dis[b.pos];\n}//\u7279\u522b\u6ce8\u610f\uff0c\u56e0\u4e3a\u4f7f\u7528\u4e86STL\u7684\u4f18\u5148\u961f\u5217\n //\u6240\u4ee5\u8fd9\u91cc\u7684\u201c\u5c0f\u4e8e\u201d\u5fc5\u987b\u5b9a\u4e49\u4e3a\u201c\u5927\u4e8e\u201d \nint A_star_algorithm(int &ret){\n\tpriority_queue<node> q;\n\tq.push((node){n,0});\n\twhile (q.size()){\n\t\tnode z=q.top();q.pop();\n\t\tif (z.pos==1){//\u53c8\u5230\u7ec8\u70b9\u4e86 \n\t\t\tprintf(\"%lld\\n\",z.len);\n\t\t\tif ((--ret)==0) return 0;\n\t\t}\n\t\tregister int u=z.pos,i;\n\t\tfor(i=h[u];i;i=e[i].next){\n\t\t\tregister int to=e[i].to;\n\t\t\tq.push((node){to,z.len+e[i].len});\n\t\t}\n\t}\n\treturn ret;\n}\nint main(){\n\tn=read();m=read();k=read();\n\tfor(int i=1,u,v,w;i<=m;i++){\n\t\tu=read();v=read();w=read();\n\t\tadd(u,v,w);Add(v,u,w);\n\t}\n\tspfa_algorithm();\n\tA_star_algorithm(k);\n\twhile (k--) printf(\"-1\\n\");\n\treturn 0;\n}\n\n\n\nread() \u51fd\u6570\u5c31\u662f\u5feb\u8bfb\u51fd\u6570\uff08\u6211\u5199\u5f97\u4e11\uff0c\u5c31\u4e0d\u7ed9\u5927\u5bb6\u4e86\uff09\n```\n\n--------------------------------------\n\n\u5927\u5bb6\u6709\u7a7a\u53ef\u4ee5\u505a\u505a\u8fd9\u9898\uff1a[\u6a21\u677f\u3011k\u77ed\u8def / [SDOI2010]\u9b54\u6cd5\u732a\u5b66\u9662](https://www.luogu.com.cn/problem/P2483)\u3002\u5b83\u5361 `STL` \u54e6\u00b7\uff01\uff01\uff01",
        "postTime": 1585141785,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2901 \u3010[USACO08MAR]Cow Jogging G\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P2901)\n\n# upd:\n\n2023/1/17: \u611f\u8c22 @Code_\u661f\u4e91\uff0c\u5df2\u4fee\u6539\u201c\u5165\u961f\u201d\u4e3a\u201c\u51fa\u961f\u201d\u3002\n\n---\n\n$K$ \u77ed\u8def\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u9898\u578b\uff0c\u5176\u6b63\u89e3\u662f\u4f7f\u7528\u201c\u53ef\u6301\u4e45\u5316\u53ef\u5e76\u5806\u201d\uff0c~~\uff08\u4f46\u6211\u4e0d\u4f1a\uff09~~\u3002\u8fd9\u91cc\u4ecb\u7ecd\u7684\u662f `A*` \u7b97\u6cd5\u3002\n\n`A*` \u7b97\u6cd5\u662f\u4e00\u79cd\u4f18\u5316 BFS \u7684\u7b97\u6cd5\uff0c\u901a\u8fc7\u4f30\u4ef7\u51fd\u6570\u6c42\u5f97\u5269\u4f59\u82b1\u8d39\uff0c\u6765\u201c\u8d2a\u5a6a\u201d\u5730\u641c\u7d22\uff0c\u4f18\u5148\u6269\u5c55\u66f4\u4f18\u79c0\u7684\u72b6\u6001\u3002\u5728\u672c\u9898\u91cc\uff0c\u6211\u4eec\u8bbe $h(i)$ \u8868\u793a $i$ \u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\uff0c$g(i)$ \u8868\u793a\u76ee\u524d\u5230 $i$ \u70b9\u5df2\u8d70\u8fc7\u7684\u8ddd\u79bb\u3002\u7c7b\u4f3c\u4e8e Dijkstra \u7b97\u6cd5\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u4f7f\u7528 `A*` \u7684 BFS \u9700\u8981\u8ba9\u8282\u70b9\u91cd\u590d\u5165\u961f\u4e8e\u51fa\u961f\uff0c\u5f53 $i$ \u53f7\u70b9\u7b2c $k$ \u6b21\u51fa\u961f\u65f6\uff0c\u6240\u8d70\u7684\u8def\u7ebf\u5c31\u662f\u4ece\u8d77\u70b9\u5230\u7b2c $i$ \u53f7\u70b9\u7684\u7b2c $k$ \u77ed\u8def\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n  #include<bits/stdc++.h>\n  using namespace std;\n  int n,m,s,t,tot,ans[105],h[1005],cnt,H[1005],ecnt;//tot\u662f\u76ee\u524dans\u7684\u957f\u5ea6\uff1bh\u3001cnt\u3001H\u3001ecnt\u662f\u94fe\u5f0f\u524d\u5411\u661f\u7684\u8f85\u52a9\u53d8\u91cf\n  int k;\n  struct edge{\n      int v,nxt;\n      double w;\n  }e[10005],E[10005];//\u5b58\u50a8\u8fb9\n  void adde(int u,int v,int w){\n      e[++cnt].nxt=h[u];\n      h[u]=cnt;\n      e[cnt].v=v;\n      e[cnt].w=w;\n  }//\u5efa\u8fb9\n  void Adde(int u,int v,int w){\n      E[++ecnt].nxt=H[u];\n      H[u]=ecnt;\n      E[ecnt].v=v;\n      E[ecnt].w=w;\n  }//\u5efa\u8fb9\n  int dis[1005];//\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n  bool vis[1005];//\u6807\u8bb0\u662f\u5426\u5230\u8fbe\u8fc7\n  struct node{\n      int x;\n      int k;\n      node(){}\n      node(int a,int b){x=a,k=b;}\n      bool operator<(const node &t)const{\n          return k>t.k;//\u91cd\u8f7d\u8fd0\u7b97\u7b26\n      }\n  };\n  void D(){//Dijkstra\n      priority_queue<node>q;\n      q.push(node(t,0));\n      for(int i=1;i<=n;i++)dis[i]=1e9;\n      dis[t]=0;//\u521d\u59cb\u5316\n      while(!q.empty()){\n          node tmp=q.top();\n          q.pop();\n          if(vis[tmp.x])continue;\n          vis[tmp.x]=1;\n          for(int i=H[tmp.x];i;i=E[i].nxt){\n              if(tmp.k+E[i].w<dis[E[i].v]){\n                  dis[E[i].v]=tmp.k+E[i].w;//\u677e\u5f1b\n                  q.push(node(E[i].v,dis[E[i].v]));\n              }\n          }\n      }\n  }\n  struct Node{//\u51c6\u5907A*\n      int x;\n      int k;\n      Node(){}\n      Node(int a,int b){x=a,k=b;}\n      bool operator<(const Node &t)const{\n          return k+dis[x]>t.k+dis[t.x];\n      }\n  };\n  void st(){\n      priority_queue<Node>q;\n      q.push(Node(s,0));\n      while(!q.empty()){\n          Node tmp=q.top();\n          q.pop();\n          if(tmp.x==t){//\u5230\u4e86\u7ec8\u70b9\n              ans[++tot]=tmp.k;//\u5b58\u50a8\n              if(tot==k)return;//k\u6761\u90fd\u6709\u4e86\n              continue;\n          }\n          for(int i=h[tmp.x];i;i=e[i].nxt){\n              q.push(Node(e[i].v,tmp.k+e[i].w));//\u6269\u5c55\n          }\n      }\n  }\n  int main()\n  {\n      scanf(\"%d%d%d\",&n,&m,&k);s=n,t=1;//\u4ecen\u53f7\u70b9\u52301\u53f7\u70b9\n      int u,v,w;\n      for(int i=1;i<=m;i++){\n          scanf(\"%d%d%d\",&u,&v,&w);\n          adde(u,v,w);//\u6b63\u5411\u8fb9\n          Adde(v,u,w);//\u53cd\u5411\u8fb9\uff08\u6c42\u5230\u7ec8\u70b9\u6700\u77ed\u8def\uff09\n      }\n      D();\n      st();\n      for(int i=1;i<=tot;i++)printf(\"%d\\n\",ans[i]);//\u8f93\u51fa\u7b54\u6848\n      for(int i=tot+1;i<=k;i++)printf(\"-1\\n\");//\u4e0d\u591f\u7684\u8865\u5168\n      return 0;\n  }\n```",
        "postTime": 1644643317,
        "uid": 428358,
        "name": "cqbztzl",
        "ccfLevel": 5,
        "title": "P2901\u9898\u89e3"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u8bf8\u4f4d\u795e\u4ed9\u7528\u7684\u90fd\u662f$A^*$\u6216\u662f\u5e7f\u641c\u8fd9\u79cd\u795e\u4ed9\u7b97\u6cd5\u5440\u2026\u2026\u8001\u8001\u5b9e\u5b9eDP\u5b83\u4e0d\u9999\u5417\uff1f\n\n\u6211\u4eec\u8bbe$f[i][j]$\u8868\u793a\uff1a\u4ee5\u7b2c$i$\u4e2a\u70b9\u4e3a\u7ec8\u70b9\u7684\u7b2c$j$\u77ed\u8def\u7684\u957f\u5ea6\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u5e8f\u5217\u7ffb\u8f6c\uff0c\u5373\u4ece$1$\u53f7\u70b9\u51fa\u53d1\uff0c\u5230\u8fbe$n$\u53f7\u70b9\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84$(x,y,z)$\uff0c\u6211\u4eec\u5c1d\u8bd5\u4ece$x$\u8f6c\u79fb\u5230$y$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4ee4\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4$g$\uff0c\u5176\u4e2d$g[j]=f[x][j]+z$\uff0c\u5373\u4e3a\u4ece$x$\u70b9\u51fa\u53d1\uff0c\u5230\u8fbe$y$\u70b9\u7684\u7b2c$j$\u77ed\u7684\u8def\u7684\u957f\u5ea6\u3002\n\n\u56e0\u4e3a$g$\u548c$f[y]$\u663e\u7136\u90fd\u662f\u9012\u589e\u7684\uff0c\u56e0\u6b64\u76f4\u63a5\u5f52\u5e76\u4e00\u4e0b\u5b8c\u6210\u3002\n\n\u4ec0\u4e48\uff1f\u4f60\u592a\u61d2\u4e86\u4e0d\u60f3\u5199\u5f52\u5e76\u6392\u5e8f\uff1f\n\n\u6ca1\u5173\u7cfb\uff0c\u6709\u4e2aC++\u5185\u7f6e\u51fd\u6570\u53eb\u505a```merge```\u3002\n\n ```merge``` _\u51fd\u6570\u7684\u4f5c\u7528\u662f\uff1a\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\u5408\u5e76\u4e3a\u4e00\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\u3002_ \n\n _\u51fd\u6570\u53c2\u6570\uff1a_ ```merge(first1,last1,first2,last2,result,compare)```\n\n```first1``` _\u4e3a\u7b2c\u4e00\u4e2a\u5bb9\u5668\u7684\u9996\u8fed\u4ee3\u5668\uff0c_ ```last1``` _\u4e3a\u7b2c\u4e00\u4e2a\u5bb9\u5668\u7684\u672b\u8fed\u4ee3\u5668\uff0c_ ```first2``` _\u4e3a\u7b2c\u4e8c\u4e2a\u5bb9\u5668\u7684\u9996\u8fed\u4ee3\u5668\uff0c_ ```last2``` _\u4e3a\u5bb9\u5668\u7684\u672b\u8fed\u4ee3\u5668\uff0c_ ```result``` _\u4e3a\u5b58\u653e\u7ed3\u679c\u7684\u5bb9\u5668\uff0c_ ```compare``` _\u4e3a\u6bd4\u8f83\u51fd\u6570\uff08\u53ef\u7565\u5199\uff0c\u9ed8\u8ba4\u4e3a\u5408\u5e76\u4e3a\u4e00\u4e2a\u5347\u5e8f\u5e8f\u5217\uff09\u3002_ \n\n _\u2014\u2014\u8bd1\u81eaC++\u5b98\u7f51_ \n \n \u56e0\u6b64\u76f4\u63a5\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u975e\u5e38\u8f7b\u677e\u5730\u5b9e\u73b0\u8f6c\u79fb\u3002\u590d\u6742\u5ea6$O(mk)$\u3002\n \n \u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,q,f[1010][110],g[210],h[210],sz[1010];\nvector<pair<int,int> >v[1010];\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q),memset(f,0x3f3f3f3f,sizeof(f)),f[1][sz[1]=1]=0;\n\tfor(int i=1,x,y,z;i<=m;i++)scanf(\"%d%d%d\",&x,&y,&z),v[y].push_back(make_pair(x,z));\n\tfor(int i=1;i<=n;i++)for(auto j:v[i]){\n\t\tfor(int k=1;k<=sz[i];k++)g[k]=f[i][k]+j.second;\n\t\tmerge(g+1,g+sz[i]+1,f[j.first]+1,f[j.first]+sz[j.first]+1,h+1);\n\t\tsz[j.first]+=sz[i],sz[j.first]=min(sz[j.first],q);\n\t\tfor(int k=1;k<=sz[j.first];k++)f[j.first][k]=h[k];\n\t}\n//\tfor(int i=1;i<=n;i++){for(int j=1;j<=q;j++)printf(\"%d \",f[i][j]);puts(\"\");}\n\tfor(int i=1;i<=q;i++)printf(\"%d\\n\",f[n][i]==0x3f3f3f3f?-1:f[n][i]);\n\treturn 0;\n} \n```\n",
        "postTime": 1587206428,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2901 \u3010[USACO08MAR]Cow Jogging G\u3011"
    },
    {
        "content": "\n\uff08\u5e9f\u8bdd\u5f00\u59cb\uff1aA_star\u7b97\u6cd5\u5927\u6cd5\u597d\uff09\n\n\u5728mike\u7684\u6307\u5bfc\u4e0b\u603b\u7b97\u5b66\u4f1a\u4e86\n\n\u7b2c\u4e00\u9053k\u77ed\u8def\u7684\u9898\uff0c\u5b66\u4e86\u4e00\u4e2a\u661f\u671f\n\u4e2d\u95f4\u6ca1\u8fde\u7740\u603b\u7b97\u641e\u6389\u4e86\uff0c\u5624\u5624\u5624\n\n\u9996\u5148\u4f60\u8981\u77e5\u9053\u4f30\u4ef7\u51fd\u6570\u8fd9\u4e2a\u4e1c\u897f\n\n\u603b\u4f53\u611f\u89c9a*\u7b97\u6cd5\u601d\u60f3\u5176\u5b9e\u8fd8\u662f\u5e7f\u641c\n\n\u5e7f\u641c\u697c\u4e0a\u5927\u4f6c\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff0c\u5f88\u8be6\u7ec6\n\n\u6211\u4e3b\u8981\u662f\u7528SPFA\u8dd1\u4e86\u4e00\u904d\u53cd\u5411\u56fe\n\n\u7136\u540e\u641e\u4e86\u4e2a\u4f30\u4ef7\u51fd\u6570\u5c31a\u4e86\n\n\u6211\u77e5\u9053\u4f60\u4eec\u559c\u6b22\u770b\u4ee3\u7801\u76f4\u63a5\uff0c\u54ed\u5527\u5527\n\n------------\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=0x7fffffff;\nconst int M=100010;\nint m,n,k,l,cnt;\nint d[M];\nbool inque[M];\nint ans[M];\nstruct node\n{ int now;\n  int step;\n  int g;\n  bool operator<(const node & x) const \n  {return (x.g==g)?x.step<step:x.g<g;}\n};\npriority_queue<node> que;\nqueue<int> q;\nstruct edge\n{ int to;\n  int dist;\n};\nvector<edge>g[5010],lg[5010];\nvoid add_edge(int u,int v,int w)\n{ g[u].push_back((edge){v,w});lg[v].push_back((edge){u,w});}\nvoid SPFA()\n{ for (int i=1;i<=n;i++) d[i]=INF;\n  d[1]=0;q.push(1);inque[1]=true;\n  while (!q.empty())\n { int s=q.front();q.pop();\n   for (int i=0;i<lg[s].size();i++)\n   { int y=lg[s][i].to,dd=lg[s][i].dist;\n     if (d[y]>d[s]+dd)\n     { d[y]=d[s]+dd;\n       if (!inque[y])\n       { inque[y]=true;q.push(y);}\n\t }\n   }\n   inque[s]=false;\n  } \n}\nint shrt[5050];\nvoid a_star()\n{ node zz;zz.now=n;zz.g=0;zz.step=0;\n  que.push(zz);\n  while (!que.empty())\n  { node zz=que.top();que.pop();\n    int u=zz.now;\n    if (u==1)\n    { cnt++;\n      ans[cnt]=zz.step;\n      if (cnt>k) return;\n\t}\n\tshrt[u]++;\n\tif (shrt[u]>k) continue;\n\tfor (int i=0;i<g[u].size();i++)\n\t{ int y=g[u][i].to,dd=g[u][i].dist;\n\t  node mm;\n\t  mm.now=y;mm.step=zz.step+dd;\n\t  mm.g=mm.step+d[y];\n\t  que.push(mm);\n\t}\n  }\n}\nint read()\n{ int f=1,x=0;char c=getchar();\n  while (c<'0'||c>'9') {if (c=='-') f=-1;c=getchar();}\n  while (c>='0'&&c<='9') {x=x*10+c-'0';c=getchar();}\n  return x*f;\n}\nint main()\n{ n=read();m=read();k=read();\n  for (int i=1;i<=m;i++)\n  { int x,y,z;\n    x=read();y=read();z=read();\n    add_edge(x,y,z);\n  }\n  SPFA();\n  memset(ans,-1,sizeof(ans));\n  a_star();\n  for (int i=1;i<=k;i++)\n  printf(\"%d\\n\",ans[i]);\n  return 0;\n}\n```",
        "postTime": 1544345364,
        "uid": 74900,
        "name": "Hale",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2901 \u3010[USACO08MAR]\u725b\u6162\u8dd1Cow Jogging\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u53ea\u80fd\u4ece\u9ad8\u5411\u4f4e\u8d70\uff0c\u6240\u4ee5\u56fe\u662f\u4e00\u4e2a DAG\u3002\u8003\u8651\u5728\u62d3\u6251\u7684\u540c\u65f6\u66f4\u65b0\u7b54\u6848\u3002\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u5b83\u7684\u524d $k$ \u77ed\u8def\u5373\u53ef\u3002\u5373\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u66f4\u65b0\u65f6\u5411\u91cc\u63d2\u5165\u7b54\u6848\uff0c\u5982\u679c\u5806\u5927\u5c0f $>k$ \u5c31\u5f39\u51fa\u6700\u5927\u7684\u6570\u3002\n\n\u6ce8\u610f\u53ef\u80fd\u6709\u4e00\u4e9b\u70b9\u5165\u5ea6 $=0$ \u4f46\u7f16\u53f7\u4e0d\u4e3a $n$\uff08\u5373\u65e0\u6cd5\u5230\u8fbe\uff09\u3002\u8fd9\u4e9b\u70b9\u540c\u6837\u9700\u8981\u5165\u961f\uff0c\u4f46\u662f\u6ca1\u6709\u7b54\u6848\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u6211\u4eec\u9700\u8981\u5f39\u51fa\u5b83\u7684 $k$ \u77ed\u8def\u3002\u66f4\u65b0\u7b54\u6848\u64cd\u4f5c\u6700\u591a\u53ea\u4f1a\u8fdb\u884c $m$ \u6b21\u3002\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+m)k \\log k)$\u3002\n\n$\\text{Code}$\uff1a\n\n```cpp\ndef(N, int, 1005)\ndef(M, int, 1e4 + 5)\n\nint n, m, k;\nvector<pii > e[N];\npriority_queue<int> dis[N];\nint deg[N], ans[N];\nint nw[N], cnt;\n\nvoid topo() {\n\tdis[n].push(0);\n\tqueue<int> q;\n\tper(i, n, 1) if(!deg[i]) q.push(i);\n\twhile(!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tcnt = 0;\n\t\twhile(!dis[u].empty()) nw[++cnt] = dis[u].top(), dis[u].pop();\n\t\tfor(pii x : e[u]) {\n\t\t\tint v = x.fi, w = x.se;\n//\t\t\tif(v == 1) cout << \"qwq\\n\";\n\t\t\t--deg[v];\n\t\t\trep(i, 1, cnt) {\n\t\t\t\tdis[v].push(nw[i] + w);\n\t\t\t\tif(dis[v].size() > k) dis[v].pop();\n\t\t\t}\n\t\t\tif(!deg[v]) q.push(v);\n\t\t}\n\t\trep(i, 1, cnt) dis[u].push(nw[i]);\n\t}\n}\n\nint main() {\n\tqread(n, m, k);\n\trep(i, 1, m) {\n\t\tint x, y, w;\n\t\tqread(x, y, w);\n\t\t++deg[y];\n\t\te[x].pb(mp(y, w));\n\t}\n\ttopo();\n\tint tot = 0;\n\twhile(!dis[1].empty()) ans[++tot] = dis[1].top(), dis[1].pop();\n\treverse(ans + 1, ans + tot + 1);\n\trep(i, 1, k) {\n\t\tif(i > tot) puts(\"-1\");\n\t\telse printf(\"%d\\n\", ans[i]); \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1635919648,
        "uid": 242543,
        "name": "BreezeEnder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2901 [USACO08MAR]Cow Jogging G"
    },
    {
        "content": "\u4e00\u79cd\u6bd4\u8f83\u6734\u7d20(\u88f8)\u7684\u7b97\u6cd5...\n\n\u7406\u89e3\u8d77\u6765\u53ef\u80fd\u6bd4\u4e0b\u9762\u90a3\u79cd\u66f4\u65b9\u4fbf\u4e9b\n\n\u5e7f\u641c\u5b9e\u73b0\uff0c\u5c06\u6240\u4ee5\u53ef\u884c\u7684\u70b9\u5165\u961f\n\n\u5bf9\u4e8e\u91cd\u8981\u90e8\u5206\uff0c\u4e0b\u6709\u6ce8\u89e3\n\n```cpp\n#include<cmath>\n#include<string>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n using namespace std;\nconst int N=5000000;\nstruct tt\n{\n    int next,to,cost;\n}edge[10005];\nint n,m,k;\nint x,y,c;\nint path[1005],top;\nint team[N+5][2],head,tail;\nint ans[N+5],num,maxn;\nvoid add(int x,int y,int c);\nvoid bfs();\nint main()\n{\n    memset(path,-1,sizeof(path));\n    scanf(\"%d%d%d\",&n,&m,&k);\n    for (int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&c);\n        add(x,y,c);\n    }\n    team[tail++][0]=n;\n    bfs();\n    sort(ans+1,ans+1+num);\n    for (int i=1;i<=k;i++)\n    {\n        if (ans[i]==0) printf(\"%d\\n\",-1);\n        else printf(\"%d\\n\",ans[i]);\n    }\n    return 0;\n}\nvoid add(int x,int y,int c)\n{\n    edge[++top].to=y;\n    edge[top].next=path[x];\n    edge[top].cost=c;\n    path[x]=top;\n    return;\n}\nvoid bfs()\n{\n    while(head!=tail)\n    {\n        for (int i=path[team[head][0]];i!=-1;i=edge[i].next)\n        if (!(team[head][1]+edge[i].cost>=maxn&&num>=k))//\u5982\u679c\u5df2\u6c42\u51fak\u4e2a\u89e3\u4e14\u5f85\u52a0\u5165\u7684\u70b9\u5df2\u5927\u4e8e\u6c42\u51fa\u89e3\u7684\u6700\u5927\u503c\uff0c\u4e0d\u5165\u961f\n        {\n            if (edge[i].to==1)\n            {\n                ans[++num]=team[head][1]+edge[i].cost;\n                maxn=max(maxn,ans[num]);\n            }\n            else\n            {\n                team[tail][0]=edge[i].to;\n                team[tail++][1]=team[head][1]+edge[i].cost;\n                tail%=N;\n            }\n        }\n        head++;\n        head%=N;\n    }\n    return;\n}\n```",
        "postTime": 1486261200,
        "uid": 11773,
        "name": "NaVi_Awson",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2901 \u3010[USACO08MAR]\u725b\u6162\u8dd1Cow Jogging\u3011"
    },
    {
        "content": "\n\u636e\u8bf4\u662f$k$\u77ed\u8def\u6a21\u677f\uff0c\u8981\u7528$A^*$\uff0c\u7136\u800c\u6211\u4e0d\u4f1a\u3002\u6211\u662f\u7528\u62d3\u6251\u6392\u5e8f\u52a0\u5806\u4f18\u5316\u5e7f\u641c\u6c34\u8fc7\u53bb\u7684\u3002\u7b2c\u4e00\u9053\u5b8c\u5168\u9760\u81ea\u5df1\u505a\u51fa\u6765\u7684\u7d2b\u9898\uff0c\u8c03\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u4ea4\u4e86\u4e24\u904d\u3002\u679c\u7136\u6211\u8fd8\u662f\u592a\u83dc\u4e86\u3002\n\n\u6b63\u89e3\u7684\u8bdd\uff0c\u53ef\u4ee5\u770b[\u7ea2\u592a\u9633\u7684\u535a\u5ba2](https://www.cnblogs.com/cellular-automaton/p/8379540.html)\n\n\n**\u62d3\u6251\u6392\u5e8f\u52a0\u5806\u4f18\u5316\u5e7f\u641c**\n\n\u4ee5\u4e0b\u662f\u6211\u7684\u795e\u5947\u505a\u6cd5\u3002\n\n\u8981\u627e\u524d$k$\u6761\u6700\u77ed\u8def\uff0c\u600e\u4e48\u627e\uff1f\u6211\u89c2\u5bdf\u4e86\u4e00\u4e0b\u6837\u4f8b\u7684\u56fe\uff0c\u53d1\u73b0\u6bcf\u4e2a\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4f1a\u88ab\u66f4\u65b0\u5f88\u591a\u6b21\uff0c\u4f46\u90fd\u662f\u7531\u76f4\u63a5\u6307\u5411\u4ed6\u7684\u70b9\u66f4\u65b0\u6765\u7684\uff08\u5e9f\u8bdd\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u524d\u9762\u7684\u70b9\u600e\u6837\u66f4\u65b0\u7684\u6211\u4e0d\u5173\u5fc3\uff0c\u6211\u53ea\u5173\u5fc3\u8fd9\u4e2a\u70b9\u524d$k$\u6761\u6700\u77ed\u8def\u7684\u957f\u5ea6\u3002\n\n\u90a3\u76f4\u63a5\u7528\u5806\u5b58\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\u6211\u4eec\u8981\u4fdd\u8bc1\u4ed6\u524d\u9762\u7684\u70b9\u5df2\u7ecf\u66f4\u65b0\u5b8c\u4e86\u3002\u524d\u9762\u8bf4\u4e86\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u81ea\u7136\u60f3\u5230\u62d3\u6251\u6392\u5e8f\u3002\n\n\u4f46\u6211\u4e4b\u524d\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u5b83\u82b1\u8d39\u4e86\u6211\u4e00\u4e2a\u591a\u5c0f\u65f6\u7684\u65f6\u95f4\u3002\u8fd9\u4e2a\u9898\u8981\u6c42\u5fc5\u987b\u4ece$n$\u53f7\u70b9\u51fa\u53d1\uff0c\u4f46\u662f\u6709\u4e9b\u70b9$n$\u53f7\u70b9\u5230\u4e0d\u4e86\uff0c\u5b83\u4eec\u4e00\u5f00\u59cb\u5165\u5ea6\u5c31\u4e3a\u96f6\u3002\u5982\u679c\u4e0d\u628a\u8fd9\u4e9b\u70b9\u7684\u5f71\u54cd\u53bb\u6389\uff0c\u540e\u9762\u5c31\u4f1a\u51fa\u9519\u3002\u679c\u7136\u6211\u83dc\u9e21\u7684\u672c\u8d28\u96be\u4ee5\u63a9\u76d6\u3002\n\n**Code**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nlong long read(){\n\tlong long x=0;int f=0;char c=getchar();\n\twhile(c<'0'||c>'9')f|=c=='-',c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\treturn f?-x:x;\n}\n\nint n,m,k;\nstruct Dier{//\u524d\u5411\u661f\n\tint to,next,w;\n}a[10004];\nint head[1001],cnt;\nvoid add(int x,int y,int z){//\u5355\u5411\u8fb9\n\ta[++cnt].to=y,a[cnt].next=head[x],a[cnt].w=z,head[x]=cnt;\n}\n\npriority_queue<int,vector<int>,greater<int> >q[1005];//\u5c0f\u6839\u5806\nint in[1001],Q[1001],h,t;\n//  \u5165\u5ea6     \u961f\u5217\n\nint main(){\n\tn=read(),m=read(),k=read();\n\tfor(int i=1,x,y,z;i<=m;++i){\n\t\tx=read(),y=read(),z=read();\n\t\tadd(x,y,z),in[y]++;\n\t}\n    \n    //\u62d3\u6251\n\tfor(int i=n;i;--i)\n\t\tif(!in[i]) Q[++t]=i;\n\tfor(int i=1;i<=t;++i){\n\t\tif(Q[i]==n) continue;//n\u53f7\u70b9\u7684\u5f71\u54cd\u4e0d\u5e94\u8be5\u53bb\u6389\n\t\tint u=Q[i];\n\t\tfor(int i=head[u],v;v=a[i].to,i;i=a[i].next){\n\t\t\tin[v]--;\n\t\t\tif(!in[v]) Q[++t]=v;//\u65a9\u8349\u4e0d\u9664\u6839\uff0c\u540e\u9762\u9ebb\u70e6\u65e0\u7a77\n            //\u53ea\u8981\u4e0d\u662f\u4ecen\u53f7\u70b9\u76f4\u63a5\u6216\u95f4\u63a5\u8f6c\u79fb\u8fc7\u6765\u7684\u5165\u5ea6\u90fd\u8981\u53bb\u6389\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4f1a\u59a8\u788d\u6211\u4eec\u540e\u9762\u7684\u5165\u961f\n\t\t}\n\t}\n    \n\tt=1,Q[1]=n;//\u521d\u59cb\u5316\u4e00\u4e0b\n\tq[n].push(0);\n\twhile(h<t){//\u5e7f\u641c\n\t\tint u=Q[++h],ls=0;\n\t\twhile(u!=1&&!q[u].empty()&&++ls<=k){//\u53ea\u53d6\u524dk\u6761\u5c31\u597d\n          //\u4fdd\u8bc11\u53f7\u70b9\u7684\u8ddd\u79bb\u4e0d\u4f1a\u88abpop\u6389\n\t\t\tfor(int i=head[u],v;v=a[i].to,i;i=a[i].next)\n\t\t\t\tq[v].push(q[u].top()+a[i].w);//\u66f4\u65b0\u8ddd\u79bb\n\t\t\tq[u].pop();\n\t\t}\n        //\u8ba1\u7b97\u5165\u5ea6\u4e00\u5b9a\u8981\u72ec\u7acb\u51fa\u6765\uff0c\u4e0d\u80fd\u548c\u66f4\u65b0\u8ddd\u79bb\u653e\u5728\u4e00\u8d77\uff0c\u56e0\u4e3a\u90a3\u6837\u4f1a\u5bfc\u81f4\u5165\u5ea6\u88ab\u51cf\u5f88\u591a\u6b21\n\t\tfor(int i=head[u],v;v=a[i].to,i;i=a[i].next){\n\t\t\tin[v]--;\n\t\t\tif(!in[v]) Q[++t]=v;\n\t\t}\n\t}\n\twhile(!q[1].empty()&&k){//\u8f93\u51fa\u7b54\u6848\n\t\tprintf(\"%d\\n\",q[1].top()),q[1].pop(),k--;\n\t}\n\tfor(int i=1;i<=k;++i) printf(\"-1\\n\");//\u6709\u53ef\u80fd\u5e76\u6ca1\u6709k\u6761\u8def\u53ef\u4ee5\u8d70\n\treturn 0;\n}\n```\n\u6b22\u8fce\u6307\u6b63\u8bc4\u8bbaO(\u2229_\u2229)O~~",
        "postTime": 1549938255,
        "uid": 45932,
        "name": "\uff02\u9ece\u7b71\u3063",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2901 \u3010[USACO08MAR]\u725b\u6162\u8dd1Cow Jogging\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528](hackblogs.home.blog)\n\n[\u672c\u6587\u90e8\u5206\u53c2\u8003](https://blog.csdn.net/z_mendez/article/details/47057461)\n\n\u8fd9\u9053\u9898\u7684\u5927\u610f\u5c31\u662f\u7ed9\u4f60\u4e00\u4e2a\u56fe\uff0c\u8ba9\u4f60\u6c42\u4eceS\u5230T\u7684\u6700\u77ed\u8def\u3002\n\nDFS\u4e0eBFS\u90fd\u5c5e\u4e8e\u975e\u542f\u53d1\u5f0f\u641c\u7d22\uff0c\u53c8\u79f0\u76f2\u76ee\u578b\u641c\u7d22\uff0c\u5b83\u4eec\u6700\u5927\u7684\u4e0d\u540c\u5c31\u662f\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u9009\u62e9\u4e0d\u662f\u76f2\u76ee\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u542f\u53d1\u51fd\u6570\u8fdb\u884c\u9009\u62e9\u3002\n\n![\u5982\u56fe](https://i.loli.net/2019/07/28/5d3d5da59e03678980.bmp)\n\n\u5047\u5982\u6b63\u5e38\u7684\u641c\u7d22\u65b9\u5f0f\uff0c\u6211\u4eec\u4f1a\u4e0d\u65ad\u79fb\u52a8\uff0c\u76f4\u81f3\u9047\u5230\u969c\u788d\u7269\uff0c\u663e\u7136\u8fd9\u79cd\u65b9\u6cd5\u662f\u5f88\u611a\u8822\u7684\uff0c\u4f46\u662f\u6b63\u5e38\u7684\u65b9\u6cd5\u7684\u786e\u662f\u8fd9\u6837\u8fdb\u884c\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5e0c\u671b\u6269\u5c55\u4e00\u4e2a\u8fd0\u52a8\u7b97\u6cd5\uff0c\u7528\u4e8e\u5bf9\u4ed8\u4e0a\u56fe\u6240\u793a\u7684\u969c\u788d\u7269\u3002\u6216\u8005\u907f\u514d\u5236\u9020\u51f9\u5f62\u969c\u788d\uff0c\u6216\u8005\u628a\u51f9\u5f62\u51fa\u53e3\u6807\u8bc6\u4e3a\u5371\u9669\u7684(\u53ea\u6709\u5f53\u76ee\u7684\u5730\u5728\u91cc\u9762\u65f6\u624d\u8fdb\u53bb): \n\n![\u5982\u56fe](https://i.loli.net/2019/07/28/5d3d5db9affe085905.bmp)\n\n\n## A*\u7b97\u6cd5\uff1a\n\n\u4e3a\u542f\u53d1\u5f0f\u7b97\u6cd5\u4e2d\u5f88\u91cd\u8981\u7684\u4e00\u79cd\uff0c\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u6700\u4f18\u8def\u5f84\u6c42\u89e3\u548c\u4e00\u4e9b\u7b56\u7565\u8bbe\u8ba1\u7684\u95ee\u9898\u4e2d\u3002\u800cA*\u7b97\u6cd5\u6700\u4e3a\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u5c31\u5728\u4e8e\u5b83\u7684\u4e00\u4e2a\u4f30\u503c\u51fd\u6570\u7684\u8bbe\u8ba1\u4e0a\uff1a \n\n```\nf(n)=g(n)+h(n) \n```\n\n## \u4f30\u4ef7\u51fd\u6570=\u5f53\u524d\u503c+\u5f53\u524d\u4f4d\u7f6e\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\n\n\u5176\u4e2df(n)\u662f\u6bcf\u4e2a\u53ef\u80fd\u8bd5\u63a2\u70b9\u7684\u4f30\u503c\uff0c\u5b83\u6709\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u4e00\u90e8\u5206\u4e3ag(n)\uff0c\u5b83\u8868\u793a\u4ece\u8d77\u59cb\u641c\u7d22\u70b9\u5230\u5f53\u524d\u70b9\u7684\u4ee3\u4ef7\uff08\u901a\u5e38\u7528\u67d0\u7ed3\u70b9\u5728\u641c\u7d22\u6811\u4e2d\u7684\u6df1\u5ea6\u6765\u8868\u793a\uff09\u3002\u53e6\u4e00\u90e8\u5206\uff0c\u5373h(n)\uff0c\u5b83\u8868\u793a\u542f\u53d1\u5f0f\u641c\u7d22\u4e2d\u6700\u4e3a\u91cd\u8981\u7684\u4e00\u90e8\u5206\uff0c\u5373\u5f53\u524d\u7ed3\u70b9\u5230\u76ee\u6807\u7ed3\u70b9\u7684\u4f30\u503c\uff0ch(n)\u8bbe\u8ba1\u7684\u597d\u574f\uff0c\u76f4\u63a5\u5f71\u54cd\u7740\u5177\u6709\u6b64\u79cd\u542f\u53d1\u5f0f\u51fd\u6570\u7684\u542f\u53d1\u5f0f\u7b97\u6cd5\u7684\u662f\u5426\u80fd\u79f0\u4e3aA*\u7b97\u6cd5\u3002\n\n\n\u5178\u578b**A*** \u7b97\u6cd5\u9898\u3002\n\u56e0\u4e3a\u4f30\u4ef7\u516c\u5f0f\u4e3afx+gx\uff0c\u4f30\u4ef7\u5fc5\u987b\u5c0f\u4e8e\u5b9e\u9645\u8ddd\u79bb\uff0c\u6240\u4ee5\u7528\u6700\u77ed\u8def\u5f84\uff0c\u5c31\u4e00\u5b9a\u5c0f\u4e8e\u5b9e\u9645\u8ddd\u79bb\u3002\u5efa\u53cd\u56fe\u6c42\u6700\u77ed\u8def\uff0c\u518d\u7528A* \u7b97\u6cd5\u6c42k\u77ed\u8def\uff0c\u7b2ck\u6b21\u51fa\u961f\u5c31\u662f\u7b2ck\u77ed\u8def\u3002\n\n\u4ee3\u7801\uff1a\uff08~~Warning:\u5f00O2~~\uff09\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=0x7fffffff,maxn=1000000;\nint n,ans,m;\nint vst[100005];\nint dis[100005]/*\u8fb9\u957f*/,prt[10005]/*\u7236\u4eb2*/,vis[10005];\nstruct EDGE{int next,to,v;}e[100005],fe[100005];\nint cnt,h[100005],fcnt,fh[100005];\nint S,T,K,N;\nstruct node{\n\tint f,g,to;\n\tbool operator <(const node &x)const{return f>x.f;}\n};\nvoid add(int x,int y,int z)\n{\n\te[++cnt].to=y;\n\te[cnt].next=h[x];\n\te[cnt].v=z;\n\th[x]=cnt;\n}\nvoid add2(int x,int y,int z)\n{\n\tfe[++fcnt].to=y;\n\tfe[fcnt].next=fh[x];\n\tfe[fcnt].v=z;\n\tfh[x]=fcnt;\n}\nint q[100005],bj[10005];\nvoid SPFA() //\u5355\u6e90spfa\u6c42\u6700\u77ed\u8def\uff08\u4f30\u4ef7\uff09\n{ \n    queue<int>q;\n    for(int i=1;i<=n;i++)dis[i]=INF;\n    dis[1]=0;vis[1]=1;\n    q.push(T);\n    while(!q.empty()) \n\t{\n        int x=q.front();\n        q.pop();\n        vis[x]=0;\n        for(int i=fh[x];i;i=fe[i].next) \n\t\t{\n            int y=fe[i].to;\n            if(dis[y]>dis[x]+fe[i].v) \n\t\t\t{\n                dis[y]=dis[x]+fe[i].v;\n                if(!vis[y])\n\t\t\t\t{\n                    q.push(y);\n                    vis[y]=1;\n                }\n            }\n        }\n    }\n}\nint A_star(int K)//A* \u7b97\u6cd5\n{\n\tnode Q;\n\tint tot=0,i;\n\tif(N==1)K++;\n\tif(dis[N]==INF)return -1;\n\tQ.f=dis[N];\n\tQ.g=0;\n\tQ.to=N;\n\tpriority_queue<node>heap;\n\theap.push(Q);\n\twhile(!heap.empty())\n\t{\n\t\tnode x=heap.top();\n\t\theap.pop();\n\t\tvst[x.to]++;\n\t\tif(x.to==1)tot++;\n\t\tif(tot==K)return x.g;//\u6ee1\u8db3k\u6b21\u51fa\u961f\uff0c\u5373\u4e3ak\u77ed\u8def\n\t\tif(vst[x.to]>K)continue;\n\t\tfor(i=h[x.to];i;i=e[i].next)\n\t\t{\n\t\t\tQ.g=x.g+e[i].v;\n\t\t\tQ.f=Q.g+dis[e[i].to];\n\t\t\tQ.to=e[i].to;\n\t\t\theap.push(Q);\n\t\t}\n\t}\n\treturn -1;\n}\nint main()\n{\n\tint i,j;\n\tscanf(\"%d%d%d\",&N,&m,&K);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);//\u524d\u5411\u661f\u5b58\u50a8\n\t\tadd2(y,x,z);//\u53cd\u56fe\u6c42\u6700\u77ed\u8def \n\t}\n\tSPFA();\n\tfor(i=1;i<=K;i++)\n\t{\n\t\tmemset(vst,0,sizeof(vst));\n\t\tprintf(\"%d\\n\",A_star(i));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1547360261,
        "uid": 89490,
        "name": "AmadeusSG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2901 \u3010[USACO08MAR]\u725b\u6162\u8dd1Cow Jogging\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u5f31\u5316\u7684 $K$ \u77ed\u8def\u6a21\u677f\u9898\u3002\n\n~~\u7b2c\u4e00\u4e2a\u4e00\u53d1 $\\text{A}$ \u6389\u7684\u7d2b\u9898~~\n\n\n\n------------\n\n\u524d\u7f6e\u829d\u58eb\uff1a\n\n$\\text{A*}$ \u7b97\u6cd5\u4e0e $\\text{Dijkstra}$ \u7b97\u6cd5\u3002\n\n------------\n\n\n\u4f17\u6240\u5468\u77e5\uff0c\u5bf9\u4e8e $\\text{A*}$ \u7b97\u6cd5\uff0c $f(i)=g(i)+h(i)$ \u3002\u5728\u672c\u9898\u4e2d\uff0c $g$ \u4e3a\u5df2\u6d88\u8017\u7684\u4f53\u529b\uff0c\u800c**\u4e50\u89c2\u4f30\u503c\u51fd\u6570** $h$ \u4e3a\u5230\u8fbe\u7ec8\u70b9\u7684**\u6700\u77ed\u8def**\u6700\u5408\u9002\u3002\n\n\n\n------------\n\n\n\u4e3a\u4ec0\u4e48 $\\text{A*}$ \u7b97\u6cd5\u505a\u8fd9\u9898\u6b63\u786e\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u662f\u4f18\u5148\u62d3\u5c55\u4f30\u503c\u6700\u77ed\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u5f53\u524d\u6700\u77ed\u8def\u4e00\u5b9a\u662f\u5728\u4f18\u5148\u961f\u5217\u9876\u4e0a\u7684\u3002\n\n\u8fd8\u6709\u5bf9\u4e8e\u5230\u8fbe\u7ec8\u70b9\u7684 $f(1)$ \u6709 $f(1)=g(1)$ \uff0c\u800c $\\text{A*}$ \u7b97\u6cd5\u662f\u4ece\u4f18\u5148\u961f\u5217\u91cc\u53d6\u6570\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u6b63\u786e\u3002\n\n------------\n\n\n\u4e3a\u4ec0\u4e48 $\\text{A*}$ \u7b97\u6cd5\u5feb\u901f\uff1f\n\n\u56e0\u4e3a $\\text{A*}$ \u7b97\u6cd5\u53ef\u4ee5\u5feb\u901f\u5730\u62d3\u5c55\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u4ece\u800c\u5feb\u901f\u5730\u8fbe\u5230\u76ee\u6807\u3002\n\n\n------------\n\n\u5982\u679c\u6709\u8d1f\u8fb9\u6743\uff0c $\\text{A*}$ \u7b97\u6cd5\u8fd8\u6b63\u786e\u5417\uff1f\n\n\u52a0\u4e0a\u4e86 $h(i)$ \u2026\u2026\u7528 $\\text{Dijkstra}$ \u8dd1\u6700\u77ed\u8def\u5f53\u7136\u4e0d\u6b63\u786e\uff0c\u7528\u67d0\u5df2\u6b7b\u7b97\u6cd5\u8dd1\u5c31\u6b63\u786e\u3002\n\n------------\n\n\n\n\u90a3\u4e48 $\\text{A*}$ \u7b97\u6cd5\u5177\u4f53\u6d41\u7a0b\u662f\uff1a\n\n1. \u53d6\u51fa**\u4f18\u5148\u961f\u5217**\u9996\u7684\u8282\u70b9\u3002\n\n1. \u62d3\u5c55\u8be5\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u5c06\u4ed6\u4eec\u5165\u961f\u3002\n\n1. $K--$ \uff0c\u5982\u679c $K=0$ \uff0c\u4ee3\u8868\u524d $K$ \u77ed\u8def\u4ee5\u53ca\u8f93\u51fa\u5b8c\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\n\n1. \u91cd\u590d $1$ \u3002\n\n\u81f3\u4e8e\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5efa\u4e00\u4e2a\u53cd\u5411\u56fe\u8dd1\u4e00\u904d $\\text{Dijkstra}$ \u5373\u53ef\u3002\n\n\n\n------------\n\n\u6709\u6ce8\u91ca\u3002\n\n```cpp\n#include <bist/stdc++.h>\nusing namespace std;\nconst int N = 1e6 + 5;\nstruct edge {\n\tint w, next, to;\n} e[N], e1[N]; // e\u4e3a\u6b63\u56fe\uff0ce1\u4e3a\u53cd\u56fe\nstruct node {\n\tint pos, w;\n\tnode(int _, int __) :\n\t\tpos(_), w(__) {}\n\tbool operator < (const node& x) const {\n\t\treturn x.w < w;\n\t}\n}; // Dij\u7684\u8282\u70b9\u3002\nint n, m, k, x, y, z, cnt, cnt1, dis[N], head[N], head1[N];\nbool vis[N];\nstruct fuct {\n\tint pos, w;\n\tfuct(int _, int __) :\n\t\tpos(_), w(__) {}\n\tbool operator < (const fuct& x) const {\n\t\treturn x.w + dis[x.pos] < w + dis[pos];\n\t}\n}; // A*\u7b97\u6cd5\u7684\u8282\u70b9\u3002\nvoid add(int u, int v, int w) {\n\te[++ cnt].to = v;\n\te[cnt].w = w;\n\te[cnt].next = head[u];\n\thead[u] = cnt;\n}\nvoid add1(int u, int v, int w) {\n\te1[++ cnt1].to = v;\n\te1[cnt1].w = w;\n\te1[cnt1].next = head1[u];\n\thead1[u] = cnt1;\n}\nvoid dijstra() {\n\tpriority_queue<node> q;\n\tfor (int i = 1; i <= n; i ++)\n\t\tdis[i] = 0x7fffffff;\n\tdis[1] = 0;\n\tq.push(node(1, 0));\n\twhile (!q.empty()) {\n\t\tnode u = q.top(); q.pop();\n\t\tif (vis[u.pos]) continue;\n\t\tvis[u.pos] = true;\n\t\tfor (int i = head1[u.pos]; i; i = e1[i].next) {\n\t\t\tint v = e1[i].to;\n\t\t\tif (dis[v] > dis[u.pos] + e1[i].w) {\n\t\t\t\tdis[v] = dis[u.pos] + e1[i].w;\n\t\t\t\tif (!vis[v]) q.push(node(v, dis[v]));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid A_star() { \n\tpriority_queue<fuct> q;\n\tq.push(fuct(n, 0));\n\twhile (!q.empty()) {\n\t\tfuct u = q.top(); q.pop();\n\t\tif (u.pos == 1) {\n\t\t\tcout << u.w << '\\n';\n\t\t\tif (!(-- k)) return; // \u8fd8\u5269\u4e0bK-1\u77ed\u8def\n\t\t}\n\t\tfor (int i = head[u.pos]; i; i = e[i].next) {\n\t\t\tint v = e[i].to;\n\t\t\tq.push(fuct(v, u.w + e[i].w));\n\t\t}\n\t}\n}\nint main() {\n\tcin >> n >> m >> k;\n\tfor (int i = 1; i <= m; i ++)\n\t\tcin >> x >> y >> z, add(x, y, z), add1(y, x, z); // \u5efa\u53cd\u56fe\uff0c\u8dd1Dij\n\tdijstra();\n\tA_star();\n\twhile (k --) cout << -1 << '\\n'; // \u4e0d\u8db3K\u77ed\u8def\uff0c\u5269\u4e0b\u7684\u8f93\u51fa-1\u3002\n\treturn O;\n}\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nk\\log k)$\n\n\u5728\u672c\u9898\u6700\u574f\u60c5\u51b5\u53ef\u4ee5\u8fc7\u5566\n\n------------\n\n\n\u6c42\u8fc7qwq",
        "postTime": 1652964233,
        "uid": 560516,
        "name": "\u55b5\u4ed4\u725b\u5976",
        "ccfLevel": 0,
        "title": "P2901 [USACO08MAR]Cow Jogging G \u9898\u89e3"
    },
    {
        "content": "### $A^*$\n\n\u9898\u610f\uff1a\u6c42\u524d $k$ \u77ed\u8def\u3002\u95ee\u9898\u6bd4\u8f83\u7ecf\u5178\uff0c\u5bb9\u6613\u60f3\u5230 $A^*$ \u3002\n\n\u8def\u5f84\u8bc4\u5206\uff1a$F=G+H$ \n\n $G$ \u503c\u662f\u4ece $S$ \u6cbf\u5df2\u77e5\u8def\u5f84\u5230\u8be5\u70b9\u7684\u8ddd\u79bb\uff0c $H$ \u503c\u662f\u8be5\u70b9\u5230 $T$ \u7684\u9884\u4f30\u8ddd\u79bb\uff0c\u4e5f\u88ab\u79f0\u4e3a\u4f30\u4ef7\u51fd\u6570\u3002\u6bcf\u6b21\u627e $F$ \u503c\u6700\u5c0f\u7684\u6765\u62d3\u5c55\uff0c\u5e38\u7528\u4f18\u5148\u961f\u5217\u5b9e\u73b0\u3002\n\n\u9898\u76ee\u8981\u6c42\u51fa\u524d $k$ \u77ed\u8def\uff0c\u8dd1 $A^*$ \u7684\u8fc7\u7a0b\u4e2d\uff0c\u8d70\u5230\u7ec8\u70b9\u7684\u524d $k$ \u6b21\u5c31\u662f\u524d $k$ \u77ed\u8def\u3002\u5230\u7ec8\u70b9\u65f6\uff0c $H$ \uff0c\u5373\u9884\u4f30\u8ddd\u79bb\u4e3a $0$ \uff0c\u6545 $F$ \u503c\u5c31\u662f $G$ \u503c\uff0c\u5373\u5c31\u662f\u79bb $S$ \u70b9\u7684\u8ddd\u79bb\u3002\u65e2\u7136\u5728\u5c0f\u6839\u5806\u6808\u9876\uff0c\u8bf4\u660e\u4e0d\u4f1a\u6709\u66f4\u4f18\u5374\u4e0d\u5728\u6808\u9876\u7684\u65b9\u6848\u4e86\u3002\n\n\u6709\u7684\u9898\uff0c\u56e0\u4e3a\u4f30\u4ef7\u51fd\u6570\u7684\u5b58\u5728\uff0c\u5728\u6808\u9876\u65f6\u53ef\u80fd\u5e76\u6ca1\u6709\u66f4\u65b0\u5230\u6700\u4f18\uff0c\u4f46\u8fd9\u9053\u9898\u5c31\u4e0d\u7528\u8003\u8651\uff0c\u56e0\u4e3a\u4f30\u4ef7\u51fd\u6570\u662f\u6c42\u5230\u7684\u5b9e\u9645\u503c\uff0c\u591f\u51c6\u786e\uff0c\u70b9\u5728\u6808\u9876\u65f6\u5176\u8ddd\u79bb\u4e5f\u5df2\u66f4\u5230\u6700\u65b0\u3002\n\n\u6c42\u4f30\u4ef7\u51fd\u6570\u6211\u7528\u7684\u662f $Dijkstra$ \u2014\u2014\u4ece\u7ec8\u70b9\u5230\u8d77\u70b9\u53cd\u5411\u8dd1\u4e00\u904d $Dijkstra$ \uff0c\u5c31\u80fd\u5f97\u5230\u6bcf\u4e2a\u70b9\u5b9e\u9645\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u4f30\u4ef7\u51fd\u6570\u3002\u518d\u8dd1\u4e00\u904d $A^*$ \u5c31\u80fd\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define x first\n#define y second\n\nusing namespace std;\n\nconst int amou=1e3+90,M=2e4+90;\ntypedef pair<int,int> PII;\ntypedef pair<int,PII> PIII;\n\nint head[amou],hh[amou],nxt[M],ver[M],cnt,edge[M];\nbool we[amou];\nint H[amou],times[amou];\nint n,m,k,S,T;\n\nvoid add(int head[],int a,int b,int c){\n\tnxt[++cnt]=head[a],head[a]=cnt,ver[cnt]=b,edge[cnt]=c;\n}\n\nvoid Dijkstra(){\n\tpriority_queue<PII,vector<PII>,greater<PII> >kl;\n\t\n\tkl.push({0,T});\n\tmemset(H,0x3f,sizeof H);\n\tH[T]=0;\n\twhile(!kl.empty())\n\t{\n\t\tPII tou=kl.top();\n\t\tkl.pop();\n\t\tint i=tou.y;\n\t\tif(we[i]) continue;\n\t\twe[i]=1;\n\t\tfor(int io=hh[i];io;io=nxt[io])\n\t\t{\n\t\t\tint v=ver[io];\n\t\t\tif(H[v]>H[i]+edge[io])\n\t\t\t{\n\t\t\t\tH[v]=H[i]+edge[io];\n\t\t\t\tkl.push({H[v],v});\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid Astar(){\n\tpriority_queue<PIII,vector<PIII>,greater<PIII> >kl;\n\t\n\tkl.push({H[S],{0,S}});\n\twhile(!kl.empty())\n\t{\n\t\tPIII tou=kl.top();\n\t\tkl.pop();\n\t\tint i=tou.y.y,G=tou.y.x;\n\t\ttimes[i]++;\n\t\tif(i==T)\n\t\t{\n\t\t\tprintf(\"%d\\n\",G);\n\t\t\tif(times[T]==k) return;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int io=head[i];io;io=nxt[io])\n\t\t{\n\t\t\tint v=ver[io];\n\t\t\tif(times[v]<k)//\u5c0f\u4f18\u5316\n\t\t\t\tkl.push({edge[io]+G+H[v],{edge[io]+G,v}});\n\t\t}\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tS=n,T=1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd(head,a,b,c);\n\t\tadd(hh,b,a,c);//\u5efa\u53cd\u5411\u8fb9\uff0c\u662f\u4e3a\u4e86Dijkstra\u4e2d\u6c42\u70b9\u5230\u7ec8\u70b9\u7684\u8ddd\u79bb\n\t}\n\tDijkstra();\n\tAstar();\n\tfor(int i=times[T]+1;i<=k;i++)//\u53ef\u80fd\u4e0d\u8db3k\u6761\uff0c\u65e2\u7136\u5df2\u7ecf\u8f93\u51fa\u4e86times[T]\u6761\uff0c\u5269\u4e0b\u5f97\u7528-1\u8865\u5b8c\n\t\tprintf(\"-1\\n\");\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1619358362,
        "uid": 280519,
        "name": "Yaha",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2901\u3010[USACO08MAR]Cow Jogging G\u3011"
    },
    {
        "content": "##  $A * $ \u5927\u6cd5\u597d\n\n\n##  1. \u9898\u76ee\u5206\u6790\n\n### \u5c31\u662f\u6c42\u524dk\u77ed\u8def\uff0c\u800c\u6c42k\u77ed\u8def\uff0c\u5f53\u7136\u5c31\u60f3\u5230\u4e86A*\u7b97\u6cd5\n\n\n####  $ A *$ \u7b97\u6cd5\u662f\u4e00\u79cd\u641c\u7d22\u7b97\u6cd5\uff0c\u4e5f\u88ab\u79f0\u4e3a\u542f\u53d1\u5f0f\u641c\u7d22\u7b97\u6cd5\u3002\n\n#### \u6211\u4eec$DFS$\u9700\u8981\u526a\u679d\uff0c\u800c $A *$ \u7b97\u6cd5\u5219\u5229\u7528\u4e00\u4e2a\u4f30\u503c\u51fd\u6570\uff0c\u8ba9\u6211\u4eec\u76f4\u5954\u7b54\u6848\u641c\u7d22\u3002\n\n- \u5728\u672c\u9898\u4e2d**\u6c42k\u77ed\u8def**\uff0c\u5982\u679c\u8bb0\u6bcf\u4e2a\u70b9i\u5230\u7ec8\u70b91\u7684\u8ddd\u79bb\u4e3a $G(i) $ ,\u5f53\u524d\u8d70\u5230\u70b9i\u6240\u8d70\u8ddd\u79bb\u4e3a $F(i)$ , \u90a3\u4e48\uff0c\u6211\u4eec\u9009\u53d6\u7684\u4f30\u503c\u51fd\u6570\u5c31\u662f $F(i)+G(i)$\n\n\n+ \u5982\u679c\u8fd9\u6837\u505a\uff0c\u5e76\u4f18\u5148\u641c\u7d22\u4f30\u503c\u8f83\u5c0f\u7684\u62d3\u5c55\u8282\u70b9\uff0c\u90a3\u4e48\u6700\u5148\u5230\u8fbe\u7ec8\u70b9\u7684\u5c31\u4e00\u5b9a\u662f\u6700\u77ed\u8def\uff0c\u7b2c $K$ \u4e2a\u5230\u8fbe\u7ec8\u70b9\u7684\u5c31\u662f\u7b2c $K$ \u77ed\u8def\u3002\n\n- **\u6b63\u786e\u6027\u8bc1\u660e**\uff1a\n\u8003\u8651\u5982\u679c\u4e00\u6761\u8def\u5f84\u5f53\u524d\u5df2\u7ecf\u6269\u5c55\u5230\u7ec8\u70b9\uff0c\u90a3\u4e48$ G(x)=0$ \uff0c$ \nF(x)+G(x)=F(x)$ \u3002\n\u6240\u4ee5\u6269\u5c55\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u90fd\u662f\u6309\u5176\u5b9e\u9645\u957f\u5ea6\u4ece\u5c0f\u5230\u5927\u51fa\u961f\u7684\u3002\n\n## 2. \u4ee3\u7801\u5b9e\u73b0\n\n- \u5bf9\u4e8e $G(i)$ , \u6211\u4eec\u4ece\u7ec8\u70b9\u5f00\u59cb\u8d70\u53cd\u5411\u8fb9\u6c42\u6700\u77ed\u8def\uff0c\u5c31\u53ef\u6c42\u5f97\u6bcf\u4e2a\u70b9\u5230\u7ec8\u70b9\u6700\u77ed\u8ddd\u79bb\u3002\n- \u4e3a\u4e86\u5904\u7406\u6bcf\u4e2a\u62d3\u5c55\u8282\u70b9\u7684\u641c\u7d22\u987a\u5e8f\uff0c\u4f7f\u7528\u4f18\u5148\u961f\u5217\u5b58\u50a8\uff0c\u5e76\u91cd\u8f7d\u8fd0\u7b97\u7b26\u3002\n- \u6bcf\u6b21\u5230\u8fbe\u7ec8\u70b9\uff0c\u8f93\u51fa\u7b54\u6848\uff0c\u5e76\u4f7f $K$- - \u3002\n- \u6700\u540e\u5904\u7406-1\u7684\u60c5\u51b5\n\n## 3.\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#define N 50000\nusing namespace std;\nqueue<int>q;\nstruct Node{\n\tint pos,dis;\n};\n#define node Node\npriority_queue<Node> Q;\nstruct Edge{\n\tint to,w,nxt;\n}edge[N],_edge[N];\nint n,m,head[N],_head[N],g[N],tot,_tot,in[N];\nbool operator < (const node &a,const node &b){\n\treturn a.dis+g[a.pos]>b.dis+g[b.pos];\n}\nvoid add(int a,int b,int c)\n{\n\tedge[++tot]=(Edge){b,c,head[a]};\n\thead[a]=tot;\n}\nvoid _add(int a,int b,int c)\n{\n\t_edge[++_tot]=(Edge){b,c,_head[a]};\n\t_head[a]=_tot;\n}\nvoid SPFA()\n{\n\tmemset(g,0x3f,sizeof(g));\n\tg[1]=0;\n\tq.push(1);\n\tin[1]=1;\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=_head[u];i;i=_edge[i].nxt){\n\t\t\tint v=_edge[i].to;\n\t\t\tif(g[v]>g[u]+_edge[i].w){\n\t\t\t\tg[v]=g[u]+_edge[i].w;\n\t\t\t\tif(!in[v]) q.push(v),in[v]=1;\n\t\t\t}\n\t\t}\n\t\tin[u]=0;\n\t}\n}\nint A_star(int k)\n{\n\tQ.push((node){n,0});\n\twhile(Q.size()){\n\t\tint u=Q.top().pos,dis=Q.top().dis;Q.pop();\n\t\tif(u==1){\n\t\t\tk--;\n\t\t\tcout<<dis<<'\\n';\n\t\t\tif(!k) return 0;\n\t\t}\n\t\tfor(int i=head[u];i;i=edge[i].nxt){\n\t\t\tint v=edge[i].to,w=edge[i].w;\n\t\t\tQ.push((Node){v,w+dis});\n\t\t}\n\t}\n\treturn k;\n}\nint main()\n{\n\tint k;\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++){\n\t\tint a,b,c;\n\t\tcin>>a>>b>>c;\n\t\tadd(a,b,c);\n\t\t_add(b,a,c);\n\t}\n\tSPFA();\n\tint last=A_star(k);\n\twhile(last--) puts(\"-1\");\n}\n```\n\n\n",
        "postTime": 1582026643,
        "uid": 75137,
        "name": "Weak_Konjak",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2901 \u3010[USACO08MAR]\u725b\u6162\u8dd1Cow Jogging\u3011"
    },
    {
        "content": "### Preface  \n\u8fd9\u662f\u4e00\u9053 A* K \u77ed\u8def\u6a21\u677f\u9898\u3002  \n### Problem  \n\u6807\u51c6 K \u77ed\u8def\u9898\u76ee\u3002  \n### Solution  \n\u4f17\u6240\u5468\u77e5\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u53ef\u6301\u4e45\u5316\u5de6\u504f\u6811\u6765\u9ad8\u6548\u5b9e\u73b0 K \u77ed\u8def\u3002\u4f46\u662f\u90a3\u4e2a\u5f88\u96be\u3002\u6211\u4eec\u6709\u4e00\u4e2a\u6548\u7387\u66f4\u4f4e\u4f46\u662f\u7801\u91cf\u66f4\u5c0f\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff1aA* \u7b97\u6cd5\uff01  \n\n\u63a5\u4e0b\u6765\u8bb2\u4e00\u4e0b\u7b97\u6cd5\u6d41\u7a0b\uff1a  \n1.\u8dd1\u4e00\u6b21\u53cd\u5411\u6700\u77ed\u8def\uff0c\u6c42\u51fa\u6bcf\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u3002  \n2.\u5f00\u59cb A\\*\uff0c\u8bbe\u4f30\u503c\u51fd\u6570 $f(x)=g(x)+h(x)$\uff0c\u5176\u4e2d $g$ \u4e3a\u641c\u7d22\u65f6\u7684\u53c2\u6570\uff0c\u8868\u793a\u5df2\u7ecf\u8d70\u8fc7\u7684\u8ddd\u79bb\uff0c$h$ \u4e3a\u4ece\u8be5\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u3002  \n3.\u8bbe\u7acb\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u4ee5 $f$ \u4e3a\u5173\u952e\u5b57\uff0c\u66f4\u5c0f\u7684\u5148\u51fa\u5217\u8fdb\u884c\u641c\u7d22\uff0c\u4e00\u65e6\u4e00\u4e2a\u70b9\u88ab\u8bbf\u95ee\u4e86\u8d85\u8fc7 $k$ \u6b21\u5c31\u4e0d\u7528\u518d\u6b21\u5165\u5806\u8ba1\u7b97\u4e86\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u6709\u9700\u8981\u8ba1\u7b97\u7684\u66f4\u5927\u8def\u5f84\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u8bb2\u4e00\u4e0b\u8bc1\u660e\uff1a  \n\u6211\u4eec\u53d1\u73b0\uff0c\u4f30\u503c\u51fd\u6570\u8d8a\u5c0f\u7684\u5143\u7d20\uff0c\u5176\u5c31\u66f4\u6709\u53ef\u80fd\u5ef6\u4f38\u51fa\u4f30\u503c\u51fd\u6570\u5c0f\u7684\u5143\u7d20\uff0c\u6216\u8005\u8bf4\u4e00\u5b9a\u4f1a\u5ef6\u4f38\u51fa\u4e00\u4e2a\u6bd4\u5176\u5b83\u5927\u4f30\u503c\u51fd\u6570\u5143\u7d20\u7684\u4f30\u503c\u51fd\u6570\u66f4\u5c0f\u7684\u5143\u7d20\uff0c\u56e0\u4e3a\u6cbf\u6700\u77ed\u8def\u8d70\u4f30\u503c\u51fd\u6570\u4e0d\u53d8\uff0c\u9885\u5185\u6a21\u62df\u4e00\u4e0b\uff0c\u53d1\u73b0\u8fd9\u4e2a\u641c\u7d22\u8fc7\u7a0b\u975e\u5e38\u7684\u795e\u5947\uff1a\u5148\u8d70\u5b8c\u6700\u77ed\u8def\u540e\u4f1a\u8fc5\u901f\u627e\u5230\u7b2c\u4e8c\u77ed\u8def\u7684\u957f\u5ea6\u518d\u6cbf\u7740\u7b2c\u4e8c\u77ed\u8def\u8d70\u4e00\u6b21...\u76f4\u5230\u8d70\u5b8c $k$ \u6b21\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u90a3\u4e2a\u4f30\u503c\u51fd\u6570\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u6761\u8def\u5f84\u7684\u957f\u5ea6\u3002\u8d70\u5b8c\u4e00\u6761\u8def\u5f84\u5c31\u76f8\u5f53\u4e8e\u628a\u6700\u77ed\u7684\u8def\u5f84\u7ed9\u5220\u9664\u4e86\u5e76\u628a\u8fd9\u6761\u8def\u5f84\u76f8\u90bb\u7684\u5176\u5b83\u8def\u5f84\u6269\u5c55\u51fa\u6765\uff0c\u6240\u6709\u6269\u5c55\u51fa\u6765\u7684\u8fb9\u96c6\u76f8\u5f53\u4e8e\u6ca1\u6709\u8d70\u8fd9\u6761\u8def\u65f6\u90a3\u4e2a\u4f18\u5148\u961f\u5217\u5185\u7684\u8d77\u59cb\u70b9\u5305\u542b\u7684\u8fb9\u96c6\u51cf\u53bb\u8fd9\u6761\u8fb9\u3002  \n\n\u56e0\u4e3a\u5bf9\u4e8e\u540c\u4e00\u4e2a\u70b9\u6765\u8bf4\uff0c\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u5230\u8fbe\u4e00\u4e2a\u70b9\u7b2c $j$ \u6b21\u5373\u4ee3\u8868\u8fd9\u662f\u4ece\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u7b2c $j$ \u77ed\u8def\u3002\u4f46\u5176\u672c\u8eab\u8981\u662f\u5165\u961f\u6b21\u6570\u8d85\u8fc7 $k$ \u6b21\u663e\u7136\u5c31\u4e0d\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u4e86\uff0c\u56e0\u4e3a\u6700\u591a $k$ \u6761\u8def\u90fd\u7ecf\u8fc7\u5b83\u3002  \n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u590d\u6742\u5ea6\u662f $O(nk \\log n)$ \u7684\u3002\n\n\u6700\u540e\u8d34\u4e00\u4e0b\u4ee3\u7801\uff1a  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e3+10;\nint n,m,k,x,y,d;\nstruct EDGE{int v,w;};\nvector <EDGE> edge[N];\nvector <EDGE> G[N];\nbool vis[N];int dis[N];\nstruct shortest_path{\n\tqueue <int> Q;\n\tvoid SPFA(){\n\t\tfor(int i=1;i<=n;i++)dis[i]=2e9;\n\t\tdis[1]=0;vis[1]=true;Q.push(1);\n\t\twhile(!Q.empty()){\n\t\t\tint u=Q.front();Q.pop();\n\t\t\tvis[u]=false;\n\t\t\tfor(int i=0;i<G[u].size();i++){\n\t\t\t\tint v=G[u][i].v;int w=G[u][i].w;\n\t\t\t\tif(dis[v]>dis[u]+w){\n\t\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\t\tif(!vis[v]){\n\t\t\t\t\t\tQ.push(v);\n\t\t\t\t\t\tvis[v]=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}S;\nint cnt[N];vector <int> res;\nstruct node{\n\tint u;int f;\n\tbool operator <(const node &a)const{\n\t\treturn a.f+dis[a.u]<f+dis[u];\n\t}\n};\npriority_queue <node> Q;\nint main(){\n\t//freopen(\"P2901_2.in\",\"r\",stdin);\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d%d\",&x,&y,&d);\n\t\tif(x<y)swap(x,y);\n\t\tedge[x].push_back((EDGE){y,d});\n\t\tG[y].push_back((EDGE){x,d});\n\t}\n\tS.SPFA();\n\tQ.push((node){n,0});\n\twhile(!Q.empty()){\n\t\tint u=Q.top().u;\n\t\tint D=Q.top().f;\n\t\tQ.pop();cnt[u]++;\n\t\tif(cnt[u]>k)continue;\n\t\tif(u==1)res.push_back(D);\n\t\tfor(int i=0;i<edge[u].size();i++)\n\t\t\tQ.push((node){edge[u][i].v,edge[u][i].w+D});\n\t}\n\tfor(int i=0;i<res.size();i++)\n\t\tprintf(\"%d\\n\",res[i]);\n\tfor(int i=res.size()+1;i<=k;i++)\n\t\tprintf(\"-1\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1652446926,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "\u3010Farmer John\u4e0e\u4ed6\u7684\u5976\u725b\u7684\u5947\u5999\u5192\u9669\u3011Cow Jogging G"
    },
    {
        "content": "# [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P2901)\n\n## \u9898\u76ee\u5927\u610f\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u8f93\u51fa $k$ \u884c\u4ee3\u8868\u7b2c $i$ \u77ed\u7684\u8def(\u5c31\u662f $k$ \u77ed\u8def\u95ee\u9898)\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u8fd9\u9053\u9898\u7684\u6b63\u89e3\u662f\u53ef\u6301\u4e45\u5316\u53ef\u5e76\u5806\uff0c\u4f46\u662f~~\u6211\u4e0d\u4f1a~~\u7528 $A^*$ \u66f4\u7b80\u5355\u4e00\u70b9\u3002\u53ef\u4ee5\u53c2\u8003 [OI-Wiki](https://oi-wiki.org/graph/kth-path/) \n\n### \u4ec0\u4e48\u662f $A^*$ \u7b97\u6cd5\uff1f\n\n\u5bf9\u4e8e\u4ee3\u4ef7\u4e0d\u540c\u7684 BFS \uff0c\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u53d6\u51fa\u65f6\u65e2\u662f\u7b54\u6848\u3002\n\n\u6709\u4e24\u79cd\u89e3\u51b3\u529e\u6cd5\u3002\n\n1\u662f\u5168\u90e8\u904d\u5386\u4e00\u904d\uff0c\u4f46\u662f\u5931\u53bb\u4e86 BFS \u76f8\u5bf9\u4e8e DFS \u7684\u4f18\u52bf\n\n2\u662f\u4f7f\u7528\u4f18\u5148\u961f\u5217 BFS \uff0c\u786e\u4fdd\u76ee\u6807\u72b6\u6001\u7b2c\u4e00\u6b21\u88ab\u53d6\u51fa\u65f6\u8fd8\u662f\u6700\u4f18\u89e3\n\n\u4f46\u6709\u65f6\u5019\uff0c\u5f53\u524d\u8d70\u54ea\u4e00\u6b65\u6700\u4f18\u4e0d\u4ee3\u8868\u4e4b\u540e\u8fd9\u4e00\u6b65\u4e5f\u662f\u6700\u4f18\u7684\u3002\n\n\u4e8e\u662f\uff0c__$A^*$\u7b97\u6cd5__ \u5c31\u8bde\u751f\u4e86\n\n$A^*$ \u7684\u4e3b\u8981\u601d\u60f3\u662f\u5bf9\u672a\u6765\u7684\u6b65\u6570\u8fdb\u884c\u4f30\u8ba1\uff0c\u4f30\u8ba1\u4ece\u8fd9\u4e00\u4e2a\u65b9\u5411\u8d70\u5230\u7ec8\u70b9\u9700\u8981\u8d70\u591a\u5c11\u6b65\u3002\n\n\u6211\u4eec\u628a\u4f30\u8ba1\u7684\u5f53\u524d\u72b6\u6001 $state$ \u5230\u76ee\u6807\u72b6\u6001\u6240\u9700\u8981\u7684\u6b65\u6570\u8bb0\u4e3a $f(state)$ \uff0c\u5c06\u5b9e\u9645\u9700\u8981\u7684\u6b65\u6570\u8bb0\u4e3a $g(state)$ \u3002\n\n#### \u5bf9\u4e8e\u4efb\u610f\u7684 $state$ \uff0c\u90fd\u6709 $f(state)$ \u5c0f\u4e8e\u7b49\u4e8e $g(state)$\n\n\u8981\u662f\u8fdd\u53cd\u4e86\u8fd9\u4e00\u6761\uff0c\u6700\u4f18\u89e3\u53ef\u80fd\u56e0\u4e3a\u5f53\u524d\u6b65\u6570\u52a0\u4e0a\u4f30\u8ba1\u6b65\u6570\u5f88\u5927\u800c\u5728\u4f18\u5148\u961f\u5217\u4e2d\u6392\u5728\u540e\u9762\uff0c\u53ef\u80fd\u88ab\u6b21\u4f18\u89e3\u6240\u66ff\u4ee3\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981 $f(state)$ \u5927\u4e8e $g(state)$ \uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u4fdd\u8bc1\u76ee\u6807\u72b6\u6001\u7b2c\u4e00\u6b21\u88ab\u53d6\u51fa\u65f6\u662f\u6700\u4f18\u89e3\u3002\n\n\u90a3\u4e48\uff0c\u4f30\u4ef7\u51fd\u6570\u7684\u6548\u7387\u5c31\u76f4\u63a5\u5f71\u54cd\u4e86 $A^*$ \u7b97\u6cd5\u7684\u6548\u7387\u3002\n\n\u8981\u662f\u4ece\u5317\u4eac\u53bb\u4e0a\u6d77\uff0c\u4f60\u7684\u4f30\u4ef7\u51fd\u6570\u4f1a\u600e\u4e48\u8bbe\u8ba1?\n\n\u8981\u662f\u4fdd\u9669\u4e00\u70b9\uff0c\u53ef\u4ee5\u7528\u4e24\u70b9\u4e4b\u95f4\u7684\u76f4\u7ebf\u8ddd\u79bb\u3002\n\n\u8981\u662f\u5927\u80c6\u4e00\u70b9\uff0c\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e00\u6761\u9053\u8def\uff0c\u627e\u5230\u6700\u77ed\u8def\u3002\n\n\u8ba9\u6211\u4eec\u56de\u5230\u8fd9\u4e00\u9898\u3002\n\n$k$ \u77ed\u8def\u7684\u4f30\u4ef7\u51fd\u6570\u8be5\u600e\u4e48\u8bbe\u8ba1\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5728\u539f\u56fe\u7684\u53cd\u56fe\u4e0a\u8dd1\u4e00\u904d\u5355\u6e90\u6700\u77ed\u8def\u5f84\uff0c $f(state)$ \u5c31\u7b49\u4e8e $dis_{state}$ \n\n\u611f\u6027\u7406\u89e3\uff0c\u6b64\u65f6\u7684 $f(state)$ \u6548\u7387\u8fbe\u5230\u6781\u9650\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define pii pair<int,int>\nconst int N=1e3+10;\nconst int M=1e4+10;\nconst int inf=(1<<31)-1;\n\nint n,m,k,head[N],cnt,dis[N];\nint head2[N],cnt2;\n\nstruct edg{\n\tint next,to,w;\n}edge[M],edge2[M];\n\nvoid add(int x,int y,int z) {\n\tedge[++cnt]={head[x],y,z},head[x]=cnt;\n}\n\nvoid add2(int x,int y,int z) {\n\tedge2[++cnt2]={head2[x],y,z},head2[x]=cnt2;\n}\n\nvoid dij(int st) {\n\tpriority_queue<pii,vector<pii>,greater<pii> >q;\n\tfor(int i=1;i<=n;i++) {\n\t\tdis[i]=inf;\n\t}\n\tdis[st]=0;\n\tq.push(pii(dis[st],st));\n\twhile(!q.empty()) {\n\t\tpii now=q.top();\n\t\tq.pop();\n\t\tint u=now.second;\n\t\tif(dis[u]<now.first) continue;\n\t\tfor(int i=head2[u];i;i=edge2[i].next) {\n\t\t\tint v=edge2[i].to;\n\t\t\tif(dis[v]>dis[u]+edge2[i].w) {\n\t\t\t\tdis[v]=dis[u]+edge2[i].w;\n\t\t\t\tq.push(pii(dis[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\n\nstruct point{\n\tint W,now;\n\tint &f() {\n\t\treturn dis[now];\n\t}\n}s;\n\nbool operator< (point x,point y) {//STL priority_queue\u662f\u5927\u6839\u5806\uff0c\u4e3a\u4e86\u53d8\u6210\u5c0f\u6839\u5806\u5c06\u5c0f\u4e8e\u53d8\u6210\u5927\u4e8e\n\treturn (x.W+x.f())>(y.W+y.f());\n}\n\npriority_queue<point>q;\nint cnt3;\n\nvoid A_star() {\n\ts.now=n;\n\ts.W=0;\n\tq.push(s);\n\twhile(!q.empty()) {\n\t\tpoint u=q.top();\n\t\tq.pop();\n\t\tif(u.now==1) {\n\t\t\tcnt3++;\n\t\t\tprintf(\"%d\\n\",u.W);\n\t\t\tif(cnt3>=k) break;\n\t\t\tcontinue;\n\t\t}\n\t\tpoint v;\n\t\tfor(int i=head[u.now];i;i=edge[i].next) {\n\t\t\tint nv=edge[i].to;\n\t\t\tint nw=edge[i].w;\n\t\t\tv.now=nv;\n\t\t\tv.W=u.W+nw;\n\t\t\tq.push(v);\n\t\t}\n\t}\n\tfor(int i=cnt3+1;i<=k;i++) {\n\t\tprintf(\"-1\\n\");\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=m;i++) {\n\t\tint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tadd(a,b,c);\n\t\tadd2(b,a,c);//\u53cd\u56fe\n\t}\n\tdij(1);\n\tA_star();\n\treturn 0;\n}\n```",
        "postTime": 1648469425,
        "uid": 531319,
        "name": "thomaswmy",
        "ccfLevel": 7,
        "title": "P2901\u9898\u89e3"
    },
    {
        "content": "### \u524d\u7f6e\u77e5\u8bc6\n[A\\*](https://pzj.blog.luogu.org/post-xue-xi-bi-ji-qi-fa-shi-sou-suo#)\n### \u89e3\u6cd5\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u4e86\u89e3 A* \u89e3\u51b3 k \u77ed\u8def\u7684\u65b9\u6cd5\u3002\n\n\u5bf9\u4e8e A\\*\uff0c\u6211\u4eec\u8981\u77e5\u9053\uff0c\u5b83\u662f\u4ee5 $F(x)=g(x)+h(x)$ \u4e3a\u4f30\u4ef7\u51fd\u6570\uff0c\u5176\u4e2d $g(x)$ \u662f\u5f53\u524d\u7684\u8def\u7a0b\uff0c\u73b0\u5728\u8003\u8651 $h(x)$\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\u5176\u5b9e `dij` \u662f\u4ee5 $g(x)$ \u5728\u641c\u7d22\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5176\u5b9e `dij` \u5c31\u662f\u5728\u76f2\u76ee\u5730\u641c\u7d22\u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/z5h7keg2.png)\n\n\u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\u5728\u6700\u4f18\u7b56\u7565\u4e0b\uff0c\u6211\u4eec\u662f\u4ece $1$ \u5230 $4$ \u7684\u3002\u4f46\u662f `dij` \u5374\u662f\u628a\u6700\u8fd1\u7684\u62c9\u5165\u6700\u77ed\u8def\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4f1a\u5148\u904d\u5386 $3$\uff0c\u518d\u904d\u5386 $4$\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u6761\u957f\u94fe\uff0c\u5e76\u4e14\u6700\u540e\u662f\u4e00\u6761\u6743\u503c\u5f88\u5927\u7684\u8fb9\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8bf1\u5bfc `dij` \u8fdb\u5165\u9519\u8bef\u7684\u5b50\u6811\uff0c\u6bd4\u5982\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lyiqtywi.png)\n\n\u90a3\u4e48\uff0c\u6b64\u65f6\uff0c`dij` \u5c31\u4f1a\u4ece $2$ \u4e00\u76f4\u904d\u5386\u5230 $9$\uff0c\u7136\u540e\u624d\u904d\u5386\u6b63\u89e3 $10$\uff0c\u5e76\u4e14\u662f\u4ece $1$ \u5230 $10$\uff0c\u6b64\u65f6\u524d\u9762\u7684\u904d\u5386\u5c31\u6d6a\u8d39\u4e86\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u662f $n$ \u4e2a\u7ed3\u70b9\uff0c\u6784\u9020\u8fd9\u6837\u4e00\u6761\u957f\u94fe\uff0c\u5c31\u4f1a\u6d6a\u8d39 $n-1$ \u4e2a\u70b9\u3002\u90a3\u4e48\uff0c$k$ \u6b21\u64cd\u4f5c\u540e\uff0c\u5c31\u4f1a\u6d6a\u8d39 $kn$ \u4e2a\u70b9\uff0c\u590d\u6742\u5ea6\u76f4\u63a5\u7206\u70b8\u3002\n\n\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\u5176\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a\u5f53\u524d\u8282\u70b9\u5230\u8fbe\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u4f5c\u4e3a $h(x)$\uff0c\u56e0\u4e3a\u5b83\u662f\u6211\u4eec\u81f3\u5c11\u8981\u8d70\u7684\u8ddd\u79bb\u3002\n\n\u73b0\u5728\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee\uff1a\u5982\u679c\u662f\u8fd9\u6837\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u5c31\u8981\u6c42\u5168\u6e90\u6700\u77ed\u8def\u5417\uff1f\n\n`dij` \u5355\u6b21\u7684\u590d\u6742\u5ea6\u662f $O(m\\log m)$\uff0c\u8dd1 $n$ \u6b21\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(nm\\log m)$\u3002\uff08\u8fd9\u4e2a\u590d\u6742\u5ea6\u597d\u50cf\u53ef\u4ee5\u627f\u53d7\uff1f\uff09\n\n\u6ce8\u610f\u5e38\u6570\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u4e00\u4e0b\u95ee\u9898\uff1a\u6211\u4eec\u786e\u5b9a\u4e86\u7ec8\u70b9\uff0c\u73b0\u5728\u8981\u6c42\u5230\u8fbe\u8d77\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n\u90a3\u4e48\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u9700\u8981\u53cd\u5411\u5efa\u8fb9\u5373\u53ef\uff0c\u7136\u540e\u8dd1\u4e00\u6b21 `dij`\uff0c\u6c42\u51fa\u7684\u6700\u77ed\u8def\u505a $h(x)$\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31 $O(m\\log m)$ \u5730\u6c42\u51fa\u4e86 $h(x)$\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u4e00\u4e2a A* \u7684\u6a21\u677f\u3002\n\n\u6700\u540e\u7b97\u4e00\u4e0b\uff1a\u6bcf\u4e2a\u70b9\u6700\u591a\u904d\u5386 $k$ \u6b21\uff0c\u6bcf\u6b21\u5165\u961f\u662f $O(\\log n)$\uff0c\u90a3\u4e48\u6700\u574f\u590d\u6742\u5ea6\u5c31\u662f $O(kn\\log n)$\uff0c\u672c\u9898\u53ef\u8fc7\uff0c\u5177\u4f53\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f//\u6781\u5927\u503c\nusing namespace std;\nconst int maxn=1005;\nint n,m,cnt,k,dis[maxn],ans[maxn];\nbool vis[maxn];\ninline int read(){\n\tint res=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t\tch=getchar();\n\twhile(ch>='0'&&ch<='9'){\n\t\tres=(res<<1)+(res<<3)+(ch^'0');\n\t\tch=getchar();\n\t}\n\treturn res;\n}//\u8bfb\u5165\u4f18\u5316\nstruct edge{\n\tint to,val;\n\tbool operator <(const edge &t) const{\n\t\treturn val>t.val;\n\t}\n};\nvector<edge> G[maxn],g[maxn];\npriority_queue<edge> q;\ninline void dij(int s){\n\tq.push(edge({s,0}));\n\tmemset(dis,inf,sizeof(dis));\n\tdis[s]=0;\n\twhile(!q.empty()){\n\t\tint u=q.top().to,w=q.top().val;\n\t\tq.pop();\n\t\tif(vis[u])\n\t\t\tcontinue;\n\t\tvis[u]=1;\n\t\tfor(int i=0,len=g[u].size();i<len;++i){\n\t\t\tint v=g[u][i].to,r=g[u][i].val;\n\t\t\tif(dis[v]>dis[u]+r){\n\t\t\t\tdis[v]=dis[u]+r;\n\t\t\t\tq.push(edge({v,dis[v]}));\n\t\t\t}\n\t\t}\n\t}\n}//\u521d\u59cb\u5316 h(x)\nstruct node{\n\tint id,val,F;\n\tbool operator <(const node &t) const{\n\t\treturn F>t.F;\n\t}\n};\npriority_queue<node> Q;\nvector<int> v;\ninline void BFS(int s,int t,int k){\n\tQ.push(node({s,0,dis[s]}));\n\twhile(!Q.empty()){\n\t\tint a=Q.top().id,b=Q.top().val;\n\t\tQ.pop();\n\t\tif(a==t){\n\t\t\tans[++cnt]=b;\n\t\t\tif(cnt==k)\n\t\t\t\treturn;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int i=0,len=G[a].size();i<len;++i){\n\t\t\tint v=G[a][i].to,r=G[a][i].val;\n\t\t\tQ.push(node({v,b+r,b+r+dis[v]}));\n\t\t}\n\t}\n\treturn;\n}//A*\nint main(){\n\tn=read(),m=read(),k=read();\n\tfor(int i=1,u,v,w;i<=m;++i){\n\t\tu=read(),v=read(),w=read();\n\t\tif(v>u)\n\t\t\tswap(u,v);\n\t\tG[u].push_back(edge({v,w}));//\u5efa\u56fe\n\t\tg[v].push_back(edge({u,w}));//\u53cd\u5411\u5efa\u56fe\n\t}\n\tdij(1);\n\tBFS(n,1,k);\n\tfor(int i=1;i<=cnt;++i)\n\t\tprintf(\"%d\\n\",ans[i]);\n\tfor(int i=cnt+1;i<=k;++i)\n\t\tputs(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1644668695,
        "uid": 556362,
        "name": "UnnamedOrNamed",
        "ccfLevel": 5,
        "title": "P2901 [USACO08MAR]Cow Jogging G \u9898\u89e3"
    }
]