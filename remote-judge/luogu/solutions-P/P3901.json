[
    {
        "content": "## \u5bf9\u4e8e\u533a\u95f4\u67e5\u8be2\u7684\u95ee\u9898\uff0c\u63d0\u4f9b\u4e00\u79cd\u601d\u8def\uff1a\n## \u83ab\u961f\u3002\n\n\u83ab\u961f\u662f\u5904\u7406\u533a\u95f4\u95ee\u9898\u7684\u4e71\u641e\u795e\u5668\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u79bb\u7ebf\u67e5\u8be2\u95ee\u9898\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u505a\u5728\u7ebf\u67e5\u8be2\uff0c\u6bd4\u5982\u5e26\u4fee\u83ab\u961f\u3002\n\n\u5bf9\u4e8e\u6709\u7684\u9898\uff0c\u83ab\u961f\u662f\u4e71\u641e\u9a97\u5206\uff0c\u800c\u5728\u67d0\u4e9b\u5730\u65b9\uff0c\u83ab\u961f\u662f\u6b63\u89e3\u3002\n\n\u8fd9\u9053\u9898\u6765\u8bf4\uff0c\u53ef\u4ee5\u5f53\u505a\u662f\u840c\u65b0\u521d\u5b66\u83ab\u961f\u7684\u4e00\u4e2a\u677f\u5b50\uff0c\u800c\u4e14\u83ab\u961f\u4e5f\u597d\u7406\n\u89e3\u3002\u7ebf\u6bb5\u6811\u6811\u72b6\u6570\u7ec4\u8fd9\u7c7b\u4e5f\u53ef\u4ee5\u505a\uff0c\u4f46\u662f\u76f8\u6bd4\u83ab\u961f\u800c\u8a00\u9ebb\u70e6\u4e9b\u3002\uff08\u4e2a\n\u4eba\u89c1\u89e3\uff0c\u4e0d\u559c\u52ff\u55b7\u3002\u8c22\u8c22\uff09\n\n---------\n\n## 1st.\u5173\u4e8e\u83ab\u961f\u7684\u601d\u60f3:\n\n\u5148\u660e\u767d\u4e00\u70b9\uff0c\u83ab\u961f\u53ef\u4ee5\u7406\u89e3\u6210\uff1a\n### \u4f18\u96c5\u7684\u66b4\u529b\u3002\n\n\u66b4\u529b\u7b97\u6cd5\u51e0\u4e4e\u4eba\u4eba\u90fd\u4f1a\uff0c\u6240\u4ee5\u83ab\u961f\u7406\u89e3\u8d77\u6765\u597d\u7406\u89e3\u3002\n\n#### \u5982\u679c\u8ba9\u4f60\u66b4\u529b\u7684\u8bdd\u5462\uff1f\n\n\u6211\u4eec\u7528\u4e00\u4e2acnt[ ]\u6570\u7ec4\u8bb0\u5f55\u6bcf\u79cd\u5143\u7d20\uff0c\u7528\u6876\u6392\u7684\u601d\u60f3\uff0c\u679a\u4e3e\u533a\u95f4\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u6876++\uff0c\u7136\u540e\u66b4\u529b\u4e00\u904d\u6240\u6709\u7684\u6876\uff0c\u7b49\u4e8e1\u7684\u6211\u4eecans\u5c31++\uff0c\u8fd9\u6837\u7edf\u8ba1\u4e0d\u540c\u7684\u4e2a\u6570\uff0c\u770b\u770b\u662f\u4e0d\u662f\u7b49\u4e8eL\u5230R\uff0c\u7136\u540e\u518d\u6e05\u7a7a\u6876\u548cans\uff0c\u505a\u4e0b\u4e00\u7ec4\u8be2\u95ee\u3002\n\n\n\u5bf9\u4e8e\u4e00\u822c\u7684\u66b4\u529b\u7b97\u6cd5\u5f80\u5f80\u4f1aTLE\uff0c\u90a3\u4e48\u83ab\u961f\u662f\u600e\u4e48\u505a\u7684\u5462\uff1f\n\n\u9996\u5148\uff1a\u8003\u8651\u6211\u4eec\u6709\u4e24\u4e2a\u6307\u9488\u3002\u4e00\u4e2a\u53eb\u505acurL\uff0c\u53e6\u4e00\u4e2a\u53ebcurR\u3002\u4ed6\u4eec\u5bf9\u5e94\u7684\u662f\u6240\u6307\u7684\u6570\u7684\u6807\u53f7\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u79fb\u52a8\uff0c\u6bcf\u6b21\u53ea\u80fd\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\u3002\u79fb\u52a8\u7684\u590d\u6742\u5ea6\u662fO(1)\u3002\n\neg\uff1a![](https://cdn.luogu.com.cn/upload/pic/19569.png)\n\n\u6211\u4eec\u73b0\u5728\u5904\u7406\u4e86curL\u2014curR\u533a\u95f4\u5185\u7684\u6570\u636e\uff0c\u73b0\u5728\u5de6\u53f3\u79fb\u52a8\uff0c\u6bd4\u5982curL\u5230curL-1\uff0c\u53ea\u9700\u8981\u66f4\u65b0\u4e0a\u4e00\u4e2a\u65b0\u76843\uff0c\u5373curL-1\u3002\n\n\u90a3\u4e48curL\u5230curL+1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u9664\u6389\u5f53\u524dcurL\u7684\u503c\u3002\u56e0\u4e3acurL+1\u662f\u5df2\u7ecf\u7ef4\u62a4\u597d\u4e86\u7684\u3002\n\ncurR\u540c\u7406\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u65b9\u5411\u54e6\uff01curR\u5230curR+1\u662f\u66f4\u65b0\uff0ccurR\u5230cur-1\u662f\u53bb\u9664\u3002\n\n\u6211\u4eec\u5148\u8ba1\u7b97\u4e00\u4e2a\u533a\u95f4 [curL curR] \u7684answer\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528O(1)\u8f6c\u79fb\u5230 [curL-1 curR] [curL+1 curR] [curL curR+1]  [curL curR-1] \u4e0a\u6765\u5e76\u4e14\u6c42\u51fa\u8fd9\u4e9b\u533a\u95f4\u7684answer\u3002\n\n\u6211\u4eec\u5229\u7528curL\u548ccurR\uff0c\u5c31\u53ef\u4ee5\u79fb\u52a8\u5230\u6211\u4eec\u6240\u9700\u8981\u6c42\u7684[L R]\u4e0a\u5566~\n\n\u8fd9\u6837\u505a\u4f1a\u5feb\u5f88\u591a\uff0c\u4f46\u662f......\n\n\u5982\u679c\u6709\u4e2a**\u6570\u636e\uff0c\u8ba9\u4f60\u5728\u6bcf\u4e2aL\u548cR\u95f4\u6765\u56de\u8dd1\uff0c\u800c\u4e14\u8de8\u5ea6\u5f88\u5927\u5462\uff1f\uff1f\n\n\u6211\u4eec\u6bcf\u6b21\u53ea\u52a8\u4e00\u6b65\uff0c\u5c82\u4e0d\u662f\u53c8T\u4e86\uff1f\uff1f\n\n\u4f46\u662f\u8fd9\u5176\u5b9e\u5c31\u662f\u83ab\u961f\u7b97\u6cd5\u7684\u6838\u5fc3\u4e86\u3002\u6211\u4eec\u7684\u83ab\u961f\u7b97\u6cd5\u8fd8\u6709\u4f18\u5316\u3002\n\n\u8fd9\u5c31\u662f\u83ab\u961f\u7b97\u6cd5\u6700\u7cbe\u660e\u7684\u5730\u65b9\uff08\u6211\u8ba4\u4e3a\u7684qwq\uff09\n\n\u6211\u4eec\u60f3\uff0c\u56e0\u4e3a\u6bcf\u6b21\u67e5\u8be2\u662f\u79bb\u7ebf\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u7ed9\u6bcf\u6b21\u7684\u67e5\u8be2\u6392\u4e00\u4e2a\u5e8f\u3002\n\n\u6392\u5e8f\u7684\u65b9\u6cd5\u662f\n### \u5206\u5757\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u7684\u5143\u7d20\u5206\u6210\u591a\u4e2a\u5757\uff08\u5373\u5206\u5757\uff09\u3002\u5206\u4e86\u5757\u8dd1\u7684\u4f1a\u66f4\u5feb\u3002\u518d\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\uff0c\u5de6\u7aef\u70b9\u5757\u7f16\u53f7\u76f8\u540c\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u3002\n\n### \u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u6392\u5e8f\u5462\uff1f\n\n\u5982\u679c\u4e0d\u662f\u6309\u7167\u5206\u5757\u6392\u5e8f\uff0c\u90a3\u4e48\u4e00\u79cd\u76f4\u89c2\u7684\u529e\u6cd5\u662f\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\uff0c\u518d\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\u3002\u4f46\u662f\u8fd9\u6837\u7684\u8868\u73b0\u4e0d\u597d\u3002\u7279\u522b\u662f\u9762\u5bf9\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u6570\u636e\uff0c\u8fd9\u6837\u65b9\u6cd5\u8868\u73b0\u5f97\u5f88\u5dee\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\uff0c\u67096\u4e2a\u8be2\u95ee\u5982\u4e0b\uff1a(1, 100), (2, 2), (3, 99), (4, 4), (5, 102), (6, 7)\u3002\n\n\u8fd9\u4e2a\u6570\u636e\u5df2\u7ecf\u6309\u7167\u5de6\u7aef\u70b9\u6392\u5e8f\u4e86\u3002\u7528\u4e0a\u8ff0\u65b9\u6cd5\u5904\u7406\u65f6\uff0c\u5de6\u7aef\u70b9\u4f1a\u79fb\u52a86\u6b21\uff0c\u53f3\u7aef\u70b9\u4f1a\u79fb\u52a8\u79fb\u52a898+97+95+98+95=483\u6b21\u3002\n\n\u5176\u5b9e\u6211\u4eec\u7a0d\u5fae\u6539\u53d8\u4e00\u4e0b\u8be2\u95ee\u5904\u7406\u7684\u987a\u5e8f\u5c31\u80fd\u505a\u5f97\u66f4\u597d\uff1a(2, 2), (4, 4), (6, 7), (5, 102), (3, 99), (1, 100)\u3002\n\n\u5de6\u7aef\u70b9\u79fb\u52a8\u6b21\u6570\u4e3a2+2+1+2+2=9\u6b21\uff0c\u6bd4\u539f\u6765\u7a0d\u591a\u3002\u53f3\u7aef\u70b9\u79fb\u52a8\u6b21\u6570\u4e3a2+3+95+3+1=104\uff0c\u53f3\u7aef\u70b9\u7684\u79fb\u52a8\u6b21\u6570\u5927\u5927\u964d\u4f4e\u4e86\u3002\n#### \u4e0a\u9762\u7684\u8fc7\u7a0b\u542f\u53d1\u6211\u4eec\uff1a\u6211\u4eec\u4e0d\u5e94\u8be5\u4e25\u683c\u6309\u7167\u5347\u5e8f\u6392\u5e8f\uff0c\u800c\u662f\u6839\u636e\u9700\u8981\u7075\u6d3b\u4e00\u70b9\u7684\u6392\u5e8f\u65b9\u6cd5\n\n#### \u65f6\u95f4\u590d\u6742\u5ea6\u8bc1\u660e\n\n\u5173\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bc1\u660e\uff1a\u7ed9\u4e00\u4e2a\u89d2\u5ea6\uff0c\u5176\u5b9e\u4ece\u4e0d\u540c\u7684\u89d2\u5ea6\u770b\uff0c\u8bc1\u6cd5\u5f88\u591a\uff1a \u5bf9\u4e8e\u5de6\u7aef\u70b9\u5728\u4e00\u4e2a\u5757\u4e2d\u65f6\uff0c\u53f3\u7aef\u70b9\u6700\u574f\u60c5\u51b5\u662f\u4ece\u5c3d\u91cf\u5de6\u5230\u5c3d\u91cf\u53f3\uff0c\u6240\u4ee5\u53f3\u7aef\u70b9\u8df3\u65f6\u95f4\u590d\u6742\u5ea6O(n),\u5de6\u7aef\u70b9\u4e00\u5171\u53ef\u4ee5\u5728n^0.5\u4e2a\u5757\u4e2d\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6O(n*n^0.5) = (n^1.5)\u3002\n\n#### \u8fd9\u6837\uff0c\u4e0d\u65ad\u5730\u79fb\u52a8\u7aef\u70b9\u6307\u9488+\u7cbe\u5999\u7684\u6392\u5e8f\uff0c\u5c31\u662f\u666e\u901a\u83ab\u961f\u7684\u601d\u60f3\u5566~\n\n------------\n## 2ec.Code\n\n#### 1.\u5bf9\u4e8e\u6bcf\u7ec4\u67e5\u8be2\u7684\u8bb0\u5f55\u548c\u6392\u5e8f\uff1a\n\nl\uff0cr\u4e3a\u5de6\u53f3\u533a\u95f4\u7f16\u53f7\uff0cp\u662f\u7b2c\u51e0\u7ec4\u67e5\u8be2\u7684\u7f16\u53f7\uff08\u8bb0\u5f55\u4e0b\u6765\u4e3a\u4e86\u6392\u5e8f\u540e\u4e0d\u6253\u4e71\u987a\u5e8f\u8fd8\u6309\u7167\u539f\u67e5\u8be2\u7684\u987a\u5e8f\u8f93\u51fa\uff09\uff0cbl\u662f\u5206\u5757\u6570\u3002\n```\nstruct query{\n    int l, r, p;\n}e[maxn];\n\nbool cmp(query a, query b)\n{\n    return (a.l/bl) == (b.l/bl) ? a.r < b.r : a.l < b.l;\n}\n\n```\n#### 2.\u5904\u7406\u548c\u521d\u59cb\u53d8\u91cf\uff1a\n\nanswer\u5c31\u662f\u6240\u6c42\u7b54\u6848\uff0c bl\u662f\u5206\u5757\u6570\u91cf\uff0c a[]\u662f\u539f\u5e8f\u5217\uff0c ans[]\u662f\u8bb0\u5f55\u539f\u67e5\u8be2\u5e8f\u5217\u4e0b\u7684\u7b54\u6848\uff0c cnt[]\u662f\u8bb0\u5f55\u5bf9\u4e8e\u6bcf\u4e2a\u6570i\uff0c cnt[i]\u8868\u793ai\u51fa\u73b0\u8fc7\u7684\u6b21\u6570\uff0c curL\u548ccurR\u4e0d\u518d\u89e3\u91ca\uff0c nm\u770b\u9898\u610f\u8981\u6c42\u3002 add\u548cdel\u6bcf\u4e2a\u9898\u6709\u4e0d\u540c\u7684\u5199\u6cd5\u3002\n```\nint answer, a[maxn], m, n, bl, ans[maxn], cnt[maxn], k, curL = 1, curR = 0;\nvoid add(int pos)//\u6dfb\u52a0 \n{\n    //do sth...\n}\nvoid del(int pos)//\u53bb\u9664 \n{\n    //do sth...\n}\n//\u4e00\u822c\u5199\u6cd5\u90fd\u662f\u8fb9\u5904\u7406 \u8fb9\u6839\u636e\u5904\u7406\u6c42\u7b54\u6848\u3002cnt[a[pos]]\u5c31\u662f\u5728pos\u4f4d\u7f6e\u4e0a\u539f\u5e8f\u5217a\u51fa\u73b0\u7684\u6b21\u6570\u3002\n```\n#### 3.\u4e3b\u4f53\u90e8\u5206\u53ca\u8f93\u51fa\uff1a\n\n\u9884\u5904\u7406\u67e5\u8be2\u7f16\u53f7\uff0c\u7528\u56db\u4e2awhile\u79fb\u52a8\u6307\u9488\u987a\u4fbf\u5904\u7406\u3002\n\n\u5728\u8fd9\u91cc\u7740\u91cd\u8bf4\u4e0b\u56db\u4e2awhile\n\n\u6211\u4eec\u8bbe\u60f3\u6709\u4e00\u6761\u6570\u8f74:\n![](https://cdn.luogu.com.cn/upload/pic/19570.png)\n\n\u5f53curL < L \u65f6\uff0c\u6211\u4eec\u5f53\u524dcurL\u662f\u5df2\u7ecf\u5904\u7406\u597d\u7684\u4e86\u3002\u6240\u4ee5del\u65f6\u5148\u53bb\u9664\u5f53\u524dcurL\u518d++\n\n\u5f53curL > L \u65f6\uff0c\u6211\u4eec\u5f53\u524dcurL\u662f\u5df2\u7ecf\u5904\u7406\u597d\u7684\u4e86\u3002\u6240\u4ee5 add  \u65f6\u5148 -- \u518d\u52a0\u4e0a\u6539\u540e\u7684curL\n\n\u5f53curR > R \u65f6\uff0c\u6211\u4eec\u5f53\u524dcurR\u662f\u5df2\u7ecf\u5904\u7406\u597d\u7684\u4e86\u3002\u6240\u4ee5del\u65f6\u5148\u53bb\u9664\u5f53\u524dcurR\u518d --\n\n\u5f53curR < R \u65f6\uff0c\u6211\u4eec\u5f53\u524dcurR\u662f\u5df2\u7ecf\u5904\u7406\u597d\u7684\u4e86\u3002\u6240\u4ee5 add  \u65f6\u5148++\u518d\u52a0\u4e0a\u6539\u540e\u7684curR\n```\nn = read(); m = read(); k = read();\n    bl = sqrt(n);\n\n    for(int i = 1; i <= n; i++)\n    a[i] = read();\n    \n    for(int i = 1; i <= m; i++)\n    {\n        e[i].l = read(); e[i].r = read();\n        e[i].p = i;\n    }\n    \n    sort(e+1,e+1+m,cmp);\n    \n    for(int i = 1; i <= m; i++)\n    {\n        int L = e[i].l, R = e[i].r;\n        while(curL < L)\n        del(curL++);  \n        while(curL > L)\n        add(--curL);\n        while(curR > R)\n        del(curR--);\n        while(curR < R)\n        add(++curR);\n        ans[e[i].p] = answer;\n    }\n    for(int i = 1; i <= m; i++)\n    printf(\"%d\\n\",ans[i]);\n    return 0;\n```\n-------\n## 3th.\u5173\u4e8e\u8fd9\u9898\u9898\u89e3\n\u6211\u7684\u60f3\u6cd5\u8fd8\u662f\u86ee\u66b4\u529b\u7684\uff0c\u5bf9\u4e8e\u51fa\u73b0\u8fc7\u7684\u6570\u76f4\u63a5\u8bb0\u5f55\u4e0b\u6765\uff0canswer\u8bb0\u5f55\u51fa\u73b0\u4e86\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u5982\u679canswer\u7b49\u4e8e\u73b0\u5728\u7684R-L+1\uff0c\u90a3\u4e48\u8bf4\u660e\u51fa\u73b0\u7684\u6570\u4e0eL\u5230R\u76f8\u540c\u3002\n```\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#define ri register \nusing namespace std;\nconst int maxn = 100010;\ninline int read()\n{\n    int k=0;\n    char c;\n    c=getchar();\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c)){k=(k<<3)+(k<<1)+c-'0';c=getchar();}\n    return k;\n}\nint n, m, bl, answer = 0, curL, curR, cnt[maxn], a[maxn];\nbool ans[maxn];\nstruct Query{\n    int l, r, p;\n}q[maxn];\nbool cmp(const Query &a, const Query &b)\n{\n    return (a.l/bl) == (b.l/bl) ? a.r < b.r : a.l < b.l;\n}\nvoid add(int pos)\n{\n    if((++cnt[a[pos]]) == 1) ++answer;\n}\nvoid del(int pos)\n{\n    if((--cnt[a[pos]]) == 0) --answer;\n}\nint main()\n{\n    n = read();\n    m = read();\n    bl = sqrt(n);\n    for(ri int i = 1; i <= n; i++)\n    a[i] = read();\n\n    for(ri int i = 1; i <= m; i++)\n    {\n        q[i].l = read();\n        q[i].r = read();\n        q[i].p = i;\n    }\n    \n    sort(q+1,q+1+m,cmp);\n    \n    for(ri int i = 1; i <= m; i++)\n    {\n        int L = q[i].l, R = q[i].r;\n        while(curL < L) del(curL++);\n        while(curL > L) add(--curL);\n        while(curR < R) add(++curR);\n        while(curR > R) del(curR--);\n        if(answer == (R-L+1))\n        ans[q[i].p] = 1;\n    }\n    for(ri int i = 1; i <= m; i++)\n    {\n        if(ans[i] == 1)\n        printf(\"Yes\\n\");\n        else\n        printf(\"No\\n\");\n    }\n    return 0;\n}\n```\n----------\n\u5982\u679c\u5bf9\u4e8e\u83ab\u961f\u7b97\u6cd5\u6709\u4ec0\u4e48\u7591\u95ee\u6216\u8005\u5bf9\u6211\u7684\u9898\u89e3\u6709\u4ec0\u4e48\u5efa\u8bae\u6b22\u8fce\u548c\u6211\u8ba8\u8bba\uff0c\u672c\u4eba\u4f1a\u5c3d\u529b\u89e3\u7b54\u548c\u865a\u5fc3\u63a5\u53d7\u610f\u89c1\u7684\u3002\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://www.cnblogs.com/MisakaAzusa/p/8684319.html)\n\nQQ\uff1a935145183 or 3203600070",
        "postTime": 1526730610,
        "uid": 28084,
        "name": "Misaka_Azusa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u53ef\u4ee5\u505a\u5230$O(n)$\u9884\u5904\u7406\uff0c\u6bcf\u6b21$O(1)$\u67e5\u8be2\n\n\u6839\u672c\u6ca1\u6709\u90a3\u4e48\u590d\u6742\u2026\u2026\uff08\u4f3c\u4e4e\u539f\u6765\u7684\u9898\u4e0d\u540c\uff09\n\n\n- \u95ee\u9898\u62bd\u8c61\u4e3a\u5728\u4e00\u4e2a\u5e8f\u5217\u4e2d\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6570\uff0c\u5b83\u7684\u4e0a\u4e00\u4e2a\u548c\u5b83\u76f8\u7b49\u6570\u662f\u5426\u5728\u5e8f\u5217\u4e2d\u3002\n\n- \u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a$Left$\u6570\u7ec4\u8bb0\u5f55\u5b83\u4e0a\u4e2a\u548c\u5b83\u76f8\u7b49\u7684\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n- \u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u8bb0\u5f55\u5230$i$\u4e4b\u524d\u6240\u6709$Left$\u7684\u6700\u5927\u503c\uff08$MaxLeft$\uff09\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6700\u6709\u53ef\u80fd\u6539\u53d8\u7b54\u6848\u3002\uff08\u8d21\u732e\u6700\u5927\uff09\n\n- \u6bcf\u6b21\u8be2\u95ee$l$\u5230$r$\u662f\u5426\u5b58\u5728\u76f8\u540c\u7684\u3002\u6211\u4eec\u53ea\u8981\u8be2\u95ee$MaxLeft[r]$\u662f\u5426$<$ $l$\u3002\u5982\u679c\u662f\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f$Yes$\u5426\u5219\u5c31\u662f$No$\u3002\n\n- \u5bf9\u4e8e$\\le l$\u7684$Left$\u5bf9\u7b54\u6848\u6839\u672c\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\n\n\u9644\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define For(i, l, r) for(int i = (l), _end_ = (int)(r); i <= _end_; ++i)\n#define Fordown(i, r, l) for(int i = (r), _end_ = (int)(l); i >= _end_; --i)\n#define Set(a, v) memset(a, v, sizeof(a))\nusing namespace std;\n\nbool chkmin(int &a, int b) {return b < a ? a = b, 1 : 0;}\nbool chkmax(int &a, int b) {return b > a ? a = b, 1 : 0;}\n\ninline int read() {\n    int x = 0, fh = 1; char ch = getchar();\n    for (; !isdigit(ch); ch = getchar() ) if (ch == '-') fh = -1;\n    for (; isdigit(ch); ch = getchar() ) x = (x<<1) + (x<<3) + (ch ^ '0');\n    return x * fh;\n}\n\nconst int N = 1e5 + 1e2;\nint n, q;\nint a[N], Left[N];\nint last[N], Max_Left[N];\nvoid input() {\n    n = read(); q = read();\n    For (i, 1, n)\n        a[i] = read();\n\n    For (i, 1, n) {\n        Left[i] = last[a[i]];\n        last[a[i]] = i;\n        chkmax(Max_Left[i], Left[i]);\n        chkmax(Max_Left[i], Max_Left[i-1]);\n    }\n}\n\nvoid solve() {\n    while (q--) {\n        int l = read(), r = read();\n        puts(Max_Left[r] >= l ? \"No\" : \"Yes\");\n    }\n}\n\nint main () {\n    input();\n    solve();\n    return 0;\n}\n```\n> PS:\u5b9e\u6d4b60ms,\u597d\u50cf\u662f\u6700\u5feb\u7684",
        "postTime": 1503842668,
        "uid": 19128,
        "name": "zjp_shadow",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e2aO\uff08n\uff09\u7684\u7b97\u6cd5\n## **\u8fd9\u662f\u7bc7\u5bf9\u840c\u65b0\u53cb\u597d\u7684\u9898\u89e3**\n## \u5927\u4f6c\u76f4\u63a5\u8df3\u8fc7\u5427\n\n------------\n### \u601d\u8def\n\n\u8fd9\u662f\u4e00\u9053\u64cd\u4f5c\u6570\u5217\u7684\u9898\n\n\u6613\u53d1\u73b0\u4e0b\u8ff0\u9898\u76ee\u5177\u6709\u7684\u6027\u8d28\n1. \u53d1\u73b0\u8fd9\u4e2a\u6570\u5217\u662f\u6ca1\u6709\u4efb\u4f55\u4fee\u6539\u7684\n1. \u53d1\u73b0\u8fd9\u4e2a\u533a\u95f4\u53ef\u884c\u6027\u662f\u5355\u8c03\u7684\uff08\u5373\u6269\u5c55\u533a\u95f4\u7b54\u6848\u53ea\u53ef\u80fd\u7531Yes\u53d8\u4e3aNo\uff0c\u5e76\u4e14\u4e00\u65e6No\u5c31\u4e0d\u53ef\u80fdYes\u4e86\uff09\n1. \u6570\u5217\u6570\u503c\u662f\u5f88\u5c0f\u7684\n\n\u4e00\u4e9b\u672c\u9898\u89e3\u4e0d\u9700\u8981\u7684\u6027\u8d28\uff08\u5728\u5176\u4ed6\u9898\u91cc\u53ef\u80fd\u5f88\u6709\u7528\u7684\uff09\n\n- \u53ef\u4ee5\u79bb\u7ebf\n\n- \u6570\u503c\u6bd4N\u5c0f\n\n\n### \u5206\u6790\n1. \u6ca1\u6709\u4fee\u6539\u8bf4\u660e**\u53ef\u4ee5\u9884\u5904\u7406\u7b54\u6848**\n1. \u5355\u8c03\u8bf4\u660e**\u53ef\u4ee5\u4ece\u4e0a\u4e2a\u5df2\u7ecf\u6c42\u51fa\u7b54\u6848\u7684\u533a\u95f4\u62d3\u5c55\u5230\u4e0b\u4e00\u4e2a\u533a\u95f4**\uff08\u5176\u5b9e\u5355\u8c03\u662f\u4e2a\u597d\u7528\u7684\u6027\u8d28\uff0c\u6700\u5e38\u89c1\u7684\u662f\u4e8c\u5206\uff09\n1. \u6570\u503c\u5c0f**\u8bf4\u660e\u53ef\u4ee5\u7528\u6876\u76f4\u63a5\u5b58\u6570\u503c**\n\n### \u5f00\u5207\n\u5173\u952e\u662f\u600e\u4e48\u9884\u5904\u7406\u51fa\u7b54\u6848\n\n\u56e0\u4e3a\u5355\u8c03\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\uff1a\n\n\u5bf9\u4e00\u4e2a\u88ab\u4f5c\u4e3a\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\uff0c\u5b83\u7684\u5de6\u7aef\u70b9 \u6ee1\u8db3\u7b54\u6848\u4e3aYes\u7684\u4f4d\u7f6e \u662f\u6709\u6700\u5c0f\u503c\u7684\uff0c\u5728\u6700\u5c0f\u503c\u53f3\u8fb9\u90fd\u662fYes\uff0c\u5de6\u8fb9\u90fd\u662fNo\uff08\u4e8c\u5206\uff1f\u4e0d\u9700\u8981\uff09\n\n\u53ef\u4ee5\u7528\u4e2a\u6570\u7ec4lm[i]\u8868\u793a\u4ee5\u7b2ci\u4e2a\u6570\u4e3a\u53f3\u7aef\u70b9\u65f6\u5de6\u7aef\u70b9\u7684\u6700\u5c0f\u503c\uff0c\u663e\u7136\u53ea\u8981\u77e5\u9053\u8fd9\u4e2a\u6211\u4eec\u5c31\u53ef\u4ee5\u56de\u7b54\u6240\u6709\u8be2\u95ee\uff0c\u5982\u679c\u8be2\u95ee\u7684l\u66f4\u5c0f\u90a3\u5c31\u662fNo\uff0c\u5426\u5219\u4e3aYes\n\n\n\u63a5\u4e0b\u6765\u6c42\u89e3\u6240\u6709\u4f4d\u7f6e\u7684lm\n\n\u4ece\u5de6\u5f80\u53f3\u6c42\u89e3\uff08\u62d3\u5c55\u533a\u95f4\u4e00\u822c\u662f\u8fd9\u6837\u7684\uff0c\u5982\u679c\u4e0d\u884c\u5c31\u6362\u4e2a\u65b9\u5f0f\uff09\n\n\u5047\u8bbe\u5f53\u524d\u5904\u7406\u5230\u4e86\u7b2ci\u4e2a\u5143\u7d20\n\n\u8fd9\u65f6\u6211\u4eec\u77e5\u9053lm[i-1]\u5230i-1\u662f\u5408\u6cd5\u7684\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u7684\u5143\u7d20\u5728\u4e4b\u524d\u7684lm[i-1]\u5230i-1\u90fd\u6ca1\u51fa\u73b0\u8fc7\uff0c\u90a3\u76f4\u63a5\u62d3\u5c55lm[i]=lm[i-1]\uff0c\u5426\u5219\u5c31\u662f\u7b2ci\u4e2a\u5143\u7d20\u7684\u503c\u4e0a\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e+1\n\n\u8fd9\u65f6\u5c31\u6c42\u89e3\u5b8c\u6bd5\u4e86\n\n\u53c2\u8003\u4ee3\u7801\uff08\u5b9e\u73b0\u7565\u6709\u4e0d\u540c\uff09~~\u7092\u9e21\u77ed~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nint a[N],lm[N],n,q;\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\tint k,l,r;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&k);\n\t\tlm[i]=max(lm[i-1],a[k]+1);\n\t\ta[k]=i;\n\t}\n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tif(lm[r]<=l)printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n} \n```\n\n",
        "postTime": 1568358013,
        "uid": 148092,
        "name": "Dark_lightrq",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "~~\u5de8\u4f6c\u4eec\u7684\u4ee3\u7801\u90fd\u597d\u957f\u554a\uff0c\u6709\u4e2a\u8ddf\u6211\u4e00\u6837\u957f\u5ea6\u7684\uff0c\u8fd8\u662f\u53cc\u91cd\u5faa\u73af~~\n\n\u8fd9\u9053\u9898\u6211\u7684\u4ee3\u7801\u5f88\u77ed(\u4ec524\u884c)\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u7684\u601d\u7ef4\u96be\u5ea6\u8f83\u5927\n\n\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4last[x]\u8868\u793ax\u8fd9\u4e2a\u6570\u6700\u8fd1\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5b9a\u4e49st[i]\u8868\u793a\u4ee5\u7b2ci\u4e2a\u6570\u7ed3\u5c3e\u7684\u6bcf\u4e2a\u6570\u4e0d\u540c\u7684\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c1 2 3 4 2  \u5219\u7b2c5\u4e2a\u6570\uff0cst[5]=3\u56e0\u4e3a\u4ece\u7b2c\u4e09\u4e2a\u6570\u5f00\u59cb\u5230\u7b2c\u4e94\u4e2a\u6570\u7ec4\u6210\u7684\u5e8f\u5217\u662f\u6ca1\u6709\u91cd\u590d\u6570\u5b57\u7684\u3002\n\n\u90a3\u4e48st[i]\u600e\u4e48\u6c42\u5462\uff0clast[x]\u5c31\u6d3e\u4e0a\u7528\u573a\u5566\uff01\n\n\u52a8\u6001\u89c4\u5212\u601d\u60f3\uff0c\u5047\u8bbest[i-1]\u5df2\u7ecf\u7b97\u597d\u4e86,\u90a3\u4e48\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9\n\n- \u9009\u62e9\u7b2ci\u4e2a\u6570\u8fde\u8fc7\u53bb\u3002\u90a3\u4e48st[i]=st[i-1]\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u56e0\u4e3a\u628a\u7b2ci\u4e2a\u6570\u63a5\u5230\u7b2ci-1\u4e2a\u6570\u540e\u9762\uff0c\u5b83\u4eec\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f53\u7136\u662f\u4e00\u6837\u7684\n\n- \u4e0d\u7528\u7ba1\u524d\u9762\u7684\u6570\u3002\u56e0\u4e3a\u8981\u6c42\u6570\u5217\u4e0d\u80fd\u91cd\u590d\uff0c\u800clast[x]\u8bb0\u5f55\u7684\u5c31\u662fx\u6700\u8fd1\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u4ecelast[x]+1\u5f00\u59cb\u5230i\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u6709\u4e0ex\u91cd\u590d\u7684\u6570\u5b57\uff0c\u6240\u4ee5st[i]=last[x]+1\n\n\u6240\u4ee5\u7efc\u4e0a\uff1ast[i]=max(st[i-1],last[x]+1)\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u4e07\u4e8b\u4ff1\u5907\uff0c\u53ea\u6b20\u5224\u65ad\uff0c\u5bf9\u4e8e\u8f93\u5165\u7684l\uff0cr\u53ea\u8981\u5224\u65adst[r]<=l\u5982\u679c\u662f\uff0c\u90a3\u5c31\u8f93\u51faYes,\u5426\u5219\u5c31\u8f93\u51faNo\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=1e5+5,LogN=20;\nint st[MAXN],last[MAXN];\nint n,m;\nint main()\n{\n\tcin>>n>>m;\n\tfor (int i=1;i<=n;i++){\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tst[i]=max(st[i-1],last[x]+1);\n\t\tlast[x]=i;\n\t}\n\tfor (int i=1;i<=m;i++){\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tif (st[r]<=l)\n\t\t\tcout<<\"Yes\\n\";\n\t\telse\n\t\t\tcout<<\"No\\n\";\n\t}\n\treturn 0;\n}\n```\n\n\u5b8c\u6210\u8fd9\u9053\u9898\u7684\u7ae5\u978b\uff0c\u53ef\u4ee5\u505a\u4e0b\u8fd9\u9053\u9898\uff0c\u4f46\u8fd9\u91cc\u8fd8\u8981\u7ed3\u5408ST\u7b97\u6cd5\u548c\u4e8c\u5206\u601d\u60f3[\u4e0e\u4f17\u4e0d\u540c  \u6233\u6211](http://ybt.ssoier.cn:8088/problem_show.php?pid=1543)",
        "postTime": 1566899217,
        "uid": 106619,
        "name": "yagyagyag",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "# \u7eaf\u66b4\u529b\uff0c\u662f\u4e0d\u662f\u6bd4\u90a3\u4e9b\u83ab\u961f\u5927\u4f6c\u597d\u5f88\u591a\u3002\u8fd9\u662f\u552f\u4e00\u7684\u7eaf\u66b4\u529b\u9898\u89e3\uff0c\u4e0d\u80fd\u8bf4\u6211\u662f\u91cd\u590d\u9898\u89e3\u4e86\u5427\u3002\n~~\u66b4\u529b\u662fOIer\u8fdb\u6b65\u7684\u9636\u68af~~\n\n\u8fd9\u7bc7\u9898\u89e3\u9488\u5bf9\u7684\u662f\u4e2d\u4e0b\u5c42OI\u9009\u624b\uff0c\u7701\u961f\u5927\u4f6c\u4e0d\u5b9c\u89c2\u770b\u3002\u5f53\u7136\u6211\u4eec\u4e0d\u6025\u7740\u8bb2\u9898\u76ee\u5148\u770b\u770b\u522b\u7684\uff0c\n\n\u76ee\u7684\u662f\u8bb2\u4e00\u4e0b\u5982\u4f55\u66b4\u529bAC\u3002\n\n## \u4e0b\u9762\u5927\u4f6c\u624b\u628a\u624b\u6559\u5927\u5bb6\u5982\u4f55\u5361\u5e38\u6570\u3002\n\u4e00\uff0c\u6570\u636e\u7ed3\u6784\u65b9\u9762\uff0c\u6570\u7ec4\u7684\u67e5\u8be2\u65f6\u95f4\u662fO(1)\uff0c~~\u8fd9\u4e2a\u5927\u5bb6\u90fd\u77e5\u9053\u3002~~\u4f46\u662f\u5f88\u6bd2\u7624\u7684\u662fint\u6bd4bool\u8fd8\u5feb\u3002\u6307\u9488\u53ef\u4ee5\u4ee3\u66ff\u6570\u7ec4\uff0c\u4f46\u662f\u5bb9\u6613\u4f5c\u6b7b\u3002stack\u548cqueue\u662f\u5f88\u6162\u7684,\u53ef\u4ee5\u7528\u6570\u7ec4\u6a21\u62df\u3002\n\n\u4e8c\uff0c\u8f93\u5165\u8f93\u51fa\u65b9\u9762\u52a0\u4e0a\u5feb\u901f\u8bfb\u5165\u4f18\u5316\uff0c\u8f7b\u677e\u52a0\u901f,\u5f53\u7136\u53ef\u4ee5\u52a0\u4e0a\u4f4d\u8fd0\u7b97\u4f18\u5316\uff01\u8f93\u51fa\u4e5f\u662f\u53ef\u4ee5\u5feb\u901f\u4f18\u5316\u7684\uff0c\u5728\u4e0b\u9762\uff0c\u8fd9\u91cc\u4e0d\u518d\u5c55\u5f00\u3002\n\n\u4e09\uff0c\u601d\u7ef4\u65b9\u9762\uff0c\u53ef\u4ee5\u4e0d\u7528\u6734\u7d20\u7b97\u6cd5\u6539\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u67e5\u8be2\u4fee\u6539\uff0c\u6216\u8005\u662f\u7528\u524d\u7f00\u548c\u4f18\u5316\uff0c\u9884\u5148\u5904\u7406\u7b54\u6848\u8f93\u51fa\uff0c\u8fd8\u6709\u77e9\u9635\u52a0\u901ffor\u5faa\u574f~~\u54e6\u626f\u8fdc\u4e86\u3002~~\n\n\u56db\uff0c\u8fd9\u662f\u91cd\u70b9~~\u7ec6\u8282~~\u65b9\u9762\uff0c\u5438\u53d6\u5404\u4f4d\u5de8\u795e\u7684\u7cbe\u534e\uff1a\u51fd\u6570\u524d\u9762\u52a0\u4e0ainline\u4f7f\u51fd\u6570\u66f4\u5feb\uff0c\u5728\u5e38\u7528\u7684\u53d8\u91cf\u524d\u9762\u52a0\u4e0aregister\u5bc4\u5b58\u5668\u4f18\u5316\uff0c\u5728\u5bc4\u5b58\u5668\u5185\u90e8\u5176\u8fd0\u7b97\u6548\u7387\u53ef\u4ee5\u5927\u4e3a\u52a0\u901f\u3002\u4f46\u662f\u4e0d\u8981\u628a\u6570\u7ec4\u52a0\u4e0a\u8fd9\u4e2a\uff0cregister\u4f1a\u70b8\u88c2\u3002memset\u5c45\u7136\u6bd4for\u5faa\u73af\u6162\u3002\u8fd8\u6709\u4e00\u4e2a\u6bd2\u7624\u7684\u4e8b\u60c5\u5927\u5bb6\u5927\u591a\u4e0d\u77e5\u9053\uff0ci++\u6bd4++i\u6162\uff0c\u771f\u7684\uff01\u5982\u679c\u5feb\u901f\u6392\u5e8f\u89c9\u5f97\u6162\uff0c\u53ef\u4ee5\u7528\u7a33\u5b9a\u7684\u5feb\u901f\u6392\u5e8f~~\u8bdd\u8bf4\u5feb\u6392\u4e0d\u90fd\u662f\u4e0d\u7a33\u5b9a\u7684\u5417~~\n\n## \u63a5\u4e0b\u6765\u732e\u4e0a\u4f4d\u8fd0\u7b97\u8be6\u89e3\u4e00\u7bc7\u5927\u4f6c\u8bf7\u8df3\u8fc7\n\u5148\u611f\u8c22\u674e\u715c\u4e1c\u8001\u5e08\u7684\u8f9b\u52e4\u52b3\u52a8\uff0c\u6211\u662f\u501f\u9274\u4ed6\u7684\u6210\u679c\u3002\n\u4f4d\u8fd0\u7b97\u5171\u67094\u79cd\uff0c\u5b83\u4eec\u662f\u4e0e\u6216\u975e\u548c\u5f02\u6216~~\u5e9f\u8bdd~~\n\n\u5341\u8fdb\u5236\u7684\u6570\u4e0d\u80fd\u53c2\u4e0e\u8fd0\u7b97\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\u662f\u4e8c\u8fdb\u5236\uff0c\u5982\u679c\u76f4\u63a5\u5bf9\u5176\u8fd0\u7b97\u5c31\u6bd4\u5341\u8fdb\u5236\u5757\u5f88\u591a\u3002\u6240\u4ee5\u8bf4\u4f4d\u8fd0\u7b97\u6700\u5feb\uff0c\u7136\u540e\u662f\u52a0\u51cf\uff0c\u63a5\u7740\u662f\u4e58\u9664\uff0c\u6700\u6162\u7684\u662f\u53d6\u6a21\uff0c~~\u6162\u7684\u4e00\u5339~~\u5927\u5bb6\u5148\u4f53\u9a8c\u4e00\u628a\u4f4d\u8fd0\u7b97\uff0c\u6253\u5f00\u624b\u673a\u8ba1\u7b97\u5668\u7684\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c\u7136\u540e\u8c03\u6210\u4e8c\u8fdb\u5236\u3002\u3002\u3002\n\n\u597d\uff0c\u4e0e\u6307\u7684\u662f\u6309\u7167\u4e8c\u8fdb\u5236\u4f4d\u7684\u4e24\u4e2a\u6570\u5b57\uff0c\u4e24\u4f4d\u90fd\u662f1\u5c31\u662f1\uff0c\u5426\u5219\u4e3a0\uff0c\u6216\u5c31\u662f\u6309\u7167\u4e8c\u8fdb\u5236\u4f4d\u4e24\u4f4d\u6709\u4e00\u4f4d\u662f1\u5c31\u4e3a1\uff0c\u4e24\u4e2a\u6570\u4f4d\u90fd\u662f0\u624d\u662f0\uff0c\u975e\u5c31\u662f\u628a\u6bcf\u4e00\u4f4d\u90fd\u53d6\u53cd\uff0c\u5f02\u6216\u662f\u4e24\u4f4d\u76f8\u540c\u4e3a0\uff0c\u4e0d\u540c\u4e3a1\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e24\u4e2a\u6570\u6bd4\u8f83\u65f6\u4e0d\u8db3\u4f4d\u63090\u8ba1\u7b97\uff0c\u76f4\u5230\u4e24\u4e2a\u6570\u4f4d\u6570\u76f8\u540c\u3002\n\n\u5de6\u79fb\u5c31\u662f\u76f4\u63a5\u628a\u6bcf\u4e00\u4f4d\u90fd\u5411\u5de6\u79fb\uff0c\u53f3\u79fb\u4e5f\u662f\u8fd9\u6837\u7684\u3002~~\u968f\u610f~~\n\u6765\u4e3e\u4e2a\u4f8b\u5b505\u7b49\u4e8e\u4e8c\u8fdb\u5236\u4e0b\u7684101\uff08\u8fd9\u4e2a\u80af\u5b9a\u4f1a\u554a\uff09,\u5de6\u79fb\u4e24\u4f4d\u5c31\u662f10100\uff08\u4f4e\u4f4d\u662f0\u8865\u8db3\uff09\uff0c\u81ea\u7136\u662f\u5341\u8fdb\u5236\u4e0b\u768420\u5566\uff01\n\n\u5de6\u79fb\u5c31\u662f\u4e58\u4e8c\u53f3\u79fb\u5c31\u662f\u9664\u4e8c\uff0c\u54e6\u6211\u4eec\u597d\u50cf\u53ef\u4ee5\u7528\u8fd9\u4e2a\u4f18\u5316\u4e58\u4e8c\u554a\uff01\u8fd8\u6709\u66f4\u795e\u5947\u7684\u4e8b\u60c5\uff01n<<1\u5c31\u662f\u4e58\u4e8c\uff0cn<<3\u5c31\u662f\u4e588\u554a\uff0c\u90a3\u4e48\u52a0\u8d77\u6765\u4e0d\u5c31\u662f\u4e58\u5341\u4e86\u5417\uff1f~~\u8fd9\u771f\u662f\u6fc0\u52a8\u4eba\u5fc3\u7684\u53d1\u73b0~~\n\u5f53\u7136\u540c\u7406\u6709\u7684\u51cf\u6cd5\u4e5f\u53ef\u4ee5\u7528^\u6765\u4f18\u5316\uff0c\u6216\u53ef\u4ee5\u7528\u6765\u5224\u65ad\u5947\u6570\uff1a\u6bd4\u598211\u7684\u4e8c\u8fdb\u5236\u662f1011\uff0c(1011&1)=(1011&0001)=(0001)\u8fd4\u56de\u4e861\uff01\n\u54c7\u592a\u5f3a\u4e86\uff0c\u4ee5\u540e\u53ef\u4ee5\u7528(x&1)\u5224\u65ad\u662f\u4e0d\u662f\u5947\u6570\u4e86,\u5982\u679c\u7528x%2\u7684\u540e\u679c\u5c31\u662fx\u4e0d\u505c\u7684\u51cf\u4e8c\u3002\u3002\u3002\u4e00\u76f4\u51cf\u5230\u5269\u4e0b1\u6216\u80050\u3002\n\n\u987a\u4fbf\u8bb2\u4e00\u4e0blowbit\u8fd0\u7b97\uff0c\u8fd9\u4e2a\u53ef\u540a\u4e86\u3002lowbit\u7684\u5b9a\u4e49\u662f\u6574\u6570\u5728\u4e8c\u8fdb\u5236\u4e0b\u6700\u4f4e\u4f4d\u76841\u53ca\u5176\u540e\u8fb9\u7684\u6240\u67090\uff0clowbit(n)=n&(-n)\n\u8fd9\u6ce2\u5e9f\u8bdd\u5176\u5b9e\u610f\u601d\u662f\u8bf4\u627e\u5230\u6700\u53f3\u76841\u6784\u6210\u7684\u6570\uff0c\u6bd4\u5982lowbit(14)=1110,\u90a3\u4e48lowbit(n)\u5c31\u662f2\u554a\uff01\u8fd9\u4e2a\u8be6\u89c1\u6811\u72b6\u6570\u7ec4\u3002\n\n\u72b6\u6001\u538b\u7f29\u5c31\u662f\u5c06\u4e00\u4e2a\u957f\u5ea6\u4e3am\u7684bool\u6570\u7ec4\u6362\u6210\u4e00\u4e2a\u7528\u4e8c\u8fdb\u5236\u6570\u5b58\u8d2e\u7684\u65b9\u6cd5\u3002\u4e0b\u5217\u662f\u72b6\u6001\u538b\u7f29\u7684\u5e38\u7528\u8868\u8fbe\u5f0f\uff1a\n1,\u53d6\u51fan\u7684\u7b2ck\u4f4d  (n>>k)&1  \u5c31\u662f\u628an\u5220\u6389\u51e0\u4f4d\u62161\uff0c\u7b80\u5355\u5427\n\n2\uff0c\u53d6\u51fan\u7684\u540ek\u4f4d  n&((1<<k)-1)  \u8fd9\u4e2a\u6211\u4e5f\u4e0d\u600e\u4e48\u4f1a\n\n3.\u628an\u7684\u7b2ck\u4f4d\u8d4b1  n|(1<<k)  \u5c31\u662f\u5236\u9020\u4e00\u4e2a\u6570\u662f2\u7684k\u6b21\u65b9\u624d\u80fd\u548cn\u8fdb\u884c\u8fd0\u7b97\u554a\uff0c\u540c\u7406\u6709 n^(1<<k) \u548c n&(~(1<<k))\u8fd9\u4e2a\u662f\u7b2ck\u4f4d\u8d4b0\n\n\u63a5\u4e0b\u6765\u662f\u4f4d\u8fd0\u7b97\u5b9e\u6218\uff01\uff01\uff01\u5927\u4f6c\u52ff\u55b7\n\n1\uff0c\u4f4d\u8fd0\u7b97\u52a0\u901f\u5feb\u901f\u5e42\n```\n#define int long long\ninline int quickpower(int a,int b,int p){\n\tregister int ans=1;\n\tfor (;b;b>>=1){\n    \tif (b&1)\tans=ans*a%p;\n        a=a*a%p;\n    }return ans;\n}\n```\n2\uff0c\u6700\u77ed\u66fc\u54c8\u987f\u8def\u5f84\n```\nint f[1<<20][20];\ninline int hamilton(int n,int weight[20][20]){\n\tmemset(f,0x3fsizeof(f));\n    f[1][0]=0;\n    for (register int i=1;i<=1<<n;++i)\n    for (register int j=0;j<n;++j)\n    if (i<<j&1)\n    for (register int k=0;k<n;k++)\n    if ((i^1<<j)>>k&1)\n    f[i][j]=min(f[i][j],f[i^1<<j][k]+weight[k][j]);\n    return f[(1<<n)-1][n-1];\n}\n```\n\u6211\u4eec\u5230\u4e86\u4e3b\u9898\uff0cP3901\n\u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u628a\u6211\u770b\u5f97\u4e00\u8138\u61f5\u903c\uff0c\u6700\u540e\u770b\u61c2\u4e86\uff0c\u539f\u6765\u662f\u8981\u6c42\u51fa\u662f\u4e0d\u662f\u6bcf\u4e2a\u6570\u5b57\u90fd\u4e0d\u540c\u554a\uff01\u8fd9\u662f\u6211\u7684\u9898\u89e3\uff0c\u81ea\u7136\u8fd8\u80fd\u4f18\u5316\uff0c\u4e0d\u518d\u7ec6\u8bf4\u4e86\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100001],n,q;\nbool b[100001];\ninline int read(){\n\tregister int x=0;\n\tregister char c=getchar();\n\twhile (!isdigit(c))\tc=getchar();\n\twhile (isdigit(c))\n    x=(x<<1)+(x<<3)+(c^48),c=getchar();\n\treturn x;\n}\nint main(){register bool flag=false;\n\tn=read(),q=read();\n\tfor (register int i=1;i<=n;i++)\n\t\ta[i]=read();\n\tfor (register int i=1,l,r;i<=q;i++){\n\t\tl=read(),r=read(),flag=false;\n\t\tmemset(b,false,sizeof(b));\n\t\tfor (register int j=l;j<=r;j++)\n\t\t\tif (b[a[j]]){\n\t\t\t\tflag=true,puts(\"No\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\tb[a[j]]=1;\n\t\tif (!flag)\tputs(\"Yes\");\n\t}\n\treturn 0;\n}```\n\u671b\u5927\u5bb6\u7ed9\u6211\u70b9\u8d5e\uff0c\u8c22\u8c22\n\n~~\u7ba1\u7406\u5458\u6c42\u60a8\u5ba1\u6838\u901a\u8fc7~~",
        "postTime": 1541991161,
        "uid": 109690,
        "name": "aserrrre",
        "ccfLevel": 0,
        "title": "\u4f4d\u8fd0\u7b97"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u505a\n\n\u5565\uff1f \u6811\u72b6\u6570\u7ec4\uff1f \u90a3\u4e2a\u4e0d\u662f\u7ef4\u62a4\u524d\u7f00\u548c\u7684\u4e1c\u897f\u5417\uff1f\n\n\u5404\u4f4d\u770b\u5b98\uff0c\u8ba9\u6211\u6162\u6162\u9053\u6765\u3002\n\n----------------\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee$ [l,r] $\uff0c\u53ea\u6709$[1,r]$\u4e2d\u7684\u6570\u53ef\u80fd\u5bf9\u8fd9\u4e2a\u8be2\u95ee\u6709\u5f71\u54cd\u3002\n\n\u8fd9\u5c31\u542f\u793a\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u8fdb\u884c\u4e00\u6ce2\u5347\u5e8f\u6392\u5e8f\u3002\n\n\u4e0d\u8fc7\u8fd9\u548c\u6811\u72b6\u6570\u7ec4\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\n\n\u5bf9\u4e8e\u540c\u4e00\u4e2a\u6570$x$\uff0c\u5047\u8bbe\u4ed6\u5728$[1,r]$ \u51fa\u73b0\u4e86\u82e5\u5e72\u6b21\u3002\n\n\u5bf9\u4e8e\u6211\u4eec\u7684\u8be2\u95ee$[l,r]$\u6765\u8bf4\uff0c\u53ea\u6709\u6700\u9760\u8fd1$r$\u7684$x$\u624d\u6700\u6709\u53ef\u80fd\u5f71\u54cd\u5230\u53f3\u7aef\u70b9\u4e3a$r$\u7684\u8be2\u95ee\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ea\u7528\u8bb0\u5f55\u6700\u9760\u8fd1$r$\u7684$x$\u7684\u4f4d\u7f6e\u5c31\u884c\u4e86\u3002\n\n-------------\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u4e2d\u4e0d\u540c\u7684\u4e2a\u6570\u5462\uff1f\n\n\u4e0a\u6587\u8bf4\u9053\uff0c\u6211\u4eec\u53ea\u7528\u8bb0\u5f55\u6700\u9760\u8fd1\u5f53\u524d\u53f3\u7aef\u70b9\u7684\u6bcf\u4e2a\u6570\u7684\u4f4d\u7f6e\u4e86\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e00\u4e0b\u3002\n\n\u6811\u72b6\u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5c31\u662f\u8f93\u5165\u4e2d\u6bcf\u4e00\u4e2a\u6570\u7684\u4f4d\u7f6e\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570$x$\uff0c\u4ed6\u9760\u8fd1\u6211\u4eec\u5f53\u524d\u904d\u5386\u7684\u53f3\u7aef\u70b9\u7684\u6700\u8fd1\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6240\u5bf9\u5e94\u7684\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u6570\u503c\u4e3a1\u3002\u4e0d\u662f\u6700\u8fd1\u7684\u7edf\u7edf\u4e3a0\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee$[l,r]$\uff0c\u6211\u4eec\u8ba1\u7b97\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u4e2d$[l,r]$\u4e2d\u7684\u548c\u3002\u5982\u679c\u548c\u662f $(r-l+1)$\u7684\u8bdd\uff0c\u5c31\u8bf4$[l,r]$\u4e2d\u6240\u6709\u6570\u90fd\u662f\u6700\u9760\u8fd1$r$\u7684,\u5982\u679c\u4e0d\u662f\u7684\u8bdd.\u5219\u8bf4\u660e\u6709\u91cd\u590d\u51fa\u73b0\u7684\u3002\n\n-------------------\n~~\u771f\u00b7\u51ed\u76f4\u89c9\u505a\u9898\uff08@\u67d0\u6708\u6708\u8d5bT1\uff09\u6ed1\u7a3d\u3002\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u662f\u592a\u849f\u84bb\u4e86\u5bfc\u81f4\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u7136\u540e\u6765\u5237\u9ec4\u9898\u7684\u5417\uff1f~~\n\n---------------\n\n\u7c7b\u4f3c\u7684\u9898\u76ee[SDOI2009]HH\u7684\u9879\u94fe](https://www.luogu.org/problemnew/show/P1972)\n\n~~\u8fd9\u4e2a\u9898\u88ab\u67d0\u59d3\u6bd2\u540d\u7624\u5b57cz\u7684\u4eba\u52a0\u5f3a\u8fc7\uff08\u6697\u5730%\u4e00%\uff09\uff0c\u666e\u901a\u83ab\u961f\u4f1a\u88ab\u5361~~\n```cpp\n//Lance1ot\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node//\u6811\u72b6\u6570\u7ec4\n{\n\tint data[101000];\n\tint num;\n\tvoid updata(int pos,int value)\n\t{\n\t\twhile(pos<=num&&pos)\n\t\t{\n\t\t\tdata[pos]+=value;\n\t\t\tpos+=(pos&(-pos));\n\t\t}\n\t\treturn ;\n\t}\n\tint sum(int pos)\n\t{\n\t\tint res=0;\n\t\twhile(pos)\n\t\t{\n\t\t\tres+=data[pos];\n\t\t\tpos-=(pos&(-pos));\n\t\t}\n\t\treturn res;\n\t}\n\tint check(int l,int r)\n\t{\n\t\treturn sum(r)-sum(l-1);\n\t}\n};\nnode bit;\nstruct Query\n{\n\tint l;\n\tint r;\n\tint num;\n}q[101000];//\u8be2\u95ee\nbool compare(const Query &a,const Query &b)\n{\n\treturn a.r<b.r;\n}\nint data[101000];//\u539f\u6570\u7ec4\nint ans[101000];\nint last[101000];//\u6700\u8fd1\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tbit.num=n;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&data[i]);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&q[i].l,&q[i].r);\n\t\tq[i].num=i;//\u79bb\u7ebf\u5904\u7406\uff0c\u662f\u7b2c\u51e0\u4e2a\u8be2\u95ee\u3002\n\t}\n\tsort(q+1,q+1+m,compare);//\u6392\u5e8f\n\tint Q=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tbit.updata(last[data[i]],-1);//\u64a4\u9500\u4e0a\u4e00\u4e2a\u8bb0\u5f55\n\t\tbit.updata(i,1);//\u66f4\u65b0\n\t\tlast[data[i]]=i;//\u4fdd\u5b58\n\t\twhile(q[Q].r==i&&Q<=m)//\u5224\u65ad\u5f53\u524d\u53f3\u7aef\u70b9\u662f\u5426\u548c\u67d0\u4e2a\u91cd\u5408\n\t\t{\n\t\t\tif(bit.check(q[Q].l,q[Q].r)==(q[Q].r-q[Q].l+1))//\u56e0\u4e3a\u662f\u79bb\u7ebf\u7b97\u6cd5\uff08fa\u2642\uff09\uff0c\u6240\u4ee5\u8981\u4fdd\u5b58\u7b54\u6848\n\t\t\t\tans[q[Q].num]=1;\n\t\t\telse\n\t\t\t\tans[q[Q].num]=0;\n\t\t\tQ+=1;//\u5199\u6210while\u4fdd\u9669\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(ans[i]==1)\n\t\t\tprintf(\"Yes\\n\");\n\t\telse\n\t\t\tprintf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n\u901f\u5ea6\u8fd8\u7b97\u53ef\u4ee5\u5427\u3002",
        "postTime": 1526731591,
        "uid": 28007,
        "name": "Lance1ot",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5341\u4e07\u7684\u6570\u636e$O(n^2)$\u7684\u66b4\u529b\u5e94\u8be5\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\n\n\u63d0\u4f9b\u4e00\u79cd\u505a\u6cd5\uff1a\u83ab\u961f\u3002\n\n\u52a0\u4e2a\u6807\u8bb0\u6570\u7ec4\u7ef4\u62a4\u8be5\u6570\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c\u518d\u52a0\u4e2a\u53d8\u91cf\u7edf\u8ba1\u6709\u51e0\u4e2a\u6570\u662f\u91cd\u590d\u7684\u3002\n\n\n\n\n```cpp\n#include<map>\n#include<set>\n#include<ctime>\n#include<cmath>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define LL long long\n#define RE register\n#define IL inline\nusing namespace std;\nconst int N=1e5;\nint n,q,lim;\nint cnt[N+5],a[N+5];\nstruct tt\n{\n    int l,r,id;\n}query[N+5];\nbool keep[N+5];\nIL bool comp(const tt &a,const tt &b) {return a.l/lim==b.l/lim ? a.r<b.r : a.l<b.l;}\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    lim=sqrt(n);\n    for (RE int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    for (RE int i=1;i<=q;i++) scanf(\"%d%d\",&query[i].l,&query[i].r),query[i].id=i;\n    sort(query+1,query+1+q,comp);\n    int curl=1,curr=0,ans=0,l,r;\n    for (RE int i=1;i<=q;i++)\n    {\n        l=query[i].l,r=query[i].r;\n        while (curl<l) cnt[a[curl]]--,ans-=(cnt[a[curl++]]==1);\n        while (curl>l) cnt[a[--curl]]++,ans+=(cnt[a[curl]]==2);\n        while (curr<r) cnt[a[++curr]]++,ans+=(cnt[a[curr]]==2);\n        while (curr>r) cnt[a[curr]]--,ans-=(cnt[a[curr--]]==1);\n        if (!ans) keep[query[i].id]=1;\n    }\n    for (RE int i=1;i<=q;i++) printf(keep[i] ? \"Yes\\n\":\"No\\n\");\n    return 0;\n}\n```",
        "postTime": 1502543834,
        "uid": 11773,
        "name": "NaVi_Awson",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u4e00\u9053\u533a\u95f4\u8be2\u95ee\u7684~~\u6c34~~\u9898\uff0c\u9898\u610f\u5341\u5206\u7b80\u6d01\u3002\u9898\u76ee\u8f6c\u6362\u4e00\u4e0b\u5c31\u662f\u5bf9\u6bcf\u4e2aLi\u5230Ri\u7684\u533a\u95f4\u90fd\u4fbf\u5229\u4e00\u904d\uff0c\u770b\u770b\u533a\u95f4\u5185\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6570\uff0c\u6570\u91cf\u662f\u5426\u7b49\u4e8eR-L+1\u3002\n\n# 1.\u66b4\u529b\n\n  \u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bf4\uff0c\u66b4\u529b\u60f3\u6cd5\u8fd8\u662f\u5f88\u5bb9\u6613\u60f3\u5230\u7684\uff0c\u6bcf\u4e2a\u533a\u95f4\u90fd\u4fbf\u5229\u4e00\u904d\u5c31\u884c\u4e86\uff0c\u4f46\u590d\u6742\u5ea6\u80af\u5b9a\u5403\u4e0d\u6d88\u7684\uff0c\u4eb2\u6d4b\uff1a50 \uff08\u52a0\u6c27\u6c14\uff1a60\uff09\n  \n\u4ee3\u7801\uff1a \uff08\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\uff09\n\n```\n#include<bits/stdc++.h>\n#define maxn 100005\nusing namespace std;\nint n,Q,L,R,tot,a[maxn];\nbool vis[maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nint main(){\n\tn=read(),Q=read();\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tfor (int i=1;i<=Q;i++){\n\t\tL=read(),R=read();tot=0;\n\t\tmemset(vis,0,sizeof vis);\n\t\tfor (int j=L;j<=R;j++) if (!vis[a[j]]) vis[a[j]]=1,tot++;\n\t    if (tot^R-L+1) printf(\"No\\n\");\n\t    else printf(\"Yes\\n\");\n\t}\n\treturn 0;\n}\n```\n------------\n# 2.\u83ab\u961f \uff08\u4f18\u96c5\u7684\u66b4\u529b\uff09\n\n\u8ba4\u771f\u601d\u8003\u540e\uff0c\u6211\u4eec\u80af\u5b9a\u6709\u4e00\u4e2a~~\u7384\u5b66~~\u7684\u60f3\u6cd5\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u6bcf\u6b21\u90fd\u91cd\u65b0\u4fbf\u5229\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u53ef\u4ee5\u628a\u5b83\u4eec\u5173\u8054\u8d77\u6765\uff08\u4e5f\u5c31\u662f\u8bf4\u8fd9\u6b21\u7684\u7ed3\u679c\u53ef\u4ee5\u5728\u4e0a\u4e00\u6b21\u7ed3\u679c\u7684\u57fa\u7840\u4e0a\u4fee\u6539\uff09\u3002\n\n\u8fd9\u4e2a\u64cd\u4f5c\u8be5\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\n\n\u6211\u4eec\u7528\u4e24\u4e2a\u6307\u9488L\u548cR\u6765\u8868\u793a\u6211\u4eec\u5f53\u524d\u5df2\u77e5\u8fd9\u4e2a\u533a\u95f4\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u6570tot\u3002\u5f53\u6211\u4eec\u7684L\u548cR\u79fb\u52a8\u5230\u95ee\u9898\u4e2d\u7684Li\u548cRi\u65f6\uff0ctot\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u6709\u79fb\u52a8\u8fd9\u4e24\u4e2a\u6307\u9488L\u548cR\u5c31\u80fd\u5b9e\u73b0\u533a\u95f4\u8be2\u95ee\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0cL\u548cR\u5c31\u5f80\u95ee\u9898\u4e2d\u7684Li\u548cRi\u79fb\u52a8\uff0c\u65b0\u52a0\u4e00\u4e2a\u6570\u5c31\u5224\u65ad\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u51fa\u73b0\u4e86tot+1\u3002\n\n\u4e0d\u4f1a\u83ab\u961f\u7684\u770b\u7740\u91cc\uff08\u542b\u83ab\u961f\u90e8\u5206\u4f18\u5316\uff09\uff1a[\u83ab\u961f\u5165\u95e8\u53ca\u4f18\u5316](https://www.cnblogs.com/WAMonster/p/10118934.html)\n\n\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\n#define maxn 1000005\nusing namespace std;\nint n,m,a[maxn],L,R,x,y,z,ans[maxn],tot,num,now,s[maxn],vis[maxn],si;\nstruct lc{\n\tint L,R,id;\n\tbool operator <(const lc b)const{return s[L]==s[b.L]?R<b.R:s[L]<s[b.L];}\n}Q[maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\ninline void Del(int x){vis[a[x]]--;if (!vis[a[x]]) now--;}\ninline void add(int x){vis[a[x]]++;if (vis[a[x]]==1) now++;}\nint main(){\n\tn=read(),m=read();\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tfor (int i=1;i<=m;i++) Q[i].L=read(),Q[i].R=read(),Q[i].id=i;\n\tsi=sqrt(n);\n\tnum=ceil((double)n/si);\n\tfor (int i=1;i<=num;i++)\n\tfor (int j=(i-1)*si+1;j<=i*si;j++) s[j]=i;\n\tsort(Q+1,Q+m+1);\n\tfor (int i=1;i<=m;i++){\n\t\twhile(L<Q[i].L) Del(L++);\n        while(L>Q[i].L) add(--L);\n        while(R<Q[i].R) add(++R);\n        while(R>Q[i].R) Del(R--);\n        if (now==Q[i].R-Q[i].L+1) ans[Q[i].id]=1;\n\t}\n\tfor (int i=1;i<=m;i++){\n\tif (!ans[i]) printf(\"No\\n\");\n\telse printf(\"Yes\\n\");\n}\n\treturn 0;\n}\n```\n\n\n------------\n# 3.\u7384\u5b66\u66b4\u529b\uff08\u6bd4\u83ab\u961f\u8fd8\u5feb\uff09\n\n\u6211\u4eec\u518d\u601d\u8003\u4e00\u4e0b\uff0c\u9898\u76ee\u53ef\u4ee5\u8f6c\u6362\u4e3a\u5bf9\u4e8eLi\u5230Ri\u7684\u533a\u95f4\u7684\u6bcf\u4e00\u4e2a\u6570\uff0c\u548c\u4ed6\u4e00\u6837\u7684\u6570\u7684\u4f4d\u7f6e\u662f\u5426>=Li\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u63a5\u4e0b\u6765\u5c31\u5f88\u7b80\u5355\u4e86\u3002lst[i]\u8868\u793a\u4e0a\u4e00\u4e2a\u548ca[i]\u4e00\u6837\u7684\u6570\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\n\u6211\u4eec\u53ea\u8981o(n)\u9884\u5904\u7406\u4e00\u904dlst\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e2ai\u518d\u8bb0\u5f55\u4e00\u4e0b1\u5230i\u6700\u5927\u7684\u90a3\u4e2alst[i]\u5c31\u80fd\u505a\u5230o(n)\u9884\u5904\u7406\uff0co(1)\u8be2\u95ee\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\n#define maxn 1000005\nusing namespace std;\nint lst[maxn],x,lnk[maxn],n,Max[maxn],Mx,Q,L,R,a[maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile (ch<'0'||ch>'9'){if (ch=='-') f=-f;ch=getchar();}\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\nint main(){\n\tn=read(),Q=read();\n\tfor (int i=1;i<=n;i++){\n\t\tx=read();lst[i]=lnk[x];lnk[x]=i; \n\t\tMx=max(Mx,lst[i]),Max[i]=Mx;\n\t}\n\tfor (int i=1;i<=Q;i++){\n\t\tL=read(),R=read();\n\t\tif (Max[R]>=L) printf(\"No\\n\");\n\t\telse printf(\"Yes\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1564033639,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c45\u7136\u6ca1\u6709p\u7684\u83ab\u961f\u9898\u89e3\u54e6\uff01\u90a3\u6211\u6765\u6c34\u4e00\u53d1\u5457\n\n--------------------------------\u5206\u5272\u7ebf-------------------------\n\n\u9898\u76ee\u63cf\u8ff0\uff1a\u6c42[l,r]\u4e2d\u6570\u5b57\u662f\u5426\u4e92\u4e0d\u76f8\u540c\n\n\u9898\u76ee\u601d\u8def\uff1a\u53d1\u73b0\u9898\u76ee\u4f3c\u4e4e\u6ca1\u8bf4\u5f3a\u5236\u5728\u7ebf\u54e6\uff0c\u90a3\u5c31\u53ef\u4ee5\u79bb\u7ebf\u4e86\u54ce\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\n\u83ab\u961f\n----\n\u6765\u6c34\u6389\u8fd9\u9053\u9898\u554a\n\n\u8fd9\u9053\u9898\u662f\u6700\u57fa\u7840\u4e0d\u5e26\u4fee\u7684\u5e8f\u5217\u83ab\u961f\uff0c\u9002\u5408\u83ab\u961f\u521d\u5b66\u8005\n\n\u6709\u5173\u83ab\u961f\u53ef\u4ee5\u53c2\u89c1\u6211\u8fd9\u9053\u9898\u7684\u9898\u89e3:\n\n\u5c0fb\u7684\u8be2\u95ee\nhttps://www.luogu.org/problemnew/show/P2709\n\n\u4ee3\u7801\uff1a\n```pascal\nvar\n  n,k,m,l,r,j,i,p:longint;\n  ans:int64;\n  a,x,y,c,b,f:array[0..500005] of longint;\nprocedure sort(l,r:longint);\n      var\n         i,j,xx,yy,yyy:longint;\n      begin\n         i:=l;\n         j:=r;\n         xx:=x[(l+r) div 2];\n         yy:=y[(l+r) div 2];//\u591a\u5173\u952e\u5b57\u6392\u5e8f\n         repeat\n           if i div p=j div p then//\u5224\u65adi\uff0cj\u662f\u5426\u5728\u540c\u4e00\u5757\u5185\n           begin\n           while (x[i]<xx) do\n            inc(i);\n           while (xx<x[j]) do\n            dec(j);\n           if not(i>j) then//\u522b\u5fd8\u8bb0\u4ea4\u63623\u4e2a\u800c\u4e0d\u662f1\u4e2a\u6570\u7ec4\n             begin\n                yyy:=x[i];\n                x[i]:=x[j];\n                x[j]:=yyy;\n                yyy:=y[i];\n                y[i]:=y[j];\n                y[j]:=yyy;\n                yyy:=c[i];\n                c[i]:=c[j];\n                c[j]:=yyy;\n                inc(i);\n                j:=j-1;\n             end;\n           end else//\u8fd9\u90e8\u5206\u4f5c\u7528\u540c\u4e0a\n           begin\n             while (y[i]<yy) do\n            inc(i);\n           while (yy<y[j]) do\n            dec(j);\n           if not(i>j) then\n             begin\n                yyy:=x[i];\n                x[i]:=x[j];\n                x[j]:=yyy;\n                yyy:=y[i];\n                y[i]:=y[j];\n                y[j]:=yyy;\n                yyy:=c[i];\n                c[i]:=c[j];\n                c[j]:=yyy;\n                inc(i);\n                j:=j-1;\n             end;\n           end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\nbegin\n  readln(n,m);\n  p:=trunc(sqrt(n));//\u628a\u5e8f\u5217\u5206\u6210sqrt(n)\u5757\n  for i:=1 to n do read(a[i]);\n  for i:=1 to m do\n  begin\n    readln(x[i],y[i]);\n    c[i]:=i;//\u83ab\u961f\u4f5c\u4e3a\u79bb\u7ebf\u7b97\u6cd5\uff0c\u5f53\u7136\u8981\u4fdd\u5b58\u6bcf\u4e2a\u8be2\u95ee\u5566\n  end;\n  sort(1,m);\n  l:=1;\n  r:=0;\n  ans:=0;\n  fillchar(b,sizeof(b),0);\n  for i:=1 to m do\n  begin//\u83ab\u961f\u57fa\u672c\u601d\u60f3(\u672c\u4eba\u559c\u6b22while)\n    while l>x[i] do begin dec(l); inc(b[a[l]]); if b[a[l]]=1 then inc(ans); end;\n    while r<y[i] do begin inc(r); inc(b[a[r]]); if b[a[r]]=1 then inc(ans); end;\n    while l<x[i] do begin dec(b[a[l]]); if b[a[l]]=0 then dec(ans); inc(l); end;\n    while r>y[i] do begin dec(b[a[r]]); if b[a[r]]=0 then dec(ans); dec(r); end;\n    if ans=r-l+1 then f[c[i]]:=1  else f[c[i]]:=0;//\u7528f\u6570\u7ec4\u8bb0\u5f55\u8bfb\u8fdb\u6765\u65f6\u7b2c1-n\u4e2a\u7b54\u6848\n  end;\n  for i:=1 to m do if f[i]=1 then writeln('Yes') else writeln('No');\nend.\n```\n\n\u6700\u540e\u518d\u7ed9\u5927\u5bb6\u63a8\u8350\u51e0\u9053\u597d\u9898\uff1ap2709\uff0cp1494\n\n\n\n\n\n",
        "postTime": 1545458115,
        "uid": 10601,
        "name": "shuiyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "## \u5176\u5b9e\u8fd9\u4e2a\u9898\u662f\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6765\u4f18\u5316\u7684\n### \u800c\u4e14\u4f3c\u4e4e\u8fd8\u6bd4\u7ebf\u6bb5\u6811\u7684\u505a\u6cd5\u8981\u5feb.....\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\u5bf9\u4e8e\u6bcf\u6b21\u6211\u4eec\u7ed9\u51fa\u7684\u6570\u5217\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u5b83\u6bcf\u4e00\u4e2a\u5143\u7d20\u6240\u5728\u7684\u4f4d\u7f6e\u4e0e\u503c\n\n```cpp\nstruct a{\n    int num;//\u5143\u7d20\u7684\u4f4d\u7f6e\n\tint ll;//\u5143\u7d20\u7684\u503c\n}point[100009];\n```\n\u6211\u4eec\u518d\u5bf9point\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a\u6211\u4eec\u5b58\u50a8\u4e86point\u4e4b\u524d\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\uff0c\u5728\u6392\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u4ecd\u65e7\u53ef\u4ee5\u627e\u5230point\u6240\u5728\u7684\u4f4d\u7f6e\u3002\uff08\u6ce8\u610f\u81ea\u7f16\u6bd4\u8f83\u7ed3\u6784\u4f53\u6392\u5e8f\u51fd\u6570\u65f6\uff0c\u5e94\u4ee5ll\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cnum\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u5347\u5e8f\u6392\u5e8f\uff09\u3002\n```cpp\nint comp(const a & x,const a & y){\n\tif(x.ll==y.ll)\n\treturn x.num<y.num;\n\treturn x.ll<y.ll;\n}\n```\n\u5e76\u4e14\uff0c\u5728\u6392\u5e8f\u4e4b\u540e\uff0c\u76f8\u540c\u7684\u5143\u7d20\u4f1a\u88ab\u6392\u5e8f\u5230\u4e00\u8d77\uff0c\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u628a\u76f8\u540c\u5143\u7d20\u7684\u5e8f\u53f7\u5b58\u50a8\u8fdbsame\u3002\u5982\u679cpoint[i].ll==point[i+1].ll\u7684\u8bdd\uff0c\u5c31\u628apoint[i].num\u5b58\u8fdbsame\u7684\u7b2c1\u5217\uff0c\u628apoint[i+1]\u5b58\u8fdbsame\u7684\u7b2c\u4e8c\u5217\u3002\n\n\u6700\u540e\u5728\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u904d\u5386same\u6570\u7ec4\u5e76\u5224\u65ad\u8be2\u95ee\u7684\u5de6\u7aef\u70b9l\u2014\u2014\u53f3\u7aef\u70b9r\u662f\u5426\u8986\u76d6\u4e86same[i][0]\u2014\u2014same[i][1]\u8fd9\u4e2a\u533a\u95f4\u5373\u53ef\u3002\u5982\u679c\u8986\u76d6\u4e86\uff0c\u5219\u5fc5\u6709\u76f8\u540c\u5143\u7d20\uff1b\u6ca1\u6709\u8986\u76d6\uff0c\u5219\u8bf4\u660e\u6ca1\u6709\u76f8\u540c\u5143\u7d20\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std; \nint n;\nint q;\nstruct a{\n    int num;\n\tint ll;\t \n}point[100009];\nint comp(const a & x,const a & y){\n\tif(x.ll==y.ll)\n\treturn x.num<y.num;\n\treturn x.ll<y.ll;\n}\nint same[50000][2];//\u7cbe\u534e\nint main() {\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<=n;i++){\n\t    scanf(\"%d\",&point[i].ll);\n\t\tpoint[i].num=i;\t \n\t}\n\tsort(point+1,point+n+1,comp);\n\tint w=1;\n\tfor(int i=1;i<n;i++){\n\t\tif(point[i].ll==point[i+1].ll){\n\t\t\tsame[w][0]=point[i].num;\n\t\t\tsame[w][1]=point[i+1].num;\n\t\t\tw++;//\u4ece1\u5f00\u59cb\u5b58\n\t\t}\n\t}\n\tint l,r;//\u67e5\u8be2\u7684\u5de6\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\n\tfor(int i=1;i<=q;i++){\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tbool flag=true;\n\t\tfor(int j=1;j<=w;j++){\n\t\t\tif(l<=same[j][0]&&r>=same[j][1]){//\u8986\u76d6\u4e86same\u4e2d\u7684\u4efb\u610f                 printf(\"No\\n\");         //\u4e00\u4e2a\u533a\u95f4\u5219\u8bf4\u660e\u6709\u76f8\u540c\u5143\u7d20\n\t\t\t\tflag=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==true)\n\t\t\tprintf(\"Yes\\n\");//\u53cd\u4e4b\u5219\u6ca1\u6709\u76f8\u540c\u5143\u7d20\n\t}\n\treturn 0;\n}\n```\n\u5b9e\u6d4b 237ms\u901a\u8fc7\uff0c\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684\u3002",
        "postTime": 1539743337,
        "uid": 120259,
        "name": "\u57fa\u8f85\u8fea\u5c31\u662f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u535a\u5ba2\u4e86\u89e3\u4e00\u4e0b[](https://www.cnblogs.com/rmy020718/p/9439657.html)https://www.cnblogs.com/rmy020718/p/9439657.html\n\n\u4e86\u89e3\u8fc7\u83ab\u961f\u7684\u4eba\u5e94\u8be5\u90fd\u6e05\u695a\uff0c\u83ab\u961f\u662f\u4e00\u4e2a\u4f18\u5316\u7684\u66b4\u529b\uff0c\u53ef\u4ee5\u5728\u76f8\u5bf9\u66b4\u529b\u6bd4\u8f83\u4f18\u7684\u65f6\u95f4\u4e2d\uff0c\u6c42\u51fa\u4e00\u6bb5\u5e8f\u5217\u5185\u7684\u67d0\u4e9b\u6027\u8d28(\u4f8b:\u6570\u5b57\u7684\u79cd\u7c7b)\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u660e\u663e\u662f\u4e00\u9053\u6a21\u677f\u9898\u4e86\uff0c\u5728l,r(\u5de6\u53f3\u6bb5\u70b9)\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bb0\u5f55\u6570\u5b57\u7684\u79cd\u7c7b\uff0c\u82e5\u79cd\u7c7b\u6570\u7b49\u4e8eR-L+1,\u90a3\u4e48\u8868\u660e\u6ca1\u6709\u91cd\u590d\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#define N int(1e5+2)\n#define M int(1e5+2)\nusing namespace std;\nstruct ahah{\n    int L,R,p,f;\n}ask[N];\nint answer,n,q,a[N],cnt[N],ans[N],k;\nbool cmp(ahah a,ahah b){ return a.p<b.p; }\nbool comp(ahah a,ahah b){ return a.L/k==b.L/k?a.R<b.R:a.L<b.L; }\nvoid remove(int pos){ if(--cnt[a[pos]]==0)answer--; }\nvoid add(int pos){ if(++cnt[a[pos]]==1)answer++; }\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    k=sqrt(n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n    for(int i=1;i<=q;i++)scanf(\"%d%d\",&ask[i].L,&ask[i].R),ask[i].p=i;\n    sort(ask+1,ask+1+q,comp);\n    int curl=0,curr=0;\n    for(int i=1;i<=q;i++)\n    {\n        int L=ask[i].L,R=ask[i].R;\n        while(curl<L)remove(curl++);\n        while(curl>L)add(--curl);\n        while(curr<R)add(++curr);\n        while(curr>R)remove(curr--);\n        answer==R-L+1?ans[ask[i].p]=1:ans[ask[i].p]=0;\n    }\n    for(int i=1;i<=q;i++)ans[i]==1?printf(\"Yes\\n\"):printf(\"No\\n\");\n}\n```",
        "postTime": 1533782938,
        "uid": 61727,
        "name": "Manjusaka\u4e36\u68a6\u5bd2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u5148\u628a\u95ee\u9898\u53d8\u6210\u6c42\u533a\u95f4\u5185\u4e0d\u540c\u6570\u6570\u91cf\u662f\u5426\u7b49\u4e8e\u533a\u95f4\u957f\u5ea6\u3002\r\n\r\n\u8003\u8651\u5206\u5757\u3002\r\n\r\n\u53d1\u73b0\u5bf9\u4e8e\u6563\u5757\u53ef\u4ee5\u66b4\u529b\u67e5\u8be2\uff0c\u73b0\u5728\u7684\u95ee\u9898\u662f\u600e\u4e48\u5feb\u901f\u67e5\u8be2\u8fde\u7eed\u7684\u6574\u5757\u3002\r\n\r\n\u7136\u540e\u5176\u5b9e\u6211\u4eec\u53d1\u73b0\u56e0\u4e3a\u53ea\u8981\u8bb0\u5f55\u6bcf\u4e2a\u6570\u662f\u5426\u51fa\u73b0\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528 bitset \u6765\u538b\u7f29\u5355\u4e2a\u5757\u5185\u7684\u4fe1\u606f\u3002\r\n\r\n\u4f46\u662f\u67e5\u8be2\u7684\u65f6\u5019\u5408\u5e76 $\\sqrt n$ \u4e2a bitset \u4e0d\u73b0\u5b9e\uff0c\u6240\u4ee5\u8003\u8651 **ST \u8868**\u3002\r\n\r\n\u663e\u7136\uff0c\u662f\u5426\u51fa\u73b0\u8fd9\u4e2a\u4fe1\u606f\u662f\u53ef\u91cd\u590d\u8d21\u732e\u7684\u3002\r\n\r\n\u90a3\u73b0\u5728\u53d1\u73b0\u5c31\u53ea\u9700\u8981\u5728\u9884\u5904\u7406\u65f6\u5408\u5e76 $\\sqrt n \\log \\sqrt n$ \u4e2a bitset \u4ee5\u53ca\u5728\u67e5\u8be2\u65f6\u6bcf\u6b21\u5408\u5e76\u4e00\u4e2a bitset \u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n\u90a3\u4e48\u590d\u6742\u5ea6\u5c31\u662f $O(n \\sqrt n \\times \\frac{\\log \\sqrt n}{w} + \\frac{n \\times q}{w})$\u3002\r\n\r\n\u5361\u5361\u5e38\u53ef\u4ee5\u8fc7\u3002\r\n\r\n\u867d\u7136\u8fd9\u4e2a\u7b97\u6cd5\u867d\u7136\u5728\u8fd9\u4e2a\u9898\u76ee\u4e0a\u65f6\u95f4\u5f88\u52a3\uff0c\u4f46\u662f\u53ef\u62d3\u5c55\u6027\u5f88\u5f3a\uff0c\u6bd4\u5982\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u89e3\u51b3\u4e24\u4e2a\u533a\u95f4\u4e2d\u51fa\u73b0\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u6570\u7684\u95ee\u9898\u3002\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nnamespace IO{\r\n\tconst int SIZE=1<<21;\r\n\tstatic char ibuf[SIZE],obuf[SIZE],*iS,*iT,*oS=obuf,*oT=oS+SIZE-1;\r\n    int qr;\r\n    char qu[55],c;\r\n    bool f;\r\n\t#define getchar() (IO::iS==IO::iT?(IO::iT=(IO::iS=IO::ibuf)+fread(IO::ibuf,1,IO::SIZE,stdin),(IO::iS==IO::iT?EOF:*IO::iS++)):*IO::iS++)\r\n\t#define putchar(x) *IO::oS++=x,IO::oS==IO::oT?flush():0\r\n\t#define flush() fwrite(IO::obuf,1,IO::oS-IO::obuf,stdout),IO::oS=IO::obuf\r\n\t#define puts(x) IO::Puts(x)\r\n\ttemplate<typename T>\r\n    inline void read(T&x){\r\n    \tfor(f=1,c=getchar();c<48||c>57;c=getchar())f^=c=='-';\r\n    \tfor(x=0;c<=57&&c>=48;c=getchar()) x=(x<<1)+(x<<3)+(c&15); \r\n    \tx=f?x:-x;\r\n    }\r\n    template<typename T>\r\n    inline void write(T x){\r\n        if(!x) putchar(48); if(x<0) putchar('-'),x=-x;\r\n        while(x) qu[++qr]=x%10^48,x/=10;\r\n        while(qr) putchar(qu[qr--]);\r\n    }\r\n    inline void Puts(const char*s){\r\n    \tfor(int i=0;s[i];i++)\r\n\t\t\tputchar(s[i]);\r\n\t\tputchar('\\n');\r\n\t}\r\n\tstruct Flusher_{~Flusher_(){flush();}}io_flusher_;\r\n}\r\nusing IO::read;\r\nusing IO::write;\r\nconst int B = 318;\r\nconst int maxn = 1e5+13;\r\nbitset<maxn> st[320][10];\r\nint a[maxn],n,q;\r\ninline void init(){\r\n    for(int i=1;i<=n;i=-~i){\r\n        st[(i-1)/B+1][0][a[i]]=1;\r\n    }\r\n    for(int j=1;j<=9;j=-~j)\r\n        for(int i=1;i+(1<<j)-1<=318;i=-~i)\r\n            st[i][j]=st[i][j-1]|st[i+(1<<(j-1))][j-1];\r\n}\r\nbitset<maxn> ans;\r\ninline void query(int l,int r){\r\n    int bl=(l-1)/B+1;\r\n    int br=(r-1)/B+1;\r\n    if(bl==br){\r\n        for(int i=l;i<=r;i=-~i){\r\n            ans[a[i]]=1;\r\n        }\r\n        return ;\r\n    }\r\n    if(br!=bl+1){\r\n        int k=log2((br-1)-(bl+1)+1);\r\n        ans|=(st[bl+1][k]|st[(br-1)-(1<<k)+1][k]);\r\n    }\r\n    for(int i=l;i<=bl*B;i=-~i){\r\n        ans[a[i]]=1;\r\n    }\r\n    for(int i=r;i>=(br-1)*B+1;--i){\r\n        ans[a[i]]=1;\r\n    }\r\n}\r\nint tot;\r\nint main(){\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    read(n);\r\n    read(q);\r\n    for(int i=1;i<=n;i++){\r\n        read(a[i]);\r\n    }\r\n    init();\r\n    for(int i=1;i<=q;i++){\r\n        int l,r;\r\n        read(l);\r\n        read(r);\r\n        ans.reset();\r\n        query(l,r);\r\n        if(ans.count()==(r-l+1)){\r\n            putchar('Y');\r\n            putchar('e');\r\n            putchar('s');\r\n            putchar('\\n');\r\n        }\r\n        else{\r\n            putchar('N');\r\n            putchar('o');\r\n            putchar('\\n');\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n",
        "postTime": 1685150789,
        "uid": 520748,
        "name": "_ChiFAN_",
        "ccfLevel": 4,
        "title": "P3901 \u5206\u5757\u89e3\u6cd5"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff0c\u6240\u4ee5\u83ab\u961f\u662f\u53ef\u505a\u7684\u3002\n\n---\n\n\u9898\u76ee\u7ed9\u51fa $Q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u7ec4\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u4e4b\u95f4\u7684\u6570\u662f\u5426\u5404\u4e0d\u76f8\u540c\u3002\n\n\u53ef\u4ee5\u5c06\u9898\u76ee\u8f6c\u5316\u4e3a\u5728\u533a\u95f4 $[l,r]$ \u4e2d\uff0c\u6070\u597d\u51fa\u73b0\u4e86 $r-l+1$ \u4e2a\u6570\u3002\n\n\u7528 $cnt_i$ \u8868\u793a $i$ \u51fa\u73b0\u7684\u6b21\u6570\uff0c$num$ \u8868\u793a\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u6570\u5b57\u3002\n\n\u5728\u79fb\u52a8\u5de6\u53f3\u7aef\u70b9\u7684\u65f6\u5019\uff0c\u5982\u679c $cnt_i=0$ \u8bc1\u660e\u8be5\u533a\u95f4\u6ca1\u6709\u6570\u5b57 $i$ \u51fa\u73b0\uff0c$num$ \u5c31\u53ef\u4ee5\u51cf\u4e00\u3002\n\n\u6700\u540e\u53ea\u8981\u6bd4\u8f83 $num$ \u548c $r-l+1$ \u662f\u5426\u76f8\u7b49\u3002\u76f8\u7b49\u5373\u4ee3\u8868\u6bcf\u4e2a\u6570\u5404\u4e0d\u76f8\u540c\uff0c\u53cd\u4e4b\u5219\u53cd\u3002\n\n---\n\n\u63d2\u4e00\u4e2a\u548c\u9898\u76ee\u6ca1\u6709\u592a\u5927\u5173\u7cfb\u7684\u8bdd\uff0c\u5728\u6392\u5e8f\u65f6\u6309\u7167\u5757\u7684\u5947\u5076\u6027\u6392\u5e8f\u53ef\u4ee5\u5feb\u5f88\u591a\uff0c\u4f46\u662f\u539f\u56e0\u7384\u5b66 ~~\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48~~\u3002\n\n---\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define rint register int\nusing namespace std;\ninline int read(){\n    int s=0,f=1; char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=0;c=getchar();}\n    while(c>='0'&&c<='9') s=(s<<1)+(s<<3)+(c^48),c=getchar();\n    return f?s:-s;\n}\nint n,Q,k[100010],cnt[100010],num,ks;\nint a[100010],ans[100010];\nstruct qus{\n    int l,r,id;\n    friend bool operator <(qus a,qus b){\n        return k[a.l]^k[b.l]?k[a.l]<k[b.l]:(k[a.l]&1?a.r<b.r:a.r>b.r);\n    }\n}q[100010];\nvoid Add(int pos){\n    if(!cnt[a[pos]]) ++num;\n    ++cnt[a[pos]];\n}\nvoid Del(int pos){\n    --cnt[a[pos]];\n    if(!cnt[a[pos]]) --num;\n}\nint main(){\n    n=read(); Q=read(); ks=sqrt(n);\n    for(rint i=1;i<=n;++i) a[i]=read();\n    for(rint i=1;i<=n;++i) k[i]=i/ks+1;\n    for(rint i=1;i<=Q;++i){\n        q[i].l=read();\n        q[i].r=read();\n        q[i].id=i;\n    }\n    sort(q+1,q+1+Q);\n    int L=1,R=0;\n    for(rint i=1;i<=Q;++i){\n        while(q[i].l<L) Add(--L);\n        while(q[i].l>L) Del(L++);\n        while(q[i].r<R) Del(R--);\n        while(q[i].r>R) Add(++R);\n        if(num==q[i].r-q[i].l+1) ans[q[i].id]=1;\n    }\n    for(rint i=1;i<=Q;++i){\n        if(ans[i]) puts(\"Yes\");\n        else puts(\"No\");\n    }\n    return 0;\n}\n```\n\n\u7801\u98ce\u5f88\u4e11\uff0c\u89c1\u8c05![QVJIZ6DSFAY9Y0PP@Q_2_8R.gif](https://i.loli.net/2020/04/05/2oPIfqNYSTHRBVk.gif)",
        "postTime": 1586080002,
        "uid": 187259,
        "name": "v\u679c\u5b9dv",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "$$\\color{navy}\\text{\u521a\u5b66\u83ab\u961f\uff0c\u7565\u6709\u611f\u89e6\uff0c\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u89e3\u51b3\u4e00\u4e9b\u521d\u5b66\u8005\u7684\u7591\u95ee}$$\n\n\n------------\n\n>### \u83ab\u961f\u7b97\u6cd5`\uff08Mo's Algorithm\uff09`\n\n>\u4f17\u6240\u5468\u77e5\uff0c\u8fd9\u662f\u4e00\u79cd~~\u7384\u5b66\u7684\u66b4\u529b\u9a97\u5206~~\u533a\u95f4\u64cd\u4f5c\u7b97\u6cd5\n\n>\u666e\u901a\u83ab\u961f\u662f\u4e00\u79cd\u79bb\u7ebf\u7b97\u6cd5\uff0c\u8981\u5904\u7406\u66f4\u9ad8\u7aef\u7684\u95ee\u9898\u6211\u4eec\u8fd8\u9700\u8981\u5e26\u4fee\u83ab\u961f/\u6811\u4e0a\u83ab\u961f\u7b49\u7b49\uff0c\u8fd9\u91cc\u5148\u4e0d\u8c08\n\n>#### \u524d\u7f6e\u77e5\u8bc6\uff1a\u5206\u5757\uff0c~~\u4e0d\u4f1a\u7684\u53ef\u4ee5\u4e0ab\u7ad9\u5eb7\u5eb7~~\n\n------------\n\n\u5148\u770b\u672c\u9898\uff1a\n\n\u5df2\u77e5\u4e00\u4e2a\u5e8f\u5217\uff0c\u7ed9\u51faQ\u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u533a\u95f4`[L\uff0cR]`\u6240\u6709\u6570\u662f\u5426\u4e92\u4e0d\u76f8\u540c\uff0c\u5982\u679c\u662f\u8f93\u51fa`\u201cYes\u201d`\uff0c\u5426\u5219\u8f93\u51fa`\u201cNo\u201d`\u3002\n\n\u5f88\u7b80\u5355\u7684\u66b4\u529b\u601d\u8def\u5c31\u662f\u627e\u51fa\u533a\u95f4`[L\uff0cR]`\u6240\u6709\u4e92\u4e0d\u76f8\u540c\u7684\u6570\u7684\u4e2a\u6570k\uff0c\u63a5\u7740\u5224\u65adk\u662f\u5426\u7b49\u4e8e`R-L+1`\u5373\u53ef\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u83ab\u961f\u88f8\u9898\u4e86\u3002\n\n\n------------\n\n\u83ab\u961f\u7684\u5904\u7406\u65b9\u6cd5\uff1a\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u5982\u56fe\uff0c\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5e8f\u5217\uff0c\u6211\u4eec\u5df2\u77e5\u4e00\u4e2a\u8be2\u95ee\uff1aq[i].l=3\uff0cq[i].r=7\uff0c\u6211\u4eec\u60f3\u77e5\u9053\u533a\u95f4`[3,7]`\u5185\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6570\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/dh63z5gz.png)\n\n\u4e0d\u59a8\u5148\u5b9a\u4e49\u4e00\u4e2aL=1\uff0cR=0\uff0cAns=0\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ot449jxb.png)\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53ea\u9700\u8981\u626b\u4e00\u904d\uff1a\n\n```cpp\ninline void add(int x){\n\tcnt[x]++;\n\tif(cnt[x]==1) Ans++;\n}\ninline void del(int x){\n\tcnt[x]--;\n\tif(cnt[x]==0) Ans--;\n}\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff1a\nwhile(L<q[i].l) del(a[L++]);\nwhile(L>q[i].l) add(a[--L]);\nwhile(R<q[i].r) add(a[++R]);\nwhile(R>q[i].r) del(a[R--]);\nans[q[i].id]=Ans;\n\n```\n\u5982\u679cL\u5c0f\u4e8e\u6240\u8be2\u95ee\u7684q[i].l\u7684\u8bdd\uff0cL\u81ea\u7136\u9700\u8981\u53f3\u79fb\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6xg87n3o.png)\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u65e7L\u5bf9Ans\u7684\u5f71\u54cd\u5c31\u9700\u8981\u88ab\u5220\u53bb\uff0c\u5373\uff1a\n```cpp\n\tdel(a[L++])\n```\n\u800cdel\u51fd\u6570\u7684\u5b9e\u73b0\u4e5f\u5f88\u5bb9\u6613\u7406\u89e3\uff1a\ncnt[x]\u8868\u793a\u7684\u662f\u6570\u5b57x\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u90a3\u4e48cnt[x]--\u5373\u53ef\n\n\u5982\u679ccnt[x]\u7b49\u4e8e0\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u76ee\u524d\u7684`[L\uff0cR]`\u4e2d\u5df2\u7ecf\u6ca1\u6709x\u8fd9\u4e2a\u6570\u4e86\uff0c\u90a3\u4e48Ans--\n\n\u5176\u5b83\u51e0\u4e2a\u548c\u8fd9\u4e2a\u662f\u540c\u6837\u7684\u9053\u7406\uff0c\u7406\u89e3\u4e86\u8fd9\u91cc\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u5904\u7406\u7ed3\u675f\u540e\u5728ans\u6570\u7ec4\u4e2d\u8bb0\u5f55Ans\u5373\u53ef\u3002\n\n## Code\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int M=1e6;\nstruct node{\n\tint l,r,id;\n\tint ll,rr;\n}q[M];\nint a[M],cnt[M],n,m,pos[M],ans[M],L=1,R=0,Ans=0,block;\nbool cmp(const node &x,const node &y){\n\tif(pos[x.l]==pos[y.l]) return x.r>y.r;\n\treturn pos[x.l]<pos[y.l];\n}\n//cmp\u51fd\u6570\u7528\u4e8e\u6392\u5e8f\uff0c\u4e0d\u96be\u5f97\u77e5\uff0c\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u6392\u5e8f\u4e4b\u540e\u7b97\u6cd5\u7684\u626b\u63cf\u6b21\u6570\u4f1a\u5927\u5e45\u964d\u4f4e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u80fd\u76f8\u5e94\u964d\u4f4e\ninline void add(int x){\n\tcnt[x]++;\n\tif(cnt[x]==1) Ans++;\n}\ninline void del(int x){\n\tcnt[x]--;\n\tif(cnt[x]==0) Ans--;\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;\n\tblock=sqrt(n);\n\tfor(register int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t\tpos[i]=i/block;//\u5206\u5757\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\tcin>>q[i].l>>q[i].r;\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tfor(register int i=1;i<=m;i++){\n\t\twhile(L<q[i].l) del(a[L++]);\n\t\twhile(L>q[i].l) add(a[--L]);\n\t\twhile(R<q[i].r) add(a[++R]);\n\t\twhile(R>q[i].r) del(a[R--]);\n\t\tans[q[i].id]=Ans;\n\t\tq[q[i].id].ll=q[i].l;//\u5f97\u51fa\u7b54\u6848\u540e\u4e0d\u8981\u5fd8\u8bb0\u5c06\u5bf9\u5e94\u7684q[i].l/r\u5b58\u50a8\u4ee5\u4fbf\u540e\u7eed\u6bd4\u8f83\n\t\tq[q[i].id].rr=q[i].r;\n\t}\n\tfor(register int i=1;i<=m;i++){\n\t\tif(ans[i]==q[i].rr-q[i].ll+1) cout<<\"Yes\"<<endl;//\u5982\u679cAns=R-L+1\u90a3\u4e48\u8f93\u51faYes\uff0c\u5426\u5219\u8f93\u51faNo\n\t\telse cout<<\"No\"<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573719063,
        "uid": 120285,
        "name": "Avenoir",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5927\u5bb6\u5e94\u8be5\u90fd\u5199\u7684\u662f**\u83ab\u961f**\uff0c\u4e8e\u662f\u6211\u4e5f\u6765\u5199\u4e00\u4e2a**\u83ab\u961f**\u3002\n\n\u8fd9\u4e2a\u9898\u6211\u76f4\u63a5\u7528\u6807\u51c6\u83ab\u961f\uff08\u4e0d\u4f1a\u7684\u53ef\u4ee5\u5de6\u8f6c \u5c0fZ\u7684\u889c\u5b50 \u90a3\u4e2a\u677f\u5b50\u9898\uff09\u7edf\u8ba1\u51fa\u6709\u591a\u5c11\u4e2a\u6570\uff08\u5b58\u5728ans\u6570\u7ec4\u4e2d\uff09\uff0c\u540c\u65f6\u7528tmp[N]\u6570\u7ec4\u5b58\u4e0b\u5de6\u53f3\u7aef\u70b9\u7684\u5dee\u503c(r-l+1)\u3002\u5982\u679c\u8bf4ans[i]=tmp[i];\u5219\u8f93\u51faYes,\u5426\u5219\u8f93\u51faNo.\u601d\u8def\u5e94\u8be5\u633a\u597d\u60f3\u3002\n    \n\u90a3\u4e48\u76f4\u63a5\u4e0a\u4ee3\u7801\u5427\uff1a\n    \n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define N 100005\nusing namespace std;\nstruct query{ll l,r,id,pos;} q[N];\nll a[N],n,m,k,cnt[N],ans[N],sz,tmp[N];\nbool cmp(const query&a,const query&b){\n\treturn a.pos<b.pos||a.pos==b.pos&&a.r>b.r;\n}\nint main(){\n\tcin>>n>>m;\n\tsz=(ll)sqrt(n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d %d\",&q[i].l,&q[i].r); q[i].id=i;\n\t\tq[i].pos=(q[i].l-1)/sz+1;\n\t\ttmp[i]=q[i].r-q[i].l+1;\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tfor(ll i=1,l=1,r=0,res=0;i<=m;i++){\n\t\twhile(l>q[i].l) res+=(++cnt[a[--l]]==1);\n\t\twhile(r<q[i].r) res+=(++cnt[a[++r]]==1);\n\t\twhile(l<q[i].l) res-=(--cnt[a[l++]]==0);\n\t\twhile(r>q[i].r) res-=(--cnt[a[r--]]==0);\n\t\tans[q[i].id]=res;\n\t}\n\tfor(ll i=1;i<=m;i++) tmp[i]==ans[i]? puts(\"Yes\"): puts(\"No\");\n\treturn 0;\n}\n```",
        "postTime": 1570973920,
        "uid": 91204,
        "name": "Fatalis_Lights",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u83ab\u961f\u7684\u4e00\u9053\u677f\u5b50\u9898\uff0c\u53ef\u4ee5\u8bf4\u662f\u76ee\u524d\u770b\u5230\u6700\u7b80\u5355\u7684\u53ef\u4ee5\u7528\u83ab\u961f\u7684\u9898\u4e86\u3002\n\n\u9898\u76ee\u5927\u610f\uff1a\n\n\u73b0\u6709\u6570\u5217A1\u200b,A2\u200b,\u22ef,AN\u200b\uff0cQ \u4e2a\u8be2\u95ee(Li\u200b,Ri\u200b)\uff0c\u5224\u65adALi\u200b,ALi+1\u200b,\u22ef,ARi\u200b \u662f\u5426\u4e92\u4e0d\u76f8\u540c\u3002\uff08\u652f\u6301\u79bb\u7ebf\u8be2\u95ee\uff09\n\n\u9996\u5148\uff0c\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u770b\u5230\u66b4\u529b\u662f\u4e00\u5b9a\u4f1a\u8d85\u65f6\u7684\uff0c\u56e0\u4e3a\u66b4\u529b\u7684\u590d\u6742\u5ea6\u592a\u5927\uff1aO(qn)\u8fd9\u4e2a\u76f4\u63a5TLE\u6ca1\u5546\u91cf\n\n\u6211\u4eec\u8bf4\u4e00\u4e2a\u7a0d\u5fae\u6162\u4e00\u4e9b\u4f46\u662f\u4e5f\u80fd\u8f7b\u677e\u8fc7\u8fd9\u9053\u9898\u7684\u7b97\u6cd5\uff1a\u83ab\u961f\uff08\u4f18\u96c5\u7684\u66b4\u529b\uff09\n\n\u83ab\u961f\u603b\u4f53\u53ef\u4ee5\u5206\u4e3a\u56db\u53e5\u8bdd\uff1a\n\n1.\u5c06\u6574\u4e2a\u5e8f\u5217\u5206\u4e3a\u82e5\u5e72\u4e2a\u5757\uff0c\u6bcf\u4e00\u5757\u5927\u5c0f\u4e00\u822c\u90fd\u4f1a\u5206\u4e3asqrt(n)\u3002\n\n2.\u5bf9\u4e8e\u6574\u4e2a\u8be2\u95ee\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u5de6\u7aef\u70b9\u6240\u5728\u5757\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5\u53f3\u7aef\u70b9\u4f4d\u7f6e\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u90fd\u505a\u5347\u5e8f\u6392\u5e8f\n\n3.\u66b4\u529b\u6c42\u51fa\u7b2c\u4e00\u4e2a\u5757\u7684\u7b54\u6848\n\n4.\u5229\u7528\u5df2\u77e5\u7b54\u6848\u8fdb\u884c\u8f6c\u79fb\n\n\u53ef\u80fd\u5927\u5bb6\u4e0d\u592a\u660e\u767d\u7b2c\u56db\u6761\uff0c\u5728\u8fd9\u91cc\u6211\u6765\u89e3\u91ca\u4e00\u4e0b\uff1a\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\u6765\u8bf4\uff0ca\u7684\u5927\u5c0f\u5e76\u4e0d\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u4e00\u4e2atot\u6570\u7ec4\u6765\u8bb0\u5f55\u533a\u95f4\u6709\u591a\u5c11\u4e2a\u76f8\u540c\u7684\u6570x\uff0c\u518d\u5f00\u4e00\u4e2asum\u8bb0\u5f55\u6709\u591a\u5c11\u4e0d\u540c\u7684\u6570\uff0c\u6bcf\u4e00\u6b21\u8f6c\u79fb\u65f6\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1.\u52a0\u5165\u4e00\u4e2a\u65b0\u5143\u7d20\uff0c\u6211\u4eec\u53ea\u8981\u770b\u4e00\u4e0b\u8fd9\u4e2a\u6570vis\u6570\u7ec4\u662f\u5426\u4e3a0\uff0c\u5982\u679c\u4e3a\u96f6\u90a3\u4e48sum++\n\n2.\u5220\u53bb\u4e00\u4e2a\u65e7\u5143\u7d20\uff0c\u8fd8\u662f\u8981\u770b\u662f\u5426\u4e3a0\uff0c\u6ee1\u8db3\u5219sum--\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e9b\u8f6c\u79fb\u90fd\u662fO(1)\u7684\n\n\u90a3\u4e48\u5173\u4e8e\u83ab\u961f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n1.\u5bf9\u4e8e\u53f3\u7aef\u70b9\u6765\u8bf4\uff0c\u7531\u4e8e\u5728\u540c\u4e00\u5757\u5185\u662f\u9012\u589e\u7684\uff0c\u6bcf\u6b21\u6700\u591a\u8f6c\u79fbn\u6b21\uff0c\u800c\u6709sqrt(n)\u4e2a\u5757\uff0c\u6240\u4ee5\u662fO(nsqrt(n))\n\n2.\u5bf9\u4e8e\u5de6\u7aef\u70b9\u6765\u8bf4\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u5757\u5185\u6700\u591a\u8f6c\u79fbn\u6b21\uff0c\u800c\u6709sqrt(n)\u4e2a\u5757\uff0c\u6240\u4ee5\u4e5f\u662fO(nsqrt(n))\n\n\u6839\u636e\u52a0\u6cd5\u539f\u7406\uff0c\uff08\u8fd9\u91cc\u7701\u7565\u4e86\u5de6\u7aef\u70b9\u8de8\u5757\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u4e0d\u8fc7\u4e5f\u662fnsqrt(n)\u8bf7\u81ea\u884c\u63a8\u5bfc\uff09\u603b\u590d\u6742\u5ea6\u4e3ansqrt(n) \uff08\u8fd9\u4e2a\u662f\u6700\u5927\u590d\u6742\u5ea6\uff0c\u5b9e\u9645\u6bd4\u8fd9\u4e2a\u5feb\u5f97\u591a\u3002\u3002\u3002\uff09\n\n\u597d\u7684\uff0c\u83ab\u961f\u5230\u8fd9\u91cc\u5c31\u8bb2\u5b8c\u4e86\uff01\n\n\u6700\u540e\uff0c\u9644\u4e0a\u672c\u9898\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define maxn 100000\nusing namespace std;\n\nint a[maxn+5];\nstruct query\n{\n    int l,r,id,to;\n    bool judge;\n};\nint sum,appear[maxn+5],ans[maxn+5];\nquery block[maxn+5];\n\nbool cmp(query x,query y)\n{\n    if(x.id==y.id) return x.r<y.r;\n    return x.id<y.id;\n}\nvoid add(int x)\n{\n    if(appear[a[x]]++==0) sum++;\n}\nvoid minus(int x)\n{\n    if(--appear[a[x]]==0) sum--;\n}\nint main()\n{\n    int n,q;\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1; i<=n; i++) scanf(\"%d\",&a[i]);\n    int siz=sqrt(n);\n    for(int i=1; i<=q; i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        block[i].l=x,block[i].r=y;\n        block[i].id=block[i].l/siz;\n        block[i].to=i;\n    }\n    sort(block+1,block+q+1,cmp);\n    for(int i=block[1].l; i<=block[1].r; i++)\n    {\n        if(appear[a[i]]==0) sum++;\n        appear[a[i]]++;\n    }\n    if(sum==block[1].r-block[1].l+1) ans[block[1].to]=1;\n    int Li=block[1].l,Ri=block[1].r;\n    for(int k=2; k<=q; k++)\n    {\n        while(block[k].l<Li) add(--Li);\n        while(block[k].l>Li) minus(Li++);\n        while(block[k].r>Ri) add(++Ri);\n        while(block[k].r<Ri) minus(Ri--);\n        if(sum==block[k].r-block[k].l+1) ans[block[k].to]=1;\n    }\n    for(int i=1; i<=q; i++)\n    {\n        if(ans[i]==1) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1552489127,
        "uid": 133227,
        "name": "\u4e8e\u4e30\u6797",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u5404\u4f4d\u5927\u4f6c\u90fd\u662f\u83ab\u961f/\u7ebf\u6bb5\u6811\uff0c\u672c\u849f\u84bb\u745f\u745f\u53d1\u6296\u2026\u2026\n\n\u601d\u8def\u662f\u5c3a\u53d6\u6cd5\uff0c\u53ef\u4ee5\u505a\u5230$\\Theta(n)$\u9884\u5904\u7406\uff0c$\\Theta(1)$\u67e5\u8be2\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u5c3d\u91cf\u5411\u540e\u62d3\u5c55\uff0c\u76f4\u5230\u4e0d\u80fd\u518d\u62d3\u5c55\u3002\u56e0\u4e3a\u53f3\u7aef\u70b9\u4e0d\u53ef\u80fd\u5f80\u56de\u8d70\uff0c\u56e0\u6b64\u7528\u5c3a\u53d6\u6cd5\u53ef\u4ee5\u505a\u5230$\\Theta(n)$\u7684\u6548\u7387\u3002200ms\u5de6\u53f3\u8fc7\uff0c\u6548\u7387\u8fd8\u4e0d\u9519\u3002\n\n\u4e3a\u4e86\u7528\u4e0abool\u6570\u7ec4\uff0c\u8fd8\u52a0\u4e86\u79bb\u6563\u5316\uff0c\u5b9e\u9645\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(nlogn)$\uff08\u56e0\u4e3a\u6392\u5e8f\uff09\uff0c\u5982\u679c\u7528`bitset<2147483647>`\u53ef\u80fd\u4f1a\u66f4\u5feb\uff08\u9003\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint ai[100005];\nint rnk[100005];\nint used[100005];\nint itsrnk[100005];\nint maxr[100005];\n\nbool cmp(int a,int b)\n{\n\treturn ai[a]<ai[b];\n}\n\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tscanf(\"%d\",ai+i);\n\t}\n\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\trnk[i] = i;\n\t}\n\tsort(rnk+1,rnk+1+n,cmp);\n\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tint& tmp = itsrnk[rnk[i]];\n\t\tif(ai[rnk[i-1]]==ai[rnk[i]])\n\t\t{\n\t\t\trnk[i] = rnk[i-1];\n\t\t}\n\t\ttmp = rnk[i];\n\t}\n\n\t//\u79bb\u6563\u5316\n\n\tint r = 1;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\twhile(r<=n && !used[itsrnk[r]])\n\t\t{\n\t\t\tused[itsrnk[r]] = 1;\n\t\t\t++r;\n\t\t}\n\t\tmaxr[i] = r-1;\n\t\t--used[itsrnk[i]];\n\t}\n    \n    //\u5c3a\u53d6\uff0cmaxr[]\u4ee3\u8868\u4ece\u8be5\u70b9\u5f00\u59cb\u6700\u8fdc\u80fd\u6269\u5c55\u5230\u7684\u957f\u5ea6\n\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tprintf(\"%s\\n\",maxr[l]>=r?\"Yes\":\"No\");\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1544015295,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "##### \u91cd\u65b0\u63d0\u4ea4\u4e00\u4e0b\uff0c\u5e76\u4e0d\u5b58\u5728\u505a\u6cd5\u91cd\u590d\uff0c\u8fd9\u91cc\u7edf\u8ba1\u7b54\u6848\u7528\u7684\u662f\u5bf9\u591a\u4e2a\u8d28\u6570\u53d6\u6a21\u7684\u65b9\u6cd5qwq\n\n---\n\n## Solution\n\n\u770b\u5230\u8fd9\u9898\u53d1\u73b0\u53ef\u4ee5\u7528\u83ab\u961f\u505a\u3002\u7136\u9e45\u7edf\u8ba1\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u5e73\u65b9\u7684\u9898\u5199\u817b\u4e86\uff0c\u800c\u5f00\u6876\u548c\u4f4d\u5411\u91cf\u7684\u505a\u6cd5\u53c8\u5f88\u9ebb\u70e6\uff0c\u4e8e\u662f\u6211\u5c31YY\u4e86\u4e00\u4e2a~~\u66f4\u52a0\u9ebb\u70e6\u7684~~\u505a\u6cd5\u3002\n\n\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u5728\u83ab\u961f\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\u7684\u65f6\u5019\u7ef4\u62a4\u533a\u95f4\u4e2d\u6240\u6709\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u4e4b\u79ef\u3002\u56e0\u4e3a\u4e581\u7b49\u4ef7\u4e8e\u6ca1\u6709\u4e58\uff0c\u6211\u4eec\u5bf9\u4e8e\u6ca1\u6709\u51fa\u73b0\u7684\u5143\u7d20\u4e5f\u4e581\u3002\u8fd9\u4e2a\u503c\u5728\u6307\u9488\u79fb\u52a8\u65f6\u662f\u652f\u6301\u4fee\u6539\u7684\uff1a\u53ea\u8981\u5728\u53bb\u6389\u8be5\u4f4d\u7f6e\u8d21\u732e\u7684\u65f6\u5019\u9664\u6389\u5f53\u524d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u51fa\u73b0\u6b21\u6570$-1$\uff0c\u518d\u4e58\u56de\u53bb\u5373\u53ef\u3002\u589e\u52a0\u4e00\u4e2a\u4f4d\u7f6e\u8d21\u732e\u7684\u65b9\u6cd5\u540c\u7406\u3002\u5f53\u8be2\u95ee\u7684\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u79ef\u4e3a$1$\u65f6\uff0c\u5373\u4e3a\u6ca1\u6709\u51fa\u73b0\u91cd\u590d\uff0c\u5426\u5219\u4e3a\u51fa\u73b0\u91cd\u590d\u3002\n\n\u4f46\u662f\u8003\u8651\u8fd9\u4e48\u505a\u5728\u6781\u7aef\u6570\u636e\uff0c\u6bd4\u5982\u524d$\\frac{n}{2}$\u4e2a\u6570\u51fa\u73b0\u4e86$2$\u6b21\uff0c\u540e$\\frac{n}{2}$\u4e2a\u6570\u6ca1\u6709\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u79ef\u662f$2^{\\frac{n}{2}}$\u6b21\u65b9\uff0c\u663e\u7136\u5b58\u4e0d\u4e0b\u3002\u8fd9\u65f6\u8003\u8651[NOIP2014\u89e3\u65b9\u7a0b](https://www.luogu.org/problemnew/show/P2312)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u591a\u4e2a~~\u5f62\u59821\\*\\*\\*\\*\\*\\*7~~\u7684\u5927\u8d28\u6570\u53d6\u6a21\uff0c\u5f53\u6240\u6709\u53d6\u6a21\u540e\u7684\u7b54\u6848\u90fd\u4e3a$1$\u662f\uff0c\u6211\u4eec\u8ba4\u4e3a\u79ef\u662f$1$\uff0c\u5426\u5219\u79ef\u663e\u7136\u4e0d\u662f$1$\u3002\n\n\u4e8e\u662f\u5148$O(n)$\u7b5b\u4e00\u4e0b\u9006\u5143\u518d\u83ab\u961f\u5c31\u597d\u4e86\u3002\n\n## Code\n\n\u8fd9\u4e2a\u4ee3\u7801\u5199\u7684\u597d\u4e11\u554a\u2026\u2026\u5176\u5b9e\u53ef\u4ee5\u7f8e\u5316\u7f8e\u5316\u7136\u800c\u6211\u61d2\u5f97\u5199\u4e86\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#ifdef ONLINE_JUDGE\n#define puts(o) \\\nputs(\"I am a cheater!\")\n#define freopen(a,b,c)\n#endif\n#define rg register\n#define ci const int\n#define cl const long long\n\ntypedef long long int ll;\n\ntemplate <typename T>\ninline void qr(T &x) {\n\trg char ch=getchar(),lst=' ';\n\twhile((ch > '9') || (ch < '0')) lst=ch,ch=getchar();\n\twhile((ch >= '0') && (ch <= '9')) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\tif(lst == '-') x=-x;\n}\n\nnamespace IO {\n\tchar buf[120];\n}\n\ntemplate <typename T>\ninline void qw(T x,const char aft,const bool pt) {\n\tif(x < 0) {x=-x,putchar('-');}\n\trg int top=0;\n\tdo {IO::buf[++top]=x%10+'0';} while(x/=10);\n\twhile(top) putchar(IO::buf[top--]);\n\tif(pt) putchar(aft);\n}\n\nconst int maxn = 100010;\nconst int ccnt = 6;\n\nint n,q;\nint MU[maxn],belong[maxn],bk[maxn];\nint inv[8][maxn];\n\nstruct Ask {\n\tint l,r,num;\n\tbool ans;\n\tinline bool operator<(const Ask &_others) const {\n\t\tif(belong[this->l] != belong[_others.l]) return this->l < _others.l;\n\t\tif(belong[this->l] & 1) return this->r < _others.r;\n\t\telse return this->r > _others.r;\n\t}\n};\nAsk ask[maxn];\n\ninline bool cmp(const Ask &_a,const Ask &_b) {\n\treturn _a.num < _b.num;\n}\n\nstruct C {\n\tint mod;\n\tint ans;\n\tC(int _x=0) {mod=_x,ans=1;}\n};\nC CU[8];\n\nvoid GetInv(ci,ci);\n\nint main() {\n\tfreopen(\"1.in\",\"r\",stdin);\n\tqr(n);qr(q);\n\tfor(rg int i=1;i<=n;++i) qr(MU[i]);\n\tfor(rg int i=1,sn=sqrt(n);i<=n;++i) belong[i]=i/sn;\n\tfor(rg int i=1;i<=q;++i) {\n\t\tqr(ask[i].l);qr(ask[i].r);ask[i].num=i;\n\t}\n\tCU[1]=C(1000000007);CU[2]=C(1000000009);CU[3]=C(19260817);CU[4]=C(998244353);CU[5]=C(10000007);\n\tfor(int i=1;i<ccnt;++i) GetInv(CU[i].mod,i);\n\tstd::sort(ask+1,ask+1+q);\n\tint prel=ask[1].l,prer=ask[1].l-1;\n#define jd(o) (bk[MU[o]] > 1)\n\tfor(rg int i=1;i<=q;++i) {\n\t\tint l=ask[i].l,r=ask[i].r;\n\t\twhile(prel < l) {\n\t\t\tif(jd(prel)) {\n\t\t\t\tfor(rg int j=1;j<ccnt;++j) CU[j].ans=1ll*CU[j].ans*inv[j][bk[MU[prel]]]%CU[j].mod;\n\t\t\t}\n\t\t\t--bk[MU[prel]];\n\t\t\tif(jd(prel)) {\n\t\t\t\tfor(rg int j=1;j<ccnt;++j) CU[j].ans=1ll*CU[j].ans*bk[MU[prel]]%CU[j].mod;\n\t\t\t}\n\t\t\t++prel;\n\t\t}\n\t\twhile(prel > l) {\n\t\t\t--prel;\n\t\t\tif(jd(prel)) {\n\t\t\t\tfor(rg int j=1;j<ccnt;++j) CU[j].ans=1ll*CU[j].ans*inv[j][bk[MU[prel]]]%CU[j].mod;\n\t\t\t}\n\t\t\t++bk[MU[prel]];\n\t\t\tif(jd(prel)) {\n\t\t\t\tfor(rg int j=1;j<ccnt;++j) CU[j].ans=1ll*CU[j].ans*bk[MU[prel]]%CU[j].mod;\n\t\t\t}\n\t\t}\n\t\twhile(prer < r) {\n\t\t\t++prer;\n\t\t\tif(jd(prer)) {\n\t\t\t\tfor(rg int j=1;j<ccnt;++j) CU[j].ans=1ll*CU[j].ans*inv[j][bk[MU[prer]]]%CU[j].mod;\n\t\t\t}\n\t\t\t++bk[MU[prer]];\n\t\t\tif((jd(prer))) {\n\t\t\t\tfor(rg int j=1;j<ccnt;++j) CU[j].ans=1ll*CU[j].ans*bk[MU[prer]]%CU[j].mod;\n\t\t\t}\n\t\t}\n\t\twhile(prer > r) {\n\t\t\tif(jd(prer)) {\n\t\t\t\tfor(rg int j=1;j<ccnt;++j) CU[j].ans=1ll*CU[j].ans*inv[j][bk[MU[prer]]]%CU[j].mod;\n\t\t\t}\n\t\t\t--bk[MU[prer]];\n\t\t\tif(jd(prer)) {\n\t\t\t\tfor(rg int j=1;j<ccnt;++j) CU[j].ans=1ll*CU[j].ans*bk[MU[prer]]%CU[j].mod;\n\t\t\t}\n\t\t\t--prer;\n\t\t}\n\t\tbool _ans=true;\n\t\tfor(rg int j=1;j<ccnt;++j) if(CU[j].ans != 1) {\n\t\t\t_ans=false;break;\n\t\t}\n\t\task[i].ans=_ans;\n\t}\n#undef jd\n\tstd::sort(ask+1,ask+1+q,cmp);\n\tfor(rg int i=1;i<=q;++i) \n\t\tif(ask[i].ans) puts(\"Yes\");\n\t\telse puts(\"No\");\n\treturn 0;\n}\n\nvoid GetInv(ci mod,ci cur) {\n\tinv[cur][1]=1;\n\tfor(rg int i=2;i<=n;++i) inv[cur][i]=1ll*(mod-mod/i)*inv[cur][mod%i]%mod;\n}\n```\n\n\n\n## Summary\n\n\u8c8c\u4f3c\u8fd9\u6b21\u6ca1\u5565\u597dsummary\u7684",
        "postTime": 1542872199,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "~~\u4e0d\u61c2\u554a\uff0c\u6211\u4e4b\u524d\u63d0\u4ea4\u7684\u5199\u6cd5\u8fd8\u6ca1\u6211\u73b0\u5728\u7684\u5199\u6cd5\u597d\u3002~~\n\n$O(N+M)$\u554a\uff0c\u4f60\u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u70b9\u4e3a\u53f3\u7aef\u70b9\u65f6\uff0c\u5305\u542b\u76f8\u540c\u6570\u5b57\u7684\u5de6\u7aef\u70b9\u6700\u5927\u662f\u591a\u5c11\u5c31\u53ef\u4ee5\u4e86\uff0c\u501f\u9274\u524d\u7f00\u548c\u601d\u60f3\uff1a\n\n\u679a\u4e3e$i$\u3002\n\n\u8f6c\u79fb\u5c31\u662f:$b[i]=max(lmax[a[i]],b[i])$\n\n\u7136\u540e\u66f4\u65b0\uff1a$lmax[a[i]]=i$\n\n\u7136\u540e\u67e5\u8be2\u5c31\u662f\u5224\u65ad$b[r[i]]$\u4e0e$l[i]$\u7684\u5927\u5c0f\u554a\uff0c\u5982\u679c$b[r[i]]$\u662f\u5927\u4e8e$l[i]$\u7684\uff0c\u90a3\u4e48\u8bf4\u660e\u533a\u95f4\u91cc\u4e00\u5b9a\u6709\u76f8\u540c\u7684\u6570\u5b57\u561b\uff0c\u540c\u7406\uff0c\u4e0d\u5305\u62ec\u65f6\uff0c\u56e0\u4e3a$b[i]$\u662f\u6700\u8fd1\u7684\u76f8\u540c\u6570\u5b57\u7684\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u533a\u95f4\u91cc\u9762\u5c31\u6ca1\u6709\u76f8\u540c\u6570\u5b57\u561b\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n,m;\nint a[100006];\nint b[100006];\nint k[100006];\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        b[i]=max(b[i-1],k[a[i]]);\n        k[a[i]]=i;\n    }\n\n    for(int i=1;i<=m;i++)\n    {\n        int l,r;\n        scanf(\"%d%d\",&l,&r);\n        if(b[r]>=l&&b[r]!=0)\n            printf(\"No\\n\");\n        else\n            printf(\"Yes\\n\");\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1539659869,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "## \u9898\u89e3\n\n\u4e00\u770b\u6570\u636e\u548c\u8981\u6c42\uff0c\u5c31\u77e5\u9053\u53ef\u4ee5\u4f7f\u7528\u83ab\u961f\u4e86\u3002\n\n\u83ab\u961f\uff0c\u7531\u56fd\u5bb6\u961f\u961f\u957f\u83ab\u6d9b\u53d1\u660e\uff0c\u6545\u79f0\u83ab\u961f\u3002\n\n\u7b80\u5355\u7684\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u83ab\u961f\n\n* \u662f\u4e00\u4e2a\u79bb\u7ebf\uff0c\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n* \u4e3b\u8981\u67e5\u8be2\u5927\u91cf\u4e0d\u540c\u533a\u95f4\u7684\u4fe1\u606f\u3002\n\n* \u7b97\u6cd5\u7b80\u6790\n  * \u628a\u6240\u6709\u8be2\u95ee\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5 $l$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$r$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u5168\u90e8\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n  * \u6392\u5e8f\u540e\uff0c\u76f8\u90bb\u8be2\u95ee\u7684\u8ddd\u79bb\u4f1a\u53d8\u5c0f\u3002\n  \n  * \u5b9a\u4e49\u5f53\u524d\u8be2\u95ee\u7684\u6307\u9488 $l$ \u548c $r$ \uff0c\u66b4\u529b\u7b97\u51fa\u6392\u5e8f\u540e\u7684\u7b2c\u4e00\u4e2a\u8be2\u95ee\u3002\n  \n  * \u5bf9\u4e8e\u540e\u9762\u7684\u8be2\u95ee\uff0c$l$ \u548c $r$ \u4e00\u4e2a\u4e2a\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u8be2\u95ee\u533a\u95f4\u5e76\u4fee\u6539\u3002\n  \n  * \u671f\u95f4\u8bb0\u5f55\u6bcf\u4e2a\u533a\u95f4\u4fee\u6539\u540e\u7684\u7ed3\u679c\n  \n  * \u8f93\u51fa\u6240\u4ee5\u8be2\u95ee\u7684\u7ed3\u679c\n  \n\u8fd9\u4e5f\u662f\u672c\u9053\u9898\u7684\u601d\u8def\u4e86\u3002\u53ea\u8981\u5f00\u4e00\u4e2a\u8ba1\u6570\u6570\u7ec4\u5373\u53ef\u3002\n\n\u8fd9\u9053\u9898\u4e5f\u662f\u4e00\u9053\u83ab\u961f\u6a21\u677f\u3002\u4ee3\u7801\u5176\u5b9e\u5c31\u662f\u83ab\u961f\u7684\u6700\u7b80\u5f62\u6001\u4e86\u3002\n\n#### \u5c0f\u4f18\u5316\n\n\u8fdb\u884c\u6392\u5e8f\u65f6\u53ef\u4ee5\u6309\u5947\u5076\u6392\u5e8f\u3002\n\n```\nbl = sqrt(n);\n\nbool cmp(Query x, Query y) {\n\treturn x.l / bl ^ y.l / bl ? x.l < y.l : ((x.l / bl) & 1 ? x.r < y.r : x.r > y.r);\n}\n```\n\n\u8fd9\u4e5f $l$ \u6307\u9488\u8f6c\u79fb\u65f6\uff0c$r$ \u4e0d\u7528\u4ece\u63a5\u8fd1 $n$ \u7684\u5730\u65b9\u8dd1\u56de\u6765\uff0c\u4f1a\u8282\u7701\u4e00\u90e8\u5206\u65f6\u95f4\u3002\n\n---\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^{\\frac{3}{2}})$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\n#define MAXN 100010\n#define ll long long\n\nusing namespace std;\n\nint n, Q, bl, num;\n\nint a[MAXN], ans[MAXN], cnt[MAXN];\n\nstruct Query {\n\tint l, r, id;\n}q[MAXN];\n\nbool cmp(Query x, Query y) {\n\treturn x.l / bl ^ y.l / bl ? x.l < y.l : ((x.l / bl) & 1 ? x.r < y.r : x.r > y.r);\n}\n\nvoid add(int x) {\n\tif (++cnt[a[x]] == 1) num++;\n\treturn;\n}\n\nvoid del(int x) {\n\tif (!--cnt[a[x]]) num--;\n\treturn;\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &Q);\n\tbl = sqrt(n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tfor (int i = 1; i <= Q; i++) {\n\t\tscanf(\"%d%d\", &q[i].l, &q[i].r);\n\t\tq[i].id = i;\n\t}\n\t\n\tsort(q + 1, q + Q + 1, cmp);\n\t\n\tint l = q[1].l, r = l - 1;\n\tfor (int i = 1; i <= Q; i++) {\n\t\twhile (l < q[i].l) del(l++);\n\t\twhile (l > q[i].l) add(--l);\n\t\twhile (r > q[i].r) del(r--);\n\t\twhile (r < q[i].r) add(++r); \n\t\tif (q[i].r - q[i].l + 1 == num) ans[q[i].id] = 1;\n\t}\n\t\n\tfor (int i = 1; i <= Q; i++) {\n\t\tif (ans[i]) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1585561041,
        "uid": 18673,
        "name": "ctq1999",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3901 \u6570\u5217\u627e\u4e0d\u540c"
    },
    {
        "content": "\u8fd9\u662f\u5f88\u5178\u578b\u7684\u4e00\u9053\u83ab\u961f\u7684\u6a21\u677f\u9898\u3002\u6211\u7684\u5206\u5757\u5927\u5c0f\u662f $\\sqrt n$, \u65f6\u95f4\u590d\u6742\u5ea6\u5927\u81f4\u5e94\u8be5\u662f $O(n\\sqrt n)$\u3002\n\n\u8bf4\u4e00\u4e0b\u6211\u8fd9\u9053\u9898\u7684\u505a\u6cd5\u5427\uff1a\u5148\u5f00\u4e00\u4e2a cnt \u6570\u7ec4\uff0c\u5b58\u6bcf\u79cd\u6570\u5b57\u7684\u603b\u4e2a\u6570\u3002\u7136\u540e\u5b9a\u4e49\u4e86\u4e00\u4e2a num \u53d8\u91cf\uff0c\u521d\u59cb\u503c\u4e3a 0 \uff0c\u8868\u793a\u603b\u6570\u91cf\u8d85\u8fc7 1 \u7684\u6570\u503c\u4e2a\u6570\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u626b\u5b8c\u67d0\u6bb5\u533a\u95f4\u4e4b\u540e\uff0c\u5982\u679c $num \\geq 1$\uff0c\u5219\u8f93\u51fa \"No\"\uff0c\u53cd\u4e4b\u8f93\u51fa \"Yes\"\u3002\n\n\u5728\u6dfb\u52a0\u5b8c\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u5982\u679c\u6b64\u65f6\u90a3\u4e2a\u6570\u503c\u7684\u603b\u6570\u91cf\u7b49\u4e8e 2\uff0c\u5219 num \u52a0\u4e0a 1\uff1b\u5220\u9664\u5b8c\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u5982\u679c\u6b64\u65f6\u90a3\u4e2a\u6570\u503c\u7684\u603b\u6570\u91cf\u7b49\u4e8e 1\uff0c\u5219 num \u51cf\u53bb 1.\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,block;\nint l=1,r=0,num=0;\nint col[100001];\nint ans[100001],cnt[100001];\n\nstruct query\n{\n\tint l1,r1;\n\tint id;\n};\nquery q[100001];\n\nbool cmp(query &x,query &y)\n{\n    if(x.l1/block==y.l1/block)\n    {\n    \tif(x.l1/block%2==0) return x.r1>y.r1;\n    \telse return x.r1<y.r1;\n\t}\n    return x.l1<y.l1;\n}\n\ninline void add(int x)\n{\n\t++cnt[x];\n\tif(cnt[x]==2) ++num;\n}\ninline void del(int x)\n{\n\t--cnt[x];\n\tif(cnt[x]==1) --num;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tblock=sqrt(n);\n\tfor(register int i(1);i<=n;++i)\n\t\tscanf(\"%d\",&col[i]);\n\tfor(register int i(1);i<=m;++i)\n\t{\n\t\tscanf(\"%d%d\",&q[i].l1,&q[i].r1);\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+m+1,cmp);\n\t\n\tfor(register int i(1);i<=m;++i)\n\t{\n\t\tint ll(q[i].l1);\n\t\tint rr(q[i].r1);\n\t\t\n\t\twhile(l<ll) del(col[l++]);\n\t\twhile(l>ll) add(col[--l]);\n\t\twhile(r<rr) add(col[++r]);\n\t\twhile(r>rr) del(col[r--]);\n\t\t\n\t\tans[q[i].id]=num;\n\t}\n\t\n\tfor(register int i(1);i<=m;++i)\n\t{\n\t\tif(ans[i]>=1) printf(\"No\\n\");\n\t\telse printf(\"Yes\\n\");\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1583135977,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "## **\u83ab\u961f!!!!**\n\n\n------------\n\u5148\u8bf4\u4e0b\u57fa\u672c\u601d\u60f3\u5427,\u5c31\u662f\u7528l,r\u4e24\u4e2a\u6307\u9488\u6765\u56de\u626b\u63cf,\u7136\u540e\u5728O(1)\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u6709\u4e00\u6b21\u79fb\u52a8,\u987a\u4fbf\u7edf\u8ba1\u4e0bins(\u63d2\u5165)\u6216\u8005del(\u5220\u9664)\u7684\u503c\u5bf9\u533a\u95f4\u6709\u65e0\u8d21\u732e\u5373\u53ef.\n\n\u7528 ans \u8bb0\u5f55\u603b\u8d21\u732e,\u7528 cnt \u8bb0\u5f55\u662f\u5426\u91cd\u590d\u53ca\u91cd\u590d\u6570\u91cf,\u82e5\u91cd\u590d\u5219\u65e0\u8d21\u732e\n\n\u5219[l,r]\u4e0e\u8be2\u95ee\u91cd\u5408\u7684\u65f6\u5019ans\u5373\u4e3a\u7b54\u6848.\n\n\u4f46\u662f\u5f88\u660e\u663e\u5f53\u8be2\u95ee\u533a\u95f4\u4e0d\u89c4\u5f8b\u7684\u65f6\u5019,l\u548cr\u4e24\u4e2a\u6307\u9488\u5c31\u4f1a\"\u5de6\u53f3\u6a2a\u8df3\",\u7136\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u53d8\u5927.\n\n\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u8be2\u95ee\u8fdb\u884c~~\u6392\u5e8f~~(\u5206\u5757),\u987a\u4fbf\u52a0\u5165\u7384\u865a\u4f18\u5316,\u505a\u6cd5\u662f\u5757\u5185\u6309\u7167\u5757\u7684\u5947\u5076\u6027\u8fdb\u884cr\u968f\u7f18\u6392\u5e8f,\u5757\u5916\u6309\u7167l\u6392\u5e8f.\n\n\u5757\u7684\u5927\u5c0f\u53d6n\u76841/4\u6b21\u65b9\u52303/4\u6b21\u65b9\u4e3a\u597d.\u901a\u8fc7\u5206\u5757\u7684\u64cd\u4f5c,\u6211\u4eec\u53ef\u4ee5\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3aO(n\u76843/2\u6b21\u65b9).\n\n\u5bf9\u8be2\u95ee\u5206\u5757(\u624b\u52a8\u6ed1\u7a3d)\n```\nstruct query{\n\tint l,r,in,id;\n\tinline bool operator < (const query &a)const{\n\tif(!(in^a.in)){\n\t\treturn (in&1)?r<a.r:r>a.r; \n\t}\n\treturn in<a.in;\n\t}\n}q[maxn];\n```\nins\u548cdel\u64cd\u4f5c\n\n```\ninline void ins(int x){\n\tif(!cnt[a[x]]++)ans++;\n}\ninline void del(int x){\n\tif(!--cnt[a[x]])ans--;\n}\n```\n\n------------\n\u6734\u7d20\u7684\u83ab\u961f\u4e4b\u95f4\u7684\u533a\u522b\u5c31\u662fins\u548cdel\u8fd8\u6709ans\u4e0ecnt\u4e86\n\n##### AC\u4ee3\u7801\u5982\u4e0b\n```\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cctype>\n#include<cmath> \n#define maxn 1001000\nusing namespace std;\nint ans,num[maxn],cnt[maxn],a[maxn];\nint n,m,k,len;\n#define re register\ninline int read(){\n\tre int x=0;re bool y=0;re char ch;\n\twhile(!isdigit(ch=getchar()))if(ch=='-')y=1;\n\twhile(isdigit(ch))x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn y?-x:x; \n}\ninline void write(int x){\n    if(x<0){\n        putchar('-');\n        x=-x;\n    }\n    if(x>9){\n        write(x/10);\n    }\n    putchar(x%10+'0');\n}\nstruct query{\n\tint l,r,in,id;\n\tinline bool operator < (const query &a)const{\n\tif(!(in^a.in)){\n\t\treturn (in&1)?r<a.r:r>a.r; \n\t}\n\treturn in<a.in;\n\t}\n}q[maxn];\ninline void ins(int x){\n\tif(!cnt[a[x]]++)ans++;\n}\ninline void del(int x){\n\tif(!--cnt[a[x]])ans--;\n}\nint main(){\n//\tfreopen(\"p3901.in\",\"r\",stdin);\n    n=read();m=read();\n//    m=read();\n//    k=read();\n    len=sqrt(n);\n    for(register int i=1;i<=n;++i){\n        a[i]=read();\n    }\n    int x,y;\n    for(register int i=1;i<=m;++i){\n        x=read();\n        y=read();\n        q[i].l=x;\n        q[i].r=y;\n        q[i].in=(x-1)/len+1;\n        q[i].id=i;\n    }\n    sort(q+1,q+1+m);\n    int l=1,r=0;\n    for(register int i=1;i<=m;++i){\n        x=q[i].l;\n        y=q[i].r;\n        while(l<x)del(l++);\n        while(l>x)ins(--l);\n        while(r<y)ins(++r);\n        while(r>y)del(r--);\n        num[q[i].id]=ans==(q[i].r-q[i].l+1)?1:0;\n    }\n    for(register int i=1;i<=m;++i){\n    \tif(num[i])puts(\"Yes\");\n\t\telse puts(\"No\"); \n//        write(num[i]);\n//        printf(\"\\n\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1571974825,
        "uid": 158869,
        "name": "\u76e7\u92c5",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u7528\u7684\u662f**\u83ab\u961f**\uff0c\u9898\u89e3\u4e2d\u6709\u5927\u4f6c\u3001\u5305\u62ec\u6d1b\u8c37\u65e5\u62a5\u8bb2\u5f97\u90fd\u5f88\u8be6\u7ec6\u4e86\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0~~\uff08\u624d\u4e0d\u662f\u4e0d\u4f1a\u53e3\u80e1\uff09~~\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u83ab\u961f\u79fb\u52a8\u7aef\u70b9\u65f6\u4fee\u6539\u7684\u65b0\u601d\u8def\u5427\uff0c\u6743\u4e14\u5f53\u53d1\u6563\u601d\u7ef4\u4e86\u2026\u2026\uff08\u81f3\u5c11\u6211\u7ffb\u4e86\u51e0\u9875\u9898\u89e3\uff0c\u90fd\u662f\u6709\u5173$r-l+1$\u7684\u8bb0\u5f55\u65b9\u5f0f\u5e03\u62c9\u5e03\u62c9\u7684\uff09\n\n## \u6211\u7684\u601d\u8def\n\u8003\u8651\u5728\u56de\u7b54\u4e3aNo\u65f6\uff0c\u4e00\u5b9a\u6709\u82e5\u5e72\u4e2a\u6570$cnt\\ge 2$\uff1b\u800c\u5f53\u56de\u7b54\u4e3aYes\u65f6\uff0c\u5c31\u6ca1\u6709\u6570$cnt\\ge 2$\u3002\u90a3\u4e48\u5c31\u7528\u53d8\u91cf$now$\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u6709\u591a\u5c11\u6570\u7684$cnt\\ge 2$\u3002\n\n\u8fdb\u884c\u83ab\u961f\u7684add\u64cd\u4f5c\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u7684$cnt$\u75311\u6210\u4e862\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba9`now++`\uff1b\u53cd\u4e4b\uff0c\u82e5\u8fdb\u884cdel\u65f6\uff0c\u82e5\u8fd9\u4e2a\u6570\u7684$cnt$\u75312\u53d8\u6210\u4e861\uff0c\u90a3\u4e48\u5c31\u8ba9`now--`\u3002\n\n\u7edf\u8ba1\u7b54\u6848\u65f6\uff0c\u5f53$now>0$\u65f6\uff0c\u56de\u7b54\u4e3aNo\uff0c\u5426\u5219\u4e3aYes\u3002\n\n## \u4ee3\u7801\n\uff08\u5e94\u8be5\u4e0d\u7b97\u91cd\u590d\u89e3\u6cd5\u5427\u2026\u2026\uff09\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nconst int maxn=1e5+5;\nint n,m,siz;\nstruct qt{\n\tint l,r,p;\n  \t//\u7528\u7684\u5947\u5076\u6027\u6392\u5e8f\n\tbool operator <(const qt &rhs)const{\n\t\treturn (l/siz^rhs.l/siz)?l<rhs.l:((l/siz)&1?r<rhs.r:r>rhs.r);\n\t}\n}q[maxn];\nint a[maxn],cnt[maxn],now=0;\nbool ans[maxn];\ninline void add(int x){\n\tcnt[a[x]]++;\n\tif(cnt[a[x]]==2) now++;\n}\ninline void del(int x){\n\tcnt[a[x]]--;\n\tif(cnt[a[x]]==1) now--;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tsiz=n/sqrt(m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&q[i].l,&q[i].r);\n\t\tq[i].p=i;\n\t}\n\tsort(q+1,q+m+1);\n\tint l=0,r=0;\n\tfor(int i=1;i<=m;i++){\n\t\tint ql=q[i].l,qr=q[i].r;\n\t\twhile(l<ql) del(l++);\n\t\twhile(l>ql) add(--l);\n\t\twhile(r<qr) add(++r);\n\t\twhile(r>qr) del(r--);\n\t\tans[q[i].p]=(now==0);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t\tif(ans[i]) printf(\"Yes\\n\");\n\t\telse printf(\"No\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1554563801,
        "uid": 57849,
        "name": "\u96ea\u98ce\u821e\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u51e0\u4e4e\u6240\u6709\u7684\u9898\u89e3\u90fd\u662f\u4f7f\u7528\u83ab\u961f\u7b97\u6cd5\uff0c\u4e0d\u8fc7\u6211\u8fd8\u662f\u6253\u7b97\u4f7f\u7528~~\u6b63\u7ecf~~\u7684\u7b97\u6cd5\u6765\u505a\u3002\n\u8003\u8651\u4e00\u4e2a\u533a\u95f4[x,y],\u5176\u4e2d\u6ca1\u6709\u91cd\u590d\u6570\u5b57\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\uff1a[x,y]\u4e2d\u6bcf\u4e00\u4e2a\u6570\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u90fd\u5728x\u7684\u5de6\u4fa7\u3002\u5bb9\u6613\u60f3\u5230\u53ea\u9700\u8981\u6c42\u51fa[x,y]\u4e0a\u6240\u6709\u6570\u4e0a\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u7684\u6700\u5927\u503c\u5373\u53ef\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff08\u6216\u8005~~\u9b3c\u755c~~\u7684\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u6700\u5927\u503c\u7b97\u6cd5\uff09\n\u5b9e\u73b0\u8fd8\u662f\u4e0d\u592a\u590d\u6742\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define N 100005\nint tree[N<<2],a[N],n,m,tot;\nstruct num\n{\n    int val,pos;\n    bool operator < (const num b )const\n    {\n        if(val==b.val)return pos < b.pos;\n        return val < b.val;\n    }\n}s[N];\nvoid build(int p,int l, int r)\n{\n    if(l==r)\n    {\n    tree[p]=a[l];\n    return;\n    }\n    int mid = (l+r)>>1;\n    build(p<<1,l,mid);\n    build((p<<1)+1,mid+1,r);\n    tree[p]=max(tree[p<<1],tree[(p<<1)+1]);\n}\nint getmax(int p,int l,int r,int L, int R)\n{\n    if(r<L||l>R)return 0;\n    if(l>=L&&r<=R)return tree[p];\n    int mid = (l+r)>>1;\n    return max(getmax(p<<1,l,mid,L,R),getmax(((p<<1)+1),mid+1,r,L,R));\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i =1 ; i <= n ; i ++)\n    {\n        scanf(\"%d\",&s[i].val);\n        s[i].pos=i;\n    }\n    sort(s+1,s+1+n);\n    for(int i = 1; i <= n ; i++)\n    if(s[i].val==s[i-1].val)\n    {\n        a[s[i].pos]=s[i-1].pos;\n    }\n    build(1,1,n);\n    while(m--)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        if(getmax(1,1,n,x,y)>=x)\n        {\n            puts(\"No\");\n        }\n        else puts(\"Yes\");\n    }\n}\n```",
        "postTime": 1542426107,
        "uid": 47749,
        "name": "honoka_desu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "### [\u66f4\u597d\u7684\u9605\u8bfb](https://www.cnblogs.com/yzhang-rp-inf/p/9971041.html)\n\n### [\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3901)\n\n### \u4e0d\u9519\u7684\u83ab\u961f\u7ec3\u624b\u9898\n\n\u5757\u6570\u5c31\u76f4\u63a5\u53d6sqrt\uff08n\uff09\n\n\u5bf9\u6240\u6709\u8be2\u95ee\u8fdb\u884c\u6392\u5e8f\n\n\u6392\u5e8f\u7b2c\u4e00\u5173\u952e\u8bcd\uff1al\u6240\u5728\u7b2c\u51e0\u5757\uff0c\u7b2c\u4e8c\u5173\u952e\u8bcd\uff1ar\u7684\u4f4d\u7f6e\n\n\u8003\u8651Ai\u4e0d\u5927\uff0c\u66b4\u529b\u5f00\u6570\u7ec4\n\nadd\u65f6\u5982\u679c\u52a0\u4e4b\u540e\u7684\u6570\u91cf\u662f1\n\n\u603b\u6570\u5c31\u52a01\n\ndel\u65f6\u5982\u679c\u51cf\u4e4b\u540e\u7684\u6570\u91cf\u662f0\n\n\u603b\u6570\u5c31\u51cf1\n\n\u6bcf\u6b21\u6bd4\u8f83\u603b\u6570\u548c\u8be5\u6b21\u67e5\u8be2\u533a\u95f4\u7684\u957f\u5ea6\n\n\u76f8\u7b49\u7684\u8bdd\u5c31\u628a ans[q[i].id]\u8bbe\u4e3a\u771f\n\n\u6700\u540e\u5982\u679cans[i]\u4e3a\u771f\u5c31\u8f93\u51faYes\uff0c\u5426\u5219\u8f93\u51faNo\n\n```cpp\n#pragma GCC optimize(\"O3\")\n#include <bits/stdc++.h>\n#define N 100005\nusing namespace std;\ninline int read()\n{\n\tregister int x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn x*f;\n}\nint v[N],blocksize=0;\nstruct query{\n\tint l,r,id,bl;\n}q[N];\nint sum[N];\nbool ans[N];\nint cnt=0;\ninline void add(register int x)\n{\n\tif(++sum[v[x]]==1)\n\t\t++cnt; \n}\ninline void del(register int x)\n{\n\tif(--sum[v[x]]==0)\n\t\t--cnt;\n}\ninline bool cmp(register query a,register query b)\n{\n\treturn a.bl==b.bl?a.r<b.r:a.bl<b.bl;\n}\nint main()\n{\n\tmemset(sum,0,sizeof(sum));\n\tint n=read(),m=read();\n\tblocksize=sqrt(n);\n\tfor(register int i=1;i<=n;++i)\n\t\tv[i]=read();\n\tfor(register int i=1;i<=m;++i)\n\t{\n\t\tint l=read(),r=read();\n\t\tq[i]=(query){l,r,i,(l-1)/blocksize+1};\n\t}\n\tsort(q+1,q+m+1,cmp);\n\tint l=1,r=0;\n\tfor(register int i=1;i<=m;++i)\n\t{\n\t\tint ll=q[i].l,rr=q[i].r;\n\t\twhile(l<ll)\n\t\t\tdel(l++);\n\t\twhile(l>ll)\n\t\t\tadd(--l);\n\t\twhile(r<rr)\n\t\t\tadd(++r);\n\t\twhile(r>rr)\n\t\t\tdel(r--);\n\t\tans[q[i].id]=(cnt==rr-ll+1)?1:0;\n\t}\n\tfor(register int i=1;i<=m;++i)\n\t\tif(ans[i])\n\t\t\tputs(\"Yes\");\n\t\telse\n\t\t\tputs(\"No\");\n\treturn 0;\n } \n```",
        "postTime": 1542366752,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6ca1\u4eba\u7528st\u8868\u5417\uff1f\u6211\u53d1\u4e00\u4e2ast\u8868\u7684\u9898\u89e3\u3002\n\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u6570\u5728\u6570\u5217\u4e2d\u51fa\u73b0\u7684\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\uff08\u7279\u522b\u7684\uff0c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u6570\uff0c\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u4e3a0\uff09\u3002\n\u90a3\u4e48\uff0c\u4e00\u6bb5\u533a\u95f4\\[L,R\\]\u7684\u6570\u4e0d\u91cd\u590d\uff0c\u5f53\u4e14\u8fd1\u5f53\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u5c0f\u4e8eL\uff0c\u5373\u6570\u51fa\u73b0\u7684\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u7684**\u6700\u5927\u503c**\u5c0f\u4e8eL\u3002\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528st\u8868\u5904\u7406\u51fa\u533a\u95f4\u6700\u5927\u503c\u3002\n```\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\nint n,q;\nint aa[100005];\nint ton[100005];\nint st[20][100005];\nint main(){\n\tscanf(\"%d%d\",&n,&q);\n\trep(i,1,n)scanf(\"%d\",aa+i);\n\trep(i,1,n){\n\t\tst[0][i]=ton[aa[i]];\n\t\tton[aa[i]]=i;\n\t}\n\trep(i,1,19)rep(j,1,(n-(1<<i)+1))\n\t\tst[i][j]=max(st[i-1][j],st[i-1][j+(1<<i-1)]);\n\trep(i,0,19){\n\t//\trep(j,1,(n-(1<<i)+1))cout<<st[i][j]<<\" \";;cout<<endl;\n\t}\n\trep(i,1,q){\n\t\tint l,r;scanf(\"%d%d\",&l,&r);\n\t\tint d=31-__builtin_clz(r-l+1);\n\t\tint ans=max(st[d][l],st[d][r-(1<<d)+1]);\n\t\tif(ans>=l)printf(\"No\\n\");else printf(\"Yes\\n\");\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1541920681,
        "uid": 72665,
        "name": "ferrum_cccp",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "**\u7b80\u5355\u7684\u5728\u7ebf\u5206\u5757....**\n\n\u5176\u662f\u6211\u662f\u4eceP1972HH\u7684\u9879\u94fe\u90a3\u91cc\u8fc7\u6765\u7684\uff0c\u5728\u90a3\u91cc\u5199\u5728\u7ebf\u5206\u5757\u53ea\u670980\u5206\uff08\u9898\u89e3\u6709\u4e2adalao\u8bf4\u52a0\u70b9\u4f18\u5316\u5c31\u53ef\u4e00\u8fc7\u4e86\uff0c\u53ef\u662f\u7edd\u671b\u7684Pascal\u5e76\u4e0d\u80fd\u5438\u4efb\u4f55\u6c27\u6c14\u6216\u81ed\u6c27\uff0c\u6700\u540e\u8fd8\u662f\u53bb\u5199\u4e86\u6811\u72b6\u6570\u7ec4\uff09\n\n\u5bf9\u4e8epre[i]\u8868\u793a\u4e0e\u8fd9\u4e2a\u4f4d\u7f6e\u6570\u76f8\u540c\u7684\u4f4d\u7f6e\u5728\u54ea\u91cc\uff0c\u8fd9\u4e2a\u53ef\u4ee5O\uff08n\uff09\u5f97\u51fa\n\n\n**\u7ec8\u4e8e\u8981\u8bf4\u5230\u91cd\u70b9\u4e86...**\n\n**\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee[l,r]\uff0c\u6211\u4eec\u66b4\u529b\u6c42\u89e3\u5757\u8fb9\u4e0a\u7684\u6570\u7684pre[i]\u6709\u6ca1\u6709\u5927\u4e8e\u7b49\u4e8el\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u8fd9\u79cd\u6570\u5b57\u51fa\u73b0\u4e24\u6b21\u4e86\uff0c\u4e0d\u5408\u6cd5**\n\n\u5bf9\u4e8e\u8de8\u8fc7\u7684\u5757\uff0c\u53d6\u6700\u5927\u7684pre[i]\u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u5927\u4e8e\u7b49\u4e8el(\u8fd9\u4e2a\u8981\u9884\u5904\u7406\u597d\uff0c\u56e0\u4e3a\u6211\u662f\u76f4\u63a5\u4ece\u90a3\u9898\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u7528\u4e86\u6392\u5e8f\u7684\u65b9\u6cd5\uff0c\u90a3\u9898\u8981\u6bcf\u4e2a\u5757\u6392\u5e8f\u52a0\u4e8c\u5206)\uff0c\u548c\u4e0a\u9762\u540c\u7406\n\n\u849f\u84bb\u4ee3\u7801...\uff08Pascal\uff09:\n```\nvar\n  bi:boolean;\n  ans:longint;\n  a3,a4,ll,rr,mid,a1,a2,tot,block:longint;\n  i,j,m,n,k,p:longint;\n  happen:array[0..1000005]of longint;\n  a,l,r,point,b,pre:array[0..500005]of longint;\nprocedure qs(ll,rr:longint);\nvar\n  i,j,mid,a1:longint;\nbegin\n  i:=ll; j:=rr;\n  mid:=pre[(i+j) div 2];\n  repeat\n    while pre[i]<mid do inc(i);\n    while pre[j]>mid do dec(j);\n    if not(i>j) then\n      begin\n        a1:=pre[i]; pre[i]:=pre[j]; pre[j]:=a1;\n        inc(i); dec(j);\n      end;\n  until i>j;\n  if i<rr then qs(i,rr);\n  if ll<j then qs(ll,j);\nend;\nbegin\n  {assign(input,'11.in');\n  assign(output,'11.out');\n  reset(input); rewrite(output);}\n  readln(n,m);\n  block:=trunc(sqrt(n));\n  for i:=1 to n do\n    begin\n      read(a[i]);\n      pre[i]:=happen[a[i]]; b[i]:=pre[i];\n      happen[a[i]]:=i;\n      if i mod block=1 then\n        begin\n          inc(tot); l[tot]:=i;\n        end;\n      if i mod block=0 then\n        r[tot]:=i;\n      point[i]:=tot;\n    end;\n  readln;\n  if r[tot]=0 then r[tot]:=n;\n  for i:=1 to tot do\n    qs(l[i],r[i]);\n  while m<>0 do\n    begin\n      dec(m);\n      readln(a1,a2);\n      bi:=true;\n      if point[a1]=point[a2] then\n        begin\n          for i:=a1 to a2 do\n            if b[i]>=a1 then\n              begin\n                bi:=false; break;\n              end;\n        end\n      else\n        begin\n          for i:=a1 to r[point[a1]] do\n            if b[i]>=a1 then\n              begin\n                bi:=false; break;\n              end;\n          if bi=true then\n          for i:=point[a1]+1 to point[a2]-1 do\n            if pre[r[i]]>=a1 then\n              begin\n               bi:=false; break;\n              end;\n          if bi=true then\n          for i:=l[point[a2]] to a2 do\n            if b[i]>=a1 then\n              begin\n                bi:=false; break;\n              end;\n        end;\n      if bi=true then writeln('Yes')\n      else writeln('No');\n    end;\n  //close(input); close(output);\nend.\n```\n\u795d\u5927\u5bb62018 RP++",
        "postTime": 1536981478,
        "uid": 39488,
        "name": "\u56af\u5440\u56af\u5440",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    },
    {
        "content": "<http://www.cnblogs.com/huangdalaofighting/p/7351682.html\n\n\u88f8\u7684\u83ab\u961f\uff0c\u771f\u7684\u5f88\u7b80\u5355\u3002\n\n\u6309\u8be2\u95ee\u6392\u5e8f\uff0c\u6309\u5de6\u7aef\u70b9\u4f4d\u7f6e\u5206\u6210sqrt(n)\u4efd\uff0c\u6bcf\u4efd\u6309\u53f3\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5373\u53ef\u3002\n\n\u7136\u540e\u5c3a\u53d6\u6cd5\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,m,a[100001],vis[100001],tot,lim,ans[100001];\nstruct ask\n{\n    int l,r,id;\n}b[100001];\nbool cmp(const ask a,const ask b)\n{\n    if(a.l/lim!=b.l/lim)return a.l/lim<b.l/lim;else return a.r<b.r;\n}\nint main()\n{\n    int i,j;\n    scanf(\"%d%d\",&n,&m);\n    lim=sqrt(n);\n    for(i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&b[i].l,&b[i].r);\n        b[i].id=i;\n    }\n    sort(b+1,b+m+1,cmp);\n    int left=1,right=0;\n    for(i=1;i<=m;i++)\n    {\n        while(left<b[i].l){if(--vis[a[left]]==0)tot--;left++;}\n        while(left>b[i].l){left--;if(++vis[a[left]]==1)tot++;}\n        while(right<b[i].r){right++;if(++vis[a[right]]==1)tot++;}\n        while(right>b[i].r){if(--vis[a[right]]==0)tot--;right--;}\n        ans[b[i].id]=tot==b[i].r-b[i].l+1;\n    }\n    for(i=1;i<=m;i++)\n    {\n        if(ans[i])printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1502545526,
        "uid": 36357,
        "name": "kakakaka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3901 \u3010\u6570\u5217\u627e\u4e0d\u540c\u3011"
    }
]