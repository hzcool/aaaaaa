[
    {
        "content": "\u89e3\u9898\u601d\u8def\uff1a\n\n\u5373\u6c42\u56fe\u4e2d\u7684\u6865\uff08\u5272\u8fb9\uff09\n\n\u53ef\u4ee5\u4f7f\u7528Tarjan\u7b97\u6cd5\n\n\n\u7531\u4e8e\u672c\u9898\u8303\u56f4\u5f88\u5c0f\uff0c\u679a\u4e3e\u5373\u53ef\n\n\u679a\u4e3e\u4e00\u6761\u8fb9\uff0c\u5c06\u8fd9\u6761\u8fb9\u53bb\u6389\u540e\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9\u8fdb\u884cFloodFill\uff0c\u6216\u8005\u8bf4\u4ece\u8fd9\u4e2a\u70b9\u5f00\u59cb\u8fdb\u884cDFS\u6216BFS\u904d\u5386\uff0c\u770b\u662f\u5426\u80fd\u904d\u5386\u5230\u6240\u6709\u7684\u70b9\u3002\n\n\u5982\u679c\u4e0d\u53ef\u4ee5\u5219\u8fd9\u6761\u8fb9\u4e3a\u5272\u8fb9\uff0c\u5426\u5219\u4e0d\u662f\u3002\n",
        "postTime": 1382794476,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "### \u697c\u9876tarjan\u4e0d\u592a\u8be6\u7ec6\u554a\uff0c\u6211\u6765\u8bb2\u8be6\u7ec6\u4e00\u70b9\u5427\n\n\n------------\n  \n\n\u5148\u4e0a\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u6709\u8bb2\u89e3   \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint maps[151][151];//\u90bb\u63a5\u77e9\u9635\uff0c\u7b80\u5355\u6613\u61c2\nstruct Edge {\n    int x,y;\n} E[5001];//\u8fd9\u662f\u5b58\u7b54\u6848\u7684\uff0c\u7528\u90bb\u63a5\u8868\u5b58\uff0c\u5e94\u8be5\u4e0d\u7528\u89e3\u91ca\nint dfn[151],low[151],n,m,id,cnt,f[151];/*\u8fd9\u4e9b\u6570\u7ec4\u7684\u542b\u4e49\uff1a\ndfn:\n{\n\u4e0b\u6807\uff1a\u70b9\u7f16\u53f7\n\u5185\u5b58\u7684\u503c\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u65f6\u7b2c\u51e0\u4e2a\u904d\u5386\n}\nlow:\n{\n\u4e0b\u6807\uff1a\u70b9\u7f16\u53f7\n\u5185\u5b58\u7684\u503c\uff1a\u8fd9\u4e2a\u70b9\u80fd\u901a\u8fc7\u5b83\u7684\u5b50\u5b59\u5230\u8fbe\u7684dfn\u503c\u6700\u5c0f\u7684\u70b9\u7684dfn\n}\nf:\n{\n\u4e0b\u6807\uff1a\u70b9\u6807\u53f7\n\u5185\u5b58\u7684\u503c\uff1a\u5b83\u904d\u5386\u7684\u4e0a\u4e00\u4e2a\u70b9\n}\n\u53d8\u91cf\u7684\u542b\u4e49\uff1a\nn:\u7ed3\u70b9\u4e2a\u6570\nm:\u8fb9\u4e2a\u6570\nid:\u7528\u4e8edfn\u6807\u8bb0\ncnt:\u7528\u4e8e\u90bb\u63a5\u8868\u5b58\u56fe\n*/\nbool cmp(struct Edge a,struct Edge b) {\n    if(a.x==b.x)return a.y<b.y;\n    return a.x<b.x;\n}//\u56e0\u9898\u76ee\u8981\u6c42\uff0c\u8fb9\u8981\u6392\u5e8f\uff0c\u8981\u505a\u8fd9\u9053\u9898\u7684\u4eba\u5e94\u8be5\u90fd\u77e5\u9053cmp\nvoid addEdge(int x,int y) {\n    E[++cnt].x=x;\n    E[cnt].y=y;\n}//addedge\u51fd\u6570\uff0c\u5b58\u5165\u90bb\u63a5\u8868\nvoid tarjan(int x) {\n    int c=0,y;\n    dfn[x]=low[x]=++id;\n    for(register int i=1; i<=n; i++) {\n        if(!maps[x][i])continue;//\u9996\u5148\u8981\u6709\u8fb9\n        y=i;//\u5904\u7406\u5bf9\u8c61\n        if(dfn[y]&&y!=f[x])low[x]=min(low[x],dfn[y]);//\u5982\u679c\u662f\u5b83\u7238\u7238\uff0c\u5272\u8fb9\u5c31\u6ca1\u6709\u7528\u4e86\uff0c\u597d\u597d\u7406\u89e3\n        if(!dfn[y]) {//\u5982\u679c\u627e\u5230\u7956\u5148\u8fd8\u6709\u4ec0\u4e48\u7528\u5462\n            f[y]=x;//\u4e0d\u662f\u7956\u5148\u5c31\u8ba4\u7238\u7238\n            tarjan(y);//dfs\u8fc7\u7a0b\n            low[x]=min(low[x],low[y]);//\u56de\u6eaf\u65f6\u5e26\u7740\u7238\u7238\u66f4\u65b0low\n            if(low[y]>dfn[x])addEdge(x,y);//\u662f\u5272\u8fb9\uff0c\u5c31\u52a0\u5165\u5427\n        }\n    }\n}//tarjan\u90e8\u5206\uff0c\u8bc1\u660e\u5728\u4e0b\u9762\nint main() {\n    int x,y;\n    cin>>n>>m;\n    for(register int i=1; i<=m; i++) {\n        cin>>x>>y;\n        maps[x][y]=maps[y][x]=1;//\u5b58\u8fb9\n    }\n    for(register int i=1; i<=n; i++) {\n        if(!dfn[i])tarjan(i);//tarjan\n    }\n    sort(E+1,E+cnt2+1,cmp);//sort\u5927\u6cd5\u597d\n    for(register int i=1; i<=cnt; i++) {\n        cout<<min(E[i].x,E[i].y)<<' '<<max(E[i].x,E[i].y)<<endl;//\u8f93\u51fa\n    }\n    return 0;//\u7a0b\u5e8f\u7ed3\u675f\u4e86\uff0c\u8bc1\u660e\u5f00\u59cb\u4e86\n}\n```\n\n![](https://cdn.luogu.com.cn/upload/pic/46966.png)  \n\u8fd9\u662f\u4e00\u4e2a\u56fe \u56fe\u4e2d\u6709\u8fb9  \n![](https://cdn.luogu.com.cn/upload/pic/46972.png)\n\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u540e\uff08\u63cf\u7eff\u7684\u8fb9\u4e3a\u904d\u5386\u8fc7\u7684\u8fb9\uff09  \ndfn\u503c\u548cf\u503c\u5df2\u56fa\u5b9a  \nlow\u503c\u6682\u65f6\u4e3a\u5b83\u81ea\u5df1  \n\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u80fd\u4e0d\u80fd\u6709\u8fb9\u56de\u5230\u5b83\u7684\u7956\u5148**\u4f46\u4e0d\u662f\u5b83\u7684\u7236\u4eb2**\u7684\u7ed3\u70b9  \n\u4e8e\u662f\u6211\u4eec\u7ee7\u7eed**\u56de\u6eaf**\uff08\u56e0\u4e3a\u641c\u5b8c\u4e86\u8fd4\u56de\uff09  \n![](https://cdn.luogu.com.cn/upload/pic/46974.png)\n\u53d1\u73b0\u7ed3\u70b97\u53ef\u4ee5\u56de\u5230\u7ed3\u70b92  \n\u4e8e\u662f\u5b83\u7684low\u503c\u7acb\u523b\u88ab\u6539\u4e3a2  \n![](https://cdn.luogu.com.cn/upload/pic/46975.png)\n\u4e00\u8def\u4e0a\u5b83\u7684**\u9664\u4e861\u548c2**\u7684\u5176\u4ed6\u7956\u5148low\u503c\u90fd\u88ab\u6539\u6210\u4e862  \n\u540e\u9762\u641c\u7d22\u7ed3\u675f  \n\u6211\u4eec\u53d1\u73b02-3-4-5-6-7\u8fd9\u4e9b\u7ed3\u70b9\u90fd\u6709\u81f3\u5c11\u4e24\u6761\u5b8c\u5168\u4e0d\u540c\u7684\u8def\u901a\u5f80\u8fd9\u4e9b\u7ed3\u70b9\uff082\u30013\u30014\u30015\u30016\u30017\uff09\u4e2d\u7684\u5176\u5b83\u7ed3\u70b9\uff08\u4e5f\u5c31\u662f\u70b9\u53cc\u8054\u901a\uff09   \n\u4f46\u662f1\u30018\u4e0d\u662f  \n\u6211\u4eec\u53d1\u73b0\u56fe\u4e2d\u7684\u5272\u8fb9\uff08\u628a\u8fd9\u6761\u8fb9\u53bb\u6389\uff0c\u56fe\u4e0d\u8054\u901a\uff09\u6709\u51e0\u6761\u5462\uff1f  \n\u5f88\u660e\u663e\u6709\uff081-2\uff09\u3001\uff087-8\uff09\u4e24\u6761\n\u6211\u4eec\u6765\u770b\u770b\u5b83\u4eeclow\u503c\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f  \n\u6211\u4eec\u53d1\u73b0**\u7956\u5148\u7684low\u503c\u90fd\u6bd4\u5b50\u5b59\u7684\u5c0f**  \n\u4e5f\u5c31\u662f\u8bf4\u5b50\u5b59\u4e0d\u80fd\u5230\u8fbe\u7956\u5148\u4ee5\u4e0a\u7684\u7ed3\u70b9\uff0c\u9664\u4e86\u8fd9\u6761\u8fb9\u5c31\u518d\u65e0\u53bb\u8def  \n\u5982\u679c\u8fd9\u6761\u8fb9\u6ca1\u4e86\u5462\uff1f\u5b50\u5b59\u5c82\u4e0d\u662f\u4e0d\u80fd\u5230\u8fbe\u7956\u5148\u53ca\u5176\u4ee5\u4e0a\u7684\u70b9\u54af\u3002  \n\u8fd9\u6761\u8fb9\u5c31\u53ef\u4ee5\u628a\u56fe\u5206\u6210\u7956\u5148\u548c\u5b50\u5b59\u4e24\u4e2a\u4e0d\u8054\u901a\u7684\u533a\u57df\uff0c\u8fd9\u5c31\u662f\u5272\u8fb9\n\n#### \u63a8\u8350\u9898\u76ee\uff1aP3387 P3388\n\n------------\n### \u5b8c\u7ed3\u6492\u82b1\n",
        "postTime": 1545492629,
        "uid": 104324,
        "name": "abruce",
        "ccfLevel": 7,
        "title": "\u9898\u89e3--P1656"
    },
    {
        "content": "$Tarjan$ \u7684\u9898\u89e3\n\n\u6b64\u9898\u6240\u6c42\u7684\u662f\u65e0\u5411\u56fe\u4e2d\u7684\u6240\u6709\u5272\u8fb9\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8054\u901a\u7684\u65e0\u5411\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u4fdd\u8bc1\u4e00\u4e2a\u8282\u70b9\u4e0d\u904d\u5386\u4e24\u6b21\uff0c\u53ef\u4ee5\u5f62\u6210\u4e00\u68f5 $DFS$ \u6811\uff0c\u5b9a\u4e49\u904d\u5386\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u6b21\u5e8f\u4e3a\u8fd9\u4e2a\u8282\u70b9\u7684\u65f6\u95f4\u6233\uff08\u7528 $dfn$ \u8868\u793a\uff09\uff0c\u8fd9\u6837\u7684dfn\u7f16\u53f7\u6709\u4e00\u4e2a\u795e\u5947\u7684\u6027\u8d28\uff1a\u5728 $DFS$ \u6811\u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u95f4\u6233\u4e00\u5b9a\u5c0f\u4e8e\u4ed6\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9\u3002\n\n\u5b9a\u4e49 $low[i]$ \u4e3a\u4e0d\u7ecf\u8fc7 $i$ \u548c\u7236\u8282\u70b9\u7684\u8fde\u8fb9\u5728 $DFS$ \u6811\u4e0a\u53ef\u4ee5\uff08\u76f4\u63a5\u6216\u95f4\u63a5\uff09\u8bbf\u95ee\u5230\u7684\u6700\u5c0f\u7684\u65f6\u95f4\u6233\uff0c\u5728\u66f4\u65b0\u7684\u65f6\u5019\u987a\u4fbf\u7ef4\u62a4 $low$ \u7684\u503c\u3002\u6839\u636e $dfn$ \u7684\u6027\u8d28\uff0c\u5982\u679c $low[child]>dfn[father]$ \uff0c\u5219\u4e0d\u7ecf\u8fc7 $father\uff0cchild$ \u4e0d\u80fd\u8bbf\u95ee\u5230\u66f4\u5c0f\u7684\u65f6\u95f4\u6233\uff0c\u90a3\u4e48\u8fb9 $\\langle child,father\\rangle$\u5c31\u662f\u5272\u8fb9\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int maxn=10010;\nint n,m,x,y,index_,dfn[maxn],low[maxn],ans,a;//index_\u4ee3\u8868\u5f53\u524d\u7684\u65f6\u95f4\u6233\nvector<int>G[maxn];//\u5b58\u8fb9\u7684\u6570\u636e\u7ed3\u6784\uff1a\u90bb\u63a5\u8868\nstruct Edge{int from,to;}edge[maxn];//\u7b54\u6848\u7684\u8fb9\uff0c\u6700\u540e\u9700\u8981\u6392\u5e8f\nbool cmp(const Edge a,const Edge b){if(a.from!=b.from)return a.from<b.from;return a.to<b.to;}//\u7b54\u6848\u8fb9\u7684\u6bd4\u8f83\u51fd\u6570\ninline void add_edge(int x,int y){edge[ans].from=min(x,y);edge[ans].to=max(x,y);ans++;}//\u5728\u7b54\u6848\u4e2d\u52a0\u5165\u4e00\u6761\u8fb9\nvoid dfs(int cur,int fa)//cur\u662f\u5f53\u524d\u8282\u70b9\uff0cfa\u662f\u4ed6\u7684\u7236\u4eb2\n{\n    int child;\n    dfn[cur]=++index_;//\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u7684\u65f6\u95f4\u6233\n    low[cur]=dfn[cur];//\u5f53\u524d\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684\u6700\u65e9\u65f6\u95f4\u6233\u80af\u5b9a\u662f\u81ea\u5df1\u7684\u65f6\u95f4\u6233\n    for(int i=0;i<G[cur].size();i++)//\u904d\u5386cur\u7684\u6240\u6709\u51fa\u70b9\n    {\n        child=G[cur][i];\n        if(dfn[child]&&child!=fa)low[cur]=min(low[cur],dfn[child]);//\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u4e0d\u662f\u7236\u4eb2\u8282\u70b9\u7684\u8282\u70b9\uff0c\u66f4\u65b0low\u7684\u503c\n        if(!dfn[child])//\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u4e4b\u524d\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n        {\n            dfs(child,cur);//\u8fdb\u884c\u4e00\u6b21dfs\u8fc7\u7a0b\n            if(dfn[cur]<low[child])add_edge(cur,child);//\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u5728\u7b54\u6848\u5e8f\u5217\u4e2d\u52a0\u5165\u8fd9\u6761\u8fb9\n            low[cur]=min(low[cur],low[child]);//\u66f4\u65b0low\u7684\u503c\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<m;i++)scanf(\"%d%d\",&x,&y),G[x].push_back(y),G[y].push_back(x);\n    for(int i=1;i<=n;i++)if(!dfn[i])dfs(i,i);//\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\uff0c\u521d\u59cb\u65f6fa\u662fi\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\n    sort(edge,edge+ans,cmp);//\u5c06\u7b54\u6848\u5e8f\u5217\u6392\u4e2a\u5e8f\n    for(int i=0;i<ans;i++)printf(\"%d %d\\n\",edge[i].from,edge[i].to);//\u8f93\u51fa\n    return 0;\n}\n```\n\u540c\u65f6\u5efa\u8bae\u540c\u5b66\u4eec\u53bb\u505a\u4e00\u4e0b\u6d1b\u8c37\u7684\u6a21\u677f\u9898\u3010\u5272\u70b9\u3011\uff0c\u6ce8\u610f\u6c42\u5272\u70b9\u65f6\u5e94\u8be5\u662f $low[child]\\ge dfn[father]$ \uff0c\u56e0\u4e3a\u5982\u679c\u8fd8\u662f\u53ef\u4ee5\u904d\u5386\u5230\u7236\u4eb2\u8282\u70b9\u7684\u65f6\u5019\u8fd9\u4e2achild\u4e5f\u662f\u5272\u70b9\u3002\n\n-------------\n\n\u611f\u8c22 [@\u5200\u4e0e\u73ab\u7470](https://www.luogu.org/space/show?uid=135950) \u63d0\u4f9b\u7684 hack \u6570\u636e\uff0c\u672c\u4ee3\u7801\u5728\u6709\u91cd\u8fb9\u65f6\u4f1a\u51fa\u9519\uff0c\u5982\uff1a\n\n```\n2 2\n1 2\n2 1\n```\n\n\u6b64\u65f6\u65ad\u5f00\u8fb9 $\\langle 1,2 \\rangle$ \uff0c $1,2$ \u4e24\u70b9\u4ecd\u8fde\u901a\uff0c\u5219 $\\langle 1,2\\rangle$ \u4e0d\u4e3a\u5272\u8fb9\u3002\n\n\u5904\u7406\u65b9\u6cd5\u662f\u5728\u904d\u5386\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u65f6\uff0c\u5982\u679c\u5728\u7b2c\u4e00\u6b21\u4e4b\u5916\u8fd8\u56de\u5230\u4e86\u7236\u4eb2\u7ed3\u70b9\uff0c\u5219\u6309\u50cf\u8ba1\u7b97\u513f\u5b50\u7ed3\u70b9\u7684\u65b9\u6cd5\u4e00\u6837\u7528\u7236\u4eb2\u7ed3\u70b9\u7684\u503c\u66f4\u65b0\u5f53\u524d\u7ed3\u70b9\u7684\u503c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int maxn=10010;\nint n,m,x,y,index_,dfn[maxn],low[maxn],ans,a;\nvector<int>G[maxn];\nstruct Edge{int from,to;}edge[maxn];\nbool cmp(const Edge a,const Edge b){if(a.from!=b.from)return a.from<b.from;return a.to<b.to;}\ninline void add_edge(int x,int y){edge[ans].from=min(x,y);edge[ans].to=max(x,y);ans++;}\nvoid dfs(int cur,int fa)\n{\n    int child;\n    dfn[cur]=++index_;\n    low[cur]=dfn[cur];\n    bool vis=false; \n    for(int i=0;i<G[cur].size();i++)\n    {\n        child=G[cur][i];\n        if(dfn[child])\n\t\t{\n\t\t\tif(child==fa&&!vis)vis=true;\n\t\t\telse low[cur]=min(low[cur],dfn[child]);\n\t\t}\n        if(!dfn[child])\n        {\n            dfs(child,cur);\n            if(dfn[cur]<low[child])add_edge(cur,child);\n            low[cur]=min(low[cur],low[child]);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<m;i++)scanf(\"%d%d\",&x,&y),G[x].push_back(y),G[y].push_back(x);\n    for(int i=1;i<=n;i++)if(!dfn[i])dfs(i,i);\n    sort(edge,edge+ans,cmp);\n    for(int i=0;i<ans;i++)printf(\"%d %d\\n\",edge[i].from,edge[i].to);\n    return 0;\n}\n```",
        "postTime": 1507636719,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "  \u4f5c\u4e3a\u6807\u7b7e\u515a\uff0c\u9996\u5148\u70b9\u5f00\u6807\u7b7e\uff1a\u6a21\u62df~~\u6ca1\u6bdb\u75c5~~ \u6700\u77ed\u8def~~\u60f3\u4e0d\u51fa\u6765~~ \u641c\u7d22~~\u8fd8\u884c~~ \u56fe\u8bba~~\u5e9f\u8bdd~~.\n  \n  \u4e8e\u662f\u60f3\u4e86\u60f3\u641c\u7d22\uff1a\u679a\u4e3e\u6bcf\u4e2a\u94c1\u8def\u88ab\u70b8\uff0c\u7136\u540edfs\u7531\u5404\u4e2a\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u770b\u80fd\u5426\u5230\u8fbe\u6bcf\u4e2a\u70b9\uff0c\u7136\u800c\u89c9\u5f97\u597d\u9ebb\u70e6\uff0c\u4e8e\u662f~~\u653e\u5f03~~\n  \n  \u63a5\u4e0b\u6211\u53c8\u60f3\u5230\u4e86\u5e76\u67e5\u96c6~~xjb \u778e\u9e21\u5df4~~\u7684\u505a\u6cd5\uff0cemm\uff0c\u5148\u679a\u4e3e\u4e00\u6761\u8fb9\u88ab\u70b8\uff0c\u7136\u540e\u5408\u5e76\u5176\u4ed6\u8fb9\u8fde\u7684\u70b9\uff0c\u770b\u662f\u5426\u6709\u70b9\u4e0d\u662f\u540c\u4e00\u4e2a\u7956\u5148\uff0c\u6709\u5c31\u76f4\u63a5NO\u4e86\u3002\n  \n  \u65f6\u95f4\u590d\u6742\u5ea6\u8c8c\u4f3c\u662fO\uff08m^2\uff09\u521a\u597d\u5361\u5230\uff0c~~\u7f8e\u6ecb\u6ecb~~\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint n,m,baba[151],b[151];\nstruct zhzs\n{\n    int x;\n    int y;\n}a[5001];\ninline bool zh(zhzs x,zhzs y)\n{\n    if(x.x==y.x)\n    return x.y<y.y;\n    return x.x<y.x;\n}//\u7ed3\u6784\u4f53\u6392\u5e8f\ninline int find(int x)//\u627e\u7238\u7238\uff08\u7956\u5148\uff09\n{\n    if(baba[x]==x)\n    return x;\n    return baba[x]=find(baba[x]);\n}\ninline void he(int x,int y)//\u5e76\u67e5\u96c6\u5408\u5e76\u64cd\u4f5c\n{\n    int x1=find(x),y1=find(y);\n    baba[y1]=baba[x1];\n}\nint main() \n{\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);//\u52a0\u901fcin cout\u7684\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>a[i].x>>a[i].y;\n        if(a[i].y<a[i].x)//\u4e0d\u8fd9\u6837\u8c8c\u4f3c\u6709\u4e9b\u6570\u636e\u8fc7\u4e0d\u4e86\n        swap(a[i].x,a[i].y);\n    }\n    sort(a+1,a+m+1,zh);//\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u7684a\uff0cb\u4ece\u5c0f\u5230\u5927\uff0c\u6240\u4ee5\u5148\u6392\u597d\u5e8f\n    for(int i=1;i<=m;i++)\n    {\n        int f=0;\n        for(int j=1;j<=n;j++)\n        baba[j]=j;//\u521d\u59cb\u5316\n        for(int j=1;j<=m;j++)\n        {\n            if(j!=i)//\u6a21\u62df\u70b8\u94c1\u8def\n            he(a[j].x,a[j].y);//\u5408\u5e76\u5176\u4ed6\u8fb9\n        }\n        for(int j=2;j<=n;j++)\n        if(baba[find(j)]!=baba[find(j-1)])//\u53ea\u8981\u6709\u7956\u5148\u4e0d\u4e00\u6837\u7684\u5c31\u6709\u95ee\u9898\n        {\n            cout<<a[i].x<<\" \"<<a[i].y<<endl;\n            break;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1533083523,
        "uid": 58417,
        "name": "\u55ef\u3002",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u6b64\u9898\u53ef\u7528\u5e76\u67e5\u96c6\u6c42\u89e3\n\n\u56e0\u4e3a\u5e76\u67e5\u96c6\u53ef\u7528\u6765\u5feb\u901f\u5224\u65ad\u56fe\u4e2d\u7684\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u662f\u5426\u8fde\u901a\n\n\u601d\u8def\uff1a\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u5220\u53bb\u8fd9\u6761\u8fb9\u540e\u5c06\u5176\u4f59\u8fb9\u7684\u6240\u6709\u8282\u70b9\u52a0\u5165\u5e76\u67e5\u96c6\uff0c\u5224\u65ad\u6b64\u65f6\u56fe\u662f\u5426\u8fde\u901a\uff0c\u5982\u679c\u4e0d\u8fde\u901a\uff0c\u5219\u6b64\u8fb9\u6ee1\u8db3\u9898\u610f\n\n\u8fc7\u7a0b\u4e2d\u6ce8\u610f\u521d\u59cb\u5316\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N=151,M=5001;\nint n,m,par[N],rank[N],tot;\nstruct edge{\n    int u,v;\n}e[M];\nedge a[M];\nbool cmp(const edge &a,const edge &b)    //\u8c03\u7528c++\u4e2d\u7684sort\u51fd\u6570\u5c06\u8fb9\u6309\u9898\u76ee\u8981\u6c42\u8fdb\u884c\u6392\u5e8f \n{                                        //\u81ea\u5b9a\u4e49cmp\u51fd\u6570 \uff0c\u5177\u4f53\u539f\u7406\u662f\u4ec0\u4e48\u6211\u4e5f\u8bf4\u4e0d\u6e05 \n    if(a.u<b.u)return 1;\n    if(a.u>b.u)return 0;\n    return a.v<b.v;\n}\nint find(int x)                            //\u67e5\u627e\u7ed3\u70b9 x \u7684\u6839 \n{\n    if(par[x]==x)return x;\n    return par[x]=find(par[x]);            //\u8def\u5f84\u538b\u7f29 \n}\nvoid unite(int x,int y)                    //\u5c06 x \u548c y \u5e76\u5165\u540c\u4e00\u96c6\u5408 \n{\n    x=find(x);y=find(y);\n    if(rank[x]<rank[y])par[x]=y;\n    else{\n        par[y]=x;\n        if(rank[x]==rank[y])++rank[x];\n    }\n}\nvoid check(int t)        //\u5220\u9664\u7b2ct\u6761\u8fb9\u56fe\u662f\u5426\u4e0d\u8fde\u901a \n{\n    int i,j,k,u,v,reap;\n    memset(rank,0,sizeof(rank));//\u521d\u59cb\u5316 \n    for(i=1;i<=n;i++) par[i]=i;//\u521d\u59cb\u5316 \n    for(i=1;i<=m;i++)if(i!=t&&find(e[i].u)!=find(e[i].v))unite(e[i].u,e[i].v);\n    //\u82e5\u7b2c i(i!=t)\u6761\u8fb9\u7684\u4e24\u4e2a\u7ed3\u70b9\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u5185\uff0c\u5219\u5c06\u8fd9\u4e24\u70b9\u5e76\u5165\u540c\u4e00\u96c6\u5408 \n    for(reap=find(1),i=2;i<=n;i++)if(find(i)!=reap)//\u7ed3\u70b9 i \u4e0d\u5728\u96c6\u5408\u5185\uff0c\u5373\u56fe\u662f\u4e0d\u8fde\u901a\u7684 \n    {\n        a[++tot]=e[t];        //\u7b54\u6848\u8fb9\uff0ctot:\u7b26\u5408\u6761\u4ef6\u7684\u8fb9\u6570 \n        break;                //\u9000\u51fa\u5faa\u73af \n    }\n}\nint main()\n{\n    int i,j,k,u,v,t;\n    //freopen(\"station1.in\",\"r\",stdin);\n    scanf(\"%d%d\",&n,&m);//\u8bfb\u5165\u6570\u636e \n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&e[i].u,&e[i].v);//\u8bfb\u5165\u6570\u636e \n        if(e[i].u>e[i].v)t=e[i].u,e[i].u=e[i].v,e[i].v=t;//\u9884\u5148\u5c06a\u548cb\u6309\u8981\u6c42\u4ea4\u6362 \n    }\n    for(i=1;i<=m;i++)check(i);    //\u679a\u4e3e\u6bcf\u6761\u8fb9\uff0c\u770b\u5220\u9664\u540e\u56fe\u662f\u5426\u4e0d\u8fde\u901a\n    sort(a+1,a+tot+1,cmp);        //\u5c06\u8fb9\u6309\u8981\u6c42\u6392\u5e8f \n    for(i=1;i<=tot;i++)printf(\"%d %d\\n\",a[i].u,a[i].v);//\u8f93\u51fa\u7b54\u6848 \n    return 0;\n}\n```",
        "postTime": 1477654352,
        "uid": 23798,
        "name": "cz2zxy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u90bb\u63a5\u8868+SPFA+sort\u6392\u5e8f==AC\n---\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u53ea\u70b8\u4e00\u6b21\uff0c\u6240\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u70b9\u70b8\u540e\u8fd8\u80fd\u5426\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\uff0c\u4e0d\u80fd\u7684\u8bdd\u5c31\u662f\u4e00\u79cd\u7b54\u6848\u3002\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,h[100001],x[10001],k,y[10001],num,vis[100001],ans[100001];\nstruct p2p{\n    int a1,a2;\n}a[200001];\nstruct pp{\n    int nxt,dis,to;\n}e[2000001];\nbool cmp(p2p l,p2p r)\n{\n     if(l.a1==r.a1)\n     return l.a2<r.a2;\n     else\n     return l.a1<r.a1;\n}\nvoid add(int f,int to)\n{\n    e[++num].nxt=h[f];\n    e[num].to=to;\n    e[num].dis=1;\n    h[f]=num;\n}//\u90bb\u63a5\u8868\nvoid dfs(int x,int y)\n{\n    memset(ans,127,sizeof(ans));\n    memset(vis,0,sizeof(vis));\n    queue<int>q;\n    q.push(x);\n    ans[x]=0;\n    vis[x]=1;\n    while(!q.empty())\n    {\n        int w=q.front();\n        q.pop();\n        vis[w]=0;\n        for(int i=h[w];i;i=e[i].nxt)\n        {\n            if(e[i].to==y&&w==x)\n            continue;\n            if(ans[e[i].to]>ans[w]+e[i].dis)\n            {\t\n                ans[e[i].to]=ans[w]+e[i].dis;\n                if(vis[e[i].to]==0)\n                {\n                    vis[e[i].to]=1;\n                    q.push(e[i].to);\n                }\n            }\n        }\n    }//SPFA\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>x[i]>>y[i];\n        add(x[i],y[i]);\n        add(y[i],x[i]);\n    }\n    for(int\ti=1;i<=m;i++)\n    {\n        dfs(x[i],y[i]);\n        if(ans[y[i]]>100000000)\n        {\n            k++;\n            a[k].a1=min(x[i],y[i]);\n            a[k].a2=max(y[i],x[i]);\n        }\n    }//\u679a\u4e3e\n    sort(a+1,a+1+k,cmp);//\u6392\u5e8f\n    for(int i=1;i<=k;i++)\n    cout<<a[i].a1<<\" \"<<a[i].a2<<endl;\n}\n```",
        "postTime": 1526397821,
        "uid": 87446,
        "name": "zztlen",
        "ccfLevel": 0,
        "title": "P1656 \u70b8\u94c1\u8def"
    },
    {
        "content": "## \u9686\u91cd\u4ecb\u7ecd\uff1atarjan\u7b97\u6cd5\u6c42\u53cc\u8fde\u901a\u5206\u91cf\uff08\u65e0\u5411\u56fe\u7f29\u70b9\uff09\u3002\n\n### \u80cc\u666f\n\n\u628a\u9898\u89e3\u7ffb\u4e86\u4e2a\u5e95\u671d\u5929\uff0c\u8fd8\u6ca1\u6709\u8fd9\u79cd\u65b9\u6cd5\u7684\uff0c\u6240\u4ee5\u5c31\u6765\u8865\u4e00\u53d1\u3002\n\n\u5728\u505a\u8fd9\u9053\u9898\u4e4b\u524d\uff0c\u6211\u521a\u505a\u5b8c\u4e86\u53e6\u5916\u4e00\u9053\u53cc\u8fde\u901a\u5206\u91cf\u7684\u9898\u76ee\uff1a\n\n[P2860 [USACO06JAN]\u5197\u4f59\u8def\u5f84Redundant Paths](https://www.luogu.org/problemnew/show/P2860)\n\n\u4e00\u8bfb\u9898\uff0c\u4ed6\u4eec\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\uff1a\n\n\t\u5efa\u7684\u56fe\u90fd\u662f\u65e0\u5411\u56fe\uff0c\u800c\u4e14\u90fd\u662f\u6c42\u53cc\u8fde\u901a\u5206\u91cf\u3002\n    \n    \u53ea\u4e0d\u8fc7\u90a3\u4e00\u9053\u9898\u6c42\u7684\u662f\u53cc\u8fde\u901a\u5206\u91cf\u7684\u6570\u76ee\uff0c\u8fd9\u4e00\u9053\u9898\u662f\u6c42\u53cc\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u7684\u8fb9\u3002\n    \n### \u5173\u4e8e\u53cc\u8fde\u901a\u5206\u91cf\n\n\u53ef\u80fd\u6709\u7684\u540c\u5b66\u8fd8\u4e0d\u77e5\u9053\u53cc\u8fde\u901a\u5206\u91cf\u662f\u4ec0\u4e48\uff0c\u6211\u5728\u8fd9\u91cc\u5c31\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u901a\u5e38\u7684tarjan\u7b97\u6cd5\uff0c\u662f\u5728\u6709\u5411\u56fe\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u901a\u8fc7\u7f29\u70b9\u5c06\u4e00\u4e2a\u6709\u5411\u6709\u73af\u56fe\u53d8\u6210\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09~~\u8fd8\u4e0d\u77e5\u9053tarjan\u7b97\u6cd5\u7684\u540c\u5b66\u8bf7\u51fa\u95e8\u53f3\u8f6c\u767e\u5ea6~~\n\n\u800c\u6709\u5411\u65e0\u73af\u56fe\u4e0a\u7684\u6bcf\u4e00\u4e2a\u201c\u70b9\u201d\u5c31\u662f\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u3002\n\n\u4f46\u662f\u5982\u679c\u5728\u6709\u5411\u56fe\u4e0a\uff0c\u666e\u901a\u7684tarjan\u7b97\u6cd5\u5c31\u4e0d\u884c\u4e86\u3002\n\n~~\u4f60\u95ee\u6211\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u662f\u53cc\u5411\u5efa\u8fb9\u554a\uff0c\u666e\u901a\u7684tarjan\u4f1a\u9677\u5165\u6b7b\u5faa\u7684~~\n\n#### \u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\n\n\u7528vis\u6570\u7ec4\u6253\u6807\u8bb0\u663e\u7136\u4e0d\u884c\uff0c\u4f1a\u4e0e\u5df2\u6709\u7684\u6807\u8bb0\u91cd\u590d\u3002\n\n\u90a3\u4e48\u6211\u53ea\u5efa\u4e00\u6761\u8fb9\u5462\uff1f\n\n```cpp\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d\",&x,&y);\n        g[x].push_back(y);//\u6211\u53ea\u5efa\u4e86\u4e00\u6b21\u8fb9\n    }\n```\n\u7136\u540e\u4f60\u5c31\u4f1a\u6302\u6389\u2026\u2026\n\n![](https://cdn.luogu.com.cn/upload/pic/60670.png )\n\n#### \u6240\u4ee5\uff0c\u5c31\u8be5\u6211\u4eec\u7684\u6539\u826ftarjan\u51fa\u573a\u5566\uff01\uff08\u54b3\u54b3\uff0c\u6b63\u6587\uff09\n\n\t\n\t\u89e3\u51b3\u7684\u65b9\u6cd5\u5c31\u662f\uff0c\u5f53\u540c\u4e00\u6761\u65e0\u5411\u8fb9\u7684\u4e24\u6761\u6709\u5411\u8fb9\u7684\u5176\u4e2d\u4e00\u6761\u8d70\u8fc7\u65f6\uff0c\u628a\u53e6\u4e00\u6761\u540c\u65f6\u8d4b\u503c\u4e3a\u8d70\u8fc7\uff08\u53cc\u5411\u8fb9\u6807\u8bb0\uff09\u3002\u8fd9\u9700\u8981\u4e00\u4e2a\u795e\u5947\u7684\u516c\u5f0f\uff1a^1\u3002 \u4e3e\u4f8b\u6765\u8bf4\uff0c0^1=1,1^1=0; 2^1=3,3^1=2; 4^1=3,3^1=4......\u76f8\u4fe1\u5927\u5bb6\u5df2\u7ecf\u90fd\u53d1\u73b0\u4e86\u89c4\u5f8b\u3002\u800c\u5efa\u8fb9\u7684\u65f6\u5019\uff0c\u4e00\u6761\u65e0\u5411\u8fb9\u7684\u4e24\u6761\u6709\u5411\u8fb9\u521a\u597d\u76f8\u5dee1\uff0c\u95ee\u9898\u89e3\u51b3\uff01\n\n\t\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u6211\u7684num\uff08\u8fb9\u7684\u521d\u59cb\u503c\uff09\u8d4b\u503c\u4e3a1\uff0c\u8fd9\u662f\u7528\u6765\u51d1\u6570\u5b57\u7684\u3002\u6240\u4ee5\u8fb9\u662f\u4ece\u7b2c2\uff0c3\u6761\uff1b\u7b2c4,5\u6761......\u8fd9\u6837\u4e0b\u53bb\u7684\uff080,1\u6761\u52a0\u8fdb\u53bb\u5e94\u8be5\u4e5f\u53ef\u4ee5\uff0c\u4e5f\u53ef\u4ee5\u8bd5\u8bd5\uff09\n    \n\u5450\uff0c\u8fd9\u5c31\u662f\u89e3\u51b3\u7684\u529e\u6cd5\uff01\n\n```cpp\n//\u5728tarjan\u91cc\u957f\u8fd9\u6837\n\nfor(int i=head[u];i;i=e[i].next )\n        if(!sign[i]){\n            sign[i]=true,sign[i^1]=true;//sign\u6570\u7ec4\u7528\u4e8e\u6807\u8bb0\u8fb9\u662f\u5426\u8d70\u8fc7\n            int v=e[i].v ;\n            if(!dfn[v]){\n                tarjan(v);\n                if(low[v]<low[u])low[u]=low[v];\n            }\n            else {\n                if(vis[v]){\n                    if(low[v]<low[u])low[u]=low[v];\n                }\n            }\n    }\n```\n\n\n\u53ef\u80fd\u6709\u7684\u540c\u5b66\u53c8\u4f1a\u6709\u7591\u95ee\u4e86\uff1a\u8d70\u8fc7\u7684\u8fb9\u6807\u8bb0\uff0c\u96be\u9053\u548c\u53ea\u5efa\u4e00\u6761\u8fb9\u4e0d\u662f\u4e00\u6837\u5417\uff1f\u6bcf\u6761\u8fb9\u90fd\u904d\u5386\u4e86\u4e00\u6b21\u554a\n\n\u8fd9\u4e2a\u5c31\u6d89\u53ca\u5230tarjan\u81ea\u8eab\u7684dfs\u5e8f\u7684\u95ee\u9898\u4e86\u3002\u4e0d\u4fe1\u7684\u8bdd\u5927\u5bb6\u53ef\u4ee5\u624b\u6a21\u4e00\u4e0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u4ed6\u4eec\u5b9e\u9645\u4e0a\u904d\u5386\u7684\u987a\u5e8f\u4e0d\u4e00\u6837\u3002\u5f53\u4e14\u4ec5\u5f53\u91c7\u7528\u6807\u8bb0\u6cd5\uff0c\u90a3\u4e48\u904d\u5386\u7684\u987a\u5e8f\u662f\u4e25\u683c\u7684dfs\u5e8f\u800c\u4e14\u4fdd\u8bc1\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6240\u6709\u70b9\u4e00\u5b9a\u5728\u540c\u4e00\u4e2a\u70b9\u96c6\uff08color\uff09\u5185\u3002\u8fd9\u5c31\u662f\u53cc\u5411\u8fb9\u6807\u8bb0\u7684\u6b63\u786e\u6027\u7684\u8bc1\u660e\u3002\n\n### \u5173\u4e8e[P1656 \u70b8\u94c1\u8def](https://www.luogu.org/problemnew/show/P1656)\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u6211\u5df2\u7ecf\u5728\u4e00\u5f00\u59cb\u65f6\u8bf4\u8fc7\u4e86\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\n\n![](https://s2.ax1x.com/2019/06/11/V2iSPK.md.jpg)\n\n\u90a3\u4e48\u663e\u800c\u6613\u89c1\u7684\uff0c\u5982\u679cuim\u5c06\u519b\u60f3\u8981\u5207\u65ad\u4e00\u6761\u80fd\u4f7f\u4e24\u4e2a\u57ce\u5e02\u5206\u79bb\u7684\u94c1\u8def\uff0c\u90a3\u4e48\u5207\u65ad\u7684\u90a3\u4e00\u6761\u5e94\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a\n\n#### \u5fc5\u987b\u662f\u8fde\u63a5\u4e24\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u7684\u8fb9\n\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u5c31\u662f\u8fde\u63a5\u4e24\u4e2a\u84dd\u5708\u7684\u8fb9\uff08 1 ,2 \u548c 5 ,6 \uff09\n\n\u8fd9\u6761\u8fb9\u662f\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u67e5\u627e\u7684\u3002\n\n```cpp\n   \nint k=1;\nfor(int i=1;i<=n;i++){//\u679a\u4e3e\u6bcf\u4e2a\u70b9\n        for(int j=head[i];j;j=e[j].next ){\n            int v=e[j].v ;//\u679a\u4e3e\u6bcf\u4e2a\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u70b9\n            if(color[v]!=color[i]){//\u5047\u5982\u8fd9\u4e24\u70b9\u4e0d\u5728\u540c\u4e00\u53cc\u8fde\u901a\u5206\u91cf\u5185\uff0c\u5219\u4ed6\u4eec\u7684\u8fde\u8fb9\u4e00\u5b9a\u662f\u9898\u76ee\u8981\u6c42\u7684\u8fb9\n            \tedge_ans[k].from =(v<i?v:i);//edge_ans\u7528\u4e8e\u5b58\u9898\u76ee\u8981\u6c42\u7684\u8fb9\n            \tedge_ans[k++].to =(v>i?v:i); \n            }\n        }\n    }\n```\n\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u627e\u51fa\u6211\u4eec\u6240\u8981\u6c42\u7684\u8fb9\u4e86\u3002\n\n#### \u4f46\u662f\uff0c\u4f60\u4ee5\u4e3a\u7ed3\u675f\u4e86\u5417\uff1f\u8fd8\u6ca1\u6709\uff01\n\n\u6ce8\u610f\u6211\u4eec\u662f\u53cc\u5411\u5efa\u8fb9\u7684\uff0c\u6240\u4ee5\u4f1a\u6709\u4e24\u4e2a\u540c\u6837\u7684\u8f93\u51fa\u3002\u5982\uff1a\n\n\t1 2\n    1 2\n    5 6\n    5 6\n    \n\u6211\u662f\u5728\u8f93\u51fa\u65f6\u5904\u7406\u6389\u7684\u3002\n\n\u53e6\u5916\u6211\u4eec\u7684k\u591a\u52a0\u4e86\u4e00\uff0c\u5728\u6392\u5e8f\u65f6\u8981\u51cf\u53bb\u3002\n\n```cpp\n    sort(edge_ans+1,edge_ans+k-1,cmp);\n    for(int i=1;i<k;i+=2)printf(\"%d %d\\n\",edge_ans[i].from ,edge_ans[i].to );//i+=2,\u5947\u602a\u7684\u5904\u7406\u65b9\u5f0f\uff08\u4f46\u662f\u6709\u7528\uff09\n```\n\n~~\uff08\u6211\u662f\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u6211\u88ab\u8fd9\u4e9b\u5c0f\u7ec6\u8282\u5361\u4e86\u5341\u51e0\u5206\u949f\u7684\uff09~~\n\n#### \u7ec6\u8282\u771f\u7684\u975e\u5e38\u3001\u975e\u5e38\u3001\u975e\u5e38\u91cd\u8981\uff01\n\n### \u4ee5\u4e0b\u662fAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100010\nusing namespace std;\nstruct edge{\n    int u,v,next;\n}e[maxn];//\u7ed3\u6784\u4f53\u5b58\u8fb9\nint sum=1,head[maxn];\nvoid add(int u,int v){\n    sum+=1;\n    e[sum].u =u;\n    e[sum].v =v;\n    e[sum].next =head[u];\n    head[u]=sum;\n}//\u90bb\u63a5\u8868\u5b58\u56fe\nint deep,num,top,low[maxn],dfn[maxn],stac[maxn],color[maxn];\nbool vis[maxn],sign[maxn];\nvoid tarjan(int u){\n    deep+=1;\n    dfn[u]=deep;\n    low[u]=deep;\n    top++;\n    vis[u]=true;\n    stac[top]=u;\n    for(int i=head[u];i;i=e[i].next )\n        if(!sign[i]){\n            sign[i]=true,sign[i^1]=true;\n            int v=e[i].v ;\n            if(!dfn[v]){\n                tarjan(v);\n                if(low[v]<low[u])low[u]=low[v];\n            }\n            else {\n                if(vis[v]){\n                    if(low[v]<low[u])low[u]=low[v];\n                }\n            }\n    }\n    if(low[u]==dfn[u]){\n        num+=1;\n        vis[u]=false;\n        color[u]=num;\n        while(stac[top]!=u){\n            color[stac[top]]=num;\n            vis[stac[top]]=false;\n            top--;\n        }\n        top--;\n    }\n}//\u201c\u6539\u826f\u201dtarjan\nint n,m,ans;\nstruct edge_out{\n\tint from,to;\n}edge_ans[maxn];//\u7ed3\u6784\u4f53\u5b58\u7b54\u6848\nbool cmp(edge_out a,edge_out b){\n\tif(a.from ==b.from )return a.to <b.to ;\n\telse return a.from <b.from ;\n}//\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    int x,y;\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d\",&x,&y);\n        add(x,y);\n        add(y,x);\n    }\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])tarjan(i);\n    \n    int k=1;\n    for(int i=1;i<=n;i++){\n        for(int j=head[i];j;j=e[j].next ){\n            int v=e[j].v ;\n            if(color[v]!=color[i]){\n            \tedge_ans[k].from =(v<i?v:i);\n            \tedge_ans[k++].to =(v>i?v:i); \n            }\n        }\n    }\n    sort(edge_ans+1,edge_ans+k-1,cmp);\n    for(int i=1;i<k;i+=2)printf(\"%d %d\\n\",edge_ans[i].from ,edge_ans[i].to );\n    return 0;//\u5b8c\u7ed3\u6563\u82b1\uff01\n}\n```\n\u6084\u54aa\u54aa\u5730\u8bf4\u4e00\u53e5\uff1a\u7ba1\u7406\u5458\u5927\u5927\u8f9b\u82e6\u5566\uff0c\u6c42\u901a\u8fc7\uff01",
        "postTime": 1560265387,
        "uid": 126621,
        "name": "HRLYB",
        "ccfLevel": 6,
        "title": "P1656 \u70b8\u94c1\u8def\uff08\u53cc\u8fde\u901a\u5206\u91cf\uff09"
    },
    {
        "content": "\u6709\u4e86kkk\u7684\u9898\u89e3\u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u8fc7\u4e0d\u8fc7\u5f97\u4e86  \n~~\u8fd8\u662f\u5f97\u8e6d\u4e00\u8e6d~~  \n\u663e\u7136\u6570\u636e\u8303\u56f4\u5141\u8bb8\u4f7f\u7528\u679a\u4e3e\u7684\u65b9\u6cd5  \n\u5f53\u7136tarjan\u7b97\u6cd5\u80fd\u66f4\u5feb\u6c42\u51fa\u6865\u8fb9  \n\u4e3a\u4e86\u6ee1\u8db3\u9898\u76ee\u7684\u8f93\u51fa\u8981\u6c42  \n\u5bf9\u6865\u8fb9\u6392\u5e8f\u4e00\u4e0b\u5373\u53ef  \n\u4e0a\u4ee3\u7801 \n```cpp\n#include<iostream>\n#include<cstdio>\n#define N 160\n#define\tM 10010\n#include<algorithm>\nusing namespace std;\nint n,m,tot,cnt,dfn[N],head[N],num,tx,ty,low[N];\nstruct Edge{\n\tint u,v,next;\n}edge[M];\nstruct Bridge{\n\tint u,v;  \n}bridge[M];\nbool cmp1(Bridge s1,Bridge s2){\n\tif(s1.u==s2.u)return s1.v<s2.v;\n\treturn s1.u<s2.u;\n}\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return  x*f;\n}\ninline void add(int x,int y){edge[++tot].u=x;edge[tot].v=y;edge[tot].next=head[x];head[x]=tot;}\nvoid tarjan(int x,int in_edge){\n\tdfn[x]=low[x]=++num;\n\tfor(int i=head[x];i;i=edge[i].next){\n\t\tint y=edge[i].v;\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y,i);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif(dfn[x]<low[y]){\n\t\t\t\tif(x>y)tx=y,ty=x;\n\t\t\t\telse tx=x,ty=y;  //\u4fdd\u8bc1u<v\n\t\t\t\tbridge[++cnt].u=tx;bridge[cnt].v=ty;\n\t\t\t}\n\t\t}\n\t\telse if(i!=(in_edge^1))\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t}\n}\nint main()\n{\n\tn=read(),m=read();tot=1;\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tadd(x,y);add(y,x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i])tarjan(i,0);\n\tsort(bridge+1,bridge+1+cnt,cmp1);//\u5bf9\u6865\u8fb9\u6392\u5e8f\n\tfor(int i=1;i<=cnt;i++)\n\t\tprintf(\"%d %d\\n\",bridge[i].u,bridge[i].v);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1555061728,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "###Kruskal\u7279\u6b8a\u751f\u6210\u6811###\n\n**\u601d\u8def\uff1a**\u5f00\u59cb\u4ee5\u4e3a\u8fd9\u662f\u9053\u9001\u5206\u9898\u6728\uff0c\u76f4\u63a5\u7edf\u8ba1\u5165\u5ea6\u4e3a0\u7684\u4e0d\u5c31\u597d\u4e86\u5417\uff1f\u7ed3\u679c\u64b8\u597d\u4ee3\u7801\u4e00\u4ea4\u53ea\u5bf9\u4e861\u4e2a\u70b9\uff0c\u518d\u4ed4\u7ec6\u770b\u9898\uff0c\u53d1\u73b0\u4e0d\u80fd\u8fd9\u6837\u505a\u3002\u9898\u76ee\u8981\u6c42\u7684\u5176\u5b9e\u662f\u6709\u5411\u56fe\u4e2d\u7684\u5272\u8fb9\uff0c\u6b63\u89e3\u5e94\u8be5\u662fTarjan\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u6570\u636e\u5982\u6b64\u4e4b\u5c0f\uff0c\u76f4\u63a5\u66b4\u529b\u641c\u7d22\u6216\u8005\u5404\u79cd\u5947\u6280\u6deb\u5de7\u6765\u505a\u3002\u6211\u8fd9\u91cc\u7528\u7684\u662f\u7c7b\u4f3c\u4e8eKruskal\u7684\u7b97\u6cd5\u6765\u505a\u7684\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u8fb9\u53cc\u5173\u952e\u5b57\u6392\u5e8f(\u56e0\u4e3a\u8f93\u51fa\u8981\u6c42)\uff0c\u7136\u540e\u679a\u4e3e\u5220\u9664\u7684\u4e00\u6761\u8fb9\uff0c\u6309\u7167Kruskal\u7684\u65b9\u6cd5\u53bb\u505a\u770b\u662f\u5426\u80fd\u751f\u6210\u751f\u6210\u6811\uff0c\u82e5\u4e0d\u80fd\u5219\u8f93\u51fa\u4e00\u4e2a\u7b54\u6848(\u8c03\u8bd5\u5e76\u67e5\u96c6\u8c03\u4e86\u6211\u597d\u4e45\uff0c\u592a\u83dc\u4e86\uff5e\uff5e)\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(m2)\uff0c\u5b8c\u5168\u80fd\u8fc7\u3002\n\n**\u4ee3\u7801\uff1a**\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\nusing namespace std;\n#define ll long long\n#define il inline\n#define inf 233333333\nint n,m,fla,fa[250],tot;\nstruct edge{\nint a,b;\n}e[5200];\nil bool cmp(edge a,edge b)\n{\n    if(a.a<b.a)return 1;\n    if(a.a==b.a&&a.b<b.b)return 1;\n    return 0;\n}\nil int find(int x)\n{\n    if(fa[x]!=x)fa[x]=find(fa[x]);\n    return fa[x];\n}\nil void unionn(int x,int y)\n{\n    int a=find(x),b=find(y);\n    if(a!=b)fa[a]=b,tot++;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n    scanf(\"%d%d\",&e[i].a,&e[i].b);\n    if(e[i].a>e[i].b)swap(e[i].a,e[i].b);\n    }\n    sort(e+1,e+m+1,cmp);\n    for(int i=1;i<=m;i++)\n    {\n        tot=0;\n        for(int j=1;j<=n;j++)fa[j]=j;\n        for(int j=1;j<=m;j++){\n        if(i!=j)unionn(e[j].a,e[j].b);\n        if(tot==n-1)break;\n        }\n        if(tot!=n-1)printf(\"%d %d\\n\",e[i].a,e[i].b);\n    }\n    return 0;\n}\n```",
        "postTime": 1509956572,
        "uid": 44000,
        "name": "\u6d45\u8272\u8c03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "# \u672c\u9898\u6b63\u89e3\uff1aDFS\u6c42\u6865\n\u6240\u8c13\u6865\uff0c\u5c31\u662f\u65e0\u5411\u56fe\u4e2d\u5982\u679c\u5220\u53bb\u8fd9\u6761\u8fb9\u5c31\u4f1a\u4f7f\u56fe\u4e0d\u8fde\u901a\u7684\u8fb9\u3002\n\n\u53e6\u5916\uff0c\u5173\u4e8elambda\u8868\u8fbe\u5f0f\u8be6\u89c1[\u8fd9\u91cc](https://msdn.microsoft.com/zh-cn/library/dd293608.aspx)\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ninline int read(){\t//\u5feb\u8bfb\n\tchar c;\n\twhile((c=getchar())<48||c>57);\n\tint ret=c-48;\n\twhile((c=getchar())>47&&c<58) ret=ret*10+c-48;\n\treturn ret;\n}\nstruct edge{\n    int x,y;\n};\nint n,m,cnt,pre[200];\nvector<int> g[200];\nvector<edge> ans;\t//\u8bb0\u5f55\u7ed3\u679c\nint dfs(int u,int fa){\t//DFS\u6c42\u6865\n    int lowu=pre[u]=++cnt;\n    for(auto v:g[u]) //\u7b49\u540c\u4e8e for(int i=0;i<g[u].size();i++){int v=g[u][i];/*...*/}\n    \tif(!pre[v]){\n            int lowv=dfs(v,u);\n            lowu=min(lowu,lowv);\n            if(lowv>pre[u]) ans.push_back(u>v?edge{v,u}:edge{u,v});\t//\u7f16\u53f7\u5c0f\u7684\u653e\u524d\u9762\n        }else if(pre[v]<pre[u]&&v!=fa) lowu=min(lowu,pre[v]);\n    return lowu;\n}\nint main(){\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<=m;i++){\t//\u5efa\u56fe\n        int x=read(),y=read();\n        g[x].push_back(y);\n        g[y].push_back(x);\n\t}\n\tdfs(1,-1);\t//\u6c42\u6865\n\tsort(ans.begin(),ans.end(),[&](const edge& a,const edge& b){return a.x<b.x||a.x==b.x&&a.y<b.y;});\t//lambda\u8868\u8fbe\u5f0f\uff0c\u8fd9\u91cc\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u51fd\u6570\n\tfor(auto i:ans) printf(\"%d %d\\n\",i.x,i.y);\n\treturn 0;\n}\n```",
        "postTime": 1534602269,
        "uid": 25279,
        "name": "\u5317\u6d77_Beihai",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u8fd9\u9898\u8303\u56f4\u597d\u5c0f\u3002\u3002\u30021\u4ebf\u591a\u7684\u590d\u6742\u5ea6\u5c45\u7136\u80fd\u8fc7\u3002\u3002\n\n\u5165\u6b63\u9898\n\n\u770b\u5230\u697c\u4e0b\u5927\u4f6c\u4eec\u7684\u9ad8\u6df1\u7b97\u6cd5\uff0c\u672c\u849f\u84bb\u81ea\u53f9\u4e0d\u5982\n\n\u6211\u7528\u7684\u65b9\u6cd5\u662fBFS\n\n\u6a21\u62df\u6bcf\u4e00\u6761\u8def\u90fd\u70b8\u4e00\u6b21\u7684\u60c5\u51b5\uff0c\u7528BFS\u5224\u65ad\u662f\u5426\u5168\u8054\u901a\n\n\u82e5\u4e0d\u4e3a\u5168\u8054\u901a\uff0c\u5219\u6b64\u8def\u53ef\u4ee5\u70b8\uff0c\u8f93\u51fa\n\n\u9053\u8def\u53ef\u5148\u6392\u5e8f\uff0c\u907f\u514d\u5b57\u5178\u5e8f\u7684\u95ee\u9898\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(mn^2)\uff0c\u53ef\u80fd\u7a7a\u8dd1\u7684\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5AC\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\u00b7\u00b7\u00b7pas\n\n\n\n```cpp\nvar a,b:array[1..5000] of longint;//\u9053\u8def\u4e0b\u6807\n    c:array[1..150,1..150] of longint;//\u56fe\n    d:array[1..150] of longint;//\u961f\u5217\n    f:array[1..150] of boolean;//\u5224\u65ad\u6bcf\u4e2a\u57ce\u5e02\u662f\u5426\u6709\u8def\u8054\u901a\n    i,j,n,m,head,tail:longint;\nprocedure sort(l,r: longint);//\u9053\u8def\u5feb\u6392\uff0c\u5728\u6b64\u4e0d\u591a\u53d9\u8ff0\nvar i,j,x,y,z: longint;\nbegin\n  i:=l;  j:=r;\n  x:=a[(l+r) div 2]; z:=b[(l+r) div 2];\n  repeat\n    while (a[i]<x)or(a[i]=x)and(b[i]<z) do inc(i);\n    while (x<a[j])or(a[j]=x)and(b[j]>z) do dec(j);\n           if not(i>j) then\n             begin\n                y:=a[i]; a[i]:=a[j]; a[j]:=y;\n                y:=b[i]; b[i]:=b[j]; b[j]:=y;\n                inc(i); j:=j-1;\n             end;\n         until i>j;\n         if l<j then sort(l,j);\n         if i<r then sort(i,r);\n      end;\nbegin\n  read(n,m);//\u8bfb\u5165\n  for i:=1 to m do\n  begin\n    read(a[i],b[i]);\n    if a[i]>b[i] then\n    begin\n      j:=a[i]; \n      a[i]:=b[i];\n      b[i]:=j;\n    end;//\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u65f6a<b,\u6240\u4ee5\u5728\u8fd9\u91cc\u9884\u5148\u8c03\u6362\u597d\n    c[a[i],b[i]]:=1;\n    c[b[i],a[i]]:=1;\n  end;\n  sort(1,m);//\u9053\u8def\u5feb\u6392\n  for i:=1 to m do\n  begin\n    f[1]:=false;\n    for j:=2 to n do f[j]:=true;//\u4ece\u7b2c\u4e00\u4e2a\u57ce\u5e02\u5f00\u59cbBFS\n    c[a[i],b[i]]:=0;\n    c[b[i],a[i]]:=0;//\u70b8\u6389\u94c1\u8def\n    head:=0; tail:=1;\n    d[1]:=1;//\u7b2c\u4e00\u4e2a\u57ce\u5e02\u5165\u961f\n    repeat\n      head:=head+1;\n      for j:=1 to n do\n      if (c[d[head],j]=1)and(f[j]) then//\u662f\u5426\u6709\u8def\u901a\u5411\u5176\u4ed6\u57ce\u5e02\uff0c\u82e5\u6709\u8def\uff0c\u5219\u57ce\u5e02\u5165\u961f\n      begin\n        f[j]:=false;//\u57ce\u5e02get\n        tail:=tail+1;//\u5c3e\u6307\u9488+1\n        d[tail]:=j;//\u5165\u961f\n      end;\n    until head>=tail;\n    for j:=1 to n do\n    if f[j] then break;\n    if f[j] then writeln(a[i],' ',b[i]);//\u82e5\u6709\u57ce\u5e02\u6ca1\u6709\u904d\u5386\u5230\uff0c\u5219\u8f93\u51fa\u8fd9\u6761\u94c1\u8def\n    c[a[i],b[i]]:=1;\n    c[b[i],a[i]]:=1;//\u8865\u56de\u94c1\u8def\n  end;\nend.\n```\n\u00b7\u00b7\u00b7\n\n\u4ee3\u7801\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u52ff\u55b7\n",
        "postTime": 1509180851,
        "uid": 38384,
        "name": "I_promise",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u539f\u672c\u662f\u6309\u7167\u6700\u77ed\u8def\u7684\u6807\u7b7e\u627e\u9898\u76ee\u6765\u505a\u7684\uff0c~~\u6ca1\u9519tarjan\u6211\u4e0d\u4f1a~~\n\n\u7136\u540e\u5c31\u627e\u5230\u4e86\u8fd9\u4e00\u9898\uff0c\u4f46\u662f\u4ed4\u7ec6\u770b\u770b\u9898\u76ee\u5176\u5b9e\u6211\u8ba4\u4e3a\u7528\u5e76\u67e5\u96c6\u6765\u505a\u4f1a\u66f4\u6613\u4e8e\u7406\u89e3\u7b80\u5355\u4e00\u70b9\u5427\u3002\n\n\u6211\u4eec\u6765\u5faa\u73af\u679a\u4e3e\u6bcf\u6761\u94c1\u8def\uff0c\u7136\u540e\u6bcf\u6b21\u628a\u9664\u4e86\u8fd9\u6761\u94c1\u8def\u5916\u7684\u5176\u4ed6\u94c1\u8def\u7684\u70b9\u90fd\u7528\u5e76\u67e5\u96c6\u5b58\u50a8\u8d77\u6765\u3002\u8fd9\u4e2a\u65f6\u5019\u518d\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u6839\u8282\u70b9\u4e3a\u81ea\u5df1\u7684\u7ed3\u70b9\u6709\u591a\u5c11\u4e2a\n\n**\u5982\u679c\u6839\u7ed3\u70b9\u7b49\u4e8e\u81ea\u5df1\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e2\uff08\u5219\u8bf4\u660e\u81f3\u5c11\u6709\u4e24\u9897\u5b50\u6811\uff09\uff0c\u5c31\u8bf4\u660e\u5982\u679c\u4e0d\u5c06\u8fd9\u6761\u94c1\u8def\u8fde\u8d77\u6765\u4f1a\u4ea7\u751f\u6709\u7ed3\u70b9\u4e0d\u80fd\u901a\u884c\uff0c**\n\n\u518d\u8f93\u51fa\u3002\n\n\u8f93\u51fa\u6709\u4e2a\u5751\u70b9<a,b>\uff0c\u9996\u5148\u8981\u6309\u7167a\u7684\u5927\u5c0f\u987a\u5e8f\uff0c\u5982\u679ca\u76f8\u540c\u5c31\u6309b\u7684\u5927\u5c0f\u987a\u5e8f\u3002\n\n\u800c\u4e14\u5982\u679ca>b\u5c31\u8981\u4ea4\u6362\u987a\u5e8f\uff0c\u4e0d\u4ea4\u6362\u987a\u5e8f\u53ea\u80fd\u62ff70\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n,a[1001][3],fa[1001],m,top;\nstruct CZP\n{\n\tint x,y;\n}c[10001];\nint find(int x)\n{\n\tif (x==fa[x])\n\treturn x;\n\telse\n\tfa[x]=find(fa[x]);\n\treturn fa[x];\n}  //\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\nint he(int x,int y)\n{\n\tint x1=find(x),y1=find(y);\n\tif (x1!=y1)\n\tfa[y1]=x1;\n}  //\u5e76\u67e5\u96c6\u5c06\u4e24\u4e2a\u5b50\u6811\u5408\u5e76\nvoid cs()\n{\n\tfor (int i=1;i<=n;i++)\n\tfa[i]=i;\n\treturn ;\n}\nint cmp(CZP a,CZP b)\n{\n\tif (a.x==b.x)\n\treturn a.y<b.y;\n\telse\n\treturn a.x<b.x;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t\tscanf(\"%d%d\",&a[i][0],&a[i][1]);\n\t\tfor (int i=1;i<=m;i++)\n\t\t{\n\t\t\tcs();\n\t\t    for (int j=1;j<=m;j++)\n\t\t    {\n\t\t\t\tif (i!=j)  //\u628a\u9664\u4e86\u662f\u5f53\u524d\u5b50\u6811\u7684\u6811\u5176\u4ed6\u7684\u90fd\u5408\u5e76\u8d77\u6765\n\t\t\t\t\the(a[j][0],a[j][1]);\n\t\t\t}\n\t\t\tint t=0;\n\t\t\tfor (int j=1;j<=n;j++)\n\t\t\tif (fa[j]==j)\n\t\t\tt++;\n\t\t\t\n\t\t\tif (t>=2)  //\u5982\u679c\u5b50\u6811\u6570\u91cf\u5927\u4e8e2\u5c31\u8bf4\u660e\u80af\u5b9a\u6709\u7ed3\u70b9\u6ca1\u6709\u8fde\u63a5\u5728\u4e00\u8d77\n\t\t\t{\n\t\t\t\tif(a[i][0]<a[i][1])\n\t\t    c[++top].x=a[i][0],c[top].y=a[i][1];\n\t\t    else\n\t\t     c[++top].x=a[i][1],c[top].y=a[i][0];  //\u6ce8\u610f<a,b>\u4e2da\u548cb\u7684\u5927\u5c0f\u987a\u5e8f\n\t\t}\n\t\t}\n\t\tsort(c+1,c+top+1,cmp);  //\u6309\u7167\u9898\u76ee\u8981\u6c42\u6392\u5e8f\u8f93\u51fa\n\t\tfor (int i=1;i<=top;i++)\n\t\tprintf(\"%d %d\\n\",c[i].x,c[i].y);\n\t\treturn 0;\n}\n```",
        "postTime": 1565072340,
        "uid": 24812,
        "name": "Sakura_Peng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\u7684\u9898\u76ee\n\n\u611f\u89c9\u4e0d\u9700\u8981\u4ec0\u4e48\u89e3\u91ca\uff0c\u5c31\u5728\u4ee3\u7801\u91cc\u6253\u4e00\u70b9\u6ce8\u91ca\n\n\u5e76\u67e5\u96c6\u505a\u6cd5\n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define F(i,j,k) for(ll i=j;i<=k;i++)\n#define F2(i,j,k) for(ll i=j;i>=k;i--)\nusing namespace std;\nconst ll N=155;\nconst ll M=5e3+5;\nll read(){//\u5feb\u8bfb \n\tll f=1,sum=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){sum=(sum<<1)+(sum<<3)+(ch^48);ch=getchar();}\n\treturn f*sum;\n}\nll n,m,fa[N],a[M],b[M],cnt;\nvoid cl(){F(i,1,n)fa[i]=i;}//\u5bf9\u7236\u4eb2\u6570\u7ec4\u8fdb\u884c\u6e05\u7a7a \nstruct node{ll x,y;}t[M];\nll find(ll x){if(x!=fa[x])fa[x]=find(fa[x]);return fa[x];}//\u627e\u7956\u5148 \nll cmp(node x,node y){if(x.x==y.x)return x.y<y.y;return x.x<y.x;}//\u6309a\u5927\u5c0f\u6392\u5e8f\uff0c\u82e5a\u76f8\u540c\u5219\u6309b\u6392 \nint main(){\n\tn=read();m=read();\n\tF(i,1,m){a[i]=read();b[i]=read();if(a[i]>b[i]){ll tt=a[i];a[i]=b[i];b[i]=tt;}} \n\tF(i,1,m){\n\t\tcl();\n\t\tF(j,1,m){//\u5e76\u67e5\u96c6 \n\t\t\tif(i!=j){\n\t\t\t\tll x=find(a[j]),y=find(b[j]);//\u627e\u7956\u5148 \n\t\t\t\tif(x!=y)fa[x]=y;//\u82e5\u7956\u5148\u4e0d\u540c\u5c31\u5408\u5e76 \n\t\t\t}\n\t\t}\n\t\tF(j,1,n-1)if(find(j)!=find(j+1)){t[++cnt].x=a[i];t[cnt].y=b[i];break;}//\u82e5\u6709\u70b9\u7684\u7956\u5148\u4e0d\u76f8\u540c\uff0c\u5219\u8fd9\u79cd\u60c5\u51b5\u662f\u5408\u6cd5\u7684 \n\t}\n\tsort(t+1,t+cnt+1,cmp);\n\tF(i,1,cnt)printf(\"%lld %lld\\n\",t[i].x,t[i].y);\n\treturn 0;\n}\n```\n\u7206\u641c\u505a\u6cd5\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define F(i,j,k) for(ll i=j;i<=k;i++)\n#define F2(i,j,k) for(ll i=j;i>=k;i--)\nusing namespace std;\nconst ll N=155;\nconst ll M=5e3+5;\nll read(){//\u5feb\u8bfb \n\tll f=1,sum=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){sum=(sum<<1)+(sum<<3)+(ch^48);ch=getchar();}\n\treturn f*sum;\n}\nll n,m,head[N],tot,a[M],b[M],v[N],cnt;\nstruct node{ll to,next;}t[M<<1];\nstruct node2{ll x,y;}jl[M];\nvoid add(ll x,ll y){t[++tot].to=y;t[tot].next=head[x];head[x]=tot;}//\u5efa\u8fb9 \nll cmp(node2 x,node2 y){if(x.x==y.x)return x.y<y.y;return x.x<y.x;}//\u6309a\u6392\u5e8f\uff0c\u82e5a\u76f8\u540c\u5219\u6309b\u6392\u5e8f \nvoid dfs(ll x,ll fath){v[x]=1;for(ll i=head[x];i;i=t[i].next)if(t[i].to!=fath&&!v[t[i].to])dfs(t[i].to,x);}//dfs\u904d\u5386 \nint main(){\n\tn=read();m=read();\n\tF(i,1,m){a[i]=read();b[i]=read();if(a[i]>b[i]){ll tt=a[i];a[i]=b[i];b[i]=tt;}}\n\tF(i,1,m){\n\t\tmemset(head,0,sizeof(head));memset(v,0,sizeof(v));tot=0;//\u6e05\u7a7a\u6570\u7ec4 \n\t\tF(j,1,m)if(i!=j)add(a[j],b[j]),add(b[j],a[j]);//\u5efa\u8fb9 \n\t\tdfs(1,1);//\u4ee51\u4e3a\u8d77\u59cb\u904d\u5386\u70b9 \n\t\tF(j,1,n)if(!v[j]){jl[++cnt].x=a[i];jl[cnt].y=b[i];break;}//\u82e5\u6709\u70b9\u672a\u88ab\u904d\u5386\u5230\uff0c\u5219\u8fd9\u79cd\u60c5\u51b5\u5408\u6cd5\n\t}\n\tsort(jl+1,jl+cnt+1,cmp);\n\tF(i,1,cnt)printf(\"%lld %lld\\n\",jl[i].x,jl[i].y);\n\treturn 0;\n}\n```\n",
        "postTime": 1572338241,
        "uid": 143815,
        "name": "\u5929\u4e0b\u81f3\u83dc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u9996\u5148\u7533\u660e\uff0c\u8fd9\u662f\u672c\u849f\u84bb\u5728\u6d1b\u8c37\u53d1\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff08\u5475\u5475\u5475\uff09\n\n\n------------\n\u8fd9\u662f\u4e00\u9053tarjan\u6c42\u6865\uff08\u5272\u8fb9\uff09\u7684\u9898\u76ee\uff0c\u4f46\u56e0\u4e3a\u6570\u636e\u7684\u539f\u56e0\uff0c\u597d\u50cf\u66b4\u529bdfs\u548c\u66b4\u529bspfa\u90fd\u80fd\u8fc7\u3002\n\n\u5148\u770btarjan\uff0c\u56e0\u4e3a\u4e4b\u524d\u7684\u9898\u89e3\u90fd\u5199\u5f97\u5f88\u8be6\u7ec6\u4e86\u6240\u4ee5\u76f4\u63a5\u7ed9\u51fa\u5173\u952e\u90e8\u5206\n```cpp\nvoid tarjan(int x,int fa)//\u5f53\u524d\u70b9\u548c\u5176\u7236\u8282\u70b9\n{\n    dfn[x]=index1;\n    low[x]=index1;\n    index1++;\n    for(int i=head[x];i!=-1;i=e[i].next)\n    {\n        if(!dfn[e[i].b])\n        {\n            tarjan(e[i].b,x);\n            low[x]=min(low[x],low[e[i].b]);\n            if(dfn[x]<low[e[i].b])//\u5224\u65ad\n            {\n            \tt++;\n            \tans[t].a=min(x,e[i].b);\n            \tans[t].b=max(e[i].b,x);\n            }\n        } else if(fa!=e[i].b) {\n        \tlow[x]=min(low[x],dfn[e[i].b]);\n    \t}\n    }\n}//\u7801\u98ce\u4e11\u964b\n```\n\n\u987a\u4fbf\u770b\u4e00\u770b\u590d\u6742\u5ea6O\uff08n+m\uff09\u548c\u65f6\u95f43ms\n\n\u7136\u540e\u662f\u66b4\u529bspfa\uff0c\u5148\u5efa\u56fe\uff0c\u7136\u540e\u5217\u4e3e\u6bcf\u6761\u94c1\u8def\u88ab\u70b8\uff0c\u5e76\u7528spfa\uff08\u6216dfs\uff09\u5224\u65ad\uff0c\u9644\u4e0a20\u5206bug\u4ee3\u7801\uff08\u4e0d\u60f3\u6539\u4e86\uff09\n```cpp\n#include<iostream>\n#include<queue>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\npriority_queue<int,vector<int>,greater<int> > pq;\nstruct sss{\n    int a,b,v,next;\n}e[500001];\nint k=1,head[500001],dis[500001],vis[500001],f[500001];\nint m,n;\nvoid add(int a,int b,int v)//\u5efa\u56fe\n{\n    e[k].a=a;\n    e[k].b=b;\n    e[k].v=v;\n    e[k].next=head[a];\n    head[a]=k;\n    k++;\n}\nvoid spfa(int x)//spfa\n{\n    dis[x]=0;\n    vis[x]=1;\n    pq.push(x);\n    while(!pq.empty())\n    {\n        int temp=pq.top();\n        pq.pop();\n        vis[temp]=0;\n        for(int i=head[temp];i!=-1;i=e[i].next)\n        {\n            if(dis[e[i].b]>dis[e[i].a]+e[i].v&&f[i]==0)\n            {\n                dis[e[i].b]=dis[e[i].a]+e[i].v;\n                if(vis[e[i].b]==0)\n                {\n                    vis[e[i].b]=1;\n                    pq.push(e[i].b);\n                }\n            }\n        }\n    }\n}\nint check()//\u5224\u65ad\n{\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(dis[i]>=999999)\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    cin>>m>>n;\n    for(int i=1;i<=n;i++)\n    {\n        int a,b;\n        cin>>a>>b;\n        add(a,b,1);\n        add(b,a,1);\n    }\n    for(int i=1;i<=m*2;i+=2)\n    {\n    \tmemset(f,0,sizeof(f));\n    \tmemset(dis,9999999,sizeof(dis));\n    \tf[i]=1;\n    \tf[i+1]=1;\n    \tspfa(1);\n    \tif(check()==1)\n    \tcout<<min(e[i].a,e[i].b)<<\" \"<<max(e[i].a,e[i].b)<<endl;\n\t}\n    return 0;\n}\n```\n\u6bd4tarjan\u8fd8\u957f\uff0c\u770b\u4e00\u770b\u590d\u6742\u5ea6O(mn^2)\u65f6\u95f422ms ~~\u597d\u6162~~ \u5982\u679c\u7528dfs\u5e94\u8be5\u4f1a\u66f4\u6162\u3002\n\n\u5bf9\u4e86\uff0c\u8fd9\u9053\u9898\u597d\u50cf\u8fd8\u53ef\u4ee5\u7528kruskal\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u793a\u4ee3\u7801\u4e86\uff0c\u76f4\u63a5\u770b\u590d\u6742\u5ea6O\uff08m2\uff09\u548c\u65f6\u95f43ms ~~\u597d\u50cf\u4e5f\u633a\u5feb~~\n\n\u6240\u4ee5\u5e94\u8be5\u662ftarjan\u4f18\u4e8ekruskal\u4f18\u4e8e\u66b4\u529bspfa\n\n\u6240\u4ee5\uff0c\u8981\u9488\u5bf9\u9898\u76ee\u4f7f\u7528\u6700\u5408\u9002\u7684\u89e3\u6cd5\n",
        "postTime": 1556084454,
        "uid": 91736,
        "name": "RPChe_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u4e0d\u4f1aTarjan\u600e\u4e48\u529e\uff1f\n\nn\uff0cm(1<=n<=150, 1<=m<=5000)\n\n\u53ef\u4ee5\u89c2\u5bdf\u5230\u6570\u636e\u5f88\u5c0f\n\n\u5b8c\u5168\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u8fb9\u8fdb\u884c\u4e00\u6b21SPFA\n\n```cpp\n#include<bits/stdc++.h>\n\n#define N 50005\n\nusing namespace std;\n\n\nint n,m,tot,head[N];\n\nstruct node{\n\tint u,v;\n}sx[N];\nstruct snode{\n\tint to,next;\n}e[N];\nvoid add(int u,int v){\n\te[++tot].to=v;e[tot].next=head[u];head[u]=tot;\n\te[++tot].to=u;e[tot].next=head[v];head[v]=tot;\n}\n\nbool cmp(node A,node B){\n\tif(A.u!=B.u) return A.u<B.u;\n\telse return A.v<B.v;\n}\n\nbool spfa(int x,int y){\n\tbool vis[N];int d[N];\n\tmemset(vis,0,sizeof(vis));memset(d,0x7f,sizeof(d));\n\tqueue<int>q;q.push(x);d[x]=0;vis[x]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tfor(int i=head[u],v;i,v=e[i].to;i=e[i].next){\n\t\t\tif(u!=x||v!=y){\n\t\t\t\tif(d[v]>100000){\n\t\t\t\t\td[v]=1;q.push(v);vis[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}for(int i=1;i<=n;i++){\n\t\tif(d[i]>100000) return true;\n\t}return false;\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>sx[i].u>>sx[i].v;\n\t\tint a=sx[i].u,b=sx[i].v,c;\n\t\tif(a>b) {\n\t\t\tsx[i].u=b;sx[i].v=a;\n\t\t}\n\t\tadd(sx[i].u,sx[i].v);\n\t}sort(sx+1,sx+1+m,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tif(spfa(sx[i].u,sx[i].v)==1){\n\t\t\tcout<<sx[i].u<<\" \"<<sx[i].v<<\"\\n\";\n\t\t}\n\t}return 0;\n}\n```",
        "postTime": 1525612808,
        "uid": 60939,
        "name": "\u6e05\u98ce\u6211\u5df2\u901d",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u521a\u770b\u8fd9\u9898\u65f6\uff0c\u53ea\u89c9\u5f97\u8fd9\u9898\u600e\u4e48\u8fd9\u4e48\u7b80\u5355\uff0c\u8bb0\u4e00\u4e0b\u5165\u5ea6\u4e3a0\u7684\u70b9\u4e0d\u5c31ok\u4e86\uff1f\u7136\u540e\u5c31\u706b\u6025\u7684\u8dd1\u53bb\u6572\u4ee3\u7801\uff0c\u4e00\u4ea4\uff0c\u600e\u4e48\u624d\u62ff\u4e86\u4e00\u4e2a\u70b9\uff1f\uff1f\u56de\u53bb\u597d\u597d\u770b\u9898\u76ee\u53c8\u7ed3\u5408\u9898\u89e3\uff0c\u6211\u624d\u77e5\u9053\u8fd9\u662f\u627e\u5272\u7ebf(\u4f69\u670d\u81ea\u5df1\u7684\u8bfb\u9898\u80fd\u529b\u2026\u2026)\u3002\u4e0d\u8fc7\u8fd9\u9898\u5176\u5b9e\u4e0d\u7528\u4ec0\u4e48\u5e76\u67e5\u96c6\u538b\u7f29\u6216\u662f\u4ec0\u4e48Tu\u5565\u7684\u7b97\u6cd5\uff0c\u56e0\u4e3a\u6570\u636e\u6bd4\u8f83\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u5e76\u5272\u6389\u5b83\uff0c\u7136\u540e\u5c31\u904d\u5386\u4e00\u904d\u56fe\uff0c\u770b\u80fd\u5426\u8fde\u901a\uff0c\u4e0d\u884c\u5c31\u52a0\u5230keyroad\u91cc\u9762\uff0c\u5177\u4f53\u8fd8\u662f\u770b\u4ee3\u7801\u5427\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct bi{//\u7528\u6765\u8bb0\u5f55keyroad\u7684\u7ed3\u6784\u4f53\uff0c\u5b9a\u7ed3\u6784\u4f53\u4e3b\u8981\u662f\u4e3a\u4e86\u6392\u5e8f\u65b9\u4fbf\n    int x,y;\n};\nbi b[5010];\nint a[200][5010],c[200][200],v[200];//\u8fd9\u91cc\u6211\u7528\u7684\u662f\u90bb\u63a5\u77e9\u9635\u5b58\u50a8\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u90bb\u63a5\u8868\u6253\u7684\u4e0d\u591a\uff0c\u6015\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u641e\u9519\uff0c\u5c31\u7528\u4e86\u77e9\u9635\nint comp(bi c,bi d)//sort\u7684comp\u51fd\u6570\uff0c\u5b9a\u4e49\u5982\u4f55\u6392\u5e8f\u7ed3\u6784\u4f53\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5728\u7ed3\u6784\u4f53\u91cc\u91cd\u8f7d<\u6765\u5b9e\u73b0\uff0c\u4e0d\u8fc7\u4e00\u822c\u6211\u4e60\u60ef\u7528comp\n{\n    if(c.x==d.x)\n        return c.y<d.y;\n    return c.x<d.x;\n}\nvoid dfs(int x)//\u7528\u6df1\u641c\u904d\u5386\u6574\u4e2a\u56fe\n{\n    int i;\n    v[x]=1;//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u8d70\u8fc7\n    for(i=1;i<=a[x][0];i++)//\u628a\u80fd\u8d70\u7684\u70b9\u5168\u90e8\u8d70\u4e00\u8fb9\n        if(!v[a[x][i]])\n            dfs(a[x][i]);\n    return;\n}\nint main()\n{\n    int i,j,n,m,x,y,k,l=0,p;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        a[x][++a[x][0]]=y;//\u4e3a\u4e86\u8282\u7ea6\u7a7a\u95f4\u5c31\u7528\u65e0\u7528\u76840\u4e0b\u6807\u6765\u50a8\u5b58\u5ea6\n        a[y][++a[y][0]]=x;\n    }\n    for(i=1;i<=n;i++)//\u5f00\u59cb\u679a\u4e3e\u6bcf\u6761\u8fb9\n        for(j=1;j<=a[i][0];j++)\n            if(a[i][j]&&!c[i][a[i][j]]&&!c[a[i][j]][i])//\u5982\u679c\u6709\u8def\u4e14\u6ca1\u6709\u5220\u8fc7\n            {\n                c[i][a[i][j]]=c[a[i][j]][i]=1;//c\u6570\u7ec4\u662f\u7528\u6765\u8bb0\u5f55\u8fd9\u6761\u8fb9\u6709\u6ca1\u6709\u88ab\u5220\u8fc7\uff0c\u56e0\u4e3a\u56fe\u662f\u65e0\u5411\u56fe\uff0c\u4ee5\u51cf\u5c11\u679a\u4e3e\u6570\u91cf\n                for(k=1;k<=a[a[i][j]][0];k++)//\u627e\u5230\u5bf9\u5e94\u7684\u70b9\u6240\u6307\u5411\u8fd9\u4e2a\u70b9\u7684\u4e0b\u6807\n                    if(a[a[i][j]][k]==i)\n                        break;\n                p=a[i][j];//\u8bb0\u5f55\u539f\u6765\u5bf9\u5e94\u70b9\n                a[i][j]=a[p][k]=0;//\u5220\u53bb\u8fd9\u6761\u8fb9\uff0c\u56e0\u4e3a\u6ca1\u67090\u8fd9\u4e2a\u70b9\uff0c\u6240\u4ee5\u5b9a\u4e3a0\n                dfs(1);//\u6df1\u641c\u904d\u5386\n                a[i][j]=p;//\u56de\u6eaf\uff0c\u628a\u8fb9\u8fde\u56de\u4e0a\u53bb\n                a[p][k]=i;\n                p=0;\n                for(k=1;k<=n;k++)//\u641c\u6bcf\u4e2a\u70b9\uff0c\u770b\u6709\u6ca1\u6709\u7ecf\u8fc7\uff0c\u6ca1\u6709\u5c31\u8bf4\u660e\u8fd9\u6761\u8fb9\u662fkeyroad\uff0c\u5c06\u5176\u52a0\u5165\u7b54\u6848\uff0c\u540c\u65f6\u8fdb\u884cv\u6570\u7ec4\u6e05\u96f6\n                {\n                    if(!v[k]&&!p)\n                    {\n                        b[++l].x=min(i,a[i][j]);\n                        b[l].y=max(a[i][j],i);\n                        p=1;\n                    }\n                    v[k]=0;\n                }\n            }\n    sort(b+1,b+l+1,comp);//\u6392\u5e8f\u7b54\u6848\n    for(i=1;i<=l;i++)\n        printf(\"%d %d\\n\",b[i].x,b[i].y);//\u6700\u540e\u8f93\u51fa\uff0cend\n    return 0;\n}\n```",
        "postTime": 1509154621,
        "uid": 60181,
        "name": "Iowa_BattleShip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u5173\u952e\u8def\u5f84\uff0cpascal\u7684\u4e00\u53d1\u9898\u89e3\uff0c\n\n\u6a21\u62df\uff0c\u641c\u7d22\uff0c\u8fea\u6770\u65af\u7279\u62c9\uff08\u7b97\u534a\u4e2a\u52a8\u89c4\u5427\uff0c\u6700\u77ed\u8def\u7684\u7b97\u6cd5\uff0c\u4f46\u8fd9\u91cc\u4e0d\u7528\u6765\u6c42\u6700\u77ed\u8def\uff09\uff0c\n\n\u6a21\u62df\uff1a\u6a21\u62df\u5b83\u70b8\u94c1\u8def\uff1b\n\n\u641c\u7d22\uff1a\u641c\u7d22\u5b83\u70b8\u94c1\u8def\u7684\u6240\u6709\u53ef\u80fd\uff0c\u7a77\u4e3ei(i<=n)\uff0c\u5c06a[i]\u5230b[i]\u89c6\u4e3a\u975e\u901a\u8def\uff1b\n\n\u8fea\u6770\u65af\u7279\u62c9\uff1a\u6c421\u70b9\u80fd\u5426\u5230\u8fbe\u6bcf\u4e00\u4e2a\u70b9\uff0c\u82e5\u80fd\uff0c\u5219\u4efb\u610f\u4e24\u70b9\u81f3\u5c11\u53ef\u4ee5\u901a\u8fc71\u70b9\u8054\u901a\uff1b\u82e5\u4e0d\u80fd\uff0c\u5219\u94c1\u8defi\u4e3a\u5173\u952e\u8def\u5f84(\u4e00\u7ec4\u89e3)\u3002\n\n```cpp\nvar\n  a,b,d,e,f,g:array [1..1000] of longint;\n  c:array [1..150,1..150] of longint;\n  n,m,i,j,k,h,hh:longint;\nbegin\n  read(n,m);\n  for i:=1 to m do\n  begin\n    read(a[i],b[i]);\n    c[a[i],b[i]]:=1;\n    c[b[i],a[i]]:=1;\n  end;\n  for k:=1 to m do\n  begin\n    c[a[k],b[k]]:=0;\n    c[b[k],a[k]]:=0;\n    fillchar(d,sizeof(d),0);\n    fillchar(e,sizeof(e),0);\n    d[1]:=1;\n    for i:=1 to n do e[i]:=c[1,i];\n    e[1]:=1;\n    e[n+1]:=1;\n    for i:=1 to n-1 do\n    begin\n      for j:=1 to n+1 do\n        if (d[j]=0)and(e[j]=1) then break;\n      if j=n+1 then\n      begin\n        inc(h);\n        if a[k]<b[k] then\n        begin\n          f[h]:=a[k];\n          g[h]:=b[k];\n        end\n          else\n        begin\n          f[h]:=b[k];\n          g[h]:=a[k];\n        end;\n        break;\n      end;\n      d[j]:=1;\n      for hh:=1 to n do\n        if c[j,hh]=1 then e[hh]:=1;\n    end;\n    c[a[k],b[k]]:=1;\n    c[b[k],a[k]]:=1;\n  end;\n  for i:=1 to h-1 do\n    for j:=i+1 to h do\n      if (f[i]>f[j])or(f[i]=f[j])and(g[i]>g[j]) then\n      begin\n        k:=f[i];\n        f[i]:=f[j];\n        f[j]:=k;\n        k:=g[i];\n        g[i]:=g[j];\n        g[j]:=k;\n      end;\n  for i:=1 to h do writeln(f[i],' ',g[i]);\nend.\n\n```",
        "postTime": 1472472958,
        "uid": 20506,
        "name": "\u65b9\u65b9\u5c0f\u9017\u903c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u7531\u4e8e\u672c\u9898\u6570\u636e\u4e0d\u662f\u5f88\u5f3a\uff0c\u6240\u4ee5\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u770b\u770b\u5220\u6389\u4ee5\u540e\u4f1a\u4e0d\u4f1a\u6709\u4e24\u4e2a\u57ce\u5e02\u4e0d\u8fde\u901a\u3002\u5efa\u8bae\u4f7f\u7528\u514b\u9c81\u65af\u514b\u7b97\u6cd5\u3002\n\n```delphi\nvar\n  f:array[0..200] of longint;\n  n,m,i,j,x1,y1:longint;\n  x,y:array[0..5000] of longint;\nfunction getfather(xx:longint):longint;\nbegin\n  if f[xx]=xx then exit(xx) else\n    f[xx]:=getfather(f[xx]);\n  exit(f[xx]);\nend;//\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\nprocedure swap(var a,b:longint);\nvar\n  t:longint;\nbegin\n  t:=a;\n  a:=b;\n  b:=t;\nend;//\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\nprocedure qsort(r,l:longint);\nvar\n  i,j,m1,m2:longint;\nbegin\n  i:=r; j:=l;\n  m1:=x[(i+j) shr 1];\n  m2:=y[(i+j) shr 1];\n  repeat\n    while (x[i]<m1) or (x[i]=m1) and (y[i]<m2) do inc(i);\n    while (x[j]>m1) or (x[j]=m1) and (y[j]>m2) do dec(j);\n    if i<=j then\n      begin\n        swap(x[i],x[j]);\n        swap(y[i],y[j]);\n        inc(i); dec(j);\n      end;\n  until i>j;\n  if i<l then qsort(i,l);\n  if r<j then qsort(r,j);\nend;//\u5feb\u6392\nbegin\n  readln(n,m);\n  for i:=1 to m do\n    begin\n      readln(x[i],y[i]);\n      if x[i]>y[i] then swap(x[i],y[i]);//\u4ee4x[i]<=y[i]\n    end;\n  qsort(1,m);\n  for i:=1 to m do\n    begin\n      for j:=1 to n do\n        f[j]:=j;//\u5efa\u7acbn\u68f5\u6811\n      for j:=1 to m do\n        if i<>j then//\u4e0d\u80fd\u6709i\u8fd9\u6761\u8fb9\n          begin\n            x1:=getfather(x[j]);\n            y1:=getfather(y[j]);\n            if x1<>y1 then//\u4e0d\u662f\u540c\u4e00\u9897\u6811\n              f[y1]:=f[x1];//\u5408\u5e76\n          end;\n      x1:=getfather(1);//1\u6240\u5728\u7684\u6811\u7684\u6839\u8282\u70b9\n      for j:=2 to n do\n        if f[getfather(j)]<>x1 then//\u4e0d\u540c\u7684\u6811\n          begin\n            writeln(x[i],' ',y[i]);\n            break;//\u8f93\u51fa\u5e76\u9000\u51fa\n          end;\n    end;\nend.\n```",
        "postTime": 1383293423,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6b64\u9898\uff0c\u7531\u4e8e\u4e60\u60ef\u6027\u6ca1\u6709\u5148\u770b\u6570\u636e\u5927\u5c0f\u5c31\u76f4\u63a5\u53bb\u60f3\u9898\u4e86\uff0c\u5bfc\u81f4\u4e00\u5f00\u59cb\u5c31\u8ba4\u4e3a\u5f88\u96be\uff0c\u7ed3\u679c\u4e00\u770b\u6570\u636e\u5927\u5c0f\uff0c\u624d5000  QAQ \uff0c\u60f3\u90fd\u6ca1\u60f3\u5c31\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u4e86\u3002\n\n\n\n------------\n\u7b54\u9898\u601d\u8def\u5c31\u662f\u5229\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u6bcf\u4e00\u6761\u8fb9\u662f\u5426\u53ef\u884c~~\u53ef\u653e\u70b8\u5f39~~\u3002\n\n\u9996\u5148\u679a\u4e3e\u6bcf\u4e00\u6761\u8fb9\uff0c\u7136\u540e\u5047\u8bbe\u628a\u8fd9\u6761\u8fb9\u70b8\u4e86\uff0c\u518d\u6765\u4e00\u8f6e\u5e76\u67e5\u96c6\uff0c\u5224\u65ad\u4e00\u4e0b\u5269\u4e0b\u7684\u8fb9\u662f\u5426\u80fd\u8fde\u901a~~\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6240\u6709\u7684**\u7956\u5148\u662f\u5426\u76f8\u540c~~\uff0c\u82e5\u8fde\u901a\uff0c\u5219\u8bf4\u660e\u70b8\u7740\u6761\u8fb9\u6ca1\u7528\uff1b\u82e5\u4e0d\u8fde\u901a\uff0c\u5219\u8bf4\u660e\u70b8\u7740\u6761\u8fb9\u6709\u7528\u3002\n\n\u81f3\u4e8e\u8f93\u51fa\u987a\u5e8f\uff0c\u53ef\u4ee5\u5728\u8bfb\u8fdb\u6765\u65f6\u6392\u4e2a\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u5728\u7b54\u6848\u7b97\u51fa\u6765\u540e\u518d\u6392\u5e8f\uff0c\u6839\u636e\u4e2a\u4eba\u4e60\u60ef\u800c\u5b9a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6o(m^2) \u5c3d\u7ba1\u6548\u7387\u4e0d\u9ad8\uff0c\u4f46\u6570\u636e\u8303\u56f4\u5c0f\uff0c\u8fd8\u662f\u80fd\u8fc7\u7684\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std ;\n\nint fa[ 222 ] , n , m , x , y , z ;\n\nint read_h[ 5555 ] , read_t[ 5555 ] , num[ 5555 ] ;\n\nbool cmp( int x , int y )\n{\n\t\n\treturn ( ( read_h[ x ] < read_h[ y ] ) || ( ( read_h[ x ] == read_h[ y ] ) && ( read_t[ x ] < read_t[ y ] ) ) ) ;\n\t\n}\n\nint find( int now )\n{\n\t\n\tif ( ! fa[ now ] ) return now ;\n\t\n\tfa[ now ] = find( fa[ now ] ) ;\n\t\n\treturn fa[ now ] ;\n\t\n}\n\nint main()\n{\n\t\n\tscanf( \"%d%d\" , &n , &m ) ;\n\t\n\tfor ( int i = 1 ; i <= m ; i ++ ) \n\t{\n\t\t\n\t\tscanf( \"%d%d\" , &read_h[ i ] , &read_t[ i ] ) , num[ i ] = i ;\n\t\t\n\t\tif ( read_h[ i ] > read_t[ i ] ) swap( read_h[ i ] , read_t[ i ] ) ;\n\t\t\n\t}\n\t\n\tsort( num + 1 , num + 1 + m , cmp ) ;\n\n\tfor ( int i = 1 ; i <= m ; i ++ )\n\t{\n\t\t\n\t\tmemset( fa , 0 , sizeof( fa ) ) ;\n\t\n\t\tfor ( int j = 1 ; j <= m ; j ++ )\n\t\t\tif ( i - j )\t\t\t\t\n\t\t\t\tif ( find( read_h[ num[ j ] ] ) != find( read_t[ num[ j ] ] ) ) fa[ find( read_t[ num[ j ] ] ) ] = find( read_h[ num[ j ] ] ) ;\n\t\t\t\t\t\t\n\t\tint ans = - 1 ;\n\t\t\t\t\t\t\n\t\tfor ( int j = 1 ; j <= n ; j ++ )\n\t\t\tif ( ! fa[ j ] ) ans ++ ;\n\t\t\t\n\t\tif ( ans ) printf( \"%d %d\\n\" , read_h[ num[ i ] ] , read_t[ num[ i ] ] ) ;\n\t\t\n\t}\n\t\n\treturn 0 ;\t\t\t\n\t\t\t\n}\n\n\n\n\n\n\n\n\n\n```\n",
        "postTime": 1565312073,
        "uid": 36949,
        "name": "Ydkwia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    },
    {
        "content": "\u4ece\u8fd0\u884c\u65f6\u95f4\u6765\u770b\uff0c\u672c\u9898\u6570\u636e\u6839\u672c\u6ca1\u6709\u9898\u9762\u8bf4\u7684\u90a3\u4e48\u5927\u2026\u2026\n\n\u6240\u4ee5STL\u60f3\u600e\u4e48\u7528\u600e\u4e48\u7528\u3002\u53ef\u4ee5\u7528\u5806(prioriry\\_queue)\u7ed3\u5408pair\u8f7b\u677e\u5b9e\u73b0\u9898\u76ee\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u8f93\u51fa\u7684\u8981\u6c42\u3002\n\n\u6bcf\u6b21\u9009\u5b9a\u4e00\u6761\u8fb9\uff0c\u628a\u5b83\u53bb\u9664\u540e\u5bf9\u56fe\u8fdb\u884cdfs\u5224\u65ad\u8fde\u901a\u6027\uff0c\u82e5\u65e0\u6cd5\u8fde\u901a\u5c06\u8fb9\u4e24\u4e2a\u53c2\u6570(from,to)\u52a0\u5165\u5806\uff08\u8f93\u5165\u8fb9\u65f6\u628a\u7f16\u53f7\u5c0f\u7684\u70b9\u5f53\u4f5cfrom\u8bb0\u5f55\uff09\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<map>\n#include<vector>\n#include<queue>\nusing namespace std;\nint n,m,vis[205],ans;\ntypedef pair<int,int> P;\npriority_queue<P,vector<P>,greater<P>  >pque;\nvector<int> g[205];\nstruct edge\n{\n    int from;\n    int to;\n}e[5001];\nvoid dfs(int v,int b)\n{\n    vis[v]=1;\n    int from=e[b].from,to=e[b].to;\n    for(int i=0;i<g[v].size();i++)\n    {\n        if(v==e[b].from&&g[v][i]==e[b].to)continue;\n        if(vis[g[v][i]])continue;\n        dfs(g[v][i],b);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        e[i].from=min(a,b),e[i].to=max(a,b);\n        g[a].push_back(b);\n        g[b].push_back(a);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        memset(vis,0,sizeof(vis));\n        dfs(1,i);\n        for(int j=1;j<=n;j++)\n        {\n            if(!vis[j])\n            {\n                pque.push(make_pair(e[i].from,e[i].to));\n                break;\n            }\n        }\n    }\n    while(!pque.empty())\n    {\n        P p = pque.top();\n        pque.pop();\n        printf(\"%d %d\\n\",p.first,p.second);\n    }\n    return 0;\n}\n```",
        "postTime": 1509541546,
        "uid": 19250,
        "name": "\u575a\u51b3\u6740\u6bd22008",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1656 \u3010\u70b8\u94c1\u8def\u3011"
    }
]