[
    {
        "content": "\u56e0\u4e3a\u9b54\u6cd5\u5e8f\u5217\u7684\u5de6\u53f3\u7aef\u70b9\u5927\u5c0f\u4e0d\u5b9a\uff0c\u6211\u8fd9\u91cc\u662f\u5de6\u7aef\u70b9\u8f83\u5c0f\u3002\u4f46\u53ef\u4ee5\u5c06\u8be2\u95ee\u548c\u5e8f\u5217\u4e00\u8d77\u7ffb\u8f6c\uff0c\u6216\u7528 $mx$ \u51cf\u4e00\u4e0b\u539f\u5e8f\u5217\uff0c\u518d\u8dd1\u4e00\u904d\u5373\u53ef\u3002\n\n\u5047\u8bbe\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\uff0c\u5411\u53f3\u6700\u5927\u53ef\u4ee5\u7684\u53f3\u7aef\u70b9\uff0c\u4e14\u9650\u5b9a\u53f3\u7aef\u70b9\u6700\u5927\u4e3a $i$\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u8be2\u95ee $(l_i,r_i)$\uff0c\u67e5\u8be2\u5bf9\u4e8e $j\\in[l_i,r_i]$\uff0c\u9650\u5b9a $j$ \u4e3a\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u6700\u5927\u4e3a $r_i$ \u7684\u6700\u5927\u957f\u5ea6\u3002\n\n\u9650\u5b9a\u53f3\u7aef\u70b9\u53ef\u4ee5\u4ece\u5c0f\u5230\u5927\u9650\u5b9a\u3002\u5f53\u524d\u9650\u5b9a $i$ \u4e3a\u6700\u957f\u7684\u53f3\u7aef\u70b9\uff0c\u6c42\u51fa\u5c0f\u4e8e $i$ \u7684\u70b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\u7684\u6700\u957f\u957f\u5ea6\u3002\u79bb\u7ebf\u67e5\u8be2\u5373\u53ef\u3002\n\n\u8003\u8651\u6c42\u51fa\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\u7684\u6700\u5927\u53f3\u7aef\u70b9\u3002\u641e\u4e00\u4e2a\u4e0d\u4e0b\u964d\u7684\u5355\u8c03\u6808\uff0c\u5bf9\u4e8e\u52a0\u5165 $i$\uff0c\u6709\u4e00\u4e0b\u4e24\u79cd\u60c5\u51b5\u3002\n\n* $a_i\\ge a_{k_{top}}$\n\n\n$i$ \u76f4\u63a5\u52a0\u5165\u6808\u4e2d\uff0c\u7136\u540e\u5bf9\u4e8e\u6808\u4e2d\u5143\u7d20\u4f4d\u7f6e\u5927\u4e8e $to_i$\uff08\u6bd4 $a_i$ \u5927\u4e14\u4f4d\u7f6e\u6bd4 $i$ \u5c0f\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4f4d\u7f6e\uff09\uff0c\u628a\u4ed6\u4eec\u7684\u7684\u53f3\u7aef\u70b9\u7f6e\u4e3a $i$\uff0c\u53ef\u4ee5\u7528\u4e00\u68f5\u4e0e\u6808\u4e2d\u4f4d\u7f6e\u4e00\u4e00\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4ed6\u4eec\u7684\u9b54\u6cd5\u5e8f\u5217\u957f\u5ea6\u6700\u5927\u503c\u3002\n\n* $a_i<a_{k_{top}}$\n\n\n$k_{top}$ \u7684\u53f3\u7aef\u70b9\u4e0d\u4f1a\u518d\u66f4\u65b0\uff0c\u628a\u4ed6\u8e22\u5230\u53e6\u4e00\u68f5\u4e0e\u539f\u5e8f\u5217\u4f4d\u7f6e\u4e00\u4e00\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u8981\u5728\u7b2c\u4e00\u68f5\u6811\u4e2d\u628a $top$ \u4f4d\u7f6e\u6e05\u7a7a\u3002\u4e00\u76f4\u8e22\u5230 $a_i\\ge a_{k_{top}}$ \u518d\u52a0\u5165 $i$\u3002\n\n\u6c42 $to_i$ \u8dd1\u4e00\u6b21\u5355\u8c03\u6808\u5373\u53ef\u3002\n\n\u8bbe\u5f53\u524d\u5904\u7406\u5230 $i$\uff0c\u5bf9\u4e8e\u8be2\u95ee $(l,i)$\uff0c\u5206\u522b\u5728\u4e24\u9897\u7ebf\u6bb5\u6811\u4e2d\u67e5\u8be2 $(l,i)$ \u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u6ce8\u610f\u7b2c\u4e00\u68f5\u7ebf\u6bb5\u6811\u67e5\u8be2\u65f6\u7528 `lower_bound` \u6c42\u51fa\u8282\u70b9\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e\u3002\n\n# $code$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5e5+50;\n\nstruct ask\n{\n\tint l,r,id;\n\t\n\tfriend bool operator<(ask a,ask b)\n\t{\n\t\treturn a.r<b.r;\n\t}\n}p[N];\n\nint n,a[N],mx,q,k[N],ans[N],top,to[N],A[N<<2],B[N<<2],la[N<<2],qu[N],tail;\n\nvoid cc()\n{\n\tmemset(k,0,sizeof k);top=tail=0;\n\tmemset(to,0,sizeof to);\n\tmemset(A,0,sizeof A);\n\tmemset(B,0,sizeof B);\n\tmemset(la,0,sizeof la);\n\tmemset(qu,0,sizeof qu);\n}\n\n#define ls (x<<1)\n#define rs (x<<1|1)\n#define mid ((l+r)>>1)\n\nvoid down(int x,int l,int r)\n{\n\tif(la[x])\n\t{\n\t\tla[ls]=la[rs]=la[x];\n\t\tA[ls]=la[x]-qu[l]+1;\n\t\tA[rs]=la[x]-qu[mid+1]+1;\n\t\tla[x]=0;\n\t\treturn;\n\t}\n}\n\nvoid up(int x,int f)\n{\n\tif(!f)A[x]=max(A[ls],A[rs]);\n\telse B[x]=max(B[ls],B[rs]);\n}\n\nvoid clear(int x,int l,int r,int d)\n{\n\tif(l==r)\n\t{\n\t\tA[x]=0;\n\t\treturn;\n\t}\n\tdown(x,l,r);\n\tif(d<=mid)clear(ls,l,mid,d);\n\telse clear(rs,mid+1,r,d);\n\tup(x,0);\n}\n\nint find(int x,int l,int r,int L,int R)\n{\n\tif(L<=l&&R>=r)return A[x];\n\tint ans=0;down(x,l,r);\n\tif(L<=mid)ans=max(ans,find(ls,l,mid,L,R));\n\tif(R>mid)ans=max(ans,find(rs,mid+1,r,L,R));\n\treturn ans;\n}\n\nvoid add(int x,int l,int r,int d,int y)\n{\n\tif(l==r)\n\t{\n\t\tB[x]=y;\n\t\treturn;\n\t}\n\tif(d<=mid)add(ls,l,mid,d,y);\n\telse add(rs,mid+1,r,d,y);\n\tup(x,1);\n}\n\nvoid insert(int x,int l,int r,int L,int R,int d)\n{\n\tif(L<=l&&R>=r)\n\t{\n\t\tA[x]=d-qu[l]+1;\n\t\tla[x]=d;\n\t\treturn;\n\t}\n\tdown(x,l,r);\n\tif(L<=mid)insert(ls,l,mid,L,R,d);\n\tif(R>mid)insert(rs,mid+1,r,L,R,d);\n\tup(x,0);\n}\n\nint get(int x,int l,int r,int L,int R)\n{\n\tif(L<=l&&R>=r)return B[x];\n\tint ans=0;down(x,l,r);\n\tif(L<=mid)ans=max(ans,get(ls,l,mid,L,R));\n\tif(R>mid)ans=max(ans,get(rs,mid+1,r,L,R));\n\treturn ans;\n}\n\nvoid sol()\n{\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\twhile(top&&a[i]>a[k[top]])to[k[top--]]=i;\n\t\tk[++top]=i;\n\t}\n\tfor(int i=1,j=1;i<=n;i++)\n\t{\n\t\twhile(tail&&a[qu[tail]]>a[i])\n\t\t{\n\t\t\tadd(1,1,n,qu[tail],find(1,1,n,tail,tail));\n\t\t\tclear(1,1,n,tail);\n\t\t\ttail--;\n\t\t}\n\t\tqu[++tail]=i;\n\t\tint t=upper_bound(qu+1,qu+1+tail,to[i])-qu;t=max(t,1);\n\t\tinsert(1,1,n,t,tail,i);\n\t\twhile(j<=q&&p[j].r==i)\n\t\t{\n\t\t\tans[p[j].id]=max(ans[p[j].id],get(1,1,n,p[j].l,p[j].r));\n\t\t\tint t=lower_bound(qu+1,qu+1+tail,p[j].l)-qu;\n\t\t\tans[p[j].id]=max(ans[p[j].id],find(1,1,n,t,tail));\n\t\t\tj++;\n\t\t}\n\t}\n}\n\nmain()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)cin>>a[i],mx=max(a[i],mx);\n\tcin>>q;\n\tfor(int i=1;i<=q;i++)cin>>p[i].l>>p[i].r,p[i].id=i;\n\tsort(p+1,p+1+q);\n\tsol();\n\tfor(int i=1;i<=n;i++)a[i]=mx-a[i]+1;\n\tcc();sol();\n\tfor(int i=1;i<=q;i++)cout<<ans[i]<<'\\n';\n}\n```",
        "postTime": 1658733298,
        "uid": 344416,
        "name": "zsq147258369",
        "ccfLevel": 7,
        "title": "P8037 [COCI2015-2016#7] Prokletnik \u9898\u89e3"
    },
    {
        "content": "[link](https://www.luogu.com.cn/problem/P8037)\n\n\u4e00\u9053\u5f88\u597d\u7684\u7ebf\u6bb5\u6811\u9898\u76ee\u3002\n\n\u9898\u5916\u8bdd\uff1a\u4eca\u5929\u4e0a\u5348\uff0c\u5168\u5b87\u5b99\u5185\u6700\u5f31\u7684\u8fa3\u9e21 Feyn \u518d\u4e00\u6b21\u548c\u6b63\u89e3\u64e6\u80a9\u800c\u8fc7\uff0c\u4e0b\u5348\u8fd9\u4e2a\u849f\u84bb\u770b\u9898\u89e3\u751a\u81f3\u6ca1\u6709\u770b\u61c2\u9898\u89e3\u7684\u5199\u6cd5\uff08[\u53c2\u8003\u9898\u89e3\u94fe\u63a5](https://www.cnblogs.com/nightsky05/p/15162746.html)\uff0c\u6211\u5b9e\u5728\u6ca1\u770b\u51fa\u6765\u5b83\u7684\u4e24\u68f5\u7ebf\u6bb5\u6811\u548b\u7ef4\u62a4\u7684\uff0c\u4e3a\u5565\u89c9\u5f97\u5b83\u53ea\u5199\u4e86\u4e00\u68f5\u5462\uff0c\u679c\u7136\u6211\u8fd8\u662f\u592a\u5f31\u4e86\uff09\uff0c\u4e8e\u662f\u8fd9\u4e2a\u8fde\u9898\u89e3\u90fd\u770b\u4e0d\u61c2\u7684\u83dc\u9e21\u82b1\u4e86\u4e00\u4e0b\u5348\u65f6\u95f4\u7814\u7a76\u4e86\u4e00\u79cd\u4f4e\u6548\u4f46\u6bd4\u8f83\u6e05\u6670\u7684\u5199\u6cd5\uff0c\u5e0c\u671b\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u5e2e\u52a9\uff08\u867d\u7136\u89c9\u5f97\u5e94\u8be5\u4e0d\u4f1a\u6709\u4eba\u9700\u8981\u8fd9\u7bc7\u9898\u89e3\uff0c\u56e0\u4e3a\u5927\u5bb6\u770b\u5b8c\u90a3\u7bc7\u9898\u89e3\u5e94\u8be5\u5c31\u90fd\u4f1a\u4e86\uff09\u3002\n\n\u672c\u4eba\u5728\u8003\u573a\u4e0a\u60f3\u51fa\u4e86\u4e00\u4e2a $O(N^2)$ \u7684\u505a\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u679a\u4e3e\u54ea\u4e2a\u70b9\u4f5c\u4e3a\u7b54\u6848\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u9009\u62e9\u5de6\u7aef\u70b9\u4f7f\u8fd9\u4e2a\u533a\u95f4\u5c3d\u91cf\u7684\u957f\u3002\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u5047\u5982\u5e0c\u671b\u53f3\u7aef\u70b9\u662f\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u663e\u7136\u9009\u4e2d\u7684\u5de6\u7aef\u70b9\u5e94\u8be5\u5728\u4e0a\u4e00\u4e2a\u6bd4\u8fd9\u4e2a\u53f3\u7aef\u70b9\u5c0f\u7684\u4f4d\u7f6e\u7684\u540e\u9762\u3002\u540c\u65f6\u7531\u4e8e\u89c4\u5b9a\u4e86\u5de6\u7aef\u70b9\u662f\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u5185\u4e0d\u5e94\u8be5\u51fa\u73b0\u6bd4\u5de6\u70b9\u66f4\u5927\u7684\u503c\uff0c\u6240\u4ee5\u5de6\u7aef\u70b9\u4e0d\u5e94\u8be5\u6bd4\u5f53\u524d\u8be2\u95ee\u533a\u95f4\u7684\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u8fd8\u9760\u5de6\u3002\u4e24\u4e2a\u9650\u5236\u9700\u8981\u540c\u65f6\u6ee1\u8db3\uff0c\u6240\u4ee5\u53d6\u8f83\u5927\u503c\uff0c\u548c\u679a\u4e3e\u7684\u8fd9\u4e2a\u53f3\u7aef\u70b9\u4e00\u8d77\u53bb\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\u5de6\u5927\u53f3\u5c0f\u4e5f\u662f\u4e00\u6837\u3002\u7531\u4e8e\u5462\u5199\u5f97\u592a\u4e11\u4e86\u8003\u573a\u4e0a\u53ea\u6df7\u5230\u4e86 20 \u5206\uff0c\u5c31\u5f88\u60b2\u60e8\u3002\n\n\u6b63\u89e3\u5176\u5b9e\u548c\u4e0a\u9762\u7684\u65b9\u6cd5\u6709\u5171\u901a\u4e4b\u5904\u3002\u8fd8\u662f\u5148\u8003\u8651\u5de6\u5c0f\u53f3\u5927\uff08\u53e6\u4e00\u79cd\u60c5\u51b5\u628a\u6bcf\u4e2a\u6570\u53d6\u53cd\u518d\u8dd1\u4e00\u6b21\u5373\u53ef\uff09\uff0c\u7531\u4e8e\u5728\u7ebf\u7ef4\u62a4\u4f3c\u4e4e\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u6240\u6709\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\u7136\u540e\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u53f3\u7aef\u70b9\u3002\u6309\u7167\u60ef\u5e38\u7684\u601d\u8def\u5e94\u8be5\u6709\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u6570\u636e\u7ed3\u6784\u4e0a\u6bcf\u4e2a\u70b9\u7684\u503c\u4ee3\u8868\u8fd9\u4e2a\u70b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\u65f6\u6700\u5927\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u7136\u540e\u67e5\u8be2\u8fd9\u4e2a\u8be2\u95ee\u533a\u95f4\u7684\u7b54\u6848\u5c31\u53ea\u9700\u8981\u67e5\u8be2\u6570\u636e\u7ed3\u6784\u4e2d\u8be2\u95ee\u533a\u95f4\u7684\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u5566\u3002\u8fd9\u6837\u663e\u7136\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u53f3\u7aef\u70b9\u5927\u4e8e\u5f53\u524d\u8be2\u95ee\u7684\u53f3\u7aef\u70b9\u7684\u533a\u95f4\u90fd\u8fd8\u6ca1\u6709\u88ab\u52a0\u5165\uff0c\u800c\u6240\u6709\u5de6\u7aef\u70b9\u5c0f\u4e8e\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u7684\u533a\u95f4\u65e0\u6cd5\u88ab\u8bbf\u95ee\uff0c\u6240\u4ee5\u8fd9\u4e2a\u601d\u8def\u662f\u6b63\u786e\u7684\u3002\n\n\u4f46\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\u5462\u3002\n\n\u663e\u7136\u6709\u4e9b\u4f4d\u7f6e\u7684\u7b54\u6848\u662f\u4e0d\u4f1a\u53d8\u5316\u7684\uff0c\u56e0\u4e3a\u53d8\u5316\u7684\u4f4d\u7f6e\u9700\u8981\u6ee1\u8db3\u4e00\u4e2a\u6761\u4ef6\uff0c\u5373\u8fd9\u4e2a\u4f4d\u7f6e\u548c\u5f53\u524d\u679a\u4e3e\u5230\u7684\u53f3\u7aef\u70b9\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u5408\u6cd5\u7684\u533a\u95f4\uff08\u4e3a\u4e86\u53d9\u8ff0\u65b9\u4fbf\uff0c\u4e00\u4e2a\u9b54\u6cd5\u5e8f\u5217\u79f0\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7684\u533a\u95f4\uff09\u3002\u8fd9\u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u5462\uff0c\u533a\u95f4\u5185\u4e0d\u80fd\u6709\u6bd4\u5f53\u524d\u53f3\u7aef\u70b9\u5927\u7684\uff0c\u4e5f\u4e0d\u80fd\u6709\u6bd4\u5de6\u7aef\u70b9\u5c0f\u7684\u3002\u5047\u5982\u5f53\u524d\u7684\u53f3\u7aef\u70b9\u662f $x$ \uff0c\u90a3\u4e48\u4e00\u4e2a\u5408\u6cd5\u7684 $y$ \u9700\u8981\u6ee1\u8db3 $\\forall y\\le i\\le x,a_y\\le a_i\\le a_x $\u3002\u6709\u4eba\u8bf4\u8fd9\u4e0d\u5e9f\u8bdd\u5417\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6362\u4e00\u79cd\u8868\u793a\u65b9\u5f0f\u3002\u5047\u5982 $px$ \u662f $x$ \u4e4b\u524d\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u6570\u7684\u4f4d\u7f6e\uff0c$py$ \u662f $y$ \u4e4b\u540e\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6709 $y\\ge px+1,x\\le py-1$\u3002\u8fd9\u5c31\u662f\u5355\u8c03\u6808\u7684\u8282\u594f\u4e86\u3002\u5bf9\u4e8e\u540e\u9762\u7684\u90a3\u4e2a\u9650\u5236 $x\\le py-1$\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u6765\u7ef4\u62a4\uff0c\u7528\u7b80\u5355\u7684\u65b9\u5f0f\u4f7f\u5f97\u6808\u5185\u6240\u6709\u5143\u7d20\u90fd\u7b26\u5408\u8fd9\u4e2a\u6761\u4ef6\uff0c\u8fd9\u6837\u4e00\u6765\u53ef\u80fd\u88ab\u66f4\u65b0\u7684\u4f4d\u7f6e\u5c31\u662f\u90a3\u4e9b\u5728\u6808\u5185\u7684\u3001\u800c\u4e14\u6ee1\u8db3 $y\\ge px+1$ \u7684\u90a3\u4e9b\u5143\u7d20\u3002\u7531\u4e8e\u6808\u662f\u4e0a\u5927\u4e0b\u5c0f\u7684\u7ed3\u6784\uff0c\u6839\u636e\u524d\u9762\u7684\u6761\u4ef6\uff0c\u53ef\u80fd\u88ab\u66f4\u65b0\u7684\u5143\u7d20\u5b9e\u9645\u4e0a\u5c31\u662f\u6808\u5185\u67d0\u4e2a\u4f4d\u7f6e\uff08\u4e8c\u5206\u5373\u53ef\uff09\u5230\u6808\u9876\u7684\u6240\u6709\u5143\u7d20\uff0c\u7528\u7ebf\u6bb5\u6811\u66f4\u65b0\u5373\u53ef\u3002\n\n\u90a3\u90a3\u4e9b\u4e0d\u4f1a\u88ab\u66f4\u65b0\u7684\u4f4d\u7f6e\u548b\u529e\u5462\uff1f\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e4b\u524d\u5b58\u5728\u4e00\u4e2a $x'\\ge py$\uff0c\u90a3\u4e48\u968f\u7740 $x$ \u7684\u589e\u5927\uff0c\u4e0a\u9762\u90a3\u4e2a\u4e0d\u7b49\u5f0f\u4f1a\u4e00\u76f4\u6210\u7acb\u4e0b\u53bb\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f4d\u7f6e\u5c31\u518d\u4e5f\u4e0d\u4f1a\u88ab\u66f4\u65b0\u4e86\u3002\u4e8e\u662f\u5c31\u53ef\u4ee5\u628a\u90a3\u4e9b\u4f4d\u7f6e\u7684\u6570\u4e22\u51fa\u6765\u88c5\u5728\u53e6\u4e00\u68f5\u7ebf\u6bb5\u6811\u5185\u67e5\u8be2\u5373\u53ef\u3002\u90a3\u5982\u4f55\u627e\u51fa\u8fd9\u4e9b\u4f4d\u7f6e\u5462\uff1f\u4e0a\u9762\u8bf4\u4e86\u7ef4\u62a4\u5355\u8c03\u6808\u7684\u65f6\u5019\u4e0d\u662f\u8981\u5f39\u51fa\u5143\u7d20\u5417\uff0c\u5f39\u51fa\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e0d\u4f1a\u88ab\u66f4\u65b0\u7684\u554a\u3002\n\n\u518d\u8865\u5145\u8bf4\u660e\u4e00\u70b9\u4e0a\u9762\u90a3\u4e2a\u7ef4\u62a4\u6808\u5185\u7b54\u6848\u7684\u7ebf\u6bb5\u6811\u3002\u7531\u4e8e\u5143\u7d20\u95f4\u7684\u5b9e\u9645\u4e0b\u6807\u53ef\u80fd\u5e76\u4e0d\u8fde\u7eed\uff0c\u6211\u5728\u8fd9\u68f5\u6811\u91cc\u7528\u7684\u662f\u6808\u7684\u4e0b\u6807\u3002\u800c\u8fd9\u68f5\u7ebf\u6bb5\u6811\u652f\u6301\u7684\u4fee\u6539\u64cd\u4f5c\u6bd4\u8f83\u79bb\u8c31\uff0c\u5b83\u8981\u6c42\u652f\u6301\u7684\u64cd\u4f5c\u662f\u8fd9\u6837\u7684\uff1a\u7531\u4e8e\u6811\u4e0a\u7684\u6bcf\u7247\u53f6\u5b50\u90fd\u5bf9\u5e94\u7684\u539f\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u800c\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\u90fd\u4f1a\u7ed9\u51fa\u53e6\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4e5f\u5c31\u662f\u5f53\u524d\u679a\u4e3e\u7684\u53f3\u7aef\u70b9\uff09\uff0c\u5e0c\u671b\u6bcf\u4e2a\u53f6\u5b50\u7684\u7b54\u6848\u4fee\u6539\u6210\u6240\u8c13\u201c\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u201d\u51cf\u53bb\u53f6\u5b50\u5bf9\u5e94\u4f4d\u7f6e\u518d\u52a0\u4e00\uff08\u4e5f\u5c31\u662f\u53f6\u5b50\u5bf9\u5e94\u4f4d\u7f6e\u548c\u53f3\u7aef\u70b9\u5f62\u6210\u7684\u5e8f\u5217\u957f\u5ea6\uff09\u3002lazy \u6807\u8bb0\u597d\u8bf4\uff0c\u90a3\u5982\u4f55\u66f4\u65b0\u7b54\u6848\u5462\uff1f\u601d\u8003\u4e0a\u9762\u7684\u90a3\u4e2a\u67ff\u5b50\uff0c\u6240\u8c13\u201c\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u201d\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u8981\u6c42\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u6c42\u67d0\u4e2a\u533a\u95f4\u5185\u6240\u6709\u53f6\u5b50\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\uff0c\u5728\u7ed3\u70b9\u5185\u66f4\u65b0\u5373\u53ef\uff08\u5199\u6cd5\u4e3a\uff0c\u6bcf\u4e2a\u8282\u70b9\u76f4\u63a5\u7ee7\u627f\u5de6\u513f\u5b50\u7684\u90a3\u4e2a\u7b54\u6848\uff09\u3002\n\n\u6211\u662f\u628a\u4e24\u68f5\u7ebf\u6bb5\u6811\u5b8c\u5168\u5206\u5f00\u5199\u7684\uff0c\u611f\u89c9\u4f1a\u66f4\u6e05\u6670\u4e00\u70b9\uff0c\u4ee3\u7801\u6709\u6ce8\u91ca\u3002\u8bdd\u8bf4\u4e3a\u5565\u6211\u9898\u89e3\u53c8\u5199\u4e86\u4e00\u4e2a\u5c0f\u65f6\u3002\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\n//#define feyn\nconst int N=500010;\nusing namespace std;\ninline void read(int &wh){\n    wh=0;int f=1;char w=getchar();\n    while(w<'0'||w>'9'){if(w=='-')f=-1;w=getchar();}\n    while(w<='9'&&w>='0'){wh=wh*10+w-'0';w=getchar();}\n    wh*=f;return;\n}\ninline int max(int s1,int s2){\n\treturn s1<s2?s2:s1;\n}\ninline int min(int s1,int s2){\n\treturn s1<s2?s1:s2;\n}\n\n#define lc (wh<<1)\n#define rc (wh<<1|1)\n#define mid (t[wh].l+t[wh].r>>1) \n//x tree\u662f\u5e9f\u5f03\u7ed3\u70b9\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811 \nnamespace x{\n\tstruct node{\n\t\tint l,r,data;\n\t}t[N<<2];\n\tinline void pushup(int wh){\n\t\tt[wh].data=max(t[lc].data,t[rc].data);\n\t}\n\tinline void build(int wh,int l,int r){\n\t\tt[wh].l=l,t[wh].r=r,t[wh].data=0;\n\t\tif(l==r)return;\n\t\tbuild(lc,l,mid);\n\t\tbuild(rc,mid+1,r);\n\t}\n\tinline void update(int wh,int pl,int val){\n\t\tif(t[wh].l==t[wh].r){\n\t\t\tt[wh].data=val;return;\n\t\t}\n\t\tupdate(pl<=mid?lc:rc,pl,val); \n\t\tpushup(wh);\n\t}\n\tinline int work(int wh,int wl,int wr){\n\t\tif(wl<=t[wh].l&&t[wh].r<=wr)return t[wh].data;\n\t\tint an=0;\n\t\tif(wl<=mid)an=max(an,work(lc,wl,wr));\n\t\tif(wr>mid)an=max(an,work(rc,wl,wr));\n\t\treturn an;\n\t}\n}\n//y\u662f\u6808\u5185\u5143\u7d20\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811 \nnamespace y{\n\tstruct node{\n\t\tint l,r;\n\t\tint lazy,data,pl_min;\n\t\t//data\u662f\u533a\u95f4\u5185\u6743\u503c\u6700\u5927\u7684\u5de6\u7aef\u70b9\u7684\u6743\u503c\n\t\t//pl_min\u662f\u533a\u95f4\u5185\u5728\u539f\u5e8f\u5217\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u6700\u9760\u5de6\u7684\u4f4d\u7f6e \n\t}t[N<<2];\n\tinline void pushup(int wh){\n\t\tt[wh].pl_min=t[lc].pl_min;//\u76f4\u63a5\u7ee7\u627f\u5de6\u513f\u5b50 \n\t\tt[wh].data=max(t[lc].data,t[rc].data);\n\t}\n\tinline void pushnow(int wh,int val){\n\t\tif(val<=t[wh].lazy)return;\n\t\tt[wh].lazy=val;\n\t\tt[wh].data=max(t[wh].data,val-t[wh].pl_min+1);//\u66f4\u65b0\u7b54\u6848 \n\t}\n\tinline void pushdown(int wh){\n\t\tif(t[wh].lazy){\n\t\t\tpushnow(lc,t[wh].lazy);\n\t\t\tpushnow(rc,t[wh].lazy);\n\t\t\tt[wh].lazy=0;\n\t\t}\n\t}\n\tinline void build(int wh,int l,int r){\n\t\tt[wh].l=l,t[wh].r=r,t[wh].data=t[wh].pl_min=t[wh].lazy=0;\n\t\tif(l==r)return;\n\t\tbuild(lc,l,mid);\n\t\tbuild(rc,mid+1,r);\n\t}\n\tinline void update(int wh,int pl,int val){\n\t\tif(t[wh].l==t[wh].r){\n\t\t\tt[wh].data=1;t[wh].lazy=0;t[wh].pl_min=val;return;\n\t\t}\n\t\tpushdown(wh);\n\t\tupdate(pl<=mid?lc:rc,pl,val);\n\t\tpushup(wh);\n\t}\n\tinline void change(int wh,int wl,int wr,int val){\n\t\tif(wl<=t[wh].l&&t[wh].r<=wr){\n\t\t\tpushnow(wh,val);return;\n\t\t}\n\t\tpushdown(wh);\n\t\tif(wl<=mid)change(lc,wl,wr,val);\n\t\tif(wr>mid)change(rc,wl,wr,val);\n\t\tpushup(wh);\n\t}\n\tinline int work(int wh,int wl,int wr){\n\t\tif(wl<=t[wh].l&&t[wh].r<=wr){\n\t\t\treturn t[wh].data;\n\t\t}\n\t\tint an=0;pushdown(wh);\n\t\tif(wl<=mid)an=max(an,work(lc,wl,wr));\n\t\tif(wr>mid)an=max(an,work(rc,wl,wr));\n\t\tpushup(wh);return an;\n\t}\n}\n#undef lc\n#undef rc\n#undef mid\n\n\nstruct node{\n\tint l,r,id;\n}c[N];\ninline bool cmp(node s1,node s2){\n\treturn s1.r<s2.r;\n}\nint m,n,a[N],an[N];\n\nint st[N],top;\nstack<int>st_max;\nvoid solve(){\n\ta[0]=1e9+10;\n\twhile(!st_max.empty())st_max.pop();\n\tst_max.push(top=0);\n\tx::build(1,1,m);y::build(1,1,m);\n\tfor(int i=1,j=1;i<=m;i++){\n\t\twhile(a[st_max.top()]<=a[i])st_max.pop();\n\t\tint pl=st_max.top();st_max.push(i);\n\t\t//find first one bigger than a[i]\n\t\twhile(top&&a[st[top]]>a[i]){\n\t\t\tint now_pl=st[top--];\n\t\t\tint now_data=y::work(1,top+1,top+1);\n\t\t\tx::update(1,now_pl,now_data);\n\t\t}\n\t\tst[++top]=i;y::update(1,top,i);\n\t\tint fir=lower_bound(st+1,st+top+1,pl)-st;\n\t\ty::change(1,fir,top,i);\n\t\t//find ones smaller than a[i]\n\t\twhile(j<=n&&c[j].r==i){\n\t\t\tint now_pl=lower_bound(st+1,st+top+1,c[j].l)-st;\n\t\t\tan[c[j].id]=max(an[c[j].id],y::work(1,now_pl,top));\n\t\t\tan[c[j].id]=max(an[c[j].id],x::work(1,c[j].l,c[j].r));\n\t\t\tj++;\n\t\t}\n\t}\n}\n\nsigned main(){\n\t\n\t#ifdef feyn\n\tfreopen(\"in.txt\",\"r\",stdin);\n\t#endif\n\t\n\tread(m);\n\tfor(int i=1;i<=m;i++)read(a[i]);\n\tread(n);\n\tfor(int i=1;i<=n;i++){\n\t\tread(c[i].l);read(c[i].r);\n\t\tc[i].id=i;\n\t}\n\tsort(c+1,c+n+1,cmp);\n\tsolve();\n\tfor(int i=1;i<=m;i++)a[i]=-a[i];\n\tsolve();\n\tfor(int i=1;i<=n;i++)printf(\"%d\\n\",an[i]);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1658745041,
        "uid": 302383,
        "name": "Feyn",
        "ccfLevel": 0,
        "title": "P8037"
    },
    {
        "content": "\u4e0d\u59a8\u8bbe\u5de6\u5c0f\u53f3\u5927\uff0c\u7136\u540e\u53cd\u7740\u626b\u4e00\u904d\u3002\n\n\u626b\u63cf\u7ebf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u53f3\u7aef\u70b9\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u5408\u6cd5\u5de6\u7aef\u70b9\u90fd\u5e94\u8be5\u662f\u540e\u7f00\u6700\u5c0f\u503c\uff0c\u8fd9\u5f62\u6210\u4e00\u4e2a\u5355\u8c03\u6808\u3002\u800c\u5355\u8c03\u6808\u4e2d\u53ea\u6709\u4e00\u4e2a\u540e\u7f00\u80fd\u6210\u4e3a\u5408\u6cd5\u5de6\u7aef\u70b9\uff0c\u56e0\u4e3a\u8fd8\u8981\u6c42\u53f3\u7aef\u70b9\u662f\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u70b9\u5982\u679c\u88ab\u5f39\u51fa\u6808\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u628a\u5b83\u4f5c\u4e3a\u5de6\u7aef\u70b9\u7684\u6700\u957f\u533a\u95f4\u653e\u5165\u7ebf\u6bb5\u6811\u5373\u53ef\uff0c\u56e0\u4e3a\u5b83\u518d\u4e5f\u4e0d\u53ef\u80fd\u79f0\u4e3a\u5408\u6cd5\u5de6\u7aef\u70b9\u4e86\u3002\u5bf9\u4e8e\u6808\u4e2d\u7684\u5143\u7d20\u6211\u4eec\u5219\u8981\u7ef4\u62a4\u5176\u6700\u8fdc\u53f3\u7aef\u70b9\uff0c\u800c\u7531\u4e8e\u6bcf\u6b21\u66f4\u65b0\u4e00\u4e2a\u540e\u7f00\uff0c\u4e8e\u662f\u4e5f\u53ef\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u67e5\u8be2\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u4e8e\u4e0d\u5728\u6808\u4e2d\u7684\u53ea\u9700\u7ebf\u6bb5\u6811\u67e5\u8be2\uff0c\u5bf9\u4e8e\u5728\u6808\u4e2d\u7684\u4e5f\u662f\u540e\u7f00\u67e5\u8be2\uff0c\u53ea\u662f\u6211\u4eec\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e2d\u591a\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u957f\u5ea6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u5bf9\u6570\u3002\u4ee3\u7801\u6ca1\u4ec0\u4e48\u7ec6\u8282\uff0c\u4e0d\u653e\u4e86\uff08\u6ca1\u5199\uff09\u3002",
        "postTime": 1679412553,
        "uid": 152234,
        "name": "hrgd",
        "ccfLevel": 0,
        "title": "P8037"
    },
    {
        "content": "\u5047\u8bbe\u5de6\u7aef\u70b9\u662f\u6700\u5c0f\u503c\uff0c\u53f3\u7aef\u70b9\u662f\u6700\u5927\u503c\uff0c\u7136\u540e\u53cd\u8f6c\u518d\u505a\u4e00\u904d\u3002\n\n\u76f4\u89c2\u4e0a\u611f\u89c9\u4e0d\u80fd\u5728\u7ebf\u6bb5\u6811\u4e0a\u7ef4\u62a4\u7b54\u6848\uff0c\u6240\u4ee5\u5c1d\u8bd5\u628a\u8be2\u95ee\u79bb\u7ebf\u626b\u63cf\u7ebf\u3002\u6734\u7d20\u5730\uff0c\u4ee4\u6307\u9488 $u$ \u4ece\u5de6\u5f80\u53f3\u626b\uff0c\u540c\u65f6\u5bf9\u4e8e\u6bcf\u4e2a $i\\leq u$ \u7ef4\u62a4 $f_i$ \u8868\u793a\u4ee5 $i$ \u4e3a\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u4e0d\u8d85\u8fc7 $u$ \u7684\u6700\u5927\u957f\u5ea6\uff0c\u5219 $u=R$ \u65f6\u56de\u7b54\u8be2\u95ee $[L,R]$ \u7684\u7b54\u6848\u4e3a $\\max_{i=L}^R\\{f_i\\}$\u3002\u8003\u8651 $u$ \u5411\u53f3\u79fb\u52a8\u4e00\u683c\u65f6\u5bf9 $f$ \u7684\u5f71\u54cd\uff0c\u9884\u5904\u7406\u51fa $l_i$ \u8868\u793a $i$ \u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4 $a_i$ \u5927\u7684\u4f4d\u7f6e\uff0c$r_i$ \u8868\u793a $i$ \u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4 $a_i$ \u5c0f\u7684\u4f4d\u7f6e\uff0c\u5219 $u$ \u80fd\u5f71\u54cd\u5230 $f_i$ \u5f53\u4e14\u4ec5\u5f53 $l_u\\leq i$ \u4e14 $r_i\\ge u$\u3002\u5982\u679c\u5f53\u524d\u7684 $u>r_i$\uff0c\u5219\u4e4b\u540e\u7684 $u$ \u4e00\u5b9a\u4e0d\u80fd\u66f4\u65b0 $f_i$\uff0c\u76f8\u5f53\u4e8e\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5355\u8c03\u6808\uff0c\u53ea\u6709\u5728\u6808\u4e2d\u7684\u5143\u7d20 $i$ \u7684 $f_i$ \u624d\u53ef\u80fd\u66f4\u65b0\uff0c\u88ab\u5f39\u51fa\u4e4b\u540e\u5c31\u4e0d\u53ef\u80fd\u518d\u66f4\u65b0\u4e86\u3002\u5bf9\u4e8e $u$ \u7684\u52a0\u5165\uff0c\u627e\u5230\u6808\u9876\u7684\u82e5\u5e72\u5143\u7d20\u6ee1\u8db3\u5176\u5927\u4e8e $l_u$\uff0c\u5219\u8fd9\u4e9b $f_i$ \u90fd\u5e94\u8be5\u88ab\u66f4\u65b0\u4e3a\u4ee5 $u$ \u4e3a\u53f3\u7aef\u70b9\u7684\uff0c\u4e0d\u59a8\u5206\u6790\u4e00\u4e0b\uff0c\u6808\u4e2d\u5143\u7d20\u5f53\u524d\u5bf9\u5e94\u7684\u53f3\u7aef\u70b9\u662f\u5206\u6bb5\u7684\uff0c\u4e14\u6bcf\u4e2a $u$ \u4f1a\u6dfb\u52a0\u81f3\u591a\u4e00\u6bb5\uff0c\u5219\u66b4\u529b\u5411\u524d\u4e00\u6bb5\u4e00\u6bb5\u66f4\u65b0\u7684\u6b21\u6570\u5747\u644a\u4e5f\u662f $O(n)$\u3002\n\n\u4e8e\u662f\u601d\u8def\u5c31\u6e05\u6670\u4e86\uff1a\u9884\u5904\u7406\u51fa $l_i$\u3002\u626b\u63cf\u7ebf\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u4e00\u4e2a\u4e0d\u51cf\u7684\u5355\u8c03\u6808 $s_1$\uff0c\u5176\u4e2d\u7684\u5143\u7d20 $i$ \u8868\u793a $[i,u]$ \u8fd8\u6ca1\u6709\u51fa\u73b0 $<a_i$ \u7684\uff0c$f_i$ \u8fd8\u6709\u53ef\u80fd\u66f4\u65b0\uff0c\u7528\u4e00\u68f5\u7ebf\u6bb5\u6811 $T_1$ \u6765\u7ef4\u62a4\u8fd9\u4e9b $i$ \u7684 dp \u503c\u3002$u$ \u79fb\u52a8\u65f6\u66f4\u65b0\u6808\u9876\u6240\u6709 $>l_u$ \u7684 $i$ \u7684 dp \u503c\uff0c\u540c\u6bb5\u7684\u66f4\u65b0\u662f\u533a\u95f4\u52a0\u76f8\u540c\u7684\u6570\u3002\u5f53\u4e00\u4e2a $i$ \u4ece $s_1$ \u88ab\u5f39\u51fa\u65f6\uff0c\u5176 $f_i$ \u4e0d\u5e94\u8be5\u63a5\u53d7\u4e4b\u540e\u7684\u66f4\u65b0\uff0c\u5728 $T_1$ \u4e0a\u5c06 $f_i$ \u8bbe\u4e3a $-\\inf$\uff0c\u5e76\u5c06\u5176\u632a\u5230\u53e6\u4e00\u68f5\u7ebf\u6bb5\u6811 $T_2$ \u4e0a\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $[L,R]$\uff0c\u5728 $u=R$ \u65f6\u67e5\u8be2 $T_1,T_2$ \u4e0a $[L,R]$ \u5185\u7684\u6700\u5927\u503c\u3002\u5bf9\u6bb5\u7684\u7ef4\u62a4\u53e6\u5f00\u4e00\u4e2a\u6808 $s_2$ \u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u5e38\u6570\u7565\u5927\u3002",
        "postTime": 1675844015,
        "uid": 447750,
        "name": "luogubot",
        "ccfLevel": 0,
        "title": "P8037"
    },
    {
        "content": "# \u6d1b\u8c37 P8037 \u9898\u89e3\n\n[$\\text{Link}$](https://www.luogu.com.cn/problem/P8037)\n\n## \u601d\u8def\u5206\u6790\n\n\u597d\u9898\uff0c\u8003\u8651\u5bf9\u8be2\u95ee\u79bb\u7ebf\u5e76\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\n\n\u6211\u4eec\u5148\u8003\u8651\u53f3\u7aef\u70b9\u662f\u6700\u5927\u503c\u7684\u60c5\u51b5\uff0c\u53cd\u8fc7\u6765\u7684\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u6570\u53d6\u53cd\u518d\u505a\u4e00\u6b21\n\n\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u4e3a\u533a\u95f4\u5de6\u7aef\u70b9\u80fd\u591f\u8fbe\u5230\u6700\u8fdc\u7684\u53f3\u7aef\u70b9\n\n\u8003\u8651\u52a0\u5165\u65b0\u7684\u4e00\u4e2a\u70b9 $a_r$\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u66f4\u65b0\u67d0\u4e00\u6bb5\u533a\u95f4 $[l,r]$ \u4e2d\u7684\u6570\u7684\u53f3\u7aef\u70b9\u4e3a $r$\uff0c\u5176\u4e2d $l$ \u4e3a\u6ee1\u8db3 $l\\le r$ \u4e14 $a_{l-1}>a_r$ \u7684\u6700\u5927\u6574\u6570\n\n\u4e3a\u4e86\u5feb\u901f\u6c42\u51fa $l$\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u9012\u51cf\u7684\u5355\u8c03\u6808\n\n\u63a5\u4e0b\u6765\u8003\u8651 $[l,r]$ \u533a\u95f4\u5185\u6709\u54ea\u4e9b\u70b9\u7684\u53f3\u7aef\u70b9\u53ef\u4ee5\u88ab\u66f4\u65b0\u4e3a $r$\uff0c\u5047\u8bbe\u67d0\u4e2a\u70b9 $a_x$ \u7684\u53f3\u7aef\u70b9\u53ef\u4ee5\u88ab\u66f4\u65b0\u4e3a $r$\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a\n$$\n\\forall k\\in[x,r],a_k\\ge a_x\n$$\n\u90a3\u4e48\u5982\u679c\u52a0\u5165 $a_r$\uff0c\u6bcf\u4e00\u4e2a\u6ee1\u8db3 $a_x> a_r$ \u7684\u70b9\u4ee5\u540e\u5c31\u4e00\u76f4\u4e0d\u80fd\u88ab\u66f4\u65b0\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u7ef4\u62a4\u4e00\u4e2a\u9012\u589e\u7684\u5355\u8c03\u6808\uff0c\u6bcf\u6b21\u5f39\u6808\u5f39\u6389\u7684\u8fd9\u4e9b\u5143\u7d20\u5c31\u4e0d\u80fd\u518d\u66f4\u65b0\u53f3\u7aef\u70b9\n\n\u8003\u8651\u5bf9\u4ee5\u4e0a\u64cd\u4f5c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\n- \u7ef4\u62a4\u5f53\u524d\u533a\u95f4\u53ef\u4ee5\u4f7f $r$ \u4f5c\u4e3a\u53f3\u7aef\u70b9\u5e76\u5f62\u6210\u5408\u6cd5\u533a\u95f4\u7684\u7b2c\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u6ca1\u6709\u5219\u8bbe\u4e3a $0$\n- \u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u5de6\u7aef\u70b9\u80fd\u83b7\u5f97\u7684\u6700\u5927\u533a\u95f4\u957f\u5ea6\u7684\u6700\u5927\u503c\n- \u533a\u95f4\u66f4\u65b0\u53f3\u7aef\u70b9\u7684 LazyTag\n\n\u6ce8\u610f\u90a3\u4e9b\u4e0d\u80fd\u66f4\u65b0\u53f3\u7aef\u70b9\u7684\u70b9\u4f9d\u7136\u53ef\u80fd\u5bf9\u7b54\u6848\u505a\u51fa\u8d21\u732e\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n\\log n)$\n\n> \u603b\u7ed3\uff1a\n>\n> \u79bb\u7ebf\u6309\u53f3\u7aef\u70b9\u6392\u5e8f\u662f\u5904\u7406\u533a\u95f4\u95ee\u9898\u7684\u4e00\u4e2a\u5e38\u7528 trick\uff08\u5c31\u662f\u4e0d\u77e5\u9053\u672c\u9898\u5f3a\u5236\u5728\u7ebf\u600e\u4e48\u505a\u3002\u3002\u3002\uff09\n>\n> \u628a\u6240\u6709\u6570\u53d6\u53cd\u518d\u8dd1\u4e00\u904d\u7684 trick \u770b\u8d77\u6765\u597d\u50cf\u4e5f\u8fd8\u633a\u9ad8\u5999\u7684\n>\n> \u6709\u4e9b\u533a\u95f4\u95ee\u9898\u53ef\u4ee5\u56fa\u5b9a\u53f3\u7aef\u70b9\u7136\u540e\u8003\u8651\u5de6\u7aef\u70b9\u7684\u8d21\u732e\uff0c\u8fd9\u4e2a\u505a\u6cd5\u597d\u50cf\u6211\u8fd8\u6ca1\u89c1\u8fc7\n\n\u4e00\u4e9b\u5b9e\u73b0\u7684\u7ec6\u8282\u8bf7\u770b\u4ee3\u7801\n\n### \u4ee3\u7801\u5448\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=5e5+1;\nint n,m;\nclass SegmentTree {\n\tprivate:\n\t\tstruct node {\n\t\t\tint pos,len,tag;\n\t\t\t/*\n\t\t\t * pos: \u5f53\u524d\u6700\u5de6\u5408\u6cd5\u5de6\u7aef\u70b9 \n\t\t\t * len: \u5f53\u524d\u533a\u95f4\u6700\u5927\u957f\u5ea6\n\t\t\t * tag: \u533a\u95f4\u66f4\u65b0\u53f3\u7aef\u70b9\u7684\u61d2\u6807\u8bb0 \n\t\t\t */\n\t\t}\ttree[MAXN<<2];\n\t\tinline int left(int x) {\n\t\t\treturn x<<1;\n\t\t}\n\t\tinline int right(int x) {\n\t\t\treturn x<<1|1;\n\t\t}\n\t\tinline void pushup(int pos) {\n\t\t\ttree[pos].len=max(tree[left(pos)].len,tree[right(pos)].len);\n\t\t\ttree[pos].pos=(!tree[left(pos)].pos)?tree[right(pos)].pos:tree[left(pos)].pos;\n\t\t}\n\t\tinline void pushdown(int pos) {\n\t\t\t//\u7528pos\u4f5c\u4e3a\u53f3\u7aef\u70b9\u66f4\u65b0\u4e24\u4e2a\u533a\u95f4\u7684\u6700\u5927\u957f\u5ea6 \n\t\t\tif(!tree[pos].tag) return ;\n\t\t\ttree[left(pos)].tag=max(tree[left(pos)].tag,tree[pos].tag);\n\t\t\ttree[right(pos)].tag=max(tree[right(pos)].tag,tree[pos].tag);\n\t\t\tif(tree[left(pos)].pos) {\n\t\t\t\ttree[left(pos)].len=max(tree[left(pos)].len,tree[pos].tag-tree[left(pos)].pos+1);\n\t\t\t}\n\t\t\tif(tree[right(pos)].pos) {\n\t\t\t\ttree[right(pos)].len=max(tree[right(pos)].len,tree[pos].tag-tree[right(pos)].pos+1);\n\t\t\t}\n\t\t\ttree[pos].tag=0;\n\t\t}\n\tpublic:\n\t\tinline void Build(int l=1,int r=n,int pos=1) {\n\t\t\tif(l==r) {\n\t\t\t\ttree[pos].pos=tree[pos].len=tree[pos].tag=0;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tBuild(l,mid,left(pos));\n\t\t\tBuild(mid+1,r,right(pos));\n\t\t\tpushup(pos);\n\t\t}\t\n\t\tinline void ModifyL(int u,int k,int l=1,int r=n,int pos=1) {\n\t\t\t//\u4fee\u6539\u5de6\u7aef\u70b9\u662f\u5426\u5408\u6cd5 \n\t\t\tif(l==r) {\n\t\t\t\ttree[pos].pos=k;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tpushdown(pos);\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(u<=mid) ModifyL(u,k,l,mid,left(pos));\n\t\t\telse ModifyL(u,k,mid+1,r,right(pos));\n\t\t\tpushup(pos);\n\t\t}\n\t\tinline void ModifyR(int ul,int ur,int k,int l=1,int r=n,int pos=1) {\n\t\t\t//\u533a\u95f4\u4fee\u6539\u53f3\u7aef\u70b9 \n\t\t\tif(ul<=l&&r<=ur) {\n\t\t\t\tif(tree[pos].pos) tree[pos].len=max(tree[pos].len,k-tree[pos].pos+1);\n\t\t\t\ttree[pos].tag=max(tree[pos].tag,k);\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tpushdown(pos);\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(ul<=mid) ModifyR(ul,ur,k,l,mid,left(pos));\n\t\t\tif(mid<ur) ModifyR(ul,ur,k,mid+1,r,right(pos));\n\t\t\tpushup(pos);\n\t\t}\n\t\tinline int Query(int ql,int qr,int l=1,int r=n,int pos=1) {\n\t\t\tif(ql<=l&&r<=qr) return tree[pos].len;\n\t\t\tpushdown(pos);\n\t\t\tint mid=(l+r)>>1,res=0;\n\t\t\tif(ql<=mid) res=max(res,Query(ql,qr,l,mid,left(pos)));\n\t\t\tif(mid<qr) res=max(res,Query(ql,qr,mid+1,r,right(pos)));\n\t\t\treturn res;\n\t\t}\n}\tS;\nstruct query {\n\tint l,id;\n};\nvector <query> q[MAXN];\nint st1[MAXN],st2[MAXN],a[MAXN],ans[MAXN];\ninline void solve() {\n\tst1[0]=st2[0]=0; //\u5355\u8c03\u6808\u6808\u9876 \n\tS.Build();\n\tfor(int i=1;i<=n;++i) {\n\t\twhile(st1[0]&&a[st1[st1[0]]]<=a[i]) --st1[0];\n\t\tint l=st1[st1[0]]+1;\n\t\tst1[++st1[0]]=i;\n\t\twhile(st2[0]&&a[st2[st2[0]]]>a[i]) {\n\t\t\tS.ModifyL(st2[st2[0]],0);\n\t\t\t//\u8fd9\u4e2a\u70b9\u4ee5\u540e\u90fd\u4e0d\u80fd\u66f4\u65b0\u65b0\u7684\u53f3\u7aef\u70b9\u4e86 \n\t\t\t--st2[0];\n\t\t}\n\t\tst2[++st2[0]]=i;\n\t\tS.ModifyL(i,i);\n\t\tS.ModifyR(l,i,i);\n\t\tfor(auto qry:q[i]) {\n\t\t\tans[qry.id]=max(ans[qry.id],S.Query(qry.l,i));\n\t\t}\n\t}\n}\nsigned main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;++i) {\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tq[r].push_back((query){l,i});\n\t}\n\tsolve();\n\tfor(int i=1;i<=n;++i) a[i]*=-1;\n\tsolve();\n\tfor(int i=1;i<=m;++i) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1659318298,
        "uid": 539618,
        "name": "DaiRuiChen007",
        "ccfLevel": 6,
        "title": "\u6d1b\u8c37 P8037 \u9898\u89e3"
    }
]