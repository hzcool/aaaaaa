[
    {
        "content": "\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u4e2a\u9898\u672c\u8d28\u662f\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217 $a_i$\uff0c\u7136\u540e\u9700\u8981\u7ed9\u6bcf\u4e2a $a_i$ \u52a0\u4e0a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u5f97\u5230\u5e8f\u5217 $b_i$\uff0c\u4f7f\u5f97\u6700\u540e\u7684\u5e8f\u5217\u6ee1\u8db3\u8fd9\u6837\u7684\u6761\u4ef6\uff1a\n\n\u53ef\u4ee5\u5c06\u6574\u4e2a\u5e8f\u5217\u5206\u6210\u5947\u6570\u6bb5\uff0c\u4f7f\u5f97\u4e00\u6bb5\u5185\u7684\u6570\u90fd\u76f8\u7b49\uff0c\u4e14\u76f8\u90bb\u4e24\u6bb5\u4e4b\u95f4\u6ee1\u8db3 $<,>,<,...>$ \u7684\u5173\u7cfb\u3002\u5373\u5f62\u6210\u8c37\uff0c\u5cf0\uff0c\u8c37\uff0c\u5cf0...\uff0c\u8c37\u8fd9\u6837\u7684\u5f62\u5f0f\u3002\n\n\u7136\u540e\u8981\u6700\u5c0f\u5316\u52a0\u4e0a\u7684\u6570\u7684\u548c\u3002\n\n\u505a\u6cd5\u4ec0\u4e48\u7684\u53ef\u4ee5\u770b\u522b\u7684\u9898\u89e3\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bc1\u660e\u4e00\u4e0b\u7ed3\u8bba\u3002\n\n\u7ed3\u8bba\u662f\u4e00\u5b9a\u5b58\u5728\u4e00\u7ec4\u6700\u4f18\u7684 $b_i$ \u6ee1\u8db3\u5bf9\u4e8e\u4efb\u610f $i$\uff0c$\\exists j,|i-j|\\leq 2,b_i\\in[a_j,a_j+1]$\uff08\u7f51\u4e0a\u5199\u7684\u7ed3\u8bba\u662f $[a_j,a_j+2]$\uff0c\u6211\u662f\u8bc1\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u7ed3\u8bba\u5b9e\u9645\u4e0a\u66f4\u5f3a\u3002\uff09\n\n\u6211\u4eec\u9996\u5148\u8003\u8651\u4e00\u4e0b\u5982\u679c\u6bcf\u6bb5\u957f\u5ea6\u90fd\u662f $1$\uff08\u5373\u76f8\u90bb\u4e24\u6570\u90fd\u4e0d\u76f8\u7b49\uff09\uff0c\u90a3\u4e48\u6709\u663e\u7136\u7684\u7ed3\u8bba\uff1a\u82e5 $i$ \u5728\u8c37\uff0c\u90a3\u4e48 $b_i=a_i$\uff0c\u82e5 $i$ \u5728\u5cf0\uff0c\u90a3\u4e48 $b_i=\\max(a_i,a_{i-1}+1,a_{i+1}+1)$\u3002\u56e0\u4e3a\u4e00\u4e2a\u8c37\u7684\u4f4d\u7f6e\u6211\u4eec\u4e00\u5b9a\u4e0d\u4f1a\u7ed9\u5b83\u52a0\uff0c\u800c\u5cf0\u7684\u4f4d\u7f6e\u53ea\u8981\u52a0\u5230\u6bd4\u76f8\u90bb\u4e24\u6570\u5927\u5373\u53ef\u3002\n\n\u7136\u800c\u73b0\u5728\u9ebb\u70e6\u7684\u5730\u65b9\u5728\u4e8e\u6bb5\u957f\u5ea6\u4e0d\u4e3a $1$ \u7684\u65f6\u5019\u3002\n\n\u6211\u4eec\u7684\u601d\u8def\u662f\u5148\u968f\u4fbf\u8003\u8651\u4e00\u4e2a\u5408\u6cd5\u7684\u89e3\uff0c\u7136\u540e\u6765\u6539\u9020\u5b83\u4f7f\u5f97\u4ee3\u4ef7\u4e0d\u589e\u5e76\u4f7f\u5b83\u6ee1\u8db3\u4e00\u4e9b\u7279\u6b8a\u7684\u6027\u8d28\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a $b_i=a_i$ \u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u79f0\u5b83\u4e3a**\u56fa\u5b9a\u70b9**\uff0c\u5bf9\u4e8e\u4e00\u4e2a $b_i\\in [a_i,a_i+1]$ \u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u79f0\u5b83\u4e3a**\u5f31\u56fa\u5b9a\u70b9**\u3002\n\n\u4e0b\u9762\u8ba8\u8bba\u7684\u6bb5\u90fd\u662f\u957f\u5ea6 $>2$ \u7684\u6bb5\u3002\n\n\u9996\u5148\u8003\u8651\u6bb5\u7684\u4e24\u7aef\uff0c\u5bf9\u4e8e\u8c37\uff0c\u82e5\u5b83\u67d0\u4e00\u7aef\u4e0d\u662f\u56fa\u5b9a\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u6570\u51cf\u4e00\uff0c\u6bb5\u4e2d\u4e0e\u5b83\u76f8\u90bb\u7684\u6570\u52a0\u4e00\u3002\u5bf9\u4e8e\u5cf0\uff0c\u82e5\u5b83\u67d0\u4e00\u7aef\u91cc\u9762\u4e00\u4e2a\u6570\u4e0d\u662f\u56fa\u5b9a\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u8ba9\u8fd9\u4e00\u7aef\u52a0\u4e00\uff0c\u91cc\u9762\u90a3\u4e2a\u6570\u51cf\u4e00\u3002\n\n\u7136\u540e\u8003\u8651\u6bb5\u7684\u5185\u90e8\u3002\n\n\u5bf9\u4e8e\u8c37\uff0c\u6211\u4eec\u8003\u8651\u627e\u5230\u5185\u90e8\u76f8\u90bb\u7684\u4e09\u4e2a\u4f4d\u7f6e\uff0c\u6ee1\u8db3\u4e2d\u95f4\u7684\u4f4d\u7f6e\u4e0d\u662f\u5f31\u56fa\u5b9a\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba9\u4e2d\u95f4\u8fd9\u4e2a\u4f4d\u7f6e\u51cf\u4e8c\uff0c\u5176\u4ed6\u4e24\u4e2a\u4f4d\u7f6e\u52a0\u4e00\u3002\n\n\u5bf9\u4e8e\u5cf0\uff0c\u6211\u4eec\u8003\u8651\u627e\u5230\u5185\u90e8\u76f8\u90bb\u7684\u4e09\u4e2a\u4f4d\u7f6e\uff0c\u6ee1\u8db3\u4e24\u8fb9\u7684\u4f4d\u7f6e\u90fd\u4e0d\u662f\u56fa\u5b9a\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba9\u4e2d\u95f4\u8fd9\u4e2a\u4f4d\u7f6e\u52a0\u4e8c\uff0c\u5176\u4ed6\u4e24\u4e2a\u4f4d\u7f6e\u51cf\u4e00\u3002\n\n\u753b\u753b\u56fe\u5c31\u53ef\u4ee5\u77e5\u9053\u6211\u4eec\u7684\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u4e0d\u6539\u53d8\u89e3\u7684\u5408\u6cd5\u6027\u3002\u4e0d\u505c\u5730\u505a\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u76f4\u5230\u65e0\u6cd5\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u957f\u5ea6 $>2$ \u7684\u6bb5\u5185\u90e8\u7684\u6570\u90fd\u6ee1\u8db3\u4e0a\u9762\u63d0\u5230\u7684\u7ed3\u8bba\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u628a\u540c\u4e00\u6bb5\u770b\u4f5c\u4e00\u4e2a\u6570\uff0c\u5b83\u65b0\u7684\u503c $a'_i$ \u662f\u6bb5\u5185 $a_i$ \u7684 $\\max$\u3002\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\u4e00\u6bb5 $[l,r]$ \u7684 $a'_i$ \u6ee1\u8db3 $a'_i=\\max(a_l,a_{l+1})=\\max(a_{r-1},a_r)$\n\n\u56e0\u4e3a\u5bf9\u4e8e\u957f\u5ea6\u4e3a $2$ \u7684\u6bb5\u663e\u7136\uff0c\u800c\u957f\u5ea6\u5927\u4e8e $3$ \u7684\u6bb5\u7ecf\u8fc7\u4e0a\u9762\u7684\u64cd\u4f5c\u4e00\u5b9a\u5728\u4e0e\u7aef\u70b9\u8ddd\u79bb $\\leq1$ \u7684\u4f4d\u7f6e\u5b58\u5728\u56fa\u5b9a\u70b9\u3002\n\n\u6211\u4eec\u73b0\u5728\u53ea\u5173\u5fc3\u957f\u5ea6\u4e3a $2$ \u7684\u6bb5..\u90a3\u4e48\u8c37\u663e\u7136\u6ee1\u8db3\u7ed3\u8bba\uff0c\u56e0\u4e3a $a_i=\\max(a_i,a_{i+1})$ \u6216 $\\max(a_{i-1},a_i)$\uff0c\u800c\u5bf9\u4e8e\u957f\u5ea6\u4e3a $2$ \u7684\u6bb5\u6784\u6210\u7684\u5cf0\uff0c\u5982\u679c\u8fd9\u4e2a\u5cf0\u53d6\u5230\u4e86\u81ea\u5df1\u7684 $a'$\uff0c\u90a3\u4e48\u6ee1\u8db3\u6761\u4ef6\uff0c\u5426\u5219\u4ecd\u7136\u6709\u4e00\u70b9\u68d8\u624b\u3002\n\n\u6211\u4eec\u73b0\u5728\u7ea6\u5b9a\u8fd9\u4e2a\u5cf0\u88ab\u5b83\u53f3\u8fb9\u7684\u8c37\u9650\u5236\u3002\u5373\u53f3\u8fb9\u7684 $a'$ \u6bd4\u8f83\u5927\u3002\u90a3\u4e48\u770b\u8d77\u6765\u5f53\u53f3\u8fb9\u7684\u8c37\u957f\u5ea6\u4e3a $2$ \u65f6\uff0c\u5cf0\u4e2d\u7684\u5de6\u5143\u7d20\u4e0e\u8c37\u4e2d\u7684\u56fa\u5b9a\u70b9\u4f1a\u76f8\u8ddd $3$..\u5f53\u7136\u8bc1\u5230\u8fd9\u91cc\u4ecd\u7136\u5f97\u5230\u4e86\u53d6\u503c\u4e2a\u6570\u4e3a\u5e38\u6570\uff0c\u53ea\u4e0d\u8fc7\u7a0d\u5fae\u5f31\u4e86\u4e00\u70b9\u3002\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u6ee1\u8db3\u3002\n\n\u8003\u8651\u5982\u679c\u5cf0\u4e2d\u7684\u53f3\u5143\u7d20\u4e0d\u662f\u56fa\u5b9a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba9\u5cf0\u4e2d\u7684\u53f3\u5143\u7d20\u51cf\u4e00\uff0c\u8c37\u4e2d\u7684\u5de6\u5143\u7d20\u52a0\u4e00\uff0c\u6b64\u65f6\u5cf0\u7684\u957f\u5ea6\u5c31\u51cf\u4e00\uff0c\u53d8\u6210\u957f\u5ea6\u4e3a $1$ \u7684\u5cf0\u3002\u6b64\u65f6\u56e0\u4e3a\u539f\u6765\u6ee1\u8db3 $b=a'+1$\uff0c\u5bb9\u6613\u53d1\u73b0\u4ecd\u7136\u6ee1\u8db3\u6761\u4ef6\u3002\u505a\u4e0d\u4e86\u8fd9\u4e2a\u64cd\u4f5c\u7684\u5cf0\u4e00\u5b9a\u6ee1\u8db3\u53f3\u5143\u7d20\u662f\u56fa\u5b9a\u70b9\uff0c\u90a3\u4e48\u5c31\u6ee1\u8db3\u6027\u8d28\u4e86\u3002\n\uff08\u8fd9\u91cc\u6ce8\u610f\u4e00\u4e0b\u6bcf\u6b21\u6211\u4eec\u64cd\u4f5c\u5b8c\u4e4b\u540e\u6bb5\u7684\u5f62\u6001\u4f1a\u53d8\u5316\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u6c42 $a'$ \u7136\u540e\u5f97\u5230\u65b0\u7b54\u6848\uff09\n\n\u6211\u4eec\u6765\u603b\u7ed3\u4e00\u4e0b\uff1a\n\n\u957f\u5ea6\u4e3a $1$ \u8c37\uff1a$b_i=a_i$\n\n\u957f\u5ea6\u4e3a $2$ \u8c37\uff1a$\\exists j,|i-j|\\leq 1,b_i=a_j$\n\n\u957f\u5ea6 $>2$ \u8c37\uff1a$\\exists j,|i-j|\\leq 1,b_i=a_j$ \u6216 $b_i\\in[a_i,a_i+1]$\n\n\u957f\u5ea6\u4e3a $1$ \u5cf0\uff1a$\\exists j,|i-j|\\leq 2,b_i\\in [a_j,a_j+1]$\n\n\u957f\u5ea6\u4e3a $2$ \u5cf0\uff1a$\\exists j,|i-j|\\leq 1,b_i=a_j$\n\n\u957f\u5ea6 $>2$ \u5cf0\uff1a$\\exists j,|i-j|\\leq 1,b_i=a_j$\n\n\u7efc\u4e0a\uff0c\u5bf9\u4e8e\u4efb\u610f $i$\uff0c$\\exists j,|i-j|\\leq 2,b_i\\in[a_j,a_j+1]$\u3002",
        "postTime": 1593442091,
        "uid": 142099,
        "name": "jiqimao",
        "ccfLevel": 0,
        "title": "P2703 [NOI2006]\u5343\u5e74\u866b \u9898\u89e3"
    },
    {
        "content": "~~\u8fd9\u7834\u73a9\u610f\u80af\u5b9a\u8fc7\u4e0d\u4e86\u5ba1~~\n\nDP+\u9ed1\u79d1\u6280\u4f18\u5316\n\n\u9996\u5148\u5de6\u53f3\u4e92\u4e0d\u5e72\u6270\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5904\u7406\u53f3\u8fb9\u5728\u628a\u5de6\u8fb9\u5750\u6807\u5904\u7406\u4e00\u4e0b\uff08\u89c1\u4ee3\u7801\uff09\n\n\u8dd1\u4e00\u6837\u7684\u7834\u73a9\u610f\u5c31\u597d\u4e86\n\n\u4ee4f[i][j][k]\u8868\u793a\u5904\u7406\u5230i\uff0c\u7b2ci\u884c\u957f\u4e3aj\uff0c\u6700\u540e\u72b6\u6001\u662f\u51f9/\u51f8\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n\u8f6c\u79fb\uff1af[i][j][k]=min(f[i-1][j-1][k],f[i-1][p][1-k])(p<j&&s==1 || p>j&&k==0)\n\n\u7136\u540e\u4f60\u628a\u8fd9\u4e2a\u4e1c\u897f\u5199\u51fa\u6765\u4ea4\u4e0a\u53bb\u5c31TLE~~\u8eab\u8d25\u540d\u88c2~~\u4e86\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u600e\u4e48\u4f18\u5316\u8fd9\u4e2a\u4e1c\u897f\n\n\u4ee4g[i]\u8868\u793a\u76ee\u524d\u8fd9\u4e00\u534ai\u4f4d\u7f6e\u4e0a\u7684\u9ad8\u5ea6\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u6bcf\u6b21\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u771f\u6b63\u6709\u7528j\u7684\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\n\n\u5c31g[c]~g[c]+2(i-2<=c<=i+2)\u8fd9\u4e00\u5c0f\u6bb5\n\n\u600e\u4e48\u8bc1\u660e\uff1f\n\n\u5f53\u7136\u662f\u9760~~\u6570\u5b66\u77e5\u8bc6\u8bc1~~\u6253\u8868\u627e\u89c4\u5f8b\u554a\uff01\n\n\u6253\u51e0\u4e2a\u8868\uff0c\u5927\u80c6\u731c\u6d4b\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u7136\u540ej\u7684\u679a\u4e3e\u8303\u56f4\u5c31\u662f\u6709\u9650\u7684\u4e86\n\n\u7136\u540e\u590d\u6742\u5ea6\u5c31\u662f\u7ebf\u6027\u7684\u4e86\uff0c\u7136\u540e\u5c31A\u4e86\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1000000+10;\nconst int inf=0x3f3f3f3f;\ntypedef long long ll;\ntypedef double ddf;\nint n,m;\nint l[N],g[N],f[2][N][2],pr,nt;\nint t[2],s[2][N];\nint ass;\nvoid fuck(){\n\tmemset(f,0x3f,sizeof(f));\n\tt[1]=0;\n\tfor(int j=1;j<=3;j++){\n\t\tfor(int k=g[j];k<=g[j]+2;k++){\n\t\t\tif(k>=g[1])s[1][++t[1]]=k;\n\t\t}\n\t}\n\tfor(int i=1;i<=t[1];i++)f[1][i][0]=s[1][i]-g[1];\n\tpr=0,nt=1;\n\tfor(int i=2;i<=n;i++){\n\t\tpr^=1,nt^=1;t[nt]=0;\n\t\tint lf=max(1,i-2),rf=min(n,i+2);\n\t\tfor(int j=lf;j<=rf;j++){\n\t\t\tfor(int k=g[j];k<=g[j]+2;k++){\n\t\t\t\tif(k>=g[i])s[nt][++t[nt]]=k;\n\t\t\t}\n\t\t}\n\t\tfor(int j=1;j<=t[nt];j++){\n\t\t\tf[nt][j][1]=f[nt][j][0]=inf;\n\t\t\tfor(int k=1;k<=t[pr];k++){\n\t\t\t\tif(s[pr][k]>s[nt][j])f[nt][j][0]=min(f[nt][j][0],f[pr][k][1]);\n\t\t\t\telse if(s[pr][k]<s[nt][j])f[nt][j][1]=min(f[nt][j][1],f[pr][k][0]);\n\t\t\t\telse f[nt][j][0]=min(f[nt][j][0],f[pr][k][0]),f[nt][j][1]=min(f[nt][j][1],f[pr][k][1]);\n\t\t\t}\n\t\t\tf[nt][j][0]+=s[nt][j]-g[i];\n\t\t\tf[nt][j][1]+=s[nt][j]-g[i];\n\t\t}\n\t}\n\tint re=inf;\n\tfor(int i=1;i<=t[nt];i++)re=min(re,f[nt][i][0]);\n\tass+=re;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d\",&l[i],&g[i]);\n\tfuck();\n//\tcout<<ass<<endl;\n\tfor(int i=1;i<=n;i++)g[i]=N-l[i];\n\tfuck();\n\tprintf(\"%d\",ass);\n\treturn 0;\n}\n/*\n7\n4 4\n3 4\n3 5\n1 3\n2 2\n2 4\n3 3\n*/\n```",
        "postTime": 1521187394,
        "uid": 38725,
        "name": "xiwang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2703 \u3010[NOI2006]\u5343\u5e74\u866b\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P2703)\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u597d\u50cf\u662f\u5220\u683c\u5b50\uff0c\u4f46\u662f\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a\u5343\u5e74\u866b\u628a\u683c\u5b50\u5206\u6210\u4e86\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u6211\u4eec\u4e0d\u8003\u8651\u5343\u5e74\u866b\uff0c\u9898\u76ee\u5c31\u662f\u5728\u5de6\u53f3\u4e24\u8fb9\u52a0\u4e0a\u4e00\u4e9b\u683c\u5b50\uff0c\u662f\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u68b3\u5b50\u5f62\u72b6\uff0c\u6c42\u6700\u5c11\u52a0\u51e0\u4e2a\u683c\u5b50\u3002\n\n## \u5177\u4f53\u505a\u6cd5\n\n\u56e0\u4e3a\u5de6\u53f3\u4e24\u8fb9\u76f8\u5bf9\u72ec\u7acb,\u6240\u4ee5\u53ef\u4ee5\u5355\u72ec\u8ba1\u7b97\u4e24\u8fb9\u3002\n\n\u8bbe\u7b2ci\u884c\u7684\u521d\u59cb\u9ad8\u5ea6\u4e3a $a_i$;\n\n\u6700\u7ec8\u9ad8\u5ea6\u4e3a $b_i$;\n\n$f(i,j,s)$ \u8868\u793a\u524di\u884c\u4e2d\u5f53\u524d\u884c\u6700\u7ec8\u9ad8\u5ea6\u4e3a $j$\uff0c\u51f9\u51f8\u6027\u4e3a $s$($s=0$ \u662f\u51f9\uff0c$s=1$ \u662f\u51f8\uff09\u6240\u9700\u8981\u52a0\u7684\u6700\u5c11\u5757\u6570\u3002\n\n\u53ef\u5f97\uff1a\n$f(i,j,s)=\\min\\{f(i-1,j-1,s),f(i-1,k,1-s)\\}(k<j,s=1;k>j,s=0)$;\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n^3)$ \u7684\uff0c\u5927\u90e8\u5206\u6d4b\u8bd5\u70b9\u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u7136\u540e\u590d\u6742\u5ea6\u5c31\u4f1a\u53d8\u4e3a $O(n^2)$\uff0c\u5e94\u8be5\u53ef\u4ee5\u5f97\u5230\u4e00\u534a\u7684\u5206\u3002\n\n\u4e00\u534a\u5206\u7684\u4ee3\u7801\u6211\u5c31\u4e0d\u653e\u4e86\u3002\n\n\u90a3\u4e48\u5982\u4f55\u624d\u80fd\u62ff\u5230\u6ee1\u5206\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u884c\u7684\u6700\u4f18\u503c\u53ea\u4f1a\u5728\u6240\u6709\u7684\u5f00\u533a\u95f4 $a_{p},a_{p}+2(\\left\\vert p-i \\right\\vert \\le 2)$ \u4e2d\u4ea7\u751f\uff0c\u5176\u5b9e\u5728\u6211\u4eec\u53ef\u4ee5\u8bc1\u5f97\u65e0\u8bba\u4e24\u8fb9\u7684\u5927\u5c0f\u4e8e\u5173\u7cfb\u662f\u5426\u5927\u4e8e\u4e8c\uff0c\u90fd\u4f1a\u6ee1\u8db3\u8fd9\u4e2a\u6027\u8d28\uff08\u8be6\u7ec6\u89c1\u4e0b\uff09\uff0c\u7528\u5b83\u6765\u4f18\u5316 $j$ \u7684\u679a\u4e3e\u8fb9\u754c\uff0c$j$ \u7684\u6709\u9650\u4e2a\u72b6\u6001\u53ef\u4ee5\u8ba9\u590d\u6742\u5ea6\u53d8\u5230 $O(n)$\u3002\n\n\u5c0f\u4e8e\u65f6\u6700\u4f18\u503c $b_{i}$ \u4f1a\u6ee1\u8db3 $\\left\\vert p-i \\right\\vert \\le 1,b_{p}\\in a_{p},a_{p}+2$;\n\n\u5927\u4e8e\u65f6\u4f1a\u6ee1\u8db3 $\\left\\vert p-i \\right\\vert \\le 2,b_{p}\\in a_{p},a_{p}+2$;\n\n\u6240\u4ee5\u6ee1\u8db3\u4ee5\u4e0a\u7ed3\u8bba\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u8fc7\u9898\u4e86\uff01\n### 100pts code\n```cpp\n/*\n\u8fd9\u6b21\u4e0d\u5361\u5e38\u4e5f\u8dd1\u5f97\u98de\u5feb\uff01\n*/\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000001,INF=0x3f3f3f3f;\nint n,ans,l[maxn],a[maxn],f[2][20][2],q[2][maxn],p[2];\nvoid work()\n{\n\tmemset(f,0x7f,sizeof(f));\n\tp[1]=0;\n\tfor(int j=1;j<4;++j)\n\t{\n\t\tfor(int k=a[j];k<a[j]+3;++k)\n\t\t{\n\t\t\tif(k>=a[1]) q[1][++p[1]]=k;\n\t\t}\n\t}\n\tfor(int i=1;i<=p[1];++i)\n\t{\n\t\tf[1][i][0]=q[1][i]-a[1];\n\t}\n    int u=1,v=0;\n    for(int i=2;i<n+1;++i)\n    {\n        u^=1;v^=1;\n\t\tp[u]=0;\n       \tint x=(i-2<1)?1:i-2,y=(n<i+2)?n:i+2;\n       \tfor(int j=x;j<y+1;j++)\n       \t{\n       \t\tfor(int k=a[j];k<a[j]+3;k++)//\u6839\u636e\u4ee5\u4e0a\u6027\u8d28\u4f18\u5316\n       \t\t{\n       \t\t\tif(k>=a[i]) q[u][++p[u]]=k;\t\n\t\t\t}\n\t\t}\n\t\tfor(int j=1;j<=p[u];++j)\n\t\t{\n\t\t\tf[u][j][1]=f[u][j][0]=INF;\n\t\t\tfor(int k=1;k<=p[v];++k)\n\t\t\t{\n\t\t\t\tif(q[v][k]>q[u][j]) f[u][j][0]=min(f[u][j][0],f[v][k][1]);\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(q[v][k]<q[u][j]) f[u][j][1]=min(f[u][j][1],f[v][k][0]);\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tf[u][j][0]=min(f[u][j][0],f[v][k][0]);\n\t\t\t\t\t\tf[u][j][1]=min(f[u][j][1],f[v][k][1]);\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tf[u][j][0]+=q[u][j]-a[i];\n\t\t\tf[u][j][1]+=q[u][j]-a[i];\n\t\t}\n\t}\n\tint tmp=INF;\n\tfor(int i=1;i<=p[u];++i)\n\t{\n\t\ttmp=min(tmp,f[u][i][0]);\n\t}\n\tans+=tmp;\n}\nsigned main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d%d\",&l[i],&a[i]);\n\t}\n\twork();//\u540c\u6837\u662f\u5206\u5de6\u53f3\u4e24\u90e8\u5206\u64cd\u4f5c\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ta[i]=maxn-l[i];\n\t}\n\twork();\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n**\u601d\u8def\u6765\u81ea[\u8fd9\u91cc](https://blog.csdn.net/qq_25471829/article/details/46299733)**",
        "postTime": 1659143222,
        "uid": 541145,
        "name": "Fleeing_loser",
        "ccfLevel": 0,
        "title": "P2703 [NOI2006]\u5343\u5e74\u866b \u9898\u89e3"
    },
    {
        "content": "\u5de6\u53f3\u53ef\u4ee5\u5206\u5f00\u641e\n\n\u7136\u540e\u5c31\u662f\u8981\u5f62\u6210\u4e00\u4e2a\u7c7b\u4f3c\u68b3\u5b50\u7684\u4e1c\u897f\n\n\u8bbe$f_{0 or 1,i,j}$\n\n$0$ \u51f9,$1$ \u51f8\uff0c$i$ \u4e3a\u884c\uff0c\u53ef\u4ee5\u6eda\u4e00\u7ef4\uff0c$j$ \u4e3a\u8be5\u884c\u957f\u5ea6\n\n$$f_{0,i,j}=min(f_{0,i-1,j},f_{1,i\u22121,k})+j\u2212a_i$$\n\n\u5176\u4e2d$k>j$ \u3002\n\n$$f_{1,i,j}=min(f_{1,i\u22121,j},f_{0,i\u22121,k})+j\u2212a_i$$\n\n\u5176\u4e2d$k<j$ \u3002\n\n~~\u7136\u540e\u662fO(n3)\u4f18\u5316\u53ef\u4ee5\u53d8\u6210O(n2) \u53ef\u4ee5\u670950~~\n\n$code$\n                                                     \n```cpp \n#include<algorithm>\n#include<iostream>\n#include<iomanip>\n#include<cstring>\n#include<cstdlib>\n#include<vector>\n#include<cstdio>\n#include<cmath>\n#include<queue>\nusing namespace std;\ninline const int Get_Int() {\n    int num=0,bj=1;\n    char x=getchar();\n    while(x<'0'||x>'9') {\n        if(x=='-')bj=-1;\n        x=getchar();\n    }\n    while(x>='0'&&x<='9') {\n        num=num*10+x-'0';\n        x=getchar();\n    }\n    return num*bj;\n}\nint n,f[2][1000005][2],g[2][1000005],Length[1000005],Left[1000005],Right[1000005],cnt[2],Value[2][1000005],MinRight=0x7fffffff/2,MaxLeft=0;\nint Dp() {\n    memset(f[1],0x3f,sizeof(f[1]));\n    memset(g,0,sizeof(g));\n    cnt[1]=0;\n    for(int i=1; i<=3; i++)\n        for(int j=Length[i]; j<=Length[i]+2; j++)\n            if(j>=Length[1])Value[1][++cnt[1]]=j;\n    for(int i=1; i<=cnt[1]; i++)f[1][Value[1][i]][0]=Value[1][i]-Length[1]; \n    for(int i=2; i<=n; i++) {\n        cnt[i%2]=0;  \n        int st=max(1,i-2),ed=min(n,i+2);\n        for(int j=st; j<=ed; j++)\n            for(int k=Length[j]; k<=Length[j]+2; k++)\n                if(k>=Length[i])Value[i%2][++cnt[i%2]]=k; \n        for(int t=1; t<=cnt[i%2]; t++) {\n            int j=Value[i%2][t];\n            g[i%2][j]=g[i%2][j]=i; \n            f[i%2][j][0]=f[i%2][j][1]=0x7fffffff/2; \n            if(g[((i-1+2)%2)][j]==i-1||i==2) { \n                f[i%2][j][0]=min(f[i%2][j][0],f[(i-1+2)%2][j][0]+j-Length[i]);\n                f[i%2][j][1]=min(f[i%2][j][1],f[(i-1+2)%2][j][1]+j-Length[i]);\n            }\n            for(int s=1; s<=cnt[(i-1+2)%2]; s++) {\n                int k=Value[(i-1+2)%2][s];\n                if(g[((i-1+2)%2)][k]==i-1||i==2) { \n                    if(k<j)f[i%2][j][1]=min(f[i%2][j][1],f[(i-1+2)%2][k][0]+j-Length[i]);\n                    if(k>j)f[i%2][j][0]=min(f[i%2][j][0],f[(i-1+2)%2][k][1]+j-Length[i]);\n                }\n            }\n        }\n    }\n    int Min=0x7fffffff/2;\n    for(int j=1; j<=cnt[n%2]; j++)Min=min(Min,f[n%2][Value[n%2][j]][0]);\n    return Min;\n}\nint main() {\n    n=Get_Int();\n    for(int i=1; i<=n; i++) {\n        Left[i]=Get_Int();\n        Right[i]=Get_Int();\n        MaxLeft=max(MaxLeft,Left[i]);\n        MinRight=min(MinRight,Right[i]);\n    }\n    for(int i=1; i<=n; i++)Length[i]=MaxLeft-Left[i];\n    int ans=Dp();\n    for(int i=1; i<=n; i++)Length[i]=Right[i]-MinRight;\n    printf(\"%d\\n\",ans+Dp());\n    return 0;\n}\n\n```\n",
        "postTime": 1594872586,
        "uid": 248386,
        "name": "Submerge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2703 \u3010[NOI2006]\u5343\u5e74\u866b\u3011"
    }
]