[
    {
        "content": "\u6c34\u9898\uff0c~~\u5efa\u8bae\u964d\u9ec4~~\u3002    \n\n\u5982\u679c\u4ea4\u4e92\u5e93\u4e0b\u4e0d\u4e0b\u6765\u7684\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u590d\u5236\u6211\u7684[\u6a21\u677f](https://www.luogu.com.cn/paste/ypdfalec)\u3002\n\n\u5176\u5b9e\u5c31\u662f\u5355\u8c03\u961f\u5217\u6a21\u677f\u9898\uff0c\u4e4b\u524d\u4e24\u4e2a\u9898\u89e3\u4e00\u4e2a\u582a\u79f0\u53f2\u4e0a\u6700\u77ed\u9898\u89e3\uff0c\u53e6\u4e00\u4e2a\u8bf4\u4e86\u534a\u5929\u5e9f\u8bdd\u6700\u540e\u653e\u4e86\u4e00\u5806\u8981\u4e48\u8fc7\u4e0d\u4e86\u8981\u4e48\u592a\u7e41\u7410\u7684\u4ee3\u7801\uff0c\u4e8e\u662f\u6211\u5c31\u6765\u6c34\u9898\u89e3\u4e86\u3002\n\n\u867d\u7136\u9898\u76ee\u6709\u4e9b\u8ff7\u60d1\u5199\u4e86 $1\\leq b_1\\leq b_2\\leq \\ldots\\leq b_k$\uff0c\u4f46\u5b9e\u9645\u662f\u6307 $1\\leq b_1\\lt b_2\\lt \\ldots\\lt b_k$\uff0c\u4e5f\u5c31\u662f\u8bf4\u540c\u4e00\u4e2a\u6570\u5e76\u4e0d\u80fd\u9009\u591a\u6b21\u3002\u4e8e\u662f\u6b63\u786e\u7684\u9898\u610f\u4e3a\u5728\u5e8f\u5217 $a$ \u4e2d\u9009\u4e00\u4e2a\u957f\u5ea6\u4e3a $k$ \u7684\u5b50\u5e8f\u5217\u4f7f\u5176\u5b57\u5178\u5e8f\u6700\u5927\u3002   \n\n\u5177\u4f53\u601d\u8def\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5b57\u5178\u5e8f\u662f\u4ece\u524d\u5411\u540e\u6bd4\u8f83\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8ba9\u524d\u9762\u7684\u6570\u5c3d\u53ef\u80fd\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u9009\u4e00\u4e2a\u6700\u5927\u503c\u8f93\u51fa\uff1b\u56e0\u4e3a\u540e\u9009\u7684\u4e0d\u80fd\u5728\u524d\u9009\u7684\u524d\u9762\u4ee5\u53ca\u603b\u5171\u53ea\u6709 $n$ \u4e2a\u6570\uff0c\u6240\u4ee5\u6709 $b_1\\in[1,n-k+1],b_2\\in[b_1+1,n-k+2],\\dots,b_k\\in[b_{k-1}+1,n]$\u3002     \n\n\u60f3\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u5355\u8c03\u961f\u5217\uff0c\u5728\u7ef4\u62a4\u5230\u7b2c $n-k+i$ \u4e2a\u6570\u7684\u65f6\u5019\u53d6\u4e00\u6b21\u6700\u5927\u503c\u5e76\u5220\u9664\uff0c\u5c31\u5f97\u5230\u7b2c $i$ \u4e2a\u4f4d\u7f6e\u7684\u503c\u3002\u7531\u4e8e\u662f\u5355\u8c03\u961f\u5217\uff0c\u540e\u9762\u53d6\u7684\u4e00\u5b9a\u5728\u524d\u9762\u53d6\u7684\u503c\u7684\u540e\u9762\uff08\u56e0\u4e3a\u524d\u9762\u7684\u5df2\u88ab\u9876\u6389\uff09\uff1b\u4ec5\u7b97\u5230 $n-k+i$ \u4e2a\u6570\u662f\u4e3a\u4e86\u8ba9\u540e\u9762\u7559\u51fa\u81f3\u5c11 $i-1$ \u4e2a\u6570\u7684\u4f4d\u7f6e\uff1b\u81f3\u4e8e\u6bcf\u6b21\u5220\u6389\u6700\u503c\u662f\u4e3a\u4e86\u8ba9\u540e\u9762\u4e0d\u91cd\u590d\u53d6\u3002     \n\n\u7136\u540e\u6211\u4eec\u60ca\u5947\u5730\u53d1\u73b0\uff0c\u5f00 **\u4e00\u4e2a** `int` \u5927\u5c0f\u4e3a $1.5e7$ \u7684\u6570\u7ec4\u7adf\u7136\u4e0d\u4f1a\u70b8 125MB\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u6240\u6709\u6570\u8bfb\u8fdb\u6765\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u77e5\u9053 $n$ \u662f\u591a\u5c11\u4e86\u3002\u7531\u4e8e\u6211\u4eec\u53ea\u6709\u5728\u6700\u540e $k$ \u4f4d\u9700\u8981\u4ece\u524d\u9762\u5f39\u6570\uff0c\u800c\u4e14\u6211\u4eec\u6700\u591a\u53ea\u9700\u8981\u524d $k$ \u5927\u7684\u6570\uff0c\u6240\u4ee5\u961f\u5217\u5f00\u5230 $2e6$ \u5c31\u597d\u4e86\u3002      \n\n\u5b9e\u73b0\u4e0a\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5e73\u65f6\u5355\u8c03\u961f\u5217\u9700\u8981\u628a\u76f8\u7b49\u6570\u5168\u90e8\u5f39\u51fa\uff0c\u4f46\u6211\u4eec\u8fd9\u91cc\u8981\u628a\u76f8\u7b49\u7684\u6570\u7559\u4e0b\u6765\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u53d6\u4e0d\u5728\u540c\u4e00\u4f4d\u7f6e\u4e0a\u7684\u76f8\u7b49\u7684\u6570\u3002     \n\n\u6700\u540e\u8bf4\u4e00\u4e0b\u4ea4\u4e92\uff0c\u6ce8\u610f\u6309 **\u8bc4\u6d4b\u65b9\u5f0f** \u4e2d\u8bf4\u7684\u6765\uff0c\u6ce8\u610f\u4e0d\u8981\u4e0e\u4ea4\u4e92\u5e93\u91cd\u53d8\u91cf\u540d\u3002\n\nc \u4ee3\u7801\uff08\u56e0\u4e3a\u4ea4\u4e92\u5e93\u662f.c\uff0c\u6240\u4ee5\u6211\u5c31\u5199\u6210c\u4e86\uff09\n```c\n/*\u524d180\u884c\u662f\u4ea4\u4e92\u5e93\uff0c\u8fd9\u91cc\u7701\u7565*/\n#define MAXN 15000010\n#define MAXM 2000010\nint q[MAXM],s,t;\nint a[MAXN];\nint main()\n{\n\tint k=inicjuj();\n\tint i;\n\tdo a[++a[0]]=wczytaj(); while(a[a[0]]);\n\t--a[0];int x=a[0]-k+1;s=0;t=1;\n\tfor(i=1;i<=a[0];i++)\n\t{\n\t\twhile(s<=t&&q[t]<a[i])--t;/*\u4e0d\u8981\u5199=\uff0c\u4fdd\u7559\u76f8\u7b49\u6570*/\n\t\tif(t-s+1<k)q[++t]=a[i];/*\u4fdd\u6301\u5728k\u4e2a\u6570\u4e4b\u5185*/\n\t\tif(i>=x)wypisz(q[s]),++s;/*\u53d6\u51fa\u6700\u5927\u503c*/\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1597818680,
        "uid": 35137,
        "name": "a___",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3487 \u3010[POI2009]ARC-Architects\u3011"
    },
    {
        "content": "> [P3487 [POI2009]ARC-Architects](https://www.luogu.com.cn/problem/P3487)\n>\n> [POI \u5408\u96c6](https://www.cnblogs.com/alex-wei/p/poi.html)\u3002\n\nPOI \u771f\u7684\u5f88\u559c\u6b22\u51fa [\u5355\u8c03\u961f\u5217](https://www.cnblogs.com/alex-wei/p/DP_Involution.html)\uff01\n\n\u5b57\u5178\u5e8f\u6700\u5927\u7ed9\u4e88\u6211\u4eec\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u5373\u4f18\u5148\u9009\u62e9\u6700\u5927\u7684\u6570\u5b57\u80af\u5b9a\u66f4\u4f18\uff0c\u82e5\u6570\u5b57\u76f8\u540c\u5219\u5c3d\u91cf\u9009\u66f4\u524d\u9762\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u5269\u4e0b\u6765\u7684\u9009\u62e9\u5c31\u66f4\u591a\u3002\u5982 $[9,7,9,6]$\uff0c\u9009\u524d\u9762\u7684 $9$ \u5c31\u6bd4\u9009\u540e\u9762\u7684 $9$ \u597d\u3002\n\n\u4f46\u662f\u6709 $b_i < b_{i + 1}$ \u7684\u9650\u5236\uff0c\u8bf4\u660e\u5982\u679c\u6211\u4eec\u9009\u6700\u5927\u7684\uff0c\u53ef\u80fd\u5bfc\u81f4\u540e\u9762\u6ca1\u6cd5\u9009\u4e86\u3002\u56e0\u6b64\u4e0d\u59a8\u8bbe\u6211\u4eec\u5728\u9009 $b_i$\uff0c\u6211\u4eec\u53ea\u80fd\u4ece\u4e0b\u6807\u4e3a $[b_{i - 1} + 1, k - i + 1]$ \u7684\u6570\u5f53\u4e2d\u6311\u9009\uff0c\u56e0\u4e3a\u5982\u679c $b_i$ \u518d\u5927\u4e00\u70b9\uff0c\u90a3\u4e48\u65e0\u8bba\u5982\u4f55\u6211\u4eec\u90fd\u9009\u4e0d\u9f50 $k$ \u4e2a\u6570\u3002\u5b9e\u73b0\u5c31\u662f\u7ecf\u5178\u6ed1\u52a8\u7a97\u53e3\uff0c\u82e5\u5f53\u524d\u6570\u7b49\u4e8e\u5355\u8c03\u961f\u5217\u961f\u5c3e\u5219\u4e0d\u5f39\u51fa\uff0c\u4fdd\u8bc1\u4e86\u76f8\u540c\u6570\u4f18\u5148\u9009\u62e9\u66f4\u524d\u9762\u7684\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u7ebf\u6027\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int NN = 1.5e7 + 5;\nint hd = 1, tl, d[NN], n, k, a[NN];\nvoid push(int p) {while(hd <= tl && a[d[tl]] < a[p]) tl--; d[++tl] = p;}\nint main() {\n\tk = inicjuj(), a[1] = wczytaj();\n\tfor(int i = 2; a[i - 1]; i++, n++) a[i] = wczytaj();\n\tfor(int i = 1; i <= n - k; i++) push(i);\n\tfor(int i = n - k + 1, lim = 1; i <= n; i++) {\n\t\twhile(hd <= tl && d[hd] < lim) hd++; push(i);\n\t\twypisz(a[d[hd]]), lim = d[hd] + 1;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1644031478,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P3487 [POI2009]ARC-Architects"
    },
    {
        "content": "\u8fd9\u662f\u672c\u4eba\u7684\u7b2c\u56db\u7bc7\u9898\u89e3\uff0c\u4f46\u524d\u4e09\u7bc7\u90fd\u6ca1\u901a\u8fc7\u3002\n\n\u89c2\u5bdf\u9898\u9762\uff1a\u6309\u987a\u5e8f\u9009\u6570\uff0c\u6c42\u5b57\u5178\u5e8f\u6700\u5927\uff0c\u5c31\u76f8\u5f53\u4e8e\u51e0\u4e2a\u6570\u5b57\u6bd4\u5927\u5c0f\uff0c\u800c\u9898\u76ee\u8981\u6c42\u8fd9\u51e0\u4e2a\u6570\u7684\u4f4d\u6570\u90fd\u4e3ak\uff0c\u6240\u4ee5\u53c8\u4ece\u9996\u4f4d\u5f00\u59cb\u6bd4\u8f83\u3002\u5373\uff1a\n\n\u5047\u8bbek=3\uff0c134\uff0c234\uff0c353\uff0c135\uff0c643\uff0c645\u4e2d\u627e\u6700\u5927\u7684\uff0c\u80af\u5b9a\u662f\u5148\u770b\u9996\u4f4d\uff0c\u627e\u52306\uff0c\u518d\u770b\u4e0b\u4e00\u4f4d\uff0c4\uff0c\u518d\u4e0b\u4e00\u4f4d\uff0c5\uff0c\u4e8e\u662f\u7b54\u6848\u662f645\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u8d2a\u5fc3\uff0c4\uff0c6\uff0c3\uff0c6\uff0c2\uff0c1\u4e2d\u90093\u4e2a\u6570\uff0c\u4ee4\u5176\u4e0b\u6807\u4e3a1~6\uff0c\u9009\u7b2c\u4e00\u4e2a\u6570\u65f6\uff0c\u8981\u57281~\uff086-2\uff09\u4e2d\u9009\u6700\u5927\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u81f3\u5c11\u8fd8\u67092\u4e2a\u6570\u53ef\u4ee5\u9009\uff0c\u5982\u679c\u6709\u591a\u4e2a\u4e00\u6837\u7684\u6570\uff0c\u663e\u7136\u8981\u9009\u4e0b\u6807\u5c0f\u7684\u3002\u9009\u51fa\u7b2c\u4e00\u4e2a\u6570=>6\uff0c2\u3002\u90a3\u4e48\u4e0b\u4e00\u6b21\u5c31\u8981\u5728\uff082+1\uff09~\uff086-1\uff09\u4e2d\u9009\uff0c\u5373\u4ece\u4e0a\u4e00\u4e2a\u9009\u4e2d\u7684\u4e0b\u6807+1~6-\uff08k-i\uff09\u3002\n\n\u6709\u4eba\u5c31\u60f3\uff1a\u8fd9\u4e48\u7b80\u5355\uff0c\u7206\u641c\u4e0d\u5c31\u884c\u4e86\u3002~~\u6211\u5176\u5b9e\u4e00\u5f00\u59cb\u4e5f\u662f\u8fd9\u4e48\u60f3\u7684~~\uff0c\u770b\u770b\u6570\u636e\u8303\u56f41<=n<=15000000\u3002\u5475\u5475\u2026\u2026\n\n\u90a3\u53ea\u80fd\u7528\u4e00\u4e9b\u5feb\u901f\u6c42\u4e0d\u4fee\u6539RMQ\u7684\u6570\u636e\u7ed3\u6784\uff0cst\u8868\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\n\n\n\u6b63\u5e38\u7684st\u8868\u662f\u7528\u6765\u5b58\u533a\u95f4\u6700\u5927\u6216\u6700\u5c0f\u503c\u7684\uff0c\u4f46\u4ece\u4e0a\u9762\u7684\u8d2a\u5fc3\u90e8\u5206\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0b\u6807\u662f\u5728\u53d8\u5316\u7684\u3002\u88ab\u6211\u4eec\u73ed\u4e0a\u7684\u4e00\u4e2a\u5927\u4f6c\u63d0\u9192:\u53ef\u4ee5\u7528st\u6570\u7ec4\u5b58\u4e0b\u6807\u3002\u90a3\u4e48\u53ea\u9700\u8981\u4e2d\u8f6c\u4e00\u6b21\u5c31\u53ef\u4ee5\u89e3\u51b3\u3002\n\ncode\uff1a\n```cpp\n#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nconst int MAXN=15000000;\n#define MAXNLOG 21\nint St[MAXN][MAXNLOG];\nint a[MAXN];\nint k;\nint main()\n{\n    cin >>k;\n    int cnt;\n    int n=0;\n    cin >>cnt;\n    while (cnt!=0)\n    {\n        n++;\n        a[n]=cnt;\n        //cout <<a[n]<<' ';\n        St[n][0]=n;\n        cin >>cnt;\n    }\n    for (int j=1;j<=MAXNLOG;j++)\n    {\n        for (int i=1;i+(1<<j)-1<n;i++)\n        {\n            int x=St[i][j-1];\n            int y=St[i+(1<<(j-1))][j-1];\n            if (a[x]>a[y])//\u8fd9\u4e2a\u5c31\u662f\u6240\u8c13\u7684\u4e2d\u8f6c\uff0ca[St[\u2026][\u2026]];\n            {\n                St[i][j]=x;\n            }\n            else if (a[x]==a[y])\n            {\n                St[i][j]=min(x,y);//\u53d6\u6700\u5c0f\u4e0b\u6807\n            }\n            else\n            {\n                St[i][j]=y;\n            }\n        }\n    }\n    /*for (int j=1;j<=MAXNLOG;j++)\n    {\n        for (int i=1;i<=n;i++)\n        {\n            cout <<St[i][j-1]<<' ';\n        }\n        cout <<endl;\n    }*/\n    int l=1;\n    for (int i=k;i>0;i--)\n    {\n        int r=n-i+1;//\u5de6\u53f3\u533a\u95f4\u4e0b\u6807\n        double cmp=log2(r-l+1);\n        int len=cmp;\n        int x=St[l][len];\n        int y=St[r-(1<<len)+1][len];\n        if (a[x]>a[y])\n        {\n            cout <<a[x]<<endl;\n            l=x+1;//\u66f4\u65b0\n        }\n        else\n        {\n            cout <<a[y]<<endl;\n            l=y+1;\n        }\n    }\n    return 0;\n}\n```\n\u7136\u800c\uff0cMLE\u4e86\uff0c\n\n\u6240\u4ee5\uff0c\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u5c1d\u8bd5\u4e00\u4e0b\u7ebf\u6bb5\u6811\n\ncode\uff1a\n```cpp\n#include <iostream>\n\nusing namespace std;\n\n#define MAXN 15000000\nlong tree[3*MAXN];\nlong a[MAXN];\nlong k;\nlong n;\nvoid build(long i,long l,long r)\n{\n    if (l==r)\n\t{\n\t\ttree[i]=l;\n\t\treturn ;\n\t}\n\tlong mid=(l+r)/2;\n\t//cout <<l<<' '<<r<<' '<<mid<<' '<<i<<endl;\n\tbuild(i*2,l,mid);\n\tbuild((i*2)+1,mid+1,r);\n\tif (a[tree[i*2]]>a[tree[(i*2)+1]])\n    {\n        tree[i]=tree[i*2];\n    }\n    else if (a[tree[i*2]]==a[tree[(i*2)+1]])\n    {\n        tree[i]=min(tree[i*2],tree[(i*2)+1]);\n    }\n    else\n    {\n        tree[i]=tree[(i*2)+1];\n    }\n    return ;\n}\nlong cmp;\n\nlong query(long i,long l,long r,long x,long y)\n{\n\tif (x<=l&&r<=y)\n    {\n        return tree[i];\n    }\n    long maxn=9999999;\n\tlong mid=(l+r)/2;\n\tif (x<=mid)\n    {\n        cmp=query(i*2,l,mid,x,y);\n        if (a[maxn]<a[cmp])\n        {\n            maxn=cmp;\n        }\n        else if (a[maxn]==a[cmp])\n        {\n            maxn=min(cmp,maxn);\n        }\n    }\n\tif (y>mid)\n    {\n        cmp=query(i*2+1,mid+1,r,x,y);\n        if (a[cmp]>a[maxn])\n        {\n            maxn=cmp;\n        }\n        else if (a[maxn]==a[cmp])\n        {\n            maxn=min(cmp,maxn);\n        }\n    }\n\treturn maxn;\n}\nint main()\n{\n    cin >>k;\n    long cnt;\n    cin >>cnt;\n    while (cnt!=0)\n    {\n        n++;\n        a[n]=cnt;\n        cin >>cnt;\n    }\n    build(1,1,n);\n    /*for (long i=1;i<=100;i++)\n    {\n        cout <<tree[i]<<' ';\n    }*/\n    long l=1;\n    for (long i=k;i>0;i--)\n    {\n        long r=n-i+1;\n        //cout <<l<<' '<<r<<' ';\n        cmp=query(1,1,n,l,r);\n        l=cmp+1;\n        cout <<a[cmp]<<endl;\n    }\n    return 0;\n}\n\n```\n\u4f9d\u65e7\uff0c\u8fd8\u662f\u6709MLE\u7684\n\n\u90a3\u5c31\u53ea\u80fd\u7528\u5355\u8c03\u961f\u5217\u4e86\n```cpp\n#include <iostream>\n#include <queue>\n\nusing namespace std;\n\n#define MAXN 15000000\nstruct NUM\n{\n    long num,i;\n};\ndeque <NUM> q;\nlong k,a[MAXN];\nlong n;\nint main()\n{\n    cin >>k;\n    long cnt;\n    cin >>cnt;\n    while (cnt!=0)\n    {\n        n++;\n        a[n]=cnt;\n        cin >>cnt;\n    }\n    long l=1;\n    long r;\n    for (long i=k;i>0;i--)\n    {\n        r=n-i+1;\n        for (long j=l;j<=r;j++)\n        {\n            if(q.empty())\n            {\n                NUM x;\n                x.num=a[j];\n                x.i=j;\n                q.push_back(x);\n            }\n            else if (q.back().num<a[j])\n            {\n                while (!q.empty()&&q.back().num<a[j])\n                {\n                    q.pop_back();\n                }\n                NUM x;\n                x.num=a[j];\n                x.i=j;\n                q.push_back(x);\n            }\n            else\n            {\n                NUM x;\n                x.num=a[j];\n                x.i=j;\n                q.push_back(x);\n            }\n        }\n        cout <<q.front().num<<endl;//<<' '<<l<<' '<<r;\n        l=1+q.front().i;\n        while (!q.empty())\n        {\n            q.pop_back();\n        }\n    }\n    return 0;\n}\n\n```\n**\u6700\u540e\uff0c\u611f\u8c22\u7ba1\u7406\u5458\u62bd\u7a7a\u5ba1\u67e5**\n",
        "postTime": 1576249249,
        "uid": 115788,
        "name": "dapanggoule",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3487 \u3010[POI2009]ARC-Architects\u3011"
    },
    {
        "content": "# [POI2009]ARC-Architects\n\u9898\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u4ece\u4e2d\u6311\u9009k\u4e2a\u6570\uff0c\u6ee1\u8db3\u4e0b\u6807\u5355\u8c03\u9012\u589e\uff0c\u5e76\u4e14\u5b57\u5178\u5e8f\u6700\u5c0f\uff1b\n\u601d\u8def\uff1a\u7531\u4e8e\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u8003\u8651\u8d2a\u5fc3\uff0c\u5373\u524d\u9762\u7684\u6570\u5c3d\u53ef\u80fd\u5927\uff0c\u6240\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u6700\u5927\u503c\uff1b\n\u7ec6\u8282\uff1a\u6ce8\u610f\u5355\u8c03\u961f\u5217\u5bf9\u5934\u5e94\u8be5\u662f\u4e0a\u6b21\u9009\u7684\u6570\u7684\u4e0b\u4e00\u4e2a\u6570\uff0c\u53e6\u5916\u8981\u6ee1\u8db3k\u4e2a\u6570\uff0c\u6240\u4e00\u76f4\u4ee5\u7ef4\u62a4\u961f\u5c3e\uff1b\n\u56e0\u4e3a\u662f\u4ea4\u4e92\u9898\uff0c\u6ce8\u610f\u53d8\u91cf\u540d\u91cd\u590d\uff1b\n```\n/*************************************************************************}\n{*                                                                       *}\n{*                     XVI Olimpiada Informatyczna                       *}\n{*                                                                       *}\n{*   Zadanie: Architekci (ARC)                                           *}\n{*   Plik:    carclib.c                                                  *}\n{*   Autor:   Bartosz Gorski                                             *}\n{*   Opis:    Biblioteka do wczytywania danych wejsciowych i wypisywania *}\n{*            wyniku                                                     *}\n{*                                                                       *}\n{*************************************************************************/\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <time.h>\n\n#define MAGIC_BEGIN -435634223\n#define MAGIC_END -324556462\n\n#define MIN_K 1\n#define MAX_K 1000000\n#define MAX_N 15000000\n#define MIN_A 1\n#define MAX_A 1000000000\n#define MIN_TYP 1\n#define MAX_TYP 3\n#define MIN_PAR 0\n#define MAX_PAR 1000000000\n\n#define ERROR 0\n#define CORRECT 1\n\n#define unlikely(x) __builtin_expect(!!(x), 0)\n\nstatic int init = 0; // czy zostala juz wywolana funkcja inicjuj()\nstatic int lib_n; // ile biblioteka podala juz liczb\nstatic int con_k; // ile zawodnik podal liczb\n\nstatic int N, K, A, TYP, PAR; // parametry testu wczytywane z pliku\nstatic int bre, len_sub, bou, is_end; // zmienne pomocnicze\n\nstatic int rand2_status = 198402041;\n\nstatic inline int rand2(int a, int b){\n  rand2_status = rand2_status * 1103515245 + 12345;\n  int x = rand2_status;\n  if (x < 0) x = -x; // -2^31 sie nie zdarza :D\n  x >>= 1;\n  x = a + x % (b - a + 1);\n  return x;\n}\n\n/* test losowy */\nstatic inline int random_test()\n{\n    return rand2(1, A);\n}\n\n/* test z dlugim podciagiem nierosnacym */\nstatic inline int decreasing_test()\n{\n    int tmp;\n    if(bre == 0) {\n        bre = rand2(0, (N - lib_n + 1 - len_sub));\n        tmp = A;\n        A -= rand2(0, (A - 1) / len_sub);\n        len_sub--;\n    }\n    else {\n        bre--;\n        tmp = rand2(1, A);\n    }\n    return tmp;\n}\n\n/* test z dlugim podciagiem niemalejacym */\nstatic inline int increasing_test()\n{\n    return bou - decreasing_test();\n}\n\nstatic void finish(int res, char *com)\n{\n    if(res == ERROR)\n        printf(\"%s\\n\", com);\n    exit(0);\n}\n\n/* Inicjuje dane wejsciowe i zwraca liczbe projektow */\nint inicjuj()\n{\n    if(init == 1)\n        finish(ERROR, \"Program zawodnika moze wywolac funkcje inicjuj tylko raz!!!\");\n    init = 1;\n    scanf(\"%d\", &K);\n    if (K > 0){\n      TYP = 0;\n      N = MAX_N + 2;\n      return K;\n    }\n    int magic_begin, magic_end;\n    scanf(\"%d%d\", &magic_begin, &TYP);\n    if(magic_begin != MAGIC_BEGIN || TYP < MIN_TYP || TYP > MAX_TYP)\n        finish(ERROR, \"Program zawodnika nie moze korzystac z stdin!!!\");\n    scanf(\"%d%d%d%d\", &N, &K, &A, &PAR);\n    if(N < 1 || N > MAX_N || N < K || K > MAX_K || A < MIN_A || A > MAX_A \n        || PAR < MIN_PAR || PAR > MAX_PAR)\n        finish(ERROR, \"Program zawodnika nie moze korzystac z stdin!!!\");\n    scanf(\"%d\", &magic_end);\n    if(magic_end != MAGIC_END)\n        finish(ERROR, \"Program zawodnika nie moze korzystac z stdin!!!\");\n    con_k = 0;\n    lib_n = 0;\n    is_end = 0;\n    if(TYP == 2 || TYP == 3) {\n        len_sub = PAR;\n        bre = 0;\n    }\n    if(TYP == 2)\n        bou = A--;\n    return K;\n}\n\n/* Sluzy do wczytania ciagu reprezentujacego jakosci projektow */\nint wczytaj()\n{\n    if(unlikely(init == 0))\n        finish(ERROR, \"Program zawodnika nie wywolal funkcji inicjuj!!!\");\n    if(unlikely(lib_n > N || is_end == 1))\n        finish(ERROR, \"Program zawodnika wywolal funkcje wczytaj po otrzymaniu informacji o koncu ciagu!!!\");\n    if(unlikely(lib_n == N))\n        return 0;\n    lib_n++;\n    switch (TYP) {\n      case 0:\n        scanf(\"%d\", &A);\n        if(A == 0)\n          is_end = 1;\n        return A;\n        break;\n      case 1: return random_test(); break;\n      case 2: return increasing_test(); break;\n      case 3: return decreasing_test(); break;\n      default:\n              finish(ERROR, \"Nieznany typ testu\");\n    }\n    return -1;\n}\n\n/* Sluzy do wypisania wyznaczonego podciagu */\nvoid wypisz(int jakoscProjektu)\n{\n    if(init == 0)\n        finish(ERROR, \"Program zawodnika nie wywolal funkcji inicjuj!!!\");\n    printf(\"%d\\n\", jakoscProjektu);\n    if(++con_k == K)\n        finish(CORRECT, \"\");\n}\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int MAXN=2e7+7;\nint n,k,h1=1,h2=0,t=1;\nint a[MAXN],q[MAXN];\nint main(){\n    k=inicjuj();\n    while(1) {\n        a[++n]=wczytaj();\n        if(a[n]==0)break;\n    }\n    n--;\n//    cout<<n<<\" \"<<k<<\" \"<<h1<<\" \"<<h2<<\" \"<<t<<\" \"<<q[1]<<\"\\n\";\n    for(int i=1;i<=k;i++){\n        while(t<=n-k+i){\n            while(h2>=h1&&q[h2]<a[t]){\n                h2--;\n            }\n            q[++h2]=a[t];\n            t++;\n        }\n//        cout<<q[h1]<<\"\\n\";\n        int jakoscProjektu=q[h1];\n        wypisz(jakoscProjektu);\n//        wypisz('\\n');\n        h1++;\n    }\n}\n```",
        "postTime": 1598407021,
        "uid": 101283,
        "name": "highscore",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3487 \u3010[POI2009]ARC-Architects\u3011"
    },
    {
        "content": "\u3002\u3002\u4e00\u5f00\u59cb\u60f3\u5230\u4e86\u7ebf\u6bb5\u6811\uff0c\u60f3\u4e86\u4e00\u4f1a\u4ee5\u540e\u624d\u53d1\u73b0\u662f\u5355\u8c03\u961f\u5217\u3002\n\n\u4e3b\u8981\u5c31\u662f\u4f18\u5316\u65b9\u9762\uff1a\u961f\u5217\u5185\u8d85\u8fc7k\u4e2a\u5143\u7d20\u5c31\u5f39\u51fa\u961f\u5c3e\u3002\n",
        "postTime": 1528540254,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3487 \u3010[POI2009]ARC-Architects\u3011"
    }
]