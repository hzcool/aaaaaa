[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3471)\n\n\u8fd9\u662f\u4e00\u4e2a $O(nl+m)$ \u7684\u505a\u6cd5\uff08\u5373\u548c\u8f93\u5165\u540c\u9636\uff09\u3002\n\n\u9996\u5148\uff0c\u770b\u5230\u5b57\u7b26\u4e32\u76f8\u540c\u663e\u7136\u60f3\u5230\u54c8\u5e0c\u3002\u6211\u4eec\u5f00\u4e00\u4e2a\u54c8\u5e0c\u8868\uff0c\u6bcf\u4e2a\u952e\u503c\u7ef4\u62a4\u4e00\u4e2a `size`\u3002\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u4ece\u8868\u4e2d\u539f\u4f4d\u7f6e\u5220\u9664\uff0c\u91cd\u65b0\u8ba1\u7b97\u54c8\u5e0c\u7136\u540e\u63d2\u5165\u5230\u65b0\u4f4d\u7f6e\u3002\n\n\u66f4\u65b0\u7684\u8bdd\uff0c\u53ea\u8981\u5728\u5220\u9664\u7684\u65f6\u5019\u67e5\u4e00\u4e0b\u5728\u5f53\u524d\u7684\u952e\u503c\u4e0b\uff0c\u4ece\u63d2\u5165\u5230\u73b0\u5728\u8fd9\u6bb5\u65f6\u95f4\u4e2d `size` \u7684\u6700\u5927\u503c\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u7ebf\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n- \u67e5\u8be2\u540e\u7f00\u6700\u5927\u503c\n- \u5728\u7ed3\u5c3e\u63d2\u5165\u4e00\u4e2a\u6570\n\n\u663e\u7136\u53ef\u4ee5\u5f00\u4e00\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\uff08\u5982\u679c\u4e0d\u4f1a\u5e26\u6743\u5e76\u67e5\u96c6\u53ef\u4ee5\u770b[\u8fd9\u4e2a](https://www.luogu.com.cn/blog/374433/union-find)\uff09\u3002\n\n```cpp\n// \u8fd4\u56de\u7684\u4e0d\u662f\u7956\u5148\u800c\u662f `x` \u8fd9\u4e2a\u70b9\u7684\u540e\u7f00\u6700\u5927\u503c\uff08\u5176\u5b9e\u6240\u6709\u70b9\u7684\u7956\u5148\u90fd\u662f\u6700\u540e\u63d2\u5165\u7684\u6570\uff09\nint Find(int u,int x)\n{\n    if (dsu[u][x].fa==x) return dsu[u][x].mx;\n    dsu[u][x].mx=max(dsu[u][x].mx,Find(u,dsu[u][x].fa));\n    dsu[u][x].fa=dsu[u][dsu[u][x].fa].fa;\n    return dsu[u][x].mx;\n}\nvoid insert(int x)\n{\n    int H{h[x]};// h[x] \u4e3a\u4e32 x \u7684\u54c8\u5e0c\n    // \u52a8\u6001\u5f00 vector\uff0c\u4e3b\u8981\u662f\u5f00\u8868\u5927\u5c0f\u4e2a vector \u5185\u5b58\u4f1a\u70b8\n    if (!F[H]) F[H]=cnt++;\n    // \u63d2\u5165\u7684\u4f4d\u7f6e\uff08\u5373\u5220\u9664\u65f6\u8981\u67e5\u8be2\u7684\u4f4d\u7f6e\uff09\n    lst[x]=dsu[F[H]].size();\n    ++sz[H];\n    // \u5c06\u524d\u9762\u7684\u6811 merge \u5230\u65b0\u63d2\u5165\u7684\u70b9\n    if (lst[x]) dsu[F[H]][lst[x]-1].fa=lst[x];\n    // \u63d2\u5165\u65b0\u8282\u70b9\n    dsu[F[H]].emplace_back(lst[x],sz[H]);\n}\n```\n\n\u56e0\u4e3a\u53ea\u6709\u4e00\u68f5\u6811\u4e14\u6ca1\u6709 `merge`\uff0c\u6240\u4ee5\u8fd9\u4efd\u5e76\u67e5\u96c6\u7684\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\u3002\n\n\u6700\u540e\u8fd8\u8981\u518d\u66f4\u65b0\u4e00\u4e0b\u6700\u5927\u503c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int bn{2579},b6e0{25165843};\nconst int N(1e3),M(1e5);\nint sz[b6e0],res[N];\nint lst[N];\nint F[b6e0];\nstruct node\n{\n\tint fa,mx;\n\tnode(int _fa=0,int _mx=0):fa{_fa},mx{_mx}{}\n};\nvector<node> dsu[N+M];int cnt;\nint h[N],pl[N],l;\nstring s[N];\nint Find(int u,int x)\n{\n\tif (dsu[u][x].fa==x) return dsu[u][x].mx;\n\tdsu[u][x].mx=max(dsu[u][x].mx,Find(u,dsu[u][x].fa));\n\tdsu[u][x].fa=dsu[u][dsu[u][x].fa].fa;\n\treturn dsu[u][x].mx;\n}\nvoid fresh(int x,int p,int n)\n{\n    h[x]=(h[x]+1LL*pl[l-p-1]*(n-s[x][p])%b6e0)%b6e0;\n    if (h[x]<0) h[x]=(h[x]+b6e0)%b6e0;\n    s[x][p]=n;\n}\nvoid upd(int x)\n{\n\tint H{h[x]};\n\tif (!F[H]) F[H]=cnt++;\n\tlst[x]=dsu[F[H]].size();\n\t++sz[H];\n    if (lst[x]) dsu[F[H]][lst[x]-1].fa=lst[x];\n\tdsu[F[H]].emplace_back(lst[x],sz[H]);\n\t\n}\nint main()\n{\n    int n,m;cin>>n>>l>>m;\n    for (int i{0};i<n;++i)\n    {\n        cin>>s[i];\n        for (char c:s[i])\n            h[i]=(1LL*h[i]*bn%b6e0+c-'a')%b6e0;\n        upd(i); \n    }\n    pl[0]=1;\n    for (int i{1};i<=l;++i)\n        pl[i]=1LL*pl[i-1]*bn%b6e0;\n    while (m--)\n    {\n        int a,i,b,j;\n        scanf(\"%d %d %d %d\",&a,&i,&b,&j);\n        --a;--i;--b;--j;\n        --sz[h[a]];res[a]=max(res[a],Find(F[h[a]],lst[a]));\n        if (a!=b) --sz[h[b]],res[b]=max(res[b],Find(F[h[b]],lst[b]));\n        char x{s[a][i]},y{s[b][j]};\n        fresh(a,i,y);fresh(b,j,x);\n        upd(a);if (a!=b) upd(b);\n    }\n    for (int i{0};i<n;++i)\n        cout<<max(res[i],Find(F[h[i]],lst[i]))<<endl;\n    return 0;\n}\n```",
        "postTime": 1653394815,
        "uid": 374433,
        "name": "ppip",
        "ccfLevel": 7,
        "title": "P3471 [POI2008]POC-Trains \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3471)\n\n#### \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a $n$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4ece\u6240\u6709\u5b57\u7b26\u4e32\u4e2d\u9009\u62e9\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26\u5e76\u4ea4\u6362\uff0c\u6c42\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5728\u4efb\u610f\u65f6\u523b\uff0c\u5f53\u524d\u5b57\u7b26\u4e32\u6570\u91cf\u7684\u6700\u5927\u503c\u3002\n\n#### \u601d\u8def\uff1a\n\n\u5148\u5c06\u5b57\u7b26\u4e32\u79bb\u6563\u5316\uff0chash\uff0cmap \u90fd\u53ef\u4ee5\uff0c\u5982\u679c\u89c9\u5f97 map \u591a\u4e00\u4e2a $\\log$ \u6bd4\u8f83\u6162\uff0c\u4e5f\u53ef\u4ee5\u7528 unordered_map\u3002\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6570\u91cf\u589e\u52a0\u65f6\u66f4\u65b0\u8fd9\u4e2a\u5b57\u7b26\u4e32\u96c6\u5408\u4e2d\u6240\u6709\u4e0b\u6807\u7684\u6700\u5927\u503c\uff0c\u8fd9\u4e00\u64cd\u4f5c\u53ef\u4ee5\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6216\u5e73\u8861\u6811~~\u8f7b\u677e~~\u5b9e\u73b0\u3002\n\n\u672c\u849f\u84bb\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u83ab\u540d WA\uff0c\u65e0\u5948\u4e4b\u4e0b\u53ea\u80fd\u7528 fhq_treap\uff0c\u601d\u8def\u7b80\u5355\uff0c\u5b9e\u73b0\u7b80\u5355\uff0c\u7801\u91cf\u4e5f\u5c11\u5f97\u591a\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long i64;\t\t\ni64 read() {\n\ti64 x(0), f(0); char ch = getchar();\n\twhile (!isdigit(ch)) f |= (ch == '-'), ch = getchar();\n\twhile (isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\n\treturn f ? -x : x;\n}\nint __stk[128], __len;\nvoid put(i64 x) {\n\tif (x < 0) putchar('-'), x = -x;\n\tdo { __stk[++__len] = x % 10, x /= 10; } while (x);\n\twhile (__len) putchar(__stk[__len--] ^ 48);\n}\t\t\nconst int N = 2.5e5;\nint n, l, m, cnt, id[N], root[N], ans[N];\nstring s[N];\nunordered_map<string, int> mp;\ninline int get(string x) { return mp.find(x) == mp.end() ? (mp[x] = ++cnt) : mp[x]; }\nnamespace FHQ {\n\t#define ls(x) t[x].ls\n\t#define rs(x) t[x].rs\n\tint num, a, b, c;\n\tstruct node {\n\t\tint ls, rs, siz, id, tag, rnd;\n\t}t[N];\n\tinline int New(int x) { return ++num, ls(num) = rs(num) = t[num].tag = 0, t[num].siz = 1, t[num].id = x, t[num].rnd = rand(), num; }\n\tinline void pushup(int x) { t[x].siz = t[ls(x)].siz + t[rs(x)].siz + 1; }\n\tinline void update(int x, int k) { if (x) ans[t[x].id] = max(ans[t[x].id], k), t[x].tag = max(t[x].tag, k); }\n\tinline void pushdown(int x) { if (t[x].tag) update(ls(x), t[x].tag), update(rs(x), t[x].tag), t[x].tag = 0; } \n\tint merge(int x, int y) {\n\t\tif (!x || !y) return x | y;\n\t\tif (t[x].rnd < t[y].rnd) return pushdown(x), rs(x) = merge(rs(x), y), pushup(x), x;\n\t\treturn pushdown(y), ls(y) = merge(x, ls(y)), pushup(y), y;\n\t}\n\tvoid split(int x, int k, int &a, int &b) {\n\t\tif (!x) return a = b = 0, void ();\n\t\tpushdown(x);\n\t\tif (t[x].id <= k) a = x, split(rs(x), k, rs(x), b);\n\t\telse b = x, split(ls(x), k, a, ls(x));\n\t\tpushup(x);\n\t}\n\tinline void insert(int &rt, int x) { split(rt, x - 1, a, c), b = New(x), rt = merge(merge(a, b), c), update(rt, t[rt].siz); }\n\tinline void remove(int &rt, int x) { split(rt, x, a, c), split(a, x - 1, a, b), rt = merge(a, c); }\n}\nsigned main() {\n\tsrand(114514);\n\tn = read(), l = read(), m = read(); \n\tfor (int i = 1; i <= n; ++i) cin >> s[i], id[i] = get(s[i]), FHQ::insert(root[id[i]], i);\n\twhile (m--) {\n\t\tint x = read(), p1 = read() - 1;\n\t\tint y = read(), p2 = read() - 1;\n\t\tFHQ::remove(root[id[x]], x);\n\t\tif (x != y) FHQ::remove(root[id[y]], y);\n\t\tswap(s[x][p1], s[y][p2]);\n\t\tid[x] = get(s[x]), id[y] = get(s[y]);\n\t\tFHQ::insert(root[id[x]], x);\n\t\tif (x != y) FHQ::insert(root[id[y]], y);\n\t}\n\tfor (int i = 1; i <= n; ++i) FHQ::remove(root[id[i]], i);\n\tfor (int i = 1; i <= n; ++i) put(ans[i]), putchar('\\n');\n\treturn 0;\n}\n```\n",
        "postTime": 1659603772,
        "uid": 399716,
        "name": "\u94b0\u747e_\u604b\u6db5",
        "ccfLevel": 7,
        "title": "[POI2008]POC-Trains \u9898\u89e3"
    },
    {
        "content": "\u989d\uff0c\u8fd9\u9053\u9898\u6211\u662f\u5148hash\uff0c\u7136\u540e\u7528multiset\u6c34\u8fc7\u53bb\u7684\uff0c\u5f00\u4e86O2\u901f\u5ea6\u6d77\u661f2333\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef unsigned long long ull;\nconst ull base=131;\n#define maxn 1005\ninline int read(){\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-') f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=x*10+c-'0';\n        c=getchar();\n    } \n    return x*f;\n}\null hsh[maxn],val;\nint n,l,m,ans[maxn],x,y,xx,yy;\nchar s[maxn][105];\nmultiset<ull>ss;\nmultiset<ull>::iterator it;\nvoid init(){\n    n=read();l=read();m=read();\n    for(int i=1;i<=n;i++){\n        scanf(\"%s\",s[i]+1);\n        val=0;\n        for(int j=1;j<=l;j++){\n            val=val*base+s[i][j]-'0';\n        }\n        hsh[i]=val;\n        ss.insert(hsh[i]);\n    }\n    for(int i=1;i<=n;i++) {\n    int t=ss.count(hsh[i]);\n    ans[i]=max(ans[i],t);\t\n    }\n    for(int i=1;i<=m;i++){\n        x=read();y=read();xx=read();yy=read();\n        if(s[x][y]==s[xx][yy]) continue;\n        swap(s[x][y],s[xx][yy]);\n        if(x==xx){\n            it=ss.find(hsh[x]);\n            ss.erase(it);\n            val=0;\n            for(int j=1;j<=l;j++) val=val*base+s[x][j]-'0';\n            hsh[x]=val;\n            ss.insert(hsh[x]);\n            int t1=ss.count(hsh[x]);\n            for(int j=1;j<=n;j++){\n            if(hsh[j]==hsh[x]) ans[j]=max(ans[j],t1);\n            }\n            continue;\n        }\n        it=ss.find(hsh[x]);\n        ss.erase(it);\n        it=ss.find(hsh[xx]);\n        ss.erase(it);\n        val=0;\n        for(int j=1;j<=l;j++) val=val*base+s[x][j]-'0';\n        hsh[x]=val;\n        val=0;\n        for(int j=1;j<=l;j++) val=val*base+s[xx][j]-'0';\n        hsh[xx]=val;\n        ss.insert(hsh[x]);ss.insert(hsh[xx]);\n        int t1=ss.count(hsh[x]),t2=ss.count(hsh[xx]);\n        for(int j=1;j<=n;j++){\n            if(hsh[j]==hsh[x]) ans[j]=max(ans[j],t1);\n            if(hsh[j]==hsh[xx]) ans[j]=max(ans[j],t2);\n        }\n    } \n    for(int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]);\n    \n}\nint main(){\n    init();\n    \n    return 0;\n}\n```\n",
        "postTime": 1553482927,
        "uid": 72393,
        "name": "degage",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3471 \u3010[POI2008]POC-Trains\u3011"
    },
    {
        "content": "\u53d1\u73b0\u5b57\u7b26\u4e32\u90fd\u5f88\u77ed\uff0c\u56e0\u6b64\u54c8\u5e0c\u51b2\u7a81\u7684\u6982\u7387\u4e0d\u5927\uff0c\u6211\u4eec\u7ef4\u62a4\u8fd9\u4e9b\u4e32\u7684\u54c8\u5e0c\u503c\n\n\u90a3\u4e48\u6211\u4eec\u5bf9\u6bcf\u4e2a\u54c8\u5e0c\u503c\uff0c\u8981\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u5b83\uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u9700\u8981\u652f\u6301\uff1a\u63d2\u5165\u3001\u5220\u9664\u3001\u4e0b\u653e\u6807\u8bb0\uff08\u56e0\u4e3a\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u5927\u5c0f\uff0c\u5bf9\u91cc\u9762\u6240\u6709\u5143\u7d20\u7684\u7b54\u6848\u90fd\u53ef\u80fd\u6709\u8d21\u732e\uff09\n\n\u7ebf\u6bb5\u6811\uff08\u52a8\u6001\u5f00\u70b9\uff09\u3001\u5e73\u8861\u6811\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u4e86Treap\n\n\u5f00\u82e5\u5e72\u4e2aTreap\uff0c\u4e0e\u54c8\u5e0c\u503c\u4e00\u4e00\u5bf9\u5e94\uff0c\u5176\u952e\u503c\u7684\u542b\u4e49\u662f\u5b57\u7b26\u4e32\u7684\u7f16\u53f7\n\n\u7531\u4e8e\u54c8\u5e0c\u503c\u662f\u975e\u5e38\u5927\u7684\uff0c\u4e0d\u53ef\u80fd\u5c06\u6839\u6570\u7ec4\u7684\u4e0b\u6807\u5f00\u5230\u90a3\u4e48\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\u4e00\u4e2amap\uff0c\u5c06\u54c8\u5e0c\u503c\u6563\u5217\u5230\u4e00\u4e2a\u5c0f\u6570\u7ec4\u4e2d\uff0c\u8fd9\u6837\u6839\u6570\u7ec4\u5c31\u4e0d\u4f1a\u8d85\u8fc7n+m\u4e86\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06map\u4f5c\u4e3a\u6839\u6570\u7ec4\n\n\u6bcf\u5f53\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u53d1\u751f\u6539\u53d8\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4ece\u539f\u6765\u90a3\u4e2a\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684Treap\u4e2d\u5220\u53bb\uff0c\u7136\u540e\u52a0\u5165\u5230\u65b0\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684Treap\u4e2d\uff0c\u5e76\u66f4\u65b0\u6839\u8282\u70b9\u7684lazy\u6807\u8bb0\n\nlazy\u8868\u793a\u7684\u662f\u81ea\u5df1\u6240\u5728\u7684Treap\u4e2d\uff0c\u66fe\u7ecf\u8fbe\u5230\u8fc7\u7684\u6700\u5927\u7ed3\u70b9\u6570\uff0c\u8fd9\u5c31\u662f\u9898\u76ee\u4e2d\u8bf4\u7684\u201c\u5728\u4ea4\u6362\u8f66\u53a2\u7684\u67d0\u4e2a\u65f6\u523b\uff0c\u4e0e\u5176\u989c\u8272\u5b8c\u5168\u76f8\u540c\u7684\u706b\u8f66\u6700\u591a\u6709\u591a\u5c11\u201d\n\n\u90a3\u4e48\u5728\u63d2\u5165\u3001\u5220\u9664\u3001\u65cb\u8f6c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u90fd\u8981\u5148\u8fdb\u884c\u6807\u8bb0\u4e0b\u653e\uff0c\u5e76\u987a\u4fbf\u66f4\u65b0\u7b54\u6848\u3002\u7531\u4e8e\u540c\u65f6\u6709\u6807\u8bb0\u4e0b\u653e\u4e0e\u4fe1\u606f\u4e0a\u4f20\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u7279\u522b\u6ce8\u610f\u987a\u5e8f\u3002\u4e0b\u653e\u662f\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u70b9\u4e4b\u524d\u8fdb\u884c\u7684\uff0c\u4e0a\u4f20\u662f\u8bbf\u95ee\u5b8c\u4e00\u4e2a\u7ed3\u70b9\u8fdb\u884c\u7684\n\n\u6ce8\u610f\u52a0\u4e0aa=c\u7684\u7279\u5224\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4RE\n\n```cpp\n#include<bits/stdc++.h>\n#define newnode(x) x=new Node,x->son[0]=x->son[1]=null\nusing namespace std;\n\nint read()\n{\n    int x=0;char c=getchar();\n    while(c<'0'||c>'9') c=getchar();\n    while(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n    return x;\n}\n\ntypedef unsigned long long ULL;\nconst int N=1010,M=100010;\nULL f[N],p[N];\nchar s[N][110];\nint tot=0;\nint ans[N];\n\nstruct Node\n{\n    Node *son[2];\n    int sz,v,tag,r;\n    Node(){son[0]=son[1]=NULL;}\n};\nNode *null;\nmap<ULL,Node*> rt;\n\nvoid down(Node* &o,int x)\n{\n    ans[o->v]=max(ans[o->v],x);\n    o->tag=max(o->tag,x);\n}\n\nvoid pushdown(Node* &o)\n{\n    if(!o->tag) return;\n    Node *lc=o->son[0];\n    Node *rc=o->son[1];\n    if(lc!=null) down(lc,o->tag);\n    if(rc!=null) down(rc,o->tag);\n    o->tag=0;\n}\n\nvoid maintain(Node* &o){o->sz=o->son[0]->sz+o->son[1]->sz+1;}\n\nvoid rotate(Node* &o,int d)\n{\n    Node *k=o->son[d^1];\n    pushdown(o);\n    pushdown(k);\n    o->son[d^1]=k->son[d];\n    k->son[d]=o;\n    maintain(o);\n    maintain(k);\n    o=k;\n}\n\nvoid insert(Node* &o,int x)\n{\n    if(o==null)\n    {\n        newnode(o);\n        o->sz=1;\n        o->v=x;\n        o->tag=0;\n        o->r=rand();\n        return;\n    }\n    pushdown(o);\n    if(x<o->v)\n    {\n        insert(o->son[0],x);\n        if(o->son[0]->r>o->r) rotate(o,1);\n        else maintain(o);\n    }\n    else\n    {\n        insert(o->son[1],x);\n        if(o->son[1]->r>o->r) rotate(o,0);\n        else maintain(o);\n    }\n}\n\nvoid remove(Node* &o,int x)\n{\n    if(o==null) return;\n    pushdown(o);\n    if(o->v==x)\n    {\n        if(o->son[0]==null) o=o->son[1];\n        else if(o->son[1]==null) o=o->son[0];\n        else\n        {\n            if(o->son[0]->r>o->son[1]->r) rotate(o,1),remove(o->son[1],x);\n            else rotate(o,0),remove(o->son[0],x);\n        }\n    }\n    else if(x<o->v) remove(o->son[0],x);\n    else remove(o->son[1],x);\n    if(o!=null) maintain(o);\n}\n\nvoid insert(int x)\n{\n    if(!rt.count(f[x])) rt[f[x]]=null;\n    insert(rt[f[x]],x);\n    Node *o=rt[f[x]];\n    down(o,o->sz);\n}\n\nint main()\n{\n    newnode(null);\n    int n=read(),l=read(),m=read();\n    p[0]=1;for(int i=1;i<=100;i++) p[i]=131*p[i-1];\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",s[i]+1);\n        for(int j=1;j<=l;j++)\t\n            f[i]=f[i]*131+s[i][j];\n        insert(i);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int a=read(),b=read(),c=read(),d=read();\n        if(a==c)\n        {\n            remove(rt[f[a]],a);\n            f[a]+=p[l-b]*(s[a][d]-s[a][b]);\n            f[a]+=p[l-d]*(s[a][b]-s[a][d]);\n            swap(s[a][b],s[a][d]);\n            insert(a);\n            continue;\n        }\n        remove(rt[f[a]],a);remove(rt[f[c]],c);\n        f[a]+=p[l-b]*(s[c][d]-s[a][b]);\n        f[c]+=p[l-d]*(s[a][b]-s[c][d]);\n        swap(s[a][b],s[c][d]);\n        insert(a);insert(c);\n    }\n    for(int i=1;i<=n;i++) remove(rt[f[i]],i);\n    for(int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1528597279,
        "uid": 20158,
        "name": "Ebola",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3471 \u3010[POI2008]POC-Trains\u3011"
    },
    {
        "content": "\u628a\u5b57\u7b26\u4e32$hash$\u4e86\uff0c\u4e00\u6837\u7684\u653e\u5728\u4e00\u8d77\u7ef4\u62a4\u3002\n\n\n\u8003\u8651\u6bcf\u4e2a\u4e32\u53ea\u5728\u5220\u9664\u65f6\u6216\u6700\u540e\u66f4\u65b0\u7b54\u6848\u3002\n\n\n\u90a3\u4e48\u53ef\u4ee5\u5355\u8c03\u6808\u7ef4\u62a4\u3002\n\n\n$O(mlogn)$\n\n\n\u4f46\u6211\u81ea\u4fe1\u4e0d\u4f1a\u88ab\u5361\uff0c\u4e8e\u662f\u5199\u7684\u53cc\u5411\u94fe\u8868\u7ef4\u62a4\uff0c\u6bcf\u6b21\u66b4\u529b\n\n$O(nm)$\n\n(\u8dd1\u7684\u98de\u5feb)\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n#define gc (c=getchar())\nint read()\n{\n    char c;\n    while(gc<'0');\n    int x=c-'0';\n    while(gc>='0')x=x*10+c-'0';\n    return x;\n}\ntemplate <typename T> void chmin(T &x,const T &y)\n{\n    if(x>y)x=y;\n}\ntemplate <typename T> void chmax(T &x,const T &y)\n{\n    if(x<y)x=y;\n}\n#define rep(i,l,r) for(int i=l;i<=r;++i)\nconst int N=1000+5,L=100+5,M=1e5+5,T=N+M;\nchar s[N][L];\n\nconst int D=1e9+7,w=26;\nll mi[L],a[N];\nmap<int,int>dy;int tot;\n\nint cnt[T],nex[T+N],pre[N],have[N],mx[N];\nvoid push(int x)\n{\n    if(!dy.count(a[x]))dy[a[x]]=++tot;\n    int i=dy[a[x]];\n    int now=++cnt[i];\n    for(int y=nex[N+i];have[y]<now;y=nex[y])have[y]=now;\n    pre[nex[x]=nex[N+i]]=x;\n    nex[pre[x]=N+i]=x;\n    have[x]=now;\n}\nvoid del(int x)\n{\n    int i=dy[a[x]];\n    --cnt[i];\n    chmax(mx[x],have[x]);\n    pre[nex[x]]=pre[x];\n    nex[pre[x]]=nex[x];\n}\n\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);\n    int n,l,m;\n    cin>>n>>l>>m;\n    mi[0]=1;\n    rep(i,1,l)mi[i]=mi[i-1]*w%D;\n    rep(i,1,n)\n    {\n        scanf(\"%s\",s[i]+1);\n        rep(j,1,l)(a[i]+=mi[j]*s[i][j])%=D;\n    }\n    have[0]=N;\n    rep(i,1,n)push(i);\n    while(m--)\n    {\n        int i1=read(),j1=read(),i2=read(),j2=read();\n        if(i1==i2)\n        {\n            del(i1);\n            a[i1]=(a[i1]+(s[i2][j2]-s[i1][j1])*mi[j1]%D+D)%D;\n            a[i2]=(a[i2]+(s[i1][j1]-s[i2][j2])*mi[j2]%D+D)%D;\n            swap(s[i1][j1],s[i2][j2]);\n            push(i1);\n            continue;\n        }\n        del(i1);del(i2);\n        a[i1]=(a[i1]+(s[i2][j2]-s[i1][j1])*mi[j1]%D+D)%D;\n        a[i2]=(a[i2]+(s[i1][j1]-s[i2][j2])*mi[j2]%D+D)%D;\n        swap(s[i1][j1],s[i2][j2]);\n        push(i1);push(i2);\n    }\n    rep(i,1,n)printf(\"%d\\n\",max(mx[i],have[i]));\n}\n```",
        "postTime": 1515833621,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3471 \u3010[POI2008]POC-Trains\u3011"
    }
]