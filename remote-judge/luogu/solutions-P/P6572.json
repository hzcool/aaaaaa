[
    {
        "content": "## \u3010\u865a\u6811\uff0c\u6811\u4e0a\u5dee\u5206\u3011P6572 [BOI 2017] Railway\n\n### Analysis\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u526f\u90e8\u957f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u88ab\u4ed6\u9009\u62e9\u7684\u6240\u6709\u8fb9\u90fd\u52a0\u4e0a $1$\uff0c\u6700\u540e check \u6709\u54ea\u4e9b\u8fb9\u7684\u6743\u503c\u4e0d\u5c0f\u4e8e $k$ \u5373\u53ef\u3002\n\n\u5bf9\u4e8e $s_i = 2$ \u7684\u5b50\u4efb\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u627e\u51fa\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u90a3\u6761\u94fe\u3002\u95ee\u9898\u88ab\u8f6c\u5316\u4e3a\u94fe\u52a0\u4ee5\u53ca\u6700\u7ec8\u7edf\u8ba1\uff0c\u53ef\u4ee5\u4f7f\u7528\u6811\u4e0a\u5dee\u5206\u89e3\u51b3\u3002\u4e3a\u4e86\u7edf\u8ba1\u8fb9\u6743\uff0c\u5c06\u8fb9\u6743\u4e0b\u653e\u6210\u70b9\u6743\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u4e00\u822c\u60c5\u51b5\uff0c\u6211\u4eec\u6ca1\u6cd5\u4e0d\u91cd\u590d\u7684\u5feb\u901f\u7ed9\u6240\u6709\u88ab\u9009\u62e9\u7684\u8fb9\u90fd $+1$\u3002\u8003\u8651\u5efa\u51fa\u865a\u6811\uff0c\u6ce8\u610f\u5230\u865a\u6811\u7684\u8fb9\u5bf9\u5e94\u5230\u539f\u56fe\u4e0a\u5c31\u662f\u6240\u6709\u88ab\u9009\u62e9\u7684\u8fb9\u3002\u6211\u4eec\u628a\u865a\u6811\u4e0a\u4e00\u6761\u8fb9 $(u, v)$\uff0c\u5176\u4e2d $u$ \u662f\u7236\u8282\u70b9\uff0c\u5bf9\u5e94\u5230\u539f\u56fe\u4e0a $v$ \u5230 $u$ \uff08\u4f46\u662f\u4e0d\u5305\u62ec $u$\uff09\u7684\u8fd9\u6761\u94fe\u4e0a\u3002\u90a3\u4e48\u5bf9\u8fd9\u4e9b\u94fe\u8fdb\u884c\u94fe\u52a0\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u8fd9\u91cc\u8ba4\u4e3a $n, m, \\sum s$ \u540c\u9636\u3002\n\n### Code\n\n```cpp\nnamespace Fusu {\n\nconst int maxt = 19;\nconst int maxn = 100005;\n\nint n, m, t, vistime;\nint dfn[maxn], fa[maxn], depth[maxn], l2[maxn], a[maxn], id[maxn], g[maxn], w[maxn], anc[maxt][maxn];\nstd::vector<int> p, q, e[maxn], ans;\nstd::vector<std::pair<int, int> > ee[maxn];\n\nvoid dfs(const int u);\nvoid vt();\nvoid dfs2(const int u);\n\nvoid Main() {\n  qr(n); qr(m); qr(t);\n  for (int u, v, i = 1; i < n; ++i) {\n    qr(u); qr(v);\n    ee[u].push_back({v, i});\n    ee[v].push_back({u, i});\n  }\n  for (int i = 0, v = 1 << i; v <= n; v = 1 << ++i) l2[v] = i;\n  for (int i = 3; i <= n; ++i) if (l2[i] == 0) l2[i] = l2[i - 1];\n  dfs(1);\n  for (int s, x; m; --m) {\n    qr(s);\n    p.clear();\n    q.clear();\n    while (s--) {\n      qr(x);\n      p.push_back(x);\n    }\n    vt();\n  }\n  dfs2(1);\n  for (int i = 1; i <= n; ++i) if (w[i] >= t) ans.push_back(id[i]);\n  std::sort(ans.begin(), ans.end());\n  qw(ans.size(), '\\n');\n  for (auto u : ans) {\n    qw(u, ' ');\n  }\n  putchar('\\n');\n}\n\nint lca(int u, int v) {\n  if (depth[u] < depth[v]) std::swap(u, v);\n  for (int delta = depth[u] - depth[v]; delta; delta -= 1 << l2[delta]) {\n    u = anc[l2[delta]][u];\n  }\n  if (u == v) return u;\n  for (int i = l2[depth[u]]; ~i; --i) if (anc[i][u] != anc[i][v]) {\n    u = anc[i][u];\n    v = anc[i][v];\n  }\n  return anc[0][u];\n}\n\nint top;\nint stk[maxn];\nvoid vt() {\n  std::sort(p.begin(), p.end(), [](const int x, const int y) { return dfn[x] < dfn[y]; });\n  stk[top = 1] = 0;\n  int x, y, z;\n  for (auto u : p) {\n    x = stk[top];\n    if ((z = lca(x, u)) != x) {\n      while (dfn[y = stk[top - 1]] > dfn[z]) {\n        g[x] = y; q.push_back(x); x = stk[--top];\n      }\n      if (y != z) {\n        g[x] = z; q.push_back(x);\n        stk[top] = z;\n      } else if (top != 1) {\n        g[x] = y;\n        q.push_back(x);\n        --top;\n      }\n    }\n    stk[++top] = u;\n  }\n  while (top != 1) {\n    int x = stk[top], y = stk[--top];\n    g[x] = y;\n    q.push_back(x);\n  }\n  for (auto u : q) if (g[u]) {\n    ++w[u];\n    --w[g[u]];\n  }\n}\n\nvoid dfs(const int u) {\n  dfn[u] = ++vistime;\n  depth[u] = depth[fa[u]] + 1;\n  for (int i = 0, v = anc[i][anc[i][u] = fa[u]]; v; v = anc[i][v]) anc[++i][u] = v;\n  for (auto v : ee[u]) if (dfn[v.first] == 0) {\n    fa[v.first] = u;\n    id[v.first] = v.second;\n    e[u].push_back(v.first);\n    dfs(v.first);\n  }\n}\n\nvoid dfs2(const int u) {\n  for (auto v : e[u]) {\n    dfs2(v);\n    w[u] += w[v];\n  }\n}\n\n} // namespace Fusu\n```",
        "postTime": 1590654522,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6572 \u3010[BOI 2017] Railway\u3011"
    },
    {
        "content": "## \u601d\u8def\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u526f\u90e8\u957f\uff0c\u6211\u4eec\u628a\u88ab\u4ed6\u9009\u62e9\u7684\u70b9\u6309dfs\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u4f7f\u76f8\u4e34\u4e24\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8fb9\u7684\u6743\u503c+1\u3002\u6700\u540e\u5224\u65ad\u6709\u54ea\u4e9b\u8fb9\u7684\u6743\u503c\u4e0d\u5c0f\u4e0e2*k\u5373\u53ef\u3002\n\n#### \u4e3e\u4e2a\u4f8b\u5b50\n\u5982\u56fe\uff1a\u82e5\u526f\u90e8\u957f\u9009\u62e9\u7684\u70b9\u4e3a4,5,7\u3002(\u53ef\u4ee5\u53d1\u73b0\u672c\u6765\u53ea\u7b97\u4e00\u6b21\u7684\u8fb9\uff0c\u6070\u597d\u7b97\u4e862\u6b21)\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/12l4w9ng.png)\n\n\n\u4ece4\u52305\uff0c\u4ece5\u52307\uff0c\u4ece7\u52304\u3002\n\n## Code\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\n#include <iomanip>\nusing namespace std;\nconst int N=401000;\nint n,m,k,num,tot=0,dotot=0,tp=0;\nint lst[N],dfn[N],sum[N],laz[N],ls[N],rs[N],q[N],u[N],v[N];\nint id[N],dep[N],top[N],son[N],siz[N],fa[N];\nstruct A\n{\n\tint fir,nex,go,type;\n}a[N];\ninline bool cmp(int E,int F)\n{\n\treturn dfn[E]<dfn[F];\n}\nvoid add(int x,int y)\n{\n\ta[++tot].nex=a[x].fir;\n\ta[x].fir=tot;\n\ta[tot].go=y;\n}\ninline int read()\n{\n\tint x=0,minus=0;char ch;\n\twhile (!isdigit(ch=getchar())) minus|=(ch=='-');\n\twhile (isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n\treturn minus?-x:x;\n}\nvoid dfs1(int x,int f)\n{\n\tdfn[x]=++dotot;//dfs\u5e8f\n\tfa[x]=f;\n\tdep[x]=dep[f]+1;\n\tsiz[x]=1;\n\tfor (register int i=a[x].fir;i;i=a[i].nex)\n\t{\n\t\tint y=a[i].go;\n\t\tif (y==f) continue;\n\t\tdfs1(y,x);\n\t\tsiz[x]+=siz[y];\n\t\tif (siz[son[x]]<siz[y]) son[x]=y;\n\t}\n}\nvoid dfs2(int x,int topf)\n{\n\tid[x]=++dotot;//\u7ebf\u6bb5\u6811\u7528\u7684\n\ttop[x]=topf;\n\tif (!son[x]) return ;\n\tdfs2(son[x],topf);\n\tfor (register int i=a[x].fir;i;i=a[i].nex)\n\t{\n\t\tint y=a[i].go;\n\t\tif (y==fa[x]||y==son[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\nvoid build(int k,int l,int r)\n{\n\tls[k]=l,rs[k]=r;\n\tif (l==r) return ;\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid),build(k<<1|1,mid+1,r);\n}\nvoid down(int k)\n{\n\tif (laz[k]==0) return ;\n\tlaz[k<<1]+=laz[k];\n\tlaz[k<<1|1]+=laz[k];\n\tsum[k<<1]+=(rs[k<<1]-ls[k<<1]+1)*laz[k];\n\tsum[k<<1|1]+=(rs[k<<1|1]-ls[k<<1|1]+1)*laz[k];\n\tlaz[k]=0;\n}\nvoid change(int k,int x,int y)\n{\n\tif (ls[k]>=x&&rs[k]<=y)\n\t{\n\t\tsum[k]+=rs[k]-ls[k]+1;\n\t\tlaz[k]++;\n\t\treturn ;\n\t}\n\tdown(k);\n\tif (x<=rs[k<<1]) change(k<<1,x,y);\n\tif (y>=ls[k<<1|1]) change(k<<1|1,x,y);\n\tsum[k]=sum[k<<1]+sum[k<<1|1];\n}\ninline int cheak(int k,int x)\n{\n\tif (ls[k]==rs[k]) return sum[k];\n\tdown(k);\n\tif (x<=rs[k<<1]) return cheak(k<<1,x);\n\telse return cheak(k<<1|1,x);\n}\nvoid chain(int x,int y)\n{\n\twhile (top[x]!=top[y])\n\t{\n\t\tif (dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\tchange(1,id[top[x]],id[x]);\n\t\tx=fa[top[x]];\n\t}\n\tif (x==y) return ;\n\tif (dep[x]>dep[y]) swap(x,y);\n\tchange(1,id[son[x]],id[y]);\n}\nsigned main()\n{\n\tn=read(),m=read(),k=read();\n\tfor (register int i=1,x,y;i<n;++i)\n\tx=read(),y=read(),add(x,y),add(y,x),u[i]=x,v[i]=y;\n\ttot=0,dfs1(1,0),dotot=0,dfs2(1,1),build(1,1,n);//\u9884\u5904\u7406\n\twhile (m--)\n\t{\n\t\tnum=read();\n\t\tfor (register int i=1;i<=num;++i) lst[i]=read();\n\t\tsort(lst+1,lst+1+num,cmp);//\u6309dfs\u5e8f\u6392\u5e8f\n\t\tfor (register int i=1;i<num;++i) chain(lst[i],lst[i+1]);\n\t\tchain(lst[1],lst[num]);//\u4f9d\u6b21\u4f7f\u76f8\u4e34\u4e24\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u7684\u8fb9\u7684\u6743\u503c+1\n\t}\n\tfor (register int i=1;i<n;++i)\n\t{\n\t\tif (dep[u[i]]<dep[v[i]]) swap(u[i],v[i]);//\u6811\u5256\u628a\u8fb9\u6743\u5b58\u5230\u513f\u5b50\u90a3\u4e86\n\t\tif (cheak(1,id[u[i]])>=2*k) q[++tp]=i;\n\t}\n\tprintf(\"%d\\n\",tp);\n\tfor (register int i=1;i<=tp;++i) printf(\"%d \",q[i]);//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1604025124,
        "uid": 109212,
        "name": "slzs",
        "ccfLevel": 0,
        "title": "\u3010\u6811\u5256 \u7ebf\u6bb5\u6811\u3011 \u9898\u89e3 P6572 \u3010[BalticOI 2017] Railway\u3011"
    },
    {
        "content": "> \u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\u3002\u6709 $m$ \u6b21\u67d3\u8272\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u7ed9\u51fa\u4e00\u4e9b\u70b9\uff0c\u628a\u8986\u76d6\u4ed6\u4eec\u7684\u6700\u5c0f\u8fde\u901a\u5757\u5185\u7684\u8fb9\u67d3\u4e0a\u989c\u8272\u3002\u6c42\u88ab\u67d3\u8272\u6b21\u6570\u4e0d\u5c0f\u4e8e $k$ \u7684\u8fb9\u6570\u3002\n> \n> $n \\le 10 ^ 5$\uff0c$m \\le 5 \\times 10 ^ 4$\uff0c$k \\le m$\u3002\n\n\u5148\u4ee5 $1$ \u4e3a\u6839\uff0c\u628a\u8fd9\u68f5\u6811\u53d8\u6210\u6709\u6839\u6811\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $u$\uff0c\u8003\u8651\u5b83\u5411\u7236\u4eb2\u8fde\u7684\u8fb9 $e$ \u4f1a\u88ab\u4ec0\u4e48\u6837\u7684\u64cd\u4f5c\u67d3\u8272\u3002\n\n\u8fd9\u6761\u8fb9\u8981\u88ab\u4e00\u4e2a\u65b9\u6848\u7684\u8fde\u901a\u5757\u5305\u542b\uff0c\u5fc5\u987b\u8981\u6ee1\u8db3\u8fb9\u7684\u4e24\u8fb9\u90fd\u6709\u65b9\u6848\u5185\u7684\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u65b9\u6848\u5728 $u$ \u5b50\u6811\u5185\u6709\u70b9\uff0c$u$ \u5b50\u6811\u5916\u4e5f\u6709\u70b9\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u8fd9\u4e2a\u65b9\u6848\u5728 $u$ \u5b50\u6811\u5185\u6709\u70b9\uff0c\u4e14\u4e0d\u662f\u6240\u6709\u70b9\u90fd\u5728 $u$ \u5b50\u6811\u5185\u3002\n\n\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u5c31\u662f\u8bbe\u8fd9\u4e2a\u65b9\u6848 $x$ \u5728 $u$ \u5b50\u6811\u5185\u51fa\u73b0\u6b21\u6570\u4e3a $c_x$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u6848\u4f1a\u5bf9 $u$ \u5230\u7236\u4eb2\u7684\u8fb9 $e$ \u67d3\u8272\u5f53\u4e14\u4ec5\u5f53 $0 \\lt c_x \\lt s_x$\uff0c\u5176\u4e2d $s_x$ \u662f\u7b2c $x$ \u4e2a\u65b9\u6848\u7684\u70b9\u6570\u3002\n\n\u63a5\u4e0b\u6765\u53ea\u8981\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5b50\u6811\u5185\u6709\u591a\u5c11\u4e2a\u70b9\u6ee1\u8db3\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\u542f\u53d1\u5f0f\u5408\u5e76\u7ef4\u62a4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n + m) \\log m)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <utility>\n#include <vector>\n\nconst int MaxN = 100000, MaxM = 50000;\n\nstruct graph_t {\n  int cnte;\n  int head[MaxN + 5], to[MaxN * 2 + 5], next[MaxN * 2 + 5];\n\n  graph_t() {\n    cnte = 1;\n    memset(head, 0, sizeof head);\n    memset(to, 0, sizeof to);\n    memset(next, 0, sizeof next);\n  }\n\n  inline void addEdge(int u, int v) {\n    cnte++;\n    to[cnte] = v;\n    next[cnte] = head[u];\n    head[u] = cnte;\n  }\n};\n\nint N, M, Q, K;\nint S[MaxM + 5];\ngraph_t Gr;\nstd::vector< std::pair<int, int> > Vec;\nstd::vector<int> Ans;\n\nint Fa[MaxN + 5], Sum[MaxN + 5], Wson[MaxN + 5];\nint Id[MaxN + 5], Dfc, Left[MaxN + 5], Right[MaxN + 5];\n\nvoid init() {\n  scanf(\"%d %d %d\", &N, &M, &K);\n  for (int i = 1; i < N; ++i) {\n    int u, v;\n    scanf(\"%d %d\", &u, &v);\n    Gr.addEdge(u, v);\n    Gr.addEdge(v, u);\n  }\n  for (int i = 1; i <= M; ++i) {\n    scanf(\"%d\", &S[i]);\n    for (int j = 1; j <= S[i]; ++j) {\n      int x;\n      scanf(\"%d\", &x);\n      Sum[x]++;\n      Vec.push_back(std::make_pair(x, i));\n    }\n  }\n  Q = (int) Vec.size();\n}\n\nvoid dfs1(int u) {\n  for (int i = Gr.head[u]; i; i = Gr.next[i]) {\n    int v = Gr.to[i];\n    if (v == Fa[u]) continue;\n    Fa[v] = u;\n    dfs1(v);\n    Sum[u] += Sum[v];\n    if (Wson[u] == 0 || Sum[v] > Sum[Wson[u]]) Wson[u] = v;\n  }\n}\n\nvoid dfs2(int u) {\n  Id[u] = ++Dfc;\n  if (Wson[u] != 0) dfs2(Wson[u]);\n  for (int i = Gr.head[u]; i; i = Gr.next[i]) {\n    int v = Gr.to[i];\n    if (v == Fa[u] || v == Wson[u]) continue;\n    dfs2(v);\n  }\n}\n\ninline bool cmp(std::pair<int, int> x, std::pair<int, int> y) { return Id[x.first] < Id[y.first]; }\n\nvoid dfs3(int u) {\n  for (int i = Gr.head[u]; i; i = Gr.next[i]) {\n    int v = Gr.to[i];\n    if (v == Fa[u]) continue;\n    dfs3(v);\n    Left[u] = std::min(Left[u], Left[v]);\n    Right[u] = std::max(Right[u], Right[v]);\n  }\n}\n\nint Buc[MaxM + 5], Num;\n\ninline void ins(int x) {\n  Buc[x]++;\n  if (Buc[x] == 1) Num++;\n  if (Buc[x] == S[x]) Num--;\n}\n\ninline void del(int x) {\n  Buc[x]--;\n  if (Buc[x] == 0) Num--;\n  if (Buc[x] == S[x] - 1) Num++;\n}\n\nvoid dfs4(int u, int tof) {\n  int weightsontof = 0;\n  for (int i = Gr.head[u]; i; i = Gr.next[i]) {\n    int v = Gr.to[i];\n    if (v == Fa[u]) continue;\n    if (v == Wson[u]) {\n      weightsontof = (i >> 1);\n      continue;\n    }\n    dfs4(v, i >> 1);\n    for (int j = Left[v]; j <= Right[v]; ++j) del(Vec[j].second);\n  }\n  if (Wson[u] != 0) dfs4(Wson[u], weightsontof);\n  for (int i = Left[u]; i < std::min(Right[u] + 1, Left[Wson[u]]); ++i) ins(Vec[i].second);\n  for (int i = Gr.head[u]; i; i = Gr.next[i]) {\n    int v = Gr.to[i];\n    if (v == Fa[u] || v == Wson[u]) continue;\n    for (int j = Left[v]; j <= Right[v]; ++j) ins(Vec[j].second);\n  }\n  if (Num >= K) Ans.push_back(tof);\n}\n\nvoid solve() {\n  dfs1(1);\n  dfs2(1);\n  std::sort(Vec.begin(), Vec.end(), cmp);\n  for (int i = 0; i <= N; ++i) Left[i] = Q, Right[i] = -1;\n  for (int i = 0; i < Q; ++i) {\n    std::pair<int, int> p = Vec[i];\n    Left[p.first] = std::min(Left[p.first], i);\n    Right[p.first] = std::max(Right[p.first], i);\n  }\n  dfs3(1);\n  dfs4(1, 0);\n  printf(\"%d\\n\", (int) Ans.size());\n  std::sort(Ans.begin(), Ans.end());\n  for (int i = 0; i < (int) Ans.size(); ++i)\n    printf(\"%d%c\", Ans[i], \" \\n\"[i == (int) Ans.size() - 1]);\n}\n\nint main() {\n  init();\n  solve();\n  return 0;\n}\n```",
        "postTime": 1590589249,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6572 \u3010[BOI 2017] Railway\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u540c\u65f6\u6709 $m$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u5728\u6811\u4e0a\u9009\u5b9a\u4e00\u4e9b\u70b9\uff0c\u5e76\u8ba9\u4ed6\u4eec\u8054\u901a\u3002\u6c42\u5728 $k$ \u4e2a\u53ca\u4ee5\u4e0a\u7684\u4eba\u7684\u65b9\u6848\u4e2d\u90fd\u8981\u8054\u901a\u7684\u8fb9\u3002\n\n## \u601d\u8def\n\n\u8fd9\u662f\u4e00\u9053\u6811\u4e0a\u7edf\u8ba1\u7c7b\u9898\u76ee\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u6811\u4e0a\u5dee\u5206\u3002\u4f46\u662f\u6811\u4e0a\u5dee\u5206\u5728\u8fd9\u9053\u9898\u76ee\u4e2d\u53ea\u80fd\u505a\u4e24\u4e2a\u70b9\u7684\u60c5\u51b5\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\u56e0\u4e3a\u8fd9\u91cc\u9762\u7684\u4e00\u5806\u70b9\u662f\u9760\u7ebf\u6bb5\u8fde\u63a5\u8d77\u6765\u7684\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u70b9\u91cc\u7684\u8fde\u63a5\u65b9\u5f0f\u91cc\u8fdb\u884c\u4e00\u70b9\u7814\u7a76\u3002\u4f8b\u5982\u6211\u4e0b\u9762\u56fe\u4e2d\u7684\u8fd9\u68f5\u6811\uff0c\u6211\u4eec\u8981\u5c06 $3,4,7$ \u8fd9\u4e09\u4e2a\u70b9\u8fde\u901a\u3002\n\n![](https://pic.imgdb.cn/item/62b964861d64b07066e52930.png)\n\n\u7136\u540e\u6211\u4eec\u4f9d\u6b21\u7528\u6811\u4e0a\u5dee\u5206\u8fde\u63a5 $(4,7),(7,3),(3,4)$ \u5f97\u5230\u4ee5\u4e0b\u8fd9\u6837\u3002\n\n![](https://pic.imgdb.cn/item/62b965651d64b07066e6d32b.png)\n\n\u6211\u4eec\u60ca\u5947\u7684\u53d1\u73b0\u6240\u6709\u8981\u7528\u7684\u8fb9\u90fd\u88ab\u52a0\u4e86\u4e24\u6b21\uff01\u89c2\u5bdf\u4e00\u4e0b\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5c06\u8fd9\u4e9b\u70b9\u6309\u7167 dfs \u5e8f\u6392\u5e8f\uff0c\u4e24\u4e24\u76f8\u8fde\uff0c\u5e76\u5c06\u6700\u5c0f\u548c\u6700\u5927\u76f8\u8fde\uff0c\u8fd9\u6837\u6240\u6709\u7684\u8fb9\u90fd\u4f1a\u88ab\u8986\u76d6\u4e24\u6b21\u3002\u800c\u6211\u4eec\u5728\u627e\u4e00\u4e9b\u5176\u4ed6\u7684\u70b9\uff0c\u90fd\u53ef\u4ee5\u9a8c\u8bc1\u8fd9\u4e00\u4e2a\u6027\u8d28\u3002\n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fdb\u884c\u6811\u4e0a\u5dee\u5206\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u5728\u5199\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u4eec\u518d\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u5904\u7406\u8fb9\u6743\uff1f\u6211\u4eec\u53ef\u4ee5\u5c06\u8fb9\u6743\u8f6c\u79fb\u5230\u5b83\u7684\u513f\u5b50\u8282\u70b9\u90a3\u91cc\u53bb\uff0c\u90a3\u4e48\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\uff0c\u5176\u4ed6\u6240\u6709\u7684\u70b9\u90fd\u5bf9\u5e94\u552f\u4e00\u7684\u4e00\u6761\u8fb9\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u518d\u6309\u7167\u8fb9\u7684\u7f16\u53f7\u8fdb\u884c\u6392\u5e8f\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate <typename T>\nT read()\n{\n    char c = getchar();\n    int neg = 1;\n    T sum = 0;\n    while (!isdigit(c))\n    {\n        if (c == '-')\n            neg = -1;\n        c = getchar();\n    }\n    while (isdigit(c))\n    {\n        sum = (sum << 3) + (sum << 1) + (c ^ 48);\n        c = getchar();\n    }\n    return sum * neg;\n}\n#define Read read<int>\nint n, m, k;\nvector<pair<int, int>> g[100010];\nvector<int> id[100010];\nint f[100010][32], dfsxu[100010], dep[100010];\nint cnt, diff[100010], toe[100010];\nvoid dfs(int cur, int fa)\n{\n    dfsxu[cur] = ++cnt;\n    f[cur][0] = fa;\n    dep[cur] = dep[fa] + 1;\n    for (int i = 1; (1 << i) <= dep[cur]; i++)\n        f[cur][i] = f[f[cur][i - 1]][i - 1];\n    for (int i = 0; i < g[cur].size(); i++)\n    {\n        int to = g[cur][i].second;\n        if (to == fa)\n            continue;\n        dfs(to, cur);\n        toe[to] = g[cur][i].first;\n    }\n}\nint lca(int x, int y)\n{\n    if (dep[x] > dep[y])\n        swap(x, y);\n    for (int i = 30; i >= 0; i--)\n    {\n        if (dep[f[y][i]] >= dep[x])\n            y = f[y][i];\n    }\n    if (x == y)\n        return x;\n    for (int i = 30; i >= 0; i--)\n    {\n        if (f[x][i] != f[y][i])\n            x = f[x][i], y = f[y][i];\n    }\n    return f[x][0];\n}\nbool cmp(int x, int y)\n{\n    return dfsxu[x] < dfsxu[y];\n}\nbool cmp2(int x, int y)\n{\n    return toe[x] < toe[y];\n}\nvoid Calcans(int cur, int fa)\n{\n    for (int i = 0; i < g[cur].size(); i++)\n    {\n        int to = g[cur][i].second;\n        if (to == fa)\n            continue;\n        Calcans(to, cur);\n        diff[cur] += diff[to];\n    }\n}\nint main()\n{\n#ifdef LOCAL\n    freopen(\"sample.in\", \"r\", stdin);\n    freopen(\"sample.out\", \"w\", stdout);\n#endif\n    n = Read();\n    m = Read();\n    k = Read();\n    for (int i = 1; i < n; i++)\n    {\n        int x = Read(), y = Read();\n        g[x].push_back(make_pair(i, y));\n        g[y].push_back(make_pair(i, x));\n    }\n    dfs(1, 0);\n    vector<int> vec;\n    for (int i = 1; i <= m; i++)\n    {\n        int x = Read();\n        vec.clear();\n        for (int j = 1; j <= x; j++)\n            vec.push_back(Read());\n        sort(vec.begin(), vec.end(), cmp);\n        for (int j = 0; j < x - 1; j++)\n        {\n            int xx = vec[j], y = vec[j + 1], l = lca(xx, y);\n            diff[xx] += 1;\n            diff[y] += 1;\n            diff[l] -= 2;\n        }\n        int xx = vec[vec.size() - 1], y = vec[0], l = lca(xx, y);\n        diff[xx] += 1;\n        diff[y] += 1;\n        diff[l] -= 2;\n    }\n    Calcans(1, 0);\n    vec.clear();\n    for (int i = 2; i <= n; i++)\n    {\n        if (diff[i] >= 2 * k)\n            vec.push_back(i);\n    }\n    printf(\"%d\\n\", vec.size());\n    sort(vec.begin(), vec.end(), cmp2);\n    for (auto i : vec)\n        printf(\"%d \", toe[i]);\n    return 0;\n}\n```\n",
        "postTime": 1656318299,
        "uid": 719276,
        "name": "Pain_Of_Regret",
        "ccfLevel": 0,
        "title": "P6572\u9898\u89e3"
    },
    {
        "content": "# P6572 BalticOI 2017 Railway \u9898\u89e3\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u9898\u9762\u5e76\u4e0d\u590d\u6742\u3002\u603b\u7684\u6765\u8bf4\uff0c\u8981\u6c42\u4f60\u7ef4\u62a4\u4e00\u68f5\u6811\u7684\u6240\u6709\u8fb9\uff0c\u6bcf\u6b21\u7ed9\u5b9a $m$ \u4e2a\u7ed3\u70b9\uff0c\u8981\u6c42\u4f60\u9009\u62e9\u6700\u5c11\u7684\u8fb9\uff0c\u4f7f\u5f97\u8fd9 $m$ \u4e2a\u70b9\u8054\u901a\u3002\u628a\u6240\u9009\u8fb9\u7684\u8fb9\u6743 +1 \uff0c\u6700\u540e\u8be2\u95ee\u6709\u591a\u5c11\u6761\u8fb9\u7684\u8fb9\u6743\u5927\u4e8e\u7b49\u4e8e $k$\u3002\n\n## \u601d\u8def\u5386\u7a0b\n\n\u65e0\u8bba\u505a\u4ec0\u4e48\u9898\uff0c\u624b\u73a9\u6837\u4f8b\u603b\u662f\u4e00\u4e2a\u597d\u4e60\u60ef\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pjw2zgq8.png)\n\n\u8fd9\u4e2a\u9898\u7684\u6837\u4f8b\u662f\u8fd9\u6837\u7684\uff0c1 \u53f7\u7684\u8981\u6c42\u4e3a\u7ea2\u8272\uff0c2 \u53f7\u7684\u4e3a\u84dd\u8272\uff0c3 \u53f7\u7684\u4e3a\u7eff\u8272\uff0c\u5f88\u660e\u663e \u8fde\u63a5 2 3 \u7684\u8fb9\u548c\u8fde\u63a5 3 4 \u7684\u8fb9\u7b26\u5408\u8981\u6c42\u3002\n\n\u76f4\u63a5\u9009\u8fb9\u4e0d\u597d\u64cd\u4f5c\uff0c\u4e00\u4e2a\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u7684\u64cd\u4f5c\u5c31\u662f\u5148\u628a\u4e24\u4e2a\u70b9\u8def\u5f84\u4e0a\u7684\u8fb9\u6743 +1 \uff08\u8fde\u63a5\u8d77\u6765\uff09\u3002\u7136\u540e\u518d\u8fde\u63a5\u7b2c\u4e09\u4e2a\u3001\u7b2c\u56db\u4e2a...\n\n\u4f46\u662f\u8fd9\u6837\u663e\u7136\u4e0d\u5bf9\uff0c\u5982\u679c\u7528\u8fd9\u4e2a\u601d\u8def\u53bb\u6ee1\u8db3 1 \u53f7\u7684\u8981\u6c42\u7684\u8bdd\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fde\u63a5 2 3 \u7684\u90a3\u6761\u8fb9\u88ab\u91cd\u590d\u9009\u62e9\u4e86\u4e00\u6b21\u3002\n\n\u592a\u7cdf\u7cd5\u4e86\uff01\u6574\u7406\u4e00\u4e0b\u5fc3\u60c5\uff0c\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u9519\uff1a\n\n\u770b\u5230\u5982\u679c 1 \u53f7\u7684\u8981\u6c42\u662f\u8fde\u63a5 1\u30013\u30015 \u8fd9 3 \u4e2a\u70b9\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u5c31\u4e0d\u4f1a\u51fa\u9519\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a 1\u30013\u30015 \u8fd9 3 \u4e2a\u70b9\u5728\u540c\u4e00\u6761\u94fe\u4e0a\uff08\u6682\u4e14\u53eb\u505a\u201c\u4e3b\u94fe\u201d\uff09\uff0c\u800c\u6211\u4eec\u6309\u7167\u987a\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u94fe\u4e0a\u7684\u6240\u6709\u76ee\u6807\u7ed3\u70b9\uff0c\u53ef\u4ee5\u505a\u5230\u4e0d\u91cd\u4e0d\u6f0f\u7684\u8986\u76d6\u6389\u6574\u4e2a\u94fe\u3002\n\n2 \u53f7\u7ed3\u70b9\u4e0d\u5728 1\u30013\u30015 \u8fd9 3 \u4e2a\u7ed3\u70b9\u7ec4\u6210\u7684\u94fe\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u8d70\u5230 3 \u7684\u65f6\u5019\u5fc5\u987b\u8981\u201c\u8f6c\u5f2f\u201d\u53bb\u8bbf\u95ee 2 \u53f7\u7ed3\u70b9\u3002\u8bbf\u95ee\u5b8c\u4e86\u4e4b\u540e\u8fd8\u8981\u518d\u201c\u56de\u5230\u201d\u4e3b\u94fe\u4e0a\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6211\u4eec\u4ece\u4e3b\u94fe\u5230 2 \u53f7\u7ed3\u70b9\u4e0a\u7684\u8def\u5f84\uff08\u6682\u4e14\u53eb\u505a\u201c\u652f\u94fe\u201d\uff09\u88ab\u91cd\u590d\u8ba1\u7b97\u4e86\u3002\n\n\u5206\u6790\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0c\u53ea\u8981\u4e0d\u662f\u4e3b\u94fe\u4e0a\u7684\u70b9\uff0c\u5176\u5230\u4e3b\u94fe\u7684\u8def\u5f84\u4e0a\u6240\u6709\u7684\u8fb9\u4e00\u5b9a\u4f1a\u88ab\u8ba1\u7b97\u4e24\u6b21\u3002\n\n\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\u5462\uff1f\u6211\u4e0d\u77e5\u9053\uff0c\u4f46\u662f\u65e2\u7136\u6240\u6709\u652f\u94fe\u8def\u5f84\u90fd\u88ab\u8ba1\u7b97\u4e24\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u8ba9\u4e3b\u94fe\u201c\u968f\u4e2a\u5927\u6d41\u201d\uff0c\u4e5f\u628a\u5b83\u8ba1\u7b97\u4e24\u6b21\u5462\uff1f\n\n\u7528\u8fd9\u4e2a\u601d\u8def\u91cd\u65b0\u624b\u73a9\u4e00\u4e0b\u6837\u4f8b\uff0c\u53d1\u73b0\u6b63\u597d\u6bcf\u6761\u8fb9\u90fd\u88ab\u8ba1\u7b97\u4e86\u4e24\u6b21\uff0c\u8fd9\u6837\u6211\u4eec\u8ba1\u7b97\u7b54\u6848\u7684\u65f6\u5019\u5c31\u5e94\u8be5\u7edf\u8ba1\u90a3\u4e9b\u8fb9\u6743\u5927\u4e8e\u7b49\u4e8e $2k$ \u7684\u8fb9\u3002\n\n\u7b49\u7b49\uff01\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u5b8c\u4e86\uff1f\u5982\u679c 1 \u53f7\u7684\u8981\u6c42\u662f\u8fde\u63a5 1\u30014\u30013\u30012\u30015 \u5462\uff1f\u53d1\u73b0\u5982\u679c\u6309\u987a\u5e8f\u5904\u7406\u7684\u8bdd\uff0c\u8fde\u63a5 3 4 \u7684\u8fd9\u6761\u8fb9\u7b97\u4e86 4 \u6b21\uff01\n\n\u8fd9\u79cd\u60c5\u51b5\u662f\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u6309\u987a\u5e8f\u8bbf\u95ee\u4e3b\u94fe\uff0c\u800c\u662f\u5148\u8bbf\u95ee\u4e86\u6df1\u5ea6\u8f83\u6df1\u7684 4 \uff0c\u7136\u540e\u56de\u8fc7\u5934\u6765\u53bb\u8bbf\u95ee\u6df1\u5ea6\u8f83\u6d45\u7684 3 \uff0c\u8fd9\u6837\u4e5f\u4f1a\u5bfc\u81f4\u91cd\u590d\u8986\u76d6\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6839\u636e dfs \u5e8f\u5bf9\u8fd9\u4e9b\u70b9\u6392\u5e8f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u6309\u7167\u987a\u5e8f\uff0c\u4e0d\u91cd\u4e0d\u6f0f\u7684\u8bbf\u95ee\u5b8c\u6574\u4e2a\u4e3b\u94fe\uff0c\u4ece\u800c\u4fdd\u8bc1\u7b97\u6cd5\u6b63\u786e\u3002\n\n\u5269\u4e0b\u7684\u4e1c\u897f\u5f88\u7b80\u5355\u4e86\uff1a\u5feb\u901f\u4fee\u6539\u6811\u4e0a\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u6743\uff0c\u8fd9\u4e2a\u6811\u94fe\u5256\u5206\u53ef\u4ee5\u505a\u5230\u3002\n\n## $\\text{Talk is cheap,show you the code.}$\n\n\u6811\u94fe\u5256\u5206\u672c\u6765\u662f\u7ef4\u62a4\u70b9\u6743\u7684\uff0c\u5982\u679c\u8ba9\u4ed6\u7ef4\u62a4\u8fb9\u6743\u7684\u8bdd\uff0c\u4e00\u4e2a\u5e38\u7528\u7684\u64cd\u4f5c\u662f\u628a\u8fb9\u6743\u4e0b\u653e\u5230\u4ed6\u7684\u513f\u5b50\u7ed3\u70b9\uff0c\u5f53\u4f5c\u70b9\u6743\u8ba1\u7b97\u3002\n\n\u8fd9\u91cc\u6211\u7528\u4e86\u53e6\u4e00\u4e2a\u5728 LCT \u4e2d\u5e38\u7528\u7684\u65b9\u6cd5\uff1a\u628a\u8fb9\u5efa\u6210\u4e00\u4e2a\u5e26\u6743\u7684\u70b9\uff0c\u8fd9\u6837\u76f4\u63a5\u8dd1\u6811\u94fe\u5256\u5206\u5c31\u884c\u3002\uff08\u4f46\u662f\u5e26\u4e86 2 \u500d\u7684\u65f6\u7a7a\u5e38\u6570\uff09\n\n```cpp\n//\u524d\u9762\u90fd\u662f\u4e9b\u5feb\u8bfb\u5565\u7684\uff0c\u4e3a\u4e86\u7b80\u6d01\u5c31\u7701\u7565\u4e86\uff08\u5176\u5b9e\u662f\u56e0\u4e3a\u592a\u957f\u88ab\u6253\u56de\u6765\u4e86\uff09\nconst int maxn=400005;\n\nint n,m,k,tot;\n\nstd::vector<int>v[maxn];\n\nint heavy[maxn],fa[maxn],id[maxn],cnt,dep[maxn],size[maxn],top[maxn];\n\nstruct segment_tree{\n  int l,r,value,tag;\n  segment_tree *ls,*rs;\n};\nstruct segment_tree *root;\n\ninline bool in_range(segment_tree *node,const int L,const int R){\n  return L<=node->l && node->r<=R;\n}\n\ninline bool outof_range(segment_tree *node,const int L,const int R){\n  return node->r<L || R<node->l;\n}\n\ninline void update(segment_tree *node){\n  node->value=node->ls->value+node->rs->value;\n}\n\ninline void make_tag(segment_tree *node,const int w){\n  node->value=node->value+(node->r-node->l+1)*w;\n  node->tag+=w;\n}\n\ninline void push_down(segment_tree *node){\n  if(node->tag){\n    make_tag(node->ls,node->tag);\n    make_tag(node->rs,node->tag);\n    node->tag=0;\n  }\n}\n\nsegment_tree* Build(const int L,const int R){\n  segment_tree *u=new segment_tree;\n  u->l=L,u->r=R;\n  u->tag=u->value=0;\n  if(L==R){\n    u->ls=u->rs=NULL;\n  }else{\n    int Mid=(R+L)>>1;\n    u->ls=Build(L,Mid);\n    u->rs=Build(Mid+1,R);\n    update(u);\n  }\n  return u;\n}\n\nint query(segment_tree *node,const int L,const int R){\n  if(in_range(node,L,R)) return node->value;\n  if(outof_range(node,L,R)) return 0;\n  push_down(node);\n  return query(node->ls,L,R)+query(node->rs,L,R);\n}\n\nvoid modify(segment_tree *node,const int L,const int R){\n  if(in_range(node,L,R)) make_tag(node,1);\n  else if(!outof_range(node,L,R)){\n    push_down(node);\n    modify(node->ls,L,R);\n    modify(node->rs,L,R);\n    update(node);\n  }\n}\n\nvoid path_modify(int x,int y){\n  while(top[x]!=top[y]){\n    if(dep[top[x]]<dep[top[y]]) swap(x,y);\n    modify(root,id[top[x]],id[x]);\n    x=fa[top[x]];\n  }\n  if(dep[x]>dep[y]) swap(x,y);\n  modify(root,id[x],id[y]);\n}\n\nvoid dfs1(const int x,const int f){\n  fa[x]=f;\n  dep[x]=dep[f]+1;\n  size[x]=1;\n  int M=-1;\n  for(int i=0;i<v[x].size();++i){\n    int y=v[x][i];\n    if(y==f) continue;\n    dfs1(y,x);\n    size[x]+=size[y];\n    if(size[y]>M)\n      M=size[y],heavy[x]=y;\n  }\n}\n\nvoid dfs2(const int x,const int topf){\n  id[x]=++cnt;\n  top[x]=topf;\n  if(!heavy[x]) return;\n  dfs2(heavy[x],topf);\n  for(int i=0;i<v[x].size();++i){\n    int y=v[x][i];\n    if(y==heavy[x] || y==fa[x]) continue;\n    dfs2(y,y);\n  }\n}//\u4e0a\u9762\u90a3\u4e00\u5806\u90fd\u662f\u6811\u94fe\u5256\u5206\n\nstd::pair<int,int>order[maxn];//pair\u7684\u7279\u6027\uff1a\u4ee5\u7b2c\u4e00\u7ef4\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\nint out[maxn];\n\nsigned main(){\n//\tfreopen(\"P6572_7.in\",\"r\",stdin);\n  read(n),read(m),read(k);\n  for(int i=1,a,b;i<n;++i){\n    read(a),read(b);\n\t\ttot++;\n    v[a].push_back(n+tot);\n    v[n+tot].push_back(a);//\u628a\u8fb9\u62c6\u6210\u70b9\uff0c\u5206\u914d\u4e00\u4e2a\u7f16\u53f7\n    v[n+tot].push_back(b);\n    v[b].push_back(n+tot);  \n  }\n  dfs1(1,0);\n\tdfs2(1,1); \n  root=Build(1,cnt);\n  while(m--){\n    int s;\n    read(s);\n    for(int i=1;i<=s;++i){\n      read(order[i].second);\n      order[i].first=id[order[i].second];\n    }\n    std::sort(order+1,order+s+1);//\u6392\u597d\u5e8f\u518d\u8def\u5f84\u4fee\u6539\n    for(int i=2;i<=s;++i)\n      path_modify(order[i-1].second,order[i].second);\n    path_modify(order[1].second,order[s].second);\n  }//\u76f4\u63a5\u8def\u5f84\u4fee\u6539\n  int ans=0;\n  for(int i=1;i<=tot;++i){\n    if(query(root,id[n+i],id[n+i])>=k*2) \n      ans++,out[ans]=i;//\u67e5\u8be2\u6bcf\u4e00\u6761\u8fb9\u7684\u8fb9\u6743\n  }\n  write(ans),putchar('\\n');\n  for(int i=1;i<=ans;++i)//\u8f93\u51fa\u7b54\u6848\n    write(out[i]),putchar(' ');\n  return 0;\n}\n```",
        "postTime": 1629719631,
        "uid": 307143,
        "name": "\u4e00\u94ed\u541b\u4e00",
        "ccfLevel": 6,
        "title": "P6572 [BalticOI 2017] Railway \u9898\u89e3"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P6572)\n\n\u8bbe\u67d0\u4e2a\u526f\u90e8\u957f\u8981\u8fde\u7684\u70b9\u96c6\u4e3a $h$\uff0c\u8981\u6c42\u8fd9\u4e2a\u526f\u90e8\u957f\u6240\u9009\u7684\u8fb9\u3002\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u5c06 $h$ \u4e2d\u6240\u6709\u5143\u7d20\u6309 $\\text{dfs}$ \u5e8f\u6392\u5217\uff0c\u7136\u540e\u4f9d\u6b21\u76f8\u8fde\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u76f8\u8fde\uff0c\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\u3002\n\n\u800c\u73af\u4e0a\u7684\u8fb9\u5c31\u662f\u526f\u90e8\u957f\u8981\u9009\u7684\uff0c\u5e76\u4e14\u90fd\u4f1a\u88ab\u91cd\u590d\u8ba1\u7b97\u4e24\u6b21\u3002\n\n\u4e3a\u4ec0\u4e48\u6309 $\\text{dfs}$ \u5e8f\u6392\u5e8f\uff1f\u56e0\u4e3a\u6309\u8fd9\u6837\u7684\u8bdd\uff0c\u5982\u679c\u5230\u67d0\u4e2a $h_i$ \u4e4b\u524d\u7684\u6240\u6709\u70b9\u90fd\u5728\u540c\u4e00\u6761\u94fe\u4e0a\uff0c\u800c $h_{i+1}$ \u5728\u53e6\u4e00\u6761\u94fe\u4e0a\uff0c\u90a3 $h_i$ \u4e00\u5b9a\u662f\u4e00\u6761\u94fe\u7684\u7ed3\u5c3e\uff0c$h_{i+1}$ \u4e00\u5b9a\u662f\u53e6\u4e00\u6761\u94fe\u7684\u5f00\u5934\u3002\n\n\u90a3\u4e48\u6240\u6709\u94fe\u5c31\u4f1a\u5934\u5c3e\u76f8\u8fde\uff0c\u5fc5\u5b9a\u5f62\u6210\u4e00\u4e2a\u6bcf\u6761\u8fb9\u90fd\u91cd\u590d\u4e24\u6b21\u7684\u73af\u3002\n\n\u7136\u540e\u7528\u6811\u4e0a\u5dee\u5206\u548c\u500d\u589e\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100005\nusing namespace std;\nint n,m,K,s,u,v,h[N],d[N];\nint head[N],nxt[N<<1],to[N<<1],cnt;\ninline void add(int x,int y){\n    to[++cnt]=y;\n    nxt[cnt]=head[x];\n    head[x]=cnt;\n}\nint fa[N][21],dep[N],id[N],tot;\nvoid dfs(int k){\n    for(int i(1);i<=20;++i)\n        fa[k][i]=fa[fa[k][i-1]][i-1];\n    id[k]=++tot;\n    for(int i(head[k]);i;i=nxt[i])\n        if(!id[to[i]]){\n            fa[to[i]][0]=k;\n            dep[to[i]]=dep[k]+1;\n            dfs(to[i]);\n        }\n}\ninline int LCA(int x,int y){\n    if(dep[x]<dep[y]) swap(x,y);\n    for(int i(20);~i;--i){\n        if(dep[fa[x][i]]>=dep[y])\n            x=fa[x][i];\n        if(x==y) return x;\n    }\n    for(int i(20);~i;--i)\n        if(fa[x][i]^fa[y][i]){\n            x=fa[x][i];\n            y=fa[y][i];\n        }\n    return fa[x][0];\n}\ninline bool cmp(const int&a,const int&b){\n    return id[a]<id[b];\n}\nvector <int> vec;\nvoid CCF(int k,int f){\n    for(int i(head[k]);i;i=nxt[i])\n        if(to[i]^f){\n            CCF(to[i],k);\n            d[k]+=d[to[i]];\n            if(d[to[i]]>=2*K) vec.push_back(i+1>>1);\n        }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&m,&K);\n    for(int i(1);i<n;++i){\n        scanf(\"%d%d\",&u,&v);\n        add(u,v);add(v,u);\n    }\n    dep[1]=1;dfs(1);\n    for(int i(1);i<=m;++i){\n        scanf(\"%d\",&s);\n        for(int j(1);j<=s;++j) scanf(\"%d\",&h[j]);\n        sort(h+1,h+1+s,cmp);\n        for(int j(1);j<s;++j){\n            ++d[h[j]];\n            ++d[h[j+1]];\n            d[LCA(h[j],h[j+1])]-=2;\n        }\t\n        ++d[h[1]];\n        ++d[h[s]];\n        d[LCA(h[1],h[s])]-=2;\n    }\n    CCF(1,0);printf(\"%d\\n\",vec.size());sort(vec.begin(),vec.end());\n    for(int i(0);i<vec.size();++i) printf(\"%d \",vec[i]);puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1663674448,
        "uid": 554574,
        "name": "gyyyyx",
        "ccfLevel": 0,
        "title": "[BalticOI 2017] Railway"
    },
    {
        "content": "### \u9898\u610f\n\n> \u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\u3002\u6709 $m$ \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u7ed9\u51fa\u4e00\u4e9b\u70b9\uff0c\u6807\u8bb0\u6070\u597d\u8fde\u901a\u8fd9\u4e9b\u70b9\u7684\u8fb9\u3002\u95ee\u6709\u591a\u5c11\u8fb9\u662f\u81f3\u5c11 $k$ \u4e2a\u4eba\u6807\u8bb0\u7684\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e9b\u70b9\u3002\n\n> $n\\le 10^5,k\\le m\\le 5\\times 10^4$\u3002\n\n### \u9898\u89e3\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u5206\u522b\u5efa\u51fa[\u865a\u6811](https://oi-wiki.org/graph/virtual-tree/)\uff0c\u7136\u540e\u76f8\u5f53\u4e8e\u5bf9\u6240\u6709\u865a\u6811\u4e0a\u7684\u8fb9 $(u,v)$\uff0c\u628a\u539f\u6811\u4e0a $(u,v)$ \u4e4b\u95f4\u7684\u8def\u5f84\u4e2d\u6240\u6709\u8fb9\u6dfb\u52a0\u4e00\u5c42\u6807\u8bb0\u3002\n\n\u7136\u540e\u626b\u4e00\u904d\u6240\u6709\u8fb9\u7edf\u8ba1\u6807\u8bb0\u6b21\u6570\u5373\u53ef\u3002\u5bf9\u4e8e\u79bb\u7ebf\u7684\u8def\u5f84\u52a0\u6cd5\u53ef\u4ee5\u4f7f\u7528\u6811\u4e0a\u5dee\u5206\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u5982\u679c\u4f7f\u7528 $O(1)$ \u6c42 LCA\u53ef\u4ee5\u505a\u5230 $O(n)$\u3002\n\n### \u5b9e\u73b0\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k;\nvector<int> edge[100005];\nint ex[100005],ey[100005];\nint dep[100005],fa[100005][20];\nint st[100005],tp;\nint dfn[100005],cnt;\nint a[100005];\nint val[100005];\nbool cmp(int x,int y){\n\treturn dfn[x]<dfn[y];\n}\nvoid dfs(int x,int f){\n\tdfn[x]=++cnt;\n\tfa[x][0]=f;dep[x]=dep[f]+1;\n\tfor(int y:edge[x])if(y!=f)dfs(y,x);\n}\nint LCA(int x,int y){\n\tint k=16;\n\tif(dep[x]<dep[y])swap(x,y);\n\twhile(dep[x]>dep[y]){\n\t\tif(dep[fa[x][k]]>=dep[y])x=fa[x][k];\n\t\tk--;\n\t}\n\tif(x==y)return x;\n\tk=16;\n\twhile(k>=0){\n\t\tif(fa[x][k]!=fa[y][k])x=fa[x][k],y=fa[y][k];\n\t\tk--;\n\t}\n\treturn fa[x][0];\n}\nvoid addedge(int x,int y){\n\tval[x]++,val[y]--;\n}\nvoid dfs1(int x,int f){\n\tfor(int y:edge[x])if(y!=f){\n\t\tdfs1(y,x);\n\t\tval[x]+=val[y];\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tedge[x].push_back(y);\n\t\tedge[y].push_back(x);\n\t\tex[i]=x,ey[i]=y;\n\t}\n\tdfs(1,0);\n\tfor(int i=1;i<n;i++)if(dep[ex[i]]>dep[ey[i]])swap(ex[i],ey[i]);\n\t// \u8ba9 ey \u8868\u793a\u6df1\u5ea6\u8f83\u5927\u7684\u7aef\u70b9\uff0c\u65b9\u4fbf\u7edf\u8ba1\n\tfor(int j=1;j<=16;j++)for(int i=1;i<=n;i++)fa[i][j]=fa[fa[i][j-1]][j-1];\n\twhile(m--){\n\t\tint s;scanf(\"%d\",&s);\n\t\tfor(int i=1;i<=s;i++)scanf(\"%d\",&a[i]);\n\t\tsort(a+1,a+s+1,cmp);\n\t\tst[tp=1]=a[1];for(int i=2;i<=s;i++)st[1]=LCA(st[1],a[i]);\n\t\tfor(int i=(a[1]==st[1]?2:1);i<=s;i++){\n\t\t\tint lca=LCA(a[i],st[tp]);\n\t\t\tif(lca==st[tp]){\n\t\t\t\tif(a[i]!=st[tp])st[++tp]=a[i];\n\t\t\t}else{\n\t\t\t\twhile(tp>1&&dep[st[tp-1]]>dep[lca])addedge(st[tp],st[tp-1]),tp--;\n\t\t\t\taddedge(st[tp],lca);tp--;\n\t\t\t\tif(lca!=st[tp])st[++tp]=lca;\n\t\t\t\tif(a[i]!=st[tp])st[++tp]=a[i];\n\t\t\t}\n\t\t}\n\t\twhile(tp>1)addedge(st[tp],st[tp-1]),tp--;\n\t}\n\tdfs1(1,0);\n\tint ans=0;\n\tfor(int i=2;i<=n;i++)if(val[i]>=k)ans++;\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=1;i<n;i++)if(val[ey[i]]>=k)printf(\"%d \",i);puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1655554867,
        "uid": 233462,
        "name": "Umbrella_Leaf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3P6572 [BalticOI 2017] Railway"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P6572)\n\n**solution**\n\n\u5927\u90e8\u5206\u9898\u89e3\u90fd\u7528\u7684\u865a\u6811\uff0c\u53ef\u662f\u672c~~\u849f\u84bb~~ \u4e0d\u4f1a\u7528\u865a\u6811\uff0c\u53ea\u597d\u7528\u5dee\u5206\u6c34\u8fc7\u53bb\u4e86\u3002\n\n**subtask4:**  \n\n$s_i = 2$ \n\n\u6700\u57fa\u7840\u7684\u6811\u7684\u5dee\u5206\u3002\n\n\u6bcf\u4e2a\u90e8\u957f\u6240\u9009\u7684\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u5728\u6811\u4e0a\u6784\u6210\u4e00\u6761\u8def\u5f84\uff0c\u5bf9\u6bcf\u6761\u8def\u5f84\u4e0a\u7684\u8fb9\u90fd $+1$\uff0c\u6700\u540e\u627e\u51fa\u7ecf\u8fc7\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e $k$ \u7684\u8fb9\u5c31\u597d\u4e86\u3002\n\n\u8def\u5f84\u4fee\u6539\u7528\u5dee\u5206\u5373\u53ef\u3002\n\n[code](https://www.luogu.com.cn/paste/d54c5nqz)\n\n$s_i > 2$ \n\n\u8fd8\u662f\u8003\u8651\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u3002\n\n\u4e0e\u4e0a\u9762\u4e0d\u540c\u7684\u662f\u8fd9\u91cc\u8981\u60f3\u628a\u4e00\u4e2a\u90e8\u957f\u6240\u9009\u7684\u70b9\u90fd\u8fde\u8d77\u6765\uff0c\u6240\u9700\u8981\u7684\u8fb9\u4e0d\u518d\u662f\u4e00\u6761\u8def\u5f84\u4e86\uff0c\u8003\u8651\u600e\u4e48\u5bf9\u8fd9\u4e9b\u8fb9\u8fdb\u884c\u4fee\u6539\u3002\n\n\u6765\u770b\u6837\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/y7dvncz6.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5bf9\u4e8e\u4e00\u53f7\u90e8\u957f\u7684\u70b9\uff1a1 3 2 5 \n\n\u76ee\u7684\uff1a\u5bf9\u7ea2\u8272\u7684\u8fb9\u90fd +1\u3002\n\n\u4e00\u4e2a\u795e\u5947\u7684\u64cd\u4f5c\uff1a\n\n**\u5148\u5bf9\u6240\u6709\u70b9\u6309\u7167 dfs \u5e8f\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u628a\u6bcf\u76f8\u90bb\u4e24\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u8fb9 +1\uff0c\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u8fb9\u4e5f\u8981 +1**\n\n\u6a21\u4e00\u4e0b\u6837\u4f8b\uff1a\n\n\u6309\u7167 $dfs$ \u5e8f\u6392\u597d\u5e8f\u5c31\u662f 1 3 5 2\n\n\u5bf9 $1\\sim3$ \u8def\u5f84 $+1$\uff0c$3\\sim 5$ \u8def\u5f84 $+1$\uff0c$5\\sim2$ \u8def\u5f84 $+1$\uff0c$2 \\sim 1$ \u8def\u5f84 $+1$\u3002\n\n\u52a0\u5b8c\u4e4b\u540e\u4f1a\u53d1\u73b0\u6bcf\u6761\u7ea2\u8272\u7684\u8fb9\u90fd\u88ab\u52a0\u4e86\u4e24\u6b21\u3002\n\n\u6bcf\u4e2a\u90e8\u957f\u90fd\u64cd\u4f5c\u5b8c\u4e4b\u540e\uff0c\u628a\u6bcf\u6761\u8fb9\u9664\u4ee5 $2$\uff0c\u7136\u540e\u627e\u5927\u4e8e\u7b49\u4e8e $k$ \u7684\u8fb9\u5c31\u597d\u4e86\u3002\n\n**code**\n\n```c++\n/*\nwork by:Ariel_\n*/\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n#define ll long long\n#define rg register\nusing namespace std;\nconst int MAXN = 1e5 + 5;\nint read(){\n    int x = 0,f = 1; char c = getchar();\n    while(c < '0'||c > '9') {if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') {x = x*10 + c - '0'; c = getchar();}\n    return x*f;\n}\nint n, m, k, a[MAXN], vis[MAXN], ans, dfn[MAXN], tot, cnt;\nstruct Question{\n   int x, id;\n   bool operator < (const Question &rhs)const{\n       return id < rhs.id; \n   } \n}q[MAXN];\nstruct edge{int v, nxt, val, id;}e[MAXN << 1];\nint E = 1, head[MAXN];\nvoid add_edge(int u, int v, int id) {\n   e[++E] = (edge) {v, head[u], 0, id};\n   head[u] = E;\n}\nnamespace LCA{\n   int dep[MAXN], son[MAXN], top[MAXN], siz[MAXN], fa[MAXN];\n   void dfs(int x, int f) {\n   \t  dep[x] = dep[f] + 1, siz[x] = 1, fa[x] = f, dfn[x] = ++tot;\n   \t  for (int i = head[x]; i; i = e[i].nxt) {\n   \t  \t    int v = e[i].v;\n   \t  \t    if (v == f) continue;\n   \t  \t    dfs(v, x);\n   \t  \t    siz[x] += siz[v];\n   \t  \t    if (siz[son[x]] < siz[v]) son[x] = v;\n\t\t}\n   }\n   void dfs2(int x, int tp) {\n   \t  top[x] = tp;\n   \t  if(son[x]) dfs2(son[x], tp);\n   \t  for (int i = head[x]; i; i = e[i].nxt) {\n   \t       int v = e[i].v;\n\t\t   if (v == son[x] || v == fa[x]) continue;\n\t\t   dfs2(v, v);\t \n\t   }\n   }\n   int lca(int x, int y) {\n   \t  while (top[x] != top[y]) {\n   \t      if (dep[top[x]] < dep[top[y]]) swap(x, y);\n   \t      x = fa[top[x]];\n\t   }\n\t   if (dep[x] > dep[y]) swap(x, y);\n\t   return x;\n   }\n}\nusing namespace LCA;\nvoid work(int u) {\n   for (int i = head[u]; i; i = e[i].nxt) {\n   \t    int v = e[i].v;\n   \t    if (v == fa[u]) continue;\n\t\twork(v); \n   \t    e[i].val += a[v], e[i ^ 1].val += a[v];\n   \t    a[u] += a[v];\n   }\n}\nint main(){\n   memset(e, 0, sizeof e);\n   n = read(), m = read(), k = read();\n   for (int i = 1, u, v; i < n; i++) {\n   \t  u = read(), v = read();\n   \t  add_edge(u, v, i), add_edge(v, u, i);\n   }\n   dfs(1, 0), dfs2(1, 1);\n   for (int i = 1; i <= m; i++) {\n   \t  int s = read();cnt = 0;\n\t  for(int j = 1; j <= s; j++) q[++cnt].x = read();\n\t  for (int j = 1; j <= cnt; j++) q[j].id = dfn[q[j].x];\n\t  sort(q + 1, q + cnt + 1);\n\t  int last = q[1].x;\n      for (int j = 2; j <= cnt; j++) {\n   \t     a[last]++, a[q[j].x]++;\n   \t     a[lca(last, q[j].x)] -= 2;\n   \t     last = q[j].x;\n       }\n      a[q[cnt].x]++, a[q[1].x]++;\n      a[lca(q[cnt].x, q[1].x)] -= 2;\n   }\n   work(1);\n   for (int i = 1; i <= E; i++) {\n   \t   if((e[i].val / 2) >= k) vis[e[i].id] = 1;\t\n   }\n   for (int i = 1; i < n; i++)if (vis[i]) ans++; \n   cout<<ans<<\"\\n\";\n   for (int i = 1; i < n; i++) if(vis[i]) printf(\"%d \",  i);\n   puts(\"\");\n   return 0;\n}\n```\n\n",
        "postTime": 1629202273,
        "uid": 285235,
        "name": "Dita",
        "ccfLevel": 0,
        "title": "P6572 [BalticOI 2017] Railway"
    },
    {
        "content": "\u8003\u8651\u53ea\u6709\u4e00\u4e2a\u526f\u90e8\u957f\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece lca \u5f00\u59cb\u5411\u4e0b dfs \uff0c\u628a\u6240\u6709\u7ecf\u8fc7\u7684\u8fb9\u7684\u6b21\u6570 +1 \uff0c\u76f4\u5230\u5b50\u6811\u91cc\u6ca1\u6709\u9700\u8981\u88ab\u76f8\u8fde \u3002\n\n\n\u591a\u4e2a\u526f\u90e8\u957f\u7684\u8bdd\uff0c\u4e0a\u9762\u7684\u65b9\u6cd5\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u6211\u4eec\u5efa\u865a\u6811\uff0c\u66f4\u65b0\u8fb9\u7684\u6b21\u6570\u6211\u4eec\u7528\u6811\u4e0a\u5dee\u5206\uff0c\u6700\u540e\u7edf\u8ba1\u4e00\u904d\u5c31\u5b8c\u4e8b\u4e86 \u3002\n\n\u7ebf\u6027\u590d\u6742\u5ea6\uff0c\u968f\u4fbf\u8fc7 \u3002\n\nAC\u60c5\u51b5 \uff1a[https://www.luogu.com.cn/record/48258894](https://www.luogu.com.cn/record/48258894)\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1000010;\nint n,m,k;\nint Head[N],Next[N<<1],V[N<<1],cnt;\nvoid add(int u,int v){V[cnt]=v;Next[cnt]=Head[u];Head[u]=cnt++;}\nint h[N],S;\nint ou[N<<1],top2,dfn[N],depth[N];\nvoid dfs(int u,int fa){\n\tdepth[u]=depth[fa]+1;ou[++top2]=u;dfn[u]=top2;\n\tfor(int i=Head[u];i!=-1;i=Next[i])if(V[i]!=fa)dfs(V[i],u),ou[++top2]=u;\n}\nint st[N][20],Log[N];\nint calc(int x,int y){return depth[ou[x]]>depth[ou[y]]?y:x;}\nvoid ST(){\n\tLog[0]=-1;\n\tfor(int i=1;i<=top2;i++)Log[i]=Log[i>>1]+1;\n\tfor(int i=1;i<=top2;i++)st[i][0]=i;\n\tfor(int j=1;(1<<j)<=top2;j++)for(int i=1;i+(1<<j)-1<=top2;i++)st[i][j]=calc(st[i][j-1],st[i+(1<<(j-1))][j-1]);\n}\nint LCA(int x,int y){\n\tint fx=dfn[x],fy=dfn[y];\n\tif(fx>fy)swap(fx,fy);\n\tint k=Log[fy-fx+1];\n\treturn ou[calc(st[fx][k],st[fy-(1<<k)+1][k])];\n}\nstruct VirtualTree{\n\tint Head[N],Next[N<<1],V[N<<1],cnt;\n\tvoid add(int u,int v){V[cnt]=v;Next[cnt]=Head[u];Head[u]=cnt++;}\n}g;\nbool cmp(int x,int y){return dfn[x]<dfn[y];}\nint sta[N],top,h1;\nvoid build(){\n\th1=0;sort(h+1,h+S+1,cmp);\n\tsta[top=1]=1,g.cnt=0,g.Head[1]=-1;\n\tfor(int i=1,l;i<=S;i++){\n\t\tif(h[i]!=1){\n\t\t\tl=LCA(sta[top],h[i]);\n\t\t\tif(l==1&&sta[top]!=1)h1=1;\n\t\t\tif(l!=sta[top]){\n\t\t\t\twhile(dfn[sta[top-1]]>dfn[l])g.add(sta[top-1],sta[top]),top--;\n\t\t\t\tif(dfn[l]>dfn[sta[top-1]])g.Head[l]=-1,g.add(l,sta[top]),sta[top]=l;\n\t\t\t\telse g.add(l,sta[top--]);\n\t\t\t}\n\t\t\tg.Head[h[i]]=-1;sta[++top]=h[i];\n\t\t}\n\t\telse h1=1;\n\t}\n\tfor(int i=1;i<top;i++)g.add(sta[i],sta[i+1]);\n}\nint sum[N];\nvoid doit(int u,int fa){\n\tint kk=0;\n\tfor(int i=g.Head[u];i!=-1;i=g.Next[i]){\n\t\tif(g.V[i]!=fa){\n\t\t\tdoit(g.V[i],u);\n\t\t\tkk++;\n\t\t}\n\t}\n\tsum[u]+=1-kk;\n}\nint ans[N],topans;\nvoid dfs2(int u,int fa){\n\tfor(int i=Head[u];i!=-1;i=Next[i]){\n\t\tif(V[i]!=fa){\n\t\t\tdfs2(V[i],u);\n\t\t\tif(sum[V[i]]>=k)ans[++topans]=i/2+1;\n\t\t\tsum[u]+=sum[V[i]];\n\t\t}\n\t}\n}\nint main(){\n\tmemset(Head,-1,sizeof(Head));\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n-1;i++){\n\t\tint u,v;scanf(\"%d%d\",&u,&v);\n\t\tadd(u,v);add(v,u);\n\t}\n\tdfs(1,0);ST();\n\tfor(int o=1;o<=m;o++){\n\t\tscanf(\"%d\",&S);\n\t\tfor(int i=1;i<=S;i++)scanf(\"%d\",&h[i]);\n\t\tbuild();\n\t\tif(h1)doit(1,0);\n\t\telse for(int i=g.Head[1];i!=-1;i=g.Next[i])sum[g.V[i]]--,doit(g.V[i],1);\n\t}\n\tdfs2(1,0);\n\tprintf(\"%d\\n\",topans);\n\tsort(ans+1,ans+topans+1);\n\tfor(int i=1;i<=topans;i++)printf(\"%d \",ans[i]);\n\tprintf(\"\\n\");\n}\n```\n",
        "postTime": 1616365482,
        "uid": 104319,
        "name": "Why_not_use_longlong",
        "ccfLevel": 0,
        "title": "P6572 [BalticOI 2017] Railway \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u9009\u53d6\u4e00\u4e9b\u70b9\uff0c\u5e76\u5c06\u6811\u4e0a\u8fde\u63a5\u8fd9\u4e9b\u70b9\u7684\u8fb9\u6807\u8bb0\u4e00\u6b21\u3002\n\n\u6c42\u64cd\u4f5c\u5b8c\u540e\u6807\u8bb0\u6b21\u6570\u4e0d\u5c11\u4e8e $k$ \u7684\u8fb9\u6709\u54ea\u4e9b\u3002\n\n### \u5206\u6790\uff1a\n\n\u56de\u987e\u4e00\u4e0b\u865a\u6811\u7684\u6784\u5efa\u8fc7\u7a0b\uff1a\u820d\u5f03\u65e0\u7528\u7684\u90e8\u5206\uff0c\u5c06\u6839\u3001\u6240\u6709\u70b9\u3001\u4e24\u4e24\u70b9\u7684 lca \u52a0\u5165\u865a\u6811\u3002\n\n\u53d1\u73b0\u8fd9\u9053\u9898\u4e2d\u9009\u70b9\u540e\u9700\u8981\u6807\u8bb0\u7684\u8fb9\u662f\u539f\u6811\u4e2d\u4fdd\u7559\u5fc5\u8981\u4fe1\u606f\uff08\u8282\u70b9\u7684\u7236\u5b50\u5173\u7cfb\uff09\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u865a\u6811\u4e2d\u7684**\u90e8\u5206**\u8fb9\u3002\n\n\u4e3a\u4ec0\u4e48\u662f**\u90e8\u5206**\u5462\uff0c\u56e0\u4e3a\u6839\u8282\u70b9\uff08\u901a\u5e38\u662f 1 \u53f7\u8282\u70b9\uff09\u662f\u9ed8\u8ba4\u52a0\u5165\u865a\u6811\u7684\uff0c\u4f46\u6709\u53ef\u80fd\u5e76\u4e0d\u4f1a\u9700\u8981\u6807\u8bb0\u5176\u4ed6\u8282\u70b9\u5230 1 \u7684\u8fb9\u3002\n\n\u9700\u8981\u7edf\u8ba1\u5176\u4ed6\u8282\u70b9\u5230 1 \u7684\u8fb9\u7684\u60c5\u51b5\u5f53\u4e14\u4ec5\u5f53 1 \u53f7\u8282\u70b9\u662f\u67d0\u4e24\u4e2a\u8282\u70b9\u7684 lca\u3002\n\n\u5982\u679c 1 \u53f7\u8282\u70b9\u672c\u6765\u5c31\u88ab\u9009\u4e2d\uff0c\u6216\u8005\u5b83\u5728\u865a\u6811\u4e0a\u81f3\u5c11\u6709 2 \u4e2a\u513f\u5b50\uff08\u5373\u5b83\u4f5c\u4e3a\u4e86\u67d0\u4e24\u70b9\u7684 lca \u88ab\u9009\u4e2d\uff09\uff0c\u90a3\u4e48\u9700\u8981\u6807\u8bb0 1 \u53f7\u5230\u513f\u5b50\u4e4b\u95f4\u7684\u8def\u5f84\u3002\n\n\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u6807\u8bb0\u5176\u5b83\u6240\u6709\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\uff0c\uff08\u8fb9\u7684\u6807\u8bb0\u503c\u4e0b\u653e\u5230\u70b9\uff09\u6811\u4e0a\u5dee\u5206\u5373\u53ef\u3002\n\n### Code:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\ntemplate <class T> inline void read(T &x)\n{\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x * 10 + (ch - 48);\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define inf 0x3f3f3f3f\n#define N 100005\nstruct Graph\n{\n\tint first[N], Next[N << 1], to[N << 1], tot = 1;\n\tinline void add(int x, int y)\n\t{\n//\t\tprintf(\"!%d -> %d\\n!\", x, y);\n\t\tNext[++tot] = first[x];\n\t\tfirst[x] = tot;\n\t\tto[tot] = y;\n\t\treturn;\n\t}\n};\nGraph Ori, Vir;\nint dfn[N], sign, dep[N], fa[N][21];\nvoid dfs(int u, int pre)\n{\n\tdfn[u] = ++sign;\n\tfor(int i = Ori.first[u]; i; i = Ori.Next[i])\n\t{\n\t\tint v = Ori.to[i];\n\t\tif(v == pre)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tdep[v] = dep[u] + 1;\n\t\tfa[v][0] = u;\n\t\tdfs(v, u);\n\t}\n\treturn;\n}\nint n, m, K;\ninline void init()\n{\n\tdep[1] = 1;\n\tdfs(1, 0);\n\tfor(int j = 1; j <= 20; j++)\n\t{\n\t\tfor(int i = 1; i <= n; i++)\n\t\t{\n\t\t\tfa[i][j] = fa[fa[i][j - 1]][j - 1];\n\t\t}\n\t}\n\treturn;\n}\nint lca(int x, int y)\n{\n\tif(dep[x] > dep[y])\n\t{\n\t\tswap(x, y);\n\t}\n\tfor(int i = 20; i >= 0; i--)\n\t{\n\t\tif(dep[fa[y][i]] >= dep[x])\n\t\t{\n\t\t\ty = fa[y][i];\n\t\t}\n\t}\n\tif(x == y)\n\t{\n\t\treturn x;\n\t}\n\tfor(int i = 20; i >= 0; i--)\n\t{\n\t\tif(fa[x][i] != fa[y][i])\n\t\t{\n\t\t\tx = fa[x][i], y = fa[y][i];\n\t\t}\n\t}\n\treturn fa[x][0];\n}\nint st[N], top;\nint a[N];\nvoid build(int siz)\n{\n\tst[top = 1] = 1;\n\tfor(int i = 1; i <= siz; i++)\n\t{\n\t\tint now = a[i], lc = lca(st[top], a[i]);\n\t\twhile(1)\n\t\t{\n\t\t\tif(dep[lc] < dep[st[top - 1]])\n\t\t\t{\n\t\t\t\tVir.add(st[top - 1], st[top]);\n\t\t\t\ttop--;\n\t\t\t}\n\t\t\telse if(dep[lc] < dep[st[top]])\n\t\t\t{\n\t\t\t\tVir.add(lc, st[top]);\n\t\t\t\ttop--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(st[top] != lc)\n\t\t{\n\t\t\tst[++top] = lc;\n\t\t}\n\t\tif(st[top] != now)\n\t\t{\n\t\t\tst[++top] = now;\n\t\t}\n\t}\n\twhile(--top)\n\t{\n\t\tVir.add(st[top], st[top + 1]);\n\t}\n\treturn;\n}\nint ans[N];\nint flag;\nvoid solve(int u)\n{\n\tfor(int i = Vir.first[u]; i; i = Vir.Next[i])\n\t{\n\t\tint v = Vir.to[i];\n\t\tsolve(v);\n\t\tif(u != 1 || (u == 1 && flag))\n\t\t{\n\t\t\tans[v]++, ans[u]--;\n\t\t}\n\t}\n\tVir.first[u] = 0;\n\treturn;\n}\nint prt[N], cnt;\nvoid calc(int u, int pre)\n{\n\tfor(int i = Ori.first[u]; i; i = Ori.Next[i])\n\t{\n\t\tint v = Ori.to[i];\n\t\tif(v == pre)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tcalc(v, u);\n\t\tif(ans[v] >= K)\n\t\t{\n\t\t\tprt[++cnt] = i >> 1;\n\t\t}\n\t\tans[u] += ans[v];\n\t}\n\treturn;\n}\nbool cmp(const int &a, const int &b)\n{\n\treturn dfn[a] < dfn[b];\n}\nsigned main()\n{\n\tread(n), read(m), read(K);\n\tint u, v;\n\tfor(int i = 1; i < n; i++)\n\t{\n\t\tread(u), read(v);\n\t\tOri.add(u, v), Ori.add(v, u);\n\t}\n\tinit();\n\tint siz;\n\twhile(m--)\n\t{\n\t\tread(siz);\n\t\tfor(int i = 1; i <= siz; i++)\n\t\t{\n\t\t\tread(a[i]);\n\t\t}\n\t\tsort(a + 1, a + siz + 1, cmp);\n\t\tbuild(siz);\n\t\tflag = (a[1] == 1) || Vir.Next[Vir.first[1]];\n\t\tsolve(1);\n\t}\n\tcalc(1, 0);\n\tsort(prt + 1, prt + cnt + 1);\n\tprintf(\"%d\\n\", cnt);\n\tfor(int i = 1; i <= cnt; i++)\n\t{\n\t\tprintf(\"%d \", prt[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1640877664,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "P6572 [BalticOI 2017] Railway \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6572)\n\nP6572 \u8fd9\u9898\u5e94\u8be5\u4e0d\u96be\u60f3\u5230\uff0c\u53ef\u4ee5\u5148\u5efa\u6811\uff0c\u518d\u5c06\u6bcf\u4e2a\u526f\u5c40\u957f\u9009\u5b9a\u7684\u57ce\u5e02  lca\uff0c\u901a\u8fc7 dfs \u5dee\u5206\u505a\u51fa\u6765~~\n\n\u5047\u8bbe\u526f\u5c40\u957f\u9009\u5b9a\u4e86 $k$ \u4e2a\u57ce\u5e02\uff0c\u6211\u4eec\u5c31\u5faa\u73af\u904d\u5386\u8fd9\u4e9b\u57ce\u5e02\uff0c\u5f53  $i<k$ \uff0c\u5e94\u8be5\u53d6\u7f16\u53f7\u4e3a $i$ \u548c $i+1$ \u7684\u6765 lca\uff0c\u5982\u679c $i=k$ \uff0c\u5c31\u53d6\u7f16\u53f7\u4e3a $k$ \u548c $1$ \u7684\u6765\u6c42\uff0c\u6bcf\u4e2a\u57ce\u5e02\u6c42\u4e86\u4e24\u6b21\uff0c\u6700\u540e\u5dee\u5206\u662f\u5224\u5b9a\u662f\u5426\u5927\u4e8e\u7b49\u4e8e $k/2$ \u5c31\u662f\u4e86\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u770b\u4f3c\u6ca1\u95ee\u9898\uff0c\u4f46\u6709\u6f0f\u6d1e\u2014\u2014\u6709\u53ef\u80fd\u5728\u4e00\u4e2a\u526f\u5c40\u957f\u9009\u5b9a\u7684\u57ce\u5e02\u505a\u5dee\u53ef\u4ee5\u770b\u4f5c\uff0c\u5b83\u52a0\u4e86\u51e0\u6761\u8fb9\uff0c\u6c42\u4e86\u4e24\u6b21\uff0c\u540e\u6765\u5176\u4ed6\u4e24\u4e2a\u57ce\u5e02\u505a\u5dee\uff0c\u53c8\u52a0\u4e86\u5176\u4e2d\u4e00\u6761\u4e00\u6b21\uff0c\u52a0\u8d77\u6765\u5c31\u6c42\u4e86\u56db\u6b21\u4e86\u2026\u2026\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u518d\u628a\u9009\u5b9a\u7684 $k$ \u4e2a\u901a\u8fc7 dfs \u5e8f\u6392\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nlong long n, m, k, t1, t2, fa[100010][30], sx[100010], dep[100010], tsx, sk, tk[100010], a[100010], gh[100010], ans;\nstruct node{\n\tlong long ph, bh;\n};\nvector<node> p[100010];\nvoid js(long long h, long long g) {//\u5efa\u6811\n\tfa[h][0] = g;//\u7236\u4eb2\u8282\u70b9\n\tdep[h] = dep[g] + 1;//\u6df1\u5ea6\n\tsx[h] = ++tsx;//dfs \u5e8f\n\tfor(int i = 1; i <= 20; i++) fa[h][i] = fa[fa[h][i - 1]][i - 1];//\u8fd9\u662f\u500d\u589e\uff0clca \u4f1a\u7528\u5230 \n\tfor(int i = 0; i < p[h].size(); i++)\n\t\tif(p[h][i].ph != g)\n\t\t\tjs(p[h][i].ph, h);\n}\nbool cmp(long long x, long long y) {\n\treturn sx[x] < sx[y];\n}\nlong long lca(long long x, long long y) {\n\tif(dep[x] < dep[y]) swap(x, y);\n\tfor(int i = 20; i >= 0; i--)\n\t\tif(dep[fa[x][i]] >= dep[y])\n\t\t\tx = fa[x][i];\n\tif(x == y) return x;//\u5982\u679c\u5df2\u7ecf\u7b49\u4e8e\u5c31\u76f4\u63a5\u8fd4\u56de\n\tfor(int i = 20; i >= 0; i--)\n\t\tif(fa[x][i] != fa[y][i]) {//\u4e0d\u7b49\u4e8e\u5c31\u8df3\n\t\t\tx = fa[x][i];\n\t\t\ty = fa[y][i];\n\t\t}\n\treturn fa[x][0];//\u6700\u540e\u8fd4\u56de\u5b83\u4eec\u7684\u7236\u4eb2\u8282\u70b9\n}\nvoid dfs(long long h, long long g) {\n\tfor(int i = 0; i < p[h].size(); i++)\n\t\tif(p[h][i].ph != g){\n\t\t\tdfs(p[h][i].ph, h);\n\t\t\tif(a[p[h][i].ph] >= k * 2) {//\u5982\u679c\u5927\u4e8e k*2 \uff0c\u8fd9\u5c31\u662f\u8981\u6c42\u7684\u8fb9\u4e4b\u4e00\n\t\t\t\tans++;\n\t\t\t\tgh[p[h][i].bh] = 1;\n\t\t\t}\n\t\t\ta[h] += a[p[h][i].ph];\n\t\t}\n}\nint main() {\n\tcin >> n >> m >> k;\n\tfor(int i = 1; i < n; i++) {\n\t\tcin >> t1 >> t2;\n\t\tp[t1].push_back({t2, i});\n\t\tp[t2].push_back({t1, i});\n\t}\n\tjs(1, 0);\n\tfor(int i = 1; i <= m; i++) {\n\t\tcin >> sk;\n\t\tfor(int i = 1; i <= sk; i++) cin >> tk[i];\n\t\tsort(tk + 1, tk + sk + 1, cmp);//\u6309\u7167 dfs \u5e8f\u6392\u5e8f\n\t\tfor(int i = 1; i <= sk; i++) {\n\t\t\tlong long fu = lca(tk[i], tk[i % sk + 1]);\n\t\t\ta[tk[i]]++;\n\t\t\ta[tk[i % sk + 1]]++;\n\t\t\ta[fu] -= 2;//\u56e0\u4e3a\u662f\u6c42\u8fb9\u800c\u4e0d\u662f\u70b9\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\u505a\u5dee\u5e94\u8be5\u662f -2\n\t\t}\n\t}\n\tdfs(1, 0);\n\tcout << ans << endl;\n\tfor(int i = 1; i < n; i++)\n\t\tif(gh[i])\n\t\t\tcout << i << \" \";\n\treturn 0;\n}\n```\n",
        "postTime": 1640582695,
        "uid": 312795,
        "name": "Meika_Mikoto",
        "ccfLevel": 0,
        "title": "P6572 \u7684\u8d85\u7b80\u5199\u6cd5"
    }
]