[
    {
        "content": "\u7279\u522b\u795e\u5947\u7684\u4e00\u4e2a\u601d\u8def\u3002\u3002\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u8fd9\u6837\u7684\u5f0f\u5b50:\n\n$$(x+1)^t$$\n\n\u6211\u4eec\u5148\u5bf9\u5b83\u8fdb\u884c\u4e8c\u9879\u5f0f\u5c55\u5f00\uff0c\u5f97:\n\n$$(1+x)^t=\\sum_{i=0}^\\infty \\binom{t}{i}x^i$$\n\n\u6211\u4eec\u5c06\u7ec4\u5408\u6570\u62c6\u5f00\uff0c\u6709:\n\n$$(1+x)^t=\\sum_{i=0}^\\infty \\frac{x^it^{\\underline{i}}}{i!}$$\n\n\u8fd9\u91cc\u51fa\u73b0\u4e86\u4e00\u4e2a\u4e0b\u964d\u5e42\uff0c\u6211\u4eec\u8fd0\u7528\u7b49\u5f0f\u5c55\u5f00\u6210\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u5f62\u5f0f:\n\n\n$$(1+x)^t=\\sum_{i=0}^\\infty\\frac{x^i}{i!}\\sum_{j=0}^i(-1)^{i-j}\\begin{bmatrix}i\\\\j\\end{bmatrix}t^j$$\n\n\u79fb\u9879\u6574\u7406\u5f97:\n\n$$(1+x)^t=\\sum_{i=0}^\\infty t^i\\sum_{j=i}^\\infty\\frac{(-1)^{j-i}\\begin{bmatrix}j\\\\i\\end{bmatrix}x^j}{j!}$$\n\n\u6211\u4eec\u6362\u4e00\u79cd\u601d\u8def\u5c55\u5f00\u3002\n\n$$(1+x)^t=\\exp[t\\ln(1+x)]$$\n\n$$=\\sum_{i=0}^\\infty t^i*\\frac{\\ln(1+x)^i}{i!}$$\n\n\u6211\u4eec\u5c06\u4e24\u4e2a\u5f0f\u5b50\u653e\u5728\u4e00\u8d77:\n\n$$\\sum_{i=0}^\\infty t^i\\sum_{j=i}^\\infty\\frac{(-1)^{j-i}\\begin{bmatrix}j\\\\i\\end{bmatrix}x^j}{j!}=\\sum_{i=0}^\\infty t^i*\\frac{\\ln(1+x)^i}{i!}$$\n\n\u53bb\u9664\u5de6\u8fb9\u76f8\u540c\u7684\u90e8\u5206\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u5f0f\u5b50:\n\n$$\\sum_{j=i}^\\infty \\frac{(-1)^{j-i}\\begin{bmatrix}j\\\\i\\end{bmatrix}x^j}{j!}=\\frac{\\ln(1+x)^i}{i!}$$\n\n\u8fd0\u7528\u591a\u9879\u5f0f $\\ln$ \u548c $\\exp$ \u5373\u53ef\u505a\u5230 $O(n\\log n)$ \u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define rep(i,a,b) for(register int i=(a);i<(b);++i)\n#define pb push_back\n#define mx(a,b) (a>b?a:b)\n#define mn(a,b) (a<b?a:b)\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\nusing namespace std;\n\nnamespace IO\n{\n\tconst uint32 Buffsize=1<<15,Output=1<<24;\n\tstatic char Ch[Buffsize],*S=Ch,*T=Ch;\n\tinline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n\tstatic char Out[Output],*nowps=Out;\n\t\n\tinline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n\ttemplate<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t}\n}\nusing namespace IO;\n\nvoid file()\n{\n#ifndef ONLINE_JUDGE\n\tFILE*DSD=freopen(\"water.in\",\"r\",stdin);\n\tFILE*CSC=freopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\nconst int MAXN=1<<19;\n\nnamespace poly\n{\n\tconst int mod=167772161,gen=3;\n\t\n\tstatic int g[23][MAXN],iv[MAXN];\n\n\tinline int power(int u,int v)\n\t{\n\t\tregister int sm=1;\n\t\tfor(;v;v>>=1,u=(uint64)u*u%mod)if(v&1)\n\t\t\tsm=(uint64)sm*u%mod;\n\t\treturn sm;\n\t}\n\n\tinline void predone()\n\t{\n\t\tRep(i,1,21)\n\t\t{\n\t\t\tg[i][0]=1,g[i][1]=power(gen,(mod-1)>>i);\n\t\t\tRep(j,2,4e5)g[i][j]=(ll)g[i][j-1]*g[i][1]%mod;\n\t\t}\n\t\tiv[1]=1;\n\t\tRep(i,2,4e5)iv[i]=mod-(uint64)mod/i*iv[mod%i]%mod;\n\t}\n\n\tstatic int Len,rev[MAXN];\n\n\tinline void calrev()\n\t{\n\t\tint II=log(Len)/log(2)-1;\n\t\tRep(i,1,Len-1)rev[i]=rev[i>>1]>>1|(i&1)<<II;\n\t}\n\n\tinline int ad(int u,int v){return(u+=v)>=mod?u-mod:u;}\n\n\tinline void NTT(int*F,int typ)\n\t{\n\t\tRep(i,1,Len-1)if(i<rev[i])swap(F[i],F[rev[i]]);\n\t\tfor(register int i=2,ii=1,t=1;i<=Len;i<<=1,ii<<=1,++t)\n\t\t\tfor(register int j=0;j<Len;j+=i)rep(k,0,ii)\n\t\t\t{\n\t\t\t\tregister int tt=(uint64)*(F+j+k+ii)*g[t][k]%mod;\n\t\t\t\t*(F+j+k+ii)=ad(*(F+j+k),mod-tt);\n\t\t\t\t*(F+j+k)=ad(*(F+j+k),tt);\n\t\t\t}\n\t\tif(typ==-1)\n\t\t{\n\t\t\treverse(F+1,F+Len);\n\t\t\tregister uint64 invn=power(Len,mod-2);\n\t\t\trep(i,0,Len)*(F+i)=invn**(F+i)%mod;\n\t\t}\n\t}\n\n\tstatic int X[MAXN],Y[MAXN],Iv[MAXN];\n\n\tinline void mul(int *a,int *b,int *c,int lenl,int lenr)\n\t{\n\t\tif((ll)lenl*lenr<=100)\n\t\t{\n\t\t\tRep(i,0,lenl+lenr)X[i]=0;\n\t\t\tRep(i,0,lenl)Rep(j,0,lenr)\n\t\t\t\tX[i+j]=(X[i+j]+(ll)a[i]*b[j])%mod;\n\t\t\tRep(i,0,lenl+lenr)c[i]=X[i];\n\t\t\treturn;\n\t\t}\n\t\tfor(Len=2;Len<=lenl+lenr;Len<<=1);\n\t\tcalrev();\n\t\tRep(i,0,lenl)X[i]=a[i];\n\t\tRep(i,0,lenr)Y[i]=b[i];\n\t\trep(i,lenl+1,Len)X[i]=0;\n\t\trep(i,lenr+1,Len)Y[i]=0;\n\t\tNTT(X,1),NTT(Y,1);\n\t\trep(i,0,Len)X[i]=(ll)X[i]*Y[i]%mod;\n\t\tNTT(X,-1);\n\t\tRep(i,0,lenl+lenr)c[i]=X[i];\n\t\trep(i,lenl+lenr+1,Len)c[i]=0;\n\t}\n\n\tinline void Inv(int*F,int*G,int ln)\n\t{\n\t\tIv[0]=power(F[0],mod-2);\n\t\tfor(register int Ln=2;Ln>>1<=ln;Ln<<=1)\n\t\t{\n\t\t\trep(i,ln+1,Ln)F[i]=0;\n\t\t\trep(i,0,Ln)X[i]=F[i],Y[i]=0;\n\t\t\trep(i,0,(Ln>>1))Y[i]=Iv[i];\n\t\t\tLen=Ln,calrev();\n\t\t\tNTT(X,1),NTT(Y,1);\n\t\t\trep(i,0,Ln)X[i]=(uint64)X[i]*Y[i]%mod;\n\t\t\tNTT(X,-1);\n\t\t\trep(i,0,(Ln>>1))X[i]=0;\n\t\t\tNTT(X,1);\n\t\t\trep(i,0,Ln)X[i]=(uint64)X[i]*Y[i]%mod;\n\t\t\tNTT(X,-1);\n\t\t\trep(i,(Ln>>1),Ln)Iv[i]=mod-X[i];\n\t\t}\n\t\tRep(i,0,ln)G[i]=Iv[i];\n\t}\n\n\tstatic int ExX[MAXN],ExY[MAXN],Op[MAXN];\n\n\tinline void Deriv(int*F,int*G,int ln)\n\t{Rep(i,1,ln)G[i-1]=(uint64)F[i]*i%mod;G[ln]=0;}\n\n\tinline void Inter(int*F,int*G,int ln)\n\t{Repe(i,ln,1)G[i]=(uint64)F[i-1]*iv[i]%mod;G[0]=0;}\n\n\tstatic int LnX[MAXN];\n\n\tinline void Ln(int*F,int*G,int ln)\n\t{\n\t\tDeriv(F,LnX,ln),Inv(F,G,ln);\n\t\tfor(Len=2;Len<=ln<<1;Len<<=1);\n\t\trep(i,ln+1,Len)LnX[i]=G[i]=0;\n\t\tcalrev();\n\t\tNTT(LnX,1),NTT(G,1);\n\t\trep(i,0,Len)G[i]=(uint64)G[i]*LnX[i]%mod;\n\t\tNTT(G,-1);\n\t\tInter(G,G,ln);\n\t}\n\n\tvoid cdq_Exp(int*a,int*F,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tif(!l)F[l]=1;\n\t\t\telse F[l]=(ll)F[l]*iv[l]%mod;\n\t\t\treturn;\n\t\t}\n\t\tint md=(l+r)>>1;cdq_Exp(a,F,l,md);\n\t\tfor(Len=2;Len<=r-l;Len<<=1);\n\t\tcalrev();\n\t\tmemset(X,0,sizeof(int)*Len);\n\t\tmemset(Y,0,sizeof(int)*Len);\n\t\tmemcpy(X,F+l,sizeof(int)*(md-l+1));\n\t\tmemcpy(Y,a,sizeof(int)*(r-l));\n\t\tNTT(X,1),NTT(Y,1);\n\t\trep(i,0,Len)X[i]=(ll)X[i]*Y[i]%mod;\n\t\tNTT(X,-1);\n\t\tRep(i,md+1,r)F[i]=ad(F[i],X[i-l-1]);\n\t\tcdq_Exp(a,F,md+1,r);\n\t}\n\n\tinline void Exp(int *F,int *G,int ln)\n\t{\n\t\tRep(i,1,ln)Op[i-1]=(ll)F[i]*i%mod,Op[i]=0;\n\t\tmemset(G,0,sizeof(int)*(ln+1));\n\t\tcdq_Exp(Op,G,0,ln);\n\t\t/*Op[0]=1;\n\t\tfor(register int Lx=2;Lx>>1<=ln;Lx<<=1)\n\t\t{\n\t\t\trep(i,Lx>>1,Lx)Op[i]=0;\n\t\t\tLn(Op,ExX,Lx);\n\t\t\trep(i,0,Lx>>1)ExX[i]=ad(F[i+(Lx>>1)],mod-ExX[i+(Lx>>1)]);\n\t\t\trep(i,0,Lx>>1)ExY[i]=Op[i];\n\t\t\trep(i,Lx>>1,Lx)ExX[i]=ExY[i]=0;\n\t\t\tLen=Lx;\n\t\t\tcalrev();\n\t\t\tNTT(ExY,1),NTT(ExX,1);\n\t\t\trep(i,0,Len)ExX[i]=(ll)ExX[i]*ExY[i]%mod;\n\t\t\tNTT(ExX,-1);\n\t\t\trep(i,0,Lx>>1)Op[i+(Len>>1)]=ExX[i];\n\t\t}\n\t\tRep(i,0,ln)G[i]=Op[i];*/\n\t}\n\n\tinline void Pow(int*F,int*G,int ln,ll k)\n\t{\n\t\tint lst=ln+1;\n\t\tRep(i,0,ln)if(F[i]){lst=i;break;}\n\t\tif(ln&&(__int128)lst*k>ln)\n\t\t{memset(G,0,sizeof(int)*(ln+1));return;}\n\t\tint md=ln-k*lst,bs=F[lst],iv=power(bs,mod-2);\n\t\tRep(i,lst,ln)G[i]=(ll)G[i]*iv%mod;\n\t\tLn(G+lst,G,md);\n\t\tk%=mod;\n\t\tRep(i,0,md)G[i]=(ll)G[i]*k%mod;\n\t\tExp(G,G,md);\n\t\tbs=power(bs,k);\n\t\tRepe(i,md,0)G[i+lst*k]=(ll)G[i]*bs%mod;\n\t\tmemset(G,0,sizeof(int)*(lst*k));\n\t}\n}\nusing poly::mul;\nusing poly::power;\nusing poly::Len;\nusing poly::calrev;\nusing poly::NTT;\nusing poly::mod;\nusing poly::predone;\nusing poly::Inv;\nusing poly::Inter;\nusing poly::Deriv;\nusing poly::Ln;\nusing poly::Exp;\nusing poly::Pow;\nusing poly::ad;\n\nstatic int n,k,X[MAXN],fac[MAXN],inv[MAXN];\n\nint main()\n{\n\tfile();\n\tread(n),read(k);\n\tif(k>n)Rep(i,0,n)write(0,' ');\n\telse\n\t{\n\t\tpredone();\n\t\tfac[0]=1;\n\t\tRep(i,1,n)fac[i]=(ll)fac[i-1]*i%mod;\n\t\tinv[n]=power(fac[n],mod-2);\n\t\tRepe(i,n,1)inv[i-1]=(ll)inv[i]*i%mod;\n\t\tX[0]=X[1]=1;\n\t\tLn(X,X,n),Pow(X,X,n,k);\n\t\tRep(i,0,n)X[i]=(ll)X[i]*inv[k]%mod;\n\t\tRep(i,0,n)write((ll)X[i]*fac[i]%mod*((i-k)&1?mod-1:1)%mod,' ');\n\t}\n\tflush();\n\treturn 0;\n}\n```",
        "postTime": 1558262599,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5409 \u3010\u3010\u6a21\u677f\u3011\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217\u3011"
    },
    {
        "content": "# \u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5409)\n## \u601d\u8def\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9$k=1$\u7684\u60c5\u51b5\u6784\u9020\u6307\u6570\u7ea7\u751f\u6210\u51fd\u6570\uff0c\u5373:\n\n$$S(x)=\\sum_{i=0}^{n} (i-1)!\\frac{x^i}{i!}$$\n\n\u56e0\u4e3a\u5f88\u663e\u7136$\\begin{bmatrix} n \\\\ 1\\end{bmatrix}=(n-1)!$\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\uff0c\u5bf9\u4e8e$k$\u4e3a\u4efb\u610f\u6570\u60c5\u51b5\u7684\u6307\u6570\u7ea7\u751f\u6210\u51fd\u6570\u5c31\u662f:\n\n$$\\frac{S(x)^k}{k!}$$\n\n\u9664\u4ee5$k!$\u7684\u4e3b\u8981\u539f\u56e0\u662f\u6211\u4eec\u7528\u6307\u6570\u7ea7\u751f\u6210\u51fd\u6570\u7684\u73af\u6392\u5217\u5176\u5b9e\u662f\u6709\u987a\u5e8f\u3002\u5c31\u6bd4\u5982$[2,3,1][1,2]$\u548c$[1,2][2,3,1]$\u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u662f\u6211\u4eec\u7b97\u91cd\u4e86\u3002\n\n\u4e0a\u9762\u8fd9\u4e2a\u5f0f\u5b50\u5982\u679c\u8981\u7f8e\u89c2\u4e00\u70b9\u5c31\u662f:\n\n$$\\frac{(\\ln \\frac{1}{1-x})^k}{k!}$$\n\n\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u6cf0\u52d2\u5c55\u5f00\u5f97\u5230\u3002\n\n\u4e0d\u8fc7\u4e0d\u7ba1\u7528\u54ea\u79cd\u8868\u8fbe\u65b9\u5f0f\u90fd\u53ef\u4ee5\uff0c\u76f4\u63a5\u591a\u9879\u5f0f\u5feb\u901f\u5e42\u5c31\u597d\u4e86\u3002\u4e0d\u8fc7\u6211\u7684$\\Theta(n\\log^2n)$\u7684\u6734\u7d20\u7248\u4f3c\u4e4e\u5361\u4e0d\u8fc7\u53bb\u3002\u770b\u6765\u9700\u8981\u7ec3\u4e60\u5361\u5e38\u6280\u5de7\u4e86\uff0c\u8fd9\u91cc\u5c31\u53ea\u7ed9\u51fa$\\Theta(n\\logn)$\u7684\u4ee3\u7801\u3002\n## $\\text {Code}$\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define Int register int\n#define mod 167772161\n#define MAXN 531072\n#define Gi 3\n\nint quick_pow (int a,int b,int c)\n{\n    int res = 1;\n    while (b){\n        if (b & 1) res = 1ll * res * a % c;\n        a = 1ll * a * a % c;\n        b >>= 1;\n    }\n    return res;\n}\n\nint limit = 1,l,r[MAXN];\n\nvoid NTT (int *a,int type)\n{\n    for (Int i = 0;i < limit;++ i) if (i < r[i]) swap (a[i],a[r[i]]);\n    for (Int mid = 1;mid < limit;mid <<= 1){\n        int Wn = quick_pow (Gi,(mod - 1) / (mid << 1),mod);\n        if (type == -1) Wn = quick_pow (Wn,mod - 2,mod);\n        for (Int R = mid << 1,j = 0;j < limit;j += R){\n            for (Int k = 0,w = 1;k < mid;++ k,w = 1ll * w * Wn % mod)\n            {\n                int x = a[j + k],y = 1ll * w * a[j + k + mid] % mod;\n                a[j + k] = (x + y) % mod,a[j + k + mid] = (x + mod - y) % mod;\n            }\n        }\n    } \n    if (type == 1) return ;\n    int Inv = quick_pow (limit,mod - 2,mod);\n    for (Int i = 0;i < limit;++ i) a[i] = 1ll * a[i] * Inv % mod;\n}\n\nint c[MAXN];\n\nvoid Solve (int len,int *a,int *b)\n{\n    if (len == 1) return b[0] = quick_pow (a[0],mod - 2,mod),void ();\n    Solve ((len + 1) >> 1,a,b);\n    limit = 1,l = 0;\n    while (limit < (len << 1)) limit <<= 1,l ++;\n    for (Int i = 0;i < limit;++ i) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (l - 1));\n    for (Int i = 0;i < len;++ i) c[i] = a[i];\n    for (Int i = len;i < limit;++ i) c[i] = 0;\n    NTT (c,1);NTT (b,1);\n    for (Int i = 0;i < limit;++ i) b[i] = 1ll * b[i] * (2 + mod - 1ll * c[i] * b[i] % mod) % mod;\n    NTT (b,-1);\n    for (Int i = len;i < limit;++ i) b[i] = 0;\n}\n\nvoid deravitive (int *a,int n){\n    for (Int i = 1;i <= n;++ i) a[i - 1] = 1ll * a[i] * i % mod;\n    a[n] = 0;\n}\n\nvoid inter (int *a,int n){\n    for (Int i = n;i >= 1;-- i) a[i] = 1ll * a[i - 1] * quick_pow (i,mod - 2,mod) % mod;\n    a[0] = 0;\n}\n\nint b[MAXN];\n\nvoid Ln (int *a,int n){\n    memset (b,0,sizeof (b));\n    Solve (n,a,b);deravitive (a,n);\n    while (limit <= n) limit <<= 1,l ++;\n    for (Int i = 0;i < limit;++ i) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (l - 1));\n    NTT (a,1),NTT (b,1);\n    for (Int i = 0;i < limit;++ i) a[i] = 1ll * a[i] * b[i] % mod;\n    NTT (a,-1);\n    inter (a,n);\n    for (Int i = n + 1;i < limit;++ i) a[i] = 0;\n}\n\nint F0[MAXN];\n\nvoid Exp (int *a,int *B,int n){\n    if (n == 1) return B[0] = 1,void ();\n    Exp (a,B,(n + 1) >> 1);\n    for (Int i = 0;i < limit;++ i) F0[i] = B[i];\n    Ln (F0,n);\n    F0[0] = (a[0] + 1 + mod - F0[0]) % mod;\n    for (Int i = 1;i < n;++ i) F0[i] = (a[i] + mod - F0[i]) % mod;\n    NTT (F0,1);NTT (B,1);\n    for (Int i = 0;i < limit;++ i) B[i] = 1ll * F0[i] * B[i] % mod;\n    NTT (B,-1);\n    for (Int i = n;i < limit;++ i) B[i] = 0;\n}\n\nint read ()\n{\n    int x = 0;char c = getchar();int f = 1;\n    while (c < '0' || c > '9'){if (c == '-') f = -f;c = getchar();}\n    while (c >= '0' && c <= '9'){x = (int)((int)(x << 3) % mod + (int)(x << 1) % mod + c - '0') % mod;c = getchar();}\n    return x * f;\n}\n\nvoid write (int x)\n{\n    if (x < 0){x = -x;putchar ('-');}\n    if (x > 9) write (x / 10);\n    putchar (x % 10 + '0');\n}\n\nint n,k;\nint fac[MAXN],A[MAXN],B[MAXN];\n\nsigned main()\n{\n\tn = read (),k = read ();\n\tfor (Int i = 0;i < n;++ i) A[i] = quick_pow (i + 1,mod - 2,mod);\n\tLn (A,n);\n\tfor (Int i = 0;i < n;++ i) A[i] = 1ll * A[i] * k % mod;\n\tExp (A,B,n);fac[0] = 1;\n\tfor (Int i = 1;i <= max (n,k);++ i) fac[i] = 1ll * fac[i - 1] * i % mod;\n\tfor (Int i = n;i >= k;-- i) B[i] = B[i - k];\n\tfor (Int i = 0;i < k;++ i) B[i] = 0;int Inv = quick_pow (fac[k],mod - 2,mod);\n\tfor (Int i = 0;i <= n;++ i) write (1ll * B[i] * fac[i] % mod * Inv % mod),putchar (' ');\n\tputchar ('\\n');\n    return 0;\n}\n```",
        "postTime": 1591712866,
        "uid": 124781,
        "name": "Walking_Dead",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5409 \u3010\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217\u3011"
    },
    {
        "content": "\u73b0\u5728\u53ea\u6709\u4e00\u7bc7\u9898\u89e3\uff0c\u800c\u90a3\u7bc7\u9898\u89e3\u7684\u505a\u6cd5\u592a\u53cd\u4eba\u7c7b\u4e86\uff0c\u5176\u5b9e\u8fd9\u9898\u5f88\u666e\u901a\u7684\u8bf4\n\n\n\u6b63\u6240\u8c13\u65af\u7279\u6797\u8f6e\u6362\u6570\uff0c\u8003\u8651\u8f6e\u6362\uff0c\u73b0\u5728\u6c42\u4e00\u5217\u5373\u7531m\u4e2a\u8f6e\u6362\u7ec4\u6210\uff0c\u56e0\u4e3a\u5e26\u6807\u53f7\uff0c\u53ef\u4ee5\u7528exp\u7ec4\u5408\u8d77\u6765\uff0c\u8fd9\u4e2a\u662f[\u751f\u6210\u51fd\u6570\u975e\u5e38\u57fa\u672c\u7684\u64cd\u4f5c](https://zory.ink/posts/68d9.html)\n\n\n$S(n,m)=\\frac{[x^n]}{m!} (\\sum_{i=1}^{\\infty} (i-1)! \\frac{x^i}{i!})^m$\n\n\u7528\u591a\u9879\u5f0f\u6c42\u5e42\uff0c$O(nlogn)$\n\n\u7528\u6734\u7d20\u5feb\u901f\u5e42\uff0c$O(nlog^2n)$\uff0c\u8bf4\u4e0d\u5b9a\u66f4\u5feb\uff08\u96fe\n\n\u6ce8\u610f\u8981\u5e73\u79fb\u7b26\u5408ln\u7684\u5b9a\u4e49\u57df\uff0c\u8fd9\u4e2a\u57fa\u672c\u64cd\u4f5c\u5728exp\u7684\u6a21\u677f\u52a0\u5f3a\u7248\u6709\u8bb2\uff0c\u5c31\u4e0d\u5c55\u5f00\u4e86\n\n[code](https://www.luogu.org/paste/hyft08cw)",
        "postTime": 1567992300,
        "uid": 30058,
        "name": "Zory",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5409 \u3010\u3010\u6a21\u677f\u3011\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217\u3011"
    },
    {
        "content": "## Tag\n\n\u591a\u9879\u5f0f\u3002\n\n## Preface\n\n\u4ee5\u540e\u522b\u4eba\u4e0d\u4f1a\u6c42\u8fd9\u73a9\u610f\u7684\u65f6\u5019\u6211\u5c31\u53ef\u4ee5\u81ea\u4fe1\u7684\u8bf4\u51fa\u201c\u770b\u6211\u535a\u5ba2\u201d\u8fd9\u79cd\u8bdd\u4e86\u2026\u2026\n\n## Description\n\n\u7ed9\u5b9a $n,k$\uff0c\u5bf9\u4e8e\u6240\u6709 $0 \\leq i \\leq n$\uff0c\u6c42\u51fa $\\left[\\begin{matrix}i\\\\k\\end{matrix}\\right]$ \u7684\u503c\uff0c\u5bf9 $167772161$ \u53d6\u6a21\u3002\n\n$\\texttt{data range:} 1\\leq n,k< 131072$.\n\n## Solution\n\n\u4e0b\u9762\u4ee4 $s(n,k)$ \u4e3a\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570 $\\left[\\begin{matrix}i\\\\k\\end{matrix}\\right]$\u3002\uff08\u8bf4\u5b9e\u8bdd\u6bcf\u4e00\u6b21\u6253\u4e2a\u77e9\u9635\u633a\u626f\u6de1\u7684\uff09\n\n$s(n,k)$ \u8bfb\u4f5c\"$n$ \u8f6e\u6362 $k$\"\uff0c\u8868\u793a\u7684\u662f $n$ \u4e2a\u6709\u6807\u53f7\u8282\u70b9\u6709 $k$ \u4e2a\u8f6e\u6362\u7684\u65b9\u6848\u6570\u3002\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u7f6e\u6362\u6765\u63cf\u8ff0\u4e00\u4e2a\u6392\u5217\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u82e5\u5e72\u4e2a\u201c\u73af\u201d\uff0c\u6839\u636e\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u679c\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u7f6e\u6362\u5177\u6709 $k$ \u4e2a\u73af\uff0c\u5176\u65b9\u6848\u6570\u5c31\u662f $s(n,k)$\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u7b80\u5355\u7684\u7ec4\u5408\u610f\u4e49\u8bc1\u660e $s(n,1)=(n-1)!,\\sum\\limits_is(n,i)=n!$ \u8fd9\u4e24\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u7ed3\u8bba\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6211\u4eec\u521a\u521a\u63d0\u5230\u7684\u7f6e\u6362\u5177\u4f53\u7684\u8868\u793a\u51fa\u6765\uff0c\u6bd4\u5982 $(3)(41)(652)(87)$ \u8fd9\u6837\u4e00\u4e2a\u7f6e\u6362\uff0c\u5c06\u6bcf\u4e00\u4e2a\u73af\u7684\u6700\u5927\u7684\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u7b2c\u4e00\u4e2a\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6309\u7167\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u62ec\u53f7\u7ed9\u53bb\u6389\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6392\u5217 $34165287$\uff08\u6ce8\u610f\u8fd9\u91cc\u5e76\u4e0d\u662f\u7f6e\u6362\u800c\u662f\u6392\u5217\uff09\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u968f\u610f\u6539\u53d8\u4e00\u4e2a\u503c\u7684\u4f4d\u7f6e\u5c31\u4f1a\u53d8\u6210\u53e6\u4e00\u4e2a\u65b9\u6848\uff0c\u6240\u4ee5\u6b64\u65f6\u8bc1\u660e\u4e86 $\\sum\\limits_i s(n,i)=n!$\u3002\n\n\u5f53 $k=1$ \u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u662f\u6700\u5927\u7684\u5143\u7d20 $n$ \u5728\u6700\u524d\u9762\uff0c\u7136\u540e\u540e\u9762 $n-1$ \u4e2a\u5143\u7d20\u968f\u4fbf\u6392\uff0c\u6240\u4ee5\u5f97\u5230\u4e86 $s(n,1)=(n-1)!$\u3002\n\n\u56de\u5230\u672c\u9898\u3002\n\n\u4e0d\u59a8\u8bbe EGF $F_k(z)$ \u4e3a\u6709 $k$ \u4e2a\u73af\u7684\u7f6e\u6362\u7684\u4e2a\u6570\uff0c\u6839\u636e\u4e0a\u9762\u6c42\u5f97\u7684\n$$\nF_1(z) = \\sum_n(n-1)!\\dfrac{z^n}{n!}=\\ln \\dfrac{1}{1-z}\n$$\n\u90a3\u4e48\u5bf9\u4e8e $F_k(z)$ \u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u5f97\u5230\u5c31\u662f\u4e00\u4e2a\u73af\u7684\u5377 $k$ \u6b21\u4e86\uff0c\u4f46\u662f\u6ce8\u610f\u662f\u65e0\u5e8f\u7684\uff0c\u6240\u4ee5\u8981\u9664\u53bb $k!$\uff0c\u6211\u4eec\u6700\u7ec8\u7684\u7b54\u6848\u7684 EGF \u5c31\u662f\uff1a\n$$\n\\dfrac{\\left(\\ln \\dfrac 1{1-z}\\right)^k}{k!}\n$$\n\u6ce8\u610f\u8fd9\u91cc\u662f EGF\uff0c\u6240\u4ee5\u7b54\u6848\u7684\u6700\u540e\u9700\u8981\u4e58\u4e0a\u4e00\u4e2a $i!$\u3002\n\n\u5bf9\u4e8e\u6211\u4eec\u5bfc\u51fa\u7684 $F_1(z)$ \u5b9e\u9645\u4e0a\u5bf9\u4e8e $\\sum\\limits_is(n,i)=n!$ \u6709\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u3002\n\n\u4e0d\u96be\u8bbe EGF $G(z)$ \u8868\u793a\u957f\u5ea6\u4e3a $n$ \u7684\u6392\u5217\u53ef\u4ee5\u8868\u793a\u591a\u5c11\u79cd\u7f6e\u6362\uff0c\u518d\u6839\u636e\u4e0a\u9762\u7684\u7ec4\u5408\u610f\u4e49\u53ef\u4ee5\u5f97\u5230\uff1a\n$$\n\\exp(F_1(z))=G(z)\n$$\n\u6b64\u65f6\n$$\nG(z)=\\sum_{n} n!\\dfrac{z^n}{n!}=\\dfrac 1{1-z}\n$$\n\u6240\u4ee5 $F_1(z) = \\ln \\dfrac 1{1-z}$\uff0c\u4e4b\u540e\u5c31\u662f\u76f8\u540c\u7684\u65b9\u6cd5\u4e86\u3002\n\n\u6c42\u89e3\u65b9\u9762\u53ef\u4ee5\u901a\u8fc7\u5411\u5de6\u79fb $\\ln \\dfrac 1{1-z}$ \u7684\u65b9\u6cd5\u6765\u7528\u591a\u9879\u5f0f exp \u6765\u89e3\u51b3\uff0c\u6700\u540e\u518d\u53f3\u79fb\u56de\u53bb\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\lg n)$\u3002\n\n~~\u4f46\u662f\u5b9e\u9645\u4e0a $O(n \\lg n\\lg k)$ \u4e5f\u8fc7\u5f97\u53bb\uff0c\u751a\u81f3\u6709\u65f6\u5019\u6bd4\u4e0a\u9762\u90a3\u79cd\u65b9\u6cd5\u8fd8\u5feb\u4e00\u70b9\u3002~~\n\n## Code\n\n```cpp\nusing ll = long long;\nusing poly = vector<int>;\n\nconst int N = 131072 * 2;\nconst int mod = 167772161, g = 3;\n//const int mod = 998244353, g = 3;\n\ninline void chk(int &x) {x -= mod; x += x >> 31 & mod;}\ninline int mll(int x, int y) {return (ll) x * y % mod;}\ninline int add(int x, int y) {chk(x += y); return x;}\ninline int del(int x, int y) {return add(x, mod - y);}\n\ninline int ksm(int x, int y) {\n    int ret = 1;\n    for(; y; y >>= 1, x = mll(x, x))\n        if(y & 1) ret = mll(ret, x);\n    return ret;\n}\n\nint fc[N], fv[N], inv[N];\ninline void pref(const int lim) {\n    fc[0] = 1;\n    FOR(i, 1, lim) fc[i] = mll(fc[i - 1], i);\n    fv[lim] = ksm(fc[lim], mod - 2);\n    ROF(i, lim, 1) fv[i - 1] = mll(fv[i], i);\n    FOR(i, 1, lim) inv[i] = mll(fv[i], fc[i - 1]);\n    return ;\n}\n\nint rev[N << 1];\ninline int getrev(const int n) {\n    int len = 1, tim = -1;\n    while(len < n) len <<= 1, tim++;\n    FOR(i, 0, len - 1) rev[i] = rev[i >> 1] >> 1 | ((i & 1) << tim);\n    return len;\n}\n\nvoid DFT(poly &F, int n) {\n    F.resize(n);\n    FOR(i, 0, n - 1) if(i < rev[i]) swap(F[i], F[rev[i]]);\n    for(int i = 1; i < n; i <<= 1) {\n        int gn = ksm(g, (mod - 1) / (i << 1));\n        for(int j = 0, x, y, g0 = 1; j < n; j += (i << 1), g0 = 1)\n        for(int k = 0; k < i; k++, g0 = mll(gn, g0)) {\n            x = F[j + k], y = mll(F[i + j + k], g0);\n            F[j + k] = add(x, y);\n            F[i + j + k] = del(x, y);\n        }\n    }\n    return ;\n}\n\nvoid IDFT(poly &F, int n) {\n    DFT(F, n), reverse(F.begin() + 1, F.end());\n    int iv = ksm(n, mod - 2);\n    FOR(i, 0, n - 1) F[i] = mll(F[i], iv);\n    return ;\n}\n\npoly operator + (poly A, poly B) {\n    int l = max(A.size(), B.size());\n    A.resize(l), B.resize(l);\n    FOR(i, 0, l - 1) A[i] = add(A[i], B[i]);\n    return A;\n}\n\npoly operator - (poly A, poly B) {\n    int l = max(A.size(), B.size());\n    A.resize(l), B.resize(l);\n    FOR(i, 0, l - 1) A[i] = del(A[i], B[i]);\n    return A;\n}\n\npoly operator * (poly A, int k) {\n    FOR(i, 0, A.size() - 1) A[i] = mll(A[i], k);\n    return A;\n}\n\npoly operator * (poly A, poly B) {\n    int n = A.size() + B.size() - 1, len = getrev(n);\n    DFT(A, len), DFT(B, len);\n    FOR(i, 0, len - 1) A[i] = mll(A[i], B[i]);\n    return IDFT(A, len), A.resize(n), A;\n}\n\npoly DI(const poly F) {\n    poly G(F.size() - 1);\n    FOR(i, 0, G.size() - 1) G[i] = mll(F[i + 1], i + 1);\n    return G;\n}\n\npoly IG(const poly F) {\n    poly G(F.size() + 1);\n    FOR(i, 1, G.size() - 1) G[i] = mll(F[i - 1], inv[i]);\n    return G;\n}\n\npoly INV(const poly F) {\n    poly G; G.push_back(ksm(F[0], mod - 2));\n    int n = F.size() << 1;\n    for(int mx = 2; mx < n; mx <<= 1) {\n        poly H = F; H.resize(mx);\n        int len = getrev(mx << 1);\n        DFT(G, len), DFT(H, len);\n        FOR(i, 0, len - 1) G[i] = mll(G[i], del(2, mll(H[i], G[i])));\n        IDFT(G, len), G.resize(mx);\n    }\n    return G.resize(F.size()), G;\n}\n\npoly LN(const poly F) {\n    poly G = IG(DI(F) * INV(F));\n    return G.resize(F.size()), G;\n}\n\npoly EXP(const poly F) {\n    poly G; G.push_back(1);\n    int n = F.size() << 1;\n    for(int mx = 2; mx < n; mx <<= 1) {\n        poly H = F;\n        H.resize(mx), G.resize(mx);\n        G = G * (poly(1, 1) - LN(G) + H);\n    }\n    return G.resize(F.size()), G;\n}\n\npoly Mulx(poly F, const int k) {\n    poly G(F.size() + k);\n    FOR(i, k, G.size() - 1) G[i] = F[i - k];\n    return G;\n}\n\npoly Divx(poly F, const int k) {\n    poly G(F.size() - k);\n    FOR(i, 0, G.size() - 1) G[i] = F[i + k];\n    return G;\n}\n\nvoid print(const poly F) {\n    FOR(i, 0, F.size() - 1) cerr << F[i] << \" \\n\"[i == ii];\n}\n\ninline void solve() {\n    int n = rd, k = rd;\n    int p = max(n, k);\n    pref(p + 10);\n    poly F;\n    FOR(i, 0, n) F.push_back(1);\n    F = LN(F);\n    poly H = Divx(F, 1);\n    H = EXP(LN(H) * k);\n    F.clear(), F.resize(n + 1);\n    FOR(i, k, n) F[i] = mll(H[i - k], fv[k]);\n    FOR(i, 0, n) cout << mll(F[i], fc[i]) << ' ';\n    return ;\n}\n```\n\n## Final\n\n\u672c\u6765\u60f3\u7528\u4e8c\u5143\u751f\u6210\u51fd\u6570\u53bb\u89e3\u51b3\u7684\uff0c\u4f46\u662f\u8fd0\u7528\u7684\u4e0d\u662f\u5f88\u719f\u7ec3\uff0c\u8fd8\u662f\u53ea\u80fd\u62fc\u6765\u62fc\u53bb\u7684\u7528\uff0c\u6709\u6ca1\u6709\u8001\u54e5\u6559\u6559\u6211\u600e\u4e48\u7528\u4e8c\u5143\u751f\u6210\u51fd\u6570\u554a\u3002\n\n\u81ea\u6b64\uff0c\u5173\u4e8e\u65af\u7279\u6797\u6570\u7684\u56db\u9053\u9898\u5168\u90e8\u5b8c\u6210\u4e86\u3002\n\n",
        "postTime": 1641382717,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "P5409 \u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217 \u9898\u89e3"
    },
    {
        "content": "\u7ec4\u5408\u610f\u4e49\u3002 \n\n\u4f17\u6240\u5468\u77e5\u5bf9\u4e8e\u6709\u6807\u53f7\u7ec4\u5408\u7c7b $\\mathcal{A,B,C}$\uff0c\u6ee1\u8db3\u6807\u53f7\u79ef $\\mathcal{C:=A*B}$\uff0c\u5176\u8ba1\u6570\u51fd\u6570\u5206\u522b\u4e3a $f,g,h$\uff0c\u5219\u5176 EGF \u6709\u5173\u7cfb\uff1a\n\n$$\nh(|X|)=\\sum_{(S,T)=X}f(|S|)g(|T|)\\;\\Longrightarrow \\;E_{h}(z)=E_f(z)E_{g}(z)\n$$\n\n\u8fd9\u662f\u56e0\u4e3a\u6839\u636e\u7ec4\u5408\u610f\u4e49\u6709\uff1a\n\n$$\nh(n)=\\sum_{k=0}^n\\binom{n}{k}f(k)g(n-k)\n$$\n\n$$\n\\frac{h(n)}{n!}=\\sum_{k=0}^n\\frac{f(k)}{k!}\\frac{g(n-k)}{(n-k)!}\n$$\n\n\u4f5c\u4e3a\u5176\u4e00\u4e2a\u76f4\u63a5\u63a8\u8bba\uff0c\u6211\u4eec\u6709\uff1a\n\n$$\nh(|S|)=\\sum_{S=(T_i)_{i\\leqslant k}}\\prod_{j=1}^kf_j(|T_j|)\\;\\Longrightarrow \\;E_h(z)=\\prod_{i=1}^kE_{f_i}(z)\n$$\n\n------------\n\u73b0\u5728\u6765\u8ba1\u7b97\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217\u3002\n\n\u6839\u636e\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5c06\u96c6\u5408 $S$ \u5212\u5206\u4e3a $k$ \u4e2a**\u975e\u7a7a**\u8f6e\u6362\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u5148\u6c42\u51fa\u5212\u5206\u4e3a $1$ \u4e2a\u8f6e\u6362\u7684 EGF\u3002\n\n\u6839\u636e\u5706\u6392\u5217\u8ba1\u6570\u516c\u5f0f\u5f97\u5230\u5176 EGF\uff1a\n\n$$\nE_f(z)=\\sum_{k=1}^{\\infty}(k-1)!\\frac{x^k}{k!}=\\ln\\frac{1}{1-z}\n$$\n\n\u90a3\u4e48\u6839\u636e\u9898\u89e3\u5f00\u5934\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u5c31\u6709\uff1a\n\n$$\nE_h(z)=\\left(\\ln\\frac{1}{1-z}\\right)^k\n$$\n\n\u7136\u540e\u56e0\u4e3a\u5728 $E_h$ \u4e2d\u5bf9\u4e8e\u6bcf\u4e00\u9879\uff08\u5373\u4e00\u4e2a\u5bf9\u8c61\uff09\uff0c\u6211\u4eec\u8003\u8651\u4e86\u5176\u95f4\u7684\u987a\u5e8f\uff0c\u5bf9\u5e94\u63a8\u8bba\u4e2d\u7684 $(T_i)_{i\\leqslant k}$\u3002\u56e0\u6b64\uff0c\u6700\u7ec8\u7b54\u6848\u7684 EGF \u4e3a\uff1a\n\n$$\n\\frac{E_h(z)}{k!}=\\frac{1}{k!}\\left(\\ln\\frac{1}{1-z}\\right)^k\n$$\n\n\u76f4\u63a5\u6c42\u5373\u53ef\u3002\n\n------------\n\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217\uff0c\u4f7f\u7528\u5b8c\u5168\u76f8\u540c\u7684\u65b9\u5f0f\u4ea6\u53ef\u7acb\u5373\u5f97\u5176 EGF \u4e3a\uff1a\n\n$$\n\\frac{1}{k!}(e^z-1)^k\n$$\n\n\u4e8b\u5b9e\u4e0a\u8be5\u9898\u7684\u505a\u6cd5\u6709\u63a8\u5e7f\u60c5\u5f62\uff0c\u5373\u4ee5\u4e0b\u5b9a\u7406\u3002\n\n$\\bf Theorem.\\quad$ \u5982\u679c\uff1a\n\n$$\nh(|S|)=\\sum_{k}\\sum_{\\{B_1,\\dots,B_k\\}\\in\\Pi(S)}g(k)\\prod_{i=1}\n^kf(|B_i|),\\quad h(0)=1$$\n\n\u90a3\u4e48\u5c31\u6709\uff1a\n\n$$\nE_{h}(z)=E_g(E_f(z))\n$$\n\n$Proof.$\n\n> \u56e0\u4e3a\uff1a\n> $$h_k'(|S|)=\\sum_{(B_i)_{1}^k\\in\\Pi(S)}g(k)\\prod_{i=1}\n^kf(|B_i|)\\;\\Longrightarrow\\;E_{h'_k}(z)=g(k)E_f(z)^k$$\n> \u800c\u5bf9\u4e8e\u96c6\u5408\u65cf $\\{B_1,\\dots,B_k\\}$\uff0c\u4ee5\u4e0a\u91cd\u590d\u8ba1\u6570 $k!$ \u6b21\u3002\u4ece\u800c\uff1a\n> $$E_h(z)=\\sum_{k}\\frac{g(k)}{k!}E_f(z)^k=E_g(E_f(z))$$\n\n\u53c8\u6839\u636e\u8be5\u5b9a\u7406\u6709\u663e\u7136\u7684\u63a8\u8bba\uff0c\u53ea\u9700\u53d6 $E_g$ \u4e3a $\\exp$\u3002\n\n$\\bf Corollary.\\quad$ \u5982\u679c\uff1a\n\n$$\nh(|S|)=\\sum_{k}\\sum_{\\{B_1,\\dots,B_k\\}\\in\\Pi(S)}\\prod_{i=1}\n^kf(|B_i|),\\quad h(0)=1$$\n\n\u90a3\u4e48\u5c31\u6709\uff1a\n\n$$\nE_h(z)=e^{E_f}\n$$\n\n\u8fd9\u4e2a\u63a8\u8bba\u51fa\u73b0\u5728\u5404\u79cd\u6709\u6807\u53f7\u8ba1\u6570\u4e2d\uff0c\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u662f P4841 \u57ce\u5e02\u89c4\u5212\u3002",
        "postTime": 1673794919,
        "uid": 246979,
        "name": "SalomeJLQ",
        "ccfLevel": 5,
        "title": "\u4e24\u7c7b\u65af\u7279\u6797\u6570\u5217\u7684\u8ba1\u6570"
    },
    {
        "content": "\u5957\u8def\uff1a$1$\u4e2a\u7684\u6bcd\u51fd\u6570\u662f$f$\uff0c\u5219$n$\u4e2a\u7684\u6bcd\u51fd\u6570\u662f$f^n$\u3002\n\n\u8bbe\u5355\u4e2a\u5706\u6392\u5217\u7684$\\text{EGF}$\u662f$f=\\sum (i-1)!\\frac{x^i}{i!}=\\sum \\frac{x^i}{i}$\uff0c\u7b54\u6848\u5373\u4e3a$\\frac{f^m}{m!}$\uff08\u5706\u6392\u5217\u5168\u540c\uff09\u3002\n\n\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u5047\u8bbe\u5706\u6392\u5217\u4e0d\u540c\uff0c\u6700\u540e\u9664\u4ee5$m!$\u5373\u53ef\u3002\n\n\u5047\u8bbe\u7b2c$i$\u4e2a\u5706\u6392\u5217\u6709$a_i$\u4e2a\u6570($\\sum a_i=n$)\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u4ea7\u751f$(a_i-1)!$\u7684\u8d21\u732e\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u60c5\u51b5\u6709$\\frac{n!}{\\prod a_i!}\\prod (a_i-1)!$\uff0c\u660e\u663e\u662f$\\text{EGF}$\u76f8\u4e58\u7684\u5f62\u5f0f\u3002\n\n\u9898\u89e3\u591a\u4e3a$\\text{ln}$\u7136\u540e$\\text{exp}$\uff0c\u7531\u4e8e\u6211\u8fd8\u4e0d\u4f1a$\\text{exp}$\uff0c\u6240\u4ee5\u63d0\u4f9b\u4e00\u4e2a$\\Theta(n\\log^2 n)$\u7684\u5199\u6cd5\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e6+10;\nconst int mod=167772161;\nconst int G=3;\nconst int iG=(mod+1)/3;\nint n,m,len=1,tr[maxn];\nint fac[maxn],inv[maxn],ifc[maxn];\ninline int ksm(int x,int y){\n\tint res=1;\n\twhile(y){\n\t\tif(y&1)res=1ll*res*x%mod;\n\t\tx=1ll*x*x%mod;y>>=1;\n\t}\n\treturn res;\n}\ninline int read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\ninline void ntt(int *f,int len,int flag){\n\tfor(int i=0;i<len;++i)\n\t\tif(i<tr[i])swap(f[i],f[tr[i]]);\n\tfor(int p=2;p<=len;p<<=1){\n\t\tint l=p>>1,w=ksm(flag?G:iG,(mod-1)/p);\n\t\tfor(int i=0;i<len;i+=p){\n\t\t\tint wi=1;\n\t\t\tfor(int j=i;j<i+l;++j){\n\t\t\t\tint t=1ll*wi*f[j+l]%mod;\n\t\t\t\tf[j+l]=(f[j]-t+mod)%mod;\n\t\t\t\tf[j]=(f[j]+t)%mod;\n\t\t\t\twi=1ll*w*wi%mod;\n\t\t\t}\n\t\t}\n\t}\n\tif(!flag){\n\t\tint iv=ksm(len,mod-2);\n\t\tfor(int i=0;i<len;++i)\n\t\t\tf[i]=1ll*f[i]*iv%mod;\n\t}\n}\nint x[maxn],y[maxn],z[maxn];\ninline void mul(int *a,int *b,int *c){\n\tfor(int i=0;i<len;++i)x[i]=a[i],y[i]=b[i];\n\tntt(x,len,1),ntt(y,len,1);\n\tfor(int i=0;i<len;++i)z[i]=1ll*x[i]*y[i]%mod;\n\tntt(z,len,0);for(int i=0;i<=n;++i)c[i]=z[i];\n}\nint a,b,c,f[maxn],g[maxn];\ninline void getpower(int x){\n\tif(x==1)return;\n\tgetpower(x>>1);\n\tntt(g,len,1);\n\tfor(int i=0;i<len;i++)\n\t\tg[i]=1ll*g[i]*g[i]%mod;\n\tntt(g,len,0);\n\tfor(int i=n+1;i<len;i++)\n\t\tg[i]=0;\n\tif(x&1){\n\t\tntt(g,len,1);\n\t\tfor(int i=0;i<len;i++)\n\t\t\tg[i]=1ll*g[i]*f[i]%mod;\n\t\tntt(g,len,0);\n\t\tfor(int i=n+1;i<len;i++)\n\t\t\tg[i]=0;\n\t}\n}\nsigned main(){\n\tn=read(),m=read();\n\tfor(;len<=n+n;len<<=1);\n\tfor(int i=0;i<len;i++)\n\t\ttr[i]=(tr[i>>1]>>1)|((i&1)?len>>1:0);\n\tfac[0]=ifc[0]=inv[1]=1;\n\tfor(int i=1;i<=max(n,m);++i)\n\t\tfac[i]=1ll*fac[i-1]*i%mod;\n\tfor(int i=2;i<=max(n,m);++i)\n\t\tinv[i]=1ll*(mod-mod/i)*inv[mod%i]%mod;\n\tfor(int i=1;i<=max(n,m);++i)\n\t\tifc[i]=1ll*ifc[i-1]*inv[i]%mod;\n\tfor(int i=0;i<=n;i++)g[i]=f[i]=inv[i];\n\tntt(f,len,1);getpower(m);\n\tfor(int i=0;i<=n;++i)\n\t\tprintf(\"%lld \",1ll*g[i]*fac[i]%mod*ifc[m]%mod);\n\treturn 0;\n}\n```\n",
        "postTime": 1614259466,
        "uid": 140876,
        "name": "syzf2222",
        "ccfLevel": 9,
        "title": "P5409 \u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217"
    },
    {
        "content": "\u9996\u5148\uff0c\u4e0d\u77e5\u9053\u6307\u6570\u516c\u5f0f\u5b9a\u7406\u770b\u4e00\u4e0b[\u6211\u7684\u8bc1\u660e](https://www.luogu.com.cn/blog/220037/exp-formula)\uff0c\u56e0\u4e3a\u8fd9\u7bc7\u9898\u89e3\u91cc\u9762\u4f1a\u5e94\u7528\u8bc1\u660e\u91cc\u9762\u7684\u5f88\u591a\u5b9a\u4e49\u6765\u7b80\u5316\u8bc1\u660e\u3002\n\n\u6211\u4eec\u76f4\u63a5\u8868\u793a\u6bcf\u4e00\u4e2a\u5212\u5206\u662f\u7528\u4ec0\u4e48\u6765\u7ec4\u6210\u7684\uff1a\n\n**\u7269\u54c1**\uff1a\u4e00\u4e2a\u6709\u6807\u53f7\u73af  \n**\u7ec4**\uff1a\u4e00\u4e2a\u6392\u5217\uff0c\u8fd9\u4e2a\u6392\u5217\u7ed9\u5206\u6210\u51e0\u4e2a\u73af\u4e86  \n**\u5806**\uff1a\u6240\u6709\u5927\u5c0f\u4e3a $n$ \u7684\u73af\n\n\u73b0\u5728\u7ec4\u7684 EGF \u7b49\u4e8e $(n-1)!$ \u7684 EGF\uff0c\u6216\u8005 $\\ln\\frac{1}{1-x}$\uff1b\u76f4\u63a5\u5957\u5165\u4ee5\u4e0a\u5b9a\u7406\u7684\u7ed3\u8bba\u5f97\u5230\u51fa\u6765\n\n$$\\begin{bmatrix}n\\\\k\\end{bmatrix}=[\\frac{x^n}{n!}]\\frac{(\\ln\\frac{1}{1-x})^k}{k!}=n![x^n]\\frac{(\\ln\\frac{1}{1-x})^k}{k!}$$\n\n\u6ce8\u610f\u5230 $(\\ln\\frac{1}{1-x})^k$ \u8fd9\u4e2a\u4e1c\u897f\u6709\u4e00\u4e2a\u6bd4\u3010\u591a\u9879\u5f0f\u5feb\u901f\u5e42\u52a0\u5f3a\u7248\u3011\u66f4\u597d\u7684\u65b9\u6cd5\u6765\u6c42\uff1a\u6ce8\u610f\u5230 $\\ln\\frac{1}{1-x}$ \u7b2c\u4e00\u9879\u662f 0\uff0c\u7b2c\u4e8c\u9879\u662f 1\uff0c\u6240\u4ee5\u76f4\u63a5\u628a\u524d\u9762\u90a3\u4e2a 0 \u5de6\u79fb\u6389\uff0c\u505a\u666e\u901a ln+exp \u5e42\uff0c\u7136\u540e\u53f3\u79fb $k$ \u9879\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5e38\u6570\u8d3c\u5927\u7684\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) { *s = __c; } *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) { x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; } return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) { qu[++ qr] = x % 10 + '0',  x /= 10; } while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define fi first\n#define se second\n#define pb push_back\n \n#define ll long long\n#define pii pair<int, int>\n//#define int ll\n\nnamespace poly {\n\tconst int MOD = 167772161;\n\tconst int NTTG = 3;\n\t\n\tint rev[524320];\n\tint minv[524320];\n\tint w[20][2][524320];\n\t\n\tint qpow(int b, int e) {\n\t\tint re=1;\n\t\twhile(e){\n\t\t\tif(e&1)re=1ll*re*b%MOD;\n\t\t\tb=1ll*b*b%MOD;e>>=1;\n\t\t}\n\t\treturn re;\n\t}\n\t\n\tvoid constructrev(int n) {\n\t\tfor(int i=1, j=0; i < n; i++) {\n\t\t\tint bit=n>>1;\n\t\t\tfor(;j&bit;bit>>=1)j^=bit;\n\t\t\tj^=bit; rev[i] = j;\n\t\t}\n\t}\n\n\tvoid constructroot(int n) {\n\t\tminv[1] = 1;\n\t\titer(i, 2, n+1)\n\t\t\tminv[i]=1ll*(MOD-MOD/i)*minv[MOD%i]%MOD;\n\t\tfor(int l=1; (1<<l)<=n; l++)\n\t\t\trep(inv, 2) {\n\t\t\t\tint re = inv?qpow(minv[NTTG],(MOD-1)>>l):qpow(NTTG,(MOD-1)>>l);\n\t\t\t\tw[l][inv][0] = 1;\n\t\t\t\trep1(i,(1<<(l-1))-1) w[l][inv][i] = 1ll*w[l][inv][i-1]*re%MOD;\n\t\t\t}\n\t}\n\t\n\tvoid ntt(int *v, int n, bool inv) {\n\t\trep(i, n) if(i < rev[i]) swap(v[i], v[rev[i]]);\n\t\tfor(int l=1;(1<<l)<=n;l++)\n\t\t\tfor(int i=0;i<n;i+=(1<<l)) {\n\t\t\t\tint p=i+(1<<(l-1));\n\t\t\t\titer(j, i, p) {\n\t\t\t\t\tint a=v[j],b=1ll*v[j+(1<<(l-1))]*w[l][inv][j-i]%MOD;\n\t\t\t\t\tv[j]=(a+b>=MOD?a+b-MOD:a+b);\n\t\t\t\t\tv[j+(1<<(l-1))]=(a<b?a+MOD-b:a-b);\n\t\t\t\t}\n\t\t\t}\n\t\tif(inv) rep(i, n) v[i] = 1ll*v[i]*minv[n]%MOD;\n\t}\n\t\n\tvoid mult(int *a, int as, int *b, int bs, int *o, bool construct, bool clean = 0, int th = 100000000) {\n\t\tint n = as+bs-1;\n\t\twhile(n - (n & (-n))) n += (n & (-n));\n\t\tif(construct) constructroot(n);\n\t\tconstructrev(n);\n\t\tntt(a, n, 0); ntt(b, n, 0);\n\t\trep(i, n) o[i] = 1ll*a[i]*b[i]%MOD;\n\t\tntt(o, n, 1);\n\t\titer(i, th, n) o[i] = 0;\n\t\tif(clean) rep(i, n) a[i] = b[i] = 0;\n\t}\n\n\tvoid cfn(int* a, int as, int *o) {\n\t\tstatic int tmp[524320];\n\t\tif(as == 1) { tmp[0] = a[0]; o[0] = qpow(a[0], MOD - 2); return; }\n\t\tcfn(a, (as+1)/2, o); int le = 0;\n\t\twhile((1 << le) < (as << 1)) le++;\n\t\tconstructrev(1 << le);\n\t\trep(i, as) tmp[i] = a[i];\n\t\titer(i, as, 1<<le) tmp[i] = o[i] = 0;\n\t\tntt(tmp, 1<<le, 0); ntt(o, 1<<le, 0);\n\t\trep(i, 1<<le) o[i] = 1ll * (MOD + (2 - 1ll * tmp[i] * o[i]) % MOD) * o[i] % MOD;\n\t\tntt(o, 1<<le, 1);\n\t\titer(i, as, 1<<le) o[i] = 0;\n\t}\n\n\tvoid deriv(int *a, int as, int *o) { rep1(i, as-1) { o[i-1] = 1ll * i * a[i] % MOD; } o[as-1] = 0; }\n\tvoid integ(int *a, int as, int *o) { for(int i=as-2; i>=0; i--) { o[i+1] = 1ll * minv[i+1] * a[i] % MOD; } o[0] = 0; }\n\n\tvoid ln(int *a, int as, int *o) {\n\t\tstatic int iv[524320]; \n\t\tcfn(a, as, iv); \n\t\tderiv(a, as, a);\n\t\tmult(iv, as, a, as, o, 0, 1, as);\n\t\tinteg(o, as, o);\n\t}\n\t\n\tvoid exp(int *a, int as, int *o) {\n\t\tstatic int tmp[524320], tmp2[524320], tmp3[524320];\n\t\tif(as == 1) { o[0] = 1; return; }\n\t\texp(a, (as+1)/2, o);\n\t\trep(i, as) tmp[i] = o[i], tmp3[i] = 0; \n\t\tln(tmp, as, tmp3);\n\t\trep(i, as) tmp3[i] = (MOD + a[i] - tmp3[i] + (i == 0)) % MOD, tmp2[i] = o[i];\n\t\tmult(tmp2, as, tmp3, as, o, 0, 1);\n\t}\n\t\n\tvoid pow(int *a, int as, int *o, int ex) {\n\t\tstatic int tmp[524320];\n\t\tln(a, as, tmp);\n\t\trep(i, as) tmp[i] = 1ll * tmp[i] * ex % MOD;\n\t\texp(tmp, as, o);\n\t}\n\t\n\tvoid init(int n) { constructroot(n); }\n}\n\nint ones[524320];\nint lnones[524320];\nint imed[524320];\nint imedk[524320];\nint ans[524320];\nint fac[524320];\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n, k; gi(n), gi(k);\n    n++;\n    int l = 1; while(l < (n << 1)) l <<= 1;\n    int p = max(n, k);\n    fac[0] = 1;\n    rep1(i, p) fac[i] = 1ll * fac[i-1] * i % poly::MOD;\n    poly::init(l);\n    rep(i, n) ones[i] = 1;\n    poly::ln(ones, n, lnones);\n    rep(i, n) imed[i] = lnones[i+1];\n    poly::pow(imed, n-1, imedk, k);\n    ll re = poly::qpow(fac[k], poly::MOD-2);\n    iter(i, k, n) ans[i] = 1ll * imedk[i-k] * re % poly::MOD;\n    rep(i, n) print(1ll * ans[i] * fac[i] % poly::MOD), pc(' ');\n}\n\n```",
        "postTime": 1592659266,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5409 \u3010\u7b2c\u4e00\u7c7b\u65af\u7279\u6797\u6570\u00b7\u5217\u3011"
    }
]