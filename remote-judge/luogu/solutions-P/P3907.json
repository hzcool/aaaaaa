[
    {
        "content": "\u697c\u4e0b\u6240\u8bf4\u7684n^2\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u771f\u7684\u7684\u6b63\u89e3\n\n\u8fd9\u91cc\u5355\u7ec4\u8be2\u95ee\u53ef\u4ee5\u505a\u5230O(n+m)\n\n\u5f00\u4e2abool vis[N]\u6570\u7ec4,vis[x]\u8868\u793ax\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\n\n\u5f00\u4e2aint sum[N]\u6570\u7ec4\uff0csum[x]\u8868\u793adfs\u4ece\u8d77\u70b9\u5230x\u7684\u8fb9\u6743\u5f02\u6216\u548c(dfs\u5e8f1~x\u7684\u5f02\u6216\u548c\uff0c\u7c7b\u4f3c\u524d\u7f00\u548c)\n\n\u5982\u679c\u8bbf\u95ee\u5230\u70b9u\uff0c\u6709\u6761\u5230\u70b9v\u7684\u51fa\u8fb9\n\n\u5982\u679c!vis[v]\uff0c\u70b9v\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u5c31\u53bbdfs\u5b83\n\n\u5982\u679cv\u88ab\u8bbf\u95ee\u8fc7\u4e86\uff0c\u5e76\u4e14\u82e5pre\u8868\u793au\u524d\u8bbf\u95ee\u7684\u90a3\u4e2a\u70b9\uff0cv!=pre\uff0c\u5219\u8bf4\u660edfs\u5e8f\u4ecb\u4e8ev\u5230u\u4e4b\u95f4\u7684\u70b9\u6784\u6210\u4e86\u4e00\u4e2a\u5708\n\n![](https://cdn.luogu.com.cn/upload/pic/45315.png)\n\n\u5047\u5982\u4ece4\u8fd9\u4e2a\u70b9\u5f00\u59cbdfs\uff0c\u5047\u5982\u52303\u518d\u52302\u518d\u52301\u65f6\uff0c1\u6709\u6761\u6307\u5411\u8bbf\u95ee\u8fc7\u7684\u70b93\u7684\u8fb9\uff0c\u5219\u57283\u4e4b\u540e\u88ab\u8bbf\u95ee\u4e14\u57281\u4e4b\u524d\u88ab\u8bbf\u95ee\u7684\u70b9\u4e0e1\u548c3\u6784\u6210\u4e86\u4e2a\u5708\uff0c\u5219\u8bf4\u660e(3,2,1)\u6784\u6210\u4e86\u4e00\u4e2a\u73af\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u73af\u7684\u5f02\u6216\u548c\u662f\u5426\u4e3a0\u5462\uff0c\u7528\u524d\u7f00\u5f02\u6216\u548c\u6570\u7ec4sum\u6765\u5b9e\u73b0\n\n![](https://cdn.luogu.com.cn/upload/pic/45316.png)\n\n\u7ea2\u8272\u90e8\u5206\u4ee3\u8868sum[3]\u5bf9\u5e94\u7b97\u7684\u8fb9\uff0c\u84dd\u8272\u90e8\u5206\u4ee3\u8868sum[1]\u7b97\u7684\u8fb9\n\n\u663e\u7136sum[1]\u53ef\u4ee5\u88ab\u62c6\u5206\u6210sum[3]\u7684\u90e8\u5206\u548c3-2-1\u7684\u90e8\u5206\n\n3-2-1\u7684\u90e8\u5206\u4fbf\u662f\u6211\u4eec\u8981\u7b97\u7684\u73af(1,2,3)\u7684\u4e00\u90e8\u5206\uff0c\u73af\u7684\u53e6\u4e00\u90e8\u5206\u5219\u5c31\u662f\u8fd4\u7956\u8fb91-3\u4e86\uff0csum[3]\u548csum[1]\u4ee5\u53ca\u8fb9\u67431-3\u6211\u4eec\u662f\u5df2\u77e5\u7684\uff0c\u8bbe3-2-1\u8def\u5f84\u7684\u5f02\u6216\u548c\u4e3aS,\u8fd4\u7956\u8fb9<1,3>\u7684\u8fb9\u6743\u4e3aW,\u73af(1,2,3)\u7684\u5f02\u6216\u548c\u4fbf\u662fW xor S\uff0c\u90a3\u4e48\u5982\u4f55\u6c42\u5f973-2-1\u7684\u5f02\u6216\u548cS\u5462\n\nsum[1]=S xor sum[3]\n\n\u5219sum[1] xor sum[3]=S xor sum[3] xor sum[3]=S xor (sum[3] xor sum[3])=S xor 0=S\n\n\u6240\u4ee5sum[1] xor sum[3]\u4e4b\u540e\u4fbf\u6c42\u5f97\u4e86S\n\n\u603b\u7ed3\uff1a\n\n\u8bb0\u5f55\u4ea6\u6216\u524d\u7f00\u548csum\uff0c\u6807\u8bb0\u6570\u7ec4vis\n\n\u901a\u8fc7vis\u627e\u5230\u8fd4\u7956\u8fb9<u,v>,sum[u]^sum[v]^w<u,v>\u4fbf\u662f\u73af\u7684\u5f02\u6216\u548c\uff0c\u5224\u65ad\u5176\u662f\u5426\u4e3a0\n\n\u82e5\u4e0d\u4e3a0\uff0c\u5219\u7ed3\u679c\u5c31\u662f\"No\"\u4e86\uff0c\u5168\u90e8return\u56de\u53bb\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing std::fill;\ntemplate<class type>inline void read(type &in)\n{\n    in=0;char ch=getchar();short fh=1;\n    while (ch<48||ch>57)fh=ch=='-'?-1:fh,ch=getchar();\n    while (ch>47&&ch<58)in=(in<<3)+(in<<1)+ch-48,ch=getchar();\n    in*=fh;\n}\nconst int N=51;\nbool vis[N],flag;\nint n,m,cnt,head[N],sum[N];\nstruct edge{int to,w,next;}e[N<<1];\ninline void addedge(int u,int v,int w)\n{\n\te[++cnt].next=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n\te[cnt].w=w;\n}\ninline void connect(int a,int b,int c)\n{\n\taddedge(a,b,c);\n\taddedge(b,a,c);\n}\ninline void init()\n{\n\tflag=cnt=0;\n\tfill(head+1,head+n+1,0);\n\tfill(vis+1,vis+n+1,0);\n}\ninline void dfs(int now,int pre,int s) //now\u4ee3\u8868\u5f53\u524d\u70b9,pre\u4ee3\u8868\u524d\u4e00\u4e2a\u70b9,s\u4ee3\u8868\u5f53\u524d\u7684\u524d\u7f00\u5f02\u6216\u548c(\u7528\u4e8e\u8d4b\u503csum\u6570\u7ec4)\n{\n\tif (flag)return;vis[now]=1;sum[now]=s;\n\tfor (int nxt,i=head[now];i&&!flag;i=e[i].next)\n\t\tif (!vis[nxt=e[i].to]) //\u8fd8\u6ca1\u8bbf\u95ee\u8fc7\u5c31\u53bb\u8bbf\u95ee\u5b83\n\t\t\tdfs(nxt,now,s^e[i].w);\n\t\telse\n\t\t\tif (nxt!=pre&&sum[now]^sum[nxt]^e[i].w) //\u4e0d\u4e3a0\u6253\u4e0a\u6807\u8bb0\u901a\u901areturn\n\t\t\t\t\treturn (void)(flag=1);\n}\nint main()\n{\n\tint t;read(t);\n\twhile (t--)\n\t{\n\t\tinit();  //\u8bb0\u5f97\u521d\u59cb\u5316\n\t\tread(n);read(m);\n\t\tint a,b,c;\n\t\twhile (m--)\n\t\t\tread(a),read(b),read(c),connect(a,b,c);\n\t\tfor (int i=1;i<=n;i++) //\u7531\u4e8e\u56fe\u53ef\u80fd\u4e0d\u8fde\u901a\uff0c\u8981\u5faa\u73af\u4e00\u904d\n\t\t\tif (!vis[i])\n\t\t\t\tif (!flag)dfs(i,0,0);\n\t\t\t\telse break;\n\t\tputs(flag?\"No\":\"Yes\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1543934568,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3907 \u3010\u5708\u7684\u5f02\u6216\u3011"
    },
    {
        "content": "## \u9898\u89e3\n\n\u56e0\u4e3a\u5f02\u6216\u64cd\u4f5c\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u4e0b\u6bcf\u4e00\u4f4d\u76f8\u5f53\u4e8e\u662f\u72ec\u7acb\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u6bcf\u4e00\u4f4d\u6765\u5206\u522b\u5904\u7406\u3002\u4e8e\u662f\u95ee\u9898\u7b80\u5316\u4e3a\u4e86\uff0c\u8fb9\u6743\u4ec5\u6709 $0$ \u4e0e $1$ \u7684\u60c5\u51b5\u65f6\uff0c\u662f\u5426\u5b58\u5728\u5f02\u6216\u548c\u4e3a $1$ \u7684\u73af\u3002\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\u4e0d\u4f1a\u5bf9\u73af\u7684\u5f02\u6216\u7ed3\u679c\u4ea7\u751f\u4efb\u4f55\u5f71\u54cd\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e $0$ \u8fb9\u6240\u8fde\u63a5\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec**\u7f29\u5230\u4e00\u4e2a\u70b9**\uff08\u4ec5\u7531 $0$ \u8fb9\u6240\u94fe\u63a5\u7684\u5b50\u56fe\uff0c\u7b49\u6548\u4e8e $1$ \u4e2a\u70b9\uff09\u3002\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7f29\u70b9\u4e4b\u540e\u53ef\u80fd\u5b58\u5728\u8fb9\u6743\u4e3a $1$ \u7684**\u81ea\u73af**\uff0c\u8fd9\u5bf9\u5e94\u7740\u539f\u6765\u4e00\u4e2a\u5f02\u6216\u548c\u4e3a $1$ \u7684\u73af\u3002\u90a3\u4e48\u95ee\u9898\u518d\u6b21\u7b80\u5316\u4e3a\u4e86\uff0c\u5bf9\u4e8e\u8fb9\u6743\u90fd\u4e3a $1$ \u7684\u56fe\uff0c\u662f\u5426\u5b58\u5728\u5f02\u6216\u548c\u4e3a $1$ \u7684\u8fb9\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u5224\u65ad\u8fd9\u5f20\u56fe\u662f\u5426\u5b58\u5728\u5947\u73af\u3002\n\n\u90a3\u4e48\u62ff\u4e8c\u5206\u56fe\u67d3\u8272\u8dd1\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\u5728\u8fd9\u4e2a\u505a\u6cd5\u4e2d\uff0c\u5408\u5e76\u8282\u70b9\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6 $O(\\alpha (n))$ \u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u5728\u8dd1\u4e8c\u5206\u56fe\u67d3\u8272\u7684\u65f6\u5019\u987a\u4fbf\u5408\u5e76\uff0c\u540e\u8005\u603b\u4f53\u4e0a\u53ea\u8981 $\\mathcal O(n+m)$ \u3002\u67d3\u8272\u8fc7\u7a0b\u540c\u6837\u662f $\\mathcal O(n+m)$ \u7684\u3002\n\n\u7531\u4e8e\u6211\u4eec\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u590d\u6742\u5ea6\u4e3a $\\mathcal O(T(n+m)\\log v)$ \u3002\u7531\u4e8e\u672c\u9898\u6570\u636e\u5f88\u5c0f\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u76f4\u63a5\u8dd1\u7684\u90bb\u63a5\u77e9\u9635\uff0c\u590d\u6742\u5ea6\u662f $\\mathcal O(Tn^2\\log v)$ \u7684\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define up(l,r,i) for(int i=l,END##i=r;i<=END##i;++i)\n#define dn(r,l,i) for(int i=r,END##i=l;i>=END##i;--i)\nusing namespace std;\ntypedef long long i64;\nconst int INF =2147483647;\nconst int MAXN=50+3;\nint n,m,C[MAXN],W[MAXN][MAXN],B[MAXN][MAXN],U[MAXN],V[MAXN],X[MAXN];\nqueue<int> q;\nint qread(){\n    int w=1,c,ret;\n    while((c=getchar())> '9'||c< '0') w=(c=='-'?-1:1); ret=c-'0';\n    while((c=getchar())>='0'&&c<='9') ret=ret*10+c-'0';\n    return ret*w;\n}\nint main(){\n    dn(qread(),1,T){\n        int n=qread(),m=qread();\n        up(1,m,i) U[i]=qread(),V[i]=qread(),X[i]=qread();\n        up(0,16,t){\n            up(1,n,i) C[i]=0; memset(B,0,sizeof(B));\n            up(1,m,i){\n                int u=U[i],v=V[i],w=X[i]; B[u][v]=B[v][u]=(w&(1<<t))+1;\n            }\n            while(!q.empty()) q.pop();\n            up(1,n,i) if(!C[i]){\n                q.push(i); C[i]=i; while(!q.empty()){\n                    int u=q.front(),w=C[u]; q.pop(); up(1,n,j){\n                        if(!B[u][j]) continue;\n                        int v=(B[u][j]==1?C[u]:C[u]%2+1);\n                        if(C[j]){if(C[j]!=v) goto no;}\n                        else C[j]=v,q.push(j);\n                    }\n                }\n            }\n        }\n        puts(\"Yes\"); goto yes; no: puts(\"No\"); yes:;\n    }\n    return 0;\n}\n```",
        "postTime": 1625930125,
        "uid": 330759,
        "name": "\u56e7\u4ed9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3907 \u3010\u5708\u7684\u5f02\u6216\u3011"
    },
    {
        "content": "\u90a3\u4e48\u5c31\u8fd9\u6837\u6c34\u4e00\u6ce2\u4e86\uff0c\u53ef\u80fd\u662f\u6570\u636e\u4e0d\u5f3a\u5427\uff0c\u6211\u5c31\u6bcf\u4e2a\u70b9\u5f00\u59cb\u5f80\u5916dfs\uff0c\n\n\u770b\u770b\u80fd\u4e0d\u80fd\u641c\u5230\u81ea\u5df1\uff0c\u5982\u679c\u80fd\u641c\u5230\u5c31\u5224\u4e00\u4e0b\u8fb9\u6743\u5f02\u6216\u548c\uff0c\u76f4\u63a5O(n^2)\u8fc7\u4e86\n\n\u5982\u679c\u8fd9\u4e2a\u505a\u6cd5\u6b63\u786e\u6027\u6ca1\u95ee\u9898\u7684\u8bdd\uff0c\u76f4\u63a5\u53ef\u4ee5\u5c06\u6570\u636e\u52a0\u5f3a\u52305000\u5427\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#define LL long long\n#define mod (LL)(1e9+7)\nusing namespace std;\n\nvector<pair<int,int> >G[100];\nint vis[100];\nbool check(int r,int v,int k){\n    for(int i=0;i<G[k].size();i++){\n        int kk=G[k][i].first;\n        int val=G[k][i].second;\n        if(kk==r&&(v^val)!=0)return false;\n        if(vis[kk])continue;\n        vis[kk]=true;\n        if(!check(r,v^val,kk))return false;\n    }\n    return true;\n}\nint main(){\n    int T;scanf(\"%d\",&T);\n    while(T--){\n        int n,m;scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=m;i++){\n            int a,b,c;scanf(\"%d%d%d\",&a,&b,&c);\n            G[a].push_back(make_pair(b,c));\n            G[b].push_back(make_pair(a,c));\n        }\n        bool flag=true;\n        for(int i=1;i<=n;i++){\n            memset(vis,false,sizeof(vis));\n            vis[i]=true;\n            flag&=check(i,0,i);\n            if(!flag)break;\n        }\n        if(flag)printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n        for(int i=1;i<=n;i++)G[i].clear();\n    }\n}\n```",
        "postTime": 1506043045,
        "uid": 29674,
        "name": "Anoxiacxy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3907 \u3010\u5708\u7684\u5f02\u6216\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u9898\u76ee\u7684\u610f\u601d\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff0c\u8ba9\u6211\u4eec\u5728\u56fe\u4e2d\u627e\u4e00\u4e2a\u73af\uff0c\u4f7f\u5f97\u73af\u7684\u5f02\u6216\u548c\u4e3a0\u5c31\u8f93\u51fa\u201cYes\u201d\u5426\u5219\u5c31\u8f93\u51fa\u201cNo\u201d\u3002\n\u601d\u8def\uff1a\u4e00\u770b\u6570\u636e50\uff0c\u4e0d\u7528\u591a\u60f3\uff0c\u76f4\u63a5\u66b4\u641c\u5c31\u5b8c\u4e86\u3002\u8be6\u7ec6\u7684\u89e3\u91ca\u4e0b\u9762\u7684\u5927\u4f6c\u7ed9\u51fa\u4e86\uff0c\u81ea\u5df1\u753b\u4e2a\u56fe\u4e5f\u80fd\u641e\u660e\u767d\uff0c\u5c31\u662f\u4e0d\u65ad\u7684\u8dd1\u56fe\uff0c\u77e5\u9053\u51fa\u73b0\u73af\uff0c\u7136\u540e\u5229\u7528\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u4e1c\u897f\u7b97\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u4e0b\u9762\u5927\u4f6c\u7528\u7684\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u7528\u5218\u6c5d\u4f73\u98ce\u683c\u5199\u7684\u4ee3\u7801\uff0c\u4f7f\u7528vector\u6765\u5b58\u50a8\u7684\u3002\uff08\u4e00\u822c\u90fd\u80fd\u8fc7\uff0c\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\u5728poj\u4e0a\u4f1a\u8d85\u65f6\uff09\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 55\n#define maxnode 2000005\n#define sigma_size 26\n#define md 12345678\n//#define INF 0x3f3f3f3f\n#define INF 10000000\nusing namespace std;\ntypedef long long LL;\n\nstruct Edge\n{\n    int from,to,dist;\n    Edge(int from=0,int to=0,int dist=0):from(from),to(to),dist(dist){};\n};\nvector<Edge> edges;\nvector<int> G[MAXN];\nbool vis[MAXN],flag;\nint d[MAXN];\nint n,m,t;\n\nvoid AddEdge(int from,int to,int dist)\n{\n    edges.push_back({from,to,dist});\n    edges.push_back({to,from,dist});\n    int mm=edges.size();\n    G[from].push_back(mm-2);\n    G[to].push_back(mm-1);\n}\n\nvoid dfs(int u,int fa,int sum)\n{\n    if(flag)\n        return ;\n    d[u]=sum,vis[u]=true;\n    for(int i=0;i<G[u].size();i++)\n    {\n        Edge &e=edges[G[u][i]];\n        int v=e.to;\n        if(v==fa)\n            continue;\n        if(!vis[v])\n        {\n            vis[v]=true;\n            dfs(v,u,sum^e.dist);\n            vis[v]=false;\n        }\n        else\n        {\n            if(!(d[u]^e.dist^d[v]))\n            {\n                flag=true;\n                break;\n            }\n        }\n    }\n}\n\nint main()\n{\n    int n,m,u,v,w;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d %d\",&n,&m);\n        edges.clear();\n        for(int i=0;i<=n;i++)\n            G[i].clear();\n        for(int i=1;i<=m;i++)\n        {\n              scanf(\"%d %d %d\",&u,&v,&w);\n              AddEdge(u,v,w);\n        }\n        flag=false;\n        for(int i=1;i<=n;i++)\n        {\n               vis[i]=true;\n               dfs(i,-1,0);\n               vis[i]=false;\n               if(flag)\n                  break;\n         }\n        if(flag)\n            printf(\"Yes\\n\");\n        else\n            printf(\"No\\n\");\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1574668420,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3907 \u3010\u5708\u7684\u5f02\u6216\u3011"
    }
]