[
    {
        "content": "\u7ebf\u6bb5\u6811\u52a0\u54c8\u5e0c\u7684\u5199\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m*log2(m))$\u3002\n\n\nkmp\u662f\u6709 $O(n)$ \u5199\u6cd5\u7684\u4f46\u662f\u6bd4\u8f83\u96be\u61c2\uff0c\u5982\u679c\u7528\u7ebf\u6bb5\u6811\u7684\u8bdd\u601d\u8def\u4f1a\u6bd4\u8f83\u6e05\u6670\n\n------------\nps\uff1a\u672c\u9898\u6bd4\u8f83\u5361\u7a7a\u95f4\u63a8\u8350\u4f7f\u7528unsigned int\u6216\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\n\n------------\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\u7b49\u957f\u7684\u4e24\u6bb5\u5b57\u7b26\u7684\u5339\u914d\uff0c\u5373$n$=$m$\u3002\n\n\u6b64\u65f6\u5c31\u662f\u5c06$m$\u4e2a\u6570\u6392\u5217\uff0c\u7136\u540e\u5c06\u4e0b\u6807\u54c8\u5e0c\u540e\u6bd4\u8f83\u3002\n\n\u5982\u679c\u5417$m $>$n$\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u4e0b\u6807\u5e76\u4e0d\u662fn\u7684\u6392\u5217\u7684\u60c5\u51b5\u3002\n\n\u5982${1,2,3,4,5,6}$\u8fd9\u6837\u7684\u6570\u7ec4\uff0c\u5f53$n$=$5$\u65f6\uff0c\u6211\u4eec\u8fd8\u8981\u5339\u914d$2$-$6$\u8fd9\u4e00\u6bb5\u662f\u5426\u4e0e$n$\u7684\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u6b64\u65f6\u7684\u4e0b\u6807\u4e5f\u662f$2$-$6$\uff0c\u4f46\u662f\u6211\u4eec\u7684\u4e0b\u6807\u65f6\u6309\u987a\u5e8f\u589e\u52a0\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u5c06$2$-$6$\u7684\u6240\u6709\u6570\u90fd\u51cf\u53bb  $1$  \u90a3\u4e48\u5c31\u4f1a\u662f\u6211\u4eec\u60f3\u8981\u7684\u6392\u5217\u3002\n\n\u867d\u7136\u51cf  $1$  \u662f $O(n)$ \u7684\uff0c\u4f46\u662f\u6211\u4eec\u4f53\u73b0\u5728\u54c8\u5e0c\u503c\u4e0a\u662f\u5c31\u662f\u51cf\u53bb\n$\\operatorname{sum}\\gets 1+base+base^2+base^3+....+base^{n-1}$\u3002\n\n\u90a3\u4e48\u663e\u7136\u8fd9\u6837\u7684$\\operatorname{sum}$\u662f\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u7684\uff0c\u540c\u7406\u6240\u6709\u4e0b\u6807\u51cf\u53bb  $2$  \u7684\u65f6\u5019\u51cf\u53bb\u8fd9\u4e2a$\\operatorname{sum}\\times 2$\u5373\u53ef\u3002\n\n\n~~\u6240\u4ee5\u8bf4\u54c8\u5e0c\u771f\u662f\u4e2a\u597d\u4e1c\u897f(\u0669(\u0e51\u275b\u1d17\u275b\u0e51)\u06f6~~\n\n------------\n\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u80fd\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c:\n\n1. \u5220\u9664\u548c\u589e\u52a0\u67d0\u4e2a\u5143\u7d20\uff0c\u5373\u80fd\u7ef4\u62a4\u957f\u5ea6\u4e3an\u7684\u6570\u5217\u7684\u7b54\u6848\u3002\n\n1. \u80fd\u591f\u7ef4\u62a4\u5143\u7d20\u6309\u5927\u5c0f\u6392\u5e8f\u3002\n\n1. \u80fd\u591f\u7ef4\u62a4\u54c8\u5e0c\u7684\u503c\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u7ebf\u6bb5\u6811\u80fd\u591f\u505a\u5230\u5417\uff1f\n\n\u80fd\u7684\uff0c\u56e0\u4e3a\u54c8\u5e0c\u6709\u53e6\u4e00\u4e2a\u4f18\u79c0\u7684\u6027\u8d28\u3002\n\n~~\u6240\u4ee5\u8fd8\u662f\u54c8\u5e0c\u5389\u5bb3\uff08\u6ed1\u7a3d\uff09~~\n\n\u5373\uff0c\u80fd\u6ee1\u8db3\u4e24\u6bb5\u54c8\u5e0cO\uff081\uff09\u5408\u5e76\uff0c\u53ea\u8981\u53f3\u8fb9\u7684\u4e00\u6bb5\u4e58\u4e0a$base$\u7684\u5de6\u8fb9\u4e00\u6bb5\u7684\u5143\u7d20\u7684\u4e2a\u6570\u6b21\u5e42,\u5373:$\\operatorname sump=sumls+sumrs\\times base^{sz[ls]}$\n\n------------\n\n\n\u90a3\u4e48\u5df2\u77e5\u53ef\u4ee5\u7ef4\u62a4\u54c8\u5e0c\u7684\u503c\u540e\uff0c\u6211\u4eec\u53ea\u9700\u80fd\u591f\u7ef4\u62a4\u5143\u7d20\u7684\u5927\u5c0f\u987a\u5e8f\uff0c\u8fd9\u6837\u5c31\u518d\u52a0\u4e0a\u4e00\u4e2a\u79bb\u6563\u5316\u3002\n\n\u5f00\u4e00\u4e2a\u5927\u5c0f\u4e3am\u7684\u7ebf\u6bb5\u6811\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\u7684\u5c31\u5c06\u5b83\u52a0\u5230\u7ebf\u6bb5\u6811\u4e0a\u5b83\u79bb\u6563\u5316\u540e\u7684\u4f4d\u7f6e\uff0c\u518d\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u80fd\u518d\u4fdd\u8bc1\u7ef4\u62a4\u5927\u5c0f\u987a\u5e8f\u7684\u540c\u65f6\u7ef4\u62a4\u54c8\u5e0c\u503c\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u53ef\u4ee5\u7528\u54c8\u5e0c+\u7ebf\u6bb5\u6811+\u79bb\u6563\u5316\u8fd9\u4e09\u4e2a\u5c0f\u77e5\u8bc6\u70b9\u62fc\u63a5\u5199\u6210\uff0c\u4e3b\u8981\u662f\u4ece\u54c8\u5e0c\u5207\u5165\uff0c\u518d\u60f3\u5230\u7528\u7ebf\u6bb5\u6811\u8fd9\u4e9b\u5de5\u5177\u6765\u7ef4\u62a4\u3002\n\n \n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u6ca1\u6709\u8bfb\u61c2\u89e3\u91ca\u53ef\u4ee5\u914d\u5408\u4ee3\u7801\u7406\u89e3\u4e00\u4e0b\u3002\n\n------------\n```cpp\n#include<bits/stdc++.h>\n#define N 1000005\n#define H 233\n#define ls p<<1\n#define rs p<<1|1\nusing namespace std;\nunsigned int n,m,a,A[N],B[N],t[N],T,sum,sz[N*3],res[N*3],tot;//res\u4e3a\u533a\u95f4\u7684\u54c8\u5e0c\u503c\uff0csz\u4e3a\u533a\u95f4\u7684\u5143\u7d20\u6570\u91cf\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}//\u4e0d\u5f00\u5feb\u8bfb\u53ef\u80fd\u4f1aT\u3002\u3002\nvoid update(int l,int r,int p,int x,int e,int k){\n\tif(l==r){\n\t\tres[p]=x;\n\t\tsz[p]=e;\n\t\treturn;//\u5c06\u5355\u4e2a\u5143\u7d20\u7684\u54c8\u5e0c\u503c\u548c\u6570\u91cf\u590d\u5236\u7ed9\u7ebf\u6bb5\u6811\n\t}\n\tint mid=l+r>>1;\n\tif(k<=mid)update(l,mid,ls,x,e,k);\n\telse update(mid+1,r,rs,x,e,k);\n\tsz[p]=sz[ls]+sz[rs];\n\tres[p]=res[ls]+t[sz[ls]]*res[rs];//\u7ebf\u6bb5\u6811up\u5411\u4e0a\u66f4\u65b0\n}\nbool cam(int d,int e){\n\treturn A[d]<A[e];\n}\nint main(){\n\tcin>>n>>m;\n\tt[0]=1;\n\tfor(int i=1;i<=n;i++){\n\t\ta=read();\n\t\tT=T+t[i-1]*a;\n\t\tt[i]=t[i-1]*H;//t\u4e3abase\u7684\u6b21\u5e42\n\t\tsum=sum+t[i-1];//sum\u4e3a\u51cf1\u7684\u503c\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tA[i]=read();\n\t\tB[i]=i;\n\t}\n\tsort(B+1,B+m+1,cam);\n\tfor(int i=1;i<=m;i++)A[B[i]]=i;//\u4e4b\u6240\u4ee5\u79bb\u6563\u5316\u5199\u8fd9\u4e48\u9634\u95f4\u4e5f\u662f\u4e3a\u4e86\u5361\u7a7a\u95f4\n\tfor(int i=1;i<=m;i++){\n\t\tupdate(1,m,1,i,1,A[i]);\n\t\tif(i>=n){\n\t\t\tint Y=res[1]-sum*(i-n);//Y\u8bb0\u5f55\u7684\u662f\u5f53\u524d\u7684\u7b54\u6848\n\t\t\tupdate(1,m,1,0,0,A[i-n+1]);//\u5c06\u8d85\u51fa\u90e8\u5206\u5220\u9664\n\t\t\tif(T==Y)B[++tot]=i-n+1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",tot);\n\tfor(int i=1;i<=tot;i++)printf(\"%d \",B[i]);\n}\n```\n~~\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u7ed9\u4e2a\u8d5e\u518d\u8d70\u5427QAQ~~",
        "postTime": 1599221058,
        "uid": 253552,
        "name": "\u591c\u4e34",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4696 \u3010[CEOI2011]Matching\u3011"
    },
    {
        "content": "# KMP + \u91cd\u65b0\u5b9a\u4e49\u76f8\u7b49\n\n[\u9898\u76ee\u4f20\u9001\u5668](https://www.luogu.org/problem/P4696)\n\n\u9898\u76ee\u5f88\u7ed5 \uff0c \u5176\u5b9e\u5c31\u662f\u4e00\u53e5\u8bdd \n\n#### \u7ed9\u4f60\u4e24\u4e2a\u6392\u5217 P \u3001H\uff0c \u6c42 H \u4e2d \u4efb\u610f\u4e00\u6bb5 \u8fde\u7eed\u7684 \u6392\u5217 \u4e0eP\u76f8\u540c\u7684\u5e8f\u5217 \n\n\u600e\u4e48\u6c42 \uff1f\uff1f\uff1f\uff1f\uff1f ~~\uff08\u767d\u95ee\uff09~~\n\n\u8fd9\u5f88\u660e\u663e\u662f\u4e00\u4e2a\u5339\u914d\u95ee\u9898\n\n\u5177\u4f53\u5f97\u8bf4 \uff1a \u4e24\u4e2a\u4e32\u8fdb\u884c\u5339\u914d \n\nKMP \u5c31\u662f \u5728\u7ebf\u6027\u65f6\u95f4 \u5b8c\u6210\u8fd9\u79cd\u9898\u76ee \u7684 \u7b97\u6cd5\n\n### \u8003\u8651\u600e\u4e48 KMP \uff1f\n\n\u5f88\u5bb9\u6613\u60f3\u5230 \uff0c \u5339\u914d\u6570\u5b57\u4e32 \u548c \u5339\u914d \u5b57\u7b26\u4e32\u7684\u5927\u81f4\u601d\u8def\u6ca1\u6709\u5dee\u522b \n\n\u5339\u914d \u5355\u7eaf\u7684\u6570\u5b57\u4e32 \u548c \u5339\u914d \u201c\u6392\u5217\u4e32\u201d \u7684\u5dee\u522b \u4ec5\u4ec5\u5728\u53ea\u662f\u5728 \u5224\u65ad\u76f8\u7b49 \u4e0a\u6709\u5dee\u522b\n\n### \u6240\u4ee5 \u5339\u914d \u201c\u6392\u5217\u4e32\u201d \u548c \u6bd4\u914d \u5b57\u7b26\u4e32\u7684\u5dee\u522b \u5728\u4e8e \u5224\u65ad\u76f8\u7b49\n\n\u73b0\u5728\u6240\u6709\u4eba\u5e94\u8be5\u90fd\u80fd\u7406\u89e3\u6807\u9898\u4e2d\u7684 \u201c\u91cd\u65b0\u5b9a\u4e49\u76f8\u7b49\u201d \u4e86 \u5427\n\n#### \u73b0\u5728\u96be\u70b9\u53d8\u4e3a \uff1a \u5982\u4f55\u91cd\u65b0\u5b9a\u4e49 \u201c\u76f8\u7b49\u201d\n\n\u4ee5\u524d\u770b\u5230\u8fc7\u4e00\u53e5\u8bdd \uff1a \u4f60\u5b9a\u4e49\u4e24\u4e2a\u4e8b\u7269\u7684\u67d0\u4e2a\u7279\u6027\u4e00\u6837\u65f6\uff0c\u79f0\u4e24\u4e2a\u4e8b\u7269\u76f8\u7b49\n\n   \u90a3\u4e48 \u4f60\u5b9a\u4e49\u7684\u6807\u51c6 \u80af\u5b9a\u662f\u4f60 \u6700\u770b\u91cd\u7684\n \nP \u662f \u4e00\u4e2a\u6392\u5217 \n\n\u4f55\u4e3a\u6392\u5217 \uff1f \u6392\u5e8f\u540e\u7684\u5217\u7684\u987a\u5e8f\n\n\u987a\u5e8f\u4e0e\u4ec0\u4e48\u6709\u5173 \uff1f \u201c\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570\u201d \u548c \u201c\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570 \u201d \n\n\u6240\u4ee5\u76f8\u7b49\u5c31\u88ab\u5b9a\u4e49\u4e3a \u5728\u4e00\u4e2a\u8303\u56f4\u5185 h[i] \u4e0e\u548c\u5176\u5339\u914d\u7684c[i] \u6709 \u4e00\u6837\u591a\u7684 \u201c\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570\u201d \u548c \u201c\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570 \u201d \n\n\u4e8e\u662f\u4e4e \u79bb\u6563\u5316 + \u6811\u72b6\u6570\u7ec4 \u7684\u89e3\u6cd5 \u5c31\u51fa\u73b0\u4e86 \n\n\u4f46\u5bf9\u4e8e\u6211\u8fd9\u79cd\u849f\u84bb\u800c\u8a00 \uff0c \u6570\u636e\u7ed3\u6784\u592a\u96be\u4e86\uff01\uff01\uff01 \n\n\u6240\u4ee5\u6211\u4eec\u6362\u4e00\u79cd\u89d2\u5ea6 \n\n\u5176\u5b9e\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230 \n\nc[i] \u82e5\u6ee1\u8db3 p[i] \u7684\u6392\u5217\uff08\u5373 c[i] \u5728\u8fd9\u4e00\u6bb5\u8303\u56f4\u5185\u6392\u5728\u4e0e p[i] \u540c\u6837\u7684\u4f4d\u7f6e\uff09 \n\n\u4e5f\u662f\u80fd\u7b97\u4f5c\u5339\u914d\u7684\n\n\u4e8e\u662f\u6211\u4eec\u9884\u5904\u7406\u5904 P \u6392\u5217\u4e2d p[i] \u7684 \u524d\u9a71\u548c\u540e\u7ee7 \u7684\u4f4d\u7f6e\n\n\u5339\u914d\u65f6 \uff0c\u5224\u65ad c[i] \u662f\u5426 \u5927\u4e8e\uff08\u6216\u5c0f\u4e8e\uff09 \u4ed6\u6240\u8981\u5339\u914d\u7684 p[i] \u7684 \u524d\u9a71 \uff08\u6216\u540e\u7ee7\uff09 \n\n\u8fd9\u6837\u7684\u5339\u914d\u662f O(1) \u7684 \n\n~~\u4f3c\u4e4e\u6bd4 \u6811\u72b6\u6570\u7ec4\u8fd8\u5feb~~\n\n\u5c31\u5f62\u6210\u4e86\u8fd9\u4e2a\u7384\u5b66\u7b97\u6cd5 \n\n\u8bf7\u5404\u4f4d\u4ed4\u7ec6\u611f\u6027\u7406\u89e3 \n\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 1000005\nint a[MAXN],b[MAXN],c[MAXN],p[MAXN];\nint pre[MAXN],net[MAXN],L[MAXN],R[MAXN];\nint ans[MAXN];\nint n,m,k;\nbool check(int P[],int u,int v)\n{\n\treturn P[v+L[u]]<=P[v] && P[v+R[u]]>=P[v];\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&b[i]);\n\t\ta[b[i]]=i;\n\t\tpre[i]=i-1;\n\t\tnet[i]=i+1;\n\t}\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tint j=a[i];\n\t\tif (pre[j]) L[i]=b[pre[j]]-i;\n\t\tif (net[j]<=n) R[i]=b[net[j]]-i;\n\t\tpre[net[j]]=pre[j];\n\t\tnet[pre[j]]=net[j];\n\t}\n\tfor(int i=2,j=0;i<=n;i++)\n\t{\n\t\twhile (j && !check(a,j+1,i)) j=p[j];\n\t\tif (check(a,j+1,i)) j++;\n\t\tp[i]=j;\n\t}\n\tfor(int i=1;i<=m;i++) scanf(\"%d\",&c[i]);\n\tfor(int i=1,j=0;i<=m;i++)\n\t{\n\t\twhile (j && !check(c,j+1,i)) j=p[j];\n\t\tif (check(c,j+1,i)) j++;\n\t\tif (j==n)\n\t\t{\n\t\t\tans[++k]=i-n+1;\n\t\t\tj=p[j];\n\t\t} \n\t}\n\tprintf(\"%d\\n\",k);\n\tif (k==0)\n\t{\n\t\tputs(\"\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=k;i++) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```\n   \n\u5e0c\u671b\u8fd9\u9053\u9898\u80fd\u8ba9\u4f60\u66f4\u597d\u7406\u89e3KMP \n\n\u7406\u89e3 \u4e8b\u7269\u95f4\u7684\u76f8\u7b49\u5173\u7cfb\n\n\u7406\u89e3\u5339\u914d\u7684\u771f\u8c1b",
        "postTime": 1566196186,
        "uid": 118846,
        "name": "maowuyou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4696 \u3010[CEOI2011]Matching\u3011"
    },
    {
        "content": "[$\\Large\\texttt{P4696}$](https://www.luogu.com.cn/problem/P4696)\n\n[\u66f4\u597d\u7684\u4f53\u9a8c](https://www.cnblogs.com/RedreamMer/p/14813788.html)\n\n\u6807\u7b7e\uff1aKMP\uff0c\u94fe\u8868\u7ed3\u6784\n\n## \u524d\u8a00\n\n\u6211\u9760\u7f51\u4e0a\u600e\u4e48\u5168\u662f\u5e26 $\\log$ \u7684\u505a\u6cd5\uff0c\u770b\u9898\u76ee\u9650\u5236\u5e94\u8be5\u662f\u653e\u4e86\u4e00\u652f $\\log$\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u592a\u83dc\u6ca1\u60f3\u51fa\u6765\uff0c\u6240\u4ee5\u6765\u5199 $\\mathcal O(n)$ \u7684\u9898\u89e3\u4e86\u3002\n\n~~\u4f3c\u4e4e\u5e38\u6570\u6bd4\u8f83\u5c0f\u3002~~\n\n## \u9898\u610f\n\n\u4e0d\u505a\u8d58\u8ff0\uff0c\u6ce8\u610f\u7ed9\u5b9a\u7684\u5e8f\u5217 $\\{p\\}$ \u5176\u5b9e\u662f\u7c7b\u4f3c\u4e8e\u540e\u7f00\u6570\u7ec4\u4e2d\u7684 sa \u6570\u7ec4\uff0c\u4e0d\u662f\u6bcf\u4e2a\u4e0b\u6807\u7684\u6392\u540d\u3002\n\n## \u601d\u8def\n\n\u5b50\u4e32\u5339\u914d\u95ee\u9898\uff0c\u8f93\u51fa\u65b9\u6848\uff0c\u54c7\u8fd9\u9650\u5236\u6761\u4ef6\uff0c\u8fd9\u597d $\\mathcal O(n)$ \u554a\uff0c\u800c\u4e14\u662f\u9010\u5b57\u5339\u914d\uff0c\u611f\u89c9\u5f88\u50cf KMP\u3002\n\n\u6211\u4eec\u5c31\u5148\u5411 KMP \u65b9\u5411\u8003\u8651\uff0c\u6ce8\u610f\u5230\u8f93\u5165\u5e8f\u5217 $\\{p\\}$ \u662f\u4ee5\u6392\u540d\u4e3a\u4e0b\u6807\uff0c\u6ca1\u6709\u610f\u4e49\uff0c\u8f6c\u6362\u6210\u6bcf\u4e2a\u4e0b\u6807\u7684\u6392\u540d\u6570\u7ec4\uff0c\u6ce8\u610f\u6b64\u65f6\u8fd8\u662f\u4e00\u4e2a\u6392\u5217\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u6210\u529f\u7684\u5339\u914d\u662f\u600e\u6837\u7684\uff0c\u5373\u5e8f\u5217 $\\{a\\}$ \u7684\u67d0\u4e00\u4e2a\u5b50\u4e32\u79bb\u6563\u5316\u6392\u5e8f\u540e\u5bf9\u5e94\u7684\u4e0b\u6807\u662f\u548c\u5e8f\u5217 $\\{p\\}$ **\u5b8c\u5168\u4e00\u81f4**\u7684\u3002\n\n\u90a3\u6211\u4eec\u5982\u4f55\u91cd\u65b0\u5b9a\u4e49\u8fd9\u4e2a \u201c\u5339\u914d\u201d \u548c \u201c\u4e00\u81f4\u201d\uff0c\u5982\u4f55\u5728 KMP \u5efa\u7acb\u6b63\u786e\u7684 next \u6570\u7ec4\u4e2d\u8fdb\u884c\u6700\u4f18\u7684\u6bd4\u8f83\u64cd\u4f5c\uff1f\n\n\u5728\u5efa\u7acb next \u7684\u6570\u7ec4\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u6211\u4eec\u8003\u8651\u5230\u4e0b\u6807 $i$ \u65f6\uff0c\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u50cf\u666e\u901a\u7684 KMP \u601d\u8def\u5df2\u7ecf\u7ee7\u627f\u4e86 $i - 1$ \u7684\u6700\u4f18\u5339\u914d\uff0c\u6211\u4eec\u6bd4\u8f83\u4e24\u4e2a $i$ \u548c $next[i] + 1$ \uff08\u5728\u6bd4\u8f83\u5e8f\u5217 $p[1,\\dots,next[i - 1] + 1]$ \u548c $p[i - next[i - 1], \\dots, i]$ \u7684\u610f\u4e49\u4e0b\uff09\u662f\u5426\u76f8\u7b49\uff0c\u5373\u6bd4\u8f83 $p[next[i - 1] + 1]$ \u5728\u5176\u524d\u7f00\u5e8f\u5217\u7684\u6392\u540d\u548c $p[i]$ \u5728\u5176\u540e\u7f00\u5e8f\u5217\u7684\u6392\u540d\u662f\u5426\u76f8\u7b49\uff0c\u5426\u5219\u4e00\u76f4\u8df3 next\uff0c\u6b63\u786e\u6027\u663e\u7136\u662f\u5bf9\u7684\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u662f\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u505a\u4e86\u3002\n\n\u5bf9\u4e8e $\\mathcal O(n)$ \u7684\u505a\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u597d\u5730\u5229\u7528\u4e00\u4e2a\u6027\u8d28\uff1a\u5df2\u5339\u914d\u7684\u4e24\u4e2a\u5b57\u4e32\u6392\u540d\u662f\u5b8c\u5168\u76f8\u7b49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6bd4\u8f83\u4e00\u4e0b $i$ \u7684\u524d\u9a71\u548c\u540e\u7ee7\u4e0e $next[i - 1] + 1$ \u7684\u524d\u9a71\u548c\u540e\u7ee7\uff08\u76f8\u5bf9\u4e8e\u5206\u522b\u7684\u5339\u914d\u5b50\u4e32\u7684\uff09\u4f4d\u7f6e\u662f\u5426\u76f8\u7b49\uff0c\u8fd9\u6837\u540c\u6837\u4fdd\u8bc1\u4e86\u4e24\u8005\u5728\u5339\u914d\u5b50\u4e32\u7684\u76f8\u5bf9\u4f4d\u7f6e\u3002\n\n\u800c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u5f97\u6a21\u5f0f\u4e32\u7684\u524d\u9a71\u548c\u540e\u7ee7\u5373\u53ef\uff0c\u5c06\u5176\u62ff\u6765\u6bd4\u8f83\u5373\u53ef\u3002\n\n\uff08\u8fd9\u91cc\u7684\u524d\u9a71\u548c\u540e\u7ee7\u662f\u6307\u503c\u5c0f\u4e8e/\u5927\u4e8e\u67d0\u4e2a\u6570\uff0c\u4e14\u4e0b\u6807\u5c0f\u4e8e\u67d0\u4e2a\u6570\uff09\n\n## \u4ee3\u7801\n\n-O2 854ms \u76ee\u524d\u6700\u4f18\u89e3\u3002\n\n```cpp\nint a, b, s[2][N + 5], L[N + 5], R[N + 5], nxt[N + 5], p[N + 5], l[N + 5], r[N + 5];\nvector<int> ans;\n\nbool check(int o, int i, int j, int mn, int mx) {\n\tint res = 1;\n\tif (mn) res &= (s[o][i - (j - mn)] < s[o][i]);\n\tif (mx) res &= (s[o][i - (j - mx)] > s[o][i]);\n\treturn res;\n}\n\nvoid init() {\n\trep(i, 1, a) l[i] = p[s[0][i] - 1], r[i] = p[s[0][i] + 1];\n\tper(i, a, 1) {\n\t\tL[i] = l[i];\n\t\tR[i] = r[i];\n\t\tl[r[i]] = l[i];\n\t\tr[l[i]] = r[i];\n\t}\n\tint j = 0;\n\trep(i, 2, a) {\n\t\twhile (j && !check(0, i, j + 1, L[j + 1], R[j + 1])) j = nxt[j];\n\t\tif (check(0, i, j + 1, L[j + 1], R[j + 1])) ++j;\n\t\tnxt[i] = j;\n\t}\n}\n\nsigned main() {\n\t// freopen(\"in1.in\", \"r\", stdin);\n\t// freopen(\"out.out\", \"w\", stdout);\n\ta = read();\n\tb = read();\n\trep(i, 1, a) p[i] = read();\n\trep(i, 1, a) s[0][p[i]] = i;\n\trep(i, 1, b) s[1][i] = read();\n\tinit();\n\tint j = 0;\n\trep(i, 1, b) {\n\t\twhile (j && !check(1, i, j + 1, L[j + 1], R[j + 1])) j = nxt[j];\n\t\tif (check(1, i, j + 1, L[j + 1], R[j + 1])) ++j;\n\t\tif (j == a) ans.PB(i - a + 1), j = nxt[j];\n\t}\n\tprintf(\"%d\\n\", siz(ans));\n\trep(i, 0, siz(ans) - 1) printf(\"%d \", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1622015674,
        "uid": 184549,
        "name": "RedreamMer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4696 \u3010[CEOI2011]Matching\u3011"
    },
    {
        "content": "## \u524d\u8a00\n\n\u5f88\u9002\u5408\u7ec3\u4e60 KMP \u7684\u4e00\u9053\u7d2b\u3002\n\n\u672c\u6587\u94fe\u8868\u4f7f\u7528\u94fe\u8868\u7684\u505a\u6cd5\u3002\n\n## \u89e3\u6cd5\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u8bfb\u5165\u7684\u5e8f\u5217 $ p $ \u5e76\u4e0d\u65b9\u4fbf\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5c06 $ p $ \u8fdb\u884c\u6539\u52a8\uff0c\u4ece\u800c\u6210\u4e3a\u4e00\u4e2a\u6a21\u5f0f\u4e32 $ v $ \u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u9047\u5230\u4e86\u4e00\u4e2a\u68d8\u624b\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u5982\u4f55\u6c42\u51fa\u6bcf\u4e2a\u6570\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u6709\u90e8\u5206\u9898\u89e3\u4f7f\u7528\u4e86\u6811\u72b6\u6570\u7ec4\uff0c\u800c\u94fe\u8868\u540c\u6837\u53ef\u4ee5\u89e3\u51b3\u3002\u4ece\u5927\u5230\u5c0f\uff0c\u8bb0\u5f55\u51fa\u6bcf\u4e00\u4e2a\u6570\u5b57 $ v_i $ \u7684\u524d\u9a71 $ v_i-1 $ \u5728 $ p $ \u4e2d\u7684\u4f4d\u7f6e\uff0c\u4e0e\u540e\u7ee7 $ v_i+1 $ \u5728 $ p $ \u4e2d\u7684\u4f4d\u7f6e\u3002\n\n\u6700\u540e\u4fbf\u53ef\u76f4\u63a5\u4f7f\u7528 KMP \u6c42\u89e3\uff0c\u53ea\u9700\u66f4\u6539\u4e00\u4e0b\u5224\u65ad\u4e24\u4e2a\u4f4d\u7f6e\u662f\u5426\u80fd\u63a5\u4e0a\u7684\u51fd\u6570\uff1a\n```cpp\nbool check1(int n1,int n2)\n{\n\tbool flag=true;\n\tif(les[n1]&&val[n2-(n1-les[n1])]>=val[n2])flag=false;\n\tif(mor[n1]&&val[n2-(n1-mor[n1])]<=val[n2])flag=false;\n\treturn flag;\n}\nbool check2(int n1,int n2)\n{\n\tbool flag=true;\n\tif(les[n1]&&h[n2-(n1-les[n1])]>=h[n2])flag=false;\n\tif(mor[n1]&&h[n2-(n1-mor[n1])]<=h[n2])flag=false;\n\treturn flag;\n}\n```\n\u6700\u540e\u662f\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<iomanip>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,m;\nint p[1000001],h[1000001];\nint pos[1000001],val[1000001];\nint les[1000001],mor[1000001];\nint nex[1000001];\nint ans,ge[1000001];\nstruct Node\n{\n\tint next,prev;\n}node[1000001];\nbool check1(int n1,int n2)\n{\n\tbool flag=true;\n\tif(les[n1]&&val[n2-(n1-les[n1])]>=val[n2])flag=false;\n\tif(mor[n1]&&val[n2-(n1-mor[n1])]<=val[n2])flag=false;\n\treturn flag;\n}\nbool check2(int n1,int n2)\n{\n\tbool flag=true;\n\tif(les[n1]&&h[n2-(n1-les[n1])]>=h[n2])flag=false;\n\tif(mor[n1]&&h[n2-(n1-mor[n1])]<=h[n2])flag=false;\n\treturn flag;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&p[i]);\n\t\tval[p[i]]=i;\n\t}\n\tfor(int i=1;i<=m;i++)scanf(\"%d\",&h[i]);\n\tfor(int i=1;i<=n;i++)pos[i]=p[i];\n\tfor(int i=1;i<=n;i++)node[i].next=i+1,node[i].prev=i-1;\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tles[i]=pos[node[val[i]].prev];\n\t\tmor[i]=pos[node[val[i]].next];\n\t\tnode[node[val[i]].next].prev=node[val[i]].prev;\n\t\tnode[node[val[i]].prev].next=node[val[i]].next;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint j=nex[i-1];\n\t\twhile(j>0&&check1(j+1,i)==false)j=nex[j];\n\t\tif(check1(j+1,i)==true&&j+1<i)j++;\n\t\tnex[i]=j;\n\t}\n\tint j=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\twhile(j>0&&check2(j+1,i)==false)j=nex[j];\n\t\tif(check2(j+1,i)==true)j++;\n\t\tif(j==n)\n\t\t{\n\t\t\tj=nex[j];\n\t\t\tge[++ans]=i-n+1;\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\tfor(int i=1;i<=ans;i++)printf(\"%d \",ge[i]);\n\treturn 0;\n}\n```",
        "postTime": 1643881530,
        "uid": 556042,
        "name": "Iratis",
        "ccfLevel": 7,
        "title": "P4696-Matching"
    },
    {
        "content": "kmp\u641e\u4e00\u641e\n\n\u627e\u5230**\u8f6c\u5316\u540e\u7684p\u6392\u5217**\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c**\u4e4b\u524d**\u6bd4\u5b83\u5927\u7684\u6700\u5c0f\u7684\u4f4d\u7f6e\u548c\u6bd4\u5b83\u5c0f\u7684\u6700\u5927\u7684\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u5c31kmp\u641e\u4e00\u641e\u5c31\u597d\u5566\u3002\u53ea\u4e0d\u8fc7\u539f\u6765\u7684kmp\u662f\u5224\u65ad\u5b57\u6bcd\u76f8\u540c\uff0c\u73b0\u5728\u662f\u5224\u65ad\u653e\u8fd9\u4e2a\u6570\u5408\u4e0d\u5408\u6cd5\uff0c\u5176\u4f59\u7684\u76f8\u540c\u3002\n\n\u8fd9\u4e2a\u65b9\u6cd5\u662f\u7ebf\u6027\u7684\n\n```\n#include<cstdio>\nconst int N=1e6+50;\ninline void rad(int &_){\n    static char ch;\n    while(ch=getchar(),ch<'0'||ch>'9');_=ch-48;\n    while(ch=getchar(),ch<='9'&&ch>='0')_=_*10+ch-48;\n}\nint Out[10],out;\ninline void prt(int u){\n\tif(!u)++out;\n\telse for(;u;Out[++out]=u%10,u/=10);\n\tfor(;out;putchar(48+Out[out--]));\n\tputchar(' ');\n}\nint n,m,x,ans;\nint a[N],b[N],c[N],kmp[N];\nint pre[N],net[N],L[N],R[N],Ans[N];\ninline bool get(int *p,int u,int v){\n\treturn (!L[u]||p[v+L[u]]<p[v])&&(!R[u]||p[v+R[u]]>p[v]);\n    //\u5224\u65ad\u5408\u4e0d\u5408\u6cd5\n}\nint main(){\n\trad(n);rad(m);\n\tfor(int i=1;i<=n;i++){\n\t\trad(b[i]);a[b[i]]=i;\n\t\tpre[i]=i-1;net[i]=i+1;\n\t}\n    //a[]\u5373\u4e3a\u8f6c\u5316\u540e\u7684p\u6570\u7ec4\n\tfor(int i=n;i>=1;i--){\n\t\tx=a[i];\n\t\tif(pre[x])L[i]=b[pre[x]]-i;\n\t\tif(net[x]<=n)R[i]=b[net[x]]-i;\n\t\tpre[net[x]]=pre[x];\n\t\tnet[pre[x]]=net[x];\n\t}\n\t//\u53cc\u5411\u94fe\u8868\u6c42\u6bd4\u5b83\u5927\u7684\u6700\u5c0f\u7684\u4f4d\u7f6e\u548c\u6bd4\u5b83\u5c0f\u7684\u6700\u5927\u7684\u4f4d\u7f6e\n\tx=0;\n\tfor(int i=2;i<=n;i++){\n\t\twhile(x&&!get(a,x+1,i))x=kmp[x];\n\t\tif(get(a,x+1,i))x++;\n\t\tkmp[i]=x;\n\t}\n    //\u5148\u81ea\u8eab\u5339\u914d\n\tx=0;\n\tfor(int i=1;i<=m;i++)rad(c[i]);\n\tfor(int i=1;i<=m;i++){\n\t\twhile(x&&!get(c,x+1,i))x=kmp[x];\n\t\tif(get(c,x+1,i))x++;\n\t\tif(x==n)Ans[++ans]=i-n+1,x=kmp[x];\n\t}\n    //\u7136\u540e\u4e0eh\u4e32\u5339\u914d\n\tprt(ans);putchar('\\n');\n\tfor(int i=1;i<=ans;i++)prt(Ans[i]);\n}\n```",
        "postTime": 1550822088,
        "uid": 50092,
        "name": "da32s1da",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4696 \u3010[CEOI2011]Matching\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u633a\u5999\u7684\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6570\u7ec4 $a$\uff0c\u5b58\u7684\u662f\u8f6c\u5316\u540e\u7684 $p$ \u6570\u7ec4\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u5e8f\u5217 ${2,1,5,3,4}$ \u8f6c\u5316\u4e3a ${2,1,4,5,3}$ \uff0c\u5206\u522b\u5bf9\u5e94\u7684\u662f $h$ \u6570\u7ec4\u4e2d\u7684 ${6,3,8,1,2,7}$\u3002\n\n\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```cpp\n\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tp[i]=read();\n\t\ta[p[i]]=i;\n\t\tpre[i]=i-1;\n\t\tnet[i]=i+1;\n\t\t\n\t}\n```\n\n\u7136\u540e\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u7528\u5b83\u6765\u6c42\u6bd4\u5e8f\u5217\u4e2d\u7684\u67d0\u4e2a\u6570\u5927\u7684\u6700\u5c0f\u4f4d\u7f6e\u548c\u6bd4\u5b83\u5c0f\u7684\u6700\u5927\u4f4d\u7f6e\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u7528\u679a\u4e3e\u6574\u4e2a\u3002\u53ea\u9700\u8981\u5224\u65ad\u6bcf\u4e00\u4e2a\u6570\u662f\u5426\u6bd4\u5b83\u524d\u4e00\u4e2a\u4f4d\u7f6e\u5927\uff0c\u540e\u4e00\u4e2a\u4f4d\u7f6e\u5c0f\u3002\u5373\u5927\u4e8e\u5b83\u7684\u524d\u9a71\uff0c\u5c0f\u4e8e\u5b83\u7684\u540e\u7ee7\u3002\n\n\u4e4b\u540e\u5c31\u662f\u4e00\u4e2a\u7c7b\u4f3c kmp \u7684\u601d\u8def\u3002\n\n\u5728 kmp \u7684\u677f\u5b50\u4e2d\uff0c\u6211\u4eec\u6bd4\u5bf9\u7684\u662f\u5b50\u4e32\u4e0e\u8981\u5339\u914d\u7684\u4e32\u662f\u5426\u76f8\u540c\u3002\u800c\u73b0\u5728\u6211\u4eec\u5224\u65ad\u7684\u662f\u8be5\u5b50\u4e32\u662f\u5426\u5408\u6cd5\u3002\n\n\u5176\u4f59\u4e0e kmp \u57fa\u672c\u4e00\u81f4\u3002\n\n```cpp\n\tint j=0;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\twhile(j>0 and !check(a,j+1,i)) j=kmp[j];\n\t\tif(check(a,j+1,i)) j++;\n\t\tkmp[i]=j;\n\t}\n\tj=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\twhile(j>0 and !check(h,j+1,i)) j=kmp[j];\n\t\tif(check(h,j+1,i)) j++;\n\t\tif(j==n)\n\t\t{\n\t\t\tqwq[++ans]=i-n+1;\n\t\t\tj=kmp[j];\n\t\t}\n\t}\n    \n```\n\n\u5176\u4f59\u8bf7\u81ea\u884c\u5b9e\u73b0\u3002\u5982\u679c\u6709\u95ee\u9898\uff0c\u53ef\u4ee5\u79c1\u4fe1\u6211\u8981\u5b8c\u6574\u4ee3\u7801\u3002\n\n",
        "postTime": 1642823737,
        "uid": 369904,
        "name": "zplqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4696 [CEOI2011]Matching"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u662f\u771f\u7684\u88ab\u6de6\u4e86\u2026\u2026   \n\n\u9996\u5148\u6211\u4eec\u6b63\u5e38\u4eba\u60f3\u6cd5\uff1a\u66b4\u529b $O(nm)$ \u6765\u4e00\u53d1\u3002   \n\n\u7136\u800c $T$ \u98de\u4e0d\u7528\u8bf4\u4e86\u3002   \n\n\u53c8\u89c2\u5bdf\u4e86\u4e00\u4f1a\u513f\u540e\uff0c\u7a81\u7136\u53d1\u73b0\u8fd9\u9053\u9898\u6709\u70b9\u50cf $KMP$ \u3002\u5982\u679c\u7528 $KMP$ \u7684\u7279\u6b8a\u5339\u914d\u6a21\u578b\u89e3\u51b3\u662f\u5426\u53ef\u4ee5\u89e3\u51b3\uff1f     \n\n\u7ecf\u8fc7\u624b\u52a8\u6a21\u62df\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5176\u5b9e\u786e\u5b9a\u5f53\u524d\u5339\u914d\u7684\u72b6\u6001\u5c31\u662f\u76f8\u5bf9\u4f4d\u7f6e\uff0c\u5982\u679c\u76f8\u5bf9\u4f4d\u7f6e\u76f8\u540c\u90a3\u4e0d\u5c31\u5339\u914d\u8d77\u4e86\uff1f    \n\n\u7136\u800c\u76f8\u5bf9\u4f4d\u7f6e\u53c8\u548c\u4e00\u4e2a\u6570\u5728\u4e00\u4e2a\u5e8f\u5217\u7684\u6392\u540d\u6709\u5173\uff0c\u6240\u4ee5\u6211\u5f88\u5feb\u5c31\u60f3\u51fa\u6765\u4e86\u4e00\u4e2a\u601d\u8def\uff1a\u7ef4\u62a4\u8fd9\u4e2a\u6570\u5728\u5f53\u524d\u67e5\u8be2\u91cc\u7684\u6392\u540d\u3002    \n\n\u518d\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c\u8001 $1e6$ \u4e86\u3002\u679c\u65ad\u79bb\u6563\u540e\u642c\u6811\u72b6\u6570\u7ec4\u5927\u54e5\u3002    \n\n\u7136\u800c\u6b64\u65f6\u6211\u7a81\u7136\u53d1\u73b0\uff0c\u6211\u4eec $KMP$ \u7684\u5339\u914d\u662f\u9700\u8981\u4e00\u4e2a\u9636\u6bb5\u6027\uff0c    \n\n\u62bd\u8c61\u4e00\u70b9\u6765\u8bf4\u9700\u8981\u201c\u9012\u63a8\u201d\u4e0a\u6765\u7684\u554a\uff0c\u53ef\u662f\u6211\u4eec\u6b64\u65f6\u7ef4\u62a4\u6392\u540d\u9700\u8981\u77e5\u9053\u5f53\u524d\u533a\u95f4\u7684\u6240\u6709\u6570\u554a\uff0c\u7136\u540e\u6211\u5c31\u88ab\u5361\u6b7b\u4e86\u3002    \n\n\u773c\u770b\u5df2\u7ecf\u60f3\u8d85\u65f6\u4e86\uff0c\u679c\u65ad\u5f00\u4e86\u9898\u89e3\uff0c\u770b\u5230\u6709\u4e00\u7bc7\u6811\u72b6\u6570\u7ec4\u7684 $TJ$ \u8fd8\u662f\u633a\u5f00\u5fc3\u7684\uff0c\u7ec8\u4e8e\u80fd\u81ea\u5df1\u72ec\u7acb\u60f3\u5bf9\u9ed1\u9898\u7b97\u6cd5\u4e86\u2026\u2026    \n\n\u8bfb\u4e86\u524d\u9762\u624d\u53d1\u73b0\u81ea\u5df1\u786e\u5b9e\u592a\u83bd\u4e86\uff0c\u6ca1\u5206\u6790\u6e05\u695a\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u8981\u77e5\u9053 $p$ \u6570\u7ec4\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\u5c31 $OK$ \u4e86\u3002   \n\n\u8fd9\u5c31\u5f88\u6709\u610f\u601d\u4e86\uff0c\u4e5f\u8bb8\u5f88\u591a\u4eba\u5728\u8fd9\u91cc\u4f1a\u6709\u7591\u60d1\u3002    \n\n\u6211\u4eec\u4ee5\u6837\u4f8b\u5148\u4e3e\u4f8b\u5b50\u8bd5\u8bd5\uff1f   \n\n```\n2 1 5 3 4 \n0 0 2 2 3\n```\n\u4e0a\u4e00\u884c\u4e3a $p$ \u6570\u7ec4\uff0c\u4e0b\u4e00\u884c\u5c31\u662f\u6bcf\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\u3002    \n\n\u8fd9\u91cc\u6211\u7a0d\u5fae\u8bb2\u7684\u597d\u7406\u89e3\u4e00\u70b9\uff0c\u6211\u4eec\u5355\u4e00\u4e00\u4e2a\u5143\u7d20\u7684\u6392\u540d\u5c31\u662f $1$ \uff0c\u8fd9\u70b9\u4e0d\u7528\u5e9f\u8bdd\u5427\uff0c\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u8fdb\u884c\u9012\u63a8\uff0c   \n\n\u6211\u4eec\u6b64\u65f6\u5f97\u5230\u4e86\u7b2c\u4e8c\u4e2a\u5143\u7d20\u77e5\u9053\u5b83\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\uff0c\u8981\u4e48\u524d\u9762\u7684\u6570\u6bd4\u5b83\u5927\u8981\u4e48\u6bd4\u5b83\u5c0f\uff0c\u6b64\u65f6\u5e8f\u5217\u4e2d\u7684\u76f8\u5bf9\u6392\u540d\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u786e\u5b9a\u3002    \n\n\u8fd9\u65f6\u4f60\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u9012\u63a8\u72b6\u6001\u5c31\u76f8\u5f53\u4e8e\u6b64\u65f6\u524d\u9762\u7684\u6240\u6709\u5143\u7d20\u7684\u6392\u540d\u6211\u4eec\u90fd\u786e\u5b9a\u4e86\uff0c\u800c\u6b64\u65f6\u6211\u4eec\u65b0\u589e\u7684\u5143\u7d20\u53c8\u77e5\u9053\u5b83\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6bd4\u5b83\u5c0f\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u5f53\u524d\u8fd9\u4e2a\u5143\u7d20\u52a0\u5165\u524d\u9762\u7684\u5e8f\u5217\u6392\u5e8f\u540e\uff0c\u5b83\u7684\u6392\u540d\u5c31\u662f\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\u8fd9\u4e2a\u503c\u518d\u52a0\u4e0a $1$ \u3002    \n\n\u8fd9\u4e2a\u89e3\u91ca\u5df2\u7ecf\u5f88\u8be6\u7ec6\u4e86\u5427\u2026\u2026    \n\n\u518d~~\u6570\u5b66~~\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8bb0\u5f55\u4e0b\u6765\u7684\u6bcf\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u6bd4\u5b83\u5c0f\u7684\u6570\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u5f53\u6210\u4e00\u4e2a\u72b6\u6001\uff0c\u5b83\u548c\u6700\u540e\u7ec4\u6210\u7684\u76f8\u5bf9\u6392\u540d\u6210\u4e00\u4e2a\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u3002    \n\u4e8e\u662f\u6211\u4eec\u76f4\u63a5\u7ef4\u62a4\u4e0a\u8ff0\u6761\u4ef6\u5c31\u884c\u4e86\uff0c\u7531\u4e8e\u6211\u4eec\u672c\u6765\u7684 $KMP$ \u7b97\u6cd5\u5c31\u53ea\u6709 $O(n + m)$ \uff0c \u6240\u4ee5\u73b0\u5728\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n + mlogn)$ \u3002   \n\n\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u662f\u4e00\u9053 $KMP$ \u597d\u9898\u3002    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int Len = 1e6 + 5;\nint n,m,tot,p[Len],s[Len],kmp[Len],cnt[Len],c[Len],lsh[Len],Print[Len];\nint lowbit(int x){return x & (-x);}\nvoid add(int x){while(x <= n) c[x] ++ , x += lowbit(x);}\nvoid del(int x){while(x <= n) c[x] -- , x += lowbit(x);}\nint query(int x)\n{\n\tint res = 0;\n\twhile(x)\n\t{\n\t\tres += c[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn res;\n}\nvoid Clear_p(int l,int r){for(int i = l ; i <= r ; i ++) del(p[i]);}\nvoid Clear_s(int l,int r){for(int i = l ; i <= r ; i ++) del(s[i]);}\nint main()\n{\n\tscanf(\"%d %d\",&m,&n);\n\tfor(int i = 1 ; i <= m ; i ++){int x;scanf(\"%d\",&x);p[x] = i;}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tscanf(\"%d\",&s[i]);\n\t\tlsh[i] = s[i];\n\t} \n\tsort(lsh + 1 , lsh + 1 + n);\n\tfor(int i = 1 ; i <= n ; i ++) s[i] = lower_bound(lsh + 1 , lsh + 1 + n , s[i]) - lsh;\n\tint j = 0;\n\tfor(int i = 1 ; i <= m ; i ++) cnt[i] = query(p[i]) , add(p[i]);//num\u6570\u7ec4\u5c31\u662f\u8868\u793a\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6570\u5c0f\u4e8e\u5b83\n\tmemset(c , 0 , sizeof c);\n\tfor(int i = 2 ; i <= m ; i ++)\n\t{\n\t\twhile(j && query(p[i]) != cnt[j + 1]){Clear_p(i - j , i - kmp[j] - 1) ; j = kmp[j];}//\u4e2d\u95f4\u5168\u90e8\u7529\u6389\n\t\tif(query(p[i]) == cnt[j + 1]){add(p[i]) ; j ++;}\n\t\tkmp[i] = j;\n\t}\n\tj = 0;\n\tmemset(c , 0 , sizeof c);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\twhile(j && query(s[i]) != cnt[j + 1]){Clear_s(i - j , i - kmp[j] - 1) ; j = kmp[j];}\n\t\tif(query(s[i]) == cnt[j + 1]){j ++ ; add(s[i]);}\n\t\tif(j == m) Print[++ tot] = i - m + 1;\n\t}\n\tprintf(\"%d\\n\",tot);\n\tfor(int i = 1 ; i <= tot ; i ++) printf(\"%d \",Print[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1603721415,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4696 \u3010[CEOI2011]Matching\u3011"
    },
    {
        "content": "\u9898\u610f\u5373\u4e3a\u5728\u5e8f\u5217\u4e2d\u627e\u51fa\u7ed9\u5b9a\u6392\u5217\u80fd\u5339\u914d\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u7684\u5339\u914d\u76f8\u540c\u6307\u7684\u662f\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u76f8\u540c\uff0c\u5373\u79bb\u6563\u5316\u540e\u76f8\u540c\u3002\n\n\u56e0\u4e3a\u662f\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u76f8\u540c\uff0c\u6240\u4ee5\u53ea\u9700\u8003\u8651\u6bcf\u4e2a\u6570\u6240\u5728\u7684\u6392\u540d\u3002\u53ef\u4ee5\u5bf9\u7ed9\u5b9a\u6392\u5217\u5904\u7406\u51fa $num_i$\uff0c\u4e3a\u4f4d\u7f6e $i$ \u4e4b\u524d\u5c0f\u4e8e\u4f4d\u7f6e $i$ \u5bf9\u5e94\u7684\u6570\u7684\u4e2a\u6570\uff0c\u53d1\u73b0\u5bf9\u4e8e\u5e8f\u5217\uff0c$num_i$ \u76f8\u540c\uff0c\u76f8\u5bf9\u5927\u5c0f\u5173\u7cfb\u5c31\u76f8\u540c\u3002\n\n\u90a3\u4e48\u5c31\u53ea\u7528\u8003\u8651\u5e8f\u5217\u548c\u7ed9\u5b9a\u6392\u5217 $num_i$ \u7684\u5339\u914d\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7 $KMP$ \u6765\u5b9e\u73b0\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\uff0c\u5339\u914d\u6210\u529f\u65f6\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u52a0\u5165\u8d21\u732e\uff0c\u5931\u914d\u65f6\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u5220\u53bb\u8d21\u732e\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 1000010\n#define lowbit(x) (x&(-x))\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,m,pos,cnt;\nint p[maxn],a[maxn],s[maxn],t[maxn],num[maxn],nxt[maxn],ans[maxn];\nvoid update(int x,int v)\n{\n    while(x<=m) t[x]+=v,x+=lowbit(x);\n}\nint query(int x)\n{\n    int v=0;\n    while(x) v+=t[x],x-=lowbit(x);\n    return v;\n}\nvoid clear()\n{\n    pos=0;\n    for(int i=1;i<=m;++i) t[i]=0;\n}\nint main()\n{\n    read(n),read(m),num[n+1]=-1;\n    for(int i=1;i<=n;++i)\n    {\n        int x;\n        read(x),p[x]=i;\n    }\n    for(int i=1;i<=m;++i) read(a[i]),s[i]=a[i];\n    sort(s+1,s+m+1);\n    for(int i=1;i<=m;++i) a[i]=lower_bound(s+1,s+m+1,a[i])-s;\n    for(int i=1;i<=n;++i) num[i]=query(p[i]),update(p[i],1);\n    clear();\n    for(int i=2;i<=n;++i)\n    {\n        while(pos&&query(p[i])!=num[pos+1])\n        {\n            for(int j=i-pos;j<i-nxt[pos];++j) update(p[j],-1);\n            pos=nxt[pos];\n        }\n        if(query(p[i])==num[pos+1]) update(p[i],1),pos++;\n        nxt[i]=pos;\n    }\n    clear();\n    for(int i=1;i<=m;++i)\n    {\n        while(pos&&query(a[i])!=num[pos+1])\n        {\n            for(int j=i-pos;j<i-nxt[pos];++j) update(a[j],-1);\n            pos=nxt[pos];\n        }\n        if(query(a[i])==num[pos+1]) update(a[i],1),pos++;\n        if(pos==n) ans[++cnt]=i-n+1;\n    }\n    printf(\"%d\\n\",cnt);\n    for(int i=1;i<=cnt;++i) printf(\"%d \",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1596498939,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4696 \u3010[CEOI2011]Matching\u3011"
    },
    {
        "content": "# \u58f9\u3001\u9898\u76ee\u63cf\u8ff0 &para;\n\n[\u4f20\u9001\u95e8 to LOJ](https://loj.ac/p/2507) .\n\n# \u8d30\u3001\u9898\u89e3 &para;\n\n>*\u4e5f\u53ef\u4ee5\u53bb[\u8fd9\u91cc](https://www.cnblogs.com/Arextre/p/15212338.html)\u770b*\u3002\n>\n>\u4e0e\u539f\u6587\u4e0d\u540c\u7684\u4e00\u4e9b\u5730\u65b9\uff1a\n>\n>- \u5220\u6389\u4e86\u4e00\u4e9b\u4e0d\u5f53\u7528\u8bed\uff1b\n>\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 $a_i$ \u5f97\u5230\u67d0\u4e2a\u533a\u95f4\u79bb\u6563\u5316\u4e4b\u540e\u5e94\u8be5\u957f\u5f97\u6837\u5b50\uff0c\u6211\u4eec\u8bb0\u8fd9\u4e2a\u6837\u5b50\u4e3a $p$\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u73b0\u5728\u8003\u5bdf\u7684\u5c31\u662f $p$ \u548c $b$ \u4e2d\u4efb\u610f\u957f\u5ea6\u4e3a $n$ \u7684\u533a\u95f4\u79bb\u6563\u5316\u4e4b\u540e\u7684\u5339\u914d\u3002\n\n\u663e\u7136\u8fd9\u4fe9\u90fd\u662f\u6392\u5217\uff0c\u4e8e\u662f\u6211\u4eec\u8fdb\u884c\u7684\u662f\u6392\u5217\u7684\u5339\u914d\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528\u53cd\u5e8f\u8868\u8fdb\u884c\u3002\u4e0d\u96be\u53d1\u73b0\u8fc7\u7a0b\u633a\u50cf $\\rm KMP$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u5904\u7406\u51fa $p_i$ \u7684\u53cd\u5e8f\u8868\uff0c\u5e76\u4e14\u5904\u7406\u51fa $\\rm KMP$ \u4f7f\u7528\u7684 $nxt$ \u6570\u7ec4\uff0c\u5177\u4f53\u5904\u7406\u8be5\u6570\u7ec4\uff0c\u5c31\u662f\u8003\u8651\u5728\u52a0\u5165 $p_i$ \u65f6\uff0c\u5728\u76ee\u524d\u5df2\u7ecf\u5339\u914d\u5230\u7684\u957f\u5ea6\u4e2d\uff0c\u6bd4 $p_i$ \u5927\u7684\u6570\u4e2a\u6570\u662f\u5426\u4e0e\u5df2\u7ecf\u5339\u914d\u957f\u5ea6 $len$ \u7684 $d_{len+1}$ \u76f8\u540c\uff0c\u8fd9\u662f\u53ef\u4ee5\u4f7f\u7528 $\\rm BIT$ \u7ef4\u62a4\uff0c\u5982\u679c\u5339\u914d\u5931\u8d25\uff0c\u5c31\u66b4\u529b\u5c06 $[i-len, i-nxt[len]-1]$ \u7684\u6570\u5b57\u64a4\u56de\uff0c\u4f7f\u7528\u5747\u644a\u5206\u6790\uff0c\u8be5\u8fc7\u7a0b\u4ecd\u7136\u662f $\\mathcal O(n)$ \u7684\uff0c\u7531\u4e8e\u4f7f\u7528 $\\rm BIT$\uff0c\u590d\u6742\u5ea6\u8fbe\u5230\u4e86 $\\mathcal O(n\\log n)$.\n\n\u5339\u914d\u8fc7\u7a0b\u548c\u5904\u7406 $nxt$ \u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u5728\u8fbe\u6210\u4e00\u6b21\u5339\u914d\u4e4b\u540e\u7684\u64a4\u56de\u533a\u95f4\u548c $\\rm KMP$ \u5931\u914d\u65f6\u7684\u64a4\u56de\u533a\u95f4\u7a0d\u5fae\u6709\u70b9\u4e0d\u540c\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u81ea\u884c\u601d\u8003\u4e00\u4e0b\u3002\n\n# \u53c1\u3001\u53c2\u8003\u4ee3\u7801 &para;\n\n```cpp\n# include <cstdio>\n# include <algorithm>\n# include <vector>\nusing namespace std;\n\n# define NDEBUG\n# include <cassert>\n\nnamespace Elaina {\n\n# define rep(i, l, r) for(int i=(l), i##_end_=(r); i<=i##_end_; ++i)\n# define drep(i, l, r) for(int i=(l), i##_end_=(r); i>=i##_end_; --i)\n# define fi first\n# define se second\n# define mp(a, b) make_pair(a, b)\n# define Endl putchar('\\n')\n# define mmset(a, b) memset(a, b, sizeof (a))\n# define mmcpy(a, b) memcpy(a, b, sizeof (a))\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair <int, int> pii;\ntypedef pair <ll, ll> pll;\n\ntemplate <class T> inline T fab(T x) { return x<0? -x: x; }\ntemplate <class T> inline void getmin(T& x, const T rhs) { x=min(x, rhs); }\ntemplate <class T> inline void getmax(T& x, const T rhs) { x=max(x, rhs); }\ntemplate <class T> inline T readin(T x) {\n    x=0; int f=0; char c;\n    while((c=getchar())<'0' || '9'<c) if(c=='-') f=1;\n    for(x=(c^48); '0'<=(c=getchar()) && c<='9'; x=(x<<1)+(x<<3)+(c^48));\n    return f? -x: x;\n}\n\ntemplate <class T> inline void writc(T x, char s='\\n') {\n    static int fwri_sta[1005], fwri_ed=0;\n    if(x<0) putchar('-'), x=-x;\n    do fwri_sta[++fwri_ed]=x%10, x/=10; while(x);\n    while(putchar(fwri_sta[fwri_ed--]^48), fwri_ed);\n    putchar(s);\n}\n\n} using namespace Elaina;\n\nconst int maxn=1000000;\n\nint a[maxn+5], b[maxn+5], n, m;\nint p[maxn+5], t[maxn+5];\n\ninline void input() {\n    n=readin(1), m=readin(1);\n    rep(i, 1, n) {\n        a[i]=readin(1);\n        p[a[i]]=i;\n    }\n    rep(i, 1, m) t[i]=b[i]=readin(1);\n}\n\ninline void getHash() {\n    sort(t+1, t+m+1);\n    rep(i, 1, m) b[i]=lower_bound(t+1, t+m+1, b[i])-t;\n}\n\n/** @warning the upper limit should be set to @p maxn */\nnamespace saya {\n\nint c[maxn+5];\n\n# define lowbit(i) ((i)&(-(i)))\n\ninline void modify(int i, int v) {\n    for(; i; i-=lowbit(i)) c[i]+=v;\n}\ninline int query(int i, int ret=0) {\n    for(; i<=maxn; i+=lowbit(i)) ret+=c[i];\n    return ret;\n}\ninline void clear() {\n    rep(i, 1, maxn) c[i]=0;\n}\n\n} // using namespace saya;\n\nint nxt[maxn+5], d[maxn+5];\ninline void getNxt() {\n    rep(i, 1, n) {\n        d[i]=saya::query(p[i]);\n        saya::modify(p[i], 1);\n    }\n    saya::clear(); nxt[1]=0, nxt[0]=-1;\n    for(int i=2; i<=n; ++i) {\n        int len=nxt[i-1];\n        while(~len && d[len+1]!=saya::query(p[i])) {\n            rep(j, i-len, i-nxt[len]-1) saya::modify(p[j], -1);\n            len=nxt[len];\n        }\n        nxt[i]=len+1, saya::modify(p[i], 1);\n    }\n}\n\nvector <int> ans;\ninline void compare() {\n    saya::clear();\n    int len=0; // successfully matched length\n    rep(i, 1, m) {\n        while(~len && d[len+1]!=saya::query(b[i])) {\n            rep(j, i-len, i-nxt[len]-1) saya::modify(b[j], -1);\n            len=nxt[len];\n        } assert(~len);\n        ++len, saya::modify(b[i], 1);\n        if(len==n) { // a successful match\n            /** @warning pay attention to this special fallback interval */\n            rep(j, i-len+1, i-nxt[len]) saya::modify(b[j], -1);\n            len=nxt[len], ans.push_back(i-n+1);\n        }\n    }\n}\n\ninline void print() {\n    writc(ans.size());\n    for(auto x: ans) writc(x, ' ');\n}\n\nsigned main() {\n    // freopen(\"match.in\", \"r\", stdin);\n    // freopen(\"match.out\", \"w\", stdout);\n    input();\n    getHash();\n    getNxt();\n    compare();\n    print();\n    return 0;\n}\n```\n\n# \u8086\u3001\u5173\u952e\u306e\u5730\u65b9 &para;\n\n\u8fdb\u884c\u6392\u5217\u7684\u6bd4\u8f83\u65f6\uff0c\u53ef\u4ee5\u8003\u5bdf\u4f7f\u7528\u53cd\u5e8f\u8868\uff0c\u56e0\u4e3a\u53cd\u5e8f\u8868\u552f\u4e00\u5bf9\u5e94\u6bcf\u4e00\u4e2a\u6392\u5217\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u8bb0\u5f97\u66fe\u7ecf\u81ea\u5df1\u7ed9\u51fa\u8fc7\u4e00\u79cd\u6784\u9020\u65b9\u6cd5\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u786e\u662f\u53ef\u4ee5\u8bf4\u660e\u4e00\u4e00\u6620\u5c04\u7684\u5173\u7cfb\u7684\u3002\n\n\u53e6\u5916\uff0c$\\rm KMP$ \u4e5f\u662f\u53ef\u4ee5\u9b54\u6539\u7684\uff0c\u8be5\u9898\u4fbf\u662f\u5229\u7528\u4e86 $\\rm KMP$ \u5224\u7b49\u6761\u4ef6\u7684\u53d8\u5316\uff0c\u53e6\u5916\u5bf9\u4e8e $\\rm KMP$ \u590d\u6742\u5ea6\u5206\u6790\u7a0d\u5fae\u6709\u70b9\u4e0d\u719f\uff0c\u5dee\u70b9\u5fd8\u8bb0\u644a\u8fd8\u4e86......",
        "postTime": 1630419465,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "[CEOI2011]Matching"
    },
    {
        "content": "\u672c\u9898\u7b2c\u4e00\u4e2a\u9898\u89e3\n\n\u8fd9\u5e94\u8be5\u7b97\u662f\u4e00\u9053\u5f88\u5957\u8def\u7684\u9898\u5427\u3002\u3002\u3002\n\n\u663e\u7136\u8981\u6c42\u7684\u5b50\u4e32\u7684\u957f\u5ea6\u80af\u5b9a\u7b49\u4e8e\u7ed9\u7684\u5e8f\u5217p\u957f\u5ea6\u4e00\u6837\u3002\u3002\n\n\u7136\u540e\u53d1\u73b0\u5408\u6cd5\u7684\u5e8f\u5217\u7684\u5404\u4e2a\u5143\u7d20\u987a\u5e8f\u4e00\u5b9a\u3002\u3002\n\n\u4e8e\u662f\u5e94\u8be5\u8981\u60f3\u5230kmp\u3002\u3002\u4f46\u662f\u666e\u901a\u7684kmp\u65e0\u6cd5\u7ef4\u62a4\u3002\u3002\u53d1\u73b0\u6392\u540d\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5c0f\u4e8e\u7b49\u4e8e\u8be5\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u641e\u4e86\u3002\u3002\n\n\u7136\u540e\u5c31\u662fkmp+\u6811\u72b6\u6570\u7ec4\u7684\u5957\u8def\u9898\u4e86\u3002\u3002\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u4e0a\u4e86\u3002\u3002\u53ea\u662f\u7ed9\u4e2a\u601d\u8def\u3002\u3002",
        "postTime": 1544348330,
        "uid": 46755,
        "name": "Iscream2001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4696 \u3010[CEOI2011]Matching\u3011"
    }
]