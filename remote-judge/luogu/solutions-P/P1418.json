[
    {
        "content": "* \u8fd9\u9053\u9898\u975e\u5e38\u7684\u795e\uff08\u4e3b\u8981\u662f\u7f51\u4e0a\u627e\u4e0d\u5230\u9898\u89e3\uff09\n*\t\u5f00\u59cb\u6211\u770b\u5230\u8fd9\u9053\u9898\u4e22\u4e86\u4e2a\u8d39\u7528\u6d41\u4e0a\u53bb\uff0c\u7ed9\u6bcf\u884c\u6bcf\u5217\u4e00\u4e2a\u6743\u503c\uff0c\u8fd9\u6837\u5c31\u5c3d\u91cf\u5f80\u540e\u6d41\uff0c\u83b7\u5f97\u4e86\u4e8c\u5341\u5206\u7684\u597d\u6210\u7ee9\uff0c\u56e0\u4e3a\u6743\u503c\u5dee\u8ddd\u4e0d\u591f\u5927\u3002\n*\t\u9996\u5148\uff0c\u8fd9\u9053\u9898\u4f60\u4ece\u540e\u8d2a\u5fc3\u80fd\u653e1\u5c31\u653e1\u80af\u5b9a\u662f\u4e0d\u7684\uff0c\u4f60\u540e\u9762\u653e\u5f88\u591a\u4e2a1\uff0c\u5982\u679c\u6700\u540e\u51e0\u4e2a1\u88ab\u8feb\u653e\u5728\u6700\u524d\u9762\u90a3\u80af\u5b9a\u4e0d\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\n*\t\u53cd\u8fc7\u6765\u8003\u8651\uff0c\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u9700\u8981\u591a\u5c11\u4e2a0\uff0c\u8fd9\u6837\u663e\u7136\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u8fd9\u6837\u80af\u5b9a\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u7136\u540e\u6253\u4e86\u4e2a\u66b4\u529b\uff0c\u83b7\u5f9750\u5206\n*\t\u4e3a\u4ec0\u4e48\u53ea\u670950\u5206\u5462\uff1f\u56e0\u4e3a\u8d2a\u5fc3\u653e0\u4e4b\u540e\uff0c\u540e\u9762\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\uff0c\u4f60\u5c31\u8981\u56de\u6eaf\uff0c\u6240\u4ee5TLE\u3002\n*\t\u8003\u8651\u4f18\u5316\u8d2a\u5fc3\uff0c\u4e0d\u56de\u6eaf\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\uff0c\u4f60\u90fd\u5224\u4e00\u4e0b\u653e0\u7684\u8bdd\u540e\u9762\u662f\u5426\u6709\u89e3\uff0c\u7528\u7f51\u7edc\u6d41\u5224\u662f\u5426\u53ef\u4ee5\u5b8c\u7f8e\u5339\u914d\u5c31\u884c\u4e86\u3002\n*\t\u4f46\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u662f\u9519\u7684\uff0c\u6240\u4ee5\u4e0d\u5fc5\u6bcf\u6b21\u90fd\u91cd\u65b0\u5efa\u56fe\uff0c\u73b0\u5728\u539f\u6765\u7684\u56fe\u4e2d\u770b\u4e00\u4e0b\u8be5\u884c\u5217\u662f\u5426\u5df2\u7ecf\u5339\u914d\uff0c\u82e5\u6ca1\u6709\uff0c\u5219\u5f3a\u5236\u8be5\u884c\u5217\u5339\u914d\uff0c\u91cd\u65b0\u5efa\u56fe\uff0c\u770b\u662f\u5426\u5b8c\u7f8e\u5339\u914d\u5373\u53ef\n*\t\u65f6\u95f4\u590d\u6742\u5ea6\u597d\u50cf\u662f\u9519\u7684\uff1f\u9996\u5148\uff0c\u968f\u7740\u4f60\u70b9\u653e\u7684\u70b9\u8d8a\u6765\u8d8a\u591a\uff0c\u4f60\u7684\u56fe\u4f1a\u8d8a\u6765\u8d8a\u5c0f\uff0c\u8dd1\u7684\u8d8a\u6765\u8d8a\u5feb\u3002\u5176\u6b21\uff0c\u6709\u5f88\u591a\u884c\u5217\u5728\u539f\u6765\u7684\u9014\u4e2d\u5c31\u5df2\u7ecf\u5339\u914d\uff0c\u4e0d\u5fc5\u6bcf\u6b21\u90fd\u8dd1\u3002\u6700\u540e\uff0c\u5b83\u53ef\u4ee5\u98de\u5feb\u7684\u901a\u8fc7\u672c\u9898\u3002\n\u4ee3\u7801[http://www.cnblogs.com/dengyixuan/p/8671142.html]",
        "postTime": 1522315484,
        "uid": 7029,
        "name": "dengyixuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1418 \u3010[TJOI2011]\u6784\u9020\u77e9\u9635\u3011"
    },
    {
        "content": "## [\u9898\u9762](https://www.luogu.org/problemnew/show/P1418)\n\n### [\u7ed3\u5408\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/ztlztl/p/11007824.html)\n\n## \u9898\u89e3\n\n\u5f88\u5bb9\u6613\u770b\u51fa\u6765\u662f\u9053\u7f51\u7edc\u6d41\u7684\u9898\u76ee, \u8981\u662f\u6ca1\u6709\u8fd9\u4e2a\u5b57\u5178\u5e8f\u6700\u5c0f, \u76f4\u63a5\u5efa\u56fe\u8dd1\u4e00\u904d\u5c31\u597d\u4e86, \u8003\u8651\u5982\u4f55\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u65b9\u6848\n\n\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u53bb\u9009\u62e9, \u82e5\u5f53\u524d\u70b9\u53ef\u4ee5\u90090\u5c31\u90090, \u4e0d\u80fd\u90090\u5c31\u90091, \u6709\u4e00\u70b9\u50cf\u641c\u7d22, \u4f46\u662f\u76f4\u63a5\u641c\u7d22\u56de\u6eaf\u80af\u5b9a\u4f1a\u7206\u70b8, \u8003\u8651\u5982\u4f55\u4e0d\u56de\u6eaf\n\n\u7528\u7f51\u7edc\u6d41\u4f18\u5316, \u82e5\u5f53\u524d\u70b9\u90090\u540e\u9762\u6709\u53ef\u884c\u7684\u65b9\u6848, \u76f4\u63a5\u90090, \u82e5\u6ca1\u6709\u53ef\u884c\u7684\u65b9\u6848, \u8fd9\u4e2a\u70b9\u5c31\u53ea\u80fd\u90091\u4e86, \u8003\u8651\u5230\u5f53\u524d\u70b9\u7684\u9009\u62e9\u662f\u5728\u524d\u9762\u70b9\u5df2\u7ecf\u9009\u62e9\u5b8c\u5e76\u786e\u5b9a\u6709\u4e86\u53ef\u884c\u89e3\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u7684, \u6240\u4ee5\u8fd9\u4e2a\u7b56\u7565\u662f\u53ef\u884c\u7684, \u81f3\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u95ee\u9898, \u4ee3\u7801\u4e2d\u4f1a\u8bb2\u5230\n\n### \u4ee3\u7801\n\n```cpp\n###include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdlib>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#define itn int\n#define reaD read\n#define N 105\n#define INF 1000000009\nusing namespace std;\n\nint n, m, r[N], c[N], d[N << 1], S, T, head[N << 1], cur[N << 1], cnt = 1, id[N][N], ans[N][N];\nstruct edge { int to, next, flow; } e[20005]; \n\ninline int read()\n{\n\tint x = 0, w = 1; char c = getchar();\n\twhile(c < '0' || c > '9') { if (c == '-') w = -1; c = getchar(); }\n\twhile(c >= '0' && c <= '9') { x = x * 10 + c - '0'; c = getchar(); }\n\treturn x * w;\n}\n\ninline void add(int u, itn v, int w) { e[++cnt] = (edge) { v, head[u], w }; head[u] = cnt; e[++cnt] = (edge) { u, head[v], 0 }; head[v] = cnt; }\n\nint bfs()\n{\n\tqueue<int> q; memset(d, 0, sizeof(d));\n\tq.push(S); d[S] = 1;\n\twhile(!q.empty())\n\t{\n\t\tint u = q.front(); q.pop();\n\t\tfor(int v, i = head[u]; i; i = e[i].next)\n\t\t\tif(!d[v = e[i].to] && e[i].flow > 0) { d[v] = d[u] + 1; q.push(v); }\n\t}\n\treturn d[T]; \n}\n\nint dfs(int u, int a)\n{\n\tif(u == T || !a) return a;\n\tint flow = 0;\n\tfor(int v, &i = cur[u]; i; i = e[i].next)\n\t{\n\t\tif(d[v = e[i].to] == d[u] + 1 && e[i].flow > 0)\n\t\t{\n\t\t\tint f = dfs(v, min(a, e[i].flow));\n\t\t\tflow += f; a -= f; e[i].flow -= f; e[i ^ 1].flow += f; \n\t\t}\n\t\tif(!a) break; \n\t}\n\tif(a) d[u] = -1;\n\treturn flow; \n}\n\nint dinic() { int flow = 0; while(bfs()) { memcpy(cur, head, sizeof(head)); flow += dfs(S, INF); } return flow; }\n\nbool check(itn x, int y)\n{\n\tdinic(); if(!r[x] || !c[y]) return 0; r[x]--; c[y]--; \n    //\u5148\u8003\u8651\u5f53\u524d\u884c\u6216\u5217\u662f\u5426\u5df2\u7ecf\u9009\u5b8c\u4e86\u6240\u6709\u53ef\u9009\u76840\n\tif(e[id[x][y]].flow) { e[id[x][y]].flow = 0; return 1; }//\u82e5\u8fd9\u6761\u8fb9flow = 1, \u4ee3\u8868\u8fd9\u6761\u8fb9\u6ca1\u6709\u88ab\u589e\u5e7f\u8fc7, \u4e5f\u5c31\u662f(x, y)\u8fd9\u4e2a\u70b9\u662f0, \u76f4\u63a5\u65ad\u6389\u8fd9\u6761\u8fb9(\u4fdd\u8bc1\u4ee5\u540e\u589e\u5e7f\u4e0d\u8d70\u4ed6), return\u5373\u53ef\n\telse\n\t{\n        /*\u82e5\u8fd9\u6761\u8fb9flow = 0, \u4ee3\u8868\u8fd9\u6761\u8fb9\u88ab\u589e\u5e7f\u8fc7, \u8fd9\u4e2a\u70b9(x, y)\u5f53\u524d\u4e3a1, \u8003\u8651\u5c06\u4ed6\u53d8\u62100\u662f\u5426\u6709\u53ef\u884c\u89e3, \n        \u7531\u4e8e\u8fd9\u6761\u8fb9\u88ab\u589e\u5e7f\u8fc7, \u6545\u5fc5\u6709\u4e00\u6761S -> x -> y -> T\u7684\u589e\u5e7f\u8def, \u624b\u52a8\u9000\u6d41, \u518d\u6b21\u589e\u5e7f, \u82e5\u80fd\u627e\u5230\u4e00\u6761\u65b0\u7684\u589e\u5e7f\u8def\u8865\u4e0a\u8fd9\u6761\u8def\u65ad\u6389\u4e4b\u540e\u7684\u5f71\u54cd, \u4ee3\u8868\u70b9(x, y)\u53ef\u4ee5\u4e3a0, \u5426\u5219, \u4e0d\u80fd\u4e3a0, \u5c06x -> y\u65ad\u6389, \u8868\u793a\u5f3a\u5236\u8d70\u4ed6, S -> x\u548cy -> T\u8fd9\u4e24\u6761\u8fb9\u7684\u6d41\u91cf\u51cf1\u5373\u53ef, \u7531\u4e8e\u6ca1\u6709\u88ab\u589e\u5e7f\u8fc7, \u521a\u521a\u6b63\u5411\u8fb9\u52a0\u4e0a\u540e\u6d41\u91cf\u5fc5\u7136>0, \u5c06\u6b63\u5411\u8fb9\u6d41\u91cf\u51cf1\u5373\u53ef*/\n\t\te[id[x][y] ^ 1].flow = 0; e[id[x][m + 1] ^ 1].flow--; e[id[x][m + 1]].flow++;\n\t\te[id[n + 1][y] ^ 1].flow--; e[id[n + 1][y]].flow++; if(dinic() == 1) return 1;\n\t\tr[x]++; c[y]++; e[id[n + 1][y]].flow--; e[id[x][m + 1]].flow--; return 0; \n\t}\n    //\u7531\u4e8e\u6bcf\u6b21\u65ad\u8fb9\u540e\u53ea\u9700\u8981\u627e\u5230\u4e00\u6761\u65b0\u7684\u589e\u5e7f\u8def\u5373\u53ef, \u6240\u4ee5\u6bcf\u6b21dinic\u53ea\u4f1a\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def, \u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\n}\n\nint main()\n{\n\tn = read(); m = read(); S = n + m + 1; T = n + m + 2; \n\tfor(int i = 1; i <= n; i++) r[i] = read(); \n\tfor(int i = 1; i <= m; i++) c[i] = read(); \n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tid[i][m + 1] = cnt + 1; add(S, i, r[i]); \n\t\tfor(int j = 1; j <= m; j++)\n\t\t{\n\t\t\tif(i == 1) id[n + 1][j] = cnt + 1, add(j + n, T, c[j]); \n\t\t\tid[i][j] = cnt + 1; add(i, j + n, 1); \n\t\t}\n\t}\n\tfor(int i = 1; i <= n; i++) r[i] = m - r[i]; \n\tfor(int j = 1; j <= m; j++) c[j] = n - c[j]; \n\tfor(int i = 1; i <= n; i++, puts(\"\"))\n\t\tfor(int j = 1; j <= m; j++) printf(\"%d\", check(i, j) ? 0 : 1);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1560304274,
        "uid": 160323,
        "name": "mgzc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1418 \u3010[TJOI2011]\u6784\u9020\u77e9\u9635\u3011"
    },
    {
        "content": "\u8f6c\u6362\u4e00\u4e0b\uff0c\u8fd9\u9898\u6c42\u6700\u5c0f\u5b57\u5178\u5e8f\u4f3c\u4e4e\u4e0d\u592a\u5bb9\u6613\uff0c\u4f46\u6c42\u4e00\u4e2a\u65b9\u6848\u7684\u53ef\u884c\u6027\u5374\u662f\u5341\u5206\u5bb9\u6613\uff0c\u662f\u7ecf\u5178\u7684\u68cb\u76d8\u7c7b\u95ee\u9898\u6a21\u578b.\n\n\u7531\u4e8e\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u8d2a\u5fc3\u89e3\u51b3\uff0c\u6bcf\u6b21\u786e\u5b9a\u5f53\u524d\u4f4d\u7f6e\u4e0a\u7684\u6570\uff0c\u518d\u5957\u7528\u6a21\u578b $\\texttt{check}$ \u53ef\u884c\u6027\u5373\u53ef.\n\n\u4f46\u662f\u76f4\u63a5\u5efa\u56fe\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u6b63\u786e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u8fdb\u884c\u4fee\u6539\u8f6c\u79fb\u5230\u5f53\u524d\u5c42\u7684\u56fe\uff0c\u518d\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u8dd1 $\\texttt{dinic}$.\n\n**Show the Code**\n```cpp\n#include<cstdio>\n#define min(a,b) ((a)<(b)? (a):(b))\nconst int inf=0x3f3f3f3f;\nint n,m,s,t,cnt=1;\nint q[100005],d[205],r[105],c[105];\nint w[205][205],id[205][205],a[105][105];\nint h[1005],to[100005],ver[100005],incf[100005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y,int z) {\n\tto[++cnt]=y;\n\tver[cnt]=h[x];\n\tincf[cnt]=z;\n\tw[x][y]=z;\n\tid[x][y]=cnt;\n\th[x]=cnt;\n}\ninline void add_d(int x,int y,int z) {add(x,y,z);add(y,x,0);}\ninline void change(int x,int y,int val) {\n\tincf[id[s][x]]+=val;\n\tw[s][x]+=val;\n\tincf[id[y+n][t]]+=val;\n\tw[y+n][t]+=val;\n}\ninline bool bfs() {\n\tint hd=0,tl=0;\n\tfor(register int i=1;i<=t;++i) d[i]=0;d[s]=1;\n\tq[++tl]=s;\n\twhile(hd<tl) {\n\t\tint x=q[++hd];\n\t\tfor(register int i=h[x];i;i=ver[i]) {\n\t\t\tint y=to[i];\n\t\t\tif(!d[y]&&incf[i]) d[y]=d[x]+1,q[++tl]=y;\n\t\t}\n\t}\n\treturn d[t]>0;\n}\ninline int dinic(int x,int flow) {\n\tif(x==t) return flow;\n\tint rest=flow;\n\tfor(register int i=h[x];i&&rest;i=ver[i]) {\n\t\tint y=to[i];\n\t\tif(d[y]==d[x]+1&&incf[i]) {\n\t\t\tint k=dinic(y,min(rest,incf[i]));\n\t\t\tif(!k) d[y]=0;\n\t\t\tincf[i]-=k;\n\t\t\tincf[i^1]+=k;\n\t\t\tw[x][y]=incf[i];\n\t\t\tw[y][x]=incf[i^1];\n\t\t\trest-=k;\n\t\t}\n\t}\n\treturn flow-rest;\n}\ninline void show() {\n\tfor(register int i=1;i<=n;++i) {\n\t\tfor(register int j=h[i];j;j=ver[j]) {\n\t\t\tint y=to[j];\n\t\t\tif(y!=s&&!incf[j]) printf(\"(%d,%d)\\n\",i,y-n);\n\t\t}\n\t}\n}\nint main() {\n\tn=read(),m=read();\n\tint maxflow=0,sum=0;s=n+m+1,t=n+m+2;\n\tfor(register int i=1;i<=n;++i) r[i]=read();\n\tfor(register int i=1;i<=m;++i) sum+=(c[i]=read());\n\tfor(register int i=1;i<=n;++i) add_d(s,i,r[i]);\n\tfor(register int i=1;i<=m;++i) add_d(i+n,t,c[i]);\n\tfor(register int i=1;i<=n;++i) for(register int j=1;j<=m;++j) add_d(i,j+n,1);\n\twhile(bfs()) maxflow+=dinic(s,inf);\n\t// printf(\"---------0-------\\n\");\n\t// printf(\"%d\\n\",maxflow);\n\t// show();\n\tfor(register int i=1;i<=n;++i) {\n\t\tfor(register int j=1;j<=m;++j) {\n\t\t\tif(!w[i][j+n]) {--maxflow;change(i,j,1);}\n\t\t\telse {w[i][j+n]=incf[id[i][j+n]]=incf[id[i][j+n]^1]=0;}\n\t\t\twhile(bfs()) maxflow+=dinic(s,inf);\n\t\t\t// printf(\"---------%d-------\\n\",i);\n\t\t\t// printf(\"%d\\n\",maxflow);\n\t\t\t// show();\n\t\t\tif(maxflow>=sum) {a[i][j]=0;}\n\t\t\telse {++maxflow;change(i,j,-1);a[i][j]=1;}\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;++i) {for(register int j=1;j<=m;++j) printf(\"%d\",a[i][j]);printf(\"\\n\");}\n\treturn 0;\n}\n```",
        "postTime": 1589100131,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1418 \u3010[TJOI2011]\u6784\u9020\u77e9\u9635\u3011"
    },
    {
        "content": "\u5206\u6790\uff1a\n\n\u9996\u5148\u5f88\u81ea\u7136\u7684\u4e00\u4e2a\u60f3\u6cd5\u5c31\u662f\u8d2a\u5fc3+\u641c\u7d22\uff0c\u6bcf\u6b21\u5c3d\u91cf\u653e0\u3002\n\n\u4f46\u662f\u8fd9\u6837\u80af\u5b9a\u5f88\u6162\uff0c\u6211\u4eec\u6765\u89c2\u5bdf\u4e00\u4e0b\u95ee\u9898\u51fa\u5728\u54ea\u91cc\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u9047\u5230\u8d70\u4e0d\u901a\u7684\u8def\u5c31\u8981\u56de\u6eaf\u3002\u6211\u4eec\u53ef\u4ee5\u4f18\u5316\u4ed6\u3002\n\n\u6bcf\u6b21\u653e0\u4e4b\u540e\u5224\u65ad\u4e00\u4e0b\u540e\u9762\u662f\u5426\u53ef\u884c\u3002\n\n\u6211\u4eec\u7528\u7f51\u7edc\u6d41\u5224\u65ad\uff1a\n\n\u5efa\u7acbS\u548cT\uff0cS\u5411\u6bcf\u4e00\u884c\u8fde\u5bb9\u91cf\u4e3ar[i]\u7684\u8fb9\uff0c\u6bcf\u4e00\u884c\u5411\u6bcf\u4e00\u5217\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\u3002\n\n\u6bcf\u4e00\u5217\u5411T\u8fde\u5bb9\u91cf\u4e3ac[j]\u7684\u8fb9\uff0c\u8dd1\u6700\u5927\u6d41\uff0c\u5224\u65ad\u6700\u5927\u6d41\u4e0e\u6240\u6709r[i]\u7684\u548c\u662f\u5426\u76f8\u7b49\u3002\n\n\u7b49\u7b49\uff0c\u8fd9\u6837\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u5efa\u56fe\uff0c\u590d\u6742\u5ea6\u662f\u9519\u7684\u3002\n\n\u5176\u5b9e\uff0c\u6bcf\u6b21\u8dd1\u5b8c\u6700\u5927\u6d41\uff0c\u5728\u5224\u65ad\u4e0b\u4e00\u4e2a\u70b9\u4e4b\u524d\u770b\u4e00\u4e0bi\u5411j\u7684\u8fb9\u662f\u5426\u4e3a0\uff0c\n\n\u82e5\u4e3a\u96f6\uff0c\u8868\u793a\u8fd9\u4e2a\u70b9\u653e0\u662f\u53ef\u884c\u7684\uff0c\u90a3\u5c31\u76f4\u63a5\u653e0\uff0c\u4e0d\u7528\u91cd\u65b0\u5efa\u56fe\u5224\u65ad\u4e86\u3002\n\n\u7136\u540e\uff0c\u5728\u4e0d\u65ad\u5224\u65ad\u8fc7\u7a0b\u4e2d\uff0c\u56fe\u662f\u8d8a\u6765\u8d8a\u5c0f\u7684\uff0c\u6240\u4ee5\u6700\u540e\u53ef\u4ee5\u5f88\u5feb\u7684\u901a\u8fc7\u672c\u9898\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#pragma GCC optimize(1)\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n\nusing namespace std;\n\nconst int inf=1e9;\n\nint to[25001],w[25001],w1[25001],next[25001],first[210],e[210],jude;\nint n,m,S,T,d[210],f[210],cur[210],e1,mi=inf,now,a[101],b[201];\n\nvoid insert(int o,int p,int q)\n{\n    to[e1]=p;w[e1]=q;next[e1]=first[o];first[o]=e1++;\n    to[e1]=o;w[e1]=0;next[e1]=first[p];first[p]=e1++;\n}\n\nvoid rebuild(int o,int p)\n{\n    memset(first,-1,sizeof(first));   \n    memset(f,0,sizeof(f)); \n    e1=jude=0;\n    d[S]=3;f[3]=f[0]=1;\n    for(int i=o;i<=n;i++)\n        for(int j=(i==o)?p:1;j<=m;j++) insert(i,j+n,1);\n    for(int i=1;i<=n;i++) {d[i]=2;f[2]++;jude+=a[i];insert(S,i,a[i]);}\n    for(int i=1;i<=m;i++) {d[i+n]=1;f[1]++;insert(i+n,T,b[i]);}\n}\n\nint dfs(int u,int flow)\n{\n    if(u==T) return flow;\n    int res=flow,v,ff;\n    for(register int &i=cur[u];i!=-1;i=next[i])\n        if((d[u]==d[to[i]]+1)&&(w[i]>0))\n        {\n            ff=dfs(to[i],min(res,w[i]));\n            w[i]-=ff;w[i^1]+=ff;\n            if(!(res-=ff))return flow;\n        }\n    if(!--f[d[u]]) d[S]=T;\n    ++f[++d[u]];\n    return flow-res;\n}\n\nint isap()\n{\n    int res=0;\n    for(;d[S]<T;) \n    {\n        memcpy(cur,first,sizeof cur);\n        res+=dfs(S,inf);\n    }\n    return res;\n}\n\nbool check(int x,int y)\n{\n    a[x]--,b[y]--;\n    for(register int i=first[x];i!=-1;i=next[i])\n        if((to[i]==y+n)&&(w[i]==0)) return true;\n    (y==m)? rebuild(x+1,1):rebuild(x,y+1);\n    if(jude==isap()) return true;\n    a[x]++,b[y]++;\n    (y==m)? rebuild(x+1,1):rebuild(x,y+1);\n    isap();\n    return false;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    S=n+m+1;T=S+1;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),a[i]=m-a[i];\n    for(int i=1;i<=m;i++) scanf(\"%d\",&b[i]),b[i]=n-b[i];\n    rebuild(1,1);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n            if(a[i]&&b[j]&&check(i,j)) {cout<<0;}else {cout<<1;}\n        cout<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1527645756,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1418 \u3010[TJOI2011]\u6784\u9020\u77e9\u9635\u3011"
    },
    {
        "content": "\u9898\u76ee\u7ed9\u5b9a\u4e00\u4e2a $01$ \u77e9\u9635\u6bcf\u884c\u548c\u6bcf\u5217\u7684 $1$ \u7684\u4e2a\u6570,\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u77e9\u9635.\n\n\u5982\u679c\u53ea\u9700\u8981\u7ed9\u51fa\u4e00\u4e2a\u6784\u9020\u90a3\u4e48\u8fd9\u9898\u975e\u5e38\u7b80\u5355,\u53ea\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u4e8c\u5206\u56fe,\u5de6\u8fb9\u6709 $n\n$ \u4e2a\u70b9\uff0c\u53f3\u8fb9\u6709 $m$ \u4e2a\u70b9\uff0c\u5de6\u90e8\u7684\u7b2c $i$ \u4e2a\u70b9\u548c\u6e90\u70b9\u8fde\u8fb9,\u6743\u503c\u4e3a $r_i$ ,\u53f3\u90e8\u7684\u7b2c $j$ \u4e2a\u70b9\u548c\u6c47\u70b9\u8fde\u8fb9,\u6743\u503c\u4e3a $c_j$,\u6bcf\u4e2a\u5de6\u90e8\u70b9 $i$ \u548c\u53f3\u90e8\u70b9 $j$ \u8fde\u8fb9,\u6743\u503c\u4e3a$1$.\u8dd1\u5b8c\u6700\u5927\u6d41\u4e4b\u540e\u53ea\u9700\u8981\u628a\u6bcf\u6761\u7ecf\u8fc7\u589e\u5e7f\u7684\u8fb9 $(i,j)$ \u90fd\u8f93\u51fa $1$,\u5176\u4ed6\u7684\u8f93\u51fa $0$ \u5c31\u5b8c\u6210\u4e86\u6784\u9020.\n\n\u663e\u7136\u8fd9\u6837\u7684\u6784\u9020\u4e0d\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f,\u4e8e\u662f\u6211\u4eec\u60f3,\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9,\u80af\u5b9a\u662f\u66f4\u9760\u524d\u7684\u8fb9\u66f4\u91cd\u8981,\u90a3\u662f\u5426\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u8fb9\u4e00\u4e2a\u8d39\u7528\u8dd1\u8d39\u7528\u6d41\u5462?\u4e8b\u5b9e\u4e0a\u4e5f\u662f\u4e0d\u884c\u7684,\u5982\u679c\u8981\u8ba9\u8fb9\u4e4b\u95f4\u4e92\u76f8\u4e0d\u5f71\u54cd\u7684\u8bdd,\u8d39\u7528\u6700\u5927\u7684\u8fb9\u5fc5\u987b\u8fbe\u5230 $2^{nm}$,\u663e\u7136\u662f\u4f1a\u7206 long long \u7684,\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u53ef\u884c.\n\n\u90a3\u4e48,\u65e2\u7136\u6bcf\u6761\u7ecf\u8fc7\u589e\u5e7f\u7684\u8fb9\u90fd\u4ee3\u8868\u8fd9\u4e2a\u70b9\u662f $1$ \u7684\u8bdd,\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u628a\u8fd9\u6761\u8fb9\u5220\u6389\u518d\u8dd1\u4e00\u904d\u6700\u5927\u6d41,\u5224\u65ad\u8fd9\u6761\u8fb9\u662f\u5426\u5fc5\u987b\u5462?\n\n\u5982\u679c\u7528\u8fd9\u79cd\u601d\u8def\u505a\u7684\u8bdd,\u9996\u5148\u6211\u4eec\u5148\u8d2a\u5fc3\u5730\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6bcf\u4e2a\u70b9,\u5148\u8dd1\u4e00\u904d\u6700\u5927\u6d41,\u7136\u540e\u770b\u770b\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u8fb9\u662f\u5426\u88ab\u589e\u5e7f,\u5982\u679c\u6ca1\u6709\u88ab\u589e\u5e7f\u8bf4\u660e\u8fd9\u4e2a\u70b9\u4e0d\u5fc5\u8981,\u8f93\u51fa $0$;\u5982\u679c\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u8fb9\u88ab\u589e\u5e7f,\u90a3\u4e48\u5c31\u5220\u6389\u8fd9\u6761\u8fb9,\u518d\u8dd1\u4e00\u904d\u6700\u5927\u6d41,\u5982\u679c\u8fd9\u6b21\u6700\u5927\u6d41\u8fd8\u80fd\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def\u66ff\u4ee3\u8fd9\u6761\u8fb9\u7684\u8bdd,\u5c31\u8bf4\u660e\u8fd9\u4e2a\u70b9\u4e0d\u5fc5\u8981,\u8f93\u51fa $0$;\u5982\u679c\u7b2c\u4e8c\u6b21\u6700\u5927\u6d41\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e86,\u8bf4\u660e\u8fd9\u4e2a\u70b9\u5fc5\u8981\uff0c\u8f93\u51fa $1$.\n\n\u4e0d\u7528\u8003\u8651\u5982\u679c\u524d\u9762\u7684\u70b9\u53d6 $0$ \u540e\u662f\u5426\u4f1a\u5bf9\u540e\u9762\u7684\u70b9\u4ea7\u751f\u5f71\u54cd,\u56e0\u4e3a\u53ea\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f,\u524d\u9762\u7684\u5c3d\u53ef\u80fd\u5c0f,\u540e\u9762\u7684\u518d\u5927\u4e5f\u65e0\u6240\u8c13.\n\n\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct node\n{\n\tint to,nxt;\n\tint flow;\n}edge[500001];//\u94fe\u5f0f\u524d\u5411\u661f\n\nint cnt=1,s,t,n,m;\nint head[1021];\nint cur[1021];\nint dep[1021];\nint r[10001];\nint c[10001];\nint id[201][201];//id\u6570\u7ec4\u4ee3\u8868\u70b9\u5bf9\u5e94\u7684\u8fb9\uff0c\u5176\u4e2d\u7b2c\u4e00\u7ef4\u7684n+1\u4ee3\u8868\u8fde\u5411\u6c47\u70b9\u7684\u8fb9\uff0c\u7b2c\u4e8c\u4f4d\u7684m+1\u4ee3\u8868\u8fde\u5411\u6e90\u70b9\u7684\u8fb9\n\nvoid add(int u,int v,int w)\n{\n\tedge[++cnt]={v,head[u],w};\n\thead[u]=cnt;\n\tedge[++cnt]={u,head[v],0};\n\thead[v]=cnt;\n}//\u4e00\u6b21\u52a0\u6b63\u5411\u548c\u53cd\u5411\u8fb9\n//\u4ee5\u4e0b\u4e3adinic\u677f\u5b50\nbool bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tqueue<int> q;\n\tdep[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];~i;i=edge[i].nxt)\n\t\t{\n\t\t\tint v=edge[i].to;\n\t\t\tif(!dep[v]&&edge[i].flow>0)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t\tif(v==t)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t} \n\treturn false;\n}\n\nint dfs(int u,int f)\n{\n\tif(u==t)\n\t\treturn f;\n\tint r=f;\n\tfor(int i=head[u];~i&&r;i=edge[i].nxt)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(dep[v]==dep[u]+1&&edge[i].flow>0)\n\t\t{\n\t\t\tint temp=dfs(v,min(r,edge[i].flow));\n\t\t\tif(!temp)\n\t\t\t\tdep[v]=0;\n\t\t\tedge[i].flow-=temp;\n\t\t\tedge[i^1].flow+=temp;\n\t\t\tr-=temp;\n\t\t}\n\t}\n\treturn f-r;\n}\n\nint dinic()\n{\n\tint mxflo=0;\n\twhile(bfs())\n\t{\n\t\tmxflo+=dfs(s,1e9);\n\t}\n\treturn mxflo;\n}//\u4ee5\u4e0a\u4e3adinic\u677f\u5b50\n\nint check(int x,int y)//check\u51fd\u6570\u4ee3\u8868\u7b2c(x,y)\u4e2a\u70b9\u662f\u5426\u5fc5\u987b\n{\n\tdinic();\n\tif(!r[x]||!c[y]) return 0;//\u5982\u679c\u6ca1\u67090\u53ef\u4ee5\u653e\u4e86\uff0c\u5219\u8f93\u51fa1\n\tr[x]--,c[y]--;//\u5047\u8bbe\u653e\u7f6e0\uff0c\u884c\u52170\u7684\u6570\u91cf\u90fd\u51cf\u4e00\n\tif(edge[id[x][y]].flow)//\u5982\u679c\u8fd9\u4e2a\u70b9\u672a\u88ab\u589e\u5e7f\uff0c\u5219\u4e0d\u5fc5\u8981\uff0c\u8f93\u51fa0\n\t{\n\t\tedge[id[x][y]].flow=0;//\u5220\u9664\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u8fb9\uff0c\u4ee5\u9632\u4eca\u540e\u518d\u6b21\u4f7f\u7528\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\tedge[id[x][y]^1].flow=0;//\u5220\u9664\u8fd9\u6761\u8fb9\uff0c\u518d\u6b21\u8dd1\u6700\u5927\u6d41\uff0c\u770b\u770b\u8fd9\u6761\u8fb9\u662f\u5426\u5fc5\u8981\n        edge[id[x][y]].flow=0;\n\t\tedge[id[x][m+1]^1].flow--;\n\t\tedge[id[x][m+1]].flow++;\n\t\tedge[id[n+1][y]^1].flow--;\n\t\tedge[id[n+1][y]].flow++;\n\t\tif(dinic()==1)//\u5982\u679c\u627e\u5230\u65b0\u7684\u589e\u5e7f\u8def\u66ff\u4ee3\u5219\u8fd9\u4e2a\u70b9\u4e0d\u5fc5\u8981\n\t\t\treturn 1;\n\t\tr[x]++;\n\t\tc[y]++;\n\t\tedge[id[n+1][y]].flow--;\n\t\tedge[id[n+1][y]^1].flow++;\n\t\tedge[id[x][m+1]].flow--;\n\t\tedge[id[x][m+1]^1].flow++;//\u8fd9\u4e2a\u70b9\u5fc5\u8981\uff0c\u6062\u590d\u539f\u72b6\n\t\treturn 0;\n\t}\n}\n\nint main()\n{\n\tmemset(head,-1,sizeof(head));\n\tcin>>n>>m;\n\ts=n+m+1;\n\tt=s+1;\n\tfor(int i=1;i<=n;i++) cin>>r[i];\n\tfor(int i=1;i<=m;i++) cin>>c[i]; \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tid[i][m+1]=cnt+1;\n\t\tadd(s,i,r[i]);\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(i==1)\n\t\t\t{\n\t\t\t\tid[n+1][j]=cnt+1;\n\t\t\t\tadd(j+n,t,c[j]);\n\t\t\t}\n\t\t\tid[i][j]=cnt+1;\n\t\t\tadd(i,j+n,1);\n\t\t}\n\t}//\u5efa\u56fe\uff0c\u521d\u59cb\u5316id\u6570\u7ec4\n\tfor(int i=1;i<=n;i++) r[i]=m-r[i];//\u6ce8\u610f\u8fd9\u91ccr\u548cc\u6570\u7ec4\u5df2\u7ecf\u88ab\u66ff\u6362\u62100\u7684\u6570\u91cf\n\tfor(int i=1;i<=m;i++) c[i]=n-c[i];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tcout<<1-check(i,j);//\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u5224\u65ad\n\t\tcout<<endl;\n\t}\n}\n```\n",
        "postTime": 1685540505,
        "uid": 305854,
        "name": "Drind",
        "ccfLevel": 0,
        "title": "[TJOI2011]P1418 \u9898\u89e3"
    },
    {
        "content": "\u89e3\u6cd51 \uff1a \u9012\u5f52+\u56de\u6eaf\n\n\u6bcf\u4e2a\u4f4d\u7f6e\u627e0\u548c1\uff0c\u5982\u679c\u641c\u4e0d\u4e0b\u53bb\u4e86\u5c31\u56de\u6eaf\uff0c\u4e00\u641c\u5230\u5c31\u9a6c\u4e0a\u8f93\u51fa\u5e76\u4e14\uff0cexit(0)\n\n\u542c\u8bf4\u662f\u53ef\u4ee5\u62ff50\u5206\n\n1<= n,m <= 100 \uff0c\u4e0d\u7528\u8bf4\u90fd\u4f1a\u8d85\u65f6\n\n\u00a0\n\n\u89e3\u6cd52\uff1a\u7f51\u7edc\u6d41\n\n\u641c\u5230\u5f53\u524d\u4f4d\u7f6e\uff0c\u5c31\u7528\u7f51\u7edc\u6d41\u5224\u65ad\u8fd9\u4e2a\u5982\u679c\u8fd9\u4e2a\u4f4d\u7f6e\u586b\u4e0a0\uff0c\u662f\u5426\u6709\u89e3\n\n\u82e5\u6709\u89e3\u6bd4\u5982\u4e3a0 \uff0c\u5426\u5219\u4e3a1\u00a0\n\n\u56e0\u4e3a\u8981\u5224\u65ad\u662f\u5426\u80fd\u586b0\uff0c\u6211\u4eec\u5c31\u628a1\u7684\u4e2a\u6570\u6539\u62100\u7684\u4e2a\u6570\n\n\u7f51\u7edc\u6d41\u96be\u5728\u5efa\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u884c\u6bcf\u5217\u60f3\u8c61\u6210\u4e00\u4e2a\u70b9\uff0c\u5e76\u5bf9\u7740\u540e\u9762\u7684\u70b9\u5efa\u56fe\n\n\u8d77\u70b9\u4e0e\u6bcf\u884c\u5efa\u7acb\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3ar[] \uff0c \u6bcf\u884c\u4e0e\u6bcf\u5217\u5efa\u8fb9\uff0c\u6d41\u91cf\u4e3ac[]\u00a0\n\n\u5f53\u641c\u7d22\u5230\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u5148\u5224\u65ad\u8fd9\u4e2a\u70b9\u5728\u524d\u9762\u8dd1\u8fc7\u7684dicnic\u4e2d\u662f\u5426\u6709\u6d41\u91cf\u8d70\u8fc7\n\n\u5982\u679c\u6709\u90a3\u4e48\u80af\u5b9a\u662f0\uff0c\u5426\u5219\u91cd\u65b0\u5efa\u56fe\u518d\u6b21\u5224\u65ad\n\n\u5982\u679c\u6700\u5927\u6d41\u4e3aa[i]\u4e4b\u548c\uff0c\u8bf4\u660e\u53ef\u4ee5\u586b0\n\n\u89e3\u6cd51 \uff1a \u9012\u5f52+\u56de\u6eaf\n\n\u6bcf\u4e2a\u4f4d\u7f6e\u627e0\u548c1\uff0c\u5982\u679c\u641c\u4e0d\u4e0b\u53bb\u4e86\u5c31\u56de\u6eaf\uff0c\u4e00\u641c\u5230\u5c31\u9a6c\u4e0a\u8f93\u51fa\u5e76\u4e14\uff0cexit(0)\n\n\u542c\u8bf4\u662f\u53ef\u4ee5\u62ff50\u5206\n\n1<= n,m <= 100 \uff0c\u4e0d\u7528\u8bf4\u90fd\u4f1a\u8d85\u65f6\n\n\u00a0\n\u7f51\u7edc\u6d41\u4e4b\u6240\u4ee5\u6bd4\u9012\u5f52\u5feb\n\n\u662f\u56e0\u4e3a\u7f51\u7edc\u6d41\u80fd\u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u53ca\u4ee5\u540e\u7684\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u4f46\u662f\u9012\u5f52\u53ea\u80fd\u627e\u5230\u5c40\u90e8\u6700\u4f18\u89e3\n\n\u5177\u4f53\u70b9\u8bf4\uff0c\u5c31\u662f\u7f51\u7edc\u6d41\u4e0d\u4ec5\u8003\u8651\u73b0\u5728\uff0c\u800c\u4e14\u8003\u8651\u4e86\u5168\u5c40\n\n\u800c\u9012\u5f52\u53ea\u662f\u65e0\u8111\u7684\u53bb\u66b4\u529b\u641c\u7d22\uff0c\u53ea\u662f\u5224\u65ad\u8fd9\u4e2a\u4f4d\u7f6e\u586b\u8fd9\u4e2a\u6570\u662f\u5426\u884c\uff0c\u80fd\u5c31\u7ee7\u7eed\u627e\uff0c\u4e0d\u80fd\u5c31\u56de\u6eaf\uff0c\u56e0\u6b64\u5c31\u6162\u4e86\n\n\u4ee3\u7801\u89c1 \uff1a[Myblog](https://blog.csdn.net/zsyzClb/article/details/85037738)\n",
        "postTime": 1544947660,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1418 \u3010[TJOI2011]\u6784\u9020\u77e9\u9635\u3011"
    }
]