[
    {
        "content": "\u8fd9\u9053\u9898\u6211AC\u7684\u7b97\u6cd5\u662f\u4e8c\u5206\uff08\u8bb8\u591a\u5927\u4f6c\u7528\u4f18\u5148\u961f\u5217\u7136\u800c\u849f\u84bb\u4e0d\u4f1a\u3002\u3002\u3002\uff09\u3002\n\n\u8fd9\u9053\u9898\u5982\u679c\u4f7f\u7528\u4e8c\u5206\u601d\u8def\u4f1a\u5f88\u7b80\u5355\u3002\u9996\u5148\uff0c\u5c06\u6bcf\u4e2a\u5b66\u6821\u7684\u5f55\u53d6\u5206\u6570\u7ebf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u63a5\u7740\u5f00\u59cb\u4e8c\u5206\u67e5\u627e\uff0c\u67e5\u627e\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u5e94\u8be5\u67e5\u627e\u6bcf\u4e2a\u5b66\u6821\u5f55\u53d6\u5206\u6570\u7ebf\u4e2d\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u6bcf\u4e2a\u540c\u5b66\u5206\u6570\u7684\u6570\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2awhile\u5faa\u73af\u6765\u6a21\u62df\u4e8c\u5206\u67e5\u627e\u3002\n\n\u4e8c\u5206\u67e5\u627e\u90e8\u5206\u7684\u601d\u8def\u5982\u4e0b\u6240\u793a\uff1a\n\n\u9996\u5148\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf\uff0c\u4e3al,r\uff0c\u5206\u522b\u4e3a\u67e5\u627e\u8303\u56f4\u7684\u5de6\u8fb9\u754c\u548c\u53f3\u8fb9\u754c\u3002\u63a5\u7740while\u5faa\u73af\uff0c\u9996\u5148\u5224\u65adwhile\u5faa\u73af\u7684\u6761\u4ef6\u662fl<r,\u63a5\u7740\u5728\u5faa\u73af\u91cc\u5b9a\u4e49\u4e00\u4e2a\u53ebmid\u7684\u53d8\u91cf\uff0cmid=(l+r)/2;\u7136\u540e\u5224\u65ad\uff1a\u5982\u679ca[mid]\uff0c\u5373\u5f55\u53d6\u5206\u6570\u7ebf\u6570\u7ec4\u4e2d\u7684\u7b2cmid\u4e2a\u5143\u7d20\u5c0f\u4e8e\u6216\u7b49\u4e8e\u90a3\u4f4d\u540c\u5b66\u7684\u5206\u6570\uff0cmid+1\u8d4b\u503c\u7ed9l\uff0c\u5426\u5219\uff0cmid\u8d4b\u503c\u7ed9r\u3002\n\n\u6700\u540e\u67e5\u627e\u5b8c\u540e\uff0c\u90a3\u4e48\u6c42\u5f55\u53d6\u5206\u6570\u7ebf\u6570\u7ec4\u4e2d\u7684\u7b2cl-1\u4e2a\u5143\u7d20\u548c\u5f55\u53d6\u5206\u6570\u7ebf\u6570\u7ec4\u4e2d\u7684\u7b2cl\u4e2a\u5143\u7d20\u4ed6\u4eec\u4e24\u4e0e\u90a3\u4f4d\u540c\u5b66\u7684\u4f30\u5206\u7684\u7edd\u5bf9\u503c\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u7d2f\u52a0\u4e24\u4e2a\u7edd\u5bf9\u503c\u4e2d\u6700\u5c0f\u7684\u3002\n\n\u6700\u540e\u8f93\u51fa\u89e3\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u4e3aO(m*log(n));\n\n\u4e0b\u9762\u732e\u4e0a\u4ee3\u7801(c++)\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <algorithm>//\u5934\u6587\u4ef6\nusing namespace std;//\u540d\u5b57\u7a7a\u95f4\nint a[100100],b[100100];//\u5b9a\u4e49\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u50a8\u5b58\u6bcf\u4e2a\u5b66\u6821\u7684\u5206\u6570\u7ebf\uff0c\u548c\u6bcf\u4e2a\u540c\u5b66\u7684\u4f30\u5206\nint main()//\u4e3b\u51fd\u6570\n{\n\tint n,m;//\u5b9a\u4e49n,m\n\tcin>>n>>m;//\u8f93\u5165\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tcin>>a[i];//\u8f93\u5165\n\t}\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tcin>>b[i];//\u8fd8\u662f\u8f93\u5165\n\t}\n\tsort(a+1,a+n+1);//\u628a\u6bcf\u4e2a\u5b66\u6821\u7684\u5206\u6570\u7ebf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\tint ans=0;//\u7b54\u6848\u4e00\u5f00\u59cb\u4e3a0\uff0c\u56e0\u4e3a\u8981\u7d2f\u52a0\u548c\u3002\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tint l=0,r=n+1;//\u5b9a\u4e49\u5de6\u8fb9\u754c\u4e0e\u53f3\u8fb9\u754c\n\t\twhile(l<r)\n\t\t{\n\t\t\tint mid=(l+r)/2;//\u53d6\u67e5\u627e\u8303\u56f4\u7684\u4e2d\u95f4\u503c\n\t\t\tif(a[mid]<=b[i])//\u5982\u679c\u5f55\u53d6\u5206\u6570\u7ebf\u6570\u7ec4\u4e2d\u7684\u7b2cmid\u4e2a\u5143\u7d20\u5c0f\u4e8e\u6216\u7b49\u4e8e\u90a3\u4f4d\u540c\u5b66\u7684\u5206\u6570\n\t\t\t{\n\t\t\t\tl=mid+1;//\u5de6\u8fb9\u754c\u5c31\u5f80\u53f3\u79fb\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tr=mid;//\u53f3\u8fb9\u754c\u5c31\u5f80\u5de6\u79fb\n\t\t\t}\n\t\t}\n\t\tif(b[i]<=a[1])//\u8fd9\u91cc\u9700\u8981\u7279\u5224\u65ad\u4e00\u4e0b\uff0c\u4e0d\u7136\u53ea\u80fd\u5f9770\u5206\n\t\t{\n\t\t\tans+=a[1]-b[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans+=min(abs(a[l-1]-b[i]),abs(a[l]-b[i]));//\u52a0\u4e0a\u4e24\u4e2a\u7edd\u5bf9\u503c\u4e2d\u6700\u5c0f\n\t\t}\n\t}\n\tcout<<ans;//\u8f93\u51faans\n\treturn 0;//\u7ed3\u675f\u7a0b\u5e8f\n}\n```\n\n\n",
        "postTime": 1520417704,
        "uid": 42443,
        "name": "06ray",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u5c45\u7136\u6ca1\u6709\u7528\u6211\u4eec\u4e07\u6076\u7684$lower$_$bound$\u7684\uff0c\u5bb3\u7684\u6211\u524d\u9762\u8fd8\u4e0d\u77e5\u9053\u81ea\u5df1\u54ea\u9519\u4e86  \n## lower_bound\u5c5e\u4e8eC++\u5185\u7f6eSTL\u7684\u4e00\u79cd\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5728\u6709\u5e8f\u6570\u7ec4\u4e0b\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u5f85\u67e5\u5143\u7d20\u7684\u503c\u7684\u4f4d\u7f6e\u3002   \n\n### \u51fd\u6570\u7528\u6cd5\n```\nint c=lower_bound(\u5f00\u59cb\u67e5\u8be2\u7684\u4f4d\u7f6e\u3010\u95ed\u533a\u95f4\u3011\uff0c\u7ed3\u675f\u67e5\u8be2\u7684\u4f4d\u7f6e\u3010\u5f00\u533a\u95f4\u3011\uff0c\u67e5\u8be2\u7684\u6570)-\u6570\u7ec4\u6307\u9488;\n\n```\n\u53ef\u4ee5\u8fd4\u56de\u67e5\u8be2\u5230\u7684\u6570\u7684\u6570\u7ec4\u4e0b\u6807\u3002  \n\u90a3\u5982\u679c\u6ca1\u6709\u5927\u4e8e\u7b49\u4e8e\u5f85\u67e5\u5143\u7d20\u7684\u503c\u600e\u4e48\u529e\uff1f  \n\u51fd\u6570\u4f1a\u8f93\u51fa\u7ed3\u675f\u67e5\u8be2\u7684\u4f4d\u7f6e\uff0c\u5e94\u4e3a\u4ed6\u5e76\u6ca1\u6709\u627e\u5230\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u7528lower_bound\u6109\u5feb\u7684\u6765\u5199\u8fd9\u9053\u9898\u4e86\u3002  \n\n\u7c7b\u4f3c\u7684\u8fd8\u6709upper_bound\uff0c\u53ef\u4ee5\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u5f85\u67e5\u5143\u7d20\u7684\u503c\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a,b,c[100002],d,e,f,g,h,i,j,k,l;\nlong long ans;\nint main()\n{\n    cin>>a>>b;\n    for(i=1;i<=a;i++)\n        cin>>c[i];\n    sort(c+1,c+a+1);//\u5148\u6392\u5e8f\u4e00\u4e0b\n    for(i=1;i<=b;i++)\n    {\n        cin>>d;\n        e=lower_bound(c+1,c+a+1,d)-c;//\u8fd4\u56de\u67e5\u8be2\u5230\u7684\u4f4d\u7f6e\n        if(e==a+1)\n        ans+=d-c[a];//\u7279\u5224\u6bd4\u6240\u6709\u6570\u90fd\u5927\u7684\u60c5\u51b5\n        else\n            if(e==1)//\u7279\u5224\u6bd4\u6240\u6709\u6570\u90fd\u5c0f\u7684\u60c5\u51b5\n                ans+=c[1]-d;\n            else\n                ans+=min(abs(c[e]-d),abs(d-c[e-1]));\n    }\n    return 0;\n}\n```",
        "postTime": 1534669556,
        "uid": 107101,
        "name": "Viston",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "# \u611f\u8c22 @\u5b89\u7b19\u51c9\u57ce \u7684\u63d0\u9192\uff0c\u4f18\u5148\u961f\u5217\u7684\u786e\u5fd8\u8bb0\u52a0\u7a7a\u683c\u4e86\n\n\n# \u4e3a\u8d2a\u5fc3\u6b63\u540d\uff0c\u770b\u4e86\u770b\u597d\u50cf\u6ca1\u6709\u8d2a\u5fc3\u7684\uff0c\u5c31\u6765\u4e2a\u8d2a\u5fc3\u5427\n\n\u9996\u5148\uff0c\u4f5c\u4e3a\u8d2a\u5fc3\uff0c\u8bfb\u5b8c\u9898\u540e\uff0c\u5e94\u8be5\u77e5\u9053\u9700\u8981\u6392\u5e8f\uff0c\u53ef\u4ee5\u7f29\u77ed\u9700\u8981\u7684\u65f6\u95f4\n\n\u7136\u540e\uff0c\u5206\u522b\u627e\u5230\u4e0e\u6bcf\u4e2a\u5b66\u751f\u9884\u4f30\u5206\u6570\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u5b66\u6821\uff0c\u987a\u7740\u63a8\u5c31\u53ef\u4ee5\n\n\u8fd8\u6ca1\u6709\u601d\u8def\u7684\u8bdd\uff0c\u5c31\u6765\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u5427\n\n# \u65b9\u6cd5\u4e00\uff1aSTL\u4f18\u5148\u961f\u5217\uff08\u5f53\u7136\u672c\u4eba\u6c34\u5e73\u6709\u9650\uff0c\u4e5f\u53ea\u662f\u5b66\u751f\u4f18\u5148\u961f\u5217\uff0c\u5269\u4e0b\u5b66\u6821\u8fd8\u662f\u624b\u5199\uff09\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cmath>//\u4f7f\u7528abs\u7edd\u5bf9\u503c\u51fd\u6570 \n#include<queue>//\u4f7f\u7528\u4f18\u5148\u961f\u5217 \nusing namespace std;\n#define re register//register\u52a0\u901f\u7a0b\u5e8f\u8fd0\u884c\u901f\u5ea6\uff0c\u4e0d\u61c2\u767e\u5ea6\uff0c\u6211\u4e5f\u89e3\u91ca\u4e0d\u5927\u4e86\uff0c\u4e0d\u61c2\u52ff\u7528 \nconst int maxn=100001;\npriority_queue<int,vector<int>,greater<int> >a;//\u4f18\u5148\u961f\u5217\uff0c\u5b66\u751f\u6210\u7ee9 \nint main(){\n    int b[maxn],m,n,k=1,sum=0;//b\u662f\u5b66\u6821\u5f55\u53d6\u7ebf\uff0csum\u662f\u4e0d\u6ee1\u610f\u5ea6\uff0ck\u662f\u76ee\u524d\u8d70\u5230\u7684\u5b66\u6821 \n    cin>>m>>n;\n    for(re int i=1;i<=m;i++)cin>>b[i];\n    for(re int i=1;i<=n;i++){\n        re int x;\n        cin>>x;\n        a.push(x);\n    }\n    sort(b+1,b+m+1);//\u628a\u5b66\u6821\u7684\u5f55\u53d6\u7ebf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n    for(re int i=1;i<=n;i++){//n\u4e2a\u5b66\u751f\uff0c\u4ece\u5c0f\u5230\u5927 \n        re int x=a.top(),p=abs(x-b[k]);//x\u4e3a\u6b64\u5b66\u751f\u5206\u6570\uff0cp\u5b58\u7684\u662f\u9009\u53d6k\u5b66\u6821\u7684\u4e0d\u6ee1\u610f\u503c \n        a.pop();//\u5f39\u51fa \n        while(abs(x-b[k+1])<=p){//\u5982\u679c\u4e0b\u4e00\u4e2a\u5b66\u6821\u66f4\u5c0f\uff0c\u9009\u4e0b\u4e00\u4e2a\uff08\u6ce8\u610f\uff1a\u4e00\u5b9a\u662f\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u4e0d\u660e\u767d\u79c1\u4fe1\u6211\uff09 \n            k++;\n            p=abs(x-b[k]);\n        }\n        sum+=p;//\u52a0\u4e0a\u8fd9\u4e2a\u5b66\u751f\u7684\u4e0d\u6ee1\u610f\u503c \n    }\n    cout<<sum;\n    return 0;\n}\n```\n\u65b9\u6cd5\u4e00\u7684\u65b9\u6cd5\u867d\u7136\u770b\u8d77\u6765\u5f88\u5389\u5bb3\uff0c\u4f46\u662f\u65f6\u95f4\u7a0d\u5fae\u6709\u70b9\u6162\uff0c\u90a3\u5c31\u9700\u8981\u65b9\u6cd5\u4e8c\u4e86\u2014\u2014\u7eaf\u624b\u5199\u961f\u5217\n\n# \u65b9\u6cd5\u4e8c\uff1a\u624b\u5199\u961f\u5217\uff08\u8ddf\u4e0a\u9762\u7684\u5dee\u4e0d\u592a\u591a\uff0c\u5927\u5bb6\u770b\u4e0a\u9762\u7684\u6ce8\u91ca\u5427\uff0c\u4e0d\u61c2\u53ef\u4ee5\u79c1\u4fe1\u6211\uff09\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cmath>\nusing namespace std;\n#define re register\nconst int maxn=100001;\nlong long a[maxn],b[maxn];\nint main(){\n    re long long m,n,k=1,sum=0;\n    cin>>m>>n;\n    for(re int i=1;i<=m;i++)cin>>b[i];\n    for(re int i=1;i<=n;i++)cin>>a[i];\n    sort(a+1,a+n+1);\n    sort(b+1,b+m+1);\n    for(re int i=1;i<=n;i++){\n        re long long p=abs(a[i]-b[k]);\n        while(abs(a[i]-b[k+1])<=p){\n            k++;\n            p=abs(a[i]-b[k]);\n        }\n        sum+=p;\n    }\n    cout<<sum;\n    return 0;\n}\n```\n\u597d\u4e86\uff0c\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u611f\u8c22\u5927\u5bb6\u7684\u9605\u89c8\n\n# \u4e0d\u559c\u52ff\u55b7\uff0c\u8bf7\u52ff\u6284\u88ad\n\n~~\u62dc~~\n",
        "postTime": 1497948527,
        "uid": 34530,
        "name": "\u5b50\u8c26\u3002",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "##### \u524d\u8a00\uff1a\n\u770b\u4e86\u5404\u8def\u5927\u795e\u7684\u4e8c\u5206\uff0c\u6211\u8868\u793a\u3002\u3002\u3002\u6211\u5b9e\u5728\u662f\u6ca1\u60f3\u5230\u4e8c\u5206\uff0c\u5c31\u81ea\u5df1\u6b6a\u6b6a\u4e86\u4e2a\u53ea\u9700\u8981\u6392\u4e2a\u5e8f\u7684\u7b97\u6cd5\u3002\n##### \u5206\u6790:\n\u6839\u636en\u4f4d\u5b66\u751f\u7684\u4f30\u5206\u60c5\u51b5\uff0c\u5206\u522b\u7ed9\u6bcf\u4f4d\u5b66\u751f\u63a8\u8350\u4e00\u6240\u5b66\u6821\uff0c\u8981\u6c42\u5b66\u6821\u7684\u9884\u8ba1\u5206\u6570\u7ebf\u548c\u5b66\u751f\u7684\u4f30\u5206\u76f8\u5dee\u7684\u503c\u7684\u548c\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u8981\u7ed9\u6bcf\u4e00\u4e2a\u5b66\u751f\u627e\u4e00\u4e2a\u548c\u4ed6\u5206\u6570\u6700\u63a5\u8fd1\u7684\u5b66\u6821\uff0c\u7136\u540e\u6c42\u548c\u3002\n##### \u601d\u8def\u5982\u4e0b\uff1a\n1.\u628a\u5b66\u751f\u548c\u5b66\u6821\u7684\u5206\u6570\u6df7\u5728\u4e00\u8d77\uff0c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u6807\u8bb0\u54ea\u4e9b\u662f\u5b66\u751f\u7684\u5206\u6570\u54ea\u4e9b\u662f\u5b66\u6821\u7684\u5206\u6570\u3002\n\n2.\u4ece\u5934\u5f00\u59cb\u627e\uff0c\u5982\u679c\u9047\u4e0a\u54ea\u4e2a\u5206\u6570\u662f\u5b66\u751f\u7684\uff0c\u5c31\u5206\u522b\u627e\u5230\u4ed6\u524d\u9762\u548c\u540e\u9762\u7684\u4e00\u6240\u5b66\u6821\uff0c\u770b\u770b\u54ea\u4e2a\u5dee\u503c\u6700\u5c0f\u52a0\u4e0a\u54ea\u4e2a\u3002\n##### \u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n1.\u5982\u679c\u8fd9\u4e2a\u5b66\u751f\u662f\u6392\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\uff0c\u53ea\u80fd\u5f80\u540e\u53d6\u503c\u3002\u5982\u679c\u8fd9\u4e2a\u5b66\u751f\u662f\u6392\u5217\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u53ea\u80fd\u5f80\u524d\u53d6\u503c\u3002\n\n2.\u5373\u4f7f\u8fd9\u4e2a\u5b66\u751f\u4e0d\u662f\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u6709\u53ef\u80fd\u5b83\u524d\u9762\u90fd\u662f\u5b66\u751f\u800c\u6ca1\u6709\u5b66\u6821\uff0c\u8fd9\u6837\u4ed6\u5f80\u524d\u627e\u7684\u7b2c\u4e00\u4e2a\u548c\u4ed6\u4e0d\u662f\u540c\u4e00\u7c7b\u578b\u7684\u70b9\u4e3a0,\u4e00\u4e2a\u65e0\u610f\u4e49\u70b9\uff0c\u6b64\u65f6\u9700\u8981\u7279\u5224\u3002\u5373\u4f7f\u8fd9\u4e2a\u5b66\u751f\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\uff0c\u4e5f\u6709\u53ef\u80fd\u5b83\u540e\u9762\u90fd\u662f\u5b66\u751f\u800c\u6ca1\u6709\u5b66\u6821\uff0c\u8fd9\u6837\u4ed6\u5f80\u540e\u627e\u7684\u7b2c\u4e00\u4e2a\u548c\u4ed6\u4e0d\u662f\u540c\u4e00\u7c7b\u578b\u7684\u70b9\u4e3an+m+1,\u4e00\u4e2a\u65e0\u610f\u4e49\u70b9\uff0c\u6b64\u65f6\u9700\u8981\u7279\u5224\u3002\uff08\u5176\u5b9e1.\u4e2d\u60c5\u51b5\u5b8c\u5168\u53ef\u4ee5\u5f52\u5230\u8fd9\u91cc\uff0c\u4e0d\u8fc7\u6211\u61d2\u5f97\u6539\u4e86\uff08\u9003~\n\n##### \u4ee3\u7801\uff1a\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nstruct llo{\n\tint val,used;\n}a[200003];\nint n,m;\nlong long ans;\nbool cmp(llo x,llo y){\n\treturn x.val<y.val;\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\t\n\t\tscanf(\"%d\",&a[i].val);\n\tfor(int i=n+1;i<=n+m;i++){\n\t\tscanf(\"%d\",&a[i].val);\n\t\ta[i].used=1;\n\t}\n\tsort(a+1,a+n+m+1,cmp);\n\tfor(int i=1;i<=n+m;i++){\n\t\tif(a[i].used==1){\n\t\t\tint qian=i-1,hou=i+1;\n\t\t\tif(i!=1)\n\t\t\t\twhile(a[qian].used!=0)\n\t\t\t\t\tqian--;\n\t\t\tif(i!=n+m)\n\t\t\t\twhile(a[hou].used!=0)\n\t\t\t\t\thou++;\n\t\t\tif(i==1||qian==0)\tans=ans+a[hou].val-a[i].val;\n\t\t\telse if(i==n+m||hou==n+m+1)\tans=ans+a[i].val-a[qian].val;\n\t\t\telse ans=ans+min(a[i].val-a[qian].val,a[hou].val-a[i].val);\n\t\t}\n\t\t\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1569234009,
        "uid": 143445,
        "name": "sy_zmq_001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u8fd9\u51e0\u5929\u5728\u770b\u4e8c\u5206\uff0c\u4e8e\u662f\u51b3\u5b9a\u603b\u7ed3\u4e00\u4e0b\u6c34\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n\u505a\u4e86\u8fdb\u51fb\u7684\u5976\u725b\u8fd9\u79cd\u542f\u53d1\u9898\u4ee5\u540e\uff0c\u53d1\u73b0\u4e8c\u5206\u6cd5\u5728\u6c42\u89e3\u6700\u4f18\u89e3\u7684\u95ee\u9898\u4e0a\u4e5f\u6709\u8db3\u591f\u660e\u663e\u7684\u4f18\u52bf\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\u4e5f\u4e0d\u4f8b\u5916\n\n\u5982\u679c\u4ec5\u4ec5\u662f\u5957\u5faa\u73af\u7684\u8bdd\u663e\u7136\u5728\u6570\u636e\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\u662f\u4e0d\u591f\u4f18\u5316 \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u5f97\u5230\u7684\u5206\u6570\u7ebf\u6392\u5e8f\u518d\u4e8c\u5206\u64cd\u4f5c\u3002\n\n\u8fd9\u9053\u9898\u4e8c\u5206\u7684\u539f\u7406\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u6c42\u7684\u662f\u67d0\u4e00\u4e2a\u5b66\u751f\u548c\u67d0\u4e00\u4e2a\u5206\u6570\u7ebf\u6700\u5c0f\u7684\u5dee\u7684\u7edd\u5bf9\u503c\uff0c**\u5f53\u6211\u4eec\u91c7\u7528\u4e8c\u5206\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5f88\u5feb\u903c\u8fd1\u6211\u4eec\u8981\u627e\u7684\u90a3\u4e2a\u5206\u6570\u7ebf\uff0c\u5e76\u4e14\u5728\u5176\u9644\u8fd1\u6ce2\u52a8**\uff0c\u53ea\u9700\u8981**\u65e0\u8111\u8bb0\u5f55\u5728\u6ce2\u52a8\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u8fc7\u7684\u6700\u5c0f\u7684\u5dee\u7684\u7edd\u5bf9\u503c**\uff0c\u5c31\u53ef\u4ee5\u627e\u5230\u9898\u76ee\u7684\u7b54\u6848\u4e86\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint line[100005];\nint main()\n{\n\tint m,n;\n\tcin>>m>>n;\n\tint t=0,k=0;\n\twhile(t<m)\n\t{\n\t\tcin>>line[t];\n\t\tt++;\n\t}\n\tsort(line,line+t);//\u4ee5\u4e0a\u662f\u8bfb\u5165\u548c\u6392\u5e8f\u5206\u6570\u7ebf\n\tint sum=0;\n\twhile(k<n)\n\t{\n\t\tint num;\n\t\tcin>>num;\n\t\tk++;\n\t\tint L=0,R=t-1;\n\t\tint ans=1000;//\u6700\u5c0f\u7684\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u503c\n\t\twhile(L<=R)//\u7ec8\u6b62\u6761\u4ef6\n\t\t{\n\t\t\tint mid=(L+R)/2;//\u53d6\u4e2d\u95f4\u503c\u5224\u65ad\n\t\t\tif(line[mid]==num)\n\t\t\t{\n\t\t\t\tans=0;\n\t\t\t\tbreak;//\u96f6\u5fc5\u7136\u4e3a\u6700\u5c0f\u7684\u6240\u6c42\u89e3\uff0c\u6240\u4ee5\u53ef\u76f4\u63a5\u7ec8\u6b62\u4e8c\u5206\uff0c\u8282\u7ea6\u65f6\u95f4\n\t\t\t}\n\t\t\telse if(line[mid]<num)\n\t\t\t{\n\t\t\t\tans=min(ans,abs(line[mid]-num));\n\t\t\t\tL=mid+1;//\u53ef\u80fd\u7684\u66f4\u597d\u7684\u7b54\u6848\u5728\u53f3\u8fb9\uff0c\u53f3\u79fb\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u7ee7\u7eed\u641c\u7d22\n\t\t\t}\n\t\t\telse if(line[mid]>num)\n\t\t\t{\n\t\t\t\tans=min(ans,abs(line[mid]-num));\n\t\t\t\tR=mid-1;//\u53ef\u80fd\u7684\u66f4\u597d\u7684\u7b54\u6848\u5728\u5de6\u8fb9\uff0c\u5de6\u79fb\uff0c\u8bb0\u5f55\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u7ee7\u7eed\u641c\u7d22\n\t\t\t}\n\t\t}\n\t\tsum+=ans;\n\t}\n\tcout<<sum;\n}\n```\n\n\u8fd9\u6837\u770b\u6765\uff0c\u7ebf\u6027\u60c5\u51b5\u4e0b\uff0c\u4e8c\u5206\u7684\u8fc7\u7a0b\u4e2d\u6700\u91cd\u8981\u7684\u8bb0\u5f55\u72b6\u6001\uff0c\u9009\u62e9\u533a\u95f4\u548c\u5224\u65ad\u662f\u6838\u5fc3\u90e8\u5206\u3002\n",
        "postTime": 1582870832,
        "uid": 298774,
        "name": "itandsoon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5982\u679c\u4f60\u76f4\u63a5\u66b4\u529b\u5c31\u7b97\u662f\u5438\u6c27\u4e5f\u53ea\u670940\uff08\u5b9e\u6d4b\uff0c\u660e\u6446\u7684\u4e8c\u5206\u561b\uff09\n\n### ~~\u6240\u4ee5\uff0c\u62d2\u7edd\u66b4\u529b\uff0c\u7406\u6027\u4e3a\u4e3b~~\n\n\u597d\u4e86\uff0c\u5176\u4ed6\u601d\u7ef4\u4e5f\u6ca1\u4ec0\u4e48\u4e86\uff0c\u4e8c\u5206\u8c01\u90fd\u4f1a\u6253\uff0c\n\n\u6240\u4ee5\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0aAC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100000],b[100000];\nint main()\n{\n\tint s=0,y;\n\tint max=10000;\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)cin>>a[i];\n\tsort(a+1,a+n+1);\n\tfor(int j=1;j<=m;j++)cin>>b[j];\n\tint left,right,mid;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tleft=1;\n\t\tright=n;\n\t\twhile(left<right-1)\n        {\n            mid=(left+right)/2;\n            if(b[i]>=a[mid])\n            left=mid;\n            else right=mid;\n        }\n        if((b[i]-a[left])<abs(a[right]-b[i]))\n        {\n        \ty=abs(b[i]-a[left]);\n        }else y=abs(a[right]-b[i]);\n        s+=y;\n\t}\n\tcout<<s;\n    return 0;\n}\n\n```\n\n\u6ce8\uff1a\u6b64\u7a0b\u5e8f\u4e3a\u5065\u5eb7\u7a0b\u5e8f\uff0c\u65e0\u9700\u5438\u6c27",
        "postTime": 1574253528,
        "uid": 219814,
        "name": "xiezihan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u771f\u7684\u6ca1\u90a3\u4e48\u590d\u6742\uff0c\u8f93\u5165\u4f18\u5316\u4ec0\u4e48\u7684\u5176\u5b9e\u6ca1\u5fc5\u8981\uff0cscanf0.11S \u53e6\u5916\u5f00int\u4e5f\u53ef\u4ee5A\u6389\n\n\u6392\u5e8f\u4ee5\u540e\u4e8c\u5206\u5c31\u884c\u4e86\uff0c\u5176\u5b9e\u8fde\u51fd\u6570\u90fd\u6ca1\u5fc5\u8981\u5199\uff0c\u76f4\u63a5\u5f15\u7528\u6570\u7ec4\u5c31\u53ef\u4ee5A\u4e86\n\n\u697c\u4e0a\u9898\u89e3\u5176\u5b9e\u53ef\u8bfb\u6027\u771f\u7684\u4e0d\u9ad8\uff0c\u6211\u653e\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u601d\u8def\n\n\u6211\u7684\u9898\u89e3\u6211\u611f\u89c9\u666e\u53ca\u7ec4\u90fd\u53ef\u4ee5\u8f7b\u677e\u770b\u61c2\u5427\uff08\u7b11~\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint a[100005],b[100005];\nint n,m;\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<n;i++) scanf(\"%d\",&a[i]);\n    for(int i=0;i<m;i++) scanf(\"%d\",&b[i]);\n    sort(a,a+n);//\u6392\u5e8f\n    int tot=0;\n    for(int i=0;i<m;i++){\n        int zuo=0,you=n-1,ans=0x7fffffff,now=0;\n        while(zuo<=you){\n            int c=(zuo+you)/2;\n            if(a[c]<b[i]){\n                ans=min(ans,abs(b[i]-a[c]));//\u627e\u6700\u5c0f\u7edd\u5bf9\u503c\n                zuo=c+1;\n            }\n            else{\n                you=c-1;\n                ans=min(ans,abs(b[i]-a[c]));\n            }\n        }\n        tot+=ans;//\u8bb0\u5f55\u6700\u5c0f\u7edd\u5bf9\u503c\n    }\n    printf(\"%d\",tot);\n}\n```",
        "postTime": 1490248959,
        "uid": 29610,
        "name": "SGOI_Aromyase",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "## \u7b80\u5355\u7684\u4e09\u5206\u3002\n\u6a21\u677f\u9898\uff0c\u4e0d\u96be\uff0c\u5f88\u591a\u65b9\u6cd5\u90fd\u80fd\u89e3\uff0c\u4f46\u4e09\u5206\u8f83\u5feb\u3002\n\u4e09\u5206\u662f\u7528\u6765\u6c42\u51f8\u5f62\u6216\u51f9\u5f62\u51fd\u6570\u7684\u51f8\u70b9\u6216\u51f9\u70b9\u3002\n\n### \u4e3e\u4e2a\u6817\u5b50\n\u5df2\u77e5\u5de6\u53f3\u7aef\u70b9L\u3001R\uff0c\u8981\u6c42\u627e\u5230\u767d\u70b9\u7684\u4f4d\u7f6e\u3002 \n\n\u601d\u8def\uff1a\u901a\u8fc7\u4e0d\u65ad\u7f29\u5c0f [L,R] \u7684\u8303\u56f4\uff0c\u65e0\u9650\u903c\u8fd1\u767d\u70b9\u3002\n\n\u5148\u53d6 [L,R] \u7684\u4e2d\u70b9 mid\uff0c\u518d\u53d6 [mid,R] \u7684\u4e2d\u70b9 mmid\uff0c\n\n\u901a\u8fc7\u6bd4\u8f83 f(mid) \u4e0e f(mmid) \u7684\u5927\u5c0f\u6765\u7f29\u5c0f\u8303\u56f4\u3002\n\u5f53\u6700\u540e L=R-1 \u65f6\uff0c\u518d\u6bd4\u8f83\u4e0b\u8fd9\u4e24\u4e2a\u70b9\u7684\u503c\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e86\u7b54\u6848\u3002\n\n\u8fc7\u7a0b\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n#### 1\u3001\u5f53 f(mid) > f(mmid) \u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u65ad\u5b9a mmid \u4e00\u5b9a\u5728\u767d\u70b9\u7684\u53f3\u8fb9\u3002\n\n#### 2\u3001\u5f53 f(mid) < f(mmid) \u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u65ad\u5b9a mid \u4e00\u5b9a\u5728\u767d\u70b9\u7684\u5de6\u8fb9\u3002 \n\n\u672c\u849f\u84bb\u7684\u4ee3\u7801\u7528\u7684\u5c31\u662f\u8fd9\u79cd\u505a\u6cd5\u3002\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio> \nusing namespace std;\nconst double eps=1e-6;\nint n;\ndouble a[20],l,r,mid1,mid2,avg;\ndouble function(double x){\n\tdouble sum=0;\n\tfor(int i=n;i>=0;i--){\n\t\tsum=sum*x+a[i]; \n\t}\n\treturn sum;\n}\nint main(){\n\tcin>>n>>l>>r;\n\tfor(int i=n;i>=0;i--){\n\t\tcin>>a[i];\n\t}\n\twhile(r-l>=eps){\n\t\tavg=(r-l)/3;\n\t\tmid1=l+avg;\n\t\tmid2=r-avg;\n\t\tif(function(mid1)>function(mid2)){\n\t\t\tr=mid2;\n\t\t}\n\t\telse\n\t\tl=mid1;\n\t}\n\tprintf(\"%.5lf\\n\",mid2);\n\treturn 0;\n}\n```\n",
        "postTime": 1554716953,
        "uid": 165561,
        "name": "lian_sama",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ea\u8981\u5206\u522b\u5224\u65ad\u5b66\u751f\u7684\u4f30\u503c\u5728\u54ea\u4e24\u4e2a\u5b66\u6821\u7684\u5f55\u53d6\u5206\u6570\u7ebf\u4e4b\u95f4\uff0c\u7136\u540e\u4e0e\u6bd4\u5b66\u751f\u4f30\u503c\u9ad8\u7684\u548c\u4f4e\u7684\u5206\u6570\u7ebf\u5206\u522b\u76f8\u51cf\u53d6\u7edd\u5bf9\u503c\uff0c\u53d6\u6700\u5c0f\u503c\u7edf\u8ba1\u5373\u53ef\n\n```\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main()\n{\n\tint x,cn=0,m,a[100001],n,i,b[100001],l,r,mid;\n\tcin>>n>>m;\n\tfor(i=1;i<=n;i++)\n\tcin>>a[i];//\u8f93\u5165\u6bcf\u4e2a\u5b66\u6821\u7684\u5f55\u53d6\u5206\u6570\u7ebf\n\tsort(a+1,a+n+1);//\u5feb\u6392\uff0c\u628a\u6240\u6709\u5b66\u6821\u5f55\u53d6\u5206\u6570\u7ebf\u6392\u5e8f\n\tfor(i=1;i<=m;i++)\n\tcin>>b[i];//\u8f93\u5165\u6bcf\u4e2a\u5b66\u751f\u7684\u4f30\u503c\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tl=1;r=n;\n\t\twhile(l<r-1)\n\t\t{\n\t\t\tmid=(l+r)/2;\n\t\t\tif(b[i]>=a[mid])\n\t\t\tl=mid;\n\t\t\telse r=mid;\n\t\t}//\u4e8c\u5206\u67e5\u627e\uff0c\u627e\u51fa\u5b66\u751f\u4f30\u503c\u6240\u5728\u90a3\u4e24\u4e2a\u5b66\u6821\u7684\u5f55\u53d6\u5206\u6570\u7ebf\u4e4b\u95f4\n\t\tx=abs(b[i]-a[l])<abs(a[r]-b[i])?abs(b[i]-a[l]):abs(a[r]-b[i]);//\u6bd4\u4e0e\u5b66\u751f\u4f30\u503c\u9ad8\u7684\u548c\u4f4e\u7684\u4e24\u4e2a\u5b66\u6821\u7684\u5f55\u53d6\u5206\u6570\u7ebf\u8fdb\u884c\u76f8\u51cf\u53d6\u7edd\u5bf9\u503c\uff0c\u4f5c\u4e3a\u8be5\u5b66\u751f\u7684\u4e0d\u6ee1\u610f\u5ea6\n\t\tcn+=x;//\u8ba1\u7b97\u4e0d\u6ee1\u610f\u5ea6\u603b\u548c\n\t}\n\tcout<<cn;//\u8f93\u51fa\n}\n```\n",
        "postTime": 1551534825,
        "uid": 83565,
        "name": "zhanghb",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u4eec\u4e00\u770b\u9898\u76ee\uff1a\u6700\u5c0f\u4e0d\u6ee1\u8db3\u7684<(\uffe3 \ufe4c \uffe3)@m\uff1b\n\u601d\u8def\uff1a\n```cpp\n\u5c06 mm \u4e2a\u5b66\u6821\u5f55\u53d6\u5206\u6570\u7ebf\u6392\u5e8f\uff0c\n\u7136\u540e\u5bf9\u6bcf\u4e2a\u4f30\u5206\n\uff0c\u7528lower_bound\u627e\u5230\u6700\u8fd1\u7684\u5206\u6570\n\uff08\u53ef\u80fd\u5927\u4e8e\u7b49\u4e8e\u4e5f\u53ef\u80fd\u5c0f\u4e8e\uff09\uff0c\n\u6ce8\u610f\u7528long long\u4fdd\u5b58\u7b54\u6848\u3002\n```\n\u4e0d\u7528long long WA\u4e86\n\u8fd9\u9898\u6211\u76f4\u63a5\u7528\n## STL \u5927\u6cd5 \u597d \u597d \u597d \u597d\n```\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>// STL \u5934\u6587\u4ef6\nusing namespace std;\nint num[100005];\nint main(){\nint n,m,x,d1,d2,p1,p2;\n  long long ans;// \u4e0d\u5f00 long long \n  cin>>m>>n;\n  for(int i=0;i<m;i++){\n    cin>>num[i];\n  }\n  sort(num,num+m); \u5feb\u6392 \u8d70\u8d77\n  ans=0;\n  while(n--){\n    cin>>x;\n    p1=lower_bound(num,num+m,x)-num;// \u8fd9\u91cc\u6211\u4eec \u7528\u4e86STL\u91cc\u9762\u7684\u4e8c\u5206\u7b97\u6cd5\uff0c\u6211\u6ca1\u6709\u624b\u5199\uff0c\u76f4\u63a5\u627e\u6700\u8fd1\u503c\n    p2=p1-1;\n    d1=2000000000;\n    d2=2000000000;\n    if(p1!=m){\n        d1=num[p1]-x;\n    }\n    if(p2!=-1){\n      d2=x-num[p2];\n    }\n    ans+=min(d1,d2);// \u6700\u5c0f\u503c\n }\n   cout<<ans<<endl;\n  return 0;\n}// \u534e\u4e3d\u7ed3\u675f\uff0c\u6492\u82b1\uff01\n\n```\n\n",
        "postTime": 1566350238,
        "uid": 180668,
        "name": "AK_\u9ec4\u94ee_IMO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5b66\u751f\uff0c\u518d\u5c06\u5176\u4e0e\u6bcf\u4e00\u4e2a\u5b66\u6821\u7684\u5f55\u53d6\u5206\u6570\u7ebf\u5bf9\u6bd4\uff0c\u53d6\u5206\u5dee\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nm)\u3002\u800c\u6839\u636e\u9898\u76ee\u201cn,m<=100,000\u201d\u7684\u6570\u636e\u8303\u56f4\uff0c\u663e\u800c\u6613\u89c1\u662f\u4f1a\u70b8\u7684\u3002\n\n\u63a5\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u8fdb\u884c\u4f18\u5316\u3002\u6240\u4ee5\uff0c\u5148\u5c06\u5b66\u6821\u5206\u6570\u7ebf\u5feb\u6392\u4e00\u904d\uff0c\u7136\u540e\u4e8c\u5206\u67e5\u627e\u5373\u53ef\u3002\uff08\u8981\u6ce8\u610f\u53d6\u7edd\u5bf9\u503c\uff09\n\n\u4ee3\u7801~~\uff08\u7b2c\u4e00\u6b21\u53d1C++\u9898\u89e3\uff0c\u4ee3\u7801\u6709\u70b9\u4e11\uff09~~\n```cpp\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint n,m;\nint sc[100000];\nint st[100000];\nint l,r,mid;\nlong long ans;\n\nvoid qsort(int l,int r)\n{\n    int i,j,p,mid;\n    i=l; j=r; mid=sc[(l+r)/2];\n    do\n    {\n        while (sc[i]<mid) i++;\n        while (sc[j]>mid) j--;\n        if (i<=j) \n        {\n            p=sc[i]; sc[i]=sc[j]; sc[j]=p;\n            i++; j--;\n        }\n    }\n    while (i<=j);\n    if (l<j) qsort(l,j);\n    if (i<r) qsort(i,r);\n}\n\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for (int i=1; i<=m; i++)\n      scanf(\"%d\",&sc[i]);\n    for (int i=1; i<=n; i++)\n      scanf(\"%d\",&st[i]);\n    qsort(1,m);\n    sc[0]=-10000000;\n    for (int i=1; i<=n; i++)\n    {\n        l=1; r=m;\n        while (l<r)\n        {\n            mid=(l+r)/2;\n            if (st[i]>sc[mid]) l=mid+1;\n            else r=mid;\n        }\n        ans=ans+min(abs(st[i]-sc[l]),min(abs(st[i]-sc[l-1]),abs(st[i]-sc[l+1])));\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1534334051,
        "uid": 29621,
        "name": "\u5723\u5149\u5929\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678"
    },
    {
        "content": "#### \u770b\u5230\u4e86\u8bb8\u591adalao\u7684\u505a\u6cd5\uff0c\u4f3c\u4e4e\u6ca1\u6709\u4e00\u4e2a\u76f4\u63a5\u5faa\u73af\u66b4\u529b\u7684\u9898\u89e3\uff0c\u672c\u849f\u84bb\u5c31\u6765\u53d1\u8fd9\u7bc7\u9898\u89e3\u5566\n#### \u5faa\u73af\u66b4\u529b\u5341\u5206\u597d\u5199\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u5f88\u9002\u5408\u65b0\u624b\u6765\u5b66\u4e60\n##### \u8fd9\u9053\u9898\u8d2a\u5fc3\u7684\u601d\u8def\u5f88\u660e\u663e\uff0c\u4f46n\u65b9\u66b4\u529b\u4f1aT\uff0c\u6240\u4ee5\u8003\u8651\u4f18\u5316\u5c31\u53ef\u4ee5\u5566\n##### \u90a3\u4e48\u5148\u4e0a\u6838\u5fc3\u4ee3\u7801\n```cpp\n\tsort (school + 1, school + m + 1);\n\tsort (student + 1, student + n + 1); //\u5148\u8fdb\u884c\u6392\u5e8f\n\tint k = 2, ans = 0; //ans\u7528\u6765\u5b58\u50a8\u7b54\u6848\uff0c k\u5c31\u662f\u4f18\u5316\u7684\u6838\u5fc3\u4e86\n\tfor (int i = 1; i <= n; ++i)\n\t{ //\u7b80\u5355\u7684\u679a\u4e3e\u5faa\u73af\n\t\tfor (int j = k; j <= m; ++j) //\u6ce8\u610f\u8fd9\u91cc\u5faa\u73af\u8981\u7531k\u5f00\u59cb\n\t\t{\n\t\t\tk = j; //\u5728\u8fd9\u91cc\u89e3\u91cak\u7684\u4f5c\u7528\uff0c\u53ef\u4ee5\u628ak\u770b\u4f5c\u4e00\u4e2a\u6807\u8bb0\u6216\u8005\u8bf4\u662f\u4e00\u4e2a\u6307\u9488\n            //\u7531\u4e8e\u8003\u8651\u5230\u4e24\u4e2a\u6570\u7ec4\u90fd\u5df2\u7ecf\u4ece\u5c0f\u5230\u5927\u6392\u5217\u8fc7\uff0c\u6240\u4ee5\u53ef\u4ee5\u62bd\u8c61\u7684\u770b\u4f5c\u662f\u4e24\u7ec4\u6570\u6570\u8f74\u4e0a\u7684\u70b9\n\t\t\tif (abs (school[j] - student[i]) > abs (school[j-1] - student[i]))\n            //\u8fd9\u91cc\u7684\u5224\u65ad\u662f\u91cd\u70b9\uff0c\u65e2\u7136\u53ef\u4ee5\u770b\u4f5c\u6570\u8f74\u4e0a\u7684\u70b9\uff0cabs\u53ef\u4ee5\u770b\u4f5c\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\n            //\u5faa\u73af\u6240\u4ee3\u8868\u7684\u610f\u601d\u5c31\u662f\u679a\u4e3e\u4e24\u4e2a\u6570\u7ec4\u4e2d\u70b9\u7684\u8ddd\u79bb\n            //\u90a3\u4e48\uff0c\u8003\u8651\u6211\u4eec\u662f\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u5982\u679c\u8bf4\u70b9i\u5230\u70b9j\u7684\u8ddd\u79bb\u5df2\u7ecf\u5927\u4e8e\u70b9i\u5230\u70b9j-1\u7684\u8ddd\u79bb\n            //\u4e0b\u4e00\u6b65\u7684\u679a\u4e3e\u70b9j+1\u5f88\u660e\u663e\u5927\u4e8e\u70b9j <=>\u7b49\u4ef7\u4e8e\u70b9j+1\u7684\u8ddd\u79bb\u66f4\u8fdc\uff0c\u6240\u4ee5\u53ef\u4ee5\u8df3\u51fa\uff0c\u5e76\u4e0b\u6b21\u679a\u4e3e\u7531\u6b64\u70b9\u5f00\u59cb\n\t\t\t{\n\t\t\t\tstudent[i] = abs (school[j-1] - student[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (k == m)\n\t\t\t\tstudent[i] = abs (school[m] - student[i]);\n\t\t}\n//\t\tcout << student[i] << endl;\n\t\tans += student[i];\n\t}\n```\n\u7531\u6b64\uff0c\u590d\u6742\u5ea6\u770bO(n2\uff09\u5b9e\u9645\u4e0a\u5e76\u4e0d\u5230\uff0c\u5b8c\u7f8e\u7684\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u5566\n\n\u849f\u84bb\u7684\u89e3\u91ca\u4e0d\u591f\u7b80\u7ec3\uff0c\u8fd8\u8bf7\u5404\u4f4d\u5927\u4f6c\u8c05\u89e3\n\n\u63a5\u4e0b\u6765\u4e0aAC\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nstatic const int N = 1e5 + 10;\nlong long n, m, school[N], student[N];\n\nint main ()\n{\n\tscanf (\"%lld%lld\", &m, &n);\n\tfor (int i = 1; i <= m; ++i)\n\t\tscanf (\"%lld\", &school[i]);\n\tfor (int i = 1; i <= n; ++i)\n\t\tscanf (\"%lld\", &student[i]);\n\tsort (school + 1, school + m + 1);\n\tsort (student + 1, student + n + 1);\n\tint k = 2, ans = 0;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tfor (int j = k; j <= m; ++j)\n\t\t{\n\t\t\tk = j;\n\t\t\tif (abs (school[j] - student[i]) > abs (school[j-1] - student[i]))\n\t\t\t{\n\t\t\t\tstudent[i] = abs (school[j-1] - student[i]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (k == m)\n\t\t\t\tstudent[i] = abs (school[m] - student[i]);\n\t\t}\n//\t\tcout << student[i] << endl;\n\t\tans += student[i];\n\t}\n\tprintf (\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1524126180,
        "uid": 89385,
        "name": "Mine_Nirvana",
        "ccfLevel": 0,
        "title": "\u9898\u89e3  P1678 \u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f"
    },
    {
        "content": "\u5b9e\u5728\u662f\u770b\u4e0d\u4e0b\u53bb\u67d0\u4e9b\u4eba\u7684\u9898\u89e3\n\n\u81ea\u5df1\u5199\u7684\u65f6\u5019\u5199\u7684\u534a\u6b7b\uff0c\u6539\u7684\u65f6\u5019\u6539\u5f97\u534a\u6b7b\uff0c\u8fd8\u8981\u522b\u4eba\u5e2e\u5fd9\u8be5\u7a0b\u5e8f\u7684\u4eba\u5c45\u7136\u5199\u9898\u89e3\u4e86\uff01\n\n\u5367\u69fd\u8fd9\u4e0d\u662f\u8bef\u4eba\u5b50\u5f1f\u4e48\uff1f\n\n\u4e3a\u4e86\u9632\u6b62\u4e16\u754c\u88ab\u7834\u574f\uff0c\u4e3a\u4e86\u7ef4\u62a4\u4e16\u754c\u7684\u548c\u5e73\uff0c\u6211\u51b3\u5b9a\u5199\u9898\u89e3= =\n\n\uff08\u7b2c\u4e00\u6b21\u6ca1\u7528\u5c0f\u53f7\u3002\u3002\u3002\uff09\n\n\u672c\u9898\u6211\u7684\u601d\u8def\u662f\u4e8c\u5206\u67e5\u627e\uff0c\u7b97\u662f\u6734\u7d20\u7b97\u6cd5\u4e86\u3002\n\n```delphi\n\nvar\n  a,b:array[-1..100001] of int64;\nans:int64;\n  i,j,n,m:longint;\nprocedure kp(t,w:longint);\nvar\n  i,j,mid,p:longint;\nbegin\nif t>=w then exit;\n  mid:=a[(t+w) div 2];\n  i:=t;j:=w;\n  repeat\n    while a[i]<mid do inc(i);\n    while a[j]>mid do dec(j);\n    if i<=j then\n    begin\n      p:=a[i];a[i]:=a[j];a[j]:=p;\n      inc(i);dec(j);\n    end;\n  until i>j;\nkp(t,j);\nkp(i,w);\nend;\nfunction min(a,b:longint):longint;\nbegin\nif a>b then exit(b) else exit(a);\nend;\nprocedure ef(t,w:longint);//\u4e8c\u5206\u67e5\u627e\nvar\n  mid:longint;\nbegin\n  if t=w then begin ans:=ans+min(abs(a[t]-b[i]),abs(b[i]-a[t-1]));exit; end;//\u5f53t=w\u65f6\uff0c\u8bf4\u660ea[t-1]<\u5206\u6570<=a[t]\n  mid:=(t+w)div 2;\n  if a[mid]>b[i] then ef(t,mid) ;\n  if a[mid]<b[i] then ef(mid+1,w);\nend;\nbegin\n  readln(m,n);\n  for i:=1 to m do\n    read(a[i]);\n  for j:=1 to n do\n    read(b[j]);\n  kp(1,m);\na[0]:=-100000;//\u5206\u6570\u53ef\u80fd\u4f4e\u4e8e\u6700\u4f4e\u5206\uff0c\u6240\u4ee5\u8bbe\u4e0b\u9650\n  a[m+1]:=maxlongint;//\u5206\u6570\u53ef\u80fd\u9ad8\u4e8e\u6700\u9ad8\u5206\uff0c\u6240\u4ee5\u8bbe\u4e0a\u9650\n  for i:=1 to n do\n  begin\n    ef(1,m+1);//\u56e0\u4e3a\u6211\u662f\u4fdd\u8bc1\u5f53\u524d\u5206\u6570\u4f4e\u4e8e\u7b2c\u4e8c\u4e2a\u503c\u7684\uff0c\u6240\u4ee5\u8303\u56f4\u5230m+1\uff0c\n  end;\n  writeln(ans);\nend.\n\n```",
        "postTime": 1379675574,
        "uid": 13,
        "name": "\u70b9\u51fb\u83b7\u53d6\u201cV\u201d\u8ba4\u8bc1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u6838\u5fc3\u601d\u60f3\uff1a _**\u4e8c\u5206\u67e5\u627e**_ \n\n1. \u9996\u5148\uff0c\u5c06\u6bcf\u4e2a\u5b66\u6821\u7684\u5f55\u53d6\u5206\u6570\u7ebf\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n2. \u63a5\u7740\u5f00\u59cb\u4e8c\u5206\u67e5\u627e\uff0c\u67e5\u627e\u4ec0\u4e48\u5462\uff1f\u5e94\u8be5\u67e5\u627e\u6bcf\u4e2a\u5b66\u6821\u5f55\u53d6\u5206\u6570\u7ebf\u4e2d\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u6bcf\u4e2a\u540c\u5b66\u5206\u6570\u7684\u6570\u3002\n\n\u4e8c\u5206\u67e5\u627e\u90e8\u5206\u7684\u601d\u8def\u5982\u4e0b\u6240\u793a\uff1a\n\n\u9996\u5148\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf\uff0c\u4e3a l, r\uff0c\u5206\u522b\u4e3a\u67e5\u627e\u8303\u56f4\u7684\u5de6\u8fb9\u754c\u548c\u53f3\u8fb9\u754c\u3002\n\n\u63a5\u7740 while \u5faa\u73af\uff0c\u9996\u5148\u5224\u65ad while \u5faa\u73af\u7684\u6761\u4ef6\u662f l<r\uff0c\u63a5\u7740\u5728\u5faa\u73af\u91cc\u5b9a\u4e49\u4e00\u4e2a\u53eb mid \u7684\u53d8\u91cf\uff0cmid=(l+r)/2;\u7136\u540e\u5224\u65ad\uff1a\n\n\u5982\u679c a[mid]\uff0c\u5373\u5f55\u53d6\u5206\u6570\u7ebf\u6570\u7ec4\u4e2d\u7684\u7b2c mid \u4e2a\u5143\u7d20\u5c0f\u4e8e\u6216\u7b49\u4e8e\u90a3\u4f4d\u540c\u5b66\u7684\u5206\u6570\uff0cmid+1\u8d4b\u503c\u7ed9 l\uff0c\u5426\u5219\uff0cmid \u8d4b\u503c\u7ed9 r\u3002\n\n\u6700\u540e\u67e5\u627e\u5b8c\u540e\uff0c\u90a3\u4e48\u6c42\u5f55\u53d6\u5206\u6570\u7ebf\u6570\u7ec4\u4e2d\u7684\u7b2c l-1 \u4e2a\u5143\u7d20\u548c\u5f55\u53d6\u5206\u6570\u7ebf\u6570\u7ec4\u4e2d\u7684\u7b2c l \u4e2a\u5143\u7d20\u4ed6\u4eec\u4e24\u4e0e\u90a3\u4f4d\u540c\u5b66\u7684\u4f30\u5206\u7684\u7edd\u5bf9\u503c\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u7d2f\u52a0\u4e24\u4e2a\u7edd\u5bf9\u503c\u4e2d\u6700\u5c0f\u7684\u3002\n\n\u6700\u540e\u8f93\u51fa\u89e3\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u4e3a O(m*log(n))\u3002\n\n\u4ee3\u7801\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxN = 100000 + 10;\nint d[maxN], m, n;\nint bfind(int), read();\nvoid work();\nint main(){\n    work();\n    return 0;\n}\nvoid work(){\n    m = read(); n = read();\n    for(int i = 0; i < m; i++) d[i] = read();\n    sort(d, d + m);\n    long long ans = 0;\n    for(int i = 0; i < n; i++){\n        int x; cin >> x;\n        ans += bfind(x);\n    }\n    cout << ans;\n}\nint read()//\u5feb\u8bfb\n{\n    int s = 0; char ch = getchar();\n    while(ch < '0' || ch > '9') ch = getchar();\n    while(ch >= '0' && ch <= '9'){\n        s = s * 10 + ch - '0';\n        ch = getchar();\n    }\n    return s;\n}\nint bfind(int x){//\u4e8c\u5206\u67e5\u627e\n    int l = 0, r = m - 1, ans = 1e9;\n    while(l <= r){\n        int mid = (l + r) >> 1;\n        if(d[mid] <= x) l = mid + 1;\n        else r = mid - 1;\n        ans = min(ans, abs(x - d[mid]));\n    }\n    return ans;\n}\n```",
        "postTime": 1550126581,
        "uid": 112366,
        "name": "\u68a6\u4e4b__\u6cea\u4f24",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u8d2a\u5fc3\u7684\u6807\u7b7e\u600e\u4e48\u6765\u7684\uff0c\u4e0d\u662f\u4e2abinary\\_search\u5417\uff0c\u8bdd\u8bf4ef\u7684\u540d\u5b57\u4e5f\u592a\u4e11\u4e86\n\n\u9996\u5148\u5bf9\u5206\u6570\u7ebf\u6392\u5e8f\uff0c\u9012\u589e\u9012\u51cf\u65e0\u6240\u8c13\uff0c\u7136\u540e\uff0c\u6211\u4eec\u6ca1\u8bfb\u5165\u4e00\u4e2a\u4f30\u5206\u5c31\u8fdb\u884c\u4e24\u6b21binary\\_search\uff0c\u4e00\u6b21\u67e5\u627e\u5c0f\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u7684\u6700\u5927\u4e0b\u6807\uff0c\u4e00\u6b21\u67e5\u627e\u5927\u4e8e\u7b49\u4e8e\u8fd9\u4e2a\u6570\u7684\u6700\u5c0f\u4e0b\u6807\uff0c\u7136\u540e\u53d6\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\u7d2f\u52a0\uff0c\u5176\u5b9e\u539f\u672c\u6ca1\u90a3\u4e48\u957f\u7684\u5199\u4e86\u8f93\u5165\u8f93\u51fa\u7684\u4f18\u5316\u3002\n\n\u771f\u7684\u5f88\u6c34\\\u3010=\\_=\u3011/   OTZ\n\n-------------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define min(a,b) ((a)<(b) ? (a):(b))\nusing namespace std;\nconst int maxn=100000+20;\nint n,m,score[maxn];\ninline void read(int& n){\n    n=0;\n    char ch=getchar();\n    while(ch<'0' || ch>'9') ch=getchar();\n    do{\n        n=n*10+ch-'0';\n        ch=getchar();\n    }while(ch>='0' && ch<='9');\n    return;\n}\nvoid write(long long n){\n    if(n>9) write(n/10);\n    putchar((n % 10)+'0');\n    return;\n}\nvoid init(){\n    read(m);read(n);\n    for(int i=1;i<=m;i++){\n        read(score[i]);\n    }\n    sort(score+1,score+m+1);\n    return;\n}\nint my_low_search(int t){\n    int l=1,r=m;\n    while((r-l)>1){\n        int mid=(l+r)>>1;\n        if(score[mid]<=t) l=mid;\n        else r=mid;\n    }\n    return l;\n}\nint my_up_search(int t){\n    int l=1,r=m;\n    while((r-l)>1){\n        int mid=(l+r)>>1;\n        if(score[mid]>=t)r=mid;\n        else l=mid;\n    }\n    return r;\n}\nint adjust(int t){\n    int ans;\n    int p=my_up_search(t);\n    int q=my_low_search(t);\n    ans=min(abs(t-score[p]),abs(t-score[q]));\n    return ans;\n}\ninline int abs(int t){\n    return t<0 ? (0-t):t;\n} \nvoid solve(){\n    long long ans=0;\n    for(int i=1;i<=n;i++){\n        int t;\n        read(t);\n        ans+=adjust(t);\n    }\n    write(ans);\n    return;\n}\nint main(){\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1472096480,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u672c\u9898\u5c31\u662f\u6392\u5e8f\u52a0\u4e8c\u5206\u3002\n\n\u8bbe\u5b66\u6821\u5206\u6570\u7ebf\u5b58\u5165opt\u6570\u7ec4\uff0c\u5c06opt\u6570\u7ec4\u6392\u5e8f\u3002\n\n\u7136\u540e\u8bfb\u5165\u6bcf\u4e00\u4e2a\u5b66\u751f\u7684\u4f30\u5206\uff0c\u5728opt\u4e2d\u4e8c\u5206\u67e5\u627e\uff0c\u6bcf\u627e\u5230\u4e00\u4e2a\u5b66\u6821\u90fd\u4e0e\u4f30\u5206\u8ba1\u7b97\u5dee\u503c\uff0c\u7136\u540e\u4e0d\u65ad\u4e8c\u5206\u903c\u8fd1\uff0c\u6700\u540e\u627e\u5230\u7684\u4e00\u5b9a\u662f\u8be5\u4f30\u5206\u7684\u6700\u5c0f\u5dee\u503c\u3002\n\n\u6700\u540e\u5c06\u6240\u6709\u7684\u5dee\u503c\u76f8\u52a0\u5373\u53ef\u3002\n\n\u6ce8\u610fC/C++\u9700\u8981\u7528long long\u7c7b\u578b\u3002C++\u4f7f\u7528scanf/printf\u8f93\u5165\u8f93\u51fa\uff0c\u82e5\u4f7f\u7528\u6d41io\uff0c\u5219\u9700\u8981\u52a0\u5165ios::sync\\_with\\_stdio(false)\u3002\n",
        "postTime": 1426597250,
        "uid": 5863,
        "name": "xvhuanlin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n**\u5199\u5b8c\u4e4b\u540e\uff0c\u771f\u662f\u611f\u6168\u4e07\u5343\uff0c\u8fd9ac\u7684\u8fc7\u7a0b\u771f\u662f\u592a\u8270\u8f9b\u4e86\uff0c\u7ecf\u8fc7\u6574\u6574\u4e00\u5468\uff08\u6bcf\u592920\u5206\u949f\uff09\u7684\u4e0d\u65ad\u4fee\u6539\uff0c\u76f4\u5230\u6700\u540e\u4e00\u5929\u624d\u53d1\u73b0ac\u7684\u6b63\u786e\u9014\u5f84\uff0c\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u6211\u7684\u6307\u5bfc\u8001\u5e08\u771f\u662f\u628a\u6211\u5751\u60e8\u4e86\uff01**\n\n\n\u7136\u540e\u8bf4\u4e00\u4e0b\u89e3\u9898\u7684\u601d\u8def\u5427,\u5176\u5b9e\u771f\u7684\u662f\u5f88\u7b80\u5355\uff0c\u5148\u628a\u6240\u6709\u6570\u636e\u6309\u4ece\u5927\u5230\u5c0f\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u5355\u91cd\u5faa\u73af\u4e2d\u7528\u4e00\u4e2awhile\u8bed\u53e5\u627e\u4e0e\u5f53\u524d\u7684\u4f30\u5206\u503c\u8f83\u4e3a\u63a5\u8fd1\u7684\u90a3\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u662f\u6bd4\u5b83\u5c0f\u7684\u548c\u6bd4\u5b83\u5927\u7684\uff0c\u7136\u540e\u76f4\u63a5\u52a0\u4e0a\u8fd9\u4e24\u4e2a\u5dee\u503c\u4e2d\u6700\u5c0f\u7684\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\u3002\n\n\n**\u8fd9\u9053\u9898\u96be\u5c31\u96be\u5728\u5b83\u6240\u7ed9\u7684\u503c\u662f\u4f30\u5206\u503c\uff0c\u53ef\u6bd4\u5f55\u53d6\u7ebf\u9ad8\u4e5f\u53ef\u4ee5\u6bd4\u5f55\u53d6\u7ebf\u4f4e\uff0c\u6240\u4ee5\u5c31\u96be\u4e0a\u4e00\u5206\u3002\u7136\u540e\u5b83\u7684\u6570\u636e\u70b9\u4e5f\u662f\u5341\u5206\u7684\u5201\u94bb\uff0c\u7b2c\u4e5d\u4e2a\u6570\u636e\u70b9\uff0c\u5982\u679c\u4f60\u4e0d\u628aa[0]\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6570\u7ec4\u6570\u503c\u5f00\u5230\u5341\u4e07\uff0c\u5c31\u80af\u5b9a\u8fc7\u4e0d\u4e86\u3002\u81f3\u4e8e\u539f\u56e0\u5c31\u7531\u5927\u5bb6\u81ea\u5df1\u53bb\u7814\u7a76\u5427\u3002**\n\n\n\u4ee5\u4e0b\u63d0\u4f9b\u4e2a\u4eba\u7684\u7ecf\u5178\u6807\u79f0\uff0c\u6700\u6807\u51c6\u7684\u6a21\u62df\uff0c\u4e0e\u58a8\u51dd\u6240\u7528\u7684\u4e8c\u5206\u6cd5\uff0c\u622a\u7136\u4e0d\u540c\u3002\n\n```delphi\nvar i,j,k,m,n,sum,min,tmp,p,q:longint;\n    a,b:array[0..100001] of longint;\nprocedure qs1(l,r:longint);{\u5feb\u6392}\nvar i,j,mid,p:longint;\nbegin\n  i:=l;j:=r;mid:=a[(l+r) div 2];\n  repeat\n    while a[i]<mid do inc(i);\n    while a[j]>mid do dec(j);\n    if i<=j then begin\n      p:=a[i];a[i]:=a[j];a[j]:=p;inc(i);dec(j);\n    end;\n  until i>j;\n  if l<j then qs1(l,j);\n  if i<r then qs1(i,r);\nend;\nprocedure qs2(l,r:longint);\nvar i,j,mid,p:longint;\nbegin\n  i:=l;j:=r;mid:=b[(l+r) div 2];\n  repeat\n    while b[i]<mid do inc(i);\n    while b[j]>mid do dec(j);\n    if i<=j then begin\n      p:=b[i];b[i]:=b[j];b[j]:=p;inc(i);dec(j);\n    end;\n  until i>j;\n  if l<j then qs2(l,j);\n  if i<r then qs2(i,r);\nend;\nfunction max(x,y:longint):longint;{\u9009\u53d6\u6700\u5c0f\u7684\u51fd\u6570\uff0c\u540d\u5b57\u6709\u4e9b\u5947\u602a\uff0c\u4e0d\u8fc7\u7ec6\u8282\u5c31\u4e0d\u8981\u5728\u610f\u4e86}\nbegin\n  if x<y then exit(x) else exit(y);\nend;\nfunction zxx(x,y:longint):longint;{\u8fd9\u662f\u7b97\u5dee\u503c\u7684\u51fd\u6570\uff0c\u5982\u679c\u76f4\u63a5\u7528\u53d6\u7edd\u5bf9\u503c\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5}\nbegin\n  if x>=y then exit(x-y) else exit(y-x);\nend;\nbegin\n  read(m,n);\n  for i:=1 to m do read(a[i]);\n  for i:=1 to n do read(b[i]);\n  qs1(1,m);qs2(1,n);\n  a[m+1]:=maxlongint;\n  p:=1;{\u8fd9\u91cc\u521d\u59cb\u8d4b\u503c\u4e3a1\uff0c\u5c14\u540e\u5c31\u4e0d\u5fc5\u6539\u53d8\u4e86\uff0c\u56e0\u4e3a\u6570\u636e\u65f6\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4e00\u6b21\u627e\u66f4\u5927\u7684}\n  for i:=1 to n do begin\n   while b[i]>a[p] do inc(p);{\u627e\u5230\u4e0e\u5f53\u524d\u6570\u636e\u70b9\u6700\u63a5\u8fd1\u7684\u6570}\n   if p=1 then q:=1 else begin {\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u5462\uff1f\u8fd8\u8bf7\u8bfb\u8005\u81ea\u5df1\u7814\u7a76\u5c31\u4f1a\u660e\u767d\u4e86}\n   q:=p;p:=p-1;end;{\u4e24\u4e2a\u6307\u6807\u7684\u4f4d\u7f6e\u7684\u8d4b\u503c\uff08\u539f\u56e0\u81ea\u5df1\u7406\u89e3\uff09}\n   sum:=sum+max(zxx(b[i],a[p]),zxx(b[i],a[q]));{\u53d6\u6700\u5c0f}\n  end;\n  write(sum);\nend.\n```",
        "postTime": 1379509852,
        "uid": 147,
        "name": "\u91ce\u83dc\u6c64",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "```delphi\nvar\na:array[0..100000]of longint;{\u5b58\u653e\u5b66\u6821\u5f55\u53d6\u6210\u7ee9\uff5d\nb,c,i,j,k,l,m,n,sum,mid,r:longint;\nprocedure qs(l,r:longint);\uff5b\u5feb\u6392\uff5d\nvar i,j,mid,p:longint;\nbegin\n  i:=l;j:=r;\n  mid:=a[(l+r)div 2];\n  repeat\n  while a[i]<mid do inc(i);\n  while a[j]>mid do dec(j);\n  if i<=j then\n  begin\n    p:=a[i];a[i]:=a[j];a[j]:=p;inc(i);dec(j);\n  end;\n  until i>j;\n  if i<r then qs(i,r);\n  if l<j then qs(l,j);\nend;\nfunction min(k,l:longint):longint;\uff5b\u627e\u6700\u5c0f\u503c\uff5d\nbegin\n  if k>l then exit(l) else exit(k);\nend;\nbegin\n  read(m,n);\n  for i:=1 to m do read(a[i]);\n  qs(1,m);\uff5b\u4f7f\u4e4b\u6210\u4e3a\u5355\u8c03\u9012\u589e\u5e8f\u5217\uff5d\n  for i:=1 to n do\n  begin\n    read(b);\n    l:=1;r:=m;\uff5b\u4e8c\u5206\u521d\u59cb\u5316\uff1a\u8bbe\u5b9a\u95ed\u533a\u95f4[1,m]}\n    repeat\n    mid:=(l+r)div 2;\uff5b\u4e8c\u5206\uff5d\n    if b>a[mid] then l:=mid else r:=mid;\uff5b\u6a21\u62df\u4e8c\u5206\uff5d\n    until l+1=r;\uff5b\u4e0d\u53ef\u4ee5\u91cd\u53e0\uff0c\u800c\u8981\u7a7a\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u5426\u5219\u4e0d\u53ef\u80fd\uff5d\n    inc(sum,min(abs(a[l]-b),abs(a[r]-b)));\uff5b\u52a0\u4e0a\u6700\u5c0f\u503c\uff5d\n  end;\n  write(sum);\nend.\n```\n[color=green]\u6b64\u9898\u6807\u51c6\u5199\u6cd5\u662f\u4f7f\u7528\u4e8c\u5206\u641c\u7d22\u3002\u4e3a\u7b80\u6d01\u5e76\u4fbf\u4e8e\u64cd\u4f5c\uff0c\u5e76\u672a\u91c7\u7528\u9012\u5f52\u4e8c\u5206\uff0c\u800c\u91c7\u7528\u6a21\u62df\u4e8c\u5206\u3002\u9700\u77e5\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u601d\u60f3\u662f\u7c7b\u4f3c\u63d2\u5165\u6392\u5e8f\u7684\u626b\u63cf\u5f0f\u3002\u627e\u5230ai\uff0c\u4f7f\u5f97a[i-1]=<b\u5e76\u4e14a[i]>=b\u6216\u53cd\u4e4b\uff0c\u53ea\u8981\u7528\u7edd\u5bf9\u503c\u5904\u7406\u5373\u53ef\u3002\u518d\u6709\uff0c\u5c31\u662f\u56e0\u4e3a\u6210\u7ee9\u65e0\u5e8f\uff0c\u4e3a\u5b9e\u73b0\u4e8c\u5206\uff0c\u987b\u4e00\u8d9f\u6392\u5e8f\uff0c\u6210\u4e3a\u5355\u8c03\u9012\u589e\u5e8f\u5217\u3002\u662f\u4e3a\u89e3\u3002\n\n\u58a8\u51dd  \u6267\u7b14[/color]\n",
        "postTime": 1379249013,
        "uid": 39,
        "name": "\u58a8\u51dd\u800c\u6b62",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "##### \u849f\u84bb\u6211\u4e00\u770b\u9898\u76ee\n\n##### \u8981\u6c42\u5dee\u503c\u6700\u5c0f\n\n##### \u5c31\u60f3\u5230\u7528treap\n\n###### ~~\u770b\u4e0b\u9762\u6ca1\u6709treap\u5c31\u6765\u53d1\u4e00\u4e2a~~\n\n\u601d\u8def\u662f\u5148\u628a\u5f55\u53d6\u5206\u6570\u7ebf\u63d2\u5165\n\n\u7136\u540e\u63d2\u5165\u5b66\u751f\u5206\u6570\n\n\u6c42\u51fa\u5b66\u751f\u5206\u6570\u6392\u540d\n\n\u5728\u5b66\u751f\u5206\u6570\u6392\u540d-1\u548c+1\u4e2d\u6c42\u6700\u5c0f\u503c\n\n\u6700\u540e\u53bb\u6389\u8fd9\u4e2a\u8282\u70b9\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n    \n        \n        \n        \n    \n    \n    \n    \n        \n            \n    \n            \n        \n        \n        \n        \n                \n        \n    \n```cpp\n    #include <bits/stdc++.h>\n    using namespace std;    //BY Playnext\n    #define REG register\n    #define IN inline\n    #define Emmm int\n    #define FOR(X,Y,Z) for (REG int X=Y; X<Z; X++)\n    const int MAXN=1e5+1, NODEMAXN=5e3+1, INF=2147483647, MOD=1000000009;\n    IN Emmm Read () {//\u8bfb\u5165\u4f18\u5316\n        REG Emmm Temp = 0;\n        REG int Negative = 1;\n        REG char Buffer = getchar();\n        while (Buffer < 48 || Buffer > 57)  {\n            if (Buffer == 45)     Negative = -1;\n            Buffer = getchar();\n        }    \n        while (Buffer >= 48 && Buffer <= 57) {\n            Temp = (Temp<<1) + (Temp<<3) + Buffer - 48;\n            Buffer = getchar();\n        }\n        return Temp*= Negative;\n    }\n    IN void Write (REG Emmm Temp) {//\u8f93\u51fa\u4f18\u5316\n        if (Temp < 0)     Temp = -Temp, putchar (45);\n        if (Temp > 9)     Write (Temp/10);\n        putchar (Temp%10 + 48);\n    }\n    IN void Space () {\n        putchar (32);\n    }\n    IN void Enter () {\n        putchar (10);\n    }\n    struct Treap {\n        struct Node {\n            Node* Left;        Node* Right;\n            int Priority, Value, Size, Repeat;\n            Node (REG int Num) {\n                Left = Right = NULL;\n                Priority = rand (), Size = 0, Value = Num, Repeat = 1;\n            }\n        } *RT = NULL;\n        IN void Push_Up (REG Node* Root) {\n            Root -> Size = Root -> Repeat;\n            if (Root -> Left != NULL) Root -> Size += Root -> Left -> Size;\n            if (Root -> Right != NULL) Root -> Size += Root -> Right -> Size;\n        }\n        IN void Left_Rotate (REG Node* &Root) {//\u5de6\u65cb\n            REG Node* Temp = Root -> Right;\n            Root -> Right = Temp -> Left;\n            Temp -> Left = Root;\n            Push_Up (Root), Push_Up (Temp);\n            Root = Temp;\n        }\n        IN void Right_Rotate (REG Node* &Root) {//\u53f3\u65cb\n            REG Node* Temp = Root -> Left;\n            Root -> Left = Temp -> Right;\n            Temp -> Right = Root;\n            Push_Up (Root), Push_Up (Temp);\n            Root = Temp;\n        }\n        IN void Insert (REG Node* &Root, REG int Value) {\n            if (Root == NULL) {//\u63d2\u5165\u8282\u70b9\n                Root = new Node (Value);\n            }\n            else {\n                if (Root -> Value > Value) {\n                    Insert (Root -> Left, Value);\n                    if (Root -> Priority < Root -> Left -> Priority)\n                        Right_Rotate (Root);\n                }\n                else {\n                    Insert (Root -> Right, Value);\n                    if (Root -> Priority < Root -> Right -> Priority)\n                        Left_Rotate (Root);\n                }\n            }    Push_Up (Root);\n        } \n        IN void Delete (REG Node* &Root, REG int Value) {\n            if (Root == NULL) //\u5220\u9664\u8282\u70b9\n                return ;\n            else if (Root -> Value == Value) {\n                if (Root -> Repeat > 1) {\n                    Root -> Repeat --;\n                }\n                else {\n                    if (Root -> Left == NULL && Root -> Right == NULL) {\n                        Root = NULL;\n                        return ;\n                    }\n                    else if (Root -> Left != NULL && Root -> Right != NULL) {\n                        if (Root -> Left -> Priority > Root -> Right -> Priority)\n                            Right_Rotate (Root),\n                            Delete (Root -> Right, Value);\n                        else\n                            Left_Rotate (Root),\n                            Delete (Root -> Left, Value);\n                    }\n                    else {\n                        if (Root -> Left == NULL)\n                            Root = Root -> Right;\n                        else\n                            Root = Root -> Left;\n                    }\n                }\n            }\n            else {\n                if (Root -> Value > Value)\n                    Delete (Root -> Left, Value);\n                else\n                    Delete (Root -> Right, Value);\n            }    Push_Up (Root);\n        }     \n        IN int KTH_Find (REG Node* Root, REG int Rank) {\n            if (Root == NULL)//\u627e\u7b2ck\u540d\n                return INF;\n            else {\n                REG int LSize = Root -> Left != NULL ? Root -> Left -> Size : 0;\n                if (Rank <= LSize)\n                    return KTH_Find (Root -> Left, Rank);\n                else if (Rank > LSize + Root -> Repeat)\n                    return KTH_Find (Root -> Right, Rank - LSize - Root -> Repeat);\n                else\n                    return Root -> Value;\n            }\n        }\n        IN int Find_KTH (REG Node* Root, REG int Value) {\n            if (Root == NULL)//\u627ex\u6392\u540d\n                return 0;\n            else {\n                REG int LSize = Root -> Left != NULL ? Root -> Left -> Size : 0;\n                if (Root -> Value == Value)\n                    return LSize +1;\n                else if (Root -> Value > Value)\n                    return Find_KTH (Root -> Left, Value);\n                else\n                    return Find_KTH (Root -> Right, Value) + LSize + Root -> Repeat;\n            }\n        }\n    } TP;\n    int main() {\n    //    freopen (\"Input.txt\", \"r\", stdin);\n    //    freopen (\"Output.txt\", \"w\", stdout);\n        REG int m, n, Num, Count = 0, T1, T2, T3;\n        m = Read ();    n = Read ();\n        FOR (i,0,m) {//\u63d2\u5165\u5f55\u53d6\u7ebf\n            Num = Read();    TP.Insert (TP.RT, Num);\n        }\n        FOR (i,0,n) {\n            Num = Read();    TP.Insert (TP.RT, Num);        T3 = INF;\n            T1 = TP.KTH_Find (TP.RT, TP.Find_KTH (TP.RT, Num) -1);//\u627e\u540d\u6b21\n            T2 = TP.KTH_Find (TP.RT, TP.Find_KTH (TP.RT, Num) +1);        //\u53bb\u9664\u6700\u5927\u6700\u5c0f\u60c5\u51b5\n            if (T1 != INF)    T3 = min (T3, Num - T1);\n            if (T2 != INF)    T3 = min (T3, T2 - Num);\n            Count += T3;    TP.Delete (TP.RT, Num);\n            //\u5220\u9664\u8282\u70b9\n        }    Write (Count), Enter ();\n        return 0;\n}\n```",
        "postTime": 1514450866,
        "uid": 51658,
        "name": "Playnext",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u809b\u9053\u7406\uff0c\u8fd9\u4e2a\u9898\u5176\u5b9e\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u90a3\n\n\u628a\u5b66\u6821\u4ee5\u53ca\u4eba\u90fd\u6392\u4e2a\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff09\n\n\u5982\u679ca\uff08\u4eba\uff09\u5339\u914dB\uff08\u5b66\u6821\uff09\u6700\u4f18\uff0c\u90a3\u4e48\u6bd4a\u5206\u6570\u9ad8\u7684c\u6700\u4f18\u7684\u5b66\u6821\uff0c\u4e00\u5b9a\u5728B\u4e4b\u540e\uff08\u5373\u6bd4B\u5206\u6570\u9ad8\uff0c\u6216\u8005\u5c31\u662fB\uff09\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\uff0c\u770b\u770b\u90a3\u4e2a\u5b66\u6821\u662f\u6700\u4f18\u7684\uff0c\u7136\u540e\u628a\u6307\u9488\u505c\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\n\n\u800c\u5047\u5b9aa\u5339\u914dB\u662f\u6700\u4f18\u7684\uff0c\u5219a\u5339\u914dC\u6216\u8005D\u90fd\u8981\u6bd4\u5339\u914dB\u7684\u503c\u5927\uff0c\u6240\u4ee5\u53ef\u4ee5\u65b9\u4fbf\u7684\u5224\u5b9a\n\n\u5982\u679c\u4e00\u65e6\u5339\u914d\u503c\u53d8\u5927\uff0c\u8bc1\u660e\u5df2\u7ecf\u5339\u914d\u8fc7\u4e86\u6700\u4f18\u503c\uff0c\u5219\u628a\u6307\u9488\u79fb\u56de\n\n\u56e0\u4e3a\u6307\u9488\u6700\u591a\u4f1a\u628a\u6240\u6709\u5b66\u6821\u904d\u5386\u4e00\u904d\uff0c\u6240\u4ee5\u6574\u4f53\u6765\u8bb2\u662fO\uff08n\uff09\u7684\n\n\uff08\u867d\u7136sort\u662fnlog\uff09\n\n\u4ee3\u7801\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#include<ctime>\nusing namespace std;\nint n,m,ans;\nint a[100010],b[100010];\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(int i=1;i<=m;++i) scanf(\"%d\",&b[i]);\n    for(int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n    sort(b+1,b+m+1);\n    sort(a+1,a+n+1);\n    int j=1;\n    for(int i=1;i<=n;++i)\n    {\n        int gt=10000000;\n        while(\"MloVtry is Handsome\")\n        {\n            int it=abs(a[i]-b[j]);\n            gt=min(it,gt);\n            if(it>gt)\n            {\n                j--;\n                break;\n            }\n            else j++;\n        }\n        ans+=gt;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n//\u4eca\u5929\u4e5f\u4f9d\u65e7\u6ca1\u6709\u635e\u523047\u538c\u6218\u5c9b\u98ce\u5462\n//6-1\u6839\u672c\u6ca1\u670947\uff01\n//6-2\u4e5f\u662f\uff01\uff01\uff01\u3010\u6124\u6012.jpg\u3011\n```",
        "postTime": 1508454880,
        "uid": 35718,
        "name": "MloVtry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    },
    {
        "content": "\u697c\u4e0a\u7684julao\u4f3c\u4e4e\u5e76\u6ca1\u6709\u7528splay\u6765\u89e3\u9898\uff0c\u5c31\u8ba9\u6211\u6765\u6c34\u4e00\u53d1(~~\u867d\u7136splay\u89e3\u9898\u65e0\u6bd4\u9ebb\u70e6~~)  \n\u5173\u4e8esplay\uff1asplay\u662f\u4e00\u79cd\u795e\u5947\u7684\u5e73\u8861\u6811\uff0c\u800c\u5e73\u8861\u6811\u662f\u4e00\u79cd\u795e\u5947(~~\u53c8\u81ed\u53c8\u957f~~)\u7684\u7b97\u6cd5\uff0c\u60f3\u5b66\u4e60\u7684oilers\u53ef\u4ee5\u53bb[p3369](https://www.luogu.org/problemnew/show/P3369)\u6216\u8005[\u6d1b\u8c37\u65e5\u62a5](https://tiger0132.blog.luogu.org/slay-notes)\u5b66\u4e60\uff0c\u5e73\u8861\u6811\u80fd\u591f\u5b9e\u73b0\u6bd4\u8f83\u591a\u7684\u529f\u80fd\uff0c\u4f8b\u5982\uff1a  \n\n1.\u63d2\u5165\u5220\u9664\u8282\u70b9(~~\u8fd9\u662f\u5e9f\u8bdd~~)  \n2.\u627e\u4e00\u4e2a\u8282\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7(\u5c0f\u4e8e\u8be5\u6570\u7684\u6570\u4e2d\u7684\u6700\u5927\u6570\u548c\u5927\u4e8e\u8be5\u6570\u7684\u6570\u4e2d\u7684\u6700\u5c0f\u6570)  \n3.\u627e\u4e00\u4e2a\u8282\u70b9\u7684\u6392\u540d\u548c\u6392\u540d\u4e3an\u7684\u8282\u70b9\u7b49\u7b49\u3002\u4ee5\u4e0a\u5ffd\u7565(4~\u221e)  \n\n\u8fd9\u4e9b\u90fd\u662f\u666e\u901a\u5e73\u8861\u6811\u7684\u57fa\u7840\u529f\u80fd\uff0c\u5f53\u7136\u4e5f\u6709\u66f4\u590d\u6742\u80fd\u5b9e\u73b0\u66f4\u591a\u529f\u80fd\u7684\u5e73\u8861\u6811\u5982[\u6587\u827a\u5e73\u8861\u6811](https://www.luogu.org/problemnew/show/P3391)\u7b49  \n\n\u5f53\u4f60\u638c\u63e1\u4e86\u5e73\u8861\u6811\u540e\uff0c\u89e3\u9898\u601d\u8def\u5c31\u5f88\u5bb9\u6613\u627e\u5230(~~\u4f1a\u5e73\u8861\u6811\u7684\u53c8\u600e\u4e48\u4f1a\u50cf\u6211\u4e00\u6837\u6765\u505a\u8fd9\u79cd\u9898~~)\uff1a  \n\u5148\u628a\u5206\u6570\u7ebf\u63d2\u5165\u6811\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b66\u751f\u627e\u5b83\u7684\u524d\u9a71\u548c\u540e\u7ee7\u5e76\u7b97\u5176\u540e\u7ee7\u548c\u8be5\u6570\u4ee5\u53ca\u8be5\u6570\u548c\u524d\u9a71\u5dee\u503c\u53d6\u6700\u5c0f\u7d2f\u52a0\u5373\u53ef  \n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<climits>\n#include<cmath>\nusing namespace std;\n\nint n,m,ans=0;\nint root=0,size=0;\n\nstruct Splay\n{\n\tint son[2],fa,same_cnt,size,value;//\u5de6\u53f3\u513f\u5b50,\u503c,\u91cd\u590d\u6570,\u5927\u5c0f,\u7236\u8282\u70b9\n}t[100010];\n\nbool relate(int x)//\u5224\u65adx\u662f\u4ed6\u7236\u4eb2\u7684\u5de6\u513f\u5b50\u8fd8\u662f\u53f3\u513f\u5b50\n{\n\treturn x==t[t[x].fa].son[1];\n}\n\nvoid connect(int x,int fa,bool which)//\u628ax\u548cfa\u5efa\u7acb\u7236\u5b50\u5173\u7cfb\n{\n\tt[x].fa=fa;\n\tif(fa) t[fa].son[which]=x;\n}\n\nvoid update(int x)//\u66f4\u65b0\u8282\u70b9\u7684\u5927\u5c0f\n{\n\tt[x].size=t[t[x].son[0]].size+t[t[x].son[1]].size+t[x].same_cnt;\n}\n\nvoid rotate(int x)//\u65cb\u8f6c\n{\n\tint y=t[x].fa;\n\tbool z=relate(x);\n\tconnect(x,t[y].fa,relate(y));//\u5c06x\u53d8\u5230y\u7684\u4f4d\u7f6e\u6210\u4e3a\u5176\u7956\u5148\u7684\u8282\u70b9\n\tconnect(t[x].son[z^1],y,z);//\u5c06x\u7684\u5b50\u6811\u8fde\u63a5\u5230y\u4e0a\n\tconnect(y,x,z^1);//\u5c06y\u53d8\u6210x\u7684\u5b50\u8282\u70b9\n\tupdate(y); update(x);//\u66f4\u65b0\n}\n\nvoid splay(int x,int goal) \n{\n\tfor(int fa;(fa=t[x].fa)!=goal;rotate(x))//\u5224\u65ad\u5355\u65cb\u6216\u53cc\u65cb,\u4e0d\u505a\u8d58\u8ff0,\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u5230\u5e73\u8861\u6811\u6a21\u677f\u9898\u627esplay\u6a21\u677f \n\t{\n\t\tif(t[fa].fa!=goal)\n\t\t{\n\t\t\trotate(relate(x)==relate(fa)?fa:x);\n\t\t}\n\t}\n\tif(!goal) root=x;\n}\n\nvoid insert(int x)//\u63d2\u5165\u65b0\u8282\u70b9 \n{\n\tif(!root)\n\t{\n\t\tt[root=++size].same_cnt=1;\n\t\tt[root].size=1;\n\t\tt[root].value=x;\n\t\treturn;\n\t}\n\tint now=root;\n\twhile(1)\n\t{\n\t\tif(x==t[now].value)\n\t\t{\n\t\t\tt[now].same_cnt++;\n\t\t\tupdate(now);\n\t\t\tupdate(t[now].fa);\n\t\t\tsplay(now,0);\n\t\t\treturn;\n\t\t}\n\t\tint ff=now;\n\t\tbool which=t[ff].value<x;\n\t\tnow=t[ff].son[which];\n\t\tif(!now)\n\t\t{\n\t\t\tt[now=++size].same_cnt=1;\n\t\t\tt[now].size=1;\n\t\t\tt[now].value=x;\n\t\t\tconnect(now,ff,which);\n\t\t\tupdate(ff);\n\t\t\tsplay(now,0);\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nvoid find(int x)//\u627e\u8282\u70b9\u5e76\u8f6c\u81f3\u6839 \n{\n\tif(!root) return;\n\tint now=root;\n\twhile(t[now].value!=x&&t[now].son[x>t[now].value])\n\t{\n\t\tnow=t[now].son[x>t[now].value];\n\t}\n\tsplay(now,0);\n}\n\nint precursor(int x)//\u627e\u524d\u9a71 \n{\n\tfind(x);\n\tif(t[root].value<=x) return root;//\u8bb0\u5f97\u8fd9\u91cc\u7528<=\u5224\u5206\u6570\u7ebf\u548c\u5206\u6570\u76f8\u7b49\u7684\u60c5\u51b5,\u6211\u5c31\u662f\u8fd9\u91cc\u88ab\u5361\u4e86\u5f88\u4e45 \n\tint now=t[root].son[0];\n\twhile(t[now].son[1]) now=t[now].son[1];\n\treturn now;\n}\n\nint successor(int x)//\u627e\u540e\u7ee7 \n{\n\tfind(x);\n\tif(t[root].value>=x) return root;\n\tint now=t[root].son[1];\n\twhile(t[now].son[0]) now=t[now].son[0];\n\treturn now;\n}\n\ninline int read()//\u8bfb\u4f18 \n{\n\tint x=0,f=1; char ch=getchar();\n\twhile(ch<'0'&&ch!='-'||ch>'9'&&ch!='-') ch=getchar();\n\tif(ch=='-') f=-1,ch=getchar();\n\twhile(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*f;\n}\n\nint main()\n{\n\tinsert(INT_MIN); insert(INT_MAX);\n\tm=read(); n=read();\n\tfor(int i=1;i<=m;i++)//\u5148\u628a\u5206\u6570\u7ebf\u63d2\u5165\u6811\u4e2d \n\t{\n\t\tint x; x=read();\n\t\tinsert(x);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x; x=read();//\u5bf9\u4e8e\u6bcf\u4e2a\u5b66\u751f\u627e\u524d\u9a71\u548c\u540e\u7ee7\u5e76\u5224\u5dee\u503c\u7edd\u5bf9\u503c\u7684\u6700\u5c0f\u503c\u7d2f\u52a0 \n\t\tint pre=t[precursor(x)].value;\n\t\tint suc=t[successor(x)].value;\n\t\tans+=min(abs(suc-x),abs(x-pre));\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1554287371,
        "uid": 18282,
        "name": "Phykyer",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1678 \u3010\u70e6\u607c\u7684\u9ad8\u8003\u5fd7\u613f\u3011"
    }
]