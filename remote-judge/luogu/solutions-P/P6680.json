[
    {
        "content": "\u4ece $1$ \u5230 $n$ \u626b\u63cf $a$\uff0c\u8bbe\u548c $a$ \u76f8\u8fde\u7684\uff0c\u5927\u4e8e $a$ \u7684\u96c6\u5408\u4e3a $S$\uff0c\u5176\u4e2d\u6700\u5c0f\u5143\u7d20\u4e3a $b$\uff0c\u624b\u73a9\u4e00\u4e0b\u53d1\u73b0\u76f4\u63a5\u5c06 $b$ \u548c $S-\\{b\\}$ \u76f8\u8fde\u5373\u53ef\uff0c\u8fd9\u6837\u6b21\u5c0f\u70b9\u548c\u5176\u4ed6\u70b9\u7684\u8fb9\u4f1a\u5728\u4e0b\u4e00\u6b21\u626b\u5230 $b$ \u65f6\u8fde\u63a5\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u4e8e\u662f\u5c31\u662f\u6bcf\u6b21\u627e\u5230\u6700\u5c0f\u503c\u7136\u540e\u96c6\u5408\u53d6\u5e76\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\u5373\u53ef\u3002\n\n```cpp\nconst int N = 100005;\n\nnamespace Seg_Tree {\nclass Node {\n public:\n  int sum;\n  int lc, rc;\n} tre[N * 32];\nint tot, rot[N];\nvoid update(int &x, int xl, int xr, int ux, int num);\nint findfirst(int x, int xl, int xr);\nint merge(int x, int y, int xl, int xr);\n}  // namespace Seg_Tree\n\nint n, m;\n\nint main() {\n  read(n), read(m);\n  using namespace Seg_Tree;\n  for (int i = 1; i <= m; ++i) {\n    int u, v;\n    read(u), read(v);\n    update(rot[u], 1, n, v, 1);\n  }\n  ll ans = 0;\n  for (int u = 1; u <= n; ++u) {\n    update(rot[u], 1, n, u, 0);\n    ans += tre[rot[u]].sum;\n    int v = findfirst(rot[u], 1, n);\n    if (v) rot[v] = merge(rot[u], rot[v], 1, n);\n  }\n  write(ans), EL;\n  return 0;\n}\n\nnamespace Seg_Tree {\nvoid update(int &x, int xl, int xr, int ux, int num) {\n  if (!x) x = ++tot;\n  if (xl == xr) return tre[x].sum = num, void();\n  int xm = (xl + xr) >> 1;\n  if (ux <= xm)\n    update(tre[x].lc, xl, xm, ux, num);\n  else\n    update(tre[x].rc, xm + 1, xr, ux, num);\n  tre[x].sum = tre[tre[x].lc].sum + tre[tre[x].rc].sum;\n}\nint findfirst(int x, int xl, int xr) {\n  if (!tre[x].sum) return 0;\n  if (xl == xr) return xl;\n  int xm = (xl + xr) >> 1;\n  int ans = findfirst(tre[x].lc, xl, xm);\n  if (!ans) ans = findfirst(tre[x].rc, xm + 1, xr);\n  return ans;\n}\nint merge(int x, int y, int xl, int xr) {\n  if (!x || !y) return x + y;\n  if (xl == xr) {\n    tre[x].sum = tre[x].sum | tre[y].sum;\n    return x;\n  }\n  int xm = (xl + xr) >> 1;\n  tre[x].lc = merge(tre[x].lc, tre[y].lc, xl, xm);\n  tre[x].rc = merge(tre[x].rc, tre[y].rc, xm + 1, xr);\n  tre[x].sum = tre[tre[x].lc].sum + tre[tre[x].rc].sum;\n  return x;\n}\n}  // namespace Seg_Tree\n```",
        "postTime": 1621824200,
        "uid": 25251,
        "name": "moongazer",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CCO2019 Marshmallow Molecules"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u66f4\u597d\u5199\u7684\u65b9\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u89c2\u5bdf\u5230\u4e00\u4e2a\u6027\u8d28\uff1a\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\u7b49\u4ef7\u4e8e\u5c06\u4e00\u4e2a\u70b9\u5927\u4e8e\u67d0\u4e2a\u513f\u5b50\u7684\u513f\u5b50\u4eec\u8d4b\u7ed9\u8fd9\u4e2a\u513f\u5b50\uff08\u8fd9\u91cc\u7684\u513f\u5b50\u8868\u793a\u8fd9\u4e2a\u70b9\u6709\u51fa\u8fb9\u8fde\u5411\u7684\u70b9\uff09\u3002\u4f60\u53d1\u73b0\u628a\u8fd9\u4e9b\u513f\u5b50\u5168\u90fd\u8d4b\u7ed9\u5f53\u524d\u6700\u5c0f\u7684\u513f\u5b50\u4e5f\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u513f\u5b50\u96c6\u5408\u4e00\u5b9a\u4f1a\u904d\u5386\u5b8c\u3002\n\n\u7136\u540e\u6211\u4eec\u53ea\u9700\u505a\u5230\u5c06\u4e00\u4e2a\u70b9\u7684\u513f\u5b50\u96c6\u5408\u5408\u5e76\u5230\u53e6\u4e00\u4e2a\u513f\u5b50\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 set \u542f\u53d1\u5f0f\u5408\u5e76\u6765\u7ef4\u62a4\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\nCode( $O(n\\log n)$ )\uff1a\n```cpp\nint n,m;\nset<int> S[N];\nint main() {\n    n=read();m=read();\n    for(int i=1,x,y;i<=m;++i) {\n        x=read();y=read();\n        S[x].insert(y);\n    }\n    ll ans=0;\n    for(int i=1,pos;i<=n;++i) {\n        if(S[i].empty()) continue;\n        S[i].erase(i);\n        ans+=S[i].size();\n        pos=(*S[i].begin());\n        if(S[i].size()>S[pos].size()) \n            swap(S[i],S[pos]);\n        while(!S[i].empty()) {\n            S[pos].insert(*S[i].begin());\n            S[i].erase(S[i].begin());\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1668739508,
        "uid": 114830,
        "name": "Kostlin",
        "ccfLevel": 8,
        "title": "P6680 [CCO2019] Marshmallow Molecules"
    }
]