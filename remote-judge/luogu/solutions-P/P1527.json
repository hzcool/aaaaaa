[
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u6574\u4f53\u4e8c\u5206\u7684\u7ecf\u5178\u9898\u76ee\u3002\n\n\u8fd9\u9053\u9898\u663e\u7136\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u8be2\u95ee\u4e8c\u5206\u7b54\u6848\uff0c\u7edf\u8ba1\u8be5\u8be2\u95ee\u77e9\u9635\u4e2d\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u5143\u7d20\u4e2a\u6570\u3002\u5982\u679c\u5927\u4e8e\u7b49\u4e8ek\uff0c\u8bf4\u660e\u731c\u5927\u4e86\uff0c\u5426\u5219\u8bf4\u660e\u731c\u5c0f\u4e86\u3002\n\n\u5982\u679c\u7528\u8fd9\u79cd\u65b9\u6cd5\u7684\u8bdd\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u90fd\u81f3\u5c11\u8981\u7528O(\u8be2\u95ee\u77e9\u9635\u5927\u5c0f\\*log\u503c\u57df)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\uff0c\u591a\u7ec4\u8be2\u95ee\u7684\u8bdd\u65f6\u95f4\u4e0d\u80fd\u63a5\u53d7\u3002\n\n\u53d1\u73b0\u591a\u4e2a\u8be2\u95ee\u7684\u4e8c\u5206\u7b54\u6848\u662f\u53ef\u4ee5\u540c\u65f6\u88ab\u68c0\u9a8c\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u6240\u6709\u8be2\u95ee\u540c\u65f6\u4e8c\u5206\u7b54\u6848\uff0c\u628a\u6240\u6709\u7b54\u6848\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u8be2\u95ee\u653e\u5728\u8be2\u95ee\u5e8f\u5217\u7684\u5de6\u4fa7\uff0c\u5927\u4e8emid\u7684\u653e\u5230\u8be2\u95ee\u5e8f\u5217\u7684\u53f3\u4fa7\u7136\u540e\u9012\u5f52\u5904\u7406\u3002\n\n\u8fd9\u6837\u4e3a\u4ec0\u4e48\u4f1a\u5feb\u5462\uff1f\u6211\u4eec\u6bcf\u6b21\u53ef\u4ee5\u7528\u628a\u77e9\u9635\u4e2d\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u5143\u7d20\u67d3\u6210\u9ed1\u8272\uff0c\u5269\u4e0b\u7684\u5143\u7d20\u4fdd\u6301\u767d\u8272\u3002\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u7684\u68c0\u9a8c\uff0c\u5c31\u76f8\u5f53\u4e8e\u662f\u7edf\u8ba1\u67d0\u4e2a\u5b50\u77e9\u9635\u4e2d\u9ed1\u70b9\u7684\u4e2a\u6570\u3002\u4e3a\u4ec0\u4e48\u4e0d\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u524d\u7f00\u548c\u5462\uff1f\n\n\u6700\u5f00\u59cb\u7684\u65f6\u5019\u6574\u4e2a\u77e9\u9635\u90fd\u8bbe\u4e3a0\uff0c\u7136\u540e\u8ba9\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8emid\u7684\u4f4d\u7f6e\u52a01\uff0c$O(N^2 \\log^2 N)$\u5904\u7406\u5b8c\u6574\u4e2a\u77e9\u9635\u4e4b\u540e\u518d$O(log^2 N)$\u53bb\u5e94\u4ed8\u6bcf\u4e00\u4e2a\u8be2\u95ee\u3002\u88ab\u8be2\u95ee\u7684\u5b50\u77e9\u9635\u4e2d\u53ef\u80fd\u6709\u5f88\u591a\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u8fd9\u6837\u4fdd\u8bc1\u4e86\u5728\u6bcf\u6b21\u8be2\u95ee\u8fc7\u7a0b\u4e2d\uff0c\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u53ea\u5bf9\u8fd0\u884c\u65f6\u95f4\u505a\u4e00\u6b21\u8d21\u732e\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u8981\u6bd4\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\u5355\u72ec\u4e8c\u5206\u8981\u5feb\u5f97\u591a\u3002\n\n\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u5462\uff1f\u6211\u4eec\u662f\u5728\u4e8c\u5206\u503c\u57df\uff0c\u8003\u8651\u4e8c\u5206\u8fc7\u7a0b\u4e2d\u7684\u6bcf\u4e00\u5c42\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n1. \u5bf9\u4e8e\u6bcf\u4e00\u5c42\u4e8c\u5206\uff0c\u77e9\u9635\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u88ab\u52a0\u5165\u6811\u72b6\u6570\u7ec4\u4e00\u6b21\u3002\n\n2. \u5bf9\u4e8e\u6bcf\u4e00\u5c42\u4e8c\u5206\uff0c\u6bcf\u4e2a\u8be2\u95ee\u53ea\u4f1a\u88ab\u5904\u7406\u4e00\u6b21\u3002\n\n3. \u4e8c\u5206\u503c\u57df\u7684\u8fc7\u7a0b\u4e2d\u6700\u591a\u53ea\u4f1a\u51fa\u73b0$O(\\log N)$\u5c42\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O((N^2 + Q)\\log^3 N)$\uff0c\u611f\u89c9\u8fd9\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u5f00O2\u8fc7\u4e0d\u4e86\u554a\uff0c\u60f3\u8981\u4e0d\u5f00O2 AC\u53ef\u80fd\u5f97\u5927\u529b\u5361\u5e38\u4e00\u53d1\u3002\n\n\u53d1\u8868\u4e00\u4e0b\u4e2a\u4eba\u89c1\u89e3\uff1a\u611f\u89c9CDQ\u5206\u6cbb\u548c\u6574\u4f53\u4e8c\u5206\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\uff0c\u662f\u540c\u4e00\u79cd\u5206\u6cbb\u601d\u60f3\u5728\u4e0d\u540c\u7ef4\u5ea6\u53d1\u6325\u4f5c\u7528\u7684\u4f53\u73b0\u3002\uff08\u4e4b\u6240\u4ee5\u8fd9\u4e48\u8bf4\u662f\u56e0\u4e3a\u4ee3\u7801\u5199\u8d77\u6765\u662f\u975e\u5e38\u50cf\u7684\u3002\uff09\n\n\u8fd8\u6709\u4e00\u70b9\uff0c\u4e0d\u8981\u771f\u7684\u53bb\u4e8c\u5206\u503c\u57df\uff0c\u4e0d\u7136\u8fd8\u5f97\u9700\u8981\u79bb\u6563\u5316\uff0c\u5e38\u6570\u66f4\u5927\u3002\u628a\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\u6309\u7167\u6743\u503c\u6392\u5e8f\uff0c\u4e8c\u5206\u5728\u7b54\u6848\u5728\u6392\u5e8f\u4e4b\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\uff08\u56e0\u4e3a\u7b54\u6848\u4e00\u5b9a\u662f\u77e9\u9635\u4e2d\u5b58\u5728\u7684\u503c\uff0c\u6240\u4ee5\u5728\u8fd9\u4e9b\u503c\u91cc\u9762\u4e8c\u5206\u5c31\u597d\u4e86\u3002\uff09\n\n\u7ed9\u51fa\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\ninline int geti() {\n\tint ans = 0; bool flag = 0; char c = getchar();\n\twhile(!isdigit(c)) flag |= c == '-', c = getchar();\n\twhile( isdigit(c)) ans=ans*10+c-'0', c = getchar();\n\treturn flag? -ans: ans;\n}\n\ninline void puti(int x) {\n\tif(x < 0) x=-x, putchar('-');\n\tif(x > 9) puti(x / 10);\n\tputchar('0' + x%10);\n}\n\nconst int maxn = 500 + 10, maxq = 60000 + 5;\n\nstruct Numbers {\n\tint x, y, v; /// (x,y) \u4f4d\u7f6e\u7684\u503c\u4e3a v \n\tbool operator < (const Numbers& rhs) const {\n\t\treturn v < rhs.v; /// \u7528\u4e8e\u6bd4\u8f83\u5927\u5c0f \n\t}\n} Matrix[maxn * maxn]; int mcnt; /// \u77e9\u9635\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\n\nstruct BIT {\n\tint n; /// n * n \u7684\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\n\tint C[maxn][maxn];\n\tBIT(int N = 0) {n = N; memset(C, 0x00, sizeof(C));} /// \u521d\u59cb\u5316\n\tinline int lowbit(int x) {return x&(-x);}\n\tinline void add(int x, int y, int v) { /// \u5355\u70b9\u4fee\u6539 \n\t\tfor(register int i = x; i <= n; i += lowbit(i))\n\t\t\tfor(register int j = y; j <= n; j += lowbit(j))\n\t\t\t\tC[i][j] += v;\n\t}\n\tinline int pre(int x, int y) { /// \u524d\u7f00\u6c42\u548c \n\t\tint ans = 0;\n\t\tfor(register int i = x; i > 0; i -= lowbit(i))\n\t\t\tfor(register int j = y; j > 0; j -= lowbit(j))\n\t\t\t\tans += C[i][j];\n\t\treturn ans;\n\t}\n\tinline int submat(int x1, int y1, int x2, int y2) { /// \u5b50\u77e9\u9635\u548c \n\t\tint ans = pre(x2, y2);\n\t\tans -= pre(x1 - 1, y2) + pre(x2, y1 - 1);\n\t\tans += pre(x1 - 1, y1 - 1);\n\t\treturn ans;\n\t}\n} bit; /// \u8bb0\u5f97\u521d\u59cb\u5316 n\n\nstruct Events { /// \u8bb0\u5f55\u6240\u6709\u8be2\u95ee \n\tint x1, y1, x2, y2, k;\n\tinline void input() { /// \u8f93\u5165\u4e00\u4e2a\u8be2\u95ee \n\t\tx1 = geti(); y1 = geti();\n\t\tx2 = geti(); y2 = geti();\n\t\tk  = geti();\n\t}\n} Querys[maxq];\n\nint bcount(Events mat) { /// \u67e5\u8be2\u67d0\u4e2a\u8be2\u95ee\u4e2d\u7684\u9ed1\u70b9\u4e2a\u6570 \n\treturn bit.submat(mat.x1, mat.y1, mat.x2, mat.y2);\n}\n\nint id[maxq], t1[maxq], t2[maxq];\nint ans[maxq], cur[maxq];\n\nvoid Sol(int l, int r, int ql, int qr) {\n\tif(qr < ql) return; /// \u8be5\u503c\u57df\u533a\u95f4\u6ca1\u6709\u8be2\u95ee\n\tif(l == r) {\n\t\tfor(int i = ql; i <= qr; i ++) ans[id[i]] = Matrix[l].v;\n\t\treturn; /// \u627e\u5230\u89e3 \n\t}\n\tint mid = (l + r)/2;\n\tfor(int i = l; i <= mid; i ++) /// \u628a\u8981\u7edf\u8ba1\u5230\u7b54\u6848\u4e2d\u7684\u6570\u503c\u67d3\u9ed1 \n\t\tbit.add(Matrix[i].x, Matrix[i].y, 1);\n\tint cnt1 = 0, cnt2 = 0;\n\tfor(int i = ql; i <= qr; i ++) {\n\t\tint u = id[i]; /// \u5f53\u524d\u8981\u5904\u7406\u7684\u8be2\u95ee\n\t\tint s = cur[u] + bcount(Querys[u]); /// \u8003\u8651\u5f53\u524d\u533a\u95f4\u4e2d\u7684\u9ed1\u70b9\u4e2a\u6570\n\t\tif(s >= Querys[u].k) t1[++ cnt1] = u;\n\t\telse t2[++ cnt2] = u, cur[u] = s; \n\t}\n\tint qcnt = ql - 1;\n\tfor(int i = 1; i <= cnt1; i ++) id[++ qcnt] = t1[i]; /// \u5de6\u53f3\u5206\u7ec4 \n\tfor(int i = 1; i <= cnt2; i ++) id[++ qcnt] = t2[i];\n\tfor(int i = l; i <= mid; i ++) /// \u8c01\u6c61\u67d3\u8c01\u6cbb\u7406 \n\t\tbit.add(Matrix[i].x, Matrix[i].y, -1);\n\tSol(l, mid, ql, ql + cnt1 - 1);\n\tSol(mid+1, r, ql + cnt1, qr);\n}\n\nint main() {\n\tint N = geti(), Q = geti(); bit.n = N;/// \u8f93\u5165\u77e9\u9635\u5927\u5c0f\u548c\u8be2\u95ee\u7ec4\u6570\n\tfor(int i = 1; i <= N; i ++)\n\t\tfor(int j = 1; j <= N; j ++)\n\t\t\tMatrix[++ mcnt] = (Numbers){i, j, geti()};\n\tsort(Matrix + 1, Matrix + mcnt + 1); /// \u6309\u5143\u7d20\u5927\u5c0f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\tfor(int i = 1; i <= Q; i ++) Querys[i].input();\n\tfor(int i = 1; i <= Q; i ++) id[i] = i;\n\tSol(1, mcnt, 1, Q);\n\tfor(int i = 1; i <= Q; i ++) puti(ans[i]), putchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1522463964,
        "uid": 36456,
        "name": "GGN_2015",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1527 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5\u3011"
    },
    {
        "content": "## [P1527 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5](https://www.luogu.com.cn/problem/P1527)\n\u521a\u5b66\u6574\u4f53\u4e8c\u5206\uff0c\u4f5c\u4e3a\u81ea\u5df1\u624b\u6253 $AC$ \u7684\u7b2c\u4e00\u9898\uff0c\u5199\u7bc7\u9898\u89e3~~\u4ee5\u4e3a\u7eaa\u5ff5~~\n\n\u63a5\u4e0b\u6765\u5148\u5927\u81f4\u5730\u804a\u4e00\u804a\u6574\u4f53\u4e8c\u5206\u3002\n\n### \u6574\u4f53\u4e8c\u5206\u626f\u6de1\n\n\u6709\u4e00\u4e9b\u9898\u76ee\u662f\u9700\u8981\u4e8c\u5206\u6765\u5c06 $O(N)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 $O(log_2 N)$ \u7684\uff0c\u4f46\u662f\u5982\u679c\u9898\u76ee\u6709\u591a\u6b21\u8be2\u95ee\u4e14\u6bcf\u6b21\u8be2\u95ee\u6211\u4eec\u5bf9\u5176\u90fd\u76f4\u63a5\u4e8c\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u5f97\u8ba9\u6211\u4eec\u65e0\u6cd5\u63a5\u53d7\uff0c\u751a\u81f3\u4e0a\u5347\u4e00\u4e2a\u6570\u91cf\u7ea7\uff0c\u5bfc\u81f4 `TLE`\u3002\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u4f1a\u7528\u5230\u6574\u4f53\u4e8c\u5206\u3002\n\n\u6574\u4f53\u4e8c\u5206\u662f\u4e00\u4e2a\u79bb\u7ebf\u7b97\u6cd5\uff0c\u5b83\u7684\u4e3b\u4f53\u601d\u8def\u5c31\u662f\u628a\u591a\u4e2a\u8be2\u95ee\u6216\u8005\u4fee\u6539\u64cd\u4f5c\u4e00\u8d77\u89e3\u51b3\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u603b\u662f\u5728\u6700\u540e\u624d\u628a\u6240\u6709\u7684\u7b54\u6848\u4e00\u8d77\u8fdb\u884c\u4f5c\u7b54\u3002\n### \u601d\u8def\u8be6\u89e3\n\u4f7f\u7528\u6574\u4f53\u4e8c\u5206\u89e3\u51b3\u7684\u9898\u76ee\uff0c\u9996\u5148\u8981\u5c06\u6240\u6709\u7684\u64cd\u4f5c\uff0c\u5305\u62ec\u63d2\u5165\u3001\u4fee\u6539\u3001\u5220\u9664\u548c\u8be2\u95ee\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6253\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u5b58\u653e\u5728\u64cd\u4f5c\u5e8f\u5217\u4e2d\uff0c\u4e0d\u59a8\u79f0\u8fd9\u4e2a\u5e8f\u5217\u4e3a $q$ \u3002\n\n\u4e00\u822c\u8fd8\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u91cd\u8981\u7684\u51fd\u6570\uff0c\u6765\u8fdb\u884c\u4e8c\u5206\u89e3\u51b3\u6240\u6709\u7684\u64cd\u4f5c\u3002\u4e2a\u4eba\u4e60\u60ef\u4e0a\u79f0\u5176\u4e3a `solve(l, r, L, R)`\u3002\u610f\u601d\u5c31\u662f\u64cd\u4f5c\u5e8f\u5217\u4e0a\u7b2c $[l, r]$ \u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u5df2\u7ecf\u786e\u5b9a\u5728 $[L, R]$ \u7684\u503c\u57df\u8303\u56f4\u5185\u3002\n\n\u4e8c\u5206\u561b\uff0c\u80af\u5b9a\u662f\u8981\u53d6\u4e00\u4e2a $mid = \\lfloor\\frac{L + R}{2}\\rfloor$\uff0c\u5224\u5b9a\u6bcf\u4e00\u4e2a\u7b54\u6848\u4e0e $mid$ \u7684\u5173\u7cfb\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21 `solve(l, r, L, R)`\uff0c \u679a\u4e3e\u6570\u503c\u5728 $[L, R]$ \u4e4b\u95f4\u7684\u6570\uff0c\u5e76\u5c06\u8be5\u6570\u63d2\u5165\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u65b9\u4fbf\u4e4b\u540e\u7edf\u8ba1\u67d0\u4e2a\u7279\u5b9a\u7684\u77e9\u9635\u4e2d\u6ee1\u8db3\u5927\u5c0f\u9650\u5b9a\u7684\u6570\u3002\n\n\u63a5\u7740\u679a\u4e3e\u8be2\u95ee\u64cd\u4f5c $(x_1, y_1, x_2, y_2, k)$\uff0c\u8bb0\u5de6\u4e0a\u89d2\u4e3a $(x_1, y_1)$ \uff0c\u53f3\u4e0b\u89d2\u4e3a $(x_2, y_2)$ \u7684\u5b50\u77e9\u9635\u4e2d\uff0c\u6570\u503c\u5728 $[L, mid]$ \u7684\u6570\u7684\u4e2a\u6570\u4e3a $cnt$\u3002\u663e\u7136\uff0c\u5982\u679c $cnt_i \\geq k_i$\uff0c\u90a3\u4e48 $(x_1, y_1, x_2, y_2, k)$ \u7684\u7b54\u6848\u5728 $[L, mid]$ \u4e2d\uff1b\u5426\u5219$(x_1, y_1, x_2, y_2, k - cnt)$ \u7684\u7b54\u6848\u5c31\u5728 $[mid + 1, R]$ \u4e2d\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e24\u4e2a\u89c4\u6a21\u51cf\u534a\u7684\u5b50\u95ee\u9898\uff0c\u53ef\u4ee5\u8fdb\u884c\u9012\u5f52\u5904\u7406\uff0c\u5f53\u95ee\u9898\u7684\u89c4\u6a21\u7f29\u5c0f\u4e3a\u4e00\u4e2a\u6570\uff0c\u5373 $l = r$ \u65f6\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e9b\u64cd\u4f5c\u7684\u7b54\u6848\u3002\n\n\u987a\u5e26\u7740\u63d0\u4e00\u4e0b\uff0c\u8ba1\u7b97\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u516c\u5f0f\u5927\u6982\u957f\u8fd9\u6837\uff1a\n$$\nans=S(a,b)-S(a,v-1)-S(u-1,b)+S(u-1,v-1)\n$$\n\n\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\uff0c\u5e26\u6709~~\u7b80\u5355\u7684~~\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nconst int N = 1010, M = 1e6 + 10;\nstruct Node {\n\tint x, y, u, v, k, id;\n    //(x,y)(u,v)\u77e9\u9635\u5de6\u4e0a\uff0c\u53f3\u4e0b\u89d2\n} q[M + N], q1[N + M], q2[N + M];\nint tot = 0, n, m, tree[N][N], ans[M];\n\n//\u6811\u72b6\u6570\u7ec4\ninline void add(int x, int y, int v) { //\u4fee\u6539\n\tfor (int i = x; i <= n; i += i & -i) \n\t\tfor (int j = y; j <= n; j += j & -j)\n\t\t\ttree[i][j] += v;\n\treturn ;\n}\n\ninline int query(int x, int y) { //\u67e5\u8be2\u4e8c\u7ef4\u524d\u7f00\u548c\n\tint res = 0;\n\tfor (int i = x; i; i -= i & -i) \n\t\tfor (int j = y; j; j -= j & -j)\n\t\t\tres += tree[i][j];\n\treturn res;\n}\n\ninline void solve(int ql, int qr, int L, int R) {\n\tif (ql > qr) \n\t\treturn ;\n\tif (L == R) { //\u89c4\u6a21\u7f29\u5c0f\u4e3a\u4e00\u4e2a\u6570\n\t\tfor (int i = ql; i <= qr; ++ i) //\u8bb0\u5f55\u7b54\u6848 \n\t\t\tif (q[i].id != 0) ans[q[i].id] = L;\n\t\treturn ;\n\t}\n\t\n\tint len1, len2, mid = (L + R) >> 1;\n\tlen1 = len2 = 0;\n\tfor (int i = ql; i <= qr; ++ i) {\n\t\tif(q[i].id == 0) {\n\t\t\tif (q[i].k <= mid) {\n\t\t\t\tadd(q[i].x, q[i].y, 1);\n\t\t\t\tq1[++ len1] = q[i];\n\t\t\t} else {\n\t\t\t\tq2[++ len2] = q[i];\n\t\t\t}\n\t\t} else {\n\t\t\tint tmp = query(q[i].u, q[i].v) - query(q[i].x - 1, q[i].v) - query(q[i].u, q[i].y - 1) + query(q[i].x - 1, q[i].y - 1); //\u63d0\u53d6\u5b50\u77e9\u9635\n\t\t\tif (tmp >= q[i].k) {\n\t\t\t\tq1[++ len1] = q[i];\n\t\t\t} else {\n\t\t\t\tq[i].k -= tmp;\n\t\t\t\tq2[++ len2] = q[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 1; i <= len1; ++ i) q[ql + i - 1] = q1[i];\n\tfor (int i = 1; i <= len2; ++ i) q[ql + len1 + i - 1] = q2[i];\n\t\n\tfor (int i = ql; i <= ql + len1 - 1; ++ i)\n\t\tif (q[i].id == 0 && q[i].k <= mid) \n\t\t\tadd(q[i].x, q[i].y, -1);\n\t\n\tsolve(ql, ql + len1 - 1, L, mid);\n\tsolve(ql + len1, qr, mid + 1, R);\n}\n\ninline int read() {\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(!isdigit(ch)) { if(ch == '-') f = -f; ch = getchar(); }\n\twhile(isdigit(ch)) { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); }\n\treturn x * f;\n}\n\nsigned main() {\n\tn = read(); m = read();\n\tfor (int x, i = 1; i <= n; ++ i)\n\t\tfor (int j = 1; j <= n; ++ j) {\n\t\t\tx = read();\n\t\t\tq[++ tot] = (Node) {i, j, 0, 0, x, 0};\n\t\t}\n\tfor (int x, y, a, b, k, i = 1; i <= m; ++ i) {\n\t\tx = read(); y = read(); \n\t\ta = read(); b = read();\n\t\tk = read();\n\t\tq[++ tot] = (Node) {x, y, a, b, k, i};\n\t}\n\tsolve(1, tot, INT_MIN, INT_MAX);\n\tfor (int i = 1; i <= m; ++ i)\n\t\tprintf(\"%d\\n\", ans[i]);\n\treturn 0;\n} \n```\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jrd168bx.png)\n\n$END.$",
        "postTime": 1612788286,
        "uid": 213218,
        "name": "\u849f\u84bbCGZ",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1527 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e2a$\\Theta(n^2\\log^2n)$\u505a\u6cd5\u3002\uff08\u5047\u8bbe$m$\u4e0e$n^2$\u540c\u9636\uff09\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u7a7a\u95f4\u6ca1\u6cd5\u641e\u6811\u72b6\u6570\u7ec4\u5957\u7ebf\u6bb5\u6811\u4e4b\u7c7b\u7684\uff0c\u53ea\u80fd\u6574\u4f53\u4e8c\u5206\u3002\n\n\u5728\u6574\u4f53\u4e8c\u5206\u4e2d\u7684\u67d0\u4e00\u6b21\u5206\u6cbb\u65f6\uff0c\u5047\u8bbe\u503c\u57df\u4e3a$[l,r]$\uff0c\u503c\u57df\u4e2d\u70b9\u4e3a$mid$\uff0c\u5219\u8981\u7edf\u8ba1\u503c\u57df\u5728\u6b64\u8303\u56f4\u7684\u8be2\u95ee\u7684\u5b50\u77e9\u5f62\u4e2d\u6ee1\u8db3$x\\in[l,r]$\u7684$x$\u7684\u4e2a\u6570\u3002\u7531\u4e8e$cnt(x1,y1,x2,y2)=cnt(0,0,x2,y2)-cnt(0,0,x2,y1-1)-cnt(0,0,x1-1,y2)+cnt(0,0,x1-1,y1-1)$\uff0c\u5c06\u4e00\u4e2a\u8be2\u95ee\u62c6\u6210\u56db\u4e2a\u8be2\u95ee\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\uff0c\u5e76\u4e0d\u9700\u8981\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u3002\u53ef\u4ee5\u5c06\u6240\u6709$x\\in[l,r]$\u7684$x$\u770b\u6210\u4fee\u6539\uff0c\u548c\u8be2\u95ee\u4e00\u8d77\u79bb\u7ebf\u4e0b\u6765\uff0c\u6309\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u7eb5\u5750\u6807\u7528\u666e\u901a\u7684\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\u3002\u8fd9\u6837\u505a\uff0c\u5047\u8bbe\u8fd9\u6b21\u5206\u6cbb\u503c\u57df\u533a\u95f4\u957f\u5ea6\u4e3a$l$\uff0c\u8be2\u95ee\u4e2a\u6570\u4e3a$q$\uff0c\u5219\u672c\u6b21\u5206\u6cbb\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\\Theta((l+q)(\\log l+\\log q))$\uff0c\u7b97\u6cd5\u6574\u4f53\u590d\u6742\u5ea6\u4e3a$\\Theta((n^2+m)(\\log n^2+\\log m)\\log n^2)=\\Theta(n^2\\log^2n)$\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=505,M=60005;\nint n,q,a[N][N],ans[M],x,y,xx,yy,z;\nint aa[N*N],lenaa,dx[M],o2p[M],o2p1[M],o2p2[M];\nstruct node{int v,x,y;}o[N*N];\nbool operator <(node a,node b){return a.v<b.v;}\nstruct node2{int x1,y1,x2,y2,k,id;}o2[M];\nstruct node3{int x,y,id;}o3[N*N*2];\nbool operator <(node3 a,node3 b){return a.x!=b.x?a.x<b.x:!a.id&&b.id;}\nint sz[N*N];\nvoid ddxg(int x,int y){for(;x<=lenaa;x+=x&-x)sz[x]+=y;}\nint qjcx(int x){int y=0; for(;x;x-=x&-x)y+=sz[x]; return y;}\nvoid getans(int l,int r,int o2l,int o2r)\n{\n    if(l==r){for(int i=o2l;i<=o2r;i++)ans[o2[o2p[i]].id]=aa[o[l].v]; return;}\n    int mid=l+r>>1,len1=0,len2=0,len3=0;\n    for(int i=l;i<=mid;i++)o3[++len3]={o[i].x,o[i].y,0};\n    for(int i=o2l;i<=o2r;i++)\n    {\n        x=o2[o2p[i]].x1; y=o2[o2p[i]].y1; xx=o2[o2p[i]].x2; yy=o2[o2p[i]].y2;\n        o3[++len3]={xx,yy,i}; o3[++len3]={x-1,y-1,i};\n        o3[++len3]={xx,y-1,-i}; o3[++len3]={x-1,yy,-i};\n    }\n    sort(o3+1,o3+len3+1);\n    for(int i=1;i<=len3;i++)\n        if(!o3[i].id)ddxg(o3[i].y,1);\n        else if(o3[i].id>0)dx[o3[i].id]+=qjcx(o3[i].y);\n        else dx[-o3[i].id]-=qjcx(o3[i].y);\n    for(int i=o2l;i<=o2r;i++)\n        if(o2[o2p[i]].k<=dx[i])o2p1[++len1]=o2p[i];\n        else o2[o2p[i]].k-=dx[i],o2p2[++len2]=o2p[i];\n    for(int i=1;i<=len1;i++)o2p[o2l+i-1]=o2p1[i];\n    for(int i=1;i<=len2;i++)o2p[o2l+len1+i-1]=o2p2[i];\n    fill(dx+o2l,dx+o2r+1,0);\n    for(int i=l;i<=mid;i++)ddxg(o[i].y,-1);\n    if(len1)getans(l,mid,o2l,o2l+len1-1);\n    if(len2)getans(mid+1,r,o2l+len1,o2r);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            scanf(\"%d\",a[i]+j),aa[++lenaa]=a[i][j];\n    sort(aa+1,aa+lenaa+1);\n    lenaa=unique(aa+1,aa+lenaa+1)-aa-1;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            a[i][j]=lower_bound(aa+1,aa+lenaa+1,a[i][j])-aa,o[i*n-n+j]={a[i][j],i,j};\n    sort(o+1,o+n*n+1);\n    for(int i=1;i<=q;i++)scanf(\"%d%d%d%d%d\",&x,&y,&xx,&yy,&z),o2[i]={x,y,xx,yy,z,i},o2p[i]=i;\n    getans(1,n*n,1,q);\n    for(int i=1;i<=q;i++)printf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1600053824,
        "uid": 31381,
        "name": "C3H5ClO",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1527 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5\u3011"
    },
    {
        "content": "\n\n\u6574\u4f53\u4e8c\u5206\u7684\u7ecf\u5178\u4f8b\u9898\u3002\n\n\u5bf9\u4e8e\u6574\u4f53\u4e8c\u5206\uff0c\u6211\u4e2a\u4eba\u7684\u7406\u89e3\u662f\u4e8c\u5206\u7b54\u6848\u5957\u5206\u6cbb\u3002\n\n\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u5bf9\u7b54\u6848\u8fdb\u884c\u4e8c\u5206\uff0c\u7136\u540e\u5bf9\u4e8e\u8be2\u95ee\u8fdb\u884c\u7c7b\u4f3c\u4e8e\u6743\u503c\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u7b2c $k$ \u5927\u7684\u5206\u6cbb\u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u66b4\u529b\u505a\u6cd5\u5c31\u662f\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u90fd\u8dd1\u4e00\u8fb9\u4e8c\u5206\u7b54\u6848\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f O($nm log n$)\n\n\u8fd9\u663e\u7136\u6211\u4eec\u662f\u4e0d\u80fd\u591f\u63a5\u53d7\u7684\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u4e8c\u5206\u7b54\u6848\u5904\u7406\u6bcf\u4e2a\u8be2\u95ee\u65f6\uff0c\u4f1a\u91cd\u590d\u8ba1\u7b97\u597d\u591a\u904d\u52a0\u6743\u7684\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u5c31\u8003\u8651\u628a\u8be2\u95ee\u653e\u5728\u4e00\u8d77\u5904\u7406\uff0c\u6bcf\u4e2a\u52a0\u6743\u64cd\u4f5c\u53ea\u91cd\u590d\u8ba1\u7b97\u4e00\u6b21\u3002\n\n\u8fd9\u6837\u5c31\u80fd\u7701\u53bb\u4e0d\u5c11\u65f6\u95f4\u3002\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\n\n\u5047\u8bbe\uff0c\u6211\u4eec\u4e8c\u5206\u51fa\u6765\u7684\u7b54\u6848\u4e3a $mid$  \u90a3\u4e48\u6b64\u65f6\u8be2\u95ee\u7684\u7b54\u6848\u5206\u6210\u4e86\u4e24\u79cd\u60c5\u51b5\n\n\u4e00\u79cd\u662f\u7b54\u6848\u5c0f\u4e8e $mid$ \u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u9012\u5f52\u4e0b\u53bb\uff0c\n\n\u53e6\u4e00\u79cd\u662f\u5927\u4e8e $mid$ \u7684\u8be2\u95ee\uff0c\u6211\u4eec\u5c31\u8981\u51cf\u53bb\u5de6\u8fb9\u7684\u8d21\u732e\uff0c\u5728 $mid - R$ \u8fd9\u4e2a\u8303\u56f4\u9012\u5f52\n\n\u4e0b\u53bb\uff08\u53ef\u4ee5\u53c2\u8003\u6743\u503c\u7ebf\u6bb5\u6811\u6c42\u89e3\u533a\u95f4\u7b2c $k$ \u5927\u7684\u65b9\u6cd5\uff09\u3002\n\n\u6211\u4eec\u628a\u7b54\u6848\u5728 $mid$ \u5de6\u8fb9\u7684\u8be2\u95ee\u653e\u5728\u524d\u9762\uff0c\u7b54\u6848\u5728 $mid$ \u53f3\u8fb9\u7684\u8be2\u95ee\u653e\u5728\u540e\u9762\u3002\n\n\u8fd9\u6837\u6211\u4eec\u524d\u4e00\u90e8\u5206\u5c31\u53ef\u4ee5\u9012\u5f52 $L-mid$ \u8fd9\u4e00\u6bb5\u533a\u95f4\uff0c\u540e\u4e00\u90e8\u5206\u5c31\u53ef\u4ee5\u9012\u5f52 $mid - R$\n\n\u8fd9\u4e2a\u533a\u95f4\u3002\uff08\u4e5f\u5c31\u662f\u5bf9\u8be2\u95ee\u5206\u6cbb\uff09\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u600e\u4e48\u5224\u65ad\u8fd9\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u662f\u5927\u4e8e\u6216\u5c0f\u4e8e $mid$ \u7684\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u5bf9\u4e8e $L-mid$ \u7684\u8fd9\u4e00\u90e8\u5206\u7684\u52a0\u6743\u64cd\u4f5c\u52a0\u4e0a\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\n\n\u4e2a\u8be2\u95ee\u5c31\u76f8\u5f53\u4e8e\u4e8c\u7ef4\u6570\u70b9\u3002\n\n\u8fd9\u5757\u533a\u95f4\u7684\u70b9\u7684\u6570\u91cf\u5927\u4e8e $q[i].c$ \u6211\u4eec\u5c31\u8bf4\u660e\u6b64\u65f6\u7b54\u6848\u5c0f\u4e8e $mid$\uff0c\u53cd\u4e4b\u5927\u4e8e $mid$.\n\n\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\u662f\uff0c\u5728\u628a\u8be2\u95ee\u5206\u6210\u524d\u540e\u4e24\u90e8\u5206\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u8981\u5148\u51cf\u53bb $L-mid$ \u7684\u8d21\n\n\u732e\uff0c\u5728\u8d4b\u7ed9\u4e2d\u95f4\u7684\u90a3\u4e2a\u8fc7\u6e21\u6570\u7ec4\uff08\u6211\u5728\u8fd9\u91cc\u5361\u4e86\u8fd1\u4e00\u4e2a\u5c0f\u65f6\uff09\n\n\u8fd8\u6709\u5c31\u662f\u8981\u5c06\u8bb0\u5f55\u524d\u540e\u4e24\u90e8\u5206\u8be2\u95ee\u6570\u91cf\u7684\u53d8\u91cf\u4f8b\u5982 $cntl$, $cntr$ \u8981\u8bbe\u4e3a\u5c40\u90e8\u53d8\u91cf\uff0c\n\n\u4e0d\u7136\u4ed6\u5c31\u4f1a\u4e00\u76f4\u52a0\u4e0b\u53bb\u5bfc\u81f4\u4f60\u7b54\u6848\u51fa\u9519\n\n\u5177\u4f53\u4ee3\u7801\u957f\u8fd9\u6837 (\u5e26\u6709\u6ce8\u91ca\u7684\u826f\u5fc3\u4ee3\u7801)\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nconst int N = 300000;\nint n,m,tot;\nint a[510][510],tr[510][510],ans[N],b[N];\nstruct node{ int x,y;};\nstruct kkk\n{\n\tint x1,x2,id;\n\tint y1,y2,c;\n}q[N],tong[N],stal[N],star[N];\nvector< node > sta[N];\ninline int read()\n{\n    int s = 0,w = 1; char ch = getchar();\n    while(ch < '0' || ch > '9'){if(ch == '-') w = -1; ch = getchar();}\n    while(ch >= '0' && ch <= '9'){s = s * 10 + ch - '0'; ch = getchar();}\n    return s * w;\n}\nint lowbit(int x){return x & -x;}\nvoid chenge(int x,int y,int val)//\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\n{\n    for(int i = x; i <= n; i += lowbit(i))\n    {\n        for(int j = y; j <= n; j += lowbit(j))\n        {\n            tr[i][j] += val;\n        }\n    }\n}\nint ask(int x,int y)\n{\n    int res = 0;\n    for(int i = x; i; i -= lowbit(i))\n    {\n        for(int j = y; j; j -= lowbit(j))\n        {\n            res += tr[i][j];\n        }\n    }\n    return res;\n}\nint get_ans(int x1,int y1,int x2,int y2)//\u4e8c\u7ef4\u6570\u70b9\n{\n    return (ask(x2,y2) + ask(x1-1,y1-1) - ask(x1-1,y2) - ask(x2,y1-1));\n}\nvoid work(int l,int r,int L,int R)//l-r \u662f\u6211\u4eec\u7684\u7b54\u6848\u7684\u533a\u95f4\uff0c L-R \u662f\u6211\u4eec\u7684\u8be2\u95ee\u533a\u95f4\n{\n    int cntl = 0, cntr = 0;//\u8fd9\u4e24\u4e2a\u53d8\u91cf\u4e00\u5b9a\u8981\u8bbe\u4e3a\u5c40\u90e8\u53d8\u91cf\n    if(l == r)//l==r \u8bf4\u660e\u6b64\u65f6\u6211\u4eec L-R \u8fd9\u4e00\u90e8\u5206\u8be2\u95ee\u7684\u7b54\u6848\u5c31\u662f l\n    {\n        for(int i = L; i <= R; i++)\n        {\n            ans[q[i].id] = l;\n        }\n        return;\n    }\n    int mid = (l+r)>>1;//\u4e8c\u5206\u7b54\u6848\n    for(int i = l; i <= mid; i++)\n    {\n        for(int j = 0; j < (int)sta[i].size(); j++)\n        {\n            int x = sta[i][j].x;\n            int y = sta[i][j].y;\n            chenge(x,y,1);//\u52a0\u6743\u64cd\u4f5c\n        }\n    }\n    for(int i = L; i <= R; i++)\n    {\n        int tmp = get_ans(q[i].x1,q[i].y1,q[i].x2,q[i].y2);//\u4e8c\u7ef4\u6570\u70b9\n        if(tmp >= q[i].c)//\u5982\u679c\u8fd9\u4e2a\u533a\u57df\u7684\u70b9\u7684\u6570\u91cf\u5927\u4e8e q[i].c \u8bf4\u660e\u6211\u4eec\u8fd9\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u5c0f\u4e8e mid \u8981\u628a\u4ed6\u653e\u5728\u524d\u4e00\u90e8\u5206\n        {\n            stal[++cntl] = q[i];\n        }\n        else \n\t\t{\n        \tq[i].c -= tmp;//\u540e\u4e00\u90e8\u5206\u5148\u51cf\u53bb l-mid \u8fd9\u4e2a\u7b54\u6848\u7684\u8d21\u732e\uff0c\u5728\u53bb mid - r \u8fd9\u4e2a\u533a\u95f4\u4e8c\u5206\u7b54\u6848\n        \tstar[++cntr] = q[i];//\u628a\u4ed6\u5206\u5230\u540e\u9762\u7684\u90a3\u4e00\u90e8\u5206\n        }\n    }\n    for(int i = l; i <= mid; i++)//\u628a\u52a0\u6743\u64cd\u4f5c\u8fd8\u539f\n    {\n        for(int j = 0; j < sta[i].size(); j++)\n        {\n            int x = sta[i][j].x;\n            int y = sta[i][j].y;\n            chenge(x,y,-1);\n        }\n    }\n    for(int i = L; i <= L + cntl - 1 ; i++) q[i] = stal[i - L + 1];//\u91cd\u65b0\u7ed9\u8be2\u95ee\u6392\u4e00\u4e0b\u5e8f\u628a\u7b54\u6848\u5c0f\u4e8e mid \u7684\u653e\u524d\u9762\uff0c\u53cd\u4e4b\u653e\u540e\u9762\n    for(int i = L + cntl; i <= R; i++) q[i] = star[i - L - cntl + 1];\n    work(l,mid,L,L + cntl - 1); work(mid + 1,r,L + cntl,R);//\u7ee7\u7eed\u9012\u5f52\u4e0b\u53bb\n}\nint main()\n{\n    n = read(); m = read();\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= n; j++)\n        {\n            a[i][j] = read();\n            b[++tot] = a[i][j];\n        }\n    }\n    sort(b + 1,b + tot + 1);//\u79bb\u6563\u5316\n    int t = unique(b + 1,b + tot + 1) - b - 1;\n    for(int i = 1; i <= n; i++)\n    {\n        for(int j = 1; j <= n; j++)\n        {\n            a[i][j] = lower_bound(b+1,b+t+1,a[i][j]) - b;\n            sta[a[i][j]].push_back((node){i,j});//\u8bb0\u5f55\u6bcf\u4e2a\u6743\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\n        }\n    }\n    for(int i = 1; i <= m; i++)\n    {\n        q[i].x1 = read(); q[i].y1 = read();\n        q[i].x2 = read(); q[i].y2 = read();\n        q[i].c = read();  q[i].id = i;\n    }\n    work(1,t,1,m);//\u6574\u4f53\u4e8c\u5206\n    for(int i = 1; i <= m; i++)\n    {\n        printf(\"%d\\n\",b[ans[i]]);\n    }\n    return 0;\n}\n\n```\n\n\n\n\n",
        "postTime": 1599176724,
        "uid": 248896,
        "name": "genshy",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1527 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5\u3011"
    },
    {
        "content": "### 2022.10.11 \u6dfb\u52a0\u4e86\u5fc5\u8981\u7684\u5361\u5e38\u6280\u5de7\uff0c\u4fee\u6539\u4e86\u90e8\u5206\u7b14\u8bef\u3002\r\n\r\n## \u9898\u610f\r\n\r\n\u7ed9\u4f60\u4e00\u4e2a $n\u00d7n$ \u7684\u77e9\u9635\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u5b50\u77e9\u5f62\u7684\u7b2c $k$ \u5c0f\u6570\u3002\r\n\r\n## \u601d\u8def\r\n\r\n\u8fd9\u662f\u4e00\u9053\u4e8c\u7ef4\u83ab\u961f\u7684\u4e00\u773c\u9898\uff0c\u5148\u79bb\u6563\u5316\uff0c\u7528\u83ab\u961f\u7ef4\u62a4\u51fa\u77e9\u5f62\u4e2d\u51fa\u73b0\u7684\u6570\uff0c\u518d\u503c\u57df\u5206\u5757\u5373\u53ef\u3002\r\n\r\n\u8fd9\u91cc\u4e3b\u8981\u8bb2\u4e00\u4e0b\u4e8c\u7ef4\u83ab\u961f\u3002\r\n\r\n\u4e8c\u7ef4\u83ab\u961f\uff0c\u987e\u540d\u601d\u4e49\uff0c\u662f\u5c06\u83ab\u961f\u653e\u5728\u4e8c\u7ef4\u4e0a\u8dd1\uff0c\u540c\u65f6\u6709\u56db\u4e2a\u6307\u9488\uff0c\u8868\u793a\u4e0a\u4e0b\u5de6\u53f3\u3002\r\n\r\n\u5355\u6b21\u79fb\u52a8\u6307\u9488\u4e00\u6b21\u52a0\u5165\u6216\u5220\u9664\u4e00\u6574\u6392\uff0c\u6545\u590d\u6742\u5ea6\u7565\u9ad8\u3002\r\n\r\n\u5173\u4e8e\u6700\u4f18\u5757\u957f\u4e0e\u590d\u6742\u5ea6\uff0c\u8bbe\u5757\u957f\u4e3a $B$, \u4e0a\u6307\u9488\u5171\u79fb\u52a8 $\\dfrac{n}{B}$ \u5757\uff0c\u6bcf\u5757\u5de6\u53f3\u6307\u9488\u5171 $(\\dfrac{n}{B})^2$ \u6b21\uff0c\r\n\r\n\u6545\u4e0a\u6307\u9488\u5171 $qB$ \u6b21\uff0c\u53d6\u5de6\u6307\u9488\u79fb\u52a8 $\\dfrac{n^4}{B^3}$ \u6b21\uff0c\u8ba9 $\\dfrac{n^4}{B^3}=qB$, \u5f97 $B=nq^{-\\tfrac{1}{4}}$, \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2q^\\tfrac{3}{4})$, \u5728\u672c\u9898\u8981\u5f00\u5230\u8fd9\u4e2a\u5757\u957f\u7684 $\\dfrac{1}{3}$ \u5de6\u53f3\uff0c\u7a0d\u52a0\u5361\u5e38\u5373\u53ef\u3002\r\n\r\n\u81f3\u4e8e\u503c\u57df\u5206\u5757\uff0c\u5c31\u662f\u5bf9\u4e8e\u6570\u7684\u503c\u57df\u8fdb\u884c\u5206\u5757\uff0c\u8bb0\u5f55\u51fa\u73b0\u5728\u8be5\u503c\u57df\u548c\u503c\u57df\u5757\u7684\u6570\u7684\u4e2a\u6570\u3002\r\n\r\n\u4e8e\u662f\u67e5\u8be2\u65f6\u5c31\u53ef\u4ee5\u66b4\u529b\u8df3\u5757\uff0c\u518d\u5728\u5757\u5185\u627e\u5373\u53ef\uff0c\u5355\u6b21\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt{n})$\u3002\r\n\r\n## \u4f18\u5316\r\n\r\n\u4ec5\u505a\u5230\u4e0a\u9762\u7684\u90e8\u5206\u53ea\u80fd\u5f97\u5230 [60pts,](https://www.luogu.com.cn/record/89424161) \u5269\u4e0b\u8fd8\u9700\u8981\u52a0\u4e0a\u4e00\u4e2a\u83ab\u961f\u5e38\u7528\u7684\u5361\u5e38\u6280\u5de7\u2014\u2014\u5947\u5076\u6392\u5e8f\u3002\r\n\r\n\u5c31\u662f\u4ee3\u7801\u4e2d\u7684\u8fd9\u4e00\u884c\uff1a\r\n\r\n```cpp\r\nreturn c[x.u]==c[y.u]?(c[x.l]==c[y.l]?(c[x.r]==c[y.r]?((c[x.r]&1)?x.d<y.d:x.d>y.d):((c[x.l]&1)?x.r<y.r:x.r>y.r)):((c[x.u]&1)?x.l<y.l:x.l>y.l)):x.u<y.u;\r\n```\r\n\u6a21\u62df\u4e00\u4e0b\u83ab\u961f\u8fc7\u7a0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u4e00\u7aef\u6307\u9488\u8dd1\u5230\u8fb9\u7f18\u540e\u53c8\u4f1a\u8dd1\u56de\u6765\uff0c\u518d\u5f00\u59cb\u5f80\u5916\u8dd1\uff0c\u8fd9\u91cc\u6d6a\u8d39\u4e86\u4e00\u904d\u79fb\u52a8\u6307\u9488\u7684\u8fc7\u7a0b\u3002\r\n\r\n\u90a3\u4e48\u600e\u4e48\u5229\u7528\u4e0a\u8fd9\u4e00\u6bb5\u5462\uff1f\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6307\u9488\u8dd1\u56de\u6765\u7684\u518d\u8dd1\u51fa\u53bb\u7684\u8fd9\u4e00\u6bb5\u8be2\u95ee\u9006\u5e8f\u6392\u5e8f\uff0c\u90a3\u4e48\u518d\u6307\u9488\u5f80\u56de\u8dd1\u65f6\u5c31\u53ef\u4ee5\u987a\u5e26\u5904\u7406\u8fd9\u90e8\u5206\u8be2\u95ee\u4e86\u3002\r\n\r\n\u800c\u8fd9\u4e00\u90e8\u5206\u6070\u597d\u662f\u53e6\u4e00\u7aef\u6307\u9488\u5904\u4e8e\u5076\u6570\u5757\u7684\u65f6\u5019\uff0c\u6545\u6309\u5947\u5076\u5206\u987a\u9006\u5e8f\u5373\u53ef\u3002\r\n\r\n\u52a0\u4e0a\u8fd9\u4e2a\u4f18\u5316\u5c31\u53ef\u4ee5\u8fc7\u4e86\uff0c[\u901a\u8fc7\u8bb0\u5f55](https://www.luogu.com.cn/record/89324370)\u3002\r\n\r\n## \u4ee3\u7801\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nnamespace io {\r\n\tconst int __SIZE = (1 << 21) + 1;\r\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\r\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\r\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\r\n\tinline void gc (char &x) { x = Gc(); }\r\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\r\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\r\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\r\n\t\tfor(; __c > 31 && __c < 127 && __c != ' ' && __c != '\\n' && __c != '\\r'; ++s, __c = Gc()) *s = __c; *s = 0; }\r\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\r\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\r\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\r\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\r\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\r\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\r\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\r\nint n,m,b[250001],ans[60001],p[501][501];\r\nint cl,c[501],s[250001],sum[501],ccl,cc[250001];\r\nstruct xw\r\n{\r\n\tint u,l,d,r,h,id;\r\n}q[60001];\r\ninline bool cmp(xw x,xw y){return c[x.u]==c[y.u]?(c[x.l]==c[y.l]?(c[x.r]==c[y.r]?((c[x.r]&1)?x.d<y.d:x.d>y.d):((c[x.l]&1)?x.r<y.r:x.r>y.r)):((c[x.u]&1)?x.l<y.l:x.l>y.l)):x.u<y.u;}\r\ninline int Q(register int x)\r\n{\r\n\tint pos=1,cnt=0;\r\n\twhile(cnt+sum[pos]<x&&pos<=cc[n*n])cnt+=sum[pos],++pos;\r\n\tpos=(pos-1)*ccl+1;\r\n\twhile(cnt+s[pos]<x&&pos<=n*n)cnt+=s[pos],++pos;\r\n\treturn b[pos];\r\n}\r\nint main()\r\n{\r\n\tregister int uu=1,dd=1,ll=1,rr=1;\r\n\tgi(n);\r\n\tgi(m);\r\n\tcl=n/pow(m,0.25)/3+1;\r\n\tccl=n+1;\r\n\tfor(register int i=1;i<=n;++i)c[i]=(i-1)/cl+1;\r\n\tfor(register int i=1;i<=n*n;++i)cc[i]=(i-1)/ccl+1;\r\n\tfor(register int i=1;i<=n;++i)\r\n\t{\r\n\t\tfor(register int j=1;j<=n;++j)\r\n\t\t{\r\n\t\t\tgi(p[i][j]);\r\n\t\t\tb[++b[0]]=p[i][j];\r\n\t\t}\r\n\t}\r\n\tsort(b+1,b+1+b[0]);\r\n\tb[0]=unique(b+1,b+1+b[0])-b-1;\r\n\tfor(register int i=1;i<=n;++i)\r\n\t{\r\n\t\tfor(register int j=1;j<=n;++j)\r\n\t\t{\r\n\t\t\tp[i][j]=lower_bound(b+1,b+1+b[0],p[i][j])-b;\r\n\t\t}\r\n\t}\r\n\tfor(register int i=1;i<=m;++i)gi(q[i].u),gi(q[i].l),gi(q[i].d),gi(q[i].r),gi(q[i].h),q[i].id=i;\r\n\tsort(q+1,q+1+m,cmp);\r\n\t++s[p[1][1]];++sum[cc[p[1][1]]];\r\n\tfor(register int i=1;i<=m;++i)\r\n\t{\r\n\t\twhile(rr<q[i].r)\r\n\t\t{\r\n\t\t\t++rr;\r\n\t\t\tfor(register int i=uu;i<=dd;++i)++s[p[i][rr]],++sum[cc[p[i][rr]]];\r\n\t\t}\r\n\t\twhile(ll>q[i].l)\r\n\t\t{\r\n\t\t\t--ll;\r\n\t\t\tfor(register int i=uu;i<=dd;++i)++s[p[i][ll]],++sum[cc[p[i][ll]]];\r\n\t\t}\r\n\t\twhile(dd<q[i].d)\r\n\t\t{\r\n\t\t\t++dd;\r\n\t\t\tfor(register int i=ll;i<=rr;++i)++s[p[dd][i]],++sum[cc[p[dd][i]]];\r\n\t\t}\r\n\t\twhile(uu>q[i].u)\r\n\t\t{\r\n\t\t\t--uu;\r\n\t\t\tfor(register int i=ll;i<=rr;++i)++s[p[uu][i]],++sum[cc[p[uu][i]]];\r\n\t\t}\r\n\t\twhile(rr>q[i].r)\r\n\t\t{\r\n\t\t\tfor(register int i=uu;i<=dd;++i)--s[p[i][rr]],--sum[cc[p[i][rr]]];\r\n\t\t\t--rr;\r\n\t\t}\r\n\t\twhile(ll<q[i].l)\r\n\t\t{\r\n\t\t\tfor(register int i=uu;i<=dd;++i)--s[p[i][ll]],--sum[cc[p[i][ll]]];\r\n\t\t\t++ll;\r\n\t\t}\r\n\t\twhile(dd>q[i].d)\r\n\t\t{\r\n\t\t\tfor(register int i=ll;i<=rr;++i)--s[p[dd][i]],--sum[cc[p[dd][i]]];\r\n\t\t\t--dd; \r\n\t\t}\r\n\t\twhile(uu<q[i].u)\r\n\t\t{\r\n\t\t\tfor(register int i=ll;i<=rr;++i)--s[p[uu][i]],--sum[cc[p[uu][i]]];\r\n\t\t\t++uu;\r\n\t\t}\r\n\t\tans[q[i].id]=Q(q[i].h);\r\n\t}\r\n\tfor(register int i=1;i<=m;++i)printf(\"%d\\n\",ans[i]);\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1665374397,
        "uid": 416521,
        "name": "NATURAL6",
        "ccfLevel": 7,
        "title": "P1527 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5 \u9898\u89e3"
    },
    {
        "content": "\u6574\u4f53\u4e8c\u5206\u7684\u7ecf\u5178\u4f8b\u9898\n\n\u5bf9\u4e8e\u5355\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u503c\u57df\u6c42\u51fa\u7b54\u6848\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u662f $\\Theta (n^2m\\log n)$ \u7684\n\n\u4e0d\u59a8\u8003\u8651\u5c06\u8fd9\u82e5\u5e72\u4e2a\u8be2\u95ee\u4e00\u8d77\u4e8c\u5206\uff0c\u7edf\u8ba1\u5728 $[l,mid]$ \u7684\u503c\u6709\u591a\u5c11\u4e2a\uff0c\u7136\u540e\u4e0e\u8be2\u95ee\u7684\u6392\u540d $k$ \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c $\\geq k$ \u5219\u9012\u5f52\u5230\u5de6\u533a\u95f4\uff0c\u5426\u5219\u5c06 $k$ \u4fee\u6539\u5e76\u9012\u5f52\u5230\u53f3\u533a\u95f4\n\n\u6709\u70b9\u5361\u5e38\n\n* \u6ce8\u610f\u4e0d\u8981\u76f4\u63a5\u4e8c\u5206\u503c\u57df\uff0c\u53ef\u4ee5\u79bb\u6563\u5316\u540e\u4e8c\u5206\n\n* \u7edf\u8ba1\u77e9\u9635\u4e2d $[l,mid]$ \u7684\u6570\u6709\u591a\u5c11\u4e2a\u65f6\uff0c\u53ef\u4ee5\u7528 $vector$ \u8bb0\u5f55\u4e00\u4e0b\u503c\u4e3a $val$ \u7684\u5750\u6807\u90fd\u6709\u54ea\u4e9b\uff0c\u7136\u540e\u76f4\u63a5\u626b\u5c31\u884c\u4e86\n\n```c++\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int maxn = 3e5 + 50, INF = 0x3f3f3f3f;\n\ninline int read () {\n\tregister int x = 0, w = 1;\n\tregister char ch = getchar ();\n\tfor (; ch < '0' || ch > '9'; ch = getchar ()) if (ch == '-') w = -1;\n\tfor (; ch >= '0' && ch <= '9'; ch = getchar ()) x = x * 10 + ch - '0';\n\treturn x * w;\n}\n\nint n, q, len, c[maxn], a[505][505], tree[505][505], ans[maxn], mp[maxn];\nvector <int> res;\nvector <pair <int, int> > pos[maxn];\n\nstruct Node {\n\tint x1, y1, x2, y2, k;\n} b[maxn];\n\ninline void Insert (register int x, register int y) {\n\tfor (register int i = x; i <= n; i += i & -i) \n\t\tfor (register int j = y; j <= n; j += j & -j) \n\t\t\ttree[i][j] ++;\n}\n\ninline void Delete (register int x, register int y) {\n\tfor (register int i = x; i <= n; i += i & -i) \n\t\tfor (register int j = y; j <= n; j += j & -j) \n\t\t\ttree[i][j] --;\n}\n\ninline int Query (register int x, register int y, register int ans = 0) {\n\tfor (register int i = x; i; i -= i & -i) \n\t\tfor (register int j = y; j; j -= j & -j)\n\t\t\tans += tree[i][j];\n\treturn ans;\n}\n\ninline void Binary (register int l, register int r, vector <int> vec) {\t\n\tif (! vec.size ()) return;\n\tif (l == r) {\n\t\tfor (register int i = 0; i < vec.size (); i ++) ans[vec[i]] = mp[l];\n\t\treturn;\n\t}\n\tregister int mid = (l + r) >> 1;\n\tvector <int> vec0, vec1;\n\tfor (register int x = l; x <= mid; x ++) \n\t\tfor (register int i = 0; i < pos[x].size (); i ++) \n\t\t\tInsert (pos[x][i].first, pos[x][i].second);\t\t\t\n\tfor (register int i = 0; i < vec.size (); i ++) {\n\t\tregister int id = vec[i], x1 = b[id].x1, y1 = b[id].y1, x2 = b[id].x2, y2 = b[id].y2;\n\t\tregister int sum = Query (x2, y2) - Query (x1 - 1, y2) - Query (x2, y1 - 1) + Query (x1 - 1, y1 - 1);\n\t\tif (sum >= b[id].k) vec0.push_back (id);\n\t\telse b[id].k -= sum, vec1.push_back (id);\n\t}\n\tfor (register int x = l; x <= mid; x ++) \n\t\tfor (register int i = 0; i < pos[x].size (); i ++) \n\t\t\tDelete (pos[x][i].first, pos[x][i].second);\t\t\t\n\tBinary (l, mid, vec0), Binary (mid + 1, r, vec1);\n}\n\nint main () {\n\tn = read(), q = read();\n\tfor (register int i = 1; i <= n; i ++) \n\t\tfor (register int j = 1; j <= n; j ++) \n\t\t\ta[i][j] = c[++ len] = read();\n\tsort (c + 1, c + len + 1), len = unique (c + 1, c + len + 1) - c - 1;\n\tfor (register int i = 1; i <= n; i ++) {\n\t\tfor (register int j = 1; j <= n; j ++) {\n\t\t\tregister int res = lower_bound (c + 1, c + len + 1, a[i][j]) - c;\n\t\t\tmp[res] = a[i][j], a[i][j] = res, pos[res].push_back (make_pair (i, j));\n\t\t}\n\t}\n\tfor (register int i = 1; i <= q; i ++) \n\t\tb[i].x1 = read(), b[i].y1 = read(), b[i].x2 = read(), b[i].y2 = read(), b[i].k = read(), res.push_back (i);\n\tBinary (1, len, res);\n\tfor (register int i = 1; i <= q; i ++) printf (\"%d\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1615336787,
        "uid": 335193,
        "name": "Rubyonly",
        "ccfLevel": 8,
        "title": "P1527 [\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5"
    },
    {
        "content": "\u4e00\u9053\u7ec3\u4e60\u6574\u4f53\u4e8c\u5206\u7684\u6bd4\u8f83\u597d\u7684\u9898\n\n\u8fd9\u9053\u9898\u628a\u5e8f\u5217\u67e5\u8be2\u533a\u95f4\u7b2c$k$\u5927\u642c\u5230\u4e86\u77e9\u9635\u4e0a\uff0c\u4f46\u662f\u4ecd\u7136\u6ee1\u8db3\u4e8c\u5206\u6027\u8d28\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u6574\u4f53\u4e8c\u5206\n\n\u800c\u6211\u4eec\u6cbf\u7528\u5e8f\u5217\u4e0a\u7684\u505a\u6cd5\uff0c\u628a\u70b9\u548c\u8be2\u95ee\u90fd\u79bb\u7ebf\u4e0b\u6765\uff0c\u63c9\u5728\u4e00\u8d77\u6574\u4f53\u4e8c\u5206\n\n\u552f\u4e00\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5c31\u662f\u9700\u8981\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\u5427qwq\n\n\u590d\u6742\u5ea6$O(Qlog^3n)$\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nconst int N = 500;\nconst int M = 6e4;\nconst int N2 = 250000;\nconst int INF = 1e9;\nusing namespace std;\nstruct node\n{\n    int x1,y1,x2,y2,k,id;\n}q[M + N2 + 5],q1[M + N2 + 5],q2[M + N2 + 5];\nint n,m,a[N + 5][N + 5],ans[M + 5],c[N + 5][N + 5],cnt;\nint lowbit(int x)\n{\n    return x & (-x);\n}\nvoid add(int x,int y,int s)\n{\n    for (int i = x;i <= n;i += lowbit(i))\n        for (int j = y;j <= n;j += lowbit(j))\n            c[i][j] += s;\n}\nint query(int x,int y)\n{\n    if (!x || !y)\n        return 0;\n    int ans = 0;\n    for (int i = x;i;i -= lowbit(i))\n        for (int j = y;j;j -= lowbit(j))\n            ans += c[i][j];\n    return ans;\n}\nint query_sum(int x1,int y1,int x2,int y2)\n{\n    return query(x2,y2) - query(x1 - 1,y2) - query(x2,y1 - 1) + query(x1 - 1,y1 - 1);\n}\nvoid solve(int l,int r,int L,int R)\n{\n    if (L > R)\n        return;\n    if (l == r)\n    {\n        for (int i = L;i <= R;i++)\n            if (q[i].id)\n                ans[q[i].id] = l;\n        return;\n    }\n    int mid = l + r >> 1,cnt1 = 0,cnt2 = 0;\n    for (int i = L;i <= R;i++)\n        if (q[i].id == 0)\n        {\n            if (q[i].k <= mid)\n            {\n                add(q[i].x1,q[i].y1,1);\n                q1[++cnt1] = q[i];\n            }\n            else\n                q2[++cnt2] = q[i];\n        }\n        else\n        {\n            int x = query_sum(q[i].x1,q[i].y1,q[i].x2,q[i].y2);\n            if (x >= q[i].k)\n                q1[++cnt1] = q[i];\n            else\n            {\n                q[i].k -= x;\n                q2[++cnt2] = q[i];\n            }\n        }\n    for (int i = 1;i <= cnt1;i++)\n        if (q1[i].id == 0)\n            add(q1[i].x1,q1[i].y1,-1);\n    for (int i = L;i <= L + cnt1 - 1;i++)\n        q[i] = q1[i - L + 1];\n    for (int i = L + cnt1;i <= R;i++)\n        q[i] = q2[i - L - cnt1 + 1];\n    solve(l,mid,L,L + cnt1 - 1);\n    solve(mid + 1,r,L + cnt1,R);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for (int i = 1;i <= n;i++)\n        for (int j = 1;j <= n;j++)\n        {\n            scanf(\"%d\",&a[i][j]);\n            q[++cnt] = (node){i,j,0,0,a[i][j],0};\n        }\n    for (int i = 1;i <= m;i++)\n    {\n        cnt++;\n        scanf(\"%d%d%d%d%d\",&q[cnt].x1,&q[cnt].y1,&q[cnt].x2,&q[cnt].y2,&q[cnt].k);\n        q[cnt].id = i;\n    }\n    solve(0,INF,1,cnt);\n    for (int i = 1;i <= m;i++)\n        printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1566477495,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1527 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5\u3011"
    },
    {
        "content": "### \u6574\u4f53\u4e8c\u5206\n\n\u5173\u4e8e\u6574\u4f53\u4e8c\u5206\u7684\u8d44\u6599\u6bd4\u8f83\u5c11,\u8fd9\u91cc\u7b80\u5355\u63d0\u4e00\u4e0b\u601d\u8def\u3002\u5728\u6b64\u65f6,\u5982\u679c $A$ \u4e2a\u4fee\u6539\u5728\u6b64\u4e2a\u67e5\u8be2\u4e4b\u5185,\u90a3\u4e48\u5982\u679c $A$ \u5927\u4e8e\u8fd9\u4e2a\u67e5\u8be2\u7684 $K$,\u90a3\u4e48\u8fd9\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u80af\u5b9a\u5728 $A$ \u91cc\u9762 (\u5728\u5de6\u8fb9),\u5426\u5219\u80af\u5b9a\u4e0d\u5728 $A$ \u91cc\u9762(\u5728\u53f3\u8fb9)\u3002\u8fd9\u6837\u5b50\u6211\u4eec\u5c31\u628a\u8be2\u95ee\u5212\u5206\u5230\u4e86\u5de6\u53f3\u4e24\u8fb9,\u90a3\u4e48\u4fee\u6539\u4e5f\u6309\u81ea\u5df1\u7684\u6570\u6765\u5212\u5206\u6210\u5de6\u53f3\u4e24\u8fb9\u3002\u5212\u5206\u5230\u4e86\u53f3\u8fb9,\u8981\u8ba9\u8fd9\u4e2a\u67e5\u8be2\u7684 $K$ \u51cf\u53bb $A$ ,\u539f\u56e0\u5c31\u662f\u4f60\u5df2\u7ecf\u5230\u4e86\u53f3\u8fb9,\u4f60\u7684\u7b54\u6848(\u67d0\u4e00\u6b21\u4fee\u6539)\u80af\u5b9a\u4e5f\u5728\u53f3\u8fb9,\u4e0d\u8fc7\u5728\u53f3\u8fb9\u65f6\u5c31\u53d8\u6210\u4e86\u7b2c $K-A$ \u5927\u3002\n\n\n\u7565\u4e11\u3002\n```pascal\nUses math;\n\nvar\n    ans:array[-1..580000] of longint;\n    copy1,copy2,num:array[-1..580000,1..6] of longint;\n    tree:array[-1..510,-1..510] of longint;\n    i,j,n,m,x1,y1,x2,y2,k,cnt,maxn:longint;\n\nfunction lowbit(x:longint):longint; begin exit(x and -x); end;\n\nprocedure Insertx(x,y,k:longint); begin while y<=n do begin inc(tree[x,y],k); inc(y,lowbit(y)); end; end;\n\nprocedure Insert(x,y,k:longint); begin while x<=n do begin Insertx(x,y,k); inc(x,lowbit(x)); end; end;\n\nfunction Sumx(x,y:longint):longint; begin Sumx:=0; while y>0 do begin inc(Sumx,tree[x,y]); dec(y,lowbit(y)); end; end;\n\nfunction Sum(x,y:longint):longint; begin Sum:=0; while x>0 do begin inc(Sum,Sumx(x,y)); dec(x,lowbit(x)); end; end;\n\nfunction Query(x1,y1,x2,y2:longint):longint; begin exit(Sum(x2,y2)-Sum(x1-1,y2)-Sum(x2,y1-1)+Sum(x1-1,y1-1)); end;\n\nprocedure Add(a,b,c,d,e,f:longint); begin inc(cnt); num[cnt,1]:=a; num[cnt,2]:=b; num[cnt,3]:=c; num[cnt,4]:=d; num[cnt,5]:=e; num[cnt,6]:=f; end;\n\nprocedure Divid(l,r,left,right:longint);                                                                   \nvar\n    mid,tmp,i,j,i1:longint;\n    tot:array[1..2] of longint;\nbegin\n    if (l>r)or(left>right) then exit;\n    if l=r then\n    begin for i:=left to right do if num[i,6]>0 then ans[num[i,6]]:=l; exit;\n    end;\n    mid:=(l+r) >> 1; tot[1]:=0; tot[2]:=0;\n    for i:=left to right do\n    begin\n        if num[i,6]>0 then\n        begin\n            tmp:=Query(num[i,1],num[i,2],num[i,3],num[i,4]);\n            if tmp>=num[i,5] then begin \n                inc(tot[1]); copy1[tot[1]]:=num[i]; \n            end else begin\n                dec(num[i,5],tmp); inc(tot[2]); copy2[tot[2]]:=num[i]; \n            end;\n        end\n        else\n        begin\n            if num[i,5]<=mid then begin\n                inc(tot[1]); copy1[tot[1]]:=num[i]; Insert(num[i,1],num[i,2],1);\n            end else begin\n                inc(tot[2]); copy2[tot[2]]:=num[i]; \n            end;\n        end;\n    end;\n    for i:=1 to tot[1] do if copy1[i,6]=0 then Insert(copy1[i,1],copy1[i,2],-1);\n    for i:=1 to tot[1] do num[left+i-1]:=copy1[i];\n    for i:=1 to tot[2] do num[left+tot[1]+i-1]:=copy2[i];\n    Divid(l,mid,left,left+tot[1]-1);\n    Divid(mid+1,r,left+tot[1],right);\nend;\n\nbegin\n    read(n,m);\n    for i:=1 to n do for j:=1 to n do begin read(k); maxn:=max(maxn,k); Add(i,j,0,0,k,0); end;\n    for i:=1 to m do begin read(x1,y1,x2,y2,k); Add(x1,y1,x2,y2,k,i); end;\n    Divid(0,maxn+1,1,cnt);\n    for i:=1 to m do writeln(ans[i]);\nend.\n```",
        "postTime": 1537536946,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1527 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5\u3011"
    },
    {
        "content": "\u5177\u4f53\u7684\u67e5\u8be2\u65b9\u6cd5\u697c\u4e0a\u7684\u5927\u4f6c\u4eec\u5199\u7684\u5f88\u6e05\u695a\u4e86\n> \u524d\u4eba\u4e4b\u8ff0\u5907\u77e3,\u7136\u5219\n\n\u6211\u6765\u63d0\u4f9b\u4e00\u79cd\u6811\u72b6\u6570\u7ec4\u7684\u5ef6\u8fdf\u6e05\u7a7a\u65b9\u6cd5,\u53ef\u4ee5\u4e0d\u7528\u6bcf\u6b21\u91cd\u65b0\u6e05\u7a7a\u6811\u72b6\u6570\u7ec4\n\n\u65b9\u6cd5:\n\n\u9700\u8981\u6811\u72b6\u6570\u7ec4\u6bcf\u4e00\u4e2a\u8282\u70b9\u5b58\u4e0a\u4e00\u4e2a\u4e0a\u6b21\u4fee\u6539\u7684\u65f6\u95f4\u6233,\u6bcf\u6b21\u641c\u7d22\u64cd\u4f5c\u524d\u5c06\u65f6\u95f4\u6233tim\u589e\u52a0,\n\n\u7136\u540e\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u548c\u4fee\u6539\u65f6\u5224\u65ad\u5f53\u524d\u8282\u70b9\u65f6\u95f4\u6233\u662f\u5426\u6700\u65b0,\u82e5\u4e0d\u662f\u5219\u8df3\u8fc7/\u6e05\u7a7a,\u662f\u5219\u7edf\u8ba1\u7b54\u6848/\u4fee\u6539\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define re register\n#define il inline\n#define _for(i, a, b) for (re int i = (a); i <= (b); ++i)\nil int read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (!isdigit(c)) (c == '-') && (f = -1), c = getchar();\n    while (isdigit(c)) x = (x << 3) + (x << 1) + c - 48, c = getchar();\n    return x * f;\n}\nil void put(int x) {\n    if (x < 0) x = -x, putchar('-');\n    if (x > 9) put(x / 10);\n    putchar(48 + x % 10);\n}\nint tim = 0;\nconst int S = 505, N = 6e4 + 5;\nstruct P {\n    int x, y, v;\n    il bool operator<(const P& x) const { return v < x.v; }\n} mat[S * S];\nint mcnt;\nstruct Bit {\n    int n, c[S][S], t[S][S]/* \u65f6\u95f4\u6233(\u5ef6\u8fdf\u6e05\u7a7a\u6807\u8bb0) */;\n    il Bit(int _n = 0) : n(_n) { memset(c, 0, sizeof(c)); }//\u6b63\u7ecf\u7684\u6784\u9020\u51fd\u6570,\u6ca1\u9519\u6211\u5c31\u662f\u8981\u7528\u6307\u9488\n    il int low(int x) { return x & (-x); }\n    il void add(int x, int y, int v) {\n        for (re int i = x; i <= n; i += low(i))\n            for (re int j = y; j <= n; j += low(j)) {\n            \tif(t[i][j] != tim)t[i][j] = tim, c[i][j] = 0;//\u5982\u679c\u65f6\u95f4\u6233\u5230\u671f\u5219\u6e05\u7a7a\n            \tc[i][j] += v;\n            }\n    }\n    il int query(int x, int y) {\n        int retl = 0;\n        for (re int i = x; i; i -= low(i))\n            for (re int j = y; j; j -= low(j))\n\t\t\t\tif(t[i][j] == tim) retl += c[i][j];//\u4e0d\u7edf\u8ba1\u5230\u671f\u7684\u65f6\u95f4\u6233\n        return retl;\n    }\n    il int submat(int x1, int y1, int x2, int y2) {\n        int ans = query(x2, y2);\n        ans -= query(x1 - 1, y2) + query(x2, y1 - 1);\n        ans += query(x1 - 1, y1 - 1);\n        return ans;\n    }\n}*bit;\nstruct Op {\n    int x1, x2, y1, y2, o;\n    il void get() {\n        x1 = read(), y1 = read(), x2 = read(), y2 = read(), o = read();\n    }\n} q[N];\nint count(const Op& t) { return bit->submat(t.x1, t.y1, t.x2, t.y2); }\nint id[N], t1[N], t2[N], ans[N], cur[N];\nvoid solv(int l, int r, int L, int R) {\n    if (L > R) return;\n    if (l == r) {\n        _for(i, L, R) ans[id[i]] = mat[l].v;\n        return;\n    }\n    ++tim;\n    int mid = (l + r) >> 1;\n    _for(i, l, mid) bit->add(mat[i].x, mat[i].y, 1);\n    int cnt1 = 0, cnt2 = 0;\n    _for(i, L, R) {\n        int u = id[i], s = cur[u] + count(q[u]);\n        if (s >= q[u].o)\n            t1[++cnt1] = u;\n        else\n            t2[++cnt2] = u, cur[u] = s;\n    }\n    int qcnt = L - 1;\n    _for(i, 1, cnt1) id[++qcnt] = t1[i];\n    _for(i, 1, cnt2) id[++qcnt] = t2[i];\n/*   \u4f60\u539f\u6765\u9700\u8981\u8fd9\u4e00\u53e5: \n    _for(i, l, mid) bit->add(mat[i].x, mat[i].y, -1);\n*/\n    solv(l, mid, L, L + cnt1 - 1);\n    solv(mid + 1, r, L + cnt1, R);\n}\nint main() {\n    int N, Q;\n    bit = new Bit(N = read()), Q = read();\n    _for(i, 1, N) _for(j, 1, N) mat[++mcnt] = {i, j, read()};\n    sort(mat + 1, mat + mcnt + 1);\n    _for(i, 1, Q) q[i].get(), id[i] = i;\n    solv(1, mcnt, 1, Q);\n    _for(i, 1, Q) put(ans[i]), putchar('\\n');\n    return 0;\n}\n```",
        "postTime": 1604496648,
        "uid": 237496,
        "name": "__OwO__",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1527 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5\u3011"
    },
    {
        "content": "\u8003\u8651\u5982\u4f55\u505a\u533a\u95f4\u7684\u7b2c k \u5927\uff0cLuogu \u6709\u4e3b\u5e2d\u6811\u7684\u677f\u5b50\uff0c\u4f46\u662f\u4e0d\u5f3a\u5236\u5728\u7ebf\u7167\u6837\u53ef\u4ee5\u7528\u6574\u4f53\u4e8c\u5206\u8fc7\u6389\u3002\n\n\u6211\u4eec\u5c06\u524d x \u5c0f\u7684\u6570\u63d2\u5165\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u518d\u67e5\u8be2\u6240\u6709\u8be2\u95ee\u533a\u95f4\u662f\u5426\u6ee1\u8db3\u533a\u95f4\u5185\u6709 k \u4e2a\u5143\u7d20\uff0c\u4ee5\u6b64\u4e3a\u4f9d\u636e\u6574\u4f53\u4e8c\u5206\u3002\n\n\u8fd9\u91cc\u53ea\u9700\u8981\u5c06\u5e8f\u5217\u4e0a\u7684\u6811\u72b6\u6570\u7ec4\u53d8\u6210\u5e73\u9762\u4e0a\u7684\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u3002\n\n\u6709\u4e00\u4e9b\u9898\u89e3\u4e2d\u7684\u505a\u6cd5\u662f\u4e0d\u5c3d\u4f18\u79c0\u7684\uff0c\u6bcf\u6b21\u4ece l \u5230 mid \u63d2\u5165\u5176\u95f4\u7684\u5143\u7d20\u3002\u5176\u5b9e\u53ef\u4ee5\u7528\u4e00\u4e2a\u7c7b\u4f3c\u6307\u9488\u7684\u4e1c\u897f\uff0c\u968f\u7740 mid \u70b9\u7684\u79fb\u52a8\u800c\u79fb\u52a8\uff0c\u80fd\u591f\u5728\u4fee\u6539\u4e0a\u82b1\u8d39\u66f4\u5c11\u7684\u65f6\u95f4\u3002\n\n\u63d0\u4f9b\u4e00\u4efd\u6807\u51c6\u5316\u7684\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0b\u6574\u4f53\u4e8c\u5206\u6a21\u677f\uff0c\u504f\u957f\u3002\n\n```cpp\ntypedef long long readtype;\n\n/* Header {{{ */\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long var;\ntypedef long double let;\n\nreadtype read() {\n  readtype a = 0, c = getchar(), s = 0;\n  while (!isdigit(c)) s |= c == '-', c = getchar();\n  while (isdigit(c)) a = a * 10 + c - 48, c = getchar();\n  return s ? -a : a;\n}\n/* }}} */\n\nconst int N = 501 + 24;\nconst int Q = 6e4 + 24;\n\nclass TreeArray {\n  private:\n    class InsideTreeArray {\n      private:\n        int val[N];\n        int Query(int p);\n      public:\n        void Modify(int p, int v);\n        int Query(int l, int r);\n    };\n\n    InsideTreeArray val[N];\n\n    int Query(int px, int pyl, int pyr);\n\n  public:\n    void Modify(int px, int py, int v);\n    int Query(int lx, int rx, int ly, int ry);\n};\n\nclass TpModify {\n  public:\n    int x, y, v;\n};\n\nclass TpQuery {\n  public:\n    int x1, y1, x2, y2, k;\n    void Read() {\n      x1 = read(), y1 = read(), x2 = read(), y2 = read(), k = read();\n    }\n};\n\nint n, m, q;\nint v[N][N];\nTpQuery query[Q];\nTpModify modify[N * N];\n\nTreeArray arr;\nint ct, id[Q], tmp[Q];\nint res[Q];\n\nvoid Solve();\nvoid Solve(int cl, int cr, int ql, int qr);\nvoid Modify(int t, int v);\nbool Check(int t);\n\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"2738.in\", \"r\", stdin);\n  freopen(\"2738.out\", \"w\", stdout);\n#endif\n  n = read(), q = read();\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= n; ++j) {\n      v[i][j] = read();\n      modify[++m] = (TpModify) {i, j, v[i][j]};\n    }\n  }\n  for (int i = 1; i <= q; ++i) query[i].Read();\n\n  sort(modify + 1, modify + m + 1, [=] (TpModify a, TpModify b) {\n      return a.v < b.v;\n      });\n\n  Solve();\n  \n  for (int i = 1; i <= q; ++i) \n    printf(\"%d\\n\", modify[res[i]].v);\n\n  return 0;\n}\n\nint TreeArray::InsideTreeArray::Query(int p) {\n  int res = 0;\n  for (int i = p; i; i -= i & -i) res += val[i];\n  return res;\n}\n\nvoid TreeArray::InsideTreeArray::Modify(int p, int v) {\n  for (int i = p; i <= n; i += i & -i) val[i] += v;\n}\n\nint TreeArray::InsideTreeArray::Query(int l, int r) {\n  return Query(r) - Query(l - 1);\n}\n\nint TreeArray::Query(int px, int pyl, int pyr) {\n  int res = 0;\n  for (int i = px; i; i -= i & -i) res += val[i].Query(pyl, pyr);\n  return res;\n}\n\nvoid TreeArray::Modify(int px, int py, int v) {\n  for (int i = px; i <= n; i += i & -i)\n    val[i].Modify(py, v);\n}\n\nint TreeArray::Query(int lx, int rx, int ly, int ry) {\n  return Query(rx, ly, ry) - Query(lx - 1, ly, ry);\n}\n\nvoid Solve() {\n  ct = 0;\n  for (int i = 1; i <= q; ++i) id[i] = i;\n  Solve(1, m + 1, 1, q);\n}\n\nvoid Solve(int cl, int cr, int ql, int qr) {\n  if (cl > cr || ql > qr) return;\n  int cm = (cl + cr) >> 1;\n  if (cl == cr) {\n    for (int i = ql; i <= qr; ++i) res[id[i]] = cm;\n    return ;\n  }\n\n  while (ct < cm) Modify(++ct, 1);\n  while (ct > cm) Modify(ct--, -1);\n\n  int tl = ql, tr = qr;\n  for (int i = ql; i <= qr; ++i) {\n    if (Check(id[i])) tmp[tl++] = id[i];\n    else tmp[tr--] = id[i];\n  }\n  for (int i = ql; i <= qr; ++i) id[i] = tmp[i];\n\n  Solve(cl, cm, ql, tl - 1), Solve(cm + 1, cr, tl, qr);\n}\n\n\nvoid Modify(int t, int v) {\n  arr.Modify(modify[t].x, modify[t].y, v);\n}\n\nbool Check(int t) {\n  int have = arr.Query(query[t].x1, query[t].x2, query[t].y1, query[t].y2);\n  return have >= query[t].k;\n}\n```",
        "postTime": 1590933729,
        "uid": 20522,
        "name": "ccviolett",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1527 \u3010[\u56fd\u5bb6\u96c6\u8bad\u961f]\u77e9\u9635\u4e58\u6cd5\u3011"
    }
]