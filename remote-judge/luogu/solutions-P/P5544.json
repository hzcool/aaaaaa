[
    {
        "content": "\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $(x,y)$\uff0c\u5148\u8ba1\u7b97\u51fa\u5728\u4e0d\u78b0\u5230\u5efa\u7b51\u7269\u7684\u9650\u5236\u4e0b\u80fd\u53d6\u7684\u6700\u5927\u534a\u5f84\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u534a\u5f84\u5bb9\u6613\u7b97\u51fa\u53ef\u4ee5\u6740\u6b7b\u591a\u5c11\u4e2a\u654c\u4eba\u3002\u8003\u8651\u5bf9\u8fd9\u4e2a $(x,y)$ \u9000\u706b\u3002\n\n\u7136\u540e\u5982\u679c\u76f4\u63a5\u628a\u8fd9\u4e2a\u6740\u6b7b\u654c\u4eba\u4e2a\u6570\u5f53\u4f5c\u53c2\u8003\u7684\u8bdd\uff0c\u8fd9\u662f\u4e2a\u6574\u503c\uff0c\u5bfc\u81f4\u6574\u4e2a\u4e8c\u7ef4\u51fd\u6570\u5f88\u4e0d\u5e73\u6ed1\uff0c\u6a21\u62df\u9000\u706b\u7684\u6548\u679c\u4f1a\u975e\u5e38\u4e0d\u597d\uff08\u5f62\u8c61\u7406\u89e3\u4e00\u4e0b\uff0c\u5730\u56fe\u4e0a\u5927\u91cf\u5145\u65a5\u7740 $0$\uff0c\u5f88\u53ef\u80fd\u8d70\u4e0d\u51fa\u53bb\uff09\u3002\n\n\u6211\u4eec\u8003\u8651\u8bbe\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a\u5b9e\u6570\u7684\u5e73\u6ed1\u7684\u51fd\u6570\uff0c\u80fd\u5bf9\u300c\u5373\u4f7f\u5f53\u524d\u70b9\u6740\u6b7b\u654c\u4eba\u6570\u91cf\u662f $0$\uff0c\u90a3\u4e48\u5b83\u79bb $1$ \u6709\u591a\u8fd1\u300d\u6709\u826f\u597d\u7684\u53c2\u8003\u3002\u300c\u5f53\u524d\u70b9\u5bf9\u5e94\u7684\u6700\u5927\u534a\u5f84\u8fd8\u9700\u518d\u589e\u52a0\u591a\u5c11\u80fd\u78b0\u5230\u7b2c\u4e00\u4e2a\u654c\u4eba\u300d\u662f\u4e00\u4e2a\u597d\u7684\u9009\u62e9\uff0c\u8bbe\u5b83\u4e3a $r_0$\uff0c\u8003\u8651\u5c06\u5b83\u7eb3\u5165\u51fd\u6570\u7684\u7ec4\u6210\u90e8\u5206\u3002\u540c\u65f6\u6740\u6b7b\u654c\u4eba\u6570\u91cf\u53c8\u4e0d\u80fd\u4e0d\u8003\u8651\uff0c\u4e8e\u662f\u8bbe\u8fd9\u6837\u4e00\u4e2a\u4f30\u4ef7\u51fd\u6570 $f(x,y)=-cr_0+cnt$\uff0c\u5176\u4e2d $c$ \u662f\u5f85\u5b9a\u7cfb\u6570\uff0c$cnt$ \u662f\u6740\u6b7b\u654c\u4eba\u6570\u91cf\uff0c\u7528\u8be5\u51fd\u6570\u6765\u9000\u706b\u3002\n\n\u90a3\u4e48\u663e\u7136\u8981\u4e48 $r_0=0$ \u8981\u4e48 $cnt=0$\u3002\u5f53 $cnt=0$ \u7684\u65f6\u5019\uff0c\u751a\u81f3\u53ef\u4ee5\u8bc1\u660e $f$ \u5728\u8fd9\u4e9b\u533a\u57df\u4e0a\u662f\u8fde\u7eed\u7684\uff08\n\n\u53e6\u5916\u770b\u9898\u89e3\u5b66\u5230\u4e86\u65b0\u62db\uff1a\u5728\u9000\u706b\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u5c06\u6bcf\u6b21\u7684\u7b54\u6848\u90fd\u8bb0\u5f55\u4e0b\u6765\u53d6 max\uff0cinstead of \u53ea\u53d6\u6700\u540e\u4e00\u6b21\u3002\u8fd9\u6837\u662f\u4e25\u683c\u4f18\u4e8e\u53ea\u53d6\u6700\u540e\u4e00\u6b21\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u751a\u81f3\u4e0d\u5e26\u6765\u4efb\u4f55\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u7684\u589e\u52a0\u3002\n\n\u7ecf\u8fc7\u8f9b\u82e6\u7684\u5c1d\u8bd5\uff0c\u53d6 $r_0=14.14,T_0=1e12,T_e=10^{-8},\\Delta T=0.9996$ \u6548\u679c\u8f83\u597d\u3002\u8003\u8651\u5230\u51fd\u6570\u6709\u90e8\u5206\u79bb\u6563\u7684\u5b58\u5728\uff0c\u53ef\u4ee5\u5728\u5361\u65f6\u548c\u53ea\u8dd1\u4e00\u6b21\u4e4b\u95f4\u53d6\u4e2a\u5e73\u5747\uff1a\u8dd1\u4e2a\u4e94\u6b21\u4ee5\u5185\u3002\u800c\u4e0a\u8ff0\u53c2\u6570\u53ea\u5141\u8bb8\u8dd1 3 \u6b21\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u968f\u673a\u79cd\u5b50\u7684\u4e8b\u60c5\u4e86\u3002\u53d6 20060617 \u8dd1\u4e24\u904d\u53ea\u6709 #2 #3 \u6ca1 AC\uff0c\u53d6 12 \u8dd1\u4e00\u904d\u8fd9\u4e24\u4e2a\u70b9\u90fd AC \u4e86\uff0c\u4f46\u662f\u53c8\u6709\u5176\u4ed6\u70b9\u6ca1 AC\u3002\u90a3\u5408\u8d77\u6765\u8dd1\u4e09\u904d\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define urd uniform_real_distribution\n#define mp make_pair\n#define X first\n#define Y second\nmt19937 rng(20060617);\nconst double inf=1e12,eps=1e-5;\nconst int N=1010;\nint n,m;double R;\ndouble xx[N],yy[N],r[N];\ndouble p[N],q[N];\nint calc;\ndouble f(double x,double y){\n\tcalc=0;\n\tdouble rad=R;\n\tdouble cnt=0,mn=inf;\n\tfor(int i=1;i<=n;i++){\n\t\tdouble d=sqrt((x-xx[i])*(x-xx[i])+(y-yy[i])*(y-yy[i]));\n\t\trad=min(rad,d-r[i]);\n\t}\n\trad=max(0.,rad);\n\tfor(int i=1;i<=m;i++){\n\t\tdouble d=sqrt((x-p[i])*(x-p[i])+(y-q[i])*(y-q[i]));\n\t\tmn=min(mn,d-rad);\n\t\tcnt+=d<=rad+eps;\n\t\tcalc+=d<=rad+eps;\n\t}\n\treturn -max(0.,mn)*14.14+cnt;\n}\nint ans;\nvoid sim_ann(double st,double ed,double dlt){\n\tdouble x=0,y=0;\n\tdouble res=f(x,y);\n\tfor(double tem=st;tem>=ed;tem*=dlt){\n\t\tdouble nw_x=x+urd<>(-10,10)(rng)*tem;\n\t\tdouble nw_y=y+urd<>(-10,10)(rng)*tem;\n\t\tdouble nw=f(nw_x,nw_y);\n\t\tif(nw>res||urd<>(0,1)(rng)<=exp((nw-res)/tem))x=nw_x,y=nw_y,res=nw;\n\t\tans=max(ans,calc);\n//\t\tcout<<tem<<\":\"<<x<<\" \"<<y<<\" \"<<res<<\"!\\n\";\n\t}\n}\nint main(){\n\tcin>>n>>m>>R;\n\tfor(int i=1;i<=n;i++)cin>>xx[i]>>yy[i]>>r[i];\n\tfor(int i=1;i<=m;i++)cin>>p[i]>>q[i];\n\tsim_ann(1e12,1e-8,.9996);\n\tsim_ann(1e12,1e-8,.9996);\n\trng=mt19937(12);\n\tsim_ann(1e12,1e-8,.9996);\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1625672925,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "P5544"
    },
    {
        "content": "\u6a21\u62df\u9000\u706b\n\n\uff08\u591a\u6276\u8001\u5976\u5976\u8fc7\u9a6c\u8def\uff0c\u53ef\u4ee5\u589e\u957f$RP$\u5076\uff09\n\n\u6a21\u62df\u9000\u706b\u4e3b\u8981\u662f\u6c42\u6700\u4f18\u89e3\u7684\u4e00\u79cd\u65b9\u6cd5\n\n> \u6a21\u62df\u9000\u706b\u7b97\u6cd5\u6765\u6e90\u4e8e\u56fa\u4f53\u9000\u706b\u539f\u7406\uff0c\u662f\u4e00\u79cd\u57fa\u4e8e\u6982\u7387\u7684\u7b97\u6cd5\uff0c\u5c06\u56fa\u4f53\u52a0\u6e29\u81f3\u5145\u5206\u9ad8\uff0c\u518d\u8ba9\u5176\u5f90\u5f90\u51b7\u5374\uff0c\u52a0\u6e29\u65f6\uff0c\u56fa\u4f53\u5185\u90e8\u7c92\u5b50\u968f\u6e29\u5347\u53d8\u4e3a\u65e0\u5e8f\u72b6\uff0c\u5185\u80fd\u589e\u5927\uff0c\u800c\u5f90\u5f90\u51b7\u5374\u65f6\u7c92\u5b50\u6e10\u8d8b\u6709\u5e8f\uff0c\u5728\u6bcf\u4e2a\u6e29\u5ea6\u90fd\u8fbe\u5230\u5e73\u8861\u6001\uff0c\u6700\u540e\u5728\u5e38\u6e29\u65f6\u8fbe\u5230\u57fa\u6001\uff0c\u5185\u80fd\u51cf\u4e3a\u6700\u5c0f\u3002\n\t\t\t\t                    ----\u67d0\u5ea6\u67d0\u79d1\n\n![monituihuo](https://upload.wikimedia.org/wikipedia/commons/d/d5/Hill_Climbing_with_Simulated_Annealing.gif)\n\n\u8fd9\u662f\u6a21\u62df\u9000\u706b\u7684\u6a21\u62df\u56fe\n\n\u6a21\u62df\u9000\u706b\u5c31\u662f\u5728\u964d\u6e29\u8fc7\u7a0b\u4e2d\u968f\u673a\u65b0\u7684\u7b54\u6848\uff0c\u5e76\u5224\u65ad\u7b54\u6848\u662f\u5426\u66f4\u4f18\uff0c\u5982\u679c\u66f4\u4f18\uff0c\u5c31\u63a5\u53d7\u65b0\u7684\u7ed3\u679c\uff0c\u5426\u5219\u5c31\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u65b0\u7684\u7b54\u6848\n\n\u6e29\u5ea6\u8d8a\u9ad8\uff0c\u89e3\u7684\u53d8\u5316\u91cf\u8d8a\u5927\uff0c\u968f\u7740\u6e29\u5ea6\u7684\u9010\u6e10\u964d\u4f4e\uff0c\u89e3\u7684\u53d8\u5316\u91cf\u4e5f\u6e10\u6e10\u53d8\u5c0f\uff0c\u5e76\u8d8a\u53d1\u96c6\u4e2d\u5728\u6700\u4f18\u89e3\u9644\u8fd1\n\n\u6a21\u62df\u9000\u706b\u5728\u6d1b\u8c37\u65e5\u62a5\u4e0a\u6709\u8be6\u7ec6\u7684\u89e3\u91ca\uff0c\u5982\u679c\u4e0d\u4f1a\u6a21\u62df\u9000\u706b\u53ef\u4ee5\u5148\u53bb\u5eb7\u5eb7\n\n[\u5c31\u662f\u8fd9](https://www.luogu.com.cn/blog/Darth-Che/mu-ni-tui-huo-xue-xi-bi-ji)\n\n\u6211\u4eec\u9996\u5148\u770b\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u6a21\u62df\u9000\u706b\u5c31\u597d\u4e86\n\n\u4f46\u8981\u6ce8\u610f\u4e00\u70b9$exp(- del / temp) * RAND_MAX < rand()$\n\n\u8fd9\u91cc\u662f\u5c0f\u4e8e\uff08\u56e0\u4e3a\u8fd9\u662f\u6c42\u6700\u5927\u503c\uff0c\u5982\u679c\u6c42\u6700\u5c0f\u503c\u5c31\u7528\u5927\u4e8e\u5c31\u597d\u4e86\uff09\n\n\n\u7136\u540e\u5c31\u662f\u6ce8\u610f\u8fd9\u4e2a\u9898\u6c42\u6700\u5927\u503c\u5c31$OK$\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define eps 1e-10//\u770b\u8138\u7684\u4e1c\u897f\n#define xita 0.9972//\u540c\u4e0a\nconst int N = 15, M = 1005;\ndouble n, m, R, sumx, sumy, a[M], b[M], ans, ax, ay;\nstruct node{\n    double x, y, r;\n}s[N];\ndouble dis(double x, double y, double xx, double yy){\n    return sqrt((x - xx) * (x - xx) + (y - yy) * (y - yy));\n}//\u6c42\u8ddd\u79bb\ndouble query(double x, double y){//\u8ba1\u7b97\u7b54\u6848\n    double res = 0, d = R;\n    for(int i = 1; i <= n; i ++){\n        d = min(d, dis(x, y, s[i].x, s[i].y) - s[i].r);\n    }//\u6c42\u70b8\u5f39\u6700\u5927\u7684\u7206\u70b8\u534a\u5f84\n    for(int i = 1; i <= m; i ++){\n        if(dis(x, y, a[i], b[i]) <= d) res ++;\n    }//\u7edf\u8ba1\u80fd\u70b8\u5230\u7684\u50f5\u5c38\n    return res;\n}\nvoid SA(){//\u6a21\u62df\u9000\u706b\n    double ansx = ax, ansy = ay;\n    double temp = 2605;//\u521d\u59cb\u6e29\u5ea6\uff0c\u4e00\u822c\u4e3a2000~3000\u5de6\u53f3\uff08\u81ea\u5df1\u5b9a\uff09\n    while(temp > eps){\n        double xx = ansx + ((rand() << 1) - RAND_MAX) * temp;\n        double yy = ansy + ((rand() << 1) - RAND_MAX) * temp;\n        //rand\uff08\uff09\u4e00\u7ec4\u65b0\u7684\u5750\u6807\n        double nowans = query(xx, yy);//\u5f53\u524d\u7684\u7b54\u6848\n        double del = nowans - ans;//\u6c42\u5dee\u503c\n        if(del > 0){//\u5982\u679c\u66f4\u4f18\uff0c\u5c31\u66f4\u65b0\u7b54\u6848\n            ax = xx; ay = yy;\n            ansx = xx; ansy = yy;\n            ans = nowans;\n        }else{\n            if(exp(- del / temp) * RAND_MAX < rand()){//\u5426\u5219\u5c31\u4ee5\u4e00\u4e2a\u6982\u7387\u63a5\u53d7\u8fd9\u4e2a\u7b54\u6848\uff0c\uff08\u8fd9\u4e2a\u6982\u7387\u7279\u522b\u5c0f\uff09\n                ansx = xx;\n                ansy = yy;\n            }\n        }\n        temp *= xita;//\u964d\u6e29\n    }\n}\nvoid cz(){\n    ax = sumx / m; ay = sumy / m;//\u5f00\u59cb\u6700\u597d\u7528\u5e73\u5747\u503c\u8dd1\n    for(int i = 1; i <= 6; i ++){//\u591a\u8dd1\u51e0\u904d\u6a21\u62df\u9000\u706b\n        SA();\n    }\n}\nint main(){\n    srand(1e9 + 7);//\u968f\u673a\u79cd\u5b50\n    scanf(\"%lf %lf %lf\", &n ,&m, &R);   \n    for(int i = 1; i <= n; i ++){\n        scanf(\"%lf %lf %lf\", &s[i].x, &s[i].y, &s[i].r);\n    }\n    for(int i = 1; i <= m; i ++){\n        scanf(\"%lf %lf\", &a[i], &b[i]);        \n        sumx += a[i]; sumy += b[i];//\u6c42\u603b\u548c\n    }\n    cz();\n    printf(\"%.0lf\\n\", ans);//\u8f93\u51fa\uff0c\u7b54\u6848\u8981\u6c42\u4e3a\u6574\u6570\uff0c\u6211\u5b9a\u4e49\u7684double\uff0c\u6240\u4ee5\u76f4\u63a5\u4fdd\u75590\u4f4d\u5c0f\u6570\u5c31\u597d\u4e86\n    return 0;\n}\n```\n\n\u5e0c\u671b\u6b64\u7bc7\u9898\u89e3\u80fd\u591f\u5bf9\u60a8\u8d77\u5230\u5e2e\u52a9\uff08\u4e0d\u8981\u50cf\u6211\u4e00\u6837\uff0c\u4ea4\u4e86\u597d\u51e0\u5341\u904d\uff09",
        "postTime": 1598658779,
        "uid": 93669,
        "name": "Tethys",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5544 \u3010[JSOI2016]\u70b8\u5f39\u653b\u51fb1\u3011"
    },
    {
        "content": "\n#### \u9898\u76ee\u5927\u610f\n\n- \u5728\u4e00\u4e2a\u5e73\u9762\u5185\u6709\u51e0\u4e2a\u5706\u4ee5\u53ca\u4e00\u4e9b\u70b9\n- \u4f7f\u7528\u4e00\u4e2a\u534a\u5f84\u4e0d\u8d85\u8fc7r\u7684\u5706\uff0c\u5c3d\u53ef\u80fd\u591a\u7684\u8986\u76d6\u5e73\u9762\u4e0a\u7684\u70b9\uff0c\u5e76\u4e14\u4e0d\u4e0e\u522b\u7684\u5706\u91cd\u5408\u3002\n\n\u66b4\u529b\u679a\u4e3e\u663e\u7136\u4e0d\u884c\u3002\u53c8\u6ca1\u6709\u5176\u4ed6\u7684\u505a\u6cd5\uff0c\u56e0\u6b64\u4f7f\u7528\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u3002\n\n------------\n\n\n\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u7684\u6d41\u7a0b\u5927\u81f4\u5c31\u662f\uff1a\u9009\u53d6\u4e00\u4e2a\u89e3\u4f5c\u4e3a\u521d\u59cb\u89e3\u5e76\u8bbe\u5b9a\u4e00\u4e2a\u521d\u59cb\u6e29\u5ea6\uff0c\u7136\u540e\u6839\u636e\u6e29\u5ea6\u9ad8\u5e95\u63a7\u5236\u6ce2\u52a8\u8303\u56f4\uff0c\u5728\u6ce2\u52a8\u8303\u56f4\u5185\u968f\u5373\u751f\u6210\u65b0\u7684\u89e3\u5e76\u8ba1\u7b97\u80fd\u91cf\u5dee\uff0c\u5982\u679c\u8fd9\u4e2a\u89e3\u66f4\u4f18\u90a3\u4e48\u5f53\u7136\u9009\u62e9\u63a5\u53d7\uff0c\u5426\u5219\u4ee5$e^{\\frac{\u0394E}{T}}$\u7684\u6982\u7387\u63a5\u53d7\u8fd9\u4e2a\u89e3\uff0c\u6bcf\u6b21\u751f\u6210\u65b0\u89e3\u4e4b\u540e\u628a\u6e29\u5ea6\u964d\u4f4e\u4e00\u70b9\u3002\u56e0\u6b64\u6a21\u62df\u9000\u706b\u4e2d\u627e\u5230\u7684\u89e3\u968f\u7740\u6e29\u5ea6\u964d\u4f4e\u7a33\u5b9a\u4e0b\u6765\uff0c\u6700\u7ec8\u6709\u5f88\u5927\u6982\u7387\u627e\u5230\u6700\u4f18\u89e3\uff0c\u5e76\u4e14\u6bd4\u8f83\u5feb\u5c31\u80fd\u8fd0\u884c\u5b8c\u3002\n\n\u5982\u679c\u8fd8\u4e0d\u6e05\u695a\u7684\u8bdd\u5148\u53bb\u505a\u4e00\u4e0b[P1337](https://www.luogu.com.cn/problem/P1337)\u3002\n\n\u7ed3\u6784\u5982\u4e0b\u3002\n```cpp\nvoid SA()\n{\n\tdouble t=3000;\n    while(t>=0.00000000001)\n    {\n    \tint now=\u968f\u673a\u751f\u6210\u7684\u65b0\u89e3\n        int d=\u65b0\u89e3\u80fd\u91cf-\u627e\u5230\u7684\u6700\u4f18\u89e3\u7684\u80fd\u91cf\n        if(d\u6bd4\u5f53\u524d\u6700\u4f18\u89e3\u66f4\u4f18)ans=now;\n        else if(exp(-d/t)*RAND_MAX>rand())\n        \tans=now;\n\t\tt*=0.995;\n    }\n}\n```\n\n\u540c\u65f6\uff0c\u6a21\u62df\u9000\u706b\u4e00\u904d\u6709\u53ef\u80fd\u5f97\u5230\u7684\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u6240\u4ee5\u4e00\u822c\u8981\u591a\u8dd1\u51e0\u904d\u6a21\u62df\u9000\u706b\u589e\u52a0\u6b63\u786e\u7387\u3002\n\n------------\n\u7136\u540e\u770b\u8fd9\u9898\u3002\n\n#### \u5b9a\u4e49\n\n\u9996\u5148\uff0c\u8fd9\u9898\u8981\u5b58\u50a8\u6bcf\u4e2a\u5efa\u7b51\u7684\u4f4d\u7f6e\u548c\u654c\u4eba\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\uff0c\u5206\u522b\u5b58\u50a8x\u5750\u6807\u3001y\u5750\u6807\u548c\u534a\u5f84\u3002\u654c\u4eba\u53ef\u4ee5\u89c6\u4e3a\u534a\u5f84\u4e3a0\u7684\u56ed\u3002\n\n\u5b9a\u4e49\u6570\u7ec4building\u4e3a\u5efa\u7b51\u7684\u6570\u7ec4\uff0cdi\u662f\u654c\u4eba\u7684\u6570\u7ec4\u3002\n```cpp\nstruct node{\n    int x,y,r;//x\u5750\u6807\u3001y\u5750\u6807\u4ee5\u53ca\u534a\u5f84\n}building[15],di[10005];//building\u662f\u5efa\u7b51\uff0cdi\u662f\u654c\u4eba\nint n,m,r,xs,ys,ans;//xs,ys\u662f\u521d\u59cb\u89e3\u548c\u6bcf\u6b21\u751f\u6210\u7684\u65b0\u89e3\u7684\u5750\u6807\n```\n\n#### \u8ba1\u7b97\u70b8\u6b7b\u7684\u654c\u4eba\n\n\u8981\u5728\u6ee1\u8db3\u534a\u5f84\u4e0d\u5927\u4e8er\u5e76\u4e14\u4e0d\u70b8\u5230\u5efa\u7b51\u7684\u60c5\u51b5\u4e0b\uff0c\u6c42\u51fa\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u89e3\u6700\u591a\u80fd\u70b8\u6b7b\u51e0\u4e2a\u4eba\u3002\n\n\u663e\u7136\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\uff0c\u534a\u5f84\u8d8a\u5927\u5c31\u8d8a\u4f18\uff0c\u6240\u4ee5\u6b64\u65f6\u534a\u5f84\u53d6**r\u548c\u5230\u6bcf\u4e2a\u5efa\u7b51\u8fb9\u7f18\u7684\u8ddd\u79bb\u4e4b\u95f4\u7684\u6700\u5c0f\u503c**\u3002\u5230\u5efa\u7b51\u7684\u8ddd\u79bb\u5c31\u662f**\u5230\u5efa\u7b51\u7684\u5706\u5fc3\u7684\u8ddd\u79bb\u51cf\u53bb\u5efa\u7b51\u7684\u534a\u5f84**\u3002\n\n\u81f3\u4e8e\u8ba1\u7b97\u8ddd\u79bb\uff0c\u53ef\u4ee5\u770b\u6210\u4ee5\u4e24\u4e2a\u70b9$(x_1,y_1)$\u548c$(x_2,y_2)$\u4e3a\u4e24\u4e2a\u9510\u89d2\u9876\u70b9\u3001\u4e24\u6761\u76f4\u89d2\u8fb9\u5206\u522b\u5e73\u884c\u4e8ex\u8f74\u548cy\u8f74\u7684\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u659c\u8fb9\u8fb9\u957f\u3002\n\n\u56e0\u6b64$(x_1,y_1)$\u548c$(x_2,y_2)$\u7684\u8ddd\u79bb\u4e3a$\\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}$\n\n\u4e0d\u7406\u89e3\uff1f\u5efa\u7acb\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\uff0c\u81ea\u5df1\u753b\u753b\u770b\u3002\n\n```cpp\n//\u91cc\u9762\u7684jljs\u51fd\u6570\u6c42\u51fa\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\uff0c\u8fd9\u91cc\u4e0d\u653e\u4e86\nint js(double x,double y)//\u8ba1\u7b97\u6700\u591a\u80fd\u70b8\u5230\u51e0\u4e2a\n{\n    int i,ans=0;\n    double jl=r;//\u56e0\u4e3a\u70b8\u5f39\u534a\u5f84\u6700\u591ar\uff0c\u6240\u4ee5\u4ecer\u5f00\u59cb\uff0c\u6bcf\u6b21\u8ba1\u7b97\u5230\u6bcf\u4e2a\u5efa\u7b51\u8fb9\u7f18\u7684\u8ddd\u79bb\u5e76\u9009\u53d6\u66f4\u5c0f\u7684\u4e00\u4e2a\n    for(int i=1;i<=n;i++)//\u8ba1\u7b97\u51fa\u6700\u5927\u7684\u534a\u5f84\uff0c\u7b49\u4e8e\u5230\u6bcf\u4e2a\u5efa\u7b51\u8fb9\u7f18\u7684\u6700\u5c0f\u503c\n    {\n        double jlt=jljs(building[i].x,building[i].y,x,y)-building[i].r;//\u5230\u5854\u7684\u8ddd\u79bb\u51cf\u53bb\u5854\u7684\u534a\u5f84\n        if(jlt<0)return 0;//\u70b8\u5f39\u4e0d\u80fd\u6254\u5728\u5854\u4e0a\n        if(jl>jlt)jl=jlt;//\u627e\u5230\u6700\u5927\u7684\u4e0d\u70b8\u5230\u5854\u7684\u534a\u5f84\n    }\n    for(int i=1;i<=m;i++)//\u8ba1\u7b97\u80fd\u70b8\u5230\u51e0\u4e2a\n        if(jljs(di[i].x,di[i].y,x,y)<=jl)//\u5982\u679c\u5230\u654c\u4eba\u7684\u8ddd\u79bb\u5c0f\u4e8e\u6c42\u51fa\u7684\u6700\u5927\u534a\u5f84\n            ans++;//\u90a3\u4e48\u53ef\u4ee5\u70b8\u6b7b\n    return ans;\n}\n```\n\n#### \u6a21\u62df\u9000\u706b\u8fc7\u7a0b\n\n\u76f4\u63a5\u5957\u4e0a\u6a21\u677f\u5373\u53ef\u3002\n\n\u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u5148\u9884\u5904\u7406\u51fa\u5728\u6bcf\u4e2a\u654c\u4eba\u7684\u4e2d\u95f4\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u6a21\u62df\u9000\u706b\uff0c\u591a\u8dd1\u51e0\u904d\u3002\n\n\u8c03\u7528\u5165\u53e3\uff1a\n```cpp\n//\u591a\u8dd1\u51e0\u904d\nvoid solve(){\n\tsa();sa();sa();\n    sa();sa();sa();\n}\n\n//\u4e3b\u51fd\u6570\u4e2d\n    solve();\n```\n\n\n\n------------\n\u6700\u540e\u662fAC\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n//\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\nstruct node\n{\n    int x,y,r;//\u5750\u6807\u3001\u534a\u5f84\n}building[15],di[10005];//\u5206\u522b\u5b58\u50a8\u5854\u548c\u654c\u4eba\nint n,m,r,xs,ys,ans;\n\n//\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\ndouble p(double x)//\u8ba1\u7b97\u5e73\u65b9\n{\n    return x*x;\n}\ndouble jljs(double x,double y,double a,double b)//\u8ba1\u7b97\u8ddd\u79bb\n{\n    return sqrt(p(x-a)+p(y-b));//\u628a\u6a2a\u5750\u6807\u4e4b\u5dee\u548c\u7eb5\u5750\u6807\u4e4b\u5dee\u5206\u522b\u770b\u4f5c\u4e24\u6761\u76f4\u89d2\u8fb9\n}\n\n//\u8ba1\u7b97\u80fd\u70b8\u5230\u51e0\u4e2a\u4eba\nint js(double x,double y)//\u8ba1\u7b97\u6700\u591a\u80fd\u70b8\u5230\u51e0\u4e2a\n{\n    int i,ans=0;\n    double jl=r;\n    for(int i=1;i<=n;i++)\n    {\n        double jlt=jljs(building[i].x,building[i].y,x,y)-building[i].r;//\u5230\u5efa\u7b51\u7684\u8ddd\u79bb\u51cf\u53bb\u5efa\u7b51\u7684\u534a\u5f84\n        if(jlt<0)return 0;//\u70b8\u5f39\u4e0d\u80fd\u6254\u5728\u5efa\u7b51\u4e0a\n        if(jl>jlt)jl=jlt;//\u627e\u5230\u6700\u5927\u7684\u4e0d\u70b8\u5230\u5efa\u7b51\u7684\u534a\u5f84\n    }\n    for(int i=1;i<=m;i++)\n        if(jljs(di[i].x,di[i].y,x,y)<=jl)//\u8ba1\u6570\n            ans++;\n    return ans;\n}\n\n//\u6a21\u62df\u9000\u706b\u8fc7\u7a0b\nvoid sa()\n{\n    double ansx=xs,ansy=ys,nowx,nowy,t=3000;\n    while(t>=0.0000000001)\n    {\n        nowx=xs+((rand()<<1)-RAND_MAX)*t;//\u968f\u673a\u751f\u6210\u65b0x\u5750\u6807\n        nowy=ys+((rand()<<1)-RAND_MAX)*t;//\u968f\u5373\u751f\u6210\u65b0y\u5750\u6807\n        double now=js(nowx,nowy),d=ans-now;//\u8ba1\u7b97\u80fd\u91cf\u5dee\n        if(d<0)//\u5982\u679c\u66f4\u4f18\n            xs=ansx=nowx,ys=ansy=nowy,ans=now;//\u66f4\u65b0\u6700\u4f18\u89e3\n        if(exp(-d/t)<rand())//\u5426\u5219\u4e00\u5b9a\u6982\u7387\u63a5\u53d7\n            ansx=nowx,ansy=nowy;\n        t*=0.995;//\u964d\u6e29\n    }\n}\n\n//\u591a\u8dd1\u51e0\u904d\nvoid solve(){\n    sa();sa();sa();\n    sa();sa();sa();\n}\n\nint main(){\n    srand(time(0));\n    cin>>n>>m>>r;\n    for(int i=1;i<=n;i++)\n        cin>>building[i].x>>building[i].y>>building[i].r;\n    for(int i=1;i<=m;++i)\n    {\n        cin>>di[i].x>>di[i].y;\n        xs+=di[i].x;ys+=di[i].y;\n    }\n    xs/=m;ys/=m;//\u4ece\u654c\u4eba\u4e2d\u95f4\u5f00\u59cb\u70b8\n    solve();\n    cout<<ans;\n    return 0;\n} \n```",
        "postTime": 1599290446,
        "uid": 246979,
        "name": "SalomeJLQ",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5544 \u3010[JSOI2016]\u70b8\u5f39\u653b\u51fb1\u3011"
    },
    {
        "content": "## \u66b4\u529b\u662f\u4e00\u79cd\u4f18\u96c5\n\u5982\u679c\u4f60\u8fd8\u4e0d\u4f1a\u6a21\u62df\u9000\u706b\uff0c\u8bf7\u770b[\u8fd9\u91cc](https://www.luogu.com.cn/blog/Darth-Che/mu-ni-tui-huo-xue-xi-bi-ji)\n\n\u8fd9\u9898\u8981\u6c42\u7684\u662f\u6700\u5927\u503c\uff0c\u6240\u4ee5\u8981\u628a```else if(exp(-Delta/t)*RAND_MAX>rand())```\n\n\u6539\u6210```else if(exp(-Delta/t)*RAND_MAX<rand())```\n\n\u53e6\uff1a\u4e00\u4e2a\u6709\u7528\u7684\u6280\u5de7 ~~\uff08O2\uff09~~\n\n```while((double)clock()/CLOCKS_PER_SEC<=0.8)  SA();```\n\n\u5361\u7740\u65f6\u95f4\u8c03\u53c2\u7684\u5feb\u4e50\uff08\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define _for(i,a,b) for(register int (i)=(a);(i)<=(b);(i)++)\n#define For(i,a,b) for(register int (i)=(a);(i)>=(b);(i)--)\n#define INF 0x7fffffff\n#define il inline\n#define rg register\ninline long long read(){\n    long long num=0;int z=1;char c=getchar();\n    if(c=='-') z=-1;\n    while((c<'0'||c>'9')&&c!='-') c=getchar();\n    if(c=='-') z=-1,c=getchar();\n    while(c>='0'&&c<='9') num=(num<<1)+(num<<3)+(c^48),c=getchar();\n    return z*num;\n}\nil double Fread(){\n    char c=getchar();int flag=1;double ans=0;\n    while((!(c>='0'&&c<='9'))&&c!='-') c=getchar();\n    if(c=='-') flag=-1,c=getchar();\n    while(c>='0'&&c<='9') ans=ans*10+(c^48),c=getchar();\n    if(c=='.'){c=getchar();for(rg int Bit=10;c>='0'&&c<='9';Bit=(Bit<<3)+(Bit<<1)) ans+=(double)(c^48)*1.0/Bit,c=getchar();}\n    return ans*flag;\n}\n#define delta 0.9976\nconst int maxn=5e3+5;\nclass node{\n    public:\n        double x,y;\n}p[maxn],q[maxn];\ndouble r1[maxn];\nint n,m;\ndouble ansx,ansy,ax,ay,ans,t,r;\nil void clear(){\n    ax=ay=0;ans=1e8;\n    return ;\n}\nil double cnt(double x1,double y1,double x2,double y2){\n    return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n}\nil int calculate(double x,double y){\n    int tot=0;\n    double k=r;\n    _for(i,1,n) k=min(k,cnt(x,y,p[i].x,p[i].y)-r1[i]);\n    _for(i,1,m) if(cnt(x,y,q[i].x,q[i].y)<=k) tot++;\n    return tot;\n}\nil void SA(){\n    double x=ansx,y=ansy;\n    t=20060.404;\n    while(t>1e-18){\n        double X=x+((rand()<<1)-RAND_MAX)*t,Y=y+((rand()<<1)-RAND_MAX)*t,now=calculate(X,Y),Delta=now-ans;\n        if(Delta>0) ansx=X,ansy=Y,x=X,y=Y,ans=now;\n        else if(exp(-Delta/t)*RAND_MAX<rand()) x=X,y=Y;\n        t*=delta;\n    }\n    return ;\n}\nil void work(){\n    ansx=ax/m,ansy=ay/m;\n    while((double)clock()/CLOCKS_PER_SEC<=0.8)  SA();\n    return ;\n}\nint main(){\n    srand(114514);\n    n=read(),m=read(),r=Fread();\n    _for(i,1,n) p[i].x=Fread(),p[i].y=Fread(),r1[i]=Fread();\n    _for(i,1,m) q[i].x=Fread(),q[i].y=Fread(),ax+=q[i].x,ay+=q[i].y;\n    work();\n    cout<<round(ans)<<'\\n';\n    return 0;\n}\n```",
        "postTime": 1596030142,
        "uid": 231938,
        "name": "Chanter",
        "ccfLevel": 6,
        "title": "\u9898\u89e3P5544"
    },
    {
        "content": "\n##### upd: \u7ecf\u8fc7\u591a\u6b21\u4fee\u6539\u9000\u706b\u7684\u53c2\u6570\uff0cAC\u7387\u51e0\u4e4e\u80fd\u8fbe\u5230100%\n------------\n\n## \u524d\u8a00\uff1a\n\u6628\u5929\u521a\u521a\u5b66\u4e86\u6a21\u62df\u9000\u706b\uff0c**~~\u5c31\u62ff\u8fd9\u9053\u9898\u8bd5\u4e86\u4e00\u4e0b\u624b~~** \uff0c\u6b63\u597d\u770b\u89c1\u6ca1\u6709\u4eba\u53d1\u9898\u89e3\uff0c\u5c31\u81ea\u5df1\u5199\u4e86\u4e00\u7bc7\n\n------------\n## \u9898\u610f\u5982\u4e0b\uff1a\n\n\u5730\u56fe\u4e0a\u6709\u4e24\u79cd\u5355\u4f4d\uff0c\u5efa\u7b51\u548c\u654c\u4eba\uff0c\u5efa\u7b51\u5360\u636e\u9762\u79ef\u4e3a\u534a\u5f84\u4e0d\u5b9a\u7684\u5706\u5f62\uff0c\u654c\u4eba\u4e3a\u4e00\u4e2a\u70b9\uff0c\u4f60\u53ef\u4ee5\u5728\u5730\u56fe\u4e0a\u4efb\u610f\u4e00\u70b9\u653e\u7f6e\u4e00\u4e2a\u534a\u5f84\u4e0d\u8d85\u8fc7R\uff08\u5df2\u7ed9\u51fa\uff09\u7684\u70b8\u5f39\uff0c\u6c42\u5728\u4e0d\u70b8\u5230\u5efa\u7b51\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u8986\u76d6\u7684\u654c\u4eba\u6570\u76ee\u6700\u5927\u503c\n\n------------\n\n##  \u5206\u6790\uff1a\n \n \u9898\u76ee\u8981\u6c42\u5728\u5e73\u9762\u5185\u4efb\u9009\u4e00\u70b9\uff0c\u7b2c\u4e00\u65f6\u95f4\u5c31\u60f3\u5230\u4e86\u53ef\u4ee5\u7528\u6a21\u62df\u9000\u706b\u4e00\u7c7b\u7684\u968f\u673a\u5316\u7b97\u6cd5\uff0c\u4efb\u610f\u679a\u4e3e\u5e73\u9762\u5185\u4e00\u4e9b\u70b9\uff0c\u8fdb\u884c\u9000\u706b\u65f6\u6c42\u51fa\u5728\u6ee1\u8db3\u4e0d\u70b8\u5230\u5efa\u7b51\u65f6\u70b8\u5f39\u7684\u6700\u5927\u8303\u56f4\uff0c\u6c42\u51fa\u8303\u56f4\u5185\u8986\u76d6\u654c\u4eba\u7684\u6570\u76ee\uff0c\u8fdb\u884c\u66f4\u65b0\n \n###  tips:\n \n1. \u9898\u76ee\u7ed9\u7684\u6570\u636e\u4e3aint\u578b\u6574\u6570\uff0c\u4f46\u8fdb\u884c\u6b27\u5f0f\u8ddd\u79bb\u7684\u8ba1\u7b97\u65f6\uff0c\u8981\u8868\u793a\u4e3adouble\u578b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b58\u5728\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5bb9\u6613\u9020\u6210\u6570\u636e\u6ea2\u51fa\n \n2. \u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u9000\u706b\u7684\u53c2\u6570\u9009\u62e9\u9700\u8981\u4e0d\u65ad\u5c1d\u8bd5 \uff0c\u624b\u7b97\u4e00\u4e0bT\u7684\u4e0a\u4e0b\u754c\uff0c\u5f53T\u8fc7\u5927\u8fc7\u5c0f\u65f6\u90fd\u96be\u4ee5\u627e\u5230\u66f4\u4f18\u89e3\uff0c\u8fd9\u6837\u51cf\u5c0f\u4e86T\u7684\u8303\u56f4\uff0c\u5269\u4e0b\u65f6\u95f4\u53ef\u4ee5\u591aSA\u51e0\u6b21\n\n3. \u5c06\u6539\u52a8\u5750\u6807\u65f6\u7684rand\u5bf9\u4e00\u4e2a\u5408\u9002\u5927\u5c0f\u7684\u6570\u53d6\u6a21,\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u968f\u673a\u7684\u79fb\u52a8\u8fc7\u4e8e\u4e0d\u7a33\u5b9a\n\n------------\n## \u63d0\u4ea4\u8bb0\u5f55\n\n\u6211\u56e0\u4e3a\u5404\u79cd\u539f\u56e0\uff08~~\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u5199\u9519\uff0c\u53c2\u6570\u8c03\u4e0d\u5bf9\uff0c\u9000\u706b\u6761\u4ef6\u5199\u9519~~)\u4ea4\u4e86\u597d\u51e0\u6b21\u624dA\u6389\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zom0uge7.png)\n\n------------\n\n## \u6a21\u62df\u9000\u706b\u5173\u952e\n\u5148\u524d\u7684\u9898\u89e3\u9519\u8bef\u7684\u628a\u6a21\u62df\u9000\u706b\u5199\u6210\u4e86\u722c\u5c71\u7b97\u6cd5\uff0c\u53ef\u80fd\u56e0\u4e3a\u6570\u636e\u7684\u539f\u56e0A\u6389\u4e86\uff0c\u4f46\u662f\u6b63\u786e\u7684\u6a21\u62df\u9000\u706b\u5728\u5224\u65ad\u662f\u5426\u63a5\u53d7\u662fexp\u51fd\u6570\u91cc\u7684\u503c\u662f\u8d1f\u7684\uff0c\u4e58RANDMAX\u65f6\u80af\u5b9a\u4f1a\u4e0d\u63a5\u53d7\uff0c\u6240\u4ee5\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u5982\u4e0b\u7684\u65b9\u6cd5\n\n### \u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u9047\u5230\u6b21\u4f18\u89e3\u5224\u65ad\u662f\u5426\u63a5\u53d7\u65f6\u9664\u4ee5\u6839\u53f7T\uff0c\u56e0\u4e3aT\u7684\u53d8\u5316\u8f83\u5927\uff0c\u8fd9\u6837\u786e\u4fdd\u5728T\u8f83\u5c0f\u65f6\u4e5f\u6709\u53ef\u80fd\u66f4\u65b0\uff0cT\u8f83\u5927\u65f6\u4e5f\u4e0d\u4f1a\u5168\u76d8\u63a5\u53d7\u3002\n\n```cpp\nbool judge(int delta,double tep)//tep\u8868\u793a\u6e29\u5ea6\n\t{\n\t\treturn ( exp(delta/sqrt(tep)) > rand() );\n\t}\n```\n\n------------\n\n\n\n\u8bdd\u4e0d\u591a\u8bf4\u4e0a\u4ee3\u7801\n\n```cpp\n\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nnamespace zzc\n{\n\tconst double dec = 0.995;//\u964d\u6e29\u7cfb\u6570 \n\tconst double esp = 1e-10;\n\tint n,m,r,ans=0;\n\tdouble sumx,sumy; \n\t\n\tstruct build\n\t{\n\t\tint x,y,r;\n\t} b[15];\n\t\n\tstruct human\n\t{\n\t\tint x,y;\n\t} h[1005];\n    \n    double calc(double x1,double y1,double x2,double y2)//\u8ba1\u7b97\u6b27\u6c0f\u8ddd\u79bb \n\t{\n\t     return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n    }\n\t\n\tint check(double x,double y)//\u8ba1\u7b97\u8303\u56f4\u5185\u8986\u76d6\u654c\u4eba\u6570\u76ee \n\t{\n\t\tint sum=0;\n\t\tdouble dis,R=(double)r;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tdis=calc(x,y,b[i].x,b[i].y);\n\t\t\tdis-=(double)b[i].r;\n\t\t\tR=min(R,dis);\n\t\t}\n\t\t\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tdis=calc(x,y,h[i].x,h[i].y);\n\t\t\tif(dis<=R) sum++;\n\t\t}\n\t\treturn sum;\n\t}\n\t\n\t\n\t//\u539f\u5148\u7684\u9898\u89e3\u9519\u5199\u6210\u4e86\u722c\u5c71\u7b97\u6cd5\n\t//\u8fd9\u91cc\u6211\u505a\u4e86\u4e00\u70b9\u4fee\u6539  \n\tbool judge(int delta,double tep)\n\t{\n\t\treturn ( exp(delta/sqrt(tep)) > rand() );\n\t}\n\t\n\tvoid solve()\n\t{\n\t\tdouble tep=1000;//\u521d\u6e29 \n\t\tint tot=0;\n\t\twhile(tep>esp)\n\t\t{\n\t\t\tdouble sx=( rand()*2- RAND_MAX)*tep;//\u968f\u673a\u5316\u79fb\u52a8\u8ddd\u79bb\uff0c\u968f\u7740\u6e29\u5ea6\u964d\u4f4e\u79fb\u52a8\u66f4\u7a33\u5b9a \n\t\t\tdouble sy=( rand()*2- RAND_MAX)*tep;\n\t\t\tint sum=check( sumx+sx ,sumy+sy );\n\t\t\tint delta=sum-tot;\n\t\t\tif(delta>0)//delta\u5927\u4e8e0\u8868\u793a\u65b0\u7684\u89e3\u66f4\u4f18 \n\t\t\t{\n\t\t\t\tsumx+=sx;\n\t\t\t\tsumy+=sy;\n\t\t\t\ttot=sum;\n\t\t\t\tans=max(ans,tot);\n\t\t\t}\n\t\t\telse if(judge(delta,tep))\n\t\t\t{\n\t\t\t\tsumx+=sx;\n\t\t\t\tsumy+=sy;\n\t\t\t\ttot=sum;\n\t\t\t}\n\t\t\ttep*=dec;\n\t\t}\n\t}\n\t\n\tvoid init()\n\t{\n\t\tsumx=0;sumy=0;\n\t\tscanf(\"%d%d%d\",&n,&m,&r);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&b[i].x,&b[i].y,&b[i].r);\n\t\t}\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tscanf(\"%d%d\",&h[i].x,&h[i].y);\n\t\t\tsumx+=h[i].x;\n\t\t\tsumy+=h[i].y;\n\t\t}\n\t\tsumx/=m;\n\t\tsumy/=m;\n\t}\n\t\n\tvoid work()\n\t{\n\t\tsrand((int)time(0));\n\t\tinit();\n\t\tfor(int i=1;i<=6;i++) solve();\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\t\n}\n\nint main()\n{\n\tzzc::work();\n\treturn 0;\n}\n```\n\n\n------------\n\n\n\u5982\u679c\u6709\u95ee\u9898\u6b22\u8fce\u5927\u5bb6\u79c1\u4fe1\u6216\u8005\u8bc4\u8bba\uff0c\u6211\u5c3d\u91cf\u90fd\u53bb\u770b",
        "postTime": 1593508281,
        "uid": 201158,
        "name": "Youth518",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5544 \u3010[JSOI2016]\u70b8\u5f39\u653b\u51fb1\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/14220692.html)\n# \u524d\u8a00\n\u6a21\u62df\u9000\u706b $Simulated$ $Annealing$ \uff0c \u7b80\u79f0 $SA$ \uff0c\u6700\u65e9\u5728 $1953$ \u5e74\u7531 $N. Metropolis$ \u63d0\u51fa\uff0c\u540e\u7ecf\u4f18\u5316\u5f97\u5230\u73b0\u5728\u5e7f\u6cdb\u5e94\u7528\u7684\u7b97\u6cd5\uff0c\u5e94\u7528\u5728\u5f88\u591a\u9886\u57df\u5f53\u4e2d\u3002\n# \u7b97\u6cd5\u601d\u60f3\n\u6a21\u62df\u9000\u706b\u662f\u968f\u673a\u5316\u641c\u7d22\u7684\u4e00\u79cd\uff0c\u82e5\u968f\u673a\u5316\u641c\u7d22\u5199\u5f97\u597d\uff0c\u5219\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u6548\u7387\u548c\u7b54\u6848\u7684\u6b63\u786e\u7387\u9ad8\uff08\u867d\u8bf4\u4e0d\u662f $100\\%$ \uff09\u3002\u5f88\u591a\u65f6\u5019\u5728\u60f3\u4e0d\u51fa\u89e3\u51b3\u529e\u6cd5\uff0c\u6216\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u51fa\u73b0\u6781\u5927\u60c5\u51b5\u65f6\uff0c\u53ef\u4f7f\u7528\u6a21\u62df\u9000\u706b\u3002\u6240\u8bf4\u662f\u6709\u8f83\u5927\u51e0\u7387\u6b63\u786e\uff0c\u4f46\u8fd8\u662f\u6709\u758f\u6f0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u591a\u6b21\u8bd5\u9a8c\u6765\u66f4\u52a0\u63a5\u8fd1\u51c6\u786e\u5730\u6c42\u51fa\u8fd9\u4e2a\u503c\uff08\u8fd8\u662f\u8981\u770b\u8fd0\u6c14\uff09\u3002\n\n\u6a21\u62df\u9000\u706b\uff0c\u987e\u540d\u601d\u4e49\uff0c\u662f\u6a21\u62df\u5de5\u4e1a\u4e0a\u56fa\u4f53\u964d\u6e29\u7684\u8fc7\u7a0b\u3002\u5148\u5c06\u56fa\u4f53\u52a0\u6e29\u5230\u4e00\u5b9a\u7684\u6e29\u5ea6\u540e\uff0c\u5728\u6309\u7167\u9002\u5f53\u7684\u6e29\u5ea6\u8fdb\u884c\u51b7\u5374\uff0c\u51b7\u5374\u5230\u6539\u7269\u4f53\u60f3\u8981\u8fbe\u5230\u7684\u72b6\u6001\u3002\u6e29\u5ea6\u964d\u4f4e\u5730\u8d8a\u6162\uff0c\u5219\u8be5\u7269\u4f53\u7684\u8d28\u91cf\u7ea6\u9ad8\uff0c\u56e0\u4e3a\u5206\u5b50\u5728\u56e0\u70ed\u52a0\u901f\u8fd0\u52a8\u4e2d\u627e\u5230\u4e86\u66f4\u52a0\u5408\u9002\u7684\u4f4d\u7f6e\u3002\u5f53\u6e29\u5ea6\u9010\u6e10\u964d\u4f4e\uff0c\u5206\u5b50\u8fd0\u52a8\u51cf\u7f13\uff0c\u8fbe\u6210\u76ee\u7684\u3002\n\n\u90a3\u4e48\u8fd9\u4e00\u73b0\u8c61\u88ab\u79d1\u5b66\u5bb6\u4e0e\u8ba1\u7b97\u673a\u7b97\u6cd5\u6240\u8054\u7cfb\u8d77\u6765\uff0c\u5c31\u6210\u4e86\u73b0\u5728\u7684\u6a21\u62df\u9000\u706b\u3002\n\n\u7f51\u4e0a\u7684\u4e00\u5f20\u56fe\uff0c\u6a21\u62df\u9000\u706b\u53ef\u89c6\u5316\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210101115242445.gif)\n\n\u6a21\u62df\u9000\u706b\u6709\u51e0\u4e2a\u5f88\u5173\u952e\u7684\u53c2\u6570\uff0c\u8fd9\u51e0\u4e2a\u53c2\u6570\u51b3\u5b9a\u4e86\u6a21\u62df\u9000\u706b\u7684\u4f18\u52a3\u3002\n1. \u968f\u673a\u79cd\u5b50 $seed$ \uff0c\u53ef\u4ee5\u4f7f\u7528 $19260817$ \uff0c\u6216\u662f\u65f6\u95f4\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u5176\u4ed6\u53c2\u6570\uff0c\u5f88\u53ef\u80fd\u4f1a\u964d\u4f4e\u6b63\u786e\u7387\u3002\n2. \u521d\u59cb\u6e29\u5ea6 $TempHigh$ \uff0c\u4e00\u822c\u53d6 $100$ \u81f3 $10000$ \u4e0d\u7b49\uff0c\u4f46\u4f5c\u8005\u66f4\u52a0\u503e\u5411\u4e8e $2000$ \u81f3 $3000$ \u7684\u6570\u5b57\u3002\n3. \u76ee\u6807\u6e29\u5ea6 $TempLow$ \uff0c\u4e00\u822c\u53d6 $1^{-10}$ \u81f3 $1^{-15}$ \u3002\n4. \u6e29\u5ea6\u53d8\u5316\u7387 $TempLess$ \uff0c\u4e00\u822c\u53d6 $0.99$ \u81f3 $0.9999$ \u3002\u5efa\u8bae\u4e0d\u53d6\u592a\u5927\uff0c\u6548\u7387\u4e0d\u9ad8\u3002\n```cpp\n#define Seed 19260817\n#define TempLess 0.9975\n#define TempHigh 2879.0\n#define TempLow 1e-12\n```\n\u6765\u770b\u770b\u964d\u706b\u7684\u4e3b\u4f53\u90e8\u5206\u3002\n```cpp\nvoid SA() {\n\tdouble temp = TempHigh;//\u521d\u59cb\u5316\u6e29\u5ea6\n\t\u5b9a\u4e49\u521d\u59cb\u72b6\u6001;\n\twhile(temp > TempLow) {//\u6253\u5230\u964d\u6e29\u6761\u4ef6\n\t\tdouble nowans = Get_Ans(\u5f53\u524d\u72b6\u6001);//\u66f4\u65b0\u6700\u4f18\u89e3\n\t\tdouble diff = nowans - ans;//\u4e0e\u5f53\u524d\u7b54\u6848\u7684\u5dee\u503c\n\t\tif(diff > 0) {//\u6bd4\u5f53\u524d\u7b54\u6848\u66f4\u4f18\n\t\t\t\u8f6c\u79fb\u72b6\u6001;\n\t\t\tans = nowans;//\u66f4\u65b0\u7b54\u6848\n\t\t}\n\t\telse if(exp(-diff / temp) * RAND_MAX < rand()) {\n//\u63a5\u53d7\u8fd9\u4e2a\u89e3\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5199\u8bf7\u89c1\u4f8b\u9898\u90e8\u5206\n\t\t\t\u8f6c\u79fb\u72b6\u6001;\n\t\t}\n\t\ttemp *= TempLess;//\u964d\u6e29\n\t}\n}\n```\n\u6a21\u62df\u9000\u706b\u67e5\u8be2\u7684\u662f\u591a\u5cf0\u51fd\u6570\u7684\u6700\u503c\u3002\n\n\u4ee5\u4e0b\u66f2\u7ebf\u662f\u89e3\u6790\u5f0f\u4e3a $y=0.05x^3-0.5x^2$ \u7684\u51fd\u6570\u7684\u56fe\u50cf\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210101115952754.png?type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZhY2VfdGhlX0JsYXN0,size_16,color_FFFFFF,t_70)\n\u5148\u6765\u8003\u8651\u8d2a\u5fc3\u7684\u505a\u6cd5\uff1a\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20210101120604550.png?type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZhY2VfdGhlX0JsYXN0,size_16,color_FFFFFF,t_70)\n\u5f53\u5230\u8fbe\u70b9 $A$ \u65f6\uff0c\u7a0b\u5e8f\u4f1a\u9009\u62e9\u66f4\u9ad8\u7684\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u4f1a\u4ece $A$ \u70b9\u5230\u8fbe $B$ \u70b9\uff0c\u800c\u518d\u4ece $B$ \u70b9\u4fef\u77b0\uff0c\u770b\u5230\u4e86\u70b9 $C$ \uff0c\u7531\u4e8e $C$ \u7684\u7eb5\u5750\u6807\u6bd4 $B$ \u5c0f\uff0c\u6240\u4ee5\u70b9 $B$ \u4e0d\u4f1a\u5230\u8fbe\u70b9 $C$ \u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8be5\u7a0b\u5e8f $100\\%$ \u4e0d\u4f1a\u63a5\u53d7\u70b9 $C$ \uff0c\u8fdb\u800c\u66f4\u4e0d\u4f1a\u5230\u8fbe\u70b9 $D$ \u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u65f6\u5019\u627e\u5230\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u5e76\u4e0d\u662f\u5168\u5c40\u6700\u4f18\u89e3\u3002\n\n\u800c\u6a21\u62df\u9000\u706b\u518d\u6b21\u505a\u51fa\u4e86\u6539\u8fdb\u3002\u5047\u8bbe\u521d\u59cb\u4f4d\u7f6e\u5728\u70b9 $A$ \uff0c\u5219\u4f1a\u57fa\u4e8e $A$ \u505a\u51fa\u5de6\u53f3\u6446\u52a8\uff0c\u7ecf\u8fc7\u6570\u6b21\u6446\u52a8\u540e\u5230\u8fbe $B$ \u3002\u518d\u8fdb\u4e00\u6b65\u6446\u52a8\uff0c\u5047\u8bbe\u6446\u52a8\u5230\u4e86 $C$ \u70b9\uff0c\u4f46\u662f $C$ \u7684\u7eb5\u5750\u6807\u6bd4 $B$ \u5c0f\uff0c\u4f1a\u4ee5\u4e00\u5b9a\u51e0\u7387\u4ee5 $C$ \u7684\u7eb5\u5750\u6807\u6765\u63a5\u53d7 $C$ \u3002\u8fdb\u800c\u5728\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u6446\u52a8\u5230\u70b9 $D$ \uff0c\u627e\u5230\u66f4\u9ad8\u70b9\u3002\n\n\u7531\u4e8e\u662f\u8be5\u7b97\u6cd5\u968f\u673a\u6027\u8f83\u9ad8\uff0c\u6240\u4ee5\u591a\u8dd1\u51e0\u904d\u8be5\u51fd\u6570\u3002\n\n\u4e0b\u9762\u7ed3\u5408\u4e00\u9053\u4f8b\u9898\u66f4\u52a0\u6df1\u5165\u5730\u63a2\u7a76\uff0c\u9898\u76ee\u94fe\u63a5\u5df2\u5728\u4e0a\u6587\u7ed9\u51fa\u3002\n# \u9898\u610f\n\u6709 $n$ \u4e2a\u5706\uff0c $m$ \u4e2a\u70b9\uff0c\u8bf7\u6c42\u51fa\u4e00\u4e2a\u534a\u5f84\u4e0d\u8d85\u8fc7 $r$ \u7684\u5706\uff0c\u4f7f\u5f97\u4e0e\u8fd9 $n$ \u4e2a\u5706\u6ca1\u6709\u4ea4\u96c6\uff0c\u4e14\u80fd\u591f\u8986\u76d6\u7684\u70b9\u6700\u5927\u3002\n# \u601d\u8def\n\u6b64\u9898\u7684\u7b54\u6848\u5706\u7684\u5706\u5fc3\u5e76\u4e0d\u6ee1\u8db3\u662f\u6574\u6570\uff0c\u4e14\u7531\u6a2a\u7eb5\u5750\u6807\u4e24\u4e2a\u503c\u6765\u5f71\u54cd\uff0c\u5e76\u4e0d\u5177\u6709\u89c4\u5f8b\u3002\u8fd9\u6837\u7684\u95ee\u9898\u901a\u5e38\u4f7f\u7528\u6a21\u62df\u9000\u706b\u6765\u89e3\u51b3\u3002\n```cpp\nvoid SA() {\n\tdouble temp = TempHigh;//\u521d\u59cb\u5316\u6e29\u5ea6\n\t\u5b9a\u4e49\u521d\u59cb\u72b6\u6001;\n\twhile(temp > TempLow) {//\u6253\u5230\u964d\u6e29\u6761\u4ef6\n\t\tdouble nowans = Get_Ans(\u5f53\u524d\u72b6\u6001);//\u66f4\u65b0\u6700\u4f18\u89e3\n\t\tdouble diff = nowans - ans;//\u4e0e\u5f53\u524d\u7b54\u6848\u7684\u5dee\u503c\n\t\tif(diff > 0) {//\u6bd4\u5f53\u524d\u7b54\u6848\u66f4\u4f18\n\t\t\t\u8f6c\u79fb\u72b6\u6001;\n\t\t\tans = nowans;//\u66f4\u65b0\u7b54\u6848\n\t\t}\n\t\telse if(exp(-diff / temp) * RAND_MAX < rand()) {//\u63a5\u53d7\u8fd9\u4e2a\u89e3\n\t\t\t\u8f6c\u79fb\u72b6\u6001;\n\t\t}\n\t\ttemp *= TempLess;//\u964d\u6e29\n\t}\n}\n```\n\u5982\u4e0a\uff0c\u521d\u59cb\u72b6\u6001\u5305\u542b\u4e86\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6b63\u786e\u7387\u4e0e\u6548\u7387\uff0c\u8bbe\u4e3a\u6240\u6709\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u7684\u5e73\u5747\u503c\u3002\n\n$GetAns$ \u51fd\u6570\u4e5f\u5f88\u7b80\u5355\uff0c\u5148\u786e\u5b9a\u534a\u5f84\uff0c\u534a\u5f84\u4e3a\u8fd9\u4e2a\u70b9\u5230\u5404\u4e2a\u5706\u7684\u5207\u7ebf\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\uff0c\u5373\u4e24\u4e2a\u5706\u5fc3\u7684\u8ddd\u79bb\u51cf\u53bb\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8fd9\u4e2a\u5706\u7684\u534a\u5f84\u3002\u540e\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u82e5\u8fd9\u4e2a\u70b9\u88ab\u8986\u76d6\u5219 $res++$ \uff0c\u6700\u540e\u8fd4\u56de $res$ \u3002\n```cpp\ndouble Get_Ans(double x, double y) {\n\tdouble res = 0;\n\tdouble rkill = r;\n\tfor(int i = 1; i <= n; i++)//\u679a\u4e3e\u5706\n\t\trkill = Min(rkill, Dist_Cartesian(XC(i), YC(i), x, y) - RC(i));\n\tfor(int i = 1; i <= m; i++)//\u679a\u4e3e\u70b9\n\t\tif(Dist_Cartesian(XE(i), YE(i), x, y) <= rkill)\n\t\t\tres += 1.0;\n\treturn res;\n}\n```\n\u6709\u4e86 $GetAns$ \u51fd\u6570\uff0c\u4e3b\u9898\u90e8\u5206\u4e5f\u5f88\u5feb\u80fd\u51fa\u6765\u3002\n```cpp\nvoid SA() {\n\tdouble temp = TempHigh, ansx = initx, ansy = inity;//\u964d\u6e29\u524d\u521d\u59cb\u5316\n\twhile(temp > TempLow) {\n\t\tdouble nowx = ansx + ((rand() << 1) - RAND_MAX) * temp;\n\t\tdouble nowy = ansy + ((rand() << 1) - RAND_MAX) * temp;\n\t\tdouble nowans = Get_Ans(nowx, nowy);\n\t\tdouble diff = nowans - ans;\n\t\tif(diff > 0) {\n\t\t\tinitx = nowx;\n\t\t\tinity = nowy;\n\t\t\tansx = nowx;\n\t\t\tansy = nowy;\n\t\t\tans = nowans;\n\t\t}\n\t\telse if(exp(-diff / temp) * RAND_MAX < rand()) {\n\t\t\tansx = nowx;\n\t\t\tansy = nowy;\n\t\t}\n\t\ttemp *= TempLess;\n\t}\n}\n```\n\u9996\u5148\u6765\u770b\u8fd9\u6bb5\u4ee3\u7801\n```cpp\ndouble nowx = ansx + ((rand() << 1) - RAND_MAX) * temp;\ndouble nowy = ansy + ((rand() << 1) - RAND_MAX) * temp;\n```\n\u7531\u7b54\u6848\u5de6\u53f3\u6446\u52a8\uff0c\u751f\u6210\u65b0\u7684\u5f53\u524d\u72b6\u6001 $nowx$ \u548c $nowy$ \uff0c\u6446\u52a8\u5e45\u5ea6\u662f\u968f\u673a\u7684\uff0c\u5e94\u8be5\u662f\u7531\u5206\u5b50\u505a\u65e0\u89c4\u5219\u8fd0\u52a8\u800c\u6765\u3002\u4e58\u4e0a $temp$ \u5f53\u524d\u6e29\u5ea6\u662f\u7531\u5206\u5b50\u5728\u8d8a\u70ed\u7684\u73af\u5883\u4e2d\uff0c\u8fd0\u52a8\u5f97\u8d8a\u5feb\u800c\u5f97\u6765\u3002\n\n\u7d27\u63a5\u7740\u4e24\u884c\u5c31\u662f\u6c42\u51fa\u5f53\u524d\u72b6\u6001\u7684\u7b54\u6848\uff0c\u5728\u6c42\u51fa\u5b83\u4e0e\u5f53\u524d\u6700\u4f18\u89e3\u7684\u5dee\u503c\u3002\n\n\u7b2c\u4e00\u4e2a $if$ \u662f\u5f53\u524d\u8fd9\u4e2a\u5c40\u90e8\u89e3\u5927\u4e8e\u5f53\u524d\u6700\u4f18\u89e3\uff0c\u5219\u7528\u5f53\u524d\u6700\u4f18\u7684\u5c40\u90e8\u89e3\u6765\u66f4\u65b0\u6700\u4f18\u89e3\u3002\n\n\u91cd\u70b9\u662f\u4e0b\u4e00\u4e2a $if$ \uff0c\u8fd9\u884c\u4ee3\u7801\u5c31\u662f\u5b83\u4e0e\u8d2a\u5fc3\u7684\u4e0d\u540c\uff0c\u4ee5\u4e00\u5b9a\u51e0\u7387\u63a5\u53d7\u8fd9\u4e2a\u89e3\uff0c\u5728\u7528\u5b83\u66f4\u65b0\u5f53\u524d\u72b6\u6001\uff0c\u8fdb\u884c\u5de6\u53f3\u6446\u52a8\uff0c\u4ece\u800c\u627e\u5230\u5c40\u90e8\u66f4\u4f18\u89e3\uff0c\u66f4\u52a0\u63a5\u8fd1\u6574\u4f53\u6700\u4f18\u89e3\u3002\u5176\u6761\u4ef6\u7684\u4f18\u8d8a\u6027\u7531 $Metropolis$ \u63a5\u53d7\u51c6\u5219\u7ed9\u51fa\u3002\u4e5f\u5c31\u662f $else$ $if$ \u4e2d\u7684\u6761\u4ef6\uff1a\n```cpp\nexp(-diff / temp) * RAND_MAX < rand()\n```\n\u601d\u8def\u6574\u7406\u5b8c\u4e86\uff0c\u6b64\u9898\u5e76\u6ca1\u6709\u591a\u5c11\u601d\u7ef4\u96be\u5ea6\uff0c\u4f46\u662f\u9700\u8981\u5bf9\u4e0a\u8ff0\u51e0\u4e2a\u53c2\u6570\u8fdb\u884c\u8c03\u6574\uff0c\u53ef\u4ee5\u591a\u603b\u7ed3\u4e00\u4e9b\u6b63\u786e\u7387\u5927\u7684\u53c2\u6570\uff0c\u4ee5\u5907\u4e0b\u6b21\u4f7f\u7528\n# C++\u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#define Min(a, b) ((a) < (b) ? (a) : (b)) \n#define Seed 19260817//\u968f\u673a\u79cd\u5b50\n#define TempLess 0.9975//\u6e29\u5ea6\u53d8\u5316\u7387\n#define TempHigh 2879.0//\u521d\u59cb\u6e29\u5ea6\n#define TempLow 1e-12//\u76ee\u6807\u6e29\u5ea6\nvoid Quick_Read(double &N) {//double\u5feb\u901f\u8bfb\u5165\n\tN = 0.0;\n\tdouble now, wei = 0.1;\n\tbool op = false;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-')\n\t\t\top = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') {\n\t\tN = N * 10.0 + (c ^ 48) * 1.0;\n\t\tc = getchar();\n\t}\n\tif(c == '.') {\n\t\tc = getchar();\n\t\twhile(c >= '0' && c <= '9') {\n\t\t\tN += (c ^ 48) * wei;\n\t\t\twei /= 10.0;\n\t\t\tc = getchar();\n\t\t}\n\t}\n\tif(op)\n\t\tN = -N;\n}\nconst int MAXN = 15;\nconst int MAXM = 1e3 + 5;\nstruct Circle {//\u9898\u76ee\u4e2d\u7684\u5706\n\tdouble Abscissa_C, Ordinate_C, Radius_C;\n\t#define XC(x) buildings[x].Abscissa_C\n\t#define YC(x) buildings[x].Ordinate_C\n\t#define RC(x) buildings[x].Radius_C\n};\nCircle buildings[MAXN];\nstruct Enemy {//\u9898\u76ee\u4e2d\u7684\u70b9\n\tdouble Abscissa_E, Ordinate_E;\n\t#define XE(x) foe[x].Abscissa_E\n\t#define YE(x) foe[x].Ordinate_E\n};\nEnemy foe[MAXM];\ndouble n, m, r;\ndouble initx, inity;//\u8bb0\u5f55\u7b54\u6848\u7684\u6a2a\u7eb5\u5750\u6807\ndouble ans;//\u7b54\u6848\ndouble Dist_Cartesian(double XA, double YA, double XB, double YB) {//\u4e24\u70b9\u95f4\u8ddd\u79bb\u516c\u5f0f\n\tdouble frontx = (XA - XB) * (XA - XB);\n\tdouble fronty = (YA - YB) * (YA - YB);\n\tdouble dist = sqrt(frontx + fronty);\n\treturn dist;\n}\ndouble Get_Ans(double x, double y) {//\u627e\u5230\u5f53\u524d\u72b6\u6001\u7684\u7b54\u6848\n\tdouble res = 0;\n\tdouble rkill = r;\n\tfor(int i = 1; i <= n; i++)//\u6c42\u51fa\u6700\u5927\u534a\u5f84\n\t\trkill = Min(rkill, Dist_Cartesian(XC(i), YC(i), x, y) - RC(i));\n\tfor(int i = 1; i <= m; i++)//\u6c42\u51fa\u88ab\u5706\u8986\u76d6\u7684\u70b9\n\t\tif(Dist_Cartesian(XE(i), YE(i), x, y) <= rkill)\n\t\t\tres += 1.0;\n\treturn res;\n}\nvoid SA() {\n\tdouble temp = TempHigh, ansx = initx, ansy = inity;//\u521d\u59cb\u5316\n\twhile(temp > TempLow) {//\u964d\u6e29\n\t\tdouble nowx = ansx + ((rand() << 1) - RAND_MAX) * temp;//\u5f53\u524d\u72b6\u6001x\n\t\tdouble nowy = ansy + ((rand() << 1) - RAND_MAX) * temp;//\u5f53\u524d\u72b6\u6001y\n\t\tdouble nowans = Get_Ans(nowx, nowy);//\u5f53\u524d\u5c40\u90e8\u7b54\u6848\n\t\tdouble diff = nowans - ans;//\u5f53\u524d\u7b54\u6848\u4e0e\u6700\u4f18\u89e3\u7684\u5dee\u503c\n\t\tif(diff > 0) {//\u6bd4\u5f53\u524d\u6700\u4f18\u89e3\u66f4\u4f18\u5219\u66f4\u65b0\u6700\u4f18\u89e3\n\t\t\tinitx = nowx;\n\t\t\tinity = nowy;\n\t\t\tansx = nowx;\n\t\t\tansy = nowy;\n\t\t\tans = nowans;\n\t\t}\n\t\telse if(exp(-diff / temp) * RAND_MAX < rand()) {\n//\u6309\u7167Metropolis\u63a5\u53d7\u51c6\u5219\u63a5\u53d7\u6539\u72b6\u6001\n\t\t\tansx = nowx;\n\t\t\tansy = nowy;\n\t\t}\n\t\ttemp *= TempLess;//\u964d\u6e29\n\t}\n}\nvoid Cool_Down() {\n\tint frequ = 6;\n\twhile(frequ--)//\u968f\u673a\u5316\u7b97\u6cd5\u5c3d\u91cf\u591a\u8dd1\u51e0\u6b21\n\t\tSA();\n}\nvoid Make_Seed() {//\u751f\u6210\u968f\u673a\u79cd\u5b50\n    srand(Seed);\n}\nvoid Read() {//\u8f93\u5165\n    Quick_Read(n);\n    Quick_Read(m);\n    Quick_Read(r);\n    for(int i = 1; i <= n; i++) {\n    \tQuick_Read(XC(i));\n    \tQuick_Read(YC(i));\n    \tQuick_Read(RC(i));\n\t}\n\tfor(int i = 1; i <= m; i++) {\n\t\tQuick_Read(XE(i));\n\t\tQuick_Read(YE(i));\n\t\tinitx += XE(i);\n\t\tinity += YE(i);\n\t}\n\tinitx /= m;//\u4ee5\u5e73\u5747\u503c\u5f00\u59cb\u63d0\u9ad8\u6548\u7387\u4e0e\u51c6\u786e\u7387\n\tinity /= m;\n}\nvoid Write() {//\u8f93\u51fa\n\tprintf(\"%.0lf\", ans);\n}\nint main() {\n\tMake_Seed();\n\tRead();\n\tCool_Down();\n\tWrite();\n\treturn 0;\n}\n```",
        "postTime": 1609502524,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5544 \u3010[JSOI2016]\u70b8\u5f39\u653b\u51fb1\u3011"
    },
    {
        "content": "~~\u6076\u81ed\u7384\u5b66AC\u7d2b\u9898\u6a21\u62df\u9000\u706b\u796d~~\n\n\u8fd9\u8fd8\u662f\u4e00\u9053\u6734\u7d20\u6a21\u62df\u9000\u706b\uff0c\u63a8\u8350\u548c\u6211\u4e00\u6837\u521a\u5165\u95e8\u7684\u65b0\u624b\u505a\u3002\n\n\u4e3b\u4f53\u8fd8\u662f\u548c\u5176\u4ed6\u9898\u76ee\u5dee\u4e0d\u591a\u7684\u6a21\u62df\u9000\u706b\u6a21\u677f\uff0c\u7cbe\u9ad3\u8fd8\u662f\u8ba1\u7b97\u51fd\u6570\u7684\u90e8\u5206\u3002\n\n### \u8ba1\u7b97\u51fd\u6570\u90e8\u5206\u4e3b\u8981\u601d\u8def\uff1a\n\n\u9996\u5148\uff0c\u6211\u4eec\u5df2\u77e5\u6b64\u65f6\u9700\u8981\u8ba1\u7b97\u7684\u70b9\u3002\n\n\u5176\u6b21\uff0c\u679a\u4e3e\u6240\u6709\u5efa\u7b51\u5e76\u6c42\u51fa\u5efa\u7b51\u4e2d\u5fc3\u5230\u70b8\u5f39\u7684\u8ddd\u79bb\u3002\u6ce8\u610f\uff0c\u6b64\u5904\u8ba1\u7b97\u5b8c\u8ddd\u79bb\u4e4b\u540e\u9700\u8981\u518d\u51cf\u53bb\u5efa\u7b51\u7684\u534a\u5f84 $r_i$ \uff0c\u5426\u5219\u5efa\u7b51\u4f1a\u53d7\u635f\u3002\n\n\u7136\u540e\u5bf9\u6bd4\u6c42\u51fa\u6b64\u6bb5\u8ddd\u79bb\u4e0e\u76ee\u524d\u6700\u4f18\u6216\u8005\u6781\u9650\u503c\uff0c\u53d6\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\uff08\u56e0\u4e3a\u5982\u679c\u53d6\u4e86\u8f83\u5927\u7684\u4f1a\u5bfc\u81f4\u66f4\u8fd1\u7684\u5efa\u7b51\u53d7\u635f\u3002\uff09\n\n\u8ba1\u7b97\u8ddd\u79bb\u7684\u8bdd\uff0c\u54b1\u90fd\u662f\u505a\u7d2b\u9898\u7684\u4eba\u4e86\uff0c~~\u4e0d\u53ef\u80fd\u4e0d\u4f1a\u5427\uff1f~~\n\n### \u5f53\u7136\uff0c\u4e0d\u8981\u5fd8\u8bb0\u53d8\u91cf\u7c7b\u578b\u662f double \uff01\n\uff08\u4f5c\u8005\u56e0\u4e3a\u7c7b\u578b\u6253\u6210 int \u5361\u4e86\u534a\u5929\uff09\n\n\u6a21\u62df\u9000\u706b\u7684\u90e8\u5206\u4e5f\u6709\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n\n\u8fd9\u6b21\u6c42\u7684\u662f\u6700\u5927\u503c\uff0c\u6240\u4ee5\u8bb0\u5f97\u662f $\\Delta T > 0$ \u800c\u975e\u5c0f\u4e8e 0 \u3002\n\n\u6700\u540e\u5c31\u662f\u7384\u5b66\u8c03\u53c2\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c~~\u603b\u4e4b\u5c31\u662f\u591a\u79cd\u6811\u5427\u2026\u2026~~\n\n### Code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\ndouble down=0.997;//\u964d\u6e29\u7cfb\u6570 \ndouble ansx,ansy,ansn,r;\nstruct node{\n\tdouble x,y,r;\n}b[15];\nstruct data{\n\tdouble x,y;\n}p[1005];\nint getans(double x,double y){//\u53ef\u4ee5\u5b9a\u4e49\u6210 int \u662f\u56e0\u4e3a\u654c\u4eba\u90fd\u662f\u6574\u6570\u4e2a\u7684 \n\tint res=0;\n\tdouble f=r;\n\tfor(int i=1;i<=n;i++){\n\t\tdouble xx=b[i].x,yy=b[i].y;//\u53ef\u4ee5\u6362\uff0c\u4f46\u662f\u540e\u4e00\u884c\u4f1a\u957f\u5f88\u591a \n\t\tdouble tot=sqrt((xx-x)*(xx-x)+(yy-y)*(yy-y));//\u8ba1\u7b97\u8ddd\u79bb \n\t\tf=min(f,tot-b[i].r);//\u8ba1\u7b97\u6700\u5c0f\u503c \n\t}\n\tfor(int i=1;i<=m;i++){//\u548c\u4e0a\u4e00\u4e2a\u5faa\u73af\u5dee\u4e0d\u591a \n\t\tdouble xx=p[i].x,yy=p[i].y;\n\t\tdouble tot=sqrt((xx-x)*(xx-x)+(yy-y)*(yy-y));\n\t\tif(tot<=f)res++;//\u5982\u679c\u5728\u70b8\u5f39\u8303\u56f4\u5185\u5c31\u7b97\u88ab\u6d88\u706d\u4e86 \n\t}\n\treturn res;\n}\nvoid sa(){//\u6a21\u62df\u9000\u706b \n\tdouble t=2667;//\u521d\u59cb\u6e29\u5ea6 \n\twhile(t>1e-15){//\u7ec8\u6b62\u6e29\u5ea6 \n\t\tdouble nx=ansx+(rand()*2-RAND_MAX)*t;//\u968f\u673a\u751f\u6210\u4e0b\u4e00\u4e2a\u76ee\u6807\u70b9 \n\t\tdouble ny=ansy+(rand()*2-RAND_MAX)*t;\n\t\tdouble nnum=getans(nx,ny);//\u6c42\u51fd\u6570\u503c \n\t\tdouble f=nnum-ansn;//\u8ba1\u7b97 Delta T \n\t\tif(f>0){//\u627e\u5230\u66f4\u4f18\u89e3 \n\t\t\tansx=nx,ansy=ny;//\u66ff\u6362\u7b54\u6848\u53ca\u5750\u6807 \n\t\t\tansn=nnum;\n\t\t}\n\t\telse if(exp(-f/t)*RAND_MAX<rand()){//\u6309\u6982\u7387\u66f4\u65b0\u7b54\u6848\u5750\u6807 \n\t\t\tansx=nx,ansy=ny;//\u4e0d\u9700\u8981\u66f4\u65b0\u6700\u4f18\u7b54\u6848 \n\t\t}\n\t\tt*=down;//\u964d\u6e29 \n\t}\n}\nint main(){\n\tsrand(114514+1919810);//\u7384\u5b66\u6076\u81ed\u79cd\u5b50 \n\tsrand(rand()+20070606);//\u8fd8\u662f\u7384\u5b66 \n\tsrand(rand());\n\tsrand(rand());\n\tsrand(rand());\n\tcin>>n>>m>>r;\n\tfor(int i=1;i<=n;i++)cin>>b[i].x>>b[i].y>>b[i].r;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>p[i].x>>p[i].y;\n\t\tansx+=p[i].x,ansy+=p[i].y;\n\t}\n\tansx/=m,ansy/=m;//\u6c42\u5e73\u5747\u503c\u903c\u8fd1\u7b54\u6848 \n\tansn=getans(ansx,ansy);//\u6c42\u51fa\u521d\u59cb\u7b54\u6848 \n\tsa();//\u591a\u8dd1\u51e0\u904d\u589e\u52a0\u627e\u5230\u6b63\u786e\u7b54\u6848\u7684\u6982\u7387 \n\tsa();\n\tsa();\n\tsa();\n\tsa();\n\tsa();\n\tsa();\n\tcout<<ansn;//\u76f4\u63a5\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86 \n\treturn 0;\n}\n```\n###### ~~\u6c42\u4e2a\u8d5e\uff08\u67af\u67af~~",
        "postTime": 1607845617,
        "uid": 231725,
        "name": "Creroity",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5544 \u3010[JSOI2016]\u70b8\u5f39\u653b\u51fb1\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n~~\u9898\u610f\u8fd9\u4e48\u660e\u663e\u5c31\u4e0d\u8bf4\u4e86qwq~~\n\n\u9996\u5148\u6700\u503c\uff0c\u800c\u4e14\u4e5f\u60f3\u4e0d\u5230\u5565\u89e3\u6cd5\uff0c\u679c\u65ad $ \\rm SA $\u3002\n\n\u7136\u540e\u662f\u521d\u59cb\u4f4d\u7f6e\u3002\u521d\u59cb\u4f4d\u7f6e\u5c31\u662f $ ((\\sum_{i=1}^m x)/m,(\\sum_{i=1}^m y)/m) $\u3002\n\n\u7136\u540e\u591a\u8dd1\u51e0\u904d $ \\rm SA $ \u5c31\u884c\u4e86qwq\u3002~~\u672c\u4eba\u8dd1\u4e8655\u904d\uff0c\u63d0\u4ea4\u8fc7100\u591a\u904d\uff0c\u867d\u7136\u8bf4Ynoi\u6bd4\u8fd9\u4e2a\u8fd8\u8981\u72e0\u3002~~\n\ncode\uff1a\n```cpp\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#include<iostream>\n#include<cstdlib>\n#include<cmath>\n#include<ctime>\ntypedef double db;\nconst db delta=0.99;\ndb x,y;\nstruct Node{\n\tint x,y,r;\n}a[15],w[1005];\nint n,m,k,r,ans;\ninline db p(const db x){\n\treturn x*x;\n}\ninline db DIS(db x,db y,db a,db b){\n\treturn sqrt(p(x-a)+p(y-b));\n}\nint calc_energy(const register db x,const register db y){\n\tregister int i,ans=0;\n\tregister db Dis=r;\n\tfor(i=1;i<=n;++i){\n\t\tdb dis=DIS(a[i].x,a[i].y,x,y)-a[i].r;\n\t\tif(dis<0)return 0;\n\t\tif(Dis>dis)Dis=dis;\n\t}\n\tfor(i=1;i<=m;++i)if(DIS(w[i].x,w[i].y,x,y)<=Dis)++ans;\n\treturn ans;\n}\nvoid simulate_anneal(){\n\tdb ax=x,ay=y;\n\tfor(register db t=3000;t>1e-16;t*=delta){\n\t\tdb X=x+((rand()<<1)-RAND_MAX)*t,Y=y+((rand()<<1)-RAND_MAX)*t;\n\t\tdb now=calc_energy(X,Y);db Delta=ans-now;\n\t\tif(Delta<0)x=ax=X,y=ay=Y,ans=now;\n\t\tif(exp(-Delta/t)<rand())ax=X,ay=Y;\n\t}\n}\nsigned main(void){\n\tsrand(time(NULL));\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);std::cout.tie(0);\n\tint i;\n\tstd::cin>>n>>m>>r;\n\tfor(i=1;i<=n;++i){\n\t\tstd::cin>>a[i].x>>a[i].y>>a[i].r;\n\t}\n\tfor(i=1;i<=m;++i){\n\t\tstd::cin>>w[i].x>>w[i].y;\n\t\tx+=w[i].x;y+=w[i].y;\n\t}\n\tx/=m;y/=m;\n\tfor(i=1;i<=55;++i)simulate_anneal();\n\tstd::cout<<ans;\n}\n```",
        "postTime": 1596902081,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6a21\u62df\u9000\u706b P5544\u9898\u89e3"
    },
    {
        "content": "\u7ec3\u4e60\u6a21\u62df\u9000\u706b\u7684\u597d\u9898\u3002\n\n\u6a21\u62df\u9000\u706b\u677f\u5b50\u5b66\u4e60\u53ef\u4ee5\u81ea\u5df1\u5de6\u8f6cBFS\uff08Baidu-First-Search\uff09\u3002\n\n\u6309\u7167\u5957\u8def\uff0c\u6211\u4eec\u5148\u968f\u4fbf\u9009\u4e00\u7ec4\u5f00\u59cb\u7684\u7b54\u6848\u5750\u6807\uff0c\u7136\u540e\u6a21\u62df\u9000\u706b\u4e0d\u65ad\u66f4\u65b0\u5373\u53ef\u3002\n\n\u7b97\u5f53\u524d\u7b54\u6848\uff0c\u6211\u4eec\u65e2\u7136\u5df2\u7ecf\u786e\u5b9a\u4e86\u70b8\u5f39\u7684\u4e2d\u5fc3\u70b9\uff0c\u90a3\u4e48\u80af\u5b9a\u4f1a\u8d2a\u5fc3\u4e00\u4e0b\uff0c\u4f7f\u5f97\u5f53\u524d\u70b8\u5f39\u7684\u6ce2\u53ca\u8303\u56f4\u534a\u5f84\u5c3d\u53ef\u80fd\u5927\uff08\u5728\u4e0d\u8bef\u4f24\u5efa\u7b51\u548c\u4e0d\u8d85\u8fc7\u548c\u9898\u76ee\u4e2d\u7684\u9650\u5236 $R$\u7684\u60c5\u51b5\u4e0b\uff09\u3002\n\n\u7b97\u8fd9\u4e2a\u6700\u5927\u534a\u5f84\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5efa\u7b51\uff0c\u7b97\u51fa\u5efa\u7b51\u4e2d\u5fc3\u70b9\u548c\u5f53\u524d\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u518d\u7528\u8fd9\u4e2a\u8ddd\u79bb\u51cf\u53bb\u5efa\u7b51\u7684\u534a\u5f84 $r_i$\uff0c\u548c $R$ \u53d6min\u5373\u53ef\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u8bbe\u5f53\u524d\u70b9\u548c\u7b2c $i$ \u4e2a\u5efa\u7b51\u4e2d\u5fc3\u7684\u8ddd\u79bb\u4e3a $X_i$\uff0c\u5219 $\\min\\{X_i-r_i,R\\}$ \u5c31\u662f\u6700\u5927\u653b\u51fb\u534a\u5f84\u3002\n\n\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u654c\u4eba\uff0c\u770b\u80fd\u653b\u51fb\u5230\u591a\u5c11\u5373\u53ef\u3002\n\n\u6ce8\uff1a\u8fd9\u9898\u6c42\u7684\u662f\u6700\u5927\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4e00\u5b9a\u63a5\u53d7\u7684\u7b54\u6848\u6240\u5bf9\u5e94\u7684\uff08\u5f53\u524d\u7b54\u6848\u51cf\u53bb\u4e0a\u4e00\u6b21\u7b54\u6848\uff09$del$ \u5c0f\u4e8e0\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6b63\u5e38\u6a21\u62df\u9000\u706b\u6c42\u6700\u5c0f\u503c\u7684\n\n```cpp\nif(exp(-del / ts) > (double)rand() / RAND_MAX)ansx = sumx, ansy = sumy, ans1 = ansnow;\n```\n\n\u6539\u6210\n```cpp\nif(exp(-del / ts) < (double)rand() / RAND_MAX)ansx = sumx, ansy = sumy, ans1 = ansnow;\n```\n\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n\u8fd8\u6709\u5c31\u662f\u628a\u5750\u6807\uff0c\u8ddd\u79bb\u7b49\u7b49\u90fd\u8981\u5f00\u6210double\uff0c\u5c3d\u91cf\u591a\u8dd1\u51e0\u904d\u6a21\u62df\u9000\u706b\u52a0\u5927\u5f97\u51fa\u6700\u4f18\u89e3\u7684\u6982\u7387\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define rint register int\nconst int maxn = 5e5;\nconst int INF = 2e9;\nint read(){\n    int x = 0,f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9'){\n        if(ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9'){\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x * f;\n}\nusing namespace std;\nint n, m, r, xb[maxn], yb[maxn], rb[maxn], xe[maxn], ye[maxn], ans;\ndouble delta = 0.996, te = 1e-10;\ndouble ansx, ansy;\nvoid init(){\n\tansx = 0, ansy = 0;\n\tn = read(), m = read(), r = read();\n\tfor(int i = 1; i <= n; i++){xb[i] = read(); yb[i] = read(); rb[i] = read();}\n\tfor(int i = 1; i <= m; i++){xe[i] = read(); ye[i] = read(); ansx += xe[i]; ansy += ye[i];}\n\tansx /= m, ansy /= m;\n}\ndouble loca(double x1, double y1, double x2, double y2){\n\treturn sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n}\nint check(double x, double y){\n\tint anss = 0;\n\tdouble r_ = (double)r;\n\t\n\tfor(int i = 1; i <= n; i++){\n\t\tr_ = min(r_, loca(x, y, xb[i], yb[i]) - (double)rb[i]);\n\t}\n\tfor(int i = 1; i <= m; i++){\n\t\tif(loca(x, y, xe[i], ye[i]) <= r_)anss++; \n\t}\n\treturn anss;\n}\nvoid SA(){\n\tdouble ts = 11451.4;\n\tint ans1 = 0;\n\twhile(ts > te){\n\t\tdouble sumx = ansx + ((rand() << 1) - RAND_MAX) * ts;\n\t\tdouble sumy = ansy + ((rand() << 1) - RAND_MAX) * ts;\n\t\tint ansnow = check(sumx, sumy);\n\t\tint del = ansnow - ans1;\n\t\tif(del > 0)ansx = sumx, ansy = sumy, ans1 = ansnow, ans = max(ansnow, ans);\n\t\telse if(exp(-del / ts) < (double)rand() / RAND_MAX)ansx = sumx, ansy = sumy, ans1 = ansnow;\n\t    ts = ts * delta;\n    }\n}\nvoid solve(){\n    srand(time(0));\n\tinit();\n\tSA();\n\tSA();\n\tSA();\n\tSA();\n\tSA();\n\tSA();//\u591a\u8dd1\u51e0\u904d\n\tcout << ans;\n\treturn;\n}\n\nsigned main(){\n\tsolve();\n}\n```",
        "postTime": 1595310510,
        "uid": 209547,
        "name": "infinities",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5544 \u3010[JSOI2016]\u70b8\u5f39\u653b\u51fb1\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5b83\u7684\u534a\u5f84\u80af\u5b9a\u8981\u53d6\u5230\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8dd1\u6a21\u62df\u9000\u706b\u4e86\u3002\u6bcf\u6b21\u5728\u539f\u7b54\u6848\u7684\u57fa\u7840\u4e0a\u968f\u673a\u4e00\u4e2a\u70b9\uff0c\u968f\u673a\u4e00\u4e2a\u6982\u7387\u6765\u5224\u65ad\u662f\u5426\u8981\u4fdd\u7559\u65b0\u7b54\u6848\u3002\u968f\u7740\u6e29\u5ea6 $T$ \u7684\u51cf\u5c0f\u9010\u6e10\u8d8b\u8fd1\u5230\u5cf0\u503c\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u6bcf\u6b21\u968f\u673a\u4e00\u4e2a\u53d8\u5316\u91cf\uff0c\u5c06\u539f\u4f4d\u7f6e $(x,y)$ \u4f4d\u79fb\u81f3 $(x',y')$\u3002\u8ba1\u7b97\u8fd9\u4e2a\u65b0\u4f4d\u7f6e\u7684\u7b54\u6848\u3002\u5982\u679c\u6bd4\u539f\u7b54\u6848\u4f18\u5c31\u66f4\u65b0\u7b54\u6848\u3002\u5426\u5219\uff0c\u6982\u7387\u5730\u4fdd\u7559\u539f\u7b54\u6848\u6216\u66f4\u65b0\u3002\n\n\u6ce8\u610f\u9898\u76ee\u8981\u6c42\u7684\u662f\u6700\u5927\u503c\uff0c\u5e94\u5199\u6210 `(delta > 0) || (exp(-delta / T) * RAND_MAX < rand())`\u3002\n\ntip:\u4e3a\u63d0\u9ad8\u7b54\u6848\u51c6\u786e\u7387\uff0c\u6700\u521d\u7684\u70b9\u53ef\u9009\u4e3a\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c\uff0c\u4ee5\u51cf\u5c11\u5c1d\u8bd5\u6b21\u6570\u3002\n\n\u611f\u8c22 @\u7a7a\u4e0e\u7075\u4e4b\u767d \u9898\u89e3\u4e2d\u7684\u53c2\u6570\u3002\n\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\nusing namespace std;\nconst int N = 1005;\nint n, m, R;\ntypedef long double ld;\nstruct point { // \u5706\uff0c\u70b9\u53ef\u89c6\u4e3a r=0\n    ld x, y, r;\n} a[N], b[N];\nld ansx, ansy, ans; // \u7b54\u6848\u5750\u6807\u548c\u503c\nld getdis(ld fx, ld fy, ld gx, ld gy) { // \u8ba1\u7b97\u4e24\u70b9\u8ddd\u79bb\n    return sqrt((fx - gx) * (fx - gx) + (fy - gy) * (fy - gy));\n}\nld calc(ld fx, ld fy) { // \u8ba1\u7b97\u7b54\u6848\n    ld d = R, ret = 0;\n    for (int i = 1; i <= n; i++) {\n        d = min(d, getdis(fx, fy, a[i].x, a[i].y) - a[i].r);\n    }\n    for (int i = 1; i <= m; i++) {\n        if (getdis(b[i].x, b[i].y, fx, fy) <= d) ret++;\n    }\n    return ret;\n}\nvoid SA() {\n    for (ld T = 20060, nx, ny; T > 1e-18; T *= 0.9976) {\n        nx = ansx + (rand() * 2 - RAND_MAX) * T,\n        ny = ansy + (rand() * 2 - RAND_MAX) * T;\n        // \u968f\u673a\u6570\u4e3a\u6b63\u6574\u6570\uff0c\u8fd9\u91cc\u8fd9\u6837\u64cd\u4f5c\u4fdd\u8bc1\u53d8\u5316\u91cf\u53ef\u4ee5\u4e3a\u8d1f\u6570\u3002\n        ld delta = calc(nx, ny) - ans;\n        if ((delta > 0) || (exp(-delta / T) * RAND_MAX < rand()))\n            ansx = nx, ansy = ny, ans = ans + delta;\n    }\n}\nint main(void) {\n    srand(114514);\n    scanf(\"%d%d%d\", &n, &m, &R);\n    for (int i = 1, x, y, w; i <= n; i++) {\n        scanf(\"%d%d%d\", &x, &y, &w);\n        a[i] = (point){x, y, w};\n    }\n    for (int i = 1, x, y; i <= m; i++) {\n        scanf(\"%d%d\", &x, &y);\n        b[i] = (point){x, y, 0};\n        ansx += x, ansy += y;\n    }\n    ansx = ansx / m, ansy = ansy / m; // \u521d\u59cb\u5750\u6807\n    ans = calc(ansx, ansy);\n    SA(), SA(), SA(), SA();\n    printf(\"%d\\n\", (int)ans);\n    return 0;\n}\n```",
        "postTime": 1627050252,
        "uid": 255095,
        "name": "PragmaGCC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5544"
    }
]