[
    {
        "content": "### \u53cd\u5411\u5efa\u8fb9 + dfs\n\n\u6309\u9898\u76ee\u6765\u6bcf\u6b21\u8003\u8651\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u70b9\u7f16\u53f7\u6700\u5927\u7684\u70b9\uff0c\u4e0d\u5982\u8003\u8651\u8f83\u5927\u7684\u70b9\u53ef\u4ee5\u53cd\u5411\u5230\u8fbe\u54ea\u4e9b\u70b9\n\n\u5faa\u73af\u4eceN\u52301\uff0c\u5219\u6bcf\u4e2a\u70b9i\u80fd\u8bbf\u95ee\u5230\u7684\u7ed3\u70b9\u7684A\u503c\u90fd\u662fi\n\n\u6bcf\u4e2a\u70b9\u8bbf\u95ee\u4e00\u6b21\uff0c\u8fd9\u4e2aA\u503c\u5c31\u662f\u6700\u4f18\u7684\uff0c\u56e0\u4e3a\u4e4b\u540e\u5982\u679c\u518d\u8bbf\u95ee\u5230\u8fd9\u4e2a\u7ed3\u70b9\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u6ca1\u5f53\u524d\u5927\u4e86\n\n---\n\n\u601d\u8def\u5df2\u7ecf\u5f88\u660e\u6670\u4e86\uff0c\u4ee3\u7801\u5b9e\u73b0\u4e0d\u96be\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n\n#define MAXL 100010\n\nint N, M, A[MAXL];\nvector<int> G[MAXL]; //vector\u5b58\u56fe \n\nvoid dfs(int x, int d) {\n\tif(A[x]) return; //\u8bbf\u95ee\u8fc7 \n\tA[x] = d;\n\tfor(int i=0; i<G[x].size(); i++)\n\t\tdfs(G[x][i], d);\n}\n\nint main() {\n\tint u, v;\n\tscanf(\"%d%d\", &N, &M);\n\tfor(int i=1; i<=M; i++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tG[v].push_back(u); //\u53cd\u5411\u5efa\u8fb9 \n\t}\n\tfor(int i=N; i; i--) dfs(i, i); \n\tfor(int i=1; i<=N; i++) printf(\"%d \", A[i]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1523627095,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "```cpp\n//\u840c\u65b0\u4e0d\u4f1atarjan\u548cdp\n//\u53ea\u4f1adfs\n//\u6709\u591a\u4e2a\u70b9\u5230\u4e00\u4e2a\u70b9\u53ef\u4ee5\u8f6c\u6210\u4e00\u4e2a\u70b9\u5230\u591a\u4e2a\u70b9\n//\u6240\u4ee5\u53ef\u4ee5\u53cd\u5411\u5efa\u8fb9\uff0c\u7136\u540e\u7f16\u53f7\u4ece\u5927\u5230\u5c0fdfs\u3002\n//\u590d\u6742\u5ea6O\uff08n\uff09\uff0c\u6bcf\u4e2a\u70b9\u53ea\u904d\u5386\u4e00\u6b21\n#include<iostream>\n#include<cstdio>\n#define BIG 233333\nusing namespace std;\nint n,m,x,y,tot;\nint maxx[BIG],las[BIG],to[BIG],nxt[BIG];\ninline void add(){\n    scanf(\"%d%d\",&y,&x);\n    nxt[++tot]=las[x];\n    las[x]=tot;\n    to[tot]=y;\n}\ninline void dfs(int now,int st){\n    if(maxx[now])\n        return;\n    maxx[now]=st;\n    for(register int e=las[now];e;e=nxt[e])\n        if(!maxx[to[e]])\n            dfs(to[e],st);\n    return;\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(register int i=1;i<=m;++i)\n        add();\n    for(register int i=n;i;--i)\n        dfs(i,i);\n    for(register int i=1;i<=n;++i)\n        printf(\"%d \",maxx[i]);\n    return 0;\n}\n```",
        "postTime": 1505295048,
        "uid": 45523,
        "name": "Stump",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\n\n```\n\u60f3\u5230\u4e86\u4e24\u79cd\u89e3\u6cd5\n- \u7f29\u70b9 + dfs\n- \u53cd\u7740\u5efa\u56fe + dfs\n```\n\n## 1. \u7f29\u70b9 + $dfs$\n\n#### \u7f29\u70b9\u4e4b\u540e\n- \u5728\u540c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u7684\u70b9\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5728\u7f29\u70b9\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u8054\u901a\u5206\u91cf\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u70b9\n\n- \u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u6240\u6709\u70b9\u80fd\u5230\u8fbe\u7684\u6700\u5927\u7f16\u53f7\u7684\u70b9\u5373\u4e3a\u8fd9\u4e2a\u8054\u901a\u5206\u91cf\u80fd\u5230\u8fbe\u7684\u6700\u5927\u7684\u7f16\u53f7\n\n~~\u90a3\u4e48\u6211\u4e48\u53ef\u4ee5\u5feb\u4e50\u6df1\u641c\u4e86~~\n\nCode_1:\n\n```cpp\n/*\n\u7f29\u70b9 \n\u5728\u7f29\u5b8c\u70b9\u7684\u56fe\u4e0adfs \n*/\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n\n#define maxn 100010\n\nusing namespace std;\n\ninline int read() {\n\tint op = 1, a = 0;\n\tchar c = getchar();\n\tfor (; c < '0' || c > '9'; c = getchar()) if (c == '-') op = -1;\n\tfor (; c >= '0' && c <= '9'; c = getchar()) a = a * 10 + c - '0';\n\treturn op * a;\n}\n\nint n, m;\n\nint cnt;\nint head[maxn];\nstruct Edge {int from, to, nxt;} e[maxn];\n\ninline void add_edge(int u, int v) {\n\tcnt++;\n\te[cnt].to = v;\n\te[cnt].from = u;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nint r;//\u6808\u7684\u53f3\u7aef\u70b9 \nint s[maxn];//\u6570\u7ec4\u6765\u6a21\u62df\u6808 \nint num;//\u4e2a\u6570\nint Time; \nbool vis[maxn];\nint belong[maxn];//\u4e00\u4e2a\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf \nint dfn[maxn], low[maxn];\nint rep[maxn];//\u5b58\u50a8\u7f29\u5b8c\u70b9\u540e\u6bcf\u4e2a\u70b9\u6240\u4ee3\u8868\u7684\u6240\u6709\u70b9\u4e2d\u7f16\u53f7\u6700\u5927\u7684 \n\nvoid Tarjan(int u) {\n\tdfn[u] = low[u] = ++Time;\n\tvis[u] = 1;\n\ts[++r] = u;\n\tint R = r;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (!dfn[v]) {\n\t\t\tTarjan(v);\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t}\n\t\telse if (vis[v]) low[u] = min(low[u], dfn[v]);\n\t}\n\tif (dfn[u] == low[u]) {\n\t\tnum++;\n\t\tfor (int i = R; i <= r; i++) {\n\t\t\tvis[s[i]] = 0;\n\t\t\tbelong[s[i]] = num;\n\t\t\trep[num] = max(rep[num], s[i]);\n\t\t\t//\u8bb0\u5f55\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7f16\u53f7\u6700\u5927\u7684\u70b9\uff08\u7684\u7f16\u53f7\uff09 \n\t\t}\n\t\tr = R - 1;\n\t}\n}\n\n//\u91cd\u65b0\u5efa\u56fe \nvoid rebuild() {\n\tcnt = 0;\n\tmemset(head, 0, sizeof head);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x = e[i].from, y = e[i].to;\n\t\tif (belong[x] == belong[y]) continue;\n\t\tadd_edge(belong[x], belong[y]);\n\t}\n}\n\nint ans[maxn];\n\nvoid dfs(int u) {\n\tif (ans[u]) return;\n\tans[u] = rep[u];\n\t//\u5fc5\u5b9a\u80fd\u5230\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u70b9 \n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tdfs(v);\n\t\tans[u] = max(ans[u], ans[v]);\n\t\t//\u548c\u4e0a\u4e00\u53e5\u7684\u4f4d\u7f6e\u4e0d\u80fd\u98a0\u5012 \n\t}\n}\n\nint main() {\n\tn = read(), m = read();\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x = read(), y = read();\n\t\tadd_edge(x, y);\n\t}\n\tfor (int i = 1; i <= n; i++) if (!dfn[i]) Tarjan(i);\n\trebuild();\n\tfor (int i = 1; i <= num; i++) if (!ans[i]) dfs(i);\n\tfor (int i = 1; i <= n; i++) cout << ans[belong[i]] << ' ';\n\t//\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u90fd\u76f4\u63a5\u8f93\u51fa\u5bf9\u5e94\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u80fd\u5230\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9 \n\treturn 0;\n}\n```\n\n\n~~\u7136\u540e\u8fd9\u4e48\u5199\u88ab\u673a\u623f\u7684$dalao$\u4eec\u8bbd\u523a\u8fbd~~$QwQ$\n\n$\\text {\u4ec0\u4e48\uff1f\u60a8\u4e0d\u662f\u6765\u770b\u8fd9\u4e2a\u5199\u6cd5\u7684\uff1f\\ } $\n\n$\\text {\u522b\u8d70\u3001\u522b\u8d70qwq}$\n\n~~\u6211\u8fd8\u80fd\u63a5\u7740\u53e3\u80e1$qwq$~~\n\n## 2.\u53cd\u7740\u5efa\u56fe\u7684\u5199\u6cd5\n\n### - **\u5982\u679c\u53cd\u7740\u5efa\u56fe\uff0c\u90a3\u4e48\u4e00\u4e2a\u70b9\u80fd\u5230\u7684\u70b9\u4e0d\u5c31\u6210\u4e86\u80fd\u5230\u90a3\u4e2a\u70b9\u7684\u70b9\u5417$qwq$**\n\n\n\n- \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53cd\u7740\u5efa\u8fb9\u7136\u540e\u4ece $n$ \u5f00\u59cb\u5012\u7740\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u4ee5\u4ed6\u4e3a\u7956\u5148\u8fdb\u884c\u641c\u7d22\n- \u5982\u679c\u641c\u5230\u4e86\u4e00\u4e2a\u5df2\u7ecf\u88ab\u5176\u5b83\u70b9\u904d\u5386\u5230\u8fc7\u7684\u70b9\uff0c\u90a3\u4e48\u663e\u7136\u6709\u4e00\u4e2a\u7f16\u53f7\u66f4\u5927\u53ef\u4ee5\u8d70\u5230\u4ed6\uff08\u4ed6\u53ef\u4ee5\u904d\u5386\u5230\u4e00\u4e2a\u6bd4\u5f53\u524d\u7684\u7956\u5148\u7f16\u53f7\u66f4\u5927\u7684\u70b9\uff09\n- \u90a3\u5c31\u4e0d\u7ba1\u5b83\u4e86~~qwq\u53cd\u6b63\u4eba\u5bb6\u4f30\u8ba1\u4e5f\u4e0d\u4f1a\u518d\u7406\u4f60~~\n\n\nCode_2:\n\n```cpp\n#include <vector>\n#include <cstdio>\n#include <iostream>\n\n#define maxn 100010\n\nusing namespace std;\n\ninline int read() {\n\tint op = 1, a = 0;\n\tchar c = getchar();\n\tfor (; c < '0' || c > '9'; c = getchar()) if (c == '-') op = -1;\n\tfor (; c >= '0' && c <= '9'; c = getchar()) a = a * 10 + c - '0';\n\treturn op * a;\n}\n\nint cnt;\nint head[maxn];\nstruct Edge {int to, nxt;} e[maxn];\n\ninline void add_edge(int u, int v) {\n\tcnt++;\n\te[cnt].to = v;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\n\nint n, m;\nint f[maxn];\n\nvoid dfs(int u, int fa) {//fa\u662f\u7956\u5148 \n\tf[u] = fa;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (f[v]) continue;\n\t\t//\u6709\u7f16\u53f7\u66f4\u5927\u7684\u70b9\u53ef\u4ee5\u904d\u5386\u5230\u4ed6 \n\t\tdfs(v, fa);\n\t}\n}\n\nint main() {\n\tn = read(), m = read();\n\tfor (; m; m--) {\n\t\tint x = read(), y = read();\n\t\tadd_edge(y, x);\n\t}\n\tfor (int i = n; i >= 1; i--) {\n\t//\u5012\u7740\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9 \n\t\tif (f[i]) continue;\n\t\t//\u6709\u7f16\u53f7\u66f4\u5927\u7684\u70b9\u53ef\u4ee5\u904d\u5386\u5230\u4ed6\uff08\u5012\u7740\u679a\u4e3e\u7684\u7f18\u6545\uff09 \n\t\tdfs(i, i);\n\t}\n\tfor (int i = 1; i <= n; i++) cout << f[i] << ' ';\n\treturn 0;\n}\n```\n\n\n\u5982\u6709\u9519\u8bef or \u5efa\u8bae\u6b22\u8fce$dalao$\u4eec\u6307\u51fa\n\n\n\n\n\n$by$\n\n$subarude$\n\n\n\n\n\n\n\n\n",
        "postTime": 1562211598,
        "uid": 162865,
        "name": "NxtEcho",
        "ccfLevel": 0,
        "title": "luogu P3916 \u56fe\u7684\u904d\u5386"
    },
    {
        "content": "/\\*\n\u975e\u5e38\u795e\u5947\u7684dfs\uff0c\u6211\u4eec\u4e0a\u5348\u8003\u8bd5\u8003\u7684\u8fd9\u9053\u9898\uff0c\u8003\u573a\u4e0a\u6211\u662f\u6b63\u7740\u5efa\u7684\u8fb9\uff0c\u4f46\u662f\u4e0d\u4f1a\u505a\u73af\u554a\uff0c\u53ea\u5f97\u4e8650\u5206\uff0c\n\n\u7136\u540e\u628a\u7528\u6765\u5224\u91cd\u7684visited\u6570\u7ec4\u62ff\u6389\uff0c\u591a\u5f97\u4e8610\u5206\uff01\n\n\u7136\u540e\u8ba9\u6bcf\u4e2a\u70b9dfs100\u6b21\uff0cAC\u5566\uff01\uff01\uff01\n\n\u5c31\u662f\u4efb\u6027\uff0c\u4e0d\u6002\u4e0d\u8d85\u65f6\uff01\n\n\\*/\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=100005;\nint n,m;\nint Max_to[N],Min_to[N];\nint num_edge,head[N];\nstruct Edge\n{\n    int u,v,nxt;\n}edge[N];\nint read()\n{\n    char c=getchar();int num=0;\n    for(;!isdigit(c);c=getchar());\n    for(;isdigit(c);c=getchar())\n        num=num*10+(c^'0');\n    return num;\n}\nvoid add_edge(int u,int v)\n{\n    edge[++num_edge].u=u;\n    edge[num_edge].v=v;\n    edge[num_edge].nxt=head[u];\n    head[u]=num_edge;\n}\nvoid dfs(int u)\n{\n    for(int i=head[u],v;i;i=edge[i].nxt)\n    {\n        v=edge[i].v;\n        if(Max_to[v])\n        {\n            Min_to[u]=min(Min_to[u],Min_to[v]);\n            Max_to[u]=max(Max_to[u],Max_to[v]);\n            continue;\n        }\n        dfs(v);\n        Max_to[u]=max(Max_to[u],Max_to[v]);\n        Min_to[u]=min(Min_to[u],Min_to[v]);\n    }\n}\nint main()\n{\n    //freopen(\"graph.in\",\"r\",stdin);\n    //freopen(\"graph.out\",\"w\",stdout);\n    n=read(),m=read();\n    for(int i=1,u,v;i<=m;++i)\n    {\n        u=read(),v=read();\n        add_edge(u,v);\n    }\n    for(int i=1;i<=n;++i)\n        Max_to[i]=Min_to[i]=i;\n    for(int i=1;i<=100;++i)        //\u4ee3\u7801AC\u7684\u6838\u5fc3\u5173\u952e\u90e8\u5206\uff0c\u6bcf\u4e2a\u70b9dfs\u4e00\u767e\u6b21\uff01\u54b1\u4e0d\u6002\u4e0d\u8d85\u65f6 \n    {\n        for(int j=1;j<=n;++j)\n            dfs(j);\n    }\n    for(int i=1;i<=n;++i)\n    {\n        if(Max_to[i]<Max_to[Min_to[i]])\n            Max_to[i]=Max_to[Min_to[i]];\n        if(Max_to[i]<Max_to[Max_to[i]])\n            Max_to[i]=Max_to[Max_to[i]];\n        printf(\"%d \",Max_to[i]);\n    }\n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1510235669,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u60f3\u4e86\u5f88\u4e45\u89c9\u5f97\u8fd8\u662f\u53d1\u4e00\u4e0b\u6bd4\u8f83\u597d\n\u6211\u5c31\u662f\u60f3\u628a\u8fc7\u7a0b**\u8bb2\u7684\u76f8\u5bf9\u900f\u5f7b\u4e00\u70b9**\uff0c\u56e0\u4e3a\u6211\u5728\u7406\u89e3\u7684\u65f6\u5019\u81ea\u5df1\u786e\u5b9e\u82b1\u8d39\u4e86\u597d\u4e45\n**\u8865\u5145**\u4e00\u4e9b\u4e00\u7b14\u5e26\u8fc7\u5bf9juruo\u4e0d\u662f\u5f88\u53cb\u597d\u7684\u4e00\u4e9b\u5730\u65b9\n\u6b63\u6587\uff1a\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P3916)\n\n\u4e00\u5f00\u59cb\u5927\u5bb6\u7684\u601d\u8def\u5e94\u8be5\u5c31\u662f\u5355\u7eaf\u7684dfs\u4f46\u662f\u6211\u4eec\u6ce8\u610f\u5230$n$\u7684\u8303\u56f4\u5230\u4e86$10^5$\u8fd9\u65f6$n^2$\u7684\u66b4\u529b\u662f\u8fc7\u4e0d\u53bb\u7684\u4e8e\u662f\u6211\u4eec\u5f00\u59cb\u601d\u8003\u53cd\u5411\u5efa\u8fb9\u5012\u7740\u904d\u5386\n\n```cpp\nvoid add(int x, int y) {\n\te[++cnt].nxt = head[x];\n\te[cnt].to = y;\n\thead[x] = cnt;\n}\n```\n\u90bb\u63a5\u8868\u5b58\u8fb9\n```cpp\n\tfor(int i = n; i >= 1; i--) {\n\t\tif(ans[i]) continue;\n\t\tdfs(i, i);\n\t}\n```\n$continue$\u6389\u7684\u8fd9\u53e5\u8bdd\u89e3\u91ca\u4e00\u4e0b\uff1a\n\u56e0\u4e3a\u6211\u4eec\u662f\u5012\u7740\u6765\u7684\uff0c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u904d\u5386\u5230\u8fc7\u4e86\uff0c\u8bf4\u660e\u540e\u8fb9\u7684\u70b9\u80af\u5b9a\u80fd\u8d70\u5230\u4ed6\uff0c\u800c\u6211\u4eec\u904d\u5386\u7684\u987a\u5e8f\u53c8\u662f\u53cd\u7740\u6765\u7684\uff0c\u6240\u4ee5\u540e\u8fb9\u7684\u8282\u70b9\u4e00\u5b9a\u6bd4\u4ed6\u7684\u5927\uff0c\u5219\u8fd9\u4e2a\u70b9\u6240\u80fd\u5230\u7684\u6700\u5927\u503c\u5c31\u4e0d\u7528\u518d\u66f4\u65b0\u4e86\u3002\u76f8\u5e94\u7684\u5982\u679c\u4e4b\u524d\u6ca1\u6709\u70b9\u80fd\u8d70\u5230\u4ed6\u90a3\u4e48\u5c31\u9700\u8981\u904d\u5386\u4ed6\u4e4b\u524d\u7684\u70b9\uff0c\u6765\u5bfb\u627e\u4ed6\u7684\u7956\u5148\u3002\n\n```cpp\nvoid dfs(int x, int fa) {\n\tans[x] = fa;\n\tfor(int i = head[x]; i; i = e[i].nxt)\n\t\tif(!ans[e[i].to]) dfs(e[i].to, fa);\n}\n```\n$dfs$\u6bd4\u8f83\u7b80\u6d01\uff0c\u5148\u7ed9$ans$\u6570\u7ec4\u8d4b\u503c\uff0c\u8868\u793a\u5728\u76ee\u524d\u7684\u5df2\u77e5\u6761\u4ef6\u4e0b\uff0c\u4ed6\u6240\u80fd\u8d70\u5230\u7684\u6700\u8fdc\u7684\u8ddd\u79bb\u662f\u4ed6\u7684\u7956\u5148$fa$\u6ce8\u610f\u8fd9\u4e2a\u7956\u5148\u662f\u6bd4\u4ed6\u8981\u5927\u7684\uff0c\u5c31\u662f\u4ed6\u80fd\u5230\u7684\u6700\u8fdc\u7684\u70b9\n\nThe Last:\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int N = 100010;\nint n, m, head[N], cnt, ans[N];\nstruct node{\n\tint nxt, to;\n}e[N];\nint read() {\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) {if(ch == '-') w = -1;ch = getchar();}\n\twhile(isdigit(ch)) {s = s * 10 + ch - '0';ch = getchar();}\n\treturn s * w;\n}\nvoid add(int x, int y) {\n\te[++cnt].nxt = head[x];\n\te[cnt].to = y;\n\thead[x] = cnt;\n}\nvoid dfs(int x, int fa) {\n\tans[x] = fa;\n\tfor(int i = head[x]; i; i = e[i].nxt)\n\t\tif(!ans[e[i].to]) dfs(e[i].to, fa);\n}\nint main() {\n\tn = read(), m = read();\n\tfor(int i = 1; i <= m; i++) {\n\t\tint x, y;\n\t\tx = read(), y = read();\n\t\tadd(y, x);\n\t}\n\tfor(int i = n; i >= 1; i--) {\n//\t\tmemset(vis, 0, sizeof(vis));\n//\t\tmaxn = i;\n\t\tif(ans[i]) continue;\n\t\tdfs(i, i);\n//\t\tprintf(\"%d\\n\", maxn);\n\t}\n\tfor(int i = 1; i <= n; i++) printf(\"%d \", ans[i]);\n\treturn 0;\n}\n```\n\u8c22\u8c22\u6536\u770b\uff0c \u795d\u8eab\u4f53\u5065\u5eb7\uff01",
        "postTime": 1571095198,
        "uid": 147646,
        "name": "lzpclxf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\t\u672c\u849f\u84bb\u4eca\u5929\u521a\u521a\u5b66\u4e86\u7f29\u70b9\uff0c\u6df1\u611f\u6b64\u7b97\u6cd5\u7684\u5947\u5999\uff0c\u5bf9tarjan\u4ed6\u8001\u4eba\u5bb6\u7684\u72ec\u7279\u521b\u9020\u4f69\u670d\u4e0d\u5df2\uff0c\u770b\u4e86\u770b\u4f3c\u4e4e\u6ca1\u6709\u4f7f\u7528tarjan\u6c42\u5f3a\u8054\u901a\u5206\u91cf\u7684\u9898\u89e3\uff0c\u4fbf\u60f3\u5728\u6b64\u8c08\u4e00\u4e0b\u81ea\u5df1\u7684\u5b66\u4e60\u5fc3\u5f97\u3002\uff08PS\uff1a\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u5b66\u4e60\u8fc7tarjan\u6c42\u5f3a\u8054\u901a\u5206\u91cf\u7684\u7b97\u6cd5\u7684\u8bdd\uff0c\u63a8\u8350\u4e00\u7bc7\u535a\u5ba2 BY ByVoid\u5927\u795e https://www.byvoid.com/zhs/blog/scc-tarjan/ \u91cc\u9762\u8bb2\u7684\u5341\u5206\u8be6\u7ec6\uff09\u3002\n------------\n\n\t\u4e0b\u9762\u6211\u4eec\u5207\u5165\u6b63\u9898\uff1a\u6c42\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6240\u80fd\u6269\u5c55\u5230\u7684\u4e0b\u6807\u6700\u5927\u7684\u70b9\u3002\u5f88\u5bb9\u6613\u6211\u4eec\u60f3\u5230\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u96c6\u5408\uff0c\u82e5\u8be5\u96c6\u5408\u5185\u7684\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u7684\u8bdd\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u6574\u4e2a\u96c6\u5408\u4e2d\u6240\u6709\u70b9\u7684\u7b54\u6848\u4fbf\u4e3a\u5176\u4e2d\u4e0b\u6807\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6574\u4e2a\u56fe\u4e2d\u7684\u5f3a\u8054\u901a\u5206\u91cf\u6c42\u51fa\u6765\uff0c\u5e76\u628a\u4ed6\u4eec\u5176\u4e2d\u6700\u5927\u7684\u70b9\u6807\u8bb0\u4e3a\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u5185\u5bb9\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n  ```cpp\nvoid tarjan(int x)  \t\t\t\t //\u6c42\u6709\u5411\u56fe\u5f3a\u8054\u901a\u5206\u91cf\u7684tarjan\uff0c\u5728\u8fd9\u91cc\u4e0d\u8fc7\u591a\u53d9\u8ff0\uff0c\u60f3\u5b66\u4e60\u7684\u53ef\u4ee5\u70b9\u94fe\u63a5\u53bb\u535a\u5ba2qwq \n{\n    vis[x] = 1;\n    s[++top] = x;\n    dfn[x] = low[x] = ++Time;\n    for(int i = head[x];i;i=e[i].next)\n    {\n        int to = e[i].to;\n        if(!dfn[to])\n        {\n            tarjan(to);\n            low[x] = min(low[x],low[to]);\n        }\n        else if(vis[to])\n            low[x] = min(low[x],dfn[to]);\n    }\n    if(dfn[x] == low[x])\t\t\t//\u5982\u679cx\u53ca\u5176\u5b50\u6811\u80fd\u591f\u6784\u6210\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf \n    {\n        ++cnt;\n        int j;\n        while(j=s[top])   \t\t\t//\u5c06\u5176\u5b50\u6811\u4e2d\u7684\u70b9\u90fd\u52a0\u5165\u6b64\u5206\u91cf\u4e2d,\u5e76\u5c06\u6b64\u5206\u91cf\u4e2d\u7684\u6700\u5927\u503c\u4fdd\u5b58\u5728MAX\u6570\u7ec4\u4e2d \n        {\n            vis[j] = 0;\n            belong[j] = cnt;\n            MAX[cnt] = max(MAX[cnt],j);\n            top--;\n            if(j==x) break;\n        }\n    }\n}\n\n```\n\t\u8fd9\u6837\u6211\u4eec\u4fbf\u53ef\u4ee5\u5c06\u672c\u5f88\u96be\u5904\u7406\u7684\u73af\u53d8\u6210\u4e00\u4e2a\u4e2a\u70b9\uff0c\u7136\u540e\u8981\u505a\u7684\u5c31\u662f\u6c42\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684ans\u4e86\uff0c\u4e8e\u662f\u6211\u60f3\u5230\u4e86\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\uff08\u5176\u5b9e\u5c31\u662fdp\uff09\u3002\u6211\u4eec\u8bbef[i]\u8868\u793a\u4ecei\u51fa\u53d1\u6240\u80fd\u8ffd\u6eaf\u5230\u7684\u6700\u5927\u7684\u70b9\uff0c\u6240\u4ee5f[i]=max(f[i],f[i\u7684\u513f\u5b50]\uff09\u5c31\u8f6c\u5316\u6210\u4e3a\u4e00\u79cd\u6811\u5f62\u7ed3\u6784\uff0c\u53ef\u4ee5\u8f7b\u677e\u9012\u5f52\u6c42\u89e3\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nvoid dfs(int x)    \t\t\t\t\t//\u8bb0\u5fc6\u5316\u641c\u7d22 \n{\n    if(f[x]) return;\n    f[x] = MAX[x];\t\t\t\t\t//\u5f53\u524d\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u7684\u6700\u5927\u503c \n    for(int i=head[x];i;i=e[i].next)\n    {\n        int to = e[i].to;\n        if(!f[to]) dfs(to);\n        f[x] = max(f[x],f[to]);\t\t// \u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c \n    }\n}\n```\n\n\t\u8fd9\u6837\u6211\u4eec\u4fbf\u6c42\u51fa\u4e86\u5bf9\u4e8e\u6bcf\u4e2a\u5f3a\u8054\u901a\u5b50\u56fe\u7684\u7b54\u6848\uff0c\u6700\u540e\u8981\u505a\u7684\u53ea\u9700\u8981\u662f\u627e\u5230\u6bcf\u4e2a\u70b9\u5206\u522b\u5bf9\u5e94\u54ea\u4e2a\u5f3a\u8054\u901a\u5b50\u56fe\u5c31\u597d\u4e86\uff0c\u662f\u4e0d\u662f\u559c\u6b22\u4e0a\u4e86\u8fd9\u79cd\u5947\u5999\u7684\u7b97\u6cd5qwq\uff1f\n    \n\t\u5b8c\u6574\u4ee3\u7801\u5949\u4e0a\uff08~~\u5343\u4e07\u4e0d\u8981\u76f4\u63a5\u6284\u5594~~\uff09\uff1a\n ```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n\nconst int maxn = 10e5 + 5;\n\nstruct Edge{\n    int to,next;\n}e[maxn];\n\nint dfn[maxn],low[maxn],Time;\nint s[maxn],top,vis[maxn];\nint f[maxn],n,m;\nint cnt,belong[maxn],MAX[maxn];\nint k,x[maxn],y[maxn],head[maxn];\n\nvoid add(int u,int v)\n{\n    e[++k].to = v;\n    e[k].next = head[u];\n    head[u] = k;\n}\n\nvoid tarjan(int x)  \t\t\t\t //\u6c42\u6709\u5411\u56fe\u5f3a\u8054\u901a\u5206\u91cf\u7684tarjan\uff0c\u5728\u8fd9\u91cc\u4e0d\u8fc7\u591a\u53d9\u8ff0\uff0c\u60f3\u5b66\u4e60\u7684\u53ef\u4ee5\u70b9\u94fe\u63a5\u53bb\u535a\u5ba2qwq \n{\n    vis[x] = 1;\n    s[++top] = x;\n    dfn[x] = low[x] = ++Time;\n    for(int i = head[x];i;i=e[i].next)\n    {\n        int to = e[i].to;\n        if(!dfn[to])\n        {\n            tarjan(to);\n            low[x] = min(low[x],low[to]);\n        }\n        else if(vis[to])\n            low[x] = min(low[x],dfn[to]);\n    }\n    if(dfn[x] == low[x])\t\t\t//\u5982\u679cx\u53ca\u5176\u5b50\u6811\u80fd\u591f\u6784\u6210\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf \n    {\n        ++cnt;\n        int j;\n        while(j=s[top])   \t\t\t//\u5c06\u5176\u5b50\u6811\u4e2d\u7684\u70b9\u90fd\u52a0\u5165\u6b64\u5206\u91cf\u4e2d,\u5e76\u5c06\u6b64\u5206\u91cf\u4e2d\u7684\u6700\u5927\u503c\u4fdd\u5b58\u5728MAX\u6570\u7ec4\u4e2d \n        {\n            vis[j] = 0;\n            belong[j] = cnt;\n            MAX[cnt] = max(MAX[cnt],j);\n            top--;\n            if(j==x) break;\n        }\n    }\n}\n\nvoid dfs(int x)    \t\t\t\t\t//\u8bb0\u5fc6\u5316\u641c\u7d22 \n{\n    if(f[x]) return;\n    f[x] = MAX[x];\t\t\t\t\t//\u5f53\u524d\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\u7684\u6700\u5927\u503c \n    for(int i=head[x];i;i=e[i].next)\n    {\n        int to = e[i].to;\n        if(!f[to]) dfs(to);\n        f[x] = max(f[x],f[to]);\t\t// \u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c \n    }\n}\n\nint main()\n{\n    //freopen(\"data.in\",\"r\",stdin);\n    //freopen(\"jkb.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x[i],&y[i]);\t\t\t//\u4fdd\u5b58\u8fb9\u4fe1\u606f \n        add(x[i],y[i]);\n    }\n    for(int i=1;i<=n;i++)\t\t\t\t\t//\u6c42\u51fa\u5f3a\u8054\u901a\u5206\u91cf \n        if(!dfn[i])\n            tarjan(i);\n    memset(e,0,sizeof(e));\t\t\t\t\t//\u6e05\u7a7a\u539f\u56fe \n    memset(head,0,sizeof(head));\t\n    k = 0;\n    for(int i=1;i<=m;i++)\t\t\t\t\t//\u5efa\u7acb\u65b0\u56fe \n        if(belong[x[i]]!=belong[y[i]])\n            add(belong[x[i]],belong[y[i]]);\n    for(int i=1;i<=cnt;i++)\n        if(!f[i]) dfs(i);\n    for(int i=1;i<=n;i++)\t\t\t\t\t//\u8f93\u51fa\u7b54\u6848 \n        printf(\"%d \",f[belong[i]]);\n    return 0;\n}\n```",
        "postTime": 1534603108,
        "uid": 57326,
        "name": "\u66fc\u6069\u8584\u8377",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\t\u8fd9\u9898\u6253\u773c\u4e00\u770b\uff0c\u54c7\uff01\u6c34\u9898\u3002\n    \u628a\u8fb9\u6309\u7167\u7ec8\u70b9\u6392\u5e8f\n    \u6309\u7167\u8fb9\u76f4\u63a5\u8fed\u4ee3\u66f4\u65b0\u4e0d\u5c31\u597d\u4e86\uff1f\n    \u4e8e\u662f\u6211\u9ad8\u9ad8\u5174\u5174\u7684\u4ea4\u4e86\u4e00\u4efd\u4ee3\u7801\n   ```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\nint f[100010];\nint n, m;\n\nstruct road{\n    int u, v;\n} edge[100010];\n\nbool cmp(road a, road b) {\n    return a.v > b.v;\n}\n\nint main() {\n    cin >> n >> m;\n    for (register int i = 1; i <= m; i ++)\n        scanf (\"%d %d\", &edge[i].u, &edge[i].v);\n    sort (edge + 1, edge + m + 1, cmp);\n    for (register int i = 1; i <= n; i ++)\n        f[i] = i;\n    for (register int i = 1; i <= m; i ++)\n        f[edge[i].u] = max(f[edge[i].u], f[edge[i].v]);\n    for (register int i = 1; i <= n; i ++)\n        printf (\"%d \", f[i]);\n    printf (\"\\n\");\n    return 0;\n}\n```\n\n\n\t\u7ed3\u679c\u7206\u70b8\u3002\u3002\u3002\u3002\u53ea\u5f97\u4e8610\u5206\u3002\u3002\u3002\n    \u7a81\u7136\u60f3\u5230\u53ef\u80fd\u4f1a\u6709\u4e00\u904d\u66f4\u65b0\u66f4\u65b0\u4e0d\u5b8c\u7684\u60c5\u51b5\uff0c\n    \uff08\u697c\u4e3b\u8111\u6b8b\uff0c\u6784\u9020\u4e0d\u51fa\u6765\uff09\n    \u6bd4\u5982\u8bf4\u6c42\u6700\u77ed\u8def\u65f6\u4e0d\u5c31\u662f\u4e00\u6761\u77ed\u8fb9\u677e\u5f1b\u597d\u591a\u6b21\u3002\n    \u6240\u4ee5\u6211\u7a0d\u7a0d\u5730\u6539\u4e86\u6211\u7684\u4ee3\u7801\uff0c\n    \n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n\nusing namespace std;\nint f[100010];\nint n, m;\n\nstruct road{\n    int u, v;\n} edge[100010];\n\nbool cmp(road a, road b) {\n    return a.v > b.v;\n}\n\nint main() {\n    cin >> n >> m;\n    for (register int i = 1; i <= m; i ++)\n        scanf (\"%d %d\", &edge[i].u, &edge[i].v);\n    sort (edge + 1, edge + m + 1, cmp);\n    for (register int i = 1; i <= n; i ++)\n        f[i] = i;\n    for (register int k = 1; k <= 10; k ++)\n        for (register int i = 1; i <= m; i ++)\n            f[edge[i].u] = max(f[edge[i].u], f[edge[i].v]);\n    for (register int i = 1; i <= n; i ++)\n        printf (\"%d \", f[i]);\n    printf (\"\\n\");\n    return 0;\n}\n```\n\t\n    \u5176\u5b9e\u5c31\u662f\u5957\u4e86\u4e00\u4e2a\u8ba9\u5b83\u591a\u66f4\u65b0\u51e0\u6b21\u7684\u5faa\u73af\uff0c\n    \u7136\u540e80\u5206\u4e86qaq\n    \u8fd9\u9898\u6570\u636e\u91cf1e5\n    \u6392\u5e8fO(mlog(m)), \u66f4\u65b0\u662fO(km)(k\u662f\u66f4\u65b0\u6b21\u6570);\n    \u5982\u679c\u8fd9\u9898\u7684\u6570\u636e\u6bd4\u8f83\u6bd2\u7624\uff0cO(km)\u5c31\u4f1a\u70b8\n    \u540c\u65f6\u4e5f\u4f1a\u8bf4\u660e\u6211\u4eec\u7684\u7b97\u6cd5\u662f\u4e0d\u53ef\u884c\u7684\uff08\u6ed1\u7a3d\uff09\n    \u4e0d\u8fc7\u8fd9\u9898\u6570\u636e\u6c34\uff0c\u697c\u4e3b\u5c06k\u6539\u4e3a100\u65f6\u76f4\u63a5AC\n    \u6700\u540e\u901a\u8fc710\u5230100\u5185\u7684\u4e8c\u5206\u67e5\u627e\uff0c\u53d1\u73b0\n    \u8fd9\u9898\u6700\u5c0f\u7684k\u662f95\uff08\u6ed1\u7a3d~\u6ed1\u7a3d~~\uff09\n    \n    \u79bbnoip\u8fd8\u67095\u4e2a\u6708\uff0c\u795d\u5927\u5bb6rp++\n    \u4e5f\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u901a\u8fc7\n    \uff08\u6ed1\u7a3d\u7684\u662f\u6211\u6ca1\u6709\u7c98AC\u4ee3\u7801\uff0c\u4e0d\u8fc7\u4ee3\u7801\u5df2\u7ecf\u4e0d\u91cd\u8981\u4e86\uff09",
        "postTime": 1560250611,
        "uid": 162867,
        "name": "shame_djj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1bfs\u7248\u672c\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u56fe\u6765\u8bb2\u6211\u4eec\u53ef\u4ee5\u53cd\u5411\u5efa\u56fe\n\n\u5c06\u5230\u8fbe\u7684\u6700\u5927\u70b9\u8f6c\u5316\u4e3a\u662f\u5426\u53ef\u4ee5\u88ab\u5f53\u524d\u7684\u6700\u5927\u70b9\u5230\u8fbe\n\n\u6240\u4ee5\u6211\u4eec\u4ecen\u52301\u679a\u4e3e\u8d77\u70b9\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u7684\u6027\u8d28\n\n\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u6807\u8bb0\u8fc7\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u70b9\u6709\u7b54\u6848\n\n\u548c\u8be5\u70b9\u76f8\u8fde\u7684\u6240\u6709\u70b9\u90fd\u88ab\u6807\u8bb0\u8fc7\uff0c\u56e0\u6b64\u65e0\u9700\u641c\u7d22\u8fd9\u4e2a\u70b9\u3002\n\n\u5728\u9047\u5230\u6709\u7b54\u6848\u7684\u70b9\u662f\u8df3\u8fc7\u5373\u53ef\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<stdio.h>\n#include<queue>\nusing namespace std;\nstruct data\n{\n    int v;int next;\n}edge[100010];\nint alist[100010];\nint cnt;\nvoid add(int u,int v)\n{\n    edge[++cnt].v=v;\n    edge[cnt].next=alist[u];\n    alist[u]=cnt;\n    return;\n}\nint n;int m;\nint res[100010];//\u7b54\u6848\u6570\u7ec4\nqueue <int> q;\nint now;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<m;i++)\n    {\n        int u;int v;\n        scanf(\"%d%d\",&u,&v);\n        add(v,u);//\u53cd\u5411\u5efa\u56fe\n    }\n    for(int i=n;i>=1;i--)\n    {\n        if(res[i]!=0)continue;//\u5982\u679c\u8fd9\u4e2a\u70b9\u88ab\u641c\u8fc7\u6240\u6709\u76f8\u8fde\u70b9\u5747\u88ab\u641c\u8fc7\u53ef\u4ee5\u8df3\u8fc7\n        q.push(i);\n        while(!q.empty())//\u5bf9\u70b9ibfs\n        {\n            now=q.front();q.pop();\n            res[now]=i;\n            int next=alist[now];\n            while(next)\n            {\n                int v=edge[next].v;\n                if(res[v]==0)\n                {\n                    q.push(v);\n                }\n                next=edge[next].next;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d \",res[i]);//\u8f93\u51fa\u7b54\u6848\n    }\n    return 0;\n}\n```",
        "postTime": 1508562390,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "# P3916 \u3010\u56fe\u7684\u904d\u5386\u3011\n\n\u4ece\u6807\u7b7e\u6765\u770b\u8fd9\u9053\u9898\u5e94\u8be5\u7528\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7f29\u70b9\u505a\uff0c\u4f46\u6211\u8fd8\u662f\u66f4\u559c\u6b22$DFS$\u7684\u7801\u91cf\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u7bc7$DFS$\u9898\u89e3.\n\n\u4e00\u79cd\u663e\u800c\u6613\u89c1\u7684\u7b97\u6cd5\u662f\u4ece\u6bcf\u4e2a\u70b9\u641c\u7d22\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u518d\u627e\u51fa\u6700\u5927\u7684\uff0c\u7136\u800c\u8fd9\u79cd\u66b4\u641c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u63a5\u8fd1$O(n^2)$\uff0c$n^2$\u8fc7\u5341\u4e07\u4f3c\u4e4e\u53ea\u80fd\u662f\u5947\u8ff9\uff0c\u4e8e\u662f\u6211\u4eec\u5e94\u8be5\u6362\u4e00\u4e0b\u601d\u8def\uff1a\n\n**\u4e0e\u5176\u6c42\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u80fd\u5230\u8fbe\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9\uff0c\u4e0d\u5982\u7b49\u4ef7\u5730\u6c42\u6709\u54ea\u4e9b\u70b9\u80fd\u5230\u8fbe\u8fd9\u4e2a\u6700\u4f18\u7684\u70b9**\n\n\u4e8e\u662f\u5c31\u4f1a\u5f88\u81ea\u7136\u5730\u60f3\u5230\u5e94\u8be5\u53cd\u5411\u5efa\u8fb9.\n\n### \u53cd\u56fe\uff1a\n\u53cd\u56fe\u662f\u6307\u5c06\u539f\u56fe\u7684\u6240\u6709\u8fb9\u53cd\u5411\u6240\u5efa\u7acb\u7684\u56fe\uff0c\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u6709\u5411\u56fe$G=(V,E)$\u7684\u53cd\u56fe\u662f\u56fe$G^T=(V,E^T)$\uff0c\u8fd9\u91cc$E^T=\\{(v,u)\\in V\\times V:(u,v)\\in E\\}$.\n\n### $DFS$\u5b9e\u73b0\uff1a\n\u5bb9\u6613\u60f3\u5230\uff0c\u5e94\u8be5\u6309\u7f16\u53f7\u4ece\u5927\u5230\u5c0f$DFS$\u6bcf\u4e2a\u8282\u70b9\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u70b9$v$\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u5230\u4e00\u5b9a\u662f\u4ece\u6700\u4f18\u7684$A(v)$\u51fa\u53d1\u7684$DFS$\uff0c\u8fd9\u6837\u6bcf\u4e2a\u70b9\u53ea\u9700\u8bbf\u95ee\u4e00\u6b21\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$\uff0c\u672c\u9898$n\\leqslant 10^5$\uff0c\u8f7b\u677e\u8dd1\u8fc7.\n\n\n\u7406\u89e3\u672c\u9898\u601d\u8def\u540e\uff0c\u4ee3\u7801\u5b9e\u73b0\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u8fd8\u4e0d\u5230$40$\u884c.\n\n```cpp\n#include<cstdio>\nconst int maxn=1e5+10;\nint edge[maxn],next[maxn];\nint head[maxn],cnt;\t\t//\u91c7\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b9e\u73b0\u90bb\u63a5\u8868\u5b58\u56fe\ninline void Init(){\t\t//\u90bb\u63a5\u8868\u521d\u59cb\u5316\n    for(int i=0;i<maxn;i++)\n        head[i]=next[i]=-1;\n    cnt=0;\n}\ninline void addedge(int u,int v){\t//\u52a0\u5165\u8fb9(u,v)\n    edge[cnt]=v;\n    next[cnt]=head[u];\n    head[u]=cnt++;\n}\nint n,m;\t\t\t//n\u4e3a\u70b9\u6570\uff0cm\u4e3a\u8fb9\u6570\nint ans[maxn];\t\t\t//ans\u6570\u7ec4\u5b58\u7b54\u6848\uff0cans[i]\u5373A(i)\nvoid dfs(int n,int a){\t\t//dfs\u5b9e\u73b0\n    if(ans[n]) return;\t\t//\u5982\u679c\u8bbf\u95ee\u8fc7\u76f4\u63a5\u8fd4\u56de\n    ans[n]=a;\t\t\t//\u8bb0\u5f55\u7b54\u6848\n    for(int i=head[n];~i;i=next[i])\t//~i\u4e5f\u53ef\u4ee5\u5199\u4f5ci!=-1\n        dfs(edge[i],a);\n}\nint main(){\n    Init();\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        addedge(v,u);\t\t//\u53cd\u5411\u5efa\u56fe\n    }\n    for(int i=n;i;i--)\t\t//\u4ece\u5927\u5230\u5c0fdfs\n        if(!ans[i]) dfs(i,i);\n    for(int i=1;i<=n;i++)\n        printf(\"%d \",ans[i]);\n    return 0;\n}\n```\n\u611f\u8c22\u9605\u8bfb\uff0c\u6b22\u8fce\u5404\u4f4d$dalao$\u6307\u51fa\u9519\u8bef (^_^;)\n\n$by\\ Sapphire6575737973$",
        "postTime": 1584695697,
        "uid": 176569,
        "name": "iMya_nlgau",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "~~\u770b\u4e86\u770b\u9898\u89e3\u533a\uff0c\u90fd\u662f\u795e\u4ed9\u554aQAQ\u53c8\u662f\u5e7f\u641c\u53c8\u662f\u5927\u6cd5\u5e08\u7684~~  \n\u6211\u53d1\u4e00\u7bc7\u6b63\u7ecf\u4e00\u70b9\u7684tarjan\u7f29\u70b9+toposort+dp\u7684\u7248\u672c\u3002   \n\u8fd9\u4e2a\u9898\u7528\u6765\u7ec3\u7f29\u70b9\u8fd8\u662f\u86ee\u4e0d\u9519\u7684qwq \n\n\u5176\u5b9e\u8fd9\u4e2a\u9898\u597d\u50cf\u6709\u4e2a\u6b63\u5411\u7248\u672c\uff0c\u90a3\u5c31\u662f\uff1a[\u3010\u6a21\u677f\u3011\u7f29\u70b9](https://www.luogu.org/problem/P3387)  \n\u7136\u800c\u90a3\u4e2a\u677f\u5b50\u662f\u7528\u6765\u6b63\u5411\u7d2f\u52a0\u6743\u503c\u6c42\u6700\u5927\u7684dp\uff0c\u8fd9\u4e2a\u662f\u53cd\u5411\u6c42\u6700\u5927id\u7684dp  \n\u9996\u5148\u6211\u4eec\u77e5\u9053\u5982\u679c\u52a0\u53cd\u5411\u8fb9\uff0c\u73af\u8fd8\u662f\u73af\uff0cSCC\u5927\u5c0f\u7b49\u4e0d\u53d8  \n\u5728\u540c\u4e00\u4e2aSCC\u91cc\u9762\u7684\u70b9\u80fd\u904d\u5386\u5230\u7684\u9996\u5148\u662fSCC\u4e2did\u6700\u5927\u7684\u70b9  \n\u7136\u540e\u7f29\u70b9\u8fc7\u540e\u5c31\u53d8\u6210\u4e86DAG\uff0c\u653e\u5fc3toposort  \n\u7136\u540e\u624d\u662f\u4e0d\u662f\u540c\u4e00\u4e2aSCC\u4e2d\u5012\u5e8f\u80fd\u904d\u5386\u5230\u7684\u6700\u5927\u7684id  \n\u56e0\u6b64\u6211\u4eec\u8bf4\u80fd\u904d\u5386\u5230\u7684\u70b9\u7684id\u7684\u6700\u5927\u503c  \n\u90a3\u6211\u4eec\u4ece\u6700\u540e\u8fb9\u5012\u5e8f\u5411\u524dtoposort  \n\u76f4\u63a5\u4ece\u5f53\u524d\u70b9\u66f4\u65b0\u51fa\u53d1\u70b9\u7684dp\u503c\u5c31\u597d\u4e86\u554a  \n~~\u4ee3\u7801\u91cf\u53ef\u662f\u5de8\u5927~~  \n\n\u53e6\u5916\u662f\u51e0\u4e2a\u7ec6\u8282  \n1. \u53cd\u5411\u8fb9\u904d\u5386\u8fb9\u7684\u65f6\u5019\u5f97\u5230\u7684\u8fb9\u7684\u51fa\u53d1\u70b9\u662f\u7ec8\u70b9\uff0cdp\u65f6\u5019\u8981\u6ce8\u610f  \n2. \u91cd\u65b0\u5efa\u56fe\u5982\u679c\u662f\u591a\u5f00\u7a7a\u95f4\u5bcc\u88d5\u7136\u540ememset\u65f6\u95f4\u7206\u70b8\uff0c\u90a3\u5c31\u591a\u5f00\u4e00\u4e2a\u56fe  \n\n\u884c\u4e86\uff0c\u4e0a\u4ee3\u7801\uff08\u6709\u6ce8\u91ca\uff09\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n\nusing namespace std;\nstruct edge\n{ // \u8fb9\n\tint from, to, next;\n};\nstruct gragh\n{\n\tedge Edge[100086];\t\t\t\t\t   // \u6bcf\u4e2a\u56fe\u7684\u8fb9\n\tint cnt, head[100086];\t\t\t\t   // \u6bcf\u4e2a\u56fe\u7684\u524d\u5411\u661f\n\tinline void add_edge(int from, int to) // \u6bcf\u4e2a\u56fe\u7684\u52a0\u8fb9\n\t{\t\t\t\t\t\t\t\t\t   // \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u56fe\u7684\u52a0\u8fb9\n\t\tthis->cnt++;\t\t\t\t\t   // this\u53ef\u4ee5\u7406\u89e3\u4e3a\u201c\u5f53\u524d\u56fe\u7684\u201d\n\t\tthis->Edge[this->cnt].from = from;\n\t\tthis->Edge[this->cnt].to = to;\n\t\tthis->Edge[this->cnt].next = this->head[from];\n\t\tthis->head[from] = cnt;\n\t}\n};\ngragh a, b; // a\u662f\u7f29\u70b9\u524d\u7684\uff0cb\u662f\u7f29\u70b9\u540e\u7684\n\nint dfn[100086], low[100086], dfncnt, stack[100086], top;\nint group[100086], gcnt, maxid[100086];\nbool vst[100086];\n//\u6211\u4eec\u6700\u540e\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2aSCC\u7684\u5165\u5ea6\u6765toposort\u8fdb\u884cdp\nint n, m, In[100086], dp[100086];\n//\u7f29\u70b9\nvoid tarjan(int n)\n{\n\tdfn[n] = low[n] = ++dfncnt;\n\tstack[++top] = n;\n\tvst[n] = true;\n\tfor (int i = a.head[n]; i; i = a.Edge[i].next)\n\t{\n\t\tint to = a.Edge[i].to;\n\t\tif (dfn[to] == 0)\n\t\t{\n\t\t\ttarjan(to);\n\t\t\tlow[n] = min(low[n], low[to]);\n\t\t}\n\t\telse if (vst[to]) //\u6211\u5199\u4e86dfn\u7248\u672c\uff0c\u636e\u8bf4low\u7248\u672c\u5e76\u4e0d\u51c6\u786e\n\t\t{\n\t\t\tlow[n] = min(low[n], dfn[to]);\n\t\t}\n\t}\n\tif (low[n] == dfn[n])\n\t{\n\t\tint now;\n\t\tgcnt++;\n\t\tdo //do-while\u4f1a\u7701\u4e0b\u4e00\u6b21\u7801\u91cf\uff0cn\u5c31\u76f4\u63a5\u4e0d\u7528\u6700\u540e\u518d\u5f39\u4e86\n\t\t{\n\t\t\tnow = stack[top--];\n\t\t\tgroup[now] = gcnt;\n\t\t\t//\u66f4\u65b0\u4e00\u4e0b\u5f53\u524dSCC\u6700\u5927\u7684id\n\t\t\tmaxid[gcnt] = max(maxid[gcnt], now);\n\t\t\tvst[now] = false;\n\t\t} while (now != n);\n\t}\n}\n// \u91cd\u65b0\u5efa\u56fe\nvoid rebuild()\n{\n\tfor (int i = 1; i <= a.cnt; i++)\n\t{\n\t\tint from = a.Edge[i].from;\n\t\tint to = a.Edge[i].to;\n\t\tif (group[from] != group[to])\n\t\t{\n\t\t\t//\u7edf\u8ba1\u5165\u5ea6\uff0c\u91cd\u65b0\u52a0\u8fb9\n\t\t\tIn[group[to]]++;\n\t\t\tb.add_edge(group[from], group[to]);\n\t\t}\n\t}\n}\n\nvoid toposort()\n{\n\tqueue<int> q;\n\tfor (int i = 1; i <= gcnt; i++)\n\t\tif (In[i] == 0)\n\t\t\tq.push(i);\n\twhile (!q.empty())\n\t{\n\t\tint from = q.front();\n\t\tq.pop();\n\t\tdp[from] = max(dp[from], maxid[from]); //\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9\u7684dp\n\t\tfor (int i = b.head[from]; i; i = b.Edge[i].next)\n\t\t{\n\t\t\tint to = b.Edge[i].to;\n\t\t\tdp[to] = max(dp[from], dp[to]); //to\u662f\u8d77\u70b9\uff0c\u66f4\u65b0\u8d77\u70b9dp\u503c\n\t\t\tif (--In[to] == 0)\n\t\t\t\tq.push(to);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint f, t;\n\t\tscanf(\"%d%d\", &f, &t);\n\t\ta.add_edge(t, f);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (dfn[i] == 0)\n\t\t\ttarjan(i);\n\t}\n\trebuild();\n\ttoposort();\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tprintf(\"%d \", dp[group[i]]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1566051816,
        "uid": 122927,
        "name": "Jelly_Goat",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "Emm...\u672c\u849f\u84bb\u53ea\u4f1a\u90bb\u63a5\u77e9\u9635\uff0c\u8fd9\u79cd\u5927\u6570\u636e\u7684\u9898\u8fd8\u662f\u5f88\u96be\u7684(\u603b\u4e0d\u80fd\u7528\u77e9\u9635\u5b58\u5427\uff0c\u4f1a\u7206\u7684\u8bf6\uff01\u53ef\u80fd\u6211\u592a\u5f31\u4e86)\u3002\u4f46\u603b\u4e0d\u80fd\u4e00\u76f4\u7528\u90bb\u63a5\u77e9\u9635\u5427\u3002\n\n\u90bb\u63a5\u8868\u6211\u592a\u5f31\u4e86\uff0c\u5c31\u4e0d\u8bb2\u4e86\uff0c\u5404\u4f4d\u53ef\u4ee5\u53bb\u7f51\u4e0a\u641c\u4e00\u4e0b\u3002\n\n\u672c\u9898\u7684\u601d\u8def\u5c31\u662f\uff0c\u53cd\u5411\u5b58\u8fb9\uff0cdfs\u904d\u5386\u3002\n\u53cd\u5411\u5b58\u8fb9\u5c31\u662f\u5b57\u9762\u610f\u601d\uff0c\u9898\u76ee\u7ed9\u4f60a-->b,\u4f60\u5c31\u5b58\u4e3ab-->a\u3002\n\u7136\u540edfs\u904d\u5386\u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\uff1a\n\n\u6b63\u5e38\u7684\u56fe\u662f\u8fd9\u6837\u7684\n![](https://cdn.luogu.com.cn/upload/pic/59311.png)\n\n\u53cd\u5411\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/59311.png)\n\n\u6211\u4eec\u7531i:n-->1\u904d\u5386\u5b83\u4eec\u80fd\u5230\u8fbe\u7684\u70b9\uff0c\u5c06\u8be5\u70b9\u7684\u6700\u5927\u503c\u8bbe\u4e3ai\u5373\u53ef\u3002\n\n**Code:**\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint cnt=0;\nint ans[100001],head[100001];\nstruct edge{\n\tint to,next;\n}Edge[100001];\nvoid add_edge(int from,int to){//\u90bb\u63a5\u8868\u5b58\u8fb9 \n\tEdge[++cnt].to=to;\n\tEdge[cnt].next=head[from];\n\thead[from]=cnt;\n}\nvoid dfs(int now,int st){//\u6df1\u641c \n\tif(ans[now]) return;//\u5982\u679c\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\uff0c\u4e0d\u662f0\u5c31\u8fd4\u56de\u3002 \n\tans[now]=st;\n\tfor(int i=head[now];i;i=Edge[i].next){//\u666e\u666e\u901a\u901a\u7684\u904d\u5386 \n\t\tdfs(Edge[i].to,st);\n\t}\n}\n\nint main(){\n\tint n,m;\n\tint a,b;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd_edge(b,a);//\u53cd\u5411\u5b58\u8fb9 \n\t}\n\tfor(int i=n;i>=1;--i){//\u7531n-->1\uff0c\u53bb\u66f4\u65b0\u6700\u5927\u503c\u3002 \n\t\tdfs(i,i);\n\t}\n\tfor(int i=1;i<=n;++i){//\u8f93\u51fa \n\t\tprintf(\"%d \",ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1558618190,
        "uid": 142110,
        "name": "yu__xuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u672c\u9898\u7b2c\u4e00\u7bc7Python\u9898\u89e3\n\n---\n\n\u770b\u5230\u9898\uff0c\u5f88\u81ea\u7136\u80fd\u60f3\u5230\u53cd\u5411\u5efa\u8fb9\uff0c\u7136\u540e\u4ece\u6700\u5927\u7684\u70b9\u5f00\u59cb\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u80fd\u5230\u7684\u6240\u6709\u70b9\uff08\u5f53\u7136\u4e0d\u5305\u62ec\u5df2\u7ecf\u5230\u8fc7\u7684\uff09\u5e76\u4f5c\u6807\u8bb0\uff0c\u76f4\u63a5\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4efd\u4ee3\u7801\n\n```python\ns=input().split()\nN,M=int(s[0]),int(s[1])\n#\u9884\u5904\u7406\ne=[[]]\nA=[None]\nfor i in range(1,N+1):\n    e.append([])\n    A.append(None)\n#\u8bfb\u5165\u5e76\u5efa\u8fb9\nfor i in range(M):\n    s=input().split()\n    U,V=int(s[0]),int(s[1])\n    e[V].append(U)\n#Dfs\u51fd\u6570\ndef Dfs(x,s):\n    if A[x]!=None:return\n    A[x]=s\n    for i in e[x]:\n        if A[i]==None:Dfs(i,s)\nfor i in range(N,0,-1):\n    if A[i]==None:Dfs(i,i)\n#\u8f93\u51fa\nfor i in range(1,N+1):\n    if i>1:print(' ',end='')\n    print(A[i],end='')\n```\n\nBut\uff0c\u5982\u65e0\u610f\u5916\uff0c\u8fd9\u4efd\u4ee3\u7801\u4ea4\u4e0a\u53bb\u4f1a__RE__\n\n\u4e0b\u8f7d\u6570\u636e\u672c\u5730\u6d4b\u4e00\u6d4b\uff0c\u53d1\u73b0\u90a3\u4e00\u5806\u9519\u8bef\u4fe1\u606f\u6700\u540e\u4f1a\u6709\u4e00\u53e5\n\n`RecursionError: maximum recursion depth exceeded`\n\n\u4e5f\u5c31\u662f\u6808\u7684\u6df1\u5ea6\u8fc7\u5927\uff08\u6808\u7684\u6700\u5927\u6df1\u5ea6\u9ed8\u8ba4\u662f$1000$\uff09\n\n\u4e8e\u662f\u6211\u4eec\u8981\u5728\u521a\u521a\u90a3\u4efd\u4ee3\u7801\u524d\u9762\u52a0\u4e0a\u8fd9\u6837\u4e24\u884c\n\n```python\nimport sys#\u5bfc\u5165sys\u5e93\nsys.setrecursionlimit(1000000)#\u8bbe\u7f6e\u6808\u7684\u6700\u5927\u6df1\u5ea6\uff08\u4e0d\u4e00\u5b9a\u89811000000\uff0c\u591f\u5927\u5c31\u884c\uff09\n```\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730AC\u4e86\n\n---\n\n~~\u7801\u98ce\u7565\u4e11\uff0c\u522b\u5410\u69fd~~\n\n\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u79c1\u4fe1\u6216\u5728\u535a\u5ba2\u4e2d\u8bc4\u8bba",
        "postTime": 1559902336,
        "uid": 110634,
        "name": "zhanghengrui",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6709\u4e00\u4e2a\u4e0d\u7528tarjan\u7684\u505a\u6cd5\uff0c\u4e0d\u77e5\u9053\u662f\u6570\u636e\u592a\u5f31\u8fd8\u662f\u6211\u7684\u505a\u6cd5\u672c\u8eab\u5c31\u662f\u5bf9\u7684\n\n\u4e00\u5f00\u59cb\u5199\u4e86\u4e00\u4e2a\u628a\u8bb0\u5f55low\u6570\u7ec4\u6539\u6210\u8bb0\u5f55\u80fd\u8fbe\u5230\u7684\u6700\u5927\u7f16\u53f7\n\n\u7ed3\u679c\u53d1\u73b0WA\u4e86\uff0c\u66f4\u65b0\u987a\u5e8f\u4e0d\u80fd\u4fdd\u8bc1\u662f\u5bf9\u7684\n\n\u7136\u540e\u6211\u591a\u66f4\u65b0\u4e86\u51e0\u6b21\uff0c\u76f4\u5230\u4efb\u610f\u8282\u70b9\u7684\u201c\u6700\u5927\u7f16\u53f7\u201d\u4fe1\u606f\u4e0d\u518d\u53d8\u5316\u4e3a\u6b62\uff0c\u7136\u540e\u5c31AC\u4e86\n\n\n\u6254\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int MAXN=100010;\nstruct edge\n{\n    int v;\n    edge *next;\n}*h[MAXN],pool[MAXN*2];\nint top,changed;\ninline void addedge(int u,int v)\n{\n    edge *tmp=&pool[top++];tmp->v=v;tmp->next=h[u];h[u]=tmp;\n}\nint vis[MAXN],hi[MAXN];\nvoid search(int u)\n{\n    vis[u]=1;\n    for(edge *tmp=h[u];tmp;tmp=tmp->next)\n    {\n        if(!vis[tmp->v])\n        {\n            search(tmp->v);\n        }\n        if(hi[tmp->v]>hi[u])\n        {\n            changed=1;//\u8fd9\u91cc\u4e5f\u662f\u5173\u952e\n            hi[u]=hi[tmp->v];\n        }\n    }\n    vis[u]=2;\n}\nint main()\n{\n    int n,m,a,b;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)hi[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        addedge(a,b);\n    }\n    //\u8fd9\u91cc\u662f\u5173\u952e\n    do\n    {\n        memset(vis,0,sizeof(vis));changed=0;\n        for(int i=1;i<=n;i++)\n        {\n            if(!vis[i])\n                search(i);\n        }\n    }while(changed);\n    //\u5173\u952e\u90e8\u5206\u5230\u6b64\u7ed3\u675f\n    for(int i=1;i<=n;i++)\n    {\n        printf(\"%d \",hi[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1504159688,
        "uid": 3346,
        "name": "oscar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u597d\u4e45\u6ca1\u66f4\u535a\u5ba2\u4e86\uff08ps\uff1a\u7ec8\u4e8e\u8003\u5b8c\u8bd5\u4e86\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff09\n\nP3916 \u56fe\u7684\u904d\u5386 ->[\u4f20\u9001\u95e8](https://www.luogu.org/problem/P3916)\n\n\u8fd9\u9898\u597d\u50cf\u662f\u4e4b\u524d\u4e00\u7801\u67d0\u573a\u6bd4\u8d5b\u7684D\u9898\uff0c\u867d\u8bf4\u662f\u9053\u7eff\u9898\uff0c\u4f46\u60f3\u660e\u767d\u5c31\u6ca1\u95ee\u9898\u3002\n\n\u53ef\u4ee5\u901a\u8fc7\u53cd\u5411\u5efa\u8fb9\u7136\u540e\u4ece\u6700\u5927\u8282\u70b9\u5f00\u59cbdfs\uff0c\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u4e0e\u8be5\u8282\u70b9\u8054\u901a\u7684\u8282\u70b9\u6807\u8bb0\uff0c\u5728dfs\u7684\u8fc7\u7a0b\u4e2d\u8bb0\u5f97\u52a0\u4e2a\u5224\u65ad\u8be5\u8282\u70b9\u662f\u5426\u88ab\u8d70\u8fc7\u5c31\u884c\u4e86\u3002\n\n\u4e0a\u4e2a\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 1e5 + 9;\nvector<int> G[MAXN];\nint n, m, a[MAXN];\nvoid dfs(int now, int x){\n\ta[now] = x;\n\tfor (int i = 0; i < G[now].size(); i++){\n\t\tif (!a[G[now][i]]) dfs(G[now][i], x);\n\t}\n}\nint main()\n{\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; i++){\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tG[y].push_back(x);\n\t}\n\tfor (int i = n; i > 0; i--){\n\t\tif (!a[i]) dfs(i, i);\n\t}\n\tfor (int i = 1; i <= n; i++) cout << a[i] << ' ';\n\treturn 0;\n}\n\n```\n",
        "postTime": 1573388977,
        "uid": 116354,
        "name": "Reko_Tang",
        "ccfLevel": 5,
        "title": "\u65e5\u5e38 2019.11.10\uff08\u9898\u89e3 P3916\uff09"
    },
    {
        "content": "~~\u795e**\u8fd9\u662f\u4e2a\u7eff\u9898\uff1f\u4f60\u9017\u6211\u73a9\u5462\u554a~~\n\n\u8fd9\u4e2a\u9898\u540c\u4e0a\u6b21[\u9898\u89e3](https://www.luogu.org/blog/luoguyisuei/solution-cf727a)\u4e00\u6837\n\n\u4e3b\u8981\u8003\u5bdf\u7684\u662f\u9006\u5411\u601d\u7ef4\u7684\u8fd0\u7528\u3002\n\n\u987a\u7740DFS\u4e0d\u4f18\u5316\u5c31\u662f\u4f5c\u6b7b\uff0c\u6bd4\u5982\u8fd9\u4e2a:\n\n1->2->3->4->\u00b7\u00b7\u00b7->100000\n\n\u8fd9\u4e2a\u4f60\u8981\u987a\u7740DFS\u5c31\u5b8c\u4e86\uff0cO($n^{2}$)\u7684\u590d\u6742\u5ea6\u4e0d\u662f\u4f60$10^{5}$\u60f3\u8f97\u5c31\u80fd\u8f97\u8fc7\u53bb\u7684\u2026\u2026\n  \n\u6240\u4ee5\u6211\u4eec\u8981\u53cd\u5411\u5efa\u8fb9:\n\n1<-2<-3<-4<-\u00b7\u00b7\u00b7<-100000\n\n\u8fd9\u6837\u4ece100000\u5f00\u59cb\u8dd1\uff0c\u6bcf\u4e00\u4e2a\u70b9\u90fd\u662f\u904d\u5386\u4e00\u6b21,\u590d\u6742\u5ea6O(n)\n\n\u6211\u76f8\u4fe1\u6ca1\u6709\u4eba\u80fd\u628a\u5e38\u6570\u5199\u523010000\u53bb\u5427\uff1f\u3010\u80fd\u5199\u52301000\u7684\u90fd\u662f\u4eba\u624d\u2026\u2026\u3011\n\n\u7136\u540e\u8bf4\u70b9\u7ec6\u8282:\n\n1. \u6570\u7ec4\u522b\u5f00\u5c0f\u4e86\u3010\u7b2c\u4e00\u6b2160\u3011\n\n2. **\u662f\u4ece\u5927\u5f00\u59cbDFS\uff01**\n\n3. \u4f46\u51e1\u5b66\u8fc7DFS\u7684\u5c31\u522b\u5199`for(int i=0;i<n;i++)`\u9664\u975e\u4f60\u5efa\u8fb9\u65f6\u6bcf\u4e2a\u70b9\u90fd\u51cf\u4e861\n\n4. \u8ba4\u771f\u7801\uff0c\u4ed4\u7ec6\u7801\uff0c\u522b\u7801\u9519\u4e86\uff0c\u6700\u597d\u4e00\u904d\u8fc7\u3010\u8fd9\u79cdDFS\u6c34\u9898\u5b66\u8fc7\u904d\u5386\u7684\u90fd\u80fd\u963f\u5e0c\u597d\u5417qaq\u3011\n\n5. \u6838\u5fc3\u662f**\u53cd\u5411\u5efa\u8fb9**\uff0c\u8bf7\u4e0d\u8981\u5efa\u53cd\u4e86\u3002\u8fd8\u6709\uff0c\u8fd9\u4e2a\u662f\u6709\u5411\u56fe\n\n\u4ee3\u7801:\n```\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#include<cstdio>\n\n#include<vector>\nusing namespace std;\nvector<int> v[233333];//vector\u8dd1DFS\nbool vis[233333];//\u662f\u5426\u8bbf\u95ee\u8fc7\uff1f\nint ans[233333];//\u7b54\u6848\n/*\u65e0\u89c6233333\u597d\u5427qaq*/\nvoid dfs(int a,int cos){//a\u662f\u73b0\u5728 cos\u662f\u6700\u5927\u7684\n\tans[a]=cos;//\u8d4b\u503c\n\tvis[a]=true;//\u6807\u8bb0\n\tfor(int i=0;i<v[a].size();i++){//\u8dd1\u5230\u4e0b\u4e00\u5c42\n\t\tif(!vis[v[a][i]]){\n\t\t\tdfs(v[a][i],cos);\n\t\t}\n\t}\n\treturn;\n}\nint main(){\n\tint n,m;\n\tcin>>n>>m;\n\tfor(int i=0;i<m;i++){//\u8f93\u5165\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tv[y].push_back(x);//\u53cd\u5411\u5efa\u8fb9\n\t}\n\tfor(int i=n;i>=1;i--){\n\t\tif(!vis[i]){//\u5343\u4e07\u8981\u628aif\u5199\u4e0a\uff0c\u4e0d\u7136\u5c31\u662fWA+TLE\n\t\t\tdfs(i,i);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){//\u8f93\u51fa\n\t\tcout<<ans[i]<<\" \";\n\t}\n\treturn 0;\n}\n```\n\n\u6709\u95ee\u9898\u53ca\u65f6\u79c1\u4fe1\u7a9d\uff0c\u6211\u4f1a\u572848\u5c0f\u65f6\u5185\u56de\u590d\u6ef4\u3010\u8282\u5047\u65e524\u5c0f\u65f6\u3011\n\nThe End.\n",
        "postTime": 1570974885,
        "uid": 122605,
        "name": "\u7075\u5149\u4e00\u95ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u840c\u65b0\u592a\u83dc\u4e86\uff0c\u53ea\u4f1a\u5199\u5355\u6e90\u6700\u77ed\u8def\uff0c\u8fd9\u9898\u5927\u4f6c\u4eec\u90fd\u662fDFS\uff0c\u4f46\u662f\u672c\u5b71\u5f31\u5e76\u4e0d\u4f1aDFS\uff0c\u6240\u4ee5\u5c31\u7528SPFA\u8fc7\u4e86\u3002\n\u56fe\u7684\u904d\u5386\uff0c\u987e\u540d\u601d\u4e49\u8ba9\u6bcf\u4e2a\u70b9\u90fd\u8dd1\u4e00\u6b21\uff0c\u65e2\u7136\u4e00\u6b21SPFA\u4e0d\u80fd\u8dd1\u8fc7\u6240\u6709\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u591a\u8dd1\u51e0\u6b21\u3002\n\u4e3e\u4e2a\u5c0f\u70b9\u7684\u6837\u4f8b\n\n5 5\n\n1 2\n\n2 4\n\n1 3\n\n2 5\n\n3 4\n\n![\u6837\u4f8b\u56fe\u7247](http://ae01.alicdn.com/kf/HTB1PsRBcRGw3KVjSZFD760WEpXaK.png)\n\n~~\u624b\u753b\u7684\u56fe\u6709\u70b9\u4e11~~\n\n\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5355\u5355\u4ece5\u8dd1\u4e00\u6b21\u53cd\u5411\u8fb9\u662f\u4e0d\u80fd\u6c42\u51fa\u6bcf\u4e2a\u8fb9\u6700\u5927\u7684\u503c\u7684\uff0c\u4f8b\u59823\u6700\u5927\u503c\u5e94\u8be5\u662f4\uff0c\u6240\u4ee5\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u591a\u8dd1\u51e0\u6b21SPFA\u4e86\uff0c\u4ece4\u8fd9\u4e2a\u70b9\u518d\u5f00\u59cb\u8dd1\u4e00\u6b21\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u6bcf\u4e2a\u70b9\u90fd\u8dd1\u4e00\u6b21SPFA  1e5\u7684\u6570\u636e\u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u6700\u5927\u7684\u70b9\u5f00\u59cb\u8dd1\uff0c\u5e76\u4e14\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u6709\u6ca1\u6709\u5230\u8fc7\uff0c\u5982\u679c\u5230\u8fc7\u5c31\u4e0d\u7528\u518d\u8dd1\u4e00\u6b21\u4e86\uff0c\u56e0\u4e3a\u662f\u4ece\u5927\u5230\u5c0f\u8dd1\u7684\uff0c\u6240\u4ee5\u5982\u679c\u5230\u8fc7\u90a3\u4e2a\u70b9\uff0c\u90a3\u4e48\u5fc5\u5b9a\u662f\u90a3\u4e2a\u70b9\u80fd\u5230\u7684\u6700\u5927\u503c\u3002\n\n\u7528\u7684\u65f6\u95f4\u4e5f\u5e76\u4e0d\u662f\u7279\u522b\u591a\n![](http://ae01.alicdn.com/kf/HTB1vjRAcRKw3KVjSZTE763uRpXak.png)\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nstruct f{\n\tint x,y,next;\n}a[500050];\nint b[500050],head[500050],vis[500050];\nbool p[500050];\nbool cmp(f a,f b)\n{\n\treturn a.y>b.y;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tb[i]=i;\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&a[i].y,&a[i].x);\t\t//\u56e0\u4e3a\u662f\u4ece\u5927\u5230\u5c0f\u8dd1\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5b58\u53cd\u5411\u8fb9\u3002\n\t\ta[i].next=head[a[i].x];\n\t\thead[a[i].x]=i;\n\t}\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tif(p[i]==false)\t\t//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u6709\u6ca1\u6709\u8dd1\u5230\u8fc7\u3002\n\t\t{\n\t\t\tqueue<int>q;\t\t\t//\u867d\u7136SPFA\u5df2\u7ecf\u6b7b\u4e86\uff0c\u4f46\u662f\u56e0\u4e3aSPFA\u5199\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u672c\u5b71\u5f31\u8fd8\u662f\u6bd4\u8f83\u559c\u6b22\u5199SPFA\u3002\u3002\u3002\n\t\t\tq.push(i);\n\t\t\twhile(!q.empty())\n\t\t\t{\n\t\t\t\tint u=q.front();\n\t\t\t\tp[u]=true;\t\t//\u6807\u8bb0\u5df2\u7ecf\u6765\u8fc7\u8fd9\u4e2a\u70b9\u4e86\u3002\n\t\t\t\tq.pop();\n\t\t\t\tvis[u]=false;\n\t\t\t\tfor(int i=head[u];i;i=a[i].next)\n\t\t\t\t{\n\t\t\t\t\tint t=a[i].y;\n\t\t\t\t\tif(b[a[i].y]<b[u])\n\t\t\t\t\t{\n\t\t\t\t\t\tb[a[i].y]=b[u];\n\t\t\t\t\t\tif(!vis[t])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tq.push(t);\n\t\t\t\t\t\t\tvis[t]=1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d \",b[i]);\n\t}\n}\n```\n\u5982\u679c\u54ea\u91cc\u8fd8\u6709\u95ee\u9898\u5e0c\u671b\u5927\u4f6c\u80fd\u6307\u6b63\u4e00\u4e0b\u3002",
        "postTime": 1560430257,
        "uid": 155626,
        "name": "\u8001\u54b8\u9c7c\u4e86",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u770b\u4e86\u8fd9\u4e48\u591aBFS\uff0c\u6211\u8fd8\u662f\u9009\u62e9\u7528\u722c\u5c71\u3002\u3002\u3002\n# \u672c\u9898\u722c\u5c71AK!\n```cpp\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint n,m,biggest[100005];//biggest\u6307\u8be5\u70b9\u80fd\u8fbe\u5230\u7684\u6700\u5927\u70b9\u7f16\u53f7\nstruct list\n{\n\tint a,b;\n} a[100005];\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) biggest[i]=i;\n\tfor(int i=1;i<=m;i++) scanf(\"%d%d\",&a[i].a,&a[i].b),biggest[a[i].a]=max(biggest[a[i].a],biggest[a[i].b]);\n\tfor(int l=1;l<94;l++)\n\t\tfor(int i=1;i<=m;i++) biggest[a[i].a]=max(biggest[a[i].a],biggest[a[i].b]);\n\tfor(int i=1;i<=n;i++) printf(\"%d \",biggest[i]);\n \treturn 0;\n}\n\n```\n\u81ea\u5df1\u4eb2\u6d4b\uff0c\u672c\u9898\u6570\u636e\uff0c\u6700\u5c11\u722c93\u904d\u3002",
        "postTime": 1541765261,
        "uid": 43058,
        "name": "\u65e0\u59b9\u7684\u59b9\u63a7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u6765\u4e2a\u975e\u6b63\u89e3\u4f46\u662f\u5f88\u597d\u5199\u4e14\u53ef\u4ee5A\u6389\u7684\u65b9\u6cd5\u3002\n\n\u5f00\u4e00\u4e2a\u6570\u7ec4$zd$\u8bb0\u5f55\u4ece\u67d0\u70b9\u51fa\u53d1\u80fd\u591f\u5230\u8fbe\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9\u3002\u4ece\u6bcf\u4e00\u4e2a\u70b9$dfs$\u540c\u65f6\u6253$visit$\u8bb0\u5f55\u4fdd\u8bc1\u4e0d\u91cd\u590d\u904d\u5386\u540c\u4e00\u4e2a\u8282\u70b9\uff0c\u4fdd\u8bc1\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5bf9\u4e8e\u4e00\u4e2a\u70b9$i$\uff0c\u904d\u5386\u5b83\u8fde\u5411\u7684\u70b9$j$\uff0c\u5982\u679c$visit$\u8fc7\u5219\u8ba9$zd[i]$\u53d6$max(zd[i],zd[j])$\uff0c\u5426\u5219\u5148$dfs$\u8282\u70b9$j$\u4e4b\u540e\u518d\u53d6$max$\u3002\n\n\u53d1\u73b0\u8fd9\u6837\u4f1aWA\u3002\u8003\u8651\u8fd9\u6837\u4e00\u5f20\u56fe\uff1a$1to3,3to2,2to1$\u3002\u5148$dfs$\u8282\u70b9$1$\uff0c$1$\u7ee7\u7eed\u5230$3$\uff0c\u7136\u540e\u5230$2$\uff0c\u6b64\u65f6$2$\u65e0\u5904\u53ef\u53bb\uff08$1$\u5df2\u7ecf$visit$\u4e86\uff09\uff0c\u53ea\u80fd\u53d6$zd[2]=max(zd[1],zd[2])=2$\u3002\u7136\u800c\u4e8b\u5b9e\u4e0a\u56e0\u4e3a$1$\u8fd8\u672a\u53d6$max$\u5f97$3$\uff08$dfs$\u7684\u5ef6\u8fdf\u6027\uff09\uff0c\u6240\u4ee5$zd[2]$\u8ddf\u7740\u5f97\u5230\u4e86\u9519\u8bef\u7684\u7b54\u6848$2$\uff0c\u5bfc\u81f4\u8f93\u51fa\u9519\u8bef\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u8003\u8651\u518d\u6b21$dfs$\uff0c\u65b9\u6cd5\u662f$memset\\space visit$\u4e14\u4fdd\u7559\u4e0a\u4e00\u6b21\u7684$zd$\u540e\u518d$dfs$\u4e00\u904d\uff0c\u8fd9\u6837\u591a\u6b21$dfs$\u540e\u53ef\u4ee5\u8ba9\u5ef6\u8fdf\u7684\u7b54\u6848\u63a8\u56de\u5230\u5b83\u6b63\u786e\u7684\u4f4d\u7f6e\uff0c\u5f97\u5230\u6b63\u786e\u7b54\u6848\u3002\u8fd9\u6837\u7684\u505a\u6cd5\u5f88\u7384\u5b66\uff0c\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u5361\u6389\uff0c\u4f46\u662f\u4e09\u6b21$dfs$\u540e\u5c31\u80fdA\u4e86\u3002\u4ee3\u7801\u4e2d\u5199\u4e86$5$\u6b21$dfs$\uff0c\u4fdd\u8bc1\u6b63\u786e\u6027\uff08\u4f60\u4e0d\u80fd\u8981\u6c42\u7a0b\u5e8f\u603b\u662f\u5b8c\u5168\u6b63\u786e\u7684\uff0c\u5b57\u7b26\u4e32$hash$\u4f5c\u4e3a\u4e00\u79cd\u6b63\u786e\u7684\u7b97\u6cd5\u8fd8\u80fd\u88ab\u5361\u6389\u5462\uff09\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\n#include<queue>\nusing namespace std;\nint zd[200000]={0};\nint n,m;\nstruct Edge\n{\n    int t,nexty;\n}edge[1000000];\nint head[200000]={0},cnt=0;\nvoid add(int a,int b)\n{\n    cnt++;\n    edge[cnt].t=b;\n    edge[cnt].nexty=head[a];\n    head[a]=cnt;\n}\nbool dg[200000]={0};\nvoid dfs(int node)\n{\n    dg[node]=true;\n    for(int i=head[node];i;i=edge[i].nexty)\n    {\n        if(!dg[edge[i].t])dfs(edge[i].t);\n        zd[node]=max(zd[node],zd[edge[i].t]);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)zd[i]=i;\n    int a,b;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        add(a,b);\n    }\n    for(int i=1;i<=n;i++)dfs(i);\n    for(int i=1;i<=n;i++)dg[i]=false;\n    for(int i=1;i<=n;i++)dfs(i);\n    for(int i=1;i<=n;i++)dg[i]=false;\n    for(int i=1;i<=n;i++)dfs(i);\n    for(int i=1;i<=n;i++)dg[i]=false;\n    for(int i=1;i<=n;i++)dfs(i);\n    for(int i=1;i<=n;i++)dg[i]=false;\n    for(int i=1;i<=n;i++)dfs(i);\n    for(int i=1;i<=n;i++)printf(\"%d \",zd[i]);\n    printf(\"\\n\");\n    return 0;\n}\n```\n",
        "postTime": 1552036375,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u51fa $N$ \u4e2a\u70b9\uff0c $M$ \u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $v$ \uff0c\u6c42 $A(v)$ \u8868\u793a\u4ece\u70b9 $v$ \u51fa\u53d1\uff0c\u80fd\u5230\u8fbe\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9\u3002\n\n\u6211\u4eec\u9006\u5411\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u6839\u636e\u8d2a\u5fc3\uff0c\u4ece\u70b9\u7f16\u53f7\u6700\u5927\u7684\u70b9\u9006\u7740\u6709\u5411\u8fb9\u5411\u5916\u6269\u5c55\uff0c\u80fd\u6269\u5c55\u5230\u7684\u6240\u6709\u7684\u70b9\u7684\u7b54\u6848\u4e00\u5b9a\u662fn\u3002\n\n\u7136\u540e\u4ece\u70b9\u7f16\u53f7\u6b21\u5927\u7684\u70b9\u9006\u7740\u6709\u5411\u8fb9\u5411\u5916\u6269\u5c55\uff0c\u4e0d\u53bb\u8bbf\u95ee\u90a3\u4e9b\u5df2\u7ecf\u627e\u5230\u7b54\u6848\u7684\u70b9\uff0c\u80fd\u6269\u5c55\u5230\u7684\u6240\u6709\u70b9\u7684\u7b54\u6848\u662fn-1\n\n\u7136\u540e\u4ece\u70b9\u7f16\u53f7\u4e3an-2...\n\n\u6240\u4ee5\u6211\u4eec\u5f97\u51fa\u6765\u4e86\u4e00\u4e2a\u8d2a\u5fc3+dfs\u7b97\u6cd5\n\n```\n#include<cstdio>\n#include<iostream>\nusing namespace std;\n//\u5efa\u7acb\u53cd\u5411\u8fb9\uff0c\u7136\u540e\u8fdb\u884cn\u6b21dfs \nstruct edge\n{int v,ne;}a[100010];\nint n,m,d[100010],h[100010],tmp;\nvoid add(int x,int y)\n{\n\ta[++tmp]=(edge){y,h[x]};\n\th[x]=tmp;\n}\nvoid dfs(int x,int key)\n{\n\td[x]=key;\n\tfor(int i=h[x];i!=0;i=a[i].ne)\n\t{\n\t\tif(d[a[i].v]==0)\n\t\t{\n\t\t\tdfs(a[i].v,key);\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int liu,chen,i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&liu,&chen);\n\t\tadd(chen,liu);\n\t}\n\tfor(int i=n;i>=1;i--)\n\t\tif(d[i]==0)\n\t\t\tdfs(i,i);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d%c\",d[i],i==n?'\\n':' ');\n\treturn 0;\n}\n```",
        "postTime": 1529754918,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u5728\u6b64\u8981\u611f\u8c22\u5de8\u4f6c [LBY](https://www.luogu.org/space/show?uid=52881) \u7684\u601d\u8def\u3002\n\n\u9996\u5148\u5b9a\u4e49 $f[i]$ \u4e3a\u4ece\u7b2c $i$ \u4e2a\u70b9\u51fa\u53d1\u80fd\u5230\u8fbe\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9\u3002\n\n\u6240\u4ee5\u4e00\u5f00\u59cb `f[i]=i`\u3002\n\n\u63a5\u4e0b\u6765\u8981\u7528\u5230\u4e00\u4e2a\u5e38\u8bc6\uff1a\n\n\u5df2\u77e5 $x$ \u548c $y$ \u8fde\u4e86\u4e00\u6761\u6709\u5411\u8fb9\uff08\u5373 x=>y\uff09\uff0c\u90a3\u4e48\u7b2c $y$ \u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u6700\u5927\u70b9\uff08\u5373 `f[y]`\uff09\uff0c\u7b2c $x$ \u4e2a\u70b9\u4e5f\u80fd\u5230\u8fbe\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u677e\u5f1b\u3002\n\n\u4e0d\u8fc7\u677e\u5f1b\u4e00\u6b21\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u6709\u4e00\u4e9b\u8def\u5f84\u53ef\u80fd\u8981\u7ecf\u8fc7\u5f88\u591a\u4e2a\u70b9\u3002\u8fd9\u91cc\u7528\u4e86 `while` \u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u540e\u6765\u95ee\u4e86\u8001\u5e08\uff0c\u5927\u6982\u677e\u5f1b 100 \u6b21\u5c31\u53ef\u4ee5\u4e86\u3002\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982 $O(100M)$\u3002~~\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u5f88\u7384\u5b66~~\n\n[AC\u8bc1\u660e](https://www.luogu.org/record/show?rid=7867549)\u3002204ms.\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Link{\n\tint x,y;\n}link[100002];\nint n,m,f[100002];\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t\tcin>>link[i].x>>link[i].y;\n\tfor(int i=1;i<=n;i++)//\u521d\u59cb\u5316 \n\t\tf[i]=i;\n\tfor(bool find=true;find;){\n\t\tfind=false;\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tif(f[link[i].x]<f[link[i].y]){//\u677e\u5f1b \n\t\t\t\tfind=true;\n\t\t\t\tf[link[i].x]=f[link[i].y];\n\t\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tcout<<f[i]<<\" \";\n\treturn 0;\n}\n```\n\n\u6700\u540e\u518d\u6b21\u611f\u8c22\u5de8\u4f6c [LBY](https://www.luogu.org/space/show?uid=52881)\uff01",
        "postTime": 1529127518,
        "uid": 53118,
        "name": "gzw2005",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "~~\u6000\u7591\u96be\u5ea6\u6253\u9519\u4e86~~\n# **dfs\u4efb\u6027AC**\n~~ruoju\u9898\u89e3~~\u5927\u4f6c\u52ff\u55b7\n##  _\u6b65\u5165\u6b63\u9898->_ \n```cpp\n#include<iostream>\n#include<vector>\nusing namespace std;\n#define B b[d][i]\nint n, m, u, v, a[100001];\nvector<int>b[100001];//\u90bb\u63a5\u8868\u5b58\u8fb9\u9632MLE\nvoid dfs(int d,int z);//dfs\u539f\u578b\uff1ad\u8868\u793a\u70b9\uff0cz\u8868\u793a\u5c06\u904d\u5386\u5230\u7684\u70b9\u6539\u4e3az\nint main() {\n\tcin >> n >> m;\n\twhile (m--)cin >> u >> v, b[v].push_back(u);//\u6709\u5411\u8fb9\u53cd\u7740\u5b58\n\tfor (int i(n); i >= 1; --i)dfs(i, i);//\u4e3a\u4ec0\u4e48\u53cd\u7740\u505a\uff0c\u5f80\u4e0b\u770b\n\tfor (int i(1); i <= n; ++i)cout << a[i] << ' ';\n\treturn 0;\n}\nvoid dfs(int d, int z) {\n\tif (a[d] >= z)return;//\u4fdd\u8bc1\u83b7\u5f97\u6700\u5927\u503c\n\ta[d] = z;\n\tfor (int i(0), s(b[d].size()); i < s; ++i)dfs(B, z);//\u8fd9\u5c31\u662f\u5173\u952e\u4e86\n\t/*\n\t\u6709\u5411\u8fb9\u53cd\u7740\u5b58\uff1a\n\t\u662f\u4e3a\u4e86\u5c06\u70b9\u5bfb\u627e\u6700\u5927\u70b9\u7684\u95ee\u9898\n\t\u6539\u4e3a\u6700\u5927\u70b9\u5bfb\u627e\u70b9\u7684\u95ee\u9898\n\t\u8fd9\u6837\u6240\u6709\u6700\u5927\u70b9\u904d\u5386\u5230\u7684\u70b9\n\t\u90fd\u53ef\u4ee5\u6539\u4e3a\u6700\u5927\u70b9\u7684\u503c\n\t\u56e0\u6b64\u4ece\u9ad8\u5f80\u4f4edfs\n\t\u5e76\u4fdd\u8bc1\u904d\u5386\u8fc7\u7684\u70b9\u4e0d\u4f1a\u88ab\u518d\u6b21\u6539\u53d8\n\t~\u795e\u5947\u5427~\n\t*/\n}\n```",
        "postTime": 1527941159,
        "uid": 66199,
        "name": "Bring",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u8bdd\u8bf4\u8fd9\u9898\u5728\u5f88\u540e\u9762\u2026\u2026\u597d\u50cf\u6ca1\u5565\u4eba\u505a\u2026\u2026\n\n\u601d\u8def\u6bd4\u8f83\u7b80\u5355 \u4e00\u5f00\u59cb\u4ee5\u4e3a\u76f4\u63a5\u4e00\u4e2adfs+dp\u80fd\u76f4\u63a5\u8fc7\u2026\u2026\u53ef\u662f\u5fd8\u8bb0\u8003\u8651\u4e86\u6709\u5411\u56fe\u4e2d\u7684\u73af\u7684\u60c5\u51b5\u7ed3\u679c\u7206\u70b8\u4e86\u2026\u2026\n\n\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u6570\u636e\uff1a\n\ninput:\n4 4\n1 2\n2 3\n3 1\n2 4\noutput:\n\n4 4 4 4\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u522b\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\n\n- \u5f88\u663e\u7136 \u7528Tarjan(or Kosaraju)\u5148\u6765\u7f29\u70b9\uff0c\u628a\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\n\n\u7684\u4e2d\u70b9\u7f16\u53f7\u6700\u5927\u7684\u4f5c\u4e3a\u8fd9\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u6743\u503c\uff0c\u7136\u540e\u5728dfs\u4e2d\u8fdb\u884cdp\uff0c\n\n\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f$dp[u]=\\max(dp[u],dp[v])$\u5176\u4e2d$u$\u4e3a$v$\u7684\u513f\u5b50\uff0c\n\n\u8fd9\u4e2a\u9898\u81f3\u6b64\u8fce\u5203\u800c\u89e3\u3002\n\n\n\n\n\n\n\n    \n\n```cpp\n#include <bits/stdc++.h>\n#define For(i, l, r) for(int i = (l), _end_ = (int)(r); i <= _end_; ++i)\n#define Fordown(i, r, l) for(int i = (r), _end_ = (int)(l); i >= _end_; --i)\n#define Set(a, v) memset(a, v, sizeof(a))\n#define Travel(i, u, G) for(int i = G.Head[u]; i; i = G.Next[i])\n//\u5bf9\u4e8e\u591a\u56fe\u7684\u8bbf\u95ee\u66f4\u52a0\u4fbf\u6377 \nusing namespace std;\ninline int read(){\n  int x = 0, fh = 1; char ch;\n  for(; !isdigit(ch); ch = getchar()) if (ch == '-') fh = -1;\n  for(; isdigit(ch); ch = getchar()) x = (x<<1) + (x<<3) + (ch^'0');\n  return x * fh;\n}\nbool chkmin (int &a, int b) {return b < a ? a = b, 1 : 0; }\nbool chkmax (int &a, int b) {return b > a ? a = b, 1 : 0; }\nconst int N = 100100;\nint dp[N];\nbool vis[N];\nstruct graph {\n    int to[N], Next[N], Head[N], e;\n    void init() {\n        Set(Head, 0);\n        e = 0;\n    }\n    void add_edge (int u, int v) {\n        to[++e] = v;\n        Next[e] = Head[u];\n        Head[u] = e;\n    }\n};\ngraph G1, G2;\n//G1\u662f\u4e4b\u524d\u7684\u56fe\uff0cG2\u662f\u540e\u6765\u91cd\u65b0\u5efa\u7684\u56fe \nint val[N];\nvoid dfs(int u) {\n    if (vis[u]) return ;\n    vis[u] = true;\n    dp[u] = val[u]; //\u4e00\u5f00\u59cb\u521d\u59cb\u5316\u4e3a\u5b83\u7684\u6743\u503c \n    Travel(i, u, G2) {\n        int v = G2.to[i];\n        dfs(v);\n        dp[u] = max(dp[u], dp[v]);\n        //\u52a8\u6001\u8f6c\u79fb \n    }\n}\nint lowlink[N], dfn[N], dfs_clock = 0;\nint sccno[N], scc_cnt = 0;\nstack <int> S;\nvoid Tarjan(int u) {\n    dfn[u] = lowlink[u] = ++dfs_clock;\n    S.push(u);\n    Travel (i, u, G1) {\n        int v = G1.to[i];\n        if (!dfn[v] ) {\n            Tarjan (v);\n            chkmin (lowlink[u], lowlink[v]);\n        } else if (!sccno[v]) \n            chkmin (lowlink[u], dfn[v]);\n    }\n    if (lowlink[u] == dfn[u]) {\n        ++scc_cnt;\n        for(;;) {\n            int x = S.top(); S.pop();\n            sccno[x] = scc_cnt;\n            chkmax (val[scc_cnt], x);\n            //\u628a\u6bcf\u4e2a\u8054\u901a\u5757\u7684\u6743\u503c\u7f6e\u4e3a\u8fd9\u4e2a\u8054\u901a\u5757\u4e2d\u6240\u6709\u70b9\u7684\u6700\u5927\u5e8f\u53f7 \n            if (x == u) break;\n        }\n    }\n}\n//\u5f88\u6807\u51c6\u7684Tarjan\u7f29\u70b9 \nvoid Rebuild (int n) {\n    For (i, 1, n)\n        Travel (j, i, G1) {\n            int u = i, v = G1.to[j];\n            if (sccno[u] == sccno[v]) continue;\n            G2.add_edge(sccno[u], sccno[v]);\n        }\n```\n}//\u91cd\u5efa\u56fe\n\n    \n        \n        \n        \n```cpp\nint main(){\n    G1.init(); G2.init();\n    int n = read(), m = read();\n    For (i, 1, m) {\n        int u = read(), v = read();\n        G1.add_edge (u, v);\n    }\n    For (i, 1, n)\n        if (!dfn[i] ) Tarjan(i);\n    Rebuild(n);\n    For (i, 1, scc_cnt)\n        if (!vis[i] ) dfs(i);\n    For (i, 1, n)\n        printf (\"%d \", dp[sccno[i]]);\n        //\u6ce8\u610f \u4e4b\u540e\u7684\u6bcf\u4e2a\u6570\u8981\u53bb\u5b83\u7684\u5f3a\u8fde\u901a\u5206\u5757\u4e2d \u5bfb\u627e\u5176\u6700\u5927\u503c \n    return 0;\n}\n```",
        "postTime": 1502544352,
        "uid": 19128,
        "name": "zjp_shadow",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u9898\u89e3\uff0c\u6c42\u8fc7\u3002\u3002\u3002\n\n\u849f\u84bb\u4e0d\u4f1atarjan dp.balabala\u3002\u3002\u3002\u6240\u4ee5\u53ea\u80fd\u6765\u4e00\u4e2adfs\u4e86\u3002\n**\u601d\u8def\uff1a\u5012\u7740dfs\uff0c\u904d\u5386\u5230\u7684\u70b9\u5373\u4e3a\u6700\u5927\u3002**\n\n\u4e3a\u4ec0\u4e48\u561e\uff1f\u56e0\u4e3a\u662f\u5012\u7740\uff0c\u6240\u4ee5\u4ece\u540e\u5f80\u524d\u904d\u5386\u80fd\u904d\u5386\u5230\u7684\u70b9\uff0c\u5b83\u7684\u503c\u5c31\u662f\u5f53\u524d\u7684\u70b9\u3002\n\n\u5176\u5b9e\u8fd8\u662f\u60f3\u5b89\u5229\u4e00\u4e0b\u524d\u5411\u661f\u5b58\u8fb9\uff08\u867d\u7136\u8fd9\u73a9\u610f\u5728\u6d1b\u8c37\u91cc\u6ee1\u5929\u98de\u4e86\uff09\n\u4f46\u662f\u6321\u4e0d\u4f4f\u597d\u7528\u554a\n\n\n\n\n```cpp\n#include<bits/stdc++.h>//\u53ef\u7231\u7684\u4e07\u80fd\u5934\nusing namespace std;\nconst int maxn=100100;\nint head[maxn],cnt;\nvoid read(int &x)//\u7b2c\u5341\u4e2a\u70b9\u592abt\uff0c\u6240\u4ee5\u7528\u4e86\u8bfb\u5165\u4f18\u5316\n{\n    int f=1;x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    x*=f;\n}\nstruct edge{int to;int next;}e[maxn];\nint n,m,x,y;\nint maxm[maxn];\nvoid addedge(int from,int to)\n{\n\te[++cnt].next=head[from];\n\te[cnt].to=to;\n\thead[from]=cnt;\n}\nvoid dfs(int now,int ans)//dfs\n{\n\tif(maxx[now])//\u5982\u679c\u904d\u5386\u5230\u7684\u70b9\u6570\u503c\u4e0d\u4e3a0\uff0c\u5c31\u662f\u5728\u4e4b\u524d\u904d\u5386\u8fc7\u4e86\uff0c\u90a3\u5c31pass\n\treturn;\n\tmaxm[now]=ans;\n\tfor(int i=head[now];i;i=e[i].next)//\u524d\u5411\u661f\u8dd1\u56fe\n\tif(!maxm[e[i].to])\n\tdfs(e[i].to,ans);\n\treturn;\n}\nint main()\n{\n\tread(m);read(n);//\u8bfb\u5165\u4f18\u5316\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tread(x),read(y);//\u8bfb\u5165\u4f18\u5316\n\t\taddedge(y,x);//\u524d\u5411\u661f\u5012\u5b58\u56fe\n\t}\n\tfor(int i=m;i;i--)//\u4ece\u540e\u5f80\u524ddfs\n\tdfs(i,i);\n\tfor(int i=1;i<=m;i++)\n\tprintf(\"%d \",maxm[i]);//\u8f93\u51fa\u53ef\u7231\u7684\u7b54\u6848\n\treturn 0;\n}\n\t\n```\n\n\u524d\u5411\u661f\n```cpp\nstruct edge{int to;int next;//int dis;}e[maxn];//\u7b2ci\u6761\u8fb9\u7684\u7ec8\u70b9,\u7b2ci\u6761\u8fb9\u540c\u8d77\u70b9\u7684\u4e0b\u4e00\u6761\u8fb9\u7684\u5b58\u50a8\u4f4d\u7f6e\n//head[]\u662fi\u8fd9\u6761\u8fb9\u7684\u5b58\u50a8\u4f4d\u7f6e\u3002\nvoid addedge(int from,int to)\n{\n\te[++cnt].next=head[from];\n\te[cnt].to=to;\n    //e[cnt].dis=dis; \u6b64\u4e3a\u65e0\u6743\u56fe\uff0c\u6240\u4ee5...\u5982\u679c\u662f\u6709\u6743\u56fe\uff0c\u52a0\u4e0a\u8fd9\u884c\u3002\n\thead[from]=cnt;\n}\n\nfor(int i=head[now];i;i=e[i].next)//\u904d\u5386\n```\n\u840c\u65b0\u6c42\u8fc7\u5ba1 qwq",
        "postTime": 1538796688,
        "uid": 39150,
        "name": "\u859b\u5b9a\u8c14\u7684\u9c7c",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u5411\u56fe\u4e2d\u6240\u6709\u70b9\u80fd\u591f\u5230\u8fbe\u7684\u8282\u70b9\u7684\u6700\u5927\u7f16\u53f7\n\n\u4e00\u770b\u5230\u8fd9\u4e2a**\u6700\u5927\u7f16\u53f7**\uff0c\u5c31\u60f3\u5230\u4e86tarjan\u7b97\u6cd5\u4e2d\u7684low\u6570\u7ec4\uff0c\u4e8e\u662f\u5c31\u8003\u8651\u7528tarjan\u6765\u7f29\u70b9\u3002\n\n\u7f29\u5b8c\u70b9\u4ee5\u540e\u5f97\u5230\u4e86\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u4ee50\u4e3a\u8d85\u7ea7\u6e90\u70b9\uff0c\u5411\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\uff0c\u7136\u540e\u505a\u4e00\u6b21\u6811\u89c4\u5c31\u884c\u4e86\u3002\n\n### \u8f6c\u79fb\u65b9\u7a0b\uff1af [ x ] = max ( f [ y ] , d [ x ] ) (y\u2208son [ x ] , d [ x ] \u8868\u793a\u7f16\u53f7\u4e3ax\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u6700\u5927\u539f\u8282\u70b9\u7f16\u53f7\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010,M=1000010;\n\nint head[N],ver[M],next[M],dfn[N],low[N],c[N];\nint headc[N],verc[M],nextc[M],valuec[N];\nint n,m,tot,totc,num;\nint sta[N],top;\nbool ins[N];\nvector<int> scc[N];\nint cnt;\nint f[N],in[N];\nbool visit[N];\n\nvoid add(int x,int y) //\u539f\u6765\u7684\u8fb9\n{\n\tver[++tot]=y,next[tot]=head[x],head[x]=tot;\n}\n\nvoid add_c(int x,int y) //\u7f29\u70b9\u540e\u7684\u8fb9\n{\n\tverc[++totc]=y,nextc[totc]=headc[x],headc[x]=totc,in[y]++;\n}\n\nvoid tarjan(int x) //tarjan\u7f29\u70b9\n{\n\tdfn[x]=low[x]=++num;\n\tsta[++top]=x,ins[x]=true;\n\tfor(int i=head[x];i;i=next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(ins[y]) low[x]=min(low[x],low[y]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tcnt++;\n\t\tint y;\n\t\tfor(;x!=y;)\n\t\t{\n\t\t\ty=sta[top--],ins[y]=false;\n\t\t\tc[y]=cnt,scc[cnt].push_back(y);\n\t\t\tvaluec[cnt]=max(valuec[cnt],y);\n\t\t}\n\t}\n}\n\nvoid init() //\u521d\u59cb\u5316\u4e0d\u8981\u4ecb\u610f\n{\n\tmemset(head,0,sizeof(head));\n\tmemset(ver,0,sizeof(ver));\n\tmemset(next,0,sizeof(next));\n\tmemset(headc,0,sizeof(headc));\n\tmemset(verc,0,sizeof(verc));\n\tmemset(nextc,0,sizeof(nextc));\n\tmemset(sta,0,sizeof(sta));\n\tmemset(ins,false,sizeof(ins));\n\tmemset(c,0,sizeof(c));\n\tmemset(f,0,sizeof(f));\n\tmemset(visit,false,sizeof(visit));\n\tmemset(in,0,sizeof(in));\n\tfor(int i=1;i<=n;i++) scc[i].clear();\n\ttot=totc=top=num=cnt=0;\n}\n\nvoid dp(int x) //\u6811\u89c4\n{\n\tf[x]=valuec[x];\n\tvisit[x]=true;\n\tfor(int i=headc[x];i;i=nextc[i])\n\t{\n\t\tint y=verc[i];\n\t\tif(!visit[y]) dp(y);\n\t\tf[x]=max(f[x],f[y]);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tinit();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a,b);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i]) tarjan(i);\n\tfor(int x=1;x<=n;x++)\n\t{\n\t\tfor(int i=head[x];i;i=next[i])\n\t\t{\n\t\t\tint y=ver[i];\n\t\t\tif(c[x]==c[y]) continue;\n\t\t\tadd_c(c[x],c[y]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!in[i]) add_c(0,i);\n\tdp(0);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",f[c[i]]);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1532091564,
        "uid": 54728,
        "name": "wangxuye",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u5c31\u6211\u7ebf\u6bb5\u6811\u5417\uff1f\uff08\u55ef\uff1f\uff1f\uff1f\u8fd9\u548c\u7ebf\u6bb5\u6811\u6709\u5565\u5173\u7cfb\uff1f\uff09\n\n~~\u5176\u5b9e\u4e0d\u7528\u7ebf\u6bb5\u6811\u7684\uff0c\u7528\u4e8c\u5206\u4e5f\u53ef\u4ee5~~\n\n\u4e00\u5f00\u59cb\u6211\u8fd8\u771f\u7684\u50bb\u50bb\u5730\u53bb\u8dd1\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7136\u540e\u592a\u83dc\u5199\u70b8\u4e86\uff0c\u4e8e\u662f\u6362\u4e86\u4e00\u79cd\u601d\u8def\uff0c\u65e2\u7136\u6211\u4eec\u8981\u6c42\u6bcf\u4e2a\u70b9\u80fd\u5230\u591a\u5927\u7684\u70b9\uff0c\u4e0d\u5982\u4ece\u5f53\u524d\u6700\u5927\u7684\u70b9\u904d\u5386\u4e00\u904d\uff0c\u8d4b\u503c\uff0c\u7136\u540e\u518d\u4ece\u5269\u4e0b\u7684\u672a\u88ab\u8d4b\u503c\u7684\u70b9\u4e2d\u9009\u51fa\u6700\u5927\u7684\uff0c\u7136\u540e\u7ee7\u7eed\u904d\u5386\uff0c\u4e00\u76f4\u8fd9\u6837\u77e5\u9053\u5168\u90e8\u904d\u5386\uff0c\u8fd9\u6837\u53cd\u5411\u6765\u4e0d\u4ec5\u53ef\u4ee5\u51cf\u5c0f\u590d\u6742\u5ea6\uff0c\u800c\u4e14\u5bf9\u4e8e\u5728\u4e0d\u5728\u4e00\u5f20\u56fe\u4e0a\u6ca1\u6709\u8981\u6c42\u3002\n\n\u4e8e\u662f\u4e3a\u4e86\u6c42\u51fa\u5269\u4e0b\u70b9\u7684\u6700\u5927\u7f16\u53f7\uff0c\u6211\u9009\u62e9\u4e86\u7ebf\u6bb5\u6811\u3002\n\n\u5269\u4e0b\u7684\u53cd\u65b9\u5411dfs\u4e00\u904d\uff0c\u76f4\u63a5\u8d4b\u503c\uff0c\u5b8c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n,m;\nint t[500000];\nvector<int> q[200000];\nvoid build(int l,int r,int id)\n{\n    if(l==r)\n    {\n        t[id]=l;\n        return ;\n    }\n    int mid=(l+r)/2;\n    build(l,mid,id*2);\n    build(mid+1,r,id*2+1);\n    t[id]=max(t[id*2],t[id*2+1]);\n}\n\nvoid update(int l,int r,int x,int id)\n{\n    if(l==r&&l==x)\n    {\n        t[id]=-1e9;\n        return ;\n    }\n    int mid=(l+r)/2;\n    if(x<=mid) update(l,mid,x,id*2);\n    else update(mid+1,r,x,id*2+1);\n    t[id]=max(t[id*2],t[id*2+1]);\n}\n\nbool b[100005];\nint ans[100005];\n\nvoid dfs(int x,int f,int last)\n{\n    update(1,n,x,1);\n    for(int i=0;i<q[x].size();i++)\n    {\n        int nx=q[x][i];\n        if(nx==last)continue;\n        if(b[nx])continue;\n        b[nx]=1;\n        ans[nx]=f;\n        dfs(nx,f,x);\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    build(1,n,1);\n    for(int i =1;i<=m;i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        q[y].push_back(x);\n    }\n    while(1)\n    {\n        int k=t[1];\n        if(k<=0)break;\n        b[k]=1;\n        ans[k]=k;\n        dfs(k,k,k);\n    }\n    for(int i=1;i<=n;i++)\n        printf(\"%d \",ans[i]);\n    printf(\"\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1531989522,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u4e0d\u4f1aTarjan\u7f29\u70b9\u8fd9\u79cd\u9ad8\u7aef\u64cd\u4f5c\uff0c\u6240\u4ee5\u5c31\u7528\u4e86\u5bbd\u641c\u3002\n\n\u672c\u6765\u4ee5\u4e3a\u4f1aTLE\uff0c\u4f46\u4f18\u5316\u8fc7\u5ea6\u4e86\uff0cWA\u4e86\uff0c\u540e\u6765\u7b80\u5355\u7684\u4f18\u5316\u4e00\u4e0b\u5c31\u8fc7\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <queue>\n#include <list>\n#include <set>\n#include <cstdio>\n#include <stack>\n#include <vector>\n#include <map>\nusing namespace std;\nint Max[100001];\nvector<int> edge[100001];\nint main()\n{\n    int n, m;\n    cin >> n >> m;\n    for (int i = 1; i <= n; i++)\n    {\n        Max[i] = i;\n    }\n    for (int i = 1; i <= m; i++)\n    {\n        int a, b;\n        cin >> a >> b;\n        //Max[a] = max(Max[a], b);\n        edge[a].push_back(b);\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        bool b = true;\n        for (int i = 1; i <= n; i++)\n        {\n            int size = edge[i].size();\n            int t = Max[i];\n            for (int j = 0; j < size; j++)\n            {\n                Max[i] = max(Max[i], Max[edge[i][j]]);\n            }\n            if (t != Max[i])\n            {\n                b = false;\n            }\n        }\n        if (b)\n        {\n            break;\n        }\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        cout << Max[i] << \" \";\n    }\n    return 0;\n}\n```",
        "postTime": 1507443042,
        "uid": 37170,
        "name": "Solomon_611",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1ahttps://www.luogu.com.cn/problem/P3916\n\n## \u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\u7ed9\u51faN\u4e2a\u70b9\uff0cM\u6761\u8fb9\u7684\u6709\u5411\u56fe\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9v\uff0c\u6c42A(v)\u8868\u793a\u4ece\u70b9v\u51fa\u53d1\uff0c\u80fd\u5230\u8fbe\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9\u3002\n\n## \u3010\u8f93\u5165\u683c\u5f0f\u3011\n\u7b2c1 \u884c\uff0c2 \u4e2a\u6574\u6570N,M\u3002\n\n\u63a5\u4e0b\u6765M\u884c\uff0c\u6bcf\u884c2\u4e2a\u6574\u6570U_i,V_i\uff0c\u8868\u793a\u8fb9(U_i,V_i)\u3002\u70b9\u75281, 2,,N\u7f16\u53f7\u3002\n\n## \u3010\u8f93\u51fa\u683c\u5f0f\u3011\nN \u4e2a\u6574\u6570A(1),A(2),\u22ef,A(N)\u3002\n\n## \u3010\u89e3\u9898\u601d\u8def\u3011\n\u8bb0\u5fc6\u5316dfsWA\u4e863\u53d1\uff0c\u6012\u4e86\uff0c\u7d22\u6027\u76f4\u63a5\u53cd\u5411\u5efa\u56fe\uff0c\u4ece\u540e\u5f80\u524dbfs\uff0c\u8282\u70b9n\u80fd\u5230\u7684\u8282\u70b9\u7b54\u6848\u4e00\u5b9a\u662fn\n\n## \u3010AC\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100010;\nstruct Edge\n{\n\tint to;\n\tint next;\n}edge[maxn];\nint head[maxn];\nint ans[maxn];\nint n, m;\ninline void bfs(int s)\n{\n\tqueue<int> que;\n\tque.push(s);\n\twhile (!que.empty())\n\t{\n\t\tint u = que.front();\n\t\tque.pop();\n\t\tfor (int i = head[u]; i; i = edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif (ans[v]) continue;\n\t\t\tans[v] = s;\n\t\t\tque.push(v);\n\t\t}\n\t}\n\tif (!ans[s]) ans[s] = s;\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tedge[i].to = u;\n\t\tedge[i].next = head[v];\n\t\thead[v] = i;\n\t}\n\tfor (int i = n; i >= 1; --i) bfs(i);\n\tfor (int i = 1; i <= n; ++i) printf(\"%d \", ans[i]);\n\tputs(\"\");\n\treturn 0;\n}\n```\n",
        "postTime": 1576658204,
        "uid": 226316,
        "name": "YZL11111",
        "ccfLevel": 0,
        "title": "P3916 \u56fe\u7684\u904d\u5386 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u9996\u5148\u6765\u770b\u770b\u8fd9\u9053\u9898\u7684\u66b4\u529b\u89e3\u6cd5\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884c\u4e00\u4e2adfs\uff0c\u8bb0\u5f55\u641c\u7d22\u8def\u4e0a\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9\uff0c\u5c31\u662f\u6700\u540e\u7684\u7b54\u6848\u3002\u770b\u770b\u6570\u636e\u8303\u56f4\uff1a\u5bf9\u4e8e60% \u7684\u6570\u636e\uff0c1\u2264N\u3001K\u22641000\u3002\u8fd960\u5206\u5e94\u8be5\u6ca1\u6709\u95ee\u9898\u3002\n\n\u7136\u540e\u518d\u6765\u601d\u8003\u6b63\u89e3\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u5230\u8fbe\u7684\u7f16\u53f7\u6700\u5927\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4f5c\u5927\u7f16\u53f7\u7684\u70b9\u53ef\u4ee5\u8986\u76d6\u54ea\u4e9b\u70b9\uff0c\u88ab\u8986\u76d6\u7684\u8fd9\u4e9b\u70b9\u80fd\u8fbe\u5230\u7684\u6700\u5927\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e9b\u7f16\u53f7\u5927\u7684\u70b9\u4e86\u3002\u6bd4\u59825\u8986\u76d6\u4e861\u30012\uff0c\u4e5f\u5c31\u662f\u8bf41\u30012\u53ef\u4ee5\u5230\u8fbe5\uff0c\u7136\u540e4\u4e5f\u8986\u76d6\u4e861\u30012\uff0c\u5f88\u5bb9\u6613\u770b\u51fa\uff0c1\u548c2\u7684\u7b54\u6848\u90fd\u662f5\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4ece\u70b9\u7f16\u53f7\u6700\u5927\u7684\u5f00\u59cb\uff0c\u5c31\u662ffor(int i=n;i>=1;i--)\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u8ba1\u7b97\u88ab\u8986\u76d6\u7684\u70b9\u7684A\uff08\u80fd\u8fbe\u5230\u7684\u6700\u5927\u7f16\u53f7\u7684\u70b9\uff09\u5c31\u662f\u628a\u8fd9\u4e2a\u70b9\u8986\u76d6\u4e86\u7684\u70b9\uff0c\u6309\u7167\u4e0a\u9762\u7684\u4f8b\u5b50\u5c31\u662f\uff0c\u4ee55\u4e3a\u8d77\u70b9\u7684\u65f6\u5019\uff0c1\u30012\u7684A\u5c31\u5df2\u7ecf\u66f4\u65b0\u4e86\uff0c\u4e14\u4e0d\u4f1a\u518d\u88ab\u66f4\u65b0\uff08\u56e0\u4e3ai\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u7684\uff09\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\uff1a\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u53cd\u5411\u5b58\u8fb9\u3002\n\nac\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;//N\u4e2a\u70b9,M\u6761\u8fb9\u7684\u6709\u5411\u56fe\nstruct Edge\n{\n\tint to;\n\tint next;\n}edge[100005];//\u90bb\u63a5\u8868\u5b58\u56fe \nint cnt;\nint head[100005];\nvoid add(int from,int to)\n{\n\tcnt++;\n\tedge[cnt].to=to;\n\tedge[cnt].next=head[from];\n\thead[from]=cnt;\n}//\u90bb\u63a5\u8868\u5b58\u8fb9 \nqueue <int> q;\nint vis[100005];//\u8bb0\u5f55\u6700\u540e\u7684\u7b54\u6848 \nvoid bfs(int x)//bfs\n{\n\twhile(!q.empty())//\u5f53\u961f\u5217\u4e0d\u4e3a\u7a7a \n\t{\n\t\tint u=q.front();//\u53d6\u51fa\u961f\u9996 \n\t\tq.pop();//\u5f39\u6808 \n\t\tvis[u]=x;//\u4e00\u9047\u5230\u5c31\u66f4\u65b0\uff08\u56e0\u4e3ax\u4ece\u5927\u5230\u5c0f\uff09 \n\t\tfor(int i=head[u];i;i=edge[i].next)//\u90bb\u63a5\u8868\u627e\u8fb9 \n\t\t{\n\t\t\tint v=edge[i].to;//\u5230\u8fbe\u7684\u70b9 \n\t\t\tif(vis[v]==0)//\u5982\u679c\u6ca1\u6709\u88ab\u4fee\u6539\u8fc7 \n\t\t\t\tq.push(v);//\u5165\u961f\uff0c\u8fdb\u884cbfs \n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);//\u8f93\u5165N\u4e2a\u70b9\u3001M\u6761\u8fb9\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);//a\u8f93\u5165a\u3001b\u76f8\u8fde \n\t\tadd(b,a);//\u52a0\u8fb9 \n\t}\n\tfor(int i=n;i>=1;i--)//\u4ece\u5927\u5230\u5c0f\u5012\u7740\u6765\u679a\u4e3e \n\t{\n\t\tif(vis[i]!=0)//\u5982\u679c\u6ca1\u6709\u88ab\u66f4\u65b0\u8fc7 \n\t\t\tcontinue;//\u8df3\u8fc7 \n\t\tq.push(i);//\u5165\u961f \n\t\tbfs(i);//\u5f00\u59cbbfs \n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",vis[i]);//\u8f93\u51fa\u7b54\u6848 \n\treturn 0;\n}\n```",
        "postTime": 1540528069,
        "uid": 59097,
        "name": "\u5f20\u4ea6\u5f1b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "\u524d\u65b9\u9ad8\u80fd\uff01\uff01\uff01\uff01\n\u6b63\u5411\u5efa\u8fb9+bfs+400\u6b21\u7206\u641cac\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n#define maxn 100010\n\nstruct edge\n{\n\tint from,to,next;\n}q[maxn];\n\nint a[maxn],n,m,maxx[maxn];\n\nvoid init()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&q[i].from,&q[i].to);\n\t\tq[i].next = a[q[i].from];a[q[i].from] = i;\n\t}\n}\n\nint main()\n{\n\tinit();\n\tfor(int i=1;i<=n;i++)\n\t\tmaxx[i] = i;\n\tfor(int k=1;k<=400;k++)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(int p = a[i];p!=0;p = q[p].next)\n\t\t\t{\t\n\t\t\t\tif(maxx[i] < maxx[q[p].to])\n\t\t\t\t\tmaxx[i] = maxx[q[p].to];\n\t\t\t}\t\n\t\t}\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tint p = maxx[j];\n\t\t\twhile(maxx[p] != p)\n\t\t\t\tp = maxx[p];\n\t\t\tmaxx[j] = p;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",maxx[i]);\n\treturn 0;\n}\n```",
        "postTime": 1536758675,
        "uid": 104598,
        "name": "cheater__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": "    \u6709\u4eba\u8bf4\u9700\u8981tarjan\n    \u672c\u4eba\u4e5f\u5c1d\u8bd5\u4e86\u4e00\u4e0b\n    \u597d\u50cf\u786e\u5b9e\u53ef\u4ee5 \u4f46\u662f\u611f\u89c9\u4e0d\u597d\u5b9e\u73b0\n\n    \u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u65b9\u6cd5\n    tarjan\u7684\u4f5c\u7528\u5c31\u662f\u5224\u65ad\u73af\n    \u6240\u4ee5\u6211\u4eec\u7528vis[]\u6570\u7ec4\u6765\u8bb0\u5f55\u662f\u5426\u88ab\u6807\u8bb0\u5c31\u597d\u4e86\n    \n    \u5982\u679c\u6b63\u5411\u7684\u641e \u5c31\u662f\u90a3\u79cd\u89c4\u89c4\u77e9\u77e9\u7684\u5efa\u56fe \u8dd1dfs\n    \u6211\u4e5f\u6ca1\u505a \u4f30\u8ba1\u53ef\u80fd\u4f1a\u8d85\u65f6\uff1f\uff1f\n    \u53cd\u6b63\u6211\u4e5f\u4e0d\u77e5\u9053\n    \n    \u4e8e\u662f\u6211\u4eec\u5c31\u8003\u8651\u53cd\u5411\u7684\u505a\n    \u4ece\u6700\u5927\u7684\u70b9\u5f00\u59cb\u641c\u7d22 \u53ea\u8981\u80fd\u591f\u641c\u5230\u7684\u70b9 \u90a3\u4e48\u6240\u641c\u5230\u7684\u70b9\u7684\u6700\u540e\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u70b9\n    \u53e3\u8ff0\u9ebb\u70e6 \n    \u770b\u4ee3\u7801\n    \n    \n    #include<iostream>\n    #include<cstdio>\n    #include<algorithm>\n    #include<cstring>\n    using namespace std;\n    const int maxn = 100005 ;\n    int n,m,head[maxn],top,sum,ans[maxn];  //ans[]\u8bb0\u5f55\u7684\u662f\u67d0\u4e2a\u70b9\u7684\u7b54\u6848 \n    struct edge{\n\t    int to,next;\n    }e[maxn];\n\n    void add_edge(int u,int v) {\n\t    e[++top].to = v;\n\t    e[top].next = head[u] ;\n\t    head[u] = top ;\n    }\n\n    void dfs(int u,int sum) {\n\t    if(ans[u]) return ;\n\t    ans[u] = sum ;\n\t    for(int i = head[u]; i ;i = e[i].next) {\n\t\t    if(!ans[e[i].to]) \n\t\t      dfs(e[i].to,sum) ;\n\t    }\n\t    return ;\n    }\n\n    int main() {\n\t    scanf(\"%d%d\",&n,&m) ;\n\t    for(int i = 1;i <= m ;++i) {\n\t\t    int x,y; scanf(\"%d%d\",&x,&y) ;\n\t\t     add_edge(y , x) ;  //\u53cd\u5411\u5373\u53ef \n\t    }\n\t    for(int i = n;i >= 1; --i) {\n\t\t    if(ans[i]) continue;   \n\t\t    dfs( i , i ) ;  //\u76ee\u524d\u4e3a\u6b62\u662f\u54ea\u4e2a\u70b9 \u4ee5\u53ca\u76ee\u524d\u4e3a\u6b62\u7684\u7b54\u6848 \n    \t}\n\t    for(int i = 1;i <= n ;++i) printf(\"%d \",ans[i]) ;\n\t    return 0;\n    }",
        "postTime": 1534421977,
        "uid": 88340,
        "name": "Tiffany_Tendering",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    },
    {
        "content": " ## **\u5e7f\u641c\u798f\u5229**\n \n\u9762\u5bf9\u8fd9\u79cd\u9898\uff0c\u7b2c\u4e00\u4e2a\u53cd\u5e94\u5f53\u7136\u662fdfs\n\n**\u4f46\u662f**\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u9053\u9898\u662f\u6709\u73af\u7684\n\n\u6709\u73af\u7684\u8bdd\u5904\u7406\u5f88\u9ebb\u70e6\uff0c\u8fd8\u9700\u8981tarjan\n\n//\u636e\u8bf4STL\u7684set\u975e\u5e38\u5feb\uff0c\u7528set\u5224\u73af\u4e5f\u662f\u4e00\u79cd\u601d\u8def\uff0c\u5177\u4f53\u4f1a\u4e0d\u4f1aTLE\u5c31\u4e0d\u77e5\u9053\u4e86\uff0c\u6bd5\u7adf\u6ca1\u8bd5\u8fc7\u3002\u5982\u679c\u771f\u80fd\u6210\u529f\uff0c\u8fd9\u5c31\u662f\u5f88\u9a9a\u7684\u64cd\u4f5c\u4e86\uff0c\u7701\u65f6\u95f4\u53c8\u7701\u8111\u5b50\u3002\n\n**\u7136\u800c**\n\n\u4f17\u6240\u5468\u77e5\uff0c\u5e7f\u641c\u5904\u7406\u6709\u73af\u7684\u95ee\u9898\u6709\u5f97\u5929\u72ec\u539a\u7684\u4f18\u52bf\n\n### \u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u5e7f\u641c\u5462\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u5185\u9644\u6ce8\u91ca\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n\nint n,m;\nbool book[100010];\n\n\nint q[100010];\n//\u6bd5\u7adfqueue\u4e5f\u5c31\u51e0\u884c\u4ee3\u7801\uff0cstl\u7684queue\u7ec8\u7a76\u8fd8\u662f\u6162\u4e86\u4e00\u70b9\u70b9\uff0c\u6211\u5c31\u81ea\u5df1\u5199\u4e86\n\n\nstruct edge\n{\n    int to;\n    int next;\n}e[100010];\nint total=0,head[100010];\nvoid addedge(int x,int y)\n{\n    e[total].to=y;\n    e[total].next=head[x];\n    head[x]=total;\n    total++;\n}\n//\u90bb\u63a5\u8868\u5b58\u56fe\u4e0d\u591a\u5e9f\u8bdd\u4e86\n\n\n//\u5e7f\u641c\u91cd\u5934\u620f\nvoid bfs(int n)\n{\n    memset(book,0,sizeof(book));//\u5148\u628a\u8bb0\u5f55\u6570\u7ec4\u521d\u59cb\u5316\n    int maximum=n;//\u4efb\u610f\u4e00\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u6700\u5927\u70b9\u4e0d\u4f1a\u6bd4\u81ea\u5df1\u5c0f\n    int head0=0,tail=1;//\u624b\u5199\u961f\u5217\n    q[0]=n;\n\t\n    \n    //\u57fa\u672c\u5e7f\u641c\u7b97\u6cd5\n    while(head0<tail)\n    {\n        for(int i=head[q[head0]];i!=-1;i=e[i].next)//\u90bb\u63a5\u8868\u904d\u5386\n        {\n            if(!book[e[i].to])\n            {\n                book[e[i].to]=true;\n                q[tail]=e[i].to;\n                tail++;//\u5165\u961f\u540e\u961f\u957f++\n                maximum=max(maximum,e[i].to);\n            }\n        }\n        head0++;//\u961f\u5934\u51fa\u961f\n    }\n    cout<<maximum<<' ';//\u6700\u540e\u8f93\u51fa\u7ed3\u679c\n}\n\n\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        head[i]=-1;\n    for(int i=0,a,b;i<m;i++)\n    {\n        cin>>a>>b;\n        addedge(a,b);\n    }\n    for(int i=1;i<=n;i++)\n        bfs(i);\n    return 0;\n}\n```",
        "postTime": 1535815220,
        "uid": 84562,
        "name": "EzioAuditoreFirenze",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3916 \u3010\u56fe\u7684\u904d\u5386\u3011"
    }
]