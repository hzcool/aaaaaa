[
    {
        "content": "# \u9898\u76ee\u63cf\u8ff0\n\u5c0f\u84dd\u8981\u5728\u81ea\u5df1\u7684\u751f\u65e5\u5bb4\u4f1a\u4e0a\u5c06 $n$ \u5305\u7cd6\u679c\u5206\u7ed9 $m$ \u4e2a\u5c0f\u670b\u53cb\u3002\u6bcf\u5305\u7cd6\u679c\u90fd\u8981\u5206\u51fa\u53bb\uff0c\u6bcf\u4e2a\u5c0f\u670b\u53cb\u81f3\u5c11\u8981\u5206\u4e00\u5305\uff0c\u4e5f\u53ef\u4ee5\u5206\u591a\u5305\u3002\n\n\u5c0f\u84dd\u5df2\u7ecf\u63d0\u524d\u5c06\u7cd6\u679c\u51c6\u5907\u597d\u4e86\uff0c\u4e3a\u4e86\u5728\u5bb4\u4f1a\u5f53\u5929\u80fd\u628a\u7cd6\u679c\u5206\u5f97\u66f4\u5e73\u5747\u4e00\u4e9b\uff0c\u5c0f\u84dd\u8981\u5148\u8ba1\u7b97\u597d\u5206\u914d\u65b9\u6848\u3002 \u5c0f\u84dd\u5c06\u7cd6\u679c\u4ece $1$ \u5230 $n$ \u7f16\u53f7\uff0c\u7b2c $i$ \u5305\u7cd6\u679c\u91cd $w_i$\u3002\u5c0f\u670b\u53cb\u4ece $1$ \u5230 $m$ \u7f16\u53f7\u3002\u6bcf\u4e2a\u5c0f\u670b\u53cb\u53ea\u80fd\u5206\u5230\u7f16\u53f7\u8fde\u7eed\u7684\u7cd6\u679c\u3002\u5c0f\u84dd\u60f3\u4e86\u5f88\u4e45\u6ca1\u60f3\u51fa\u5408\u9002\u7684\u5206\u914d\u65b9\u6848\u4f7f\u5f97\u6bcf\u4e2a\u5c0f\u670b\u53cb\u5206\u5230\u7684\u7cd6\u679c\u5dee\u4e0d\u591a\u91cd\u3002\u56e0\u6b64\u9700\u8981\u4f60\u5e2e\u4ed6\u4e00\u8d77\u60f3\u529e\u6cd5\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u5206\u914d\u7cd6\u679c\uff0c\u4ed6\u53ef\u4ee5\u518d\u4e70\u4e00\u4e9b\u7cd6\u679c\uff0c\u8ba9\u67d0\u4e00\u4e9b\u7f16\u53f7\u7684\u7cd6\u679c\u6709\u4e24\u4efd\u3002\u5f53\u67d0\u4e2a\u7f16\u53f7\u7684\u7cd6\u679c\u6709\u4e24\u4efd\u65f6\uff0c\u4e00\u4e2a\u5c0f\u670b\u53cb\u6700\u591a\u53ea\u80fd\u5206\u5176\u4e2d\u7684\u4e00\u4efd\u3002\n\n\u8bf7\u627e\u4e00\u4e2a\u65b9\u6848\uff0c\u4f7f\u5f97\u5c0f\u670b\u53cb\u5206\u5230\u7684\u7cd6\u679c\u7684\u6700\u5927\u91cd\u91cf\u548c\u6700\u5c0f\u91cd\u91cf\u7684\u5dee\u6700\u5c0f\uff0c\u8bf7\u8f93\u51fa\u8fd9\u4e2a\u5dee\u3002\n# \u8bc4\u6d4b\u7528\u4f8b\u89c4\u6a21\u4e0e\u7ea6\u5b9a\n\u5bf9\u4e8e\u6240\u6709\u8bc4\u6d4b\u7528\u4f8b\uff0c$1 \\leq n \\leq 100$\uff0c$1 \\leq m \\leq 50$\uff0c$1 \\leq w_i \\leq 100$\u3002\u5728\u8bc4\u6d4b\u6570\u636e\u4e2d\uff0c$w_i$ \u968f\u673a\u751f\u6210\uff0c\u5728\u67d0\u4e2a\u533a\u95f4\u5747\u5300\u5206\u5e03\u3002\n# \u9898\u89e3\n\u8003\u8651 $DP$\u3002\n\n\u5927\u6982\u53ef\u4ee5\u5217\u51fa\u8fd9\u4e94\u4e2a\u7ef4\u5ea6\uff1a\u5206\u51fa\u7684\u533a\u95f4\u4e2a\u6570\uff0c\u6700\u540e\u4e00\u4e2a\u7528\u4e86\u4e00\u9897\u7cd6\u7684\u4f4d\u7f6e\uff0c\u6700\u540e\u4e00\u4e2a\u7528\u4e86\u4e24\u9897\u7cd6\u7684\u4f4d\u7f6e\uff0c\u533a\u95f4\u548c\u7684\u6700\u5c0f\u503c\uff0c\u533a\u95f4\u548c\u7684\u6700\u5927\u503c\u3002\n\n\u8003\u8651\u628a\u5176\u4e2d\u4e00\u7ef4\u62ff\u51fa\u6765\u4f5c\u4e3a $DP$ \u7ef4\u62a4\u7684\u503c\uff0c\u8fd9\u4e00\u7ef4\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u662f\u6ee1\u8db3\u8d8a\u5927\u8d8a\u4f18\u6216\u8005\u8d8a\u5c0f\u8d8a\u4f18\u7684\u5355\u8c03\u6027\u3002\n\n\u53ea\u6709\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u6ee1\u8db3\u5355\u8c03\u6027\u3002\u6b64\u65f6\u5f88\u5173\u952e\u7684\u4e00\u70b9\uff0c\u6211\u4eec\u53d1\u73b0\u6700\u5c0f\u503c\u6709\u4e0a\u754c $\\frac {2\\cdot sum}{m}$\uff0c\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u663e\u8457\u7684\u4f18\u5316\uff0c\u800c\u6700\u5c0f\u503c\u6709\u4e00\u4e2a\u4e0d\u592a\u91cd\u8981\u7684\u4e0b\u754c\uff0c\u56e0\u6b64\u6211\u4eec\u679a\u4e3e\u6700\u5c0f\u503c\uff0c\u628a\u6700\u5927\u503c\u4f5c\u4e3a $DP$ \u7ef4\u62a4\u7684\u503c\u3002\n\n## \u8bbe\u8ba1 $DP$ \u8f6c\u79fb\n\u4ee4 $sum=\\sum w_i$\uff0c\u89c4\u5212 $DP$\uff1a$f_{i,j,k}$ \u8868\u793a\u524d $i$ \u4e2a\u533a\u95f4\uff0c\u6700\u540e\u4e00\u4e2a\u7528\u4e86\u4e00\u9897\u7cd6\u7684\u4f4d\u7f6e\u5728 $j$\uff0c\u6700\u540e\u4e00\u4e2a\u7528\u4e86\u4e24\u9897\u7cd6\u7684\u4f4d\u7f6e\u5728 $k$\uff08\u5728 $k$ \u4e4b\u524d\u4e5f\u884c\uff09\uff0c\u6700\u5927\u503c\u6700\u5c0f\u662f\u591a\u5c11\u3002\u8003\u8651 $3$ \u79cd\u8f6c\u79fb\uff1a\n+ $f_{i,j,k}\\leftarrow f_{i,j,k-1}$ \n\n+ \u7b2c $i$ \u4e2a\u4eba\u7528\u4e86\u4e0a\u4e00\u6b21\u7684 $j+1$ \u5f00\u59cb\u7684\u4e00\u6bb5\uff0c\u8fd9\u79cd\u8f6c\u79fb\u662f $f_{i,j,k}\\leftarrow \\max(f_{i-1,j',k},s_j-s_{j'})$ \n\n+ \u7b2c $i$ \u4e2a\u4eba\u7528\u4e86\u4e0a\u4e00\u6b21\u7684 $k+1$ \u5f00\u59cb\u7684\u4e00\u6bb5\uff0c\u8fd9\u79cd\u8f6c\u79fb\u6709\u4e24\u7c7b\uff1a \n\n  + $f_{i,j,k}\\leftarrow \\max(f_{i-1,j,k'},s_k-s_{k'})$\uff0c\u8981\u6c42 $j\\ge k,k'$\uff0c\u610f\u601d\u662f\u653e\u5728\u7b2c\u4e8c\u6bb5\uff0c\u8fd8\u6ca1\u6709\u8d85\u51fa\u539f\u6765\u7b2c\u4e00\u6bb5\u7684\u8303\u56f4\u3002\n    \u7136\u800c\u8fd9\u79cd\u8f6c\u79fb\uff08\u533a\u95f4\u4e92\u76f8\u5305\u542b\uff09\u4e00\u5b9a\u4e0d\u4f18\u3002\n\t\n  + $f_{i,j,k}\\leftarrow \\max_{}(f_{i-1,k,j'},s_k-s_{j'})$\uff0c\u8981\u6c42\u662f $j'\\le k\\le j$ \n    \u8f6c\u79fb\u662f $O(n)$ \u7684\uff0c\u6ce8\u610f\u8f6c\u79fb\u5408\u6cd5\u7684\u8981\u6c42\u662f\u65b0\u7684\u4e00\u6bb5\u548c $\\ge mi$ \n### \u533a\u95f4\u5305\u542b\u4e0d\u4f18\u8bc1\u660e\n\u4e3a\u4ec0\u4e48\u533a\u95f4\u4e92\u76f8\u5305\u542b\u4e00\u5b9a\u4e0d\u4f18\uff1f\u6211\u4eec\u53ef\u4ee5\u4ece\u8c03\u6574\u7684\u89d2\u5ea6\u6765\u60f3\u8fd9\u4e2a\u95ee\u9898\u3002\u9996\u5148\u6784\u601d\u4e00\u4e2a\u5927\u533a\u95f4\uff0c\u4e00\u4e2a\u5c0f\u533a\u95f4\uff0c\u8fd8\u6709\u4e00\u4e2a\u533a\u95f4\u4f4d\u4e8e\u5c0f\u533a\u95f4\u7684\u53f3\u8fb9\uff0c\u4f46\u4e0e\u5927\u533a\u95f4\u5b58\u5728\u4e00\u90e8\u5206\u91cd\u53e0\uff0c\u79f0\u8fd9\u4e2a\u533a\u95f4\u4e3a\u53f3\u533a\u95f4\u3002\n\n\u7b2c\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5c0f\u533a\u95f4\u548c\u53f3\u533a\u95f4\u4e4b\u95f4\u4e0d\u5e94\u8be5\u5b58\u5728\u95f4\u9694\u3002\u5f88\u663e\u7136\u5c0f\u533a\u95f4\u53f3\u7aef\u70b9\u8c03\u6574\u5230\u53f3\u533a\u95f4\u7684\u5de6\u8fb9\u4f1a\u66f4\u4f18\u3002\n\n\u800c\u5f53\u5c0f\u533a\u95f4\u548c\u53f3\u533a\u95f4\u4e4b\u95f4\u6ca1\u6709\u95f4\u9694\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5927\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u8c03\u6574\u4e3a\u5c0f\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c\u663e\u7136\u8fd9\u6837\u5927\u533a\u95f4\u7684\u548c\u4f1a\u66f4\u63a5\u8fd1\u4e8e\u5c0f\u533a\u95f4\u7684\u548c\uff0c\u4f7f\u5f97\u7ed3\u679c\u66f4\u4f18\u3002\n\n\u5982\u679c\u6ca1\u6709\u53f3\u533a\u95f4\uff0c\u540c\u7406\u6211\u4eec\u53ef\u4ee5\u5c06\u5c0f\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u8c03\u6574\u5230\u5927\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u3002\n\n\u8003\u8651\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\uff0c\u5b9e\u9645\u4e0a\u662f $O(\\frac {2\\cdot sum}{m}\u00d7n^3m)=O(sum\\cdot n^3)$\u3002\n\n### \u4f18\u5316\n+ \u5bf9\u4e8e\u7b2c\u4e09\u7c7b\u8f6c\u79fb\uff0c\u4e0d\u96be\u53d1\u73b0 $f_{i,j,k}$ \u662f\u968f\u7740 $k$ \u589e\u52a0\u800c\u5355\u51cf\u7684\uff0c\u90a3\u4e48\u9009\u53d6\u5c3d\u91cf\u9760\u540e\u7684\u8f6c\u79fb\u70b9\u4e00\u5b9a\u6700\u4f18\u3002\n\n+ \u5bf9\u4e8e\u7b2c\u4e8c\u7c7b\u8f6c\u79fb\uff0c\u8003\u8651\u5355\u8c03\u6808\u4f18\u5316\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u7531\u4e8e $s_j-s_{j'}$ \u662f\u968f $j'$ \u589e\u52a0\u800c\u5355\u8c03\u9012\u51cf\u7684\uff0c\u6211\u4eec\u9700\u8981\u7684\u662f $min\\{s_j-s_{j'},f_{i-1,j',k}\\}$ \u6700\u5c0f\uff0c\u90a3\u4e48\u5f53 $s_j-s_{j'}$ \u53d8\u5927\u65f6\uff0c\u82e5 $f_{i-1,j',k}$ \u4e5f\u53d8\u5927\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u70b9 $j'$ \u53ef\u4ee5\u820d\u5f03\uff0c\u7b26\u5408\u5355\u8c03\u6808\u7684\u539f\u5219\u3002\u800c\u6211\u4eec\u53d1\u73b0\uff0c\u968f\u7740 $j$ \u7684\u589e\u52a0\uff0c$s_j-s_{j'}$ \u7684\u56fe\u50cf\u662f\u5411\u4e0a\u5e73\u79fb\u7684\uff0c\u8fd9\u5c06\u4f1a\u5bfc\u81f4\u6700\u4f73\u8f6c\u79fb\u70b9\u7684\u53f3\u79fb\uff1b\u800c $f$ \u7684\u56fe\u50cf\u53ea\u80fd\u88ab\u201c\u5f80\u4e0b\u538b\u201d\uff0c\u5728\u5176\u957f\u5ea6\u4e0d\u53d8\u77ed\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u6700\u4f73\u8f6c\u79fb\u70b9\u7684\u53f3\u79fb\u3002\u56e0\u6b64\u6211\u4eec\u7ef4\u62a4\u8fd9\u4e2a\u6700\u4f73\u8f6c\u79fb\u70b9\u5373\u53ef\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\u6700\u4f73\u8f6c\u79fb\u70b9\u53ef\u80fd\u662f\u76f8\u90bb\u7684\u4e24\u70b9\u3002\n# Code\n\n\u6709\u70b9\u5361\u65f6\uff0c\u5728\u6d1b\u8c37\u4e0a\u5f00 $O_2$ \u624d\u80fd\u8fc7\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int M = 51, N = 101;\n\nint n, m, w[N], f[M][N][N], st[N], ans = 0x7fffffff;\n\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i++){\n        scanf(\"%d\", &w[i]);\n        w[i] += w[i - 1];\n    }\n    for(int minw = 1; minw <= 2 * w[n] / m; minw++){\n        memset(f, 0x7f, sizeof(f));\n        f[0][0][0] = minw;\n        for(int i = 1; i <= m; i++) {\n            for(int j = 0; j <= n; j++){\n                *st = 0;\n                int p = 0, pst = 1;\n                for(int k = j; k <= n; k++){\n                    if(j > 0) f[i][j][k] = f[i][j - 1][k];\n                    while(w[k] - w[p] >= minw){\n                        if(p >= j){\n                            while(*st && f[i - 1][j][p] <= f[i - 1][j][st[*st]])\n                                (*st)--;\n                            st[++*st] = p;\n                        }\n                        p++;\n                    }\n                    if(*st){\n                        pst = min(pst, *st);\n                        while(pst < *st && f[i - 1][j][st[pst + 1]] < w[k] - w[st[pst + 1]])\n                            pst++;\n                        while(pst > 1 && f[i - 1][j][st[pst]] > w[k] - w[st[pst]])\n                            pst--;\n                        f[i][j][k] = min(f[i][j][k], max(f[i - 1][j][st[pst]], w[k] - w[st[pst]]));\n                        if(pst < *st)\n                            f[i][j][k] = min(f[i][j][k], max(f[i - 1][j][st[pst + 1]], w[k] - w[st[pst + 1]]));\n                    }\n                    int pp = min(p - 1, j);\n                    if(pp >= 0)\n                        f[i][j][k] = min(f[i][j][k], max(f[i - 1][pp][j], w[k] - w[pp]));\n                }\n            }\n        }\n        ans = min(ans, f[m][n][n] - minw);\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n```",
        "postTime": 1678869235,
        "uid": 73480,
        "name": "Natsuzora",
        "ccfLevel": 6,
        "title": "\u84dd\u6865\u676f - \u5206\u679c\u679c"
    }
]