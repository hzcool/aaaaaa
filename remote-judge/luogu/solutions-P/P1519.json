[
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\u6309\u7167\u5b57\u7b26\u753b\u7684\u5f62\u5f0f\u7ed9\u5b9a\u4e00\u4e2a\u5730\u56fe\uff0c\u8fd9\u4e2a\u5730\u56fe\u6709\u4e24\u4e2a\u51fa\u53e3\uff0c\u73b0\u5728\u4f60\u9700\u8981\u6c42\u51fa\u4ece\u6240\u6709\u7684\u70b9\u5230\u4efb\u610f\u4e00\u4e2a\u51fa\u53e3\u7684\u8ddd\u79bb\u4e2d\u7684\u6700\u77ed\u8def\u5f84\u7684\u6700\u5927\u503c\n\n#### \u5410\u69fd\u5927\u4f1a\n\n\u8fd9\u9053\u641c\u7d22\u9898\uff0c\u771f\u6076\u5fc3\u3002\u6211\u8c03\u4e86\u4fe9\u5c0f\u65f6\u3002\u3002\u3002\u3002\u3002\u3002~~\u4e27\u5c3d\u5929\u826f~~\n\n#### \u89e3\u9898\u601d\u8def\n\n\u4ece\u6570\u636e\u8303\u56f4\u6765\u770b\u7684\u8bdd\uff0c\u4ece\u6bcf\u4e2a\u70b9\u90fd\u641c\u4e00\u904d\u6700\u77ed\u8ddd\u79bb\u662f\u4e0d\u73b0\u5b9e\u7684\u4e86\u3002\n\n\u5f53\u7136\u4e0d\u6392\u9664\u4f60\u5199\u7684\u5f88\u597d\u770bQwQ\u3002\n\n\u6211\u7684\u60f3\u6cd5\u662f\u5c06\u4e24\u4e2a\u51fa\u53e3\u627e\u51fa\u6765\uff0c\u7136\u540e\u8dd1\u4e24\u8fb9BFS\uff0c\u6bcf\u4e2a\u70b9\u90fd\u7ef4\u62a4\u4e00\u4e2a\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\n\n\u8981\u6ce8\u610f\u5206\u7c7b\u8ba8\u8bba\u4ece\u51fa\u53e3\u5f80\u522b\u7684\u683c\u5b50\u8df3\u548c\u4ece\u666e\u901a\u683c\u5b50\u8df3\u5f80\u666e\u901a\u683c\u5b50\u3002\n\n\u8dd1\u7684\u8fd8\u633a\u5feb\uff0c\u7a7a\u95f4\u6d88\u8017\u4e5f\u4e0d\u5927\u3002\u6211\u6392\u5728\u6700\u4f18\u89e3\u7684\u7b2c\u4e8c\u9875QwQ\n\n#### \u5de8\u5751\u6240\u5728\n\n\u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u5b8c\u4e86\u5417\uff0c\u4f60\u5c31\u80fd\u8f7b\u6613AC\u5417\uff1f\n\n\u663e\u7136\u662f\u4e0d\u80fd\u7684\uff0c\u8fd9\u4e2a\u9898\u8fd8\u6709\u56db\u4e2a\u4e0d\u6613\u53d1\u73b0\u7684\u5751\u70b9\uff0c\u8981\u4e0d\u6211\u600e\u4e48\u4f1a\u8c03\u90a3\u4e48\u4e45\u5462\uff1f\n\n- \u4ece\u51fa\u53e3\u5f80\u91cc\u8df3\u7684\u65f6\u5019\u53ea\u80fd\u6311\u4e00\u683c\u3002\n\n- \u4ece\u522b\u7684\u683c\u5b50\u8df3\u5f80\u5176\u4ed6\u683c\u5b50\u7684\u65f6\u5019\u53ea\u80fd\u8df3\u4e24\u683c\n\n- \u8df3\u4e24\u683c\u7684\u65f6\u5019\u8fd8\u5fc5\u987b\u5224\u65ad\u4e2d\u95f4\u9694\u8fc7\u53bb\u7684\u4e00\u683c\u662f\u4e0d\u662f\u7a7a\u683c\n\n- \u8f93\u5165\u683c\u5f0f\u4e5f\u5f88\u6076\u5fc3\uff0c\u5728\u8981\u6c42\u8bfb\u7a7a\u683c\u7684\u524d\u63d0\u4e0b\u597d\u7684\u529e\u6cd5\u53ea\u6709gets\uff0c\u4f46\u662f\u7528gets\u4f1a\u628a\u4e24\u4e2a\u6574\u6570\u540e\u9762\u7684\u56de\u8f66\u8bfb\u8fdb\u53bb\u3002\n\n#### \u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nconst int INF = 2147483647;\n\nusing namespace std;\n\nint n, m, sx[3], sy[3], cnt, ans;\nchar map[208][90];\nint dis[208][90];\nint dx[5] = {0, 2, 0, -2};\nint dy[5] = {2, 0, -2, 0};\n\nint rx[5] = {0, 1, 0, -1};\nint ry[5] = {1, 0, -1, 0};\nstruct node {\n    int x, y, sum;\n}temp, now;\nqueue<node> Q;\nbool vis[208][90];\n\ninline void BFS(int num) {\n    memset(vis, 0, sizeof(vis));\n    while (!Q.empty()) Q.pop();\n    vis[sx[num]][sy[num]] = 1;\n    temp.sum = 0, temp.x = sx[num], temp.y = sy[num];\n    Q.push(temp);\n    while (!Q.empty()) {\n        now = Q.front();\n        int x = now.x, y = now.y, s = now.sum;\n        Q.pop();\n        dis[x][y] = min(s, dis[x][y]);\n        for(int i=0; i<4; i++) {\n            int xx = dx[i]+x, yy = dy[i]+y;\n            int zx = rx[i]+x, zy = ry[i]+y;\n            if(!vis[xx][yy] && map[xx][yy] == ' ' && xx <= 2*n+1 && xx > 0 && yy <= 2*m+1 && yy > 0 && map[zx][zy] == ' ' && (x != sx[num] || y != sy[num])) {\n                vis[xx][yy] = 1;\n                temp.x = xx, temp.y = yy, temp.sum = s+1;\n                Q.push(temp);\n            }\n            if(!vis[zx][zy] && map[zx][zy] == ' ' && x == sx[num] && y == sy[num] && zx <= 2*n+1 && zy <= 2*m+1 && zx > 0 && zy > 0) {\n                vis[zx][zy] = 1;\n                temp.x = zx, temp.y = zy, temp.sum = s+1;\n                Q.push(temp);\n            }\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d%d\", &m, &n);\n    for(int i=1; i<=2*n+1; i++) {\n        for(int j=1; j<=2*m+1; j++) {\n            dis[i][j] = INF;\n        }\n    }\n    gets(map[0]);\n    for(int i=1; i<=2*n+1; i++) {\n        gets(map[i]+1);\n        for(int j=1; j<=2*m+1; j++) {\n            if(i == 1 || j == 1 || i == 2*n+1 || j == 2*m+1)\n                if(map[i][j] == ' ') {\n                    sx[++cnt] = i;\n                    sy[cnt] = j;\n                }\n        }\n    }\n    BFS(1);\n    BFS(2);\n    for(int i=1; i<=2*n+1; i++) {\n        for(int j=1; j<=2*m+1; j++) {\n            if(dis[i][j] != INF)\n                ans = max(ans, dis[i][j]);\n        }\n    }\n    printf(\"%d\", ans);\n}\n```\n\n\u7ba1\u7406\u5927\u5927\u6c42\u6c42\u60a8\u7ed9\u6211\u4e2a\u901a\u8fc7\u5427\n![](https://i.loli.net/2018/08/03/5b642ebf1a2d6.jpg)",
        "postTime": 1533292241,
        "uid": 60941,
        "name": "\u5954\u6ce2\u513f\u9738",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u8bb2\u89e3\u4f1a\u6bd4\u8f83\u957f\uff1a\u5efa\u8bae\u53bb[\u8fd9\u91cc](https://www.cnblogs.com/rmy020718/p/9297006.html)\u67e5\u770b\n\n\u521a\u8bfb\u5b8c\u9898\uff0c\u611f\u89c9\u633a\u7b80\u5355\u554a\uff0c\u4e0d\u8fc7\u7814\u7a76\u4e86\u4e00\u4e0b\u6837\u4f8b\uff0c\u4e00\u8138\u61f5\u903c\uff0c\u8fd9\u548b\u53ef\u80fd\uff1f\u3002\n\n\u7ecf\u8fc7\u673a\u623f\u67d0\u4f4d S\u578b dalao(son)\u7684\u89e3\u8bfb\uff0c\u54e6\uff0cso ga si nei\uff0c\u5406\u897f\u5406\u897f\uff0cinteristing\uff01\uff01\uff01\n\n\u518d\u6b21\u5c31\u501f\u82b1\u732e\u4f5b\u4e86\u3002\n\n\u5173\u4e8e\u7684\u7406\u89e3\u9898\u610f\uff1a\n\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u8fd9\u91cc\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u9898\u76ee\u3002\n\n\u5947\u6570\u884c\u7684\u6805\u680f\uff08\u5c31\u662f\u7531\u2018+\u2019\u548c\u2018-\u2019\u53f7\u7ec4\u6210\uff09\u5c06\u5176\u770b\u505a\u4e00\u5c42\u7c7b\u4f3c\u819c\u7ed3\u6784\uff0c\u4e00\u5c42\u9632\u62a4\u819c(\u6ca1\u6709\u539a\u5ea6)\uff0c\u7a7f\u8d8a\u4e0d\u5360\u8ddd\u79bb\u3002\n\n\u7136\u540e\u770b\u5076\u6570\u5217\uff0c\u8fd9\u91cc\u9700\u8981\u5c06\u5076\u6570\u5217\u548c\u5176\u4e24\u4fa7\u7684\u2018-\u2019\u770b\u505a\u4e00\u4e2a\u6574\u4f53\uff0c\u4ea6\u53ef\u4ee5\u7406\u89e3\u4e3a\u5ffd\u7565\u5076\u6570\u5217\uff0c\u53ea\u8003\u8651\u5947\u6570\u5217\u3002\n\n\u8fd9\u91cc\u62ff\u6837\u4f8b\u56fe\u89e3\uff1a\n![](https://images2018.cnblogs.com/blog/1376345/201807/1376345-20180711215609680-1438269407.png)\n\n\u7ed3\u5408\u4e0a\u56fe\uff0c\u5bf9\u9898\u610f\u7406\u89e3\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86\u3002\n\n\u89e3\u9898\u5256\u6790\uff1a\n### ## 1.\u8bfb\u5165\u542b\u7a7a\u683c\u77e9\u9635\uff1a\n\n\u60f3\u4e86\u534a\u5929\uff0c\u8bd5\u4e86\u591a\u79cd\u8f93\u5165\u65b9\u6cd5\uff0c\u6700\u7ec8\u8c8c\u4f3c\u53ea\u6709getline(:\u4e0d\u4f1a\u7528\u6233\u6211\u554a)\u53ef\u4ee5\u7528\u3002\n\n\u4f46\u662f\u5728\u8f93\u5165\u65f6\uff0c\u9700\u8981\u591a\u8f93\u5165\u4e00\u884c\uff0c\u5e76\u4e14\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\u4f1a\u91cd\u590d\uff0c\u5176\u4ed6\u6ca1\u6bdb\u75c5\uff0c\u6700\u540e\u8c8c\u4f3c\u6ca1\u5565\u5927\u788d\u3002\n```cpp\n    scanf(\"%d%d\",&w,&h);\n    w=w*2+1;h=h*2+1;\n    for(int i=1;i<=h+1;i++)getline(cin,a[i]);\n```\n\u8bfb\u5165\u662f\u8fd9\u6837\u7684\uff0c\u82e5\u6709\u67d0\u4f4ddalao\u660e\u767d\u4ee5\u4e0a\u51fa\u73b0\u7684\u60c5\u51b5\uff0c\u5e0c\u671b\u8ba8\u8bba\u533a\u4e0d\u541d\u8d50\u6559\u3002\n\n### 2.\u5b57\u7b26\u77e9\u9635\u8f6c\u6362\u6570\u5b57\u77e9\u9635\n\n\u5728\u8fd9\u91cc\u5b9a\u4e49\u4e00\u4e2aint\u578bmap\u6570\u7ec4\u3002\n\nmap[i][j]\u8868\u793a\u8d70\u5230\u8fd9\u4e2a\u70b9\u9700\u8981\u6d88\u8017\u7684\u8ddd\u79bb(\u5076\u6570\u884c\u4e3a0\uff0c\u5947\u6570\u884c\u6709\u7a7a\u5730\u7684\u8bdd\u6d88\u8017\u4e3a1)\n\n\u5728\u5b57\u7b26\u77e9\u9635\u4e2d[i][j]\u8fd9\u4e2a\u70b9\u4e3a\u6805\u680f\uff0c\u4e0d\u80fd\u8d70\uff0c\u5c06map[i][j]\u5b9a\u4e49\u4e3a2.\n\n\u6ce8\u610f\u524d\u8fb9\u8bf4\u5230\uff0c\u8f93\u5165\u5b57\u7b26\u65f6\u4f1a\u6709\u4e00\u884c\u591a\u4f59\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u65f6\u5904\u7406\u4e00\u4e0b\u3002\n\n\u6b64\u90e8\u5206\u4ee3\u7801\u4e3a\uff1a\n```cpp\nfor(int i=2;i<=h+1;i++)\n        for(int j=0;j<w;j++)\n        {\n            \n            if(a[i][j]==32)\n            {\n                if((i-1)%2==1)map[i-1][j+1]=0;\n                else if((j+1)%2==0)map[i-1][j+1]=1;\n                else map[i-1][j+1]=0;\n            }\n            else map[i-1][j+1]=2;\n        }\n```\n### 3.\u521d\u59cb\u5316\uff1a\n\nans[i][j]\u6570\u7ec4\u8bb0\u5f55\u8d70\u5230 i,j\u8fd9\u4e2a\u70b9\u5230\u51fa\u53e3\u7684\u6700\u8fd1\u8ddd\u79bb\uff0c\u6805\u680f\u5904\u76f4\u63a5\u5b9a\u4e49\u4e3a-1\u3002\n```cpp\nvoid initial()\n{\n    for(int i=1;i<=h;i++)\n        for(int j=1;j<=w;j++)\n            if(map[i][j]==2)ans[i][j]=-1;\n            else ans[i][j]=214748364;\n}\n```\n### 4.\u627e\u51fa\u51fa\u53e3\uff1a\n\n\u8fd9\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u56db\u4e2a\u8fb9\u627e\u51fa\u53e3(\u6ce8\u610f\u7ecf\u4ee5\u4e0a\u8fc7\u7a0b\u51fa\u53e3\u53ef\u80fd\u4e3a0\uff0c\u53ef\u80fd\u4e3a1)\u3002\n```cpp\n    for(int i=1;i<=w;i++)if(map[1][i]==0||map[1][i]==1)bfs(1,i);\n    for(int i=1;i<=w;i++)if(map[h][i]==0||map[h][i]==1)bfs(h,i);\n    for(int i=1;i<=h;i++)if(map[i][1]==0||map[i][1]==1)bfs(i,1);\n    for(int i=1;i<=h;i++)if(map[i][w]==0||map[i][w]==1)bfs(i,w);\n```\n### 5.\u5927\u641c\u7d22\n\n\u5df2\u7ecf\u5904\u7406\u5904\u6bcf\u4e00\u683c\u7684\u6d88\u8017\u8ddd\u79bb\uff0c\u5728\u641c\u7d22\u65f6\uff0c\u52a0\u4e0a\u5c31\u597d\u5566\u3002\n\n\u4e24\u4e2a\u51fa\u53e3\uff0c\u9700\u8981\u641c\u7d22\u4e24\u8fb9\u6240\u4ee5\u641c\u5b8c\u6ce8\u610f\u521d\u59cb\u5316\uff0cbool\u578b\u6570\u7ec4\u3002\n```cpp\nbool vis[N][M];\nstruct ahah{\n    int x,y;\n}str,cur;\nqueue <ahah> que;\nvoid bfs(int x,int y)\n{\n    ans[x][y]=0;\n    vis[x][y]=1;\n    str.x=x;str.y=y;\n    que.push(str);\n    while(!que.empty())\n    {\n        cur=que.front();\n        que.pop() ;\n        for(int i=0;i<4;i++)\n        {\n            str.x=cur.x+dx[i];\n            str.y=cur.y+dy[i];\n            if(map[str.x][str.y]!=2&&str.x>=1&&str.x<=h\n            &&str.y>=1&&str.y<=w&&!vis[str.x][str.y])\n            {\n                ans[str.x][str.y]=min(ans[cur.x][cur.y]+map[str.x][str.y],ans[str.x][str.y]);\n                            \n                vis[str.x][str.y]=1;\n                que.push(str); \n            }\n        }\n    } \n    memset(vis,0,sizeof(vis));\n}\n```\n### 6.\u627e\u51fa\u6700\u5927\u503c\n\n\u5c06ans\u6570\u7ec4\u5faa\u73af\u4e00\u904d\uff0c\u627e\u51fa\u6700\u5927\u503c\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n### \u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n/*.........................\n\u4f5c\u8005\uff1aManjusaka\n\u65f6\u95f4\uff1a2018/7/11\n\u9898\u76ee\uff1aP1519 Overfencing\n..........................*/\n\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue> \nusing namespace std;\n#define N int(100)\n#define M int(210)\nint dx[5]={0,0,1,-1},dy[5]={1,-1,0,0};\nstring a[N];\nint w,h,MAX;\nint x[4],y[4],k;\nint map[N][M];\nint ans[N][M];\nvoid check();\nvoid _scanf();\nvoid initial();\nvoid bfs(int ,int );\nvoid _scanf()\n{\n    scanf(\"%d%d\",&w,&h);\n    w=w*2+1;h=h*2+1;\n    for(int i=1;i<=h+1;i++)getline(cin,a[i]);\n    for(int i=2;i<=h+1;i++)\n        for(int j=0;j<w;j++)\n        {\n            \n            if(a[i][j]==32)\n            {\n                if((i-1)%2==1)map[i-1][j+1]=0;\n                else if((j+1)%2==0)map[i-1][j+1]=1;\n                else map[i-1][j+1]=0;\n            }\n            else map[i-1][j+1]=2;\n        }\n//    cout<<\"\\n\";for(int i=1;i<=h;i++){for(int j=1;j<=w;j++){cout<<map[i][j];}cout<<endl;}\n    check();\n}\nvoid check()\n{\n    initial();    \n    for(int i=1;i<=w;i++)if(map[1][i]==0||map[1][i]==1)bfs(1,i);\n    for(int i=1;i<=w;i++)if(map[h][i]==0||map[h][i]==1)bfs(h,i);\n    for(int i=1;i<=h;i++)if(map[i][1]==0||map[i][1]==1)bfs(i,1);\n    for(int i=1;i<=h;i++)if(map[i][w]==0||map[i][w]==1)bfs(i,w);\n    for(int i=1;i<=h;i++)\n    {\n        cout<<\"\\n\";\n        for(int j=1;j<=w;j++)\n        {\n            printf(\"%3d\",ans[i][j]);\n        }\n    }\n}\nvoid initial()\n{\n    for(int i=1;i<=h;i++)\n        for(int j=1;j<=w;j++)\n            if(map[i][j]==2)ans[i][j]=-1;\n            else ans[i][j]=214748364;\n}\nbool vis[N][M];\nstruct ahah{\n    int x,y;\n}str,cur;\nqueue <ahah> que;\nvoid bfs(int x,int y)\n{\n    ans[x][y]=0;\n    vis[x][y]=1;\n    str.x=x;str.y=y;\n    que.push(str);\n    while(!que.empty())\n    {\n        cur=que.front();\n        que.pop() ;\n        for(int i=0;i<4;i++)\n        {\n            str.x=cur.x+dx[i];\n            str.y=cur.y+dy[i];\n            if(map[str.x][str.y]!=2&&str.x>=1&&str.x<=h\n            &&str.y>=1&&str.y<=w&&!vis[str.x][str.y])\n            {\n                ans[str.x][str.y]=min(ans[cur.x][cur.y]+map[str.x][str.y],ans[str.x][str.y]);\n                            \n                vis[str.x][str.y]=1;\n                que.push(str); \n            }\n        }\n    } \n    memset(vis,0,sizeof(vis));\n}\nvoid _printf()\n{\n    for(int i=1;i<=h;i++)\n        for(int j=1;j<=w;j++)\n            MAX=max(MAX,ans[i][j]);\n    printf(\"\\n%d\",MAX);\n}\nint main()\n{\n    _scanf();\n    _printf();\n}\n```\n",
        "postTime": 1533783477,
        "uid": 61727,
        "name": "Manjusaka\u4e36\u68a6\u5bd2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u9898\u89e3by\uff1aredbag\n\n\n\u539f\u9898\u89e3\u5730\u5740\uff1ahttp://redbag.duapp.com/?p=1361\n\n\n\u6211\u7684\u535a\u5ba2\uff1ahttp://redbag.duapp.com/\n\n\n\u6b22\u8fce\u6765\u8e29!\n\n\n\u8bfb\u5165\u6709\u70b9\u5751\u3002\u6211\u9009\u62e9\u5168\u90e8\u8bfb\u8fdb\u6765\uff0c\u7136\u540e\u5b58\uff0c\u5982\u56fe\u6240\u793a\uff1a\n\n\n\uff11\uff11\uff11\uff11\uff11\uff11\uff11\uff11\uff11\uff11\uff11\n\n\uff11\uff10\uff10\uff10\uff10\uff10\uff10\uff10\uff10\uff10\uff11\n\n\uff11\uff11\uff11\uff10\uff11\uff11\uff11\uff10\uff11\uff10\uff11\n\n\uff11\uff10\uff10\uff10\uff10\uff10\uff11\uff10\uff11\uff10\uff11\n\n\uff11\uff10\uff11\uff11\uff11\uff11\uff11\uff10\uff11\uff10\uff11\n\n\uff11\uff10\uff11\uff10\uff10\uff10\uff10\uff10\uff11\uff10\uff10\n\n\uff11\uff11\uff11\uff10\uff11\uff11\uff11\uff11\uff11\uff11\uff11\n\n\n\u6211\u4eec\u628a\u56fe\u4ee5\u5916\u7684\u90e8\u5206\u5168\u90fd\u6807\u8bb0\u4e3a\u5899\uff0c\u90a3\u4e48\uff0c\u95e8\u7684\u5468\u56f4\u5219\u53ea\u6709\u4e00\u4e2a\u65b9\u5411\u6709\u8def\u3002\n\n\n0\u4ee3\u8868\u683c\u5b50\uff1f\n\n\n\u4e0d\u4e0d\u4e0d\uff0c\u5982\u8fc70\u4ee3\u8868\u5404\u81ea\u7684\u8bdd\uff0c\u683c\u5b50\u5c31\u591a\u5f88\u591a\u3002\n\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u771f\u6b63\u7684\u683c\u5b50\u6a2a\u5750\u6807\u4e0e\u7eb5\u5750\u6807\u90fd\u662f\u5076\u6570\u3002\u8fd9\u6837\u5c31\u5f88\u597d\u5904\u7406\u4e86\uff0c\u6bcf\u6b21\u6a2a\u5750\u6807\u7eb5\u5750\u6807\u79fb\u52a82\u6b65\u3002\n\n\n\u628a\u51fa\u53e3\u5165\u961f\u5f88\u4e0d\u65b9\u4fbf\u554a\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u5c06\u79bb\u51fa\u53e3\u6700\u8fd1\u7684\u683c\u5b50\u5165\u961f\u3002\u4e5f\u5c31\u662f\u56fe\u4e2d&\u6240\u793a\n\n\n\uff11\uff11\uff11\uff11\uff11\uff11\uff11\uff11\uff11\uff11\uff11\n\n\uff11\uff10\uff10\uff10\uff10\uff10\uff10\uff10\uff10\uff10\uff11\n\n\uff11\uff11\uff11\uff10\uff11\uff11\uff11\uff10\uff11\uff10\uff11\n\n\uff11\uff10\uff10\uff10\uff10\uff10\uff11\uff10\uff11\uff10\uff11\n\n\uff11\uff10\uff11\uff11\uff11\uff11\uff11\uff10\uff11\uff10\uff11\n\n\uff11\uff10\uff11& \uff10\uff10\uff10\uff10\uff11& \uff10\n\n\uff11\uff11\uff11\uff10\uff11\uff11\uff11\uff11\uff11\uff11\uff11\n\n\n\u7136\u540e\u5c31\u5f00\u59cb\u704c\u6c34\u4e86\u3002\n\n\n\u5176\u5b9e\u8fd8\u662f\u5f88\u5feb\u7684\n\n\nExecuting...\n\n\nTest 1: TEST OK [0.000 secs, 6104 KB]\n\nTest 2: TEST OK [0.000 secs, 6104 KB]\n\nTest 3: TEST OK [0.000 secs, 6104 KB]\n\nTest 4: TEST OK [0.000 secs, 6104 KB]\n\nTest 5: TEST OK [0.000 secs, 6104 KB]\n\nTest 6: TEST OK [0.000 secs, 6104 KB]\n\nTest 7: TEST OK [0.011 secs, 6104 KB]\n\nTest 8: TEST OK [0.000 secs, 6104 KB]\n\nTest 9: TEST OK [0.000 secs, 6104 KB]\n\nTest 10: TEST OK [0.000 secs, 6104 KB]\n\n\nAll tests OK.\n\n\n\u4ee5\u4e0b\u7a0b\u5e8f\u6709\u5f88\u591a\u6ca1\u7528\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u5220\u6389\u63d0\u4ea4\u8bd5\u8bd523333\u3002\n\n```cpp\n/*\nID: ylx14271\nPROG: maze1\nLANG: C++     \n*/\n#include<set>  \n#include<map>  \n#include<list>\n#include<queue>\n#include<stack>\n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>\n#include<sstream>\n#include<iostream>\n#include<stdlib.h>\n#include<string.h>\n#include<algorithm>\n#define LL unsigned long long\nusing namespace std;\nint m,n,mm,i,j,k,ss,l,r;//mm:max\nint a[310][310];//\u5b58\u5730\u56fe\uff0c1\u4ee3\u8868\u5899\uff0c \nint f[310][310]={0};//\u6807\u8bb0\u7528 \nint dx[5]={0,-2,2,0,0};//\u4e0a\u4e0b\u5de6\u53f3 \nint dy[5]={0,0,0,-2,2};\nint ddx[5]={0,-1,1,0,0};//\u4e0a\u4e0b\u5de6\u53f3 \nint ddy[5]={0,0,0,-1,1};\nstruct he\n{\n    int x,y;\n    int t;//\u6b65\u6570 \n}d[100000]; \nchar x[500];\nint main() \n{\n    freopen(\"maze1.in\",\"r\",stdin);\n    freopen(\"maze1.out\",\"w\",stdout);\n    cin>>m>>n;\n    cin.getline(x,500);\n    ss=n*m;//\u683c\u5b50\u6570\u91cf \n    m=m*2+1;\n    n=n*2+1;\n    for (i=0;i<=n+3;i++)\n    {\n        for (j=0;j<=m+3;j++)\n            a[i][j]=1;//\u521d\u59cb\u5316 \n    }\n    for (i=1;i<=n;i++)\n    {\n        char c[500];\n        cin.getline(c,500);//\u8bfb\u5165 \n        for (j=1;j<=m;j++)\n        {\n            if (c[j-1]!='+'&&c[j-1]!='-'&&c[j-1]!='|')//\u5224\u65ad \n                a[i][j]=0;//\u6807\u8bb0\u4e0d\u662f\u5899\n        }\n    }\n \n     \n    for (i=1;i<=n;i++)\n        for (j=1;j<=m;j++)\n            f[i][j]=0;//\u521d\u59cb\u5316 \n             \n     \n    for (i=1;i<=n;i++)\n        for (j=1;j<=m;j++)\n        if ((i==1)||(j==1)||(i==n)||(j==m))//\u5728\u8fb9\u6846\u4e0a\n            if (a[i][j]==0)//\u662f\u51fa\u53e3\n            {//\u51fa\u53e3\u7684\u5916\u56f4\u8d4b\u521d\u503c\u7684\u65f6\u5019\u5c31\u53d8\u6210\u5899\u4e86,\u6240\u4ee5\u4fdd\u8bc1\u53ea\u6709\u4e00\u8fb9\u4e3a0 \n                for (k=1;k<=4;k++)\n                {\n                    if ((a[i+ddx[k]][j+ddy[k]]==0)&&//\u662f\u683c\u5b50 \n                    (i+ddx[k]>=1)&&(i+ddx[k]<=n)&&\n                    (j+ddy[k]>=1)&&(j+ddy[k]<=m)&&\n                    (f[i+ddx[k]][j+ddy[k]]==0))//\u6ca1\u5165\u961f \n                    {\n                        r++; //\u5165\u961f \n                        d[r].x=i+ddx[k];//\u5750\u6807 \n                        d[r].y=j+ddy[k];\n                        d[r].t=1;//\u6b65\u6570 \n                        f[i+ddx[k]][j+ddy[k]]=1;//\u6807\u8bb0\n                        break;\n                    } \n                }\n            }\n    mm=1; \n    while (l<r)\n    {\n        l++;\n        for (i=1;i<=4;i++)//\u56db\u4e2a\u65b9\u5411 \n        {\n            if (a[d[l].x+ddx[i]][d[l].y+ddy[i]]==0&&//\u6ca1\u5899\u6321\u7740 \n            d[l].x+dx[i]<=n&&d[l].y+dy[i]<=m&&//\u5728\u8303\u56f4\u5185 \n            d[l].x+dx[i]>=1&&d[l].y+dy[i]>=1&&//\u5728\u8303\u56f4\u5185 \n            f[d[l].x+dx[i]][d[l].y+dy[i]]==0)//\u6ca1\u5165\u961f \n                    {\n                        r++; //\u5165\u961f \n                        ss--;\n                        d[r].x=d[l].x+dx[i];//\u5750\u6807 \n                        d[r].y=d[l].y+dy[i];\n                        d[r].t=d[l].t+1;//\u6b65\u6570 \n                        f[d[r].x][d[r].y]=1;\n                        if (d[r].t>mm) mm=d[r].t;//\u627e\u6700\u5927\u6b65\u6570 \n                    } \n        } \n    }\n    printf(\"%d\\n\",mm); //\u8f93\u51fa \n    return 0;\n}\n```",
        "postTime": 1469781765,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "#### \u5410\u69fd\n\n\u8c03\u4e86\u4e09\u5c0f\u65f6\u7684\u9898\u76ee\u3002\u3002~~\u597d\u5427\u6211\u90fd\u4e0d\u77e5\u9053\u6211\u662f\u7b2c\u51e0\u6b21\u8c03\u8fd9\u4e48\u957f\u65f6\u95f4\u4e86QAQ~~\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u5730\u56fe\uff0c\u8ba9\u4f60\u6c42\u4ece\u4efb\u610f\u4e00\u4e2a\u51fa\u53e3\u5230\u8ff7\u5bab\u5185\u8ddd\u51fa\u53e3\u6700\u957f\u7684\u90a3\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\n\n#### \u89e3\u9898\u601d\u8def\n\n\u6bcf\u4e2a\u70b9\u90fd\u641c\u66b4\u641c\u4e00\u6b21\u6700\u77ed\u8ddd\u79bb\u80af\u5b9a\u4f1a\u70b8\u7684\u3002\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u8fd0\u7528\u53cd\u5411\u601d\u7ef4\uff0c\u5c06\u4e24\u4e2a\u51fa\u53e3\u627e\u51fa\u6765\uff0c\u7136\u540e\u8dd1\u4e24\u6b21BFS\uff0c\u66f4\u65b0\u51fa\u53e3\u5230\u8ff7\u5bab\u5185\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u6700\u540e\u6700\u5927\u7684\u5c31\u662f\u7b54\u6848\u3002\n\n\u8fd8\u4e0d\u7406\u89e3\uff1f\n\n\u90a3\u6211\u7528\u5e38\u8bc6\u6765\u5e2e\u52a9\u4f60\u7406\u89e3\u4e00\u4e0b\uff1a\n\n\u5047\u8bbe\u4ece\u4f60\u5bb6\u5230\u4f60\u7684\u5b66\u6821\u67091km\u90a3\u4e48\u8fdc\uff0c\u90a3\u4e48\u4ece\u4f60\u5bb6\u5230\u4f60\u7684\u5b66\u6821\u7684\u8ddd\u79bb\u662f\u4e0d\u662f\u8ddf\u4ece\u4f60\u7684\u5b66\u6821\u5230\u4f60\u5bb6\u7684\u8ddd\u79bb\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f1km\u90a3\u4e48\u8fdc\u5462\uff1f\n\n\u540c\u7406\uff0c\u8ff7\u5bab\u5185\u8ddd\u51fa\u53e3\u6700\u8fdc\u7684\u90a3\u4e2a\u70b9\u5230\u51fa\u53e3\u7684\u8ddd\u79bb\u4e5f\u5c31\u662f\u51fa\u53e3\u5230\u8ff7\u5bab\u5185\u8ddd\u51fa\u53e3\u6700\u8fdc\u7684\u90a3\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u4f46\u662f\uff01\n\n### \u5751\u70b9\u6765\u4e86\uff01\n\n\u8fd9\u662f\u4e2a\u5b57\u7b26\u4e32\uff0c\u600e\u4e48\u529e\uff1f\n\n\u5176\u5b9e\u5404\u79cd\u529e\u6cd5\u90fd\u53ef\u4ee5\u901a\u7528\u3002\u4f60\u76f4\u63a5\u7528\u5b57\u7b26\u4e32\u5f53\u5730\u56fe\u4e5f\u53ef\u4ee5\uff0c\u8f6c\u5316\u6210int\u6570\u7ec4\u4e5f\u53ef\u4ee5\uff0c\u5173\u952e\u662f\u8bfb\u5165\uff01\n\n\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u6709\uff1a\n\ngets\uff0cfgets\uff0cgetline\uff0ccin.getline\u7b49\u7b49\u3002\n\n\u8fd9\u91cc\u4e0d\u63a8\u8350\u7528gets\uff0c\u539f\u56e0\u8bf7\u81ea\u884c\u767e\u5ea6\u3002\n\n\u4f46\u662f\uff0c\u6ce8\u610f\u4e00\u4e2a\u70b9\uff1a\u5982\u679c\u4f60\u8bfb\u5165\u957f\u548c\u5bbd\u7684\u65f6\u5019\u7528\u7684\u662fcin\u800c\u4e0d\u662fscanf\uff0c\u90a3\u4e48\u4f60\u5c31\u8981\u5728\u8bfb\u5165\u771f\u6b63\u7684\u5730\u56fe\u4e4b\u524d\u591a\u8bfb\u5165\u4e00\u884c\uff01\n\n\u8fd9\u91cc\u53c8\u8981\u7275\u626f\u5230cin\u8ddfscanf\u7684\u533a\u522b\u4e86\uff1ascanf\u8bfb\u5165\u5b8c\u6570\u636e\u540e\u4f1a\u6e05\u6389\u8f93\u5165\u7684\u6570\u636e\u540e\u9762\u7684\u6240\u6709\u7a7a\u683c\u3001Tab\u548c\u56de\u8f66\uff0c\u800ccin\u4e0d\u4f1a\u3002\u8fd9\u5c31\u9020\u6210\uff0c\u4f60\u5728\u4f7f\u7528cin\u7684\u65f6\u5019\uff0c\u4f60\u5728\u957f\u548c\u5bbd\u8fd9\u4e24\u4e2a\u6574\u6570\u540e\u9762\uff0c\u8fd8\u6709\u4e00\u4e2a\u201c\u9690\u5f62\u201d\u7684\u6362\u884c\u7b26\uff0c\u5bfc\u81f4\u4f60\u8bfb\u5165\u7684\u5730\u56fe\u7b2c\u4e00\u884c\u53ea\u6709\u4e00\u4e2a\u56de\u8f66\uff0c\u4f60\u8bf4\u5751\u4e0d\u5751\uff1f\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int dx[]= {1,-1,0,0},dy[]= {0,0,1,-1};\nchar x[500];  //\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u5355\u884c\u8bfb\u5165\nint w,h;\t//\u5bbd\u548c\u957f\nint ans,now_long;\nint fx[2],fy[2];\nint f[210][210];\t\t//\u8bb0\u5f55\u70b9\u5230\u4efb\u610f\u4e00\u4e2a\u51fa\u53e3\u7684\u6700\u77ed\u8ddd\u79bb\nint flag[210][210];\t\t//\u6807\u8bb0\u662f\u4e0d\u662f\u5899\nbool arr[210][210];\t\t//\u6807\u8bb0\u8bbf\u95ee\u8fc7\u6ca1\u6709\nstruct node\n{\n\tint x,y;\n} now;\nqueue <node> que;\t\t//BFS\u961f\u5217\nvoid init()\n{\n\tcin.getline(x,500);\t//\u6211\u7528\u7684cin\uff0c\u6240\u4ee5\u8981\u591a\u52a0\u8fd9\u4e00\u884c\n\tfor(int i=0; i<210; i++)\t//\u521d\u59cb\u5316\n\t\tfill(f[i],f[i]+210,INT_MAX),fill(flag[i],flag[i]+210,1);\n\tfor(int i=1; i<=h; i++)\t//\u8bfb\u5165\u548c\u8f6c\u6362\n\t{\n\t\tcin.getline(x,500);\n\t\tfor(int j=1; j<=w; j++)\n\t\t\tif(x[j-1]==' ')\t//\u662f\u8def\u800c\u4e0d\u662f\u5899\n\t\t\t{\n\t\t\t\tflag[i][j]=0;//\u6807\u8bb0\u4e3a\u53ef\u4ee5\u8bbf\u95ee\n\t\t\t\tif((i==1||j==1||i==h||j==w)&&flag[i][j]==0)\n\t\t\t\t\tfx[now_long]=i,fy[now_long]=j,f[i][j]=1,now_long++;\t\t//\u627e\u51fa\u53e3\n\t\t\t}\n\t}\n}\nvoid bfs(int x,int y)\n{\n\tnode begin;\n\tbegin.x=x,begin.y=y;\n\tque.push(begin);\n\tarr[x][y]=1;\n\twhile(!que.empty())\n\t{\n\t\tnode stor=que.front();\n\t\tque.pop();\n\t\tfor(int i=0; i<4; i++)\n\t\t{\n\t\t\tint sx=stor.x+dx[i],sy=stor.y+dy[i];\n\t\t\tif(sx>0&&sx<=h&&sy>0&&sy<=w&&flag[sx][sy]==0&&arr[sx][sy]==0)\n\t\t\t{\n\t\t\t\tarr[sx][sy]=1;\n\t\t\t\tf[sx][sy]=min(f[sx][sy],f[stor.x][stor.y]+1);\n\t\t\t\tnow.x=sx,now.y=sy;\n\t\t\t\tque.push(now);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n//\tfreopen(\"maze1.in\",\"r\",stdin);\n//\tfreopen(\"maze1.out\",\"w\",stdout);\n\tios::sync_with_stdio(0);\n\tcin>>w>>h;\n\tw=2*w+1,h=2*h+1;\n\tinit();\t\t//\u8bfb\u5165+\u521d\u59cb\u5316\uff0c\u8fd9\u6837\u5f04\u4e2a\u51fd\u6570\u4e3b\u8981\u662f\u65b9\u4fbf\u8c03\u8bd5\n\tfor(int i=0; i<now_long; i++)\n\t{\n\t\tbfs(fx[i],fy[i]);\n\t\tfor(int j=0; j<210; j++)\n\t\t\tfill(arr[j],arr[j]+210,0);\t//\u6ce8\u610f\uff1a\u8fd9\u91cc\u8981\u91cd\u65b0\u521d\u59cb\u5316\uff01\u5426\u5219\u5c31\u4f1aWA\uff01\n\t}\n\tfor(int i=1; i<=h; i++)\n\t\tfor(int j=1; j<=w; j++)\n\t\t\tif(f[i][j]<INT_MAX)\t\t//\u88ab\u66f4\u65b0\u8fc7\uff0c\u56e0\u4e3a\u521d\u503c\u662fINT_MAX\n\t\t\t\tans=max(ans,f[i][j]);\n\tcout<<ans/2<<endl;\t\t//\u8fd9\u4e2a\u5c31\u81ea\u5df1\u53bb\u60f3\u4e3a\u4ec0\u4e48\u5427\uff0c\u51ed\u5404\u4f4d\u5927\u4f6c\u806a\u660e\u7684\u8111\u888b\u74dc\u5e94\u8be5\u4e0d\u96be\n\treturn 0;\n}\n```",
        "postTime": 1556372183,
        "uid": 133720,
        "name": "MKMASA",
        "ccfLevel": 5,
        "title": "P1519"
    },
    {
        "content": "usaco\u91cc\u7684\u641c\u7d22\u5176\u5b9e\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u8fd9\u81ea\u7136\u4e5f\u4e0d\u662f\u4e00\u9053\u6c34\u9898\uff08~~\u5176\u5b9e\u662f\u6211\u9898\u76ee\u770b\u9519\u4e86~~\uff09\n\u8fd9\u7c7b\u9898\u76ee\u4e00\u822c\u90fd\u662f\u4e00\u9898\u591a\u89e3\uff0c\u65e2\u7136\u5982\u6b64\u5783\u573e\u7684\u6211\u81ea\u7136\u7528bfs\n\n```pascal\nconst z:array[1..4,1..2]of -1..1=((1,0),(0,1),(-1,0),(0,-1));\nvar i,j,k:longint;\n    a,b:array[0..1000,0..1000]of boolean;\n    p:array[0..1000,0..1000]of longint;\n    x,y,u:array[0..1010101]of longint;\n    m,n,x1,y1,x2,y2,h,t,max:longint;\n    ch:char;\nprocedure bfs(x1,y1:longint);//\u4e00\u4e2a\u88f8\u7684bfs\nvar h,t,i,j,k:longint;\nbegin\n  h:=1;\n  t:=1;\n  x[1]:=x1;\n  y[1]:=y1;\n  b:=a;\n  u[1]:=0;\n  while h>=t do\n  begin\n    for i:=1 to 4 do\n    if b[x[t]+z[i,1],y[t]+z[i,2]] then\n    begin\n      inc(h);\n      b[x[t]+z[i,1],y[t]+z[i,2]]:=false;\n      x[h]:=x[t]+z[i,1];\n      y[h]:=y[t]+z[i,2];\n      u[h]:=u[t]+1;\n      if u[h]<p[x[h],y[h]] then p[x[h],y[h]]:=u[h];//\u8bb0\u5f55\u6700\u4f18\u89e3\uff0c\u56e0\u4e3a\u6709\u4e24\u4e2a\u51fa\u53e3\n    end;\n    inc(t);\n  end;\nend;\nbegin\n  read(n,m);\n  readln;//\u8bfb\u5165\u9ebb\u70e6\u4e00\u70b9\n  for i:=1 to m*2+1 do\n  begin\n    for j:=1 to n*2+1 do\n    begin\n      read(ch);\n      if ch=' ' then\n      begin\n        a[i,j]:=true;\n      end\n      else\n      begin\n        a[i,j]:=false;\n      end;\n      if (i=1) or (i=m*2+1) or (j=1) or (j=n*2+1) then//\u5728\u8fb9\u4e0a\n      if ch=' ' then\n      begin\n        if (x1=0) and (y1=0) then\n        begin\n          x1:=i;\n          y1:=j;\n        end\n        else\n        begin\n          x2:=i;\n          y2:=j;\n        end;\n      end;\n    end;\n    readln;\n  end;\n  p[x1,y1]:=1;\n  p[x2,y2]:=1;\n  for i:=1 to m*2+1 do\n  for j:=1 to n*2+1 do\n  begin\n    p[i,j]:=maxlongint;//\u521d\u503c\n  end;\n  //\u4e24\u4e2a\u51fa\u53e3\n  bfs(x1,y1);\n  bfs(x2,y2);\n  for i:=2 to m*2 do\n  for j:=2 to n*2 do if (p[i,j]>max) and (p[i,j]<>maxlongint) and (i mod 2=0) and (j mod 2=0) then {\u627e\u6700\u5927\u503c}max:=p[i,j];\n  write(max div 2+1);//\u56e0\u4e3a\u8bb0\u5f55\u7684\u662f\u683c\u6570\u4e0d\u662f\u5b57\u7b26\u6570\nend.\n```\n\u6700\u540e\u624d\u53d1\u73b0\u8fd9\u9898\u96be\u5ea6\u5176\u5b9e\u662f\u5728\u8bfb\u5165\u548c\u5904\u7406\u3002~~\u8fd8\u662f\u86ee\u6c34\u7684~~",
        "postTime": 1544948696,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u5f88\u88f8\u7684\u5bbd\u641c\u9898\uff0c\u5176\u5b9e\u4e0d\u9700\u8981\u641c\u4e24\u6b21\uff0c\u4ee5\u4e24\u4e2a\u51fa\u53e3\u540c\u65f6\u4f5c\u4e3a\u8d77\u70b9\u641c\u4e00\u904d\u5c31\u884c\u4e86\uff0c\u641c\u5230\u7684\u6700\u540e\u4e00\u4e2a\u70b9\u5c31\u662f\u6700\u8fdc\u7684\u3002\n\n\u53e6\u5916\u6ce8\u610f\u4e00\u4e0b\u8fd9\u91cc\u662f\u5148\u8f93\u5165\u5bbd\u5ea6\uff08~~mmp\u5751\u6211\u597d\u4e45~~\uff09\uff0c\u8fd8\u6709\u8f93\u5165\u7684\u4e00\u4e9b\u7ec6\u8282\u5373\u53ef\uff08\u5177\u4f53\u89c1\u4ee3\u7801\uff09\u3002\n\n**\u6ce8\u610fLinux\u73af\u5883\u4e0b\u91cc\u9762\u7684\u6362\u884c\u4e3a\\r\\n**,\u5373\u8f93\u5165\u65f6\u5224\u65ad\u6362\u884c\u8fd8\u8981\u5224\u65ad'\\r'\u3002\n\n**\u4ee3\u7801**\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\ninline int read()\n{\n    int x=0,w=0;char ch=getchar();\n    while(ch<'0'||ch>'9')w|=ch=='-',ch=getchar();\n    while(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return w?-x:x;\n}\nint n,m;\nstruct node{int x,y,d;}a[4200];\nbool map[105][40][4];//map[a][b][c]=1\u8868\u793a\u5728\u7b2ca\u884cb\u5217\u7684\u683c\u5b50\u53ef\u5411c\u65b9\u5411\u8d70\nbool v[105][40];\nconst int dx[4]={-1,0,1,0};\nconst int dy[4]={0,1,0,-1};\nint bfs()\n{\n\tint head=0,tail=0;\n\tfor(register int i=n;i;--i)\n\t{\n\t\tif(map[i][1][3]&&!v[i][1])\n\t\t{\n\t\t\ta[++tail].x=i,a[tail].y=1;\n\t\t\ta[tail].d=1,v[i][1]=1;\n\t\t}\n\t\tif(map[i][m][1]&&!v[i][m])\n\t\t{\n\t\t\ta[++tail].x=i,a[tail].y=m;\n\t\t\ta[tail].d=1,v[i][m]=1;\n\t\t}\n\t}\n\tfor(register int i=m;i;--i)\n\t{\n\t\tif(map[1][i][0]&&!v[1][i])\n\t\t{\n\t\t\ta[++tail].x=1,a[tail].y=i;\n\t\t\ta[tail].d=1,v[1][i]=1;\n\t\t}\n\t\tif(map[n][i][2]&&!v[n][i])\n\t\t{\n\t\t\ta[++tail].x=n,a[tail].y=i;\n\t\t\ta[tail].d=1,v[n][i]=1;\n\t\t}\n\t}//\u627e\u51fa\u53e3\n\twhile(head<tail)\n\t{\n\t\tint x=a[++head].x,y=a[head].y;\n\t\tfor(register int i=0;i<=3;++i)\n\t\t{\n\t\t\tint xx=x+dx[i],yy=y+dy[i];\n\t\t\tif(map[x][y][i]&&!v[xx][yy]&&xx>0&&yy>0&&xx<=n&&yy<=m)\n\t\t\t{\n\t\t\t\ta[++tail].x=xx,a[tail].y=yy;\n\t\t\t\ta[tail].d=a[head].d+1,v[xx][yy]=1;\n\t\t\t}\n\t\t}\n\t}\n\treturn a[tail].d;//\u6700\u8fdc\u7684\u70b9 \n}\nint main()\n{\n\tm=read(),n=read();\n\tfor(register int i=1;i<=2*n+1;++i)\n\t{\n\t\tif(i&1)\n\t\t{\n\t\t\tchar ch=getchar();\n\t\t\twhile(ch!='+')ch=getchar();\n\t\t\tfor(register int j=1;j<=m;++j)\n\t\t\t{\n\t\t\t\tmap[i>>1][j][2]=map[(i>>1)+1][j][0]=getchar()==' ';//\u8bb0\u5f55\u6805\u680f\u4fe1\u606f\n\t\t\t\tgetchar();//\u8bfb\u5165\u65e0\u7528\u7684'+' \n\t\t\t}getchar();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tchar ch=getchar();\n\t\t\twhile(ch=='\\n'||ch=='\\r')ch=getchar();\n\t\t\tfor(register int j=1;j<=m;++j)\n\t\t\t{\n\t\t\t\tmap[i>>1][j-1][1]=map[i>>1][j][3]=ch==' ';\n\t\t\t\tgetchar(),ch=getchar();\n\t\t\t}map[i>>1][m][1]=map[i>>1][m+1][3]=ch==' ';\n\t\t}\n\t}//\u8f93\u5165\n\tprintf(\"%d\\n\",bfs());\n    return 0;\n}\n```",
        "postTime": 1524034731,
        "uid": 30727,
        "name": "liaohaoping",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint h,w,js=1,ans=0;\nchar a[500][500];\nint bj[3],b[3],dj[10000],dj1[10000],dj2[10000];\nint f[500][500],n,m;\nbool l[500][500];\nint fx[10]= {0,0,0,1,-1};\nint fy[10]= {0,1,-1,0,0};\nint bfs(int x,int y) {\n    int head=0,tail=1;\n    dj[1]=x;\n    dj1[1]=y;\n    dj2[1]=0;\n    do {\n        head++;\n        for(int i=1; i<=4; i++) {\n            x=dj[head]+fx[i];\n            y=dj1[head]+fy[i];\n            if(a[x][y]==' '&&x>0&&x<=n&&y>0&&y<=m&&l[x][y]==0) {//\u5224\u65ad\u8fd9\u70b9\u662f\u4e0d\u662f\u5728\u8ff7\u5bab\u91cc\u9762\u6216\u4e3a\u4e0d\u4e3a\u7a7a\u683c\n                tail++;\n                f[x][y]=min(f[x][y],dj2[head]+1);//\u5750\u6807\u4e3a(x,y)\u7684\u70b9\u5230\u8ff7\u5bab\u7684\u6700\u77ed\u8def\u5f84\n                dj[tail]=x;\n                dj1[tail]=y;\n                dj2[tail]=dj2[head]+1;\n                l[x][y]=1;//\u6807\u8bb0\u5750\u6807\u4e3a(x,y)\u7684\u70b9\n            }\n        }\n    } while(head<tail);//\u5f53\u5934<\u5c3e\u65f6\u5faa\u73af\n}\nint main() {\n    for(int i=1; i<=500; i++)\n        for(int j=1; j<=500; j++)\n            f[i][j]=10000;//\u628af\u6570\u7ec4\u8d4b\u4e00\u4e2a\u5f88\u5927\u7684\u503c\n    cin>>w>>h;//\u8f93\u5165\n    char c;\n    n=2*h+1;\n    m=2*w+2;\n    for(int i=1; i<=n; i++) {\n        for(int j=1; j<=m; j++) {\n            do scanf(\"%c\",&a[i][j]);\n            while(a[i][j]=='\\n');\n            if((i==1||j==2||i==n||j==m)&&a[i][j]==' ') {//\u5bfb\u627e\u8ff7\u5bab\u51fa\u53e3\n                b[js]=i;//\u6807\u8bb0\u51fa\u53e3\u7684\u5750\u6807i\n                bj[js]=j;//\u6807\u8bb0\u51fa\u53e3\u7684\u5750\u6807j\n                js++;\n            }\n        }\n    }\n    int ja=0;\n    for(int i=1; i<js; i++) {//\u679a\u4e3e\u8ff7\u5bab\u51fa\u53e3\n        memset(l,0,sizeof(l));//\u628al\u6570\u7ec4\u6e05\u7a7a\n        bfs(b[i],bj[i]);//\u5f00\u59cb\u641c\u7d22\n    }\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=m; j++)\n            if(f[i][j]!=10000)\n                ja=max(f[i][j],ja);\n    cout<<(ja+1)/2;\n    return 0;\n}\n```",
        "postTime": 1497013773,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P1519)\n\n\u8fd9\u9053\u9898\u76ee\u662f\u4e00\u9053\u7ecf\u5178\u7684\u5e7f\u641c\u9898\uff0c\u4f46\u662f\u9898\u76ee\u9605\u8bfb\u8d77\u6765\u6709\u4e00\u4e9b\u56f0\u96be\u3002\u8fd9\u5e45\u56fe\u8bfb\u8d77\u6765\u6709\u8bef\u5bfc\u6027\u3002\u4e3a\u5904\u7406\u8fd9\u79cd\u8bef\u5bfc\u6027\uff0c\u6709\u7684dalao\u7528\u8df3\u4e24\u6b65\u7684\u65b9\u6cd5\u5904\u7406\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u5904\u7406\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u9762\u524d\u521b\u9020\u6709\u4e00\u4e2a $H\\times W$ \u7684\u65b9\u683c\u9635\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5728\u67d0\u4e9b\u65b9\u683c\u4e4b\u95f4\u753b\u4e0a\u4e00\u6761\u76f4\u7ebf\uff0c\u76f4\u7ebf\u4e0d\u53ef\u8d8a\u8fc7\u3002\n\n\u7136\u540e\uff0c\u4f5c BFS \u3002\n\n\u8fd9\u5c31\u662f\u6211\u7684\u4ee3\u7801\u7684\u57fa\u672c\u601d\u8def\u3002\n\n\u6211\u4eec\u521b\u5efa\u4e00\u4e2a bool \u6570\u7ec4 $Ways_{i,j,k}$ \u6765\u6807\u8bc6\u5728\u65b9\u683c     $Maps_{i,j}$ \u5411 k \u65b9\u5411\u8d70\u4e00\u683c\u662f\u5426\u53ef\u4ee5\u3002\u600e\u4e48\u5224\u65ad\u5462\uff1f\uff1f\u5f88\u7b80\u5355\u3002\u770b\u8d70\u4e00\u6b65\u662f\u7a7a\u683c\u8fd8\u662f\u6805\u680f\uff08\u6ce8\u610f\u8f93\u5165\u7684\u56fe\u4e0e\u6211\u4eec\u521b\u5efa\u7684\u56fe\u4e4b\u95f4\u9700\u8981 $\\times 2$ \u8f6c\u6362\uff09\u3002\n\n\n\u5982\u4f55\u5224\u65ad\u51fa\u53e3\u5462\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u8fd9\u4e00\u8df3\u51fa\u754c\u4e86\u5c31\u53ef\u4ee5\u3002\n\n\n```cpp\nfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tfor(int k=1;k<=4;k++)\n\t\t\t{\n\t\t\t\tint xf=i*2+xgo[k],yf=j*2+ygo[k];//\u5976\u725b\u7684\u56db\u4e2a\u65b9\u5411\n\t\t\t\tif(Maps[xf][yf]==' ')\tWays[i][j][k]=true;\n\t\t\t\telse\t\t\t\t\tWays[i][j][k]=false;\n\n\t\t\t\tif(Ways[i][j][k]==true && (i+xgo[k]>n || i+xgo[k]<1 || j+ygo[k]>m || j+ygo[k]<1) )//\u8fd9\u4e00\u8df3\u8df3\u51fa\u4e86\u5730\u56fe\u7684\u8fb9\u754c\n\t\t\t\t{\n\t\t\t\t\tGet.x=i,Get.y=j,Get.h=1;\n\t\t\t\t\tRailways.push(Get);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n\u7136\u540e\u53cd\u5411\u4f5cBFS\u3002\n\n\u987a\u4fbf\u9644\u4e00\u53e5\uff0cgets(s+1) \u662f\u4ece$s_{1}$\u5f00\u59cb\u8bfb\u7684\u3002\n\n\u9644\u4e0a\u4ee3\u7801\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint xgo[10]={0,1,-1,0,0};\nint ygo[10]={0,0,0,1,-1};\nint n,m,Ans;\nchar Maps[205][205];\nbool Ways[205][205][10];\nint Flag[205][205];\nstruct node\n{\n\tint x,y,h;\n};\nnode Put,Get;\nqueue<node> Railways;//\u5e7f\u641c\u7684\u6807\u51c6\u6a21\u677f\nint main()\n{\n\tmemset(Flag,0,sizeof(Flag));\n\tscanf(\"%d%d\",&m,&n);\n\tgets(Maps[0]);//\u8bfb\u6389\u6362\u884c\u7b26\n\t\n\tfor(int i=1;i<=n*2+1;i++)\n\tgets(Maps[i]+1);//\u8bfb\u5165\u5730\u56fe\n\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tfor(int k=1;k<=4;k++)\n\t\t\t{\n\t\t\t\tint xf=i*2+xgo[k],yf=j*2+ygo[k];//\u5976\u725b\u7684\u56db\u4e2a\u65b9\u5411\n\t\t\t\tif(Maps[xf][yf]==' ')\tWays[i][j][k]=true;\n\t\t\t\telse\t\t\t\t\tWays[i][j][k]=false;\n\n\t\t\t\tif(Ways[i][j][k]==true && (i+xgo[k]>n || i+xgo[k]<1 || j+ygo[k]>m || j+ygo[k]<1) )//\u8fd9\u4e00\u8df3\u8df3\u51fa\u4e86\u5730\u56fe\u7684\u8fb9\u754c\n\t\t\t\t{\n\t\t\t\t\tGet.x=i,Get.y=j,Get.h=1;\n\t\t\t\t\tRailways.push(Get);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\twhile(Railways.empty()==false)\n\t{\n\t\tGet=Railways.front();\n\t\tRailways.pop();\n\t\tAns=Get.h;\n\t\tfor(int i=1;i<=4;i++)\n\t\t{\n\t\t\tint xf=Get.x+xgo[i];\n\t\t\tint yf=Get.y+ygo[i];\n\t\t\tif(Ways[Get.x][Get.y][i]==true && Flag[xf][yf]==0 && (Get.x+xgo[i]>n || Get.x+xgo[i]<1 || Get.y+ygo[i]>m || Get.y+ygo[i]<1)==false)\n\t\t\t{\n\t\t\t\tPut.x=xf,Put.y=yf,Put.h=Get.h+1;\n\t\t\t\tFlag[xf][yf]=Put.h;\n\t\t\t\tRailways.push(Put);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",Ans);\n\t/*for(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\tprintf(\"%3d\",Flag[i][j]);\n\t\tputchar('\\n');\n\t}*/\n\t//system(\"pause\");\n\treturn 0;\n } \n```\n\n",
        "postTime": 1580864830,
        "uid": 157351,
        "name": "Berkry\u00b7Lanrings",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u53cc\u6362\u884c\u53cc\u6362\u884c\u53cc\u6362\u884c\u53cc\u6362\u884c\u53cc\u6362\u884c\u53cc\u6362\u884c\u53cc\u6362\u884c\u3002\u3002\u3002\u3002\u8fd9\u662f\u8fd9\u9053\u9898\u7684\u91cd\u70b9\u3002\u3002\u3002\u3002\n\u5f88\u7b80\u5355\u7684bfs\u88f8\u9898\u3002\u3002\u548c\u697c\u4e0a\u8bf4\u7684\u4e00\u6837\uff0c\u7528\u4e24\u4e2a\u8d77\u70b9\u4f5c\u4e3a\u5f00\u5934bfs\u6c42\u6700\u77ed\u70b9\uff0c\u4e0d\u8fc7\u6709\u51e0\u70b9\u8981\u6ce8\u610f\uff1a\n1\uff1a\u4e24\u6b21bfs\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7684\u8986\u76d6\u95ee\u9898\u3002\n2\uff1a\u56e0\u4e3a\u56fe\u7684\u95ee\u9898\uff0c\u6700\u540e\u7684\u8f93\u51fa\u8981\u52a0\u4e00\u9664\u4e8c\uff0c\u56e0\u4e3a\u79fb\u52a8\u4e24\u6b21\u624d\u7b97\u4e00\u6b65\uff0c\u800c\u6700\u540e\u7684\u4e00\u4e2a\u79fb\u52a8\u4e00\u6b65\u7b97\u4e00\u6b21\u3002\n3.\u53ef\u80fd\u662f\u6211\u7535\u8111\u7684\u95ee\u9898\uff1f\u4ed6\u7684\u540e\u9762\u5982\u679c\u5168\u662f\u7a7a\u683c\u7684\u8bdd\u4f1a\u4e0d\u8f93\u5165\uff0c\u6ce8\u610f\u8865\u5168\u3002\n\u63a5\u4e0b\u6765\u4e0a\u4ee3\u7801\u3002\u3002\u6211\u7684\u547d\u540d\u4e0d\u53ef\u80fd\u8fd9\u4e48\u6076\u5fc3\u3002\u3002\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <queue>\nusing namespace std;\nint m,x,h,n,cx,cy,ans=0;\nchar p[222][222],v;\nint bj1[210][210],l,k,j,g,f[210][210],s[4][2]= {1,0,-1,0,0,1,0,-1},bj2[210][210],xx[2],yy[2],qqq;\ntypedef struct\n{\n    int x,y;\n} fhs;\nfhs a,b,c,d,e;\nqueue<fhs> ll;\nint bfs(int x,int y,int z)\n{\n    b.x=x;\n    b.y=y;\n    if(z==1)\n    {\n        ll.push(b);\n        while(!ll.empty())\n        {\n            c.x=ll.front().x;\n            c.y=ll.front().y;\n            ll.pop();\n            for(int x1=0; x1<4; x1++)\n            {\n                int cx=c.x+s[x1][0];\n                int cy=c.y+s[x1][1];\n                if(cx>0&&cx<(2*m)&&cy>0&&cy<2*n&&p[cx][cy]==' '&&bj1[cx][cy]==0)\n                {\n                    bj1[cx][cy]=1;\n                    f[cx][cy]=min(f[cx][cy],f[c.x][c.y]+1);\n                    d.x=cx;\n                    d.y=cy;\n                    ll.push(d);\n                }\n            }\n        }\n    }\n    if(z==2)\n    {\n        ll.push(b);\n        while(!ll.empty())\n        {\n            c.x=ll.front().x;\n            c.y=ll.front().y;\n            ll.pop();\n            for(int x1=0; x1<4; x1++)\n            {\n                int cx=c.x+s[x1][0];\n                int cy=c.y+s[x1][1];\n                if(cx>0&&cx<(2*m)&&cy>0&&cy<2*n&&p[cx][cy]==' '&&bj2[cx][cy]==0)\n                {\n                    bj2[cx][cy]=1;\n                    f[cx][cy]=min(f[cx][cy],f[c.x][c.y]+1);\n                    d.x=cx;\n                    d.y=cy;\n                    ll.push(d);\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    for(int x=0; x<210; x++)\n        for(int y=0; y<210; y++)\n        {\n            f[x][y]=10000000;\n\n        }\n    cin>>n>>m;\n    getchar();\n    getchar();//\u8fd9\u4e2agetchar\uff08\uff09\u8ba9\u6211\u627e\u4e86\u4e00\u4e2a\u5c0f\u65f6\u3002\u3002\u3002\u3002\u3002\u3002\u53cc\u6362\u884c\uff01\n    for(int x=0; x<(2*m)+1; x++)\n    {\n        gets(p[x]);\n        int ppp=strlen(p[x]);\n        if(ppp!=2*n+1)\n        {\n            for(int z=ppp; z<2*n+1; z++)\n            {\n                p[x][z]=' ';\n            }\n            ppp=2*n+1;\n            p[x][ppp]=0;\n        }\n        for(int y=0; y<ppp; y++)\n        {\n            if((x==0||y==0||x==2*m||y==ppp-1)&&p[x][y]==' ')\n            {\n                xx[qqq]=x;\n                yy[qqq]=y;\n                f[x][y]=0;\n                qqq++;\n            }\n        }\n    }\n    for(int x=1; x<=qqq; x++)\n    {\n        bfs(xx[x-1],yy[x-1],x);\n    }\n    for(int x=1; x<2*m; x++)\n        for(int y=1; y<2*n; y++)\n        {\n            if(f[x][y]<11000)\n            {\n                ans=max(ans,f[x][y]);\n            }\n        }\n    cout<<(ans+1)/2<<endl;\n}\n\n```",
        "postTime": 1531920888,
        "uid": 73320,
        "name": "lenaalyth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u58f0\u660e\u4e00\u4e0b\uff0c\u6211\u7684\u4ee3\u7801\u6d1b\u8c37\u6837\u4f8b\u5355\u7eaf\u662f\u901a\u4e0d\u8fc7\u7684\uff0c\u8981\u5220\u6389\u4e00\u4e2agetchar();\u4e3a\u4ec0\u4e48\u5462\uff1f\u8ba8\u8bba\u91cc\u7684\u51e0\u4e2a\u5927\u4f6c\u63d0\u9192\u4e86\u6211\uff0c\u7ec8\u4e8e\u628aUSACO\u8bad\u7ec3\u9898AK\u4e86\u3002\u8be6\u60c5\u89c1\u8ba8\u8bba\u7248\"!!!!\u6ce8\u610f\u6362\u884c\u7b26\"\n\nLinux\u91cc\u9762\u662f\\r\\n\uff0cWindows\u91cc\u9762\u662f\\n;\n\n\u8fd9\u9053\u9898\u5177\u4f53\u662f\u5e7f\u641c\uff0c\u6df1\u641c\u70b8\u4e86\u3002\u9996\u5148\u8bfb\u5165\u521d\u59cb\u5316\uff0c\u7136\u540e\u627e\u5230\u51fa\u53e3\u4ee5\u540e\u6309\u51fa\u53e3\u5f00\u59cb\u904d\u5386\u4e24\u904d\uff0c\u53d6\u4e24\u8005\u7684\u6700\u5c0f\u503c\u6bd4\u8f83\u5176\u4e2d\u7684\u6700\u5927\u503cqwq\n\nCode Below:\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <queue>\nusing namespace std;\nstruct Point\n{\n    int value;\n    int Exit[3];\n}e[510][510];//\u5730\u56fe\nint w,h;\nint x1,y1,x2,y2,x3,y3,x4,y4;\nint Exit[2][2],tot=0;//\u51fa\u53e3\nint rx[4]={0,0,1,-1};\nint ry[4]={1,-1,0,0};//\u65b9\u5411\nint used[510][510];//\u54c8\u5e0c\nint check(int x,int y);\nvoid BFS(int x,int y,int num)\n{\n    queue<int> q;\n    q.push(x),q.push(y);\n    memset(used,0,sizeof(used));\n    used[x][y]=1;\n    while(!q.empty())\n    {\n        int p1,q1;\n        p1=q.front(),q.pop();\n        q1=q.front(),q.pop();\n        for(int k=0;k<4;k++)\n        {\n            int u=p1+rx[k];\n            int v=q1+ry[k];\n            if(u<1||u>2*h+1||v<1||v>2*w+1||used[u][v]==1)\n                continue;\n            if(e[u][v].value==0||e[u][v].value==1){\n                if(check(u,v)==0)\n                    e[u][v].Exit[num]=e[p1][q1].Exit[num]+1;\n                else e[u][v].Exit[num]=e[p1][q1].Exit[num];\n                used[u][v]=1;q.push(u);q.push(v);\n            }\n        }\n```\n}//\u5e7f\u641c\uff0c\u78b0\u5230+\u5c31\u76f4\u63a5copy,\u5176\u4ed6\u60c5\u51b5+1\n\n```cpp\n}\nint check(int x,int y)\n{\n    for(int k=0;k<4;k++)\n    {\n        int u=x+rx[k];\n        int v=y+ry[k];\n        if(u<1||u>2*h+1||v<1||v>2*w+1)\n            continue;\n        if(e[u][v].value==-2)\n            return 1;\n    }\n    return 0;\n```\n}//\u770b\u770b\u662f\u5426\u9047\u5230+\u53f7\n\n```cpp\nint main()\n{\n    char c;\n    scanf(\"%d%d\",&w,&h);getchar();getchar();\n    for(int i=1;i<=2*h+1;i++){\n        for(int j=1;j<=2*w+1;j++){\n            scanf(\"%c\",&c);\n            if(c=='-'||c=='|')\n                e[i][j].value=-1;\n            else if(c=='+') e[i][j].value=-2;\n            else e[i][j].value=0;\n            e[i][j].Exit[1]=e[i][j].Exit[2]=0;\n```\n/\\*+\u8d4b\u503c-2.-\u548c|\u8d4b\u503c-1\uff0c\u7a7a\u683c\u8d4b\u503c0\\*/\n```cpp\n        }\n        getchar();getchar();\n    }\n    /*for(int i=1;i<=2*h+1;i++){\n        for(int j=1;j<=2*w+1;j++){\n            printf(\"%d \",e[i][j].value);\n        }\n        printf(\"\\n\");\n    }*/\n    for(int i=1;i<=2*w+1;i++){\n        if(e[1][i].value==0){\n            Exit[tot][0]=1,Exit[tot][1]=i;tot++;\n        }\n        if(e[2*h+1][i].value==0){\n            Exit[tot][0]=2*h+1,Exit[tot][1]=i;tot++;\n        }\n    }\n    for(int i=1;i<=2*h+1;i++){\n        if(e[i][1].value==0){\n            Exit[tot][0]=i,Exit[tot][1]=1;tot++;\n        }\n        if(e[i][2*w+1].value==0){\n            Exit[tot][0]=i,Exit[tot][1]=2*w+1;tot++;\n        }\n```\n}//\u627e\u51fa\u53e3\ne[Exit[0][0]][Exit[0][1]].value=e[Exit[0][0]][Exit[0][1]].Exit[1]=0;\n\ne[Exit[1][0]][Exit[1][1]].value=e[Exit[1][0]][Exit[1][1]].Exit[2]=0;\n\n//printf(\"%d %d\\n%d %d\\n\",Exit[0][0],Exit[0][1],Exit[1][0],Exit[1][1]);\n\n```cpp\n    BFS(Exit[0][0],Exit[0][1],1);\n    BFS(Exit[1][0],Exit[1][1],2);\n    int Max=0;\n    /*for(int i=1;i<=2*h+1;i++){\n        for(int j=1;j<=2*w+1;j++){\n            if(min(e[i][j].Exit[1],e[i][j].Exit[2])>=10)\n                printf(\"%d \",min(e[i][j].Exit[1],e[i][j].Exit[2]));\n            else printf(\"%d  \",min(e[i][j].Exit[1],e[i][j].Exit[2]));\n        }\n        printf(\"\\n\");\n    }*/\n    for(int i=1;i<=2*h+1;i++){\n        for(int j=1;j<=2*w+1;j++){\n            if(e[i][j].value==0&&min(e[i][j].Exit[1],e[i][j].Exit[2])>Max)\n                Max=min(e[i][j].Exit[1],e[i][j].Exit[2]);\n        }\n```\n}//\u53d6\u6700\u5927\u503c\n    printf(\"%d\\n\",Max);\n\n    return 0;\n\n}\n\u6211\u6562\u4fdd\u8bc1\u6211\u7684\u9898\u89e3\u867d\u7136\u4e0d\u662f\u6700\u7b80\u6d01\u7684\u4f46\u4e00\u5b9a\u662f\u6700\u597d\u61c2\u7684\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n",
        "postTime": 1514291159,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u9898\u89e3\u533a\u91cc\u90fd\u662f\u4e00\u6b21\u6027\u8d70\u4e24\u6b65\n\n\u8fd9\u91cc\u6211\u5c31\u8bf4\u4e00\u70b9\n\n\u6309\u666e\u901a(\u6bcf\u6b21\u8d70\u4e00\u6b65)\u7684\u6765\u6700\u540e$+1$\u518d\u9664\u4ee5$2$\u5c31\u884c\u4e86\n\n\u53e6\u5916\u8f93\u5165\u65f6\u52a0\u4e2a\u65f6\u95f4\u9650\u5236 \uff08$q++ if(q>=w)break;$\uff09\n\n```cpp\n/*\nID:death_r2\nTASK:maze1\nLANG:C++\n*/\n#include <queue>\n#include <cstdio>\n#include <string>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define reg register int\n#define isdigit(x) ('0' <= x&&x <= '9')\ntemplate<typename T>\ninline T Read(T Type)\n{\n    T x = 0,f = 1;\n    char a = getchar();\n    while(!isdigit(a)) {if(a == '-') f = -1;a = getchar();}\n    while(isdigit(a)) {x = (x << 1) + (x << 3) + (a ^ '0');a = getchar();}\n    return x * f;\n}\nstring mp[210];\nbool vis[3][210][210];\nint cnt,ans,d[3][210][210],dir[4][2] = {{1,0},{-1,0},{0,1},{0,-1}},w,h;\npair<int,int> s[3];\n#define pii_pii pair<int,pair<int,int> >\ninline void bfs(pair<int,int> s,int index)\n{\n    priority_queue<pii_pii,vector<pii_pii >,greater<pii_pii > > q;\n    q.push(make_pair(0,s));\n    vis[index][s.first][s.second] = 1;\n    while(!q.empty())\n    {\n        pii_pii it = q.top();q.pop();\n        for(reg i = 0;i < 4;i++)\n        {\n            int x = it.second.first + dir[i][0];\n            int y = it.second.second + dir[i][1];\n            if(x < 1||x > h||y < 0||y >= w||mp[x][y] != ' '||vis[index][x][y]) continue;\n            d[index][x][y] = d[index][it.second.first][it.second.second] + 1;\n            vis[index][x][y] = 1;\n            q.push(make_pair(d[index][x][y],make_pair(x,y)));\n        }\n    }\n}\nint main()\n{\n//    freopen(\"maze1.in\",\"r\",stdin);\n//    freopen(\"maze1.out\",\"w\",stdout);\n    w = Read(1) << 1 ^ 1,h = Read(1) << 1 ^ 1;\n    for(reg i = 1;i <= h;i++)\n    {\n        char x = getchar();\n        while(x != ' '&&x != '|'&&x != '+'&&x != '-') x = getchar();\n        int q = 0;\n\t\twhile(x != '\\n')\n        {\n        \t++q;\n            mp[i] += x;\n            x = getchar();\n \t\t\tif(q >= w) break;\n        }\n    }\n    for(reg i = 1;i <= h;i++)\n        while(mp[i].size() < w) mp[i] += ' ';\n    for(reg i = 0;i < w;i++)\n    {\n        if(cnt == 2) break;\n        if(mp[1][i] == ' ') s[++cnt] = make_pair(1,i);\n        if(mp[h][i] == ' ') s[++cnt] = make_pair(h,i);\n    }\n    for(reg i = 1;i <= h;i++)\n    {\n        if(cnt == 2) break;\n        if(mp[i][0] == ' ') s[++cnt] = make_pair(i,0);\n        if(mp[i][w - 1] == ' ') s[++cnt] = make_pair(i,w - 1);\n    }\n    bfs(s[1],1),bfs(s[2],2);\n    for(reg i = 1;i <= h;i++)\n        for(reg j = 0;j < w;j++)\n            ans = max(ans,min((d[1][i][j] + 1) / 2,(d[2][i][j] + 1) / 2));\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1575173535,
        "uid": 73992,
        "name": "resftlmuttmotw",
        "ccfLevel": 0,
        "title": "\u7a7f\u8d8a\u6805\u680f Overfencing"
    },
    {
        "content": "**\u6700\u77ed\u8defSPFA**\n\n\u4f5c\u4e3a\u7b2c\u4e00\u7bc7\u6700\u77ed\u8def\u9898\u89e3\uff0c\u6211\u611f\u89c9\u8fd9\u8c8c\u4f3c\u662f\u6700\u7b80\u5355\u7684\u4e00\u4e2a\u601d\u8def\u3002\n\n\u6211\u4eec\u9996\u5148\u628a\u6574\u4e2a\u5b57\u7b26\u77e9\u9635\u8bfb\u5230\u5b57\u7b26\u4e8c\u7ef4\u6570\u7ec4\u4e2d\n\n### \u5efa\u56fe\n\n* \u5bf9\u4e8e$ch_{x,y}$\uff0c\u5982\u679c$x mod 2 == 0$\u4e14$y mod 2 == 0$\uff0c\u6682\u4e14\u7ba1\u8fd9\u6837\u7684\u4e00\u683c\u53eb\u505a\u623f\u95f4\n\n* \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u623f\u95f4\uff0c\u5982\u679c\u5b83\u56db\u9762\u6709\u4e00\u4e2a\u5899\u58c1\u662f\u7a7a\u683c\uff0c\u90a3\u4e48\u5411\u5b83\u901a\u5411\u7684\u90a3\u4e2a\u623f\u95f4\u5efa\u8fb9\n\n### \u601d\u8def\n\n\u626b\u4e00\u904d\u8fb9\u7f18\u627e\u5230\u4e24\u4e2a\u5f00\u53e3\uff0c\u4ee5\u5b83\u4eec\u4e3a\u8d77\u70b9\u8dd1SPFA\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7684\u7ed3\u679c\u53d6\u8fd9\u4e24\u6b21\u7684\u8f83\u5c0f\u503c\uff0c\u6700\u7ec8\u7b54\u6848\u4e3a\u6240\u6709**\u623f\u95f4**\u8282\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u503c**$+1$**\n\n### \u6ce8\u610f\u4e8b\u9879\n\n\u672c\u9898\u8bfb\u5165\u6bd2\u7624\uff0c\u6bcf\u884c\u9700\u8981\u4e24\u4e2a`getchar()`\u8fc7\u6ee4\u56de\u8f66\n\n### \u4ee3\u7801\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\nusing namespace std;\n\nconst int MAXN = 205;\nconst int INF = 0x3f3f3f3f;\nconst int DX[4] = {-2, 0, 2, 0};\nconst int DY[4] = {0, -2, 0, 2};\nconst int BX[4] = {-1, 0, 1, 0};\nconst int BY[4] = {0, -1, 0, 1};\n\nchar mp[MAXN][MAXN];\nint dis[MAXN * MAXN];\nint w, h, n, m, cnt = -1;\nint s[MAXN * 4];\nint res[3][MAXN * MAXN];\nbool vis[MAXN * MAXN];\n\nstruct Edge{\n    int to, val;\n    Edge *next;\n    Edge(int to, int val, Edge *next): to(to), val(val), next(next){}\n};\n\nEdge *head[MAXN * MAXN];\n\nvoid AddEdge(int u, int v, int w) {\n    head[u] = new Edge(v, w, head[u]);\n}\n\nint Id(int x, int y) {\n    return m * (x - 1) + y;\n}\n\nvoid Spfa(int s) {\n    memset(vis, false, sizeof(vis));\n    memset(dis, INF, sizeof(dis));\n    dis[s] = 0;\n    queue<int> q; q.push(s); vis[s] = true;\n    while (!q.empty()) {\n        int u = q.front(); q.pop(); vis[u] = false;\n        for (Edge *e = head[u]; e; e = e->next) {\n            int v = e->to;\n            if (dis[v] > dis[u] + e->val) {\n                dis[v] = dis[u] + e->val;\n                if (!vis[v]) {\n                    vis[v] = true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n}\n\nint main() {\n    cin >> w >> h;\n    n = h * 2 + 1; m = w * 2 + 1;\n    /*getchar();\n    for (int i = 1; i <= n; i++) {\n        int cnt = 0; char ch;\n        while (ch = getchar(), ch != '\\n') mp[i][++cnt] = ch;\n    }*/\n    for (int i = 1; i <= n; i++) {\n        getchar();\n        for (int j = 1; j <= m; j++) {\n            mp[i][j] = getchar();\n            if (mp[i][j] == '\\n') mp[i][j] = getchar();\n        }\n    }\n    for (int i = 2; i < n; i += 2) {\n        for (int j = 2; j < m; j += 2) {\n            for (int k = 0; k < 4; k++) {\n                int x = i + DX[k], y = j + DY[k], bx = i + BX[k], by = j + BY[k];\n                if (x < 1 || x > n || y < 1 || y > m || mp[bx][by] != ' ') continue;\n                AddEdge(Id(i, j), Id(x, y), 1);\n            }\n        }\n    }\n    for (int i = 1; i <= m; i++) {\n        if (mp[1][i] == ' ') s[++cnt] = Id(2, i);\n        if (mp[n][i] == ' ') s[++cnt] = Id(n - 1, i);\n    }\n    for (int i = 1; i <= n; i++) {\n        if (mp[i][1] == ' ') s[++cnt] = Id(i, 2);\n        if (mp[i][m] == ' ') s[++cnt] = Id(i, m - 1);\n    }\n    Spfa(s[0]);\n    for (int i = 1; i <= n * m; i++) res[0][i] = dis[i];\n    Spfa(s[1]);\n    for (int i = 1; i <= n * m; i++) res[1][i] = dis[i];\n    for (int i = 1; i <= n * m; i++) res[2][i] = min(res[1][i], res[0][i]);\n    int ans = 0;\n    for (int i = 1; i <= n * m; i++) {\n        if (res[2][i] < INF) ans = max(ans, res[2][i]);\n    }\n    cout << ans + 1 << endl;\n    return 0;\n}",
        "postTime": 1555151600,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": " \u505a\u4e86\u8fd9\u9053\u9898\u4e4b\u540e\uff0c\u6574\u4e2a\u4eba\u90fd\u5347\u534e\u4e86\u3002  \n **\u6d1b\u8c37\u662f\u53cc\u6362\u884c\u7b26******# ****\n\n\u8fd9\u9053\u9898\u4e3b\u8981\u8003\u5bdf\u4e86\u4e24\u4e2a\u65b9\u9762\n\n1\uff09\u4f60\u7684\u4ee3\u7801\u80fd\u529b  2\uff09\u4f60\u7684\u8bfb\u9898\u80fd\u529b\n\n\u662f\u4e00\u9053\u597d\u9898\n\n\u89e3\u6cd5\uff1a\n\n\u4e3b\u8981\u662f\u5bbd\u641c\u7684\u5b9e\u73b0\u8fc7\u7a0b\n\n\u6211\u4eec\u4ece\u6bcf\u4e2a\u51fa\u53e3\u5f00\u59cb\u53bb\u641c\u7d22\uff0c\u5f97\u5230\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n\n\u7136\u540emax{\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb}  \u5c31\u662f\u6211\u4eec\u7684\u7b54\u6848\n\n\u5728\u5224\u65ad\u76f8\u90bb\u5404\u70b9\u4e4b\u95f4\u662f\u5426\u8054\u901a\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5206\u56db\u79cd\u60c5\u51b5\uff08\u4e0a\u4e0b\u5de6\u53f3\uff09\u53bb\u5224\u65ad\uff0c\u7136\u540e\n\n\u5728\u641c\u7d22\uff0c\u5b9e\u73b0\u8d77\u6765\u4f1a\u597d\u5f88\u591a\n\n[\u5e7f\u544a\uff08\u4ee3\u7801\uff09](https://www.cnblogs.com/adelalove/p/9101893.html)\n\n\n",
        "postTime": 1527507953,
        "uid": 83546,
        "name": "\u4f9d\u4f9d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u4e00\u9053\u9898\u7528\u5bbd\u641c\u4f1a\u6bd4\u6df1\u641c\u597d\u5f88\u591a\uff0c\u56e0\u4e3a\u6df1\u641c\u603b\u662f\u4e00\u641c\u5230\u5e95\uff0c\u5c31\u5c11\u4e86\u5f88\u591a\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\u4e86\n\n\u8fd9\u4e00\u9898\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u628a\u6805\u680f\u53bb\u6389\uff08\u6bd4\u5982\u5b9a\u4e49f[x][y][t]\u8fd9\u4e2a\u70b9\u56db\u4e2a\u65b9\u5411\u662f\u5426\u80fd\u8d70\uff09\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u8d70\u4e24\u683c\u5c31\u53ef\u4ee5\u4e86\uff0c\u5e76\u4e14\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u53ef\u4ee5\u8d70\n\n\u9996\u5148\u627e\u51fa\u4e24\u4e2a\u51fa\u53e3\u7684\u5750\u6807\uff0c\u7528stx,sty\u6765\u8bb0\u5f55\n\n\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5c31\u9006\u5411\u601d\u7ef4\uff0c\u4ece\u4e24\u4e2a\u8d77\u70b9\u5012\u63a8\u56de\u53bb\uff0c\u770b\u770b\u54ea\u4e00\u4e2a\u70b9\u662f\u7b54\u6848\uff0c\u8fd9\u6837\u6bd4\u66b4\u529b\u679a\u4e3e\u65b9\u4fbf\u4e86\u5f88\u591a\u5f88\u591a\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include<bits/stdc++.h>\n#include<cstdio>\nusing namespace std;\nstruct node\n{\n\tint x,y;\n};//list\u8bb0\u5f55\u5750\u6807 \nint head,tail;//\u5934\u548c\u5c3e \nconst int dx[4]={-1,1,0,0};//\u4e0a\u4e0b\u5de6\u53f3\u56db\u4e2a\u65b9\u5411\uff08\u6309\u987a\u5e8f\uff09 \nconst int dy[4]={0,0,-1,1};\nint n,m;\nint stx[11],sty[11],len;//\u8bb0\u5f55\u8d77\u70b9\u548c\u7ec8\u70b9 \nint f[210][210];//\u8868\u793a\u8fd9\u4e00\u4e2a\u70b9\u5230\u51fa\u53e3\u7684\u6700\u77ed\u8ddd\u79bb \nchar st[210][210];//\u8bb0\u5f55\u5b57\u7b26\u4e32 \nbool v[210][210];//\u8fd9\u4e00\u4e2a\u70b9\u662f\u5426\u5728list\u961f\u5217\u4e4b\u4e2d \nint maxx=0;//\u6700\u5927\u503c \ninline void bfs(int x,int y)//\u4ece\u8fd9\u4e00\u4e2a\u70b9\u5f00\u59cb\u5bbd\u641c \n{\n    head=tail=1;node list[21000];\n\tlist[1].x=x;list[1].y=y;//\u7b2c\u4e00\u6b65\u8bb0\u5f55\u4e00\u4e0b \n    while(head<=tail)\n    {\n    \tx=list[head].x;y=list[head].y;//\u8fd9\u4e2a\u53ef\u6709\u53ef\u65e0 \n    \tfor(int t=0;t<=3;t++)//\u56db\u4e2a\u65b9\u5411 \n    \t{\n    \t\tint xx=x+dx[t];//\u5224\u65ad\u8fd9\u4e2a\u65b9\u5411\u662f\u5426\u80fd\u8d70 \n    \t\tint yy=y+dy[t];\n    \t\tif(xx>=1 && xx<=n && yy>=1 && yy<=m)//\u5224\u65ad\u8fb9\u754c \n    \t\t{\n    \t\t\tif(st[xx][yy]==' ')//\u5982\u679c\u6ca1\u6709\u5899 \uff08\u5899\u6ca1\u6709\u957f\u5ea6\u7684\uff09 \n    \t\t\t{\n    \t\t\t\txx=xx+dx[t];yy=yy+dy[t];//\u8d70\u5230\u70b9\u4e0a\uff08\u4e00\u6b21\u8d70\u4e24\u683c\u561b\uff09 \n    \t\t\t\tif(xx>=1 && xx<=n && yy>=1 && yy<=m)//\u518d\u6b21\u5224\u65ad\u8fb9\u754c \n    \t\t\t\t{\n\t\t    \t\t\tif(f[x][y]+1<f[xx][yy])//\u5982\u679c\u8fd9\u6b21\u4e3a\u66f4\u4f18\u503c\uff0c\u5c31\u91c7\u7528\u8fd9\u4e00\u6b21\u7684\u503c \n\t\t    \t\t\t{\n\t\t    \t\t\t\tf[xx][yy]=f[x][y]+1;//\u8d4b\u503c \n\t\t    \t\t\t\tif(v[xx][yy]==true)//\u5982\u679c\u6ca1\u6709\u5728\u961f\u5217\u91cc\u9762 \n\t\t    \t\t\t\t{\n\t\t    \t\t\t\t\tv[xx][yy]=false;//\u653e\u8fdb\u961f\u5217\u91cc\u9762 \n\t\t    \t\t\t\t\ttail++;\n\t\t\t\t\t\t\t\tlist[tail].x=xx;list[tail].y=yy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tv[x][y]=true;//\u56de\u6eaf \n\t\thead++;//\u628a\u5934+1 \n\t}\n}\nint main()\n{\n    int i,j;\n    scanf(\"%d %d\\n\",&m,&n);\n    m=m*2+1;n=n*2+1;//\u76f4\u63a5\u589e\u5927\u5730\u56fe \n    for(i=1;i<=n;i++) \n    {\n        gets(st[i]+1);//\u8bb0\u5f97\u7528gets\u8f93\u5165 \n        for(j=strlen(st[i]+1)+1;j<=m;j++) st[i][j]=' ';//\u628a\u6ca1\u6709\u7684\u8865\u4e0a\u7a7a\u683c \n    }\n    for(i=2;i<=m;i+=2)//\u4e0a\u4e0b\u4e24\u8fb9\u67e5\u627e\u51fa\u53e3 \n    {\n        if(st[1][i]==' ') len++,stx[len]=2  ,sty[len]=i;\n        if(st[n][i]==' ') len++,stx[len]=n-1,sty[len]=i;\n    }\n    for(i=2;i<=n;i+=2)//\u5de6\u53f3\u4e24\u8fb9\u67e5\u627e\u51fa\u53e3 \n    {\n        if(st[i][1]==' ') len++,stx[len]=i,sty[len]=2;\n        if(st[i][m]==' ') len++,stx[len]=i,sty[len]=m-1;\n    }\n    memset(f,127,sizeof(f));//\u521d\u59cb\u5316f\u65e0\u9650\u5927 \n    for(i=1;i<=len;i++)//\u679a\u4e3e\u51fa\u53e3 \n    {\n   \t\tmemset(v,true,sizeof(v));v[stx[i]][sty[i]]=false;//\u51fa\u53e3\u662f\u4e0d\u80fd\u8d70\u7684 \n    \tf[stx[i]][sty[i]]=1;bfs(stx[i],sty[i]);//\u51fa\u53e3\u7684\u503c\u4e00\u5f00\u59cb\u4e3a1\uff0c\u9006\u5411\u601d\u7ef4\u5bbd\u641c\u8fd9\u4e2a\u70b9\n    }\n    for(i=2;i<=n;i+=2)//\u627e\u6700\u5927\u503c \n    {\n    \tfor(j=2;j<=m;j+=2)\n    \t{\n    \t\tmaxx=max(maxx,f[i][j]);\n    \t}\n    }\n    printf(\"%d\",maxx);//\u8f93\u51fa \n    return 0;\n}\n\n```",
        "postTime": 1524969662,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u8bfb\u5165\u56fe\u7684\u65f6\u5019\u548c\u201c\u57ce\u5821 The Castle\u201d\u5dee\u4e0d\u591a\uff0c\u53ea\u8981\u4e00\u4e2a\u683c\u5b50\u4e0a\u4e0b\u5de6\u53f3\u6709\u5899\u5c31\u6807\u8bb0\u4e00\u4e0b\u3002\uff08\u5f53\u7136\u8981\u6ce8\u610f\u6a2a\uff0c\u7eb5\u5750\u6807\u662f\u5076\u6570\uff09\n\n\u5728\u6807\u8bb0\u7684\u65f6\u5019\u5bf9\u8fb9\u754c\u7684\u683c\u5b50\u8fdb\u884c\u5904\u7406\uff0c\u5982\u679c\u5b83\u5f80\u5916\u518d\u6269\u5c55\u7684\u65f6\u5019\u6ca1\u6709\u5899\u5c31\u8bf4\u660e\u8fd9\u662f\u51fa\u53e3\uff0c\u5b58\u4e0b\u6765\u3002\n\n\u8bfb\u597d\u56fe\u4e4b\u540e\u4ece\u4e24\u4e2a\u51fa\u53e3\u5206\u522b\u5e7f\u641c\uff0c\u5982\u679c\u56db\u5468\u67d0\u4e2a\u65b9\u5411\u6ca1\u6709\u5899\u5c31\u5f80\u90a3\u4e2a\u65b9\u5411\u7ee7\u7eed\u505a\uff0c\u5982\u679c\u5f53\u524d\u5e7f\u641c\u5230\u7684\u6df1\u5ea6\u5c0f\u4e8e\u524d\u9762\u5f97\u5230\u7684\u6df1\u5ea6\u5c31\u6362\u4e00\u4e0b\u3002\uff08\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff09\n\n\u6700\u540e\u518d\u626b\u4e00\u904d\uff0c\u53d6\u51fa\u6700\u5927\u503c\u3002\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint n,m;\nchar a[1012][1012],s[1012];\nint q[1012][1012][12],qq[1012][1012],tot=0,exitx[6],exity[6],f[1012][1012];\nvoid doing(int x,int y,int dist){//\u5e7f\u641c\u6700\u5c0f\u6df1\u5ea6\n    if (x<1||y<1||x>m*2+1||y>n*2+1)\n      return ;\n    if (dist<f[x][y])\n    {\n      f[x][y]=dist;\n      if (q[x][y][1]==0) doing(x-2,y,dist+1);//\u5411\u56db\u4e2a\u65b9\u5411\u627e\uff0c\u6211\u5b9a\u4e49\u7684\u662f\u4e0a\u5317\uff081\uff09\u4e0b\u5357\uff082\uff09\u5de6\u897f\uff083\uff09\u53f3\u4e1c\uff084\uff09\n      if (q[x][y][2]==0) doing(x+2,y,dist+1);\n      if (q[x][y][3]==0) doing(x,y-2,dist+1);\n      if (q[x][y][4]==0) doing(x,y+2,dist+1);\n    }\n    else\n      return ;\n}\nint main(){\n    cin>>n>>m;\n    for (int i=0;i<=m*2+1;i++)\n    {\n      gets(s);\n      for (int j=1;j<=n*2+1;j++)//\u8bfb\u5165\u56fe\uff0c\u53ef\u80fd\u5927\u5bb6\u8fd8\u6709\u66f4\u5148\u8fdb\u7684\u65b9\u6cd5......\n        a[i][j]=s[j-1];\n    }\n    for (int i=1;i<=m*2+1;i++)\n      for (int j=1;j<=n*2+1;j++)\n        if (i%2==0&&j%2==0)\n        {\n          if (a[i-1][j]=='-')//\u5224\u65ad\u56db\u5468\u662f\u5426\u6709\u5899\uff0c\u6211\u5b9a\u4e49\u7684\u662f\u4e0a\u5317\uff081\uff09\u4e0b\u5357\uff082\uff09\u5de6\u897f\uff083\uff09\u53f3\u4e1c\uff084\uff09\n            q[i][j][1]=1;\n          if (a[i+1][j]=='-')\n            q[i][j][2]=1;\n          if (a[i][j-1]=='|')\n            q[i][j][3]=1;\n          if (a[i][j+1]=='|')\n            q[i][j][4]=1;\n              // \u5224\u65ad\u662f\u5426\u4e3a\u51fa\u53e3\uff0c\u8fd8\u8981\u7528\u6570\u7ec4\u53bb\u6389\u91cd\u590d\u51fa\u73b0\u7684\u51fa\u53e3\n          if (i==2&&q[i][j][1]==0&&!qq[i][j])//\u5728\u4e0a\u65b9\u8fb9\u754c\u5c31\u5224\u65ad\u4e0a\u9762\u662f\u5426\u6ca1\u5899\n          {\n            qq[i][j]=1;\n            exitx[++tot]=i,exity[tot]=j;//exit\u5b58\u50a8\u51fa\u53e3\u7684\u6a2a\uff0c\u7eb5\u5750\u6807\n          }\n          if (i==m*2&&q[i][j][2]==0&&!qq[i][j])//\u5728\u4e0b\u65b9\u8fb9\u754c\u5c31\u5224\u65ad\u4e0b\u9762\u662f\u5426\u6ca1\u5899\n          {\n            qq[i][j]=1;\n            exitx[++tot]=i,exity[tot]=j;\n          }\n          if (j==2&&q[i][j][3]==0&&!qq[i][j])//\u5728\u5de6\u65b9\u8fb9\u754c\u5c31\u5224\u65ad\u5de6\u9762\u662f\u5426\u6ca1\u5899\n          {\n            qq[i][j]=1;\n            exitx[++tot]=i,exity[tot]=j;\n          }\n          if (j==n*2&&q[i][j][4]==0&&!qq[i][j])//\u5728\u53f3\u65b9\u8fb9\u754c\u5c31\u5224\u65ad\u53f3\u9762\u662f\u5426\u6ca1\u5899\n          {\n            qq[i][j]=1;\n            exitx[++tot]=i,exity[tot]=j;\n          }\n        }\n    for (int i=1;i<=m*2+1;i++)//f[i][j]\u4e3ai,j\u8fd9\u4e2a\u70b9\u7684\u6df1\u5ea6\n      for (int j=1;j<=n*2+1;j++)\n        f[i][j]=100000;\n    doing(exitx[1],exity[1],1);//\u4ece\u4e24\u4e2a\u51fa\u53e3\u5206\u522b\u5e7f\u641c\n    doing(exitx[2],exity[2],1);\n    int ans=0;\n    for (int i=1;i<=m*2+1;i++)\n      for (int j=1;j<=n*2+1;j++)\n        if (i%2==0&&j%2==0)\n          ans=max(ans,f[i][j]);//ans\u53d6\u6700\u5927\u503c\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n//\u5f53\u7136\u8fd8\u53ef\u4ee5\u538b\u7f29\u4e00\u4e0b\uff0c\u628a\u683c\u5b50\u7684\u6a2a\uff0c\u7eb5\u5750\u6807\u90fd\u9664\u4ee52\uff0c\u5185\u5b58\uff0c\u65f6\u95f4\u90fd\u53ef\u4ee5\u66f4\u4f18\n```",
        "postTime": 1493906865,
        "uid": 21636,
        "name": "3269224138\u5218",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u4e3b\u8981\u662f\u683c\u5f0f\uff0c\u4ece\u4e24\u4e2a\u8d77\u70b9\u5e7f\u641c\u4e00\u904d\uff0c\u6bcf\u4e2a\u70b9\u53d6\u6700\u5c0f\u503c\uff0c\u8bb0\u5f97\u56fe\u8981\u5904\u7406\u597d\n\n/*************************************************************************\n\n    > Author: Drinkwater-cnyali\n    > Created Time: 2017/3/23 18:11:43\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\ntypedef long long LL;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\nint read()\n{\n    int sum = 0, fg = 1; char c = getchar();\n    while(c < '0' || c > '9') { if (c == '-') fg = -1; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return sum * fg;\n}\nconst int Size = 100000;\nconst int inf = 0x3f3f3f3f;\nint n,m,tx,ty,sx,sy;\nchar s[300];\nint map[1010][1010];\nint    step1[1010][1010],step2[1010][1010],vis[1010][1010];\nint mo[4][2] = {{1,0},{-1,0,},{0,1},{0,-1}};\nstruct T\n{\n    int x,y,s;    \n};\nvoid bfs1()\n{\n    queue<T>q;\n    vis[sx][sy] = 1;\n    step1[sx][sy] = 0;\n    q.push((T){sx,sy,0});\n    while(!q.empty())\n    {\n        T ls = q.front();q.pop();\n        REP(i,0,3)\n        {\n            int tmp;\n            int Tx = ls.x + mo[i][0];\n            int Ty = ls.y + mo[i][1];\n            if(Tx < 1 || Ty < 1 || Tx > m || Ty > n || map[Tx][Ty] == 1 || vis[Tx][Ty])continue;\n            if(map[Tx][Ty] == 2)tmp = ls.s;\n            else tmp = ls.s+1;\n            q.push((T){Tx,Ty,tmp});\n            step1[Tx][Ty] = tmp;\n            vis[Tx][Ty] = 1;\n        }\n    }\n}\nvoid bfs2()\n{\n    memset(vis,0,sizeof(vis));\n    queue<T>q;\n    vis[tx][ty] = 1;\n    step2[tx][ty] = 0;\n    q.push((T){tx,ty,0});\n    while(!q.empty())\n    {\n        T ls = q.front();q.pop();\n        REP(i,0,3)\n        {\n            int tmp;\n            int Tx = ls.x + mo[i][0];\n            int Ty = ls.y + mo[i][1];\n            if(Tx < 1 || Ty < 1 || Tx > m || Ty > n || map[Tx][Ty] == 1 || vis[Tx][Ty])continue;\n            if(map[Tx][Ty] == 2)tmp = ls.s;\n            else tmp = ls.s+1;\n            q.push((T){Tx,Ty,tmp});\n            step2[Tx][Ty] = tmp;\n            vis[Tx][Ty] = 1;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    gets(s);\n    REP(i,1,m*2+1)\n    {\n        gets(s);\n        REP(j,0,strlen(s))\n        {\n            if(i&1)\n            {\n                if(s[j] == '+' || s[j] == '-')map[i][j+1] = 1;\n            }\n            else map[i][j+1] = (s[j] == '|');\n        }\n    }\n    n = n*2+1,m = m*2+1;\n    int cnt = 0;\n    REP(i,1,n)\n    {\n        if(!map[1][i])\n        {\n            if(!cnt)sx = 1,sy = i,cnt++;\n            else tx = 1,ty = i;\n        }\n        if(!map[m][i])\n        {\n            if(!cnt)sx = m,sy = i,cnt++;\n            else tx = m,ty = i;\n        }\n    }\n    REP(i,1,m)\n    {\n        if(!map[i][1])\n        {\n            if(!cnt)sx = i,sy = 1,cnt++;\n            else tx = i,ty = 1;\n        }\n        if(!map[i][n])\n        {\n            if(!cnt)sx = i,sy = n,cnt++;\n            else tx = i,ty = n;\n        }\n    }\n    REP(i,2,m-1)\n    {\n        REP(j,2,n-1)\n        {\n            if(!map[i][j])\n            {\n                if(j%2 == 1)map[i][j] = 2;\n                else if(i%2 == 1)map[i][j] = 2;\n            }\n        }\n    }\n    bfs1();bfs2();\n    int ans = 0;\n    REP(i,1,m)\n    {\n        REP(j,1,n)\n        {\n            if(step1[i][j] && step2[i][j])\n                step1[i][j] = min(step1[i][j],step2[i][j]),ans = max(step1[i][j],ans);\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1490279183,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u6ce8\u610f\u6362\u884c\u7b26\u662f\u53cc\u6362\u884c\uff0c\u5176\u5b83\u5c31\u6ca1\u4ec0\u4e48\u4e86\uff0c\uff0c\u6df1\u641c\u5904\u7406\u53d6\u4e24\u6b21\u6bd4\u8f83\u8f83\u5c0f\u7684\uff0c\u7136\u540e\u518d\u627e\u6574\u5f20\u5730\u56fe\u91cc\u6700\u5927\u7684\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u6211\u8981\u5199>10000\u56e0\u4e3a\u6211\u7684\u521d\u59cb\u5316\u5947\u6570\u7684\u5355\u5143\u662f\u4e0d\u4f1a\u66f4\u6539\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4e0d\u52a0\u5c31\u5168\u90e8\u8f93\u51fa\u521d\u503c\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint map[300][300],n,m;\nint dx[]={-2,0,2,0},dy[]={0,-2,0,2},dx1[]={-1,0,1,0},dy1[]={0,-1,0,1};\nvoid dfs(int x,int y)\n{\n    int i;\n    for(i=0;i<=3;i++)\n    {\n        if(x+dx[i]>=1 && x+dx[i]<=n && y+dy[i]>=1 && y+dy[i]<=m && map[x+dx1[i]][y+dy1[i]]!=-1&&map[x+dx[i]][y+dy[i]]!=-1&&map[x+dx[i]][y+dy[i]]>map[x][y]+1)\n        {\n            map[x+dx[i]][y+dy[i]]=map[x][y]+1;\n            dfs(x+dx[i],y+dy[i]);\n        }\n    }\n}\nint main()\n{\n    int i,j,x,y,cnt=0;\n    char tmp[300];\n    memset(map,31,sizeof(map));\n    cin>>m>>n;\n    m=2*m+1;n=2*n+1;\n    for(i=0;i<=n;i++)\n        {\n            cin.getline(tmp,300);\n            int lt=strlen(tmp);\n            for(j=0;j<lt;j++)\n                if(tmp[j]=='|'||tmp[j]=='+'||tmp[j]=='-') map[i][j+1]=-1;\n        }\n    for(i=1;i<=n;i++)\n    {\n        if(cnt>=2) break;\n        if(map[i][1]!=-1){cnt++;map[i][2]=1;dfs(i,2);} \n        if(map[i][m]!=-1){cnt++;map[i][m-1]=1;dfs(i,m-1);}\n    }\n    for(j=1;j<=m;j++)\n    {        \n        if(cnt>=2) break;\n        if(map[1][j]!=-1){cnt++;map[2][j]=1;dfs(2,j);}\n        if(map[n][j]!=-1){cnt++;map[n-1][j]=1;dfs(n-1,j);}\n    }\n    int ans=0;\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n            if(ans<map[i][j]&&map[i][j]<10000)\n                ans=map[i][j];\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1475801385,
        "uid": 19390,
        "name": "functionendless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "[/color][codep ]\n\n```cpp\nconst  \n  dx:array[1..4]of longint=(-1,0,0,1);  \n  dy:array[1..4]of longint=(0,-1,1,0);  \n  maxn=201;  \n  maxm=80;  \n  maxx=100000;  \nvar  \n  i,j,n,m,fmax,fmin,k,l,u,tmp,cnt:longint;  \n  map:array[1..maxn,1..maxm]of char;  \n  app,obt,loc:array[1..maxn,1..maxm]of longint;  \n  done:boolean;  \n  opp:array[1..maxn*maxm,1..2]of longint;  \n  que:array[1..maxx]of longint;  \n  mark:array[1..maxn*maxm]of boolean;  \n  dis,dis1,dis2:array[1..maxn*maxm]of longint;  \n  spe:array[1..2,1..2]of longint;  \nfunction min(x,y:longint):longint;  \nbegin  \n  if x<y then  \n    exit(x)  \n  else  \n    exit(y);  \nend;  \nfunction check(a,b,c,d:longint):boolean;  \nbegin  \n  if (obt[a,b]<>1)and(obt[c,d]<>1) then   \n    exit(true)  \n  else   \n    exit(false);  \nend;  \nfunction spfa(st,en,cho:longint):longint;  \nvar  \n  i,now,tail,head,nx,ny,tx,ty:longint;  \nbegin  \n  fillchar(que,sizeof(que),0);  \n  fillchar(mark,sizeof(mark),false);  \n  for i:=1 to n*m do  \n    dis[i]:=maxlongint;  \n  dis[st]:=0;   \n  mark[st]:=true;    \n  que[1]:=st;  \n  tail:=1;   \n  head:=1;  \n  while tail<=head do  \n    begin  \n      now:=que[tail];  \n      nx:=opp[now,1];  \n      ny:=opp[now,2];  \n      for i:=1 to 4 do  \n        begin  \n          tx:=nx+dx[i];   \n          ty:=ny+dy[i];  \n          if (tx>=1)and(tx<=n)and(ty>=1)and(ty<=m) then  \n            begin  \n              if check(nx,ny,tx,ty) then  \n                begin  \n                  if (dis[now]<>maxlongint)and(dis[now]+1<dis[loc[tx,ty]]) then  \n                    begin  \n                      dis[loc[tx,ty]]:=dis[now]+1;  \n                      if not mark[loc[tx,ty]] then  \n                        begin  \n                          inc(head);  \n                          que[head]:=loc[tx,ty];  \n                          mark[loc[tx,ty]]:=true;  \n                        end;  \n                    end;  \n                end;  \n            end;  \n        end;  \n      mark[now]:=false;  \n      inc(tail);  \n    end;  \n  if cho=1 then  \n    dis1:=dis   \n  else  \n    dis2:=dis;  \n  exit((dis[en]+1) div 2);  \nend;  \nbegin  \n  readln(m,n);  \n  n:=2*n+1;  \n  m:=2*m+1;  \n  for i:=1 to n do  \n    begin  \n      for j:=1 to m do  \n        begin  \n          read(map[i,j]);  \n          if (map[i,j]='+')or(map[i,j]='-')or(map[i,j]='|') then  \n            obt[i,j]:=1;    //\u969c\u788d\u5c31\u610f\u5473\u7740\u8fd9\u662f\u4e00\u4e2a\u7bf1\u7b06\u3002     \n          loc[i,j]:=(i-1)*m+j;    //\u6307\u6807\u4f7f\u7528\u6570\u54c8\u5e0c\u7684\u4f4d\u7f6e\uff08i\uff0cj\uff09\u3002\n          opp[(i-1)*m+j,1]:=i;  \n          opp[(i-1)*m+j,2]:=j;  \n        end;  \n      readln;  \n    end;  \n  for i:=1 to n  do  \n    begin  \n      if map[i,1]=' ' then   \n        begin   \n          inc(cnt);   \n          spe[cnt,1]:=i;   \n          spe[cnt,2]:=1;   \n        end;  \n      if map[i,m]=' ' then  \n        begin  \n          inc(cnt);   \n          spe[cnt,1]:=i;   \n          spe[cnt,2]:=m;   \n        end;  \n    end;  \n  for i:=1 to m do  \n    begin  \n      if map[1,i]=' ' then  \n        begin   \n          inc(cnt);  \n          app[1,i]:=1;   \n          spe[cnt,1]:=1;  \n          spe[cnt,2]:=i;  \n        end;  \n      if map[n,i]=' ' then  \n        begin  \n          inc(cnt);   \n          app[n,i]:=1;  \n          spe[cnt,1]:=n;   \n          spe[cnt,2]:=i;  \n        end;  \n    end;       //\u76ee\u7684\u662f\u627e\u52302\u4e2a\u51fa\u53e3\u3002                \n  fmax:=0;  \n  done:=false;  \n  for i:=1 to n do  \n    begin  \n      for j:=1 to m do  \n        begin  \n          if (obt[i,j]<>1)and(app[i,j]<>1) then    //\u4e0d\u662f\u7bf1\u7b06\u3002\n            begin  \n              if not done then  \n                begin  \n                  fmin:=maxlongint;  \n                  for k:=1 to 2 do  \n                    begin  \n                      tmp:=spfa(loc[spe[k,1],spe[k,2]],loc[i,j],k);  \n                      if tmp<fmin then  \n                        fmin:=tmp;  \n                    end;  \n                  done:=true;  \n                  if fmin>fmax then  \n                    fmax:=fmin;  \n                end  \n              else  \n                begin  \n                  tmp:=min(dis1[loc[i,j]],dis2[loc[i,j]])+1;  \n                  tmp:=tmp div 2;  \n                  if tmp>fmax then   \n                    fmax:=tmp;  \n                end;  \n            end;  \n        end;  \n    end;  \n  writeln(fmax);  \nend.  \n```\n[/codep ]\n\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u8fd9\u4f4d\u8001\u5148\u8f88\u7684\u535a\u5ba2\uff0c\u8d85\u8d5e\uff01\uff01------->http://www.cnblogs.com/strawberryfou/\n",
        "postTime": 1459930082,
        "uid": 10099,
        "name": "nbqdd_2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff08\u6211\u8fd8\u8c03\u4e8630\u5206\u949f\uff0c\u6211\u771f\u662f\u4e2azz\uff09\n\n\u4e0d\u8fc7\u8fd9\u9053\u9898\u8fd8\u662f\u633a\u6076\u5fc3\u7684\uff0c \u4e0d\u662f\u4e00\u822c\u7684\u90a3\u79cd\u8ff7\u5bab\u5f62\u5f0f\uff0c\u800c\u662f\u8ff7\u5bab\u7684\u5f62\u72b6\uff0c \u4ee5\u9700\u8981\u8f6c\u5316,\u628a\u8f93\u5165\u77e9\u9635\u9996\u884c\u9996\u5217\u7684\u5750\u6807\u6807\u53f7\u4e3a0,\u90a3\u4e9b\u6a2a\u7eb5\u5750\u6807\u4e3a\u57fa\u6570\u4e14\u81ea\u8eab\u4e3a\u7a7a\u683c\u7684\u70b9\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u68cb\u76d8\u4e0a\u7684\u683c\u5b50\u3002\n\n\u5bf9\u539f\u77e9\u9635\u8fdb\u884c\u626b\u63cf\u6807\u8bb0\uff0c\u8f6c\u5316\u4e3a\u666e\u901a\u7684\u5899\u969c\u788d\u95ee\u9898\u3002\n\n\u4f46\u8981\u6ce8\u610f\u7684\u662f,\u7531\u4e8e\u6ca1\u6709\u7ed9\u51fa\u5177\u4f53\u7684\u51fa\u53e3\u5750\u6807,\u6240\u4ee5\u8981\u7528\u5faa\u73af\u67e5\u627e,\u4f46\u8981\u6ce8\u610f\u7279\u6b8a\u7684\u70b9(\u56db\u4e2a\u89d2\u4e0a\u7684\u70b9\u4e0d\u7ba1\u4e00\u9762\u65e0\u5899\u8fd8\u662f\u4e24\u9762\u65e0\u5899\u90fd\u53ea\u5b58\u4e00\u6b21)\n\n**Code**\n```pascal\nvar\n    n,m,i,j,k,ans,l,q,x,y:longint;\n    a:array[0..201,0..77]of char;\n    f:array[1..4,1..2]of longint=((1,0),(0,1),(-1,0),(0,-1));\n    b:array[1..9000,1..2]of longint;\nbegin\n    readln(m,n);\n    n:=2*n+1;\n    m:=2*m+1;\n    for i:=1 to n do\n    begin\n        for j:=1 to m do\n        begin\n            read(a[i,j]);\n            if (a[i,j]=' ')and((i=1)or(i=n)or(j=1)or(j=m)) then\n            begin\n                k:=k+1;\n                b[k,1]:=i;\n                b[k,2]:=j;\n            end;\n        end;\n        readln;\n    end;\n    i:=0;\n    repeat\n         i:=i+1;\n         ans:=ans+1;\n         q:=k;\n         for l:=i to k do\n         begin\n             for j:=1 to 4 do\n             begin\n                 x:=b[l,1]+f[j,1];\n                 y:=b[l,2]+f[j,2];\n                 if a[x,y]=' ' then\n                 begin\n                     a[x,y]:='*';\n                     k:=k+1;\n                     b[k,1]:=x;\n                     b[k,2]:=y;\n                 end;\n             end;\n         end;\n         i:=q;\n    until i>=k;\n    writeln(ans div 2);\nend.\n```\n\n\u81ea\u5df1\u5f88\u4e45\u524d\u7684\u4ee3\u7801\u4e86\uff08\u73b0\u5728\u90fd\u8f6cC++\u4e86\uff09\uff0c\u5927\u5bb6\u51d1\u5408\u7740\u770b\u5427\n",
        "postTime": 1585449251,
        "uid": 119633,
        "name": "\u9ebb\u7701\u7406\u5de5\u5b66\u9662",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1519 \u3010[USACO2.4]\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\u4e00\u4e2a\u5bbd2W+1\uff0c\u957f2H+1\u7684\u8ff7\u5bab\uff0c\u6805\u680f\u7684\u67f1\u5b50\u53ea\u51fa\u73b0\u5728\u5947\u6570\u884c\u6216\u5947\u6570\u5217\uff0c\u6c42\u6700\u4f18\u89e3\u901a\u8fc7\u6700\u5dee\u70b9\u7684\u6b65\u6570\u3002\n### \u89e3\u6cd5\n\u6b63\u7edfBFS\u51fa\u9053\u3002\n### \u96be\u70b9\n\u6709\u591a\u4e2a\u8d77\u70b9\uff0c\u6c42\u6700\u5dee\u4e00\u70b9\u7684\u6700\u4f18\u3002\n### \u89e3\u9898\u601d\u8def\n\u5728\u4e00\u5f00\u59cb\u627e\u5230\u6240\u6709\u7684\u8d77\u70b9\uff0c\u653e\u8fdb\u961f\u5217\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u51fa\u961f\u9996\uff0c\u8dd1BFS\u3002\n## \u6ce8\u610f\n#### \u6bcf\u6b21\u8d70\u7684\u65f6\u5019\u8d70\u4e24\u683c\uff0c\u4f46\u662f\u6700\u540e\u5230\u51fa\u53e3\u53ea\u8d70\u4e00\u6b65\uff0c\u6240\u4ee5\u6700\u540e\u7b54\u6848\u8981\u52a01\uff0c\u8bfb\u53d6\u7684\u65f6\u5019\u7528gets\uff0c\u8981\u7528tmp\u5c06\u56de\u8f66\u8fc7\u6ee4\u6389\u3002\n### \u4e0b\u9762\u76f4\u63a5\u8d34\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\t//\u7f8e\u7f8e\u7684\u4e07\u80fd\u5934 \nusing namespace std;\nint w,h,ans=0;\nchar g[210][210],tmp[10];\nstruct point \n{\n\tint x,y,step;\n};\nint det[4][2]={{2,0},{-2,0},{0,2},{0,-2}};\nbool used[210][210];\nint f=1,e=0;\npoint q[20001],s;\nint main()\n{\n\tcin>>w>>h; gets(tmp);\t//\u8fc7\u6ee4\u56de\u8f66 \n\tw=w*2+1;\n\th=h*2+1;\n\tfor(int i=0;i<h;i++)\n\tgets(g[i]);\t//\u8bfb\u53d6\u5730\u56fe \n\tfor(int i=1;i<=w;i+=2)\n\t{\n\t\tif(g[0][i]==' ')\n\t\t{\n\t\t\ts.x=1,s.y=i,s.step=0;\n\t\t\tused[s.x][s.y]=1;\n\t\t\tq[++e]=s;\n\t\t}\n\t\tif(g[h-1][i]==' ')\n\t\t{\n\t\t    s.x=h-2,s.y=i,s.step=0;\n\t\t\tused[s.x][s.y]=1;\n\t\t\tq[++e]=s;\t\n\t\t}\n\t}\n\tfor(int i=1;i<=h;i+=2)\n\t{\n\t\tif(g[i][0]==' ')\n\t\t{\n\t\t\ts.x=i,s.y=1,s.step=0;\n\t\t\tused[s.x][s.y]=1;\n\t\t\tq[++e]=s;\n\t\t}\n\t\tif(g[i][w-1]==' ')\n\t\t{\n\t\t    s.x=i,s.y=w-2,s.step=0;\n\t\t\tused[s.x][s.y]=1;\t//\u6807\u8bb0\u5df2\u8d70 \n\t\t\tq[++e]=s;\t//\u653e\u5165\u961f\u5217 \n\t\t}\n\t}\t//\u5c06\u6240\u6709\u8d77\u70b9\u653e\u5165\u961f\u5217 \n\twhile(f<=e)\t//\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a \n\t{\n\t\tpoint u=q[f++];\n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\tpoint v=u;\n\t\t\tv.x=u.x+det[i][0],v.y=u.y+det[i][1];\n\t\t\tv.step++;\n\t\t\tif(v.x<0||v.x>=h||v.y<0||v.y>=w)continue;\t//\u82e5\u679c\u8d8a\u754c \n\t\t\tif(g[(v.x+u.x)/2][(v.y+u.y)/2]!=' ')continue;\t//\t\u5982\u679c\u662f\u6805\u680f \n\t\t\tif(used[v.x][v.y]==1)continue;\t//\u5982\u679c\u8d70\u8fc7 \n\t\t\tused[v.x][v.y]=1;\t//\u6807\u8bb0\u5df2\u8d70 \n\t\t\tq[++e]=v;\t//\u7ed3\u6784\u4f53\u5165\u961f \n\t\t\tif(v.step>ans)ans=v.step;\t//\u5224\u65ad\u662f\u5426\u4e3a\u6700\u5dee\u4e00\u70b9\u7684\u6700\u4f18\u89e3 \n\t\t}\n\t}\n\tcout<<ans+1<<endl;\t//\u6bcf\u6b21\u8d70\u7684\u65f6\u5019\u8d70\u4e24\u683c\uff0c\u4f46\u662f\u6700\u540e\u5230\u51fa\u53e3\u53ea\u8d70\u4e00\u6b65\uff0c\u6240\u4ee5\u6700\u540e\u7b54\u6848\u8981\u52a01\t \n\treturn 0;\t//\u534e\u4e3d\u7ed3\u675f \n } \n```",
        "postTime": 1546775704,
        "uid": 55995,
        "name": "\u6e90\u6c0f\u53ef\u4ee5\u5403\u5417",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1519 \u3010\u7a7f\u8d8a\u6805\u680f Overfencing\u3011"
    }
]