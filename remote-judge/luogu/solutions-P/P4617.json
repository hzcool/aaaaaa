[
    {
        "content": "# \u9898\u610f\r\n\u7ed9\u5b9a $n$ \u4ee3\u8868 $n$ \u4e2a\u5c71\u5cf0\u548c\u5c71\u8c37\uff0c\u7ed9\u5b9a $m$ \u4ee3\u8868 $m$ \u6761\u9053\u8def\uff0c\u7ed9\u5b9a $m$ \u6761\u9053\u8def\uff0c\u7b2c $i$ \u4e2a\u5c71\u5cf0\u51fa\u53d1 Mirko \u8d62\u7684\u6761\u4ef6\uff1a\u4ece\u5c71\u5cf0 $i$ \u5f00\u59cb\u8d70\uff0c\u6bcf\u6b21\u201c\u5c71\u8c37\u2014\u2014\u5c71\u5cf0\u2014\u2014\u5c71\u8c37\u2026\u2026\u201d\u4f9d\u6b21\u9009\uff0c\u5982\u679c\u6700\u540e\u662f\u5c71\u5cf0\uff0c\u5c31\u8d62\u3002\r\n\r\n# \u7b97\u6cd5\u5206\u6790\r\n\u7531\u9898\u76ee\u53ef\u77e5\uff0c\u5c71\u5cf0\u548c\u5c71\u5cf0\u4e4b\u95f4\u6ca1\u6709\u8def\uff0c\u5c71\u8c37\u540c\u7406\uff0c\u4e8e\u662f\u628a\u5c71\u5cf0\u548c\u5c71\u8c37\u5404\u81ea\u5212\u5206\u4e3a\u4e00\u4e2a\u96c6\u5408\u7684\u8bdd\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e2a\u201c\u4e8c\u5206\u56fe\u201d\u3002\r\n\r\n\u6700\u4f18\u7b56\u7565\u51e0\u4e2a\u5b57\u5bb9\u6613\u60f3\u5230\u662f\u201c\u535a\u5f08\u201d\u3002\r\n\r\n\u518d\u4ece\u672c\u8d28\u51fa\u53d1\uff0c\u6bcf\u6b21\u90fd\u4f1a\u5728\u4e24\u4e2a\u72b6\u6001\uff08\u9009\u5c71\u5cf0\u6216\u8005\u5c71\u8c37\uff09\u4e4b\u95f4\u4ea4\u66ff\uff0c\u6240\u4ee5\u8fd9\u9898\u662f\u201c\u4e8c\u5206\u56fe\u535a\u5f08\u201d\u3002\r\n\r\n# \u7b97\u6cd5\u8bb2\u89e3\r\n\u4e8c\u5206\u56fe\u535a\u5f08\u53ef\u4ee5\u4f7f\u7528[\u5308\u7259\u5229\u7b97\u6cd5](https://www.luogu.com.cn/problem/P3386)\uff08\u6c42\u6700\u5927\u5339\u914d\uff09\u89e3\u51b3\u3002\r\n\r\n\u672c\u9898\u76ee\u7684\u5148\u624b\uff1a\u65af\u62c9\u592b\u79d1( Slavko ) \u2014\u2014\u6e38\u620f\u5f00\u5c40\u5148\u9009\u5c71\u8c37\u3002\r\n### \u731c\u60f3\uff1a\r\n\u5982\u679c\u6700\u5927\u5339\u914d\u4e00\u5b9a\u5305\u542b $S1$\uff08\u4e00\u4e2a\u70b9\uff09\uff0c\u90a3\u4e48\u5148\u624b\u53ea\u9700\u8981\u4e00\u76f4\u6309\u7167\u5339\u914d\u9009\u70b9\u5373\u53ef\uff0c\u6240\u4ee5\u5148\u624b\u5fc5\u80dc\u3002\r\n\r\n### \u8bc1\u660e\uff1a\r\n\r\n#### \u5b9a\u4e49\uff1a\u975e\u5339\u914d\u70b9\u4e3a\u5c11\u4e86\u8fd9\u4e2a\u70b9\u4e5f\u53ef\u4ee5\u5b8c\u6210\u6700\u5927\u5339\u914d\u7684\u70b9\u3002\r\n\r\n\u540e\u624b\u4e0d\u53ef\u80fd\u9009\u5230\u975e\u5339\u914d\u70b9\uff0c\u5982\u679c\u540e\u624b\u9009\u5230\u4e00\u4e2a\u975e\u5339\u914d\u70b9\uff0c\u8bbe\u8def\u5f84\u4e3a $S_{1}$~$S_{n}$\uff0c\u90a3\u4e48\u628a\u73b0\u5728\u7684\u5339\u914d $S_{1}$~$S_{n}$ \u6362\u6210 $S_{2} \\sim S_{n}$\uff0c\u5339\u914d\u6570\u4e0d\u53d8\u4f46\u4e0d\u5305\u542b $S_{1}$\uff0c\u4e0e\u6700\u5927\u5339\u914d\u4e00\u5b9a\u5305\u542b $S_{1}$ \u77db\u76fe\u3002\uff08[\u8865\u5145\u8bb2\u89e3](https://zhuanlan.zhihu.com/p/359334008)\uff09\r\n### \u7ed3\u8bba\uff1a\r\n\u5f53\u4e00\u4e2a\u70b9\u5728\u6240\u6709\u6700\u5927\u5339\u914d\u7684\u65b9\u6848\u4e2d\uff08\u5c11\u4e86\u8fd9\u4e2a\u70b9\u65e0\u6cd5\u6700\u5927\u5339\u914d\uff09\uff0c\u90a3\u4e48\u5148\u624b\u5fc5\u80dc\u3002\r\n# \u7b97\u6cd5\u5b9e\u73b0\r\n\u5148\u8dd1\u4e00\u904d\u6700\u5927\u5339\u914d\uff08\u6211\u8fd9\u91cc\u4f7f\u7528\u5308\u7259\u5229\uff09\uff0c\u518d\u4ece\u6bcf\u4e2a\u975e\u6700\u5927\u5339\u914d\u70b9\u5f00\u59cb\u4f7f\u7528 dfs \u641c\u8def\u5f84\uff0c\u5e76\u628a\u9014\u7ecf\u7684\u7684\u70b9\u90fd\u6807\u8bb0\u4e3a\u5148\u624b\u8f93\uff08\u641c\u8def\u5f84\u7684\u901a\u4fd7\u7406\u89e3\uff1a\u628a\u975e\u5339\u914d\u70b9\u4e0e\u76f8\u90bb\u7684\u70b9\u5339\u914d\uff0c\u6b64\u65f6\u6700\u5927\u5339\u914d\u6570\u4e0d\u53d8\uff0c\u90a3\u4e48\u672c\u6765\u4e0e\u6b64\u76f8\u90bb\u70b9\u5339\u914d\u7684\u70b9\u662f\u975e\u5339\u914d\u70b9\uff09\u3002\r\n\r\n# \u4ee3\u7801\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=5005;\r\nint i, j, k, n, m, l, a, b;\r\nint h[N], p[N], v[N], ans[N];\r\nstruct ab{\r\n\tint b, n;\r\n}d[N];\r\ninline void cun(int a, int b){\r\n\td[++l].b=b, d[l].n=h[a], h[a]=l;\r\n}\r\nint dfs(int a){\r\n\tfor(int i=h[a]; i; i=d[i].n){\r\n\t\tint b=d[i].b;\r\n\t\tif(v[b]!=k&&(v[b]=k))//\u4f7f\u7528k\uff08\u5168\u5c40\u53d8\u91cf\uff09\u6765\u5145\u5f53\u65f6\u95f4\u6233\uff0c\u907f\u514dmemset\u8017\u65f6\u592a\u591a\r\n\t\t\tif(!p[b]||dfs(p[b])) return p[b]=a;//\u6a21\u677f\r\n\t}\r\n\treturn 0;\r\n}\r\nvoid sec(int a){\r\n\tans[a]=1;//\u662f\u975e\u6700\u5927\u5339\u914d\u4e2d\u7684\u70b9\r\n\tfor(int i=h[a]; i; i=d[i].n){\r\n\t\tint b=d[i].b;\r\n\t\tif(~v[b]) v[b]=-1, sec(p[b]);//\u201c~\u201d\u53ef\u4ee5\u5224\u65ad\u662f\u5426-1\uff0c\u662f-1\u4f1a\u8fd4\u56de0\uff0c\u6b64\u5904\u8d4b\u503c\u4e3a-1\u7684\u539f\u56e0\u662f\uff0c\u907f\u514d\u6570\u7ec4\u521d\u59cb\u65f6\u4e3a0\u7684\u8bef\u5224\r\n        \t//\u627e\u975e\u5339\u914d\u70b9\u627e\u5c71\u5cf0\u7684\u5373\u53ef\uff08\u5c71\u5cf0\u51fa\u53d1\uff09\uff0c\u6240\u4ee5\u662fsec(p[b])\uff0c\u800c\u4e0d\u662fsec(b)\r\n\t}\r\n}\r\nsigned main(){\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tfor(i=1; i<=m; ++i){\r\n\t\tscanf(\"%d%d\", &a, &b);\r\n\t\tcun(a, b);//\u5308\u7259\u5229\u7b97\u6cd5\uff0ca\u548cb\u5b58\u6709\u5411\u8fb9\u5373\u53ef\r\n\t}\r\n\tfor(k=1; k<=n; ++k) if(!dfs(k)) sec(k);\r\n   \t//dfs(k)==1\u4ee3\u8868\u662f\u5728\u5f53\u524d\u8fd9\u4e2a\u6700\u5927\u5339\u914d\u4e2d\uff0c\u4e0d\u4e3a1\u65f6\uff0c\u5c31\u8981\u6df1\u641c\u627e\u8def\u55bd~\r\n\tfor(k=1; k<=n; ++k) puts(ans[k]?\"Mirko\":\"Slavko\");\r\n\treturn 0;\r\n}\r\n```\r\n~~\uff08\u4e2a\u4eba\u7801\u98ce\u5947\u7279\uff09~~\r\n# \u7ed3\u8bed\r\n\u76f8\u5f53\u4e8e\u662f\u6a21\u677f\u9898\uff1f\u5982\u679c\u4e8b\u5148\u4e0d\u77e5\u9053\u6b64\u505a\u6cd5\u7684\u8bdd\u4f1a\u6709\u4e00\u70b9\u96be\u5ea6\u3002\r\n## \u767b\u5c71\u56fa\u7136\u6709\u8da3\uff0c\u4f46\u66f4\u6709\u8da3\u7684\u662f\u966a\u60a8\u767b\u5c71\u7684\u4eba\u3002\u4ee5\u524d\u966a\u60a8\u767b\u5c71\u7684\u4eba\uff0c\u8fd8\u5728\u60a8\u8eab\u65c1\u5417\uff1f",
        "postTime": 1673436214,
        "uid": 360547,
        "name": "Sunny\u90ed",
        "ccfLevel": 0,
        "title": "P4617 [COCI2017-2018#5] Planinarenje"
    },
    {
        "content": "# \u601d\u8def\n\n\u65e2\u7136\u8fd9\u9053\u9898\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u6211\u4eec\u5c31\u4f1a\u5f88\u81ea\u7136\u5730\u8054\u60f3\u5230\u6709\u5173\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u548c\u589e\u5e7f\u8def\u7684\u77e5\u8bc6\u3002\u90a3\u6211\u4eec\u8be5\u5982\u4f55\u601d\u8003\u5462\uff1f\n\n\u6211\u4eec\u89c2\u5bdf\u9898\u76ee\u8981\u6c42\uff0c\u5982\u679c\u6211\u4eec\u7684\u8d77\u59cb\u70b9\u5fc5\u7136\u5728\u6700\u5927\u5339\u914d\u4e2d\uff0c\u90a3\u4e48\u663e\u7136\u662f\u5148\u624b\u5fc5\u80dc\u7684\u3002\u5982\u679c\u8d77\u59cb\u70b9\u4e0d\u4e00\u5b9a\u5728\u6700\u5927\u5339\u914d\u4e2d\u7684\u8bdd\uff0c\u5c31\u4f1a\u5f62\u6210\u589e\u5e7f\u8def\uff0c\u5bf9\u624b\u5c31\u53ef\u4ee5\u6cbf\u7740\u6700\u5927\u5339\u914d\u8d70\uff0c\u5f97\u5230\u5fc5\u80dc\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u540e\u624b\u5fc5\u80dc\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Dinic \u5148\u8dd1\u51fa\u6700\u5927\u5339\u914d\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u4fee\u6539\u5176\u8fde\u51fa\u53bb\u7684\u8fb9\u7684\u6d41\u91cf\uff0c\u518d\u8dd1\u6700\u5927\u5339\u914d\uff0c\u770b\u770b\u7b54\u6848\u662f\u5426\u53d8\u5316\u3002\n\n~~\u7136\u540e T \u4e86~~\n\n\u539f\u6765 Dinic \u7684\u590d\u6742\u5ea6\u662f $O(\\sqrt{n}m)$ \uff0c\u672c\u9898\u8fd8\u8981\u518d\u4e58\u4e0a\u4e00\u4e2a $n$ \uff0c\u6240\u4ee5\u70b8\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5355\u72ec\u5224\u65ad\u6bcf\u4e00\u4e2a\u70b9\u662f\u5426\u5339\u914d\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u672a\u5339\u914d\u70b9\u8dd1\u589e\u5e7f\u8def\uff0c\u5176\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5c71\u5cf0\u70b9\u90fd\u4e0d\u4f1a\u5728\u6bcf\u4e00\u4e2a\u6700\u5927\u5339\u914d\u4e2d\u51fa\u73b0\uff08\u5373\u4e0d\u4e00\u5b9a\u5728\u6700\u5927\u5339\u914d\u4e2d\uff09\u3002\u8bb0\u5f55\u8fd9\u6837\u7684\u70b9\uff0c\u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\u590d\u6742\u5ea6\u662f $O(nm)$ \uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5010;\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<3)+(x<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint n,m,x,y,vis[N],head[N],cnt,ans[N],match[N];\nstruct edge{\n\tint to,nxt;\n}e[N];\nvoid add(int u,int v){\n\te[++cnt].to=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nint dfs1(int u){\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(vis[v])continue;\n\t\tvis[v]=1;\n\t\tif(!match[v]||dfs1(match[v])){\n\t\t\tmatch[v]=u;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nvoid dfs2(int u){//\u8dd1\u589e\u5e7f\u8def\n\tans[u]=1;\n\tfor(int i=head[u];i;i=e[i].nxt){\n\t\tint v=e[i].to;\n\t\tif(vis[v])continue;\n\t\tvis[v]=1;\n\t\tdfs2(match[v]);\n\t}\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tx=read(),y=read();\n\t\tadd(x,y);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(dfs1(i))continue;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tdfs2(i);\n\t}\n\tfor(int i=1;i<=n;i++)puts(!ans[i]?\"Slavko\":\"Mirko\");\n\treturn 0;\n}\n```\n\nCSP2021_RP+=inf,NOIP2021_RP+=inf;",
        "postTime": 1633064601,
        "uid": 178556,
        "name": "Skyjoy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4617 \u3010[COCI2017-2018#5] Planinarenje\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u535a\u5f08\u677f\u5b50\u9898\n\n\u8fd9\u4e00\u7c7b\u95ee\u9898\u57fa\u4e8e\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff0c\u5373\u4e24\u4eba\u53c2\u52a0\uff0c\u4e24\u7ec4\u72b6\u6001\u95f4\u53ef\u4ee5\u4e92\u76f8\u8f6c\u79fb\uff0c\u540c\u7ec4\u95f4\u4e0d\u53ef\uff0c\u4e00\u4e2a\u72b6\u6001\u6700\u591a\u8d70\u4e00\u6b21\uff0c\u8c01\u65e0\u6cd5\u8f6c\u79fb\u8c01\u8f93\n\n\u82e5\u5f53\u524d\u51fa\u53d1\u70b9$x$\u672a\u88ab\u5339\u914d\uff0c\u5219\u4ed6\u5fc5\u5b9a\u8f6c\u79fb\u5165\u4e00\u4e2a\u5339\u914d\u70b9\uff0c\u5426\u5219\u4f1a\u5f62\u6210\u589e\u5e7f\u8def\uff0c\u6b64\u65f6\u5bf9\u624b\u53ef\u4ee5\u4e00\u76f4\u6cbf\u7740\u5339\u914d\u70b9\u8fdb\u884c\u8f6c\u79fb\uff0c\u5219\u5148\u624b\u5fc5\u8d25\n\n\u5982\u679c\u5c5e\u4e8e\u6700\u5927\u5339\u914d\uff0c\u663e\u7136\u5148\u624b\u5fc5\u80dc\n\n\u6240\u4ee5\u8003\u8651\u5148\u8dd1\u51fa\u6700\u5927\u6d41\uff0c\u7136\u540e\u6bcf\u6b21\u6211\u4eec\u770b\u5220\u9664\u5f53\u524d\u51fa\u53d1\u70b9\u662f\u5426\u6539\u53d8\u6700\u5927\u5339\u914d\u6570\uff0c\u53ef\u4ee5\u8003\u8651\u6539\u53d8\u8be5\u70b9\u5df2\u7ecf\u6d41\u8fc7\u7684\u6d41\u91cf\uff0c\u4e4b\u540e\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u8dd1\u6700\u5927\u6d41\uff0c\u5982\u679c$ans=1$\u5373\u8bf4\u660e\u5148\u624b\u5fc5\u8d25\uff0c\u53cd\u4e4b\u4ea6\u7136\n\n```cpp\n/*deco loves Chino*/\n#include <bits/stdc++.h>\nusing namespace std;\nint head[10010],n,m,cnt=1,s,t;\nstruct edge\n{\n\tint next,to,dis;\n}e[40010],e1[40010];\nvoid add(int u,int v,int diss)\n{\n\te[++cnt].to=v;\n\te[cnt].next=head[u];\n\te[cnt].dis=diss;\n\thead[u]=cnt;\n}\nint dis[10010];\nint bfs()\n{\n\tqueue<int> q;\n\tmemset(dis,-1,sizeof(dis));\n\tdis[s]=0;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]==-1&&e[i].dis>0)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t]!=-1;\n}\nint dfs(int u,int ex)\n{\n\tif(u==t||!ex)\n\t{\n\t\treturn ex;\n\t}\n\tint flow=0;\n\tfor(int i=head[u];i;i=e[i].next)\n\t{\n\t\tint v=e[i].to;\n\t\tif(dis[v]!=dis[u]+1||e[i].dis<=0)\n\t\t{\n\t\t\tcontinue ;\n\t\t}\n\t\tint tmp=dfs(v,min(e[i].dis,ex));\n\t\tif(!tmp)\n\t\t{\n\t\t\tcontinue ;\n\t\t}\n\t\tex-=tmp,flow+=tmp;\n\t\te[i].dis-=tmp,e[i^1].dis+=tmp;\n\t\tif(!ex)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn flow;\n}\nint main()\n{\n\t//freopen(\"planina.in\",\"r\",stdin);\n\t//freopen(\"planina.out\",\"w\",stdout);\n\tcin>>n>>m;\n\ts=0,t=(n<<1)+1; \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y+n,1);\n\t\tadd(y+n,x,0);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd(s,i,1);\n\t\tadd(i,s,0);\n\t\tadd(i+n,t,1);\n\t\tadd(t,i+n,0);\n\t}\n\tint ans=0;\n\twhile(bfs())\n\t{\n\t\tans+=dfs(s,0x3f3f3f3f);\n\t}\n\tmemcpy(e1,e,sizeof(e));\n\tint fl=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t    if(fl)\n\t    {\n\t    \tmemcpy(e,e1,sizeof(e1));\n\t    }\n\t\tint flag=0,pos;\n\t\tfor(int j=head[i];j;j=e[j].next)\n\t\t{\n\t\t\tint v=e[j].to;\n\t\t\tif(v>n&&e[j].dis==0)\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tpos=v;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t    fl=0;\n\t\t\tcout<<\"Mirko\"<<\"\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t    int tk;\n\t\t\tfor(int j=head[pos];j;j=e[j].next)\n\t\t\t{\n\t\t\t\tif(e[j].to==t)\n\t\t\t\t{\n\t\t\t\t    tk=j;\n\t\t\t\t\te[j].dis=1,e[j^1].dis=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tans=0;\n\t\t\twhile(bfs())\n\t\t\t{\n\t\t\t\tans+=dfs(s,0x3f3f3f3f);\n\t\t\t}\n\t\t\tif(ans==1)\n\t\t\t{\n\t\t\t    fl=1;\n\t\t\t\tcout<<\"Mirko\"<<\"\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    fl=0;\n\t\t\t\tcout<<\"Slavko\"<<\"\\n\";\n\t\t\t\te[tk].dis=0,e[tk^1].dis=1;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n",
        "postTime": 1572589549,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4617 \u3010[COCI2017-2018#5] Planinarenje\u3011"
    },
    {
        "content": "\u89c6\u5c71\u5cf0\u4e3a\u5de6\u90e8\u70b9\uff0c\u5c71\u8c37\u4e3a\u53f3\u90e8\u70b9\u3002\n\n\u660e\u6670\u4e00\u4e2a\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\uff0c\u867d\u7136\u8d77\u70b9\u5728\u5c71\u5cf0\uff0c\u4f46\u5148\u624b\u662f\u4ee5\u5c71\u8c37\u4e3a\u76ee\u6807\u7684 Slavko\u3002\n\n\u5982\u679c\u4e00\u4e2a\u5de6\u90e8\u70b9\u5fc5\u5b9a\u5728\u6700\u5927\u5339\u914d\u4e0a\uff0c\u90a3\u4e48\u65e0\u8bba\u540e\u624b\u600e\u4e48\u8d70\uff0c\u5148\u624b\u4e00\u5b9a\u6709\u4e00\u79cd\u8d70\u6cd5\uff0c\u4f7f\u5f97\u5148\u624b\u6bcf\u4e00\u6b65\u8d70\u7684\u8fb9\u4f5c\u4e3a\u5339\u914d\u8fb9\u4f5c\u4e3a\u6700\u5927\u5339\u914d\uff0c\u5373\u6700\u540e\u8d70\u5230\u53f3\u90e8\u70b9\uff0c\u5148\u624b\u80dc\u3002\u5426\u5219\uff0c\u540e\u624b\u4e00\u5b9a\u6709\u4e00\u79cd\u8d70\u6cd5\uff0c\u4f7f\u5f97\u540e\u624b\u6bcf\u4e00\u6b65\u8d70\u7684\u8fb9\u4f5c\u4e3a\u5339\u914d\u8fb9\u6784\u6210\u6781\u5927\u5339\u914d\uff0c\u5176\u5927\u5c0f\u6bd4\u6700\u5927\u5339\u914d\u5c0f\u4e00\uff0c\u6700\u540e\u8d70\u5230\u5de6\u90e8\u70b9\uff0c\u540e\u624b\u80dc\u3002\n\n\u82e5\u4e00\u4e2a\u70b9\u5fc5\u987b\u5728\u6700\u5927\u5339\u914d\u4e0a\uff0c\u5219\u5220\u9664\u8be5\u70b9\u540e\u6700\u5927\u5339\u914d\u6570\u51cf\u5c0f\uff0c\u6362\u8a00\u4e4b\u52a0\u5165\u8be5\u70b9\u540e\u6700\u5927\u5339\u914d\u6570\u589e\u5927\u3002\n\n\u8003\u8651\u5308\u7259\u5229\u7b97\u6cd5\u7684\u5339\u914d\u8fc7\u7a0b\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5339\u914d\u6210\u529f\uff0c\u8bf4\u660e\u52a0\u5165\u8be5\u70b9\u4f7f\u5f97\u6700\u5927\u5339\u914d\u6570\u589e\u5927\uff0c\u5426\u5219\u52a0\u5165\u8be5\u70b9\u65e0\u5f71\u54cd\u3002\u5f53\u4e00\u4e2a\u70b9\u5339\u914d\u5931\u8d25\u65f6\uff0c\u5c1d\u8bd5\u4ee5\u8be5\u70b9\u4e3a\u8d77\u70b9\u8dd1\u4ea4\u9519\u8def\uff0c\u9014\u4e2d\u7ecf\u8fc7\u7684\u6bcf\u4e2a\u5de6\u90e8\u70b9\u5747\u6807\u8bb0\u4e3a\u975e\u5fc5\u5b9a\u5728\u6700\u5927\u5339\u914d\u4e0a\u3002\n\n```cpp\n#include <iostream>\n\nconst int maxN = 5000;\nconst int maxM = 5000;\n\nint n, m;\nint u, v;\n\nnamespace graph {\n    struct Vertex {\n        int vis;\n        int head;\n        int match;\n        int must;\n\n        Vertex() {\n            must = true;\n            return;\n        }\n    } vertex[2 * maxN + 10];\n\n    struct Edge {\n        int head;\n        int next;\n    }   edge[maxM + 10];\n\n    int ecnt;\n\n    void addEdge(int tail, int head) {\n        ecnt++;\n        edge[ecnt].head = head;\n        edge[ecnt].next = vertex[tail].head;\n        vertex[tail].head = ecnt;\n        return;\n    }\n\n    bool DFS1(int u, int t) {\n        for (int e = vertex[u].head; e; e = edge[e].next) {\n            int v = edge[e].head;\n            if (vertex[v].vis == t) continue;\n            vertex[v].vis = t;\n            if (vertex[v].match == 0 || DFS1(vertex[v].match, t)) {\n                vertex[v].match = u;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    void DFS2(int u, int t) {\n        vertex[u].must = false;\n        for (int e = vertex[u].head; e; e = edge[e].next) {\n            int v = edge[e].head;\n            if (vertex[v].vis == t) continue;\n            vertex[v].vis = t;\n            if (vertex[v].match) DFS2(vertex[v].match, t);\n        }\n        return;\n    }\n}\n\nint main() {\n    std::cin >> n >> m;\n    for (int i = 1; i <= m; i++) std::cin >> u >> v, graph::addEdge(u, n + v);\n    for (int i = 1; i <= n; i++) if (!graph::DFS1(i, i)) graph::DFS2(i, i + n);\n    for (int i = 1; i <= n; i++) if (graph::vertex[i].must) std::cout << \"Slavko\" << '\\n'; else std::cout << \"Mirko\" << '\\n';\n    return 0;\n}\n```",
        "postTime": 1684407659,
        "uid": 278046,
        "name": "Lyccrius",
        "ccfLevel": 5,
        "title": "P4617"
    },
    {
        "content": "**\u7ed9\u4e2a** $O(m\\sqrt{n}) $ **\u7684\u505a\u6cd5**\u3002\n\n\u9996\u5148\u95ee\u9898\u7b49\u4ef7\u4e8e\u5224\u65ad\u6bcf\u4e2a\u5de6\u90e8\u70b9\u662f\u5426\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u5fc5\u7ecf\u70b9\uff0c\u8bc1\u660e\u5176\u5b83\u9898\u89e3\u5199\u5f97\u5f88\u8be6\u7ec6\u4e86\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u6211\u4eec\u4eff\u7167\u6c42\u89e3\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u53ef\u884c\u8fb9\u5fc5\u7ecf\u8fb9\u7684\u601d\u8def\uff0c\u5c06\u8dd1\u5b8c Dinic \u7b97\u6cd5\u540e\u7684\u6b8b\u91cf\u7f51\u7edc $G_0$ \u8fdb\u884c SCC \u7f29\u70b9\u3002\n\n+ \u5b9a\u7406\uff1a\u5de6\u90e8\u70b9 $u$ \u662f\u6700\u5927\u5339\u914d\u7684\u5fc5\u7ecf\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53 $u$ \u662f\u5339\u914d\u70b9\u4e14 $u$ \u548c\u6e90\u70b9 $s$ \u5728 $G_0$ \u4e2d\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a SCC\u3002\n\n\u8bc1\u660e\uff1a\u6211\u4eec\u79f0\u4ea4\u66ff\u7ecf\u8fc7\u5339\u914d\u8fb9\u548c\u975e\u5339\u914d\u8fb9\u7684\u73af\u79f0\u4e3a**\u589e\u5e7f\u73af**\uff0c\u5c06\u4ea4\u66ff\u7ecf\u8fc7\u5339\u914d\u8fb9\u548c\u975e\u5339\u914d\u8fb9\u3001\u4e14\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u8def\u5f84\u79f0\u4e3a**\u534a\u589e\u5e7f\u8def**\u3002\u53ef\u4ee5\u8bc1\u660e\uff1a\u901a\u8fc7\u5c06\u5f53\u524d\u6c42\u89e3\u51fa\u7684\u6700\u5927\u5339\u914d\u5f02\u6216\u4e0a\u82e5\u5e72\u4e2a\u589e\u5e7f\u73af\u548c\u534a\u589e\u5e7f\u8def\uff0c\u53ef\u4ee5\u751f\u6210\u6240\u6709\u5408\u6cd5\u7684\u6700\u5927\u5339\u914d\u3002\n\n\u6539\u53d8\u589e\u5e7f\u73af\u7684\u5339\u914d\u72b6\u6001\u5e76\u4e0d\u4f1a\u5f71\u54cd\u70b9\u7684\u5339\u914d\u72b6\u6001\uff0c\u800c\u6539\u53d8\u534a\u589e\u5e7f\u8def\u7684\u5339\u914d\u72b6\u6001\u53ea\u4f1a\u6539\u53d8\u534a\u589e\u5e7f\u8def\u7aef\u70b9\u7684\u5339\u914d\u72b6\u6001\u3002\n\n\u56e0\u6b64\uff0c\u5de6\u90e8\u70b9 $u$ \u662f\u5fc5\u7ecf\u70b9\u5f53\u4e14\u4ec5\u5f53 $u$ \u662f\u5339\u914d\u70b9\uff0c\u4e14\u4e0d\u5b58\u5728\u4ee5 $u$ \u4e3a\u7aef\u70b9\u7684\u534a\u589e\u5e7f\u8def\uff0c\u4e5f\u5c31\u7b49\u4ef7\u4e8e $u$ \u548c $s$ \u5728 $G_0$ \u4e2d\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a SCC\u3002\n\n\u4e0a\u9762\u8fd9\u90e8\u5206\u753b\u753b\u56fe\u5c31\u5f88\u597d\u7406\u89e3\u4e86\u3002\n\n\u4ee3\u7801\u5f88\u7b80\u5355\u5c31\u4e0d\u8d34\u4e86\u3002",
        "postTime": 1674630828,
        "uid": 362346,
        "name": "TianyiLemon",
        "ccfLevel": 0,
        "title": "Dinic \u6c42\u89e3\u4e8c\u5206\u56fe\u535a\u5f08\uff08P4617\uff09"
    }
]