[
    {
        "content": "\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/10422815.html](https://www.cnblogs.com/PinkRabbit/p/10422815.html)\u3002\r\n\r\n### \u9898\u610f\u7b80\u8ff0\uff1a\r\n\r\n\u6709 $n$ \u79cd\u5bff\u53f8\uff0c\u7b2c $i$ \u79cd\u5bff\u53f8\u7684\u7c7b\u578b\u4e3a $a_i$\u3002\r\n\r\n\u5982\u679c\u4f60\u5403\u4e86\u7b2c $i$ \u79cd\u5230\u7b2c $j$ \u79cd\u5bff\u53f8\uff0c\u4f60\u4f1a\u5f97\u5230 $d_{i,j}$\uff08$i\\le j$\uff09\u7684\u6536\u76ca\u3002\r\n\r\n\u5982\u679c\u4f60\u5403\u4e86 $c$\uff08$c>0$\uff09\u79cd\u7c7b\u578b\u4e3a $x$ \u7684\u5bff\u53f8\uff0c\u4f60\u4f1a\u4ed8\u51fa $mx^2+cx$ \u7684\u4ee3\u4ef7\uff08$m\\in\\{0,1\\}$\uff09\u3002\r\n\r\n\u6700\u5927\u5316\u6536\u76ca\u4e0e\u4ee3\u4ef7\u7684\u5dee\u3002\r\n\r\n### \u9898\u89e3\uff1a\r\n\r\n#### \u4e00\u79cd\u7ecf\u5178\u7684\u6a21\u578b\uff1a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u3002\r\n\r\n\u6a21\u578b\uff1a\u6709\u82e5\u5e72\u4e2a\u7269\u54c1\uff0c\u6bcf\u79cd\u7269\u54c1\u6709\u4e00\u4e2a\u53ef\u6b63\u53ef\u8d1f\u7684\u4ef7\u503c $v_i$\uff0c\u9009\u53d6\u4e86\u7269\u54c1\u5c31\u610f\u5473\u7740\u83b7\u5f97\u4e86\u4ef7\u503c\u3002\r\n\r\n\u7269\u54c1\u4e4b\u95f4\u6709\u9650\u5236\u5173\u7cfb\uff1a$x\\to y$ \u8868\u793a\u82e5\u8981\u9009\u62e9\u7269\u54c1 $x$ \u5219\u5fc5\u987b\u9009\u62e9\u7269\u54c1 $y$\u3002\r\n\r\n\u76ee\u6807\u662f\u6700\u5927\u5316\u4ef7\u503c\u548c\u3002\r\n\r\n\u663e\u7136\uff0c\u6709\u65f6\u9700\u8981\u4e3a\u4e86\u4e00\u4e2a\u62e5\u6709\u8f83\u5927\u4ef7\u503c\u7684\u7269\u54c1\u800c\u88ab\u8feb\u9009\u62e9\u8d1f\u4ef7\u503c\u7684\u7269\u54c1\u3002\r\n\r\n#### \u8003\u8651\u4f7f\u7528\u6700\u5c0f\u5272\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\uff1a\r\n\r\n\u5c06\u6bcf\u4e2a\u7269\u54c1\u4e0e\u6e90 $S$ \u6c47 $T$ \u76f8\u8fde\u3002\u82e5\u5272\u6389\u4e0e $S$ \u76f8\u8fde\u7684\u8fb9\u8868\u793a\u4e0d\u9009\u8fd9\u4e2a\u7269\u54c1\uff0c\u5272\u6389\u4e0e $T$ \u76f8\u8fde\u7684\u8fb9\u8868\u793a\u9009\u62e9\u8fd9\u4e2a\u7269\u54c1\u3002\r\n\r\n\u5bf9\u4e8e\u4e00\u4e2a\u7269\u54c1\u7684\u4ef7\u503c $v$\uff0c\u5982\u679c $v>0$ \u5219\u4ee4\u5b83\u4e0e $S$ \u76f8\u8fde\u7684\u8fb9\u7684\u6743\u503c\u4e3a $v$\uff0c\u4e0e $T$ \u76f8\u8fde\u7684\u8fb9\u7684\u6743\u503c\u4e3a $0$\uff0c\u5c06 $v$ \u52a0\u5165\u7b54\u6848\u3002\u8868\u793a\u4e0d\u9009\u62e9\u8fd9\u4e2a\u7269\u54c1\u4f1a\u4ed8\u51fa $v$ \u7684\u4ee3\u4ef7\uff1b  \r\n\u5982\u679c $v<0$ \u5219\u4ee4\u5b83\u4e0e $S$ \u76f8\u8fde\u7684\u8fb9\u7684\u6743\u503c\u4e3a $0$\uff0c\u4e0e $T$ \u76f8\u8fde\u7684\u8fb9\u7684\u6743\u503c\u4e3a $-v$\uff08\u663e\u7136 $-v>0$\uff09\u3002\u8868\u793a\u9009\u62e9\u8fd9\u4e2a\u7269\u54c1\u4f1a\u4ed8\u51fa $-v$ \u7684\u4ee3\u4ef7\u3002\r\n\r\n\u5bf9\u4e8e $x\\to y$ \u7684\u5173\u7cfb\uff0c\u8f6c\u5316\u4e3a $x$ \u5411 $y$ \u8fde\u4e00\u6761\u6743\u503c\u4e3a $\\infty$ \u7684\u8fb9\uff0c\u663e\u7136\u8fd9\u6761\u8fb9\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5272\uff0c\u5982\u679c\u9009\u62e9\u4e86 $x$\uff0c\u5373\u5272\u6389 $x$ \u4e0e $T$ \u76f8\u8fde\u7684\u8fb9\uff0c\u90a3\u4e48\u5982\u679c\u4e0d\u9009 $y$\uff0c\u5373\u5272\u6389 $y$ \u4e0e $S$ \u76f8\u8fde\u7684\u8fb9\uff0c\u5c31\u4f1a\u51fa\u73b0\u8def\u5f84 $S\\to x\\to y\\to T$\uff0c\u6240\u4ee5\u5fc5\u987b\u9009\u62e9 $y$\u3002\u800c\u5982\u679c\u4e0d\u9009 $x$ \u5219\u5bf9 $y$ \u7684\u9009\u62e9\u6ca1\u6709\u5f71\u54cd\u3002\r\n\r\n\u56e0\u4e3a\u6743\u503c\u5168\u90e8\u4e3a\u975e\u8d1f\u6570\uff0c\u7b26\u5408\u4f7f\u7528 Dinic \u7b97\u6cd5\u89e3\u51b3\u7f51\u7edc\u6d41\u7684\u6761\u4ef6\uff0c\u7ed3\u5408\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528 Dinic \u7b97\u6cd5\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\u3002\r\n\r\n\u56de\u5230\u9898\u76ee\u4e0a\u6765\uff0c\u6211\u4eec\u5c06\u6bcf\u79cd $d_{i,j}$ \u7684\u6536\u76ca\u90fd\u770b\u505a\u4e00\u4e2a\u7269\u54c1\u3002\u663e\u7136\u5982\u679c\u9009\u62e9 $d_{i,j}$\uff08$i<j$\uff09\uff0c\u5219\u5fc5\u987b\u9009\u62e9 $d_{i,j-1}$ \u4ee5\u53ca $d_{i+1,j}$\u3002\r\n\r\n\u800c\u5982\u679c\u5403\u4e86 $c$\uff08$c>0$\uff09\u79cd\u7c7b\u578b\u4e3a $x$ \u7684\u5bff\u53f8\uff0c\u9700\u8981\u4ed8\u51fa $mx^2+cx$ \u7684\u4ee3\u4ef7\u3002  \r\n\u8fd9\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a\u5403\u4e86\u6bcf\u79cd\u7c7b\u578b\u4e3a $x$ \u7684\u5bff\u53f8\u9700\u8981\u4ed8\u51fa $x$ \u7684\u4ee3\u4ef7\uff0c\u800c\u5403\u8fc7\u7c7b\u578b\u4e3a $x$ \u7684\u5bff\u53f8\u9700\u8981\u4ed8\u51fa $mx^2$ \u7684\u4ee3\u4ef7\u3002\r\n\r\n\u9009\u62e9\u4e86 $d_{i,i}$ \u5c31\u4ee3\u8868\u5403\u6389\u4e86\u7b2c $i$ \u79cd\u5bff\u53f8\uff0c\u8fd9\u65f6\u9700\u8981\u4ed8\u51fa $a_i$ \u7684\u4ee3\u4ef7\uff08$a_i$ \u662f\u8fd9\u79cd\u5bff\u53f8\u7684\u7c7b\u578b\uff09\u3002\r\n\r\n\u9009\u62e9\u4e86 $d_{i,i}$ \u8fd8\u610f\u5473\u7740\uff1a\u5fc5\u987b\u4ed8\u51fa $m\\cdot a_i^2$ \u7684\u4ee3\u4ef7\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u5bff\u53f8\u7c7b\u578b\u4e5f\u770b\u4f5c\u4e00\u4e2a\u7269\u54c1\uff0c\u9009\u62e9\u6536\u76ca $d_{i,i}$ \u5219\u5fc5\u987b\u9009\u62e9\u7c7b\u578b $a_i$\u3002\r\n\r\n\u81f3\u6b64\uff0c\u6240\u6709\u9650\u5236\u90fd\u8f6c\u5316\u4e3a\u4e86\u201c\u9009\u62e9 $x$ \u5219\u5fc5\u987b\u9009\u62e9 $y$\u201d\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528**\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe**\u7684\u6a21\u578b\u89e3\u51b3\u4e86\u3002\r\n\r\n\u5728\u4ee3\u7801\u4e2d\uff0c$S$\u3001$T$ \u5206\u522b\u662f $1$ \u548c $2$ \u53f7\u70b9\uff0c$d_{i,j}$ \u662f $\\mathrm{Id}[i][j]$ \u53f7\u70b9\uff0c\u63a5\u4e0b\u6765\u7684\u70b9\u5219\u662f\u6bcf\u79cd\u5bff\u53f8\u7c7b\u578b\u3002\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n\r\ntypedef long long LL;\r\nconst LL Inf = 0x7fffffffffffffff;\r\n\r\nnamespace DinicFlow {\r\n\tconst int MN = 6060, MM = 16055;\r\n\t\r\n\tint N, S, T;\r\n\tint h[MN], iter[MN], nxt[MM * 2], to[MM * 2], tot = 1; LL w[MM * 2];\r\n\tinline void ins(int u, int v, LL x) { nxt[++tot] = h[u], to[tot] = v, w[tot] = x, h[u] = tot; }\r\n\tinline void insw(int u, int v, LL x) { ins(u, v, x); ins(v, u, 0); }\r\n\t\r\n\tint lv[MN], que[MN], l, r;\r\n\t\r\n\tinline bool Lvl() {\r\n\t\tmemset(lv, 0, sizeof(lv));\r\n\t\tlv[S] = 1;\r\n\t\tque[l = r = 1] = S;\r\n\t\twhile (l <= r) {\r\n\t\t\tint u = que[l++];\r\n\t\t\tfor (int i = h[u]; i; i = nxt[i]) if (w[i] && !lv[to[i]]) {\r\n\t\t\t\tlv[to[i]] = lv[u] + 1;\r\n\t\t\t\tque[++r] = to[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn lv[T] != 0;\r\n\t}\r\n\t\r\n\tLL Flow(int u, LL f) {\r\n\t\tif (u == T) return f;\r\n\t\tLL d = 0, s = 0;\r\n\t\tfor (int &i = iter[u]; i; i = nxt[i]) if (w[i] && lv[to[i]] == lv[u] + 1) {\r\n\t\t\td = Flow(to[i], std::min(f, w[i]));\r\n\t\t\tf -= d, s += d;\r\n\t\t\tw[i] -= d, w[i ^ 1] += d;\r\n\t\t\tif (!f) break;\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\t\r\n\tinline LL Dinic() {\r\n\t\tLL Ans = 0;\r\n\t\twhile (Lvl()) {\r\n\t\t\tmemcpy(iter + 1, h + 1, N * sizeof(h[0]));\r\n\t\t\tAns += Flow(S, Inf);\r\n\t\t}\r\n\t\treturn Ans;\r\n\t}\r\n}\r\n\r\nconst int MN = 105;\r\n\r\nint N, M, A[MN], MxA;\r\nint F[MN][MN], Id[MN][MN], cnt;\r\nLL Ans = 0;\r\n\r\nint main() {\r\n\tscanf(\"%d%d\", &N, &M);\r\n\tfor (int i = 1; i <= N; ++i) scanf(\"%d\", &A[i]), MxA = std::max(MxA, A[i]);\r\n\tDinicFlow::S = 1, DinicFlow::T = 2;\r\n\tcnt = 2;\r\n\tfor (int i = 1; i <= N; ++i) for (int j = i; j <= N; ++j) {\r\n\t\tscanf(\"%d\", &F[i][j]), Id[i][j] = ++cnt;\r\n\t}\r\n\tfor (int i = 1; i <= N; ++i) for (int j = i; j <= N; ++j) {\r\n\t\tint cost = F[i][j];\r\n\t\tif (i == j) {\r\n\t\t\tif (M) DinicFlow::insw(Id[i][j], cnt + A[i], Inf);\r\n\t\t\tcost -= A[i];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tDinicFlow::insw(Id[i][j], Id[i + 1][j], Inf);\r\n\t\t\tDinicFlow::insw(Id[i][j], Id[i][j - 1], Inf);\r\n\t\t}\r\n\t\tif (cost > 0) DinicFlow::insw(1, Id[i][j], cost), Ans += cost;\r\n\t\tif (cost < 0) DinicFlow::insw(Id[i][j], 2, -cost);\r\n\t}\r\n\tif (M) for (int i = 1; i <= MxA; ++i) DinicFlow::insw(++cnt, 2, i * i);\r\n\tDinicFlow::N = cnt;\r\n\tprintf(\"%lld\\n\", Ans - DinicFlow::Dinic());\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1550907526,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "\u628a\u535a\u5ba2\u91cc\u5199\u7684\u590d\u5236\u8fc7\u6765\u9a97\u4e00\u6ce2\u7ecf\u9a8c\u597d\u4e86(\u96fe)\n\n\u7f51\u7edc\u6d41 \u6700\u5c0f\u5272 \u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\n\n\u6709\u7ecf\u9a8c\u7684\u9009\u624b\u53ef\u4ee5\u6839\u636e\u6743\u503c\u4e0d\u91cd\u590d\u8ba1\u7b97\u7684\u7279\u6027\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u95ee\u9898\uff1b\n\n\u7ecf\u9a8c\u4e0d\u8db3\u7684\u9009\u624b\u770b\u4e86\u9898\u89e3\u5c31\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u95ee\u9898\uff08\u9003\uff09\n\n\n###\u82b1\u5f0f\u5efa\u8fb9\uff1a\n\n\n1.\u5bf9\u4e8e\u6240\u6709\u7684$(i,j)$\u533a\u95f4\u6536\u76ca\uff0c\u5c06\u5b83\u4eec\u5404\u81ea\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u82e5\u6743\u503c$mp$\u4e3a\u6b63\uff0c\u4ece\u6e90\u70b9\u8fde\u8fc7\u6765\uff0c\u5bb9\u91cf\u4e3a$mp$\uff0c\u82e5\u6743\u503c\u4e3a\u8d1f\uff0c\u8fde\u5230\u6c47\u70b9\u53bb\uff0c\u5bb9\u91cf\u4e3a$-mp$\n\n\n2.\u5bf9\u4e8e\u6240\u6709\u7684$(i,j)$\u533a\u95f4\u6536\u76ca\uff0c\u5411\u533a\u95f4\u5185\u5305\u62ec\u7684i\u5230j\u53f7\u5bff\u53f8\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$INF$\uff0c\u8868\u793a\u5fc5\u987b\u9009\u5bf9\u5e94\u7684\u5bff\u53f8\u624d\u80fd\u9009\u8fd9\u4e2a\u533a\u95f4\n\n\n3.\u5bf9\u4e8e\u6240\u6709\u7684\u5bff\u53f8\u7c7b\u578b$w[i]$\uff0c\u4e3a\u5b83\u4eec\u5404\u81ea\u5f00\u4e00\u4e2a\u70b9\uff0c\u5411\u6c47\u70b9T\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$m*w[i]*w[i]$\n\n\n4.\u5bf9\u4e8e1~n\u6bcf\u4e00\u4e2a\u5bff\u53f8\uff0c\u5411\u5b83\u4eec\u6240\u5c5e\u7684\u7c7b\u578b$w[i]$\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$INF$\uff1b\u5411T\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$C[i]$\n\n\n5.\u5bf9\u4e8e\u6240\u6709\u7684$(i,j)$\u533a\u95f4\uff0c\u5411$(i+1,j)$\u548c$(i,j-1)$\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3aINF\uff0c\u8868\u793a\u9009\u4e86\u5927\u533a\u95f4\u80af\u5b9a\u5f97\u9009\u88ab\u5927\u533a\u95f4\u5305\u542b\u7684\u5c0f\u533a\u95f4\n\n\u4e4b\u540e\u7528\u603b\u6536\u76ca\u51cf\u53bb\u6700\u5c0f\u5272\u5373\u53ef\n\n\n```cpp\n/*by SilverN & Elichika*/\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#define LL long long\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nconst int mxn=30505;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0' && ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nstruct edge{\n    int u,v,nxt,f;\n}e[mxn<<6];\nint hd[mxn],mct=1;\ninline void add_edge(int u,int v,int f){\n    e[++mct].v=v;e[mct].u=u;e[mct].nxt=hd[u];e[mct].f=f;hd[u]=mct;return;\n}\nvoid insert(int u,int v,int f){\n    add_edge(u,v,f); add_edge(v,u,0);\n    return;\n}\nint S,T;\nint d[10085];\nbool BFS(){\n    memset(d,0,sizeof d);\n    queue<int>q;\n    d[S]=1;\n    q.push(S);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int i=hd[u];i;i=e[i].nxt){\n            int v=e[i].v;\n            if(!d[v] && e[i].f){\n                d[v]=d[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return d[T];\n}\nint DFS(int u,int lim){\n    if(u==T)return lim;\n    int f=0,tmp;\n    for(int i=hd[u];i;i=e[i].nxt){\n        int v=e[i].v;\n        if(d[v]==d[u]+1 && e[i].f && (tmp=DFS(v,min(lim,e[i].f)))){\n            e[i].f-=tmp;\n            e[i^1].f+=tmp;\n            lim-=tmp;\n            f+=tmp;\n            if(!lim)return f;\n        }\n    }\n    d[u]=0;\n    return f;\n}\nint Dinic(){\n    int res=0;\n    while(BFS())res+=DFS(S,INF);\n    return res;\n}\nint n,m;\nint a[105];\nint mp[105][105];\nint id[105][105],ict=0;\nint idw[1005];\nbool vis[1005];\nLL smm=0;\nvoid Build(){\n    S=0;\n    for(int i=1;i<=n;i++){\n        for(int j=i;j<=n;j++){\n            id[i][j]=++ict;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        if(!vis[a[i]]){\n            vis[a[i]]=1;\n            idw[a[i]]=++ict;\n        }\n    }\n    T=ict+n+1;\n    memset(vis,0,sizeof vis);\n    for(int i=1;i<=n;i++){\n        if(!vis[a[i]]){\n            vis[a[i]]=1;\n            insert(idw[a[i]],T,m*a[i]*a[i]);\n        }\n    }\n    for(int i=1;i<=n;i++){//zhonglei\n        insert(ict+i,idw[a[i]],INF);\n        insert(ict+i,T,a[i]);\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=i;j<=n;j++){\n            if(mp[i][j]>0){\n                smm+=mp[i][j];\n                insert(S,id[i][j],mp[i][j]);\n                insert(id[i][j],ict+i,INF);\n                insert(id[i][j],ict+j,INF);\n            }\n            else if(mp[i][j]<0){\n                insert(id[i][j],T,-mp[i][j]);\n                insert(id[i][j],ict+i,INF);\n                insert(id[i][j],ict+j,INF);\n            }\n            if(i!=j){\n                insert(id[i][j],id[i+1][j],INF);\n                insert(id[i][j],id[i][j-1],INF);\n            }\n        }\n    }\n    return ;\n}\nint main(){\n    int i,j;\n    n=read();m=read();\n    for(int i=1;i<=n;i++)a[i]=read();\n    for(i=1;i<=n;i++)\n        for(j=i;j<=n;j++)\n            mp[i][j]=read();\n    Build();\n    int res=Dinic();\n    smm-=res;\n    printf(\"%lld\\n\",smm);\n    return 0;\n}\n\n```\n",
        "postTime": 1493257873,
        "uid": 22945,
        "name": "\u7eda\u6fd1\u7ed8\u91cc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "\u795e\u4ed9\u9898\n\n##### \u987a\u4fbf\u6253\u4e2a\u5e7f\u544a\uff1a[\u6211\u7684\u7f51\u7edc\u6d41\u597d\u9898\u7684blog](https://www.luogu.com.cn/blog/et2006/wang-lao-liu-hao-ti-ti-xie-hui-zong) \u4ee5\u53ca [\u6211\u7684\u7f51\u7edc\u6d4124\u9898\u9898\u89e3](https://www.luogu.com.cn/blog/et2006/post-wang-lao-liu-24-ti-ti-xie-hui-zong)\n\n### \u94fa\u57ab\uff1a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\n\n#### \u63a8\u8350\u4ee5\u4e0b\u6211\u7684\u6a21\u677f\u9898\uff1a[\u3010\u6a21\u677f\u3011\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe](https://www.luogu.com.cn/problem/U103816)\n\n\u73b0\u5728\u5047\u8bbe\u6709\u4e00\u5f20 $\\mathrm{DAG}$\u3002$n$ \u4e2a\u8282\u70b9 $m$ \u6761\u8fb9\uff0c\u70b9\u4e0a\u6709\u70b9\u6743 $w_i$\uff0c\u53ef\u6b63\u53ef\u8d1f\u3002\u73b0\u5728\u4f60\u8981\u4ece\u4e2d\u9009\u51fa\u4e00\u4e2a\u70b9\u96c6 $S$\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709\u7684\u6709\u5411\u8fb9 $x \\rightarrow y$\uff0c\u5982\u679c $x \\in S$\uff0c\u90a3\u4e48 $y \\in S$\uff0c\u6700\u5927\u5316\u9009\u51fa\u7684\u70b9\u7684\u6743\u503c\u4e4b\u548c\u3002\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u6700\u7406\u60f3\u7684\u72b6\u6001\u4e3a\u53d6\u8d70\u6240\u6709\u6743\u503c\u4e3a\u6b63\u7684\u70b9\uff0c\u4e0d\u53bb\u6240\u6709\u6743\u503c\u4e3a\u8d1f\u7684\u70b9\uff0c\u4f46\u662f\u8fd9\u4e2a\u72b6\u6001\u4e0d\u4e00\u5b9a\u5408\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u6700\u5c0f\u5272\u7684\u601d\u60f3\uff0c\u62ff\u6700\u7406\u60f3\u7684\u72b6\u6001\u7684\u7b54\u6848\uff0c\u51cf\u53bb\u5c06\u7406\u60f3\u72b6\u6001\u8c03\u6574\u4e3a\u5408\u6cd5\u72b6\u6001\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u5f20\u56fe\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u70b9 $i$\uff0c\u5982\u679c $w_i \\gt 0$\uff0c\u4ece\u6e90\u70b9 $S$ \u5411 $i$ \u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3a $w_i$\uff0c\u5220\u6389\u8fd9\u6761\u8fb9\uff0c\u8868\u793a\u4e0d\u9009\u8fd9\u6761\u8fb9\uff0c\u9700\u8981\u4ed8\u51fa $w_i$ \u7684\u4ee3\u4ef7\u3002\u5982\u679c $w_i \\lt 0$\uff0c\u90a3\u4e48\u8fde\u4e00\u6761\u4ece $i$ \u5230\u6c47\u70b9 $T$ \u7684\u8fb9\uff0c\u6d41\u91cf\u4e3a $-w_i$\uff08\u539f\u672c\u6743\u503c\u4e3a\u8d1f\uff0c\u53d6\u4e2a\u76f8\u53cd\u6570\u5c31\u53d8\u6210\u6b63\u7684\u4e86\uff09\uff0c\u5220\u6389\u8fd9\u6761\u8fb9\uff0c\u8868\u793a\u9009\u8fd9\u4e2a\u70b9\uff0c\u8981\u52a0\u4e0a $-w_i$ \u7684\u4ee3\u4ef7\u3002\u4e2d\u95f4\u8fde\u6211\u4eec\u5df2\u6709\u7684\u8fb9\uff0c\u6d41\u91cf\u4e3a $\\infty$\uff0c\u7136\u540e\u8dd1\u6700\u5c0f\u5272\u5373\u6700\u5927\u6d41\uff0c\u5c31\u662f\u6211\u4eec\u5c06\u7406\u60f3\u72b6\u6001\u8c03\u6574\u4e3a\u5408\u6cd5\u72b6\u6001\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\u7136\u540e\u518d\u62ff\u7406\u60f3\u72b6\u6001\uff0c\u5373 $\\sum_{i=1}^nw_i\\ (w_i>0)$\uff0c\u51cf\u6389\u8fd9\u4e2a\u6700\u5c0f\u4ee3\u4ef7\uff0c\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u662f\u6b63\u786e\u7684\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e $w_i>0$ \u7684\u70b9\uff0c\u5c3d\u7ba1\u6211\u4eec\u6ca1\u6709\u5728\u5b83\u4e0e\u6c47\u70b9 $T$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5272\u6389\u8fd9\u6761\u8fb9\u4e3a\u9009\u62e9\u8fd9\u4e2a\u70b9\uff0c\u53ea\u4e0d\u8fc7\u5bb9\u91cf\u4e3a $0$\uff0c\u5373\u539f\u672c\u5728\u7406\u60f3\u72b6\u6001\u4e2d\u5df2\u7ecf\u9009\u62e9\u4e86\u8fd9\u4e2a\u70b9\uff0c\u518d\u91cd\u65b0\u9009\u62e9\u5b83\u4e0d\u9700\u8981\u4efb\u4f55\u4ee3\u4ef7\u3002\u540c\u7406\uff0c\u5bf9\u4e8e $w_i<0$ \u7684\u70b9\uff0c\u5c3d\u7ba1\u6ca1\u6709\u5b83\u4e0e $S$ \u4e4b\u95f4\u7684\u8fb9\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5272\u6389\u8fd9\u6761\u8fb9\u4e3a\u4e0d\u9009\u62e9\u8fd9\u4e2a\u70b9\uff0c\u53ea\u4e0d\u8fc7\u5bb9\u91cf\u4e3a $0$\uff0c\u8868\u660e\u4e0d\u9009\u62e9\u8fd9\u4e2a\u70b9\u4e0d\u9700\u8981\u4ed8\u51fa\u4efb\u4f55\u4ee3\u4ef7\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8bc1\u660e\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9 $x \\rightarrow y$\uff0c\u5047\u8bbe\u6211\u4eec\u9009\u4e86 $x$ \u6ca1\u6709\u9009 $y$\uff0c\u90a3\u4e48\u5c31\u662f\u5272\u6389 $x$ \u5230 $T$ \u7684\u8fb9\uff0c\u5272\u6389 $S$ \u5230 $y$ \u7684\u8fb9\uff0c\u4f46\u662f\u8fd8\u662f\u5b58\u5728\u8def\u5f84 $S \\rightarrow x \\rightarrow y \\rightarrow T$\uff0c\u4ecd\u7136\u5b58\u5728 $S$ \u5230 $T$ \u7684\u8def\u5f84\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u201c\u7f51\u7edc\u56fe\u4e2d\u4e0d\u5b58\u5728 $S$ \u5230 $T$ \u7684\u8def\u5f84\u201d \u4e0e \u201c\u4e0d\u5b58\u5728\u6709\u5411\u8fb9 $x \\rightarrow y$\uff0c$x$ \u88ab\u9009\u4e2d\uff0c$y$ \u6ca1\u6709\u88ab\u9009\u4e2d\u201d \u662f\u7b49\u4ef7\u7684\u3002\u8fd9\u4e5f\u5c31\u8bc1\u660e\u4e86\u6211\u4eec\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u3002\n\n\u56de\u5230\u8fd9\u4e2a\u9898\u6765\u3002\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u90a3\u4e2a\u201c\u7f8e\u98df\u8bc4\u5224\u6807\u51c6\u201d\u7684\u201c\u8bb0\u5fc6\u6027\u201d\u5176\u5b9e\u662f\u5047\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u9009\u4e86 $[1,2]$ \u548c $[2,3]$\uff0c\u83b7\u5f97\u7684\u6536\u76ca\u4e3a $d_{1,1}+d_{1,2}+d_{2,2}+d_{2,3}+d_{3,3}$\u7b49\u4ef7\u4e8e\u53d6 $[1,3]$ \u7684\u6536\u76ca\uff0c\u4f46\u662f\u76f8\u6bd4\u4e8e\u53d6 $[1,3]$\uff0c\u5b83\u8fd8\u591a\u4e86\u4e00\u4e2a $a_2$ \u7684\u4ee3\u4ef7\u3002\u4e5f\u5c31\u662f\u8bf4\u4e0e\u5176\u53d6 $[1,2]$ \u548c $[2,3]$\uff0c\u8fd8\u4e0d\u5982\u53d6\u5b83\u4eec\u7684\u5e76\u96c6 $[1,3]$\u3002\n\n\u5176\u6b21\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c $d_{i,j}\\ (i<j)$ \u88ab\u7d2f\u52a0\u5230\u4e86\u7b54\u6848\u91cc\uff0c\u90a3\u4e48 $d_{i+1,j}$ \u548c $d_{i,j-1}$ \u4e5f\u4f1a\u88ab\u7d2f\u52a0\u5230\u7b54\u6848\u91cc\u3002\u8fd9\u5c31\u7ed9\u6211\u4eec\u4e00\u4e2a\u542f\u53d1\uff1a\u628a\u6bcf\u4e2a $d_{i,j}$ \u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u9009\u4e86 $d_{i,j}$ \u5c31\u5fc5\u987b\u9009 $d_{i+1,j}$ \u548c $d_{i,j-1}$\u3002\n\n\u518d\u8003\u8651\u4ee3\u4ef7 $mx^2+cx$\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3a\u201c\u6bcf\u5403\u4e00\u4e2a\u7c7b\u578b\u4e3a $x$ \u7684\u5bff\u53f8\u5c31\u9700\u8981\u4ed8\u51fa $x$ \u7684\u4ee3\u4ef7\uff0c\u800c\u5403\u8fc7\u81f3\u5c11\u4e00\u79cd\u7c7b\u578b\u4e3a $x$ \u7684\u5bff\u53f8\u53c8\u8981\u4ed8\u51fa $mx^2$ \u7684\u4ee3\u4ef7\u201d\u3002\u201c\u6bcf\u5403\u4e00\u4e2a\u7c7b\u578b\u4e3a $x$ \u7684\u5bff\u53f8\u5c31\u9700\u8981\u4ed8\u51fa $x$ \u7684\u4ee3\u4ef7\u201d\uff0c\u53ef\u4ee5\u770b\u6210\u662f\u9009\u62e9 $d_{i,i}$ \u7684\u4ee3\u4ef7\u989d\u5916\u589e\u52a0 $a_i$\u3002\u800c\u201c\u5403\u8fc7\u81f3\u5c11\u4e00\u79cd\u7c7b\u578b\u4e3a $x$ \u7684\u5bff\u53f8\u53c8\u8981\u4ed8\u51fa $mx^2$ \u7684\u4ee3\u4ef7\u201d\u53ef\u4ee5\u542f\u53d1\u6211\u4eec\u5c06\u6bcf\u79cd\u5bff\u53f8\u7c7b\u578b\u4e5f\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u7c7b\u578b $x$ \u7684\u4ee3\u4ef7\u4e3a $mx^2$\uff0c\u800c\u5982\u679c\u9009\u62e9\u70b9 $d_{i,i}$\uff0c\u5c31\u5fc5\u987b\u9009\u62e9\u70b9 $a_i$\u3002\u8fd9\u6837\u5c31\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u95ee\u9898\u4e86\u3002\n\n\u6700\u540e\u662f\u4ee3\u7801\uff1a\n\n```cpp\n/*\n\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u591a\u6d4b\u4e0d\u8bfb\u5b8c\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8fb9\u754c\u4e0d\u7279\u5224\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d2a\u5fc3\u4e0d\u8bc1\u660e\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\nD P \u987a\u5e8f\u9519\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u5927\u5c0f\u5c11\u7b49\u53f7\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u53d8\u91cf\u4e0d\u7edf\u4e00\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d8a\u754c\u4e0d\u5224\u65ad\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8c03\u8bd5\u4e0d\u6ce8\u91ca\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u6ea2\u51fa\u4e0d l l\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi\t\t\tfirst\n#define se\t\t\tsecond\n#define fz(i,a,b)\tfor(int i=a;i<=b;i++)\n#define fd(i,a,b)\tfor(int i=a;i>=b;i--)\n#define put(x)\t\tputchar(x)\n#define eoln        put('\\n')\n#define space\t\tput(' ')\n#define int long long\ninline int read(){\n\tint x=0,neg=1;char c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\tneg=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\tx=x*10+c-'0',c=getchar();\n\treturn x*neg;\n}\ninline void print(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tprint(abs(x));\n\t\treturn;\n\t}\n\tif(x<=9)\tputchar(x+'0');\n\telse{\n\t\tprint(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nint head[20005];\nstruct edge{\n\tint to,nxt,cap;\n} e[300005];\nint ecnt=1;\ninline void addedge(int u,int v,int f){\n\te[++ecnt].to=v;e[ecnt].cap=f;e[ecnt].nxt=head[u];head[u]=ecnt;\n}\nint dep[20005];\ninline bool bfs(int s,int t){\n\tqueue<int> q;\n\tmemset(dep,-1,sizeof(dep));\n\tq.push(s);dep[s]=0;\n\twhile(!q.empty()){\n\t\tint cur=q.front();q.pop();\n\t\tfor(int i=head[cur];i;i=e[i].nxt){\n\t\t\tint to=e[i].to;\n\t\t\tif(dep[to]==-1&&e[i].cap){\n\t\t\t\tdep[to]=dep[cur]+1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\tif(dep[t]!=-1)\treturn 1;\n\treturn 0;\n}\ninline int dfs(int x,int t,int f){\n\tif(x==t)\treturn f;\n\tint ret=0;\n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(dep[y]==dep[x]+1&&e[i].cap){\n\t\t\tint w=dfs(y,t,min(f-ret,e[i].cap));\n\t\t\te[i].cap-=w;\n\t\t\te[i^1].cap+=w;\n\t\t\tret+=w;\n\t\t\tif(ret==f)\treturn f;\n\t\t}\n\t}\n\tif(ret==0)\tdep[x]=-1;\n\treturn ret;\n}\ninline int Dinic(int s,int t){\n\tint tot=0;\n\twhile(bfs(s,t))\ttot+=dfs(s,t,0x3f3f3f3f);\n\treturn tot;\n}\nint n,m,d[105][105],id[105][105],mx=0,a[105],aid[1005],cnt=0,sum=0;\nsigned main(){\n\tn=read(),m=read();\n\tfz(i,1,n)\ta[i]=read(),mx=max(mx,a[i]);\n\tfz(i,1,n)\tfz(j,i,n)\td[i][j]=read(),id[i][j]=++cnt;\n\tfz(i,1,mx)\taid[i]=++cnt;\n\tfz(i,1,n){\n\t\tfz(j,i,n){\n\t\t\tif(i==j){\n\t\t\t\td[i][j]-=a[i];\n\t\t\t}\n\t\t\tif(d[i][j]>0)\taddedge(0,id[i][j],d[i][j]),addedge(id[i][j],0,0),sum+=d[i][j];\n\t\t\telse\t\t\taddedge(id[i][j],cnt+1,-d[i][j]),addedge(cnt+1,id[i][j],0);\n\t\t}\n\t}\n\tfz(i,1,mx){\n\t\tif(m>0){\n\t\t\taddedge(aid[i],cnt+1,m*i*i);\n\t\t\taddedge(cnt+1,aid[i],0);\n\t\t}\n\t}\n\tfz(i,1,n){\n\t\taddedge(id[i][i],aid[a[i]],0x3f3f3f3f);\n\t\taddedge(aid[a[i]],id[i][i],0);\n\t}\n\tfz(i,1,n){\n\t\tfz(j,i+1,n){\n\t\t\taddedge(id[i][j],id[i+1][j],0x3f3f3f3f);\n\t\t\taddedge(id[i+1][j],id[i][j],0);\n\t\t\taddedge(id[i][j],id[i][j-1],0x3f3f3f3f);\n\t\t\taddedge(id[i][j-1],id[i][j],0);\n\t\t}\n\t}\n\tcout<<sum-Dinic(0,cnt+1)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1580223230,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\n\u6743\u503c\u6709\u6b63\u6709\u8d1f,\u800c\u4e14\u91cd\u590d\u9009\u53ea\u7b97\u4e00\u6b21.\n\n\u9009\u4e86\u67d0\u4e9b\u4e1c\u897f\u5c31\u5f97\u9009\u5176\u4ed6\u4e1c\u897f.\n\n\u2193\n\n\u6700\u5927\u6743\u8fde\u901a\u5b50\u56fe.\n\n###### ~~\u4e8e\u662f\u6211\u60f3\u4e0d\u51fa\u6765\u600e\u4e48\u5efa\u56fe\u4e86~~\n\n## \u5efa\u56fe\u5206\u6790\n\n\u6700\u5927\u6743\u8fde\u901a\u5b50\u56fe\u7684\u5efa\u56fe\u65b9\u6cd5\u662f?\n\n###### \u8865\u5145\u8bf4\u660e:gnum(x,y)\u4e3a\u5f97\u5230[x,y]\u533a\u95f4\u7684\u7f16\u53f7,auto_add(from,to,flow)\u4e3a\u7f51\u7edc\u6d41\u52a0\u8fb9\n\n#### 1.\u6709\u7ea6\u675f\u7684\u76f8\u4e92\u8fde\u8fb9\n\n\u9009\u4e86\u5927\u533a\u95f4\u4e00\u5b9a\u8981\u9009\u5c0f\u533a\u95f4.\n\n##### Code\n\n```cpp\nfor(int i=1;i<=n;++i){\n\tfor(int j=i+1;j<=n;++j){\n    \tauto_add(gnum(i,j),gnum(i+1,j),inf);\n        auto_add(gnum(i,j),gnum(i,j-1),inf);\n    }\n}\n```\n\n#### 2.\u6700\u7ec8\u7b97\u5f0f\u52a0\u7684\u8fdeS,\u51cf\u7684\u8fdeT.\n\n\u533a\u95f4\u7684\u5f97\u5206\u60c5\u51b5\u554a,\u5982\u679c\u662f\u6b63\u7684\u5c31\u4eceS\u8fde\u8fc7\u6765,\u6700\u5927\u6d41\u4e3a\u4ed6\u7684\u5f97\u5206.\n\n\u8d1f\u7684\u7684\u8bdd\u5c31\u8fdeT,\u6700\u5927\u6d41\u4e3a\u4ed6\u7684\u5f97\u5206\u7684\u7edd\u5bf9\u503c\u554a.\n\n##### Code\n\n```cpp\nfor(int i=1;i<=n;++i){\n\tfor(int j=i;j<=n;++j){\n    \tif(gains[i][j]>0)\n        \tauto_add(S,gnum(i,j),gains[i][j]);\n        else\n        \tauto_add(gnum(i,j),T,-gains[i][j]);\n    }\n}\n//gains[i][j]\u4e3a[i,j]\u533a\u95f4\u7684\u5f97\u5206\n```\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2a\u4ee3\u4ef7\u6ca1\u6709\u641e\u4e0a,\u5c31\u662f\u4e70\u8fd9\u4e9b\u5bff\u53f8\u7684\u94b1.\n\n$mx^{2}+cx$\n\n\u6211\u4eec\u62c6\u5f00\u770b    $mx^{2}$   \u548c   $cx$\n\n#### \u5148\u5355\u72ec\u770b\u524d\u4e00\u9879\n\n\u524d\u4e00\u9879\u662f\u4e0ec,\u4e5f\u5c31\u662f\u8d2d\u4e70\u7684\u4e2a\u6570\u65e0\u5173\u7684,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5355\u72ec\u5efa\u4e00\u4e2a\u70b9,\u4e5f\u5c31\u662f\u8bf4\u5bf9\u6bcf\u4e00\u79cd\u7f16\u53f7\u5355\u72ec\u5efa\u4e00\u4e2a\u70b9,\u7531\u4e8e\u9009\u4e86\u5b83\u4f1a\u4ea7\u751f\u8d1f\u7684\u6536\u76ca,\u4e14\u4e3a$mx^{2}$,\u6240\u4ee5\u6211\u4eec\u5c31\u4ece\u8fd9\u4e2ax\u5411T\u8fde\u4e00\u4e2a$mx^{2}$\u7684\u8fb9.\n\n\u8fd9\u6837\u7684\u8bdd,\u6211\u4eec\u80fd\u5f97\u5230\u65b0\u7684\u4f9d\u8d56\u5173\u7cfb:\n\n#### \u9009\u4e86\u4e00\u4e2a\u5bff\u53f8\u5c31\u9700\u8981\u9009\u4ee3\u8868\u5b83\u7684\u7f16\u53f7\u7684\u90a3\u4e2a\u70b9.\n\n\u6211\u4eec\u5c31\u5411\u5b83\u7684\u7f16\u53f7\u90a3\u4e2a\u70b9\u8fde\u8fb9.\n\n#### \u518d\u770b\u770b\u540e\u4e00\u9879\n\n\u540e\u4e00\u9879\u53ef\u4ee5\u62c6\u6210\u8fd9\u6837  $c\u00d7(1\u00d7x)$\n\n\u90a3\u4e48\u6bcf\u9009\u4e00\u4e2a\u7f16\u53f7\u4e3ax\u7684\u5bff\u53f8\u5c31\u4f1a\u591ax\u7684\u6d88\u8d39,\u6211\u4eec\u5c31\u4ece\u5bff\u53f8\u90a3\u4e2a\u70b9\u8fde\u5411T,\u6700\u5927\u6d41\u91cf\u4e3a\u5b83\u7684\u7f16\u53f7\u7684\u4e00\u6761\u8fb9\u5c31\u597d\u4e86.\n\n## \u5efa\u6a21\u5206\u6790\n\n\u6700\u5927\u6743\u8fde\u901a\u5b50\u56fe.\n\n\u8981\u6c42\u67d0\u4e9b\u4e1c\u897f\u52a0\u8d77\u6765\u6700\u5927,\u5176\u4e2d\u6709\u4f9d\u8d56\u5173\u7cfb,\u5c31\u53ef\u4ee5\u4e86.\n\n\u672c\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u628a\u4e70\u5bff\u53f8\u7684\u6d88\u8d39\u8c03\u6574\u5230\u56fe\u4e2d.\n\n\u535a\u4e3b\u8fd9\u6837\u7684\u5de8\u5f31\u4e5f\u662f\u770b\u4e86\u9898\u89e3 $d^{a}_{lao}$ \u624d\u660e\u767d\u7684.\n\n## My Code For Reference\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Mmax = 1e7;\nconst int Nmax = 20000;\n//%%%\nconst int inf=20010509;\nint n,m,s,t,p1,p2,p3,to[Mmax<<1],net[Mmax<<1],tails=1,fr[Nmax];\nlong long mf[Mmax<<1];\nvoid add(int froms,int tos,int mfs){\n\t//\u624b\u52a8\u52a0\u8fb9 \n\tto[++tails]=tos;\n\tnet[tails]=fr[froms];\n\tmf[tails]=mfs;\n\tfr[froms]=tails;\n}\nvoid auto_add(int froms,int tos,int mfs){\n\t//\u81ea\u52a8\u5316\u52a0\u8fb9,\u9ad8\u7ea7\u4e0d?(\u6ed1\u7a3d \n\tadd(froms,tos,mfs);\n\tadd(tos,froms,0);\n}\nint cur[Nmax],dep[Nmax],ndo;\nbool vis[Nmax];\nbool BFS(){\n\t//Dinic\u554a,\u8fd9\u4e2a\u4e0d\u7528\u8bf4 \n\tqueue<int>ready;\n\tmemset(vis,0,sizeof(vis));\n\twhile(!ready.empty())ready.pop();\n\tdep[s]=0;vis[s]=1;\n\tready.push(s);\n\twhile(!ready.empty()){\n\t\tndo=ready.front();\n\t\tready.pop();\n\t\tfor(int lzh=fr[ndo];lzh;lzh=net[lzh]){\n\t\t\tif(!vis[to[lzh]] && mf[lzh]){\n\t\t\t\tdep[to[lzh]]=dep[ndo]+1;\n\t\t\t\tvis[to[lzh]]=1;\n\t\t\t\tready.push(to[lzh]);\n\t\t\t\tif(to[lzh]==t)return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn vis[t];\n}\nlong long DFS(int start,long long nf){\n\t//Dinic\u554a,\u8fd9\u4e2a\u4e5f\u4e0d\u7528\u8bf4 \n\tif(start==t || nf==0)\treturn nf;\n\tlong long allflow=0,f;\n\tfor(int &lzh=cur[start];lzh;lzh=net[lzh]){\n\t\tif(dep[to[lzh]]==dep[start]+1 && ( f = DFS(to[lzh],min(mf[lzh],nf)) )>0){\n\t\t\tmf[lzh]-=f;\n\t\t\tmf[lzh^1]+=f;\n\t\t\tallflow+=f;\n\t\t\tif( (nf-=f) ==0 )break;\n\t\t}\n\t}\n\treturn allflow;\n}\nlong long Dinic(){\n\t//Dinic\u554a,\u8fd9\u4e2a\u4e0d\u7528\u8bf4 \n\tlong long ans=0;\n\twhile(BFS()){\n\t\tfor(int i=0;i<=t;++i)cur[i]=fr[i];\n\t\tans+=DFS(s,20010509);\n\t}\n\treturn ans;\n}\nint id[1001],gains,total;\nbool ads[1001];\nint gnum(int fromd,int tod){\n\t//1000\u79cd\u83dc\u54c1\u7f16\u53f7\u653e\u524d\u9762,\u5269\u4e0b\u7684\u653e\u540e\u9762. \n\treturn (fromd-1)*n+tod+1000;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\t//t \u662f\u6700\u5927\u7684\u7f16\u53f7 \n\ts=0;t=n*n+1001;\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&id[i]);\n\t\tif(m && !ads[id[i]]){\n\t\t\t//\u9632\u6b62\u91cd\u8fb9 \n\t\t\tads[id[i]]=1;\n\t\t\t//\u53ea\u8981\u6709\u9009\u8fd9\u4e2a\u7f16\u53f7\u7684\u5c31\u4f1a\u4ea7\u751fid[i]*id[i]\u7684\u4ee3\u4ef7. \n\t\t\tauto_add(id[i],t,id[i]*id[i]);\n\t\t\t// id[i]*id[i]*m, m\u4e3a1,\u65e0\u6240\u8c13\u4e86\n\t\t}\n\t\t//\u9009\u4e00\u4e2a\u5b83\u5c31\u4f1a\u89e6\u53d1\u5b83\u5bf9\u5e94\u7684\u7f16\u53f7\u7684\u6d88\u8d39. \n\t\tauto_add(gnum(i,i),id[i],inf);\n\t\t//\u9009\u4e00\u4e2a\u5b83\u5c31\u8981\u4ed8\u51faid[i]\u7684\u4ee3\u4ef7. \n\t\tauto_add(gnum(i,i),t,id[i]);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tfor(int j=i;j<=n;++j){\n\t\t\tscanf(\"%d\",&gains);\t\n\t\t\t//\u6b63\u6743\u52a0\u4e0a\t\n\t\t\ttotal+=(gains>0?gains:0);\n\t\t\t//\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u578b \n\t\t\tif(gains>0)\tauto_add(s,gnum(i,j),gains);\n\t\t\telse\t\tauto_add(gnum(i,j),t,-gains);\n\t\t\t//\u9009\u4e86\u5927\u533a\u95f4\u4e00\u5b9a\u9009\u5c0f\u533a\u95f4,\u9996\u5148[i,j]\u5f97\u662f\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e1\u7684\u533a\u95f4\n\t\t\tif(i!=j)\tauto_add(gnum(i,j),gnum(i+1,j),inf);\n\t\t\tif(i!=j)\tauto_add(gnum(i,j),gnum(i,j-1),inf);\n\t\t}\n\t}\n\tprintf(\"%lld\",total-Dinic());\n\treturn 0;\n}\n```",
        "postTime": 1521794247,
        "uid": 43931,
        "name": "SofanHe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "[\u9898](https://www.luogu.com.cn/problem/P3749)  \n\u5148\u4e0d\u8003\u8651 $mx^2+c$\u3002\n\n\u8fd9\u9898\u8bfb\u9898\u6709\u4e9b\u56f0\u96be\uff0c\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e\u5c31\u662f\u5728\u4e00\u4e9b $d$ \u4e2d\u8ba9\u4f60\u9009\u53d6\u4e00\u4e9b\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\"\u9009\u4e86 a \u5219\u5fc5\u9009 b\"\u7684\u9650\u5236\uff0c\u6bcf\u4e2a $d$ \u90fd\u53ea\u6709**\u88ab\u9009\u6216\u4e0d\u88ab\u9009**\u4e24\u79cd\u72b6\u6001\uff0c\u800c\u4e0d\u662f\u53ef\u4ee5\u88ab\u591a\u6b21\u9009\u62e9\uff0c\u540e\u9762\u7684\u82b1\u8d39\u4e5f\u662f\u5982\u6b64\uff0c\u8fd9\u57fa\u672c\u53ef\u4ee5\u6392\u9664 dp \u7684\u53ef\u80fd\u6027\uff0c\u8fd9\u9898\u5c31\u662f\u4e2a\u7f51\u7edc\u6d41\u9898\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $d_{i,j}$ \u5efa\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5411\u5b83\u7684\u6240\u6709\u5b50\u533a\u95f4\u8fde\u8fb9\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u5c31\u662f\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u578b\u3002  \n\u4f46\u8fd9\u6837\u8fb9\u6570\u592a\u591a\uff0c\u8003\u8651\u4f18\u5316\uff0c$[i,j]$ \u53ea\u8fde\u5230 $[i+1,j]$ \u548c $[i,j-1]$ \u5c31\u53ef\u4ee5\u8fbe\u6210\u76ee\u7684\u4e86\u3002\n\n\u518d\u8003\u8651\u52a0\u5165 $mx^2+c$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4ee3\u53f7\u5355\u72ec\u5efa\u4e00\u4e2a\u70b9\uff0c\u6ce8\u610f\u5230 $mx^2$ \u548c**\u8fd9\u4e2a\u4ee3\u53f7\u9009\u4e86\u51e0\u79cd**\u662f\u65e0\u5173\u7684\uff0c\u53ea\u548c**\u8fd9\u4e2a\u4ee3\u53f7\u9009\u6216\u6ca1\u9009**\u6709\u5173\u3002\u5982\u679c\u9009\u62e9\u4e86\u8fd9\u4e2a\u4ee3\u53f7\u7684\u5bff\u53f8\u5219\u5fc5\u9009\u8fd9\u4e2a\u4ee3\u53f7\u5bf9\u5e94\u7684\u70b9\uff0c\u8fd9\u662f\u4e00\u4e2a\u9650\u5236\u3002  \n\u7136\u540e\u5c31\u76f8\u5f53\u4e8e\u8ba9\u8fd9\u4e2a\u70b9\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u578b\u4e2d\u4e00\u4e2a\u6536\u76ca\u4e3a $-mx^2$ \u7684\u70b9\u5373\u53ef\u3002\n\n\u8fd8\u6709 $cx$\uff0c\u8fd9\u4e2a\u5176\u5b9e\u6ca1\u5565\u7528\uff0c\u6bcf\u4e2a\u5bff\u53f8\u5355\u72ec\u5206\u5f00\u7b97\u5c31\u53ef\u4ee5\u4e86\uff0c\u76f4\u63a5\u51cf\u5230\u5b83\u7684\u6536\u76ca\u91cc\u9762\u5c31\u884c\u4e86\uff0c\u4f46\u6211\u4e3a\u65b9\u4fbf\u8d77\u89c1\u5efa\u4e86\u4e24\u6761\u8fb9\u3002\n\n\u5269\u4e0b\u5c31\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e86\u3002  \n**\u4e0b\u56fe\u4e2d\u7701\u7565\u4e86\u4ee3\u8868\u533a\u95f4\u7684\u70b9\u548c\u5355\u70b9\u6240\u8fde\u7684\u8fb9**  \n\uff08\u4e5f\u5c31\u662f `1-3,1-2,2-3,1,2,3` \u7684 $d$ \u4ea7\u751f\u7684\u8fb9\uff09  \n\n![P3749.PNG](https://i.loli.net/2020/08/08/ekPpQ9ORMj2nVgl.png)  \n\u56fe\u4e2d\u8ba4\u4e3a 1 \u548c 2 \u662f\u4ee3\u53f7 1\uff0c3 \u662f\u4ee3\u53f7 2\u3002\n\n\u8d34\u4e00\u4e0b\u4ee3\u7801\uff1a  \n```cpp\n#include <queue>\nusing namespace std;\ntypedef long long LL;\nconst LL INF = 0x3f3f3f3f3f3f3f3f;\nconst LL N = 12515,M = 70005;\n\n// \u4ee5\u4e0b\u662f\u7f51\u7edc\u6700\u5927\u6d41 dinic \u7b97\u6cd5\u7684\u6a21\u677f\nLL ec = 1,to[M << 1],nxt[M << 1],hed[N],cur[N],cap[M << 1];\nvoid add_edge(LL f,LL t,LL c){\n\t++ ec; to[ec] = t; nxt[ec] = hed[f]; hed[f] = ec; cap[ec] = c;\n\t++ ec; to[ec] = f; nxt[ec] = hed[t]; hed[t] = ec; cap[ec] = 0;\n}\n\nqueue <LL> q; LL lev[N];\nvoid bfs(LL s){\n\twhile(!q.empty()) q.pop();\n\tmemset(lev,0,sizeof(lev)); lev[s] = 1; q.push(s);\n\twhile(!q.empty()){\n\t\tLL u = q.front(); q.pop();\n\t\tfor(LL i = hed[u];i;i = nxt[i]){\n\t\t\tLL v = to[i];\n\t\t\tif(cap[i] && !lev[v]){\n\t\t\t\tlev[v] = lev[u] + 1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\n\nLL dfs(LL u,LL t,LL f){\n\tif(u == t) return f;\n\tfor(LL i = cur[u];i;i = nxt[i]){\n\t\tLL v = to[i]; cur[u] = i;\n\t\tif(cap[i] && lev[v] == lev[u] + 1){\n\t\t\tLL tmp = dfs(v,t,min(f,cap[i]));\n\t\t\tif(tmp){\n\t\t\t\tcap[i] -= tmp;\n\t\t\t\tcap[i ^ 1] += tmp;\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nLL mxf;\nvoid dinic(LL s,LL t){\n\tLL f;\n\twhile(1){\n\t\tbfs(s); if(!lev[t]) return;\n\t\tfor(LL i = 1;i <= t;i ++) cur[i] = hed[i];\n\t\twhile(1){\n\t\t\tf = dfs(s,t,INF);\n\t\t\tif(!f) break;\n\t\t\tmxf += f;\n\t\t}\n\t}\n}\n// \u4ee5\u4e0a\u662f \u6a21\u677f\n\nLL n;\nLL id(LL x,LL y){\n\treturn (x - 1) * n + y;\n}// \u533a\u95f4 [x,y] \u5bf9\u5e94\u7684\u70b9\n\nint main(){\n\tLL m,tp,sum = 0,S,T;\n\tcin >> n >> m;\n\tS = id(n,n) + 1001; T = S + 1;\n\tfor(LL i = 1;i <= n;i ++){\n\t\tcin >> tp;\n\t\tadd_edge(id(i,i),id(n,n) + tp,INF);\n\t\tadd_edge(id(i,i),T,tp);\n\t}\n\tfor(LL i = 1;i <= 1000;i ++) add_edge(id(n,n) + i,T,m * i * i);\n    // \u8fd9\u91cc\u662f\u4e3a\u4e86\u65b9\u4fbf\uff0cid(n,n) + x \u662f\u4ee3\u53f7 x \u5bf9\u5e94\u7684\u70b9\n\tfor(LL i = 1;i <= n;i ++){\n\t\tfor(LL j = i;j <= n;j ++){\n\t\t\tcin >> tp;\n\t\t\tif(tp > 0) sum += tp,add_edge(S,id(i,j),tp);\n\t\t\telse add_edge(id(i,j),T,-tp);\n\t\t\tif(j != i){\n\t\t\t\tadd_edge(id(i,j),id(i + 1,j),INF);\n\t\t\t\tadd_edge(id(i,j),id(i,j - 1),INF);\n\t\t\t}\n\t\t}\n\t}\n\tdinic(S,T);\n\tcout << sum - mxf << '\\n';\n\treturn 0;\n}\n```",
        "postTime": 1596901722,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "\u5f52\u7eb3\u4e0b\u9898\u610f\uff1a\n\n1. \u6709\u82e5\u5e72\u4e2a\u8d21\u732e\u503c $d_{i,j}$\uff0c\u6bcf\u4e2a\u8d21\u732e\u503c\u6700\u591a\u53ea\u80fd\u53d6\u4e00\u6b21\uff1b\n2. \u5982\u679c\u53d6\u4e86 $d_{i,j}$\uff0c\u5219\u4e00\u5b9a\u4f1a\u53d6 $d_{i+1,j}$ \u548c $d_{i,j-1}$\uff08\u5982\u679c\u5b58\u5728\uff09\uff1b\n3. \u53d6\u4e00\u4e2a\u5bff\u53f8\uff08\u5373\u53d6\u4e86 $d_{i,i}$\uff09\u4f1a\u4ea7\u751f $a_i$ \u7684\u5f00\u9500\uff08\u53ef\u4ee5\u8ba4\u4e3a\u5b9e\u9645\u6536\u76ca\u4e3a $d_{i,i}-a_i$\uff09\uff1b\n4. \u5982\u679c**\u5b58\u5728**\u4e00\u4e2a\u79cd\u7c7b\u4e3a $i$ \u7684\u5bff\u53f8\u88ab\u53d6\uff0c\u5219\u4ea7\u751f $m\\times i^2$ \u7684\u5f00\u9500\u3002\n\n\u7531\u300c\u53d6\u4e00\u4e2a\u70b9\u5fc5\u53d6\u5176\u540e\u7ee7\u300d\u548c\u300c\u8d21\u732e\u53ea\u7b97\u4e00\u6b21\u300d\u7684\u7279\u70b9\u53ef\u77e5\uff0c\u672c\u9898\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a [\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe](https://studyingfather.com/archives/2771) \u7684\u6a21\u578b\u3002\n\n\u5982\u4f55\u5efa\u6a21\uff1f\n\n\u5c06\u6240\u6709\u7684\u70b9\u5206\u4e3a\u4e24\u90e8\u5206\uff08\u70b9\u6743\u975e\u8d1f\u548c\u70b9\u6743\u4e3a\u8d1f\uff09\uff0c\u5bf9\u4e8e\u6240\u6709\u70b9\u6743\u975e\u8d1f\u7684\u70b9\uff0c\u4ece\u6e90\u70b9\u5411\u8be5\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a\u8be5\u70b9\u70b9\u6743\uff1b\u800c\u5bf9\u4e8e\u6240\u6709\u70b9\u6743\u4e3a\u8d1f\u7684\u70b9\uff0c\u4ece\u8be5\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a\u8be5\u70b9\u70b9\u6743\u76f8\u53cd\u6570\u3002\n\n\u5bf9\u4e8e\u539f\u56fe\u4e0a\u5b58\u5728\u7684\u4f9d\u8d56\u5173\u7cfb\u8fb9\uff08\u5305\u62ec\u4e24\u79cd\uff0c\u7b2c\u4e00\u79cd\u662f $d_{i,j}$ \u8fde\u5411 $d_{i+1,j}$ \u548c $d_{i,j-1}$ \u7684\u8fb9\uff0c\u7b2c\u4e8c\u79cd\u662f $d_{i,i}$ \u8fde\u5411\u70b9\u6743\u4e3a $-m \\times a_i^2$ \u7684\u70b9\u7684\u8fb9\uff09\uff0c\u6211\u4eec\u7ee7\u7eed\u4fdd\u7559\uff0c\u8fd9\u4e9b\u8fb9\u7684\u6d41\u91cf\u4e3a $+\\infty$\u3002\n\n\u5219\u7b54\u6848\u4e3a\u6240\u6709\u6b63\u6743\u70b9\u7684\u70b9\u6743\u548c\u51cf\u53bb\u539f\u56fe\u7684\u6700\u5c0f\u5272\u3002\n\n\u8be6\u7ec6\u6b63\u786e\u6027\u8bc1\u660e\u4e0a\u9762\u7684\u94fe\u63a5\u5df2\u7ecf\u7ed9\u51fa\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n```cpp\n// Problem : P3749 [\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\n// Contest : Luogu\n// URL : https://www.luogu.com.cn/problem/P3749\n// Memory Limit : 512 MB\n// Time Limit : 1000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\n#include <cstring>\n#include <iostream>\n#include <queue>\n#define INF 0x3f3f3f3f\nusing namespace std;\nstruct edge\n{\n int v,w,next;\n}e[1000005];\nint head[10005],cur[10005],dep[10005],vis[10005],cnt=1,s,t;\nint a[105],d[105][105],id[105][105],cntp;\nvoid addedge(int u,int v,int w)\n{\n e[++cnt].v=v;\n e[cnt].w=w;\n e[cnt].next=head[u];\n head[u]=cnt;\n}\nbool bfs()\n{\n queue<int> q;\n memset(dep,INF,sizeof(dep));\n memset(vis,0,sizeof(vis));\n memcpy(cur,head,sizeof(head));\n dep[s]=0;\n vis[s]=1;\n q.push(s);\n while(!q.empty())\n {\n  int p=q.front();\n  q.pop();\n  vis[p]=0;\n  for(int i=head[p];i;i=e[i].next)\n   if(dep[e[i].v]>dep[p]+1&&e[i].w)\n   {\n    dep[e[i].v]=dep[p]+1;\n    if(!vis[e[i].v])\n    {\n     vis[e[i].v]=1;\n     q.push(e[i].v);\n    }\n   }\n }\n if(dep[t]==INF)return 0;\n return 1;\n}\nint dfs(int p,int w)\n{\n if(p==t)return w;\n int used=0;\n for(int i=cur[p];i;i=e[i].next)\n {\n  cur[p]=i;\n  if(dep[e[i].v]==dep[p]+1&&e[i].w)\n  {\n   int flow=dfs(e[i].v,min(w-used,e[i].w));\n   if(flow)\n   {\n    used+=flow;\n    e[i].w-=flow;\n    e[i^1].w+=flow;\n    if(used==w)break;\n   }\n  }\n }\n return used;\n}\nint main()\n{\n ios::sync_with_stdio(false);\n int n,m,ans=0;\n cin>>n>>m;\n for(int i=1;i<=n;i++)\n  cin>>a[i];\n for(int i=1;i<=n;i++)\n  for(int j=i;j<=n;j++)\n   cin>>d[i][j],id[i][j]=++cntp;\n s=cntp+1000+1,t=s+1;\n for(int i=1;i<=n;i++)\n  for(int j=i;j<=n;j++)\n  {\n   int u=id[i][j];\n   if(i==j)\n   {\n    d[i][j]-=a[i];\n    addedge(u,cntp+a[i],INF),addedge(cntp+a[i],u,0);\n   }\n   int v1=id[i+1][j],v2=id[i][j-1];\n   if(d[i][j]>0)\n    addedge(s,u,d[i][j]),addedge(u,s,0),ans+=d[i][j];\n   else\n    addedge(u,t,-d[i][j]),addedge(t,u,0);\n   if(i==j)continue;\n   addedge(u,v1,INF),addedge(v1,u,0);\n   addedge(u,v2,INF),addedge(v2,u,0);\n  }\n for(int i=1;i<=1000;i++)\n  addedge(cntp+i,t,m*i*i),addedge(t,cntp+i,0);\n while(bfs())\n  ans-=dfs(s,INF);\n cout<<ans<<endl;\n return 0;\n}\n```",
        "postTime": 1594644727,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "\u53ef\u80fd\u53ea\u6709\u6211\u8fd9\u4e2a\u849f\u84bbdinic\u4e0d\u52a0\u4f18\u5316\u4e86\u5427\u2026\u2026\n\n~~(AC\u7387\u4fef\u51b290\u5ea6)(\u5927\u96fe)~~\n\n\u4e0b\u9762\u662f\u5173\u4e8e\u8fd9\u9053\u9898\u7684\u9898\u89e3\uff0c\u9996\u5148\u6211\u4eec\u4e00\u770b\u8fd9\u9053\u9898\u662f\u4e2a\u5e94\u7528\u9898\uff0c\u800c\u4e14\u8fd9\u9053\u9898\u662f\u4e2a\u8bed\u6587\u795e\u9898\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0cn\u53ea\u6709100\uff01\n\n\u6839\u636e~~\u201c\u5927\u4e86\u4e09\u5206\uff0c\u5c0f\u7f51\u7edc\u6d41\uff0c\u4e0d\u5927\u4e0d\u5c0f\uff0c\u659c\u7387\u4f18\u5316\u201d~~\u53ef\u77e5\uff0c\u8fd9\u9053\u9898\u662f\u4e2a\u7f51\u7edc\u6d41\u9898\n\n\u90a3\u4e48\u6211\u4eec\u9996\u5148\u5148\u628a\u9898\u76ee\u8bfb\u4e00\u904d\uff0c~~\u7136\u540e\u53d1\u73b0\u6211\u4eec\u5e76\u6ca1\u6709\u8bfb\u61c2~~\uff0c\u7ecf\u8fc7\u7ec6\u81f4\u7684\u89c2\u5bdf\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u7684\u9650\u5236\u867d\u7136\u6742\u4e03\u6742\u516b\uff0c\u4f46\u662f\u5462\uff0c\u90fd\u662f\u5173\u4e8e\u4ee3\u4ef7\u8ba1\u7b97\u7684\u65b9\u9762\uff0c\u53ef\u4ee5\u6682\u4e14\u4e0d\u8bfb\uff0c\u4e3b\u8981\u7814\u7a76\u51b3\u7b56\uff0c\u6700\u540e\u53d1\u73b0\u53ea\u6709\u4e00\u79cd\u51b3\u7b56\u2014\u2014\u9009\u4e2d\u4e00\u4e2a\u533a\u95f4\uff0c\u7136\u540e\u5c31\u6ca1\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u77e5\u9053\u4e86\u8fd9\u4e2a\u4ee5\u540e\u518d\u53bb\u8bfb\u4ee3\u4ef7\u8ba1\u7b97\u516c\u5f0f\n\n\u6211\u4eec\u53d1\u73b0\u6839\u636e\u9898\u76ee\u7684\u4ee3\u4ef7\u8ba1\u7b97\u65b9\u6848\uff0c\u603b\u6536\u76ca=\n\nsigma(cost(\u6240\u6709\u9009\u4e2d\u7684\u533a\u95f4))-sigma(\u6bcf\u4e2a\u4ee3\u53f7\u7684\u201c\u5f00\u8352\u201d\u4ee3\u4ef7)-sigma(\u6bcf\u4e2a\u4ee3\u53f7\u7684\u4f7f\u7528\u4ee3\u4ef7)\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u4e86\uff0c\u5982\u679c\u6211\u4eec\u628a\u9898\u76ee\u8f93\u5165\u7684\u6570\u7ec4\u5217\u6210\u77e9\u9635\uff0c\u5927\u6982\u957f\u8fd9\u6837\n\nX X X X X X\n\n0 X X X X X\n\n0 0 X X X X\n\n0 0 0 X X X\n\n0 0 0 0 X X\n\n0 0 0 0 0 X\n\n\u7136\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u6b21\u53d6\u533a\u95f4\uff0c\u90fd\u662f\u53d6\u7684\u4e00\u4e2a\u65b9\u9635\u91cc\u7684\u6570\uff0c\u5e76\u4e14\uff0c\u8fd9\u4e2a\u65b9\u9635\u5fc5\u987b\u5173\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u5bf9\u79f0\uff0c\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u5982\u679c\u4ee4(x,y)\u4e3a\u8fd9\u4e2a\u65b9\u9635\u53f3\u4e0a\u65b9\u7684\u70b9\uff0c\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u65b9\u9635\u552f\u4e00\u786e\u5b9a\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u9009\u4e86\u70b9(x,y)\u4e5f\u5c31\u662f\u4e00\u5b9a\u8981\u9009(x,y)\u4e0b\u9762\u7684\u65b9\u9635\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u5b9a\u8981\u9009\u5b83\u5bf9\u5e94\u7684\u65b9\u9635\u91cc\u7684\u5176\u4ed6\u70b9\u3002\n\n\u9009\u4e00\u4e9b\u70b9\u5fc5\u987b\u8981\u9009\u5176\u4ed6\u70b9\u2026\u2026\u6bcf\u4e2a\u70b9\u6700\u591a\u9009\u4e00\u6b21\u2026\u2026\u6709\u70b9\u6743\u2026\u2026\u6c42\u6700\u5927\u70b9\u6743\u548c\u2026\u2026\uff1f\n\n\u53ea\u8981\u4f60\u77e5\u9053\u6709\u4e2a\u4e1c\u897f\u53eb\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe(\u6211\u76f8\u4fe1\u4f46\u51e1\u8bb2\u7f51\u7edc\u6d41\u5efa\u56fe\u5c31\u5f97\u8bb2\u8fd9\u4e2a)\n\u90a3\u4e48\u4e0a\u9762\u7684\u5c31\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u6807\u51c6\u5b9a\u4e49\u3002~~\uff08\u9ebb\u9ebb\u6211\u4f1a\u505a\u4e86\uff01\uff09~~\n\n\u4e14\u6162\uff0c\u8fd8\u6709\u4e24\u4e2a\u95ee\u9898\u8981\u89e3\u51b3\uff1a\n\n1.\u76ee\u524d\u7684\u9650\u5236\u6761\u4ef6\u8fd8\u662f n^4\u7684\uff0c\u65e0\u6cd5\u5fcd\u53d7\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u9009(x,y)\u5176\u5b9e\u5c31\u662f\u5fc5\u9009(x+1,y),\u548c(x,y-1)\u800c\u4e14\u8fd9\u4e2a\u6027\u8d28\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u975e\u5bf9\u89d2\u7ebf\u70b9\u6052\u6210\u7acb\uff0c\u4e8e\u662f\u5462\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u6709\u70b9\u9012\u5f52\u610f\u5473\u7684\u8fde\u8fb9\uff0c\u603b\u7684\u9650\u5236\u6761\u4ef6\u5c31\u88ab\u538b\u7f29\u5230\u4e86n^2\u7ea7\u522b\n\n2.\u6211\u4eec\u53d1\u73b0\u5f00\u8352\u8d39\u6839\u672c\u6ca1\u7ba1\uff0c\u6bcf\u4e2a\u5bff\u53f8\u7684\u4ef7\u94b1\uff0c\u4e00\u79cd\u53ea\u8ba1\u7b97\u4e00\u6b21\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8ba9cost\\[i]\\[i]\u51cf\u53bb\u5bf9\u5e94\u7684\u4ee3\u53f7\u5373\u53ef\uff0c\u4f46\u662f\u5f00\u8352\u8d39\u5462\uff1f\n\u8fd8\u597d\u6211\u840c\u5df2\u7ecf\u63a8\u51fa\u4e86\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u7684\u6a21\u578b\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u8fd9\u4e2a\u5f00\u8352\u8d39\u5d4c\u8fdb\u53bb\uff0c\u6bcf\u79cd\u4ee3\u53f7\u7684\u5f00\u8352\u8d39\u4ec5\u8ba1\u7b97\u4e00\u6b21\uff0c\u6240\u4ee5\uff0c\u65b0\u5efa\u4e00\u5806\u5f00\u8352\u8d39\u7684\u8d1f\u6743\u8282\u70b9\uff0c\u6bcf\u4e2a\u5bf9\u89d2\u7ebf\u70b9\u8fde\u4e00\u4e2a\u4f9d\u9644\u5173\u7cfb\u5373\u53ef\uff0c\u5c31\u662f\u201c\u9009\u8fd9\u4e2a\u70b9\u5fc5\u987b\u9009\u5f00\u8352\u8d39\u8282\u70b9\u201d\u7684\u9650\u5236\u5173\u7cfb\n\n### \u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\n\n\u5e94\u8be5\u6ca1\u4eba\u62ff\u8fd9\u9053\u9898\u7ec3\u624b\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5427~~(\u6bd4\u5982\u6211\uff1f\u03b5=\u03b5=\u03b5=\u250f(\u309c\u30ed\u309c;)\u251b\u9003)~~\n\u8fd8\u662f\u8bb2\u4e00\u4e0b\u597d\u4e86\u5462\n\n\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u6a21\u578b\n\n1.\u9009\u4e00\u4e9b\u70b9\u5fc5\u987b\u8981\u9009\u5176\u4ed6\u70b9\n2.\u6bcf\u4e2a\u70b9\u6700\u591a\u9009\u4e00\u6b21\n3.\u6709\u70b9\u6743\n4.\u6c42\u6700\u5927\u70b9\u6743\u548c\n\n\u55ef\u5c31\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u8003\u8651\u5efa\u7acb\u6700\u5c0f\u5272\u6a21\u578b\u5904\u7406\u8fd9\u7c7b\u95ee\u9898\n\n\u6211\u4eec\u8bbe\u5272\u5b8c\u7684\u56fe\u91cc\uff0cA\u548cS\u65e0\u8fde\u8fb9\uff0c\u8868\u793a\u4e0d\u9009\u62e9A,A\u548cT\u65e0\u8fde\u8fb9\uff0c\u8868\u793a\u9009\u62e9A\n\n\u90a3\u4e48\u6211\u4eec\u5148\u8d2a\u5fc3\u7684\u62ff\u6240\u6709\u6b63\u6743\u70b9\uff0c\u4e4b\u540e\u518d\u507f\u8fd8\u4ee3\u4ef7\n\n\u90a3\u4e48\u663e\u7136\u7684\uff0c\u6b63\u6743\u70b9\u5411S\u8fde\u8fb9\uff0c\u8d1f\u6743\u70b9\u5411T\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a\u70b9\u6743\u7684\u7edd\u5bf9\u503c\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5272\u6389S\u8fb9\uff0c\u8868\u793a\u5931\u53bb\u4e86\u4e00\u4e2a\u6b63\u6743\u8fb9\uff0c\u5272\u6389T\u8fb9\u8868\u793a\u52a0\u8fdb\u6765\u4e86\u4e00\u4e2a\u8d1f\u6743\u8fb9\n\n\u90a3\u4e48\u5bf9\u4e8e\u9009A\u5fc5\u9009B\u7684\u9650\u5236\u5173\u7cfb\uff0c\u6211\u4eec\u4eceA->B\u8fde\u4e00\u6761\u6743\u503c\u4e3a+\u221e\u7684\u8fb9\u8fd9\u6837\u7684\u8bdd\uff0c\u5982\u679c\nB\u6ca1\u88ab\u5272\u6389\uff0cA\u5c31\u5fc5\u987b\u88ab\u5272\u6389\uff0c\u4f46\u662f\u53cd\u5411\u5c31\u6ca1\u6709\u7ea6\u675f,\u6240\u4ee5\u6ee1\u8db3\u5355\u5411\u7684\u9650\u5236\u5173\u7cfb\n\n\u7136\u540e\u6839\u636e\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406(\u6700\u5927\u6d41==\u6700\u5c0f\u5272\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u662f\u7b2c\u4e00\u904d\u8f93\u6c34\uff0c\u7b2c\u4e8c\u904d\u8f93502\uff0c\u8f93\u4e86\u591a\u5c11\u6c34\u5c31\u5f97\u8f93\u7b49\u91cf\u7684502\u624d\u80fd\u5835\u4f4f\u6c34\u7ba1)\uff0c\u7b54\u6848\u4e3a\u6240\u6709\u6b63\u6743\u548c-\u6700\u5c0f\u5272==\u6240\u6709\u6b63\u6743\u548c-\u6700\u5927\u6d41\n\n\u4e0a\u4ee3\u7801~\n\n```C\n\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\nstruct data{int v;int nxt;ll cot;}edge[400010];\nint alist[20010];int cnt=1;queue <int> q;\ninline void add(int u,int v,ll cot)\n{\n    edge[++cnt].v=v;edge[cnt].nxt=alist[u];alist[u]=cnt;edge[cnt].cot=cot;\n    edge[++cnt].v=u;edge[cnt].nxt=alist[v];alist[v]=cnt;edge[cnt].cot=0;\n}\nint n;int m;int s;int t;int dep[20010];int ctt;bool book[20010];\ninline ll dfs(int x,ll lim)\n{\n    if(x==t){return lim;}\n    int nxt=alist[x];ll nowflow=0;\n    while(nxt)\n    {\n        if(lim==0)return nowflow;//\u4e24\u4e2a\u4f18\u5316\u90fd\u5f97\u52a0\u4e0a\uff0c\u4e0d\u7136\u7b49\u7740T\u98de\u5427~ \n        int v=edge[nxt].v;ll cot=edge[nxt].cot;\n        if(cot!=0&&dep[v]==dep[x]+1)\n        {\n            ll del=dfs(v,min(cot,lim));\n            if(del!=0)\n            {\n                edge[nxt].cot-=del;edge[nxt^1].cot+=del;\n                lim-=del;nowflow+=del;\n            }\n        }\n        nxt=edge[nxt].nxt;\n    }\n    if(nowflow==0){dep[x]=0x3f3f3f3f;}//\u7b2c\u4e8c\u4f18\u5316 \n\treturn nowflow;\n}\ninline bool bfs()//\u6ca1\u5565\u597d\u8bf4\u7684\u677f\u5b50BFS \n{\n    for(int i=1;i<=ctt;i++){book[i]=false;dep[i]=0x3f3f3f3f;}\n    dep[s]=0;book[s]=true;q.push(s);\n    while(!q.empty())\n    {\n        int now=q.front();q.pop();\n        int nxt=alist[now];\n        while(nxt)\n        {\n            int v=edge[nxt].v;ll cot=edge[nxt].cot;\n            if(book[v]==false&&cot!=0)\n            {book[v]=true;dep[v]=dep[now]+1;q.push(v);}\n            nxt=edge[nxt].nxt;\n        }\n    }return book[t];\n}\nll d[110][110];int tr[110][110];ll tp[110];ll flow;\nint numtp[110]; \nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){scanf(\"%lld\",&tp[i]);}\n    for(int i=1;i<=n;i++){for(int j=i;j<=n;j++){scanf(\"%lld\",&d[i][j]);}}\n    for(int i=1;i<=n;i++){for(int j=i;j<=n;j++){tr[i][j]=++ctt;}}//\u66b4\u529b\u67d3\u8272 \n    s=++ctt;t=++ctt;\n    for(int i=1;i<=n;i++){d[i][i]-=tp[i];}//\u51cf\u53bb\u82b1\u8d39 \n    for(int i=1;i<=n;i++)\n    {\n        for(int j=i;j<=n;j++)\n        {\n            if(d[i][j]>0){flow+=d[i][j];add(s,tr[i][j],d[i][j]);}//\u6b63\u6743\u70b9 \n            if(d[i][j]<0){add(tr[i][j],t,-d[i][j]);}//\u8d1f\u6743\u70b9 \n        }\n    }\n    for(int i=1;i<=n-1;i++)\n    {\n        for(int j=i+1;j<=n;j++)\n        {\n            add(tr[i][j],tr[i][j-1],0x7f7f7f7f);//\u538b\u7f29\u540e\u7684\u9650\u5236\u6761\u4ef6 \n            add(tr[i][j],tr[i+1][j],0x7f7f7f7f);\n        }\n    }\n    if(m==1)//\u5982\u679c\u6709\u5f00\u8352\u8d39 \n    {\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=i-1;j++)\n            {if(tp[i]==tp[j]){numtp[i]=numtp[j];goto ed;}}\n            numtp[i]=++ctt;add(ctt,t,tp[i]*tp[i]);ed:;//\u66b4\u529b\u627e\u91cd\u590d\u7684 \n        }\n        for(int i=1;i<=n;i++){add(tr[i][i],numtp[i],0x7f7f7f7f);}//\u7136\u540e\u8fde\u4e0a\u5f00\u8352\u8d39 \n    }\n    while(bfs()){while(1){ll p=dfs(s,0x7f7f7f7f);if(p==0)break;else flow-=p;}}//DINIC \n    flow=max(flow,0LL);printf(\"%lld\",flow);return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n\n```",
        "postTime": 1518353627,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "### \u95ee\u9898\u63cf\u8ff0\n\nKiana \u6700\u8fd1\u559c\u6b22\u5230\u4e00\u5bb6\u975e\u5e38\u7f8e\u5473\u7684\u5bff\u53f8\u9910\u5385\u7528\u9910\u3002\n\n\u6bcf\u5929\u665a\u4e0a\uff0c\u8fd9\u5bb6\u9910\u5385\u90fd\u4f1a\u6309\u987a\u5e8f\u63d0\u4f9b $n$ \u79cd\u5bff\u53f8\uff0c\u7b2c $i$ \u79cd\u5bff\u53f8\u6709\u4e00\u4e2a\u4ee3\u53f7 $a_i$ \u548c\u7f8e\u5473\u5ea6 $d_{i, i}$\uff0c\u4e0d\u540c\u79cd\u7c7b\u7684\u5bff\u53f8\u6709\u53ef\u80fd\u4f7f\u7528\u76f8\u540c\u7684\u4ee3\u53f7\u3002\u6bcf\u79cd\u5bff\u53f8\u7684\u4efd\u6570\u90fd\u662f\u65e0\u9650\u7684\uff0cKiana \u4e5f\u53ef\u4ee5\u65e0\u9650\u6b21\u53d6\u5bff\u53f8\u6765\u5403\uff0c\u4f46\u6bcf\u79cd\u5bff\u53f8\u6bcf\u6b21\u53ea\u80fd\u53d6\u4e00\u4efd\uff0c\u4e14\u6bcf\u6b21\u53d6\u8d70\u7684\u5bff\u53f8\u5fc5\u987b\u662f\u6309\u9910\u5385\u63d0\u4f9b\u5bff\u53f8\u7684\u987a\u5e8f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u5373 Kiana \u53ef\u4ee5\u4e00\u6b21\u53d6\u8d70\u7b2c $1, 2$ \u79cd\u5bff\u53f8\u5404\u4e00\u4efd\uff0c\u4e5f\u53ef\u4ee5\u4e00\u6b21\u53d6\u8d70\u7b2c $2, 3$ \u79cd\u5bff\u53f8\u5404\u4e00\u4efd\uff0c\u4f46\u4e0d\u53ef\u4ee5\u4e00\u6b21\u53d6\u8d70\u7b2c $1, 3$ \u79cd\u5bff\u53f8\u3002\n\n\u7531\u4e8e\u9910\u5385\u63d0\u4f9b\u7684\u5bff\u53f8\u79cd\u7c7b\u7e41\u591a\uff0c\u800c\u4e0d\u540c\u79cd\u7c7b\u7684\u5bff\u53f8\u4e4b\u95f4\u76f8\u4e92\u4f1a\u6709\u5f71\u54cd\uff1a\u4e09\u6587\u9c7c\u5bff\u53f8\u548c\u9c7f\u9c7c\u5bff\u53f8\u4e00\u8d77\u5403\u6216\u8bb8\u4f1a\u5f88\u68d2\uff0c\u4f46\u548c\u6c34\u679c\u5bff\u53f8\u4e00\u8d77\u5403\u5c31\u53ef\u80fd\u4f1a\u809a\u5b50\u75db\u3002\u56e0\u6b64\uff0cKiana \u5b9a\u4e49\u4e86\u4e00\u4e2a\u7efc\u5408\u7f8e\u5473\u5ea6 $d_{i, j} \\ (i < j)$\uff0c\u8868\u793a\u5728\u4e00\u6b21\u53d6\u7684\u5bff\u53f8\u4e2d\uff0c\u5982\u679c\u5305\u542b\u4e86\u9910\u5385\u63d0\u4f9b\u7684\u4ece\u7b2c $i$ \u4efd\u5230\u7b2c $j$ \u4efd\u7684\u6240\u6709\u5bff\u53f8\uff0c\u5403\u6389\u8fd9\u6b21\u53d6\u7684\u6240\u6709\u5bff\u53f8\u540e\u5c06\u83b7\u5f97\u7684\u989d\u5916\u7f8e\u5473\u5ea6\u3002\u7531\u4e8e\u53d6\u5bff\u53f8\u9700\u8981\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u5206\u4e24\u6b21\u53d6\u6765\u7684\u5bff\u53f8\u4e4b\u95f4\u76f8\u4e92\u4e0d\u4f1a\u5f71\u54cd\u3002\u6ce8\u610f\u5728\u5403\u4e00\u6b21\u53d6\u7684\u5bff\u53f8\u65f6\uff0c\u4e0d\u6b62\u4e00\u4e2a\u7efc\u5408\u7f8e\u5473\u5ea6\u4f1a\u88ab\u7d2f\u52a0\uff0c\u6bd4\u5982\u82e5 Kiana \u4e00\u6b21\u53d6\u8d70\u4e86\u7b2c $1, 2, 3$ \u79cd\u5bff\u53f8\u5404\u4e00\u4efd\uff0c\u9664\u4e86 $d_{1, 3}$ \u4ee5\u5916\uff0c$d_{1, 2}, d_{2, 3}$ \u4e5f\u4f1a\u88ab\u7d2f\u52a0\u8fdb\u603b\u7f8e\u5473\u5ea6\u4e2d\u3002\n\n\u795e\u5947\u7684\u662f\uff0cKiana \u7684\u7f8e\u98df\u8bc4\u5224\u6807\u51c6\u662f\u6709\u8bb0\u5fc6\u6027\u7684\uff0c\u65e0\u8bba\u662f\u5355\u79cd\u5bff\u53f8\u7684\u7f8e\u5473\u5ea6\uff0c\u8fd8\u662f\u591a\u79cd\u5bff\u53f8\u7ec4\u5408\u8d77\u6765\u7684\u7efc\u5408\u7f8e\u5473\u5ea6\uff0c\u5728\u8ba1\u5165 Kiana \u7684\u603b\u7f8e\u5473\u5ea6\u65f6\u90fd\u53ea\u4f1a\u88ab\u7d2f\u52a0\u4e00\u6b21\u3002\u6bd4\u5982\uff0c\u82e5 Kiana \u67d0\u4e00\u6b21\u53d6\u8d70\u4e86\u7b2c $1, 2$ \u79cd\u5bff\u53f8\u5404\u4e00\u4efd\uff0c\u53e6\u4e00\u6b21\u53d6\u8d70\u4e86\u7b2c $2, 3$ \u79cd\u5bff\u53f8\u5404\u4e00\u4efd\uff0c\u90a3\u4e48\u8fd9\u4e24\u6b21\u53d6\u5bff\u53f8\u7684\u603b\u7f8e\u5473\u5ea6\u4e3a $d_{1, 1} + d_{2, 2} + d_{3, 3} + d_{1, 2} + d_{2, 3}$\uff0c\u5176\u4e2d $d_{2, 2}$ \u53ea\u4f1a\u8ba1\u7b97\u4e00\u6b21\u3002\n\n\u5947\u602a\u7684\u662f\uff0c\u8fd9\u5bb6\u5bff\u53f8\u9910\u5385\u7684\u6536\u8d39\u6807\u51c6\u5f88\u4e0d\u540c\u5bfb\u5e38\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c Kiana \u4e00\u5171\u5403\u8fc7\u4e86 $c \\ (c > 0)$ **\u79cd**\u4ee3\u53f7\u4e3a $x$ \u7684\u5bff\u53f8\uff0c\u5219\u5979\u9700\u8981\u4e3a\u8fd9\u4e9b\u5bff\u53f8\u4ed8\u51fa $mx^2 + cx$ \u5143\u94b1\uff0c\u5176\u4e2d $m$ \u662f\u9910\u5385\u7ed9\u51fa\u7684\u4e00\u4e2a\u5e38\u6570\u3002\n\n\u73b0\u5728 Kiana \u60f3\u77e5\u9053\uff0c\u5728\u8fd9\u5bb6\u9910\u5385\u5403\u5bff\u53f8\uff0c\u81ea\u5df1\u80fd\u83b7\u5f97\u7684\u603b\u7f8e\u5473\u5ea6\uff08\u5305\u62ec\u6240\u6709\u5403\u6389\u7684\u5355\u79cd\u5bff\u53f8\u7684\u7f8e\u5473\u5ea6\u548c\u6240\u6709\u88ab\u7d2f\u52a0\u7684\u7efc\u5408\u7f8e\u5473\u5ea6\uff09\u51cf\u53bb\u82b1\u8d39\u7684\u603b\u94b1\u6570\u7684\u6700\u5927\u503c\u662f\u591a\u5c11\u3002\u7531\u4e8e\u5979\u4e0d\u4f1a\u7b97\uff0c\u6240\u4ee5\u5e0c\u671b\u7531\u4f60\u544a\u8bc9\u5979\u3002\n\n---\n\n### \u9898\u89e3\n\n\u6a21\u578b\uff0c\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u3002\n\n\u6709 $n$ \u4e2a\u7269\u54c1\uff0c\u7b2c $i$ \u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u4e3a $w_i$\uff08\u53ef\u4ee5\u4e3a\u8d1f\uff09\uff0c\u5b58\u5728\u82e5\u5e72\u5f62\u5982\u9009 $i$ \u5fc5\u987b\u9009 $j$ \u7684\u9650\u5236\u3002\n\n\u6700\u5c0f\u5272\u3002\n\n\u4ee4\u8d85\u6e90 $S$ \u6240\u5728\u7684\u96c6\u5408\u4e3a\u9009\u62e9\u7684\u7269\u54c1\u96c6\u5408\uff0c\u8d85\u6c47 $T$ \u6240\u5728\u7684\u96c6\u5408\u4e3a\u4e0d\u9009\u62e9\u7684\u7269\u54c1\u7684\u96c6\u5408\uff0c\u663e\u7136\u5bf9\u4e8e\u4e00\u4e2a\u7269\u54c1 $i$ \uff0c\u8981\u4e48\u5c5e\u4e8e $S$ \uff0c\u8981\u4e48\u5c5e\u4e8e $T$\u3002\n\n\u4ee4 $sum = \\sum\\limits_{w_i>0}{w_i}$\n\n\u5bf9\u4e8e\u4ef7\u503c\u4e3a\u6b63\u7684\u7269\u54c1 $i$\uff0c\u4ece $S$ \u5411 $i$ \u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a $w_i$\uff0c\u8868\u793a\u4e0d\u9009\u62e9 $i$ \u4f1a\u635f\u5931 $w_i$ \u7684\u6536\u76ca\u3002\n\n\u5bf9\u4e8e\u4ef7\u503c\u4e3a\u8d1f\u6216\u96f6\u7684\u7269\u54c1 $i$\uff0c\u4ece $i$ \u5411 $T$ \u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a $-w_i$ \uff08\u663e\u7136 $-w_i > 0$ \uff09\uff0c\u8868\u793a\u9009\u62e9\u4e86 $i$ \u8981\u4ed8\u51fa $-w_i$ \u7684\u4ee3\u4ef7\uff0c\u5373\u635f\u5931 $-w_i$ \u7684\u6536\u76ca\u3002\n\n\u5bf9\u4e8e\u9009\u62e9 $i$ \u5fc5\u9009 $j$ \u7684\u9650\u5236\uff0c\u7531 $i$ \u5411 $j$ \u8fde\u8fb9\uff0c\u8868\u793a $j$ \u5fc5\u987b\u5c5e\u4e8e $i$ \u6240\u5728\u7684\u96c6\u5408\u3002\n\n\u8bbe\u6700\u5c0f\u5272\u4e3a $ans$\uff0c\u5219\u6700\u540e\u6240\u9009\u62e9\u7269\u54c1\u7684\u6536\u76ca\u6700\u5927\u503c\u4e3a $sum - ans$ \u3002\n\n$\\texttt{---------------------------------------------------------------------------------}$\n\n\u5bf9\u4e8e\u672c\u9898\uff0c\u5c06\u6bcf\u4e2a $d_{i,j}$ \u89c6\u4f5c\u4e00\u4e2a\u7269\u54c1\u3002\n\n\u7279\u522b\u5730\uff0c\u65b0\u5efa $\\max{a_i}$ \u4e2a\u70b9\uff0c\u8868\u793a\u4ee3\u53f7\u3002\n\n\u5bf9\u4e8e\u4ee3\u53f7\u70b9\uff0c\u5411 $T$ \u8fde $m \\times a_i^2$ \u7684\u8fb9\uff0c\u8868\u793a\u9009\u62e9\u8fc7\u8fd9\u4ee3\u53f7\u7684\u5bff\u53f8\u7684\u4ee3\u4ef7\u3002\n\n\u5bf9\u4e8e\u5bff\u53f8\u70b9\uff0c\u5373 $d_{i,i}$ \u70b9\uff0c\u5411 $T$ \u8fde $a_i$ \u7684\u8fb9\uff0c\u8868\u793a\u9009\u62e9\u5176\u6240\u4ed8\u51fa\u7684\u4ef7\u683c\uff1b\u5411\u5bf9\u5e94\u4ee3\u53f7\u70b9\u8fde\u8fb9\uff0c\u8868\u793a\u9009\u53d6\u8fd9\u4e2a\u5bff\u53f8\u540e\u4e00\u5b9a\u4f1a\u542f\u7528\u8fd9\u4e2a\u4ee3\u53f7\u3002\n\n\u82e5\u9009\u62e9 $d_{i,j}$ \uff0c\u5fc5\u9009 $d_{i + 1,j},d_{i,j-1}$\u3002\n\n\u518d\u6309\u7167\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5efa\u56fe\u5c31\u597d\u4e86\u3002\n\n---\n\n### $\\texttt{Code}$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 100 + 7;\nconst int maxnode = 7000 + 7;\nconst int maxm = 5000000 + 7;\nconst int INF = 0x3f3f3f3f;\n\nint n, m, tot = 1, S = 7000, T = 7001;\n\nint a[maxn];\nint Head[maxnode], to[maxm], Next[maxm], w[maxm];\n\nvoid addedge(int x, int y, int z) {\n\tto[++tot] = y, Next[tot] = Head[x], Head[x] = tot, w[tot] = z;\n}\nvoid add(int x, int y, int z) {\n\taddedge(x, y, z);\n\taddedge(y, x, 0);\n}\n\nint id(int x, int y) {\n\treturn (n * 2 - x + 2) * (x - 1) / 2 + y - x + 1; \n}\n\nint aimax;\nint d[maxn][maxn];\n\nvoid Init(void) {\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\taimax = max(aimax, a[i]);\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = i; j <= n; j++) {\n\t\t\tscanf(\"%d\", &d[i][j]);\n\t\t}\n\t}\n}\n\nint ans;\n\n/*\n------------------- id defination -------------------\nRange [1, (n + 1) * n / 2] FOR all d_{i,j}\nPoint (2 * n + 2 - i) * (i - 1) / 2 + j FOR d_{i,j}\nRange [(n + 1) * n / 2 + 1, (n + 1) * n / 2 + max{a_i} ] FOR all a_i\nPoint (n + 1) * n / 2 + i FOR a_i\nPoint 7000 FOR S\nPoint 7001 FOR T\n*/\n\nvoid Graph_Build(void) {\n\tfor(int i = 1; i <= aimax; i++) {\n\t\tadd((n + 1) * n / 2 + i, T, m * i * i);\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = i; j <= n; j++) {\n\t\t\tif(d[i][j] > 0) {\n\t\t\t\tans += d[i][j];\n\t\t\t\tadd(S, id(i, j), d[i][j]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tadd(id(i, j), T, -d[i][j]);\n\t\t\t}\t\n\t\t}\n\t\tadd(id(i, i), T, a[i]);\n\t\tadd(id(i, i), (n + 1) * n / 2 + a[i], INF);\n\t}\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = i + 1; j <= n; j++) {\n\t\t\tint x = i, y = j - 1;\n\t\t\tif(x <= y) add(id(i, j), id(x, y), INF);\n\t\t\tx = i + 1, y = j;\n\t\t\tif(x <= y) add(id(i, j), id(x, y), INF);\n\t\t}\n\t}\n}\n\nint D[maxnode];\n\nbool bfs(void) {\n\tmemset(D, 0, sizeof(D));\n\tqueue < int > q;\n\tq.push(S); D[S] = 1;\n\twhile(q.size()) {\n\t\tint x = q.front(); q.pop();\n\t\tfor(int i = Head[x]; i; i = Next[i]) {\n\t\t\tint y = to[i];\n\t\t\tif(D[y] || !w[i]) continue;\n\t\t\tD[y] = D[x] + 1; q.push(y);\n\t\t\tif(y == T) return true;\n\t\t}\n\t}\n\treturn false;\n}\n\nint dfs(int x, int flow) {\n\tif(x == T) return flow;\n\tint rest = flow;\n\tfor(int i = Head[x]; i && rest; i = Next[i]) {\n\t\tint y = to[i];\n\t\tif(D[y] != D[x] + 1 || !w[i]) continue;\n\t\tint k = dfs(y, min(rest, w[i]));\n\t\tif(!k) D[y] = 0;\n\t\telse w[i] -= k, w[i ^ 1] += k, rest -= k;\n\t}\n\treturn flow - rest;\n}\n\nint sum;\n\nvoid Dinic(void) {\n\tint t;\n\twhile(bfs()) {\n\t\twhile(t = dfs(S, INF)) sum += t;\n\t}\n}\n\nvoid debug() {\n\tfor(int i = 2; i <= tot; i += 2) {\n\t\tprintf(\"%d %d %d\\n\", to[i ^ 1], to[i], w[i]);\n\t}\n}\n\nvoid Work(void) {\n\tGraph_Build();\n//\tdebug();\n\tDinic();\n\tprintf(\"%d\\n\", ans - sum);\n}\n\n\nint main(void) {\n\tInit();\n\tWork();\n\treturn 0;\n}\n```\n",
        "postTime": 1591449917,
        "uid": 28910,
        "name": "\u89c8\u904d\u5343\u79cb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**\u5206\u6790\u4e0e\u9898\u89e3\uff1a**\u5982\u679c\u6211\u4eec\u9009\u62e9\u4e86$[l\uff0cr]$\u7684\u5bff\u53f8\uff0c\u5219\u6211\u4eec\u5c31\u76f8\u5f53\u4e8e\u9009\u62e9\u4e86$[l+1\uff0cr]\u3001[l\uff0cr-1]$\u7684\u5bff\u53f8\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u5df2\u7ecf\u95ee\u9898\u8f6c\u5316\u6210\u5982\u679c\u8981\u9009\u62e9$[l\uff0cr]$\u7684\u5bff\u53f8\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u9009\u62e9$[l+1\uff0cr]\u3001[l\uff0cr-1]$\u7684\u5bff\u53f8\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8fde\u8fb9\u4e86\u3002\u6211\u4eec\u5bf9\u6bcf\u4e00\u4e2a\u533a\u95f4\u5f00\u4e00\u4e2a\u70b9\u3002\u5bf9\u4e8e$[l\uff0cr]$\u533a\u95f4\u6240\u5bf9\u5e94\u70b9\u8fde\u51fa\u4e00\u6761\u8fb9\uff0c\u6307\u5411$[l+1\uff0cr]\u3001[l\uff0cr-1]$\u6240\u5bf9\u5e94\u7684\u70b9\uff0c\u8fb9\u6743\u4e3a$inf$\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\u7684\u70b9\u6211\u4eec\u90fd\u7528\u4e00\u6761\u8fb9\u6743\u4e3a\u5f53\u524d\u533a\u95f4\u7f8e\u5473\u503c\u7684\u8fb9\u548c$S$\u8fde\u63a5\u8d77\u6765\u3002\u5bf9\u4e8e\u82b1\u9500\uff0c\u6bcf\u4e00\u4e2a\u5bff\u53f8\u90fd\u548c$T$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a\u4ed6\u7684\u7f16\u53f7\u3002\u6bcf\u4e00\u79cd\u5bff\u53f8\u90fd\u5f00\u4e00\u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u5bff\u53f8\u548c\u81ea\u5df1\u79cd\u7c7b\u6240\u5bf9\u5e94\u7684\u70b9\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$inf$\uff0c\u8fd9\u4e2a\u79cd\u7c7b\u8fd8\u8981\u548c$T$\u76f8\u8fde\uff0c\u8fb9\u6743\u4e3a$m\\times x ^2$\u3002\u6211\u4eec\u5728\u5efa\u51fa\u6765\u7684\u56fe\u4e0a\u8dd1\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```c++\n// luogu-judger-enable-o2\n#include <queue>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define N 200\n#define inf 1000000000\nint n,m,cnt,idx=1,ans,ord[N][N],dis[N*N],mx,num[N],s,t;bool is[N<<3];\nint cur[N*N],head[N*N],to[N*N<<5],nxt[N*N<<5],val[N*N<<5];\nvoid add(int a,int b,int c)\n    {nxt[++idx]=head[a],to[idx]=b,val[idx]=c,head[a]=idx;}\nbool bfs()\n{\n    memset(dis,-1,sizeof dis);\n    queue <int> q;q.push(s),dis[s]=0;\n    while(!q.empty())\n    {\n        int p=q.front();q.pop();\n        if(p==t) return true;\n        for(int i=head[p];i;i=nxt[i])\n            if(val[i]>0&&dis[to[i]]==-1)\n                dis[to[i]]=dis[p]+1,q.push(to[i]);\n    } return false;\n}\nint dfs(int p,int flow)\n{\n    int now,temp=flow;\n    if(p==t) return flow;\n    for(int i=cur[p];i;i=nxt[i])\n        if(val[i]>0&&dis[to[i]]==dis[p]+1)\n        {\n            now=dfs(to[i],min(val[i],temp));\n            if(!now) dis[to[i]]=-1;\n            temp-=now,val[i]-=now,val[i^1]+=now;\n            if(val[i]) cur[p]=i;\n            if(!temp) break;\n        } return flow-temp;\n}\nvoid dinic() {while(bfs()) memcpy(cur,head,sizeof head),ans-=dfs(s,inf);}\nint main()\n{\n    scanf(\"%d%d\",&n,&m),s=n*(n+1)/2+1,t=n*(n+1)/2+2;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&num[i]),mx=max(mx,num[i]); s+=mx,t+=mx;\n    for(int i=1;i<=n;i++) if(!is[num[i]])\n        is[num[i]]=true,add(n*(n+1)/2+num[i],t,m*num[i]*num[i]),add(t,n*(n+1)/2,0);\n    for(int i=1;i<=n;i++) for(int j=i;j<=n;j++) ord[i][j]=++cnt;\n    for(int i=1;i<=n;i++)\n        for(int j=i,a;j<=n;j++)\n        {\n            scanf(\"%d\",&a);\n            if(i==j) (a-num[i]<0)?(add(ord[i][j],t,num[i]-a),add(t,ord[i][j],0)):\n                (ans+=a-num[i],add(s,ord[i][j],a-num[i]),add(ord[i][j],s,0));\n            else (a<0)?(add(ord[i][j],t,-a),add(t,ord[i][j],0)):\n                (ans+=a,add(s,ord[i][j],a),add(ord[i][j],s,0));\n            if(i==j) add(ord[i][j],n*(n+1)/2+num[i],inf),add(n*(n+1)/2+num[i],ord[i][j],0);\n            else add(ord[i][j],ord[i+1][j],inf),add(ord[i+1][j],ord[i][j],0),\n                add(ord[i][j],ord[i][j-1],inf),add(ord[i][j-1],ord[i][j],0);\n        } dinic();printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1545619114,
        "uid": 52851,
        "name": "ysy20021208",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "### [[\u516d\u7701\u8054\u8003 2017] \u5bff\u53f8\u9910\u5385](https://www.luogu.com.cn/problem/P3749)\n\n\u9898\u76ee\u8981\u6c42\u6c42\u51fa\u6700\u5927\u503c\uff0c\u7136\u800c\u7ed9\u51fa\u7684\u4fe1\u606f\u5f88\u591a\uff0c\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u7684\u56e0\u7d20\u4e5f\u5f88\u591a\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f3c\u4e4e\u65e0\u6cd5\u60f3\u5230\u6709\u4ec0\u4e48\u597d\u7684\u529e\u6cd5\u76f4\u63a5\u8ba1\u7b97\uff0c\u5373\u4f7f\u679a\u4e3e\u4e5f\u662f\u5f88\u9ebb\u70e6\u7684\u3002\n\n\u8003\u8651\u5230\u6700\u5927\u503c\u7684\u95ee\u9898\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u6765\u6c42\u89e3\uff0c\u90a3\u4e0d\u59a8\u5f80\u8fd9\u65b9\u9762\u60f3\u60f3\u770b\u3002\u7f51\u7edc\u6d41\u96be\u5c31\u96be\u5728\u5efa\u56fe\uff0c\u5efa\u56fe\u60f3\u6e05\u695a\u4e86\u5c31\u53ef\u4ee5\u505a\u51fa\u6765\u4e86\u3002\u9996\u5148\u60f3\u4ee5\u4ec0\u4e48\u4e3a\u70b9\uff1f\u7b2c\u4e00\u53cd\u5e94\u662f\u4ee5\u5bff\u53f8\u4e3a\u70b9\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u597d\u50cf\u4e0d\u592a\u597d\u8fde\u8fb9\uff0c\u56e0\u4e3a\u4e24\u4e2a\u5bff\u53f8\u4e4b\u95f4\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5f88\u5f3a\u7684\u5173\u7cfb\u3002\u60f3\u5230\u5f3a\u5173\u8054\u6027\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684 $d$ \u6570\u7ec4\u4f3c\u4e4e\u6709\u6bd4\u8f83\u5f3a\u7684\u5173\u8054\u6027\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u9009\u62e9\u4e86 $d_{i,j}$\uff0c\u90a3\u4e48\u4e00\u5b9a\u8981\u9009\u62e9 $d_{i+1,j}$ \u548c $d_{i,j-1}$\u3002\u60f3\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u4e0d\u59a8\u4ee4 $d$ \u6570\u7ec4\u4e3a\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u9009\u62e9\u4e00\u4e9b\u70b9\u3002\u56e0\u4e3a\u4e0a\u8ff0\u5173\u7cfb\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u5fc5\u987b\u9009\u62e9\u53e6\u5916\u51e0\u4e2a\u70b9\u3002\u8fd9\u548c\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5341\u5206\u76f8\u4f3c\u3002\u800c\u4e14\u7b54\u6848\u4e5f\u662f\u6c42\u6700\u5927\u503c\uff0c\u90a3\u662f\u4e0d\u662f\u5c31\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5462\uff1f\n\n\u5177\u4f53\u505a\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $d_{i,j}$\uff0c\u90fd\u7531\u5b83\u5411 $d_{i+1,j}$ \u548c $d_{i,j-1}$ \u8fde\u8fb9\uff0c\u6700\u540e\u8dd1\u4e00\u904d\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u5c31\u53ef\u4ee5\u6c42\u51fa\u7f8e\u5473\u5ea6\u7684\u6700\u5927\u503c\u3002\u4f46\u662f\u9898\u76ee\u4e2d\u8981\u6c42\u6211\u4eec\u51cf\u53bb\u8d39\u7528\u540e\u6700\u5927\uff0c\u90a3\u8d39\u7528\u600e\u4e48\u5728\u56fe\u4e2d\u4f53\u73b0\u5462\uff1f\n\n\u5bf9\u4e8e\u5f0f\u5b50\u4e2d\u7684 $cx$\uff0c\u6211\u4eec\u53ef\u4ee5\u62c6\u5f00\u6765\u770b\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u6bcf\u9009\u4e00\u4e2a\u7f16\u53f7\u4e3a $x$ \u7684\u5bff\u53f8\uff0c\u6211\u4eec\u5c31\u51cf\u53bb\u4e00\u4e2a $x$ \u7684\u8d39\u7528\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u76f4\u63a5\u5c06 $a_i$ \u5728 $d_{i,i}$ \u4e2d\u51cf\u53bb\u3002\u7136\u540e\u5bf9\u4e8e $m x^2$\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u7f16\u53f7\u4e5f\u5efa\u6210\u4e00\u4e2a\u70b9\uff0c\u4ece\u6bcf\u4e2a\u7f16\u53f7\u5bf9\u5e94\u7684\u70b9\u5411\u6c47\u70b9\u8fde $x^2$ \u7684\u8fb9\u3002\u81f3\u6b64\u5efa\u56fe\u5c31\u5b8c\u6210\u4e86\u3002\n\ncode\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=6060,M=32300,INF=1e9;\nint n,m,maxa,cnt,tot,S,T;\nint a[N];\nint delicious[110][110],id[110][110];\nint h[N],to[M],f[M],nxt[M],idx=1;\nint d[N],cur[N];\ninline void add(int a,int b,int c)\n{\n    to[++idx]=b,f[idx]=c,nxt[idx]=h[a],h[a]=idx;\n    to[++idx]=a,f[idx]=0,nxt[idx]=h[b],h[b]=idx;\n}\ninline bool bfs()\n{\n    memset(d,-1,sizeof d);\n    queue<int> q;\n    q.push(S);\n    d[S]=1,cur[S]=h[S];\n    while (q.size())\n    {\n        int x=q.front();\n        q.pop();\n        for (int i=h[x];i;i=nxt[i])\n        {\n            int y=to[i];\n            if (d[y]==-1&&f[i])\n            {\n                d[y]=d[x]+1;\n                cur[y]=h[y];\n                if (y==T) return true;\n                q.push(y);\n            }\n        }\n    }\n    return false;\n}\nint find(int u,int limit)\n{\n    if (u==T) return limit;\n    int flow=0;\n    for (int i=cur[u];i&&flow<limit;i=nxt[i])\n    {\n        int j=to[i];\n        cur[u]=i;\n        if (d[j]==d[u]+1&&f[i])\n        {\n            int t=find(j,min(f[i],limit-flow));\n            if (!t) d[j]=-1;\n            f[i]-=t,f[i^1]+=t,flow+=t;\n        }\n    }\n    return flow;\n}\ninline int dinic()\n{\n    int res=0,flow;\n    while (bfs()) while (flow=find(S,INF)) res+=flow;\n    return res;\n}\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"sushi.in\",\"r\",stdin);\n    freopen(\"sushi.out\",\"w\",stdout);\n#endif\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=n;++i) scanf(\"%d\",&a[i]),maxa=max(maxa,a[i]);//\u8bb0\u5f55\u7f16\u53f7\u7684\u6700\u5927\u503c\n    S=0,T=1;\n    cnt=1;\n    for (int i=1;i<=n;++i)\n    {\n        for (int j=i;j<=n;++j)\n        {\n            scanf(\"%d\",&delicious[i][j]);\n            id[i][j]=++cnt;//\u7f16\u53f7\n        }\n    }\n    for (int i=1;i<=n;++i)\n    {\n        for (int j=i;j<=n;++j)\n        {\n            int cost=delicious[i][j];\n            if (i==j)\n            {\n                if (m) add(id[i][j],cnt+a[i],INF);\n                cost-=a[i];\n            }\n            else\n            {\n                add(id[i][j],id[i+1][j],INF);\n                add(id[i][j],id[i][j-1],INF);\n            }\n            if (cost>0) add(S,id[i][j],cost),tot+=cost;\n            else if (cost<0) add(id[i][j],T,-cost);\n        }\n    }\n    if (m) for (int i=1;i<=maxa;++i) add(++cnt,T,i*i);\n    printf(\"%d\\n\",tot-dinic());\n    return 0;\n}\n```\n",
        "postTime": 1680276610,
        "uid": 767793,
        "name": "_ZSR_",
        "ccfLevel": 0,
        "title": "P3749 [\u516d\u7701\u8054\u8003 2017] \u5bff\u53f8\u9910\u5385"
    },
    {
        "content": "**\u53c8\u662f\u4e00\u9053\u6700\u5927\u6743\u95ed\u5408\u56fe**\n\n# \u521d\u671f\u60f3\u6cd5\n\n\u672c\u9898\u7684\u6743\u503c $d_{i,j}$ \u53ea\u80fd\u53d6\u4e00\u6b21\uff0c\u8fd8\u8981\u5e26\u4e0a $d_{i+1,j}$ \u548c $d_{i,j-1}$ \uff0c\u8fd9\u5176\u5b9e\u5f88\u660e\u663e\u5c31\u662f\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u56fe\u4e0a\u7684\u6700\u5927\u6d41\u95ee\u9898\u3002\n\n\u90a3\u5982\u4f55\u5efa\u6a21\u5462\uff1f\n\n# \u5efa\u6a21\u601d\u8def\n\n- \u8fd9\u9053\u9898\u7684\u7cbe\u9ad3\u5728\u4e8e\u8054\u7cfb\u4e86\u94b1\u548c\u7f16\u53f7\n\n- \u76f8\u4e92\u7ea6\u675f\u7684\u70b9\u8981\u8fde\u8fb9\uff0c\u4e5f\u5c31\u662f $d_{i,j}$ \u4e0e $d_{i+1,j}$ \u4e0e $d_{i,j-1}$ \u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a $inf$ \uff0c\u800c $d_{i,i}$ \u5219\u9700\u8981\u8fde\u4e0a $n^2+a_i$ \uff0c\u8fb9\u6743\u4e5f\u662f $inf$ \u3002\n\n- \u6700\u540e\u8865\u4e0a\u4ece $n^2+i$ \u8fde\u5230\u6c47\u70b9 $T$ \u7684\u8fb9\uff0c\u8fb9\u6743\u4e3a$mi^2$\n\n- \u7136\u540e\u628a\u70b9\u6743\u4e3a\u6b63\u7684\u70b9\u8fde\u5411\u6e90\u70b9 $S$ \uff0c\u8fb9\u6743\u4e3a\u81ea\u8eab\u70b9\u6743\uff0c\u70b9\u6743\u975e\u6b63\u7684\u8fde\u5411\u6c47\u70b9 $T$ \uff0c\u8fb9\u6743\u4e3a\u81ea\u8eab\u76f8\u53cd\u6570\u3002\u7528\u6b63\u70b9\u6743\u7684\u548c\u51cf\u53bb\u6700\u5927\u6d41\u5c31\u662f\u7b54\u6848\u4e86\n\n# \u4ee3\u7801\u8bb2\u89e3\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u6620\u5c04\u6765\u8868\u793a $d_{i,j}$ \u7684\u7f16\u53f7\uff0c\u7136\u540e\u5efa\u56fe\u5373\u53ef\uff0c\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 40010\n#define inf 0x3f3f3f3f\nusing namespace std;\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-'){\n\t\t\tf=-1;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<3)+(x<<1)+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint s=23323,t=23333,n,m,a[N],dis[N],head[N],ans,d,cnt=1;\nstruct edge{\n\tint to,next,val;\n}e[N<<1]; \nint calc(int i,int j){//\u6620\u5c04\n\treturn (i-1)*n+j;\n}\nvoid add(int u,int v,int w){\n\te[++cnt].to=v,e[cnt].next=head[u],e[cnt].val=w,head[u]=cnt;\n\te[++cnt].to=u,e[cnt].next=head[v],e[cnt].val=0,head[v]=cnt;\n}\nint bfs(){\n\tmemset(dis,0,sizeof(dis));\n\tqueue<int>q;\n\tq.push(s);\n\tdis[s]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=e[i].next){\n\t\t\tint v=e[i].to;\n\t\t\tif(!dis[v]&&e[i].val){\n\t\t\t\tdis[v]=dis[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t];\n}\nint dfs(int u,int cur){\n\tif(u==t||!cur){\n\t\treturn cur;\n\t}\n\tint sum=0,tmp;\n\tfor(int i=head[u];i;i=e[i].next){\n\t\tint v=e[i].to;\n\t\tif(dis[v]==dis[u]+1&&e[i].val){\n\t\t\tsum+=(tmp=dfs(v,min(cur-sum,e[i].val)));\n\t\t\te[i].val-=tmp,e[i^1].val+=tmp;\n\t\t}\n\t}\n\tif(!sum){\n\t\tdis[u]=-1;\n\t}\n\treturn sum;\n}\nint Dinic(){\n\tint maxflow=0;\n\twhile(bfs()){\n\t\tmaxflow+=dfs(s,inf);\n\t}\n\treturn maxflow;\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i;j<=n;j++){\n\t\t\td=read();\n\t\t\tif(i==j){\n\t\t\t\td-=a[i];\n\t\t\t\tadd(calc(i,j),n*n+a[i],inf);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tadd(calc(i,j),calc(i+1,j),inf),add(calc(i,j),calc(i,j-1),inf);\n\t\t\t}\n\t\t\tif(d>0){//\u6b63\u6743\n\t\t\t\tadd(s,calc(i,j),d);\n\t\t\t\tans+=d;\n\t\t\t}\n\t\t\telse{//\u8d1f\u6743\n\t\t\t\tadd(calc(i,j),t,-d);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=1000;i++){\n\t\tadd(n*n+i,t,m*i*i);//\u8865\u4e0a\n\t}\n\tprintf(\"%d\",ans-Dinic());\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u7f51\u7edc\u6d41\u5173\u952e\u5728\u4e8e\u5efa\u6a21\uff0c\u5bf9\u6b64\uff0c\u6211\u4eec\u8981\u591a\u52a0\u7ec3\u4e60\u627e\u611f\u89c9\uff0c\u5e0c\u671b\u5927\u5bb6\u90fd\u4f1a\u6709\u8fdb\u6b65\u7684\uff01\n\n# \u8054\u8d5b\u5feb\u6765\u4e86\uff0c\u795d\u5927\u5bb6\u53d6\u5f97\u81ea\u5df1\u7406\u60f3\u7684\u6210\u7ee9\uff01",
        "postTime": 1597824562,
        "uid": 178556,
        "name": "Skyjoy",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n>\u7ed9\u5b9a\u6bcf\u4e2a\u5bff\u53f8\u7c7b\u578b$a_i$,\u9009$[l,r]$\u53f7\u7684\u6536\u76ca(\u6bcf\u4e2a\u5b50\u533a\u95f4$[x,y]|x\\geqslant l\\vee r\\leqslant r$\u4f1a\u56e0\u4e3a\u7236\u533a\u95f4\u88ab\u9009\u53d6\u800c\u4f1a\u4e14\u4ec5\u4f1a\u5f97\u5230\u4e00\u6b21\u6536\u76ca),\u8bbe\u5403\u4e86$c_x$\u4e2a\u79cd\u7c7b\u7684$x$\u7c7b\u578b\u5bff\u53f8\uff0c\u5219\u4f1a\u4ed8\u51fa$\\displaystyle \\sum_{x}mx^2+c_xx(m\\in\\{0,1\\})$\u4ee3\u4ef7\n\n### Solution\n\n\u9996\u5148\u4f1a\u60f3\u5230\u8f6c\u6700\u5927\u6536\u76ca\u4e3a\u6700\u5c0f\u5272\uff0c\n\n\u4f46\u662f\u4e0d\u8981\u56e0\u4e3a\u533a\u95f4\u7c7b\u6536\u76ca/\u6b21\u6570\u552f\u4e00\u5c31\u5f53\u6210\u5173\u952e\u70b9\u96c6\u6536\u76ca\u800c\u4f7f\u7528\u96c6\u5408\u5212\u5206\u6a21\u578b\uff0c\u56e0\u4e3a\u90a3\u6837\u8fb9\u4f1a\u70b8(\u800c\u4e14\u90a3\u6837\u7b2c\u4e8c\u95ee\u8f6c\u4e0d\u4e86)\n\n\u4e00\u6b21\u6536\u76ca\u5c31\u53ea\u5bf9\u533a\u95f4\u5efa\u4e00\u4e2a\u865a\u70b9\u4e0e$T$\u8fde\uff0c\u53d6\u5b8c\u5b50\u533a\u95f4\u53ef\u4ee5\u5f53\u6210\u4e00\u79cd\u8fed\u4ee3\u5173\u7cfb\u9009$[l,r]$\u5c31\u5fc5\u987b\u9009$[l+1,r]$\u548c$[l,r-1]$\n\n\u56e0\u6b64\u4f7f\u7528\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\n\n\u6700\u540e\u4ee3\u4ef7\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u7c7b\u578b\u5efa\u865a\u70b9\u4e0e$T$\u8fde\u8d39\u7528\u4e3a$mx^2$(\u53ea\u8981\u6ca1\u5272\u5c31\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a),$cx$\u76f4\u63a5\u5206\u914d\u5230\u6bcf\u4e2a\u6570\u81ea\u5df1\u9009\u53d6\u4e0a,\u5c31\u7528$[i,i]$\u5411\u72ec\u7acb\u7684\u8868\u793a$i$\u7684\u865a\u70b9\u8fde$a_i$\u5373\u53ef.\u56e0\u6b64\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u5c31\u7b97\u8d39\u7528\u5f62\u5982$ax^2+bx$\u4e5f\u4e0d\u4e00\u5b9a\u8981\u7528\u6d41\u91cf\u5206\u914d\u6a21\u578b\u8f6c\u4e00\u6b21\u51fd\u6570\u7684\u7ebf\u6027\u548c",
        "postTime": 1596254922,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "\u8003\u8651\u6bcf\u4e2a\u533a\u95f4\u5efa\u4e00\u4e2a\u6536\u76ca\u70b9\u5411\u533a\u95f4\u5185\u7684\u5bff\u53f8\u8fde\u8fb9\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u4ee3\u53f7\u65b0\u5efa\u4e00\u4e2a\u70b9\u6743\u4e3a -mx^2\u7684\u70b9\uff0c\u6bcf\u79cd\u5bff\u53f8\u5bff\u53f8\u8fde\u5411\u4ee3\u53f7\u70b9\uff0c\u8fd9\u6837\u5c31\u662f\u6c42\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u4e86\u3002\u4f46\u662f\u8fd9\u6837\u8fb9\u6570\u662fn^3 \uff0c\u53ef\u80fd\u8fc7\u4e0d\u4e86\u3002          \n\n\u8003\u8651\u4f18\u5316\uff0c\u533a\u95f4 [i,j]\u53ea\u9700\u8981\u8fde\u5411 [i,j\u22121] \u548c [i+1,j] \u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u6709\u533a\u95f4 [i,i] \u7684\u70b9\u6743\u4e3a d[i,i]-a[i] \uff0c\u8fd9\u6837\u8fb9\u6570\u53ea\u6709 n^2 \uff0c\u590d\u6742\u5ea6O(n^4) \u3002                    \n\n```\n#include <bits/stdc++.h>\nconst int MAXN=1e2+10;\nconst int MAXV=1e4+10;\nconst int MAXE=1e6+10;\nconst int INF=0x7FFFFFFF;\nstruct Edge{\n\tint from;\n\tint to;\n\tint flow;\n\tEdge* rev;\n\tEdge* next;\n};\nEdge E[MAXE];\nEdge* head[MAXV];\nEdge* cur[MAXV];\nEdge* top=E;\nint n;\nint m;\nint a[MAXN];\nbool vis[1010];\nint depth[MAXV];\nint id[MAXN][MAXN];\nint val[MAXN][MAXN];\nbool BFS(int,int);\nint Dinic(int,int);\nint DFS(int,int,int);\nvoid Insert(int,int,int);\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",a+i);\n\tint s=0,t=1;\n\tint cnt=1,sum=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i;j<=n;j++){\n\t\t\tscanf(\"%d\",val[i]+j);\n\t\t\tid[i][j]=++cnt;\n\t\t\tif(i==j)\n\t\t\t\tval[i][j]-=a[i];\n\t\t\tif(val[i][j]>=0){\n\t\t\t\tsum+=val[i][j];\n\t\t\t\tInsert(s,id[i][j],val[i][j]);\n\t\t\t}\n\t\t\telse\n\t\t\t\tInsert(id[i][j],t,-val[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=i+1;j<=n;j++){\n\t\t\tInsert(id[i][j],id[i+1][j],INF);\n\t\t\tInsert(id[i][j],id[i][j-1],INF);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tInsert(id[i][i],cnt+a[i],INF);\n\tfor(int i=1;i<=n;i++){\n\t\tif(!vis[a[i]]){\n\t\t\tvis[a[i]]=true;\n\t\t\tInsert(cnt+a[i],t,m*a[i]*a[i]);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",sum-Dinic(s,t));\n\treturn 0;\n}\nint Dinic(int s,int t){\n\tint ans=0;\n\twhile(BFS(s,t))\n\tans+=DFS(s,INF,t);\n\treturn ans;\n}\nbool BFS(int s,int t){\n\tmemset(depth,0,sizeof(depth));\n\tstd::queue<int> q;\n\tq.push(s);\n\tdepth[s]=1;\n    cur[s]=head[s];\n    while(!q.empty()){\n        s=q.front();\n        q.pop();\n        for(Edge* i=head[s];i!=NULL;i=i->next){\n            if(i->flow>0&&depth[i->to]==0){\n                depth[i->to]=depth[s]+1;\n                cur[i->to]=head[i->to];\n                if(i->to==t)\n                    return true;\n                q.push(i->to);\n           }\n       }\n   }\n    return false;\n}\nint DFS(int s,int flow,int t){\n    if(s==t||flow<=0)\n        return flow;\n    int rest=flow;\n    for(Edge*& i=cur[s];i!=NULL;i=i->next){\n        if(i->flow>0&&depth[i->to]==depth[s]+1){\n            int tmp=DFS(i->to,std::min(rest,i->flow),t);\n            if(tmp<=0)\n                depth[i->to]=0;\n            rest-=tmp;\n            i->flow-=tmp;\n            i->rev->flow+=tmp;\n            if(rest<=0)\n                break;\n       }\n   }\n    return flow-rest;\n}\ninline void Insert(int from,int to,int flow){\n    top->from=from;\n    top->to=to;\n    top->flow=flow;\n    top->rev=top+1;\n    top->next=head[from];\n    head[from]=top++;\n    top->from=to;\n    top->to=from;\n    top->flow=0;\n    top->rev=top-1;\n    top->next=head[to];\n    head[to]=top++;\n}\n```\n",
        "postTime": 1592036563,
        "uid": 324858,
        "name": "\u26a1114514_zzm\u26a1",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    },
    {
        "content": "### \u9898\u76ee\u94fe\u63a5\n[\u6233\u6211](https://www.luogu.org/problemnew/show/P3749)\n### $Describe$\n>\u7b80\u8981\u9898\u76ee\uff1a\n    \u4e00\u4e2a\u5e8f\u5217\uff0c\u53ef\u4ee5\u82e5\u5e72\u6b21\u53d6\u5176\u4e2d\u4e00\u6bb5\u533a\u95f4\uff0c\u533a\u95f4\u53ca\u5176\u5b50\u96c6\u7684\u4ef7\u503c\u90fd\u4f1a\u88ab\u7edf\u8ba1\u8fdb\u53bb\u4e14\u6bcf\u4e2a\u533a\u95f4\u7684\u4ef7\u503c\u53ea\u80fd\u88ab\u7edf\u8ba1\u4e00\u6b21\u3002\n    \u5982\u679c\u4f60\u62ff$c$\u79cd$x$\u6570\uff0c\u4f60\u9700\u8981\u82b1\u8d39$m*x^2+c*x$\u7684\u4ee3\u4ef7\u3002\n    \u6c42\u6700\u5927\u4ef7\u503c\u3002\n    \n### $Solution$\n\n\u8fd9\u9053\u9898\u770b\u8d77\u6765\u5e76\u6ca1\u6709\u601d\u8def\uff0c\u770b\u4e86\u770b\u9898\u89e3\u540e\u53d1\u73b0\u8fd9\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u3002$What?$\u8fd9\u662f\u795e\u9a6c\uff1f\u4e0d\u4f1a\uff0c\u4e8e\u662f\u53bb\u5b66\u4e86\u4e00\u4e0b\u3002\n\n\u7136\u540e\u53d1\u73b0\u8fd9\u9053\u9898\u5c31\u662f\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\uff1b\n\n\u9996\u5148\u5904\u7406\u533a\u95f4\uff1a\n\u5c06\u533a\u95f4\u770b\u6210\u70b9,\u770b\u770b\u8fd9\u4e2a\u533a\u95f4\u7684\u6743\u503c\u662f\u5426\u4e3a\u6b63\uff0c\u4e3a\u6b63\u7528$S$\u548c\u8fd9\u4e2a\u533a\u95f4\u76f8\u8fde,\u6d41\u91cf\u4e3a\u6743\u503c\u3002\u53cd\u4e4b\u7528\u8fd9\u4e2a\u533a\u95f4\u548c$t$\u76f8\u8fde\u6d41\u91cf\u4e3a\u6743\u503c\u7684\u524d\u7f00\u548c\u3002\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u4ed6\u8fd8\u5fc5\u987b\u8981\u5305\u62ec\u5b50\u533a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u628a\u8fd9\u4e2a\u533a\u95f4$[i,j]$\u548c$[i,j-1],[i+1,j]$\u76f8\u8fde\u3002\u6d41\u91cf\u4e3a$inf$\n\n\u518d\u6765\u770b\u770b\u5bff\u53f8\n\n\u5bf9\u4e8e$m*x^2+c*x$\u6211\u4eec\u5c06\u4ed6\u62c6\u5206\u3002\u53d8\u6210$m*x^2$\u548c$c*x$\n\n\u5bf9\u4e8e$m*x^2$\u6211\u4eec\u4f1a\u53d1\u73b0\u4ed6\u548c\u6570\u91cf\u6ca1\u51a0\u5e0c\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5c06\u4ed6\u548c$T$\u76f8\u8fde\u6d41\u91cf\u4e3a$m*x^2$\n\u5728\u5c06$[i,i]$\u8fd9\u4e2a\u70b9\u548c\u8fd9\u4e2a\u5bff\u53f8\u76f8\u8fde\uff0c\u6d41\u91cf\u4e3a$inf$\u518d\u5c06\u8fd9\u4e2a\u70b9\u548c$T$\u76f8\u8fde\u6d41\u91cf\u4e3a$x$\n\n\u7f51\u7edc\u6d41\u7684\u4ee3\u7801\u6709\u70b9\u957f\uff0c\u89c1\u535a\u5ba2\u5427\uff0c\u5c31\u4e0d\u5728\u8fd9\u5360\u7bc7\u5e45\u4e86\n[\u6233\u6211](https://www.cnblogs.com/hbxblog/p/10265715.html)",
        "postTime": 1547434667,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3749 \u3010[\u516d\u7701\u8054\u80032017]\u5bff\u53f8\u9910\u5385\u3011"
    }
]