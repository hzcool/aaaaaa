[
    {
        "content": "## \u601d\u8def:\u5728\u76f4\u5f84\u4e0a\u5c3a\u53d6,\u8ba1\u7b97\u6bcf\u6761\u8def\u5f84\u7684\u504f\u5fc3\u8ddd.\n\n- \u65b9\u6cd51\uff1a\u53ef\u4ee5\u9009\u5f00\u59cb\u7684\u4e00\u6761\uff0c\u76f4\u63a5\u66b4\u529b\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5230\u8fd9\u6761\u70b9\u7684\u8d21\u732e\uff0c\u4e4b\u540e\u8fdb\u884c\u9012\u63a8\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u8981\u4e24\u7aef\u70b9\u7684\u6539\u53d8\u4f1a\u4f7f\u5f97\u5b50\u6811\u6bcf\u4e2a\u8282\u70b9\u53d8\u5316\uff0c\u7528\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u652f\u6301(\u5728\u7ebf\u4fee\u6539+\u67e5\u8be2\u6700\u5927\u503c)\u5462?\u2014\u2014\u7ebf\u6bb5\u6811\uff01\uff01\uff01\u4ee3\u7801\u5c31\u4e0d\u51fa\u793a\u4e86......100\u591a\u884c\uff0c\u53cd\u6b63\u4e5f\u6ca1\u4eba\u770b\u3002\n\n-  \u65b9\u6cd52\uff1a\u53ef\u4ee5\u8bc1\u660e\u4e00\u6761\u8def\u5f84\u76842\u4e2a\u7aef\u70b9\u6700\u957f\u8ddd\u79bb\u662f\u5230\u76f4\u5f84\u4e24\u4e2a\u7aef\u70b9\uff0c\u53ef\u4ee5\u7528\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff0c\u6240\u4ee5\u53ea\u8981\u5904\u7406\u975e\u76f4\u5f84\u4e0a\u5176\u4ed6\u70b9\u7684\u8d21\u732e\u5373\u53ef\uff0c\u9884\u5904\u7406\u3002\n#### \u6574\u7406\u53d1\u73b0\uff0c\u5728\u4e00\u4e2a\u7ebf\u6bb5\u4e0a\u5c3a\u53d6\uff0c\u6bcf\u4e00\u4e2a\u70b9\u6709\u4e00\u4e2a\u8d21\u732e\uff0c\u95ee\u8fd9\u4e9b\u70b9\u4e2d\u6700\u5927\u503c\u662f\u591a\u5c11\uff1f\u5728\u4e0e\u4e24\u7aef\u70b9\u8d21\u732e\u6bd4\u8f83\uff0c\u5355\u8c03\u961f\u5217\u221a\n------------\n#### \u7136\u800c\u6211\u4eec\u63a2\u7d22\u5e76\u6ca1\u6709\u7ed3\u675f\uff0c\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u6211\u4eec\u627e\u7684\u6700\u5c0f\u503c\u80af\u5b9a\u8981\u4e48\u662f\u4e24\u7aef\u70b9\u5230\u76f4\u5f84\u7aef\u70b9\u7684\u8d21\u732e\uff0c\u8981\u4e48\u662f\u76f4\u5f84\u4e0a\u7684\u70b9\u7684\u8d21\u732e\uff0c\u90a3\u4e48\u80fd\u4e0d\u80fd\u76f4\u63a5\u53d6\u6700\u5c0f\u5462\uff1f\u7b54\u6848\u662f\u53ef\u4ee5\uff0c\u53ef\u4ee5\u8bc1\u660e\u4e00\u6761\u8def\u5f84\u4e0a\uff0c\u5176\u4ed6\u70b9\u7684\u8d21\u732e<\u4e24\u7aef\u70b9\u5230\u76f4\u5f84\u7aef\u70b9\u7684\u8d21\u732e\uff08\u7528\u53cd\u8bc1\u6cd5\u53ef\u4ee5\u8bc1\u660e\uff09\u3002\n![](https://cdn.luogu.com.cn/upload/pic/29787.png)    \n\u6bd4\u5982\u8bf4\u67d3\u8272\u7684\u662f\u76f4\u5f84\uff0c\u7ea2\u8272\u7684\u662f\u9009\u7684\u8def\u5f84\uff0c\u663e\u7136\uff0c\u7eff\u8272\u70b9\u7684\u8d21\u732e\u90fd\u5c0f\u4e8e\u8def\u5f84\u4fe9\u7aef\u70b9\u7684\u8d21\u732e\uff0c\u8bc1\u660eover\uff01\n\n------------\n\n#### \u5373\u5c31\u7b97\u52a0\u4e0a\u5176\u4ed6\u70b9\u7684\u8d21\u732e\uff0c\u5bf9\u8fd9\u6761\u8def\u5f84\u7684\u7b54\u6848\u4e5f\u4e0d\u4f1a\u6709\u4e00\u70b9\u5f71\u54cd\uff0c\u6240\u4ee5\u5355\u8c03\u961f\u5217\u5c31\u53ef\u4ee5\u53bb\u6389\u4e86\u76f4\u63a5\u53d6max\u5c31\u884c\u4e86\u3002\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define M 500005\nusing namespace std;\nint n,m,x,y,z,k,id,top,ans=2e9;\nint dis[M],fa[M],head[M];\nbool mark[M];\nstruct edge{\n    int to,w,nxt;\n}E[M<<1];\nvoid add(int u,int v,int w){\n    E[++id]=((edge){v,w,head[u]});\n    head[u]=id;//\u5b58\u56fe\n}\nvoid dfs(int f,int x){\n    fa[x]=f;\n    if(dis[x]>dis[k])k=x;\n    for(int i=head[x];i;i=E[i].nxt){\n        int y=E[i].to;\n        if(y==f||mark[y])continue;\n        dis[y]=dis[x]+E[i].w;\n        dfs(x,y);\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<n;i++){\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z),add(y,x,z);\n    }\n    dis[1]=1,dfs(0,1);\n    dis[k]=0,dfs(0,k);\n    //k\u8868\u793a\u6700\u8fdc\u7684\u7aef\u70b9\n    top=k;//\u627e\u76f4\u5f84\n    for(int i=top,j=top,l=1,r=0;i;i=fa[i]){\n        while(dis[j]-dis[i]>m)j=fa[j];\n        //\u8fdb\u884c\u5c3a\u53d6\uff0c\u9009\u8def\u5f84\u3002\n        x=max(dis[top]-dis[j],dis[i]);\n        //\u8def\u5f84\u4e24\u7aef\u70b9\u5230\u76f4\u5f84\u7aef\u70b9\u7684\u6700\u5c0f\u8d21\u732e.\n        ans=min(ans,x);\n    }\n    for(int i=top;i;i=fa[i])mark[i]=1;\n    //\u6807\u8bb0\u76f4\u5f84\uff0c\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u3002\n    for(int i=top;i;i=fa[i]){\n        k=i,dis[k]=0;\n        dfs(fa[i],i);\n    }\n    for(int i=1;i<=n;i++)\n        ans=max(ans,dis[i]);\n    //\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\uff0c\u4ed4\u7ec6\u60f3\u60f3\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\u3002\n    printf(\"%d\\n\",ans);\n    return 0;\n    //\u53bb\u6389\u6ce8\u91ca\u5176\u5b9e\u4ee3\u7801\u8fd8\u633a\u77ed\u7684(*^\u25bd^*) \u590d\u6742\u5ea6\u53ef\u4ee5\u8fc7BZOJ\u7684\u6570\u636e\n}\n```\n",
        "postTime": 1534816214,
        "uid": 98278,
        "name": "\u67d2\u8449\u706c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u53d1\u5e03\u4e00\u7bc7\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$\u7684\u9898\u89e3\n***\n# $\\text{Prev 1}$\uff1a\u8bfb\u61c2\u9898\u610f  \n\u4ec0\u4e48\u6811\u7f51\u554a\uff0c\u660e\u660e\u5c31\u662f\u666e\u901a\u7684**\u65e0\u6839\u6811**\u4e48\u2026\u2026  \n\u4e00\u76f4\u5230\u504f\u5fc3\u8ddd\uff08$\\text{E CCF}$\uff08\u4e3a\u4ec0\u4e48\u53bb\u4e0d\u6389\u8fd9\u4e2a\u7a7a\u683c\uff1f\uff09\uff09\u4ee5\u524d\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\u2026\u2026  \n\u7136\u540e\u9898\u76ee\u8981\u6c42**\u76f4\u5f84**\u4e0a\u7684\u4e00\u6bb5\u8def\u5f84\uff0c\u4f7f\u5176\u5728**\u957f\u5ea6**$\\leq s$\u7684\u524d\u63d0\u4e0b\u504f\u5fc3\u8ddd\u6700\u5c0f\u3002  \n\u628a\u9898\u76ee\u4ece$\\text{CCF}$\u8bed\u8a00\u7ffb\u8bd1\u6210\u73b0\u4ee3\u6c49\u8bed\uff0c\u5c31\u662f\uff1a  \n\n> \u7ed9\u5b9a\u4e00\u68f5\u5e26\u8fb9\u6743\u65e0\u6839\u6811\uff0c\u5728\u5176\u76f4\u5f84\u4e0a\u6c42\u51fa\u4e00\u6bb5\u957f\u5ea6\u4e0d\u8d85\u8fc7$s$\u7684\u8def\u5f84$F$\uff0c\u4f7f\u5f97\u79bb\u8def\u5f84\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\u6700\u77ed\u3002  \n\n# $\\text{Prev 2}$\uff1a\u76f4\u5f84\u7684\u5b9a\u4e49\u4e0e\u6027\u8d28\u53ca\u5176\u5f15\u53d1\u7684\u601d\u8003  \n\u9996\u5148\uff0c\u660e\u767d\u4e00\u4ef6\u4e8b\uff1a\u5bf9\u4e8e**\u76f4\u5f84\u4e0a\u4efb\u610f\u4e00\u4e2a\u70b9**\uff0c\u5230\u5b83\u672c\u8eab\u7684\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f**\u76f4\u5f84\u7684\u67d0\u4e2a\u7aef\u70b9**\u3002\u7406\u7531\u5f88\u7b80\u5355\uff1a\u5982\u679c\u5b58\u5728\u67d0\u4e2a\u70b9$P$\u4f7f\u5f97\u76f4\u5f84\u4e0a\u7684\u70b9$A$\u5230\u5176\u7684\u8ddd\u79bb\u8d85\u8fc7\u70b9$A$\u5230\u76f4\u5f84\u7684\u4e24\u7aef\u8ddd\u79bb\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\u4e0e$A$\u5206\u79bb\u5f00\uff0c\u5e76\u4e14\u63a5\u4e0a$AP$\u5f97\u5230\u4e00\u6761\u6bd4\u76f4\u5f84\u66f4\u957f\u7684\u8def\u5f84\u3002\u4f46\u662f\u6839\u636e\u5b9a\u4e49\uff0c\u76f4\u5f84\u5e94\u8be5\u662f\u6574\u68f5\u6811\u4e0a\u7684\u6700\u957f\u8def\u5f84\uff0c\u56e0\u6b64\uff0c\u4e4b\u524d\u7684\u90a3\u6761\u76f4\u5f84\u662f\u4e00\u6761*\u5047\u7684\u76f4\u5f84*\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5047\u8bbe\u4e0d\u6210\u7acb\u3002  \n\u7136\u540e\u8003\u8651\u5bf9\u4e8e\u76f4\u5f84\u4e0a\u7684\u4e00\u6761\u8def\u5f84$F$\uff0c\u6709\u54ea\u4e9b\u56e0\u7d20\u4f1a\u5bf9\u5176\u504f\u5fc3\u8ddd\u9020\u6210\u5f71\u54cd\u3002    \n\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\uff0c\n```cpp\nusing \u76f4\u5f84::\u8def\u5f84;\n```  \n\u9996\u5148\uff0c\u80af\u5b9a\u4f1a\u6709\u8def\u5f84\u4e24\u7aef\u70b9\u5206\u522b\u5230\u76f4\u5f84\u4e24\u7aef\u70b9\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\u5e76\u4e14\u8bbe\u8def\u5f84\u7aef\u70b9\u3001\u76f4\u5f84\u7aef\u70b9\u5206\u522b\u4e3a$A_1,A_2,P_1,P_2$\uff0c\u5982\u679c\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u7684\u662f$A_1,P_1$\u6216\u8005$A_2,P_2$\uff0c\u90a3\u4e48$A_1P_1$\u8def\u5f84$F$\u7684\u4ea4\u70b9\u53ea\u6709$A_1$\uff0c$A_2P_2$\u4e0e\u8def\u5f84$F$\u7684\u4ea4\u70b9\u53ea\u6709$A_2$\u3002  \n\u90a3\u4e48\uff0c\u8def\u5f84$F$\u7684\u957f\u5ea6\u8d8a\u957f\u7b54\u6848\u4e00\u5b9a\u8d8a\u4f18\u5417\uff1f  \n~~\u663e\u7136~~\u4e0d\u662f\u8fd9\u6837\u7684\u3002  \n\u56e0\u4e3a\u521a\u521a\u53ea\u8003\u8651\u4e86$A_1,A_2$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\u4f46\u662f\u8def\u5f84\u4e0a\u7684\u5176\u5b83\u70b9\u5bf9\u7b54\u6848\u5176\u5b9e\u4e5f\u6709\u8d21\u732e\u3002\u6bd4\u5982\u8bf4\u5bf9\u4e8e\u4e0b\u9762\u7684\u8fd9\u5e45\u56fe\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/32613.png)  \n\u5f53$s=18$\u65f6\u7b54\u6848\u5e94\u8be5\u4e3a$3$\uff0c\u4f46\u662f\u5982\u679c\u53ea\u8003\u8651$A_1,A_2$\u7684\u8d21\u732e\uff0c\u8ba1\u7b97\u7ed3\u679c\u5219\u4f1a\u53d8\u6210$0$\u3002  \n\u4ece\u4e0a\u56fe\u4e0d\u96be\u770b\u51fa\uff0c\u8def\u5f84\u4e0a\u5176\u5b83\u70b9$Q$\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\uff1a**\u4e0d\u7ecf\u8fc7\u8def\u5f84\u4e0a\u4efb\u4f55\u5176\u5b83\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u70b9\u7684\u8ddd\u79bb**\u3002~~\u4e0d\u96be~~\u53d1\u73b0\u5b9e\u9645\u8ba1\u7b97\u7b54\u6848\u65f6\u5373\u4f7f\u628a\u8def\u5f84\u7aef\u70b9\u7684\u8fd9\u79cd\u201c\u8d21\u732e\u201d\u8ba1\u5165\u603b\u8d21\u732e\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff08\u56e0\u4e3a\u7aef\u70b9\u7684\u7b2c\u4e00\u79cd\u8d21\u732e\u66f4\u5927\uff0c\u201c\u63a9\u76d6\u4f4f\u4e86\u201d\u8fd9\u79cd\u8d21\u732e\uff09\u3002  \n\u90a3\u4e48\u5982\u679c\u4e00\u68f5\u6811\u6709\u591a\u6761\u76f4\u5f84\u600e\u4e48\u529e\u5462\uff1f\u6ca1\u5173\u7cfb\uff0c**\u4efb\u9009\u4e00\u6761**\u5373\u53ef\u3002\u9996\u5148\uff0c\u4e24\u6761\u76f4\u5f84\u4e0d\u53ef\u80fd\u4e0d\u76f8\u4ea4\u3002\u628a\u76f8\u4ea4\u7684\u90a3\u4e00\u90e8\u5206\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u5269\u4e0b\u7684\u76f4\u5f84\u90e8\u5206\u5c31\u4f1a**\u5173\u4e8e\u8fd9\u4e2a\u70b9\u5bf9\u79f0**\u3002\u800c\u5982\u679c\u9009\u62e9\u7684\u8def\u5f84\u5305\u542b\u4e86\u5206\u53c9\u70b9\uff0c\u5176\u504f\u5fc3\u8ddd\u5c31\u662f\u6052\u5b9a\u7684\uff08\u8fd9\u4e2a\u5206\u53c9\u70b9\u5230\u76f4\u5f84\u672b\u7aef\u7684\u8ddd\u79bb\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u4efb\u9009\u4e00\u6761\u76f4\u5f84\u6c42\u89e3\u3002  \n# $\\text{Main}$\uff1a\u89e3\u9898\u8fc7\u7a0b  \n\u672c\u9898\u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff0c\u4f46\u662f\u4e3a\u4e86\u4fee\u6539\u65b9\u4fbf\uff0c\u4e5f\u4e3a\u4e86\u964d\u4f4e\u7a7a\u95f4\u95f4\u590d\u6742\u5ea6\uff08[$\\text{BZOJ}$\u4e0a\u8fd9\u9053\u9898\u7684\u6570\u636e\u89c4\u6a21\u88ab\u589e\u5f3a\u5230\u4e86$n \\leq 5 \\times 10^5$](https://www.lydsy.com/JudgeOnline/problem.php?id=1999)\uff09\u6b64\u5904\u4ecd\u7136\u4f7f\u7528\u90bb\u63a5\u8868\u5b58\u56fe\u3002  \n```cpp\nstruct Point { //\u70b9\n\tint dist = 0, head = 0;\n\tint fa = 0, fa_dist = 0; //\u4ee5\u76f4\u5f84\u4e00\u4e2a\u7aef\u70b9\u4e3a\u6839\uff0c\u7236\u8282\u70b9\u7f16\u53f7\u53ca\u5230\u5176\u8ddd\u79bb\n\tint cur_dist = 0; //\u540e\u9762\u7528\u6765\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\n\tbool vis = false;\n} pt[305];\nstruct Path { //\u8fb9\n\tint end = 0, weight = 0;\n\tint next = 0;\n\n\tPath(int __end = 0, int __cost = 0, int __next = 0) :\n\t\tend(__end), weight(__cost), next(__next) {}\n} ph[605];\n```\n```cpp\nvoid set_path(int u, int v, int w) {\n\tph[++ptr] = Path(v, w, pt[u].head), pt[u].head = ptr;\n\tph[++ptr] = Path(u, w, pt[v].head), pt[v].head = ptr;\n}//\u8fd9\u4e2a\u8fde\u8fb9\u51fd\u6570\u7684\u5199\u6cd5\u6765\u81eapanda_2134\u5927\u7237\n```\n\u63a5\u4e0b\u6765\u662f\u4e24\u6b21$\\text{DFS}$\u6c42\u51fa\u76f4\u5f84\u3002  \n```cpp\nvoid dfs1(int p) { //p\u8868\u793a\u6b63\u5728\u8bbf\u95ee\u54ea\u4e2a\u70b9\n\tif(pt[p].vis) return;\n\tpt[p].vis = true; //\u505a\u597d\u6807\u8bb0\n\tfor(int i = pt[p].head; i; i = ph[i].next) {\n\t\tint s = ph[i].end;\n\t\tif(pt[s].vis) continue;\n\t\tpt[s].fa = p,\n\t\tpt[s].fa_dist = ph[i].weight,\n\t\tpt[s].dist = pt[p].dist + ph[i].weight;\n\t\tdfs1(s); //\u6ce8\u610f\u8981\u5728\u8bbf\u95ee\u5b50\u8282\u70b9\u524d\u7ef4\u62a4\u597d\u5b50\u8282\u70b9\u4fe1\u606f\uff01\n\t}\n}\n```\n\uff08\u8fd9\u662f\u4e3b\u51fd\u6570\u4e2d\u5bf9\u5e94\u90e8\u5206\uff09  \n```cpp\ndfs1(1);\nint rt, tempx = 0; //tempx\u4fdd\u5b58\u5df2\u7ecf\u627e\u5230\u7684\u6700\u8fdc\u70b9\nfor(int i = 1; i <= n; ++i) {\n\tpt[i].vis = false;\n\tif(pt[i].dist > pt[tempx].dist)\n\t\ttempx = i;\n}\nrt = tempx, tempx = 0;\nfor(int i = 1; i <= n; ++i)\n\tpt[i].dist = pt[i].fa =\n\tpt[i].fa_dist = 0;\n\ndfs1(rt);\nfor(int i = 1; i <= n; ++i) {\n\tpt[i].vis = false;\n\tif(pt[i].dist > pt[tempx].dist)\n\t\ttempx = i;\n}\nint dist1 = 0, dist2 = 0, tot;\nwhile(pt[tempx].fa) //\u5c06\u76f4\u5f84\u6309\u7167\u4ece\u53f6\u5b50\u5230\u6839\u7684\u987a\u5e8f\u6253\u5370\u5230\u6570\u7ec4del\u4e2d\n\tdist2 += pt[tempx].fa_dist,\n\tdel[++m] = tempx,\n\tpt[tempx].vis = true,\n\ttempx = pt[tempx].fa;\npt[rt].vis = true, del[++m] = tempx;\ntot = dist2;\n```  \n\u7136\u540e\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9**\u4ee5\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4ea7\u751f\u7684\u8d21\u732e\u503c**\uff08\u901a\u8fc7\u4e00\u6b21$DFS$\uff0c\u4e3b\u51fd\u6570\u4e2d\u7684\u8c03\u7528\u8fc7\u7a0b~~\u6bd4\u8f83\u7b80\u5355\uff0c~~\u7559\u7ed9\u8bfb\u8005\u81ea\u5df1\u601d\u8003\uff09  \n```cpp\nint dfs2(int p) {\n\tpt[p].vis = true;\n\tint temp = 0;\n\tfor(int i = pt[p].head; i; i = ph[i].next) {\n\t\tint s = ph[i].end;\n\t\tif(pt[s].vis) continue;\n\t\tpt[s].dist = pt[p].dist + ph[i].weight;\n\t\tdfs2(s);\n\t\ttemp = std::max(temp, pt[s].dist);\n\t}\n\treturn temp;\n} \n```\n\u663e\u7136\uff0c\u4e0a\u9762\u7684\u6240\u6709\u8fc7\u7a0b\u90fd\u662f$O(n)$\u7684\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4f1a\u6709\u5176\u5b83\u7684$O(n^2)$\u7684\u5199\u6cd5\u5462\uff1f  \n\uff08**\u4e2a\u4eba\u8ba4\u4e3a\u672c\u9898\u7684\u4e3b\u8981\u65f6\u95f4\u590d\u6742\u5ea6\u6765\u81ea\u4ee5\u4e0b\u8fc7\u7a0b\uff1a**\uff09  \n\u63a5\u7740\u662f\u679a\u4e3e\u6240\u9009\u8def\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u5e76\u4e14\u8ba1\u7b97\u7b54\u6848\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u65f6\u95f4\u590d\u6742\u9053\u662f$O(n^2)$\uff0c\u6240\u4ee5\uff0c\u7b97\u6cd5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2)$\u3002\u5bf9\u4e8e\u5b98\u65b9\u6570\u636e$n \\leq 300$\u8f7b\u677e\u901a\u8fc7\u3002  \n\n## \u5b8c\u7ed3\u6492\u82b1\uff1f\n\n\u53ef\u662f\u6700\u540e\u9762\u4e00\u90e8\u5206\u4ee3\u7801\u5462\uff1f\u4e0d\u5b58\u5728\u7684\uff01**\u672c\u9898\u89e3\u662f$O(n)$\u7684\u9898\u89e3**\uff0c\u600e\u4e48\u53ef\u80fd\u6709$O(n^2)$\u7684\u4ee3\u7801\uff1f  \n\u4ed4\u7ec6\u770b\u4e00\u4e0b\u5199\u51fa\u7684$O(n^2)$\u7684\u4ee3\u7801\uff08\u6ca1\u5199\u5b8c\u7684\u8bf7\u81ea\u89c9\u5199\u5b8c\uff09\u3002\u8fd9\u4e0d\u5c31\u662f\u4e00\u4e2a\u7ebf\u6027\u7684\u52a8\u6001\u89c4\u5212\u561b\uff01  \n\u628a\u8bb0\u5f55\u4e0b\u6765\u7684\u76f4\u5f84\u5e8f\u5217\u770b\u6210\u533a\u95f4\uff0c\u672c\u9898\u53d8\u6210\u4e86**\u6c42\u4e00\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7$s$\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u5176\u4e2d\u6240\u6709\u5143\u7d20\u7684\u8d21\u732e\u503c\u7684\u6700\u5927\u503c\u6700\u5c0f**\u3002  \n\u8fd9\u79cd\u52a8\u6001\u89c4\u5212\u60f3\u5230\u4ec0\u4e48\uff1f\u6ca1\u9519\uff0c**\u5355\u8c03\u961f\u5217**\uff01  \n\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u5143\u7d20\u7684\u7b2c\u4e8c\u79cd\u8d21\u732e\u503c\uff0c\u7b2c\u4e00\u79cd\u8d21\u732e\u53ef\u4ee5\u5728\u5de6/\u53f3\u7aef\u70b9\u79fb\u52a8\u7684\u540c\u65f6\u8ba1\u7b97\u3002\u5177\u4f53\u5199\u6cd5\u89c1\u4ee5\u4e0b\u4ee3\u7801\u3002  \n```cpp\nstd::deque<int> q; //\u9700\u8981#include <deque>\uff08<queue>\u884c\uff09\nint ans = 2147483647; //\u6b63\u65e0\u7a77\nfor(int i = 1, j = 1; i <= m; dist2 -= pt[del[i]].fa_dist, ++i) {\n//dist1\u662f\u5230\u8d77\u59cb\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u521d\u59cb\u5316\u4e3a0\n//dist2\u662f\u5230\u7ec8\u6b62\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u521d\u59cb\u5316\u4e3a\u76f4\u5f84\u957f\u5ea6\n\tpt[del[i]].cur_dist = dist2; //cur_dist\u6210\u5458\u8868\u793a\u8fd9\u4e2a\u70b9\u79bb\u7ec8\u70b9\u7684\u8ddd\u79bb\uff08\u6ca1\u5199\u597d\uff0cdist\u6700\u540e\u7528\u6765\u4fdd\u5b58\u7b2c\u4e8c\u79cd\u8d21\u732e\u503c\u4e86\uff09\n\twhile(!q.empty() && pt[q.front()].cur_dist - s > pt[del[i]].cur_dist)\n\t\tq.pop_front();\n\twhile(j < i && tot - dist1 - dist2 > s)\n\t\tdist1 += pt[del[j++]].fa_dist;\n\twhile(!q.empty() && pt[q.back()].dist < pt[del[i]].dist)\n\t\tq.pop_back();\n\tq.push_back(del[i]);\n\tint temp = std::max(dist1, dist2);\n\ttemp = std::max(temp, pt[q.front()].dist);\n\tans = std::min(temp, ans); //\u72b6\u6001\u8f6c\u79fb\n}\n```  \n# $\\text{End}$\uff1a\u603b\u7ed3\n\t1\u3001\u6211\u662f\u771f\u7684\u6ca1\u770b\u51fa\u6765\u90a3\u4e2a\u201c\u4e2d\u5fc3\u201d\u7684\u6982\u5ff5\u6709\u4ec0\u4e48\u7528\u2026\u2026\n    2\u3001\u5373\u4f7f\u539f\u59cb\u7684\u6570\u636e\u8303\u56f4\u5f88\u6c34\uff0c\u4e5f\u8981\u5c3d\u529b\u4f18\u5316\u3002AC\u4e0d\u662f\u6211\u4eec\u7684\u7ec8\u6781\u76ee\u6807\uff0c\u6211\u4eec\u7684\u7ec8\u6781\u76ee\u6807\u662f\u83b7\u5f97\u7ecf\u9a8c\u3002\n\n\u4ee5\u4e0a\u5c31\u662f\u6211\u8981\u8bf4\u7684\u5168\u90e8\u5185\u5bb9\u3002\u7531\u4e8e\u6c34\u5e73\u6240\u9650\uff0c\u5982\u679c\u5927\u5bb6\u6709\u4ec0\u4e48\u4e0d\u6ee1\u610f\u7684\u5730\u65b9\u6216\u662f\u4ec0\u4e48\u5efa\u8bae\u60f3\u8981\u63d0\u51fa\uff0c\u6b22\u8fce\u968f\u65f6\u79c1\u4fe1\u6211\uff01",
        "postTime": 1536653751,
        "uid": 67387,
        "name": "Mosklia",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u5728\u8ba8\u8bba\u672c\u9898\u7684\u505a\u6cd5\u524d\uff0c\u6709\u5fc5\u8981\u5148\u5206\u6790\u4e00\u4e0b\u95ee\u9898\u7684\u4e00\u4e9b\u7279\u6b8a\u6027\u8d28\u3002\n\n\u9898\u89e3\u533a\u90e8\u5206\u9898\u89e3\u5728\u6027\u8d28\u5206\u6790\u7b49\u65b9\u9762\u5b58\u5728\u4e00\u5b9a\u6b20\u7f3a\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u80fd\u4f1a\u5f71\u54cd\u8bfb\u8005\u7406\u89e3\u505a\u6cd5\u3002\n\n## \u5206\u6790\n\n\u5148\u7ed9\u51fa\u4e00\u4e9b\u8bb0\u53f7\uff1a\n\n- $P(s,t)$\uff1a\u4ee3\u8868\u6811\u4e0a\u4e24\u70b9 $s,t$ \u4e4b\u95f4\u7684\u8def\u5f84\uff08\u7684\u957f\u5ea6\uff09\u3002\n- $D(s,t)$\uff1a\u4ee3\u8868\u6811\u4e0a\u4e24\u70b9 $s,t$ \u4e4b\u95f4\u7684\u8def\u5f84\uff08\u7684\u957f\u5ea6\uff09\uff0c\u4e14\u8fd9\u6761\u8def\u5f84\u662f\u6811\u7684\u6700\u957f\u7b80\u5355\u8def\u5f84\uff08\u5373\u6811\u7684\u76f4\u5f84\uff09\u3002\n\n\u53e6\u5916\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u5e76\u4f7f\u5f97\u8868\u610f\u6e05\u6670\uff0c\u539f\u9898\u4e2d\u63d0\u5230\u7684\u300c\u6811\u7684\u6838\u300d\u5747\u79f0\u4e3a\u300c\u8def\u5f84\u300d\u3002\n\n\u4ee5\u4e0b\u5f15\u7406\u548c\u5b9a\u7406\u57fa\u4e8e**\u56fe\u4e0a\u6240\u6709\u8fb9\u6743\u5747\u4e3a\u6b63**\u8fd9\u4e00\u524d\u63d0\u63a8\u51fa\u3002\n\n**\u5f15\u7406 1**\uff1a\u5bf9\u4e8e\u4e00\u68f5\u6240\u6709\u8fb9\u6743\u5747\u4e3a\u6b63\u7684\u6811\uff0c\u5982\u679c\u5176\u5b58\u5728\u591a\u6761\u76f4\u5f84\uff0c\u5219\u6811\u4e0a\u5fc5\u5b58\u5728\u4e00\u70b9 $p$\uff0c\u4f7f\u5f97\u6240\u6709\u76f4\u5f84\u5747\u7ecf\u8fc7\u8be5\u70b9\uff08\u7b80\u5355\u6765\u8bf4\uff0c\u6240\u6709\u76f4\u5f84\u5fc5\u4ea4\u4e8e\u81f3\u5c11\u4e00\u70b9\uff09\u3002\n\n**\u8bc1\u660e**\uff1a\u7528\u53cd\u8bc1\u6cd5\u3002\n\n\u5982\u679c\u5b58\u5728\u4e24\u6761\u76f4\u5f84 $D(s,t),D(s^\\prime,t^\\prime)$ \u4e0d\u76f8\u4ea4\uff0c\u5219 $\\exists a \\in D(s,t), b \\in D(s^\\prime,t^\\prime)$\uff0c\u4e14 $\\forall p \\in P(a,b) - \\{a, b\\}$\uff0c$p \\notin D(s, t)$\uff0c$p \\notin D(s^\\prime, t^\\prime)$\uff08\u5373\uff0c$P(a,b)$ \u9664\u4e86 $a,b$ \u4e24\u70b9\u4e4b\u5916\uff0c\u5176\u4ed6\u70b9\u5747\u4e0d\u5728\u8fd9\u4e24\u6761\u76f4\u5f84\u4e0a\uff09\u3002\u8bbe $d_1 = \\max \\{P(s,a), P(a,t)\\}$\uff0c$d_2 = \\max \\{P(s^\\prime,b), P(b,t^\\prime)\\}$\uff0c\u6613\u77e5 $d_1,d_2 \\geq \\dfrac{1}{2}D(s, t)$\uff0c\u4e8e\u662f $d_1 + d_2 + P(a,b) > D(s,t)$\uff0c\u5373 $d_1,d_2,P(a,b)$ \u8fd9\u4e09\u6bb5\u62fc\u63a5\u6210\u4e86\u4e00\u6761\u6bd4 $D(s,t), D(s^\\prime,t^\\prime)$ \u8fd9\u4e24\u6761\u76f4\u5f84\u66f4\u957f\u7684\u7b80\u5355\u8def\u5f84\uff0c\u51fa\u73b0\u4e86\u77db\u76fe\u3002$\\square$\n\n\uff08\u5565\uff0c\u4f60\u8bf4\u53ef\u80fd\u6709\u4e09\u6761\u76f4\u5f84\u4e24\u4e24\u76f8\u4ea4\uff0c\u4f46\u4e0d\u4ea4\u4e8e\u4e00\u70b9\u7684\u60c5\u51b5\uff1f\u753b\u56fe\u540e\u9a6c\u4e0a\u5c31\u53d1\u73b0\u6709\u73af\u4e86\u3002\uff09\n\n**\u5b9a\u7406 1**\uff1a\u5bf9\u4e8e\u4e00\u68f5\u6240\u6709\u8fb9\u6743\u5747\u4e3a\u6b63\u7684\u6811\uff0c\u5982\u679c\u5176\u5b58\u5728\u591a\u6761\u76f4\u5f84\uff0c\u5219\u5404\u76f4\u5f84\u7684\u4e2d\u70b9\uff08\u4e0d\u4e00\u5b9a\u6070\u597d\u662f\u67d0\u4e2a\u8282\u70b9\uff0c\u53ef\u80fd\u5728\u67d0\u6761\u8fb9\u7684\u5185\u90e8\uff09\u662f\u552f\u4e00\u7684\u3002\n\n**\u8bc1\u660e**\uff1a\u8fd8\u662f\u7528\u53cd\u8bc1\u6cd5\u3002\n\n\u8bbe\u6811\u7684\u4e24\u6761\u76f4\u5f84\u5206\u522b\u4e3a $D(s, t), D(s^\\prime,t^\\prime)$\uff0c\u5b83\u4eec\u7684\u4e2d\u70b9\u5206\u522b\u4e3a $m, m^\\prime$\uff0c\u4e14\u4e24\u4e2a\u4e2d\u70b9\u4e0d\u91cd\u5408\u3002\u53ef\u4ee5\u63a8\u51fa\uff0c$m^\\prime \\in D(s, t)$\uff08\u5426\u5219\u7531 **\u5f15\u7406 1**\uff0c\u4e24\u76f4\u5f84\u5fc5\u5b9a\u5b58\u5728\u4e00\u4e2a\u4ea4\u70b9 $p$\u3002\u8bbe $d_1 = \\max \\{P(s,p), P(p,t)\\}$\uff0c$d_2 = \\max \\{P(s^\\prime,p), P(p,t^\\prime)\\}$\uff0c\u5219 $d_1, d_2 > \\dfrac{1}{2}D(s, t)$\uff0c$d_1 + d_2 > D(s,t)$\uff0c\u4e0e $D(s,t)$ \u662f\u76f4\u5f84\u77db\u76fe\uff09\u3002\n\n\u4e8e\u662f\u5b9e\u9645\u60c5\u51b5\u5927\u81f4\u5982\u4e0b\u56fe\u6240\u793a\uff08\u7565\u53bb\u4e86\u6811\u4e0a\u7684\u5176\u4ed6\u4e0d\u5fc5\u8981\u70b9\uff0c\u4e0d\u59a8\u8bbe $m^\\prime$ \u4f4d\u4e8e\u66f4\u9760\u8fd1 $t$ \u7684\u4e00\u4fa7\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/oaiyl6ql.png)\n\n\u5219 $P(s,s^\\prime) = P(s, m^\\prime) + P(m^\\prime + s^\\prime) > \\dfrac{1}{2}D(s, t) + \\dfrac{1}{2}D(s^\\prime, t^\\prime) = D(s,t)$\uff0c\u4e0e $D(s,t)$ \u662f\u76f4\u5f84\u77db\u76fe\u3002$\\square$\n\n**\u5f15\u7406 2.1**\uff1a\u82e5\u4e24\u6761\u76f4\u5f84\u6709\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u5219\u4e8e\u91cd\u53e0\u90e8\u5206\u540c\u4e00\u7aef\u70b9\u5f15\u51fa\u7684\u4e24\u6761\u76f4\u5f84\u7684\u975e\u91cd\u53e0\u7684\u90e8\u5206\u7684\u957f\u5ea6\u76f8\u7b49\u3002\n\n**\u8bc1\u660e**\uff1a\u8bbe\u4e24\u6761\u76f4\u5f84\u5206\u522b\u4e3a $D(a, c)$\uff0c$D(b, d)$\uff0c\u91cd\u53e0\u90e8\u5206\u4e3a $P(s,t)$\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff08$P(s,t)$ \u53ef\u80fd\u662f\u4e00\u4e2a\u70b9\uff0c\u5373 $s = t$\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/f587t21u.png)\n\n\u5982\u679c $P(a,s) \\neq P(b,s)$\uff08\u6b64\u65f6\u5bb9\u6613\u5f97\u5230 $P(c,t) \\neq P(d,t)$\uff09\uff0c\u5219\u53d6 $P(a, s)$ \u548c $P(b,s)$ \u4e2d\u8f83\u957f\u7684\u4e00\u6761\uff08\u957f\u5ea6\u8bbe\u4e3a $d_1$\uff09\uff0c$P(c, t)$ \u548c $P(d,t)$ \u4e2d\u8f83\u957f\u7684\u4e00\u6761\uff08\u957f\u5ea6\u8bbe\u4e3a $d_2$\uff09\uff0c\u5219\u7531\u4e8e $d_1$ \u548c $d_2$ \u4e0d\u5728\u540c\u4e00\u6761\u76f4\u5f84\u4e0a\uff08\u5426\u5219\u63a8\u51fa $D(a,c) > D(b,d)$\uff0c\u51fa\u73b0\u77db\u76fe\uff09\u5219 $d_1 + P(s,t) + d_2 > D(a,c)$\uff0c\u51fa\u73b0\u4e86\u77db\u76fe\u3002$\\square$\n\n**\u5f15\u7406 2.2**\uff1a\u82e5\u8def\u5f84\u5b58\u5728\u4e0d\u4f4d\u4e8e\u76f4\u5f84\u4e0a\u7684\u90e8\u5206\uff0c\u8fd9\u6761\u8def\u5f84\u5bf9\u5e94\u7684\u504f\u5fc3\u8ddd\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u5168\u90e8\u4f4d\u4e8e\u76f4\u5f84\u4e0a\u7684\u8def\u5f84\u7684\u504f\u5fc3\u8ddd\u7684**\u6700\u5c0f\u503c**\u66f4\u5c0f\u3002\n\n**\u8bc1\u660e**\uff1a\u539f\u547d\u9898\u7b49\u4ef7\u4e8e\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u4e0d\u5b8c\u5168\u4f4d\u4e8e\uff08\u6216\u8005\u5b8c\u5168\u4e0d\u4f4d\u4e8e\uff09\u76f4\u5f84\u4e0a\u7684\u8def\u5f84 $F$\uff0c\u90fd\u5b58\u5728\u4e00\u6761\u5b8c\u5168\u4f4d\u4e8e\u76f4\u5f84\u4e0a\u7684\u8def\u5f84 $F^\\prime$\uff0c\u4f7f\u5f97 $\\operatorname{ECC}(F) \\geq \\operatorname{ECC}(F^\\prime)$\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u6784\u9020\u6027\u7684\u8bc1\u660e\u3002\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u6211\u4eec\u91c7\u7528\u5982\u4e0b\u65b9\u6cd5\u6784\u9020\uff1a\u5bf9\u4e8e\u4e00\u6761\u4e0d\u5b8c\u5168\u4f4d\u4e8e\uff08\u6216\u8005\u5b8c\u5168\u4e0d\u4f4d\u4e8e\uff09\u76f4\u5f84\u4e0a\u7684\u8def\u5f84 $F$\uff0c\u627e\u5230\u8be5\u8def\u5f84\u4e0e\u76f4\u5f84\u7684\u4e00\u4e2a\u4ea4\u70b9 $m$\uff08\u5fc5\u8981\u65f6\u901a\u8fc7\u5ef6\u957f $F$ \u6765\u627e\u5230\u4ea4\u70b9\uff09\uff0c\u7136\u540e\u518d\u8bc1\u660e $P(m,m)$ \u8fd9\u6761\u8def\u5f84\u81f3\u5c11\u4e0d\u4f1a\u6bd4 $F$ \u66f4\u52a3\u3002\n\n\u6cbf\u7528 **\u5f15\u7406 2.1** \u4e2d\u51fa\u73b0\u7684\u8bb0\u53f7\uff0c\u6784\u5efa\u4e0b\u56fe\uff08\u6811\u4e0a\u7684\u90e8\u5206\u8282\u70b9\u7565\u53bb\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9iwxoi6p.png)\n\n\u6ce8\uff1a\n\n1. \u52a0\u7c97\u7684\u70b9\u4e00\u5b9a\u4f4d\u4e8e\u6811\u7684\u67d0\u6761\u76f4\u5f84\u4e0a\uff0c\u672a\u52a0\u7c97\u7684\u70b9\u4e00\u5b9a\u4e0d\u4f4d\u4e8e\u6811\u7684\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u4e0a\uff0c\u5373 $P(p,v)$ \u8fd9\u6761\u8def\u5f84\u4e0d\u662f\u6811\u7684\u76f4\u5f84\u3002\n2. \u5176\u5b9e\u539f\u56fe\u6709\u591a\u5c11\u6761\u76f4\u5f84\u5bf9\u672c\u5f15\u7406\u8bc1\u660e\u6ca1\u6709\u5f71\u54cd\uff0c~~\u56fe\u4e0a\u4fdd\u7559\u591a\u6761\u76f4\u5f84\u53ea\u662f\u5fd8\u8bb0\u5220\u4e86~~\u3002\n\n\u73b0\u5728\u5f00\u59cb\u8ba8\u8bba\u3002\n\n1. \u8003\u8651 $P(p,u)$ \u8fd9\u6761\u8def\u5f84\u3002\u8ddd\u79bb $P(p,u)$ \u6700\u8fdc\u7684\u70b9\u662f\u54ea\u4e2a\u70b9\uff0c\u662f $v$ \u5417\uff1f\u56e0\u4e3a\uff0c$P(b,m) + P(m,v) < P(b,m) + P(m,d) = D(b,d)$\uff0c\u5373 $P(m,v) < P(m,d)$\uff0c\u56e0\u6b64\u8ddd\u79bb $u$ \u6700\u8fdc\u7684\u70b9\uff0c\u662f\u76f4\u5f84\u7684\u7aef\u70b9\uff0c\u4e0d\u662f $v$ \u8fd9\u6837\u4e00\u4e2a\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\n2. \u73b0\u5728\u8003\u8651 $P(u,v)$ \u8fd9\u6761\u8def\u5f84\u3002\u8ddd\u79bb $P(u,v)$ \u6700\u8fdc\u7684\u70b9\u662f\u54ea\u4e2a\u70b9\uff0c\u662f $p$ \u5417\uff1f\u5982\u679c $P(p,u) \\geq P(a,m)$\uff08\u5176\u4f59\u60c5\u51b5\u540c\u7406\uff09\uff0c\u5219 $D(a,c) = P(a,m) + P(m,c) \\leq P(p,u) + P(m,c) < P(p,u) + P(u,m) + P(m,c) = P(p,c)$\uff0c\u4e0e $D(a,c)$ \u662f\u76f4\u5f84\u77db\u76fe\u3002\u56e0\u6b64\u8ddd\u79bb $P(u,v)$ \u6700\u8fdc\u7684\u70b9\uff0c\u4ecd\u7136\u662f\u76f4\u5f84\u7684\u7aef\u70b9\u3002\n3. \u6700\u540e\u8003\u8651 $P(m,m)$ \u8fd9\u6761\u8def\u5f84\u3002\u8ddd\u79bb $P(m,m)$ \u6700\u8fdc\u7684\u70b9\u662f\u54ea\u4e2a\u70b9\uff0c\u662f $p$ \u6216\u8005 $v$ \u5417\uff1f\u6ce8\u610f\u5230 $p,v$ \u5747\u4e0d\u5728\u76f4\u5f84\u4e0a\uff0c\u4e8e\u662f $P(b,m) + P(m,p) < P(b,m) + P(m,d) = D(b,d)$\uff0c\u5373 $P(m,p) < P(m,d)$\uff08\u8fd9\u91cc\u53ea\u4e3e\u4e86 $p$ \u7684\u60c5\u51b5\uff0c$v$ \u540c\u7406\uff09\uff0c\u56e0\u6b64\u8ddd\u79bb $P(m,m)$ \u6700\u8fdc\u7684\u70b9\uff0c\u4ecd\u7136\u662f\u76f4\u5f84\u7684\u7aef\u70b9\u3002\n\n\uff08\u7531\u4e8e\u76f4\u5f84\u662f\u6811\u4e0a\u6700\u957f\u7b80\u5355\u8def\u5f84\u8fd9\u4e00\u6027\u8d28\uff0c\u8ddd\u79bb\u4e0a\u8ff0\u4e09\u6761\u8def\u5f84\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u5728\u4ece\u76f4\u5f84\u4e0a $m$ \u4e4b\u5916\u7684\u5176\u4ed6\u70b9\u5f15\u51fa\u7684\u652f\u94fe\u4e0a\u53d6\u5f97\uff0c\u56e0\u6b64\u8fd9\u4e9b\u652f\u94fe\u6ca1\u6709\u753b\u51fa\u3002\uff09\n\n\u5bf9\u4e8e 2 \u548c 3 \u4e24\u79cd\u60c5\u51b5\uff0c\u504f\u5fc3\u8ddd\u663e\u7136\u4e3a $\\max\\{P(a,m), P(m,c)\\}$\uff0c\u5bf9\u4e8e 1 \u8fd9\u79cd\u60c5\u51b5\uff0c\u504f\u5fc3\u8ddd\u4e3a $\\max\\{P(a,m), P(m,c)\\} + P(u,m)$\u3002\u7efc\u4e0a\uff0c1 \u548c 2 \u8fd9\u4e24\u79cd\u8def\u5f84\u4e0d\u5b8c\u5168\u4f4d\u4e8e\uff08\u6216\u8005\u5b8c\u5168\u4e0d\u4f4d\u4e8e\uff09\u76f4\u5f84\u4e0a\u7684\u65b9\u6848\uff0c\u4e0d\u4f1a\u6bd4 3 \u8fd9\u79cd\u5b8c\u5168\u4f4d\u4e8e\u76f4\u5f84\u4e0a\u7684\u65b9\u6848\u66f4\u4f18\u3002$\\square$\n\n\u56e0\u6b64\uff0c\u867d\u7136\u539f\u9898\u9650\u5236\u8def\u5f84\u53ea\u80fd\u5728\u76f4\u5f84\u4e0a\u53d6\u5f97\uff0c\u4f46\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u9650\u5236\u8003\u8651\u6240\u6709\u6ee1\u8db3\u957f\u5ea6\u9650\u5236\u7684\u8def\u5f84\uff0c\u800c\u6c42\u5f97\u7684\u6700\u5c0f\u504f\u5fc3\u8ddd\u4e0d\u53d8\u3002\n\n**\u5b9a\u7406 2**\uff1a\u8bbe\u5728\u6240\u6709\u6ee1\u8db3\u957f\u5ea6\u9650\u5236\u7684\u8def\u5f84\u4e2d\uff0c\u53d6\u5f97\u6700\u5c0f\u504f\u5fc3\u8ddd\u7684\u8def\u5f84\u5f97\u5230\u7684\u504f\u5fc3\u8ddd\u4e3a $\\textrm{minBCC}$\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f\u4e00\u6761\u76f4\u5f84\uff0c\u90fd\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u4e0d\u8d85\u8fc7 $s$ \u7684\u8def\u5f84 $F$\uff0c\u4f7f\u5f97 $\\operatorname{BCC}(F) = \\mathrm{minBCC}$\u3002\n\n**\u8bc1\u660e**\uff1a\n\n\u6cbf\u7528 **\u5f15\u7406 2.1** \u4e2d\u51fa\u73b0\u7684\u8bb0\u53f7\uff0c\u6784\u5efa\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mjb8pfen.png)\n\n\u6ce8\uff1a\u52a0\u7c97\u7684\u70b9\u4e00\u5b9a\u4f4d\u4e8e\u6811\u7684\u67d0\u6761\u76f4\u5f84\u4e0a\uff0c\u672a\u52a0\u7c97\u7684\u70b9\u4e00\u5b9a\u4e0d\u4f4d\u4e8e\u6811\u7684\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u4e0a\uff0c\u5373 $P(p,z)$ \u8fd9\u6761\u8def\u5f84\u4e0d\u662f\u6811\u7684\u76f4\u5f84\u3002\n\n\u5982\u679c\u6211\u4eec\u53d6 $P(c,y)$ \u8fd9\u6761\u8def\u5f84\uff0c\u8ddd\u79bb\u8be5\u8def\u5f84\u6700\u8fdc\u7684\u70b9\uff0c\u5bb9\u6613\u53d1\u73b0\u4e0d\u662f $p$\u3002\u53ef\u80fd\u662f $z$ \u5417\uff1f\u5b9a\u7406 1 \u544a\u8bc9\u6211\u4eec\uff0c$P(t,z) < \\dfrac{1}{2}D(a,c)$\uff0c\u4ece\u800c\u5f97\u5230 $P(x,z) < \\dfrac{1}{2}D(a,c)$\u3002\u800c $P(a,y) \\geq \\dfrac{1}{2} D(a,c)$\uff0c\u56e0\u6b64\u6392\u9664 $z$ \u662f\u6700\u8fdc\u70b9\u7684\u53ef\u80fd\u6027\u3002\n\n\uff08$d$ \u662f\u6700\u8fdc\u70b9\u65f6\uff0c$P(c,d)$ \u4e5f\u662f\u6811\u7684\u76f4\u5f84\uff0c\u4e3a\u4e86\u4e0d\u5f71\u54cd $P(s,t)$ \u662f\u76f4\u5f84\u91cd\u5408\u90e8\u5206\u8fd9\u4e00\u524d\u63d0\uff0c\u8fd9\u91cc\u5047\u5b9a $P(c,d)$ \u4e0d\u662f\u6811\u7684\u76f4\u5f84\u3002\uff09\n\n\u7efc\u4e0a\uff0c\u8fd9\u6761\u8def\u5f84\u7684\u504f\u5fc3\u8ddd $\\operatorname{ECC}(P(c,y)) = P(a,y)$\u3002\u7b80\u5355\u6bd4\u8f83\u540e\u5bb9\u6613\u53d1\u73b0\uff0c$P(t,t)$ \u8fd9\u6761\u8def\u5f84\u504f\u5fc3\u8ddd\uff08\u5bb9\u6613\u770b\u51fa\u662f $P(a,t)$\uff09\u4e00\u5b9a\u4f1a\u66f4\u5c0f\u3002\n\n\u7531\u6b64\u5f97\u51fa\uff0c\u5f53\u6240\u9009\u8def\u5f84\u4e0d\u5305\u542b\u76f4\u5f84\u7684\u91cd\u5408\u90e8\u5206\u65f6\uff0c\u8fd9\u6761\u8def\u5f84\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u8def\u5f84\u3002\n\n\u73b0\u5728\u8003\u8651\u6240\u9009\u8def\u5f84\u5305\u542b\u76f4\u5f84\u91cd\u5408\u90e8\u5206\u7684\u60c5\u51b5\u3002\u4ee5 $P(s,t)$ \u4e3a\u4f8b\uff0c\u8fd9\u65f6\u5019\u7684\u504f\u5fc3\u8ddd $\\operatorname{ECC}(P(s,t)) = \\max\\{P(m,p), P(s,a), P(t,c)\\}$\uff0c\u5982\u679c\u5c06 $P(s,t)$ \u5ef6\u4f38\u6210 $P(s,y)$ \u6216\u8005 $P(s,q)$\uff0c\u504f\u5fc3\u8ddd\u7684\u8868\u8fbe\u5f0f\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff08\u4ecd\u7136\u5b58\u5728 $P(t,c)$ \u9879\uff09\u3002\u56e0\u6b64\uff0c\u5728\u6240\u9009\u8def\u5f84\u5305\u542b\u76f4\u5f84\u91cd\u5408\u90e8\u5206\u7684\u65f6\u5019\uff0c\u76f4\u5f84\u7684\u9009\u62e9\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002$\\square$\n\n\u7531 **\u5b9a\u7406 2**\uff0c\u6211\u4eec\u4e0d\u7528\u5728\u6811\u4e0a\u7684\u6bcf\u6761\u76f4\u5f84\u4e0a\u90fd\u627e\u5230\u53d6\u5f97\u6700\u5c0f\u504f\u5fc3\u8ddd\u7684\u8def\u5f84\uff0c\u53ea\u9700\u8981\u5728\u5176\u4e2d\u4e00\u6761\u76f4\u5f84\u4e0a\u627e\u5373\u53ef\u3002\n\n## \u89e3\u6cd5\n\n### \u89e3\u6cd5\u4e00\uff1a\u679a\u4e3e\n\n\u5148\u6c42\u51fa\u6811\u7684\u4efb\u610f\u4e00\u6761\u76f4\u5f84\uff0c\u7136\u540e\u5728\u76f4\u5f84\u4e0a\u679a\u4e3e\u8def\u5f84\u7684\u7aef\u70b9\u3002 \n\n\uff08\u7531 **\u5f15\u7406 2.2**\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u6c42\u51fa\u6811\u7684\u76f4\u5f84\uff0c\u76f4\u63a5\u679a\u4e3e\u6811\u4e0a\u7684\u6240\u6709\u8def\u5f84\u3002\uff09\n\n\u63a5\u4e0b\u6765 DFS \u904d\u5386\u6574\u68f5\u6811\uff0c\u6309\u5b9a\u4e49\u6c42\u51fa\u5176\u4ed6\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\uff0c\u4ece\u800c\u5f97\u5230\u8be5\u8def\u5f84\u7684\u504f\u5fc3\u8ddd\u3002\n\n\u679a\u4e3e\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u904d\u5386\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3)$\uff0c\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n### \u89e3\u6cd5\u4e8c\uff1a\u53cc\u6307\u9488\u4f18\u5316\u679a\u4e3e\n\n\u6ce8\u610f\u5230\uff0c\u5728\u56fa\u5b9a\u8def\u5f84\u7684\u4e00\u7aef $s$ \u7684\u524d\u63d0\u4e0b\uff0c\u968f\u7740\u8def\u5f84\u957f\u5ea6\u7684\u589e\u52a0\uff0c\u504f\u5fc3\u8ddd\u4e0d\u4f1a\u53d8\u5927\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u8def\u5f84\u7684\u4e00\u7aef $s$\uff0c\u7528\u53cc\u6307\u9488\u7684\u6280\u5de7\u627e\u5230\u8ddd\u79bb $s$ \u6700\u8fdc\uff0c\u4e14\u4e0d\u8d85\u8fc7\u8def\u5f84\u957f\u5ea6\u4e0a\u9650\u7684\u70b9 $t$\uff0c\u4ece\u800c\u51cf\u5c11\u5019\u9009\u7684\u6700\u4f18\u8def\u5f84\u6570\u91cf\u3002\n\n\u679a\u4e3e\u7684\u8fc7\u7a0b\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u4e86 $O(n)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2)$\u3002\n\n### \u89e3\u6cd5\u4e09\uff1a\u4e8c\u5206\n\n\u8003\u8651\u4e8c\u5206\u504f\u5fc3\u8ddd\uff0c\u5c06\u6700\u4f18\u5316\u95ee\u9898\u53d8\u6210\u5b58\u5728\u6027\u95ee\u9898\u3002\n\n\u5b9a\u4e49\u4e00\u7aef\u662f\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u4e14\u53ea\u6709\u8be5\u70b9\u5728\u76f4\u5f84\u4e0a\uff0c\u5176\u4ed6\u70b9\u90fd\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u4e00\u6761\u94fe\u4e3a\u76f4\u5f84\u7684**\u652f\u94fe**\u3002\u8bbe $d_i$ \u4e3a\u4ece $i$ \u70b9\u5f15\u51fa\u7684\u6700\u957f\u652f\u94fe\u7684\u957f\u5ea6\u3002\n\n\u5206\u6790\u504f\u5fc3\u8ddd\u7684\u53ef\u80fd\u60c5\u51b5\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pzx0c11u.png)\n\n\u4ee5\u8def\u5f84 $P(2,4)$ \u4e3a\u4f8b\uff0c\u8ddd\u79bb\u8be5\u8def\u5f84\u6700\u8fdc\u7684\u70b9\uff0c\u53ef\u80fd\u662f $1$\uff0c$5$\uff0c$p$\u3002\u7531\u4e8e $P(1,5)$ \u662f\u76f4\u5f84\uff0c$q$ \u5230 $P(2,4)$ \u7684\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u4f1a\u6bd4 $1$ \u5230 $P(2,4)$ \u66f4\u8fdc\uff0c\u56e0\u6b64\u5728\u8ba1\u7b97\u504f\u5fc3\u8ddd\u7684\u65f6\u5019\u4e0d\u7528\u8003\u8651 $q$ \u70b9\u3002$1,5$ \u662f\u76f4\u5f84\u7684\u7aef\u70b9\uff0c\u800c $p$ \u662f\u8def\u5f84\u4e0a\u7684\u70b9\uff08\u9664\u4e86\u8def\u5f84\u7aef\u70b9\uff09\u5f15\u51fa\u7684\u652f\u94fe\u7684\u6700\u8fdc\u70b9\u3002\n\n\u5f52\u7eb3\u4e00\u4e0b\uff0c\u8bbe\u76f4\u5f84\u4e0a\u7684\u70b9\u5206\u522b\u4e3a $a_1,a_2,\\ldots,a_k$\uff0c\u53d6\u7684\u8def\u5f84\u4e3a $P(a_i,a_j)$\uff08$i \\leq j$\uff09\uff0c\u5219\u6240\u6c42\u7684\u504f\u5fc3\u8ddd\u4e3a\uff1a$\\max \\{\\max_{i < p < j} d_{a_p}, P(a_1,a_i), P(a_j, a_k)\\}$\u3002\n\n$d_i$ \u53ef\u4ee5\u5728\u6c42\u51fa\u76f4\u5f84\u540e\u901a\u8fc7\u4e00\u6b21 DFS \u6c42\u51fa\u3002\u5728\u4e8c\u5206\u504f\u5fc3\u8ddd $e$ \u540e\uff0c\u5148\u627e\u5230\u76f4\u5f84\u7684\u4e24\u7aef\u70b9 $i$\uff0c$j$\uff0c\u4f7f\u5f97 $P(a_1,a_i), P(a_j,a_k) \\leq e$\uff0c\u518d\u5224\u65ad\u8def\u5f84\u957f\u5ea6\u662f\u5426\u8d85\u8fc7\u9650\u5236\uff0c\u4ee5\u53ca $\\max_{i < p < j} d_{a_p} < e$ \u662f\u5426\u6ee1\u8db3\u3002\u5982\u679c\u4ee5\u4e0a\u6761\u4ef6\u5747\u6ee1\u8db3\uff0c\u5219\u627e\u5230\u4e00\u6761\u53ef\u884c\u7684\u8def\u5f84\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log \\sum w)$\u3002\u53ef\u4ee5\u901a\u8fc7 [P2491](https://www.luogu.com.cn/problem/P2491)\u3002\n\n### \u89e3\u6cd5\u56db\uff1a\u53cc\u6307\u9488+\u524d\u7f00\u548c\n\n\u8003\u8651\u5c06\u89e3\u6cd5\u4e8c\u7684\u53cc\u6307\u9488\u5f15\u5165\u89e3\u6cd5\u4e09\u3002\n\n\u89e3\u6cd5\u4e8c\u4f4e\u6548\u7684\u539f\u56e0\u4e3b\u8981\u5728\u4e8e\u6bcf\u6b21\u53cc\u6307\u9488\u6c42\u51fa\u6700\u4f18\u533a\u95f4\u540e\u90fd\u8981 DFS \u4e00\u904d\uff0c\u5728\u89e3\u6cd5\u4e09\u5206\u6790\u4e86\u504f\u5fc3\u8ddd\u7684\u7ec4\u6210\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u6ca1\u6709\u5fc5\u8981\u518d\u8fdb\u884c\u91cd\u590d\u7684 DFS\uff0c\u53ea\u9700\u8981\u5728\u53cc\u6307\u9488\u8fc7\u7a0b\u4e2d\uff0c\u52a8\u6001\u66f4\u65b0 $\\max_{i < p < j} d_{a_p}, P(a_1,a_i), P(a_j, a_k)$ \u5373\u53ef\u3002\n\n\u7b2c\u4e00\u9879\u533a\u95f4\u6700\u5927\u503c\u662f\u7ecf\u5178\u7684\u6ed1\u52a8\u7a97\u53e3\uff0c\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u8ba1\u7b97\uff0c\u5176\u4f59\u4e24\u9879\u524d\u7f00\u548c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u5230\u8fd9\u91cc\u5c31\u5b8c\u4e86\u5417\uff1f\u65f6\u95f4\u590d\u6742\u5ea6\u786e\u5b9e\u5230\u8fbe\u4e86\u4e0b\u9650\uff08\u8f93\u5165\u5c31\u9700\u8981\u540c\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff09\uff0c\u4f46\u662f\u4ee3\u7801\u5b9e\u73b0\u8fd8\u80fd\u66f4\u7b80\u5355\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a$\\forall l \\in [1,i]$\uff0c$d_{a_l} \\leq P(a_1, a_i)$\uff0c\u540c\u6837\u5730\uff0c$\\forall l \\in [j,k]$\uff0c$d_{a_l} \\leq P(a_j, a_k)$\u3002\n\n**\u8bc1\u660e**\uff1a\u7531\u76f4\u5f84\u662f\u6811\u4e0a\u6700\u957f\u7b80\u5355\u8def\u5f84\u7684\u6027\u8d28\uff0c\u53ef\u4ee5\u5f97\u5230 $d_{a_j} + P(a_j, a_i) \\leq P(a_1,a_i)$\uff0c\u518d\u7ed3\u5408 $P(a_j, a_i) > 0$\uff0c\u4ece\u800c\u539f\u547d\u9898\u5f97\u8bc1\u3002$\\square$\n\n\u4e8e\u662f\u6211\u4eec\u5c06\u504f\u5fc3\u8ddd\u7684\u8868\u8fbe\u5f0f\u66ff\u6362\u4e3a $\\max \\{\\max_{1 \\leq p \\leq k} d_{a_p}, P(a_1,a_i), P(a_j, a_k)\\}$\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u6211\u4eec\u52a0\u5165\u7684\u9879\u90fd\u662f\u4e0d\u5927\u4e8e $P(a_1,a_i), P(a_j, a_k)$ \u7684\u9879\uff0c\u5728\u53d6 $\\max$ \u540e\u4e0d\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002\n\n$\\max_{1 \\leq p \\leq k} d_{a_p}$ \u662f\u5b9a\u503c\uff0c\u56e0\u6b64\u4e0d\u5fc5\u518d\u4f7f\u7528\u5355\u8c03\u961f\u5217\uff01\u5b9e\u73b0\u96be\u5ea6\u4e5f\u76f8\u5e94\u7b80\u5355\u4e86\u4e0d\u5c11\u3002\n\n## \u53c2\u8003\u5b9e\u73b0\n\n\u628a\u56db\u4e2a\u89e3\u6cd5\u7684\u4ee3\u7801\u90fd\u8d34\u4e86\u51fa\u6765\uff0c\u4e0d\u540c\u89e3\u6cd5\u4e4b\u95f4\u4f7f\u7528 `namespace` \u8fdb\u884c\u9694\u79bb\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6bd4\u9605\u8bfb\u4ee5\u89c2\u5bdf\u4f18\u5316\u70b9\u3002\n\n```cpp\n// Problem: P1099 [NOIP2007 \u63d0\u9ad8\u7ec4] \u6811\u7f51\u7684\u6838\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P1099\n// Memory Limit: 128 MB\n// Time Limit: 1000 ms\n//\n// Powered by CP Editor (https://cpeditor.org)\n\n#include <algorithm>\n#include <cstring>\n#include <iostream>\n#include <vector>\nusing namespace std;\nstruct edge {\n  int v, w;\n  edge(int v = 0, int w = 0) {\n    this->v = v;\n    this->w = w;\n  }\n};\nconst int maxn = 300000 + 5;\nvector<edge> e[maxn];\nint dep[maxn], f[maxn], c;\nint dia[maxn], cnt, pres[maxn], posts[maxn];\nbool vis[maxn];\nint n, s;\nvoid dfs(int u, int fa) {\n  f[u] = fa;\n  for (auto ed : e[u]) {\n    if (ed.v == fa || vis[ed.v]) continue;\n    dep[ed.v] = dep[u] + ed.w;\n    if (dep[ed.v] > dep[c]) c = ed.v;\n    dfs(ed.v, u);\n  }\n}\nvoid get_diameter() {\n  dfs(1, 0);\n  dep[c] = 0;\n  dfs(c, 0);\n  for (int u = c; u; u = f[u]) {\n    dia[++cnt] = u;\n    pres[cnt] = dep[u];\n  }\n  reverse(dia + 1, dia + cnt + 1);\n  reverse(pres + 1, pres + cnt + 1);\n  for (int i = cnt; i > 0; i--) posts[i] = pres[cnt] - pres[i];\n}\nnamespace sub1 {\nvoid solve() {\n  int minecc = 1 << 30;\n  for (int i = 1; i <= cnt; i++)\n    for (int j = i; j <= cnt; j++) {\n      if (pres[j] - pres[i] <= s) {\n        memset(vis, 0, sizeof(vis));\n        for (int k = i; k <= j; k++) vis[dia[k]] = true;\n        int ecc = 0;\n        for (int k = i; k <= j; k++) {\n          dep[dia[k]] = 0, c = 0;\n          dfs(dia[k], 0);\n          ecc = max(ecc, dep[c]);\n        }\n        minecc = min(minecc, ecc);\n      }\n    }\n  cout << minecc << endl;\n}\n}  // namespace sub1\nnamespace sub2 {\nvoid solve() {\n  int minecc = 1 << 30;\n  int l = 1, r = 1;\n  for (; l <= cnt; l++) {\n    while (r <= cnt && pres[r + 1] - pres[l] <= s) r++;\n    memset(vis, 0, sizeof(vis));\n    for (int k = l; k <= r; k++) vis[dia[k]] = 1;\n    int ecc = 0;\n    for (int k = l; k <= r; k++) {\n      dep[dia[k]] = 0, c = 0;\n      dfs(dia[k], 0);\n      ecc = max(ecc, dep[c]);\n    }\n    minecc = min(minecc, ecc);\n  }\n  cout << minecc << endl;\n}\n}  // namespace sub2\nnamespace sub3 {\nint maxd[maxn];\nbool check(int ecc) {\n  int l = 1, r = cnt;\n  while (l < cnt && pres[l + 1] <= ecc) l++;\n  while (r > l && posts[r - 1] <= ecc) r--;\n  if (pres[r] - pres[l] > s) return false;\n  int d = 0;\n  for (int i = l + 1; i < r; i++) d = max(d, maxd[i]);\n  return d <= ecc;\n}\nvoid solve() {\n  for (int i = 1; i <= cnt; i++) vis[dia[i]] = true;\n  for (int i = 1; i <= cnt; i++) {\n    dep[dia[i]] = 0, c = 0;\n    dfs(dia[i], 0);\n    maxd[i] = dep[c];\n  }\n  int l = 0, r = 1 << 30, ans = 0;\n  while (l <= r) {\n    int mid = (l + r) >> 1;\n    if (check(mid))\n      ans = mid, r = mid - 1;\n    else\n      l = mid + 1;\n  }\n  cout << ans << endl;\n}\n}  // namespace sub3\nnamespace sub4 {\nvoid solve() {\n  for (int i = 1; i <= cnt; i++) vis[dia[i]] = true;\n  int maxd = 0;\n  for (int i = 1; i <= cnt; i++) {\n    dep[dia[i]] = 0, c = 0;\n    dfs(dia[i], 0);\n    maxd = max(dep[c], maxd);\n  }\n  int l = 1, r = 1;\n  int minecc = 1 << 30;\n  for (; l <= cnt; l++) {\n    while (r <= cnt && pres[r + 1] - pres[l] <= s) r++;\n    minecc = min(max(maxd, max(pres[l], posts[r])), minecc);\n  }\n  cout << minecc << endl;\n}\n}  // namespace sub4\nint main() {\n  ios::sync_with_stdio(false);\n  cin >> n >> s;\n  for (int i = 1; i < n; i++) {\n    int u, v, w;\n    cin >> u >> v >> w;\n    e[u].emplace_back(v, w);\n    e[v].emplace_back(u, w);\n  }\n  get_diameter();\n  sub4::solve();\n  return 0;\n}\n```",
        "postTime": 1644510280,
        "uid": 22030,
        "name": "StudyingFather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u867d\u7136\u672c\u9898\u9898\u89e3\u5df2\u6709\u5f88\u591a\uff0c\u4f46\u57fa\u672c\u4e0a\u662f$O(N^3)$\u7684\u66b4\u529b\u6216$O(N)$\u7684\u9012\u63a8\u505a\u6cd5\uff0c\u800c\u4ecd\u6709\u4e00\u79cd$O(N\u00b7logN)$\u7684\u505a\u6cd5\u6ca1\u4eba\u63d0\u53ca\uff0c\u4f46\u4ecd\u53ef\u901a\u8fc7$Vijos$\u4e0a$N=400000$\u7684\u5927\u6570\u636e\u3002\n\n### \u6ca1\u9519\uff0c\u4ed6\u5c31\u662f\u4e8c\u5206\u3002\n\n\u672c\u6587\u5c06\u4ece**\u4e8c\u5206\u7684\u6b63\u786e\u6027\uff0c\u4e8c\u5206\u7684\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\uff0c\u4e8c\u5206\u8fb9\u754c**\u7b49\u591a\u4e2a\u65b9\u9762\u8be6\u7ec6\u9610\u8ff0\u8fd9\u79cd\u89e3\u6cd5\uff0c\u5e0c\u671b\u60a8\u5728\u89c2\u770b\u8fc7\u540e\u4e5f\u80fd\u5bf9**\u4e8c\u5206\u7b54\u6848**\u6709\u4e00\u4e2a\u66f4\u4e3a\u8be6\u7ec6\u7684\u7406\u89e3\u3002\n\n\u987a\u4fbf\uff0c$bzoj$\u7684\u52a0\u5f3a\u7248\u6302\u4e86\uff0c\u6211\u628a\u6570\u636e\u8d34\u5230\u4e86\u6d1b\u8c37\u53ef\u4f9b\u7ed9\u5927\u5bb6\u9a8c\u9898\uff0c[\u6233\u8fd9\u3002](https://www.luogu.org/problem/U89620)\n\n## $1. ~$\u4e8c\u5206\u7684\u6b63\u786e\u6027/\u5355\u8c03\u6027\u7684\u8bc1\u660e\n\n\u4f17\u6240\u5468\u77e5\uff0c\u4e00\u9053\u9898\u5982\u679c\u80fd\u901a\u8fc7\u4e8c\u5206\u6c42\u89e3\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u5177\u6709**\u5355\u8c03\u6027**\u3002\n\n\u5bf9\u4e8e\u672c\u9898\u800c\u8a00\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u504f\u5fc3\u8ddd\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\uff0c\u5728$check$\u51fd\u6570\u7684\u53d8\u5316\uff0c\u90a3\u4e48\u5f88\u663e\u7136\u7684\u662f\uff0c\u5f53\u4f60\u8bbe\u5b9a\u7684\u504f\u5fc3\u8ddd\u8d8a\u5927\uff0c\u53ef\u6ee1\u8db3\u7684\u6838\u5c31\u4f1a\u8d8a\u5411**\u6811\u7684\u4e2d\u5fc3**\u96c6\u4e2d\uff0c$s$\u81ea\u7136\u4e5f\u5c31\u8d8a\u5c0f\u4e86\uff0c\u6240\u4ee5\u8fd9\u662f\u6ee1\u8db3\u5355\u8c03\u6027\u7684\u3002\n\n\u7136\u800c\u53c8\u7531\u4e8e\u6d89\u53ca\u5230\u8fb9\u754c\u95ee\u9898\uff0c\u5bfc\u81f4\u5176**\u5e76\u975e\u4e25\u683c\u5355\u8c03**\uff0c\u5173\u4e8e\u8fd9\u4e2a\u7ec6\u8282\u90e8\u5206\u7b49\u5230\u7b2c\u4e09\u8282\u518d\u6765\u7ec6\u8c08\u3002\n\n## $2.~$\u4e8c\u5206\u7684\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b/$check$\u51fd\u6570\n\n\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u504f\u5fc3\u8ddd\u7684\u8303\u56f4\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u6210 **\u201c\u5bf9\u4e8e\u4e00\u6761\u76f4\u5f84\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6838\uff0c\u957f\u5ea6\u5c0f\u4e8e$s$\u4e14\u504f\u5fc3\u8ddd\u4e0d\u8d85\u8fc7\u5b9a\u503c$mid$\uff1f\u201d**\n\n\u90a3\u6211\u4eec\u77e5\u9053**\u5bf9\u4e8e\u6811\u4e0a\u7684\u4efb\u610f\u70b9\uff0c\u4ed6\u5230\u5176\u4ed6\u70b9\u7684\u6700\u5927\u8ddd\u79bb\u5373\u4e3a\u4ed6\u5230\u67d0\u76f4\u5f84\u7aef\u70b9\u7684\u8ddd\u79bb**\u3002\u4ece\u800c\u6211\u4eec\u53ef\u4ee5\u63a8\u65ad\u51fa\uff0c\u67d0\u4e00\u6838\u7684\u504f\u5fc3\u8ddd\u5b9e\u8d28\u4e0a\u4e5f\u5c31\u662f **\u6838\u7684\u7aef\u70b9\u5230\u76f4\u5f84\u7aef\u70b9\u7684\u8ddd\u79bb\u6700\u503c**\u3002\u5982\u679c\u6211\u4eec\u8bbe\u76f4\u5f84\u4e24\u7aef\u70b9\u4e3a$A,B$\uff0c\u6838$F$\u7684\u4e24\u7aef\u70b9\u4e3a$p,q$\uff0c\u90a3\u4e48\u4ee5\u4e0a\u7ed3\u8bba\u5c31\u53ef\u4ee5\u8868\u8ff0\u4e3a\uff1a\n$$ECC(F)=\\max(dis[p,A],dis[q,B])$$\n\u5bf9\u4e8e\u4e0a\u5f0f\uff0c$p,q$\u662f\u6211\u4eec\u8981\u6c42\u7684**\u672a\u77e5\u8303\u56f4**\uff0c\u800c$A,B$\u662f\u6211\u4eec**\u5df2\u77e5\u7684**\u76f4\u5f84\u7aef\u70b9\uff0c\u6613\u60f3\u5230\u53bb\u901a\u8fc7$A,B$\u53bb\u53cd\u63a8$p,q$\u3002\n\n\u5177\u4f53\u7684\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5 ~~\u4ee5A,B\u4e3a\u5706\u5fc3\uff0c\u4ee5mid\u4e3a\u534a\u5f84\u753b\u5706~~ \u4ee5$A,B$\u7aef\u70b9\u5206\u522b**\u5411\u76f4\u5f84\u5185\u90e8\u9012\u63a8\uff0c\u627e\u5230\u4e0e\u7aef\u70b9\u8ddd\u79bb\u4e0d\u8d85\u8fc7$mid$\u7684\u6700\u8fdc\u8282\u70b9\uff0c** \u6b64\u65f6\u7684\u4e24\u70b9\u5373\u4e3a\u6240\u6c42\u7684$p,q$\u3002\n\n\u6700\u7ec8\u6211\u4eec\u5224\u65ad$p,q$\u4e24\u70b9\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8e$s$\uff0c\u4f5c\u4e3a\u6211\u4eec\u4e8c\u5206\u7b54\u6848\u7684\u5224\u65ad\u6807\u5fd7\u3002**\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u7528\u8003\u8651\u7edd\u5bf9\u503c\uff01\uff01** \u5982\u679c\u8ddd\u79bb\u4e3a\u8d1f\uff0c\u6807\u5fd7\u7740\u4e24\u70b9\u8303\u56f4\u5df2\u7ecf\u4e92\u76f8\u8d8a\u8fc7\u53bb\u5230\u8fbe\u4e86\u5bf9\u9762\uff0c\u90a3\u4e48\u8fd9\u65f6\u5019\u5728\u8303\u56f4\u5185\u968f\u4fbf\u53d6\u4e00\u4e2a\u70b9\u90fd\u5e94\u8be5\u662f\u6ee1\u8db3\u7684\u3002\n\n\u5bf9\u4e8e\u5177\u4f53\u7684\u64cd\u4f5c\u6765\u8bf4\uff0c\u53ef\u4ee5\u5148\u4ee5\u76f4\u5f84\u67d0\u4e00\u7aef\u70b9\uff08\u5982$A$\uff09\u4e3a\u6839\u8282\u70b9\uff0c\u4ee5\u6b64\u4e0d\u65ad\u5411\u4e0b\u9012\u5f52\u540c\u65f6\u8bb0\u5f55\u5df2\u8d70\u7684\u8ddd\u79bb\uff0c\u627e\u5230\u6700\u8fdc\u6ee1\u8db3\u6761\u4ef6\u7684\u8282\u70b9$p$\uff1b\u5bf9\u4e8e\u53e6\u4e00\u7aef$B$\u53ef\u4ee5\u76f4\u63a5\u5f80\u4e0a\u4e0d\u65ad\u8df3\uff0c\u627e\u5230\u6700\u8fdc\u6ee1\u8db3\u8282\u70b9$q$\u3002\n\n\u653e\u4e0a$check$\u7684\u90e8\u5206\u4ee3\u7801\uff1a\n```cpp\nll drop(ll u,ll fa,ll x)  //\u4ece\u9ad8\u5f80\u4e0b\u6389\n{\n\tfor (ll i=fir[u];i;i=e[i].nex)\n\tif (v[e[i].u]) {\n\t\tif (e[i].u==fa) continue;\n\t\tl1+=e[i].w; if (l1>x) return u;\n\t\telse return drop(e[i].u,u,x);\n\t}\n}\n\nll up(ll u,ll x)  //\u4ece\u4f4e\u5f80\u4e0a\u722c\n{\n\twhile (u!=A&&l2+w[u]<=x) l2+=w[u],u=f[u][0]; \n\treturn u;\n}\n\nbool check(ll x)\n{\n\tl1=l2=0; p=drop(A,0,x); q=up(B,x); \n\treturn (d[q]-d[p]<=s);\n}\n\n```\n\n\u7b97\u4e0a\u4e3b\u51fd\u6570\u91cc\u7684\u4e8c\u5206\uff0c\u5e94\u8be5\u662f$O(N\u00b7logN)$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n## $3.~$\u4e8c\u5206\u7684\u8fb9\u754c\u5224\u65ad\n\n\u6240\u8c13\u4e8c\u5206\u8fb9\u754c\uff0c\u5c31\u662f\u6307\u653e\u5728\u4e3b\u7a0b\u5e8f\u4e2d\u7684$l,r$\u3002\u666e\u904d\u7684\u6765\u8bf4\uff0c\u4e8c\u5206\u7b54\u6848\u662f\u53ef\u4ee5\u4ece$0$\u53d6\u5230$INTMAX$\u7684\uff0c\u4f46\u5bf9\u4e8e\u672c\u9898\uff0c\u60c5\u51b5\u53d1\u751f\u4e86\u6539\u53d8\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u4ece\u4e00\u4e2a\u4f8b\u5b50\u5f15\u5165\uff1a\n\n\t6 6 \n\t1 2 5 \n\t2 3 3 \n\t3 4 3 \n\t4 5 5 \n\t3 6 6 \n    \u9519\u89e3\uff1a5  \u6b63\u89e3\uff1a6\n    \n~~\u6069\uff1f\uff1f\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f~~ \u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u68f5\u6811\u957f\u4ec0\u4e48\u6837\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/c7ljywx4.png)\n\n\u5f53\u6211\u4eec\u53d6${2,3,4}$\u4f5c\u4e3a\u6838\u7684\u70b9\u96c6\u65f6\uff0c\u6309\u4e0a\u9762\u7684\u505a\u6cd5\uff0c\u636e\u76f4\u5f84\u7aef\u70b9\u7684\u8ddd\u79bb\u5e94\u4e3a$5$\uff0c\u4f46\u5f88\u663e\u7136\u7b54\u6848\u5e94\u8be5\u662f\u7531$6$\u53f7\u8282\u70b9\u9020\u6210\u7684$6$\uff01\n\n\u76f8\u4fe1\u4f60\u80af\u5b9a\u604d\u7136\u5927\u609f\u4e86\uff1a**\u6211\u4eec\u5168\u7a0b\u6ca1\u6709\u8003\u8651\u652f\u94fe\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\uff01\uff01**\n\n\u5982\u679c\u653e\u5728\u8003\u573a\u4e0a\uff0c\u76f8\u4fe1\u5982\u679c\u6362\u505a\u6211\u7684\u4e00\u4f4d\u670b\u53cb\uff0c\u4ed6\u4e00\u5b9a\u4f1a\u5fc3\u6001\u5d29\u6e83\uff0c\u75af\u72c2\u6000\u7591\u4e8c\u5206\u7684\u6b63\u89e3\u6027\uff0c\u5f00\u59cb\u80e1\u4e71\u6253\u66b4\u529b\u9a97\u5206\uff0c\u6700\u540e\u60e8\u906d\u7206\u70b8 ~~\uff08\u4f60\u8bf4\u7684\u8fd9\u4e2a\u670b\u53cb\u5230\u5e95\u662f\u4e0d\u662f\u4f60\u81ea\u5df1\uff09\uff08\u8fd9\u9898\u597d\u50cf\u9a97\u5206\u5c31\u80fdAC\uff09~~\u3002 \u4f46\u662f\u5728\u5e73\u5e38\u505a\u9898\uff0c\u6709\u8f83\u591a\u65f6\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u59a8\u8be6\u7ec6\u63a2\u8ba8\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\u3002\n\n---\n\n1. \u5f88\u660e\u663e\u7684\u662f\uff0c\u5728\u4f17\u591a\u652f\u94fe\u4e2d\uff0c\u4ec5\u4f1a\u6709**\u6700\u957f\u652f\u94fe**\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\uff08\u7531\u504f\u5fc3\u8ddd\u7684\u5b9a\u4e49\u53ef\u63a8\u51fa\uff09\u3002\u5f53**\u6838\u7684\u5de6\u53f3\u4e24\u7aef\u70b9 \u5230\u76f4\u5f84\u7aef\u70b9\u7684\u8ddd\u79bb**\u6bd4**\u6700\u957f\u652f\u94fe\u5230\u6838\u7684\u8ddd\u79bb**\u77ed\u7684\u65f6\u5019\uff0c\u504f\u5fc3\u8ddd\u5c31\u4e0d\u53d7\u76f4\u5f84\u7684\u5f71\u54cd\u4e86\u3002\n\n\u7531\u7b2c\u4e00\u7ae0\u7684\u8bc1\u660e\uff0c\u5728\u8fbe\u5230\u8fb9\u754c\u524d\u4ecd\u662f\u6ee1\u8db3\u5355\u8c03\u6027\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u5927\u80c6\u731c\u60f3\uff1a**\u4e8c\u5206\u8fb9\u754c\u7684\u4e0a\u754c\u662f\u6811\u7684\u76f4\u5f84\uff0c\u4e0b\u754c\u5c31\u662f\u6700\u957f\u652f\u94fe\u5230\u76f4\u5f84\u7684\u8ddd\u79bb\uff01** \n\n\u6211\u4eec\u5bf9\u5176\u8bc1\u660e\uff1a\n\n- \u4e0a\u754c\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0c\u5f53\u4f60\u5047\u5b9a$A$\u8fd9\u4e2a\u7aef\u70b9\u4e3a\u6811\u7684\u6838\uff0c\u90a3\u4e48\u4ed6\u7684\u504f\u5fc3\u8ddd\u663e\u7136\u5c31\u662f\u6811\u7684\u76f4\u5f84$D$\u4e86\u3002\n\n- \u4e0b\u754c\u6211\u4eec\u60f3\u8981\u8bc1\u660e\u7684\u662f\uff0c\u4f1a\u4e0d\u4f1a\u51fa\u73b0\u6700\u957f\u652f\u94fe\u5230\u6838\u7684\u8ddd\u79bb\uff0c\u5c0f\u4e8e\u6700\u957f\u652f\u94fe\u5230\u76f4\u5f84\u8ddd\u79bb\u7684\u60c5\u51b5\u3002\n\n\u7531\u5b9a\u4e49\u53ef\u77e5\uff0c\u6838\u662f\u76f4\u5f84\u7684\u4e00\u6bb5\u8def\u5f84\uff0c\u8bbe\u6700\u957f\u652f\u94fe\u4e0e\u8be5\u76f4\u5f84\u4ea4\u4e8e$F$\u70b9\uff0c\u6700\u957f\u652f\u94fe\u7684\u53f6\u8282\u70b9\u4e3a$C$\uff0c\u5982\u679c$F\\in \\text{\u6838\u7684\u70b9\u96c6}$\uff0c\u90a3\u4e48\u504f\u5fc3\u8ddd\u5fc5\u7136$\\geq FC$\u3002\n\n\u5982\u679c$f\\notin \\text{\u6838\u7684\u70b9\u96c6}$\uff0c\u90a3\u4e48\u8bbe\u6838\u5230F\u7684\u8ddd\u79bb\u4e3a$d$\uff0c\u7531\u4e8e\u652f\u94fe\u5fc5\u7136\u5c0f\u4e8e\u5230\u76f4\u5f84\u7aef\u70b9$A,B$\u7684\u8ddd\u79bb\uff0c\u5219\u4ea6\u6ee1\u8db3\uff1a$d+FB\\geq d+FC$\uff0c\uff0c\u53d6\u7b49\u6761\u4ef6\u662f$C$\u662f\u53e6\u4e00\u76f4\u5f84\u7684\u7aef\u70b9\u3002\u4e0a\u5f0f\u8868\u660e\u82e5\u6838\u4e0d\u5305\u542b$F$\uff0c\u504f\u5fc3\u8ddd\u4ecd\u5728\u76f4\u5f84\u7aef\u70b9\u5904\u53d6\u5f97\uff0c\u6700\u957f\u652f\u94fe\u65e0\u8d21\u732e\u3002\n\n\u5f62\u8c61\u5730\u8bf4\uff0c\u5982\u679c\u4ee5$A$\u4e3a\u7aef\u70b9\u627e\u6838\u7684\u8bdd\uff0c\u504f\u5fc3\u8ddd\u5e94\u8be5\u6ee1\u8db3\u8fd9\u4e48\u4e00\u4e2a\u6837\u5b50\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/lhv7k44i.png)\n\n$FC$\u5373\u4e3a\u76f4\u5f84\u7684\u6700\u957f\u652f\u94fe\uff0c\u6240\u4ee5\u5355\u8c03\u6027\u4e5f\u8be5\u9650\u5236\u4e8e\u6b64\u3002\n\n---\n\n2. \u73b0\u5728\u6211\u4eec\u6765\u60f3\u60f3\u5982\u4f55\u6c42\u6700\u957f\u652f\u94fe\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u7528\u66b4\u529b\u7684\u601d\u60f3\uff0c\u8003\u8651\u6bcf\u4e00\u4e2a\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u7528$LCA$\u6c42\u51fa\u4e0e\u76f4\u5f84\u7684\u4ea4\u70b9$F$\uff0c\u7136\u540e\u518d\u5229\u7528\u7b80\u5355\u7684\u6811\u4e0a\u4e24\u70b9\u516c\u5f0f\u7b97\u51fa\u6700\u5927\u652f\u94fe\u5373\u53ef\u3002\n\n\u679a\u4e3e\u6bcf\u4e2a\u70b9\u662f$O(N)$\u7684\uff0c\u7b97LCA\u662f$O(logN)$\u7684\uff0c\u5408\u8d77\u6765\u662f$O(N\u00b7logN)$\uff0c\u4f9d\u7136\u662f\u5728\u65f6\u9650\u5185\u7684\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u7b97\u51fa\u4e86\u4e8c\u5206\u7684\u4e0b\u754c\uff0c\u6574\u7bc7\u9898\u89e3\u5c31\u7ed3\u675f\u4e86\u3002\n\n## $4.$\u65e5 \u540e\u8c08\n\u4ece\u5199\u8fd9\u9053\u9898\uff0c\u5230\u5199\u5b8c\u8fd9\u7bc7\u9898\u89e3\uff0c\u5171\u82b1\u4e86\u62117\u4e2a\u5c0f\u65f6\uff08\u4e0b\u53484\u65f6~\u665a\u4e0a11\u65f6\uff09\uff0c\u4e3b\u8981\u662f\u671f\u95f4\u6709\u5f88\u591a\u94bb\u725b\u89d2\u5c16\u7684\u5730\u65b9\uff0c\u8fd9\u544a\u8bc9\u6211\u4eec\u6ca1\u4e8b\u5343\u4e07\u522b\u6b7b\u78d5\u9898\uff0c\u667a\u5546\u4f1a\u4e0b\u964d\u7684\u3002\n\n\u671f\u95f4\u4e00\u76f4\u5728\u60f3\u80fd\u4e0d\u80fd\u901a\u8fc7\u7c7b\u6bd4\u6811\u7684\u91cd\u6c42\u51fa\u6811\u7684\u4e2d\u5fc3\uff0c\u7136\u540e\u7c7b\u4f3c\u6d2a\u6c34\u586b\u5145\u5411\u76f4\u5f84\u6269\u6563\u6c42\u6700\u5c0f\u504f\u5fc3\u8ddd\uff0c\u6700\u7ec8\u7801\u91cf\u6709\u70b9\u5927\uff0c\u6ca1\u80fd\u5b9e\u73b0\uff0c\u671f\u671b\u6709\u540e\u4eba\u80fd\u5e2e\u6211\u9a8c\u8bc1\u8fd9\u4e00\u60f3\u6cd5\u53ef\u884c\u6027\u3002\n\n\u6700\u540e\u7684\u6700\u540e\uff0c\u8fd8\u662f\u4e0a\u6211\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <map>\n#include <vector>\n#include <algorithm>\n#define mp make_pair\n#define pr pair<int,int>\n#define maxn 500010\n#define ll long long\nusing namespace std;\n//1. \u641e\u51fa\u4e00\u6761\u76f4\u5f84O(N)\uff0c\u53ef\u8bc1\u660e\u4e0a\u9762\u5fc5\u6709\u6700\u4f18\u6838\u3002\n//2. \u5bf9\u4e8e\u4e0d\u5728\u76f4\u5f84AB\u7684\u70b9\uff0c \u7b97LCA\uff0c\u6bd4\u8f83\u4e0e\u76f4\u5f84\u5173\u7cfb\u6c42\u6700\u957f\u652f\u94fe \n//3. \u4e8c\u5206\u7b54\u6848\uff0cA,B\u4e24\u7aef\u70b9\u4ee5mid\u4e3a\u534a\u5f84\u753b\u5706\uff0c\u6807\u8bb0\u6838\u8303\u56f4p,q\n//4. \u5224\u65adp,q\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8es\uff0c \n\nstruct ed{\n\tll u,nex,w;\n}e[maxn*2];\nll n,s,st,fir[maxn];\nll ans,A,B,D,l,r,d[maxn];//\u6811\u7684\u91cd\u5fc3D\u4fe1\u606f\nll f[maxn][21],dd[maxn],v[maxn],w[maxn],F,minn;//\u6811\u7684\u4e2d\u5fc3F\u4fe1\u606f\nll p,q,l1,l2;\n\nvoid add(ll x,ll y,ll w)\n{\n\te[++st].u=y; e[st].nex=fir[x]; e[fir[x]=st].w=w;\n\te[++st].u=x; e[st].nex=fir[y]; e[fir[y]=st].w=w;\n}\n\nvoid dfs(ll u,ll fa,ll w)\n{\n\td[u]=d[fa]+w; if (d[u]>ans) ans=d[u],l=u;\n\tfor (ll i=fir[u],ax=0;i;i=e[i].nex)\n\t{\n\t\tll v=e[i].u,w=e[i].w;\n\t\tif (v==fa) continue;  dfs(v,u,w);\n\t}\n}\n\nvoid dfsl(ll u,ll fa)\n{\n\tf[u][0]=fa; dd[u]=dd[fa]+1; \n\tfor (ll i=1;i<=20;i++) f[u][i]=f[f[u][i-1]][i-1];\n\tfor (ll i=fir[u];i;i=e[i].nex) if (e[i].u!=fa) dfsl(e[i].u,u),w[e[i].u]=e[i].w;\n}\n\nvoid Fdis(ll u) { while (u) v[u]=1,u=f[u][0]; }  //\u6807\u8bb0\u76f4\u5f84\n\nll lca(ll x,ll y)\n{\n\tif (dd[x]>dd[y]) swap(x,y);\n\tfor (ll i=20;i>=0;i--)\n\t\tif (dd[y]-(1<<i)>=dd[x]) y=f[y][i];\n\tif (x==y) return x;\n\tfor (ll i=20;i>=0;i--)\n\t\tif (f[y][i]!=f[x][i]) y=f[y][i],x=f[x][i];\n\treturn f[x][0];\n}\n\nll dismin()  //\u627e\u6700\u5927\u652f\u94fe \n{\n\tdfsl(A,0); Fdis(B); \n\tfor (ll i=1;i<=n;i++)\n\tif (!v[i])\n\t{\n\t\tll L=lca(i,B); \n\t\tminn=max(minn,d[i]-d[L]);\n\t}\n\treturn minn;\n}\n\nll drop(ll u,ll fa,ll x)\n{\n\tfor (ll i=fir[u];i;i=e[i].nex)\n\tif (v[e[i].u]) {\n\t\tif (e[i].u==fa) continue;\n\t\tl1+=e[i].w; if (l1>x) return u;\n\t\telse return drop(e[i].u,u,x);\n\t}\n}\n\n\n\nll up(ll u,ll x)\n{\n\twhile (u!=A&&l2+w[u]<=x) l2+=w[u],u=f[u][0]; \n\treturn u;\n}\n\nbool check(ll x)\n{\n\tl1=l2=0; p=drop(A,0,x); q=up(B,x); //\u6781\u77ed\u7684\u6838\u5fc3\u5185\u5bb9\n\treturn (d[q]-d[p]<=s);\n}\n\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&s);\n\tfor (ll i=1,x,y,w;i<n;i++)\n\tscanf(\"%lld%lld%lld\",&x,&y,&w),add(x,y,w);\n\tdfs(1,0,0); ans=0; r=l; dfs(l,0,0); \n\tA=r; B=l; D=ans;//1.\n\tl=dismin(); r=D; //2. l\u5373\u4e3a\u6700\u5927\u652f\u94fe\u957f\n\twhile (l<r)\n\t{\n\t\tll mid=(l+r)/2; \n\t\tif (check(mid)) r=mid; else l=mid+1;\n\t}\n\tprintf(\"%lld\\n\",l);\n} \n\n```\n\n\u5199\u8fd9\u4e1c\u897f\u771f\u5fc3\u7d2f\uff0c~~\u5b57\u6570\u6211\u89c9\u5f97\u90fd\u80fd\u4e0a\u6d1b\u8c37\u65e5\u62a5~~\u3002",
        "postTime": 1569860795,
        "uid": 15984,
        "name": "\u5929\u6cfd\u9f9f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u4e00\u4e2a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u505a\u6cd5\n\n\u627e\u4e00\u6761\u76f4\u5f84\uff08\u4e24\u904ddfs\uff09\uff0c\u7136\u540e\u4ece\u4e00\u4e2a\u7aef\u70b9\u5f00\u59cb\u679a\u4e3e\u957f\u5ea6\u4e0d\u8d85\u8fc7s\u7684\u53e6\u4e00\u7aef\u70b9\uff08\u7531\u8d2a\u5fc3\u7684\u6027\u8d28\u663e\u7136\u5f53\u957f\u5ea6\u521a\u597d\u5c0f\u4e8es\u65f6\u6bd4\u8f83\u4f18 \uff09\n\n\u7136\u540e\u504f\u5fc3\u8ddd\u7684\u4e0b\u754c\u5927\u4e8e\u8fd9\u4e2a\u7aef\u70b9\u5230\u76f4\u5f84\u4e24\u7aef\u70b9\u7684\u6700\u5c0f\u503c\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\u7684\u504f\u5fc3\u8ddd\u6211\u4eec\u53d1\u73b0\u5982\u679c\u53bb\u4e00\u4e2a\u70b9\u8981\u7ecf\u8fc7\u4f60\u7684\u8def\u5f84\uff0c\u8fd9\u4e2a\u8ddd\u79bb\u663e\u7136\u662f\u6ca1\u6709\u7528\u7684\uff08\u56e0\u4e3a\u4ece\u8def\u5f84\u4e0a\u5230\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u6709\u66f4\u5c0f\u7684\u8ddd\u79bb\uff09\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u5c06\u4ed6\u4eec\u65e0\u89c6\u6389\n\n\n\n    \n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define maxn 500005\ninline int read()\n{\n    char ch='*';\n    int num=0,f=1;\n    while(!isdigit(ch)){\n        ch=getchar();\n        if(ch == '-' ) f = -1;\n    }\n    while(isdigit(ch))\n    {\n        num = num * 10 +ch -'0';\n        ch = getchar();\n    }\n    return num*f;\n}\n//struct edge {int to,val};\nvector<pair<int ,int > > e[maxn];\nint dis[maxn];\nbool vis[maxn];\nint fa[maxn];\nint n,m,s;\nvoid dfs(int x)\n{\n    int siz=e[x].size();\n    siz--;\n    for(int i=0;i<=siz;i++)\n    {\n        int v=e[x][i].first;\n        if(vis[v]||fa[x]==v) continue ;\n        fa[v]=x;\n        dis[v]=dis[x]+e[x][i].second;\n        dfs(v);\n    }\n    return;\n}\nint main()\n{\n    n=read();\n    s=read();\n    int u,v,w;\n    for(int i=1;i<n;i++)\n    {\n        u=read();v=read();w=read();\n        e[u].push_back(make_pair(v,w));\n        e[v].push_back(make_pair(u,w));\n    }\n    int l=1,l2=1;\n    dis[l]=0;\n    dfs(l);\n    memset(fa,0,sizeof(fa));\n    for(int i=1;i<=n;i++) if(dis[i]>dis[l]) l=i;\n    dis[l]=0; dfs(l);\n    for(int i=1;i<=n;i++) if(dis[i]>dis[l2] ) l2=i;\n    int ans=0x7fffffff,j=l2;\n    for(int i=l2;i;i=fa[i]){\n        while(fa[j]&&dis[i]-dis[fa[j]]<=s) j=fa[j];\n        ans=min(ans,max(dis[j],dis[l2]-dis[i]));\n    }\n    for(int i=l2;i;i=fa[i]) vis[i]=1;\n    for(int i=l2;i;i=fa[i]) dis[i]=0,dfs(i);\n    for(int i=1;i<=n;i++) ans=max(ans,dis[i]);\n    cout<<ans<<endl;\n    return 0;    \n}\n```",
        "postTime": 1507814364,
        "uid": 36102,
        "name": "doge233",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u771f\u7684\u6c34\u554a\u3002\u3002\u3002\n\n------------\n\n\u6628\u5929\u6a21\u62df\u8d5b\u8003\u4e86\u8fd9\u9898,\u5f88\u591a\u4eba\u90fd\u662fO($n^3$)\u6c34\u8fc7\uff0c\u4f46\u6211\u8ba4\u4e3a\uff0c\u8981\u505a\u5c31\u505a\u7684\u8db3\u591f\u597d(\u5176\u5b9e\u662f\u6211\u6839\u672c\u6ca1\u60f3\u5230O($n^3$)\u7684\u505a\u6cd5)\uff0c\u7136\u540e\u5c31\u5f00\u59cb\u60f3O(n)\u7684\u89e3\u6cd5\u3002\n\n\u9996\u5148\u770b\u9898\u76ee\uff0c\u524d\u9762\u4e00\u5927\u5806\u770b\u4f3c\u662f\u5e9f\u8bdd\uff0c\u5176\u5b9e\u8fd8\u662f\u6709\u5f88\u5927\u7528\u5904\u7684\u3002\n\n\u95ee\u9898\u63cf\u8ff0\u4e2d\u63d0\u5230\u4e86\u6811\u7684\u4e2d\u5fc3\uff0c\u4f46\u540e\u9762\u5374\u8c8c\u4f3c\u6ca1\u6709\u7528\u5230\uff0c\u5176\u5b9e\u4e2d\u5fc3\u662f\u7ed9\u6211\u4eec\u5e26\u6765\u63d0\u793a\u7684\u3002\n\n\u65e2\u7136\u662f\u6c42\u6700\u5c0f\u504f\u5fc3\u8ddd\uff0c\u90a3\u5fc5\u7136\u662f\u8981\u5728\u76f4\u5f84\u4e0a\u627e\uff0c\u4e0d\u7136\u504f\u5fc3\u8ddd\u5e76\u4e0d\u80fd\u6709\u8fc7\u591a\u7684\u51cf\u5c11\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b65\uff0c\u5b9a\u4e0b\u5728\u76f4\u5f84\u4e0a\u627e\u3002\n\n\u7136\u540e\u76f4\u5f84\u4e0a\u627e\u4e5f\u8981\u8bb2\u7a76\u65b9\u6cd5\uff0c\u5047\u5982\u6574\u6761\u8def\u5f84\u5728\u4e2d\u5fc3\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\uff0c\u90a3\u4e48\u504f\u5fc3\u8ddd\u5c31\u4f1a\u8fc7\u5927\u4e86(s\u592a\u5c0f\u4e86\u4e5f\u6ca1\u529e\u6cd5\u4e86)\u3002\u6240\u4ee5\uff0c\u5982\u679cs\u8db3\u591f\u5927\u7684\u8bdd\uff0c\u5e94\u8be5\u5c06\u8def\u5f84\u653e\u5728\u4e2d\u95f4(\u6307\u7684\u662f\u8def\u5f84\u5de6\u7aef\u70b9\u5230\u76f4\u5f84\u7684\u5de6\u7aef\u70b9\u4e0e\u8def\u5f84\u53f3\u7aef\u70b9\u5230\u76f4\u5f84\u53f3\u7aef\u70b9\u7684\u8ddd\u79bb\u5dee\u6700\u5c0f)\uff0c\u6240\u4ee5\u5148\u5b9a\u4e0b\u4e2d\u5fc3\u6240\u5728\u7684\u8fb9\u4e0a\u7684\u4e24\u4e2a\u7aef\u70b9(\u5982\u679cs\u592a\u5c0f\u5c31\u7528\u4e24\u7aef\u70b9\u4e2d\u9760\u8fd1\u4e2d\u5fc3\u7684\u4e00\u4e2a\u7aef\u70b9)\uff0c\u7136\u540e\u54ea\u4e00\u8fb9\u7684\u504f\u5fc3\u8ddd(\u90e8\u5206\u7684)\u5927\uff0c\u5c31\u5f80\u54ea\u8fb9\u62d3\u5c55\uff0c\u76f8\u540c\u5219\u540c\u65f6\u62d3\u5c55\u3002\n\n\u6709\u4e24\u70b9\u9700\u8981\u6ce8\u610f\u6ce8\u610f\uff1a\n\n\u4e00\u3001\u5982\u679c\u6709\u4e24\u6761\u6216\u66f4\u591a\u76f4\u5f84\uff0c\u8d70\u5230\u51e0\u6761\u76f4\u5f84\u7684\u5206\u53c9\u70b9\u65f6\uff0c\u5c31\u505c\u6b62\u5f80\u8fd9\u8fb9\u62d3\u5c55\u4e86\uff0c\u5e76\u4e14\u5982\u679c\u53e6\u4e00\u8fb9\u7684\u504f\u5fc3\u8ddd(\u90e8\u5206\u7684)\u5c0f\u4e8e\u8fd9\u8fb9\uff0c\u90a3\u4e48\u5c31\u4e0d\u5fc5\u62d3\u5c55\u4e86\uff0c\u53cd\u6b63\u62d3\u5c55\u4e86\u540e\u504f\u5fc3\u8ddd\u8fd8\u662f\u8fd9\u8fb9\u7684\u503c\u3002\n\n\u4e8c\u3001\u53ea\u6709\u4e00\u6761\u76f4\u5f84\u65f6\uff0c\u8981\u6ce8\u610f\u627e\u6240\u9009\u8def\u5f84\u4e0a\u6240\u6709\u7684\u504f\u5fc3\u8ddd\uff0c\u7136\u540e\u53d6\u5927\uff0c\u518d\u4e0e\u76f4\u5f84\u4e24\u7aef\u70b9\u5230\u8def\u5f84\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb\u53d6\u5927(\u8fd9\u91cc\u662f\u6307\u5de6\u7aef\u70b9\u4e0e\u5de6\u7aef\u70b9\uff0c\u53f3\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\u7684\u8ddd\u79bb)\n\n\u7136\u540e\u5c31\u6109\u5feb\u7684AC\u4e86\uff01(\u5b9e\u6d4bBZOJ\u540c\u6837\u80fd\u8fc7)\n\n\u4ee3\u7801\u5982\u4e0b\uff1a(30ms\uff0c\u6ca1\u8fdb\u6700\u4f18\u89e3QAQ)\n\n```\n#include<cstdio>\n\ninline int read(){\n\tint r=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')r=(r<<1)+(r<<3)+c-'0',c=getchar();\n\treturn r*f;\n}\n\nstruct E{\n\tint v,dis,nxt;\n}e[1000001];\n\nint n,s_e,S,head[500005],dis[500005],s,t,zj,next[2][500005][2],zx[4],f[2][500005],ans=1e9;//f\u662f\u90e8\u5206\u7684\u504f\u5fc3\u8ddd\uff0cnext\u662f\u4eces(\u6216t)\u51fa\u53d1\u7684\u4e0b\u4e00\u4e2a\u70b9(\u76f4\u5f84\u4e0a)\n\nbool bj[2][500005],jg[500005];//jg\u5c31\u662f\u6307\u76f4\u5f84\u4e0a\u7684\u70b9\uff0cbj\u6307\u7684\u662f\u662f\u4e0d\u662f\u76f4\u5f84\u5206\u53c9\u53e3\n\ninline int max(int a,int b){\n\treturn a>b?a:b;\n}\n\ninline int min(int a,int b){\n\treturn a<b?a:b;\n}\n\ninline void a_e(int u,int v,int dis){\n\te[++s_e]=(E){v,dis,head[u]};\n\thead[u]=s_e;\n}\n\nvoid dfs(int p,int fa,int lj){\n\tdis[p]=lj;\n\tfor(int i=head[p];i;i=e[i].nxt){\n\t\tint v=e[i].v;\n\t\tif(fa==v)continue;\n\t\tdfs(v,p,lj+e[i].dis);\n\t}\n}\n\nint dfs_st(int p,int fa,int sta,int end){\n\tint b=0,d=0;\n\tif(p==end){\n\t\tjg[p]=1;\n\t\treturn 1;\n\t}\n\tfor(int i=head[p];i;i=e[i].nxt){\n\t\tint v=e[i].v;\n\t\tif(fa==v)continue;\n\t\tb=max(b,dfs_st(v,p,sta,end));\n\t\tif(b==1&&!d)d=i;\n\t\tif(f[sta][p]<=f[sta][v]+e[i].dis){\n\t\t\tif(f[sta][p]==f[sta][v]+e[i].dis)bj[sta][p]=1;\n\t\t\telse f[sta][p]=f[sta][v]+e[i].dis,bj[sta][p]=0;\n\t\t}\n\t}\n\tif(b){\n\t\tnext[sta][p][0]=e[d].v;\n\t\tnext[sta][p][1]=e[d].dis;\n\t\tjg[p]=1;\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nvoid find_zx(int p,int dis){\n\tint v=next[0][p][0],val=next[0][p][1];\n\tif(2*(val+dis)>=zj){\n\t\tzx[0]=p,zx[1]=v;\n\t\tif(zj-2*dis<=2*(val+dis)-zj)zx[2]=p;//\u9760\u8fd1p\n\t\tif(zj-2*dis>2*(val+dis)-zj)zx[2]=v;//\u9760\u8fd1v\n\t\tzx[3]=val;\n\t\treturn;\n\t}\n\tfind_zx(v,dis+val);\n}\n\nint ansl,ansr,anss=-1e9;\n\nvoid solve(int l,int r,int dis){\n\tif(!l||!r)return;\n\tif(ans>max(f[0][r],f[1][l]))ans=max(f[0][r],f[1][l]),ansl=l,ansr=r;//\u8bb0\u5f55\u4e0b\u76ee\u524d\u6700\u4f18\u5de6\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\n\tif(bj[0][l]||bj[1][l]){//\u5206\u53c9\u5c31\u5224\u65ad\n\t\tif(next[0][r][1]+dis<=S&&f[0][r]>f[1][l])solve(l,next[0][r][0],dis+next[0][r][1]);\n\t}\n\telse if(bj[0][r]||bj[1][r]){\n\t\tif(next[1][l][1]+dis<=S&&f[0][r]<f[1][l])solve(next[1][l][0],r,dis+next[1][l][1]);\n\t}\n\telse {\n\t\tif(f[0][r]>f[1][l]&&next[0][r][1]+dis<=S)solve(l,next[0][r][0],dis+next[0][r][1]);\n\t\telse if(f[0][r]<f[1][l]&&next[1][l][1]+dis<=S)solve(next[1][l][0],r,dis+next[1][l][1]);\n\t\telse if(dis+next[0][r][1]+next[1][l][1]<=S)solve(next[1][l][0],next[0][r][0],dis+next[0][r][1]+next[1][l][1]);\n\t}\n}\n\nint find_s(int p,int fa){\n\tint s=0;\n\tfor(int i=head[p];i;i=e[i].nxt){\n\t\tint v=e[i].v;\n\t\tif(fa==v||jg[v])continue;//\u76f4\u5f84\u4e0a\u7684\u70b9\u4e0d\u9700\u8981\u627e\uff0cans\u5df2\u7ecf\u8bb0\u5f55\u4e0b\u6700\u4f18\u7684\u4e86\n\t\ts=max(s,find_s(v,p)+e[i].dis);//\u6bcf\u4e2a\u5b50\u8282\u70b9\u91cc\u9009\u6700\u5927\n\t}\n\treturn s;\n}\n\nvoid find_ans(int p){\n\tanss=max(anss,find_s(p,next[1][p][0]));//\u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u7684\u90e8\u5206\u504f\u5fc3\u8ddd\u53d6\u5927\n\tif(p==ansr)return;//\u5230\u8fbe\u53e6\u4e00\u4e2a\u7aef\u70b9\u5c31\u6ca1\u4ec0\u4e48\u597d\u627e\u7684\u4e86\n\tfind_ans(next[0][p][0]);\n}\n\nint main(){\n\tfreopen(\"core.in\",\"r\",stdin);\n\tfreopen(\"core.out\",\"w\",stdout);\n\tn=read(),S=read();\n\tfor(int i=1;i<n;i++){\n\t\tint u=read(),v=read(),dis=read();\n\t\ta_e(u,v,dis);\n\t\ta_e(v,u,dis);\n\t}\n\tdfs(1,0,0);//\u627e\u76f4\u5f84\n\tfor(int i=1;i<=n;i++)\n\t\tif(dis[s]<dis[i])s=i;\n\tdfs(s,0,0);//\u627e\u76f4\u5f84\n\tfor(int i=1;i<=n;i++)\n\t\tif(dis[t]<dis[i])t=i;\n\tzj=dis[t];\n\tdfs_st(s,0,0,t);//\u627e\u6bcf\u4e2a\u70b9\u7684\u504f\u5fc3\u8ddd\n\tdfs_st(t,0,1,s);\n\tfind_zx(s,0);//\u627e\u76f4\u5f84\u4e2d\u5fc3\n\tif(zx[3]<=S){//\u80fd\u9009\u4e2d\u5fc3\u6240\u5728\u7684\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u5c31\u9009\n\t\tsolve(zx[0],zx[1],zx[3]);\n\t\tfind_ans(ansl);//\u4ee5\u9632\u6b62\u6709\u4e00\u6761\u76f4\u5f84\u7684\u60c5\u51b5\n\t\tans=max(ans,anss);\n\t}\n\telse ans=max(f[0][zx[2]],f[1][zx[2]]);//\u4e0d\u80fd\u5c31\u627e\u6700\u6328\u8fd1\u4e2d\u5fc3\u7684\u70b9\u7684\u504f\u5fc3\u8ddd\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n~~\u5b8c\u7ed3\u5077\u5077\u6492\u82b1~~\u273f\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f\n",
        "postTime": 1564557424,
        "uid": 71403,
        "name": "\u4e00\u53f6\u77e5\u79cb\u3002",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "# \u8def\u8fc7\u7684\u9753\u4ed4\u770b\u8fc7\u6765\uff01\n\u8d70\u8fc7\u8def\u8fc7\uff0c\u5343\u4e07\u4e0d\u8981\u849f\u84bb\uff01\n\n\u8fd9\u9053\u9898\u72e0\u53cb\u7537\u8d4c\uff0c\u5c3b\uff08\u8003\uff09\u7684\u4e0d\u4ec5\u4ec5\u662f\u7801\u529b\uff0c\u6bd2\u9898\u80fd\u529b\uff0c\u66f4\u662f\u53d4\u4e0a\u95ee\u9898\u529f\u5e95\u7684\u68c0\u6d4b\uff0c\u65e0\u8bba\u5404\u4f4d\u73b0\u5728\u662f\u5728\u666e\u53ca\u7ec4\u8fd8\u662f\u63d0\u9ad8\u7ec4\uff0c\u90fd\u5341\u5206\u503c\u5f97\u6765\u5237\u4e00\u4e0b\u8fd9\u9053\u7ecf\u5178\u9898\u76ee\u3002\n\n\n\n------------\n### \u76f4\u63a5\u5207\u5165\u4e3b\u9898\n\n\u603b\u7ed3\u4e00\u4e0b\u9898\u76ee\uff0c\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u5728\u4e00\u68f5\u6811\u7684\u76f4\u5f84\u4e0a\u7684\u4e00\u6bb5\u8def\u5f84\u7684\u79bb\u5b83\u6700\u8fdc\u7ed3\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u601d\u8def\u5176\u5b9e\u5f88~~\u7b80\u5355~~\uff0c\u53ea\u662f\u5148\u6c42\u51fa\u6811\u4e0a**\u76f4\u5f84**\uff0c\u7136\u540e\u5728\u76f4\u5f84\u4e0a\u53d6**\u8def\u5f84**\uff0c\u8981\u6c42**\u504f\u5fc3\u8ddd**\u6700\u5c0f\u3002\n\n#### \u5927\u5bb6\u5e94\u8be5\u6811\u4e0a\u76f4\u5f84\u90fd\u4f1a\u505a\u4e86\u5427\uff1f\n\n\u4ec0\u4e48\uff1f\u4e0d\u4f1a\uff1f\n\n\u6811\u4e0a\u76f4\u5f84\u7684\u505a\u6cd5\u5c31\u662f\u4e24\u904ddfs\u5148\u4eceo\u70b9\u51fa\u53d1\u627e\u6700\u8fdc\u70b9\uff0c\u5728\u4ece\u6700\u8fdc\u51fa\u53d1\uff0c\u518d\u627e\u6700\u8fdc\u70b9\u3002\n\n\u7136\u540e\u5728\u6811\u4e0a\u53d6\u8def\u5f84\u561b\uff0c\u7528\u6811\u4e0a\u5c3a\u53d6\u6cd5\u3002\n\n\u5b9a\u4e49dis[i]\u8868\u793ai\u70b9\u79bb1\u53f7\u8282\u70b9\uff0c\u4e5f\u5c31\u662f\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u8fd8\u6709\u4e00\u4e2a\u5947\u602a\u7684mark\u6570\u7ec4\uff0c\u521d\u770b\u597d\u50cf\u6ca1\u6709\u4efb\u4f55\u7528\u5904\uff0c\u5176\u5b9e\u5728\u540e\u9762\u662f\u4e00\u4e2a\u725b\uff08hei\uff09\u903c\uff08an\uff09\u7684\u6280\u5de7\u3002\n\n\n------------\n\u5148\u6765\u770b\u4e00\u4e0b\u8fd9\u6bb5\u7a0b\u5e8f\n\n```cpp\nvoid dfs(int f,int x){\n    fa[x]=f;\n    if(dis[x]>dis[k])k=x;\n    for(int i=head[x];i;i=E[i].nxt){\n        int y=E[i].to;\n        if(y==f||mark[y])continue;//\u8fd9\u884cmark[y]\u662f\u4e0d\u662f\u770b\u8d77\u6765\u6beb\u65e0\u5398\u5934\uff1f\n        dis[y]=dis[x]+E[i].w;\n        dfs(x,y);\n    }\n}\n\n```\nFa\u6570\u7ec4\u8bb0\u5f55\u4e86\u5f53\u524d\u7ed3\u70b9\u7684\u7236\u4eb2\u7ed3\u70b9\uff0c\u8fd9\u4e2a\u6280\u5de7\u5f88\u5e38\u7528\u5427\u3002\u4f46\u662f\u5728\u540e\u9762\u6811\u4e0a\u5c3a\u53d6\u65f6\uff0c\u5b83\u53d1\u6325\u4e86\u5de8\u5927\u7684\u4f5c\u7528\u3002\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u9664\u4e86\u6211\u6807\u51fa\u6765\u7684\u90a3\u4e00\u884c\uff0c\u5176\u4ed6\u7684\u5e94\u8be5\u90fd\u5f88\u597d\u7406\u89e3\u5427\uff1f\u6811\u4e0a\u76f4\u5f84\u51e0\u4e4e\u662f\u6a21\u7248\u3002\n\n\n------------\n```cpp\n scanf(\"%d%d\",&n,&m);\n  for(int i=1;i<n;i++){\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z),add(y,x,z);\n   }\n  dis[1]=1,dfs(0,1);\n  dis[k]=0,dfs(0,k);\n  top=k\n\n```\n\u5148\u628a\u6839\u8282\u70b9\u6807\u4e3a1\uff0c\u7136\u540e\u4ee5\u6839\u8282\u70b9\uff081\u53f7\u8282\u70b9\uff09\u4e3a\u6839\u8282\u70b9\u505a\u6700\u8fdc\u8def\uff0c\u6700\u540ek\u8fed\u4ee3\u51fa\u6765\u7684\u5c31\u662f\u6700\u8fdc\u70b9\u3002\n\n\u7136\u540e\u628ak\u70b9\u6807\u4e3a0\uff0c\u7136\u540e\u4ee5k\u7ed3\u70b9\u4e3a\u6839\u518d\u505a\u4e00\u904d\u6811\u4e0a\u6700\u8fdc\u8def\uff0c\u73b0\u5728\u7684k\u5c31\u662f\u76f4\u5f84\u7684\u7b2c\u4e8c\u4e2a\u7aef\u70b9\u4e86\uff0c\u7b2c\u4e00\u4e2a\u662f1\uff08\u6839\u8282\u70b9\uff09\u3002\n\n\n------------\n### \u7136\u540e\u5c31\u662f\u9a9a\u5f97\u8981\u6b7b\u7684\u6811\u4e0a\u5403\u86c6\u4e86\n\n```cpp\nfor(int i=top,j=top;i;i=fa[i]){\n        while(dis[j]-dis[i]>m)j=fa[j];      \n        x=max(dis[top]-dis[j],dis[i]); \n        ans=min(ans,x);\n }\n\n```\n\u9996\u5148\uff0c\u8fd9\u6761\u866b\u5b50\u7684\u5934\uff08i\uff09\u548c\u5c3e\uff08j\uff09\u90fd\u662ftop\uff0c\u4e5f\u5c31\u662f\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\u3002\n\n\u7136\u540e\uff0c\u5c31\u662f\u5faa\u73af\u4e3b\u4f53\u4e86\uff0c\u8fd9\u91cc\u6709\u662f\u4e00\u4e2a\u5bb9\u65a5\uff0c\u60f3\u60f3\u770b\uff0c\u4ece\u6839\u7ed3\u70b9\u5230\u5c3e\u90e8\u7684\u8ddd\u79bb\u51cf\u53bb\u6839\u8282\u70b9\u5230\u5934\u90e8\u7684\u8ddd\u79bb\uff0c\u662f\u4e0d\u662f\u5c31\u662f\u5934\u5230\u5c3e\u7684\u8ddd\u79bb\uff1f\u4e5f\u5c31\u662f\u866b\u5b50\u957f\u5ea6\u3002\u6211\u4eec\u9898\u76ee\u4e2d\u9650\u5236\u4e86\u866b\u5b50\u957f\u5ea6\u4e3as\uff0c\u4e8e\u662f\u5f53\u957f\u5ea6\u5927\u4e8es\u65f6\uff0c\u5c31\u8981\u5c3e\u5df4\u5f80\u524d\u7f29\u3002X\u53d6\u7684\u662f\u5f53\u524d\u5934\u90e8\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u4f46\u662f\n## \u8fd9\u4e2a\u5c31\u662f\u504f\u5fc3\u8ddd\u4e86\u5417\uff1f\n\n\n------------\n## \u6211\u4fe1\u4f60\u4e2a\u9b3c\uff01\n\u5f53\u7136\u4e0d\u662f\uff01\u4e3e\u4e2a\u6817\u5b50\u3002\u4e0b\u56fe\u4e2d\uff0c\u4f60\u96be\u9053\u8ba4\u4e3a\u8def\u5f84i~j\u7684\u504f\u5fc3\u8ddd\u662f\u6839\u8282\u70b9\uff1f\uff08\u6211\u8bf4\u7684\u6839\u7ed3\u70b9\u662fi\u4e0a\u9762\u90a3\u4e2a\u79bb\u4ed6\u8ddd\u79bb\u4e3a1\u7684\u70b9\uff09\n\n![no](https://cdn.luogu.com.cn/upload/pic/73536.png)\n\n\u5f88\u660e\u663e\u4e0d\u662f\uff01\n\n\u6240\u4ee5\u6211\u4eec\u8981\u518d\u505a\u4e00\u6b21\uff0c\u628a\u6bcf\u4e2a\u76f4\u5f84\u4e0a\u7684\u70b9\u7684\u6700\u8fdc\u8ddd\u79bb\u627e\u51fa\u6765\u3002\n\n------------\n```cpp\nfor(int i=top;i;i=fa[i])mark[i]=1;\n for(int i=top;i;i=fa[i]){\n        k=i,dis[k]=0;\n        dfs(fa[i],i);\n }\n\n```\n\u9996\u5148\u628a\u76f4\u5f84\u4e0a\u9762\u6bcf\u4e00\u4e2a\u70b9\u90fd\u6807\u8bb0\u5728mark\u4e2d\uff0c\u7136\u540e\u4ece\u76f4\u5f84\u5c3e\u90e8\u5230\u6839\u8282\u70b9\uff08\u5c31\u662f\u904d\u5386\u6574\u4e2a\u76f4\u5f84\uff09\u627e\u51fa\u6bcf\u4e2a\u7ed3\u70b9\u4e3a\u6839\u662f\u7684\u6700\u8fdc\u70b9\u3002\u6700\u8fdc\u8ddd\u79bb\u5728dis\u6570\u7ec4\u4e2d\u3002\n\n```cpp\nfor(int i=1;i<=n;i++) ans=max(ans,dis[i]);\n\n```\n\u8fd9\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u6700\u8fdc\u70b9\u8ddd\u79bb\u53d6\u6700\u5927\u503c\uff0c\u5c31\u662f\u9898\u76ee\u5b9a\u4e49\u7684\u504f\u5fc3\u8ddd\u3002\n\n\u6700\u540e\u8f93\u51fa\u5c31\u53ef\u4ee5\u3002\n\n\n------------\n\u8fd9\u9053\u9898\u561b\uff0c\u8bf4\u96be\u4e5f\u5f88\u96be\uff0c\u8bf4\u7b80\u5355\u4e5f\u86ee\u7b80\u5355\u7684\uff0c\u9996\u5148\n\n![](https://cdn.luogu.com.cn/upload/pic/73541.png)\n\n\u5148\u603b\u7ed3\u9898\u76ee\uff0c\u7136\u540e\u627e\u51c6\u601d\u8def\n\n![](https://cdn.luogu.com.cn/upload/pic/73542.png)\n\n\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u8fce\u5203\u800c\u89e3\u4e86\uff01\uff01",
        "postTime": 1566287047,
        "uid": 134182,
        "name": "juruo_zjc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u5728\u672c\u9898\u76ee\u4e0b\u53d1\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3QAQ\n\n\u4e0a\u4e00\u7bc7\uff1ahttps://hkxa.blog.luogu.org/solution-p1099-v2\n\n\u90a3\u4e48\u6709\u4e9b\u4e1c\u897f\uff08\u9898\u9762\uff09\u5c31\u4e0d\u653e\u4e86\uff0c\u6709\u5174\u8da3\u7684[\u81ea\u53d6](https://hkxa.blog.luogu.org/solution-p1099-v2)\n\n\u798f\u5229\u6570\u636e\u8fd8\u662f\u653e\u4e00\u4e0b\uff1a   \n[\u89e3\u91ca\u56fe\u7247](https://cdn.luogu.com.cn/upload/pic/20270.png)\n|| [\u798f\u5229\u6570\u636e#1](https://paste.ubuntu.com/p/SqbGg82jtm/) || [\u798f\u5229\u6570\u636e#2](https://paste.ubuntu.com/p/KwmVG8fX6Y/)\n\n## 1. \u5f15\u7406\n\n#### \u5f15\u7406 1 : \u5bf9\u4e8e\u4e00\u4e2a\u70b9\u800c\u8a00\uff0c\u79bb\u5176\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u662f\u5728\u6811\u7684\u4e00\u6761\u76f4\u5f84\u4e0a\n\n\u8bc1\u660e\uff1a\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u90a3\u4e48\u5fc5\u6709\u4e00\u6761\u8def\u6bd4\u76f4\u5f84\u66f4\u957f\uff0c\u8fdd\u53cd\u4e86\u76f4\u5f84\u7684\u5b9a\u4e49\uff0c\u6240\u4ee5\u547d\u9898\u4e3a\u771f\u3002\n\n#### \u5f15\u7406 2 : \u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6027\u590d\u6742\u5ea6\u6c42\u51fa\u76f4\u5f84\u4e0a\u6700\u8fdc\u7684\u8282\u70b9\u5230\u6811\u6838\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\n\n\u8bc1\u660e\uff1a\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u76f4\u5f84\u4e00\u6bb5\u7684\u8ddd\u79bb ( $ O(n) $ )\uff0c\u518d\u7528 $two-pointers$ \uff0c\u53cc\u6307\u9488\u4f4d\u79fb\u679a\u4e3e\u6bcf\u6bb5\u957f\u5ea6\u4e0d\u8d85\u8fc7 $s$ \u7684\u5c3d\u91cf\u957f\u7684\u8def\u5f84 ( $ O(n) $ )\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8def\u5f84\u7528 $ O(1) $ \u7684\u65f6\u95f4\u7b97\u51fa\u5176\u5230\u76f4\u5f84\u4e0a\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb\uff0c\u5728\u7528 $min$ \u51fd\u6570\u8bb0\u5f55\u7b54\u6848\u5373\u53ef\n\n## 2. \u601d\u8def\n### 1. \u76f4\u5f84\u4e0a\u6700\u8fdc\u7684\u8282\u70b9\u5230\u6811\u6838\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\n\u901a\u8fc7\u5f15\u7406 2 \uff0c\u53ef\u4ee5\u6c42\u51fa\u76f4\u5f84\u4e0a\u6700\u8fdc\u7684\u8282\u70b9\u5230\u6811\u6838\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\u3002\n### 2. \u76f4\u5f84\u5916\u6700\u8fdc\u7684\u8282\u70b9\u5230\u6811\u6838\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\n\u901a\u8fc7\u4e00\u6b21dfs\uff0c\u53ef\u4ee5\u6c42\u51fa\n### 3. \u7b54\u6848\n\u601d\u8def1\u548c\u601d\u8def2\u7b97\u51fa\u7684\u7b54\u6848\u7684\u8f83\u5927\u503c\u3002\n\n## 3. \u4ee3\u7801\n```\n/**********************************************************\n    Problem: 1099\n    User: \u822a\u7a7a\u4fe1\u5965\n    Language: C++\n    bzoj_Result: Accepted\n    bzoj_Time:1788 ms\n    bzoj_Memory:40472 kb\n************************************************************/\n \n#include <iostream>\n#include <stdio.h>\n#include <vector>\n#include <string.h>\nusing std::max;\nusing std::vector;\n \nint n, s;\n \nstruct Edge {\n    int v;\n    int w;\n    int nxt;\n} a[500007 * 2] = {0};\nint head[500007], top = 0;\n \nvoid add_edge(int u, int v, int w)\n{\n    top++;\n    a[top].v = v;\n    a[top].w = w;\n    a[top].nxt = head[u];\n    head[u] = top;\n}\n \nnamespace solve {\n    bool vis[500007] = {0};\n    int fa[500007] = {0}, dis[500007] = {0};\n    int u, v;\n    // u <---- v (\u76f4\u5f84)\n     \n    int ans = 2147483647;\n     \n    int maxlen, maxp;   \n    void dfs(int f, int p, int len)\n    {\n        if (vis[p]) return;\n        vis[p] = 1;\n        fa[p] = f;\n        dis[p] = len;\n        if (len > maxlen) {\n            maxlen = len;\n            maxp = p;\n        }\n        for (int i = head[p]; i != -1; i = a[i].nxt) {\n            dfs(p, a[i].v, len + a[i].w);\n        }\n    }\n     \n    int dis_c[500007] = {0};\n    bool mark[500007] = {0};\n    int tans1 = -1;\n    void dfs_contribution(int p, int len)\n    {\n        if (vis[p]) return;\n        vis[p] = 1;\n        dis_c[p] = len;\n        for (int i = head[p]; i != -1; i = a[i].nxt) {\n            if (mark[a[i].v]) continue;\n            dfs_contribution(a[i].v, len + a[i].w);\n        }\n    }\n    // \u8ba1\u7b97\u8d21\u732e\n     \n    void prepare_not_diam() {\n        // \u8c03\u8bd5\u4ee3\u7801 // printf(\"function1();\\n\");\n        for (int i = v; i != -1; i = fa[i]) {\n            mark[i] = 1;\n            // \u6807\u8bb0\u4e3a\u76f4\u5f84\n        }\n        for (int i = v; i != -1; i = fa[i]) {\n            dfs_contribution(i, 0);\n            // \u8ba1\u7b97\u8d21\u732e\n        }\n        // \u8c03\u8bd5\u4ee3\u7801 // printf(\"dis_c : \");\n        for (int i = 1; i <= n; i++) {\n            // \u8c03\u8bd5\u4ee3\u7801 // printf(\"%d \", dis_c[i]);\n            tans1 = max(tans1, dis_c[i]);\n            // \u8bb0\u5f55\u76f4\u5f84\u5916\u6700\u8fdc\u7684\u8282\u70b9\u5230\u6811\u6838\u7684\u8ddd\u79bb\u7684\u6700\u5c0f\u503c\n        }\n        // \u8c03\u8bd5\u4ee3\u7801 // printf(\"\\n\");\n        // \u8c03\u8bd5\u4ee3\u7801 // printf(\"tans1 = %d\\n\", tans1);\n        // \u8c03\u8bd5\u4ee3\u7801 // printf(\"\\n\");\n    }\n \n    int tans2 = 0x3f3f3f3f;\n    void prepare_in_diam() {\n        // \u8c03\u8bd5\u4ee3\u7801 // printf(\"function2();\\n\");\n        for (int i = v, j = v; j != -1; j = fa[j]) {\n            while (fa[i] != -1 && dis[i] - dis[j] > s) i = fa[i];\n            // two-pointers \u4e4b\u79fb\u52a8\n            int temp = max(dis[v] - dis[i], dis[j] - 0);\n            // \u8c03\u8bd5\u4ee3\u7801 // printf(\"temp = %d.\\n\", temp);\n            if (temp < tans2) {\n                tans2 = temp;\n                // \u8c03\u8bd5\u4ee3\u7801 // printf(\"ans update! answer : %d\\n\", ans);\n            }\n        }\n        // \u8c03\u8bd5\u4ee3\u7801 // printf(\"tans2 = %d\\n\", tans2);\n    }\n     \n    void work()\n    {\n        memset(vis, 0, sizeof(vis));\n        dfs(-1, 1, 0);\n        u = maxp;\n        maxlen = 0;\n        memset(vis, 0, sizeof(vis));\n        dfs(-1, u, 0);\n        v = maxp;\n        // u <---- v (\u76f4\u5f84)\n        memset(vis, 0, sizeof(vis));\n        prepare_not_diam(); // \u601d\u8def 1\n        prepare_in_diam(); // \u601d\u8def 2\n        ans = max(tans1, tans2); // \u8bb0\u5f55\u7b54\u6848\n    }\n}\n \nint main()\n{\n    memset(head, -1, sizeof(head));\n    scanf(\"%d%d\", &n, &s);\n    int u, v, w;\n    for (int i = 1; i <= n - 1; i++) {\n        scanf(\"%d%d%d\", &u, &v, &w);\n        add_edge(u, v, w);\n        add_edge(v, u, w);\n    }\n    solve::work();\n    printf(\"%d\", solve::ans);\n}\n```\n\n\u8c22\u8c22(\u2b50___\u2b50)\u5b8c\u7ed3\u6563\u82b1",
        "postTime": 1547727548,
        "uid": 63720,
        "name": "brealid",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e3b\u8981\u662f\u9898\u9762\u5197\u957f\uff0c\u800c\u4e2d\u5fc3\u7b80\u5355\u3002~~\u5178\u578bCCF\u9898\u76ee~~\n\u628a\u9898\u9762\u6574\u7406\u4e00\u4e0b\uff0c\u5c31\u662f\u5148\u627e\u51fa\u6811\u7684\u76f4\u5f84\uff0c\u518d\u4ece\u76f4\u5f84\u4e0a\u627e\u4e00\u6bb5\u8def\u5f84\uff0c\u4f7f\u5176\u5b83\u70b9\u5230\u8fd9\u6761\u8def\u5f84\u7684\u6700\u5927\u957f\u5ea6\u6700\u77ed\u3002\n\n1. \u6c42\u76f4\u5f84\u6700\u597d\u7528\u4e24\u6b21dfs\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u77e5\u9053\u76f4\u5f84\u7684\u4e24\u7aef\u70b9\uff0c\u987a\u4fbf\u4e5f\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u70b9\u7684\u7236\u4eb2\u4ee5\u53ca\u6bcf\u4e2a\u7ed3\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u3002\n1. \u5f97\u5230\u76f4\u5f84\u3010l\uff0cr\u3011\u540e\uff0c\u5c06\u6bcf\u4e2a\u76f4\u5f84\u7684\u70b9\u6807\u8bb0\u6389\uff0c\u5c06\u6bcf\u4e2a\u76f4\u5f84\u4e0a\u7684\u70b9\uff08u\uff09dfs\u4e00\u904d\uff08\u4e0d\u626b\u76f4\u5f84\u4e0a\u7684\u5176\u5b83\u70b9\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u70b9\u7684\u504f\u5fc3\u8ddd\u90fd\u662f0\uff09\uff0c\u6c42\u51fa\u9664\u76f4\u5f84\u4e0a\u7684\u70b9\u5916\u7684\u70b9\u5230\uff08u\uff09\u7684\u6700\u5927\u8ddd\u79bba[u]\u3002\n\t\n    \u800c\u4e14\u53ea\u8981\u4ee5\uff08u\uff09\u4e3a\u6839\u5373\u53ef\uff0c\u56e0\u4e3au\u7684\u7236\u4eb2\u4e00\u5b9a\u662f\u76f4\u5f84\u4e0a\u7684\u70b9\u4e0d\u7528\u626b\u3002\n1. \u66b4\u529b\u679a\u4e3e\u76f4\u5f84\u4e0a\u7684\u8def\u5f84\u3010i\uff0cj\u3011\u3002\u3010\u6ce8\u610f\u8def\u5f84\u548c\u76f4\u5f84\u7684\u533a\u5206\u3011\n\n   \u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u5c31\u662f\u82e5i~j\u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6\u5df2\u7ecf\u5927\u4e8es\uff0c\u90a3\u4e48i~(j+1---r)\u8fd9\u4e9b\u8def\u5f84\u4e5f\u4e00\u5b9a\u5927\u4e8es\uff0c\u76f4\u63a5break\u5c31\u884c\u4e86\u3002\n   \n   \u90a3\u4e48\u5bf9\u4e8e\u8def\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9k\uff0c\u6211\u4eec\u53ea\u8981ans=min{ a[k] }\u5c31\u884c\u4e86\u5417\uff1f \n   \n   \u663e\u7136\u4e0d\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e9ba[k]\u90fd\u662f\u9664\u76f4\u5f84\u5916\u7684\u70b9\u7684\u957f\u5ea6\uff0c\u800c\u73b0\u5728\u7684\u8def\u5f84\u4e4b\u5916\u8fd8\u6709\u4e00\u4e9b\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u5373 i\u7684\u7236\u4eb2~l \u548c j\u7684\u513f\u5b50~r \u8fd9\u4e24\u6bb5\u957f\u5ea6\uff1adis[i]\u548cdis[r]-dis[j]\u3002\n   (\u8fd9\u91cci,j\u548c\u4ee3\u7801\u4e2d\u7684\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u656c\u8bf7\u8c05\u89e3)\n   \n   \u518d\u548cans\u53d6\u4e2a\u6700\u5c0f\u503c\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u4e86\uff0c\u6700\u540emn\u8bb0\u5f55ans\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n   \n#### CODE\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int N=3012;\nint edge,n,s,head[N],vet[N*2],val[N*2],nex[N*2],a[N],fa[N],dis[N];\nbool f[N];\ninline void addedge(int u,int v,int c)\n{\n    nex[++edge]=head[u];\n    head[u]=edge;\n    vet[edge]=v;\n    val[edge]=c;\n}\ninline void dfs(int u,int father)\n{\n    int e,v;\n    for (e=head[u];v=vet[e],e;e=nex[e])\n    if (v!=father)\n    {\n        fa[v]=u;\n        dis[v]=dis[u]+val[e];\n        dfs(v,u);\n    }\n}\ninline void dfs1(int u,int father,int id)\n{\n    int e,v;\n    for (e=head[u];v=vet[e],e;e=nex[e])\n    if (v!=father&&!f[v])\n    {\n        a[id]=max(a[id],dis[v]-dis[u]);\n        dfs1(v,u,id);\n    }\n}\nint main()\n{\n    int x,y,z;\n    scanf(\"%d%d\",&n,&s);\n    for (int i=1; i<n; i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        addedge(x,y,z),addedge(y,x,z);\n    }\n    dfs(1,0);\n    int l=0,r=0;\n    for (int i=1; i<=n; i++)\n    if (dis[i]>dis[l]) l=i;\n    for (int i=1; i<=n ;i++) dis[i]=0;\n    dfs(l,0);\n    for (int i=1; i<=n; i++)\n    if (dis[i]>dis[r]) r=i;//\u4e24\u6b21dfs\u6c42\u76f4\u5f84\n    fa[l]=0;//\u6ce8\u610f\u4e00\u5b9a\u8981\u628a\u6839\u7684\u7236\u4eb2\u91cd\u7f6e\u4e3a0\uff0c\u56e0\u4e3a\u5728\u7b2c\u4e00\u6b21dfs\u4e2d\u5b83\u662f\u4e00\u4e2a\u7ed3\u70b9\n    for (int i=r; i; i=fa[i])\n    f[i]=1;//\u628a\u76f4\u5f84\u4e0a\u7684\u70b9\u6807\u8bb0\n    for (int i=r; i; i=fa[i])\n    dfs1(i,0,i);//\u6c42a[]\n    int ans=0,mn=100000012;\n    for (int i=r; i; i=fa[i])\n        for (int j=i; j; j=fa[j])\n        {\n            if (dis[i]-dis[j]>s) break;//\u4f18\u5316\n            ans=max(dis[j],dis[r]-dis[i]);//\u7279\u6b8a\u70b9\n            for (int k=i; k!=fa[j]; k=fa[k])\n            ans=max(ans,a[k]);\n            mn=min(ans,mn);\n        }\n    printf(\"%d\\n\",mn);\n    return 0;\n}\n```\n~~\u5b8c\u7ed3\u6492\u82b1~~",
        "postTime": 1573376884,
        "uid": 43103,
        "name": "Tanktt",
        "ccfLevel": 5,
        "title": "\u9898\u89e3P1099\u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "#### \u9898\u76ee\n\n\u8bbeT=(V, E, W) \u662f\u4e00\u4e2a\u65e0\u5708\u4e14\u8fde\u901a\u7684\u65e0\u5411\u56fe\uff08\u4e5f\u79f0\u4e3a\u65e0\u6839\u6811\uff09\uff0c\u6bcf\u6761\u8fb9\u5e26\u6709\u6b63\u6574\u6570\u7684\u6743\uff0c\u6211\u4eec\u79f0T\u4e3a\u6811\u7f51\uff08treenetwork\uff09\uff0c\u5176\u4e2dV, E\u5206\u522b\u8868\u793a\u7ed3\u70b9\u4e0e\u8fb9\u7684\u96c6\u5408\uff0cW\u8868\u793a\u5404\u8fb9\u957f\u5ea6\u7684\u96c6\u5408\uff0c\u5e76\u8bbeT\u6709n\u4e2a\u7ed3\u70b9\u3002 \u8def\u5f84\uff1a\u6811\u7f51\u4e2d\u4efb\u4f55\u4e24\u7ed3\u70b9a,b\u90fd\u5b58\u5728\u552f\u4e00\u7684\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff0c\u7528d(a,b)\u8868\u793a\u4ee5a,b\u4e3a\u7aef\u70b9\u7684\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u5b83\u662f\u8be5\u8def\u5f84\u4e0a\u5404\u8fb9\u957f\u5ea6\u4e4b\u548c\u3002\u6211\u4eec\u79f0d(a,b)\u4e3aa,b\u4e24\u7ed3\u70b9\u95f4\u7684\u8ddd\u79bb\u3002 \u4e00\u70b9v\u5230\u4e00\u6761\u8def\u5f84P\u7684\u8ddd\u79bb\u4e3a\u8be5\u70b9\u4e0eP\u4e0a\u7684\u6700\u8fd1\u7684\u7ed3\u70b9\u7684\u8ddd\u79bb\uff1a d(v\uff0cP)=min{d(v\uff0cu)\uff0cu\u4e3a\u8def\u5f84P\u4e0a\u7684\u7ed3\u70b9}\u3002\n\n\u6811\u7f51\u7684\u76f4\u5f84\uff1a\u6811\u7f51\u4e2d\u6700\u957f\u7684\u8def\u5f84\u79f0\u4e3a\u6811\u7f51\u7684\u76f4\u5f84\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6811\u7f51T\uff0c\u76f4\u5f84\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u53ef\u4ee5\u8bc1\u660e\uff1a\u5404\u76f4\u5f84\u7684\u4e2d\u70b9\uff08\u4e0d\u4e00\u5b9a\u6070\u597d\u662f\u67d0\u4e2a\u7ed3\u70b9\uff0c\u53ef\u80fd\u5728\u67d0\u6761\u8fb9\u7684\u5185\u90e8\uff09\u662f\u552f\u4e00\u7684\uff0c\u6211\u4eec\u79f0\u8be5\u70b9\u4e3a\u6811\u7f51\u7684\u4e2d\u5fc3\u3002 \u504f\u5fc3\u8dddECC(F)\uff1a\u6811\u7f51T\u4e2d\u8ddd\u8def\u5f84F\u6700\u8fdc\u7684\u7ed3\u70b9\u5230\u8def\u5f84F\u7684\u8ddd\u79bb\u3002 \n\n\u4efb\u52a1\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6811\u7f51T=(V, E,W)\u548c\u975e\u8d1f\u6574\u6570s\uff0c\u6c42\u4e00\u4e2a\u8def\u5f84F\uff0c\u5b83\u662f\u67d0\u76f4\u5f84\u4e0a\u7684\u4e00\u6bb5\u8def\u5f84\uff08\u8be5\u8def\u5f84\u4e24\u7aef\u5747\u4e3a\u6811\u7f51\u4e2d\u7684\u7ed3\u70b9\uff09\uff0c\u5176\u957f\u5ea6\u4e0d\u8d85\u8fc7s\uff08\u53ef\u4ee5\u7b49\u4e8es\uff09\uff0c\u4f7f\u504f\u5fc3\u8dddECC(F)\u6700\u5c0f\u3002\u6211\u4eec\u79f0\u8fd9\u4e2a\u8def\u5f84\u4e3a\u6811\u7f51T=(V,E,W)\u7684\u6838\uff08Core\uff09\u3002\u5fc5\u8981\u65f6\uff0cF\u53ef\u4ee5\u9000\u5316\u4e3a\u67d0\u4e2a\u7ed3\u70b9\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u4e0a\u8ff0\u5b9a\u4e49\u4e0b\uff0c\u6838\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\uff0c\u4f46\u6700\u5c0f\u504f\u5fc3\u8ddd\u662f\u552f\u4e00\u7684\u3002 \u4e0b\u9762\u7684\u56fe\u7ed9\u51fa\u4e86\u6811\u7f51\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u56fe\u4e2d\uff0cA-B\u4e0eA-C\u662f\u4e24\u6761\u76f4\u5f84\uff0c\u957f\u5ea6\u5747\u4e3a20\u3002\u70b9W\u662f\u6811\u7f51\u7684\u4e2d\u5fc3\uff0cEF\u8fb9\u7684\u957f\u5ea6\u4e3a5\u3002\u5982\u679c\u6307\u5b9as=11\uff0c\u5219\u6811\u7f51\u7684\u6838\u4e3a\u8def\u5f84DEFG\uff08\u4e5f\u53ef\u4ee5\u53d6\u4e3a\u8def\u5f84DEF\uff09\uff0c\u504f\u5fc3\u8ddd\u4e3a8\u3002\u5982\u679c\u6307\u5b9as=0\uff08\u6216s=1\u3001s=2\uff09\uff0c\u5219\u6811\u7f51\u7684\u6838\u4e3a\u7ed3\u70b9F\uff0c\u504f\u5fc3\u8ddd\u4e3a12\u3002\n\n**\u9898\u76ee\u4e0d\u662f\u4eba\u770b\u7684**\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u6c42\u4e00\u6761\u76f4\u5f84\u4e0a\u7684\u94fe\uff0c\u4f7f\u6240\u6709\u70b9\u5230\u8fd9\u6761\u94fe\u4e0a\u7684\u6700\u5c0f\u503c\u4e2d\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002\n\n#### \u601d\u8def\n\u8003\u8bd5\u7684\u65f6\u5019\u56e0\u4e3a\u6ca1\u6709\u65f6\u95f4\uff0c\u6c34\u4e8665\u5206\u66b4\u529b\uff08\u66b4\u529b\u5206\u771f\u80a5\uff09\uff0c\u73b0\u5728\u6765\u770b\uff0c\u5176\u5b9e\u4e5f\u4e0d\u662f\u5f88\u590d\u6742\u3002\n\n![\u56fe1](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1494764397908&di=b5ded99b0dfdd2ea72eb50ce5ca2656f&imgtype=0&src=http%3A%2F%2Fdn-vijos-org-static.qbox.me%2Fstatic%2FProblemImg%2FP1362.png)\n\n\u5bf9\u4e8e\u4e00\u6761\u94fe\u6765\u8bf4\uff0c\u5176\u504f\u5fc3\u8ddd\u8981\u4e48\u5728\u4e24\u4e2a\u7aef\u70b9\u5230\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\u5904\uff0c\u8981\u4e48\u5728\u4e2d\u95f4\u7684\u90a3\u4e9b\u5b50\u6811\u4e2d\u7684\u6700\u8fdc\u8ddd\u79bb\u4e2d\u3002\n\n\u6211\u4eec\u63a5\u7740\u601d\u8003\u89e3\u7684\u7279\u5f81\u3002\u53d1\u73b0\uff0c\u5f53\u94fe\u7684\u5de6\u7aef\u70b9\u4e0d\u53d8\u65f6\uff0c\u53f3\u7aef\u70b9\u79fb\u52a8\u7684\u8d8a\u8fdc\uff0c\u6240\u4ea7\u751f\u7684\u504f\u5fc3\u8ddd\u5e94\u5f53\u8d8a\u77ed\uff0c\u89e3\u4f1a\u66f4\u4f18\uff0c\u6240\u4ee5\u81ea\u7136\u60f3\u5230\u4e86**\u5c3a\u53d6**\u3002\n\n\u5728\u5149\u6807\u79fb\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528**\u5355\u8c03\u961f\u5217**\u8fdb\u884c\u7ef4\u62a4,\u8fd9\u6837\u6574\u4f53\u7684\u590d\u6742\u5ea6\u5c31\u662fO(n)\u7684\u4e86\u3002\n\n#### \u4ee3\u7801\n\u4ee3\u7801\u53ef\u4ee5\u5199\u5f97\u5f88\u77ed\n```c++\n#include<bits/stdc++.h>\n#define M 200005\n#define clr(x,y) memset(x,y,sizeof(x))\nusing namespace std;\nstruct edge{int to,co;};\nint n,s,ed,mx,fa[M],dis[M],val[M],root,Q[M],ans=2e9,mark[M];\nvector<edge>G[M];\nvoid dfs(int x,int f,int w,bool flag){\n    if(!flag){\n        dis[x]=w;fa[x]=f;\n        if(w>mx)mx=w,ed=x;\n    }else val[root]=max(val[root],w);\n    for(int i=0;i<G[x].size();i++){\n        int u=G[x][i].to,v=G[x][i].co;\n        if(u==f||(flag&&(u==fa[root]||mark[u])))continue;\n        dfs(u,x,w+v,flag);\n    }\n}\nint main(){\n    cin>>n>>s;\n    for(int i=1,a,b,c;i<n;i++){\n        scanf(\"%d%d%d\",&a,&b,&c);\n        G[a].push_back((edge){b,c});\n        G[b].push_back((edge){a,c});\n    }\n    dfs(1,-1,0,0);\n    clr(dis,0);\n    mx=0;dfs(ed,-1,0,0);\n    int t=ed,l=ed,L=1,R=0;\n    while(t){\n        root=t;dfs(t,0,0,1);\n        while(L<=R&&val[Q[R]]<=val[t])R--;\n        while(dis[l]-dis[t]>s)mark[l]=2,l=fa[l];\n        while(L<=R&&mark[Q[L]]==2)L++;\n        Q[++R]=t;\n        ans=min(ans,max(val[Q[L]],max(dis[t],mx-dis[l])));\n        mark[t]=1;t=fa[t];\n    } \n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1534770312,
        "uid": 46787,
        "name": "zeroy0410",
        "ccfLevel": 0,
        "title": "BZOJ1999 \u6811\u7f51\u7684\u6838\uff08\u6570\u636e\u52a0\u5f3a\u7248\uff09"
    },
    {
        "content": "#\u7b97\u6cd5\u697c\u4e0b\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\u54c8,\u4f46\u6211\u8fd8\u662f\u8981\u8865\u5145\u4e00\u4e9b:\n\n\n\u7b97\u6cd5\u4e00,\u5c31\u662f\u697c\u4e0b\u8bf4\u7684\uff1a\u6a21\u62df\u3002\n\n\u201c\u9898\u76ee\u8bf4\u4ec0\u4e48\uff0c\u6211\u4eec\u505a\u4ec0\u4e48\u201d\u3002\u8fd9\u662f\u6a21\u62df\u7b97\u6cd5\u7684\u6839\u672c\u601d\u60f3\u3002\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u529e\u6cd5\u8fdb\u884c\u6a21\u62df\uff1a\n\n1\u3001     \u901a\u8fc7Floyd\u7b97\u6cd5\u6c42\u51fa\u9876\u70b9\u5bf9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5e76\u8bb0\u5f55\u4e0b\u5177\u4f53\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n2\u3001     \u6807\u8bb0\u6240\u6709\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\n\n3\u3001     \u679a\u4e3e\u8def\u5f84\u7684\u8d77\u70b9\uff0c\u8fdb\u884cDFS\u7a77\u4e3e\u8def\u5f84\u7684\u7ec8\u70b9\u3002\n\n4\u3001     \u5bf9\u4e8e\u4e00\u6761\u786e\u5b9a\u4e0b\u6765\u7684\u8def\u5f84\uff0c\u901a\u8fc7\u76f4\u63a5\u6a21\u62df\u7684\u65b9\u6cd5\u5f97\u51fa\u504f\u5fc3\u77e9\u3002\n\n\u4ee5\u4e0a\u7b97\u6cd5\u975e\u5e38\u5bb9\u6613\u7406\u89e3\uff0c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n3). \u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u7b2c3\u6b65\u4e2d\uff0c\u663e\u7136\u4e00\u6761\u8def\u5f84\u4e00\u5b9a\u4f1a\u201c\u8d70\u5230\u4e0d\u80fd\u518d\u8d70\u4e3a\u6b62\u201d\uff0c\u56e0\u4e3a\u8def\u5f84\u7684\u5305\u542b\u5173\u7cfb\u51b3\u5b9a\u4e86\u504f\u5fc3\u77e9\u7684\u5927\u5c0f\u5173\u7cfb\u3002\n\n\n\u7b97\u6cd5\u4e8c\uff1a\u6811\u5f62\u52a8\u6001\u89c4\u5212\n\n\u8fd9\u662f\u672c\u9898\u6700\u4e3a\u6807\u51c6\u4e3b\u6d41\u7684\u7b97\u6cd5\uff0c\u4e5f\u662f\u6700\u7b80\u6377\u7684\u540c\u65f6\u6beb\u65e0\u5f02\u8bae\u5730AC\u672c\u9898\u7684\u7b97\u6cd5\u3002\n\n\u7b97\u6cd5\u9996\u5148\u8981\u6c42\u6211\u4eec\u627e\u51fa\u4e00\u6761\u8def\u5f84\uff08\u8fd9\u53ef\u4ee5\u901a\u8fc7\u8457\u540d\u7684\u201c\u4e24\u6b21BFS\u201d\u7b97\u6cd5\u5f97\u5230\uff09\uff0c\u7136\u540e\uff0c\u9009\u53d6\u4efb\u610f\u4e00\u4e2a\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u4f5c\u4e3a\u6839\u8282\u70b9\u5efa\u7acb\u6709\u6839\u6811\uff0c\u901a\u8fc7\u7ecf\u5178\u6811\u5f62\u52a8\u6001\u89c4\u5212\u786e\u5b9a\u8282\u70b9\u7684\u6700\u957f\u4e0b\u964d\u8def\u548c\u6b21\u957f\u4e0b\u964d\u8def\u3002\n\n\u7136\u540e\uff0c\u7b97\u6cd5\u679a\u4e3e\u8def\u5f84\u7684\u8d77\u70b9\u3002\u7136\u540e\u57fa\u4e8e\u4e0b\u8ff0\u4e8b\u5b9e\uff1a\u5408\u6cd5\u8def\u5f84\u53ea\u80fd\u5411\u6700\u957f\u4e0b\u964d\u8def\u65b9\u5411\u5ef6\u4f38\u3002\uff08\u5982\u679c\u4e0d\u662f\u8fd9\u6837\uff0c\u5219\u6700\u957f\u4e0b\u964d\u8def\u4e0d\u80fd\u88ab\u5c4f\u853d\uff0c\u5176\u504f\u5fc3\u77e9\u4e00\u5b9a\u4e0d\u4f1a\u662f\u6700\u5c0f\uff1b\u53e6\u5916\uff0c\u5408\u6cd5\u8def\u5f84\u4e0d\u80fd\u50cf\u4e24\u6761\u8def\u4e0a\u5ef6\u4f38\uff0c\u56e0\u4e3a\u6211\u4eec\u679a\u4e3e\u7684\u662f\u8def\u5f84\u7684\u8d77\u70b9\uff09\u3002\u901a\u8fc7\u8fd9\u4e2a\u4e8b\u5b9e\uff0c\u5f88\u5bb9\u6613\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u6811\u5f62\u52a8\u6001\u89c4\u5212\u5728O(n)\u7684\u65f6\u95f4\u5185\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u786e\u5b9a\u7684\u8d77\u70b9\u7ed9\u51fa\u8fd9\u79cd\u60c5\u5f62\u4e0b\u7684\u6700\u5c0f\u504f\u5fc3\u77e9\u3002\n\n\u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n2)\uff0c\u4e14\u7b80\u6d01\u660e\u4e86\uff0c\u662f\u672c\u9898\u7684\u6b63\u7edf\u7b97\u6cd5\u3002\n\n\n\u63a5\u4e0b\u6765\u53d9\u8ff0\u7684\u4e24\u4e2a\u8fdb\u9636\u7b97\u6cd5\uff0c\u90fd\u9700\u8981\u638c\u63e1\u4e00\u4e9b\u6709\u5173\u672c\u9898\u7684\u8d2a\u5fc3\u6027\u8d28\u3002\n\n\u6027\u8d28\u4e00\uff1a\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u6838\uff0c\u4f7f\u5f97\u8be5\u6838\u8986\u76d6\u6811\u7684\u4e2d\u5fc3\u6240\u5728\u7684\u8fb9\u6240\u8fde\u63a5\u7684\u4e24\u4e2a\u9876\u70b9\u4e2d\u7684\u4e00\u4e2a\u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u8fd8\u53ef\u4ee5\u505a\u8fd9\u6837\u7684\u7406\u89e3\uff1a\n\n1\u3001     \u5982\u679c\u4e2d\u5fc3\u5728\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u4e00\u5b9a\u5728\u67d0\u4e2a\u6838\u4e0a\u3002\n\n2\u3001     \u5982\u679c\u4e2d\u5fc3\u6240\u5728\u8fb9\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7s\uff0c\u5219\u8fd9\u6761\u8fb9\u4e00\u5b9a\u5728\u67d0\u4e2a\u6838\u4e0a\u3002\n\n3\u3001     \u5982\u679c\u4e2d\u5fc3\u6240\u5728\u8fb9\u957f\u5ea6\u8d85\u8fc7s\uff08\u4e0d\u53ef\u9009\u5165\uff09\uff0c\u5219\u8fd9\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u5728\u6838\u4e0a\u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u5176\u5b9e\u662f\u4e0d\u96be\u7406\u89e3\u7684\u3002\u5982\u679c\u4e2d\u5fc3\u6240\u5728\u7684\u8fb9\u4e0d\u88ab\u9009\u5165\uff0c\u5219\u504f\u5fc3\u77e9\u4e00\u5b9a\u8d85\u8fc7\u76f4\u5f84\u7684\u4e00\u534a\u3002\u4f46\u662f\u4e00\u65e6\u4e2d\u5fc3\u6240\u5728\u7684\u8fb9\u88ab\u9009\u5165\uff0c\u5219\u504f\u5fc3\u77e9\u4e00\u5b9a\u4e0d\u8d85\u8fc7\u76f4\u5f84\u7684\u4e00\u534a\u3002\u8fd9\u5c31\u7528\u6700\u7b80\u6377\u7684\u8bed\u8a00\u89e3\u91ca\u4e86\u6027\u8d28\u7684\u6b63\u786e\u6027\uff08\u5f53\u7136\uff0c\u5bf9\u4e8e\u60c5\u5f623\uff0c\u4e25\u683c\u7684\u8bc1\u660e\u8fd8\u9700\u8981\u4f5c\u8fdb\u4e00\u6b65\u7684\u8ba8\u8bba\uff09\n\n\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u786e\u5b9a\u81f3\u591a2\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e9b\u8282\u70b9\u4e00\u5b9a\u5728\u6838\u4e0a\u3002\u53ea\u9700\u8981\u5bf9\u8fd9\u4e9b\u8282\u70b9\u4f5c\u51fa\u8fd0\u7b97\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b26\u5408\u9898\u610f\u7684\u6700\u5c0f\u504f\u5fc3\u77e9\u3002\u7531\u6b64\u4ea7\u751f\u7b97\u6cd5\u4e09\u3002\n\n\u7b97\u6cd5\u4e09\uff1a\u8d2a\u5fc3\u6027\u8d28+\u4e8c\u5206\u7b54\u6848\u3002\n\n\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6700\u5c0f\u504f\u5fc3\u77e9\uff0c\u540c\u65f6\u4e5f\u77e5\u9053\u6307\u5b9a\u7684\u6709\u6839\u6811\u4e2d\u6839\u5fc5\u7136\u5728\u6838\u4e0a\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e00\u6b21\u4ece\u4e0b\u5230\u4e0a\u7684\u904d\u5386\uff0c\u4e00\u65e6\u957f\u5ea6\u8d85\u8fc7\u7ed9\u51fa\u7684\u6700\u5c0f\u504f\u5fc3\u77e9\uff0c\u5c31\u5c06\u63a5\u4e0b\u6765\u7684\u8282\u70b9\u8fdb\u884c\u6807\u8bb0\u3002\uff08\u5f53\u7136\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u63a5\u8fdb\u884c\u7684\u590d\u6742\u5ea6\u662fO(n2)\u7684\uff0c\u4f46\u662f\u501f\u9274\u7b97\u6cd5\u4e8c\u4e2d\u7684\u52a8\u6001\u89c4\u5212\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u901a\u8fc7\u81ea\u4e0a\u800c\u4e0b\u7684\u89c4\u5212\u628a\u590d\u6742\u5ea6\u964d\u5230O(n)\uff09\u3002\u7136\u540e\uff0c\u6211\u4eec\u89c2\u5bdf\u88ab\u6807\u8bb0\u7684\u8282\u70b9\uff08\u8fd9\u4e9b\u8282\u70b9\u5fc5\u987b\u5728\u6838\u4e0a\uff09\u662f\u5426\u80fd\u591f\u5f62\u6210\u4e00\u6761\u6ee1\u8db3\u9898\u610f\u7684\u6838\u3002\n\n\u8981\u5f62\u6210\u6ee1\u8db3\u9898\u610f\u7684\u6838\uff0c\u5fc5\u987b\u6ee1\u8db3\u8fd9\u6837\u51e0\u4e2a\u6761\u4ef6\uff1a\n\n1\u3001     \u5fc5\u987b\u5f62\u6210\u4e00\u6761\u8def\u5f84\uff0c\u4e0d\u80fd\u6709\u5206\u652f\u3002\n\n2\u3001     \u5fc5\u987b\u5411\u6700\u957f\u4e0b\u964d\u8def\u6216\u8005\u662f\u5728\u76f4\u5f84\u4e0a\u7684\u6b21\u957f\u4e0b\u964d\u8def\u8fdb\u884c\u5ef6\u4f38\u3002\n\n3\u3001     \u8def\u5f84\u7684\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7s.\n\n\u4ee5\u4e0a\u76843\u70b9\u5224\u65ad\u90fd\u80fd\u5728O(n)\u7684\u52a8\u6001\u89c4\u5212\u4e2d\u4e88\u4ee5\u9a8c\u8bc1\u3002\u6545\u672c\u9898\u53ef\u4ee5\u5728O(n)\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u5bf9\u67d0\u4e00\u4e2a\u5df2\u77e5\u6700\u5c0f\u504f\u5fc3\u77e9\u7684\u5224\u65ad\u3002\n\n\u9274\u4e8e\u6700\u5c0f\u504f\u5fc3\u77e9\u7684\u53ef\u884c\u6027\u662f\u5355\u8c03\u7684\uff0c\u6211\u4eec\u91c7\u7528\u4e8c\u5206\u7b54\u6848\u7684\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u672c\u9898\uff0c\u7b97\u6cd5\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(nlogc)\uff0c\u5176\u4e2dc\u662f\u7ed9\u5b9a\u7684\u56fe\u4e2d\u76f4\u5f84\u7684\u957f\u5ea6\u3002\u4ece\u672c\u9898\u6765\u770b\uff0cc <= 300,000\n\n\n\u6027\u8d28\u4e8c\uff1a\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u76f4\u5f84\uff0c\u90fd\u5b58\u5728\u4e00\u6bb5\u6ee1\u8db3\u9898\u610f\u7684\u6838\u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u7684\u8bc1\u660e\u7a0d\u663e\u9ebb\u70e6\u3002\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\uff1a\u5047\u8bbe\u5f53\u524d\u76f4\u5f84\u4e0a\u4e0d\u5b58\u5728\u6ee1\u8db3\u9898\u610f\u7684\u6838\u3002\u4f46\u662f\uff0c\u6839\u636e\u76f4\u5f84\u4e0e\u56fe\u7684\u8fde\u901a\u6027\uff0c\u5f53\u524d\u76f4\u5f84\u4e0a\u4e00\u5b9a\u5b58\u5728\u67d0\u4e00\u6761\u6838\u7684\u67d0\u4e00\u6bb5\uff0c\u800c\u90a3\u6761\u6838\u7684\u5269\u4e0b\u7684\u4e24\u7aef\u4f4d\u4e8e\u53e6\u4e00\u6761\u76f4\u5f84\u4e0a\uff1b\u6362\u8a00\u4e4b\uff0c\u6211\u4eec\u8ba4\u4e3a\u6b64\u4e8b\u4e00\u5b9a\u5b58\u5728\u7c7b\u4f3c>---<\u8fd9\u6837\u7684\u7ed3\u6784\u3002\n\n\u8fd9\u65f6\uff0c\u6839\u636e\u76f4\u5f84\u7684\u6700\u957f\u6027\uff0c\u6211\u4eec\u4e0d\u96be\u7ed9\u51fa\u4e24\u7aef\u4e0d\u91cd\u5408\u90e8\u5206\u7684\u957f\u5ea6\u5bf9\u5e94\u76f8\u7b49\uff08\u5426\u5219\uff0c\u4ea7\u751f\u53e6\u4e00\u6761\u76f4\u5f84\uff09\u3002\u6839\u636e\u504f\u5fc3\u77e9\u7684\u5b9a\u4e49\uff0c\u6b64\u65f6\u76f4\u5f84\u7684\u5269\u4e0b\u4e24\u6bb5\u4e0d\u7ba1\u50cf\u90a3\u4e2a\u65b9\u5411\u8fdb\u884c\u5ef6\u4f38\uff0c\u504f\u5fc3\u77e9\u90fd\u662f\u4e0d\u53d8\u7684\uff08\u6bd4\u65b9\u8bf4\u5728>---<\u5f62\u72b6\u4e2d\u7684<\u4e2d\uff0c\u4f60\u9009\u62e9\u9879\u4e0a\u9762\u5ef6\u4f38\uff0c\u5219\u4e0b\u9762\u7684\u957f\u5ea6\u5c31\u4f1a\u6210\u4e3a\u504f\u5fc3\u77e9\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002\u7531\u4e8e\u4f60\u65e0\u6cd5\u540c\u65f6\u5411\u4e24\u4e2a\u65b9\u5411\u5ef6\u4f38\uff0c\u6240\u4ee5\u504f\u5fc3\u77e9\u662f\u4e0d\u4f1a\u53d8\u7684\uff09\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u4e24\u6761\u76f8\u4ea4\u7684\u76f4\u5f84\uff0c\u6838\u53ea\u4e0e\u76f4\u5f84\u76f8\u4ea4\u90e8\u5206\u6709\u5173\u3002\u4ece\u800c\u8bc1\u660e\u4e86\u6211\u4eec\u7684\u65ad\u8a00\uff1a\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u76f4\u5f84\uff0c\u90fd\u5b58\u5728\u4e00\u6bb5\u6ee1\u8db3\u9898\u610f\u7684\u6838\u3002\n\n\u8fd9\u4e2a\u6027\u8d28\u610f\u5473\u7740\u6211\u4eec\u4e0d\u9700\u8981\u5173\u6ce8\u56fe\u4e2d\u7684\u6240\u6709\u76f4\u5f84\uff0c\u800c\u53ea\u9700\u8981\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u6761\u76f4\u5f84\u3002\u8fd9\u5c31\u4e16\u754c\u5bfc\u81f4\u4e86\u672c\u9898\u7684\u6700\u4f18\u7b97\u6cd5\u3002\n\n\u7b97\u6cd5\u56db\uff1a\u8d2a\u5fc3\u6027\u8d28+\u5355\u8c03\u961f\u5217\n\n\u9996\u5148\u8fd8\u662f\u901a\u8fc7\u201c\u4e24\u6b21BFS\u201d\u7ed9\u51fa\u56fe\u4e2d\u7684\u76f4\u5f84\u957f\u5ea6\u4ee5\u53ca\u4e00\u6761\u5177\u4f53\u7684\u76f4\u5f84\u3002\u7136\u540e\uff0c\u5bf9\u4e8e\u8be5\u6761\u76f4\u5f84\u800c\u8a00\uff0c\u5c06\u6240\u6709\u7684\u4e0d\u518d\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u4f5c\u4e3a\u201c\u5916\u5411\u6811\u201d\u63d2\u5728\u8def\u5f84\u4e0a\u3002\u4e0e\u4e4b\u540c\u65f6\uff0c\u8bb0\u5f55\u8def\u5f84\u4e0a\u6bcf\u4e2a\u8282\u70b9v\u7684\u5916\u5411\u6811\u4e2d\u6700\u957f\u8fb9dist[v]\u4ee5\u53ca\u8ddd\u79bb\u8d77\u70b9\uff08\u8d77\u70b9\u53ef\u4ee5\u968f\u610f\u6307\u5b9a\uff0c\u901a\u5e38\u4ee5\u8def\u5f84\u8d77\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff09\u7684\u201c\u7edd\u5bf9\u5750\u6807\u201dloc[v]\uff0c\u5bf9\u4e8e\u8def\u5f84\u7684\u7ec8\u70b9x\u6765\u8bf4\uff0c\u5047\u8bbe\u5176\u8d77\u70b9\u4e3ast\uff0c\uff08\u663e\u7136st\u8d8a\u5c0f\u8d8a\u597d\uff09\uff0c\u5219\u5176\u5bf9\u5e94\u7684\u504f\u5fc3\u77e9ECC(x)\u53ef\u4ee5\u7531\u4e0b\u5f0f\u7ed9\u51fa\uff1a\n\n\u5176\u4e2dtop\u8868\u793a\u8def\u5f84\u7684\u957f\u5ea6\u3002\n\n\u4e0d\u96be\u770b\u51fa\uff0cECC(x)\u6709\u4e09\u9879\u6700\u5927\u503c\u7ec4\u6210\uff0c\u7b2c\u4e8c\u9879\u6700\u5927\u503c\u53ef\u4ee5\u901a\u8fc7\u6253\u64c2\u53f0\u7b80\u5355\u5730\u5b9e\u73b0\uff0c\u4f46\u662f\u7b2c\u4e00\u9879\u548c\u7b2c\u4e09\u9879\u7531\u4e8e\u6709\u5220\u9664\u64cd\u4f5c\uff0c\u5fc5\u987b\u901a\u8fc7\u5355\u8c03\u961f\u5217\u624d\u80fd\u5b9e\u73b0\u3002\u7531\u4e8e\u5220\u9664\u65f6\u4ece\u5de6\u5230\u53f3\u4e25\u683c\u5347\u5e8f\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u961f\u5217\u5c31\u53ef\u4ee5\u5b8c\u6210\u4efb\u52a1\u4e86\u3002\uff08\u5982\u679c\u5143\u7d20j\u548ci\u6ee1\u8db3 \uff0c\u5219\u5143\u7d20i\u662f\u4e0d\u5fc5\u8981\u7684\u3002\uff09\n\n[color=red] \u8be5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u662f\u672c\u9898\u7684\u6700\u597d\u7b97\u6cd5\u3002[/color]\n\n\n\u6458\u81ea\u5ea6\u5a18..\n\n\n\u4e0b\u9762\u662f\u7a0b\u5e8f(\u6458\u81ea\u67d0\u4f4d\u5927\u795e\u7684blog\uff09:\n\n\n```delphi\n\nvar\n f:array[0..300,0..300]of longint;\n a:array[1..300]of longint;    b:array[1..300]of boolean;\n n,i,j,k,l,m,s:longint;\nfunction max(a,b:longint):longint;\nbegin if a>b then exit(a) else exit(b);end;\nfunction min(a,b:longint):longint;\nbegin if a<b then exit(a) else exit(b);end;\nbegin\n  read(n,s);\n  for i:=1 to n do for j:=1 to n do if i<>j then f[i,j]:=$7FFFFFF;\n  for i:=2 to n do begin read(j,k,l);f[j,k]:=l;f[k,j]:=l;end;\n  for i:=1 to n do for j:=1 to n do for k:=1 to n do\n      if f[j,i]+f[i,k]<f[j,k] then f[j,k]:=f[j,i]+f[i,k];\n  m:=0;for i:=2 to n do if f[1,i]>m then begin m:=f[1,i];j:=i;end;\n  m:=0;for k:=1 to n do if f[j,k]>m then begin m:=f[j,k];i:=k;end;\n  m:=maxlongint;\n  for k:=1 to n do if f[i,k]+f[k,j]=f[i,j] then\n   for l:=1 to n do  if f[i,l]+f[l,j]=f[i,j] then\n    if (f[k,l]<=s)and(max(min(f[i,k],f[i,l]),min(f[j,k],f[l,j]))<m) then\n    m:=max(min(f[i,k],f[i,l]),min(f[j,k],f[l,j]));\n  writeln(m);\nend.\n\n```\n",
        "postTime": 1439551981,
        "uid": 8470,
        "name": "zhangjl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "[luogu 1099/bzoj 1999](https://www.lydsy.com/JudgeOnline/problem.php?id=1999)\n\n##### \u9898\u610f\n\n\u7ed9\u5b9a1\u68f5\u65e0\u6839\u6811\uff0c\u6811\u8fb9\u6709\u6b63\u8fb9\u6743\u3002\n\n\u70b9\u8def\u8ddd$D(u,F)$\uff1a\u6700\u5c0f\u5316\u70b9\u70b9\u8ddd\n\n\u504f\u5fc3\u8ddd$ECC(F)$\uff1a\u6700\u5927\u5316\u70b9\u8def\u8ddd\n\n\u73b0\u5728\u9650\u5236$F$\u5c5e\u4e8e\u539f\u6811\u76f4\u5f84\uff0c\u4e14$F$\u7684\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e$s$\uff0c\u6c42\u6700\u5c0f\u5316\u504f\u5fc3\u8ddd\u3002\n\n\u5bf9\u4e8e$30$%\u7684\u6570\u636e\uff0c$5 \\leq n \\leq 300$\n\n\u5bf9\u4e8e$100$%\u7684\u6570\u636e\uff0c$5 \\leq n \\leq 5 \\times 10^5$\n\n##### \u9898\u89e3\n\n> \u8fd9\u662f\u4ec0\u4e48\u795e\u4ed9\u6bd2\u7624\u9898\uff01\n\n\u66b4\u529b\u9009\u624b\uff1a\n\n\u9650\u5236$F$\u5c5e\u4e8e\u539f\u6811\u76f4\u5f84\uff1f\u539f\u6811\u76f4\u5f84\u8fd9\u4e48\u591a\u6761\uff0c\u96be\u9053\u9010\u4e00\u627e\u51fa\u518d\u505a\uff1f\n\n\u5e72\u8106\u76f4\u63a5\u679a\u4e3e$F$\u7684\u4e24\u7aef\u70b9\uff0c\u5e76\u5c06$F$\u4e0a\u8282\u70b9\u6807\u8bb0\u4e3a\u4e0d\u53ef\u8bbf\u95ee\u3002\u4ece\u4e24\u7aef\u70b9\u8fdb\u884c$DFS$\u6c42\u5f97\u6700\u957f\u8ddd\u79bb\u5373\u53ef\u5224\u5b9a\u80fd\u5426\u5f97\u5230\u76f4\u5f84\u3002\u82e5\u80fd\u5f97\u5230\u76f4\u5f84\uff0c\u5219\u6c42\u504f\u5fc3\u8ddd\u3002\n\n\u504f\u5fc3\u8ddd\u662f\u6700\u5927\u7684\u70b9\u8def\u8ddd\uff0c\u800c\u70b9\u8def\u8ddd\u7684\u672c\u8d28\u662f\u8be5\u70b9\u5230\u8be5\u8def\u5f84\u4e0a\uff0c\u65e2\u4e0d\u7ecf\u8fc7\u91cd\u590d\u7684\u8fb9\u4e5f\u4e0d\u7ecf\u8fc7\u8be5\u8def\u5f84\u4e0a\u7684\u8fb9\uff0c\u6545\u53ef\u4ee5\u8f6c\u5316\u6210\u4ece\u8be5\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u5411\u5916$DFS$\u5f97\u5230\u3002\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n^3)$\u3002\n\n------\n\n\u4f18\u79c0\u9009\u624b\uff1a\n\n\u539f\u6811\u76f4\u5f84\u6709\u591a\u6761\u4e0d\u597d\u505a\uff1f\u6211\u5148\u6765\u5927\u80c6\u731c\u60f3\u4e00\u53d1\uff0c\u8003\u8651\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u90fd\u662f\u7b49\u4ef7\u7684\u3002\n\n\u8bc1\u660e\uff1f~~\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be~~\u3002\n\n**\u6027\u8d281\uff0c1\u68f5\u6811\u4e2d\uff0c\u4efb\u610f\u4e24\u6761\u76f4\u5f84\u90fd\u662f\u76f8\u4ea4\u7684**\n\n> \u5047\u8bbe\u4e24\u6761\u76f4\u5f84\u4e0d\u76f8\u4ea4\uff0c\u4e00\u5b9a\u5b58\u5728\u67d0\u6761\u7b80\u5355\u8def\u5f84\u5c06\u4e24\u6761\u76f4\u5f84\u8fde\u8d77\u6765\u3002\u5f62\u5982\u6b64\uff1a\n>\n> ![KylenU.png](https://s2.ax1x.com/2019/10/27/KylenU.png)\n>\n> \u9009\u62e9\u5176\u4e2d\u6700\u957f\u7684\u4e24\u6761\u5206\u94fe\u52a0\u4e0a\u7528\u4e8e\u8fde\u63a5\u7684\u7b80\u5355\u8def\u5f84\uff0c\u4f1a\u5f97\u5230\u4e00\u6761\u66f4\u957f\u7684\u76f4\u5f84\uff0c\u4e0e\u5047\u8bbe\u77db\u76fe\u3002\n\n**\u6027\u8d282\uff0c\u5404\u6761\u76f4\u5f84\u5728\u4e0d\u76f8\u4ea4\u7684\u4e24\u7aef\uff0c\u957f\u5ea6\u5206\u522b\u76f8\u7b49**\uff08\u611f\u8c22[::Dash::](https://blog.csdn.net/cyxhahaha)\uff09\n\n> \u8003\u8651\u4e24\u6761\u76f4\u5f84AB\u548cCD\uff0c\u5b83\u4eec\u7684\u91cd\u53e0\u90e8\u5206\u4e3aEF\u3002\n>\n> ![Ky3ImT.png](https://s2.ax1x.com/2019/10/27/Ky3ImT.png)\n>\n> \u76f4\u5f84\u6700\u957f\uff0c\u65b0\u7684\u7ec4\u5408\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7\u76f4\u5f84\u957f\u5ea6\u3002\u56e0\u6b64$DF = BF,AE = EC$\u3002\n\n**\u63a8\u8bba\uff1a\u5728\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u4e0a\u6c42\u6700\u5c0f\u504f\u5fc3\u8ddd\u90fd\u662f\u7b49\u4ef7\u7684**\n\n> \u504f\u5fc3\u8ddd\u7684\u5b9a\u4e49\u4e3a\u6240\u6709\u70b9\u5230\u5df2\u9009\u5b9a\u8def\u5f84\u7684\u8ddd\u79bb\u6700\u5927\u503c\u3002\u672c\u8d28\u4e0a\u662f\u8def\u5f84\u4e0a\u5404\u70b9\u5230\u975e\u8def\u5f84\u4e0a\u5404\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u503c\u3002\n>\n> \u6839\u636e\u76f4\u5f84\u7684\u6700\u957f\u6027\uff0c\u504f\u5fc3\u8ddd\u4e3a\u8def\u5f84\u4e0a\u7684\u70b9\u5230\u67d0\u4e2a\u76f4\u5f84\u7aef\u70b9\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u3002\n>\n> \u5f53\u9009\u53d6\u7684\u8def\u5f84\u4e0d\u5305\u542b\u516c\u5171\u90e8\u5206\u65f6\uff0c\u4e3e\u4e2a\u6817\u5b50\uff0c\u5728$AE$\u4e0a\u53d6\u70b9$P,Q$\uff08$Q$\u66f4\u9760$E$\uff09\uff0c\u5219\u504f\u5fc3\u8ddd\u4e3a$max(CQ,DQ)$\u3002\n>\n> \u5f53\u9009\u53d6\u7684\u8def\u5f84\u5305\u542b\u516c\u5171\u90e8\u5206\u65f6\uff0c\u4e3e\u4e2a\u6817\u5b50\uff0c\u5728$AE$\u4e0a\u53d6\u70b9$P$\uff0c$BF$\u4e0a\u53d6\u70b9$Q$\u65f6\uff0c\u504f\u5fc3\u8ddd\u4e3a$max(CE,DF)$\u3002\u540c\u7406\uff0c$CE$\u4e0a\u53d6\u70b9$P$\uff0c$DF$\u4e0a\u53d6\u70b9$Q$\uff0c\u90a3\u4e48\u504f\u5fc3\u8ddd\u4e3a$max(AE,BF)$\u3002\u6839\u636e$AE = CE$\u4e14$BF = DF$\uff0c\u65e0\u8bba\u7aef\u70b9\u53d6\u5728\u54ea\u4e00\u6761\u76f4\u5f84\u4e0a\uff0c\u504f\u5fc3\u8ddd\u90fd\u76f8\u7b49\u3002\n>\n> \u4e24\u79cd\u60c5\u51b5\u8fdb\u884c\u6bd4\u5bf9\uff0c\u4e3e\u5728$AB$\u4e0a\u53d6\u8def\u5f84\u7684\u6817\u5b50\u6765\u8bf4\uff0c\u7531\u4e8e$CQ > CE\u4e14DQ > DF$\uff0c\u7aef\u70b9\u90fd\u53d6\u5728$AE$\u4e0a\u4e00\u5b9a\u4e0d\u59821\u4e2a\u53d6\u5728$AE$\u4e0a1\u4e2a\u53d6\u5728$BF$\u4e0a\u4f18\u3002\u540c\u7406\uff0c\u7aef\u70b9\u53d6\u5728\u4efb\u610f\u975e\u516c\u5171\u90e8\u5206\u7684\u7ed3\u679c\u4e00\u5b9a\u4e0d\u4f18\u4e8e\u5305\u542b\u516c\u5171\u90e8\u5206\u7684\u7ed3\u679c\uff0c\u5373\u4f7f\u679a\u4e3e\u4e86\u4e5f\u4e0d\u53ef\u80fd\u7eb3\u5165\u6700\u4f18\u89e3\u4e2d\u3002\u771f\u6b63\u7eb3\u5165\u6700\u4f18\u89e3\u7684\u5305\u542b\u516c\u5171\u90e8\u5206\u7684\u60c5\u51b5\u504f\u5fc3\u8ddd\u53c8\u76f8\u7b49\uff0c\u56e0\u6b64\u5728\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u4e0a\u6c42\u6700\u5c0f\u504f\u5fc3\u8ddd\u90fd\u662f\u7b49\u4ef7\u7684\u3002\n\n\u7531\u4e0a\u8ff0\u8bba\u8bc1\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c\u5047\u8bbe\u6211\u4eec\u56fa\u5b9a\u8def\u5f84\u5728\u76f4\u5f84\u4e0a\u7684\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u53f3\u7aef\u70b9\u79bb\u5de6\u7aef\u70b9\u8d8a\u8fdc\u8d8a\u597d\u3002\u679a\u4e3e\u8def\u5f84\u5de6\u7aef\u70b9\uff0c**\u8d2a\u5fc3**\u5730\u6c42\u51fa\u8def\u5f84\u957f\u5ea6\u5728$s$\u4e4b\u5185\u65f6\u7684\u6700\u53f3\u7aef\u70b9\uff0c\u518d$DFS$\u8ba1\u7b97\u504f\u5fc3\u8ddd\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u4e00\u79cd\u4f18\u5316\u65b9\u6cd5\u662f\u8003\u8651\u7b54\u6848\u7684**\u5355\u8c03\u6027**\u3002\n\n\u4e00\u6761\u8def\u5f84\u7684\u504f\u5fc3\u8ddd\uff0c\u7b49\u4e8e\u8be5\u8def\u5f84\u4e24\u7aef\u70b9\u4e0e\u5176\u6240\u5728\u76f4\u5f84\u4e24\u7aef\u70b9\u7684\u8ddd\u79bb  \u4e0e \u8be5\u8def\u5f84\u4e0a\u70b9\u4e0d\u7ecf\u8fc7\u6240\u5728\u76f4\u5f84\u4e0a\u70b9 \u5230\u8fbe \u975e\u6240\u5728\u76f4\u5f84\u4e0a\u70b9\u7684\u8ddd\u79bb \u7684\u6700\u5927\u503c\u3002\u7531\u6b64\u53ef\u77e5\uff0c\u5bf9\u4e8e\u7b54\u6848\u800c\u8a00\uff0c\u8def\u5f84\u7aef\u70b9\u79bb\u76f4\u5f84\u7aef\u70b9\u8d8a\u8fd1\u8d8a\u597d\uff1b\u4f46\u53c8\u9700\u8981\u4fdd\u8bc1\u4e24\u7aef\u70b9\u8ddd\u79bb\u4e0d\u8d85\u8fc7$s$\uff0c\u6545\u4e0d\u80fd\u79bb\u76f4\u5f84\u7aef\u70b9\u592a\u8fd1\u3002\n\n\u4e0d\u59a8\u91c7\u7528\u4e8c\u5206\u7b54\u6848\u7684\u6280\u5de7\uff0c\u4e8c\u5206$mid$\u8868\u793a\u504f\u5fc3\u8ddd\u5927\u5c0f\uff0c\u5224\u65ad\u504f\u5fc3\u8ddd\u80fd\u5426\u4e0d\u8d85\u8fc7$mid$\u3002\u5177\u4f53\u5730\uff0c\u4ece\u4e24\u4e2a\u7aef\u70b9\u5404\u81ea\u5f00\u59cb\uff0c\u5728\u4e0e\u76f4\u5f84\u7aef\u70b9\u8ddd\u79bb\u4e0d\u8d85\u8fc7$mid$\u7684\u524d\u63d0\u4e0b\u4e0d\u65ad\u5411\u4e2d\u5fc3\u79fb\u52a8\uff1b\u79fb\u52a8\u5b8c\u6bd5\u540e$DFS$\u6c42\u504f\u5fc3\u8ddd\uff0c\u82e5\u504f\u5fc3\u8ddd\u5c0f\u4e8e\u7b49\u4e8e$mid$\u4e14\u4e24\u7aef\u70b9\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e$s$\uff0c\u5219\u8bf4\u660e$mid$\u5408\u6cd5\uff0c$hi = mid$\uff1b\u5426\u5219\u4e0d\u5408\u6cd5\uff0c$lo = mid$\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(log(\\sum v)(n + m))$\u3002\n\n\u53e6\u4e00\u79cd\u4f18\u5316\u65b9\u6cd5\uff0c\u4fdd\u7559$O(n^2)$\u89e3\u6cd5\u4e2d\u7aef\u70b9\u53cc\u6307\u9488\u79fb\u52a8\u7684\u8fc7\u7a0b\uff0c\u4f18\u5316\u6c42\u89e3\u504f\u5fc3\u8ddd\u7684\u8fc7\u7a0b\uff0c\u5373\u4e0d\u8fdb\u884c\u91cd\u590d\u7684$DFS$\u3002\n\n\u4e0a\u6587\u4e5f\u63d0\u5230\uff0c\u504f\u5fc3\u8ddd\u4ec5\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u4e00\u79cd\u662f\u8def\u5f84\u7aef\u70b9\u5230\u9009\u5b9a\u76f4\u5f84\u7684\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u6bcf\u6b21\u53ef\u4ee5$O(1)$\u6c42\u89e3\uff1b\u53e6\u4e00\u79cd\u662f\u8def\u5f84\u4e0a\u7684\u5404\u4e2a\u70b9 \u4e0d\u7ecf\u8fc7\u9009\u5b9a\u76f4\u5f84\u4e0a\u7684\u70b9 \u5230\u8fbe\u7684\u6700\u8fdc\u70b9\u8ddd \u7684\u6700\u5927\u503c\uff0c\u4e0d\u96be\u53d1\u73b0 \u5404\u70b9 \u4e0d\u7ecf\u8fc7\u9009\u5b9a\u76f4\u5f84\u4e0a\u7684\u70b9 \u5230\u8fbe\u7684\u6700\u8fdc\u70b9\u8ddd\u53ea\u4e0e\u4f60\u9009\u5b9a\u7684\u76f4\u5f84\u6709\u5173\uff0c\u4e0e\u4f60\u9009\u62e9\u7684\u8def\u5f84\u7aef\u70b9\u65e0\u5173\uff0c\u53ea\u97001\u6b21$DFS$\u5373\u53ef\u6c42\u5f97\uff0c\u8bbe\u4e3a$d[u]$\u3002\n\n\u8bbe\u9009\u5b9a\u76f4\u5f84\u4e0a\u70b9\u4e3a$u_1...u_t$\uff0c\u9009\u5b9a\u7684\u8def\u5f84\u7aef\u70b9\u4e3a$u_i,u_j$\uff0c\u504f\u5fc3\u8ddd\u4e3a$max(max(d[u_i \\rightarrow u_j]),dis(1,u_i),dis(u_j,u_t))$\u5c40\u90e8\u6700\u5927\u503c$max(d[u_i \\rightarrow u_j])$\u4f7f\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$ \u3002\n\n\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\u7ed3\u5408\u63a8\u8bba\u7684\u8bc1\u660e\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53$max(d[u_i \\rightarrow u_j])$\u6210\u4e3a\u7b54\u6848\u65f6\uff0c\u8def\u5f84\u4e00\u5b9a\u5305\u542b\u4e86\u76f4\u5f84\u7684\u516c\u5171\u90e8\u5206\uff0c\u504f\u5fc3\u8ddd\u5927\u5c0f\u662f\u4e2a\u5b9a\u503c\uff0c\u4e0d\u968f\u8def\u5f84\u7aef\u70b9\u7684\u6539\u53d8\u800c\u6539\u53d8\uff1b\u6545\u6c42\u89e3\u5f0f$max(max(d[u_1 \\rightarrow u_t]),dis(1,u_i),dis(u_j,t))$\u80fd\u591f\u4fdd\u8bc1\u7b54\u6848\u7684\u6b63\u786e\u6027\uff0c\u4e14\u53ea\u9700\u7ef4\u62a41\u4e2a\u53d8\u91cf\uff0c\u6548\u7387\u66f4\u9ad8\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n[\u4ee3\u7801\u89c1\u6b64](https://github.com/littlewyy/luogu/blob/master/luogu1099.cpp)\n\n",
        "postTime": 1572228521,
        "uid": 19153,
        "name": "littlewyy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "~~\u7b2c\u4e00\u773c\u770b\u9898\u76ee\u63cf\u8ff0\u4e00\u5806\u672f\u8bed\u4f3c\u4e4e\u4e0d\u53ef\u505a~~\n\n\u9996\u5148\u4e24\u904dDFS\u6c42\u51fa\u76f4\u5f84\n\n\u7136\u540e\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\n\u53ef\u4ee5\u5c06\u70b9\u5206\u4e3a\u5728\u76f4\u5f84\u4e0a\u7684\u4e0e\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u4e24\u79cd\u5206\u522b\u8ba1\u7b97\uff1a\n\n\u8bbe\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u4e3a$s,t$\uff0c\u4ee5$s$\u4e3a\u6839\u5efa\u6811\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u76f4\u5f84\u4e0a\u7684\u4e00\u6bb5\u8def\u5f84$(x,y)$\uff0c\u5728\u8def\u5f84\u4e0a\u7684\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u663e\u7136\u4e3a0\u3002\n\n\u5728\u76f4\u5f84\u4e0a\u4e14\u4e0d\u5728\u8def\u5f84\u4e0a\u7684\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5373\u4e3a\u8be5\u70b9\u5230$x$\u4e0e\u5230$y$\u8ddd\u79bb\u7684\u8f83\u5c0f\u503c\u3002\n\n\u800c\u5bf9\u4e8e\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n\u8bbe\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9$i$\u4e0e\u76f4\u5f84\u7684\u8ddd\u79bb\u7b49\u4e8e\u8be5\u70b9\u4e0e\u76f4\u5f84\u4e0a\u67d0\u70b9$j$\u7684\u8ddd\u79bb\u3002\n\n\u5bf9\u4e8e\u4e00\u6bb5\u8def\u5f84$(x,y)$\uff0c\u82e5$j$\u4e0d\u5728\u8def\u5f84\u4e0a\uff0c\u5219\u6839\u636e\u76f4\u5f84\u7684\u5b9a\u4e49\uff0c$i$\u70b9\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u3002\u82e5$j$\u5728\u8def\u5f84\u4e0a\uff0c\u5219\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684$i$\u70b9\uff0c\u4e0e$j$\u70b9\u8ddd\u79bb\u6700\u5927\u7684\u70b9\u624d\u53ef\u80fd\u5bf9\u7b54\u6848\u4ea7\u751f\u5f71\u54cd\u3002\n\n\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a$Max$\u6570\u7ec4\uff0c$Max_i$\u8868\u793a\u8ddd\u79bb$i$\u70b9\u6700\u8fdc\u4e14\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u5230$i$\u70b9\u7684\u8ddd\u79bb\u3002\u53ef\u4ee5\u5c06\u76f4\u5f84\u4e0a\u7684\u70b9\u6807\u8bb0\uff0c\u7136\u540e\u5bf9\u4e8e\u76f4\u5f84\u4e0a\u7684\u6bcf\u4e2a\u70b9DFS\u6c42\u51fa$Max$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u8def\u5f84\u957f\u5ea6\u53d8\u5c0f\u4f1a\u5bfc\u81f4\u7b54\u6848\u53d8\u52a3\uff0c\u4e8e\u662f\u6211\u4eec\u5728\u76f4\u5f84\u4e0a\u8fdb\u884c\u5c3a\u53d6\uff0c\u5bf9\u4e8e\u76f4\u5f84\u4e0a\u7684\u6bcf\u4e2a\u70b9$l$\uff0c\u627e\u5230\u6ee1\u8db3\u6df1\u5ea6\u5c0f\u4e8e\u7b49\u4e8e$l-s$\u7684\u6df1\u5ea6\u6700\u5927\u7684\u70b9$r$\uff0c\u7136\u540e\u5c1d\u8bd5\u66f4\u65b0\u7b54\u6848\u3002\n\n\u590d\u6742\u5ea6$O(n^2)$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m;\nint cnt;\nint head[303];\nstruct Edge{\n\tint nxt,to,w;\n}e[603];\nint dis[303],f[303],Max[303];\nint s,t,ans=1e9;\nbool v[303];\nvoid add(int u,int v,int w)\n{\n\te[++cnt].nxt=head[u];\n\te[cnt].to=v;\n\te[cnt].w=w;\n\thead[u]=cnt;\n}\nvoid dfs(int x,int fa)\n{\n\tf[x]=fa;\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint to=e[i].to;\n\t\tif(to==fa) continue;\n\t\tdis[to]=dis[x]+e[i].w;\n\t\tdfs(to,x);\n\t}\n}\nvoid dfs1(int x,int fa,int now)\n{\n\tMax[now]=max(Max[now],dis[x]);\n\tfor(int i=head[x];i;i=e[i].nxt)\n\t{\n\t\tint to=e[i].to;\n\t\tif(to==fa) continue;\n\t\tif(v[to]) continue;\n\t\tdis[to]=dis[x]+e[i].w;\n\t\tdfs1(to,x,now);\n\t}\n}\nvoid find_d()\n{\n\tdfs(1,0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(dis[i]>dis[s]) s=i;\n\tdis[s]=0;\n\tdfs(s,0);\n\tfor(int i=1;i<=n;i++)\n\t\tif(dis[i]>dis[t]) t=i;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tadd(u,v,w);\n\t\tadd(v,u,w);\n\t}\n\tfind_d();\n\tfor(int i=t;i;i=f[i])\n\t\tv[i]=true;\n\tfor(int i=t;i;i=f[i])\n\t{\n\t\tdfs1(i,f[i],i);\n\t\tMax[i]-=dis[i];\n\t}\n\tint l=t,r=t;\n\tfor(;l;l=f[l])\n\t{\n\t\twhile(dis[r]-dis[l]>m) r=f[r];\n\t\tint res=max(dis[t]-dis[r],dis[l]);\n\t\tfor(int i=r;;i=f[i])\n\t\t{\n\t\t\tres=max(res,Max[i]);\n\t\t\tif(i==l) break;\n\t\t}\n\t\tans=min(ans,res);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1571838219,
        "uid": 91889,
        "name": "Dirt\u3001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "##### \u849f\u84bb\u53c8\u53cc\u53d2\u53d5\u6765\u53d1\u9898\u89e3\u4e86......\n\n\u770b\u4e86\u5404\u4f4d\u795e\u7287\u4eec\u7684$O(n^{2})$\u548c$O(n)$\u7684\u4f18\u79c0\u7b97\u6cd5\uff0c\u849f\u84bb\u6df1\u611f\u81ea\u6127\u4e0d\u5982\uff0c\u4e8e\u662f\u6211\u5c31\u6765\u4e86\u4e00\u53d1$O(n^{3})$\u7684$Floyd$\u9884\u5904\u7406\u7684\u66b4\u529b\u89e3\u6cd5\u3002\n\n\u7136\u800c\u4e8b\u5b9e\u4e0a\uff0c\u4e5f\u8bb8\u662f\u6211\u6709\u4e9b\u7ec6\u8282\u5904\u7406\u7684\u65b9\u6cd5\u4e0d\u591f\u4f18\u79c0\uff0c\u5b9e\u9645\u4e0a\u7684\u590d\u6742\u5ea6\u662f\u6bd4$O(n^{3})$\u9ad8\u4e00\u4e9b\u7684\uff0c\u4e0d\u8fc7\u4e5f\u80fd\u8fc7\n\n\u8fd9\u4e5f\u662f\u7531\u4e8e$CCF$\u7684\u6570\u636e\u8fc7\u4e8e\u6c34\u624d\u80fd\u5199\u7684\u505a\u6cd5\uff0c\u6362\u6210\u5927\u4e00\u70b9\u6570\u636e\u6211\u7684\u66b4\u529b\u80af\u5b9a\u76f4\u63a5T\u98de\u4e86\n\n\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\uff1a\u5148\u627e\u51fa\u4efb\u610f\u4e00\u6761\u76f4\u5f84\uff0c\u7136\u540e\u679a\u4e3e\u76f4\u5f84\u4e0a\u7684\u6240\u6709\u5b50\u8def\u5f84\uff0c\u6c42\u51fa\u6bcf\u6bb5\u5b50\u8def\u5f84\u7684\u504f\u5fc3\u8ddd\uff0c\u6700\u540e\u627e\u51fa\u6700\u5c0f\u7684\u504f\u5fc3\u8ddd\u5c31\u884c\u4e86\n\n\u5173\u4e8e\u600e\u4e48\u627e\u76f4\u5f84\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5148\u901a\u8fc7\u90bb\u63a5\u77e9\u9635\u5b58\u4e0b\u6bcf\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e$Floyd$\u9884\u5904\u7406\u8dd1\u4e00\u904d\u5373\u53ef\u5f97\u5230\u6240\u6709\u70b9\u5230\u4e00\u53f7\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u79bb\u4e00\u53f7\u70b9\u6700\u8fdc\u7684\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u662f\u8fd9\u4e2a\u6811\u7f51\u7684\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\n\n\u7136\u540e\u6211\u4eec\u4ee5\u8fd9\u4e2a\u7aef\u70b9\u4e3a\u6839\uff0c\u518d\u627e\u4e00\u4e2a\u79bb\u7aef\u70b9\u6700\u8fdc\u7684\u70b9\uff0c\u8fd9\u5c31\u662f\u76f4\u5f84\u7684\u53e6\u5916\u4e00\u4e2a\u7aef\u70b9\n\n\u6211\u7684\u4ee3\u7801\u91cc\u591a\u4e86\u4e00\u4efd\u5947\u5947\u602a\u602a\u7684\u4e00\u4e2a\u6b65\u9aa4\uff0c\u662f\u5173\u4e8e\u6c42\u6240\u6709\u4e0d\u5728\u5f53\u524d\u6211\u4eec\u679a\u4e3e\u7684\u5b50\u8def\u5f84\u4e0a\u7684\u70b9\u5230\u5b50\u8def\u5f84\u7684\u8ddd\u79bb\u7684\n\n\u56e0\u4e3a\u6211\u8003\u8651\u5230\u5f53\u524d\u679a\u4e3e\u7684\u5b50\u8def\u5f84\u5f88\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\u70b9\u5728\u8def\u5f84\u5185\u90e8\uff0c\u6240\u4ee5\u6613\u5f97\u5f53\u524d\u679a\u4e3e\u7684\u4e0d\u5728\u5b50\u8def\u5f84\u7684\u70b9\u5230\u5b50\u8def\u5f84\u7684\u8ddd\u79bb\u5373\u4e3a\u8be5\u70b9\u5230\u5b50\u8def\u5f84\u4e0a\u6240\u6709\u7684\u70b9\u7684\u8ddd\u79bb\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u8fd9\u4e2a\u8bc1\u660e\u662f\u5f88\u7b80\u5355\u7684\uff0c\u6211\u5c31\u4e0d\u5728\u8fd9\u91cc\u8bf4\u660e\u4e86\uff0c\u81ea\u5df1\u753b\u753b\u56fe\u5c31\u660e\u767d\u4e86\n\n##### \u4e0b\u9762\u653e\u4e0a\u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\n#define mem(i,j) memset(i,j,sizeof(i))\n#define int long long \nusing namespace std;\ninline int read(){\n    int res=0,f=1;char ch=' ';\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){res=res*10+ch-'0';ch=getchar();}\n    return res*f;\n}\nint _max(int a,int b){return a>b?a:b;}\nint _min(int a,int b){return a<b?a:b;}\nconst int N=6e2+5,inf=(1<<25);\nint cnt,to[N],nxt[N],head[N],n,m,res=inf,ans=inf,ans2,root1,root2,f[N][N],road[N],tot,s,dis[N],vis[N];\nbool flag;\nvoid qxx(int x,int y){\n\tto[++cnt]=y;\n\tnxt[cnt]=head[x];\n\thead[x]=cnt;\n}\nvoid add(int x,int y){\n\tqxx(x,y);\n\tqxx(y,x);\n}\nvoid _getline(int x,int fa,int y){\n\tif(x==y){flag=1;road[++tot]=x;return ;}\n\tfor(register int i=head[x];i;i=nxt[i]){\n\t\tint k=to[i];\n\t\tif(k==fa)continue;\n\t\t_getline(k,x,y);\n\t\tif(flag){\n\t\t\troad[++tot]=x;\n\t\t\treturn;\n\t\t}\n\t}\n}\nvoid Floyd(){\n\tfor(register int k=1;k<=n;k++)\n\t\tfor(register int i=1;i<=n;i++)\n\t\t\tfor(register int j=1;j<=n;j++)\n\t\t\t\tif(f[i][j]>f[i][k]+f[k][j])f[i][j]=f[i][k]+f[k][j];\n}\n#undef int \nint main() {\n\tn=read(),s=read();\n\tmem(f,0x3f);\n\tfor(register int i=1;i<=n;i++)f[i][i]=0;\n\tfor(register int i=1;i<n;i++){\n\t\tint l=read(),r=read(),dis=read();\n\t\tadd(l,r);//\u90bb\u63a5\u8868\u5148\u5b58\u4e00\u4e0b\u8fb9\uff0c\u4e0b\u9762\u6c42\u76f4\u5f84\u4e0a\u7684\u70b9\u65f6\u6709\u7528\n\t\tf[l][r]=f[r][l]=dis;//\u90bb\u63a5\u77e9\u9635\u5b58\u8ddd\u79bb\n\t}\n\tFloyd();\n\tlong long maxn=0;\n\tfor(register int i=2;i<=n;i++)\n\t\tif(maxn<f[1][i])maxn=f[1][i],root1=i;\n\tmaxn=0;\n\tfor(register int i=1;i<=n;i++){\n\t\tif(i==root1)continue;\n\t\tif(maxn<f[root1][i])maxn=f[root1][i],root2=i;\n\t}\n\t_getline(root1,0,root2);\n\tfor(register int i=1;i<=tot;i++)\n\t\tfor(register int j=i;j<=tot;j++){\n\t\t\tif(f[road[i]][road[j]]>s)break;\n           \t\t//road\u6570\u7ec4\u91cc\u5b58\u7684\u662f\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\n\t\t\tans2=0;mem(vis,0);mem(dis,0x3f);\n\t\t\tfor(register int u=i;u<=j;u++)vis[road[u]]=1;\n\t\t\tfor(register int k=1;k<=n;k++){\n            \t\t\t//\u6b64\u5904\u4e3a\u6211\u63d0\u5230\u7684\u5947\u602a\u7684\u5730\u65b9\n\t\t\t\tif(vis[k])continue;\n\t\t\t\tfor(register int u=i;u<=j;u++)dis[k]=_min(dis[k],f[k][road[u]]);\n\t\t\t}\n\t\t\tfor(register int k=1;k<=n;k++){\n\t\t\t\tif(vis[k])continue;\n\t\t\t\tans2=_max(ans2,dis[k]);\n\t\t\t}\n\t\t\tans=_min(ans,ans2);\n\t\t}\n\tprintf(\"%lld\\n\",ans);\n    return 0;\n}\n```\n\u5f53\u7136\u5173\u4e8e\u5982\u4f55\u6c42\u4e0d\u5728\u5b50\u8def\u5f84\u4e0a\u7684\u70b9\u5230\u5b50\u8def\u5f84\u7684\u8ddd\u79bb\u4e5f\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u6211\u7684\u65b9\u6cd5\u8fc7\u4e8e\u66b4\u529b\u4e86\u4e9b\uff0c\u4e0d\u8fc7\u5e94\u8be5\u662f\u975e\u5e38\u76f4\u89c2\u7684\uff0c\u4e8b\u5b9e\u4e0a\u641c\u7d22\u4e5f\u662f\u53ef\u884c\u7684",
        "postTime": 1565743926,
        "uid": 123318,
        "name": "ViXpop",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "## 0. \u798f\u5229\n\n\u7ed9\u51fa\u4e24\u7ec4\u6837\u4f8b\u6570\u636e\uff08\u5176\u5b9e\u5c31\u662f\u9898\u76ee\u4e2d\u6240\u8bf4\u7684\u6811\u7f51\u5b9e\u4f8b\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/20270.png)\n\n\u6570\u636e\u5165\u53e3\uff1a [\u798f\u5229\u6570\u636e#1](https://paste.ubuntu.com/p/SqbGg82jtm/) || [\u798f\u5229\u6570\u636e#2](https://paste.ubuntu.com/p/KwmVG8fX6Y/)\n\n## 1. \u9898\u9762\n### \u9898\u76ee\u63cf\u8ff0\n\u8bbe$T=(V,E,W)$\u662f\u4e00\u4e2a\u65e0\u5708\u4e14\u8fde\u901a\u7684\u65e0\u5411\u56fe\uff08\u4e5f\u79f0\u4e3a\u65e0\u6839\u6811\uff09\uff0c\u6bcf\u6761\u8fb9\u5230\u6709\u6b63\u6574\u6570\u7684\u6743\uff0c\u6211\u4eec\u79f0$T$\u4e3a\u6811\u7f51\uff08``treebetwork``\uff09\uff0c\u5176\u4e2d$V$\uff0c$E$\u5206\u522b\u8868\u793a\u7ed3\u70b9\u4e0e\u8fb9\u7684\u96c6\u5408\uff0c$W$\u8868\u793a\u5404\u8fb9\u957f\u5ea6\u7684\u96c6\u5408\uff0c\u5e76\u8bbe$T$\u6709$n$\u4e2a\u7ed3\u70b9\u3002\n\n\u8def\u5f84\uff1a\u6811\u7f51\u4e2d\u4efb\u4f55\u4e24\u7ed3\u70b9$a$\uff0c$b$\u90fd\u5b58\u5728\u552f\u4e00\u7684\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff0c\u7528$d(a, b)$\u8868\u793a\u4ee5$a, b$\u4e3a\u7aef\u70b9\u7684\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u5b83\u662f\u8be5\u8def\u5f84\u4e0a\u5404\u8fb9\u957f\u5ea6\u4e4b\u548c\u3002\u6211\u4eec\u79f0$d(a, b)$\u4e3a$a, b$\u4e24\u7ed3\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\n\n$D(v, P)=\\min\\{d(v, u)\\}$, $u$\u4e3a\u8def\u5f84$P$\u4e0a\u7684\u7ed3\u70b9\u3002\n\n\u6811\u7f51\u7684\u76f4\u5f84\uff1a\u6811\u7f51\u4e2d\u6700\u957f\u7684\u8def\u5f84\u6210\u4e3a\u6811\u7f51\u7684\u76f4\u5f84\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6811\u7f51$T$\uff0c\u76f4\u5f84\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u53ef\u4ee5\u8bc1\u660e\uff1a\u5404\u76f4\u5f84\u7684\u4e2d\u70b9\uff08\u4e0d\u4e00\u5b9a\u6070\u597d\u662f\u67d0\u4e2a\u7ed3\u70b9\uff0c\u53ef\u80fd\u5728\u67d0\u6761\u8fb9\u7684\u5185\u90e8\uff09\u662f\u552f\u4e00\u7684\uff0c\u6211\u4eec\u79f0\u8be5\u70b9\u4e3a\u6811\u7f51\u7684\u4e2d\u5fc3\u3002\n\n\u504f\u5fc3\u8ddd$\\mathrm{ECC}(F)$\uff1a\u6811\u7f51T\u4e2d\u8ddd\u8def\u5f84F\u6700\u8fdc\u7684\u7ed3\u70b9\u5230\u8def\u5f84$F$\u7684\u8ddd\u79bb\uff0c\u5373\n\n$\\mathrm{ECC}(F)=\\max\\{d(v, F),v \\in V\\}$\n\n\u4efb\u52a1\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6811\u7f51$T=(V, E, W)$\u548c\u975e\u8d1f\u6574\u6570$s$\uff0c\u6c42\u4e00\u4e2a\u8def\u5f84$F$\uff0c\u4ed6\u662f\u67d0\u76f4\u5f84\u4e0a\u7684\u4e00\u6bb5\u8def\u5f84\uff08\u8be5\u8def\u5f84\u4e24\u7aef\u5747\u4e3a\u6811\u7f51\u4e2d\u7684\u7ed3\u70b9\uff09\uff0c\u5176\u957f\u5ea6\u4e0d\u8d85\u8fc7$s$\uff08\u53ef\u4ee5\u7b49\u4e8es\uff09\uff0c\u4f7f\u504f\u5fc3\u8ddd$ECC(F)$\u6700\u5c0f\u3002\u6211\u4eec\u79f0\u8fd9\u4e2a\u8def\u5f84\u4e3a\u6811\u7f51$T=(V, E, W)$\u7684\u6838\uff08``Core``\uff09\u3002\u5fc5\u8981\u65f6\uff0c$F$\u53ef\u4ee5\u9000\u5316\u4e3a\u67d0\u4e2a\u7ed3\u70b9\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u4e0a\u8ff0\u5b9a\u4e49\u4e0b\uff0c\u6838\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\uff0c\u4f46\u6700\u5c0f\u504f\u5fc3\u8ddd\u662f\u552f\u4e00\u7684\u3002\n\n\u4e0b\u9762\u7684\u56fe\u7ed9\u51fa\u4e86\u6811\u7f51\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u56fe\u4e2d\uff0c$A-B$\u4e0e$A-C$\u662f\u4e24\u6761\u76f4\u5f84\uff0c\u957f\u5ea6\u5747\u4e3a$20$\u3002\u70b9$W$\u662f\u6811\u7f51\u7684\u4e2d\u5fc3\uff0c$EF$\u8fb9\u7684\u957f\u5ea6\u4e3a$5$\u3002\u5982\u679c\u6307\u5b9a$s=11$\uff0c\u5219\u6811\u7f51\u7684\u6838\u4e3a\u8def\u5f84``DEFG``\uff08\u4e5f\u53ef\u4ee5\u53d6\u4e3a\u8def\u5f84``DEF``\uff09\uff0c\u504f\u5fc3\u8ddd\u4e3a$8$\u3002\u5982\u679c\u6307\u5b9a$s=0$\uff08\u6216$s=1$\u3001$s=2$\uff09\uff0c\u5219\u6811\u7f51\u7684\u6838\u4e3a\u7ed3\u70b9$F$\uff0c\u504f\u5fc3\u8ddd\u4e3a$12$\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/20270.png)\n### \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n#### \u8f93\u5165\u683c\u5f0f\uff1a\n\u5171$n$\u884c\u3002\n\u7b2c$1$\u884c\uff0c\u4e24\u4e2a\u6b63\u6574\u6570$n$\u548c$s$\uff0c\u4e2d\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u5176\u4e2d$n$\u4e3a\u6811\u7f51\u7ed3\u70b9\u7684\u4e2a\u6570\uff0c$s$\u4e3a\u6811\u7f51\u7684\u6838\u7684\u957f\u5ea6\u7684\u4e0a\u754c\u3002\u8bbe\u7ed3\u70b9\u7f16\u53f7\u4ee5\u6b64\u4e3a$1,2,\u2026,n$\u3002\n\u4ece\u7b2c$2$\u884c\u5230\u7b2c$n$\u884c\uff0c\u6bcf\u884c\u7ed9\u51fa$3$\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6b63\u6574\u6570\uff0c\u4f9d\u6b21\u8868\u793a\u6bcf\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7f16\u53f7\u548c\u957f\u5ea6\u3002\u4f8b\u5982\uff0c\u201c$2\\ 4\\ 7$\u201d\u8868\u793a\u8fde\u63a5\u7ed3\u70b9$2$\u4e0e$4$\u7684\u8fb9\u7684\u957f\u5ea6\u4e3a$7$\u3002\n#### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4e3a\u6307\u5b9a\u610f\u4e49\u4e0b\u7684\u6700\u5c0f\u504f\u5fc3\u8ddd\u3002\n### \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n#### \u8f93\u5165\u6837\u4f8b#1\uff1a\n```plain\n5 2\n1 2 5\n2 3 2\n2 4 4\n2 5 3\n```\n#### \u8f93\u51fa\u6837\u4f8b#1\uff1a\n```plain\n5\n```\n#### \u8f93\u5165\u6837\u4f8b#2\uff1a\n```plain\n8 6\n1 3 2\n2 3 2 \n3 4 6\n4 5 3\n4 6 4\n4 7 2\n7 8 3\n```\n#### \u8f93\u51fa\u6837\u4f8b#2\uff1a\n```plain\n5\n```\n### \u8bf4\u660e\n$40\\%$\u7684\u6570\u636e\u6ee1\u8db3\uff1a$5 \\le n \\le 15$  \n$70\\%$\u7684\u6570\u636e\u6ee1\u8db3\uff1a$5 \\le n \\le 80$  \n$100\\%$\u7684\u6570\u636e\u6ee1\u8db3\uff1a$5 \\le n \\le 300,0 \\le s \\le 1000$\u3002\u8fb9\u957f\u5ea6\u4e3a\u4e0d\u8d85\u8fc7$1000$\u7684\u6b63\u6574\u6570  \n\nNOIP 2007 \u63d0\u9ad8\u7b2c\u56db\u9898\n\n## 2. \u7406\u89e3\u9898\u76ee\n\n\u849f\u84bb\uff1a\u8fd9\u9053\u9898\u76ee\u597d\u957f\u554a\uff01\u4e0d\u770b\u4e86\u4e0d\u770b\u4e86\u3002  \n\u5927\u4f6c\uff1a\u5176\u5b9e\u8fd9\u9053\u9898\u76ee\u867d\u7136\u957f\uff0c\u4f46\u53ef\u4ee5\u7ffb\u8bd1\u6210\u4e00\u53e5\u8bdd\uff1a   \n> \u7ed9\u5b9a\u4e00\u68f5\u5e26\u8fb9\u6743\u65e0\u6839\u6811\uff0c\u5728\u5176\u76f4\u5f84\u4e0a\u6c42\u51fa\u4e00\u6bb5\u957f\u5ea6\u4e0d\u8d85\u8fc7 $s$ \u7684\u8def\u5f84 $F$ \u53ef\u4ee5\u4e3a\u4e00\u4e2a\u70b9\uff09\uff0c\u4f7f\u5f97\u79bb\u8def\u5f84\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\u6700\u77ed\u3002 \n\n\u849f\u84bb\uff1a\u597d\u50cf\u61c2\u4e86\u4ec0\u4e48\u3002   \n\u849f\u84bb\uff1a\u6211\u53bb\u505a\u505a\u770b\u3002   \n\n## 3. \u8fc8\u51fa\u7b2c\u4e00\u6b65\n\n\u849f\u84bb\uff1a\u6211\u5148\u6253\u4e00\u4e2a\u6c42\u6811\u7684\u76f4\u5f84\u7684\u5b50\u7a0b\u5e8f\u3002\n\n```\nnamespace get_treeDiam {\n\tbool vis[307] = {0};\n    // vis \u6570\u7ec4\uff1a\u8bb0\u5f55\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\n\tint fa[307] = {0}, dis[307] = {0};\n    // fa \u6570\u7ec4\uff1a\u7528\u6765\u8bb0\u5f55\u81ea\u5df1\u7684\u7236\u4eb2\u8282\u70b9\uff0c\u904d\u5386\u76f4\u5f84\u65f6\u8981\u7528\u3002\n    // dis \u6570\u7ec4\uff1a\u7528\u6765\u8bb0\u5f55\u81ea\u5df1\u5230\u7236\u4eb2\u7684\u8def\u5f84\u957f\u5ea6\uff0c\u5728\u5224\u65ad\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e s \u65f6\u8981\u7528\u3002\n\t\n\tint maxp, maxlen;\t\n    // \u6700\u8fdc\u7684\u8282\u70b9 & \u5230\u6700\u8fdc\u8282\u70b9\u7684\u8ddd\u79bb\n    \n\tvoid dfs(int f, int p, int len)\n\t{\n    \t// f : \u7236\u4eb2\u8282\u70b9\n        // p : \u672c\u6b21\u904d\u5386\u5230\u7684\u8282\u70b9\n        // len : \u672c\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u957f\u5ea6\n\t\tif (vis[p]) return;\n\t\tvis[p] = 1;\n\t\tfa[p] = f;\n\t\tdis[p] = len;\n\t\tif (len > maxlen) {\n\t\t\tmaxlen = len;\n\t\t\tmaxp = p;\n\t\t}\n\t\tfor (int i = 0; i < vec[p].size(); i++) {\n\t\t\tdfs(p, vec[p][i].v, len + vec[p][i].w);\n\t\t}\n\t}\n\t\n\tvoid work()\n\t{\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tdfs(-1, 1, 0);\n\t\tint u = maxp;\n        // \u4ee5\u4e0a\uff1a\u7b2c\u4e00\u6b21\u904d\u5386\n\t\tmaxlen = 0; \n\t\tmemset(vis, 0, sizeof(vis));\n\t\tdfs(-1, u, 0);\n\t\tint v = maxp;\n        // \u4ee5\u4e0a\uff1a\u7b2c\u4e8c\u6b21\u904d\u5386\n        // \u4ee5 u, v \u4e3a\u8282\u70b9\u7684\u8fd9\u6761\u8def\u5f84\u5c31\u662f\u6811\u7684\u76f4\u5f84\u3002\n\t}\n}\n```\n\n## 4. \u66b4\u529b\u51fa\u5947\u8ff9\n\n\u849f\u84bb\uff1a\u770b\u6570\u636e\u8303\u56f4\uff0c\u597d\u50cf\u53ef\u4ee5\u2026\u2026 ~~\u641e\u4e8b\u60c5~~ \uff01\n\n\u4e8e\u662f\uff0c\u5728 $10$ \u5206\u949f\u540e\uff0c\u849f\u84bb\u6572\u51fa\u4e86\u4e00\u4efd\u4ee3\u7801\u3002\n\n\u5927\u81f4\u601d\u8def\uff1a\n\n1. \u4e24\u6b21\u904d\u5386\u6c42\u6811\u7684\u76f4\u5f84\n2. \u66b4\u529b\u904d\u5386\u76f4\u5f84\u4e0a\u6240\u6709\u7684\u5b50\u8def\u5f84\n3. \u5bf9\u4e8e\u6bcf\u6761\u5b50\u8def\u5f84\uff0c\u8fdb\u884c $dfs$ \uff0c\u6c42\u51fa\u79bb\u8def\u5f84\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\n4. \u8bb0\u5f55\u7b54\u6848\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3 \\times \\text{\u7384\u5b66})$ \uff0c \u5373 $O(\\text{\u80fd\u8fc7})$\n\n## 5. \u61f5\u61f5\u61c2\u61c2 $AC$ \u4e86\n\u54b3\u54b3\uff0c\u6ca1\u9519\u5c31\u662f\u8fd9\u6837\uff0c\u7531\u4e8e\u6570\u636e\u7684 ~~``water \u6027``~~ \uff0c \u6211\u4eec $AC$ \u4e86\u3002\n \n\u672c\u4eba\u63d0\u4ea4\u8bb0\u5f55\uff1a [R15356804](https://www.luogu.org/recordnew/show/15356804)\n\n\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\uff0c\u6bd5\u7adf\u6838\u5fc3\u4ee3\u7801\uff08\u6c42\u76f4\u5f84\uff09\u5df2\u7ecf\u653e\u51fa\u6765\u4e86\u3002\n\n2019-01-17 upd\uff1a\u66f4\u5feb\u7684\u7b97\u6cd5\uff0c\u80fd\u8fc7 [bzoj](https://www.lydsy.com/JudgeOnline/problem.php?id=1999) \u6bd2\u7624\u6570\u636e\u3002\u9898\u89e3\u5730\u5740\uff1ahttps://hkxa.blog.luogu.org/solution-p1099-v3",
        "postTime": 1547284876,
        "uid": 63720,
        "name": "brealid",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u5927\u591a\u6570\u4eba\u90fd\u662f\u679a\u4e3e\u554a\u3002\u3002\u3002\u8fd9\u9053\u9898\u53ef\u4ee5\u5229\u7528\u76f4\u5f84\u7684\u6700\u957f\u6027\uff0c\u5982\u679c\u4e0d\u80fd\u8986\u76d6\u5b8c\u6574\u6761\u76f4\u5f84\uff0c\u90a3\u4e48\u79bb\u6838\u6700\u8fdc\u7684\u70b9\u4e00\u5b9a\u5728\u76f4\u5f84\u4e0a\uff0c\u4e3a\u4ec0\u4e48\uff0c\u56e0\u4e3a\u5982\u679c\u6709\u66f4\u957f\u7684\u8fb9\u8fde\u5230\u6838\u4e0a\uff0c\u660e\u663e\u6838\u53ef\u4ee5\u548c\u90a3\u6761\u8fb9\u7ec4\u6210\u66f4\u957f\u7684\u76f4\u5f84\u3002\u5982\u679c\u8986\u76d6\u5b8c\u4e86\u6574\u6761\u76f4\u5f84\u5c31\u904d\u5386\u4e00\u4e0b\u5b8c\u4e8b\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u4e8c\u5206\u4e00\u4e0b\uff0c\u7136\u540e\u6c42\u51fa\u79bb\u4e24\u7aef\u6700\u8fdc\u7684\u4e0d\u8d85\u8fc7\u4e8c\u5206\u7684\u7b54\u6848\u7684\u70b9\uff0c\u9a8c\u8bc1\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u662f\u5426\u5c0f\u4e8es\u3002\n\n\u590d\u6742\u5ea6o(nlog\u76f4\u5f84\u957f\u5ea6)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ne[1005],to[1005],head[1005],len[1005];\ninline void add(int u,int v,int w){\n    static int cnt = 0;\n    ne[++cnt] = head[u];\n    head[u] = cnt;\n    to[cnt] = v;\n    len[cnt] = w;\n}\nint n,s;\nint tot = 0;\nint dis[1005],pre[1005],prelen[1005],isroad[1005];\nint road[1005],sum[1005];\nint longest,length,start,roadend;\nbool check(int x){\n    int p = 0,q = 0;\n    for(int i = 1; i <= tot; ++i){\n        if(sum[i] > x){p = i - 1;break;}\n    }\n    for(int i = tot; i >= 1; --i){\n        if(sum[tot] - sum[i] > x){q = i + 1;break;}\n    }\n    return (sum[q] - sum[p]) <= s;\n}\nvoid dfs(int cur){\n    if(dis[cur] > length){longest = cur;length = dis[cur];}\n    for(int i = head[cur]; i ; i = ne[i]){\n        if(!dis[to[i]]){\n            pre[to[i]] = cur;\n            prelen[to[i]] = len[i]; \n            dis[to[i]] = dis[cur] + len[i];\n            dfs(to[i]);\n        }\n    }\n}\nint ans = 0;\nvoid dfs2(int cur){\n    for(int i = head[cur]; i ;i = ne[i]){\n        if(!dis[to[i]] && !isroad[to[i]]){\n            dis[to[i]] = dis[cur] + len[i];\n            ans = max(dis[to[i]],ans);\n            dfs(to[i]);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&s);\n    int u,v,w;\n    for(int i = 1; i <= n - 1; ++i)\n    {\n        scanf(\"%d %d %d\",&u,&v,&w);\n        add(u,v,w);add(v,u,w);\n    }\n    memset(dis,0,sizeof(dis));\n    dis[1] = 1;\n    length = 0;\n    dfs(1);\n    start = longest;\n    memset(dis,0,sizeof(dis));\n    dis[start] = 1;\n    length = 0;\n    dfs(start);\n    roadend = longest;\n    int cur = roadend;\n    while(1){\n        road[++tot] = cur;\n        isroad[cur] = 1;\n        sum[tot + 1] = sum[tot] + prelen[cur]; \n        if(cur == start)break;\n        cur = pre[cur];\n    }\n    int l = 0,r = sum[tot],mid;\n    if(sum[tot] <= s){\n        for(int i = 1; i <= n; ++i)\n        {\n            memset(dis,0,sizeof(dis));\n            dis[i] = 1;\n            if(isroad[i])dfs2(i);\n        }\n        printf(\"%d\",ans - 1);\n    }\n    else{\n        while(l < r){\n            int mid = l + r >> 1;\n            if(check(mid))r = mid;\n            else l = mid + 1;\n        }\n        printf(\"%d\",l);\n      \n    }\n    return 0;\n}   \n\n```\n\n ",
        "postTime": 1532595098,
        "uid": 52576,
        "name": "moye\u5230\u7897\u91cc\u6765",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u697c\u4e0a\u7684\u5927\u4f6c\u4f3c\u4e4e\u90fd\u7528\u7684dfs\uff0c\u50cf\u6211\u8fd9\u79cd\u849f\u84bb\u53ea\u4f1a\u7528\u66b4\u529b\u7684Floyd\u7b97\u6cd5\u3002\u4e0d\u8fc7\uff0c\u770b\u5230\u8fd9\u9053\u9898\u89c4\u6a21\u53ea\u6709300\uff0cFloyd\u7b97\u6cd5\u4e0d\u4f1a\u6709\u95ee\u9898\u3002\n\n\u9996\u5148\u7528Floyd\u7b97\u6cd5\u9884\u5904\u7406\u70b9\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u63a5\u4e0b\u6765\u7a77\u4e3e\u6bcf\u4e00\u5bf9\u70b9\u6784\u6210\u7684\u8def\u5f84\uff08\u5047\u88c5\u6bcf\u4e00\u6761\u8def\u5f84\u5c31\u662f\u6811\u7f51\u7684\u6838\uff09\uff0c\u5982\u679c\u8def\u5f84\u957f<=s\uff0c\u5219\u8ba1\u7b97\u5176\u5b83\u70b9\u5230\u8be5\u8def\u5f84\u7684\u6700\u5927\u8ddd\u79bb\uff0c\u53d6\u7a77\u4e3e\u5230\u7684\u6240\u6709\u8def\u5f84\u4e2d\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u5373\u4e3a\u7b54\u6848\u3002\u6b64\u65f6\uff0c\u5bf9\u5e94\u7684\u8def\u5f84\u662f\u6700\u4f18\u89e3\uff0c\u4e5f\u5fc5\u7136\u662f\u6811\u7f51\u7684\u6838\u3002\n\n\u5176\u4e2d\uff0c\u8ba1\u7b97\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\uff0c\u7531\u4e8e\u8fd9\u662f\u4e00\u5f20\u6811\u7f51\uff0c\u4e14\u5df2\u7ecf\u9884\u5904\u7406\u70b9\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4ece\u800c\u70b9k\u5230\u8def\u5f84(i,j)\u7684\u8ddd\u79bb\u5373\u4e3a\n\n```cpp\n(dist[k][i]+dist[k][j]-dist[i][j])/2\n```\n\n\uff08\u4e8b\u5b9e\u4e0a\u76f8\u5f53\u4e8e\u628a\u91cd\u590d\u8ba1\u7b97\u7684\u4e00\u90e8\u5206\u51cf\u6389\u540e\uff0c\u7531\u4e8e\u5269\u4e0b\u7684\u90e8\u5206\u76f8\u5f53\u4e8e\u7b97\u4e86\u4e24\u6b21\uff0c\u5c31\u9664\u4ee52\u3002\u753b\u4e2a\u56fe\u5f88\u597d\u7406\u89e3\u7684\u3002\uff09\n\n\u6ce8\u610f\u6811\u7f51\u7684\u6838\u53ef\u80fd\u9000\u5316\u4e3a\u4e00\u4e2a\u70b9\uff0c\u56e0\u6b64\u5728\u7a77\u4e3e\u70b9\u5bf9(i,j)\u65f6\u4e0d\u8981\u5ffd\u7565i==j\u7684\u60c5\u51b5\u3002\n\n\u4e0b\u9762\u8d34\u4e0a\u4ee3\u7801\u3002\n\n```\n#include <bits/stdc++.h>\n#define F(i) for(int i=1; i<=n; ++i)            //\u8fd0\u7528\u5b8f\u7b80\u5316\u4ee3\u7801\n\nconst int N=305,INF=0x3f3f3f3f;\nint n,s,l,y,x,ans=INF,g[N][N];\n\ninline void read(int &x){                       //\u8f93\u5165\u4f18\u5316\n    char c;                                     //\u867d\u7136\u672c\u9898\u6570\u636e\u89c4\u6a21\n    while(!isdigit(c=getchar())); x=c-48;       //\u4e0d\u9700\u8981\u8f93\u5165\u4f18\u5316\n    while(isdigit(c=getchar()))x=x*10+c-48;\n}\n\ninline int _min(int x,int y){return x<y?x:y;}\ninline int _max(int x,int y){return x>y?x:y;}\n\nint main(){\n    read(n),read(s);\n    memset(g,INF,sizeof g);                     //\u8ddd\u79bb\u521d\u503c\u8bbe\u4e3aINF\n    for(int i=1; i<n; ++i)                      //\u5b58\u56fe\n        read(x),read(y),read(l),\n        g[x][y]=g[y][x]=l;\n    F(k) F(i) if(i!=k) F(j) if(i!=j && j!=k)    //\u6807\u51c6\u7684Floyd\u7b97\u6cd5\n        g[i][j]=_min(g[i][j],g[i][k]+g[k][j]);  //\u6c42\u70b9\u5bf9\u95f4\u6700\u77ed\u8ddd\u79bb\n    F(i) F(j) if(i==j || g[i][j]<=s){           //\u7a77\u4e3e\u8def\u5f84i->j\n        g[i][i]=0;                              //\u9700\u8981\u6ce8\u610f\u7684\u662f\u6811\u7684\n        int dist=0;                             //\u6838\u53ef\u80fd\u9000\u5316\u6210\u4e00\u70b9\n        F(k) if(k!=i && k!=j)                   //\u67e5\u627e\u504f\u5fc3\u8ddd\n            dist=_max(dist,(g[k][i]+g[k][j]-g[i][j])/2);\n        ans=_min(ans,dist);                     //\u66f4\u65b0\u6700\u5c0f\u503c\n    }\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1522738173,
        "uid": 93040,
        "name": "UNIDY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2aO\uff08n\uff09\u7684\u7b97\u6cd5\uff0c\u5feb\u5230\u98de\u8d77\u3002\n\n\u660e\u663e\u53ef\u77e5\u8fd9\u6761\u8def\u5f84\u5728\u76f4\u5f84\u4e0a\u662f\u6700\u4f18\n\u6240\u4ee5\u5148dfs\u4e24\u6b21\u627e\u51fa\u6811\u7684\u76f4\u5f84\n\n### \u65b9\u6cd5\uff1a\n\u5148\u968f\u673a\u627e\u4e00\u4e2a\u70b9\u641c\u51fa\u79bb\u4ed6\u6700\u8fdc\u7684\u4e00\u4e2a\u70b9\uff0c\u8fd9\u5c31\u662f\u76f4\u5f84\u7684\u4e00\u4e2a\u7aef\u70b9\u3002\n\u518d\u4ece\u8fd9\u4e2a\u70b9\u641c\uff0c\u627e\u79bb\u4ed6\u6700\u8fdc\u7684\u4e00\u4e2a\u70b9\uff0c\u8fd9\u5c31\u662f\u53e6\u4e00\u4e2a\u7aef\u70b9\u3002\n\u8fd9\u91cc\u6211\u5c31\u4e0d\u8bc1\u660e\u4e86\u3002\n\n\u770b\u4ee3\u7801\uff1a\n```cpp\nvoid dfs(int x,int fa,int p)\n{\n\tfor(int i=head[x];i;i=to[i])\n\t{\n\t\tif(y[i]==fa)continue;\n\t\tif(vis[y[i]]==1)continue;\n\t\tif(p==1)pre[y[i]]=x;\n\t\tdis[y[i]]=dis[x]+w[i];\n\t\tdfs(y[i],x,p);\n\t}\n}\n```\n\n```cpp\ndfs(1,0,0);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(maxx<dis[i])\n\t\t{\n\t\t\tk=i;\n\t\t\tmaxx=dis[i];\n\t\t}\n\t}\n\tmaxx=0;\n\tdis[k]=0;\n\tdfs(k,0,1);\n```\n### O\uff08n\uff09\n\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u5728\u641c\u7d22\u65f6\u6807\u51fa\u76f4\u5f84\u4e0a\u7684\u70b9\u90fd\u6709\u8c01\n\n\u518d\u770b\u4ee3\u7801\uff1a\n```cpp\nmemset(dis,0,sizeof(dis));\n    dis[p]=0;\n    vis[p]=1;\n    while(p!=k)\n    {\n    \tfor(int i=head[p];i;i=to[i])\n    \t{\n    \t\tif(y[i]==pre[p])\n    \t\t{\n    \t\t\tdis[y[i]]=dis[p]+w[i];\n    \t\t\tvis[y[i]]=1;\n    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tp=pre[p];\n\t}\n```\n### O\uff08n\uff09\n\n\u7136\u540e\u53ef\u4ee5\u7b97\u51fa\u76f4\u5f84\u4e0a\u6bcf\u4e2a\u7b26\u5408\u7684\u8def\u5f84\u5230\u76f4\u5f84\u4e24\u7aef\u70b9\u7684\u6700\u5927\u8ddd\u79bb\u3002\n```cpp\nint find(int x,int m)\n{\n    for(int i=head[x];i;i=to[i])\n    {\n        if(y[i]==pre[x]&&m>=w[i])\n        {\n            return find(y[i],m-w[i]);\n        }\n    }\n    return x;\n}\nint work(int x,int m) \n{\n    int t1=dis[x],t=find(x,m);\n    int t2=dis[k]-dis[t];\n    return max(t1,t2);\n}\n```\n### O\uff08n\uff09\n\u6700\u540e\u518d\u6765\u4e00\u4e2a\u641c\u7d22\uff0c\u641c\u51fa\u975e\u76f4\u5f84\u4e0a\u7684\u70b9\u5230\u76f4\u5f84\u4e0a\u7684\u8ddd\u79bb\u6700\u5c0f\u503c\u3002\n\n\u8fd9\u6837\u6bcf\u4e2a\u90e8\u5206\u7684\u590d\u6742\u5ea6\u90fd\u662fO(n).\n\u5c31\u53ef\u4ee5\u5f00\u5fc3\u7684AC\u4e86\u3002\n",
        "postTime": 1572688660,
        "uid": 85079,
        "name": "zhoubaobao",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u63a5\u4e0b\u6765\u8bf7\u6b23\u8d4f\u672c\u9898~~\u6700\u63a5\u5730\u6c14~~\u7684\u505a\u6cd5\n\n\u9996\u5148\u5148\u89e3\u91ca\u4e00\u4e0b\u9898\u9762\uff1a\n\n**\u7ed9\u4f60\u4e00\u4e2a\u65e0\u6839\u6811\u548c\u4e00\u4e2a\u975e\u8d1f\u6574\u6570(s)\uff0c\u6c42\u76f4\u5f84\u4e0a\u7684\u4e00\u6bb5\u957f\u5ea6\u4e0d\u8d85\u8fc7(s)\u7684\u8def\u5f84(F)\uff0c\u4f7f\u6811\u4e0a\u7ed3\u70b9\u5230(F)\u8ddd\u79bb\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\u3002**\n\n\u9996\u5148\uff0c\u770b\u5230\u8fd9\u4e48\u591a\u8ddd\u79bb\uff0c\u90fd\u4f1a\u60f3\u5230\u6700\u77ed\u8def\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u7528~~\u7ecf\u5178\u6700\u77ed\u8def\u7b97\u6cd5dijkstra~~\u6c42\u51fa\u6bcf\u4e24\u4e2a\u70b9\u95f4\u7684\u6700\u77ed\u8def\n\nP.s. \u5173\u4e8efloyd\uff1a\u4eb2\u6d4b\u591a\u6e90\u6700\u77ed\u8deffloyd\u8dd1\u5f97\u6bd4dijkstra\u5806\u4f18\u5316\u6162\uff0c~~\u6240\u4ee5\u5b83\u6b7b\u4e86~~\u3002\n\n\u7136\u540e\u6811\u7684\u76f4\u5f84\u5c31\u4e3a\u8fd9\u4e9b\u6700\u77ed\u8def\u4e2d\u7684\u6700\u5927\u503c\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528~~\u5e7f\u4e3a\u4eba\u77e5~~\u7684\u5c3a\u53d6\u6cd5\uff08\u679a\u4e3e\u7684\u4e00\u79cd\u65b9\u6cd5\uff09\u6765\u679a\u4e3e\u76f4\u5f84\u4e0a\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684F\u3002\n\n\u7136\u540e\u5462\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u68c0\u9a8c\u6765\u5bfb\u627eans\n\n\u56e0\u4e3an<=300,\u6240\u4ee5\u4ec0\u4e48\u5355\u8c03\u961f\u5217\u4ec0\u4e48\u6570\u5b66\u7ed3\u8bba\u4f18\u5316\u90fd\u4e0d\u9700\u8981\uff0c\u53ea\u8981\u77e5\u9053\u4e00\u70b9\uff1a\u76f4\u5f84\u662f\u5bf9\u79f0\u7684\u3002\u9996\u5148\uff0c\u76f4\u5f84\u4e0d\u53ef\u80fd\u4e0d\u76f8\u4ea4\u3002\u628a\u76f8\u4ea4\u7684\u90a3\u4e00\u90e8\u5206\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u5269\u4e0b\u7684\u76f4\u5f84\u90e8\u5206\u5c31\u4f1a\u5173\u4e8e\u8fd9\u4e2a\u70b9\u5bf9\u79f0\u3002\u6240\u4ee5\u4efb\u9009\u4e00\u6761\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9644\u4e0acode\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1000+10;\nint w[maxn],to[maxn],beg[maxn],nex[maxn],d[maxn][maxn],p[maxn],path[maxn][maxn],a[maxn],pp,ps;\nint e,n,s,m,x,y,z,l,inf,ans,anss;\npriority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >q;\nvoid add(int x,int y,int z){\n    to[++e]=y;\n    nex[e]=beg[x];\n    beg[x]=e;\n    w[e]=z;\n}\nint main(){\n    scanf(\"%d%d\",&n,&l);\n    for(int i=1;i<=n-1;i++){\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z);\n\t\tadd(y,x,z);//\u94fe\u5f0f\u524d\u5411\u661f\u52a0\u8fb9\n    }\n\tmemset(d,0x3f3f3f,sizeof(d));\n\tinf=d[0][0];\n\tfor(int s=1;s<=n;s++){\n\t\td[s][s]=0;\n\t\twhile(!q.empty())q.pop();\n\t\tmemset(p,0,sizeof(p));\n\t\tq.push(make_pair(0,s));\n\t\twhile(!q.empty()){\n\t\t\tint x=q.top().second;\n\t\t\tq.pop();\n\t\t\tif(p[x])continue;\n\t\t\tp[x]=1;\n\t\t\tfor(int i=beg[x];i;i=nex[i]){\n\t\t\t\tint y=to[i],z=w[i];\n\t\t\t\tif(d[s][y]>d[s][x]+z){\n\t\t\t\t\td[s][y]=d[s][x]+z;\n\t\t\t\t\tpath[s][y]=x;\n\t\t\t\t\tq.push(make_pair(-d[s][y],y));\n\t\t\t\t}\t\t\n\t\t\t}\n\t\t}\n\t}//\u591a\u6e90\u6700\u77ed\u8def\uff0c\u5b58\u50a8\u5728d\u4e2d\uff0c\u8def\u5f84\u5728path\u4e2d\n\tans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(d[i][j]==inf)d[i][j]=-1;\n\t\t\tif(ans<d[i][j])ans=d[i][j];\n\t\t}//\u627e\u76f4\u5f84\u7684\u503c\n\tanss=inf;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(d[i][j]==ans){\n\t\t\t\tint tp=j,js=0;\n\t\t\t\tmemset(a,0,sizeof(a));\n\t\t\t\twhile(d[i][tp]!=0)a[++js]=tp,tp=path[i][tp];//\u6c42\u51fa\u8def\u5f84\n\t\t\t\ta[++js]=i;\n\t\t\t\tint hd=1,tl=1;\n\t\t\t\twhile(hd<=js){\n\t\t\t\t\tpp=0;\n\t\t\t\t\tfor(int x=1;x<=n;x++){\n\t\t\t\t\t\tps=inf;\n\t\t\t\t\t\tfor(int y=tl;y<=hd;y++)\n\t\t\t\t\t\t\tps=min(d[x][a[y]],ps);\n\t\t\t\t\t\tpp=max(pp,ps);\n\t\t\t\t\t}//\u66b4\u529b\u679a\u4e3e\n\t\t\t\t\tanss=min(pp,anss);\n\t\t\t\t\thd++;\n\t\t\t\t\tif(d[a[hd]][a[tl]]>l)tl++,hd=tl;\n\t\t\t\t}//\u5c3a\u53d6\u6cd5\n\t\t\t\tprintf(\"%d\",anss);\n\t\t\t\treturn 0;\n\t\t\t}\n    return 0;\n}\n```\n",
        "postTime": 1572530973,
        "uid": 104662,
        "name": "PrincessQi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "## ~~\u7531\u4e8e\u6570\u636e\u6c34\uff0c\u56e0\u6b64\u4efb\u4f55\u82b1\u6837\u7b97\u6cd5\u90fd\u80fd\u8fc7~~\n\u6240\u4ee5\u8fd9\u9898\u662f\u8bad\u7ec3\u4efb\u4f55\u7b97\u6cd5\u7684\u597d\u673a\u4f1a\uff01\u4f60\u751a\u81f3\u53ef\u4ee5\u4e0d\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6\u95f7\u5934\u5199\uff0c\u7136\u540e\u53d1\u73b0 AC \u4e86\n\n### \u5e9f\u8bdd\u5230\u6b64\u4e3a\u6b62\u8fdb\u5165\u6b63\u9898\n\u770b\u8fc7\u4e86\u8bb8\u591a\u5927\u4f6c\u7684\u9898\u89e3\u4e86\uff0c\u5b9e\u9645\u4e0a\u6b63\u89e3\u5e94\u8be5\u662f\u6811\u5f62DP\u4e2d\u7684\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839\u6cd5\uff08\u770b\u89c1\u8bb8\u591a\u5927\u4f6c\u5fd8\u8bb0\u7ed9\u51fa\u540d\u79f0\u4e86\uff09\n\n~~\u4f46\u662f\u6211\u7528\u7684\u4e0d\u662f\u8fd9\u4e2a\u7b97\u6cd5~~\n\n### LCA\uff08\u4e8c\u5206\u6b65\u957f\uff09+\u641c\u7d22\n\u9996\u5148\u968f\u4fbf\u9009\u4e00\u4e2a\u7ed3\u70b9\u4f5c\u4e3a\u6839\u7ed3\u70b9\uff0c\u63a5\u7740\u641c\u7d22\u4e00\u904d\u6c42\u51fa\u6240\u6709\u7ed3\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\n\n\u7136\u540e\u7565\u5fae\u601d\u8003\u4e00\u4e0b\uff0c\u53d1\u73b0 d(a,b) \u5176\u5b9e\u5c31\u662f d(a,root)+d(b,root)-2 * d(LCA(a,b),root)\n\n```cpp\nint Dis(int a,int b)\n{return node[a].statis+node[b].statis-2*node[LCA(a,b)].statis;}\n\n```\n\n\n\u7b49\u7b49\u2026\u2026LCA \u662f\u4ec0\u4e48\u5462\uff1f\n\n#### LCA\nLeast Comment Ancestors\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u95ee\u9898\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5728\u4e00\u4e2a\u6709\u6839\u6811\u5185\uff0c\u6709\u7ed3\u70b9 a \u4e0e b\uff0c\u6c42\u4ed6\u4eec\u201c\u6700\u5e74\u8f7b\u7684\u7956\u5148\u201d\uff08\u53ef\u4ee5\u628a\u6811\u770b\u6210\u5bb6\u8c31\uff09\n\n![](http://p3.so.qhimgs1.com/sdr/400__/t0158e42cde230569e3.jpg)\n\n\u5982\u4e0a\u56fe\uff0cnode[ 3 ] \u4e0e node[ 10 ] \u7684 LCA \u4e3a node[ 1 ]\n\n[\u3010\u6a21\u677f\u3011\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09](https://www.luogu.org/problemnew/show/P3379)\n\n------------\n\n### \u8fd9\u662f LCA \u7684\u90e8\u5206\n```cpp\nstruct Edge {int val,end;};\n\nstruct NRT//\u524d\u5411\u661f\uff0c\u6bd4\u8f83\u5947\u8469\u7684\u7c7b\u578b\u2026\u2026\u6211\u81ea\u5df1\u53d1\u660e\u7684\n{\n\tqueue<Edge> next;int num;\n\tint depth;\n\tint fore[10];//2^k \u4ee3\u7956\u5148\n\tint statis;\n\tvoid Build(int ob,int v) {num++,next.push(Edge{v,ob});}\n\tvoid Change() {next.push(next.front()),next.pop();}\n}node[301];\n      \nvoid DFS(int now,int fa)//LCA \u9884\u5904\u7406\n{\n\tif(node[now].num==1) Leaves[++Lnum]=now;//\u8bb0\u5f55\u53f6\u5b50\u7ed3\u70b9\n\tnode[now].depth=node[fa].depth+1;\n\tnode[now].fore[0]=fa;\n\tfor(int i=1;(1<<i)<=node[now].depth;i++) node[now].fore[i]=node[node[now].fore[i-1]].fore[i-1];\n\tfor(int i=1;i<=node[now].num;i++,node[now].Change())\n\t{\n\t\tint rear=node[now].next.front().end;\n\t\tint cost=node[now].next.front().val;\n\t\tif(rear!=fa) node[rear].statis=node[now].statis+cost,DFS(rear,now);\n\t}\n}\n\nint LCA(int a,int b)\n{\n\tif(Dismem[a][b]!=-1) return Dismem[a][b];//\u8bb0\u5fc6\u5316\u4e00\u4e0b\n\tif(node[a].depth>node[b].depth) swap(a,b);//b \u6bd4 a \u6df1\uff0c\u5f97\u5f80\u4e0a\u63d0 \n\tfor(int i=9;i>=0;i--)\n\t\tif(node[a].depth<=node[b].depth-(1<<i)) b=node[b].fore[i];\n\tif(a==b) return a;\n\tfor(int i=9;i>=0;i--)\n\t\tif(node[a].fore[i]!=node[b].fore[i]) a=node[a].fore[i],b=node[b].fore[i];\n\treturn Dismem[a][b]=Dismem[b][a]=node[a].fore[0];\n}\n```\n\n\n------------\n\n\n### \u73b0\u5728\u5047\u8bbe\u4f60\u5df2\u7ecf\u4f1a LCA \u4e86\n\u6211\u5c31\u9009\u7528\u4e8c\u5206\u6b65\u957f\u8fd9\u4e2a\u7b97\u6cd5\u4f5c\u4e3a\u4f8b\u5b50\n\n\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u53ef\u4ee5\u7528\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u8ba1\u7b97\u51fa\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u4e86\n\n\u6743\u503c\u4e3a\u975e\u8d1f\u7684\u6811\u4e2d\uff0c\u6811\u7684\u76f4\u5f84\uff0c\u4e5f\u5c31\u662f\u6700\u957f\u8def\u5f84\uff0c\u4e24\u7aef\u80af\u5b9a\u90fd\u662f\u53f6\u5b50\u7ed3\u70b9\uff08\u53ea\u6709\u4e00\u4e2a\u7ed3\u70b9\u4e0e\u5b83\u76f8\u8fde\uff09\uff0c\u5df2\u7ecf\u6709\u5927\u4f6c\u8bc1\u8fc7\u4e86\u3002\u4e8e\u662f\u679a\u4e3e\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\uff0c\u627e\u5230\u76f4\u5f84\n```cpp\nint Leaves[301],Lnum;\npair<int,int> D[301];int Dnum,Dlen;\nbool Dpath[301][301];\n\nfor(int i=1;i<Lnum;i++)\n\tfor(int j=i+1;j<=Lnum;j++)\n\t\tif(Dis(Leaves[i],Leaves[j])==Dlen)\n\t\t{\n\t\t\tpair<int,int> temp;\n\t\t\ttemp.first=Leaves[i],temp.second=Leaves[j];\n\t\t\tD[++Dnum]=temp;\n\t\t}\n\t\telse if(Dis(Leaves[i],Leaves[j])> Dlen)\n\t\t{\n\t\t\tDnum=0,Dlen=Dis(Leaves[i],Leaves[j]);\n\t\t\tpair<int,int> temp;\n\t\t\ttemp.first=Leaves[i],temp.second=Leaves[j];\n\t\t\tD[++Dnum]=temp;\n\t\t}\nfor(int i=1;i<=Dnum;i++)\n{\n\tint a=D[i].first,b=D[i].second;\n\tDpath[a][b]=Dpath[b][a]=1;//\u4e3a\u4e86\u65b9\u4fbf\u5230\u65f6\u5019\u641c\u7d22\uff0c\u8bb0\u5f55\u5230\u6570\u7ec4\u91cc\n}\n```\n\u7136\u540e\u641c\u7d22\u4e00\u904d\uff0c\u627e\u5230\u76f4\u5f84\u8def\u5f84\uff0c\u5728\u4e0a\u9762\u679a\u4e3e\u6240\u6709\u5b50\u8def\u5f84\uff0c\u627e\u5230\u6838\u2026\u2026\n```cpp\nint Path[301],Pnum;\nint DFNP(int ob,int bef,int aft)//ob \u5230 Path[bef-aft] \u7684\u8ddd\u79bb \n{\n\tint cnt=INT_MAX;\n\tfor(int i=bef;i<=aft;i++) cnt=min(cnt,Dis(ob,Path[i]));\n\treturn cnt;\n}\n\nbool visit[301][301];\nvoid Caculate(int start,int now,int fa)\n{\n\tPath[++Pnum]=now;\n\tif(Dpath[start][now])//\u627e\u5230\u76f4\u5f84 start-now \n\t{\n\t\t//cout<<\"Dpath:\";for(int i=1;i<=Pnum;i++) cout<<' '<<Path[i];cout<<endl;\t\n\t\tfor(int i=1;i<=Pnum;i++)//\u6bcf\u4e2a\u53f6\u8282\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\n\t\t{\n\t\t\tfor(int j=i;j<=Pnum;j++)//\u8ba1\u7b97 Path[i]-Path[j] \u7684\u504f\u5fc3\u8ddd\n\t\t\t{\n\t\t\t\tif(Dis(Path[i],Path[j])>s) break;//\n\t\t\t\tif(visit[Path[i]][Path[j]]) continue;//\u627e\u8fc7\u7684\u6838\u5c31\u4e0d\u7528\u518d\u627e\u4e86\n\t\t\t\tvisit[Path[i]][Path[j]]=visit[Path[j]][Path[i]]=1;\n\t\t\t\tint ECC=0;\n\t\t\t\tfor(int f=1;f<=Lnum;f++) ECC=max(ECC,DFNP(Leaves[f],i,j));\n\t\t\t\tans=min(ans,ECC);//\u6c42\u6700\u5c0f\u504f\u5fc3\u8ddd\n\t\t\t}\n\t\t}\n\t\tDpath[start][now]=Dpath[now][start]=0;\n\t\tPnum--;//\u8fd9\u91cc\u4e5f\u522b\u5fd8\u4e86\n\t\treturn;\n\t}\n\tfor(int i=1;i<=node[now].num;i++,node[now].Change())\n\t{\n\t\tint rear=node[now].next.front().end;\n\t\tif(rear!=fa) Caculate(start,rear,now);\n\t}\n\tPnum--;//\u56de\u6eaf\n}\n```\n\u6700\u540e\u662f\u6574\u4e2a\u4ee3\u7801\u7684\u7ec4\u5408\n```cpp\n/*\n\u6709\u4e00\u68f5\u65e0\u6839\u6811\nd(a,b)\uff1a \u8868\u793a\u7ed3\u70b9 a \u5230 b \u7684\u8ddd\u79bb\uff0c\u4e3a a-b \u8def\u5f84\u4e0a\u8fb9\u6743\u503c\u4e4b\u548c\nD(a,b)\uff1a \u8868\u793a\u7ed3\u70b9 a \u5230\u8def\u5f84 b \u7684\u8ddd\u79bb\uff0c\u4e3a b \u4e2d\u5404\u8282\u70b9\u4e0e a \u6700\u77ed\u7684\u8ddd\u79bb\n\u6811\u7684\u76f4\u5f84\uff1a \u6811\u4e2d\u6700\u957f\u7684\u8def\u5f84\n\u6811\u7f51\u7684\u4e2d\u5fc3\uff1a \u4e24\u6761\u76f4\u5f84\u7684\u91cd\u53e0\u90e8\u5206\nECC(F)\uff1a \u6811\u4e2d\u6700\u5927\u7684 D(a,F)\n\u6838 core\uff1a \u76f4\u5f84\u4e0a\u7684\u8def\u5f84 F \u4f7f\u5f97 ECC(F) \u6700\u5c0f \n\n\u6c42 \u957f\u5ea6\u4e0d\u8d85\u8fc7 s \u7684\u6838\u7684\u504f\u5fc3\u8ddd \n*/\n#include<bits/stdc++.h>\nusing namespace std;\n\nvoid PrintPair(pair<int,int> ob)\n{printf(\"%d %d\\n\",ob.first,ob.second);}\n\nstruct Edge {int val,end;};\n\nstruct NRT\n{\n\tqueue<Edge> next;int num;\n\tint depth;\n\tint fore[10];//2^k \u4ee3\u7956\u5148\n\tint statis;\n\tvoid Build(int ob,int v) {num++,next.push(Edge{v,ob});}\n\tvoid Change() {next.push(next.front()),next.pop();}\n}node[301];\n\nint n,s,ans=INT_MAX;\nint Dismem[301][301];\nint Leaves[301],Lnum;\npair<int,int> D[301];int Dnum,Dlen;\nbool Dpath[301][301];\n\nvoid DFS(int now,int fa)\n{\n\tif(node[now].num==1) Leaves[++Lnum]=now;\n\tnode[now].depth=node[fa].depth+1;\n\tnode[now].fore[0]=fa;\n\tfor(int i=1;(1<<i)<=node[now].depth;i++) node[now].fore[i]=node[node[now].fore[i-1]].fore[i-1];\n\tfor(int i=1;i<=node[now].num;i++,node[now].Change())\n\t{\n\t\tint rear=node[now].next.front().end;\n\t\tint cost=node[now].next.front().val;\n\t\tif(rear!=fa) node[rear].statis=node[now].statis+cost,DFS(rear,now);\n\t}\n}\n\nint LCA(int a,int b)\n{\n\tif(Dismem[a][b]!=-1) return Dismem[a][b];\n\tif(node[a].depth>node[b].depth) swap(a,b);//b \u6bd4 a \u6df1\uff0c\u5f97\u5f80\u4e0a\u63d0 \n\tfor(int i=9;i>=0;i--)\n\t\tif(node[a].depth<=node[b].depth-(1<<i)) b=node[b].fore[i];\n\tif(a==b) return a;\n\tfor(int i=9;i>=0;i--)\n\t\tif(node[a].fore[i]!=node[b].fore[i]) a=node[a].fore[i],b=node[b].fore[i];\n\treturn Dismem[a][b]=Dismem[b][a]=node[a].fore[0];\n}\n\nint Dis(int a,int b)\n{return node[a].statis+node[b].statis-2*node[LCA(a,b)].statis;}\n\nint Path[301],Pnum;\nint DFNP(int ob,int bef,int aft)//ob \u5230 Path[bef-aft] \u7684\u8ddd\u79bb \n{\n\tint cnt=INT_MAX;\n\tfor(int i=bef;i<=aft;i++) cnt=min(cnt,Dis(ob,Path[i]));\n\treturn cnt;\n}\n\nbool visit[301][301];\nvoid Caculate(int start,int now,int fa)\n{\n\tPath[++Pnum]=now;\n\tif(Dpath[start][now])//\u627e\u5230\u76f4\u5f84 start-now \n\t{\n\t\tfor(int i=1;i<=Pnum;i++)//\u6bcf\u4e2a\u53f6\u8282\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\n\t\t{\n\t\t\tfor(int j=i;j<=Pnum;j++)//\u8ba1\u7b97 Path[i]-Path[j] \u7684\u504f\u5fc3\u8ddd\n\t\t\t{\n\t\t\t\tif(Dis(Path[i],Path[j])>s) break;\n\t\t\t\tif(visit[Path[i]][Path[j]]) continue;\n\t\t\t\tvisit[Path[i]][Path[j]]=visit[Path[j]][Path[i]]=1;\n\t\t\t\tint ECC=0;\n\t\t\t\tfor(int f=1;f<=Lnum;f++) ECC=max(ECC,DFNP(Leaves[f],i,j));\n\t\t\t\tans=min(ans,ECC);//\u6c42\u6700\u5c0f\u504f\u5fc3\u8ddd\n\t\t\t}\n\t\t}\n\t\tDpath[start][now]=Dpath[now][start]=0;\n\t\tPnum--; \n\t\treturn;\n\t}\n\tfor(int i=1;i<=node[now].num;i++,node[now].Change())\n\t{\n\t\tint rear=node[now].next.front().end;\n\t\tif(rear!=fa) Caculate(start,rear,now);\n\t}\n\tPnum--;\n}\n\nbool Ced[301];\nint main()\n{\n\tmemset(Dismem,-1,sizeof Dismem);\n\tscanf(\"%d %d\",&n,&s);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint a,b,v;\n\t\tscanf(\"%d %d %d\",&a,&b,&v);\n\t\tnode[a].Build(b,v);\n\t\tnode[b].Build(a,v);\n\t}\n\tDFS(n>>1,0);\n\tfor(int i=1;i<Lnum;i++)\n\t\tfor(int j=i+1;j<=Lnum;j++)\n\t\t\t    if(Dis(Leaves[i],Leaves[j])==Dlen)\n\t\t\t{\n\t\t\t\tpair<int,int> temp;\n\t\t\t\ttemp.first=Leaves[i],temp.second=Leaves[j];\n\t\t\t\tD[++Dnum]=temp;\n\t\t\t}\n\t\t\telse if(Dis(Leaves[i],Leaves[j])> Dlen)\n\t\t\t{\n\t\t\t\tDnum=0,Dlen=Dis(Leaves[i],Leaves[j]);\n\t\t\t\tpair<int,int> temp;\n\t\t\t\ttemp.first=Leaves[i],temp.second=Leaves[j];\n\t\t\t\tD[++Dnum]=temp;\n\t\t\t}\n\tfor(int i=1;i<=Dnum;i++)\n\t{\n\t\tint a=D[i].first,b=D[i].second;\n\t\tDpath[a][b]=Dpath[b][a]=1;\n\t}\n\tfor(int i=1;i<=Dnum;i++)\n\t{\n\t\tif(!Ced[D[i].first]) Caculate(D[i].first,D[i].first,0),Ced[D[i].first]=1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\u4ed4\u7ec6\u4e00\u770b\uff0c\u627e\u6838\u7684\u90a3\u90e8\u5206\u4e94\u5c42\u5faa\u73af\uff0c\u8fd8\u6709\u4e00\u5c42\u641c\u7d22\uff0c\u53ef\u4ee5\u770b\u4f5c\u516d\u5c42\u5faa\u73af\u4e86\uff0c\u8fd8\u6ca1 TLE ?\n\n\u8981\u4e48\u662f\u91cc\u9762\u90a3\u4e48\u591a\u5224\u91cd\u4f18\u5316\u8d77\u4f5c\u7528\u4e86\uff0c\u8981\u4e48\u5c31\u662f\u6570\u636e\u592a H2O \u4e86\u2026\u2026",
        "postTime": 1561875675,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1099)\n\n### [\u6570\u636e\u52a0\u5f3a\u7248\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2491)\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n\u6811\u7684\u76f4\u5f84\u3001\u5c3a\u53d6\u6cd5\uff08\u8815\u52a8\u533a\u95f4\uff09\u3002\n\n## \u7b80\u8ff0\u9898\u610f\n\n\u5728\u6811\u4e0a\u627e\u4e00\u70b9\u4f7f\u5176\u4ed6\u6240\u6709\u70b9\u5230\u4ed6**\u8ddd\u79bb\u6700\u957f**\u7684**\u6700\u5c0f\u503c**\uff0c\u6c42\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\n## \u7b80\u8ff0\u7b97\u6cd5\n\n1. \u6c42\u51fa\u6811\u7684\u76f4\u5f84\u3002\n\n2. \u901a\u8fc7\u5c3a\u53d6\uff0c\u6c42\u51fa\u6ee1\u8db3 $s$ \u8981\u6c42\u7684 $i$,$j$\uff0c\u5e76\u6c42\u51fa\u76f4\u5f84\u4e0a $i$\uff0c$j$ \u5230\u4e24\u7aef\u7684\u8ddd\u79bb\u7684**\u6700\u5927\u503c**\u3002\n\n3. \u6807\u8bb0\u76f4\u5f84\u4e0a\u7684\u70b9\u3002\n\n4. \u6c42\u51fa\u5176\u5b83\u70b9\u5230\u76f4\u5f84\u4e0a\u70b9\u7684\u8ddd\u79bb\u3002\n\n5. \u6240\u6709\u70b9\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u5373\u4e3a\u7b54\u6848\u3002\n\n## \u5177\u4f53\u9610\u8ff0\n\n\u9996\u5148\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u67a2\u7ebd\u4e00\u5b9a\u5728\u6811\u7684**\u76f4\u5f84**\u4e0a\uff08\u82e5\u6709\u591a\u6761\u4efb\u9009\u4e00\u6761\u4e0d\u5f71\u54cd\uff09\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u4e24\u6b21 dfs \u6c42\u51fa\u76f4\u5f84\u3002\n\n```cpp\nvoid dfs(ll x,ll ff){\n\tfa[x]=ff;\n\tif(dis[x]>dis[k]) k=x;\n\tfor(ll i=hd[x];i;i=es[i].nxt){\n\t\tll to=es[i].t;\n\t\tif(to==ff||line[to]) continue;\n\t\tdis[to]=dis[x]+es[i].va;\n\t\tdfs(to,x);\n\t}\n}\n```\n\n\u6211\u4eec\u5148\u5904\u7406\u8fd9\u6761\u76f4\u5f84\u3002\n\n\u91c7\u7528**\u5c3a\u53d6\u6cd5\uff08\u8815\u52a8\u533a\u95f4\uff09**\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5728\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u4f18\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\uff08\u6709\u70b9\u7ed5\uff09\u3002\n\n### \u5177\u4f53\u64cd\u4f5c\n\n\u4ece\u4e00\u7aef\u5f00\u59cb\uff0c\u6bcf\u6b21 $i$ \u5411\u53e6\u4e00\u7aef\u79fb\u52a8\u4e00\u6b21\u3002\n\n\u6211\u4eec\u53e6\u4ece\u8fd9\u4e00\u7aef\u53d6\u4e00\u4e2a $j$\u3002\n\n\u6bcf\u6b21\u53ea\u8981 $dis_{i,j}>s$\uff0c\u6211\u4eec\u5c31\u8ba9 $j$ \u79fb\u52a8\u3002\n\n\u6211\u4eec\u7528 $j$ \u5230**\u51fa\u53d1\u70b9**\u7684\u8ddd\u79bb\u548c $i$ \u5230**\u7ed3\u675f\u70b9**\u7684\u8ddd\u79bb\u4e0d\u65ad\u66f4\u65b0\u7b54\u6848\u3002\n\n```cpp\n\tfor(ll i=top,j=top;i;i=fa[i]){\n\t\twhile(dis[j]-dis[i]>s) j=fa[j];\n\t\tans=min(ans,max(dis[i],dis[top]-dis[j]));\n\t}\n```\n\n\u7136\u540e\u5176\u5b9e\u8fd8\u6709\u53ef\u80fd\u6700\u8fdc\u8ddd\u79bb\u5728**\u76f4\u5f84\u4ee5\u5916**\u7684\u70b9\u4e0a\u3002\n\n\u6211\u4eec\u5c31\u5bf9\u76f4\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u8fdb\u884c\u641c\u7d22\u3002\n\n\u6bcf\u6b21\u6807\u8bb0\u597d\uff0c**\u4e0d\u91cd\u590d**\u641c\u7d22\u3002\n\n\u6700\u540e\u66f4\u65b0\u7b54\u6848\u3002\n\n```cpp\n\tfor(ll i=top;i;i=fa[i]) line[i]=1;\n\tfor(ll i=top;i;i=fa[i]){\n\t\tk=i;dis[k]=0;\n\t\tdfs(i,fa[i]);\n\t}\n\tfor(ll i=1;i<=n;i++) ans=max(ans,dis[i]);\n```\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\n\n\u6bcf\u4e2a\u73af\u8282\u90fd\u662f $O(n)$ \u7684\uff0c\u603b\u590d\u6742\u5ea6 $O(n)$\u3002\n\n## \u4e0a\u4ee3\u7801\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=1e6+5;\nll n,s,tot,hd[N],cnt,dis[N],ans=9999999999,top,k,fa[N],line[N];\nstruct edge{ll t,nxt,va;}es[N<<2];\ntemplate <typename T> void rd(T &x){\n\tll fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\nvoid add(ll u,ll v,ll w){\n    es[++tot]=(edge){v,hd[u],w},hd[u]=tot;\n}\nvoid dfs(ll x,ll ff){\n\tfa[x]=ff;\n\tif(dis[x]>dis[k]) k=x;\n\tfor(ll i=hd[x];i;i=es[i].nxt){\n\t\tll to=es[i].t;\n\t\tif(to==ff||line[to]) continue;\n\t\tdis[to]=dis[x]+es[i].va;\n\t\tdfs(to,x);\n\t}\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(s);\n\tfor(ll i=1,u,v,w;i<n;i++){\n\t\trd(u);rd(v);rd(w);\n\t\tadd(u,v,w);add(v,u,w);\n\t}\n\tdis[1]=1;dfs(1,0);\n\tdis[k]=0;dfs(k,0);\n\ttop=k;\n\tfor(ll i=top,j=top;i;i=fa[i]){\n\t\twhile(dis[j]-dis[i]>s) j=fa[j];\n\t\tans=min(ans,max(dis[i],dis[top]-dis[j]));\n\t}\n\tfor(ll i=top;i;i=fa[i]) line[i]=1;\n\tfor(ll i=top;i;i=fa[i]){\n\t\tk=i;dis[k]=0;\n\t\tdfs(i,fa[i]);\n\t}\n\tfor(ll i=1;i<=n;i++) ans=max(ans,dis[i]);\n\twr(ans);puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1584167233,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "\u6811\u7f51\u7684\u6838\u9898\u89e3 \u6811\u7684\u76f4\u5f84+\u5c3a\u53d6"
    },
    {
        "content": "###### \u5927\u5bb6\u90fd\u597d\u5f3a\u554aQAQ\uff0c\u8fd9\u6b21\u9898\u89e3\u5927\u591a\u770b\u4e86lyd\u7684\u4e66\n\n\n------------------\n\n### P1099 && P2491 \u9898\u89e3\n\n [Luogu\u6811\u7f51\u7684\u6838](https://www.luogu.org/problem/P1099) && [Luogu\u6d88\u9632](https://www.luogu.org/problem/P2491)\n\n\u524d\u6392\u5b89\u5229\u535a\u5ba2,[LuitaryiJack](https://www.cnblogs.com/Jackpei/) && [Chrisk](https://www.cnblogs.com/ChrisKKK/) && [\u55b5\u306e\u8033](https://www.cnblogs.com/gengyf/)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/fallen-down/p/11631117.html)\n\n~~\u8fd9\u6b21\u662f\u771f\u7684\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c~~\n\n\n------------------\n\n\n\n### \u7b80\u5316\u9898\u610f\n\n~~emmmmmm,\u4f3c\u4e4e\u6ca1\u6709\u529e\u6cd5\u7b80\u5316\u9898\u610f(\u96fe)~~\n\u4e00\u4e2a\u65e0\u73af\u8054\u901a\u65e0\u5411\u56fe\uff0c\u5b9a\u4e49\u76f4\u5f84\u4e0a\u4e00\u6bb5\u957f\u5ea6\u4e0d\u8d85\u8fc7${S}$\u7684\u8def\u4e3a${F}$(\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u70b9)\uff0c\u5b9a\u4e49\u56fe\u4e2d\u5230${F}$\u7684\u8ddd\u79bb\u6700\u957f\u7684\u4e3a\u504f\u5fc3\u8ddd\u3002\u6c42\u4e00\u4e2a${F}$\uff0c\u4f7f\u5f97\u56fe\u4e0a\u5230${F}$\u7684\u8ddd\u79bb\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u8ddd\u79bb\n\n### \u5206\u6790~~\u662f\u6284LYD+\u81ea\u5df1\u7406\u89e3\u7684~~\n#### \u521d\u6b65\u7ed3\u8bba\uff1a\n1. \u6811\u7684\u5404\u4e2a\u76f4\u5f84\u4e2d\u70b9\u90fd\u4ea4\u4e8e\u4e00\u70b9\n\n     -   \u8bc1\u660e([@LuitaryiJack](https://www.cnblogs.com/Jackpei/))\uff1a\u5982\u679c\u4e24\u6761\u76f4\u5f84\u6ca1\u6709\u4ea4\u4e8e\u4e00\u70b9\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u4f60\u53ef\u4ee5\u6784\u9020\u4e00\u6761\u76f4\u5f84\uff0c\u957f\u4e3a\u539f\u76f4\u5f84\u7684\u957f\u52a0\u4e0a\u4e24\u4e2a\u4e2d\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u6b64\u65f6\u539f\u76f4\u5f84\u5c31\u4e0d\u7b26\u5408\u76f4\u5f84\u7684\u5b9a\u4e49\u3002\u6240\u4ee5\u6811\u7684\u5404\u4e2a\u76f4\u5f84\u4e2d\u70b9\u90fd\u4ea4\u4e8e\u4e00\u70b9\n2. \u4efb\u610f\u4e00\u6761\u76f4\u5f84\u4e0a\u6c42\u51fa\u7684\u6700\u5c0f\u504f\u5fc3\u8ddd\u90fd\u76f8\u7b49\n\n    - \u8bc1\u660e\uff1a\u7531\u7ed3\u8bba${1}$\u53ef\u77e5\uff0c\u6240\u6709\u7684\u76f4\u5f84\u90fd\u4ea4\u4e8e\u4e00\u70b9\u3002\u6240\u4ee5\u5176\u4ed6\u7684\u70b9\u5230\u8fd9\u4e9b\u76f4\u5f84\u7684\u8ddd\u79bb\u5c31\u53ef\u4ee5\u5316\u4e3a\u5230\u4e2d\u70b9\u7684\u8ddd\u79bb\u3002\u53c8\u56e0\u4e3a\u4e2d\u70b9\u90fd\u76f8\u4ea4\u4e8e\u4e00\u70b9\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u4e0a\u6c42\u51fa\u7684\u504f\u5fc3\u8ddd\u90fd\u662f\u76f8\u7b49\u7684\u3002\n#### \u521d\u6b65\u505a\u6cd5\n1. O(${N^{3}}$)\n   \n   \u5728\u6811\u7f51\u7684\u6838\u8fd9\u9053\u9898\u4e0a\uff0c\u7531\u4e8e\u56fe\u7684\u70b9\u6570\u8fc7\u5c11\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528O(${N^{3}}$)\u7684\u65b9\u6cd5\u6c34\u8fc7\u8fd9\u9053\u9898\u3002\u5373\u66b4\u529b\u679a\u4e3e\uff1a\u5148\u6c42\u51fa\u6811\u7684\u76f4\u5f84\uff0c\u518d\u5728\u4e0a\u9762\u679a\u4e3eF\uff0c\u7136\u540e\u5728${F}$\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u7528${dfs}$\u6c42\u56fe\u4e0a\u5230${F}$\u7684\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb\uff0c\u518d\u53d6\u6700\u5c0f\u503c\u5373\u53ef\n\n2. O(${N^{2}}$)\n   \n   \u7136\u540e\u8003\u8651\u5bf9\u679a\u4e3e\u66b4\u529b\u8fdb\u884c\u4f18\u5316\u3002\u7531\u4e8e\u8d2a\u5fc3\u53ef\u77e5\uff0c\u5982\u679c\u6bcf\u6b21${F}$\u7684\u9009\u53d6\u8d8a\u957f\uff0c~~\u901a\u8fc7\u611f\u6027\u7406\u89e3~~\u6211\u4eec\u6c42\u7684\u7684\u504f\u5fc3\u8ddd\u5c31\u8d8a\u5c0f\u3002\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u5b9a${F}$\u957f\u4e3a${S}$\uff0c\u7136\u540e\u679a\u4e3e${dfs}$\u6c42\u504f\u5fc3\u8ddd\n\n#### \u4e8c\u7ea7\u7ed3\u8bba\n- \u8fd9\u9898\u6ee1\u8db3\u5355\u8c03\u7684\u6027\u8d28\uff1a\u504f\u5fc3\u8ddd\u8d8a\u5927\uff0c\u53ef\u4ee5\u5f97\u5230\u7684\u70b9\u7684\u4f4d\u7f6e\u8d8a\u96c6\u4e2d\uff0c\u4f7f\u5f97\u7531\u8fd9\u4e9b\u70b9\u6784\u6210\u7684${F}$\u8d8a\u77ed\uff0c\u5373${S}$\u8d8a\u5c0f\n\n   - \u8bc1\u660e\uff1a~~QAQ\u611f\u89c9\u6027\u8d28\u5c31\u662f\u8bc1\u660e\u554a~~\u5728\u4e8c\u5206${mid}$\u4f5c\u4e3a\u504f\u5fc3\u8ddd\u7684\u5927\u524d\u63d0\u4e0b\uff0c\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e9b\u4e1c\u897f\uff1a\n\n      1. \u76f4\u5f84\u4e24\u4e2a\u7aef\u70b9\u4e3a${q}$\u548c${v}$\n      2. \u5728\u76f4\u5f84\u4e0a\uff0c\u79bb${q}$\u6700\u957f\u7684\u4e0d\u8d85\u8fc7${mid}$\u7684\u70b9\u4e3a${p}$\uff0c\u540c\u7406\uff0c${u}$\u662f\u76f8\u5bf9${v}$\u800c\u8a00\u7684\u90a3\u4e2a\u70b9\n   \n   - \u6839\u636e\u76f4\u5f84\u7684\u6700\u957f\u6027\uff0c\u4efb\u4f55\u4ece${p}$\u548c${q}$\u4e4b\u95f4\u7684\u76f4\u5f84\u4e2d\u5206\u53c9\u79bb\u5f00\u7684\u5b50\u6811\uff0c\u5176\u79bb${p}$\u6700\u8fdc\u7684\u8ddd\u79bb\u4e0d\u4f1a\u8d85\u8fc7${mid}$\u3002\n   - \u6240\u4ee5${p}$\u548c${u}$\u5c31\u662f\u5728\u504f\u5fc3\u8ddd\u4e0d\u8d85\u8fc7${mid}$\u7684\u524d\u63d0\u4e0b\uff0c\u5c3d\u91cf\u9760\u8fd1${F}$\u7684\u70b9\n  \n#### \u4e8c\u7ea7\u505a\u6cd5~~\u4ec0\u4e48\u9b3c\u6807\u9898~~\n\n- O(${NlogSUM}$)\uff0csum\u4e3a\u6811\u7f51\u4e2d\u6240\u6709\u8fb9\u7684\u957f\u5ea6\u4e4b\u548c\n  \n  \u4e8c\u5206${mid}$\uff0c\u7136\u540e\u6309\u7167\u4e0a\u9762\u7684\u7ed3\u8bba\u8bc1\u660e\u627e${p}$\u548c${u}$\uff0c\u7136\u540e\u5224\u65ad\u4ed6\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f\u5426\u8d85\u8fc7${S}$\uff0c\u4ee5\u53ca\u79bb${F}$\u6700\u8fdc\u7684\u7684\u70b9\u5230\u8fd9\u4fe9\u70b9\u7684\u8ddd\u79bb\u662f\u5426\u5408\u6cd5\u3002\u82e5\u4e24\u8005\u90fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u4ee3\u8868\u8fd9\u662f\u5408\u6cd5\u7684\n\n#### \u6700\u7ec8\u7684\u505a\u6cd5\n\n- O(${N}$)\n    \n    \u8bbe\u76f4\u5f84\u4e0a\u7684\u8282\u70b9\u4e3a${u_{1},u_{2}.....u_{t}}$\uff0c\u90a3\u4e48\u5148\u548c\u524d\u51e0\u79cd\u505a\u6cd5\u4e00\u6837\uff0c\u628a\u8fd9\u4e9b\u8282\u70b9\u6807\u8bb0\u4e3a\u5df2\u7ecf\u8bbf\u95ee\uff0c\u7136\u540e\u7528\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u6c42${d[u_{i}]}$\uff0c\u542b\u4e49\u4e3a\u4ece${u_{i}}$\u51fa\u53d1\uff0c\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb\u3002\u663e\u7136\uff0c\u504f\u5fc3\u8ddd\u8981\u4e48\u5c31\u662f\u7531\u7ed3\u8bba${2}$\u5f97\u5230\u7684\u76f4\u5f84\u4e24\u7aef\u70b9\u5230${F}$\u7684\u8ddd\u79bb\u7684\u8f83\u5927\u503c\uff0c\u8981\u4e48\u5c31\u662f\u76f4\u5f84\u5916\u5230${F}$\u7684\u6700\u5927\u7684\u8ddd\u79bb\u3002\u6240\u4ee5\uff0c\u9996\u5148\u679a\u4e3e${F}$\u7684\u4e24\u4e2a\u7aef\u70b9\u53d6${max}$\u3002\u6700\u540e\u7531\u4e8e\u6700\u540e\u8981\u7528${F}$\u5b8c\u5168\u904d\u5386\u4e00\u904d\u76f4\u5f84\uff0c\u6240\u4ee5\u6211\u4eec\u53d6${max(d[u_{i}])}$\u3002\u7136\u540e\u626b\u4e00\u8fb9\u76f4\u5f84\u5373\u53ef\u6c42\u89e3\n\n------------------\n\n### *code*\n\n\u6211\u9009\u53d6\u4e86\u6211\u4eec\u673a\u623f\u5927\u4f6c\u4eec\u7684${code}$\u7ed9\u5927\u5bb6\u505a\u53c2\u8003\u3002\u8981\u662f\u6709\u4fb5\u6743\uff0cemmmmm\uff0c\u90a3\u5c31\u4fb5\u6743\u5427~~\u624b\u52a8\u6ed1\u7a3d~~\n\n1 O(${N^{3}}$) [@\u55b5\u306e\u8033](https://www.cnblogs.com/gengyf/)\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace gengyf{\n    inline int read(){\n        int x=0,f=1;char s=getchar();\n        while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n        while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n        return x*f;\n    }\n    const int inf=0x3f3f3f3f;\n    const int N=310;\n    int m[N][N],n,s,ans=inf;\n    int main(){\n        n=read();s=read();\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++){\n                m[i][j]=inf;\n                if(i==j)m[i][j]=0;\n            }\n        for(int i=1;i<n;i++){\n            int x,y,z;\n            x=read();y=read();z=read();\n            m[x][y]=min(z,m[x][y]);\n            m[y][x]=m[x][y];\n        }\n        for(int k=1;k<=n;k++)\n            for(int i=1;i<=n;i++)\n                for(int j=1;j<=n;j++){\n                    if(m[i][k]==inf||m[k][j]==inf)continue;\n                    else m[i][j]=min(m[i][k]+m[k][j],m[i][j]);\n                }\n        int l,r,len=0;\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++){\n                if(m[i][j]>=inf||m[i][j]<=len)continue;\n                len=m[i][j];\n                l=i;r=j;\n        }\n        for(int i=1;i<=n;i++){\n            if(m[l][i]+m[i][r]!=len)continue;\n            for(int j=1;j<=n;j++){\n                if(m[l][j]+m[r][j]!=len)continue;\n                if(m[i][j]>s)continue;\n                int ecc=-inf;\n                for(int k=1;k<=n;k++){\n                    ecc=max(ecc,m[i][k]+m[j][k]-m[i][j]>>1);\n                }\n                ans=min(ans,ecc);\n            }\n        }\n        printf(\"%d\",ans);\n        return 0;\n    }\n}\nint main(){\n    gengyf::main();\n    return 0;\n}\n```\n\nmarkdown\u7684\u4ee3\u7801\u63d2\u5165\u4e0d\u77e5\u9053\u600e\u4e48\u6298\u53e0QAQ\uff0c\u597d\u4e11\n\n2 O(${N^{2}}$) [@LuitaryiJack](https://www.cnblogs.com/Jackpei/)\n\n```cpp\n\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define R register int \nusing namespace std;\nconst int N=310;\ninline int g() {\n\tR ret=0,fix=1; register char ch; while(!isdigit(ch=getchar())) fix=ch=='-'?-1:fix;\n\tdo ret=ret*10+(ch^48); while(isdigit(ch=getchar())); return ret*fix;\n}\nstruct edge {\n\tint v,w,nxt;\n\t#define v(i) e[i].v\n\t#define w(i) e[i].w\n\t#define nxt(i) e[i].nxt\n}e[N<<1];\nint n,m,k,st,ed,mx,ans=0x3f3f3f3f,tot,cnt,fir[N],pre[N],cnte[N],d[N],mem[N],sume[N];\ninline void add(int u,int v,int w) {v(++tot)=v,w(tot)=w,nxt(tot)=fir[u],fir[u]=tot;}\nbool vis[N];\nvoid dfs(int u,int fa) {\n\t//if(vis[u]) return ;\n\tfor(R i=fir[u];i;i=nxt(i)) {\n\t\tR v=v(i);\n\t\tif(vis[v]||v==fa) continue;\n\t\td[v]=d[u]+w(i);\n\t\tdfs(v,u);\n\t\tpre[v]=u;\n\t\tcnte[v]=i;\n\t}\n}\ninline void solve() {\n\tmemset(vis,0,sizeof(vis));\n\tmemset(d,0,sizeof(d)); mx=0;\n\td[1]=0,dfs(1,0);\n\tfor(R i=1;i<=n;++i) if(d[i]>mx) mx=d[i],st=i;\n\tmemset(pre,0,sizeof(pre));\n\tmemset(d,0,sizeof(d)); mx=0;\n\td[st]=0,dfs(st,0);\n\tfor(R i=1;i<=n;++i) if(d[i]>mx) mx=d[i],ed=i;\n\tfor(R i=ed;i;i=pre[i]) mem[++cnt]=i,sume[cnt]=sume[cnt-1]+w(cnte[i]);\n\tfor(R i=1;i<=cnt;++i) { R j; mx=0;\n\t\tmemset(vis,false,sizeof(vis));\n\t\tmemset(d,0,sizeof(d));\n\t\tfor(j=i;j<=cnt;++j) if(sume[j-1]-sume[i-1]>k) break; \n\t\t--j;\n\t\tfor(R t=i;t<=j;++t) vis[mem[t]]=true;\n\t\tfor(R t=i;t<=j;++t) dfs(mem[t],0);\n\t\tfor(R i=1;i<=n;++i) if(d[i]>mx) mx=d[i];\n\t\tans=min(mx,ans);\n\t}\n}\nsigned main() {\n\tn=g(),k=g();\n\tfor(R i=1,u,v,w;i<n;++i) u=g(),v=g(),w=g(),add(u,v,w),add(v,u,w);\n\tsolve();\n\tprintf(\"%d\\n\",ans);\n}\n\n```\n\n\n3 O(${NlogSUM}$) [@LuitaryiJack](https://www.cnblogs.com/Jackpei/)\n   \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define R register int\nusing namespace std;\nint n,s,l=1,r=1;\nint fa[300010],vis[300010],fir[300010],cnt;\nlong long d[300010],ans=0x3f3f3f3f;\ninline int g() {\n\tR ret=0,fix=1; register char ch; while(!isdigit(ch=getchar())) fix=ch=='-'?-1:fix;\n\tdo ret=ret*10+(ch^48); while(isdigit(ch=getchar())); return ret*fix;\n}\nstruct node {\n\tint v,w,nxt;\n\t#define v(i) e[i].v\n\t#define w(i) e[i].w\n\t#define nxt(i) e[i].nxt\n}e[600010];\ninline void add(int u,int v,int w) {v(++cnt)=v,w(cnt)=w,nxt(cnt)=fir[u],fir[u]=cnt;}\ninline void dfs(int u) {\n\tfor(R i=fir[u];i;i=nxt(i)) {\n\t\tR v=v(i);\n\t\tif(vis[v]||fa[u]==v) continue;\n\t\tfa[v]=u;\n\t\td[v]=d[u]+w(i);\n\t\tdfs(v);\n\t}\n}\nsigned main() {\n\tn=g(),s=g();\n\tfor(R i=1,u,v,w;i<n;++i) u=g(),v=g(),w=g(),add(u,v,w),add(v,u,w);\n\tdfs(1);\n\tfor(R i=1;i<=n;++i) l=d[i]>d[l]?i:l;\n\tmemset(fa,0,sizeof(fa));\n\td[l]=0,dfs(l);\n\tfor(R i=1;i<=n;++i) r=d[i]>d[r]?i:r;\n\tR t=r;\n\tfor(R i=r;i;i=fa[i]) {\n\t\twhile(fa[t]&&d[i]-d[fa[t]]<=s) t=fa[t];\n\t\tans=min((long long)ans,max(d[t],d[r]-d[i]));\n\t}\n\tfor(R i=r;i;i=fa[i]) vis[i]=true;\n\tfor(R i=r;i;i=fa[i]) d[i]=0,dfs(i);\n\tfor(R i=1;i<=n;++i) if(!vis[i]) ans=max(ans,d[i]);\n\tprintf(\"%lld\\n\",ans);\n}\n```\n4 O(${N}$) @\u6211\u81ea\u5df1\u53c8\u4e11\u53c8\u957f\u53c8\u6162\u7684\u4ee3\u7801QAQ\n   \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=500010;\nint head[maxn],ver[maxn<<1],nxt[maxn<<1],tot;\nint edge[maxn<<1],fa[maxn],dp[maxn],val[maxn];\nint dep[maxn],n,m,x,y,z,tmp,ans,s;bool v[maxn];\ninline int read(){\n    char c=getchar();int x=0,f=1;\n    while(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return f*x;\n}\ninline void add(int x,int y,int z){\n    ver[++tot]=y,nxt[tot]=head[x];\n    head[x]=tot;edge[tot]=z;\n}\ninline void dfs(int x){\n    for(register int i=head[x];i;i=nxt[i]){\n        if(ver[i]!=fa[x]){\n            dep[ver[i]]=dep[x]+edge[i];\n            fa[ver[i]]=x,dfs(ver[i]);\n        }\n    }\n}\ninline void diameter(){\n    dfs(1);x=1;\n    for(register int i=2;i<=n;i++)\n        if(dep[i]>dep[x]) x=i;//\u79bb\u6839\u6700\u8fdc\u7684\u70b9\n    dep[x]=0;memset(fa,0,sizeof(fa));\n    //\u6362\u4e86\u6839\uff0c\u6240\u4ee5fa\u4f1a\u53d8\n    dfs(x);y=1;//\u4e24\u904ddfs\u6c42\u6811\u7684\u76f4\u5f84\n    for(register int i=2;i<=n;i++)\n        if(dep[i]>dep[y]) y=i;//\u79bbx\u6700\u8fdc\u7684\u70b9\n    while(y!=x) v[y]=1,val[++m]=y,y=fa[y];\n    //\u628a\u76f4\u5f84\u4e0ax,y\u4e4b\u95f4\u7684\u70b9\u5168\u90e8\u6807\u8bb0\u4e0a\u8bbf\u95ee\u8fc7\n    //\u5355\u5f00val[]\u8bb0\u4e00\u4e0b\u76f4\u5f84\u4e0a\u90fd\u6709\u4ec0\u4e48\n    v[x]=1;val[++m]=x;\n}\ninline void treedp(int x){v[x]=1;\n    for(register int i=head[x];i;i=nxt[i])\n        if(!v[ver[i]]) treedp(ver[i]),\n            dp[x]=max(dp[x],dp[ver[i]]+edge[i]);\n    //\u5728\u76f4\u5f84\u4e0adp\uff0c\n    //dp[]->\u4ece[]\u51fa\u53d1\uff0c\u4e0d\u8fc7\u76f4\u5f84\u4e0a\u7684\u70b9\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb\n}\nint main(){\n    n=read(),s=read();ans=0x3f3f3f3f;\n    for(register int i=1;i<n;i++)\n        x=read(),y=read(),z=read(),\n        add(x,y,z),add(y,x,z);\n    diameter();register int j=m;\n    for(register int i=1;i<=m;i++) treedp(val[i]);\n    for(register int i=1;i<=m;i++)\n        tmp=max(tmp,dp[val[i]]);\n    for(register int i=m;i>=1;i--){\n        while(j>=1&&dep[val[j]]-dep[val[i]]<=s) j--;\n        ans=min(ans,max(tmp,\n            max(dep[val[i]],dep[val[1]]-dep[val[j+1]])));\n    }\n    printf(\"%d\",ans);\n}\n```\n\u597d\u50cf\u548cchrisk\u6ca1\u6709\u5173\u7cfb\u554a\uff0cQAQ\uff0c\u7b97\u4e86\uff0c\u524d\u6392\u5b89\u5229\u535a\u5ba2\u5c31\u5b89\u5229\u4e86\u5427\uff0c\u53cd\u6b63\u4e5f~~\u6ca1\u6709\u6536\u94b1~~\u90fd\u662f\u540c\u5b66QAQ\n\n--------------\n\n\u6700\u540e\u56fd\u9645\u60ef\u4f8b\uff0cthanks for your attention\n\n~~\u603b\u7b97\u5199\u5b8c\u4e86\uff0c\u7d2f\u6b7b\u4e86~~",
        "postTime": 1573691320,
        "uid": 145411,
        "name": "the_Death",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "### ~~\u8fd9\u9898\u6211\u89c9\u5f97\u5230\u4e0d\u4e86\u84dd\u5427~~##### \n\n\u6b65\u5165\u6b63\u9898\n\n\u8fd9\u9898\u7528\u4e00\u4e2a**floyd**\u6c42\u51fa\u6811\u7f51\u7684\u76f4\u5f84\n\n\u7136\u540e**\u679a\u4e3e**\u6240\u6709\u5728\u76f4\u5f84\u4e0a\u7684\u7ebf\u6bb5\n\u679a\u4e3e\u65b9\u6cd5\uff1a\n```\nif(dis[\u5de6\u7aef\u70b9][i]+dis[i][j]+dis[j][\u53f3\u7aef\u70b9]==\u76f4\u5f84)\n```\n\u662f\u4e0d\u662f\u5f88\u6613\u61c2\uff1f\n\n\u7136\u540e\u679a\u4e3e\u6240\u6709\u70b9\u7684\u504f\u5fc3\u8ddd\n\n\u5b8c\u6210\uff01(~~\u662f\u4e0d\u662f\u5f88\u6c34~~)\n\n```\n#include<iostream>\nusing namespace std;\nint dis[1001][1001]; \nint maxx[1001],maxy[1001];\nint m,l;\n#define f(i,a,b) for(i=a;i<=b;i++) //\u7b80\u5316\u4ee3\u7801\nint main()\n{\n\tint n,s,i,j,k;\n\tcin>>n>>s;\n\tf(i,0,1000)\n\t{\n\t\tf(j,0,1000)\n\t\t{\n\t\t\tif(i!=j)dis[i][j]=99999999;\n\t\t\telse dis[i][j]=0;\n\t\t}\n\t}\n\tf(i,1,n-1)\n\t{\n\t\tint a,b,c;\n\t\tcin>>a>>b>>c;\n\t\tdis[a][b]=c;\n\t\tdis[b][a]=c;//\u65e0\u5411\u56fe\u5b58\u56fe\n\t}\n\tint maxn=0;\n\tf(k,1,n)\n\t{\n\t\tf(i,1,n)\n\t\t{\n\t\t\tf(j,1,n)if(dis[i][j]>dis[i][k]+dis[k][j])dis[i][j]=dis[i][k]+dis[k][j];\n\t\t}\n\t}//floyd\u6c42\u76f4\u5f84\n\tf(i,1,n)\n\t{\n\t\tf(j,1,n)\n\t\t{\n\t\t\tif(dis[i][j]!=99999999)\n\t\t\t{\n\t\t\t\tif(maxn<dis[i][j])maxn=dis[i][j];\n\t\t\t}\n\t\t}\t\n\t} //\u56e0\u4e3a\u6709\u591a\u6761\u76f4\u5f84\uff0c\u6240\u4ee5\u8981\u628a\u76f4\u5f84\u5148\u6c42\u51fa\n\tf(i,1,n)\n\t{\n\t\tf(j,1,n)\n\t\t{\n\t\t\tif(maxn==dis[i][j])\n\t\t\t{\n\t\t\t\tm++;\n\t\t\t    maxx[m]=i;\n\t\t\t    maxy[m]=j;\n\t\t\t}\n\t\t}\t\n\t} //\u7136\u540e\u628a\u6240\u6709\u7aef\u70b9\u653e\u5230\u6570\u7ec4\u91cc,\u65b9\u4fbf\u679a\u4e3e\n\tint minn=99999999;\n\tf(i,1,n)\n\t{\n\t\tf(j,1,n)//\u679a\u4e3e\u6811\u7f51\u7684\u4e2d\u5fc3(\u56e0\u4e3a\u6811\u7f51\u7684\u4e2d\u5fc3\u53ef\u80fd\u9000\u5316\u6210\u4e00\u4e2a\u70b9,\u6240\u4ee5\u65e0\u9700\u5224\u91cd)\n\t\t{\n\t\t    int ans=0;\n\t\t    f(l,1,m)//\u679a\u4e3e\u76f4\u5f84\n\t\t    {\n\t\t    \tif(dis[i][j]!=99999999&&dis[i][j]<=s&&dis[maxx[l]][i]+dis[i][j]+dis[j][maxy[l]]==maxn)//\u5224\u65ad\u7ebf\u6bb5\u662f\u5426\u5728\u76f4\u5f84l\u4e0a\n\t\t\t\t{\n\t\t\t\t\tf(k,1,n)//\u679a\u4e3e\u6240\u6709\u70b9\u7684\u504f\u5fc3\u8ddd\n\t\t\t\t\t{\n\t\t\t\t\t\tif(k!=i&&k!=j)//\u5224\u91cd\n                        ans=max(ans,(dis[k][i]+dis[k][j]-dis[i][j])/2)//\u5224\u65ad\u70b9k\u5230\u7ebf\u6bb5(i,j)\u7684\u8ddd\u79bb\n\t\t\t\t\t}\n\t\t\t\t\tminn=min(minn,ans);//\u6700\u5c0f\u504f\u5fc3\u8ddd\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tcout<<minn;//~~\u534e\u4e3d\u7684\u8f93\u51fa~~\n}\n```\n",
        "postTime": 1522910790,
        "uid": 67838,
        "name": "\u661f\u8fb0\u8282\u5ea6\u4f7f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u7ec8\u4e8e\u80fd\u591f\u72ec\u7acbAC T4 \u4e86\uff0c3.5h\u60ca\u5929\u5927\u6a21\u62df\uff1b\n\n\u672c\u849f\u84bb\u770b\u4e0d\u51fa\u7b97\u6cd5\uff0c\u53ea\u597d\u6a21\u62df+\u66b4\u529b+\u6700\u77ed\u8def\uff1b\n\n\u6ca1\u60f3\u5230\u7adf\u7136\u8fc7\u4e86\n\n\u7b80\u8981\u8bf4\u4e0b\u601d\u8def\uff1a\n\n\u4e00\uff1a\u8dd1\u4e2aFloyed\u6c42\u51fa\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u597d\u50cf\u6709\u70b9\u6d6a\u8d39\uff0c\u4f46\u6570\u636e\u8303\u56f4\u8fd9\u4e48\u5c0f\uff0c\u5c31\u778e\u5199\u5427\u3002\u3002\uff09\n\n\u4e8c\uff1a\u8dd1bfs\u6c42\u51fa\u56fe\u4e2d\u6700\u957f\u7684\u8def\u5f84\uff08\u5373\u9898\u4e2d\u7684\u76f4\u5f84\uff09\uff0c\u5b9e\u73b0\u65b9\u6cd5\u4e0a\uff1a\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53Node \u5b58\u50a8\u70b9\u7684 id\uff08\u7f16\u53f7\uff09,dis\uff08\u8ddd\u79bb\u8d77\u70b9\u7684\u8ddd\u79bb\uff09,step\uff08\u5230\u8fbe\u8fd9\u4e2a\u70b9\u65f6\u8d70\u7684\u6b65\u6570\uff09,pre\uff08\u8fd9\u4e2a\u70b9\u7684\u524d\u9a71\uff09\uff0c\u7136\u540e\u4e00\u8d77\u6254\u5230\u961f\u5217\u91cc\u3002\u4e0e\u5f53\u524d\u6700\u4f18\u503c\u66f4\u65b0\u5b58\u5230road\u91cc\u5373\u53ef\uff1b\n\n\u5728\u8fd9\u91cc\u6211\u662f\u9009\u53d6\u51fa\u5ea6\u4e3a1\u7684\u70b9\u5e7f\u641c\u7684\uff0c\u5c0f\u8d2a\u5fc3\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u5427\n\n\u4e09\uff1a\u63a5\u4e0b\u6765\u5c31\u662f\u66b4\u529b\u7684\u4e0d\u80fd\u518d\u66b4\u529b\u4e86\n\n\u679a\u4e3e\u76f4\u5f84\u4e0a\u6240\u6709\u7684\u5408\u6cd5\u7684\u8def\u5f84\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8def\u5f84\u679a\u4e3e\u6240\u6709\u7684\u70b9\u5230\u8fd9\u6761\u8def\u5f84\u7684\u6700\u5c0f\u503c\uff0c\u5728\u8fd9\u4e9b\u91cc\u9762\u9009\u4e00\u4e2a\u6700\u5927\u503c\uff08\u6700\u8fdc\u8ddd\u79bb\uff09\u3002\u6700\u540e\u53d6\u6240\u6709\u7684\u8def\u5f84\u4e2d\u7684\u6700\u5c0f\u503c\uff08\u6700\u5c0f\u7684\u6700\u5927\u504f\u5fc3\u8ddd\uff09\u3002\u8f93\u51fa\u5373\u53ef\u3002\n\n\u5b89\u5229\u4e00\u4e0b\u849f\u84bb\u7684blog\uff1a<http://blog.csdn.net/A\\_Comme\\_Amour/article/details/78405481>\n\nCode\uff1a\n\n\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint n,s,chu[301];\nstruct Edge{\n    int to,next,dis;\n}edge[1001];\nbool b[301];\nstruct Node{\n    int id,dis,step,pre;\n}node[301];\nqueue<Node> que;\nint maxstep; int nowmax=0;//nowmax\u4e0d\u80fd\u653e\u5728spfa\u91cc\u9762\u554a \nint f[301][301];\nint ans=0x7fffffff;\nint head[301],num_edge;\nvoid add_edge(int from,int to,int dis)\n{\n    edge[++num_edge].next=head[from];\n    edge[num_edge].to=to;\n    edge[num_edge].dis=dis;\n    head[from]=num_edge;\n}\nint maxdis; int road[301],tot;\nvoid dfs(int x,int step,int dis)//\u8fd9\u662f\u7528\u6df1\u641c\u5199\u7684\u6c42\u76f4\u5f84\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48WA\u4e86\u51e0\u4e2a\u70b9\uff0c\u5927\u4f6c\u4eec\u5e2e\u6211\u770b\u770b\u4e5f\u597d \n{\n    if (step==1) road[1]=x;\n    if (dis>maxdis)\n    {\n        maxdis=dis; road[step]=x; maxstep=step;\n    }\n    b[x]=true;\n    for (int i=head[x]; i!=0; i=edge[i].next)\n    {\n        if (!b[edge[i].to])\n        {\n            dfs(edge[i].to,step+1,dis+edge[i].dis);\n        }\n    }\n}\nvoid spfa(int x)\n{\n    memset(b,0,sizeof(b));//\u4e0d\u8981\u5fd8\u8bb0\u6bcf\u6b21\u6e05\u96f6 \n    memset(node,0,sizeof(node));\n    b[x]=true;//\u8d77\u70b9\u6807\u8bb0 \n    for (int i=1; i<=n; i++) node[i].id=i;\n    node[x].dis=0; node[x].step=1;\n    que.push(node[x]);\n    while (!que.empty())\n    {\n        Node now=que.front(); que.pop();\n        int t=0;\n        for (int i=head[now.id]; i!=0; i=edge[i].next)\n        {\n            if (!b[edge[i].to])\n            {\n                t++;\n                b[edge[i].to]=true;\n                node[edge[i].to].dis=now.dis+edge[i].dis;\n                node[edge[i].to].pre=now.id;\n                node[edge[i].to].step=now.step+1;\n                que.push(node[edge[i].to]);\n            }\n        }\n//        if (nowmax<now.dis&&!t)//\u4ece\u7ec8\u70b9\uff08\u6ca1\u6709\u51fa\u5ea6\uff09\u5411\u524d\u4fdd\u5b58\u8def\u5f84 \n        if (nowmax<now.dis&&chu[now.id]==1&&now.id!=x)\n        {\n            nowmax=now.dis;\n            maxstep=now.step;\n            road[now.step]=now.id;\n            int p=now.pre;\n            while (p)\n            {\n                road[node[p].step]=node[p].id; p=node[p].pre;\n            }\n        }\n    }\n}\nvoid Floyed()\n{\n    for (int k=1; k<=n; k++)\n        for(int i=1; i<=n; i++)\n            for (int j=1; j<=n; j++)\n//                if (i!=j&&j!=k&&i!=k)\n                    f[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n/*    for (int i=1; i<=n; i++)\n    {\n        for(int j=1; j<=n; j++) printf(\"%d \",f[i][j]);\n        printf(\"\\n\");\n    }*/\n}\nbool vis[301],used[301]; int max_dis;\nvoid work(int x,int y)\n{\n    int road_max=0;\n    for (int i=1; i<=n; i++)\n    {\n        int node_min=0x7fffffff;\n        for (int j=x; j<=y; j++)\n        {\n//            if (i!=road[j])\n            node_min=min(node_min,f[i][road[j]]);\n        }\n        road_max=max(road_max,node_min);\n    }\n    ans=min(ans,road_max);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    memset(f,0x7f/3,sizeof(f));\n    for (int i=1; i<=n; i++) f[i][i]=0;\n    for (int i=1; i<=n-1; i++)\n    {\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add_edge(x,y,z); add_edge(y,x,z);\n        f[x][y]=f[y][x]=z;\n        chu[x]++; chu[y]++;\n    }\n    Floyed();\n    for (int i=1; i<=n; i++)\n        if (chu[i]==1)\n        {\n//            dfs(i,1,0);\n            spfa(i);\n        }\n/*    int maxn=0; int k;\n    for (int i=head[road[2]]; i!=0; i=edge[i].next)\n        if (maxn<edge[i].dis) {maxn=edge[i].dis; k=edge[i].to;}\n    road[1]=k;\n    for (int i=1; i<=maxstep; i++) printf(\"%d \",road[i]);*/\n    for (int i=1; i<=maxstep; i++)\n    {\n        for (int j=i; j<=maxstep; j++)\n        {\n            if (f[road[i]][road[j]]>s) break;\n                work(i,j);\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1509440676,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u54c7\uff0c\u6211\u4e00\u904dAC\u8bf6\uff0c\u597d\u6fc0\u52a8\n\n\u3010\u8c03\u8bd5\u4e86\u4e00\u4e2a\u665a\u4e0a\u52a0\u4e00\u8282\u8bfe\u7684\u65f6\u95f42333\u3011\n\n\u3010\u5404\u79cd\u7ec6\u8282\u51fa\u9519\u3011\n\n\u55ef......\u5176\u5b9e\u6574\u4f53\u601d\u8def\u548c\u697c\u4e0b\u67d0\u4e2a\u6211\u7684\u540c\u684c\u4e00\u6837\uff0cO( n )\u7684\u590d\u6742\u5ea6\n\n\u4f46\u662f\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u5b83\u7684\u4ee3\u7801\u6bd4\u6211\u77ed\u4e86\u4e0d\u5c11\n\n\u4e0d\u8fc7\u6211\u89c9\u5f97\u8fd8\u662f\u6211\u7684\u4ee3\u7801\u6613\u61c2\n\n\u6240\u4ee5\u6211\u8fd8\u662f\u6765\u53d1\u9898\u89e3\u4e86\n\n\n\u63a5\u4e0b\u6765\u8bf4\u505a\u6cd5\n\n\u4ee3\u7801\u4e00\u5171\u4e09\u4e2a\u5927\u90e8\u5206\n\n1\u3001\u5148\u968f\u4fbf\u627e\u4e2a\u76f4\u5f84\u51fa\u6765\u3002\n\n\u4e24\u904dspfa \u6c42\u8def\u5f84\u627e\u51fa\u76f4\u5f84\u7684\u4e24\u7aef\u70b9\uff08\u849f\u84bb\u7684\u6211\u53ea\u4f1aspfa.......\u53ef\u80fd\u5927\u5927\u52a0\u957f\u4e86\u6211\u7684\u4ee3\u7801......?\uff09\n\n\u6807\u8bb0\u76f4\u5f84\u6211\u7528\u7684\u81ea\u521bdfs\u6807\u8bb0\u6cd5(\u2299o\u2299)\u2026\uff08\u53ef\u80fd\u8fd9\u53c8\u52a0\u957f\u4e86\u6211\u7684\u4ee3\u7801.......?\uff09\n\n\u3010\u65e0\u8bba\u65b9\u6cd5\u591a\u9b3c\u755c\uff0c\u65f6\u95f4\u5c31\u662fO\uff08N\uff09\uff0c\u6ca1\u6bdb\u75c5\u3011\n\n2\u3001\u6c42\u4ece\u8be5\u76f4\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u51fa\u53d1\u5728\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u4efb\u610f\u4e00\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb far [ ]\n\n\u8fd9\u4e2a\u5c31\u662fdfs\u5c31\u884c\u4e86\uff0c\u518d\u52a0\u4e0a\u4e4b\u524d\u76f4\u5f84\u4e0a\u505a\u4e86\u6807\u8bb0\uff0c\u5f88\u597d\u60f3\n\n\u3010\u5de7\u5999\u7684\u5c31\u662f\u8fd9\u4e00\u8fc7\u7a0b\u8fd8\u662fO(N)\uff0c\u5567\u3002\u3011\n\n3\u3001\u66b4\u529b\u679a\u4e3e\u76f4\u5f84\u4e0a\u8d77\u59cb\u70b9i,j \u6c42ECC\uff08i,j\uff09\u5c31\u597d\u4e86\uff08\u4e8e\u662f\u6211\u5c31\u628a\u4e00\u4e2aO\uff08N\uff09\u7684\u601d\u8def\u5728\u8fd9\u91cc\u641e\u5f97\u8ddfO(N^2)\u4e00\u6837\u4e48......?\uff09\n\n\u3010\u53cd\u6b63AC\u4e86\uff0c\u53cd\u6b63\u662f\u6309O(N)\u601d\u8def\u5199\u7684\uff0c\u4e0d\u7ba1\u4e86\u3011\n\n\n\u55ef\u300b\u3002\u3002\u3002\u3002\u7b80\u5355\u8bf4\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u3010\u70b9\u5230\u4e3a\u6b62\uff0c\u5927\u5bb6\u8fd8\u662f\u8981\u81ea\u5df1\u601d\u8003\u3011\n\n\u9996\u5148\u6211\u4eec\u8981\u8bc1\u660e\u4e0d\u7ba1\u5728\u54ea\u6761\u76f4\u5f84\u4e0a\u6c42\u504f\u5fc3\u8ddd\u7684\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\n\n\u5176\u6b21\u6211\u4eec\u628a\u5230\u8fbe\u8fd9\u6bb5\u8def\u5f84\u4e0a\u7684\u6700\u8fdc\u70b9\u505a\u4e2a\u5206\u7c7b\uff0c\u4e00\u4e2a\u662f\u76f4\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u7684far\uff0c\u53e6\u4e00\u7c7b\u5c31\u662f\u76f4\u5f84\u4e0a\u4e24\u7aef\u70b9\u4e86\n\n\n\u6240\u4ee5\n\u4ee3\u7801\n```cpp\n//\u6811\u7f51\u7684\u6838 \n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\n#if 0\n```\nWriters: G.S.M. && Goes\nWhat a funny game!\n\nLet's get it !\n\n\n\n    \n    \n\n\n\n```cpp\n#endif\ninline int read(){\n    char ch=getchar();int sum=0;\n    while(ch<'0'||ch>'9') ch=getchar();\n    while(ch>='0'&&ch<='9')\n        sum*=10,sum+=ch-'0',ch=getchar();\n    return sum;\n}\nconst int N=305;int n,s;\nstruct ss{\n    int to,nex,va;\n}edge[N<<1];\nint head[N],ecnt;\nvoid add(int va,int y,int x){\n    edge[++ecnt]=(ss){y,head[x],va};\n    edge[++ecnt]=(ss){x,head[y],va};\n    head[x]=ecnt-1,head[y]=ecnt;\n}\ninline void gsin(){\n    n=read(),s=read();\n    for(int i=1;i<=n-1;i++)\n        add(read(),read(),read());\n}\n//\u6c42\u76f4\u5f84  \u6807\u8bb0\u76f4\u5f84\nint dis[N],vis[N],start,end;\nint spfa(int pos){\n    queue <int> q;q.push(pos);vis[pos]=1;\n    for(int i=1;i<=n;i++) dis[i]=99999999;\n    memset(vis,0,sizeof(vis));dis[pos]=0; \n    while(!q.empty()){\n        int x=q.front();q.pop();\n        for(int i=head[x];i;i=edge[i].nex)\n        if(dis[edge[i].to]>dis[x]+edge[i].va)\n        {\n            dis[edge[i].to]=dis[x]+edge[i].va;\n            if(!vis[edge[i].to]) q.push(edge[i].to);\n        }vis[x]=0;\n    }\n    int ans=0;pos=0;\n    for(int i=1;i<=n;i++)\n    if(dis[i]>ans) ans=dis[i],pos=i;\n    return pos;\n}\nint tree_zj[N],top=1;\nbool mark(int pos,int fa,int end){\n    if(pos==end) return true;\n    for(int i=head[pos];i;i=edge[i].nex)\n    if(edge[i].to!=fa)\n    {\n        bool f=mark(edge[i].to,pos,end);\n        if(f) {tree_zj[++top]=pos;return true;}\n    }\n    return false;\n}\ninline void get_ll(){\n    end=spfa(1);\n    start=spfa(end);\n    mark(end,end,start);\n    tree_zj[1]=start;\n    //\u76f4\u5f84\u4e0a\u4e24\u70b9i,j\u4e4b\u95f4\u8ddd\u79bb=abs(dis[i]-dis[j]);\n}\n//\u6c42\u504f\u5fc3\u8ddd\u7684\u5019\u9009\u4eba2333 \nint far[N];//\u4ecezj[i]\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u70b9\u6700\u8fdc\u53ef\u8fbe\u8ddd\u79bb \nvoid dfs(int fa,int pos,int now){\n    far[fa]=max(now,far[fa]);\n    for(int i=head[pos];i;i=edge[i].nex)\n    if(!vis[edge[i].to]){\n        vis[edge[i].to]=1;\n        dfs(fa,edge[i].to,now+edge[i].va);\n    }return ; \n}\ninline void get_len(){\n    memset(vis,0,sizeof(vis));\n    for(int i=1;i<=top;i++)\n        vis[tree_zj[i]]=1;//\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u7684\u70b9 \n    for(int i=1;i<=top;i++)\n        dfs(i,tree_zj[i],0);\n}\n//\u679a\u4e3e\u504f\u5fc3\u8ddd\u54af2333 \nint ECC(int x,int y){\n    int a=0;\n    for(int i=x;i<=y;i++)\n        a=max(far[i],a);\n    a=max(a,dis[start]-dis[tree_zj[x]]);\n    a=max(a,dis[tree_zj[y]]  -dis[end]);\n    return a;\n}\ninline void get_ans(){\n    int ans=0x7ffffff;\n    for(int i=1;i<=top;i++)\n        for(int j=i;j<=top;j++)\n        if(dis[tree_zj[i]]-dis[tree_zj[j]]<=s)\n            ans=min(ECC(i,j),ans);\n    printf(\"%d\\n\",ans);\n}\nint main(){\n    gsin();\n    get_ll();\n    get_len();\n    get_ans();\n}\n\n```",
        "postTime": 1508492079,
        "uid": 38348,
        "name": "Goes",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u7ec8\u4e8e\u8fc7\u4e86\u3002\u3002\u3002\n\n\u5728codevs\u4e0a\u8fc7\u4e86\uff0c\u56e0\u4e3a\u6539\u6570\u636e\u88ab\u5361\u572880\u5206\u597d\u4e45\u3002\u3002\u3002\n\n\u6211\u7684\u849f\u84bb\u601d\u8def\uff1a\n\n\u5b58\u4e24\u904d\u56fe\n\n\u4e00\u4e2a\u7528floyed\u8dd1\u4e00\u904d\n\n\u6c42\u51fa\u6700\u5927\u8ddd\u79bb\n\n\u6839\u636e\u6700\u5927\u8ddd\u79bb\u7528\u53e6\u4e00\u4e2a\u56fedfs\u6c42\u51fa\u76f4\u5f84\u4e0a\u7684\u70b9\n\n\u7136\u540e\u679a\u4e3e\u76f4\u5f84\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\n\n\u6c42\u51fa\u76f4\u5f84\u4e0a\u7684\u5176\u4ed6\u70b9\u7684\u6700\u5927\u504f\u5fc3\u8ddd\n\n\u8f93\u51fa\u6700\u5c0f\u7684\u5c31\u3002\u3002\u3002\u5f97\u4e8680\u5206\u3002\u3002\u3002\n\n\u56e0\u4e3a\u5176\u4ed6\u4e0d\u5728\u76f4\u5f84\u4e0a\u7684\u70b9\u6709\u53ef\u80fd\u5b58\u5728\u6700\u5c0f\u504f\u5fc3\u8ddd\uff08\u5f88\u660e\u663e\u5bf9\u4e0d\u5bf9\uff1f\u6211\u6ca1\u60f3\u5230\u3002\u3002\u679c\u7136\u662f\u6211\u592a\u83dc\u4e86\u3002\u3002\uff09\n\n\u6240\u4ee5\u5982\u679c\u6709\u5176\u4ed6\u70b9\n\n\u5c31\u8fde\u7740\u5176\u4ed6\u70b9\u4e00\u8d77\u6c42\u504f\u5fc3\u8ddd\n\n\u6ca1\u6709\u5c31\u5728\u76f4\u5f84\u4e0a\u6c42\n\nc++\u4ee3\u7801\uff1a\n\n```cpp\n# include<iostream>\n# include<cstring>\nusing namespace std;\nint a[301][301],b[301][301];\nint ans[301],d[301];\nint n,s,maxn,g,ecc=999999999;//\u504f\u5fc3\u8ddd\u6c42\u6700\u5c0f\nbool use[301],f,fff;\nvoid dfs(int x,int tot)\n{\n    if(tot==maxn)//\u5982\u679c\u8fd9\u6761\u8def\u5f84\u662f\u6700\u957f\u7684\uff0c\u5b83\u5c31\u662f\u76f4\u5f84\n    {\n        f=1;\n        return;\n    }\n    for(int i=1;i<=n;i++)\n      if(b[x][i]&&!use[i])\n      {\n          use[i]=1;\n          ans[++g]=i;//\u5b58\u8def\u5f84\u4e0a\u7684\u70b9\n          dfs(i,tot+b[x][i]);\n          if(f) return;\n          ans[g--]=0;\n          use[i]=0;\n      }\n}\nint main()\n{\n    cin>>n>>s;\n    for(int i=1;i<=n;i++)\n      {\n          for(int j=1;j<=n;j++)\n            a[i][j]=0x7fffffff/3;//floyed\u521d\u59cb\u5316\n          a[i][i]=0;\n      }\n    for(int i=1;i<=n-1;i++)\n      {\n          int x,y,z;\n          cin>>x>>y>>z;\n          a[x][y]=a[y][x]=z;\n          b[x][y]=b[y][x]=z;//\u5b58\u4e24\u904d\u56fe\n      }\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n        for(int k=1;k<=n;k++)\n          if(i!=k&&i!=j&&j!=k)\n          if(a[i][j]>a[i][k]+a[k][j])\n          a[i][j]=a[i][k]+a[k][j];\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n        if(a[i][j]!=0x7fffffff/3)\n        maxn=max(a[i][j],maxn);//\u6700\u5927\u503c\n    for(int i=1;i<=n;i++)\n      {\n          g=0;\n          memset(use,0,sizeof(use));\n          ans[++g]=i;\n          use[i]=1;\n          dfs(i,0);\n          if(f) break;//\u627e\u5230\u76f4\u5f84\u5c31\u9000\u51fa\n      }\n    //for(int i=1;i<=g;i++)\n      //cout<<ans[i]<<\" \";\n    memset(use,0,sizeof(use));\n    memset(d,9999999,sizeof(d));//\u5176\u4ed6\u70b9\u504f\u5fc3\u8ddd\u521d\u59cb\u5316\n    for(int i=1;i<=g;i++)\n      use[ans[i]]=1;\n    for(int i=1;i<=n;i++)\n      if(!use[i])\n      {\n          for(int j=1;j<=g;j++)\n          d[i]=min(d[i],a[i][ans[j]]);\n        fff=1;//\u6709\u5176\u4ed6\u70b9\n      }\n    for(int i=1;i<=g;i++)\n      for(int j=i;j<=g;j++)\n        {\n            if(a[ans[i]][ans[j]]<=s)\n            if(fff)\n            {\n                for(int k=1;k<=n;k++)\n                    if(!use[k])\n                    ecc=min(ecc,max(d[k],max(a[ans[1]][ans[i]],a[ans[j]][ans[g]])));\n//\u6c42\u504f\u5fc3\u8ddd    \n            }\n            else ecc=min(ecc,max(a[ans[1]][ans[i]],a[ans[j]][ans[g]]));\n        }\n    cout<<ecc;\n    return 0;\n}\n```",
        "postTime": 1506236895,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u6211\u5927\u6982\u662f\u4e2a\u50bb\u903c\u5427......\n\n\u5e76\u6ca1\u6709\u770b\u5230\u8fd9\u9898\u6240\u8bf4\u7684\u8def\u5f84\u4e00\u5b9a\u5728\u76f4\u5f84\u4e0a\n\n\u7136\u540e\u6253\u4e86n^3\uff0c236ms\u8fc7\u4e86...\n\n\u7136\u540e\u624d\u53d1\u73b0\u6709\u8fd9\u4e2a\u6761\u4ef6\uff0c\uff0c\uff0c\n\n\u6211\u5199\u7684\u662f\u6c42\u6240\u6709\u6811\u94fe\u7684\u6700\u5c0f\u503c\n\n\u5177\u4f53\u5c31\u662f\u4ee5\u6bcf\u4e00\u4e2a\u8282\u70b9\u5206\u522b\u4e3a\u6839\u5efa\u6811\n\n\u7136\u540e\u4ece\u6839\u5f00\u59cbDFS\uff0cDFS\u51fa\u4e00\u6bb5\u8def\u5f84\n\n\u5f53\u8fd9\u6bb5\u8def\u5f84\u65e0\u6cd5\u7ee7\u7eed\u5ef6\u4f38\u7684\u65f6\u5019\u626b\u6240\u6709\u70b9\u5230\u8fd9\u6761\u8def\u5f84\u7684\u6700\u77ed\u8ddd\u79bb\n\n\u8fd9\u91cc\u4e5f\u662f\u4ece\u6839\u5f00\u59cb\u6df1\u641c\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u4ed6\u6240\u5bfc\u5411\u7684\u6700\u8fd1\u7684\u94fe\u4e0a\u7684\u70b9\u4e00\u5b9a\u662f\u4e4b\u524d\u521a\u88ab\u641c\u5230\u7684\u4f4d\u7f6e\n\n\u90a3\u4e48\u8fd9\u6b65\u4e5f\u53ef\u4ee5\u4e09\u65b9\u6c42\u51fa\n\n\u4e5f\u5c31\u662f\u5168\u7b97\u6cd5\u662f\u4e09\u65b9\u7684......\n\n\n\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define M 701\n#define ll long long\n#define r read()\nusing namespace std;\nll read()\n{\n    ll x = 0; int zf = 1; char ch;\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\nint i,j,k,m,n,x,y,z,cnt;\nint F[M],L[M],N[M],a[M],c[M];\nint f[501][501],q[M],ans,minans;\nbool b[M],pd[M],b2[M];\nvoid add(int x,int y,int z)\n{\n    k++;a[k]=y;c[k]=z;\n    if(!F[x])F[x]=k;\n    else N[L[x]]=k;\n    L[x]=k;\n}\nvoid check(int x,int y)\n{\n    b2[x]=1;\n    if(!pd[x])ans=max(ans,f[x][y]);\n    for(int i=F[x];i;i=N[i])\n    if(!b2[a[i]])\n    {\n        if(pd[a[i]])check(a[i],a[i]);\n        else check(a[i],y);\n    }\n}\nvoid dfs(int x)\n{\n    if(f[i][x]>m)return;\n    b[x]=1;pd[x]=1;int t=0;\n    for(int i=F[x];i;i=N[i],t=1)if(!b[a[i]])dfs(a[i]);\n    if(t)\n    {\n        memset(b2,0,sizeof(b2));ans=0;check(i,i);\n        if(ans<minans||minans==0)minans=ans;\n    }\n    pd[x]=0;\n}\nint main()\n{\n    n=r;m=r;\n    for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n    if(i!=j)f[i][j]=233333;\n    for(i=1;i<n;i++)\n    {\n        x=r;y=r;z=r;\n        add(x,y,z);add(y,x,z);\n        f[x][y]=z;f[y][x]=z;\n    }\n    for(k=1;k<=n;k++)\n    for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n    f[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n    for(i=1;i<=n;i++)\n    {\n        memset(b,0,sizeof(b));\n        dfs(i);\n    }\n    cout<<minans;\n}\n\n```",
        "postTime": 1505477044,
        "uid": 6063,
        "name": "NephrenRuq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6700\u91cd\u8981\u7684\u5c31\u662f\u5206\u6790\u5224\u65ad\uff0c\u5148\u627e\u5230\u79bb\u6811\u7f51\u4e2d\u5fc3\u6700\u8fd1\u7684\u70b9\uff0c\u7136\u540e\u5f80\u4e24\u4e2a\u65b9\u5411\u6269\uff0c\u6bcf\u6b21\u627e\u4e00\u4e2a\u6700\u5927\u7684\uff0c\u627e\u5b8c\u540e\u628a\u5176\u4ed6\u7684\u90fd\u6c42\u4e2amax\u548cans\u53d6\u6700\u5927\u503c\uff08\u8d77\u70b9\u8981\u7279\u5224\uff0c\u4e2d\u9014\u6709\u5f88\u591a\u7ec6\u8282\uff09\u3001\u3001\n\n\u5982\u679c\u8fd9\u4e2a\u6700\u5927\u7684\u6d88\u8d39>\u5269\u4e0b\u7684s,\u5c31\u628a\u8fd9\u4e2a\u548cans\u6c42\u4e2amax\n\n\n\n\u7801\uff1a\n    \n    \n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n#include<cstring>\n#include<cmath>\n#define N 500009\nint tot=0,xia[N],hou[N],zhong[N],pre[N],i,n,s,x,y,max1,max2,s1,s2,dui[N],fu[N];\nint zhi[N],d1[N],d2[N],d[N],ans,z;\nbool vis[N];\nvoid jia(int x,int y,int z)\n{\n    hou[++tot]=xia[x],xia[x]=tot,zhi[tot]=z,zhong[tot]=y;\n}\nvoid jian(int x,int y,int z)\n{\n    jia(x,y,z);\n    jia(y,x,z);\n}\nvoid dfs1(int now,int fa)\n{\n    for(int i=xia[now];i!=-1;i=hou[i])\n    {\n    int nd=zhong[i];\n    if(nd==fa)continue;\n    d1[nd]=d1[now]+zhi[i];\n    dfs1(nd,now);            \n    }\n}\nvoid dfs2(int now,int fa)\n{\n    for(int i=xia[now];i!=-1;i=hou[i])\n    {\n    int nd=zhong[i];\n    if(nd==fa)continue;\n    d2[nd]=d2[now]+zhi[i];\n    dfs2(nd,now);            \n    }\n}\nint zhaodian()\n{\n    long long  biaozhun=1e17,lin,lin2=1e17;\n    for(i=1;i<=n;i++)\n    {\n        if(fabs(d1[i]-d2[i])<biaozhun)\n        {\n                   lin=i;\n                   lin2=d1[i]+d2[i];\n                   biaozhun=fabs(d1[i]-d2[i]);\n        }\n        else if(fabs(d1-d2)==biaozhun)\n        {\n            if(d1[i]+d2[i]<lin2)\n            {\n                lin=i;\n                lin2=d1[i]+d2[i];            \n            }\n        }\n    }    \n    return lin;\n}\nvoid dp(int now,int fa)\n{\n    d[now]=0,dui[now]=0;\n    fu[now]=fa;\n    for(int i=xia[now];i!=-1;i=hou[i])\n    {\n        int nd=zhong[i];\n        if(nd==fa)continue;\n        pre[nd]=i;\n        dp(nd,now);\n        if(d[now]<d[nd]+zhi[i])\n        {\n            d[now]=d[nd]+zhi[i];\n            dui[now]=nd;\n        }        \n    }\n}\nint  solve()\n{\n    ans=0;\n    max1=0,max2=0;\n    max1=dui[s1];\n    pre[0]=N;\n    vis[s1]=1;\n//cout<<pre[0]<<\"ooo\";\n   for(i=xia[s1];i!=-1;i=hou[i])\n   {\n       int nd=zhong[i];\n        if(nd==max1)continue;\n        //cout<<pre[max2];\n          if(d[nd]+zhi[i]>d[max2]+zhi[pre[max2]])\n          {  \n                 max2=nd;\n      }      \n   }\n   vis[max2]=1;\n   vis[max1]=1;\n    //cout<<\"ppp\";\n    for(i=xia[s1];i!=-1;i=hou[i])\n    {\n        int nd=zhong[i];\n        if(nd!=max1&&nd!=max2)\n        {\n            ans=max(ans,d[nd]+zhi[i]);\n        }    \n    }\n    while(1)\n    {\n    if((!max1)&&(!max2))return ans;\n        if(d[max1]+zhi[pre[max1]]>d[max2]+zhi[pre[max2]])\n    {   \n        if(zhi[pre[max1]]>s)\n        {\n            ans=max(ans,d[max1]+zhi[pre[max1]]);\n            return ans;    \n        }else\n          {\n              s-=(zhi[pre[max1]]);\n              for(i=xia[fu[max1]];i!=-1;i=hou[i])\n              {\n                  int nd=zhong[i];\n                  if(vis[nd]||nd==fu[fu[max1]])continue;\n                  ans=max(ans,d[nd]+zhi[i]);                  \n              }    \n              max1=dui[max1];\n              vis[max1]=1;          \n          }\n    }\n          else\n    {\n                  if(zhi[pre[max2]]>s)\n        {\n            ans=max(ans,d[max2]+zhi[pre[max2]]);\n            return ans;        \n        }else\n          {\n              s-=(zhi[pre[max2]]);\n              for(i=xia[fu[max2]];i!=-1;i=hou[i])\n              {\n                  int nd=zhong[i];\n                  if(vis[nd]||nd==fu[fu[max2]])continue;\n                  ans=max(ans,d[nd]+zhi[i]);                  \n              }    \n              max2=dui[max2];      \n              vis[max2]=1;    \n          }      \n    }\n    }\n}\nint main()\n{\n    memset(xia,-1,sizeof(xia));\n    scanf(\"%d%d\",&n,&s);\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        jian(x,y,z);        \n    }    \n dfs1(1,0);\n max1=0;max2=0;\n for(i=1;i<=n;i++)\n {\n     if(d1[i]>max1)\n     {\n         max1=d1[i];\n         max2=i;\n     }\n }\n s1=max2;\n d1[s1]=0;\n max1=0;max2=0;\n dfs1(s1,0);\n for(i=1;i<=n;i++)\n {\n     if(d1[i]>max1)\n     {\n         max1=d1[i];\n         max2=i;\n     }\n }\n s2=max2;\n// cout<<s1<<\" \"<<s2;\n max1=0;max2=0;\n dfs2(s2,0);\n   s1=zhaodian();\n   d1[s1]=0;\n   dp(s1,0);\n   cout<<solve();\n}\n\n```",
        "postTime": 1490078288,
        "uid": 20220,
        "name": "_HLLY_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u4e0d\u8bf4\u5e9f\u8bdd\u4e86\uff0c\u76f4\u63a5\u4e0a\u601d\u8def\u3002\u3002\u3002\n\n\u6211\u7684\u4ee3\u7801\u4e3b\u8981\u6709\u8fd9\u4e48\u51e0\u6b65\uff1a\n\n\uff081\uff09\u7b97\u51fa\u4efb\u610f\u4e24\u70b9\u7684\u8ddd\u79bb\uff0c\u4f7f\u7528Floyd\uff0c\u867d\u7136\u5f88\u6d6a\u8d39\uff0c\u4f46\u662f\u975e\u5e38\u65b9\u4fbf\u3002\u3002\u3002\n\n\uff082\uff09\u627e\u51fa\u6240\u6709\u7684\u76f4\u5f84\uff0c\u5e76\u6807\u8bb0\u6240\u6709\u5c5e\u4e8e\u76f4\u5f84\u7684\u70b9\uff0c\u65b9\u6cd5\u662f\u627e\u5230\u6240\u6709\u4e24\u4e2a\u70b9\u7684\u6700\u5927\u503c\uff0c\n\n\u7136\u540e\u628a\u6240\u6709\u7b49\u4e8e\u6700\u5927\u503c\u7684\u4e24\u4e2a\u70b9\u7684\u8def\u5f84\u4e2d\u7684\u6240\u6709\u70b9\u5168\u90e8\u6807\u8bb0\u3002\u3002\u3002\n\n\uff083\uff09\u679a\u4e3e\u4e00\u4e2a\u5c5e\u4e8e\u76f4\u5f84\u7684\u70b9\uff0c\u5f00\u59cb\u6269\u5c55\uff08\u6269\u5c55\u7684\u70b9\u4e5f\u90fd\u662f\u76f4\u5f84\u4e0a\u7684\u70b9\uff09\uff0c\u6bcf\u6269\u5c55\u4e00\n\n\u6b21\u5c31\u66f4\u65b0\u4e00\u6b21\u3002\u3002\u3002\n\n\u4e3b\u8981\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u5199\u51fa\u6765\u4ee3\u7801\u7684\u6548\u7387\u4e3aO\uff08n^3\uff09\uff0c\u4f46\u662f\u5e38\u6570\u8f83\u5927\uff0c\u6709\u4e00\u4e2a\u70b9\u8fbe\u5230\u4e86\u4e5d\u767e\u4e94\u5341\u591ams\uff0c\u4f46\u8fd8\u662f\u8fc7\u4e86\uff0c\u5177\u4f53\u53c2\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<vector>\n#include<cstdlib>\nusing namespace std;\nint n,s,p[302][302],f1[302][302],p1[302],f2[302],ans=1e9;\nbool f3[302],fl[302];\nvector<int>g[302];\nvoid ccj(int x,int y,int z){\n    fl[y]=1;p1[z]=y;\n    if (y==x)\n    {\n        for (int i=0;i<=z;i++)\n        f3[p1[i]]=1;\n        return;\n    }\n    for (int i=0;i<g[y].size();i++)\n    if (!fl[g[y][i]])\n    ccj(x,g[y][i],z+1);\n}\nvoid dfs(int x,int y){\n    fl[x]=1;\n    int hh[302],k=0;\n    for (int i=1;i<=n;i++)\n    hh[i]=f2[i];\n    for (int i=1;i<=n;i++)\n    {\n        if (f2[i]==-1)f2[i]=f1[i][x];\n        else f2[i]=min(f2[i],f1[i][x]);\n        k=max(k,f2[i]);\n    }\n    ans=min(ans,k);\n    for (int i=0;i<g[x].size();i++)\n    if (!fl[g[x][i]] && y+p[x][g[x][i]]<=s && f3[g[x][i]])\n    dfs(g[x][i],y+p[x][g[x][i]]);\n    for (int i=1;i<=n;i++)\n    f2[i]=hh[i];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&s);\n    for (int i=1;i<=n;i++)\n    for (int j=1;j<=n;j++)\n    if (i!=j)f1[i][j]=p[i][j]=1e9;\n    for (int i=1;i<n;i++)\n    {\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        p[u][v]=p[v][u]=f1[u][v]=f1[v][u]=w;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    for (int k=1;k<=n;k++)\n    for (int i=1;i<=n;i++)\n    for (int j=1;j<=n;j++)\n    f1[i][j]=min(f1[i][j],f1[i][k]+f1[k][j]);//\uff081\uff09\u90e8\u5206\n    int Max=0;\n    for (int i=1;i<=n;i++)\n    for (int j=1;j<=n;j++)\n    Max=max(Max,f1[i][j]);\n    for (int i=1;i<=n;i++)\n    for (int j=1;j<=n;j++)\n    if (f1[i][j]==Max)\n    {\n        memset(fl,0,sizeof(fl));\n        ccj(j,i,0);\n```\n}//\uff082\uff09\u90e8\u5206\n```cpp\n    for (int i=1;i<=n;i++)\n    {\n        memset(f2,-1,sizeof(f2));\n        memset(fl,0,sizeof(fl));\n        if (f3[i])dfs(i,0);\n```\n}//\uff083\uff09\u90e8\u5206\n    printf(\"%d\",ans);//\u8f93\u51fa\u90e8\u5206\n\n    return 0;\n\n}",
        "postTime": 1479991435,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "##\u679a\u4e3e\n\n###1.Floyd\u6c42\u51fa\u4efb\u610f\u4e24\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n\n//\u53cd\u6b63\u6700\u591a\u624d300\u4e2a\u70b9\n\n###2.\u627e\u51fa\u76f4\u5f84\n\n\u663e\u7136\u53ea\u9700\u8981\u6c42\u51fa\u4efb\u610f\u4e00\u6761\u76f4\u5f84\u5373\u53ef\u4e86,\u7136\u540e\u6211\u662f\u7528dfs\u7684\u65b9\u6cd5\u5b58\u50a8\u4e0b\u4e00\u6761\u76f4\u5f84\n\n###3.\u679a\u4e3e\u76f4\u5f84\u4e0a\u7684\u6bcf\u4e00\u6761\u5b50\u94fe,\u8ba1\u7b97\u51fa\u6b64\u65f6\u7684\u504f\u5fc3\u8ddd\u5e76\u66f4\u65b0ans\n\n(\u611f\u89c9\u8fd9\u9898\u4f5c\u4e3aNOIP2007\u662f\u4e0d\u662f\u7565\u5fae\u7b80\u5355\u4e86\u70b9= =\u4e3b\u8981\u662f\u6570\u636e\u8303\u56f4\u592a\u5c0f\u4e86 \u66b4\u529b\u65e0\u538b\u529b)\n\n\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cctype>\n#include <vector>\n#define MAXN 305\n#define INF 0x3f3f3f3f\n#define max(a,b) (a)>(b)?(a):(b) \n#define min(a,b) (a)<(b)?(a):(b)\nusing namespace std;\nint n,s;\nvector<int> e[MAXN];//\u90bb\u63a5\u8868\u5b58\u50a8\u56fe\nint dist[MAXN][MAXN];//\u8ddd\u79bb\nvector<int> d;//\u6811\u7f51\u7684\u4e00\u6761\u76f4\u5f84\u6240\u7ecf\u8fc7\u7684\u70b9\u7684\u96c6\u5408\nint ds,dt;//\u76f4\u5f84\u7684\u8d77\u70b9 \u7ec8\u70b9\nbool flag;//\u6807\u8bb0dfs\u662f\u5426\u5df2\u627e\u5230\u76f4\u5f84\nint maxd,mind;\nint ans=INF;\ninline int getint()\n{\n    int x=0;\n    char c=getchar();\n    while(c<'0' || c>'9')c=getchar();\n    while(c>='0' && c<='9')\n    {\n        x=x*10+c-48;\n        c=getchar();\n    }\n    return x;\n}\nvoid dfs(int last,int now)\n{\n    if(now==dt)flag=true;\n    for(int i=0; i<e[now].size(); ++i)\n    {\n        int next=e[now][i];\n        if(next!=last)//\u9632\u6b62\u5f80\u56de\u627e \u65e0\u7a77\u9012\u5f52 \n        {\n            d.push_back(next);\n            dfs(now,next);\n            if(!flag)d.pop_back();\n            else return;\n        }\n    }\n}\nvoid input()\n{\n    n=getint(),s=getint();\n    memset(dist,INF,sizeof(dist));\n    for(int i=1; i<=n; ++i)dist[i][i]=0;\n    for(int i=1; i<n; ++i)\n    {\n        int x=getint(),y=getint(),z=getint();\n        e[x].push_back(y),e[y].push_back(x);\n        dist[x][y]=dist[y][x]=z;\n    }\n}\nvoid Floyd()\n{\n    for(int k=1; k<=n; ++k)\n        for(int i=1; i<=n; ++i)\n            for(int j=1; j<=n; ++j)\n                dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j]);\n}\nvoid find()\n{\n    for(int i=1; i<=n; ++i)\n        for(int j=i+1; j<=n; ++j)\n            if(dist[i][j]!=INF && dist[i][j]>maxd)\n            {\n                ds=i;\n                dt=j;\n                maxd=dist[i][j];\n            }\n    d.push_back(ds);\n\n}\nvoid solve()\n{\n    for(int i=0; i<d.size(); ++i)\n        for(int j=i; j<d.size(); ++j)\n        {\n            int sum=maxd=0;\n            for(int k=i; k<j; ++k)sum+=dist[d[k]][d[k+1]];\n            if(sum>s)break;\n            for(int k=1; k<=n; ++k)\n            {\n                mind=INF;\n                for(int l=i; l<=j; ++l)\n                    mind=min(mind,dist[k][d[l]]);\n                maxd=max(mind,maxd);\n            }\n            if(maxd)ans=min(ans,maxd);\n        }\n    cout<<ans;\n}\nint main()\n{\n    input();//\u8f93\u5165 & \u521d\u59cb\u5316 \n    Floyd();//Floyd\u6c42\u6700\u77ed\u8def \n    find();//\u627e\u5230\u4efb\u610f\u4e00\u6761\u76f4\u5f84 \n    dfs(-1,ds);//dfs\u5c06\u76f4\u5f84\u4e0a\u7684\u70b9\u5b58\u50a8\u4e0b\u6765 \n    solve();//\u679a\u4e3e\u66f4\u65b0ans \n    return 0;\n}\n```",
        "postTime": 1478077217,
        "uid": 19370,
        "name": "ShaunWang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u9898\u76ee\u7ed9\u51fa\u4e86\u5f88\u591a\u6982\u5ff5\uff0c\u8fd9\u91cc\u91cd\u65b0\u6574\u7406\u4e00\u4e0b\uff1a\n\n{\n\u8def\u5f84\uff1a\u4eceA\u5230B\u70b9\u7ecf\u8fc7\u7684\u7684\u8fb9\u7ec4\u6210\uff0c\u8def\u5f84\u957f\u5ea6\u4e3a\u5404\u8fb9\u7684\u6743\u503c\u7684\u548c\uff1b\n\n\u6811\u7f51\u7684\u76f4\u5f84\uff1a\u56fe\u4e2d\u6700\u957f\u7684\u8def\u5f84\n\n\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\uff1a\u70b9v\u5230\u8def\u5f84F\u7684\u8ddd\u79bb=min( d\uff08v ,u\uff09,u\u2208F)\uff1b\n\n\u504f\u5fc3\u8ddd\uff1a\u56fe\u4e2d\u8ddd\u8def\u5f84F\u6700\u8fdc\u7684\u8282\u70b9\u5230\u8def\u5f84F\u7684\u8ddd\u79bb\uff08\u4e00\u5b9a\u8981\u6f84\u6e05\u8fd9\u4e2a\u6982\u5ff5\uff09\n\n}\n\u6982\u5ff5\u6f84\u6e05\u540e\uff0c\u9898\u76ee\u8981\u6c42\u51fa\u4e00\u4e2a\u5728\u76f4\u5f84\u4e0a\u7684\u8def\u5f84F\uff0c\u5176\u957f\u5ea6\u4e0d\u8d85\u8fc7S\uff0c\u4ee4\u5230\u5176\u504f\u5fc3\u8ddd\u6700\u5c0f\u3002\n\n\u9898\u76ee\u8981\u6211\u4eec\u8f93\u51fa\u504f\u5fc3\u8ddd\u7684\u6700\u5c0f\u503c\u3002\n\n\u9898\u76ee\u8bf4\u4e86\u8fd9\u662f\u4e00\u4e2a\u65e0\u5708\u4e14\u8fde\u901a\u7684\u65e0\u5411\u56fe\uff0c\u663e\u7136\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u53ea\u4e0d\u8fc7\u6ca1\u6709\u89c4\u5b9a\u6839\u8282\u70b9\u800c\u5df2\uff0c\u56e0\u6b64\u6211\u4eec\u60f3\u5230\uff0c\u5728\u6811\u4e2d\uff0c\u6700\u77ed\u8def\u7b49\u4e8e\u6700\u957f\u8def\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528floyd\u7b97\u6cd5\u6c42\u51fa\u5404\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u800c\u4e14\u8fd8\u8981\u8bb0\u5f55\u4e2d\u95f4\u8282\u70b9\uff0c\u4e2d\u95f4\u8282\u70b9\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4mid[][]\u6765\u8868\u793a:\n\nif g[I, K] + g[K, J]<g[I, J] then \n\n     g[I, J]=g[I,K]+g[K, J]\uff1b\n\n     mid[I, J]=K\uff1b    \n\n\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u627e\u5230\u76f4\u5f84\u3002{\u9898\u76ee\u8bf4\u76f4\u5f84\u4e0d\u552f\u4e00\uff0c\u4f46\u662f\u53ef\u4ee5\u8bc1\u660e\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u5176\u4e2d\u4e00\u6761\u76f4\u5f84\u5c31\u591f\u4e86(\u8bc1\u660e\u7565\uff0cms\u8bb8\u591a\u5927\u725b\u7684\u9898\u89e3\u6709\u8bc1\u660e)\u3002}\n\n\u627e\u5230\u76f4\u5f84\u540e\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u76f4\u5f84\u4e0a\u7684\u8282\u70b9\uff0c\u8bb0\u5f55\u4e86\u76f4\u5f84\u4e0a\u7684\u8282\u70b9\u4e4b\u540e\uff0c\u6211\u4eec\u4fbf\u5f00\u59cb\u679a\u4e3e\u8def\u5f84F\uff0c\u679a\u4e3e\u7684\u65b9\u6cd5\u5c31\u662f\u679a\u4e3e\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u7136\u540e\u53c8\u679a\u4e3e\u56fe\u91cc\u9762\u7684\u5176\u4ed6\u8282\u70b9\uff0c\u8ba1\u7b97\u5f53\u524d\u8def\u5f84F\u7684\u504f\u5fc3\u8ddd\uff0c\u82e5\u5f53\u524d\u8def\u5f84F\u7684\u504f\u5fc3\u8ddd\u5c0f\u4e8e\u76ee\u524d\u7684\u6700\u4f18\u503c\uff0c\u5c31\u66ff\u6362\u3002\n\n\u8fd9\u6837\u6b64\u9898\u5c31\u53ef\u4ee5\u5706\u6ee1\u89e3\u51b3\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662fO(n^3).\n",
        "postTime": 1380713859,
        "uid": 1187,
        "name": "AKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u9898\u76ee\u975e\u5e38\u957f\uff0c\u5404\u79cd\u6982\u5ff5\u4e5f\u975e\u5e38\u6742\u4e71\uff0c\u6211\u4eec\u6309\u7167\u9898\u76ee\u7ed9\u7684\u4e00\u6761\u4e00\u6761\u7684\u6c42\uff0c\u9996\u5148\u5982\u4f55\n\u6c42\u51fa\u76f4\u5f84\u5462\uff1f\n\n\u56e0\u4e3a\u8981\u6c42\u6700\u8fdc\u7684\u4e24\u4e2a\u70b9\uff0c\u6240\u4ee5\u80af\u5b9a\u8981\u6c42\u51fa\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u7528 SPFA,\u4e0d\n\u8fc7\u672c\u9898\u6570\u636e\u8f83\u5c11\uff0c\u8003\u8651\u5230 SPFA \u7b97\u6cd5\u6bd4\u8f83\u590d\u6742\u6240\u4ee5\u7528 FLOYD \u7b97\u6cd5\u6c42\uff0c\u6c42\u51fa\u4e86\u76f4\u5f84\n\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u8981\u6c42\u5728\u76f4\u5f84\u4e0a\u6ee1\u8db3\u8981\u6c42\u7684\u7ebf\u6bb5\uff0c\u600e\u4e48\u8981\u624d\u80fd\u77e5\u9053\u4e00\u4e2a\u70b9 i \u662f\u5426\u5728\u76f4\n\u5f84 l-r \u4e0a\u5462\uff1f\u8bbe d[i][j]\u4e3a i,j \u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u90a3\u4e48\u5982\u679c d[l][i] + d[i][r] == d[l][r],\u90a3\u4e48\u8fd9\u4e2a\n\u70b9 i \u80af\u5b9a\u5728\u76f4\u5f84 l-r \u4e0a.\u5176\u5b9e\u6c42\u76f4\u5f84\u8fd8\u6709\u4e00\u4e2a\u529e\u6cd5\uff0c\u90a3\u5c31\u662f\u53d6\u4e00\u4e2a\u70b9 u,dfs \u6c42\u51fa u \u7684\n\u6700\u8fdc\u70b9 l,\u518d dfs \u6c42\u51fa l \u7684\u6700\u8fdc\u70b9 r,\u90a3\u4e48 l-r \u5c31\u662f\u4e00\u6761\u76f4\u5f84\u3002\n\n\u57fa\u4e8e\u8fd9\u79cd\u529e\u6cd5\uff0c\u6211\u4eec\u77e5\u9053\u76f4\u5f84\u4e0a\u7684\u70b9\u4e00\u5b9a\u662f\u79bb\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8ddd\u79bb\u6700\u8fdc\uff0c\u5426\u5219\n\u8fd9\u5c31\u4e0d\u662f\u4e00\u6761\u76f4\u5f84.\u6211\u4eec\u679a\u4e3e\u7684\u662f\u4e00\u6761\u7ebf\u6bb5\uff0c\u5982\u679c\u76f4\u5f84\u957f\u5ea6>s,\u504f\u5fc3\u8ddd\u4e00\u5b9a\u662f\u7ebf\u6bb5\n\u4e0a\u7684\u67d0\u4e2a\u7aef\u70b9\u5230\u76f4\u5f84\u4e0a\u67d0\u4e2a\u7aef\u70b9\u7684\u6700\u5c0f\u503c\u4e2d\u7684\u6700\u5927\u503c,\u5426\u5219\u6709\u53ef\u80fd\u9009\u51fa\u6765\u7684\u8def\u5f84\n\u8986\u76d6\u4e86\u6574\u4e2a\u76f4\u5f84\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u7b54\u6848\u5c31\u4f1a\u662f 0\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5728\u76f4\u5f84\u5916\u627e\u4e00\u4e2a\u70b9\n\u6c42\u6700\u5927\u8ddd\u79bb\u5c31\u597d\u4e86\uff0c\u4e0d\u65ad\u66f4\u65b0\u6700\u4f18\u503c\uff0c\u5c31\u80fd\u591f\u6c42\u51fa\u504f\u5fc3\u8ddd\u4e86.\u56e0\u4e3a\u76f4\u5f84\u6709\u5f88\u591a\u6761\uff0c\n\u800c\u504f\u5fc3\u8ddd\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6c42\u4e00\u6761\u76f4\u5f84\u5373\u53ef\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint n,s,ans;\nint dis[310][310];\nbool vis[310][310];\nint main(){\n\tscanf(\"%d%d\",&n,&s);\n\tfor(int i=1;i<=n;i++)//\u9884\u5904\u7406\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(i!=j)dis[i][j]=1e9;\n\tfor(int i=0; i<n-1;i++){//\u8f93\u5165\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tdis[v][u]=dis[u][v]=w;\n\t}\n\tfor(int k=1;k<=n;k++)//FLOYD\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(dis[i][k]<1e9&&dis[k][j]<1e9)\n\t\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n\tint maxi=0,l,r;\n\tfor(int i=1;i<=n;i++)//\u6c42\u76f4\u5f84\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(dis[i][j]!=1e9&&dis[i][j]>maxi){\n\t\t\t\tmaxi=dis[i][j];\n\t\t\t\tl=i,r=j;//\u76f4\u5f84\u7684\u7aef\u70b9\n\t\t\t}\n\tans=1e9;\n\tint ecc=0;\n\tif(dis[l][r]<=s){//\u5982\u679c\u76f4\u5f84\u5c0f\u4e8e\u9650\u5b9a\uff0c\u5c31\u76f4\u63a5\u7b97\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(dis[l][i]+dis[i][r]==dis[l][r])\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\tif(dis[l][j]+dis[j][r]!=dis[l][r])\n\t\t\t\t\t\tans=min(dis[i][j],ans);\n\t\tprintf(\"%d\\n\",ans);\n\t} \n\telse{\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(dis[l][i]+dis[i][r]==dis[l][r])//\u5982\u679ci\u5728\u76f4\u5f84\u4e0a\n\t\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\t\tif(dis[l][j]+dis[j][r]==dis[l][r]){//\u800c\u4e14j\u5728\u76f4\u5f84\u4e0a\n\t\t\t\t\t\tif(dis[i][j]>s)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tecc=max(min(dis[i][l],dis[j][l]),min(dis[r][i],dis[r][j]));//\u7b97\u76f4\u5f84\n\t\t\t\t\t\tans=min(ans,ecc);//\u53d6\u6700\u5c0f\n\t\t\t\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\u64b0\u6587\u4e0d\u6613\uff0c\u4e0d\u559c\u52ff\u55b7",
        "postTime": 1570348210,
        "uid": 168385,
        "name": "gwx123456",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "- **NOIP 2007 \u63d0\u9ad8\u7ec4 \u7b2c\u56db\u9898**\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u8bbe $T=(V, E, W)$ \u662f\u4e00\u4e2a\u65e0\u5708\u4e14\u8fde\u901a\u7684\u65e0\u5411\u56fe\uff08\u4e5f\u79f0\u4e3a\u65e0\u6839\u6811\uff09\uff0c\u6bcf\u6761\u8fb9\u5230\u6709\u6b63\u6574\u6570\u7684\u6743\uff0c\u6211\u4eec\u79f0T\u4e3a\u6811\u7f51\uff08treebetwork\uff09\uff0c\u5176\u4e2d $V$ \uff0c $E$ \u5206\u522b\u8868\u793a\u7ed3\u70b9\u4e0e\u8fb9\u7684\u96c6\u5408\uff0c $W$ \u8868\u793a\u5404\u8fb9\u957f\u5ea6\u7684\u96c6\u5408\uff0c\u5e76\u8bbe $T$ \u6709 $n$ \u4e2a\u7ed3\u70b9\u3002\n\n**\u8def\u5f84**\uff1a\u6811\u7f51\u4e2d\u4efb\u4f55\u4e24\u7ed3\u70b9 $a$\uff0c$b$ \u90fd\u5b58\u5728\u552f\u4e00\u7684\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff0c\u7528 $d(a, b)$ \u8868\u793a\u4ee5 $a, b$ \u4e3a\u7aef\u70b9\u7684\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u5b83\u662f\u8be5\u8def\u5f84\u4e0a\u5404\u8fb9\u957f\u5ea6\u4e4b\u548c\u3002\u6211\u4eec\u79f0 $d(a, b)$ \u4e3a $a, b$ \u4e24\u7ed3\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\n\n$$D(v, P)=min\\{d(v, u), u\\text{\u4e3a\u8def\u5f84P\u4e0a\u7684\u7ed3\u70b9}\\}$$\u3002\n\n**\u6811\u7f51\u7684\u76f4\u5f84**\uff1a\u6811\u7f51\u4e2d\u6700\u957f\u7684\u8def\u5f84\u6210\u4e3a\u6811\u7f51\u7684\u76f4\u5f84\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6811\u7f51 $T$ \uff0c\u76f4\u5f84\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u4f46\u53ef\u4ee5\u8bc1\u660e\uff1a\u5404\u76f4\u5f84\u7684\u4e2d\u70b9\uff08\u4e0d\u4e00\u5b9a\u6070\u597d\u662f\u67d0\u4e2a\u7ed3\u70b9\uff0c\u53ef\u80fd\u5728\u67d0\u6761\u8fb9\u7684\u5185\u90e8\uff09\u662f\u552f\u4e00\u7684\uff0c\u6211\u4eec\u79f0\u8be5\u70b9\u4e3a\u6811\u7f51\u7684\u4e2d\u5fc3\u3002\n\n**\u504f\u5fc3\u8ddd $ECC(F)$** \uff1a\u6811\u7f51 $T$ \u4e2d\u8ddd\u8def\u5f84 $F$ \u6700\u8fdc\u7684\u7ed3\u70b9\u5230\u8def\u5f84 $F$ \u7684\u8ddd\u79bb\uff0c\u5373\n\n$$ECC(F)=max{d(v, F),v \u2208 V}$$\n\n**\u4efb\u52a1**\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6811\u7f51 $T=(V, E, W)$ \u548c\u975e\u8d1f\u6574\u6570 $s$ \uff0c\u6c42\u4e00\u4e2a\u8def\u5f84\u3000$F$ \uff0c\u4ed6\u662f\u67d0\u76f4\u5f84\u4e0a\u7684\u4e00\u6bb5\u8def\u5f84\uff08\u8be5\u8def\u5f84\u4e24\u7aef\u5747\u4e3a\u6811\u7f51\u4e2d\u7684\u7ed3\u70b9\uff09\uff0c\u5176\u957f\u5ea6\u4e0d\u8d85\u8fc7 $s$\uff08\u53ef\u4ee5\u7b49\u4e8e $s$ \uff09\uff0c\u4f7f\u504f\u5fc3\u8ddd $ECC(F)$ \u6700\u5c0f\u3002\u6211\u4eec\u79f0\u8fd9\u4e2a\u8def\u5f84\u4e3a\u6811\u7f51 $T=(V, E, W$ )\u7684\u6838\uff08Core\uff09\u3002\u5fc5\u8981\u65f6\uff0c $F$ \u53ef\u4ee5\u9000\u5316\u4e3a\u67d0\u4e2a\u7ed3\u70b9\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u4e0a\u8ff0\u5b9a\u4e49\u4e0b\uff0c\u6838\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\uff0c\u4f46\u6700\u5c0f\u504f\u5fc3\u8ddd\u662f\u552f\u4e00\u7684\u3002\n\n\u4e0b\u9762\u7684\u56fe\u7ed9\u51fa\u4e86\u6811\u7f51\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u56fe\u4e2d\uff0c $A-B$ \u4e0e $A-C$ \u662f\u4e24\u6761\u76f4\u5f84\uff0c\u957f\u5ea6\u5747\u4e3a ``20``\u3002\u70b9 $W$\u662f\u6811\u7f51\u7684\u4e2d\u5fc3\uff0c$EF$ \u8fb9\u7684\u957f\u5ea6\u4e3a ``5``\u3002\u5982\u679c\u6307\u5b9a $s=11$\uff0c\u5219\u6811\u7f51\u7684\u6838\u4e3a\u8def\u5f84 $DEFG$\uff08\u4e5f\u53ef\u4ee5\u53d6\u4e3a\u8def\u5f84 $DEF$\uff09\uff0c\u504f\u5fc3\u8ddd\u4e3a``8``\u3002\u5982\u679c\u6307\u5b9a$s=0$\uff08\u6216$s=1$\u3001$s=2$\uff09\uff0c\u5219\u6811\u7f51\u7684\u6838\u4e3a\u7ed3\u70b9 $F$ \uff0c\u504f\u5fc3\u8ddd\u4e3a``12``\u3002\n\n\n![](https://cdn.luogu.com.cn/upload/pic/20270.png)\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u8f93\u5165\u6587\u4ef6``core.in``\u5305\u542b $n$ \u884c\uff1a\n\n\u7b2c $1$ \u884c\uff0c\u4e24\u4e2a\u6b63\u6574\u6570 $n$ \u548c $s$ \uff0c\u4e2d\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u5176\u4e2d $n$ \u4e3a\u6811\u7f51\u7ed3\u70b9\u7684\u4e2a\u6570\uff0c $s$ \u4e3a\u6811\u7f51\u7684\u6838\u7684\u957f\u5ea6\u7684\u4e0a\u754c\u3002\u8bbe\u7ed3\u70b9\u7f16\u53f7\u4ee5\u6b64\u4e3a $1,2,\u2026\u2026,n$ \u3002\n\n\u4ece\u7b2c $2$ \u884c\u5230\u7b2c $n$ \u884c\uff0c\u6bcf\u884c\u7ed9\u51fa $3$ \u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6b63\u6574\u6570\uff0c\u4f9d\u6b21\u8868\u793a\u6bcf\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7f16\u53f7\u548c\u957f\u5ea6\u3002\u4f8b\u5982\uff0c\u201c``2 4 7``\u201d\u8868\u793a\u8fde\u63a5\u7ed3\u70b9 $2$ \u4e0e $4$ \u7684\u8fb9\u7684\u957f\u5ea6\u4e3a $7$ \u3002\n\n\u6240\u7ed9\u7684\u6570\u636e\u90fd\u662f\u4e89\u53d6\u7684\uff0c\u4e0d\u5fc5\u68c0\u9a8c\u3002\n\n\n- \u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u51fa\u6587\u4ef6core.out\u53ea\u6709\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4e3a\u6307\u5b9a\u610f\u4e49\u4e0b\u7684\u6700\u5c0f\u504f\u5fc3\u8ddd\u3002\n\n\n## \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n- \u8f93\u5165\u6837\u4f8b\n\n```\n\u3010\u8f93\u5165\u6837\u4f8b1\u3011\n5 2\n1 2 5\n2 3 2\n2 4 4\n2 5 3\n\u3010\u8f93\u5165\u6837\u4f8b2\u3011\n8 6\n1 3 2\n2 3 2 \n3 4 6\n4 5 3\n4 6 4\n4 7 2\n7 8 3\n```\n\n- \u8f93\u51fa\u6837\u4f8b\n\n```\n\u3010\u8f93\u51fa\u6837\u4f8b1\u3011\n5\n\u3010\u8f93\u51fa\u6837\u4f8b2\u3011\n5\n```\n\n## \u8bf4\u660e\n\n$40\\%$\u7684\u6570\u636e\u6ee1\u8db3\uff1a$5 \\leq n \\leq 15$\uff1b\n\n$70\\%$\u7684\u6570\u636e\u6ee1\u8db3\uff1a$5 \\leq n \\leq 80$\uff1b\n\n$100\\%$\u7684\u6570\u636e\u6ee1\u8db3\uff1a$5 \\leq n \\leq 300,0 \\leq s \\leq 1000$\u3002\u8fb9\u957f\u5ea6\u4e3a\u4e0d\u8d85\u8fc7 $1000$ \u7684\u6b63\u6574\u6570\u3002\n\n## \u7b80\u8981\u9898\u610f\n\n> \u7ed9\u5b9a\u4e00\u68f5\u5e26\u8fb9\u6743\u65e0\u6839\u6811\uff0c\u5728\u5176\u76f4\u5f84\u4e0a\u6c42\u51fa\u4e00\u6bb5\u957f\u5ea6\u4e0d\u8d85\u8fc7 $s$ \u7684\u8def\u5f84 $F$\uff0c\u4f7f\u5f97\u79bb\u8def\u5f84\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u5230\u8def\u5f84\u7684\u8ddd\u79bb\u6700\u77ed\u3002\n\n## \u9898\u89e3\n\n### \u4e00\u4e9b\u5b9a\u4e49\n\n$f_{i,j}$\uff1a\u7ed3\u70b9 $i$ \u5230\u7ed3\u70b9 $j$ \u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\n### \u524d\u7f6e\u829d\u58eb\n\n- **\u6811\u7684\u76f4\u5f84**\u600e\u4e48\u6c42\uff1f\n\n\u5bf9\u4e8e\u4e00\u68f5\u6811 $T$ \u53ef\u4ee5\u53d6\u5b83\u7684\u6839\u8282\u70b9\uff08\u5176\u4ed6\u8282\u70b9\u4e5f\u53ef\u4ee5\uff0c\u9898\u4e2d\u7684\u6839\u8282\u70b9\u4e3a 1\uff09\uff0c\u7136\u540e\u627e\u5230\u4e00\u4e2a\u79bb\u5b83\u6700\u8fdc\u7684\u7ed3\u70b9 $x$ \uff0c\u5373\u6ee1\u8db3 $f_{1,x}=\\max_{i=1}^n f_{1,i}$\u3002\n\n\u7136\u540e\u627e\u5230\u79bb $x$ \u6700\u8fdc\u7684\u70b9 $y$ \uff0c\u5b83\u4eec\u5c31\u662f\u8fd9\u68f5\u6811 $T$ \u4e2d\u7684\u4e00\u6761\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\n\n- \u600e\u4e48\u5feb\u901f\u6c42**\u591a\u6e90\u6700\u77ed\u8def**\uff1f\n\nFloyd\uff01\n\n### \u6b63\u6587\n\n\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e $F$ \u7684\u4e24\u4e2a\u7aef\u70b9 $i$ \u548c $j$ \u3002\u7136\u540e\u641e\u4e00\u4e0b\u7b54\u6848\u5c31\u53ef\u4ee5\u8fa3\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$ \u3002\n\n\u600e\u4e48\u505a\uff1f\u5bf9\u4e8e\u6811 $T$ \u4e2d\u7684\u4e00\u6761\u7aef\u70b9\u4e3a $i$ \u548c $j$ \u7684\u8def\u5f84 $F$\uff0c\u5bf9\u4e8e\u6811\u7f51 $T$ \u4e2d\u7684\u4e00\u4e2a\u70b9 $k$ \uff0c$dis(k,F)=(f_{i,k}+f_{k,j}-f{i,j})/2$\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u641e\u5c31\u53ef\u4ee5\u8fa3\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\u770b\u56fe\uff01\n\n### \u4e3e\u4e2a\u6817\u5b50\n\n\u9996\u5148\u6211\u4eec\u60f3\u4e00\u4e0b\u8fd9\u4e2a\u67ff\u5b50\u662f\u600e\u4e48\u5f97\u5230\u7684\u3002\u6211\u4eec\u8bd5\u7740\u7528 $f$ \u6570\u7ec4\u6765\u8868\u793a\u4e00\u4e0b $dis(k,F)$ \u3002\n\n\u9996\u5148\u6211\u4eec\u5047\u8bbe $k$ \u70b9\u79bb\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9 $l$ \u6700\u8fd1\uff0c\u90a3\u4e48 $l$ \u7684\u53d6\u503c\u53ea\u6709 3 \u7c7b\u60c5\u51b5\u3002\n\n1. \u5728 $F$ \u7684\u4e00\u4e2a\u7aef\u70b9 $i$ \u4e0a\u3002\n\n2. \u5728 $F$ \u7684\u53e6\u4e00\u4e2a\u7aef\u70b9 $j$ \u4e0a\u3002\n\n3. \u5728 \u8def\u5f84 $F$ \u4e0a\uff08\u7aef\u70b9\u9664\u5916\uff09\u3002\n\n\u753b\u4e00\u4e0b\u56fe\u60a8\u5927\u6982\u5c31\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u5566\uff01\n\n(1) ![](https://i.loli.net/2018/12/31/5c2a1a6ac9709.png)\n\n(2) ![](https://i.loli.net/2018/12/31/5c2a1a6acbabb.png)\n\n(3) ![](https://i.loli.net/2018/12/31/5c2a1a6ad836d.png)\n\n## \u4ee3\u7801\n\n```\n#include <cstdio>\n#include <cstring>\nint ans=999999999,n=0,s=0;\nint f[301][301];\nbool flag=false;\nint min(int x,int y)\n{\n    return x<y?x:y;\n}\nint max(int x,int y)\n{\n    return x>y?x:y;\n}\nint main()\n{\n    memset(f,127/3,sizeof(f));\n    scanf(\"%d %d\",&n,&s);\n    for(int i=1;i<=n-1;i++)\n    {\n        int x=0,y=0,c=0;\n        scanf(\"%d %d %d\",&x,&y,&c);\n        f[x][y]=f[y][x]=c;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        f[i][i]=0;\n    }\n    for(int k=1;k<=n;k++)\n    {\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                f[i][j]=min(f[i][j],f[i][k]+f[k][j]);\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=i;j++)\n        {\n            if(f[i][j]<=s)\n            {\n                int da=0;\n                for(int k=1;k<=n;k++)\n                {\n                    da=max(da,(f[i][k]+f[k][j]-f[i][j])/2);\n                }\n                ans=min(ans,da);\n            }\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n## \u53c2\u8003\u8d44\u6599\n\n- ``https://sparky.blog.luogu.org/solution-p1099`` \u3002",
        "postTime": 1546178687,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "\u8bf4\u8d77\u6765\u8fd9\u9053\u9898\u6807\u7b97\u8c8c\u4f3c\u662fO(n) \u7684\u3002\u3002\u4f46\u662f\u6211\u4e0d\u4f1a\n\n\u6240\u4ee5\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e2a\u65b0\u601d\u8def\u4e86\uff0c\u8fd9\u91cc\u6211\u7ef4\u62a4\u4e86\u4e00\u4e2a\u70b9\u7684\u6700\u5927\u3001\u6b21\u5927\u3001\u7b2c\u4e09\u5927\uff0c\u7a0b\u5e8f\u590d\u6742\u5ea6\u4e3aO(n^2)\uff0c\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\n\n\u5c31\u662f\u8bf4\u9996\u5148\u679a\u4e3e\u8d77\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e2a\u8d77\u70b9\u679a\u4e3e\u7ec8\u70b9\uff0c\u518d\u7136\u540e\nO(1)\u5224\u65ad\u662f\u5426\u5728\u76f4\u5f84\u4e0a\uff0cO(1)\u5bfb\u627e\u5f53\u524d\u504f\u5fc3\u8ddd\u3002\u3002\n\n\u8fd9\u91ccmx1,mx2,mx3,kx1,kx2,kx2\u5206\u522b\u6307\u6700\u5927\u3001\u6b21\u5927\u3001\u7b2c\u4e09\u5927\u7684\u503c\u53ca\u6240\u5bf9\u5e94\u7684\u8def\u5f84\uff08\u6211\u662f\u7528\u8d77\u70b9\u5230\u7ec8\u70b9\u7ecf\u8fc7\u7684\u7b2c\u4e8c\u70b9\u8bb0\u5f55\u7684\uff09\n\n*\u8fd9\u91cc\u7ef4\u62a4\u6700\u5927\u6b21\u5927\u7b2c\u4e09\u5927\u7684\u65f6\u5019\u7528\u7684\u662f\u66b4\u529b\u6a21\u62df\uff0c\u53ef\u80fd\u6709\u66f4\u4f18\u7f8e\u7684\u5199\u6cd5\u3002*\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define For(i,a,b) for(int i=a;i<=b;i++)\n#define N 310\n#define M 620\nusing namespace std;\nint nex[N],Next[M],d[M],w[M],tol=0;\nint point[N];\nint n,x,y,z;\nvoid Link(int x,int y,int z)\n{\n    Next[tol]=nex[x];\n    nex[x]=tol;\n    d[tol]=y;\n    w[tol]=z;\n    tol++;\n}\nint mx1[N],mx2[N],mx3[N],kx1[N],kx2[N],kx3[N];\ninline void update(int root,int x,int sum)\n{\n    if (x==kx1[root])\n    {\n        mx1[root]=max(mx1[root],sum);\t\t\n        return ;\n    }\n    if (x==kx2[root])\n    {\n        mx2[root]=max(mx2[root],sum);\n        if (mx1[root]<mx2[root])\n        {\n            swap(mx1[root],mx2[root]);\n            swap(kx1[root],kx2[root]);\n        }\n        return ;\n    }\n    if (x==kx3[root])\n    {\n        mx3[root]=max(mx3[root],sum);\n        if (mx2[root]<mx3[root])\n        {\n            swap(mx3[root],mx2[root]);\n            swap(kx3[root],kx2[root]);\n        }\n        if (mx1[root]<mx2[root])\n        {\n            swap(mx1[root],mx2[root]);\n            swap(kx1[root],kx2[root]);\n        }\n        return ;\n    }\n            \n    if (mx1[root]<sum)\n    {\n        mx3[root]=mx2[root];\n        kx3[root]=kx2[root];\n        mx2[root]=mx1[root];\n        kx2[root]=kx1[root];\n        mx1[root]=sum;\n        kx1[root]=x;\n    }\n    else\n    {\n        if (mx2[root]<sum)\n        {\n            mx3[root]=mx2[root];\n            kx3[root]=kx2[root];\n            mx2[root]=sum;\n            kx2[root]=x;\n        }\n        else\n        {\n            if (mx3[root]<sum)\n            {\n                mx3[root]=sum;\n                kx3[root]=x;\n            }\n        }\n    }\n}\nbool flag[N];\nint s;\nvoid dfs(int st,int ed,int sum)\n{\n    update(st,point[st],sum);\n    for(int p=nex[ed];p!=-1;p=Next[p])\n    {\n        if (!flag[d[p]])\n        {\n            flag[d[p]]=1;\n            point[ed]=d[p];\n            dfs(st,d[p],sum+w[p]);\n            point[ed]=0;\n            flag[d[p]]=0;\n        }\n    }\n}\ninline int far(int root)\n{\n    if (!flag[kx1[root]]) return mx1[root];\n    if (!flag[kx2[root]]) return mx2[root];\n    if (!flag[kx3[root]]) return mx3[root];\n    return 0;\n}\nint ans=0x3f3f3f3f;\nint D=0;\nvoid find(int st,int ed,int sum,int dis)\n{\t\n    if (st==ed)\n    {\n        if (mx1[st]+mx2[st]!=D) return ;\n    }\n    else\n    {\n        if (far(st)+far(ed)+sum!=D) return ;\n    }\n    int res=0;\n    \n    if (sum<=s)\n    {\t\t\n        res=max(far(st),far(ed));\n        res=max(res,dis);\n        ans=min(ans,res);\n        for(int p=nex[ed];p!=-1;p=Next[p])\n        {\n            if (!flag[d[p]])\n            {\n                flag[d[p]]=1;\n                find(st,d[p],sum+w[p],(st==ed)?(0):(max(dis,far(ed))));\n                flag[d[p]]=0;\n            }\n        }\n    }\n    else return ;\n}\nint main()\n{\n    memset(nex,-1,sizeof(nex));\n    scanf(\"%d%d\",&n,&s);\n    For(i,1,n-1)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        Link(x,y,z);Link(y,x,z);\n    }\n    For(i,1,n)\n    {\n        flag[i]=1;\n        dfs(i,i,0);\n        flag[i]=0;\n        D=max(D,mx1[i]);\n    }\n    For(i,1,n)\n    {\n        flag[i]=1;\n        find(i,i,0,0);\n        flag[i]=0;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\n\n\n",
        "postTime": 1537063373,
        "uid": 87510,
        "name": "\u54af\u54af\u54af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011"
    },
    {
        "content": "- \u9898\u76ee\u94fe\u63a5\uff1a\n\n  https://www.luogu.org/problemnew/show/P1099\n  \n- \u5206\u6790\uff1a\n\n  \u9996\u5148\u4f60\u9700\u8981$O(N)$\u6c42\u6811\u7684\u76f4\u5f84\u7684\u524d\u7f6e\u6280\u80fd\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5148\u968f\u4fbf\u627e\u4e2a\u6839\u627e\u5230\u6811\u4e0a\u8ddd\u79bb\u5b83\u6700\u8fdc\u7684\u9876\u70b9$S$\uff0c\u7136\u540e\u4ee5$S$\u4e3a\u6839\u627e\u6811\u4e0a\u8ddd\u79bb$S$\u6700\u8fdc\u7684\u9876\u70b9$E$,$S,E$\u4e4b\u95f4\u7684\u8def\u5f84\u5c31\u662f\u6811\u7684\u76f4\u5f84\n\n  1. \u66b4\u529b\u679a\u4e3e\n  \n     \u6309\u7167\u9898\u76ee\u8981\u6c42\u8bf4\u7684\u53bb\u505a\u5c31\u597d\u4e86\uff0c\u6c42\u51fa\u6811\u7684\u76f4\u5f84\uff0c\u7136\u540e\u6839\u636e\u8d2a\u5fc3\u627e\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8es\u7684\u8def\u5f84\u641c\u4e00\u904d\u5c31\u597d\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(N^2)$ \u4ee3\u7801\u96be\u5ea6\u5c0f \u53ef\u8fc7NOIP\u6570\u636e\n     \n  2. \u9884\u5904\u7406\u626b\u63cf\n  \n     \u8fd8\u662f\u5148\u6c42\u51fa\u6811\u7684\u76f4\u5f84,\u7136\u540e\u901a\u8fc7\u4ed4\u7ec6\u5206\u6790\u504f\u5fc3\u8ddd\u600e\u4e48\u6c42\uff0c\u53d1\u73b0\u65e0\u975e\u4e09\u79cd\u60c5\u51b5\n     \n     1.\u76f4\u5f84\u6700\u5de6\u7aef\u9876\u70b9\u5230\u8def\u5f84\u6700\u5de6\u7aef\u9876\u70b9\u8ddd\u79bb\n     \n     2.\u8def\u5f84\u4e0a\u5404\u70b9\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u5176\u4ed6\u70b9\u5230\u8fbe\u7684\u6700\u5927\u8ddd\u79bb\n     \n     3.\u76f4\u5f84\u4e0a\u6700\u53f3\u7aef\u9876\u70b9\u5230\u8def\u5f84\u6700\u53f3\u7aef\u9876\u70b9\u7684\u8ddd\u79bb\n     \n     \u6211\u76f8\u4fe12\u7406\u89e3\u4e0d\u96be,\u73b0\u5728\u7b80\u5355\u8bc1\u660e1\u60c5\u51b5\uff083\u540c\u7406\uff09\u7684\u6b63\u786e\u6027\uff1a\u5047\u8bbe\u8def\u5f84\u6700\u5de6\u7aef\u6709\u4e00\u6761\u5411\u5de6\u5ef6\u4f38\u7684\u8def\u5f84\u5176\u7ec8\u70b9$E'$\u4e0d\u662f\u76f4\u5f84\u5de6\u7aef\u70b9\u800c\u8ddd\u79bb\u5374\u66f4\u5927\uff0c\u5219\u8fdd\u53cd\u76f4\u5f84\u5b9a\u4e49\uff0c\u56e0\u4e3a\u8fd9\u6837$E'$\u4e0e\u8def\u5f84\u5de6\u7aef\u70b9\u8fde\u63a5\u80fd\u5f62\u6210\u4e00\u6761\u66f4\u957f\u7684\u76f4\u5f84\n     \n     \u4e8e\u662f\u6211\u4eec\u9700\u8981\u56db\u904dDFS\uff08\u4e5f\u8bb8\u4f60\u5199\u7684\u597d\u7684\u8bdd\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u591a\u904d\uff09\n     \n     \u524d\u4e24\u904d\u5c31\u662f\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u7528\u4e00\u4e2a$dmet[]$\u5c06\u76f4\u5f84\u5404\u70b9\u6309\u987a\u5e8f\u8bb0\u5f55\u65b9\u4fbf\u533a\u95f4\u5904\u7406,$diameter$\u4e3a\u76f4\u5f84\u957f\u5ea6\n     \n     \u7b2c\u4e09\u904d\u6c42\u76f4\u5f84\u4e0a\u5404\u70b9\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u4e0a\u5176\u4ed6\u70b9\u8fbe\u5230\u7684\u6700\u5927\u8ddd\u79bb,\u7528$d[]$\u8bb0\u5f55\n     \n     \u7b2c\u56db\u904d\u6c42\u76f4\u5f84\u5de6\u53f3\u6bb5\u70b9\u5230\u76f4\u5f84\u5404\u70b9\u8ddd\u79bb\uff0c\u7528$ld[],rd[]$\u8bb0\u5f55\n     \n     \u7136\u540e\u6211\u4eec\u626b\u63cf\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8es\u7684\u8def\u5f84\uff08\u53ef\u80fd\u662f\u4e00\u4e2a\u70b9\uff09,\u627e\u4e0a\u8ff0\u4e09\u79cd\u60c5\u51b5\u7684\u6700\u5927\u503c,\u627e\u7b2c\u4e8c\u79cd\u60c5\u51b5\u6700\u5927\u503c\u4f60\u53ef\u4ee5\u7528\u6ed1\u52a8\u7a97\u53e3\uff0cST Table\uff0c\u7ebf\u6bb5\u6811\u5728\u533a\u95f4\u67e5\u627e\u6700\u5927\u503c\uff0c\u8fd9\u91cc\u91c7\u7528\u7ebf\u6bb5\u6811\n     \n     \u65f6\u95f4\u590d\u6742\u5ea6:$O(N\\log N)$\n     \n     \u53ef\u4ee5\u8fc7\u6bd4\u8f83\u5927\u7684\u6570\u636e\uff0c\u8fd9\u662f\u52a0\u5f3a\u7248\n     \n     https://www.lydsy.com/JudgeOnline/problem.php?id=1999\n     \n- \u4ee3\u7801\n\n  \u5199\u5f97\u6bd4\u8f83\u4e11\uff0c\u89c1\u8c05\n  \n  ```\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cctype>\n#include <cstring>\n#include <queue>\n#define ll long long \n#define ri register int \nusing namespace std;\nconst int maxn=500005;\nconst int maxm=1000005;\nconst int inf=0x7fffffff;\ntemplate <class T>inline void read(T &x){\n\tx=0;int ne=0;char c;\n\twhile(!isdigit(c=getchar()))ne=c=='-';\n\tx=c-48;\n\twhile(isdigit(c=getchar()))x=(x<<3)+(x<<1)+c-48;\n    x=ne?-x:x;\n    return ;\n}\nstruct Edge{\n\tint ne,to,dis;\n}edge[maxm];\nint h[maxn],num_edge=0,mx=-inf;\nbool vis[maxn];\nvoid add(int f,int to,int dis){\n\tedge[++num_edge].ne=h[f];\n\tedge[num_edge].to=to;\n\tedge[num_edge].dis=dis;\n\th[f]=num_edge;\n}\nint n,s,head,tail;\nvoid dfs_1(int fa,int cur,int cnt){\n\tfor(ri i=h[cur];i;i=edge[i].ne){\n\t\tif(edge[i].to!=fa)dfs_1(cur,edge[i].to,cnt+edge[i].dis);\n\t}\n\tif(cnt>mx){\n\t\tmx=cnt,head=cur;\n\t}\n\treturn ;\n}\nint pre[maxn],dmet[maxn],d[maxn],diameter;\nvoid dfs_2(int fa,int cur,int cnt){\n\tfor(ri i=h[cur];i;i=edge[i].ne){\n\t\tif(edge[i].to!=fa){\n\t\t\tpre[edge[i].to]=cur;\n\t\t\tdfs_2(cur,edge[i].to,cnt+edge[i].dis);\n\t\t}\n\t}\n\tif(cnt>mx){\n\t\tmx=cnt,tail=cur;\n\t}\n\treturn ;\n}\nint root;\nvoid dfs_3(int fa,int cur,int cnt){\n\tfor(ri i=h[cur];i;i=edge[i].ne){\n\t\tint v=edge[i].to;\n\t\tif(!vis[v]&&v!=fa){\n\t\t\tdfs_3(cur,v,cnt+edge[i].dis);\n\t\t}\n\t}\n\tif(cnt>mx){\n\t\tmx=cnt,d[root]=cnt;\n\t}\n\treturn ;\n}\nint ld[maxn],rd[maxn],fun[maxn];\nvoid dfs_4(int fa,int cur,int cnt){\n\tfor(ri i=h[cur];i;i=edge[i].ne){\n\t\tint v=edge[i].to;\n\t\tif(vis[v]&&v!=fa){\n\t\t\tdfs_4(cur,v,cnt+edge[i].dis);\n\t\t}\n\t}\n\tld[fun[cur]]=cnt,rd[fun[cur]]=diameter-cnt;\n\treturn ;\n}\nint maxx[maxn<<2],L,R;\nvoid build(int now,int l,int r){\n\tif(l==r){\n\t\tmaxx[now]=d[dmet[l]];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n    build(now<<1,l,mid);\n    build(now<<1|1,mid+1,r);\n    maxx[now]=max(maxx[now<<1],maxx[now<<1|1]);\n    return ;\n}\nint query(int now,int l,int r){\n\tif(L<=l&&r<=R){\n\t\treturn maxx[now];\n\t}\n\tint mid=(l+r)>>1,ans=-inf;\n\tif(L<=mid)ans=max(ans,query(now<<1,l,mid));\n\tif(mid<R)ans=max(ans,query(now<<1|1,mid+1,r));\n\treturn ans;\n}\nint main(){\n\tint x,y,z;\n\tread(n),read(s);\n\tfor(ri i=1;i<n;i++){\n\t\tread(x),read(y),read(z);\n\t\tadd(x,y,z);\n\t\tadd(y,x,z);\n\t}\n\tmx=-inf;\n\tdfs_1(0,1,0);\n\tmx=-inf;\n\tdfs_2(0,head,0);\n\tdiameter=mx;  //\u4e24\u6b21DFS\u627e\u76f4\u5f84 \n/*------------------*/\n\tint tmp=tail,tot=0;\n\twhile(tmp!=head){\n\t\tdmet[++tot]=tmp;\n\t\tfun[tmp]=tot;\n\t\tvis[tmp]=1;\n\t\ttmp=pre[tmp];\n\t}\n\tdmet[++tot]=head;\n\tfun[head]=tot;\n\tvis[head]=1;  //\u8bb0\u5f55\u76f4\u5f84 \n/*------------------*/\n\tfor(ri i=1;i<=tot;i++){\n\t\troot=dmet[i];\n\t\tmx=-inf;\n\t    dfs_3(0,dmet[i],0);\n    }             //\u627e\u4ece\u76f4\u5f84\u5404\u70b9\u4e0d\u7ecf\u8fc7\u5176\u4ed6\u76f4\u5f84\u4e0a\u7684\u70b9\u8d70\u8fc7\u7684\u6700\u5927\u957f\u5ea6 \n    dfs_4(0,tail,0);//\u627e\u76f4\u5f84\u4e24\u7aef\u70b9\u5230\u76f4\u5f84\u5404\u70b9\u8ddd\u79bb \n    build(1,1,tot);//\u5efa\u7ebf\u6bb5\u6811\uff0c\u4e0d\u4f1aST Table\u7684\u6211 \n/*-----------------*/\n    int ans=inf,l=1,r=1;\n    while(ld[r+1]-ld[l]<=s&&r!=tot)r++;\n    //cout<<tot<<'*'<<endl;\n    while(r<=tot){//cout<<l<<' '<<r<<endl;\n    \tL=l,R=r;\n    \tans=min(ans,max(query(1,1,tot),max(ld[l],rd[r])));\n    \tif(r==tot)break;\n        l++;\n        while(ld[r+1]-ld[l]<=s&&r!=tot)r++;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1530366940,
        "uid": 61382,
        "name": "Rye_Catcher",
        "ccfLevel": 6,
        "title": "luogu\u9898\u89e3 P1099 \u3010\u6811\u7f51\u7684\u6838\u3011\u6811\u7684\u76f4\u5f84\u53d8\u5f0f+\u6570\u636e\u7ed3\u6784\u7ef4\u62a4"
    }
]