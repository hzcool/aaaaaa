[
    {
        "content": "update\uff1a\u65f6\u9650\u7f29\u77ed\u4e86\u4e4b\u540e\u8fdb\u884c\u4e86\u4e00\u6ce2\u6781\u9650\u5361\u5e38\uff0c\u73b0\u5728\u53c8\u80fd\u8fc7\u4e86\u3002\n\n\u5982\u679c\u9898\u89e3\u754c\u9762\u7684 latex \u574f\u6389\u4e86\u53ef\u4ee5[\u70b9\u8fdb\u535a\u5ba2](https://www.luogu.com.cn/blog/61088/solution-p5610)\u67e5\u770b~\n\n\u4e00\u4e2a\u5f88\u795e\u5947\u7684 trick\uff0c\u5199\u7bc7\u9898\u89e3\u603b\u7ed3\u4e00\u4e0b\u3002\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u6bcf\u4e00\u4e2a\u6570\u6700\u591a\u88ab\u9664 $O\\left(\\log n\\right)$ \u6b21\u5c31\u4f1a\u53d8\u6210 $1$\uff0c\u6240\u4ee5\u53ea\u8981\u80fd\u591f\u505a\u5230\u53ea\u5904\u7406\u9700\u8981\u4fee\u6539\u7684\u4f4d\u7f6e\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u505a\u5230\u4e00\u4e2a\u6b63\u786e\u7684\u590d\u6742\u5ea6\u3002\n\n\u6240\u4ee5\u8fd9\u4e2a\u590d\u6742\u5ea6\u74f6\u9888\u5b9e\u9645\u4e0a\u662f\u5728\u4e8e\u5982\u4f55\u5feb\u901f\u627e\u5230\u9700\u8981\u4fee\u6539\u7684\u4f4d\u7f6e\u3002\n\n\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u4e2a\u6570\u7684\u7ea6\u6570\u4e2a\u6570\u5927\u7ea6\u662f $O(\\sqrt[3] a)$ \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570 $i$ \u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u6240\u6709 $i$ \u7684\u500d\u6570\u3002\n\n\u6211\u4eec\u6765\u770b\u9700\u8981\u652f\u6301\u4ec0\u4e48\u64cd\u4f5c\uff1a\n\n- \u67e5\u8be2\u4e00\u4e2a\u6570\u7684\u503c\uff1b\n- \u8ba1\u7b97 $\\text{lower\\_bound}$\uff1b\n- \u5220\u9664\uff1b\n\n\u4f60\u5f53\u7136\u53ef\u4ee5\u7528\u5e73\u8861\u6811\uff0c\u4f46\u662f\u592a\u6162\u4e86\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5b83\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u5220\u9664\u7684\u5143\u7d20\uff0c\u521d\u59cb\u7684\u65f6\u5019\u663e\u7136\u90fd\u6307\u5411\u81ea\u5df1\u3002\n\n\u5982\u679c\u6211\u4eec\u8981\u5220\u9664\u7b2c $i$ \u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u5b83\u7684\u6307\u9488\u7684\u65b0\u4f4d\u7f6e\u80af\u5b9a\u662f $i+1$ \u7684\u6307\u9488\u6307\u5411\u7684\u4f4d\u7f6e\uff08\u5982\u679c\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u90a3\u4e48\u5c31\u662f\u7a7a\uff09\uff1b\u8fd9\u4e2a\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u67e5\u8be2\u548c $\\text{lower\\_bound}$ \u7684\u65f6\u5019\u5c31\u76f4\u63a5\u8bbf\u95ee\u6307\u9488\u5c31\u597d\u3002\n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u8fd9\u4e9b\u6307\u9488\uff0c\u8fd9\u6837\u4e0a\u8ff0\u4e09\u4e2a\u64cd\u4f5c\u90fd\u80fd\u505a\u5230 $O(\\alpha(n))\\approx O(1)$\u3002\n\n\u8fd9\u6837\u56e0\u4e3a\u4e0a\u8ff0\u64cd\u4f5c\u603b\u5171\u6700\u591a\u8fdb\u884c $O(n\\log n)$ \u6b21\uff0c\u6240\u4ee5\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log n)$\uff0c\u540c\u65f6\u5e76\u67e5\u96c6\u7684\u5e38\u6570\u4e5f\u5f88\u5c0f\u3002\n\n\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86~\n\n\u7136\u540e\u4f60\u81ea\u4fe1\u6ee1\u6ee1\u5730\u5199\u4e86\u4e00\u904d\u4ea4\u4e0a\u53bb\u53d1\u73b0\u5168 T \u4e00\u5206\u6ca1\u6709\u2026\u2026\n\n\u90a3\u4e48\u5c31\u5f00\u59cb\u4f18\u5316\uff01\n\n### $\\text{Step 1}$\n\n\u4f60\u53d1\u73b0\u66b4\u529b\u5206\u89e3\u7ea6\u6570\u662f $O(n\\sqrt a)$ \u800c\u975e $O(n\\sqrt [3] a)$\uff0c\u4f1a\u5bfc\u81f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt a+n\\log n)$\uff0c\u4e8e\u662f\u6539\u4e3a\u7b5b\u5b50\u9884\u5904\u7406\u56e0\u6570\u3002\n\n\u590d\u6742\u5ea6\u4e0b\u964d\u81f3 $O(n\\sqrt[3]a+a\\log a+n\\log n)$\u3002\n\n### $\\text{Step 2}$\n\n\u9884\u5904\u7406\u56e0\u6570\u65f6\uff0c\u4e0d\u8981\u7528 vector \u4fdd\u5b58\u56e0\u6570\uff0c\u81ea\u5df1\u5199\u4e00\u4e2a\u90bb\u63a5\u8868\u3002\n\n### $\\text{Step 3}$\n\n\u53d1\u73b0\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u6807\u6570\u7ec4\u548c\u5e76\u67e5\u96c6\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\u3002\n\n\u6240\u4ee5\u4fdd\u5b58\u4e0b\u6807\u548c\u5e76\u67e5\u96c6\u7684\u65f6\u5019\u4e0d\u9700\u8981\u4f7f\u7528 vector\uff0c\u53ef\u4ee5\u81ea\u5df1\u5f00\u4e00\u4e2a\u5185\u5b58\u6c60\uff0c\u7528\u6307\u9488\u6765\u6a21\u62df\u6570\u7ec4\u3002\n\n### $\\text{Step 4}$\n\n\u53d1\u73b0\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u6807\u6570\u7ec4\u548c\u5e76\u67e5\u96c6\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u6765\uff0c\u5c11\u904d\u5386\u4e00\u904d\u94fe\u8868\uff0c\u5c31\u80fd\u5c11\u4e00\u5927\u5806 Cache Miss\u3002\n\n### $\\text{Step 5}$\n\n\u4e8c\u5206\u5185\u5b58\u6c60\u7684\u5927\u5c0f\uff0c\u5f00\u592a\u5927\u4f1a\u8017\u8d39\u65f6\u95f4\u5bfc\u81f4 TLE\uff0c\u5f00\u5c0f\u4e86\u4f1a RE\uff0c\u5f00\u5f97\u5408\u9002\u5c31\u53ef\u4ee5 AC\u3002\n\n\u6211\u4e8c\u5206\u5230 $2.5\\times 10^7$ \u5c31 AC \u4e86\u3002\n\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt[3]a+a\\log a+n\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt[3]a)$\u3002\n\n\u5185\u5b58\u6c60\u7684\u5199\u6cd5\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <vector>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline long long qread() {\n\tregister char c = getchar();\n\tregister long long x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline long long Abs(const long long& x) {return (x > 0 ? x : -x);}\ninline long long Max(const long long& x, const long long& y) {return (x > y ? x : y);}\ninline long long Min(const long long& x, const long long& y) {return (x < y ? x : y);}\n\nint a[100005], n, m;\nlong long c[100005];\nint poolvc[25000005], poolfa[25000005], cntvc[500005], cntfa[500005], cnta[500005];\nint *vc[500005], *fa[500005];\nstruct Node {\n\tint val, nxt;\n\tNode() {\n\t\tnxt = -1;\n\t}\n};\nint hd[500005], pnt;\nNode nd[10000005];\n\ninline int Lowbit(int x) {\n\treturn x & -x;\n}\n\ninline void Update(int i, long long x) {\n\tfor (register int j = i;j <= n;j += Lowbit(j)) c[j] += x;\n}\n\ninline long long Query(int i) {\n\tregister long long ans = 0;\n\tfor (register int j = i;j >= 1;j -= Lowbit(j)) ans += c[j];\n\treturn ans;\n}\n\ninline void Add(int x, int v) {\n\tnd[++pnt].val = v;\n\tnd[pnt].nxt = hd[x];\n\thd[x] = pnt;\n}\n\ninline void Read() {\n\tn = qread(); m = qread();\n\tfor (register int i = 1;i <= n;i++) Update(i, a[i] = qread());\n}\n\ninline void Prefix() {\n\tfor (register int i = 1;i <= n;i++) cnta[a[i]]++;\n\tmemset(hd, -1, sizeof(hd));\n\tregister int maxd = 0;\n\tfor (register int i = 1;i <= 500000;i++) {\n\t\tfor (register int j = i;j <= 500000;j += i) {\n\t\t\tAdd(j, i);\n\t\t\tcntvc[i] += cnta[j];\n\t\t\tcntfa[i] += cnta[j];\n\t\t}\n\t\tmaxd = Max(maxd, cntvc[i]);\n\t}\n\tint vcAllocTop = 0, faAllocTop = 0;\n\tfor (register int i = 1;i <= 500000;i++) {\n\t\tvc[i] = poolvc + vcAllocTop;\n\t\tfa[i] = poolfa + faAllocTop;\n\t\tvcAllocTop += cntvc[i] + 3;\n\t\tfaAllocTop += cntfa[i] + 3;\n\t}\n\tmemset(cntvc, 0, sizeof(cntvc));\n\tmemset(cntfa, 0, sizeof(cntfa));\n\tfor (register int i = 1;i <= n;i++) {\n\t\tfor (register int j = hd[a[i]];~j;j = nd[j].nxt) {\n\t\t\tvc[nd[j].val][cntvc[nd[j].val]] = i;\n\t\t\tfa[nd[j].val][cntfa[nd[j].val]] = cntfa[nd[j].val];\n\t\t\tcntvc[nd[j].val]++;\n\t\t\tcntfa[nd[j].val]++;\n\t\t\t//vc[nd[j].val].push_back(i);\n\t\t\t//fa[nd[j].val].push_back(fa[nd[j].val].size());\n\t\t}\n\t}\n}\n\ninline int GetRoot(int i, int v) {\n\tif (v == cntfa[i] || v == fa[i][v]) return v;\n\treturn fa[i][v] = GetRoot(i, fa[i][v]);\n}\n\ninline void Modify(int l, int r, int x) {\n\tregister int pnt = GetRoot(x, lower_bound(vc[x], vc[x] + cntvc[x], l) - vc[x]);\n\twhile (pnt < cntvc[x] && vc[x][pnt] <= r) {\n\t\tif (a[vc[x][pnt]] % x == 0) {\n\t\t\tUpdate(vc[x][pnt], a[vc[x][pnt]] / x - a[vc[x][pnt]]);\n\t\t\ta[vc[x][pnt]] /= x;\n\t\t}\n\t\tif (a[vc[x][pnt]] % x) fa[x][pnt] = pnt + 1;\n\t\tpnt = GetRoot(x, pnt + 1);\n\t}\n}\n\ninline void Solve() {\n\tregister long long ans = 0;\n\twhile (m--) {\n\t\tregister long long opt = qread(), l = qread() ^ ans, r = qread() ^ ans;\n\t\tif (opt == 1) {\n\t\t\tregister long long x = qread() ^ ans;\n\t\t\tif (x == 1) continue;\n\t\t\tModify(l, r, x);\n\t\t} else {\n\t\t\tans = Query(r) - Query(l - 1);\n\t\t\tprintf(\"%lld\\n\", ans);\n\t\t}\n\t}\n}\n\nint main() {\n\tRead();\n\tPrefix();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1588426798,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013]\u5927\u5b66\u3011"
    },
    {
        "content": "**\u9898\u610f** \uff1a \n\n\u7ef4\u62a4\u5e8f\u5217\uff0c\u652f\u6301\u4e0b\u5217\u4e24\u4e2a\u64cd\u4f5c \uff1a\n\n- \u628a\u533a\u95f4 $[l,r]$ \u4e2d\u6240\u6709 $x$ \u7684\u500d\u6570\u9664\u4ee5 $x$\u3002\n- \u67e5\u8be2\u533a\u95f4 $[l,r]$ \u7684\u548c\u3002\n\n\u5f3a\u5236\u5728\u7ebf\u3002\n\n$n\\leq 10^5,a\\leq 5\\times 10^5$ \uff0c\u65f6\u9650 $\\texttt{0.5s}$\u3002\n\n------------\n\n\u663e\u7136\uff0c\u53ea\u4f1a\u6709 $O(n\\log a)$ \u6b21\u751f\u6548\u7684\u9664\u6cd5\u64cd\u4f5c\uff0c\u6211\u4eec\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u4e3a $O(n\\log a\\log n)$\u3002\n\n\u73b0\u5728\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u627e\u5230\u5e94\u8be5\u88ab\u9664\u7684\u6570\u3002\n\n\u8bbe $S_d$ \u4e3a\u5e8f\u5217\u4e2d\u6240\u6709\u4e3a $d$ \u7684\u500d\u6570\u7684\u6570\u7684\u96c6\u5408\uff0c$S_{1...a}$ \u7684\u5927\u5c0f\u603b\u548c\u662f $\\sum d(a)=O(nd(a))$ \u7684\u3002\n\n\u5f53\u6211\u4eec\u533a\u95f4\u9664 $d$ \u65f6\uff0c\u53ea\u9700\u8981\u5728 $S_d$ \u4e2d\u67e5\u770b\u3002\n\n\u73b0\u5728\u95ee\u9898\u53d8\u4e3a \uff1a \u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u6570\u3002\n\n\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u4e00\u6bb5\u5df2\u7ecf\u88ab\u5220\u9664\u7684\u6570\uff0c\u53ef\u4ee5\u4e00\u6b21\u8df3\u8fc7\u3002\n\n\u590d\u6742\u5ea6 $O(nd(a)\\alpha(n)+n\\log a\\log n)$\u3002\n\n\u6781\u5ea6\u5361\u5e38\u6570\uff0c\u6700\u597d\u4e0d\u8981\u7528 `vector` \u3002\u53ef\u4ee5\u624b\u5199\u5185\u5b58\u6c60\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#define ll long long\n#define MaxN 100500\n#define MaxA 500500 \nusing namespace std;\nll read(){\n  ll X=0;char ch=0;\n  while(ch<48||ch>57)ch=getchar();\n  while(ch>=48&&ch<=57)X=X*10+(ch^48),ch=getchar();\n  return X;\n}\nint n;ll t[MaxN];\n#define lbit(p) ((p)&-(p))\nvoid add(int p,int x)\n{while(p<=n){t[p]+=x;p+=lbit(p);}}\nll qry(int p){\n  ll ret=0;\n  while(p){ret+=t[p];p^=lbit(p);}\n  return ret;\n}\nstruct UFS{\n  int *f;\n  void Init(int n)\n  {for (int i=0;i<n;i++)f[i]=i;}\n  int find(int u)\n  {return f[u]==u ? u : f[u]=find(f[u]);}\n}T[MaxA];\nint c[MaxA],*p[MaxA],_o[MaxN*405],*tp=_o,x[MaxN];\nvoid div(int l,int r,int d)\n{\n  if (d==1)return ;\n  l=lower_bound(p[d],p[d]+c[d],l)-p[d];\n  r=upper_bound(p[d],p[d]+c[d],r)-p[d]-1;\n  if (l>r)return ;\n  for (int u=T[d].find(l);u<=r;){\n    int to=p[d][u];\n    if (x[to]%d==0){\n      add(to,x[to]/d-x[to]);\n      x[to]/=d;\n    }if (u>=r)break;\n    if (x[to]%d)\n      u=T[d].f[u]=T[d].find(u+1);\n    else u=T[d].find(u+1);\n  }\n}\nint q,m;\nint main()\n{\n  n=read();q=read();\n  for (int i=1;i<=n;i++){\n    add(i,x[i]=read());\n    m=max(m,x[i]);\n    c[x[i]]++;\n  }\n  for (int i=1;i<=m;i++)\n    for (int j=i+i;j<=m;j+=i)\n      c[i]+=c[j];\n  for (int i=1;i<=m+1;i++)\n    if (c[i]){\n      p[i]=tp;tp+=c[i];\n      T[i].f=tp;T[i].Init(c[i]);tp+=c[i];\n      c[i]=0;\n    }\n  for (int i=1;i<=n;i++)\n    for (int d=1;d*d<=x[i];d++)\n      if (x[i]%d==0){\n        p[d][c[d]++]=i;\n        if (d*d!=x[i])\n          p[x[i]/d][c[x[i]/d]++]=i;\n     }\n  ll l,r,x,las=0;\n  for (int i=1,op;i<=q;i++){\n    op=read();l=read();r=read();\n    l^=las;r^=las;\n    if (op==1)div(l,r,read()^las);\n    else printf(\"%lld\\n\",las=qry(r)-qry(l-1));\n  }\n}\n\n```\n\n\u597d\u4e0d\u5bb9\u6613\u5361\u8fc7\u53bb\u4e86\u2026\u2026\n\n\u5c45\u7136\u662f\u6700\u4f18\u89e3\u2026\u2026\n\n\u770b\u4e86\u770b\u52a0\u5f3a\u6570\u636e\u540e\u5176\u5b9e\u53ea\u6709\u4e24\u4e09\u4e2a\u4eba\u8fc7\u4e86\u2026\u2026\n\n\uff08\u6211\u4e3a\u4ec0\u4e48\u8981\u6765\u505a\u8fd9\u4e2a\u5361\u5e38\u9898\u554aqwq\uff09\n\n",
        "postTime": 1603255894,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013]\u5927\u5b66\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5462\u3002\u3002\u3002\u662f\u6211\u4eba\u751f\u4e2d\u7b2c\u4e00\u9053 Ynoi\uff0c\u6240\u4ee5\u5199\u4e00\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\uff08\n\n\u5982\u679c\u89c9\u5f97\u6211\u8bb2\u7684\u4e0d\u591f\u6e05\u695a\u8bf7\u5728\u8ba8\u8bba\u533a\u8bc4\u8bba\u4e00\u4e0b\uff0c\u6211\u4f1a\u4fee\u6539\u3002\u3002\u3002\n\n\u597d\uff0c\u8fdb\u5165\u6b63\u9898\uff0c\u56e0\u4e3a\u8fd9\u9053\u9898\u662f Ynoi\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u4e00\u4e2a\u6bd2\u7624\u6570\u636e\u7ed3\u6784~\n\n\u8003\u8651\u5230\u4e00\u4e2a\u6570 $x$ \u5982\u679c\u88ab\u9664\u4e86\u4e00\u6b21\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a $< \\frac{x}{2}$\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u6570 $a[i]$ \u88ab\u9664\u7684\u6b21\u6570\u4e00\u5b9a\u4f1a $<\\log a[i]$\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u5355\u70b9\u4fee\u6539\u800c\u4e0d\u662f\u533a\u95f4\u4fee\u6539\uff08\u56e0\u4e3a\u6bcf\u6b21\u4fee\u6539\u80fd\u591f\u88ab\u6574\u9664\u7684\u70b9\u6240\u9700\u8981\u7684\u65f6\u95f4\u4e3a $O(n\\log n)$\uff0c\u662f\u80fd\u8fc7\u7684\uff09\u3002\n\n\u7136\u540e\u8fd9\u9898\u5c31\u7ed3\u675f\u4e86\uff1f\u4e0d\uff01\u8fdc\u8fdc\u6ca1\u6709\u3002\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u4e00\u4e2a\u533a\u95f4\u4e2d\u6709\u54ea\u4e9b\u70b9\u80fd\u591f\u88ab\u8bfb\u5165\u7684 $x$ \u6574\u9664\u3002\u90a3\u6211\u4eec\u80fd\u600e\u4e48\u529e\u5462\uff1f\n\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a $x\\in (2,\\sqrt{\\max{a[i]}})$ \u90fd\u5f00\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u4f1a\u5f00\u4e00\u4e2a $root$ \u6570\u7ec4\uff0c\u5176\u4e2d\u4ee5  $rt[x]$ \u4e3a\u6839\u5e73\u8861\u6811\u4e2d\u6240\u6709\u7684\u6570\u90fd\u662f\u80fd\u591f\u88ab $x$ \u6574\u9664\u7684\u3002\u800c\u8fd9\u4e2a\u5e73\u8861\u6811\uff0c\u6211\u4eec\u9009\u62e9\u4f7f\u7528 fhqtreap\uff0c\u56e0\u4e3a\u5b83\u6bd4 splay \u66f4\u5feb\uff0c\u4f17\u6240\u5468\u77e5\uff0c Ynoi \u5361\u5e38\u5341\u5206\u4e25\u91cd\uff08\u867d\u7136\u8fd9\u9898\u4e0d\u662f\u5f88\u5361\u5e38\u6570\uff09\u3002\n\n\u5f53\u6211\u4eec\u8981\u4fee\u6539\u65f6\uff0c\u6211\u4eec\u5148\u8bfb\u5165 $l,r,x$\uff0c\u7136\u540e\u6211\u4eec\uff0c\u628a\u4ee5 $rt[x]$ \u4e3a\u6839\u7684\u5e73\u8861\u6811\u5206\u88c2\uff08split\uff09\u4e00\u4e0b\uff0c\u5206\u6210\u4e09\u90e8\u5206\uff0c$1-(l-1),l-r,(r+1)-n$\u3002\n\n\u7136\u540e\u6211\u4eec\u627e\u5230\u4e2d\u95f4\uff08\u4e5f\u5c31\u662f $l-r$\uff09\u90a3\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u5c06\u8fd9\u4ee5\u90e8\u5206\u4e2d\u7684\u5143\u7d20\u90fd\u627e\u5230\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u80fd\u591f\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u6c42\u548c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4e14\u8d8a\u5feb\u8d8a\u597d\uff0c\u90a3\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u4e86~\n\n\u603b\u7684\u590d\u6742\u5ea6\u662f $O(n\\sqrt{\\max{a[i]}}+n\\log n\\log(\\max{a[i]}))$\uff0c\u5e94\u8be5\u662f\u52c9\u5f3a\u80fd\u8fc7\u7684\n\n\u51e0\u4e2a\u7ec6\u8282\uff1a\n\n1.\u6811\u72b6\u6570\u7ec4\u90a3\u91cc\u8981\u5f00 $long\\ long$\n\n2.\u6211\u4eec\u4e00\u5b9a\u8981\u7279\u5224\u662f\u5426\u80fd\u591f\u6574\u9664\uff0c\u6bd4\u5982\u4e00\u4e2a24\u9664\u5b8c6\u4e4b\u540e\u5b83\u5c31\u4e0d\u518d\u662f3\u7684\u500d\u6570\u4e86\uff0c\u4f46\u5b83\u8fd8\u57283\u7684\u90a3\u68f5\u5e73\u8861\u6811\u4e2d\u3002\n\n3.\u8fd9\u9898\u7531\u4e8e\u8981\u5f00\u5f88\u591a\u68f5\u5e73\u8861\u6811\uff0c\u7a7a\u95f4\u5361\u7684\u5f88\u6b7b\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u8fdb\u884c\u201c\u5e9f\u7269\u5229\u7528\u201d\uff0c\u5373\u5c06\u5df2\u7ecf\u88ab\u5220\u9664\u7684\u70b9\u7684\u4e0b\u6807\u56de\u6536\u8d77\u6765\uff0c\u7528 $re$ \u6570\u7ec4\u50a8\u5b58\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u6a21\u62df\u6808\u7684\u65b9\u5f0f\u91cd\u65b0\u5229\u7528\u3002\n\n4.\u4e00\u5b9a\u8981\u5224\u4e00\u4e0b `if(k==1) continue;`\u8981\u4e0d\u7136\u4f1a $T$ \u6389\u3002\n\n5.\u8fd9\u9898\u4e00\u5b9a\u8981\u8bb0\u5f97\u53d6 $xor$\uff0c\u8981\u4e0d\u7136\u53ea\u6709\u4e24\u5206\u3002\u3002\u3002\u8fd9\u662f\u8840\u7684\u6559\u8bad\uff01\n\n\u4e0b\u9762\u8bf7\u89c1\u5b8c\u6574\u4ee3\u7801\uff0c\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u6ce8\u91ca\n\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int NR=5e5+10;\nconst int MR=34e6+10;\nint n,m; \nint mx=0;//\u627e\u5230a[i]\u4e2d\u7684\u6700\u5927\u503c\nint la=0;//\u5f3a\u5236\u5728\u7ebf\uff0c\u8981^la \nint tot,len;//\u5206\u522b\u8868\u793a\u76ee\u524d\u7684\u603b\u8282\u70b9\u6570\u4ee5\u53ca\u5efa\u6811\u7684\u65f6\u5019\u7684\u957f\u5ea6 \nint a[NR],q[NR];//\u5206\u522b\u8868\u793a\u8bfb\u5165\u7684a[i]\u5df2\u7ecf\u5efa\u6811\u65f6\u7684\u90a3\u4e2a\u6570\u7ec4 \nint rt[NR],son[MR][2];//rt[x]\u5c31\u662f\u6211\u89e3\u91ca\u4e2d\u7684rt\uff0c\u4e5f\u5c31\u662f\u90a3\u4e2a\u80fd\u6574\u9664x\u7684\u5e73\u8861\u6811\u7684\u6839 \nint val[MR],siz[MR];//val[u]\u8868\u793au\u5bf9\u5e94\u5728a[i]\u6570\u7ec4\u7684\u4e0b\u6807\uff0csiz\u8868\u793afhq\u4e2d\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u6570 \nint re[MR],resiz;//re\u56de\u6536\u7ed3\u70b9\u7684\u6570\u7ec4\uff0cresiz\u662f\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u90fd\u51e0\u4e2a\u5f85\u56de\u6536\u7684\u7ed3\u70b9 \nll c[NR];//\u8fd9\u4e2a\u6570\u6811\u72b6\u6570\u7ec4\u7684\u6570\u7ec4 \nvector<int> ys[NR];//\u7528\u4e00\u4e2avector\u7edf\u8ba1\u56e0\u6570 \n\nint lowbit(int x){//\u6811\u72b6\u6570\u7ec4\u6807\u914dlowbit \n\treturn x&(-x);\n}\n\nvoid add(int x,ll val)//\u6811\u72b6\u6570\u7ec4\u5355\u70b9\u4fee\u6539\u51fd\u6570 \n{\n\twhile(x<=n)\n\t{\n\t\tc[x]+=val;\n\t\tx+=lowbit(x);\n\t}\n}\n\nll query(int x)//\u67e5\u8be2\u533a\u95f4\u548c \n{\n\tll ans=0;\n\twhile(x)\n\t{\n\t\tans+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\n\nint newnode(int x)//\u65b0\u5efa\u4e00\u4e2a\u7ed3\u70b9 \n{\n\tint u;\n\tif(resiz) u=re[resiz--];//\u5982\u679c\u6709\u5f85\u56de\u6536\u7684\u70b9\uff0c\u5c31\u5e9f\u7269\u5229\u7528 \n\telse u=++tot;//\u5426\u5219\u7ed3\u70b9\u603b\u662f+1 \n\tval[u]=x;siz[u]=1;//\u521d\u59cb\u5316 \n\treturn u;\n}\n\nvoid update(int x){//\u8ba1\u7b97x\u7684siz\u503c \n\tsiz[x]=siz[son[x][0]]+siz[son[x][1]]+1;\n}\n\nint build(int l,int r)//\u7528O(n)\u5efa\u6811\uff0c\u5426\u5219\u53ef\u80fd\u4f1aTLE \n{\n\tif(r<l) return 0;\n\tint mid=(l+r>>1);\n\tint u=newnode(q[mid]);//\u65b0\u5efa\u4e00\u4e2au\u7ed3\u70b9 \n\tson[u][0]=build(l,mid-1);//\u5efa\u5de6\u5b50\u6811 \n\tson[u][1]=build(mid+1,r);//\u5efa\u53f3\u5b50\u6811 \n\tupdate(u);//\u8ba1\u7b97u\u7684siz \n\treturn u;\n}\n\nvoid split(int x,int &u,int &v,int k)//fhqtreap\u7684\u5206\u88c2\u51fd\u6570 \n{\n\tif(!x){u=v=0;return;}\n\tif(val[x]<=k) split(son[u=x][1],son[x][1],v,k);\n\telse split(son[v=x][0],u,son[x][0],k);\n\tupdate(x);\n}\n\nint merge(int u,int v)//fhq\u7684\u5408\u5e76\u51fd\u6570 \n{\n\tif(!u||!v) return u|v;\n\tint root;\n\tif(rand()<rand()) son[root=u][1]=merge(son[u][1],v);\n\telse son[root=v][0]=merge(u,son[v][0]);\n\tupdate(root);\n\treturn root;\n}\n\nvoid dfs(int u,int k)//\u5904\u7406\u64cd\u4f5c1 \n{\n\tif(!u) return;//\u5982\u679c\u5230\u4e86\u53f6\u5b50\uff0c\u76f4\u63a5return \n\tif(son[u][0]) dfs(son[u][0],k);//\u5982\u679c\u5b83\u6709\u5de6\u513f\u5b50\uff0c\u5219\u5c06\u5b83\u5de6\u513f\u5b50\u91cc\u7684\u70b9\u4e5f\u9664\u4e00\u4e0bk \n\tif(a[val[u]]%k==0)//\u5982\u679c\u80fd\u6574\u9664k \n\t{\n\t\tadd(val[u],-a[val[u]]+a[val[u]]/k);//\u76f4\u63a5\u6539\u53d8\u4e00\u4e0b\u8fd9\u4e2a\u503c \n\t\ta[val[u]]/=k;//\u9664\u4e00\u4e0b\uff0c\u65b9\u4fbf\u4e4b\u540e\u5224\u65ad\u662f\u5426\u80fd\u591f\u6574\u9664k \n\t}\n\tif(a[val[u]]%k==0) q[++len]=val[u];//\u5982\u679c\u4ecd\u7136\u80fd\u6574\u9664\uff0c\u91cd\u65b0\u52a0\u5165\u5e73\u8861\u6811 \n\tif(son[u][1]) dfs(son[u][1],k);//\u5982\u679c\u5b83\u6709\u53f3\u513f\u5b50\uff0c\u5219\u5c06\u5b83\u53f3\u513f\u5b50\u91cc\u7684\u70b9\u4e5f\u9664\u4e00\u4e0bk \n\tre[++resiz]=u;//\u5f85\u56de\u6536\u7684\u70b9\u589e\u52a0\u4e00\u4e2a \n\tson[u][0]=son[u][1]=0;//\u60c5\u51b5\u8fd9\u4e9b\u70b9 \n\tsiz[u]=val[u]=0;\n}\n\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nint main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tsrand(15402533);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tmx=max(mx,a[i]);\n\t\tadd(i,a[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j*j<=a[i];j++)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tys[j].push_back(i);\n\t\t\t\tif(j*j!=a[i]) ys[a[i]/j].push_back(i);\n\t\t\t\t//\u5c06\u56e0\u6570\u52a0\u5165\u8fd9\u4e2avector \n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=2;i<=mx;i++)\n\t{\n\t\tlen=0;\n\t\tfor(vector<int>::iterator it=ys[i].begin();it!=ys[i].end();it++)\n\t\t\tq[++len]=*it;\n\t\trt[i]=build(1,len);\n\t\t//\u5c06vector\u91cc\u7684\u5143\u7d20\u5efa\u6811 \n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint op=read(),l=read(),r=read();\n\t\tl^=la,r^=la;\n\t\t//\u5f3a\u5236\u5728\u7ebf \n\t\tif(op==1)\n\t\t{\n\t\t\tint k=read();\n\t\t\tk^=la;\n\t\t\tif(k==1) continue;\n\t\t\tint a,b,c;\n\t\t\tsplit(rt[k],a,c,r);\n\t\t\tsplit(a,a,b,l-1);\n\t\t\t//\u5206\u88c2\u6210\u4e09\u90e8\u5206 \n\t\t\tlen=0;\n\t\t\tdfs(b,k);\n\t\t\t//dfs\u4fee\u6539 \n\t\t\tb=build(1,len);\n\t\t\trt[k]=merge(merge(a,b),c);\n\t\t\t//\u5408\u5e76 \n\t\t}\n\t\telse\n\t\t{\n\t\t\tll ans=query(r)-query(l-1);\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t\t//\u8f93\u51fa\u7b54\u6848 \n\t\t\tla=ans;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1596162454,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5610 [Ynoi2013]\u5927\u5b66"
    },
    {
        "content": "\u4e4b\u524d\u6211\u7528\u5e73\u8861\u6811\u5199\u8fd9\u9898\uff0c\u7ed3\u679c\u65f6\u7a7a\u90fd\u88ab\u5361\u5e38\u3002\n\n\u7136\u540e\u6709\u961f\u7237\u8ddf\u6211\u8bf4\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u505a\uff0c\u4eca\u5929\u8865\u4e86\u4e00\u4e0b\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u8d85\u7ea7\u597d\u5199\uff0c\u5373\u4f7f\u662f\u6211\u7684\u6bd2\u7624\u7801\u98ce\u73b0\u5728\u4e5f\u5728\u6d1b\u8c37\u4e0a\u662f\u6700\u77ed\u89e3\u3002\n\n------------\n\u9996\u5148\u662f\u8ddf\u6807\u7b97\u4e00\u6837\uff0c\u7528 `vector` \u5b58\u4e0b\u6bcf\u4e2a\u6811\u7684\u6240\u6709\u7684\u500d\u6570\u3002\n\n\u7136\u540e\u5220\u9664\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u641e\u5e73\u8861\u6811\uff0c\u6211\u4eec\u6bcf\u4e2a\u6570\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u5220\u9664\u7684\u65f6\u5019\u7528\u5e76\u67e5\u96c6\u7f29\u70b9\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u4ee4\u6bcf\u4e2a\u70b9\u6240\u5728\u7684\u96c6\u5408\u7684\u6839\u4e3a\u8fd9\u4e2a\u70b9\u540e\u9762\u7b2c\u4e00\u4e2a\u6ca1\u88ab\u5220\u6389\u7684\u70b9\u3002\n\n\u7136\u540e\u5c31\u5148\u4e8c\u5206\u4e00\u4e0b\u7b2c\u4e00\u4e2a\u9700\u8981\u88ab\u5220\u6389\u7684\u70b9\uff0c\u5f80\u540e\u9762\u8df3\u5c31\u884c\u4e86\u3002\n\n\u975e\u5e38\u597d\u5199\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<algorithm>\n#include<vector>\n#include<cctype>\n#include<cstdio>\nusing namespace std;\ntypedef long long ll;\ninline ll readint(){\n    ll x=0;\n    bool f=0;\n    char c=getchar();\n    while(!isdigit(c)&&c!='-') c=getchar();\n    if(c=='-'){\n        f=1;\n        c=getchar();\n    }\n\twhile(isdigit(c)){\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return f?-x:x;\n}\nconst int maxn=1e5+5,maxa=5e5+5;\nint n,m,a[maxn];\nvector<int> f[maxa],p[maxa];\nint findrt(int f,int x){\n\tif(x==(int)p[f].size()) return x;\n\treturn p[f][x]==x?x:p[f][x]=findrt(f,p[f][x]);\n}\nll c[maxn];\ninline int lowbit(int x){\n\treturn x&-x;\n}\nvoid modify(int x,ll k){\n\twhile(x<=n){\n\t\tc[x]+=k;\n\t\tx+=lowbit(x);\n\t}\n}\nll query(int x){\n\tll s=0;\n\twhile(x>0){\n\t\ts+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn s;\n}\nint main(){\n    #ifdef LOCAL\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n    n=readint();\n    m=readint();\n    for(int i=1;i<=n;i++){\n    \ta[i]=readint();\n    \tfor(int j=1;j*j<=a[i];j++) if(a[i]%j==0){\n    \t\tf[j].push_back(i);\n    \t\tp[j].push_back(p[j].size());\n    \t\tif(j*j<a[i]){\n    \t\t\tf[a[i]/j].push_back(i);\n    \t\t\tp[a[i]/j].push_back(p[a[i]/j].size());\n\t\t\t}\n\t\t}\n\t\tmodify(i,a[i]);\n\t}\n\tll lastans=0;\n\twhile(m--){\n\t\tint opt=readint();\n\t\tif(opt==1){\n\t\t\tint l,r,x;\n\t\t\tl=readint()^lastans;\n\t\t\tr=readint()^lastans;\n\t\t\tx=readint()^lastans;\n\t\t\tif(x==1) continue;\n\t\t\tint u=lower_bound(f[x].begin(),f[x].end(),l)-f[x].begin();\n\t\t\tfor(int i=findrt(x,u);i<(int)f[x].size()&&f[x][i]<=r;i=(findrt(x,i+1))){\n\t\t\t\tif(a[f[x][i]]%x==0){\n\t\t\t\t\tmodify(f[x][i],-a[f[x][i]]);\n\t\t\t\t\tmodify(f[x][i],a[f[x][i]]/=x);\n\t\t\t\t}\n\t\t\t\tif(a[f[x][i]]%x!=0) p[x][i]=i+1;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tint l,r;\n\t\t\tl=readint()^lastans;\n\t\t\tr=readint()^lastans;\n\t\t\tprintf(\"%lld\\n\",lastans=query(r)-query(l-1));\n\t\t}\n\t}\n    return 0;\n}\n```",
        "postTime": 1586855353,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013]\u5927\u5b66\u3011"
    },
    {
        "content": "\u65f6\u96500.5s\u89e3\u6cd5\n\n---\n\n\u5f31\u5316\u7248\uff1a[P3987](https://www.luogu.com.cn/problem/P3987) \n\n[My solution](https://www.luogu.com.cn/blog/242524/solution-p3987)\u2190\u5efa\u8bae\u5148\u5b66\u4f1a\n\n\u4eba\u751f\u7b2c\u4e00\u9053 $\\text{Ynoi}$\u3002\n\n\u5148\u628aP3987\u7684\u4ee3\u7801\u653e\u4e00\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\n//\nlong long read()\n{\n    long long in=0;short f=1;\n    char c=getchar();\n    while (c>'9'||c<'0')\n    {if(c=='-') f=-1;c=getchar();break;} \n    while (c>='0'&&c<='9') \n    {in=in*10+c-'0';c=getchar();}\n    return in*f;\n}\nvoid write(long long x)  \n{  \n    if (x==0){putchar('0');return;}\n    if(x<0) {putchar('-');x=-x;}\n    if(x<10) {putchar(x+'0');return;}\n    short num=0; char c[30];\n    while(x) c[++num]=(x%10)+48,x/=10;\n    while(num) putchar(c[num--]);\n}\n//\u5feb\u8bfb\u5feb\u5199 \n#define lowbit(x) (x&(-x))\nlong long tree[100008];\nint n;\nlong long get_sum(int wh)\n{\n    long long ans=0;\n    for(;wh;wh-=lowbit(wh)) ans+=tree[wh];\n    return ans;\n}\nvoid add(int wh,long long v)\n{\n    for(;wh<=n;wh+=lowbit(wh)) tree[wh]+=v;\n}\n//\u6811\u72b6\u6570\u7ec4 \n#define vit vector<int>::iterator\nint a[100008],m;\nvector<int>ys[500008];\nvector<vit>t;\nint main()\n{\n    n=read();m=read();\n    for(register int i=1;i<=n;i++)\n    {\n        a[i]=read();\n        for(register int j=1;j*j<=a[i];j++)\n        {\n            if(a[i]%j==0)\n            {\n                ys[j].push_back(i);\n                if(a[i]!=j*j) ys[a[i]/j].push_back(i);  \n            }\n        }\n        add(i,a[i]);\n    }\n    while(m--)\n    {\n        short opt=read();\n        switch(opt)\n        {\n            case 1:\n            {\n                int l=read(),r=read(),x=read();\n                t.clear();\n                if(x==1||ys[x].empty()) continue;\n                vit l2=lower_bound(ys[x].begin(),ys[x].end(),l);\n                vit r2=upper_bound(ys[x].begin(),ys[x].end(),r);\n                if(l2==ys[x].end()) continue;\n                for(vit it=l2;it!=r2;it++)\n                {\n                    if(a[*it]%x!=0) continue;\n                    add(*it,-(a[*it]-a[*it]/x));\n                    a[*it]/=x;\n                    if(a[*it]%x!=0) t.push_back(it);\n                }\n                if(!t.empty()) \n                {\n                    for(int i=t.size()-1;i>=0;i--) ys[x].erase(t[i]);\n                }\n                break;\n            }\n            case 2:\n            {\n                int l=read(),r=read();\n                write(get_sum(r)-get_sum(l-1));\n                putchar('\\n');\n                break;\n            }\n        }\n    }\n    return 0;\n}\n```\n\n\u590d\u6742\u5ea6\u74f6\u9888\u5728\u54ea\u91cc\uff1f\n\n\u5220\u6570\uff01\n\n```cpp\nif(!t.empty()) \n{\n    for(int i=t.size()-1;i>=0;i--) ys[x].erase(t[i]);\n}\n```\n\u6240\u4ee5\u8fd9\u4e2a `ys` \u4e5f\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u3002\n\n\u5148\u770b\u8981\u652f\u6301\u4ec0\u4e48\uff1a\n\n1. \u5355\u70b9\u67e5\u8be2\n\n2. \u5355\u70b9\u5220\u9664\n\n3. lower_bound\n\n\u4f60\u5f53\u7136\u53ef\u4ee5\u7528\u5e73\u8861\u6811\uff0c\u53ea\u8981\u4f60\u8fc7\u7684\u4e86\u3002\n\n\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\uff08\u5305\u62ec\u81ea\u5df1\uff09\u7b2c\u4e00\u4e2a\u6ca1\u88ab\u5220\u7684\u6570\uff0c\u521d\u59cb\u6307\u5411\u81ea\u5df1\u3002\n\n```cpp\nfa[i]=i\n```\n\n\u5f88\u663e\u7136\uff1a\n\n```cpp\nfa[i]=fa[fa[i]]\n```\n\u8fd8\u6ca1\u6709\u53d1\u73b0\u4ed6\u662f\u4e2a\u5e76\u67e5\u96c6\u5417\uff1f\n\n\u76f4\u63a5\u628a `ys` \u6539\u6210\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nlong long read()\n{\n    long long in=0;short f=1;\n    char c=getchar();\n    while (c>'9'||c<'0')\n    {if(c=='-') f=-1;c=getchar();break;} \n    while (c>='0'&&c<='9') \n    {in=in*10+c-'0';c=getchar();}\n    return in*f;\n}\n#define lowbit(x) (x&(-x))\nlong long tree[500008];\nint n;\ninline long long get_sum(long long wh)\n{\n\tlong long ans=0;\n\tfor(;wh;wh-=lowbit(wh)) ans+=tree[wh];\n\treturn ans;\n}\ninline void add(long long wh,long long v)\n{\n\tfor(;wh<=n;wh+=lowbit(wh)) tree[wh]+=v;\n}\nstruct nds\n{\n\tvector<int>fa,ys;\n\tint find(int i)\n\t{\n\t\tif(i==fa.size()||fa[i]==i)return i;\n\t\telse return fa[i]=find(fa[i]);\n\t}\n\tvoid del(int i)\n\t{\n\t\tfa[i]=i+1;\n\t}\n}t[500008];\nint a[100008],m;\nlong long la;\nint main()\n{\n\tn=read();m=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tfor(register int j=1;j*j<=a[i];j++)\n\t\t{\n\t\t\tif(a[i]%j==0)\n\t\t\t{\n\t\t\t\tt[j].ys.push_back(i);\n\t\t\t\tt[j].fa.push_back(t[j].fa.size());\n\t\t\t\tif(a[i]!=j*j)\n\t\t\t\t{\n\t\t\t\t\tt[a[i]/j].ys.push_back(i);\n\t\t\t\t\tt[a[i]/j].fa.push_back(t[a[i]/j].fa.size());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tadd(i,a[i]);\n\t}\n\twhile(m--)\n\t{\n\t\tshort opt=read();\n\t\tswitch(opt)\n\t\t{\n\t\t\tcase 1:\n\t\t\t{\n\t\t\t\tint l=read()^la,r=read()^la,x=read()^la;\n\t\t\t\tif(x==1||t[x].ys.empty())continue;\n\t\t\t\tfor(int l1=t[x].find(lower_bound(t[x].ys.begin(),t[x].ys.end(),l)-t[x].ys.begin());l1<t[x].ys.size()&&t[x].ys[l1]<=r;l1=t[x].find(l1+1))\n\t\t\t\t{\n\t\t\t\t\tif(a[t[x].ys[l1]]%x==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tadd(t[x].ys[l1],-a[t[x].ys[l1]]+a[t[x].ys[l1]]/x);\n\t\t\t\t\t\ta[t[x].ys[l1]]/=x;\n\t\t\t\t\t}\n\t\t\t\t\tif(a[t[x].ys[l1]]%x)t[x].del(l1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:\n\t\t\t{\n\t\t\t\tint l=read()^la,r=read()^la;\n\t\t\t\tla=get_sum(r)-get_sum(l-1);\n\t\t\t\tprintf(\"%lld\\n\",la);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u4f46\u8bf7\u8bb0\u4f4f\uff1a**\u8fd9\u662f\u7531\u4e43\u9898\uff01**\n\nhttps://www.luogu.com.cn/record/40251233\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n>`vector` \u7684 `push_back` \u5e38\u6570\u8f83\u5927\uff0c\u4e14\u4f1a\u5e26\u6765 $1.5\\sim 3$ \u500d\u7684\u5185\u5b58\u5f00\u9500\u3002  \n$~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~--\\color{black}\\text{c}\\color{red}\\text{ommand\\_block}$\n\n\u8fd9\u4e48\u529e\uff1f\n\n**\u624b\u5199\u5185\u5b58\u6c60\uff01**\n\n\u540c\u65f6\u6ce8\u610f\u7528\u8c03\u548c\u7ea7\u6570\u6c42\u56e0\u6570\u4e2a\u6570\uff0c\u6ce8\u610f\u5361\u5e38\u3002\n\nACcode:\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nchar out[900<<20];\nint wz;\nvoid print(long long x)\n{\n    if(x>9) print(x/10);\n    out[wz++]=x%10+'0';\n}\nnamespace IO {\n    const int SIZE = (1 << 20) + 1;\n    char ibuf[SIZE], *iS, *iT;\n    inline char gc() {\n        return (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, SIZE, stdin), (iS == iT ? EOF : *iS++) : *iS++);\n    }\n    inline void qread() {}\n    template<class T1, class ...T2>\n    inline void qread(T1 &IEE, T2 &... ls) {\n        register T1 __ = 0, ___ = 1;\n        register char ch;\n        while (!isdigit(ch = gc())) ___ = (ch == '-') ? -___ : ___;\n        do {\n            __ = (__ << 1) + (__ << 3) + (ch ^ 48);\n        } while (isdigit(ch = gc()));\n        __ *= ___;\n        IEE = __;\n        qread(ls...);\n        return;\n    }\n}\nusing namespace IO;\n#define lowbit(x) (x&(-x))\nlong long tree[500001];\nint n;\ninline long long get_sum(register int wh)\n{\n    register long long ans=0;\n    for(;wh;wh^=lowbit(wh)) ans+=tree[wh];\n    return ans;\n}\ninline void add(register int wh,long long v)\n{\n    for(;wh<=n;wh+=lowbit(wh)) tree[wh]+=v;\n}\nint o[500008],pool[233333333];\nint* ys[500008],*poi=pool,*fa[500008];\ninline int find(register int x,register int i)\n{\n    if(i==o[x]||fa[x][i]==i)return i;\n    else return fa[x][i]=find(x,fa[x][i]);\n}\nint a[100008],m,nmp;\nlong long la;\nint main()\n{\n    qread(n,m);\n    for(register int i(1);i<=n;++i)\n    {\n        qread(a[i]);add(i,a[i]);\n        if(nmp<a[i])nmp=a[i];\n        o[a[i]]++;\n    }\n\tfor(register int i(1);i<=nmp;i++)\n\t{\n\t\tfor(register int j(i+i);j<=nmp;j+=i)o[i]+=o[j];\n\t}\n\tfor(register int i(1);i<=nmp;i++)\n\t{\n\t\tys[i]=poi;\n\t\tpoi+=o[i];\n\t\tfa[i]=poi;\n\t\tpoi+=o[i];\n\t\tfor(register int j(0);j<o[i];j++)fa[i][j]=j;\n\t\to[i]=0;\n\t}\n\tfor(register int i(1);i<=n;++i)\n    {\n\t\tfor(register int j(1);j*j<=a[i];++j)\n        {\n\t\t\tif(!(a[i]%j))\n            {\n                ys[j][o[j]++]=i;\n                if(a[i]!=j*j)ys[a[i]/j][o[a[i]/j]++]=i;\n            }\n        }\n    }\n    for(register int i(0);i<m;i++)\n    {\n        short opt;\n\t\tqread(opt);\n        switch(opt)\n        {\n            case 1:\n            {\n                int l,r,x;\n                qread(l,r,x);\n                l^=la;r^=la;x^=la;\n                if(o[x]==0||x==1)continue;\n                for(register int l1=find(x,lower_bound(ys[x],ys[x]+o[x],l)-ys[x]);l1<o[x]&&ys[x][l1]<=r;l1=find(x,l1+1))\n                {\n                    if(!(a[ys[x][l1]]%x))\n                    {\n                        add(ys[x][l1],-a[ys[x][l1]]+a[ys[x][l1]]/x);\n                        a[ys[x][l1]]/=x;\n                    }\n                    if(a[ys[x][l1]]%x)fa[x][l1]=l1+1;\n                }\n                break;\n            }\n            case 2:\n            {\n                int l,r;\n                qread(l,r);\n                l^=la;r^=la;\n                la=get_sum(r)-get_sum(l-1);\n                print(la),out[wz++]='\\n';\n                break;\n            }\n        }\n    }\n    fwrite(out,1,wz,stdout);\n    return 0;\n}\n```\n\n\u6c42\u8d5eqwq",
        "postTime": 1609423618,
        "uid": 242524,
        "name": "JRzyh",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013] \u5927\u5b66\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u96be\u70b9\u4e3b\u8981\u5728\u4e8e\u5982\u4f55\u5feb\u901f\u627e\u5230\u9700\u8981\u4fee\u6539\u7684\u6570\u3002\n\n\u770b\u5230\u8fd9\u9898\uff0c\u5bb9\u6613\u60f3\u5230\u5e73\u8861\u6811\uff0c\u7528\u5f88\u591a\u5e73\u8861\u6811\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8d28\u56e0\u6570\u5373\u53ef\u3002\n\n> \u5f88\u9057\u61be\uff0c\u88ab\u6211\u5361\u6389\u4e86\u2014\u2014lxl\n\n\u542c\u5927\u4f6c\u8bf4\u8fd9\u4e1c\u897f\u8fc7\u4e0d\u53bb\uff0c\u5c31\u60f3\u5176\u4ed6\u5e38\u6570\u5c0f\u7684\u65b9\u6cd5\u3002\n\n---\n\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u5bf9\u4e8e\u6bcf\u4e2a\u8d28\u6570\u6211\u4eec\u9700\u8981\u4fee\u6539\u7684\u6570\u7684\u4f4d\u7f6e\u7b49\u4fe1\u606f\uff0c\u5feb\u901f\u6c42\u51fa\u9700\u8981\u4fee\u6539\u7684\u6700\u5de6\u4fa7\uff0c\u7136\u540e\u901a\u8fc7\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6307\u9488\u7684\u7ed3\u6784\u4f9d\u6b21\u904d\u5386\uff0c\u5373\u53ef\u5b8c\u6210\u4fee\u6539\u3002\n\n\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u6574\u4e32\u5e8f\u5217\uff0c\u5e76\u4e14\u56e0\u4e3a\u6709\u4fee\u6539\uff0c\u9700\u8981\u652f\u6301\u5355\u70b9\u6539\u548c\u533a\u95f4\u67e5\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e38\u6570\u5c0f\u8fd8\u597d\u5199\u7684\u6811\u72b6\u6570\u7ec4\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u4fbf\u5f97\u51fa\u4e86\u4e00\u79cd\u89e3\u6cd5\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u518d\u5361\u4ebf\u70b9\u70b9\u5e38\u6570\u5373\u53ef\u3002\n\n---\n\n\u603b\u7ed3\u4e00\u4e0b\uff1a\u6211\u4eec\u7ef4\u62a4\u5e76\u67e5\u96c6\u548c\u6811\u72b6\u6570\u7ec4\uff0c\u5e76\u67e5\u96c6\u7528\u6765\u5feb\u901f\u6c42\u51fa\u6240\u6709\u9700\u8981\u4fee\u6539\u7684\u70b9\uff0c\u6811\u72b6\u6570\u7ec4\u8fdb\u884c\u4fee\u6539\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u5728\u7a0b\u5e8f\u6700\u5f00\u59cb\u9700\u8981\u5bf9\u6240\u6709\u6570\u8fdb\u884c\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{x}+n\\log{n}\\times\\alpha(n))$\u3002\n\n---\n\n\u4e3b\u8981\u4ee3\u7801\uff08\u5df2\u5220\u9664\u8c03\u8bd5\u90e8\u5206\uff09\uff1a\n\n```cpp\nnamespace BIT {\n\tll s[N];\n\tvoid modify(int u, int x) {for(;u<=n;u+=u&(-u)) s[u] += x;}\n\tll query(ll u) {ll res = 0; for(;u;u-=u&(-u)) res += s[u]; return res;}\n}\nnamespace DSU {\n\tvector<int> fa[N], fa2[N];\n\tint find(int u, int v) {return (v == ll(fa2[u].size()) || v == fa2[u][v]) ? v : fa2[u][v] = find(u, fa2[u][v]);}\n}\nusing DSU::fa;\nusing DSU::fa2;\n\nvoid init() {\n\tn = read(); m = read();\n\tfor(int i=1;i<=n;i++) {\n\t\ta[i] = read();\n\t\tint _ = sqrt(a[i]);\n\t\tfor(int j=1;j<=_;j++) {\n\t\t\tif(!(a[i] % j)) {\n\t\t\t\tfa[j].push_back(i);\n\t\t\t\tfa2[j].push_back(fa2[j].size());\n\t\t\t\tif(j * j < a[i]) {\n\t\t\t\t\tfa[a[i]/j].push_back(i);\n\t\t\t\t\tfa2[a[i]/j].push_back(fa2[a[i]/j].size());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tBIT::modify(i, a[i]);\n\t}\n}\nvoid modify(int l, int r, int x) {\n\tint pos = lower_bound(fa[x].begin(), fa[x].end(), l) - fa[x].begin();\n\tfor(int i=DSU::find(x,pos);i<ll(fa[x].size())&&fa[x][i]<=r;i=DSU::find(x,i+1)) {\n\t\tif(!(a[fa[x][i]] % x)) {\n\t\t\tint _ = fa[x][i];\n\t\t\tBIT::modify(_, a[_]/x-a[_]);\n\t\t\ta[_] /= x;\n\t\t}\n\t\tif(a[fa[x][i]] % x) fa2[x][i] = i + 1;\n\t}\n}\nll query(int l, int r) {return BIT::query(r) - BIT::query(l-1);}\n```",
        "postTime": 1600339168,
        "uid": 122461,
        "name": "rui_er",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013]\u5927\u5b66\u3011"
    },
    {
        "content": "upd\uff1a\u589e\u52a0\u4e86\u4e00\u4e2a\u5361\u5e38\u5c0f\u6280\u5de7\uff082021/2/11)\n\n\u9884\u5904\u7406+BIT+\u5927\u529b\u5361\u5e38\n\n\u9996\u5148\u53d1\u73b0\u8981\u628a\u9664\u4ee5 $1$ \u7684\u64cd\u4f5c\u641e\u6389\u4e4b\u540e\u5c31\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u503c\u6700\u591a\u9664 $\\log n$ \u6b21\uff0c\u518d\u6765\u4e00\u4e2a\u533a\u95f4\u4fee\u6539\u5355\u70b9\u67e5\u8be2\u603b\u590d\u6742\u5ea6\u5c31\u662f $n \\log^2 n$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5feb\u901f\u627e\u5230\u6240\u6709\u9700\u8981\u4fee\u6539\u7684\u70b9\u5c31\u53ef\u4ee5\u8ba9\u590d\u6742\u5ea6\u53ef\u4ee5\u8fc7\u6389\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u80fd\u6574\u9664\u8fd9\u4e2a\u6570\u7684\u503c\u7684\u4e0b\u6807\uff0c\u5e76\u4e14\u9002\u65f6\u5220\u9664\uff0c\u8fd8\u53ef\u4ee5\u6c42\u7b2c\u4e00\u4e2a\u4e0b\u6807\u5927\u4e8e $l$ \u3002\n\n\u7b2c\u4e09\u4e2a\u64cd\u4f5c lower_bound \u5373\u53ef\uff0c\u524d\u4e24\u4e2a\u53ef\u4ee5\u5e73\u8861\u6811\uff08\u5982\u679c\u4f60\u5361\u7684\u8fc7\u53bb\u8fd9\u65f6\u9650\uff09\u3002\n\n\u5176\u5b9e\u524d\u4e24\u4e2a\u53ef\u4ee5\u91c7\u7528 [P4145](https://www.luogu.com.cn/problem/P4145) \u7684\u4e00\u4e9b\u5c0f\u6280\u5de7\uff0c\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4\u5728\u8be5\u70b9\u4e4b\u540e\u6700\u540e\u4e00\u4e2a\u88ab\u5220\u9664\u7684\u70b9\uff0c\u521d\u59cb\u8fd8\u662f\u4e3a\u81ea\u5df1\uff08\u56e0\u4e3a\u663e\u7136\u5728\u6c42 $x$ \u4e4b\u540e\u4e0b\u4e00\u4e2a\u9700\u8981\u4fee\u6539\u7684\u70b9\u7684\u65f6\u5019\u662f $\\operatorname{find}(x)+1$\uff09\uff0c\u5220\u9664 $x$ \u70b9\u65f6\u8ba9 $f_{x-1}=\\operatorname{find}(x)$ \u5373\u53ef\u3002\n\n\u7136\u540e lower_bound \u76f4\u63a5\u5728\u4e0b\u6807\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u603b\u590d\u6742\u5ea6 $\\mathcal{O}(n\\sqrt{a_i}+n \\log^2 n)$\uff0c\u5e76\u67e5\u96c6\u4e0d\u8ba1\u3002\n\n\u4f46\u8fd9\u662f Ynoi\uff0c\u8fd9\u4e48\u5199\u4f30\u8ba1\u53ea\u80fd\u8fc7\u6781\u5c11\u7684\u51e0\u4e2a\u70b9\u3002\n\n\u4e8e\u662f\u5f00\u59cb\u5361\u5e38\u3002\n\n\u9996\u5148\uff0c\u5feb\u8bfb\u5feb\u8f93\u3002\uff08\u6211\u642c\u7684 happydef [\u7684](https://www.luogu.com.cn/blog/happydef-blog/solution-p5610)\uff0c\u611f\u8c22\uff09\n\n\u5176\u6b21\uff0c\u6574\u9664\u6bcf\u4e2a\u56e0\u6570\u7684\u6570\u7528 vector \u4f1a T \u98de\uff0c\u53ef\u4ee5\u5199\u4e2a\u5185\u5b58\u6c60\u6765\u53ea\u4f7f\u7528\u6570\u7ec4\uff0c\u5230\u6b64\u53ef\u4ee5\u5f97\u5230 $22$ \u5206\u5de6\u53f3\uff0c\u7ee7\u7eed\u4f18\u5316\u3002\n\n\u7136\u540e\u53d1\u73b0\u590d\u6742\u5ea6\u74f6\u9888\u5728\u9884\u5904\u7406\u5206\u89e3\u8d28\u56e0\u6570\u7684 $n\\sqrt{a_i}$ \u8fd9\u91cc\uff0c\u4f46\u662f\u5176\u5b9e\u53ea\u6709 $n \\sqrt[3]{a_i}$ \u4e2a\u56e0\u6570\uff0c\u8003\u8651\u679a\u4e3e\u6bcf\u4e2a\u56e0\u6570\u7684\u500d\u6570\uff0c\u5f00\u6876\u8bb0\u5f55\u6bcf\u4e2a\u6570\u7684\u4e2a\u6570\uff0c\u518d\u8bb0\u5f55\u4e0b\u6807\u3002\n\n\u4f46\u662f \u8fd9\u6837\u4f1a\u53d1\u73b0\u6bcf\u4e2a\u56e0\u6570\u7684\u4e0b\u6807\u5c31\u4e0d\u5355\u8c03\u4e86\uff0c\u53ef\u4ee5\u5148\u6392\u5e8f $a$ \u4e4b\u540e\u518d\u5904\u7406\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u6837\u8fd8\u662f\u4e0d\u5355\u8c03\uff0c\u6240\u4ee5\u76f4\u63a5\u5bf9\u6574\u9664\u6bcf\u4e2a\u56e0\u6570\u7684\u6570\u7684\u4e0b\u6807\u6392\u4e2a\u5e8f\uff0c\u590d\u6742\u5ea6\u770b\u8d77\u6765\u5f88\u5927\uff0c\u4f46\u7531\u4e8e\u5e76\u975e\u5bf9\u6574\u4e2a\u5185\u5b58\u6c60\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u662f\u4e00\u4e2a\u8fdc\u5c0f\u4e8e $\\sum\\limits_{i=2}^n \\dfrac{n}{i}\\log \\dfrac{n}{i}$ \u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u5f97\u5230 $96$ \u5206\u3002\n\n\u590d\u6742\u5ea6\u7684\u74f6\u9888\u8f6c\u79fb\u5230\u4e86\u6392\u5e8f\u8fd9\u91cc\uff0c\u53d1\u73b0\u5e76\u4e0d\u662f\u6240\u6709\u7684\u56e0\u6570\u90fd\u9700\u8981\u6392\u5e8f\uff0c\u53ea\u6709\u5c11\u6570\u4e0d\u5355\u8c03\u7684\u56e0\u6570\u9700\u8981\u6392\u5e8f\uff08\u5176\u5b9e\uff0c\u5927\u90e8\u5206\u662f\u5355\u8c03\u7684\uff09\uff0c\u7edf\u8ba1\u6574\u9664\u8be5\u56e0\u6570\u7684\u6570\u65f6\uff0c\u5224\u65ad\u662f\u5426\u5355\u8c03\u589e\u5373\u53ef\uff0c\u6709 $98$ \u5206\u3002\n\n\u53d1\u73b0\u56e0\u6570\u6709 $5\\times 10^5$ \u79cd\uff0c\u4f46\u64cd\u4f5c\u6700\u591a\u53ea\u6709 $10^5$ \u79cd\u56e0\u6570\u9700\u8981\u5904\u7406\uff0c\u8003\u8651\u5728\u4f7f\u7528\u65f6\u518d\u6392\u5e8f\uff0c\u53ef\u4ee5\u663e\u8457\u53d8\u5c0f\u5e38\u6570\u3002\n\n\u5173\u4e8e\u5185\u5b58\u6c60\u7684\u5927\u5c0f\uff0c\u5f00\u5230 $2\\times 10^7$ \u5230 $2.5\\times10^7$ \u5373\u53ef\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u901a\u8fc7\u4e86\u8fd9\u9898\uff08\u5982\u679c\u4f60\u5e38\u6570\u5199\u7684\u5c0f\u7684\u8bdd\uff09\n\n\u590d\u6742\u5ea6\u96be\u4ee5\u8ba1\u7b97\uff0c\u53cd\u6b63\u80fd\u8fc7\u3002\n\n\u7ee7\u7eed\u5361\uff1a\u53d1\u73b0\u4e0b\u6807\u7684\u5185\u5b58\u6c60\u503c\u57df\u662f $\\left[1,n\\right]$ \u7684\uff0c\u8003\u8651\u6876\u6392\u5e8f\u3002\u4f46\u662f\u6876\u6392\u5e8f\u5e76\u4e0d\u4e25\u683c\u4f18\u4e8e sort\uff0c\u6876\u6392\u5e8f\u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(n)$ \u5de6\u53f3\uff0csort \u590d\u6742\u5ea6\u4e3a $\\mathcal{O}(len \\log{len})$\uff0c\u5176\u4e2d $len=r-l+1$\uff0c\u5224\u4e00\u4e0b\u54ea\u4e2a\u5927\u5373\u53ef\u3002\n\n\u7136\u540e\u5c31\u6700\u4f18\u89e3 rk1 \u4e86\u3002\n\n\u6254\u4e2a\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <queue>\n#include <map>\nusing namespace std;\ntypedef long long ll;\nstruct IO_Tp {\n    const static ll _I_Buffer_Size = 2 << 22;\n    char _I_Buffer[_I_Buffer_Size], *_I_pos = _I_Buffer;\n\n    const static ll _O_Buffer_Size = 2 << 22;\n    char _O_Buffer[_O_Buffer_Size], *_O_pos = _O_Buffer;\n\n    IO_Tp() { fread(_I_Buffer, 1, _I_Buffer_Size, stdin); }\n    ~IO_Tp() { fwrite(_O_Buffer, 1, _O_pos - _O_Buffer, stdout); }\n\n    IO_Tp &operator>>(int &res) {\n        ll f=1;\n        while (!isdigit(*_I_pos)&&(*_I_pos)!='-') ++_I_pos;\n        if(*_I_pos=='-')f=-1,++_I_pos;\n        res = *_I_pos++ - '0';\n        while (isdigit(*_I_pos)) res = res * 10 + (*_I_pos++ - '0');\n        res*=f;\n        return *this;\n    }\n\n    IO_Tp &operator<<(ll n) {\n        if(n<0)*_O_pos++='-',n=-n;\n        static char _buf[10];\n        char *_pos = _buf;\n        do\n            *_pos++ = '0' + n % 10;\n        while (n /= 10);\n        while (_pos != _buf) *_O_pos++ = *--_pos;\n        return *this;\n    }\n\n    IO_Tp &operator<<(char ch) {\n        *_O_pos++ = ch;\n        return *this;\n    }\n} IO;\n//1e5,5e5\nint n,m,cnt;\nint ind[500005],tot[500005];\nll sumans;\nll c[100005],maxa,mina=1e9,p[200005];\nll a[100005];\nbool flag[500005];\nint f[25000005],inde[25000005],t[100005];\nstruct NOde\n{\n    int num,l,r;\n}nd[500005];\ninline int lowbit(int x){ return x&-x;}\ninline void upd(int x,ll k){ while(x<=n){c[x]+=k;x+=lowbit(x);}}\ninline ll query(int x){ll res=0;while(x>=1){res+=c[x];x-=lowbit(x);}return res;}\nint fin(int x,int r)\n{\n    while(x!=f[x]&&x<=r) x=f[x]=f[f[x]];\n    return x;\n}\nstruct nodee\n{\n    int shu,indd;\n}b[200005];\nbool cmp(nodee aa,nodee bb)\n{\n    if(aa.shu!=bb.shu) return aa.shu<bb.shu;\n    return aa.indd<bb.indd;\n}\nvoid sortt(int l,int r)\n{\n\tif(l>r) return;\n\tint len=r-l+1;\n\tif(len*int(log2(len))<=2*len+2*n)//\u6309\u7167\u5faa\u73af\u6b21\u6570\u6392\u7684\uff0c\u548c\u590d\u6742\u5ea6\u6bd4\u8f83\u65e0\u592a\u5927\u533a\u522b\n\t{\n\t\tsort(inde+l,inde+r+1);\n\t}\n\telse\n\t{\n\t\tfor(int i=1;i<=n;i++) t[i]=0;\n\t\tfor(int i=l;i<=r;i++)\n\t\t{\n\t\t\tt[inde[i]]++;\n\t\t}\n\t\tint cntt=l;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(t[i]>0)\n\t\t\t{\n\t\t\t\tfor(int j=1;j<=t[i];j++) inde[cntt]=i,cntt++;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n    //freopen(\"test.txt\",\"r\",stdin);\n    //freopen(\"test1.txt\",\"w\",stdout);\n\tmemset(flag,true,sizeof(flag));\n    IO>>n>>m;\n    for(register int i=1;i<=n;i++)\n    {\n        int tmp;\n        IO>>tmp;\n        a[i]=b[i].shu=tmp;\n        b[i].indd=i;\n        upd(i,tmp);\n        maxa=(maxa>a[i]?maxa:a[i]);\n        mina=(a[i]<mina?a[i]:mina);\n    }\n    sort(b+1,b+n+1,cmp);\n    for(register int i=1;i<=n;i++)\n    {\n        if(b[i].shu!=1&&b[i].shu!=0&&ind[b[i].shu]==0) ind[b[i].shu]=i;\n        tot[b[i].shu]++;\n    }\n    cnt=1;\n    for(register int i=2;i<=maxa;i++)\n    {\n        nd[i].l=cnt;\n        nd[i].r=cnt-1;\n        for(register int j=i;j<=maxa;j+=i)\n        {\n            if(tot[j]>0)\n            {\n                for(register int k=ind[j];k<=ind[j]+tot[j]-1;k++)\n                {\n                    nd[i].r++;\n                    f[nd[i].r]=nd[i].r;\n                    inde[nd[i].r]=b[k].indd;\n                    if(nd[i].r!=nd[i].l&&inde[nd[i].r-1]>b[k].indd) flag[i]=false;\n                }\n            }\n        }\n        cnt=nd[i].r+1;\n    }\n    ll lastans=0;\n    for(register int i=1;i<=m;i++)\n    {\n        int opt,l,r,x;\n        IO>>opt>>l>>r;\n        if(opt==2)\n        {\n            l^=lastans;\n            r^=lastans;\n            lastans=query(r)-query(l-1);\n            IO<<lastans<<'\\n';\n        }\n        if(opt==1)\n        {\n            IO>>x;\n            l^=lastans;\n            r^=lastans;\n            x^=lastans;\n            if(x==1||x==0) continue;\n            if(x>maxa) continue;\n            if(nd[x].l>nd[x].r) continue;\n            if(!flag[x]) sortt(nd[x].l,nd[x].r),flag[x]=true;\n            int fir=lower_bound(inde+nd[x].l,inde+nd[x].r+1,l)-inde;\n            if(fir>nd[x].r) continue;\n            for(register int j=fir;inde[j]<=r&&j<=nd[x].r;j=fin(j,nd[x].r)+1)\n            {\n                int indt=inde[j];\n                if(a[indt]%x!=0)\n                {\n                    f[j-1]=j;\n                    continue;\n                }\n                a[indt]/=x;\n                if(a[indt]%x!=0) f[j-1]=j;\n                upd(indt,-a[indt]*(x-1));\n            }\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1611482748,
        "uid": 191868,
        "name": "monstersqwq",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013] \u5927\u5b66\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5610)\n\n## \u9898\u610f\n\n- \u975e\u8d1f\u6574\u6570\u5e8f\u5217\uff0c\u652f\u6301 \u533a\u95f4\u548c\u67e5\u8be2 \u548c \u533a\u95f4\u6240\u6709\u67d0\u6570\u500d\u6570\u9664\u4ee5\u5176\u3002\n\n## Sol\n\n~~\u771f\u5c31\u5361\u5e38 \u6700\u540e\u6539\u6210\u6307\u9488\u624d\u884c~~\n\n\u8003\u8651\u4e00\u4e2a\u6570\u7684\u56e0\u6570\u4e2a\u6570\u4e0d\u8d85\u8fc7 $2\\sqrt{a_i}$\uff0c\u4e0d\u59a8\u5bf9\u6bcf\u4e2a\u56e0\u6570\u5f00\u94fe\u8868\uff0c\u8bb0\u5f55\u5176\u500d\u6570\u4f4d\u7f6e\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u6570\u6700\u591a\u80fd\u88ab\u64cd\u4f5c $\\log{a_i}$ \u6b21\uff0c\u6211\u4eec\u6bcf\u6b21\u66b4\u529b\u4fee\u6539\u94fe\u8868\u5c31\u884c\u4e86\u3002\n\n\u533a\u95f4\u548c\u53ef\u4ee5\u5199\u4e2a BIT\uff0c\u6bd5\u7adf\u5e38\u6570\u5c0f\u3002\uff08\n\n\u603b\u590d\u6742\u5ea6 $O(n\\sqrt{a_i}+n\\log n\\log {a_i})$\u3002\n\n```cpp\n// wish to get better qwq\n\n#include<bits/stdc++.h>\n#define re register int\n#define pb push_back\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> void rd(T &x){\n\tint fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\n\n// ---------- IO ---------- //\n\nconst int N=5e5+5;\nint n,m,a[N];\nvector<int> f[N],fa[N];\n\nll sum[N],ans;\n\ninline int lowbit(int x){return x&(-x);}\n\ninline void add(int x,ll k){\n\twhile(x<=n) sum[x]+=k,x+=lowbit(x);\n}\n\ninline ll query(int x){\n\tll s=0;\n\twhile(x) s+=sum[x],x-=lowbit(x);\n\treturn s;\n}\n\n// ---------- BIT ---------- //\n\ninline int found(int pos,int x){\n\tif(x>=fa[pos].size()) return x;\n\treturn fa[pos][x]==x?fa[pos][x]:fa[pos][x]=found(pos,fa[pos][x]);\n}\n\n// ---------- DSU ---------- //\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);\n\tfor(re i=1;i<=n;++i){\n\t\trd(a[i]);add(i,a[i]);\n\t\tfor(re j=1;j*j<=a[i];++j)\n\t\t\tif(a[i]%j==0){\n\t\t\t\tf[j].pb(i);fa[j].pb(fa[j].size());\n\t\t\t\tif(j*j!=a[i]) f[a[i]/j].pb(i),fa[a[i]/j].pb(fa[a[i]/j].size());\n\t\t\t}\n\t}\n\tint op,l,r,x;\n\tfor(re i=1;i<=m;++i){\n\t\trd(op);rd(l);rd(r);l^=ans;r^=ans;\n\t\tif(op==1){\n\t\t\trd(x);x^=ans;\n\t\t\tif(x==1) continue;\n\t\t\tint st=lower_bound(f[x].begin(),f[x].end(),l)-f[x].begin();\n\t\t\tfor(re j=found(x,st);j<f[x].size()&&f[x][j]<=r;j=found(x,j+1)){\n\t\t\t\tif(a[f[x][j]]%x==0) add(f[x][j],a[f[x][j]]/x-a[f[x][j]]),a[f[x][j]]/=x;\n\t\t\t\tif(a[f[x][j]]%x!=0) fa[x][j]=found(x,j+1);\n\t\t\t}\n\t\t}\n\t\telse wr(ans=query(r)-query(l-1)),puts(\"\");\n\t}\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n```\n\n~~\u7136\u540e\u4f60\u5c31\u53d1\u73b0\u88ab\u5361\u5e38\u4e86~~\n\n\u9884\u8ba1\u5f97\u5206 $62$\u3002\n\n\u6211\u4eec\u8003\u8651\u5361\u5e38\u3002\uff08\n\n\u628a\u6570\u7ec4\u5168\u90e8\u6539\u6210\u6307\u9488\u5373\u53ef\u3002\uff08\n\n\u6ce8\u610f\u7ec6\u8282\uff0c\u4e0d\u8981 $<=$ \u5199\u6210 $<$\u3002\uff08\n\n\u4f1a RE \u98de\u3002\uff08\n\n```cpp\n// wish to get better qwq\n\n#include<bits/stdc++.h>\n#define re register int\n#define pb push_back\n#define lb lower_bound\n#define ub upper_bound\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> void rd(T &x){\n\tint fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\n\n// ---------- IO ---------- //\n\nconst int N=5e5+5;\nint n,m,a[N],cnt[N],maxn,*p[N],node[N*505],*tp=node;\n\nll sum[N],ans;\n\ninline int ma(int x,int y){return x<y?y:x;}\n\ninline void add(int x,ll k){\n\twhile(x<=n) sum[x]+=k,x+=x&(-x);\n}\n\ninline ll query(int x){\n\tll s=0;\n\twhile(x) s+=sum[x],x^=x&(-x);\n\treturn s;\n}\n\n// ---------- BIT ---------- //\n\nstruct DSU{\n\tint *fa;\n\tinline void init(int n){for(re i=0;i<n;++i) fa[i]=i;}\n\tinline int found(int x){return fa[x]==x?x:fa[x]=found(fa[x]);}\n}nxt[N];\n\n// ---------- DSU ---------- //\n\ninline void modify(int l,int r,int x){\n\tl=lb(p[x],p[x]+cnt[x],l)-p[x];\n\tr=ub(p[x],p[x]+cnt[x],r)-p[x]-1;\n\tif(l>r) return ;\n\tfor(re nw=nxt[x].found(l);nw<=r;nw=nxt[x].found(nw+1)){\n\t\tint t=p[x][nw];\n\t\tif(a[t]%x==0) add(t,a[t]/x-a[t]),a[t]/=x;\n\t\tif(nw>=r) break;\n\t\tif(a[t]%x) nxt[x].fa[nw]=nxt[x].found(nw+1);\n\t}\n}\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);rd(m);\n\tfor(re i=1;i<=n;++i){\n\t\trd(a[i]);add(i,a[i]);\n\t\tcnt[a[i]]++;maxn=ma(maxn,a[i]);\n\t}\n\tfor(re i=1;i<=maxn;++i)\n\t\tfor(re j=i+i;j<=maxn;j+=i) cnt[i]+=cnt[j];\n\tfor(re i=1;i<=maxn+1;++i)\n\t\tif(cnt[i]){\n\t\t\tp[i]=tp;tp+=cnt[i];\n\t\t\tnxt[i].fa=tp;nxt[i].init(cnt[i]);\n\t\t\ttp+=cnt[i];cnt[i]=0;\n\t\t}\n\tfor(re i=1;i<=n;++i){\n\t\tfor(re j=1;j*j<=a[i];++j)\n\t\t\tif(a[i]%j==0){\n\t\t\t\tp[j][cnt[j]++]=i;\n\t\t\t\tif(j*j!=a[i]) p[a[i]/j][cnt[a[i]/j]++]=i;\n\t\t\t}\n\t}\n\tint op,l,r,x;\n\tfor(re i=1;i<=m;++i){\n\t\trd(op);rd(l);rd(r);l^=ans;r^=ans;\n\t\tif(op==1){\n\t\t\trd(x);x^=ans;\n\t\t\tif(x==1) continue;\n\t\t\tmodify(l,r,x);\n\t\t}\n\t\telse wr(ans=query(r)-query(l-1)),puts(\"\");\n\t}\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n```",
        "postTime": 1610239345,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "[Ynoi2013] \u5927\u5b66 \u9898\u89e3 DSU"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u89c2\u5bdf\u5230\u4e00\u4e2a\u6570\u6700\u591a\u88ab\u9664 $\\log a$ \u6b21\n\n\u6240\u4ee5\u8fd9\u53c8\u662f\u4e00\u9053[\u82b1\u795e](https://www.luogu.com.cn/problem/P4145)\u5957\u8def\u9898\n\n\u5177\u4f53\u8bf4\uff0c\u5bf9 $\\forall x$\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4 $a_i$ \u4e2d $x$ \u7684\u500d\u6570\uff0c\u6bcf\u6b21\u4fee\u6539\u65f6\u4e8c\u5206\u627e\u5230 $l$ \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7528\u5e76\u67e5\u96c6\u5f80\u540e\u8df3\uff0c\u5982\u679c\u53d1\u73b0\u9664\u5b8c\u4ee5\u540e\u5df2\u7ecf\u4e0d\u662f $x$ \u7684\u500d\u6570\u4e86\u5c31\u628a\u8fd9\u4e2a\u70b9\u4ece\u5e76\u67e5\u96c6\u4e2d\u5220\u9664\uff08\u5373\u5c06\u8fd9\u4e2a\u70b9\u548c\u4e0b\u4e00\u4e2a\u70b9\u5408\u5e76\uff09\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt a+n\\log a)$\u3002\n\n\u88ab\u5361\u5e38\u7684\u4ee3\u7801\uff1a~~\uff08\u76f8\u4fe1\u51ed\u501f\u5404\u4f4d\u9ad8\u8d85\u7684\u5361\u5e38\u80fd\u529b\u4e00\u5b9a\u53ef\u4ee5AC\uff09~~\n\n```cpp\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll; \nstruct IO_Tp {\n    const static ll _I_Buffer_Size = 2 << 22;\n    char _I_Buffer[_I_Buffer_Size], *_I_pos = _I_Buffer;\n\n    const static ll _O_Buffer_Size = 2 << 22;\n    char _O_Buffer[_O_Buffer_Size], *_O_pos = _O_Buffer;\n\n    IO_Tp() { fread(_I_Buffer, 1, _I_Buffer_Size, stdin); }\n    ~IO_Tp() { fwrite(_O_Buffer, 1, _O_pos - _O_Buffer, stdout); }\n\n    IO_Tp &operator>>(int &res) {\n    \tll f=1;\n        while (!isdigit(*_I_pos)&&(*_I_pos)!='-') ++_I_pos;\n        if(*_I_pos=='-')f=-1,++_I_pos;\n        res = *_I_pos++ - '0';\n        while (isdigit(*_I_pos)) res = res * 10 + (*_I_pos++ - '0');\n        res*=f;\n        return *this;\n    }\n\n    IO_Tp &operator<<(ll n) {\n    \tif(n<0)*_O_pos++='-',n=-n;\n        static char _buf[10];\n        char *_pos = _buf;\n        do\n            *_pos++ = '0' + n % 10;\n        while (n /= 10);\n        while (_pos != _buf) *_O_pos++ = *--_pos;\n        return *this;\n    }\n\n    IO_Tp &operator<<(char ch) {\n        *_O_pos++ = ch;\n        return *this;\n    }\n} IO;\n\nconst ll N=100005,A=500005;\nint n,m,a[N];\nll bit[N];\nvoid update(int id,int x){for(;id<=n;id+=id&-id)bit[id]+=x;}\nll sum(int id){ll ret=0;for(;id;id-=id&-id)ret+=bit[id];return ret;}\nvector<int>f[A],id[A];\nint find(int k,int x){return x==id[k].size()||x==id[k][x]?x:id[k][x]=find(k,id[k][x]);}\nint main(){\n\tIO>>n>>m;\n\tfor(int i=1;i<=n;++i)IO>>a[i],update(i,a[i]);\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j*j<=a[i];++j)if(a[i]%j==0){\n\t\t\tf[j].push_back(i);\n\t\t\tid[j].push_back(id[j].size());\n\t\t\tif(j*j!=a[i]){\n\t\t\t\tf[a[i]/j].push_back(i);\n\t\t\t\tid[a[i]/j].push_back(id[a[i]/j].size());\n\t\t\t} \n\t\t}\n\tfor(ll lastans=0;m--;){\n\t\tint op,l,r,x;\n\t\tIO>>op;\n\t\tif(op==1){\n\t\t\tIO>>l>>r>>x;\n\t\t\tl^=lastans,r^=lastans,x^=lastans;\n\t\t\tif(x==1)continue;\n\t\t\tint L=lower_bound(f[x].begin(),f[x].end(),l)-f[x].begin();\n\t\t\tfor(int i=find(x,L),v;i<f[x].size()&&f[x][i]<=r;i=find(x,i+1)){\n\t\t\t\tif(a[f[x][i]]%x==0)v=a[f[x][i]]/x,update(f[x][i],v-a[f[x][i]]),a[f[x][i]]=v;\n\t\t\t\telse v=1;\n\t\t\t\tid[x][i]=(v%x!=0?find(x,i+1):id[x][i]);\n\t\t\t}\n\t\t}else{\n\t\t\tIO>>l>>r;\n\t\t\tl^=lastans,r^=lastans;\n\t\t\tlastans=sum(r)-sum(l-1);\n\t\t\tIO<<lastans<<'\\n';\n\t\t} \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1605803576,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013]\u5927\u5b66\u3011"
    },
    {
        "content": "Ynoi\u4e8c\u8840\uff08\n\n# $\\texttt{Desciption}$\n\n\u8fd9\u9898\u9898\u9762\u53cb\u597d\uff0c\u76f4\u63a5[\u770b\u9898\u9762](https://www.luogu.com.cn/problem/P5610)\n\n# $\\texttt{Solution}$\n\n\u8003\u8651\u5230\u4e00\u4e2a\u6570\u7684\u8d28\u56e0\u6570\u4e2a\u6570\u6700\u591a\u4e0d\u4f1a\u8d85\u8fc7 $O(logn)$ \u4e2a\uff0c\u56e0\u6b64\u9664\u6cd5\u6700\u591a\u53ea\u4f1a\u6267\u884c $O(nlogn)$ \u6b21\u3002\n\n\u90a3\u4e48\u5982\u4f55\u627e\u51fa\u4e00\u6bb5\u533a\u95f4\u5185\u80fd\u88ab $x$ \u6574\u9664\u7684\u6570\u5462\uff1f\n\n\u628a**\u4e00\u5f00\u59cb**\u6240\u6709\u80fd\u88ab $x$ \u6574\u9664\u7684\u6570\u653e\u5230\u4e00\u4e2a\u6570\u636e\u7ed3\u6784 $s_x$ \u4e2d\uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u91cc\u9762\u4ece\u5c0f\u5230\u5927\u5b58\u50a8\u7740\u8fd9\u4e9b\u4e00\u5f00\u59cb\u80fd\u88ab $x$ \u6574\u9664\u7684\u6570\u7684\u4e0b\u6807\u3002\u6bcf\u6b21\u6211\u4eec\u9700\u8981\u67e5\u8be2`lower_bound`\uff08\u67e5\u8be2\u7b2c\u4e00\u4e2a\u4e0b\u6807\u5927\u4e8e\u7b49\u4e8e $l$ \u7684\u4f4d\u7f6e\uff09\uff0c\u5220\u9664\uff08\u6709\u53ef\u80fd\u8fd9\u4e2a\u6570\u4e00\u5f00\u59cb\u80fd\u88ab\u6574\u9664\u4f46\u9664\u7740\u9664\u7740\u5c31\u53d8\u4e86\uff0c\u6bd4\u5982 $20$ \u80fd\u88ab $2$ \u6574\u9664\uff0c\u4f46 $20$ \u9664\u4e86 $4$ \u540e\u5c31\u4e0d\u80fd\u4e86\uff09\u3002\n\n~~\u4f5c\u4e3a\u4e00\u4e2a\u4e0d\u4f1a\u5199\u5e73\u8861\u6811\u7684\u667a\u969c\uff0c\u6211\u2026\u2026~~\n\n\u8c8c\u4f3c\u6211\u89c1\u8fc7\u8fd9\u79cd\u5957\u8def\uff0c\u5927\u6982\u662f\u7528\u4e00\u4e2a\u5e76\u67e5\u96c6\u7ef4\u62a4\u5b83\u540e\u9762\uff08\u5305\u62ec\u5b83\u81ea\u5df1\uff09\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u6ca1\u88ab\u5220\u9664\u7684\u4f4d\u7f6e\u3002\u6bcf\u5220\u9664 $i$ \u4f4d\u7f6e\uff0c$fa_i=find(i+1)$ \u5373\u53ef\u3002\n\n\u7136\u540e\u7528BIT\u7ef4\u62a4\u533a\u95f4\u548c\u5373\u53ef\u3002\u6ce8\u610f\u7ef4\u62a4\u539f\u59cb\u7684 $a$ \u6570\u7ec4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\u4e0d\u597d\u8bf4\uff0c\u5927\u6982 $O(n\\sqrt{n}+nlogn+mlogn)$\uff1f\n\n\u4e8e\u662f\u4f60\u6109\u5feb\u7684\u88ab\u5361\u5e38\u5361\u621066\u2026\u2026\n\n# ~~\u4f18\u5316~~\u5361\u5e38\uff1a\n\n\n~~\u5361\u5e38\u6307\u5bfc\uff1amonsters\u8c14\u8c14\u795e\u7287~~\n\n0. \u4f17\u6240\u5468\u77e5\uff0c\u7531\u4e43\u9898\u5e94\u8be5\u5148\u6253`fread`\u518d\u6253\u6b63\u89e3\u3002\n\n1. \u4f60\u4f1a\u53d1\u73b0 $O(n\\sqrt{n})$ \u7684\u590d\u6742\u5ea6\u975e\u5e38\u7684\u4e0d\u4f18\u79c0\uff0c\u4e8e\u662f\u6539\u4e3a\u6876+\u7b5b\u6cd5\u5206\u89e3\u8d28\u56e0\u6570\u3002\n\n2. \u4f60\u4f1a\u53d1\u73b0\u8fd9\u6837\u9700\u8981\u5bf9\u4e0b\u6807\u6392\u5e8f\u3002\u4f46\u662f\u4e00\u6392\u5e8f\u53cd\u800c\u8d8a\u6765\u8d8a\u6162\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u6bcf\u6b21\u64cd\u4f5c\u7684\u65f6\u5019\u518d\u6392\u5e8f\uff0c\u7528\u4e00\u4e2a $vis$ \u6570\u7ec4\u8bb0\u5f55\u662f\u5426\u6392\u8fc7\u5e8f\u3002\n\n3. \u4f60\u4f1a\u53d1\u73b0\u8fd8\u662f\u4f1aT\uff0c\u6240\u4ee5\u6211\u4eec\u6392\u5e8f\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u987a\u5e8f\uff0c\u5982\u679c\u5df2\u7ecf\u662f\u987a\u5e8f\u4e86\u90a3\u4e48\u5c31\u4e0d\u7528\u6392\u5e8f\u4e86\u3002\n\n4. \u7528vector\u8fd8\u60f3\u8fc7Ynoi\uff1f\u624b\u5199\u5185\u5b58\u6c60\u5373\u53ef\u3002\n\n5. \u6700\u540e\uff0c\u53cd\u6b63\u6211\u7684\u4ee3\u7801\u5230\u8fd9\u91cc\u5c31\u8fc7\u4e86\uff0c\u5982\u679c\u4f60\u8fd8\u662fT\uff0c\u5efa\u8bae\u624b\u52a8\u4e8c\u5206\u5185\u5b58\u6c60\u5927\u5c0f\u3002\n\n# $\\texttt{Code}$\n\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#define gc (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 65536, stdin), p1 == p2) ? EOF : *p1 ++)\n\nchar buf[65536], *p1, *p2;\ninline int read()  {\n\tchar ch;\n\tint x(0);\n\twhile ((ch = gc) < 48);\n\tdo x = x * 10 + ch - 48; while ((ch = gc) >= 48);\n\treturn x;\n}\n\nconst int N = 500005;\ninline int max(const int x, const int y) {return x > y ? x : y;}\n\nint a[N], mem[45000005], tot, n;\nstruct Vector {\n\tint stpos, endpos;\n\tinline void push_back(const int x) {\n\t\tstpos ? mem[endpos = ++ tot] = x : mem[stpos = endpos = ++ tot] = x;\n\t}\n\tinline int& operator [] (const int x) const {return mem[stpos + x];}\n\tinline int* begin() {return mem + stpos;}\n\tinline int *end() {return mem + endpos + 1;}\n\tinline int size() {return stpos ? endpos - stpos + 1 : 0;}\n\tinline bool empty() {return !stpos;}\n};\nlong long c[N];\nstd::vector<int> cnt[N];\nbool vis[N];\ninline void update(const long long x, const long long d) {\n\tfor (int i(x); i <= n; i += (i & ~i + 1)) c[i] += d;\n}\ninline long long query(const int x) {\n\tlong long sum(0LL);\n\tfor (int i(x); i; i -= (i & ~i + 1)) sum += c[i];\n\treturn sum;\n}\n\nstruct Reap {\n\tVector fac, fa;\n\tint find(const int x) {return fa[x] == x ? x : fa[x] = find(fa[x]);}\n\tinline void upd(const int l, const int r, const int x) {\n\t\tif (!vis[x]) {\n\t\t\tvis[x] = true;\n\t\t\tif (fac.size()) {\n\t\t\t\tbool flag(0);\n\t\t\t\tfor (int i(0); i < fac.size() - 1; ++ i)\n\t\t\t\tif (fac[i] > fac[i + 1]) {flag = 1; break;}\n\t\t\t\tif (flag) std::sort(fac.begin(), fac.end());\n\t\t\t}\n\t\t\telse return;\n\t\t\tfor (int i(0); i <= fac.size(); ++ i) fa.push_back(i);\n\t\t}\n\t\tif (fac.empty()) return;\n\t\tint i(find(std::lower_bound(fac.begin(), fac.end(), l) - fac.begin()));\n\t\twhile (i < fac.size() && fac[i] <= r) {\n\t\t\tif (a[fac[i]] % x) fa[i] = find(i + 1);\n\t\t\telse update(fac[i], a[fac[i]] / x - a[fac[i]]), a[fac[i]] /= x;\n\t\t\ti = find(i + 1);\n\t\t}\n\t}\n} s[N];\n\nint main() {\n\tint m, t(0);\n\tlong long last(0LL);\n\tn = read(), m = read();\n\tfor (int i(1); i <= n; ++ i)\n\t\tt = max(t, a[i] = read()), update(i, a[i]), cnt[a[i]].push_back(i);\n\tfor (int i(2); i <= t; ++ i)\n\t\tfor (int j(i); j <= t; j += i)\n\t\t\tfor (auto k : cnt[j]) s[i].fac.push_back(k);\n\twhile (m --) {\n\t\tint op(read()), l(read() ^ last), r(read() ^ last), x;\n\t\tif (op == 1) {\n\t\t\tx = read() ^ last;\n\t\t\tif (x != 1) s[x].upd(l, r, x);\n\t\t}\n\t\telse printf(\"%lld\\n\", last = query(r) - query(l - 1));\n\t}\n}\n```",
        "postTime": 1613014883,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013] \u5927\u5b66\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u533a\u95f4\u67e5 $x$ \u7684\u500d\u6570\u5e76\u9664\u6389\uff0c\u533a\u95f4\u67e5\u548c\u3002\n\n## \u9898\u89e3\n\n\u5e73\u8861\u6811\u3002\n\n\u9996\u5148\u6709\u4e2a\u57fa\u672c\u7684\u60f3\u6cd5\u5c31\u662f\u6309 $a_{i}$ \u5f00\u5e73\u8861\u6811\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e2a $a_{i}$ \u90fd\u5f00\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u51715e5\u68f5\uff0c\u7b2c $i$ \u68f5\u5e73\u8861\u6811\u7ef4\u62a4\u7684\u503c\u662f\u6240\u6709 $a_{i}$ \u7684\u500d\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\uff0c\u7528\u5904\u540e\u9762\u8bb2\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u5c0f\u6027\u8d28\uff0c\u4e00\u4e2a\u6b63\u6574\u6570 $A$ \u6700\u591a\u88ab\u6574\u9664 $\\log_{2}A$ \u6b21\uff0c\u8fd9\u4e2a\u5f88\u597d\u60f3\uff0c\u6bcf\u6b21\u90fd\u81f3\u5c11\u51cf\u5c11\u4e00\u534a\u3002\u53ef\u4ee5\u5f53\u6210\u4e00\u4e2a trick \u8bb0\u4e0b\u6765\u3002\n\n\u6574\u4e2a\u533a\u95f4\u7684\u6570\u6700\u591a\u88ab\u9664 $\\sum_{i=1}^{n}\\log_{2}a_{i}$ \u6b21\uff0c\u533a\u95f4\u548c\u7684\u64cd\u4f5c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u64cd\u4f5c\u5b9e\u73b0\uff0c\u5219\u6574\u4f53\u7684\u64cd\u4f5c\u590d\u6742\u5ea6\u4e3a $\\Theta(\\sum_{i=1}^{n}\\log_{2}a_{i}+\\log_{2}a_{i})$\u3002\n\n\u5f00\u5934\u63d0\u5230\u4e86\u5bf9\u4e8e\u6bcf\u4e2a $a_{i}$ \u6211\u4eec\u90fd\u5f00\u4e00\u68f5\u5e73\u8861\u6811\uff0c\u4f5c\u7528\u5c31\u4f53\u73b0\u5728\u8fd9\u91cc\u3002\u56e0\u4e3a\u5982\u679c\u8981\u4fdd\u8bc1\u6b63\u786e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u5feb\u901f\u7684\u627e\u5230\u9700\u8981\u6267\u884c\u64cd\u4f5c\u7684\u6570\u3002\n\n\u8fd9\u91cc\u6211\u91c7\u7528\u7684\u662f FHQ-Treap\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e24\u6b21 `split` \u64cd\u4f5c\u5728 $x$ \u7684\u5e73\u8861\u6811\u4e2d\u63d0\u53d6\u51fa\u5f53\u524d\u7684\u8be2\u95ee\u533a\u95f4\uff0c\u7531\u4e8e\u6211\u4eec\u662f\u4ee5\u4e0b\u6807\u4e3a\u5e73\u8861\u6811\u7ef4\u62a4\u7684\u6743\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u6309\u503c\u5206\u88c2\u5373\u53ef\u63d0\u53d6\u51fa\u533a\u95f4\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u5728\u63d0\u53d6\u51fa\u7684\u5b50\u6811\u4e2d DFS \u904d\u5386\uff0c\u7136\u540e\u66b4\u529b\u64cd\u4f5c\uff0c\u628a\u64cd\u4f5c\u540e\u4f9d\u7136\u662f $x$ \u7684\u500d\u6570\u7684\u6570\u8bb0\u5f55\u4e0b\u6765\uff0c\u64cd\u4f5c\u5b8c\u540e\u7528\u8fd9\u4e2a\u6570\u7ec4\u518d\u5efa\u4e00\u68f5\u4e34\u65f6\u6811\u7136\u540e\u548c\u4e4b\u524d `split` \u51fa\u6765\u7684\u5b50\u6811\u4e00\u8d77\u5408\u5e76\u56de\u53bb\u3002\n\n\u64cd\u4f5c\u4e4b\u524d\u8bb0\u5f97\u9884\u5904\u7406\u6bcf\u4e2a\u6570\u7684\u6240\u6709\u7ea6\u6570\uff0c\u8fd9\u4e2a\u7b80\u5355\uff0c\u76f4\u63a5\u7528 vector \u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <ctime>\n#include <queue>\n\nusing namespace std;\ntypedef long long t_t;\n\nconst int Maxn = 1e5 + 5;\nconst int Maxa = 5e5 + 5;\nint n, m, xxx, zip, tot, isa[Maxn], bin[Maxa], root[Maxa];\nstruct Treap\n{\n\tint l, r, key, val;\n} t[Maxa * 230];\nstruct Fenwick_Tree\n{\n\tt_t bit[Maxn];\n\t\n\tvoid ins(int x, t_t v)\n\t{\n\t\tfor (; x <= n; x += x & -x) \tbit[x] += v;\t\n\t}\n\t\n\tt_t sum(int x)\n\t{\n\t\tt_t ret = 0;\n\t\tfor (; x; x -= x & -x)\tret += bit[x];\n\t\treturn ret;\n\t}\n} fwt;\nvector < int > vec[Maxa];\n\nint newnode(int val)\n{\n\tt[++tot].val = val;\n\tt[tot].key = rand();\n\treturn tot;\n}\n\nvoid split(int now, int val, int &x, int &y)\n{\n\tif (now == 0)\tx = y = 0;\n\telse\n\t{\n\t\tif (t[now].val <= val)\n\t\t{\n\t\t\tx = now;\n\t\t\tsplit(t[now].r, val, t[now].r, y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty = now;\n\t\t\tsplit(t[now].l, val, x, t[now].l);\n\t\t}\n\t}\n}\n\nint merge(int x, int y)\n{\n\tif (x == 0 || y == 0)\treturn x | y;\n\tif (t[x].key > t[y].key)\n\t{\n\t\tt[x].r = merge(t[x].r, y);\n\t\treturn x;\n\t}\n\telse\n\t{\n\t\tt[y].l = merge(x, t[y].l);\n\t\treturn y;\n\t}\n}\n\nint build(int l, int r)\n{\n\tif (l > r)\treturn 0;\n\tint mid = (l + r) >> 1;\n\tint now = newnode(bin[mid]);\n\tt[now].l = build(l, mid - 1);\n\tt[now].r = build(mid + 1, r);\n\treturn now;\n}\n\nvoid dfs(int now, int val)\n{\n\tif (now == 0)\treturn ;\n\tdfs(t[now].l, val);\n\tif (isa[t[now].val] % val == 0)\n\t{\n\t\tfwt.ins(t[now].val, -isa[t[now].val]);\n\t\tisa[t[now].val] /= val;\n\t\tfwt.ins(t[now].val, isa[t[now].val]);\n\t}\n\tif (isa[t[now].val] % val == 0)\tbin[++zip] = t[now].val;\n\tdfs(t[now].r, val);\n}\n\nint tx, ty, tp;\nvoid change(int l, int r, int x)\n{\n\tif (x == 1) \treturn ;\n\tsplit(root[x], r, tx, tp);\n\tsplit(tx, l - 1, tx, ty);\n\tzip = 0;\n\tdfs(ty, x);\n\troot[x] = merge(tx, merge(build(1, zip), tp));\n}\n\nsigned main()\n{\n\tsrand((114514 - 1) / 3 - 4);\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &isa[i]);\n\t\tfwt.ins(i, isa[i]);\n\t\txxx = max(xxx, isa[i]);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tfor (int j = 1; j * j <= isa[i]; ++j)\n\t\t{\n\t\t\tif (isa[i] % j == 0)\n\t\t\t{\n\t\t\t\tvec[j].push_back(i);\n\t\t\t\tif (j * j != isa[i])\tvec[isa[i] / j].push_back(i);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= xxx; ++i)\n\t{\n\t\tzip = 0;\n\t\tfor (unsigned j = 0; j < vec[i].size(); ++j)\tbin[++zip] = vec[i][j];\n\t\troot[i] = build(1, zip);\n\t}\n\tfor (int i = 0; i < m; ++i)\n\t{\n\t\tint t, l, r, x;\n\t\tscanf(\"%d %d %d\", &t, &l, &r);\n\t\tif (t == 1)\n\t\t{\n\t\t\tscanf(\"%d\", &x);\n\t\t\tchange(l, r, x);\n\t\t}\n\t\telse\tprintf(\"%lld\\n\", fwt.sum(r) - fwt.sum(l - 1));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1595922581,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5610 \u3010[Ynoi2013]\u5927\u5b66\u3011"
    },
    {
        "content": "\u5361\u5e38\u5927\u8d5b/tuu\u3002                         \n\n\u6211\u4eec\u8003\u8651\u6bcf\u4e2a\u6570\u7684\u56e0\u6570\u4e0d\u8d85\u8fc7 $O(\\sqrt[3]{a_i})$ \uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5f00\u4e00\u4e2a vector \u5b58\u50a8\u5e8f\u5217\u5b83\u662f\u5e8f\u5217\u4e2d\u54ea\u4e9b\u6570\u7684\u56e0\u6570\u3002               \n\n\u63a5\u7740\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u8fdb\u884c\u7684\u9664\u6cd5\u64cd\u4f5c\u5361\u6ee1\u4e86\u662f $O(n \\log a_i)$ \u7684\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u601d\u8003\uff0c\u5f53\u524d\u7684\u6781\u9650\u60c5\u51b5\u662f $a_i$ \u4e3a $2$ \u7684\u6574\u6570\u6b21\u5e42\uff0c\u6b64\u65f6\u5c31\u7b97\u4e00\u76f4\u9664\u4ee5 $2$ \u4e5f\u81f3\u591a\u9664 $log_{a_i}$ \u6b21\uff0c\u6240\u4ee5\u603b\u7684\u9664\u6cd5\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0a\u7ebf\u662f $O(n \\log a_i)$ \u5f97\u8bc1\u3002                      \n\n\u63a5\u7740\u6211\u4eec\u8003\u8651\u6211\u4eec\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u505a\uff1a               \n\n- \u5bf9\u4e8e\u64cd\u4f5c $1$ \u6211\u4eec\u76f4\u63a5\u53bb\u5bf9\u5e94\u56e0\u6570\u7684 vector \u4e2d\u67e5\u627e\uff0c\u7136\u540e\u4ece\u5728\u533a\u95f4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u70b9\u5f00\u59cb\u5f80\u540e\u9762\u626b\u4e00\u76f4\u5230\u626b\u51fa r \u4e3a\u6b62\uff0c\u7136\u540e\u52a8\u6001\u7684\u4fee\u6539\u8fd9\u4e2a\u70b9\u7684\u503c\u540e\u8003\u8651\u628a\u8fd9\u4e2a\u70b9\u5220\u9664\u3002              \n\n\u5176\u4e2d\u627e\u5230\u533a\u95f4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5728 vector \u4e2d\u5143\u7d20\u6709\u5e8f\u7684\u60c5\u51b5\u4e0b\u4e8c\u5206\u67e5\u627e\uff0c\u52a8\u6001\u4fee\u6539\u70b9\u7684\u503c\u7ed3\u5408\u64cd\u4f5c $2$ \u662f\u4e00\u4e2a\u6bd4\u8f83\u5f31\u7684\u533a\u95f4\u6c42\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u6811\u72b6\u6570\u7ec4\u5c31\u597d\u4e86\u3002         \n\n\u73b0\u5728\u7684\u96be\u70b9\u5728\u4e8e\u505a\u5230\u52a8\u6001\u5220\u70b9\u3002                     \n\n\u6211\u4eec\u8003\u8651\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u8981\u53ef\u4ee5\u652f\u6301\u5feb\u901f\u8df3\u5230\u4e0b\u4e00\u4e2a\u6ca1\u88ab\u5220\u9664\u7684\u70b9\u5c31\u597d\u4e86\uff0c\u90a3\u4e48\u5728\u6bcf\u6b21\u4fee\u6539\u5b8c\u70b9\u503c\u540e\u6211\u4eec\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u70b9\u8981\u4e0d\u8981\u5220\uff0c\u8981\u5220\u7684\u8bdd\u5c31\u628a\u5b83\u548c\u4e0b\u4e00\u4e2a\u70b9\u5408\u5e76\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230 $O(a(n))$ \u7ef4\u62a4\u52a8\u6001\u5220\u70b9\u7684\u8fc7\u7a0b\u4e86\u3002               \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(a_i \\sqrt {a_i} + n \\log ^ 2 n)$ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n \\sqrt[3] a_i)$ \u3002\n \n\u6b64\u9898\u6700\u6076\u5fc3\u7684\u5730\u65b9\u5728\u4e8e\u5361\u5e38\uff0c\u6211\u7684\u4ee3\u7801\u4e0d\u7ba1\u600e\u4e48\u641e\u90fd\u8981 T \u7b2c $5$ \u4e2a\u70b9\uff0c\u6240\u4ee5\u6253\u4e86\u4e2a\u8868\uff08                \n\n\u4e0d\u8fc7\u5176\u4ed6\u70b9\u90fd\u8fd8\u662f\u6709\u6280\u5de7\u4e0d\u96be\u5361\u8fc7\u53bb\u7684\uff0c\u8fd9\u91cc\u7f57\u5217\u51e0\u4e2a\u6b64\u9898\u7684\u5361\u5e38\u70b9\uff1a          \n\n1. \u6211\u4eec\u5728\u5e76\u67e5\u96c6\u5408\u5e76\u7684\u65f6\u5019\u4e0d\u8981\u76f4\u63a5\u628a\u4e24\u4e2a\u70b9\u627e\u5230\u6839\u540e\u5408\u5e76\uff0c\u6211\u4eec\u76f4\u63a5```fa[i] = i + 1```\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u4f60\u4e5f\u4e0d\u77e5\u9053\u540e\u9762\u8fd8\u8981\u4e0d\u8981\u7528\u8fd9\u4e2a\u70b9\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5148\u6401\u5728\u8fd9\u91cc\uff0c\u5230\u65f6\u5019\u8981\u7528\u518d\u53bb\u8def\u5f84\u538b\u7f29\uff1b              \n\n2. \u5728\u627e\u5b8c\u521d\u59cb\u70b9\u540e\uff0c\u5728\u904d\u5386\u8981\u66f4\u6539\u7684\u6570\u65f6\u76f4\u63a5\u4ece\u5b83\u7684\u6839\u5f00\u59cb\u904d\u5386\u5c31\u597d\u4e86\uff1b        \n3. \u4e0d\u8981 vector \uff0c\u76f4\u63a5\u5148\u5185\u5b58\u6c60\uff1b               \n\n4. \u521a\u5f00\u59cb\u7684\u65f6\u5019\u7528 $O(n \\ln n)$ \u628a\u6bcf\u4e2a\u6570\u9700\u8981\u5360\u7528\u7684\u5185\u5b58\u6c60\u5927\u5c0f\u6c42\u51fa\u6765\u540e\u518d\u7528 $n \\sqrt n$ \u7684\u8d28\u56e0\u6570\u5206\u89e3\uff1b             \n\n\u57fa\u672c\u8fd9\u4e48\u5b9e\u73b0\u540e\uff0c\u5c31\u53ef\u4ee5\u53ea T \u7b2c 5 \u4e2a\u70b9\u4e86\uff0c\u5982\u679c\u8fd8\u8fc7\u4e0d\u4e86\u5c31\u771f\u7684\u5f97\u6253\u8868\u4e86\uff0c\u6bd5\u7adf\u8fd9\u9053\u9898\u73b0\u5728\u786e\u5b9e\u5361\u5e38\u592a\u4e25\u91cd\u4e86\u3002",
        "postTime": 1622294180,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5610 [Ynoi2013] \u5927\u5b66"
    }
]