[
    {
        "content": "\u6b64\u9898\u8fd8\u5b58\u5728\u4e00\u79cd\u8d2a\u5fc3\u505a\u6cd5\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u628a\u6240\u6709 `?` \u6362\u6210 `|` \u7ed3\u679c\u6700\u6709\u53ef\u80fd\u662f $1$\uff0c\u90fd\u6362\u6210 `&` \u7ed3\u679c\u6700\u6709\u53ef\u80fd\u662f $0$\u3002\u76f4\u63a5\u5efa\u51fa\u8868\u8fbe\u5f0f\u6811\u7136\u540e\u8fdb\u884c\u4e24\u6b21 dfs \u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define Mashu cout << \"UUZ has eaten it.\" << endl\n#define ll long long\nusing namespace std;\n\nstruct qwq{\n\tchar x;\n\tint ls, rs;\n}node[2000010];\n\nint stk[2000010];\nint top = 0;\nint v[2][2000010];\n\nvoid dfs0(int now){\n\tif (node[now].ls != -1){\n\t\tdfs0(node[now].ls);\n\t\tdfs0(node[now].rs);\n\t\tswitch(node[now].x){\n\t\t\tcase '|':{\n\t\t\t\tv[0][now] = v[0][node[now].ls] | v[0][node[now].rs];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '&':{\n\t\t\t\tv[0][now] = v[0][node[now].ls] & v[0][node[now].rs];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '?':{\n\t\t\t\tv[0][now] = v[0][node[now].ls] & v[0][node[now].rs];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tv[0][now] = node[now].x - '0';\n\t}\n}\n\nvoid dfs1(int now){\n\tif (node[now].ls != -1){\n\t\tdfs1(node[now].ls);\n\t\tdfs1(node[now].rs);\n\t\tswitch(node[now].x){\n\t\t\tcase '|':{\n\t\t\t\tv[1][now] = v[1][node[now].ls] | v[1][node[now].rs];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '&':{\n\t\t\t\tv[1][now] = v[1][node[now].ls] & v[1][node[now].rs];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase '?':{\n\t\t\t\tv[1][now] = v[1][node[now].ls] | v[1][node[now].rs];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tv[1][now] = node[now].x - '0';\n\t}\n}\n\n\nint main(){\n\tint t;\n\tcin >> t;\n\twhile (t--){\n\t\tint n;\n\t\tstring s;\n\t\tcin >> n >> s;\n\t\ttop = 0;\n\t\tfor (int i = 0; i < n; i++){\n\t\t\tnode[i].x = s[i];\n\t\t\tif (s[i] == '0' || s[i] == '1'){\n\t\t\t\tnode[i].ls = -1;\n\t\t\t\tnode[i].rs = -1;\n\t\t\t\tstk[++top] = i;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tnode[i].ls = stk[top];\n\t\t\t\ttop--;\n\t\t\t\tnode[i].rs = stk[top];\n\t\t\t\ttop--;\n\t\t\t\tstk[++top] = i;\n\t\t\t}\n\t\t}\n\t\tdfs0(n - 1);\n\t\tdfs1(n - 1);\n\t\tint ran = 0;\n\t\tfor (int i = 0; i < n; i++) if (v[0][i] != v[1][i]) ran++;\n\t\tcout << ran << endl;\n\t}\n\treturn 0;\n\tMashu;\n}\n```",
        "postTime": 1637509573,
        "uid": 149196,
        "name": "\u516b\u4e91\u84dd",
        "ccfLevel": 8,
        "title": "P7941 [C] Magical Expression \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\u7ed9\u51fa\u4e00\u4e2a\u5408\u6cd5\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u5305\u542b 0,1,\\&,|,? \u3002| \u8868\u793a\u6216\u8fd0\u7b97\uff0c\\& \u8868\u793a\u4e0e\u8fd0\u7b97\uff0c ? \u4e24\u8005\u90fd\u53ef\u3002\u95ee\u6709\u591a\u5c11\u6bb5\u5408\u6cd5\u5b50\u4e32\u7684\u503c\u65e2\u80fd\u4e3a 1 \u53c8\u80fd\u4e3a 0 \u3002\n### \u601d\u8def\n\u65e2\u7136\u662f\u540e\u7f00\u8868\u8fbe\u5f0f\uff0c\u5c31\u53ef\u4ee5\u60f3\u5230\u7528\u6808\u6a21\u62df\u3002\u53c8\u56e0\u4e3a\u4e00\u4e2a\u5b50\u4e32\u7684\u4fe1\u606f\u662f\u7531\u5b83\u7684\u5b50\u4e32\u63a8\u51fa\uff0c\u5c31\u53ef\u4ee5\u60f3\u5230\u6811\u5f62 DP \u3002\n\n\u8003\u8651\u5efa\u6811\uff1a\u6808\u6a21\u62df\u7684\u65f6\u5019\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5c31\u8d4b\u4e88\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4e00\u4e2a\u65b0\u7684\u7f16\u53f7\uff0c\u5982\u679c\u662f\u5355\u72ec\u7684\u4e00\u4e2a\u503c\u5c31\u7ed9\u8fd9\u4e2a\u7f16\u53f7\u6253\u4e2a\u6807\u8bb0\u3002\u5982\u679c\u6709\u7b26\u53f7\u7684\u5c31\u628a\u5b83\u7684\u7f16\u53f7\u4e0e\u6808\u9876\u7684\u4e24\u4e2a\u8868\u8fbe\u5f0f\u7684\u7f16\u53f7\u5206\u522b\u8fde\u4e00\u6761\u8fb9\uff0c\u8fde\u8fb9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u662f\u54ea\u79cd\u7b26\u53f7\u3002\n\n\u663e\u7136\u8fd9\u68f5\u6811\u4e00\u5b9a\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5 DP \u90e8\u5206\u5c31\u5f88\u7b80\u5355\u4e86\u3002$f[i][0/1]=0/1$ \u8868\u793a\u7f16\u53f7\u4e3a i \u7684\u8868\u8fbe\u5f0f\u80fd/\u4e0d\u80fd\u4e3a 0/1 \u3002$op=0/1/2$ \u8868\u793a\u8fd9\u6761\u8fb9\u7684\u7b26\u53f7\u4e3a |/\\&/? \uff0cx \u4e3a\u5f53\u524d\u8282\u70b9\u7f16\u53f7\uff0cy \u4e3a\u5de6\u513f\u5b50\u7f16\u53f7\uff0c z \u4e3a\u53f3\u513f\u5b50\u7f16\u53f7\uff0c\u8f6c\u79fb\u5982\u4e0b\uff1a\n\n```cpp\nif(op==0) {\n\tif(f[y][0]&&f[z][0]) f[x][0]=1;\n\tif(f[y][1]||f[z][1]) f[x][1]=1;\n}\nelse if(op==1) {\n\tif(f[y][0]||f[z][0]) f[x][0]=1;\n\tif(f[y][1]&&f[z][1]) f[x][1]=1;\n}\nelse {\n\tif(f[y][0]||f[z][0]) f[x][0]=1;\n\tif(f[y][1]||f[z][1]) f[x][1]=1;\n}\n```\n\n\u5982\u679c $f[x][0]=f[x][1]=1$ \u90a3\u4e48 $ans+1$ \u3002\n\n\u6ce8\u610f\u6e05\u7a7a\u6570\u7ec4\u7684\u65f6\u5019\u4e0d\u8981\u7528 memset , \u56e0\u4e3a t \u7684\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u6240\u4ee5\u7528\u591a\u5c11\u6e05\u591a\u5c11\uff0c\u4e0d\u7136\u4f1a TLE\u3002\n \n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int,int> pr;\nint read() {\n\tint x=0,f=0;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\n\twhile(isdigit(ch)) x=x*10+ch-'0',ch=getchar();\n\treturn f?-x:x;\n}\nconst int N=2000005;\nint t,n,a[N];\nint sta[N<<1],top,tot,cnt,root,ans,p[N<<1];\nchar s[N];\nbool f[N<<1][2];\nvector<pr> g[N<<1];\nmap<char,int> mp;\nvoid dfs(int x,int fa) {\n\tif(p[x]) {\n\t\tf[x][a[p[x]]]=1;\n\t\treturn;\n\t}\n\tint y,z,op,siz=g[x].size();\n\ty=g[x][siz-2].first,z=g[x][siz-1].first,op=g[x][siz-1].second;\n\tdfs(y,x),dfs(z,x);\n\tif(op==0) {\n\t\tif(f[y][0]&&f[z][0]) f[x][0]=1;\n\t\tif(f[y][1]||f[z][1]) f[x][1]=1;\n\t}\n\telse if(op==1) {\n\t\tif(f[y][0]||f[z][0]) f[x][0]=1;\n\t\tif(f[y][1]&&f[z][1]) f[x][1]=1;\n\t}\n\telse {\n\t\tif(f[y][0]||f[z][0]) f[x][0]=1;\n\t\tif(f[y][1]||f[z][1]) f[x][1]=1;\n\t}\n\tif(f[x][0]&&f[x][1]) ++ans;\n}\nsigned main() {\n\tt=read();\n\tmp['|']=0,mp['&']=1,mp['?']=2;\n\twhile(t--) {\n\t\tn=read();\n\t\tscanf(\"%s\",s+1);\n\t\tcnt=0;\n\t\tfor(int i=1,x,y,op;i<=n;++i) {\n\t\t\tif(s[i]=='0'||s[i]=='1') ++tot,p[++cnt]=tot,sta[++top]=cnt,a[tot]=s[i]-'0';\n\t\t\telse {\n\t\t\t\tx=sta[top],y=sta[top-1],op=mp[s[i]],--top;\n\t\t\t\tsta[top]=++cnt;\n\t\t\t\tg[cnt].push_back(pr(x,op)),g[cnt].push_back(pr(y,op));\n\t\t\t}\n\t\t}\n\t\troot=cnt,ans=0;\n\t\tfor(int i=1;i<=cnt;++i) f[i][0]=f[i][1]=0;\n\t\tdfs(root,0);\n\t\tfor(int i=1;i<=cnt;++i) p[i]=0;\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1636700700,
        "uid": 321568,
        "name": "lmgoat",
        "ccfLevel": 0,
        "title": "P7941 [C] Magical Expression\u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a\u8fd9\u9053\u9898\u8ba9\u6c42\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230\u4e0a\u6811\u5904\u7406\uff0c\u5982\u4e0b\uff1a\n\n- \u5bf9\u4e8e\u5168 $1$ \u7684\u60c5\u51b5\uff0c\u5bb9\u6613\u53d1\u73b0\u65e0\u8bba\u5982\u4f55\u5c06 $\\texttt{?}$ \u66ff\u6362\u6210 $\\texttt{|}$ \u662f\u6bd4\u8f83\u5212\u7b97\u7684\uff0c\u539f\u56e0\u663e\u7136\u3002\n\n- \u5bf9\u4e8e\u5168 $0$ \u7684\u60c5\u51b5\uff0c\u5bb9\u6613\u53d1\u73b0\u65e0\u8bba\u5982\u4f55\u5c06 $\\texttt{?}$ \u66ff\u6362\u6210 $\\texttt{\\&}$ \u662f\u6bd4\u8f83\u5212\u7b97\u7684\uff0c\u539f\u56e0\u540c\u6837\u663e\u7136\u3002\n\n\u56e0\u6b64\u6211\u4eec\u505a\u4e24\u6b21 dfs \u540e\u7edf\u8ba1\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\u7684\u7b54\u6848\u5373\u53ef\uff0c\u4ee3\u7801\uff1a\n\n```cpp\n//By: Luogu@\u26a1\u70ad\u6cbb\u90ce\u26a1(a.k.a. Kamado_Tanjiro)(LuoguID:308854)\n#include <bits/stdc++.h>\n#define int long long\n\nusing namespace std;\n\nconst int INF=(sizeof(int)==4?0x3f3f3f3f:0x3f3f3f3f3f3f3f3f);\nconst int MOD=998244353;\nconst long double EPS=1e-7;\n\nstruct Tree\n{\n\tint lc,rc,val;\n}pool[3000000];\nint nowid=0;\nbool vals[3000000];\nint sum=0;\n\nvoid dfsPre(int u)\n{\n\tif(u==0)\n\t\treturn ;\n\n\tif(pool[u].lc==0 && pool[u].rc==0)\n\t{\n\t\tvals[u]=pool[u].val;\n\t\treturn ;\n\t}\n\n\tdfsPre(pool[u].lc);\n\tdfsPre(pool[u].rc);\n\n\tsum++;\n}\n\nvoid dfsAnd(int u)\n{\n\tif(u==0)\n\t\treturn ;\n\n\tif(pool[u].lc==0 && pool[u].rc==0)\n\t{\n\t\treturn ;\n\t}\n\n\tdfsAnd(pool[u].lc);\n\tdfsAnd(pool[u].rc);\n\n\tif(pool[u].val=='|')\n\t\tvals[u]=vals[pool[u].lc] || vals[pool[u].rc];\n\telse\n\t\tvals[u]=vals[pool[u].lc] && vals[pool[u].rc];\n\n\tif(vals[u]!=0)\n\t\tsum--;\n}\n\nvoid dfsOr(int u)\n{\n\tif(u==0)\n\t\treturn ;\n\n\tif(pool[u].lc==0 && pool[u].rc==0)\n\t{\n\t\treturn ;\n\t}\n\n\tdfsOr(pool[u].lc);\n\tdfsOr(pool[u].rc);\n\n\tif(pool[u].val=='&')\n\t\tvals[u]=vals[pool[u].lc] && vals[pool[u].rc];\n\telse\n\t\tvals[u]=vals[pool[u].lc] || vals[pool[u].rc];\n\n\tif(vals[u]!=1)\n\t\tsum--;\n}\n\nsigned main()\n{\n\tint T;\n\n\tcin>>T;\n\n\twhile(T--)\n\t{\n\t\tnowid=0;\n\t\tsum=0;\n\n\t\tint n;\n\t\tstack<int> s;\n\n\t\tcin>>n;\n\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tchar op;\n\n\t\t\tcin>>op;\n\n\t\t\tif(op=='0' || op=='1')\n\t\t\t{\n\t\t\t\ts.push(++nowid);\n\t\t\t\tpool[nowid]={0,0,op-'0'};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint rc=s.top();\n\t\t\t\ts.pop();\n\t\t\t\tint lc=s.top();\n\t\t\t\ts.pop();\n\n\t\t\t\ts.push(++nowid);\n\n\t\t\t\tpool[nowid]={lc,rc,op};\n\t\t\t}\n\t\t}\n\n\t\tint root=s.top(),ans=0;\n\n\t\ts.pop();\n\n\t\tdfsPre(root);\n\n\t\t//cout<<sum<<endl;\n\n\t\tdfsAnd(root);\n\t\tdfsOr(root);\n\n\t\tcout<<sum<<endl;\n\t}\n\n\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1651983669,
        "uid": 308854,
        "name": "tzl_Dedicatus545",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P7941\u3010\u300cWdcfr-1\u300dMagical Expression\u3011"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u4ec0\u4e48\u6837\u7684\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u7ed3\u679c\u4e00\u5b9a\u4e3a $0$\uff0c\u4ec0\u4e48\u6837\u7684\u4e00\u5b9a\u4e3a $1$\uff0c\u4ec0\u4e48\u6837\u7684\u65e2\u53ef\u4ee5\u4e3a $0$ \u4e5f\u53ef\u4ee5\u4e3a $1$\u3002\n\n- \u5982\u679c\u8fd0\u7b97\u7b26\u4e3a `?`\uff0c\u5219\u5982\u679c\u5de6\u64cd\u4f5c\u6570\u548c\u53f3\u64cd\u4f5c\u6570\u786e\u5b9a\u4e14\u76f8\u540c\uff0c\u5219\u7ed3\u679c\u4e00\u5b9a\u4e3a\u5de6\u64cd\u4f5c\u6570\u3002\u5426\u5219\u7ed3\u679c\u53ef\u4ee5\u662f $0$ \u6216 $1$\u3002\n- \u5982\u679c\u8fd0\u7b97\u7b26\u4e3a `&`\uff0c\u4e14\u5de6\u53f3\u64cd\u4f5c\u6570\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u786e\u5b9a\u4e3a $0$\uff0c\u5219\u7ed3\u679c\u4e00\u5b9a\u4e3a $0$\u3002\u5426\u5219\u5982\u679c\u4e24\u4e2a\u64cd\u4f5c\u6570\u5747\u786e\u5b9a\uff0c\u5219\u7ed3\u679c\u4e3a\u4e24\u64cd\u4f5c\u6570\u6309\u4f4d\u4e0e\u7684\u7ed3\u679c\u3002\u5426\u5219\u7ed3\u679c\u53ef\u4ee5\u662f $0$ \u6216 $1$\u3002\n- \u5982\u679c\u8fd0\u7b97\u7b26\u4e3a `|`\uff0c\u4e14\u5de6\u53f3\u64cd\u4f5c\u6570\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u786e\u5b9a\u4e3a $1$\uff0c\u5219\u7ed3\u679c\u4e00\u5b9a\u4e3a $1$\u3002\u5426\u5219\u5982\u679c\u4e24\u4e2a\u64cd\u4f5c\u6570\u5747\u786e\u5b9a\uff0c\u5219\u7ed3\u679c\u4e3a\u4e24\u64cd\u4f5c\u6570\u6309\u4f4d\u6216\u7684\u7ed3\u679c\u3002\u5426\u5219\u7ed3\u679c\u53ef\u4ee5\u662f $0$ \u6216 $1$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5efa\u7acb\u51fa\u8868\u8fbe\u5f0f\u6811\uff0c\u4ece\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u4f9d\u6b21\u8f6c\u79fb\u5373\u53ef\u3002\n\n```cpp\nchar s[N], typ[N];\nint n, ls[N], rs[N], tp, ans[N];\n\ninline int And(int x, int y) { return (x == 0 || y == 0) ? 0 : max(x, y); }\ninline int Or(int x, int y) { return (x == 1 || y == 1) ? 1 : max(x, y); }\n\nint Dfs(int x) {\n  if (x <= 0) return -x;\n  int l = Dfs(ls[x]), r = Dfs(rs[x]);\n  if (typ[x] == '&') return ans[x] = And(l, r);\n  if (typ[x] == '|') return ans[x] = Or(l, r);\n  return ans[x] = ((And(l, r) == Or(l, r)) ? And(l, r) : 2);\n}\n\nsigned main() {\n  int T;in(T);while(T--) {\n    vector<int> vec;\n    in(n)(s + 1);\n    re (i, n) {\n      if (s[i] == '0' || s[i] == '1')\n        vec.push_back(-(s[i] - '0'));\n      else\n        typ[++tp] = s[i], ls[tp] = vec.back(), vec.pop_back(), rs[tp] = vec.back(), vec.back() = tp;\n    }\n    Dfs(tp);\n    int res = 0;\n    re (i, tp)\n      if (ans[i] == 2) ++res;\n    out(res)('\\n');\n    rep (i, 0, n + 1)\n      s[i] = 0, typ[i] = 0, ls[i] = 0, rs[i] = 0, ans[i] = 0;\n    tp = 0, n = 0;\n  }\n  return 0;\n}\n```",
        "postTime": 1636685479,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "P7941 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8981\u8bb2 \u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u77ed\u8def \u6027\u8d28\u3002\r\n\r\n\u4eca\u5e74 CSP-J2022 T3 \u8003\u5230\u4e86\u8fd9\u4e2a\u6027\u8d28\u3002\u5728\u4f60\u8c37\u9898\u76ee\u7f16\u53f7\u4e3a [P8815](https://www.luogu.com.cn/problem/P8815)\u3002\r\n\r\n\u539f\u6587\uff1a\r\n\r\n> \u6b64\u5916\uff0c\u5728 C++ \u7b49\u8bed\u8a00\u7684\u6709\u4e9b\u7f16\u8bd1\u5668\u4e2d\uff0c\u5bf9\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u4f1a\u91c7\u7528\u4e00\u79cd\u201c\u77ed\u8def\u201d\u7684\u7b56\u7565\uff1a\u5728\u5f62\u5982 $a\\&b$ \u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4f1a\u5148\u8ba1\u7b97 $a$ \u90e8\u5206\u7684\u503c\uff0c\u5982\u679c $a = 0$\uff0c\u90a3\u4e48\u6574\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u4e00\u5b9a\u4e3a $0$\uff0c\u6545\u65e0\u9700\u518d\u8ba1\u7b97 $b$ \u90e8\u5206\u7684\u503c\uff1b\u540c\u7406\uff0c\u5728\u5f62\u5982 $a \\mid b$ \u7684\u903b\u8f91\u8868\u8fbe\u5f0f\u4e2d\uff0c\u4f1a\u5148\u8ba1\u7b97 $a$ \u90e8\u5206\u7684\u503c\uff0c\u5982\u679c $a = 1$\uff0c\u90a3\u4e48\u6574\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u4e00\u5b9a\u4e3a $1$\uff0c\u65e0\u9700\u518d\u8ba1\u7b97 $b$ \u90e8\u5206\u7684\u503c\u3002\r\n\r\n~~\u8fd9\u4e2a\u4e1c\u897f\u5728\u5361\u5e38\u65f6\u6709\u7528~~ \u4ea4\u6362\u4e24\u4e2a\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u987a\u5e8f\u53ef\u80fd\u4f1a\u8ba9\u6027\u80fd\u6709\u5de8\u5927\u7684\u63d0\u5347\u3002\r\n\r\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5bf9\u8868\u8fbe\u5f0f\u6811\u8fdb\u884c\u641c\u7d22\uff0c\u770b\u6709\u591a\u5c11\u4e2a\u8282\u70b9\u5728\u5c06\u6240\u6709 `?` \u66ff\u6362\u6210 `|` \u548c\u5c06\u6240\u6709 `?` \u66ff\u6362\u6210 `&` \u65f6\u7684\u503c\u4e0d\u76f8\u540c\u3002\u8fd9\u6b21\u641c\u7d22\u53ef\u4ee5\u5e76\u884c\u5904\u7406\u3002\r\n\r\n\u5176\u6b21\uff0c\u5bf9\u4e8e\u540e\u7f00\u8868\u8fbe\u5f0f\u5efa\u8868\u8fbe\u5f0f\u6811\u5c31\u662f\u7528\u4e00\u4e2a\u6808\u6a21\u62df\uff0c\u7136\u540e\u770b\u5230\u4e00\u4e2a\u8fd0\u7b97\u7b26\u5c31\u53bb\u51fa\u6808\u9876\u7684\u4e24\u4e2a\u5143\u7d20\u7136\u540e\u5c06\u6784\u5efa\u597d\u7684\u8282\u70b9\u518d\u6b21\u5165\u6808\u3002\u6700\u540e\u53d6\u51fa\u6808\u9876\u4f5c\u4e3a\u6839\u8282\u70b9\u5c31\u5927\u529f\u544a\u6210\u4e86\u3002\r\n\r\n\u4ee3\u7801\uff1a\uff08\u5199\u7684\u6307\u9488\u7248\u8868\u8fbe\u5f0f\u6811\uff0c~~\u4e3a\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f~~ \u7528\u7684 `unique_ptr`\uff0c\u4f7f\u7528\u51fd\u6570\u6307\u9488\u4f20\u51fd\u6570 ~~lambda \u8868\u8fbe\u5f0f\u53ef\u4ee5\u7528 `std::function` \u4f20\u8fdb\u53bb\uff0c\u53ef\u4ee5\u770b [\u6d45\u8c08\u73c2\u6735\u8389\u6811](https://www.luogu.com.cn/blog/_post/446071)~~\uff09\r\n```cpp\r\n#include <iostream>\r\n#include <string>\r\n#include <vector>\r\n#include <memory>\r\nusing namespace std;\r\ntemplate <typename _CharT = char>\r\nclass expression_tree {\r\n    struct node { // \u6211\u771f\u7684\u60f3\u5199 class\uff0c\u4f46\u662f\u90a3\u6837\u7ba1\u7406\u592a\u70e6\r\n        char c;\r\n        bool value1, value2;\r\n        node *left, *right;\r\n        node() = default;\r\n        node(char ch = '\\0', bool v1 = false, bool v2 = false, node *l = 0, node *r = 0)\r\n            : c(ch), value1(v1), value2(v2), left(l), right(r) {}\r\n        inline void pushup(bool(*func1)(bool, bool), bool(*func2)(bool, bool)) {\r\n            switch (c) {\r\n                case '|': {\r\n                    value1 = left->value1 || right->value1;\r\n                    value2 = left->value2 || right->value2;\r\n                    break;\r\n                }\r\n                case '&': {\r\n                    value1 = left->value1 && right->value1;\r\n                    value2 = left->value2 && right->value2;\r\n                    break;\r\n                }\r\n                case '?': {\r\n                    value1 = func1(left->value1, right->value1);\r\n                    value2 = func2(left->value2, right->value2);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        inline void dfs(bool(*func1)(bool, bool), bool(*func2)(bool, bool)) {\r\n            if (left) {\r\n                left->dfs(func1, func2);\r\n                right->dfs(func1, func2);\r\n                pushup(func1, func2);\r\n            }\r\n            else value1 = value2 = c & 1;\r\n        }\r\n        template <typename _Ostream>\r\n        friend inline _Ostream& operator<<(_Ostream& os, node* o) {\r\n            if ((long long)(o->left) > 0) os << o->left;\r\n            os << o->value1 << ' ' << o->value2 << ' ';\r\n            if ((long long)(o->right) > 0) os << o->right;\r\n            return os;\r\n        }\r\n    };\r\npublic:\r\n    node *root;\r\n    inline void dfs(bool(*func1)(bool, bool), bool(*func2)(bool, bool)) { root->dfs(func1, func2); }\r\n    inline size_t count_nequal() const {\r\n        struct __DFS__ {\r\n            inline size_t dfs(node *nd) {\r\n                if (!nd) return 0;\r\n                size_t ans = 0;\r\n                if (nd->value1 != nd->value2) ++ans;\r\n                ans += dfs(nd->left);\r\n                ans += dfs(nd->right);\r\n                return ans;\r\n            }\r\n            inline __DFS__() {}\r\n        };\r\n        static __DFS__ dfs_helper;\r\n        return dfs_helper.dfs(root);\r\n    }\r\n    inline void suffix_build(const basic_string<_CharT>& str)\r\n    {\r\n        vector<unique_ptr<node> > stk;\r\n        for (size_t i = 0, iend = str.size(); i < iend; i++) {\r\n            if (str[i] == '0' || str[i] == '1') stk.emplace_back(new node(str[i], str[i] & 1, str[i] & 1, 0, 0));\r\n            else {\r\n                node *ltmp = stk.back().release();\r\n                stk.pop_back();\r\n                node *rtmp = stk.back().release();\r\n                stk.pop_back();\r\n                stk.emplace_back(new node(str[i], str[i] & 1, str[i] & 1, ltmp, rtmp));\r\n            }\r\n        }\r\n        root = stk.back().release();\r\n    }\r\n};\r\nbool func1(bool a, bool b) { return a || b; }\r\nbool func2(bool a, bool b) { return a && b; }\r\nvoid solve() {\r\n    string s;\r\n    int n;\r\n    cin >> n >> s;\r\n    expression_tree<char> tree;\r\n    tree.suffix_build(s);\r\n    tree.dfs(func1, func2);\r\n    cout << tree.count_nequal() << endl;\r\n}\r\nint main() {\r\n    cin.tie(0)->sync_with_stdio(0);\r\n    cout.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--) solve();\r\n    cout << flush;\r\n}\r\n```\r\n`unique_ptr` \u662f\u4e00\u79cd\u884c\u4e3a\u7c7b\u4f3c `auto_ptr` \u7684\u667a\u80fd\u6307\u9488\uff0c\u4f46\u662f\u5c06\u5185\u90e8\u6240\u6709\u64cd\u4f5c\u53d8\u4e3a\u79fb\u52a8\u8bed\u4e49\u3002`auto_ptr` \u88ab\u5e9f\u5f03\u7684\u539f\u56e0\u5c31\u662f\u56e0\u4e3a\u6ca1\u6709\u4f7f\u7528\u79fb\u52a8\u8bed\u4e49\u3002\u8fd9\u4e2a\u53ef\u4ee5\u770b `move()`\uff08\u5373\u79fb\u52a8\uff09\u548c `forward()`\uff08\u5373\u5b8c\u7f8e\u8f6c\u53d1\uff09\u3002\u867d\u7136\u5185\u90e8\u53ea\u662f\u4e00\u4e2a `static_cast`\uff0c\u4f46\u662f\u4e0e\u8fed\u4ee3\u5668\u642d\u914d\u4f7f\u7528\u65f6\u53ef\u4ee5\u63d0\u9ad8\u5f88\u591a\u6548\u7387\uff08\u4f8b\u5982 `std::sort`\uff08\u5185\u90e8\u4f7f\u7528 `move()` \u8d4b\u503c\uff09\u6bd4\u76f4\u63a5\u8d4b\u503c\u7684\u624b\u5199\u5185\u7701\u6392\u5e8f\u5feb\u7ea6 $3\\%$\uff09\u3002\r\n\r\n\u8fd9\u91cc\u987a\u4fbf\u8bf4\u4e00\u4e0b `unique_ptr` \u7684\u7528\u6cd5\uff1a\uff08\u6709\u5bf9\u6570\u7ec4\u7684\u7279\u5316\uff0c\u53ea\u9700\u8981\u5c06 `operator new` \u548c `operator delete` \u6539\u6210 `operator new[]` \u548c `operator delete[]`\uff09\r\n\r\n- \u6784\u9020\u51fd\u6570\uff1a\u8fc7\u4e8e\u590d\u6742\uff0c\u53ef\u4ee5\u770b [cppreference \u4e0a\u5173\u4e8e `unique_ptr` \u7684\u6784\u9020\u51fd\u6570\u7684\u7b80\u4ecb](https://zh.cppreference.com/w/cpp/memory/unique_ptr/unique_ptr)\u3002\r\n- \u6790\u6784\u51fd\u6570\uff1a\u82e5\u5185\u90e8\u5b58\u50a8\u7684\u6307\u9488\u4e0d\u4e3a `nullptr` \u5219\u5220\u9664\u8fd9\u4e2a\u6307\u9488\uff08\u9ed8\u8ba4\u4f7f\u7528 `operator delete`\uff09\u3002\r\n- \u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a\u63a5\u53d7\u4e00\u4e2a `unique_ptr&&`\uff08\u6ce8\u610f\uff0c\u53ea\u652f\u6301\u79fb\u52a8\u8bed\u4e49\uff09\u6216\u4e00\u4e2a `nullptr`\uff08\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u5373\u8c03\u7528 `reset(nullptr)`\uff09\u3002\u9996\u5148\u5c06\u5185\u90e8\u5b58\u50a8\u7684\u6307\u9488\u53d8\u4e3a\u7ed9\u5b9a\u7684 `unique_ptr` \u5185\u90e8\u5b58\u50a8\u7684\u6307\u9488\uff0c\u7136\u540e\u5c06\u7ed9\u5b9a\u7684 `unique_ptr` \u6790\u6784\u3002\r\n- `release()`\uff1a\u8fd4\u56de\u6307\u5411\u7684\u5185\u5b58\u3002\u8fd4\u56de\u540e\u4f1a\u5c06\u5185\u90e8\u5b58\u50a8\u7684\u6307\u9488\u8bbe\u4e3a `nullptr`\u3002\r\n- `get()`\uff1a\u8fd4\u56de\u6307\u5411\u7684\u5185\u5b58\uff0c\u4f46\u662f\u4e0d\u5c06\u5185\u90e8\u5b58\u50a8\u7684\u6307\u9488\u8bbe\u4e3a `nullptr`\u3002\r\n- `reset(ptr)`\uff1a\u5c06\u539f\u6307\u9488\u6240\u6307\u7684\u5185\u5b58\u5220\u9664\uff08\u9ed8\u8ba4\u4f7f\u7528 `operator delete`\uff09\uff0c\u7136\u540e\u66ff\u6362\u4e3a `ptr`\u3002\r\n- `operator bool`\uff1a\u987e\u540d\u601d\u4e49\uff0c\u5c06 `unique_ptr` \u53d8\u6210\u4e00\u4e2a `bool` \u7c7b\u578b\u3002\u4f5c\u7528\u4e3a\u67e5\u770b\u5185\u90e8\u5b58\u50a8\u7684\u6307\u9488\u662f\u5426\u4e3a `nullptr`\uff08\u5373 `get() == nullptr`\uff09\u3002\r\n\r\n\u5bf9\u4e8e\u6307\u9488\u7248\u672c\uff1a\r\n- `operator*()`\u3001`operator->()`\uff1a\u548c\u666e\u901a\u6307\u9488\u76f8\u540c\u3002\r\n\r\n\u5bf9\u4e8e\u6570\u7ec4\u7248\u672c\uff1a\r\n- `operator[]`\uff1a\u548c\u666e\u901a\u6570\u7ec4\u4e00\u6837\u3002",
        "postTime": 1673495086,
        "uid": 589895,
        "name": "Ruiqun2009",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P7941 \u300cWdcfr-1\u300dMagical Expression"
    },
    {
        "content": "## \u849f\u84bb\u7248\u63cf\u8ff0\n##### \u53ea\u6709\u53ef\u601c\u56db\u7bc7\u9898\u89e3\u4e14\u4e0a\u6811\u5904\u7406\u4e0d\u662f\u5f88\u61c2\uff0c\u6545\u809d\u6b64\u89e3\u3002\n~~\u4e3a\u4e86\u7ed9\u849f\u84bb\u8bb2\u7528\u4e0d\u590d\u6742\u7684\u5904\u7406 \u6545\u809d\u6b64\u89e3\u3002~~\n\n[\u7eaf\u4eab\u7248](https://www.luogu.com.cn/blog/Binaerbaka/p7941-ti-xie)\n\n## \u9898\u610f\n\u5728\u7ed9\u5b9a\u7684\u540e\u7f00\u8868\u8fbe\u5f0f\u4e2d\uff0c\u627e\u51fa\u80fd\u4f7f\u8fd0\u7b97\u6570\u65e2\u4e3a $1$ \u53c8\u4e3a $0$ \u7684\u53ef\u884c\u5b50\u4e32\u3002\n\n## \u7406\u89e3\n- \u5f53 ```&``` \u5de6\u53f3\u53ea\u8981\u6709\u4e00\u4e2a $0$ \u53e6\u5916\u4e00\u4e2a\u65e2\u53ef\u4ee5\u4e3a $0$ \u53c8\u53ef\u4ee5\u4e3a $1$\u3002\n- \u5f53 ```|``` \u5de6\u53f3\u53ea\u8981\u6709\u4e00\u4e2a $1$ \u540c\u4e0a\u3002\n\n\u82e5\u5047\u8bbe\u6240\u6709\u5b50\u4e32\u90fd\u662f\u53ef\u884c\u7684\uff0c\u5219\u53ea\u9700\u8981\u627e\u5230\u90a3\u4e9b\u4e0d\u53ef\u884c\u7684\u5b50\u4e32\u5373\u53ef \u4e5f\u5c31\u662f\u4e0a\u8ff0\u7684\u9006\u5b9a\u7406\u3002\n\n**tips\uff1a\u6bcf\u4e2a\u5b50\u4e32\u7684\u8fd0\u7b97\u7b26\u53ea\u80fd\u662f ```& |``` \u6240\u4ee5\u4e0d\u59a8\u641c\u7d22\u65f6\u641c\u7d22\u4e24\u6b21\u53ef\u4ee5\u5305\u542b\u6240\u6709\u60c5\u51b5\u7684\u6781\u7aef\u3002**\n## \u601d\u8def\n\n\u5148\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\u6811\uff0c\u8fd0\u7b97\u7b26\u5de6\u53f3\u5b69\u5b50\u662f\u8fd0\u7b97\u6570\uff0c\u503c\u4e3a\u8fd0\u7b97\u7ed3\u679c\uff0c\u8fd0\u7b97\u6570\u503c\u4e3a\u672c\u8eab\u3002\n\n\u8fdb\u884c\u641c\u7d22\uff0c\u641c\u7d22\u6574\u9897\u6811\u4e2d\u6709\u591a\u5c11\u683c\u5f0f\u7b26\u5408\u8981\u6c42\u7684\u5b50\u4e32\u3002\n\n\u8fdb\u884c\u4e24\u6b21\u641c\u7d22\uff0c\u51cf\u53bb\u6811\u4e2d\u4e0d\u7b26\u5408\u7684\u5b50\u4e32\u6570\u3002\n## Main std\n#### \u5efa\u6811\uff1a\n```cpp\nchar s;\ncin>>s;\nif(s=='0'||s=='1'){\n\tstk.push(++cnt);\n\tnode[cnt]={0,0,s-'0'}; //\u8fd0\u7b97\u6570\u8282\u70b9\u662f\u53f6\u7ed3\u70b9\u4e14\u503c\u4e3a\u672c\u8eab\u3002\n}\nelse{\n\tint now1,now2; //\u53d6\u51fa\u9876\u90e8\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u662f\u540e\u5e8f\u8f93\u5165\u3002\n\tnow1=stk.top();\n\tstk.pop();\n\tnow2=stk.top();\n\tstk.pop();\n\tstk.push(++cnt); //\u521b\u5efa\u4e00\u4e2a\u8fd0\u7b97\u7b26\u8282\u70b9\u3002\n\tnode[cnt]={now1,now2,s};\n}\n```\n\n#### \u9884\u641c\u7d22\uff1a\n```cpp\nvoid Pre(int x){ //\u641c\u7d22\u6240\u6709\u65b9\u6848\u9884\u5904\u7406\u3002\n\tif(x==0)return;\n\tif(!node[x].lc&&!node[x].rc){\n\t\tval[x]=node[x].v;\n\t\treturn ;\n\t} //\u5982\u679c\u662f\u8fd0\u7b97\u6570\u8282\u70b9\u5219\u505c\u6b62\uff0c\u4e14\u503c\u4e3a\u672c\u8eab\u3002\n\tPre(node[x].lc); //\u6839\u5de6\u53f3\u7684\u5148\u5e8f\u904d\u5386\u3002\n\tPre(node[x].rc);\n\tans++; //\u5047\u8bbe\u5b50\u4e32\u53ef\u884c\u3002\n}\n```\n\n#### \u641c\u7d22\u5168\u662f ```&``` \u7684\u4e0d\u53ef\u884c\u53d1\u6848\n```cpp\nvoid dfsAnd(int x){ //\u641c\u7d22\u6240\u6709 ? \u4e3a & \u7684\u65b9\u6848\u3002\n\tif(x==0)return ;\n\tif(!node[x].lc&&!node[x].rc)return;\n\t //\u56e0\u4e3a\u8981\u5148\u6c42\u51fa\u8fd0\u7b97\u7b26\u7684\u5b50\u8282\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u8981\u5148\u7b97\u5230\u5e95\n\tdfsAnd(node[x].lc);\n\tdfsAnd(node[x].rc);\n\tif(node[x].v=='|')val[x]=val[node[x].lc]||val[node[x].rc]; //\u672c\u8eab\u662f | \u8fd0\u7b97\u3002\n\telse val[x]=val[node[x].lc]&&val[node[x].rc]; //\u672c\u8eab\u662f & \u6216 ? \u5047\u8bbe\u662f & \u540e\u8fd0\u7b97\u3002\n\tif(val[x]==1)ans--; //\u8bf4\u660e && \u4e24\u8fb9\u90fd\u662f 1 \u4e0d\u662f\u53ef\u884c\u65b9\u6848\u3002\n}\n```\n**\u641c\u7d22 ```|``` \u4e0e\u4e0a\u76f8\u4f3c\uff0c\u53cd\u8f6c\u5373\u53ef\u3002**\n\n\u7136\u540e\u5c31\u8f93\u51fa\u7ed3\u679c\u5373\u53ef\u3002\n\n\u795d\u5927\u5bb6\u65e9\u65e5\u901a\u8fc7\u3002\n\n\n",
        "postTime": 1672940571,
        "uid": 381806,
        "name": "Binaer_baka",
        "ccfLevel": 4,
        "title": "P7941 \u9898\u89e3"
    }
]