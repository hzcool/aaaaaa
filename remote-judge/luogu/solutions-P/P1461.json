[
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u771f\u7684\u6709\u4e00\u70b9\u610f\u601d\uff0c\u672c\u6765\u770b\u4e0d\u61c2\u9898\u76ee\uff0c\u540e\u9762\u5c31\u7a81\u7136\u660e\u767d\u4e86\u53ea\u662f\u6c42\u51e0\u4e2aN\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u7136\u540e\u8981\u6c42\u4e8c\u8fdb\u5236\u6570\u4e24\u4e24\u4e4b\u95f4\u4e0d\u540c\u7684\u4f4d\u6570\u5fc5\u987b\u8981\u5927\u4e8e\u7b49\u4e8eD\uff0c\u7136\u540e\u5982\u679c\u6709\u591a\u7ec4\u89e3\u6cd5\u7684\u8bdd\u5c31\u53d6\u5c0f\u7684\u90a3\u4e2a\u3002\u4f46\u662f\u8fd9\u91cc\u6211\u8981\u9686\u91cd\u7684\u4ecb\u7ecd\u4e00\u4e2a\u51fd\u6570\\_\\_builtin\\_popcount()\u5b83\u53ef\u4ee5\u7edf\u8ba1\u8fd9\u4e2a\u6570\u8f6c\u5316\u4e3a\u4e8c\u8fdb\u5236\u6570\u4e2d\u4e00\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u53ea\u8981\u4ea6\u6216\u4e00\u4e0b\uff0c\u518d\u8c03\u7528\u8fd9\u4e2a\u795e\u5947\u7684\u51fd\u6570\uff0c\u5c31\u8fc7\u4e86\u3002\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int maxn=70;\nint n,b,d,ans[maxn],len;\nint main()\n{\n    scanf(\"%d%d%d\",&n,&b,&d);\n    len++;\n    ans[len]=0;\n    int i=1;\n    while(len<n)\n    {\n        bool flag=false;\n        for(int j=len;j>=1;j--)\n        if(__builtin_popcount(ans[j]^i)<d)//\u548c\u4e4b\u524d\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u8981\u6bd4\u8f83\n        {\n            flag=true;\n            break;\n        }\n        if(!flag)\n        {\n            len++;\n            ans[len]=i;\n        }\n        i++;\n    }\n    for(i=1;i<=len;i++)\n    {\n        printf(\"%d \",ans[i]);\n        if(i%10==0)cout<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1502949189,
        "uid": 20059,
        "name": "ylsoi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "#\u770b\u5230\u4e0b\u9762Pascal\u7684\u53ea\u6709\u4e00\u4e2a\uff0c\u800c\u4e14\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u6765\u8865\u4e00\u4e2a#\n\n##\u5176\u5b9e\u8fd9\u9053\u9898\u8fd8\u662f\u86ee\u6709\u610f\u601d\u7684\u3002##\n\n###\u6211\u7684\u601d\u8def\u662f\u76f4\u63a5\u66b4\u641c\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u4e0e\u524d\u9762\u7684\u6bcf\u4e2a\u6570\u5224\u65ad\uff0c\u5982\u679c\u6d77\u660e\u8ddd\u79bb>=D\uff0c\u5219\u6ee1\u8db3\u8981\u6c42\u3002###\n\n##\u7136\u540e\u600e\u4e48\u6c42\u6d77\u660e\u8ddd\u79bb\u5462\uff1f##\n\n#\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u7528\u4f4d\u8fd0\u7b97\u5566\uff0c\u5148xor\u51fa\u6765\uff0c\u7edf\u8ba1\u7ed3\u679c\u6709\u51e0\u4e2a1\u5c31\u884c\u4e86#\n\n\u53ef\u601cPascal\u6ca1\u6709\u795e\u5947\u7684\u5e93\u51fd\u6570\u3002\n\n\u7edf\u8ba1\u6709\u51e0\u4e2a1\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u4f46\u6211\u89c9\u5f97\u6bd4\u8f83\u5feb\u7684\u4e00\u79cd\u65b9\u6cd5\u662fx-lowbit(x)\u4e5f\u5c31\u662fx-(x and (-x))\u3002\n\n\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528shl\u548c\u4e0e\u8fd0\u7b97\u5224\u65ad\u6bcf\u4e00\u4f4d\u3002\n\n\u63a5\u4e0b\u6765\u5949\u4e0a\u6211\u90a3\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n\n```cpp\nvar\n  n,b,d,i,j,r:longint;\n  a:array[0..1000]of longint; //\u5b58\u50a8\u6d77\u660e\u7801\nfunction count(x:longint):longint; //\u7edf\u8ba1x\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570\nbegin\n  count:=0;\n  while x>0 do \n    begin\n      dec(x,x and (-x)); //\u628a\u6700\u540e\u4e00\u4e2a\u201c1\u201d\u5220\u53bb\n      inc(count); //\u52a0\u4e00\u4e2a\n    end;\nend;\nfunction check(x:longint):boolean; //\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u8981\u6c42\uff08\u6d77\u660e\u8ddd\u79bb>=D\uff09\nvar\n  i:longint;\nbegin\n  for i:=1 to r do \n    if count(x xor a[i])<d then exit(true);\n  exit(false);\nend;\nbegin\n  readln(n,b,d); r:=0;\n  for i:=0 to 1 shl b-1 do //b\u7528\u6765\u9650\u5236\u4f4d\u6570\n    begin\n      if check(i) then continue;\n      inc(r); a[r]:=i; //\u65b0\u7684\u4e00\u4e2a\u6d77\u660e\u7801\n      if r=n then break; //\u4e2a\u6570\u5230\u4e86\u5c31\u9000\u51fa\n    end;\n  for i:=1 to n do \n    if i mod 10=0 then writeln(a[i]) else write(a[i],' '); //\u683c\u5f0f\u8fd8\u662f\u6709\u70b9\u5751\u7684\uff0c\u5341\u4e2a\u4e00\u884c\u8f93\u51fa\nend.\n\n```",
        "postTime": 1503970706,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u9898\u89e3by:redbag\n\nAC\u8bb0\u5f55\uff1ahttp://www.luogu.org/record/show?rid=780846\n\n\u539f\u9898\u89e3\u5730\u5740\uff1ahttp://redbag.duapp.com/?p=1177\n\n\u6211\u7684\u5c0f\u5c4b\uff1ahttp://redbag.duapp.com/\n\n\u6b22\u8fce\u6765\u8e29\uff01\n\n\n\u5176\u5b9e\u5c31\u662f\u679a\u4e3e\u3002\u6211\u5f00\u59cb\u4e0d\u77e5\u9053b\u5e72\u561b\u7528\u7684\u540e\u6765\u624d\u53d1\u73b0b\u662f\u7528\u6765\u9650\u5236\u679a\u4e3e\u8303\u56f4\u7684\uff1f\u5176\u5b9e\u81ea\u5df1\u53ef\u4ee5\u5f00\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u3002\u5f53\u7136\u8fd9\u9898\u4e5f\u53ef\u4ee5\u7528dfs\uff0c\u4e0d\u8fc7\u6ca1\u5fc5\u8981\u3002\n\n\n\u9898\u76ee2\u5927\u5751\u70b9\uff1b\n\n\n1.\u4e24\u4e24\u7f16\u7801\u4e4b\u95f4\u81f3\u5c11\u6709 D \u4e2a\u5355\u4f4d\uff0c\u610f\u601d\u662f\u6d77\u660e\u8ddd\u53ef\u4ee5>=D\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f==D\n\n\n2.\u8f93\u51fa\u5341\u4e2a\u5c31\u8981\u6362\u884c\uff0c\u800c\u4e14\u6bcf\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u4e4b\u524d\u4e0d\u80fd\u52a0\u7a7a\u683c\u3002\n\n\n\u6d77\u660e\u8ddd\u7684\u8bdd\u6709\u4e24\u79cd\u65b9\u5f0f\u5224\u65ad\uff0c\u7b2c\u4e00\u79cd\u662f\u7528\u4f4d\u8fd0\u7b97\uff0c\u4e0d\u4f1a\u4f4d\u8fd0\u7b97\u4e4b\u7c7b\u7684\u81ea\u884c\u767e\u5ea6\uff0c\u4e5f\u5c31\u662f\u6211\u7684\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6bd4\u8f83\u7b80\u6d01\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u697c\u4e0b\u7684\u65b9\u6cd5\uff0c\u7528\u5b57\u7b26\u4e32\uff0c\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\uff0c\u4f46\u662f\u5199\u8d77\u6765\u4e0d\u592a\u65b9\u4fbf\u3002\n\n\n                 \n```cpp\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm> \n#define LL unsigned long long   \nusing namespace std;\nint n;//n\uff1a\u8981\u6c42\u7684\u4e2a\u6570\nint d,b;//d\u8ddd\u79bb,b\u4f4d \nint k;//\u5b58\u76ee\u524d\u7f16\u7801\u4e2a\u6570 \nint i,j;//\u5faa\u73af\u63a7\u5236\u53d8\u91cf \nint a[65];//\u5b58\u7ed3\u679c \nint find(int x,int y)//\u5bfb\u627e\u8ddd\u79bb\uff0c\u7528\u4f4d\u8fd0\u7b97 \n{\n    int g=x^y;//\u76f8\u540c\u4f4d\u4e0d\u540c\u5219\u4e3a1\uff0c\u76f8\u540c\u5219\u4e3a0\u3002\n    int s=0;//\u5b581\u7684\u4e2a\u6570 \n    while (g!=0)//\u627e1\u7684\u4e2a\u6570 \n    {\n        if (g%2==1) s++;//\u7edf\u8ba1\n        g/=2; \n    } \n    return s;\n} \nint main() \n{\n    freopen(\"hamming.in\",\"r\",stdin);\n    freopen(\"hamming.out\",\"w\",stdout); \n    scanf(\"%d%d%d\",&n,&b,&d);\n    k=1;\n    a[k]=0;\n    int hehe=1<<b; \n    while (k<n)\n        for (i=a[k]+1/*\u4e00\u5b9a\u8981\u6bd4\u4e0a\u4e00\u4e2a\u6570\u5927*/;i<=hehe;i++)\n        {\n            if (find(a[k],i)>=d)//\u6ee1\u8db3\u6761\u4ef6\n            {\n                int he=1;//\u6807\u8bb0\u7528\n                for (j=1;j<=k-1;j++)//\u7528a[k]\u4e0e\u4e4b\u524d\u7684\u90fd\u5224\u65ad\u4e00\u6b21 \n                if (find(a[j],i)<d)\n                {\n                    he=0;//\u6807\u8bb0\u8be5\u6570\u4e0d\u7b26\u5408\u6761\u4ef6 \n                    break;\n                }\n                if (he==1)//\u7b26\u5408\u6761\u4ef6 \n                {\n                    k++;//\u8ba1\u6570 \n                    a[k]=i;//\u50a8\u5b58\n                    break;\n```\n}//\u7b26\u5408\u6761\u4ef6\u7684\u8bdd\u8df3\u51fa\n```cpp\n            }\n        }   \n    printf(\"%d\",a[1]);\n    for (int ii=2;ii<=n;ii++)\n    {\n        if (ii%10!=1)printf(\" %d\",a[ii]);else printf(\"%d\",a[ii]);\n        if (ii%10==0) printf(\"\\n\");\n    }\n    if (n%10!=0) printf(\"\\n\");\n        return 0;\n}\n```",
        "postTime": 1468721029,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u9047\u5230\u8fd9\u4e2a\u9898\uff0c\u7b2c\u4e00\u53cd\u5e94\u76f4\u63a5\u66b4\u641c\n\n\n1\u3001\u4ece\u5df2\u6709\u7b54\u6848\u6700\u540e\u4e00\u4e2a\u6570\u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u4e0e\u524d\u9762\u7684\u6bcf\u4e2a\u6570\u5224\u65ad\uff0c\u5982\u679c\u6bcf\u4e2a\u6d77\u660e\u8ddd\u79bb\u90fd>=d\uff0c\u5219\u6ee1\u8db3\u8981\u6c42\u3002\n\n2\u3001\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u600e\u4e48\u6c42\u6d77\u660e\u8ddd\u79bb\u4e86\u3002\n\n\n\u6bd4\u5982\u6211\u4eec\u8981\u6c42\u6837\u4f8b\u4e2d7\u548c25\u7684\u6d77\u660e\u8ddd\u79bb\n\n ![](https://cdn.luogu.com.cn/upload/pic/7645.png) \n\n ![](https://cdn.luogu.com.cn/upload/pic/7646.png) \n\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline bool judge(int x,int y)\n{\n    int tmp=x^y,anss=0;//anss\u8868\u793a\u6d77\u660e\u7801\n    //\u2018^\u2019\u4e3a\u6309\u4f4d\u5f02\u6216\u7b26\u53f7\uff0c\u5728\u4e8c\u8fdb\u5236\u5185\uff0c\u5982\u679c\u4e24\u4e2a\u4e0d\u4e00\u6837\u5219\u4e3a1\uff0c\u4e00\u6837\u5219\u4e3a0\uff08\u4f8b\uff1a1100101^1011001=0100100\uff09\n    while(tmp>0)\n    {\n        if(tmp%2==1)anss++;//\u8fd9\u4e00\u4f4d\u4e3a1\uff08\u5373\u8fd9\u4e24\u4f4d\u4e0d\u4e00\u6837\uff09\u5219anss++\uff0c\n        tmp>>=1;//\u5411\u53f3\u79fb\u4e00\u4f4d\n    }\n    if(anss>=d)return true;//\u5982\u679c\u6d77\u660e\u7801>=d\uff0c\u5219\u8fd4\u56de\u771f\n    else return false;\n}\n```\n3\u3001\u6700\u540e\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\n\n\u4ee3\u7801\u9644\u4e0a\uff1a\n\n\uff08PS\uff1a\u81ea\u52a8\u5ffd\u7565\u201cinline\u201d\u3001\u201cregister\u201d\u7b49\u5b57\u6837\uff0c\u636e\u8bf4\u662f\u6709\u52a0\u901f\u6548\u679c\u7684\uff0c\u4f46\u597d\u50cf\u5df2\u88ab\u8bc1\u4f2a\uff0c\u53ea\u662f\u672c\u4eba\u4e60\u60ef\u6253\u800c\u5df2\uff09\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<string>\n#include<cstdio>\nusing namespace std;\n#define rint register int\ninline void read(int &x)//\u8bfb\u5165\u4f18\u5316\n{\n    x=0;int w=1;char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')ch=getchar();\n    if(ch=='-')w=-1,ch=getchar();\n    while(isdigit(ch))x=(x<<3)+(x<<1)+(ch^'0'),ch=getchar();\n    x=x*w;\n}\nint n,b,d,ans[80],e;//n\uff0cb\uff0cd\uff0c\u5206\u522b\u8868\u793a\u9898\u610f\u4e2d\u7684n\uff0cb\uff0cd\u3002ans[]\u5b58\u7b54\u6848\uff0ce\u4e3a\u7b54\u6848\u6570\ninline bool judge(int x,int y)\n{\n    int tmp=x^y,anss=0;//anss\u8868\u793a\u6d77\u660e\u7801\n    //\u2018^\u2019\u4e3a\u6309\u4f4d\u5f02\u6216\u7b26\u53f7\uff0c\u5728\u4e8c\u8fdb\u5236\u5185\uff0c\u5982\u679c\u4e24\u4e2a\u4e0d\u4e00\u6837\u5219\u4e3a1\uff0c\u4e00\u6837\u5219\u4e3a0\uff08\u4f8b\uff1a1100101^1011001=0100100\uff09\n    while(tmp>0)\n    {\n        if(tmp%2==1)anss++;//\u8fd9\u4e00\u4f4d\u4e3a1\uff08\u5373\u8fd9\u4e24\u4f4d\u4e0d\u4e00\u6837\uff09\u5219anss++\uff0c\n        tmp>>=1;//\u5411\u53f3\u79fb\u4e00\u4f4d\n    }\n    if(anss>=d)return true;//\u5982\u679c\u6d77\u660e\u7801>=d\uff0c\u5219\u8fd4\u56de\u771f\n    else return false;\n}\ninline bool add(int x)\n{\n    for(rint i=1;i<=e;i++)\n        if(judge(x,ans[i])==0)//\u5982\u679c\u6b64\u6570\u4e0e\u5df2\u6709\u7b54\u6848\u4e2d\u4efb\u4f55\u4e00\u6570\u4e0d\u7b26\u5408\uff0c\u5219\u8fd4\u56defalse\n            return false;\n    return true;//\u5982\u679c\u90fd\u7b26\u5408\u5219\u8fd4\u56detrue\n}\nint main()\n{\n    read(n);read(b);read(d);\n    b=1<<b;//\u628a1\u5de6\u79fbb\u4f4d\n    ans[++e]=0;\n    while(e<n)//\u5f53\u5df2\u6709\u7684\u6570\u4e0d\u8d85\u8fc7n\u65f6\n        for(rint i=ans[e]+1;i<=b;i++)//\u4ece\u5df2\u6709\u7b54\u6848\u6700\u540e\u4e00\u4e2a\u6570\u5f00\u59cb\u679a\u4e3e\uff0c\u4e14\u6570\u7684\u7f16\u7801<=b\u4f4d\n            if(add(i))\n                {ans[++e]=i;break;}\n    for(rint i=1;i<=e;i++)\n        printf(\"%d%c\",ans[i],i%10==0?'\\n':' ');//\u4f9d\u6b21\u8f93\u51fa\u6bcf\u4e2a\u6570\uff0c\u5982\u679c\u662f10\u7684\u500d\u6570\u5219\u8f93\u51fa\u6362\u884c\n    return 0; \n}\n```",
        "postTime": 1504099635,
        "uid": 47062,
        "name": "zengqinyi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "# **\u89e3\u9898\u6b65\u9aa4**\n### 1.\u8d77\u59cb\uff08\u8d2a\u5fc3\u601d\u60f3\n\n\u56e0\u4e3a\u6211\u4eec\u8981\u5c3d\u91cf\u7f29\u5c0f\u8fd9\u4e9b\u7b26\u5408\u6761\u4ef6\u7684\u6570\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u6570\u4e3a\u96f6\u65e2\u53ef\uff08\u5316\u4e3a\u4e8c\u8fdb\u5236\u5168\u90e8\u4e3a\u96f6\uff09\n\n### 2.\u5927\u4f53\u65b9\u6cd5\n\n\u518d\u770b\u770b\u6570\u636e\u8303\u56f4\uff0c\n\n#### 1<=B<=8\n\n### 1<=B<=8\n\n## 1<=B<=8\n\n\u8fd9~~\u6697\u793a~~\u660e\u793a\u4e86\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u66b4\u529b\u5faa\u73af\u679a\u4e3e\u3010O(2^8)\u3011\u5faa\u73af\u6bcf\u4e00\u4e2a\u6570\uff0c\u5728\u5c06\u8fd9\u4e2a\u6570\u5bf9\u7b54\u6848\u6570\u7ec4\u5185\u6240\u6709\u6570\u90fd\u5224\u65ad\u4e0b\u662f\u5426\u7b26\u5408\u5deeD\u4f4d\u6216D\u4f4d\u4ee5\u4e0a\u5c31\u53ef\u4ee5\u4e86\n\n### 3.\u5982\u4f55\u7b97\u51fa\u6d77\u660e\u8ddd\u79bb\uff1f\n\n#### 3.1 \u5f02\u6216\n\n    1^1=0    1^0=1\n\n    0^1=1    0^0=0\n\n    \u5728C++\u4e2d\u7684\u5f02\u6216\u6307\u7684\u662f\u6309\u4f4d\u5f02\u6216\uff0c\u4e5f\u5c31\u662f\u9010\u4f4d\u5f02\u6216\n\n    eg.6^4=?\n\n     1 1 0=====>6\n\n     1 0 0=====>4\n    __________\n\n     0 1 0=====>2\n\n####     \u6240\u4ee5 \u67096^4=2\n\n####      \u4e0d\u96be\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u6765\u5b58\u653e\u4e24\u4e2a\u5f85\u6bd4\u8f83\u6570\u7684\u5f02\u6216\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u4e24\u8005\u4e0d\u540c\u4f4d\u6570\u4e2a\u6570\uff0c\u5c31\u5bf9\u90a3\u4e2a\u6570\u8ba1\u7b971\u7684\u4f4d\u4e2a\u6570\u5c31\u884c\u3002\n\n\n\n#### 3.2 \u53d6\u51fa\u5f53\u524d\u4f4d\n\n    \u5bf9\u4e8e\u4e00\u4e2a\u5341\u8fdb\u5236\u6570x\uff0cx&1\u5c31\u662f\u5224\u65ad\u6700\u540e\u4e00\u4f4d\u4e3a1\u62160\u7684\u4e00\u4e2a\u5e03\u5c14\u5f0f\n\n    \u5047\u8bbe\u6700\u540e\u4e00\u4f4d\u662f1\uff0c\u90a3\u4e48\n\n        \u2026\u2026\u2026\u20261\n\n    &  000001\n\n------------------------\n\n       000001\n\n####     \u53ef\u5f97\uff0cx&1\u4e3a\u771f\u65f6\uff0cx\u6700\u540e\u4e00\u4f4d\u662f1\uff1b\u6613\u5f97\uff0c\u4e3a\u5047\u65f6\u5219\u4e3a0\n\n\n\n#### 3.3 \u53d6\u51fa\u7b2ci\u4f4d\n\n    \u4f7f\u7528\u53f3\u79fb\u7b26\u53f7\u201c>>\u201d\n\n    \">>\"\u8868\u793a\u5c06\u4e8c\u8fdb\u5236\u6570\u6700\u540e\u51e0\u4f4d\u53bb\u6389\uff0c\u4e8e\u662f\u5224\u65ad\u5012\u6570\u7b2ck\u4f4d\u5c31\u53ef\u4ee5\u5982\u4e0b\uff1a\n```cpp\nif((x>>k)&1) cnt++;     \n```\n\n### \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u6211\u662f\u5206\u754c\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n## AC\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,b,d;\nint a[70],tot=1;\nint dis(int x,int y)\t//\u5224\u65ad\u8ddd\u79bb \n{\n    int s=x^y,cnt=0;\t//\u5148\u5f02\u6216\u6c42\u51fa\u5224\u65ad\u503c \n    while(s)\n    {\n        cnt+=(s&1);\t\t//\u7edf\u8ba11\u7684\u4e2a\u6570 \n        s>>=1;\t\t\t//\u5bfb\u627e\u4e0b\u4e00\u4f4d \n    }\n    return cnt;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&b,&d);\n    int Inf=(1<<b);\t\t//\u8fb9\u754c(\u5de6\u79fb\u6839\u636e\u4e0a\u9762\u8bb2\u7684\u9886\u609f\u4e0b) \n    int i;\n    for(i=a[tot]+1;i<=Inf;++i) //\u679a\u4e3e \n    {\n        if(dis(a[tot],i)>=d)\n        {\n            bool flg=1;\n            for(int j=1;j<tot;++j)\t//\u8ddf\u6bcf\u4e00\u4e2a\u6570\u7ec4\u91cc\u7684\u6570\u4e2d\u5224\u65ad \n                if(dis(a[j],i)<d) {flg=0;break;}\n            if(flg) a[++tot]=i;\n            if(tot>=n) break;\t//\u627e\u5230n\u4e2a\u5f39\u51fa\u7ed3\u675f \n        }\n    }\n    for(int i=1;i<=n;++i){\n        printf(\"%d\",a[i]);\n        if(i%10) printf(\" \");\n        else printf(\"\\n\");\t\t//\u4e00\u5b9a\u8981\u8bb0\u5f97\u6362\u884cQWQ \n    }\n    return 0;\n}\n```",
        "postTime": 1564411723,
        "uid": 71960,
        "name": "\u9ec4\u6bdb\u732b_HYX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u8865\u5145\u8bf4\u660e\u4e00\u4e0b\u697c\u4e0b\u7684\u9898\u89e3\n\n\u5bf9\u4e8e\u4f4d\u8fd0\u7b97\u6765\u8bf4\uff08\u4ee5\u4e0b\u8bb2\u5230\u7684\u6570\u4e00\u5f8b\u6309\u4e8c\u8fdb\u5236\u7b97\uff09\n\n\u5224\u65ad\u4e00\u4e2a\u6570x\u7684\u672b\u5c3e\u662f\u4e0d\u662f1\uff0c\u53ef\u4ee5\u7528x&1\u6765\u505a\uff0c\u7ed3\u679c\u4e3a1\u5c31\u662fx\u672b\u5c3e\u4e3a1\uff0c\u53cd\u4e4b\uff0cx\u672b\u5c3e\u4e3a0\uff1b\n\n\u4e0e\u4f4d\u5de6\u79fb\u914d\u5408\u53ef\u4ee5\u8fbe\u5230\u697c\u4e0b\u9898\u89e3\u7684\u6548\u679c\uff1b\n\n\u6838\u5fc3\u4ee3\u7801\u4e0e\u697c\u4e0b\u9898\u89e3\u53ea\u6709\u4e00\u70b9\u4e0d\u540c\uff1a\n\n```cpp\nint hamming(int x,int y){\n    int k=x^y,ans=0;\n    while (k>0){\n        ans+=k&1;//\u5c31\u662f\u8fd9\u91cc^-^\n        k>>1;\n    }\n    return ans;\n}\n```\n\u4f46\u662f\uff01\n\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8bf4\u6bd4\u697c\u4e0b\u7684\u8981\u597d\u2026\u2026\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nint hamming(int x,int y){\n    int k=x xor y,ans=0;\n    while (k>0){\n        ans++;\n        k-=k&(-k);\n    }\n    return ans;\n}\n```\n\u4e3a\u4ec0\u4e48\u8bf4\u6bd4\u697c\u4e0b\u7684\u8981\u597d\u5462\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u5faa\u73af\u6b21\u6570\u5c31\u662fk\u4e2d1\u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u662fk\u7684\u4f4d\u6570\uff1b\n\u53ef\u80fd\u8fd9\u70b9\u4f18\u5316\u7a0b\u5ea6\u4e0d\u5927\uff0c\u5f53\u6570\u636e\u91cf\u8db3\u591f\u5927\u65f6\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u4f46\u662f\u6700\u574f\u60c5\u51b5\u548c\u697c\u4e0b\u662f\u5dee\u4e0d\u591a\u7684\n\n\u89e3\u91ca\u4e00\u4e0bk&(-k)\uff0c\u7ed3\u679c\u5c31\u662f\u53bb\u6389k\u53f3\u8d77\u7b2c\u4e00\u4e2a1\u7684\u5de6\u8fb9\u90e8\u5206\uff1b\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5e26\u7b26\u53f7\u6574\u578b\uff0c-k\u7684\u7ed3\u679c\u5c31\u662f\u628ak\u7684\u7b26\u53f7\u4f4d\u53d6\u53cd\u540e\u7684\u8865\u7801\uff1b\n\n\u4e3e\u4e24\u4e2a\u4f8b\u5b50\uff1a\u5f53k=00010101\u65f6\uff0c-k=11101011\uff1b\n\n         k=00010101\n\n       -k=11101011\n\n------------------\n\nk&(-k)=00000001\n\n\u5f53k=01001000\u65f6\uff0c-k=10110111\uff1b\n\n         k=01001000\n\n       -k=10111000\n\n------------------\n\nk&(-k)=00001000\n\n\u4e5f\u5c31\u662f\u8bf4k-=k&(-k)\u5c31\u53ef\u4ee5\u505a\u5230\uff0c\u53bb\u6389k\u4e2d\u6700\u540e\u4e00\u4e2a1\n\n\u90a3\u4e48\u8fd9\u4e2a\u4ee3\u7801\u5c31\u5f88\u597d\u7406\u89e3\u4e86\n\n\u6b64\u5916\u5206\u4eab\u4e00\u4f4d\u795e\u7287\u7684\u4f4d\u8fd0\u7b97\u89e3\u6790\uff1a\n\n```cpp\n<http://www.matrix67.com/blog/archives/263>\n#include<iostream>\nusing namespace std;\nint n,b,d,a[66],num=0,k=0;\nbool is_ok=0;\nint hamming(int x,int y){\n    int k=x xor y,ans=0;\n    while (k>0){\n        ans++;\n        k-=k&(-k);\n    }\n    return ans;\n}\nint main(){\n    cin>>n>>b>>d;\n    for(;k<n;){\n        is_ok=1;\n        for (int i=1;i<=k;i++)\n            if (hamming(a[i],num)<d){\n                is_ok=0;\n                break;\n            }\n        if (is_ok) a[++k]=num;\n        num++;\n    }\n    while (k--){\n        cout<<a[n-k]<<\" \";\n        if ((n-k)%10==0) cout<<endl;\n    }\n}\n```",
        "postTime": 1509267057,
        "uid": 24835,
        "name": "\u8096\u6069Sean",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "```cpp\n###//\u4f4d\u8fd0\u7b97+\u538b\u884c\n#include<bits/stdc++.h>\nusing namespace std;\nint ans[257],cnt,n,b,d;\ninline bool check(int x,int y){\n    int z=x^y,tot=0;//\u8ba1\u7b97\u4e24\u4e2a\u6570\u7684\u76f8\u540c\u4f4d\u4e0a\u7684\u60c5\u51b5\n    do\n        if(z&1) tot++;//\u5982\u679c\u672b\u4f4d\u4e3a0\n    while(z>>=1);//\u68c0\u67e5\u4e0b\u4e00\u4f4d\n    return tot>=d;\n}\ninline bool exe(int tar){\n    for(int i=1;i<=cnt;i++)//\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u5728\u4e8e\u7b97\u6cd5\u6bcf\u6b21\u679a\u4e3e\u5e76\u68c0\u67e5\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7801\u65f6\u4fdd\u8bc1\u4e86\u4e4b\u524d\u7684\u52a0\u5165\u7b54\u6848\u7684\u4e8c\u8fdb\u5236\u7801\u5df2\u7ecf\u4e24\u4e24\u4e92\u67e5\u8fc7\n        if(!check(ans[i],tar)) return false;//\u6240\u4ee5\u6bcf\u6b21\u5bf9\u65b0\u6570\u636e\u68c0\u67e5\u65f6\uff0c\u53ea\u8981\u5c06\u5176\u4e0e\u5df2\u7ecf\u52a0\u5165\u7b54\u6848\u7684\u4e8c\u8fdb\u5236\u7801\u5bf9\u6bd4\n    return true;\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&b,&d);\n    int maxn=1<<b;//\u52a0\u901f\u5faa\u73af\uff08\u5728\u4e0d\u5f00-O\u7684\u60c5\u51b5\u4e0b\uff09\n    for(int i=0;i<=maxn&&cnt<=n;i++)//\u57282^B\u8fdb\u5236\u6570\u4e0b\u6700\u5c0f\u8fd9\u53e5\u8bdd\u5176\u5b9e\u662f\u5177\u6709\u8ff7\u60d1\u6027\u7684\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f10\u8fdb\u5236\u4e0b\u6700\u5c0f\uff0c\u4e5f\u5c31\u4e0d\u7528\u8fdb\u5236\u8f6c\u6362\u4e86\n        if(exe(i)) ans[++cnt]=i;\n    for(int i=1;i<=n;i++){//DFS\u548c\u987a\u5e8f\u679a\u4e3e\u51fa\u6765\u7684\u7ed3\u679c\u5e94\u8be5\u662f\u4e0d\u7528\u6392\u5e8f\u7684\n        printf(\"%d \",ans[i]);\n        if(!(i%10)) printf(\"\\n\");//\u6ce8\u610f\u6362\u884c\n    }\n    return 0;\n}\n```",
        "postTime": 1498822581,
        "uid": 43464,
        "name": "Creeper_LKF",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u4e00\u9053\u7b80\u5355\u7684\u6a21\u62df\u9898\n\n\u505a\u6cd5\u5f88\u7b80\u5355 \u751f\u6210\u5373\u53ef\n\n\u4ec0\u4e48\uff1f\u751f\u6210\uff1f\u600e\u4e48\u751f\uff1f\n\n\u5f88\u7b80\u5355\u9e2d~\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2aA\u6570\u7ec4\u6765\u8868\u793a\u8fd9\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\uff0ca[b+1]\u4e3a\u54e8\u5175\uff0c\u53ea\u8981a[b+1]\u6ca1\u6709\u4e3a\u4e00\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728a\u7684\u4e2a\u4f4d\u52a0\u4e0a\u4e00\uff0c\u7136\u540e\u8fdb\u4f4d\uff0c\u5982\u679c\u4ed6\u548c\u524d\u9762\u7684\u6d77\u660e\u8ddd\u79bb>=d\u5373\u53ef\uff0c\u5c06\u4ed6\u52a0\u5165\u6570\u7ec4\uff0c\u6700\u540e\u8f93\u51fa\u8fd9\u4e9b\u6570\u7684\u5341\u8fdb\u5236\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,b,d,tt;\nint a[10],bb[1100][10];\nint pd()\n{\n    for(int i=1;i<=tt;i++)\n    {\n            int sum=0;\n            for(int j=1;j<=b;j++)sum+=(a[j]!=bb[i][j]);\n            if(sum<d)return 0;\n    }\n    return 1;\n}//\u5224\u65ad\u4e0e\u524d\u9762\u6570\u7684\u6d77\u660e\u8ddd\u79bb\u662f\u5426\u6ee1\u8db3\u8981\u6c42\nint main()\n{\n    cin>>n>>b>>d;\n    tt=1;\n    while(!a[b+1])//\u54e8\u5175\n    {\n        a[1]++;\n        for(int i=1;i<=b;i++)\n        {\n            a[i+1]+=a[i]/2;\n            a[i]%=2;\n        }//\u8fdb\u4f4d\n        if(pd())\n        {\n            tt++;\n            for(int i=1;i<=b;i++)bb[tt][i]=a[i];\n        }//\u52a0\u5165\u6570\u7ec4\n        if(tt==n)break;\n    }\n    for(int i=1;i<=tt;i++)\n    {\n        int x=0,s=1;\n        for(int j=1;j<=b;j++)\n        {\n            x+=bb[i][j]*s;\n            s*=2;\n        }\n        printf(\"%d \",x);\n        if(i%10==0)printf(\"\\n\");\n    }//\u8f93\u51fa\u5341\u8fdb\u5236\n    return 0;\n}\n```\n",
        "postTime": 1566950065,
        "uid": 222849,
        "name": "\u6c5f\u5c71_\u8fdc\u65b9",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "# $\\Huge\\texttt{DFS\u7206\u641c\u9898}$\n## \u76f4\u63a5\u4eae\u4ee3\u7801$:$\n```cpp\n#include<iostream>\n//#include<cstdio>\nusing namespace std;\n\nint N,B,D,maxval,nums[10000],dist[1000][1000];\n//FILE *in,*out\n//\u627e\u51faN\u4e2a\u75310\u62161\u7ec4\u6210\u7684\u7f16\u7801(1<=N<=64),\u6bcf\u4e2a\u7f16\u7801\u6709B\u4f4d(1<=B<=8),\u4f7f\u5f97\u4e24\u4e24\u7f16\u7801\u4e4b\u95f4\u81f3\u5c11\u6709D\u4e2a\u5355\u4f4d\u7684\"Hamming\u8ddd\u79bb\"(1<=D<=7)\n//maxval:\u6700\u5927\u53ef\u679a\u4e3e\u7684\u4e8c\u8fdb\u5236\u7f16\u7801(2\u7684B\u6b21\u65b9)\n//nums[i]:\u7f16\u7801\u7684\u7b2ci\u4f4d \n//dist[i][j]:i\u548cj\u7684\"Hamming\"\u8ddd\u79bb \n//FILE :#include<cstdio>,\u6700\u5feb\u6587\u4ef6\u64cd\u4f5c,\u8bfb\u53d6fscanf(),\u5199\u5165fprintf(),\u73b0\u5728\u7528\u4e0d\u5230 \n\nvoid init()\t\t\t\t\t//\u9884\u5904\u7406\u6d77\u660e\u7801\u8ddd\u79bbdist\n{\n    maxval=1<<B;\t\t\t//1<<B=2\u7684B\u6b21\u65b9 \n\tfor(int i=0;i<maxval;i++)\n     \tfor(int j=0;j<maxval;j++)\n     \t{\n     \t\tdist[i][j]=0;\n     \t\tfor(int k=0;k<B;k++)\n     \t\t\tif(((1<<k)&i)!=((1<<k)&j))\t\t\t//&:\u6309\u4f4d\u4e0e,\u7528<<(\u4f4d\u8fd0\u7b97,\u5de6\u79fb)\u53d6\u51fa\u6bcf\u4e00\u4f4d \n                //\u8fd9\u91cc\u4f18\u5148\u7ea7\u6b7b\u5751,\u8c03\u4e86\u62111\u5206\u949f,!=\u4e24\u8fb9\u4e0d\u52a0\u62ec\u53f7WA\u58f0\u4e00\u7247\n     \t\t\t\tdist[i][j]++;\n        }\n}\n\nbool dfs(int cur,int start)\n//cur:\u7f16\u7801\u4e2d\u5b58\u5728\u4e86cur\u4e2a\u5143\u7d20 \n//start:\u4ece\u7b2cstart\u4e2a\u5143\u7d20\u5411\u540e\u627e \n//\u8fd4\u56de\u503c:\u627e\u6ca1\u627e\u5230N\u4e2a\u6570 \n{\n    if(cur==N)\t\t//\u5168\u90fd\u627e\u5230\u4e86 \n    {\n        for(int i=0;i<cur;i++)\n        {\n            if(i%10)\n                cout<<' ';\t\t\t//10\u4e2a\u4e00\u7a7a\u683c \n            cout<<nums[i];\t\t\t//\u6253\u5370\u6bcf\u4e00\u4e2a\u7f16\u7801 \n            if(i%10==9||i==cur-1/*\u6b7b\u5751\u7684UVA\u6700\u540e\u8981\u6362\u884c,\u5426\u5219WA\u58f0\u4e00\u7247*/)\n                cout<<endl;\t\t\t//10\u4e2a\u4e00\u6362\u884c \n        }\n        return true;\n    }\n    for(int i=start;i<maxval;i++)\t\t//\u4ecei\u679a\u4e3e\u5230\u6700\u5927\u503c \n    {\n\t\tint ok=1;\t\t\t\t//\u53ef\u4e0d\u53ef\u4ee5\u653e\u5165\u96c6\u5408 \n        for(int j=0;j<cur;j++)\t\t//\u6bd4\u8f83 \n            if(dist[nums[j]][i]<D)\t\t//\u4f4d\u6570\u4e0d\u591f \n            {\n                ok=0;\n                break;\n            }\n        if(ok)\n        {\n            nums[cur]=i;\t\t\t//\u586b\u5165\u96c6\u5408 \n            if(dfs(cur+1,i+1))\t\t//\u5982\u679c\u627e\u5230,\u5c31\u4e0d\u7528\u7ee7\u7eed\u627e \n                return true;\n        }\n    }\n    return false;\t\t//\u8fd8\u6ca1\u627e\u5230 \n}\n\nint main()\n{\n\t//in=fopen(\"hamming.in\",\"r\");\n\t//out=fopen(\"hamming.out\",\"w\");\n     cin>>N>>B>>D;\n     init();\t\t//\u5e38\u7528\u7684\u6570\u636e\u8981\u521d\u59cb\u5316 \n     dfs(0,0);\n    return 0;\n}\n```\n",
        "postTime": 1565262848,
        "uid": 165766,
        "name": "Times_New_man",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u5229\u7528C++\u7684bitset\u65b9\u4fbf\u6bcf\u6b21\u4f4d\u64cd\u4f5c\u3002\u6bcf\u6b21\u4ece1\u679a\u4e3e\u52302^B\u6b21\u65b9\u5c06\u7b26\u5408\u6761\u4ef6\u7684\u52a0\u5165\uff0c\u6df1\u641c\u4e0b\u4e00\u5c42\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <bitset>\n#include <cstring>\n#include <cstdlib>\n#include <vector>\nusing namespace std;\n#define ull unsigned long long\nvector< bitset<8> > ans;\nbool vis[1024];\nint N,B,D;\nvoid dfs(int idx){\n    if(idx > N){ // \u5982\u679c\u641c\u5230\u5934\u4e86\n        for(int i=0;i<ans.size();++i){\n            cout<<ans[i].to_ulong()<<\" \";\n            if((i+1)%10 == 0){\n                puts(\"\");\n            }\n        }\n        exit(0); // \u7531\u4e8e\u662fDFS\uff0c\u7b2c\u4e00\u6b21\u641c\u5230\u7684\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\n    }else{\n        for(int i=0;i<=1<<(B+1);++i){ // \u6700\u591a\u53ea\u6709B\u4f4d\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u52302^B\n            if(!vis[i]){\n                vis[i] = true;\n                bitset<8> add((ull)i); // \u65b0\u5efa\u4e00\u4e2abitset\n                for(int j=0;j<ans.size();++j){\n                    bitset<8> k = add ^ ans[j];\n                    if(k.count()<D){ // \u68c0\u67e5\u6d77\u660e\u8ddd\u79bb\n                        vis[i] = false;\n                        break;\n                    }\n                }\n                if(!vis[i]) continue; // \u5982\u679c\u4e0d\u7b26\u5408\u6761\u4ef6\u76f4\u63a5\u7565\u8fc7\n                else {\n                    ans.push_back(add); // \u5426\u5219\u52a0\u5165\u7b54\u6848\n                    dfs(idx+1); // \u641c\u7d22\u4e0b\u4e00\u5c42\n                }\n                ans.pop_back(); // \u5f53\u524d\u7b54\u6848\u4e0d\u7b26\u5408\u6807\u51c6\uff0c\u820d\u6389\n                vis[i] = false;\n            }\n        }\n    }\n}\nint main(){\n    cin>>N>>B>>D;\n    dfs(1);\n    return 0;\n}\n```",
        "postTime": 1482387411,
        "uid": 14667,
        "name": "mike_he",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7b97\u6cd5\u8bb2\u7684\u5f88\u660e\u786e\u4e86\uff0c\u4f46\u662f\u4f4d\u8fd0\u7b97\u4e0a\u8fd8\u662f\u592a\u70e6\u4e86\u3002\u5728\u6b64\u8d34\u4e0a\u672c\u4eba\u4f4d\u8fd0\u7b97\u4ee3\u7801\uff0c\u4f9b\u5404\u4f4dOIER\u53c2\u8003\u3002\n\n```cpp\n#include<stdio.h>\n#include<iostream>\nusing namespace std;\nint N,Ans[128],D,B,M;\ninline bool Cmp(int x,int y)\n{\n    int s=x^y,t,Sum(0),i;\n    for(i=0;(1<<i)<=s;i++)\n    {\n        t=1<<i;\n        if(t&s)\n            Sum++;\n    }\n    return Sum<D;\n}\ninline bool Harm(int x)\n{\n    int i;\n    for(i=1;i<=M;i++)\n        if(Cmp(x,Ans[i]))\n            return 0;\n    return 1;\n}\nint main()\n{\n    int i;\n    scanf(\"%d%d%d\",&N,&B,&D);\n    for(i=0;i<(1<<(B+1))&&M<N;i++)\n        if(Harm(i))\n            Ans[++M]=i;\n    for(i=1;i<=N;i++)\n    {\n        printf(\"%d \",Ans[i]);\n        if(i%10==0)\n            puts(\"\");\n    }\n    return 0;\n}\n```",
        "postTime": 1479309886,
        "uid": 7004,
        "name": "Conical",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u679a\u4e3e\u7684\u601d\u8def\u4ece0\u5f00\u59cb\u4e00\u76f4\u5230256\u5373\u53ef\uff08\u6700\u5927\u76848\u4f4d2\u8fdb\u523611111111\u5c31\u662f256\uff09\n\n```cpp\n#include<iostream>  \n#include<cstdio>  \n#include<cstring>\nusing namespace std;  \nint N,B,D;  \nint num[266];  \n//\u4e0d\u9700\u8981\u8003\u8651\u5404\u4e2a\u6570\u5b57\u539f2\u8fdb\u5236\u6570 \u53ea\u9700\u8981\u524d\u9762\u88650\u5373\u53ef \u4f8b 1->00000001\uff087\u4f4dhamming code\uff09\nint num1(int a)\n```\n{//\u8ba1\u7b97B\u4f4d\u6570\u4e0e0\u7684\u8ddd\u79bb\uff0c\u5373B\u4f4d\u6570\u4e2d1\u7684\u4e2a\u6570\n      \n```cpp\n    int i,cnt=0;  \n    for (i=0;i<B;i++)  \n    {  \n       cnt=cnt+(a&1);  //--\u7edf\u8ba11\u7684\u4e2a\u6570 \n       a=a>>1;         //--\u4f4d\u8fd0\u7b97\u6765\u8868\u793a /2 \n    }  \n    return cnt;  \n}  \nint Hamc(int x,int c,int d)\n{  \n    int i,temp;  \n    for (i=0;i<c;i++)  \n    {  \n        temp=x^num[i];//\u5f02\u6216\u7ed3\u679c\uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97B\u4f4d\u6570x\u4e2d1\u7684\u4e2a\u6570  \n        if (num1(temp)<d)//--\u8ddd\u79bb>=d\u5373\u53ef \n          return 0;  \n    }  \n    return 1;  \n}  \nint main()  \n{   \n    scanf(\"%d%d%d\",&N,&B,&D);  \n    num[0]=0; //0\u662f\u4e00\u5b9a\u4f1a\u51fa\u73b0\u7684\u3002  \n    int vis=0;//--\u7edf\u8ba1hamming code\u6ee1\u8db3\u7684\u4e2a\u6570  \n    int i;  \n    for (i=1;i<=256;i++) //--\u679a\u4e3e \n    {  \n        if(Hamc(i,vis+1,D))   \n            num[++vis]=i;//--\u50a8\u5b58\u7b54\u6848 \n    }  \n    i=0;  \n    for(i=0;i<N;i++)//--\u679a\u4e3e\u524dN\u4e2a \n    {  \n        printf(\"%d\",num[i]);  \n        if ((i+1)%10==0||i==N-1)//--\u683c\u5f0f\u6ce8\u610f \n            printf(\"\\n\"); \n        else if (i<N-1)  \n            printf(\" \");\n    }  \n    return 0;  \n}\n```",
        "postTime": 1470540893,
        "uid": 20684,
        "name": "Ayano",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "$\\color{Red}\\text{\u4f4d\u8fd0\u7b97\u5927\u6cd5\u597d}$\n\n\n\n```cpp\n#include <cstdio>\nusing namespace std;\nint a[65],N,B,D,L,ans = 1;\nint main()\n{\n\tscanf(\"%d%d%d\",&N,&B,&D);\n\tprintf(\"%d \",0);//\u5f00\u5934\u4e00\u5b9a\u662f0\u7684\u8bf4\n\tfor(int i = 0 ;i < (1 << (B + 1) ) - 1 ; i ++)//\u679a\u4e3e\u6240\u6709\u4f4d\u6570\u4e0d\u8d85\u8fc7B\u7684\u6570\n\t{\n\t\tint Cnt = 0;\n\t\tfor(int k = 1 ;k <= ans ;k ++)//\u679a\u4e3e\u4e4b\u524d\u6240\u8bb0\u5f55\u7684\u6bcf\u4e00\u4e2a\u7f16\u7801\n\t\t{\n\t\t\tCnt = 0;//\u56e0\u4e3a\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u770b\n\t\t\tL = a[k];//\u6bcf\u4e00\u4e2a\u7f16\u7801\n\t\t\tfor(int j = 0 ;j <= B ; j ++)\n\t\t    if(((1<<j & i)&&!(1 << j & L))||(!(1<<j & i)&&(1 << j & L)))Cnt ++ ;//\u8bb0\u5f55\u6709\u591a\u5c11\u4f4d\uff08\u6709\u4e00\u4e2a\u6570\u8fd9\u4f4d\u4e3a1\uff0c\u4e14\u53e6\u4e00\u4f4d\u4e3a0\uff09\n\t\t    if(Cnt < D)break;//\u4e0d\u7b26\n\t\t}//\u6b64\u65f6Cnt \u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u56e0Cnt<D \u800c\u88abbreak\u7684\uff0c\u4e0e \u5168\u90e8\u90fd\u8d70\u4e00\u904d\u5e76\u5747\u7b26\u5408\u7684\n\t\tif(Cnt >= D )//\u5224\u5b9a\n\t\t{\n\t\t\tprintf(\"%d \",i);//\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\uff0c\u4e0d\u5fc5\u6700\u540e\u518d\u4e00\u6b21\u6027\u8f93\u51fa\u5b8c\n\t\t\ta[++ans] = i;//\u8bb0\u5f55\uff0c\u56e0\u4e3a\u8981\u548c\u540e\u6765\u8005\u76f8\u6bd4\u8f83\n\t\t\tif(ans % 10 == 0)printf(\"\\n\");//\u6bcf\u5341\u4e2a\u6570\u8f93\u51fa\u4e00\u884c\n\t\t\tif(ans == N)break;//\u8f93\u51faN\u4e2a\u6570\u540e\u5b8c\u7ed3\u6492\u82b1\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n$\\color{Red}\\text{~~\u7801\u98ce\u6e05\u4e3d~~\uff0c\u5bf9\u5427}$\n\n\u4e0d\u52a0\u6ce8\u91ca\u7684\n\n```cpp\n#include <cstdio>\nusing namespace std;\nint a[65],N,B,D,L,ans = 1;\nint main()\n{\n\tscanf(\"%d%d%d\",&N,&B,&D);\n\tprintf(\"%d \",0);\n\tfor(int i = 0 ;i < (1 << (B + 1) ) - 1 ; i ++)\n\t{\n\t\tint Cnt = 0;\n\t\tfor(int k = 1 ;k <= ans ;k ++)\n\t\t{\n\t\t\tCnt = 0;\n\t\t\tL = a[k];\n\t\t\tfor(int j = 0 ;j <= B ; j ++)\n\t\t    if(((1<<j & i)&&!(1 << j & L))||(!(1<<j & i)&&(1 << j & L)))Cnt ++ ;\n\t\t    if(Cnt < D)break;\n\t\t}\n\t\tif(Cnt >= D )\n\t\t{\n\t\t\tprintf(\"%d \",i);\n\t\t\ta[++ans] = i;\n\t\t\tif(ans % 10 == 0)printf(\"\\n\");\n\t\t\tif(ans == N)break;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1571276408,
        "uid": 116162,
        "name": "\u7fbd\u5107",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0b\u5927\u4f6c\u628a\u9898\u4e2d\u7684B\u62ff\u6765\u7528,\u5176\u5b9e\u672c\u4eba\u53d1\u73b0B\u597d\u50cf\u6beb\u65e0\u7528\u5904\u3002\n\n\u4e00\u4e2a\u6570\u8f6c\u6362\u62102^b\u8fdb\u5236\u6570\u662f\u6700\u5c0f\u7684,\u90a3\u4e48\u5b83\u8f6c\u6210\u5341\u8fdb\u5236\u80af\u5b9a\u4e5f\u662f\u6700\u5c0f\u7684\u554a\u3002\n\n\u8f93\u51fa\u7684\u5e8f\u5217\u662f\u4e00\u4e2a\u9012\u589e\u7684\u5e8f\u5217,\u6240\u4ee5\u4f60\u53ea\u8981\u4e00\u76f4\u5f80\u4e0b\u627e,\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u80af\u5b9a\u662f\u6700\u5c0f\u7684\u5566\n\n\u8fd8\u6709\u5c31\u662f\uff1a\u5982\u4f55\u5224\u65ad\u4e24\u4e2a\u6570\u5728\u4e8c\u8fdb\u5236\u4e2d\u4e0d\u540c\u7684\u4f4d\u6570\uff1f\n\n\u53ea\u8981\u5f02\u6216\u4e00\u4e0b,\u4e24\u4e2a\u4f4d\u76f8\u540c\u7684\u503c\u4e3a0,\u4e0d\u76f8\u540c\u7684\u4e3a1,\u6240\u4ee5\u53ea\u8981\u7edf\u8ba1\u4e00\u4e2a\u6570\u4e8c\u8fdb\u5236\u4e0b\u6709\u51e0\u4e2a1\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5177\u4f53\u5206\u6790\u770b\u4ee3\u7801:\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,d;\nbool b;\nint f[1010];//f[i]\u8868\u793a\u8f93\u51fa\u7684\u7b2ci\u4e2a\u6570\nbool isd(int a,int b)//\u5224\u65ad\u4e24\u4e2a\u6570\u7684\u6d77\u660e\u8ddd\u79bb\u662f\u5426\u2265d\n{\n\tint t=a^b;//\u5f02\u6216\u7684\u7b26\u53f7\u662f'^'\n\tint sum=0;//\u4e0d\u76f8\u540c\u7684\u4f4d\u6570\n\twhile(t>0){\n\t\tif(t%2==1){//\u5728\u4e8c\u8fdb\u5236\u4e0b\u662fmod 2\n\t\t\tsum++;\n\t\t}\n\t\tt>>=1;//\u53f3\u79fb\u4e00\u4f4d\u76f8\u5f53\u4e8e\u9664\u4ee52\n\t}\n\tif(sum>=d)//\u5224\u65ad\n\t\treturn true;\n\treturn false;\n}\nint main()\n{\n\tscanf(\"%d %*d %d\",&n,&d);//b\u6ca1\u6709\u7528,scanf\u4e2d%*d\u4ee3\u8868\u8f93\u5165\u7684\u503c\u4e0d\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\n\tint x=0,cnt=1;//cnt\u4ee3\u8868\u5df2\u7ecf\u9009\u7684\u6570\u7684\u4e2a\u6570,\u7b2c\u4e00\u4e2a\u662f0\n\tf[1]=0;\n\tfor(int i=1;;i++){//\u65e2\u7136\u628ab\u6254\u6389\u4e86,\u90a3\u5c31\u4e0d\u8981\u22641<<b\u4e86,\u76f4\u63a5\u4e00\u76f4\u52a0\u5230\u627e\u5230n\u4e2a\u6570\u4e3a\u6b62\n\t\tb=0;//\u8fd9\u4e2ab\u4ee3\u8868\u662f\u5426\u627e\u5230\u7b54\u6848\n\t\tfor(int j=0;j<=cnt;j++){//\u5728\u524d\u9762\u7684\u6570\u627e\n\t\t\tif(!isd(i,f[j])){//\u5982\u679c\u6d77\u660e\u8ddd\u79bb<d\n\t\t\t\tb=1;//\u6807\u8bb0\u6ca1\u6709\u627e\u5230\u7b54\u6848\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!b){//\u5982\u679c\u627e\u5230\u7b54\u6848\n\t\t\tf[++cnt]=i;//\u5b58\u50a8\u6570\n\t\t\tif(cnt==n){//\u5982\u679c\u627e\u5230\u4e86n\u4e2a\u6570\u5c31\u9000\u51fa\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){//\u8f93\u51fa\n\t\tprintf(\"%d \",f[i]);\n\t\tif(i%10==0){//\u5341\u4e2a\u4e00\u884c\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}\n```\n[~~\u7b2c\u4e00\u6b21\u5728\u9898\u89e3\u91cc\u6302blog~~](https://jiying.blog.luogu.org/)",
        "postTime": 1532587785,
        "uid": 56565,
        "name": "Stella_Yan",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u7684\u7b2c\u4e00\u4f4d\u5fc5\u5b9a\u662f0\uff0c\u56e0\u4e3a\u8fd9\u662f\u6700\u5c0f\u7684\n\n\u867d\u7136\u611f\u89c9\u8fd9\u4e00\u9898\u6709\u4e9b\u9ebb\u70e6\uff0c\u4f46\u662f\u6211\u7075\u611f\u7a81\u53d1\uff0c\u60f3\u5230\u4e86\u7528\u4e00\u4e2a\n\nf\u6570\u7ec4\u8bb0\u5f55\uff0cf[i][j]\u8868\u793ai\u7684\u4e8c\u8fdb\u5236\u548cj\u7684\u4e8c\u8fdb\u5236\u7684\u201cHamming\u8ddd\u79bb\u201d\n\n\u8fd9\u6837\u662f\u4e0d\u4f1a\u8d85\u65f6\u7684\uff0c\u56e0\u4e3a\u6700\u591a\u516b\u4f4d\uff0c\u6700\u5927\u7684\u53d8\u6210\u5341\u8fdb\u5236\u4e5f\u5c31\u662f255\n\n255^2*b*5/2+dfs\u7684\u65f6\u95f4\uff0c\u6700\u591a\u4e5f\u5c31\u662f\u5faa\u73af2000\u4e07\u6b21\u4e0d\u5230\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nint a[110],n,b,d,f[310][310],max,g[11];\nint a1[11],a2[11];\nbool bk=false;\ninline void kangtuo(int k)//\u5eb7\u62d3\u5c55\u5f00\uff0c\u6c42\u51fa\u4e8c\u8fdb\u5236k\u7684\u6bcf\u4e00\u4f4d\u6570 \n{\n\tint i=0;\n\twhile(k>0)\n\t{\n\t\ti++;g[i]=k%2;k/=2;\n\t}\n\ti++;for(i=i;i<=b;i++) g[i]=0;//\u4e0d\u8db3\u7684\u88650\uff0c\u56e0\u4e3a\u4e00\u5f00\u59cbg\u4e0d\u4e00\u5b9a\u5168\u90e8\u4e3a0\u7684\n}\ninline int find_haiming(int x,int y)//\u627ex\u548cy\uff08\u5341\u8fdb\u5236\uff09\u7684\u201cHamming\u8ddd\u79bb\u201d \n{\n\tint i,s=0;\n\tkangtuo(x);for(i=1;i<=b;i++) a1[i]=g[i];//\u8bb0\u5f55 \n\tkangtuo(y);for(i=1;i<=b;i++) a2[i]=g[i];\n\tfor(i=1;i<=b;i++)//\u6c42\u201cHamming\u8ddd\u79bb\u201d \n\t{\n\t\tif(a1[i]!=a2[i]) s++;\n\t}\n\treturn s;//\u8fd4\u56de \n}\ninline void _()//\u6c42\u6240\u6709\u6570\u548c\u5176\u4ed6\u6570\u7684\u201cHamming\u8ddd\u79bb\u201d \n{\n\tint i,j,t=1;\n\tfor(i=1;i<=b;i++)//\u6c42\u51fa\u6700\u5927\u7684\u4e8c\u8fdb\u5236\u6539\u5341\u8fdb\u5236\u7684\u5927\u5c0f\uff0cb\u662f\u56e0\u4e3a\u6709b\u4f4d\u6570 \n\t{\n\t\tmax=max+t;\n\t\tt*=2;\n\t}\n\tfor(i=0;i<=max;i++)//\u66b4\u529b\u641c\u7d22 \n\t{\n\t\tfor(j=0;j<=max;j++)\n\t\t{\n\t\t\tif(f[i][j]!=0) continue;//\u5982\u679c\u641c\u7d22\u8fc7\u4e86\uff0c\u90a3\u5c31\u4e0d\u7528\u518d\u641c\u4e86 \n\t\t\tif(i==j){f[i][j]=0;f[j][i]=0;continue;}//\u5982\u679c\u76f8\u7b49\uff0c\u5c31\u80af\u5b9a\u662f0 \n\t\t\tf[i][j]=f[j][i]=find_haiming(i,j);//\u627e\u201cHamming\u8ddd\u79bb\u201d \n\t\t}\n\t}\n}\n//\u524d\u9762\u7684\u90fd\u662f\u4f18\u5316\uff0c\u73b0\u5728\u624d\u5f00\u59cb\u6253\u771f\u6b63\u7684\u4ee3\u7801 \ninline bool pd(int k,int x)//\u5224\u65ad\u5728\u524d\u4f4d\u662f\u5426\u80fd\u653e\u4e0bx \n{\n\tint i;\n\tfor(i=1;i<=k;i++)\n\t\tif(f[a[i]][x]<d) //\u5982\u679c\u4e0d\u5230\u8fd9\u4e2a\u201cHamming\u8ddd\u79bb\u201d\uff0c\u8bb0\u5f97\u9898\u76ee\u8bf4\u662f\u95f4\u81f3\u5c11\u6709 D \u4e2a\u5355\u4f4d\uff0c\u800c\u4e0d\u662f\u521a\u597d\u7b49\u4e8e \n\t\t\treturn false;//\u8fd4\u56de\u4e0d\u884c \n\treturn true;//\u8fd4\u56de\u884c \n}\nint dfs(int k)//\u641c\u7d22\u5230\u7b2ck\u4e2a\u6570 \n{\n\tif(k==n+1)//\u641c\u7d22\u5b8c\u6bd5\u5c31\u8f93\u51fa \n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tprintf(\"%d \",a[i]);\n\t\t\tif(i%10==0) printf(\"\\n\");\n\t\t}\n\t\texit(0);\n\t}\n\telse//\u7ee7\u7eed \n\t{\n\t\tfor(int i=a[k-1]+1;i<=max;i++)//\u7b2cj\u4e2a\u81f3\u5c11\u6bd4k-1\u4e2a\u591a1 ,max\u5c31\u4e0d\u7528\u89e3\u91ca\u4e86 \n\t\t{\n\t\t\ta[k]=i;//\u8bb0\u5f55 \n\t\t\tif(pd(k-1,i)==true) //\u5982\u679c\u80fd\u653e\u7684\u8bdd\uff0c\u8bb0\u5f97\uff1a\u662fpd(k-1,i)\u800c\u4e0d\u662fpd(k,i) \n\t\t\t\tdfs(k+1);\n\t\t\ta[k]=0;//\u56de\u6eaf \n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&b,&d);//\u5f88\u7f8e\u4e3d\u7684\u4e3b\u7a0b\u5e8f \n\t_();a[1]=0;dfs(2);//a[1]\u80af\u5b9a\u662f0\uff0c\u56e0\u4e3a\u8981\u627e\u6700\u5c0f\u7684\uff0c\u4ece\u7b2c\u4e8c\u4f4d\u5f00\u59cb\u9012\u5f52 \n\treturn 0;\n}\n```",
        "postTime": 1524226933,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1461 \u3010\u6d77\u660e\u7801 Hamming Codes\u3011"
    }
]